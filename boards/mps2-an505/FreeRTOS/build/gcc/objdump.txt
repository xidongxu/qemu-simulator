
.\build\gcc/an505-qemu.elf:     file format elf32-littlearm


Disassembly of section .text:

10000000 <__Vectors>:
10000000:	38100000 	ldmdacc	r0, {}	; <UNPREDICTABLE>
10000004:	100038a5 	andne	r3, r0, r5, lsr #17
10000008:	100038f9 	strdne	r3, [r0], -r9
1000000c:	10003915 	andne	r3, r0, r5, lsl r9
10000010:	100038f9 	strdne	r3, [r0], -r9
10000014:	100038f9 	strdne	r3, [r0], -r9
10000018:	100038f9 	strdne	r3, [r0], -r9
1000001c:	100038f9 	strdne	r3, [r0], -r9
	...
1000002c:	1000386d 	andne	r3, r0, sp, ror #16
10000030:	100038f9 	strdne	r3, [r0], -r9
10000034:	00000000 	andeq	r0, r0, r0
10000038:	10003825 	andne	r3, r0, r5, lsr #16
1000003c:	100036ad 	andne	r3, r0, sp, lsr #13
10000040:	100038f9 	strdne	r3, [r0], -r9
10000044:	100038f9 	strdne	r3, [r0], -r9
10000048:	100038f9 	strdne	r3, [r0], -r9
1000004c:	100038f9 	strdne	r3, [r0], -r9
10000050:	100038f9 	strdne	r3, [r0], -r9
10000054:	100038f9 	strdne	r3, [r0], -r9
10000058:	100038f9 	strdne	r3, [r0], -r9
1000005c:	100038f9 	strdne	r3, [r0], -r9
10000060:	100038f9 	strdne	r3, [r0], -r9
10000064:	100038f9 	strdne	r3, [r0], -r9
	...

100007c0 <__do_global_dtors_aux>:
100007c0:	b510      	push	{r4, lr}
100007c2:	4c05      	ldr	r4, [pc, #20]	; (100007d8 <__do_global_dtors_aux+0x18>)
100007c4:	7823      	ldrb	r3, [r4, #0]
100007c6:	b933      	cbnz	r3, 100007d6 <__do_global_dtors_aux+0x16>
100007c8:	4b04      	ldr	r3, [pc, #16]	; (100007dc <__do_global_dtors_aux+0x1c>)
100007ca:	b113      	cbz	r3, 100007d2 <__do_global_dtors_aux+0x12>
100007cc:	4804      	ldr	r0, [pc, #16]	; (100007e0 <__do_global_dtors_aux+0x20>)
100007ce:	e000      	b.n	100007d2 <__do_global_dtors_aux+0x12>
100007d0:	bf00      	nop
100007d2:	2301      	movs	r3, #1
100007d4:	7023      	strb	r3, [r4, #0]
100007d6:	bd10      	pop	{r4, pc}
100007d8:	38000450 	stmdacc	r0, {r4, r6, sl}
100007dc:	00000000 	andeq	r0, r0, r0
100007e0:	10005de0 	andne	r5, r0, r0, ror #27

100007e4 <frame_dummy>:
100007e4:	b508      	push	{r3, lr}
100007e6:	4b03      	ldr	r3, [pc, #12]	; (100007f4 <frame_dummy+0x10>)
100007e8:	b11b      	cbz	r3, 100007f2 <frame_dummy+0xe>
100007ea:	4903      	ldr	r1, [pc, #12]	; (100007f8 <frame_dummy+0x14>)
100007ec:	4803      	ldr	r0, [pc, #12]	; (100007fc <frame_dummy+0x18>)
100007ee:	e000      	b.n	100007f2 <frame_dummy+0xe>
100007f0:	bf00      	nop
100007f2:	bd08      	pop	{r3, pc}
100007f4:	00000000 	andeq	r0, r0, r0
100007f8:	38000454 	stmdacc	r0, {r2, r4, r6, sl}
100007fc:	10005de0 	andne	r5, r0, r0, ror #27

10000800 <main_task_init>:
            counter++;
        }
    }
}

static void main_task_init(void) {
10000800:	b500      	push	{lr}
10000802:	b083      	sub	sp, #12
    static TaskHandle_t main_task = NULL;
    BaseType_t xReturn = pdPASS;
    xReturn = xTaskCreate(main_task_entry, "main_task", 2048, NULL, 1U, &main_task);
10000804:	4b0b      	ldr	r3, [pc, #44]	; (10000834 <main_task_init+0x34>)
10000806:	9301      	str	r3, [sp, #4]
10000808:	2301      	movs	r3, #1
1000080a:	9300      	str	r3, [sp, #0]
1000080c:	2300      	movs	r3, #0
1000080e:	f44f 6200 	mov.w	r2, #2048	; 0x800
10000812:	4909      	ldr	r1, [pc, #36]	; (10000838 <main_task_init+0x38>)
10000814:	4809      	ldr	r0, [pc, #36]	; (1000083c <main_task_init+0x3c>)
10000816:	f002 f80f 	bl	10002838 <xTaskCreate>
    if (xReturn == pdPASS) {
1000081a:	2801      	cmp	r0, #1
1000081c:	d006      	beq.n	1000082c <main_task_init+0x2c>
1000081e:	4601      	mov	r1, r0
        vTaskStartScheduler();
    } else {
        printf("main task create failed(%d).\r\n", (int)(xReturn));
10000820:	4807      	ldr	r0, [pc, #28]	; (10000840 <main_task_init+0x40>)
10000822:	f001 f973 	bl	10001b0c <printf>
    }
}
10000826:	b003      	add	sp, #12
10000828:	f85d fb04 	ldr.w	pc, [sp], #4
        vTaskStartScheduler();
1000082c:	f002 fb92 	bl	10002f54 <vTaskStartScheduler>
10000830:	e7f9      	b.n	10000826 <main_task_init+0x26>
10000832:	bf00      	nop
10000834:	3800046c 	stmdacc	r0, {r2, r3, r5, r6, sl}
10000838:	10005850 	andne	r5, r0, r0, asr r8
1000083c:	10000941 	andne	r0, r0, r1, asr #18
10000840:	1000585c 	andne	r5, r0, ip, asr r8

10000844 <dump_callstack>:
void dump_callstack(void) {
10000844:	b530      	push	{r4, r5, lr}
10000846:	b0c1      	sub	sp, #260	; 0x104
    unsigned int buffer[FD_STACK_DUMP_DEPTH_MAX] = {0};
10000848:	f44f 7280 	mov.w	r2, #256	; 0x100
1000084c:	2100      	movs	r1, #0
1000084e:	4668      	mov	r0, sp
10000850:	f003 f900 	bl	10003a54 <memset>
    unsigned int point = fault_dump_bm_stack_point();
10000854:	f001 fb1a 	bl	10001e8c <fault_dump_bm_stack_point>
10000858:	4604      	mov	r4, r0
    unsigned int start = fault_dump_bm_stack_start();
1000085a:	f001 fb1b 	bl	10001e94 <fault_dump_bm_stack_start>
1000085e:	4603      	mov	r3, r0
    int count = fault_dump_callstack(buffer, FD_STACK_DUMP_DEPTH_MAX, (unsigned int*)point, (unsigned int*)start);
10000860:	4622      	mov	r2, r4
10000862:	2140      	movs	r1, #64	; 0x40
10000864:	4668      	mov	r0, sp
10000866:	f001 f9c5 	bl	10001bf4 <fault_dump_callstack>
    if (count < 0) {
1000086a:	1e05      	subs	r5, r0, #0
1000086c:	db04      	blt.n	10000878 <dump_callstack+0x34>
        printf("CallStack:[ ");
1000086e:	480b      	ldr	r0, [pc, #44]	; (1000089c <dump_callstack+0x58>)
10000870:	f001 f94c 	bl	10001b0c <printf>
        for (int i = 0; i < count; i++) {
10000874:	2400      	movs	r4, #0
10000876:	e00a      	b.n	1000088e <dump_callstack+0x4a>
        printf("CallStack dump error: %d\r\n", count);
10000878:	4629      	mov	r1, r5
1000087a:	4809      	ldr	r0, [pc, #36]	; (100008a0 <dump_callstack+0x5c>)
1000087c:	f001 f946 	bl	10001b0c <printf>
10000880:	e00a      	b.n	10000898 <dump_callstack+0x54>
            printf("%08X ", buffer[i]);
10000882:	f85d 1024 	ldr.w	r1, [sp, r4, lsl #2]
10000886:	4807      	ldr	r0, [pc, #28]	; (100008a4 <dump_callstack+0x60>)
10000888:	f001 f940 	bl	10001b0c <printf>
        for (int i = 0; i < count; i++) {
1000088c:	3401      	adds	r4, #1
1000088e:	42ac      	cmp	r4, r5
10000890:	dbf7      	blt.n	10000882 <dump_callstack+0x3e>
        printf("] \r\n");
10000892:	4805      	ldr	r0, [pc, #20]	; (100008a8 <dump_callstack+0x64>)
10000894:	f001 f95a 	bl	10001b4c <puts>
}
10000898:	b041      	add	sp, #260	; 0x104
1000089a:	bd30      	pop	{r4, r5, pc}
1000089c:	10005898 	mulne	r0, r8, r8
100008a0:	1000587c 	andne	r5, r0, ip, ror r8
100008a4:	100058a8 	andne	r5, r0, r8, lsr #17
100008a8:	100058b0 			; <UNDEFINED> instruction: 0x100058b0

100008ac <test0>:
void test0(void) {
100008ac:	b508      	push	{r3, lr}
    printf("this is %s.\r\n", __func__);
100008ae:	4904      	ldr	r1, [pc, #16]	; (100008c0 <test0+0x14>)
100008b0:	4804      	ldr	r0, [pc, #16]	; (100008c4 <test0+0x18>)
100008b2:	f001 f92b 	bl	10001b0c <printf>
    dump_callstack();
100008b6:	f7ff ffc5 	bl	10000844 <dump_callstack>
    fault_dump_unalign();
100008ba:	f001 fb75 	bl	10001fa8 <fault_dump_unalign>
}
100008be:	bd08      	pop	{r3, pc}
100008c0:	10005924 	andne	r5, r0, r4, lsr #18
100008c4:	100058b4 			; <UNDEFINED> instruction: 0x100058b4

100008c8 <test1>:
void test1(void) {
100008c8:	b508      	push	{r3, lr}
    printf("this is %s.\r\n", __func__);
100008ca:	4903      	ldr	r1, [pc, #12]	; (100008d8 <test1+0x10>)
100008cc:	4803      	ldr	r0, [pc, #12]	; (100008dc <test1+0x14>)
100008ce:	f001 f91d 	bl	10001b0c <printf>
    test0();
100008d2:	f7ff ffeb 	bl	100008ac <test0>
}
100008d6:	bd08      	pop	{r3, pc}
100008d8:	1000591c 	andne	r5, r0, ip, lsl r9
100008dc:	100058b4 			; <UNDEFINED> instruction: 0x100058b4

100008e0 <test2>:
void test2(void) {
100008e0:	b508      	push	{r3, lr}
    printf("this is %s.\r\n", __func__);
100008e2:	4903      	ldr	r1, [pc, #12]	; (100008f0 <test2+0x10>)
100008e4:	4803      	ldr	r0, [pc, #12]	; (100008f4 <test2+0x14>)
100008e6:	f001 f911 	bl	10001b0c <printf>
    test1();
100008ea:	f7ff ffed 	bl	100008c8 <test1>
}
100008ee:	bd08      	pop	{r3, pc}
100008f0:	10005914 	andne	r5, r0, r4, lsl r9
100008f4:	100058b4 			; <UNDEFINED> instruction: 0x100058b4

100008f8 <test3>:
void test3(void) {
100008f8:	b508      	push	{r3, lr}
    printf("this is %s.\r\n", __func__);
100008fa:	4903      	ldr	r1, [pc, #12]	; (10000908 <test3+0x10>)
100008fc:	4803      	ldr	r0, [pc, #12]	; (1000090c <test3+0x14>)
100008fe:	f001 f905 	bl	10001b0c <printf>
    test2();
10000902:	f7ff ffed 	bl	100008e0 <test2>
}
10000906:	bd08      	pop	{r3, pc}
10000908:	1000590c 	andne	r5, r0, ip, lsl #18
1000090c:	100058b4 			; <UNDEFINED> instruction: 0x100058b4

10000910 <test4>:
void test4(void) {
10000910:	b508      	push	{r3, lr}
    printf("this is %s.\r\n", __func__);
10000912:	4903      	ldr	r1, [pc, #12]	; (10000920 <test4+0x10>)
10000914:	4803      	ldr	r0, [pc, #12]	; (10000924 <test4+0x14>)
10000916:	f001 f8f9 	bl	10001b0c <printf>
    test3();
1000091a:	f7ff ffed 	bl	100008f8 <test3>
}
1000091e:	bd08      	pop	{r3, pc}
10000920:	10005904 	andne	r5, r0, r4, lsl #18
10000924:	100058b4 			; <UNDEFINED> instruction: 0x100058b4

10000928 <test5>:
void test5(void) {
10000928:	b508      	push	{r3, lr}
    printf("this is %s.\r\n", __func__);
1000092a:	4903      	ldr	r1, [pc, #12]	; (10000938 <test5+0x10>)
1000092c:	4803      	ldr	r0, [pc, #12]	; (1000093c <test5+0x14>)
1000092e:	f001 f8ed 	bl	10001b0c <printf>
    test4();
10000932:	f7ff ffed 	bl	10000910 <test4>
}
10000936:	bd08      	pop	{r3, pc}
10000938:	100058fc 	strdne	r5, [r0], -ip
1000093c:	100058b4 			; <UNDEFINED> instruction: 0x100058b4

10000940 <main_task_entry>:
static void main_task_entry(void *parameters) {
10000940:	b510      	push	{r4, lr}
    int counter = 0;
10000942:	2400      	movs	r4, #0
10000944:	e001      	b.n	1000094a <main_task_entry+0xa>
            test5();
10000946:	f7ff ffef 	bl	10000928 <test5>
        vTaskDelay(1000);
1000094a:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
1000094e:	f002 f8ff 	bl	10002b50 <vTaskDelay>
        printf("hello this is FreeRTOS.\r\n");
10000952:	4803      	ldr	r0, [pc, #12]	; (10000960 <main_task_entry+0x20>)
10000954:	f001 f8fa 	bl	10001b4c <puts>
        if (counter >= 3) {
10000958:	2c02      	cmp	r4, #2
1000095a:	dcf4      	bgt.n	10000946 <main_task_entry+0x6>
            counter++;
1000095c:	3401      	adds	r4, #1
1000095e:	e7f4      	b.n	1000094a <main_task_entry+0xa>
10000960:	100058c4 	andne	r5, r0, r4, asr #17

10000964 <main>:

int main(void) {
10000964:	b510      	push	{r4, lr}
    int count = 0;
    uart_init();
10000966:	f001 f901 	bl	10001b6c <uart_init>

    printf("Start\r\n");
1000096a:	4807      	ldr	r0, [pc, #28]	; (10000988 <main+0x24>)
1000096c:	f001 f8ee 	bl	10001b4c <puts>
    fault_dump_init();
10000970:	f001 f98e 	bl	10001c90 <fault_dump_init>
    main_task_init();
10000974:	f7ff ff44 	bl	10000800 <main_task_init>
    int count = 0;
10000978:	2100      	movs	r1, #0

    while (1) {
        __NOP();
1000097a:	bf00      	nop
        printf("hello world - %d.\r\n", count++);
1000097c:	1c4c      	adds	r4, r1, #1
1000097e:	4803      	ldr	r0, [pc, #12]	; (1000098c <main+0x28>)
10000980:	f001 f8c4 	bl	10001b0c <printf>
10000984:	4621      	mov	r1, r4
10000986:	e7f8      	b.n	1000097a <main+0x16>
10000988:	100058e0 	andne	r5, r0, r0, ror #17
1000098c:	100058e8 	andne	r5, r0, r8, ror #17

10000990 <SystemInit>:
 *----------------------------------------------------------------------------*/
void SystemInit (void)
{

#if defined (__VTOR_PRESENT) && (__VTOR_PRESENT == 1U)
  SCB->VTOR = (uint32_t) &(__VECTOR_TABLE[0]);
10000990:	4b06      	ldr	r3, [pc, #24]	; (100009ac <SystemInit+0x1c>)
10000992:	4a07      	ldr	r2, [pc, #28]	; (100009b0 <SystemInit+0x20>)
10000994:	609a      	str	r2, [r3, #8]
#endif

#if defined (__FPU_USED) && (__FPU_USED == 1U)
  SCB->CPACR |= ((3U << 10U*2U) |           /* enable CP10 Full Access */
10000996:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
1000099a:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
1000099e:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88

#if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
  TZ_SAU_Setup();
#endif

  SystemCoreClock = SYSTEM_CLOCK;
100009a2:	4b04      	ldr	r3, [pc, #16]	; (100009b4 <SystemInit+0x24>)
100009a4:	4a04      	ldr	r2, [pc, #16]	; (100009b8 <SystemInit+0x28>)
100009a6:	601a      	str	r2, [r3, #0]
}
100009a8:	4770      	bx	lr
100009aa:	bf00      	nop
100009ac:	e000ed00 	and	lr, r0, r0, lsl #26
100009b0:	10000000 	andne	r0, r0, r0
100009b4:	38000000 	stmdacc	r0, {}	; <UNPREDICTABLE>
100009b8:	017d7840 	cmneq	sp, r0, asr #16

100009bc <_out_null>:

// internal null output
static inline void _out_null(char character, void* buffer, size_t idx, size_t maxlen)
{
  (void)character; (void)buffer; (void)idx; (void)maxlen;
}
100009bc:	4770      	bx	lr

100009be <_atoi>:
}


// internal ASCII string to unsigned int conversion
static unsigned int _atoi(const char** str)
{
100009be:	4601      	mov	r1, r0
  unsigned int i = 0U;
100009c0:	2000      	movs	r0, #0
  while (_is_digit(**str)) {
100009c2:	e007      	b.n	100009d4 <_atoi+0x16>
    i = i * 10U + (unsigned int)(*((*str)++) - '0');
100009c4:	eb00 0080 	add.w	r0, r0, r0, lsl #2
100009c8:	1c53      	adds	r3, r2, #1
100009ca:	600b      	str	r3, [r1, #0]
100009cc:	7813      	ldrb	r3, [r2, #0]
100009ce:	eb03 0040 	add.w	r0, r3, r0, lsl #1
100009d2:	3830      	subs	r0, #48	; 0x30
  while (_is_digit(**str)) {
100009d4:	680a      	ldr	r2, [r1, #0]
100009d6:	7813      	ldrb	r3, [r2, #0]
  return (ch >= '0') && (ch <= '9');
100009d8:	3b30      	subs	r3, #48	; 0x30
100009da:	b2db      	uxtb	r3, r3
  while (_is_digit(**str)) {
100009dc:	2b09      	cmp	r3, #9
100009de:	d9f1      	bls.n	100009c4 <_atoi+0x6>
  }
  return i;
}
100009e0:	4770      	bx	lr

100009e2 <_out_rev>:


// output the specified string in reverse, taking care of any zero-padding
static size_t _out_rev(out_fct_type out, char* buffer, size_t idx, size_t maxlen, const char* buf, size_t len, unsigned int width, unsigned int flags)
{
100009e2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
100009e6:	b083      	sub	sp, #12
100009e8:	4605      	mov	r5, r0
100009ea:	460e      	mov	r6, r1
100009ec:	4693      	mov	fp, r2
100009ee:	461f      	mov	r7, r3
100009f0:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
100009f4:	9c0d      	ldr	r4, [sp, #52]	; 0x34
100009f6:	f8dd 9038 	ldr.w	r9, [sp, #56]	; 0x38
  const size_t start_idx = idx;

  // pad spaces up to given width
  if (!(flags & FLAGS_LEFT) && !(flags & FLAGS_ZEROPAD)) {
100009fa:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
100009fc:	f013 0f03 	tst.w	r3, #3
10000a00:	d119      	bne.n	10000a36 <_out_rev+0x54>
    for (size_t i = len; i < width; i++) {
10000a02:	46a0      	mov	r8, r4
10000a04:	9201      	str	r2, [sp, #4]
10000a06:	45c8      	cmp	r8, r9
10000a08:	d209      	bcs.n	10000a1e <_out_rev+0x3c>
      out(' ', buffer, idx++, maxlen);
10000a0a:	f102 0b01 	add.w	fp, r2, #1
10000a0e:	463b      	mov	r3, r7
10000a10:	4631      	mov	r1, r6
10000a12:	2020      	movs	r0, #32
10000a14:	47a8      	blx	r5
    for (size_t i = len; i < width; i++) {
10000a16:	f108 0801 	add.w	r8, r8, #1
      out(' ', buffer, idx++, maxlen);
10000a1a:	465a      	mov	r2, fp
10000a1c:	e7f3      	b.n	10000a06 <_out_rev+0x24>
10000a1e:	f8dd b004 	ldr.w	fp, [sp, #4]
10000a22:	e008      	b.n	10000a36 <_out_rev+0x54>
    }
  }

  // reverse string
  while (len) {
    out(buf[--len], buffer, idx++, maxlen);
10000a24:	3c01      	subs	r4, #1
10000a26:	f102 0801 	add.w	r8, r2, #1
10000a2a:	463b      	mov	r3, r7
10000a2c:	4631      	mov	r1, r6
10000a2e:	f81a 0004 	ldrb.w	r0, [sl, r4]
10000a32:	47a8      	blx	r5
10000a34:	4642      	mov	r2, r8
  while (len) {
10000a36:	2c00      	cmp	r4, #0
10000a38:	d1f4      	bne.n	10000a24 <_out_rev+0x42>
  }

  // append pad spaces up to given width
  if (flags & FLAGS_LEFT) {
10000a3a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
10000a3c:	f013 0f02 	tst.w	r3, #2
10000a40:	d103      	bne.n	10000a4a <_out_rev+0x68>
      out(' ', buffer, idx++, maxlen);
    }
  }

  return idx;
}
10000a42:	4610      	mov	r0, r2
10000a44:	b003      	add	sp, #12
10000a46:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    while (idx - start_idx < width) {
10000a4a:	eba2 030b 	sub.w	r3, r2, fp
10000a4e:	454b      	cmp	r3, r9
10000a50:	d2f7      	bcs.n	10000a42 <_out_rev+0x60>
      out(' ', buffer, idx++, maxlen);
10000a52:	1c54      	adds	r4, r2, #1
10000a54:	463b      	mov	r3, r7
10000a56:	4631      	mov	r1, r6
10000a58:	2020      	movs	r0, #32
10000a5a:	47a8      	blx	r5
10000a5c:	4622      	mov	r2, r4
10000a5e:	e7f4      	b.n	10000a4a <_out_rev+0x68>

10000a60 <_ntoa_format>:


// internal itoa format
static size_t _ntoa_format(out_fct_type out, char* buffer, size_t idx, size_t maxlen, char* buf, size_t len, bool negative, unsigned int base, unsigned int prec, unsigned int width, unsigned int flags)
{
10000a60:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
10000a64:	b085      	sub	sp, #20
10000a66:	9d0c      	ldr	r5, [sp, #48]	; 0x30
10000a68:	9c0d      	ldr	r4, [sp, #52]	; 0x34
10000a6a:	f89d 9038 	ldrb.w	r9, [sp, #56]	; 0x38
10000a6e:	f8dd 803c 	ldr.w	r8, [sp, #60]	; 0x3c
10000a72:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
10000a76:	9f11      	ldr	r7, [sp, #68]	; 0x44
10000a78:	9e12      	ldr	r6, [sp, #72]	; 0x48
  // pad leading zeros
  if (!(flags & FLAGS_LEFT)) {
10000a7a:	f016 0f02 	tst.w	r6, #2
10000a7e:	d121      	bne.n	10000ac4 <_ntoa_format+0x64>
    if (width && (flags & FLAGS_ZEROPAD) && (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
10000a80:	b17f      	cbz	r7, 10000aa2 <_ntoa_format+0x42>
10000a82:	f016 0f01 	tst.w	r6, #1
10000a86:	d00c      	beq.n	10000aa2 <_ntoa_format+0x42>
10000a88:	f1b9 0f00 	cmp.w	r9, #0
10000a8c:	d102      	bne.n	10000a94 <_ntoa_format+0x34>
10000a8e:	f016 0f0c 	tst.w	r6, #12
10000a92:	d006      	beq.n	10000aa2 <_ntoa_format+0x42>
      width--;
10000a94:	3f01      	subs	r7, #1
10000a96:	e004      	b.n	10000aa2 <_ntoa_format+0x42>
    }
    while ((len < prec) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
      buf[len++] = '0';
10000a98:	f04f 0c30 	mov.w	ip, #48	; 0x30
10000a9c:	f805 c004 	strb.w	ip, [r5, r4]
10000aa0:	3401      	adds	r4, #1
    while ((len < prec) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
10000aa2:	4574      	cmp	r4, lr
10000aa4:	d201      	bcs.n	10000aaa <_ntoa_format+0x4a>
10000aa6:	2c1f      	cmp	r4, #31
10000aa8:	d9f6      	bls.n	10000a98 <_ntoa_format+0x38>
    }
    while ((flags & FLAGS_ZEROPAD) && (len < width) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
10000aaa:	f016 0f01 	tst.w	r6, #1
10000aae:	d009      	beq.n	10000ac4 <_ntoa_format+0x64>
10000ab0:	42bc      	cmp	r4, r7
10000ab2:	d207      	bcs.n	10000ac4 <_ntoa_format+0x64>
10000ab4:	2c1f      	cmp	r4, #31
10000ab6:	d805      	bhi.n	10000ac4 <_ntoa_format+0x64>
      buf[len++] = '0';
10000ab8:	f04f 0c30 	mov.w	ip, #48	; 0x30
10000abc:	f805 c004 	strb.w	ip, [r5, r4]
10000ac0:	3401      	adds	r4, #1
10000ac2:	e7f2      	b.n	10000aaa <_ntoa_format+0x4a>
    }
  }

  // handle hash
  if (flags & FLAGS_HASH) {
10000ac4:	f016 0f10 	tst.w	r6, #16
10000ac8:	d017      	beq.n	10000afa <_ntoa_format+0x9a>
    if (!(flags & FLAGS_PRECISION) && len && ((len == prec) || (len == width))) {
10000aca:	f416 6f80 	tst.w	r6, #1024	; 0x400
10000ace:	d104      	bne.n	10000ada <_ntoa_format+0x7a>
10000ad0:	b11c      	cbz	r4, 10000ada <_ntoa_format+0x7a>
10000ad2:	4574      	cmp	r4, lr
10000ad4:	d024      	beq.n	10000b20 <_ntoa_format+0xc0>
10000ad6:	42bc      	cmp	r4, r7
10000ad8:	d022      	beq.n	10000b20 <_ntoa_format+0xc0>
      len--;
      if (len && (base == 16U)) {
        len--;
      }
    }
    if ((base == 16U) && !(flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
10000ada:	f1b8 0f10 	cmp.w	r8, #16
10000ade:	d02b      	beq.n	10000b38 <_ntoa_format+0xd8>
      buf[len++] = 'x';
    }
    else if ((base == 16U) && (flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
10000ae0:	f1b8 0f10 	cmp.w	r8, #16
10000ae4:	d033      	beq.n	10000b4e <_ntoa_format+0xee>
      buf[len++] = 'X';
    }
    else if ((base == 2U) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
10000ae6:	f1b8 0f02 	cmp.w	r8, #2
10000aea:	d03b      	beq.n	10000b64 <_ntoa_format+0x104>
      buf[len++] = 'b';
    }
    if (len < PRINTF_NTOA_BUFFER_SIZE) {
10000aec:	2c1f      	cmp	r4, #31
10000aee:	d804      	bhi.n	10000afa <_ntoa_format+0x9a>
      buf[len++] = '0';
10000af0:	f04f 0c30 	mov.w	ip, #48	; 0x30
10000af4:	f805 c004 	strb.w	ip, [r5, r4]
10000af8:	3401      	adds	r4, #1
    }
  }

  if (len < PRINTF_NTOA_BUFFER_SIZE) {
10000afa:	2c1f      	cmp	r4, #31
10000afc:	d807      	bhi.n	10000b0e <_ntoa_format+0xae>
    if (negative) {
10000afe:	f1b9 0f00 	cmp.w	r9, #0
10000b02:	d037      	beq.n	10000b74 <_ntoa_format+0x114>
      buf[len++] = '-';
10000b04:	f04f 0c2d 	mov.w	ip, #45	; 0x2d
10000b08:	f805 c004 	strb.w	ip, [r5, r4]
10000b0c:	3401      	adds	r4, #1
    else if (flags & FLAGS_SPACE) {
      buf[len++] = ' ';
    }
  }

  return _out_rev(out, buffer, idx, maxlen, buf, len, width, flags);
10000b0e:	9603      	str	r6, [sp, #12]
10000b10:	9702      	str	r7, [sp, #8]
10000b12:	9401      	str	r4, [sp, #4]
10000b14:	9500      	str	r5, [sp, #0]
10000b16:	f7ff ff64 	bl	100009e2 <_out_rev>
}
10000b1a:	b005      	add	sp, #20
10000b1c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
      if (len && (base == 16U)) {
10000b20:	f1b4 0c01 	subs.w	ip, r4, #1
10000b24:	d006      	beq.n	10000b34 <_ntoa_format+0xd4>
10000b26:	f1b8 0f10 	cmp.w	r8, #16
10000b2a:	d001      	beq.n	10000b30 <_ntoa_format+0xd0>
      len--;
10000b2c:	4664      	mov	r4, ip
10000b2e:	e7d4      	b.n	10000ada <_ntoa_format+0x7a>
        len--;
10000b30:	3c02      	subs	r4, #2
10000b32:	e7d2      	b.n	10000ada <_ntoa_format+0x7a>
      len--;
10000b34:	4664      	mov	r4, ip
10000b36:	e7d0      	b.n	10000ada <_ntoa_format+0x7a>
    if ((base == 16U) && !(flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
10000b38:	f016 0f20 	tst.w	r6, #32
10000b3c:	d1d0      	bne.n	10000ae0 <_ntoa_format+0x80>
10000b3e:	2c1f      	cmp	r4, #31
10000b40:	d8ce      	bhi.n	10000ae0 <_ntoa_format+0x80>
      buf[len++] = 'x';
10000b42:	f04f 0c78 	mov.w	ip, #120	; 0x78
10000b46:	f805 c004 	strb.w	ip, [r5, r4]
10000b4a:	3401      	adds	r4, #1
10000b4c:	e7ce      	b.n	10000aec <_ntoa_format+0x8c>
    else if ((base == 16U) && (flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
10000b4e:	f016 0f20 	tst.w	r6, #32
10000b52:	d0c8      	beq.n	10000ae6 <_ntoa_format+0x86>
10000b54:	2c1f      	cmp	r4, #31
10000b56:	d8c6      	bhi.n	10000ae6 <_ntoa_format+0x86>
      buf[len++] = 'X';
10000b58:	f04f 0c58 	mov.w	ip, #88	; 0x58
10000b5c:	f805 c004 	strb.w	ip, [r5, r4]
10000b60:	3401      	adds	r4, #1
10000b62:	e7c3      	b.n	10000aec <_ntoa_format+0x8c>
    else if ((base == 2U) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
10000b64:	2c1f      	cmp	r4, #31
10000b66:	d8c1      	bhi.n	10000aec <_ntoa_format+0x8c>
      buf[len++] = 'b';
10000b68:	f04f 0c62 	mov.w	ip, #98	; 0x62
10000b6c:	f805 c004 	strb.w	ip, [r5, r4]
10000b70:	3401      	adds	r4, #1
10000b72:	e7bb      	b.n	10000aec <_ntoa_format+0x8c>
    else if (flags & FLAGS_PLUS) {
10000b74:	f016 0f04 	tst.w	r6, #4
10000b78:	d005      	beq.n	10000b86 <_ntoa_format+0x126>
      buf[len++] = '+';  // ignore the space if the '+' exists
10000b7a:	f04f 0c2b 	mov.w	ip, #43	; 0x2b
10000b7e:	f805 c004 	strb.w	ip, [r5, r4]
10000b82:	3401      	adds	r4, #1
10000b84:	e7c3      	b.n	10000b0e <_ntoa_format+0xae>
    else if (flags & FLAGS_SPACE) {
10000b86:	f016 0f08 	tst.w	r6, #8
10000b8a:	d0c0      	beq.n	10000b0e <_ntoa_format+0xae>
      buf[len++] = ' ';
10000b8c:	f04f 0c20 	mov.w	ip, #32
10000b90:	f805 c004 	strb.w	ip, [r5, r4]
10000b94:	3401      	adds	r4, #1
10000b96:	e7ba      	b.n	10000b0e <_ntoa_format+0xae>

10000b98 <_ntoa_long>:


// internal itoa for 'long' type
static size_t _ntoa_long(out_fct_type out, char* buffer, size_t idx, size_t maxlen, unsigned long value, bool negative, unsigned long base, unsigned int prec, unsigned int width, unsigned int flags)
{
10000b98:	b5f0      	push	{r4, r5, r6, r7, lr}
10000b9a:	b091      	sub	sp, #68	; 0x44
10000b9c:	9c16      	ldr	r4, [sp, #88]	; 0x58
10000b9e:	9d18      	ldr	r5, [sp, #96]	; 0x60
10000ba0:	9e1b      	ldr	r6, [sp, #108]	; 0x6c
  char buf[PRINTF_NTOA_BUFFER_SIZE];
  size_t len = 0U;

  // no hash for 0 values
  if (!value) {
10000ba2:	b90c      	cbnz	r4, 10000ba8 <_ntoa_long+0x10>
    flags &= ~FLAGS_HASH;
10000ba4:	f026 0610 	bic.w	r6, r6, #16
  }

  // write if precision != 0 and value is != 0
  if (!(flags & FLAGS_PRECISION) || value) {
10000ba8:	f416 6e80 	ands.w	lr, r6, #1024	; 0x400
10000bac:	d016      	beq.n	10000bdc <_ntoa_long+0x44>
10000bae:	b364      	cbz	r4, 10000c0a <_ntoa_long+0x72>
10000bb0:	f04f 0e00 	mov.w	lr, #0
10000bb4:	e012      	b.n	10000bdc <_ntoa_long+0x44>
    do {
      const char digit = (char)(value % base);
      buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
10000bb6:	f10c 0c30 	add.w	ip, ip, #48	; 0x30
10000bba:	fa5f fc8c 	uxtb.w	ip, ip
10000bbe:	f10e 0701 	add.w	r7, lr, #1
10000bc2:	f10e 0e40 	add.w	lr, lr, #64	; 0x40
10000bc6:	44ee      	add	lr, sp
10000bc8:	f80e cc20 	strb.w	ip, [lr, #-32]
      value /= base;
10000bcc:	fbb4 fcf5 	udiv	ip, r4, r5
    } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
10000bd0:	42ac      	cmp	r4, r5
10000bd2:	d31b      	bcc.n	10000c0c <_ntoa_long+0x74>
10000bd4:	2f1f      	cmp	r7, #31
10000bd6:	d819      	bhi.n	10000c0c <_ntoa_long+0x74>
      buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
10000bd8:	46be      	mov	lr, r7
      value /= base;
10000bda:	4664      	mov	r4, ip
      const char digit = (char)(value % base);
10000bdc:	fbb4 fcf5 	udiv	ip, r4, r5
10000be0:	fb05 4c1c 	mls	ip, r5, ip, r4
10000be4:	fa5f fc8c 	uxtb.w	ip, ip
      buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
10000be8:	f1bc 0f09 	cmp.w	ip, #9
10000bec:	d9e3      	bls.n	10000bb6 <_ntoa_long+0x1e>
10000bee:	f016 0f20 	tst.w	r6, #32
10000bf2:	d008      	beq.n	10000c06 <_ntoa_long+0x6e>
10000bf4:	2741      	movs	r7, #65	; 0x41
10000bf6:	44bc      	add	ip, r7
10000bf8:	fa5f fc8c 	uxtb.w	ip, ip
10000bfc:	f1ac 0c0a 	sub.w	ip, ip, #10
10000c00:	fa5f fc8c 	uxtb.w	ip, ip
10000c04:	e7db      	b.n	10000bbe <_ntoa_long+0x26>
10000c06:	2761      	movs	r7, #97	; 0x61
10000c08:	e7f5      	b.n	10000bf6 <_ntoa_long+0x5e>
  size_t len = 0U;
10000c0a:	4627      	mov	r7, r4
  }

  return _ntoa_format(out, buffer, idx, maxlen, buf, len, negative, (unsigned int)base, prec, width, flags);
10000c0c:	9606      	str	r6, [sp, #24]
10000c0e:	9c1a      	ldr	r4, [sp, #104]	; 0x68
10000c10:	9405      	str	r4, [sp, #20]
10000c12:	9c19      	ldr	r4, [sp, #100]	; 0x64
10000c14:	9404      	str	r4, [sp, #16]
10000c16:	9503      	str	r5, [sp, #12]
10000c18:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
10000c1c:	9402      	str	r4, [sp, #8]
10000c1e:	9701      	str	r7, [sp, #4]
10000c20:	ac08      	add	r4, sp, #32
10000c22:	9400      	str	r4, [sp, #0]
10000c24:	f7ff ff1c 	bl	10000a60 <_ntoa_format>
}
10000c28:	b011      	add	sp, #68	; 0x44
10000c2a:	bdf0      	pop	{r4, r5, r6, r7, pc}

10000c2c <_ntoa_long_long>:


// internal itoa for 'long long' type
#if defined(PRINTF_SUPPORT_LONG_LONG)
static size_t _ntoa_long_long(out_fct_type out, char* buffer, size_t idx, size_t maxlen, unsigned long long value, bool negative, unsigned long long base, unsigned int prec, unsigned int width, unsigned int flags)
{
10000c2c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10000c30:	b095      	sub	sp, #84	; 0x54
10000c32:	9009      	str	r0, [sp, #36]	; 0x24
10000c34:	910a      	str	r1, [sp, #40]	; 0x28
10000c36:	920b      	str	r2, [sp, #44]	; 0x2c
10000c38:	469b      	mov	fp, r3
10000c3a:	9d1e      	ldr	r5, [sp, #120]	; 0x78
10000c3c:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
10000c3e:	9f22      	ldr	r7, [sp, #136]	; 0x88
10000c40:	f8dd 808c 	ldr.w	r8, [sp, #140]	; 0x8c
10000c44:	f8dd a098 	ldr.w	sl, [sp, #152]	; 0x98
  char buf[PRINTF_NTOA_BUFFER_SIZE];
  size_t len = 0U;

  // no hash for 0 values
  if (!value) {
10000c48:	ea55 0306 	orrs.w	r3, r5, r6
10000c4c:	d101      	bne.n	10000c52 <_ntoa_long_long+0x26>
    flags &= ~FLAGS_HASH;
10000c4e:	f02a 0a10 	bic.w	sl, sl, #16
  }

  // write if precision != 0 and value is != 0
  if (!(flags & FLAGS_PRECISION) || value) {
10000c52:	f41a 6480 	ands.w	r4, sl, #1024	; 0x400
10000c56:	d01f      	beq.n	10000c98 <_ntoa_long_long+0x6c>
10000c58:	ea55 0306 	orrs.w	r3, r5, r6
10000c5c:	d030      	beq.n	10000cc0 <_ntoa_long_long+0x94>
10000c5e:	2400      	movs	r4, #0
10000c60:	e01a      	b.n	10000c98 <_ntoa_long_long+0x6c>
    do {
      const char digit = (char)(value % base);
      buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
10000c62:	f103 0230 	add.w	r2, r3, #48	; 0x30
10000c66:	b2d2      	uxtb	r2, r2
10000c68:	f104 0901 	add.w	r9, r4, #1
10000c6c:	f104 0350 	add.w	r3, r4, #80	; 0x50
10000c70:	eb0d 0403 	add.w	r4, sp, r3
10000c74:	f804 2c20 	strb.w	r2, [r4, #-32]
      value /= base;
10000c78:	463a      	mov	r2, r7
10000c7a:	4643      	mov	r3, r8
10000c7c:	4628      	mov	r0, r5
10000c7e:	4631      	mov	r1, r6
10000c80:	f003 fc4a 	bl	10004518 <__aeabi_uldivmod>
    } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
10000c84:	42bd      	cmp	r5, r7
10000c86:	eb76 0308 	sbcs.w	r3, r6, r8
10000c8a:	d31b      	bcc.n	10000cc4 <_ntoa_long_long+0x98>
10000c8c:	f1b9 0f1f 	cmp.w	r9, #31
10000c90:	d818      	bhi.n	10000cc4 <_ntoa_long_long+0x98>
      buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
10000c92:	464c      	mov	r4, r9
      value /= base;
10000c94:	4605      	mov	r5, r0
10000c96:	460e      	mov	r6, r1
      const char digit = (char)(value % base);
10000c98:	463a      	mov	r2, r7
10000c9a:	4643      	mov	r3, r8
10000c9c:	4628      	mov	r0, r5
10000c9e:	4631      	mov	r1, r6
10000ca0:	f003 fc3a 	bl	10004518 <__aeabi_uldivmod>
10000ca4:	b2d3      	uxtb	r3, r2
      buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
10000ca6:	2b09      	cmp	r3, #9
10000ca8:	d9db      	bls.n	10000c62 <_ntoa_long_long+0x36>
10000caa:	f01a 0f20 	tst.w	sl, #32
10000cae:	d005      	beq.n	10000cbc <_ntoa_long_long+0x90>
10000cb0:	2241      	movs	r2, #65	; 0x41
10000cb2:	441a      	add	r2, r3
10000cb4:	b2d2      	uxtb	r2, r2
10000cb6:	3a0a      	subs	r2, #10
10000cb8:	b2d2      	uxtb	r2, r2
10000cba:	e7d5      	b.n	10000c68 <_ntoa_long_long+0x3c>
10000cbc:	2261      	movs	r2, #97	; 0x61
10000cbe:	e7f8      	b.n	10000cb2 <_ntoa_long_long+0x86>
  size_t len = 0U;
10000cc0:	f04f 0900 	mov.w	r9, #0
  }

  return _ntoa_format(out, buffer, idx, maxlen, buf, len, negative, (unsigned int)base, prec, width, flags);
10000cc4:	f8cd a018 	str.w	sl, [sp, #24]
10000cc8:	9b25      	ldr	r3, [sp, #148]	; 0x94
10000cca:	9305      	str	r3, [sp, #20]
10000ccc:	9b24      	ldr	r3, [sp, #144]	; 0x90
10000cce:	9304      	str	r3, [sp, #16]
10000cd0:	9703      	str	r7, [sp, #12]
10000cd2:	f89d 3080 	ldrb.w	r3, [sp, #128]	; 0x80
10000cd6:	9302      	str	r3, [sp, #8]
10000cd8:	f8cd 9004 	str.w	r9, [sp, #4]
10000cdc:	ab0c      	add	r3, sp, #48	; 0x30
10000cde:	9300      	str	r3, [sp, #0]
10000ce0:	465b      	mov	r3, fp
10000ce2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
10000ce4:	990a      	ldr	r1, [sp, #40]	; 0x28
10000ce6:	9809      	ldr	r0, [sp, #36]	; 0x24
10000ce8:	f7ff feba 	bl	10000a60 <_ntoa_format>
}
10000cec:	b015      	add	sp, #84	; 0x54
10000cee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10000cf2:	0000      	movs	r0, r0
10000cf4:	0000      	movs	r0, r0
	...

10000cf8 <_etoa>:


#if defined(PRINTF_SUPPORT_EXPONENTIAL)
// internal ftoa variant for exponential floating-point type, contributed by Martijn Jasperse <m.jasperse@gmail.com>
static size_t _etoa(out_fct_type out, char* buffer, size_t idx, size_t maxlen, double value, unsigned int prec, unsigned int width, unsigned int flags)
{
10000cf8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10000cfc:	ed2d 8b02 	vpush	{d8}
10000d00:	b091      	sub	sp, #68	; 0x44
10000d02:	4682      	mov	sl, r0
10000d04:	460c      	mov	r4, r1
10000d06:	4693      	mov	fp, r2
10000d08:	461d      	mov	r5, r3
  // check for NaN and special values
  if ((value != value) || (value > DBL_MAX) || (value < -DBL_MAX)) {
10000d0a:	e9dd 231c 	ldrd	r2, r3, [sp, #112]	; 0x70
10000d0e:	4610      	mov	r0, r2
10000d10:	4619      	mov	r1, r3
10000d12:	f003 fb87 	bl	10004424 <__aeabi_dcmpeq>
10000d16:	2800      	cmp	r0, #0
10000d18:	f000 8107 	beq.w	10000f2a <_etoa+0x232>
10000d1c:	f04f 32ff 	mov.w	r2, #4294967295
10000d20:	4bb1      	ldr	r3, [pc, #708]	; (10000fe8 <_etoa+0x2f0>)
10000d22:	e9dd 011c 	ldrd	r0, r1, [sp, #112]	; 0x70
10000d26:	f003 fba5 	bl	10004474 <__aeabi_dcmpgt>
10000d2a:	2800      	cmp	r0, #0
10000d2c:	f040 80fd 	bne.w	10000f2a <_etoa+0x232>
10000d30:	f04f 32ff 	mov.w	r2, #4294967295
10000d34:	f46f 1380 	mvn.w	r3, #1048576	; 0x100000
10000d38:	e9dd 011c 	ldrd	r0, r1, [sp, #112]	; 0x70
10000d3c:	f003 fb7c 	bl	10004438 <__aeabi_dcmplt>
10000d40:	2800      	cmp	r0, #0
10000d42:	f040 80f2 	bne.w	10000f2a <_etoa+0x232>
    return _ftoa(out, buffer, idx, maxlen, value, prec, width, flags);
  }

  // determine the sign
  const bool negative = value < 0;
  if (negative) {
10000d46:	2200      	movs	r2, #0
10000d48:	2300      	movs	r3, #0
10000d4a:	e9dd 011c 	ldrd	r0, r1, [sp, #112]	; 0x70
10000d4e:	f003 fb73 	bl	10004438 <__aeabi_dcmplt>
10000d52:	2800      	cmp	r0, #0
10000d54:	f040 80fe 	bne.w	10000f54 <_etoa+0x25c>
10000d58:	ed9d 7b1c 	vldr	d7, [sp, #112]	; 0x70
10000d5c:	ed8d 7b06 	vstr	d7, [sp, #24]
    value = -value;
  }

  // default precision
  if (!(flags & FLAGS_PRECISION)) {
10000d60:	9b20      	ldr	r3, [sp, #128]	; 0x80
10000d62:	f413 6380 	ands.w	r3, r3, #1024	; 0x400
10000d66:	930f      	str	r3, [sp, #60]	; 0x3c
10000d68:	d101      	bne.n	10000d6e <_etoa+0x76>
    prec = PRINTF_DEFAULT_FLOAT_PRECISION;
10000d6a:	2306      	movs	r3, #6
10000d6c:	931e      	str	r3, [sp, #120]	; 0x78
    uint64_t U;
    double   F;
  } conv;

  conv.F = value;
  int exp2 = (int)((conv.U >> 52U) & 0x07FFU) - 1023;           // effectively log2
10000d6e:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
10000d72:	4602      	mov	r2, r0
10000d74:	f3c1 500a 	ubfx	r0, r1, #20, #11
  conv.U = (conv.U & ((1ULL << 52U) - 1U)) | (1023ULL << 52U);  // drop the exponent so conv.F is now in [1,2)
10000d78:	f3c1 0313 	ubfx	r3, r1, #0, #20
10000d7c:	4690      	mov	r8, r2
10000d7e:	f043 597f 	orr.w	r9, r3, #1069547520	; 0x3fc00000
10000d82:	f449 1940 	orr.w	r9, r9, #3145728	; 0x300000
  // now approximate log10 from the log2 integer part and an expansion of ln around 1.5
  int expval = (int)(0.1760912590558 + exp2 * 0.301029995663981 + (conv.F - 1.5) * 0.289529654602168);
10000d86:	f2a0 30ff 	subw	r0, r0, #1023	; 0x3ff
10000d8a:	f003 f879 	bl	10003e80 <__aeabi_i2d>
10000d8e:	a384      	add	r3, pc, #528	; (adr r3, 10000fa0 <_etoa+0x2a8>)
10000d90:	e9d3 2300 	ldrd	r2, r3, [r3]
10000d94:	f003 f8de 	bl	10003f54 <__aeabi_dmul>
10000d98:	a383      	add	r3, pc, #524	; (adr r3, 10000fa8 <_etoa+0x2b0>)
10000d9a:	e9d3 2300 	ldrd	r2, r3, [r3]
10000d9e:	f002 ff23 	bl	10003be8 <__adddf3>
10000da2:	4606      	mov	r6, r0
10000da4:	460f      	mov	r7, r1
10000da6:	2200      	movs	r2, #0
10000da8:	4b90      	ldr	r3, [pc, #576]	; (10000fec <_etoa+0x2f4>)
10000daa:	4640      	mov	r0, r8
10000dac:	4649      	mov	r1, r9
10000dae:	f002 ff19 	bl	10003be4 <__aeabi_dsub>
10000db2:	a37f      	add	r3, pc, #508	; (adr r3, 10000fb0 <_etoa+0x2b8>)
10000db4:	e9d3 2300 	ldrd	r2, r3, [r3]
10000db8:	f003 f8cc 	bl	10003f54 <__aeabi_dmul>
10000dbc:	4602      	mov	r2, r0
10000dbe:	460b      	mov	r3, r1
10000dc0:	4630      	mov	r0, r6
10000dc2:	4639      	mov	r1, r7
10000dc4:	f002 ff10 	bl	10003be8 <__adddf3>
10000dc8:	f003 fb5e 	bl	10004488 <__aeabi_d2iz>
10000dcc:	4606      	mov	r6, r0
  // now we want to compute 10^expval but we want to be sure it won't overflow
  exp2 = (int)(expval * 3.321928094887362 + 0.5);
10000dce:	f003 f857 	bl	10003e80 <__aeabi_i2d>
10000dd2:	4680      	mov	r8, r0
10000dd4:	4689      	mov	r9, r1
10000dd6:	a378      	add	r3, pc, #480	; (adr r3, 10000fb8 <_etoa+0x2c0>)
10000dd8:	e9d3 2300 	ldrd	r2, r3, [r3]
10000ddc:	f003 f8ba 	bl	10003f54 <__aeabi_dmul>
10000de0:	2200      	movs	r2, #0
10000de2:	4b83      	ldr	r3, [pc, #524]	; (10000ff0 <_etoa+0x2f8>)
10000de4:	f002 ff00 	bl	10003be8 <__adddf3>
10000de8:	f003 fb4e 	bl	10004488 <__aeabi_d2iz>
10000dec:	4607      	mov	r7, r0
  const double z  = expval * 2.302585092994046 - exp2 * 0.6931471805599453;
10000dee:	a374      	add	r3, pc, #464	; (adr r3, 10000fc0 <_etoa+0x2c8>)
10000df0:	e9d3 2300 	ldrd	r2, r3, [r3]
10000df4:	4640      	mov	r0, r8
10000df6:	4649      	mov	r1, r9
10000df8:	f003 f8ac 	bl	10003f54 <__aeabi_dmul>
10000dfc:	4680      	mov	r8, r0
10000dfe:	4689      	mov	r9, r1
10000e00:	4638      	mov	r0, r7
10000e02:	f003 f83d 	bl	10003e80 <__aeabi_i2d>
10000e06:	a370      	add	r3, pc, #448	; (adr r3, 10000fc8 <_etoa+0x2d0>)
10000e08:	e9d3 2300 	ldrd	r2, r3, [r3]
10000e0c:	f003 f8a2 	bl	10003f54 <__aeabi_dmul>
10000e10:	4602      	mov	r2, r0
10000e12:	460b      	mov	r3, r1
10000e14:	4640      	mov	r0, r8
10000e16:	4649      	mov	r1, r9
10000e18:	f002 fee4 	bl	10003be4 <__aeabi_dsub>
10000e1c:	4680      	mov	r8, r0
10000e1e:	4689      	mov	r9, r1
  const double z2 = z * z;
10000e20:	4602      	mov	r2, r0
10000e22:	460b      	mov	r3, r1
10000e24:	f003 f896 	bl	10003f54 <__aeabi_dmul>
10000e28:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
  conv.U = (uint64_t)(exp2 + 1023) << 52U;
10000e2c:	f207 37ff 	addw	r7, r7, #1023	; 0x3ff
10000e30:	2100      	movs	r1, #0
10000e32:	2200      	movs	r2, #0
10000e34:	e9cd 1208 	strd	r1, r2, [sp, #32]
10000e38:	053b      	lsls	r3, r7, #20
10000e3a:	9309      	str	r3, [sp, #36]	; 0x24
10000e3c:	2300      	movs	r3, #0
10000e3e:	9308      	str	r3, [sp, #32]
  // compute exp(z) using continued fractions, see https://en.wikipedia.org/wiki/Exponential_function#Continued_fractions_for_ex
  conv.F *= 1 + 2 * z / (2 - z + (z2 / (6 + (z2 / (10 + z2 / 14)))));
10000e40:	4642      	mov	r2, r8
10000e42:	464b      	mov	r3, r9
10000e44:	4640      	mov	r0, r8
10000e46:	4649      	mov	r1, r9
10000e48:	f002 fece 	bl	10003be8 <__adddf3>
10000e4c:	e9cd 010c 	strd	r0, r1, [sp, #48]	; 0x30
10000e50:	4642      	mov	r2, r8
10000e52:	464b      	mov	r3, r9
10000e54:	2000      	movs	r0, #0
10000e56:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
10000e5a:	f002 fec3 	bl	10003be4 <__aeabi_dsub>
10000e5e:	4680      	mov	r8, r0
10000e60:	4689      	mov	r9, r1
10000e62:	2200      	movs	r2, #0
10000e64:	4b63      	ldr	r3, [pc, #396]	; (10000ff4 <_etoa+0x2fc>)
10000e66:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
10000e6a:	f003 f99d 	bl	100041a8 <__aeabi_ddiv>
10000e6e:	2200      	movs	r2, #0
10000e70:	4b61      	ldr	r3, [pc, #388]	; (10000ff8 <_etoa+0x300>)
10000e72:	f002 feb9 	bl	10003be8 <__adddf3>
10000e76:	4602      	mov	r2, r0
10000e78:	460b      	mov	r3, r1
10000e7a:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
10000e7e:	f003 f993 	bl	100041a8 <__aeabi_ddiv>
10000e82:	2200      	movs	r2, #0
10000e84:	4b5d      	ldr	r3, [pc, #372]	; (10000ffc <_etoa+0x304>)
10000e86:	f002 feaf 	bl	10003be8 <__adddf3>
10000e8a:	4602      	mov	r2, r0
10000e8c:	460b      	mov	r3, r1
10000e8e:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
10000e92:	f003 f989 	bl	100041a8 <__aeabi_ddiv>
10000e96:	4602      	mov	r2, r0
10000e98:	460b      	mov	r3, r1
10000e9a:	4640      	mov	r0, r8
10000e9c:	4649      	mov	r1, r9
10000e9e:	f002 fea3 	bl	10003be8 <__adddf3>
10000ea2:	4602      	mov	r2, r0
10000ea4:	460b      	mov	r3, r1
10000ea6:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
10000eaa:	f003 f97d 	bl	100041a8 <__aeabi_ddiv>
10000eae:	2200      	movs	r2, #0
10000eb0:	4b53      	ldr	r3, [pc, #332]	; (10001000 <_etoa+0x308>)
10000eb2:	f002 fe99 	bl	10003be8 <__adddf3>
10000eb6:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
10000eba:	f003 f84b 	bl	10003f54 <__aeabi_dmul>
10000ebe:	4680      	mov	r8, r0
10000ec0:	4689      	mov	r9, r1
10000ec2:	ec49 8b18 	vmov	d8, r8, r9
  // correct for rounding errors
  if (value < conv.F) {
10000ec6:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
10000eca:	f003 fad3 	bl	10004474 <__aeabi_dcmpgt>
10000ece:	b140      	cbz	r0, 10000ee2 <_etoa+0x1ea>
    expval--;
10000ed0:	3e01      	subs	r6, #1
    conv.F /= 10;
10000ed2:	2200      	movs	r2, #0
10000ed4:	4b48      	ldr	r3, [pc, #288]	; (10000ff8 <_etoa+0x300>)
10000ed6:	4640      	mov	r0, r8
10000ed8:	4649      	mov	r1, r9
10000eda:	f003 f965 	bl	100041a8 <__aeabi_ddiv>
10000ede:	ec41 0b18 	vmov	d8, r0, r1
  }

  // the exponent format is "%+03d" and largest value is "307", so set aside 4-5 characters
  unsigned int minwidth = ((expval < 100) && (expval > -100)) ? 4U : 5U;
10000ee2:	f106 0363 	add.w	r3, r6, #99	; 0x63
10000ee6:	2bc6      	cmp	r3, #198	; 0xc6
10000ee8:	d83f      	bhi.n	10000f6a <_etoa+0x272>
10000eea:	2704      	movs	r7, #4

  // in "%g" mode, "prec" is the number of *significant figures* not decimals
  if (flags & FLAGS_ADAPT_EXP) {
10000eec:	9b20      	ldr	r3, [sp, #128]	; 0x80
10000eee:	f413 6f00 	tst.w	r3, #2048	; 0x800
10000ef2:	d044      	beq.n	10000f7e <_etoa+0x286>
    // do we want to fall-back to "%f" mode?
    if ((value >= 1e-4) && (value < 1e6)) {
10000ef4:	a336      	add	r3, pc, #216	; (adr r3, 10000fd0 <_etoa+0x2d8>)
10000ef6:	e9d3 2300 	ldrd	r2, r3, [r3]
10000efa:	e9dd 8906 	ldrd	r8, r9, [sp, #24]
10000efe:	4640      	mov	r0, r8
10000f00:	4649      	mov	r1, r9
10000f02:	f003 faad 	bl	10004460 <__aeabi_dcmpge>
10000f06:	2800      	cmp	r0, #0
10000f08:	d03f      	beq.n	10000f8a <_etoa+0x292>
10000f0a:	a333      	add	r3, pc, #204	; (adr r3, 10000fd8 <_etoa+0x2e0>)
10000f0c:	e9d3 2300 	ldrd	r2, r3, [r3]
10000f10:	4640      	mov	r0, r8
10000f12:	4649      	mov	r1, r9
10000f14:	f003 fa90 	bl	10004438 <__aeabi_dcmplt>
10000f18:	2800      	cmp	r0, #0
10000f1a:	d036      	beq.n	10000f8a <_etoa+0x292>
      if ((int)prec > expval) {
10000f1c:	9b1e      	ldr	r3, [sp, #120]	; 0x78
10000f1e:	42b3      	cmp	r3, r6
10000f20:	dd25      	ble.n	10000f6e <_etoa+0x276>
        prec = (unsigned)((int)prec - expval - 1);
10000f22:	1b9e      	subs	r6, r3, r6
10000f24:	1e73      	subs	r3, r6, #1
10000f26:	931e      	str	r3, [sp, #120]	; 0x78
10000f28:	e023      	b.n	10000f72 <_etoa+0x27a>
    return _ftoa(out, buffer, idx, maxlen, value, prec, width, flags);
10000f2a:	9b20      	ldr	r3, [sp, #128]	; 0x80
10000f2c:	9304      	str	r3, [sp, #16]
10000f2e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
10000f30:	9303      	str	r3, [sp, #12]
10000f32:	9b1e      	ldr	r3, [sp, #120]	; 0x78
10000f34:	9302      	str	r3, [sp, #8]
10000f36:	ed9d 7b1c 	vldr	d7, [sp, #112]	; 0x70
10000f3a:	ed8d 7b00 	vstr	d7, [sp]
10000f3e:	462b      	mov	r3, r5
10000f40:	465a      	mov	r2, fp
10000f42:	4621      	mov	r1, r4
10000f44:	4650      	mov	r0, sl
10000f46:	f000 f8cf 	bl	100010e8 <_ftoa>
    if (flags & FLAGS_LEFT) {
      while (idx - start_idx < width) out(' ', buffer, idx++, maxlen);
    }
  }
  return idx;
}
10000f4a:	b011      	add	sp, #68	; 0x44
10000f4c:	ecbd 8b02 	vpop	{d8}
10000f50:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    value = -value;
10000f54:	ed9f 7b22 	vldr	d7, [pc, #136]	; 10000fe0 <_etoa+0x2e8>
10000f58:	ed8d 7b06 	vstr	d7, [sp, #24]
10000f5c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
10000f5e:	9306      	str	r3, [sp, #24]
10000f60:	9b1d      	ldr	r3, [sp, #116]	; 0x74
10000f62:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
10000f66:	9307      	str	r3, [sp, #28]
10000f68:	e6fa      	b.n	10000d60 <_etoa+0x68>
  unsigned int minwidth = ((expval < 100) && (expval > -100)) ? 4U : 5U;
10000f6a:	2705      	movs	r7, #5
10000f6c:	e7be      	b.n	10000eec <_etoa+0x1f4>
        prec = 0;
10000f6e:	2300      	movs	r3, #0
10000f70:	931e      	str	r3, [sp, #120]	; 0x78
      flags |= FLAGS_PRECISION;   // make sure _ftoa respects precision
10000f72:	9b20      	ldr	r3, [sp, #128]	; 0x80
10000f74:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
10000f78:	9320      	str	r3, [sp, #128]	; 0x80
      minwidth = 0U;
10000f7a:	2700      	movs	r7, #0
      expval   = 0;
10000f7c:	463e      	mov	r6, r7
  if (width > minwidth) {
10000f7e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
10000f80:	429f      	cmp	r7, r3
10000f82:	d23f      	bcs.n	10001004 <_etoa+0x30c>
    fwidth -= minwidth;
10000f84:	eba3 0807 	sub.w	r8, r3, r7
10000f88:	e03e      	b.n	10001008 <_etoa+0x310>
      if ((prec > 0) && (flags & FLAGS_PRECISION)) {
10000f8a:	9b1e      	ldr	r3, [sp, #120]	; 0x78
10000f8c:	2b00      	cmp	r3, #0
10000f8e:	d0f6      	beq.n	10000f7e <_etoa+0x286>
10000f90:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
10000f92:	2b00      	cmp	r3, #0
10000f94:	d0f3      	beq.n	10000f7e <_etoa+0x286>
        --prec;
10000f96:	9b1e      	ldr	r3, [sp, #120]	; 0x78
10000f98:	3b01      	subs	r3, #1
10000f9a:	931e      	str	r3, [sp, #120]	; 0x78
10000f9c:	e7ef      	b.n	10000f7e <_etoa+0x286>
10000f9e:	bf00      	nop
10000fa0:	509f79fb 			; <UNDEFINED> instruction: 0x509f79fb
10000fa4:	3fd34413 	svccc	0x00d34413
10000fa8:	8b60c8b3 	blhi	1183327c <__copy_table_end__+0x182d3b4>
10000fac:	3fc68a28 	svccc	0x00c68a28
10000fb0:	636f4361 	cmnvs	pc, #-2080374783	; 0x84000001
10000fb4:	3fd287a7 	svccc	0x00d287a7
10000fb8:	0979a371 	ldmdbeq	r9!, {r0, r4, r5, r6, r8, r9, sp, pc}^
10000fbc:	400a934f 	andmi	r9, sl, pc, asr #6
10000fc0:	bbb55516 	bllt	ed56420 <__RAM_SIZE+0xec56420>
10000fc4:	40026bb1 			; <UNDEFINED> instruction: 0x40026bb1
10000fc8:	fefa39ef 			; <UNDEFINED> instruction: 0xfefa39ef
10000fcc:	3fe62e42 	svccc	0x00e62e42
10000fd0:	eb1c432d 	bl	10711c8c <__copy_table_end__+0x70bdc4>
10000fd4:	3f1a36e2 	svccc	0x001a36e2
10000fd8:	00000000 	andeq	r0, r0, r0
10000fdc:	412e8480 	smlawbmi	lr, r0, r4, r8
	...
10000fe8:	7fefffff 	svcvc	0x00efffff
10000fec:	3ff80000 	svccc	0x00f80000
10000ff0:	3fe00000 	svccc	0x00e00000
10000ff4:	402c0000 	eormi	r0, ip, r0
10000ff8:	40240000 	eormi	r0, r4, r0
10000ffc:	40180000 	andsmi	r0, r8, r0
10001000:	3ff00000 	svccc	0x00f00000	; IMB
    fwidth = 0U;
10001004:	f04f 0800 	mov.w	r8, #0
  if ((flags & FLAGS_LEFT) && minwidth) {
10001008:	9b20      	ldr	r3, [sp, #128]	; 0x80
1000100a:	f013 0902 	ands.w	r9, r3, #2
1000100e:	d002      	beq.n	10001016 <_etoa+0x31e>
10001010:	b10f      	cbz	r7, 10001016 <_etoa+0x31e>
    fwidth = 0U;
10001012:	f04f 0800 	mov.w	r8, #0
  if (expval) {
10001016:	b13e      	cbz	r6, 10001028 <_etoa+0x330>
    value /= conv.F;
10001018:	ec53 2b18 	vmov	r2, r3, d8
1000101c:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
10001020:	f003 f8c2 	bl	100041a8 <__aeabi_ddiv>
10001024:	e9cd 0106 	strd	r0, r1, [sp, #24]
  idx = _ftoa(out, buffer, idx, maxlen, negative ? -value : value, prec, fwidth, flags & ~FLAGS_ADAPT_EXP);
10001028:	2200      	movs	r2, #0
1000102a:	2300      	movs	r3, #0
1000102c:	e9dd 011c 	ldrd	r0, r1, [sp, #112]	; 0x70
10001030:	f003 fa02 	bl	10004438 <__aeabi_dcmplt>
10001034:	2800      	cmp	r0, #0
10001036:	d13d      	bne.n	100010b4 <_etoa+0x3bc>
10001038:	9b20      	ldr	r3, [sp, #128]	; 0x80
1000103a:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
1000103e:	9304      	str	r3, [sp, #16]
10001040:	f8cd 800c 	str.w	r8, [sp, #12]
10001044:	9b1e      	ldr	r3, [sp, #120]	; 0x78
10001046:	9302      	str	r3, [sp, #8]
10001048:	ed9d 7b06 	vldr	d7, [sp, #24]
1000104c:	ed8d 7b00 	vstr	d7, [sp]
10001050:	462b      	mov	r3, r5
10001052:	465a      	mov	r2, fp
10001054:	4621      	mov	r1, r4
10001056:	4650      	mov	r0, sl
10001058:	f000 f846 	bl	100010e8 <_ftoa>
  if (minwidth) {
1000105c:	2f00      	cmp	r7, #0
1000105e:	f43f af74 	beq.w	10000f4a <_etoa+0x252>
    out((flags & FLAGS_UPPERCASE) ? 'E' : 'e', buffer, idx++, maxlen);
10001062:	9b20      	ldr	r3, [sp, #128]	; 0x80
10001064:	f013 0f20 	tst.w	r3, #32
10001068:	d02c      	beq.n	100010c4 <_etoa+0x3cc>
1000106a:	f04f 0c45 	mov.w	ip, #69	; 0x45
1000106e:	f100 0801 	add.w	r8, r0, #1
10001072:	462b      	mov	r3, r5
10001074:	4602      	mov	r2, r0
10001076:	4621      	mov	r1, r4
10001078:	4660      	mov	r0, ip
1000107a:	47d0      	blx	sl
    idx = _ntoa_long(out, buffer, idx, maxlen, (expval < 0) ? -expval : expval, expval < 0, 10, 0, minwidth-1, FLAGS_ZEROPAD | FLAGS_PLUS);
1000107c:	ea86 73e6 	eor.w	r3, r6, r6, asr #31
10001080:	eba3 73e6 	sub.w	r3, r3, r6, asr #31
10001084:	2205      	movs	r2, #5
10001086:	9205      	str	r2, [sp, #20]
10001088:	3f01      	subs	r7, #1
1000108a:	9704      	str	r7, [sp, #16]
1000108c:	2200      	movs	r2, #0
1000108e:	9203      	str	r2, [sp, #12]
10001090:	220a      	movs	r2, #10
10001092:	9202      	str	r2, [sp, #8]
10001094:	0ff0      	lsrs	r0, r6, #31
10001096:	9001      	str	r0, [sp, #4]
10001098:	9300      	str	r3, [sp, #0]
1000109a:	462b      	mov	r3, r5
1000109c:	4642      	mov	r2, r8
1000109e:	4621      	mov	r1, r4
100010a0:	4650      	mov	r0, sl
100010a2:	f7ff fd79 	bl	10000b98 <_ntoa_long>
    if (flags & FLAGS_LEFT) {
100010a6:	f1b9 0f00 	cmp.w	r9, #0
100010aa:	f43f af4e 	beq.w	10000f4a <_etoa+0x252>
100010ae:	4602      	mov	r2, r0
100010b0:	9f1f      	ldr	r7, [sp, #124]	; 0x7c
100010b2:	e010      	b.n	100010d6 <_etoa+0x3de>
  idx = _ftoa(out, buffer, idx, maxlen, negative ? -value : value, prec, fwidth, flags & ~FLAGS_ADAPT_EXP);
100010b4:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
100010b8:	4602      	mov	r2, r0
100010ba:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
100010be:	e9cd 2306 	strd	r2, r3, [sp, #24]
100010c2:	e7b9      	b.n	10001038 <_etoa+0x340>
    out((flags & FLAGS_UPPERCASE) ? 'E' : 'e', buffer, idx++, maxlen);
100010c4:	f04f 0c65 	mov.w	ip, #101	; 0x65
100010c8:	e7d1      	b.n	1000106e <_etoa+0x376>
      while (idx - start_idx < width) out(' ', buffer, idx++, maxlen);
100010ca:	1c56      	adds	r6, r2, #1
100010cc:	462b      	mov	r3, r5
100010ce:	4621      	mov	r1, r4
100010d0:	2020      	movs	r0, #32
100010d2:	47d0      	blx	sl
100010d4:	4632      	mov	r2, r6
100010d6:	eba2 030b 	sub.w	r3, r2, fp
100010da:	42bb      	cmp	r3, r7
100010dc:	d3f5      	bcc.n	100010ca <_etoa+0x3d2>
100010de:	4610      	mov	r0, r2
100010e0:	e733      	b.n	10000f4a <_etoa+0x252>
100010e2:	bf00      	nop
100010e4:	0000      	movs	r0, r0
	...

100010e8 <_ftoa>:
{
100010e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
100010ec:	ed2d 8b02 	vpush	{d8}
100010f0:	b095      	sub	sp, #84	; 0x54
100010f2:	9007      	str	r0, [sp, #28]
100010f4:	910a      	str	r1, [sp, #40]	; 0x28
100010f6:	4692      	mov	sl, r2
100010f8:	469b      	mov	fp, r3
100010fa:	e9dd 8920 	ldrd	r8, r9, [sp, #128]	; 0x80
100010fe:	9d22      	ldr	r5, [sp, #136]	; 0x88
  if (value != value)
10001100:	4642      	mov	r2, r8
10001102:	464b      	mov	r3, r9
10001104:	4640      	mov	r0, r8
10001106:	4649      	mov	r1, r9
10001108:	f003 f98c 	bl	10004424 <__aeabi_dcmpeq>
1000110c:	2800      	cmp	r0, #0
1000110e:	d040      	beq.n	10001192 <_ftoa+0xaa>
  if (value < -DBL_MAX)
10001110:	f04f 32ff 	mov.w	r2, #4294967295
10001114:	f46f 1380 	mvn.w	r3, #1048576	; 0x100000
10001118:	4640      	mov	r0, r8
1000111a:	4649      	mov	r1, r9
1000111c:	f003 f98c 	bl	10004438 <__aeabi_dcmplt>
10001120:	2800      	cmp	r0, #0
10001122:	d145      	bne.n	100011b0 <_ftoa+0xc8>
  if (value > DBL_MAX)
10001124:	f04f 32ff 	mov.w	r2, #4294967295
10001128:	4b9f      	ldr	r3, [pc, #636]	; (100013a8 <_ftoa+0x2c0>)
1000112a:	4640      	mov	r0, r8
1000112c:	4649      	mov	r1, r9
1000112e:	f003 f9a1 	bl	10004474 <__aeabi_dcmpgt>
10001132:	2800      	cmp	r0, #0
10001134:	d14b      	bne.n	100011ce <_ftoa+0xe6>
  if ((value > PRINTF_MAX_FLOAT) || (value < -PRINTF_MAX_FLOAT)) {
10001136:	a398      	add	r3, pc, #608	; (adr r3, 10001398 <_ftoa+0x2b0>)
10001138:	e9d3 2300 	ldrd	r2, r3, [r3]
1000113c:	4640      	mov	r0, r8
1000113e:	4649      	mov	r1, r9
10001140:	f003 f998 	bl	10004474 <__aeabi_dcmpgt>
10001144:	2800      	cmp	r0, #0
10001146:	d15a      	bne.n	100011fe <_ftoa+0x116>
10001148:	a395      	add	r3, pc, #596	; (adr r3, 100013a0 <_ftoa+0x2b8>)
1000114a:	e9d3 2300 	ldrd	r2, r3, [r3]
1000114e:	4640      	mov	r0, r8
10001150:	4649      	mov	r1, r9
10001152:	f003 f971 	bl	10004438 <__aeabi_dcmplt>
10001156:	2800      	cmp	r0, #0
10001158:	d151      	bne.n	100011fe <_ftoa+0x116>
  if (value < 0) {
1000115a:	2200      	movs	r2, #0
1000115c:	2300      	movs	r3, #0
1000115e:	4640      	mov	r0, r8
10001160:	4649      	mov	r1, r9
10001162:	f003 f969 	bl	10004438 <__aeabi_dcmplt>
10001166:	2800      	cmp	r0, #0
10001168:	d157      	bne.n	1000121a <_ftoa+0x132>
  bool negative = false;
1000116a:	2300      	movs	r3, #0
1000116c:	930b      	str	r3, [sp, #44]	; 0x2c
  if (!(flags & FLAGS_PRECISION)) {
1000116e:	9b24      	ldr	r3, [sp, #144]	; 0x90
10001170:	f413 6f80 	tst.w	r3, #1024	; 0x400
10001174:	d05c      	beq.n	10001230 <_ftoa+0x148>
    prec = PRINTF_DEFAULT_FLOAT_PRECISION;
10001176:	2400      	movs	r4, #0
  while ((len < PRINTF_FTOA_BUFFER_SIZE) && (prec > 9U)) {
10001178:	2c1f      	cmp	r4, #31
1000117a:	d85b      	bhi.n	10001234 <_ftoa+0x14c>
1000117c:	2d09      	cmp	r5, #9
1000117e:	d959      	bls.n	10001234 <_ftoa+0x14c>
    buf[len++] = '0';
10001180:	f104 0350 	add.w	r3, r4, #80	; 0x50
10001184:	446b      	add	r3, sp
10001186:	2230      	movs	r2, #48	; 0x30
10001188:	f803 2c20 	strb.w	r2, [r3, #-32]
    prec--;
1000118c:	3d01      	subs	r5, #1
    buf[len++] = '0';
1000118e:	3401      	adds	r4, #1
10001190:	e7f2      	b.n	10001178 <_ftoa+0x90>
    return _out_rev(out, buffer, idx, maxlen, "nan", 3, width, flags);
10001192:	9b24      	ldr	r3, [sp, #144]	; 0x90
10001194:	9303      	str	r3, [sp, #12]
10001196:	9b23      	ldr	r3, [sp, #140]	; 0x8c
10001198:	9302      	str	r3, [sp, #8]
1000119a:	2303      	movs	r3, #3
1000119c:	9301      	str	r3, [sp, #4]
1000119e:	4b83      	ldr	r3, [pc, #524]	; (100013ac <_ftoa+0x2c4>)
100011a0:	9300      	str	r3, [sp, #0]
100011a2:	465b      	mov	r3, fp
100011a4:	4652      	mov	r2, sl
100011a6:	990a      	ldr	r1, [sp, #40]	; 0x28
100011a8:	9807      	ldr	r0, [sp, #28]
100011aa:	f7ff fc1a 	bl	100009e2 <_out_rev>
100011ae:	e12c      	b.n	1000140a <_ftoa+0x322>
    return _out_rev(out, buffer, idx, maxlen, "fni-", 4, width, flags);
100011b0:	9b24      	ldr	r3, [sp, #144]	; 0x90
100011b2:	9303      	str	r3, [sp, #12]
100011b4:	9b23      	ldr	r3, [sp, #140]	; 0x8c
100011b6:	9302      	str	r3, [sp, #8]
100011b8:	2304      	movs	r3, #4
100011ba:	9301      	str	r3, [sp, #4]
100011bc:	4b7c      	ldr	r3, [pc, #496]	; (100013b0 <_ftoa+0x2c8>)
100011be:	9300      	str	r3, [sp, #0]
100011c0:	465b      	mov	r3, fp
100011c2:	4652      	mov	r2, sl
100011c4:	990a      	ldr	r1, [sp, #40]	; 0x28
100011c6:	9807      	ldr	r0, [sp, #28]
100011c8:	f7ff fc0b 	bl	100009e2 <_out_rev>
100011cc:	e11d      	b.n	1000140a <_ftoa+0x322>
    return _out_rev(out, buffer, idx, maxlen, (flags & FLAGS_PLUS) ? "fni+" : "fni", (flags & FLAGS_PLUS) ? 4U : 3U, width, flags);
100011ce:	9b24      	ldr	r3, [sp, #144]	; 0x90
100011d0:	f013 0304 	ands.w	r3, r3, #4
100011d4:	d00f      	beq.n	100011f6 <_ftoa+0x10e>
100011d6:	4a77      	ldr	r2, [pc, #476]	; (100013b4 <_ftoa+0x2cc>)
100011d8:	b17b      	cbz	r3, 100011fa <_ftoa+0x112>
100011da:	2304      	movs	r3, #4
100011dc:	9924      	ldr	r1, [sp, #144]	; 0x90
100011de:	9103      	str	r1, [sp, #12]
100011e0:	9923      	ldr	r1, [sp, #140]	; 0x8c
100011e2:	9102      	str	r1, [sp, #8]
100011e4:	9301      	str	r3, [sp, #4]
100011e6:	9200      	str	r2, [sp, #0]
100011e8:	465b      	mov	r3, fp
100011ea:	4652      	mov	r2, sl
100011ec:	990a      	ldr	r1, [sp, #40]	; 0x28
100011ee:	9807      	ldr	r0, [sp, #28]
100011f0:	f7ff fbf7 	bl	100009e2 <_out_rev>
100011f4:	e109      	b.n	1000140a <_ftoa+0x322>
100011f6:	4a70      	ldr	r2, [pc, #448]	; (100013b8 <_ftoa+0x2d0>)
100011f8:	e7ee      	b.n	100011d8 <_ftoa+0xf0>
100011fa:	2303      	movs	r3, #3
100011fc:	e7ee      	b.n	100011dc <_ftoa+0xf4>
    return _etoa(out, buffer, idx, maxlen, value, prec, width, flags);
100011fe:	9b24      	ldr	r3, [sp, #144]	; 0x90
10001200:	9304      	str	r3, [sp, #16]
10001202:	9b23      	ldr	r3, [sp, #140]	; 0x8c
10001204:	9303      	str	r3, [sp, #12]
10001206:	9502      	str	r5, [sp, #8]
10001208:	e9cd 8900 	strd	r8, r9, [sp]
1000120c:	465b      	mov	r3, fp
1000120e:	4652      	mov	r2, sl
10001210:	990a      	ldr	r1, [sp, #40]	; 0x28
10001212:	9807      	ldr	r0, [sp, #28]
10001214:	f7ff fd70 	bl	10000cf8 <_etoa>
10001218:	e0f7      	b.n	1000140a <_ftoa+0x322>
    value = 0 - value;
1000121a:	4642      	mov	r2, r8
1000121c:	464b      	mov	r3, r9
1000121e:	2000      	movs	r0, #0
10001220:	2100      	movs	r1, #0
10001222:	f002 fcdf 	bl	10003be4 <__aeabi_dsub>
10001226:	4680      	mov	r8, r0
10001228:	4689      	mov	r9, r1
    negative = true;
1000122a:	2301      	movs	r3, #1
1000122c:	930b      	str	r3, [sp, #44]	; 0x2c
1000122e:	e79e      	b.n	1000116e <_ftoa+0x86>
    prec = PRINTF_DEFAULT_FLOAT_PRECISION;
10001230:	2506      	movs	r5, #6
10001232:	e7a0      	b.n	10001176 <_ftoa+0x8e>
  int whole = (int)value;
10001234:	4640      	mov	r0, r8
10001236:	4649      	mov	r1, r9
10001238:	f003 f926 	bl	10004488 <__aeabi_d2iz>
1000123c:	4606      	mov	r6, r0
  double tmp = (value - whole) * pow10[prec];
1000123e:	f002 fe1f 	bl	10003e80 <__aeabi_i2d>
10001242:	4602      	mov	r2, r0
10001244:	460b      	mov	r3, r1
10001246:	4640      	mov	r0, r8
10001248:	4649      	mov	r1, r9
1000124a:	f002 fccb 	bl	10003be4 <__aeabi_dsub>
1000124e:	4b5b      	ldr	r3, [pc, #364]	; (100013bc <_ftoa+0x2d4>)
10001250:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
10001254:	ed93 8b00 	vldr	d8, [r3]
10001258:	ec53 2b18 	vmov	r2, r3, d8
1000125c:	f002 fe7a 	bl	10003f54 <__aeabi_dmul>
10001260:	4602      	mov	r2, r0
10001262:	460b      	mov	r3, r1
10001264:	e9cd 2308 	strd	r2, r3, [sp, #32]
  unsigned long frac = (unsigned long)tmp;
10001268:	f003 f936 	bl	100044d8 <__aeabi_d2uiz>
1000126c:	4607      	mov	r7, r0
  diff = tmp - frac;
1000126e:	f002 fdf7 	bl	10003e60 <__aeabi_ui2d>
10001272:	4602      	mov	r2, r0
10001274:	460b      	mov	r3, r1
10001276:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
1000127a:	f002 fcb3 	bl	10003be4 <__aeabi_dsub>
1000127e:	4602      	mov	r2, r0
10001280:	460b      	mov	r3, r1
10001282:	e9cd 2308 	strd	r2, r3, [sp, #32]
  if (diff > 0.5) {
10001286:	2200      	movs	r2, #0
10001288:	4b4d      	ldr	r3, [pc, #308]	; (100013c0 <_ftoa+0x2d8>)
1000128a:	f003 f8f3 	bl	10004474 <__aeabi_dcmpgt>
1000128e:	b350      	cbz	r0, 100012e6 <_ftoa+0x1fe>
    ++frac;
10001290:	3701      	adds	r7, #1
    if (frac >= pow10[prec]) {
10001292:	4638      	mov	r0, r7
10001294:	f002 fde4 	bl	10003e60 <__aeabi_ui2d>
10001298:	4602      	mov	r2, r0
1000129a:	460b      	mov	r3, r1
1000129c:	ec51 0b18 	vmov	r0, r1, d8
100012a0:	f003 f8d4 	bl	1000444c <__aeabi_dcmple>
100012a4:	b108      	cbz	r0, 100012aa <_ftoa+0x1c2>
      ++whole;
100012a6:	3601      	adds	r6, #1
      frac = 0;
100012a8:	2700      	movs	r7, #0
  if (prec == 0U) {
100012aa:	bb55      	cbnz	r5, 10001302 <_ftoa+0x21a>
    diff = value - (double)whole;
100012ac:	4630      	mov	r0, r6
100012ae:	f002 fde7 	bl	10003e80 <__aeabi_i2d>
100012b2:	4602      	mov	r2, r0
100012b4:	460b      	mov	r3, r1
100012b6:	4640      	mov	r0, r8
100012b8:	4649      	mov	r1, r9
100012ba:	f002 fc93 	bl	10003be4 <__aeabi_dsub>
100012be:	4607      	mov	r7, r0
100012c0:	4688      	mov	r8, r1
    if ((!(diff < 0.5) || (diff > 0.5)) && (whole & 1)) {
100012c2:	2200      	movs	r2, #0
100012c4:	4b3e      	ldr	r3, [pc, #248]	; (100013c0 <_ftoa+0x2d8>)
100012c6:	f003 f8b7 	bl	10004438 <__aeabi_dcmplt>
100012ca:	b138      	cbz	r0, 100012dc <_ftoa+0x1f4>
100012cc:	2200      	movs	r2, #0
100012ce:	4b3c      	ldr	r3, [pc, #240]	; (100013c0 <_ftoa+0x2d8>)
100012d0:	4638      	mov	r0, r7
100012d2:	4641      	mov	r1, r8
100012d4:	f003 f8ce 	bl	10004474 <__aeabi_dcmpgt>
100012d8:	2800      	cmp	r0, #0
100012da:	d042      	beq.n	10001362 <_ftoa+0x27a>
100012dc:	f016 0f01 	tst.w	r6, #1
100012e0:	d03f      	beq.n	10001362 <_ftoa+0x27a>
      ++whole;
100012e2:	3601      	adds	r6, #1
100012e4:	e03d      	b.n	10001362 <_ftoa+0x27a>
  else if (diff < 0.5) {
100012e6:	2200      	movs	r2, #0
100012e8:	4b35      	ldr	r3, [pc, #212]	; (100013c0 <_ftoa+0x2d8>)
100012ea:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
100012ee:	f003 f8a3 	bl	10004438 <__aeabi_dcmplt>
100012f2:	2800      	cmp	r0, #0
100012f4:	d1d9      	bne.n	100012aa <_ftoa+0x1c2>
  else if ((frac == 0U) || (frac & 1U)) {
100012f6:	b117      	cbz	r7, 100012fe <_ftoa+0x216>
100012f8:	f017 0f01 	tst.w	r7, #1
100012fc:	d0d5      	beq.n	100012aa <_ftoa+0x1c2>
    ++frac;
100012fe:	3701      	adds	r7, #1
10001300:	e7d3      	b.n	100012aa <_ftoa+0x1c2>
    while (len < PRINTF_FTOA_BUFFER_SIZE) {
10001302:	2c1f      	cmp	r4, #31
10001304:	d817      	bhi.n	10001336 <_ftoa+0x24e>
      --count;
10001306:	3d01      	subs	r5, #1
      buf[len++] = (char)(48U + (frac % 10U));
10001308:	4b2e      	ldr	r3, [pc, #184]	; (100013c4 <_ftoa+0x2dc>)
1000130a:	fba3 2307 	umull	r2, r3, r3, r7
1000130e:	08db      	lsrs	r3, r3, #3
10001310:	4619      	mov	r1, r3
10001312:	eb03 0383 	add.w	r3, r3, r3, lsl #2
10001316:	eba7 0343 	sub.w	r3, r7, r3, lsl #1
1000131a:	1c62      	adds	r2, r4, #1
1000131c:	3330      	adds	r3, #48	; 0x30
1000131e:	f104 0050 	add.w	r0, r4, #80	; 0x50
10001322:	eb0d 0400 	add.w	r4, sp, r0
10001326:	f804 3c20 	strb.w	r3, [r4, #-32]
      if (!(frac /= 10U)) {
1000132a:	2f09      	cmp	r7, #9
1000132c:	d902      	bls.n	10001334 <_ftoa+0x24c>
1000132e:	460f      	mov	r7, r1
      buf[len++] = (char)(48U + (frac % 10U));
10001330:	4614      	mov	r4, r2
10001332:	e7e6      	b.n	10001302 <_ftoa+0x21a>
10001334:	4614      	mov	r4, r2
    while ((len < PRINTF_FTOA_BUFFER_SIZE) && (count-- > 0U)) {
10001336:	2c1f      	cmp	r4, #31
10001338:	d80a      	bhi.n	10001350 <_ftoa+0x268>
1000133a:	1e6b      	subs	r3, r5, #1
1000133c:	b145      	cbz	r5, 10001350 <_ftoa+0x268>
      buf[len++] = '0';
1000133e:	f104 0250 	add.w	r2, r4, #80	; 0x50
10001342:	446a      	add	r2, sp
10001344:	2130      	movs	r1, #48	; 0x30
10001346:	f802 1c20 	strb.w	r1, [r2, #-32]
    while ((len < PRINTF_FTOA_BUFFER_SIZE) && (count-- > 0U)) {
1000134a:	461d      	mov	r5, r3
      buf[len++] = '0';
1000134c:	3401      	adds	r4, #1
1000134e:	e7f2      	b.n	10001336 <_ftoa+0x24e>
    if (len < PRINTF_FTOA_BUFFER_SIZE) {
10001350:	2c1f      	cmp	r4, #31
10001352:	d806      	bhi.n	10001362 <_ftoa+0x27a>
      buf[len++] = '.';
10001354:	f104 0350 	add.w	r3, r4, #80	; 0x50
10001358:	446b      	add	r3, sp
1000135a:	222e      	movs	r2, #46	; 0x2e
1000135c:	f803 2c20 	strb.w	r2, [r3, #-32]
10001360:	3401      	adds	r4, #1
  while (len < PRINTF_FTOA_BUFFER_SIZE) {
10001362:	2c1f      	cmp	r4, #31
10001364:	d833      	bhi.n	100013ce <_ftoa+0x2e6>
    buf[len++] = (char)(48 + (whole % 10));
10001366:	4a18      	ldr	r2, [pc, #96]	; (100013c8 <_ftoa+0x2e0>)
10001368:	fb82 3206 	smull	r3, r2, r2, r6
1000136c:	17f3      	asrs	r3, r6, #31
1000136e:	ebc3 03a2 	rsb	r3, r3, r2, asr #2
10001372:	461a      	mov	r2, r3
10001374:	eb03 0383 	add.w	r3, r3, r3, lsl #2
10001378:	eba6 0343 	sub.w	r3, r6, r3, lsl #1
1000137c:	1c61      	adds	r1, r4, #1
1000137e:	3330      	adds	r3, #48	; 0x30
10001380:	f104 0050 	add.w	r0, r4, #80	; 0x50
10001384:	eb0d 0400 	add.w	r4, sp, r0
10001388:	f804 3c20 	strb.w	r3, [r4, #-32]
    if (!(whole /= 10)) {
1000138c:	4616      	mov	r6, r2
1000138e:	b1ea      	cbz	r2, 100013cc <_ftoa+0x2e4>
    buf[len++] = (char)(48 + (whole % 10));
10001390:	460c      	mov	r4, r1
10001392:	e7e6      	b.n	10001362 <_ftoa+0x27a>
10001394:	f3af 8000 	nop.w
10001398:	00000000 	andeq	r0, r0, r0
1000139c:	41cdcd65 	bicmi	ip, sp, r5, ror #26
100013a0:	00000000 	andeq	r0, r0, r0
100013a4:	c1cdcd65 	bicgt	ip, sp, r5, ror #26
100013a8:	7fefffff 	svcvc	0x00efffff
100013ac:	10005938 	andne	r5, r0, r8, lsr r9
100013b0:	1000593c 	andne	r5, r0, ip, lsr r9
100013b4:	10005930 	andne	r5, r0, r0, lsr r9
100013b8:	1000592c 	andne	r5, r0, ip, lsr #18
100013bc:	10005948 	andne	r5, r0, r8, asr #18
100013c0:	3fe00000 	svccc	0x00e00000
100013c4:	cccccccd 	stclgt	12, cr12, [ip], {205}	; 0xcd
100013c8:	66666667 	strbtvs	r6, [r6], -r7, ror #12
100013cc:	460c      	mov	r4, r1
  if (!(flags & FLAGS_LEFT) && (flags & FLAGS_ZEROPAD)) {
100013ce:	9b24      	ldr	r3, [sp, #144]	; 0x90
100013d0:	f003 0303 	and.w	r3, r3, #3
100013d4:	2b01      	cmp	r3, #1
100013d6:	d01d      	beq.n	10001414 <_ftoa+0x32c>
  if (len < PRINTF_FTOA_BUFFER_SIZE) {
100013d8:	2c1f      	cmp	r4, #31
100013da:	d809      	bhi.n	100013f0 <_ftoa+0x308>
    if (negative) {
100013dc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
100013de:	2b00      	cmp	r3, #0
100013e0:	d035      	beq.n	1000144e <_ftoa+0x366>
      buf[len++] = '-';
100013e2:	f104 0350 	add.w	r3, r4, #80	; 0x50
100013e6:	446b      	add	r3, sp
100013e8:	222d      	movs	r2, #45	; 0x2d
100013ea:	f803 2c20 	strb.w	r2, [r3, #-32]
100013ee:	3401      	adds	r4, #1
  return _out_rev(out, buffer, idx, maxlen, buf, len, width, flags);
100013f0:	9b24      	ldr	r3, [sp, #144]	; 0x90
100013f2:	9303      	str	r3, [sp, #12]
100013f4:	9b23      	ldr	r3, [sp, #140]	; 0x8c
100013f6:	9302      	str	r3, [sp, #8]
100013f8:	9401      	str	r4, [sp, #4]
100013fa:	ab0c      	add	r3, sp, #48	; 0x30
100013fc:	9300      	str	r3, [sp, #0]
100013fe:	465b      	mov	r3, fp
10001400:	4652      	mov	r2, sl
10001402:	990a      	ldr	r1, [sp, #40]	; 0x28
10001404:	9807      	ldr	r0, [sp, #28]
10001406:	f7ff faec 	bl	100009e2 <_out_rev>
}
1000140a:	b015      	add	sp, #84	; 0x54
1000140c:	ecbd 8b02 	vpop	{d8}
10001410:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    if (width && (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
10001414:	9b23      	ldr	r3, [sp, #140]	; 0x8c
10001416:	b1b3      	cbz	r3, 10001446 <_ftoa+0x35e>
10001418:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
1000141a:	b91b      	cbnz	r3, 10001424 <_ftoa+0x33c>
1000141c:	9b24      	ldr	r3, [sp, #144]	; 0x90
1000141e:	f013 0f0c 	tst.w	r3, #12
10001422:	d012      	beq.n	1000144a <_ftoa+0x362>
      width--;
10001424:	9b23      	ldr	r3, [sp, #140]	; 0x8c
10001426:	3b01      	subs	r3, #1
10001428:	9323      	str	r3, [sp, #140]	; 0x8c
1000142a:	4619      	mov	r1, r3
1000142c:	e006      	b.n	1000143c <_ftoa+0x354>
      buf[len++] = '0';
1000142e:	f104 0350 	add.w	r3, r4, #80	; 0x50
10001432:	446b      	add	r3, sp
10001434:	2230      	movs	r2, #48	; 0x30
10001436:	f803 2c20 	strb.w	r2, [r3, #-32]
1000143a:	3401      	adds	r4, #1
    while ((len < width) && (len < PRINTF_FTOA_BUFFER_SIZE)) {
1000143c:	428c      	cmp	r4, r1
1000143e:	d2cb      	bcs.n	100013d8 <_ftoa+0x2f0>
10001440:	2c1f      	cmp	r4, #31
10001442:	d9f4      	bls.n	1000142e <_ftoa+0x346>
10001444:	e7c8      	b.n	100013d8 <_ftoa+0x2f0>
10001446:	9923      	ldr	r1, [sp, #140]	; 0x8c
10001448:	e7f8      	b.n	1000143c <_ftoa+0x354>
1000144a:	9923      	ldr	r1, [sp, #140]	; 0x8c
1000144c:	e7f6      	b.n	1000143c <_ftoa+0x354>
    else if (flags & FLAGS_PLUS) {
1000144e:	9b24      	ldr	r3, [sp, #144]	; 0x90
10001450:	f013 0f04 	tst.w	r3, #4
10001454:	d007      	beq.n	10001466 <_ftoa+0x37e>
      buf[len++] = '+';  // ignore the space if the '+' exists
10001456:	f104 0350 	add.w	r3, r4, #80	; 0x50
1000145a:	446b      	add	r3, sp
1000145c:	222b      	movs	r2, #43	; 0x2b
1000145e:	f803 2c20 	strb.w	r2, [r3, #-32]
10001462:	3401      	adds	r4, #1
10001464:	e7c4      	b.n	100013f0 <_ftoa+0x308>
    else if (flags & FLAGS_SPACE) {
10001466:	9b24      	ldr	r3, [sp, #144]	; 0x90
10001468:	f013 0f08 	tst.w	r3, #8
1000146c:	d0c0      	beq.n	100013f0 <_ftoa+0x308>
      buf[len++] = ' ';
1000146e:	f104 0350 	add.w	r3, r4, #80	; 0x50
10001472:	446b      	add	r3, sp
10001474:	2220      	movs	r2, #32
10001476:	f803 2c20 	strb.w	r2, [r3, #-32]
1000147a:	3401      	adds	r4, #1
1000147c:	e7b8      	b.n	100013f0 <_ftoa+0x308>
1000147e:	bf00      	nop

10001480 <_vsnprintf>:
#endif  // PRINTF_SUPPORT_FLOAT


// internal vsnprintf
static int _vsnprintf(out_fct_type out, char* buffer, const size_t maxlen, const char* format, va_list va)
{
10001480:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10001484:	b08f      	sub	sp, #60	; 0x3c
10001486:	4607      	mov	r7, r0
10001488:	4616      	mov	r6, r2
1000148a:	930d      	str	r3, [sp, #52]	; 0x34
  unsigned int flags, width, precision, n;
  size_t idx = 0U;

  if (!buffer) {
1000148c:	4688      	mov	r8, r1
1000148e:	2900      	cmp	r1, #0
10001490:	f000 8324 	beq.w	10001adc <_vsnprintf+0x65c>
          while (l++ < width) {
            out(' ', buffer, idx++, maxlen);
          }
        }
        format++;
        break;
10001494:	2400      	movs	r4, #0
  while (*format)
10001496:	9b0d      	ldr	r3, [sp, #52]	; 0x34
10001498:	7818      	ldrb	r0, [r3, #0]
1000149a:	2800      	cmp	r0, #0
1000149c:	f000 8320 	beq.w	10001ae0 <_vsnprintf+0x660>
    if (*format != '%') {
100014a0:	2825      	cmp	r0, #37	; 0x25
100014a2:	d009      	beq.n	100014b8 <_vsnprintf+0x38>
      out(*format, buffer, idx++, maxlen);
100014a4:	1c65      	adds	r5, r4, #1
100014a6:	4633      	mov	r3, r6
100014a8:	4622      	mov	r2, r4
100014aa:	4641      	mov	r1, r8
100014ac:	47b8      	blx	r7
      format++;
100014ae:	9b0d      	ldr	r3, [sp, #52]	; 0x34
100014b0:	3301      	adds	r3, #1
100014b2:	930d      	str	r3, [sp, #52]	; 0x34
      out(*format, buffer, idx++, maxlen);
100014b4:	462c      	mov	r4, r5
      continue;
100014b6:	e7ee      	b.n	10001496 <_vsnprintf+0x16>
      format++;
100014b8:	3301      	adds	r3, #1
100014ba:	930d      	str	r3, [sp, #52]	; 0x34
    flags = 0U;
100014bc:	2500      	movs	r5, #0
      switch (*format) {
100014be:	9b0d      	ldr	r3, [sp, #52]	; 0x34
100014c0:	7819      	ldrb	r1, [r3, #0]
100014c2:	f1a1 0220 	sub.w	r2, r1, #32
100014c6:	2a10      	cmp	r2, #16
100014c8:	d80a      	bhi.n	100014e0 <_vsnprintf+0x60>
100014ca:	e8df f002 	tbb	[pc, r2]
100014ce:	3d090938 	vstrcc.16	s0, [r9, #-112]	; 0xffffff90	; <UNPREDICTABLE>
100014d2:	09090909 	stmdbeq	r9, {r0, r3, r8, fp}
100014d6:	33090909 	movwcc	r0, #39177	; 0x9909
100014da:	09092e09 	stmdbeq	r9, {r0, r3, r9, sl, fp, sp}
100014de:	f1a10029 			; <UNDEFINED> instruction: 0xf1a10029
  return (ch >= '0') && (ch <= '9');
100014e2:	0330      	lsls	r0, r6, #12
100014e4:	b2db      	uxtb	r3, r3
    if (_is_digit(*format)) {
100014e6:	2b09      	cmp	r3, #9
100014e8:	d933      	bls.n	10001552 <_vsnprintf+0xd2>
    else if (*format == '*') {
100014ea:	292a      	cmp	r1, #42	; 0x2a
100014ec:	d036      	beq.n	1000155c <_vsnprintf+0xdc>
    width = 0U;
100014ee:	2300      	movs	r3, #0
100014f0:	930a      	str	r3, [sp, #40]	; 0x28
    if (*format == '.') {
100014f2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
100014f4:	781a      	ldrb	r2, [r3, #0]
100014f6:	2a2e      	cmp	r2, #46	; 0x2e
100014f8:	d040      	beq.n	1000157c <_vsnprintf+0xfc>
    precision = 0U;
100014fa:	f04f 0b00 	mov.w	fp, #0
    switch (*format) {
100014fe:	9a0d      	ldr	r2, [sp, #52]	; 0x34
10001500:	7813      	ldrb	r3, [r2, #0]
10001502:	3b68      	subs	r3, #104	; 0x68
10001504:	2b12      	cmp	r3, #18
10001506:	d877      	bhi.n	100015f8 <_vsnprintf+0x178>
10001508:	e8df f003 	tbb	[pc, r3]
1000150c:	76d37664 	ldrbvc	r7, [r3], r4, ror #12
10001510:	76767656 			; <UNDEFINED> instruction: 0x76767656
10001514:	76767676 			; <UNDEFINED> instruction: 0x76767676
10001518:	76767672 			; <UNDEFINED> instruction: 0x76767672
1000151c:	00d87676 	sbcseq	r7, r8, r6, ror r6
        case '0': flags |= FLAGS_ZEROPAD; format++; n = 1U; break;
10001520:	f045 0501 	orr.w	r5, r5, #1
10001524:	3301      	adds	r3, #1
10001526:	930d      	str	r3, [sp, #52]	; 0x34
    } while (n);
10001528:	e7c9      	b.n	100014be <_vsnprintf+0x3e>
        case '-': flags |= FLAGS_LEFT;    format++; n = 1U; break;
1000152a:	f045 0502 	orr.w	r5, r5, #2
1000152e:	3301      	adds	r3, #1
10001530:	930d      	str	r3, [sp, #52]	; 0x34
    } while (n);
10001532:	e7c4      	b.n	100014be <_vsnprintf+0x3e>
        case '+': flags |= FLAGS_PLUS;    format++; n = 1U; break;
10001534:	f045 0504 	orr.w	r5, r5, #4
10001538:	3301      	adds	r3, #1
1000153a:	930d      	str	r3, [sp, #52]	; 0x34
    } while (n);
1000153c:	e7bf      	b.n	100014be <_vsnprintf+0x3e>
        case ' ': flags |= FLAGS_SPACE;   format++; n = 1U; break;
1000153e:	f045 0508 	orr.w	r5, r5, #8
10001542:	3301      	adds	r3, #1
10001544:	930d      	str	r3, [sp, #52]	; 0x34
    } while (n);
10001546:	e7ba      	b.n	100014be <_vsnprintf+0x3e>
        case '#': flags |= FLAGS_HASH;    format++; n = 1U; break;
10001548:	f045 0510 	orr.w	r5, r5, #16
1000154c:	3301      	adds	r3, #1
1000154e:	930d      	str	r3, [sp, #52]	; 0x34
    } while (n);
10001550:	e7b5      	b.n	100014be <_vsnprintf+0x3e>
      width = _atoi(&format);
10001552:	a80d      	add	r0, sp, #52	; 0x34
10001554:	f7ff fa33 	bl	100009be <_atoi>
10001558:	900a      	str	r0, [sp, #40]	; 0x28
1000155a:	e7ca      	b.n	100014f2 <_vsnprintf+0x72>
      const int w = va_arg(va, int);
1000155c:	9b18      	ldr	r3, [sp, #96]	; 0x60
1000155e:	1d1a      	adds	r2, r3, #4
10001560:	9218      	str	r2, [sp, #96]	; 0x60
10001562:	6818      	ldr	r0, [r3, #0]
      if (w < 0) {
10001564:	2800      	cmp	r0, #0
10001566:	db04      	blt.n	10001572 <_vsnprintf+0xf2>
        width = (unsigned int)w;
10001568:	900a      	str	r0, [sp, #40]	; 0x28
      format++;
1000156a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
1000156c:	3301      	adds	r3, #1
1000156e:	930d      	str	r3, [sp, #52]	; 0x34
10001570:	e7bf      	b.n	100014f2 <_vsnprintf+0x72>
        flags |= FLAGS_LEFT;    // reverse padding
10001572:	f045 0502 	orr.w	r5, r5, #2
        width = (unsigned int)-w;
10001576:	4243      	negs	r3, r0
10001578:	930a      	str	r3, [sp, #40]	; 0x28
1000157a:	e7f6      	b.n	1000156a <_vsnprintf+0xea>
      flags |= FLAGS_PRECISION;
1000157c:	f445 6580 	orr.w	r5, r5, #1024	; 0x400
      format++;
10001580:	1c5a      	adds	r2, r3, #1
10001582:	920d      	str	r2, [sp, #52]	; 0x34
      if (_is_digit(*format)) {
10001584:	785a      	ldrb	r2, [r3, #1]
  return (ch >= '0') && (ch <= '9');
10001586:	f1a2 0330 	sub.w	r3, r2, #48	; 0x30
1000158a:	b2db      	uxtb	r3, r3
      if (_is_digit(*format)) {
1000158c:	2b09      	cmp	r3, #9
1000158e:	d904      	bls.n	1000159a <_vsnprintf+0x11a>
      else if (*format == '*') {
10001590:	2a2a      	cmp	r2, #42	; 0x2a
10001592:	d007      	beq.n	100015a4 <_vsnprintf+0x124>
    precision = 0U;
10001594:	f04f 0b00 	mov.w	fp, #0
10001598:	e7b1      	b.n	100014fe <_vsnprintf+0x7e>
        precision = _atoi(&format);
1000159a:	a80d      	add	r0, sp, #52	; 0x34
1000159c:	f7ff fa0f 	bl	100009be <_atoi>
100015a0:	4683      	mov	fp, r0
100015a2:	e7ac      	b.n	100014fe <_vsnprintf+0x7e>
        const int prec = (int)va_arg(va, int);
100015a4:	9b18      	ldr	r3, [sp, #96]	; 0x60
100015a6:	1d1a      	adds	r2, r3, #4
100015a8:	9218      	str	r2, [sp, #96]	; 0x60
100015aa:	681b      	ldr	r3, [r3, #0]
        precision = prec > 0 ? (unsigned int)prec : 0U;
100015ac:	ea23 7be3 	bic.w	fp, r3, r3, asr #31
        format++;
100015b0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
100015b2:	3301      	adds	r3, #1
100015b4:	930d      	str	r3, [sp, #52]	; 0x34
100015b6:	e7a2      	b.n	100014fe <_vsnprintf+0x7e>
        flags |= FLAGS_LONG;
100015b8:	f445 7180 	orr.w	r1, r5, #256	; 0x100
        format++;
100015bc:	1c53      	adds	r3, r2, #1
100015be:	930d      	str	r3, [sp, #52]	; 0x34
        if (*format == 'l') {
100015c0:	7852      	ldrb	r2, [r2, #1]
100015c2:	2a6c      	cmp	r2, #108	; 0x6c
100015c4:	d001      	beq.n	100015ca <_vsnprintf+0x14a>
        flags |= FLAGS_LONG;
100015c6:	460d      	mov	r5, r1
100015c8:	e016      	b.n	100015f8 <_vsnprintf+0x178>
          flags |= FLAGS_LONG_LONG;
100015ca:	f445 7540 	orr.w	r5, r5, #768	; 0x300
          format++;
100015ce:	3301      	adds	r3, #1
100015d0:	930d      	str	r3, [sp, #52]	; 0x34
100015d2:	e011      	b.n	100015f8 <_vsnprintf+0x178>
        flags |= FLAGS_SHORT;
100015d4:	f045 0180 	orr.w	r1, r5, #128	; 0x80
        format++;
100015d8:	1c53      	adds	r3, r2, #1
100015da:	930d      	str	r3, [sp, #52]	; 0x34
        if (*format == 'h') {
100015dc:	7852      	ldrb	r2, [r2, #1]
100015de:	2a68      	cmp	r2, #104	; 0x68
100015e0:	d001      	beq.n	100015e6 <_vsnprintf+0x166>
        flags |= FLAGS_SHORT;
100015e2:	460d      	mov	r5, r1
100015e4:	e008      	b.n	100015f8 <_vsnprintf+0x178>
          flags |= FLAGS_CHAR;
100015e6:	f045 05c0 	orr.w	r5, r5, #192	; 0xc0
          format++;
100015ea:	3301      	adds	r3, #1
100015ec:	930d      	str	r3, [sp, #52]	; 0x34
100015ee:	e003      	b.n	100015f8 <_vsnprintf+0x178>
        flags |= (sizeof(ptrdiff_t) == sizeof(long) ? FLAGS_LONG : FLAGS_LONG_LONG);
100015f0:	f445 7580 	orr.w	r5, r5, #256	; 0x100
        format++;
100015f4:	3201      	adds	r2, #1
100015f6:	920d      	str	r2, [sp, #52]	; 0x34
    switch (*format) {
100015f8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
100015fa:	7818      	ldrb	r0, [r3, #0]
100015fc:	f1a0 0325 	sub.w	r3, r0, #37	; 0x25
10001600:	2b53      	cmp	r3, #83	; 0x53
10001602:	f200 8261 	bhi.w	10001ac8 <_vsnprintf+0x648>
10001606:	e8df f013 	tbh	[pc, r3, lsl #1]
1000160a:	025f0254 	subseq	r0, pc, #84, 4	; 0x40000005
1000160e:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
10001612:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
10001616:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000161a:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000161e:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
10001622:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
10001626:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000162a:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000162e:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
10001632:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
10001636:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000163a:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000163e:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
10001642:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
10001646:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000164a:	01540174 	cmpeq	r4, r4, ror r1
1000164e:	025f0174 	subseq	r0, pc, #116, 2
10001652:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
10001656:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000165a:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000165e:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
10001662:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
10001666:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000166a:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000166e:	005e025f 	subseq	r0, lr, pc, asr r2
10001672:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
10001676:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000167a:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000167e:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
10001682:	005e025f 	subseq	r0, lr, pc, asr r2
10001686:	005e019b 			; <UNDEFINED> instruction: 0x005e019b
1000168a:	01540174 	cmpeq	r4, r4, ror r1
1000168e:	025f0174 	subseq	r0, pc, #116, 2
10001692:	025f005e 	subseq	r0, pc, #94	; 0x5e
10001696:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000169a:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000169e:	0239005e 	eorseq	r0, r9, #94	; 0x5e
100016a2:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
100016a6:	025f01d4 	subseq	r0, pc, #212, 2	; 0x35
100016aa:	025f005e 	subseq	r0, pc, #94	; 0x5e
100016ae:	005e025f 	subseq	r0, lr, pc, asr r2
        flags |= (sizeof(intmax_t) == sizeof(long) ? FLAGS_LONG : FLAGS_LONG_LONG);
100016b2:	f445 7500 	orr.w	r5, r5, #512	; 0x200
        format++;
100016b6:	3201      	adds	r2, #1
100016b8:	920d      	str	r2, [sp, #52]	; 0x34
        break;
100016ba:	e79d      	b.n	100015f8 <_vsnprintf+0x178>
        flags |= (sizeof(size_t) == sizeof(long) ? FLAGS_LONG : FLAGS_LONG_LONG);
100016bc:	f445 7580 	orr.w	r5, r5, #256	; 0x100
        format++;
100016c0:	3201      	adds	r2, #1
100016c2:	920d      	str	r2, [sp, #52]	; 0x34
        break;
100016c4:	e798      	b.n	100015f8 <_vsnprintf+0x178>
        if (*format == 'x' || *format == 'X') {
100016c6:	2878      	cmp	r0, #120	; 0x78
100016c8:	d009      	beq.n	100016de <_vsnprintf+0x25e>
100016ca:	2858      	cmp	r0, #88	; 0x58
100016cc:	d03a      	beq.n	10001744 <_vsnprintf+0x2c4>
        else if (*format == 'o') {
100016ce:	286f      	cmp	r0, #111	; 0x6f
100016d0:	d03a      	beq.n	10001748 <_vsnprintf+0x2c8>
        else if (*format == 'b') {
100016d2:	2862      	cmp	r0, #98	; 0x62
100016d4:	d03a      	beq.n	1000174c <_vsnprintf+0x2cc>
          flags &= ~FLAGS_HASH;   // no hash for dec format
100016d6:	f025 0510 	bic.w	r5, r5, #16
          base = 10U;
100016da:	230a      	movs	r3, #10
100016dc:	e000      	b.n	100016e0 <_vsnprintf+0x260>
          base = 16U;
100016de:	2310      	movs	r3, #16
        if (*format == 'X') {
100016e0:	2858      	cmp	r0, #88	; 0x58
100016e2:	d035      	beq.n	10001750 <_vsnprintf+0x2d0>
        if ((*format != 'i') && (*format != 'd')) {
100016e4:	2869      	cmp	r0, #105	; 0x69
100016e6:	d003      	beq.n	100016f0 <_vsnprintf+0x270>
100016e8:	2864      	cmp	r0, #100	; 0x64
100016ea:	d001      	beq.n	100016f0 <_vsnprintf+0x270>
          flags &= ~(FLAGS_PLUS | FLAGS_SPACE);
100016ec:	f025 050c 	bic.w	r5, r5, #12
        if (flags & FLAGS_PRECISION) {
100016f0:	f415 6f80 	tst.w	r5, #1024	; 0x400
100016f4:	d001      	beq.n	100016fa <_vsnprintf+0x27a>
          flags &= ~FLAGS_ZEROPAD;
100016f6:	f025 0501 	bic.w	r5, r5, #1
        if ((*format == 'i') || (*format == 'd')) {
100016fa:	2869      	cmp	r0, #105	; 0x69
100016fc:	d02b      	beq.n	10001756 <_vsnprintf+0x2d6>
100016fe:	2864      	cmp	r0, #100	; 0x64
10001700:	d029      	beq.n	10001756 <_vsnprintf+0x2d6>
          if (flags & FLAGS_LONG_LONG) {
10001702:	f415 7f00 	tst.w	r5, #512	; 0x200
10001706:	f040 8096 	bne.w	10001836 <_vsnprintf+0x3b6>
          else if (flags & FLAGS_LONG) {
1000170a:	f415 7f80 	tst.w	r5, #256	; 0x100
1000170e:	f040 80ae 	bne.w	1000186e <_vsnprintf+0x3ee>
            const unsigned int value = (flags & FLAGS_CHAR) ? (unsigned char)va_arg(va, unsigned int) : (flags & FLAGS_SHORT) ? (unsigned short int)va_arg(va, unsigned int) : va_arg(va, unsigned int);
10001712:	f015 0f40 	tst.w	r5, #64	; 0x40
10001716:	f000 80bf 	beq.w	10001898 <_vsnprintf+0x418>
1000171a:	9a18      	ldr	r2, [sp, #96]	; 0x60
1000171c:	1d11      	adds	r1, r2, #4
1000171e:	9118      	str	r1, [sp, #96]	; 0x60
10001720:	7812      	ldrb	r2, [r2, #0]
            idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base, precision, width, flags);
10001722:	9505      	str	r5, [sp, #20]
10001724:	990a      	ldr	r1, [sp, #40]	; 0x28
10001726:	9104      	str	r1, [sp, #16]
10001728:	f8cd b00c 	str.w	fp, [sp, #12]
1000172c:	9302      	str	r3, [sp, #8]
1000172e:	2300      	movs	r3, #0
10001730:	9301      	str	r3, [sp, #4]
10001732:	9200      	str	r2, [sp, #0]
10001734:	4633      	mov	r3, r6
10001736:	4622      	mov	r2, r4
10001738:	4641      	mov	r1, r8
1000173a:	4638      	mov	r0, r7
1000173c:	f7ff fa2c 	bl	10000b98 <_ntoa_long>
10001740:	4604      	mov	r4, r0
10001742:	e029      	b.n	10001798 <_vsnprintf+0x318>
          base = 16U;
10001744:	2310      	movs	r3, #16
10001746:	e7cb      	b.n	100016e0 <_vsnprintf+0x260>
          base =  8U;
10001748:	2308      	movs	r3, #8
1000174a:	e7c9      	b.n	100016e0 <_vsnprintf+0x260>
          base =  2U;
1000174c:	2302      	movs	r3, #2
1000174e:	e7c7      	b.n	100016e0 <_vsnprintf+0x260>
          flags |= FLAGS_UPPERCASE;
10001750:	f045 0520 	orr.w	r5, r5, #32
10001754:	e7c6      	b.n	100016e4 <_vsnprintf+0x264>
          if (flags & FLAGS_LONG_LONG) {
10001756:	f415 7f00 	tst.w	r5, #512	; 0x200
1000175a:	d121      	bne.n	100017a0 <_vsnprintf+0x320>
          else if (flags & FLAGS_LONG) {
1000175c:	f415 7f80 	tst.w	r5, #256	; 0x100
10001760:	d142      	bne.n	100017e8 <_vsnprintf+0x368>
            const int value = (flags & FLAGS_CHAR) ? (char)va_arg(va, int) : (flags & FLAGS_SHORT) ? (short int)va_arg(va, int) : va_arg(va, int);
10001762:	f015 0f40 	tst.w	r5, #64	; 0x40
10001766:	d058      	beq.n	1000181a <_vsnprintf+0x39a>
10001768:	9a18      	ldr	r2, [sp, #96]	; 0x60
1000176a:	1d11      	adds	r1, r2, #4
1000176c:	9118      	str	r1, [sp, #96]	; 0x60
1000176e:	7812      	ldrb	r2, [r2, #0]
            idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned int)(value > 0 ? value : 0 - value), value < 0, base, precision, width, flags);
10001770:	ea82 71e2 	eor.w	r1, r2, r2, asr #31
10001774:	eba1 71e2 	sub.w	r1, r1, r2, asr #31
10001778:	9505      	str	r5, [sp, #20]
1000177a:	980a      	ldr	r0, [sp, #40]	; 0x28
1000177c:	9004      	str	r0, [sp, #16]
1000177e:	f8cd b00c 	str.w	fp, [sp, #12]
10001782:	9302      	str	r3, [sp, #8]
10001784:	0fd2      	lsrs	r2, r2, #31
10001786:	9201      	str	r2, [sp, #4]
10001788:	9100      	str	r1, [sp, #0]
1000178a:	4633      	mov	r3, r6
1000178c:	4622      	mov	r2, r4
1000178e:	4641      	mov	r1, r8
10001790:	4638      	mov	r0, r7
10001792:	f7ff fa01 	bl	10000b98 <_ntoa_long>
10001796:	4604      	mov	r4, r0
        format++;
10001798:	9b0d      	ldr	r3, [sp, #52]	; 0x34
1000179a:	3301      	adds	r3, #1
1000179c:	930d      	str	r3, [sp, #52]	; 0x34
        break;
1000179e:	e67a      	b.n	10001496 <_vsnprintf+0x16>
            const long long value = va_arg(va, long long);
100017a0:	9a18      	ldr	r2, [sp, #96]	; 0x60
100017a2:	3207      	adds	r2, #7
100017a4:	f022 0207 	bic.w	r2, r2, #7
100017a8:	f102 0108 	add.w	r1, r2, #8
100017ac:	9118      	str	r1, [sp, #96]	; 0x60
100017ae:	6851      	ldr	r1, [r2, #4]
            idx = _ntoa_long_long(out, buffer, idx, maxlen, (unsigned long long)(value > 0 ? value : 0 - value), value < 0, base, precision, width, flags);
100017b0:	6812      	ldr	r2, [r2, #0]
100017b2:	4608      	mov	r0, r1
100017b4:	2900      	cmp	r1, #0
100017b6:	db13      	blt.n	100017e0 <_vsnprintf+0x360>
100017b8:	9508      	str	r5, [sp, #32]
100017ba:	9d0a      	ldr	r5, [sp, #40]	; 0x28
100017bc:	9507      	str	r5, [sp, #28]
100017be:	f8cd b018 	str.w	fp, [sp, #24]
100017c2:	9304      	str	r3, [sp, #16]
100017c4:	2300      	movs	r3, #0
100017c6:	9305      	str	r3, [sp, #20]
100017c8:	0fc9      	lsrs	r1, r1, #31
100017ca:	9102      	str	r1, [sp, #8]
100017cc:	9200      	str	r2, [sp, #0]
100017ce:	9001      	str	r0, [sp, #4]
100017d0:	4633      	mov	r3, r6
100017d2:	4622      	mov	r2, r4
100017d4:	4641      	mov	r1, r8
100017d6:	4638      	mov	r0, r7
100017d8:	f7ff fa28 	bl	10000c2c <_ntoa_long_long>
100017dc:	4604      	mov	r4, r0
100017de:	e7db      	b.n	10001798 <_vsnprintf+0x318>
100017e0:	4252      	negs	r2, r2
100017e2:	eb61 0041 	sbc.w	r0, r1, r1, lsl #1
100017e6:	e7e7      	b.n	100017b8 <_vsnprintf+0x338>
            const long value = va_arg(va, long);
100017e8:	9a18      	ldr	r2, [sp, #96]	; 0x60
100017ea:	1d11      	adds	r1, r2, #4
100017ec:	9118      	str	r1, [sp, #96]	; 0x60
100017ee:	6812      	ldr	r2, [r2, #0]
            idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned long)(value > 0 ? value : 0 - value), value < 0, base, precision, width, flags);
100017f0:	ea82 71e2 	eor.w	r1, r2, r2, asr #31
100017f4:	eba1 71e2 	sub.w	r1, r1, r2, asr #31
100017f8:	9505      	str	r5, [sp, #20]
100017fa:	980a      	ldr	r0, [sp, #40]	; 0x28
100017fc:	9004      	str	r0, [sp, #16]
100017fe:	f8cd b00c 	str.w	fp, [sp, #12]
10001802:	9302      	str	r3, [sp, #8]
10001804:	0fd2      	lsrs	r2, r2, #31
10001806:	9201      	str	r2, [sp, #4]
10001808:	9100      	str	r1, [sp, #0]
1000180a:	4633      	mov	r3, r6
1000180c:	4622      	mov	r2, r4
1000180e:	4641      	mov	r1, r8
10001810:	4638      	mov	r0, r7
10001812:	f7ff f9c1 	bl	10000b98 <_ntoa_long>
10001816:	4604      	mov	r4, r0
10001818:	e7be      	b.n	10001798 <_vsnprintf+0x318>
            const int value = (flags & FLAGS_CHAR) ? (char)va_arg(va, int) : (flags & FLAGS_SHORT) ? (short int)va_arg(va, int) : va_arg(va, int);
1000181a:	f015 0f80 	tst.w	r5, #128	; 0x80
1000181e:	d005      	beq.n	1000182c <_vsnprintf+0x3ac>
10001820:	9a18      	ldr	r2, [sp, #96]	; 0x60
10001822:	1d11      	adds	r1, r2, #4
10001824:	9118      	str	r1, [sp, #96]	; 0x60
10001826:	f9b2 2000 	ldrsh.w	r2, [r2]
1000182a:	e7a1      	b.n	10001770 <_vsnprintf+0x2f0>
1000182c:	9a18      	ldr	r2, [sp, #96]	; 0x60
1000182e:	1d11      	adds	r1, r2, #4
10001830:	9118      	str	r1, [sp, #96]	; 0x60
10001832:	6812      	ldr	r2, [r2, #0]
10001834:	e79c      	b.n	10001770 <_vsnprintf+0x2f0>
            idx = _ntoa_long_long(out, buffer, idx, maxlen, va_arg(va, unsigned long long), false, base, precision, width, flags);
10001836:	9a18      	ldr	r2, [sp, #96]	; 0x60
10001838:	3207      	adds	r2, #7
1000183a:	f022 0207 	bic.w	r2, r2, #7
1000183e:	f102 0108 	add.w	r1, r2, #8
10001842:	9118      	str	r1, [sp, #96]	; 0x60
10001844:	9508      	str	r5, [sp, #32]
10001846:	990a      	ldr	r1, [sp, #40]	; 0x28
10001848:	9107      	str	r1, [sp, #28]
1000184a:	f8cd b018 	str.w	fp, [sp, #24]
1000184e:	2100      	movs	r1, #0
10001850:	9304      	str	r3, [sp, #16]
10001852:	9105      	str	r1, [sp, #20]
10001854:	9102      	str	r1, [sp, #8]
10001856:	e9d2 2300 	ldrd	r2, r3, [r2]
1000185a:	e9cd 2300 	strd	r2, r3, [sp]
1000185e:	4633      	mov	r3, r6
10001860:	4622      	mov	r2, r4
10001862:	4641      	mov	r1, r8
10001864:	4638      	mov	r0, r7
10001866:	f7ff f9e1 	bl	10000c2c <_ntoa_long_long>
1000186a:	4604      	mov	r4, r0
1000186c:	e794      	b.n	10001798 <_vsnprintf+0x318>
            idx = _ntoa_long(out, buffer, idx, maxlen, va_arg(va, unsigned long), false, base, precision, width, flags);
1000186e:	9a18      	ldr	r2, [sp, #96]	; 0x60
10001870:	1d11      	adds	r1, r2, #4
10001872:	9118      	str	r1, [sp, #96]	; 0x60
10001874:	9505      	str	r5, [sp, #20]
10001876:	990a      	ldr	r1, [sp, #40]	; 0x28
10001878:	9104      	str	r1, [sp, #16]
1000187a:	f8cd b00c 	str.w	fp, [sp, #12]
1000187e:	9302      	str	r3, [sp, #8]
10001880:	2300      	movs	r3, #0
10001882:	9301      	str	r3, [sp, #4]
10001884:	6813      	ldr	r3, [r2, #0]
10001886:	9300      	str	r3, [sp, #0]
10001888:	4633      	mov	r3, r6
1000188a:	4622      	mov	r2, r4
1000188c:	4641      	mov	r1, r8
1000188e:	4638      	mov	r0, r7
10001890:	f7ff f982 	bl	10000b98 <_ntoa_long>
10001894:	4604      	mov	r4, r0
10001896:	e77f      	b.n	10001798 <_vsnprintf+0x318>
            const unsigned int value = (flags & FLAGS_CHAR) ? (unsigned char)va_arg(va, unsigned int) : (flags & FLAGS_SHORT) ? (unsigned short int)va_arg(va, unsigned int) : va_arg(va, unsigned int);
10001898:	f015 0f80 	tst.w	r5, #128	; 0x80
1000189c:	d004      	beq.n	100018a8 <_vsnprintf+0x428>
1000189e:	9a18      	ldr	r2, [sp, #96]	; 0x60
100018a0:	1d11      	adds	r1, r2, #4
100018a2:	9118      	str	r1, [sp, #96]	; 0x60
100018a4:	8812      	ldrh	r2, [r2, #0]
100018a6:	e73c      	b.n	10001722 <_vsnprintf+0x2a2>
100018a8:	9a18      	ldr	r2, [sp, #96]	; 0x60
100018aa:	1d11      	adds	r1, r2, #4
100018ac:	9118      	str	r1, [sp, #96]	; 0x60
100018ae:	6812      	ldr	r2, [r2, #0]
100018b0:	e737      	b.n	10001722 <_vsnprintf+0x2a2>
        if (*format == 'F') flags |= FLAGS_UPPERCASE;
100018b2:	2846      	cmp	r0, #70	; 0x46
100018b4:	d01a      	beq.n	100018ec <_vsnprintf+0x46c>
        idx = _ftoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
100018b6:	9b18      	ldr	r3, [sp, #96]	; 0x60
100018b8:	3307      	adds	r3, #7
100018ba:	f023 0307 	bic.w	r3, r3, #7
100018be:	f103 0208 	add.w	r2, r3, #8
100018c2:	9218      	str	r2, [sp, #96]	; 0x60
100018c4:	9504      	str	r5, [sp, #16]
100018c6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
100018c8:	9203      	str	r2, [sp, #12]
100018ca:	f8cd b008 	str.w	fp, [sp, #8]
100018ce:	e9d3 2300 	ldrd	r2, r3, [r3]
100018d2:	e9cd 2300 	strd	r2, r3, [sp]
100018d6:	4633      	mov	r3, r6
100018d8:	4622      	mov	r2, r4
100018da:	4641      	mov	r1, r8
100018dc:	4638      	mov	r0, r7
100018de:	f7ff fc03 	bl	100010e8 <_ftoa>
100018e2:	4604      	mov	r4, r0
        format++;
100018e4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
100018e6:	3301      	adds	r3, #1
100018e8:	930d      	str	r3, [sp, #52]	; 0x34
        break;
100018ea:	e5d4      	b.n	10001496 <_vsnprintf+0x16>
        if (*format == 'F') flags |= FLAGS_UPPERCASE;
100018ec:	f045 0520 	orr.w	r5, r5, #32
100018f0:	e7e1      	b.n	100018b6 <_vsnprintf+0x436>
        if ((*format == 'g')||(*format == 'G')) flags |= FLAGS_ADAPT_EXP;
100018f2:	2867      	cmp	r0, #103	; 0x67
100018f4:	d001      	beq.n	100018fa <_vsnprintf+0x47a>
100018f6:	2847      	cmp	r0, #71	; 0x47
100018f8:	d101      	bne.n	100018fe <_vsnprintf+0x47e>
100018fa:	f445 6500 	orr.w	r5, r5, #2048	; 0x800
        if ((*format == 'E')||(*format == 'G')) flags |= FLAGS_UPPERCASE;
100018fe:	2845      	cmp	r0, #69	; 0x45
10001900:	d001      	beq.n	10001906 <_vsnprintf+0x486>
10001902:	2847      	cmp	r0, #71	; 0x47
10001904:	d101      	bne.n	1000190a <_vsnprintf+0x48a>
10001906:	f045 0520 	orr.w	r5, r5, #32
        idx = _etoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
1000190a:	9b18      	ldr	r3, [sp, #96]	; 0x60
1000190c:	3307      	adds	r3, #7
1000190e:	f023 0307 	bic.w	r3, r3, #7
10001912:	f103 0208 	add.w	r2, r3, #8
10001916:	9218      	str	r2, [sp, #96]	; 0x60
10001918:	9504      	str	r5, [sp, #16]
1000191a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
1000191c:	9203      	str	r2, [sp, #12]
1000191e:	f8cd b008 	str.w	fp, [sp, #8]
10001922:	e9d3 2300 	ldrd	r2, r3, [r3]
10001926:	e9cd 2300 	strd	r2, r3, [sp]
1000192a:	4633      	mov	r3, r6
1000192c:	4622      	mov	r2, r4
1000192e:	4641      	mov	r1, r8
10001930:	4638      	mov	r0, r7
10001932:	f7ff f9e1 	bl	10000cf8 <_etoa>
10001936:	4604      	mov	r4, r0
        format++;
10001938:	9b0d      	ldr	r3, [sp, #52]	; 0x34
1000193a:	3301      	adds	r3, #1
1000193c:	930d      	str	r3, [sp, #52]	; 0x34
        break;
1000193e:	e5aa      	b.n	10001496 <_vsnprintf+0x16>
        if (!(flags & FLAGS_LEFT)) {
10001940:	f015 0502 	ands.w	r5, r5, #2
10001944:	d01f      	beq.n	10001986 <_vsnprintf+0x506>
        unsigned int l = 1U;
10001946:	f04f 0901 	mov.w	r9, #1
        out((char)va_arg(va, int), buffer, idx++, maxlen);
1000194a:	9818      	ldr	r0, [sp, #96]	; 0x60
1000194c:	1d03      	adds	r3, r0, #4
1000194e:	9318      	str	r3, [sp, #96]	; 0x60
10001950:	f104 0a01 	add.w	sl, r4, #1
10001954:	4633      	mov	r3, r6
10001956:	4622      	mov	r2, r4
10001958:	4641      	mov	r1, r8
1000195a:	7800      	ldrb	r0, [r0, #0]
1000195c:	47b8      	blx	r7
        if (flags & FLAGS_LEFT) {
1000195e:	b9bd      	cbnz	r5, 10001990 <_vsnprintf+0x510>
        format++;
10001960:	9b0d      	ldr	r3, [sp, #52]	; 0x34
10001962:	3301      	adds	r3, #1
10001964:	930d      	str	r3, [sp, #52]	; 0x34
        break;
10001966:	4654      	mov	r4, sl
10001968:	e595      	b.n	10001496 <_vsnprintf+0x16>
            out(' ', buffer, idx++, maxlen);
1000196a:	f102 0a01 	add.w	sl, r2, #1
1000196e:	4633      	mov	r3, r6
10001970:	4641      	mov	r1, r8
10001972:	2020      	movs	r0, #32
10001974:	47b8      	blx	r7
          while (l++ < width) {
10001976:	464b      	mov	r3, r9
            out(' ', buffer, idx++, maxlen);
10001978:	4652      	mov	r2, sl
          while (l++ < width) {
1000197a:	f103 0901 	add.w	r9, r3, #1
1000197e:	459b      	cmp	fp, r3
10001980:	d8f3      	bhi.n	1000196a <_vsnprintf+0x4ea>
10001982:	4614      	mov	r4, r2
10001984:	e7e1      	b.n	1000194a <_vsnprintf+0x4ca>
        unsigned int l = 1U;
10001986:	2301      	movs	r3, #1
10001988:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
1000198c:	4622      	mov	r2, r4
1000198e:	e7f4      	b.n	1000197a <_vsnprintf+0x4fa>
10001990:	4652      	mov	r2, sl
10001992:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
10001996:	e006      	b.n	100019a6 <_vsnprintf+0x526>
            out(' ', buffer, idx++, maxlen);
10001998:	1c55      	adds	r5, r2, #1
1000199a:	4633      	mov	r3, r6
1000199c:	4641      	mov	r1, r8
1000199e:	2020      	movs	r0, #32
100019a0:	47b8      	blx	r7
          while (l++ < width) {
100019a2:	46a1      	mov	r9, r4
            out(' ', buffer, idx++, maxlen);
100019a4:	462a      	mov	r2, r5
          while (l++ < width) {
100019a6:	f109 0401 	add.w	r4, r9, #1
100019aa:	45ca      	cmp	sl, r9
100019ac:	d8f4      	bhi.n	10001998 <_vsnprintf+0x518>
100019ae:	4692      	mov	sl, r2
100019b0:	e7d6      	b.n	10001960 <_vsnprintf+0x4e0>
      }

      case 's' : {
        const char* p = va_arg(va, char*);
100019b2:	9b18      	ldr	r3, [sp, #96]	; 0x60
100019b4:	1d1a      	adds	r2, r3, #4
100019b6:	9218      	str	r2, [sp, #96]	; 0x60
100019b8:	f8d3 a000 	ldr.w	sl, [r3]
        unsigned int l = _strnlen_s(p, precision ? precision : (size_t)-1);
100019bc:	f1bb 0f00 	cmp.w	fp, #0
100019c0:	d11e      	bne.n	10001a00 <_vsnprintf+0x580>
100019c2:	f04f 33ff 	mov.w	r3, #4294967295
100019c6:	46d1      	mov	r9, sl
100019c8:	e002      	b.n	100019d0 <_vsnprintf+0x550>
  for (s = str; *s && maxsize--; ++s);
100019ca:	f109 0901 	add.w	r9, r9, #1
100019ce:	4613      	mov	r3, r2
100019d0:	f899 2000 	ldrb.w	r2, [r9]
100019d4:	b112      	cbz	r2, 100019dc <_vsnprintf+0x55c>
100019d6:	1e5a      	subs	r2, r3, #1
100019d8:	2b00      	cmp	r3, #0
100019da:	d1f6      	bne.n	100019ca <_vsnprintf+0x54a>
  return (unsigned int)(s - str);
100019dc:	eba9 090a 	sub.w	r9, r9, sl
        // pre padding
        if (flags & FLAGS_PRECISION) {
100019e0:	f415 6380 	ands.w	r3, r5, #1024	; 0x400
100019e4:	930b      	str	r3, [sp, #44]	; 0x2c
100019e6:	d002      	beq.n	100019ee <_vsnprintf+0x56e>
          l = (l < precision ? l : precision);
100019e8:	45d9      	cmp	r9, fp
100019ea:	bf28      	it	cs
100019ec:	46d9      	movcs	r9, fp
        }
        if (!(flags & FLAGS_LEFT)) {
100019ee:	f015 0302 	ands.w	r3, r5, #2
100019f2:	930c      	str	r3, [sp, #48]	; 0x30
100019f4:	d006      	beq.n	10001a04 <_vsnprintf+0x584>
100019f6:	4622      	mov	r2, r4
100019f8:	465c      	mov	r4, fp
100019fa:	46b3      	mov	fp, r6
100019fc:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
100019fe:	e01d      	b.n	10001a3c <_vsnprintf+0x5bc>
        unsigned int l = _strnlen_s(p, precision ? precision : (size_t)-1);
10001a00:	465b      	mov	r3, fp
10001a02:	e7e0      	b.n	100019c6 <_vsnprintf+0x546>
10001a04:	4622      	mov	r2, r4
10001a06:	9c0a      	ldr	r4, [sp, #40]	; 0x28
10001a08:	464b      	mov	r3, r9
10001a0a:	e007      	b.n	10001a1c <_vsnprintf+0x59c>
          while (l++ < width) {
            out(' ', buffer, idx++, maxlen);
10001a0c:	f102 0901 	add.w	r9, r2, #1
10001a10:	4633      	mov	r3, r6
10001a12:	4641      	mov	r1, r8
10001a14:	2020      	movs	r0, #32
10001a16:	47b8      	blx	r7
          while (l++ < width) {
10001a18:	462b      	mov	r3, r5
            out(' ', buffer, idx++, maxlen);
10001a1a:	464a      	mov	r2, r9
          while (l++ < width) {
10001a1c:	1c5d      	adds	r5, r3, #1
10001a1e:	429c      	cmp	r4, r3
10001a20:	d8f4      	bhi.n	10001a0c <_vsnprintf+0x58c>
10001a22:	46a9      	mov	r9, r5
10001a24:	465c      	mov	r4, fp
10001a26:	46b3      	mov	fp, r6
10001a28:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
10001a2a:	e007      	b.n	10001a3c <_vsnprintf+0x5bc>
          }
        }
        // string output
        while ((*p != 0) && (!(flags & FLAGS_PRECISION) || precision--)) {
10001a2c:	461c      	mov	r4, r3
          out(*(p++), buffer, idx++, maxlen);
10001a2e:	f10a 0a01 	add.w	sl, sl, #1
10001a32:	1c55      	adds	r5, r2, #1
10001a34:	465b      	mov	r3, fp
10001a36:	4641      	mov	r1, r8
10001a38:	47b8      	blx	r7
10001a3a:	462a      	mov	r2, r5
        while ((*p != 0) && (!(flags & FLAGS_PRECISION) || precision--)) {
10001a3c:	f89a 0000 	ldrb.w	r0, [sl]
10001a40:	b120      	cbz	r0, 10001a4c <_vsnprintf+0x5cc>
10001a42:	2e00      	cmp	r6, #0
10001a44:	d0f3      	beq.n	10001a2e <_vsnprintf+0x5ae>
10001a46:	1e63      	subs	r3, r4, #1
10001a48:	2c00      	cmp	r4, #0
10001a4a:	d1ef      	bne.n	10001a2c <_vsnprintf+0x5ac>
        }
        // post padding
        if (flags & FLAGS_LEFT) {
10001a4c:	4614      	mov	r4, r2
10001a4e:	465e      	mov	r6, fp
10001a50:	9b0c      	ldr	r3, [sp, #48]	; 0x30
10001a52:	b91b      	cbnz	r3, 10001a5c <_vsnprintf+0x5dc>
          while (l++ < width) {
            out(' ', buffer, idx++, maxlen);
          }
        }
        format++;
10001a54:	9b0d      	ldr	r3, [sp, #52]	; 0x34
10001a56:	3301      	adds	r3, #1
10001a58:	930d      	str	r3, [sp, #52]	; 0x34
        break;
10001a5a:	e51c      	b.n	10001496 <_vsnprintf+0x16>
10001a5c:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
10001a60:	e006      	b.n	10001a70 <_vsnprintf+0x5f0>
            out(' ', buffer, idx++, maxlen);
10001a62:	1c55      	adds	r5, r2, #1
10001a64:	4633      	mov	r3, r6
10001a66:	4641      	mov	r1, r8
10001a68:	2020      	movs	r0, #32
10001a6a:	47b8      	blx	r7
          while (l++ < width) {
10001a6c:	46a1      	mov	r9, r4
            out(' ', buffer, idx++, maxlen);
10001a6e:	462a      	mov	r2, r5
          while (l++ < width) {
10001a70:	f109 0401 	add.w	r4, r9, #1
10001a74:	45ca      	cmp	sl, r9
10001a76:	d8f4      	bhi.n	10001a62 <_vsnprintf+0x5e2>
10001a78:	4614      	mov	r4, r2
10001a7a:	e7eb      	b.n	10001a54 <_vsnprintf+0x5d4>
      }

      case 'p' : {
        width = sizeof(void*) * 2U;
        flags |= FLAGS_ZEROPAD | FLAGS_UPPERCASE;
10001a7c:	f045 0521 	orr.w	r5, r5, #33	; 0x21
        if (is_ll) {
          idx = _ntoa_long_long(out, buffer, idx, maxlen, (uintptr_t)va_arg(va, void*), false, 16U, precision, width, flags);
        }
        else {
#endif
          idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned long)((uintptr_t)va_arg(va, void*)), false, 16U, precision, width, flags);
10001a80:	9b18      	ldr	r3, [sp, #96]	; 0x60
10001a82:	1d1a      	adds	r2, r3, #4
10001a84:	9218      	str	r2, [sp, #96]	; 0x60
10001a86:	681b      	ldr	r3, [r3, #0]
10001a88:	9505      	str	r5, [sp, #20]
10001a8a:	2208      	movs	r2, #8
10001a8c:	9204      	str	r2, [sp, #16]
10001a8e:	f8cd b00c 	str.w	fp, [sp, #12]
10001a92:	2210      	movs	r2, #16
10001a94:	9202      	str	r2, [sp, #8]
10001a96:	2200      	movs	r2, #0
10001a98:	9201      	str	r2, [sp, #4]
10001a9a:	9300      	str	r3, [sp, #0]
10001a9c:	4633      	mov	r3, r6
10001a9e:	4622      	mov	r2, r4
10001aa0:	4641      	mov	r1, r8
10001aa2:	4638      	mov	r0, r7
10001aa4:	f7ff f878 	bl	10000b98 <_ntoa_long>
10001aa8:	4604      	mov	r4, r0
#if defined(PRINTF_SUPPORT_LONG_LONG)
        }
#endif
        format++;
10001aaa:	9b0d      	ldr	r3, [sp, #52]	; 0x34
10001aac:	3301      	adds	r3, #1
10001aae:	930d      	str	r3, [sp, #52]	; 0x34
        break;
10001ab0:	e4f1      	b.n	10001496 <_vsnprintf+0x16>
      }

      case '%' :
        out('%', buffer, idx++, maxlen);
10001ab2:	1c65      	adds	r5, r4, #1
10001ab4:	4633      	mov	r3, r6
10001ab6:	4622      	mov	r2, r4
10001ab8:	4641      	mov	r1, r8
10001aba:	2025      	movs	r0, #37	; 0x25
10001abc:	47b8      	blx	r7
        format++;
10001abe:	9b0d      	ldr	r3, [sp, #52]	; 0x34
10001ac0:	3301      	adds	r3, #1
10001ac2:	930d      	str	r3, [sp, #52]	; 0x34
        out('%', buffer, idx++, maxlen);
10001ac4:	462c      	mov	r4, r5
        break;
10001ac6:	e4e6      	b.n	10001496 <_vsnprintf+0x16>

      default :
        out(*format, buffer, idx++, maxlen);
10001ac8:	1c65      	adds	r5, r4, #1
10001aca:	4633      	mov	r3, r6
10001acc:	4622      	mov	r2, r4
10001ace:	4641      	mov	r1, r8
10001ad0:	47b8      	blx	r7
        format++;
10001ad2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
10001ad4:	3301      	adds	r3, #1
10001ad6:	930d      	str	r3, [sp, #52]	; 0x34
        out(*format, buffer, idx++, maxlen);
10001ad8:	462c      	mov	r4, r5
        break;
10001ada:	e4dc      	b.n	10001496 <_vsnprintf+0x16>
    out = _out_null;
10001adc:	4f07      	ldr	r7, [pc, #28]	; (10001afc <_vsnprintf+0x67c>)
10001ade:	e4d9      	b.n	10001494 <_vsnprintf+0x14>
    }
  }

  // termination
  out((char)0, buffer, idx < maxlen ? idx : maxlen - 1U, maxlen);
10001ae0:	42b4      	cmp	r4, r6
10001ae2:	d301      	bcc.n	10001ae8 <_vsnprintf+0x668>
10001ae4:	1e72      	subs	r2, r6, #1
10001ae6:	e000      	b.n	10001aea <_vsnprintf+0x66a>
10001ae8:	4622      	mov	r2, r4
10001aea:	4633      	mov	r3, r6
10001aec:	4641      	mov	r1, r8
10001aee:	2000      	movs	r0, #0
10001af0:	47b8      	blx	r7

  // return written chars without terminating \0
  return (int)idx;
}
10001af2:	4620      	mov	r0, r4
10001af4:	b00f      	add	sp, #60	; 0x3c
10001af6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10001afa:	bf00      	nop
10001afc:	100009bd 			; <UNDEFINED> instruction: 0x100009bd

10001b00 <_out_char>:
  if (character) {
10001b00:	b900      	cbnz	r0, 10001b04 <_out_char+0x4>
10001b02:	4770      	bx	lr
{
10001b04:	b508      	push	{r3, lr}
    put_char(character);
10001b06:	f000 f817 	bl	10001b38 <put_char>
}
10001b0a:	bd08      	pop	{r3, pc}

10001b0c <printf>:


///////////////////////////////////////////////////////////////////////////////

int printf(const char* format, ...)
{
10001b0c:	b40f      	push	{r0, r1, r2, r3}
10001b0e:	b500      	push	{lr}
10001b10:	b085      	sub	sp, #20
10001b12:	aa06      	add	r2, sp, #24
10001b14:	f852 3b04 	ldr.w	r3, [r2], #4
  va_list va;
  va_start(va, format);
10001b18:	9203      	str	r2, [sp, #12]
  char buffer[1];
  const int ret = _vsnprintf(_out_char, buffer, (size_t)-1, format, va);
10001b1a:	9200      	str	r2, [sp, #0]
10001b1c:	f04f 32ff 	mov.w	r2, #4294967295
10001b20:	a902      	add	r1, sp, #8
10001b22:	4804      	ldr	r0, [pc, #16]	; (10001b34 <printf+0x28>)
10001b24:	f7ff fcac 	bl	10001480 <_vsnprintf>
  va_end(va);
  return ret;
}
10001b28:	b005      	add	sp, #20
10001b2a:	f85d eb04 	ldr.w	lr, [sp], #4
10001b2e:	b004      	add	sp, #16
10001b30:	4770      	bx	lr
10001b32:	bf00      	nop
10001b34:	10001b01 	andne	r1, r0, r1, lsl #22

10001b38 <put_char>:
#define UART_MIS(base)          (*((volatile uint32_t *)(base + 0x40)))
#define UART_ICR(base)          (*((volatile uint32_t *)(base + 0x44)))
#define UART_DMACR(base)        (*((volatile uint32_t *)(base + 0x48)))

int put_char(int ch) {
    while (UART_FLAG(UART0) & 0x20);
10001b38:	4b03      	ldr	r3, [pc, #12]	; (10001b48 <put_char+0x10>)
10001b3a:	699b      	ldr	r3, [r3, #24]
10001b3c:	f013 0f20 	tst.w	r3, #32
10001b40:	d1fa      	bne.n	10001b38 <put_char>
    UART_DATA(UART0) = ch;
10001b42:	4b01      	ldr	r3, [pc, #4]	; (10001b48 <put_char+0x10>)
10001b44:	6018      	str	r0, [r3, #0]
    return ch;
}
10001b46:	4770      	bx	lr
10001b48:	40200000 	eormi	r0, r0, r0

10001b4c <puts>:
int get_char(void) {
    while ((UART_FLAG(UART0) & 0x40) == 0);
    return UART_DATA(UART0);
}

int puts(const char* string) {
10001b4c:	b538      	push	{r3, r4, r5, lr}
10001b4e:	4605      	mov	r5, r0
    int index = 0;
10001b50:	2400      	movs	r4, #0
    while (string[index] != '\0') {
10001b52:	e002      	b.n	10001b5a <puts+0xe>
        put_char(string[index]);
10001b54:	f7ff fff0 	bl	10001b38 <put_char>
        index++;
10001b58:	3401      	adds	r4, #1
    while (string[index] != '\0') {
10001b5a:	5d28      	ldrb	r0, [r5, r4]
10001b5c:	2800      	cmp	r0, #0
10001b5e:	d1f9      	bne.n	10001b54 <puts+0x8>
    }
    put_char('\n');
10001b60:	200a      	movs	r0, #10
10001b62:	f7ff ffe9 	bl	10001b38 <put_char>
    return index;
}
10001b66:	4620      	mov	r0, r4
10001b68:	bd38      	pop	{r3, r4, r5, pc}
	...

10001b6c <uart_init>:

void uart_init(void) {
    UART_IBRD(UART0) = 40;
10001b6c:	4b07      	ldr	r3, [pc, #28]	; (10001b8c <uart_init+0x20>)
10001b6e:	2228      	movs	r2, #40	; 0x28
10001b70:	625a      	str	r2, [r3, #36]	; 0x24
    UART_FBRD(UART0) = 11;
10001b72:	220b      	movs	r2, #11
10001b74:	629a      	str	r2, [r3, #40]	; 0x28
    UART_LCRH(UART0) = 0x60;
10001b76:	2260      	movs	r2, #96	; 0x60
10001b78:	62da      	str	r2, [r3, #44]	; 0x2c
    UART_CR(UART0)   = 0x301;
10001b7a:	f240 3201 	movw	r2, #769	; 0x301
10001b7e:	631a      	str	r2, [r3, #48]	; 0x30
    UART_RSR(UART0)  = 0x0A;
10001b80:	220a      	movs	r2, #10
10001b82:	605a      	str	r2, [r3, #4]
    UART_CTRL(UART0) = 0x01;
10001b84:	2201      	movs	r2, #1
10001b86:	609a      	str	r2, [r3, #8]
}
10001b88:	4770      	bx	lr
10001b8a:	bf00      	nop
10001b8c:	40200000 	eormi	r0, r0, r0

10001b90 <fault_dump_opcode>:
    FD_CODE_TEXT_BASE,  FD_CODE_TEXT_ENDS,  FD_CODE_TEXT_SIZE );
    printf("Code Stack Growth Downward:%d\r\n", 
    FD_STACK_GROWTH_DOWNWARD);
}

static unsigned int fault_dump_opcode(unsigned int pc) {
10001b90:	b082      	sub	sp, #8
    uint16_t value[2] = {0};
10001b92:	2300      	movs	r3, #0
10001b94:	9301      	str	r3, [sp, #4]
    unsigned int opcode = 0;
    for (int i = 0; i < (sizeof(value) / sizeof(uint16_t)); i++) {
10001b96:	e007      	b.n	10001ba8 <fault_dump_opcode+0x18>
        value[i] = *(uint16_t*)(pc + i * sizeof(uint16_t));
10001b98:	f830 1013 	ldrh.w	r1, [r0, r3, lsl #1]
10001b9c:	aa02      	add	r2, sp, #8
10001b9e:	eb02 0243 	add.w	r2, r2, r3, lsl #1
10001ba2:	f822 1c04 	strh.w	r1, [r2, #-4]
    for (int i = 0; i < (sizeof(value) / sizeof(uint16_t)); i++) {
10001ba6:	3301      	adds	r3, #1
10001ba8:	2b01      	cmp	r3, #1
10001baa:	d9f5      	bls.n	10001b98 <fault_dump_opcode+0x8>
    }
    opcode = ((unsigned int)value[1] << 0x10) |
10001bac:	f8bd 0006 	ldrh.w	r0, [sp, #6]
             ((unsigned int)value[0] << 0x00);
10001bb0:	f8bd 3004 	ldrh.w	r3, [sp, #4]
    return opcode;
}
10001bb4:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
10001bb8:	b002      	add	sp, #8
10001bba:	4770      	bx	lr

10001bbc <opcode_is_bl_or_blx>:

static bool opcode_is_bl_or_blx(unsigned int ins) {
#define FD_BL_OPCODE_MASK   (0xF800)
#define FD_BL_OPCODE_BL     (0xF000)
#define FD_BL_OPCODE_BLX    (0xF800)
    uint16_t opcode1 = (((ins >> 0x00) & 0xFFFF) & FD_BL_OPCODE_MASK);
10001bbc:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
    uint16_t opcode2 = (((ins >> 0x10) & 0xFFFF) & FD_BL_OPCODE_MASK);
10001bc0:	0c00      	lsrs	r0, r0, #16
10001bc2:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
    if ((opcode1 == FD_BL_OPCODE_BL) || (opcode1 == FD_BL_OPCODE_BLX)) {
10001bc6:	f5b3 4f70 	cmp.w	r3, #61440	; 0xf000
10001bca:	d00a      	beq.n	10001be2 <opcode_is_bl_or_blx+0x26>
10001bcc:	f5b3 4f78 	cmp.w	r3, #63488	; 0xf800
10001bd0:	d009      	beq.n	10001be6 <opcode_is_bl_or_blx+0x2a>
        return true;
    }
    if ((opcode2 == FD_BL_OPCODE_BL) || (opcode2 == FD_BL_OPCODE_BLX)) {
10001bd2:	f5b0 4f70 	cmp.w	r0, #61440	; 0xf000
10001bd6:	d008      	beq.n	10001bea <opcode_is_bl_or_blx+0x2e>
10001bd8:	f5b0 4f78 	cmp.w	r0, #63488	; 0xf800
10001bdc:	d007      	beq.n	10001bee <opcode_is_bl_or_blx+0x32>
        return true;
    }
    return false;
10001bde:	2000      	movs	r0, #0
10001be0:	4770      	bx	lr
        return true;
10001be2:	2001      	movs	r0, #1
10001be4:	4770      	bx	lr
10001be6:	2001      	movs	r0, #1
10001be8:	4770      	bx	lr
        return true;
10001bea:	2001      	movs	r0, #1
10001bec:	4770      	bx	lr
10001bee:	2001      	movs	r0, #1
}
10001bf0:	4770      	bx	lr
	...

10001bf4 <fault_dump_callstack>:
    }
    printf("\r\n");
    while (1);
}

int fault_dump_callstack(unsigned int *buffer, size_t size, unsigned int *stack_point, unsigned int *stack_start) {
10001bf4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    int count = 0;
    unsigned int pc = 0, op = 0, *sp = NULL;
    if ((buffer == NULL) || (size <= 0)) {
10001bf8:	b348      	cbz	r0, 10001c4e <fault_dump_callstack+0x5a>
10001bfa:	460f      	mov	r7, r1
10001bfc:	4614      	mov	r4, r2
10001bfe:	461d      	mov	r5, r3
10001c00:	4680      	mov	r8, r0
10001c02:	b339      	cbz	r1, 10001c54 <fault_dump_callstack+0x60>
        return -FD_EEMPTY;
    }
    FD_STACK_CHECKIT(stack_point, stack_start) {
10001c04:	b34a      	cbz	r2, 10001c5a <fault_dump_callstack+0x66>
10001c06:	429a      	cmp	r2, r3
10001c08:	d82a      	bhi.n	10001c60 <fault_dump_callstack+0x6c>
    int count = 0;
10001c0a:	2600      	movs	r6, #0
10001c0c:	e000      	b.n	10001c10 <fault_dump_callstack+0x1c>
        return -FD_EINVAL;
    }
    FD_STACK_FOREACH(stack_point, stack_start) {
10001c0e:	3404      	adds	r4, #4
10001c10:	b1d4      	cbz	r4, 10001c48 <fault_dump_callstack+0x54>
10001c12:	42ac      	cmp	r4, r5
10001c14:	d818      	bhi.n	10001c48 <fault_dump_callstack+0x54>
        // Read stack[x] value to pc.
        pc = *(unsigned int *)sp;
10001c16:	6822      	ldr	r2, [r4, #0]
        // PC must be in the code segment.
        if ((pc < FD_CODE_TEXT_BASE) || (pc > FD_CODE_TEXT_ENDS)) {
10001c18:	4813      	ldr	r0, [pc, #76]	; (10001c68 <fault_dump_callstack+0x74>)
10001c1a:	4290      	cmp	r0, r2
10001c1c:	d8f7      	bhi.n	10001c0e <fault_dump_callstack+0x1a>
10001c1e:	4b13      	ldr	r3, [pc, #76]	; (10001c6c <fault_dump_callstack+0x78>)
10001c20:	4293      	cmp	r3, r2
10001c22:	d3f4      	bcc.n	10001c0e <fault_dump_callstack+0x1a>
            continue;
        }
        // The thumb instruction must be an odd number.
        if ((pc % 2) == 0) {
10001c24:	f012 0f01 	tst.w	r2, #1
10001c28:	d0f1      	beq.n	10001c0e <fault_dump_callstack+0x1a>
            continue;
        }
        // Fix thumb instruction set.
        pc = pc - 1;
        // Calculate the address of the instruction being executed before pushing on the stack.
        pc = pc - sizeof(unsigned int);
10001c2a:	f1a2 0905 	sub.w	r9, r2, #5
        // The thumb instruction is at least 2-byte aligned.
        if ((pc & 0x1) != 0) {
10001c2e:	d0ee      	beq.n	10001c0e <fault_dump_callstack+0x1a>
            continue;
        }
        // Read the instruction at the PC address.
        op = fault_dump_opcode(pc);
10001c30:	4648      	mov	r0, r9
10001c32:	f7ff ffad 	bl	10001b90 <fault_dump_opcode>
        // Only BL or BLX opcode need to be recorded.
        if (!opcode_is_bl_or_blx(op)) {
10001c36:	f7ff ffc1 	bl	10001bbc <opcode_is_bl_or_blx>
10001c3a:	2800      	cmp	r0, #0
10001c3c:	d0e7      	beq.n	10001c0e <fault_dump_callstack+0x1a>
            continue;
        }
        // storage this address.
        buffer[count] = pc;
10001c3e:	f848 9026 	str.w	r9, [r8, r6, lsl #2]
        count = count + 1;
10001c42:	3601      	adds	r6, #1
        if (count >= size) {
10001c44:	42be      	cmp	r6, r7
10001c46:	d3e2      	bcc.n	10001c0e <fault_dump_callstack+0x1a>
            break;
        }
    }
    return count;
}
10001c48:	4630      	mov	r0, r6
10001c4a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
        return -FD_EEMPTY;
10001c4e:	f06f 0601 	mvn.w	r6, #1
10001c52:	e7f9      	b.n	10001c48 <fault_dump_callstack+0x54>
10001c54:	f06f 0601 	mvn.w	r6, #1
10001c58:	e7f6      	b.n	10001c48 <fault_dump_callstack+0x54>
        return -FD_EINVAL;
10001c5a:	f06f 0602 	mvn.w	r6, #2
10001c5e:	e7f3      	b.n	10001c48 <fault_dump_callstack+0x54>
10001c60:	f06f 0602 	mvn.w	r6, #2
10001c64:	e7f0      	b.n	10001c48 <fault_dump_callstack+0x54>
10001c66:	bf00      	nop
10001c68:	10000000 	andne	r0, r0, r0
10001c6c:	10005de4 	andne	r5, r0, r4, ror #27

10001c70 <dump_exc_return>:
static void dump_exc_return(unsigned int exc_return) {
10001c70:	b510      	push	{r4, lr}
10001c72:	4604      	mov	r4, r0
    printf(" EXE_RETURN: 0x%08X \r\n", exc_return);
10001c74:	4601      	mov	r1, r0
10001c76:	4803      	ldr	r0, [pc, #12]	; (10001c84 <dump_exc_return+0x14>)
10001c78:	f7ff ff48 	bl	10001b0c <printf>
    fault_dump_exc_return(exc_return);
10001c7c:	4620      	mov	r0, r4
10001c7e:	f000 f90d 	bl	10001e9c <fault_dump_exc_return>
}
10001c82:	bd10      	pop	{r4, pc}
10001c84:	10005998 	mulne	r0, r8, r9

10001c88 <stack_using_msp>:
static bool stack_using_msp(unsigned int exc_return) {
10001c88:	b508      	push	{r3, lr}
    result = fault_dump_using_msp(exc_return);
10001c8a:	f000 f985 	bl	10001f98 <fault_dump_using_msp>
}
10001c8e:	bd08      	pop	{r3, pc}

10001c90 <fault_dump_init>:
void fault_dump_init(void) {
10001c90:	b508      	push	{r3, lr}
    fd_main_stack_base = FD_CODE_STACK_BASE;
10001c92:	490a      	ldr	r1, [pc, #40]	; (10001cbc <fault_dump_init+0x2c>)
10001c94:	4b0a      	ldr	r3, [pc, #40]	; (10001cc0 <fault_dump_init+0x30>)
10001c96:	6019      	str	r1, [r3, #0]
    fd_main_stack_full = FD_CODE_STACK_FULL;
10001c98:	4a0a      	ldr	r2, [pc, #40]	; (10001cc4 <fault_dump_init+0x34>)
10001c9a:	4b0b      	ldr	r3, [pc, #44]	; (10001cc8 <fault_dump_init+0x38>)
10001c9c:	601a      	str	r2, [r3, #0]
    printf("Code Stack:[%08X - %08X], size:%d\r\n",
10001c9e:	1a53      	subs	r3, r2, r1
10001ca0:	480a      	ldr	r0, [pc, #40]	; (10001ccc <fault_dump_init+0x3c>)
10001ca2:	f7ff ff33 	bl	10001b0c <printf>
    printf("Code Text :[%08X - %08X], size:%d\r\n",
10001ca6:	490a      	ldr	r1, [pc, #40]	; (10001cd0 <fault_dump_init+0x40>)
10001ca8:	4a0a      	ldr	r2, [pc, #40]	; (10001cd4 <fault_dump_init+0x44>)
10001caa:	1a53      	subs	r3, r2, r1
10001cac:	480a      	ldr	r0, [pc, #40]	; (10001cd8 <fault_dump_init+0x48>)
10001cae:	f7ff ff2d 	bl	10001b0c <printf>
    printf("Code Stack Growth Downward:%d\r\n", 
10001cb2:	2101      	movs	r1, #1
10001cb4:	4809      	ldr	r0, [pc, #36]	; (10001cdc <fault_dump_init+0x4c>)
10001cb6:	f7ff ff29 	bl	10001b0c <printf>
}
10001cba:	bd08      	pop	{r3, pc}
10001cbc:	380ff000 	stmdacc	pc, {ip, sp, lr, pc}	; <UNPREDICTABLE>
10001cc0:	38008570 	stmdacc	r0, {r4, r5, r6, r8, sl, pc}
10001cc4:	38100000 	ldmdacc	r0, {}	; <UNPREDICTABLE>
10001cc8:	38008574 	stmdacc	r0, {r2, r4, r5, r6, r8, sl, pc}
10001ccc:	100059b0 			; <UNDEFINED> instruction: 0x100059b0
10001cd0:	10000000 	andne	r0, r0, r0
10001cd4:	10005de4 	andne	r5, r0, r4, ror #27
10001cd8:	100059d4 	ldrdne	r5, [r0], -r4
10001cdc:	100059f8 	strdne	r5, [r0], -r8

10001ce0 <fault_dump_handler>:
void fault_dump_handler(unsigned int *stack, unsigned int linker) {
10001ce0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10001ce2:	4605      	mov	r5, r0
10001ce4:	460e      	mov	r6, r1
    frame.manual.r4  = FD_STACK_READVAL(point);
10001ce6:	6803      	ldr	r3, [r0, #0]
10001ce8:	4c4e      	ldr	r4, [pc, #312]	; (10001e24 <fault_dump_handler+0x144>)
10001cea:	6023      	str	r3, [r4, #0]
    frame.manual.r5  = FD_STACK_READVAL(point);
10001cec:	6843      	ldr	r3, [r0, #4]
10001cee:	6063      	str	r3, [r4, #4]
    frame.manual.r6  = FD_STACK_READVAL(point);
10001cf0:	6883      	ldr	r3, [r0, #8]
10001cf2:	60a3      	str	r3, [r4, #8]
    frame.manual.r7  = FD_STACK_READVAL(point);
10001cf4:	68c3      	ldr	r3, [r0, #12]
10001cf6:	60e3      	str	r3, [r4, #12]
    frame.manual.r8  = FD_STACK_READVAL(point);
10001cf8:	6903      	ldr	r3, [r0, #16]
10001cfa:	6123      	str	r3, [r4, #16]
    frame.manual.r9  = FD_STACK_READVAL(point);
10001cfc:	6943      	ldr	r3, [r0, #20]
10001cfe:	6163      	str	r3, [r4, #20]
    frame.manual.r10 = FD_STACK_READVAL(point);
10001d00:	6983      	ldr	r3, [r0, #24]
10001d02:	61a3      	str	r3, [r4, #24]
    frame.manual.r11 = FD_STACK_READVAL(point);
10001d04:	69c3      	ldr	r3, [r0, #28]
10001d06:	61e3      	str	r3, [r4, #28]
    frame.except.r0  = FD_STACK_READVAL(point);
10001d08:	6a03      	ldr	r3, [r0, #32]
10001d0a:	6223      	str	r3, [r4, #32]
    frame.except.r1  = FD_STACK_READVAL(point);
10001d0c:	6a43      	ldr	r3, [r0, #36]	; 0x24
10001d0e:	6263      	str	r3, [r4, #36]	; 0x24
    frame.except.r2  = FD_STACK_READVAL(point);
10001d10:	6a83      	ldr	r3, [r0, #40]	; 0x28
10001d12:	62a3      	str	r3, [r4, #40]	; 0x28
    frame.except.r3  = FD_STACK_READVAL(point);
10001d14:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
10001d16:	62e3      	str	r3, [r4, #44]	; 0x2c
    frame.except.r12 = FD_STACK_READVAL(point);
10001d18:	6b03      	ldr	r3, [r0, #48]	; 0x30
10001d1a:	6323      	str	r3, [r4, #48]	; 0x30
    frame.except.lr  = FD_STACK_READVAL(point);
10001d1c:	6b43      	ldr	r3, [r0, #52]	; 0x34
10001d1e:	6363      	str	r3, [r4, #52]	; 0x34
    frame.except.pc  = FD_STACK_READVAL(point);
10001d20:	6b83      	ldr	r3, [r0, #56]	; 0x38
10001d22:	63a3      	str	r3, [r4, #56]	; 0x38
    frame.except.psr = FD_STACK_READVAL(point);
10001d24:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
10001d26:	63e3      	str	r3, [r4, #60]	; 0x3c
    printf("\r\n");
10001d28:	4f3f      	ldr	r7, [pc, #252]	; (10001e28 <fault_dump_handler+0x148>)
10001d2a:	4638      	mov	r0, r7
10001d2c:	f7ff ff0e 	bl	10001b4c <puts>
    printf(" HardFault Information Dump \r\n");
10001d30:	483e      	ldr	r0, [pc, #248]	; (10001e2c <fault_dump_handler+0x14c>)
10001d32:	f7ff ff0b 	bl	10001b4c <puts>
    printf(" Stack Frame   \r\n");
10001d36:	483e      	ldr	r0, [pc, #248]	; (10001e30 <fault_dump_handler+0x150>)
10001d38:	f7ff ff08 	bl	10001b4c <puts>
    printf(" R0   = 0x%08X \r\n", (unsigned int)frame.except.r0);
10001d3c:	6a21      	ldr	r1, [r4, #32]
10001d3e:	483d      	ldr	r0, [pc, #244]	; (10001e34 <fault_dump_handler+0x154>)
10001d40:	f7ff fee4 	bl	10001b0c <printf>
    printf(" R1   = 0x%08X \r\n", (unsigned int)frame.except.r1);
10001d44:	6a61      	ldr	r1, [r4, #36]	; 0x24
10001d46:	483c      	ldr	r0, [pc, #240]	; (10001e38 <fault_dump_handler+0x158>)
10001d48:	f7ff fee0 	bl	10001b0c <printf>
    printf(" R2   = 0x%08X \r\n", (unsigned int)frame.except.r2);
10001d4c:	6aa1      	ldr	r1, [r4, #40]	; 0x28
10001d4e:	483b      	ldr	r0, [pc, #236]	; (10001e3c <fault_dump_handler+0x15c>)
10001d50:	f7ff fedc 	bl	10001b0c <printf>
    printf(" R3   = 0x%08X \r\n", (unsigned int)frame.except.r3);
10001d54:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
10001d56:	483a      	ldr	r0, [pc, #232]	; (10001e40 <fault_dump_handler+0x160>)
10001d58:	f7ff fed8 	bl	10001b0c <printf>
    printf(" R4   = 0x%08X \r\n", (unsigned int)frame.manual.r4);
10001d5c:	6821      	ldr	r1, [r4, #0]
10001d5e:	4839      	ldr	r0, [pc, #228]	; (10001e44 <fault_dump_handler+0x164>)
10001d60:	f7ff fed4 	bl	10001b0c <printf>
    printf(" R5   = 0x%08X \r\n", (unsigned int)frame.manual.r5);
10001d64:	6861      	ldr	r1, [r4, #4]
10001d66:	4838      	ldr	r0, [pc, #224]	; (10001e48 <fault_dump_handler+0x168>)
10001d68:	f7ff fed0 	bl	10001b0c <printf>
    printf(" R6   = 0x%08X \r\n", (unsigned int)frame.manual.r6);
10001d6c:	68a1      	ldr	r1, [r4, #8]
10001d6e:	4837      	ldr	r0, [pc, #220]	; (10001e4c <fault_dump_handler+0x16c>)
10001d70:	f7ff fecc 	bl	10001b0c <printf>
    printf(" R7   = 0x%08X \r\n", (unsigned int)frame.manual.r7);
10001d74:	68e1      	ldr	r1, [r4, #12]
10001d76:	4836      	ldr	r0, [pc, #216]	; (10001e50 <fault_dump_handler+0x170>)
10001d78:	f7ff fec8 	bl	10001b0c <printf>
    printf(" R8   = 0x%08X \r\n", (unsigned int)frame.manual.r8);
10001d7c:	6921      	ldr	r1, [r4, #16]
10001d7e:	4835      	ldr	r0, [pc, #212]	; (10001e54 <fault_dump_handler+0x174>)
10001d80:	f7ff fec4 	bl	10001b0c <printf>
    printf(" R9   = 0x%08X \r\n", (unsigned int)frame.manual.r9);
10001d84:	6961      	ldr	r1, [r4, #20]
10001d86:	4834      	ldr	r0, [pc, #208]	; (10001e58 <fault_dump_handler+0x178>)
10001d88:	f7ff fec0 	bl	10001b0c <printf>
    printf(" R10  = 0x%08X \r\n", (unsigned int)frame.manual.r10);
10001d8c:	69a1      	ldr	r1, [r4, #24]
10001d8e:	4833      	ldr	r0, [pc, #204]	; (10001e5c <fault_dump_handler+0x17c>)
10001d90:	f7ff febc 	bl	10001b0c <printf>
    printf(" R11  = 0x%08X \r\n", (unsigned int)frame.manual.r11);
10001d94:	69e1      	ldr	r1, [r4, #28]
10001d96:	4832      	ldr	r0, [pc, #200]	; (10001e60 <fault_dump_handler+0x180>)
10001d98:	f7ff feb8 	bl	10001b0c <printf>
    printf(" R12  = 0x%08X \r\n", (unsigned int)frame.except.r12);
10001d9c:	6b21      	ldr	r1, [r4, #48]	; 0x30
10001d9e:	4831      	ldr	r0, [pc, #196]	; (10001e64 <fault_dump_handler+0x184>)
10001da0:	f7ff feb4 	bl	10001b0c <printf>
    printf(" LR   = 0x%08X \r\n", (unsigned int)frame.except.lr);
10001da4:	6b61      	ldr	r1, [r4, #52]	; 0x34
10001da6:	4830      	ldr	r0, [pc, #192]	; (10001e68 <fault_dump_handler+0x188>)
10001da8:	f7ff feb0 	bl	10001b0c <printf>
    printf(" PC   = 0x%08X \r\n", (unsigned int)frame.except.pc);
10001dac:	6ba1      	ldr	r1, [r4, #56]	; 0x38
10001dae:	482f      	ldr	r0, [pc, #188]	; (10001e6c <fault_dump_handler+0x18c>)
10001db0:	f7ff feac 	bl	10001b0c <printf>
    printf(" PSR  = 0x%08X \r\n", (unsigned int)frame.except.psr);
10001db4:	6be1      	ldr	r1, [r4, #60]	; 0x3c
10001db6:	482e      	ldr	r0, [pc, #184]	; (10001e70 <fault_dump_handler+0x190>)
10001db8:	f7ff fea8 	bl	10001b0c <printf>
    printf("\r\n");
10001dbc:	4638      	mov	r0, r7
10001dbe:	f7ff fec5 	bl	10001b4c <puts>
    dump_exc_return(linker);
10001dc2:	4630      	mov	r0, r6
10001dc4:	f7ff ff54 	bl	10001c70 <dump_exc_return>
    if (stack_using_msp(linker)) {
10001dc8:	4630      	mov	r0, r6
10001dca:	f7ff ff5d 	bl	10001c88 <stack_using_msp>
10001dce:	b190      	cbz	r0, 10001df6 <fault_dump_handler+0x116>
        count = fd_msp_stack_parser(buffer, FD_STACK_DUMP_DEPTH_MAX, 
10001dd0:	4b28      	ldr	r3, [pc, #160]	; (10001e74 <fault_dump_handler+0x194>)
10001dd2:	681c      	ldr	r4, [r3, #0]
10001dd4:	4b28      	ldr	r3, [pc, #160]	; (10001e78 <fault_dump_handler+0x198>)
10001dd6:	f105 0240 	add.w	r2, r5, #64	; 0x40
10001dda:	2140      	movs	r1, #64	; 0x40
10001ddc:	4827      	ldr	r0, [pc, #156]	; (10001e7c <fault_dump_handler+0x19c>)
10001dde:	47a0      	blx	r4
10001de0:	4605      	mov	r5, r0
    printf(" Stack Call: ");
10001de2:	4827      	ldr	r0, [pc, #156]	; (10001e80 <fault_dump_handler+0x1a0>)
10001de4:	f7ff fe92 	bl	10001b0c <printf>
    printf("%08X ", (unsigned int)frame.except.pc);
10001de8:	4b0e      	ldr	r3, [pc, #56]	; (10001e24 <fault_dump_handler+0x144>)
10001dea:	6b99      	ldr	r1, [r3, #56]	; 0x38
10001dec:	4825      	ldr	r0, [pc, #148]	; (10001e84 <fault_dump_handler+0x1a4>)
10001dee:	f7ff fe8d 	bl	10001b0c <printf>
    for (index = 0; index < count; index++) {
10001df2:	2400      	movs	r4, #0
10001df4:	e00f      	b.n	10001e16 <fault_dump_handler+0x136>
        count = fd_psp_stack_parser(buffer, FD_STACK_DUMP_DEPTH_MAX, stack, NULL);
10001df6:	4b24      	ldr	r3, [pc, #144]	; (10001e88 <fault_dump_handler+0x1a8>)
10001df8:	681c      	ldr	r4, [r3, #0]
10001dfa:	2300      	movs	r3, #0
10001dfc:	462a      	mov	r2, r5
10001dfe:	2140      	movs	r1, #64	; 0x40
10001e00:	481e      	ldr	r0, [pc, #120]	; (10001e7c <fault_dump_handler+0x19c>)
10001e02:	47a0      	blx	r4
10001e04:	4605      	mov	r5, r0
10001e06:	e7ec      	b.n	10001de2 <fault_dump_handler+0x102>
        printf("%08X ", buffer[index]);
10001e08:	4b1c      	ldr	r3, [pc, #112]	; (10001e7c <fault_dump_handler+0x19c>)
10001e0a:	f853 1024 	ldr.w	r1, [r3, r4, lsl #2]
10001e0e:	481d      	ldr	r0, [pc, #116]	; (10001e84 <fault_dump_handler+0x1a4>)
10001e10:	f7ff fe7c 	bl	10001b0c <printf>
    for (index = 0; index < count; index++) {
10001e14:	3401      	adds	r4, #1
10001e16:	42a5      	cmp	r5, r4
10001e18:	dcf6      	bgt.n	10001e08 <fault_dump_handler+0x128>
    printf("\r\n");
10001e1a:	4803      	ldr	r0, [pc, #12]	; (10001e28 <fault_dump_handler+0x148>)
10001e1c:	f7ff fe96 	bl	10001b4c <puts>
    while (1);
10001e20:	e7fe      	b.n	10001e20 <fault_dump_handler+0x140>
10001e22:	bf00      	nop
10001e24:	38008578 	stmdacc	r0, {r3, r4, r5, r6, r8, sl, pc}
10001e28:	10005a34 	andne	r5, r0, r4, lsr sl
10001e2c:	10005a18 	andne	r5, r0, r8, lsl sl
10001e30:	10005a38 	andne	r5, r0, r8, lsr sl
10001e34:	10005a4c 	andne	r5, r0, ip, asr #20
10001e38:	10005a60 	andne	r5, r0, r0, ror #20
10001e3c:	10005a74 	andne	r5, r0, r4, ror sl
10001e40:	10005a88 	andne	r5, r0, r8, lsl #21
10001e44:	10005a9c 	mulne	r0, ip, sl
10001e48:	10005ab0 			; <UNDEFINED> instruction: 0x10005ab0
10001e4c:	10005ac4 	andne	r5, r0, r4, asr #21
10001e50:	10005ad8 	ldrdne	r5, [r0], -r8
10001e54:	10005aec 	andne	r5, r0, ip, ror #21
10001e58:	10005b00 	andne	r5, r0, r0, lsl #22
10001e5c:	10005b14 	andne	r5, r0, r4, lsl fp
10001e60:	10005b28 	andne	r5, r0, r8, lsr #22
10001e64:	10005b3c 	andne	r5, r0, ip, lsr fp
10001e68:	10005b50 	andne	r5, r0, r0, asr fp
10001e6c:	10005b64 	andne	r5, r0, r4, ror #22
10001e70:	10005b78 	andne	r5, r0, r8, ror fp
10001e74:	38000004 	stmdacc	r0, {r2}
10001e78:	38100000 	ldmdacc	r0, {}	; <UNPREDICTABLE>
10001e7c:	38008470 	stmdacc	r0, {r4, r5, r6, sl, pc}
10001e80:	10005b8c 	andne	r5, r0, ip, lsl #23
10001e84:	100058a8 	andne	r5, r0, r8, lsr #17
10001e88:	38000008 	stmdacc	r0, {r3}

10001e8c <fault_dump_bm_stack_point>:
 */
__STATIC_FORCEINLINE uint32_t __get_MSP(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, msp" : "=r" (result) );
10001e8c:	f3ef 8008 	mrs	r0, MSP

unsigned int fault_dump_bm_stack_point(void) {
    return __get_MSP();
}
10001e90:	4770      	bx	lr
	...

10001e94 <fault_dump_bm_stack_start>:

unsigned int fault_dump_bm_stack_start(void) {
    return FD_STACK_START;
}
10001e94:	4800      	ldr	r0, [pc, #0]	; (10001e98 <fault_dump_bm_stack_start+0x4>)
10001e96:	4770      	bx	lr
10001e98:	38100000 	ldmdacc	r0, {}	; <UNPREDICTABLE>

10001e9c <fault_dump_exc_return>:
  *
  ******************************************************************************
  */
#include "fault-dump.h"

void fault_dump_exc_return(unsigned int exc_return) {
10001e9c:	b510      	push	{r4, lr}
10001e9e:	4604      	mov	r4, r0
    printf(" \r\n");
10001ea0:	482a      	ldr	r0, [pc, #168]	; (10001f4c <fault_dump_exc_return+0xb0>)
10001ea2:	f7ff fe53 	bl	10001b4c <puts>
    printf(" Bit0 Except Security State:");
10001ea6:	482a      	ldr	r0, [pc, #168]	; (10001f50 <fault_dump_exc_return+0xb4>)
10001ea8:	f7ff fe30 	bl	10001b0c <printf>
    if (FD_CHECK_BIT(exc_return, 0)) {
10001eac:	f014 0f01 	tst.w	r4, #1
10001eb0:	d033      	beq.n	10001f1a <fault_dump_exc_return+0x7e>
        printf("[Use Security State....].\r\n");
10001eb2:	4828      	ldr	r0, [pc, #160]	; (10001f54 <fault_dump_exc_return+0xb8>)
10001eb4:	f7ff fe4a 	bl	10001b4c <puts>
    } else {
        printf("[Use Not Security State].\r\n");
    }
    printf(" Bit2 Stack Point Select...:");
10001eb8:	4827      	ldr	r0, [pc, #156]	; (10001f58 <fault_dump_exc_return+0xbc>)
10001eba:	f7ff fe27 	bl	10001b0c <printf>
    if (FD_CHECK_BIT(exc_return, 2)) {
10001ebe:	f014 0f04 	tst.w	r4, #4
10001ec2:	d02e      	beq.n	10001f22 <fault_dump_exc_return+0x86>
        printf("[Use PSP...............].\r\n");
10001ec4:	4825      	ldr	r0, [pc, #148]	; (10001f5c <fault_dump_exc_return+0xc0>)
10001ec6:	f7ff fe41 	bl	10001b4c <puts>
    } else {
        printf("[Use MSP...............].\r\n");
    }
    printf(" Bit3 Proc Mode Before IRQ.:");
10001eca:	4825      	ldr	r0, [pc, #148]	; (10001f60 <fault_dump_exc_return+0xc4>)
10001ecc:	f7ff fe1e 	bl	10001b0c <printf>
    if (FD_CHECK_BIT(exc_return, 3)) {
10001ed0:	f014 0f08 	tst.w	r4, #8
10001ed4:	d029      	beq.n	10001f2a <fault_dump_exc_return+0x8e>
        printf("[Use Thread Mode.......].\r\n");
10001ed6:	4823      	ldr	r0, [pc, #140]	; (10001f64 <fault_dump_exc_return+0xc8>)
10001ed8:	f7ff fe38 	bl	10001b4c <puts>
    } else {
        printf("[Use Process Mode......].\r\n");
    }
    printf(" Bit4 Stack Frame Type.....:");
10001edc:	4822      	ldr	r0, [pc, #136]	; (10001f68 <fault_dump_exc_return+0xcc>)
10001ede:	f7ff fe15 	bl	10001b0c <printf>
    if (FD_CHECK_BIT(exc_return, 4)) {
10001ee2:	f014 0f10 	tst.w	r4, #16
10001ee6:	d024      	beq.n	10001f32 <fault_dump_exc_return+0x96>
        printf("[Use Standard Frame....].\r\n");
10001ee8:	4820      	ldr	r0, [pc, #128]	; (10001f6c <fault_dump_exc_return+0xd0>)
10001eea:	f7ff fe2f 	bl	10001b4c <puts>
    } else {
        printf("[Use Extended Frame....].\r\n");
    }
    printf(" Bit5 Default Call Rule....:");
10001eee:	4820      	ldr	r0, [pc, #128]	; (10001f70 <fault_dump_exc_return+0xd4>)
10001ef0:	f7ff fe0c 	bl	10001b0c <printf>
    if (FD_CHECK_BIT(exc_return, 5)) {
10001ef4:	f014 0f20 	tst.w	r4, #32
10001ef8:	d01f      	beq.n	10001f3a <fault_dump_exc_return+0x9e>
        printf("[Use Default Rule......].\r\n");
10001efa:	481e      	ldr	r0, [pc, #120]	; (10001f74 <fault_dump_exc_return+0xd8>)
10001efc:	f7ff fe26 	bl	10001b4c <puts>
    } else {
        printf("[Use Not Default Rule..].\r\n");
    }
    printf(" Bit6 Security Stack.......:");
10001f00:	481d      	ldr	r0, [pc, #116]	; (10001f78 <fault_dump_exc_return+0xdc>)
10001f02:	f7ff fe03 	bl	10001b0c <printf>
    if (FD_CHECK_BIT(exc_return, 6)) {
10001f06:	f014 0f40 	tst.w	r4, #64	; 0x40
10001f0a:	d01a      	beq.n	10001f42 <fault_dump_exc_return+0xa6>
        printf("[Use Security Stack....].\r\n");
10001f0c:	481b      	ldr	r0, [pc, #108]	; (10001f7c <fault_dump_exc_return+0xe0>)
10001f0e:	f7ff fe1d 	bl	10001b4c <puts>
    } else {
        printf("[Use Not Security Stack].\r\n");
    }
    printf(" \r\n");
10001f12:	480e      	ldr	r0, [pc, #56]	; (10001f4c <fault_dump_exc_return+0xb0>)
10001f14:	f7ff fe1a 	bl	10001b4c <puts>
}
10001f18:	bd10      	pop	{r4, pc}
        printf("[Use Not Security State].\r\n");
10001f1a:	4819      	ldr	r0, [pc, #100]	; (10001f80 <fault_dump_exc_return+0xe4>)
10001f1c:	f7ff fe16 	bl	10001b4c <puts>
10001f20:	e7ca      	b.n	10001eb8 <fault_dump_exc_return+0x1c>
        printf("[Use MSP...............].\r\n");
10001f22:	4818      	ldr	r0, [pc, #96]	; (10001f84 <fault_dump_exc_return+0xe8>)
10001f24:	f7ff fe12 	bl	10001b4c <puts>
10001f28:	e7cf      	b.n	10001eca <fault_dump_exc_return+0x2e>
        printf("[Use Process Mode......].\r\n");
10001f2a:	4817      	ldr	r0, [pc, #92]	; (10001f88 <fault_dump_exc_return+0xec>)
10001f2c:	f7ff fe0e 	bl	10001b4c <puts>
10001f30:	e7d4      	b.n	10001edc <fault_dump_exc_return+0x40>
        printf("[Use Extended Frame....].\r\n");
10001f32:	4816      	ldr	r0, [pc, #88]	; (10001f8c <fault_dump_exc_return+0xf0>)
10001f34:	f7ff fe0a 	bl	10001b4c <puts>
10001f38:	e7d9      	b.n	10001eee <fault_dump_exc_return+0x52>
        printf("[Use Not Default Rule..].\r\n");
10001f3a:	4815      	ldr	r0, [pc, #84]	; (10001f90 <fault_dump_exc_return+0xf4>)
10001f3c:	f7ff fe06 	bl	10001b4c <puts>
10001f40:	e7de      	b.n	10001f00 <fault_dump_exc_return+0x64>
        printf("[Use Not Security Stack].\r\n");
10001f42:	4814      	ldr	r0, [pc, #80]	; (10001f94 <fault_dump_exc_return+0xf8>)
10001f44:	f7ff fe02 	bl	10001b4c <puts>
10001f48:	e7e3      	b.n	10001f12 <fault_dump_exc_return+0x76>
10001f4a:	bf00      	nop
10001f4c:	10005b9c 	mulne	r0, ip, fp
10001f50:	10005ba0 	andne	r5, r0, r0, lsr #23
10001f54:	10005bc0 	andne	r5, r0, r0, asr #23
10001f58:	10005bf8 	strdne	r5, [r0], -r8
10001f5c:	10005c18 	andne	r5, r0, r8, lsl ip
10001f60:	10005c50 	andne	r5, r0, r0, asr ip
10001f64:	10005c70 	andne	r5, r0, r0, ror ip
10001f68:	10005ca8 	andne	r5, r0, r8, lsr #25
10001f6c:	10005cc8 	andne	r5, r0, r8, asr #25
10001f70:	10005d00 	andne	r5, r0, r0, lsl #26
10001f74:	10005d20 	andne	r5, r0, r0, lsr #26
10001f78:	10005d58 	andne	r5, r0, r8, asr sp
10001f7c:	10005d78 	andne	r5, r0, r8, ror sp
10001f80:	10005bdc 	ldrdne	r5, [r0], -ip
10001f84:	10005c34 	andne	r5, r0, r4, lsr ip
10001f88:	10005c8c 	andne	r5, r0, ip, lsl #25
10001f8c:	10005ce4 	andne	r5, r0, r4, ror #25
10001f90:	10005d3c 	andne	r5, r0, ip, lsr sp
10001f94:	10005d94 	mulne	r0, r4, sp

10001f98 <fault_dump_using_msp>:

bool fault_dump_using_msp(unsigned int exc_return) {
    if (FD_CHECK_BIT(exc_return, 2)) {
10001f98:	f010 0f04 	tst.w	r0, #4
10001f9c:	d001      	beq.n	10001fa2 <fault_dump_using_msp+0xa>
        return false;
10001f9e:	2000      	movs	r0, #0
10001fa0:	4770      	bx	lr
    } else {
        return true;
10001fa2:	2001      	movs	r0, #1
    }
}
10001fa4:	4770      	bx	lr
	...

10001fa8 <fault_dump_unalign>:
    SCB->CCR |= SCB_CCR_DIV_0_TRP_Msk;
    c = (a + (b / c));
    printf("zero = %d\r\n", c);
}

void fault_dump_unalign(void) {
10001fa8:	b530      	push	{r4, r5, lr}
10001faa:	b083      	sub	sp, #12
    volatile int *addr = NULL;
    volatile int value = 0;
10001fac:	2400      	movs	r4, #0
10001fae:	9401      	str	r4, [sp, #4]
    SCB->CCR |= SCB_CCR_UNALIGN_TRP_Msk;
10001fb0:	4a0e      	ldr	r2, [pc, #56]	; (10001fec <fault_dump_unalign+0x44>)
10001fb2:	6953      	ldr	r3, [r2, #20]
10001fb4:	f043 0308 	orr.w	r3, r3, #8
10001fb8:	6153      	str	r3, [r2, #20]
    addr = (int*)0x00;
    value = *addr;
10001fba:	6823      	ldr	r3, [r4, #0]
10001fbc:	9301      	str	r3, [sp, #4]
    printf("addr:0x%02X-value:0x%08X\r\n", (int)addr, value);
10001fbe:	9a01      	ldr	r2, [sp, #4]
10001fc0:	4d0b      	ldr	r5, [pc, #44]	; (10001ff0 <fault_dump_unalign+0x48>)
10001fc2:	4621      	mov	r1, r4
10001fc4:	4628      	mov	r0, r5
10001fc6:	f7ff fda1 	bl	10001b0c <printf>
    addr = (int*)0x04;
    value = *addr;
10001fca:	6863      	ldr	r3, [r4, #4]
10001fcc:	9301      	str	r3, [sp, #4]
    printf("addr:0x%02X-value:0x%08X\r\n", (int)addr, value);
10001fce:	9a01      	ldr	r2, [sp, #4]
10001fd0:	2104      	movs	r1, #4
10001fd2:	4628      	mov	r0, r5
10001fd4:	f7ff fd9a 	bl	10001b0c <printf>
    addr = (int*)0x03;
    value = *addr;
10001fd8:	f8d4 3003 	ldr.w	r3, [r4, #3]
10001fdc:	9301      	str	r3, [sp, #4]
    printf("addr:0x%02X-value:0x%08X\r\n", (int)addr, value);
10001fde:	9a01      	ldr	r2, [sp, #4]
10001fe0:	2103      	movs	r1, #3
10001fe2:	4628      	mov	r0, r5
10001fe4:	f7ff fd92 	bl	10001b0c <printf>
}
10001fe8:	b003      	add	sp, #12
10001fea:	bd30      	pop	{r4, r5, pc}
10001fec:	e000ed00 	and	lr, r0, r0, lsl #26
10001ff0:	10005db0 			; <UNDEFINED> instruction: 0x10005db0

10001ff4 <vListInitialise>:
    traceENTER_vListInitialise( pxList );

    /* The list structure contains a list item which is used to mark the
     * end of the list.  To initialise the list the list end is inserted
     * as the only list entry. */
    pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );
10001ff4:	f100 0308 	add.w	r3, r0, #8
10001ff8:	6043      	str	r3, [r0, #4]

    listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( &( pxList->xListEnd ) );

    /* The list end value is the highest possible value in the list to
     * ensure it remains at the end of the list. */
    pxList->xListEnd.xItemValue = portMAX_DELAY;
10001ffa:	f04f 32ff 	mov.w	r2, #4294967295
10001ffe:	6082      	str	r2, [r0, #8]

    /* The list end next and previous pointers point to itself so we know
     * when the list is empty. */
    pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );
10002000:	60c3      	str	r3, [r0, #12]
    pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );
10002002:	6103      	str	r3, [r0, #16]

    /* Initialize the remaining fields of xListEnd when it is a proper ListItem_t */
    #if ( configUSE_MINI_LIST_ITEM == 0 )
    {
        pxList->xListEnd.pvOwner = NULL;
10002004:	2300      	movs	r3, #0
10002006:	6143      	str	r3, [r0, #20]
        pxList->xListEnd.pxContainer = NULL;
10002008:	6183      	str	r3, [r0, #24]
        listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( &( pxList->xListEnd ) );
    }
    #endif

    pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
1000200a:	6003      	str	r3, [r0, #0]
     * configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
    listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
    listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );

    traceRETURN_vListInitialise();
}
1000200c:	4770      	bx	lr

1000200e <vListInitialiseItem>:
void vListInitialiseItem( ListItem_t * const pxItem )
{
    traceENTER_vListInitialiseItem( pxItem );

    /* Make sure the list item is not recorded as being on a list. */
    pxItem->pxContainer = NULL;
1000200e:	2300      	movs	r3, #0
10002010:	6103      	str	r3, [r0, #16]
     * configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
    listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
    listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );

    traceRETURN_vListInitialiseItem();
}
10002012:	4770      	bx	lr

10002014 <vListInsert>:
}
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList,
                  ListItem_t * const pxNewListItem )
{
10002014:	b430      	push	{r4, r5}
    ListItem_t * pxIterator;
    const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
10002016:	680d      	ldr	r5, [r1, #0]
     * new list item should be placed after it.  This ensures that TCBs which are
     * stored in ready lists (all of which have the same xItemValue value) get a
     * share of the CPU.  However, if the xItemValue is the same as the back marker
     * the iteration loop below will not end.  Therefore the value is checked
     * first, and the algorithm slightly modified if necessary. */
    if( xValueOfInsertion == portMAX_DELAY )
10002018:	f1b5 3fff 	cmp.w	r5, #4294967295
1000201c:	d011      	beq.n	10002042 <vListInsert+0x2e>
        *   5) If the FreeRTOS port supports interrupt nesting then ensure that
        *      the priority of the tick interrupt is at or below
        *      configMAX_SYSCALL_INTERRUPT_PRIORITY.
        **********************************************************************/

        for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext )
1000201e:	f100 0308 	add.w	r3, r0, #8
10002022:	461c      	mov	r4, r3
10002024:	685b      	ldr	r3, [r3, #4]
10002026:	681a      	ldr	r2, [r3, #0]
10002028:	42aa      	cmp	r2, r5
1000202a:	d9fa      	bls.n	10002022 <vListInsert+0xe>
            /* There is nothing to do here, just iterating to the wanted
             * insertion position. */
        }
    }

    pxNewListItem->pxNext = pxIterator->pxNext;
1000202c:	6863      	ldr	r3, [r4, #4]
1000202e:	604b      	str	r3, [r1, #4]
    pxNewListItem->pxNext->pxPrevious = pxNewListItem;
10002030:	6099      	str	r1, [r3, #8]
    pxNewListItem->pxPrevious = pxIterator;
10002032:	608c      	str	r4, [r1, #8]
    pxIterator->pxNext = pxNewListItem;
10002034:	6061      	str	r1, [r4, #4]

    /* Remember which list the item is in.  This allows fast removal of the
     * item later. */
    pxNewListItem->pxContainer = pxList;
10002036:	6108      	str	r0, [r1, #16]

    ( pxList->uxNumberOfItems ) = ( UBaseType_t ) ( pxList->uxNumberOfItems + 1U );
10002038:	6803      	ldr	r3, [r0, #0]
1000203a:	3301      	adds	r3, #1
1000203c:	6003      	str	r3, [r0, #0]

    traceRETURN_vListInsert();
}
1000203e:	bc30      	pop	{r4, r5}
10002040:	4770      	bx	lr
        pxIterator = pxList->xListEnd.pxPrevious;
10002042:	6904      	ldr	r4, [r0, #16]
10002044:	e7f2      	b.n	1000202c <vListInsert+0x18>

10002046 <uxListRemove>:

UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
{
    /* The list item knows which list it is in.  Obtain the list from the list
     * item. */
    List_t * const pxList = pxItemToRemove->pxContainer;
10002046:	6903      	ldr	r3, [r0, #16]

    traceENTER_uxListRemove( pxItemToRemove );

    pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
10002048:	6841      	ldr	r1, [r0, #4]
1000204a:	6882      	ldr	r2, [r0, #8]
1000204c:	608a      	str	r2, [r1, #8]
    pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
1000204e:	6841      	ldr	r1, [r0, #4]
10002050:	6051      	str	r1, [r2, #4]

    /* Only used during decision coverage testing. */
    mtCOVERAGE_TEST_DELAY();

    /* Make sure the index is left pointing to a valid item. */
    if( pxList->pxIndex == pxItemToRemove )
10002052:	685a      	ldr	r2, [r3, #4]
10002054:	4282      	cmp	r2, r0
10002056:	d005      	beq.n	10002064 <uxListRemove+0x1e>
    else
    {
        mtCOVERAGE_TEST_MARKER();
    }

    pxItemToRemove->pxContainer = NULL;
10002058:	2200      	movs	r2, #0
1000205a:	6102      	str	r2, [r0, #16]
    ( pxList->uxNumberOfItems ) = ( UBaseType_t ) ( pxList->uxNumberOfItems - 1U );
1000205c:	6818      	ldr	r0, [r3, #0]
1000205e:	3801      	subs	r0, #1
10002060:	6018      	str	r0, [r3, #0]

    traceRETURN_uxListRemove( pxList->uxNumberOfItems );

    return pxList->uxNumberOfItems;
}
10002062:	4770      	bx	lr
        pxList->pxIndex = pxItemToRemove->pxPrevious;
10002064:	6882      	ldr	r2, [r0, #8]
10002066:	605a      	str	r2, [r3, #4]
10002068:	e7f6      	b.n	10002058 <uxListRemove+0x12>

1000206a <prvIsQueueEmpty>:
    taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t * pxQueue )
{
1000206a:	b510      	push	{r4, lr}
1000206c:	4604      	mov	r4, r0
    BaseType_t xReturn;

    taskENTER_CRITICAL();
1000206e:	f001 fb01 	bl	10003674 <vPortEnterCritical>
    {
        if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0 )
10002072:	6ca3      	ldr	r3, [r4, #72]	; 0x48
10002074:	b923      	cbnz	r3, 10002080 <prvIsQueueEmpty+0x16>
        {
            xReturn = pdTRUE;
10002076:	2401      	movs	r4, #1
        else
        {
            xReturn = pdFALSE;
        }
    }
    taskEXIT_CRITICAL();
10002078:	f001 fb0a 	bl	10003690 <vPortExitCritical>

    return xReturn;
}
1000207c:	4620      	mov	r0, r4
1000207e:	bd10      	pop	{r4, pc}
            xReturn = pdFALSE;
10002080:	2400      	movs	r4, #0
10002082:	e7f9      	b.n	10002078 <prvIsQueueEmpty+0xe>

10002084 <prvCopyDataToQueue>:
{
10002084:	b570      	push	{r4, r5, r6, lr}
10002086:	4604      	mov	r4, r0
10002088:	4615      	mov	r5, r2
    uxMessagesWaiting = pxQueue->uxMessagesWaiting;
1000208a:	6c86      	ldr	r6, [r0, #72]	; 0x48
    if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
1000208c:	6d02      	ldr	r2, [r0, #80]	; 0x50
1000208e:	b95a      	cbnz	r2, 100020a8 <prvCopyDataToQueue+0x24>
            if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
10002090:	6803      	ldr	r3, [r0, #0]
10002092:	b11b      	cbz	r3, 1000209c <prvCopyDataToQueue+0x18>
    BaseType_t xReturn = pdFALSE;
10002094:	2000      	movs	r0, #0
    pxQueue->uxMessagesWaiting = ( UBaseType_t ) ( uxMessagesWaiting + ( UBaseType_t ) 1 );
10002096:	3601      	adds	r6, #1
10002098:	64a6      	str	r6, [r4, #72]	; 0x48
}
1000209a:	bd70      	pop	{r4, r5, r6, pc}
                xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
1000209c:	6880      	ldr	r0, [r0, #8]
1000209e:	f000 fed7 	bl	10002e50 <xTaskPriorityDisinherit>
                pxQueue->u.xSemaphore.xMutexHolder = NULL;
100020a2:	2300      	movs	r3, #0
100020a4:	60a3      	str	r3, [r4, #8]
100020a6:	e7f6      	b.n	10002096 <prvCopyDataToQueue+0x12>
    else if( xPosition == queueSEND_TO_BACK )
100020a8:	b96d      	cbnz	r5, 100020c6 <prvCopyDataToQueue+0x42>
        ( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize );
100020aa:	6840      	ldr	r0, [r0, #4]
100020ac:	f001 fc5c 	bl	10003968 <memcpy>
        pxQueue->pcWriteTo += pxQueue->uxItemSize;
100020b0:	6d22      	ldr	r2, [r4, #80]	; 0x50
100020b2:	6863      	ldr	r3, [r4, #4]
100020b4:	4413      	add	r3, r2
100020b6:	6063      	str	r3, [r4, #4]
        if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail )
100020b8:	68a2      	ldr	r2, [r4, #8]
100020ba:	4293      	cmp	r3, r2
100020bc:	d319      	bcc.n	100020f2 <prvCopyDataToQueue+0x6e>
            pxQueue->pcWriteTo = pxQueue->pcHead;
100020be:	6823      	ldr	r3, [r4, #0]
100020c0:	6063      	str	r3, [r4, #4]
    BaseType_t xReturn = pdFALSE;
100020c2:	4628      	mov	r0, r5
100020c4:	e7e7      	b.n	10002096 <prvCopyDataToQueue+0x12>
        ( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize );
100020c6:	68c0      	ldr	r0, [r0, #12]
100020c8:	f001 fc4e 	bl	10003968 <memcpy>
        pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
100020cc:	6d22      	ldr	r2, [r4, #80]	; 0x50
100020ce:	4251      	negs	r1, r2
100020d0:	68e3      	ldr	r3, [r4, #12]
100020d2:	1a9b      	subs	r3, r3, r2
100020d4:	60e3      	str	r3, [r4, #12]
        if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead )
100020d6:	6822      	ldr	r2, [r4, #0]
100020d8:	4293      	cmp	r3, r2
100020da:	d202      	bcs.n	100020e2 <prvCopyDataToQueue+0x5e>
            pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
100020dc:	68a3      	ldr	r3, [r4, #8]
100020de:	440b      	add	r3, r1
100020e0:	60e3      	str	r3, [r4, #12]
        if( xPosition == queueOVERWRITE )
100020e2:	2d02      	cmp	r5, #2
100020e4:	d001      	beq.n	100020ea <prvCopyDataToQueue+0x66>
    BaseType_t xReturn = pdFALSE;
100020e6:	2000      	movs	r0, #0
100020e8:	e7d5      	b.n	10002096 <prvCopyDataToQueue+0x12>
            if( uxMessagesWaiting > ( UBaseType_t ) 0 )
100020ea:	b126      	cbz	r6, 100020f6 <prvCopyDataToQueue+0x72>
                --uxMessagesWaiting;
100020ec:	3e01      	subs	r6, #1
    BaseType_t xReturn = pdFALSE;
100020ee:	2000      	movs	r0, #0
100020f0:	e7d1      	b.n	10002096 <prvCopyDataToQueue+0x12>
100020f2:	4628      	mov	r0, r5
100020f4:	e7cf      	b.n	10002096 <prvCopyDataToQueue+0x12>
100020f6:	2000      	movs	r0, #0
100020f8:	e7cd      	b.n	10002096 <prvCopyDataToQueue+0x12>

100020fa <prvCopyDataFromQueue>:
{
100020fa:	4603      	mov	r3, r0
    if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
100020fc:	6d02      	ldr	r2, [r0, #80]	; 0x50
100020fe:	b16a      	cbz	r2, 1000211c <prvCopyDataFromQueue+0x22>
{
10002100:	b510      	push	{r4, lr}
10002102:	4608      	mov	r0, r1
        pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize;
10002104:	68d9      	ldr	r1, [r3, #12]
10002106:	4411      	add	r1, r2
10002108:	60d9      	str	r1, [r3, #12]
        if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail )
1000210a:	689c      	ldr	r4, [r3, #8]
1000210c:	42a1      	cmp	r1, r4
1000210e:	d301      	bcc.n	10002114 <prvCopyDataFromQueue+0x1a>
            pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
10002110:	6819      	ldr	r1, [r3, #0]
10002112:	60d9      	str	r1, [r3, #12]
        ( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize );
10002114:	68d9      	ldr	r1, [r3, #12]
10002116:	f001 fc27 	bl	10003968 <memcpy>
}
1000211a:	bd10      	pop	{r4, pc}
1000211c:	4770      	bx	lr

1000211e <prvNotifyQueueSetContainer>:
/*-----------------------------------------------------------*/

#if ( configUSE_QUEUE_SETS == 1 )

    static BaseType_t prvNotifyQueueSetContainer( const Queue_t * const pxQueue )
    {
1000211e:	b570      	push	{r4, r5, r6, lr}
10002120:	b082      	sub	sp, #8
10002122:	9001      	str	r0, [sp, #4]
        Queue_t * pxQueueSetContainer = pxQueue->pxQueueSetContainer;
10002124:	6d84      	ldr	r4, [r0, #88]	; 0x58
         * to prvNotifyQueueSetContainer is preceded by a check that
         * pxQueueSetContainer != NULL */
        configASSERT( pxQueueSetContainer ); /* LCOV_EXCL_BR_LINE */
        configASSERT( pxQueueSetContainer->uxMessagesWaiting < pxQueueSetContainer->uxLength );

        if( pxQueueSetContainer->uxMessagesWaiting < pxQueueSetContainer->uxLength )
10002126:	6ca2      	ldr	r2, [r4, #72]	; 0x48
10002128:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
1000212a:	429a      	cmp	r2, r3
1000212c:	d303      	bcc.n	10002136 <prvNotifyQueueSetContainer+0x18>
        BaseType_t xReturn = pdFALSE;
1000212e:	2500      	movs	r5, #0
        {
            mtCOVERAGE_TEST_MARKER();
        }

        return xReturn;
    }
10002130:	4628      	mov	r0, r5
10002132:	b002      	add	sp, #8
10002134:	bd70      	pop	{r4, r5, r6, pc}
            const int8_t cTxLock = pxQueueSetContainer->cTxLock;
10002136:	f894 6055 	ldrb.w	r6, [r4, #85]	; 0x55
1000213a:	b276      	sxtb	r6, r6
            xReturn = prvCopyDataToQueue( pxQueueSetContainer, &pxQueue, queueSEND_TO_BACK );
1000213c:	2200      	movs	r2, #0
1000213e:	a901      	add	r1, sp, #4
10002140:	4620      	mov	r0, r4
10002142:	f7ff ff9f 	bl	10002084 <prvCopyDataToQueue>
10002146:	4605      	mov	r5, r0
            if( cTxLock == queueUNLOCKED )
10002148:	f1b6 3fff 	cmp.w	r6, #4294967295
1000214c:	d10a      	bne.n	10002164 <prvNotifyQueueSetContainer+0x46>
                if( listLIST_IS_EMPTY( &( pxQueueSetContainer->xTasksWaitingToReceive ) ) == pdFALSE )
1000214e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
10002150:	2b00      	cmp	r3, #0
10002152:	d0ed      	beq.n	10002130 <prvNotifyQueueSetContainer+0x12>
                    if( xTaskRemoveFromEventList( &( pxQueueSetContainer->xTasksWaitingToReceive ) ) != pdFALSE )
10002154:	f104 002c 	add.w	r0, r4, #44	; 0x2c
10002158:	f000 fd94 	bl	10002c84 <xTaskRemoveFromEventList>
1000215c:	2800      	cmp	r0, #0
1000215e:	d0e7      	beq.n	10002130 <prvNotifyQueueSetContainer+0x12>
                        xReturn = pdTRUE;
10002160:	2501      	movs	r5, #1
        return xReturn;
10002162:	e7e5      	b.n	10002130 <prvNotifyQueueSetContainer+0x12>
                prvIncrementQueueTxLock( pxQueueSetContainer, cTxLock );
10002164:	f000 fb88 	bl	10002878 <uxTaskGetNumberOfTasks>
10002168:	4286      	cmp	r6, r0
1000216a:	d2e1      	bcs.n	10002130 <prvNotifyQueueSetContainer+0x12>
1000216c:	3601      	adds	r6, #1
1000216e:	b276      	sxtb	r6, r6
10002170:	f884 6055 	strb.w	r6, [r4, #85]	; 0x55
10002174:	e7dc      	b.n	10002130 <prvNotifyQueueSetContainer+0x12>

10002176 <prvUnlockQueue>:
{
10002176:	b538      	push	{r3, r4, r5, lr}
10002178:	4605      	mov	r5, r0
    taskENTER_CRITICAL();
1000217a:	f001 fa7b 	bl	10003674 <vPortEnterCritical>
        int8_t cTxLock = pxQueue->cTxLock;
1000217e:	f895 4055 	ldrb.w	r4, [r5, #85]	; 0x55
10002182:	b264      	sxtb	r4, r4
        while( cTxLock > queueLOCKED_UNMODIFIED )
10002184:	e008      	b.n	10002198 <prvUnlockQueue+0x22>
                    if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
10002186:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
10002188:	b1b3      	cbz	r3, 100021b8 <prvUnlockQueue+0x42>
                        if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1000218a:	f105 002c 	add.w	r0, r5, #44	; 0x2c
1000218e:	f000 fd79 	bl	10002c84 <xTaskRemoveFromEventList>
10002192:	b970      	cbnz	r0, 100021b2 <prvUnlockQueue+0x3c>
            --cTxLock;
10002194:	3c01      	subs	r4, #1
10002196:	b264      	sxtb	r4, r4
        while( cTxLock > queueLOCKED_UNMODIFIED )
10002198:	2c00      	cmp	r4, #0
1000219a:	dd0d      	ble.n	100021b8 <prvUnlockQueue+0x42>
                if( pxQueue->pxQueueSetContainer != NULL )
1000219c:	6dab      	ldr	r3, [r5, #88]	; 0x58
1000219e:	2b00      	cmp	r3, #0
100021a0:	d0f1      	beq.n	10002186 <prvUnlockQueue+0x10>
                    if( prvNotifyQueueSetContainer( pxQueue ) != pdFALSE )
100021a2:	4628      	mov	r0, r5
100021a4:	f7ff ffbb 	bl	1000211e <prvNotifyQueueSetContainer>
100021a8:	2800      	cmp	r0, #0
100021aa:	d0f3      	beq.n	10002194 <prvUnlockQueue+0x1e>
                        vTaskMissedYield();
100021ac:	f000 fe26 	bl	10002dfc <vTaskMissedYield>
100021b0:	e7f0      	b.n	10002194 <prvUnlockQueue+0x1e>
                            vTaskMissedYield();
100021b2:	f000 fe23 	bl	10002dfc <vTaskMissedYield>
100021b6:	e7ed      	b.n	10002194 <prvUnlockQueue+0x1e>
        pxQueue->cTxLock = queueUNLOCKED;
100021b8:	23ff      	movs	r3, #255	; 0xff
100021ba:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
    taskEXIT_CRITICAL();
100021be:	f001 fa67 	bl	10003690 <vPortExitCritical>
    taskENTER_CRITICAL();
100021c2:	f001 fa57 	bl	10003674 <vPortEnterCritical>
        int8_t cRxLock = pxQueue->cRxLock;
100021c6:	f895 4054 	ldrb.w	r4, [r5, #84]	; 0x54
100021ca:	b264      	sxtb	r4, r4
        while( cRxLock > queueLOCKED_UNMODIFIED )
100021cc:	e001      	b.n	100021d2 <prvUnlockQueue+0x5c>
                --cRxLock;
100021ce:	3c01      	subs	r4, #1
100021d0:	b264      	sxtb	r4, r4
        while( cRxLock > queueLOCKED_UNMODIFIED )
100021d2:	2c00      	cmp	r4, #0
100021d4:	dd0a      	ble.n	100021ec <prvUnlockQueue+0x76>
            if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
100021d6:	692b      	ldr	r3, [r5, #16]
100021d8:	b143      	cbz	r3, 100021ec <prvUnlockQueue+0x76>
                if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
100021da:	f105 0010 	add.w	r0, r5, #16
100021de:	f000 fd51 	bl	10002c84 <xTaskRemoveFromEventList>
100021e2:	2800      	cmp	r0, #0
100021e4:	d0f3      	beq.n	100021ce <prvUnlockQueue+0x58>
                    vTaskMissedYield();
100021e6:	f000 fe09 	bl	10002dfc <vTaskMissedYield>
100021ea:	e7f0      	b.n	100021ce <prvUnlockQueue+0x58>
        pxQueue->cRxLock = queueUNLOCKED;
100021ec:	23ff      	movs	r3, #255	; 0xff
100021ee:	f885 3054 	strb.w	r3, [r5, #84]	; 0x54
    taskEXIT_CRITICAL();
100021f2:	f001 fa4d 	bl	10003690 <vPortExitCritical>
}
100021f6:	bd38      	pop	{r3, r4, r5, pc}

100021f8 <xQueueGenericReset>:
    if( ( pxQueue != NULL ) &&
100021f8:	2800      	cmp	r0, #0
100021fa:	d03c      	beq.n	10002276 <xQueueGenericReset+0x7e>
{
100021fc:	b538      	push	{r3, r4, r5, lr}
100021fe:	460d      	mov	r5, r1
10002200:	4604      	mov	r4, r0
        ( pxQueue->uxLength >= 1U ) &&
10002202:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
    if( ( pxQueue != NULL ) &&
10002204:	2b00      	cmp	r3, #0
10002206:	d038      	beq.n	1000227a <xQueueGenericReset+0x82>
        ( ( SIZE_MAX / pxQueue->uxLength ) >= pxQueue->uxItemSize ) )
10002208:	6d02      	ldr	r2, [r0, #80]	; 0x50
1000220a:	2100      	movs	r1, #0
1000220c:	fba3 2302 	umull	r2, r3, r3, r2
10002210:	b913      	cbnz	r3, 10002218 <xQueueGenericReset+0x20>
        ( pxQueue->uxLength >= 1U ) &&
10002212:	b119      	cbz	r1, 1000221c <xQueueGenericReset+0x24>
        xReturn = pdFAIL;
10002214:	2000      	movs	r0, #0
    return xReturn;
10002216:	e031      	b.n	1000227c <xQueueGenericReset+0x84>
        ( ( SIZE_MAX / pxQueue->uxLength ) >= pxQueue->uxItemSize ) )
10002218:	2101      	movs	r1, #1
1000221a:	e7fa      	b.n	10002212 <xQueueGenericReset+0x1a>
        taskENTER_CRITICAL();
1000221c:	f001 fa2a 	bl	10003674 <vPortEnterCritical>
            pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize );
10002220:	6823      	ldr	r3, [r4, #0]
10002222:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
10002224:	6d21      	ldr	r1, [r4, #80]	; 0x50
10002226:	fb01 3002 	mla	r0, r1, r2, r3
1000222a:	60a0      	str	r0, [r4, #8]
            pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
1000222c:	2000      	movs	r0, #0
1000222e:	64a0      	str	r0, [r4, #72]	; 0x48
            pxQueue->pcWriteTo = pxQueue->pcHead;
10002230:	6063      	str	r3, [r4, #4]
            pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize );
10002232:	3a01      	subs	r2, #1
10002234:	fb02 3301 	mla	r3, r2, r1, r3
10002238:	60e3      	str	r3, [r4, #12]
            pxQueue->cRxLock = queueUNLOCKED;
1000223a:	23ff      	movs	r3, #255	; 0xff
1000223c:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
            pxQueue->cTxLock = queueUNLOCKED;
10002240:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
            if( xNewQueue == pdFALSE )
10002244:	b975      	cbnz	r5, 10002264 <xQueueGenericReset+0x6c>
                if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
10002246:	6923      	ldr	r3, [r4, #16]
10002248:	b91b      	cbnz	r3, 10002252 <xQueueGenericReset+0x5a>
        taskEXIT_CRITICAL();
1000224a:	f001 fa21 	bl	10003690 <vPortExitCritical>
    BaseType_t xReturn = pdPASS;
1000224e:	2001      	movs	r0, #1
        taskEXIT_CRITICAL();
10002250:	e014      	b.n	1000227c <xQueueGenericReset+0x84>
                    if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
10002252:	f104 0010 	add.w	r0, r4, #16
10002256:	f000 fd15 	bl	10002c84 <xTaskRemoveFromEventList>
1000225a:	2800      	cmp	r0, #0
1000225c:	d0f5      	beq.n	1000224a <xQueueGenericReset+0x52>
                        queueYIELD_IF_USING_PREEMPTION();
1000225e:	f001 f9fd 	bl	1000365c <vPortYield>
10002262:	e7f2      	b.n	1000224a <xQueueGenericReset+0x52>
                vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
10002264:	f104 0010 	add.w	r0, r4, #16
10002268:	f7ff fec4 	bl	10001ff4 <vListInitialise>
                vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
1000226c:	f104 002c 	add.w	r0, r4, #44	; 0x2c
10002270:	f7ff fec0 	bl	10001ff4 <vListInitialise>
10002274:	e7e9      	b.n	1000224a <xQueueGenericReset+0x52>
        xReturn = pdFAIL;
10002276:	2000      	movs	r0, #0
}
10002278:	4770      	bx	lr
        xReturn = pdFAIL;
1000227a:	2000      	movs	r0, #0
}
1000227c:	bd38      	pop	{r3, r4, r5, pc}

1000227e <prvInitialiseNewQueue>:
{
1000227e:	b510      	push	{r4, lr}
10002280:	9c02      	ldr	r4, [sp, #8]
    if( uxItemSize == ( UBaseType_t ) 0 )
10002282:	460b      	mov	r3, r1
10002284:	b949      	cbnz	r1, 1000229a <prvInitialiseNewQueue+0x1c>
        pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
10002286:	6024      	str	r4, [r4, #0]
    pxNewQueue->uxLength = uxQueueLength;
10002288:	64e0      	str	r0, [r4, #76]	; 0x4c
    pxNewQueue->uxItemSize = uxItemSize;
1000228a:	6523      	str	r3, [r4, #80]	; 0x50
    ( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
1000228c:	2101      	movs	r1, #1
1000228e:	4620      	mov	r0, r4
10002290:	f7ff ffb2 	bl	100021f8 <xQueueGenericReset>
        pxNewQueue->pxQueueSetContainer = NULL;
10002294:	2300      	movs	r3, #0
10002296:	65a3      	str	r3, [r4, #88]	; 0x58
}
10002298:	bd10      	pop	{r4, pc}
        pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
1000229a:	6022      	str	r2, [r4, #0]
1000229c:	e7f4      	b.n	10002288 <prvInitialiseNewQueue+0xa>

1000229e <xQueueGenericCreateStatic>:
        if( ( uxQueueLength > ( UBaseType_t ) 0 ) &&
1000229e:	b1b8      	cbz	r0, 100022d0 <xQueueGenericCreateStatic+0x32>
    {
100022a0:	b510      	push	{r4, lr}
100022a2:	b082      	sub	sp, #8
100022a4:	461c      	mov	r4, r3
100022a6:	4684      	mov	ip, r0
        if( ( uxQueueLength > ( UBaseType_t ) 0 ) &&
100022a8:	b1a3      	cbz	r3, 100022d4 <xQueueGenericCreateStatic+0x36>
            ( pxStaticQueue != NULL ) &&
100022aa:	b102      	cbz	r2, 100022ae <xQueueGenericCreateStatic+0x10>
            ( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0U ) ) ) &&
100022ac:	b1a1      	cbz	r1, 100022d8 <xQueueGenericCreateStatic+0x3a>
100022ae:	b15a      	cbz	r2, 100022c8 <xQueueGenericCreateStatic+0x2a>
                pxNewQueue->ucStaticallyAllocated = pdTRUE;
100022b0:	2301      	movs	r3, #1
100022b2:	f884 3056 	strb.w	r3, [r4, #86]	; 0x56
            prvInitialiseNewQueue( uxQueueLength, uxItemSize, pucQueueStorage, ucQueueType, pxNewQueue );
100022b6:	9400      	str	r4, [sp, #0]
100022b8:	f89d 3010 	ldrb.w	r3, [sp, #16]
100022bc:	4660      	mov	r0, ip
100022be:	f7ff ffde 	bl	1000227e <prvInitialiseNewQueue>
            pxNewQueue = ( Queue_t * ) pxStaticQueue;
100022c2:	4620      	mov	r0, r4
    }
100022c4:	b002      	add	sp, #8
100022c6:	bd10      	pop	{r4, pc}
            ( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0U ) ) ) )
100022c8:	2900      	cmp	r1, #0
100022ca:	d0f1      	beq.n	100022b0 <xQueueGenericCreateStatic+0x12>
        Queue_t * pxNewQueue = NULL;
100022cc:	4610      	mov	r0, r2
        return pxNewQueue;
100022ce:	e7f9      	b.n	100022c4 <xQueueGenericCreateStatic+0x26>
        Queue_t * pxNewQueue = NULL;
100022d0:	2000      	movs	r0, #0
    }
100022d2:	4770      	bx	lr
        Queue_t * pxNewQueue = NULL;
100022d4:	4618      	mov	r0, r3
100022d6:	e7f5      	b.n	100022c4 <xQueueGenericCreateStatic+0x26>
100022d8:	2000      	movs	r0, #0
100022da:	e7f3      	b.n	100022c4 <xQueueGenericCreateStatic+0x26>

100022dc <xQueueReceive>:
{
100022dc:	b5f0      	push	{r4, r5, r6, r7, lr}
100022de:	b085      	sub	sp, #20
100022e0:	4604      	mov	r4, r0
100022e2:	460f      	mov	r7, r1
100022e4:	9201      	str	r2, [sp, #4]
    BaseType_t xEntryTimeSet = pdFALSE;
100022e6:	2600      	movs	r6, #0
100022e8:	e036      	b.n	10002358 <xQueueReceive+0x7c>
                prvCopyDataFromQueue( pxQueue, pvBuffer );
100022ea:	4639      	mov	r1, r7
100022ec:	4620      	mov	r0, r4
100022ee:	f7ff ff04 	bl	100020fa <prvCopyDataFromQueue>
                pxQueue->uxMessagesWaiting = ( UBaseType_t ) ( uxMessagesWaiting - ( UBaseType_t ) 1 );
100022f2:	3d01      	subs	r5, #1
100022f4:	64a5      	str	r5, [r4, #72]	; 0x48
                if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
100022f6:	6923      	ldr	r3, [r4, #16]
100022f8:	b923      	cbnz	r3, 10002304 <xQueueReceive+0x28>
                taskEXIT_CRITICAL();
100022fa:	f001 f9c9 	bl	10003690 <vPortExitCritical>
                return pdPASS;
100022fe:	2001      	movs	r0, #1
}
10002300:	b005      	add	sp, #20
10002302:	bdf0      	pop	{r4, r5, r6, r7, pc}
                    if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
10002304:	f104 0010 	add.w	r0, r4, #16
10002308:	f000 fcbc 	bl	10002c84 <xTaskRemoveFromEventList>
1000230c:	2800      	cmp	r0, #0
1000230e:	d0f4      	beq.n	100022fa <xQueueReceive+0x1e>
                        queueYIELD_IF_USING_PREEMPTION();
10002310:	f001 f9a4 	bl	1000365c <vPortYield>
10002314:	e7f1      	b.n	100022fa <xQueueReceive+0x1e>
                    taskEXIT_CRITICAL();
10002316:	f001 f9bb 	bl	10003690 <vPortExitCritical>
                    return errQUEUE_EMPTY;
1000231a:	2000      	movs	r0, #0
1000231c:	e7f0      	b.n	10002300 <xQueueReceive+0x24>
                    vTaskInternalSetTimeOutState( &xTimeOut );
1000231e:	a802      	add	r0, sp, #8
10002320:	f000 fd22 	bl	10002d68 <vTaskInternalSetTimeOutState>
                    xEntryTimeSet = pdTRUE;
10002324:	2601      	movs	r6, #1
10002326:	e021      	b.n	1000236c <xQueueReceive+0x90>
        prvLockQueue( pxQueue );
10002328:	2300      	movs	r3, #0
1000232a:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
1000232e:	e029      	b.n	10002384 <xQueueReceive+0xa8>
10002330:	2300      	movs	r3, #0
10002332:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
10002336:	e02b      	b.n	10002390 <xQueueReceive+0xb4>
                prvUnlockQueue( pxQueue );
10002338:	4620      	mov	r0, r4
1000233a:	f7ff ff1c 	bl	10002176 <prvUnlockQueue>
                ( void ) xTaskResumeAll();
1000233e:	f000 fb6f 	bl	10002a20 <xTaskResumeAll>
10002342:	e009      	b.n	10002358 <xQueueReceive+0x7c>
            prvUnlockQueue( pxQueue );
10002344:	4620      	mov	r0, r4
10002346:	f7ff ff16 	bl	10002176 <prvUnlockQueue>
            ( void ) xTaskResumeAll();
1000234a:	f000 fb69 	bl	10002a20 <xTaskResumeAll>
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1000234e:	4620      	mov	r0, r4
10002350:	f7ff fe8b 	bl	1000206a <prvIsQueueEmpty>
10002354:	2800      	cmp	r0, #0
10002356:	d137      	bne.n	100023c8 <xQueueReceive+0xec>
        taskENTER_CRITICAL();
10002358:	f001 f98c 	bl	10003674 <vPortEnterCritical>
            const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
1000235c:	6ca5      	ldr	r5, [r4, #72]	; 0x48
            if( uxMessagesWaiting > ( UBaseType_t ) 0 )
1000235e:	2d00      	cmp	r5, #0
10002360:	d1c3      	bne.n	100022ea <xQueueReceive+0xe>
                if( xTicksToWait == ( TickType_t ) 0 )
10002362:	9b01      	ldr	r3, [sp, #4]
10002364:	2b00      	cmp	r3, #0
10002366:	d0d6      	beq.n	10002316 <xQueueReceive+0x3a>
                else if( xEntryTimeSet == pdFALSE )
10002368:	2e00      	cmp	r6, #0
1000236a:	d0d8      	beq.n	1000231e <xQueueReceive+0x42>
        taskEXIT_CRITICAL();
1000236c:	f001 f990 	bl	10003690 <vPortExitCritical>
        vTaskSuspendAll();
10002370:	f000 fa74 	bl	1000285c <vTaskSuspendAll>
        prvLockQueue( pxQueue );
10002374:	f001 f97e 	bl	10003674 <vPortEnterCritical>
10002378:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
1000237c:	b25b      	sxtb	r3, r3
1000237e:	f1b3 3fff 	cmp.w	r3, #4294967295
10002382:	d0d1      	beq.n	10002328 <xQueueReceive+0x4c>
10002384:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
10002388:	b25b      	sxtb	r3, r3
1000238a:	f1b3 3fff 	cmp.w	r3, #4294967295
1000238e:	d0cf      	beq.n	10002330 <xQueueReceive+0x54>
10002390:	f001 f97e 	bl	10003690 <vPortExitCritical>
        if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
10002394:	a901      	add	r1, sp, #4
10002396:	a802      	add	r0, sp, #8
10002398:	f000 fcf2 	bl	10002d80 <xTaskCheckForTimeOut>
1000239c:	2800      	cmp	r0, #0
1000239e:	d1d1      	bne.n	10002344 <xQueueReceive+0x68>
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
100023a0:	4620      	mov	r0, r4
100023a2:	f7ff fe62 	bl	1000206a <prvIsQueueEmpty>
100023a6:	2800      	cmp	r0, #0
100023a8:	d0c6      	beq.n	10002338 <xQueueReceive+0x5c>
                vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
100023aa:	9901      	ldr	r1, [sp, #4]
100023ac:	f104 002c 	add.w	r0, r4, #44	; 0x2c
100023b0:	f000 fc3c 	bl	10002c2c <vTaskPlaceOnEventList>
                prvUnlockQueue( pxQueue );
100023b4:	4620      	mov	r0, r4
100023b6:	f7ff fede 	bl	10002176 <prvUnlockQueue>
                if( xTaskResumeAll() == pdFALSE )
100023ba:	f000 fb31 	bl	10002a20 <xTaskResumeAll>
100023be:	2800      	cmp	r0, #0
100023c0:	d1ca      	bne.n	10002358 <xQueueReceive+0x7c>
                    taskYIELD_WITHIN_API();
100023c2:	f001 f94b 	bl	1000365c <vPortYield>
100023c6:	e7c7      	b.n	10002358 <xQueueReceive+0x7c>
                return errQUEUE_EMPTY;
100023c8:	2000      	movs	r0, #0
100023ca:	e799      	b.n	10002300 <xQueueReceive+0x24>

100023cc <vQueueWaitForMessageRestricted>:
    {
100023cc:	b570      	push	{r4, r5, r6, lr}
100023ce:	4604      	mov	r4, r0
100023d0:	460d      	mov	r5, r1
100023d2:	4616      	mov	r6, r2
        prvLockQueue( pxQueue );
100023d4:	f001 f94e 	bl	10003674 <vPortEnterCritical>
100023d8:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
100023dc:	b25b      	sxtb	r3, r3
100023de:	f1b3 3fff 	cmp.w	r3, #4294967295
100023e2:	d00d      	beq.n	10002400 <vQueueWaitForMessageRestricted+0x34>
100023e4:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
100023e8:	b25b      	sxtb	r3, r3
100023ea:	f1b3 3fff 	cmp.w	r3, #4294967295
100023ee:	d00b      	beq.n	10002408 <vQueueWaitForMessageRestricted+0x3c>
100023f0:	f001 f94e 	bl	10003690 <vPortExitCritical>
        if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
100023f4:	6ca3      	ldr	r3, [r4, #72]	; 0x48
100023f6:	b15b      	cbz	r3, 10002410 <vQueueWaitForMessageRestricted+0x44>
        prvUnlockQueue( pxQueue );
100023f8:	4620      	mov	r0, r4
100023fa:	f7ff febc 	bl	10002176 <prvUnlockQueue>
    }
100023fe:	bd70      	pop	{r4, r5, r6, pc}
        prvLockQueue( pxQueue );
10002400:	2300      	movs	r3, #0
10002402:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
10002406:	e7ed      	b.n	100023e4 <vQueueWaitForMessageRestricted+0x18>
10002408:	2300      	movs	r3, #0
1000240a:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
1000240e:	e7ef      	b.n	100023f0 <vQueueWaitForMessageRestricted+0x24>
            vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
10002410:	4632      	mov	r2, r6
10002412:	4629      	mov	r1, r5
10002414:	f104 002c 	add.w	r0, r4, #44	; 0x2c
10002418:	f000 fc16 	bl	10002c48 <vTaskPlaceOnEventListRestricted>
1000241c:	e7ec      	b.n	100023f8 <vQueueWaitForMessageRestricted+0x2c>
	...

10002420 <prvGetExpectedIdleTime>:
         * configUSE_PREEMPTION is 0, so there may be tasks above the idle priority
         * task that are in the Ready state, even though the idle task is
         * running. */
        #if ( configUSE_PORT_OPTIMISED_TASK_SELECTION == 0 )
        {
            if( uxTopReadyPriority > tskIDLE_PRIORITY )
10002420:	4b0a      	ldr	r3, [pc, #40]	; (1000244c <prvGetExpectedIdleTime+0x2c>)
10002422:	681b      	ldr	r3, [r3, #0]
10002424:	b103      	cbz	r3, 10002428 <prvGetExpectedIdleTime+0x8>
            {
                uxHigherPriorityReadyTasks = pdTRUE;
10002426:	2301      	movs	r3, #1
                uxHigherPriorityReadyTasks = pdTRUE;
            }
        }
        #endif /* if ( configUSE_PORT_OPTIMISED_TASK_SELECTION == 0 ) */

        if( pxCurrentTCB->uxPriority > tskIDLE_PRIORITY )
10002428:	4a09      	ldr	r2, [pc, #36]	; (10002450 <prvGetExpectedIdleTime+0x30>)
1000242a:	6812      	ldr	r2, [r2, #0]
1000242c:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
1000242e:	b950      	cbnz	r0, 10002446 <prvGetExpectedIdleTime+0x26>
        {
            xReturn = 0;
        }
        else if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > 1U )
10002430:	4a08      	ldr	r2, [pc, #32]	; (10002454 <prvGetExpectedIdleTime+0x34>)
10002432:	6812      	ldr	r2, [r2, #0]
10002434:	2a01      	cmp	r2, #1
10002436:	d807      	bhi.n	10002448 <prvGetExpectedIdleTime+0x28>
            /* There are other idle priority tasks in the ready state.  If
             * time slicing is used then the very next tick interrupt must be
             * processed. */
            xReturn = 0;
        }
        else if( uxHigherPriorityReadyTasks != pdFALSE )
10002438:	b933      	cbnz	r3, 10002448 <prvGetExpectedIdleTime+0x28>
             * configUSE_PREEMPTION is 0. */
            xReturn = 0;
        }
        else
        {
            xReturn = xNextTaskUnblockTime;
1000243a:	4b07      	ldr	r3, [pc, #28]	; (10002458 <prvGetExpectedIdleTime+0x38>)
1000243c:	6818      	ldr	r0, [r3, #0]
            xReturn -= xTickCount;
1000243e:	4b07      	ldr	r3, [pc, #28]	; (1000245c <prvGetExpectedIdleTime+0x3c>)
10002440:	681b      	ldr	r3, [r3, #0]
10002442:	1ac0      	subs	r0, r0, r3
10002444:	4770      	bx	lr
            xReturn = 0;
10002446:	2000      	movs	r0, #0
        }

        return xReturn;
    }
10002448:	4770      	bx	lr
1000244a:	bf00      	nop
1000244c:	38008a60 	stmdacc	r0, {r5, r6, r9, fp, pc}
10002450:	380085b8 	stmdacc	r0, {r3, r4, r5, r7, r8, sl, pc}
10002454:	380085c4 	stmdacc	r0, {r2, r6, r7, r8, sl, pc}
10002458:	38008aec 	stmdacc	r0, {r2, r3, r5, r6, r7, r9, fp, pc}
1000245c:	38008b50 	stmdacc	r0, {r4, r6, r8, r9, fp, pc}

10002460 <prvResetNextTaskUnblockTime>:
#endif /* INCLUDE_vTaskDelete */
/*-----------------------------------------------------------*/

static void prvResetNextTaskUnblockTime( void )
{
    if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
10002460:	4b07      	ldr	r3, [pc, #28]	; (10002480 <prvResetNextTaskUnblockTime+0x20>)
10002462:	681b      	ldr	r3, [r3, #0]
10002464:	681b      	ldr	r3, [r3, #0]
10002466:	b923      	cbnz	r3, 10002472 <prvResetNextTaskUnblockTime+0x12>
    {
        /* The new current delayed list is empty.  Set xNextTaskUnblockTime to
         * the maximum possible value so it is  extremely unlikely that the
         * if( xTickCount >= xNextTaskUnblockTime ) test will pass until
         * there is an item in the delayed list. */
        xNextTaskUnblockTime = portMAX_DELAY;
10002468:	4b06      	ldr	r3, [pc, #24]	; (10002484 <prvResetNextTaskUnblockTime+0x24>)
1000246a:	f04f 32ff 	mov.w	r2, #4294967295
1000246e:	601a      	str	r2, [r3, #0]
10002470:	4770      	bx	lr
    {
        /* The new current delayed list is not empty, get the value of
         * the item at the head of the delayed list.  This is the time at
         * which the task at the head of the delayed list should be removed
         * from the Blocked state. */
        xNextTaskUnblockTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxDelayedTaskList );
10002472:	4b03      	ldr	r3, [pc, #12]	; (10002480 <prvResetNextTaskUnblockTime+0x20>)
10002474:	681b      	ldr	r3, [r3, #0]
10002476:	68db      	ldr	r3, [r3, #12]
10002478:	681a      	ldr	r2, [r3, #0]
1000247a:	4b02      	ldr	r3, [pc, #8]	; (10002484 <prvResetNextTaskUnblockTime+0x24>)
1000247c:	601a      	str	r2, [r3, #0]
    }
}
1000247e:	4770      	bx	lr
10002480:	380085bc 	stmdacc	r0, {r2, r3, r4, r5, r7, r8, sl, pc}
10002484:	38008aec 	stmdacc	r0, {r2, r3, r5, r6, r7, r9, fp, pc}

10002488 <prvInitialiseNewTask>:
{
10002488:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
1000248c:	4680      	mov	r8, r0
1000248e:	460d      	mov	r5, r1
10002490:	4617      	mov	r7, r2
10002492:	4699      	mov	r9, r3
10002494:	9e08      	ldr	r6, [sp, #32]
10002496:	f8dd a024 	ldr.w	sl, [sp, #36]	; 0x24
1000249a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
        ( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) uxStackDepth * sizeof( StackType_t ) );
1000249c:	0092      	lsls	r2, r2, #2
1000249e:	21a5      	movs	r1, #165	; 0xa5
100024a0:	6b20      	ldr	r0, [r4, #48]	; 0x30
100024a2:	f001 fad7 	bl	10003a54 <memset>
        pxTopOfStack = &( pxNewTCB->pxStack[ uxStackDepth - ( configSTACK_DEPTH_TYPE ) 1 ] );
100024a6:	6b23      	ldr	r3, [r4, #48]	; 0x30
100024a8:	f107 4280 	add.w	r2, r7, #1073741824	; 0x40000000
100024ac:	3a01      	subs	r2, #1
100024ae:	eb03 0782 	add.w	r7, r3, r2, lsl #2
        pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) );
100024b2:	f027 0707 	bic.w	r7, r7, #7
    if( pcName != NULL )
100024b6:	b19d      	cbz	r5, 100024e0 <prvInitialiseNewTask+0x58>
        for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
100024b8:	f04f 0c00 	mov.w	ip, #0
100024bc:	f1bc 0f03 	cmp.w	ip, #3
100024c0:	d80b      	bhi.n	100024da <prvInitialiseNewTask+0x52>
            pxNewTCB->pcTaskName[ x ] = pcName[ x ];
100024c2:	f815 200c 	ldrb.w	r2, [r5, ip]
100024c6:	eb04 030c 	add.w	r3, r4, ip
100024ca:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
            if( pcName[ x ] == ( char ) 0x00 )
100024ce:	f815 300c 	ldrb.w	r3, [r5, ip]
100024d2:	b113      	cbz	r3, 100024da <prvInitialiseNewTask+0x52>
        for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
100024d4:	f10c 0c01 	add.w	ip, ip, #1
100024d8:	e7f0      	b.n	100024bc <prvInitialiseNewTask+0x34>
        pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1U ] = '\0';
100024da:	2300      	movs	r3, #0
100024dc:	f884 3037 	strb.w	r3, [r4, #55]	; 0x37
    if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
100024e0:	2e04      	cmp	r6, #4
100024e2:	d900      	bls.n	100024e6 <prvInitialiseNewTask+0x5e>
        uxPriority = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) 1U;
100024e4:	2604      	movs	r6, #4
    pxNewTCB->uxPriority = uxPriority;
100024e6:	62e6      	str	r6, [r4, #44]	; 0x2c
        pxNewTCB->uxBasePriority = uxPriority;
100024e8:	63a6      	str	r6, [r4, #56]	; 0x38
    vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
100024ea:	1d20      	adds	r0, r4, #4
100024ec:	f7ff fd8f 	bl	1000200e <vListInitialiseItem>
    vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
100024f0:	f104 0018 	add.w	r0, r4, #24
100024f4:	f7ff fd8b 	bl	1000200e <vListInitialiseItem>
    listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
100024f8:	6124      	str	r4, [r4, #16]
    listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority );
100024fa:	f1c6 0605 	rsb	r6, r6, #5
100024fe:	61a6      	str	r6, [r4, #24]
    listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
10002500:	6264      	str	r4, [r4, #36]	; 0x24
                pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxNewTCB->pxStack, pxTaskCode, pvParameters );
10002502:	464b      	mov	r3, r9
10002504:	4642      	mov	r2, r8
10002506:	6b21      	ldr	r1, [r4, #48]	; 0x30
10002508:	4638      	mov	r0, r7
1000250a:	f001 f8eb 	bl	100036e4 <pxPortInitialiseStack>
1000250e:	6020      	str	r0, [r4, #0]
    if( pxCreatedTask != NULL )
10002510:	f1ba 0f00 	cmp.w	sl, #0
10002514:	d001      	beq.n	1000251a <prvInitialiseNewTask+0x92>
        *pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
10002516:	f8ca 4000 	str.w	r4, [sl]
}
1000251a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

1000251e <prvCreateStaticTask>:
    {
1000251e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
10002522:	b085      	sub	sp, #20
10002524:	9e0d      	ldr	r6, [sp, #52]	; 0x34
10002526:	9c0e      	ldr	r4, [sp, #56]	; 0x38
        if( ( pxTaskBuffer != NULL ) && ( puxStackBuffer != NULL ) )
10002528:	b1f4      	cbz	r4, 10002568 <prvCreateStaticTask+0x4a>
1000252a:	4605      	mov	r5, r0
1000252c:	4689      	mov	r9, r1
1000252e:	4690      	mov	r8, r2
10002530:	461f      	mov	r7, r3
10002532:	b1de      	cbz	r6, 1000256c <prvCreateStaticTask+0x4e>
            ( void ) memset( ( void * ) pxNewTCB, 0x00, sizeof( TCB_t ) );
10002534:	224c      	movs	r2, #76	; 0x4c
10002536:	2100      	movs	r1, #0
10002538:	4620      	mov	r0, r4
1000253a:	f001 fa8b 	bl	10003a54 <memset>
            pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
1000253e:	6326      	str	r6, [r4, #48]	; 0x30
                pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
10002540:	2302      	movs	r3, #2
10002542:	f884 3049 	strb.w	r3, [r4, #73]	; 0x49
            prvInitialiseNewTask( pxTaskCode, pcName, uxStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
10002546:	2300      	movs	r3, #0
10002548:	9303      	str	r3, [sp, #12]
1000254a:	9402      	str	r4, [sp, #8]
1000254c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
1000254e:	9301      	str	r3, [sp, #4]
10002550:	9b0c      	ldr	r3, [sp, #48]	; 0x30
10002552:	9300      	str	r3, [sp, #0]
10002554:	463b      	mov	r3, r7
10002556:	4642      	mov	r2, r8
10002558:	4649      	mov	r1, r9
1000255a:	4628      	mov	r0, r5
1000255c:	f7ff ff94 	bl	10002488 <prvInitialiseNewTask>
            pxNewTCB = ( TCB_t * ) pxTaskBuffer;
10002560:	4620      	mov	r0, r4
    }
10002562:	b005      	add	sp, #20
10002564:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
            pxNewTCB = NULL;
10002568:	4620      	mov	r0, r4
1000256a:	e7fa      	b.n	10002562 <prvCreateStaticTask+0x44>
1000256c:	4630      	mov	r0, r6
        return pxNewTCB;
1000256e:	e7f8      	b.n	10002562 <prvCreateStaticTask+0x44>

10002570 <prvInitialiseTaskLists>:
{
10002570:	b538      	push	{r3, r4, r5, lr}
    for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
10002572:	2400      	movs	r4, #0
10002574:	e007      	b.n	10002586 <prvInitialiseTaskLists+0x16>
        vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
10002576:	ebc4 02c4 	rsb	r2, r4, r4, lsl #3
1000257a:	0093      	lsls	r3, r2, #2
1000257c:	480e      	ldr	r0, [pc, #56]	; (100025b8 <prvInitialiseTaskLists+0x48>)
1000257e:	4418      	add	r0, r3
10002580:	f7ff fd38 	bl	10001ff4 <vListInitialise>
    for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
10002584:	3401      	adds	r4, #1
10002586:	2c04      	cmp	r4, #4
10002588:	d9f5      	bls.n	10002576 <prvInitialiseTaskLists+0x6>
    vListInitialise( &xDelayedTaskList1 );
1000258a:	4d0c      	ldr	r5, [pc, #48]	; (100025bc <prvInitialiseTaskLists+0x4c>)
1000258c:	4628      	mov	r0, r5
1000258e:	f7ff fd31 	bl	10001ff4 <vListInitialise>
    vListInitialise( &xDelayedTaskList2 );
10002592:	4c0b      	ldr	r4, [pc, #44]	; (100025c0 <prvInitialiseTaskLists+0x50>)
10002594:	4620      	mov	r0, r4
10002596:	f7ff fd2d 	bl	10001ff4 <vListInitialise>
    vListInitialise( &xPendingReadyList );
1000259a:	480a      	ldr	r0, [pc, #40]	; (100025c4 <prvInitialiseTaskLists+0x54>)
1000259c:	f7ff fd2a 	bl	10001ff4 <vListInitialise>
        vListInitialise( &xTasksWaitingTermination );
100025a0:	4809      	ldr	r0, [pc, #36]	; (100025c8 <prvInitialiseTaskLists+0x58>)
100025a2:	f7ff fd27 	bl	10001ff4 <vListInitialise>
        vListInitialise( &xSuspendedTaskList );
100025a6:	4809      	ldr	r0, [pc, #36]	; (100025cc <prvInitialiseTaskLists+0x5c>)
100025a8:	f7ff fd24 	bl	10001ff4 <vListInitialise>
    pxDelayedTaskList = &xDelayedTaskList1;
100025ac:	4b08      	ldr	r3, [pc, #32]	; (100025d0 <prvInitialiseTaskLists+0x60>)
100025ae:	601d      	str	r5, [r3, #0]
    pxOverflowDelayedTaskList = &xDelayedTaskList2;
100025b0:	4b08      	ldr	r3, [pc, #32]	; (100025d4 <prvInitialiseTaskLists+0x64>)
100025b2:	601c      	str	r4, [r3, #0]
}
100025b4:	bd38      	pop	{r3, r4, r5, pc}
100025b6:	bf00      	nop
100025b8:	380085c4 	stmdacc	r0, {r2, r6, r7, r8, sl, pc}
100025bc:	38008a64 	stmdacc	r0, {r2, r5, r6, r9, fp, pc}
100025c0:	38008a80 	stmdacc	r0, {r7, r9, fp, pc}
100025c4:	38008af8 	stmdacc	r0, {r3, r4, r5, r6, r7, r9, fp, pc}
100025c8:	38008b34 	stmdacc	r0, {r2, r4, r5, r8, r9, fp, pc}
100025cc:	38008b18 	stmdacc	r0, {r3, r4, r8, r9, fp, pc}
100025d0:	380085bc 	stmdacc	r0, {r2, r3, r4, r5, r7, r8, sl, pc}
100025d4:	380085c0 	stmdacc	r0, {r6, r7, r8, sl, pc}

100025d8 <prvAddNewTaskToReadyList>:
    {
100025d8:	b510      	push	{r4, lr}
100025da:	4604      	mov	r4, r0
        taskENTER_CRITICAL();
100025dc:	f001 f84a 	bl	10003674 <vPortEnterCritical>
            uxCurrentNumberOfTasks = ( UBaseType_t ) ( uxCurrentNumberOfTasks + 1U );
100025e0:	4a26      	ldr	r2, [pc, #152]	; (1000267c <prvAddNewTaskToReadyList+0xa4>)
100025e2:	6813      	ldr	r3, [r2, #0]
100025e4:	3301      	adds	r3, #1
100025e6:	6013      	str	r3, [r2, #0]
            if( pxCurrentTCB == NULL )
100025e8:	4b25      	ldr	r3, [pc, #148]	; (10002680 <prvAddNewTaskToReadyList+0xa8>)
100025ea:	681b      	ldr	r3, [r3, #0]
100025ec:	b15b      	cbz	r3, 10002606 <prvAddNewTaskToReadyList+0x2e>
                if( xSchedulerRunning == pdFALSE )
100025ee:	4b25      	ldr	r3, [pc, #148]	; (10002684 <prvAddNewTaskToReadyList+0xac>)
100025f0:	681b      	ldr	r3, [r3, #0]
100025f2:	b96b      	cbnz	r3, 10002610 <prvAddNewTaskToReadyList+0x38>
                    if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
100025f4:	4b22      	ldr	r3, [pc, #136]	; (10002680 <prvAddNewTaskToReadyList+0xa8>)
100025f6:	681b      	ldr	r3, [r3, #0]
100025f8:	6ada      	ldr	r2, [r3, #44]	; 0x2c
100025fa:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
100025fc:	429a      	cmp	r2, r3
100025fe:	d807      	bhi.n	10002610 <prvAddNewTaskToReadyList+0x38>
                        pxCurrentTCB = pxNewTCB;
10002600:	4b1f      	ldr	r3, [pc, #124]	; (10002680 <prvAddNewTaskToReadyList+0xa8>)
10002602:	601c      	str	r4, [r3, #0]
10002604:	e004      	b.n	10002610 <prvAddNewTaskToReadyList+0x38>
                pxCurrentTCB = pxNewTCB;
10002606:	4b1e      	ldr	r3, [pc, #120]	; (10002680 <prvAddNewTaskToReadyList+0xa8>)
10002608:	601c      	str	r4, [r3, #0]
                if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
1000260a:	6813      	ldr	r3, [r2, #0]
1000260c:	2b01      	cmp	r3, #1
1000260e:	d02f      	beq.n	10002670 <prvAddNewTaskToReadyList+0x98>
            uxTaskNumber++;
10002610:	4a1d      	ldr	r2, [pc, #116]	; (10002688 <prvAddNewTaskToReadyList+0xb0>)
10002612:	6813      	ldr	r3, [r2, #0]
10002614:	3301      	adds	r3, #1
10002616:	6013      	str	r3, [r2, #0]
            prvAddTaskToReadyList( pxNewTCB );
10002618:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
1000261a:	4a1c      	ldr	r2, [pc, #112]	; (1000268c <prvAddNewTaskToReadyList+0xb4>)
1000261c:	6812      	ldr	r2, [r2, #0]
1000261e:	4293      	cmp	r3, r2
10002620:	d901      	bls.n	10002626 <prvAddNewTaskToReadyList+0x4e>
10002622:	4a1a      	ldr	r2, [pc, #104]	; (1000268c <prvAddNewTaskToReadyList+0xb4>)
10002624:	6013      	str	r3, [r2, #0]
10002626:	4a1a      	ldr	r2, [pc, #104]	; (10002690 <prvAddNewTaskToReadyList+0xb8>)
10002628:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
1000262c:	eb02 0383 	add.w	r3, r2, r3, lsl #2
10002630:	685b      	ldr	r3, [r3, #4]
10002632:	60a3      	str	r3, [r4, #8]
10002634:	6898      	ldr	r0, [r3, #8]
10002636:	60e0      	str	r0, [r4, #12]
10002638:	1d21      	adds	r1, r4, #4
1000263a:	6041      	str	r1, [r0, #4]
1000263c:	6099      	str	r1, [r3, #8]
1000263e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
10002640:	ebc3 01c3 	rsb	r1, r3, r3, lsl #3
10002644:	eb02 0081 	add.w	r0, r2, r1, lsl #2
10002648:	6160      	str	r0, [r4, #20]
1000264a:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
1000264e:	3101      	adds	r1, #1
10002650:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
10002654:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
        taskEXIT_CRITICAL();
10002658:	f001 f81a 	bl	10003690 <vPortExitCritical>
        if( xSchedulerRunning != pdFALSE )
1000265c:	4b09      	ldr	r3, [pc, #36]	; (10002684 <prvAddNewTaskToReadyList+0xac>)
1000265e:	681b      	ldr	r3, [r3, #0]
10002660:	b12b      	cbz	r3, 1000266e <prvAddNewTaskToReadyList+0x96>
            taskYIELD_ANY_CORE_IF_USING_PREEMPTION( pxNewTCB );
10002662:	4b07      	ldr	r3, [pc, #28]	; (10002680 <prvAddNewTaskToReadyList+0xa8>)
10002664:	681b      	ldr	r3, [r3, #0]
10002666:	6ada      	ldr	r2, [r3, #44]	; 0x2c
10002668:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
1000266a:	429a      	cmp	r2, r3
1000266c:	d303      	bcc.n	10002676 <prvAddNewTaskToReadyList+0x9e>
    }
1000266e:	bd10      	pop	{r4, pc}
                    prvInitialiseTaskLists();
10002670:	f7ff ff7e 	bl	10002570 <prvInitialiseTaskLists>
10002674:	e7cc      	b.n	10002610 <prvAddNewTaskToReadyList+0x38>
            taskYIELD_ANY_CORE_IF_USING_PREEMPTION( pxNewTCB );
10002676:	f000 fff1 	bl	1000365c <vPortYield>
    }
1000267a:	e7f8      	b.n	1000266e <prvAddNewTaskToReadyList+0x96>
1000267c:	38008650 	stmdacc	r0, {r4, r6, r9, sl, pc}
10002680:	380085b8 	stmdacc	r0, {r3, r4, r5, r7, r8, sl, pc}
10002684:	38008b14 	stmdacc	r0, {r2, r4, r8, r9, fp, pc}
10002688:	3800885c 	stmdacc	r0, {r2, r3, r4, r6, fp, pc}
1000268c:	38008a60 	stmdacc	r0, {r5, r6, r9, fp, pc}
10002690:	380085c4 	stmdacc	r0, {r2, r6, r7, r8, sl, pc}

10002694 <prvCreateTask>:
    {
10002694:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
10002698:	b085      	sub	sp, #20
1000269a:	4606      	mov	r6, r0
1000269c:	460f      	mov	r7, r1
1000269e:	4615      	mov	r5, r2
100026a0:	4698      	mov	r8, r3
            pxStack = pvPortMallocStack( ( ( ( size_t ) uxStackDepth ) * sizeof( StackType_t ) ) );
100026a2:	0090      	lsls	r0, r2, #2
100026a4:	f000 fe94 	bl	100033d0 <pvPortMalloc>
            if( pxStack != NULL )
100026a8:	4681      	mov	r9, r0
100026aa:	b310      	cbz	r0, 100026f2 <prvCreateTask+0x5e>
                pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) );
100026ac:	204c      	movs	r0, #76	; 0x4c
100026ae:	f000 fe8f 	bl	100033d0 <pvPortMalloc>
                if( pxNewTCB != NULL )
100026b2:	4604      	mov	r4, r0
100026b4:	b1c8      	cbz	r0, 100026ea <prvCreateTask+0x56>
                    ( void ) memset( ( void * ) pxNewTCB, 0x00, sizeof( TCB_t ) );
100026b6:	224c      	movs	r2, #76	; 0x4c
100026b8:	2100      	movs	r1, #0
100026ba:	f001 f9cb 	bl	10003a54 <memset>
                    pxNewTCB->pxStack = pxStack;
100026be:	f8c4 9030 	str.w	r9, [r4, #48]	; 0x30
        if( pxNewTCB != NULL )
100026c2:	b174      	cbz	r4, 100026e2 <prvCreateTask+0x4e>
                pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
100026c4:	2300      	movs	r3, #0
100026c6:	f884 3049 	strb.w	r3, [r4, #73]	; 0x49
            prvInitialiseNewTask( pxTaskCode, pcName, uxStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
100026ca:	9303      	str	r3, [sp, #12]
100026cc:	9402      	str	r4, [sp, #8]
100026ce:	9b0d      	ldr	r3, [sp, #52]	; 0x34
100026d0:	9301      	str	r3, [sp, #4]
100026d2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
100026d4:	9300      	str	r3, [sp, #0]
100026d6:	4643      	mov	r3, r8
100026d8:	462a      	mov	r2, r5
100026da:	4639      	mov	r1, r7
100026dc:	4630      	mov	r0, r6
100026de:	f7ff fed3 	bl	10002488 <prvInitialiseNewTask>
    }
100026e2:	4620      	mov	r0, r4
100026e4:	b005      	add	sp, #20
100026e6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
                    vPortFreeStack( pxStack );
100026ea:	4648      	mov	r0, r9
100026ec:	f000 feda 	bl	100034a4 <vPortFree>
100026f0:	e7e7      	b.n	100026c2 <prvCreateTask+0x2e>
                pxNewTCB = NULL;
100026f2:	4604      	mov	r4, r0
        return pxNewTCB;
100026f4:	e7f5      	b.n	100026e2 <prvCreateTask+0x4e>

100026f6 <prvDeleteTCB>:
    {
100026f6:	b510      	push	{r4, lr}
100026f8:	4604      	mov	r4, r0
            if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
100026fa:	f890 3049 	ldrb.w	r3, [r0, #73]	; 0x49
100026fe:	b113      	cbz	r3, 10002706 <prvDeleteTCB+0x10>
            else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
10002700:	2b01      	cmp	r3, #1
10002702:	d007      	beq.n	10002714 <prvDeleteTCB+0x1e>
    }
10002704:	bd10      	pop	{r4, pc}
                vPortFreeStack( pxTCB->pxStack );
10002706:	6b00      	ldr	r0, [r0, #48]	; 0x30
10002708:	f000 fecc 	bl	100034a4 <vPortFree>
                vPortFree( pxTCB );
1000270c:	4620      	mov	r0, r4
1000270e:	f000 fec9 	bl	100034a4 <vPortFree>
10002712:	e7f7      	b.n	10002704 <prvDeleteTCB+0xe>
                vPortFree( pxTCB );
10002714:	f000 fec6 	bl	100034a4 <vPortFree>
    }
10002718:	e7f4      	b.n	10002704 <prvDeleteTCB+0xe>
	...

1000271c <prvCheckTasksWaitingTermination>:
        while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
1000271c:	4b0f      	ldr	r3, [pc, #60]	; (1000275c <prvCheckTasksWaitingTermination+0x40>)
1000271e:	681b      	ldr	r3, [r3, #0]
10002720:	b1d3      	cbz	r3, 10002758 <prvCheckTasksWaitingTermination+0x3c>
{
10002722:	b510      	push	{r4, lr}
                taskENTER_CRITICAL();
10002724:	f000 ffa6 	bl	10003674 <vPortEnterCritical>
                        pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) );
10002728:	4b0d      	ldr	r3, [pc, #52]	; (10002760 <prvCheckTasksWaitingTermination+0x44>)
1000272a:	68db      	ldr	r3, [r3, #12]
1000272c:	68dc      	ldr	r4, [r3, #12]
                        ( void ) uxListRemove( &( pxTCB->xStateListItem ) );
1000272e:	1d20      	adds	r0, r4, #4
10002730:	f7ff fc89 	bl	10002046 <uxListRemove>
                        --uxCurrentNumberOfTasks;
10002734:	4a0b      	ldr	r2, [pc, #44]	; (10002764 <prvCheckTasksWaitingTermination+0x48>)
10002736:	6813      	ldr	r3, [r2, #0]
10002738:	3b01      	subs	r3, #1
1000273a:	6013      	str	r3, [r2, #0]
                        --uxDeletedTasksWaitingCleanUp;
1000273c:	4a07      	ldr	r2, [pc, #28]	; (1000275c <prvCheckTasksWaitingTermination+0x40>)
1000273e:	6813      	ldr	r3, [r2, #0]
10002740:	3b01      	subs	r3, #1
10002742:	6013      	str	r3, [r2, #0]
                taskEXIT_CRITICAL();
10002744:	f000 ffa4 	bl	10003690 <vPortExitCritical>
                prvDeleteTCB( pxTCB );
10002748:	4620      	mov	r0, r4
1000274a:	f7ff ffd4 	bl	100026f6 <prvDeleteTCB>
        while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
1000274e:	4b03      	ldr	r3, [pc, #12]	; (1000275c <prvCheckTasksWaitingTermination+0x40>)
10002750:	681b      	ldr	r3, [r3, #0]
10002752:	2b00      	cmp	r3, #0
10002754:	d1e6      	bne.n	10002724 <prvCheckTasksWaitingTermination+0x8>
}
10002756:	bd10      	pop	{r4, pc}
10002758:	4770      	bx	lr
1000275a:	bf00      	nop
1000275c:	38008654 	stmdacc	r0, {r2, r4, r6, r9, sl, pc}
10002760:	38008b34 	stmdacc	r0, {r2, r4, r5, r8, r9, fp, pc}
10002764:	38008650 	stmdacc	r0, {r4, r6, r9, sl, pc}

10002768 <prvAddCurrentTaskToDelayedList>:
#endif /* if ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( INCLUDE_xTaskGetIdleTaskHandle == 1 ) ) */
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait,
                                            const BaseType_t xCanBlockIndefinitely )
{
10002768:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
1000276c:	4604      	mov	r4, r0
1000276e:	460d      	mov	r5, r1
    TickType_t xTimeToWake;
    const TickType_t xConstTickCount = xTickCount;
10002770:	4b21      	ldr	r3, [pc, #132]	; (100027f8 <prvAddCurrentTaskToDelayedList+0x90>)
10002772:	681e      	ldr	r6, [r3, #0]
    List_t * const pxDelayedList = pxDelayedTaskList;
10002774:	4b21      	ldr	r3, [pc, #132]	; (100027fc <prvAddCurrentTaskToDelayedList+0x94>)
10002776:	681f      	ldr	r7, [r3, #0]
    List_t * const pxOverflowDelayedList = pxOverflowDelayedTaskList;
10002778:	4b21      	ldr	r3, [pc, #132]	; (10002800 <prvAddCurrentTaskToDelayedList+0x98>)
1000277a:	f8d3 8000 	ldr.w	r8, [r3]
    #if ( INCLUDE_xTaskAbortDelay == 1 )
    {
        /* About to enter a delayed list, so ensure the ucDelayAborted flag is
         * reset to pdFALSE so it can be detected as having been set to pdTRUE
         * when the task leaves the Blocked state. */
        pxCurrentTCB->ucDelayAborted = ( uint8_t ) pdFALSE;
1000277e:	4b21      	ldr	r3, [pc, #132]	; (10002804 <prvAddCurrentTaskToDelayedList+0x9c>)
10002780:	681a      	ldr	r2, [r3, #0]
10002782:	2100      	movs	r1, #0
10002784:	f882 104a 	strb.w	r1, [r2, #74]	; 0x4a
    }
    #endif

    /* Remove the task from the ready list before adding it to the blocked list
     * as the same list item is used for both lists. */
    if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
10002788:	6818      	ldr	r0, [r3, #0]
1000278a:	3004      	adds	r0, #4
1000278c:	f7ff fc5b 	bl	10002046 <uxListRemove>
        mtCOVERAGE_TEST_MARKER();
    }

    #if ( INCLUDE_vTaskSuspend == 1 )
    {
        if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
10002790:	f1b4 3fff 	cmp.w	r4, #4294967295
10002794:	d00d      	beq.n	100027b2 <prvAddCurrentTaskToDelayedList+0x4a>
        else
        {
            /* Calculate the time at which the task should be woken if the event
             * does not occur.  This may overflow but this doesn't matter, the
             * kernel will manage it correctly. */
            xTimeToWake = xConstTickCount + xTicksToWait;
10002796:	4434      	add	r4, r6

            /* The list item will be inserted in wake time order. */
            listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
10002798:	4b1a      	ldr	r3, [pc, #104]	; (10002804 <prvAddCurrentTaskToDelayedList+0x9c>)
1000279a:	681b      	ldr	r3, [r3, #0]
1000279c:	605c      	str	r4, [r3, #4]

            if( xTimeToWake < xConstTickCount )
1000279e:	42a6      	cmp	r6, r4
100027a0:	d91d      	bls.n	100027de <prvAddCurrentTaskToDelayedList+0x76>
            {
                /* Wake time has overflowed.  Place this item in the overflow
                 * list. */
                traceMOVED_TASK_TO_OVERFLOW_DELAYED_LIST();
                vListInsert( pxOverflowDelayedList, &( pxCurrentTCB->xStateListItem ) );
100027a2:	4b18      	ldr	r3, [pc, #96]	; (10002804 <prvAddCurrentTaskToDelayedList+0x9c>)
100027a4:	6819      	ldr	r1, [r3, #0]
100027a6:	3104      	adds	r1, #4
100027a8:	4640      	mov	r0, r8
100027aa:	f7ff fc33 	bl	10002014 <vListInsert>

        /* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
        ( void ) xCanBlockIndefinitely;
    }
    #endif /* INCLUDE_vTaskSuspend */
}
100027ae:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
100027b2:	2d00      	cmp	r5, #0
100027b4:	d0ef      	beq.n	10002796 <prvAddCurrentTaskToDelayedList+0x2e>
            listINSERT_END( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
100027b6:	4a14      	ldr	r2, [pc, #80]	; (10002808 <prvAddCurrentTaskToDelayedList+0xa0>)
100027b8:	6851      	ldr	r1, [r2, #4]
100027ba:	4b12      	ldr	r3, [pc, #72]	; (10002804 <prvAddCurrentTaskToDelayedList+0x9c>)
100027bc:	6818      	ldr	r0, [r3, #0]
100027be:	6081      	str	r1, [r0, #8]
100027c0:	6818      	ldr	r0, [r3, #0]
100027c2:	688c      	ldr	r4, [r1, #8]
100027c4:	60c4      	str	r4, [r0, #12]
100027c6:	6818      	ldr	r0, [r3, #0]
100027c8:	3004      	adds	r0, #4
100027ca:	6060      	str	r0, [r4, #4]
100027cc:	6818      	ldr	r0, [r3, #0]
100027ce:	3004      	adds	r0, #4
100027d0:	6088      	str	r0, [r1, #8]
100027d2:	681b      	ldr	r3, [r3, #0]
100027d4:	615a      	str	r2, [r3, #20]
100027d6:	6813      	ldr	r3, [r2, #0]
100027d8:	3301      	adds	r3, #1
100027da:	6013      	str	r3, [r2, #0]
100027dc:	e7e7      	b.n	100027ae <prvAddCurrentTaskToDelayedList+0x46>
                vListInsert( pxDelayedList, &( pxCurrentTCB->xStateListItem ) );
100027de:	4b09      	ldr	r3, [pc, #36]	; (10002804 <prvAddCurrentTaskToDelayedList+0x9c>)
100027e0:	6819      	ldr	r1, [r3, #0]
100027e2:	3104      	adds	r1, #4
100027e4:	4638      	mov	r0, r7
100027e6:	f7ff fc15 	bl	10002014 <vListInsert>
                if( xTimeToWake < xNextTaskUnblockTime )
100027ea:	4b08      	ldr	r3, [pc, #32]	; (1000280c <prvAddCurrentTaskToDelayedList+0xa4>)
100027ec:	681b      	ldr	r3, [r3, #0]
100027ee:	42a3      	cmp	r3, r4
100027f0:	d9dd      	bls.n	100027ae <prvAddCurrentTaskToDelayedList+0x46>
                    xNextTaskUnblockTime = xTimeToWake;
100027f2:	4b06      	ldr	r3, [pc, #24]	; (1000280c <prvAddCurrentTaskToDelayedList+0xa4>)
100027f4:	601c      	str	r4, [r3, #0]
}
100027f6:	e7da      	b.n	100027ae <prvAddCurrentTaskToDelayedList+0x46>
100027f8:	38008b50 	stmdacc	r0, {r4, r6, r8, r9, fp, pc}
100027fc:	380085bc 	stmdacc	r0, {r2, r3, r4, r5, r7, r8, sl, pc}
10002800:	380085c0 	stmdacc	r0, {r6, r7, r8, sl, pc}
10002804:	380085b8 	stmdacc	r0, {r3, r4, r5, r7, r8, sl, pc}
10002808:	38008b18 	stmdacc	r0, {r3, r4, r8, r9, fp, pc}
1000280c:	38008aec 	stmdacc	r0, {r2, r3, r5, r6, r7, r9, fp, pc}

10002810 <xTaskCreateStatic>:
    {
10002810:	b510      	push	{r4, lr}
10002812:	b086      	sub	sp, #24
        TaskHandle_t xReturn = NULL;
10002814:	2400      	movs	r4, #0
10002816:	9405      	str	r4, [sp, #20]
        pxNewTCB = prvCreateStaticTask( pxTaskCode, pcName, uxStackDepth, pvParameters, uxPriority, puxStackBuffer, pxTaskBuffer, &xReturn );
10002818:	ac05      	add	r4, sp, #20
1000281a:	9403      	str	r4, [sp, #12]
1000281c:	9c0a      	ldr	r4, [sp, #40]	; 0x28
1000281e:	9402      	str	r4, [sp, #8]
10002820:	9c09      	ldr	r4, [sp, #36]	; 0x24
10002822:	9401      	str	r4, [sp, #4]
10002824:	9c08      	ldr	r4, [sp, #32]
10002826:	9400      	str	r4, [sp, #0]
10002828:	f7ff fe79 	bl	1000251e <prvCreateStaticTask>
        if( pxNewTCB != NULL )
1000282c:	b108      	cbz	r0, 10002832 <xTaskCreateStatic+0x22>
            prvAddNewTaskToReadyList( pxNewTCB );
1000282e:	f7ff fed3 	bl	100025d8 <prvAddNewTaskToReadyList>
    }
10002832:	9805      	ldr	r0, [sp, #20]
10002834:	b006      	add	sp, #24
10002836:	bd10      	pop	{r4, pc}

10002838 <xTaskCreate>:
    {
10002838:	b510      	push	{r4, lr}
1000283a:	b082      	sub	sp, #8
        pxNewTCB = prvCreateTask( pxTaskCode, pcName, uxStackDepth, pvParameters, uxPriority, pxCreatedTask );
1000283c:	9c05      	ldr	r4, [sp, #20]
1000283e:	9401      	str	r4, [sp, #4]
10002840:	9c04      	ldr	r4, [sp, #16]
10002842:	9400      	str	r4, [sp, #0]
10002844:	f7ff ff26 	bl	10002694 <prvCreateTask>
        if( pxNewTCB != NULL )
10002848:	b120      	cbz	r0, 10002854 <xTaskCreate+0x1c>
            prvAddNewTaskToReadyList( pxNewTCB );
1000284a:	f7ff fec5 	bl	100025d8 <prvAddNewTaskToReadyList>
            xReturn = pdPASS;
1000284e:	2001      	movs	r0, #1
    }
10002850:	b002      	add	sp, #8
10002852:	bd10      	pop	{r4, pc}
            xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
10002854:	f04f 30ff 	mov.w	r0, #4294967295
        return xReturn;
10002858:	e7fa      	b.n	10002850 <xTaskCreate+0x18>
	...

1000285c <vTaskSuspendAll>:
        uxSchedulerSuspended = ( UBaseType_t ) ( uxSchedulerSuspended + 1U );
1000285c:	4a02      	ldr	r2, [pc, #8]	; (10002868 <vTaskSuspendAll+0xc>)
1000285e:	6813      	ldr	r3, [r2, #0]
10002860:	3301      	adds	r3, #1
10002862:	6013      	str	r3, [r2, #0]
}
10002864:	4770      	bx	lr
10002866:	bf00      	nop
10002868:	38008858 	stmdacc	r0, {r3, r4, r6, fp, pc}

1000286c <xTaskGetTickCount>:
        xTicks = xTickCount;
1000286c:	4b01      	ldr	r3, [pc, #4]	; (10002874 <xTaskGetTickCount+0x8>)
1000286e:	6818      	ldr	r0, [r3, #0]
}
10002870:	4770      	bx	lr
10002872:	bf00      	nop
10002874:	38008b50 	stmdacc	r0, {r4, r6, r8, r9, fp, pc}

10002878 <uxTaskGetNumberOfTasks>:
    return uxCurrentNumberOfTasks;
10002878:	4b01      	ldr	r3, [pc, #4]	; (10002880 <uxTaskGetNumberOfTasks+0x8>)
1000287a:	6818      	ldr	r0, [r3, #0]
}
1000287c:	4770      	bx	lr
1000287e:	bf00      	nop
10002880:	38008650 	stmdacc	r0, {r4, r6, r9, sl, pc}

10002884 <vTaskStepTick>:
    {
10002884:	b510      	push	{r4, lr}
10002886:	4604      	mov	r4, r0
        xUpdatedTickCount = xTickCount + xTicksToJump;
10002888:	4b0a      	ldr	r3, [pc, #40]	; (100028b4 <vTaskStepTick+0x30>)
1000288a:	681b      	ldr	r3, [r3, #0]
1000288c:	4403      	add	r3, r0
        if( xUpdatedTickCount == xNextTaskUnblockTime )
1000288e:	4a0a      	ldr	r2, [pc, #40]	; (100028b8 <vTaskStepTick+0x34>)
10002890:	6812      	ldr	r2, [r2, #0]
10002892:	429a      	cmp	r2, r3
10002894:	d004      	beq.n	100028a0 <vTaskStepTick+0x1c>
        xTickCount += xTicksToJump;
10002896:	4b07      	ldr	r3, [pc, #28]	; (100028b4 <vTaskStepTick+0x30>)
10002898:	6818      	ldr	r0, [r3, #0]
1000289a:	4404      	add	r4, r0
1000289c:	601c      	str	r4, [r3, #0]
    }
1000289e:	bd10      	pop	{r4, pc}
            taskENTER_CRITICAL();
100028a0:	f000 fee8 	bl	10003674 <vPortEnterCritical>
                xPendedTicks++;
100028a4:	4a05      	ldr	r2, [pc, #20]	; (100028bc <vTaskStepTick+0x38>)
100028a6:	6813      	ldr	r3, [r2, #0]
100028a8:	3301      	adds	r3, #1
100028aa:	6013      	str	r3, [r2, #0]
            taskEXIT_CRITICAL();
100028ac:	f000 fef0 	bl	10003690 <vPortExitCritical>
            xTicksToJump--;
100028b0:	3c01      	subs	r4, #1
100028b2:	e7f0      	b.n	10002896 <vTaskStepTick+0x12>
100028b4:	38008b50 	stmdacc	r0, {r4, r6, r8, r9, fp, pc}
100028b8:	38008aec 	stmdacc	r0, {r2, r3, r5, r6, r7, r9, fp, pc}
100028bc:	38008af4 	stmdacc	r0, {r2, r4, r5, r6, r7, r9, fp, pc}

100028c0 <xTaskIncrementTick>:
    if( uxSchedulerSuspended == ( UBaseType_t ) 0U )
100028c0:	4b4c      	ldr	r3, [pc, #304]	; (100029f4 <xTaskIncrementTick+0x134>)
100028c2:	681b      	ldr	r3, [r3, #0]
100028c4:	2b00      	cmp	r3, #0
100028c6:	f040 808d 	bne.w	100029e4 <xTaskIncrementTick+0x124>
{
100028ca:	b570      	push	{r4, r5, r6, lr}
        const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
100028cc:	4b4a      	ldr	r3, [pc, #296]	; (100029f8 <xTaskIncrementTick+0x138>)
100028ce:	681c      	ldr	r4, [r3, #0]
100028d0:	3401      	adds	r4, #1
        xTickCount = xConstTickCount;
100028d2:	601c      	str	r4, [r3, #0]
        if( xConstTickCount == ( TickType_t ) 0U )
100028d4:	b1a4      	cbz	r4, 10002900 <xTaskIncrementTick+0x40>
        if( xConstTickCount >= xNextTaskUnblockTime )
100028d6:	4b49      	ldr	r3, [pc, #292]	; (100029fc <xTaskIncrementTick+0x13c>)
100028d8:	681b      	ldr	r3, [r3, #0]
100028da:	42a3      	cmp	r3, r4
100028dc:	d91d      	bls.n	1000291a <xTaskIncrementTick+0x5a>
    BaseType_t xSwitchRequired = pdFALSE;
100028de:	2000      	movs	r0, #0
                if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > 1U )
100028e0:	4b47      	ldr	r3, [pc, #284]	; (10002a00 <xTaskIncrementTick+0x140>)
100028e2:	681b      	ldr	r3, [r3, #0]
100028e4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
100028e6:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
100028ea:	009a      	lsls	r2, r3, #2
100028ec:	4b45      	ldr	r3, [pc, #276]	; (10002a04 <xTaskIncrementTick+0x144>)
100028ee:	589b      	ldr	r3, [r3, r2]
100028f0:	2b01      	cmp	r3, #1
100028f2:	d900      	bls.n	100028f6 <xTaskIncrementTick+0x36>
                    xSwitchRequired = pdTRUE;
100028f4:	2001      	movs	r0, #1
                if( xYieldPendings[ 0 ] != pdFALSE )
100028f6:	4b44      	ldr	r3, [pc, #272]	; (10002a08 <xTaskIncrementTick+0x148>)
100028f8:	681b      	ldr	r3, [r3, #0]
100028fa:	2b00      	cmp	r3, #0
100028fc:	d178      	bne.n	100029f0 <xTaskIncrementTick+0x130>
}
100028fe:	bd70      	pop	{r4, r5, r6, pc}
            taskSWITCH_DELAYED_LISTS();
10002900:	4a42      	ldr	r2, [pc, #264]	; (10002a0c <xTaskIncrementTick+0x14c>)
10002902:	6811      	ldr	r1, [r2, #0]
10002904:	4b42      	ldr	r3, [pc, #264]	; (10002a10 <xTaskIncrementTick+0x150>)
10002906:	6818      	ldr	r0, [r3, #0]
10002908:	6010      	str	r0, [r2, #0]
1000290a:	6019      	str	r1, [r3, #0]
1000290c:	4a41      	ldr	r2, [pc, #260]	; (10002a14 <xTaskIncrementTick+0x154>)
1000290e:	6813      	ldr	r3, [r2, #0]
10002910:	3301      	adds	r3, #1
10002912:	6013      	str	r3, [r2, #0]
10002914:	f7ff fda4 	bl	10002460 <prvResetNextTaskUnblockTime>
10002918:	e7dd      	b.n	100028d6 <xTaskIncrementTick+0x16>
    BaseType_t xSwitchRequired = pdFALSE;
1000291a:	2000      	movs	r0, #0
1000291c:	e037      	b.n	1000298e <xTaskIncrementTick+0xce>
                    xNextTaskUnblockTime = portMAX_DELAY;
1000291e:	4b37      	ldr	r3, [pc, #220]	; (100029fc <xTaskIncrementTick+0x13c>)
10002920:	f04f 32ff 	mov.w	r2, #4294967295
10002924:	601a      	str	r2, [r3, #0]
                    break;
10002926:	e7db      	b.n	100028e0 <xTaskIncrementTick+0x20>
                        xNextTaskUnblockTime = xItemValue;
10002928:	4b34      	ldr	r3, [pc, #208]	; (100029fc <xTaskIncrementTick+0x13c>)
1000292a:	601a      	str	r2, [r3, #0]
                        break;
1000292c:	e7d8      	b.n	100028e0 <xTaskIncrementTick+0x20>
                    listREMOVE_ITEM( &( pxTCB->xStateListItem ) );
1000292e:	68d9      	ldr	r1, [r3, #12]
10002930:	6051      	str	r1, [r2, #4]
10002932:	e042      	b.n	100029ba <xTaskIncrementTick+0xfa>
                        listREMOVE_ITEM( &( pxTCB->xEventListItem ) );
10002934:	2100      	movs	r1, #0
10002936:	6299      	str	r1, [r3, #40]	; 0x28
10002938:	6811      	ldr	r1, [r2, #0]
1000293a:	3901      	subs	r1, #1
1000293c:	6011      	str	r1, [r2, #0]
                    prvAddTaskToReadyList( pxTCB );
1000293e:	6ada      	ldr	r2, [r3, #44]	; 0x2c
10002940:	4935      	ldr	r1, [pc, #212]	; (10002a18 <xTaskIncrementTick+0x158>)
10002942:	6809      	ldr	r1, [r1, #0]
10002944:	428a      	cmp	r2, r1
10002946:	d901      	bls.n	1000294c <xTaskIncrementTick+0x8c>
10002948:	4933      	ldr	r1, [pc, #204]	; (10002a18 <xTaskIncrementTick+0x158>)
1000294a:	600a      	str	r2, [r1, #0]
1000294c:	492d      	ldr	r1, [pc, #180]	; (10002a04 <xTaskIncrementTick+0x144>)
1000294e:	ebc2 02c2 	rsb	r2, r2, r2, lsl #3
10002952:	ea4f 0c82 	mov.w	ip, r2, lsl #2
10002956:	448c      	add	ip, r1
10002958:	f8dc 2004 	ldr.w	r2, [ip, #4]
1000295c:	609a      	str	r2, [r3, #8]
1000295e:	6896      	ldr	r6, [r2, #8]
10002960:	60de      	str	r6, [r3, #12]
10002962:	6075      	str	r5, [r6, #4]
10002964:	6095      	str	r5, [r2, #8]
10002966:	6ada      	ldr	r2, [r3, #44]	; 0x2c
10002968:	ebc2 0cc2 	rsb	ip, r2, r2, lsl #3
1000296c:	ea4f 058c 	mov.w	r5, ip, lsl #2
10002970:	194e      	adds	r6, r1, r5
10002972:	615e      	str	r6, [r3, #20]
10002974:	594d      	ldr	r5, [r1, r5]
10002976:	3501      	adds	r5, #1
10002978:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
1000297c:	f841 500c 	str.w	r5, [r1, ip]
                            if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
10002980:	6ada      	ldr	r2, [r3, #44]	; 0x2c
10002982:	4b1f      	ldr	r3, [pc, #124]	; (10002a00 <xTaskIncrementTick+0x140>)
10002984:	681b      	ldr	r3, [r3, #0]
10002986:	6adb      	ldr	r3, [r3, #44]	; 0x2c
10002988:	429a      	cmp	r2, r3
1000298a:	d900      	bls.n	1000298e <xTaskIncrementTick+0xce>
                                xSwitchRequired = pdTRUE;
1000298c:	2001      	movs	r0, #1
                if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
1000298e:	4b1f      	ldr	r3, [pc, #124]	; (10002a0c <xTaskIncrementTick+0x14c>)
10002990:	681b      	ldr	r3, [r3, #0]
10002992:	681b      	ldr	r3, [r3, #0]
10002994:	2b00      	cmp	r3, #0
10002996:	d0c2      	beq.n	1000291e <xTaskIncrementTick+0x5e>
                    pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList );
10002998:	4b1c      	ldr	r3, [pc, #112]	; (10002a0c <xTaskIncrementTick+0x14c>)
1000299a:	681b      	ldr	r3, [r3, #0]
1000299c:	68db      	ldr	r3, [r3, #12]
1000299e:	68db      	ldr	r3, [r3, #12]
                    xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
100029a0:	685a      	ldr	r2, [r3, #4]
                    if( xConstTickCount < xItemValue )
100029a2:	4294      	cmp	r4, r2
100029a4:	d3c0      	bcc.n	10002928 <xTaskIncrementTick+0x68>
                    listREMOVE_ITEM( &( pxTCB->xStateListItem ) );
100029a6:	695a      	ldr	r2, [r3, #20]
100029a8:	689d      	ldr	r5, [r3, #8]
100029aa:	68d9      	ldr	r1, [r3, #12]
100029ac:	60a9      	str	r1, [r5, #8]
100029ae:	689d      	ldr	r5, [r3, #8]
100029b0:	604d      	str	r5, [r1, #4]
100029b2:	6851      	ldr	r1, [r2, #4]
100029b4:	1d1d      	adds	r5, r3, #4
100029b6:	42a9      	cmp	r1, r5
100029b8:	d0b9      	beq.n	1000292e <xTaskIncrementTick+0x6e>
100029ba:	2100      	movs	r1, #0
100029bc:	6159      	str	r1, [r3, #20]
100029be:	6811      	ldr	r1, [r2, #0]
100029c0:	3901      	subs	r1, #1
100029c2:	6011      	str	r1, [r2, #0]
                    if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
100029c4:	6a9a      	ldr	r2, [r3, #40]	; 0x28
100029c6:	2a00      	cmp	r2, #0
100029c8:	d0b9      	beq.n	1000293e <xTaskIncrementTick+0x7e>
                        listREMOVE_ITEM( &( pxTCB->xEventListItem ) );
100029ca:	69de      	ldr	r6, [r3, #28]
100029cc:	6a19      	ldr	r1, [r3, #32]
100029ce:	60b1      	str	r1, [r6, #8]
100029d0:	69de      	ldr	r6, [r3, #28]
100029d2:	604e      	str	r6, [r1, #4]
100029d4:	6856      	ldr	r6, [r2, #4]
100029d6:	f103 0118 	add.w	r1, r3, #24
100029da:	428e      	cmp	r6, r1
100029dc:	d1aa      	bne.n	10002934 <xTaskIncrementTick+0x74>
100029de:	6a19      	ldr	r1, [r3, #32]
100029e0:	6051      	str	r1, [r2, #4]
100029e2:	e7a7      	b.n	10002934 <xTaskIncrementTick+0x74>
        xPendedTicks += 1U;
100029e4:	4a0d      	ldr	r2, [pc, #52]	; (10002a1c <xTaskIncrementTick+0x15c>)
100029e6:	6813      	ldr	r3, [r2, #0]
100029e8:	3301      	adds	r3, #1
100029ea:	6013      	str	r3, [r2, #0]
    BaseType_t xSwitchRequired = pdFALSE;
100029ec:	2000      	movs	r0, #0
}
100029ee:	4770      	bx	lr
                    xSwitchRequired = pdTRUE;
100029f0:	2001      	movs	r0, #1
    return xSwitchRequired;
100029f2:	e784      	b.n	100028fe <xTaskIncrementTick+0x3e>
100029f4:	38008858 	stmdacc	r0, {r3, r4, r6, fp, pc}
100029f8:	38008b50 	stmdacc	r0, {r4, r6, r8, r9, fp, pc}
100029fc:	38008aec 	stmdacc	r0, {r2, r3, r5, r6, r7, r9, fp, pc}
10002a00:	380085b8 	stmdacc	r0, {r3, r4, r5, r7, r8, sl, pc}
10002a04:	380085c4 	stmdacc	r0, {r2, r6, r7, r8, sl, pc}
10002a08:	38008ba0 	stmdacc	r0, {r5, r7, r8, r9, fp, pc}
10002a0c:	380085bc 	stmdacc	r0, {r2, r3, r4, r5, r7, r8, sl, pc}
10002a10:	380085c0 	stmdacc	r0, {r6, r7, r8, sl, pc}
10002a14:	38008af0 	stmdacc	r0, {r4, r5, r6, r7, r9, fp, pc}
10002a18:	38008a60 	stmdacc	r0, {r5, r6, r9, fp, pc}
10002a1c:	38008af4 	stmdacc	r0, {r2, r4, r5, r6, r7, r9, fp, pc}

10002a20 <xTaskResumeAll>:
{
10002a20:	b510      	push	{r4, lr}
        taskENTER_CRITICAL();
10002a22:	f000 fe27 	bl	10003674 <vPortEnterCritical>
            uxSchedulerSuspended = ( UBaseType_t ) ( uxSchedulerSuspended - 1U );
10002a26:	4b42      	ldr	r3, [pc, #264]	; (10002b30 <xTaskResumeAll+0x110>)
10002a28:	681a      	ldr	r2, [r3, #0]
10002a2a:	3a01      	subs	r2, #1
10002a2c:	601a      	str	r2, [r3, #0]
            if( uxSchedulerSuspended == ( UBaseType_t ) 0U )
10002a2e:	681b      	ldr	r3, [r3, #0]
10002a30:	2b00      	cmp	r3, #0
10002a32:	d177      	bne.n	10002b24 <xTaskResumeAll+0x104>
                if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
10002a34:	4b3f      	ldr	r3, [pc, #252]	; (10002b34 <xTaskResumeAll+0x114>)
10002a36:	681b      	ldr	r3, [r3, #0]
10002a38:	b93b      	cbnz	r3, 10002a4a <xTaskResumeAll+0x2a>
    BaseType_t xAlreadyYielded = pdFALSE;
10002a3a:	2400      	movs	r4, #0
10002a3c:	e073      	b.n	10002b26 <xTaskResumeAll+0x106>
                        listREMOVE_ITEM( &( pxTCB->xEventListItem ) );
10002a3e:	6a19      	ldr	r1, [r3, #32]
10002a40:	6051      	str	r1, [r2, #4]
10002a42:	e015      	b.n	10002a70 <xTaskResumeAll+0x50>
                        listREMOVE_ITEM( &( pxTCB->xStateListItem ) );
10002a44:	68d9      	ldr	r1, [r3, #12]
10002a46:	6051      	str	r1, [r2, #4]
10002a48:	e021      	b.n	10002a8e <xTaskResumeAll+0x6e>
    TCB_t * pxTCB = NULL;
10002a4a:	2300      	movs	r3, #0
                    while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
10002a4c:	4a3a      	ldr	r2, [pc, #232]	; (10002b38 <xTaskResumeAll+0x118>)
10002a4e:	6812      	ldr	r2, [r2, #0]
10002a50:	2a00      	cmp	r2, #0
10002a52:	d04a      	beq.n	10002aea <xTaskResumeAll+0xca>
                        pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) );
10002a54:	4b38      	ldr	r3, [pc, #224]	; (10002b38 <xTaskResumeAll+0x118>)
10002a56:	68db      	ldr	r3, [r3, #12]
10002a58:	68db      	ldr	r3, [r3, #12]
                        listREMOVE_ITEM( &( pxTCB->xEventListItem ) );
10002a5a:	6a9a      	ldr	r2, [r3, #40]	; 0x28
10002a5c:	69d8      	ldr	r0, [r3, #28]
10002a5e:	6a19      	ldr	r1, [r3, #32]
10002a60:	6081      	str	r1, [r0, #8]
10002a62:	69d8      	ldr	r0, [r3, #28]
10002a64:	6048      	str	r0, [r1, #4]
10002a66:	6850      	ldr	r0, [r2, #4]
10002a68:	f103 0118 	add.w	r1, r3, #24
10002a6c:	4288      	cmp	r0, r1
10002a6e:	d0e6      	beq.n	10002a3e <xTaskResumeAll+0x1e>
10002a70:	2100      	movs	r1, #0
10002a72:	6299      	str	r1, [r3, #40]	; 0x28
10002a74:	6811      	ldr	r1, [r2, #0]
10002a76:	3901      	subs	r1, #1
10002a78:	6011      	str	r1, [r2, #0]
                        listREMOVE_ITEM( &( pxTCB->xStateListItem ) );
10002a7a:	695a      	ldr	r2, [r3, #20]
10002a7c:	6898      	ldr	r0, [r3, #8]
10002a7e:	68d9      	ldr	r1, [r3, #12]
10002a80:	6081      	str	r1, [r0, #8]
10002a82:	6898      	ldr	r0, [r3, #8]
10002a84:	6048      	str	r0, [r1, #4]
10002a86:	6851      	ldr	r1, [r2, #4]
10002a88:	1d18      	adds	r0, r3, #4
10002a8a:	4281      	cmp	r1, r0
10002a8c:	d0da      	beq.n	10002a44 <xTaskResumeAll+0x24>
10002a8e:	2100      	movs	r1, #0
10002a90:	6159      	str	r1, [r3, #20]
10002a92:	6811      	ldr	r1, [r2, #0]
10002a94:	3901      	subs	r1, #1
10002a96:	6011      	str	r1, [r2, #0]
                        prvAddTaskToReadyList( pxTCB );
10002a98:	6ada      	ldr	r2, [r3, #44]	; 0x2c
10002a9a:	4928      	ldr	r1, [pc, #160]	; (10002b3c <xTaskResumeAll+0x11c>)
10002a9c:	6809      	ldr	r1, [r1, #0]
10002a9e:	428a      	cmp	r2, r1
10002aa0:	d901      	bls.n	10002aa6 <xTaskResumeAll+0x86>
10002aa2:	4926      	ldr	r1, [pc, #152]	; (10002b3c <xTaskResumeAll+0x11c>)
10002aa4:	600a      	str	r2, [r1, #0]
10002aa6:	4926      	ldr	r1, [pc, #152]	; (10002b40 <xTaskResumeAll+0x120>)
10002aa8:	ebc2 02c2 	rsb	r2, r2, r2, lsl #3
10002aac:	eb01 0282 	add.w	r2, r1, r2, lsl #2
10002ab0:	6852      	ldr	r2, [r2, #4]
10002ab2:	609a      	str	r2, [r3, #8]
10002ab4:	6894      	ldr	r4, [r2, #8]
10002ab6:	60dc      	str	r4, [r3, #12]
10002ab8:	6060      	str	r0, [r4, #4]
10002aba:	6090      	str	r0, [r2, #8]
10002abc:	6ada      	ldr	r2, [r3, #44]	; 0x2c
10002abe:	ebc2 00c2 	rsb	r0, r2, r2, lsl #3
10002ac2:	eb01 0480 	add.w	r4, r1, r0, lsl #2
10002ac6:	615c      	str	r4, [r3, #20]
10002ac8:	f851 0020 	ldr.w	r0, [r1, r0, lsl #2]
10002acc:	3001      	adds	r0, #1
10002ace:	ebc2 02c2 	rsb	r2, r2, r2, lsl #3
10002ad2:	f841 0022 	str.w	r0, [r1, r2, lsl #2]
                            if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
10002ad6:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
10002ad8:	4a1a      	ldr	r2, [pc, #104]	; (10002b44 <xTaskResumeAll+0x124>)
10002ada:	6812      	ldr	r2, [r2, #0]
10002adc:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
10002ade:	4291      	cmp	r1, r2
10002ae0:	d9b4      	bls.n	10002a4c <xTaskResumeAll+0x2c>
                                xYieldPendings[ xCoreID ] = pdTRUE;
10002ae2:	4a19      	ldr	r2, [pc, #100]	; (10002b48 <xTaskResumeAll+0x128>)
10002ae4:	2101      	movs	r1, #1
10002ae6:	6011      	str	r1, [r2, #0]
10002ae8:	e7b0      	b.n	10002a4c <xTaskResumeAll+0x2c>
                    if( pxTCB != NULL )
10002aea:	b10b      	cbz	r3, 10002af0 <xTaskResumeAll+0xd0>
                        prvResetNextTaskUnblockTime();
10002aec:	f7ff fcb8 	bl	10002460 <prvResetNextTaskUnblockTime>
                        TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
10002af0:	4b16      	ldr	r3, [pc, #88]	; (10002b4c <xTaskResumeAll+0x12c>)
10002af2:	681c      	ldr	r4, [r3, #0]
                        if( xPendedCounts > ( TickType_t ) 0U )
10002af4:	b954      	cbnz	r4, 10002b0c <xTaskResumeAll+0xec>
                    if( xYieldPendings[ xCoreID ] != pdFALSE )
10002af6:	4b14      	ldr	r3, [pc, #80]	; (10002b48 <xTaskResumeAll+0x128>)
10002af8:	681c      	ldr	r4, [r3, #0]
10002afa:	b1a4      	cbz	r4, 10002b26 <xTaskResumeAll+0x106>
                            taskYIELD_TASK_CORE_IF_USING_PREEMPTION( pxCurrentTCB );
10002afc:	4b11      	ldr	r3, [pc, #68]	; (10002b44 <xTaskResumeAll+0x124>)
10002afe:	681b      	ldr	r3, [r3, #0]
10002b00:	f000 fdac 	bl	1000365c <vPortYield>
                            xAlreadyYielded = pdTRUE;
10002b04:	2401      	movs	r4, #1
10002b06:	e00e      	b.n	10002b26 <xTaskResumeAll+0x106>
                            } while( xPendedCounts > ( TickType_t ) 0U );
10002b08:	3c01      	subs	r4, #1
10002b0a:	d007      	beq.n	10002b1c <xTaskResumeAll+0xfc>
                                if( xTaskIncrementTick() != pdFALSE )
10002b0c:	f7ff fed8 	bl	100028c0 <xTaskIncrementTick>
10002b10:	2800      	cmp	r0, #0
10002b12:	d0f9      	beq.n	10002b08 <xTaskResumeAll+0xe8>
                                    xYieldPendings[ xCoreID ] = pdTRUE;
10002b14:	4b0c      	ldr	r3, [pc, #48]	; (10002b48 <xTaskResumeAll+0x128>)
10002b16:	2201      	movs	r2, #1
10002b18:	601a      	str	r2, [r3, #0]
10002b1a:	e7f5      	b.n	10002b08 <xTaskResumeAll+0xe8>
                            xPendedTicks = 0;
10002b1c:	4b0b      	ldr	r3, [pc, #44]	; (10002b4c <xTaskResumeAll+0x12c>)
10002b1e:	2200      	movs	r2, #0
10002b20:	601a      	str	r2, [r3, #0]
10002b22:	e7e8      	b.n	10002af6 <xTaskResumeAll+0xd6>
    BaseType_t xAlreadyYielded = pdFALSE;
10002b24:	2400      	movs	r4, #0
        taskEXIT_CRITICAL();
10002b26:	f000 fdb3 	bl	10003690 <vPortExitCritical>
}
10002b2a:	4620      	mov	r0, r4
10002b2c:	bd10      	pop	{r4, pc}
10002b2e:	bf00      	nop
10002b30:	38008858 	stmdacc	r0, {r3, r4, r6, fp, pc}
10002b34:	38008650 	stmdacc	r0, {r4, r6, r9, sl, pc}
10002b38:	38008af8 	stmdacc	r0, {r3, r4, r5, r6, r7, r9, fp, pc}
10002b3c:	38008a60 	stmdacc	r0, {r5, r6, r9, fp, pc}
10002b40:	380085c4 	stmdacc	r0, {r2, r6, r7, r8, sl, pc}
10002b44:	380085b8 	stmdacc	r0, {r3, r4, r5, r7, r8, sl, pc}
10002b48:	38008ba0 	stmdacc	r0, {r5, r7, r8, r9, fp, pc}
10002b4c:	38008af4 	stmdacc	r0, {r2, r4, r5, r6, r7, r9, fp, pc}

10002b50 <vTaskDelay>:
    {
10002b50:	b510      	push	{r4, lr}
        if( xTicksToDelay > ( TickType_t ) 0U )
10002b52:	b148      	cbz	r0, 10002b68 <vTaskDelay+0x18>
10002b54:	4604      	mov	r4, r0
            vTaskSuspendAll();
10002b56:	f7ff fe81 	bl	1000285c <vTaskSuspendAll>
                prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
10002b5a:	2100      	movs	r1, #0
10002b5c:	4620      	mov	r0, r4
10002b5e:	f7ff fe03 	bl	10002768 <prvAddCurrentTaskToDelayedList>
            xAlreadyYielded = xTaskResumeAll();
10002b62:	f7ff ff5d 	bl	10002a20 <xTaskResumeAll>
        if( xAlreadyYielded == pdFALSE )
10002b66:	b908      	cbnz	r0, 10002b6c <vTaskDelay+0x1c>
            taskYIELD_WITHIN_API();
10002b68:	f000 fd78 	bl	1000365c <vPortYield>
    }
10002b6c:	bd10      	pop	{r4, pc}
	...

10002b70 <prvIdleTask>:
{
10002b70:	b508      	push	{r3, lr}
10002b72:	e003      	b.n	10002b7c <prvIdleTask+0xc>
            xExpectedIdleTime = prvGetExpectedIdleTime();
10002b74:	f7ff fc54 	bl	10002420 <prvGetExpectedIdleTime>
            if( xExpectedIdleTime >= ( TickType_t ) configEXPECTED_IDLE_TIME_BEFORE_SLEEP )
10002b78:	2801      	cmp	r0, #1
10002b7a:	d808      	bhi.n	10002b8e <prvIdleTask+0x1e>
        prvCheckTasksWaitingTermination();
10002b7c:	f7ff fdce 	bl	1000271c <prvCheckTasksWaitingTermination>
            if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) configNUMBER_OF_CORES )
10002b80:	4b08      	ldr	r3, [pc, #32]	; (10002ba4 <prvIdleTask+0x34>)
10002b82:	681b      	ldr	r3, [r3, #0]
10002b84:	2b01      	cmp	r3, #1
10002b86:	d9f5      	bls.n	10002b74 <prvIdleTask+0x4>
                taskYIELD();
10002b88:	f000 fd68 	bl	1000365c <vPortYield>
10002b8c:	e7f2      	b.n	10002b74 <prvIdleTask+0x4>
                vTaskSuspendAll();
10002b8e:	f7ff fe65 	bl	1000285c <vTaskSuspendAll>
                    xExpectedIdleTime = prvGetExpectedIdleTime();
10002b92:	f7ff fc45 	bl	10002420 <prvGetExpectedIdleTime>
                    if( xExpectedIdleTime >= ( TickType_t ) configEXPECTED_IDLE_TIME_BEFORE_SLEEP )
10002b96:	2801      	cmp	r0, #1
10002b98:	d901      	bls.n	10002b9e <prvIdleTask+0x2e>
                        portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime );
10002b9a:	f000 fcb7 	bl	1000350c <vPortSuppressTicksAndSleep>
                ( void ) xTaskResumeAll();
10002b9e:	f7ff ff3f 	bl	10002a20 <xTaskResumeAll>
10002ba2:	e7eb      	b.n	10002b7c <prvIdleTask+0xc>
10002ba4:	380085c4 	stmdacc	r0, {r2, r6, r7, r8, sl, pc}

10002ba8 <vTaskSwitchContext>:
        if( uxSchedulerSuspended != ( UBaseType_t ) 0U )
10002ba8:	4b1b      	ldr	r3, [pc, #108]	; (10002c18 <vTaskSwitchContext+0x70>)
10002baa:	681b      	ldr	r3, [r3, #0]
10002bac:	b11b      	cbz	r3, 10002bb6 <vTaskSwitchContext+0xe>
            xYieldPendings[ 0 ] = pdTRUE;
10002bae:	4b1b      	ldr	r3, [pc, #108]	; (10002c1c <vTaskSwitchContext+0x74>)
10002bb0:	2201      	movs	r2, #1
10002bb2:	601a      	str	r2, [r3, #0]
10002bb4:	4770      	bx	lr
            xYieldPendings[ 0 ] = pdFALSE;
10002bb6:	4b19      	ldr	r3, [pc, #100]	; (10002c1c <vTaskSwitchContext+0x74>)
10002bb8:	2200      	movs	r2, #0
10002bba:	601a      	str	r2, [r3, #0]
            taskSELECT_HIGHEST_PRIORITY_TASK();
10002bbc:	4b18      	ldr	r3, [pc, #96]	; (10002c20 <vTaskSwitchContext+0x78>)
10002bbe:	681b      	ldr	r3, [r3, #0]
10002bc0:	e000      	b.n	10002bc4 <vTaskSwitchContext+0x1c>
10002bc2:	3b01      	subs	r3, #1
10002bc4:	ebc3 01c3 	rsb	r1, r3, r3, lsl #3
10002bc8:	008a      	lsls	r2, r1, #2
10002bca:	4916      	ldr	r1, [pc, #88]	; (10002c24 <vTaskSwitchContext+0x7c>)
10002bcc:	588a      	ldr	r2, [r1, r2]
10002bce:	2a00      	cmp	r2, #0
10002bd0:	d0f7      	beq.n	10002bc2 <vTaskSwitchContext+0x1a>
10002bd2:	ebc3 00c3 	rsb	r0, r3, r3, lsl #3
10002bd6:	0082      	lsls	r2, r0, #2
10002bd8:	440a      	add	r2, r1
10002bda:	6850      	ldr	r0, [r2, #4]
10002bdc:	6840      	ldr	r0, [r0, #4]
10002bde:	6050      	str	r0, [r2, #4]
10002be0:	ebc3 0cc3 	rsb	ip, r3, r3, lsl #3
10002be4:	ea4f 028c 	mov.w	r2, ip, lsl #2
10002be8:	3208      	adds	r2, #8
10002bea:	4411      	add	r1, r2
10002bec:	4288      	cmp	r0, r1
10002bee:	d00c      	beq.n	10002c0a <vTaskSwitchContext+0x62>
10002bf0:	ebc3 02c3 	rsb	r2, r3, r3, lsl #3
10002bf4:	0091      	lsls	r1, r2, #2
10002bf6:	4a0b      	ldr	r2, [pc, #44]	; (10002c24 <vTaskSwitchContext+0x7c>)
10002bf8:	440a      	add	r2, r1
10002bfa:	6852      	ldr	r2, [r2, #4]
10002bfc:	68d1      	ldr	r1, [r2, #12]
10002bfe:	4a0a      	ldr	r2, [pc, #40]	; (10002c28 <vTaskSwitchContext+0x80>)
10002c00:	6011      	str	r1, [r2, #0]
10002c02:	4907      	ldr	r1, [pc, #28]	; (10002c20 <vTaskSwitchContext+0x78>)
10002c04:	600b      	str	r3, [r1, #0]
            portTASK_SWITCH_HOOK( pxCurrentTCB );
10002c06:	6813      	ldr	r3, [r2, #0]
    }
10002c08:	4770      	bx	lr
            taskSELECT_HIGHEST_PRIORITY_TASK();
10002c0a:	4662      	mov	r2, ip
10002c0c:	0091      	lsls	r1, r2, #2
10002c0e:	4a05      	ldr	r2, [pc, #20]	; (10002c24 <vTaskSwitchContext+0x7c>)
10002c10:	440a      	add	r2, r1
10002c12:	68d1      	ldr	r1, [r2, #12]
10002c14:	6051      	str	r1, [r2, #4]
10002c16:	e7eb      	b.n	10002bf0 <vTaskSwitchContext+0x48>
10002c18:	38008858 	stmdacc	r0, {r3, r4, r6, fp, pc}
10002c1c:	38008ba0 	stmdacc	r0, {r5, r7, r8, r9, fp, pc}
10002c20:	38008a60 	stmdacc	r0, {r5, r6, r9, fp, pc}
10002c24:	380085c4 	stmdacc	r0, {r2, r6, r7, r8, sl, pc}
10002c28:	380085b8 	stmdacc	r0, {r3, r4, r5, r7, r8, sl, pc}

10002c2c <vTaskPlaceOnEventList>:
{
10002c2c:	b510      	push	{r4, lr}
10002c2e:	460c      	mov	r4, r1
    vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
10002c30:	4b04      	ldr	r3, [pc, #16]	; (10002c44 <vTaskPlaceOnEventList+0x18>)
10002c32:	6819      	ldr	r1, [r3, #0]
10002c34:	3118      	adds	r1, #24
10002c36:	f7ff f9ed 	bl	10002014 <vListInsert>
    prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
10002c3a:	2101      	movs	r1, #1
10002c3c:	4620      	mov	r0, r4
10002c3e:	f7ff fd93 	bl	10002768 <prvAddCurrentTaskToDelayedList>
}
10002c42:	bd10      	pop	{r4, pc}
10002c44:	380085b8 	stmdacc	r0, {r3, r4, r5, r7, r8, sl, pc}

10002c48 <vTaskPlaceOnEventListRestricted>:
    {
10002c48:	b570      	push	{r4, r5, r6, lr}
10002c4a:	4603      	mov	r3, r0
10002c4c:	4608      	mov	r0, r1
        listINSERT_END( pxEventList, &( pxCurrentTCB->xEventListItem ) );
10002c4e:	6859      	ldr	r1, [r3, #4]
10002c50:	4c0b      	ldr	r4, [pc, #44]	; (10002c80 <vTaskPlaceOnEventListRestricted+0x38>)
10002c52:	6825      	ldr	r5, [r4, #0]
10002c54:	61e9      	str	r1, [r5, #28]
10002c56:	6825      	ldr	r5, [r4, #0]
10002c58:	688e      	ldr	r6, [r1, #8]
10002c5a:	622e      	str	r6, [r5, #32]
10002c5c:	6825      	ldr	r5, [r4, #0]
10002c5e:	3518      	adds	r5, #24
10002c60:	6075      	str	r5, [r6, #4]
10002c62:	6825      	ldr	r5, [r4, #0]
10002c64:	3518      	adds	r5, #24
10002c66:	608d      	str	r5, [r1, #8]
10002c68:	6821      	ldr	r1, [r4, #0]
10002c6a:	628b      	str	r3, [r1, #40]	; 0x28
10002c6c:	6819      	ldr	r1, [r3, #0]
10002c6e:	3101      	adds	r1, #1
10002c70:	6019      	str	r1, [r3, #0]
        if( xWaitIndefinitely != pdFALSE )
10002c72:	4611      	mov	r1, r2
10002c74:	b10a      	cbz	r2, 10002c7a <vTaskPlaceOnEventListRestricted+0x32>
            xTicksToWait = portMAX_DELAY;
10002c76:	f04f 30ff 	mov.w	r0, #4294967295
        prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
10002c7a:	f7ff fd75 	bl	10002768 <prvAddCurrentTaskToDelayedList>
    }
10002c7e:	bd70      	pop	{r4, r5, r6, pc}
10002c80:	380085b8 	stmdacc	r0, {r3, r4, r5, r7, r8, sl, pc}

10002c84 <xTaskRemoveFromEventList>:
{
10002c84:	b510      	push	{r4, lr}
    pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList );
10002c86:	68c3      	ldr	r3, [r0, #12]
10002c88:	68dc      	ldr	r4, [r3, #12]
    listREMOVE_ITEM( &( pxUnblockedTCB->xEventListItem ) );
10002c8a:	6aa3      	ldr	r3, [r4, #40]	; 0x28
10002c8c:	69e1      	ldr	r1, [r4, #28]
10002c8e:	6a22      	ldr	r2, [r4, #32]
10002c90:	608a      	str	r2, [r1, #8]
10002c92:	69e1      	ldr	r1, [r4, #28]
10002c94:	6051      	str	r1, [r2, #4]
10002c96:	685a      	ldr	r2, [r3, #4]
10002c98:	f104 0118 	add.w	r1, r4, #24
10002c9c:	428a      	cmp	r2, r1
10002c9e:	d042      	beq.n	10002d26 <xTaskRemoveFromEventList+0xa2>
10002ca0:	2200      	movs	r2, #0
10002ca2:	62a2      	str	r2, [r4, #40]	; 0x28
10002ca4:	681a      	ldr	r2, [r3, #0]
10002ca6:	3a01      	subs	r2, #1
10002ca8:	601a      	str	r2, [r3, #0]
    if( uxSchedulerSuspended == ( UBaseType_t ) 0U )
10002caa:	4b29      	ldr	r3, [pc, #164]	; (10002d50 <xTaskRemoveFromEventList+0xcc>)
10002cac:	681b      	ldr	r3, [r3, #0]
10002cae:	2b00      	cmp	r3, #0
10002cb0:	d13f      	bne.n	10002d32 <xTaskRemoveFromEventList+0xae>
        listREMOVE_ITEM( &( pxUnblockedTCB->xStateListItem ) );
10002cb2:	6963      	ldr	r3, [r4, #20]
10002cb4:	68a1      	ldr	r1, [r4, #8]
10002cb6:	68e2      	ldr	r2, [r4, #12]
10002cb8:	608a      	str	r2, [r1, #8]
10002cba:	68a1      	ldr	r1, [r4, #8]
10002cbc:	6051      	str	r1, [r2, #4]
10002cbe:	685a      	ldr	r2, [r3, #4]
10002cc0:	1d21      	adds	r1, r4, #4
10002cc2:	428a      	cmp	r2, r1
10002cc4:	d032      	beq.n	10002d2c <xTaskRemoveFromEventList+0xa8>
10002cc6:	2200      	movs	r2, #0
10002cc8:	6162      	str	r2, [r4, #20]
10002cca:	681a      	ldr	r2, [r3, #0]
10002ccc:	3a01      	subs	r2, #1
10002cce:	601a      	str	r2, [r3, #0]
        prvAddTaskToReadyList( pxUnblockedTCB );
10002cd0:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
10002cd2:	4a20      	ldr	r2, [pc, #128]	; (10002d54 <xTaskRemoveFromEventList+0xd0>)
10002cd4:	6812      	ldr	r2, [r2, #0]
10002cd6:	4293      	cmp	r3, r2
10002cd8:	d901      	bls.n	10002cde <xTaskRemoveFromEventList+0x5a>
10002cda:	4a1e      	ldr	r2, [pc, #120]	; (10002d54 <xTaskRemoveFromEventList+0xd0>)
10002cdc:	6013      	str	r3, [r2, #0]
10002cde:	4a1e      	ldr	r2, [pc, #120]	; (10002d58 <xTaskRemoveFromEventList+0xd4>)
10002ce0:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
10002ce4:	eb02 0383 	add.w	r3, r2, r3, lsl #2
10002ce8:	685b      	ldr	r3, [r3, #4]
10002cea:	60a3      	str	r3, [r4, #8]
10002cec:	6898      	ldr	r0, [r3, #8]
10002cee:	60e0      	str	r0, [r4, #12]
10002cf0:	6041      	str	r1, [r0, #4]
10002cf2:	6099      	str	r1, [r3, #8]
10002cf4:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
10002cf6:	ebc3 01c3 	rsb	r1, r3, r3, lsl #3
10002cfa:	eb02 0081 	add.w	r0, r2, r1, lsl #2
10002cfe:	6160      	str	r0, [r4, #20]
10002d00:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
10002d04:	3101      	adds	r1, #1
10002d06:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
10002d0a:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
            prvResetNextTaskUnblockTime();
10002d0e:	f7ff fba7 	bl	10002460 <prvResetNextTaskUnblockTime>
        if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
10002d12:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
10002d14:	4b11      	ldr	r3, [pc, #68]	; (10002d5c <xTaskRemoveFromEventList+0xd8>)
10002d16:	681b      	ldr	r3, [r3, #0]
10002d18:	6adb      	ldr	r3, [r3, #44]	; 0x2c
10002d1a:	429a      	cmp	r2, r3
10002d1c:	d915      	bls.n	10002d4a <xTaskRemoveFromEventList+0xc6>
            xYieldPendings[ 0 ] = pdTRUE;
10002d1e:	2001      	movs	r0, #1
10002d20:	4b0f      	ldr	r3, [pc, #60]	; (10002d60 <xTaskRemoveFromEventList+0xdc>)
10002d22:	6018      	str	r0, [r3, #0]
}
10002d24:	bd10      	pop	{r4, pc}
    listREMOVE_ITEM( &( pxUnblockedTCB->xEventListItem ) );
10002d26:	6a22      	ldr	r2, [r4, #32]
10002d28:	605a      	str	r2, [r3, #4]
10002d2a:	e7b9      	b.n	10002ca0 <xTaskRemoveFromEventList+0x1c>
        listREMOVE_ITEM( &( pxUnblockedTCB->xStateListItem ) );
10002d2c:	68e2      	ldr	r2, [r4, #12]
10002d2e:	605a      	str	r2, [r3, #4]
10002d30:	e7c9      	b.n	10002cc6 <xTaskRemoveFromEventList+0x42>
        listINSERT_END( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
10002d32:	4b0c      	ldr	r3, [pc, #48]	; (10002d64 <xTaskRemoveFromEventList+0xe0>)
10002d34:	685a      	ldr	r2, [r3, #4]
10002d36:	61e2      	str	r2, [r4, #28]
10002d38:	6890      	ldr	r0, [r2, #8]
10002d3a:	6220      	str	r0, [r4, #32]
10002d3c:	6041      	str	r1, [r0, #4]
10002d3e:	6091      	str	r1, [r2, #8]
10002d40:	62a3      	str	r3, [r4, #40]	; 0x28
10002d42:	681a      	ldr	r2, [r3, #0]
10002d44:	3201      	adds	r2, #1
10002d46:	601a      	str	r2, [r3, #0]
10002d48:	e7e3      	b.n	10002d12 <xTaskRemoveFromEventList+0x8e>
            xReturn = pdFALSE;
10002d4a:	2000      	movs	r0, #0
    return xReturn;
10002d4c:	e7ea      	b.n	10002d24 <xTaskRemoveFromEventList+0xa0>
10002d4e:	bf00      	nop
10002d50:	38008858 	stmdacc	r0, {r3, r4, r6, fp, pc}
10002d54:	38008a60 	stmdacc	r0, {r5, r6, r9, fp, pc}
10002d58:	380085c4 	stmdacc	r0, {r2, r6, r7, r8, sl, pc}
10002d5c:	380085b8 	stmdacc	r0, {r3, r4, r5, r7, r8, sl, pc}
10002d60:	38008ba0 	stmdacc	r0, {r5, r7, r8, r9, fp, pc}
10002d64:	38008af8 	stmdacc	r0, {r3, r4, r5, r6, r7, r9, fp, pc}

10002d68 <vTaskInternalSetTimeOutState>:
    pxTimeOut->xOverflowCount = xNumOfOverflows;
10002d68:	4b03      	ldr	r3, [pc, #12]	; (10002d78 <vTaskInternalSetTimeOutState+0x10>)
10002d6a:	681b      	ldr	r3, [r3, #0]
10002d6c:	6003      	str	r3, [r0, #0]
    pxTimeOut->xTimeOnEntering = xTickCount;
10002d6e:	4b03      	ldr	r3, [pc, #12]	; (10002d7c <vTaskInternalSetTimeOutState+0x14>)
10002d70:	681b      	ldr	r3, [r3, #0]
10002d72:	6043      	str	r3, [r0, #4]
}
10002d74:	4770      	bx	lr
10002d76:	bf00      	nop
10002d78:	38008af0 	stmdacc	r0, {r4, r5, r6, r7, r9, fp, pc}
10002d7c:	38008b50 	stmdacc	r0, {r4, r6, r8, r9, fp, pc}

10002d80 <xTaskCheckForTimeOut>:
{
10002d80:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10002d82:	4604      	mov	r4, r0
10002d84:	460d      	mov	r5, r1
    taskENTER_CRITICAL();
10002d86:	f000 fc75 	bl	10003674 <vPortEnterCritical>
        const TickType_t xConstTickCount = xTickCount;
10002d8a:	4b19      	ldr	r3, [pc, #100]	; (10002df0 <xTaskCheckForTimeOut+0x70>)
10002d8c:	681a      	ldr	r2, [r3, #0]
        const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
10002d8e:	6863      	ldr	r3, [r4, #4]
10002d90:	1ad0      	subs	r0, r2, r3
            if( pxCurrentTCB->ucDelayAborted != ( uint8_t ) pdFALSE )
10002d92:	4918      	ldr	r1, [pc, #96]	; (10002df4 <xTaskCheckForTimeOut+0x74>)
10002d94:	6809      	ldr	r1, [r1, #0]
10002d96:	f891 104a 	ldrb.w	r1, [r1, #74]	; 0x4a
10002d9a:	b149      	cbz	r1, 10002db0 <xTaskCheckForTimeOut+0x30>
                pxCurrentTCB->ucDelayAborted = ( uint8_t ) pdFALSE;
10002d9c:	4b15      	ldr	r3, [pc, #84]	; (10002df4 <xTaskCheckForTimeOut+0x74>)
10002d9e:	681b      	ldr	r3, [r3, #0]
10002da0:	2200      	movs	r2, #0
10002da2:	f883 204a 	strb.w	r2, [r3, #74]	; 0x4a
                xReturn = pdTRUE;
10002da6:	2401      	movs	r4, #1
    taskEXIT_CRITICAL();
10002da8:	f000 fc72 	bl	10003690 <vPortExitCritical>
}
10002dac:	4620      	mov	r0, r4
10002dae:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
            if( *pxTicksToWait == portMAX_DELAY )
10002db0:	6829      	ldr	r1, [r5, #0]
10002db2:	f1b1 3fff 	cmp.w	r1, #4294967295
10002db6:	d018      	beq.n	10002dea <xTaskCheckForTimeOut+0x6a>
        if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) )
10002db8:	4e0f      	ldr	r6, [pc, #60]	; (10002df8 <xTaskCheckForTimeOut+0x78>)
10002dba:	6836      	ldr	r6, [r6, #0]
10002dbc:	6827      	ldr	r7, [r4, #0]
10002dbe:	42b7      	cmp	r7, r6
10002dc0:	d005      	beq.n	10002dce <xTaskCheckForTimeOut+0x4e>
10002dc2:	4293      	cmp	r3, r2
10002dc4:	d803      	bhi.n	10002dce <xTaskCheckForTimeOut+0x4e>
            *pxTicksToWait = ( TickType_t ) 0;
10002dc6:	2300      	movs	r3, #0
10002dc8:	602b      	str	r3, [r5, #0]
            xReturn = pdTRUE;
10002dca:	2401      	movs	r4, #1
            *pxTicksToWait = ( TickType_t ) 0;
10002dcc:	e7ec      	b.n	10002da8 <xTaskCheckForTimeOut+0x28>
        else if( xElapsedTime < *pxTicksToWait )
10002dce:	4281      	cmp	r1, r0
10002dd0:	d803      	bhi.n	10002dda <xTaskCheckForTimeOut+0x5a>
            *pxTicksToWait = ( TickType_t ) 0;
10002dd2:	2300      	movs	r3, #0
10002dd4:	602b      	str	r3, [r5, #0]
            xReturn = pdTRUE;
10002dd6:	2401      	movs	r4, #1
10002dd8:	e7e6      	b.n	10002da8 <xTaskCheckForTimeOut+0x28>
            *pxTicksToWait -= xElapsedTime;
10002dda:	1a9b      	subs	r3, r3, r2
10002ddc:	440b      	add	r3, r1
10002dde:	602b      	str	r3, [r5, #0]
            vTaskInternalSetTimeOutState( pxTimeOut );
10002de0:	4620      	mov	r0, r4
10002de2:	f7ff ffc1 	bl	10002d68 <vTaskInternalSetTimeOutState>
            xReturn = pdFALSE;
10002de6:	2400      	movs	r4, #0
10002de8:	e7de      	b.n	10002da8 <xTaskCheckForTimeOut+0x28>
                xReturn = pdFALSE;
10002dea:	2400      	movs	r4, #0
10002dec:	e7dc      	b.n	10002da8 <xTaskCheckForTimeOut+0x28>
10002dee:	bf00      	nop
10002df0:	38008b50 	stmdacc	r0, {r4, r6, r8, r9, fp, pc}
10002df4:	380085b8 	stmdacc	r0, {r3, r4, r5, r7, r8, sl, pc}
10002df8:	38008af0 	stmdacc	r0, {r4, r5, r6, r7, r9, fp, pc}

10002dfc <vTaskMissedYield>:
    xYieldPendings[ portGET_CORE_ID() ] = pdTRUE;
10002dfc:	4b01      	ldr	r3, [pc, #4]	; (10002e04 <vTaskMissedYield+0x8>)
10002dfe:	2201      	movs	r2, #1
10002e00:	601a      	str	r2, [r3, #0]
}
10002e02:	4770      	bx	lr
10002e04:	38008ba0 	stmdacc	r0, {r5, r7, r8, r9, fp, pc}

10002e08 <eTaskConfirmSleepModeStatus>:
        if( listCURRENT_LIST_LENGTH( &xPendingReadyList ) != 0U )
10002e08:	4b0c      	ldr	r3, [pc, #48]	; (10002e3c <eTaskConfirmSleepModeStatus+0x34>)
10002e0a:	681b      	ldr	r3, [r3, #0]
10002e0c:	b973      	cbnz	r3, 10002e2c <eTaskConfirmSleepModeStatus+0x24>
        else if( xYieldPendings[ portGET_CORE_ID() ] != pdFALSE )
10002e0e:	4b0c      	ldr	r3, [pc, #48]	; (10002e40 <eTaskConfirmSleepModeStatus+0x38>)
10002e10:	681b      	ldr	r3, [r3, #0]
10002e12:	b96b      	cbnz	r3, 10002e30 <eTaskConfirmSleepModeStatus+0x28>
        else if( xPendedTicks != 0U )
10002e14:	4b0b      	ldr	r3, [pc, #44]	; (10002e44 <eTaskConfirmSleepModeStatus+0x3c>)
10002e16:	681b      	ldr	r3, [r3, #0]
10002e18:	b963      	cbnz	r3, 10002e34 <eTaskConfirmSleepModeStatus+0x2c>
            else if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList ) == ( uxCurrentNumberOfTasks - uxNonApplicationTasks ) )
10002e1a:	4b0b      	ldr	r3, [pc, #44]	; (10002e48 <eTaskConfirmSleepModeStatus+0x40>)
10002e1c:	681a      	ldr	r2, [r3, #0]
10002e1e:	4b0b      	ldr	r3, [pc, #44]	; (10002e4c <eTaskConfirmSleepModeStatus+0x44>)
10002e20:	681b      	ldr	r3, [r3, #0]
10002e22:	3b01      	subs	r3, #1
10002e24:	429a      	cmp	r2, r3
10002e26:	d007      	beq.n	10002e38 <eTaskConfirmSleepModeStatus+0x30>
        eSleepModeStatus eReturn = eStandardSleep;
10002e28:	2001      	movs	r0, #1
10002e2a:	4770      	bx	lr
            eReturn = eAbortSleep;
10002e2c:	2000      	movs	r0, #0
10002e2e:	4770      	bx	lr
            eReturn = eAbortSleep;
10002e30:	2000      	movs	r0, #0
10002e32:	4770      	bx	lr
            eReturn = eAbortSleep;
10002e34:	2000      	movs	r0, #0
10002e36:	4770      	bx	lr
                eReturn = eNoTasksWaitingTimeout;
10002e38:	2002      	movs	r0, #2
    }
10002e3a:	4770      	bx	lr
10002e3c:	38008af8 	stmdacc	r0, {r3, r4, r5, r6, r7, r9, fp, pc}
10002e40:	38008ba0 	stmdacc	r0, {r5, r7, r8, r9, fp, pc}
10002e44:	38008af4 	stmdacc	r0, {r2, r4, r5, r6, r7, r9, fp, pc}
10002e48:	38008b18 	stmdacc	r0, {r3, r4, r8, r9, fp, pc}
10002e4c:	38008650 	stmdacc	r0, {r4, r6, r9, sl, pc}

10002e50 <xTaskPriorityDisinherit>:
        if( pxMutexHolder != NULL )
10002e50:	2800      	cmp	r0, #0
10002e52:	d034      	beq.n	10002ebe <xTaskPriorityDisinherit+0x6e>
    {
10002e54:	b538      	push	{r3, r4, r5, lr}
10002e56:	4604      	mov	r4, r0
            ( pxTCB->uxMutexesHeld )--;
10002e58:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
10002e5a:	3b01      	subs	r3, #1
10002e5c:	63c3      	str	r3, [r0, #60]	; 0x3c
            if( pxTCB->uxPriority != pxTCB->uxBasePriority )
10002e5e:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
10002e60:	6b82      	ldr	r2, [r0, #56]	; 0x38
10002e62:	4291      	cmp	r1, r2
10002e64:	d02d      	beq.n	10002ec2 <xTaskPriorityDisinherit+0x72>
                if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
10002e66:	b10b      	cbz	r3, 10002e6c <xTaskPriorityDisinherit+0x1c>
        BaseType_t xReturn = pdFALSE;
10002e68:	2000      	movs	r0, #0
    }
10002e6a:	bd38      	pop	{r3, r4, r5, pc}
                    if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
10002e6c:	1d05      	adds	r5, r0, #4
10002e6e:	4628      	mov	r0, r5
10002e70:	f7ff f8e9 	bl	10002046 <uxListRemove>
                    pxTCB->uxPriority = pxTCB->uxBasePriority;
10002e74:	6ba3      	ldr	r3, [r4, #56]	; 0x38
10002e76:	62e3      	str	r3, [r4, #44]	; 0x2c
                    listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority );
10002e78:	f1c3 0205 	rsb	r2, r3, #5
10002e7c:	61a2      	str	r2, [r4, #24]
                    prvAddTaskToReadyList( pxTCB );
10002e7e:	4a12      	ldr	r2, [pc, #72]	; (10002ec8 <xTaskPriorityDisinherit+0x78>)
10002e80:	6812      	ldr	r2, [r2, #0]
10002e82:	4293      	cmp	r3, r2
10002e84:	d901      	bls.n	10002e8a <xTaskPriorityDisinherit+0x3a>
10002e86:	4a10      	ldr	r2, [pc, #64]	; (10002ec8 <xTaskPriorityDisinherit+0x78>)
10002e88:	6013      	str	r3, [r2, #0]
10002e8a:	4a10      	ldr	r2, [pc, #64]	; (10002ecc <xTaskPriorityDisinherit+0x7c>)
10002e8c:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
10002e90:	eb02 0383 	add.w	r3, r2, r3, lsl #2
10002e94:	685b      	ldr	r3, [r3, #4]
10002e96:	60a3      	str	r3, [r4, #8]
10002e98:	6899      	ldr	r1, [r3, #8]
10002e9a:	60e1      	str	r1, [r4, #12]
10002e9c:	604d      	str	r5, [r1, #4]
10002e9e:	609d      	str	r5, [r3, #8]
10002ea0:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
10002ea2:	ebc3 01c3 	rsb	r1, r3, r3, lsl #3
10002ea6:	eb02 0081 	add.w	r0, r2, r1, lsl #2
10002eaa:	6160      	str	r0, [r4, #20]
10002eac:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
10002eb0:	3101      	adds	r1, #1
10002eb2:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
10002eb6:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
                    xReturn = pdTRUE;
10002eba:	2001      	movs	r0, #1
10002ebc:	e7d5      	b.n	10002e6a <xTaskPriorityDisinherit+0x1a>
        BaseType_t xReturn = pdFALSE;
10002ebe:	2000      	movs	r0, #0
    }
10002ec0:	4770      	bx	lr
        BaseType_t xReturn = pdFALSE;
10002ec2:	2000      	movs	r0, #0
10002ec4:	e7d1      	b.n	10002e6a <xTaskPriorityDisinherit+0x1a>
10002ec6:	bf00      	nop
10002ec8:	38008a60 	stmdacc	r0, {r5, r6, r9, fp, pc}
10002ecc:	380085c4 	stmdacc	r0, {r2, r6, r7, r8, sl, pc}

10002ed0 <vApplicationGetIdleTaskMemory>:
                                        configSTACK_DEPTH_TYPE * puxIdleTaskStackSize )
    {
        static StaticTask_t xIdleTaskTCB;
        static StackType_t uxIdleTaskStack[ configMINIMAL_STACK_SIZE ];

        *ppxIdleTaskTCBBuffer = &( xIdleTaskTCB );
10002ed0:	4b03      	ldr	r3, [pc, #12]	; (10002ee0 <vApplicationGetIdleTaskMemory+0x10>)
10002ed2:	6003      	str	r3, [r0, #0]
        *ppxIdleTaskStackBuffer = &( uxIdleTaskStack[ 0 ] );
10002ed4:	4b03      	ldr	r3, [pc, #12]	; (10002ee4 <vApplicationGetIdleTaskMemory+0x14>)
10002ed6:	600b      	str	r3, [r1, #0]
        *puxIdleTaskStackSize = configMINIMAL_STACK_SIZE;
10002ed8:	2380      	movs	r3, #128	; 0x80
10002eda:	6013      	str	r3, [r2, #0]
    }
10002edc:	4770      	bx	lr
10002ede:	bf00      	nop
10002ee0:	38008aa0 	stmdacc	r0, {r5, r7, r9, fp, pc}
10002ee4:	38008658 	stmdacc	r0, {r3, r4, r6, r9, sl, pc}

10002ee8 <prvCreateIdleTasks>:
{
10002ee8:	b530      	push	{r4, r5, lr}
10002eea:	b089      	sub	sp, #36	; 0x24
    for( xIdleTaskNameIndex = ( BaseType_t ) 0; xIdleTaskNameIndex < ( BaseType_t ) configMAX_TASK_NAME_LEN; xIdleTaskNameIndex++ )
10002eec:	2300      	movs	r3, #0
10002eee:	2b03      	cmp	r3, #3
10002ef0:	dc09      	bgt.n	10002f06 <prvCreateIdleTasks+0x1e>
        cIdleName[ xIdleTaskNameIndex ] = configIDLE_TASK_NAME[ xIdleTaskNameIndex ];
10002ef2:	4a15      	ldr	r2, [pc, #84]	; (10002f48 <prvCreateIdleTasks+0x60>)
10002ef4:	5cd2      	ldrb	r2, [r2, r3]
10002ef6:	f103 0120 	add.w	r1, r3, #32
10002efa:	4469      	add	r1, sp
10002efc:	f801 2c04 	strb.w	r2, [r1, #-4]
        if( cIdleName[ xIdleTaskNameIndex ] == ( char ) 0x00 )
10002f00:	b10a      	cbz	r2, 10002f06 <prvCreateIdleTasks+0x1e>
    for( xIdleTaskNameIndex = ( BaseType_t ) 0; xIdleTaskNameIndex < ( BaseType_t ) configMAX_TASK_NAME_LEN; xIdleTaskNameIndex++ )
10002f02:	3301      	adds	r3, #1
10002f04:	e7f3      	b.n	10002eee <prvCreateIdleTasks+0x6>
10002f06:	2400      	movs	r4, #0
    for( xCoreID = ( BaseType_t ) 0; xCoreID < ( BaseType_t ) configNUMBER_OF_CORES; xCoreID++ )
10002f08:	2c00      	cmp	r4, #0
10002f0a:	dd02      	ble.n	10002f12 <prvCreateIdleTasks+0x2a>
10002f0c:	2001      	movs	r0, #1
}
10002f0e:	b009      	add	sp, #36	; 0x24
10002f10:	bd30      	pop	{r4, r5, pc}
            StaticTask_t * pxIdleTaskTCBBuffer = NULL;
10002f12:	2500      	movs	r5, #0
10002f14:	9504      	str	r5, [sp, #16]
            StackType_t * pxIdleTaskStackBuffer = NULL;
10002f16:	9505      	str	r5, [sp, #20]
                vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &uxIdleTaskStackSize );
10002f18:	aa06      	add	r2, sp, #24
10002f1a:	a905      	add	r1, sp, #20
10002f1c:	a804      	add	r0, sp, #16
10002f1e:	f7ff ffd7 	bl	10002ed0 <vApplicationGetIdleTaskMemory>
            xIdleTaskHandles[ xCoreID ] = xTaskCreateStatic( pxIdleTaskFunction,
10002f22:	9b04      	ldr	r3, [sp, #16]
10002f24:	9302      	str	r3, [sp, #8]
10002f26:	9b05      	ldr	r3, [sp, #20]
10002f28:	9301      	str	r3, [sp, #4]
10002f2a:	9500      	str	r5, [sp, #0]
10002f2c:	462b      	mov	r3, r5
10002f2e:	9a06      	ldr	r2, [sp, #24]
10002f30:	a907      	add	r1, sp, #28
10002f32:	4806      	ldr	r0, [pc, #24]	; (10002f4c <prvCreateIdleTasks+0x64>)
10002f34:	f7ff fc6c 	bl	10002810 <xTaskCreateStatic>
10002f38:	4b05      	ldr	r3, [pc, #20]	; (10002f50 <prvCreateIdleTasks+0x68>)
10002f3a:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
            if( xIdleTaskHandles[ xCoreID ] != NULL )
10002f3e:	b108      	cbz	r0, 10002f44 <prvCreateIdleTasks+0x5c>
    for( xCoreID = ( BaseType_t ) 0; xCoreID < ( BaseType_t ) configNUMBER_OF_CORES; xCoreID++ )
10002f40:	3401      	adds	r4, #1
10002f42:	e7e1      	b.n	10002f08 <prvCreateIdleTasks+0x20>
                xReturn = pdFAIL;
10002f44:	2000      	movs	r0, #0
10002f46:	e7e2      	b.n	10002f0e <prvCreateIdleTasks+0x26>
10002f48:	10005dcc 	andne	r5, r0, ip, asr #27
10002f4c:	10002b71 	andne	r2, r0, r1, ror fp
10002f50:	38008a9c 	stmdacc	r0, {r2, r3, r4, r7, r9, fp, pc}

10002f54 <vTaskStartScheduler>:
{
10002f54:	b508      	push	{r3, lr}
    xReturn = prvCreateIdleTasks();
10002f56:	f7ff ffc7 	bl	10002ee8 <prvCreateIdleTasks>
        if( xReturn == pdPASS )
10002f5a:	2801      	cmp	r0, #1
10002f5c:	d004      	beq.n	10002f68 <vTaskStartScheduler+0x14>
    if( xReturn == pdPASS )
10002f5e:	2801      	cmp	r0, #1
10002f60:	d005      	beq.n	10002f6e <vTaskStartScheduler+0x1a>
    ( void ) uxTopUsedPriority;
10002f62:	4b0a      	ldr	r3, [pc, #40]	; (10002f8c <vTaskStartScheduler+0x38>)
10002f64:	681b      	ldr	r3, [r3, #0]
}
10002f66:	bd08      	pop	{r3, pc}
            xReturn = xTimerCreateTimerTask();
10002f68:	f000 f9a6 	bl	100032b8 <xTimerCreateTimerTask>
10002f6c:	e7f7      	b.n	10002f5e <vTaskStartScheduler+0xa>
        portDISABLE_INTERRUPTS();
10002f6e:	f000 fc47 	bl	10003800 <ulSetInterruptMask>
        xNextTaskUnblockTime = portMAX_DELAY;
10002f72:	4b07      	ldr	r3, [pc, #28]	; (10002f90 <vTaskStartScheduler+0x3c>)
10002f74:	f04f 32ff 	mov.w	r2, #4294967295
10002f78:	601a      	str	r2, [r3, #0]
        xSchedulerRunning = pdTRUE;
10002f7a:	4b06      	ldr	r3, [pc, #24]	; (10002f94 <vTaskStartScheduler+0x40>)
10002f7c:	2201      	movs	r2, #1
10002f7e:	601a      	str	r2, [r3, #0]
        xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
10002f80:	4b05      	ldr	r3, [pc, #20]	; (10002f98 <vTaskStartScheduler+0x44>)
10002f82:	2200      	movs	r2, #0
10002f84:	601a      	str	r2, [r3, #0]
        ( void ) xPortStartScheduler();
10002f86:	f000 fbf5 	bl	10003774 <xPortStartScheduler>
10002f8a:	e7ea      	b.n	10002f62 <vTaskStartScheduler+0xe>
10002f8c:	3800000c 	stmdacc	r0, {r2, r3}
10002f90:	38008aec 	stmdacc	r0, {r2, r3, r5, r6, r7, r9, fp, pc}
10002f94:	38008b14 	stmdacc	r0, {r2, r4, r8, r9, fp, pc}
10002f98:	38008b50 	stmdacc	r0, {r4, r6, r8, r9, fp, pc}

10002f9c <vApplicationGetTimerTaskMemory>:
                                         configSTACK_DEPTH_TYPE * puxTimerTaskStackSize )
    {
        static StaticTask_t xTimerTaskTCB;
        static StackType_t uxTimerTaskStack[ configTIMER_TASK_STACK_DEPTH ];

        *ppxTimerTaskTCBBuffer = &( xTimerTaskTCB );
10002f9c:	4b03      	ldr	r3, [pc, #12]	; (10002fac <vApplicationGetTimerTaskMemory+0x10>)
10002f9e:	6003      	str	r3, [r0, #0]
        *ppxTimerTaskStackBuffer = &( uxTimerTaskStack[ 0 ] );
10002fa0:	4b03      	ldr	r3, [pc, #12]	; (10002fb0 <vApplicationGetTimerTaskMemory+0x14>)
10002fa2:	600b      	str	r3, [r1, #0]
        *puxTimerTaskStackSize = configTIMER_TASK_STACK_DEPTH;
10002fa4:	2380      	movs	r3, #128	; 0x80
10002fa6:	6013      	str	r3, [r2, #0]
    }
10002fa8:	4770      	bx	lr
10002faa:	bf00      	nop
10002fac:	38008b54 	stmdacc	r0, {r2, r4, r6, r8, r9, fp, pc}
10002fb0:	38008860 	stmdacc	r0, {r5, r6, fp, pc}

10002fb4 <prvGetNextExpireTime>:
         * the timer with the nearest expiry time will expire.  If there are no
         * active timers then just set the next expire time to 0.  That will cause
         * this task to unblock when the tick count overflows, at which point the
         * timer lists will be switched and the next expiry time can be
         * re-assessed.  */
        *pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
10002fb4:	4b06      	ldr	r3, [pc, #24]	; (10002fd0 <prvGetNextExpireTime+0x1c>)
10002fb6:	681a      	ldr	r2, [r3, #0]
10002fb8:	6813      	ldr	r3, [r2, #0]
10002fba:	b92b      	cbnz	r3, 10002fc8 <prvGetNextExpireTime+0x14>
10002fbc:	2301      	movs	r3, #1
10002fbe:	6003      	str	r3, [r0, #0]

        if( *pxListWasEmpty == pdFALSE )
10002fc0:	b923      	cbnz	r3, 10002fcc <prvGetNextExpireTime+0x18>
        {
            xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
10002fc2:	68d3      	ldr	r3, [r2, #12]
10002fc4:	6818      	ldr	r0, [r3, #0]
10002fc6:	4770      	bx	lr
        *pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
10002fc8:	2300      	movs	r3, #0
10002fca:	e7f8      	b.n	10002fbe <prvGetNextExpireTime+0xa>
        }
        else
        {
            /* Ensure the task unblocks when the tick count rolls over. */
            xNextExpireTime = ( TickType_t ) 0U;
10002fcc:	2000      	movs	r0, #0
        }

        return xNextExpireTime;
    }
10002fce:	4770      	bx	lr
10002fd0:	38008ba4 	stmdacc	r0, {r2, r5, r7, r8, r9, fp, pc}

10002fd4 <prvInsertTimerInActiveList>:

    static BaseType_t prvInsertTimerInActiveList( Timer_t * const pxTimer,
                                                  const TickType_t xNextExpiryTime,
                                                  const TickType_t xTimeNow,
                                                  const TickType_t xCommandTime )
    {
10002fd4:	b508      	push	{r3, lr}
        BaseType_t xProcessTimerNow = pdFALSE;

        listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
10002fd6:	6041      	str	r1, [r0, #4]
        listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
10002fd8:	6100      	str	r0, [r0, #16]

        if( xNextExpiryTime <= xTimeNow )
10002fda:	4291      	cmp	r1, r2
10002fdc:	d80c      	bhi.n	10002ff8 <prvInsertTimerInActiveList+0x24>
        {
            /* Has the expiry time elapsed between the command to start/reset a
             * timer was issued, and the time the command was processed? */
            if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks )
10002fde:	1ad2      	subs	r2, r2, r3
10002fe0:	6983      	ldr	r3, [r0, #24]
10002fe2:	429a      	cmp	r2, r3
10002fe4:	d301      	bcc.n	10002fea <prvInsertTimerInActiveList+0x16>
            {
                /* The time between a command being issued and the command being
                 * processed actually exceeds the timers period.  */
                xProcessTimerNow = pdTRUE;
10002fe6:	2001      	movs	r0, #1
                vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
            }
        }

        return xProcessTimerNow;
    }
10002fe8:	bd08      	pop	{r3, pc}
                vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
10002fea:	1d01      	adds	r1, r0, #4
10002fec:	4b09      	ldr	r3, [pc, #36]	; (10003014 <prvInsertTimerInActiveList+0x40>)
10002fee:	6818      	ldr	r0, [r3, #0]
10002ff0:	f7ff f810 	bl	10002014 <vListInsert>
        BaseType_t xProcessTimerNow = pdFALSE;
10002ff4:	2000      	movs	r0, #0
10002ff6:	e7f7      	b.n	10002fe8 <prvInsertTimerInActiveList+0x14>
            if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
10002ff8:	429a      	cmp	r2, r3
10002ffa:	d201      	bcs.n	10003000 <prvInsertTimerInActiveList+0x2c>
10002ffc:	4299      	cmp	r1, r3
10002ffe:	d206      	bcs.n	1000300e <prvInsertTimerInActiveList+0x3a>
                vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
10003000:	1d01      	adds	r1, r0, #4
10003002:	4b05      	ldr	r3, [pc, #20]	; (10003018 <prvInsertTimerInActiveList+0x44>)
10003004:	6818      	ldr	r0, [r3, #0]
10003006:	f7ff f805 	bl	10002014 <vListInsert>
        BaseType_t xProcessTimerNow = pdFALSE;
1000300a:	2000      	movs	r0, #0
1000300c:	e7ec      	b.n	10002fe8 <prvInsertTimerInActiveList+0x14>
                xProcessTimerNow = pdTRUE;
1000300e:	2001      	movs	r0, #1
        return xProcessTimerNow;
10003010:	e7ea      	b.n	10002fe8 <prvInsertTimerInActiveList+0x14>
10003012:	bf00      	nop
10003014:	38008ba8 	stmdacc	r0, {r3, r5, r7, r8, r9, fp, pc}
10003018:	38008ba4 	stmdacc	r0, {r2, r5, r7, r8, r9, fp, pc}

1000301c <prvReloadTimer>:
    {
1000301c:	b570      	push	{r4, r5, r6, lr}
1000301e:	4604      	mov	r4, r0
10003020:	460d      	mov	r5, r1
10003022:	4616      	mov	r6, r2
        while( prvInsertTimerInActiveList( pxTimer, ( xExpiredTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xExpiredTime ) != pdFALSE )
10003024:	e004      	b.n	10003030 <prvReloadTimer+0x14>
            xExpiredTime += pxTimer->xTimerPeriodInTicks;
10003026:	69a3      	ldr	r3, [r4, #24]
10003028:	441d      	add	r5, r3
            pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
1000302a:	6a23      	ldr	r3, [r4, #32]
1000302c:	4620      	mov	r0, r4
1000302e:	4798      	blx	r3
        while( prvInsertTimerInActiveList( pxTimer, ( xExpiredTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xExpiredTime ) != pdFALSE )
10003030:	69a1      	ldr	r1, [r4, #24]
10003032:	462b      	mov	r3, r5
10003034:	4632      	mov	r2, r6
10003036:	4429      	add	r1, r5
10003038:	4620      	mov	r0, r4
1000303a:	f7ff ffcb 	bl	10002fd4 <prvInsertTimerInActiveList>
1000303e:	2800      	cmp	r0, #0
10003040:	d1f1      	bne.n	10003026 <prvReloadTimer+0xa>
    }
10003042:	bd70      	pop	{r4, r5, r6, pc}

10003044 <prvProcessExpiredTimer>:
    {
10003044:	b570      	push	{r4, r5, r6, lr}
10003046:	4605      	mov	r5, r0
10003048:	460e      	mov	r6, r1
        Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList );
1000304a:	4b0d      	ldr	r3, [pc, #52]	; (10003080 <prvProcessExpiredTimer+0x3c>)
1000304c:	681b      	ldr	r3, [r3, #0]
1000304e:	68db      	ldr	r3, [r3, #12]
10003050:	68dc      	ldr	r4, [r3, #12]
        ( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
10003052:	1d20      	adds	r0, r4, #4
10003054:	f7fe fff7 	bl	10002046 <uxListRemove>
        if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0U )
10003058:	f894 3024 	ldrb.w	r3, [r4, #36]	; 0x24
1000305c:	f013 0f04 	tst.w	r3, #4
10003060:	d107      	bne.n	10003072 <prvProcessExpiredTimer+0x2e>
            pxTimer->ucStatus &= ( ( uint8_t ) ~tmrSTATUS_IS_ACTIVE );
10003062:	f023 0301 	bic.w	r3, r3, #1
10003066:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
        pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
1000306a:	6a23      	ldr	r3, [r4, #32]
1000306c:	4620      	mov	r0, r4
1000306e:	4798      	blx	r3
    }
10003070:	bd70      	pop	{r4, r5, r6, pc}
            prvReloadTimer( pxTimer, xNextExpireTime, xTimeNow );
10003072:	4632      	mov	r2, r6
10003074:	4629      	mov	r1, r5
10003076:	4620      	mov	r0, r4
10003078:	f7ff ffd0 	bl	1000301c <prvReloadTimer>
1000307c:	e7f5      	b.n	1000306a <prvProcessExpiredTimer+0x26>
1000307e:	bf00      	nop
10003080:	38008ba4 	stmdacc	r0, {r2, r5, r7, r8, r9, fp, pc}

10003084 <prvSwitchTimerLists>:
        }
    }
/*-----------------------------------------------------------*/

    static void prvSwitchTimerLists( void )
    {
10003084:	b508      	push	{r3, lr}

        /* The tick count has overflowed.  The timer lists must be switched.
         * If there are any timers still referenced from the current timer list
         * then they must have expired and should be processed before the lists
         * are switched. */
        while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
10003086:	e005      	b.n	10003094 <prvSwitchTimerLists+0x10>
        {
            xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
10003088:	68db      	ldr	r3, [r3, #12]

            /* Process the expired timer.  For auto-reload timers, be careful to
             * process only expirations that occur on the current list.  Further
             * expirations must wait until after the lists are switched. */
            prvProcessExpiredTimer( xNextExpireTime, tmrMAX_TIME_BEFORE_OVERFLOW );
1000308a:	f04f 31ff 	mov.w	r1, #4294967295
1000308e:	6818      	ldr	r0, [r3, #0]
10003090:	f7ff ffd8 	bl	10003044 <prvProcessExpiredTimer>
        while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
10003094:	4b05      	ldr	r3, [pc, #20]	; (100030ac <prvSwitchTimerLists+0x28>)
10003096:	681b      	ldr	r3, [r3, #0]
10003098:	681a      	ldr	r2, [r3, #0]
1000309a:	2a00      	cmp	r2, #0
1000309c:	d1f4      	bne.n	10003088 <prvSwitchTimerLists+0x4>
        }

        pxTemp = pxCurrentTimerList;
        pxCurrentTimerList = pxOverflowTimerList;
1000309e:	4a04      	ldr	r2, [pc, #16]	; (100030b0 <prvSwitchTimerLists+0x2c>)
100030a0:	6810      	ldr	r0, [r2, #0]
100030a2:	4902      	ldr	r1, [pc, #8]	; (100030ac <prvSwitchTimerLists+0x28>)
100030a4:	6008      	str	r0, [r1, #0]
        pxOverflowTimerList = pxTemp;
100030a6:	6013      	str	r3, [r2, #0]
    }
100030a8:	bd08      	pop	{r3, pc}
100030aa:	bf00      	nop
100030ac:	38008ba4 	stmdacc	r0, {r2, r5, r7, r8, r9, fp, pc}
100030b0:	38008ba8 	stmdacc	r0, {r3, r5, r7, r8, r9, fp, pc}

100030b4 <prvSampleTimeNow>:
    {
100030b4:	b538      	push	{r3, r4, r5, lr}
100030b6:	4605      	mov	r5, r0
        xTimeNow = xTaskGetTickCount();
100030b8:	f7ff fbd8 	bl	1000286c <xTaskGetTickCount>
100030bc:	4604      	mov	r4, r0
        if( xTimeNow < xLastTime )
100030be:	4b07      	ldr	r3, [pc, #28]	; (100030dc <prvSampleTimeNow+0x28>)
100030c0:	681b      	ldr	r3, [r3, #0]
100030c2:	4283      	cmp	r3, r0
100030c4:	d805      	bhi.n	100030d2 <prvSampleTimeNow+0x1e>
            *pxTimerListsWereSwitched = pdFALSE;
100030c6:	2300      	movs	r3, #0
100030c8:	602b      	str	r3, [r5, #0]
        xLastTime = xTimeNow;
100030ca:	4b04      	ldr	r3, [pc, #16]	; (100030dc <prvSampleTimeNow+0x28>)
100030cc:	601c      	str	r4, [r3, #0]
    }
100030ce:	4620      	mov	r0, r4
100030d0:	bd38      	pop	{r3, r4, r5, pc}
            prvSwitchTimerLists();
100030d2:	f7ff ffd7 	bl	10003084 <prvSwitchTimerLists>
            *pxTimerListsWereSwitched = pdTRUE;
100030d6:	2301      	movs	r3, #1
100030d8:	602b      	str	r3, [r5, #0]
100030da:	e7f6      	b.n	100030ca <prvSampleTimeNow+0x16>
100030dc:	38008c84 	stmdacc	r0, {r2, r7, sl, fp, pc}

100030e0 <prvProcessTimerOrBlockTask>:
    {
100030e0:	b570      	push	{r4, r5, r6, lr}
100030e2:	b082      	sub	sp, #8
100030e4:	4606      	mov	r6, r0
100030e6:	460c      	mov	r4, r1
        vTaskSuspendAll();
100030e8:	f7ff fbb8 	bl	1000285c <vTaskSuspendAll>
            xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
100030ec:	a801      	add	r0, sp, #4
100030ee:	f7ff ffe1 	bl	100030b4 <prvSampleTimeNow>
            if( xTimerListsWereSwitched == pdFALSE )
100030f2:	9b01      	ldr	r3, [sp, #4]
100030f4:	bb03      	cbnz	r3, 10003138 <prvProcessTimerOrBlockTask+0x58>
100030f6:	4605      	mov	r5, r0
                if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
100030f8:	b90c      	cbnz	r4, 100030fe <prvProcessTimerOrBlockTask+0x1e>
100030fa:	42b0      	cmp	r0, r6
100030fc:	d210      	bcs.n	10003120 <prvProcessTimerOrBlockTask+0x40>
                    if( xListWasEmpty != pdFALSE )
100030fe:	b124      	cbz	r4, 1000310a <prvProcessTimerOrBlockTask+0x2a>
                        xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
10003100:	4a0f      	ldr	r2, [pc, #60]	; (10003140 <prvProcessTimerOrBlockTask+0x60>)
10003102:	6812      	ldr	r2, [r2, #0]
10003104:	6812      	ldr	r2, [r2, #0]
10003106:	b992      	cbnz	r2, 1000312e <prvProcessTimerOrBlockTask+0x4e>
10003108:	2401      	movs	r4, #1
                    vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
1000310a:	4622      	mov	r2, r4
1000310c:	1b71      	subs	r1, r6, r5
1000310e:	4b0d      	ldr	r3, [pc, #52]	; (10003144 <prvProcessTimerOrBlockTask+0x64>)
10003110:	6818      	ldr	r0, [r3, #0]
10003112:	f7ff f95b 	bl	100023cc <vQueueWaitForMessageRestricted>
                    if( xTaskResumeAll() == pdFALSE )
10003116:	f7ff fc83 	bl	10002a20 <xTaskResumeAll>
1000311a:	b150      	cbz	r0, 10003132 <prvProcessTimerOrBlockTask+0x52>
    }
1000311c:	b002      	add	sp, #8
1000311e:	bd70      	pop	{r4, r5, r6, pc}
                    ( void ) xTaskResumeAll();
10003120:	f7ff fc7e 	bl	10002a20 <xTaskResumeAll>
                    prvProcessExpiredTimer( xNextExpireTime, xTimeNow );
10003124:	4629      	mov	r1, r5
10003126:	4630      	mov	r0, r6
10003128:	f7ff ff8c 	bl	10003044 <prvProcessExpiredTimer>
1000312c:	e7f6      	b.n	1000311c <prvProcessTimerOrBlockTask+0x3c>
                        xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
1000312e:	461c      	mov	r4, r3
10003130:	e7eb      	b.n	1000310a <prvProcessTimerOrBlockTask+0x2a>
                        taskYIELD_WITHIN_API();
10003132:	f000 fa93 	bl	1000365c <vPortYield>
10003136:	e7f1      	b.n	1000311c <prvProcessTimerOrBlockTask+0x3c>
                ( void ) xTaskResumeAll();
10003138:	f7ff fc72 	bl	10002a20 <xTaskResumeAll>
    }
1000313c:	e7ee      	b.n	1000311c <prvProcessTimerOrBlockTask+0x3c>
1000313e:	bf00      	nop
10003140:	38008ba8 	stmdacc	r0, {r3, r5, r7, r8, r9, fp, pc}
10003144:	38008ce4 	stmdacc	r0, {r2, r5, r6, r7, sl, fp, pc}

10003148 <prvProcessReceivedCommands>:
    {
10003148:	b530      	push	{r4, r5, lr}
1000314a:	b087      	sub	sp, #28
        DaemonTaskMessage_t xMessage = { 0 };
1000314c:	2300      	movs	r3, #0
1000314e:	9302      	str	r3, [sp, #8]
10003150:	9303      	str	r3, [sp, #12]
10003152:	9304      	str	r3, [sp, #16]
10003154:	9305      	str	r3, [sp, #20]
        while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL )
10003156:	e002      	b.n	1000315e <prvProcessReceivedCommands+0x16>
            if( xMessage.xMessageID >= ( BaseType_t ) 0 )
10003158:	9b02      	ldr	r3, [sp, #8]
1000315a:	2b00      	cmp	r3, #0
1000315c:	da0f      	bge.n	1000317e <prvProcessReceivedCommands+0x36>
        while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL )
1000315e:	2200      	movs	r2, #0
10003160:	a902      	add	r1, sp, #8
10003162:	4b36      	ldr	r3, [pc, #216]	; (1000323c <prvProcessReceivedCommands+0xf4>)
10003164:	6818      	ldr	r0, [r3, #0]
10003166:	f7ff f8b9 	bl	100022dc <xQueueReceive>
1000316a:	2800      	cmp	r0, #0
1000316c:	d064      	beq.n	10003238 <prvProcessReceivedCommands+0xf0>
                if( xMessage.xMessageID < ( BaseType_t ) 0 )
1000316e:	9b02      	ldr	r3, [sp, #8]
10003170:	2b00      	cmp	r3, #0
10003172:	daf1      	bge.n	10003158 <prvProcessReceivedCommands+0x10>
                    pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
10003174:	9905      	ldr	r1, [sp, #20]
10003176:	9804      	ldr	r0, [sp, #16]
10003178:	9b03      	ldr	r3, [sp, #12]
1000317a:	4798      	blx	r3
1000317c:	e7ec      	b.n	10003158 <prvProcessReceivedCommands+0x10>
                pxTimer = xMessage.u.xTimerParameters.pxTimer;
1000317e:	9c04      	ldr	r4, [sp, #16]
                if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE )
10003180:	6963      	ldr	r3, [r4, #20]
10003182:	b113      	cbz	r3, 1000318a <prvProcessReceivedCommands+0x42>
                    ( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
10003184:	1d20      	adds	r0, r4, #4
10003186:	f7fe ff5e 	bl	10002046 <uxListRemove>
                xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
1000318a:	a801      	add	r0, sp, #4
1000318c:	f7ff ff92 	bl	100030b4 <prvSampleTimeNow>
10003190:	4605      	mov	r5, r0
                switch( xMessage.xMessageID )
10003192:	9b02      	ldr	r3, [sp, #8]
10003194:	3b01      	subs	r3, #1
10003196:	2b08      	cmp	r3, #8
10003198:	d8e1      	bhi.n	1000315e <prvProcessReceivedCommands+0x16>
1000319a:	e8df f003 	tbb	[pc, r3]
1000319e:	30290505 	eorcc	r0, r9, r5, lsl #10
100031a2:	2905053f 	stmdbcs	r5, {r0, r1, r2, r3, r4, r5, r8, sl}
100031a6:	f8940030 			; <UNDEFINED> instruction: 0xf8940030
                        pxTimer->ucStatus |= ( uint8_t ) tmrSTATUS_IS_ACTIVE;
100031aa:	3024      	adds	r0, #36	; 0x24
100031ac:	f043 0301 	orr.w	r3, r3, #1
100031b0:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
                        if( prvInsertTimerInActiveList( pxTimer, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
100031b4:	9b03      	ldr	r3, [sp, #12]
100031b6:	69a1      	ldr	r1, [r4, #24]
100031b8:	4602      	mov	r2, r0
100031ba:	4419      	add	r1, r3
100031bc:	4620      	mov	r0, r4
100031be:	f7ff ff09 	bl	10002fd4 <prvInsertTimerInActiveList>
100031c2:	2800      	cmp	r0, #0
100031c4:	d0cb      	beq.n	1000315e <prvProcessReceivedCommands+0x16>
                            if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0U )
100031c6:	f894 3024 	ldrb.w	r3, [r4, #36]	; 0x24
100031ca:	f013 0f04 	tst.w	r3, #4
100031ce:	d107      	bne.n	100031e0 <prvProcessReceivedCommands+0x98>
                                pxTimer->ucStatus &= ( ( uint8_t ) ~tmrSTATUS_IS_ACTIVE );
100031d0:	f023 0301 	bic.w	r3, r3, #1
100031d4:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
                            pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
100031d8:	6a23      	ldr	r3, [r4, #32]
100031da:	4620      	mov	r0, r4
100031dc:	4798      	blx	r3
100031de:	e7be      	b.n	1000315e <prvProcessReceivedCommands+0x16>
                                prvReloadTimer( pxTimer, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow );
100031e0:	69a3      	ldr	r3, [r4, #24]
100031e2:	462a      	mov	r2, r5
100031e4:	9903      	ldr	r1, [sp, #12]
100031e6:	4419      	add	r1, r3
100031e8:	4620      	mov	r0, r4
100031ea:	f7ff ff17 	bl	1000301c <prvReloadTimer>
100031ee:	e7f3      	b.n	100031d8 <prvProcessReceivedCommands+0x90>
                        pxTimer->ucStatus &= ( ( uint8_t ) ~tmrSTATUS_IS_ACTIVE );
100031f0:	f894 3024 	ldrb.w	r3, [r4, #36]	; 0x24
100031f4:	f023 0301 	bic.w	r3, r3, #1
100031f8:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
                        break;
100031fc:	e7af      	b.n	1000315e <prvProcessReceivedCommands+0x16>
                        pxTimer->ucStatus |= ( uint8_t ) tmrSTATUS_IS_ACTIVE;
100031fe:	f894 3024 	ldrb.w	r3, [r4, #36]	; 0x24
10003202:	f043 0301 	orr.w	r3, r3, #1
10003206:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
                        pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
1000320a:	9903      	ldr	r1, [sp, #12]
1000320c:	61a1      	str	r1, [r4, #24]
                        ( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
1000320e:	4603      	mov	r3, r0
10003210:	4602      	mov	r2, r0
10003212:	4401      	add	r1, r0
10003214:	4620      	mov	r0, r4
10003216:	f7ff fedd 	bl	10002fd4 <prvInsertTimerInActiveList>
                        break;
1000321a:	e7a0      	b.n	1000315e <prvProcessReceivedCommands+0x16>
                            if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
1000321c:	f894 3024 	ldrb.w	r3, [r4, #36]	; 0x24
10003220:	f013 0f02 	tst.w	r3, #2
10003224:	d004      	beq.n	10003230 <prvProcessReceivedCommands+0xe8>
                                pxTimer->ucStatus &= ( ( uint8_t ) ~tmrSTATUS_IS_ACTIVE );
10003226:	f023 0301 	bic.w	r3, r3, #1
1000322a:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
1000322e:	e796      	b.n	1000315e <prvProcessReceivedCommands+0x16>
                                vPortFree( pxTimer );
10003230:	4620      	mov	r0, r4
10003232:	f000 f937 	bl	100034a4 <vPortFree>
10003236:	e792      	b.n	1000315e <prvProcessReceivedCommands+0x16>
    }
10003238:	b007      	add	sp, #28
1000323a:	bd30      	pop	{r4, r5, pc}
1000323c:	38008ce4 	stmdacc	r0, {r2, r5, r6, r7, sl, fp, pc}

10003240 <prvTimerTask>:
    {
10003240:	b500      	push	{lr}
10003242:	b083      	sub	sp, #12
            xNextExpireTime = prvGetNextExpireTime( &xListWasEmpty );
10003244:	a801      	add	r0, sp, #4
10003246:	f7ff feb5 	bl	10002fb4 <prvGetNextExpireTime>
            prvProcessTimerOrBlockTask( xNextExpireTime, xListWasEmpty );
1000324a:	9901      	ldr	r1, [sp, #4]
1000324c:	f7ff ff48 	bl	100030e0 <prvProcessTimerOrBlockTask>
            prvProcessReceivedCommands();
10003250:	f7ff ff7a 	bl	10003148 <prvProcessReceivedCommands>
        for( ; configCONTROL_INFINITE_LOOP(); )
10003254:	e7f6      	b.n	10003244 <prvTimerTask+0x4>
	...

10003258 <prvCheckForValidListAndQueue>:
/*-----------------------------------------------------------*/

    static void prvCheckForValidListAndQueue( void )
    {
10003258:	b530      	push	{r4, r5, lr}
1000325a:	b083      	sub	sp, #12
        /* Check that the list from which active timers are referenced, and the
         * queue used to communicate with the timer service, have been
         * initialised. */
        taskENTER_CRITICAL();
1000325c:	f000 fa0a 	bl	10003674 <vPortEnterCritical>
        {
            if( xTimerQueue == NULL )
10003260:	4b0e      	ldr	r3, [pc, #56]	; (1000329c <prvCheckForValidListAndQueue+0x44>)
10003262:	681b      	ldr	r3, [r3, #0]
10003264:	b11b      	cbz	r3, 1000326e <prvCheckForValidListAndQueue+0x16>
            else
            {
                mtCOVERAGE_TEST_MARKER();
            }
        }
        taskEXIT_CRITICAL();
10003266:	f000 fa13 	bl	10003690 <vPortExitCritical>
    }
1000326a:	b003      	add	sp, #12
1000326c:	bd30      	pop	{r4, r5, pc}
                vListInitialise( &xActiveTimerList1 );
1000326e:	4d0c      	ldr	r5, [pc, #48]	; (100032a0 <prvCheckForValidListAndQueue+0x48>)
10003270:	4628      	mov	r0, r5
10003272:	f7fe febf 	bl	10001ff4 <vListInitialise>
                vListInitialise( &xActiveTimerList2 );
10003276:	4c0b      	ldr	r4, [pc, #44]	; (100032a4 <prvCheckForValidListAndQueue+0x4c>)
10003278:	4620      	mov	r0, r4
1000327a:	f7fe febb 	bl	10001ff4 <vListInitialise>
                pxCurrentTimerList = &xActiveTimerList1;
1000327e:	4b0a      	ldr	r3, [pc, #40]	; (100032a8 <prvCheckForValidListAndQueue+0x50>)
10003280:	601d      	str	r5, [r3, #0]
                pxOverflowTimerList = &xActiveTimerList2;
10003282:	4b0a      	ldr	r3, [pc, #40]	; (100032ac <prvCheckForValidListAndQueue+0x54>)
10003284:	601c      	str	r4, [r3, #0]
                    xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
10003286:	2300      	movs	r3, #0
10003288:	9300      	str	r3, [sp, #0]
1000328a:	4b09      	ldr	r3, [pc, #36]	; (100032b0 <prvCheckForValidListAndQueue+0x58>)
1000328c:	4a09      	ldr	r2, [pc, #36]	; (100032b4 <prvCheckForValidListAndQueue+0x5c>)
1000328e:	2110      	movs	r1, #16
10003290:	200a      	movs	r0, #10
10003292:	f7ff f804 	bl	1000229e <xQueueGenericCreateStatic>
10003296:	4b01      	ldr	r3, [pc, #4]	; (1000329c <prvCheckForValidListAndQueue+0x44>)
10003298:	6018      	str	r0, [r3, #0]
1000329a:	e7e4      	b.n	10003266 <prvCheckForValidListAndQueue+0xe>
1000329c:	38008ce4 	stmdacc	r0, {r2, r5, r6, r7, sl, fp, pc}
100032a0:	38008c4c 	stmdacc	r0, {r2, r3, r6, sl, fp, pc}
100032a4:	38008c68 	stmdacc	r0, {r3, r5, r6, sl, fp, pc}
100032a8:	38008ba4 	stmdacc	r0, {r2, r5, r7, r8, r9, fp, pc}
100032ac:	38008ba8 	stmdacc	r0, {r3, r5, r7, r8, r9, fp, pc}
100032b0:	38008c88 	stmdacc	r0, {r3, r7, sl, fp, pc}
100032b4:	38008bac 	stmdacc	r0, {r2, r3, r5, r7, r8, r9, fp, pc}

100032b8 <xTimerCreateTimerTask>:
    {
100032b8:	b510      	push	{r4, lr}
100032ba:	b088      	sub	sp, #32
        prvCheckForValidListAndQueue();
100032bc:	f7ff ffcc 	bl	10003258 <prvCheckForValidListAndQueue>
        if( xTimerQueue != NULL )
100032c0:	4b10      	ldr	r3, [pc, #64]	; (10003304 <xTimerCreateTimerTask+0x4c>)
100032c2:	681b      	ldr	r3, [r3, #0]
100032c4:	b1d3      	cbz	r3, 100032fc <xTimerCreateTimerTask+0x44>
                    StaticTask_t * pxTimerTaskTCBBuffer = NULL;
100032c6:	2400      	movs	r4, #0
100032c8:	9405      	str	r4, [sp, #20]
                    StackType_t * pxTimerTaskStackBuffer = NULL;
100032ca:	9406      	str	r4, [sp, #24]
                    vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &uxTimerTaskStackSize );
100032cc:	aa07      	add	r2, sp, #28
100032ce:	a906      	add	r1, sp, #24
100032d0:	a805      	add	r0, sp, #20
100032d2:	f7ff fe63 	bl	10002f9c <vApplicationGetTimerTaskMemory>
                    xTimerTaskHandle = xTaskCreateStatic( prvTimerTask,
100032d6:	9b05      	ldr	r3, [sp, #20]
100032d8:	9302      	str	r3, [sp, #8]
100032da:	9b06      	ldr	r3, [sp, #24]
100032dc:	9301      	str	r3, [sp, #4]
100032de:	2304      	movs	r3, #4
100032e0:	9300      	str	r3, [sp, #0]
100032e2:	4623      	mov	r3, r4
100032e4:	9a07      	ldr	r2, [sp, #28]
100032e6:	4908      	ldr	r1, [pc, #32]	; (10003308 <xTimerCreateTimerTask+0x50>)
100032e8:	4808      	ldr	r0, [pc, #32]	; (1000330c <xTimerCreateTimerTask+0x54>)
100032ea:	f7ff fa91 	bl	10002810 <xTaskCreateStatic>
100032ee:	4b08      	ldr	r3, [pc, #32]	; (10003310 <xTimerCreateTimerTask+0x58>)
100032f0:	6018      	str	r0, [r3, #0]
                    if( xTimerTaskHandle != NULL )
100032f2:	b108      	cbz	r0, 100032f8 <xTimerCreateTimerTask+0x40>
                        xReturn = pdPASS;
100032f4:	2001      	movs	r0, #1
100032f6:	e002      	b.n	100032fe <xTimerCreateTimerTask+0x46>
        BaseType_t xReturn = pdFAIL;
100032f8:	4620      	mov	r0, r4
100032fa:	e000      	b.n	100032fe <xTimerCreateTimerTask+0x46>
100032fc:	2000      	movs	r0, #0
    }
100032fe:	b008      	add	sp, #32
10003300:	bd10      	pop	{r4, pc}
10003302:	bf00      	nop
10003304:	38008ce4 	stmdacc	r0, {r2, r5, r6, r7, sl, fp, pc}
10003308:	10005dd4 	ldrdne	r5, [r0], -r4
1000330c:	10003241 	andne	r3, r0, r1, asr #4
10003310:	38008ce8 	stmdacc	r0, {r3, r5, r6, r7, sl, fp, pc}

10003314 <prvHeapInit>:
    BlockLink_t * pxFirstFreeBlock;
    portPOINTER_SIZE_TYPE uxStartAddress, uxEndAddress;
    size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;

    /* Ensure the heap starts on a correctly aligned boundary. */
    uxStartAddress = ( portPOINTER_SIZE_TYPE ) ucHeap;
10003314:	4a10      	ldr	r2, [pc, #64]	; (10003358 <prvHeapInit+0x44>)

    if( ( uxStartAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
10003316:	f012 0f07 	tst.w	r2, #7
1000331a:	d01a      	beq.n	10003352 <prvHeapInit+0x3e>
    {
        uxStartAddress += ( portBYTE_ALIGNMENT - 1 );
1000331c:	1dd1      	adds	r1, r2, #7
        uxStartAddress &= ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK );
1000331e:	f021 0107 	bic.w	r1, r1, #7
        xTotalHeapSize -= ( size_t ) ( uxStartAddress - ( portPOINTER_SIZE_TYPE ) ucHeap );
10003322:	f5c1 4300 	rsb	r3, r1, #32768	; 0x8000
10003326:	4413      	add	r3, r2
        uxStartAddress &= ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK );
10003328:	460a      	mov	r2, r1
    }
    #endif

    /* xStart is used to hold a pointer to the first item in the list of free
     * blocks.  The void cast is used to prevent compiler warnings. */
    xStart.pxNextFreeBlock = ( void * ) heapPROTECT_BLOCK_POINTER( uxStartAddress );
1000332a:	480c      	ldr	r0, [pc, #48]	; (1000335c <prvHeapInit+0x48>)
1000332c:	6002      	str	r2, [r0, #0]
    xStart.xBlockSize = ( size_t ) 0;
1000332e:	2100      	movs	r1, #0
10003330:	6041      	str	r1, [r0, #4]

    /* pxEnd is used to mark the end of the list of free blocks and is inserted
     * at the end of the heap space. */
    uxEndAddress = uxStartAddress + ( portPOINTER_SIZE_TYPE ) xTotalHeapSize;
10003332:	4413      	add	r3, r2
    uxEndAddress -= ( portPOINTER_SIZE_TYPE ) xHeapStructSize;
10003334:	3b08      	subs	r3, #8
    uxEndAddress &= ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK );
10003336:	f023 0307 	bic.w	r3, r3, #7
    pxEnd = ( BlockLink_t * ) uxEndAddress;
1000333a:	4809      	ldr	r0, [pc, #36]	; (10003360 <prvHeapInit+0x4c>)
1000333c:	6003      	str	r3, [r0, #0]
    pxEnd->xBlockSize = 0;
1000333e:	6059      	str	r1, [r3, #4]
    pxEnd->pxNextFreeBlock = heapPROTECT_BLOCK_POINTER( NULL );
10003340:	6019      	str	r1, [r3, #0]

    /* To start with there is a single free block that is sized to take up the
     * entire heap space, minus the space taken by pxEnd. */
    pxFirstFreeBlock = ( BlockLink_t * ) uxStartAddress;
    pxFirstFreeBlock->xBlockSize = ( size_t ) ( uxEndAddress - ( portPOINTER_SIZE_TYPE ) pxFirstFreeBlock );
10003342:	1a99      	subs	r1, r3, r2
10003344:	6051      	str	r1, [r2, #4]
    pxFirstFreeBlock->pxNextFreeBlock = heapPROTECT_BLOCK_POINTER( pxEnd );
10003346:	6013      	str	r3, [r2, #0]

    /* Only one block exists - and it covers the entire usable heap space. */
    xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
10003348:	4b06      	ldr	r3, [pc, #24]	; (10003364 <prvHeapInit+0x50>)
1000334a:	6019      	str	r1, [r3, #0]
    xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
1000334c:	4b06      	ldr	r3, [pc, #24]	; (10003368 <prvHeapInit+0x54>)
1000334e:	6019      	str	r1, [r3, #0]
}
10003350:	4770      	bx	lr
    size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;
10003352:	f44f 4300 	mov.w	r3, #32768	; 0x8000
10003356:	e7e8      	b.n	1000332a <prvHeapInit+0x16>
10003358:	38000470 	stmdacc	r0, {r4, r5, r6, sl}
1000335c:	38008d00 	stmdacc	r0, {r8, sl, fp, pc}
10003360:	38008cec 	stmdacc	r0, {r2, r3, r5, r6, r7, sl, fp, pc}
10003364:	38008cf4 	stmdacc	r0, {r2, r4, r5, r6, r7, sl, fp, pc}
10003368:	38008cf0 	stmdacc	r0, {r4, r5, r6, r7, sl, fp, pc}

1000336c <prvInsertBlockIntoFreeList>:
    BlockLink_t * pxIterator;
    uint8_t * puc;

    /* Iterate through the list until a block is found that has a higher address
     * than the block being inserted. */
    for( pxIterator = &xStart; heapPROTECT_BLOCK_POINTER( pxIterator->pxNextFreeBlock ) < pxBlockToInsert; pxIterator = heapPROTECT_BLOCK_POINTER( pxIterator->pxNextFreeBlock ) )
1000336c:	4b16      	ldr	r3, [pc, #88]	; (100033c8 <prvInsertBlockIntoFreeList+0x5c>)
1000336e:	461a      	mov	r2, r3
10003370:	681b      	ldr	r3, [r3, #0]
10003372:	4283      	cmp	r3, r0
10003374:	d3fb      	bcc.n	1000336e <prvInsertBlockIntoFreeList+0x2>

    /* Do the block being inserted, and the block it is being inserted after
     * make a contiguous block of memory? */
    puc = ( uint8_t * ) pxIterator;

    if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
10003376:	6851      	ldr	r1, [r2, #4]
10003378:	eb02 0c01 	add.w	ip, r2, r1
1000337c:	4584      	cmp	ip, r0
1000337e:	d009      	beq.n	10003394 <prvInsertBlockIntoFreeList+0x28>

    /* Do the block being inserted, and the block it is being inserted before
     * make a contiguous block of memory? */
    puc = ( uint8_t * ) pxBlockToInsert;

    if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) heapPROTECT_BLOCK_POINTER( pxIterator->pxNextFreeBlock ) )
10003380:	6841      	ldr	r1, [r0, #4]
10003382:	eb00 0c01 	add.w	ip, r0, r1
10003386:	4563      	cmp	r3, ip
10003388:	d009      	beq.n	1000339e <prvInsertBlockIntoFreeList+0x32>
            pxBlockToInsert->pxNextFreeBlock = heapPROTECT_BLOCK_POINTER( pxEnd );
        }
    }
    else
    {
        pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;
1000338a:	6003      	str	r3, [r0, #0]

    /* If the block being inserted plugged a gab, so was merged with the block
     * before and the block after, then it's pxNextFreeBlock pointer will have
     * already been set, and should not be set here as that would make it point
     * to itself. */
    if( pxIterator != pxBlockToInsert )
1000338c:	4290      	cmp	r0, r2
1000338e:	d019      	beq.n	100033c4 <prvInsertBlockIntoFreeList+0x58>
    {
        pxIterator->pxNextFreeBlock = heapPROTECT_BLOCK_POINTER( pxBlockToInsert );
10003390:	6010      	str	r0, [r2, #0]
    }
    else
    {
        mtCOVERAGE_TEST_MARKER();
10003392:	4770      	bx	lr
        pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
10003394:	6840      	ldr	r0, [r0, #4]
10003396:	4401      	add	r1, r0
10003398:	6051      	str	r1, [r2, #4]
        pxBlockToInsert = pxIterator;
1000339a:	4610      	mov	r0, r2
1000339c:	e7f0      	b.n	10003380 <prvInsertBlockIntoFreeList+0x14>
{
1000339e:	b410      	push	{r4}
        if( heapPROTECT_BLOCK_POINTER( pxIterator->pxNextFreeBlock ) != pxEnd )
100033a0:	4c0a      	ldr	r4, [pc, #40]	; (100033cc <prvInsertBlockIntoFreeList+0x60>)
100033a2:	6824      	ldr	r4, [r4, #0]
100033a4:	42a3      	cmp	r3, r4
100033a6:	d00b      	beq.n	100033c0 <prvInsertBlockIntoFreeList+0x54>
            pxBlockToInsert->xBlockSize += heapPROTECT_BLOCK_POINTER( pxIterator->pxNextFreeBlock )->xBlockSize;
100033a8:	685b      	ldr	r3, [r3, #4]
100033aa:	4419      	add	r1, r3
100033ac:	6041      	str	r1, [r0, #4]
            pxBlockToInsert->pxNextFreeBlock = heapPROTECT_BLOCK_POINTER( pxIterator->pxNextFreeBlock )->pxNextFreeBlock;
100033ae:	6813      	ldr	r3, [r2, #0]
100033b0:	681b      	ldr	r3, [r3, #0]
100033b2:	6003      	str	r3, [r0, #0]
    if( pxIterator != pxBlockToInsert )
100033b4:	4290      	cmp	r0, r2
100033b6:	d000      	beq.n	100033ba <prvInsertBlockIntoFreeList+0x4e>
        pxIterator->pxNextFreeBlock = heapPROTECT_BLOCK_POINTER( pxBlockToInsert );
100033b8:	6010      	str	r0, [r2, #0]
    }
}
100033ba:	f85d 4b04 	ldr.w	r4, [sp], #4
100033be:	4770      	bx	lr
            pxBlockToInsert->pxNextFreeBlock = heapPROTECT_BLOCK_POINTER( pxEnd );
100033c0:	6004      	str	r4, [r0, #0]
100033c2:	e7f7      	b.n	100033b4 <prvInsertBlockIntoFreeList+0x48>
100033c4:	4770      	bx	lr
100033c6:	bf00      	nop
100033c8:	38008d00 	stmdacc	r0, {r8, sl, fp, pc}
100033cc:	38008cec 	stmdacc	r0, {r2, r3, r5, r6, r7, sl, fp, pc}

100033d0 <pvPortMalloc>:
{
100033d0:	b570      	push	{r4, r5, r6, lr}
    if( xWantedSize > 0 )
100033d2:	4604      	mov	r4, r0
100033d4:	b170      	cbz	r0, 100033f4 <pvPortMalloc+0x24>
        if( heapADD_WILL_OVERFLOW( xWantedSize, xHeapStructSize ) == 0 )
100033d6:	f110 0f09 	cmn.w	r0, #9
100033da:	d80a      	bhi.n	100033f2 <pvPortMalloc+0x22>
            xWantedSize += xHeapStructSize;
100033dc:	3408      	adds	r4, #8
            if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
100033de:	f014 0307 	ands.w	r3, r4, #7
100033e2:	d007      	beq.n	100033f4 <pvPortMalloc+0x24>
                xAdditionalRequiredSize = portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK );
100033e4:	f1c3 0308 	rsb	r3, r3, #8
                if( heapADD_WILL_OVERFLOW( xWantedSize, xAdditionalRequiredSize ) == 0 )
100033e8:	43da      	mvns	r2, r3
100033ea:	42a2      	cmp	r2, r4
100033ec:	d312      	bcc.n	10003414 <pvPortMalloc+0x44>
                    xWantedSize += xAdditionalRequiredSize;
100033ee:	441c      	add	r4, r3
100033f0:	e000      	b.n	100033f4 <pvPortMalloc+0x24>
            xWantedSize = 0;
100033f2:	2400      	movs	r4, #0
    vTaskSuspendAll();
100033f4:	f7ff fa32 	bl	1000285c <vTaskSuspendAll>
        if( pxEnd == NULL )
100033f8:	4b25      	ldr	r3, [pc, #148]	; (10003490 <pvPortMalloc+0xc0>)
100033fa:	681b      	ldr	r3, [r3, #0]
100033fc:	b163      	cbz	r3, 10003418 <pvPortMalloc+0x48>
        if( heapBLOCK_SIZE_IS_VALID( xWantedSize ) != 0 )
100033fe:	2c00      	cmp	r4, #0
10003400:	db3e      	blt.n	10003480 <pvPortMalloc+0xb0>
            if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
10003402:	2c00      	cmp	r4, #0
10003404:	d03e      	beq.n	10003484 <pvPortMalloc+0xb4>
10003406:	4b23      	ldr	r3, [pc, #140]	; (10003494 <pvPortMalloc+0xc4>)
10003408:	681e      	ldr	r6, [r3, #0]
1000340a:	42a6      	cmp	r6, r4
1000340c:	d33c      	bcc.n	10003488 <pvPortMalloc+0xb8>
                pxBlock = heapPROTECT_BLOCK_POINTER( xStart.pxNextFreeBlock );
1000340e:	4922      	ldr	r1, [pc, #136]	; (10003498 <pvPortMalloc+0xc8>)
10003410:	680b      	ldr	r3, [r1, #0]
                while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != heapPROTECT_BLOCK_POINTER( NULL ) ) )
10003412:	e006      	b.n	10003422 <pvPortMalloc+0x52>
                    xWantedSize = 0;
10003414:	2400      	movs	r4, #0
10003416:	e7ed      	b.n	100033f4 <pvPortMalloc+0x24>
            prvHeapInit();
10003418:	f7ff ff7c 	bl	10003314 <prvHeapInit>
1000341c:	e7ef      	b.n	100033fe <pvPortMalloc+0x2e>
                    pxPreviousBlock = pxBlock;
1000341e:	4619      	mov	r1, r3
                    pxBlock = heapPROTECT_BLOCK_POINTER( pxBlock->pxNextFreeBlock );
10003420:	4613      	mov	r3, r2
                while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != heapPROTECT_BLOCK_POINTER( NULL ) ) )
10003422:	685a      	ldr	r2, [r3, #4]
10003424:	42a2      	cmp	r2, r4
10003426:	d202      	bcs.n	1000342e <pvPortMalloc+0x5e>
10003428:	681a      	ldr	r2, [r3, #0]
1000342a:	2a00      	cmp	r2, #0
1000342c:	d1f7      	bne.n	1000341e <pvPortMalloc+0x4e>
                if( pxBlock != pxEnd )
1000342e:	4a18      	ldr	r2, [pc, #96]	; (10003490 <pvPortMalloc+0xc0>)
10003430:	6812      	ldr	r2, [r2, #0]
10003432:	429a      	cmp	r2, r3
10003434:	d02a      	beq.n	1000348c <pvPortMalloc+0xbc>
                    pvReturn = ( void * ) ( ( ( uint8_t * ) heapPROTECT_BLOCK_POINTER( pxPreviousBlock->pxNextFreeBlock ) ) + xHeapStructSize );
10003436:	680d      	ldr	r5, [r1, #0]
10003438:	3508      	adds	r5, #8
                    pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
1000343a:	681a      	ldr	r2, [r3, #0]
1000343c:	600a      	str	r2, [r1, #0]
                    if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
1000343e:	6858      	ldr	r0, [r3, #4]
10003440:	1b00      	subs	r0, r0, r4
10003442:	2810      	cmp	r0, #16
10003444:	d905      	bls.n	10003452 <pvPortMalloc+0x82>
                        pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
10003446:	191a      	adds	r2, r3, r4
                        pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
10003448:	6050      	str	r0, [r2, #4]
                        pxBlock->xBlockSize = xWantedSize;
1000344a:	605c      	str	r4, [r3, #4]
                        pxNewBlockLink->pxNextFreeBlock = pxPreviousBlock->pxNextFreeBlock;
1000344c:	6808      	ldr	r0, [r1, #0]
1000344e:	5118      	str	r0, [r3, r4]
                        pxPreviousBlock->pxNextFreeBlock = heapPROTECT_BLOCK_POINTER( pxNewBlockLink );
10003450:	600a      	str	r2, [r1, #0]
                    xFreeBytesRemaining -= pxBlock->xBlockSize;
10003452:	6859      	ldr	r1, [r3, #4]
10003454:	1a76      	subs	r6, r6, r1
10003456:	480f      	ldr	r0, [pc, #60]	; (10003494 <pvPortMalloc+0xc4>)
10003458:	6006      	str	r6, [r0, #0]
                    if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
1000345a:	4810      	ldr	r0, [pc, #64]	; (1000349c <pvPortMalloc+0xcc>)
1000345c:	6800      	ldr	r0, [r0, #0]
1000345e:	4286      	cmp	r6, r0
10003460:	d201      	bcs.n	10003466 <pvPortMalloc+0x96>
                        xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
10003462:	480e      	ldr	r0, [pc, #56]	; (1000349c <pvPortMalloc+0xcc>)
10003464:	6006      	str	r6, [r0, #0]
                    heapALLOCATE_BLOCK( pxBlock );
10003466:	f041 4100 	orr.w	r1, r1, #2147483648	; 0x80000000
1000346a:	6059      	str	r1, [r3, #4]
                    pxBlock->pxNextFreeBlock = NULL;
1000346c:	2200      	movs	r2, #0
1000346e:	601a      	str	r2, [r3, #0]
                    xNumberOfSuccessfulAllocations++;
10003470:	4a0b      	ldr	r2, [pc, #44]	; (100034a0 <pvPortMalloc+0xd0>)
10003472:	6813      	ldr	r3, [r2, #0]
10003474:	3301      	adds	r3, #1
10003476:	6013      	str	r3, [r2, #0]
    ( void ) xTaskResumeAll();
10003478:	f7ff fad2 	bl	10002a20 <xTaskResumeAll>
}
1000347c:	4628      	mov	r0, r5
1000347e:	bd70      	pop	{r4, r5, r6, pc}
    void * pvReturn = NULL;
10003480:	2500      	movs	r5, #0
10003482:	e7f9      	b.n	10003478 <pvPortMalloc+0xa8>
10003484:	2500      	movs	r5, #0
10003486:	e7f7      	b.n	10003478 <pvPortMalloc+0xa8>
10003488:	2500      	movs	r5, #0
1000348a:	e7f5      	b.n	10003478 <pvPortMalloc+0xa8>
1000348c:	2500      	movs	r5, #0
1000348e:	e7f3      	b.n	10003478 <pvPortMalloc+0xa8>
10003490:	38008cec 	stmdacc	r0, {r2, r3, r5, r6, r7, sl, fp, pc}
10003494:	38008cf0 	stmdacc	r0, {r4, r5, r6, r7, sl, fp, pc}
10003498:	38008d00 	stmdacc	r0, {r8, sl, fp, pc}
1000349c:	38008cf4 	stmdacc	r0, {r2, r4, r5, r6, r7, sl, fp, pc}
100034a0:	38008cf8 	stmdacc	r0, {r3, r4, r5, r6, r7, sl, fp, pc}

100034a4 <vPortFree>:
    if( pv != NULL )
100034a4:	b308      	cbz	r0, 100034ea <vPortFree+0x46>
{
100034a6:	b538      	push	{r3, r4, r5, lr}
100034a8:	4604      	mov	r4, r0
        puc -= xHeapStructSize;
100034aa:	f1a0 0508 	sub.w	r5, r0, #8
        if( heapBLOCK_IS_ALLOCATED( pxLink ) != 0 )
100034ae:	f850 3c04 	ldr.w	r3, [r0, #-4]
100034b2:	2b00      	cmp	r3, #0
100034b4:	da02      	bge.n	100034bc <vPortFree+0x18>
            if( pxLink->pxNextFreeBlock == NULL )
100034b6:	f850 2c08 	ldr.w	r2, [r0, #-8]
100034ba:	b102      	cbz	r2, 100034be <vPortFree+0x1a>
}
100034bc:	bd38      	pop	{r3, r4, r5, pc}
                heapFREE_BLOCK( pxLink );
100034be:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
100034c2:	f840 3c04 	str.w	r3, [r0, #-4]
                vTaskSuspendAll();
100034c6:	f7ff f9c9 	bl	1000285c <vTaskSuspendAll>
                    xFreeBytesRemaining += pxLink->xBlockSize;
100034ca:	f854 1c04 	ldr.w	r1, [r4, #-4]
100034ce:	4a07      	ldr	r2, [pc, #28]	; (100034ec <vPortFree+0x48>)
100034d0:	6813      	ldr	r3, [r2, #0]
100034d2:	440b      	add	r3, r1
100034d4:	6013      	str	r3, [r2, #0]
                    prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
100034d6:	4628      	mov	r0, r5
100034d8:	f7ff ff48 	bl	1000336c <prvInsertBlockIntoFreeList>
                    xNumberOfSuccessfulFrees++;
100034dc:	4a04      	ldr	r2, [pc, #16]	; (100034f0 <vPortFree+0x4c>)
100034de:	6813      	ldr	r3, [r2, #0]
100034e0:	3301      	adds	r3, #1
100034e2:	6013      	str	r3, [r2, #0]
                ( void ) xTaskResumeAll();
100034e4:	f7ff fa9c 	bl	10002a20 <xTaskResumeAll>
}
100034e8:	e7e8      	b.n	100034bc <vPortFree+0x18>
100034ea:	4770      	bx	lr
100034ec:	38008cf0 	stmdacc	r0, {r4, r5, r6, r7, sl, fp, pc}
100034f0:	38008cfc 	stmdacc	r0, {r2, r3, r4, r5, r6, r7, sl, fp, pc}

100034f4 <prvTaskExitError>:
    portNVIC_SYSTICK_CTRL_REG = portNVIC_SYSTICK_CLK_BIT_CONFIG | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT;
}
/*-----------------------------------------------------------*/

static void prvTaskExitError( void )
{
100034f4:	b500      	push	{lr}
100034f6:	b083      	sub	sp, #12
    volatile uint32_t ulDummy = 0UL;
100034f8:	2300      	movs	r3, #0
100034fa:	9301      	str	r3, [sp, #4]
     * its caller as there is nothing to return to. If a task wants to exit it
     * should instead call vTaskDelete( NULL ). Artificially force an assert()
     * to be triggered if configASSERT() is defined, then stop here so
     * application writers can catch the error. */
    configASSERT( ulCriticalNesting == ~0UL );
    portDISABLE_INTERRUPTS();
100034fc:	f000 f980 	bl	10003800 <ulSetInterruptMask>

    while( ulDummy == 0 )
10003500:	9b01      	ldr	r3, [sp, #4]
10003502:	2b00      	cmp	r3, #0
10003504:	d0fc      	beq.n	10003500 <prvTaskExitError+0xc>
         * warnings about code appearing after this function is called - making
         * ulDummy volatile makes the compiler think the function could return
         * and therefore not output an 'unreachable code' warning for code that
         * appears after it. */
    }
}
10003506:	b003      	add	sp, #12
10003508:	f85d fb04 	ldr.w	pc, [sp], #4

1000350c <vPortSuppressTicksAndSleep>:
    {
1000350c:	b510      	push	{r4, lr}
        if( xExpectedIdleTime > xMaximumPossibleSuppressedTicks )
1000350e:	4b41      	ldr	r3, [pc, #260]	; (10003614 <vPortSuppressTicksAndSleep+0x108>)
10003510:	681c      	ldr	r4, [r3, #0]
10003512:	4284      	cmp	r4, r0
10003514:	d300      	bcc.n	10003518 <vPortSuppressTicksAndSleep+0xc>
10003516:	4604      	mov	r4, r0
        __asm volatile ( "cpsid i" ::: "memory" );
10003518:	b672      	cpsid	i
        __asm volatile ( "dsb" );
1000351a:	f3bf 8f4f 	dsb	sy
        __asm volatile ( "isb" );
1000351e:	f3bf 8f6f 	isb	sy
        if( eTaskConfirmSleepModeStatus() == eAbortSleep )
10003522:	f7ff fc71 	bl	10002e08 <eTaskConfirmSleepModeStatus>
10003526:	b908      	cbnz	r0, 1000352c <vPortSuppressTicksAndSleep+0x20>
            __asm volatile ( "cpsie i" ::: "memory" );
10003528:	b662      	cpsie	i
    }
1000352a:	bd10      	pop	{r4, pc}
            portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT_CONFIG | portNVIC_SYSTICK_INT_BIT );
1000352c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
10003530:	2206      	movs	r2, #6
10003532:	611a      	str	r2, [r3, #16]
            ulSysTickDecrementsLeft = portNVIC_SYSTICK_CURRENT_VALUE_REG;
10003534:	699b      	ldr	r3, [r3, #24]
            if( ulSysTickDecrementsLeft == 0 )
10003536:	b90b      	cbnz	r3, 1000353c <vPortSuppressTicksAndSleep+0x30>
                ulSysTickDecrementsLeft = ulTimerCountsForOneTick;
10003538:	4b37      	ldr	r3, [pc, #220]	; (10003618 <vPortSuppressTicksAndSleep+0x10c>)
1000353a:	681b      	ldr	r3, [r3, #0]
            ulReloadValue = ulSysTickDecrementsLeft + ( ulTimerCountsForOneTick * ( xExpectedIdleTime - 1UL ) );
1000353c:	1e60      	subs	r0, r4, #1
1000353e:	4a36      	ldr	r2, [pc, #216]	; (10003618 <vPortSuppressTicksAndSleep+0x10c>)
10003540:	6812      	ldr	r2, [r2, #0]
10003542:	fb02 3300 	mla	r3, r2, r0, r3
            if( ( portNVIC_INT_CTRL_REG & portNVIC_PEND_SYSTICK_SET_BIT ) != 0 )
10003546:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
1000354a:	f8d2 2d04 	ldr.w	r2, [r2, #3332]	; 0xd04
1000354e:	f012 6f80 	tst.w	r2, #67108864	; 0x4000000
10003552:	d008      	beq.n	10003566 <vPortSuppressTicksAndSleep+0x5a>
                portNVIC_INT_CTRL_REG = portNVIC_PEND_SYSTICK_CLEAR_BIT;
10003554:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
10003558:	f04f 7100 	mov.w	r1, #33554432	; 0x2000000
1000355c:	f8c2 1d04 	str.w	r1, [r2, #3332]	; 0xd04
                ulReloadValue -= ulTimerCountsForOneTick;
10003560:	4a2d      	ldr	r2, [pc, #180]	; (10003618 <vPortSuppressTicksAndSleep+0x10c>)
10003562:	6812      	ldr	r2, [r2, #0]
10003564:	1a9b      	subs	r3, r3, r2
            if( ulReloadValue > ulStoppedTimerCompensation )
10003566:	4a2d      	ldr	r2, [pc, #180]	; (1000361c <vPortSuppressTicksAndSleep+0x110>)
10003568:	6812      	ldr	r2, [r2, #0]
1000356a:	429a      	cmp	r2, r3
1000356c:	d200      	bcs.n	10003570 <vPortSuppressTicksAndSleep+0x64>
                ulReloadValue -= ulStoppedTimerCompensation;
1000356e:	1a9b      	subs	r3, r3, r2
            portNVIC_SYSTICK_LOAD_REG = ulReloadValue;
10003570:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
10003574:	6153      	str	r3, [r2, #20]
            portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
10003576:	2100      	movs	r1, #0
10003578:	6191      	str	r1, [r2, #24]
            portNVIC_SYSTICK_CTRL_REG |= portNVIC_SYSTICK_ENABLE_BIT;
1000357a:	6911      	ldr	r1, [r2, #16]
1000357c:	f041 0101 	orr.w	r1, r1, #1
10003580:	6111      	str	r1, [r2, #16]
            if( xModifiableIdleTime > 0 )
10003582:	b124      	cbz	r4, 1000358e <vPortSuppressTicksAndSleep+0x82>
                __asm volatile ( "dsb" ::: "memory" );
10003584:	f3bf 8f4f 	dsb	sy
                __asm volatile ( "wfi" );
10003588:	bf30      	wfi
                __asm volatile ( "isb" );
1000358a:	f3bf 8f6f 	isb	sy
            __asm volatile ( "cpsie i" ::: "memory" );
1000358e:	b662      	cpsie	i
            __asm volatile ( "dsb" );
10003590:	f3bf 8f4f 	dsb	sy
            __asm volatile ( "isb" );
10003594:	f3bf 8f6f 	isb	sy
            __asm volatile ( "cpsid i" ::: "memory" );
10003598:	b672      	cpsid	i
            __asm volatile ( "dsb" );
1000359a:	f3bf 8f4f 	dsb	sy
            __asm volatile ( "isb" );
1000359e:	f3bf 8f6f 	isb	sy
            portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT_CONFIG | portNVIC_SYSTICK_INT_BIT );
100035a2:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
100035a6:	2106      	movs	r1, #6
100035a8:	6111      	str	r1, [r2, #16]
            if( ( portNVIC_SYSTICK_CTRL_REG & portNVIC_SYSTICK_COUNT_FLAG_BIT ) != 0 )
100035aa:	6912      	ldr	r2, [r2, #16]
100035ac:	f412 3f80 	tst.w	r2, #65536	; 0x10000
100035b0:	d01f      	beq.n	100035f2 <vPortSuppressTicksAndSleep+0xe6>
                ulCalculatedLoadValue = ( ulTimerCountsForOneTick - 1UL ) - ( ulReloadValue - portNVIC_SYSTICK_CURRENT_VALUE_REG );
100035b2:	4a19      	ldr	r2, [pc, #100]	; (10003618 <vPortSuppressTicksAndSleep+0x10c>)
100035b4:	6811      	ldr	r1, [r2, #0]
100035b6:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
100035ba:	6992      	ldr	r2, [r2, #24]
100035bc:	1ad3      	subs	r3, r2, r3
100035be:	440b      	add	r3, r1
100035c0:	3b01      	subs	r3, #1
                if( ( ulCalculatedLoadValue <= ulStoppedTimerCompensation ) || ( ulCalculatedLoadValue > ulTimerCountsForOneTick ) )
100035c2:	4a16      	ldr	r2, [pc, #88]	; (1000361c <vPortSuppressTicksAndSleep+0x110>)
100035c4:	6812      	ldr	r2, [r2, #0]
100035c6:	429a      	cmp	r2, r3
100035c8:	d201      	bcs.n	100035ce <vPortSuppressTicksAndSleep+0xc2>
100035ca:	4299      	cmp	r1, r3
100035cc:	d200      	bcs.n	100035d0 <vPortSuppressTicksAndSleep+0xc4>
                    ulCalculatedLoadValue = ( ulTimerCountsForOneTick - 1UL );
100035ce:	1e4b      	subs	r3, r1, #1
                portNVIC_SYSTICK_LOAD_REG = ulCalculatedLoadValue;
100035d0:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
100035d4:	6153      	str	r3, [r2, #20]
            portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
100035d6:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
100035da:	2200      	movs	r2, #0
100035dc:	619a      	str	r2, [r3, #24]
            portNVIC_SYSTICK_CTRL_REG = portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT;
100035de:	2207      	movs	r2, #7
100035e0:	611a      	str	r2, [r3, #16]
                portNVIC_SYSTICK_LOAD_REG = ulTimerCountsForOneTick - 1UL;
100035e2:	4a0d      	ldr	r2, [pc, #52]	; (10003618 <vPortSuppressTicksAndSleep+0x10c>)
100035e4:	6812      	ldr	r2, [r2, #0]
100035e6:	3a01      	subs	r2, #1
100035e8:	615a      	str	r2, [r3, #20]
            vTaskStepTick( ulCompleteTickPeriods );
100035ea:	f7ff f94b 	bl	10002884 <vTaskStepTick>
            __asm volatile ( "cpsie i" ::: "memory" );
100035ee:	b662      	cpsie	i
    }
100035f0:	e79b      	b.n	1000352a <vPortSuppressTicksAndSleep+0x1e>
                ulSysTickDecrementsLeft = portNVIC_SYSTICK_CURRENT_VALUE_REG;
100035f2:	f04f 21e0 	mov.w	r1, #3758153728	; 0xe000e000
100035f6:	698b      	ldr	r3, [r1, #24]
                ulCompletedSysTickDecrements = ( xExpectedIdleTime * ulTimerCountsForOneTick ) - ulSysTickDecrementsLeft;
100035f8:	4a07      	ldr	r2, [pc, #28]	; (10003618 <vPortSuppressTicksAndSleep+0x10c>)
100035fa:	6812      	ldr	r2, [r2, #0]
100035fc:	fb02 f404 	mul.w	r4, r2, r4
10003600:	1ae0      	subs	r0, r4, r3
                ulCompleteTickPeriods = ulCompletedSysTickDecrements / ulTimerCountsForOneTick;
10003602:	fbb0 f0f2 	udiv	r0, r0, r2
                portNVIC_SYSTICK_LOAD_REG = ( ( ulCompleteTickPeriods + 1UL ) * ulTimerCountsForOneTick ) - ulCompletedSysTickDecrements;
10003606:	fb00 2202 	mla	r2, r0, r2, r2
1000360a:	1b1c      	subs	r4, r3, r4
1000360c:	4414      	add	r4, r2
1000360e:	614c      	str	r4, [r1, #20]
10003610:	e7e1      	b.n	100035d6 <vPortSuppressTicksAndSleep+0xca>
10003612:	bf00      	nop
10003614:	38008d10 	stmdacc	r0, {r4, r8, sl, fp, pc}
10003618:	38008d0c 	stmdacc	r0, {r2, r3, r8, sl, fp, pc}
1000361c:	38008d08 	stmdacc	r0, {r3, r8, sl, fp, pc}

10003620 <vPortSetupTimerInterrupt>:
        ulTimerCountsForOneTick = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ );
10003620:	4b0b      	ldr	r3, [pc, #44]	; (10003650 <vPortSetupTimerInterrupt+0x30>)
10003622:	f644 6220 	movw	r2, #20000	; 0x4e20
10003626:	601a      	str	r2, [r3, #0]
        xMaximumPossibleSuppressedTicks = portMAX_24_BIT_NUMBER / ulTimerCountsForOneTick;
10003628:	4b0a      	ldr	r3, [pc, #40]	; (10003654 <vPortSetupTimerInterrupt+0x34>)
1000362a:	f240 3246 	movw	r2, #838	; 0x346
1000362e:	601a      	str	r2, [r3, #0]
        ulStoppedTimerCompensation = portMISSED_COUNTS_FACTOR / ( configCPU_CLOCK_HZ / configSYSTICK_CLOCK_HZ );
10003630:	4b09      	ldr	r3, [pc, #36]	; (10003658 <vPortSetupTimerInterrupt+0x38>)
10003632:	225e      	movs	r2, #94	; 0x5e
10003634:	601a      	str	r2, [r3, #0]
    portNVIC_SYSTICK_CTRL_REG = portNVIC_SYSTICK_CLK_BIT_CONFIG;
10003636:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
1000363a:	2204      	movs	r2, #4
1000363c:	611a      	str	r2, [r3, #16]
    portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
1000363e:	2200      	movs	r2, #0
10003640:	619a      	str	r2, [r3, #24]
    portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
10003642:	f644 621f 	movw	r2, #19999	; 0x4e1f
10003646:	615a      	str	r2, [r3, #20]
    portNVIC_SYSTICK_CTRL_REG = portNVIC_SYSTICK_CLK_BIT_CONFIG | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT;
10003648:	2207      	movs	r2, #7
1000364a:	611a      	str	r2, [r3, #16]
}
1000364c:	4770      	bx	lr
1000364e:	bf00      	nop
10003650:	38008d0c 	stmdacc	r0, {r2, r3, r8, sl, fp, pc}
10003654:	38008d10 	stmdacc	r0, {r4, r8, sl, fp, pc}
10003658:	38008d08 	stmdacc	r0, {r3, r8, sl, fp, pc}

1000365c <vPortYield>:
/*-----------------------------------------------------------*/

void vPortYield( void ) /* PRIVILEGED_FUNCTION */
{
    /* Set a PendSV to request a context switch. */
    portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
1000365c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
10003660:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
10003664:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04

    /* Barriers are normally not required but do ensure the code is
     * completely within the specified behaviour for the architecture. */
    __asm volatile ( "dsb" ::: "memory" );
10003668:	f3bf 8f4f 	dsb	sy
    __asm volatile ( "isb" );
1000366c:	f3bf 8f6f 	isb	sy
}
10003670:	4770      	bx	lr
	...

10003674 <vPortEnterCritical>:
/*-----------------------------------------------------------*/

void vPortEnterCritical( void ) /* PRIVILEGED_FUNCTION */
{
10003674:	b508      	push	{r3, lr}
    portDISABLE_INTERRUPTS();
10003676:	f000 f8c3 	bl	10003800 <ulSetInterruptMask>
    ulCriticalNesting++;
1000367a:	4a04      	ldr	r2, [pc, #16]	; (1000368c <vPortEnterCritical+0x18>)
1000367c:	6813      	ldr	r3, [r2, #0]
1000367e:	3301      	adds	r3, #1
10003680:	6013      	str	r3, [r2, #0]

    /* Barriers are normally not required but do ensure the code is
     * completely within the specified behaviour for the architecture. */
    __asm volatile ( "dsb" ::: "memory" );
10003682:	f3bf 8f4f 	dsb	sy
    __asm volatile ( "isb" );
10003686:	f3bf 8f6f 	isb	sy
}
1000368a:	bd08      	pop	{r3, pc}
1000368c:	38000010 	stmdacc	r0, {r4}

10003690 <vPortExitCritical>:
/*-----------------------------------------------------------*/

void vPortExitCritical( void ) /* PRIVILEGED_FUNCTION */
{
10003690:	b508      	push	{r3, lr}
    configASSERT( ulCriticalNesting );
    ulCriticalNesting--;
10003692:	4b05      	ldr	r3, [pc, #20]	; (100036a8 <vPortExitCritical+0x18>)
10003694:	681a      	ldr	r2, [r3, #0]
10003696:	3a01      	subs	r2, #1
10003698:	601a      	str	r2, [r3, #0]

    if( ulCriticalNesting == 0 )
1000369a:	681b      	ldr	r3, [r3, #0]
1000369c:	b103      	cbz	r3, 100036a0 <vPortExitCritical+0x10>
    {
        portENABLE_INTERRUPTS();
    }
}
1000369e:	bd08      	pop	{r3, pc}
        portENABLE_INTERRUPTS();
100036a0:	2000      	movs	r0, #0
100036a2:	f000 f8b8 	bl	10003816 <vClearInterruptMask>
}
100036a6:	e7fa      	b.n	1000369e <vPortExitCritical+0xe>
100036a8:	38000010 	stmdacc	r0, {r4}

100036ac <SysTick_Handler>:
/*-----------------------------------------------------------*/

void SysTick_Handler( void ) /* PRIVILEGED_FUNCTION */
{
100036ac:	b510      	push	{r4, lr}
    uint32_t ulPreviousMask;

    ulPreviousMask = portSET_INTERRUPT_MASK_FROM_ISR();
100036ae:	f000 f8a7 	bl	10003800 <ulSetInterruptMask>
100036b2:	4604      	mov	r4, r0
    traceISR_ENTER();
    {
        /* Increment the RTOS tick. */
        if( xTaskIncrementTick() != pdFALSE )
100036b4:	f7ff f904 	bl	100028c0 <xTaskIncrementTick>
100036b8:	b128      	cbz	r0, 100036c6 <SysTick_Handler+0x1a>
        {
            traceISR_EXIT_TO_SCHEDULER();
            /* Pend a context switch. */
            portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
100036ba:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
100036be:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
100036c2:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
        else
        {
            traceISR_EXIT();
        }
    }
    portCLEAR_INTERRUPT_MASK_FROM_ISR( ulPreviousMask );
100036c6:	4620      	mov	r0, r4
100036c8:	f000 f8a5 	bl	10003816 <vClearInterruptMask>
}
100036cc:	bd10      	pop	{r4, pc}

100036ce <vPortSVCHandler_C>:
/*-----------------------------------------------------------*/

void vPortSVCHandler_C( uint32_t * pulCallerStackAddress ) /* PRIVILEGED_FUNCTION portDONT_DISCARD */
{
100036ce:	b508      	push	{r3, lr}
    #endif /* configENABLE_TRUSTZONE */
    uint8_t ucSVCNumber;

    /* Register are stored on the stack in the following order - R0, R1, R2, R3,
     * R12, LR, PC, xPSR. */
    ulPC = pulCallerStackAddress[ portOFFSET_TO_PC ];
100036d0:	6983      	ldr	r3, [r0, #24]
    ucSVCNumber = ( ( uint8_t * ) ulPC )[ -2 ];
100036d2:	f813 3c02 	ldrb.w	r3, [r3, #-2]

    switch( ucSVCNumber )
100036d6:	2b66      	cmp	r3, #102	; 0x66
100036d8:	d000      	beq.n	100036dc <vPortSVCHandler_C+0xe>

        default:
            /* Incorrect SVC call. */
            configASSERT( pdFALSE );
    }
}
100036da:	bd08      	pop	{r3, pc}
            vRestoreContextOfFirstTask();
100036dc:	f000 f86a 	bl	100037b4 <vRestoreContextOfFirstTask>
}
100036e0:	e7fb      	b.n	100036da <vPortSVCHandler_C+0xc>
	...

100036e4 <pxPortInitialiseStack>:

    StackType_t * pxPortInitialiseStack( StackType_t * pxTopOfStack,
                                         StackType_t * pxEndOfStack,
                                         TaskFunction_t pxCode,
                                         void * pvParameters ) /* PRIVILEGED_FUNCTION */
    {
100036e4:	b410      	push	{r4}
            #endif /* configENABLE_TRUSTZONE */
        }
        #else /* portPRELOAD_REGISTERS */
        {
            pxTopOfStack--;                                          /* Offset added to account for the way the MCU uses the stack on entry/exit of interrupts. */
            *pxTopOfStack = portINITIAL_XPSR;                        /* xPSR. */
100036e6:	f04f 7480 	mov.w	r4, #16777216	; 0x1000000
100036ea:	f840 4c04 	str.w	r4, [r0, #-4]
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) pxCode;                  /* PC. */
100036ee:	f840 2c08 	str.w	r2, [r0, #-8]
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS; /* LR. */
100036f2:	4a1f      	ldr	r2, [pc, #124]	; (10003770 <pxPortInitialiseStack+0x8c>)
100036f4:	f840 2c0c 	str.w	r2, [r0, #-12]
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x12121212UL;            /* R12. */
100036f8:	f04f 3212 	mov.w	r2, #303174162	; 0x12121212
100036fc:	f840 2c10 	str.w	r2, [r0, #-16]
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x03030303UL;            /* R3. */
10003700:	f04f 3203 	mov.w	r2, #50529027	; 0x3030303
10003704:	f840 2c14 	str.w	r2, [r0, #-20]
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x02020202UL;            /* R2. */
10003708:	f04f 3202 	mov.w	r2, #33686018	; 0x2020202
1000370c:	f840 2c18 	str.w	r2, [r0, #-24]
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x01010101UL;            /* R1. */
10003710:	f04f 3201 	mov.w	r2, #16843009	; 0x1010101
10003714:	f840 2c1c 	str.w	r2, [r0, #-28]
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) pvParameters;            /* R0. */
10003718:	f840 3c20 	str.w	r3, [r0, #-32]
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x11111111UL;            /* R11. */
1000371c:	f04f 3311 	mov.w	r3, #286331153	; 0x11111111
10003720:	f840 3c24 	str.w	r3, [r0, #-36]
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x10101010UL;            /* R10. */
10003724:	f04f 3310 	mov.w	r3, #269488144	; 0x10101010
10003728:	f840 3c28 	str.w	r3, [r0, #-40]
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x09090909UL;            /* R09. */
1000372c:	f04f 3309 	mov.w	r3, #151587081	; 0x9090909
10003730:	f840 3c2c 	str.w	r3, [r0, #-44]
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x08080808UL;            /* R08. */
10003734:	f04f 3308 	mov.w	r3, #134744072	; 0x8080808
10003738:	f840 3c30 	str.w	r3, [r0, #-48]
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x07070707UL;            /* R07. */
1000373c:	f04f 3307 	mov.w	r3, #117901063	; 0x7070707
10003740:	f840 3c34 	str.w	r3, [r0, #-52]
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x06060606UL;            /* R06. */
10003744:	f04f 3306 	mov.w	r3, #101058054	; 0x6060606
10003748:	f840 3c38 	str.w	r3, [r0, #-56]
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x05050505UL;            /* R05. */
1000374c:	f04f 3305 	mov.w	r3, #84215045	; 0x5050505
10003750:	f840 3c3c 	str.w	r3, [r0, #-60]
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x04040404UL;            /* R04. */
10003754:	f04f 3304 	mov.w	r3, #67372036	; 0x4040404
10003758:	f840 3c40 	str.w	r3, [r0, #-64]
            pxTopOfStack--;
            *pxTopOfStack = portINITIAL_EXC_RETURN;                  /* EXC_RETURN. */
1000375c:	f06f 0302 	mvn.w	r3, #2
10003760:	f840 3c44 	str.w	r3, [r0, #-68]
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) pxEndOfStack;            /* Slot used to hold this task's PSPLIM value. */
10003764:	f840 1c48 	str.w	r1, [r0, #-72]
            #endif /* configENABLE_TRUSTZONE */
        }
        #endif /* portPRELOAD_REGISTERS */

        return pxTopOfStack;
    }
10003768:	3848      	subs	r0, #72	; 0x48
1000376a:	f85d 4b04 	ldr.w	r4, [sp], #4
1000376e:	4770      	bx	lr
10003770:	100034f5 	strdne	r3, [r0], -r5

10003774 <xPortStartScheduler>:

#endif /* configENABLE_MPU */
/*-----------------------------------------------------------*/

BaseType_t xPortStartScheduler( void ) /* PRIVILEGED_FUNCTION */
{
10003774:	b510      	push	{r4, lr}
    }
    #endif /* #if ( ( configASSERT_DEFINED == 1 ) && ( portHAS_ARMV8M_MAIN_EXTENSION == 1 ) ) */

    /* Make PendSV and SysTick the lowest priority interrupts, and make SVCall
     * the highest priority. */
    portNVIC_SHPR3_REG |= portNVIC_PENDSV_PRI;
10003776:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
1000377a:	f8d3 2d20 	ldr.w	r2, [r3, #3360]	; 0xd20
1000377e:	f442 027f 	orr.w	r2, r2, #16711680	; 0xff0000
10003782:	f8c3 2d20 	str.w	r2, [r3, #3360]	; 0xd20
    portNVIC_SHPR3_REG |= portNVIC_SYSTICK_PRI;
10003786:	f8d3 2d20 	ldr.w	r2, [r3, #3360]	; 0xd20
1000378a:	f042 427f 	orr.w	r2, r2, #4278190080	; 0xff000000
1000378e:	f8c3 2d20 	str.w	r2, [r3, #3360]	; 0xd20
    portNVIC_SHPR2_REG = 0;
10003792:	2400      	movs	r4, #0
10003794:	f8c3 4d1c 	str.w	r4, [r3, #3356]	; 0xd1c
    }
    #endif /* configENABLE_MPU */

    /* Start the timer that generates the tick ISR. Interrupts are disabled
     * here already. */
    vPortSetupTimerInterrupt();
10003798:	f7ff ff42 	bl	10003620 <vPortSetupTimerInterrupt>

    /* Initialize the critical nesting count ready for the first task. */
    ulCriticalNesting = 0;
1000379c:	4b04      	ldr	r3, [pc, #16]	; (100037b0 <xPortStartScheduler+0x3c>)
1000379e:	601c      	str	r4, [r3, #0]
        xSchedulerRunning = pdTRUE;
    }
    #endif /* ( ( configENABLE_MPU == 1 ) && ( configUSE_MPU_WRAPPERS_V1 == 0 ) ) */

    /* Start the first task. */
    vStartFirstTask();
100037a0:	f000 f81e 	bl	100037e0 <vStartFirstTask>
     * exit error function to prevent compiler warnings about a static function
     * not being called in the case that the application writer overrides this
     * functionality by defining configTASK_RETURN_ADDRESS. Call
     * vTaskSwitchContext() so link time optimization does not remove the
     * symbol. */
    vTaskSwitchContext();
100037a4:	f7ff fa00 	bl	10002ba8 <vTaskSwitchContext>
    prvTaskExitError();
100037a8:	f7ff fea4 	bl	100034f4 <prvTaskExitError>

    /* Should not get here. */
    return 0;
}
100037ac:	4620      	mov	r0, r4
100037ae:	bd10      	pop	{r4, pc}
100037b0:	38000010 	stmdacc	r0, {r4}

100037b4 <vRestoreContextOfFirstTask>:

#else /* configENABLE_MPU */

    void vRestoreContextOfFirstTask( void ) /* __attribute__ (( naked )) PRIVILEGED_FUNCTION */
    {
        __asm volatile
100037b4:	4a09      	ldr	r2, [pc, #36]	; (100037dc <vRestoreContextOfFirstTask+0x28>)
100037b6:	6811      	ldr	r1, [r2, #0]
100037b8:	6808      	ldr	r0, [r1, #0]
100037ba:	c806      	ldmia	r0!, {r1, r2}
100037bc:	f381 880b 	msr	PSPLIM, r1
100037c0:	2102      	movs	r1, #2
100037c2:	f381 8814 	msr	CONTROL, r1
100037c6:	3020      	adds	r0, #32
100037c8:	f380 8809 	msr	PSP, r0
100037cc:	f3bf 8f6f 	isb	sy
100037d0:	f04f 0000 	mov.w	r0, #0
100037d4:	f380 8811 	msr	BASEPRI, r0
100037d8:	4710      	bx	r2
            "   isb                                             \n"
            "   mov  r0, #0                                     \n"
            "   msr  basepri, r0                                \n" /* Ensure that interrupts are enabled when the first task starts. */
            "   bx   r2                                         \n" /* Finally, branch to EXC_RETURN. */
        );
    }
100037da:	85b80000 	ldrhi	r0, [r8, #0]!
100037de:	 	stmdami	r6, {fp, ip, sp}

100037e0 <vStartFirstTask>:
}
/*-----------------------------------------------------------*/

void vStartFirstTask( void ) /* __attribute__ (( naked )) PRIVILEGED_FUNCTION */
{
    __asm volatile
100037e0:	4806      	ldr	r0, [pc, #24]	; (100037fc <vStartFirstTask+0x1c>)
100037e2:	6800      	ldr	r0, [r0, #0]
100037e4:	6800      	ldr	r0, [r0, #0]
100037e6:	f380 8808 	msr	MSP, r0
100037ea:	b662      	cpsie	i
100037ec:	b661      	cpsie	f
100037ee:	f3bf 8f4f 	dsb	sy
100037f2:	f3bf 8f6f 	isb	sy
100037f6:	df66      	svc	102	; 0x66
100037f8:	bf00      	nop
        "   isb                                             \n"
        "   svc %0                                          \n" /* System call to start the first task. */
        "   nop                                             \n"
        ::"i" ( portSVC_START_SCHEDULER ) : "memory"
    );
}
100037fa:	ed080000 	stc	0, cr0, [r8, #-0]
100037fe:	 	vaddl.u32	q15, d15, d0

10003800 <ulSetInterruptMask>:
/*-----------------------------------------------------------*/

uint32_t ulSetInterruptMask( void ) /* __attribute__(( naked )) PRIVILEGED_FUNCTION */
{
    __asm volatile
10003800:	f3ef 8011 	mrs	r0, BASEPRI
10003804:	f04f 01bf 	mov.w	r1, #191	; 0xbf
10003808:	f381 8811 	msr	BASEPRI, r1
1000380c:	f3bf 8f4f 	dsb	sy
10003810:	f3bf 8f6f 	isb	sy
10003814:	4770      	bx	lr

10003816 <vClearInterruptMask>:
}
/*-----------------------------------------------------------*/

void vClearInterruptMask( __attribute__( ( unused ) ) uint32_t ulMask ) /* __attribute__(( naked )) PRIVILEGED_FUNCTION */
{
    __asm volatile
10003816:	f380 8811 	msr	BASEPRI, r0
1000381a:	f3bf 8f4f 	dsb	sy
1000381e:	f3bf 8f6f 	isb	sy
10003822:	4770      	bx	lr

10003824 <PendSV_Handler>:

#else /* configENABLE_MPU */

    void PendSV_Handler( void ) /* __attribute__ (( naked )) PRIVILEGED_FUNCTION */
    {
        __asm volatile
10003824:	f3ef 8009 	mrs	r0, PSP
10003828:	f3ef 820b 	mrs	r2, PSPLIM
1000382c:	4673      	mov	r3, lr
1000382e:	e920 0ffc 	stmdb	r0!, {r2, r3, r4, r5, r6, r7, r8, r9, sl, fp}
10003832:	4a0d      	ldr	r2, [pc, #52]	; (10003868 <PendSV_Handler+0x44>)
10003834:	6811      	ldr	r1, [r2, #0]
10003836:	6008      	str	r0, [r1, #0]
10003838:	f04f 00bf 	mov.w	r0, #191	; 0xbf
1000383c:	f380 8811 	msr	BASEPRI, r0
10003840:	f3bf 8f4f 	dsb	sy
10003844:	f3bf 8f6f 	isb	sy
10003848:	f7ff f9ae 	bl	10002ba8 <vTaskSwitchContext>
1000384c:	f04f 0000 	mov.w	r0, #0
10003850:	f380 8811 	msr	BASEPRI, r0
10003854:	4a04      	ldr	r2, [pc, #16]	; (10003868 <PendSV_Handler+0x44>)
10003856:	6811      	ldr	r1, [r2, #0]
10003858:	6808      	ldr	r0, [r1, #0]
1000385a:	e8b0 0ffc 	ldmia.w	r0!, {r2, r3, r4, r5, r6, r7, r8, r9, sl, fp}
1000385e:	f382 880b 	msr	PSPLIM, r2
10003862:	f380 8809 	msr	PSP, r0
10003866:	4718      	bx	r3
            "   msr psplim, r2                                  \n" /* Restore the PSPLIM register value for the task. */
            "   msr psp, r0                                     \n" /* Remember the new top of stack for the task. */
            "   bx r3                                           \n"
            ::"i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY )
        );
    }
10003868:	380085b8 	stmdacc	r0, {r3, r4, r5, r7, r8, sl, pc}

1000386c <SVC_Handler>:

#else /* ( configENABLE_MPU == 1 ) && ( configUSE_MPU_WRAPPERS_V1 == 0 ) */

    void SVC_Handler( void ) /* __attribute__ (( naked )) PRIVILEGED_FUNCTION */
    {
        __asm volatile
1000386c:	f01e 0f04 	tst.w	lr, #4
10003870:	bf0c      	ite	eq
10003872:	f3ef 8008 	mrseq	r0, MSP
10003876:	f3ef 8009 	mrsne	r0, PSP
1000387a:	4901      	ldr	r1, [pc, #4]	; (10003880 <SVC_Handler+0x14>)
1000387c:	4708      	bx	r1
            "   mrseq r0, msp                                   \n"
            "   mrsne r0, psp                                   \n"
            "   ldr r1, =vPortSVCHandler_C                      \n"
            "   bx r1                                           \n"
        );
    }
1000387e:	36cf0000 	strbcc	r0, [pc], r0
10003882:	 	andcs	r1, r1, r0

10003884 <_getpid>:
10003884:	2001      	movs	r0, #1
10003886:	4770      	bx	lr

10003888 <_kill>:
10003888:	b508      	push	{r3, lr}
1000388a:	f000 f867 	bl	1000395c <__errno>
1000388e:	2316      	movs	r3, #22
10003890:	6003      	str	r3, [r0, #0]
10003892:	f04f 30ff 	mov.w	r0, #4294967295
10003896:	bd08      	pop	{r3, pc}

10003898 <_exit>:
10003898:	b508      	push	{r3, lr}
1000389a:	f04f 31ff 	mov.w	r1, #4294967295
1000389e:	f7ff fff3 	bl	10003888 <_kill>
100038a2:	e7fe      	b.n	100038a2 <_exit+0xa>

100038a4 <Reset_Handler>:
                .thumb_func
                .type    Reset_Handler, %function
                .globl   Reset_Handler
                .fnstart
Reset_Handler:
                ldr      r0, =__INITIAL_SP
100038a4:	4815      	ldr	r0, [pc, #84]	; (100038fc <BusFault_Handler+0x4>)
                msr      psp, r0
100038a6:	f380 8809 	msr	PSP, r0

                ldr      r0, =__STACK_LIMIT
100038aa:	4815      	ldr	r0, [pc, #84]	; (10003900 <BusFault_Handler+0x8>)
                msr      msplim, r0
100038ac:	f380 880a 	msr	MSPLIM, r0
                msr      psplim, r0
100038b0:	f380 880b 	msr	PSPLIM, r0
                ldr      r0, =__STACK_SEAL
                ldr      r1, =0xFEF5EDA5U
                strd     r1,r1,[r0,#0]
                #endif

                bl       SystemInit
100038b4:	f7fd f86c 	bl	10000990 <SystemInit>

                ldr      r4, =__copy_table_start__
100038b8:	4c12      	ldr	r4, [pc, #72]	; (10003904 <BusFault_Handler+0xc>)
                ldr      r5, =__copy_table_end__
100038ba:	4d13      	ldr	r5, [pc, #76]	; (10003908 <BusFault_Handler+0x10>)

.L_loop0:
                cmp      r4, r5
100038bc:	42ac      	cmp	r4, r5
                bge      .L_loop0_done
100038be:	da0a      	bge.n	100038d6 <Reset_Handler+0x32>
                ldr      r1, [r4]                /* source address */
100038c0:	6821      	ldr	r1, [r4, #0]
                ldr      r2, [r4, #4]            /* destination address */
100038c2:	6862      	ldr	r2, [r4, #4]
                ldr      r3, [r4, #8]            /* word count */
100038c4:	68a3      	ldr	r3, [r4, #8]
                lsls     r3, r3, #2              /* byte count */
100038c6:	009b      	lsls	r3, r3, #2

.L_loop0_0:
                subs     r3, #4                  /* decrement byte count */
100038c8:	3b04      	subs	r3, #4
                ittt     ge
100038ca:	bfa2      	ittt	ge
                ldrge    r0, [r1, r3]
100038cc:	58c8      	ldrge	r0, [r1, r3]
                strge    r0, [r2, r3]
100038ce:	50d0      	strge	r0, [r2, r3]
                bge      .L_loop0_0
100038d0:	e7fa      	bge.n	100038c8 <Reset_Handler+0x24>

                adds     r4, #12
100038d2:	340c      	adds	r4, #12
                b        .L_loop0
100038d4:	e7f2      	b.n	100038bc <Reset_Handler+0x18>
.L_loop0_done:

                ldr      r3, =__zero_table_start__
100038d6:	4b0d      	ldr	r3, [pc, #52]	; (1000390c <BusFault_Handler+0x14>)
                ldr      r4, =__zero_table_end__
100038d8:	4c0d      	ldr	r4, [pc, #52]	; (10003910 <BusFault_Handler+0x18>)

.L_loop2:
                cmp      r3, r4
100038da:	42a3      	cmp	r3, r4
                bge      .L_loop2_done
100038dc:	da09      	bge.n	100038f2 <Reset_Handler+0x4e>
                ldr      r1, [r3]                /* destination address */
100038de:	6819      	ldr	r1, [r3, #0]
                ldr      r2, [r3, #4]            /* word count */
100038e0:	685a      	ldr	r2, [r3, #4]
                lsls     r2, r2, #2              /* byte count */
100038e2:	0092      	lsls	r2, r2, #2
                movs     r0, 0
100038e4:	2000      	movs	r0, #0

.L_loop2_0:
                subs     r2, #4                  /* decrement byte count */
100038e6:	3a04      	subs	r2, #4
                itt      ge
100038e8:	bfa4      	itt	ge
                strge    r0, [r1, r2]
100038ea:	5088      	strge	r0, [r1, r2]
                bge      .L_loop2_0
100038ec:	e7fb      	bge.n	100038e6 <Reset_Handler+0x42>

                adds     r3, #8
100038ee:	3308      	adds	r3, #8
                b        .L_loop2
100038f0:	e7f3      	b.n	100038da <Reset_Handler+0x36>
.L_loop2_done:

                bl       main
100038f2:	f7fd f837 	bl	10000964 <main>
                .thumb_func
                .type    HardFault_Handler, %function
                .weak    HardFault_Handler
                .fnstart
HardFault_Handler:
                b        .
100038f6:	e7fe      	b.n	100038f6 <Reset_Handler+0x52>

100038f8 <BusFault_Handler>:
                .thumb_func
                .type    Default_Handler, %function
                .weak    Default_Handler
                .fnstart
Default_Handler:
                b        .
100038f8:	e7fe      	b.n	100038f8 <BusFault_Handler>
100038fa:	00000000 	andeq	r0, r0, r0
                ldr      r0, =__INITIAL_SP
100038fe:	f0003810 			; <UNDEFINED> instruction: 0xf0003810
                ldr      r0, =__STACK_LIMIT
10003902:	5ebc380f 	cdppl	8, 11, cr3, cr12, cr15, {0}
                ldr      r4, =__copy_table_start__
10003906:	5ec81000 	cdppl	0, 12, cr1, cr8, cr0, {0}
                ldr      r5, =__copy_table_end__
1000390a:	5ec81000 	cdppl	0, 12, cr1, cr8, cr0, {0}
                ldr      r3, =__zero_table_start__
1000390e:	5ec81000 	cdppl	0, 12, cr1, cr8, cr0, {0}
                ldr      r4, =__zero_table_end__
10003912:	 	ldrbtlt	r1, [r2], -r0

10003914 <HardFault_Handler>:
.global fault_dump_handler

.global HardFault_Handler
.type HardFault_Handler, % function
HardFault_Handler:
    cpsid   i                           /* disable interrupts */
10003914:	b672      	cpsid	i
    ldr     r3, =fd_main_stack_base     /* r3 = &fd_main_stack_base */
10003916:	4b0e      	ldr	r3, [pc, #56]	; (10003950 <stack_checked+0xc>)
    ldr     r1, [r3]                    /* r1 = fd_main_stack_base  */
10003918:	6819      	ldr	r1, [r3, #0]
    ldr     r3, =fd_main_stack_full     /* r3 = &fd_main_stack_full */
1000391a:	4b0e      	ldr	r3, [pc, #56]	; (10003954 <stack_checked+0x10>)
    ldr     r2, [r3]                    /* r2 = fd_main_stack_full  */
1000391c:	681a      	ldr	r2, [r3, #0]

    tst     lr, #4                      /* use exc_return value get sp value */
1000391e:	f01e 0f04 	tst.w	lr, #4
    bne     stack_use_psp               /* if (sp != msp), jump to stack_use_psp */
10003922:	d10a      	bne.n	1000393a <stack_use_psp>

    mrs     r0, msp                     /* else (sp == msp), r0 = sp = msp */
10003924:	f3ef 8008 	mrs	r0, MSP
    cmp     r0, r1                      /* compare msp and stack base addr */
10003928:	4288      	cmp	r0, r1
    blt     stack_invalid               /* msp < stack_base_addr, msp is invalid */
1000392a:	db0a      	blt.n	10003942 <stack_invalid>
    cmp     r0, r2                      /* compare msp and stack full addr */
1000392c:	4290      	cmp	r0, r2
    bgt     stack_invalid               /* msp > stack_base_addr, msp is invalid */
1000392e:	dc08      	bgt.n	10003942 <stack_invalid>

    push    {r4 - r11}                  /* stack value is normal, push {r4 - r11} to stack */
10003930:	e92d 0ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
    mrs     r0, msp                     /* refresh r0 = sp = msp */
10003934:	f3ef 8008 	mrs	r0, MSP
    b       stack_checked
10003938:	e004      	b.n	10003944 <stack_checked>

1000393a <stack_use_psp>:
stack_use_psp:
    mrs     r0, psp                     /* lr & 0x04 == 0, r0 = sp = psp */
1000393a:	f3ef 8009 	mrs	r0, PSP
    stmdb   r0!, {r4 - r11}             /* sp using psp, use stmdb push {r4 - r11} to stack */
1000393e:	e920 0ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp}

10003942 <stack_invalid>:
    
stack_invalid:
    nop                                 /* stack value is invalid, not to process temporary */
10003942:	bf00      	nop

10003944 <stack_checked>:
stack_checked:
    mov     r1, lr                      /* now, r0 = sp, r1 = lr */
10003944:	4671      	mov	r1, lr
    ldr     r2, =fault_dump_handler     /* now, r2 = fault_dump_handler */
10003946:	4a04      	ldr	r2, [pc, #16]	; (10003958 <stack_checked+0x14>)
    dsb                                 /* wait for memory access to complete */
10003948:	f3bf 8f4f 	dsb	sy
    cpsie   i                           /* enable interrupts */
1000394c:	b662      	cpsie	i
    bx      r2                          /* jump to fault_dump_handler */
1000394e:	4710      	bx	r2
    ldr     r3, =fd_main_stack_base     /* r3 = &fd_main_stack_base */
10003950:	38008570 	stmdacc	r0, {r4, r5, r6, r8, sl, pc}
    ldr     r3, =fd_main_stack_full     /* r3 = &fd_main_stack_full */
10003954:	38008574 	stmdacc	r0, {r2, r4, r5, r6, r8, sl, pc}
    ldr     r2, =fault_dump_handler     /* now, r2 = fault_dump_handler */
10003958:	10001ce1 	andne	r1, r0, r1, ror #25

1000395c <__errno>:
1000395c:	4b01      	ldr	r3, [pc, #4]	; (10003964 <__errno+0x8>)
1000395e:	6818      	ldr	r0, [r3, #0]
10003960:	4770      	bx	lr
10003962:	bf00      	nop
10003964:	38000014 	stmdacc	r0, {r2, r4}

10003968 <memcpy>:
10003968:	4684      	mov	ip, r0
1000396a:	ea41 0300 	orr.w	r3, r1, r0
1000396e:	f013 0303 	ands.w	r3, r3, #3
10003972:	d149      	bne.n	10003a08 <memcpy+0xa0>
10003974:	3a40      	subs	r2, #64	; 0x40
10003976:	d323      	bcc.n	100039c0 <memcpy+0x58>
10003978:	680b      	ldr	r3, [r1, #0]
1000397a:	6003      	str	r3, [r0, #0]
1000397c:	684b      	ldr	r3, [r1, #4]
1000397e:	6043      	str	r3, [r0, #4]
10003980:	688b      	ldr	r3, [r1, #8]
10003982:	6083      	str	r3, [r0, #8]
10003984:	68cb      	ldr	r3, [r1, #12]
10003986:	60c3      	str	r3, [r0, #12]
10003988:	690b      	ldr	r3, [r1, #16]
1000398a:	6103      	str	r3, [r0, #16]
1000398c:	694b      	ldr	r3, [r1, #20]
1000398e:	6143      	str	r3, [r0, #20]
10003990:	698b      	ldr	r3, [r1, #24]
10003992:	6183      	str	r3, [r0, #24]
10003994:	69cb      	ldr	r3, [r1, #28]
10003996:	61c3      	str	r3, [r0, #28]
10003998:	6a0b      	ldr	r3, [r1, #32]
1000399a:	6203      	str	r3, [r0, #32]
1000399c:	6a4b      	ldr	r3, [r1, #36]	; 0x24
1000399e:	6243      	str	r3, [r0, #36]	; 0x24
100039a0:	6a8b      	ldr	r3, [r1, #40]	; 0x28
100039a2:	6283      	str	r3, [r0, #40]	; 0x28
100039a4:	6acb      	ldr	r3, [r1, #44]	; 0x2c
100039a6:	62c3      	str	r3, [r0, #44]	; 0x2c
100039a8:	6b0b      	ldr	r3, [r1, #48]	; 0x30
100039aa:	6303      	str	r3, [r0, #48]	; 0x30
100039ac:	6b4b      	ldr	r3, [r1, #52]	; 0x34
100039ae:	6343      	str	r3, [r0, #52]	; 0x34
100039b0:	6b8b      	ldr	r3, [r1, #56]	; 0x38
100039b2:	6383      	str	r3, [r0, #56]	; 0x38
100039b4:	6bcb      	ldr	r3, [r1, #60]	; 0x3c
100039b6:	63c3      	str	r3, [r0, #60]	; 0x3c
100039b8:	3040      	adds	r0, #64	; 0x40
100039ba:	3140      	adds	r1, #64	; 0x40
100039bc:	3a40      	subs	r2, #64	; 0x40
100039be:	d2db      	bcs.n	10003978 <memcpy+0x10>
100039c0:	3230      	adds	r2, #48	; 0x30
100039c2:	d30b      	bcc.n	100039dc <memcpy+0x74>
100039c4:	680b      	ldr	r3, [r1, #0]
100039c6:	6003      	str	r3, [r0, #0]
100039c8:	684b      	ldr	r3, [r1, #4]
100039ca:	6043      	str	r3, [r0, #4]
100039cc:	688b      	ldr	r3, [r1, #8]
100039ce:	6083      	str	r3, [r0, #8]
100039d0:	68cb      	ldr	r3, [r1, #12]
100039d2:	60c3      	str	r3, [r0, #12]
100039d4:	3010      	adds	r0, #16
100039d6:	3110      	adds	r1, #16
100039d8:	3a10      	subs	r2, #16
100039da:	d2f3      	bcs.n	100039c4 <memcpy+0x5c>
100039dc:	320c      	adds	r2, #12
100039de:	d305      	bcc.n	100039ec <memcpy+0x84>
100039e0:	f851 3b04 	ldr.w	r3, [r1], #4
100039e4:	f840 3b04 	str.w	r3, [r0], #4
100039e8:	3a04      	subs	r2, #4
100039ea:	d2f9      	bcs.n	100039e0 <memcpy+0x78>
100039ec:	3204      	adds	r2, #4
100039ee:	d008      	beq.n	10003a02 <memcpy+0x9a>
100039f0:	07d2      	lsls	r2, r2, #31
100039f2:	bf1c      	itt	ne
100039f4:	f811 3b01 	ldrbne.w	r3, [r1], #1
100039f8:	f800 3b01 	strbne.w	r3, [r0], #1
100039fc:	d301      	bcc.n	10003a02 <memcpy+0x9a>
100039fe:	880b      	ldrh	r3, [r1, #0]
10003a00:	8003      	strh	r3, [r0, #0]
10003a02:	4660      	mov	r0, ip
10003a04:	4770      	bx	lr
10003a06:	bf00      	nop
10003a08:	2a08      	cmp	r2, #8
10003a0a:	d313      	bcc.n	10003a34 <memcpy+0xcc>
10003a0c:	078b      	lsls	r3, r1, #30
10003a0e:	d0b1      	beq.n	10003974 <memcpy+0xc>
10003a10:	f010 0303 	ands.w	r3, r0, #3
10003a14:	d0ae      	beq.n	10003974 <memcpy+0xc>
10003a16:	f1c3 0304 	rsb	r3, r3, #4
10003a1a:	1ad2      	subs	r2, r2, r3
10003a1c:	07db      	lsls	r3, r3, #31
10003a1e:	bf1c      	itt	ne
10003a20:	f811 3b01 	ldrbne.w	r3, [r1], #1
10003a24:	f800 3b01 	strbne.w	r3, [r0], #1
10003a28:	d3a4      	bcc.n	10003974 <memcpy+0xc>
10003a2a:	f831 3b02 	ldrh.w	r3, [r1], #2
10003a2e:	f820 3b02 	strh.w	r3, [r0], #2
10003a32:	e79f      	b.n	10003974 <memcpy+0xc>
10003a34:	3a04      	subs	r2, #4
10003a36:	d3d9      	bcc.n	100039ec <memcpy+0x84>
10003a38:	3a01      	subs	r2, #1
10003a3a:	f811 3b01 	ldrb.w	r3, [r1], #1
10003a3e:	f800 3b01 	strb.w	r3, [r0], #1
10003a42:	d2f9      	bcs.n	10003a38 <memcpy+0xd0>
10003a44:	780b      	ldrb	r3, [r1, #0]
10003a46:	7003      	strb	r3, [r0, #0]
10003a48:	784b      	ldrb	r3, [r1, #1]
10003a4a:	7043      	strb	r3, [r0, #1]
10003a4c:	788b      	ldrb	r3, [r1, #2]
10003a4e:	7083      	strb	r3, [r0, #2]
10003a50:	4660      	mov	r0, ip
10003a52:	4770      	bx	lr

10003a54 <memset>:
10003a54:	b570      	push	{r4, r5, r6, lr}
10003a56:	0786      	lsls	r6, r0, #30
10003a58:	d048      	beq.n	10003aec <memset+0x98>
10003a5a:	1e54      	subs	r4, r2, #1
10003a5c:	2a00      	cmp	r2, #0
10003a5e:	d03f      	beq.n	10003ae0 <memset+0x8c>
10003a60:	b2ca      	uxtb	r2, r1
10003a62:	4603      	mov	r3, r0
10003a64:	e001      	b.n	10003a6a <memset+0x16>
10003a66:	3c01      	subs	r4, #1
10003a68:	d33a      	bcc.n	10003ae0 <memset+0x8c>
10003a6a:	f803 2b01 	strb.w	r2, [r3], #1
10003a6e:	079d      	lsls	r5, r3, #30
10003a70:	d1f9      	bne.n	10003a66 <memset+0x12>
10003a72:	2c03      	cmp	r4, #3
10003a74:	d92d      	bls.n	10003ad2 <memset+0x7e>
10003a76:	b2cd      	uxtb	r5, r1
10003a78:	2c0f      	cmp	r4, #15
10003a7a:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
10003a7e:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
10003a82:	d936      	bls.n	10003af2 <memset+0x9e>
10003a84:	f1a4 0c10 	sub.w	ip, r4, #16
10003a88:	f103 0e20 	add.w	lr, r3, #32
10003a8c:	f103 0210 	add.w	r2, r3, #16
10003a90:	f02c 060f 	bic.w	r6, ip, #15
10003a94:	ea4f 1c1c 	mov.w	ip, ip, lsr #4
10003a98:	44b6      	add	lr, r6
10003a9a:	e942 5504 	strd	r5, r5, [r2, #-16]
10003a9e:	e942 5502 	strd	r5, r5, [r2, #-8]
10003aa2:	3210      	adds	r2, #16
10003aa4:	4572      	cmp	r2, lr
10003aa6:	d1f8      	bne.n	10003a9a <memset+0x46>
10003aa8:	f10c 0201 	add.w	r2, ip, #1
10003aac:	f014 0f0c 	tst.w	r4, #12
10003ab0:	f004 0c0f 	and.w	ip, r4, #15
10003ab4:	eb03 1202 	add.w	r2, r3, r2, lsl #4
10003ab8:	d013      	beq.n	10003ae2 <memset+0x8e>
10003aba:	f1ac 0304 	sub.w	r3, ip, #4
10003abe:	f023 0303 	bic.w	r3, r3, #3
10003ac2:	3304      	adds	r3, #4
10003ac4:	4413      	add	r3, r2
10003ac6:	f842 5b04 	str.w	r5, [r2], #4
10003aca:	4293      	cmp	r3, r2
10003acc:	d1fb      	bne.n	10003ac6 <memset+0x72>
10003ace:	f00c 0403 	and.w	r4, ip, #3
10003ad2:	b12c      	cbz	r4, 10003ae0 <memset+0x8c>
10003ad4:	b2ca      	uxtb	r2, r1
10003ad6:	441c      	add	r4, r3
10003ad8:	f803 2b01 	strb.w	r2, [r3], #1
10003adc:	429c      	cmp	r4, r3
10003ade:	d1fb      	bne.n	10003ad8 <memset+0x84>
10003ae0:	bd70      	pop	{r4, r5, r6, pc}
10003ae2:	4664      	mov	r4, ip
10003ae4:	4613      	mov	r3, r2
10003ae6:	2c00      	cmp	r4, #0
10003ae8:	d1f4      	bne.n	10003ad4 <memset+0x80>
10003aea:	e7f9      	b.n	10003ae0 <memset+0x8c>
10003aec:	4603      	mov	r3, r0
10003aee:	4614      	mov	r4, r2
10003af0:	e7bf      	b.n	10003a72 <memset+0x1e>
10003af2:	461a      	mov	r2, r3
10003af4:	46a4      	mov	ip, r4
10003af6:	e7e0      	b.n	10003aba <memset+0x66>

10003af8 <register_fini>:
10003af8:	4b02      	ldr	r3, [pc, #8]	; (10003b04 <register_fini+0xc>)
10003afa:	b113      	cbz	r3, 10003b02 <register_fini+0xa>
10003afc:	4802      	ldr	r0, [pc, #8]	; (10003b08 <register_fini+0x10>)
10003afe:	f000 b805 	b.w	10003b0c <atexit>
10003b02:	4770      	bx	lr
10003b04:	00000000 	andeq	r0, r0, r0
10003b08:	10003b19 	andne	r3, r0, r9, lsl fp

10003b0c <atexit>:
10003b0c:	2300      	movs	r3, #0
10003b0e:	4601      	mov	r1, r0
10003b10:	461a      	mov	r2, r3
10003b12:	4618      	mov	r0, r3
10003b14:	f000 b81a 	b.w	10003b4c <__register_exitproc>

10003b18 <__libc_fini_array>:
10003b18:	b538      	push	{r3, r4, r5, lr}
10003b1a:	4b08      	ldr	r3, [pc, #32]	; (10003b3c <__libc_fini_array+0x24>)
10003b1c:	4d08      	ldr	r5, [pc, #32]	; (10003b40 <__libc_fini_array+0x28>)
10003b1e:	1b5b      	subs	r3, r3, r5
10003b20:	109c      	asrs	r4, r3, #2
10003b22:	d007      	beq.n	10003b34 <__libc_fini_array+0x1c>
10003b24:	3b04      	subs	r3, #4
10003b26:	441d      	add	r5, r3
10003b28:	3c01      	subs	r4, #1
10003b2a:	f855 3904 	ldr.w	r3, [r5], #-4
10003b2e:	4798      	blx	r3
10003b30:	2c00      	cmp	r4, #0
10003b32:	d1f9      	bne.n	10003b28 <__libc_fini_array+0x10>
10003b34:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
10003b38:	f001 be84 	b.w	10005844 <_fini>
10003b3c:	38000450 	stmdacc	r0, {r4, r6, sl}
10003b40:	3800044c 	stmdacc	r0, {r2, r3, r6, sl}

10003b44 <__retarget_lock_acquire_recursive>:
10003b44:	4770      	bx	lr
10003b46:	bf00      	nop

10003b48 <__retarget_lock_release_recursive>:
10003b48:	4770      	bx	lr
10003b4a:	bf00      	nop

10003b4c <__register_exitproc>:
10003b4c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
10003b50:	f8df a084 	ldr.w	sl, [pc, #132]	; 10003bd8 <__register_exitproc+0x8c>
10003b54:	4606      	mov	r6, r0
10003b56:	4698      	mov	r8, r3
10003b58:	460f      	mov	r7, r1
10003b5a:	f8da 0000 	ldr.w	r0, [sl]
10003b5e:	4691      	mov	r9, r2
10003b60:	f7ff fff0 	bl	10003b44 <__retarget_lock_acquire_recursive>
10003b64:	4b1b      	ldr	r3, [pc, #108]	; (10003bd4 <__register_exitproc+0x88>)
10003b66:	681b      	ldr	r3, [r3, #0]
10003b68:	f8d3 4148 	ldr.w	r4, [r3, #328]	; 0x148
10003b6c:	b334      	cbz	r4, 10003bbc <__register_exitproc+0x70>
10003b6e:	6865      	ldr	r5, [r4, #4]
10003b70:	2d1f      	cmp	r5, #31
10003b72:	dc28      	bgt.n	10003bc6 <__register_exitproc+0x7a>
10003b74:	b95e      	cbnz	r6, 10003b8e <__register_exitproc+0x42>
10003b76:	1c6b      	adds	r3, r5, #1
10003b78:	3502      	adds	r5, #2
10003b7a:	f8da 0000 	ldr.w	r0, [sl]
10003b7e:	6063      	str	r3, [r4, #4]
10003b80:	f844 7025 	str.w	r7, [r4, r5, lsl #2]
10003b84:	f7ff ffe0 	bl	10003b48 <__retarget_lock_release_recursive>
10003b88:	2000      	movs	r0, #0
10003b8a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
10003b8e:	eb04 0185 	add.w	r1, r4, r5, lsl #2
10003b92:	2301      	movs	r3, #1
10003b94:	2e02      	cmp	r6, #2
10003b96:	f8c1 9088 	str.w	r9, [r1, #136]	; 0x88
10003b9a:	fa03 f305 	lsl.w	r3, r3, r5
10003b9e:	f8d4 2188 	ldr.w	r2, [r4, #392]	; 0x188
10003ba2:	ea42 0203 	orr.w	r2, r2, r3
10003ba6:	f8c4 2188 	str.w	r2, [r4, #392]	; 0x188
10003baa:	f8c1 8108 	str.w	r8, [r1, #264]	; 0x108
10003bae:	d1e2      	bne.n	10003b76 <__register_exitproc+0x2a>
10003bb0:	f8d4 218c 	ldr.w	r2, [r4, #396]	; 0x18c
10003bb4:	4313      	orrs	r3, r2
10003bb6:	f8c4 318c 	str.w	r3, [r4, #396]	; 0x18c
10003bba:	e7dc      	b.n	10003b76 <__register_exitproc+0x2a>
10003bbc:	f503 74a6 	add.w	r4, r3, #332	; 0x14c
10003bc0:	f8c3 4148 	str.w	r4, [r3, #328]	; 0x148
10003bc4:	e7d3      	b.n	10003b6e <__register_exitproc+0x22>
10003bc6:	f8da 0000 	ldr.w	r0, [sl]
10003bca:	f7ff ffbd 	bl	10003b48 <__retarget_lock_release_recursive>
10003bce:	f04f 30ff 	mov.w	r0, #4294967295
10003bd2:	e7da      	b.n	10003b8a <__register_exitproc+0x3e>
10003bd4:	10005ddc 	ldrdne	r5, [r0], -ip
10003bd8:	38000440 	stmdacc	r0, {r6, sl}

10003bdc <__aeabi_drsub>:
10003bdc:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
10003be0:	e002      	b.n	10003be8 <__adddf3>
10003be2:	bf00      	nop

10003be4 <__aeabi_dsub>:
10003be4:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

10003be8 <__adddf3>:
10003be8:	b530      	push	{r4, r5, lr}
10003bea:	ea4f 0441 	mov.w	r4, r1, lsl #1
10003bee:	ea4f 0543 	mov.w	r5, r3, lsl #1
10003bf2:	ea94 0f05 	teq	r4, r5
10003bf6:	bf08      	it	eq
10003bf8:	ea90 0f02 	teqeq	r0, r2
10003bfc:	bf1f      	itttt	ne
10003bfe:	ea54 0c00 	orrsne.w	ip, r4, r0
10003c02:	ea55 0c02 	orrsne.w	ip, r5, r2
10003c06:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
10003c0a:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
10003c0e:	f000 80e2 	beq.w	10003dd6 <__adddf3+0x1ee>
10003c12:	ea4f 5454 	mov.w	r4, r4, lsr #21
10003c16:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
10003c1a:	bfb8      	it	lt
10003c1c:	426d      	neglt	r5, r5
10003c1e:	dd0c      	ble.n	10003c3a <__adddf3+0x52>
10003c20:	442c      	add	r4, r5
10003c22:	ea80 0202 	eor.w	r2, r0, r2
10003c26:	ea81 0303 	eor.w	r3, r1, r3
10003c2a:	ea82 0000 	eor.w	r0, r2, r0
10003c2e:	ea83 0101 	eor.w	r1, r3, r1
10003c32:	ea80 0202 	eor.w	r2, r0, r2
10003c36:	ea81 0303 	eor.w	r3, r1, r3
10003c3a:	2d36      	cmp	r5, #54	; 0x36
10003c3c:	bf88      	it	hi
10003c3e:	bd30      	pophi	{r4, r5, pc}
10003c40:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
10003c44:	ea4f 3101 	mov.w	r1, r1, lsl #12
10003c48:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
10003c4c:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
10003c50:	d002      	beq.n	10003c58 <__adddf3+0x70>
10003c52:	4240      	negs	r0, r0
10003c54:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
10003c58:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
10003c5c:	ea4f 3303 	mov.w	r3, r3, lsl #12
10003c60:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
10003c64:	d002      	beq.n	10003c6c <__adddf3+0x84>
10003c66:	4252      	negs	r2, r2
10003c68:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
10003c6c:	ea94 0f05 	teq	r4, r5
10003c70:	f000 80a7 	beq.w	10003dc2 <__adddf3+0x1da>
10003c74:	f1a4 0401 	sub.w	r4, r4, #1
10003c78:	f1d5 0e20 	rsbs	lr, r5, #32
10003c7c:	db0d      	blt.n	10003c9a <__adddf3+0xb2>
10003c7e:	fa02 fc0e 	lsl.w	ip, r2, lr
10003c82:	fa22 f205 	lsr.w	r2, r2, r5
10003c86:	1880      	adds	r0, r0, r2
10003c88:	f141 0100 	adc.w	r1, r1, #0
10003c8c:	fa03 f20e 	lsl.w	r2, r3, lr
10003c90:	1880      	adds	r0, r0, r2
10003c92:	fa43 f305 	asr.w	r3, r3, r5
10003c96:	4159      	adcs	r1, r3
10003c98:	e00e      	b.n	10003cb8 <__adddf3+0xd0>
10003c9a:	f1a5 0520 	sub.w	r5, r5, #32
10003c9e:	f10e 0e20 	add.w	lr, lr, #32
10003ca2:	2a01      	cmp	r2, #1
10003ca4:	fa03 fc0e 	lsl.w	ip, r3, lr
10003ca8:	bf28      	it	cs
10003caa:	f04c 0c02 	orrcs.w	ip, ip, #2
10003cae:	fa43 f305 	asr.w	r3, r3, r5
10003cb2:	18c0      	adds	r0, r0, r3
10003cb4:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
10003cb8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
10003cbc:	d507      	bpl.n	10003cce <__adddf3+0xe6>
10003cbe:	f04f 0e00 	mov.w	lr, #0
10003cc2:	f1dc 0c00 	rsbs	ip, ip, #0
10003cc6:	eb7e 0000 	sbcs.w	r0, lr, r0
10003cca:	eb6e 0101 	sbc.w	r1, lr, r1
10003cce:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
10003cd2:	d31b      	bcc.n	10003d0c <__adddf3+0x124>
10003cd4:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
10003cd8:	d30c      	bcc.n	10003cf4 <__adddf3+0x10c>
10003cda:	0849      	lsrs	r1, r1, #1
10003cdc:	ea5f 0030 	movs.w	r0, r0, rrx
10003ce0:	ea4f 0c3c 	mov.w	ip, ip, rrx
10003ce4:	f104 0401 	add.w	r4, r4, #1
10003ce8:	ea4f 5244 	mov.w	r2, r4, lsl #21
10003cec:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
10003cf0:	f080 809a 	bcs.w	10003e28 <__adddf3+0x240>
10003cf4:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
10003cf8:	bf08      	it	eq
10003cfa:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
10003cfe:	f150 0000 	adcs.w	r0, r0, #0
10003d02:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
10003d06:	ea41 0105 	orr.w	r1, r1, r5
10003d0a:	bd30      	pop	{r4, r5, pc}
10003d0c:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
10003d10:	4140      	adcs	r0, r0
10003d12:	eb41 0101 	adc.w	r1, r1, r1
10003d16:	3c01      	subs	r4, #1
10003d18:	bf28      	it	cs
10003d1a:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
10003d1e:	d2e9      	bcs.n	10003cf4 <__adddf3+0x10c>
10003d20:	f091 0f00 	teq	r1, #0
10003d24:	bf04      	itt	eq
10003d26:	4601      	moveq	r1, r0
10003d28:	2000      	moveq	r0, #0
10003d2a:	fab1 f381 	clz	r3, r1
10003d2e:	bf08      	it	eq
10003d30:	3320      	addeq	r3, #32
10003d32:	f1a3 030b 	sub.w	r3, r3, #11
10003d36:	f1b3 0220 	subs.w	r2, r3, #32
10003d3a:	da0c      	bge.n	10003d56 <__adddf3+0x16e>
10003d3c:	320c      	adds	r2, #12
10003d3e:	dd08      	ble.n	10003d52 <__adddf3+0x16a>
10003d40:	f102 0c14 	add.w	ip, r2, #20
10003d44:	f1c2 020c 	rsb	r2, r2, #12
10003d48:	fa01 f00c 	lsl.w	r0, r1, ip
10003d4c:	fa21 f102 	lsr.w	r1, r1, r2
10003d50:	e00c      	b.n	10003d6c <__adddf3+0x184>
10003d52:	f102 0214 	add.w	r2, r2, #20
10003d56:	bfd8      	it	le
10003d58:	f1c2 0c20 	rsble	ip, r2, #32
10003d5c:	fa01 f102 	lsl.w	r1, r1, r2
10003d60:	fa20 fc0c 	lsr.w	ip, r0, ip
10003d64:	bfdc      	itt	le
10003d66:	ea41 010c 	orrle.w	r1, r1, ip
10003d6a:	4090      	lslle	r0, r2
10003d6c:	1ae4      	subs	r4, r4, r3
10003d6e:	bfa2      	ittt	ge
10003d70:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
10003d74:	4329      	orrge	r1, r5
10003d76:	bd30      	popge	{r4, r5, pc}
10003d78:	ea6f 0404 	mvn.w	r4, r4
10003d7c:	3c1f      	subs	r4, #31
10003d7e:	da1c      	bge.n	10003dba <__adddf3+0x1d2>
10003d80:	340c      	adds	r4, #12
10003d82:	dc0e      	bgt.n	10003da2 <__adddf3+0x1ba>
10003d84:	f104 0414 	add.w	r4, r4, #20
10003d88:	f1c4 0220 	rsb	r2, r4, #32
10003d8c:	fa20 f004 	lsr.w	r0, r0, r4
10003d90:	fa01 f302 	lsl.w	r3, r1, r2
10003d94:	ea40 0003 	orr.w	r0, r0, r3
10003d98:	fa21 f304 	lsr.w	r3, r1, r4
10003d9c:	ea45 0103 	orr.w	r1, r5, r3
10003da0:	bd30      	pop	{r4, r5, pc}
10003da2:	f1c4 040c 	rsb	r4, r4, #12
10003da6:	f1c4 0220 	rsb	r2, r4, #32
10003daa:	fa20 f002 	lsr.w	r0, r0, r2
10003dae:	fa01 f304 	lsl.w	r3, r1, r4
10003db2:	ea40 0003 	orr.w	r0, r0, r3
10003db6:	4629      	mov	r1, r5
10003db8:	bd30      	pop	{r4, r5, pc}
10003dba:	fa21 f004 	lsr.w	r0, r1, r4
10003dbe:	4629      	mov	r1, r5
10003dc0:	bd30      	pop	{r4, r5, pc}
10003dc2:	f094 0f00 	teq	r4, #0
10003dc6:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
10003dca:	bf06      	itte	eq
10003dcc:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
10003dd0:	3401      	addeq	r4, #1
10003dd2:	3d01      	subne	r5, #1
10003dd4:	e74e      	b.n	10003c74 <__adddf3+0x8c>
10003dd6:	ea7f 5c64 	mvns.w	ip, r4, asr #21
10003dda:	bf18      	it	ne
10003ddc:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
10003de0:	d029      	beq.n	10003e36 <__adddf3+0x24e>
10003de2:	ea94 0f05 	teq	r4, r5
10003de6:	bf08      	it	eq
10003de8:	ea90 0f02 	teqeq	r0, r2
10003dec:	d005      	beq.n	10003dfa <__adddf3+0x212>
10003dee:	ea54 0c00 	orrs.w	ip, r4, r0
10003df2:	bf04      	itt	eq
10003df4:	4619      	moveq	r1, r3
10003df6:	4610      	moveq	r0, r2
10003df8:	bd30      	pop	{r4, r5, pc}
10003dfa:	ea91 0f03 	teq	r1, r3
10003dfe:	bf1e      	ittt	ne
10003e00:	2100      	movne	r1, #0
10003e02:	2000      	movne	r0, #0
10003e04:	bd30      	popne	{r4, r5, pc}
10003e06:	ea5f 5c54 	movs.w	ip, r4, lsr #21
10003e0a:	d105      	bne.n	10003e18 <__adddf3+0x230>
10003e0c:	0040      	lsls	r0, r0, #1
10003e0e:	4149      	adcs	r1, r1
10003e10:	bf28      	it	cs
10003e12:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
10003e16:	bd30      	pop	{r4, r5, pc}
10003e18:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
10003e1c:	bf3c      	itt	cc
10003e1e:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
10003e22:	bd30      	popcc	{r4, r5, pc}
10003e24:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
10003e28:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
10003e2c:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
10003e30:	f04f 0000 	mov.w	r0, #0
10003e34:	bd30      	pop	{r4, r5, pc}
10003e36:	ea7f 5c64 	mvns.w	ip, r4, asr #21
10003e3a:	bf1a      	itte	ne
10003e3c:	4619      	movne	r1, r3
10003e3e:	4610      	movne	r0, r2
10003e40:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
10003e44:	bf1c      	itt	ne
10003e46:	460b      	movne	r3, r1
10003e48:	4602      	movne	r2, r0
10003e4a:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
10003e4e:	bf06      	itte	eq
10003e50:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
10003e54:	ea91 0f03 	teqeq	r1, r3
10003e58:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
10003e5c:	bd30      	pop	{r4, r5, pc}
10003e5e:	bf00      	nop

10003e60 <__aeabi_ui2d>:
10003e60:	f090 0f00 	teq	r0, #0
10003e64:	bf04      	itt	eq
10003e66:	2100      	moveq	r1, #0
10003e68:	4770      	bxeq	lr
10003e6a:	b530      	push	{r4, r5, lr}
10003e6c:	f44f 6480 	mov.w	r4, #1024	; 0x400
10003e70:	f104 0432 	add.w	r4, r4, #50	; 0x32
10003e74:	f04f 0500 	mov.w	r5, #0
10003e78:	f04f 0100 	mov.w	r1, #0
10003e7c:	e750      	b.n	10003d20 <__adddf3+0x138>
10003e7e:	bf00      	nop

10003e80 <__aeabi_i2d>:
10003e80:	f090 0f00 	teq	r0, #0
10003e84:	bf04      	itt	eq
10003e86:	2100      	moveq	r1, #0
10003e88:	4770      	bxeq	lr
10003e8a:	b530      	push	{r4, r5, lr}
10003e8c:	f44f 6480 	mov.w	r4, #1024	; 0x400
10003e90:	f104 0432 	add.w	r4, r4, #50	; 0x32
10003e94:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
10003e98:	bf48      	it	mi
10003e9a:	4240      	negmi	r0, r0
10003e9c:	f04f 0100 	mov.w	r1, #0
10003ea0:	e73e      	b.n	10003d20 <__adddf3+0x138>
10003ea2:	bf00      	nop

10003ea4 <__aeabi_f2d>:
10003ea4:	0042      	lsls	r2, r0, #1
10003ea6:	ea4f 01e2 	mov.w	r1, r2, asr #3
10003eaa:	ea4f 0131 	mov.w	r1, r1, rrx
10003eae:	ea4f 7002 	mov.w	r0, r2, lsl #28
10003eb2:	bf1f      	itttt	ne
10003eb4:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
10003eb8:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
10003ebc:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
10003ec0:	4770      	bxne	lr
10003ec2:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
10003ec6:	bf08      	it	eq
10003ec8:	4770      	bxeq	lr
10003eca:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
10003ece:	bf04      	itt	eq
10003ed0:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
10003ed4:	4770      	bxeq	lr
10003ed6:	b530      	push	{r4, r5, lr}
10003ed8:	f44f 7460 	mov.w	r4, #896	; 0x380
10003edc:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
10003ee0:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
10003ee4:	e71c      	b.n	10003d20 <__adddf3+0x138>
10003ee6:	bf00      	nop

10003ee8 <__aeabi_ul2d>:
10003ee8:	ea50 0201 	orrs.w	r2, r0, r1
10003eec:	bf08      	it	eq
10003eee:	4770      	bxeq	lr
10003ef0:	b530      	push	{r4, r5, lr}
10003ef2:	f04f 0500 	mov.w	r5, #0
10003ef6:	e00a      	b.n	10003f0e <__aeabi_l2d+0x16>

10003ef8 <__aeabi_l2d>:
10003ef8:	ea50 0201 	orrs.w	r2, r0, r1
10003efc:	bf08      	it	eq
10003efe:	4770      	bxeq	lr
10003f00:	b530      	push	{r4, r5, lr}
10003f02:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
10003f06:	d502      	bpl.n	10003f0e <__aeabi_l2d+0x16>
10003f08:	4240      	negs	r0, r0
10003f0a:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
10003f0e:	f44f 6480 	mov.w	r4, #1024	; 0x400
10003f12:	f104 0432 	add.w	r4, r4, #50	; 0x32
10003f16:	ea5f 5c91 	movs.w	ip, r1, lsr #22
10003f1a:	f43f aed8 	beq.w	10003cce <__adddf3+0xe6>
10003f1e:	f04f 0203 	mov.w	r2, #3
10003f22:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
10003f26:	bf18      	it	ne
10003f28:	3203      	addne	r2, #3
10003f2a:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
10003f2e:	bf18      	it	ne
10003f30:	3203      	addne	r2, #3
10003f32:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
10003f36:	f1c2 0320 	rsb	r3, r2, #32
10003f3a:	fa00 fc03 	lsl.w	ip, r0, r3
10003f3e:	fa20 f002 	lsr.w	r0, r0, r2
10003f42:	fa01 fe03 	lsl.w	lr, r1, r3
10003f46:	ea40 000e 	orr.w	r0, r0, lr
10003f4a:	fa21 f102 	lsr.w	r1, r1, r2
10003f4e:	4414      	add	r4, r2
10003f50:	e6bd      	b.n	10003cce <__adddf3+0xe6>
10003f52:	bf00      	nop

10003f54 <__aeabi_dmul>:
10003f54:	b570      	push	{r4, r5, r6, lr}
10003f56:	f04f 0cff 	mov.w	ip, #255	; 0xff
10003f5a:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
10003f5e:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
10003f62:	bf1d      	ittte	ne
10003f64:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
10003f68:	ea94 0f0c 	teqne	r4, ip
10003f6c:	ea95 0f0c 	teqne	r5, ip
10003f70:	f000 f8de 	bleq	10004130 <__aeabi_dmul+0x1dc>
10003f74:	442c      	add	r4, r5
10003f76:	ea81 0603 	eor.w	r6, r1, r3
10003f7a:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
10003f7e:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
10003f82:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
10003f86:	bf18      	it	ne
10003f88:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
10003f8c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
10003f90:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
10003f94:	d038      	beq.n	10004008 <__aeabi_dmul+0xb4>
10003f96:	fba0 ce02 	umull	ip, lr, r0, r2
10003f9a:	f04f 0500 	mov.w	r5, #0
10003f9e:	fbe1 e502 	umlal	lr, r5, r1, r2
10003fa2:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
10003fa6:	fbe0 e503 	umlal	lr, r5, r0, r3
10003faa:	f04f 0600 	mov.w	r6, #0
10003fae:	fbe1 5603 	umlal	r5, r6, r1, r3
10003fb2:	f09c 0f00 	teq	ip, #0
10003fb6:	bf18      	it	ne
10003fb8:	f04e 0e01 	orrne.w	lr, lr, #1
10003fbc:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
10003fc0:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
10003fc4:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
10003fc8:	d204      	bcs.n	10003fd4 <__aeabi_dmul+0x80>
10003fca:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
10003fce:	416d      	adcs	r5, r5
10003fd0:	eb46 0606 	adc.w	r6, r6, r6
10003fd4:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
10003fd8:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
10003fdc:	ea4f 20c5 	mov.w	r0, r5, lsl #11
10003fe0:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
10003fe4:	ea4f 2ece 	mov.w	lr, lr, lsl #11
10003fe8:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
10003fec:	bf88      	it	hi
10003fee:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
10003ff2:	d81e      	bhi.n	10004032 <__aeabi_dmul+0xde>
10003ff4:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
10003ff8:	bf08      	it	eq
10003ffa:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
10003ffe:	f150 0000 	adcs.w	r0, r0, #0
10004002:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
10004006:	bd70      	pop	{r4, r5, r6, pc}
10004008:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
1000400c:	ea46 0101 	orr.w	r1, r6, r1
10004010:	ea40 0002 	orr.w	r0, r0, r2
10004014:	ea81 0103 	eor.w	r1, r1, r3
10004018:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
1000401c:	bfc2      	ittt	gt
1000401e:	ebd4 050c 	rsbsgt	r5, r4, ip
10004022:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
10004026:	bd70      	popgt	{r4, r5, r6, pc}
10004028:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
1000402c:	f04f 0e00 	mov.w	lr, #0
10004030:	3c01      	subs	r4, #1
10004032:	f300 80ab 	bgt.w	1000418c <__aeabi_dmul+0x238>
10004036:	f114 0f36 	cmn.w	r4, #54	; 0x36
1000403a:	bfde      	ittt	le
1000403c:	2000      	movle	r0, #0
1000403e:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
10004042:	bd70      	pople	{r4, r5, r6, pc}
10004044:	f1c4 0400 	rsb	r4, r4, #0
10004048:	3c20      	subs	r4, #32
1000404a:	da35      	bge.n	100040b8 <__aeabi_dmul+0x164>
1000404c:	340c      	adds	r4, #12
1000404e:	dc1b      	bgt.n	10004088 <__aeabi_dmul+0x134>
10004050:	f104 0414 	add.w	r4, r4, #20
10004054:	f1c4 0520 	rsb	r5, r4, #32
10004058:	fa00 f305 	lsl.w	r3, r0, r5
1000405c:	fa20 f004 	lsr.w	r0, r0, r4
10004060:	fa01 f205 	lsl.w	r2, r1, r5
10004064:	ea40 0002 	orr.w	r0, r0, r2
10004068:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
1000406c:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
10004070:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
10004074:	fa21 f604 	lsr.w	r6, r1, r4
10004078:	eb42 0106 	adc.w	r1, r2, r6
1000407c:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
10004080:	bf08      	it	eq
10004082:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
10004086:	bd70      	pop	{r4, r5, r6, pc}
10004088:	f1c4 040c 	rsb	r4, r4, #12
1000408c:	f1c4 0520 	rsb	r5, r4, #32
10004090:	fa00 f304 	lsl.w	r3, r0, r4
10004094:	fa20 f005 	lsr.w	r0, r0, r5
10004098:	fa01 f204 	lsl.w	r2, r1, r4
1000409c:	ea40 0002 	orr.w	r0, r0, r2
100040a0:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
100040a4:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
100040a8:	f141 0100 	adc.w	r1, r1, #0
100040ac:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
100040b0:	bf08      	it	eq
100040b2:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
100040b6:	bd70      	pop	{r4, r5, r6, pc}
100040b8:	f1c4 0520 	rsb	r5, r4, #32
100040bc:	fa00 f205 	lsl.w	r2, r0, r5
100040c0:	ea4e 0e02 	orr.w	lr, lr, r2
100040c4:	fa20 f304 	lsr.w	r3, r0, r4
100040c8:	fa01 f205 	lsl.w	r2, r1, r5
100040cc:	ea43 0302 	orr.w	r3, r3, r2
100040d0:	fa21 f004 	lsr.w	r0, r1, r4
100040d4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
100040d8:	fa21 f204 	lsr.w	r2, r1, r4
100040dc:	ea20 0002 	bic.w	r0, r0, r2
100040e0:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
100040e4:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
100040e8:	bf08      	it	eq
100040ea:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
100040ee:	bd70      	pop	{r4, r5, r6, pc}
100040f0:	f094 0f00 	teq	r4, #0
100040f4:	d10f      	bne.n	10004116 <__aeabi_dmul+0x1c2>
100040f6:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
100040fa:	0040      	lsls	r0, r0, #1
100040fc:	eb41 0101 	adc.w	r1, r1, r1
10004100:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
10004104:	bf08      	it	eq
10004106:	3c01      	subeq	r4, #1
10004108:	d0f7      	beq.n	100040fa <__aeabi_dmul+0x1a6>
1000410a:	ea41 0106 	orr.w	r1, r1, r6
1000410e:	f095 0f00 	teq	r5, #0
10004112:	bf18      	it	ne
10004114:	4770      	bxne	lr
10004116:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
1000411a:	0052      	lsls	r2, r2, #1
1000411c:	eb43 0303 	adc.w	r3, r3, r3
10004120:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
10004124:	bf08      	it	eq
10004126:	3d01      	subeq	r5, #1
10004128:	d0f7      	beq.n	1000411a <__aeabi_dmul+0x1c6>
1000412a:	ea43 0306 	orr.w	r3, r3, r6
1000412e:	4770      	bx	lr
10004130:	ea94 0f0c 	teq	r4, ip
10004134:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
10004138:	bf18      	it	ne
1000413a:	ea95 0f0c 	teqne	r5, ip
1000413e:	d00c      	beq.n	1000415a <__aeabi_dmul+0x206>
10004140:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
10004144:	bf18      	it	ne
10004146:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
1000414a:	d1d1      	bne.n	100040f0 <__aeabi_dmul+0x19c>
1000414c:	ea81 0103 	eor.w	r1, r1, r3
10004150:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
10004154:	f04f 0000 	mov.w	r0, #0
10004158:	bd70      	pop	{r4, r5, r6, pc}
1000415a:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
1000415e:	bf06      	itte	eq
10004160:	4610      	moveq	r0, r2
10004162:	4619      	moveq	r1, r3
10004164:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
10004168:	d019      	beq.n	1000419e <__aeabi_dmul+0x24a>
1000416a:	ea94 0f0c 	teq	r4, ip
1000416e:	d102      	bne.n	10004176 <__aeabi_dmul+0x222>
10004170:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
10004174:	d113      	bne.n	1000419e <__aeabi_dmul+0x24a>
10004176:	ea95 0f0c 	teq	r5, ip
1000417a:	d105      	bne.n	10004188 <__aeabi_dmul+0x234>
1000417c:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
10004180:	bf1c      	itt	ne
10004182:	4610      	movne	r0, r2
10004184:	4619      	movne	r1, r3
10004186:	d10a      	bne.n	1000419e <__aeabi_dmul+0x24a>
10004188:	ea81 0103 	eor.w	r1, r1, r3
1000418c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
10004190:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
10004194:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
10004198:	f04f 0000 	mov.w	r0, #0
1000419c:	bd70      	pop	{r4, r5, r6, pc}
1000419e:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
100041a2:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
100041a6:	bd70      	pop	{r4, r5, r6, pc}

100041a8 <__aeabi_ddiv>:
100041a8:	b570      	push	{r4, r5, r6, lr}
100041aa:	f04f 0cff 	mov.w	ip, #255	; 0xff
100041ae:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
100041b2:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
100041b6:	bf1d      	ittte	ne
100041b8:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
100041bc:	ea94 0f0c 	teqne	r4, ip
100041c0:	ea95 0f0c 	teqne	r5, ip
100041c4:	f000 f8a7 	bleq	10004316 <__aeabi_ddiv+0x16e>
100041c8:	eba4 0405 	sub.w	r4, r4, r5
100041cc:	ea81 0e03 	eor.w	lr, r1, r3
100041d0:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
100041d4:	ea4f 3101 	mov.w	r1, r1, lsl #12
100041d8:	f000 8088 	beq.w	100042ec <__aeabi_ddiv+0x144>
100041dc:	ea4f 3303 	mov.w	r3, r3, lsl #12
100041e0:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
100041e4:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
100041e8:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
100041ec:	ea4f 2202 	mov.w	r2, r2, lsl #8
100041f0:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
100041f4:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
100041f8:	ea4f 2600 	mov.w	r6, r0, lsl #8
100041fc:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
10004200:	429d      	cmp	r5, r3
10004202:	bf08      	it	eq
10004204:	4296      	cmpeq	r6, r2
10004206:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
1000420a:	f504 7440 	add.w	r4, r4, #768	; 0x300
1000420e:	d202      	bcs.n	10004216 <__aeabi_ddiv+0x6e>
10004210:	085b      	lsrs	r3, r3, #1
10004212:	ea4f 0232 	mov.w	r2, r2, rrx
10004216:	1ab6      	subs	r6, r6, r2
10004218:	eb65 0503 	sbc.w	r5, r5, r3
1000421c:	085b      	lsrs	r3, r3, #1
1000421e:	ea4f 0232 	mov.w	r2, r2, rrx
10004222:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
10004226:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
1000422a:	ebb6 0e02 	subs.w	lr, r6, r2
1000422e:	eb75 0e03 	sbcs.w	lr, r5, r3
10004232:	bf22      	ittt	cs
10004234:	1ab6      	subcs	r6, r6, r2
10004236:	4675      	movcs	r5, lr
10004238:	ea40 000c 	orrcs.w	r0, r0, ip
1000423c:	085b      	lsrs	r3, r3, #1
1000423e:	ea4f 0232 	mov.w	r2, r2, rrx
10004242:	ebb6 0e02 	subs.w	lr, r6, r2
10004246:	eb75 0e03 	sbcs.w	lr, r5, r3
1000424a:	bf22      	ittt	cs
1000424c:	1ab6      	subcs	r6, r6, r2
1000424e:	4675      	movcs	r5, lr
10004250:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
10004254:	085b      	lsrs	r3, r3, #1
10004256:	ea4f 0232 	mov.w	r2, r2, rrx
1000425a:	ebb6 0e02 	subs.w	lr, r6, r2
1000425e:	eb75 0e03 	sbcs.w	lr, r5, r3
10004262:	bf22      	ittt	cs
10004264:	1ab6      	subcs	r6, r6, r2
10004266:	4675      	movcs	r5, lr
10004268:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
1000426c:	085b      	lsrs	r3, r3, #1
1000426e:	ea4f 0232 	mov.w	r2, r2, rrx
10004272:	ebb6 0e02 	subs.w	lr, r6, r2
10004276:	eb75 0e03 	sbcs.w	lr, r5, r3
1000427a:	bf22      	ittt	cs
1000427c:	1ab6      	subcs	r6, r6, r2
1000427e:	4675      	movcs	r5, lr
10004280:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
10004284:	ea55 0e06 	orrs.w	lr, r5, r6
10004288:	d018      	beq.n	100042bc <__aeabi_ddiv+0x114>
1000428a:	ea4f 1505 	mov.w	r5, r5, lsl #4
1000428e:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
10004292:	ea4f 1606 	mov.w	r6, r6, lsl #4
10004296:	ea4f 03c3 	mov.w	r3, r3, lsl #3
1000429a:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
1000429e:	ea4f 02c2 	mov.w	r2, r2, lsl #3
100042a2:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
100042a6:	d1c0      	bne.n	1000422a <__aeabi_ddiv+0x82>
100042a8:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
100042ac:	d10b      	bne.n	100042c6 <__aeabi_ddiv+0x11e>
100042ae:	ea41 0100 	orr.w	r1, r1, r0
100042b2:	f04f 0000 	mov.w	r0, #0
100042b6:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
100042ba:	e7b6      	b.n	1000422a <__aeabi_ddiv+0x82>
100042bc:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
100042c0:	bf04      	itt	eq
100042c2:	4301      	orreq	r1, r0
100042c4:	2000      	moveq	r0, #0
100042c6:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
100042ca:	bf88      	it	hi
100042cc:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
100042d0:	f63f aeaf 	bhi.w	10004032 <__aeabi_dmul+0xde>
100042d4:	ebb5 0c03 	subs.w	ip, r5, r3
100042d8:	bf04      	itt	eq
100042da:	ebb6 0c02 	subseq.w	ip, r6, r2
100042de:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
100042e2:	f150 0000 	adcs.w	r0, r0, #0
100042e6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
100042ea:	bd70      	pop	{r4, r5, r6, pc}
100042ec:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
100042f0:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
100042f4:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
100042f8:	bfc2      	ittt	gt
100042fa:	ebd4 050c 	rsbsgt	r5, r4, ip
100042fe:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
10004302:	bd70      	popgt	{r4, r5, r6, pc}
10004304:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
10004308:	f04f 0e00 	mov.w	lr, #0
1000430c:	3c01      	subs	r4, #1
1000430e:	e690      	b.n	10004032 <__aeabi_dmul+0xde>
10004310:	ea45 0e06 	orr.w	lr, r5, r6
10004314:	e68d      	b.n	10004032 <__aeabi_dmul+0xde>
10004316:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
1000431a:	ea94 0f0c 	teq	r4, ip
1000431e:	bf08      	it	eq
10004320:	ea95 0f0c 	teqeq	r5, ip
10004324:	f43f af3b 	beq.w	1000419e <__aeabi_dmul+0x24a>
10004328:	ea94 0f0c 	teq	r4, ip
1000432c:	d10a      	bne.n	10004344 <__aeabi_ddiv+0x19c>
1000432e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
10004332:	f47f af34 	bne.w	1000419e <__aeabi_dmul+0x24a>
10004336:	ea95 0f0c 	teq	r5, ip
1000433a:	f47f af25 	bne.w	10004188 <__aeabi_dmul+0x234>
1000433e:	4610      	mov	r0, r2
10004340:	4619      	mov	r1, r3
10004342:	e72c      	b.n	1000419e <__aeabi_dmul+0x24a>
10004344:	ea95 0f0c 	teq	r5, ip
10004348:	d106      	bne.n	10004358 <__aeabi_ddiv+0x1b0>
1000434a:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
1000434e:	f43f aefd 	beq.w	1000414c <__aeabi_dmul+0x1f8>
10004352:	4610      	mov	r0, r2
10004354:	4619      	mov	r1, r3
10004356:	e722      	b.n	1000419e <__aeabi_dmul+0x24a>
10004358:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
1000435c:	bf18      	it	ne
1000435e:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
10004362:	f47f aec5 	bne.w	100040f0 <__aeabi_dmul+0x19c>
10004366:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
1000436a:	f47f af0d 	bne.w	10004188 <__aeabi_dmul+0x234>
1000436e:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
10004372:	f47f aeeb 	bne.w	1000414c <__aeabi_dmul+0x1f8>
10004376:	e712      	b.n	1000419e <__aeabi_dmul+0x24a>

10004378 <__gedf2>:
10004378:	f04f 3cff 	mov.w	ip, #4294967295
1000437c:	e006      	b.n	1000438c <__cmpdf2+0x4>
1000437e:	bf00      	nop

10004380 <__ledf2>:
10004380:	f04f 0c01 	mov.w	ip, #1
10004384:	e002      	b.n	1000438c <__cmpdf2+0x4>
10004386:	bf00      	nop

10004388 <__cmpdf2>:
10004388:	f04f 0c01 	mov.w	ip, #1
1000438c:	f84d cd04 	str.w	ip, [sp, #-4]!
10004390:	ea4f 0c41 	mov.w	ip, r1, lsl #1
10004394:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
10004398:	ea4f 0c43 	mov.w	ip, r3, lsl #1
1000439c:	bf18      	it	ne
1000439e:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
100043a2:	d01b      	beq.n	100043dc <__cmpdf2+0x54>
100043a4:	b001      	add	sp, #4
100043a6:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
100043aa:	bf0c      	ite	eq
100043ac:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
100043b0:	ea91 0f03 	teqne	r1, r3
100043b4:	bf02      	ittt	eq
100043b6:	ea90 0f02 	teqeq	r0, r2
100043ba:	2000      	moveq	r0, #0
100043bc:	4770      	bxeq	lr
100043be:	f110 0f00 	cmn.w	r0, #0
100043c2:	ea91 0f03 	teq	r1, r3
100043c6:	bf58      	it	pl
100043c8:	4299      	cmppl	r1, r3
100043ca:	bf08      	it	eq
100043cc:	4290      	cmpeq	r0, r2
100043ce:	bf2c      	ite	cs
100043d0:	17d8      	asrcs	r0, r3, #31
100043d2:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
100043d6:	f040 0001 	orr.w	r0, r0, #1
100043da:	4770      	bx	lr
100043dc:	ea4f 0c41 	mov.w	ip, r1, lsl #1
100043e0:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
100043e4:	d102      	bne.n	100043ec <__cmpdf2+0x64>
100043e6:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
100043ea:	d107      	bne.n	100043fc <__cmpdf2+0x74>
100043ec:	ea4f 0c43 	mov.w	ip, r3, lsl #1
100043f0:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
100043f4:	d1d6      	bne.n	100043a4 <__cmpdf2+0x1c>
100043f6:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
100043fa:	d0d3      	beq.n	100043a4 <__cmpdf2+0x1c>
100043fc:	f85d 0b04 	ldr.w	r0, [sp], #4
10004400:	4770      	bx	lr
10004402:	bf00      	nop

10004404 <__aeabi_cdrcmple>:
10004404:	4684      	mov	ip, r0
10004406:	4610      	mov	r0, r2
10004408:	4662      	mov	r2, ip
1000440a:	468c      	mov	ip, r1
1000440c:	4619      	mov	r1, r3
1000440e:	4663      	mov	r3, ip
10004410:	e000      	b.n	10004414 <__aeabi_cdcmpeq>
10004412:	bf00      	nop

10004414 <__aeabi_cdcmpeq>:
10004414:	b501      	push	{r0, lr}
10004416:	f7ff ffb7 	bl	10004388 <__cmpdf2>
1000441a:	2800      	cmp	r0, #0
1000441c:	bf48      	it	mi
1000441e:	f110 0f00 	cmnmi.w	r0, #0
10004422:	bd01      	pop	{r0, pc}

10004424 <__aeabi_dcmpeq>:
10004424:	f84d ed08 	str.w	lr, [sp, #-8]!
10004428:	f7ff fff4 	bl	10004414 <__aeabi_cdcmpeq>
1000442c:	bf0c      	ite	eq
1000442e:	2001      	moveq	r0, #1
10004430:	2000      	movne	r0, #0
10004432:	f85d fb08 	ldr.w	pc, [sp], #8
10004436:	bf00      	nop

10004438 <__aeabi_dcmplt>:
10004438:	f84d ed08 	str.w	lr, [sp, #-8]!
1000443c:	f7ff ffea 	bl	10004414 <__aeabi_cdcmpeq>
10004440:	bf34      	ite	cc
10004442:	2001      	movcc	r0, #1
10004444:	2000      	movcs	r0, #0
10004446:	f85d fb08 	ldr.w	pc, [sp], #8
1000444a:	bf00      	nop

1000444c <__aeabi_dcmple>:
1000444c:	f84d ed08 	str.w	lr, [sp, #-8]!
10004450:	f7ff ffe0 	bl	10004414 <__aeabi_cdcmpeq>
10004454:	bf94      	ite	ls
10004456:	2001      	movls	r0, #1
10004458:	2000      	movhi	r0, #0
1000445a:	f85d fb08 	ldr.w	pc, [sp], #8
1000445e:	bf00      	nop

10004460 <__aeabi_dcmpge>:
10004460:	f84d ed08 	str.w	lr, [sp, #-8]!
10004464:	f7ff ffce 	bl	10004404 <__aeabi_cdrcmple>
10004468:	bf94      	ite	ls
1000446a:	2001      	movls	r0, #1
1000446c:	2000      	movhi	r0, #0
1000446e:	f85d fb08 	ldr.w	pc, [sp], #8
10004472:	bf00      	nop

10004474 <__aeabi_dcmpgt>:
10004474:	f84d ed08 	str.w	lr, [sp, #-8]!
10004478:	f7ff ffc4 	bl	10004404 <__aeabi_cdrcmple>
1000447c:	bf34      	ite	cc
1000447e:	2001      	movcc	r0, #1
10004480:	2000      	movcs	r0, #0
10004482:	f85d fb08 	ldr.w	pc, [sp], #8
10004486:	bf00      	nop

10004488 <__aeabi_d2iz>:
10004488:	ea4f 0241 	mov.w	r2, r1, lsl #1
1000448c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
10004490:	d215      	bcs.n	100044be <__aeabi_d2iz+0x36>
10004492:	d511      	bpl.n	100044b8 <__aeabi_d2iz+0x30>
10004494:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
10004498:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
1000449c:	d912      	bls.n	100044c4 <__aeabi_d2iz+0x3c>
1000449e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
100044a2:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
100044a6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
100044aa:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
100044ae:	fa23 f002 	lsr.w	r0, r3, r2
100044b2:	bf18      	it	ne
100044b4:	4240      	negne	r0, r0
100044b6:	4770      	bx	lr
100044b8:	f04f 0000 	mov.w	r0, #0
100044bc:	4770      	bx	lr
100044be:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
100044c2:	d105      	bne.n	100044d0 <__aeabi_d2iz+0x48>
100044c4:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
100044c8:	bf08      	it	eq
100044ca:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
100044ce:	4770      	bx	lr
100044d0:	f04f 0000 	mov.w	r0, #0
100044d4:	4770      	bx	lr
100044d6:	bf00      	nop

100044d8 <__aeabi_d2uiz>:
100044d8:	004a      	lsls	r2, r1, #1
100044da:	d211      	bcs.n	10004500 <__aeabi_d2uiz+0x28>
100044dc:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
100044e0:	d211      	bcs.n	10004506 <__aeabi_d2uiz+0x2e>
100044e2:	d50d      	bpl.n	10004500 <__aeabi_d2uiz+0x28>
100044e4:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
100044e8:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
100044ec:	d40e      	bmi.n	1000450c <__aeabi_d2uiz+0x34>
100044ee:	ea4f 23c1 	mov.w	r3, r1, lsl #11
100044f2:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
100044f6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
100044fa:	fa23 f002 	lsr.w	r0, r3, r2
100044fe:	4770      	bx	lr
10004500:	f04f 0000 	mov.w	r0, #0
10004504:	4770      	bx	lr
10004506:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
1000450a:	d102      	bne.n	10004512 <__aeabi_d2uiz+0x3a>
1000450c:	f04f 30ff 	mov.w	r0, #4294967295
10004510:	4770      	bx	lr
10004512:	f04f 0000 	mov.w	r0, #0
10004516:	4770      	bx	lr

10004518 <__aeabi_uldivmod>:
10004518:	b953      	cbnz	r3, 10004530 <__aeabi_uldivmod+0x18>
1000451a:	b94a      	cbnz	r2, 10004530 <__aeabi_uldivmod+0x18>
1000451c:	2900      	cmp	r1, #0
1000451e:	bf08      	it	eq
10004520:	2800      	cmpeq	r0, #0
10004522:	bf1c      	itt	ne
10004524:	f04f 31ff 	movne.w	r1, #4294967295
10004528:	f04f 30ff 	movne.w	r0, #4294967295
1000452c:	f001 b934 	b.w	10005798 <__aeabi_idiv0>
10004530:	f1ad 0c08 	sub.w	ip, sp, #8
10004534:	e96d ce04 	strd	ip, lr, [sp, #-16]!
10004538:	f000 f806 	bl	10004548 <__udivmoddi4>
1000453c:	f8dd e004 	ldr.w	lr, [sp, #4]
10004540:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
10004544:	b004      	add	sp, #16
10004546:	4770      	bx	lr

10004548 <__udivmoddi4>:
10004548:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
1000454c:	9d09      	ldr	r5, [sp, #36]	; 0x24
1000454e:	4604      	mov	r4, r0
10004550:	460f      	mov	r7, r1
10004552:	2b00      	cmp	r3, #0
10004554:	d148      	bne.n	100045e8 <__udivmoddi4+0xa0>
10004556:	428a      	cmp	r2, r1
10004558:	4694      	mov	ip, r2
1000455a:	d961      	bls.n	10004620 <__udivmoddi4+0xd8>
1000455c:	fab2 f382 	clz	r3, r2
10004560:	b143      	cbz	r3, 10004574 <__udivmoddi4+0x2c>
10004562:	f1c3 0120 	rsb	r1, r3, #32
10004566:	409f      	lsls	r7, r3
10004568:	fa02 fc03 	lsl.w	ip, r2, r3
1000456c:	409c      	lsls	r4, r3
1000456e:	fa20 f101 	lsr.w	r1, r0, r1
10004572:	430f      	orrs	r7, r1
10004574:	ea4f 411c 	mov.w	r1, ip, lsr #16
10004578:	fa1f fe8c 	uxth.w	lr, ip
1000457c:	0c22      	lsrs	r2, r4, #16
1000457e:	fbb7 f6f1 	udiv	r6, r7, r1
10004582:	fb01 7716 	mls	r7, r1, r6, r7
10004586:	fb06 f00e 	mul.w	r0, r6, lr
1000458a:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
1000458e:	4290      	cmp	r0, r2
10004590:	d908      	bls.n	100045a4 <__udivmoddi4+0x5c>
10004592:	eb1c 0202 	adds.w	r2, ip, r2
10004596:	f106 37ff 	add.w	r7, r6, #4294967295
1000459a:	d202      	bcs.n	100045a2 <__udivmoddi4+0x5a>
1000459c:	4290      	cmp	r0, r2
1000459e:	f200 8137 	bhi.w	10004810 <__udivmoddi4+0x2c8>
100045a2:	463e      	mov	r6, r7
100045a4:	1a12      	subs	r2, r2, r0
100045a6:	b2a4      	uxth	r4, r4
100045a8:	fbb2 f0f1 	udiv	r0, r2, r1
100045ac:	fb01 2210 	mls	r2, r1, r0, r2
100045b0:	fb00 fe0e 	mul.w	lr, r0, lr
100045b4:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
100045b8:	45a6      	cmp	lr, r4
100045ba:	d908      	bls.n	100045ce <__udivmoddi4+0x86>
100045bc:	eb1c 0404 	adds.w	r4, ip, r4
100045c0:	f100 32ff 	add.w	r2, r0, #4294967295
100045c4:	d202      	bcs.n	100045cc <__udivmoddi4+0x84>
100045c6:	45a6      	cmp	lr, r4
100045c8:	f200 811c 	bhi.w	10004804 <__udivmoddi4+0x2bc>
100045cc:	4610      	mov	r0, r2
100045ce:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
100045d2:	eba4 040e 	sub.w	r4, r4, lr
100045d6:	2600      	movs	r6, #0
100045d8:	b11d      	cbz	r5, 100045e2 <__udivmoddi4+0x9a>
100045da:	40dc      	lsrs	r4, r3
100045dc:	2300      	movs	r3, #0
100045de:	e9c5 4300 	strd	r4, r3, [r5]
100045e2:	4631      	mov	r1, r6
100045e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
100045e8:	428b      	cmp	r3, r1
100045ea:	d909      	bls.n	10004600 <__udivmoddi4+0xb8>
100045ec:	2d00      	cmp	r5, #0
100045ee:	f000 80fd 	beq.w	100047ec <__udivmoddi4+0x2a4>
100045f2:	2600      	movs	r6, #0
100045f4:	e9c5 0100 	strd	r0, r1, [r5]
100045f8:	4630      	mov	r0, r6
100045fa:	4631      	mov	r1, r6
100045fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10004600:	fab3 f683 	clz	r6, r3
10004604:	2e00      	cmp	r6, #0
10004606:	d14b      	bne.n	100046a0 <__udivmoddi4+0x158>
10004608:	428b      	cmp	r3, r1
1000460a:	f0c0 80f2 	bcc.w	100047f2 <__udivmoddi4+0x2aa>
1000460e:	4282      	cmp	r2, r0
10004610:	f240 80ef 	bls.w	100047f2 <__udivmoddi4+0x2aa>
10004614:	4630      	mov	r0, r6
10004616:	2d00      	cmp	r5, #0
10004618:	d0e3      	beq.n	100045e2 <__udivmoddi4+0x9a>
1000461a:	e9c5 4700 	strd	r4, r7, [r5]
1000461e:	e7e0      	b.n	100045e2 <__udivmoddi4+0x9a>
10004620:	b902      	cbnz	r2, 10004624 <__udivmoddi4+0xdc>
10004622:	deff      	udf	#255	; 0xff
10004624:	fab2 f382 	clz	r3, r2
10004628:	2b00      	cmp	r3, #0
1000462a:	f040 809d 	bne.w	10004768 <__udivmoddi4+0x220>
1000462e:	1a89      	subs	r1, r1, r2
10004630:	ea4f 4e12 	mov.w	lr, r2, lsr #16
10004634:	b297      	uxth	r7, r2
10004636:	2601      	movs	r6, #1
10004638:	0c20      	lsrs	r0, r4, #16
1000463a:	fbb1 f2fe 	udiv	r2, r1, lr
1000463e:	fb0e 1112 	mls	r1, lr, r2, r1
10004642:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
10004646:	fb07 f002 	mul.w	r0, r7, r2
1000464a:	4288      	cmp	r0, r1
1000464c:	d90f      	bls.n	1000466e <__udivmoddi4+0x126>
1000464e:	eb1c 0101 	adds.w	r1, ip, r1
10004652:	f102 38ff 	add.w	r8, r2, #4294967295
10004656:	bf2c      	ite	cs
10004658:	f04f 0901 	movcs.w	r9, #1
1000465c:	f04f 0900 	movcc.w	r9, #0
10004660:	4288      	cmp	r0, r1
10004662:	d903      	bls.n	1000466c <__udivmoddi4+0x124>
10004664:	f1b9 0f00 	cmp.w	r9, #0
10004668:	f000 80cf 	beq.w	1000480a <__udivmoddi4+0x2c2>
1000466c:	4642      	mov	r2, r8
1000466e:	1a09      	subs	r1, r1, r0
10004670:	b2a4      	uxth	r4, r4
10004672:	fbb1 f0fe 	udiv	r0, r1, lr
10004676:	fb0e 1110 	mls	r1, lr, r0, r1
1000467a:	fb00 f707 	mul.w	r7, r0, r7
1000467e:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
10004682:	42a7      	cmp	r7, r4
10004684:	d908      	bls.n	10004698 <__udivmoddi4+0x150>
10004686:	eb1c 0404 	adds.w	r4, ip, r4
1000468a:	f100 31ff 	add.w	r1, r0, #4294967295
1000468e:	d202      	bcs.n	10004696 <__udivmoddi4+0x14e>
10004690:	42a7      	cmp	r7, r4
10004692:	f200 80b4 	bhi.w	100047fe <__udivmoddi4+0x2b6>
10004696:	4608      	mov	r0, r1
10004698:	1be4      	subs	r4, r4, r7
1000469a:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
1000469e:	e79b      	b.n	100045d8 <__udivmoddi4+0x90>
100046a0:	f1c6 0720 	rsb	r7, r6, #32
100046a4:	40b3      	lsls	r3, r6
100046a6:	fa01 f406 	lsl.w	r4, r1, r6
100046aa:	fa22 fc07 	lsr.w	ip, r2, r7
100046ae:	40f9      	lsrs	r1, r7
100046b0:	40b2      	lsls	r2, r6
100046b2:	ea4c 0c03 	orr.w	ip, ip, r3
100046b6:	fa20 f307 	lsr.w	r3, r0, r7
100046ba:	ea4f 491c 	mov.w	r9, ip, lsr #16
100046be:	431c      	orrs	r4, r3
100046c0:	fa1f fe8c 	uxth.w	lr, ip
100046c4:	fa00 f306 	lsl.w	r3, r0, r6
100046c8:	0c20      	lsrs	r0, r4, #16
100046ca:	fbb1 f8f9 	udiv	r8, r1, r9
100046ce:	fb09 1118 	mls	r1, r9, r8, r1
100046d2:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
100046d6:	fb08 f00e 	mul.w	r0, r8, lr
100046da:	4288      	cmp	r0, r1
100046dc:	d90f      	bls.n	100046fe <__udivmoddi4+0x1b6>
100046de:	eb1c 0101 	adds.w	r1, ip, r1
100046e2:	f108 3aff 	add.w	sl, r8, #4294967295
100046e6:	bf2c      	ite	cs
100046e8:	f04f 0b01 	movcs.w	fp, #1
100046ec:	f04f 0b00 	movcc.w	fp, #0
100046f0:	4288      	cmp	r0, r1
100046f2:	d903      	bls.n	100046fc <__udivmoddi4+0x1b4>
100046f4:	f1bb 0f00 	cmp.w	fp, #0
100046f8:	f000 808d 	beq.w	10004816 <__udivmoddi4+0x2ce>
100046fc:	46d0      	mov	r8, sl
100046fe:	1a09      	subs	r1, r1, r0
10004700:	b2a4      	uxth	r4, r4
10004702:	fbb1 f0f9 	udiv	r0, r1, r9
10004706:	fb09 1110 	mls	r1, r9, r0, r1
1000470a:	fb00 fe0e 	mul.w	lr, r0, lr
1000470e:	ea44 4101 	orr.w	r1, r4, r1, lsl #16
10004712:	458e      	cmp	lr, r1
10004714:	d907      	bls.n	10004726 <__udivmoddi4+0x1de>
10004716:	eb1c 0101 	adds.w	r1, ip, r1
1000471a:	f100 34ff 	add.w	r4, r0, #4294967295
1000471e:	d201      	bcs.n	10004724 <__udivmoddi4+0x1dc>
10004720:	458e      	cmp	lr, r1
10004722:	d87f      	bhi.n	10004824 <__udivmoddi4+0x2dc>
10004724:	4620      	mov	r0, r4
10004726:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
1000472a:	eba1 010e 	sub.w	r1, r1, lr
1000472e:	fba0 9802 	umull	r9, r8, r0, r2
10004732:	4541      	cmp	r1, r8
10004734:	464c      	mov	r4, r9
10004736:	46c6      	mov	lr, r8
10004738:	d302      	bcc.n	10004740 <__udivmoddi4+0x1f8>
1000473a:	d106      	bne.n	1000474a <__udivmoddi4+0x202>
1000473c:	454b      	cmp	r3, r9
1000473e:	d204      	bcs.n	1000474a <__udivmoddi4+0x202>
10004740:	3801      	subs	r0, #1
10004742:	ebb9 0402 	subs.w	r4, r9, r2
10004746:	eb68 0e0c 	sbc.w	lr, r8, ip
1000474a:	2d00      	cmp	r5, #0
1000474c:	d070      	beq.n	10004830 <__udivmoddi4+0x2e8>
1000474e:	1b1a      	subs	r2, r3, r4
10004750:	eb61 010e 	sbc.w	r1, r1, lr
10004754:	fa22 f306 	lsr.w	r3, r2, r6
10004758:	fa01 f707 	lsl.w	r7, r1, r7
1000475c:	40f1      	lsrs	r1, r6
1000475e:	2600      	movs	r6, #0
10004760:	431f      	orrs	r7, r3
10004762:	e9c5 7100 	strd	r7, r1, [r5]
10004766:	e73c      	b.n	100045e2 <__udivmoddi4+0x9a>
10004768:	fa02 fc03 	lsl.w	ip, r2, r3
1000476c:	f1c3 0020 	rsb	r0, r3, #32
10004770:	fa01 f203 	lsl.w	r2, r1, r3
10004774:	fa21 f600 	lsr.w	r6, r1, r0
10004778:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
1000477c:	fa24 f100 	lsr.w	r1, r4, r0
10004780:	fa1f f78c 	uxth.w	r7, ip
10004784:	409c      	lsls	r4, r3
10004786:	4311      	orrs	r1, r2
10004788:	fbb6 f0fe 	udiv	r0, r6, lr
1000478c:	0c0a      	lsrs	r2, r1, #16
1000478e:	fb0e 6610 	mls	r6, lr, r0, r6
10004792:	ea42 4206 	orr.w	r2, r2, r6, lsl #16
10004796:	fb00 f607 	mul.w	r6, r0, r7
1000479a:	4296      	cmp	r6, r2
1000479c:	d90e      	bls.n	100047bc <__udivmoddi4+0x274>
1000479e:	eb1c 0202 	adds.w	r2, ip, r2
100047a2:	f100 38ff 	add.w	r8, r0, #4294967295
100047a6:	bf2c      	ite	cs
100047a8:	f04f 0901 	movcs.w	r9, #1
100047ac:	f04f 0900 	movcc.w	r9, #0
100047b0:	4296      	cmp	r6, r2
100047b2:	d902      	bls.n	100047ba <__udivmoddi4+0x272>
100047b4:	f1b9 0f00 	cmp.w	r9, #0
100047b8:	d031      	beq.n	1000481e <__udivmoddi4+0x2d6>
100047ba:	4640      	mov	r0, r8
100047bc:	1b92      	subs	r2, r2, r6
100047be:	b289      	uxth	r1, r1
100047c0:	fbb2 f6fe 	udiv	r6, r2, lr
100047c4:	fb0e 2216 	mls	r2, lr, r6, r2
100047c8:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
100047cc:	fb06 f207 	mul.w	r2, r6, r7
100047d0:	428a      	cmp	r2, r1
100047d2:	d907      	bls.n	100047e4 <__udivmoddi4+0x29c>
100047d4:	eb1c 0101 	adds.w	r1, ip, r1
100047d8:	f106 38ff 	add.w	r8, r6, #4294967295
100047dc:	d201      	bcs.n	100047e2 <__udivmoddi4+0x29a>
100047de:	428a      	cmp	r2, r1
100047e0:	d823      	bhi.n	1000482a <__udivmoddi4+0x2e2>
100047e2:	4646      	mov	r6, r8
100047e4:	1a89      	subs	r1, r1, r2
100047e6:	ea46 4600 	orr.w	r6, r6, r0, lsl #16
100047ea:	e725      	b.n	10004638 <__udivmoddi4+0xf0>
100047ec:	462e      	mov	r6, r5
100047ee:	4628      	mov	r0, r5
100047f0:	e6f7      	b.n	100045e2 <__udivmoddi4+0x9a>
100047f2:	1a84      	subs	r4, r0, r2
100047f4:	eb61 0303 	sbc.w	r3, r1, r3
100047f8:	2001      	movs	r0, #1
100047fa:	461f      	mov	r7, r3
100047fc:	e70b      	b.n	10004616 <__udivmoddi4+0xce>
100047fe:	4464      	add	r4, ip
10004800:	3802      	subs	r0, #2
10004802:	e749      	b.n	10004698 <__udivmoddi4+0x150>
10004804:	4464      	add	r4, ip
10004806:	3802      	subs	r0, #2
10004808:	e6e1      	b.n	100045ce <__udivmoddi4+0x86>
1000480a:	3a02      	subs	r2, #2
1000480c:	4461      	add	r1, ip
1000480e:	e72e      	b.n	1000466e <__udivmoddi4+0x126>
10004810:	3e02      	subs	r6, #2
10004812:	4462      	add	r2, ip
10004814:	e6c6      	b.n	100045a4 <__udivmoddi4+0x5c>
10004816:	f1a8 0802 	sub.w	r8, r8, #2
1000481a:	4461      	add	r1, ip
1000481c:	e76f      	b.n	100046fe <__udivmoddi4+0x1b6>
1000481e:	3802      	subs	r0, #2
10004820:	4462      	add	r2, ip
10004822:	e7cb      	b.n	100047bc <__udivmoddi4+0x274>
10004824:	3802      	subs	r0, #2
10004826:	4461      	add	r1, ip
10004828:	e77d      	b.n	10004726 <__udivmoddi4+0x1de>
1000482a:	3e02      	subs	r6, #2
1000482c:	4461      	add	r1, ip
1000482e:	e7d9      	b.n	100047e4 <__udivmoddi4+0x29c>
10004830:	462e      	mov	r6, r5
10004832:	e6d6      	b.n	100045e2 <__udivmoddi4+0x9a>

10004834 <selfrel_offset31>:
10004834:	6803      	ldr	r3, [r0, #0]
10004836:	005a      	lsls	r2, r3, #1
10004838:	bf4c      	ite	mi
1000483a:	f043 4300 	orrmi.w	r3, r3, #2147483648	; 0x80000000
1000483e:	f023 4300 	bicpl.w	r3, r3, #2147483648	; 0x80000000
10004842:	4418      	add	r0, r3
10004844:	4770      	bx	lr
10004846:	bf00      	nop

10004848 <search_EIT_table>:
10004848:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
1000484c:	b339      	cbz	r1, 1000489e <search_EIT_table+0x56>
1000484e:	f101 38ff 	add.w	r8, r1, #4294967295
10004852:	4606      	mov	r6, r0
10004854:	4617      	mov	r7, r2
10004856:	f04f 0900 	mov.w	r9, #0
1000485a:	4645      	mov	r5, r8
1000485c:	eb19 0105 	adds.w	r1, r9, r5
10004860:	bf48      	it	mi
10004862:	3101      	addmi	r1, #1
10004864:	1049      	asrs	r1, r1, #1
10004866:	eb06 0ac1 	add.w	sl, r6, r1, lsl #3
1000486a:	00cc      	lsls	r4, r1, #3
1000486c:	4650      	mov	r0, sl
1000486e:	f7ff ffe1 	bl	10004834 <selfrel_offset31>
10004872:	3408      	adds	r4, #8
10004874:	4588      	cmp	r8, r1
10004876:	4603      	mov	r3, r0
10004878:	eb06 0004 	add.w	r0, r6, r4
1000487c:	d009      	beq.n	10004892 <search_EIT_table+0x4a>
1000487e:	42bb      	cmp	r3, r7
10004880:	d809      	bhi.n	10004896 <search_EIT_table+0x4e>
10004882:	f7ff ffd7 	bl	10004834 <selfrel_offset31>
10004886:	3801      	subs	r0, #1
10004888:	f101 0901 	add.w	r9, r1, #1
1000488c:	42b8      	cmp	r0, r7
1000488e:	d3e5      	bcc.n	1000485c <search_EIT_table+0x14>
10004890:	e007      	b.n	100048a2 <search_EIT_table+0x5a>
10004892:	42bb      	cmp	r3, r7
10004894:	d905      	bls.n	100048a2 <search_EIT_table+0x5a>
10004896:	4589      	cmp	r9, r1
10004898:	f101 35ff 	add.w	r5, r1, #4294967295
1000489c:	d1de      	bne.n	1000485c <search_EIT_table+0x14>
1000489e:	f04f 0a00 	mov.w	sl, #0
100048a2:	4650      	mov	r0, sl
100048a4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

100048a8 <__gnu_unwind_get_pr_addr>:
100048a8:	2801      	cmp	r0, #1
100048aa:	d007      	beq.n	100048bc <__gnu_unwind_get_pr_addr+0x14>
100048ac:	2802      	cmp	r0, #2
100048ae:	d007      	beq.n	100048c0 <__gnu_unwind_get_pr_addr+0x18>
100048b0:	2800      	cmp	r0, #0
100048b2:	4b04      	ldr	r3, [pc, #16]	; (100048c4 <__gnu_unwind_get_pr_addr+0x1c>)
100048b4:	bf14      	ite	ne
100048b6:	2000      	movne	r0, #0
100048b8:	4618      	moveq	r0, r3
100048ba:	4770      	bx	lr
100048bc:	4802      	ldr	r0, [pc, #8]	; (100048c8 <__gnu_unwind_get_pr_addr+0x20>)
100048be:	4770      	bx	lr
100048c0:	4802      	ldr	r0, [pc, #8]	; (100048cc <__gnu_unwind_get_pr_addr+0x24>)
100048c2:	4770      	bx	lr
100048c4:	10004fb9 			; <UNDEFINED> instruction: 0x10004fb9
100048c8:	10004fbd 			; <UNDEFINED> instruction: 0x10004fbd
100048cc:	10004fc1 	andne	r4, r0, r1, asr #31

100048d0 <get_eit_entry>:
100048d0:	4b23      	ldr	r3, [pc, #140]	; (10004960 <get_eit_entry+0x90>)
100048d2:	b530      	push	{r4, r5, lr}
100048d4:	4604      	mov	r4, r0
100048d6:	b083      	sub	sp, #12
100048d8:	1e8d      	subs	r5, r1, #2
100048da:	b343      	cbz	r3, 1000492e <get_eit_entry+0x5e>
100048dc:	a901      	add	r1, sp, #4
100048de:	4628      	mov	r0, r5
100048e0:	e000      	b.n	100048e4 <get_eit_entry+0x14>
100048e2:	bf00      	nop
100048e4:	b1f0      	cbz	r0, 10004924 <get_eit_entry+0x54>
100048e6:	9901      	ldr	r1, [sp, #4]
100048e8:	462a      	mov	r2, r5
100048ea:	f7ff ffad 	bl	10004848 <search_EIT_table>
100048ee:	4601      	mov	r1, r0
100048f0:	b1c0      	cbz	r0, 10004924 <get_eit_entry+0x54>
100048f2:	f7ff ff9f 	bl	10004834 <selfrel_offset31>
100048f6:	684b      	ldr	r3, [r1, #4]
100048f8:	64a0      	str	r0, [r4, #72]	; 0x48
100048fa:	2b01      	cmp	r3, #1
100048fc:	d02c      	beq.n	10004958 <get_eit_entry+0x88>
100048fe:	2b00      	cmp	r3, #0
10004900:	f101 0004 	add.w	r0, r1, #4
10004904:	db24      	blt.n	10004950 <get_eit_entry+0x80>
10004906:	f7ff ff95 	bl	10004834 <selfrel_offset31>
1000490a:	2300      	movs	r3, #0
1000490c:	e9c4 0313 	strd	r0, r3, [r4, #76]	; 0x4c
10004910:	6803      	ldr	r3, [r0, #0]
10004912:	2b00      	cmp	r3, #0
10004914:	db11      	blt.n	1000493a <get_eit_entry+0x6a>
10004916:	f7ff ff8d 	bl	10004834 <selfrel_offset31>
1000491a:	4603      	mov	r3, r0
1000491c:	2000      	movs	r0, #0
1000491e:	6123      	str	r3, [r4, #16]
10004920:	b003      	add	sp, #12
10004922:	bd30      	pop	{r4, r5, pc}
10004924:	2300      	movs	r3, #0
10004926:	2009      	movs	r0, #9
10004928:	6123      	str	r3, [r4, #16]
1000492a:	b003      	add	sp, #12
1000492c:	bd30      	pop	{r4, r5, pc}
1000492e:	480d      	ldr	r0, [pc, #52]	; (10004964 <get_eit_entry+0x94>)
10004930:	490d      	ldr	r1, [pc, #52]	; (10004968 <get_eit_entry+0x98>)
10004932:	1a09      	subs	r1, r1, r0
10004934:	10c9      	asrs	r1, r1, #3
10004936:	9101      	str	r1, [sp, #4]
10004938:	e7d6      	b.n	100048e8 <get_eit_entry+0x18>
1000493a:	f3c3 6003 	ubfx	r0, r3, #24, #4
1000493e:	f7ff ffb3 	bl	100048a8 <__gnu_unwind_get_pr_addr>
10004942:	2800      	cmp	r0, #0
10004944:	6120      	str	r0, [r4, #16]
10004946:	bf14      	ite	ne
10004948:	2000      	movne	r0, #0
1000494a:	2009      	moveq	r0, #9
1000494c:	b003      	add	sp, #12
1000494e:	bd30      	pop	{r4, r5, pc}
10004950:	2301      	movs	r3, #1
10004952:	e9c4 0313 	strd	r0, r3, [r4, #76]	; 0x4c
10004956:	e7db      	b.n	10004910 <get_eit_entry+0x40>
10004958:	2300      	movs	r3, #0
1000495a:	2005      	movs	r0, #5
1000495c:	6123      	str	r3, [r4, #16]
1000495e:	e7df      	b.n	10004920 <get_eit_entry+0x50>
10004960:	00000000 	andeq	r0, r0, r0
10004964:	10005dfc 	strdne	r5, [r0], -ip
10004968:	10005ebc 			; <UNDEFINED> instruction: 0x10005ebc

1000496c <restore_non_core_regs>:
1000496c:	6803      	ldr	r3, [r0, #0]
1000496e:	07da      	lsls	r2, r3, #31
10004970:	b510      	push	{r4, lr}
10004972:	4604      	mov	r4, r0
10004974:	d406      	bmi.n	10004984 <restore_non_core_regs+0x18>
10004976:	079b      	lsls	r3, r3, #30
10004978:	f100 0048 	add.w	r0, r0, #72	; 0x48
1000497c:	d509      	bpl.n	10004992 <restore_non_core_regs+0x26>
1000497e:	f000 fc8f 	bl	100052a0 <__gnu_Unwind_Restore_VFP_D>
10004982:	6823      	ldr	r3, [r4, #0]
10004984:	0759      	lsls	r1, r3, #29
10004986:	d509      	bpl.n	1000499c <restore_non_core_regs+0x30>
10004988:	071a      	lsls	r2, r3, #28
1000498a:	d50e      	bpl.n	100049aa <restore_non_core_regs+0x3e>
1000498c:	06db      	lsls	r3, r3, #27
1000498e:	d513      	bpl.n	100049b8 <restore_non_core_regs+0x4c>
10004990:	bd10      	pop	{r4, pc}
10004992:	f000 fc7d 	bl	10005290 <__gnu_Unwind_Restore_VFP>
10004996:	6823      	ldr	r3, [r4, #0]
10004998:	0759      	lsls	r1, r3, #29
1000499a:	d4f5      	bmi.n	10004988 <restore_non_core_regs+0x1c>
1000499c:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
100049a0:	f000 fc86 	bl	100052b0 <__gnu_Unwind_Restore_VFP_D_16_to_31>
100049a4:	6823      	ldr	r3, [r4, #0]
100049a6:	071a      	lsls	r2, r3, #28
100049a8:	d4f0      	bmi.n	1000498c <restore_non_core_regs+0x20>
100049aa:	f504 70a8 	add.w	r0, r4, #336	; 0x150
100049ae:	f000 fc87 	bl	100052c0 <__gnu_Unwind_Restore_WMMXD>
100049b2:	6823      	ldr	r3, [r4, #0]
100049b4:	06db      	lsls	r3, r3, #27
100049b6:	d4eb      	bmi.n	10004990 <restore_non_core_regs+0x24>
100049b8:	f504 70e8 	add.w	r0, r4, #464	; 0x1d0
100049bc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
100049c0:	f000 bcc2 	b.w	10005348 <__gnu_Unwind_Restore_WMMXC>

100049c4 <__gnu_unwind_24bit.constprop.0>:
100049c4:	2009      	movs	r0, #9
100049c6:	4770      	bx	lr

100049c8 <_Unwind_decode_typeinfo_ptr.constprop.0>:
100049c8:	4603      	mov	r3, r0
100049ca:	6800      	ldr	r0, [r0, #0]
100049cc:	b100      	cbz	r0, 100049d0 <_Unwind_decode_typeinfo_ptr.constprop.0+0x8>
100049ce:	4418      	add	r0, r3
100049d0:	4770      	bx	lr
100049d2:	bf00      	nop

100049d4 <_Unwind_DebugHook>:
100049d4:	4770      	bx	lr
100049d6:	bf00      	nop

100049d8 <unwind_phase2>:
100049d8:	b570      	push	{r4, r5, r6, lr}
100049da:	4604      	mov	r4, r0
100049dc:	460e      	mov	r6, r1
100049de:	6c31      	ldr	r1, [r6, #64]	; 0x40
100049e0:	4620      	mov	r0, r4
100049e2:	f7ff ff75 	bl	100048d0 <get_eit_entry>
100049e6:	4605      	mov	r5, r0
100049e8:	b998      	cbnz	r0, 10004a12 <unwind_phase2+0x3a>
100049ea:	f8d6 c040 	ldr.w	ip, [r6, #64]	; 0x40
100049ee:	4632      	mov	r2, r6
100049f0:	6923      	ldr	r3, [r4, #16]
100049f2:	4621      	mov	r1, r4
100049f4:	2001      	movs	r0, #1
100049f6:	f8c4 c014 	str.w	ip, [r4, #20]
100049fa:	4798      	blx	r3
100049fc:	2808      	cmp	r0, #8
100049fe:	d0ee      	beq.n	100049de <unwind_phase2+0x6>
10004a00:	2807      	cmp	r0, #7
10004a02:	d106      	bne.n	10004a12 <unwind_phase2+0x3a>
10004a04:	4628      	mov	r0, r5
10004a06:	6c31      	ldr	r1, [r6, #64]	; 0x40
10004a08:	f7ff ffe4 	bl	100049d4 <_Unwind_DebugHook>
10004a0c:	1d30      	adds	r0, r6, #4
10004a0e:	f000 fc33 	bl	10005278 <__restore_core_regs>
10004a12:	f000 fec3 	bl	1000579c <abort>
10004a16:	bf00      	nop

10004a18 <unwind_phase2_forced>:
10004a18:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
10004a1c:	f101 0c04 	add.w	ip, r1, #4
10004a20:	f5ad 7d74 	sub.w	sp, sp, #976	; 0x3d0
10004a24:	68c7      	ldr	r7, [r0, #12]
10004a26:	4606      	mov	r6, r0
10004a28:	f8d0 8018 	ldr.w	r8, [r0, #24]
10004a2c:	4614      	mov	r4, r2
10004a2e:	f10d 0e14 	add.w	lr, sp, #20
10004a32:	ad04      	add	r5, sp, #16
10004a34:	f04f 0900 	mov.w	r9, #0
10004a38:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
10004a3c:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
10004a40:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
10004a44:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
10004a48:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
10004a4c:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
10004a50:	e89c 000f 	ldmia.w	ip, {r0, r1, r2, r3}
10004a54:	e88e 000f 	stmia.w	lr, {r0, r1, r2, r3}
10004a58:	f8c5 9000 	str.w	r9, [r5]
10004a5c:	e023      	b.n	10004aa6 <unwind_phase2_forced+0x8e>
10004a5e:	6c2b      	ldr	r3, [r5, #64]	; 0x40
10004a60:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
10004a64:	4629      	mov	r1, r5
10004a66:	a87c      	add	r0, sp, #496	; 0x1f0
10004a68:	6173      	str	r3, [r6, #20]
10004a6a:	f7fe ff7d 	bl	10003968 <memcpy>
10004a6e:	aa7c      	add	r2, sp, #496	; 0x1f0
10004a70:	4631      	mov	r1, r6
10004a72:	6933      	ldr	r3, [r6, #16]
10004a74:	4650      	mov	r0, sl
10004a76:	4798      	blx	r3
10004a78:	9b8a      	ldr	r3, [sp, #552]	; 0x228
10004a7a:	4621      	mov	r1, r4
10004a7c:	4681      	mov	r9, r0
10004a7e:	9303      	str	r3, [sp, #12]
10004a80:	4632      	mov	r2, r6
10004a82:	9c03      	ldr	r4, [sp, #12]
10004a84:	4633      	mov	r3, r6
10004a86:	2001      	movs	r0, #1
10004a88:	646c      	str	r4, [r5, #68]	; 0x44
10004a8a:	e9cd 5800 	strd	r5, r8, [sp]
10004a8e:	47b8      	blx	r7
10004a90:	4604      	mov	r4, r0
10004a92:	b9e8      	cbnz	r0, 10004ad0 <unwind_phase2_forced+0xb8>
10004a94:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
10004a98:	a97c      	add	r1, sp, #496	; 0x1f0
10004a9a:	4628      	mov	r0, r5
10004a9c:	f7fe ff64 	bl	10003968 <memcpy>
10004aa0:	f1b9 0f08 	cmp.w	r9, #8
10004aa4:	d11b      	bne.n	10004ade <unwind_phase2_forced+0xc6>
10004aa6:	3409      	adds	r4, #9
10004aa8:	6c29      	ldr	r1, [r5, #64]	; 0x40
10004aaa:	4630      	mov	r0, r6
10004aac:	f7ff ff10 	bl	100048d0 <get_eit_entry>
10004ab0:	4681      	mov	r9, r0
10004ab2:	fa5f fa84 	uxtb.w	sl, r4
10004ab6:	2800      	cmp	r0, #0
10004ab8:	d0d1      	beq.n	10004a5e <unwind_phase2_forced+0x46>
10004aba:	6bac      	ldr	r4, [r5, #56]	; 0x38
10004abc:	4633      	mov	r3, r6
10004abe:	4632      	mov	r2, r6
10004ac0:	f04a 0110 	orr.w	r1, sl, #16
10004ac4:	646c      	str	r4, [r5, #68]	; 0x44
10004ac6:	2001      	movs	r0, #1
10004ac8:	e9cd 5800 	strd	r5, r8, [sp]
10004acc:	47b8      	blx	r7
10004ace:	b108      	cbz	r0, 10004ad4 <unwind_phase2_forced+0xbc>
10004ad0:	f04f 0909 	mov.w	r9, #9
10004ad4:	4648      	mov	r0, r9
10004ad6:	f50d 7d74 	add.w	sp, sp, #976	; 0x3d0
10004ada:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
10004ade:	f1b9 0f07 	cmp.w	r9, #7
10004ae2:	d1f5      	bne.n	10004ad0 <unwind_phase2_forced+0xb8>
10004ae4:	4620      	mov	r0, r4
10004ae6:	6c29      	ldr	r1, [r5, #64]	; 0x40
10004ae8:	f7ff ff74 	bl	100049d4 <_Unwind_DebugHook>
10004aec:	a805      	add	r0, sp, #20
10004aee:	f000 fbc3 	bl	10005278 <__restore_core_regs>
10004af2:	bf00      	nop

10004af4 <_Unwind_GetCFA>:
10004af4:	6c40      	ldr	r0, [r0, #68]	; 0x44
10004af6:	4770      	bx	lr

10004af8 <__gnu_Unwind_RaiseException>:
10004af8:	b5f0      	push	{r4, r5, r6, r7, lr}
10004afa:	6bcb      	ldr	r3, [r1, #60]	; 0x3c
10004afc:	b0f9      	sub	sp, #484	; 0x1e4
10004afe:	f101 0c04 	add.w	ip, r1, #4
10004b02:	460e      	mov	r6, r1
10004b04:	640b      	str	r3, [r1, #64]	; 0x40
10004b06:	ac01      	add	r4, sp, #4
10004b08:	4605      	mov	r5, r0
10004b0a:	f04f 37ff 	mov.w	r7, #4294967295
10004b0e:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
10004b12:	c40f      	stmia	r4!, {r0, r1, r2, r3}
10004b14:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
10004b18:	c40f      	stmia	r4!, {r0, r1, r2, r3}
10004b1a:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
10004b1e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
10004b20:	e89c 000f 	ldmia.w	ip, {r0, r1, r2, r3}
10004b24:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
10004b28:	9700      	str	r7, [sp, #0]
10004b2a:	e006      	b.n	10004b3a <__gnu_Unwind_RaiseException+0x42>
10004b2c:	692b      	ldr	r3, [r5, #16]
10004b2e:	466a      	mov	r2, sp
10004b30:	4629      	mov	r1, r5
10004b32:	4798      	blx	r3
10004b34:	2808      	cmp	r0, #8
10004b36:	4604      	mov	r4, r0
10004b38:	d108      	bne.n	10004b4c <__gnu_Unwind_RaiseException+0x54>
10004b3a:	9910      	ldr	r1, [sp, #64]	; 0x40
10004b3c:	4628      	mov	r0, r5
10004b3e:	f7ff fec7 	bl	100048d0 <get_eit_entry>
10004b42:	2800      	cmp	r0, #0
10004b44:	d0f2      	beq.n	10004b2c <__gnu_Unwind_RaiseException+0x34>
10004b46:	2009      	movs	r0, #9
10004b48:	b079      	add	sp, #484	; 0x1e4
10004b4a:	bdf0      	pop	{r4, r5, r6, r7, pc}
10004b4c:	4668      	mov	r0, sp
10004b4e:	f7ff ff0d 	bl	1000496c <restore_non_core_regs>
10004b52:	2c06      	cmp	r4, #6
10004b54:	d1f7      	bne.n	10004b46 <__gnu_Unwind_RaiseException+0x4e>
10004b56:	4631      	mov	r1, r6
10004b58:	4628      	mov	r0, r5
10004b5a:	f7ff ff3d 	bl	100049d8 <unwind_phase2>
10004b5e:	bf00      	nop

10004b60 <__gnu_Unwind_ForcedUnwind>:
10004b60:	b410      	push	{r4}
10004b62:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
10004b64:	60c1      	str	r1, [r0, #12]
10004b66:	4619      	mov	r1, r3
10004b68:	6182      	str	r2, [r0, #24]
10004b6a:	2200      	movs	r2, #0
10004b6c:	641c      	str	r4, [r3, #64]	; 0x40
10004b6e:	bc10      	pop	{r4}
10004b70:	e752      	b.n	10004a18 <unwind_phase2_forced>
10004b72:	bf00      	nop

10004b74 <__gnu_Unwind_Resume>:
10004b74:	b570      	push	{r4, r5, r6, lr}
10004b76:	6943      	ldr	r3, [r0, #20]
10004b78:	68c6      	ldr	r6, [r0, #12]
10004b7a:	640b      	str	r3, [r1, #64]	; 0x40
10004b7c:	b9ae      	cbnz	r6, 10004baa <__gnu_Unwind_Resume+0x36>
10004b7e:	6903      	ldr	r3, [r0, #16]
10004b80:	460a      	mov	r2, r1
10004b82:	4604      	mov	r4, r0
10004b84:	460d      	mov	r5, r1
10004b86:	4601      	mov	r1, r0
10004b88:	2002      	movs	r0, #2
10004b8a:	4798      	blx	r3
10004b8c:	2807      	cmp	r0, #7
10004b8e:	d005      	beq.n	10004b9c <__gnu_Unwind_Resume+0x28>
10004b90:	2808      	cmp	r0, #8
10004b92:	d10f      	bne.n	10004bb4 <__gnu_Unwind_Resume+0x40>
10004b94:	4629      	mov	r1, r5
10004b96:	4620      	mov	r0, r4
10004b98:	f7ff ff1e 	bl	100049d8 <unwind_phase2>
10004b9c:	4630      	mov	r0, r6
10004b9e:	6c29      	ldr	r1, [r5, #64]	; 0x40
10004ba0:	f7ff ff18 	bl	100049d4 <_Unwind_DebugHook>
10004ba4:	1d28      	adds	r0, r5, #4
10004ba6:	f000 fb67 	bl	10005278 <__restore_core_regs>
10004baa:	2201      	movs	r2, #1
10004bac:	f7ff ff34 	bl	10004a18 <unwind_phase2_forced>
10004bb0:	f000 fdf4 	bl	1000579c <abort>
10004bb4:	f000 fdf2 	bl	1000579c <abort>

10004bb8 <__gnu_Unwind_Resume_or_Rethrow>:
10004bb8:	68c2      	ldr	r2, [r0, #12]
10004bba:	b12a      	cbz	r2, 10004bc8 <__gnu_Unwind_Resume_or_Rethrow+0x10>
10004bbc:	f8d1 c03c 	ldr.w	ip, [r1, #60]	; 0x3c
10004bc0:	2200      	movs	r2, #0
10004bc2:	f8c1 c040 	str.w	ip, [r1, #64]	; 0x40
10004bc6:	e727      	b.n	10004a18 <unwind_phase2_forced>
10004bc8:	e796      	b.n	10004af8 <__gnu_Unwind_RaiseException>
10004bca:	bf00      	nop

10004bcc <_Unwind_Complete>:
10004bcc:	4770      	bx	lr
10004bce:	bf00      	nop

10004bd0 <_Unwind_DeleteException>:
10004bd0:	6883      	ldr	r3, [r0, #8]
10004bd2:	4601      	mov	r1, r0
10004bd4:	b10b      	cbz	r3, 10004bda <_Unwind_DeleteException+0xa>
10004bd6:	2001      	movs	r0, #1
10004bd8:	4718      	bx	r3
10004bda:	4770      	bx	lr

10004bdc <_Unwind_VRS_Get>:
10004bdc:	2901      	cmp	r1, #1
10004bde:	d015      	beq.n	10004c0c <_Unwind_VRS_Get+0x30>
10004be0:	d80c      	bhi.n	10004bfc <_Unwind_VRS_Get+0x20>
10004be2:	b98b      	cbnz	r3, 10004c08 <_Unwind_VRS_Get+0x2c>
10004be4:	2a0f      	cmp	r2, #15
10004be6:	bf94      	ite	ls
10004be8:	2100      	movls	r1, #0
10004bea:	2101      	movhi	r1, #1
10004bec:	b961      	cbnz	r1, 10004c08 <_Unwind_VRS_Get+0x2c>
10004bee:	eb00 0282 	add.w	r2, r0, r2, lsl #2
10004bf2:	4608      	mov	r0, r1
10004bf4:	6853      	ldr	r3, [r2, #4]
10004bf6:	9a00      	ldr	r2, [sp, #0]
10004bf8:	6013      	str	r3, [r2, #0]
10004bfa:	4770      	bx	lr
10004bfc:	3903      	subs	r1, #3
10004bfe:	2901      	cmp	r1, #1
10004c00:	bf94      	ite	ls
10004c02:	2001      	movls	r0, #1
10004c04:	2002      	movhi	r0, #2
10004c06:	4770      	bx	lr
10004c08:	2002      	movs	r0, #2
10004c0a:	4770      	bx	lr
10004c0c:	4608      	mov	r0, r1
10004c0e:	4770      	bx	lr

10004c10 <_Unwind_GetGR>:
10004c10:	b510      	push	{r4, lr}
10004c12:	b084      	sub	sp, #16
10004c14:	2300      	movs	r3, #0
10004c16:	460a      	mov	r2, r1
10004c18:	ac03      	add	r4, sp, #12
10004c1a:	4619      	mov	r1, r3
10004c1c:	9400      	str	r4, [sp, #0]
10004c1e:	f7ff ffdd 	bl	10004bdc <_Unwind_VRS_Get>
10004c22:	9803      	ldr	r0, [sp, #12]
10004c24:	b004      	add	sp, #16
10004c26:	bd10      	pop	{r4, pc}

10004c28 <_Unwind_VRS_Set>:
10004c28:	2901      	cmp	r1, #1
10004c2a:	d015      	beq.n	10004c58 <_Unwind_VRS_Set+0x30>
10004c2c:	d80c      	bhi.n	10004c48 <_Unwind_VRS_Set+0x20>
10004c2e:	b98b      	cbnz	r3, 10004c54 <_Unwind_VRS_Set+0x2c>
10004c30:	2a0f      	cmp	r2, #15
10004c32:	bf94      	ite	ls
10004c34:	2100      	movls	r1, #0
10004c36:	2101      	movhi	r1, #1
10004c38:	b961      	cbnz	r1, 10004c54 <_Unwind_VRS_Set+0x2c>
10004c3a:	9b00      	ldr	r3, [sp, #0]
10004c3c:	eb00 0282 	add.w	r2, r0, r2, lsl #2
10004c40:	4608      	mov	r0, r1
10004c42:	681b      	ldr	r3, [r3, #0]
10004c44:	6053      	str	r3, [r2, #4]
10004c46:	4770      	bx	lr
10004c48:	3903      	subs	r1, #3
10004c4a:	2901      	cmp	r1, #1
10004c4c:	bf94      	ite	ls
10004c4e:	2001      	movls	r0, #1
10004c50:	2002      	movhi	r0, #2
10004c52:	4770      	bx	lr
10004c54:	2002      	movs	r0, #2
10004c56:	4770      	bx	lr
10004c58:	4608      	mov	r0, r1
10004c5a:	4770      	bx	lr

10004c5c <_Unwind_SetGR>:
10004c5c:	b510      	push	{r4, lr}
10004c5e:	b084      	sub	sp, #16
10004c60:	2300      	movs	r3, #0
10004c62:	ac03      	add	r4, sp, #12
10004c64:	9203      	str	r2, [sp, #12]
10004c66:	460a      	mov	r2, r1
10004c68:	4619      	mov	r1, r3
10004c6a:	9400      	str	r4, [sp, #0]
10004c6c:	f7ff ffdc 	bl	10004c28 <_Unwind_VRS_Set>
10004c70:	b004      	add	sp, #16
10004c72:	bd10      	pop	{r4, pc}

10004c74 <__gnu_Unwind_Backtrace>:
10004c74:	b5f0      	push	{r4, r5, r6, r7, lr}
10004c76:	6bd3      	ldr	r3, [r2, #60]	; 0x3c
10004c78:	f5ad 7d0f 	sub.w	sp, sp, #572	; 0x23c
10004c7c:	1d14      	adds	r4, r2, #4
10004c7e:	4606      	mov	r6, r0
10004c80:	6413      	str	r3, [r2, #64]	; 0x40
10004c82:	f10d 0c5c 	add.w	ip, sp, #92	; 0x5c
10004c86:	460d      	mov	r5, r1
10004c88:	f04f 37ff 	mov.w	r7, #4294967295
10004c8c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
10004c8e:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
10004c92:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
10004c94:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
10004c98:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
10004c9a:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
10004c9e:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
10004ca2:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}
10004ca6:	9716      	str	r7, [sp, #88]	; 0x58
10004ca8:	e010      	b.n	10004ccc <__gnu_Unwind_Backtrace+0x58>
10004caa:	f7ff ffd7 	bl	10004c5c <_Unwind_SetGR>
10004cae:	4629      	mov	r1, r5
10004cb0:	a816      	add	r0, sp, #88	; 0x58
10004cb2:	47b0      	blx	r6
10004cb4:	4603      	mov	r3, r0
10004cb6:	aa16      	add	r2, sp, #88	; 0x58
10004cb8:	4669      	mov	r1, sp
10004cba:	2008      	movs	r0, #8
10004cbc:	b983      	cbnz	r3, 10004ce0 <__gnu_Unwind_Backtrace+0x6c>
10004cbe:	9b04      	ldr	r3, [sp, #16]
10004cc0:	4798      	blx	r3
10004cc2:	2805      	cmp	r0, #5
10004cc4:	4604      	mov	r4, r0
10004cc6:	d00c      	beq.n	10004ce2 <__gnu_Unwind_Backtrace+0x6e>
10004cc8:	2809      	cmp	r0, #9
10004cca:	d00a      	beq.n	10004ce2 <__gnu_Unwind_Backtrace+0x6e>
10004ccc:	9926      	ldr	r1, [sp, #152]	; 0x98
10004cce:	4668      	mov	r0, sp
10004cd0:	f7ff fdfe 	bl	100048d0 <get_eit_entry>
10004cd4:	4603      	mov	r3, r0
10004cd6:	466a      	mov	r2, sp
10004cd8:	210c      	movs	r1, #12
10004cda:	a816      	add	r0, sp, #88	; 0x58
10004cdc:	2b00      	cmp	r3, #0
10004cde:	d0e4      	beq.n	10004caa <__gnu_Unwind_Backtrace+0x36>
10004ce0:	2409      	movs	r4, #9
10004ce2:	a816      	add	r0, sp, #88	; 0x58
10004ce4:	f7ff fe42 	bl	1000496c <restore_non_core_regs>
10004ce8:	4620      	mov	r0, r4
10004cea:	f50d 7d0f 	add.w	sp, sp, #572	; 0x23c
10004cee:	bdf0      	pop	{r4, r5, r6, r7, pc}

10004cf0 <__gnu_unwind_pr_common>:
10004cf0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10004cf4:	6ccc      	ldr	r4, [r1, #76]	; 0x4c
10004cf6:	b089      	sub	sp, #36	; 0x24
10004cf8:	461e      	mov	r6, r3
10004cfa:	460d      	mov	r5, r1
10004cfc:	f854 3b04 	ldr.w	r3, [r4], #4
10004d00:	4617      	mov	r7, r2
10004d02:	f000 0803 	and.w	r8, r0, #3
10004d06:	9406      	str	r4, [sp, #24]
10004d08:	2e00      	cmp	r6, #0
10004d0a:	d07f      	beq.n	10004e0c <__gnu_unwind_pr_common+0x11c>
10004d0c:	0c1a      	lsrs	r2, r3, #16
10004d0e:	041b      	lsls	r3, r3, #16
10004d10:	f88d 201d 	strb.w	r2, [sp, #29]
10004d14:	b2d2      	uxtb	r2, r2
10004d16:	9305      	str	r3, [sp, #20]
10004d18:	2302      	movs	r3, #2
10004d1a:	eb04 0482 	add.w	r4, r4, r2, lsl #2
10004d1e:	f88d 301c 	strb.w	r3, [sp, #28]
10004d22:	f1b8 0f02 	cmp.w	r8, #2
10004d26:	6d2b      	ldr	r3, [r5, #80]	; 0x50
10004d28:	bf08      	it	eq
10004d2a:	6bac      	ldreq	r4, [r5, #56]	; 0x38
10004d2c:	f013 0301 	ands.w	r3, r3, #1
10004d30:	d008      	beq.n	10004d44 <__gnu_unwind_pr_common+0x54>
10004d32:	a905      	add	r1, sp, #20
10004d34:	4638      	mov	r0, r7
10004d36:	f000 fba1 	bl	1000547c <__gnu_unwind_execute>
10004d3a:	bb90      	cbnz	r0, 10004da2 <__gnu_unwind_pr_common+0xb2>
10004d3c:	2008      	movs	r0, #8
10004d3e:	b009      	add	sp, #36	; 0x24
10004d40:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10004d44:	f8d4 a000 	ldr.w	sl, [r4]
10004d48:	f1ba 0f00 	cmp.w	sl, #0
10004d4c:	d0f1      	beq.n	10004d32 <__gnu_unwind_pr_common+0x42>
10004d4e:	9301      	str	r3, [sp, #4]
10004d50:	f000 0308 	and.w	r3, r0, #8
10004d54:	9302      	str	r3, [sp, #8]
10004d56:	2e02      	cmp	r6, #2
10004d58:	d054      	beq.n	10004e04 <__gnu_unwind_pr_common+0x114>
10004d5a:	f8b4 a000 	ldrh.w	sl, [r4]
10004d5e:	3404      	adds	r4, #4
10004d60:	f834 9c02 	ldrh.w	r9, [r4, #-2]
10004d64:	6cab      	ldr	r3, [r5, #72]	; 0x48
10004d66:	f029 0b01 	bic.w	fp, r9, #1
10004d6a:	210f      	movs	r1, #15
10004d6c:	4638      	mov	r0, r7
10004d6e:	449b      	add	fp, r3
10004d70:	f7ff ff4e 	bl	10004c10 <_Unwind_GetGR>
10004d74:	4583      	cmp	fp, r0
10004d76:	d818      	bhi.n	10004daa <__gnu_unwind_pr_common+0xba>
10004d78:	f02a 0301 	bic.w	r3, sl, #1
10004d7c:	449b      	add	fp, r3
10004d7e:	4583      	cmp	fp, r0
10004d80:	d913      	bls.n	10004daa <__gnu_unwind_pr_common+0xba>
10004d82:	ea4f 0349 	mov.w	r3, r9, lsl #1
10004d86:	f00a 0a01 	and.w	sl, sl, #1
10004d8a:	f003 0302 	and.w	r3, r3, #2
10004d8e:	ea43 030a 	orr.w	r3, r3, sl
10004d92:	2b01      	cmp	r3, #1
10004d94:	f000 80bf 	beq.w	10004f16 <__gnu_unwind_pr_common+0x226>
10004d98:	2b02      	cmp	r3, #2
10004d9a:	f000 8089 	beq.w	10004eb0 <__gnu_unwind_pr_common+0x1c0>
10004d9e:	2b00      	cmp	r3, #0
10004da0:	d04d      	beq.n	10004e3e <__gnu_unwind_pr_common+0x14e>
10004da2:	2009      	movs	r0, #9
10004da4:	b009      	add	sp, #36	; 0x24
10004da6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10004daa:	ea4f 0349 	mov.w	r3, r9, lsl #1
10004dae:	f00a 0a01 	and.w	sl, sl, #1
10004db2:	f003 0302 	and.w	r3, r3, #2
10004db6:	ea43 030a 	orr.w	r3, r3, sl
10004dba:	2b01      	cmp	r3, #1
10004dbc:	d03a      	beq.n	10004e34 <__gnu_unwind_pr_common+0x144>
10004dbe:	2b02      	cmp	r3, #2
10004dc0:	d02a      	beq.n	10004e18 <__gnu_unwind_pr_common+0x128>
10004dc2:	2b00      	cmp	r3, #0
10004dc4:	d1ed      	bne.n	10004da2 <__gnu_unwind_pr_common+0xb2>
10004dc6:	3404      	adds	r4, #4
10004dc8:	f8d4 a000 	ldr.w	sl, [r4]
10004dcc:	f1ba 0f00 	cmp.w	sl, #0
10004dd0:	d1c1      	bne.n	10004d56 <__gnu_unwind_pr_common+0x66>
10004dd2:	a905      	add	r1, sp, #20
10004dd4:	4638      	mov	r0, r7
10004dd6:	f000 fb51 	bl	1000547c <__gnu_unwind_execute>
10004dda:	2800      	cmp	r0, #0
10004ddc:	d1e1      	bne.n	10004da2 <__gnu_unwind_pr_common+0xb2>
10004dde:	9b01      	ldr	r3, [sp, #4]
10004de0:	2b00      	cmp	r3, #0
10004de2:	d0ab      	beq.n	10004d3c <__gnu_unwind_pr_common+0x4c>
10004de4:	210f      	movs	r1, #15
10004de6:	4638      	mov	r0, r7
10004de8:	f7ff ff12 	bl	10004c10 <_Unwind_GetGR>
10004dec:	210e      	movs	r1, #14
10004dee:	4602      	mov	r2, r0
10004df0:	4638      	mov	r0, r7
10004df2:	f7ff ff33 	bl	10004c5c <_Unwind_SetGR>
10004df6:	4638      	mov	r0, r7
10004df8:	4a6e      	ldr	r2, [pc, #440]	; (10004fb4 <__gnu_unwind_pr_common+0x2c4>)
10004dfa:	210f      	movs	r1, #15
10004dfc:	f7ff ff2e 	bl	10004c5c <_Unwind_SetGR>
10004e00:	2007      	movs	r0, #7
10004e02:	e7cf      	b.n	10004da4 <__gnu_unwind_pr_common+0xb4>
10004e04:	f8d4 9004 	ldr.w	r9, [r4, #4]
10004e08:	3408      	adds	r4, #8
10004e0a:	e7ab      	b.n	10004d64 <__gnu_unwind_pr_common+0x74>
10004e0c:	021b      	lsls	r3, r3, #8
10004e0e:	9305      	str	r3, [sp, #20]
10004e10:	2303      	movs	r3, #3
10004e12:	f8ad 301c 	strh.w	r3, [sp, #28]
10004e16:	e784      	b.n	10004d22 <__gnu_unwind_pr_common+0x32>
10004e18:	6823      	ldr	r3, [r4, #0]
10004e1a:	f023 4b00 	bic.w	fp, r3, #2147483648	; 0x80000000
10004e1e:	f1b8 0f00 	cmp.w	r8, #0
10004e22:	d121      	bne.n	10004e68 <__gnu_unwind_pr_common+0x178>
10004e24:	2b00      	cmp	r3, #0
10004e26:	da00      	bge.n	10004e2a <__gnu_unwind_pr_common+0x13a>
10004e28:	3404      	adds	r4, #4
10004e2a:	f10b 0b01 	add.w	fp, fp, #1
10004e2e:	eb04 048b 	add.w	r4, r4, fp, lsl #2
10004e32:	e7c9      	b.n	10004dc8 <__gnu_unwind_pr_common+0xd8>
10004e34:	f1b8 0f00 	cmp.w	r8, #0
10004e38:	d120      	bne.n	10004e7c <__gnu_unwind_pr_common+0x18c>
10004e3a:	3408      	adds	r4, #8
10004e3c:	e7c4      	b.n	10004dc8 <__gnu_unwind_pr_common+0xd8>
10004e3e:	f1b8 0f00 	cmp.w	r8, #0
10004e42:	d0c0      	beq.n	10004dc6 <__gnu_unwind_pr_common+0xd6>
10004e44:	4620      	mov	r0, r4
10004e46:	3404      	adds	r4, #4
10004e48:	f7ff fcf4 	bl	10004834 <selfrel_offset31>
10004e4c:	4606      	mov	r6, r0
10004e4e:	63ac      	str	r4, [r5, #56]	; 0x38
10004e50:	4628      	mov	r0, r5
10004e52:	e000      	b.n	10004e56 <__gnu_unwind_pr_common+0x166>
10004e54:	bf00      	nop
10004e56:	2800      	cmp	r0, #0
10004e58:	d0a3      	beq.n	10004da2 <__gnu_unwind_pr_common+0xb2>
10004e5a:	4638      	mov	r0, r7
10004e5c:	4632      	mov	r2, r6
10004e5e:	210f      	movs	r1, #15
10004e60:	f7ff fefc 	bl	10004c5c <_Unwind_SetGR>
10004e64:	2007      	movs	r0, #7
10004e66:	e79d      	b.n	10004da4 <__gnu_unwind_pr_common+0xb4>
10004e68:	f8d5 9020 	ldr.w	r9, [r5, #32]
10004e6c:	210d      	movs	r1, #13
10004e6e:	4638      	mov	r0, r7
10004e70:	f7ff fece 	bl	10004c10 <_Unwind_GetGR>
10004e74:	4581      	cmp	r9, r0
10004e76:	d079      	beq.n	10004f6c <__gnu_unwind_pr_common+0x27c>
10004e78:	6823      	ldr	r3, [r4, #0]
10004e7a:	e7d3      	b.n	10004e24 <__gnu_unwind_pr_common+0x134>
10004e7c:	f8d5 9020 	ldr.w	r9, [r5, #32]
10004e80:	210d      	movs	r1, #13
10004e82:	4638      	mov	r0, r7
10004e84:	f7ff fec4 	bl	10004c10 <_Unwind_GetGR>
10004e88:	4581      	cmp	r9, r0
10004e8a:	d1d6      	bne.n	10004e3a <__gnu_unwind_pr_common+0x14a>
10004e8c:	6aab      	ldr	r3, [r5, #40]	; 0x28
10004e8e:	429c      	cmp	r4, r3
10004e90:	d1d3      	bne.n	10004e3a <__gnu_unwind_pr_common+0x14a>
10004e92:	4620      	mov	r0, r4
10004e94:	210f      	movs	r1, #15
10004e96:	f7ff fccd 	bl	10004834 <selfrel_offset31>
10004e9a:	4602      	mov	r2, r0
10004e9c:	4638      	mov	r0, r7
10004e9e:	f7ff fedd 	bl	10004c5c <_Unwind_SetGR>
10004ea2:	4638      	mov	r0, r7
10004ea4:	462a      	mov	r2, r5
10004ea6:	2100      	movs	r1, #0
10004ea8:	f7ff fed8 	bl	10004c5c <_Unwind_SetGR>
10004eac:	2007      	movs	r0, #7
10004eae:	e779      	b.n	10004da4 <__gnu_unwind_pr_common+0xb4>
10004eb0:	6823      	ldr	r3, [r4, #0]
10004eb2:	f023 4b00 	bic.w	fp, r3, #2147483648	; 0x80000000
10004eb6:	f1b8 0f00 	cmp.w	r8, #0
10004eba:	d1d5      	bne.n	10004e68 <__gnu_unwind_pr_common+0x178>
10004ebc:	9a02      	ldr	r2, [sp, #8]
10004ebe:	b112      	cbz	r2, 10004ec6 <__gnu_unwind_pr_common+0x1d6>
10004ec0:	f1bb 0f00 	cmp.w	fp, #0
10004ec4:	d1ae      	bne.n	10004e24 <__gnu_unwind_pr_common+0x134>
10004ec6:	f105 0358 	add.w	r3, r5, #88	; 0x58
10004eca:	f8cd 800c 	str.w	r8, [sp, #12]
10004ece:	f104 0a04 	add.w	sl, r4, #4
10004ed2:	46b0      	mov	r8, r6
10004ed4:	f04f 0900 	mov.w	r9, #0
10004ed8:	461e      	mov	r6, r3
10004eda:	e00d      	b.n	10004ef8 <__gnu_unwind_pr_common+0x208>
10004edc:	4650      	mov	r0, sl
10004ede:	9604      	str	r6, [sp, #16]
10004ee0:	2200      	movs	r2, #0
10004ee2:	f7ff fd71 	bl	100049c8 <_Unwind_decode_typeinfo_ptr.constprop.0>
10004ee6:	ab04      	add	r3, sp, #16
10004ee8:	4601      	mov	r1, r0
10004eea:	4628      	mov	r0, r5
10004eec:	f10a 0a04 	add.w	sl, sl, #4
10004ef0:	e000      	b.n	10004ef4 <__gnu_unwind_pr_common+0x204>
10004ef2:	bf00      	nop
10004ef4:	2800      	cmp	r0, #0
10004ef6:	d14a      	bne.n	10004f8e <__gnu_unwind_pr_common+0x29e>
10004ef8:	45d9      	cmp	r9, fp
10004efa:	f109 0901 	add.w	r9, r9, #1
10004efe:	d1ed      	bne.n	10004edc <__gnu_unwind_pr_common+0x1ec>
10004f00:	210d      	movs	r1, #13
10004f02:	4638      	mov	r0, r7
10004f04:	f7ff fe84 	bl	10004c10 <_Unwind_GetGR>
10004f08:	9b04      	ldr	r3, [sp, #16]
10004f0a:	4602      	mov	r2, r0
10004f0c:	2006      	movs	r0, #6
10004f0e:	622a      	str	r2, [r5, #32]
10004f10:	e9c5 3409 	strd	r3, r4, [r5, #36]	; 0x24
10004f14:	e746      	b.n	10004da4 <__gnu_unwind_pr_common+0xb4>
10004f16:	f1b8 0f00 	cmp.w	r8, #0
10004f1a:	d1af      	bne.n	10004e7c <__gnu_unwind_pr_common+0x18c>
10004f1c:	6863      	ldr	r3, [r4, #4]
10004f1e:	6822      	ldr	r2, [r4, #0]
10004f20:	1c99      	adds	r1, r3, #2
10004f22:	ea4f 72d2 	mov.w	r2, r2, lsr #31
10004f26:	f43f af3c 	beq.w	10004da2 <__gnu_unwind_pr_common+0xb2>
10004f2a:	f105 0158 	add.w	r1, r5, #88	; 0x58
10004f2e:	3301      	adds	r3, #1
10004f30:	9104      	str	r1, [sp, #16]
10004f32:	d031      	beq.n	10004f98 <__gnu_unwind_pr_common+0x2a8>
10004f34:	1d20      	adds	r0, r4, #4
10004f36:	f7ff fd47 	bl	100049c8 <_Unwind_decode_typeinfo_ptr.constprop.0>
10004f3a:	ab04      	add	r3, sp, #16
10004f3c:	4601      	mov	r1, r0
10004f3e:	4628      	mov	r0, r5
10004f40:	e000      	b.n	10004f44 <__gnu_unwind_pr_common+0x254>
10004f42:	bf00      	nop
10004f44:	2800      	cmp	r0, #0
10004f46:	f43f af78 	beq.w	10004e3a <__gnu_unwind_pr_common+0x14a>
10004f4a:	4681      	mov	r9, r0
10004f4c:	210d      	movs	r1, #13
10004f4e:	4638      	mov	r0, r7
10004f50:	f7ff fe5e 	bl	10004c10 <_Unwind_GetGR>
10004f54:	f1b9 0f02 	cmp.w	r9, #2
10004f58:	6228      	str	r0, [r5, #32]
10004f5a:	d122      	bne.n	10004fa2 <__gnu_unwind_pr_common+0x2b2>
10004f5c:	462b      	mov	r3, r5
10004f5e:	9a04      	ldr	r2, [sp, #16]
10004f60:	f843 2f2c 	str.w	r2, [r3, #44]!
10004f64:	626b      	str	r3, [r5, #36]	; 0x24
10004f66:	2006      	movs	r0, #6
10004f68:	62ac      	str	r4, [r5, #40]	; 0x28
10004f6a:	e71b      	b.n	10004da4 <__gnu_unwind_pr_common+0xb4>
10004f6c:	6aab      	ldr	r3, [r5, #40]	; 0x28
10004f6e:	429c      	cmp	r4, r3
10004f70:	d182      	bne.n	10004e78 <__gnu_unwind_pr_common+0x188>
10004f72:	2304      	movs	r3, #4
10004f74:	2200      	movs	r2, #0
10004f76:	f8c5 b028 	str.w	fp, [r5, #40]	; 0x28
10004f7a:	e9c5 230b 	strd	r2, r3, [r5, #44]	; 0x2c
10004f7e:	18e3      	adds	r3, r4, r3
10004f80:	636b      	str	r3, [r5, #52]	; 0x34
10004f82:	6823      	ldr	r3, [r4, #0]
10004f84:	2b00      	cmp	r3, #0
10004f86:	db0f      	blt.n	10004fa8 <__gnu_unwind_pr_common+0x2b8>
10004f88:	2301      	movs	r3, #1
10004f8a:	9301      	str	r3, [sp, #4]
10004f8c:	e74d      	b.n	10004e2a <__gnu_unwind_pr_common+0x13a>
10004f8e:	4646      	mov	r6, r8
10004f90:	6823      	ldr	r3, [r4, #0]
10004f92:	f8dd 800c 	ldr.w	r8, [sp, #12]
10004f96:	e745      	b.n	10004e24 <__gnu_unwind_pr_common+0x134>
10004f98:	210d      	movs	r1, #13
10004f9a:	4638      	mov	r0, r7
10004f9c:	f7ff fe38 	bl	10004c10 <_Unwind_GetGR>
10004fa0:	6228      	str	r0, [r5, #32]
10004fa2:	9b04      	ldr	r3, [sp, #16]
10004fa4:	626b      	str	r3, [r5, #36]	; 0x24
10004fa6:	e7de      	b.n	10004f66 <__gnu_unwind_pr_common+0x276>
10004fa8:	f10b 0001 	add.w	r0, fp, #1
10004fac:	210f      	movs	r1, #15
10004fae:	eb04 0080 	add.w	r0, r4, r0, lsl #2
10004fb2:	e770      	b.n	10004e96 <__gnu_unwind_pr_common+0x1a6>
10004fb4:	00000000 	andeq	r0, r0, r0

10004fb8 <__aeabi_unwind_cpp_pr0>:
10004fb8:	2300      	movs	r3, #0
10004fba:	e699      	b.n	10004cf0 <__gnu_unwind_pr_common>

10004fbc <__aeabi_unwind_cpp_pr1>:
10004fbc:	2301      	movs	r3, #1
10004fbe:	e697      	b.n	10004cf0 <__gnu_unwind_pr_common>

10004fc0 <__aeabi_unwind_cpp_pr2>:
10004fc0:	2302      	movs	r3, #2
10004fc2:	e695      	b.n	10004cf0 <__gnu_unwind_pr_common>

10004fc4 <_Unwind_VRS_Pop>:
10004fc4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
10004fc8:	4606      	mov	r6, r0
10004fca:	b0c3      	sub	sp, #268	; 0x10c
10004fcc:	4615      	mov	r5, r2
10004fce:	461c      	mov	r4, r3
10004fd0:	2904      	cmp	r1, #4
10004fd2:	f200 80c2 	bhi.w	1000515a <_Unwind_VRS_Pop+0x196>
10004fd6:	e8df f001 	tbb	[pc, r1]
10004fda:	2cc059a3 			; <UNDEFINED> instruction: 0x2cc059a3
10004fde:	2c000003 	stccs	0, cr0, [r0], {3}
10004fe2:	f040 80ba 	bne.w	1000515a <_Unwind_VRS_Pop+0x196>
10004fe6:	2a10      	cmp	r2, #16
10004fe8:	f200 80b7 	bhi.w	1000515a <_Unwind_VRS_Pop+0x196>
10004fec:	6803      	ldr	r3, [r0, #0]
10004fee:	06df      	lsls	r7, r3, #27
10004ff0:	f100 80b7 	bmi.w	10005162 <_Unwind_VRS_Pop+0x19e>
10004ff4:	af20      	add	r7, sp, #128	; 0x80
10004ff6:	4638      	mov	r0, r7
10004ff8:	f000 f9b0 	bl	1000535c <__gnu_Unwind_Save_WMMXC>
10004ffc:	6bb4      	ldr	r4, [r6, #56]	; 0x38
10004ffe:	4639      	mov	r1, r7
10005000:	2300      	movs	r3, #0
10005002:	f04f 0c01 	mov.w	ip, #1
10005006:	fa0c f203 	lsl.w	r2, ip, r3
1000500a:	4620      	mov	r0, r4
1000500c:	3301      	adds	r3, #1
1000500e:	422a      	tst	r2, r5
10005010:	d003      	beq.n	1000501a <_Unwind_VRS_Pop+0x56>
10005012:	f850 2b04 	ldr.w	r2, [r0], #4
10005016:	4604      	mov	r4, r0
10005018:	600a      	str	r2, [r1, #0]
1000501a:	2b04      	cmp	r3, #4
1000501c:	f101 0104 	add.w	r1, r1, #4
10005020:	d1f1      	bne.n	10005006 <_Unwind_VRS_Pop+0x42>
10005022:	4638      	mov	r0, r7
10005024:	63b4      	str	r4, [r6, #56]	; 0x38
10005026:	f000 f98f 	bl	10005348 <__gnu_Unwind_Restore_WMMXC>
1000502a:	2000      	movs	r0, #0
1000502c:	b043      	add	sp, #268	; 0x10c
1000502e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
10005032:	2c03      	cmp	r4, #3
10005034:	f040 8091 	bne.w	1000515a <_Unwind_VRS_Pop+0x196>
10005038:	fa1f f882 	uxth.w	r8, r2
1000503c:	0c14      	lsrs	r4, r2, #16
1000503e:	eb08 4512 	add.w	r5, r8, r2, lsr #16
10005042:	2d10      	cmp	r5, #16
10005044:	f200 8089 	bhi.w	1000515a <_Unwind_VRS_Pop+0x196>
10005048:	6803      	ldr	r3, [r0, #0]
1000504a:	071a      	lsls	r2, r3, #28
1000504c:	f100 80cd 	bmi.w	100051ea <_Unwind_VRS_Pop+0x226>
10005050:	af20      	add	r7, sp, #128	; 0x80
10005052:	4638      	mov	r0, r7
10005054:	f000 f956 	bl	10005304 <__gnu_Unwind_Save_WMMXD>
10005058:	6bb5      	ldr	r5, [r6, #56]	; 0x38
1000505a:	eb07 01c4 	add.w	r1, r7, r4, lsl #3
1000505e:	f1b8 0f00 	cmp.w	r8, #0
10005062:	d00b      	beq.n	1000507c <_Unwind_VRS_Pop+0xb8>
10005064:	460b      	mov	r3, r1
10005066:	eb01 01c8 	add.w	r1, r1, r8, lsl #3
1000506a:	ea4f 08c8 	mov.w	r8, r8, lsl #3
1000506e:	1ae8      	subs	r0, r5, r3
10005070:	581a      	ldr	r2, [r3, r0]
10005072:	f843 2b04 	str.w	r2, [r3], #4
10005076:	428b      	cmp	r3, r1
10005078:	d1fa      	bne.n	10005070 <_Unwind_VRS_Pop+0xac>
1000507a:	4445      	add	r5, r8
1000507c:	4638      	mov	r0, r7
1000507e:	63b5      	str	r5, [r6, #56]	; 0x38
10005080:	f000 f91e 	bl	100052c0 <__gnu_Unwind_Restore_WMMXD>
10005084:	2000      	movs	r0, #0
10005086:	b043      	add	sp, #268	; 0x10c
10005088:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
1000508c:	f004 03fb 	and.w	r3, r4, #251	; 0xfb
10005090:	ea4f 4812 	mov.w	r8, r2, lsr #16
10005094:	b295      	uxth	r5, r2
10005096:	2b01      	cmp	r3, #1
10005098:	d15f      	bne.n	1000515a <_Unwind_VRS_Pop+0x196>
1000509a:	2c01      	cmp	r4, #1
1000509c:	eb08 0905 	add.w	r9, r8, r5
100050a0:	d058      	beq.n	10005154 <_Unwind_VRS_Pop+0x190>
100050a2:	f1b9 0f20 	cmp.w	r9, #32
100050a6:	d858      	bhi.n	1000515a <_Unwind_VRS_Pop+0x196>
100050a8:	f1b8 0f0f 	cmp.w	r8, #15
100050ac:	d975      	bls.n	1000519a <_Unwind_VRS_Pop+0x1d6>
100050ae:	2c05      	cmp	r4, #5
100050b0:	46a9      	mov	r9, r5
100050b2:	f000 80a4 	beq.w	100051fe <_Unwind_VRS_Pop+0x23a>
100050b6:	2d00      	cmp	r5, #0
100050b8:	d14f      	bne.n	1000515a <_Unwind_VRS_Pop+0x196>
100050ba:	6bb3      	ldr	r3, [r6, #56]	; 0x38
100050bc:	b365      	cbz	r5, 10005118 <_Unwind_VRS_Pop+0x154>
100050be:	af20      	add	r7, sp, #128	; 0x80
100050c0:	f04f 0900 	mov.w	r9, #0
100050c4:	eb07 07c8 	add.w	r7, r7, r8, lsl #3
100050c8:	eb03 05c5 	add.w	r5, r3, r5, lsl #3
100050cc:	3f04      	subs	r7, #4
100050ce:	f853 1b04 	ldr.w	r1, [r3], #4
100050d2:	429d      	cmp	r5, r3
100050d4:	f847 1f04 	str.w	r1, [r7, #4]!
100050d8:	d1f9      	bne.n	100050ce <_Unwind_VRS_Pop+0x10a>
100050da:	f1b9 0f00 	cmp.w	r9, #0
100050de:	d00f      	beq.n	10005100 <_Unwind_VRS_Pop+0x13c>
100050e0:	466f      	mov	r7, sp
100050e2:	4641      	mov	r1, r8
100050e4:	eb03 05c9 	add.w	r5, r3, r9, lsl #3
100050e8:	2910      	cmp	r1, #16
100050ea:	bf38      	it	cc
100050ec:	2110      	movcc	r1, #16
100050ee:	eb07 01c1 	add.w	r1, r7, r1, lsl #3
100050f2:	3984      	subs	r1, #132	; 0x84
100050f4:	f853 0b04 	ldr.w	r0, [r3], #4
100050f8:	429d      	cmp	r5, r3
100050fa:	f841 0f04 	str.w	r0, [r1, #4]!
100050fe:	d1f9      	bne.n	100050f4 <_Unwind_VRS_Pop+0x130>
10005100:	2c01      	cmp	r4, #1
10005102:	d07a      	beq.n	100051fa <_Unwind_VRS_Pop+0x236>
10005104:	f1b8 0f0f 	cmp.w	r8, #15
10005108:	63b5      	str	r5, [r6, #56]	; 0x38
1000510a:	d96a      	bls.n	100051e2 <_Unwind_VRS_Pop+0x21e>
1000510c:	f1b9 0f00 	cmp.w	r9, #0
10005110:	d002      	beq.n	10005118 <_Unwind_VRS_Pop+0x154>
10005112:	4668      	mov	r0, sp
10005114:	f000 f8cc 	bl	100052b0 <__gnu_Unwind_Restore_VFP_D_16_to_31>
10005118:	2000      	movs	r0, #0
1000511a:	b043      	add	sp, #268	; 0x10c
1000511c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
10005120:	b9dc      	cbnz	r4, 1000515a <_Unwind_VRS_Pop+0x196>
10005122:	6b87      	ldr	r7, [r0, #56]	; 0x38
10005124:	4623      	mov	r3, r4
10005126:	fa1f fc82 	uxth.w	ip, r2
1000512a:	2001      	movs	r0, #1
1000512c:	1d34      	adds	r4, r6, #4
1000512e:	fa00 f103 	lsl.w	r1, r0, r3
10005132:	463a      	mov	r2, r7
10005134:	ea11 0f0c 	tst.w	r1, ip
10005138:	d004      	beq.n	10005144 <_Unwind_VRS_Pop+0x180>
1000513a:	f852 1b04 	ldr.w	r1, [r2], #4
1000513e:	4617      	mov	r7, r2
10005140:	f844 1023 	str.w	r1, [r4, r3, lsl #2]
10005144:	3301      	adds	r3, #1
10005146:	2b10      	cmp	r3, #16
10005148:	d1f1      	bne.n	1000512e <_Unwind_VRS_Pop+0x16a>
1000514a:	f415 5000 	ands.w	r0, r5, #8192	; 0x2000
1000514e:	d1e3      	bne.n	10005118 <_Unwind_VRS_Pop+0x154>
10005150:	63b7      	str	r7, [r6, #56]	; 0x38
10005152:	e003      	b.n	1000515c <_Unwind_VRS_Pop+0x198>
10005154:	f1b9 0f10 	cmp.w	r9, #16
10005158:	d90b      	bls.n	10005172 <_Unwind_VRS_Pop+0x1ae>
1000515a:	2002      	movs	r0, #2
1000515c:	b043      	add	sp, #268	; 0x10c
1000515e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
10005162:	f023 0310 	bic.w	r3, r3, #16
10005166:	f500 70e8 	add.w	r0, r0, #464	; 0x1d0
1000516a:	6033      	str	r3, [r6, #0]
1000516c:	f000 f8f6 	bl	1000535c <__gnu_Unwind_Save_WMMXC>
10005170:	e740      	b.n	10004ff4 <_Unwind_VRS_Pop+0x30>
10005172:	f1b8 0f0f 	cmp.w	r8, #15
10005176:	d8f0      	bhi.n	1000515a <_Unwind_VRS_Pop+0x196>
10005178:	6803      	ldr	r3, [r0, #0]
1000517a:	07d8      	lsls	r0, r3, #31
1000517c:	d450      	bmi.n	10005220 <_Unwind_VRS_Pop+0x25c>
1000517e:	af20      	add	r7, sp, #128	; 0x80
10005180:	4638      	mov	r0, r7
10005182:	f000 f889 	bl	10005298 <__gnu_Unwind_Save_VFP>
10005186:	6bb3      	ldr	r3, [r6, #56]	; 0x38
10005188:	2d00      	cmp	r5, #0
1000518a:	d199      	bne.n	100050c0 <_Unwind_VRS_Pop+0xfc>
1000518c:	461d      	mov	r5, r3
1000518e:	3504      	adds	r5, #4
10005190:	4638      	mov	r0, r7
10005192:	63b5      	str	r5, [r6, #56]	; 0x38
10005194:	f000 f87c 	bl	10005290 <__gnu_Unwind_Restore_VFP>
10005198:	e7be      	b.n	10005118 <_Unwind_VRS_Pop+0x154>
1000519a:	f1b9 0f10 	cmp.w	r9, #16
1000519e:	d958      	bls.n	10005252 <_Unwind_VRS_Pop+0x28e>
100051a0:	2c05      	cmp	r4, #5
100051a2:	d1da      	bne.n	1000515a <_Unwind_VRS_Pop+0x196>
100051a4:	6833      	ldr	r3, [r6, #0]
100051a6:	f1a9 0910 	sub.w	r9, r9, #16
100051aa:	07dd      	lsls	r5, r3, #31
100051ac:	d509      	bpl.n	100051c2 <_Unwind_VRS_Pop+0x1fe>
100051ae:	f023 0301 	bic.w	r3, r3, #1
100051b2:	4630      	mov	r0, r6
100051b4:	f043 0302 	orr.w	r3, r3, #2
100051b8:	f840 3b48 	str.w	r3, [r0], #72
100051bc:	f000 f874 	bl	100052a8 <__gnu_Unwind_Save_VFP_D>
100051c0:	6833      	ldr	r3, [r6, #0]
100051c2:	0759      	lsls	r1, r3, #29
100051c4:	d421      	bmi.n	1000520a <_Unwind_VRS_Pop+0x246>
100051c6:	a820      	add	r0, sp, #128	; 0x80
100051c8:	f000 f86e 	bl	100052a8 <__gnu_Unwind_Save_VFP_D>
100051cc:	466f      	mov	r7, sp
100051ce:	f1c8 0510 	rsb	r5, r8, #16
100051d2:	4638      	mov	r0, r7
100051d4:	f000 f870 	bl	100052b8 <__gnu_Unwind_Save_VFP_D_16_to_31>
100051d8:	2d00      	cmp	r5, #0
100051da:	6bb3      	ldr	r3, [r6, #56]	; 0x38
100051dc:	dd81      	ble.n	100050e2 <_Unwind_VRS_Pop+0x11e>
100051de:	af20      	add	r7, sp, #128	; 0x80
100051e0:	e770      	b.n	100050c4 <_Unwind_VRS_Pop+0x100>
100051e2:	a820      	add	r0, sp, #128	; 0x80
100051e4:	f000 f85c 	bl	100052a0 <__gnu_Unwind_Restore_VFP_D>
100051e8:	e790      	b.n	1000510c <_Unwind_VRS_Pop+0x148>
100051ea:	f023 0308 	bic.w	r3, r3, #8
100051ee:	f500 70a8 	add.w	r0, r0, #336	; 0x150
100051f2:	6033      	str	r3, [r6, #0]
100051f4:	f000 f886 	bl	10005304 <__gnu_Unwind_Save_WMMXD>
100051f8:	e72a      	b.n	10005050 <_Unwind_VRS_Pop+0x8c>
100051fa:	af20      	add	r7, sp, #128	; 0x80
100051fc:	e7c7      	b.n	1000518e <_Unwind_VRS_Pop+0x1ca>
100051fe:	2d00      	cmp	r5, #0
10005200:	f43f af5b 	beq.w	100050ba <_Unwind_VRS_Pop+0xf6>
10005204:	6833      	ldr	r3, [r6, #0]
10005206:	075a      	lsls	r2, r3, #29
10005208:	d5e0      	bpl.n	100051cc <_Unwind_VRS_Pop+0x208>
1000520a:	f023 0304 	bic.w	r3, r3, #4
1000520e:	4630      	mov	r0, r6
10005210:	f840 3bd0 	str.w	r3, [r0], #208
10005214:	f000 f850 	bl	100052b8 <__gnu_Unwind_Save_VFP_D_16_to_31>
10005218:	f1b8 0f0f 	cmp.w	r8, #15
1000521c:	d8d6      	bhi.n	100051cc <_Unwind_VRS_Pop+0x208>
1000521e:	e7d2      	b.n	100051c6 <_Unwind_VRS_Pop+0x202>
10005220:	f023 0303 	bic.w	r3, r3, #3
10005224:	4630      	mov	r0, r6
10005226:	f840 3b48 	str.w	r3, [r0], #72
1000522a:	f000 f835 	bl	10005298 <__gnu_Unwind_Save_VFP>
1000522e:	2c01      	cmp	r4, #1
10005230:	d0a5      	beq.n	1000517e <_Unwind_VRS_Pop+0x1ba>
10005232:	f1b8 0f0f 	cmp.w	r8, #15
10005236:	f63f af40 	bhi.w	100050ba <_Unwind_VRS_Pop+0xf6>
1000523a:	af20      	add	r7, sp, #128	; 0x80
1000523c:	4638      	mov	r0, r7
1000523e:	f000 f833 	bl	100052a8 <__gnu_Unwind_Save_VFP_D>
10005242:	6bb3      	ldr	r3, [r6, #56]	; 0x38
10005244:	2d00      	cmp	r5, #0
10005246:	f47f af3b 	bne.w	100050c0 <_Unwind_VRS_Pop+0xfc>
1000524a:	4638      	mov	r0, r7
1000524c:	f000 f828 	bl	100052a0 <__gnu_Unwind_Restore_VFP_D>
10005250:	e762      	b.n	10005118 <_Unwind_VRS_Pop+0x154>
10005252:	6833      	ldr	r3, [r6, #0]
10005254:	07d9      	lsls	r1, r3, #31
10005256:	d5ea      	bpl.n	1000522e <_Unwind_VRS_Pop+0x26a>
10005258:	2c05      	cmp	r4, #5
1000525a:	d1e1      	bne.n	10005220 <_Unwind_VRS_Pop+0x25c>
1000525c:	f023 0301 	bic.w	r3, r3, #1
10005260:	4630      	mov	r0, r6
10005262:	af20      	add	r7, sp, #128	; 0x80
10005264:	f043 0302 	orr.w	r3, r3, #2
10005268:	f840 3b48 	str.w	r3, [r0], #72
1000526c:	f000 f81c 	bl	100052a8 <__gnu_Unwind_Save_VFP_D>
10005270:	4638      	mov	r0, r7
10005272:	f000 f819 	bl	100052a8 <__gnu_Unwind_Save_VFP_D>
10005276:	e7e4      	b.n	10005242 <_Unwind_VRS_Pop+0x27e>

10005278 <__restore_core_regs>:
10005278:	f100 0134 	add.w	r1, r0, #52	; 0x34
1000527c:	e891 0038 	ldmia.w	r1, {r3, r4, r5}
10005280:	469c      	mov	ip, r3
10005282:	46a6      	mov	lr, r4
10005284:	f84c 5d04 	str.w	r5, [ip, #-4]!
10005288:	e890 0fff 	ldmia.w	r0, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp}
1000528c:	46e5      	mov	sp, ip
1000528e:	bd00      	pop	{pc}

10005290 <__gnu_Unwind_Restore_VFP>:
10005290:	ec90 0b21 	fldmiax	r0, {d0-d15}	;@ Deprecated
10005294:	4770      	bx	lr
10005296:	bf00      	nop

10005298 <__gnu_Unwind_Save_VFP>:
10005298:	ec80 0b21 	fstmiax	r0, {d0-d15}	;@ Deprecated
1000529c:	4770      	bx	lr
1000529e:	bf00      	nop

100052a0 <__gnu_Unwind_Restore_VFP_D>:
100052a0:	ec90 0b20 	vldmia	r0, {d0-d15}
100052a4:	4770      	bx	lr
100052a6:	bf00      	nop

100052a8 <__gnu_Unwind_Save_VFP_D>:
100052a8:	ec80 0b20 	vstmia	r0, {d0-d15}
100052ac:	4770      	bx	lr
100052ae:	bf00      	nop

100052b0 <__gnu_Unwind_Restore_VFP_D_16_to_31>:
100052b0:	ecd0 0b20 	vldmia	r0, {d16-d31}
100052b4:	4770      	bx	lr
100052b6:	bf00      	nop

100052b8 <__gnu_Unwind_Save_VFP_D_16_to_31>:
100052b8:	ecc0 0b20 	vstmia	r0, {d16-d31}
100052bc:	4770      	bx	lr
100052be:	bf00      	nop

100052c0 <__gnu_Unwind_Restore_WMMXD>:
100052c0:	ecf0 0102 	ldfe	f0, [r0], #8
100052c4:	ecf0 1102 	ldfe	f1, [r0], #8
100052c8:	ecf0 2102 	ldfe	f2, [r0], #8
100052cc:	ecf0 3102 	ldfe	f3, [r0], #8
100052d0:	ecf0 4102 	ldfe	f4, [r0], #8
100052d4:	ecf0 5102 	ldfe	f5, [r0], #8
100052d8:	ecf0 6102 	ldfe	f6, [r0], #8
100052dc:	ecf0 7102 	ldfe	f7, [r0], #8
100052e0:	ecf0 8102 	ldfp	f0, [r0], #8
100052e4:	ecf0 9102 	ldfp	f1, [r0], #8
100052e8:	ecf0 a102 	ldfp	f2, [r0], #8
100052ec:	ecf0 b102 	ldfp	f3, [r0], #8
100052f0:	ecf0 c102 	ldfp	f4, [r0], #8
100052f4:	ecf0 d102 	ldfp	f5, [r0], #8
100052f8:	ecf0 e102 	ldfp	f6, [r0], #8
100052fc:	ecf0 f102 	ldfp	f7, [r0], #8
10005300:	4770      	bx	lr
10005302:	bf00      	nop

10005304 <__gnu_Unwind_Save_WMMXD>:
10005304:	ece0 0102 	stfe	f0, [r0], #8
10005308:	ece0 1102 	stfe	f1, [r0], #8
1000530c:	ece0 2102 	stfe	f2, [r0], #8
10005310:	ece0 3102 	stfe	f3, [r0], #8
10005314:	ece0 4102 	stfe	f4, [r0], #8
10005318:	ece0 5102 	stfe	f5, [r0], #8
1000531c:	ece0 6102 	stfe	f6, [r0], #8
10005320:	ece0 7102 	stfe	f7, [r0], #8
10005324:	ece0 8102 	stfp	f0, [r0], #8
10005328:	ece0 9102 	stfp	f1, [r0], #8
1000532c:	ece0 a102 	stfp	f2, [r0], #8
10005330:	ece0 b102 	stfp	f3, [r0], #8
10005334:	ece0 c102 	stfp	f4, [r0], #8
10005338:	ece0 d102 	stfp	f5, [r0], #8
1000533c:	ece0 e102 	stfp	f6, [r0], #8
10005340:	ece0 f102 	stfp	f7, [r0], #8
10005344:	4770      	bx	lr
10005346:	bf00      	nop

10005348 <__gnu_Unwind_Restore_WMMXC>:
10005348:	fcb0 8101 	ldc2	1, cr8, [r0], #4
1000534c:	fcb0 9101 	ldc2	1, cr9, [r0], #4
10005350:	fcb0 a101 	ldc2	1, cr10, [r0], #4
10005354:	fcb0 b101 	ldc2	1, cr11, [r0], #4
10005358:	4770      	bx	lr
1000535a:	bf00      	nop

1000535c <__gnu_Unwind_Save_WMMXC>:
1000535c:	fca0 8101 	stc2	1, cr8, [r0], #4
10005360:	fca0 9101 	stc2	1, cr9, [r0], #4
10005364:	fca0 a101 	stc2	1, cr10, [r0], #4
10005368:	fca0 b101 	stc2	1, cr11, [r0], #4
1000536c:	4770      	bx	lr
1000536e:	bf00      	nop

10005370 <_Unwind_RaiseException>:
10005370:	46ec      	mov	ip, sp
10005372:	b500      	push	{lr}
10005374:	e92d 5000 	stmdb	sp!, {ip, lr}
10005378:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
1000537c:	f04f 0300 	mov.w	r3, #0
10005380:	e92d 000c 	stmdb	sp!, {r2, r3}
10005384:	a901      	add	r1, sp, #4
10005386:	f7ff fbb7 	bl	10004af8 <__gnu_Unwind_RaiseException>
1000538a:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
1000538e:	b012      	add	sp, #72	; 0x48
10005390:	4770      	bx	lr
10005392:	bf00      	nop

10005394 <_Unwind_Resume>:
10005394:	46ec      	mov	ip, sp
10005396:	b500      	push	{lr}
10005398:	e92d 5000 	stmdb	sp!, {ip, lr}
1000539c:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
100053a0:	f04f 0300 	mov.w	r3, #0
100053a4:	e92d 000c 	stmdb	sp!, {r2, r3}
100053a8:	a901      	add	r1, sp, #4
100053aa:	f7ff fbe3 	bl	10004b74 <__gnu_Unwind_Resume>
100053ae:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
100053b2:	b012      	add	sp, #72	; 0x48
100053b4:	4770      	bx	lr
100053b6:	bf00      	nop

100053b8 <_Unwind_Resume_or_Rethrow>:
100053b8:	46ec      	mov	ip, sp
100053ba:	b500      	push	{lr}
100053bc:	e92d 5000 	stmdb	sp!, {ip, lr}
100053c0:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
100053c4:	f04f 0300 	mov.w	r3, #0
100053c8:	e92d 000c 	stmdb	sp!, {r2, r3}
100053cc:	a901      	add	r1, sp, #4
100053ce:	f7ff fbf3 	bl	10004bb8 <__gnu_Unwind_Resume_or_Rethrow>
100053d2:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
100053d6:	b012      	add	sp, #72	; 0x48
100053d8:	4770      	bx	lr
100053da:	bf00      	nop

100053dc <_Unwind_ForcedUnwind>:
100053dc:	46ec      	mov	ip, sp
100053de:	b500      	push	{lr}
100053e0:	e92d 5000 	stmdb	sp!, {ip, lr}
100053e4:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
100053e8:	f04f 0300 	mov.w	r3, #0
100053ec:	e92d 000c 	stmdb	sp!, {r2, r3}
100053f0:	ab01      	add	r3, sp, #4
100053f2:	f7ff fbb5 	bl	10004b60 <__gnu_Unwind_ForcedUnwind>
100053f6:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
100053fa:	b012      	add	sp, #72	; 0x48
100053fc:	4770      	bx	lr
100053fe:	bf00      	nop

10005400 <_Unwind_Backtrace>:
10005400:	46ec      	mov	ip, sp
10005402:	b500      	push	{lr}
10005404:	e92d 5000 	stmdb	sp!, {ip, lr}
10005408:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
1000540c:	f04f 0300 	mov.w	r3, #0
10005410:	e92d 000c 	stmdb	sp!, {r2, r3}
10005414:	aa01      	add	r2, sp, #4
10005416:	f7ff fc2d 	bl	10004c74 <__gnu_Unwind_Backtrace>
1000541a:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
1000541e:	b012      	add	sp, #72	; 0x48
10005420:	4770      	bx	lr
10005422:	bf00      	nop

10005424 <next_unwind_byte>:
10005424:	7a02      	ldrb	r2, [r0, #8]
10005426:	4603      	mov	r3, r0
10005428:	b98a      	cbnz	r2, 1000544e <next_unwind_byte+0x2a>
1000542a:	7a42      	ldrb	r2, [r0, #9]
1000542c:	b1b2      	cbz	r2, 1000545c <next_unwind_byte+0x38>
1000542e:	6841      	ldr	r1, [r0, #4]
10005430:	3a01      	subs	r2, #1
10005432:	f04f 0c03 	mov.w	ip, #3
10005436:	b410      	push	{r4}
10005438:	7242      	strb	r2, [r0, #9]
1000543a:	1d0c      	adds	r4, r1, #4
1000543c:	6808      	ldr	r0, [r1, #0]
1000543e:	f883 c008 	strb.w	ip, [r3, #8]
10005442:	0202      	lsls	r2, r0, #8
10005444:	605c      	str	r4, [r3, #4]
10005446:	0e00      	lsrs	r0, r0, #24
10005448:	bc10      	pop	{r4}
1000544a:	601a      	str	r2, [r3, #0]
1000544c:	4770      	bx	lr
1000544e:	6800      	ldr	r0, [r0, #0]
10005450:	3a01      	subs	r2, #1
10005452:	721a      	strb	r2, [r3, #8]
10005454:	0202      	lsls	r2, r0, #8
10005456:	0e00      	lsrs	r0, r0, #24
10005458:	601a      	str	r2, [r3, #0]
1000545a:	4770      	bx	lr
1000545c:	20b0      	movs	r0, #176	; 0xb0
1000545e:	4770      	bx	lr

10005460 <_Unwind_GetGR.constprop.0>:
10005460:	b510      	push	{r4, lr}
10005462:	b084      	sub	sp, #16
10005464:	2300      	movs	r3, #0
10005466:	220c      	movs	r2, #12
10005468:	ac03      	add	r4, sp, #12
1000546a:	4619      	mov	r1, r3
1000546c:	9400      	str	r4, [sp, #0]
1000546e:	f7ff fbb5 	bl	10004bdc <_Unwind_VRS_Get>
10005472:	9803      	ldr	r0, [sp, #12]
10005474:	b004      	add	sp, #16
10005476:	bd10      	pop	{r4, pc}

10005478 <unwind_UCB_from_context>:
10005478:	e7f2      	b.n	10005460 <_Unwind_GetGR.constprop.0>
1000547a:	bf00      	nop

1000547c <__gnu_unwind_execute>:
1000547c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
10005480:	f04f 0800 	mov.w	r8, #0
10005484:	b085      	sub	sp, #20
10005486:	4606      	mov	r6, r0
10005488:	460d      	mov	r5, r1
1000548a:	4628      	mov	r0, r5
1000548c:	f7ff ffca 	bl	10005424 <next_unwind_byte>
10005490:	28b0      	cmp	r0, #176	; 0xb0
10005492:	4604      	mov	r4, r0
10005494:	f000 80bc 	beq.w	10005610 <__gnu_unwind_execute+0x194>
10005498:	0607      	lsls	r7, r0, #24
1000549a:	d520      	bpl.n	100054de <__gnu_unwind_execute+0x62>
1000549c:	f000 03f0 	and.w	r3, r0, #240	; 0xf0
100054a0:	2b80      	cmp	r3, #128	; 0x80
100054a2:	d04e      	beq.n	10005542 <__gnu_unwind_execute+0xc6>
100054a4:	2b90      	cmp	r3, #144	; 0x90
100054a6:	d037      	beq.n	10005518 <__gnu_unwind_execute+0x9c>
100054a8:	2ba0      	cmp	r3, #160	; 0xa0
100054aa:	d061      	beq.n	10005570 <__gnu_unwind_execute+0xf4>
100054ac:	2bb0      	cmp	r3, #176	; 0xb0
100054ae:	d076      	beq.n	1000559e <__gnu_unwind_execute+0x122>
100054b0:	2bc0      	cmp	r3, #192	; 0xc0
100054b2:	f000 808d 	beq.w	100055d0 <__gnu_unwind_execute+0x154>
100054b6:	f000 03f8 	and.w	r3, r0, #248	; 0xf8
100054ba:	2bd0      	cmp	r3, #208	; 0xd0
100054bc:	d10b      	bne.n	100054d6 <__gnu_unwind_execute+0x5a>
100054be:	f000 0207 	and.w	r2, r0, #7
100054c2:	2305      	movs	r3, #5
100054c4:	2101      	movs	r1, #1
100054c6:	4630      	mov	r0, r6
100054c8:	3201      	adds	r2, #1
100054ca:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
100054ce:	f7ff fd79 	bl	10004fc4 <_Unwind_VRS_Pop>
100054d2:	2800      	cmp	r0, #0
100054d4:	d0d9      	beq.n	1000548a <__gnu_unwind_execute+0xe>
100054d6:	2009      	movs	r0, #9
100054d8:	b005      	add	sp, #20
100054da:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
100054de:	0083      	lsls	r3, r0, #2
100054e0:	f10d 090c 	add.w	r9, sp, #12
100054e4:	220d      	movs	r2, #13
100054e6:	4630      	mov	r0, r6
100054e8:	b2db      	uxtb	r3, r3
100054ea:	f8cd 9000 	str.w	r9, [sp]
100054ee:	1d1f      	adds	r7, r3, #4
100054f0:	2300      	movs	r3, #0
100054f2:	4619      	mov	r1, r3
100054f4:	f7ff fb72 	bl	10004bdc <_Unwind_VRS_Get>
100054f8:	9b03      	ldr	r3, [sp, #12]
100054fa:	0660      	lsls	r0, r4, #25
100054fc:	f04f 020d 	mov.w	r2, #13
10005500:	4630      	mov	r0, r6
10005502:	f8cd 9000 	str.w	r9, [sp]
10005506:	bf4c      	ite	mi
10005508:	1bdf      	submi	r7, r3, r7
1000550a:	18ff      	addpl	r7, r7, r3
1000550c:	2300      	movs	r3, #0
1000550e:	9703      	str	r7, [sp, #12]
10005510:	4619      	mov	r1, r3
10005512:	f7ff fb89 	bl	10004c28 <_Unwind_VRS_Set>
10005516:	e7b8      	b.n	1000548a <__gnu_unwind_execute+0xe>
10005518:	f000 030d 	and.w	r3, r0, #13
1000551c:	2b0d      	cmp	r3, #13
1000551e:	d0da      	beq.n	100054d6 <__gnu_unwind_execute+0x5a>
10005520:	af03      	add	r7, sp, #12
10005522:	2300      	movs	r3, #0
10005524:	f000 020f 	and.w	r2, r0, #15
10005528:	4630      	mov	r0, r6
1000552a:	4619      	mov	r1, r3
1000552c:	9700      	str	r7, [sp, #0]
1000552e:	f7ff fb55 	bl	10004bdc <_Unwind_VRS_Get>
10005532:	2300      	movs	r3, #0
10005534:	220d      	movs	r2, #13
10005536:	4630      	mov	r0, r6
10005538:	4619      	mov	r1, r3
1000553a:	9700      	str	r7, [sp, #0]
1000553c:	f7ff fb74 	bl	10004c28 <_Unwind_VRS_Set>
10005540:	e7a3      	b.n	1000548a <__gnu_unwind_execute+0xe>
10005542:	0224      	lsls	r4, r4, #8
10005544:	4628      	mov	r0, r5
10005546:	f7ff ff6d 	bl	10005424 <next_unwind_byte>
1000554a:	4320      	orrs	r0, r4
1000554c:	f5b0 4f00 	cmp.w	r0, #32768	; 0x8000
10005550:	d0c1      	beq.n	100054d6 <__gnu_unwind_execute+0x5a>
10005552:	0104      	lsls	r4, r0, #4
10005554:	2300      	movs	r3, #0
10005556:	4630      	mov	r0, r6
10005558:	b2a2      	uxth	r2, r4
1000555a:	4619      	mov	r1, r3
1000555c:	f7ff fd32 	bl	10004fc4 <_Unwind_VRS_Pop>
10005560:	2800      	cmp	r0, #0
10005562:	d1b8      	bne.n	100054d6 <__gnu_unwind_execute+0x5a>
10005564:	f414 4f00 	tst.w	r4, #32768	; 0x8000
10005568:	bf18      	it	ne
1000556a:	f04f 0801 	movne.w	r8, #1
1000556e:	e78c      	b.n	1000548a <__gnu_unwind_execute+0xe>
10005570:	43c2      	mvns	r2, r0
10005572:	0701      	lsls	r1, r0, #28
10005574:	4630      	mov	r0, r6
10005576:	f002 0307 	and.w	r3, r2, #7
1000557a:	f44f 627f 	mov.w	r2, #4080	; 0xff0
1000557e:	fa42 f203 	asr.w	r2, r2, r3
10005582:	f04f 0300 	mov.w	r3, #0
10005586:	f402 627f 	and.w	r2, r2, #4080	; 0xff0
1000558a:	4619      	mov	r1, r3
1000558c:	bf48      	it	mi
1000558e:	f442 4280 	orrmi.w	r2, r2, #16384	; 0x4000
10005592:	f7ff fd17 	bl	10004fc4 <_Unwind_VRS_Pop>
10005596:	2800      	cmp	r0, #0
10005598:	f43f af77 	beq.w	1000548a <__gnu_unwind_execute+0xe>
1000559c:	e79b      	b.n	100054d6 <__gnu_unwind_execute+0x5a>
1000559e:	28b1      	cmp	r0, #177	; 0xb1
100055a0:	d03b      	beq.n	1000561a <__gnu_unwind_execute+0x19e>
100055a2:	28b2      	cmp	r0, #178	; 0xb2
100055a4:	f000 80a1 	beq.w	100056ea <__gnu_unwind_execute+0x26e>
100055a8:	28b3      	cmp	r0, #179	; 0xb3
100055aa:	d041      	beq.n	10005630 <__gnu_unwind_execute+0x1b4>
100055ac:	f000 03fc 	and.w	r3, r0, #252	; 0xfc
100055b0:	2bb4      	cmp	r3, #180	; 0xb4
100055b2:	d090      	beq.n	100054d6 <__gnu_unwind_execute+0x5a>
100055b4:	f000 0207 	and.w	r2, r0, #7
100055b8:	2301      	movs	r3, #1
100055ba:	441a      	add	r2, r3
100055bc:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
100055c0:	4619      	mov	r1, r3
100055c2:	4630      	mov	r0, r6
100055c4:	f7ff fcfe 	bl	10004fc4 <_Unwind_VRS_Pop>
100055c8:	2800      	cmp	r0, #0
100055ca:	f43f af5e 	beq.w	1000548a <__gnu_unwind_execute+0xe>
100055ce:	e782      	b.n	100054d6 <__gnu_unwind_execute+0x5a>
100055d0:	28c6      	cmp	r0, #198	; 0xc6
100055d2:	d051      	beq.n	10005678 <__gnu_unwind_execute+0x1fc>
100055d4:	28c7      	cmp	r0, #199	; 0xc7
100055d6:	d062      	beq.n	1000569e <__gnu_unwind_execute+0x222>
100055d8:	f000 03f8 	and.w	r3, r0, #248	; 0xf8
100055dc:	2bc0      	cmp	r3, #192	; 0xc0
100055de:	d071      	beq.n	100056c4 <__gnu_unwind_execute+0x248>
100055e0:	28c8      	cmp	r0, #200	; 0xc8
100055e2:	d076      	beq.n	100056d2 <__gnu_unwind_execute+0x256>
100055e4:	28c9      	cmp	r0, #201	; 0xc9
100055e6:	f47f af76 	bne.w	100054d6 <__gnu_unwind_execute+0x5a>
100055ea:	4628      	mov	r0, r5
100055ec:	f7ff ff1a 	bl	10005424 <next_unwind_byte>
100055f0:	0302      	lsls	r2, r0, #12
100055f2:	f000 000f 	and.w	r0, r0, #15
100055f6:	f402 2270 	and.w	r2, r2, #983040	; 0xf0000
100055fa:	3001      	adds	r0, #1
100055fc:	4302      	orrs	r2, r0
100055fe:	2101      	movs	r1, #1
10005600:	2305      	movs	r3, #5
10005602:	4630      	mov	r0, r6
10005604:	f7ff fcde 	bl	10004fc4 <_Unwind_VRS_Pop>
10005608:	2800      	cmp	r0, #0
1000560a:	f43f af3e 	beq.w	1000548a <__gnu_unwind_execute+0xe>
1000560e:	e762      	b.n	100054d6 <__gnu_unwind_execute+0x5a>
10005610:	f1b8 0f00 	cmp.w	r8, #0
10005614:	d01f      	beq.n	10005656 <__gnu_unwind_execute+0x1da>
10005616:	2000      	movs	r0, #0
10005618:	e75e      	b.n	100054d8 <__gnu_unwind_execute+0x5c>
1000561a:	4628      	mov	r0, r5
1000561c:	f7ff ff02 	bl	10005424 <next_unwind_byte>
10005620:	4602      	mov	r2, r0
10005622:	2800      	cmp	r0, #0
10005624:	f43f af57 	beq.w	100054d6 <__gnu_unwind_execute+0x5a>
10005628:	f010 03f0 	ands.w	r3, r0, #240	; 0xf0
1000562c:	d0c8      	beq.n	100055c0 <__gnu_unwind_execute+0x144>
1000562e:	e752      	b.n	100054d6 <__gnu_unwind_execute+0x5a>
10005630:	4628      	mov	r0, r5
10005632:	f7ff fef7 	bl	10005424 <next_unwind_byte>
10005636:	f000 030f 	and.w	r3, r0, #15
1000563a:	0302      	lsls	r2, r0, #12
1000563c:	4630      	mov	r0, r6
1000563e:	3301      	adds	r3, #1
10005640:	f402 2270 	and.w	r2, r2, #983040	; 0xf0000
10005644:	431a      	orrs	r2, r3
10005646:	2301      	movs	r3, #1
10005648:	4619      	mov	r1, r3
1000564a:	f7ff fcbb 	bl	10004fc4 <_Unwind_VRS_Pop>
1000564e:	2800      	cmp	r0, #0
10005650:	f43f af1b 	beq.w	1000548a <__gnu_unwind_execute+0xe>
10005654:	e73f      	b.n	100054d6 <__gnu_unwind_execute+0x5a>
10005656:	ac03      	add	r4, sp, #12
10005658:	4643      	mov	r3, r8
1000565a:	220e      	movs	r2, #14
1000565c:	4641      	mov	r1, r8
1000565e:	4630      	mov	r0, r6
10005660:	9400      	str	r4, [sp, #0]
10005662:	f7ff fabb 	bl	10004bdc <_Unwind_VRS_Get>
10005666:	4643      	mov	r3, r8
10005668:	220f      	movs	r2, #15
1000566a:	4630      	mov	r0, r6
1000566c:	4641      	mov	r1, r8
1000566e:	9400      	str	r4, [sp, #0]
10005670:	f7ff fada 	bl	10004c28 <_Unwind_VRS_Set>
10005674:	4640      	mov	r0, r8
10005676:	e72f      	b.n	100054d8 <__gnu_unwind_execute+0x5c>
10005678:	4628      	mov	r0, r5
1000567a:	f7ff fed3 	bl	10005424 <next_unwind_byte>
1000567e:	f000 030f 	and.w	r3, r0, #15
10005682:	0302      	lsls	r2, r0, #12
10005684:	4630      	mov	r0, r6
10005686:	3301      	adds	r3, #1
10005688:	f402 2270 	and.w	r2, r2, #983040	; 0xf0000
1000568c:	431a      	orrs	r2, r3
1000568e:	2303      	movs	r3, #3
10005690:	4619      	mov	r1, r3
10005692:	f7ff fc97 	bl	10004fc4 <_Unwind_VRS_Pop>
10005696:	2800      	cmp	r0, #0
10005698:	f43f aef7 	beq.w	1000548a <__gnu_unwind_execute+0xe>
1000569c:	e71b      	b.n	100054d6 <__gnu_unwind_execute+0x5a>
1000569e:	4628      	mov	r0, r5
100056a0:	f7ff fec0 	bl	10005424 <next_unwind_byte>
100056a4:	4602      	mov	r2, r0
100056a6:	2800      	cmp	r0, #0
100056a8:	f43f af15 	beq.w	100054d6 <__gnu_unwind_execute+0x5a>
100056ac:	f010 03f0 	ands.w	r3, r0, #240	; 0xf0
100056b0:	f47f af11 	bne.w	100054d6 <__gnu_unwind_execute+0x5a>
100056b4:	2104      	movs	r1, #4
100056b6:	4630      	mov	r0, r6
100056b8:	f7ff fc84 	bl	10004fc4 <_Unwind_VRS_Pop>
100056bc:	2800      	cmp	r0, #0
100056be:	f43f aee4 	beq.w	1000548a <__gnu_unwind_execute+0xe>
100056c2:	e708      	b.n	100054d6 <__gnu_unwind_execute+0x5a>
100056c4:	f000 020f 	and.w	r2, r0, #15
100056c8:	2303      	movs	r3, #3
100056ca:	3201      	adds	r2, #1
100056cc:	f442 2220 	orr.w	r2, r2, #655360	; 0xa0000
100056d0:	e776      	b.n	100055c0 <__gnu_unwind_execute+0x144>
100056d2:	4628      	mov	r0, r5
100056d4:	f7ff fea6 	bl	10005424 <next_unwind_byte>
100056d8:	f000 02f0 	and.w	r2, r0, #240	; 0xf0
100056dc:	f000 030f 	and.w	r3, r0, #15
100056e0:	3210      	adds	r2, #16
100056e2:	3301      	adds	r3, #1
100056e4:	ea43 3202 	orr.w	r2, r3, r2, lsl #12
100056e8:	e789      	b.n	100055fe <__gnu_unwind_execute+0x182>
100056ea:	2300      	movs	r3, #0
100056ec:	f10d 090c 	add.w	r9, sp, #12
100056f0:	220d      	movs	r2, #13
100056f2:	4630      	mov	r0, r6
100056f4:	4619      	mov	r1, r3
100056f6:	f8cd 9000 	str.w	r9, [sp]
100056fa:	f7ff fa6f 	bl	10004bdc <_Unwind_VRS_Get>
100056fe:	4628      	mov	r0, r5
10005700:	f7ff fe90 	bl	10005424 <next_unwind_byte>
10005704:	0602      	lsls	r2, r0, #24
10005706:	f04f 0402 	mov.w	r4, #2
1000570a:	d50b      	bpl.n	10005724 <__gnu_unwind_execute+0x2a8>
1000570c:	f000 007f 	and.w	r0, r0, #127	; 0x7f
10005710:	9b03      	ldr	r3, [sp, #12]
10005712:	40a0      	lsls	r0, r4
10005714:	3407      	adds	r4, #7
10005716:	4418      	add	r0, r3
10005718:	9003      	str	r0, [sp, #12]
1000571a:	4628      	mov	r0, r5
1000571c:	f7ff fe82 	bl	10005424 <next_unwind_byte>
10005720:	0603      	lsls	r3, r0, #24
10005722:	d4f3      	bmi.n	1000570c <__gnu_unwind_execute+0x290>
10005724:	9b03      	ldr	r3, [sp, #12]
10005726:	f000 027f 	and.w	r2, r0, #127	; 0x7f
1000572a:	f8cd 9000 	str.w	r9, [sp]
1000572e:	4630      	mov	r0, r6
10005730:	40a2      	lsls	r2, r4
10005732:	f503 7301 	add.w	r3, r3, #516	; 0x204
10005736:	441a      	add	r2, r3
10005738:	2300      	movs	r3, #0
1000573a:	9203      	str	r2, [sp, #12]
1000573c:	4619      	mov	r1, r3
1000573e:	220d      	movs	r2, #13
10005740:	f7ff fa72 	bl	10004c28 <_Unwind_VRS_Set>
10005744:	e6a1      	b.n	1000548a <__gnu_unwind_execute+0xe>
10005746:	bf00      	nop

10005748 <__gnu_unwind_frame>:
10005748:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
1000574a:	460b      	mov	r3, r1
1000574c:	f04f 0c03 	mov.w	ip, #3
10005750:	4618      	mov	r0, r3
10005752:	3208      	adds	r2, #8
10005754:	f852 3c04 	ldr.w	r3, [r2, #-4]
10005758:	b500      	push	{lr}
1000575a:	b085      	sub	sp, #20
1000575c:	9202      	str	r2, [sp, #8]
1000575e:	a901      	add	r1, sp, #4
10005760:	0e1a      	lsrs	r2, r3, #24
10005762:	f88d c00c 	strb.w	ip, [sp, #12]
10005766:	021b      	lsls	r3, r3, #8
10005768:	f88d 200d 	strb.w	r2, [sp, #13]
1000576c:	9301      	str	r3, [sp, #4]
1000576e:	f7ff fe85 	bl	1000547c <__gnu_unwind_execute>
10005772:	b005      	add	sp, #20
10005774:	f85d fb04 	ldr.w	pc, [sp], #4

10005778 <_Unwind_GetRegionStart>:
10005778:	b508      	push	{r3, lr}
1000577a:	f7ff fe7d 	bl	10005478 <unwind_UCB_from_context>
1000577e:	6c80      	ldr	r0, [r0, #72]	; 0x48
10005780:	bd08      	pop	{r3, pc}
10005782:	bf00      	nop

10005784 <_Unwind_GetLanguageSpecificData>:
10005784:	b508      	push	{r3, lr}
10005786:	f7ff fe77 	bl	10005478 <unwind_UCB_from_context>
1000578a:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
1000578c:	79c3      	ldrb	r3, [r0, #7]
1000578e:	3302      	adds	r3, #2
10005790:	eb00 0083 	add.w	r0, r0, r3, lsl #2
10005794:	bd08      	pop	{r3, pc}
10005796:	bf00      	nop

10005798 <__aeabi_idiv0>:
10005798:	4770      	bx	lr
1000579a:	bf00      	nop

1000579c <abort>:
1000579c:	2006      	movs	r0, #6
1000579e:	b508      	push	{r3, lr}
100057a0:	f000 f804 	bl	100057ac <raise>
100057a4:	2001      	movs	r0, #1
100057a6:	f7fe f877 	bl	10003898 <_exit>
100057aa:	bf00      	nop

100057ac <raise>:
100057ac:	b538      	push	{r3, r4, r5, lr}
100057ae:	281f      	cmp	r0, #31
100057b0:	4b14      	ldr	r3, [pc, #80]	; (10005804 <raise+0x58>)
100057b2:	681d      	ldr	r5, [r3, #0]
100057b4:	d820      	bhi.n	100057f8 <raise+0x4c>
100057b6:	f8d5 22dc 	ldr.w	r2, [r5, #732]	; 0x2dc
100057ba:	4604      	mov	r4, r0
100057bc:	b162      	cbz	r2, 100057d8 <raise+0x2c>
100057be:	f852 3020 	ldr.w	r3, [r2, r0, lsl #2]
100057c2:	b14b      	cbz	r3, 100057d8 <raise+0x2c>
100057c4:	2b01      	cmp	r3, #1
100057c6:	d015      	beq.n	100057f4 <raise+0x48>
100057c8:	1c59      	adds	r1, r3, #1
100057ca:	d00f      	beq.n	100057ec <raise+0x40>
100057cc:	2500      	movs	r5, #0
100057ce:	f842 5020 	str.w	r5, [r2, r0, lsl #2]
100057d2:	4798      	blx	r3
100057d4:	4628      	mov	r0, r5
100057d6:	bd38      	pop	{r3, r4, r5, pc}
100057d8:	4628      	mov	r0, r5
100057da:	f000 f82b 	bl	10005834 <_getpid_r>
100057de:	4622      	mov	r2, r4
100057e0:	4601      	mov	r1, r0
100057e2:	4628      	mov	r0, r5
100057e4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
100057e8:	f000 b80e 	b.w	10005808 <_kill_r>
100057ec:	2316      	movs	r3, #22
100057ee:	2001      	movs	r0, #1
100057f0:	602b      	str	r3, [r5, #0]
100057f2:	bd38      	pop	{r3, r4, r5, pc}
100057f4:	2000      	movs	r0, #0
100057f6:	bd38      	pop	{r3, r4, r5, pc}
100057f8:	2316      	movs	r3, #22
100057fa:	f04f 30ff 	mov.w	r0, #4294967295
100057fe:	602b      	str	r3, [r5, #0]
10005800:	bd38      	pop	{r3, r4, r5, pc}
10005802:	bf00      	nop
10005804:	38000014 	stmdacc	r0, {r2, r4}

10005808 <_kill_r>:
10005808:	b570      	push	{r4, r5, r6, lr}
1000580a:	460c      	mov	r4, r1
1000580c:	4603      	mov	r3, r0
1000580e:	4d08      	ldr	r5, [pc, #32]	; (10005830 <_kill_r+0x28>)
10005810:	2600      	movs	r6, #0
10005812:	4620      	mov	r0, r4
10005814:	4611      	mov	r1, r2
10005816:	461c      	mov	r4, r3
10005818:	602e      	str	r6, [r5, #0]
1000581a:	f7fe f835 	bl	10003888 <_kill>
1000581e:	1c43      	adds	r3, r0, #1
10005820:	d000      	beq.n	10005824 <_kill_r+0x1c>
10005822:	bd70      	pop	{r4, r5, r6, pc}
10005824:	682b      	ldr	r3, [r5, #0]
10005826:	2b00      	cmp	r3, #0
10005828:	d0fb      	beq.n	10005822 <_kill_r+0x1a>
1000582a:	6023      	str	r3, [r4, #0]
1000582c:	bd70      	pop	{r4, r5, r6, pc}
1000582e:	bf00      	nop
10005830:	38008d18 	stmdacc	r0, {r3, r4, r8, sl, fp, pc}

10005834 <_getpid_r>:
10005834:	f7fe b826 	b.w	10003884 <_getpid>

10005838 <_init>:
10005838:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1000583a:	bf00      	nop
1000583c:	bcf8      	pop	{r3, r4, r5, r6, r7}
1000583e:	bc08      	pop	{r3}
10005840:	469e      	mov	lr, r3
10005842:	4770      	bx	lr

10005844 <_fini>:
10005844:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10005846:	bf00      	nop
10005848:	bcf8      	pop	{r3, r4, r5, r6, r7}
1000584a:	bc08      	pop	{r3}
1000584c:	469e      	mov	lr, r3
1000584e:	4770      	bx	lr
10005850:	6e69616d 	powvsez	f6, f1, #5.0
10005854:	7361745f 	cmnvc	r1, #1593835520	; 0x5f000000
10005858:	0000006b 	andeq	r0, r0, fp, rrx
1000585c:	6e69616d 	powvsez	f6, f1, #5.0
10005860:	73617420 	cmnvc	r1, #32, 8	; 0x20000000
10005864:	7263206b 	rsbvc	r2, r3, #107	; 0x6b
10005868:	65746165 	ldrbvs	r6, [r4, #-357]!	; 0xfffffe9b
1000586c:	69616620 	stmdbvs	r1!, {r5, r9, sl, sp, lr}^
10005870:	2864656c 	stmdacs	r4!, {r2, r3, r5, r6, r8, sl, sp, lr}^
10005874:	2e296425 	cdpcs	4, 2, cr6, cr9, cr5, {1}
10005878:	00000a0d 	andeq	r0, r0, sp, lsl #20
1000587c:	6c6c6143 	stfvse	f6, [ip], #-268	; 0xfffffef4
10005880:	63617453 	cmnvs	r1, #1392508928	; 0x53000000
10005884:	7564206b 	strbvc	r2, [r4, #-107]!	; 0xffffff95
10005888:	6520706d 	strvs	r7, [r0, #-109]!	; 0xffffff93
1000588c:	726f7272 	rsbvc	r7, pc, #536870919	; 0x20000007
10005890:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
10005894:	00000a0d 	andeq	r0, r0, sp, lsl #20
10005898:	6c6c6143 	stfvse	f6, [ip], #-268	; 0xfffffef4
1000589c:	63617453 	cmnvs	r1, #1392508928	; 0x53000000
100058a0:	205b3a6b 	subscs	r3, fp, fp, ror #20
100058a4:	00000000 	andeq	r0, r0, r0
100058a8:	58383025 	ldmdapl	r8!, {r0, r2, r5, ip, sp}
100058ac:	00000020 	andeq	r0, r0, r0, lsr #32
100058b0:	000d205d 	andeq	r2, sp, sp, asr r0
100058b4:	73696874 	cmnvc	r9, #116, 16	; 0x740000
100058b8:	20736920 	rsbscs	r6, r3, r0, lsr #18
100058bc:	0d2e7325 	stceq	3, cr7, [lr, #-148]!	; 0xffffff6c
100058c0:	0000000a 	andeq	r0, r0, sl
100058c4:	6c6c6568 	cfstr64vs	mvdx6, [ip], #-416	; 0xfffffe60
100058c8:	6874206f 	ldmdavs	r4!, {r0, r1, r2, r3, r5, r6, sp}^
100058cc:	69207369 	stmdbvs	r0!, {r0, r3, r5, r6, r8, r9, ip, sp, lr}
100058d0:	72462073 	subvc	r2, r6, #115	; 0x73
100058d4:	54526565 	ldrbpl	r6, [r2], #-1381	; 0xfffffa9b
100058d8:	0d2e534f 	stceq	3, cr5, [lr, #-316]!	; 0xfffffec4
100058dc:	00000000 	andeq	r0, r0, r0
100058e0:	72617453 	rsbvc	r7, r1, #1392508928	; 0x53000000
100058e4:	00000d74 	andeq	r0, r0, r4, ror sp
100058e8:	6c6c6568 	cfstr64vs	mvdx6, [ip], #-416	; 0xfffffe60
100058ec:	6f77206f 	svcvs	0x0077206f
100058f0:	20646c72 	rsbcs	r6, r4, r2, ror ip
100058f4:	6425202d 	strtvs	r2, [r5], #-45	; 0xffffffd3
100058f8:	000a0d2e 	andeq	r0, sl, lr, lsr #26

100058fc <__func__.1>:
100058fc:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
10005900:	00000035 	andeq	r0, r0, r5, lsr r0

10005904 <__func__.2>:
10005904:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
10005908:	00000034 	andeq	r0, r0, r4, lsr r0

1000590c <__func__.3>:
1000590c:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
10005910:	00000033 	andeq	r0, r0, r3, lsr r0

10005914 <__func__.4>:
10005914:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
10005918:	00000032 	andeq	r0, r0, r2, lsr r0

1000591c <__func__.5>:
1000591c:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
10005920:	00000031 	andeq	r0, r0, r1, lsr r0

10005924 <__func__.6>:
10005924:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
10005928:	00000030 	andeq	r0, r0, r0, lsr r0
1000592c:	00696e66 	rsbeq	r6, r9, r6, ror #28
10005930:	2b696e66 	blcs	11a612d0 <__copy_table_end__+0x1a5b408>
10005934:	00000000 	andeq	r0, r0, r0
10005938:	006e616e 	rsbeq	r6, lr, lr, ror #2
1000593c:	2d696e66 	stclcs	14, cr6, [r9, #-408]!	; 0xfffffe68
	...

10005948 <pow10.0>:
10005948:	00000000 	andeq	r0, r0, r0
1000594c:	3ff00000 	svccc	0x00f00000	; IMB
10005950:	00000000 	andeq	r0, r0, r0
10005954:	40240000 	eormi	r0, r4, r0
10005958:	00000000 	andeq	r0, r0, r0
1000595c:	40590000 	subsmi	r0, r9, r0
10005960:	00000000 	andeq	r0, r0, r0
10005964:	408f4000 	addmi	r4, pc, r0
10005968:	00000000 	andeq	r0, r0, r0
1000596c:	40c38800 	sbcmi	r8, r3, r0, lsl #16
10005970:	00000000 	andeq	r0, r0, r0
10005974:	40f86a00 	rscsmi	r6, r8, r0, lsl #20
10005978:	00000000 	andeq	r0, r0, r0
1000597c:	412e8480 	smlawbmi	lr, r0, r4, r8
10005980:	00000000 	andeq	r0, r0, r0
10005984:	416312d0 	ldrdmi	r1, [r3, #-32]!	; 0xffffffe0
10005988:	00000000 	andeq	r0, r0, r0
1000598c:	4197d784 	orrsmi	sp, r7, r4, lsl #15
10005990:	00000000 	andeq	r0, r0, r0
10005994:	41cdcd65 	bicmi	ip, sp, r5, ror #26
10005998:	45584520 	ldrbmi	r4, [r8, #-1312]	; 0xfffffae0
1000599c:	5445525f 	strbpl	r5, [r5], #-607	; 0xfffffda1
100059a0:	3a4e5255 	bcc	1139a2fc <__copy_table_end__+0x1394434>
100059a4:	25783020 	ldrbcs	r3, [r8, #-32]!	; 0xffffffe0
100059a8:	20583830 	subscs	r3, r8, r0, lsr r8
100059ac:	00000a0d 	andeq	r0, r0, sp, lsl #20
100059b0:	65646f43 	strbvs	r6, [r4, #-3907]!	; 0xfffff0bd
100059b4:	61745320 	cmnvs	r4, r0, lsr #6
100059b8:	5b3a6b63 	blpl	10ea074c <__copy_table_end__+0xe9a884>
100059bc:	58383025 	ldmdapl	r8!, {r0, r2, r5, ip, sp}
100059c0:	25202d20 	strcs	r2, [r0, #-3360]!	; 0xfffff2e0
100059c4:	5d583830 	ldclpl	8, cr3, [r8, #-192]	; 0xffffff40
100059c8:	6973202c 	ldmdbvs	r3!, {r2, r3, r5, sp}^
100059cc:	253a657a 	ldrcs	r6, [sl, #-1402]!	; 0xfffffa86
100059d0:	000a0d64 	andeq	r0, sl, r4, ror #26
100059d4:	65646f43 	strbvs	r6, [r4, #-3907]!	; 0xfffff0bd
100059d8:	78655420 	stmdavc	r5!, {r5, sl, ip, lr}^
100059dc:	5b3a2074 	blpl	10e8dbb4 <__copy_table_end__+0xe87cec>
100059e0:	58383025 	ldmdapl	r8!, {r0, r2, r5, ip, sp}
100059e4:	25202d20 	strcs	r2, [r0, #-3360]!	; 0xfffff2e0
100059e8:	5d583830 	ldclpl	8, cr3, [r8, #-192]	; 0xffffff40
100059ec:	6973202c 	ldmdbvs	r3!, {r2, r3, r5, sp}^
100059f0:	253a657a 	ldrcs	r6, [sl, #-1402]!	; 0xfffffa86
100059f4:	000a0d64 	andeq	r0, sl, r4, ror #26
100059f8:	65646f43 	strbvs	r6, [r4, #-3907]!	; 0xfffff0bd
100059fc:	61745320 	cmnvs	r4, r0, lsr #6
10005a00:	47206b63 	strmi	r6, [r0, -r3, ror #22]!
10005a04:	74776f72 	ldrbtvc	r6, [r7], #-3954	; 0xfffff08e
10005a08:	6f442068 	svcvs	0x00442068
10005a0c:	61776e77 	cmnvs	r7, r7, ror lr
10005a10:	253a6472 	ldrcs	r6, [sl, #-1138]!	; 0xfffffb8e
10005a14:	000a0d64 	andeq	r0, sl, r4, ror #26
10005a18:	72614820 	rsbvc	r4, r1, #32, 16	; 0x200000
10005a1c:	75614664 	strbvc	r4, [r1, #-1636]!	; 0xfffff99c
10005a20:	4920746c 	stmdbmi	r0!, {r2, r3, r5, r6, sl, ip, sp, lr}
10005a24:	726f666e 	rsbvc	r6, pc, #115343360	; 0x6e00000
10005a28:	6974616d 	ldmdbvs	r4!, {r0, r2, r3, r5, r6, r8, sp, lr}^
10005a2c:	44206e6f 	strtmi	r6, [r0], #-3695	; 0xfffff191
10005a30:	20706d75 	rsbscs	r6, r0, r5, ror sp
10005a34:	0000000d 	andeq	r0, r0, sp
10005a38:	61745320 	cmnvs	r4, r0, lsr #6
10005a3c:	46206b63 	strtmi	r6, [r0], -r3, ror #22
10005a40:	656d6172 	strbvs	r6, [sp, #-370]!	; 0xfffffe8e
10005a44:	0d202020 	stceq	0, cr2, [r0, #-128]!	; 0xffffff80
10005a48:	00000000 	andeq	r0, r0, r0
10005a4c:	20305220 	eorscs	r5, r0, r0, lsr #4
10005a50:	203d2020 	eorscs	r2, sp, r0, lsr #32
10005a54:	30257830 	eorcc	r7, r5, r0, lsr r8
10005a58:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
10005a5c:	0000000a 	andeq	r0, r0, sl
10005a60:	20315220 	eorscs	r5, r1, r0, lsr #4
10005a64:	203d2020 	eorscs	r2, sp, r0, lsr #32
10005a68:	30257830 	eorcc	r7, r5, r0, lsr r8
10005a6c:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
10005a70:	0000000a 	andeq	r0, r0, sl
10005a74:	20325220 	eorscs	r5, r2, r0, lsr #4
10005a78:	203d2020 	eorscs	r2, sp, r0, lsr #32
10005a7c:	30257830 	eorcc	r7, r5, r0, lsr r8
10005a80:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
10005a84:	0000000a 	andeq	r0, r0, sl
10005a88:	20335220 	eorscs	r5, r3, r0, lsr #4
10005a8c:	203d2020 	eorscs	r2, sp, r0, lsr #32
10005a90:	30257830 	eorcc	r7, r5, r0, lsr r8
10005a94:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
10005a98:	0000000a 	andeq	r0, r0, sl
10005a9c:	20345220 	eorscs	r5, r4, r0, lsr #4
10005aa0:	203d2020 	eorscs	r2, sp, r0, lsr #32
10005aa4:	30257830 	eorcc	r7, r5, r0, lsr r8
10005aa8:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
10005aac:	0000000a 	andeq	r0, r0, sl
10005ab0:	20355220 	eorscs	r5, r5, r0, lsr #4
10005ab4:	203d2020 	eorscs	r2, sp, r0, lsr #32
10005ab8:	30257830 	eorcc	r7, r5, r0, lsr r8
10005abc:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
10005ac0:	0000000a 	andeq	r0, r0, sl
10005ac4:	20365220 	eorscs	r5, r6, r0, lsr #4
10005ac8:	203d2020 	eorscs	r2, sp, r0, lsr #32
10005acc:	30257830 	eorcc	r7, r5, r0, lsr r8
10005ad0:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
10005ad4:	0000000a 	andeq	r0, r0, sl
10005ad8:	20375220 	eorscs	r5, r7, r0, lsr #4
10005adc:	203d2020 	eorscs	r2, sp, r0, lsr #32
10005ae0:	30257830 	eorcc	r7, r5, r0, lsr r8
10005ae4:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
10005ae8:	0000000a 	andeq	r0, r0, sl
10005aec:	20385220 	eorscs	r5, r8, r0, lsr #4
10005af0:	203d2020 	eorscs	r2, sp, r0, lsr #32
10005af4:	30257830 	eorcc	r7, r5, r0, lsr r8
10005af8:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
10005afc:	0000000a 	andeq	r0, r0, sl
10005b00:	20395220 	eorscs	r5, r9, r0, lsr #4
10005b04:	203d2020 	eorscs	r2, sp, r0, lsr #32
10005b08:	30257830 	eorcc	r7, r5, r0, lsr r8
10005b0c:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
10005b10:	0000000a 	andeq	r0, r0, sl
10005b14:	30315220 	eorscc	r5, r1, r0, lsr #4
10005b18:	203d2020 	eorscs	r2, sp, r0, lsr #32
10005b1c:	30257830 	eorcc	r7, r5, r0, lsr r8
10005b20:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
10005b24:	0000000a 	andeq	r0, r0, sl
10005b28:	31315220 	teqcc	r1, r0, lsr #4
10005b2c:	203d2020 	eorscs	r2, sp, r0, lsr #32
10005b30:	30257830 	eorcc	r7, r5, r0, lsr r8
10005b34:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
10005b38:	0000000a 	andeq	r0, r0, sl
10005b3c:	32315220 	eorscc	r5, r1, #32, 4
10005b40:	203d2020 	eorscs	r2, sp, r0, lsr #32
10005b44:	30257830 	eorcc	r7, r5, r0, lsr r8
10005b48:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
10005b4c:	0000000a 	andeq	r0, r0, sl
10005b50:	20524c20 	subscs	r4, r2, r0, lsr #24
10005b54:	203d2020 	eorscs	r2, sp, r0, lsr #32
10005b58:	30257830 	eorcc	r7, r5, r0, lsr r8
10005b5c:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
10005b60:	0000000a 	andeq	r0, r0, sl
10005b64:	20435020 	subcs	r5, r3, r0, lsr #32
10005b68:	203d2020 	eorscs	r2, sp, r0, lsr #32
10005b6c:	30257830 	eorcc	r7, r5, r0, lsr r8
10005b70:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
10005b74:	0000000a 	andeq	r0, r0, sl
10005b78:	52535020 	subspl	r5, r3, #32
10005b7c:	203d2020 	eorscs	r2, sp, r0, lsr #32
10005b80:	30257830 	eorcc	r7, r5, r0, lsr r8
10005b84:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
10005b88:	0000000a 	andeq	r0, r0, sl
10005b8c:	61745320 	cmnvs	r4, r0, lsr #6
10005b90:	43206b63 			; <UNDEFINED> instruction: 0x43206b63
10005b94:	3a6c6c61 	bcc	11b20d20 <__copy_table_end__+0x1b1ae58>
10005b98:	00000020 	andeq	r0, r0, r0, lsr #32
10005b9c:	00000d20 	andeq	r0, r0, r0, lsr #26
10005ba0:	74694220 	strbtvc	r4, [r9], #-544	; 0xfffffde0
10005ba4:	78452030 	stmdavc	r5, {r4, r5, sp}^
10005ba8:	74706563 	ldrbtvc	r6, [r0], #-1379	; 0xfffffa9d
10005bac:	63655320 	cmnvs	r5, #32, 6	; 0x80000000
10005bb0:	74697275 	strbtvc	r7, [r9], #-629	; 0xfffffd8b
10005bb4:	74532079 	ldrbvc	r2, [r3], #-121	; 0xffffff87
10005bb8:	3a657461 	bcc	11962d44 <__copy_table_end__+0x195ce7c>
10005bbc:	00000000 	andeq	r0, r0, r0
10005bc0:	6573555b 	ldrbvs	r5, [r3, #-1371]!	; 0xfffffaa5
10005bc4:	63655320 	cmnvs	r5, #32, 6	; 0x80000000
10005bc8:	74697275 	strbtvc	r7, [r9], #-629	; 0xfffffd8b
10005bcc:	74532079 	ldrbvc	r2, [r3], #-121	; 0xffffff87
10005bd0:	2e657461 	cdpcs	4, 6, cr7, cr5, cr1, {3}
10005bd4:	5d2e2e2e 	stcpl	14, cr2, [lr, #-184]!	; 0xffffff48
10005bd8:	00000d2e 	andeq	r0, r0, lr, lsr #26
10005bdc:	6573555b 	ldrbvs	r5, [r3, #-1371]!	; 0xfffffaa5
10005be0:	746f4e20 	strbtvc	r4, [pc], #-3616	; 10005be8 <pow10.0+0x2a0>
10005be4:	63655320 	cmnvs	r5, #32, 6	; 0x80000000
10005be8:	74697275 	strbtvc	r7, [r9], #-629	; 0xfffffd8b
10005bec:	74532079 	ldrbvc	r2, [r3], #-121	; 0xffffff87
10005bf0:	5d657461 	cfstrdpl	mvd7, [r5, #-388]!	; 0xfffffe7c
10005bf4:	00000d2e 	andeq	r0, r0, lr, lsr #26
10005bf8:	74694220 	strbtvc	r4, [r9], #-544	; 0xfffffde0
10005bfc:	74532032 	ldrbvc	r2, [r3], #-50	; 0xffffffce
10005c00:	206b6361 	rsbcs	r6, fp, r1, ror #6
10005c04:	6e696f50 	mcrvs	15, 3, r6, cr9, cr0, {2}
10005c08:	65532074 	ldrbvs	r2, [r3, #-116]	; 0xffffff8c
10005c0c:	7463656c 	strbtvc	r6, [r3], #-1388	; 0xfffffa94
10005c10:	3a2e2e2e 	bcc	10b914d0 <__copy_table_end__+0xb8b608>
10005c14:	00000000 	andeq	r0, r0, r0
10005c18:	6573555b 	ldrbvs	r5, [r3, #-1371]!	; 0xfffffaa5
10005c1c:	50535020 	subspl	r5, r3, r0, lsr #32
10005c20:	2e2e2e2e 	cdpcs	14, 2, cr2, cr14, cr14, {1}
10005c24:	2e2e2e2e 	cdpcs	14, 2, cr2, cr14, cr14, {1}
10005c28:	2e2e2e2e 	cdpcs	14, 2, cr2, cr14, cr14, {1}
10005c2c:	5d2e2e2e 	stcpl	14, cr2, [lr, #-184]!	; 0xffffff48
10005c30:	00000d2e 	andeq	r0, r0, lr, lsr #26
10005c34:	6573555b 	ldrbvs	r5, [r3, #-1371]!	; 0xfffffaa5
10005c38:	50534d20 	subspl	r4, r3, r0, lsr #26
10005c3c:	2e2e2e2e 	cdpcs	14, 2, cr2, cr14, cr14, {1}
10005c40:	2e2e2e2e 	cdpcs	14, 2, cr2, cr14, cr14, {1}
10005c44:	2e2e2e2e 	cdpcs	14, 2, cr2, cr14, cr14, {1}
10005c48:	5d2e2e2e 	stcpl	14, cr2, [lr, #-184]!	; 0xffffff48
10005c4c:	00000d2e 	andeq	r0, r0, lr, lsr #26
10005c50:	74694220 	strbtvc	r4, [r9], #-544	; 0xfffffde0
10005c54:	72502033 	subsvc	r2, r0, #51	; 0x33
10005c58:	4d20636f 	stcmi	3, cr6, [r0, #-444]!	; 0xfffffe44
10005c5c:	2065646f 	rsbcs	r6, r5, pc, ror #8
10005c60:	6f666542 	svcvs	0x00666542
10005c64:	49206572 	stmdbmi	r0!, {r1, r4, r5, r6, r8, sl, sp, lr}
10005c68:	3a2e5152 	bcc	10b9a1b8 <__copy_table_end__+0xb942f0>
10005c6c:	00000000 	andeq	r0, r0, r0
10005c70:	6573555b 	ldrbvs	r5, [r3, #-1371]!	; 0xfffffaa5
10005c74:	72685420 	rsbvc	r5, r8, #32, 8	; 0x20000000
10005c78:	20646165 	rsbcs	r6, r4, r5, ror #2
10005c7c:	65646f4d 	strbvs	r6, [r4, #-3917]!	; 0xfffff0b3
10005c80:	2e2e2e2e 	cdpcs	14, 2, cr2, cr14, cr14, {1}
10005c84:	5d2e2e2e 	stcpl	14, cr2, [lr, #-184]!	; 0xffffff48
10005c88:	00000d2e 	andeq	r0, r0, lr, lsr #26
10005c8c:	6573555b 	ldrbvs	r5, [r3, #-1371]!	; 0xfffffaa5
10005c90:	6f725020 	svcvs	0x00725020
10005c94:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
10005c98:	646f4d20 	strbtvs	r4, [pc], #-3360	; 10005ca0 <pow10.0+0x358>
10005c9c:	2e2e2e65 	cdpcs	14, 2, cr2, cr14, cr5, {3}
10005ca0:	5d2e2e2e 	stcpl	14, cr2, [lr, #-184]!	; 0xffffff48
10005ca4:	00000d2e 	andeq	r0, r0, lr, lsr #26
10005ca8:	74694220 	strbtvc	r4, [r9], #-544	; 0xfffffde0
10005cac:	74532034 	ldrbvc	r2, [r3], #-52	; 0xffffffcc
10005cb0:	206b6361 	rsbcs	r6, fp, r1, ror #6
10005cb4:	6d617246 	sfmvs	f7, 2, [r1, #-280]!	; 0xfffffee8
10005cb8:	79542065 	ldmdbvc	r4, {r0, r2, r5, r6, sp}^
10005cbc:	2e2e6570 	mcrcs	5, 1, r6, cr14, cr0, {3}
10005cc0:	3a2e2e2e 	bcc	10b91580 <__copy_table_end__+0xb8b6b8>
10005cc4:	00000000 	andeq	r0, r0, r0
10005cc8:	6573555b 	ldrbvs	r5, [r3, #-1371]!	; 0xfffffaa5
10005ccc:	61745320 	cmnvs	r4, r0, lsr #6
10005cd0:	7261646e 	rsbvc	r6, r1, #1845493760	; 0x6e000000
10005cd4:	72462064 	subvc	r2, r6, #100	; 0x64
10005cd8:	2e656d61 	cdpcs	13, 6, cr6, cr5, cr1, {3}
10005cdc:	5d2e2e2e 	stcpl	14, cr2, [lr, #-184]!	; 0xffffff48
10005ce0:	00000d2e 	andeq	r0, r0, lr, lsr #26
10005ce4:	6573555b 	ldrbvs	r5, [r3, #-1371]!	; 0xfffffaa5
10005ce8:	74784520 	ldrbtvc	r4, [r8], #-1312	; 0xfffffae0
10005cec:	65646e65 	strbvs	r6, [r4, #-3685]!	; 0xfffff19b
10005cf0:	72462064 	subvc	r2, r6, #100	; 0x64
10005cf4:	2e656d61 	cdpcs	13, 6, cr6, cr5, cr1, {3}
10005cf8:	5d2e2e2e 	stcpl	14, cr2, [lr, #-184]!	; 0xffffff48
10005cfc:	00000d2e 	andeq	r0, r0, lr, lsr #26
10005d00:	74694220 	strbtvc	r4, [r9], #-544	; 0xfffffde0
10005d04:	65442035 	strbvs	r2, [r4, #-53]	; 0xffffffcb
10005d08:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
10005d0c:	61432074 	hvcvs	12804	; 0x3204
10005d10:	52206c6c 	eorpl	r6, r0, #108, 24	; 0x6c00
10005d14:	2e656c75 	mcrcs	12, 3, r6, cr5, cr5, {3}
10005d18:	3a2e2e2e 	bcc	10b915d8 <__copy_table_end__+0xb8b710>
10005d1c:	00000000 	andeq	r0, r0, r0
10005d20:	6573555b 	ldrbvs	r5, [r3, #-1371]!	; 0xfffffaa5
10005d24:	66654420 	strbtvs	r4, [r5], -r0, lsr #8
10005d28:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
10005d2c:	6c755220 	lfmvs	f5, 2, [r5], #-128	; 0xffffff80
10005d30:	2e2e2e65 	cdpcs	14, 2, cr2, cr14, cr5, {3}
10005d34:	5d2e2e2e 	stcpl	14, cr2, [lr, #-184]!	; 0xffffff48
10005d38:	00000d2e 	andeq	r0, r0, lr, lsr #26
10005d3c:	6573555b 	ldrbvs	r5, [r3, #-1371]!	; 0xfffffaa5
10005d40:	746f4e20 	strbtvc	r4, [pc], #-3616	; 10005d48 <pow10.0+0x400>
10005d44:	66654420 	strbtvs	r4, [r5], -r0, lsr #8
10005d48:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
10005d4c:	6c755220 	lfmvs	f5, 2, [r5], #-128	; 0xffffff80
10005d50:	5d2e2e65 	stcpl	14, cr2, [lr, #-404]!	; 0xfffffe6c
10005d54:	00000d2e 	andeq	r0, r0, lr, lsr #26
10005d58:	74694220 	strbtvc	r4, [r9], #-544	; 0xfffffde0
10005d5c:	65532036 	ldrbvs	r2, [r3, #-54]	; 0xffffffca
10005d60:	69727563 	ldmdbvs	r2!, {r0, r1, r5, r6, r8, sl, ip, sp, lr}^
10005d64:	53207974 			; <UNDEFINED> instruction: 0x53207974
10005d68:	6b636174 	blvs	118de340 <__copy_table_end__+0x18d8478>
10005d6c:	2e2e2e2e 	cdpcs	14, 2, cr2, cr14, cr14, {1}
10005d70:	3a2e2e2e 	bcc	10b91630 <__copy_table_end__+0xb8b768>
10005d74:	00000000 	andeq	r0, r0, r0
10005d78:	6573555b 	ldrbvs	r5, [r3, #-1371]!	; 0xfffffaa5
10005d7c:	63655320 	cmnvs	r5, #32, 6	; 0x80000000
10005d80:	74697275 	strbtvc	r7, [r9], #-629	; 0xfffffd8b
10005d84:	74532079 	ldrbvc	r2, [r3], #-121	; 0xffffff87
10005d88:	2e6b6361 	cdpcs	3, 6, cr6, cr11, cr1, {3}
10005d8c:	5d2e2e2e 	stcpl	14, cr2, [lr, #-184]!	; 0xffffff48
10005d90:	00000d2e 	andeq	r0, r0, lr, lsr #26
10005d94:	6573555b 	ldrbvs	r5, [r3, #-1371]!	; 0xfffffaa5
10005d98:	746f4e20 	strbtvc	r4, [pc], #-3616	; 10005da0 <pow10.0+0x458>
10005d9c:	63655320 	cmnvs	r5, #32, 6	; 0x80000000
10005da0:	74697275 	strbtvc	r7, [r9], #-629	; 0xfffffd8b
10005da4:	74532079 	ldrbvc	r2, [r3], #-121	; 0xffffff87
10005da8:	5d6b6361 	stclpl	3, cr6, [fp, #-388]!	; 0xfffffe7c
10005dac:	00000d2e 	andeq	r0, r0, lr, lsr #26
10005db0:	72646461 	rsbvc	r6, r4, #1627389952	; 0x61000000
10005db4:	2578303a 	ldrbcs	r3, [r8, #-58]!	; 0xffffffc6
10005db8:	2d583230 	lfmcs	f3, 2, [r8, #-192]	; 0xffffff40
10005dbc:	756c6176 	strbvc	r6, [ip, #-374]!	; 0xfffffe8a
10005dc0:	78303a65 	ldmdavc	r0!, {r0, r2, r5, r6, r9, fp, ip, sp}
10005dc4:	58383025 	ldmdapl	r8!, {r0, r2, r5, ip, sp}
10005dc8:	00000a0d 	andeq	r0, r0, sp, lsl #20
10005dcc:	454c4449 	strbmi	r4, [ip, #-1097]	; 0xfffffbb7
10005dd0:	00000000 	andeq	r0, r0, r0
10005dd4:	20726d54 	rsbscs	r6, r2, r4, asr sp
10005dd8:	00637653 	rsbeq	r7, r3, r3, asr r6

10005ddc <_global_impure_ptr>:
10005ddc:	38000018 	stmdacc	r0, {r3, r4}

10005de0 <__EH_FRAME_BEGIN__>:
10005de0:	00000000 	andeq	r0, r0, r0

Disassembly of section .ARM.extab:

10005de4 <__exidx_start-0x18>:
10005de4:	8101b108 	tsthi	r1, r8, lsl #2
10005de8:	8400b0b0 	strhi	fp, [r0], #-176	; 0xffffff50
10005dec:	00000000 	andeq	r0, r0, r0
10005df0:	8101b108 	tsthi	r1, r8, lsl #2
10005df4:	8400b0b0 	strhi	fp, [r0], #-176	; 0xffffff50
10005df8:	00000000 	andeq	r0, r0, r0

Disassembly of section .ARM.exidx:

10005dfc <__exidx_end-0xc0>:
10005dfc:	7fffdaa8 	svcvc	0x00ffdaa8
10005e00:	80b0b0b0 	ldrhthi	fp, [r0], r0
10005e04:	7fffdb10 	svcvc	0x00ffdb10
10005e08:	00000001 	andeq	r0, r0, r1
10005e0c:	7fffeac4 	svcvc	0x00ffeac4
10005e10:	8002a9b0 			; <UNDEFINED> instruction: 0x8002a9b0
10005e14:	7fffeb58 	svcvc	0x00ffeb58
10005e18:	80a8b0b0 	strhthi	fp, [r8], r0
10005e1c:	7fffeba8 	svcvc	0x00ffeba8
10005e20:	00000001 	andeq	r0, r0, r1
10005e24:	7fffebb4 	svcvc	0x00ffebb4
10005e28:	80aab0b0 	strhthi	fp, [sl], r0
10005e2c:	7fffebec 	svcvc	0x00ffebec
10005e30:	80b273ae 	adcshi	r7, r2, lr, lsr #7
10005e34:	7fffecc0 	svcvc	0x00ffecc0
10005e38:	00000001 	andeq	r0, r0, r1
10005e3c:	7fffecbc 	svcvc	0x00ffecbc
10005e40:	80383fab 	eorshi	r3, r8, fp, lsr #31
10005e44:	7fffed1c 	svcvc	0x00ffed1c
10005e48:	00000001 	andeq	r0, r0, r1
10005e4c:	7fffed28 	svcvc	0x00ffed28
10005e50:	80aab0b0 	strhthi	fp, [sl], r0
10005e54:	7fffed64 	svcvc	0x00ffed64
10005e58:	00000001 	andeq	r0, r0, r1
10005e5c:	7fffee18 	svcvc	0x00ffee18
10005e60:	80b20eab 	adcshi	r0, r2, fp, lsr #29
10005e64:	7fffee8c 	svcvc	0x00ffee8c
10005e68:	8008afb0 			; <UNDEFINED> instruction: 0x8008afb0
10005e6c:	7ffff14c 	svcvc	0x00fff14c
10005e70:	00000001 	andeq	r0, r0, r1
10005e74:	7ffff150 	svcvc	0x00fff150
10005e78:	80023fad 	andhi	r3, r2, sp, lsr #31
10005e7c:	7ffff3fc 	svcvc	0x00fff3fc
10005e80:	00000001 	andeq	r0, r0, r1
10005e84:	7ffff5dc 	svcvc	0x00fff5dc
10005e88:	8003a8b0 			; <UNDEFINED> instruction: 0x8003a8b0
10005e8c:	7ffff5ec 	svcvc	0x00fff5ec
10005e90:	00000001 	andeq	r0, r0, r1
10005e94:	7ffff5e8 	svcvc	0x00fff5e8
10005e98:	8004adb0 			; <UNDEFINED> instruction: 0x8004adb0
10005e9c:	7ffff8ac 	svcvc	0x00fff8ac
10005ea0:	80048400 	andhi	r8, r4, r0, lsl #8
10005ea4:	7ffff8d4 	svcvc	0x00fff8d4
10005ea8:	7fffff3c 	svcvc	0x00ffff3c
10005eac:	7ffff8d8 	svcvc	0x00fff8d8
10005eb0:	7fffff40 	svcvc	0x00ffff40
10005eb4:	7ffff8e4 	svcvc	0x00fff8e4
10005eb8:	00000001 	andeq	r0, r0, r1

Disassembly of section .copy.table:

10005ebc <__copy_table_start__>:
10005ebc:	10005ec8 	andne	r5, r0, r8, asr #29
10005ec0:	38000000 	stmdacc	r0, {}	; <UNPREDICTABLE>
10005ec4:	00000114 	andeq	r0, r0, r4, lsl r1

Disassembly of section .data:

38000000 <SystemCoreClock>:
38000000:	017d7840 	cmneq	sp, r0, asr #16

38000004 <fd_msp_stack_parser>:
static volatile stack_parser_t fd_msp_stack_parser = fault_dump_callstack;
38000004:	10001bf5 	strdne	r1, [r0], -r5

38000008 <fd_psp_stack_parser>:
static volatile stack_parser_t fd_psp_stack_parser = fault_dump_callstack;
38000008:	10001bf5 	strdne	r1, [r0], -r5

3800000c <uxTopUsedPriority>:
static const volatile UBaseType_t uxTopUsedPriority = configMAX_PRIORITIES - 1U;
3800000c:	00000004 	andeq	r0, r0, r4

38000010 <ulCriticalNesting>:
PRIVILEGED_DATA static volatile uint32_t ulCriticalNesting = 0xaaaaaaaaUL;
38000010:	aaaaaaaa 	bge	36aaaac0 <__copy_table_end__+0x26aa4bf8>

38000014 <_impure_ptr>:
38000014:	38000018 	stmdacc	r0, {r3, r4}

38000018 <impure_data>:
38000018:	00000000 	andeq	r0, r0, r0
3800001c:	38000304 	stmdacc	r0, {r2, r8, r9}
38000020:	3800036c 	stmdacc	r0, {r2, r3, r5, r6, r8, r9}
38000024:	380003d4 	stmdacc	r0, {r2, r4, r6, r7, r8, r9}
	...
380000c0:	00000001 	andeq	r0, r0, r1
380000c4:	00000000 	andeq	r0, r0, r0
380000c8:	abcd330e 	blge	3734cd08 <__copy_table_end__+0x27346e40>
380000cc:	e66d1234 			; <UNDEFINED> instruction: 0xe66d1234
380000d0:	0005deec 	andeq	sp, r5, ip, ror #29
380000d4:	0000000b 	andeq	r0, r0, fp
	...

38000440 <__atexit_recursive_mutex>:
38000440:	38008d14 	stmdacc	r0, {r2, r4, r8, sl, fp, pc}

38000444 <__init_array_start>:
38000444:	10003af9 	strdne	r3, [r0], -r9

38000448 <__frame_dummy_init_array_entry>:
38000448:	100007e5 	andne	r0, r0, r5, ror #15

3800044c <__do_global_dtors_aux_fini_array_entry>:
3800044c:	100007c1 	andne	r0, r0, r1, asr #15

Disassembly of section .bss:

38000450 <__bss_start__>:
38000450:	00000000 	andeq	r0, r0, r0

38000454 <object.0>:
	...

3800046c <main_task.0>:
3800046c:	00000000 	andeq	r0, r0, r0

38000470 <ucHeap>:
	...

38008470 <buffer.0>:
	...

38008570 <fd_main_stack_base>:
volatile unsigned int fd_main_stack_base = 0;
38008570:	00000000 	andeq	r0, r0, r0

38008574 <fd_main_stack_full>:
volatile unsigned int fd_main_stack_full = 0;
38008574:	00000000 	andeq	r0, r0, r0

38008578 <frame.1>:
	...

380085b8 <pxCurrentTCB>:
    portDONT_DISCARD PRIVILEGED_DATA TCB_t * volatile pxCurrentTCB = NULL;
380085b8:	00000000 	andeq	r0, r0, r0

380085bc <pxDelayedTaskList>:
PRIVILEGED_DATA static List_t * volatile pxDelayedTaskList;              /**< Points to the delayed task list currently being used. */
380085bc:	00000000 	andeq	r0, r0, r0

380085c0 <pxOverflowDelayedTaskList>:
PRIVILEGED_DATA static List_t * volatile pxOverflowDelayedTaskList;      /**< Points to the delayed task list currently being used to hold tasks that have overflowed the current tick count. */
380085c0:	00000000 	andeq	r0, r0, r0

380085c4 <pxReadyTasksLists>:
	...

38008650 <uxCurrentNumberOfTasks>:
PRIVILEGED_DATA static volatile UBaseType_t uxCurrentNumberOfTasks = ( UBaseType_t ) 0U;
38008650:	00000000 	andeq	r0, r0, r0

38008654 <uxDeletedTasksWaitingCleanUp>:
    PRIVILEGED_DATA static volatile UBaseType_t uxDeletedTasksWaitingCleanUp = ( UBaseType_t ) 0U;
38008654:	00000000 	andeq	r0, r0, r0

38008658 <uxIdleTaskStack.2>:
	...

38008858 <uxSchedulerSuspended>:
PRIVILEGED_DATA static volatile UBaseType_t uxSchedulerSuspended = ( UBaseType_t ) 0U;
38008858:	00000000 	andeq	r0, r0, r0

3800885c <uxTaskNumber>:
PRIVILEGED_DATA static UBaseType_t uxTaskNumber = ( UBaseType_t ) 0U;
3800885c:	00000000 	andeq	r0, r0, r0

38008860 <uxTimerTaskStack.0>:
	...

38008a60 <uxTopReadyPriority>:
PRIVILEGED_DATA static volatile UBaseType_t uxTopReadyPriority = tskIDLE_PRIORITY;
38008a60:	00000000 	andeq	r0, r0, r0

38008a64 <xDelayedTaskList1>:
	...

38008a80 <xDelayedTaskList2>:
	...

38008a9c <xIdleTaskHandles>:
PRIVILEGED_DATA static TaskHandle_t xIdleTaskHandles[ configNUMBER_OF_CORES ];       /**< Holds the handles of the idle tasks.  The idle tasks are created automatically when the scheduler is started. */
38008a9c:	00000000 	andeq	r0, r0, r0

38008aa0 <xIdleTaskTCB.3>:
	...

38008aec <xNextTaskUnblockTime>:
PRIVILEGED_DATA static volatile TickType_t xNextTaskUnblockTime = ( TickType_t ) 0U; /* Initialised to portMAX_DELAY before the scheduler starts. */
38008aec:	00000000 	andeq	r0, r0, r0

38008af0 <xNumOfOverflows>:
PRIVILEGED_DATA static volatile BaseType_t xNumOfOverflows = ( BaseType_t ) 0;
38008af0:	00000000 	andeq	r0, r0, r0

38008af4 <xPendedTicks>:
PRIVILEGED_DATA static volatile TickType_t xPendedTicks = ( TickType_t ) 0U;
38008af4:	00000000 	andeq	r0, r0, r0

38008af8 <xPendingReadyList>:
	...

38008b14 <xSchedulerRunning>:
PRIVILEGED_DATA static volatile BaseType_t xSchedulerRunning = pdFALSE;
38008b14:	00000000 	andeq	r0, r0, r0

38008b18 <xSuspendedTaskList>:
	...

38008b34 <xTasksWaitingTermination>:
	...

38008b50 <xTickCount>:
PRIVILEGED_DATA static volatile TickType_t xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
38008b50:	00000000 	andeq	r0, r0, r0

38008b54 <xTimerTaskTCB.1>:
	...

38008ba0 <xYieldPendings>:
PRIVILEGED_DATA static volatile BaseType_t xYieldPendings[ configNUMBER_OF_CORES ] = { pdFALSE };
38008ba0:	00000000 	andeq	r0, r0, r0

38008ba4 <pxCurrentTimerList>:
    PRIVILEGED_DATA static List_t * pxCurrentTimerList;
38008ba4:	00000000 	andeq	r0, r0, r0

38008ba8 <pxOverflowTimerList>:
    PRIVILEGED_DATA static List_t * pxOverflowTimerList;
38008ba8:	00000000 	andeq	r0, r0, r0

38008bac <ucStaticTimerQueueStorage.1>:
	...

38008c4c <xActiveTimerList1>:
	...

38008c68 <xActiveTimerList2>:
	...

38008c84 <xLastTime.2>:
38008c84:	00000000 	andeq	r0, r0, r0

38008c88 <xStaticTimerQueue.0>:
	...

38008ce4 <xTimerQueue>:
    PRIVILEGED_DATA static QueueHandle_t xTimerQueue = NULL;
38008ce4:	00000000 	andeq	r0, r0, r0

38008ce8 <xTimerTaskHandle>:
    PRIVILEGED_DATA static TaskHandle_t xTimerTaskHandle = NULL;
38008ce8:	00000000 	andeq	r0, r0, r0

38008cec <pxEnd>:
PRIVILEGED_DATA static BlockLink_t * pxEnd = NULL;
38008cec:	00000000 	andeq	r0, r0, r0

38008cf0 <xFreeBytesRemaining>:
PRIVILEGED_DATA static size_t xFreeBytesRemaining = ( size_t ) 0U;
38008cf0:	00000000 	andeq	r0, r0, r0

38008cf4 <xMinimumEverFreeBytesRemaining>:
PRIVILEGED_DATA static size_t xMinimumEverFreeBytesRemaining = ( size_t ) 0U;
38008cf4:	00000000 	andeq	r0, r0, r0

38008cf8 <xNumberOfSuccessfulAllocations>:
PRIVILEGED_DATA static size_t xNumberOfSuccessfulAllocations = ( size_t ) 0U;
38008cf8:	00000000 	andeq	r0, r0, r0

38008cfc <xNumberOfSuccessfulFrees>:
PRIVILEGED_DATA static size_t xNumberOfSuccessfulFrees = ( size_t ) 0U;
38008cfc:	00000000 	andeq	r0, r0, r0

38008d00 <xStart>:
	...

38008d08 <ulStoppedTimerCompensation>:
    PRIVILEGED_DATA static uint32_t ulStoppedTimerCompensation = 0;
38008d08:	00000000 	andeq	r0, r0, r0

38008d0c <ulTimerCountsForOneTick>:
    PRIVILEGED_DATA static uint32_t ulTimerCountsForOneTick = 0;
38008d0c:	00000000 	andeq	r0, r0, r0

38008d10 <xMaximumPossibleSuppressedTicks>:
    PRIVILEGED_DATA static uint32_t xMaximumPossibleSuppressedTicks = 0;
38008d10:	00000000 	andeq	r0, r0, r0

38008d14 <__lock___atexit_recursive_mutex>:
38008d14:	00000000 	andeq	r0, r0, r0

38008d18 <errno>:
38008d18:	00000000 	andeq	r0, r0, r0

Disassembly of section .heap:

38008d1c <__end__-0x4>:
38008d1c:	00000000 	andeq	r0, r0, r0

38008d20 <__end__>:
	...

Disassembly of section .stack:

380ff000 <__StackLimit>:
	...

Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
    BaseType_t xReturn;

    /* Obtain the number of the currently executing interrupt. Interrupt Program
     * Status Register (IPSR) holds the exception number of the currently-executing
     * exception or zero for Thread mode.*/
    __asm volatile ( "mrs %0, ipsr" : "=r" ( ulCurrentInterrupt )::"memory" );
   0:	00003541 	andeq	r3, r0, r1, asr #10

    if( ulCurrentInterrupt == 0 )
   4:	61656100 	cmnvs	r5, r0, lsl #2
    {
        xReturn = pdFALSE;
   8:	01006962 	tsteq	r0, r2, ror #18
    {
        xReturn = pdTRUE;
    }

    return xReturn;
}
   c:	0000002b 	andeq	r0, r0, fp, lsr #32
    if (parser != NULL) {
        fd_psp_stack_parser = parser;
        result = FD_EOK;
    }
    return result;
}
  10:	4d2d3805 	stcmi	8, cr3, [sp, #-20]!	; 0xffffffec
}
  14:	49414d2e 	stmdbmi	r1, {r1, r2, r3, r5, r8, sl, fp, lr}^
size_t uart_recv(uint8_t* buffer, size_t size) {
    uint8_t ch = 0;
    size_t it = 0;
    while (1) {
        ch = getchar();
        if(ch == '\n' || it >= size) {
  18:	1106004e 	tstne	r6, lr, asr #32
        }
        buffer[it] = ch;
        it = it + 1;
    }
    return (it + 1);
}
  1c:	03094d07 	movweq	r4, #40199	; 0x9d07
  va_start(va, format);
  const out_fct_wrap_type out_fct_wrap = { out, arg };
  const int ret = _vsnprintf(_out_fct, (char*)(uintptr_t)&out_fct_wrap, (size_t)-1, format, va);
  va_end(va);
  return ret;
}
  20:	0412080a 	ldreq	r0, [r2], #-2058	; 0xfffff7f6
  24:	01150114 	tsteq	r5, r4, lsl r1
  28:	01180317 	tsteq	r8, r7, lsl r3
  2c:	011b011a 	tsteq	fp, sl, lsl r1
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
  30:	0122011c 			; <UNDEFINED> instruction: 0x0122011c
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
  34:	Address 0x00000034 is out of bounds.


Disassembly of section .comment:

00000000 <.comment>:
    __asm volatile ( "mrs %0, ipsr" : "=r" ( ulCurrentInterrupt )::"memory" );
   0:	3a434347 	bcc	10d0d24 <__RAM_SIZE+0xfd0d24>
    if( ulCurrentInterrupt == 0 )
   4:	4e472820 	cdpmi	8, 4, cr2, cr7, cr0, {1}
        xReturn = pdFALSE;
   8:	72412055 	subvc	r2, r1, #85	; 0x55
}
   c:	6d45206d 	stclvs	0, cr2, [r5, #-436]	; 0xfffffe4c
  10:	64646562 	strbtvs	r6, [r4], #-1378	; 0xfffffa9e
  14:	54206465 	strtpl	r6, [r0], #-1125	; 0xfffffb9b
        if(ch == '\n' || it >= size) {
  18:	636c6f6f 	cmnvs	ip, #444	; 0x1bc
}
  1c:	6e696168 	powvsez	f6, f1, #0.0
  20:	2e303120 	rsfcssp	f3, f0, f0
  24:	30322d33 	eorscc	r2, r2, r3, lsr sp
  28:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
  2c:	31202930 			; <UNDEFINED> instruction: 0x31202930
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
  30:	2e332e30 	mrccs	14, 1, r2, cr3, cr0, {1}
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
  34:	30322031 	eorscc	r2, r2, r1, lsr r0
  38:	38303132 	ldmdacc	r0!, {r1, r4, r5, r8, ip, sp}
  3c:	28203432 	stmdacs	r0!, {r1, r4, r5, sl, ip, sp}
  40:	656c6572 	strbvs	r6, [ip, #-1394]!	; 0xfffffa8e
        BaseType_t xReturn = pdFAIL;
  44:	29657361 	stmdbcs	r5!, {r0, r5, r6, r8, r9, ip, sp, lr}^
	...

Disassembly of section .debug_info:

00000000 <.debug_info>:
    __asm volatile ( "mrs %0, ipsr" : "=r" ( ulCurrentInterrupt )::"memory" );
       0:	00000729 	andeq	r0, r0, r9, lsr #14
    if( ulCurrentInterrupt == 0 )
       4:	00000002 	andeq	r0, r0, r2
        xReturn = pdFALSE;
       8:	01040000 	mrseq	r0, (UNDEF: 4)
}
       c:	000000bf 	strheq	r0, [r0], -pc	; <UNPREDICTABLE>
      10:	0000570c 	andeq	r5, r0, ip, lsl #14
      14:	0001a800 	andeq	sl, r1, r0, lsl #16
        if(ch == '\n' || it >= size) {
      18:	00001800 	andeq	r1, r0, r0, lsl #16
	...
      28:	06010200 	streq	r0, [r1], -r0, lsl #4
      2c:	0000008f 	andeq	r0, r0, pc, lsl #1
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
      30:	00000003 	andeq	r0, r0, r3
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
      34:	182b0200 	stmdane	fp!, {r9}
      38:	0000003c 	andeq	r0, r0, ip, lsr r0
      3c:	8d080102 	stfhis	f0, [r8, #-8]
      40:	02000000 	andeq	r0, r0, #0
        BaseType_t xReturn = pdFAIL;
      44:	02a50502 	adceq	r0, r5, #8388608	; 0x800000
    }
      48:	02020000 	andeq	r0, r2, #0
                    xMinSize = pxBlock->xBlockSize;
                }

                /* Move to the next block in the chain until the last block is
                 * reached. */
                pxBlock = heapPROTECT_BLOCK_POINTER( pxBlock->pxNextFreeBlock );
      4c:	0000ac07 	andeq	sl, r0, r7, lsl #24
            while( pxBlock != pxEnd )
      50:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
      54:	0000025a 	andeq	r0, r0, sl, asr r2
                if( pxBlock->xBlockSize > xMaxSize )
      58:	18070402 	stmdane	r7, {r1, sl}
      5c:	02000002 	andeq	r0, r0, #2
                if( pxBlock->xBlockSize < xMinSize )
      60:	02550508 	subseq	r0, r5, #8, 10	; 0x2000000
                    xMinSize = pxBlock->xBlockSize;
      64:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
      68:	00021307 	andeq	r1, r2, r7, lsl #6
      6c:	05040400 	streq	r0, [r4, #-1024]	; 0xfffffc00
      70:	00746e69 	rsbseq	r6, r4, r9, ror #28
      74:	1d070402 	cfstrsne	mvf0, [r7, #-8]
      78:	03000002 	movweq	r0, #2
      7c:	00000002 	andeq	r0, r0, r2
            prvUnlockQueue( pxQueue );
      80:	30131803 	andscc	r1, r3, r3, lsl #16
            ( void ) xTaskResumeAll();
      84:	02000000 	andeq	r0, r0, #0
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
      88:	02490408 	subeq	r0, r9, #8, 8	; 0x8000000
      8c:	04050000 	streq	r0, [r5], #-0
      90:	96080102 	strls	r0, [r8], -r2, lsl #2
        taskENTER_CRITICAL();
      94:	06000000 	streq	r0, [r0], -r0
            if( uxSemaphoreCount > ( UBaseType_t ) 0 )
      98:	00000090 	muleq	r0, r0, r0
                if( xTicksToWait == ( TickType_t ) 0 )
      9c:	000a6903 	andeq	r6, sl, r3, lsl #18
      a0:	1a4a0400 	bne	12810a8 <__RAM_SIZE+0x11810a8>
                else if( xEntryTimeSet == pdFALSE )
      a4:	00000051 	andeq	r0, r0, r1, asr r0
        taskEXIT_CRITICAL();
      a8:	0002af03 	andeq	sl, r2, r3, lsl #30
        vTaskSuspendAll();
      ac:	2e5c0500 	cdpcs	5, 5, cr0, cr12, cr0, {0}
        prvLockQueue( pxQueue );
      b0:	000000b4 	strheq	r0, [r0], -r4
      b4:	00ba0407 	adcseq	r0, sl, r7, lsl #8
      b8:	f2080000 	vhadd.s8	d0, d8, d0
      bc:	01000001 	tsteq	r0, r1
      c0:	00007b09 	andeq	r7, r0, r9, lsl #22
      c4:	0000d100 	andeq	sp, r0, r0, lsl #2
      c8:	00740a00 	rsbseq	r0, r4, r0, lsl #20
      cc:	7fff0000 	svcvc	0x00ff0000
        if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
      d0:	02060b00 	andeq	r0, r6, #0, 22
      d4:	0d010000 	stceq	0, cr0, [r1, #-0]
      d8:	0000c009 	andeq	ip, r0, r9
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
      dc:	03050100 	movweq	r0, #20736	; 0x5100
      e0:	38000470 	stmdacc	r0, {r4, r5, r6, sl}
                    if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
      e4:	01ed010c 	mvneq	r0, ip, lsl #2
      e8:	5f010000 	svcpl	0x00010000
                vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
      ec:	006d0105 	rsbeq	r0, sp, r5, lsl #2
      f0:	09640000 	stmdbeq	r4!, {}^	; <UNPREDICTABLE>
                prvUnlockQueue( pxQueue );
      f4:	09901000 	ldmibeq	r0, {ip}
      f8:	00001000 	andeq	r1, r0, r0
                if( xTaskResumeAll() == pdFALSE )
      fc:	63010000 	movwvs	r0, #4096	; 0x1000
     100:	0d000001 	stceq	0, cr0, [r0, #-4]
                    taskYIELD_WITHIN_API();
     104:	00000024 	andeq	r0, r0, r4, lsr #32
                    if( xInheritanceOccurred != pdFALSE )
     108:	6d096001 	stcvs	0, cr6, [r9, #-4]
                return errQUEUE_EMPTY;
     10c:	26000000 	strcs	r0, [r0], -r0
                        taskENTER_CRITICAL();
     110:	20000000 	andcs	r0, r0, r0
                            uxHighestWaitingPriority = prvGetDisinheritPriorityAfterTimeout( pxQueue );
     114:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
     118:	1000096a 	andne	r0, r0, sl, ror #18
                            vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
     11c:	00000683 	andeq	r0, r0, r3, lsl #13
                        taskEXIT_CRITICAL();
     120:	0009700f 	andeq	r7, r9, pc
     124:	00069110 	andeq	r9, r6, r0, lsl r1
                    listINSERT_END( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
     128:	00013700 	andeq	r3, r1, r0, lsl #14
     12c:	50011000 	andpl	r1, r1, r0
     130:	58e00305 	stmiapl	r0!, {r0, r2, r8, r9}^
     134:	0e001000 	cdpeq	0, 0, cr1, cr0, cr0, {0}
     138:	10000974 	andne	r0, r0, r4, ror r9
     13c:	0000069e 	muleq	r0, lr, r6
     140:	0009780e 	andeq	r7, r9, lr, lsl #16
     144:	00016310 	andeq	r6, r1, r0, lsl r3
     148:	09841100 	stmibeq	r4, {r8, ip}
     14c:	06ac1000 	strteq	r1, [ip], r0
     150:	01100000 	tsteq	r0, r0
     154:	e8030550 	stmda	r3, {r4, r6, r8, sl}
     158:	10100058 	andsne	r0, r0, r8, asr r0
     15c:	74025101 	strvc	r5, [r2], #-257	; 0xfffffeff
     160:	1200007f 	andne	r0, r0, #127	; 0x7f
     164:	00000296 	muleq	r0, r6, r2
     168:	010d5401 	tsteq	sp, r1, lsl #8
     16c:	10000800 	andne	r0, r0, r0, lsl #16
     170:	10000844 	andne	r0, r0, r4, asr #16
     174:	00000050 	andeq	r0, r0, r0, asr r0
     178:	00020001 	andeq	r0, r2, r1
     17c:	022a1300 	eoreq	r1, sl, #0, 6
     180:	55010000 	strpl	r0, [r1, #-0]
     184:	0000a819 	andeq	sl, r0, r9, lsl r8
     188:	6c030500 	cfstr32vs	mvfx0, [r3], {-0}
     18c:	0d380004 	ldceq	0, cr0, [r8, #-16]!
     190:	00001abd 			; <UNDEFINED> instruction: 0x00001abd
     194:	9c105601 	ldcls	6, cr5, [r0], {1}
     198:	9c000000 	stcls	0, cr0, [r0], {-0}
     19c:	94000000 	strls	r0, [r0], #-0
     1a0:	0f000000 	svceq	0x00000000
     1a4:	1000081a 	andne	r0, r0, sl, lsl r8
     1a8:	000006ba 			; <UNDEFINED> instruction: 0x000006ba
     1ac:	000001df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
     1b0:	05500110 	ldrbeq	r0, [r0, #-272]	; 0xfffffef0
     1b4:	00094103 	andeq	r4, r9, r3, lsl #2
     1b8:	51011010 	tstpl	r1, r0, lsl r0
     1bc:	58500305 	ldmdapl	r0, {r0, r2, r8, r9}^
     1c0:	01101000 	tsteq	r0, r0
     1c4:	000a0352 	andeq	r0, sl, r2, asr r3
     1c8:	53011008 	movwpl	r1, #4104	; 0x1008
     1cc:	02103001 	andseq	r3, r0, #1
     1d0:	3101007d 	tstcc	r1, sp, ror r0
     1d4:	047d0210 	ldrbteq	r0, [sp], #-528	; 0xfffffdf0
     1d8:	046c0305 	strbteq	r0, [ip], #-773	; 0xfffffcfb
     1dc:	0f003800 	svceq	0x00003800
     1e0:	10000826 	andne	r0, r0, r6, lsr #16
     1e4:	000006ac 	andeq	r0, r0, ip, lsr #13
     1e8:	000001f6 	strdeq	r0, [r0], -r6
     1ec:	05500110 	ldrbeq	r0, [r0, #-272]	; 0xfffffef0
     1f0:	00585c03 	subseq	r5, r8, r3, lsl #24
     1f4:	300e0010 	andcc	r0, lr, r0, lsl r0
     1f8:	c9100008 	ldmdbgt	r0, {r3}
     1fc:	00000006 	andeq	r0, r0, r6
     200:	00002a12 	andeq	r2, r0, r2, lsl sl
     204:	0d470100 	stfeqe	f0, [r7, #-0]
     208:	00094001 	andeq	r4, r9, r1
     20c:	00096410 	andeq	r6, r9, r0, lsl r4
     210:	0000d110 	andeq	sp, r0, r0, lsl r1
     214:	02740100 	rsbseq	r0, r4, #0, 2
     218:	a1140000 	tstge	r4, r0
     21c:	01000000 	mrseq	r0, (UNDEF: 0)
     220:	008e2347 	addeq	r2, lr, r7, asr #6
     224:	00f50000 	rscseq	r0, r5, r0
     228:	00f10000 	rscseq	r0, r1, r0
     22c:	760d0000 	strvc	r0, [sp], -r0
     230:	01000000 	mrseq	r0, (UNDEF: 0)
     234:	006d0948 	rsbeq	r0, sp, r8, asr #18
     238:	011a0000 	tsteq	sl, r0
     23c:	01160000 	tsteq	r6, r0
     240:	4a0e0000 	bmi	380248 <__RAM_SIZE+0x280248>
     244:	74100009 	ldrvc	r0, [r0], #-9
     248:	0f000002 	svceq	0x00000002
     24c:	10000952 	andne	r0, r0, r2, asr r9
     250:	000006d8 	ldrdeq	r0, [r0], -r8
     254:	00000260 	andeq	r0, r0, r0, ror #4
     258:	03500110 	cmpeq	r0, #16, 2
     25c:	0003e80a 	andeq	lr, r3, sl, lsl #16
     260:	00095811 	andeq	r5, r9, r1, lsl r8
     264:	00069110 	andeq	r9, r6, r0, lsl r1
     268:	50011000 	andpl	r1, r1, r0
     26c:	58c40305 	stmiapl	r4, {r0, r2, r8, r9}^
     270:	00001000 	andeq	r1, r0, r0
     274:	02ff0115 	rscseq	r0, pc, #1073741829	; 0x40000005
     278:	42010000 	andmi	r0, r1, #0
     27c:	09280106 	stmdbeq	r8!, {r1, r2, r8}
     280:	09401000 	stmdbeq	r0, {ip}^
     284:	01391000 	teqeq	r9, r0
     288:	c9010000 	stmdbgt	r1, {}	; <UNPREDICTABLE>
     28c:	16000002 	strne	r0, [r0], -r2
     290:	0000004e 	andeq	r0, r0, lr, asr #32
     294:	000002d9 	ldrdeq	r0, [r0], -r9
     298:	fc030501 	stc2	5, cr0, [r3], {1}
     29c:	0f100058 	svceq	0x00100058
     2a0:	10000932 	andne	r0, r0, r2, lsr r9
     2a4:	000006ac 	andeq	r0, r0, ip, lsr #13
     2a8:	000002bf 			; <UNDEFINED> instruction: 0x000002bf
     2ac:	05500110 	ldrbeq	r0, [r0, #-272]	; 0xfffffef0
     2b0:	0058b403 	subseq	fp, r8, r3, lsl #8
     2b4:	51011010 	tstpl	r1, r0, lsl r0
     2b8:	58fc0305 	ldmpl	ip!, {r0, r2, r8, r9}^
     2bc:	0e001000 	cdpeq	0, 0, cr1, cr0, cr0, {0}
     2c0:	10000936 	andne	r0, r0, r6, lsr r9
     2c4:	000002de 	ldrdeq	r0, [r0], -lr
     2c8:	00970900 	addseq	r0, r7, r0, lsl #18
     2cc:	02d90000 	sbcseq	r0, r9, #0
     2d0:	74170000 	ldrvc	r0, [r7], #-0
     2d4:	05000000 	streq	r0, [r0, #-0]
     2d8:	02c90600 	sbceq	r0, r9, #0, 12
     2dc:	01150000 	tsteq	r5, r0
     2e0:	0000020d 	andeq	r0, r0, sp, lsl #4
     2e4:	01063d01 	tsteq	r6, r1, lsl #26
     2e8:	10000910 	andne	r0, r0, r0, lsl r9
     2ec:	10000928 	andne	r0, r0, r8, lsr #18
     2f0:	00000159 	andeq	r0, r0, r9, asr r1
     2f4:	00033301 	andeq	r3, r3, r1, lsl #6
     2f8:	004e1600 	subeq	r1, lr, r0, lsl #12
     2fc:	02d90000 	sbcseq	r0, r9, #0
     300:	05010000 	streq	r0, [r1, #-0]
     304:	00590403 	subseq	r0, r9, r3, lsl #8
     308:	091a0f10 	ldmdbeq	sl, {r4, r8, r9, sl, fp}
     30c:	06ac1000 	strteq	r1, [ip], r0
     310:	03290000 			; <UNDEFINED> instruction: 0x03290000
     314:	01100000 	tsteq	r0, r0
     318:	b4030550 	strlt	r0, [r3], #-1360	; 0xfffffab0
     31c:	10100058 	andsne	r0, r0, r8, asr r0
     320:	03055101 	movweq	r5, #20737	; 0x5101
     324:	10005904 	andne	r5, r0, r4, lsl #18
     328:	091e0e00 	ldmdbeq	lr, {r9, sl, fp}
     32c:	03331000 	teqeq	r3, #0
     330:	15000000 	strne	r0, [r0, #-0]
     334:	00009b01 	andeq	r9, r0, r1, lsl #22
     338:	06380100 	ldrteq	r0, [r8], -r0, lsl #2
     33c:	0008f801 	andeq	pc, r8, r1, lsl #16
     340:	00091010 	andeq	r1, r9, r0, lsl r0
     344:	00017910 	andeq	r7, r1, r0, lsl r9
     348:	03880100 	orreq	r0, r8, #0, 2
     34c:	4e160000 	cdpmi	0, 1, cr0, cr6, cr0, {0}
     350:	d9000000 	stmdble	r0, {}	; <UNPREDICTABLE>
     354:	01000002 	tsteq	r0, r2
     358:	590c0305 	stmdbpl	ip, {r0, r2, r8, r9}
     35c:	020f1000 	andeq	r1, pc, #0
     360:	ac100009 	ldcge	0, cr0, [r0], {9}
     364:	7e000006 	cdpvc	0, 0, cr0, cr0, cr6, {0}
     368:	10000003 	andne	r0, r0, r3
     36c:	03055001 	movweq	r5, #20481	; 0x5001
     370:	100058b4 			; <UNDEFINED> instruction: 0x100058b4
     374:	05510110 	ldrbeq	r0, [r1, #-272]	; 0xfffffef0
     378:	00590c03 	subseq	r0, r9, r3, lsl #24
     37c:	060e0010 			; <UNDEFINED> instruction: 0x060e0010
     380:	88100009 	ldmdahi	r0, {r0, r3}
     384:	00000003 	andeq	r0, r0, r3
     388:	02ed0115 	rsceq	r0, sp, #1073741829	; 0x40000005
     38c:	33010000 	movwcc	r0, #4096	; 0x1000
     390:	08e00106 	stmiaeq	r0!, {r1, r2, r8}^
     394:	08f81000 	ldmeq	r8!, {ip}^
     398:	01991000 	orrseq	r1, r9, r0
     39c:	dd010000 	stcle	0, cr0, [r1, #-0]
     3a0:	16000003 	strne	r0, [r0], -r3
     3a4:	0000004e 	andeq	r0, r0, lr, asr #32
     3a8:	000002d9 	ldrdeq	r0, [r0], -r9
     3ac:	14030501 	strne	r0, [r3], #-1281	; 0xfffffaff
     3b0:	0f100059 	svceq	0x00100059
     3b4:	100008ea 	andne	r0, r0, sl, ror #17
     3b8:	000006ac 	andeq	r0, r0, ip, lsr #13
     3bc:	000003d3 	ldrdeq	r0, [r0], -r3
     3c0:	05500110 	ldrbeq	r0, [r0, #-272]	; 0xfffffef0
     3c4:	0058b403 	subseq	fp, r8, r3, lsl #8
     3c8:	51011010 	tstpl	r1, r0, lsl r0
     3cc:	59140305 	ldmdbpl	r4, {r0, r2, r8, r9}
     3d0:	0e001000 	cdpeq	0, 0, cr1, cr0, cr0, {0}
     3d4:	100008ee 	andne	r0, r0, lr, ror #17
     3d8:	000003dd 	ldrdeq	r0, [r0], -sp
     3dc:	e7011500 	str	r1, [r1, -r0, lsl #10]
     3e0:	01000002 	tsteq	r0, r2
     3e4:	c801062e 	stmdagt	r1, {r1, r2, r3, r5, r9, sl}
     3e8:	e0100008 	ands	r0, r0, r8
     3ec:	b9100008 	ldmdblt	r0, {r3}
     3f0:	01000001 	tsteq	r0, r1
     3f4:	00000432 	andeq	r0, r0, r2, lsr r4
     3f8:	00004e16 	andeq	r4, r0, r6, lsl lr
     3fc:	0002d900 	andeq	sp, r2, r0, lsl #18
     400:	03050100 	movweq	r0, #20736	; 0x5100
     404:	1000591c 	andne	r5, r0, ip, lsl r9
     408:	0008d20f 	andeq	sp, r8, pc, lsl #4
     40c:	0006ac10 	andeq	sl, r6, r0, lsl ip
     410:	00042800 	andeq	r2, r4, r0, lsl #16
     414:	50011000 	andpl	r1, r1, r0
     418:	58b40305 	ldmpl	r4!, {r0, r2, r8, r9}
     41c:	01101000 	tsteq	r0, r0
     420:	1c030551 	cfstr32ne	mvfx0, [r3], {81}	; 0x51
     424:	00100059 	andseq	r0, r0, r9, asr r0
     428:	0008d60e 	andeq	sp, r8, lr, lsl #12
     42c:	00043210 	andeq	r3, r4, r0, lsl r2
     430:	01150000 	tsteq	r5, r0
     434:	000002e1 	andeq	r0, r0, r1, ror #5
     438:	01062701 	tsteq	r6, r1, lsl #14
     43c:	100008ac 	andne	r0, r0, ip, lsr #17
     440:	100008c8 	andne	r0, r0, r8, asr #17
     444:	000001d9 	ldrdeq	r0, [r0], -r9
     448:	00049b01 	andeq	r9, r4, r1, lsl #22
     44c:	004e1600 	subeq	r1, lr, r0, lsl #12
     450:	02d90000 	sbcseq	r0, r9, #0
     454:	05010000 	streq	r0, [r1, #-0]
     458:	00592403 	subseq	r2, r9, r3, lsl #8
     45c:	73011810 	movwvc	r1, #6160	; 0x1810
     460:	01000002 	tsteq	r0, r2
     464:	0101112a 	tsteq	r1, sl, lsr #2
     468:	0008b60f 	andeq	fp, r8, pc, lsl #12
     46c:	0006ac10 	andeq	sl, r6, r0, lsl ip
     470:	00048800 	andeq	r8, r4, r0, lsl #16
     474:	50011000 	andpl	r1, r1, r0
     478:	58b40305 	ldmpl	r4!, {r0, r2, r8, r9}
     47c:	01101000 	tsteq	r0, r0
     480:	24030551 	strcs	r0, [r3], #-1361	; 0xfffffaaf
     484:	00100059 	andseq	r0, r0, r9, asr r0
     488:	0008ba0e 	andeq	fp, r8, lr, lsl #20
     48c:	00049b10 	andeq	r9, r4, r0, lsl fp
     490:	08be0e00 	ldmeq	lr!, {r9, sl, fp}
     494:	06e71000 	strbteq	r1, [r7], r0
     498:	15000000 	strne	r0, [r0, #-0]
     49c:	00023a01 	andeq	r3, r2, r1, lsl #20
     4a0:	06170100 	ldreq	r0, [r7], -r0, lsl #2
     4a4:	00084401 	andeq	r4, r8, r1, lsl #8
     4a8:	0008ac10 	andeq	sl, r8, r0, lsl ip
     4ac:	0001f910 	andeq	pc, r1, r0, lsl r9	; <UNPREDICTABLE>
     4b0:	05cb0100 	strbeq	r0, [fp, #256]	; 0x100
     4b4:	d8130000 	ldmdale	r3, {}	; <UNPREDICTABLE>
     4b8:	01000004 	tsteq	r0, r4
     4bc:	05cb1218 	strbeq	r1, [fp, #536]	; 0x218
     4c0:	91030000 	mrsls	r0, (UNDEF: 3)
     4c4:	db0d7df0 	blle	35fc8c <__RAM_SIZE+0x25fc8c>
     4c8:	01000002 	tsteq	r0, r2
     4cc:	00741219 	rsbseq	r1, r4, r9, lsl r2
     4d0:	02380000 	eorseq	r0, r8, #0
     4d4:	02320000 	eorseq	r0, r2, #0
     4d8:	1e0d0000 	cdpne	0, 0, cr0, cr13, cr0, {0}
     4dc:	01000000 	mrseq	r0, (UNDEF: 0)
     4e0:	0074121a 	rsbseq	r1, r4, sl, lsl r2
     4e4:	02650000 	rsbeq	r0, r5, #0
     4e8:	02610000 	rsbeq	r0, r1, #0
     4ec:	240d0000 	strcs	r0, [sp], #-0
     4f0:	01000000 	mrseq	r0, (UNDEF: 0)
     4f4:	006d091b 	rsbeq	r0, sp, fp, lsl r9
     4f8:	028b0000 	addeq	r0, fp, #0
     4fc:	02830000 	addeq	r0, r3, #0
     500:	00190000 	andseq	r0, r9, r0
     504:	31000000 	mrscc	r0, (UNDEF: 0)
     508:	1a000005 	bne	524 <__STACKSEAL_SIZE+0x524>
     50c:	20010069 	andcs	r0, r1, r9, rrx
     510:	00006d12 	andeq	r6, r0, r2, lsl sp
     514:	0002c300 	andeq	ip, r2, r0, lsl #6
     518:	0002bf00 	andeq	fp, r2, r0, lsl #30
     51c:	088c1100 	stmeq	ip, {r8, ip}
     520:	06ac1000 	strteq	r1, [ip], r0
     524:	01100000 	tsteq	r0, r0
     528:	a8030550 	stmdage	r3, {r4, r6, r8, sl}
     52c:	00100058 	andseq	r0, r0, r8, asr r0
     530:	08540f00 	ldmdaeq	r4, {r8, r9, sl, fp}^
     534:	06f51000 	ldrbteq	r1, [r5], r0
     538:	05510000 	ldrbeq	r0, [r1, #-0]
     53c:	01100000 	tsteq	r0, r0
     540:	007d0250 	rsbseq	r0, sp, r0, asr r2
     544:	01510110 	cmpeq	r1, r0, lsl r1
     548:	52011030 	andpl	r1, r1, #48	; 0x30
     54c:	01000a03 	tsteq	r0, r3, lsl #20
     550:	08580e00 	ldmdaeq	r8, {r9, sl, fp}^
     554:	07021000 	streq	r1, [r2, -r0]
     558:	5e0e0000 	cdppl	0, 0, cr0, cr14, cr0, {0}
     55c:	10100008 	andsne	r0, r0, r8
     560:	0f000007 	svceq	0x00000007
     564:	1000086a 	andne	r0, r0, sl, ror #16
     568:	0000071e 	andeq	r0, r0, lr, lsl r7
     56c:	00000583 	andeq	r0, r0, r3, lsl #11
     570:	02500110 	subseq	r0, r0, #16, 2
     574:	0110007d 	tsteq	r0, sp, ror r0
     578:	40080251 	andmi	r0, r8, r1, asr r2
     57c:	02520110 	subseq	r0, r2, #16, 2
     580:	0f000074 	svceq	0x00000074
     584:	10000874 	andne	r0, r0, r4, ror r8
     588:	000006ac 	andeq	r0, r0, ip, lsr #13
     58c:	0000059a 	muleq	r0, sl, r5
     590:	05500110 	ldrbeq	r0, [r0, #-272]	; 0xfffffef0
     594:	00589803 	subseq	r9, r8, r3, lsl #16
     598:	800f0010 	andhi	r0, pc, r0, lsl r0	; <UNPREDICTABLE>
     59c:	ac100008 	ldcge	0, cr0, [r0], {8}
     5a0:	b7000006 	strlt	r0, [r0, -r6]
     5a4:	10000005 	andne	r0, r0, r5
     5a8:	03055001 	movweq	r5, #20481	; 0x5001
     5ac:	1000587c 	andne	r5, r0, ip, ror r8
     5b0:	02510110 	subseq	r0, r1, #16, 2
     5b4:	11000075 	tstne	r0, r5, ror r0
     5b8:	10000898 	mulne	r0, r8, r8
     5bc:	00000691 	muleq	r0, r1, r6
     5c0:	05500110 	ldrbeq	r0, [r0, #-272]	; 0xfffffef0
     5c4:	0058b003 	subseq	fp, r8, r3
     5c8:	09000010 	stmdbeq	r0, {r4}
     5cc:	00000074 	andeq	r0, r0, r4, ror r0
     5d0:	000005db 	ldrdeq	r0, [r0], -fp
     5d4:	00007417 	andeq	r7, r0, r7, lsl r4
     5d8:	15003f00 	strne	r3, [r0, #-3840]	; 0xfffff100
     5dc:	00026301 	andeq	r6, r2, r1, lsl #6
     5e0:	06130100 	ldreq	r0, [r3], -r0, lsl #2
     5e4:	00000001 	andeq	r0, r0, r1
     5e8:	00000000 	andeq	r0, r0, r0
     5ec:	0002e200 	andeq	lr, r2, r0, lsl #4
     5f0:	061a0100 	ldreq	r0, [sl], -r0, lsl #2
     5f4:	4e160000 	cdpmi	0, 1, cr0, cr6, cr0, {0}
     5f8:	2a000000 	bcs	600 <__STACKSEAL_SIZE+0x600>
     5fc:	01000006 	tsteq	r0, r6
     600:	00000305 	andeq	r0, r0, r5, lsl #6
     604:	00110000 	andseq	r0, r1, r0
     608:	91000000 	mrsls	r0, (UNDEF: 0)
     60c:	10000006 	andne	r0, r0, r6
     610:	03055001 	movweq	r5, #20481	; 0x5001
     614:	00000000 	andeq	r0, r0, r0
     618:	97090000 	strls	r0, [r9, -r0]
     61c:	2a000000 	bcs	624 <__STACKSEAL_SIZE+0x624>
     620:	17000006 	strne	r0, [r0, -r6]
     624:	00000074 	andeq	r0, r0, r4, ror r0
     628:	1a06000f 	bne	18066c <__RAM_SIZE+0x8066c>
     62c:	15000006 	strne	r0, [r0, #-6]
     630:	00017d01 	andeq	r7, r1, r1, lsl #26
     634:	060f0100 	streq	r0, [pc], -r0, lsl #2
     638:	00000001 	andeq	r0, r0, r1
     63c:	00000000 	andeq	r0, r0, r0
     640:	00030200 	andeq	r0, r3, r0, lsl #4
     644:	066e0100 	strbteq	r0, [lr], -r0, lsl #2
     648:	4e160000 	cdpmi	0, 1, cr0, cr6, cr0, {0}
     64c:	7e000000 	cdpvc	0, 0, cr0, cr0, cr0, {0}
     650:	01000006 	tsteq	r0, r6
     654:	00000305 	andeq	r0, r0, r5, lsl #6
     658:	00110000 	andseq	r0, r1, r0
     65c:	91000000 	mrsls	r0, (UNDEF: 0)
     660:	10000006 	andne	r0, r0, r6
     664:	03055001 	movweq	r5, #20481	; 0x5001
     668:	00000000 	andeq	r0, r0, r0
     66c:	97090000 	strls	r0, [r9, -r0]
     670:	7e000000 	cdpvc	0, 0, cr0, cr0, cr0, {0}
     674:	17000006 	strne	r0, [r0, -r6]
     678:	00000074 	andeq	r0, r0, r4, ror r0
     67c:	6e060019 	mcrvs	0, 0, r0, cr6, cr9, {0}
     680:	1b000006 	blne	6a0 <__STACKSEAL_SIZE+0x6a0>
     684:	006c0101 	rsbeq	r0, ip, r1, lsl #2
     688:	006c0000 	rsbeq	r0, ip, r0
     68c:	07060000 	streq	r0, [r6, -r0]
     690:	01011c06 	tsteq	r1, r6, lsl #24
     694:	00000088 	andeq	r0, r0, r8, lsl #1
     698:	0000007e 	andeq	r0, r0, lr, ror r0
     69c:	011b0009 	tsteq	fp, r9
     6a0:	00028601 	andeq	r8, r2, r1, lsl #12
     6a4:	00028600 	andeq	r8, r2, r0, lsl #12
     6a8:	06480700 	strbeq	r0, [r8], -r0, lsl #14
     6ac:	ba01011b 	blt	40b20 <__HEAP_SIZE+0x3fb20>
     6b0:	ba000005 	blt	6cc <__STACKSEAL_SIZE+0x6cc>
     6b4:	08000005 	stmdaeq	r0, {r0, r2}
     6b8:	011d05c8 	tsteq	sp, r8, asr #11
     6bc:	0002f301 	andeq	pc, r2, r1, lsl #6
     6c0:	0002f300 	andeq	pc, r2, r0, lsl #6
     6c4:	017e0500 	cmneq	lr, r0, lsl #10
     6c8:	01011d10 	tsteq	r1, r0, lsl sp
     6cc:	0000003a 	andeq	r0, r0, sl, lsr r0
     6d0:	0000003a 	andeq	r0, r0, sl, lsr r0
     6d4:	0605ec05 	streq	lr, [r5], -r5, lsl #24
     6d8:	bc01011d 	stflts	f0, [r1], {29}
     6dc:	bc000002 	stclt	0, cr0, [r0], {2}
     6e0:	05000002 	streq	r0, [r0, #-2]
     6e4:	1b060358 	blne	18144c <__RAM_SIZE+0x8144c>
     6e8:	02730101 	rsbseq	r0, r3, #1073741824	; 0x40000000
     6ec:	02730000 	rsbseq	r0, r3, #0
     6f0:	2a010000 	bcs	406f8 <__HEAP_SIZE+0x3f6f8>
     6f4:	01011c11 	tsteq	r1, r1, lsl ip
     6f8:	000001a1 	andeq	r0, r0, r1, lsr #3
     6fc:	00000197 	muleq	r0, r7, r1
     700:	011b0009 	tsteq	fp, r9
     704:	0002c701 	andeq	ip, r2, r1, lsl #14
     708:	0002c700 	andeq	ip, r2, r0, lsl #14
     70c:	0e4c0700 	cdpeq	7, 4, cr0, cr12, cr0, {0}
     710:	0a01011b 	beq	40b84 <__HEAP_SIZE+0x3fb84>
     714:	0a000000 	beq	71c <__STACKSEAL_SIZE+0x71c>
     718:	07000000 	streq	r0, [r0, -r0]
     71c:	011b0e4d 	tsteq	fp, sp, asr #28
     720:	00023401 	andeq	r3, r2, r1, lsl #8
     724:	00023400 	andeq	r3, r2, r0, lsl #8
     728:	064a0700 	strbeq	r0, [sl], -r0, lsl #14
     72c:	0004e500 	andeq	lr, r4, r0, lsl #10
     730:	bc000200 	sfmlt	f0, 4, [r0], {-0}
     734:	04000001 	streq	r0, [r0], #-1
     738:	0000bf01 	andeq	fp, r0, r1, lsl #30
     73c:	03050c00 	movweq	r0, #23552	; 0x5c00
     740:	01a80000 			; <UNDEFINED> instruction: 0x01a80000
     744:	00800000 	addeq	r0, r0, r0
	...
     750:	04340000 	ldrteq	r0, [r4], #-0
     754:	01020000 	mrseq	r0, (UNDEF: 2)
     758:	00008f06 	andeq	r8, r0, r6, lsl #30
     75c:	00000300 	andeq	r0, r0, r0, lsl #6
     760:	2b020000 	blcs	80768 <__HEAP_SIZE+0x7f768>
     764:	00003c18 	andeq	r3, r0, r8, lsl ip
     768:	08010200 	stmdaeq	r1, {r9}
     76c:	0000008d 	andeq	r0, r0, sp, lsl #1
     770:	a5050202 	strge	r0, [r5, #-514]	; 0xfffffdfe
     774:	02000002 	andeq	r0, r0, #2
     778:	00ac0702 	adceq	r0, ip, r2, lsl #14
     77c:	04020000 	streq	r0, [r2], #-0
     780:	00025a05 	andeq	r5, r2, r5, lsl #20
     784:	037d0300 	cmneq	sp, #0, 6
     788:	4f020000 	svcmi	0x00020000
     78c:	00006419 	andeq	r6, r0, r9, lsl r4
     790:	07040200 	streq	r0, [r4, -r0, lsl #4]
     794:	00000218 	andeq	r0, r0, r8, lsl r2
     798:	55050802 	strpl	r0, [r5, #-2050]	; 0xfffff7fe
     79c:	02000002 	andeq	r0, r0, #2
     7a0:	02130708 	andseq	r0, r3, #8, 14	; 0x200000
     7a4:	04040000 	streq	r0, [r4], #-0
     7a8:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
     7ac:	07040200 	streq	r0, [r4, -r0, lsl #4]
     7b0:	0000021d 	andeq	r0, r0, sp, lsl r2
     7b4:	00000203 	andeq	r0, r0, r3, lsl #4
     7b8:	13180300 	tstne	r8, #0, 6
     7bc:	00000030 	andeq	r0, r0, r0, lsr r0
     7c0:	00008705 	andeq	r8, r0, r5, lsl #14
     7c4:	037f0300 	cmneq	pc, #0, 6
     7c8:	30030000 	andcc	r0, r3, r0
     7cc:	00005814 	andeq	r5, r0, r4, lsl r8
     7d0:	00980500 	addseq	r0, r8, r0, lsl #10
     7d4:	a4060000 	strge	r0, [r6], #-0
     7d8:	07000000 	streq	r0, [r0, -r0]
     7dc:	f804027c 			; <UNDEFINED> instruction: 0xf804027c
     7e0:	03b30901 			; <UNDEFINED> instruction: 0x03b30901
     7e4:	37080000 	strcc	r0, [r8, -r0]
     7e8:	04000003 	streq	r0, [r0], #-3
     7ec:	a91201fa 	ldmdbge	r2, {r1, r3, r4, r5, r6, r7, r8}
     7f0:	02000000 	andeq	r0, r0, #0
     7f4:	d3080023 	movwle	r0, #32803	; 0x8023
     7f8:	04000003 	streq	r0, [r0], #-3
     7fc:	a41201fb 	ldrge	r0, [r2], #-507	; 0xfffffe05
     800:	02000000 	andeq	r0, r0, #0
     804:	c9080423 	stmdbgt	r8, {r0, r1, r5, sl}
     808:	04000003 	streq	r0, [r0], #-3
     80c:	a41201fc 	ldrge	r0, [r2], #-508	; 0xfffffe04
     810:	02000000 	andeq	r0, r0, #0
     814:	d8080823 	stmdale	r8, {r0, r1, r5, fp}
     818:	04000003 	streq	r0, [r0], #-3
     81c:	a41201fd 	ldrge	r0, [r2], #-509	; 0xfffffe03
     820:	02000000 	andeq	r0, r0, #0
     824:	53090c23 	movwpl	r0, #39971	; 0x9c23
     828:	04005243 	streq	r5, [r0], #-579	; 0xfffffdbd
     82c:	a41201fe 	ldrge	r0, [r2], #-510	; 0xfffffe02
     830:	02000000 	andeq	r0, r0, #0
     834:	43091023 	movwmi	r1, #36899	; 0x9023
     838:	04005243 	streq	r5, [r0], #-579	; 0xfffffdbd
     83c:	a41201ff 	ldrge	r0, [r2], #-511	; 0xfffffe01
     840:	02000000 	andeq	r0, r0, #0
     844:	77081423 	strvc	r1, [r8, -r3, lsr #8]
     848:	04000004 	streq	r0, [r0], #-4
     84c:	c3120200 	tstgt	r2, #0, 4
     850:	02000003 	andeq	r0, r0, #3
     854:	4a081823 	bmi	2068e8 <__RAM_SIZE+0x1068e8>
     858:	04000004 	streq	r0, [r0], #-4
     85c:	a4120201 	ldrge	r0, [r2], #-513	; 0xfffffdff
     860:	02000000 	andeq	r0, r0, #0
     864:	f0082423 			; <UNDEFINED> instruction: 0xf0082423
     868:	04000003 	streq	r0, [r0], #-3
     86c:	a4120202 	ldrge	r0, [r2], #-514	; 0xfffffdfe
     870:	02000000 	andeq	r0, r0, #0
     874:	a3082823 	movwge	r2, #34851	; 0x8823
     878:	04000004 	streq	r0, [r0], #-4
     87c:	a4120203 	ldrge	r0, [r2], #-515	; 0xfffffdfd
     880:	02000000 	andeq	r0, r0, #0
     884:	de082c23 	cdple	12, 0, cr2, cr8, cr3, {1}
     888:	04000003 	streq	r0, [r0], #-3
     88c:	a4120204 	ldrge	r0, [r2], #-516	; 0xfffffdfc
     890:	02000000 	andeq	r0, r0, #0
     894:	e3083023 	movw	r3, #32803	; 0x8023
     898:	04000003 	streq	r0, [r0], #-3
     89c:	a4120205 	ldrge	r0, [r2], #-517	; 0xfffffdfb
     8a0:	02000000 	andeq	r0, r0, #0
     8a4:	78083423 	stmdavc	r8, {r0, r1, r5, sl, ip, sp}
     8a8:	04000003 	streq	r0, [r0], #-3
     8ac:	a4120206 	ldrge	r0, [r2], #-518	; 0xfffffdfa
     8b0:	02000000 	andeq	r0, r0, #0
     8b4:	67083823 	strvs	r3, [r8, -r3, lsr #16]
     8b8:	04000004 	streq	r0, [r0], #-4
     8bc:	a4120207 	ldrge	r0, [r2], #-519	; 0xfffffdf9
     8c0:	02000000 	andeq	r0, r0, #0
     8c4:	44083c23 	strmi	r3, [r8], #-3107	; 0xfffff3dd
     8c8:	04000003 	streq	r0, [r0], #-3
     8cc:	dd120208 	lfmle	f0, 4, [r2, #-32]	; 0xffffffe0
     8d0:	02000003 	andeq	r0, r0, #3
     8d4:	91084023 	tstls	r8, r3, lsr #32
     8d8:	04000003 	streq	r0, [r0], #-3
     8dc:	a9120209 	ldmdbge	r2, {r0, r3, r9}
     8e0:	02000000 	andeq	r0, r0, #0
     8e4:	8e084823 	cdphi	8, 0, cr4, cr8, cr3, {1}
     8e8:	04000004 	streq	r0, [r0], #-4
     8ec:	a912020a 	ldmdbge	r2, {r1, r3, r9}
     8f0:	02000000 	andeq	r0, r0, #0
     8f4:	68084c23 	stmdavs	r8, {r0, r1, r5, sl, fp, lr}
     8f8:	04000003 	streq	r0, [r0], #-3
     8fc:	f712020b 			; <UNDEFINED> instruction: 0xf712020b
     900:	02000003 	andeq	r0, r0, #3
     904:	95085023 	strls	r5, [r8, #-35]	; 0xffffffdd
     908:	04000004 	streq	r0, [r0], #-4
     90c:	1112020c 	tstne	r2, ip, lsl #4
     910:	02000004 	andeq	r0, r0, #4
     914:	31086023 	tstcc	r8, r3, lsr #32
     918:	04000003 	streq	r0, [r0], #-3
     91c:	a912020d 	ldmdbge	r2, {r0, r2, r3, r9}
     920:	02000000 	andeq	r0, r0, #0
     924:	43097823 	movwmi	r7, #38947	; 0x9823
     928:	04005254 	streq	r5, [r0], #-596	; 0xfffffdac
     92c:	a912020e 	ldmdbge	r2, {r1, r2, r3, r9}
     930:	02000000 	andeq	r0, r0, #0
     934:	e9087c23 	stmdb	r8, {r0, r1, r5, sl, fp, ip, sp, lr}
     938:	04000003 	streq	r0, [r0], #-3
     93c:	a912020f 	ldmdbge	r2, {r0, r1, r2, r3, r9}
     940:	03000000 	movweq	r0, #0
     944:	08018023 	stmdaeq	r1, {r0, r1, r5, pc}
     948:	000003a0 	andeq	r0, r0, r0, lsr #7
     94c:	12021004 	andne	r1, r2, #4
     950:	000000a4 	andeq	r0, r0, r4, lsr #1
     954:	01842303 	orreq	r2, r4, r3, lsl #6
     958:	00049d08 	andeq	r9, r4, r8, lsl #26
     95c:	02110400 	andseq	r0, r1, #0, 8
     960:	0000a412 	andeq	sl, r0, r2, lsl r4
     964:	88230300 	stmdahi	r3!, {r8, r9}
     968:	03f50801 	mvnseq	r0, #65536	; 0x10000
     96c:	12040000 	andne	r0, r4, #0
     970:	00a41202 	adceq	r1, r4, r2, lsl #4
     974:	23030000 	movwcs	r0, #12288	; 0x3000
     978:	3508018c 	strcc	r0, [r8, #-396]	; 0xfffffe74
     97c:	04000004 	streq	r0, [r0], #-4
     980:	16120213 			; <UNDEFINED> instruction: 0x16120213
     984:	03000004 	movweq	r0, #4
     988:	08019023 	stmdaeq	r1, {r0, r1, r5, ip, pc}
     98c:	0000046c 	andeq	r0, r0, ip, ror #8
     990:	12021404 	andne	r1, r2, #4, 8	; 0x4000000
     994:	000000a4 	andeq	r0, r0, r4, lsr #1
     998:	01e42303 	mvneq	r2, r3, lsl #6
     99c:	0003ce08 	andeq	ip, r3, r8, lsl #28
     9a0:	02150400 	andseq	r0, r5, #0, 8
     9a4:	0000a412 	andeq	sl, r0, r2, lsl r4
     9a8:	e8230300 	stmda	r3!, {r8, r9}
     9ac:	040d0801 	streq	r0, [sp], #-2049	; 0xfffff7ff
     9b0:	16040000 	strne	r0, [r4], -r0
     9b4:	04261202 	strteq	r1, [r6], #-514	; 0xfffffdfe
     9b8:	23030000 	movwcs	r0, #12288	; 0x3000
     9bc:	240801ec 	strcs	r0, [r8], #-492	; 0xfffffe14
     9c0:	04000003 	streq	r0, [r0], #-3
     9c4:	a4120217 	ldrge	r0, [r2], #-535	; 0xfffffde9
     9c8:	03000000 	movweq	r0, #0
     9cc:	08048023 	stmdaeq	r4, {r0, r1, r5, pc}
     9d0:	00000417 	andeq	r0, r0, r7, lsl r4
     9d4:	12021804 	andne	r1, r2, #4, 16	; 0x40000
     9d8:	00000436 	andeq	r0, r0, r6, lsr r4
     9dc:	04842303 	streq	r2, [r4], #771	; 0x303
     9e0:	0003fb08 	andeq	pc, r3, r8, lsl #22
     9e4:	02190400 	andseq	r0, r9, #0, 8
     9e8:	0000a912 	andeq	sl, r0, r2, lsl r9
     9ec:	c0230300 	eorgt	r0, r3, r0, lsl #6
     9f0:	04010804 	streq	r0, [r1], #-2052	; 0xfffff7fc
     9f4:	1a040000 	bne	1009fc <__RAM_SIZE+0x9fc>
     9f8:	00a91202 	adceq	r1, r9, r2, lsl #4
     9fc:	23030000 	movwcs	r0, #12288	; 0x3000
     a00:	070804c4 	streq	r0, [r8, -r4, asr #9]
     a04:	04000004 	streq	r0, [r0], #-4
     a08:	a912021b 	ldmdbge	r2, {r0, r1, r3, r4, r9}
     a0c:	03000000 	movweq	r0, #0
     a10:	0804c823 	stmdaeq	r4, {r0, r1, r5, fp, lr, pc}
     a14:	00000421 	andeq	r0, r0, r1, lsr #8
     a18:	12021c04 	andne	r1, r2, #4, 24	; 0x400
     a1c:	00000446 	andeq	r0, r0, r6, asr #8
     a20:	04cc2303 	strbeq	r2, [ip], #771	; 0x303
     a24:	00037008 	andeq	r7, r3, r8
     a28:	021d0400 	andseq	r0, sp, #0, 8
     a2c:	0000a412 	andeq	sl, r0, r2, lsl r4
     a30:	d0230300 	eorle	r0, r3, r0, lsl #6
     a34:	042b0804 	strteq	r0, [fp], #-2052	; 0xfffff7fc
     a38:	1e040000 	cdpne	0, 0, cr0, cr4, cr0, {0}
     a3c:	04461202 	strbeq	r1, [r6], #-514	; 0xfffffdfe
     a40:	23030000 	movwcs	r0, #12288	; 0x3000
     a44:	590804d4 	stmdbpl	r8, {r2, r4, r6, r7, sl}
     a48:	04000004 	streq	r0, [r0], #-4
     a4c:	a412021f 	ldrge	r0, [r2], #-543	; 0xfffffde1
     a50:	03000000 	movweq	r0, #0
     a54:	0804d823 	stmdaeq	r4, {r0, r1, r5, fp, ip, lr, pc}
     a58:	00000329 	andeq	r0, r0, r9, lsr #6
     a5c:	12022004 	andne	r2, r2, #4
     a60:	000000a4 	andeq	r0, r0, r4, lsr #1
     a64:	04dc2303 	ldrbeq	r2, [ip], #771	; 0x303
     a68:	00046108 	andeq	r6, r4, r8, lsl #2
     a6c:	02210400 	eoreq	r0, r1, #0, 8
     a70:	0000a412 	andeq	sl, r0, r2, lsl r4
     a74:	e0230300 	eor	r0, r3, r0, lsl #6
     a78:	03b70804 			; <UNDEFINED> instruction: 0x03b70804
     a7c:	22040000 	andcs	r0, r4, #0
     a80:	00a41202 	adceq	r1, r4, r2, lsl #4
     a84:	23030000 	movwcs	r0, #12288	; 0x3000
     a88:	980804e4 	stmdals	r8, {r2, r5, r6, r7, sl}
     a8c:	04000003 	streq	r0, [r0], #-3
     a90:	a4120223 	ldrge	r0, [r2], #-547	; 0xfffffddd
     a94:	03000000 	movweq	r0, #0
     a98:	0804e823 	stmdaeq	r4, {r0, r1, r5, fp, sp, lr, pc}
     a9c:	00000471 	andeq	r0, r0, r1, ror r4
     aa0:	12022404 	andne	r2, r2, #4, 8	; 0x4000000
     aa4:	000000a4 	andeq	r0, r0, r4, lsr #1
     aa8:	04ec2303 	strbteq	r2, [ip], #771	; 0x303
     aac:	00045008 	andeq	r5, r4, r8
     ab0:	02250400 	eoreq	r0, r5, #0, 8
     ab4:	0000a412 	andeq	sl, r0, r2, lsl r4
     ab8:	f0230300 			; <UNDEFINED> instruction: 0xf0230300
     abc:	034b0804 	movteq	r0, #47108	; 0xb804
     ac0:	26040000 	strcs	r0, [r4], -r0
     ac4:	00a41202 	adceq	r1, r4, r2, lsl #4
     ac8:	23030000 	movwcs	r0, #12288	; 0x3000
     acc:	3d0804f4 	cfstrscc	mvf0, [r8, #-976]	; 0xfffffc30
     ad0:	04000003 	streq	r0, [r0], #-3
     ad4:	a4120227 	ldrge	r0, [r2], #-551	; 0xfffffdd9
     ad8:	03000000 	movweq	r0, #0
     adc:	0004f823 	andeq	pc, r4, r3, lsr #16
     ae0:	0000930a 	andeq	r9, r0, sl, lsl #6
     ae4:	0003c300 	andeq	ip, r3, r0, lsl #6
     ae8:	00800b00 	addeq	r0, r0, r0, lsl #22
     aec:	000b0000 	andeq	r0, fp, r0
     af0:	0003b305 	andeq	fp, r3, r5, lsl #6
     af4:	00a90a00 	adceq	r0, r9, r0, lsl #20
     af8:	03d80000 	bicseq	r0, r8, #0
     afc:	800b0000 	andhi	r0, fp, r0
     b00:	01000000 	mrseq	r0, (UNDEF: 0)
     b04:	03c80600 	biceq	r0, r8, #0, 12
     b08:	d8050000 	stmdale	r5, {}	; <UNPREDICTABLE>
     b0c:	0a000003 	beq	b20 <__Vectors_Size+0x360>
     b10:	000000a9 	andeq	r0, r0, r9, lsr #1
     b14:	000003f2 	strdeq	r0, [r0], -r2
     b18:	0000800b 	andeq	r8, r0, fp
     b1c:	06000300 	streq	r0, [r0], -r0, lsl #6
     b20:	000003e2 	andeq	r0, r0, r2, ror #7
     b24:	0003f205 	andeq	pc, r3, r5, lsl #4
     b28:	00a90a00 	adceq	r0, r9, r0, lsl #20
     b2c:	040c0000 	streq	r0, [ip], #-0
     b30:	800b0000 	andhi	r0, fp, r0
     b34:	05000000 	streq	r0, [r0, #-0]
     b38:	03fc0600 	mvnseq	r0, #0, 12
     b3c:	0c050000 	stceq	0, cr0, [r5], {-0}
     b40:	0a000004 	beq	b58 <__Vectors_Size+0x398>
     b44:	00000098 	muleq	r0, r8, r0
     b48:	00000426 	andeq	r0, r0, r6, lsr #8
     b4c:	0000800b 	andeq	r8, r0, fp
     b50:	0a001400 	beq	5b58 <__HEAP_SIZE+0x4b58>
     b54:	00000098 	muleq	r0, r8, r0
     b58:	00000436 	andeq	r0, r0, r6, lsr r4
     b5c:	0000800b 	andeq	r8, r0, fp
     b60:	0a004400 	beq	11b68 <__HEAP_SIZE+0x10b68>
     b64:	00000098 	muleq	r0, r8, r0
     b68:	00000446 	andeq	r0, r0, r6, asr #8
     b6c:	0000800b 	andeq	r8, r0, fp
     b70:	0a000e00 	beq	4378 <__HEAP_SIZE+0x3378>
     b74:	00000098 	muleq	r0, r8, r0
     b78:	00000456 	andeq	r0, r0, r6, asr r4
     b7c:	0000800b 	andeq	r8, r0, fp
     b80:	0c000000 	stceq	0, cr0, [r0], {-0}
     b84:	00000388 	andeq	r0, r0, r8, lsl #7
     b88:	03022804 	movweq	r2, #10244	; 0x2804
     b8c:	000000ae 	andeq	r0, r0, lr, lsr #1
     b90:	00047c03 	andeq	r7, r4, r3, lsl #24
     b94:	0f240500 	svceq	0x00240500
     b98:	00000474 	andeq	r0, r0, r4, ror r4
     b9c:	00046306 	andeq	r6, r4, r6, lsl #6
     ba0:	7a040d00 	bvc	103fa8 <__RAM_SIZE+0x3fa8>
     ba4:	0e000004 	cdpeq	0, 0, cr0, cr0, cr4, {0}
     ba8:	03a70f01 			; <UNDEFINED> instruction: 0x03a70f01
     bac:	29050000 	stmdbcs	r5, {}	; <UNPREDICTABLE>
     bb0:	00009811 	andeq	r9, r0, r1, lsl r8
     bb4:	0a010100 	beq	40fbc <__HEAP_SIZE+0x3ffbc>
     bb8:	0000046f 	andeq	r0, r0, pc, ror #8
     bbc:	0000049b 	muleq	r0, fp, r4
     bc0:	00008010 	andeq	r8, r0, r0, lsl r0
     bc4:	0001ef00 	andeq	lr, r1, r0, lsl #30
     bc8:	00048a06 	andeq	r8, r4, r6, lsl #20
     bcc:	03bf0f00 			; <UNDEFINED> instruction: 0x03bf0f00
     bd0:	38010000 	stmdacc	r1, {}	; <UNPREDICTABLE>
     bd4:	00049b20 	andeq	r9, r4, r0, lsr #22
     bd8:	11010100 	mrsne	r0, (UNDEF: 17)
     bdc:	0000047c 	andeq	r0, r0, ip, ror r4
     be0:	050a3e01 	streq	r3, [sl, #-3585]	; 0xfffff1ff
     be4:	00000003 	andeq	r0, r0, r3
     be8:	3f011238 	svccc	0x00011238
     bec:	01000004 	tsteq	r0, r4
     bf0:	9001064c 	andls	r0, r1, ip, asr #12
     bf4:	bc100009 	ldclt	0, cr0, [r0], {9}
     bf8:	02100009 	andseq	r0, r0, #9
     bfc:	1201007d 	andne	r0, r1, #125	; 0x7d
     c00:	00035201 	andeq	r5, r3, r1, lsl #4
     c04:	06440100 	strbeq	r0, [r4], -r0, lsl #2
     c08:	00000001 	andeq	r0, r0, r1
     c0c:	00000000 	andeq	r0, r0, r0
     c10:	007d0200 	rsbseq	r0, sp, r0, lsl #4
     c14:	1bc10001 	blne	ff040c20 <__StackTop+0xc6f40c20>
     c18:	00020000 	andeq	r0, r2, r0
     c1c:	000002ac 	andeq	r0, r0, ip, lsr #5
     c20:	00bf0104 	adcseq	r0, pc, r4, lsl #2
     c24:	8e0c0000 	cdphi	0, 0, cr0, cr12, cr0, {0}
     c28:	a8000005 	stmdage	r0, {r0, r2}
     c2c:	50000001 	andpl	r0, r0, r1
     c30:	00000001 	andeq	r0, r0, r1
     c34:	00000000 	andeq	r0, r0, r0
     c38:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
     c3c:	02000006 	andeq	r0, r0, #6
     c40:	024e0408 	subeq	r0, lr, #8, 8	; 0x8000000
     c44:	04020000 	streq	r0, [r2], #-0
     c48:	00021d07 	andeq	r1, r2, r7, lsl #26
     c4c:	06010200 	streq	r0, [r1], -r0, lsl #4
     c50:	0000008f 	andeq	r0, r0, pc, lsl #1
     c54:	8d080102 	stfhis	f0, [r8, #-8]
     c58:	02000000 	andeq	r0, r0, #0
     c5c:	02a50502 	adceq	r0, r5, #8388608	; 0x800000
     c60:	02020000 	andeq	r0, r2, #0
     c64:	0000ac07 	andeq	sl, r0, r7, lsl #24
     c68:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
     c6c:	0000025a 	andeq	r0, r0, sl, asr r2
     c70:	00005303 	andeq	r5, r0, r3, lsl #6
     c74:	07040200 	streq	r0, [r4, -r0, lsl #4]
     c78:	00000218 	andeq	r0, r0, r8, lsl r2
     c7c:	55050802 	strpl	r0, [r5, #-2050]	; 0xfffff7fe
     c80:	03000002 	movweq	r0, #2
     c84:	00000066 	andeq	r0, r0, r6, rrx
     c88:	00064c04 	andeq	r4, r6, r4, lsl #24
     c8c:	19690200 	stmdbne	r9!, {r9}^
     c90:	0000007e 	andeq	r0, r0, lr, ror r0
     c94:	13070802 	movwne	r0, #30722	; 0x7802
     c98:	05000002 	streq	r0, [r0, #-2]
     c9c:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
     ca0:	85030074 	strhi	r0, [r3, #-116]	; 0xffffff8c
     ca4:	04000000 	streq	r0, [r0], #-0
     ca8:	00000675 	andeq	r0, r0, r5, ror r6
     cac:	301ae802 	andscc	lr, sl, r2, lsl #16
     cb0:	03000000 	movweq	r0, #0
     cb4:	00000030 	andeq	r0, r0, r0, lsr r0
     cb8:	00064e04 	andeq	r4, r6, r4, lsl #28
     cbc:	143c0300 	ldrtne	r0, [ip], #-768	; 0xfffffd00
     cc0:	00000072 	andeq	r0, r0, r2, ror r0
     cc4:	00067704 	andeq	r7, r6, r4, lsl #14
     cc8:	15520300 	ldrbne	r0, [r2, #-768]	; 0xfffffd00
     ccc:	00000091 	muleq	r0, r1, r0
     cd0:	0006df04 	andeq	sp, r6, r4, lsl #30
     cd4:	1b280400 	blne	a01cdc <__RAM_SIZE+0x901cdc>
     cd8:	000000c6 	andeq	r0, r0, r6, asr #1
     cdc:	00058406 	andeq	r8, r5, r6, lsl #8
     ce0:	00060400 	andeq	r0, r6, r0, lsl #8
     ce4:	000000e0 	andeq	r0, r0, r0, ror #1
     ce8:	00063407 	andeq	r3, r6, r7, lsl #8
     cec:	0000e000 	andeq	lr, r0, r0
     cf0:	00230200 	eoreq	r0, r3, r0, lsl #4
     cf4:	04080001 	streq	r0, [r8], #-1
     cf8:	00058604 	andeq	r8, r5, r4, lsl #12
     cfc:	18630400 	stmdane	r3!, {sl}^
     d00:	000000ba 	strheq	r0, [r0], -sl
     d04:	0004e704 	andeq	lr, r4, r4, lsl #14
     d08:	17d10500 	ldrbne	r0, [r1, r0, lsl #10]
     d0c:	00000030 	andeq	r0, r0, r0, lsr r0
     d10:	0000ee03 	andeq	lr, r0, r3, lsl #28
     d14:	04080200 	streq	r0, [r8], #-512	; 0xfffffe00
     d18:	00000249 	andeq	r0, r0, r9, asr #4
     d1c:	0005cb04 	andeq	ip, r5, r4, lsl #22
     d20:	107a0100 	rsbsne	r0, sl, r0, lsl #2
     d24:	00000112 	andeq	r0, r0, r2, lsl r1
     d28:	01180409 	tsteq	r8, r9, lsl #8
     d2c:	010a0000 	mrseq	r0, (UNDEF: 10)
     d30:	00000133 	andeq	r0, r0, r3, lsr r1
     d34:	0001330b 	andeq	r3, r1, fp, lsl #6
     d38:	00e00b00 	rsceq	r0, r0, r0, lsl #22
     d3c:	ee0b0000 	cdp	0, 0, cr0, cr11, cr0, {0}
     d40:	0b000000 	bleq	d48 <__Vectors_Size+0x588>
     d44:	000000ee 	andeq	r0, r0, lr, ror #1
     d48:	08010200 	stmdaeq	r1, {r9}
     d4c:	00000096 	muleq	r0, r6, r0
     d50:	00013303 	andeq	r3, r1, r3, lsl #6
     d54:	01080c00 	tsteq	r8, r0, lsl #24
     d58:	0167097e 	smceq	28830	; 0x709e
     d5c:	660d0000 	strvs	r0, [sp], -r0
     d60:	01007463 	tsteq	r0, r3, ror #8
     d64:	01780b7f 	cmneq	r8, pc, ror fp
     d68:	23020000 	movwcs	r0, #8192	; 0x2000
     d6c:	72610d00 	rsbvc	r0, r1, #0, 26
     d70:	80010067 	andhi	r0, r1, r7, rrx
     d74:	0000e009 	andeq	lr, r0, r9
     d78:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
     d7c:	78010a00 	stmdavc	r1, {r9, fp}
     d80:	0b000001 	bleq	d8c <__Vectors_Size+0x5cc>
     d84:	00000133 	andeq	r0, r0, r3, lsr r1
     d88:	0000e00b 	andeq	lr, r0, fp
     d8c:	04090000 	streq	r0, [r9], #-0
     d90:	00000167 	andeq	r0, r0, r7, ror #2
     d94:	0006c104 	andeq	ip, r6, r4, lsl #2
     d98:	03810100 	orreq	r0, r1, #0, 2
     d9c:	0000013f 	andeq	r0, r0, pc, lsr r1
     da0:	00017e03 	andeq	r7, r1, r3, lsl #28
     da4:	64010e00 	strvs	r0, [r1], #-3584	; 0xfffff200
     da8:	01000005 	tsteq	r0, r5
     dac:	0105038a 	smlabbeq	r5, sl, r3, r0
     db0:	00000085 	andeq	r0, r0, r5, lsl #1
	...
     dbc:	00000322 	andeq	r0, r0, r2, lsr #6
     dc0:	00024c01 	andeq	r4, r2, r1, lsl #24
     dc4:	756f0f00 	strbvc	r0, [pc, #-3840]!	; fffffecc <__StackTop+0xc7effecc>
     dc8:	8a010074 	bhi	40fa0 <__HEAP_SIZE+0x3ffa0>
     dcc:	01781603 	cmneq	r8, r3, lsl #12
     dd0:	03840000 	orreq	r0, r4, #0
     dd4:	037e0000 	cmneq	lr, #0
     dd8:	610f0000 	mrsvs	r0, CPSR
     ddc:	01006772 	tsteq	r0, r2, ror r7
     de0:	e03d038a 	eors	r0, sp, sl, lsl #7
     de4:	b5000000 	strlt	r0, [r0, #-0]
     de8:	b1000003 	tstlt	r0, r3
     dec:	10000003 	andne	r0, r0, r3
     df0:	000005a9 	andeq	r0, r0, r9, lsr #11
     df4:	4e038a01 	vmlami.f32	s16, s6, s2
     df8:	0000024c 	andeq	r0, r0, ip, asr #4
     dfc:	11789102 	cmnne	r8, r2, lsl #2
     e00:	00617612 	rsbeq	r7, r1, r2, lsl r6
     e04:	0b038c01 	bleq	e3e10 <__HEAP_SIZE+0xe2e10>
     e08:	000000e2 	andeq	r0, r0, r2, ror #1
     e0c:	136c9102 	cmnne	ip, #-2147483648	; 0x80000000
     e10:	000004bf 			; <UNDEFINED> instruction: 0x000004bf
     e14:	1b038e01 	blne	e4620 <__HEAP_SIZE+0xe3620>
     e18:	0000018a 	andeq	r0, r0, sl, lsl #3
     e1c:	14649102 	strbtne	r9, [r4], #-258	; 0xfffffefe
     e20:	00746572 	rsbseq	r6, r4, r2, ror r5
     e24:	0d038f01 	stceq	15, cr8, [r3, #-4]
     e28:	0000008c 	andeq	r0, r0, ip, lsl #1
     e2c:	000003d8 	ldrdeq	r0, [r0], -r8
     e30:	000003d6 	ldrdeq	r0, [r0], -r6
     e34:	00000015 	andeq	r0, r0, r5, lsl r0
     e38:	00055f00 	andeq	r5, r5, r0, lsl #30
     e3c:	50011600 	andpl	r1, r1, r0, lsl #12
     e40:	00000305 	andeq	r0, r0, r5, lsl #6
     e44:	01160000 	tsteq	r6, r0
     e48:	54910251 	ldrpl	r0, [r1], #593	; 0x251
     e4c:	02520116 	subseq	r0, r2, #-2147483643	; 0x80000005
     e50:	0116ff09 	tsteq	r6, r9, lsl #30	; <UNPREDICTABLE>
     e54:	68910353 	ldmvs	r1, {r0, r1, r4, r6, r8, r9}
     e58:	7d021606 	stcvc	6, cr1, [r2, #-24]	; 0xffffffe8
     e5c:	6c910200 	lfmvs	f0, 4, [r1], {0}
     e60:	04090000 	streq	r0, [r9], #-0
     e64:	0000013a 	andeq	r0, r0, sl, lsr r1
     e68:	05b7010e 	ldreq	r0, [r7, #270]!	; 0x10e
     e6c:	84010000 	strhi	r0, [r1], #-0
     e70:	85010503 	strhi	r0, [r1, #-1283]	; 0xfffffafd
	...
     e7c:	eb000000 	bl	e84 <__Vectors_Size+0x6c4>
     e80:	01000003 	tsteq	r0, r3
     e84:	000002ee 	andeq	r0, r0, lr, ror #5
     e88:	0004d817 	andeq	sp, r4, r7, lsl r8
     e8c:	03840100 	orreq	r0, r4, #0, 2
     e90:	0002ee15 	andeq	lr, r2, r5, lsl lr
     e94:	00042900 	andeq	r2, r4, r0, lsl #18
     e98:	00042300 	andeq	r2, r4, r0, lsl #6
     e9c:	00241700 	eoreq	r1, r4, r0, lsl #14
     ea0:	84010000 	strhi	r0, [r1], #-0
     ea4:	00ee2403 	rsceq	r2, lr, r3, lsl #8
     ea8:	045b0000 	ldrbeq	r0, [fp], #-0
     eac:	04550000 	ldrbeq	r0, [r5], #-0
     eb0:	a9170000 	ldmdbge	r7, {}	; <UNPREDICTABLE>
     eb4:	01000005 	tsteq	r0, r5
     eb8:	4c370384 	ldcmi	3, cr0, [r7], #-528	; 0xfffffdf0
     ebc:	8d000002 	stchi	0, cr0, [r0, #-8]
     ec0:	87000004 	strhi	r0, [r0, -r4]
     ec4:	0f000004 	svceq	0x00000004
     ec8:	01006176 	tsteq	r0, r6, ror r1
     ecc:	e2470384 	sub	r0, r7, #132, 6	; 0x10000002
     ed0:	bb000000 	bllt	ed8 <__Vectors_Size+0x718>
     ed4:	b9000004 	stmdblt	r0, {r2}
     ed8:	15000004 	strne	r0, [r0, #-4]
     edc:	00000000 	andeq	r0, r0, r0
     ee0:	0000055f 	andeq	r0, r0, pc, asr r5
     ee4:	05500116 	ldrbeq	r0, [r0, #-278]	; 0xfffffeea
     ee8:	00000003 	andeq	r0, r0, r3
     eec:	51011600 	tstpl	r1, r0, lsl #12
     ef0:	5001f303 	andpl	pc, r1, r3, lsl #6
     ef4:	03520116 	cmpeq	r2, #-2147483643	; 0x80000005
     ef8:	165101f3 			; <UNDEFINED> instruction: 0x165101f3
     efc:	f3035301 	vcgt.u8	d5, d3, d1
     f00:	00005201 	andeq	r5, r0, r1, lsl #4
     f04:	01330409 	teqeq	r3, r9, lsl #8
     f08:	010e0000 	mrseq	r0, (UNDEF: 14)
     f0c:	000004df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
     f10:	05037d01 	streq	r7, [r3, #-3329]	; 0xfffff2ff
     f14:	00008501 	andeq	r8, r0, r1, lsl #10
	...
     f20:	0004ce00 	andeq	ip, r4, r0, lsl #28
     f24:	03740100 	cmneq	r4, #0, 2
     f28:	a9170000 	ldmdbge	r7, {}	; <UNPREDICTABLE>
     f2c:	01000005 	tsteq	r0, r5
     f30:	4c19037d 	ldcmi	3, cr0, [r9], {125}	; 0x7d
     f34:	0c000002 	stceq	0, cr0, [r0], {2}
     f38:	06000005 	streq	r0, [r0], -r5
     f3c:	0f000005 	svceq	0x00000005
     f40:	01006176 	tsteq	r0, r6, ror r1
     f44:	e229037d 	eor	r0, r9, #-201326591	; 0xf4000001
     f48:	3a000000 	bcc	f50 <__Vectors_Size+0x790>
     f4c:	38000005 	stmdacc	r0, {r0, r2}
     f50:	13000005 	movwne	r0, #5
     f54:	000004d8 	ldrdeq	r0, [r0], -r8
     f58:	08037f01 	stmdaeq	r3, {r0, r8, r9, sl, fp, ip, sp, lr}
     f5c:	00000374 	andeq	r0, r0, r4, ror r3
     f60:	15749102 	ldrbne	r9, [r4, #-258]!	; 0xfffffefe
     f64:	00000000 	andeq	r0, r0, r0
     f68:	0000055f 	andeq	r0, r0, pc, asr r5
     f6c:	05500116 	ldrbeq	r0, [r0, #-278]	; 0xfffffeea
     f70:	001b0103 	andseq	r0, fp, r3, lsl #2
     f74:	51011610 	tstpl	r1, r0, lsl r6
     f78:	16749102 	ldrbtne	r9, [r4], -r2, lsl #2
     f7c:	09025201 	stmdbeq	r2, {r0, r9, ip, lr}
     f80:	530116ff 	movwpl	r1, #5887	; 0x16ff
     f84:	5001f303 	andpl	pc, r1, r3, lsl #6
     f88:	33180000 	tstcc	r8, #0
     f8c:	84000001 	strhi	r0, [r0], #-1
     f90:	19000003 	stmdbne	r0, {r0, r1}
     f94:	00000030 	andeq	r0, r0, r0, lsr r0
     f98:	010e0000 	mrseq	r0, (UNDEF: 14)
     f9c:	000005b8 			; <UNDEFINED> instruction: 0x000005b8
     fa0:	05037301 	streq	r7, [r3, #-769]	; 0xfffffcff
     fa4:	00008501 	andeq	r8, r0, r1, lsl #10
	...
     fb0:	00054d00 	andeq	r4, r5, r0, lsl #26
     fb4:	04330100 	ldrteq	r0, [r3], #-256	; 0xffffff00
     fb8:	d8170000 	ldmdale	r7, {}	; <UNPREDICTABLE>
     fbc:	01000004 	tsteq	r0, r4
     fc0:	ee140373 	mrc	3, 0, r0, cr4, cr3, {3}
     fc4:	af000002 	svcge	0x00000002
     fc8:	a9000005 	stmdbge	r0, {r0, r2}
     fcc:	17000005 	strne	r0, [r0, -r5]
     fd0:	00000024 	andeq	r0, r0, r4, lsr #32
     fd4:	23037301 	movwcs	r7, #13057	; 0x3301
     fd8:	000000ee 	andeq	r0, r0, lr, ror #1
     fdc:	000005e1 	andeq	r0, r0, r1, ror #11
     fe0:	000005db 	ldrdeq	r0, [r0], -fp
     fe4:	0005a910 	andeq	sl, r5, r0, lsl r9
     fe8:	03730100 	cmneq	r3, #0, 2
     fec:	00024c36 	andeq	r4, r2, r6, lsr ip
     ff0:	78910200 	ldmvc	r1, {r9}
     ff4:	61761211 	cmnvs	r6, r1, lsl r2
     ff8:	03750100 	cmneq	r5, #0, 2
     ffc:	0000e20b 	andeq	lr, r0, fp, lsl #4
    1000:	6c910200 	lfmvs	f0, 4, [r1], {0}
    1004:	74657214 	strbtvc	r7, [r5], #-532	; 0xfffffdec
    1008:	03770100 	cmneq	r7, #0, 2
    100c:	00008c0d 	andeq	r8, r0, sp, lsl #24
    1010:	00060f00 	andeq	r0, r6, r0, lsl #30
    1014:	00060d00 	andeq	r0, r6, r0, lsl #26
    1018:	00001500 	andeq	r1, r0, r0, lsl #10
    101c:	055f0000 	ldrbeq	r0, [pc, #-0]	; 1024 <__HEAP_SIZE+0x24>
    1020:	01160000 	tsteq	r6, r0
    1024:	00030550 	andeq	r0, r3, r0, asr r5
    1028:	16000000 	strne	r0, [r0], -r0
    102c:	f3035101 	vrhadd.u8	d5, d3, d1
    1030:	01165001 	tsteq	r6, r1
    1034:	01f30352 	mvnseq	r0, r2, asr r3
    1038:	53011651 	movwpl	r1, #5713	; 0x1651
    103c:	06689103 	strbteq	r9, [r8], -r3, lsl #2
    1040:	007d0216 	rsbseq	r0, sp, r6, lsl r2
    1044:	006c9102 	rsbeq	r9, ip, r2, lsl #2
    1048:	f2010e00 	vceq.f32	d0, d1, d0
    104c:	01000005 	tsteq	r0, r5
    1050:	01050369 	tsteq	r5, r9, ror #6
    1054:	00000085 	andeq	r0, r0, r5, lsl #1
	...
    1060:	00000622 	andeq	r0, r0, r2, lsr #12
    1064:	0004cc01 	andeq	ip, r4, r1, lsl #24
    1068:	04d81700 	ldrbeq	r1, [r8], #1792	; 0x700
    106c:	69010000 	stmdbvs	r1, {}	; <UNPREDICTABLE>
    1070:	02ee1303 	rsceq	r1, lr, #201326592	; 0xc000000
    1074:	06840000 	streq	r0, [r4], r0
    1078:	067e0000 	ldrbteq	r0, [lr], -r0
    107c:	a9100000 	ldmdbge	r0, {}	; <UNPREDICTABLE>
    1080:	01000005 	tsteq	r0, r5
    1084:	4c270369 	stcmi	3, cr0, [r7], #-420	; 0xfffffe5c
    1088:	02000002 	andeq	r0, r0, #2
    108c:	12117491 	andsne	r7, r1, #-1862270976	; 0x91000000
    1090:	01006176 	tsteq	r0, r6, ror r1
    1094:	e20b036b 	and	r0, fp, #-1409286143	; 0xac000001
    1098:	02000000 	andeq	r0, r0, #0
    109c:	72146c91 	andsvc	r6, r4, #37120	; 0x9100
    10a0:	01007465 	tsteq	r0, r5, ror #8
    10a4:	8c0d036d 	stchi	3, cr0, [sp], {109}	; 0x6d
    10a8:	b2000000 	andlt	r0, r0, #0
    10ac:	b0000006 	andlt	r0, r0, r6
    10b0:	15000006 	strne	r0, [r0, #-6]
    10b4:	00000000 	andeq	r0, r0, r0
    10b8:	0000055f 	andeq	r0, r0, pc, asr r5
    10bc:	05500116 	ldrbeq	r0, [r0, #-278]	; 0xfffffeea
    10c0:	00000003 	andeq	r0, r0, r3
    10c4:	51011600 	tstpl	r1, r0, lsl #12
    10c8:	5001f303 	andpl	pc, r1, r3, lsl #6
    10cc:	02520116 	subseq	r0, r2, #-2147483643	; 0x80000005
    10d0:	0116ff09 	tsteq	r6, r9, lsl #30	; <UNPREDICTABLE>
    10d4:	5c910353 	ldcpl	3, cr0, [r1], {83}	; 0x53
    10d8:	7d021606 	stcvc	6, cr1, [r2, #-24]	; 0xffffffe8
    10dc:	60910200 	addsvs	r0, r1, r0, lsl #4
    10e0:	010e0000 	mrseq	r0, (UNDEF: 14)
    10e4:	000005ba 			; <UNDEFINED> instruction: 0x000005ba
    10e8:	05035e01 	streq	r5, [r3, #-3585]	; 0xfffff1ff
    10ec:	00008501 	andeq	r8, r0, r1, lsl #10
    10f0:	001b0c00 	andseq	r0, fp, r0, lsl #24
    10f4:	001b3810 	andseq	r3, fp, r0, lsl r8
    10f8:	0006c510 	andeq	ip, r6, r0, lsl r5
    10fc:	055f0100 	ldrbeq	r0, [pc, #-256]	; 1004 <__HEAP_SIZE+0x4>
    1100:	a9100000 	ldmdbge	r0, {}	; <UNPREDICTABLE>
    1104:	01000005 	tsteq	r0, r5
    1108:	4c18035e 	ldcmi	3, cr0, [r8], {94}	; 0x5e
    110c:	02000002 	andeq	r0, r0, #2
    1110:	12117091 	andsne	r7, r1, #145	; 0x91
    1114:	01006176 	tsteq	r0, r6, ror r1
    1118:	e20b0360 	and	r0, fp, #96, 6	; 0x80000001
    111c:	02000000 	andeq	r0, r0, #0
    1120:	d8136491 	ldmdale	r3, {r0, r4, r7, sl, sp, lr}
    1124:	01000004 	tsteq	r0, r4
    1128:	74080362 	strvc	r0, [r8], #-866	; 0xfffffc9e
    112c:	02000003 	andeq	r0, r0, #3
    1130:	72146091 	andsvc	r6, r4, #145	; 0x91
    1134:	01007465 	tsteq	r0, r5, ror #8
    1138:	8c0d0363 	stchi	3, cr0, [sp], {99}	; 0x63
    113c:	23000000 	movwcs	r0, #0
    1140:	21000007 	tstcs	r0, r7
    1144:	15000007 	strne	r0, [r0, #-7]
    1148:	10001b28 	andne	r1, r0, r8, lsr #22
    114c:	0000055f 	andeq	r0, r0, pc, asr r5
    1150:	05500116 	ldrbeq	r0, [r0, #-278]	; 0xfffffeea
    1154:	001b0103 	andseq	r0, fp, r3, lsl #2
    1158:	51011610 	tstpl	r1, r0, lsl r6
    115c:	16409102 	strbne	r9, [r0], -r2, lsl #2
    1160:	09025201 	stmdbeq	r2, {r0, r9, ip, lr}
    1164:	530116ff 	movwpl	r1, #5887	; 0x16ff
    1168:	06509103 	ldrbeq	r9, [r0], -r3, lsl #2
    116c:	007d0216 	rsbseq	r0, sp, r6, lsl r2
    1170:	00549102 	subseq	r9, r4, r2, lsl #2
    1174:	05b61a00 	ldreq	r1, [r6, #2560]!	; 0xa00
    1178:	41010000 	mrsmi	r0, (UNDEF: 1)
    117c:	85010c02 	strhi	r0, [r1, #-3074]	; 0xfffff3fe
    1180:	80000000 	andhi	r0, r0, r0
    1184:	00100014 	andseq	r0, r0, r4, lsl r0
    1188:	3610001b 			; <UNDEFINED> instruction: 0x3610001b
    118c:	01000007 	tsteq	r0, r7
    1190:	00000b7d 	andeq	r0, r0, sp, ror fp
    1194:	74756f0f 	ldrbtvc	r6, [r5], #-3855	; 0xfffff0f1
    1198:	02410100 	subeq	r0, r1, #0, 2
    119c:	00010624 	andeq	r0, r1, r4, lsr #12
    11a0:	00077700 	andeq	r7, r7, r0, lsl #14
    11a4:	00076f00 	andeq	r6, r7, r0, lsl #30
    11a8:	04d81700 	ldrbeq	r1, [r8], #1792	; 0x700
    11ac:	41010000 	mrsmi	r0, (UNDEF: 1)
    11b0:	02ee2f02 	rsceq	r2, lr, #2, 30
    11b4:	07b50000 	ldreq	r0, [r5, r0]!
    11b8:	07ab0000 	streq	r0, [fp, r0]!
    11bc:	1c170000 	ldcne	0, cr0, [r7], {-0}
    11c0:	01000006 	tsteq	r0, r6
    11c4:	fa440241 	blx	1101ad0 <__RAM_SIZE+0x1001ad0>
    11c8:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    11cc:	f7000008 			; <UNDEFINED> instruction: 0xf7000008
    11d0:	17000007 	strne	r0, [r0, -r7]
    11d4:	000005a9 	andeq	r0, r0, r9, lsr #11
    11d8:	58024101 	stmdapl	r2, {r0, r8, lr}
    11dc:	0000024c 	andeq	r0, r0, ip, asr #4
    11e0:	0000087b 	andeq	r0, r0, fp, ror r8
    11e4:	00000877 	andeq	r0, r0, r7, ror r8
    11e8:	0061761b 	rsbeq	r7, r1, fp, lsl r6
    11ec:	68024101 	stmdavs	r2, {r0, r8, lr}
    11f0:	000000e2 	andeq	r0, r0, r2, ror #1
    11f4:	1c009102 	stfned	f1, [r0], {2}
    11f8:	00000607 	andeq	r0, r0, r7, lsl #12
    11fc:	10024301 	andne	r4, r2, r1, lsl #6
    1200:	00000030 	andeq	r0, r0, r0, lsr r0
    1204:	000008b1 			; <UNDEFINED> instruction: 0x000008b1
    1208:	00000899 	muleq	r0, r9, r8
    120c:	0006d91c 	andeq	sp, r6, ip, lsl r9
    1210:	02430100 	subeq	r0, r3, #0, 2
    1214:	00003017 	andeq	r3, r0, r7, lsl r0
    1218:	00095500 	andeq	r5, r9, r0, lsl #10
    121c:	00093f00 	andeq	r3, r9, r0, lsl #30
    1220:	07131c00 	ldreq	r1, [r3, -r0, lsl #24]
    1224:	43010000 	movwmi	r0, #4096	; 0x1000
    1228:	00301e02 	eorseq	r1, r0, r2, lsl #28
    122c:	09fd0000 	ldmibeq	sp!, {}^	; <UNPREDICTABLE>
    1230:	09df0000 	ldmibeq	pc, {}^	; <UNPREDICTABLE>
    1234:	6e140000 	cdpvs	0, 1, cr0, cr4, cr0, {0}
    1238:	02430100 	subeq	r0, r3, #0, 2
    123c:	00003029 	andeq	r3, r0, r9, lsr #32
    1240:	000abb00 	andeq	fp, sl, r0, lsl #22
    1244:	000aad00 	andeq	sl, sl, r0, lsl #26
    1248:	64691400 	strbtvs	r1, [r9], #-1024	; 0xfffffc00
    124c:	44010078 	strmi	r0, [r1], #-120	; 0xffffff88
    1250:	00ee0a02 	rsceq	r0, lr, r2, lsl #20
    1254:	0b770000 	bleq	1dc125c <__RAM_SIZE+0x1cc125c>
    1258:	0b170000 	bleq	5c1260 <__RAM_SIZE+0x4c1260>
    125c:	5c1d0000 	ldcpl	0, cr0, [sp], {-0}
    1260:	7c100015 	ldcvc	0, cr0, [r0], {21}
    1264:	63100015 	tstvs	r0, #21
    1268:	12000006 	andne	r0, r0, #6
    126c:	6c010077 	stcvs	0, cr0, [r1], {119}	; 0x77
    1270:	008c1102 	addeq	r1, ip, r2, lsl #2
    1274:	50010000 	andpl	r0, r1, r0
    1278:	15a41d00 	strne	r1, [r4, #3328]!	; 0xd00
    127c:	15b81000 	ldrne	r1, [r8, #0]!
    1280:	06801000 	streq	r1, [r0], r0
    1284:	d3130000 	tstle	r3, #0
    1288:	01000006 	tsteq	r0, r6
    128c:	8c130280 	lfmhi	f0, 4, [r3], {128}	; 0x80
    1290:	01000000 	mrseq	r0, (UNDEF: 0)
    1294:	c61d0053 			; <UNDEFINED> instruction: 0xc61d0053
    1298:	b2100016 	andslt	r0, r0, #22
    129c:	73100018 	tstvc	r0, #24
    12a0:	1c000008 	stcne	0, cr0, [r0], {8}
    12a4:	000008fe 	strdeq	r0, [r0], -lr
    12a8:	1602b401 	strne	fp, [r2], -r1, lsl #8
    12ac:	00000030 	andeq	r0, r0, r0, lsr r0
    12b0:	00000dad 	andeq	r0, r0, sp, lsr #27
    12b4:	00000d91 	muleq	r0, r1, sp
    12b8:	0001381e 	andeq	r3, r1, lr, lsl r8
    12bc:	0006e900 	andeq	lr, r6, r0, lsl #18
    12c0:	053d1f00 	ldreq	r1, [sp, #-3840]!	; 0xfffff100
    12c4:	d6010000 	strle	r0, [r1], -r0
    12c8:	006d1d02 	rsbeq	r1, sp, r2, lsl #26
    12cc:	dc150000 	ldcle	0, cr0, [r5], {-0}
    12d0:	7c100017 	ldcvc	0, cr0, [r0], {23}
    12d4:	16000013 			; <UNDEFINED> instruction: 0x16000013
    12d8:	77025001 	strvc	r5, [r2, -r1]
    12dc:	51011600 	tstpl	r1, r0, lsl #12
    12e0:	16007802 	strne	r7, [r0], -r2, lsl #16
    12e4:	74025201 	strvc	r5, [r2], #-513	; 0xfffffdff
    12e8:	53011600 	movwpl	r1, #5632	; 0x1600
    12ec:	16007602 	strne	r7, [r0], -r2, lsl #12
    12f0:	02187d02 	andseq	r7, r8, #2, 26	; 0x80
    12f4:	0216007b 	andseq	r0, r6, #123	; 0x7b
    12f8:	75021c7d 	strvc	r1, [r2, #-3197]	; 0xfffff383
    12fc:	1d000000 	stcne	0, cr0, [r0, #-0]
    1300:	100017e8 	andne	r1, r0, r8, ror #15
    1304:	10001818 	andne	r1, r0, r8, lsl r8
    1308:	0000073e 	andeq	r0, r0, lr, lsr r7
    130c:	00053d13 	andeq	r3, r5, r3, lsl sp
    1310:	02db0100 	sbcseq	r0, fp, #0, 2
    1314:	00005a18 	andeq	r5, r0, r8, lsl sl
    1318:	15520100 	ldrbne	r0, [r2, #-256]	; 0xffffff00
    131c:	10001816 	andne	r1, r0, r6, lsl r8
    1320:	0000150f 	andeq	r1, r0, pc, lsl #10
    1324:	02500116 	subseq	r0, r0, #-2147483643	; 0x80000005
    1328:	01160077 	tsteq	r6, r7, ror r0
    132c:	00780251 	rsbseq	r0, r8, r1, asr r2
    1330:	02520116 	subseq	r0, r2, #-2147483643	; 0x80000005
    1334:	01160074 	tsteq	r6, r4, ror r0
    1338:	00760253 	rsbseq	r0, r6, r3, asr r2
    133c:	0c7d0216 	lfmeq	f0, 2, [sp], #-88	; 0xffffffa8
    1340:	16007b02 	strne	r7, [r0], -r2, lsl #22
    1344:	03107d02 	tsteq	r0, #2, 26	; 0x80
    1348:	16064891 			; <UNDEFINED> instruction: 0x16064891
    134c:	02147d02 	andseq	r7, r4, #2, 26	; 0x80
    1350:	00000075 	andeq	r0, r0, r5, ror r0
    1354:	0001201e 	andeq	r2, r1, lr, lsl r0
    1358:	00079500 	andeq	r9, r7, r0, lsl #10
    135c:	053d1c00 	ldreq	r1, [sp, #-3072]!	; 0xfffff400
    1360:	df010000 	svcle	0x00010000
    1364:	008c1702 	addeq	r1, ip, r2, lsl #14
    1368:	0e5e0000 	cdpeq	0, 5, cr0, cr14, cr0, {0}
    136c:	0e5c0000 	cdpeq	0, 5, cr0, cr12, cr0, {0}
    1370:	96150000 	ldrls	r0, [r5], -r0
    1374:	0f100017 	svceq	0x00100017
    1378:	16000015 			; <UNDEFINED> instruction: 0x16000015
    137c:	77025001 	strvc	r5, [r2, -r1]
    1380:	51011600 	tstpl	r1, r0, lsl #12
    1384:	16007802 	strne	r7, [r0], -r2, lsl #16
    1388:	74025201 	strvc	r5, [r2], #-513	; 0xfffffdff
    138c:	53011600 	movwpl	r1, #5632	; 0x1600
    1390:	16007602 	strne	r7, [r0], -r2, lsl #12
    1394:	020c7d02 	andeq	r7, ip, #2, 26	; 0x80
    1398:	0216007b 	andseq	r0, r6, #123	; 0x7b
    139c:	9103107d 	tstls	r3, sp, ror r0
    13a0:	02160648 	andseq	r0, r6, #72, 12	; 0x4800000
    13a4:	7502147d 	strvc	r1, [r2, #-1149]	; 0xfffffb83
    13a8:	1e000000 	cdpne	0, 0, cr0, cr0, cr0, {0}
    13ac:	00000108 	andeq	r0, r0, r8, lsl #2
    13b0:	000007f2 	strdeq	r0, [r0], -r2
    13b4:	00053d1c 	andeq	r3, r5, ip, lsl sp
    13b8:	02ee0100 	rsceq	r0, lr, #0, 2
    13bc:	00009d20 	andeq	r9, r0, r0, lsr #26
    13c0:	000e7500 	andeq	r7, lr, r0, lsl #10
    13c4:	000e7100 	andeq	r7, lr, r0, lsl #2
    13c8:	17401500 	strbne	r1, [r0, -r0, lsl #10]
    13cc:	150f1000 	strne	r1, [pc, #-0]	; 13d4 <__HEAP_SIZE+0x3d4>
    13d0:	01160000 	tsteq	r6, r0
    13d4:	00770250 	rsbseq	r0, r7, r0, asr r2
    13d8:	02510116 	subseq	r0, r1, #-2147483643	; 0x80000005
    13dc:	01160078 	tsteq	r6, r8, ror r0
    13e0:	00740252 	rsbseq	r0, r4, r2, asr r2
    13e4:	02530116 	subseq	r0, r3, #-2147483643	; 0x80000005
    13e8:	02160076 	andseq	r0, r6, #118	; 0x76
    13ec:	3001047d 	andcc	r0, r1, sp, ror r4
    13f0:	0c7d0216 	lfmeq	f0, 2, [sp], #-88	; 0xffffffa8
    13f4:	16007b02 	strne	r7, [r0], -r2, lsl #22
    13f8:	03107d02 	tsteq	r0, #2, 26	; 0x80
    13fc:	16064891 			; <UNDEFINED> instruction: 0x16064891
    1400:	02147d02 	andseq	r7, r4, #2, 26	; 0x80
    1404:	00000075 	andeq	r0, r0, r5, ror r0
    1408:	00186a20 	andseq	r6, r8, r0, lsr #20
    140c:	00137c10 	andseq	r7, r3, r0, lsl ip
    1410:	00083400 	andeq	r3, r8, r0, lsl #8
    1414:	50011600 	andpl	r1, r1, r0, lsl #12
    1418:	16007702 	strne	r7, [r0], -r2, lsl #14
    141c:	78025101 	stmdavc	r2, {r0, r8, ip, lr}
    1420:	52011600 	andpl	r1, r1, #0, 12
    1424:	16007402 	strne	r7, [r0], -r2, lsl #8
    1428:	76025301 	strvc	r5, [r2], -r1, lsl #6
    142c:	7d021600 	stcvc	6, cr1, [r2, #-0]
    1430:	16300108 	ldrtne	r0, [r0], -r8, lsl #2
    1434:	02187d02 	andseq	r7, r8, #2, 26	; 0x80
    1438:	0216007b 	andseq	r0, r6, #123	; 0x7b
    143c:	91031c7d 	tstls	r3, sp, ror ip
    1440:	02160648 	andseq	r0, r6, #72, 12	; 0x4800000
    1444:	7502207d 	strvc	r2, [r2, #-125]	; 0xffffff83
    1448:	94150000 	ldrls	r0, [r5], #-0
    144c:	0f100018 	svceq	0x00100018
    1450:	16000015 			; <UNDEFINED> instruction: 0x16000015
    1454:	77025001 	strvc	r5, [r2, -r1]
    1458:	51011600 	tstpl	r1, r0, lsl #12
    145c:	16007802 	strne	r7, [r0], -r2, lsl #16
    1460:	74025201 	strvc	r5, [r2], #-513	; 0xfffffdff
    1464:	53011600 	movwpl	r1, #5632	; 0x1600
    1468:	16007602 	strne	r7, [r0], -r2, lsl #12
    146c:	01047d02 	tsteq	r4, r2, lsl #26
    1470:	7d021630 	stcvc	6, cr1, [r2, #-192]	; 0xffffff40
    1474:	007b020c 	rsbseq	r0, fp, ip, lsl #4
    1478:	107d0216 	rsbsne	r0, sp, r6, lsl r2
    147c:	06489103 	strbeq	r9, [r8], -r3, lsl #2
    1480:	147d0216 	ldrbtne	r0, [sp], #-534	; 0xfffffdea
    1484:	00007502 	andeq	r7, r0, r2, lsl #10
    1488:	00f01e00 	rscseq	r1, r0, r0, lsl #28
    148c:	08ec0000 	stmiaeq	ip!, {}^	; <UNPREDICTABLE>
    1490:	6c140000 	ldcvs	0, cr0, [r4], {-0}
    1494:	03090100 	movweq	r0, #37120	; 0x9100
    1498:	00003016 	andeq	r3, r0, r6, lsl r0
    149c:	000ea800 	andeq	sl, lr, r0, lsl #16
    14a0:	000e9400 	andeq	r9, lr, r0, lsl #8
    14a4:	195e2100 	ldmdbne	lr, {r8, sp}^
    14a8:	08ab1000 	stmiaeq	fp!, {ip}
    14ac:	01160000 	tsteq	r6, r0
    14b0:	00780251 	rsbseq	r0, r8, r1, asr r2
    14b4:	02520116 	subseq	r0, r2, #-2147483643	; 0x80000005
    14b8:	01160074 	tsteq	r6, r4, ror r0
    14bc:	00760253 	rsbseq	r0, r6, r3, asr r2
    14c0:	19762100 	ldmdbne	r6!, {r8, sp}^
    14c4:	08cd1000 	stmiaeq	sp, {ip}^
    14c8:	01160000 	tsteq	r6, r0
    14cc:	20080250 	andcs	r0, r8, r0, asr r2
    14d0:	02510116 	subseq	r0, r1, #-2147483643	; 0x80000005
    14d4:	01160078 	tsteq	r6, r8, ror r0
    14d8:	7f7a0252 	svcvc	0x007a0252
    14dc:	02530116 	subseq	r0, r3, #-2147483643	; 0x80000005
    14e0:	22000076 	andcs	r0, r0, #118	; 0x76
    14e4:	100019a2 	andne	r1, r0, r2, lsr #19
    14e8:	02500116 	subseq	r0, r0, #-2147483643	; 0x80000005
    14ec:	01162008 	tsteq	r6, r8
    14f0:	00780251 	rsbseq	r0, r8, r1, asr r2
    14f4:	02520116 	subseq	r0, r2, #-2147483643	; 0x80000005
    14f8:	01167f75 	tsteq	r6, r5, ror pc
    14fc:	00760253 	rsbseq	r0, r6, r3, asr r2
    1500:	b21d0000 	andslt	r0, sp, #0
    1504:	7c100019 	ldcvc	0, cr0, [r0], {25}
    1508:	b110001a 	tstlt	r0, sl, lsl r0
    150c:	14000009 	strne	r0, [r0], #-9
    1510:	1d010070 	stcne	0, cr0, [r1, #-448]	; 0xfffffe40
    1514:	024c1503 	subeq	r1, ip, #12582912	; 0xc00000
    1518:	0f240000 	svceq	0x00240000
    151c:	0f200000 	svceq	0x00200000
    1520:	6c140000 	ldcvs	0, cr0, [r4], {-0}
    1524:	031e0100 	tsteq	lr, #0, 2
    1528:	00003016 	andeq	r3, r0, r6, lsl r0
    152c:	000f5800 	andeq	r5, pc, r0, lsl #16
    1530:	000f4200 	andeq	r4, pc, r0, lsl #4
    1534:	19642300 	stmdbne	r4!, {r8, r9, sp}^
    1538:	19ca0000 	stmibne	sl, {}^	; <UNPREDICTABLE>
    153c:	19e01000 	stmibne	r0!, {ip}^
    1540:	1e011000 	cdpne	0, 0, cr1, cr1, cr0, {0}
    1544:	09541a03 	ldmdbeq	r4, {r0, r1, r9, fp, ip}^
    1548:	82240000 	eorhi	r0, r4, #0
    154c:	e1000019 	tst	r0, r9, lsl r0
    1550:	db00000f 	blle	1594 <__HEAP_SIZE+0x594>
    1554:	2500000f 	strcs	r0, [r0, #-15]
    1558:	00001976 	andeq	r1, r0, r6, ror r9
    155c:	00198e26 	andseq	r8, r9, r6, lsr #28
    1560:	00100c00 	andseq	r0, r0, r0, lsl #24
    1564:	00100a00 	andseq	r0, r0, r0, lsl #20
    1568:	18210000 	stmdane	r1!, {}	; <UNPREDICTABLE>
    156c:	7610001a 			; <UNDEFINED> instruction: 0x7610001a
    1570:	16000009 	strne	r0, [r0], -r9
    1574:	08025001 	stmdaeq	r2, {r0, ip, lr}
    1578:	51011620 	tstpl	r1, r0, lsr #12
    157c:	16007802 	strne	r7, [r0], -r2, lsl #16
    1580:	79025201 	stmdbvc	r2, {r0, r9, ip, lr}
    1584:	5301167f 	movwpl	r1, #5759	; 0x167f
    1588:	00007602 	andeq	r7, r0, r2, lsl #12
    158c:	001a3a21 	andseq	r3, sl, r1, lsr #20
    1590:	00099210 	andeq	r9, r9, r0, lsl r2
    1594:	51011600 	tstpl	r1, r0, lsl #12
    1598:	16007802 	strne	r7, [r0], -r2, lsl #16
    159c:	75025201 	strvc	r5, [r2, #-513]	; 0xfffffdff
    15a0:	5301167f 	movwpl	r1, #5759	; 0x167f
    15a4:	00007b02 	andeq	r7, r0, r2, lsl #22
    15a8:	001a6c22 	andseq	r6, sl, r2, lsr #24
    15ac:	50011610 	andpl	r1, r1, r0, lsl r6
    15b0:	16200802 	strtne	r0, [r0], -r2, lsl #16
    15b4:	78025101 	stmdavc	r2, {r0, r8, ip, lr}
    15b8:	52011600 	andpl	r1, r1, #0, 12
    15bc:	167f7502 	ldrbtne	r7, [pc], -r2, lsl #10
    15c0:	76025301 	strvc	r5, [r2], -r1, lsl #6
    15c4:	1d000000 	stcne	0, cr0, [r0, #-0]
    15c8:	10001a7c 	andne	r1, r0, ip, ror sl
    15cc:	10001ab2 			; <UNDEFINED> instruction: 0x10001ab2
    15d0:	00000a16 	andeq	r0, r0, r6, lsl sl
    15d4:	00070d1c 	andeq	r0, r7, ip, lsl sp
    15d8:	033a0100 	teqeq	sl, #0, 2
    15dc:	000b8414 	andeq	r8, fp, r4, lsl r4
    15e0:	00102100 	andseq	r2, r0, r0, lsl #2
    15e4:	00101f00 	andseq	r1, r0, r0, lsl #30
    15e8:	1aa81500 	bne	fea069f0 <__StackTop+0xc69069f0>
    15ec:	150f1000 	strne	r1, [pc, #-0]	; 15f4 <__HEAP_SIZE+0x5f4>
    15f0:	01160000 	tsteq	r6, r0
    15f4:	00770250 	rsbseq	r0, r7, r0, asr r2
    15f8:	02510116 	subseq	r0, r1, #-2147483643	; 0x80000005
    15fc:	01160078 	tsteq	r6, r8, ror r0
    1600:	00740252 	rsbseq	r0, r4, r2, asr r2
    1604:	02530116 	subseq	r0, r3, #-2147483643	; 0x80000005
    1608:	02160076 	andseq	r0, r6, #118	; 0x76
    160c:	3001047d 	andcc	r0, r1, sp, ror r4
    1610:	087d0216 	ldmdaeq	sp!, {r1, r2, r4, r9}^
    1614:	02164001 	andseq	r4, r6, #1
    1618:	7b020c7d 	blvc	84814 <__HEAP_SIZE+0x83814>
    161c:	7d021600 	stcvc	6, cr1, [r2, #-0]
    1620:	16380110 			; <UNDEFINED> instruction: 0x16380110
    1624:	02147d02 	andseq	r7, r4, #2, 26	; 0x80
    1628:	00000075 	andeq	r0, r0, r5, ror r0
    162c:	00194627 	andseq	r4, r9, r7, lsr #12
    1630:	0014e000 	andseq	lr, r4, r0
    1634:	e0000310 	and	r0, r0, r0, lsl r3
    1638:	e6100014 			; <UNDEFINED> instruction: 0xe6100014
    163c:	01100014 	tsteq	r0, r4, lsl r0
    1640:	3f090268 	svccc	0x00090268
    1644:	2400000a 	strcs	r0, [r0], #-10
    1648:	00001958 	andeq	r1, r0, r8, asr r9
    164c:	00001037 	andeq	r1, r0, r7, lsr r0
    1650:	00001035 	andeq	r1, r0, r5, lsr r0
    1654:	19462700 	stmdbne	r6, {r8, r9, sl, sp}^
    1658:	15860000 	strne	r0, [r6]
    165c:	00001000 	andeq	r1, r0, r0
    1660:	10001586 	andne	r1, r0, r6, lsl #11
    1664:	1000158c 	andne	r1, r0, ip, lsl #11
    1668:	0b027c01 	bleq	a0674 <__HEAP_SIZE+0x9f674>
    166c:	00000a68 	andeq	r0, r0, r8, ror #20
    1670:	00195824 	andseq	r5, r9, r4, lsr #16
    1674:	00104c00 	andseq	r4, r0, r0, lsl #24
    1678:	00104a00 	andseq	r4, r0, r0, lsl #20
    167c:	ae280000 	cdpge	0, 2, cr0, cr8, cr0, {0}
    1680:	02100014 	andseq	r0, r0, #20
    1684:	0a870077 	beq	fe1c1868 <__StackTop+0xc60c1868>
    1688:	01160000 	tsteq	r6, r0
    168c:	00780251 	rsbseq	r0, r8, r1, asr r2
    1690:	02520116 	subseq	r0, r2, #-2147483643	; 0x80000005
    1694:	01160074 	tsteq	r6, r4, ror r0
    1698:	00760253 	rsbseq	r0, r6, r3, asr r2
    169c:	15582000 	ldrbne	r2, [r8, #-0]
    16a0:	18d81000 	ldmne	r8, {ip}^
    16a4:	0a9b0000 	beq	fe6c16ac <__StackTop+0xc65c16ac>
    16a8:	01160000 	tsteq	r6, r0
    16ac:	54910250 	ldrpl	r0, [r1], #592	; 0x250
    16b0:	15a02000 	strne	r2, [r0, #0]!
    16b4:	18d81000 	ldmne	r8, {ip}^
    16b8:	0aaf0000 	beq	febc16c0 <__StackTop+0xc6ac16c0>
    16bc:	01160000 	tsteq	r6, r0
    16c0:	54910250 	ldrpl	r0, [r1], #592	; 0x250
    16c4:	18e22000 	stmiane	r2!, {sp}^
    16c8:	0fa81000 	svceq	0x00a81000
    16cc:	0aeb0000 	beq	ffac16d4 <__StackTop+0xc79c16d4>
    16d0:	01160000 	tsteq	r6, r0
    16d4:	00770250 	rsbseq	r0, r7, r0, asr r2
    16d8:	02510116 	subseq	r0, r1, #-2147483643	; 0x80000005
    16dc:	01160078 	tsteq	r6, r8, ror r0
    16e0:	00740252 	rsbseq	r0, r4, r2, asr r2
    16e4:	02530116 	subseq	r0, r3, #-2147483643	; 0x80000005
    16e8:	02160076 	andseq	r0, r6, #118	; 0x76
    16ec:	7b02087d 	blvc	838e8 <__HEAP_SIZE+0x828e8>
    16f0:	7d021600 	stcvc	6, cr1, [r2, #-0]
    16f4:	4891030c 	ldmmi	r1, {r2, r3, r8, r9}
    16f8:	7d021606 	stcvc	6, cr1, [r2, #-24]	; 0xffffffe8
    16fc:	00750210 	rsbseq	r0, r5, r0, lsl r2
    1700:	19362000 	ldmdbne	r6!, {sp}
    1704:	0b891000 	bleq	fe24570c <__StackTop+0xc614570c>
    1708:	0b270000 	bleq	9c1710 <__RAM_SIZE+0x8c1710>
    170c:	01160000 	tsteq	r6, r0
    1710:	00770250 	rsbseq	r0, r7, r0, asr r2
    1714:	02510116 	subseq	r0, r1, #-2147483643	; 0x80000005
    1718:	01160078 	tsteq	r6, r8, ror r0
    171c:	00740252 	rsbseq	r0, r4, r2, asr r2
    1720:	02530116 	subseq	r0, r3, #-2147483643	; 0x80000005
    1724:	02160076 	andseq	r0, r6, #118	; 0x76
    1728:	7b02087d 	blvc	83924 <__HEAP_SIZE+0x82924>
    172c:	7d021600 	stcvc	6, cr1, [r2, #-0]
    1730:	4891030c 	ldmmi	r1, {r2, r3, r8, r9}
    1734:	7d021606 	stcvc	6, cr1, [r2, #-24]	; 0xffffffe8
    1738:	00750210 	rsbseq	r0, r5, r0, lsl r2
    173c:	1abe2100 	bne	fef89b44 <__StackTop+0xc6e89b44>
    1740:	0b491000 	bleq	1245748 <__RAM_SIZE+0x1145748>
    1744:	01160000 	tsteq	r6, r0
    1748:	25080250 	strcs	r0, [r8, #-592]	; 0xfffffdb0
    174c:	02510116 	subseq	r0, r1, #-2147483643	; 0x80000005
    1750:	01160078 	tsteq	r6, r8, ror r0
    1754:	00740252 	rsbseq	r0, r4, r2, asr r2
    1758:	02530116 	subseq	r0, r3, #-2147483643	; 0x80000005
    175c:	21000076 	tstcs	r0, r6, ror r0
    1760:	10001ad2 	ldrdne	r1, [r0], -r2
    1764:	00000b65 	andeq	r0, r0, r5, ror #22
    1768:	02510116 	subseq	r0, r1, #-2147483643	; 0x80000005
    176c:	01160078 	tsteq	r6, r8, ror r0
    1770:	00740252 	rsbseq	r0, r4, r2, asr r2
    1774:	02530116 	subseq	r0, r3, #-2147483643	; 0x80000005
    1778:	22000076 	andcs	r0, r0, #118	; 0x76
    177c:	10001af2 	strdne	r1, [r0], -r2
    1780:	01500116 	cmpeq	r0, r6, lsl r1
    1784:	51011630 	tstpl	r1, r0, lsr r6
    1788:	16007802 	strne	r7, [r0], -r2, lsl #16
    178c:	76025301 	strvc	r5, [r2], -r1, lsl #6
    1790:	02000000 	andeq	r0, r0, #0
    1794:	06460201 	strbeq	r0, [r6], -r1, lsl #4
    1798:	7d030000 	stcvc	0, cr0, [r3, #-0]
    179c:	1a00000b 	bne	17d0 <__HEAP_SIZE+0x7d0>
    17a0:	00000504 	andeq	r0, r0, r4, lsl #10
    17a4:	0f01d301 	svceq	0x0001d301
    17a8:	0000ee01 	andeq	lr, r0, r1, lsl #28
    17ac:	000cf800 	andeq	pc, ip, r0, lsl #16
    17b0:	0010e210 	andseq	lr, r0, r0, lsl r2
    17b4:	00105f10 	andseq	r5, r0, r0, lsl pc
    17b8:	0fa30100 	svceq	0x00a30100
    17bc:	6f0f0000 	svcvs	0x000f0000
    17c0:	01007475 	tsteq	r0, r5, ror r4
    17c4:	062201d3 			; <UNDEFINED> instruction: 0x062201d3
    17c8:	c1000001 	tstgt	r0, r1
    17cc:	bd000010 	stclt	0, cr0, [r0, #-64]	; 0xffffffc0
    17d0:	17000010 	smladne	r0, r0, r0, r0
    17d4:	000004d8 	ldrdeq	r0, [r0], -r8
    17d8:	2d01d301 	stccs	3, cr13, [r1, #-4]
    17dc:	000002ee 	andeq	r0, r0, lr, ror #5
    17e0:	000010e3 	andeq	r1, r0, r3, ror #1
    17e4:	000010df 	ldrdeq	r1, [r0], -pc	; <UNPREDICTABLE>
    17e8:	7864690f 	stmdavc	r4!, {r0, r1, r2, r3, r8, fp, sp, lr}^
    17ec:	01d30100 	bicseq	r0, r3, r0, lsl #2
    17f0:	0000ee3c 	andeq	lr, r0, ip, lsr lr
    17f4:	00111700 	andseq	r1, r1, r0, lsl #14
    17f8:	00110100 	andseq	r0, r1, r0, lsl #2
    17fc:	061c1700 	ldreq	r1, [ip], -r0, lsl #14
    1800:	d3010000 	movwle	r0, #4096	; 0x1000
    1804:	00ee4801 	rsceq	r4, lr, r1, lsl #16
    1808:	119c0000 	orrsne	r0, ip, r0
    180c:	11980000 	orrsne	r0, r8, r0
    1810:	3d170000 	ldccc	0, cr0, [r7, #-0]
    1814:	01000005 	tsteq	r0, r5
    1818:	295701d3 	ldmdbcs	r7, {r0, r1, r4, r6, r7, r8}^
    181c:	c6000000 	strgt	r0, [r0], -r0
    1820:	ba000011 	blt	186c <__HEAP_SIZE+0x86c>
    1824:	17000011 	smladne	r0, r1, r0, r0
    1828:	000006d3 	ldrdeq	r0, [r0], -r3
    182c:	6b01d301 	blvs	76438 <__HEAP_SIZE+0x75438>
    1830:	00000030 	andeq	r0, r0, r0, lsr r0
    1834:	00001225 	andeq	r1, r0, r5, lsr #4
    1838:	00001219 	andeq	r1, r0, r9, lsl r2
    183c:	0006d917 	andeq	sp, r6, r7, lsl r9
    1840:	01d30100 	bicseq	r0, r3, r0, lsl #2
    1844:	0000307e 	andeq	r3, r0, lr, ror r0
    1848:	00127700 	andseq	r7, r2, r0, lsl #14
    184c:	00127300 	andseq	r7, r2, r0, lsl #6
    1850:	06071700 	streq	r1, [r7], -r0, lsl #14
    1854:	d3010000 	movwle	r0, #4096	; 0x1000
    1858:	00309201 	eorseq	r9, r0, r1, lsl #4
    185c:	129f0000 	addsne	r0, pc, #0
    1860:	12970000 	addsne	r0, r7, #0
    1864:	6e1c0000 	cdpvs	0, 1, cr0, cr12, cr0, {0}
    1868:	01000005 	tsteq	r0, r5
    186c:	840e01db 	strhi	r0, [lr], #-475	; 0xfffffe25
    1870:	da00000b 	ble	18a4 <__HEAP_SIZE+0x8a4>
    1874:	d6000012 			; <UNDEFINED> instruction: 0xd6000012
    1878:	29000012 	stmdbcs	r0, {r1, r4}
    187c:	01e70108 	mvneq	r0, r8, lsl #2
    1880:	000c8603 	andeq	r8, ip, r3, lsl #12
    1884:	00552a00 	subseq	r2, r5, r0, lsl #20
    1888:	0e01e801 	cdpeq	8, 0, cr14, cr1, cr1, {0}
    188c:	000000a2 	andeq	r0, r0, r2, lsr #1
    1890:	0100462a 	tsteq	r0, sl, lsr #12
    1894:	290e01e9 	stmdbcs	lr, {r0, r3, r5, r6, r7, r8}
    1898:	00000000 	andeq	r0, r0, r0
    189c:	0006611c 	andeq	r6, r6, ip, lsl r1
    18a0:	01ea0100 	mvneq	r0, r0, lsl #2
    18a4:	000c6505 	andeq	r6, ip, r5, lsl #10
    18a8:	00131e00 	andseq	r1, r3, r0, lsl #28
    18ac:	00131a00 	andseq	r1, r3, r0, lsl #20
    18b0:	04ba1c00 	ldrteq	r1, [sl], #3072	; 0xc00
    18b4:	ed010000 	stc	0, cr0, [r1, #-0]
    18b8:	00850701 	addeq	r0, r5, r1, lsl #14
    18bc:	13560000 	cmpne	r6, #0
    18c0:	134a0000 	movtne	r0, #40960	; 0xa000
    18c4:	cc1c0000 	ldcgt	0, cr0, [ip], {-0}
    18c8:	01000004 	tsteq	r0, r4
    18cc:	850701f0 	strhi	r0, [r7, #-496]	; 0xfffffe10
    18d0:	b3000000 	movwlt	r0, #0
    18d4:	a9000013 	stmdbge	r0, {r0, r1, r4}
    18d8:	14000013 	strne	r0, [r0], #-19	; 0xffffffed
    18dc:	f301007a 	vqadd.u8	q0, <illegal reg q0.5>, q13
    18e0:	0fa31001 	svceq	0x00a31001
    18e4:	13f50000 	mvnsne	r0, #0
    18e8:	13f30000 	mvnsne	r0, #0
    18ec:	7a140000 	bvc	5018f4 <__RAM_SIZE+0x4018f4>
    18f0:	f4010032 	vst4.8	{d0-d3}, [r1 :256], r2
    18f4:	0fa31001 	svceq	0x00a31001
    18f8:	14130000 	ldrne	r0, [r3], #-0
    18fc:	140d0000 	strne	r0, [sp], #-0
    1900:	ee1c0000 	cdp	0, 1, cr0, cr12, cr0, {0}
    1904:	01000004 	tsteq	r0, r4
    1908:	301001ff 			; <UNDEFINED> instruction: 0x301001ff
    190c:	51000000 	mrspl	r0, (UNDEF: 0)
    1910:	45000014 	strmi	r0, [r0, #-20]	; 0xffffffec
    1914:	1c000014 	stcne	0, cr0, [r0], {20}
    1918:	000006d8 	ldrdeq	r0, [r0], -r8
    191c:	10021901 	andne	r1, r2, r1, lsl #18
    1920:	00000030 	andeq	r0, r0, r0, lsr r0
    1924:	000014a8 	andeq	r1, r0, r8, lsr #9
    1928:	0000149e 	muleq	r0, lr, r4
    192c:	00055a1c 	andeq	r5, r5, ip, lsl sl
    1930:	022c0100 	eoreq	r0, ip, #0, 2
    1934:	0000fa10 	andeq	pc, r0, r0, lsl sl	; <UNPREDICTABLE>
    1938:	0014ea00 	andseq	lr, r4, r0, lsl #20
    193c:	0014e800 	andseq	lr, r4, r0, lsl #16
    1940:	0d162b00 	vldreq	d2, [r6, #-0]
    1944:	1b1c1000 	blne	70594c <__RAM_SIZE+0x60594c>
    1948:	2a2b0000 	bcs	ac1950 <__RAM_SIZE+0x9c1950>
    194c:	2710000d 	ldrcs	r0, [r0, -sp]
    1950:	2b00001b 	blcs	19c4 <__HEAP_SIZE+0x9c4>
    1954:	10000d40 	andne	r0, r0, r0, asr #26
    1958:	00001b32 	andeq	r1, r0, r2, lsr fp
    195c:	000d522b 	andeq	r5, sp, fp, lsr #4
    1960:	001b3210 	andseq	r3, fp, r0, lsl r2
    1964:	0d8e2b00 	vstreq	d2, [lr]
    1968:	1b3d1000 	blne	f45970 <__RAM_SIZE+0xe45970>
    196c:	982b0000 	stmdals	fp!, {}	; <UNPREDICTABLE>
    1970:	4810000d 	ldmdami	r0, {r0, r2, r3}
    1974:	2b00001b 	blcs	19e8 <__HEAP_SIZE+0x9e8>
    1978:	10000da2 	andne	r0, r0, r2, lsr #27
    197c:	00001b53 	andeq	r1, r0, r3, asr fp
    1980:	000db22b 	andeq	fp, sp, fp, lsr #4
    1984:	001b5e10 	andseq	r5, fp, r0, lsl lr
    1988:	0dbc2b00 			; <UNDEFINED> instruction: 0x0dbc2b00
    198c:	1b481000 	blne	1205994 <__RAM_SIZE+0x1105994>
    1990:	c82b0000 	stmdagt	fp!, {}	; <UNPREDICTABLE>
    1994:	5310000d 	tstpl	r0, #13
    1998:	2b00001b 	blcs	1a0c <__HEAP_SIZE+0xa0c>
    199c:	10000dcc 	andne	r0, r0, ip, asr #27
    19a0:	00001b69 	andeq	r1, r0, r9, ror #22
    19a4:	000dd22b 	andeq	sp, sp, fp, lsr #4
    19a8:	001b3d10 	andseq	r3, fp, r0, lsl sp
    19ac:	0de02b00 			; <UNDEFINED> instruction: 0x0de02b00
    19b0:	1b481000 	blne	12059b8 <__RAM_SIZE+0x11059b8>
    19b4:	e82b0000 	stmda	fp!, {}	; <UNPREDICTABLE>
    19b8:	5310000d 	tstpl	r0, #13
    19bc:	2b00001b 	blcs	1a30 <__HEAP_SIZE+0xa30>
    19c0:	10000dec 	andne	r0, r0, ip, ror #27
    19c4:	00001b69 	andeq	r1, r0, r9, ror #22
    19c8:	000dfc2b 	andeq	pc, sp, fp, lsr #24
    19cc:	001b4810 	andseq	r4, fp, r0, lsl r8
    19d0:	0e062b00 	vmlaeq.f64	d2, d6, d0
    19d4:	1b3d1000 	blne	f459dc <__RAM_SIZE+0xe459dc>
    19d8:	102b0000 	eorne	r0, fp, r0
    19dc:	4810000e 	ldmdami	r0, {r1, r2, r3}
    19e0:	2b00001b 	blcs	1a54 <__HEAP_SIZE+0xa54>
    19e4:	10000e1c 	andne	r0, r0, ip, lsl lr
    19e8:	00001b5e 	andeq	r1, r0, lr, asr fp
    19ec:	000e282b 	andeq	r2, lr, fp, lsr #16
    19f0:	001b4810 	andseq	r4, fp, r0, lsl r8
    19f4:	0e4c2b00 	vmlaeq.f64	d18, d12, d0
    19f8:	1b531000 	blne	14c5a00 <__RAM_SIZE+0x13c5a00>
    19fc:	5e2b0000 	cdppl	0, 2, cr0, cr11, cr0, {0}
    1a00:	5e10000e 	cdppl	0, 1, cr0, cr0, cr14, {0}
    1a04:	2b00001b 	blcs	1a78 <__HEAP_SIZE+0xa78>
    1a08:	10000e6e 	andne	r0, r0, lr, ror #28
    1a0c:	00001b74 	andeq	r1, r0, r4, ror fp
    1a10:	000e762b 	andeq	r7, lr, fp, lsr #12
    1a14:	001b5310 	andseq	r5, fp, r0, lsl r3
    1a18:	0e822b00 	vdiveq.f64	d2, d2, d0
    1a1c:	1b741000 	blne	1d05a24 <__RAM_SIZE+0x1c05a24>
    1a20:	8a2b0000 	bhi	ac1a28 <__RAM_SIZE+0x9c1a28>
    1a24:	5310000e 	tstpl	r0, #14
    1a28:	2b00001b 	blcs	1a9c <__HEAP_SIZE+0xa9c>
    1a2c:	10000e96 	mulne	r0, r6, lr
    1a30:	00001b74 	andeq	r1, r0, r4, ror fp
    1a34:	000ea22b 	andeq	sl, lr, fp, lsr #4
    1a38:	001b5310 	andseq	r5, fp, r0, lsl r3
    1a3c:	0eae2b00 	vfmaeq.f64	d2, d14, d0
    1a40:	1b741000 	blne	1d05a48 <__RAM_SIZE+0x1c05a48>
    1a44:	b62b0000 	strtlt	r0, [fp], -r0
    1a48:	5310000e 	tstpl	r0, #14
    1a4c:	2b00001b 	blcs	1ac0 <__HEAP_SIZE+0xac0>
    1a50:	10000ebe 			; <UNDEFINED> instruction: 0x10000ebe
    1a54:	00001b48 	andeq	r1, r0, r8, asr #22
    1a58:	000ece2b 	andeq	ip, lr, fp, lsr #28
    1a5c:	001b2710 	andseq	r2, fp, r0, lsl r7
    1a60:	0ede2b00 	vfnmseq.f64	d18, d14, d0
    1a64:	1b741000 	blne	1d05a6c <__RAM_SIZE+0x1c05a6c>
    1a68:	062b0000 	strteq	r0, [fp], -r0
    1a6c:	7f10000f 	svcvc	0x0010000f
    1a70:	2b00001b 	blcs	1ae4 <__HEAP_SIZE+0xae4>
    1a74:	10000f18 	andne	r0, r0, r8, lsl pc
    1a78:	00001b32 	andeq	r1, r0, r2, lsr fp
    1a7c:	000f4a20 	andeq	r4, pc, r0, lsr #20
    1a80:	000fa810 	andeq	sl, pc, r0, lsl r8	; <UNPREDICTABLE>
    1a84:	000eae00 	andeq	sl, lr, r0, lsl #28
    1a88:	50011600 	andpl	r1, r1, r0, lsl #12
    1a8c:	16007a02 	strne	r7, [r0], -r2, lsl #20
    1a90:	74025101 	strvc	r5, [r2], #-257	; 0xfffffeff
    1a94:	52011600 	andpl	r1, r1, #0, 12
    1a98:	16007b02 	strne	r7, [r0], -r2, lsl #22
    1a9c:	75025301 	strvc	r5, [r2, #-769]	; 0xfffffcff
    1aa0:	7d021600 	stcvc	6, cr1, [r2, #-0]
    1aa4:	00910500 	addseq	r0, r1, r0, lsl #10
    1aa8:	162908f6 			; <UNDEFINED> instruction: 0x162908f6
    1aac:	03087d02 	movweq	r7, #36098	; 0x8d02
    1ab0:	16060891 			; <UNDEFINED> instruction: 0x16060891
    1ab4:	030c7d02 	movweq	r7, #52482	; 0xcd02
    1ab8:	16060c91 			; <UNDEFINED> instruction: 0x16060c91
    1abc:	03107d02 	tsteq	r0, #2, 26	; 0x80
    1ac0:	00061091 	muleq	r6, r1, r0
    1ac4:	0010242b 	andseq	r2, r0, fp, lsr #8
    1ac8:	001b7410 	andseq	r7, fp, r0, lsl r4
    1acc:	10342b00 	eorsne	r2, r4, r0, lsl #22
    1ad0:	1b321000 	blne	c85ad8 <__RAM_SIZE+0xb85ad8>
    1ad4:	5c200000 	stcpl	0, cr0, [r0], #-0
    1ad8:	a8100010 	ldmdage	r0, {r4}
    1adc:	0c00000f 	stceq	0, cr0, [r0], {15}
    1ae0:	1600000f 	strne	r0, [r0], -pc
    1ae4:	7a025001 	bvc	95af0 <__HEAP_SIZE+0x94af0>
    1ae8:	51011600 	tstpl	r1, r0, lsl #12
    1aec:	16007402 	strne	r7, [r0], -r2, lsl #8
    1af0:	7b025201 	blvc	962fc <__HEAP_SIZE+0x952fc>
    1af4:	53011600 	movwpl	r1, #5632	; 0x1600
    1af8:	16007502 	strne	r7, [r0], -r2, lsl #10
    1afc:	06007d02 	streq	r7, [r0], -r2, lsl #26
    1b00:	f67fa891 			; <UNDEFINED> instruction: 0xf67fa891
    1b04:	02162908 	andseq	r2, r6, #8, 18	; 0x20000
    1b08:	9103087d 	tstls	r3, sp, ror r8
    1b0c:	02160608 	andseq	r0, r6, #8, 12	; 0x800000
    1b10:	78020c7d 	stmdavc	r2, {r0, r2, r3, r4, r5, r6, sl, fp}
    1b14:	7d021600 	stcvc	6, cr1, [r2, #-0]
    1b18:	10910710 	addsne	r0, r1, r0, lsl r7
    1b1c:	f7ff0b06 			; <UNDEFINED> instruction: 0xf7ff0b06
    1b20:	7c21001a 	stcvc	0, cr0, [r1], #-104	; 0xffffff98
    1b24:	28100010 	ldmdacs	r0, {r4}
    1b28:	1600000f 	strne	r0, [r0], -pc
    1b2c:	74025101 	strvc	r5, [r2], #-257	; 0xfffffeff
    1b30:	52011600 	andpl	r1, r1, #0, 12
    1b34:	167f7802 	ldrbtne	r7, [pc], -r2, lsl #16
    1b38:	75025301 	strvc	r5, [r2, #-769]	; 0xfffffcff
    1b3c:	a6200000 	strtge	r0, [r0], -r0
    1b40:	0f100010 	svceq	0x00100010
    1b44:	84000015 	strhi	r0, [r0], #-21	; 0xffffffeb
    1b48:	1600000f 	strne	r0, [r0], -pc
    1b4c:	7a025001 	bvc	95b58 <__HEAP_SIZE+0x94b58>
    1b50:	51011600 	tstpl	r1, r0, lsl #12
    1b54:	16007402 	strne	r7, [r0], -r2, lsl #8
    1b58:	78025201 	stmdavc	r2, {r0, r9, ip, lr}
    1b5c:	53011600 	movwpl	r1, #5632	; 0x1600
    1b60:	16007502 	strne	r7, [r0], -r2, lsl #10
    1b64:	0c007d02 	stceq	13, cr7, [r0], {2}
    1b68:	264f0076 			; <UNDEFINED> instruction: 0x264f0076
    1b6c:	76270076 			; <UNDEFINED> instruction: 0x76270076
    1b70:	1c264f00 	stcne	15, cr4, [r6], #-0
    1b74:	047d0216 	ldrbteq	r0, [sp], #-534	; 0xfffffdea
    1b78:	4f007604 	svcmi	0x00007604
    1b7c:	7d021625 	stcvc	6, cr1, [r2, #-148]	; 0xffffff6c
    1b80:	163a0108 	ldrtne	r0, [sl], -r8, lsl #2
    1b84:	040c7d02 	streq	r7, [ip], #-3330	; 0xfffff2fe
    1b88:	067fb091 			; <UNDEFINED> instruction: 0x067fb091
    1b8c:	107d0216 	rsbsne	r0, sp, r6, lsl r2
    1b90:	16007702 	strne	r7, [r0], -r2, lsl #14
    1b94:	01147d02 	tsteq	r4, r2, lsl #26
    1b98:	d4220035 	strtle	r0, [r2], #-53	; 0xffffffcb
    1b9c:	16100010 			; <UNDEFINED> instruction: 0x16100010
    1ba0:	08025001 	stmdaeq	r2, {r0, ip, lr}
    1ba4:	51011620 	tstpl	r1, r0, lsr #12
    1ba8:	16007402 	strne	r7, [r0], -r2, lsl #8
    1bac:	76025201 	strvc	r5, [r2], -r1, lsl #4
    1bb0:	5301167f 	movwpl	r1, #5759	; 0x167f
    1bb4:	00007502 	andeq	r7, r0, r2, lsl #10
    1bb8:	00290300 	eoreq	r0, r9, r0, lsl #6
    1bbc:	b01a0000 	andslt	r0, sl, r0
    1bc0:	01000005 	tsteq	r0, r5
    1bc4:	010f0153 	tsteq	pc, r3, asr r1	; <UNPREDICTABLE>
    1bc8:	000000ee 	andeq	r0, r0, lr, ror #1
    1bcc:	100010e8 	andne	r1, r0, r8, ror #1
    1bd0:	1000147e 	andne	r1, r0, lr, ror r4
    1bd4:	000014fd 	strdeq	r1, [r0], -sp
    1bd8:	00135701 	andseq	r5, r3, r1, lsl #14
    1bdc:	756f0f00 	strbvc	r0, [pc, #-3840]!	; ce4 <__Vectors_Size+0x524>
    1be0:	53010074 	movwpl	r0, #4212	; 0x1074
    1be4:	01062201 	tsteq	r6, r1, lsl #4
    1be8:	155f0000 	ldrbne	r0, [pc, #-0]	; 1bf0 <__HEAP_SIZE+0xbf0>
    1bec:	155b0000 	ldrbne	r0, [fp, #-0]
    1bf0:	d8170000 	ldmdale	r7, {}	; <UNPREDICTABLE>
    1bf4:	01000004 	tsteq	r0, r4
    1bf8:	ee2d0153 	mcr	1, 1, r0, cr13, cr3, {2}
    1bfc:	83000002 	movwhi	r0, #2
    1c00:	7f000015 	svcvc	0x00000015
    1c04:	0f000015 	svceq	0x00000015
    1c08:	00786469 	rsbseq	r6, r8, r9, ror #8
    1c0c:	3c015301 	stccc	3, cr5, [r1], {1}
    1c10:	000000ee 	andeq	r0, r0, lr, ror #1
    1c14:	000015a7 	andeq	r1, r0, r7, lsr #11
    1c18:	000015a3 	andeq	r1, r0, r3, lsr #11
    1c1c:	00061c17 	andeq	r1, r6, r7, lsl ip
    1c20:	01530100 	cmpeq	r3, r0, lsl #2
    1c24:	0000ee48 	andeq	lr, r0, r8, asr #28
    1c28:	0015c900 	andseq	ip, r5, r0, lsl #18
    1c2c:	0015c500 	andseq	ip, r5, r0, lsl #10
    1c30:	053d1700 	ldreq	r1, [sp, #-1792]!	; 0xfffff900
    1c34:	53010000 	movwpl	r0, #4096	; 0x1000
    1c38:	00295701 	eoreq	r5, r9, r1, lsl #14
    1c3c:	15f10000 	ldrbne	r0, [r1, #0]!
    1c40:	15e70000 	strbne	r0, [r7, #0]!
    1c44:	d3170000 	tstle	r7, #0
    1c48:	01000006 	tsteq	r0, r6
    1c4c:	306b0153 	rsbcc	r0, fp, r3, asr r1
    1c50:	49000000 	stmdbmi	r0, {}	; <UNPREDICTABLE>
    1c54:	41000016 	tstmi	r0, r6, lsl r0
    1c58:	17000016 	smladne	r0, r6, r0, r0
    1c5c:	000006d9 	ldrdeq	r0, [r0], -r9
    1c60:	7e015301 	cdpvc	3, 0, cr5, cr1, cr1, {0}
    1c64:	00000030 	andeq	r0, r0, r0, lsr r0
    1c68:	00001689 	andeq	r1, r0, r9, lsl #13
    1c6c:	0000167f 	andeq	r1, r0, pc, ror r6
    1c70:	00060717 	andeq	r0, r6, r7, lsl r7
    1c74:	01530100 	cmpeq	r3, r0, lsl #2
    1c78:	00003092 	muleq	r0, r2, r0
    1c7c:	0016cf00 	andseq	ip, r6, r0, lsl #30
    1c80:	0016cb00 	andseq	ip, r6, r0, lsl #22
    1c84:	75621200 	strbvc	r1, [r2, #-512]!	; 0xfffffe00
    1c88:	55010066 	strpl	r0, [r1, #-102]	; 0xffffff9a
    1c8c:	13570801 	cmpne	r7, #65536	; 0x10000
    1c90:	91030000 	mrsls	r0, (UNDEF: 3)
    1c94:	6c147fb0 	ldcvs	15, cr7, [r4], {176}	; 0xb0
    1c98:	01006e65 	tsteq	r0, r5, ror #28
    1c9c:	ee0a0156 	mcr	1, 0, r0, cr10, cr6, {2}
    1ca0:	1d000000 	stcne	0, cr0, [r0, #-0]
    1ca4:	ef000017 	svc	0x00000017
    1ca8:	1c000016 	stcne	0, cr0, [r0], {22}
    1cac:	0000071d 	andeq	r0, r0, sp, lsl r7
    1cb0:	0a015701 	beq	578bc <__HEAP_SIZE+0x568bc>
    1cb4:	00000029 	andeq	r0, r0, r9, lsr #32
    1cb8:	0000183c 	andeq	r1, r0, ip, lsr r8
    1cbc:	00001832 	andeq	r1, r0, r2, lsr r8
    1cc0:	0004b413 	andeq	fp, r4, r3, lsl r4
    1cc4:	015a0100 	cmpeq	sl, r0, lsl #2
    1cc8:	00137717 	andseq	r7, r3, r7, lsl r7
    1ccc:	48030500 	stmdami	r3, {r8, sl}
    1cd0:	1c100059 	ldcne	0, cr0, [r0], {89}	; 0x59
    1cd4:	0000056e 	andeq	r0, r0, lr, ror #10
    1cd8:	08016f01 	stmdaeq	r1, {r0, r8, r9, sl, fp, sp, lr}
    1cdc:	00000b7d 	andeq	r0, r0, sp, ror fp
    1ce0:	0000189e 	muleq	r0, lr, r8
    1ce4:	00001892 	muleq	r0, r2, r8
    1ce8:	0005251c 	andeq	r2, r5, ip, lsl r5
    1cec:	017f0100 	cmneq	pc, r0, lsl #2
    1cf0:	00008507 	andeq	r8, r0, r7, lsl #10
    1cf4:	0018fb00 	andseq	pc, r8, r0, lsl #22
    1cf8:	0018f100 	andseq	pc, r8, r0, lsl #2
    1cfc:	6d741400 	cfldrdvs	mvd1, [r4, #-0]
    1d00:	80010070 	andhi	r0, r1, r0, ror r0
    1d04:	00290a01 	eoreq	r0, r9, r1, lsl #20
    1d08:	193e0000 	ldmdbne	lr!, {}	; <UNPREDICTABLE>
    1d0c:	193a0000 	ldmdbne	sl!, {}	; <UNPREDICTABLE>
    1d10:	381c0000 	ldmdacc	ip, {}	; <UNPREDICTABLE>
    1d14:	01000005 	tsteq	r0, r5
    1d18:	5f110181 	svcpl	0x00110181
    1d1c:	6f000000 	svcvs	0x00000000
    1d20:	63000019 	movwvs	r0, #25
    1d24:	1d000019 	stcne	0, cr0, [r0, #-100]	; 0xffffff9c
    1d28:	10001302 	andne	r1, r0, r2, lsl #6
    1d2c:	10001362 	andne	r1, r0, r2, ror #6
    1d30:	00001134 	andeq	r1, r0, r4, lsr r1
    1d34:	0000241c 	andeq	r2, r0, ip, lsl r4
    1d38:	019c0100 	orrseq	r0, ip, r0, lsl #2
    1d3c:	00003012 	andeq	r3, r0, r2, lsl r0
    1d40:	0019be00 	andseq	fp, r9, r0, lsl #28
    1d44:	0019ba00 	andseq	fp, r9, r0, lsl #20
    1d48:	0c2b0000 	stceq	0, cr0, [fp], #-0
    1d4c:	1c100011 	ldcne	0, cr0, [r0], {17}
    1d50:	2b00001b 	blcs	1dc4 <__HEAP_SIZE+0xdc4>
    1d54:	10001120 	andne	r1, r0, r0, lsr #2
    1d58:	00001b32 	andeq	r1, r0, r2, lsr fp
    1d5c:	0011322b 	andseq	r3, r1, fp, lsr #4
    1d60:	001b2710 	andseq	r2, fp, r0, lsl r7
    1d64:	11442b00 	cmpne	r4, r0, lsl #22
    1d68:	1b271000 	blne	9c5d70 <__RAM_SIZE+0x8c5d70>
    1d6c:	562b0000 	strtpl	r0, [fp], -r0
    1d70:	32100011 	andscc	r0, r0, #17
    1d74:	2b00001b 	blcs	1de8 <__HEAP_SIZE+0xde8>
    1d78:	10001166 	andne	r1, r0, r6, ror #2
    1d7c:	00001b32 	andeq	r1, r0, r2, lsr fp
    1d80:	0011ae20 	andseq	sl, r1, r0, lsr #28
    1d84:	00179110 	andseq	r9, r7, r0, lsl r1
    1d88:	0011b400 	andseq	fp, r1, r0, lsl #8
    1d8c:	50011600 	andpl	r1, r1, r0, lsl #12
    1d90:	7f9c9104 	svcvc	0x009c9104
    1d94:	51011606 	tstpl	r1, r6, lsl #12
    1d98:	7fa89104 	svcvc	0x00a89104
    1d9c:	52011606 	andpl	r1, r1, #6291456	; 0x600000
    1da0:	16007a02 	strne	r7, [r0], -r2, lsl #20
    1da4:	7b025301 	blvc	969b0 <__HEAP_SIZE+0x959b0>
    1da8:	7d021600 	stcvc	6, cr1, [r2, #-0]
    1dac:	38030500 	stmdacc	r3, {r8, sl}
    1db0:	16100059 			; <UNDEFINED> instruction: 0x16100059
    1db4:	01047d02 	tsteq	r4, r2, lsl #26
    1db8:	7d021633 	stcvc	6, cr1, [r2, #-204]	; 0xffffff34
    1dbc:	0c910308 	ldceq	3, cr0, [r1], {8}
    1dc0:	7d021606 	stcvc	6, cr1, [r2, #-24]	; 0xffffffe8
    1dc4:	1091030c 	addsne	r0, r1, ip, lsl #6
    1dc8:	cc200006 	stcgt	0, cr0, [r0], #-24	; 0xffffffe8
    1dcc:	91100011 	tstls	r0, r1, lsl r0
    1dd0:	fe000017 	mcr2	0, 0, r0, cr0, cr7, {0}
    1dd4:	16000011 			; <UNDEFINED> instruction: 0x16000011
    1dd8:	91045001 	tstls	r4, r1
    1ddc:	16067f9c 			; <UNDEFINED> instruction: 0x16067f9c
    1de0:	91045101 	tstls	r4, r1, lsl #2
    1de4:	16067fa8 	strne	r7, [r6], -r8, lsr #31
    1de8:	7a025201 	bvc	965f4 <__HEAP_SIZE+0x955f4>
    1dec:	53011600 	movwpl	r1, #5632	; 0x1600
    1df0:	16007b02 	strne	r7, [r0], -r2, lsl #22
    1df4:	05007d02 	streq	r7, [r0, #-3330]	; 0xfffff2fe
    1df8:	00593c03 	subseq	r3, r9, r3, lsl #24
    1dfc:	7d021610 	stcvc	6, cr1, [r2, #-64]	; 0xffffffc0
    1e00:	16340104 	ldrtne	r0, [r4], -r4, lsl #2
    1e04:	03087d02 	movweq	r7, #36098	; 0x8d02
    1e08:	16060c91 			; <UNDEFINED> instruction: 0x16060c91
    1e0c:	030c7d02 	movweq	r7, #52482	; 0xcd02
    1e10:	00061091 	muleq	r6, r1, r0
    1e14:	0011f420 	andseq	pc, r1, r0, lsr #8
    1e18:	00179110 	andseq	r9, r7, r0, lsl r1
    1e1c:	00123800 	andseq	r3, r2, r0, lsl #16
    1e20:	50011600 	andpl	r1, r1, r0, lsl #12
    1e24:	7f9c9104 	svcvc	0x009c9104
    1e28:	51011606 	tstpl	r1, r6, lsl #12
    1e2c:	7fa89104 	svcvc	0x00a89104
    1e30:	52011606 	andpl	r1, r1, #6291456	; 0x600000
    1e34:	16007a02 	strne	r7, [r0], -r2, lsl #20
    1e38:	7b025301 	blvc	96a44 <__HEAP_SIZE+0x95a44>
    1e3c:	7d021600 	stcvc	6, cr1, [r2, #-0]
    1e40:	0c910308 	ldceq	3, cr0, [r1], {8}
    1e44:	7d021606 	stcvc	6, cr1, [r2, #-24]	; 0xffffffe8
    1e48:	1091030c 	addsne	r0, r1, ip, lsl #6
    1e4c:	18200006 	stmdane	r0!, {r1, r2}
    1e50:	89100012 	ldmdbhi	r0, {r1, r4}
    1e54:	8100000b 	tsthi	r0, fp
    1e58:	16000012 			; <UNDEFINED> instruction: 0x16000012
    1e5c:	91045001 	tstls	r4, r1
    1e60:	16067f9c 			; <UNDEFINED> instruction: 0x16067f9c
    1e64:	91045101 	tstls	r4, r1, lsl #2
    1e68:	16067fa8 	strne	r7, [r6], -r8, lsr #31
    1e6c:	7a025201 	bvc	96678 <__HEAP_SIZE+0x95678>
    1e70:	53011600 	movwpl	r1, #5632	; 0x1600
    1e74:	16007b02 	strne	r7, [r0], -r2, lsl #22
    1e78:	03007d02 	movweq	r7, #3330	; 0xd02
    1e7c:	162908f5 			; <UNDEFINED> instruction: 0x162908f5
    1e80:	02087d02 	andeq	r7, r8, #2, 26	; 0x80
    1e84:	02160075 	andseq	r0, r6, #117	; 0x75
    1e88:	91030c7d 	tstls	r3, sp, ror ip
    1e8c:	0216060c 	andseq	r0, r6, #12, 12	; 0xc00000
    1e90:	9103107d 	tstls	r3, sp, ror r0
    1e94:	2b000610 	blcs	36dc <__HEAP_SIZE+0x26dc>
    1e98:	10001226 	andne	r1, r0, r6, lsr #4
    1e9c:	00001b5e 	andeq	r1, r0, lr, asr fp
    1ea0:	00123c2b 	andseq	r3, r2, fp, lsr #24
    1ea4:	001b6910 	andseq	r6, fp, r0, lsl r9
    1ea8:	12422b00 	subne	r2, r2, #0, 22
    1eac:	1b3d1000 	blne	f45eb4 <__RAM_SIZE+0xe45eb4>
    1eb0:	4e2b0000 	cdpmi	0, 2, cr0, cr11, cr0, {0}
    1eb4:	5e100012 	mrcpl	0, 0, r0, cr0, cr2, {0}
    1eb8:	2b00001b 	blcs	1f2c <__HEAP_SIZE+0xf2c>
    1ebc:	10001260 	andne	r1, r0, r0, ror #4
    1ec0:	00001b48 	andeq	r1, r0, r8, asr #22
    1ec4:	00126c2b 	andseq	r6, r2, fp, lsr #24
    1ec8:	001b8a10 	andseq	r8, fp, r0, lsl sl
    1ecc:	12722b00 	rsbsne	r2, r2, #0, 22
    1ed0:	1b951000 	blne	fe545ed8 <__StackTop+0xc6445ed8>
    1ed4:	7e2b0000 	cdpvc	0, 2, cr0, cr11, cr0, {0}
    1ed8:	5e100012 	mrcpl	0, 0, r0, cr0, cr2, {0}
    1edc:	2b00001b 	blcs	1f50 <__HEAP_SIZE+0xf50>
    1ee0:	1000128e 	andne	r1, r0, lr, lsl #5
    1ee4:	00001b27 	andeq	r1, r0, r7, lsr #22
    1ee8:	0012982b 	andseq	r9, r2, fp, lsr #16
    1eec:	001b9510 	andseq	r9, fp, r0, lsl r5
    1ef0:	12a42b00 	adcne	r2, r4, #0, 22
    1ef4:	1ba01000 	blne	fe805efc <__StackTop+0xc6705efc>
    1ef8:	b22b0000 	eorlt	r0, fp, #0
    1efc:	3d100012 	ldccc	0, cr0, [r0, #-72]	; 0xffffffb8
    1f00:	2b00001b 	blcs	1f74 <__HEAP_SIZE+0xf74>
    1f04:	100012be 			; <UNDEFINED> instruction: 0x100012be
    1f08:	00001b5e 	andeq	r1, r0, lr, asr fp
    1f0c:	0012ca2b 	andseq	ip, r2, fp, lsr #20
    1f10:	001b3210 	andseq	r3, fp, r0, lsl r2
    1f14:	12d82b00 	sbcsne	r2, r8, #0, 22
    1f18:	1b271000 	blne	9c5f20 <__RAM_SIZE+0x8c5f20>
    1f1c:	f22b0000 	vhadd.s32	d0, d11, d0
    1f20:	32100012 	andscc	r0, r0, #18
    1f24:	1500001b 	strne	r0, [r0, #-27]	; 0xffffffe5
    1f28:	1000140a 	andne	r1, r0, sl, lsl #8
    1f2c:	00001791 	muleq	r0, r1, r7
    1f30:	04500116 	ldrbeq	r0, [r0], #-278	; 0xfffffeea
    1f34:	067f9c91 			; <UNDEFINED> instruction: 0x067f9c91
    1f38:	04510116 	ldrbeq	r0, [r1], #-278	; 0xfffffeea
    1f3c:	067fa891 			; <UNDEFINED> instruction: 0x067fa891
    1f40:	02520116 	subseq	r0, r2, #-2147483643	; 0x80000005
    1f44:	0116007a 	tsteq	r6, sl, ror r0
    1f48:	007b0253 	rsbseq	r0, fp, r3, asr r2
    1f4c:	007d0216 	rsbseq	r0, sp, r6, lsl r2
    1f50:	7fb09103 	svcvc	0x00b09103
    1f54:	047d0216 	ldrbteq	r0, [sp], #-534	; 0xfffffdea
    1f58:	16007402 	strne	r7, [r0], -r2, lsl #8
    1f5c:	03087d02 	movweq	r7, #36098	; 0x8d02
    1f60:	16060c91 			; <UNDEFINED> instruction: 0x16060c91
    1f64:	030c7d02 	movweq	r7, #52482	; 0xcd02
    1f68:	00061091 	muleq	r6, r1, r0
    1f6c:	01331800 	teqeq	r3, r0, lsl #16
    1f70:	13670000 	cmnne	r7, #0
    1f74:	30190000 	andscc	r0, r9, r0
    1f78:	1f000000 	svcne	0x00000000
    1f7c:	0fa31800 	svceq	0x00a31800
    1f80:	13770000 	cmnne	r7, #0
    1f84:	30190000 	andscc	r0, r9, r0
    1f88:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    1f8c:	13670300 	cmnne	r7, #0, 6
    1f90:	fd1a0000 	ldc2	0, cr0, [sl, #-0]
    1f94:	01000006 	tsteq	r0, r6
    1f98:	010f0132 	tsteq	pc, r2, lsr r1	; <UNPREDICTABLE>
    1f9c:	000000ee 	andeq	r0, r0, lr, ror #1
    1fa0:	10000c2c 	andne	r0, r0, ip, lsr #24
    1fa4:	10000cf2 	strdne	r0, [r0], -r2
    1fa8:	000019dc 	ldrdeq	r1, [r0], -ip
    1fac:	00150f01 	andseq	r0, r5, r1, lsl #30
    1fb0:	756f0f00 	strbvc	r0, [pc, #-3840]!	; 10b8 <__HEAP_SIZE+0xb8>
    1fb4:	32010074 	andcc	r0, r1, #116	; 0x74
    1fb8:	01062c01 	tsteq	r6, r1, lsl #24
    1fbc:	1a1d0000 	bne	741fc4 <__RAM_SIZE+0x641fc4>
    1fc0:	1a150000 	bne	541fc8 <__RAM_SIZE+0x441fc8>
    1fc4:	d8170000 	ldmdale	r7, {}	; <UNPREDICTABLE>
    1fc8:	01000004 	tsteq	r0, r4
    1fcc:	ee370132 	mrc	1, 1, r0, cr7, cr2, {1}
    1fd0:	5d000002 	stcpl	0, cr0, [r0, #-8]
    1fd4:	5500001a 	strpl	r0, [r0, #-26]	; 0xffffffe6
    1fd8:	0f00001a 	svceq	0x0000001a
    1fdc:	00786469 	rsbseq	r6, r8, r9, ror #8
    1fe0:	46013201 	strmi	r3, [r1], -r1, lsl #4
    1fe4:	000000ee 	andeq	r0, r0, lr, ror #1
    1fe8:	00001a9d 	muleq	r0, sp, sl
    1fec:	00001a95 	muleq	r0, r5, sl
    1ff0:	00061c17 	andeq	r1, r6, r7, lsl ip
    1ff4:	01320100 	teqeq	r2, r0, lsl #2
    1ff8:	0000ee52 	andeq	lr, r0, r2, asr lr
    1ffc:	001ad900 	andseq	sp, sl, r0, lsl #18
    2000:	001ad500 	andseq	sp, sl, r0, lsl #10
    2004:	053d1700 	ldreq	r1, [sp, #-1792]!	; 0xfffff900
    2008:	32010000 	andcc	r0, r1, #0
    200c:	007e6d01 	rsbseq	r6, lr, r1, lsl #26
    2010:	1b010000 	blne	42018 <__HEAP_SIZE+0x41018>
    2014:	1af70000 	bne	ffdc201c <__StackTop+0xc7cc201c>
    2018:	6e100000 	cdpvs	0, 1, cr0, cr0, cr0, {0}
    201c:	01000005 	tsteq	r0, r5
    2020:	7d790132 	ldfvce	f0, [r9, #-200]!	; 0xffffff38
    2024:	0200000b 	andeq	r0, r0, #11
    2028:	fe100891 	vfmsl.f16	d0, s1, s2[0]
    202c:	01000008 	tsteq	r0, r8
    2030:	7e960132 	mrcvc	1, 4, r0, cr6, cr2, {1}
    2034:	02000000 	andeq	r0, r0, #0
    2038:	d3101091 	tstle	r0, #145	; 0x91
    203c:	01000006 	tsteq	r0, r6
    2040:	30a90132 	adccc	r0, r9, r2, lsr r1
    2044:	02000000 	andeq	r0, r0, #0
    2048:	d9101891 	ldmdble	r0, {r0, r4, r7, fp, ip}
    204c:	01000006 	tsteq	r0, r6
    2050:	30bc0132 	adcscc	r0, ip, r2, lsr r1
    2054:	02000000 	andeq	r0, r0, #0
    2058:	07171c91 			; <UNDEFINED> instruction: 0x07171c91
    205c:	01000006 	tsteq	r0, r6
    2060:	30d00132 	sbcscc	r0, r0, r2, lsr r1
    2064:	55000000 	strpl	r0, [r0, #-0]
    2068:	5100001b 	tstpl	r0, fp, lsl r0
    206c:	1200001b 	andne	r0, r0, #27
    2070:	00667562 	rsbeq	r7, r6, r2, ror #10
    2074:	08013401 	stmdaeq	r1, {r0, sl, ip, sp}
    2078:	00001357 	andeq	r1, r0, r7, asr r3
    207c:	7fb89103 	svcvc	0x00b89103
    2080:	6e656c14 	mcrvs	12, 3, r6, cr5, cr4, {0}
    2084:	01350100 	teqeq	r5, r0, lsl #2
    2088:	0000ee0a 	andeq	lr, r0, sl, lsl #28
    208c:	001b8000 	andseq	r8, fp, r0
    2090:	001b7400 	andseq	r7, fp, r0, lsl #8
    2094:	00d01e00 	sbcseq	r1, r0, r0, lsl #28
    2098:	14b00000 	ldrtne	r0, [r0], #0
    209c:	5b1c0000 	blpl	7020a4 <__RAM_SIZE+0x6020a4>
    20a0:	01000006 	tsteq	r0, r6
    20a4:	3a12013f 	bcc	4825a8 <__RAM_SIZE+0x3825a8>
    20a8:	d0000001 	andle	r0, r0, r1
    20ac:	cc00001b 	stcgt	0, cr0, [r0], {27}
    20b0:	2b00001b 	blcs	2124 <__HEAP_SIZE+0x1124>
    20b4:	10000c84 	andne	r0, r0, r4, lsl #25
    20b8:	00001bab 	andeq	r1, r0, fp, lsr #23
    20bc:	000ca42b 	andeq	sl, ip, fp, lsr #8
    20c0:	001bab10 	andseq	sl, fp, r0, lsl fp
    20c4:	ec150000 	ldc	0, cr0, [r5], {-0}
    20c8:	7010000c 	andsvc	r0, r0, ip
    20cc:	16000016 			; <UNDEFINED> instruction: 0x16000016
    20d0:	91045001 	tstls	r4, r1
    20d4:	16067fac 	strne	r7, [r6], -ip, lsr #31
    20d8:	91045101 	tstls	r4, r1, lsl #2
    20dc:	16067fb0 			; <UNDEFINED> instruction: 0x16067fb0
    20e0:	91045201 	tstls	r4, r1, lsl #4
    20e4:	16067fb4 			; <UNDEFINED> instruction: 0x16067fb4
    20e8:	7b025301 	blvc	96cf4 <__HEAP_SIZE+0x95cf4>
    20ec:	7d021600 	stcvc	6, cr1, [r2, #-0]
    20f0:	b8910300 	ldmlt	r1, {r8, r9}
    20f4:	7d02167f 	stcvc	6, cr1, [r2, #-508]	; 0xfffffe04
    20f8:	00790204 	rsbseq	r0, r9, r4, lsl #4
    20fc:	087d0216 	ldmdaeq	sp!, {r1, r2, r4, r9}^
    2100:	94089104 	strls	r9, [r8], #-260	; 0xfffffefc
    2104:	7d021601 	stcvc	6, cr1, [r2, #-4]
    2108:	0077020c 	rsbseq	r0, r7, ip, lsl #4
    210c:	107d0216 	rsbsne	r0, sp, r6, lsl r2
    2110:	06189103 	ldreq	r9, [r8], -r3, lsl #2
    2114:	147d0216 	ldrbtne	r0, [sp], #-534	; 0xfffffdea
    2118:	061c9103 	ldreq	r9, [ip], -r3, lsl #2
    211c:	187d0216 	ldmdane	sp!, {r1, r2, r4, r9}^
    2120:	00007a02 	andeq	r7, r0, r2, lsl #20
    2124:	05e71a00 	strbeq	r1, [r7, #2560]!	; 0xa00
    2128:	19010000 	stmdbne	r1, {}	; <UNPREDICTABLE>
    212c:	ee010f01 	cdp	15, 0, cr0, cr1, cr1, {0}
    2130:	98000000 	stmdals	r0, {}	; <UNPREDICTABLE>
    2134:	2c10000b 	ldccs	0, cr0, [r0], {11}
    2138:	ee10000c 	cdp	0, 1, cr0, cr0, cr12, {0}
    213c:	0100001b 	tsteq	r0, fp, lsl r0
    2140:	00001670 	andeq	r1, r0, r0, ror r6
    2144:	74756f0f 	ldrbtvc	r6, [r5], #-3855	; 0xfffff0f1
    2148:	01190100 	tsteq	r9, r0, lsl #2
    214c:	00010627 	andeq	r0, r1, r7, lsr #12
    2150:	001c2b00 	andseq	r2, ip, r0, lsl #22
    2154:	001c2700 	andseq	r2, ip, r0, lsl #14
    2158:	04d81700 	ldrbeq	r1, [r8], #1792	; 0x700
    215c:	19010000 	stmdbne	r1, {}	; <UNPREDICTABLE>
    2160:	02ee3201 	rsceq	r3, lr, #268435456	; 0x10000000
    2164:	1c500000 	mrane	r0, r0, acc0
    2168:	1c4c0000 	marne	acc0, r0, ip
    216c:	690f0000 	stmdbvs	pc, {}	; <UNPREDICTABLE>
    2170:	01007864 	tsteq	r0, r4, ror #16
    2174:	ee410119 	mcr	1, 2, r0, cr1, cr9, {0}
    2178:	75000000 	strvc	r0, [r0, #-0]
    217c:	7100001c 	tstvc	r0, ip, lsl r0
    2180:	1700001c 	smladne	r0, ip, r0, r0
    2184:	0000061c 	andeq	r0, r0, ip, lsl r6
    2188:	4d011901 	vstrmi.16	s2, [r1, #-2]	; <UNPREDICTABLE>
    218c:	000000ee 	andeq	r0, r0, lr, ror #1
    2190:	00001c9a 	muleq	r0, sl, ip
    2194:	00001c96 	muleq	r0, r6, ip
    2198:	00053d17 	andeq	r3, r5, r7, lsl sp
    219c:	01190100 	tsteq	r9, r0, lsl #2
    21a0:	00005f63 	andeq	r5, r0, r3, ror #30
    21a4:	001cc500 	andseq	ip, ip, r0, lsl #10
    21a8:	001cbb00 	andseq	fp, ip, r0, lsl #22
    21ac:	056e1000 	strbeq	r1, [lr, #-0]!
    21b0:	19010000 	stmdbne	r1, {}	; <UNPREDICTABLE>
    21b4:	0b7d6f01 	bleq	1f5ddc0 <__RAM_SIZE+0x1e5ddc0>
    21b8:	91020000 	mrsls	r0, (UNDEF: 2)
    21bc:	08fe1004 	ldmeq	lr!, {r2, ip}^
    21c0:	19010000 	stmdbne	r1, {}	; <UNPREDICTABLE>
    21c4:	005f8701 	subseq	r8, pc, r1, lsl #14
    21c8:	91020000 	mrsls	r0, (UNDEF: 2)
    21cc:	06d31008 	ldrbeq	r1, [r3], r8
    21d0:	19010000 	stmdbne	r1, {}	; <UNPREDICTABLE>
    21d4:	00309a01 	eorseq	r9, r0, r1, lsl #20
    21d8:	91020000 	mrsls	r0, (UNDEF: 2)
    21dc:	06d9100c 	ldrbeq	r1, [r9], ip
    21e0:	19010000 	stmdbne	r1, {}	; <UNPREDICTABLE>
    21e4:	0030ad01 	eorseq	sl, r0, r1, lsl #26
    21e8:	91020000 	mrsls	r0, (UNDEF: 2)
    21ec:	06071710 			; <UNDEFINED> instruction: 0x06071710
    21f0:	19010000 	stmdbne	r1, {}	; <UNPREDICTABLE>
    21f4:	0030c101 	eorseq	ip, r0, r1, lsl #2
    21f8:	1d0a0000 	stcne	0, cr0, [sl, #-0]
    21fc:	1d060000 	stcne	0, cr0, [r6, #-0]
    2200:	62120000 	andsvs	r0, r2, #0
    2204:	01006675 	tsteq	r0, r5, ror r6
    2208:	5708011b 	smladpl	r8, fp, r1, r0
    220c:	02000013 	andeq	r0, r0, #19
    2210:	6c144891 	ldcvs	8, cr4, [r4], {145}	; 0x91
    2214:	01006e65 	tsteq	r0, r5, ror #28
    2218:	ee0a011c 	mcr	1, 0, r0, cr10, cr12, {0}
    221c:	35000000 	strcc	r0, [r0, #-0]
    2220:	2900001d 	stmdbcs	r0, {r0, r2, r3, r4}
    2224:	1e00001d 	mcrne	0, 0, r0, cr0, cr13, {0}
    2228:	000000b0 	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
    222c:	00001630 	andeq	r1, r0, r0, lsr r6
    2230:	00065b1c 	andeq	r5, r6, ip, lsl fp
    2234:	01260100 			; <UNDEFINED> instruction: 0x01260100
    2238:	00013a12 	andeq	r3, r1, r2, lsl sl
    223c:	001d8d00 	andseq	r8, sp, r0, lsl #26
    2240:	001d8100 	andseq	r8, sp, r0, lsl #2
    2244:	28150000 	ldmdacs	r5, {}	; <UNPREDICTABLE>
    2248:	7010000c 	andsvc	r0, r0, ip
    224c:	16000016 			; <UNDEFINED> instruction: 0x16000016
    2250:	02007d02 	andeq	r7, r0, #2, 26	; 0x80
    2254:	02160074 	andseq	r0, r6, #116	; 0x74
    2258:	7702047d 	smlsdxvc	r2, sp, r4, r0
    225c:	7d021600 	stcvc	6, cr1, [r2, #-0]
    2260:	04910408 	ldreq	r0, [r1], #1032	; 0x408
    2264:	02160194 	andseq	r0, r6, #148, 2	; 0x25
    2268:	75020c7d 	strvc	r0, [r2, #-3197]	; 0xfffff383
    226c:	7d021600 	stcvc	6, cr1, [r2, #-0]
    2270:	0c910310 	ldceq	3, cr0, [r1], {16}
    2274:	7d021606 	stcvc	6, cr1, [r2, #-24]	; 0xffffffe8
    2278:	10910314 	addsne	r0, r1, r4, lsl r3
    227c:	7d021606 	stcvc	6, cr1, [r2, #-24]	; 0xffffffe8
    2280:	00760218 	rsbseq	r0, r6, r8, lsl r2
    2284:	a32c0000 			; <UNDEFINED> instruction: 0xa32c0000
    2288:	01000005 	tsteq	r0, r5
    228c:	ee010fe3 	cdp	15, 0, cr0, cr1, cr3, {7}
    2290:	60000000 	andvs	r0, r0, r0
    2294:	9810000a 	ldmdals	r0, {r1, r3}
    2298:	fb10000b 	blx	4022ce <__RAM_SIZE+0x3022ce>
    229c:	0100001d 	tsteq	r0, sp, lsl r0
    22a0:	00001791 	muleq	r0, r1, r7
    22a4:	74756f2d 	ldrbtvc	r6, [r5], #-3885	; 0xfffff0d3
    22a8:	29e30100 	stmibcs	r3!, {r8}^
    22ac:	00000106 	andeq	r0, r0, r6, lsl #2
    22b0:	00001e45 	andeq	r1, r0, r5, asr #28
    22b4:	00001e3f 	andeq	r1, r0, pc, lsr lr
    22b8:	0004d82e 	andeq	sp, r4, lr, lsr #16
    22bc:	34e30100 	strbtcc	r0, [r3], #256	; 0x100
    22c0:	000002ee 	andeq	r0, r0, lr, ror #5
    22c4:	00001e77 	andeq	r1, r0, r7, ror lr
    22c8:	00001e71 	andeq	r1, r0, r1, ror lr
    22cc:	7864692d 	stmdavc	r4!, {r0, r2, r3, r5, r8, fp, sp, lr}^
    22d0:	43e30100 	mvnmi	r0, #0, 2
    22d4:	000000ee 	andeq	r0, r0, lr, ror #1
    22d8:	00001ea9 	andeq	r1, r0, r9, lsr #29
    22dc:	00001ea3 	andeq	r1, r0, r3, lsr #29
    22e0:	00061c2e 	andeq	r1, r6, lr, lsr #24
    22e4:	4fe30100 	svcmi	0x00e30100
    22e8:	000000ee 	andeq	r0, r0, lr, ror #1
    22ec:	00001edb 	ldrdeq	r1, [r0], -fp
    22f0:	00001ed5 	ldrdeq	r1, [r0], -r5
    22f4:	6675622d 	ldrbtvs	r6, [r5], -sp, lsr #4
    22f8:	5de30100 	stfple	f0, [r3]
    22fc:	000002ee 	andeq	r0, r0, lr, ror #5
    2300:	00001f0b 	andeq	r1, r0, fp, lsl #30
    2304:	00001f07 	andeq	r1, r0, r7, lsl #30
    2308:	6e656c2d 	cdpvs	12, 6, cr6, cr5, cr13, {1}
    230c:	69e30100 	stmibvs	r3!, {r8}^
    2310:	000000ee 	andeq	r0, r0, lr, ror #1
    2314:	00001f5d 	andeq	r1, r0, sp, asr pc
    2318:	00001f2b 	andeq	r1, r0, fp, lsr #30
    231c:	00056e2e 	andeq	r6, r5, lr, lsr #28
    2320:	73e30100 	mvnvc	r0, #0, 2
    2324:	00000b7d 	andeq	r0, r0, sp, ror fp
    2328:	00002091 	muleq	r0, r1, r0
    232c:	0000208d 	andeq	r2, r0, sp, lsl #1
    2330:	0008fe2e 	andeq	pc, r8, lr, lsr #28
    2334:	8ae30100 	bhi	ff8c273c <__StackTop+0xc77c273c>
    2338:	00000030 	andeq	r0, r0, r0, lsr r0
    233c:	000020b5 	strheq	r2, [r0], -r5
    2340:	000020b1 	strheq	r2, [r0], -r1
    2344:	0006d32e 	andeq	sp, r6, lr, lsr #6
    2348:	9de30100 	stflse	f0, [r3]
    234c:	00000030 	andeq	r0, r0, r0, lsr r0
    2350:	000020d9 	ldrdeq	r2, [r0], -r9
    2354:	000020d5 	ldrdeq	r2, [r0], -r5
    2358:	0006d92e 	andeq	sp, r6, lr, lsr #18
    235c:	b0e30100 	rsclt	r0, r3, r0, lsl #2
    2360:	00000030 	andeq	r0, r0, r0, lsr r0
    2364:	000020fd 	strdeq	r2, [r0], -sp
    2368:	000020f9 	strdeq	r2, [r0], -r9
    236c:	0006072e 	andeq	r0, r6, lr, lsr #14
    2370:	c4e30100 	strbtgt	r0, [r3], #256	; 0x100
    2374:	00000030 	andeq	r0, r0, r0, lsr r0
    2378:	00002120 	andeq	r2, r0, r0, lsr #2
    237c:	0000211c 	andeq	r2, r0, ip, lsl r1
    2380:	000b1a15 	andeq	r1, fp, r5, lsl sl
    2384:	00179110 	andseq	r9, r7, r0, lsl r1
    2388:	7d021600 	stcvc	6, cr1, [r2, #-0]
    238c:	00750200 	rsbseq	r0, r5, r0, lsl #4
    2390:	047d0216 	ldrbteq	r0, [sp], #-534	; 0xfffffdea
    2394:	16007402 	strne	r7, [r0], -r2, lsl #8
    2398:	02087d02 	andeq	r7, r8, #2, 26	; 0x80
    239c:	02160077 	andseq	r0, r6, #119	; 0x77
    23a0:	76020c7d 			; <UNDEFINED> instruction: 0x76020c7d
    23a4:	2c000000 	stccs	0, cr0, [r0], {-0}
    23a8:	0000068b 	andeq	r0, r0, fp, lsl #13
    23ac:	010fc701 	tsteq	pc, r1, lsl #14
    23b0:	000000ee 	andeq	r0, r0, lr, ror #1
    23b4:	100009e2 	andne	r0, r0, r2, ror #19
    23b8:	10000a60 	andne	r0, r0, r0, ror #20
    23bc:	00002140 	andeq	r2, r0, r0, asr #2
    23c0:	0018d801 	andseq	sp, r8, r1, lsl #16
    23c4:	756f2d00 	strbvc	r2, [pc, #-3328]!	; 16cc <__HEAP_SIZE+0x6cc>
    23c8:	c7010074 	smlsdxgt	r1, r4, r0, r0
    23cc:	00010625 	andeq	r0, r1, r5, lsr #12
    23d0:	00218800 	eoreq	r8, r1, r0, lsl #16
    23d4:	00218400 	eoreq	r8, r1, r0, lsl #8
    23d8:	04d82e00 	ldrbeq	r2, [r8], #3584	; 0xe00
    23dc:	c7010000 	strgt	r0, [r1, -r0]
    23e0:	0002ee30 	andeq	lr, r2, r0, lsr lr
    23e4:	0021aa00 	eoreq	sl, r1, r0, lsl #20
    23e8:	0021a600 	eoreq	sl, r1, r0, lsl #12
    23ec:	64692d00 	strbtvs	r2, [r9], #-3328	; 0xfffff300
    23f0:	c7010078 	smlsdxgt	r1, r8, r0, r0
    23f4:	0000ee3f 	andeq	lr, r0, pc, lsr lr
    23f8:	0021d400 	eoreq	sp, r1, r0, lsl #8
    23fc:	0021c800 	eoreq	ip, r1, r0, lsl #16
    2400:	061c2e00 	ldreq	r2, [ip], -r0, lsl #28
    2404:	c7010000 	strgt	r0, [r1, -r0]
    2408:	0000ee4b 	andeq	lr, r0, fp, asr #28
    240c:	00222200 	eoreq	r2, r2, r0, lsl #4
    2410:	00221e00 	eoreq	r1, r2, r0, lsl #28
    2414:	75622d00 	strbvc	r2, [r2, #-3328]!	; 0xfffff300
    2418:	c7010066 	strgt	r0, [r1, -r6, rrx]
    241c:	00024c5f 	andeq	r4, r2, pc, asr ip
    2420:	00224400 	eoreq	r4, r2, r0, lsl #8
    2424:	00224000 	eoreq	r4, r2, r0
    2428:	656c2d00 	strbvs	r2, [ip, #-3328]!	; 0xfffff300
    242c:	c701006e 	strgt	r0, [r1, -lr, rrx]
    2430:	0000ee6b 	andeq	lr, r0, fp, ror #28
    2434:	00226800 	eoreq	r6, r2, r0, lsl #16
    2438:	00226400 	eoreq	r6, r2, r0, lsl #8
    243c:	06d92e00 	ldrbeq	r2, [r9], r0, lsl #28
    2440:	c7010000 	strgt	r0, [r1, -r0]
    2444:	0000307d 	andeq	r3, r0, sp, ror r0
    2448:	00228b00 	eoreq	r8, r2, r0, lsl #22
    244c:	00228700 	eoreq	r8, r2, r0, lsl #14
    2450:	06072e00 	streq	r2, [r7], -r0, lsl #28
    2454:	c7010000 	strgt	r0, [r1, -r0]
    2458:	00003091 	muleq	r0, r1, r0
    245c:	0022af00 	eoreq	sl, r2, r0, lsl #30
    2460:	0022ab00 	eoreq	sl, r2, r0, lsl #22
    2464:	055a2f00 	ldrbeq	r2, [sl, #-3840]	; 0xfffff100
    2468:	c9010000 	stmdbgt	r1, {}	; <UNPREDICTABLE>
    246c:	0000fa10 	andeq	pc, r0, r0, lsl sl	; <UNPREDICTABLE>
    2470:	0022d500 	eoreq	sp, r2, r0, lsl #10
    2474:	0022cf00 	eoreq	ip, r2, r0, lsl #30
    2478:	00981e00 	addseq	r1, r8, r0, lsl #28
    247c:	189d0000 	ldmne	sp, {}	; <UNPREDICTABLE>
    2480:	69300000 	ldmdbvs	r0!, {}	; <UNPREDICTABLE>
    2484:	11cd0100 	bicne	r0, sp, r0, lsl #2
    2488:	000000ee 	andeq	r0, r0, lr, ror #1
    248c:	00002304 	andeq	r2, r0, r4, lsl #6
    2490:	00002302 	andeq	r2, r0, r2, lsl #6
    2494:	000a1622 	andeq	r1, sl, r2, lsr #12
    2498:	50011610 	andpl	r1, r1, r0, lsl r6
    249c:	16200802 	strtne	r0, [r0], -r2, lsl #16
    24a0:	76025101 	strvc	r5, [r2], -r1, lsl #2
    24a4:	52011600 	andpl	r1, r1, #0, 12
    24a8:	167f7b02 	ldrbtne	r7, [pc], -r2, lsl #22
    24ac:	77025301 	strvc	r5, [r2, -r1, lsl #6]
    24b0:	21000000 	mrscs	r0, (UNDEF: 0)
    24b4:	10000a34 	andne	r0, r0, r4, lsr sl
    24b8:	000018b9 			; <UNDEFINED> instruction: 0x000018b9
    24bc:	02510116 	subseq	r0, r1, #-2147483643	; 0x80000005
    24c0:	01160076 	tsteq	r6, r6, ror r0
    24c4:	7f780252 	svcvc	0x00780252
    24c8:	02530116 	subseq	r0, r3, #-2147483643	; 0x80000005
    24cc:	22000077 	andcs	r0, r0, #119	; 0x77
    24d0:	10000a5c 	andne	r0, r0, ip, asr sl
    24d4:	02500116 	subseq	r0, r0, #-2147483643	; 0x80000005
    24d8:	01162008 	tsteq	r6, r8
    24dc:	00760251 	rsbseq	r0, r6, r1, asr r2
    24e0:	02520116 	subseq	r0, r2, #-2147483643	; 0x80000005
    24e4:	01167f74 	tsteq	r6, r4, ror pc
    24e8:	00770253 	rsbseq	r0, r7, r3, asr r2
    24ec:	23310000 	teqcs	r1, #0
    24f0:	01000006 	tsteq	r0, r6
    24f4:	300115bc 			; <UNDEFINED> instruction: 0x300115bc
    24f8:	be000000 	cdplt	0, 0, cr0, cr0, cr0, {0}
    24fc:	e2100009 	ands	r0, r0, #9
    2500:	02100009 	andseq	r0, r0, #9
    2504:	4001007d 	andmi	r0, r1, sp, ror r0
    2508:	2d000019 	stccs	0, cr0, [r0, #-100]	; 0xffffff9c
    250c:	00727473 	rsbseq	r7, r2, r3, ror r4
    2510:	4028bc01 	eormi	fp, r8, r1, lsl #24
    2514:	1b000019 	blne	2580 <__HEAP_SIZE+0x1580>
    2518:	17000023 	strne	r0, [r0, -r3, lsr #32]
    251c:	30000023 	andcc	r0, r0, r3, lsr #32
    2520:	be010069 	cdplt	0, 0, cr0, cr1, cr9, {3}
    2524:	00003010 	andeq	r3, r0, r0, lsl r0
    2528:	00233f00 	eoreq	r3, r3, r0, lsl #30
    252c:	00233900 	eoreq	r3, r3, r0, lsl #18
    2530:	19463200 	stmdbne	r6, {r9, ip, sp}^
    2534:	09d80000 	ldmibeq	r8, {}^	; <UNPREDICTABLE>
    2538:	00001000 	andeq	r1, r0, r0
    253c:	100009d8 	ldrdne	r0, [r0], -r8
    2540:	100009dc 	ldrdne	r0, [r0], -ip
    2544:	240abf01 	strcs	fp, [sl], #-3841	; 0xfffff0ff
    2548:	00001958 	andeq	r1, r0, r8, asr r9
    254c:	0000236d 	andeq	r2, r0, sp, ror #6
    2550:	00002369 	andeq	r2, r0, r9, ror #6
    2554:	04090000 	streq	r0, [r9], #-0
    2558:	0000024c 	andeq	r0, r0, ip, asr #4
    255c:	00065733 	andeq	r5, r6, r3, lsr r7
    2560:	14b50100 	ldrtne	r0, [r5], #256	; 0x100
    2564:	000b7d01 	andeq	r7, fp, r1, lsl #26
    2568:	19640300 	stmdbne	r4!, {r8, r9}^
    256c:	63340000 	teqvs	r4, #0
    2570:	b5010068 	strlt	r0, [r1, #-104]	; 0xffffff98
    2574:	00013323 	andeq	r3, r1, r3, lsr #6
    2578:	29330000 	ldmdbcs	r3!, {}	; <UNPREDICTABLE>
    257c:	01000006 	tsteq	r0, r6
    2580:	30011cab 	andcc	r1, r1, fp, lsr #25
    2584:	03000000 	movweq	r0, #0
    2588:	00001999 	muleq	r0, r9, r9
    258c:	72747334 	rsbsvc	r7, r4, #52, 6	; 0xd0000000
    2590:	33ab0100 			; <UNDEFINED> instruction: 0x33ab0100
    2594:	0000024c 	andeq	r0, r0, ip, asr #4
    2598:	00051d35 	andeq	r1, r5, r5, lsr sp
    259c:	3fab0100 	svccc	0x00ab0100
    25a0:	000000ee 	andeq	r0, r0, lr, ror #1
    25a4:	01007336 	tsteq	r0, r6, lsr r3
    25a8:	024c0fad 	subeq	r0, ip, #692	; 0x2b4
    25ac:	37000000 	strcc	r0, [r0, -r0]
    25b0:	00000543 	andeq	r0, r0, r3, asr #10
    25b4:	01149f01 	tsteq	r4, r1, lsl #30
	...
    25c0:	0000238d 	andeq	r2, r0, sp, lsl #7
    25c4:	001a0401 	andseq	r0, sl, r1, lsl #8
    25c8:	06812e00 	streq	r2, [r1], r0, lsl #28
    25cc:	9f010000 	svcls	0x00010000
    25d0:	00013322 	andeq	r3, r1, r2, lsr #6
    25d4:	0023bf00 	eoreq	fp, r3, r0, lsl #30
    25d8:	0023b900 	eoreq	fp, r3, r0, lsl #18
    25dc:	04d82e00 	ldrbeq	r2, [r8], #3584	; 0xe00
    25e0:	9f010000 	svcls	0x00010000
    25e4:	0000e033 	andeq	lr, r0, r3, lsr r0
    25e8:	0023f100 	eoreq	pc, r3, r0, lsl #2
    25ec:	0023eb00 	eoreq	lr, r3, r0, lsl #22
    25f0:	64692d00 	strbtvs	r2, [r9], #-3328	; 0xfffff300
    25f4:	9f010078 	svcls	0x00010078
    25f8:	0000ee42 	andeq	lr, r0, r2, asr #28
    25fc:	00242300 	eoreq	r2, r4, r0, lsl #6
    2600:	00241d00 	eoreq	r1, r4, r0, lsl #26
    2604:	061c2e00 	ldreq	r2, [ip], -r0, lsl #28
    2608:	9f010000 	svcls	0x00010000
    260c:	0000ee4e 	andeq	lr, r0, lr, asr #28
    2610:	00245500 	eoreq	r5, r4, r0, lsl #10
    2614:	00244f00 	eoreq	r4, r4, r0, lsl #30
    2618:	13380000 	teqne	r8, #0
    261c:	01000005 	tsteq	r0, r5
    2620:	00011495 	muleq	r1, r5, r4
    2624:	0c10001b 	ldceq	0, cr0, [r0], {27}
    2628:	8110001b 	tsthi	r0, fp, lsl r0
    262c:	01000024 	tsteq	r0, r4, lsr #32
    2630:	00001a78 	andeq	r1, r0, r8, ror sl
    2634:	0006812e 	andeq	r8, r6, lr, lsr #2
    2638:	23950100 	orrscs	r0, r5, #0, 2
    263c:	00000133 	andeq	r0, r0, r3, lsr r1
    2640:	000024a5 	andeq	r2, r0, r5, lsr #9
    2644:	000024a1 	andeq	r2, r0, r1, lsr #9
    2648:	0004d82e 	andeq	sp, r4, lr, lsr #16
    264c:	34950100 	ldrcc	r0, [r5], #256	; 0x100
    2650:	000000e0 	andeq	r0, r0, r0, ror #1
    2654:	000024ca 	andeq	r2, r0, sl, asr #9
    2658:	000024c6 	andeq	r2, r0, r6, asr #9
    265c:	7864692d 	stmdavc	r4!, {r0, r2, r3, r5, r8, fp, sp, lr}^
    2660:	43950100 	orrsmi	r0, r5, #0, 2
    2664:	000000ee 	andeq	r0, r0, lr, ror #1
    2668:	000024ef 	andeq	r2, r0, pc, ror #9
    266c:	000024eb 	andeq	r2, r0, fp, ror #9
    2670:	00061c2e 	andeq	r1, r6, lr, lsr #24
    2674:	4f950100 	svcmi	0x00950100
    2678:	000000ee 	andeq	r0, r0, lr, ror #1
    267c:	00002514 	andeq	r2, r0, r4, lsl r5
    2680:	00002510 	andeq	r2, r0, r0, lsl r5
    2684:	001b0a2b 	andseq	r0, fp, fp, lsr #20
    2688:	001bb610 	andseq	fp, fp, r0, lsl r6
    268c:	c1390000 	teqgt	r9, r0
    2690:	01000005 	tsteq	r0, r5
    2694:	bc01148e 	cfstrslt	mvf1, [r1], {142}	; 0x8e
    2698:	be100009 	cdplt	0, 1, cr0, cr0, cr9, {0}
    269c:	02100009 	andseq	r0, r0, #9
    26a0:	ca01007d 	bgt	4289c <__HEAP_SIZE+0x4189c>
    26a4:	3a00001a 	bcc	2714 <__HEAP_SIZE+0x1714>
    26a8:	00000681 	andeq	r0, r0, r1, lsl #13
    26ac:	33238e01 			; <UNDEFINED> instruction: 0x33238e01
    26b0:	01000001 	tsteq	r0, r1
    26b4:	04d83a50 	ldrbeq	r3, [r8], #2640	; 0xa50
    26b8:	8e010000 	cdphi	0, 0, cr0, cr1, cr0, {0}
    26bc:	0000e034 	andeq	lr, r0, r4, lsr r0
    26c0:	3b510100 	blcc	1442ac8 <__RAM_SIZE+0x1342ac8>
    26c4:	00786469 	rsbseq	r6, r8, r9, ror #8
    26c8:	ee438e01 	cdp	14, 4, cr8, cr3, cr1, {0}
    26cc:	01000000 	mrseq	r0, (UNDEF: 0)
    26d0:	061c3a52 			; <UNDEFINED> instruction: 0x061c3a52
    26d4:	8e010000 	cdphi	0, 0, cr0, cr1, cr0, {0}
    26d8:	0000ee4f 	andeq	lr, r0, pc, asr #28
    26dc:	00530100 	subseq	r0, r3, r0, lsl #2
    26e0:	0004d339 	andeq	sp, r4, r9, lsr r3
    26e4:	14850100 	strne	r0, [r5], #256	; 0x100
    26e8:	00000001 	andeq	r0, r0, r1
    26ec:	00000000 	andeq	r0, r0, r0
    26f0:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    26f4:	001b1c01 	andseq	r1, fp, r1, lsl #24
    26f8:	06813a00 	streq	r3, [r1], r0, lsl #20
    26fc:	85010000 	strhi	r0, [r1, #-0]
    2700:	00013325 	andeq	r3, r1, r5, lsr #6
    2704:	3a500100 	bcc	1402b0c <__RAM_SIZE+0x1302b0c>
    2708:	000004d8 	ldrdeq	r0, [r0], -r8
    270c:	e0368501 	eors	r8, r6, r1, lsl #10
    2710:	01000000 	mrseq	r0, (UNDEF: 0)
    2714:	64693b51 	strbtvs	r3, [r9], #-2897	; 0xfffff4af
    2718:	85010078 	strhi	r0, [r1, #-120]	; 0xffffff88
    271c:	0000ee45 	andeq	lr, r0, r5, asr #28
    2720:	3a520100 	bcc	1482b28 <__RAM_SIZE+0x1382b28>
    2724:	0000061c 	andeq	r0, r0, ip, lsl r6
    2728:	ee518501 	cdp	5, 5, cr8, cr1, cr1, {0}
    272c:	01000000 	mrseq	r0, (UNDEF: 0)
    2730:	013c0053 	teqeq	ip, r3, asr r0
    2734:	00066601 	andeq	r6, r6, r1, lsl #12
    2738:	00066600 	andeq	r6, r6, r0, lsl #12
    273c:	01013c00 	tsteq	r1, r0, lsl #24
    2740:	0000060d 	andeq	r0, r0, sp, lsl #12
    2744:	0000060d 	andeq	r0, r0, sp, lsl #12
    2748:	ee01013c 	mcr	1, 0, r0, cr1, cr12, {1}
    274c:	ee000006 	cdp	0, 0, cr0, cr0, cr6, {0}
    2750:	3c000006 	stccc	0, cr0, [r0], {6}
    2754:	04a80101 	strteq	r0, [r8], #257	; 0x101
    2758:	04a80000 	strteq	r0, [r8], #0
    275c:	013c0000 	teqeq	ip, r0
    2760:	00063901 	andeq	r3, r6, r1, lsl #18
    2764:	00063900 	andeq	r3, r6, r0, lsl #18
    2768:	01013c00 	tsteq	r1, r0, lsl #24
    276c:	00000577 	andeq	r0, r0, r7, ror r5
    2770:	00000577 	andeq	r0, r0, r7, ror r5
    2774:	9401013c 	strls	r0, [r1], #-316	; 0xfffffec4
    2778:	94000006 	strls	r0, [r0], #-6
    277c:	3c000006 	stccc	0, cr0, [r0], {6}
    2780:	052b0101 	streq	r0, [fp, #-257]!	; 0xfffffeff
    2784:	052b0000 	streq	r0, [fp, #-0]!
    2788:	013c0000 	teqeq	ip, r0
    278c:	0004f701 	andeq	pc, r4, r1, lsl #14
    2790:	0004f700 	andeq	pc, r4, r0, lsl #14
    2794:	01013c00 	tsteq	r1, r0, lsl #24
    2798:	000005d8 	ldrdeq	r0, [r0], -r8
    279c:	000005d8 	ldrdeq	r0, [r0], -r8
    27a0:	4c01013c 	stfmis	f0, [r1], {60}	; 0x3c
    27a4:	4c000005 	stcmi	0, cr0, [r0], {5}
    27a8:	3c000005 	stccc	0, cr0, [r0], {5}
    27ac:	05fa0101 	ldrbeq	r0, [sl, #257]!	; 0x101
    27b0:	05fa0000 	ldrbeq	r0, [sl, #0]!
    27b4:	013c0000 	teqeq	ip, r0
    27b8:	0006b201 	andeq	fp, r6, r1, lsl #4
    27bc:	0006b200 	andeq	fp, r6, r0, lsl #4
    27c0:	01013c00 	tsteq	r1, r0, lsl #24
    27c4:	000006a1 	andeq	r0, r0, r1, lsr #13
    27c8:	000006a1 	andeq	r0, r0, r1, lsr #13
    27cc:	0a01013d 	beq	42cc8 <__HEAP_SIZE+0x41cc8>
    27d0:	0a000005 	beq	27ec <__HEAP_SIZE+0x17ec>
    27d4:	07000005 	streq	r0, [r0, -r5]
    27d8:	4f000531 	svcmi	0x00000531
    27dc:	02000002 	andeq	r0, r0, #2
    27e0:	00067d00 	andeq	r7, r6, r0, lsl #26
    27e4:	bf010400 	svclt	0x00010400
    27e8:	0c000000 	stceq	0, cr0, [r0], {-0}
    27ec:	00000722 	andeq	r0, r0, r2, lsr #14
    27f0:	000001a8 	andeq	r0, r0, r8, lsr #3
    27f4:	000001e8 	andeq	r0, r0, r8, ror #3
	...
    2800:	0000181a 	andeq	r1, r0, sl, lsl r8
    2804:	8f060102 	svchi	0x00060102
    2808:	03000000 	movweq	r0, #0
    280c:	00000000 	andeq	r0, r0, r0
    2810:	3c182b02 			; <UNDEFINED> instruction: 0x3c182b02
    2814:	02000000 	andeq	r0, r0, #0
    2818:	008d0801 	addeq	r0, sp, r1, lsl #16
    281c:	02020000 	andeq	r0, r2, #0
    2820:	0002a505 	andeq	sl, r2, r5, lsl #10
    2824:	07020200 	streq	r0, [r2, -r0, lsl #4]
    2828:	000000ac 	andeq	r0, r0, ip, lsr #1
    282c:	5a050402 	bpl	14383c <__RAM_SIZE+0x4383c>
    2830:	03000002 	movweq	r0, #2
    2834:	0000037d 	andeq	r0, r0, sp, ror r3
    2838:	64194f02 	ldrvs	r4, [r9], #-3842	; 0xfffff0fe
    283c:	02000000 	andeq	r0, r0, #0
    2840:	02180704 	andseq	r0, r8, #4, 14	; 0x100000
    2844:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    2848:	00025505 	andeq	r5, r2, r5, lsl #10
    284c:	07080200 	streq	r0, [r8, -r0, lsl #4]
    2850:	00000213 	andeq	r0, r0, r3, lsl r2
    2854:	69050404 	stmdbvs	r5, {r2, sl}
    2858:	0200746e 	andeq	r7, r0, #1845493760	; 0x6e000000
    285c:	021d0704 	andseq	r0, sp, #4, 14	; 0x100000
    2860:	e7030000 	str	r0, [r3, -r0]
    2864:	03000004 	movweq	r0, #4
    2868:	008017d1 	ldrdeq	r1, [r0], r1	; <UNPREDICTABLE>
    286c:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    2870:	00024904 	andeq	r4, r2, r4, lsl #18
    2874:	08010200 	stmdaeq	r1, {r9}
    2878:	00000096 	muleq	r0, r6, r0
    287c:	00009a05 	andeq	r9, r0, r5, lsl #20
    2880:	a1040600 	tstge	r4, r0, lsl #12
    2884:	03000000 	movweq	r0, #0
    2888:	00000002 	andeq	r0, r0, r2
    288c:	30131804 	andscc	r1, r3, r4, lsl #16
    2890:	03000000 	movweq	r0, #0
    2894:	0000037f 	andeq	r0, r0, pc, ror r3
    2898:	58143004 	ldmdapl	r4, {r2, ip, sp}
    289c:	07000000 	streq	r0, [r0, -r0]
    28a0:	00073c01 	andeq	r3, r7, r1, lsl #24
    28a4:	083f0100 	ldmdaeq	pc!, {r8}	; <UNPREDICTABLE>
    28a8:	00008701 	andeq	r8, r0, r1, lsl #14
	...
    28b4:	00253500 	eoreq	r3, r5, r0, lsl #10
    28b8:	013b0100 	teqeq	fp, r0, lsl #2
    28bc:	d8080000 	stmdale	r8, {}	; <UNPREDICTABLE>
    28c0:	01000004 	tsteq	r0, r4
    28c4:	013b1b3f 	teqeq	fp, pc, lsr fp
    28c8:	25590000 	ldrbcs	r0, [r9, #-0]
    28cc:	25550000 	ldrbcs	r0, [r5, #-0]
    28d0:	20080000 	andcs	r0, r8, r0
    28d4:	01000005 	tsteq	r0, r5
    28d8:	00872a3f 	addeq	r2, r7, pc, lsr sl
    28dc:	257b0000 	ldrbcs	r0, [fp, #-0]!
    28e0:	25770000 	ldrbcs	r0, [r7, #-0]!
    28e4:	63090000 	movwvs	r0, #36864	; 0x9000
    28e8:	40010068 	andmi	r0, r1, r8, rrx
    28ec:	0000ac0d 	andeq	sl, r0, sp, lsl #24
    28f0:	00259f00 	eoreq	r9, r5, r0, lsl #30
    28f4:	00259900 	eoreq	r9, r5, r0, lsl #18
    28f8:	74690900 	strbtvc	r0, [r9], #-2304	; 0xfffff700
    28fc:	0c410100 	stfeqe	f0, [r1], {-0}
    2900:	00000087 	andeq	r0, r0, r7, lsl #1
    2904:	000025cd 	andeq	r2, r0, sp, asr #11
    2908:	000025c9 	andeq	r2, r0, r9, asr #11
    290c:	0000000a 	andeq	r0, r0, sl
    2910:	00024400 	andeq	r4, r2, r0, lsl #8
    2914:	04060000 	streq	r0, [r6], #-0
    2918:	000000ac 	andeq	r0, r0, ip, lsr #1
    291c:	0754010b 	ldrbeq	r0, [r4, -fp, lsl #2]
    2920:	3b010000 	blcc	42928 <__HEAP_SIZE+0x41928>
    2924:	00000106 	andeq	r0, r0, r6, lsl #2
    2928:	00000000 	andeq	r0, r0, r0
    292c:	25ec0000 	strbcs	r0, [ip, #0]!
    2930:	82010000 	andhi	r0, r1, #0
    2934:	08000001 	stmdaeq	r0, {r0}
    2938:	00000735 	andeq	r0, r0, r5, lsr r7
    293c:	a61c3b01 	ldrge	r3, [ip], -r1, lsl #22
    2940:	10000000 	andne	r0, r0, r0
    2944:	0c000026 	stceq	0, cr0, [r0], {38}	; 0x26
    2948:	0c000026 	stceq	0, cr0, [r0], {38}	; 0x26
    294c:	00000000 	andeq	r0, r0, r0
    2950:	00000198 	muleq	r0, r8, r1
    2954:	0350010d 	cmpeq	r0, #1073741827	; 0x40000003
    2958:	005001f3 	ldrsheq	r0, [r0], #-19	; 0xffffffed
    295c:	6c010e00 	stcvs	14, cr0, [r1], {-0}
    2960:	01000000 	mrseq	r0, (UNDEF: 0)
    2964:	6c010632 	stcvs	6, cr0, [r1], {50}	; 0x32
    2968:	9010001b 	andsls	r0, r0, fp, lsl r0
    296c:	0210001b 	andseq	r0, r0, #27
    2970:	0701007d 	smlsdxeq	r1, sp, r0, r0
    2974:	00008801 	andeq	r8, r0, r1, lsl #16
    2978:	05dd0500 	ldrbeq	r0, [sp, #1280]	; 0x500
    297c:	00007901 	andeq	r7, r0, r1, lsl #18
    2980:	001b4c00 	andseq	r4, fp, r0, lsl #24
    2984:	001b6a10 	andseq	r6, fp, r0, lsl sl
    2988:	00263110 	eoreq	r3, r6, r0, lsl r1
    298c:	01f80100 	mvnseq	r0, r0, lsl #2
    2990:	35080000 	strcc	r0, [r8, #-0]
    2994:	01000007 	tsteq	r0, r7
    2998:	00a61628 	adceq	r1, r6, r8, lsr #12
    299c:	26550000 	ldrbcs	r0, [r5], -r0
    29a0:	26510000 	ldrbcs	r0, [r1], -r0
    29a4:	4e0f0000 	cdpmi	0, 0, cr0, cr15, cr0, {0}
    29a8:	01000007 	tsteq	r0, r7
    29ac:	00790929 	rsbseq	r0, r9, r9, lsr #18
    29b0:	26770000 	ldrbtcs	r0, [r7], -r0
    29b4:	26730000 	ldrbtcs	r0, [r3], -r0
    29b8:	580a0000 	stmdapl	sl, {}	; <UNPREDICTABLE>
    29bc:	1210001b 	andsne	r0, r0, #27
    29c0:	0c000002 	stceq	0, cr0, [r0], {2}
    29c4:	10001b66 	andne	r1, r0, r6, ror #22
    29c8:	00000212 	andeq	r0, r0, r2, lsl r2
    29cc:	0150010d 	cmpeq	r0, sp, lsl #2
    29d0:	1000003a 	andne	r0, r0, sl, lsr r0
    29d4:	00075e01 	andeq	r5, r7, r1, lsl #28
    29d8:	05230100 	streq	r0, [r3, #-256]!	; 0xffffff00
    29dc:	00007901 	andeq	r7, r0, r1, lsl #18
	...
    29e8:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    29ec:	0a011101 	beq	46df8 <__HEAP_SIZE+0x45df8>
    29f0:	01000005 	tsteq	r0, r5
    29f4:	7901051d 	stmdbvc	r1, {r0, r2, r3, r4, r8, sl}
    29f8:	38000000 	stmdacc	r0, {}	; <UNPREDICTABLE>
    29fc:	4c10001b 	ldcmi	0, cr0, [r0], {27}
    2a00:	0210001b 	andseq	r0, r0, #27
    2a04:	4401007d 	strmi	r0, [r1], #-125	; 0xffffff83
    2a08:	12000002 	andne	r0, r0, #2
    2a0c:	01006863 	tsteq	r0, r3, ror #16
    2a10:	0079121d 	rsbseq	r1, r9, sp, lsl r2
    2a14:	26980000 	ldrcs	r0, [r8], r0
    2a18:	26960000 	ldrcs	r0, [r6], r0
    2a1c:	13000000 	movwne	r0, #0
    2a20:	07460101 	strbeq	r0, [r6, -r1, lsl #2]
    2a24:	07460000 	strbeq	r0, [r6, -r0]
    2a28:	d9050000 	stmdble	r5, {}	; <UNPREDICTABLE>
    2a2c:	0a3b0005 	beq	ec2a48 <__RAM_SIZE+0xdc2a48>
    2a30:	00020000 	andeq	r0, r2, r0
    2a34:	000007dc 	ldrdeq	r0, [r0], -ip
    2a38:	00bf0104 	adcseq	r0, pc, r4, lsl #2
    2a3c:	af0c0000 	svcge	0x000c0000
    2a40:	a8000008 	stmdage	r0, {r3}
    2a44:	20000001 	andcs	r0, r0, r1
    2a48:	00000002 	andeq	r0, r0, r2
    2a4c:	00000000 	andeq	r0, r0, r0
    2a50:	56000000 	strpl	r0, [r0], -r0
    2a54:	0200001b 	andeq	r0, r0, #27
    2a58:	008f0601 	addeq	r0, pc, r1, lsl #12
    2a5c:	01020000 	mrseq	r0, (UNDEF: 2)
    2a60:	00008d08 	andeq	r8, r0, r8, lsl #26
    2a64:	05020200 	streq	r0, [r2, #-512]	; 0xfffffe00
    2a68:	000002a5 	andeq	r0, r0, r5, lsr #5
    2a6c:	0007de03 	andeq	sp, r7, r3, lsl #28
    2a70:	19390300 	ldmdbne	r9!, {r8, r9}
    2a74:	0000004a 	andeq	r0, r0, sl, asr #32
    2a78:	ac070202 	sfmge	f0, 4, [r7], {2}
    2a7c:	02000000 	andeq	r0, r0, #0
    2a80:	025a0504 	subseq	r0, sl, #4, 10	; 0x1000000
    2a84:	7d030000 	stcvc	0, cr0, [r3, #-0]
    2a88:	03000003 	movweq	r0, #3
    2a8c:	0064194f 	rsbeq	r1, r4, pc, asr #18
    2a90:	04020000 	streq	r0, [r2], #-0
    2a94:	00021807 	andeq	r1, r2, r7, lsl #16
    2a98:	05080200 	streq	r0, [r8, #-512]	; 0xfffffe00
    2a9c:	00000255 	andeq	r0, r0, r5, asr r2
    2aa0:	13070802 	movwne	r0, #30722	; 0x7802
    2aa4:	04000002 	streq	r0, [r0], #-2
    2aa8:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
    2aac:	04020074 	streq	r0, [r2], #-116	; 0xffffff8c
    2ab0:	00021d07 	andeq	r1, r2, r7, lsl #26
    2ab4:	00800500 	addeq	r0, r0, r0, lsl #10
    2ab8:	e7030000 	str	r0, [r3, -r0]
    2abc:	04000004 	streq	r0, [r0], #-4
    2ac0:	008017d1 	ldrdeq	r1, [r0], r1	; <UNPREDICTABLE>
    2ac4:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    2ac8:	00024904 	andeq	r4, r2, r4, lsl #18
    2acc:	08010200 	stmdaeq	r1, {r9}
    2ad0:	00000096 	muleq	r0, r6, r0
    2ad4:	0007e003 	andeq	lr, r7, r3
    2ad8:	14240500 	strtne	r0, [r4], #-1280	; 0xfffffb00
    2adc:	0000003e 	andeq	r0, r0, lr, lsr r0
    2ae0:	00037f03 	andeq	r7, r3, r3, lsl #30
    2ae4:	14300500 	ldrtne	r0, [r0], #-1280	; 0xfffffb00
    2ae8:	00000058 	andeq	r0, r0, r8, asr r0
    2aec:	00088603 	andeq	r8, r8, r3, lsl #12
    2af0:	23280600 			; <UNDEFINED> instruction: 0x23280600
    2af4:	000000ca 	andeq	r0, r0, sl, asr #1
    2af8:	00094d06 	andeq	r4, r9, r6, lsl #26
    2afc:	29062000 	stmdbcs	r6, {sp}
    2b00:	00014a08 	andeq	r4, r1, r8, lsl #20
    2b04:	30720700 	rsbscc	r0, r2, r0, lsl #14
    2b08:	122a0600 	eorne	r0, sl, #0, 12
    2b0c:	00000080 	andeq	r0, r0, r0, lsl #1
    2b10:	07002302 	streq	r2, [r0, -r2, lsl #6]
    2b14:	06003172 			; <UNDEFINED> instruction: 0x06003172
    2b18:	0080122b 	addeq	r1, r0, fp, lsr #4
    2b1c:	23020000 	movwcs	r0, #8192	; 0x2000
    2b20:	32720704 	rsbscc	r0, r2, #4, 14	; 0x100000
    2b24:	122c0600 	eorne	r0, ip, #0, 12
    2b28:	00000080 	andeq	r0, r0, r0, lsl #1
    2b2c:	07082302 	streq	r2, [r8, -r2, lsl #6]
    2b30:	06003372 			; <UNDEFINED> instruction: 0x06003372
    2b34:	0080122d 	addeq	r1, r0, sp, lsr #4
    2b38:	23020000 	movwcs	r0, #8192	; 0x2000
    2b3c:	3172070c 	cmncc	r2, ip, lsl #14
    2b40:	2e060032 	mcrcs	0, 0, r0, cr6, cr2, {1}
    2b44:	00008012 	andeq	r8, r0, r2, lsl r0
    2b48:	10230200 	eorne	r0, r3, r0, lsl #4
    2b4c:	00726c07 	rsbseq	r6, r2, r7, lsl #24
    2b50:	80122f06 	andshi	r2, r2, r6, lsl #30
    2b54:	02000000 	andeq	r0, r0, #0
    2b58:	70071423 	andvc	r1, r7, r3, lsr #8
    2b5c:	30060063 	andcc	r0, r6, r3, rrx
    2b60:	00008012 	andeq	r8, r0, r2, lsl r0
    2b64:	18230200 	stmdane	r3!, {r9}
    2b68:	72737007 	rsbsvc	r7, r3, #7
    2b6c:	12310600 	eorsne	r0, r1, #0, 12
    2b70:	00000080 	andeq	r0, r0, r0, lsl #1
    2b74:	001c2302 	andseq	r2, ip, r2, lsl #6
    2b78:	00084203 	andeq	r4, r8, r3, lsl #4
    2b7c:	23340600 	teqcs	r4, #0, 12
    2b80:	00000156 	andeq	r0, r0, r6, asr r1
    2b84:	00086706 	andeq	r6, r8, r6, lsl #14
    2b88:	35062000 	strcc	r2, [r6, #-0]
    2b8c:	0001d608 	andeq	sp, r1, r8, lsl #12
    2b90:	34720700 	ldrbtcc	r0, [r2], #-1792	; 0xfffff900
    2b94:	12360600 	eorsne	r0, r6, #0, 12
    2b98:	00000080 	andeq	r0, r0, r0, lsl #1
    2b9c:	07002302 	streq	r2, [r0, -r2, lsl #6]
    2ba0:	06003572 			; <UNDEFINED> instruction: 0x06003572
    2ba4:	00801237 	addeq	r1, r0, r7, lsr r2
    2ba8:	23020000 	movwcs	r0, #8192	; 0x2000
    2bac:	36720704 	ldrbtcc	r0, [r2], -r4, lsl #14
    2bb0:	12380600 	eorsne	r0, r8, #0, 12
    2bb4:	00000080 	andeq	r0, r0, r0, lsl #1
    2bb8:	07082302 	streq	r2, [r8, -r2, lsl #6]
    2bbc:	06003772 			; <UNDEFINED> instruction: 0x06003772
    2bc0:	00801239 	addeq	r1, r0, r9, lsr r2
    2bc4:	23020000 	movwcs	r0, #8192	; 0x2000
    2bc8:	3872070c 	ldmdacc	r2!, {r2, r3, r8, r9, sl}^
    2bcc:	123a0600 	eorsne	r0, sl, #0, 12
    2bd0:	00000080 	andeq	r0, r0, r0, lsl #1
    2bd4:	07102302 	ldreq	r2, [r0, -r2, lsl #6]
    2bd8:	06003972 			; <UNDEFINED> instruction: 0x06003972
    2bdc:	0080123b 	addeq	r1, r0, fp, lsr r2
    2be0:	23020000 	movwcs	r0, #8192	; 0x2000
    2be4:	31720714 	cmncc	r2, r4, lsl r7
    2be8:	3c060030 	stccc	0, cr0, [r6], {48}	; 0x30
    2bec:	00008012 	andeq	r8, r0, r2, lsl r0
    2bf0:	18230200 	stmdane	r3!, {r9}
    2bf4:	31317207 	teqcc	r1, r7, lsl #4
    2bf8:	123d0600 	eorsne	r0, sp, #0, 12
    2bfc:	00000080 	andeq	r0, r0, r0, lsl #1
    2c00:	001c2302 	andseq	r2, ip, r2, lsl #6
    2c04:	0007bd03 	andeq	fp, r7, r3, lsl #26
    2c08:	1c400600 	mcrrne	6, 0, r0, r0, cr0
    2c0c:	000001e2 	andeq	r0, r0, r2, ror #3
    2c10:	00087a06 	andeq	r7, r8, r6, lsl #20
    2c14:	41064000 	mrsmi	r4, (UNDEF: 6)
    2c18:	00020e08 	andeq	r0, r2, r8, lsl #28
    2c1c:	08730800 	ldmdaeq	r3!, {fp}^
    2c20:	42060000 	andmi	r0, r6, #0
    2c24:	00014a1a 	andeq	r4, r1, sl, lsl sl
    2c28:	00230200 	eoreq	r0, r3, r0, lsl #4
    2c2c:	00095908 	andeq	r5, r9, r8, lsl #18
    2c30:	1a430600 	bne	10c4438 <__RAM_SIZE+0xfc4438>
    2c34:	000000be 	strheq	r0, [r0], -lr
    2c38:	00202302 	eoreq	r2, r0, r2, lsl #6
    2c3c:	00093403 	andeq	r3, r9, r3, lsl #8
    2c40:	0f460600 	svceq	0x00460600
    2c44:	0000021f 	andeq	r0, r0, pc, lsl r2
    2c48:	00020e05 	andeq	r0, r2, r5, lsl #28
    2c4c:	25040900 	strcs	r0, [r4, #-2304]	; 0xfffff700
    2c50:	0a000002 	beq	2c60 <__HEAP_SIZE+0x1c60>
    2c54:	00007901 	andeq	r7, r0, r1, lsl #18
    2c58:	00024400 	andeq	r4, r2, r0, lsl #8
    2c5c:	02440b00 	subeq	r0, r4, #0, 22
    2c60:	8c0b0000 	stchi	0, cr0, [fp], {-0}
    2c64:	0b000000 	bleq	2c6c <__HEAP_SIZE+0x1c6c>
    2c68:	00000244 	andeq	r0, r0, r4, asr #4
    2c6c:	0002440b 	andeq	r4, r2, fp, lsl #8
    2c70:	04090000 	streq	r0, [r9], #-0
    2c74:	00000080 	andeq	r0, r0, r0, lsl #1
    2c78:	0009180c 	andeq	r1, r9, ip, lsl #16
    2c7c:	151d0100 	ldrne	r0, [sp, #-256]	; 0xffffff00
    2c80:	00000080 	andeq	r0, r0, r0, lsl #1
    2c84:	600c0101 	andvs	r0, ip, r1, lsl #2
    2c88:	01000009 	tsteq	r0, r9
    2c8c:	0080151e 	addeq	r1, r0, lr, lsl r5
    2c90:	01010000 	mrseq	r0, (UNDEF: 1)
    2c94:	0007fe0c 	andeq	pc, r7, ip, lsl #28
    2c98:	151f0100 	ldrne	r0, [pc, #-256]	; 2ba0 <__HEAP_SIZE+0x1ba0>
    2c9c:	00000080 	andeq	r0, r0, r0, lsl #1
    2ca0:	180c0101 	stmdane	ip, {r0, r8}
    2ca4:	01000008 	tsteq	r0, r8
    2ca8:	00801520 	addeq	r1, r0, r0, lsr #10
    2cac:	01010000 	mrseq	r0, (UNDEF: 1)
    2cb0:	0008270d 	andeq	r2, r8, sp, lsl #14
    2cb4:	20710100 	rsbscs	r0, r1, r0, lsl #2
    2cb8:	0000021a 	andeq	r0, r0, sl, lsl r2
    2cbc:	00040305 	andeq	r0, r4, r5, lsl #6
    2cc0:	9b0d3800 	blls	350cc8 <__RAM_SIZE+0x250cc8>
    2cc4:	01000008 	tsteq	r0, r8
    2cc8:	021a2072 	andseq	r2, sl, #114	; 0x72
    2ccc:	03050000 	movweq	r0, #20480	; 0x5000
    2cd0:	38000008 	stmdacc	r0, {r3}
    2cd4:	0008f00e 	andeq	pc, r8, lr
    2cd8:	17740100 	ldrbne	r0, [r4, -r0, lsl #2]!
    2cdc:	00000087 	andeq	r0, r0, r7, lsl #1
    2ce0:	70030501 	andvc	r0, r3, r1, lsl #10
    2ce4:	0e380085 	cdpeq	0, 3, cr0, cr8, cr5, {4}
    2ce8:	000007cb 	andeq	r0, r0, fp, asr #15
    2cec:	87177501 	ldrhi	r7, [r7, -r1, lsl #10]
    2cf0:	01000000 	mrseq	r0, (UNDEF: 0)
    2cf4:	85740305 	ldrbhi	r0, [r4, #-773]!	; 0xfffffcfb
    2cf8:	010f3800 	tsteq	pc, r0, lsl #16
    2cfc:	00000767 	andeq	r0, r0, r7, ror #14
    2d00:	05012b01 	streq	r2, [r1, #-2817]	; 0xfffff4ff
    2d04:	00007901 	andeq	r7, r0, r1, lsl #18
	...
    2d10:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    2d14:	00031601 	andeq	r1, r3, r1, lsl #12
    2d18:	08341000 	ldmdaeq	r4!, {ip}
    2d1c:	2b010000 	blcs	42d24 <__HEAP_SIZE+0x41d24>
    2d20:	020e3001 	andeq	r3, lr, #1
    2d24:	26b30000 	ldrtcs	r0, [r3], r0
    2d28:	26ab0000 	strtcs	r0, [fp], r0
    2d2c:	20110000 	andscs	r0, r1, r0
    2d30:	01000008 	tsteq	r0, r8
    2d34:	7909012c 	stmdbvc	r9, {r2, r3, r5, r8}
    2d38:	f4000000 	vst4.8	{d0-d3}, [r0], r0
    2d3c:	ee000026 	cdp	0, 0, cr0, cr0, cr6, {1}
    2d40:	00000026 	andeq	r0, r0, r6, lsr #32
    2d44:	07e90112 			; <UNDEFINED> instruction: 0x07e90112
    2d48:	27010000 	strcs	r0, [r1, -r0]
    2d4c:	80010e01 	andhi	r0, r1, r1, lsl #28
	...
    2d58:	02000000 	andeq	r0, r0, #0
    2d5c:	1201007d 	andne	r0, r1, #125	; 0x7d
    2d60:	00091f01 	andeq	r1, r9, r1, lsl #30
    2d64:	01230100 			; <UNDEFINED> instruction: 0x01230100
    2d68:	0080010e 	addeq	r0, r0, lr, lsl #2
	...
    2d74:	7d020000 	stcvc	0, cr0, [r2, #-0]
    2d78:	01120100 	tsteq	r2, r0, lsl #2
    2d7c:	0000000a 	andeq	r0, r0, sl
    2d80:	0e011f01 	cdpeq	15, 0, cr1, cr1, cr1, {0}
    2d84:	00008001 	andeq	r8, r0, r1
    2d88:	001e9400 	andseq	r9, lr, r0, lsl #8
    2d8c:	001e9c10 	andseq	r9, lr, r0, lsl ip
    2d90:	007d0210 	rsbseq	r0, sp, r0, lsl r2
    2d94:	c7010f01 	strgt	r0, [r1, -r1, lsl #30]
    2d98:	01000002 	tsteq	r0, r2
    2d9c:	010e011b 	tsteq	lr, fp, lsl r1
    2da0:	00000080 	andeq	r0, r0, r0, lsl #1
    2da4:	10001e8c 	andne	r1, r0, ip, lsl #29
    2da8:	10001e92 	mulne	r0, r2, lr
    2dac:	01007d02 	tsteq	r0, r2, lsl #26
    2db0:	000003ab 	andeq	r0, r0, fp, lsr #7
    2db4:	0009e613 	andeq	lr, r9, r3, lsl r6
    2db8:	001e8c00 	andseq	r8, lr, r0, lsl #24
    2dbc:	1e8c0210 	mcrne	2, 4, r0, cr12, cr0, {0}
    2dc0:	1e901000 	cdpne	0, 9, cr1, cr0, cr0, {0}
    2dc4:	1c011000 	stcne	0, cr1, [r1], {-0}
    2dc8:	f9140c01 			; <UNDEFINED> instruction: 0xf9140c01
    2dcc:	22000009 	andcs	r0, r0, #9
    2dd0:	20000027 	andcs	r0, r0, r7, lsr #32
    2dd4:	00000027 	andeq	r0, r0, r7, lsr #32
    2dd8:	34011500 	strcc	r1, [r1], #-1280	; 0xfffffb00
    2ddc:	01000002 	tsteq	r0, r2
    2de0:	790105ef 	stmdbvc	r1, {r0, r1, r2, r3, r5, r6, r7, r8, sl}
    2de4:	f4000000 	vst4.8	{d0-d3}, [r0], r0
    2de8:	7010001b 	andsvc	r0, r0, fp, lsl r0
    2dec:	3510001c 	ldrcc	r0, [r0, #-28]	; 0xffffffe4
    2df0:	01000027 	tsteq	r0, r7, lsr #32
    2df4:	00000485 	andeq	r0, r0, r5, lsl #9
    2df8:	0004d816 	andeq	sp, r4, r6, lsl r8
    2dfc:	28ef0100 	stmiacs	pc!, {r8}^	; <UNPREDICTABLE>
    2e00:	00000244 	andeq	r0, r0, r4, asr #4
    2e04:	0000275d 	andeq	r2, r0, sp, asr r7
    2e08:	00002755 	andeq	r2, r0, r5, asr r7
    2e0c:	00052016 	andeq	r2, r5, r6, lsl r0
    2e10:	37ef0100 	strbcc	r0, [pc, r0, lsl #2]!
    2e14:	0000008c 	andeq	r0, r0, ip, lsl #1
    2e18:	0000279c 	muleq	r0, ip, r7
    2e1c:	00002794 	muleq	r0, r4, r7
    2e20:	0002d516 	andeq	sp, r2, r6, lsl r5
    2e24:	4bef0100 	blmi	ffbc322c <__StackTop+0xc7ac322c>
    2e28:	00000244 	andeq	r0, r0, r4, asr #4
    2e2c:	000027d9 	ldrdeq	r2, [r0], -r9
    2e30:	000027d3 	ldrdeq	r2, [r0], -r3
    2e34:	00001816 	andeq	r1, r0, r6, lsl r8
    2e38:	66ef0100 	strbtvs	r0, [pc], r0, lsl #2
    2e3c:	00000244 	andeq	r0, r0, r4, asr #4
    2e40:	0000280d 	andeq	r2, r0, sp, lsl #16
    2e44:	00002805 	andeq	r2, r0, r5, lsl #16
    2e48:	00002417 	andeq	r2, r0, r7, lsl r4
    2e4c:	09f00100 	ldmibeq	r0!, {r8}^
    2e50:	00000079 	andeq	r0, r0, r9, ror r0
    2e54:	0000284a 	andeq	r2, r0, sl, asr #16
    2e58:	00002844 	andeq	r2, r0, r4, asr #16
    2e5c:	00637018 	rsbeq	r7, r3, r8, lsl r0
    2e60:	8012f101 	andshi	pc, r2, r1, lsl #2
    2e64:	7f000000 	svcvc	0x00000000
    2e68:	75000028 	strvc	r0, [r0, #-40]	; 0xffffffd8
    2e6c:	18000028 	stmdane	r0, {r3, r5}
    2e70:	0100706f 	tsteq	r0, pc, rrx
    2e74:	00801af1 	strdeq	r1, [r0], r1	; <UNPREDICTABLE>
    2e78:	28c80000 	stmiacs	r8, {}^	; <UNPREDICTABLE>
    2e7c:	28c20000 	stmiacs	r2, {}^	; <UNPREDICTABLE>
    2e80:	73180000 	tstvc	r8, #0
    2e84:	f1010070 	setend	le
    2e88:	00024423 	andeq	r4, r2, r3, lsr #8
    2e8c:	0028f900 	eoreq	pc, r8, r0, lsl #18
    2e90:	0028f300 	eoreq	pc, r8, r0, lsl #6
    2e94:	1c361900 			; <UNDEFINED> instruction: 0x1c361900
    2e98:	09031000 	stmdbeq	r3, {ip}
    2e9c:	047b0000 	ldrbteq	r0, [fp], #-0
    2ea0:	011a0000 	tsteq	sl, r0
    2ea4:	00790250 	rsbseq	r0, r9, r0, asr r2
    2ea8:	1c3a1b00 			; <UNDEFINED> instruction: 0x1c3a1b00
    2eac:	08a91000 	stmiaeq	r9!, {ip}
    2eb0:	1c000000 	stcne	0, cr0, [r0], {-0}
    2eb4:	0008dd01 	andeq	sp, r8, r1, lsl #26
    2eb8:	06af0100 	strteq	r0, [pc], r0, lsl #2
    2ebc:	001ce001 	andseq	lr, ip, r1
    2ec0:	001e8c10 	andseq	r8, lr, r0, lsl ip
    2ec4:	00292410 	eoreq	r2, r9, r0, lsl r4
    2ec8:	07b00100 	ldreq	r0, [r0, r0, lsl #2]!
    2ecc:	1a160000 	bne	582ed4 <__RAM_SIZE+0x482ed4>
    2ed0:	01000008 	tsteq	r0, r8
    2ed4:	024427af 	subeq	r2, r4, #45875200	; 0x2bc0000
    2ed8:	294e0000 	stmdbcs	lr, {}^	; <UNPREDICTABLE>
    2edc:	29440000 	stmdbcs	r4, {}^	; <UNPREDICTABLE>
    2ee0:	3b160000 	blcc	582ee8 <__RAM_SIZE+0x482ee8>
    2ee4:	01000008 	tsteq	r0, r8
    2ee8:	00803baf 	addeq	r3, r0, pc, lsr #23
    2eec:	29970000 	ldmibcs	r7, {}	; <UNPREDICTABLE>
    2ef0:	29930000 	ldmibcs	r3, {}	; <UNPREDICTABLE>
    2ef4:	24170000 	ldrcs	r0, [r7], #-0
    2ef8:	01000000 	mrseq	r0, (UNDEF: 0)
    2efc:	007909b0 	ldrhteq	r0, [r9], #-144	; 0xffffff70
    2f00:	29c10000 	stmibcs	r1, {}^	; <UNPREDICTABLE>
    2f04:	29b50000 	ldmibcs	r5!, {}	; <UNPREDICTABLE>
    2f08:	4e170000 	cdpmi	0, 1, cr0, cr7, cr0, {0}
    2f0c:	01000007 	tsteq	r0, r7
    2f10:	007914b0 	ldrhteq	r1, [r9], #-64	; 0xffffffc0
    2f14:	2a170000 	bcs	5c2f1c <__RAM_SIZE+0x4c2f1c>
    2f18:	2a0d0000 	bcs	342f20 <__RAM_SIZE+0x242f20>
    2f1c:	db170000 	blle	5c2f24 <__RAM_SIZE+0x4c2f24>
    2f20:	01000002 	tsteq	r0, r2
    2f24:	024413b1 	subeq	r1, r4, #-1006632958	; 0xc4000002
    2f28:	2a840000 	bcs	fe102f30 <__StackTop+0xc6002f30>
    2f2c:	2a5a0000 	bcs	1682f34 <__RAM_SIZE+0x1582f34>
    2f30:	800d0000 	andhi	r0, sp, r0
    2f34:	01000008 	tsteq	r0, r8
    2f38:	01d61ab2 	ldrheq	r1, [r6, #162]	; 0xa2
    2f3c:	03050000 	movweq	r0, #20480	; 0x5000
    2f40:	38008578 	stmdacc	r0, {r3, r4, r5, r6, r8, sl, pc}
    2f44:	0004d80d 	andeq	sp, r4, sp, lsl #16
    2f48:	19b30100 	ldmibne	r3!, {r8}
    2f4c:	000007b0 			; <UNDEFINED> instruction: 0x000007b0
    2f50:	84700305 	ldrbthi	r0, [r0], #-773	; 0xfffffcfb
    2f54:	30193800 	andscc	r3, r9, r0, lsl #16
    2f58:	0710001d 			; <UNDEFINED> instruction: 0x0710001d
    2f5c:	3c00000a 	stccc	0, cr0, [r0], {10}
    2f60:	1a000005 	bne	2f7c <__HEAP_SIZE+0x1f7c>
    2f64:	77025001 	strvc	r5, [r2, -r1]
    2f68:	36190000 	ldrcc	r0, [r9], -r0
    2f6c:	0710001d 			; <UNDEFINED> instruction: 0x0710001d
    2f70:	5300000a 	movwpl	r0, #10
    2f74:	1a000005 	bne	2f90 <__HEAP_SIZE+0x1f90>
    2f78:	03055001 	movweq	r5, #20481	; 0x5001
    2f7c:	10005a18 	andne	r5, r0, r8, lsl sl
    2f80:	1d3c1900 			; <UNDEFINED> instruction: 0x1d3c1900
    2f84:	0a071000 	beq	1c6f8c <__RAM_SIZE+0xc6f8c>
    2f88:	056a0000 	strbeq	r0, [sl, #-0]!
    2f8c:	011a0000 	tsteq	sl, r0
    2f90:	38030550 	stmdacc	r3, {r4, r6, r8, sl}
    2f94:	0010005a 	andseq	r0, r0, sl, asr r0
    2f98:	001d4419 	andseq	r4, sp, r9, lsl r4
    2f9c:	000a1410 	andeq	r1, sl, r0, lsl r4
    2fa0:	00058100 	andeq	r8, r5, r0, lsl #2
    2fa4:	50011a00 	andpl	r1, r1, r0, lsl #20
    2fa8:	5a4c0305 	bpl	1303bc4 <__RAM_SIZE+0x1203bc4>
    2fac:	19001000 	stmdbne	r0, {ip}
    2fb0:	10001d4c 	andne	r1, r0, ip, asr #26
    2fb4:	00000a14 	andeq	r0, r0, r4, lsl sl
    2fb8:	00000598 	muleq	r0, r8, r5
    2fbc:	0550011a 	ldrbeq	r0, [r0, #-282]	; 0xfffffee6
    2fc0:	005a6003 	subseq	r6, sl, r3
    2fc4:	54190010 	ldrpl	r0, [r9], #-16
    2fc8:	1410001d 	ldrne	r0, [r0], #-29	; 0xffffffe3
    2fcc:	af00000a 	svcge	0x0000000a
    2fd0:	1a000005 	bne	2fec <__HEAP_SIZE+0x1fec>
    2fd4:	03055001 	movweq	r5, #20481	; 0x5001
    2fd8:	10005a74 	andne	r5, r0, r4, ror sl
    2fdc:	1d5c1900 	vldrne.16	s3, [ip, #-0]	; <UNPREDICTABLE>
    2fe0:	0a141000 	beq	506fe8 <__RAM_SIZE+0x406fe8>
    2fe4:	05c60000 	strbeq	r0, [r6]
    2fe8:	011a0000 	tsteq	sl, r0
    2fec:	88030550 	stmdahi	r3, {r4, r6, r8, sl}
    2ff0:	0010005a 	andseq	r0, r0, sl, asr r0
    2ff4:	001d6419 	andseq	r6, sp, r9, lsl r4
    2ff8:	000a1410 	andeq	r1, sl, r0, lsl r4
    2ffc:	0005dd00 	andeq	sp, r5, r0, lsl #26
    3000:	50011a00 	andpl	r1, r1, r0, lsl #20
    3004:	5a9c0305 	bpl	fe703c20 <__StackTop+0xc6603c20>
    3008:	19001000 	stmdbne	r0, {ip}
    300c:	10001d6c 	andne	r1, r0, ip, ror #26
    3010:	00000a14 	andeq	r0, r0, r4, lsl sl
    3014:	000005f4 	strdeq	r0, [r0], -r4
    3018:	0550011a 	ldrbeq	r0, [r0, #-282]	; 0xfffffee6
    301c:	005ab003 	subseq	fp, sl, r3
    3020:	74190010 	ldrvc	r0, [r9], #-16
    3024:	1410001d 	ldrne	r0, [r0], #-29	; 0xffffffe3
    3028:	0b00000a 	bleq	3058 <__HEAP_SIZE+0x2058>
    302c:	1a000006 	bne	304c <__HEAP_SIZE+0x204c>
    3030:	03055001 	movweq	r5, #20481	; 0x5001
    3034:	10005ac4 	andne	r5, r0, r4, asr #21
    3038:	1d7c1900 			; <UNDEFINED> instruction: 0x1d7c1900
    303c:	0a141000 	beq	507044 <__RAM_SIZE+0x407044>
    3040:	06220000 	strteq	r0, [r2], -r0
    3044:	011a0000 	tsteq	sl, r0
    3048:	d8030550 	stmdale	r3, {r4, r6, r8, sl}
    304c:	0010005a 	andseq	r0, r0, sl, asr r0
    3050:	001d8419 	andseq	r8, sp, r9, lsl r4
    3054:	000a1410 	andeq	r1, sl, r0, lsl r4
    3058:	00063900 	andeq	r3, r6, r0, lsl #18
    305c:	50011a00 	andpl	r1, r1, r0, lsl #20
    3060:	5aec0305 	bpl	ffb03c7c <__StackTop+0xc7a03c7c>
    3064:	19001000 	stmdbne	r0, {ip}
    3068:	10001d8c 	andne	r1, r0, ip, lsl #27
    306c:	00000a14 	andeq	r0, r0, r4, lsl sl
    3070:	00000650 	andeq	r0, r0, r0, asr r6
    3074:	0550011a 	ldrbeq	r0, [r0, #-282]	; 0xfffffee6
    3078:	005b0003 	subseq	r0, fp, r3
    307c:	94190010 	ldrls	r0, [r9], #-16
    3080:	1410001d 	ldrne	r0, [r0], #-29	; 0xffffffe3
    3084:	6700000a 	strvs	r0, [r0, -sl]
    3088:	1a000006 	bne	30a8 <__HEAP_SIZE+0x20a8>
    308c:	03055001 	movweq	r5, #20481	; 0x5001
    3090:	10005b14 	andne	r5, r0, r4, lsl fp
    3094:	1d9c1900 	vldrne.16	s2, [ip]	; <UNPREDICTABLE>
    3098:	0a141000 	beq	5070a0 <__RAM_SIZE+0x4070a0>
    309c:	067e0000 	ldrbteq	r0, [lr], -r0
    30a0:	011a0000 	tsteq	sl, r0
    30a4:	28030550 	stmdacs	r3, {r4, r6, r8, sl}
    30a8:	0010005b 	andseq	r0, r0, fp, asr r0
    30ac:	001da419 	andseq	sl, sp, r9, lsl r4
    30b0:	000a1410 	andeq	r1, sl, r0, lsl r4
    30b4:	00069500 	andeq	r9, r6, r0, lsl #10
    30b8:	50011a00 	andpl	r1, r1, r0, lsl #20
    30bc:	5b3c0305 	blpl	f03cd8 <__RAM_SIZE+0xe03cd8>
    30c0:	19001000 	stmdbne	r0, {ip}
    30c4:	10001dac 	andne	r1, r0, ip, lsr #27
    30c8:	00000a14 	andeq	r0, r0, r4, lsl sl
    30cc:	000006ac 	andeq	r0, r0, ip, lsr #13
    30d0:	0550011a 	ldrbeq	r0, [r0, #-282]	; 0xfffffee6
    30d4:	005b5003 	subseq	r5, fp, r3
    30d8:	b4190010 	ldrlt	r0, [r9], #-16
    30dc:	1410001d 	ldrne	r0, [r0], #-29	; 0xffffffe3
    30e0:	c300000a 	movwgt	r0, #10
    30e4:	1a000006 	bne	3104 <__HEAP_SIZE+0x2104>
    30e8:	03055001 	movweq	r5, #20481	; 0x5001
    30ec:	10005b64 	andne	r5, r0, r4, ror #22
    30f0:	1dbc1900 			; <UNDEFINED> instruction: 0x1dbc1900
    30f4:	0a141000 	beq	5070fc <__RAM_SIZE+0x4070fc>
    30f8:	06da0000 	ldrbeq	r0, [sl], r0
    30fc:	011a0000 	tsteq	sl, r0
    3100:	78030550 	stmdavc	r3, {r4, r6, r8, sl}
    3104:	0010005b 	andseq	r0, r0, fp, asr r0
    3108:	001dc219 	andseq	ip, sp, r9, lsl r2
    310c:	000a0710 	andeq	r0, sl, r0, lsl r7
    3110:	0006ee00 	andeq	lr, r6, r0, lsl #28
    3114:	50011a00 	andpl	r1, r1, r0, lsl #20
    3118:	00007702 	andeq	r7, r0, r2, lsl #14
    311c:	001dc819 	andseq	ip, sp, r9, lsl r8
    3120:	00083810 	andeq	r3, r8, r0, lsl r8
    3124:	00070200 	andeq	r0, r7, r0, lsl #4
    3128:	50011a00 	andpl	r1, r1, r0, lsl #20
    312c:	00007602 	andeq	r7, r0, r2, lsl #12
    3130:	001dce19 	andseq	ip, sp, r9, lsl lr
    3134:	0007c010 	andeq	ip, r7, r0, lsl r0
    3138:	00071600 	andeq	r1, r7, r0, lsl #12
    313c:	50011a00 	andpl	r1, r1, r0, lsl #20
    3140:	00007602 	andeq	r7, r0, r2, lsl #12
    3144:	001de01d 	andseq	lr, sp, sp, lsl r0
    3148:	00073610 	andeq	r3, r7, r0, lsl r6
    314c:	50011a00 	andpl	r1, r1, r0, lsl #20
    3150:	84700305 	ldrbthi	r0, [r0], #-773	; 0xfffffcfb
    3154:	011a3800 	tsteq	sl, r0, lsl #16
    3158:	40080251 	andmi	r0, r8, r1, asr r2
    315c:	0352011a 	cmpeq	r2, #-2147483642	; 0x80000006
    3160:	0000c075 	andeq	ip, r0, r5, ror r0
    3164:	001de819 	andseq	lr, sp, r9, lsl r8
    3168:	000a1410 	andeq	r1, sl, r0, lsl r4
    316c:	00074d00 	andeq	r4, r7, r0, lsl #26
    3170:	50011a00 	andpl	r1, r1, r0, lsl #20
    3174:	5b8c0305 	blpl	fe303d90 <__StackTop+0xc6203d90>
    3178:	19001000 	stmdbne	r0, {ip}
    317c:	10001df2 	strdne	r1, [r0], -r2
    3180:	00000a14 	andeq	r0, r0, r4, lsl sl
    3184:	00000764 	andeq	r0, r0, r4, ror #14
    3188:	0550011a 	ldrbeq	r0, [r0, #-282]	; 0xfffffee6
    318c:	0058a803 	subseq	sl, r8, r3, lsl #16
    3190:	041d0010 	ldreq	r0, [sp], #-16
    3194:	8810001e 	ldmdahi	r0, {r1, r2, r3, r4}
    3198:	1a000007 	bne	31bc <__HEAP_SIZE+0x21bc>
    319c:	03055001 	movweq	r5, #20481	; 0x5001
    31a0:	38008470 	stmdacc	r0, {r4, r5, r6, sl, pc}
    31a4:	0251011a 	subseq	r0, r1, #-2147483642	; 0x80000006
    31a8:	011a4008 	tsteq	sl, r8
    31ac:	00750252 	rsbseq	r0, r5, r2, asr r2
    31b0:	0153011a 	cmpeq	r3, sl, lsl r1
    31b4:	14190030 	ldrne	r0, [r9], #-48	; 0xffffffd0
    31b8:	1410001e 	ldrne	r0, [r0], #-30	; 0xffffffe2
    31bc:	9f00000a 	svcls	0x0000000a
    31c0:	1a000007 	bne	31e4 <__HEAP_SIZE+0x21e4>
    31c4:	03055001 	movweq	r5, #20481	; 0x5001
    31c8:	100058a8 	andne	r5, r0, r8, lsr #17
    31cc:	1e201e00 	cdpne	14, 2, cr1, cr0, cr0, {0}
    31d0:	0a071000 	beq	1c71d8 <__RAM_SIZE+0xc71d8>
    31d4:	011a0000 	tsteq	sl, r0
    31d8:	00770250 	rsbseq	r0, r7, r0, asr r2
    31dc:	801f0000 	andshi	r0, pc, r0
    31e0:	c0000000 	andgt	r0, r0, r0
    31e4:	20000007 	andcs	r0, r0, r7
    31e8:	00000080 	andeq	r0, r0, r0, lsl #1
    31ec:	8321003f 			; <UNDEFINED> instruction: 0x8321003f
    31f0:	01000007 	tsteq	r0, r7
    31f4:	31010da4 	smlatbcc	r1, r4, sp, r0
    31f8:	88000008 	stmdahi	r0, {r3}
    31fc:	9010001c 	andsls	r0, r0, ip, lsl r0
    3200:	a410001c 	ldrge	r0, [r0], #-28	; 0xffffffe4
    3204:	0100002b 	tsteq	r0, fp, lsr #32
    3208:	00000831 	andeq	r0, r0, r1, lsr r8
    320c:	00079e16 	andeq	r9, r7, r6, lsl lr
    3210:	2aa40100 	bcs	fe903618 <__StackTop+0xc6803618>
    3214:	00000080 	andeq	r0, r0, r0, lsl #1
    3218:	00002bc8 	andeq	r2, r0, r8, asr #23
    321c:	00002bc4 	andeq	r2, r0, r4, asr #23
    3220:	00082017 	andeq	r2, r8, r7, lsl r0
    3224:	0aa50100 	beq	fe94362c <__StackTop+0xc684362c>
    3228:	00000831 	andeq	r0, r0, r1, lsr r8
    322c:	00002bed 	andeq	r2, r0, sp, ror #23
    3230:	00002be9 	andeq	r2, r0, r9, ror #23
    3234:	09030122 	stmdbeq	r3, {r1, r5, r8}
    3238:	a7010000 	strge	r0, [r1, -r0]
    323c:	08310111 	ldmdaeq	r1!, {r0, r4, r8}
    3240:	1f010000 	svcne	0x00010000
    3244:	0b000008 	bleq	326c <__HEAP_SIZE+0x226c>
    3248:	00000080 	andeq	r0, r0, r0, lsl #1
    324c:	1c8e1e00 	stcne	14, cr1, [lr], {0}
    3250:	0a221000 	beq	887258 <__RAM_SIZE+0x787258>
    3254:	011a0000 	tsteq	sl, r0
    3258:	01f30350 	mvnseq	r0, r0, asr r3
    325c:	02000050 	andeq	r0, r0, #80	; 0x50
    3260:	06460201 	strbeq	r0, [r6], -r1, lsl #4
    3264:	99230000 	stmdbls	r3!, {}	; <UNPREDICTABLE>
    3268:	01000007 	tsteq	r0, r7
    326c:	70010d9c 	mulvc	r1, ip, sp
    3270:	8810001c 	ldmdahi	r0, {r2, r3, r4}
    3274:	0c10001c 	ldceq	0, cr0, [r0], {28}
    3278:	0100002c 	tsteq	r0, ip, lsr #32
    327c:	000008a9 	andeq	r0, r0, r9, lsr #17
    3280:	00079e16 	andeq	r9, r7, r6, lsl lr
    3284:	2a9c0100 	bcs	fe70368c <__StackTop+0xc660368c>
    3288:	00000080 	andeq	r0, r0, r0, lsl #1
    328c:	00002c34 	andeq	r2, r0, r4, lsr ip
    3290:	00002c2c 	andeq	r2, r0, ip, lsr #24
    3294:	07930124 	ldreq	r0, [r3, r4, lsr #2]
    3298:	9f010000 	svcls	0x00010000
    329c:	7b010111 	blvc	436e8 <__HEAP_SIZE+0x426e8>
    32a0:	0b000008 	bleq	32c8 <__HEAP_SIZE+0x22c8>
    32a4:	00000080 	andeq	r0, r0, r0, lsl #1
    32a8:	1c7c1900 			; <UNDEFINED> instruction: 0x1c7c1900
    32ac:	0a141000 	beq	5072b4 <__RAM_SIZE+0x4072b4>
    32b0:	08980000 	ldmeq	r8, {}	; <UNPREDICTABLE>
    32b4:	011a0000 	tsteq	sl, r0
    32b8:	98030550 	stmdals	r3, {r4, r6, r8, sl}
    32bc:	1a100059 	bne	403428 <__RAM_SIZE+0x303428>
    32c0:	74025101 	strvc	r5, [r2], #-257	; 0xfffffeff
    32c4:	821e0000 	andshi	r0, lr, #0
    32c8:	3010001c 	andscc	r0, r0, ip, lsl r0
    32cc:	1a00000a 	bne	32fc <__HEAP_SIZE+0x22fc>
    32d0:	74025001 	strvc	r5, [r2], #-1
    32d4:	25000000 	strcs	r0, [r0, #-0]
    32d8:	000007a9 	andeq	r0, r0, r9, lsr #15
    32dc:	010d8d01 	tsteq	sp, r1, lsl #26
    32e0:	00000831 	andeq	r0, r0, r1, lsr r8
    32e4:	10001bbc 			; <UNDEFINED> instruction: 0x10001bbc
    32e8:	10001bf2 	strdne	r1, [r0], -r2
    32ec:	01007d02 	tsteq	r0, r2, lsl #26
    32f0:	00000903 	andeq	r0, r0, r3, lsl #18
    32f4:	736e6926 	cmnvc	lr, #622592	; 0x98000
    32f8:	2e8d0100 	rmfcse	f0, f5, f0
    32fc:	00000080 	andeq	r0, r0, r0, lsl #1
    3300:	00002c6f 	andeq	r2, r0, pc, ror #24
    3304:	00002c6b 	andeq	r2, r0, fp, ror #24
    3308:	00085717 	andeq	r5, r8, r7, lsl r7
    330c:	0e910100 	fmleqs	f0, f1, f0
    3310:	000000a6 	andeq	r0, r0, r6, lsr #1
    3314:	00002c92 	muleq	r0, r2, ip
    3318:	00002c90 	muleq	r0, r0, ip
    331c:	00085f17 	andeq	r5, r8, r7, lsl pc
    3320:	0e920100 	fmleqs	f0, f2, f0
    3324:	000000a6 	andeq	r0, r0, r6, lsr #1
    3328:	00002cb9 			; <UNDEFINED> instruction: 0x00002cb9
    332c:	00002ca5 	andeq	r2, r0, r5, lsr #25
    3330:	08062100 	stmdaeq	r6, {r8, sp}
    3334:	82010000 	andhi	r0, r1, #0
    3338:	00800115 	addeq	r0, r0, r5, lsl r1
    333c:	1b900000 	blne	fe403344 <__StackTop+0xc6303344>
    3340:	1bbc1000 	blne	fef07348 <__StackTop+0xc6e07348>
    3344:	2d5c1000 	ldclcs	0, cr1, [ip, #-0]
    3348:	74010000 	strvc	r0, [r1], #-0
    334c:	26000009 	strcs	r0, [r0], -r9
    3350:	01006370 	tsteq	r0, r0, ror r3
    3354:	00803482 	addeq	r3, r0, r2, lsl #9
    3358:	2d8c0000 	stccs	0, cr0, [ip]
    335c:	2d880000 	stccs	0, cr0, [r8]
    3360:	3d0d0000 	stccc	0, cr0, [sp, #-0]
    3364:	01000005 	tsteq	r0, r5
    3368:	09740e83 	ldmdbeq	r4!, {r0, r1, r7, r9, sl, fp}^
    336c:	91020000 	mrsls	r0, (UNDEF: 2)
    3370:	0811177c 	ldmdaeq	r1, {r2, r3, r4, r5, r6, r8, r9, sl, ip}
    3374:	84010000 	strhi	r0, [r1], #-0
    3378:	00008012 	andeq	r8, r0, r2, lsl r0
    337c:	002db300 	eoreq	fp, sp, r0, lsl #6
    3380:	002dad00 	eoreq	sl, sp, r0, lsl #26
    3384:	1b962700 	blne	fe58cf8c <__StackTop+0xc648cf8c>
    3388:	1bac1000 	blne	feb07390 <__StackTop+0xc6a07390>
    338c:	69181000 	ldmdbvs	r8, {ip}
    3390:	0e850100 	rmfeqs	f0, f5, f0
    3394:	00000079 	andeq	r0, r0, r9, ror r0
    3398:	00002de8 	andeq	r2, r0, r8, ror #27
    339c:	00002de4 	andeq	r2, r0, r4, ror #27
    33a0:	a61f0000 	ldrge	r0, [pc], -r0
    33a4:	84000000 	strhi	r0, [r0], #-0
    33a8:	20000009 	andcs	r0, r0, r9
    33ac:	00000080 	andeq	r0, r0, r0, lsl #1
    33b0:	011c0001 	tsteq	ip, r1
    33b4:	00000286 	andeq	r0, r0, r6, lsl #5
    33b8:	01067701 	tsteq	r6, r1, lsl #14
    33bc:	10001c90 	mulne	r0, r0, ip
    33c0:	10001ce0 	andne	r1, r0, r0, ror #25
    33c4:	00002e07 	andeq	r2, r0, r7, lsl #28
    33c8:	0009e601 	andeq	lr, r9, r1, lsl #12
    33cc:	1ca61900 			; <UNDEFINED> instruction: 0x1ca61900
    33d0:	0a141000 	beq	5073d8 <__RAM_SIZE+0x4073d8>
    33d4:	09b60000 	ldmibeq	r6!, {}	; <UNPREDICTABLE>
    33d8:	011a0000 	tsteq	sl, r0
    33dc:	b0030550 	andlt	r0, r3, r0, asr r5
    33e0:	00100059 	andseq	r0, r0, r9, asr r0
    33e4:	001cb219 	andseq	fp, ip, r9, lsl r2
    33e8:	000a1410 	andeq	r1, sl, r0, lsl r4
    33ec:	0009cd00 	andeq	ip, r9, r0, lsl #26
    33f0:	50011a00 	andpl	r1, r1, r0, lsl #20
    33f4:	59d40305 	ldmibpl	r4, {r0, r2, r8, r9}^
    33f8:	1e001000 	cdpne	0, 0, cr1, cr0, cr0, {0}
    33fc:	10001cba 			; <UNDEFINED> instruction: 0x10001cba
    3400:	00000a14 	andeq	r0, r0, r4, lsl sl
    3404:	0550011a 	ldrbeq	r0, [r0, #-282]	; 0xfffffee6
    3408:	0059f803 	subseq	pc, r9, r3, lsl #16
    340c:	51011a10 	tstpl	r1, r0, lsl sl
    3410:	00003101 	andeq	r3, r0, r1, lsl #2
    3414:	00094328 	andeq	r4, r9, r8, lsr #6
    3418:	04630200 	strbteq	r0, [r3], #-512	; 0xfffffe00
    341c:	00b2011f 	adcseq	r0, r2, pc, lsl r1
    3420:	07030000 	streq	r0, [r3, -r0]
    3424:	2900000a 	stmdbcs	r0, {r1, r3}
    3428:	00000820 	andeq	r0, r0, r0, lsr #16
    342c:	0c046502 	cfstr32eq	mvfx6, [r4], {2}
    3430:	000000b2 	strheq	r0, [r0], -r2
    3434:	01012a00 	tsteq	r1, r0, lsl #20
    3438:	00000088 	andeq	r0, r0, r8, lsl #1
    343c:	0000007e 	andeq	r0, r0, lr, ror r0
    3440:	012b0008 			; <UNDEFINED> instruction: 0x012b0008
    3444:	0005ba01 	andeq	fp, r5, r1, lsl #20
    3448:	0005ba00 	andeq	fp, r5, r0, lsl #20
    344c:	05c80700 	strbeq	r0, [r8, #1792]	; 0x700
    3450:	0301012b 	movweq	r0, #4395	; 0x112b
    3454:	03000009 	movweq	r0, #9
    3458:	01000009 	tsteq	r0, r9
    345c:	012b11a7 			; <UNDEFINED> instruction: 0x012b11a7
    3460:	00079301 	andeq	r9, r7, r1, lsl #6
    3464:	00079300 	andeq	r9, r7, r0, lsl #6
    3468:	119f0100 	orrsne	r0, pc, r0, lsl #2
    346c:	0007a200 	andeq	sl, r7, r0, lsl #4
    3470:	ce000200 	cdpgt	2, 0, cr0, cr0, cr0, {0}
    3474:	0400000a 	streq	r0, [r0], #-10
    3478:	0000bf01 	andeq	fp, r0, r1, lsl #30
    347c:	096c0c00 	stmdbeq	ip!, {sl, fp}^
    3480:	01a80000 			; <UNDEFINED> instruction: 0x01a80000
    3484:	02880000 	addeq	r0, r8, #0
	...
    3490:	21a00000 	movcs	r0, r0
    3494:	01020000 	mrseq	r0, (UNDEF: 2)
    3498:	00008f06 	andeq	r8, r0, r6, lsl #30
    349c:	00000300 	andeq	r0, r0, r0, lsl #6
    34a0:	2b020000 	blcs	834a8 <__HEAP_SIZE+0x824a8>
    34a4:	00003c18 	andeq	r3, r0, r8, lsl ip
    34a8:	08010200 	stmdaeq	r1, {r9}
    34ac:	0000008d 	andeq	r0, r0, sp, lsl #1
    34b0:	a5050202 	strge	r0, [r5, #-514]	; 0xfffffdfe
    34b4:	02000002 	andeq	r0, r0, #2
    34b8:	00ac0702 	adceq	r0, ip, r2, lsl #14
    34bc:	04020000 	streq	r0, [r2], #-0
    34c0:	00025a05 	andeq	r5, r2, r5, lsl #20
    34c4:	037d0300 	cmneq	sp, #0, 6
    34c8:	4f020000 	svcmi	0x00020000
    34cc:	00006419 	andeq	r6, r0, r9, lsl r4
    34d0:	07040200 	streq	r0, [r4, -r0, lsl #4]
    34d4:	00000218 	andeq	r0, r0, r8, lsl r2
    34d8:	55050802 	strpl	r0, [r5, #-2050]	; 0xfffff7fe
    34dc:	02000002 	andeq	r0, r0, #2
    34e0:	02130708 	andseq	r0, r3, #8, 14	; 0x200000
    34e4:	04040000 	streq	r0, [r4], #-0
    34e8:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    34ec:	00790500 	rsbseq	r0, r9, r0, lsl #10
    34f0:	04020000 	streq	r0, [r2], #-0
    34f4:	00021d07 	andeq	r1, r2, r7, lsl #26
    34f8:	04080200 	streq	r0, [r8], #-512	; 0xfffffe00
    34fc:	00000249 	andeq	r0, r0, r9, asr #4
    3500:	96080102 	strls	r0, [r8], -r2, lsl #2
    3504:	03000000 	movweq	r0, #0
    3508:	00000002 	andeq	r0, r0, r2
    350c:	30131803 	andscc	r1, r3, r3, lsl #16
    3510:	05000000 	streq	r0, [r0, #-0]
    3514:	0000009a 	muleq	r0, sl, r0
    3518:	00037f03 	andeq	r7, r3, r3, lsl #30
    351c:	14300300 	ldrtne	r0, [r0], #-768	; 0xfffffd00
    3520:	00000058 	andeq	r0, r0, r8, asr r0
    3524:	0000ab05 	andeq	sl, r0, r5, lsl #22
    3528:	00b70600 	adcseq	r0, r7, r0, lsl #12
    352c:	7c070000 	stcvc	0, cr0, [r7], {-0}
    3530:	01f80402 	mvnseq	r0, r2, lsl #8
    3534:	0003c609 	andeq	ip, r3, r9, lsl #12
    3538:	03370800 	teqeq	r7, #0, 16
    353c:	fa040000 	blx	103544 <__RAM_SIZE+0x3544>
    3540:	00bc1201 	adcseq	r1, ip, r1, lsl #4
    3544:	23020000 	movwcs	r0, #8192	; 0x2000
    3548:	03d30800 	bicseq	r0, r3, #0, 16
    354c:	fb040000 	blx	103556 <__RAM_SIZE+0x3556>
    3550:	00b71201 	adcseq	r1, r7, r1, lsl #4
    3554:	23020000 	movwcs	r0, #8192	; 0x2000
    3558:	03c90804 	biceq	r0, r9, #4, 16	; 0x40000
    355c:	fc040000 	stc2	0, cr0, [r4], {-0}
    3560:	00b71201 	adcseq	r1, r7, r1, lsl #4
    3564:	23020000 	movwcs	r0, #8192	; 0x2000
    3568:	03d80808 	bicseq	r0, r8, #8, 16	; 0x80000
    356c:	fd040000 	stc2	0, cr0, [r4, #-0]
    3570:	00b71201 	adcseq	r1, r7, r1, lsl #4
    3574:	23020000 	movwcs	r0, #8192	; 0x2000
    3578:	4353090c 	cmpmi	r3, #12, 18	; 0x30000
    357c:	fe040052 	mcr2	0, 0, r0, cr4, cr2, {2}
    3580:	00b71201 	adcseq	r1, r7, r1, lsl #4
    3584:	23020000 	movwcs	r0, #8192	; 0x2000
    3588:	43430910 	movtmi	r0, #14608	; 0x3910
    358c:	ff040052 			; <UNDEFINED> instruction: 0xff040052
    3590:	00b71201 	adcseq	r1, r7, r1, lsl #4
    3594:	23020000 	movwcs	r0, #8192	; 0x2000
    3598:	04770814 	ldrbteq	r0, [r7], #-2068	; 0xfffff7ec
    359c:	00040000 	andeq	r0, r4, r0
    35a0:	03d61202 	bicseq	r1, r6, #536870912	; 0x20000000
    35a4:	23020000 	movwcs	r0, #8192	; 0x2000
    35a8:	044a0818 	strbeq	r0, [sl], #-2072	; 0xfffff7e8
    35ac:	01040000 	mrseq	r0, (UNDEF: 4)
    35b0:	00b71202 	adcseq	r1, r7, r2, lsl #4
    35b4:	23020000 	movwcs	r0, #8192	; 0x2000
    35b8:	03f00824 	mvnseq	r0, #36, 16	; 0x240000
    35bc:	02040000 	andeq	r0, r4, #0
    35c0:	00b71202 	adcseq	r1, r7, r2, lsl #4
    35c4:	23020000 	movwcs	r0, #8192	; 0x2000
    35c8:	04a30828 	strteq	r0, [r3], #2088	; 0x828
    35cc:	03040000 	movweq	r0, #16384	; 0x4000
    35d0:	00b71202 	adcseq	r1, r7, r2, lsl #4
    35d4:	23020000 	movwcs	r0, #8192	; 0x2000
    35d8:	03de082c 	bicseq	r0, lr, #44, 16	; 0x2c0000
    35dc:	04040000 	streq	r0, [r4], #-0
    35e0:	00b71202 	adcseq	r1, r7, r2, lsl #4
    35e4:	23020000 	movwcs	r0, #8192	; 0x2000
    35e8:	03e30830 	mvneq	r0, #48, 16	; 0x300000
    35ec:	05040000 	streq	r0, [r4, #-0]
    35f0:	00b71202 	adcseq	r1, r7, r2, lsl #4
    35f4:	23020000 	movwcs	r0, #8192	; 0x2000
    35f8:	03780834 	cmneq	r8, #52, 16	; 0x340000
    35fc:	06040000 	streq	r0, [r4], -r0
    3600:	00b71202 	adcseq	r1, r7, r2, lsl #4
    3604:	23020000 	movwcs	r0, #8192	; 0x2000
    3608:	04670838 	strbteq	r0, [r7], #-2104	; 0xfffff7c8
    360c:	07040000 	streq	r0, [r4, -r0]
    3610:	00b71202 	adcseq	r1, r7, r2, lsl #4
    3614:	23020000 	movwcs	r0, #8192	; 0x2000
    3618:	0344083c 	movteq	r0, #18492	; 0x483c
    361c:	08040000 	stmdaeq	r4, {}	; <UNPREDICTABLE>
    3620:	03f01202 	mvnseq	r1, #536870912	; 0x20000000
    3624:	23020000 	movwcs	r0, #8192	; 0x2000
    3628:	03910840 	orrseq	r0, r1, #64, 16	; 0x400000
    362c:	09040000 	stmdbeq	r4, {}	; <UNPREDICTABLE>
    3630:	00bc1202 	adcseq	r1, ip, r2, lsl #4
    3634:	23020000 	movwcs	r0, #8192	; 0x2000
    3638:	048e0848 	streq	r0, [lr], #2120	; 0x848
    363c:	0a040000 	beq	103644 <__RAM_SIZE+0x3644>
    3640:	00bc1202 	adcseq	r1, ip, r2, lsl #4
    3644:	23020000 	movwcs	r0, #8192	; 0x2000
    3648:	0368084c 	cmneq	r8, #76, 16	; 0x4c0000
    364c:	0b040000 	bleq	103654 <__RAM_SIZE+0x3654>
    3650:	040a1202 	streq	r1, [sl], #-514	; 0xfffffdfe
    3654:	23020000 	movwcs	r0, #8192	; 0x2000
    3658:	04950850 	ldreq	r0, [r5], #2128	; 0x850
    365c:	0c040000 	stceq	0, cr0, [r4], {-0}
    3660:	04241202 	strteq	r1, [r4], #-514	; 0xfffffdfe
    3664:	23020000 	movwcs	r0, #8192	; 0x2000
    3668:	03310860 	teqeq	r1, #96, 16	; 0x600000
    366c:	0d040000 	stceq	0, cr0, [r4, #-0]
    3670:	00bc1202 	adcseq	r1, ip, r2, lsl #4
    3674:	23020000 	movwcs	r0, #8192	; 0x2000
    3678:	54430978 	strbpl	r0, [r3], #-2424	; 0xfffff688
    367c:	0e040052 	mcreq	0, 0, r0, cr4, cr2, {2}
    3680:	00bc1202 	adcseq	r1, ip, r2, lsl #4
    3684:	23020000 	movwcs	r0, #8192	; 0x2000
    3688:	03e9087c 	mvneq	r0, #124, 16	; 0x7c0000
    368c:	0f040000 	svceq	0x00040000
    3690:	00bc1202 	adcseq	r1, ip, r2, lsl #4
    3694:	23030000 	movwcs	r0, #12288	; 0x3000
    3698:	a0080180 	andge	r0, r8, r0, lsl #3
    369c:	04000003 	streq	r0, [r0], #-3
    36a0:	b7120210 			; <UNDEFINED> instruction: 0xb7120210
    36a4:	03000000 	movweq	r0, #0
    36a8:	08018423 	stmdaeq	r1, {r0, r1, r5, sl, pc}
    36ac:	0000049d 	muleq	r0, sp, r4
    36b0:	12021104 	andne	r1, r2, #4, 2
    36b4:	000000b7 	strheq	r0, [r0], -r7
    36b8:	01882303 	orreq	r2, r8, r3, lsl #6
    36bc:	0003f508 	andeq	pc, r3, r8, lsl #10
    36c0:	02120400 	andseq	r0, r2, #0, 8
    36c4:	0000b712 	andeq	fp, r0, r2, lsl r7
    36c8:	8c230300 	stchi	3, cr0, [r3], #-0
    36cc:	04350801 	ldrteq	r0, [r5], #-2049	; 0xfffff7ff
    36d0:	13040000 	movwne	r0, #16384	; 0x4000
    36d4:	04291202 	strteq	r1, [r9], #-514	; 0xfffffdfe
    36d8:	23030000 	movwcs	r0, #12288	; 0x3000
    36dc:	6c080190 	stfvss	f0, [r8], {144}	; 0x90
    36e0:	04000004 	streq	r0, [r0], #-4
    36e4:	b7120214 			; <UNDEFINED> instruction: 0xb7120214
    36e8:	03000000 	movweq	r0, #0
    36ec:	0801e423 	stmdaeq	r1, {r0, r1, r5, sl, sp, lr, pc}
    36f0:	000003ce 	andeq	r0, r0, lr, asr #7
    36f4:	12021504 	andne	r1, r2, #4, 10	; 0x1000000
    36f8:	000000b7 	strheq	r0, [r0], -r7
    36fc:	01e82303 	mvneq	r2, r3, lsl #6
    3700:	00040d08 	andeq	r0, r4, r8, lsl #26
    3704:	02160400 	andseq	r0, r6, #0, 8
    3708:	00043912 	andeq	r3, r4, r2, lsl r9
    370c:	ec230300 	stc	3, cr0, [r3], #-0
    3710:	03240801 			; <UNDEFINED> instruction: 0x03240801
    3714:	17040000 	strne	r0, [r4, -r0]
    3718:	00b71202 	adcseq	r1, r7, r2, lsl #4
    371c:	23030000 	movwcs	r0, #12288	; 0x3000
    3720:	17080480 	strne	r0, [r8, -r0, lsl #9]
    3724:	04000004 	streq	r0, [r0], #-4
    3728:	49120218 	ldmdbmi	r2, {r3, r4, r9}
    372c:	03000004 	movweq	r0, #4
    3730:	08048423 	stmdaeq	r4, {r0, r1, r5, sl, pc}
    3734:	000003fb 	strdeq	r0, [r0], -fp
    3738:	12021904 	andne	r1, r2, #4, 18	; 0x10000
    373c:	000000bc 	strheq	r0, [r0], -ip
    3740:	04c02303 	strbeq	r2, [r0], #771	; 0x303
    3744:	00040108 	andeq	r0, r4, r8, lsl #2
    3748:	021a0400 	andseq	r0, sl, #0, 8
    374c:	0000bc12 	andeq	fp, r0, r2, lsl ip
    3750:	c4230300 	strtgt	r0, [r3], #-768	; 0xfffffd00
    3754:	04070804 	streq	r0, [r7], #-2052	; 0xfffff7fc
    3758:	1b040000 	blne	103760 <__RAM_SIZE+0x3760>
    375c:	00bc1202 	adcseq	r1, ip, r2, lsl #4
    3760:	23030000 	movwcs	r0, #12288	; 0x3000
    3764:	210804c8 	smlabtcs	r8, r8, r4, r0
    3768:	04000004 	streq	r0, [r0], #-4
    376c:	5912021c 	ldmdbpl	r2, {r2, r3, r4, r9}
    3770:	03000004 	movweq	r0, #4
    3774:	0804cc23 	stmdaeq	r4, {r0, r1, r5, sl, fp, lr, pc}
    3778:	00000370 	andeq	r0, r0, r0, ror r3
    377c:	12021d04 	andne	r1, r2, #4, 26	; 0x100
    3780:	000000b7 	strheq	r0, [r0], -r7
    3784:	04d02303 	ldrbeq	r2, [r0], #771	; 0x303
    3788:	00042b08 	andeq	r2, r4, r8, lsl #22
    378c:	021e0400 	andseq	r0, lr, #0, 8
    3790:	00045912 	andeq	r5, r4, r2, lsl r9
    3794:	d4230300 	strtle	r0, [r3], #-768	; 0xfffffd00
    3798:	04590804 	ldrbeq	r0, [r9], #-2052	; 0xfffff7fc
    379c:	1f040000 	svcne	0x00040000
    37a0:	00b71202 	adcseq	r1, r7, r2, lsl #4
    37a4:	23030000 	movwcs	r0, #12288	; 0x3000
    37a8:	290804d8 	stmdbcs	r8, {r3, r4, r6, r7, sl}
    37ac:	04000003 	streq	r0, [r0], #-3
    37b0:	b7120220 	ldrlt	r0, [r2, -r0, lsr #4]
    37b4:	03000000 	movweq	r0, #0
    37b8:	0804dc23 	stmdaeq	r4, {r0, r1, r5, sl, fp, ip, lr, pc}
    37bc:	00000461 	andeq	r0, r0, r1, ror #8
    37c0:	12022104 	andne	r2, r2, #4, 2
    37c4:	000000b7 	strheq	r0, [r0], -r7
    37c8:	04e02303 	strbteq	r2, [r0], #771	; 0x303
    37cc:	0003b708 	andeq	fp, r3, r8, lsl #14
    37d0:	02220400 	eoreq	r0, r2, #0, 8
    37d4:	0000b712 	andeq	fp, r0, r2, lsl r7
    37d8:	e4230300 	strt	r0, [r3], #-768	; 0xfffffd00
    37dc:	03980804 	orrseq	r0, r8, #4, 16	; 0x40000
    37e0:	23040000 	movwcs	r0, #16384	; 0x4000
    37e4:	00b71202 	adcseq	r1, r7, r2, lsl #4
    37e8:	23030000 	movwcs	r0, #12288	; 0x3000
    37ec:	710804e8 	smlattvc	r8, r8, r4, r0
    37f0:	04000004 	streq	r0, [r0], #-4
    37f4:	b7120224 	ldrlt	r0, [r2, -r4, lsr #4]
    37f8:	03000000 	movweq	r0, #0
    37fc:	0804ec23 	stmdaeq	r4, {r0, r1, r5, sl, fp, sp, lr, pc}
    3800:	00000450 	andeq	r0, r0, r0, asr r4
    3804:	12022504 	andne	r2, r2, #4, 10	; 0x1000000
    3808:	000000b7 	strheq	r0, [r0], -r7
    380c:	04f02303 	ldrbteq	r2, [r0], #771	; 0x303
    3810:	00034b08 	andeq	r4, r3, r8, lsl #22
    3814:	02260400 	eoreq	r0, r6, #0, 8
    3818:	0000b712 	andeq	fp, r0, r2, lsl r7
    381c:	f4230300 	vld2.8	{d0-d3}, [r3], r0
    3820:	033d0804 	teqeq	sp, #4, 16	; 0x40000
    3824:	27040000 	strcs	r0, [r4, -r0]
    3828:	00b71202 	adcseq	r1, r7, r2, lsl #4
    382c:	23030000 	movwcs	r0, #12288	; 0x3000
    3830:	0a0004f8 	beq	4c18 <__HEAP_SIZE+0x3c18>
    3834:	000000a6 	andeq	r0, r0, r6, lsr #1
    3838:	000003d6 	ldrdeq	r0, [r0], -r6
    383c:	0000850b 	andeq	r8, r0, fp, lsl #10
    3840:	05000b00 	streq	r0, [r0, #-2816]	; 0xfffff500
    3844:	000003c6 	andeq	r0, r0, r6, asr #7
    3848:	0000bc0a 	andeq	fp, r0, sl, lsl #24
    384c:	0003eb00 	andeq	lr, r3, r0, lsl #22
    3850:	00850b00 	addeq	r0, r5, r0, lsl #22
    3854:	00010000 	andeq	r0, r1, r0
    3858:	0003db06 	andeq	sp, r3, r6, lsl #22
    385c:	03eb0500 	mvneq	r0, #0, 10
    3860:	bc0a0000 	stclt	0, cr0, [sl], {-0}
    3864:	05000000 	streq	r0, [r0, #-0]
    3868:	0b000004 	bleq	3880 <__HEAP_SIZE+0x2880>
    386c:	00000085 	andeq	r0, r0, r5, lsl #1
    3870:	f5060003 			; <UNDEFINED> instruction: 0xf5060003
    3874:	05000003 	streq	r0, [r0, #-3]
    3878:	00000405 	andeq	r0, r0, r5, lsl #8
    387c:	0000bc0a 	andeq	fp, r0, sl, lsl #24
    3880:	00041f00 	andeq	r1, r4, r0, lsl #30
    3884:	00850b00 	addeq	r0, r5, r0, lsl #22
    3888:	00050000 	andeq	r0, r5, r0
    388c:	00040f06 	andeq	r0, r4, r6, lsl #30
    3890:	041f0500 	ldreq	r0, [pc], #-1280	; 3898 <__HEAP_SIZE+0x2898>
    3894:	ab0a0000 	blge	28389c <__RAM_SIZE+0x18389c>
    3898:	39000000 	stmdbcc	r0, {}	; <UNPREDICTABLE>
    389c:	0b000004 	bleq	38b4 <__HEAP_SIZE+0x28b4>
    38a0:	00000085 	andeq	r0, r0, r5, lsl #1
    38a4:	ab0a0014 	blge	2838fc <__RAM_SIZE+0x1838fc>
    38a8:	49000000 	stmdbmi	r0, {}	; <UNPREDICTABLE>
    38ac:	0b000004 	bleq	38c4 <__HEAP_SIZE+0x28c4>
    38b0:	00000085 	andeq	r0, r0, r5, lsl #1
    38b4:	ab0a0044 	blge	2839cc <__RAM_SIZE+0x1839cc>
    38b8:	59000000 	stmdbpl	r0, {}	; <UNPREDICTABLE>
    38bc:	0b000004 	bleq	38d4 <__HEAP_SIZE+0x28d4>
    38c0:	00000085 	andeq	r0, r0, r5, lsl #1
    38c4:	ab0a000e 	blge	283904 <__RAM_SIZE+0x183904>
    38c8:	69000000 	stmdbvs	r0, {}	; <UNPREDICTABLE>
    38cc:	0b000004 	bleq	38e4 <__HEAP_SIZE+0x28e4>
    38d0:	00000085 	andeq	r0, r0, r5, lsl #1
    38d4:	880c0000 	stmdahi	ip, {}	; <UNPREDICTABLE>
    38d8:	04000003 	streq	r0, [r0], #-3
    38dc:	c1030228 	tstgt	r3, r8, lsr #4
    38e0:	0d000000 	stceq	0, cr0, [r0, #-0]
    38e4:	00027301 	andeq	r7, r2, r1, lsl #6
    38e8:	06480100 	strbeq	r0, [r8], -r0, lsl #2
    38ec:	001fa801 	andseq	sl, pc, r1, lsl #16
    38f0:	001ff410 	andseq	pc, pc, r0, lsl r4	; <UNPREDICTABLE>
    38f4:	002e2710 	eoreq	r2, lr, r0, lsl r7
    38f8:	04fd0100 	ldrbteq	r0, [sp], #256	; 0x100
    38fc:	670e0000 	strvs	r0, [lr, -r0]
    3900:	01000009 	tsteq	r0, r9
    3904:	04fd1349 	ldrbteq	r1, [sp], #841	; 0x349
    3908:	2e650000 	cdpcs	0, 6, cr0, cr5, cr0, {0}
    390c:	2e5f0000 	cdpcs	0, 5, cr0, cr15, cr0, {0}
    3910:	3d0f0000 	stccc	0, cr0, [pc, #-0]	; 3918 <__HEAP_SIZE+0x2918>
    3914:	01000005 	tsteq	r0, r5
    3918:	0080124a 	addeq	r1, r0, sl, asr #4
    391c:	91020000 	mrsls	r0, (UNDEF: 2)
    3920:	1fca106c 	svcne	0x00ca106c
    3924:	078a1000 	streq	r1, [sl, r0]
    3928:	04ce0000 	strbeq	r0, [lr], #0
    392c:	01110000 	tsteq	r1, r0
    3930:	00750250 	rsbseq	r0, r5, r0, asr r2
    3934:	02510111 	subseq	r0, r1, #1073741828	; 0x40000004
    3938:	10000074 	andne	r0, r0, r4, ror r0
    393c:	10001fd8 	ldrdne	r1, [r0], -r8
    3940:	0000078a 	andeq	r0, r0, sl, lsl #15
    3944:	000004e7 	andeq	r0, r0, r7, ror #9
    3948:	02500111 	subseq	r0, r0, #1073741828	; 0x40000004
    394c:	01110075 	tsteq	r1, r5, ror r0
    3950:	00340151 	eorseq	r0, r4, r1, asr r1
    3954:	001fe812 	andseq	lr, pc, r2, lsl r8	; <UNPREDICTABLE>
    3958:	00078a10 	andeq	r8, r7, r0, lsl sl
    395c:	50011100 	andpl	r1, r1, r0, lsl #2
    3960:	11007502 	tstne	r0, r2, lsl #10
    3964:	33015101 	movwcc	r5, #4353	; 0x1101
    3968:	04130000 	ldreq	r0, [r3], #-0
    396c:	00000080 	andeq	r0, r0, r0, lsl #1
    3970:	09a4010d 	stmibeq	r4!, {r0, r2, r3, r8}
    3974:	40010000 	andmi	r0, r1, r0
    3978:	00000106 	andeq	r0, r0, r6, lsl #2
    397c:	00000000 	andeq	r0, r0, r0
    3980:	2e910000 	cdpcs	0, 9, cr0, cr1, cr0, {0}
    3984:	58010000 	stmdapl	r1, {}	; <UNPREDICTABLE>
    3988:	14000005 	strne	r0, [r0], #-5
    398c:	41010061 	tstmi	r1, r1, rrx
    3990:	00007909 	andeq	r7, r0, r9, lsl #18
    3994:	62140000 	andsvs	r0, r4, #0
    3998:	10410100 	subne	r0, r1, r0, lsl #2
    399c:	00000079 	andeq	r0, r0, r9, ror r0
    39a0:	00631400 	rsbeq	r1, r3, r0, lsl #8
    39a4:	79174101 	ldmdbvc	r7, {r0, r8, lr}
    39a8:	00000000 	andeq	r0, r0, r0
    39ac:	00000012 	andeq	r0, r0, r2, lsl r0
    39b0:	00078a00 	andeq	r8, r7, r0, lsl #20
    39b4:	50011100 	andpl	r1, r1, r0, lsl #2
    39b8:	00000305 	andeq	r0, r0, r5, lsl #6
    39bc:	01110000 	tsteq	r1, r0
    39c0:	00300151 	eorseq	r0, r0, r1, asr r1
    39c4:	03011500 	movweq	r1, #5376	; 0x1500
    39c8:	01000009 	tsteq	r0, r9
    39cc:	8b010638 	blhi	452b4 <__HEAP_SIZE+0x442b4>
    39d0:	98000005 	stmdals	r0, {r0, r2}
    39d4:	a610001f 			; <UNDEFINED> instruction: 0xa610001f
    39d8:	0210001f 	andseq	r0, r0, #31
    39dc:	8b01007d 	blhi	43bd8 <__HEAP_SIZE+0x42bd8>
    39e0:	16000005 	strne	r0, [r0], -r5
    39e4:	0000079e 	muleq	r0, lr, r7
    39e8:	85283801 	strhi	r3, [r8, #-2049]!	; 0xfffff7ff
    39ec:	b9000000 	stmdblt	r0, {}	; <UNPREDICTABLE>
    39f0:	b100002e 	tstlt	r0, lr, lsr #32
    39f4:	0000002e 	andeq	r0, r0, lr, lsr #32
    39f8:	46020102 	strmi	r0, [r2], -r2, lsl #2
    39fc:	0d000006 	stceq	0, cr0, [r0, #-24]	; 0xffffffe8
    3a00:	00079301 	andeq	r9, r7, r1, lsl #6
    3a04:	060f0100 	streq	r0, [pc], -r0, lsl #2
    3a08:	001e9c01 	andseq	r9, lr, r1, lsl #24
    3a0c:	001f9810 	andseq	r9, pc, r0, lsl r8	; <UNPREDICTABLE>
    3a10:	002ef310 	eoreq	pc, lr, r0, lsl r3	; <UNPREDICTABLE>
    3a14:	078a0100 	streq	r0, [sl, r0, lsl #2]
    3a18:	9e160000 	cdpls	0, 1, cr0, cr6, cr0, {0}
    3a1c:	01000007 	tsteq	r0, r7
    3a20:	0085290f 	addeq	r2, r5, pc, lsl #18
    3a24:	2f170000 	svccs	0x00170000
    3a28:	2f130000 	svccs	0x00130000
    3a2c:	a6100000 	ldrge	r0, [r0], -r0
    3a30:	9810001e 	ldmdals	r0, {r1, r2, r3, r4}
    3a34:	d8000007 	stmdale	r0, {r0, r1, r2}
    3a38:	11000005 	tstne	r0, r5
    3a3c:	03055001 	movweq	r5, #20481	; 0x5001
    3a40:	10005b9c 	mulne	r0, ip, fp
    3a44:	1eac1000 	cdpne	0, 10, cr1, cr12, cr0, {0}
    3a48:	078a1000 	streq	r1, [sl, r0]
    3a4c:	05ef0000 	strbeq	r0, [pc, #0]!	; 3a54 <__HEAP_SIZE+0x2a54>
    3a50:	01110000 	tsteq	r1, r0
    3a54:	a0030550 	andge	r0, r3, r0, asr r5
    3a58:	0010005b 	andseq	r0, r0, fp, asr r0
    3a5c:	001eb810 	andseq	fp, lr, r0, lsl r8
    3a60:	00079810 	andeq	r9, r7, r0, lsl r8
    3a64:	00060600 	andeq	r0, r6, r0, lsl #12
    3a68:	50011100 	andpl	r1, r1, r0, lsl #2
    3a6c:	5bc00305 	blpl	ff004688 <__StackTop+0xc6f04688>
    3a70:	10001000 	andne	r1, r0, r0
    3a74:	10001ebe 			; <UNDEFINED> instruction: 0x10001ebe
    3a78:	0000078a 	andeq	r0, r0, sl, lsl #15
    3a7c:	0000061d 	andeq	r0, r0, sp, lsl r6
    3a80:	05500111 	ldrbeq	r0, [r0, #-273]	; 0xfffffeef
    3a84:	005bf803 	subseq	pc, fp, r3, lsl #16
    3a88:	ca100010 	bgt	403ad0 <__RAM_SIZE+0x303ad0>
    3a8c:	9810001e 	ldmdals	r0, {r1, r2, r3, r4}
    3a90:	34000007 	strcc	r0, [r0], #-7
    3a94:	11000006 	tstne	r0, r6
    3a98:	03055001 	movweq	r5, #20481	; 0x5001
    3a9c:	10005c18 	andne	r5, r0, r8, lsl ip
    3aa0:	1ed01000 	cdpne	0, 13, cr1, cr0, cr0, {0}
    3aa4:	078a1000 	streq	r1, [sl, r0]
    3aa8:	064b0000 	strbeq	r0, [fp], -r0
    3aac:	01110000 	tsteq	r1, r0
    3ab0:	50030550 	andpl	r0, r3, r0, asr r5
    3ab4:	0010005c 	andseq	r0, r0, ip, asr r0
    3ab8:	001edc10 	andseq	sp, lr, r0, lsl ip
    3abc:	00079810 	andeq	r9, r7, r0, lsl r8
    3ac0:	00066200 	andeq	r6, r6, r0, lsl #4
    3ac4:	50011100 	andpl	r1, r1, r0, lsl #2
    3ac8:	5c700305 	ldclpl	3, cr0, [r0], #-20	; 0xffffffec
    3acc:	10001000 	andne	r1, r0, r0
    3ad0:	10001ee2 	andne	r1, r0, r2, ror #29
    3ad4:	0000078a 	andeq	r0, r0, sl, lsl #15
    3ad8:	00000679 	andeq	r0, r0, r9, ror r6
    3adc:	05500111 	ldrbeq	r0, [r0, #-273]	; 0xfffffeef
    3ae0:	005ca803 	subseq	sl, ip, r3, lsl #16
    3ae4:	ee100010 	mrc	0, 0, r0, cr0, cr0, {0}
    3ae8:	9810001e 	ldmdals	r0, {r1, r2, r3, r4}
    3aec:	90000007 	andls	r0, r0, r7
    3af0:	11000006 	tstne	r0, r6
    3af4:	03055001 	movweq	r5, #20481	; 0x5001
    3af8:	10005cc8 	andne	r5, r0, r8, asr #25
    3afc:	1ef41000 	cdpne	0, 15, cr1, cr4, cr0, {0}
    3b00:	078a1000 	streq	r1, [sl, r0]
    3b04:	06a70000 	strteq	r0, [r7], r0
    3b08:	01110000 	tsteq	r1, r0
    3b0c:	00030550 	andeq	r0, r3, r0, asr r5
    3b10:	0010005d 	andseq	r0, r0, sp, asr r0
    3b14:	001f0010 	andseq	r0, pc, r0, lsl r0	; <UNPREDICTABLE>
    3b18:	00079810 	andeq	r9, r7, r0, lsl r8
    3b1c:	0006be00 	andeq	fp, r6, r0, lsl #28
    3b20:	50011100 	andpl	r1, r1, r0, lsl #2
    3b24:	5d200305 	stcpl	3, cr0, [r0, #-20]!	; 0xffffffec
    3b28:	10001000 	andne	r1, r0, r0
    3b2c:	10001f06 	andne	r1, r0, r6, lsl #30
    3b30:	0000078a 	andeq	r0, r0, sl, lsl #15
    3b34:	000006d5 	ldrdeq	r0, [r0], -r5
    3b38:	05500111 	ldrbeq	r0, [r0, #-273]	; 0xfffffeef
    3b3c:	005d5803 	subseq	r5, sp, r3, lsl #16
    3b40:	12100010 	andsne	r0, r0, #16
    3b44:	9810001f 	ldmdals	r0, {r0, r1, r2, r3, r4}
    3b48:	ec000007 	stc	0, cr0, [r0], {7}
    3b4c:	11000006 	tstne	r0, r6
    3b50:	03055001 	movweq	r5, #20481	; 0x5001
    3b54:	10005d78 	andne	r5, r0, r8, ror sp
    3b58:	1f181000 	svcne	0x00181000
    3b5c:	07981000 	ldreq	r1, [r8, r0]
    3b60:	07030000 	streq	r0, [r3, -r0]
    3b64:	01110000 	tsteq	r1, r0
    3b68:	9c030550 	cfstr32ls	mvfx0, [r3], {80}	; 0x50
    3b6c:	0010005b 	andseq	r0, r0, fp, asr r0
    3b70:	001f2010 	andseq	r2, pc, r0, lsl r0	; <UNPREDICTABLE>
    3b74:	00079810 	andeq	r9, r7, r0, lsl r8
    3b78:	00071a00 	andeq	r1, r7, r0, lsl #20
    3b7c:	50011100 	andpl	r1, r1, r0, lsl #2
    3b80:	5bdc0305 	blpl	ff70479c <__StackTop+0xc760479c>
    3b84:	10001000 	andne	r1, r0, r0
    3b88:	10001f28 	andne	r1, r0, r8, lsr #30
    3b8c:	00000798 	muleq	r0, r8, r7
    3b90:	00000731 	andeq	r0, r0, r1, lsr r7
    3b94:	05500111 	ldrbeq	r0, [r0, #-273]	; 0xfffffeef
    3b98:	005c3403 	subseq	r3, ip, r3, lsl #8
    3b9c:	30100010 	andscc	r0, r0, r0, lsl r0
    3ba0:	9810001f 	ldmdals	r0, {r0, r1, r2, r3, r4}
    3ba4:	48000007 	stmdami	r0, {r0, r1, r2}
    3ba8:	11000007 	tstne	r0, r7
    3bac:	03055001 	movweq	r5, #20481	; 0x5001
    3bb0:	10005c8c 	andne	r5, r0, ip, lsl #25
    3bb4:	1f381000 	svcne	0x00381000
    3bb8:	07981000 	ldreq	r1, [r8, r0]
    3bbc:	075f0000 	ldrbeq	r0, [pc, -r0]
    3bc0:	01110000 	tsteq	r1, r0
    3bc4:	e4030550 	str	r0, [r3], #-1360	; 0xfffffab0
    3bc8:	0010005c 	andseq	r0, r0, ip, asr r0
    3bcc:	001f4010 	andseq	r4, pc, r0, lsl r0	; <UNPREDICTABLE>
    3bd0:	00079810 	andeq	r9, r7, r0, lsl r8
    3bd4:	00077600 	andeq	r7, r7, r0, lsl #12
    3bd8:	50011100 	andpl	r1, r1, r0, lsl #2
    3bdc:	5d3c0305 	ldcpl	3, cr0, [ip, #-20]!	; 0xffffffec
    3be0:	12001000 	andne	r1, r0, #0
    3be4:	10001f48 	andne	r1, r0, r8, asr #30
    3be8:	00000798 	muleq	r0, r8, r7
    3bec:	05500111 	ldrbeq	r0, [r0, #-273]	; 0xfffffeef
    3bf0:	005d9403 	subseq	r9, sp, r3, lsl #8
    3bf4:	17000010 	smladne	r0, r0, r0, r0
    3bf8:	05ba0101 	ldreq	r0, [sl, #257]!	; 0x101
    3bfc:	05ba0000 	ldreq	r0, [sl, #0]!
    3c00:	c8050000 	stmdagt	r5, {}	; <UNPREDICTABLE>
    3c04:	01011805 	tsteq	r1, r5, lsl #16
    3c08:	00000088 	andeq	r0, r0, r8, lsl #1
    3c0c:	0000007e 	andeq	r0, r0, lr, ror r0
    3c10:	cb000006 	blgt	3c30 <__HEAP_SIZE+0x2c30>
    3c14:	02000002 	andeq	r0, r0, #2
    3c18:	000c4000 	andeq	r4, ip, r0
    3c1c:	bf010400 	svclt	0x00010400
    3c20:	0c000000 	stceq	0, cr0, [r0], {-0}
    3c24:	00000a92 	muleq	r0, r2, sl
    3c28:	000001a8 	andeq	r0, r0, r8, lsr #3
    3c2c:	000002b0 			; <UNDEFINED> instruction: 0x000002b0
	...
    3c38:	00002473 	andeq	r2, r0, r3, ror r4
    3c3c:	1d070402 	cfstrsne	mvf0, [r7, #-8]
    3c40:	03000002 	movweq	r0, #2
    3c44:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
    3c48:	08020074 	stmdaeq	r2, {r2, r4, r5, r6}
    3c4c:	00025505 	andeq	r5, r2, r5, lsl #10
    3c50:	04080200 	streq	r0, [r8], #-512	; 0xfffffe00
    3c54:	00000249 	andeq	r0, r0, r9, asr #4
    3c58:	8f060102 	svchi	0x00060102
    3c5c:	02000000 	andeq	r0, r0, #0
    3c60:	008d0801 	addeq	r0, sp, r1, lsl #16
    3c64:	02020000 	andeq	r0, r2, #0
    3c68:	0002a505 	andeq	sl, r2, r5, lsl #10
    3c6c:	07020200 	streq	r0, [r2, -r0, lsl #4]
    3c70:	000000ac 	andeq	r0, r0, ip, lsr #1
    3c74:	5a050402 	bpl	144c84 <__RAM_SIZE+0x44c84>
    3c78:	04000002 	streq	r0, [r0], #-2
    3c7c:	0000037d 	andeq	r0, r0, sp, ror r3
    3c80:	74194f02 	ldrvc	r4, [r9], #-3842	; 0xfffff0fe
    3c84:	02000000 	andeq	r0, r0, #0
    3c88:	02180704 	andseq	r0, r8, #4, 14	; 0x100000
    3c8c:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    3c90:	00021307 	andeq	r1, r2, r7, lsl #6
    3c94:	02040500 	andeq	r0, r4, #0, 10
    3c98:	00960801 	addseq	r0, r6, r1, lsl #16
    3c9c:	7f040000 	svcvc	0x00040000
    3ca0:	03000003 	movweq	r0, #3
    3ca4:	00681430 	rsbeq	r1, r8, r0, lsr r4
    3ca8:	68040000 	stmdavs	r4, {}	; <UNPREDICTABLE>
    3cac:	0400000a 	streq	r0, [r0], #-10
    3cb0:	00741a4b 	rsbseq	r1, r4, fp, asr #20
    3cb4:	c4040000 	strgt	r0, [r4], #-0
    3cb8:	04000009 	streq	r0, [r0], #-9
    3cbc:	008b1a51 	addeq	r1, fp, r1, asr sl
    3cc0:	a3060000 	movwge	r0, #24576	; 0x6000
    3cc4:	07000000 	streq	r0, [r0, -r0]
    3cc8:	000009eb 	andeq	r0, r0, fp, ror #19
    3ccc:	08900514 	ldmeq	r0, {r2, r4, r8, sl}
    3cd0:	0000010d 	andeq	r0, r0, sp, lsl #2
    3cd4:	0009cf08 	andeq	ip, r9, r8, lsl #30
    3cd8:	24930500 	ldrcs	r0, [r3], #1280	; 0x500
    3cdc:	000000a3 	andeq	r0, r0, r3, lsr #1
    3ce0:	08002302 	stmdaeq	r0, {r1, r8, r9, sp}
    3ce4:	00000a38 	andeq	r0, r0, r8, lsr sl
    3ce8:	0d2d9405 	cfstrseq	mvf9, [sp, #-20]!	; 0xffffffec
    3cec:	02000001 	andeq	r0, r0, #1
    3cf0:	87080423 	strhi	r0, [r8, -r3, lsr #8]
    3cf4:	0500000a 	streq	r0, [r0, #-10]
    3cf8:	010d2d95 			; <UNDEFINED> instruction: 0x010d2d95
    3cfc:	23020000 	movwcs	r0, #8192	; 0x2000
    3d00:	09e30808 	stmibeq	r3!, {r3, fp}^
    3d04:	96050000 	strls	r0, [r5], -r0
    3d08:	0000820c 	andeq	r8, r0, ip, lsl #4
    3d0c:	0c230200 	sfmeq	f0, 4, [r3], #-0
    3d10:	0009b808 	andeq	fp, r9, r8, lsl #16
    3d14:	28970500 	ldmcs	r7, {r8, sl}
    3d18:	0000014e 	andeq	r0, r0, lr, asr #2
    3d1c:	00102302 	andseq	r2, r0, r2, lsl #6
    3d20:	00b40409 	adcseq	r0, r4, r9, lsl #8
    3d24:	ba070000 	blt	1c3d2c <__RAM_SIZE+0xc3d2c>
    3d28:	1c00000a 	stcne	0, cr0, [r0], {10}
    3d2c:	4e10ac05 	cdpmi	12, 1, cr10, cr0, cr5, {0}
    3d30:	08000001 	stmdaeq	r0, {r0}
    3d34:	00000a19 	andeq	r0, r0, r9, lsl sl
    3d38:	9725af05 	strls	sl, [r5, -r5, lsl #30]!
    3d3c:	02000000 	andeq	r0, r0, #0
    3d40:	7f080023 	svcvc	0x00080023
    3d44:	0500000a 	streq	r0, [r0, #-10]
    3d48:	016c26b0 	strheq	r2, [ip, #-96]!	; 0xffffffa0
    3d4c:	23020000 	movwcs	r0, #8192	; 0x2000
    3d50:	09da0804 	ldmibeq	sl, {r2, fp}^
    3d54:	b1050000 	mrslt	r0, (UNDEF: 5)
    3d58:	00016014 	andeq	r6, r1, r4, lsl r0
    3d5c:	08230200 	stmdaeq	r3!, {r9}
    3d60:	13040900 	movwne	r0, #18688	; 0x4900
    3d64:	04000001 	streq	r0, [r0], #-1
    3d68:	000019e1 	andeq	r1, r0, r1, ror #19
    3d6c:	b41b9a05 	ldrlt	r9, [fp], #-2565	; 0xfffff5fb
    3d70:	04000000 	streq	r0, [r0], #-0
    3d74:	00000c14 	andeq	r0, r0, r4, lsl ip
    3d78:	b424a605 	strtlt	sl, [r4], #-1541	; 0xfffff9fb
    3d7c:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    3d80:	00015404 	andeq	r5, r1, r4, lsl #8
    3d84:	016c0600 	cmneq	ip, r0, lsl #12
    3d88:	87040000 	strhi	r0, [r4, -r0]
    3d8c:	05000014 	streq	r0, [r0, #-20]	; 0xffffffec
    3d90:	011303b3 			; <UNDEFINED> instruction: 0x011303b3
    3d94:	010a0000 	mrseq	r0, (UNDEF: 10)
    3d98:	00000ac0 	andeq	r0, r0, r0, asr #21
    3d9c:	010dd701 	tsteq	sp, r1, lsl #14
    3da0:	00000097 	muleq	r0, r7, r0
    3da4:	10002046 	andne	r2, r0, r6, asr #32
    3da8:	1000206a 	andne	r2, r0, sl, rrx
    3dac:	01007d02 	tsteq	r0, r2, lsl #26
    3db0:	000001ca 	andeq	r0, r0, sl, asr #3
    3db4:	0009f60b 	andeq	pc, r9, fp, lsl #12
    3db8:	2ed70100 	cdpcs	1, 13, cr0, cr7, cr0, {0}
    3dbc:	00000172 	andeq	r0, r0, r2, ror r1
    3dc0:	00002f3b 	andeq	r2, r0, fp, lsr pc
    3dc4:	00002f35 	andeq	r2, r0, r5, lsr pc
    3dc8:	000ab30c 	andeq	fp, sl, ip, lsl #6
    3dcc:	14db0100 	ldrbne	r0, [fp], #256	; 0x100
    3dd0:	000001d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    3dd4:	00002f69 	andeq	r2, r0, r9, ror #30
    3dd8:	00002f67 	andeq	r2, r0, r7, ror #30
    3ddc:	77040900 	strvc	r0, [r4, -r0, lsl #18]
    3de0:	06000001 	streq	r0, [r0], -r1
    3de4:	000001ca 	andeq	r0, r0, sl, asr #3
    3de8:	0adb010d 	beq	ff6c4224 <__StackTop+0xc75c4224>
    3dec:	8b010000 	blhi	43df4 <__HEAP_SIZE+0x42df4>
    3df0:	20140106 	andscs	r0, r4, r6, lsl #2
    3df4:	20461000 	subcs	r1, r6, r0
    3df8:	2f7c1000 	svccs	0x007c1000
    3dfc:	35010000 	strcc	r0, [r1, #-0]
    3e00:	0e000002 	cdpeq	0, 0, cr0, cr0, cr2, {0}
    3e04:	00000ab3 			; <UNDEFINED> instruction: 0x00000ab3
    3e08:	d0228b01 	eorle	r8, r2, r1, lsl #22
    3e0c:	01000001 	tsteq	r0, r1
    3e10:	0acd0e50 	beq	ff347758 <__StackTop+0xc7247758>
    3e14:	8c010000 	stchi	0, cr0, [r1], {-0}
    3e18:	00017226 	andeq	r7, r1, r6, lsr #4
    3e1c:	0c510100 	ldfeqe	f0, [r1], {-0}
    3e20:	00000a74 	andeq	r0, r0, r4, ror sl
    3e24:	6c128e01 	ldcvs	14, cr8, [r2], {1}
    3e28:	ba000001 	blt	3e34 <__HEAP_SIZE+0x2e34>
    3e2c:	b400002f 	strlt	r0, [r0], #-47	; 0xffffffd1
    3e30:	0c00002f 	stceq	0, cr0, [r0], {47}	; 0x2f
    3e34:	00000a4f 	andeq	r0, r0, pc, asr #20
    3e38:	af168f01 	svcge	0x00168f01
    3e3c:	e7000000 	str	r0, [r0, -r0]
    3e40:	e300002f 	movw	r0, #47	; 0x2f
    3e44:	0000002f 	andeq	r0, r0, pc, lsr #32
    3e48:	0a29010f 	beq	a4428c <__RAM_SIZE+0x94428c>
    3e4c:	69010000 	stmdbvs	r1, {}	; <UNPREDICTABLE>
    3e50:	00000106 	andeq	r0, r0, r6, lsl #2
    3e54:	00000000 	andeq	r0, r0, r0
    3e58:	7d020000 	stcvc	0, cr0, [r2, #-0]
    3e5c:	02800100 	addeq	r0, r0, #0, 2
    3e60:	b30e0000 	movwlt	r0, #57344	; 0xe000
    3e64:	0100000a 	tsteq	r0, sl
    3e68:	01d02569 	bicseq	r2, r0, r9, ror #10
    3e6c:	50010000 	andpl	r0, r1, r0
    3e70:	000acd0e 	andeq	ip, sl, lr, lsl #26
    3e74:	296a0100 	stmdbcs	sl!, {r8}^
    3e78:	00000172 	andeq	r0, r0, r2, ror r1
    3e7c:	7f0c5101 	svcvc	0x000c5101
    3e80:	0100000a 	tsteq	r0, sl
    3e84:	0172186c 	cmneq	r2, ip, ror #16
    3e88:	30070000 	andcc	r0, r7, r0
    3e8c:	30050000 	andcc	r0, r5, r0
    3e90:	0f000000 	svceq	0x00000000
    3e94:	000a0501 	andeq	r0, sl, r1, lsl #10
    3e98:	06590100 	ldrbeq	r0, [r9], -r0, lsl #2
    3e9c:	00200e01 	eoreq	r0, r0, r1, lsl #28
    3ea0:	00201410 	eoreq	r1, r0, r0, lsl r4
    3ea4:	007d0210 	rsbseq	r0, sp, r0, lsl r2
    3ea8:	0002a901 	andeq	sl, r2, r1, lsl #18
    3eac:	0a610e00 	beq	18476b4 <__RAM_SIZE+0x17476b4>
    3eb0:	59010000 	stmdbpl	r1, {}	; <UNPREDICTABLE>
    3eb4:	0001722e 	andeq	r7, r1, lr, lsr #4
    3eb8:	00500100 	subseq	r0, r0, r0, lsl #2
    3ebc:	0a3f0110 	beq	fc4304 <__RAM_SIZE+0xec4304>
    3ec0:	31010000 	mrscc	r0, (UNDEF: 1)
    3ec4:	1ff40106 	svcne	0x00f40106
    3ec8:	200e1000 	andcs	r1, lr, r0
    3ecc:	7d021000 	stcvc	0, cr1, [r2, #-0]
    3ed0:	b30e0100 	movwlt	r0, #57600	; 0xe100
    3ed4:	0100000a 	tsteq	r0, sl
    3ed8:	01d02631 	bicseq	r2, r0, r1, lsr r6
    3edc:	50010000 	andpl	r0, r1, r0
    3ee0:	24bd0000 	ldrtcs	r0, [sp], #0
    3ee4:	00020000 	andeq	r0, r2, r0
    3ee8:	00000d5d 	andeq	r0, r0, sp, asr sp
    3eec:	00bf0104 	adcseq	r0, pc, r4, lsl #2
    3ef0:	f20c0000 	vhadd.s8	d0, d12, d0
    3ef4:	a800000e 	stmdage	r0, {r1, r2, r3}
    3ef8:	b8000001 	stmdalt	r0, {r0}
    3efc:	00000003 	andeq	r0, r0, r3
    3f00:	00000000 	andeq	r0, r0, r0
    3f04:	10000000 	andne	r0, r0, r0
    3f08:	02000028 	andeq	r0, r0, #40	; 0x28
    3f0c:	000004e7 	andeq	r0, r0, r7, ror #9
    3f10:	3517d102 	ldrcc	sp, [r7, #-258]	; 0xfffffefe
    3f14:	03000000 	movweq	r0, #0
    3f18:	021d0704 	andseq	r0, sp, #4, 14	; 0x100000
    3f1c:	04040000 	streq	r0, [r4], #-0
    3f20:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    3f24:	05080300 	streq	r0, [r8, #-768]	; 0xfffffd00
    3f28:	00000255 	andeq	r0, r0, r5, asr r2
    3f2c:	49040803 	stmdbmi	r4, {r0, r1, fp}
    3f30:	02000002 	andeq	r0, r0, #2
    3f34:	00001170 	andeq	r1, r0, r0, ror r1
    3f38:	5d172903 	vldrpl.16	s4, [r7, #-6]	; <UNPREDICTABLE>
    3f3c:	03000000 	movweq	r0, #0
    3f40:	008f0601 	addeq	r0, pc, r1, lsl #12
    3f44:	00020000 	andeq	r0, r2, r0
    3f48:	03000000 	movweq	r0, #0
    3f4c:	0070182b 	rsbseq	r1, r0, fp, lsr #16
    3f50:	01030000 	mrseq	r0, (UNDEF: 3)
    3f54:	00008d08 	andeq	r8, r0, r8, lsl #26
    3f58:	05020300 	streq	r0, [r2, #-768]	; 0xfffffd00
    3f5c:	000002a5 	andeq	r0, r0, r5, lsr #5
    3f60:	ac070203 	sfmge	f0, 4, [r7], {3}
    3f64:	03000000 	movweq	r0, #0
    3f68:	025a0504 	subseq	r0, sl, #4, 10	; 0x1000000
    3f6c:	7d020000 	stcvc	0, cr0, [r2, #-0]
    3f70:	03000003 	movweq	r0, #3
    3f74:	0098194f 	addseq	r1, r8, pc, asr #18
    3f78:	04030000 	streq	r0, [r3], #-0
    3f7c:	00021807 	andeq	r1, r2, r7, lsl #16
    3f80:	07080300 	streq	r0, [r8, -r0, lsl #6]
    3f84:	00000213 	andeq	r0, r0, r3, lsl r2
    3f88:	a6060405 	strge	r0, [r6], -r5, lsl #8
    3f8c:	03000000 	movweq	r0, #0
    3f90:	00960801 	addseq	r0, r6, r1, lsl #16
    3f94:	04070000 	streq	r0, [r7], #-0
    3f98:	000000bf 	strheq	r0, [r0], -pc	; <UNPREDICTABLE>
    3f9c:	0000b406 	andeq	fp, r0, r6, lsl #8
    3fa0:	72020800 	andvc	r0, r2, #0, 16
    3fa4:	04000011 	streq	r0, [r0], #-17	; 0xffffffef
    3fa8:	00511214 	subseq	r1, r1, r4, lsl r2
    3fac:	c0090000 	andgt	r0, r9, r0
    3fb0:	06000000 	streq	r0, [r0], -r0
    3fb4:	000000c0 	andeq	r0, r0, r0, asr #1
    3fb8:	00000202 	andeq	r0, r0, r2, lsl #4
    3fbc:	13180400 	tstne	r8, #0, 8
    3fc0:	00000064 	andeq	r0, r0, r4, rrx
    3fc4:	0000d606 	andeq	sp, r0, r6, lsl #12
    3fc8:	037f0200 	cmneq	pc, #0, 4
    3fcc:	30040000 	andcc	r0, r4, r0
    3fd0:	00008c14 	andeq	r8, r0, r4, lsl ip
    3fd4:	0a690200 	beq	1a447dc <__RAM_SIZE+0x19447dc>
    3fd8:	4a050000 	bmi	143fe0 <__RAM_SIZE+0x43fe0>
    3fdc:	0000851a 	andeq	r8, r0, sl, lsl r5
    3fe0:	00f30600 	rscseq	r0, r3, r0, lsl #12
    3fe4:	68020000 	stmdavs	r2, {}	; <UNPREDICTABLE>
    3fe8:	0500000a 	streq	r0, [r0, #-10]
    3fec:	00981a4b 	addseq	r1, r8, fp, asr #20
    3ff0:	04090000 	streq	r0, [r9], #-0
    3ff4:	06000001 	streq	r0, [r0], -r1
    3ff8:	00000104 	andeq	r0, r0, r4, lsl #2
    3ffc:	0009c402 	andeq	ip, r9, r2, lsl #8
    4000:	1a510500 	bne	1445408 <__RAM_SIZE+0x1345408>
    4004:	000000e7 	andeq	r0, r0, r7, ror #1
    4008:	00011a06 	andeq	r1, r1, r6, lsl #20
    400c:	d6040700 	strle	r0, [r4], -r0, lsl #14
    4010:	0a000000 	beq	4018 <__HEAP_SIZE+0x3018>
    4014:	000012c8 	andeq	r1, r0, r8, asr #5
    4018:	0c0c0614 	stceq	6, cr0, [ip], {20}
    401c:	00016008 	andeq	r6, r1, r8
    4020:	0e690b00 	vmuleq.f64	d16, d9, d0
    4024:	11060000 	mrsne	r0, (UNDEF: 6)
    4028:	011a100c 	tsteq	sl, ip
    402c:	23020000 	movwcs	r0, #8192	; 0x2000
    4030:	0e5f0b00 	vnmlseq.f64	d16, d15, d0
    4034:	12060000 	andne	r0, r6, #0
    4038:	01600c0c 	cmneq	r0, ip, lsl #24
    403c:	23020000 	movwcs	r0, #8192	; 0x2000
    4040:	a60c0004 	strge	r0, [ip], -r4
    4044:	70000000 	andvc	r0, r0, r0
    4048:	0d000001 	stceq	0, cr0, [r0, #-4]
    404c:	00000035 	andeq	r0, r0, r5, lsr r0
    4050:	0e0e0003 	cdpeq	0, 0, cr0, cr14, cr3, {0}
    4054:	0600000c 	streq	r0, [r0], -ip
    4058:	312b0c25 			; <UNDEFINED> instruction: 0x312b0c25
    405c:	0a000001 	beq	4068 <__HEAP_SIZE+0x3068>
    4060:	0000105a 	andeq	r1, r0, sl, asr r0
    4064:	0c29061c 	stceq	6, cr0, [r9], #-112	; 0xffffff90
    4068:	0001bc10 	andeq	fp, r1, r0, lsl ip
    406c:	0e680b00 	vmuleq.f64	d16, d8, d0
    4070:	2e060000 	cdpcs	0, 0, cr0, cr6, cr0, {0}
    4074:	0104110c 	tsteq	r4, ip, lsl #2
    4078:	23020000 	movwcs	r0, #8192	; 0x2000
    407c:	0e5f0b00 	vnmlseq.f64	d16, d15, d0
    4080:	2f060000 	svccs	0x00060000
    4084:	00a60c0c 	adceq	r0, r6, ip, lsl #24
    4088:	23020000 	movwcs	r0, #8192	; 0x2000
    408c:	0e7b0b04 	vaddeq.f64	d16, d11, d4
    4090:	30060000 	andcc	r0, r6, r0
    4094:	01701a0c 	cmneq	r0, ip, lsl #20
    4098:	23020000 	movwcs	r0, #8192	; 0x2000
    409c:	810e0008 	tsthi	lr, r8
    40a0:	06000014 			; <UNDEFINED> instruction: 0x06000014
    40a4:	7d030c34 	stcvc	12, cr0, [r3, #-208]	; 0xffffff30
    40a8:	0f000001 	svceq	0x00000001
    40ac:	0c910604 	ldceq	6, cr0, [r1], {4}
    40b0:	0001ee05 	andeq	lr, r1, r5, lsl #28
    40b4:	0e561000 	cdpeq	0, 5, cr1, cr6, cr0, {0}
    40b8:	93060000 	movwls	r0, #24576	; 0x6000
    40bc:	00a6100c 	adceq	r1, r6, ip
    40c0:	68100000 	ldmdavs	r0, {}	; <UNPREDICTABLE>
    40c4:	0600000e 	streq	r0, [r0], -lr
    40c8:	04150c94 	ldreq	r0, [r5], #-3220	; 0xfffff36c
    40cc:	00000001 	andeq	r0, r0, r1
    40d0:	0014470a 	andseq	r4, r4, sl, lsl #14
    40d4:	8d065c00 	stchi	12, cr5, [r6, #-0]
    40d8:	026b100c 	rsbeq	r1, fp, #12
    40dc:	4d0b0000 	stcmi	0, cr0, [fp, #-0]
    40e0:	0600000e 	streq	r0, [r0], -lr
    40e4:	6b0c0c8f 	blvs	307328 <__RAM_SIZE+0x207328>
    40e8:	02000002 	andeq	r0, r0, #2
    40ec:	75110023 	ldrvc	r0, [r1, #-35]	; 0xffffffdd
    40f0:	0c950600 	ldceq	6, cr0, [r5], {0}
    40f4:	0001c907 	andeq	ip, r1, r7, lsl #18
    40f8:	0c230200 	sfmeq	f0, 4, [r3], #-0
    40fc:	00138d0b 	andseq	r8, r3, fp, lsl #26
    4100:	0c970600 	ldceq	6, cr0, [r7], {0}
    4104:	00027b12 	andeq	r7, r2, r2, lsl fp
    4108:	10230200 	eorne	r0, r3, r0, lsl #4
    410c:	000e7a0b 	andeq	r7, lr, fp, lsl #20
    4110:	0c980600 	ldceq	6, cr0, [r8], {0}
    4114:	00028b11 	andeq	r8, r2, r1, lsl fp
    4118:	48230200 	stmdami	r3!, {r9}
    411c:	00119c0b 	andseq	r9, r1, fp, lsl #24
    4120:	0c990600 	ldceq	6, cr0, [r9], {0}
    4124:	00029b0d 	andeq	r9, r2, sp, lsl #22
    4128:	54230200 	strtpl	r0, [r3], #-512	; 0xfffffe00
    412c:	0011a50b 	andseq	sl, r1, fp, lsl #10
    4130:	0c9c0600 	ldceq	6, cr0, [ip], {0}
    4134:	0000d611 	andeq	sp, r0, r1, lsl r6
    4138:	56230200 	strtpl	r0, [r3], -r0, lsl #4
    413c:	000e710b 	andeq	r7, lr, fp, lsl #2
    4140:	0ca00600 	stceq	6, cr0, [r0]
    4144:	0000a610 	andeq	sl, r0, r0, lsl r6
    4148:	58230200 	stmdapl	r3!, {r9}
    414c:	00a60c00 	adceq	r0, r6, r0, lsl #24
    4150:	027b0000 	rsbseq	r0, fp, #0
    4154:	350d0000 	strcc	r0, [sp, #-0]
    4158:	02000000 	andeq	r0, r0, #0
    415c:	01bc0c00 			; <UNDEFINED> instruction: 0x01bc0c00
    4160:	028b0000 	addeq	r0, fp, #0
    4164:	350d0000 	strcc	r0, [sp, #-0]
    4168:	01000000 	mrseq	r0, (UNDEF: 0)
    416c:	01040c00 	tsteq	r4, r0, lsl #24
    4170:	029b0000 	addseq	r0, fp, #0
    4174:	350d0000 	strcc	r0, [sp, #-0]
    4178:	02000000 	andeq	r0, r0, #0
    417c:	00d60c00 	sbcseq	r0, r6, r0, lsl #24
    4180:	02ab0000 	adceq	r0, fp, #0
    4184:	350d0000 	strcc	r0, [sp, #-0]
    4188:	01000000 	mrseq	r0, (UNDEF: 0)
    418c:	108a0e00 	addne	r0, sl, r0, lsl #28
    4190:	a7060000 	strge	r0, [r6, -r0]
    4194:	01ee030c 	mvneq	r0, ip, lsl #6
    4198:	eb120000 	bl	4841a0 <__RAM_SIZE+0x3841a0>
    419c:	14000009 	strne	r0, [r0], #-9
    41a0:	11089007 	tstne	r8, r7
    41a4:	13000003 	movwne	r0, #3
    41a8:	000009cf 	andeq	r0, r0, pc, asr #19
    41ac:	1a249307 	bne	928dd0 <__RAM_SIZE+0x828dd0>
    41b0:	02000001 	andeq	r0, r0, #1
    41b4:	38130023 	ldmdacc	r3, {r0, r1, r5}
    41b8:	0700000a 	streq	r0, [r0, -sl]
    41bc:	03112d94 	tsteq	r1, #148, 26	; 0x2500
    41c0:	23020000 	movwcs	r0, #8192	; 0x2000
    41c4:	0a871304 	beq	fe1c8ddc <__StackTop+0xc60c8ddc>
    41c8:	95070000 	strls	r0, [r7, #-0]
    41cc:	0003112d 	andeq	r1, r3, sp, lsr #2
    41d0:	08230200 	stmdaeq	r3!, {r9}
    41d4:	0009e313 	andeq	lr, r9, r3, lsl r3
    41d8:	0c960700 	ldceq	7, cr0, [r6], {0}
    41dc:	000000a6 	andeq	r0, r0, r6, lsr #1
    41e0:	130c2302 	movwne	r2, #49922	; 0xc302
    41e4:	000009b8 			; <UNDEFINED> instruction: 0x000009b8
    41e8:	52289707 	eorpl	r9, r8, #1835008	; 0x1c0000
    41ec:	02000003 	andeq	r0, r0, #3
    41f0:	07001023 	streq	r1, [r0, -r3, lsr #32]
    41f4:	0002b804 	andeq	fp, r2, r4, lsl #16
    41f8:	0aba1200 	beq	fee88a00 <__StackTop+0xc6d88a00>
    41fc:	071c0000 	ldreq	r0, [ip, -r0]
    4200:	035210ac 	cmpeq	r2, #172	; 0xac
    4204:	19130000 	ldmdbne	r3, {}	; <UNPREDICTABLE>
    4208:	0700000a 	streq	r0, [r0, -sl]
    420c:	010425af 	smlatbeq	r4, pc, r5, r2	; <UNPREDICTABLE>
    4210:	23020000 	movwcs	r0, #8192	; 0x2000
    4214:	0a7f1300 	beq	1fc8e1c <__RAM_SIZE+0x1ec8e1c>
    4218:	b0070000 	andlt	r0, r7, r0
    421c:	00037026 	andeq	r7, r3, r6, lsr #32
    4220:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    4224:	0009da13 	andeq	sp, r9, r3, lsl sl
    4228:	14b10700 	ldrtne	r0, [r1], #1792	; 0x700
    422c:	00000364 	andeq	r0, r0, r4, ror #6
    4230:	00082302 	andeq	r2, r8, r2, lsl #6
    4234:	03170407 	tsteq	r7, #117440512	; 0x7000000
    4238:	e1020000 	mrs	r0, (UNDEF: 2)
    423c:	07000019 	smladeq	r0, r9, r0, r0
    4240:	02b81b9a 	adcseq	r1, r8, #157696	; 0x26800
    4244:	14020000 	strne	r0, [r2], #-0
    4248:	0700000c 	streq	r0, [r0, -ip]
    424c:	02b824a6 	adcseq	r2, r8, #-1509949440	; 0xa6000000
    4250:	04070000 	streq	r0, [r7], #-0
    4254:	00000358 	andeq	r0, r0, r8, asr r3
    4258:	00148702 	andseq	r8, r4, r2, lsl #14
    425c:	03b30700 			; <UNDEFINED> instruction: 0x03b30700
    4260:	00000317 	andeq	r0, r0, r7, lsl r3
    4264:	0002af02 	andeq	sl, r2, r2, lsl #30
    4268:	2e5c0800 	cdpcs	8, 5, cr0, cr12, cr0, {0}
    426c:	0000038e 	andeq	r0, r0, lr, lsl #7
    4270:	03940407 	orrseq	r0, r4, #117440512	; 0x7000000
    4274:	f2140000 	vhadd.s16	d0, d4, d0
    4278:	01000001 	tsteq	r0, r1
    427c:	000bb712 	andeq	fp, fp, r2, lsl r7
    4280:	7d080800 	stcvc	8, cr0, [r8, #-0]
    4284:	0003c610 	andeq	ip, r3, r0, lsl r6
    4288:	0c681300 	stcleq	3, cr1, [r8], #-0
    428c:	7f080000 	svcvc	0x00080000
    4290:	0000f310 	andeq	pc, r0, r0, lsl r3	; <UNPREDICTABLE>
    4294:	00230200 	eoreq	r0, r3, r0, lsl #4
    4298:	00107a13 	andseq	r7, r0, r3, lsl sl
    429c:	10800800 	addne	r0, r0, r0, lsl #16
    42a0:	0000011a 	andeq	r0, r0, sl, lsl r1
    42a4:	00042302 	andeq	r2, r4, r2, lsl #6
    42a8:	0010c702 	andseq	ip, r0, r2, lsl #14
    42ac:	03810800 	orreq	r0, r1, #0, 16
    42b0:	0000039a 	muleq	r0, sl, r3
    42b4:	000fac02 	andeq	sl, pc, r2, lsl #24
    42b8:	24330900 	ldrtcs	r0, [r3], #-2304	; 0xfffff700
    42bc:	000003e3 	andeq	r0, r0, r3, ror #7
    42c0:	0003d206 	andeq	sp, r3, r6, lsl #4
    42c4:	e9040700 	stmdb	r4, {r8, r9, sl}
    42c8:	12000003 	andne	r0, r0, #3
    42cc:	00000d1d 	andeq	r0, r0, sp, lsl sp
    42d0:	1067015c 	rsbne	r0, r7, ip, asr r1
    42d4:	000004a9 	andeq	r0, r0, r9, lsr #9
    42d8:	0013af13 	andseq	sl, r3, r3, lsl pc
    42dc:	0e690100 	poweqe	f0, f1, f0
    42e0:	000004ed 	andeq	r0, r0, sp, ror #9
    42e4:	13002302 	movwne	r2, #770	; 0x302
    42e8:	00001166 	andeq	r1, r0, r6, ror #2
    42ec:	ed0e6a01 	vstr	s12, [lr, #-4]
    42f0:	02000004 	andeq	r0, r0, #4
    42f4:	75150423 	ldrvc	r0, [r5, #-1059]	; 0xfffffbdd
    42f8:	07700100 	ldrbeq	r0, [r0, -r0, lsl #2]!
    42fc:	00000537 	andeq	r0, r0, r7, lsr r5
    4300:	13082302 	movwne	r2, #33538	; 0x8302
    4304:	00000c35 	andeq	r0, r0, r5, lsr ip
    4308:	760c7201 	strvc	r7, [ip], -r1, lsl #4
    430c:	02000003 	andeq	r0, r0, #3
    4310:	7e131023 	cdpvc	0, 1, cr1, cr3, cr3, {1}
    4314:	0100000b 	tsteq	r0, fp
    4318:	03760c73 	cmneq	r6, #29440	; 0x7300
    431c:	23020000 	movwcs	r0, #8192	; 0x2000
    4320:	0d7f132c 	ldcleq	3, cr1, [pc, #-176]!	; 4278 <__HEAP_SIZE+0x3278>
    4324:	75010000 	strvc	r0, [r1, #-0]
    4328:	0001101a 	andeq	r1, r1, sl, lsl r0
    432c:	48230200 	stmdami	r3!, {r9}
    4330:	0011ce13 	andseq	ip, r1, r3, lsl lr
    4334:	11760100 	cmnne	r6, r0, lsl #2
    4338:	00000104 	andeq	r0, r0, r4, lsl #2
    433c:	134c2302 	movtne	r2, #49922	; 0xc302
    4340:	00000f14 	andeq	r0, r0, r4, lsl pc
    4344:	04117701 	ldreq	r7, [r1], #-1793	; 0xfffff8ff
    4348:	02000001 	andeq	r0, r0, #1
    434c:	3f135023 	svccc	0x00135023
    4350:	01000014 	tsteq	r0, r4, lsl r0
    4354:	00cc1579 	sbceq	r1, ip, r9, ror r5
    4358:	23020000 	movwcs	r0, #8192	; 0x2000
    435c:	0c601354 	stcleq	3, cr1, [r0], #-336	; 0xfffffeb0
    4360:	7a010000 	bvc	44368 <__HEAP_SIZE+0x43368>
    4364:	0000cc15 	andeq	ip, r0, r5, lsl ip
    4368:	55230200 	strpl	r0, [r3, #-512]!	; 0xfffffe00
    436c:	000ea813 	andeq	sl, lr, r3, lsl r8
    4370:	117d0100 	cmnne	sp, r0, lsl #2
    4374:	000000d6 	ldrdeq	r0, [r0], -r6
    4378:	13562302 	cmpne	r6, #134217728	; 0x8000000
    437c:	00001412 	andeq	r1, r0, r2, lsl r4
    4380:	e3228101 			; <UNDEFINED> instruction: 0xe3228101
    4384:	02000003 	andeq	r0, r0, #3
    4388:	02005823 	andeq	r5, r0, #2293760	; 0x230000
    438c:	00000e28 	andeq	r0, r0, r8, lsr #28
    4390:	e3243a09 			; <UNDEFINED> instruction: 0xe3243a09
    4394:	02000003 	andeq	r0, r0, #3
    4398:	00000df1 	strdeq	r0, [r0], -r1
    439c:	e3244109 			; <UNDEFINED> instruction: 0xe3244109
    43a0:	12000003 	andne	r0, r0, #3
    43a4:	00000f8c 	andeq	r0, r0, ip, lsl #31
    43a8:	10440108 	subne	r0, r4, r8, lsl #2
    43ac:	000004ed 	andeq	r0, r0, sp, ror #9
    43b0:	00129f13 	andseq	r9, r2, r3, lsl pc
    43b4:	0e460100 	dvfeqs	f0, f6, f0
    43b8:	000004ed 	andeq	r0, r0, sp, ror #9
    43bc:	13002302 	movwne	r2, #770	; 0x302
    43c0:	00000cbf 			; <UNDEFINED> instruction: 0x00000cbf
    43c4:	ed0e4701 	stc	7, cr4, [lr, #-4]
    43c8:	02000004 	andeq	r0, r0, #4
    43cc:	07000423 	streq	r0, [r0, -r3, lsr #8]
    43d0:	0000c004 	andeq	ip, r0, r4
    43d4:	11be0200 			; <UNDEFINED> instruction: 0x11be0200
    43d8:	48010000 	stmdami	r1, {}	; <UNPREDICTABLE>
    43dc:	0004c103 	andeq	ip, r4, r3, lsl #2
    43e0:	0b141200 	bleq	508be8 <__RAM_SIZE+0x408be8>
    43e4:	01080000 	mrseq	r0, (UNDEF: 8)
    43e8:	052b104a 	streq	r1, [fp, #-74]!	; 0xffffffb6
    43ec:	6f130000 	svcvs	0x00130000
    43f0:	0100001f 	tsteq	r0, pc, lsl r0
    43f4:	0382124c 	orreq	r1, r2, #76, 4	; 0xc0000004
    43f8:	23020000 	movwcs	r0, #8192	; 0x2000
    43fc:	13001300 	movwne	r1, #768	; 0x300
    4400:	4d010000 	stcmi	0, cr0, [r1, #-0]
    4404:	00010411 	andeq	r0, r1, r1, lsl r4
    4408:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    440c:	0b2d0200 	bleq	b44c14 <__RAM_SIZE+0xa44c14>
    4410:	4e010000 	cdpmi	0, 0, cr0, cr1, cr0, {0}
    4414:	0004ff03 	andeq	pc, r4, r3, lsl #30
    4418:	01081600 	tsteq	r8, r0, lsl #12
    441c:	0559056c 	ldrbeq	r0, [r9, #-1388]	; 0xfffffa94
    4420:	c1170000 	tstgt	r7, r0
    4424:	01000012 	tsteq	r0, r2, lsl r0
    4428:	04f3196e 	ldrbteq	r1, [r3], #2414	; 0x96e
    442c:	91170000 	tstls	r7, r0
    4430:	0100000d 	tsteq	r0, sp
    4434:	052b196f 	streq	r1, [fp, #-2415]!	; 0xfffff691
    4438:	02000000 	andeq	r0, r0, #0
    443c:	0000140b 	andeq	r1, r0, fp, lsl #8
    4440:	e9038801 	stmdb	r3, {r0, fp, pc}
    4444:	02000003 	andeq	r0, r0, #3
    4448:	00001090 	muleq	r0, r0, r0
    444c:	59108c01 	ldmdbpl	r0, {r0, sl, fp, pc}
    4450:	06000005 	streq	r0, [r0], -r5
    4454:	00000565 	andeq	r0, r0, r5, ror #10
    4458:	000af918 	andeq	pc, sl, r8, lsl r9	; <UNPREDICTABLE>
    445c:	0cee0100 	stfeqe	f0, [lr]
    4460:	00f30117 	rscseq	r0, r3, r7, lsl r1
    4464:	211e0000 	tstcs	lr, r0
    4468:	21761000 	cmncs	r6, r0
    446c:	301a1000 	andscc	r1, sl, r0
    4470:	4b010000 	blmi	44478 <__HEAP_SIZE+0x43478>
    4474:	19000006 	stmdbne	r0, {r1, r2}
    4478:	000012c0 	andeq	r1, r0, r0, asr #5
    447c:	490cee01 	stmdbmi	ip, {r0, r9, sl, fp, sp, lr, pc}
    4480:	00000651 	andeq	r0, r0, r1, asr r6
    4484:	00003064 	andeq	r3, r0, r4, rrx
    4488:	0000305e 	andeq	r3, r0, lr, asr r0
    448c:	0014121a 	andseq	r1, r4, sl, lsl r2
    4490:	0cf00100 	ldfeqe	f0, [r0]
    4494:	00065613 	andeq	r5, r6, r3, lsl r6
    4498:	00309000 	eorseq	r9, r0, r0
    449c:	00308e00 	eorseq	r8, r0, r0, lsl #28
    44a0:	1abd1a00 	bne	fef4aca8 <__StackTop+0xc6e4aca8>
    44a4:	f1010000 	setend	le
    44a8:	00f3140c 	rscseq	r1, r3, ip, lsl #8
    44ac:	30b10000 	adcscc	r0, r1, r0
    44b0:	30a30000 	adccc	r0, r3, r0
    44b4:	e01b0000 	ands	r0, fp, r0
    44b8:	1a000002 	bne	44c8 <__HEAP_SIZE+0x34c8>
    44bc:	00000c60 	andeq	r0, r0, r0, ror #24
    44c0:	1a0cfd01 	bne	3438cc <__RAM_SIZE+0x2438cc>
    44c4:	000000d1 	ldrdeq	r0, [r0], -r1
    44c8:	0000310d 	andeq	r3, r0, sp, lsl #2
    44cc:	00003109 	andeq	r3, r0, r9, lsl #2
    44d0:	0021641c 	eoreq	r6, r1, ip, lsl r4
    44d4:	00217610 	eoreq	r7, r1, r0, lsl r6
    44d8:	00061a10 	andeq	r1, r6, r0, lsl sl
    44dc:	11ae1a00 			; <UNDEFINED> instruction: 0x11ae1a00
    44e0:	19010000 	stmdbne	r1, {}	; <UNPREDICTABLE>
    44e4:	0115110d 	tsteq	r5, sp, lsl #2
    44e8:	312f0000 			; <UNDEFINED> instruction: 0x312f0000
    44ec:	312d0000 			; <UNDEFINED> instruction: 0x312d0000
    44f0:	681d0000 	ldmdavs	sp, {}	; <UNPREDICTABLE>
    44f4:	70100021 	andsvc	r0, r0, r1, lsr #32
    44f8:	00000023 	andeq	r0, r0, r3, lsr #32
    44fc:	0021461e 	eoreq	r4, r1, lr, lsl r6
    4500:	000bfe10 	andeq	pc, fp, r0, lsl lr	; <UNPREDICTABLE>
    4504:	00063900 	andeq	r3, r6, r0, lsl #18
    4508:	50011f00 	andpl	r1, r1, r0, lsl #30
    450c:	1f007402 	svcne	0x00007402
    4510:	91025101 	tstls	r2, r1, lsl #2
    4514:	52011f6c 	andpl	r1, r1, #108, 30	; 0x1b0
    4518:	20003001 	andcs	r3, r0, r1
    451c:	1000215c 	andne	r2, r0, ip, asr r1
    4520:	0000237f 	andeq	r2, r0, pc, ror r3
    4524:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    4528:	00002c74 	andeq	r2, r0, r4, ror ip
    452c:	71040700 	tstvc	r4, r0, lsl #14
    4530:	06000005 	streq	r0, [r0], -r5
    4534:	0000064b 	andeq	r0, r0, fp, asr #12
    4538:	05650407 	strbeq	r0, [r5, #-1031]!	; 0xfffffbf9
    453c:	56060000 	strpl	r0, [r6], -r0
    4540:	21000006 	tstcs	r0, r6
    4544:	000bda01 	andeq	sp, fp, r1, lsl #20
    4548:	0cdc0100 	ldfeqe	f0, [ip], {0}
    454c:	04b5011c 	ldrteq	r0, [r5], #284	; 0x11c
	...
    4558:	31420000 	mrscc	r0, (UNDEF: 66)
    455c:	c3010000 	movwgt	r0, #4096	; 0x1000
    4560:	19000006 	stmdbne	r0, {r1, r2}
    4564:	00000fba 			; <UNDEFINED> instruction: 0x00000fba
    4568:	490cdc01 	stmdbmi	ip, {r0, sl, fp, ip, lr, pc}
    456c:	000004a9 	andeq	r0, r0, r9, lsr #9
    4570:	0000317e 	andeq	r3, r0, lr, ror r1
    4574:	0000317a 	andeq	r3, r0, sl, ror r1
    4578:	001abd22 	andseq	fp, sl, r2, lsr #26
    457c:	0cde0100 	ldfeqe	f0, [lr], {0}
    4580:	0004b520 	andeq	fp, r4, r0, lsr #10
    4584:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    4588:	00000020 	andeq	r0, r0, r0, lsr #32
    458c:	000fa500 	andeq	sl, pc, r0, lsl #10
    4590:	50011f00 	andpl	r1, r1, r0, lsl #30
    4594:	5001f303 	andpl	pc, r1, r3, lsl #6
    4598:	0251011f 	subseq	r0, r1, #-1073741817	; 0xc0000007
    459c:	011f7491 			; <UNDEFINED> instruction: 0x011f7491
    45a0:	00300152 	eorseq	r0, r0, r2, asr r1
    45a4:	15012100 	strne	r2, [r1, #-256]	; 0xffffff00
    45a8:	01000013 	tsteq	r0, r3, lsl r0
    45ac:	011c0cc9 	tsteq	ip, r9, asr #25
    45b0:	000004b5 			; <UNDEFINED> instruction: 0x000004b5
	...
    45bc:	0000319f 	muleq	r0, pc, r1	; <UNPREDICTABLE>
    45c0:	00073c01 	andeq	r3, r7, r1, lsl #24
    45c4:	0fba1900 	svceq	0x00ba1900
    45c8:	c9010000 	stmdbgt	r1, {}	; <UNPREDICTABLE>
    45cc:	04a9420c 	strteq	r4, [r9], #524	; 0x20c
    45d0:	31db0000 	bicscc	r0, fp, r0
    45d4:	31d70000 	bicscc	r0, r7, r0
    45d8:	85190000 	ldrhi	r0, [r9, #-0]
    45dc:	01000021 	tsteq	r0, r1, lsr #32
    45e0:	26420cca 	strbcs	r0, [r2], -sl, asr #25
    45e4:	02000001 	andeq	r0, r0, #1
    45e8:	fc000032 	stc2	0, cr0, [r0], {50}	; 0x32
    45ec:	22000031 	andcs	r0, r0, #49	; 0x31
    45f0:	00001abd 			; <UNDEFINED> instruction: 0x00001abd
    45f4:	200ccc01 	andcs	ip, ip, r1, lsl #24
    45f8:	000004b5 			; <UNDEFINED> instruction: 0x000004b5
    45fc:	20749102 	rsbscs	r9, r4, r2, lsl #2
    4600:	00000000 	andeq	r0, r0, r0
    4604:	00001557 	andeq	r1, r0, r7, asr r5
    4608:	0350011f 	cmpeq	r0, #-1073741817	; 0xc0000007
    460c:	1f5001f3 	svcne	0x005001f3
    4610:	91025101 	tstls	r2, r1, lsl #2
    4614:	52011f74 	andpl	r1, r1, #116, 30	; 0x1d0
    4618:	5101f303 	tstpl	r1, r3, lsl #6	; <UNPREDICTABLE>
    461c:	01210000 			; <UNDEFINED> instruction: 0x01210000
    4620:	00001098 	muleq	r0, r8, r0
    4624:	100ca001 	andne	sl, ip, r1
    4628:	0000f301 	andeq	pc, r0, r1, lsl #6
	...
    4634:	00322e00 	eorseq	r2, r2, r0, lsl #28
    4638:	07c30100 	strbeq	r0, [r3, r0, lsl #2]
    463c:	f7190000 			; <UNDEFINED> instruction: 0xf7190000
    4640:	01000011 	tsteq	r0, r1, lsl r0
    4644:	b53c0ca0 	ldrlt	r0, [ip, #-3232]!	; 0xfffff360
    4648:	5a000004 	bpl	4660 <__HEAP_SIZE+0x3660>
    464c:	4e000032 	mcrmi	0, 0, r0, cr0, cr2, {1}
    4650:	19000032 	stmdbne	r0, {r1, r4, r5}
    4654:	00000fba 			; <UNDEFINED> instruction: 0x00000fba
    4658:	360ca101 	strcc	sl, [ip], -r1, lsl #2
    465c:	000004a9 	andeq	r0, r0, r9, lsr #9
    4660:	000032af 	andeq	r3, r0, pc, lsr #5
    4664:	000032a7 	andeq	r3, r0, r7, lsr #5
    4668:	001abd1a 	andseq	fp, sl, sl, lsl sp
    466c:	0ca30100 	stfeqs	f0, [r3]
    4670:	0000f314 	andeq	pc, r0, r4, lsl r3	; <UNPREDICTABLE>
    4674:	0032ed00 	eorseq	lr, r2, r0, lsl #26
    4678:	0032e900 	eorseq	lr, r2, r0, lsl #18
    467c:	11f61a00 	mvnsne	r1, r0, lsl #20
    4680:	a4010000 	strge	r0, [r1], #-0
    4684:	065c190c 	ldrbeq	r1, [ip], -ip, lsl #18
    4688:	33190000 	tstcc	r9, #0
    468c:	330d0000 	movwcc	r0, #53248	; 0xd000
    4690:	001d0000 	andseq	r0, sp, r0
    4694:	8e000000 	cdphi	0, 0, cr0, cr0, cr0, {0}
    4698:	1d000023 	stcne	0, cr0, [r0, #-140]	; 0xffffff74
    469c:	00000000 	andeq	r0, r0, r0
    46a0:	0000239c 	muleq	r0, ip, r3
    46a4:	30012100 	andcc	r2, r1, r0, lsl #2
    46a8:	01000014 	tsteq	r0, r4, lsl r0
    46ac:	01100c7a 	tsteq	r0, sl, ror ip
    46b0:	000000f3 	strdeq	r0, [r0], -r3
	...
    46bc:	00003366 	andeq	r3, r0, r6, ror #6
    46c0:	00083501 	andeq	r3, r8, r1, lsl #10
    46c4:	11f71900 	mvnsne	r1, r0, lsl #18
    46c8:	7a010000 	bvc	446d0 <__HEAP_SIZE+0x436d0>
    46cc:	04b5370c 	ldrteq	r3, [r5], #1804	; 0x70c
    46d0:	33940000 	orrscc	r0, r4, #0
    46d4:	33860000 	orrcc	r0, r6, #0
    46d8:	ba190000 	blt	6446e0 <__RAM_SIZE+0x5446e0>
    46dc:	0100000f 	tsteq	r0, pc
    46e0:	a9310c7b 	ldmdbge	r1!, {r0, r1, r3, r4, r5, r6, sl, fp}
    46e4:	f6000004 			; <UNDEFINED> instruction: 0xf6000004
    46e8:	f2000033 	vqadd.s8	d0, d0, d19
    46ec:	1a000033 	bne	47c0 <__HEAP_SIZE+0x37c0>
    46f0:	00001abd 			; <UNDEFINED> instruction: 0x00001abd
    46f4:	140c7d01 	strne	r7, [ip], #-3329	; 0xfffff2ff
    46f8:	000000f3 	strdeq	r0, [r0], -r3
    46fc:	00003418 	andeq	r3, r0, r8, lsl r4
    4700:	00003414 	andeq	r3, r0, r4, lsl r4
    4704:	0000001d 	andeq	r0, r0, sp, lsl r0
    4708:	00238e00 	eoreq	r8, r3, r0, lsl #28
    470c:	00001d00 	andeq	r1, r0, r0, lsl #26
    4710:	239c0000 	orrscs	r0, ip, #0
    4714:	21000000 	mrscs	r0, (UNDEF: 0)
    4718:	0010b701 	andseq	fp, r0, r1, lsl #14
    471c:	0c680100 	stfeqe	f0, [r8], #-0
    4720:	04a90116 	strteq	r0, [r9], #278	; 0x116
	...
    472c:	34370000 	ldrtcc	r0, [r7], #-0
    4730:	9b010000 	blls	44738 <__HEAP_SIZE+0x43738>
    4734:	19000008 	stmdbne	r0, {r3}
    4738:	00001455 	andeq	r1, r0, r5, asr r4
    473c:	390c6801 	stmdbcc	ip, {r0, fp, sp, lr}
    4740:	00000115 	andeq	r0, r0, r5, lsl r1
    4744:	0000345b 	andeq	r3, r0, fp, asr r4
    4748:	00003457 	andeq	r3, r0, r7, asr r4
    474c:	0012c01a 	andseq	ip, r2, sl, lsl r0
    4750:	0c6a0100 	stfeqe	f0, [sl], #-0
    4754:	0004a91a 	andeq	sl, r4, sl, lsl r9
    4758:	00347e00 	eorseq	r7, r4, r0, lsl #28
    475c:	00347c00 	eorseq	r7, r4, r0, lsl #24
    4760:	00002000 	andeq	r2, r0, r0
    4764:	207e0000 	rsbscs	r0, lr, r0
    4768:	011f0000 	tsteq	pc, r0
    476c:	01f30350 	mvnseq	r0, r0, asr r3
    4770:	51011f50 	tstpl	r1, r0, asr pc
    4774:	011f3401 	tsteq	pc, r1, lsl #8
    4778:	00300152 	eorseq	r0, r0, r2, asr r1
    477c:	d7012300 	strle	r2, [r1, -r0, lsl #6]
    4780:	01000011 	tsteq	r0, r1, lsl r0
    4784:	010a0c3c 	tsteq	sl, ip, lsr ip
    4788:	100023cc 	andne	r2, r0, ip, asr #7
    478c:	1000241e 	andne	r2, r0, lr, lsl r4
    4790:	00003491 	muleq	r0, r1, r4
    4794:	00094e01 	andeq	r4, r9, r1, lsl #28
    4798:	12c11900 	sbcne	r1, r1, #0, 18
    479c:	3c010000 	stccc	0, cr0, [r1], {-0}
    47a0:	03d2380c 	bicseq	r3, r2, #12, 16	; 0xc0000
    47a4:	34b50000 	ldrtcc	r0, [r5], #0
    47a8:	34b10000 	ldrtcc	r0, [r1], #0
    47ac:	85190000 	ldrhi	r0, [r9, #-0]
    47b0:	01000021 	tsteq	r0, r1, lsr #32
    47b4:	1a350c3d 	bne	d478b0 <__RAM_SIZE+0xc478b0>
    47b8:	d7000001 	strle	r0, [r0, -r1]
    47bc:	d3000034 	movwle	r0, #52	; 0x34
    47c0:	19000034 	stmdbne	r0, {r2, r4, r5}
    47c4:	00000c23 	andeq	r0, r0, r3, lsr #24
    47c8:	3b0c3e01 	blcc	313fd4 <__RAM_SIZE+0x213fd4>
    47cc:	000000ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    47d0:	000034f9 	strdeq	r3, [r0], -r9
    47d4:	000034f5 	strdeq	r3, [r0], -r5
    47d8:	0012c01a 	andseq	ip, r2, sl, lsl r0
    47dc:	0c400100 	stfeqe	f0, [r0], {-0}
    47e0:	00065c19 	andeq	r5, r6, r9, lsl ip
    47e4:	00351b00 	eorseq	r1, r5, r0, lsl #22
    47e8:	00351700 	eorseq	r1, r5, r0, lsl #14
    47ec:	23d81d00 	bicscs	r1, r8, #0, 26
    47f0:	238e1000 	orrcs	r1, lr, #0
    47f4:	f41d0000 			; <UNDEFINED> instruction: 0xf41d0000
    47f8:	9c100023 	ldcls	0, cr0, [r0], {35}	; 0x23
    47fc:	1e000023 	cdpne	0, 0, cr0, cr0, cr3, {1}
    4800:	100023fe 	strdne	r2, [r0], -lr
    4804:	00000abd 			; <UNDEFINED> instruction: 0x00000abd
    4808:	00000931 	andeq	r0, r0, r1, lsr r9
    480c:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    4810:	20000074 	andcs	r0, r0, r4, ror r0
    4814:	1000241c 	andne	r2, r0, ip, lsl r4
    4818:	000023aa 	andeq	r2, r0, sl, lsr #7
    481c:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    4820:	011f2c74 	tsteq	pc, r4, ror ip	; <UNPREDICTABLE>
    4824:	00750251 	rsbseq	r0, r5, r1, asr r2
    4828:	0252011f 	subseq	r0, r2, #-1073741817	; 0xc0000007
    482c:	00000076 	andeq	r0, r0, r6, ror r0
    4830:	126f0124 	rsbne	r0, pc, #36, 2
    4834:	78010000 	stmdavc	r1, {}	; <UNPREDICTABLE>
    4838:	f3010c0a 			; <UNDEFINED> instruction: 0xf3010c0a
	...
    4844:	02000000 	andeq	r0, r0, #0
    4848:	ad01007d 	stcge	0, cr0, [r1, #-500]	; 0xfffffe0c
    484c:	19000009 	stmdbne	r0, {r0, r3}
    4850:	000012c1 	andeq	r1, r0, r1, asr #5
    4854:	3a0a7801 	bcc	2a2860 <__RAM_SIZE+0x1a2860>
    4858:	000003de 	ldrdeq	r0, [r0], -lr
    485c:	00003541 	andeq	r3, r0, r1, asr #10
    4860:	00003539 	andeq	r3, r0, r9, lsr r5
    4864:	001abd1a 	andseq	fp, sl, sl, lsl sp
    4868:	0a7a0100 	beq	1e84c70 <__RAM_SIZE+0x1d84c70>
    486c:	0000f310 	andeq	pc, r0, r0, lsl r3	; <UNPREDICTABLE>
    4870:	00357d00 	eorseq	r7, r5, r0, lsl #26
    4874:	00357b00 	eorseq	r7, r5, r0, lsl #22
    4878:	12c01a00 	sbcne	r1, r0, #0, 20
    487c:	7b010000 	blvc	44884 <__HEAP_SIZE+0x43884>
    4880:	065c150a 	ldrbeq	r1, [ip], -sl, lsl #10
    4884:	35990000 	ldrcc	r0, [r9]
    4888:	35910000 	ldrcc	r0, [r1]
    488c:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    4890:	00000f7d 	andeq	r0, r0, sp, ror pc
    4894:	130a6301 	movwne	r6, #41729	; 0xa301
    4898:	0000f301 	andeq	pc, r0, r1, lsl #6
	...
    48a4:	0035d300 	eorseq	sp, r5, r0, lsl #6
    48a8:	0a090100 	beq	244cb0 <__RAM_SIZE+0x144cb0>
    48ac:	c0190000 	andsgt	r0, r9, r0
    48b0:	01000012 	tsteq	r0, r2, lsl r0
    48b4:	4b330a63 	blmi	cc7248 <__RAM_SIZE+0xbc7248>
    48b8:	fd000006 	stc2	0, cr0, [r0, #-24]	; 0xffffffe8
    48bc:	f3000035 	vqadd.u8	d0, d0, d21
    48c0:	1a000035 	bne	499c <__HEAP_SIZE+0x399c>
    48c4:	00001abd 			; <UNDEFINED> instruction: 0x00001abd
    48c8:	100a6501 	andne	r6, sl, r1, lsl #10
    48cc:	000000f3 	strdeq	r0, [r0], -r3
    48d0:	00003644 	andeq	r3, r0, r4, asr #12
    48d4:	00003642 	andeq	r3, r0, r2, asr #12
    48d8:	0000001d 	andeq	r0, r0, sp, lsl r0
    48dc:	00238e00 	eoreq	r8, r3, r0, lsl #28
    48e0:	00001d00 	andeq	r1, r0, r0, lsl #26
    48e4:	239c0000 	orrscs	r0, ip, #0
    48e8:	24000000 	strcs	r0, [r0], #-0
    48ec:	0013f101 	andseq	pc, r3, r1, lsl #2
    48f0:	0a4b0100 	beq	12c4cf8 <__RAM_SIZE+0x11c4cf8>
    48f4:	00f3010c 	rscseq	r0, r3, ip, lsl #2
	...
    4900:	7d020000 	stcvc	0, cr0, [r2, #-0]
    4904:	0a610100 	beq	1844d0c <__RAM_SIZE+0x1744d0c>
    4908:	c1190000 	tstgt	r9, r0
    490c:	01000012 	tsteq	r0, r2, lsl r0
    4910:	de3b0a4b 	vsuble.f32	s0, s22, s22
    4914:	5f000003 	svcpl	0x00000003
    4918:	57000036 	smladxpl	r0, r6, r0, r0
    491c:	25000036 	strcs	r0, [r0, #-54]	; 0xffffffca
    4920:	00001abd 			; <UNDEFINED> instruction: 0x00001abd
    4924:	100a4d01 	andne	r4, sl, r1, lsl #26
    4928:	000000f3 	strdeq	r0, [r0], -r3
    492c:	12c01a00 	sbcne	r1, r0, #0, 20
    4930:	4e010000 	cdpmi	0, 0, cr0, cr1, cr0, {0}
    4934:	065c150a 	ldrbeq	r1, [ip], -sl, lsl #10
    4938:	36a10000 	strtcc	r0, [r1], r0
    493c:	36990000 	ldrcc	r0, [r9], r0
    4940:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    4944:	00000d41 	andeq	r0, r0, r1, asr #26
    4948:	130a3601 	movwne	r3, #42497	; 0xa601
    494c:	0000f301 	andeq	pc, r0, r1, lsl #6
    4950:	00206a00 	eoreq	r6, r0, r0, lsl #20
    4954:	00208410 	eoreq	r8, r0, r0, lsl r4
    4958:	0036db10 	eorseq	sp, r6, r0, lsl fp
    495c:	0abd0100 	beq	fef44d64 <__StackTop+0xc6e44d64>
    4960:	c0190000 	andsgt	r0, r9, r0
    4964:	01000012 	tsteq	r0, r2, lsl r0
    4968:	4b340a36 	blmi	d07248 <__RAM_SIZE+0xc07248>
    496c:	05000006 	streq	r0, [r0, #-6]
    4970:	fb000037 	blx	4a56 <__HEAP_SIZE+0x3a56>
    4974:	1a000036 	bne	4a54 <__HEAP_SIZE+0x3a54>
    4978:	00001abd 			; <UNDEFINED> instruction: 0x00001abd
    497c:	100a3801 	andne	r3, sl, r1, lsl #16
    4980:	000000f3 	strdeq	r0, [r0], -r3
    4984:	0000374c 	andeq	r3, r0, ip, asr #14
    4988:	0000374a 	andeq	r3, r0, sl, asr #14
    498c:	0020721d 	eoreq	r7, r0, sp, lsl r2
    4990:	00238e10 	eoreq	r8, r3, r0, lsl lr
    4994:	207c1d00 	rsbscs	r1, ip, r0, lsl #26
    4998:	239c1000 	orrscs	r1, ip, #0
    499c:	26000000 	strcs	r0, [r0], -r0
    49a0:	000013cf 	andeq	r1, r0, pc, asr #7
    49a4:	0d09be01 	stceq	14, cr11, [r9, #-4]
    49a8:	00217601 	eoreq	r7, r1, r1, lsl #12
    49ac:	0021f810 	eoreq	pc, r1, r0, lsl r8	; <UNPREDICTABLE>
    49b0:	00375f10 	eorseq	r5, r7, r0, lsl pc
    49b4:	0baf0100 	bleq	febc4dbc <__StackTop+0xc6ac4dbc>
    49b8:	c0190000 	andsgt	r0, r9, r0
    49bc:	01000012 	tsteq	r0, r2, lsl r0
    49c0:	5c2d09be 			; <UNDEFINED> instruction: 0x5c2d09be
    49c4:	83000006 	movwhi	r0, #6
    49c8:	7f000037 	svcvc	0x00000037
    49cc:	1c000037 	stcne	0, cr0, [r0], {55}	; 0x37
    49d0:	1000217e 	andne	r2, r0, lr, ror r1
    49d4:	100021be 			; <UNDEFINED> instruction: 0x100021be
    49d8:	00000b4a 	andeq	r0, r0, sl, asr #22
    49dc:	000c601a 	andeq	r6, ip, sl, lsl r0
    49e0:	09c80100 	stmibeq	r8, {r8}^
    49e4:	0000c010 	andeq	ip, r0, r0, lsl r0
    49e8:	0037a500 	eorseq	sl, r7, r0, lsl #10
    49ec:	0037a100 	eorseq	sl, r7, r0, lsl #2
    49f0:	21921e00 	orrscs	r1, r2, r0, lsl #28
    49f4:	237f1000 	cmncs	pc, #0
    49f8:	0b230000 	bleq	8c4a00 <__RAM_SIZE+0x7c4a00>
    49fc:	011f0000 	tsteq	pc, r0
    4a00:	2c750250 	lfmcs	f0, 2, [r5], #-320	; 0xfffffec0
    4a04:	21a81e00 			; <UNDEFINED> instruction: 0x21a81e00
    4a08:	05761000 	ldrbeq	r1, [r6, #-0]!
    4a0c:	0b370000 	bleq	dc4a14 <__RAM_SIZE+0xcc4a14>
    4a10:	011f0000 	tsteq	pc, r0
    4a14:	00750250 	rsbseq	r0, r5, r0, asr r2
    4a18:	21b01d00 	lslscs	r1, r0, #26
    4a1c:	23b91000 			; <UNDEFINED> instruction: 0x23b91000
    4a20:	b61d0000 	ldrlt	r0, [sp], -r0
    4a24:	b9100021 	ldmdblt	r0, {r0, r5}
    4a28:	00000023 	andeq	r0, r0, r3, lsr #32
    4a2c:	0021c61c 	eoreq	ip, r1, ip, lsl r6
    4a30:	0021f210 	eoreq	pc, r1, r0, lsl r2	; <UNPREDICTABLE>
    4a34:	000b8a10 	andeq	r8, fp, r0, lsl sl
    4a38:	143f1a00 	ldrtne	r1, [pc], #-2560	; 4a40 <__HEAP_SIZE+0x3a40>
    4a3c:	19010000 	stmdbne	r1, {}	; <UNPREDICTABLE>
    4a40:	00c0100a 	sbceq	r1, r0, sl
    4a44:	37c70000 	strbcc	r0, [r7, r0]
    4a48:	37c30000 	strbcc	r0, [r3, r0]
    4a4c:	e21e0000 	ands	r0, lr, #0
    4a50:	7f100021 	svcvc	0x00100021
    4a54:	80000023 	andhi	r0, r0, r3, lsr #32
    4a58:	1f00000b 	svcne	0x0000000b
    4a5c:	75025001 	strvc	r5, [r2, #-1]
    4a60:	ea1d0010 	b	744aa8 <__RAM_SIZE+0x644aa8>
    4a64:	b9100021 	ldmdblt	r0, {r0, r5}
    4a68:	00000023 	andeq	r0, r0, r3, lsr #32
    4a6c:	00217e1d 	eoreq	r7, r1, sp, lsl lr
    4a70:	00238e10 	eoreq	r8, r3, r0, lsl lr
    4a74:	21c21d00 	biccs	r1, r2, r0, lsl #26
    4a78:	239c1000 	orrscs	r1, ip, #0
    4a7c:	c61d0000 	ldrgt	r0, [sp], -r0
    4a80:	8e100021 	cdphi	0, 1, cr0, cr0, cr1, {1}
    4a84:	1d000023 	stcne	0, cr0, [r0, #-140]	; 0xffffff74
    4a88:	100021f6 	strdne	r2, [r0], -r6
    4a8c:	0000239c 	muleq	r0, ip, r3
    4a90:	13542600 	cmpne	r4, #0, 12
    4a94:	a9010000 	stmdbge	r1, {}	; <UNPREDICTABLE>
    4a98:	fa010d09 	blx	47ec4 <__HEAP_SIZE+0x46ec4>
    4a9c:	1e100020 	cdpne	0, 1, cr0, cr0, cr0, {1}
    4aa0:	e5100021 	ldr	r0, [r0, #-33]	; 0xffffffdf
    4aa4:	01000037 	tsteq	r0, r7, lsr r0
    4aa8:	00000bfe 	strdeq	r0, [r0], -lr
    4aac:	0012c019 	andseq	ip, r2, r9, lsl r0
    4ab0:	09a90100 	stmibeq	r9!, {r8}
    4ab4:	00065c33 	andeq	r5, r6, r3, lsr ip
    4ab8:	00381900 	eorseq	r1, r8, r0, lsl #18
    4abc:	00381100 	eorseq	r1, r8, r0, lsl #2
    4ac0:	0d511900 	vldreq.16	s3, [r1, #-0]	; <UNPREDICTABLE>
    4ac4:	aa010000 	bge	44acc <__HEAP_SIZE+0x43acc>
    4ac8:	00a83009 	adceq	r3, r8, r9
    4acc:	38580000 	ldmdacc	r8, {}^	; <UNPREDICTABLE>
    4ad0:	38500000 	ldmdacc	r0, {}^	; <UNPREDICTABLE>
    4ad4:	1a1d0000 	bne	744adc <__RAM_SIZE+0x644adc>
    4ad8:	c8100021 	ldmdagt	r0, {r0, r5}
    4adc:	00000023 	andeq	r0, r0, r3, lsr #32
    4ae0:	000e8318 	andeq	r8, lr, r8, lsl r3
    4ae4:	09560100 	ldmdbeq	r6, {r8}^
    4ae8:	00f30113 	rscseq	r0, r3, r3, lsl r1
    4aec:	20840000 	addcs	r0, r4, r0
    4af0:	20fa1000 	rscscs	r1, sl, r0
    4af4:	388f1000 	stmcc	pc, {ip}	; <UNPREDICTABLE>
    4af8:	a2010000 	andge	r0, r1, #0
    4afc:	1900000c 	stmdbne	r0, {r2, r3}
    4b00:	000012c0 	andeq	r1, r0, r0, asr #5
    4b04:	37095601 	strcc	r5, [r9, -r1, lsl #12]
    4b08:	0000065c 	andeq	r0, r0, ip, asr r6
    4b0c:	000038bf 			; <UNDEFINED> instruction: 0x000038bf
    4b10:	000038af 	andeq	r3, r0, pc, lsr #17
    4b14:	00124219 	andseq	r4, r2, r9, lsl r2
    4b18:	09570100 	ldmdbeq	r7, {r8}^
    4b1c:	0000b434 	andeq	fp, r0, r4, lsr r4
    4b20:	00392f00 	eorseq	r2, r9, r0, lsl #30
    4b24:	00391f00 	eorseq	r1, r9, r0, lsl #30
    4b28:	14261900 	strtne	r1, [r6], #-2304	; 0xfffff700
    4b2c:	58010000 	stmdapl	r1, {}	; <UNPREDICTABLE>
    4b30:	00ff3809 	rscseq	r3, pc, r9, lsl #16
    4b34:	399f0000 	ldmibcc	pc, {}	; <UNPREDICTABLE>
    4b38:	399b0000 	ldmibcc	fp, {}	; <UNPREDICTABLE>
    4b3c:	bd1a0000 	ldclt	0, cr0, [sl, #-0]
    4b40:	0100001a 	tsteq	r0, sl, lsl r0
    4b44:	f310095a 	vmul.p16	q0, q0, q5
    4b48:	c7000000 	strgt	r0, [r0, -r0]
    4b4c:	bd000039 	stclt	0, cr0, [r0, #-228]	; 0xffffff1c
    4b50:	1a000039 	bne	4c3c <__HEAP_SIZE+0x3c3c>
    4b54:	00000d7f 	andeq	r0, r0, pc, ror sp
    4b58:	11095b01 	tstne	r9, r1, lsl #22
    4b5c:	00000104 	andeq	r0, r0, r4, lsl #2
    4b60:	00003a0f 	andeq	r3, r0, pc, lsl #20
    4b64:	00003a09 	andeq	r3, r0, r9, lsl #20
    4b68:	0020a21d 	eoreq	sl, r0, sp, lsl r2
    4b6c:	0023d510 	eoreq	sp, r3, r0, lsl r5
    4b70:	20b01d00 	adcscs	r1, r0, r0, lsl #26
    4b74:	23c81000 	biccs	r1, r8, #0
    4b78:	cc1d0000 	ldcgt	0, cr0, [sp], {-0}
    4b7c:	c8100020 	ldmdagt	r0, {r5}
    4b80:	00000023 	andeq	r0, r0, r3, lsr #32
    4b84:	000d5a27 	andeq	r5, sp, r7, lsr #20
    4b88:	093d0100 	ldmdbeq	sp!, {r8}
    4b8c:	01040118 	tsteq	r4, r8, lsl r1
	...
    4b98:	7d020000 	stcvc	0, cr0, [r2, #-0]
    4b9c:	0ceb0100 	stfeqe	f0, [fp]
    4ba0:	c0190000 	andsgt	r0, r9, r0
    4ba4:	01000012 	tsteq	r0, r2, lsl r0
    4ba8:	5154093d 	cmppl	r4, sp, lsr r9
    4bac:	40000006 	andmi	r0, r0, r6
    4bb0:	3a00003a 	bcc	4ca0 <__HEAP_SIZE+0x3ca0>
    4bb4:	1a00003a 	bne	4ca4 <__HEAP_SIZE+0x3ca4>
    4bb8:	00001129 	andeq	r1, r0, r9, lsr #2
    4bbc:	15093f01 	strne	r3, [r9, #-3841]	; 0xfffff0ff
    4bc0:	00000104 	andeq	r0, r0, r4, lsl #2
    4bc4:	00003a6e 	andeq	r3, r0, lr, ror #20
    4bc8:	00003a6c 	andeq	r3, r0, ip, ror #20
    4bcc:	e4012400 	str	r2, [r1], #-1024	; 0xfffffc00
    4bd0:	0100000f 	tsteq	r0, pc
    4bd4:	010d0931 	tsteq	sp, r1, lsr r9
    4bd8:	00000104 	andeq	r0, r0, r4, lsl #2
	...
    4be4:	01007d02 	tsteq	r0, r2, lsl #26
    4be8:	00000d20 	andeq	r0, r0, r0, lsr #26
    4bec:	0012c119 	andseq	ip, r2, r9, lsl r1
    4bf0:	09310100 	ldmdbeq	r1!, {r8}
    4bf4:	0003d232 	andeq	sp, r3, r2, lsr r2
    4bf8:	003a8500 	eorseq	r8, sl, r0, lsl #10
    4bfc:	003a8100 	eorseq	r8, sl, r0, lsl #2
    4c00:	01240000 			; <UNDEFINED> instruction: 0x01240000
    4c04:	0000122a 	andeq	r1, r0, sl, lsr #4
    4c08:	0d092701 	stceq	7, cr2, [r9, #-4]
    4c0c:	00010401 	andeq	r0, r1, r1, lsl #8
	...
    4c18:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    4c1c:	000d5501 	andeq	r5, sp, r1, lsl #10
    4c20:	12c11900 	sbcne	r1, r1, #0, 18
    4c24:	27010000 	strcs	r0, [r1, -r0]
    4c28:	03d23409 	bicseq	r3, r2, #150994944	; 0x9000000
    4c2c:	3aaa0000 	bcc	fea84c34 <__StackTop+0xc6984c34>
    4c30:	3aa60000 	bcc	fe984c38 <__StackTop+0xc6884c38>
    4c34:	23000000 	movwcs	r0, #0
    4c38:	000cb201 	andeq	fp, ip, r1, lsl #4
    4c3c:	08ce0100 	stmiaeq	lr, {r8}^
    4c40:	00000106 	andeq	r0, r0, r6, lsl #2
    4c44:	00000000 	andeq	r0, r0, r0
    4c48:	3acb0000 	bcc	ff2c4c50 <__StackTop+0xc71c4c50>
    4c4c:	a5010000 	strge	r0, [r1, #-0]
    4c50:	1900000d 	stmdbne	r0, {r0, r2, r3}
    4c54:	000012c1 	andeq	r1, r0, r1, asr #5
    4c58:	2208ce01 	andcs	ip, r8, #1, 28
    4c5c:	000003d2 	ldrdeq	r0, [r0], -r2
    4c60:	00003af3 	strdeq	r3, [r0], -r3	; <UNPREDICTABLE>
    4c64:	00003aeb 	andeq	r3, r0, fp, ror #21
    4c68:	0012c01a 	andseq	ip, r2, sl, lsl r0
    4c6c:	08d00100 	ldmeq	r0, {r8}^
    4c70:	00065c15 	andeq	r5, r6, r5, lsl ip
    4c74:	003b3500 	eorseq	r3, fp, r0, lsl #10
    4c78:	003b2d00 	eorseq	r2, fp, r0, lsl #26
    4c7c:	00001d00 	andeq	r1, r0, r0, lsl #26
    4c80:	23e40000 	mvncs	r0, #0
    4c84:	24000000 	strcs	r0, [r0], #-0
    4c88:	000f1f01 	andeq	r1, pc, r1, lsl #30
    4c8c:	08be0100 	ldmeq	lr!, {r8}
    4c90:	0104010d 	tsteq	r4, sp, lsl #2
	...
    4c9c:	7d020000 	stcvc	0, cr0, [r2, #-0]
    4ca0:	0e040100 	adfeqs	f0, f4, f0
    4ca4:	c1190000 	tstgt	r9, r0
    4ca8:	01000012 	tsteq	r0, r2, lsl r0
    4cac:	de4008be 	mcrle	8, 2, r0, cr0, cr14, {5}
    4cb0:	73000003 	movwvc	r0, #3
    4cb4:	6f00003b 	svcvs	0x0000003b
    4cb8:	1a00003b 	bne	4dac <__HEAP_SIZE+0x3dac>
    4cbc:	00000ca9 	andeq	r0, r0, r9, lsr #25
    4cc0:	1108c001 	tstne	r8, r1
    4cc4:	00000104 	andeq	r0, r0, r4, lsl #2
    4cc8:	00003b96 	muleq	r0, r6, fp
    4ccc:	00003b94 	muleq	r0, r4, fp
    4cd0:	0012c01a 	andseq	ip, r2, sl, lsl r0
    4cd4:	08c10100 	stmiaeq	r1, {r8}^
    4cd8:	00065c15 	andeq	r5, r6, r5, lsl ip
    4cdc:	003bad00 	eorseq	sl, fp, r0, lsl #26
    4ce0:	003ba900 	eorseq	sl, fp, r0, lsl #18
    4ce4:	01210000 			; <UNDEFINED> instruction: 0x01210000
    4ce8:	00000c49 	andeq	r0, r0, r9, asr #24
    4cec:	0d08a901 	vstreq.16	s20, [r8, #-2]	; <UNPREDICTABLE>
    4cf0:	00010401 	andeq	r0, r1, r1, lsl #8
	...
    4cfc:	003bce00 	eorseq	ip, fp, r0, lsl #28
    4d00:	0e760100 	rpweqs	f0, f6, f0
    4d04:	c1190000 	tstgt	r9, r0
    4d08:	01000012 	tsteq	r0, r2, lsl r0
    4d0c:	de3908a9 	cdple	8, 3, cr0, cr9, cr9, {5}
    4d10:	f4000003 	vst4.8	{d0-d3}, [r0], r3
    4d14:	ee00003b 	mcr	0, 0, r0, cr0, cr11, {1}
    4d18:	1a00003b 	bne	4e0c <__HEAP_SIZE+0x3e0c>
    4d1c:	00000ca9 	andeq	r0, r0, r9, lsr #25
    4d20:	1108ab01 	tstne	r8, r1, lsl #22
    4d24:	00000104 	andeq	r0, r0, r4, lsl #2
    4d28:	00003c22 	andeq	r3, r0, r2, lsr #24
    4d2c:	00003c20 	andeq	r3, r0, r0, lsr #24
    4d30:	0012c01a 	andseq	ip, r2, sl, lsl r0
    4d34:	08ac0100 	stmiaeq	ip!, {r8}
    4d38:	00065c15 	andeq	r5, r6, r5, lsl ip
    4d3c:	003c3b00 	eorseq	r3, ip, r0, lsl #22
    4d40:	003c3500 	eorseq	r3, ip, r0, lsl #10
    4d44:	00001d00 	andeq	r1, r0, r0, lsl #26
    4d48:	238e0000 	orrcs	r0, lr, #0
    4d4c:	001d0000 	andseq	r0, sp, r0
    4d50:	9c000000 	stcls	0, cr0, [r0], {-0}
    4d54:	00000023 	andeq	r0, r0, r3, lsr #32
    4d58:	12880121 	addne	r0, r8, #1073741832	; 0x40000008
    4d5c:	95010000 	strls	r0, [r1, #-0]
    4d60:	04010d08 	streq	r0, [r1], #-3336	; 0xfffff2f8
    4d64:	00000001 	andeq	r0, r0, r1
    4d68:	00000000 	andeq	r0, r0, r0
    4d6c:	67000000 	strvs	r0, [r0, -r0]
    4d70:	0100003c 	tsteq	r0, ip, lsr r0
    4d74:	00000ed3 	ldrdeq	r0, [r0], -r3
    4d78:	0012c119 	andseq	ip, r2, r9, lsl r1
    4d7c:	08950100 	ldmeq	r5, {r8}
    4d80:	0003de39 	andeq	sp, r3, r9, lsr lr
    4d84:	003c8d00 	eorseq	r8, ip, r0, lsl #26
    4d88:	003c8700 	eorseq	r8, ip, r0, lsl #14
    4d8c:	0ca91a00 	vstmiaeq	r9!, {s2-s1}
    4d90:	97010000 	strls	r0, [r1, -r0]
    4d94:	01041108 	tsteq	r4, r8, lsl #2
    4d98:	3cbb0000 	ldccc	0, cr0, [fp]
    4d9c:	3cb90000 	ldccc	0, cr0, [r9]
    4da0:	001d0000 	andseq	r0, sp, r0
    4da4:	8e000000 	cdphi	0, 0, cr0, cr0, cr0, {0}
    4da8:	1d000023 	stcne	0, cr0, [r0, #-140]	; 0xffffff74
    4dac:	00000000 	andeq	r0, r0, r0
    4db0:	0000239c 	muleq	r0, ip, r3
    4db4:	29012100 	stmdbcs	r1, {r8, sp}
    4db8:	01000013 	tsteq	r0, r3, lsl r0
    4dbc:	010c0857 	tsteq	ip, r7, asr r8
    4dc0:	000000f3 	strdeq	r0, [r0], -r3
	...
    4dcc:	00003cce 	andeq	r3, r0, lr, asr #25
    4dd0:	000fa501 	andeq	sl, pc, r1, lsl #10
    4dd4:	12c11900 	sbcne	r1, r1, #0, 18
    4dd8:	57010000 	strpl	r0, [r1, -r0]
    4ddc:	03d22d08 	bicseq	r2, r2, #8, 26	; 0x200
    4de0:	3cf80000 	ldclcc	0, cr0, [r8]
    4de4:	3cee0000 	stclcc	0, cr0, [lr]
    4de8:	51190000 	tstpl	r9, r0
    4dec:	0100000d 	tsteq	r0, sp
    4df0:	a82c0858 	stmdage	ip!, {r3, r4, r6, fp}
    4df4:	41000000 	mrsmi	r0, (UNDEF: 0)
    4df8:	3d00003d 	stccc	0, cr0, [r0, #-244]	; 0xffffff0c
    4dfc:	1a00003d 	bne	4ef8 <__HEAP_SIZE+0x3ef8>
    4e00:	00001abd 			; <UNDEFINED> instruction: 0x00001abd
    4e04:	10085a01 	andne	r5, r8, r1, lsl #20
    4e08:	000000f3 	strdeq	r0, [r0], -r3
    4e0c:	00003d63 	andeq	r3, r0, r3, ror #26
    4e10:	00003d5f 	andeq	r3, r0, pc, asr sp
    4e14:	000cca1a 	andeq	ip, ip, sl, lsl sl
    4e18:	085b0100 	ldmdaeq	fp, {r8}^
    4e1c:	00010411 	andeq	r0, r1, r1, lsl r4
    4e20:	003d8a00 	eorseq	r8, sp, r0, lsl #20
    4e24:	003d8200 	eorseq	r8, sp, r0, lsl #4
    4e28:	10ee1a00 	rscne	r1, lr, r0, lsl #20
    4e2c:	5c010000 	stcpl	0, cr0, [r1], {-0}
    4e30:	04ed0e08 	strbteq	r0, [sp], #3592	; 0xe08
    4e34:	3dc00000 	stclcc	0, cr0, [r0]
    4e38:	3dbe0000 	ldccc	0, cr0, [lr]
    4e3c:	c01a0000 	andsgt	r0, sl, r0
    4e40:	01000012 	tsteq	r0, r2, lsl r0
    4e44:	5c15085d 	ldcpl	8, cr0, [r5], {93}	; 0x5d
    4e48:	dd000006 	stcle	0, cr0, [r0, #-24]	; 0xffffffe8
    4e4c:	d300003d 	movwle	r0, #61	; 0x3d
    4e50:	1d00003d 	stcne	0, cr0, [r0, #-244]	; 0xffffff0c
    4e54:	00000000 	andeq	r0, r0, r0
    4e58:	000023f2 	strdeq	r2, [r0], -r2	; <UNPREDICTABLE>
    4e5c:	0000001e 	andeq	r0, r0, lr, lsl r0
    4e60:	00240000 	eoreq	r0, r4, r0
    4e64:	000f8e00 	andeq	r8, pc, r0, lsl #28
    4e68:	50011f00 	andpl	r1, r1, r0, lsl #30
    4e6c:	00007502 	andeq	r7, r0, r2, lsl #10
    4e70:	00000020 	andeq	r0, r0, r0, lsr #32
    4e74:	000baf00 	andeq	sl, fp, r0, lsl #30
    4e78:	50011f00 	andpl	r1, r1, r0, lsl #30
    4e7c:	1f007402 	svcne	0x00007402
    4e80:	76025101 	strvc	r5, [r2], -r1, lsl #2
    4e84:	21000000 	mrscs	r0, (UNDEF: 0)
    4e88:	000b6901 	andeq	r6, fp, r1, lsl #18
    4e8c:	07f30100 	ldrbeq	r0, [r3, r0, lsl #2]!
    4e90:	00f3010c 	rscseq	r0, r3, ip, lsl #2
	...
    4e9c:	3e220000 	cdpcc	0, 2, cr0, cr2, cr0, {0}
    4ea0:	f1010000 	setend	le
    4ea4:	19000010 	stmdbne	r0, {r4}
    4ea8:	000012c1 	andeq	r1, r0, r1, asr #5
    4eac:	3007f301 	andcc	pc, r7, r1, lsl #6
    4eb0:	000003d2 	ldrdeq	r0, [r0], -r2
    4eb4:	00003e60 	andeq	r3, r0, r0, ror #28
    4eb8:	00003e42 	andeq	r3, r0, r2, asr #28
    4ebc:	000d5119 	andeq	r5, sp, r9, lsl r1
    4ec0:	07f40100 	ldrbeq	r0, [r4, r0, lsl #2]!
    4ec4:	0000a82f 	andeq	sl, r0, pc, lsr #16
    4ec8:	003f2600 	eorseq	r2, pc, r0, lsl #12
    4ecc:	003f2200 	eorseq	r2, pc, r0, lsl #4
    4ed0:	0b951900 	bleq	fe54b2d8 <__StackTop+0xc644b2d8>
    4ed4:	f5010000 			; <UNDEFINED> instruction: 0xf5010000
    4ed8:	10f73507 	rscsne	r3, r7, r7, lsl #10
    4edc:	3f480000 	svccc	0x00480000
    4ee0:	3f440000 	svccc	0x00440000
    4ee4:	bd1a0000 	ldclt	0, cr0, [sl, #-0]
    4ee8:	0100001a 	tsteq	r0, sl, lsl r0
    4eec:	f31007f7 	vaba.u16	q0, q8, <illegal reg q11.5>
    4ef0:	68000000 	stmdavs	r0, {}	; <UNPREDICTABLE>
    4ef4:	6600003f 			; <UNDEFINED> instruction: 0x6600003f
    4ef8:	1a00003f 	bne	4ffc <__HEAP_SIZE+0x3ffc>
    4efc:	00000cca 	andeq	r0, r0, sl, asr #25
    4f00:	1107f801 	tstne	r7, r1, lsl #16	; <UNPREDICTABLE>
    4f04:	00000104 	andeq	r0, r0, r4, lsl #2
    4f08:	00003f83 	andeq	r3, r0, r3, lsl #31
    4f0c:	00003f7b 	andeq	r3, r0, fp, ror pc
    4f10:	0012c01a 	andseq	ip, r2, sl, lsl r0
    4f14:	07f90100 	ldrbeq	r0, [r9, r0, lsl #2]!
    4f18:	00065c15 	andeq	r5, r6, r5, lsl ip
    4f1c:	003fd500 	eorseq	sp, pc, r0, lsl #10
    4f20:	003fb700 	eorseq	fp, pc, r0, lsl #14
    4f24:	03a02800 	moveq	r2, #0, 16
    4f28:	10d70000 	sbcsne	r0, r7, r0
    4f2c:	7f1a0000 	svcvc	0x001a0000
    4f30:	0100000d 	tsteq	r0, sp
    4f34:	151b0815 	ldrne	r0, [fp, #-2069]	; 0xfffff7eb
    4f38:	9d000001 	stcls	0, cr0, [r0, #-4]
    4f3c:	97000040 	strls	r0, [r0, -r0, asr #32]
    4f40:	29000040 	stmdbcs	r0, {r6}
	...
    4f4c:	00143f1a 	andseq	r3, r4, sl, lsl pc
    4f50:	081a0100 	ldmdaeq	sl, {r8}
    4f54:	0000d11a 	andeq	sp, r0, sl, lsl r1
    4f58:	0040ce00 	subeq	ip, r0, r0, lsl #28
    4f5c:	0040c800 	subeq	ip, r0, r0, lsl #16
    4f60:	00001c00 	andeq	r1, r0, r0, lsl #24
    4f64:	00000000 	andeq	r0, r0, r0
    4f68:	10ab0000 	adcne	r0, fp, r0
    4f6c:	ae1a0000 	cdpge	0, 1, cr0, cr10, cr0, {0}
    4f70:	01000011 	tsteq	r0, r1, lsl r0
    4f74:	15110844 	ldrne	r0, [r1, #-2116]	; 0xfffff7bc
    4f78:	fd000001 	stc2	0, cr0, [r0, #-4]
    4f7c:	f9000040 			; <UNDEFINED> instruction: 0xf9000040
    4f80:	1d000040 	stcne	0, cr0, [r0, #-256]	; 0xffffff00
    4f84:	00000000 	andeq	r0, r0, r0
    4f88:	00002370 	andeq	r2, r0, r0, ror r3
    4f8c:	00001e00 	andeq	r1, r0, r0, lsl #28
    4f90:	0baf0000 	bleq	febc4f98 <__StackTop+0xc6ac4f98>
    4f94:	10c50000 	sbcne	r0, r5, r0
    4f98:	011f0000 	tsteq	pc, r0
    4f9c:	00740250 	rsbseq	r0, r4, r0, asr r2
    4fa0:	0251011f 	subseq	r0, r1, #-1073741817	; 0xc0000007
    4fa4:	20000077 	andcs	r0, r0, r7, ror r0
    4fa8:	00000000 	andeq	r0, r0, r0
    4fac:	0000237f 	andeq	r2, r0, pc, ror r3
    4fb0:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    4fb4:	00001074 	andeq	r1, r0, r4, ror r0
    4fb8:	00001d00 	andeq	r1, r0, r0, lsl #26
    4fbc:	23f20000 	mvnscs	r0, #0
    4fc0:	00200000 	eoreq	r0, r0, r0
    4fc4:	00000000 	andeq	r0, r0, r0
    4fc8:	1f000024 	svcne	0x00000024
    4fcc:	75025001 	strvc	r5, [r2, #-1]
    4fd0:	07000000 	streq	r0, [r0, -r0]
    4fd4:	0000f304 	andeq	pc, r0, r4, lsl #6
    4fd8:	10f10600 	rscsne	r0, r1, r0, lsl #12
    4fdc:	01210000 			; <UNDEFINED> instruction: 0x01210000
    4fe0:	00000dd0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    4fe4:	0c075501 	cfstr32eq	mvfx5, [r7], {1}
    4fe8:	0000f301 	andeq	pc, r0, r1, lsl #6
	...
    4ff4:	00411b00 	subeq	r1, r1, r0, lsl #22
    4ff8:	13060100 	movwne	r0, #24832	; 0x6100
    4ffc:	c1190000 	tstgt	r9, r0
    5000:	01000012 	tsteq	r0, r2, lsl r0
    5004:	d2260755 	eorle	r0, r6, #22282240	; 0x1540000
    5008:	63000003 	movwvs	r0, #3
    500c:	5f000041 	svcpl	0x00000041
    5010:	19000041 	stmdbne	r0, {r0, r6}
    5014:	00000d51 	andeq	r0, r0, r1, asr sp
    5018:	25075601 	strcs	r5, [r7, #-1537]	; 0xfffff9ff
    501c:	000000a8 	andeq	r0, r0, r8, lsr #1
    5020:	00004185 	andeq	r4, r0, r5, lsl #3
    5024:	00004181 	andeq	r4, r0, r1, lsl #3
    5028:	00218519 	eoreq	r8, r1, r9, lsl r5
    502c:	07570100 	ldrbeq	r0, [r7, -r0, lsl #2]
    5030:	00011a23 	andeq	r1, r1, r3, lsr #20
    5034:	0041a500 	subeq	sl, r1, r0, lsl #10
    5038:	0041a300 	subeq	sl, r1, r0, lsl #6
    503c:	0ddb1a00 	vldreq	s3, [fp]
    5040:	59010000 	stmdbpl	r1, {}	; <UNPREDICTABLE>
    5044:	00f31007 	rscseq	r1, r3, r7
    5048:	41c20000 	bicmi	r0, r2, r0
    504c:	41b80000 			; <UNDEFINED> instruction: 0x41b80000
    5050:	09220000 	stmdbeq	r2!, {}	; <UNPREDICTABLE>
    5054:	0100001d 	tsteq	r0, sp, lsl r0
    5058:	c60f075a 			; <UNDEFINED> instruction: 0xc60f075a
    505c:	02000003 	andeq	r0, r0, #3
    5060:	ee1a6891 	mrc	8, 0, r6, cr10, cr1, {4}
    5064:	01000010 	tsteq	r0, r0, lsl r0
    5068:	ed0e075b 	stc	7, cr0, [lr, #-364]	; 0xfffffe94
    506c:	07000004 	streq	r0, [r0, -r4]
    5070:	03000042 	movweq	r0, #66	; 0x42
    5074:	1a000042 	bne	5184 <__HEAP_SIZE+0x4184>
    5078:	000012c0 	andeq	r1, r0, r0, asr #5
    507c:	15075c01 	strne	r5, [r7, #-3073]	; 0xfffff3ff
    5080:	0000065c 	andeq	r0, r0, ip, asr r6
    5084:	00004229 	andeq	r4, r0, r9, lsr #4
    5088:	00004225 	andeq	r4, r0, r5, lsr #4
    508c:	00038028 	andeq	r8, r3, r8, lsr #32
    5090:	00122200 	andseq	r2, r2, r0, lsl #4
    5094:	0d7f1a00 	vldmdbeq	pc!, {s3-s2}
    5098:	72010000 	andvc	r0, r1, #0
    509c:	01151f07 	tsteq	r5, r7, lsl #30
    50a0:	424b0000 	submi	r0, fp, #0
    50a4:	42470000 	submi	r0, r7, #0
    50a8:	001e0000 	andseq	r0, lr, r0
    50ac:	af000000 	svcge	0x00000000
    50b0:	e200000b 	and	r0, r0, #11
    50b4:	1f000011 	svcne	0x00000011
    50b8:	74025001 	strvc	r5, [r2], #-1
    50bc:	51011f00 	tstpl	r1, r0, lsl #30
    50c0:	00007602 	andeq	r7, r0, r2, lsl #12
    50c4:	0000001d 	andeq	r0, r0, sp, lsl r0
    50c8:	00239c00 	eoreq	r9, r3, r0, lsl #24
    50cc:	00001e00 	andeq	r1, r0, r0, lsl #28
    50d0:	237f0000 	cmncs	pc, #0
    50d4:	11ff0000 	mvnsne	r0, r0
    50d8:	011f0000 	tsteq	pc, r0
    50dc:	2c740250 	lfmcs	f0, 2, [r4], #-320	; 0xfffffec0
    50e0:	00001d00 	andeq	r1, r0, r0, lsl #26
    50e4:	240e0000 	strcs	r0, [lr], #-0
    50e8:	001d0000 	andseq	r0, sp, r0
    50ec:	9c000000 	stcls	0, cr0, [r0], {-0}
    50f0:	20000023 	andcs	r0, r0, r3, lsr #32
    50f4:	00000000 	andeq	r0, r0, r0
    50f8:	0000241c 	andeq	r2, r0, ip, lsl r4
    50fc:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    5100:	00006891 	muleq	r0, r1, r8
    5104:	0000001e 	andeq	r0, r0, lr, lsl r0
    5108:	000abd00 	andeq	fp, sl, r0, lsl #26
    510c:	00123600 	andseq	r3, r2, r0, lsl #12
    5110:	50011f00 	andpl	r1, r1, r0, lsl #30
    5114:	00007402 	andeq	r7, r0, r2, lsl #8
    5118:	0000001d 	andeq	r0, r0, sp, lsl r0
    511c:	00242b00 	eoreq	r2, r4, r0, lsl #22
    5120:	00001e00 	andeq	r1, r0, r0, lsl #28
    5124:	0abd0000 	beq	fef4512c <__StackTop+0xc6e4512c>
    5128:	12530000 	subsne	r0, r3, #0
    512c:	011f0000 	tsteq	pc, r0
    5130:	00740250 	rsbseq	r0, r4, r0, asr r2
    5134:	00001d00 	andeq	r1, r0, r0, lsl #26
    5138:	242b0000 	strtcs	r0, [fp], #-0
    513c:	001e0000 	andseq	r0, lr, r0
    5140:	61000000 	mrsvs	r0, (UNDEF: 0)
    5144:	7000000a 	andvc	r0, r0, sl
    5148:	1f000012 	svcne	0x00000012
    514c:	74025001 	strvc	r5, [r2], #-1
    5150:	001d0000 	andseq	r0, sp, r0
    5154:	8e000000 	cdphi	0, 0, cr0, cr0, cr0, {0}
    5158:	1d000023 	stcne	0, cr0, [r0, #-140]	; 0xffffff74
    515c:	00000000 	andeq	r0, r0, r0
    5160:	0000239c 	muleq	r0, ip, r3
    5164:	0000001d 	andeq	r0, r0, sp, lsl r0
    5168:	00243a00 	eoreq	r3, r4, r0, lsl #20
    516c:	00001d00 	andeq	r1, r0, r0, lsl #26
    5170:	238e0000 	orrcs	r0, lr, #0
    5174:	001d0000 	andseq	r0, sp, r0
    5178:	9c000000 	stcls	0, cr0, [r0], {-0}
    517c:	1e000023 	cdpne	0, 0, cr0, cr0, cr3, {1}
    5180:	00000000 	andeq	r0, r0, r0
    5184:	00002449 	andeq	r2, r0, r9, asr #8
    5188:	000012b7 			; <UNDEFINED> instruction: 0x000012b7
    518c:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    5190:	011f6891 			; <UNDEFINED> instruction: 0x011f6891
    5194:	64910251 	ldrvs	r0, [r1], #593	; 0x251
    5198:	00001e00 	andeq	r1, r0, r0, lsl #28
    519c:	0a610000 	beq	18451a4 <__RAM_SIZE+0x17451a4>
    51a0:	12cb0000 	sbcne	r0, fp, #0
    51a4:	011f0000 	tsteq	pc, r0
    51a8:	00740250 	rsbseq	r0, r4, r0, asr r2
    51ac:	00001e00 	andeq	r1, r0, r0, lsl #28
    51b0:	24580000 	ldrbcs	r0, [r8], #-0
    51b4:	12df0000 	sbcsne	r0, pc, #0
    51b8:	011f0000 	tsteq	pc, r0
    51bc:	2c740250 	lfmcs	f0, 2, [r4], #-320	; 0xfffffec0
    51c0:	00001e00 	andeq	r1, r0, r0, lsl #28
    51c4:	0abd0000 	beq	fef451cc <__StackTop+0xc6e451cc>
    51c8:	12f30000 	rscsne	r0, r3, #0
    51cc:	011f0000 	tsteq	pc, r0
    51d0:	00740250 	rsbseq	r0, r4, r0, asr r2
    51d4:	00001d00 	andeq	r1, r0, r0, lsl #26
    51d8:	242b0000 	strtcs	r0, [fp], #-0
    51dc:	001d0000 	andseq	r0, sp, r0
    51e0:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
    51e4:	00000024 	andeq	r0, r0, r4, lsr #32
    51e8:	0e390121 	rsfeqep	f0, f1, f1
    51ec:	74010000 	strvc	r0, [r1], #-0
    51f0:	f3010c06 			; <UNDEFINED> instruction: 0xf3010c06
	...
    51fc:	69000000 	stmdbvs	r0, {}	; <UNPREDICTABLE>
    5200:	01000042 	tsteq	r0, r2, asr #32
    5204:	00001557 	andeq	r1, r0, r7, asr r5
    5208:	0012c119 	andseq	ip, r2, r9, lsl r1
    520c:	06740100 	ldrbteq	r0, [r4], -r0, lsl #2
    5210:	0003d22f 	andeq	sp, r3, pc, lsr #4
    5214:	0042b100 	subeq	fp, r2, r0, lsl #2
    5218:	0042ad00 	subeq	sl, r2, r0, lsl #26
    521c:	21851900 	orrcs	r1, r5, r0, lsl #18
    5220:	75010000 	strvc	r0, [r1, #-0]
    5224:	011a2c06 	tsteq	sl, r6, lsl #24
    5228:	42d10000 	sbcsmi	r0, r1, #0
    522c:	42cf0000 	sbcmi	r0, pc, #0
    5230:	db1a0000 	blle	685238 <__RAM_SIZE+0x585238>
    5234:	0100000d 	tsteq	r0, sp
    5238:	f3100677 	vmin.u16	q0, q0, <illegal reg q11.5>
    523c:	ec000000 	stc	0, cr0, [r0], {-0}
    5240:	e4000042 	str	r0, [r0], #-66	; 0xffffffbe
    5244:	22000042 	andcs	r0, r0, #66	; 0x42
    5248:	00001d09 	andeq	r1, r0, r9, lsl #26
    524c:	0f067801 	svceq	0x00067801
    5250:	000003c6 	andeq	r0, r0, r6, asr #7
    5254:	1a689102 	bne	1a29664 <__RAM_SIZE+0x1929664>
    5258:	000012c0 	andeq	r1, r0, r0, asr #5
    525c:	15067901 	strne	r7, [r6, #-2305]	; 0xfffff6ff
    5260:	0000065c 	andeq	r0, r0, ip, asr r6
    5264:	00004326 	andeq	r4, r0, r6, lsr #6
    5268:	00004322 	andeq	r4, r0, r2, lsr #6
    526c:	0011871a 	andseq	r8, r1, sl, lsl r7
    5270:	067c0100 	ldrbteq	r0, [ip], -r0, lsl #2
    5274:	0000f314 	andeq	pc, r0, r4, lsl r3	; <UNPREDICTABLE>
    5278:	00434c00 	subeq	r4, r3, r0, lsl #24
    527c:	00434400 	subeq	r4, r3, r0, lsl #8
    5280:	03602800 	cmneq	r0, #0, 16
    5284:	14060000 	strne	r0, [r6], #-0
    5288:	551a0000 	ldrpl	r0, [sl, #-0]
    528c:	01000011 	tsteq	r0, r1, lsl r0
    5290:	151f0695 	ldrne	r0, [pc, #-1685]	; 4c03 <__HEAP_SIZE+0x3c03>
    5294:	8b000001 	blhi	52a0 <__HEAP_SIZE+0x42a0>
    5298:	81000043 	tsthi	r0, r3, asr #32
    529c:	1d000043 	stcne	0, cr0, [r0, #-268]	; 0xfffffef4
    52a0:	00000000 	andeq	r0, r0, r0
    52a4:	0000239c 	muleq	r0, ip, r3
    52a8:	0000001d 	andeq	r0, r0, sp, lsl r0
    52ac:	00246700 	eoreq	r6, r4, r0, lsl #14
    52b0:	00001e00 	andeq	r1, r0, r0, lsl #28
    52b4:	237f0000 	cmncs	pc, #0
    52b8:	13e30000 	mvnne	r0, #0
    52bc:	011f0000 	tsteq	pc, r0
    52c0:	10740250 	rsbsne	r0, r4, r0, asr r2
    52c4:	00001d00 	andeq	r1, r0, r0, lsl #26
    52c8:	240e0000 	strcs	r0, [lr], #-0
    52cc:	001d0000 	andseq	r0, sp, r0
    52d0:	9c000000 	stcls	0, cr0, [r0], {-0}
    52d4:	20000023 	andcs	r0, r0, r3, lsr #32
    52d8:	00000000 	andeq	r0, r0, r0
    52dc:	0000241c 	andeq	r2, r0, ip, lsl r4
    52e0:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    52e4:	00006891 	muleq	r0, r1, r8
    52e8:	0000001c 	andeq	r0, r0, ip, lsl r0
    52ec:	00000000 	andeq	r0, r0, r0
    52f0:	00144600 	andseq	r4, r4, r0, lsl #12
    52f4:	133b1a00 	teqne	fp, #0, 20
    52f8:	30010000 	andcc	r0, r1, r0
    52fc:	01042907 	tsteq	r4, r7, lsl #18
    5300:	43dc0000 	bicsmi	r0, ip, #0
    5304:	43d80000 	bicsmi	r0, r8, #0
    5308:	001e0000 	andseq	r0, lr, r0
    530c:	a2000000 	andge	r0, r0, #0
    5310:	3c00000c 	stccc	0, cr0, [r0], {12}
    5314:	1f000014 	svcne	0x00000014
    5318:	74025001 	strvc	r5, [r2], #-1
    531c:	001d0000 	andseq	r0, sp, r0
    5320:	76000000 	strvc	r0, [r0], -r0
    5324:	00000024 	andeq	r0, r0, r4, lsr #32
    5328:	0000001d 	andeq	r0, r0, sp, lsl r0
    532c:	00238e00 	eoreq	r8, r3, r0, lsl #28
    5330:	00001d00 	andeq	r1, r0, r0, lsl #26
    5334:	24850000 	strcs	r0, [r5], #0
    5338:	001d0000 	andseq	r0, sp, r0
    533c:	9c000000 	stcls	0, cr0, [r0], {-0}
    5340:	1e000023 	cdpne	0, 0, cr0, cr0, cr3, {1}
    5344:	00000000 	andeq	r0, r0, r0
    5348:	00000abd 			; <UNDEFINED> instruction: 0x00000abd
    534c:	00001475 	andeq	r1, r0, r5, ror r4
    5350:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    5354:	1d000074 	stcne	0, cr0, [r0, #-464]	; 0xfffffe30
    5358:	00000000 	andeq	r0, r0, r0
    535c:	0000242b 	andeq	r2, r0, fp, lsr #8
    5360:	0000001e 	andeq	r0, r0, lr, lsl r0
    5364:	000abd00 	andeq	fp, sl, r0, lsl #26
    5368:	00149200 	andseq	r9, r4, r0, lsl #4
    536c:	50011f00 	andpl	r1, r1, r0, lsl #30
    5370:	00007402 	andeq	r7, r0, r2, lsl #8
    5374:	0000001d 	andeq	r0, r0, sp, lsl r0
    5378:	00242b00 	eoreq	r2, r4, r0, lsl #22
    537c:	00001e00 	andeq	r1, r0, r0, lsl #28
    5380:	0a610000 	beq	1845388 <__RAM_SIZE+0x1745388>
    5384:	14af0000 	strtne	r0, [pc], #0	; 538c <__HEAP_SIZE+0x438c>
    5388:	011f0000 	tsteq	pc, r0
    538c:	00740250 	rsbseq	r0, r4, r0, asr r2
    5390:	00001d00 	andeq	r1, r0, r0, lsl #26
    5394:	238e0000 	orrcs	r0, lr, #0
    5398:	001d0000 	andseq	r0, sp, r0
    539c:	9c000000 	stcls	0, cr0, [r0], {-0}
    53a0:	1d000023 	stcne	0, cr0, [r0, #-140]	; 0xffffff74
    53a4:	00000000 	andeq	r0, r0, r0
    53a8:	0000243a 	andeq	r2, r0, sl, lsr r4
    53ac:	0000001d 	andeq	r0, r0, sp, lsl r0
    53b0:	00238e00 	eoreq	r8, r3, r0, lsl #28
    53b4:	00001d00 	andeq	r1, r0, r0, lsl #26
    53b8:	239c0000 	orrscs	r0, ip, #0
    53bc:	001e0000 	andseq	r0, lr, r0
    53c0:	49000000 	stmdbmi	r0, {}	; <UNPREDICTABLE>
    53c4:	f6000024 			; <UNDEFINED> instruction: 0xf6000024
    53c8:	1f000014 	svcne	0x00000014
    53cc:	91025001 	tstls	r2, r1
    53d0:	51011f68 	tstpl	r1, r8, ror #30
    53d4:	00649102 	rsbeq	r9, r4, r2, lsl #2
    53d8:	0000001e 	andeq	r0, r0, lr, lsl r0
    53dc:	000a6100 	andeq	r6, sl, r0, lsl #2
    53e0:	00150a00 	andseq	r0, r5, r0, lsl #20
    53e4:	50011f00 	andpl	r1, r1, r0, lsl #30
    53e8:	00007402 	andeq	r7, r0, r2, lsl #8
    53ec:	0000001e 	andeq	r0, r0, lr, lsl r0
    53f0:	00245800 	eoreq	r5, r4, r0, lsl #16
    53f4:	00151e00 	andseq	r1, r5, r0, lsl #28
    53f8:	50011f00 	andpl	r1, r1, r0, lsl #30
    53fc:	002c7402 	eoreq	r7, ip, r2, lsl #8
    5400:	0000001e 	andeq	r0, r0, lr, lsl r0
    5404:	000abd00 	andeq	fp, sl, r0, lsl #26
    5408:	00153200 	andseq	r3, r5, r0, lsl #4
    540c:	50011f00 	andpl	r1, r1, r0, lsl #30
    5410:	00007402 	andeq	r7, r0, r2, lsl #8
    5414:	0000001d 	andeq	r0, r0, sp, lsl r0
    5418:	00242b00 	eoreq	r2, r4, r0, lsl #22
    541c:	00001d00 	andeq	r1, r0, r0, lsl #26
    5420:	240e0000 	strcs	r0, [lr], #-0
    5424:	001d0000 	andseq	r0, sp, r0
    5428:	8e000000 	cdphi	0, 0, cr0, cr0, cr0, {0}
    542c:	1d000023 	stcne	0, cr0, [r0, #-140]	; 0xffffff74
    5430:	00000000 	andeq	r0, r0, r0
    5434:	0000239c 	muleq	r0, ip, r3
    5438:	5b012100 	blpl	4d840 <__HEAP_SIZE+0x4c840>
    543c:	0100000b 	tsteq	r0, fp
    5440:	010c05de 	ldrdeq	r0, [ip, -lr]
    5444:	000000f3 	strdeq	r0, [r0], -r3
    5448:	100022dc 	ldrdne	r2, [r0], -ip
    544c:	100023cc 	andne	r2, r0, ip, asr #7
    5450:	000043fa 	strdeq	r4, [r0], -sl
    5454:	00174c01 	andseq	r4, r7, r1, lsl #24
    5458:	12c11900 	sbcne	r1, r1, #0, 18
    545c:	de010000 	cdple	0, 0, cr0, cr1, cr0, {0}
    5460:	03d22905 	bicseq	r2, r2, #81920	; 0x14000
    5464:	44420000 	strbmi	r0, [r2], #-0
    5468:	443e0000 	ldrtmi	r0, [lr], #-0
    546c:	51190000 	tstpl	r9, r0
    5470:	0100000d 	tsteq	r0, sp
    5474:	a82805df 	stmdage	r8!, {r0, r1, r2, r3, r4, r6, r7, r8, sl}
    5478:	64000000 	strvs	r0, [r0], #-0
    547c:	60000044 	andvs	r0, r0, r4, asr #32
    5480:	19000044 	stmdbne	r0, {r2, r6}
    5484:	00002185 	andeq	r2, r0, r5, lsl #3
    5488:	2605e001 	strcs	lr, [r5], -r1
    548c:	0000011a 	andeq	r0, r0, sl, lsl r1
    5490:	00004484 	andeq	r4, r0, r4, lsl #9
    5494:	00004482 	andeq	r4, r0, r2, lsl #9
    5498:	000ddb1a 	andeq	sp, sp, sl, lsl fp
    549c:	05e20100 	strbeq	r0, [r2, #256]!	; 0x100
    54a0:	0000f310 	andeq	pc, r0, r0, lsl r3	; <UNPREDICTABLE>
    54a4:	00449f00 	subeq	r9, r4, r0, lsl #30
    54a8:	00449700 	subeq	r9, r4, r0, lsl #14
    54ac:	1d092200 	sfmne	f2, 4, [r9, #-0]
    54b0:	e3010000 	movw	r0, #4096	; 0x1000
    54b4:	03c60f05 	biceq	r0, r6, #5, 30
    54b8:	91020000 	mrsls	r0, (UNDEF: 2)
    54bc:	12c01a60 	sbcne	r1, r0, #96, 20	; 0x60000
    54c0:	e4010000 	str	r0, [r1], #-0
    54c4:	065c1505 	ldrbeq	r1, [ip], -r5, lsl #10
    54c8:	44d90000 	ldrbmi	r0, [r9], #0
    54cc:	44d50000 	ldrbmi	r0, [r5], #0
    54d0:	40280000 	eormi	r0, r8, r0
    54d4:	68000003 	stmdavs	r0, {r0, r1}
    54d8:	1a000016 	bne	5538 <__HEAP_SIZE+0x4538>
    54dc:	00000d7f 	andeq	r0, r0, pc, ror sp
    54e0:	1f05fa01 	svcne	0x0005fa01
    54e4:	00000115 	andeq	r0, r0, r5, lsl r1
    54e8:	00004501 	andeq	r4, r0, r1, lsl #10
    54ec:	000044f7 	strdeq	r4, [r0], -r7
    54f0:	0022f21e 	eoreq	pc, r2, lr, lsl r2	; <UNPREDICTABLE>
    54f4:	000baf10 	andeq	sl, fp, r0, lsl pc
    54f8:	00162800 	andseq	r2, r6, r0, lsl #16
    54fc:	50011f00 	andpl	r1, r1, r0, lsl #30
    5500:	1f007402 	svcne	0x00007402
    5504:	77025101 	strvc	r5, [r2, -r1, lsl #2]
    5508:	fe1d0000 	cdp2	0, 1, cr0, cr13, cr0, {0}
    550c:	9c100022 	ldcls	0, cr0, [r0], {34}	; 0x22
    5510:	1e000023 	cdpne	0, 0, cr0, cr0, cr3, {1}
    5514:	1000230c 	andne	r2, r0, ip, lsl #6
    5518:	0000237f 	andeq	r2, r0, pc, ror r3
    551c:	00001645 	andeq	r1, r0, r5, asr #12
    5520:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    5524:	1d001074 	stcne	0, cr1, [r0, #-464]	; 0xfffffe30
    5528:	10002314 	andne	r2, r0, r4, lsl r3
    552c:	0000240e 	andeq	r2, r0, lr, lsl #8
    5530:	00231a1d 	eoreq	r1, r3, sp, lsl sl
    5534:	00239c10 	eoreq	r9, r3, r0, lsl ip
    5538:	23242000 			; <UNDEFINED> instruction: 0x23242000
    553c:	241c1000 	ldrcs	r1, [ip], #-0
    5540:	011f0000 	tsteq	pc, r0
    5544:	60910250 	addsvs	r0, r1, r0, asr r2
    5548:	3e1e0000 	cdpcc	0, 1, cr0, cr14, cr0, {0}
    554c:	bd100023 	ldclt	0, cr0, [r0, #-140]	; 0xffffff74
    5550:	7c00000a 	stcvc	0, cr0, [r0], {10}
    5554:	1f000016 	svcne	0x00000016
    5558:	74025001 	strvc	r5, [r2], #-1
    555c:	421d0000 	andsmi	r0, sp, #0
    5560:	2b100023 	blcs	4055f4 <__RAM_SIZE+0x3055f4>
    5564:	1e000024 	cdpne	0, 0, cr0, cr0, cr4, {1}
    5568:	1000234a 	andne	r2, r0, sl, asr #6
    556c:	00000abd 			; <UNDEFINED> instruction: 0x00000abd
    5570:	00001699 	muleq	r0, r9, r6
    5574:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    5578:	1d000074 	stcne	0, cr0, [r0, #-464]	; 0xfffffe30
    557c:	1000234e 	andne	r2, r0, lr, asr #6
    5580:	0000242b 	andeq	r2, r0, fp, lsr #8
    5584:	0023541e 	eoreq	r5, r3, lr, lsl r4
    5588:	000a6110 	andeq	r6, sl, r0, lsl r1
    558c:	0016b600 	andseq	fp, r6, r0, lsl #12
    5590:	50011f00 	andpl	r1, r1, r0, lsl #30
    5594:	00007402 	andeq	r7, r0, r2, lsl #8
    5598:	00235c1d 	eoreq	r5, r3, sp, lsl ip
    559c:	00238e10 	eoreq	r8, r3, r0, lsl lr
    55a0:	23701d00 	cmncs	r0, #0, 26
    55a4:	239c1000 	orrscs	r1, ip, #0
    55a8:	741d0000 	ldrvc	r0, [sp], #-0
    55ac:	3a100023 	bcc	405640 <__RAM_SIZE+0x305640>
    55b0:	1d000024 	stcne	0, cr0, [r0, #-144]	; 0xffffff70
    55b4:	10002378 	andne	r2, r0, r8, ror r3
    55b8:	0000238e 	andeq	r2, r0, lr, lsl #7
    55bc:	0023941d 	eoreq	r9, r3, sp, lsl r4
    55c0:	00239c10 	eoreq	r9, r3, r0, lsl ip
    55c4:	239c1e00 	orrscs	r1, ip, #0, 28
    55c8:	24491000 	strbcs	r1, [r9], #-0
    55cc:	16fd0000 	ldrbtne	r0, [sp], r0
    55d0:	011f0000 	tsteq	pc, r0
    55d4:	60910250 	addsvs	r0, r1, r0, asr r2
    55d8:	0251011f 	subseq	r0, r1, #-1073741817	; 0xc0000007
    55dc:	1e005c91 	mcrne	12, 0, r5, cr0, cr1, {4}
    55e0:	100023a6 	andne	r2, r0, r6, lsr #7
    55e4:	00000a61 	andeq	r0, r0, r1, ror #20
    55e8:	00001711 	andeq	r1, r0, r1, lsl r7
    55ec:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    55f0:	1e000074 	mcrne	0, 0, r0, cr0, cr4, {3}
    55f4:	100023b4 			; <UNDEFINED> instruction: 0x100023b4
    55f8:	00002458 	andeq	r2, r0, r8, asr r4
    55fc:	00001725 	andeq	r1, r0, r5, lsr #14
    5600:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    5604:	1e002c74 	mcrne	12, 0, r2, cr0, cr4, {3}
    5608:	100023ba 			; <UNDEFINED> instruction: 0x100023ba
    560c:	00000abd 			; <UNDEFINED> instruction: 0x00000abd
    5610:	00001739 	andeq	r1, r0, r9, lsr r7
    5614:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    5618:	1d000074 	stcne	0, cr0, [r0, #-464]	; 0xfffffe30
    561c:	100023be 			; <UNDEFINED> instruction: 0x100023be
    5620:	0000242b 	andeq	r2, r0, fp, lsr #8
    5624:	0023c61d 	eoreq	ip, r3, sp, lsl r6
    5628:	00240e10 	eoreq	r0, r4, r0, lsl lr
    562c:	01210000 			; <UNDEFINED> instruction: 0x01210000
    5630:	00000f9a 	muleq	r0, sl, pc	; <UNPREDICTABLE>
    5634:	0c053101 	stfeqs	f3, [r5], {1}
    5638:	0000f301 	andeq	pc, r0, r1, lsl #6
	...
    5644:	00454400 	subeq	r4, r5, r0, lsl #8
    5648:	18790100 	ldmdane	r9!, {r8}^
    564c:	c1190000 	tstgt	r9, r0
    5650:	01000012 	tsteq	r0, r2, lsl r0
    5654:	d22d0531 	eorle	r0, sp, #205520896	; 0xc400000
    5658:	8e000003 	cdphi	0, 0, cr0, cr0, cr3, {0}
    565c:	64000045 	strvs	r0, [r0], #-69	; 0xffffffbb
    5660:	19000045 	stmdbne	r0, {r0, r2, r6}
    5664:	00000b95 	muleq	r0, r5, fp
    5668:	32053201 	andcc	r3, r5, #268435456	; 0x10000000
    566c:	000010f7 	strdeq	r1, [r0], -r7
    5670:	0000469f 	muleq	r0, pc, r6	; <UNPREDICTABLE>
    5674:	0000469b 	muleq	r0, fp, r6
    5678:	001abd1a 	andseq	fp, sl, sl, lsl sp
    567c:	05340100 	ldreq	r0, [r4, #-256]!	; 0xffffff00
    5680:	0000f310 	andeq	pc, r0, r0, lsl r3	; <UNPREDICTABLE>
    5684:	0046bf00 	subeq	fp, r6, r0, lsl #30
    5688:	0046bd00 	subeq	fp, r6, r0, lsl #26
    568c:	0cca1a00 	vstmiaeq	sl, {s3-s2}
    5690:	35010000 	strcc	r0, [r1, #-0]
    5694:	01041105 	tsteq	r4, r5, lsl #2
    5698:	46e20000 	strbtmi	r0, [r2], r0
    569c:	46d20000 	ldrbmi	r0, [r2], r0
    56a0:	c01a0000 	andsgt	r0, sl, r0
    56a4:	01000012 	tsteq	r0, r2, lsl r0
    56a8:	5c150536 	cfldr32pl	mvfx0, [r5], {54}	; 0x36
    56ac:	6c000006 	stcvs	0, cr0, [r0], {6}
    56b0:	42000047 	andmi	r0, r0, #71	; 0x47
    56b4:	28000047 	stmdacs	r0, {r0, r1, r2, r6}
    56b8:	00000310 	andeq	r0, r0, r0, lsl r3
    56bc:	0000185f 	andeq	r1, r0, pc, asr r8
    56c0:	000d7f1a 	andeq	r7, sp, sl, lsl pc
    56c4:	05600100 	strbeq	r0, [r0, #-256]!	; 0xffffff00
    56c8:	0001151b 	andeq	r1, r1, fp, lsl r5
    56cc:	00488900 	subeq	r8, r8, r0, lsl #18
    56d0:	00487900 	subeq	r7, r8, r0, lsl #18
    56d4:	03281b00 			; <UNDEFINED> instruction: 0x03281b00
    56d8:	601a0000 	andsvs	r0, sl, r0
    56dc:	0100000c 	tsteq	r0, ip
    56e0:	d11a0567 	tstle	sl, r7, ror #10
    56e4:	0d000000 	stceq	0, cr0, [r0, #-0]
    56e8:	07000049 	streq	r0, [r0, -r9, asr #32]
    56ec:	1c000049 	stcne	0, cr0, [r0], {73}	; 0x49
	...
    56f8:	00001839 	andeq	r1, r0, r9, lsr r8
    56fc:	0011ae1a 	andseq	sl, r1, sl, lsl lr
    5700:	05cb0100 	strbeq	r0, [fp, #256]	; 0x100
    5704:	00011511 	andeq	r1, r1, r1, lsl r5
    5708:	00493c00 	subeq	r3, r9, r0, lsl #24
    570c:	00493800 	subeq	r3, r9, r0, lsl #16
    5710:	00001d00 	andeq	r1, r0, r0, lsl #26
    5714:	23700000 	cmncs	r0, #0
    5718:	1e000000 	cdpne	0, 0, cr0, cr0, cr0, {0}
    571c:	00000000 	andeq	r0, r0, r0
    5720:	00000576 	andeq	r0, r0, r6, ror r5
    5724:	0000184d 	andeq	r1, r0, sp, asr #16
    5728:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    572c:	20000074 	andcs	r0, r0, r4, ror r0
    5730:	00000000 	andeq	r0, r0, r0
    5734:	0000237f 	andeq	r2, r0, pc, ror r3
    5738:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    573c:	00002c74 	andeq	r2, r0, r4, ror ip
    5740:	00001d00 	andeq	r1, r0, r0, lsl #26
    5744:	23f20000 	mvnscs	r0, #0
    5748:	00200000 	eoreq	r0, r0, r0
    574c:	00000000 	andeq	r0, r0, r0
    5750:	1f000024 	svcne	0x00000024
    5754:	75025001 	strvc	r5, [r2, #-1]
    5758:	21000000 	mrscs	r0, (UNDEF: 0)
    575c:	000bf501 	andeq	pc, fp, r1, lsl #10
    5760:	04850100 	streq	r0, [r5], #256	; 0x100
    5764:	00f3010c 	rscseq	r0, r3, ip, lsl #2
	...
    5770:	495a0000 	ldmdbmi	sl, {}^	; <UNPREDICTABLE>
    5774:	ee010000 	cdp	0, 0, cr0, cr1, cr0, {0}
    5778:	19000019 	stmdbne	r0, {r0, r3, r4}
    577c:	000012c1 	andeq	r1, r0, r1, asr #5
    5780:	34048501 	strcc	r8, [r4], #-1281	; 0xfffffaff
    5784:	000003d2 	ldrdeq	r0, [r0], -r2
    5788:	000049a8 	andeq	r4, r0, r8, lsr #19
    578c:	0000497a 	andeq	r4, r0, sl, ror r9
    5790:	00124219 	andseq	r4, r2, r9, lsl r2
    5794:	04860100 	streq	r0, [r6], #256	; 0x100
    5798:	0000ba39 	andeq	fp, r0, r9, lsr sl
    579c:	004ad200 	subeq	sp, sl, r0, lsl #4
    57a0:	004ace00 	subeq	ip, sl, r0, lsl #28
    57a4:	0b951900 	bleq	fe54bbac <__StackTop+0xc644bbac>
    57a8:	87010000 	strhi	r0, [r1, -r0]
    57ac:	10f73904 	rscsne	r3, r7, r4, lsl #18
    57b0:	4af40000 	bmi	ffd057b8 <__StackTop+0xc7c057b8>
    57b4:	4af00000 	bmi	ffc057bc <__StackTop+0xc7b057bc>
    57b8:	9b190000 	blls	6457c0 <__RAM_SIZE+0x5457c0>
    57bc:	0100000c 	tsteq	r0, ip
    57c0:	ff370488 			; <UNDEFINED> instruction: 0xff370488
    57c4:	16000000 	strne	r0, [r0], -r0
    57c8:	1200004b 	andne	r0, r0, #75	; 0x4b
    57cc:	1a00004b 	bne	5900 <__HEAP_SIZE+0x4900>
    57d0:	00001abd 			; <UNDEFINED> instruction: 0x00001abd
    57d4:	10048a01 	andne	r8, r4, r1, lsl #20
    57d8:	000000f3 	strdeq	r0, [r0], -r3
    57dc:	00004b36 	andeq	r4, r0, r6, lsr fp
    57e0:	00004b34 	andeq	r4, r0, r4, lsr fp
    57e4:	000cca1a 	andeq	ip, ip, sl, lsl sl
    57e8:	048b0100 	streq	r0, [fp], #256	; 0x100
    57ec:	00010411 	andeq	r0, r1, r1, lsl r4
    57f0:	004b5100 	subeq	r5, fp, r0, lsl #2
    57f4:	004b4900 	subeq	r4, fp, r0, lsl #18
    57f8:	12c01a00 	sbcne	r1, r0, #0, 20
    57fc:	8c010000 	stchi	0, cr0, [r1], {-0}
    5800:	065c1504 	ldrbeq	r1, [ip], -r4, lsl #10
    5804:	4bb30000 	blmi	fecc580c <__StackTop+0xc6bc580c>
    5808:	4b850000 	blmi	fe145810 <__StackTop+0xc6045810>
    580c:	001c0000 	andseq	r0, ip, r0
    5810:	00000000 	andeq	r0, r0, r0
    5814:	d4000000 	strle	r0, [r0], #-0
    5818:	1a000019 	bne	5884 <__HEAP_SIZE+0x4884>
    581c:	00000c60 	andeq	r0, r0, r0, ror #24
    5820:	1a04b001 	bne	13182c <__RAM_SIZE+0x3182c>
    5824:	000000d1 	ldrdeq	r0, [r0], -r1
    5828:	00004cdf 	ldrdeq	r4, [r0], -pc	; <UNPREDICTABLE>
    582c:	00004cd9 	ldrdeq	r4, [r0], -r9
    5830:	000f3d1a 	andeq	r3, pc, sl, lsl sp	; <UNPREDICTABLE>
    5834:	04b10100 	ldrteq	r0, [r1], #256	; 0x100
    5838:	0001151f 	andeq	r1, r1, pc, lsl r5
    583c:	004d0c00 	subeq	r0, sp, r0, lsl #24
    5840:	004d0a00 	subeq	r0, sp, r0, lsl #20
    5844:	00001c00 	andeq	r1, r0, r0, lsl #24
    5848:	00000000 	andeq	r0, r0, r0
    584c:	198f0000 	stmibne	pc, {}	; <UNPREDICTABLE>
    5850:	ae1a0000 	cdpge	0, 1, cr0, cr10, cr0, {0}
    5854:	01000011 	tsteq	r0, r1, lsl r0
    5858:	1511051e 	ldrne	r0, [r1, #-1310]	; 0xfffffae2
    585c:	23000001 	movwcs	r0, #1
    5860:	1f00004d 	svcne	0x0000004d
    5864:	1d00004d 	stcne	0, cr0, [r0, #-308]	; 0xfffffecc
    5868:	00000000 	andeq	r0, r0, r0
    586c:	00002370 	andeq	r2, r0, r0, ror r3
    5870:	00001e00 	andeq	r1, r0, r0, lsl #28
    5874:	0bfe0000 	bleq	fff8587c <__StackTop+0xc7e8587c>
    5878:	19af0000 	stmibne	pc!, {}	; <UNPREDICTABLE>
    587c:	011f0000 	tsteq	pc, r0
    5880:	00740250 	rsbseq	r0, r4, r0, asr r2
    5884:	0251011f 	subseq	r0, r1, #-1073741817	; 0xc0000007
    5888:	011f0077 	tsteq	pc, r7, ror r0	; <UNPREDICTABLE>
    588c:	00750252 	rsbseq	r0, r5, r2, asr r2
    5890:	00001e00 	andeq	r1, r0, r0, lsl #28
    5894:	05760000 	ldrbeq	r0, [r6, #-0]!
    5898:	19c30000 	stmibne	r3, {}^	; <UNPREDICTABLE>
    589c:	011f0000 	tsteq	pc, r0
    58a0:	00740250 	rsbseq	r0, r4, r0, asr r2
    58a4:	00002000 	andeq	r2, r0, r0
    58a8:	237f0000 	cmncs	pc, #0
    58ac:	011f0000 	tsteq	pc, r0
    58b0:	2c740250 	lfmcs	f0, 2, [r4], #-320	; 0xfffffec0
    58b4:	001d0000 	andseq	r0, sp, r0
    58b8:	f2000000 	vhadd.s8	d0, d0, d0
    58bc:	20000023 	andcs	r0, r0, r3, lsr #32
    58c0:	00000000 	andeq	r0, r0, r0
    58c4:	00002400 	andeq	r2, r0, r0, lsl #8
    58c8:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    58cc:	00000076 	andeq	r0, r0, r6, ror r0
    58d0:	0e960121 	fmleqsp	f0, f6, f1
    58d4:	ab010000 	blge	458dc <__HEAP_SIZE+0x448dc>
    58d8:	f3010c03 			; <UNDEFINED> instruction: 0xf3010c03
	...
    58e4:	41000000 	mrsmi	r0, (UNDEF: 0)
    58e8:	0100004d 	tsteq	r0, sp, asr #32
    58ec:	00001c29 	andeq	r1, r0, r9, lsr #24
    58f0:	0012c119 	andseq	ip, r2, r9, lsl r1
    58f4:	03ab0100 			; <UNDEFINED> instruction: 0x03ab0100
    58f8:	0003d22d 	andeq	sp, r3, sp, lsr #4
    58fc:	004d8900 	subeq	r8, sp, r0, lsl #18
    5900:	004d8500 	subeq	r8, sp, r0, lsl #10
    5904:	12421900 	subne	r1, r2, #0, 18
    5908:	ac010000 	stcge	0, cr0, [r1], {-0}
    590c:	00ba3203 	adcseq	r3, sl, r3, lsl #4
    5910:	4dab0000 	stcmi	0, cr0, [fp]
    5914:	4da70000 	stcmi	0, cr0, [r7]
    5918:	85190000 	ldrhi	r0, [r9, #-0]
    591c:	01000021 	tsteq	r0, r1, lsr #32
    5920:	1a2a03ad 	bne	a867dc <__RAM_SIZE+0x9867dc>
    5924:	cb000001 	blgt	5930 <__HEAP_SIZE+0x4930>
    5928:	c900004d 	stmdbgt	r0, {r0, r2, r3, r6}
    592c:	1900004d 	stmdbne	r0, {r0, r2, r3, r6}
    5930:	00000c9b 	muleq	r0, fp, ip
    5934:	3003ae01 	andcc	sl, r3, r1, lsl #28
    5938:	000000ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    593c:	00004de2 	andeq	r4, r0, r2, ror #27
    5940:	00004dde 	ldrdeq	r4, [r0], -lr
    5944:	000ddb1a 	andeq	sp, sp, sl, lsl fp
    5948:	03b00100 	movseq	r0, #0, 2
    594c:	0000f310 	andeq	pc, r0, r0, lsl r3	; <UNPREDICTABLE>
    5950:	004e0a00 	subeq	r0, lr, r0, lsl #20
    5954:	004e0000 	subeq	r0, lr, r0
    5958:	0d031a00 	vstreq	s2, [r3, #-0]
    595c:	b0010000 	andlt	r0, r1, r0
    5960:	00f32903 	rscseq	r2, r3, r3, lsl #18
    5964:	4e510000 	cdpmi	0, 5, cr0, cr1, cr0, {0}
    5968:	4e4b0000 	cdpmi	0, 4, cr0, cr11, cr0, {0}
    596c:	09220000 	stmdbeq	r2!, {}	; <UNPREDICTABLE>
    5970:	0100001d 	tsteq	r0, sp, lsl r0
    5974:	c60f03b1 			; <UNDEFINED> instruction: 0xc60f03b1
    5978:	02000003 	andeq	r0, r0, #3
    597c:	c01a6091 	mulsgt	sl, r1, r0
    5980:	01000012 	tsteq	r0, r2, lsl r0
    5984:	5c1503b2 	ldcpl	3, cr0, [r5], {178}	; 0xb2
    5988:	7e000006 	cdpvc	0, 0, cr0, cr0, cr6, {0}
    598c:	7a00004e 	bvc	5acc <__HEAP_SIZE+0x4acc>
    5990:	2800004e 	stmdacs	r0, {r1, r2, r3, r6}
    5994:	000002f8 	strdeq	r0, [r0], -r8
    5998:	00001b33 	andeq	r1, r0, r3, lsr fp
    599c:	000f3d1a 	andeq	r3, pc, sl, lsl sp	; <UNPREDICTABLE>
    59a0:	03cd0100 	biceq	r0, sp, #0, 2
    59a4:	00011527 	andeq	r1, r1, r7, lsr #10
    59a8:	004ea000 	subeq	sl, lr, r0
    59ac:	004e9c00 	subeq	r9, lr, r0, lsl #24
    59b0:	00001e00 	andeq	r1, r0, r0, lsl #28
    59b4:	0bfe0000 	bleq	fff859bc <__StackTop+0xc7e859bc>
    59b8:	1aef0000 	bne	ffbc59c0 <__StackTop+0xc7ac59c0>
    59bc:	011f0000 	tsteq	pc, r0
    59c0:	00740250 	rsbseq	r0, r4, r0, asr r2
    59c4:	0251011f 	subseq	r0, r1, #-1073741817	; 0xc0000007
    59c8:	011f0077 	tsteq	pc, r7, ror r0	; <UNPREDICTABLE>
    59cc:	00750252 	rsbseq	r0, r5, r2, asr r2
    59d0:	00001e00 	andeq	r1, r0, r0, lsl #28
    59d4:	05760000 	ldrbeq	r0, [r6, #-0]!
    59d8:	1b030000 	blne	c59e0 <__HEAP_SIZE+0xc49e0>
    59dc:	011f0000 	tsteq	pc, r0
    59e0:	00740250 	rsbseq	r0, r4, r0, asr r2
    59e4:	00001d00 	andeq	r1, r0, r0, lsl #26
    59e8:	240e0000 	strcs	r0, [lr], #-0
    59ec:	001d0000 	andseq	r0, sp, r0
    59f0:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
    59f4:	1e000024 	cdpne	0, 0, cr0, cr0, cr4, {1}
    59f8:	00000000 	andeq	r0, r0, r0
    59fc:	0000237f 	andeq	r2, r0, pc, ror r3
    5a00:	00001b29 	andeq	r1, r0, r9, lsr #22
    5a04:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    5a08:	1d002c74 	stcne	12, cr2, [r0, #-464]	; 0xfffffe30
    5a0c:	00000000 	andeq	r0, r0, r0
    5a10:	0000240e 	andeq	r2, r0, lr, lsl #8
    5a14:	00001d00 	andeq	r1, r0, r0, lsl #26
    5a18:	239c0000 	orrscs	r0, ip, #0
    5a1c:	001d0000 	andseq	r0, sp, r0
    5a20:	9c000000 	stcls	0, cr0, [r0], {-0}
    5a24:	1e000023 	cdpne	0, 0, cr0, cr0, cr3, {1}
    5a28:	00000000 	andeq	r0, r0, r0
    5a2c:	0000241c 	andeq	r2, r0, ip, lsl r4
    5a30:	00001b59 	andeq	r1, r0, r9, asr fp
    5a34:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    5a38:	1e006091 	mcrne	0, 0, r6, cr0, cr1, {4}
    5a3c:	00000000 	andeq	r0, r0, r0
    5a40:	00000abd 			; <UNDEFINED> instruction: 0x00000abd
    5a44:	00001b6d 	andeq	r1, r0, sp, ror #22
    5a48:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    5a4c:	1d000074 	stcne	0, cr0, [r0, #-464]	; 0xfffffe30
    5a50:	00000000 	andeq	r0, r0, r0
    5a54:	0000242b 	andeq	r2, r0, fp, lsr #8
    5a58:	0000001d 	andeq	r0, r0, sp, lsl r0
    5a5c:	00238e00 	eoreq	r8, r3, r0, lsl #28
    5a60:	00001d00 	andeq	r1, r0, r0, lsl #26
    5a64:	239c0000 	orrscs	r0, ip, #0
    5a68:	001d0000 	andseq	r0, sp, r0
    5a6c:	3a000000 	bcc	5a74 <__HEAP_SIZE+0x4a74>
    5a70:	1d000024 	stcne	0, cr0, [r0, #-144]	; 0xffffff70
    5a74:	00000000 	andeq	r0, r0, r0
    5a78:	0000238e 	andeq	r2, r0, lr, lsl #7
    5a7c:	0000001d 	andeq	r0, r0, sp, lsl r0
    5a80:	00239c00 	eoreq	r9, r3, r0, lsl #24
    5a84:	00001e00 	andeq	r1, r0, r0, lsl #28
    5a88:	24490000 	strbcs	r0, [r9], #-0
    5a8c:	1bbd0000 	blne	fef45a94 <__StackTop+0xc6e45a94>
    5a90:	011f0000 	tsteq	pc, r0
    5a94:	60910250 	addsvs	r0, r1, r0, asr r2
    5a98:	0251011f 	subseq	r0, r1, #-1073741817	; 0xc0000007
    5a9c:	1e005c91 	mcrne	12, 0, r5, cr0, cr1, {4}
    5aa0:	00000000 	andeq	r0, r0, r0
    5aa4:	000009ad 	andeq	r0, r0, sp, lsr #19
    5aa8:	00001bd1 	ldrdeq	r1, [r0], -r1	; <UNPREDICTABLE>
    5aac:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    5ab0:	1e000074 	mcrne	0, 0, r0, cr0, cr4, {3}
    5ab4:	00000000 	andeq	r0, r0, r0
    5ab8:	00002458 	andeq	r2, r0, r8, asr r4
    5abc:	00001be5 	andeq	r1, r0, r5, ror #23
    5ac0:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    5ac4:	1e001074 	mcrne	0, 0, r1, cr0, cr4, {3}
    5ac8:	00000000 	andeq	r0, r0, r0
    5acc:	00000abd 			; <UNDEFINED> instruction: 0x00000abd
    5ad0:	00001bf9 	strdeq	r1, [r0], -r9
    5ad4:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    5ad8:	1d000074 	stcne	0, cr0, [r0, #-464]	; 0xfffffe30
    5adc:	00000000 	andeq	r0, r0, r0
    5ae0:	0000242b 	andeq	r2, r0, fp, lsr #8
    5ae4:	0000001d 	andeq	r0, r0, sp, lsl r0
    5ae8:	00240e00 	eoreq	r0, r4, r0, lsl #28
    5aec:	00001e00 	andeq	r1, r0, r0, lsl #28
    5af0:	0abd0000 	beq	fef45af8 <__StackTop+0xc6e45af8>
    5af4:	1c1f0000 	ldcne	0, cr0, [pc], {-0}
    5af8:	011f0000 	tsteq	pc, r0
    5afc:	00740250 	rsbseq	r0, r4, r0, asr r2
    5b00:	00001d00 	andeq	r1, r0, r0, lsl #26
    5b04:	242b0000 	strtcs	r0, [fp], #-0
    5b08:	21000000 	mrscs	r0, (UNDEF: 0)
    5b0c:	00148e01 	andseq	r8, r4, r1, lsl #28
    5b10:	03860100 	orreq	r0, r6, #0, 2
    5b14:	03d20113 	bicseq	r0, r2, #-1073741820	; 0xc0000004
	...
    5b20:	4ebe0000 	cdpmi	0, 11, cr0, cr14, cr0, {0}
    5b24:	a4010000 	strge	r0, [r1], #-0
    5b28:	1900001c 	stmdbne	r0, {r2, r3, r4}
    5b2c:	000010ac 	andeq	r1, r0, ip, lsr #1
    5b30:	44038601 	strmi	r8, [r3], #-1537	; 0xfffff9ff
    5b34:	00000115 	andeq	r0, r0, r5, lsl r1
    5b38:	00004f02 	andeq	r4, r0, r2, lsl #30
    5b3c:	00004ef6 	strdeq	r4, [r0], -r6
    5b40:	000e0819 	andeq	r0, lr, r9, lsl r8
    5b44:	03870100 	orreq	r0, r7, #0, 2
    5b48:	00011544 	andeq	r1, r1, r4, asr #10
    5b4c:	004f5d00 	subeq	r5, pc, r0, lsl #26
    5b50:	004f5500 	subeq	r5, pc, r0, lsl #10
    5b54:	0de91a00 			; <UNDEFINED> instruction: 0x0de91a00
    5b58:	89010000 	stmdbhi	r1, {}	; <UNPREDICTABLE>
    5b5c:	03d21703 	bicseq	r1, r2, #786432	; 0xc0000
    5b60:	4f970000 	svcmi	0x00970000
    5b64:	4f910000 	svcmi	0x00910000
    5b68:	00200000 	eoreq	r0, r0, r0
    5b6c:	7e000000 	cdpvc	0, 0, cr0, cr0, cr0, {0}
    5b70:	1f000020 	svcne	0x00000020
    5b74:	f3035001 	vhadd.u8	d5, d3, d1
    5b78:	011f5001 	tsteq	pc, r1
    5b7c:	1f300151 	svcne	0x00300151
    5b80:	32015201 	andcc	r5, r1, #268435456	; 0x10000000
    5b84:	01210000 			; <UNDEFINED> instruction: 0x01210000
    5b88:	00001105 	andeq	r1, r0, r5, lsl #2
    5b8c:	13035e01 	movwne	r5, #15873	; 0x3e01
    5b90:	0003d201 	andeq	sp, r3, r1, lsl #4
	...
    5b9c:	004fc200 	subeq	ip, pc, r0, lsl #4
    5ba0:	1d410100 	stfnee	f0, [r1, #-0]
    5ba4:	ac190000 	ldcge	0, cr0, [r9], {-0}
    5ba8:	01000010 	tsteq	r0, r0, lsl r0
    5bac:	154a035e 	strbne	r0, [sl, #-862]	; 0xfffffca2
    5bb0:	1e000001 	cdpne	0, 0, cr0, cr0, cr1, {0}
    5bb4:	12000050 	andne	r0, r0, #80	; 0x50
    5bb8:	19000050 	stmdbne	r0, {r4, r6}
    5bbc:	00000e08 	andeq	r0, r0, r8, lsl #28
    5bc0:	4a035f01 	bmi	dd7cc <__HEAP_SIZE+0xdc7cc>
    5bc4:	00000115 	andeq	r0, r0, r5, lsl r1
    5bc8:	00005079 	andeq	r5, r0, r9, ror r0
    5bcc:	00005071 	andeq	r5, r0, r1, ror r0
    5bd0:	000ffb19 	andeq	pc, pc, r9, lsl fp	; <UNPREDICTABLE>
    5bd4:	03600100 	cmneq	r0, #0, 2
    5bd8:	001d4148 	andseq	r4, sp, r8, asr #2
    5bdc:	0050b700 	subseq	fp, r0, r0, lsl #14
    5be0:	0050ad00 	subseq	sl, r0, r0, lsl #26
    5be4:	0de91a00 			; <UNDEFINED> instruction: 0x0de91a00
    5be8:	62010000 	andvs	r0, r1, #0
    5bec:	03d21703 	bicseq	r1, r2, #786432	; 0xc0000
    5bf0:	51020000 	mrspl	r0, (UNDEF: 2)
    5bf4:	50fc0000 	rscspl	r0, ip, r0
    5bf8:	00200000 	eoreq	r0, r0, r0
    5bfc:	e9000000 	stmdb	r0, {}	; <UNPREDICTABLE>
    5c00:	1f000021 	svcne	0x00000021
    5c04:	f3035001 	vhadd.u8	d5, d3, d1
    5c08:	011f5001 	tsteq	pc, r1
    5c0c:	1f300151 	svcne	0x00300151
    5c10:	30015201 	andcc	r5, r1, r1, lsl #4
    5c14:	0353011f 	cmpeq	r3, #-1073741817	; 0xc0000007
    5c18:	1f5201f3 	svcne	0x005201f3
    5c1c:	01007d02 	tsteq	r0, r2, lsl #26
    5c20:	07000032 	smladxeq	r0, r2, r0, r0
    5c24:	0002ab04 	andeq	sl, r2, r4, lsl #22
    5c28:	c1012100 	mrsgt	r2, (UNDEF: 17)
    5c2c:	0100000b 	tsteq	r0, fp
    5c30:	0110032f 	tsteq	r0, pc, lsr #6
    5c34:	000000f3 	strdeq	r0, [r0], -r3
	...
    5c40:	0000512d 	andeq	r5, r0, sp, lsr #2
    5c44:	001ddb01 	andseq	sp, sp, r1, lsl #22
    5c48:	0bb01900 	bleq	fec0c050 <__StackTop+0xc6b0c050>
    5c4c:	2f010000 	svccs	0x00010000
    5c50:	03d23803 	bicseq	r3, r2, #196608	; 0x30000
    5c54:	51510000 	cmppl	r1, r0
    5c58:	514d0000 	mrspl	r0, (UNDEF: 77)
    5c5c:	85190000 	ldrhi	r0, [r9, #-0]
    5c60:	01000021 	tsteq	r0, r1, lsr #32
    5c64:	1a350330 	bne	d4692c <__RAM_SIZE+0xc4692c>
    5c68:	73000001 	movwvc	r0, #1
    5c6c:	6f000051 	svcvs	0x00000051
    5c70:	1a000051 	bne	5dbc <__HEAP_SIZE+0x4dbc>
    5c74:	00001abd 			; <UNDEFINED> instruction: 0x00001abd
    5c78:	14033201 	strne	r3, [r3], #-513	; 0xfffffdff
    5c7c:	000000f3 	strdeq	r0, [r0], -r3
    5c80:	00005195 	muleq	r0, r5, r1
    5c84:	00005191 	muleq	r0, r1, r1
    5c88:	000baf1a 	andeq	sl, fp, sl, lsl pc
    5c8c:	03330100 	teqeq	r3, #0, 2
    5c90:	00065c19 	andeq	r5, r6, r9, lsl ip
    5c94:	0051b800 	subseq	fp, r1, r0, lsl #16
    5c98:	0051b400 	subseq	fp, r1, r0, lsl #8
    5c9c:	00001d00 	andeq	r1, r0, r0, lsl #26
    5ca0:	24940000 	ldrcs	r0, [r4], #0
    5ca4:	00200000 	eoreq	r0, r0, r0
    5ca8:	06000000 	streq	r0, [r0], -r0
    5cac:	1f000013 	svcne	0x00000013
    5cb0:	74025001 	strvc	r5, [r2], #-1
    5cb4:	51011f00 	tstpl	r1, r0, lsl #30
    5cb8:	00007502 	andeq	r7, r0, r2, lsl #10
    5cbc:	b6012100 	strlt	r2, [r1], -r0, lsl #2
    5cc0:	01000013 	tsteq	r0, r3, lsl r0
    5cc4:	011002f4 			; <UNDEFINED> instruction: 0x011002f4
    5cc8:	000000f3 	strdeq	r0, [r0], -r3
	...
    5cd4:	000051d6 	ldrdeq	r5, [r0], -r6
    5cd8:	001e5401 	andseq	r5, lr, r1, lsl #8
    5cdc:	0bb01900 	bleq	fec0c0e4 <__StackTop+0xc6b0c0e4>
    5ce0:	f4010000 	vst4.8	{d0-d3}, [r1], r0
    5ce4:	03d23802 	bicseq	r3, r2, #131072	; 0x20000
    5ce8:	51fa0000 	mvnspl	r0, r0
    5cec:	51f60000 	mvnspl	r0, r0
    5cf0:	bd1a0000 	ldclt	0, cr0, [sl, #-0]
    5cf4:	0100001a 	tsteq	r0, sl, lsl r0
    5cf8:	f31402f6 	vqsub.u16	q0, q10, q11
    5cfc:	1a000000 	bne	5d04 <__HEAP_SIZE+0x4d04>
    5d00:	18000052 	stmdane	r0, {r1, r4, r6}
    5d04:	1a000052 	bne	5e54 <__HEAP_SIZE+0x4e54>
    5d08:	00000baf 	andeq	r0, r0, pc, lsr #23
    5d0c:	1902f701 	stmdbne	r2, {r0, r8, r9, sl, ip, sp, lr, pc}
    5d10:	0000065c 	andeq	r0, r0, ip, asr r6
    5d14:	00005232 	andeq	r5, r0, r2, lsr r2
    5d18:	0000522e 	andeq	r5, r0, lr, lsr #4
    5d1c:	0000001d 	andeq	r0, r0, sp, lsl r0
    5d20:	00249400 	eoreq	r9, r4, r0, lsl #8
    5d24:	00002000 	andeq	r2, r0, r0
    5d28:	19ee0000 	stmibne	lr!, {}^	; <UNPREDICTABLE>
    5d2c:	011f0000 	tsteq	pc, r0
    5d30:	00740250 	rsbseq	r0, r4, r0, asr r2
    5d34:	01210000 			; <UNDEFINED> instruction: 0x01210000
    5d38:	00001009 	andeq	r1, r0, r9
    5d3c:	13029801 	movwne	r9, #10241	; 0x2801
    5d40:	0003d201 	andeq	sp, r3, r1, lsl #4
	...
    5d4c:	00525000 	subseq	r5, r2, r0
    5d50:	1f040100 	svcne	0x00040100
    5d54:	49190000 	ldmdbmi	r9, {}	; <UNPREDICTABLE>
    5d58:	01000011 	tsteq	r0, r1, lsl r0
    5d5c:	e23a0298 	eors	r0, sl, #152, 4	; 0x80000009
    5d60:	8c000000 	stchi	0, cr0, [r0], {-0}
    5d64:	88000052 	stmdahi	r0, {r1, r4, r6}
    5d68:	19000052 	stmdbne	r0, {r1, r4, r6}
    5d6c:	00000ffb 	strdeq	r0, [r0], -fp
    5d70:	3c029901 			; <UNDEFINED> instruction: 0x3c029901
    5d74:	00001d41 	andeq	r1, r0, r1, asr #26
    5d78:	000052b3 			; <UNDEFINED> instruction: 0x000052b3
    5d7c:	000052ad 	andeq	r5, r0, sp, lsr #5
    5d80:	000d131a 	andeq	r1, sp, sl, lsl r3
    5d84:	029b0100 	addseq	r0, fp, #0, 2
    5d88:	0003d217 	andeq	sp, r3, r7, lsl r2
    5d8c:	0052e300 	subseq	lr, r2, r0, lsl #6
    5d90:	0052df00 	subseq	sp, r2, r0, lsl #30
    5d94:	0f6f2500 	svceq	0x006f2500
    5d98:	9c010000 	stcls	0, cr0, [r1], {-0}
    5d9c:	01151b02 	tsteq	r5, r2, lsl #22
    5da0:	25010000 	strcs	r0, [r1, #-0]
    5da4:	00000cf7 	strdeq	r0, [r0], -r7
    5da8:	3e029c01 	cdpcc	12, 0, cr9, cr2, cr1, {0}
    5dac:	00000115 	andeq	r0, r0, r5, lsl r1
    5db0:	00001e00 	andeq	r1, r0, r0, lsl #28
    5db4:	21e90000 	mvncs	r0, r0
    5db8:	1ef30000 	cdpne	0, 15, cr0, cr3, cr0, {0}
    5dbc:	011f0000 	tsteq	pc, r0
    5dc0:	1f310150 	svcne	0x00310150
    5dc4:	30015101 	andcc	r5, r1, r1, lsl #2
    5dc8:	0152011f 	cmpeq	r2, pc, lsl r1
    5dcc:	53011f30 	movwpl	r1, #7984	; 0x1f30
    5dd0:	5101f303 	tstpl	r1, r3, lsl #6	; <UNPREDICTABLE>
    5dd4:	00002000 	andeq	r2, r0, r0
    5dd8:	1f930000 	svcne	0x00930000
    5ddc:	011f0000 	tsteq	pc, r0
    5de0:	00740250 	rsbseq	r0, r4, r0, asr r2
    5de4:	01210000 			; <UNDEFINED> instruction: 0x01210000
    5de8:	00001048 	andeq	r1, r0, r8, asr #32
    5dec:	13028401 	movwne	r8, #9217	; 0x2401
    5df0:	0003d201 	andeq	sp, r3, r1, lsl #4
	...
    5dfc:	00530100 	subseq	r0, r3, r0, lsl #2
    5e00:	1f930100 	svcne	0x00930100
    5e04:	49190000 	ldmdbmi	r9, {}	; <UNPREDICTABLE>
    5e08:	01000011 	tsteq	r0, r1, lsl r0
    5e0c:	e2340284 	eors	r0, r4, #132, 4	; 0x40000008
    5e10:	25000000 	strcs	r0, [r0, #-0]
    5e14:	21000053 	qaddcs	r0, r3, r0
    5e18:	1a000053 	bne	5f6c <__HEAP_SIZE+0x4f6c>
    5e1c:	00000d13 	andeq	r0, r0, r3, lsl sp
    5e20:	17028601 	strne	r8, [r2, -r1, lsl #12]
    5e24:	000003d2 	ldrdeq	r0, [r0], -r2
    5e28:	0000534a 	andeq	r5, r0, sl, asr #6
    5e2c:	00005346 	andeq	r5, r0, r6, asr #6
    5e30:	000f6f25 	andeq	r6, pc, r5, lsr #30
    5e34:	02870100 	addeq	r0, r7, #0, 2
    5e38:	0001151b 	andeq	r1, r1, fp, lsl r5
    5e3c:	f7250100 			; <UNDEFINED> instruction: 0xf7250100
    5e40:	0100000c 	tsteq	r0, ip
    5e44:	153e0287 	ldrne	r0, [lr, #-647]!	; 0xfffffd79
    5e48:	00000001 	andeq	r0, r0, r1
    5e4c:	0000001e 	andeq	r0, r0, lr, lsl r0
    5e50:	00207e00 	eoreq	r7, r0, r0, lsl #28
    5e54:	001f8200 	andseq	r8, pc, r0, lsl #4
    5e58:	50011f00 	andpl	r1, r1, r0, lsl #30
    5e5c:	011f3101 	tsteq	pc, r1, lsl #2
    5e60:	00300151 	eorseq	r0, r0, r1, asr r1
    5e64:	00000020 	andeq	r0, r0, r0, lsr #32
    5e68:	001f9300 	andseq	r9, pc, r0, lsl #6
    5e6c:	50011f00 	andpl	r1, r1, r0, lsl #30
    5e70:	00007402 	andeq	r7, r0, r2, lsl #8
    5e74:	10672600 	rsbne	r2, r7, r0, lsl #12
    5e78:	66010000 	strvs	r0, [r1], -r0
    5e7c:	00011102 	andeq	r1, r1, r2, lsl #2
    5e80:	00000000 	andeq	r0, r0, r0
    5e84:	68000000 	stmdavs	r0, {}	; <UNPREDICTABLE>
    5e88:	01000053 	qaddeq	r0, r3, r0
    5e8c:	00001fe4 	andeq	r1, r0, r4, ror #31
    5e90:	000d1219 	andeq	r1, sp, r9, lsl r2
    5e94:	02660100 	rsbeq	r0, r6, #0, 2
    5e98:	0006562f 	andeq	r5, r6, pc, lsr #12
    5e9c:	00539a00 	subseq	r9, r3, r0, lsl #20
    5ea0:	00539400 	subseq	r9, r3, r0, lsl #8
    5ea4:	00002000 	andeq	r2, r0, r0
    5ea8:	19ee0000 	stmibne	lr!, {}^	; <UNPREDICTABLE>
    5eac:	011f0000 	tsteq	pc, r0
    5eb0:	01f30350 	mvnseq	r0, r0, asr r3
    5eb4:	51011f50 	tstpl	r1, r0, asr pc
    5eb8:	011f3001 	tsteq	pc, r1
    5ebc:	1f300152 	svcne	0x00300152
    5ec0:	30015301 	andcc	r5, r1, r1, lsl #6
    5ec4:	e1260000 			; <UNDEFINED> instruction: 0xe1260000
    5ec8:	0100000c 	tsteq	r0, ip
    5ecc:	010d0236 	tsteq	sp, r6, lsr r2
    5ed0:	1000227e 	andne	r2, r0, lr, ror r2
    5ed4:	1000229e 	mulne	r0, lr, r2
    5ed8:	000053c6 	andeq	r5, r0, r6, asr #7
    5edc:	00207e01 	eoreq	r7, r0, r1, lsl #28
    5ee0:	11791900 	cmnne	r9, r0, lsl #18
    5ee4:	36010000 	strcc	r0, [r1], -r0
    5ee8:	01153602 	tsteq	r5, r2, lsl #12
    5eec:	53ee0000 	mvnpl	r0, #0
    5ef0:	53e60000 	mvnpl	r0, #0
    5ef4:	14190000 	ldrne	r0, [r9], #-0
    5ef8:	0100000f 	tsteq	r0, pc
    5efc:	15360237 	ldrne	r0, [r6, #-567]!	; 0xfffffdc9
    5f00:	2f000001 	svccs	0x00000001
    5f04:	27000054 	smlsdcs	r0, r4, r0, r0
    5f08:	19000054 	stmdbne	r0, {r2, r4, r6}
    5f0c:	00000e18 	andeq	r0, r0, r8, lsl lr
    5f10:	2e023801 	cdpcs	8, 0, cr3, cr2, cr1, {0}
    5f14:	0000012b 	andeq	r0, r0, fp, lsr #2
    5f18:	0000546c 	andeq	r5, r0, ip, ror #8
    5f1c:	00005466 	andeq	r5, r0, r6, ror #8
    5f20:	00114919 	andseq	r4, r1, r9, lsl r9
    5f24:	02390100 	eorseq	r0, r9, #0, 2
    5f28:	0000e232 	andeq	lr, r0, r2, lsr r2
    5f2c:	00549c00 	subseq	r9, r4, r0, lsl #24
    5f30:	00549800 	subseq	r9, r4, r0, lsl #16
    5f34:	0d121900 	vldreq.16	s2, [r2, #-0]	; <UNPREDICTABLE>
    5f38:	3a010000 	bcc	45f40 <__HEAP_SIZE+0x44f40>
    5f3c:	06562e02 	ldrbeq	r2, [r6], -r2, lsl #28
    5f40:	54c10000 	strbpl	r0, [r1], #0
    5f44:	54bd0000 	ldrtpl	r0, [sp], #0
    5f48:	94200000 	strtls	r0, [r0], #-0
    5f4c:	a8100022 	ldmdage	r0, {r1, r5}
    5f50:	1f000022 	svcne	0x00000022
    5f54:	74025001 	strvc	r5, [r2], #-1
    5f58:	51011f00 	tstpl	r1, r0, lsl #30
    5f5c:	00003101 	andeq	r3, r0, r1, lsl #2
    5f60:	10340121 	eorsne	r0, r4, r1, lsr #2
    5f64:	f6010000 			; <UNDEFINED> instruction: 0xf6010000
    5f68:	d2011301 	andle	r1, r1, #67108864	; 0x4000000
    5f6c:	00000003 	andeq	r0, r0, r3
    5f70:	00000000 	andeq	r0, r0, r0
    5f74:	e1000000 	mrs	r0, (UNDEF: 0)
    5f78:	01000054 	qaddeq	r0, r4, r0
    5f7c:	00002160 	andeq	r2, r0, r0, ror #2
    5f80:	00117919 	andseq	r7, r1, r9, lsl r9
    5f84:	01f60100 	mvnseq	r0, r0, lsl #2
    5f88:	0001153a 	andeq	r1, r1, sl, lsr r5
    5f8c:	00553100 	subseq	r3, r5, r0, lsl #2
    5f90:	00552500 	subseq	r2, r5, r0, lsl #10
    5f94:	0f141900 	svceq	0x00141900
    5f98:	f7010000 			; <UNDEFINED> instruction: 0xf7010000
    5f9c:	01153a01 	tsteq	r5, r1, lsl #20
    5fa0:	55880000 	strpl	r0, [r8]
    5fa4:	557e0000 	ldrbpl	r0, [lr, #-0]!
    5fa8:	49190000 	ldmdbmi	r9, {}	; <UNPREDICTABLE>
    5fac:	01000011 	tsteq	r0, r1, lsl r0
    5fb0:	e23601f8 	eors	r0, r6, #248, 2	; 0x3e
    5fb4:	d2000000 	andle	r0, r0, #0
    5fb8:	ca000055 	bgt	6114 <__HEAP_SIZE+0x5114>
    5fbc:	1a000055 	bne	6118 <__HEAP_SIZE+0x5118>
    5fc0:	00000d12 	andeq	r0, r0, r2, lsl sp
    5fc4:	1301fa01 	movwne	pc, #6657	; 0x1a01	; <UNPREDICTABLE>
    5fc8:	00000656 	andeq	r0, r0, r6, asr r6
    5fcc:	00005616 	andeq	r5, r0, r6, lsl r6
    5fd0:	0000560c 	andeq	r5, r0, ip, lsl #12
    5fd4:	0012091a 	andseq	r0, r2, sl, lsl r9
    5fd8:	01fb0100 	mvnseq	r0, r0, lsl #2
    5fdc:	00002910 	andeq	r2, r0, r0, lsl r9
    5fe0:	00565e00 	subseq	r5, r6, r0, lsl #28
    5fe4:	00565800 	subseq	r5, r6, r0, lsl #16
    5fe8:	0e181a00 	vnmlseq.f32	s2, s16, s0
    5fec:	fc010000 	stc2	0, cr0, [r1], {-0}
    5ff0:	012b1301 			; <UNDEFINED> instruction: 0x012b1301
    5ff4:	56970000 	ldrpl	r0, [r7], r0
    5ff8:	568f0000 	strpl	r0, [pc], r0
    5ffc:	001e0000 	andseq	r0, lr, r0
    6000:	a3000000 	movwge	r0, #0
    6004:	35000024 	strcc	r0, [r0, #-36]	; 0xffffffdc
    6008:	1f000021 	svcne	0x00000021
    600c:	74075001 	strvc	r5, [r7], #-1
    6010:	1e007600 	cfmadd32ne	mvax0, mvfx7, mvfx0, mvfx0
    6014:	20005c23 	andcs	r5, r0, r3, lsr #24
    6018:	00000000 	andeq	r0, r0, r0
    601c:	00001fe4 	andeq	r1, r0, r4, ror #31
    6020:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    6024:	011f0076 	tsteq	pc, r6, ror r0	; <UNPREDICTABLE>
    6028:	00740251 	rsbseq	r0, r4, r1, asr r2
    602c:	0352011f 	cmpeq	r2, #-1073741817	; 0xc0000007
    6030:	1f00dc75 	svcne	0x0000dc75
    6034:	77025301 	strvc	r5, [r2, -r1, lsl #6]
    6038:	7d021f00 	stcvc	15, cr1, [r2, #-0]
    603c:	00750200 	rsbseq	r0, r5, r0, lsl #4
    6040:	01240000 			; <UNDEFINED> instruction: 0x01240000
    6044:	00000b3d 	andeq	r0, r0, sp, lsr fp
    6048:	1001be01 	andne	fp, r1, r1, lsl #28
    604c:	0000f301 	andeq	pc, r0, r1, lsl #6
	...
    6058:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    605c:	0021dd01 	eoreq	sp, r1, r1, lsl #26
    6060:	12c11900 	sbcne	r1, r1, #0, 18
    6064:	be010000 	cdplt	0, 0, cr0, cr1, cr0, {0}
    6068:	03d23d01 	bicseq	r3, r2, #1, 26	; 0x40
    606c:	56d90000 	ldrbpl	r0, [r9], r0
    6070:	56d10000 	ldrbpl	r0, [r1], r0
    6074:	172a0000 	strne	r0, [sl, -r0]!
    6078:	0100000e 	tsteq	r0, lr
    607c:	dd3a01bf 	ldfles	f0, [sl, #-764]!	; 0xfffffd04
    6080:	01000021 	tsteq	r0, r1, lsr #32
    6084:	0ffa2a51 	svceq	0x00fa2a51
    6088:	c0010000 	andgt	r0, r1, r0
    608c:	21e34001 	mvncs	r4, r1
    6090:	52010000 	andpl	r0, r1, #0
    6094:	001abd1a 	andseq	fp, sl, sl, lsl sp
    6098:	01c20100 	biceq	r0, r2, r0, lsl #2
    609c:	0000f314 	andeq	pc, r0, r4, lsl r3	; <UNPREDICTABLE>
    60a0:	00571500 	subseq	r1, r7, r0, lsl #10
    60a4:	00571100 	subseq	r1, r7, r0, lsl #2
    60a8:	12c01a00 	sbcne	r1, r0, #0, 20
    60ac:	c3010000 	movwgt	r0, #4096	; 0x1000
    60b0:	065c1901 	ldrbeq	r1, [ip], -r1, lsl #18
    60b4:	573d0000 	ldrpl	r0, [sp, -r0]!
    60b8:	57350000 	ldrpl	r0, [r5, -r0]!
    60bc:	07000000 	streq	r0, [r0, -r0]
    60c0:	00012b04 	andeq	r2, r1, r4, lsl #22
    60c4:	41040700 	tstmi	r4, r0, lsl #14
    60c8:	2100001d 	tstcs	r0, sp, lsl r0
    60cc:	0012a601 	andseq	sl, r2, r1, lsl #12
    60d0:	01780100 	cmneq	r8, r0, lsl #2
    60d4:	03d20113 	bicseq	r0, r2, #-1073741820	; 0xc0000004
    60d8:	229e0000 	addscs	r0, lr, #0
    60dc:	22dc1000 	sbcscs	r1, ip, #0
    60e0:	57751000 	ldrbpl	r1, [r5, -r0]!
    60e4:	a8010000 	stmdage	r1, {}	; <UNPREDICTABLE>
    60e8:	19000022 	stmdbne	r0, {r1, r5}
    60ec:	00001179 	andeq	r1, r0, r9, ror r1
    60f0:	40017801 	andmi	r7, r1, r1, lsl #16
    60f4:	00000115 	andeq	r0, r0, r5, lsl r1
    60f8:	000057e7 	andeq	r5, r0, r7, ror #15
    60fc:	000057d1 	ldrdeq	r5, [r0], -r1
    6100:	000f1419 	andeq	r1, pc, r9, lsl r4	; <UNPREDICTABLE>
    6104:	01790100 	cmneq	r9, r0, lsl #2
    6108:	00011540 	andeq	r1, r1, r0, asr #10
    610c:	00587400 	subseq	r7, r8, r0, lsl #8
    6110:	00586e00 	subseq	r6, r8, r0, lsl #28
    6114:	0e181900 	vnmlseq.f16	s2, s16, s0	; <UNPREDICTABLE>
    6118:	7a010000 	bvc	46120 <__HEAP_SIZE+0x45120>
    611c:	012b3801 			; <UNDEFINED> instruction: 0x012b3801
    6120:	58a60000 	stmiapl	r6!, {}	; <UNPREDICTABLE>
    6124:	58a00000 	stmiapl	r0!, {}	; <UNPREDICTABLE>
    6128:	fb190000 	blx	646132 <__RAM_SIZE+0x546132>
    612c:	0100000f 	tsteq	r0, pc
    6130:	413e017b 	teqmi	lr, fp, ror r1
    6134:	d800001d 	stmdale	r0, {r0, r2, r3, r4}
    6138:	d2000058 	andle	r0, r0, #88	; 0x58
    613c:	19000058 	stmdbne	r0, {r3, r4, r6}
    6140:	00001149 	andeq	r1, r0, r9, asr #2
    6144:	3c017c01 	stccc	12, cr7, [r1], {1}
    6148:	000000e2 	andeq	r0, r0, r2, ror #1
    614c:	00005905 	andeq	r5, r0, r5, lsl #18
    6150:	00005901 	andeq	r5, r0, r1, lsl #18
    6154:	000d121a 	andeq	r1, sp, sl, lsl r2
    6158:	017e0100 	cmneq	lr, r0, lsl #2
    615c:	00065613 	andeq	r5, r6, r3, lsl r6
    6160:	00593100 	subseq	r3, r9, r0, lsl #2
    6164:	00592500 	subseq	r2, r9, r0, lsl #10
    6168:	22c22000 	sbccs	r2, r2, #0
    616c:	1fe41000 	svcne	0x00e41000
    6170:	011f0000 	tsteq	pc, r0
    6174:	01f30350 	mvnseq	r0, r0, asr r3
    6178:	53011f50 	movwpl	r1, #8016	; 0x1f50
    617c:	94009104 	strls	r9, [r0], #-260	; 0xfffffefc
    6180:	7d021f01 	stcvc	15, cr1, [r2, #-4]
    6184:	00740200 	rsbseq	r0, r4, r0, lsl #4
    6188:	01210000 			; <UNDEFINED> instruction: 0x01210000
    618c:	000013de 	ldrdeq	r1, [r0], -lr
    6190:	0c012f01 	stceq	15, cr2, [r1], {1}
    6194:	0000f301 	andeq	pc, r0, r1, lsl #6
    6198:	0021f800 	eoreq	pc, r1, r0, lsl #16
    619c:	00227e10 	eoreq	r7, r2, r0, lsl lr
    61a0:	00597e10 	subseq	r7, r9, r0, lsl lr
    61a4:	23700100 	cmncs	r0, #0, 2
    61a8:	c1190000 	tstgt	r9, r0
    61ac:	01000012 	tsteq	r0, r2, lsl r0
    61b0:	d22e012f 	eorle	r0, lr, #-1073741813	; 0xc000000b
    61b4:	c6000003 	strgt	r0, [r0], -r3
    61b8:	b6000059 			; <UNDEFINED> instruction: 0xb6000059
    61bc:	19000059 	stmdbne	r0, {r0, r3, r4, r6}
    61c0:	00000d13 	andeq	r0, r0, r3, lsl sp
    61c4:	2b013001 	blcs	521d0 <__HEAP_SIZE+0x511d0>
    61c8:	000000f3 	strdeq	r0, [r0], -r3
    61cc:	00005a31 	andeq	r5, r0, r1, lsr sl
    61d0:	00005a29 	andeq	r5, r0, r9, lsr #20
    61d4:	001abd1a 	andseq	fp, sl, sl, lsl sp
    61d8:	01320100 	teqeq	r2, r0, lsl #2
    61dc:	0000f310 	andeq	pc, r0, r0, lsl r3	; <UNPREDICTABLE>
    61e0:	005a6b00 	subseq	r6, sl, r0, lsl #22
    61e4:	005a6500 	subseq	r6, sl, r0, lsl #10
    61e8:	12c01a00 	sbcne	r1, r0, #0, 20
    61ec:	33010000 	movwcc	r0, #4096	; 0x1000
    61f0:	065c1501 	ldrbeq	r1, [ip], -r1, lsl #10
    61f4:	5aa70000 	bpl	fe9c61fc <__StackTop+0xc68c61fc>
    61f8:	5a970000 	bpl	fe5c6200 <__StackTop+0xc64c6200>
    61fc:	201d0000 	andscs	r0, sp, r0
    6200:	8e100022 	cdphi	0, 1, cr0, cr0, cr2, {1}
    6204:	1d000023 	stcne	0, cr0, [r0, #-140]	; 0xffffff74
    6208:	1000224e 	andne	r2, r0, lr, asr #4
    620c:	0000239c 	muleq	r0, ip, r3
    6210:	00225a1e 	eoreq	r5, r2, lr, lsl sl
    6214:	00237f10 	eoreq	r7, r3, r0, lsl pc
    6218:	00234200 	eoreq	r4, r3, r0, lsl #4
    621c:	50011f00 	andpl	r1, r1, r0, lsl #30
    6220:	00107402 	andseq	r7, r0, r2, lsl #8
    6224:	0022621d 	eoreq	r6, r2, sp, lsl r2
    6228:	00240e10 	eoreq	r0, r4, r0, lsl lr
    622c:	226c1e00 	rsbcs	r1, ip, #0, 28
    6230:	24b11000 	ldrtcs	r1, [r1], #0
    6234:	235f0000 	cmpcs	pc, #0
    6238:	011f0000 	tsteq	pc, r0
    623c:	10740250 	rsbsne	r0, r4, r0, asr r2
    6240:	22742000 	rsbscs	r2, r4, #0
    6244:	24b11000 	ldrtcs	r1, [r1], #0
    6248:	011f0000 	tsteq	pc, r0
    624c:	2c740250 	lfmcs	f0, 2, [r4], #-320	; 0xfffffec0
    6250:	012b0000 			; <UNDEFINED> instruction: 0x012b0000
    6254:	000da901 	andeq	sl, sp, r1, lsl #18
    6258:	000da900 	andeq	sl, sp, r0, lsl #18
    625c:	06c60800 	strbeq	r0, [r6], r0, lsl #16
    6260:	01012b0d 	tsteq	r1, sp, lsl #22
    6264:	00001468 	andeq	r1, r0, r8, ror #8
    6268:	00001468 	andeq	r1, r0, r8, ror #8
    626c:	0c0de808 	stceq	8, cr14, [sp], {8}
    6270:	7701012c 	strvc	r0, [r1, -ip, lsr #2]
    6274:	7700000c 	strvc	r0, [r0, -ip]
    6278:	0500000c 	streq	r0, [r0, #-12]
    627c:	012c0d71 			; <UNDEFINED> instruction: 0x012c0d71
    6280:	000ae701 	andeq	lr, sl, r1, lsl #14
    6284:	000ae700 	andeq	lr, sl, r0, lsl #14
    6288:	0d720500 	cfldr64eq	mvdx0, [r2, #-0]
    628c:	c401012b 	strgt	r0, [r1], #-299	; 0xfffffed5
    6290:	c400000f 	strgt	r0, [r0], #-15
    6294:	0800000f 	stmdaeq	r0, {r0, r1, r2, r3}
    6298:	2b060dcc 	blcs	1899d0 <__RAM_SIZE+0x899d0>
    629c:	12da0101 	sbcsne	r0, sl, #1073741824	; 0x40000000
    62a0:	12da0000 	sbcsne	r0, sl, #0
    62a4:	0e080000 	cdpeq	0, 0, cr0, cr8, cr0, {0}
    62a8:	012d060e 			; <UNDEFINED> instruction: 0x012d060e
    62ac:	000c9401 	andeq	r9, ip, r1, lsl #8
    62b0:	000c8a00 	andeq	r8, ip, r0, lsl #20
    62b4:	2b000b00 	blcs	8ebc <__HEAP_SIZE+0x7ebc>
    62b8:	0f570101 	svceq	0x00570101
    62bc:	0f570000 	svceq	0x00570000
    62c0:	20080000 	andcs	r0, r8, r0
    62c4:	012c0c0e 			; <UNDEFINED> instruction: 0x012c0c0e
    62c8:	00126501 	andseq	r6, r2, r1, lsl #10
    62cc:	00126500 	andseq	r6, r2, r0, lsl #10
    62d0:	06b80a00 	ldrteq	r0, [r8], r0, lsl #20
    62d4:	2101012c 	tstcs	r1, ip, lsr #2
    62d8:	21000010 	tstcs	r0, r0, lsl r0
    62dc:	05000010 	streq	r0, [r0, #-16]
    62e0:	012c1174 			; <UNDEFINED> instruction: 0x012c1174
    62e4:	000d2d01 	andeq	r2, sp, r1, lsl #26
    62e8:	000d2d00 	andeq	r2, sp, r0, lsl #26
    62ec:	0d750500 	cfldr64eq	mvdx0, [r5, #-0]
    62f0:	2201012c 	andcs	r0, r1, #44, 2
    62f4:	2200000b 	andcs	r0, r0, #11
    62f8:	0500000b 	streq	r0, [r0, #-11]
    62fc:	012b0d6f 			; <UNDEFINED> instruction: 0x012b0d6f
    6300:	0010d101 	andseq	sp, r0, r1, lsl #2
    6304:	0010d100 	andseq	sp, r0, r0, lsl #2
    6308:	0e650800 	cdpeq	8, 6, cr0, cr5, cr0, {0}
    630c:	01012b06 	tsteq	r1, r6, lsl #22
    6310:	0000121b 	andeq	r1, r0, fp, lsl r2
    6314:	0000121b 	andeq	r1, r0, fp, lsl r2
    6318:	0c069308 	stceq	3, cr9, [r6], {8}
    631c:	c001012b 	andgt	r0, r1, fp, lsr #2
    6320:	c000000d 	andgt	r0, r0, sp
    6324:	0800000d 	stmdaeq	r0, {r0, r2, r3}
    6328:	2b06065b 	blcs	187c9c <__RAM_SIZE+0x87c9c>
    632c:	12500101 	subsne	r0, r0, #1073741824	; 0x40000000
    6330:	12500000 	subsne	r0, r0, #0
    6334:	53080000 	movwpl	r0, #32768	; 0x8000
    6338:	012b0c0d 			; <UNDEFINED> instruction: 0x012b0c0d
    633c:	000ebe01 	andeq	fp, lr, r1, lsl #28
    6340:	000ebe00 	andeq	fp, lr, r0, lsl #28
    6344:	0dbb0800 	ldceq	8, cr0, [fp]
    6348:	01012b06 	tsteq	r1, r6, lsl #22
    634c:	00000ed4 	ldrdeq	r0, [r0], -r4
    6350:	00000ed4 	ldrdeq	r0, [r0], -r4
    6354:	0e0e5f08 	cdpeq	15, 0, cr5, cr14, cr8, {0}
    6358:	6901012b 	stmdbvs	r1, {r0, r1, r3, r5, r8}
    635c:	69000013 	stmdbvs	r0, {r0, r1, r4}
    6360:	08000013 	stmdaeq	r0, {r0, r1, r4}
    6364:	2b060e2a 	blcs	189c14 <__RAM_SIZE+0x89c14>
    6368:	12eb0101 	rscne	r0, fp, #1073741824	; 0x40000000
    636c:	12eb0000 	rscne	r0, fp, #0
    6370:	1a080000 	bne	206378 <__RAM_SIZE+0x106378>
    6374:	012b0c0e 			; <UNDEFINED> instruction: 0x012b0c0e
    6378:	00139501 	andseq	r9, r3, r1, lsl #10
    637c:	00139500 	andseq	r9, r3, r0, lsl #10
    6380:	0e030800 	cdpeq	8, 0, cr0, cr3, cr0, {0}
    6384:	01012c0e 	tsteq	r1, lr, lsl #24
    6388:	00000d9c 	muleq	r0, ip, sp
    638c:	00000d9c 	muleq	r0, ip, sp
    6390:	2b08b50a 	blcs	2337c0 <__RAM_SIZE+0x1337c0>
    6394:	0a3f0101 	beq	fc67a0 <__RAM_SIZE+0xec67a0>
    6398:	0a3f0000 	beq	fc63a0 <__RAM_SIZE+0xec63a0>
    639c:	b9070000 	stmdblt	r7, {}	; <UNPREDICTABLE>
    63a0:	f0000601 			; <UNDEFINED> instruction: 0xf0000601
    63a4:	02000038 	andeq	r0, r0, #56	; 0x38
    63a8:	00101900 	andseq	r1, r0, r0, lsl #18
    63ac:	bf010400 	svclt	0x00010400
    63b0:	0c000000 	stceq	0, cr0, [r0], {-0}
    63b4:	00002162 	andeq	r2, r0, r2, ror #2
    63b8:	000001a8 	andeq	r0, r0, r8, lsr #3
    63bc:	000007b8 			; <UNDEFINED> instruction: 0x000007b8
	...
    63c8:	00003f37 	andeq	r3, r0, r7, lsr pc
    63cc:	0004e702 	andeq	lr, r4, r2, lsl #14
    63d0:	17d10200 	ldrbne	r0, [r1, r0, lsl #4]
    63d4:	0000003a 	andeq	r0, r0, sl, lsr r0
    63d8:	00002903 	andeq	r2, r0, r3, lsl #18
    63dc:	07040400 	streq	r0, [r4, -r0, lsl #8]
    63e0:	0000021d 	andeq	r0, r0, sp, lsl r2
    63e4:	69050405 	stmdbvs	r5, {r0, r2, sl}
    63e8:	0400746e 	streq	r7, [r0], #-1134	; 0xfffffb92
    63ec:	02550508 	subseq	r0, r5, #8, 10	; 0x2000000
    63f0:	08040000 	stmdaeq	r4, {}	; <UNPREDICTABLE>
    63f4:	00024904 	andeq	r4, r2, r4, lsl #18
    63f8:	06010400 	streq	r0, [r1], -r0, lsl #8
    63fc:	0000008f 	andeq	r0, r0, pc, lsl #1
    6400:	00000002 	andeq	r0, r0, r2
    6404:	182b0300 	stmdane	fp!, {r8, r9}
    6408:	00000069 	andeq	r0, r0, r9, rrx
    640c:	8d080104 	stfhis	f0, [r8, #-16]
    6410:	04000000 	streq	r0, [r0], #-0
    6414:	02a50502 	adceq	r0, r5, #8388608	; 0x800000
    6418:	02040000 	andeq	r0, r4, #0
    641c:	0000ac07 	andeq	sl, r0, r7, lsl #24
    6420:	05040400 	streq	r0, [r4, #-1024]	; 0xfffffc00
    6424:	0000025a 	andeq	r0, r0, sl, asr r2
    6428:	00037d02 	andeq	r7, r3, r2, lsl #26
    642c:	194f0300 	stmdbne	pc, {r8, r9}^	; <UNPREDICTABLE>
    6430:	00000091 	muleq	r0, r1, r0
    6434:	18070404 	stmdane	r7, {r2, sl}
    6438:	04000002 	streq	r0, [r0], #-2
    643c:	02130708 	andseq	r0, r3, #8, 14	; 0x200000
    6440:	04060000 	streq	r0, [r6], #-0
    6444:	00009f03 	andeq	r9, r0, r3, lsl #30
    6448:	ac040700 	stcge	7, cr0, [r4], {-0}
    644c:	04000000 	streq	r0, [r0], #-0
    6450:	00960801 	addseq	r0, r6, r1, lsl #16
    6454:	ac030000 	stcge	0, cr0, [r3], {-0}
    6458:	07000000 	streq	r0, [r0, -r0]
    645c:	0000b304 	andeq	fp, r0, r4, lsl #6
    6460:	00b80300 	adcseq	r0, r8, r0, lsl #6
    6464:	02020000 	andeq	r0, r2, #0
    6468:	04000000 	streq	r0, [r0], #-0
    646c:	005d1318 	subseq	r1, sp, r8, lsl r3
    6470:	c3080000 	movwgt	r0, #32768	; 0x8000
    6474:	03000000 	movweq	r0, #0
    6478:	000000c3 	andeq	r0, r0, r3, asr #1
    647c:	00037f02 	andeq	r7, r3, r2, lsl #30
    6480:	14300400 	ldrtne	r0, [r0], #-1024	; 0xfffffc00
    6484:	00000085 	andeq	r0, r0, r5, lsl #1
    6488:	0000d908 	andeq	sp, r0, r8, lsl #18
    648c:	1cdc0200 	lfmne	f0, 2, [ip], {0}
    6490:	24050000 	strcs	r0, [r5], #-0
    6494:	0000f611 	andeq	pc, r0, r1, lsl r6	; <UNPREDICTABLE>
    6498:	fc040700 	stc2	7, cr0, [r4], {-0}
    649c:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    64a0:	00010801 	andeq	r0, r1, r1, lsl #16
    64a4:	009f0a00 	addseq	r0, pc, r0, lsl #20
    64a8:	02000000 	andeq	r0, r0, #0
    64ac:	00001603 	andeq	r1, r0, r3, lsl #12
    64b0:	d91a4906 	ldmdble	sl, {r1, r2, r8, fp, lr}
    64b4:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    64b8:	00000108 	andeq	r0, r0, r8, lsl #2
    64bc:	000a6902 	andeq	r6, sl, r2, lsl #18
    64c0:	1a4a0600 	bne	1287cc8 <__RAM_SIZE+0x1187cc8>
    64c4:	0000007e 	andeq	r0, r0, lr, ror r0
    64c8:	00011908 	andeq	r1, r1, r8, lsl #18
    64cc:	01190300 	tsteq	r9, r0, lsl #6
    64d0:	68020000 	stmdavs	r2, {}	; <UNPREDICTABLE>
    64d4:	0600000a 	streq	r0, [r0], -sl
    64d8:	00911a4b 	addseq	r1, r1, fp, asr #20
    64dc:	2f080000 	svccs	0x00080000
    64e0:	03000001 	movweq	r0, #1
    64e4:	0000013b 	andeq	r0, r0, fp, lsr r1
    64e8:	00012f03 	andeq	r2, r1, r3, lsl #30
    64ec:	09c40200 	stmibeq	r4, {r9}^
    64f0:	51060000 	mrspl	r0, (UNDEF: 6)
    64f4:	0000d91a 	andeq	sp, r0, sl, lsl r9
    64f8:	014a0800 	cmpeq	sl, r0, lsl #16
    64fc:	4a030000 	bmi	c6504 <__HEAP_SIZE+0xc5504>
    6500:	07000001 	streq	r0, [r0, -r1]
    6504:	0000c304 	andeq	ip, r0, r4, lsl #6
    6508:	12c80b00 	sbcne	r0, r8, #0, 22
    650c:	07140000 	ldreq	r0, [r4, -r0]
    6510:	95080c0c 	strls	r0, [r8, #-3084]	; 0xfffff3f4
    6514:	0c000001 	stceq	0, cr0, [r0], {1}
    6518:	00000e69 	andeq	r0, r0, r9, ror #28
    651c:	100c1107 	andne	r1, ip, r7, lsl #2
    6520:	0000014a 	andeq	r0, r0, sl, asr #2
    6524:	0c002302 	stceq	3, cr2, [r0], {2}
    6528:	00000e5f 	andeq	r0, r0, pc, asr lr
    652c:	0c0c1207 	sfmeq	f1, 4, [ip], {7}
    6530:	00000195 	muleq	r0, r5, r1
    6534:	00042302 	andeq	r2, r4, r2, lsl #6
    6538:	00009f0d 	andeq	r9, r0, sp, lsl #30
    653c:	0001a500 	andeq	sl, r1, r0, lsl #10
    6540:	003a0e00 	eorseq	r0, sl, r0, lsl #28
    6544:	00030000 	andeq	r0, r3, r0
    6548:	0019db0f 	andseq	sp, r9, pc, lsl #22
    654c:	0c170700 	ldceq	7, cr0, [r7], {-0}
    6550:	00016622 	andeq	r6, r1, r2, lsr #12
    6554:	1ff70b00 	svcne	0x00f70b00
    6558:	074c0000 	strbeq	r0, [ip, -r0]
    655c:	71100c43 	tstvc	r0, r3, asr #24
    6560:	0c000002 	stceq	0, cr0, [r0], {2}
    6564:	00001c4a 	andeq	r1, r0, sl, asr #24
    6568:	0c0c4507 	cfstr32eq	mvfx4, [ip], {7}
    656c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    6570:	0c002302 	stceq	3, cr2, [r0], {2}
    6574:	0000138d 	andeq	r1, r0, sp, lsl #7
    6578:	160c4c07 	strne	r4, [ip], -r7, lsl #24
    657c:	00000271 	andeq	r0, r0, r1, ror r2
    6580:	0c042302 	stceq	3, cr2, [r4], {2}
    6584:	00001a5f 	andeq	r1, r0, pc, asr sl
    6588:	110c4d07 	tstne	ip, r7, lsl #26
    658c:	0000012f 	andeq	r0, r0, pc, lsr #2
    6590:	0c2c2302 	stceq	3, cr2, [ip], #-8
    6594:	00001c5d 	andeq	r1, r0, sp, asr ip
    6598:	0c0c4e07 	stceq	14, cr4, [ip], {7}
    659c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    65a0:	0c302302 	ldceq	3, cr2, [r0], #-8
    65a4:	00001e4e 	andeq	r1, r0, lr, asr #28
    65a8:	0d0c5307 	stceq	3, cr5, [ip, #-28]	; 0xffffffe4
    65ac:	00000281 	andeq	r0, r0, r1, lsl #5
    65b0:	0c342302 	ldceq	3, cr2, [r4], #-8
    65b4:	00001562 	andeq	r1, r0, r2, ror #10
    65b8:	150c6107 	strne	r6, [ip, #-263]	; 0xfffffef9
    65bc:	00000291 	muleq	r0, r1, r2
    65c0:	0c382302 	ldceq	3, cr2, [r8], #-8
    65c4:	00001dff 	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
    65c8:	100c6407 	andne	r6, ip, r7, lsl #8
    65cc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    65d0:	0c402302 	mcrreq	3, 0, r2, r0, cr2
    65d4:	00002026 	andeq	r2, r0, r6, lsr #32
    65d8:	120c7007 	andne	r7, ip, #7
    65dc:	000002a1 	andeq	r0, r0, r1, lsr #5
    65e0:	0c442302 	mcrreq	3, 0, r2, r4, cr2
    65e4:	00001c53 	andeq	r1, r0, r3, asr ip
    65e8:	110c7107 	tstne	ip, r7, lsl #2
    65ec:	000002b1 			; <UNDEFINED> instruction: 0x000002b1
    65f0:	0c482302 	mcrreq	3, 0, r2, r8, cr2
    65f4:	00001681 	andeq	r1, r0, r1, lsl #13
    65f8:	110c7407 	tstne	ip, r7, lsl #8
    65fc:	000000c3 	andeq	r0, r0, r3, asr #1
    6600:	0c492302 	mcrreq	3, 0, r2, r9, cr2
    6604:	00001d2b 	andeq	r1, r0, fp, lsr #26
    6608:	110c7807 	tstne	ip, r7, lsl #16
    660c:	000000c3 	andeq	r0, r0, r3, asr #1
    6610:	004a2302 	subeq	r2, sl, r2, lsl #6
    6614:	0001a50d 	andeq	sl, r1, sp, lsl #10
    6618:	00028100 	andeq	r8, r2, r0, lsl #2
    661c:	003a0e00 	eorseq	r0, sl, r0, lsl #28
    6620:	00010000 	andeq	r0, r1, r0
    6624:	0000c30d 	andeq	ip, r0, sp, lsl #6
    6628:	00029100 	andeq	r9, r2, r0, lsl #2
    662c:	003a0e00 	eorseq	r0, sl, r0, lsl #28
    6630:	00030000 	andeq	r0, r3, r0
    6634:	00012f0d 	andeq	r2, r1, sp, lsl #30
    6638:	0002a100 	andeq	sl, r2, r0, lsl #2
    663c:	003a0e00 	eorseq	r0, sl, r0, lsl #28
    6640:	00010000 	andeq	r0, r1, r0
    6644:	0000d90d 	andeq	sp, r0, sp, lsl #18
    6648:	0002b100 	andeq	fp, r2, r0, lsl #2
    664c:	003a0e00 	eorseq	r0, sl, r0, lsl #28
    6650:	00000000 	andeq	r0, r0, r0
    6654:	0000c30d 	andeq	ip, r0, sp, lsl #6
    6658:	0002c100 	andeq	ip, r2, r0, lsl #2
    665c:	003a0e00 	eorseq	r0, sl, r0, lsl #28
    6660:	00000000 	andeq	r0, r0, r0
    6664:	0014ac0f 	andseq	sl, r4, pc, lsl #24
    6668:	0c7d0700 	ldcleq	7, cr0, [sp], #-0
    666c:	0001b203 	andeq	fp, r1, r3, lsl #4
    6670:	09eb1000 	stmibeq	fp!, {ip}^
    6674:	08140000 	ldmdaeq	r4, {}	; <UNPREDICTABLE>
    6678:	03270890 			; <UNDEFINED> instruction: 0x03270890
    667c:	cf110000 	svcgt	0x00110000
    6680:	08000009 	stmdaeq	r0, {r0, r3}
    6684:	014a2493 			; <UNDEFINED> instruction: 0x014a2493
    6688:	23020000 	movwcs	r0, #8192	; 0x2000
    668c:	0a381100 	beq	e0aa94 <__RAM_SIZE+0xd0aa94>
    6690:	94080000 	strls	r0, [r8], #-0
    6694:	0003272d 	andeq	r2, r3, sp, lsr #14
    6698:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    669c:	000a8711 	andeq	r8, sl, r1, lsl r7
    66a0:	2d950800 	ldccs	8, cr0, [r5]
    66a4:	00000327 	andeq	r0, r0, r7, lsr #6
    66a8:	11082302 	tstne	r8, r2, lsl #6
    66ac:	000009e3 	andeq	r0, r0, r3, ror #19
    66b0:	9f0c9608 	svcls	0x000c9608
    66b4:	02000000 	andeq	r0, r0, #0
    66b8:	b8110c23 	ldmdalt	r1, {r0, r1, r5, sl, fp}
    66bc:	08000009 	stmdaeq	r0, {r0, r3}
    66c0:	03682897 	cmneq	r8, #9895936	; 0x970000
    66c4:	23020000 	movwcs	r0, #8192	; 0x2000
    66c8:	04070010 	streq	r0, [r7], #-16
    66cc:	000002ce 	andeq	r0, r0, lr, asr #5
    66d0:	000aba10 	andeq	fp, sl, r0, lsl sl
    66d4:	ac081c00 	stcge	12, cr1, [r8], {-0}
    66d8:	00036810 	andeq	r6, r3, r0, lsl r8
    66dc:	0a191100 	beq	64aae4 <__RAM_SIZE+0x54aae4>
    66e0:	af080000 	svcge	0x00080000
    66e4:	00012f25 	andeq	r2, r1, r5, lsr #30
    66e8:	00230200 	eoreq	r0, r3, r0, lsl #4
    66ec:	000a7f11 	andeq	r7, sl, r1, lsl pc
    66f0:	26b00800 	ldrtcs	r0, [r0], r0, lsl #16
    66f4:	0000038b 	andeq	r0, r0, fp, lsl #7
    66f8:	11042302 	tstne	r4, r2, lsl #6
    66fc:	000009da 	ldrdeq	r0, [r0], -sl
    6700:	7f14b108 	svcvc	0x0014b108
    6704:	02000003 	andeq	r0, r0, #3
    6708:	07000823 	streq	r0, [r0, -r3, lsr #16]
    670c:	00032d04 	andeq	r2, r3, r4, lsl #26
    6710:	19e10200 	stmibne	r1!, {r9}^
    6714:	9a080000 	bls	20671c <__RAM_SIZE+0x10671c>
    6718:	0002ce1b 	andeq	ip, r2, fp, lsl lr
    671c:	036e0300 	cmneq	lr, #0, 6
    6720:	14020000 	strne	r0, [r2], #-0
    6724:	0800000c 	stmdaeq	r0, {r2, r3}
    6728:	02ce24a6 	sbceq	r2, lr, #-1509949440	; 0xa6000000
    672c:	04070000 	streq	r0, [r7], #-0
    6730:	0000036e 	andeq	r0, r0, lr, ror #6
    6734:	00038b03 	andeq	r8, r3, r3, lsl #22
    6738:	14870200 	strne	r0, [r7], #512	; 0x200
    673c:	b3080000 	movwlt	r0, #32768	; 0x8000
    6740:	00032d03 	andeq	r2, r3, r3, lsl #26
    6744:	03960300 	orrseq	r0, r6, #0, 6
    6748:	af020000 	svcge	0x00020000
    674c:	09000002 	stmdbeq	r0, {r1}
    6750:	03b82e5c 			; <UNDEFINED> instruction: 0x03b82e5c
    6754:	a7030000 	strge	r0, [r3, -r0]
    6758:	07000003 	streq	r0, [r0, -r3]
    675c:	0003be04 	andeq	fp, r3, r4, lsl #28
    6760:	01f20b00 	mvnseq	r0, r0, lsl #22
    6764:	014c0000 	mrseq	r0, (UNDEF: 76)
    6768:	9d100166 	ldflss	f0, [r0, #-408]	; 0xfffffe68
    676c:	0c000004 	stceq	0, cr0, [r0], {4}
    6770:	000023ba 			; <UNDEFINED> instruction: 0x000023ba
    6774:	1c016801 	stcne	8, cr6, [r1], {1}
    6778:	000005f3 	strdeq	r0, [r0], -r3
    677c:	0c002302 	stceq	3, cr2, [r0], {2}
    6780:	00002339 	andeq	r2, r0, r9, lsr r3
    6784:	10017201 	andne	r7, r1, r1, lsl #4
    6788:	0000036e 	andeq	r0, r0, lr, ror #6
    678c:	0c042302 	stceq	3, cr2, [r4], {2}
    6790:	00002208 	andeq	r2, r0, r8, lsl #4
    6794:	10017301 	andne	r7, r1, r1, lsl #6
    6798:	0000036e 	andeq	r0, r0, lr, ror #6
    679c:	0c182302 	ldceq	3, cr2, [r8], {2}
    67a0:	00001516 	andeq	r1, r0, r6, lsl r5
    67a4:	11017401 	tstne	r1, r1, lsl #8
    67a8:	0000012f 	andeq	r0, r0, pc, lsr #2
    67ac:	0c2c2302 	stceq	3, cr2, [ip], #-8
    67b0:	00001f7c 	andeq	r1, r0, ip, ror pc
    67b4:	13017501 	movwne	r7, #5377	; 0x1501
    67b8:	000005bb 			; <UNDEFINED> instruction: 0x000005bb
    67bc:	0c302302 	ldceq	3, cr2, [r0], #-8
    67c0:	000014c1 	andeq	r1, r0, r1, asr #9
    67c4:	0a017a01 	beq	64fd0 <__HEAP_SIZE+0x63fd0>
    67c8:	000005f9 	strdeq	r0, [r0], -r9
    67cc:	0c342302 	ldceq	3, cr2, [r4], #-8
    67d0:	000021a9 	andeq	r2, r0, r9, lsr #3
    67d4:	15018e01 	strne	r8, [r1, #-3585]	; 0xfffff1ff
    67d8:	0000012f 	andeq	r0, r0, pc, lsr #2
    67dc:	0c382302 	ldceq	3, cr2, [r8], #-8
    67e0:	00001ae7 	andeq	r1, r0, r7, ror #21
    67e4:	15018f01 	strne	r8, [r1, #-3841]	; 0xfffff0ff
    67e8:	0000012f 	andeq	r0, r0, pc, lsr #2
    67ec:	0c3c2302 	ldceq	3, cr2, [ip], #-8
    67f0:	00001f09 	andeq	r1, r0, r9, lsl #30
    67f4:	1c019301 	stcne	3, cr9, [r1], {1}
    67f8:	0000049d 	muleq	r0, sp, r4
    67fc:	0c402302 	mcrreq	3, 0, r2, r0, cr2
    6800:	00001aac 	andeq	r1, r0, ip, lsr #21
    6804:	1b01a301 	blne	6f410 <__HEAP_SIZE+0x6e410>
    6808:	00000619 	andeq	r0, r0, r9, lsl r6
    680c:	0c442302 	mcrreq	3, 0, r2, r4, cr2
    6810:	00001802 	andeq	r1, r0, r2, lsl #16
    6814:	1a01a401 	bne	6f820 <__HEAP_SIZE+0x6e820>
    6818:	0000062e 	andeq	r0, r0, lr, lsr #12
    681c:	0c482302 	mcrreq	3, 0, r2, r8, cr2
    6820:	00000ea8 	andeq	r0, r0, r8, lsr #29
    6824:	1101aa01 	tstne	r1, r1, lsl #20
    6828:	000000c3 	andeq	r0, r0, r3, asr #1
    682c:	0c492302 	mcrreq	3, 0, r2, r9, cr2
    6830:	000019cc 	andeq	r1, r0, ip, asr #19
    6834:	1101ae01 	tstne	r1, r1, lsl #28
    6838:	000000c3 	andeq	r0, r0, r3, asr #1
    683c:	004a2302 	subeq	r2, sl, r2, lsl #6
    6840:	00205502 	eoreq	r5, r0, r2, lsl #10
    6844:	17630900 	strbne	r0, [r3, -r0, lsl #18]!
    6848:	000004a9 	andeq	r0, r0, r9, lsr #9
    684c:	04af0407 	strteq	r0, [pc], #1031	; 6854 <__HEAP_SIZE+0x5854>
    6850:	01120000 	tsteq	r2, r0
    6854:	00000119 	andeq	r0, r0, r9, lsl r1
    6858:	000004bf 			; <UNDEFINED> instruction: 0x000004bf
    685c:	00009f0a 	andeq	r9, r0, sl, lsl #30
    6860:	07130000 	ldreq	r0, [r3, -r0]
    6864:	00006901 	andeq	r6, r0, r1, lsl #18
    6868:	01670900 	cmneq	r7, r0, lsl #18
    686c:	000004f2 	strdeq	r0, [r0], -r2
    6870:	0020e014 	eoreq	lr, r0, r4, lsl r0
    6874:	a0140000 	andsge	r0, r4, r0
    6878:	0100001b 	tsteq	r0, fp, lsl r0
    687c:	0021e114 	eoreq	lr, r1, r4, lsl r1
    6880:	57140200 	ldrpl	r0, [r4, -r0, lsl #4]
    6884:	03000015 	movweq	r0, #21
    6888:	001c6614 	andseq	r6, ip, r4, lsl r6
    688c:	92140400 	andsls	r0, r4, #0, 8
    6890:	05000021 	streq	r0, [r0, #-33]	; 0xffffffdf
    6894:	1db10200 	lfmne	f0, 4, [r1]
    6898:	6e090000 	cdpvs	0, 0, cr0, cr9, cr0, {0}
    689c:	0004bf03 	andeq	fp, r4, r3, lsl #30
    68a0:	01071300 	mrseq	r1, SP_und
    68a4:	00000069 	andeq	r0, r0, r9, rrx
    68a8:	2b017209 	blcs	630d4 <__HEAP_SIZE+0x620d4>
    68ac:	14000005 	strne	r0, [r0], #-5
    68b0:	000015ba 			; <UNDEFINED> instruction: 0x000015ba
    68b4:	1e161400 	cfmulsne	mvf1, mvf6, mvf0
    68b8:	14010000 	strne	r0, [r1], #-0
    68bc:	0000230b 	andeq	r2, r0, fp, lsl #6
    68c0:	188a1402 	stmne	sl, {r1, sl, ip}
    68c4:	14030000 	strne	r0, [r3], #-0
    68c8:	00001af5 	strdeq	r1, [r0], -r5
    68cc:	af020004 	svcge	0x00020004
    68d0:	09000019 	stmdbeq	r0, {r0, r3, r4}
    68d4:	04fe0378 	ldrbteq	r0, [lr], #888	; 0x378
    68d8:	b7100000 	ldrlt	r0, [r0, -r0]
    68dc:	0800000b 	stmdaeq	r0, {r0, r1, r3}
    68e0:	63107d09 	tstvs	r0, #576	; 0x240
    68e4:	11000005 	tstne	r0, r5
    68e8:	00000c68 	andeq	r0, r0, r8, ror #24
    68ec:	19107f09 	ldmdbne	r0, {r0, r3, r8, r9, sl, fp, ip, sp, lr}
    68f0:	02000001 	andeq	r0, r0, #1
    68f4:	7a110023 	bvc	446988 <__RAM_SIZE+0x346988>
    68f8:	09000010 	stmdbeq	r0, {r4}
    68fc:	014a1080 	smlalbbeq	r1, sl, r0, r0
    6900:	23020000 	movwcs	r0, #8192	; 0x2000
    6904:	c7020004 	strgt	r0, [r2, -r4]
    6908:	09000010 	stmdbeq	r0, {r4}
    690c:	05370381 	ldreq	r0, [r7, #-897]!	; 0xfffffc7f
    6910:	1f100000 	svcne	0x00100000
    6914:	0c00001e 	stceq	0, cr0, [r0], {30}
    6918:	aa108609 	bge	428144 <__RAM_SIZE+0x328144>
    691c:	11000005 	tstne	r0, r5
    6920:	000020f7 	strdeq	r2, [r0], -r7
    6924:	9f0c8809 	svcls	0x000c8809
    6928:	02000000 	andeq	r0, r0, #0
    692c:	8d110023 	ldchi	0, cr0, [r1, #-140]	; 0xffffff74
    6930:	0900001c 	stmdbeq	r0, {r2, r3, r4}
    6934:	00d90e89 	sbcseq	r0, r9, r9, lsl #29
    6938:	23020000 	movwcs	r0, #8192	; 0x2000
    693c:	175a1104 	ldrbne	r1, [sl, -r4, lsl #2]
    6940:	8a090000 	bhi	246948 <__RAM_SIZE+0x146948>
    6944:	0000d90e 	andeq	sp, r0, lr, lsl #18
    6948:	08230200 	stmdaeq	r3!, {r9}
    694c:	1c100200 	lfmne	f0, 4, [r0], {-0}
    6950:	8b090000 	blhi	246958 <__RAM_SIZE+0x146958>
    6954:	00056f03 	andeq	r6, r5, r3, lsl #30
    6958:	05aa0300 	streq	r0, [sl, #768]!	; 0x300
    695c:	04070000 	streq	r0, [r7], #-0
    6960:	00000108 	andeq	r0, r0, r8, lsl #2
    6964:	0005bb03 	andeq	fp, r5, r3, lsl #22
    6968:	01071300 	mrseq	r1, SP_und
    696c:	00000069 	andeq	r0, r0, r9, rrx
    6970:	e701b609 	str	fp, [r1, -r9, lsl #12]
    6974:	14000005 	strne	r0, [r0], #-5
    6978:	0000187e 	andeq	r1, r0, lr, ror r8
    697c:	20681400 	rsbcs	r1, r8, r0, lsl #8
    6980:	14010000 	strne	r0, [r1], #-0
    6984:	0000207f 	andeq	r2, r0, pc, ror r0
    6988:	bd020002 	stclt	0, cr0, [r2, #-8]
    698c:	09000017 	stmdbeq	r0, {r0, r1, r2, r4}
    6990:	05c603bd 	strbeq	r0, [r6, #957]	; 0x3bd
    6994:	04070000 	streq	r0, [r7], #-0
    6998:	00000114 	andeq	r0, r0, r4, lsl r1
    699c:	0000ac0d 	andeq	sl, r0, sp, lsl #24
    69a0:	00060900 	andeq	r0, r6, r0, lsl #18
    69a4:	003a0e00 	eorseq	r0, sl, r0, lsl #28
    69a8:	00030000 	andeq	r0, r3, r0
    69ac:	0000e50d 	andeq	lr, r0, sp, lsl #10
    69b0:	00061900 	andeq	r1, r6, r0, lsl #18
    69b4:	003a0e00 	eorseq	r0, sl, r0, lsl #28
    69b8:	00000000 	andeq	r0, r0, r0
    69bc:	00060908 	andeq	r0, r6, r8, lsl #18
    69c0:	00cf0d00 	sbceq	r0, pc, r0, lsl #26
    69c4:	062e0000 	strteq	r0, [lr], -r0
    69c8:	3a0e0000 	bcc	3869d0 <__RAM_SIZE+0x2869d0>
    69cc:	00000000 	andeq	r0, r0, r0
    69d0:	061e0800 	ldreq	r0, [lr], -r0, lsl #16
    69d4:	fb0f0000 	blx	3c69de <__RAM_SIZE+0x2c69de>
    69d8:	01000017 	tsteq	r0, r7, lsl r0
    69dc:	be0301b4 	mcrlt	1, 0, r0, cr3, cr4, {5}
    69e0:	0f000003 	svceq	0x00000003
    69e4:	000021ce 	andeq	r2, r0, lr, asr #3
    69e8:	1001b801 	andne	fp, r1, r1, lsl #16
    69ec:	00000633 	andeq	r0, r0, r3, lsr r6
    69f0:	00064003 	andeq	r4, r6, r3
    69f4:	1ec81500 	cdpne	5, 12, cr1, cr8, cr0, {0}
    69f8:	be010000 	cdplt	0, 0, cr0, cr1, cr0, {0}
    69fc:	066c3701 	strbteq	r3, [ip], -r1, lsl #14
    6a00:	05010000 	streq	r0, [r1, #-0]
    6a04:	0085b803 	addeq	fp, r5, r3, lsl #16
    6a08:	40040738 	andmi	r0, r4, r8, lsr r7
    6a0c:	08000006 	stmdaeq	r0, {r1, r2}
    6a10:	00000666 	andeq	r0, r0, r6, ror #12
    6a14:	00066603 	andeq	r6, r6, r3, lsl #12
    6a18:	03960d00 	orrseq	r0, r6, #0, 26
    6a1c:	06860000 	streq	r0, [r6], r0
    6a20:	3a0e0000 	bcc	386a28 <__RAM_SIZE+0x286a28>
    6a24:	04000000 	streq	r0, [r0], #-0
    6a28:	165d1600 	ldrbne	r1, [sp], -r0, lsl #12
    6a2c:	cb010000 	blgt	46a34 <__HEAP_SIZE+0x45a34>
    6a30:	06761f01 	ldrbteq	r1, [r6], -r1, lsl #30
    6a34:	03050000 	movweq	r0, #20480	; 0x5000
    6a38:	380085c4 	stmdacc	r0, {r2, r6, r7, r8, sl, pc}
    6a3c:	0016fa16 	andseq	pc, r6, r6, lsl sl	; <UNPREDICTABLE>
    6a40:	01cc0100 	biceq	r0, ip, r0, lsl #2
    6a44:	0003961f 	andeq	r9, r3, pc, lsl r6
    6a48:	64030500 	strvs	r0, [r3], #-1280	; 0xfffffb00
    6a4c:	1638008a 	ldrtne	r0, [r8], -sl, lsl #1
    6a50:	0000170c 	andeq	r1, r0, ip, lsl #14
    6a54:	1f01cd01 	svcne	0x0001cd01
    6a58:	00000396 	muleq	r0, r6, r3
    6a5c:	8a800305 	bhi	fe007678 <__StackTop+0xc5f07678>
    6a60:	35163800 	ldrcc	r3, [r6, #-2048]	; 0xfffff800
    6a64:	0100001f 	tsteq	r0, pc, lsl r0
    6a68:	d82a01ce 	stmdale	sl!, {r1, r2, r3, r6, r7, r8}
    6a6c:	05000006 	streq	r0, [r0, #-6]
    6a70:	0085bc03 	addeq	fp, r5, r3, lsl #24
    6a74:	96040738 			; <UNDEFINED> instruction: 0x96040738
    6a78:	08000003 	stmdaeq	r0, {r0, r1}
    6a7c:	000006d2 	ldrdeq	r0, [r0], -r2
    6a80:	0006d203 	andeq	sp, r6, r3, lsl #4
    6a84:	1a451600 	bne	114c28c <__RAM_SIZE+0x104c28c>
    6a88:	cf010000 	svcgt	0x00010000
    6a8c:	06d82a01 	ldrbeq	r2, [r8], r1, lsl #20
    6a90:	03050000 	movweq	r0, #20480	; 0x5000
    6a94:	380085c0 	stmdacc	r0, {r6, r7, r8, sl, pc}
    6a98:	0018e216 	andseq	lr, r8, r6, lsl r2
    6a9c:	01d00100 	bicseq	r0, r0, r0, lsl #2
    6aa0:	0003961f 	andeq	r9, r3, pc, lsl r6
    6aa4:	f8030500 			; <UNDEFINED> instruction: 0xf8030500
    6aa8:	1638008a 	ldrtne	r0, [r8], -sl, lsl #1
    6aac:	00001923 	andeq	r1, r0, r3, lsr #18
    6ab0:	2301d401 	movwcs	sp, #5121	; 0x1401
    6ab4:	00000396 	muleq	r0, r6, r3
    6ab8:	8b340305 	blhi	d076d4 <__RAM_SIZE+0xc076d4>
    6abc:	1d163800 	ldcne	8, cr3, [r6, #-0]
    6ac0:	01000016 	tsteq	r0, r6, lsl r0
    6ac4:	3b3101d5 	blcc	c47220 <__RAM_SIZE+0xb47220>
    6ac8:	05000001 	streq	r0, [r0, #-1]
    6acc:	00865403 	addeq	r5, r6, r3, lsl #8
    6ad0:	1a2b1638 	bne	acc3b8 <__RAM_SIZE+0x9cc3b8>
    6ad4:	db010000 	blle	46adc <__HEAP_SIZE+0x45adc>
    6ad8:	03962301 	orrseq	r2, r6, #67108864	; 0x4000000
    6adc:	03050000 	movweq	r0, #20480	; 0x5000
    6ae0:	38008b18 	stmdacc	r0, {r3, r4, r8, r9, fp, pc}
    6ae4:	0022f016 	eoreq	pc, r2, r6, lsl r0	; <UNPREDICTABLE>
    6ae8:	01e60100 	mvneq	r0, r0, lsl #2
    6aec:	00013b2d 	andeq	r3, r1, sp, lsr #22
    6af0:	50030500 	andpl	r0, r3, r0, lsl #10
    6af4:	16380086 	ldrtne	r0, [r8], -r6, lsl #1
    6af8:	000019ec 	andeq	r1, r0, ip, ror #19
    6afc:	2c01e701 	stccs	7, cr14, [r1], {1}
    6b00:	00000156 	andeq	r0, r0, r6, asr r1
    6b04:	8b500305 	blhi	1407720 <__RAM_SIZE+0x1307720>
    6b08:	c4163800 	ldrgt	r3, [r6], #-2048	; 0xfffff800
    6b0c:	01000015 	tsteq	r0, r5, lsl r0
    6b10:	3b2d01e8 	blcc	b472b8 <__RAM_SIZE+0xa472b8>
    6b14:	05000001 	streq	r0, [r0, #-1]
    6b18:	008a6003 	addeq	r6, sl, r3
    6b1c:	15f11638 	ldrbne	r1, [r1, #1592]!	; 0x638
    6b20:	e9010000 	stmdb	r1, {}	; <UNPREDICTABLE>
    6b24:	01252c01 			; <UNDEFINED> instruction: 0x01252c01
    6b28:	03050000 	movweq	r0, #20480	; 0x5000
    6b2c:	38008b14 	stmdacc	r0, {r2, r4, r8, r9, fp, pc}
    6b30:	00222316 	eoreq	r2, r2, r6, lsl r3
    6b34:	01ea0100 	mvneq	r0, r0, lsl #2
    6b38:	0001562c 	andeq	r5, r1, ip, lsr #12
    6b3c:	f4030500 	vst3.8	{d0,d2,d4}, [r3], r0
    6b40:	0d38008a 	ldceq	0, cr0, [r8, #-552]!	; 0xfffffdd8
    6b44:	00000125 	andeq	r0, r0, r5, lsr #2
    6b48:	000007b0 			; <UNDEFINED> instruction: 0x000007b0
    6b4c:	00003a0e 	andeq	r3, r0, lr, lsl #20
    6b50:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    6b54:	000007a0 	andeq	r0, r0, r0, lsr #15
    6b58:	0016de16 	andseq	sp, r6, r6, lsl lr
    6b5c:	01eb0100 	mvneq	r0, r0, lsl #2
    6b60:	0007b02c 	andeq	fp, r7, ip, lsr #32
    6b64:	a0030500 	andge	r0, r3, r0, lsl #10
    6b68:	1638008b 	ldrtne	r0, [r8], -fp, lsl #1
    6b6c:	00001e97 	muleq	r0, r7, lr
    6b70:	2c01ec01 	stccs	12, cr14, [r1], {1}
    6b74:	00000125 	andeq	r0, r0, r5, lsr #2
    6b78:	8af00305 	bhi	ffc07794 <__StackTop+0xc7b07794>
    6b7c:	54163800 	ldrpl	r3, [r6], #-2048	; 0xfffff800
    6b80:	0100001d 	tsteq	r0, sp, lsl r0
    6b84:	2f2401ed 	svccs	0x002401ed
    6b88:	05000001 	streq	r0, [r0, #-1]
    6b8c:	00885c03 	addeq	r5, r8, r3, lsl #24
    6b90:	1c1f1638 	ldcne	6, cr1, [pc], {56}	; 0x38
    6b94:	ee010000 	cdp	0, 0, cr0, cr1, cr0, {0}
    6b98:	01562c01 	cmpeq	r6, r1, lsl #24
    6b9c:	03050000 	movweq	r0, #20480	; 0x5000
    6ba0:	38008aec 	stmdacc	r0, {r2, r3, r5, r6, r7, r9, fp, pc}
    6ba4:	0003a70d 	andeq	sl, r3, sp, lsl #14
    6ba8:	00081100 	andeq	r1, r8, r0, lsl #2
    6bac:	003a0e00 	eorseq	r0, sl, r0, lsl #28
    6bb0:	00000000 	andeq	r0, r0, r0
    6bb4:	001a7f16 	andseq	r7, sl, r6, lsl pc
    6bb8:	01ef0100 	mvneq	r0, r0, lsl #2
    6bbc:	00080125 	andeq	r0, r8, r5, lsr #2
    6bc0:	9c030500 	cfstr32ls	mvfx0, [r3], {-0}
    6bc4:	1638008a 	ldrtne	r0, [r8], -sl, lsl #1
    6bc8:	00001953 	andeq	r1, r0, r3, asr r9
    6bcc:	2301f401 	movwcs	pc, #5121	; 0x1401	; <UNPREDICTABLE>
    6bd0:	00000140 	andeq	r0, r0, r0, asr #2
    6bd4:	000c0305 	andeq	r0, ip, r5, lsl #6
    6bd8:	a5163800 	ldrge	r3, [r6, #-2048]	; 0xfffff800
    6bdc:	01000023 	tsteq	r0, r3, lsr #32
    6be0:	3b2d0202 	blcc	b473f0 <__RAM_SIZE+0xa473f0>
    6be4:	05000001 	streq	r0, [r0, #-1]
    6be8:	00885803 	addeq	r5, r8, r3, lsl #16
    6bec:	3c011738 	stccc	7, cr1, [r1], {56}	; 0x38
    6bf0:	01000019 	tsteq	r0, r9, lsl r0
    6bf4:	010621c5 	smlabteq	r6, r5, r1, r2
	...
    6c00:	01007d02 	tsteq	r0, r2, lsl #26
    6c04:	0000087b 	andeq	r0, r0, fp, ror r8
    6c08:	0014b918 	andseq	fp, r4, r8, lsl r9
    6c0c:	21c70100 	biccs	r0, r7, r0, lsl #2
    6c10:	00011910 	andeq	r1, r1, r0, lsl r9
    6c14:	005b0e00 	subseq	r0, fp, r0, lsl #28
    6c18:	005b0a00 	subseq	r0, fp, r0, lsl #20
    6c1c:	01170000 	tsteq	r7, r0
    6c20:	00001810 	andeq	r1, r0, r0, lsl r8
    6c24:	0a21b101 	beq	873030 <__RAM_SIZE+0x773030>
    6c28:	002f9c01 	eoreq	r9, pc, r1, lsl #24
    6c2c:	002fb410 	eoreq	fp, pc, r0, lsl r4	; <UNPREDICTABLE>
    6c30:	007d0210 	rsbseq	r0, sp, r0, lsl r2
    6c34:	0008ea01 	andeq	lr, r8, r1, lsl #20
    6c38:	1f841900 	svcne	0x00841900
    6c3c:	b1010000 	mrslt	r0, (UNDEF: 1)
    6c40:	08ea3a21 	stmiaeq	sl!, {r0, r5, r9, fp, ip, sp}^
    6c44:	50010000 	andpl	r0, r1, r0
    6c48:	001be919 	andseq	lr, fp, r9, lsl r9
    6c4c:	21b20100 			; <UNDEFINED> instruction: 0x21b20100
    6c50:	0008fb39 	andeq	pc, r8, r9, lsr fp	; <UNPREDICTABLE>
    6c54:	19510100 	ldmdbne	r1, {r8}^
    6c58:	0000214c 	andeq	r2, r0, ip, asr #2
    6c5c:	4321b301 			; <UNDEFINED> instruction: 0x4321b301
    6c60:	00000901 	andeq	r0, r0, r1, lsl #18
    6c64:	8b165201 	blhi	59b470 <__RAM_SIZE+0x49b470>
    6c68:	01000016 	tsteq	r0, r6, lsl r0
    6c6c:	c11d21b5 			; <UNDEFINED> instruction: 0xc11d21b5
    6c70:	05000002 	streq	r0, [r0, #-2]
    6c74:	008b5403 	addeq	r5, fp, r3, lsl #8
    6c78:	23891638 	orrcs	r1, r9, #56, 12	; 0x3800000
    6c7c:	b6010000 	strlt	r0, [r1], -r0
    6c80:	09071c21 	stmdbeq	r7, {r0, r5, sl, fp, ip}
    6c84:	03050000 	movweq	r0, #20480	; 0x5000
    6c88:	38008860 	stmdacc	r0, {r5, r6, fp, pc}
    6c8c:	f0040700 			; <UNDEFINED> instruction: 0xf0040700
    6c90:	07000008 	streq	r0, [r0, -r8]
    6c94:	0002c104 	andeq	ip, r2, r4, lsl #2
    6c98:	08f00300 	ldmeq	r0!, {r8, r9}^
    6c9c:	04070000 	streq	r0, [r7], #-0
    6ca0:	000005bb 			; <UNDEFINED> instruction: 0x000005bb
    6ca4:	00290407 	eoreq	r0, r9, r7, lsl #8
    6ca8:	080d0000 	stmdaeq	sp, {}	; <UNPREDICTABLE>
    6cac:	17000001 	strne	r0, [r0, -r1]
    6cb0:	0e000009 	cdpeq	0, 0, cr0, cr0, cr9, {0}
    6cb4:	0000003a 	andeq	r0, r0, sl, lsr r0
    6cb8:	0117007f 	tsteq	r7, pc, ror r0
    6cbc:	00002348 	andeq	r2, r0, r8, asr #6
    6cc0:	0a218801 	beq	868ccc <__RAM_SIZE+0x768ccc>
    6cc4:	002ed001 	eoreq	sp, lr, r1
    6cc8:	002ee810 	eoreq	lr, lr, r0, lsl r8
    6ccc:	007d0210 	rsbseq	r0, sp, r0, lsl r2
    6cd0:	00098601 	andeq	r8, r9, r1, lsl #12
    6cd4:	1c9d1900 			; <UNDEFINED> instruction: 0x1c9d1900
    6cd8:	88010000 	stmdahi	r1, {}	; <UNPREDICTABLE>
    6cdc:	08ea3921 	stmiaeq	sl!, {r0, r5, r8, fp, ip, sp}^
    6ce0:	50010000 	andpl	r0, r1, r0
    6ce4:	0014eb19 	andseq	lr, r4, r9, lsl fp
    6ce8:	21890100 	orrcs	r0, r9, r0, lsl #2
    6cec:	0008fb38 	andeq	pc, r8, r8, lsr fp	; <UNPREDICTABLE>
    6cf0:	19510100 	ldmdbne	r1, {r8}^
    6cf4:	00001dd6 	ldrdeq	r1, [r0], -r6
    6cf8:	42218a01 	eormi	r8, r1, #4096	; 0x1000
    6cfc:	00000901 	andeq	r0, r0, r1, lsl #18
    6d00:	09165201 	ldmdbeq	r6, {r0, r9, ip, lr}
    6d04:	01000024 	tsteq	r0, r4, lsr #32
    6d08:	c11d218c 	tstgt	sp, ip, lsl #3
    6d0c:	05000002 	streq	r0, [r0, #-2]
    6d10:	008aa003 	addeq	sl, sl, r3
    6d14:	20451638 	subcs	r1, r5, r8, lsr r6
    6d18:	8d010000 	stchi	0, cr0, [r1, #-0]
    6d1c:	09071c21 	stmdbeq	r7, {r0, r5, sl, fp, ip}
    6d20:	03050000 	movweq	r0, #20480	; 0x5000
    6d24:	38008658 	stmdacc	r0, {r3, r4, r6, r9, sl, pc}
    6d28:	227a1a00 	rsbscs	r1, sl, #0, 20
    6d2c:	df010000 	svcle	0x00010000
    6d30:	68010d20 	stmdavs	r1, {r5, r8, sl, fp}
    6d34:	10100027 	andsne	r0, r0, r7, lsr #32
    6d38:	2c100028 	ldccs	0, cr0, [r0], {40}	; 0x28
    6d3c:	0100005b 	qaddeq	r0, fp, r0
    6d40:	00000a70 	andeq	r0, r0, r0, ror sl
    6d44:	0021851b 	eoreq	r8, r1, fp, lsl r5
    6d48:	20df0100 	sbcscs	r0, pc, r0, lsl #2
    6d4c:	00014a38 	andeq	r4, r1, r8, lsr sl
    6d50:	005b5600 	subseq	r5, fp, r0, lsl #12
    6d54:	005b4c00 	subseq	r4, fp, r0, lsl #24
    6d58:	20ca1b00 	sbccs	r1, sl, r0, lsl #22
    6d5c:	e0010000 	and	r0, r1, r0
    6d60:	012a3e20 			; <UNDEFINED> instruction: 0x012a3e20
    6d64:	5b9f0000 	blpl	fe7c6d6c <__StackTop+0xc66c6d6c>
    6d68:	5b9b0000 	blpl	fe6c6d70 <__StackTop+0xc65c6d70>
    6d6c:	2d180000 	ldccs	0, cr0, [r8, #-0]
    6d70:	01000023 	tsteq	r0, r3, lsr #32
    6d74:	4a1020e2 	bmi	40f104 <__RAM_SIZE+0x30f104>
    6d78:	c1000001 	tstgt	r0, r1
    6d7c:	bd00005b 	stclt	0, cr0, [r0, #-364]	; 0xfffffe94
    6d80:	1800005b 	stmdane	r0, {r0, r1, r3, r4, r6}
    6d84:	00001a1b 	andeq	r1, r0, fp, lsl sl
    6d88:	1620e301 	strtne	lr, [r0], -r1, lsl #6
    6d8c:	0000015b 	andeq	r0, r0, fp, asr r1
    6d90:	00005be1 	andeq	r5, r0, r1, ror #23
    6d94:	00005bdf 	ldrdeq	r5, [r0], -pc	; <UNPREDICTABLE>
    6d98:	0015d718 	andseq	sp, r5, r8, lsl r7
    6d9c:	20e40100 	rsccs	r0, r4, r0, lsl #2
    6da0:	0006dd14 	andeq	sp, r6, r4, lsl sp
    6da4:	005bf600 	subseq	pc, fp, r0, lsl #12
    6da8:	005bf400 	subseq	pc, fp, r0, lsl #8
    6dac:	24761800 	ldrbtcs	r1, [r6], #-2048	; 0xfffff800
    6db0:	e5010000 	str	r0, [r1, #-0]
    6db4:	06dd1420 	ldrbeq	r1, [sp], r0, lsr #8
    6db8:	5c0b0000 	stcpl	0, cr0, [fp], {-0}
    6dbc:	5c090000 	stcpl	0, cr0, [r9], {-0}
    6dc0:	b61c0000 	ldrlt	r0, [ip], -r0
    6dc4:	dc100027 	ldcle	0, cr0, [r0], {39}	; 0x27
    6dc8:	42100027 	andsmi	r0, r0, #39	; 0x27
    6dcc:	1800000a 	stmdane	r0, {r1, r3}
    6dd0:	00000a7f 	andeq	r0, r0, pc, ror sl
    6dd4:	0d210401 	cfstrseq	mvf0, [r1, #-4]!
    6dd8:	00000391 	muleq	r0, r1, r3
    6ddc:	00005c20 	andeq	r5, r0, r0, lsr #24
    6de0:	00005c1e 	andeq	r5, r0, lr, lsl ip
    6de4:	27901d00 	ldrcs	r1, [r0, r0, lsl #26]
    6de8:	37d41000 	ldrbcc	r1, [r4, r0]
    6dec:	ae1e0000 	cdpge	0, 1, cr0, cr14, cr0, {0}
    6df0:	e3100027 	tst	r0, #39	; 0x27
    6df4:	5f000037 	svcpl	0x00000037
    6df8:	1f00000a 	svcne	0x0000000a
    6dfc:	78025001 	stmdavc	r2, {r0, ip, lr}
    6e00:	ea200000 	b	806e08 <__RAM_SIZE+0x706e08>
    6e04:	e3100027 	tst	r0, #39	; 0x27
    6e08:	1f000037 	svcne	0x00000037
    6e0c:	77025001 	strvc	r5, [r2, -r1]
    6e10:	21000000 	mrscs	r0, (UNDEF: 0)
    6e14:	001c6f01 	andseq	r6, ip, r1, lsl #30
    6e18:	20500100 	subscs	r0, r0, r0, lsl #2
    6e1c:	00d9010e 	sbcseq	r0, r9, lr, lsl #2
	...
    6e28:	5c330000 	ldcpl	0, cr0, [r3], #-0
    6e2c:	0c010000 	stceq	0, cr0, [r1], {-0}
    6e30:	1b00000b 	blne	6e64 <__HEAP_SIZE+0x5e64>
    6e34:	00001df9 	strdeq	r1, [r0], -r9
    6e38:	3a205001 	bcc	81ae44 <__RAM_SIZE+0x71ae44>
    6e3c:	000003a7 	andeq	r0, r0, r7, lsr #7
    6e40:	00005c57 	andeq	r5, r0, r7, asr ip
    6e44:	00005c53 	andeq	r5, r0, r3, asr ip
    6e48:	00177d1b 	andseq	r7, r7, fp, lsl sp
    6e4c:	20510100 	subscs	r0, r1, r0, lsl #2
    6e50:	00012f39 	andeq	r2, r1, r9, lsr pc
    6e54:	005c7b00 	subseq	r7, ip, r0, lsl #22
    6e58:	005c7500 	subseq	r7, ip, r0, lsl #10
    6e5c:	160f1b00 	strne	r1, [pc], -r0, lsl #22
    6e60:	52010000 	andpl	r0, r1, #0
    6e64:	00d93620 	sbcseq	r3, r9, r0, lsr #12
    6e68:	5caa0000 	stcpl	0, cr0, [sl]
    6e6c:	5ca40000 	stcpl	0, cr0, [r4]
    6e70:	66180000 	ldrvs	r0, [r8], -r0
    6e74:	01000023 	tsteq	r0, r3, lsr #32
    6e78:	66112054 			; <UNDEFINED> instruction: 0x66112054
    6e7c:	d5000006 	strle	r0, [r0, #-6]
    6e80:	d300005c 	movwle	r0, #92	; 0x5c
    6e84:	1800005c 	stmdane	r0, {r2, r3, r4, r6}
    6e88:	0000248c 	andeq	r2, r0, ip, lsl #9
    6e8c:	12205501 	eorne	r5, r0, #4194304	; 0x400000
    6e90:	000000d9 	ldrdeq	r0, [r0], -r9
    6e94:	00005cea 	andeq	r5, r0, sl, ror #25
    6e98:	00005ce8 	andeq	r5, r0, r8, ror #25
    6e9c:	0000001d 	andeq	r0, r0, sp, lsl r0
    6ea0:	0037f200 	eorseq	pc, r7, r0, lsl #4
    6ea4:	00001d00 	andeq	r1, r0, r0, lsl #26
    6ea8:	38000000 	stmdacc	r0, {}	; <UNPREDICTABLE>
    6eac:	21000000 	mrscs	r0, (UNDEF: 0)
    6eb0:	00236c01 	eoreq	r6, r3, r1, lsl #24
    6eb4:	202a0100 	eorcs	r0, sl, r0, lsl #2
    6eb8:	01190110 	tsteq	r9, r0, lsl r1
	...
    6ec4:	5cfd0000 	ldclpl	0, cr0, [sp]
    6ec8:	93010000 	movwls	r0, #4096	; 0x1000
    6ecc:	1b00000b 	blne	6f00 <__HEAP_SIZE+0x5f00>
    6ed0:	00001df9 	strdeq	r1, [r0], -r9
    6ed4:	3b202a01 	blcc	8116e0 <__RAM_SIZE+0x7116e0>
    6ed8:	000003a7 	andeq	r0, r0, r7, lsr #7
    6edc:	00005d21 	andeq	r5, r0, r1, lsr #26
    6ee0:	00005d1d 	andeq	r5, r0, sp, lsl sp
    6ee4:	00177d1b 	andseq	r7, r7, fp, lsl sp
    6ee8:	202b0100 	eorcs	r0, fp, r0, lsl #2
    6eec:	00012f3a 	andeq	r2, r1, sl, lsr pc
    6ef0:	005d4b00 	subseq	r4, sp, r0, lsl #22
    6ef4:	005d3f00 	subseq	r3, sp, r0, lsl #30
    6ef8:	23661800 	cmncs	r6, #0, 16
    6efc:	2d010000 	stccs	0, cr0, [r1, #-0]
    6f00:	06661120 	strbteq	r1, [r6], -r0, lsr #2
    6f04:	5d9f0000 	ldcpl	0, cr0, [pc]	; 6f0c <__HEAP_SIZE+0x5f0c>
    6f08:	5d9b0000 	ldcpl	0, cr0, [fp]
    6f0c:	bd180000 	ldclt	0, cr0, [r8, #-0]
    6f10:	0100001a 	tsteq	r0, sl, lsl r0
    6f14:	1914202e 	ldmdbne	r4, {r1, r2, r3, r5, sp}
    6f18:	c1000001 	tstgt	r0, r1
    6f1c:	bd00005d 	stclt	0, cr0, [r0, #-372]	; 0xfffffe8c
    6f20:	1d00005d 	stcne	0, cr0, [r0, #-372]	; 0xfffffe8c
    6f24:	00000000 	andeq	r0, r0, r0
    6f28:	000037f2 	strdeq	r3, [r0], -r2
    6f2c:	0000001d 	andeq	r0, r0, sp, lsl r0
    6f30:	00380000 	eorseq	r0, r8, r0
    6f34:	01220000 			; <UNDEFINED> instruction: 0x01220000
    6f38:	00002113 	andeq	r2, r0, r3, lsl r1
    6f3c:	0a1fb601 	beq	7f4748 <__RAM_SIZE+0x6f4748>
    6f40:	00000001 	andeq	r0, r0, r1
    6f44:	00000000 	andeq	r0, r0, r0
    6f48:	005de000 	subseq	lr, sp, r0
    6f4c:	0ca50100 	stfeqs	f0, [r5]
    6f50:	eb1b0000 	bl	6c6f58 <__RAM_SIZE+0x5c6f58>
    6f54:	0100001d 	tsteq	r0, sp, lsl r0
    6f58:	a7361fb6 			; <UNDEFINED> instruction: 0xa7361fb6
    6f5c:	04000003 	streq	r0, [r0], #-3
    6f60:	0000005e 	andeq	r0, r0, lr, asr r0
    6f64:	1b00005e 	blne	70e4 <__HEAP_SIZE+0x60e4>
    6f68:	00002416 	andeq	r2, r0, r6, lsl r4
    6f6c:	351fb701 	ldrcc	fp, [pc, #-1793]	; 6873 <__HEAP_SIZE+0x5873>
    6f70:	0000012f 	andeq	r0, r0, pc, lsr #2
    6f74:	00005e2a 	andeq	r5, r0, sl, lsr #28
    6f78:	00005e22 	andeq	r5, r0, r2, lsr #28
    6f7c:	000b951b 	andeq	r9, fp, fp, lsl r5
    6f80:	1fb80100 	svcne	0x00b80100
    6f84:	000ca536 	andeq	sl, ip, r6, lsr r5
    6f88:	005e6700 	subseq	r6, lr, r0, lsl #14
    6f8c:	005e6300 	subseq	r6, lr, r0, lsl #6
    6f90:	23661800 	cmncs	r6, #0, 16
    6f94:	ba010000 	blt	46f9c <__HEAP_SIZE+0x45f9c>
    6f98:	0666111f 			; <UNDEFINED> instruction: 0x0666111f
    6f9c:	5e890000 	cdppl	0, 8, cr0, cr9, cr0, {0}
    6fa0:	5e850000 	cdppl	0, 8, cr0, cr5, cr0, {0}
    6fa4:	99180000 	ldmdbls	r8, {}	; <UNPREDICTABLE>
    6fa8:	01000016 	tsteq	r0, r6, lsl r0
    6fac:	c3111fbb 	tstgt	r1, #748	; 0x2ec
    6fb0:	ab000000 	blge	6fb8 <__HEAP_SIZE+0x5fb8>
    6fb4:	a700005e 	smlsdge	r0, lr, r0, r0
    6fb8:	1800005e 	stmdane	r0, {r1, r2, r3, r4, r6}
    6fbc:	00000cca 	andeq	r0, r0, sl, asr #25
    6fc0:	151fbc01 	ldrne	fp, [pc, #-3073]	; 63c7 <__HEAP_SIZE+0x53c7>
    6fc4:	0000012f 	andeq	r0, r0, pc, lsr #2
    6fc8:	00005ecd 	andeq	r5, r0, sp, asr #29
    6fcc:	00005ec9 	andeq	r5, r0, r9, asr #29
    6fd0:	00078023 	andeq	r8, r7, r3, lsr #32
    6fd4:	000c4c00 	andeq	r4, ip, r0, lsl #24
    6fd8:	0ab31800 	beq	fecccfe0 <__StackTop+0xc6bccfe0>
    6fdc:	ee010000 	cdp	0, 0, cr0, cr1, cr0, {0}
    6fe0:	06dd151f 			; <UNDEFINED> instruction: 0x06dd151f
    6fe4:	5eef0000 	cdppl	0, 14, cr0, cr15, cr0, {0}
    6fe8:	5eeb0000 	cdppl	0, 14, cr0, cr11, cr0, {0}
    6fec:	1c000000 	stcne	0, cr0, [r0], {-0}
	...
    6ff8:	00000c6f 	andeq	r0, r0, pc, ror #24
    6ffc:	000a7f18 	andeq	r7, sl, r8, lsl pc
    7000:	1fef0100 	svcne	0x00ef0100
    7004:	00039115 	andeq	r9, r3, r5, lsl r1
    7008:	005f0f00 	subseq	r0, pc, r0, lsl #30
    700c:	005f0d00 	subseq	r0, pc, r0, lsl #26
    7010:	001c0000 	andseq	r0, ip, r0
    7014:	00000000 	andeq	r0, r0, r0
    7018:	92000000 	andls	r0, r0, #0
    701c:	1800000c 	stmdane	r0, {r2, r3}
    7020:	00000a7f 	andeq	r0, r0, pc, ror sl
    7024:	151ff501 	ldrne	pc, [pc, #-1281]	; 6b2b <__HEAP_SIZE+0x5b2b>
    7028:	00000391 	muleq	r0, r1, r3
    702c:	00005f24 	andeq	r5, r0, r4, lsr #30
    7030:	00005f22 	andeq	r5, r0, r2, lsr #30
    7034:	00001d00 	andeq	r1, r0, r0, lsl #26
    7038:	380e0000 	stmdacc	lr, {}	; <UNPREDICTABLE>
    703c:	001d0000 	andseq	r0, sp, r0
    7040:	1c000000 	stcne	0, cr0, [r0], {-0}
    7044:	00000038 	andeq	r0, r0, r8, lsr r0
    7048:	01190407 	tsteq	r9, r7, lsl #8
    704c:	01210000 			; <UNDEFINED> instruction: 0x01210000
    7050:	000016c4 	andeq	r1, r0, r4, asr #13
    7054:	101f1001 	andsne	r1, pc, r1
    7058:	00011901 	andeq	r1, r1, r1, lsl #18
	...
    7064:	005f3700 	subseq	r3, pc, r0, lsl #14
    7068:	0e150100 	mufeqs	f0, f5, f0
    706c:	eb1b0000 	bl	6c7074 <__RAM_SIZE+0x5c7074>
    7070:	0100001d 	tsteq	r0, sp, lsl r0
    7074:	a7381f10 			; <UNDEFINED> instruction: 0xa7381f10
    7078:	5b000003 	blpl	708c <__HEAP_SIZE+0x608c>
    707c:	5700005f 	smlsdpl	r0, pc, r0, r0	; <UNPREDICTABLE>
    7080:	1b00005f 	blne	7204 <__HEAP_SIZE+0x6204>
    7084:	00002416 	andeq	r2, r0, r6, lsl r4
    7088:	371f1101 	ldrcc	r1, [pc, -r1, lsl #2]
    708c:	0000012f 	andeq	r0, r0, pc, lsr #2
    7090:	00005f9b 	muleq	r0, fp, pc	; <UNPREDICTABLE>
    7094:	00005f79 	andeq	r5, r0, r9, ror pc
    7098:	001fa81b 	andseq	sl, pc, fp, lsl r8	; <UNPREDICTABLE>
    709c:	1f120100 	svcne	0x00120100
    70a0:	0000d934 	andeq	sp, r0, r4, lsr r9
    70a4:	00608200 	rsbeq	r8, r0, r0, lsl #4
    70a8:	00607800 	rsbeq	r7, r0, r0, lsl #16
    70ac:	1d611b00 	vstmdbne	r1!, {d17-d16}
    70b0:	13010000 	movwne	r0, #4096	; 0x1000
    70b4:	052b391f 	streq	r3, [fp, #-2335]!	; 0xfffff6e1
    70b8:	60cb0000 	sbcvs	r0, fp, r0
    70bc:	60c70000 	sbcvs	r0, r7, r0
    70c0:	eb1b0000 	bl	6c70c8 <__RAM_SIZE+0x5c70c8>
    70c4:	0100001c 	tsteq	r0, ip, lsl r0
    70c8:	15361f14 	ldrne	r1, [r6, #-3860]!	; 0xfffff0ec
    70cc:	f000000e 			; <UNDEFINED> instruction: 0xf000000e
    70d0:	ec000060 	stc	0, cr0, [r0], {96}	; 0x60
    70d4:	1b000060 	blne	725c <__HEAP_SIZE+0x625c>
    70d8:	00000b95 	muleq	r0, r5, fp
    70dc:	381f1501 	ldmdacc	pc, {r0, r8, sl, ip}	; <UNPREDICTABLE>
    70e0:	00000ca5 	andeq	r0, r0, r5, lsr #25
    70e4:	00006114 	andeq	r6, r0, r4, lsl r1
    70e8:	00006110 	andeq	r6, r0, r0, lsl r1
    70ec:	00236618 	eoreq	r6, r3, r8, lsl r6
    70f0:	1f170100 	svcne	0x00170100
    70f4:	00066611 	andeq	r6, r6, r1, lsl r6
    70f8:	00613800 	rsbeq	r3, r1, r0, lsl #16
    70fc:	00613400 	rsbeq	r3, r1, r0, lsl #8
    7100:	16991800 	ldrne	r1, [r9], r0, lsl #16
    7104:	18010000 	stmdane	r1, {}	; <UNPREDICTABLE>
    7108:	00c3111f 	sbceq	r1, r3, pc, lsl r1
    710c:	615a0000 	cmpvs	sl, r0
    7110:	61560000 	cmpvs	r6, r0
    7114:	bd180000 	ldclt	0, cr0, [r8, #-0]
    7118:	0100001a 	tsteq	r0, sl, lsl r0
    711c:	19141f19 	ldmdbne	r4, {r0, r3, r4, r8, r9, sl, fp, ip}
    7120:	80000001 	andhi	r0, r0, r1
    7124:	78000061 	stmdavc	r0, {r0, r5, r6}
    7128:	18000061 	stmdane	r0, {r0, r5, r6}
    712c:	00000cca 	andeq	r0, r0, sl, asr #25
    7130:	151f1a01 	ldrne	r1, [pc, #-2561]	; 6737 <__HEAP_SIZE+0x5737>
    7134:	0000012f 	andeq	r0, r0, pc, lsr #2
    7138:	000061ba 			; <UNDEFINED> instruction: 0x000061ba
    713c:	000061b6 			; <UNDEFINED> instruction: 0x000061b6
    7140:	00076823 	andeq	r6, r7, r3, lsr #16
    7144:	000dbc00 	andeq	fp, sp, r0, lsl #24
    7148:	0ab31800 	beq	feccd150 <__StackTop+0xc6bcd150>
    714c:	78010000 	stmdavc	r1, {}	; <UNPREDICTABLE>
    7150:	06dd151f 			; <UNDEFINED> instruction: 0x06dd151f
    7154:	61dc0000 	bicsvs	r0, ip, r0
    7158:	61d80000 	bicsvs	r0, r8, r0
    715c:	1c000000 	stcne	0, cr0, [r0], {-0}
	...
    7168:	00000ddf 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    716c:	000a7f18 	andeq	r7, sl, r8, lsl pc
    7170:	1f790100 	svcne	0x00790100
    7174:	00039115 	andeq	r9, r3, r5, lsl r1
    7178:	0061fc00 	rsbeq	pc, r1, r0, lsl #24
    717c:	0061fa00 	rsbeq	pc, r1, r0, lsl #20
    7180:	001c0000 	andseq	r0, ip, r0
    7184:	00000000 	andeq	r0, r0, r0
    7188:	02000000 	andeq	r0, r0, #0
    718c:	1800000e 	stmdane	r0, {r1, r2, r3}
    7190:	00000a7f 	andeq	r0, r0, pc, ror sl
    7194:	151f7f01 	ldrne	r7, [pc, #-3841]	; 629b <__HEAP_SIZE+0x529b>
    7198:	00000391 	muleq	r0, r1, r3
    719c:	00006211 	andeq	r6, r0, r1, lsl r2
    71a0:	0000620f 	andeq	r6, r0, pc, lsl #4
    71a4:	00001d00 	andeq	r1, r0, r0, lsl #26
    71a8:	380e0000 	stmdacc	lr, {}	; <UNPREDICTABLE>
    71ac:	001d0000 	andseq	r0, sp, r0
    71b0:	1c000000 	stcne	0, cr0, [r0], {-0}
    71b4:	00000038 	andeq	r0, r0, r8, lsr r0
    71b8:	00d90407 	sbcseq	r0, r9, r7, lsl #8
    71bc:	01210000 			; <UNDEFINED> instruction: 0x01210000
    71c0:	0000182f 	andeq	r1, r0, pc, lsr #16
    71c4:	101e9801 	andsne	r9, lr, r1, lsl #16
    71c8:	00011901 	andeq	r1, r1, r1, lsl #18
	...
    71d4:	00622400 	rsbeq	r2, r2, r0, lsl #8
    71d8:	0f4a0100 	svceq	0x004a0100
    71dc:	eb1b0000 	bl	6c71e4 <__RAM_SIZE+0x5c71e4>
    71e0:	0100001d 	tsteq	r0, sp, lsl r0
    71e4:	a7311e98 			; <UNDEFINED> instruction: 0xa7311e98
    71e8:	48000003 	stmdami	r0, {r0, r1}
    71ec:	44000062 	strmi	r0, [r0], #-98	; 0xffffff9e
    71f0:	1b000062 	blne	7380 <__HEAP_SIZE+0x6380>
    71f4:	00002416 	andeq	r2, r0, r6, lsl r4
    71f8:	301e9901 	andscc	r9, lr, r1, lsl #18
    71fc:	0000012f 	andeq	r0, r0, pc, lsr #2
    7200:	00006288 	andeq	r6, r0, r8, lsl #5
    7204:	00006266 	andeq	r6, r0, r6, ror #4
    7208:	001fa81b 	andseq	sl, pc, fp, lsl r8	; <UNPREDICTABLE>
    720c:	1e9a0100 	fmlnee	f0, f2, f0
    7210:	0000d92d 	andeq	sp, r0, sp, lsr #18
    7214:	00636f00 	rsbeq	r6, r3, r0, lsl #30
    7218:	00636500 	rsbeq	r6, r3, r0, lsl #10
    721c:	1d611b00 	vstmdbne	r1!, {d17-d16}
    7220:	9b010000 	blls	47228 <__HEAP_SIZE+0x46228>
    7224:	052b321e 	streq	r3, [fp, #-542]!	; 0xfffffde2
    7228:	63b80000 			; <UNDEFINED> instruction: 0x63b80000
    722c:	63b40000 			; <UNDEFINED> instruction: 0x63b40000
    7230:	eb1b0000 	bl	6c7238 <__RAM_SIZE+0x5c7238>
    7234:	0100001c 	tsteq	r0, ip, lsl r0
    7238:	152f1e9c 	strne	r1, [pc, #-3740]!	; 63a4 <__HEAP_SIZE+0x53a4>
    723c:	dd00000e 	stcle	0, cr0, [r0, #-56]	; 0xffffffc8
    7240:	d9000063 	stmdble	r0, {r0, r1, r5, r6}
    7244:	18000063 	stmdane	r0, {r0, r1, r5, r6}
    7248:	00002366 	andeq	r2, r0, r6, ror #6
    724c:	111e9e01 	tstne	lr, r1, lsl #28
    7250:	00000666 	andeq	r0, r0, r6, ror #12
    7254:	00006401 	andeq	r6, r0, r1, lsl #8
    7258:	000063fd 	strdeq	r6, [r0], -sp
    725c:	001abd18 	andseq	fp, sl, r8, lsl sp
    7260:	1e9f0100 	fmlnee	f0, f7, f0
    7264:	00011914 	andeq	r1, r1, r4, lsl r9
    7268:	00642700 	rsbeq	r2, r4, r0, lsl #14
    726c:	00641f00 	rsbeq	r1, r4, r0, lsl #30
    7270:	16991800 	ldrne	r1, [r9], r0, lsl #16
    7274:	a0010000 	andge	r0, r1, r0
    7278:	00c3111e 	sbceq	r1, r3, lr, lsl r1
    727c:	64630000 	strbtvs	r0, [r3], #-0
    7280:	645d0000 	ldrbvs	r0, [sp], #-0
    7284:	50230000 	eorpl	r0, r3, r0
    7288:	02000007 	andeq	r0, r0, #7
    728c:	1800000f 	stmdane	r0, {r0, r1, r2, r3}
    7290:	00000ab3 			; <UNDEFINED> instruction: 0x00000ab3
    7294:	111ee501 	tstne	lr, r1, lsl #10
    7298:	000006dd 	ldrdeq	r0, [r0], -sp
    729c:	00006490 	muleq	r0, r0, r4
    72a0:	0000648c 	andeq	r6, r0, ip, lsl #9
    72a4:	00001c00 	andeq	r1, r0, r0, lsl #24
    72a8:	00000000 	andeq	r0, r0, r0
    72ac:	0f250000 	svceq	0x00250000
    72b0:	7f180000 	svcvc	0x00180000
    72b4:	0100000a 	tsteq	r0, sl
    72b8:	91111ee6 	tstls	r1, r6, ror #29
    72bc:	b0000003 	andlt	r0, r0, r3
    72c0:	ae000064 	cdpge	0, 0, cr0, cr0, cr4, {3}
    72c4:	00000064 	andeq	r0, r0, r4, rrx
    72c8:	0000001d 	andeq	r0, r0, sp, lsl r0
    72cc:	0037f200 	eorseq	pc, r7, r0, lsl #4
    72d0:	00001d00 	andeq	r1, r0, r0, lsl #26
    72d4:	38000000 	stmdacc	r0, {}	; <UNPREDICTABLE>
    72d8:	001d0000 	andseq	r0, sp, r0
    72dc:	91000000 	mrsls	r0, (UNDEF: 0)
    72e0:	1d000014 	stcne	0, cr0, [r0, #-80]	; 0xffffffb0
    72e4:	00000000 	andeq	r0, r0, r0
    72e8:	0000382a 	andeq	r3, r0, sl, lsr #16
    72ec:	0f012100 	svceq	0x00012100
    72f0:	0100001b 	tsteq	r0, fp, lsl r0
    72f4:	01101e25 	tsteq	r0, r5, lsr #28
    72f8:	00000119 	andeq	r0, r0, r9, lsl r1
	...
    7304:	000064c3 	andeq	r6, r0, r3, asr #9
    7308:	00107d01 	andseq	r7, r0, r1, lsl #26
    730c:	24ae1b00 	strtcs	r1, [lr], #2816	; 0xb00
    7310:	25010000 	strcs	r0, [r1, #-0]
    7314:	012f341e 			; <UNDEFINED> instruction: 0x012f341e
    7318:	64eb0000 	strbtvs	r0, [fp], #0
    731c:	64e30000 	strbtvs	r0, [r3], #0
    7320:	ba1b0000 	blt	6c7328 <__RAM_SIZE+0x5c7328>
    7324:	01000018 	tsteq	r0, r8, lsl r0
    7328:	d9311e26 	ldmdble	r1!, {r1, r2, r5, r9, sl, fp, ip}
    732c:	26000000 	strcs	r0, [r0], -r0
    7330:	22000065 	andcs	r0, r0, #101	; 0x65
    7334:	1b000065 	blne	74d0 <__HEAP_SIZE+0x64d0>
    7338:	0000158f 	andeq	r1, r0, pc, lsl #11
    733c:	311e2701 	tstcc	lr, r1, lsl #14
    7340:	000000d9 	ldrdeq	r0, [r0], -r9
    7344:	0000654e 	andeq	r6, r0, lr, asr #10
    7348:	00006544 	andeq	r6, r0, r4, asr #10
    734c:	0020301b 	eoreq	r3, r0, fp, lsl r0
    7350:	1e280100 	sufnee	f0, f0, f0
    7354:	000e1533 	andeq	r1, lr, r3, lsr r5
    7358:	00659d00 	rsbeq	r9, r5, r0, lsl #26
    735c:	00659300 	rsbeq	r9, r5, r0, lsl #6
    7360:	21851b00 	orrcs	r1, r5, r0, lsl #22
    7364:	29010000 	stmdbcs	r1, {}	; <UNPREDICTABLE>
    7368:	014a331e 	cmpeq	sl, lr, lsl r3
    736c:	65e60000 	strbvs	r0, [r6, #0]!
    7370:	65e20000 	strbvs	r0, [r2, #0]!
    7374:	bd180000 	ldclt	0, cr0, [r8, #-0]
    7378:	0100001a 	tsteq	r0, sl, lsl r0
    737c:	19141e2b 	ldmdbne	r4, {r0, r1, r3, r5, r9, sl, fp, ip}
    7380:	0a000001 	beq	738c <__HEAP_SIZE+0x638c>
    7384:	06000066 	streq	r0, [r0], -r6, rrx
    7388:	18000066 	stmdane	r0, {r1, r2, r5, r6}
    738c:	000021f7 	strdeq	r2, [r0], -r7
    7390:	1d1e2b01 	vldrne	d2, [lr, #-4]
    7394:	00000119 	andeq	r0, r0, r9, lsl r1
    7398:	0000662d 	andeq	r6, r0, sp, lsr #12
    739c:	00006629 	andeq	r6, r0, r9, lsr #12
    73a0:	001ef218 	andseq	pc, lr, r8, lsl r2	; <UNPREDICTABLE>
    73a4:	1e2b0100 	sufnee	f0, f3, f0
    73a8:	0001192e 	andeq	r1, r1, lr, lsr #18
    73ac:	00665100 	rsbeq	r5, r6, r0, lsl #2
    73b0:	00664b00 	rsbeq	r4, r6, r0, lsl #22
    73b4:	00001d00 	andeq	r1, r0, r0, lsl #26
    73b8:	26280000 	strtcs	r0, [r8], -r0
    73bc:	001d0000 	andseq	r0, sp, r0
    73c0:	f2000000 	vhadd.s8	d0, d0, d0
    73c4:	1d000037 	stcne	0, cr0, [r0, #-220]	; 0xffffff24
    73c8:	00000000 	andeq	r0, r0, r0
    73cc:	00003800 	andeq	r3, r0, r0, lsl #16
    73d0:	0000001d 	andeq	r0, r0, sp, lsl r0
    73d4:	0024cf00 	eoreq	ip, r4, r0, lsl #30
    73d8:	00001d00 	andeq	r1, r0, r0, lsl #26
    73dc:	37f20000 	ldrbcc	r0, [r2, r0]!
    73e0:	001d0000 	andseq	r0, sp, r0
    73e4:	00000000 	andeq	r0, r0, r0
    73e8:	1d000038 	stcne	0, cr0, [r0, #-224]	; 0xffffff20
    73ec:	00000000 	andeq	r0, r0, r0
    73f0:	00003800 	andeq	r3, r0, r0, lsl #16
    73f4:	0000001d 	andeq	r0, r0, sp, lsl r0
    73f8:	00380000 	eorseq	r0, r8, r0
    73fc:	00001e00 	andeq	r1, r0, r0, lsl #28
    7400:	09860000 	stmibeq	r6, {}	; <UNPREDICTABLE>
    7404:	10730000 	rsbsne	r0, r3, r0
    7408:	011f0000 	tsteq	pc, r0
    740c:	00770250 	rsbseq	r0, r7, r0, asr r2
    7410:	0151011f 	cmpeq	r1, pc, lsl r1
    7414:	001d0031 	andseq	r0, sp, r1, lsr r0
    7418:	2a000000 	bcs	7420 <__HEAP_SIZE+0x6420>
    741c:	00000038 	andeq	r0, r0, r8, lsr r0
    7420:	1b600121 	blne	18078ac <__RAM_SIZE+0x17078ac>
    7424:	be010000 	cdplt	0, 0, cr0, cr1, cr0, {0}
    7428:	d9010e1d 	stmdble	r1, {r0, r2, r3, r4, r9, sl, fp}
	...
    7434:	7d000000 	stcvc	0, cr0, [r0, #-0]
    7438:	01000066 	tsteq	r0, r6, rrx
    743c:	00001186 	andeq	r1, r0, r6, lsl #3
    7440:	0024ae1b 	eoreq	sl, r4, fp, lsl lr
    7444:	1dbe0100 	ldfnes	f0, [lr]
    7448:	00012f33 	andeq	r2, r1, r3, lsr pc
    744c:	0066a500 	rsbeq	sl, r6, r0, lsl #10
    7450:	00669d00 	rsbeq	r9, r6, r0, lsl #26
    7454:	18511b00 	ldmdane	r1, {r8, r9, fp, ip}^
    7458:	bf010000 	svclt	0x00010000
    745c:	0119321d 	tsteq	r9, sp, lsl r2
    7460:	66e00000 	strbtvs	r0, [r0], r0
    7464:	66dc0000 	ldrbvs	r0, [ip], r0
    7468:	851b0000 	ldrhi	r0, [fp, #-0]
    746c:	01000021 	tsteq	r0, r1, lsr #32
    7470:	4a321dc0 	bmi	c8eb78 <__RAM_SIZE+0xb8eb78>
    7474:	0c000001 	stceq	0, cr0, [r0], {1}
    7478:	fe000067 	cdp2	0, 0, cr0, cr0, cr7, {3}
    747c:	18000066 	stmdane	r0, {r1, r2, r5, r6}
    7480:	0000248c 	andeq	r2, r0, ip, lsl #9
    7484:	121dc201 	andsne	ip, sp, #268435456	; 0x10000000
    7488:	000000d9 	ldrdeq	r0, [r0], -r9
    748c:	0000676e 	andeq	r6, r0, lr, ror #14
    7490:	0000676a 	andeq	r6, r0, sl, ror #14
    7494:	0021f718 	eoreq	pc, r1, r8, lsl r7	; <UNPREDICTABLE>
    7498:	1dc30100 	stfnee	f0, [r3]
    749c:	00011914 	andeq	r1, r1, r4, lsl r9
    74a0:	00679000 	rsbeq	r9, r7, r0
    74a4:	00678c00 	rsbeq	r8, r7, r0, lsl #24
    74a8:	1ef21800 	cdpne	8, 15, cr1, cr2, cr0, {0}
    74ac:	c3010000 	movwgt	r0, #4096	; 0x1000
    74b0:	0119251d 	tsteq	r9, sp, lsl r5
    74b4:	67b40000 	ldrvs	r0, [r4, r0]!
    74b8:	67ae0000 	strvs	r0, [lr, r0]!
    74bc:	001d0000 	andseq	r0, sp, r0
    74c0:	28000000 	stmdacs	r0, {}	; <UNPREDICTABLE>
    74c4:	1d000026 	stcne	0, cr0, [r0, #-152]	; 0xffffff68
    74c8:	00000000 	andeq	r0, r0, r0
    74cc:	000037f2 	strdeq	r3, [r0], -r2
    74d0:	0000001d 	andeq	r0, r0, sp, lsl r0
    74d4:	00380000 	eorseq	r0, r8, r0
    74d8:	00001d00 	andeq	r1, r0, r0, lsl #26
    74dc:	24cf0000 	strbcs	r0, [pc], #0	; 74e4 <__HEAP_SIZE+0x64e4>
    74e0:	001d0000 	andseq	r0, sp, r0
    74e4:	f2000000 	vhadd.s8	d0, d0, d0
    74e8:	1d000037 	stcne	0, cr0, [r0, #-220]	; 0xffffff24
    74ec:	00000000 	andeq	r0, r0, r0
    74f0:	00003800 	andeq	r3, r0, r0, lsl #16
    74f4:	0000001d 	andeq	r0, r0, sp, lsl r0
    74f8:	00380000 	eorseq	r0, r8, r0
    74fc:	00001d00 	andeq	r1, r0, r0, lsl #26
    7500:	38000000 	stmdacc	r0, {}	; <UNPREDICTABLE>
    7504:	001e0000 	andseq	r0, lr, r0
    7508:	86000000 	strhi	r0, [r0], -r0
    750c:	7c000009 	stcvc	0, cr0, [r0], {9}
    7510:	1f000011 	svcne	0x00000011
    7514:	75025001 	strvc	r5, [r2, #-1]
    7518:	51011f00 	tstpl	r1, r0, lsl #30
    751c:	1d003101 	stfnes	f3, [r0, #-4]
    7520:	00000000 	andeq	r0, r0, r0
    7524:	0000382a 	andeq	r3, r0, sl, lsr #16
    7528:	d4012400 	strle	r2, [r1], #-1024	; 0xfffffc00
    752c:	0100000e 	tsteq	r0, lr
    7530:	01121da5 	tsteq	r2, r5, lsr #27
    7534:	000003a7 	andeq	r0, r0, r7, lsr #7
	...
    7540:	01007d02 	tsteq	r0, r2, lsl #26
    7544:	000011bb 			; <UNDEFINED> instruction: 0x000011bb
    7548:	00236618 	eoreq	r6, r3, r8, lsl r6
    754c:	1da70100 	stfnes	f0, [r7]
    7550:	00066611 	andeq	r6, r6, r1, lsl r6
    7554:	0067e200 	rsbeq	lr, r7, r0, lsl #4
    7558:	0067e000 	rsbeq	lr, r7, r0
    755c:	01240000 			; <UNDEFINED> instruction: 0x01240000
    7560:	00001d69 	andeq	r1, r0, r9, ror #26
    7564:	0c1d9101 	ldfeqd	f1, [sp], {1}
    7568:	00014a01 	andeq	r4, r1, r1, lsl #20
	...
    7574:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    7578:	0011f001 	andseq	pc, r1, r1
    757c:	0ca91800 	stceq	8, cr1, [r9]
    7580:	93010000 	movwls	r0, #4096	; 0x1000
    7584:	014a101d 	cmpeq	sl, sp, lsl r0
    7588:	67f70000 	ldrbvs	r0, [r7, r0]!
    758c:	67f50000 	ldrbvs	r0, [r5, r0]!
    7590:	22000000 	andcs	r0, r0, #0
    7594:	00136901 	andseq	r6, r3, r1, lsl #18
    7598:	1a790100 	bne	1e479a0 <__RAM_SIZE+0x1d479a0>
    759c:	0000010a 	andeq	r0, r0, sl, lsl #2
    75a0:	00000000 	andeq	r0, r0, r0
    75a4:	680a0000 	stmdavs	sl, {}	; <UNPREDICTABLE>
    75a8:	b7010000 	strlt	r0, [r1, -r0]
    75ac:	1b000012 	blne	75fc <__HEAP_SIZE+0x65fc>
    75b0:	00001f6e 	andeq	r1, r0, lr, ror #30
    75b4:	421a7901 	andsmi	r7, sl, #16384	; 0x4000
    75b8:	000003b3 			; <UNDEFINED> instruction: 0x000003b3
    75bc:	00006840 	andeq	r6, r0, r0, asr #16
    75c0:	00006836 	andeq	r6, r0, r6, lsr r8
    75c4:	001ed51b 	andseq	sp, lr, fp, lsl r5
    75c8:	1a7a0100 	bne	1e879d0 <__RAM_SIZE+0x1d879d0>
    75cc:	00012f3b 	andeq	r2, r1, fp, lsr pc
    75d0:	00688500 	rsbeq	r8, r8, r0, lsl #10
    75d4:	00687f00 	rsbeq	r7, r8, r0, lsl #30
    75d8:	23661800 	cmncs	r6, #0, 16
    75dc:	7c010000 	stcvc	0, cr0, [r1], {-0}
    75e0:	0671171a 			; <UNDEFINED> instruction: 0x0671171a
    75e4:	68bb0000 	ldmvs	fp!, {}	; <UNPREDICTABLE>
    75e8:	68b10000 	ldmvs	r1!, {}	; <UNPREDICTABLE>
    75ec:	b8180000 	ldmdalt	r8, {}	; <UNPREDICTABLE>
    75f0:	01000021 	tsteq	r0, r1, lsr #32
    75f4:	2f151a7d 	svccs	0x00151a7d
    75f8:	fc000001 	stc2	0, cr0, [r0], {1}
    75fc:	fa000068 	blx	77a4 <__HEAP_SIZE+0x67a4>
    7600:	18000068 	stmdane	r0, {r3, r5, r6}
    7604:	00001e74 	andeq	r1, r0, r4, ror lr
    7608:	2c1a7d01 	ldccs	13, cr7, [sl], {1}
    760c:	0000012f 	andeq	r0, r0, pc, lsr #2
    7610:	00006917 	andeq	r6, r0, r7, lsl r9
    7614:	0000690f 	andeq	r6, r0, pc, lsl #18
    7618:	00157c25 	andseq	r7, r5, r5, lsr #24
    761c:	1a7e0100 	bne	1f87a24 <__RAM_SIZE+0x1e87a24>
    7620:	0001451b 	andeq	r4, r1, fp, lsl r5
    7624:	001c0100 	andseq	r0, ip, r0, lsl #2
    7628:	00000000 	andeq	r0, r0, r0
    762c:	a6000000 	strge	r0, [r0], -r0
    7630:	18000012 	stmdane	r0, {r1, r4}
    7634:	00000a7f 	andeq	r0, r0, pc, ror sl
    7638:	191ac901 	ldmdbne	sl, {r0, r8, fp, lr, pc}
    763c:	00000391 	muleq	r0, r1, r3
    7640:	0000694f 	andeq	r6, r0, pc, asr #18
    7644:	0000694d 	andeq	r6, r0, sp, asr #18
    7648:	00002000 	andeq	r2, r0, r0
    764c:	37d40000 	ldrbcc	r0, [r4, r0]
    7650:	011f0000 	tsteq	pc, r0
    7654:	00750250 	rsbseq	r0, r5, r0, asr r2
    7658:	01210000 			; <UNDEFINED> instruction: 0x01210000
    765c:	00000f57 	andeq	r0, r0, r7, asr pc
    7660:	101a1b01 	andsne	r1, sl, r1, lsl #22
    7664:	00011901 	andeq	r1, r1, r1, lsl #18
    7668:	002e5000 	eoreq	r5, lr, r0
    766c:	002ed010 	eoreq	sp, lr, r0, lsl r0
    7670:	00696210 	rsbeq	r6, r9, r0, lsl r2
    7674:	134a0100 	movtne	r0, #41216	; 0xa100
    7678:	6e1b0000 	cdpvs	0, 1, cr0, cr11, cr0, {0}
    767c:	0100001f 	tsteq	r0, pc, lsl r0
    7680:	b33c1a1b 	teqlt	ip, #110592	; 0x1b000
    7684:	aa000003 	bge	7698 <__HEAP_SIZE+0x6698>
    7688:	9a000069 	bls	7834 <__HEAP_SIZE+0x6834>
    768c:	18000069 	stmdane	r0, {r0, r3, r5, r6}
    7690:	00002366 	andeq	r2, r0, r6, ror #6
    7694:	171a1d01 	ldrne	r1, [sl, -r1, lsl #26]
    7698:	00000671 	andeq	r0, r0, r1, ror r6
    769c:	00006a1d 	andeq	r6, r0, sp, lsl sl
    76a0:	00006a0d 	andeq	r6, r0, sp, lsl #20
    76a4:	001abd18 	andseq	fp, sl, r8, lsl sp
    76a8:	1a1e0100 	bne	787ab0 <__RAM_SIZE+0x687ab0>
    76ac:	00011914 	andeq	r1, r1, r4, lsl r9
    76b0:	006a8800 	rsbeq	r8, sl, r0, lsl #16
    76b4:	006a8000 	rsbeq	r8, sl, r0
    76b8:	2e8a1c00 	cdpcs	12, 8, cr1, cr10, cr0, {0}
    76bc:	2eba1000 	cdpcs	0, 11, cr1, cr10, cr0, {0}
    76c0:	13391000 	teqne	r9, #0
    76c4:	7f180000 	svcvc	0x00180000
    76c8:	0100000a 	tsteq	r0, sl
    76cc:	91151a4a 	tstls	r5, sl, asr #20
    76d0:	c2000003 	andgt	r0, r0, #3
    76d4:	c000006a 	andgt	r0, r0, sl, rrx
    76d8:	0000006a 	andeq	r0, r0, sl, rrx
    76dc:	002e7420 	eoreq	r7, lr, r0, lsr #8
    76e0:	0037d410 	eorseq	sp, r7, r0, lsl r4
    76e4:	50011f00 	andpl	r1, r1, r0, lsl #30
    76e8:	00007502 	andeq	r7, r0, r2, lsl #10
    76ec:	eb012100 	bl	4faf4 <__HEAP_SIZE+0x4eaf4>
    76f0:	01000012 	tsteq	r0, r2, lsl r0
    76f4:	011019b4 			; <UNDEFINED> instruction: 0x011019b4
    76f8:	00000119 	andeq	r0, r0, r9, lsl r1
	...
    7704:	00006ad5 	ldrdeq	r6, [r0], -r5
    7708:	0013dd01 	andseq	sp, r3, r1, lsl #26
    770c:	1f6e1b00 	svcne	0x006e1b00
    7710:	b4010000 	strlt	r0, [r1], #-0
    7714:	03b33919 			; <UNDEFINED> instruction: 0x03b33919
    7718:	6b210000 	blvs	847720 <__RAM_SIZE+0x747720>
    771c:	6b0d0000 	blvs	347724 <__RAM_SIZE+0x247724>
    7720:	a4180000 	ldrge	r0, [r8], #-0
    7724:	01000020 	tsteq	r0, r0, lsr #32
    7728:	711719b6 			; <UNDEFINED> instruction: 0x711719b6
    772c:	ae000006 	cdpge	0, 0, cr0, cr0, cr6, {0}
    7730:	9a00006b 	bls	78e4 <__HEAP_SIZE+0x68e4>
    7734:	1800006b 	stmdane	r0, {r0, r1, r3, r5, r6}
    7738:	00001abd 			; <UNDEFINED> instruction: 0x00001abd
    773c:	1419b701 	ldrne	fp, [r9], #-1793	; 0xfffff8ff
    7740:	00000119 	andeq	r0, r0, r9, lsl r1
    7744:	00006c2d 	andeq	r6, r0, sp, lsr #24
    7748:	00006c27 	andeq	r6, r0, r7, lsr #24
    774c:	0000001c 	andeq	r0, r0, ip, lsl r0
    7750:	00000000 	andeq	r0, r0, r0
    7754:	0013cc00 	andseq	ip, r3, r0, lsl #24
    7758:	0a7f1800 	beq	1fcd760 <__RAM_SIZE+0x1ecd760>
    775c:	e2010000 	and	r0, r1, #0
    7760:	03911519 	orrseq	r1, r1, #104857600	; 0x6400000
    7764:	6c5b0000 	mravs	r0, fp, acc0
    7768:	6c590000 	mravs	r0, r9, acc0
    776c:	20000000 	andcs	r0, r0, r0
    7770:	00000000 	andeq	r0, r0, r0
    7774:	000037d4 	ldrdeq	r3, [r0], -r4
    7778:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    777c:	00000075 	andeq	r0, r0, r5, ror r0
    7780:	15a30124 	strne	r0, [r3, #292]!	; 0x124
    7784:	8c010000 	stchi	0, cr0, [r1], {-0}
    7788:	19011019 	stmdbne	r1, {r0, r3, r4, ip}
    778c:	00000001 	andeq	r0, r0, r1
    7790:	00000000 	andeq	r0, r0, r0
    7794:	02000000 	andeq	r0, r0, #0
    7798:	1201007d 	andne	r0, r1, #125	; 0x7d
    779c:	18000014 	stmdane	r0, {r2, r4}
    77a0:	00001abd 			; <UNDEFINED> instruction: 0x00001abd
    77a4:	14198e01 	ldrne	r8, [r9], #-3585	; 0xfffff1ff
    77a8:	00000119 	andeq	r0, r0, r9, lsl r1
    77ac:	00006c70 	andeq	r6, r0, r0, ror ip
    77b0:	00006c6e 	andeq	r6, r0, lr, ror #24
    77b4:	b9012400 	stmdblt	r1, {sl, sp}
    77b8:	01000022 	tsteq	r0, r2, lsr #32
    77bc:	01121973 	tsteq	r2, r3, ror r9
    77c0:	000003a7 	andeq	r0, r0, r7, lsr #7
	...
    77cc:	01007d02 	tsteq	r0, r2, lsl #26
    77d0:	0000145c 	andeq	r1, r0, ip, asr r4
    77d4:	0014b91b 	andseq	fp, r4, fp, lsl r9
    77d8:	19730100 	ldmdbne	r3!, {r8}^
    77dc:	0001193f 	andeq	r1, r1, pc, lsr r9
    77e0:	006c8c00 	rsbeq	r8, ip, r0, lsl #24
    77e4:	006c8400 	rsbeq	r8, ip, r0, lsl #8
    77e8:	1abd1800 	bne	fef4d7f0 <__StackTop+0xc6e4d7f0>
    77ec:	75010000 	strvc	r0, [r1, #-0]
    77f0:	03a71619 			; <UNDEFINED> instruction: 0x03a71619
    77f4:	6ccc0000 	stclvs	0, cr0, [ip], {0}
    77f8:	6cc60000 	stclvs	0, cr0, [r6], {0}
    77fc:	24000000 	strcs	r0, [r0], #-0
    7800:	00139501 	andseq	r9, r3, r1, lsl #10
    7804:	19500100 	ldmdbne	r0, {r8}^
    7808:	03a70116 			; <UNDEFINED> instruction: 0x03a70116
	...
    7814:	7d020000 	stcvc	0, cr0, [r2, #-0]
    7818:	14910100 	ldrne	r0, [r1], #256	; 0x100
    781c:	bd180000 	ldclt	0, cr0, [r8, #-0]
    7820:	0100001a 	tsteq	r0, sl, lsl r0
    7824:	a71a1952 			; <UNDEFINED> instruction: 0xa71a1952
    7828:	f9000003 			; <UNDEFINED> instruction: 0xf9000003
    782c:	f700006c 			; <UNDEFINED> instruction: 0xf700006c
    7830:	0000006c 	andeq	r0, r0, ip, rrx
    7834:	001cb226 	andseq	fp, ip, r6, lsr #4
    7838:	19380100 	ldmdbne	r8!, {r8}
    783c:	2460010d 	strbtcs	r0, [r0], #-269	; 0xfffffef3
    7840:	24881000 	strcs	r1, [r8], #0
    7844:	7d021000 	stcvc	0, cr1, [r2, #-0]
    7848:	d41a0100 	ldrle	r0, [sl], #-256	; 0xffffff00
    784c:	01000021 	tsteq	r0, r1, lsr #32
    7850:	01111903 	tsteq	r1, r3, lsl #18
    7854:	100026f6 	strdne	r2, [r0], -r6
    7858:	1000271a 	andne	r2, r0, sl, lsl r7
    785c:	00006d0c 	andeq	r6, r0, ip, lsl #26
    7860:	0014fe01 	andseq	pc, r4, r1, lsl #28
    7864:	23661b00 	cmncs	r6, #0, 22
    7868:	03010000 	movweq	r0, #4096	; 0x1000
    786c:	06662719 			; <UNDEFINED> instruction: 0x06662719
    7870:	6d380000 	ldcvs	0, cr0, [r8, #-0]
    7874:	6d2c0000 	stcvs	0, cr0, [ip, #-0]
    7878:	0c1d0000 	ldceq	0, cr0, [sp], {-0}
    787c:	38100027 	ldmdacc	r0, {r0, r1, r2, r5}
    7880:	1e000038 	mcrne	0, 0, r0, cr0, cr8, {1}
    7884:	10002712 	andne	r2, r0, r2, lsl r7
    7888:	00003838 	andeq	r3, r0, r8, lsr r8
    788c:	000014f4 	strdeq	r1, [r0], -r4
    7890:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    7894:	1d000074 	stcne	0, cr0, [r0, #-464]	; 0xfffffe30
    7898:	10002718 	andne	r2, r0, r8, lsl r7
    789c:	00003838 	andeq	r3, r0, r8, lsr r8
    78a0:	65012100 	strvs	r2, [r1, #-256]	; 0xffffff00
    78a4:	01000019 	tsteq	r0, r9, lsl r0
    78a8:	011118e3 	tsteq	r1, r3, ror #17
    78ac:	0000012f 	andeq	r0, r0, pc, lsr #2
	...
    78b8:	00006d82 	andeq	r6, r0, r2, lsl #27
    78bc:	00157c01 	andseq	r7, r5, r1, lsl #24
    78c0:	1df91b00 			; <UNDEFINED> instruction: 0x1df91b00
    78c4:	e3010000 	movw	r0, #4096	; 0x1000
    78c8:	03a73b18 			; <UNDEFINED> instruction: 0x03a73b18
    78cc:	6da60000 	stcvs	0, cr0, [r6]
    78d0:	6da20000 	stcvs	0, cr0, [r2]
    78d4:	66180000 	ldrvs	r0, [r8], -r0
    78d8:	01000023 	tsteq	r0, r3, lsr #32
    78dc:	661118e5 	ldrvs	r1, [r1], -r5, ror #17
    78e0:	c6000006 	strgt	r0, [r0], -r6
    78e4:	c400006d 	strgt	r0, [r0], #-109	; 0xffffff93
    78e8:	1800006d 	stmdane	r0, {r0, r2, r3, r5, r6}
    78ec:	00002096 	muleq	r0, r6, r0
    78f0:	1318e601 	tstne	r8, #1048576	; 0x100000
    78f4:	00000160 	andeq	r0, r0, r0, ror #2
    78f8:	00006ddb 	ldrdeq	r6, [r0], -fp
    78fc:	00006dd9 	ldrdeq	r6, [r0], -r9
    7900:	000ca918 	andeq	sl, ip, r8, lsl r9
    7904:	18e70100 	stmiane	r7!, {r8}^
    7908:	00012f15 	andeq	r2, r1, r5, lsl pc
    790c:	006df100 	rsbeq	pc, sp, r0, lsl #2
    7910:	006def00 	rsbeq	lr, sp, r0, lsl #30
    7914:	00001d00 	andeq	r1, r0, r0, lsl #26
    7918:	157c0000 	ldrbne	r0, [ip, #-0]!
    791c:	27000000 	strcs	r0, [r0, -r0]
    7920:	00002230 	andeq	r2, r0, r0, lsr r2
    7924:	2318a301 	tstcs	r8, #67108864	; 0x4000000
    7928:	00002901 	andeq	r2, r0, r1, lsl #18
	...
    7934:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    7938:	0015c501 	andseq	ip, r5, r1, lsl #10
    793c:	16ed1b00 	strbtne	r1, [sp], r0, lsl #22
    7940:	a3010000 	movwge	r0, #4096	; 0x1000
    7944:	15c54f18 	strbne	r4, [r5, #3864]	; 0xf18
    7948:	6e080000 	cdpvs	0, 0, cr0, cr8, cr0, {0}
    794c:	6e040000 	cdpvs	0, 0, cr0, cr4, cr0, {0}
    7950:	77180000 	ldrvc	r0, [r8, -r0]
    7954:	01000020 	tsteq	r0, r0, lsr #32
    7958:	292018a5 	stmdbcs	r0!, {r0, r2, r5, r7, fp, ip}
    795c:	2e000000 	cdpcs	0, 0, cr0, cr0, cr0, {0}
    7960:	2600006e 	strcs	r0, [r0], -lr, rrx
    7964:	0000006e 	andeq	r0, r0, lr, rrx
    7968:	00d40407 	sbcseq	r0, r4, r7, lsl #8
    796c:	561a0000 	ldrpl	r0, [sl], -r0
    7970:	01000024 	tsteq	r0, r4, lsr #32
    7974:	010d179b 			; <UNDEFINED> instruction: 0x010d179b
    7978:	1000271c 	andne	r2, r0, ip, lsl r7
    797c:	10002768 	andne	r2, r0, r8, ror #14
    7980:	00006e67 	andeq	r6, r0, r7, ror #28
    7984:	00163801 	andseq	r3, r6, r1, lsl #16
    7988:	05202800 	streq	r2, [r0, #-2048]!	; 0xfffff800
    798c:	66180000 	ldrvs	r0, [r8], -r0
    7990:	01000023 	tsteq	r0, r3, lsr #32
    7994:	661117a1 	ldrvs	r1, [r1], -r1, lsr #15
    7998:	95000006 	strls	r0, [r0, #-6]
    799c:	9300006e 	movwls	r0, #110	; 0x6e
    79a0:	1d00006e 	stcne	0, cr0, [r0, #-440]	; 0xfffffe48
    79a4:	10002728 	andne	r2, r0, r8, lsr #14
    79a8:	000037f2 	strdeq	r3, [r0], -r2
    79ac:	0027341e 	eoreq	r3, r7, lr, lsl r4
    79b0:	0037d410 	eorseq	sp, r7, r0, lsl r4
    79b4:	00161d00 	andseq	r1, r6, r0, lsl #26
    79b8:	50011f00 	andpl	r1, r1, r0, lsl #30
    79bc:	00047402 	andeq	r7, r4, r2, lsl #8
    79c0:	0027481d 	eoreq	r4, r7, sp, lsl r8
    79c4:	00380010 	eorseq	r0, r8, r0, lsl r0
    79c8:	274e2000 	strbcs	r2, [lr, -r0]
    79cc:	14a71000 	strtne	r1, [r7], #0
    79d0:	011f0000 	tsteq	pc, r0
    79d4:	00740250 	rsbseq	r0, r4, r0, asr r2
    79d8:	1a000000 	bne	79e0 <__HEAP_SIZE+0x69e0>
    79dc:	000023f2 	strdeq	r2, [r0], -r2	; <UNPREDICTABLE>
    79e0:	0d177b01 	vldreq	d7, [r7, #-4]
    79e4:	00257001 	eoreq	r7, r5, r1
    79e8:	0025d810 	eoreq	sp, r5, r0, lsl r8
    79ec:	006ea810 	rsbeq	sl, lr, r0, lsl r8
    79f0:	16f30100 	ldrbtne	r0, [r3], r0, lsl #2
    79f4:	16180000 	ldrne	r0, [r8], -r0
    79f8:	01000015 	tsteq	r0, r5, lsl r0
    79fc:	2f11177d 	svccs	0x0011177d
    7a00:	cc000001 	stcgt	0, cr0, [r0], {1}
    7a04:	c800006e 	stmdagt	r0, {r1, r2, r3, r5, r6}
    7a08:	1e00006e 	cdpne	0, 0, cr0, cr0, cr14, {3}
    7a0c:	10002584 	andne	r2, r0, r4, lsl #11
    7a10:	00003846 	andeq	r3, r0, r6, asr #16
    7a14:	00001689 	andeq	r1, r0, r9, lsl #13
    7a18:	0f50011f 	svceq	0x0050011f
    7a1c:	24330074 	ldrtcs	r0, [r3], #-116	; 0xffffff8c
    7a20:	321c0074 	andscc	r0, ip, #116	; 0x74
    7a24:	85c40324 	strbhi	r0, [r4, #804]	; 0x324
    7a28:	00223800 	eoreq	r3, r2, r0, lsl #16
    7a2c:	0025921e 	eoreq	r9, r5, lr, lsl r2
    7a30:	00384610 	eorseq	r4, r8, r0, lsl r6
    7a34:	00169d00 	andseq	r9, r6, r0, lsl #26
    7a38:	50011f00 	andpl	r1, r1, r0, lsl #30
    7a3c:	00007502 	andeq	r7, r0, r2, lsl #10
    7a40:	00259a1e 	eoreq	r9, r5, lr, lsl sl
    7a44:	00384610 	eorseq	r4, r8, r0, lsl r6
    7a48:	0016b100 	andseq	fp, r6, r0, lsl #2
    7a4c:	50011f00 	andpl	r1, r1, r0, lsl #30
    7a50:	00007402 	andeq	r7, r0, r2, lsl #8
    7a54:	0025a01e 	eoreq	sl, r5, lr, lsl r0
    7a58:	00384610 	eorseq	r4, r8, r0, lsl r6
    7a5c:	0016c800 	andseq	ip, r6, r0, lsl #16
    7a60:	50011f00 	andpl	r1, r1, r0, lsl #30
    7a64:	8af80305 	bhi	ffe08680 <__StackTop+0xc7d08680>
    7a68:	1e003800 	cdpne	8, 0, cr3, cr0, cr0, {0}
    7a6c:	100025a6 	andne	r2, r0, r6, lsr #11
    7a70:	00003846 	andeq	r3, r0, r6, asr #16
    7a74:	000016df 	ldrdeq	r1, [r0], -pc	; <UNPREDICTABLE>
    7a78:	0550011f 	ldrbeq	r0, [r0, #-287]	; 0xfffffee1
    7a7c:	008b3403 	addeq	r3, fp, r3, lsl #8
    7a80:	ac200038 	stcge	0, cr0, [r0], #-224	; 0xffffff20
    7a84:	46100025 	ldrmi	r0, [r0], -r5, lsr #32
    7a88:	1f000038 	svcne	0x00000038
    7a8c:	03055001 	movweq	r5, #20481	; 0x5001
    7a90:	38008b18 	stmdacc	r0, {r3, r4, r8, r9, fp, pc}
    7a94:	01240000 			; <UNDEFINED> instruction: 0x01240000
    7a98:	00001a90 	muleq	r0, r0, sl
    7a9c:	1616fc01 	ldrne	pc, [r6], -r1, lsl #24
    7aa0:	0005e701 	andeq	lr, r5, r1, lsl #14
    7aa4:	002e0800 	eoreq	r0, lr, r0, lsl #16
    7aa8:	002e5010 	eoreq	r5, lr, r0, lsl r0
    7aac:	007d0210 	rsbseq	r0, sp, r0, lsl r2
    7ab0:	00173601 	andseq	r3, r7, r1, lsl #12
    7ab4:	22992500 	addscs	r2, r9, #0, 10
    7ab8:	00010000 	andeq	r0, r1, r0
    7abc:	01451f17 	cmpeq	r5, r7, lsl pc
    7ac0:	18010000 	stmdane	r1, {}	; <UNPREDICTABLE>
    7ac4:	00001767 	andeq	r1, r0, r7, ror #14
    7ac8:	1a170301 	bne	5c86d4 <__RAM_SIZE+0x4c86d4>
    7acc:	000005e7 	andeq	r0, r0, r7, ror #11
    7ad0:	00006eef 	andeq	r6, r0, pc, ror #29
    7ad4:	00006eeb 	andeq	r6, r0, fp, ror #29
    7ad8:	1b331a00 	blne	cce2e0 <__RAM_SIZE+0xbce2e0>
    7adc:	74010000 	strvc	r0, [r1], #-0
    7ae0:	70010816 	andvc	r0, r1, r6, lsl r8
    7ae4:	a810002b 	ldmdage	r0, {r0, r1, r3, r5}
    7ae8:	0e10002b 	cdpeq	0, 1, cr0, cr0, cr11, {1}
    7aec:	0100006f 	tsteq	r0, pc, rrx
    7af0:	000017c5 	andeq	r1, r0, r5, asr #15
    7af4:	001f281b 	andseq	r2, pc, fp, lsl r8	; <UNPREDICTABLE>
    7af8:	16740100 	ldrbtne	r0, [r4], -r0, lsl #2
    7afc:	00009f08 	andeq	r9, r0, r8, lsl #30
    7b00:	006f3200 	rsbeq	r3, pc, r0, lsl #4
    7b04:	006f2e00 	rsbeq	r2, pc, r0, lsl #28
    7b08:	06602300 	strbteq	r2, [r0], -r0, lsl #6
    7b0c:	17b20000 	ldrne	r0, [r2, r0]!
    7b10:	6f180000 	svcvs	0x00180000
    7b14:	01000016 	tsteq	r0, r6, lsl r0
    7b18:	4a1816bd 	bmi	60d614 <__RAM_SIZE+0x50d614>
    7b1c:	59000001 	stmdbpl	r0, {r0}
    7b20:	5300006f 	movwpl	r0, #111	; 0x6f
    7b24:	1d00006f 	stcne	0, cr0, [r0, #-444]	; 0xfffffe44
    7b28:	10002b78 	andne	r2, r0, r8, ror fp
    7b2c:	000025df 	ldrdeq	r2, [r0], -pc	; <UNPREDICTABLE>
    7b30:	002b921d 	eoreq	r9, fp, sp, lsl r2
    7b34:	00262810 	eoreq	r2, r6, r0, lsl r8
    7b38:	2b961d00 	blcs	fe58ef40 <__StackTop+0xc648ef40>
    7b3c:	25df1000 	ldrbcs	r1, [pc]	; 7b44 <__HEAP_SIZE+0x6b44>
    7b40:	9e1d0000 	cdpls	0, 1, cr0, cr13, cr0, {0}
    7b44:	5510002b 	ldrpl	r0, [r0, #-43]	; 0xffffffd5
    7b48:	1d000038 	stcne	0, cr0, [r0, #-224]	; 0xffffff20
    7b4c:	10002ba2 	andne	r2, r0, r2, lsr #23
    7b50:	000024cf 	andeq	r2, r0, pc, asr #9
    7b54:	2b801d00 	blcs	fe00ef5c <__StackTop+0xc5f0ef5c>
    7b58:	15cb1000 	strbne	r1, [fp]
    7b5c:	8c1d0000 	ldchi	0, cr0, [sp], {-0}
    7b60:	2a10002b 	bcs	407c14 <__RAM_SIZE+0x307c14>
    7b64:	00000038 	andeq	r0, r0, r8, lsr r0
    7b68:	12da0129 	sbcsne	r0, sl, #1073741834	; 0x4000000a
    7b6c:	e3010000 	movw	r0, #4096	; 0x1000
    7b70:	fc010615 	stc2	6, cr0, [r1], {21}
    7b74:	0810002d 	ldmdaeq	r0, {r0, r2, r3, r5}
    7b78:	0210002e 	andseq	r0, r0, #46	; 0x2e
    7b7c:	2101007d 	tstcs	r1, sp, ror r0
    7b80:	00125001 	andseq	r5, r2, r1
    7b84:	159e0100 	ldrne	r0, [lr, #256]	; 0x100
    7b88:	0119010c 	tsteq	r9, ip, lsl #2
    7b8c:	2d800000 	stccs	0, cr0, [r0]
    7b90:	2dfc1000 	ldclcs	0, cr1, [ip]
    7b94:	6f821000 	svcvs	0x00821000
    7b98:	92010000 	andls	r0, r1, #0
    7b9c:	1b000018 	blne	7c04 <__HEAP_SIZE+0x6c04>
    7ba0:	00001d08 	andeq	r1, r0, r8, lsl #26
    7ba4:	34159e01 	ldrcc	r9, [r5], #-3585	; 0xfffff1ff
    7ba8:	00001898 	muleq	r0, r8, r8
    7bac:	00006fb8 			; <UNDEFINED> instruction: 0x00006fb8
    7bb0:	00006fa2 	andeq	r6, r0, r2, lsr #31
    7bb4:	0021841b 	eoreq	r8, r1, fp, lsl r4
    7bb8:	159f0100 	ldrne	r0, [pc, #256]	; 7cc0 <__HEAP_SIZE+0x6cc0>
    7bbc:	0018a335 	andseq	sl, r8, r5, lsr r3
    7bc0:	00704c00 	rsbseq	r4, r0, r0, lsl #24
    7bc4:	00704800 	rsbseq	r4, r0, r0, lsl #16
    7bc8:	1abd1800 	bne	fef4dbd0 <__StackTop+0xc6e4dbd0>
    7bcc:	a1010000 	mrsge	r0, (UNDEF: 1)
    7bd0:	01191015 	tsteq	r9, r5, lsl r0
    7bd4:	70740000 	rsbsvc	r0, r4, r0
    7bd8:	706a0000 	rsbvc	r0, sl, r0
    7bdc:	38230000 	stmdacc	r3!, {}	; <UNPREDICTABLE>
    7be0:	7f000007 	svcvc	0x00000007
    7be4:	18000018 	stmdane	r0, {r3, r4}
    7be8:	00001a1b 	andeq	r1, r0, fp, lsl sl
    7bec:	1a15ab01 	bne	5727f8 <__RAM_SIZE+0x4727f8>
    7bf0:	0000015b 	andeq	r0, r0, fp, asr r1
    7bf4:	000070bd 	strheq	r7, [r0], -sp
    7bf8:	000070b7 	strheq	r7, [r0], -r7	; <UNPREDICTABLE>
    7bfc:	00187118 	andseq	r7, r8, r8, lsl r1
    7c00:	15ac0100 	strne	r0, [ip, #256]!	; 0x100
    7c04:	00015b1a 	andeq	r5, r1, sl, lsl fp
    7c08:	0070ec00 	rsbseq	lr, r0, r0, lsl #24
    7c0c:	0070e600 	rsbseq	lr, r0, r0, lsl #12
    7c10:	2de62000 	stclcs	0, cr2, [r6]
    7c14:	18a81000 	stmiane	r8!, {ip}
    7c18:	011f0000 	tsteq	pc, r0
    7c1c:	00740250 	rsbseq	r0, r4, r0, asr r2
    7c20:	8a1d0000 	bhi	747c28 <__RAM_SIZE+0x647c28>
    7c24:	f210002d 	vhadd.s16	d0, d0, d29
    7c28:	1d000037 	stcne	0, cr0, [r0, #-220]	; 0xffffff24
    7c2c:	10002dac 	andne	r2, r0, ip, lsr #27
    7c30:	00003800 	andeq	r3, r0, r0, lsl #16
    7c34:	63040700 	movwvs	r0, #18176	; 0x4700
    7c38:	03000005 	movweq	r0, #5
    7c3c:	00001892 	muleq	r0, r2, r8
    7c40:	014a0407 	cmpeq	sl, r7, lsl #8
    7c44:	9d030000 	stcls	0, cr0, [r3, #-0]
    7c48:	17000018 	smladne	r0, r8, r0, r0
    7c4c:	0010d101 	andseq	sp, r0, r1, lsl #2
    7c50:	15920100 	ldrne	r0, [r2, #256]	; 0x100
    7c54:	2d680106 	stfcse	f0, [r8, #-24]!	; 0xffffffe8
    7c58:	2d801000 	stccs	0, cr1, [r0]
    7c5c:	7d021000 	stcvc	0, cr1, [r2, #-0]
    7c60:	18d30100 	ldmne	r3, {r8}^
    7c64:	08190000 	ldmdaeq	r9, {}	; <UNPREDICTABLE>
    7c68:	0100001d 	tsteq	r0, sp, lsl r0
    7c6c:	98361592 	ldmdals	r6!, {r1, r4, r7, r8, sl, ip}
    7c70:	01000018 	tsteq	r0, r8, lsl r0
    7c74:	01220050 	qsubeq	r0, r0, r2
    7c78:	000016af 	andeq	r1, r0, pc, lsr #13
    7c7c:	06158201 	ldreq	r8, [r5], -r1, lsl #4
    7c80:	00000001 	andeq	r0, r0, r1
    7c84:	00000000 	andeq	r0, r0, r0
    7c88:	00711500 	rsbseq	r1, r1, r0, lsl #10
    7c8c:	19170100 	ldmdbne	r7, {r8}
    7c90:	081b0000 	ldmdaeq	fp, {}	; <UNPREDICTABLE>
    7c94:	0100001d 	tsteq	r0, sp, lsl r0
    7c98:	982e1582 	stmdals	lr!, {r1, r7, r8, sl, ip}
    7c9c:	3b000018 	blcc	7d04 <__HEAP_SIZE+0x6d04>
    7ca0:	35000071 	strcc	r0, [r0, #-113]	; 0xffffff8f
    7ca4:	1d000071 	stcne	0, cr0, [r0, #-452]	; 0xfffffe3c
    7ca8:	00000000 	andeq	r0, r0, r0
    7cac:	000037f2 	strdeq	r3, [r0], -r2
    7cb0:	0000001d 	andeq	r0, r0, sp, lsl r0
    7cb4:	00380000 	eorseq	r0, r8, r0
    7cb8:	01220000 			; <UNDEFINED> instruction: 0x01220000
    7cbc:	00001ac5 	andeq	r1, r0, r5, asr #21
    7cc0:	06153a01 	ldreq	r3, [r5], -r1, lsl #20
    7cc4:	00000001 	andeq	r0, r0, r1
    7cc8:	00000000 	andeq	r0, r0, r0
    7ccc:	00716700 	rsbseq	r6, r1, r0, lsl #14
    7cd0:	19dd0100 	ldmibne	sp, {r8}^
    7cd4:	071b0000 	ldreq	r0, [fp, -r0]
    7cd8:	01000022 	tsteq	r0, r2, lsr #32
    7cdc:	8b36153a 	blhi	d8d1cc <__RAM_SIZE+0xc8d1cc>
    7ce0:	8f000003 	svchi	0x00000003
    7ce4:	87000071 	smlsdxhi	r0, r1, r0, r0
    7ce8:	1b000071 	blne	7eb4 <__HEAP_SIZE+0x6eb4>
    7cec:	000009cf 	andeq	r0, r0, pc, asr #19
    7cf0:	3a153b01 	bcc	5568fc <__RAM_SIZE+0x4568fc>
    7cf4:	0000015b 	andeq	r0, r0, fp, asr r1
    7cf8:	000071cd 	andeq	r7, r0, sp, asr #3
    7cfc:	000071c9 	andeq	r7, r0, r9, asr #3
    7d00:	00184218 	andseq	r4, r8, r8, lsl r2
    7d04:	153d0100 	ldrne	r0, [sp, #-256]!	; 0xffffff00
    7d08:	0006660d 	andeq	r6, r6, sp, lsl #12
    7d0c:	0071f000 	rsbseq	pc, r1, r0
    7d10:	0071ee00 	rsbseq	lr, r1, r0, lsl #28
    7d14:	07082300 	streq	r2, [r8, -r0, lsl #6]
    7d18:	19910000 	ldmibne	r1, {}	; <UNPREDICTABLE>
    7d1c:	b3180000 	tstlt	r8, #0
    7d20:	0100000a 	tsteq	r0, sl
    7d24:	dd05154f 	cfstr32le	mvfx1, [r5, #-316]	; 0xfffffec4
    7d28:	07000006 	streq	r0, [r0, -r6]
    7d2c:	03000072 	movweq	r0, #114	; 0x72
    7d30:	00000072 	andeq	r0, r0, r2, ror r0
    7d34:	00072023 	andeq	r2, r7, r3, lsr #32
    7d38:	0019b000 	andseq	fp, r9, r0
    7d3c:	0ab31800 	beq	feccdd44 <__StackTop+0xc6bcdd44>
    7d40:	62010000 	andvs	r0, r1, #0
    7d44:	06dd0515 			; <UNDEFINED> instruction: 0x06dd0515
    7d48:	72290000 	eorvc	r0, r9, #0
    7d4c:	72250000 	eorvc	r0, r5, #0
    7d50:	1c000000 	stcne	0, cr0, [r0], {-0}
	...
    7d5c:	000019d3 	ldrdeq	r1, [r0], -r3
    7d60:	000a7f18 	andeq	r7, sl, r8, lsl pc
    7d64:	15630100 	strbne	r0, [r3, #-256]!	; 0xffffff00
    7d68:	00039105 	andeq	r9, r3, r5, lsl #2
    7d6c:	00724900 	rsbseq	r4, r2, r0, lsl #18
    7d70:	00724700 	rsbseq	r4, r2, r0, lsl #14
    7d74:	001d0000 	andseq	r0, sp, r0
    7d78:	91000000 	mrsls	r0, (UNDEF: 0)
    7d7c:	00000014 	andeq	r0, r0, r4, lsl r0
    7d80:	14680121 	strbtne	r0, [r8], #-289	; 0xfffffedf
    7d84:	dd010000 	stcle	0, cr0, [r1, #-0]
    7d88:	19010c14 	stmdbne	r1, {r2, r4, sl, fp}
    7d8c:	84000001 	strhi	r0, [r0], #-1
    7d90:	6810002c 	ldmdavs	r0, {r2, r3, r5}
    7d94:	5c10002d 	ldcpl	0, cr0, [r0], {45}	; 0x2d
    7d98:	01000072 	tsteq	r0, r2, ror r0
    7d9c:	00001aca 	andeq	r1, r0, sl, asr #21
    7da0:	0015e51b 	andseq	lr, r5, fp, lsl r5
    7da4:	14dd0100 	ldrbne	r0, [sp], #256	; 0x100
    7da8:	001ad03b 	andseq	sp, sl, fp, lsr r0
    7dac:	00728400 	rsbseq	r8, r2, r0, lsl #8
    7db0:	00727c00 	rsbseq	r7, r2, r0, lsl #24
    7db4:	18421800 	stmdane	r2, {fp, ip}^
    7db8:	df010000 	svcle	0x00010000
    7dbc:	06660d14 			; <UNDEFINED> instruction: 0x06660d14
    7dc0:	72c00000 	sbcvc	r0, r0, #0
    7dc4:	72be0000 	adcsvc	r0, lr, #0
    7dc8:	bd180000 	ldclt	0, cr0, [r8, #-0]
    7dcc:	0100001a 	tsteq	r0, sl, lsl r0
    7dd0:	191014e0 	ldmdbne	r0, {r5, r6, r7, sl, ip}
    7dd4:	d7000001 	strle	r0, [r0, -r1]
    7dd8:	d3000072 	movwle	r0, #114	; 0x72
    7ddc:	23000072 	movwcs	r0, #114	; 0x72
    7de0:	000006d8 	ldrdeq	r0, [r0], -r8
    7de4:	00001a5b 	andeq	r1, r0, fp, asr sl
    7de8:	000ab318 	andeq	fp, sl, r8, lsl r3
    7dec:	14f60100 	ldrbtne	r0, [r6], #256	; 0x100
    7df0:	0006dd05 	andeq	sp, r6, r5, lsl #26
    7df4:	0072fb00 	rsbseq	pc, r2, r0, lsl #22
    7df8:	0072f700 	rsbseq	pc, r2, r0, lsl #14
    7dfc:	f0230000 			; <UNDEFINED> instruction: 0xf0230000
    7e00:	7a000006 	bvc	7e20 <__HEAP_SIZE+0x6e20>
    7e04:	1800001a 	stmdane	r0, {r1, r3, r4}
    7e08:	00000ab3 			; <UNDEFINED> instruction: 0x00000ab3
    7e0c:	0914fa01 	ldmdbeq	r4, {r0, r9, fp, ip, sp, lr, pc}
    7e10:	000006dd 	ldrdeq	r0, [r0], -sp
    7e14:	0000731d 	andeq	r7, r0, sp, lsl r3
    7e18:	00007319 	andeq	r7, r0, r9, lsl r3
    7e1c:	2cde1c00 	ldclcs	12, cr1, [lr], {0}
    7e20:	2d0e1000 	stccs	0, cr1, [lr, #-0]
    7e24:	1a9d1000 	bne	fe74be2c <__StackTop+0xc664be2c>
    7e28:	7f180000 	svcvc	0x00180000
    7e2c:	0100000a 	tsteq	r0, sl
    7e30:	910914fb 	strdls	r1, [r9, -fp]
    7e34:	3d000003 	stccc	0, cr0, [r0, #-12]
    7e38:	3b000073 	blcc	800c <__HEAP_SIZE+0x700c>
    7e3c:	00000073 	andeq	r0, r0, r3, ror r0
    7e40:	002d321c 	eoreq	r3, sp, ip, lsl r2
    7e44:	002d4a10 	eoreq	r4, sp, r0, lsl sl
    7e48:	001ac010 	andseq	ip, sl, r0, lsl r0
    7e4c:	0a7f1800 	beq	1fcde54 <__RAM_SIZE+0x1ecde54>
    7e50:	0f010000 	svceq	0x00010000
    7e54:	03910915 	orrseq	r0, r1, #344064	; 0x54000
    7e58:	73520000 	cmpvc	r2, #0
    7e5c:	73500000 	cmpvc	r0, #0
    7e60:	1d000000 	stcne	0, cr0, [r0, #-0]
    7e64:	10002d12 	andne	r2, r0, r2, lsl sp
    7e68:	00001491 	muleq	r0, r1, r4
    7e6c:	a2040700 	andge	r0, r4, #0, 14
    7e70:	03000003 	movweq	r0, #3
    7e74:	00001aca 	andeq	r1, r0, sl, asr #21
    7e78:	0fc40122 	svceq	0x00c40122
    7e7c:	b8010000 	stmdalt	r1, {}	; <UNPREDICTABLE>
    7e80:	48010a14 	stmdami	r1, {r2, r4, r9, fp}
    7e84:	8410002c 	ldrhi	r0, [r0], #-44	; 0xffffffd4
    7e88:	6510002c 	ldrvs	r0, [r0, #-44]	; 0xffffffd4
    7e8c:	01000073 	tsteq	r0, r3, ror r0
    7e90:	00001b5d 	andeq	r1, r0, sp, asr fp
    7e94:	0015e51b 	andseq	lr, r5, fp, lsl r5
    7e98:	14b80100 	ldrtne	r0, [r8], #256	; 0x100
    7e9c:	0006dd3a 	andeq	sp, r6, sl, lsr sp
    7ea0:	00738b00 	rsbseq	r8, r3, r0, lsl #22
    7ea4:	00738500 	rsbseq	r8, r3, r0, lsl #10
    7ea8:	21851b00 	orrcs	r1, r5, r0, lsl #22
    7eac:	b9010000 	stmdblt	r1, {}	; <UNPREDICTABLE>
    7eb0:	014a3614 	cmpeq	sl, r4, lsl r6
    7eb4:	73bb0000 			; <UNDEFINED> instruction: 0x73bb0000
    7eb8:	73b70000 			; <UNDEFINED> instruction: 0x73b70000
    7ebc:	231b0000 	tstcs	fp, #0
    7ec0:	0100000c 	tsteq	r0, ip
    7ec4:	2a3c14ba 	bcs	f0d1b4 <__RAM_SIZE+0xe0d1b4>
    7ec8:	dd000001 	stcle	0, cr0, [r0, #-4]
    7ecc:	d9000073 	stmdble	r0, {r0, r1, r4, r5, r6}
    7ed0:	1c000073 	stcne	0, cr0, [r0], {115}	; 0x73
    7ed4:	10002c4e 	andne	r2, r0, lr, asr #24
    7ed8:	10002c72 	andne	r2, r0, r2, ror ip
    7edc:	00001b53 	andeq	r1, r0, r3, asr fp
    7ee0:	000a7f18 	andeq	r7, sl, r8, lsl pc
    7ee4:	14ca0100 	strbne	r0, [sl], #256	; 0x100
    7ee8:	00039109 	andeq	r9, r3, r9, lsl #2
    7eec:	00740000 	rsbseq	r0, r4, r0
    7ef0:	0073fe00 	rsbseq	pc, r3, r0, lsl #28
    7ef4:	7e1d0000 	cdpvc	0, 1, cr0, cr13, cr0, {0}
    7ef8:	8610002c 	ldrhi	r0, [r0], -ip, lsr #32
    7efc:	00000009 	andeq	r0, r0, r9
    7f00:	14cc0122 	strbne	r0, [ip], #290	; 0x122
    7f04:	98010000 	stmdals	r1, {}	; <UNPREDICTABLE>
    7f08:	00010614 	andeq	r0, r1, r4, lsl r6
    7f0c:	00000000 	andeq	r0, r0, r0
    7f10:	13000000 	movwne	r0, #0
    7f14:	01000074 	tsteq	r0, r4, ror r0
    7f18:	00001bf2 	strdeq	r1, [r0], -r2
    7f1c:	0015e51b 	andseq	lr, r5, fp, lsl r5
    7f20:	14980100 	ldrne	r0, [r8], #256	; 0x100
    7f24:	0006d22f 	andeq	sp, r6, pc, lsr #4
    7f28:	00743900 	rsbseq	r3, r4, r0, lsl #18
    7f2c:	00743300 	rsbseq	r3, r4, r0, lsl #6
    7f30:	09cf1b00 	stmibeq	pc, {r8, r9, fp, ip}^	; <UNPREDICTABLE>
    7f34:	99010000 	stmdbls	r1, {}	; <UNPREDICTABLE>
    7f38:	015b3714 	cmpeq	fp, r4, lsl r7
    7f3c:	74690000 	strbtvc	r0, [r9], #-0
    7f40:	74650000 	strbtvc	r0, [r5], #-0
    7f44:	851b0000 	ldrhi	r0, [fp, #-0]
    7f48:	01000021 	tsteq	r0, r1, lsr #32
    7f4c:	5b37149a 	blpl	dcd1bc <__RAM_SIZE+0xccd1bc>
    7f50:	8e000001 	cdphi	0, 0, cr0, cr0, cr1, {0}
    7f54:	8a000074 	bhi	812c <__HEAP_SIZE+0x712c>
    7f58:	1c000074 	stcne	0, cr0, [r0], {116}	; 0x74
	...
    7f64:	00001bdb 	ldrdeq	r1, [r0], -fp
    7f68:	000a7f18 	andeq	r7, sl, r8, lsl pc
    7f6c:	14ae0100 	strtne	r0, [lr], #256	; 0x100
    7f70:	00039105 	andeq	r9, r3, r5, lsl #2
    7f74:	0074b100 	rsbseq	fp, r4, r0, lsl #2
    7f78:	0074af00 	rsbseq	sl, r4, r0, lsl #30
    7f7c:	00200000 	eoreq	r0, r0, r0
    7f80:	86000000 	strhi	r0, [r0], -r0
    7f84:	1f000009 	svcne	0x00000009
    7f88:	f3035001 	vhadd.u8	d5, d3, d1
    7f8c:	011f5201 	tsteq	pc, r1, lsl #4
    7f90:	00310151 	eorseq	r0, r1, r1, asr r1
    7f94:	be012200 	cdplt	2, 0, cr2, cr1, cr0, {0}
    7f98:	0100000e 	tsteq	r0, lr
    7f9c:	0106147b 	tsteq	r6, fp, ror r4
    7fa0:	10002c2c 	andne	r2, r0, ip, lsr #24
    7fa4:	10002c48 	andne	r2, r0, r8, asr #24
    7fa8:	000074c4 	andeq	r7, r0, r4, asr #9
    7fac:	001c6301 	andseq	r6, ip, r1, lsl #6
    7fb0:	15e51b00 	strbne	r1, [r5, #2816]!	; 0xb00
    7fb4:	7b010000 	blvc	47fbc <__HEAP_SIZE+0x46fbc>
    7fb8:	06dd2c14 			; <UNDEFINED> instruction: 0x06dd2c14
    7fbc:	74e80000 	strbtvc	r0, [r8], #0
    7fc0:	74e40000 	strbtvc	r0, [r4], #0
    7fc4:	851b0000 	ldrhi	r0, [fp, #-0]
    7fc8:	01000021 	tsteq	r0, r1, lsr #32
    7fcc:	5b2e147c 	blpl	b8d1c4 <__RAM_SIZE+0xa8d1c4>
    7fd0:	0f000001 	svceq	0x00000001
    7fd4:	09000075 	stmdbeq	r0, {r0, r2, r4, r5, r6}
    7fd8:	1e000075 	mcrne	0, 0, r0, cr0, cr5, {3}
    7fdc:	10002c3a 	andne	r2, r0, sl, lsr ip
    7fe0:	000037e3 	andeq	r3, r0, r3, ror #15
    7fe4:	00001c4d 	andeq	r1, r0, sp, asr #24
    7fe8:	0350011f 	cmpeq	r0, #-1073741817	; 0xc0000007
    7fec:	005001f3 	ldrsheq	r0, [r0], #-19	; 0xffffffed
    7ff0:	002c4220 	eoreq	r4, ip, r0, lsr #4
    7ff4:	00098610 	andeq	r8, r9, r0, lsl r6
    7ff8:	50011f00 	andpl	r1, r1, r0, lsl #30
    7ffc:	1f007402 	svcne	0x00007402
    8000:	31015101 	tstcc	r1, r1, lsl #2
    8004:	01170000 	tsteq	r7, r0
    8008:	00001e84 	andeq	r1, r0, r4, lsl #29
    800c:	0a13c001 	beq	4f8018 <__RAM_SIZE+0x3f8018>
    8010:	002ba801 	eoreq	sl, fp, r1, lsl #16
    8014:	002c2c10 	eoreq	r2, ip, r0, lsl ip
    8018:	007d0210 	rsbseq	r0, sp, r0, lsl r2
    801c:	001cb501 	andseq	fp, ip, r1, lsl #10
    8020:	06782800 	ldrbteq	r2, [r8], -r0, lsl #16
    8024:	9b180000 	blls	60802c <__RAM_SIZE+0x50802c>
    8028:	01000021 	tsteq	r0, r1, lsr #32
    802c:	2f0d13fa 	svccs	0x000d13fa
    8030:	41000001 	tstmi	r0, r1
    8034:	3b000075 	blcc	8210 <__HEAP_SIZE+0x7210>
    8038:	28000075 	stmdacs	r0, {r0, r2, r4, r5, r6}
    803c:	00000690 	muleq	r0, r0, r6
    8040:	00152118 	andseq	r2, r5, r8, lsl r1
    8044:	13fa0100 	mvnsne	r0, #0, 2
    8048:	0006dd0d 	andeq	sp, r6, sp, lsl #26
    804c:	00757400 	rsbseq	r7, r5, r0, lsl #8
    8050:	00756e00 	rsbseq	r6, r5, r0, lsl #28
    8054:	00000000 	andeq	r0, r0, r0
    8058:	1e570121 	rdfnesp	f0, f7, f1
    805c:	9c010000 	stcls	0, cr0, [r1], {-0}
    8060:	19011013 	stmdbne	r1, {r0, r1, r4, ip}
    8064:	00000001 	andeq	r0, r0, r1
    8068:	00000000 	andeq	r0, r0, r0
    806c:	bf000000 	svclt	0x00000000
    8070:	01000075 	tsteq	r0, r5, ror r0
    8074:	00001d37 	andeq	r1, r0, r7, lsr sp
    8078:	001df91b 	andseq	pc, sp, fp, lsl r9	; <UNPREDICTABLE>
    807c:	139c0100 	orrsne	r0, ip, #0, 2
    8080:	0003a73b 	andeq	sl, r3, fp, lsr r7
    8084:	0075e300 	rsbseq	lr, r5, r0, lsl #6
    8088:	0075df00 	rsbseq	sp, r5, r0, lsl #30
    808c:	22171b00 	andscs	r1, r7, #0, 22
    8090:	9d010000 	stcls	0, cr0, [r1, #-0]
    8094:	009f3513 	addseq	r3, pc, r3, lsl r5	; <UNPREDICTABLE>
    8098:	76070000 	strvc	r0, [r7], -r0
    809c:	76010000 	strvc	r0, [r1], -r0
    80a0:	67180000 	ldrvs	r0, [r8, -r0]
    80a4:	01000023 	tsteq	r0, r3, lsr #32
    80a8:	6611139f 			; <UNDEFINED> instruction: 0x6611139f
    80ac:	37000006 	strcc	r0, [r0, -r6]
    80b0:	33000076 	movwcc	r0, #118	; 0x76
    80b4:	18000076 	stmdane	r0, {r1, r2, r4, r5, r6}
    80b8:	00001abd 			; <UNDEFINED> instruction: 0x00001abd
    80bc:	1413a001 	ldrne	sl, [r3], #-1
    80c0:	00000119 	andeq	r0, r0, r9, lsl r1
    80c4:	00007657 	andeq	r7, r0, r7, asr r6
    80c8:	00007655 	andeq	r7, r0, r5, asr r6
    80cc:	0000002a 	andeq	r0, r0, sl, lsr #32
    80d0:	50011f00 	andpl	r1, r1, r0, lsl #30
    80d4:	5101f303 	tstpl	r1, r3, lsl #6	; <UNPREDICTABLE>
    80d8:	01210000 			; <UNDEFINED> instruction: 0x01210000
    80dc:	00002426 	andeq	r2, r0, r6, lsr #8
    80e0:	18137c01 	ldmdane	r3, {r0, sl, fp, ip, sp, lr}
    80e4:	00049d01 	andeq	r9, r4, r1, lsl #26
	...
    80f0:	00766b00 	rsbseq	r6, r6, r0, lsl #22
    80f4:	1dbe0100 	ldfnes	f0, [lr]
    80f8:	f91b0000 			; <UNDEFINED> instruction: 0xf91b0000
    80fc:	0100001d 	tsteq	r0, sp, lsl r0
    8100:	a748137c 	smlsldxge	r1, r8, ip, r3
    8104:	8f000003 	svchi	0x00000003
    8108:	8b000076 	blhi	82e8 <__HEAP_SIZE+0x72e8>
    810c:	18000076 	stmdane	r0, {r1, r2, r4, r5, r6}
    8110:	00002366 	andeq	r2, r0, r6, ror #6
    8114:	11137e01 	tstne	r3, r1, lsl #28
    8118:	00000666 	andeq	r0, r0, r6, ror #12
    811c:	000076af 	andeq	r7, r0, pc, lsr #13
    8120:	000076ad 	andeq	r7, r0, sp, lsr #13
    8124:	001abd18 	andseq	fp, sl, r8, lsl sp
    8128:	137f0100 	cmnne	pc, #0, 2
    812c:	00049d1c 	andeq	r9, r4, ip, lsl sp
    8130:	0076c400 	rsbseq	ip, r6, r0, lsl #8
    8134:	0076c200 	rsbseq	ip, r6, r0, lsl #4
    8138:	0cca1800 	stcleq	8, cr1, [sl], {0}
    813c:	80010000 	andhi	r0, r1, r0
    8140:	012f1513 			; <UNDEFINED> instruction: 0x012f1513
    8144:	76d90000 	ldrbvc	r0, [r9], r0
    8148:	76d70000 	ldrbvc	r0, [r7], r0
    814c:	001d0000 	andseq	r0, sp, r0
    8150:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
    8154:	1d000038 	stcne	0, cr0, [r0, #-224]	; 0xffffff20
    8158:	00000000 	andeq	r0, r0, r0
    815c:	0000381c 	andeq	r3, r0, ip, lsl r8
    8160:	08012100 	stmdaeq	r1, {r8, sp}
    8164:	01000019 	tsteq	r0, r9, lsl r0
    8168:	01181360 	tsteq	r8, r0, ror #6
    816c:	0000049d 	muleq	r0, sp, r4
	...
    8178:	000076ec 	andeq	r7, r0, ip, ror #13
    817c:	001e3001 	andseq	r3, lr, r1
    8180:	1df91b00 			; <UNDEFINED> instruction: 0x1df91b00
    8184:	60010000 	andvs	r0, r1, r0
    8188:	03a74113 			; <UNDEFINED> instruction: 0x03a74113
    818c:	77100000 	ldrvc	r0, [r0, -r0]
    8190:	770c0000 	strvc	r0, [ip, -r0]
    8194:	66180000 	ldrvs	r0, [r8], -r0
    8198:	01000023 	tsteq	r0, r3, lsr #32
    819c:	66111362 	ldrvs	r1, [r1], -r2, ror #6
    81a0:	30000006 	andcc	r0, r0, r6
    81a4:	2e000077 	mcrcs	0, 0, r0, cr0, cr7, {3}
    81a8:	18000077 	stmdane	r0, {r0, r1, r2, r4, r5, r6}
    81ac:	00001abd 			; <UNDEFINED> instruction: 0x00001abd
    81b0:	1c136301 	ldcne	3, cr6, [r3], {1}
    81b4:	0000049d 	muleq	r0, sp, r4
    81b8:	00007745 	andeq	r7, r0, r5, asr #14
    81bc:	00007743 	andeq	r7, r0, r3, asr #14
    81c0:	0000001d 	andeq	r0, r0, sp, lsl r0
    81c4:	0037f200 	eorseq	pc, r7, r0, lsl #4
    81c8:	00001d00 	andeq	r1, r0, r0, lsl #26
    81cc:	38000000 	stmdacc	r0, {}	; <UNPREDICTABLE>
    81d0:	22000000 	andcs	r0, r0, #0
    81d4:	00178c01 	andseq	r8, r7, r1, lsl #24
    81d8:	133e0100 	teqne	lr, #0, 2
    81dc:	0000010a 	andeq	r0, r0, sl, lsl #2
    81e0:	00000000 	andeq	r0, r0, r0
    81e4:	77580000 	ldrbvc	r0, [r8, -r0]
    81e8:	9e010000 	cdpls	0, 0, cr0, cr1, cr0, {0}
    81ec:	1b00001e 	blne	826c <__HEAP_SIZE+0x726c>
    81f0:	00001df9 	strdeq	r1, [r0], -r9
    81f4:	33133e01 	tstcc	r3, #1, 28
    81f8:	000003a7 	andeq	r0, r0, r7, lsr #7
    81fc:	0000777c 	andeq	r7, r0, ip, ror r7
    8200:	00007778 	andeq	r7, r0, r8, ror r7
    8204:	001b911b 	andseq	r9, fp, fp, lsl r1
    8208:	133f0100 	teqne	pc, #0, 2
    820c:	00049d39 	andeq	r9, r4, r9, lsr sp
    8210:	0077a000 	rsbseq	sl, r7, r0
    8214:	00779a00 	rsbseq	r9, r7, r0, lsl #20
    8218:	23671800 	cmncs	r7, #0, 16
    821c:	41010000 	mrsmi	r0, (UNDEF: 1)
    8220:	06661113 			; <UNDEFINED> instruction: 0x06661113
    8224:	77cd0000 	strbvc	r0, [sp, r0]
    8228:	77c90000 	strbvc	r0, [r9, r0]
    822c:	001d0000 	andseq	r0, sp, r0
    8230:	f2000000 	vhadd.s8	d0, d0, d0
    8234:	1d000037 	stcne	0, cr0, [r0, #-220]	; 0xffffff24
    8238:	00000000 	andeq	r0, r0, r0
    823c:	00003800 	andeq	r3, r0, r0, lsl #16
    8240:	81012100 	mrshi	r2, (UNDEF: 17)
    8244:	01000019 	tsteq	r0, r9, lsl r0
    8248:	010c123e 	tsteq	ip, lr, lsr r2
    824c:	00000119 	andeq	r0, r0, r9, lsl r1
    8250:	100028c0 	andne	r2, r0, r0, asr #17
    8254:	10002a20 	andne	r2, r0, r0, lsr #20
    8258:	000077eb 	andeq	r7, r0, fp, ror #15
    825c:	001fa201 	andseq	sl, pc, r1, lsl #4
    8260:	23661800 	cmncs	r6, #0, 16
    8264:	40010000 	andmi	r0, r1, r0
    8268:	06660d12 			; <UNDEFINED> instruction: 0x06660d12
    826c:	78290000 	stmdavc	r9!, {}	; <UNPREDICTABLE>
    8270:	78230000 	stmdavc	r3!, {}	; <UNPREDICTABLE>
    8274:	cf180000 	svcgt	0x00180000
    8278:	01000009 	tsteq	r0, r9
    827c:	4a101241 	bmi	40cb88 <__RAM_SIZE+0x30cb88>
    8280:	58000001 	stmdapl	r0, {r0}
    8284:	52000078 	andpl	r0, r0, #120	; 0x78
    8288:	18000078 	stmdane	r0, {r3, r4, r5, r6}
    828c:	00001f5e 	andeq	r1, r0, lr, asr pc
    8290:	10124201 	andsne	r4, r2, r1, lsl #4
    8294:	00000119 	andeq	r0, r0, r9, lsl r1
    8298:	00007890 	muleq	r0, r0, r8
    829c:	00007882 	andeq	r7, r0, r2, lsl #17
    82a0:	00056828 	andeq	r6, r5, r8, lsr #16
    82a4:	1a1b1800 	bne	6ce2ac <__RAM_SIZE+0x5ce2ac>
    82a8:	57010000 	strpl	r0, [r1, -r0]
    82ac:	015b1a12 	cmpeq	fp, r2, lsl sl
    82b0:	78ed0000 	stmiavc	sp!, {}^	; <UNPREDICTABLE>
    82b4:	78e90000 	stmiavc	r9!, {}^	; <UNPREDICTABLE>
    82b8:	001c0000 	andseq	r0, ip, r0
    82bc:	18100029 	ldmdane	r0, {r0, r3, r5}
    82c0:	43100029 	tstmi	r0, #41	; 0x29
    82c4:	1800001f 	stmdane	r0, {r0, r1, r2, r3, r4}
    82c8:	0000194c 	andeq	r1, r0, ip, asr #18
    82cc:	0d125f01 	ldceq	15, cr5, [r2, #-4]
    82d0:	000006d2 	ldrdeq	r0, [r0], -r2
    82d4:	0000790d 	andeq	r7, r0, sp, lsl #18
    82d8:	0000790b 	andeq	r7, r0, fp, lsl #18
    82dc:	0029181d 	eoreq	r1, r9, sp, lsl r8
    82e0:	00149110 	andseq	r9, r4, r0, lsl r1
    82e4:	98230000 	stmdals	r3!, {}	; <UNPREDICTABLE>
    82e8:	62000005 	andvs	r0, r0, #5
    82ec:	1800001f 	stmdane	r0, {r0, r1, r2, r3, r4}
    82f0:	00000ab3 			; <UNDEFINED> instruction: 0x00000ab3
    82f4:	15129401 	ldrne	r9, [r2, #-1025]	; 0xfffffbff
    82f8:	000006dd 	ldrdeq	r0, [r0], -sp
    82fc:	00007924 	andeq	r7, r0, r4, lsr #18
    8300:	00007920 	andeq	r7, r0, r0, lsr #18
    8304:	05b02300 	ldreq	r2, [r0, #768]!	; 0x300
    8308:	1f810000 	svcne	0x00810000
    830c:	b3180000 	tstlt	r8, #0
    8310:	0100000a 	tsteq	r0, sl
    8314:	dd19129a 	lfmle	f1, 4, [r9, #-616]	; 0xfffffd98
    8318:	46000006 	strmi	r0, [r0], -r6
    831c:	42000079 	andmi	r0, r0, #121	; 0x79
    8320:	00000079 	andeq	r0, r0, r9, ror r0
    8324:	00294c2b 	eoreq	r4, r9, fp, lsr #24
    8328:	00298010 	eoreq	r8, r9, r0, lsl r0
    832c:	0a7f1810 	beq	1fce374 <__RAM_SIZE+0x1ece374>
    8330:	a3010000 	movwge	r0, #4096	; 0x1000
    8334:	03911512 	orrseq	r1, r1, #75497472	; 0x4800000
    8338:	79660000 	stmdbvc	r6!, {}^	; <UNPREDICTABLE>
    833c:	79640000 	stmdbvc	r4!, {}^	; <UNPREDICTABLE>
    8340:	00000000 	andeq	r0, r0, r0
    8344:	03012100 	movweq	r2, #4352	; 0x1100
    8348:	01000020 	tsteq	r0, r0, lsr #32
    834c:	011011e0 	tsteq	r0, r0, ror #3
    8350:	00000119 	andeq	r0, r0, r9, lsl r1
	...
    835c:	00007979 	andeq	r7, r0, r9, ror r9
    8360:	00208501 	eoreq	r8, r0, r1, lsl #10
    8364:	1df91b00 			; <UNDEFINED> instruction: 0x1df91b00
    8368:	e0010000 	and	r0, r1, r0
    836c:	03a72e11 			; <UNDEFINED> instruction: 0x03a72e11
    8370:	79a70000 	stmibvc	r7!, {}	; <UNPREDICTABLE>
    8374:	79990000 	ldmibvc	r9, {}	; <UNPREDICTABLE>
    8378:	66180000 	ldrvs	r0, [r8], -r0
    837c:	01000023 	tsteq	r0, r3, lsr #32
    8380:	661111e2 	ldrvs	r1, [r1], -r2, ror #3
    8384:	11000006 	tstne	r0, r6
    8388:	0300007a 	movweq	r0, #122	; 0x7a
    838c:	1800007a 	stmdane	r0, {r1, r3, r4, r5, r6}
    8390:	00001abd 			; <UNDEFINED> instruction: 0x00001abd
    8394:	1411e301 	ldrne	lr, [r1], #-769	; 0xfffffcff
    8398:	00000119 	andeq	r0, r0, r9, lsl r1
    839c:	00007a71 	andeq	r7, r0, r1, ror sl
    83a0:	00007a6d 	andeq	r7, r0, sp, ror #20
    83a4:	0000001c 	andeq	r0, r0, ip, lsl r0
    83a8:	00000000 	andeq	r0, r0, r0
    83ac:	00202400 	eoreq	r2, r0, r0, lsl #8
    83b0:	0a7f1800 	beq	1fce3b8 <__RAM_SIZE+0x1ece3b8>
    83b4:	0d010000 	stceq	0, cr0, [r1, #-0]
    83b8:	03911112 	orrseq	r1, r1, #-2147483644	; 0x80000004
    83bc:	7a920000 	bvc	fe4883c4 <__StackTop+0xc63883c4>
    83c0:	7a900000 	bvc	fe4083c8 <__StackTop+0xc63083c8>
    83c4:	1d000000 	stcne	0, cr0, [r0, #-0]
    83c8:	00000000 	andeq	r0, r0, r0
    83cc:	00002628 	andeq	r2, r0, r8, lsr #12
    83d0:	0000001e 	andeq	r0, r0, lr, lsl r0
    83d4:	002e1600 	eoreq	r1, lr, r0, lsl #12
    83d8:	00204100 	eoreq	r4, r0, r0, lsl #2
    83dc:	50011f00 	andpl	r1, r1, r0, lsl #30
    83e0:	00007402 	andeq	r7, r0, r2, lsl #8
    83e4:	0000001d 	andeq	r0, r0, sp, lsl r0
    83e8:	0024cf00 	eoreq	ip, r4, r0, lsl #30
    83ec:	00001e00 	andeq	r1, r0, r0, lsl #28
    83f0:	37d40000 	ldrbcc	r0, [r4, r0]
    83f4:	205e0000 	subscs	r0, lr, r0
    83f8:	011f0000 	tsteq	pc, r0
    83fc:	00750250 	rsbseq	r0, r5, r0, asr r2
    8400:	00001d00 	andeq	r1, r0, r0, lsl #26
    8404:	37f20000 	ldrbcc	r0, [r2, r0]!
    8408:	001e0000 	andseq	r0, lr, r0
    840c:	d4000000 	strle	r0, [r0], #-0
    8410:	7b000037 	blvc	84f4 <__HEAP_SIZE+0x74f4>
    8414:	1f000020 	svcne	0x00000020
    8418:	74025001 	strvc	r5, [r2], #-1
    841c:	001d0018 	andseq	r0, sp, r8, lsl r0
    8420:	00000000 	andeq	r0, r0, r0
    8424:	00000038 	andeq	r0, r0, r8, lsr r0
    8428:	17480121 	strbne	r0, [r8, -r1, lsr #2]
    842c:	c2010000 	andgt	r0, r1, #0
    8430:	19010c11 	stmdbne	r1, {r0, r4, sl, fp}
    8434:	00000001 	andeq	r0, r0, r1
    8438:	00000000 	andeq	r0, r0, r0
    843c:	a5000000 	strge	r0, [r0, #-0]
    8440:	0100007a 	tsteq	r0, sl, ror r0
    8444:	000020f4 	strdeq	r2, [r0], -r4
    8448:	0022611b 	eoreq	r6, r2, fp, lsl r1
    844c:	11c20100 	bicne	r0, r2, r0, lsl #2
    8450:	00014a2a 	andeq	r4, r1, sl, lsr #20
    8454:	007acb00 	rsbseq	ip, sl, r0, lsl #22
    8458:	007ac500 	rsbseq	ip, sl, r0, lsl #10
    845c:	1c011800 	stcne	8, cr1, [r1], {-0}
    8460:	c4010000 	strgt	r0, [r1], #-0
    8464:	01191011 	tsteq	r9, r1, lsl r0
    8468:	7af90000 	bvc	ffe48470 <__StackTop+0xc7d48470>
    846c:	7af70000 	bvc	ffdc8474 <__StackTop+0xc7cc8474>
    8470:	001d0000 	andseq	r0, sp, r0
    8474:	28000000 	stmdacs	r0, {}	; <UNPREDICTABLE>
    8478:	1d000026 	stcne	0, cr0, [r0, #-152]	; 0xffffff68
    847c:	00000000 	andeq	r0, r0, r0
    8480:	000037f2 	strdeq	r3, [r0], -r2
    8484:	0000001d 	andeq	r0, r0, sp, lsl r0
    8488:	00380000 	eorseq	r0, r8, r0
    848c:	00001d00 	andeq	r1, r0, r0, lsl #26
    8490:	24cf0000 	strbcs	r0, [pc], #0	; 8498 <__HEAP_SIZE+0x7498>
    8494:	22000000 	andcs	r0, r0, #0
    8498:	00199401 	andseq	r9, r9, r1, lsl #8
    849c:	11980100 	orrsne	r0, r8, r0, lsl #2
    84a0:	2884010a 	stmcs	r4, {r1, r3, r8}
    84a4:	28c01000 	stmiacs	r0, {ip}^
    84a8:	7b0c1000 	blvc	30c4b0 <__RAM_SIZE+0x20c4b0>
    84ac:	4d010000 	stcmi	0, cr0, [r1, #-0]
    84b0:	1b000021 	blne	853c <__HEAP_SIZE+0x753c>
    84b4:	00001d47 	andeq	r1, r0, r7, asr #26
    84b8:	24119801 	ldrcs	r9, [r1], #-2049	; 0xfffff7ff
    84bc:	0000014a 	andeq	r0, r0, sl, asr #2
    84c0:	00007b34 	andeq	r7, r0, r4, lsr fp
    84c4:	00007b2c 	andeq	r7, r0, ip, lsr #22
    84c8:	00173618 	andseq	r3, r7, r8, lsl r6
    84cc:	119a0100 	orrsne	r0, sl, r0, lsl #2
    84d0:	00014a14 	andeq	r4, r1, r4, lsl sl
    84d4:	007b6c00 	rsbseq	r6, fp, r0, lsl #24
    84d8:	007b6800 	rsbseq	r6, fp, r0, lsl #16
    84dc:	28a41d00 	stmiacs	r4!, {r8, sl, fp, ip}
    84e0:	37f21000 	ldrbcc	r1, [r2, r0]!
    84e4:	b01d0000 	andslt	r0, sp, r0
    84e8:	00100028 	andseq	r0, r0, r8, lsr #32
    84ec:	00000038 	andeq	r0, r0, r8, lsr r0
    84f0:	152d0124 	strne	r0, [sp, #-292]!	; 0xfffffedc
    84f4:	7f010000 	svcvc	0x00010000
    84f8:	a7011211 	smladge	r1, r1, r2, r1
    84fc:	00000003 	andeq	r0, r0, r3
    8500:	00000000 	andeq	r0, r0, r0
    8504:	02000000 	andeq	r0, r0, #0
    8508:	8201007d 	andhi	r0, r1, #125	; 0x7d
    850c:	1b000021 	blne	8598 <__HEAP_SIZE+0x7598>
    8510:	000014b9 			; <UNDEFINED> instruction: 0x000014b9
    8514:	3c117f01 	ldccc	15, cr7, [r1], {1}
    8518:	00000119 	andeq	r0, r0, r9, lsl r1
    851c:	00007b8e 	andeq	r7, r0, lr, lsl #23
    8520:	00007b8a 	andeq	r7, r0, sl, lsl #23
    8524:	16012c00 	strne	r2, [r1], -r0, lsl #24
    8528:	01000023 	tsteq	r0, r3, lsr #32
    852c:	01161171 	tsteq	r6, r1, ror r1
    8530:	000003a7 	andeq	r0, r0, r7, lsr #7
	...
    853c:	01007d02 	tsteq	r0, r2, lsl #26
    8540:	1eb20124 	frdnesp	f0, f2, f4
    8544:	eb010000 	bl	4854c <__HEAP_SIZE+0x4754c>
    8548:	19011010 	stmdbne	r1, {r4, ip}
    854c:	00000001 	andeq	r0, r0, r1
    8550:	00000000 	andeq	r0, r0, r0
    8554:	02000000 	andeq	r0, r0, #0
    8558:	1a01007d 	bne	48754 <__HEAP_SIZE+0x47754>
    855c:	1b000022 	blne	85ec <__HEAP_SIZE+0x75ec>
    8560:	00001df9 	strdeq	r1, [r0], -r9
    8564:	3410eb01 	ldrcc	lr, [r0], #-2817	; 0xfffff4ff
    8568:	000003a7 	andeq	r0, r0, r7, lsr #7
    856c:	00007bb3 			; <UNDEFINED> instruction: 0x00007bb3
    8570:	00007baf 	andeq	r7, r0, pc, lsr #23
    8574:	001bc819 	andseq	ip, fp, r9, lsl r8
    8578:	10ec0100 	rscne	r0, ip, r0, lsl #2
    857c:	0008fb36 	andeq	pc, r8, r6, lsr fp	; <UNPREDICTABLE>
    8580:	19510100 	ldmdbne	r1, {r8}^
    8584:	00001dbc 			; <UNDEFINED> instruction: 0x00001dbc
    8588:	3710ed01 	ldrcc	lr, [r0, -r1, lsl #26]
    858c:	000008ea 	andeq	r0, r0, sl, ror #17
    8590:	bd185201 	lfmlt	f5, 4, [r8, #-4]
    8594:	0100001a 	tsteq	r0, sl, lsl r0
    8598:	191410ef 	ldmdbne	r4, {r0, r1, r2, r3, r5, r6, r7, ip}
    859c:	d7000001 	strle	r0, [r0, -r1]
    85a0:	d100007b 	tstle	r0, fp, ror r0
    85a4:	1800007b 	stmdane	r0, {r0, r1, r3, r4, r5, r6}
    85a8:	00002366 	andeq	r2, r0, r6, ror #6
    85ac:	1110f001 	tstne	r0, r1	; <UNPREDICTABLE>
    85b0:	00000666 	andeq	r0, r0, r6, ror #12
    85b4:	00007c07 	andeq	r7, r0, r7, lsl #24
    85b8:	00007c03 	andeq	r7, r0, r3, lsl #24
    85bc:	bd012100 	stflts	f2, [r1, #-0]
    85c0:	01000019 	tsteq	r0, r9, lsl r0
    85c4:	011210a7 	tsteq	r2, r7, lsr #1
    85c8:	000003a7 	andeq	r0, r0, r7, lsr #7
	...
    85d4:	00007c25 	andeq	r7, r0, r5, lsr #24
    85d8:	00231101 	eoreq	r1, r3, r1, lsl #2
    85dc:	20e91b00 	rsccs	r1, r9, r0, lsl #22
    85e0:	a7010000 	strge	r0, [r1, -r0]
    85e4:	00b82f10 	adcseq	r2, r8, r0, lsl pc
    85e8:	7c490000 	marvc	acc0, r0, r9
    85ec:	7c450000 	marvc	acc0, r0, r5
    85f0:	e1180000 	tst	r8, r0
    85f4:	0100001b 	tsteq	r0, fp, lsl r0
    85f8:	2f1510a9 	svccs	0x001510a9
    85fc:	6b000001 	blvs	8608 <__HEAP_SIZE+0x7608>
    8600:	6700007c 	smlsdxvs	r0, ip, r0, r0
    8604:	1800007c 	stmdane	r0, {r2, r3, r4, r5, r6}
    8608:	00002366 	andeq	r2, r0, r6, ror #6
    860c:	1110aa01 	tstne	r0, r1, lsl #20
    8610:	00000666 	andeq	r0, r0, r6, ror #12
    8614:	00007ca0 	andeq	r7, r0, r0, lsr #25
    8618:	00007c8a 	andeq	r7, r0, sl, lsl #25
    861c:	0000001d 	andeq	r0, r0, sp, lsl r0
    8620:	00262800 	eoreq	r2, r6, r0, lsl #16
    8624:	00001e00 	andeq	r1, r0, r0, lsl #28
    8628:	23110000 	tstcs	r1, #0
    862c:	22a90000 	adccs	r0, r9, #0
    8630:	011f0000 	tsteq	pc, r0
    8634:	00740f50 	rsbseq	r0, r4, r0, asr pc
    8638:	00742433 	rsbseq	r2, r4, r3, lsr r4
    863c:	0324321c 			; <UNDEFINED> instruction: 0x0324321c
    8640:	380085c4 	stmdacc	r0, {r2, r6, r7, r8, sl, pc}
    8644:	51011f22 	tstpl	r1, r2, lsr #30
    8648:	00007602 	andeq	r7, r0, r2, lsl #12
    864c:	0000001d 	andeq	r0, r0, sp, lsl r0
    8650:	0024cf00 	eoreq	ip, r4, r0, lsl #30
    8654:	00001e00 	andeq	r1, r0, r0, lsl #28
    8658:	23110000 	tstcs	r1, #0
    865c:	22c60000 	sbccs	r0, r6, #0
    8660:	011f0000 	tsteq	pc, r0
    8664:	00760251 	rsbseq	r0, r6, r1, asr r2
    8668:	00001e00 	andeq	r1, r0, r0, lsl #28
    866c:	23110000 	tstcs	r1, #0
    8670:	22da0000 	sbcscs	r0, sl, #0
    8674:	011f0000 	tsteq	pc, r0
    8678:	00760251 	rsbseq	r0, r6, r1, asr r2
    867c:	00001e00 	andeq	r1, r0, r0, lsl #28
    8680:	23110000 	tstcs	r1, #0
    8684:	22f70000 	rscscs	r0, r7, #0
    8688:	011f0000 	tsteq	pc, r0
    868c:	18030550 	stmdane	r3, {r4, r6, r8, sl}
    8690:	1f38008b 	svcne	0x0038008b
    8694:	76025101 	strvc	r5, [r2], -r1, lsl #2
    8698:	00200000 	eoreq	r0, r0, r0
    869c:	11000000 	mrsne	r0, (UNDEF: 0)
    86a0:	1f000023 	svcne	0x00000023
    86a4:	03055001 	movweq	r5, #20481	; 0x5001
    86a8:	38008b34 	stmdacc	r0, {r2, r4, r5, r8, r9, fp, pc}
    86ac:	0251011f 	subseq	r0, r1, #-1073741817	; 0xc0000007
    86b0:	00000076 	andeq	r0, r0, r6, ror r0
    86b4:	001b3f2d 	andseq	r3, fp, sp, lsr #30
    86b8:	105e0100 	subsne	r0, lr, r0, lsl #2
    86bc:	06660114 			; <UNDEFINED> instruction: 0x06660114
	...
    86c8:	7d210000 	stcvc	0, cr0, [r1, #-0]
    86cc:	ec010000 	stc	0, cr0, [r1], {-0}
    86d0:	1b000023 	blne	8764 <__HEAP_SIZE+0x7764>
    86d4:	00000ab3 			; <UNDEFINED> instruction: 0x00000ab3
    86d8:	3f105e01 	svccc	0x00105e01
    86dc:	000006d2 	ldrdeq	r0, [r0], -r2
    86e0:	00007d49 	andeq	r7, r0, r9, asr #26
    86e4:	00007d41 	andeq	r7, r0, r1, asr #26
    86e8:	0020e91b 	eoreq	lr, r0, fp, lsl r9
    86ec:	105f0100 	subsne	r0, pc, r0, lsl #2
    86f0:	0000b841 	andeq	fp, r0, r1, asr #16
    86f4:	007d8900 	rsbseq	r8, sp, r0, lsl #18
    86f8:	007d8100 	rsbseq	r8, sp, r0, lsl #2
    86fc:	1abc1800 	bne	fef0e704 <__StackTop+0xc6e0e704>
    8700:	61010000 	mrsvs	r0, (UNDEF: 1)
    8704:	06661110 			; <UNDEFINED> instruction: 0x06661110
    8708:	7dc60000 	stclvc	0, cr0, [r6]
    870c:	7dc00000 	stclvc	0, cr0, [r0]
    8710:	66180000 	ldrvs	r0, [r8], -r0
    8714:	01000023 	tsteq	r0, r3, lsr #32
    8718:	66111062 	ldrvs	r1, [r1], -r2, rrx
    871c:	f9000006 			; <UNDEFINED> instruction: 0xf9000006
    8720:	f100007d 			; <UNDEFINED> instruction: 0xf100007d
    8724:	2e00007d 	mcrcs	0, 0, r0, cr0, cr13, {3}
    8728:	63010078 	movwvs	r0, #4216	; 0x1078
    872c:	012f1510 			; <UNDEFINED> instruction: 0x012f1510
    8730:	7e350000 	cdpvc	0, 3, cr0, cr5, cr0, {0}
    8734:	7e2f0000 	cdpvc	0, 2, cr0, cr15, cr0, {0}
    8738:	ff180000 			; <UNDEFINED> instruction: 0xff180000
    873c:	0100001e 	tsteq	r0, lr, lsl r0
    8740:	ac0e1064 	stcge	0, cr1, [lr], {100}	; 0x64
    8744:	63000000 	movwvs	r0, #0
    8748:	5f00007e 	svcpl	0x0000007e
    874c:	1800007e 	stmdane	r0, {r1, r2, r3, r4, r5, r6}
    8750:	00001ea7 	andeq	r1, r0, r7, lsr #29
    8754:	14106501 	ldrne	r6, [r0], #-1281	; 0xfffffaff
    8758:	00000119 	andeq	r0, r0, r9, lsl r1
    875c:	00007e85 	andeq	r7, r0, r5, lsl #29
    8760:	00007e81 	andeq	r7, r0, r1, lsl #29
    8764:	001dca18 	andseq	ip, sp, r8, lsl sl
    8768:	10660100 	rsbne	r0, r6, r0, lsl #2
    876c:	0023ec1c 	eoreq	lr, r3, ip, lsl ip
    8770:	007ea900 	rsbseq	sl, lr, r0, lsl #18
    8774:	007ea500 	rsbseq	sl, lr, r0, lsl #10
    8778:	0a741800 	beq	1d0e780 <__RAM_SIZE+0x1c0e780>
    877c:	67010000 	strvs	r0, [r1, -r0]
    8780:	038b1610 	orreq	r1, fp, #16, 12	; 0x1000000
    8784:	7ecb0000 	cdpvc	0, 12, cr0, cr11, cr0, {0}
    8788:	7ec90000 	cdpvc	0, 12, cr0, cr9, cr0, {0}
    878c:	07000000 	streq	r0, [r0, -r0]
    8790:	00037a04 	andeq	r7, r3, r4, lsl #20
    8794:	b5012400 	strlt	r2, [r1, #-1024]	; 0xfffffc00
    8798:	01000020 	tsteq	r0, r0, lsr #32
    879c:	0108104c 	tsteq	r8, ip, asr #32
    87a0:	000000a6 	andeq	r0, r0, r6, lsr #1
	...
    87ac:	01007d02 	tsteq	r0, r2, lsl #26
    87b0:	0000243c 	andeq	r2, r0, ip, lsr r4
    87b4:	001e091b 	andseq	r0, lr, fp, lsl r9
    87b8:	104c0100 	subne	r0, ip, r0, lsl #2
    87bc:	0003a724 	andeq	sl, r3, r4, lsr #14
    87c0:	007ee200 	rsbseq	lr, lr, r0, lsl #4
    87c4:	007ede00 	rsbseq	sp, lr, r0, lsl #28
    87c8:	23661800 	cmncs	r6, #0, 16
    87cc:	4e010000 	cdpmi	0, 0, cr0, cr1, cr0, {0}
    87d0:	06660d10 			; <UNDEFINED> instruction: 0x06660d10
    87d4:	7f020000 	svcvc	0x00020000
    87d8:	7f000000 	svcvc	0x00000000
    87dc:	2c000000 	stccs	0, cr0, [r0], {-0}
    87e0:	000da901 	andeq	sl, sp, r1, lsl #18
    87e4:	10400100 	subne	r0, r0, r0, lsl #2
    87e8:	012f010d 			; <UNDEFINED> instruction: 0x012f010d
    87ec:	28780000 	ldmdacs	r8!, {}^	; <UNPREDICTABLE>
    87f0:	28841000 	stmcs	r4, {ip}
    87f4:	7d021000 	stcvc	0, cr1, [r2, #-0]
    87f8:	01240100 			; <UNDEFINED> instruction: 0x01240100
    87fc:	000018a1 	andeq	r1, r0, r1, lsr #17
    8800:	0c101d01 	ldceq	13, cr1, [r0], {1}
    8804:	00014a01 	andeq	r4, r1, r1, lsl #20
	...
    8810:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    8814:	00249a01 	eoreq	r9, r4, r1, lsl #20
    8818:	1abd1800 	bne	fef4e820 <__StackTop+0xc6e4e820>
    881c:	1f010000 	svcne	0x00010000
    8820:	014a1010 	cmpeq	sl, r0, lsl r0
    8824:	7f170000 	svcvc	0x00170000
    8828:	7f150000 	svcvc	0x00150000
    882c:	ca250000 	bgt	948834 <__RAM_SIZE+0x848834>
    8830:	0100000c 	tsteq	r0, ip
    8834:	2f111020 	svccs	0x00111020
    8838:	00000001 	andeq	r0, r0, r1
    883c:	35012400 	strcc	r2, [r1, #-1024]	; 0xfffffc00
    8840:	0100001d 	tsteq	r0, sp, lsl r0
    8844:	010c100a 	tsteq	ip, sl
    8848:	0000014a 	andeq	r0, r0, sl, asr #2
    884c:	1000286c 	andne	r2, r0, ip, ror #16
    8850:	10002878 	andne	r2, r0, r8, ror r8
    8854:	01007d02 	tsteq	r0, r2, lsl #26
    8858:	000024cf 	andeq	r2, r0, pc, asr #9
    885c:	0020c318 	eoreq	ip, r0, r8, lsl r3
    8860:	100c0100 	andne	r0, ip, r0, lsl #2
    8864:	00014a10 	andeq	r4, r1, r0, lsl sl
    8868:	007f2c00 	rsbseq	r2, pc, r0, lsl #24
    886c:	007f2a00 	rsbseq	r2, pc, r0, lsl #20
    8870:	01210000 			; <UNDEFINED> instruction: 0x01210000
    8874:	0000121b 	andeq	r1, r0, fp, lsl r2
    8878:	0c0f7401 	cfstrseq	mvf7, [pc], {1}
    887c:	00011901 	andeq	r1, r1, r1, lsl #18
    8880:	002a2000 	eoreq	r2, sl, r0
    8884:	002b5010 	eoreq	r5, fp, r0, lsl r0
    8888:	007f3f10 	rsbseq	r3, pc, r0, lsl pc	; <UNPREDICTABLE>
    888c:	25df0100 	ldrbcs	r0, [pc, #256]	; 8994 <__HEAP_SIZE+0x7994>
    8890:	66180000 	ldrvs	r0, [r8], -r0
    8894:	01000023 	tsteq	r0, r3, lsr #32
    8898:	660d0f76 			; <UNDEFINED> instruction: 0x660d0f76
    889c:	6b000006 	blvs	88bc <__HEAP_SIZE+0x78bc>
    88a0:	5f00007f 	svcpl	0x0000007f
    88a4:	1800007f 	stmdane	r0, {r0, r1, r2, r3, r4, r5, r6}
    88a8:	000021f7 	strdeq	r2, [r0], -r7
    88ac:	100f7701 	andne	r7, pc, r1, lsl #14
    88b0:	00000119 	andeq	r0, r0, r9, lsl r1
    88b4:	00007fc2 	andeq	r7, r0, r2, asr #31
    88b8:	00007fb8 			; <UNDEFINED> instruction: 0x00007fb8
    88bc:	0005c823 	andeq	ip, r5, r3, lsr #16
    88c0:	0025cc00 	eoreq	ip, r5, r0, lsl #24
    88c4:	14b92500 	ldrtne	r2, [r9], #1280	; 0x500
    88c8:	86010000 	strhi	r0, [r1], -r0
    88cc:	0119180f 	tsteq	r9, pc, lsl #16
    88d0:	23000000 	movwcs	r0, #0
    88d4:	000005f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    88d8:	0000254f 	andeq	r2, r0, pc, asr #10
    88dc:	000ab318 	andeq	fp, sl, r8, lsl r3
    88e0:	0f9c0100 	svceq	0x009c0100
    88e4:	0006dd19 	andeq	sp, r6, r9, lsl sp
    88e8:	00800800 	addeq	r0, r0, r0, lsl #16
    88ec:	00800400 	addeq	r0, r0, r0, lsl #8
    88f0:	08230000 	stmdaeq	r3!, {}	; <UNPREDICTABLE>
    88f4:	6e000006 	cdpvs	0, 0, cr0, cr0, cr6, {0}
    88f8:	18000025 	stmdane	r0, {r0, r2, r5}
    88fc:	00000ab3 			; <UNDEFINED> instruction: 0x00000ab3
    8900:	190f9e01 	stmdbne	pc, {r0, r9, sl, fp, ip, pc}	; <UNPREDICTABLE>
    8904:	000006dd 	ldrdeq	r0, [r0], -sp
    8908:	0000802a 	andeq	r8, r0, sl, lsr #32
    890c:	00008026 	andeq	r8, r0, r6, lsr #32
    8910:	2aa61c00 	bcs	fe98f918 <__StackTop+0xc688f918>
    8914:	2ad61000 	bcs	ff58c91c <__StackTop+0xc748c91c>
    8918:	25911000 	ldrcs	r1, [r1]
    891c:	7f180000 	svcvc	0x00180000
    8920:	0100000a 	tsteq	r0, sl
    8924:	91190f9f 			; <UNDEFINED> instruction: 0x91190f9f
    8928:	4a000003 	bmi	893c <__HEAP_SIZE+0x793c>
    892c:	48000080 	stmdami	r0, {r7}
    8930:	00000080 	andeq	r0, r0, r0, lsl #1
    8934:	00062023 	andeq	r2, r6, r3, lsr #32
    8938:	0025b900 	eoreq	fp, r5, r0, lsl #18
    893c:	164f1800 	strbne	r1, [pc], -r0, lsl #16
    8940:	cc010000 	stcgt	0, cr0, [r1], {-0}
    8944:	014a240f 	cmpeq	sl, pc, lsl #8
    8948:	80650000 	rsbhi	r0, r5, r0
    894c:	805d0000 	subshi	r0, sp, r0
    8950:	101d0000 	andsne	r0, sp, r0
    8954:	9e10002b 	cdpls	0, 1, cr0, cr0, cr11, {1}
    8958:	0000001e 	andeq	r0, r0, lr, lsl r0
    895c:	002af01d 	eoreq	pc, sl, sp, lsl r0	; <UNPREDICTABLE>
    8960:	00149110 	andseq	r9, r4, r0, lsl r1
    8964:	2b041d00 	blcs	10fd6c <__RAM_SIZE+0xfd6c>
    8968:	382a1000 	stmdacc	sl!, {ip}
    896c:	1d000000 	stcne	0, cr0, [r0, #-0]
    8970:	10002a26 	andne	r2, r0, r6, lsr #20
    8974:	000037f2 	strdeq	r3, [r0], -r2
    8978:	002b2a1d 	eoreq	r2, fp, sp, lsl sl
    897c:	00380010 	eorseq	r0, r8, r0, lsl r0
    8980:	68270000 	stmdavs	r7!, {}	; <UNPREDICTABLE>
    8984:	0100001a 	tsteq	r0, sl, lsl r0
    8988:	01170f36 	tsteq	r7, r6, lsr pc
    898c:	0000014a 	andeq	r0, r0, sl, asr #2
    8990:	10002420 	andne	r2, r0, r0, lsr #8
    8994:	10002460 	andne	r2, r0, r0, ror #8
    8998:	01007d02 	tsteq	r0, r2, lsl #26
    899c:	00002628 	andeq	r2, r0, r8, lsr #12
    89a0:	001abd18 	andseq	fp, sl, r8, lsl sp
    89a4:	0f380100 	svceq	0x00380100
    89a8:	00014a14 	andeq	r4, r1, r4, lsl sl
    89ac:	00809f00 	addeq	r9, r0, r0, lsl #30
    89b0:	00809b00 	addeq	r9, r0, r0, lsl #22
    89b4:	17ce1800 	strbne	r1, [lr, r0, lsl #16]
    89b8:	39010000 	stmdbcc	r1, {}	; <UNPREDICTABLE>
    89bc:	012f150f 			; <UNDEFINED> instruction: 0x012f150f
    89c0:	80c40000 	sbchi	r0, r4, r0
    89c4:	80be0000 	adcshi	r0, lr, r0
    89c8:	29000000 	stmdbcs	r0, {}	; <UNPREDICTABLE>
    89cc:	000dc001 	andeq	ip, sp, r1
    89d0:	0ee30100 	cdpeq	1, 14, cr0, cr3, cr0, {0}
    89d4:	285c0106 	ldmdacs	ip, {r1, r2, r8}^
    89d8:	286c1000 	stmdacs	ip!, {ip}^
    89dc:	7d021000 	stcvc	0, cr1, [r2, #-0]
    89e0:	01220100 			; <UNDEFINED> instruction: 0x01220100
    89e4:	000019f7 	strdeq	r1, [r0], -r7
    89e8:	060eb801 	streq	fp, [lr], -r1, lsl #16
    89ec:	00000001 	andeq	r0, r0, r1
    89f0:	00000000 	andeq	r0, r0, r0
    89f4:	0080ee00 	addeq	lr, r0, r0, lsl #28
    89f8:	26b10100 	ldrtcs	r0, [r1], r0, lsl #2
    89fc:	50230000 	eorpl	r0, r3, r0
    8a00:	9e000005 	cdpls	0, 0, cr0, cr0, cr5, {0}
    8a04:	18000026 	stmdane	r0, {r1, r2, r5}
    8a08:	000014b9 			; <UNDEFINED> instruction: 0x000014b9
    8a0c:	140ebe01 	strne	fp, [lr], #-3585	; 0xfffff1ff
    8a10:	00000119 	andeq	r0, r0, r9, lsl r1
    8a14:	00008112 	andeq	r8, r0, r2, lsl r1
    8a18:	0000810e 	andeq	r8, r0, lr, lsl #2
    8a1c:	0000001d 	andeq	r0, r0, sp, lsl r0
    8a20:	00386400 	eorseq	r6, r8, r0, lsl #8
    8a24:	00001d00 	andeq	r1, r0, r0, lsl #26
    8a28:	30470000 	subcc	r0, r7, r0
    8a2c:	001d0000 	andseq	r0, sp, r0
    8a30:	cb000000 	blgt	8a38 <__HEAP_SIZE+0x7a38>
    8a34:	1d000015 	stcne	0, cr0, [r0, #-84]	; 0xffffffac
    8a38:	00000000 	andeq	r0, r0, r0
    8a3c:	00003047 	andeq	r3, r0, r7, asr #32
    8a40:	00001d00 	andeq	r1, r0, r0, lsl #26
    8a44:	380e0000 	stmdacc	lr, {}	; <UNPREDICTABLE>
    8a48:	001d0000 	andseq	r0, sp, r0
    8a4c:	73000000 	movwvc	r0, #0
    8a50:	00000038 	andeq	r0, r0, r8, lsr r0
    8a54:	003a0122 	eorseq	r0, sl, r2, lsr #2
    8a58:	51010000 	mrspl	r0, (UNDEF: 1)
    8a5c:	5401060e 	strpl	r0, [r1], #-1550	; 0xfffff9f2
    8a60:	9c10002f 	ldcls	0, cr0, [r0], {47}	; 0x2f
    8a64:	3110002f 	tstcc	r0, pc, lsr #32
    8a68:	01000081 	smlabbeq	r0, r1, r0, r0
    8a6c:	00002707 	andeq	r2, r0, r7, lsl #14
    8a70:	001abd18 	andseq	fp, sl, r8, lsl sp
    8a74:	0e530100 	rdfeqs	f0, f3, f0
    8a78:	00011910 	andeq	r1, r1, r0, lsl r9
    8a7c:	00815700 	addeq	r5, r1, r0, lsl #14
    8a80:	00815100 	addeq	r5, r1, r0, lsl #2
    8a84:	2f5a1d00 	svccs	0x005a1d00
    8a88:	27071000 	strcs	r1, [r7, -r0]
    8a8c:	6c1d0000 	ldcvs	0, cr0, [sp], {-0}
    8a90:	8110002f 	tsthi	r0, pc, lsr #32
    8a94:	1d000038 	stcne	0, cr0, [r0, #-224]	; 0xffffff20
    8a98:	10002f72 	andne	r2, r0, r2, ror pc
    8a9c:	0000380e 	andeq	r3, r0, lr, lsl #16
    8aa0:	002f8a1d 	eoreq	r8, pc, sp, lsl sl	; <UNPREDICTABLE>
    8aa4:	00389010 	eorseq	r9, r8, r0, lsl r0
    8aa8:	a72d0000 	strge	r0, [sp, -r0]!
    8aac:	0100001b 	tsteq	r0, fp, lsl r0
    8ab0:	01130db7 			; <UNDEFINED> instruction: 0x01130db7
    8ab4:	00000119 	andeq	r0, r0, r9, lsl r1
    8ab8:	10002ee8 	andne	r2, r0, r8, ror #29
    8abc:	10002f54 	andne	r2, r0, r4, asr pc
    8ac0:	00008180 	andeq	r8, r0, r0, lsl #3
    8ac4:	00280701 	eoreq	r0, r8, r1, lsl #14
    8ac8:	1abd1800 	bne	fef4ead0 <__StackTop+0xc6e4ead0>
    8acc:	b9010000 	stmdblt	r1, {}	; <UNPREDICTABLE>
    8ad0:	0119100d 	tsteq	r9, sp
    8ad4:	81ca0000 	bichi	r0, sl, r0
    8ad8:	81c40000 	bichi	r0, r4, r0
    8adc:	b9180000 	ldmdblt	r8, {}	; <UNPREDICTABLE>
    8ae0:	01000014 	tsteq	r0, r4, lsl r0
    8ae4:	19100dba 	ldmdbne	r0, {r1, r3, r4, r5, r7, r8, sl, fp}
    8ae8:	f8000001 			; <UNDEFINED> instruction: 0xf8000001
    8aec:	f6000081 			; <UNDEFINED> instruction: 0xf6000081
    8af0:	16000081 	strne	r0, [r0], -r1, lsl #1
    8af4:	000022af 	andeq	r2, r0, pc, lsr #5
    8af8:	0a0dbb01 	beq	377704 <__RAM_SIZE+0x277704>
    8afc:	000005f9 	strdeq	r0, [r0], -r9
    8b00:	186c9102 	stmdane	ip!, {r1, r8, ip, pc}^
    8b04:	00001fd1 	ldrdeq	r1, [r0], -r1	; <UNPREDICTABLE>
    8b08:	140dbc01 	strne	fp, [sp], #-3073	; 0xfffff3ff
    8b0c:	000000ea 	andeq	r0, r0, sl, ror #1
    8b10:	0000820d 	andeq	r8, r0, sp, lsl #4
    8b14:	0000820b 	andeq	r8, r0, fp, lsl #4
    8b18:	0018cf18 	andseq	ip, r8, r8, lsl pc
    8b1c:	0dbd0100 	ldfeqs	f0, [sp]
    8b20:	00011910 	andeq	r1, r1, r0, lsl r9
    8b24:	00822500 	addeq	r2, r2, r0, lsl #10
    8b28:	00822100 	addeq	r2, r2, r0, lsl #2
    8b2c:	07982800 	ldreq	r2, [r8, r0, lsl #16]
    8b30:	9e160000 	cdpls	0, 1, cr0, cr6, cr0, {0}
    8b34:	0100001c 	tsteq	r0, ip, lsl r0
    8b38:	f01c0e04 			; <UNDEFINED> instruction: 0xf01c0e04
    8b3c:	02000008 	andeq	r0, r0, #8
    8b40:	ec166091 	ldc	0, cr6, [r6], {145}	; 0x91
    8b44:	01000014 	tsteq	r0, r4, lsl r0
    8b48:	bb1b0e05 	bllt	6cc364 <__RAM_SIZE+0x5cc364>
    8b4c:	02000005 	andeq	r0, r0, #5
    8b50:	d7166491 			; <UNDEFINED> instruction: 0xd7166491
    8b54:	0100001d 	tsteq	r0, sp, lsl r0
    8b58:	29240e06 	stmdbcs	r4!, {r1, r2, r9, sl, fp}
    8b5c:	02000000 	andeq	r0, r0, #0
    8b60:	221e6891 	andscs	r6, lr, #9502720	; 0x910000
    8b64:	1710002f 	ldrne	r0, [r0, -pc, lsr #32]
    8b68:	df000009 	svcle	0x00000009
    8b6c:	1f000027 	svcne	0x00000027
    8b70:	91025001 	tstls	r2, r1
    8b74:	51011f60 	tstpl	r1, r0, ror #30
    8b78:	1f649102 	svcne	0x00649102
    8b7c:	91025201 	tstls	r2, r1, lsl #4
    8b80:	38200068 	stmdacc	r0!, {r3, r5, r6}
    8b84:	7e10002f 	cdpvc	0, 1, cr0, cr0, cr15, {1}
    8b88:	1f000035 	svcne	0x00000035
    8b8c:	03055001 	movweq	r5, #20481	; 0x5001
    8b90:	10002b71 	andne	r2, r0, r1, ror fp
    8b94:	0251011f 	subseq	r0, r1, #-1073741817	; 0xc0000007
    8b98:	011f6c91 			; <UNDEFINED> instruction: 0x011f6c91
    8b9c:	00750253 	rsbseq	r0, r5, r3, asr r2
    8ba0:	007d021f 	rsbseq	r0, sp, pc, lsl r2
    8ba4:	00007502 	andeq	r7, r0, r2, lsl #10
    8ba8:	01210000 			; <UNDEFINED> instruction: 0x01210000
    8bac:	00002013 	andeq	r2, r0, r3, lsl r0
    8bb0:	100d5601 	andne	r5, sp, r1, lsl #12
    8bb4:	00011901 	andeq	r1, r1, r1, lsl #18
	...
    8bc0:	00824400 	addeq	r4, r2, r0, lsl #8
    8bc4:	28fd0100 	ldmcs	sp!, {r8}^
    8bc8:	6f1b0000 	svcvs	0x001b0000
    8bcc:	01000017 	tsteq	r0, r7, lsl r0
    8bd0:	a7310d56 			; <UNDEFINED> instruction: 0xa7310d56
    8bd4:	68000003 	stmdavs	r0, {r0, r1}
    8bd8:	64000082 	strvs	r0, [r0], #-130	; 0xffffff7e
    8bdc:	18000082 	stmdane	r0, {r1, r7}
    8be0:	00000d03 	andeq	r0, r0, r3, lsl #26
    8be4:	140d5801 	strne	r5, [sp], #-2049	; 0xfffff7ff
    8be8:	00000119 	andeq	r0, r0, r9, lsl r1
    8bec:	0000828e 	andeq	r8, r0, lr, lsl #5
    8bf0:	00008286 	andeq	r8, r0, r6, lsl #5
    8bf4:	00236618 	eoreq	r6, r3, r8, lsl r6
    8bf8:	0d590100 	ldfeqe	f0, [r9, #-0]
    8bfc:	00067117 	andeq	r7, r6, r7, lsl r1
    8c00:	0082c900 	addeq	ip, r2, r0, lsl #18
    8c04:	0082c500 	addeq	ip, r2, r0, lsl #10
    8c08:	0cca1800 	stcleq	8, cr1, [sl], {0}
    8c0c:	5a010000 	bpl	48c14 <__HEAP_SIZE+0x47c14>
    8c10:	012f150d 			; <UNDEFINED> instruction: 0x012f150d
    8c14:	82eb0000 	rschi	r0, fp, #0
    8c18:	82e70000 	rschi	r0, r7, #0
    8c1c:	001c0000 	andseq	r0, ip, r0
    8c20:	00000000 	andeq	r0, r0, r0
    8c24:	9e000000 	cdpls	0, 0, cr0, cr0, cr0, {0}
    8c28:	18000028 	stmdane	r0, {r3, r5}
    8c2c:	00000a7f 	andeq	r0, r0, pc, ror sl
    8c30:	150d9301 	strne	r9, [sp, #-769]	; 0xfffffcff
    8c34:	00000391 	muleq	r0, r1, r3
    8c38:	0000830b 	andeq	r8, r0, fp, lsl #6
    8c3c:	00008309 	andeq	r8, r0, r9, lsl #6
    8c40:	00001d00 	andeq	r1, r0, r0, lsl #26
    8c44:	380e0000 	stmdacc	lr, {}	; <UNPREDICTABLE>
    8c48:	001e0000 	andseq	r0, lr, r0
    8c4c:	aa000000 	bge	8c54 <__HEAP_SIZE+0x7c54>
    8c50:	bb000029 	bllt	8cfc <__HEAP_SIZE+0x7cfc>
    8c54:	1f000028 	svcne	0x00000028
    8c58:	74025001 	strvc	r5, [r2], #-1
    8c5c:	001e0000 	andseq	r0, lr, r0
    8c60:	d4000000 	strle	r0, [r0], #-0
    8c64:	cf000037 	svcgt	0x00000037
    8c68:	1f000028 	svcne	0x00000028
    8c6c:	77025001 	strvc	r5, [r2, -r1]
    8c70:	001e0000 	andseq	r0, lr, r0
    8c74:	1c000000 	stcne	0, cr0, [r0], {-0}
    8c78:	e3000038 	movw	r0, #56	; 0x38
    8c7c:	1f000028 	svcne	0x00000028
    8c80:	75025001 	strvc	r5, [r2, #-1]
    8c84:	00200000 	eoreq	r0, r0, r0
    8c88:	9e000000 	cdpls	0, 0, cr0, cr0, cr0, {0}
    8c8c:	1f000038 	svcne	0x00000038
    8c90:	03055001 	movweq	r5, #20481	; 0x5001
    8c94:	38008af8 	stmdacc	r0, {r3, r4, r5, r6, r7, r9, fp, pc}
    8c98:	0251011f 	subseq	r0, r1, #-1073741817	; 0xc0000007
    8c9c:	00001874 	andeq	r1, r0, r4, ror r8
    8ca0:	23c70122 	biccs	r0, r7, #-2147483640	; 0x80000008
    8ca4:	19010000 	stmdbne	r1, {}	; <UNPREDICTABLE>
    8ca8:	00010a0d 	andeq	r0, r1, sp, lsl #20
    8cac:	00000000 	andeq	r0, r0, r0
    8cb0:	1e000000 	cdpne	0, 0, cr0, cr0, cr0, {0}
    8cb4:	01000083 	smlabbeq	r0, r3, r0, r0
    8cb8:	000029aa 	andeq	r2, r0, sl, lsr #19
    8cbc:	00176f1b 	andseq	r6, r7, fp, lsl pc
    8cc0:	0d190100 	ldfeqs	f0, [r9, #-0]
    8cc4:	0003a724 	andeq	sl, r3, r4, lsr #14
    8cc8:	00834600 	addeq	r4, r3, r0, lsl #12
    8ccc:	00833e00 	addeq	r3, r3, r0, lsl #28
    8cd0:	23661800 	cmncs	r6, #0, 16
    8cd4:	1b010000 	blne	48cdc <__HEAP_SIZE+0x47cdc>
    8cd8:	0671170d 	ldrbteq	r1, [r1], -sp, lsl #14
    8cdc:	83850000 	orrhi	r0, r5, #0
    8ce0:	837d0000 	cmnhi	sp, #0
    8ce4:	001c0000 	andseq	r0, ip, r0
    8ce8:	00000000 	andeq	r0, r0, r0
    8cec:	66000000 	strvs	r0, [r0], -r0
    8cf0:	18000029 	stmdane	r0, {r0, r3, r5}
    8cf4:	00000a7f 	andeq	r0, r0, pc, ror sl
    8cf8:	150d3a01 	strne	r3, [sp, #-2561]	; 0xfffff5ff
    8cfc:	00000391 	muleq	r0, r1, r3
    8d00:	000083be 			; <UNDEFINED> instruction: 0x000083be
    8d04:	000083bc 			; <UNDEFINED> instruction: 0x000083bc
    8d08:	00001d00 	andeq	r1, r0, r0, lsl #26
    8d0c:	37f20000 	ldrbcc	r0, [r2, r0]!
    8d10:	001e0000 	andseq	r0, lr, r0
    8d14:	aa000000 	bge	8d1c <__HEAP_SIZE+0x7d1c>
    8d18:	83000029 	movwhi	r0, #41	; 0x29
    8d1c:	1f000029 	svcne	0x00000029
    8d20:	74025001 	strvc	r5, [r2], #-1
    8d24:	001d0000 	andseq	r0, sp, r0
    8d28:	00000000 	andeq	r0, r0, r0
    8d2c:	1e000038 	mcrne	0, 0, r0, cr0, cr8, {1}
    8d30:	00000000 	andeq	r0, r0, r0
    8d34:	000037d4 	ldrdeq	r3, [r0], -r4
    8d38:	000029a0 	andeq	r2, r0, r0, lsr #19
    8d3c:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    8d40:	1d000075 	stcne	0, cr0, [r0, #-468]	; 0xfffffe2c
    8d44:	00000000 	andeq	r0, r0, r0
    8d48:	0000382a 	andeq	r3, r0, sl, lsr #16
    8d4c:	1f472700 	svcne	0x00472700
    8d50:	d3010000 	movwle	r0, #4096	; 0x1000
    8d54:	1901170c 	stmdbne	r1, {r2, r3, r8, r9, sl, ip}
    8d58:	00000001 	andeq	r0, r0, r1
    8d5c:	00000000 	andeq	r0, r0, r0
    8d60:	02000000 	andeq	r0, r0, #0
    8d64:	2501007d 	strcs	r0, [r1, #-125]	; 0xffffff83
    8d68:	1b00002a 	blne	8e18 <__HEAP_SIZE+0x7e18>
    8d6c:	00001df9 	strdeq	r1, [r0], -r9
    8d70:	420cd301 	andmi	sp, ip, #67108864	; 0x4000000
    8d74:	000003b3 			; <UNDEFINED> instruction: 0x000003b3
    8d78:	000083e5 	andeq	r8, r0, r5, ror #7
    8d7c:	000083d1 	ldrdeq	r8, [r0], -r1
    8d80:	001abd18 	andseq	fp, sl, r8, lsl sp
    8d84:	0cd50100 	ldfeqe	f0, [r5], {0}
    8d88:	00011914 	andeq	r1, r1, r4, lsl r9
    8d8c:	00847000 	addeq	r7, r4, r0
    8d90:	00846a00 	addeq	r6, r4, r0, lsl #20
    8d94:	23661800 	cmncs	r6, #0, 16
    8d98:	d6010000 	strle	r0, [r1], -r0
    8d9c:	2a2b1d0c 	bcs	ad01d4 <__RAM_SIZE+0x9d01d4>
    8da0:	84b00000 	ldrthi	r0, [r0], #0
    8da4:	849c0000 	ldrhi	r0, [ip], #0
    8da8:	002b0000 	eoreq	r0, fp, r0
    8dac:	00000000 	andeq	r0, r0, r0
    8db0:	2e000000 	cdpcs	0, 0, cr0, cr0, cr0, {0}
    8db4:	ea010078 	b	48f9c <__HEAP_SIZE+0x47f9c>
    8db8:	0119240c 	tsteq	r9, ip, lsl #8
    8dbc:	85390000 	ldrhi	r0, [r9, #-0]!
    8dc0:	85350000 	ldrhi	r0, [r5, #-0]!
    8dc4:	00000000 	andeq	r0, r0, r0
    8dc8:	064d0407 	strbeq	r0, [sp], -r7, lsl #8
    8dcc:	25030000 	strcs	r0, [r3, #-0]
    8dd0:	2200002a 	andcs	r0, r0, #42	; 0x2a
    8dd4:	0021ea01 	eoreq	lr, r1, r1, lsl #20
    8dd8:	0c310100 	ldfeqs	f0, [r1], #-0
    8ddc:	0000010a 	andeq	r0, r0, sl, lsl #2
    8de0:	00000000 	andeq	r0, r0, r0
    8de4:	85570000 	ldrbhi	r0, [r7, #-0]
    8de8:	37010000 	strcc	r0, [r1, -r0]
    8dec:	1b00002b 	blne	8ea0 <__HEAP_SIZE+0x7ea0>
    8df0:	00001fb0 			; <UNDEFINED> instruction: 0x00001fb0
    8df4:	250c3101 	strcs	r3, [ip, #-257]	; 0xfffffeff
    8df8:	000003a7 	andeq	r0, r0, r7, lsr #7
    8dfc:	0000857d 	andeq	r8, r0, sp, ror r5
    8e00:	00008577 	andeq	r8, r0, r7, ror r5
    8e04:	00236618 	eoreq	r6, r3, r8, lsl r6
    8e08:	0c330100 	ldfeqs	f0, [r3], #-0
    8e0c:	00066611 	andeq	r6, r6, r1, lsl r6
    8e10:	0085aa00 	addeq	sl, r5, r0, lsl #20
    8e14:	0085a600 	addeq	sl, r5, r0, lsl #12
    8e18:	06a82300 	strteq	r2, [r8], r0, lsl #6
    8e1c:	2a930000 	bcs	fe4c8e24 <__StackTop+0xc63c8e24>
    8e20:	782e0000 	stmdavc	lr!, {}	; <UNPREDICTABLE>
    8e24:	0c580100 	ldfeqe	f0, [r8], {-0}
    8e28:	0001191c 	andeq	r1, r1, ip, lsl r9
    8e2c:	0085ce00 	addeq	ip, r5, r0, lsl #28
    8e30:	0085c800 	addeq	ip, r5, r0, lsl #16
    8e34:	c0230000 	eorgt	r0, r3, r0
    8e38:	df000006 	svcle	0x00000006
    8e3c:	1800002a 	stmdane	r0, {r1, r3, r5}
    8e40:	00001e2e 	andeq	r1, r0, lr, lsr #28
    8e44:	190c9201 	stmdbne	ip, {r0, r9, ip, pc}
    8e48:	0000012f 	andeq	r0, r0, pc, lsr #2
    8e4c:	000085fe 	strdeq	r8, [r0], -lr
    8e50:	000085f8 	strdeq	r8, [r0], -r8	; <UNPREDICTABLE>
    8e54:	0000001d 	andeq	r0, r0, sp, lsl r0
    8e58:	0037f200 	eorseq	pc, r7, r0, lsl #4
    8e5c:	00001d00 	andeq	r1, r0, r0, lsl #26
    8e60:	14910000 	ldrne	r0, [r1], #0
    8e64:	001d0000 	andseq	r0, sp, r0
    8e68:	00000000 	andeq	r0, r0, r0
    8e6c:	1d000038 	stcne	0, cr0, [r0, #-224]	; 0xffffff20
    8e70:	00000000 	andeq	r0, r0, r0
    8e74:	0000382a 	andeq	r3, r0, sl, lsr #16
    8e78:	0000001d 	andeq	r0, r0, sp, lsl r0
    8e7c:	001c6300 	andseq	r6, ip, r0, lsl #6
    8e80:	001d0000 	andseq	r0, sp, r0
    8e84:	f2000000 	vhadd.s8	d0, d0, d0
    8e88:	1e000037 	mcrne	0, 0, r0, cr0, cr7, {1}
    8e8c:	00000000 	andeq	r0, r0, r0
    8e90:	000037d4 	ldrdeq	r3, [r0], -r4
    8e94:	00002afc 	strdeq	r2, [r0], -ip
    8e98:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    8e9c:	1e000075 	mcrne	0, 0, r0, cr0, cr5, {3}
    8ea0:	00000000 	andeq	r0, r0, r0
    8ea4:	000037d4 	ldrdeq	r3, [r0], -r4
    8ea8:	00002b10 	andeq	r2, r0, r0, lsl fp
    8eac:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    8eb0:	1e001874 	mcrne	8, 0, r1, cr0, cr4, {3}
    8eb4:	00000000 	andeq	r0, r0, r0
    8eb8:	0000389e 	muleq	r0, lr, r8
    8ebc:	00002b2d 	andeq	r2, r0, sp, lsr #22
    8ec0:	0550011f 	ldrbeq	r0, [r0, #-287]	; 0xfffffee1
    8ec4:	008b1803 	addeq	r1, fp, r3, lsl #16
    8ec8:	51011f38 	tstpl	r1, r8, lsr pc
    8ecc:	00007502 	andeq	r7, r0, r2, lsl #10
    8ed0:	0000001d 	andeq	r0, r0, sp, lsl r0
    8ed4:	00380000 	eorseq	r0, r8, r0
    8ed8:	01220000 			; <UNDEFINED> instruction: 0x01220000
    8edc:	00001d83 	andeq	r1, r0, r3, lsl #27
    8ee0:	0a0acd01 	beq	2bc2ec <__RAM_SIZE+0x1bc2ec>
    8ee4:	00000001 	andeq	r0, r0, r1
    8ee8:	00000000 	andeq	r0, r0, r0
    8eec:	00862b00 	addeq	r2, r6, r0, lsl #22
    8ef0:	2c240100 	stfcss	f0, [r4], #-0
    8ef4:	f91b0000 			; <UNDEFINED> instruction: 0xf91b0000
    8ef8:	0100001d 	tsteq	r0, sp, lsl r0
    8efc:	a7290acd 	strge	r0, [r9, -sp, asr #21]!
    8f00:	51000003 	tstpl	r0, r3
    8f04:	4b000086 	blmi	9124 <__HEAP_SIZE+0x8124>
    8f08:	1b000086 	blne	9128 <__HEAP_SIZE+0x8128>
    8f0c:	00001cce 	andeq	r1, r0, lr, asr #25
    8f10:	280ace01 	stmdacs	sl, {r0, r9, sl, fp, lr, pc}
    8f14:	0000012f 	andeq	r0, r0, pc, lsr #2
    8f18:	00008684 	andeq	r8, r0, r4, lsl #13
    8f1c:	0000867a 	andeq	r8, r0, sl, ror r6
    8f20:	00236618 	eoreq	r6, r3, r8, lsl r6
    8f24:	0ad00100 	beq	ff40932c <__StackTop+0xc730932c>
    8f28:	00066611 	andeq	r6, r6, r1, lsl r6
    8f2c:	0086c900 	addeq	ip, r6, r0, lsl #18
    8f30:	0086c500 	addeq	ip, r6, r0, lsl #10
    8f34:	224b1800 	subcs	r1, fp, #0, 16
    8f38:	d1010000 	mrsle	r0, (UNDEF: 1)
    8f3c:	012f150a 			; <UNDEFINED> instruction: 0x012f150a
    8f40:	86ed0000 	strbthi	r0, [sp], r0
    8f44:	86e70000 	strbthi	r0, [r7], r0
    8f48:	b8180000 	ldmdalt	r8, {}	; <UNPREDICTABLE>
    8f4c:	01000021 	tsteq	r0, r1, lsr #32
    8f50:	2f2c0ad1 	svccs	0x002c0ad1
    8f54:	18000001 	stmdane	r0, {r0}
    8f58:	16000087 	strne	r0, [r0], -r7, lsl #1
    8f5c:	18000087 	stmdane	r0, {r0, r1, r2, r7}
    8f60:	00000d03 	andeq	r0, r0, r3, lsl #26
    8f64:	140ad201 	strne	sp, [sl], #-513	; 0xfffffdff
    8f68:	00000119 	andeq	r0, r0, r9, lsl r1
    8f6c:	00008733 	andeq	r8, r0, r3, lsr r7
    8f70:	0000872b 	andeq	r8, r0, fp, lsr #14
    8f74:	0000001c 	andeq	r0, r0, ip, lsl r0
    8f78:	00000000 	andeq	r0, r0, r0
    8f7c:	002bf400 	eoreq	pc, fp, r0, lsl #8
    8f80:	0a7f1800 	beq	1fcef88 <__RAM_SIZE+0x1ecef88>
    8f84:	6c010000 	stcvs	0, cr0, [r1], {-0}
    8f88:	0391150b 	orrseq	r1, r1, #46137344	; 0x2c00000
    8f8c:	876b0000 	strbhi	r0, [fp, -r0]!
    8f90:	87690000 	strbhi	r0, [r9, -r0]!
    8f94:	1d000000 	stcne	0, cr0, [r0, #-0]
    8f98:	00000000 	andeq	r0, r0, r0
    8f9c:	000037f2 	strdeq	r3, [r0], -r2
    8fa0:	0000001d 	andeq	r0, r0, sp, lsl r0
    8fa4:	00380000 	eorseq	r0, r8, r0
    8fa8:	00001e00 	andeq	r1, r0, r0, lsl #28
    8fac:	37d40000 	ldrbcc	r0, [r4, r0]
    8fb0:	2c1a0000 	ldccs	0, cr0, [sl], {-0}
    8fb4:	011f0000 	tsteq	pc, r0
    8fb8:	00750250 	rsbseq	r0, r5, r0, asr r2
    8fbc:	00001d00 	andeq	r1, r0, r0, lsl #26
    8fc0:	382a0000 	stmdacc	sl!, {}	; <UNPREDICTABLE>
    8fc4:	21000000 	mrscs	r0, (UNDEF: 0)
    8fc8:	001d9401 	andseq	r9, sp, r1, lsl #8
    8fcc:	0a9d0100 	beq	fe7493d4 <__StackTop+0xc66493d4>
    8fd0:	012f0111 			; <UNDEFINED> instruction: 0x012f0111
	...
    8fdc:	877e0000 	ldrbhi	r0, [lr, -r0]!
    8fe0:	ab010000 	blge	48fe8 <__HEAP_SIZE+0x47fe8>
    8fe4:	1b00002c 	blne	909c <__HEAP_SIZE+0x809c>
    8fe8:	00001df9 	strdeq	r1, [r0], -r9
    8fec:	420a9d01 	andmi	r9, sl, #1, 26	; 0x40
    8ff0:	000003b3 			; <UNDEFINED> instruction: 0x000003b3
    8ff4:	000087a4 	andeq	r8, r0, r4, lsr #15
    8ff8:	0000879e 	muleq	r0, lr, r7
    8ffc:	00236618 	eoreq	r6, r3, r8, lsl r6
    9000:	0a9f0100 	beq	fe7c9408 <__StackTop+0xc66c9408>
    9004:	002a2517 	eoreq	r2, sl, r7, lsl r5
    9008:	0087cf00 	addeq	ip, r7, r0, lsl #30
    900c:	0087cd00 	addeq	ip, r7, r0, lsl #26
    9010:	0ca91800 	stceq	8, cr1, [r9]
    9014:	a0010000 	andge	r0, r1, r0
    9018:	012f150a 			; <UNDEFINED> instruction: 0x012f150a
    901c:	87e40000 	strbhi	r0, [r4, r0]!
    9020:	87e20000 	strbhi	r0, [r2, r0]!
    9024:	ca180000 	bgt	60902c <__RAM_SIZE+0x50902c>
    9028:	0100000c 	tsteq	r0, ip
    902c:	2f150aa1 	svccs	0x00150aa1
    9030:	fb000001 	blx	903e <__HEAP_SIZE+0x803e>
    9034:	f7000087 			; <UNDEFINED> instruction: 0xf7000087
    9038:	1d000087 	stcne	0, cr0, [r0, #-540]	; 0xfffffde4
    903c:	00000000 	andeq	r0, r0, r0
    9040:	0000380e 	andeq	r3, r0, lr, lsl #16
    9044:	0000001d 	andeq	r0, r0, sp, lsl r0
    9048:	00381c00 	eorseq	r1, r8, r0, lsl #24
    904c:	01210000 			; <UNDEFINED> instruction: 0x01210000
    9050:	000022da 	ldrdeq	r2, [r0], -sl
    9054:	110a8301 	tstne	sl, r1, lsl #6
    9058:	00012f01 	andeq	r2, r1, r1, lsl #30
	...
    9064:	00881900 	addeq	r1, r8, r0, lsl #18
    9068:	2d1d0100 	ldfcss	f0, [sp, #-0]
    906c:	f91b0000 			; <UNDEFINED> instruction: 0xf91b0000
    9070:	0100001d 	tsteq	r0, sp, lsl r0
    9074:	b33b0a83 	teqlt	fp, #536576	; 0x83000
    9078:	3f000003 	svccc	0x00000003
    907c:	39000088 	stmdbcc	r0, {r3, r7}
    9080:	18000088 	stmdane	r0, {r3, r7}
    9084:	00002366 	andeq	r2, r0, r6, ror #6
    9088:	170a8501 	strne	r8, [sl, -r1, lsl #10]
    908c:	00002a25 	andeq	r2, r0, r5, lsr #20
    9090:	0000886a 	andeq	r8, r0, sl, ror #16
    9094:	00008868 	andeq	r8, r0, r8, ror #16
    9098:	000ca918 	andeq	sl, ip, r8, lsl r9
    909c:	0a860100 	beq	fe1894a4 <__StackTop+0xc60894a4>
    90a0:	00012f15 	andeq	r2, r1, r5, lsl pc
    90a4:	00887f00 	addeq	r7, r8, r0, lsl #30
    90a8:	00887d00 	addeq	r7, r8, r0, lsl #26
    90ac:	00001d00 	andeq	r1, r0, r0, lsl #26
    90b0:	37f20000 	ldrbcc	r0, [r2, r0]!
    90b4:	001d0000 	andseq	r0, sp, r0
    90b8:	00000000 	andeq	r0, r0, r0
    90bc:	00000038 	andeq	r0, r0, r8, lsr r0
    90c0:	1d120121 	ldfnes	f0, [r2, #-132]	; 0xffffff7c
    90c4:	53010000 	movwpl	r0, #4096	; 0x1000
    90c8:	2f01110a 	svccs	0x0001110a
    90cc:	00000001 	andeq	r0, r0, r1
    90d0:	00000000 	andeq	r0, r0, r0
    90d4:	92000000 	andls	r0, r0, #0
    90d8:	01000088 	smlabbeq	r0, r8, r0, r0
    90dc:	00002da4 	andeq	r2, r0, r4, lsr #27
    90e0:	001df91b 	andseq	pc, sp, fp, lsl r9	; <UNPREDICTABLE>
    90e4:	0a530100 	beq	14c94ec <__RAM_SIZE+0x13c94ec>
    90e8:	0003b33e 	andeq	fp, r3, lr, lsr r3
    90ec:	0088b800 	addeq	fp, r8, r0, lsl #16
    90f0:	0088b200 	addeq	fp, r8, r0, lsl #4
    90f4:	23661800 	cmncs	r6, #0, 16
    90f8:	55010000 	strpl	r0, [r1, #-0]
    90fc:	2a25170a 	bcs	94ed2c <__RAM_SIZE+0x84ed2c>
    9100:	88e30000 	stmiahi	r3!, {}^	; <UNPREDICTABLE>
    9104:	88e10000 	stmiahi	r1!, {}^	; <UNPREDICTABLE>
    9108:	a9180000 	ldmdbge	r8, {}	; <UNPREDICTABLE>
    910c:	0100000c 	tsteq	r0, ip
    9110:	2f150a56 	svccs	0x00150a56
    9114:	f8000001 			; <UNDEFINED> instruction: 0xf8000001
    9118:	f6000088 			; <UNDEFINED> instruction: 0xf6000088
    911c:	18000088 	stmdane	r0, {r3, r7}
    9120:	00000cca 	andeq	r0, r0, sl, asr #25
    9124:	150a5701 	strne	r5, [sl, #-1793]	; 0xfffff8ff
    9128:	0000012f 	andeq	r0, r0, pc, lsr #2
    912c:	0000890f 	andeq	r8, r0, pc, lsl #18
    9130:	0000890b 	andeq	r8, r0, fp, lsl #18
    9134:	0000001d 	andeq	r0, r0, sp, lsl r0
    9138:	00380e00 	eorseq	r0, r8, r0, lsl #28
    913c:	00001d00 	andeq	r1, r0, r0, lsl #26
    9140:	381c0000 	ldmdacc	ip, {}	; <UNPREDICTABLE>
    9144:	21000000 	mrscs	r0, (UNDEF: 0)
    9148:	001a0901 	andseq	r0, sl, r1, lsl #18
    914c:	0a390100 	beq	e49554 <__RAM_SIZE+0xd49554>
    9150:	012f0111 			; <UNDEFINED> instruction: 0x012f0111
	...
    915c:	892d0000 	pushhi	{}	; <UNPREDICTABLE>
    9160:	16010000 	strne	r0, [r1], -r0
    9164:	1b00002e 	blne	9224 <__HEAP_SIZE+0x8224>
    9168:	00001df9 	strdeq	r1, [r0], -r9
    916c:	370a3901 	strcc	r3, [sl, -r1, lsl #18]
    9170:	000003b3 			; <UNDEFINED> instruction: 0x000003b3
    9174:	00008953 	andeq	r8, r0, r3, asr r9
    9178:	0000894d 	andeq	r8, r0, sp, asr #18
    917c:	00236618 	eoreq	r6, r3, r8, lsl r6
    9180:	0a3b0100 	beq	ec9588 <__RAM_SIZE+0xdc9588>
    9184:	002a2517 	eoreq	r2, sl, r7, lsl r5
    9188:	00897e00 	addeq	r7, r9, r0, lsl #28
    918c:	00897c00 	addeq	r7, r9, r0, lsl #24
    9190:	0ca91800 	stceq	8, cr1, [r9]
    9194:	3c010000 	stccc	0, cr0, [r1], {-0}
    9198:	012f150a 			; <UNDEFINED> instruction: 0x012f150a
    919c:	89930000 	ldmibhi	r3, {}	; <UNPREDICTABLE>
    91a0:	89910000 	ldmibhi	r1, {}	; <UNPREDICTABLE>
    91a4:	001d0000 	andseq	r0, sp, r0
    91a8:	f2000000 	vhadd.s8	d0, d0, d0
    91ac:	1d000037 	stcne	0, cr0, [r0, #-220]	; 0xffffff24
    91b0:	00000000 	andeq	r0, r0, r0
    91b4:	00003800 	andeq	r3, r0, r0, lsl #16
    91b8:	ba012100 	blt	515c0 <__HEAP_SIZE+0x505c0>
    91bc:	0100001b 	tsteq	r0, fp, lsl r0
    91c0:	011009b5 			; <UNDEFINED> instruction: 0x011009b5
    91c4:	000004f2 	strdeq	r0, [r0], -r2
	...
    91d0:	000089a6 	andeq	r8, r0, r6, lsr #19
    91d4:	002ef901 	eoreq	pc, lr, r1, lsl #18
    91d8:	1df91b00 			; <UNDEFINED> instruction: 0x1df91b00
    91dc:	b5010000 	strlt	r0, [r1, #-0]
    91e0:	03a72c09 			; <UNDEFINED> instruction: 0x03a72c09
    91e4:	89e80000 	stmibhi	r8!, {}^	; <UNPREDICTABLE>
    91e8:	89de0000 	ldmibhi	lr, {}^	; <UNPREDICTABLE>
    91ec:	67180000 	ldrvs	r0, [r8, -r0]
    91f0:	01000017 	tsteq	r0, r7, lsl r0
    91f4:	f21409b7 	vmul.i16	d0, d20, d23
    91f8:	2e000004 	cdpcs	0, 0, cr0, cr0, cr4, {0}
    91fc:	2a00008a 	bcs	942c <__HEAP_SIZE+0x842c>
    9200:	1800008a 	stmdane	r0, {r1, r3, r7}
    9204:	0000154b 	andeq	r1, r0, fp, asr #10
    9208:	1809b801 	stmdane	r9, {r0, fp, ip, sp, pc}
    920c:	00001aca 	andeq	r1, r0, sl, asr #21
    9210:	00008a50 	andeq	r8, r0, r0, asr sl
    9214:	00008a4c 	andeq	r8, r0, ip, asr #20
    9218:	0015e518 	andseq	lr, r5, r8, lsl r5
    921c:	09b90100 	ldmibeq	r9!, {r8}
    9220:	001aca18 	andseq	ip, sl, r8, lsl sl
    9224:	008a7200 	addeq	r7, sl, r0, lsl #4
    9228:	008a6e00 	addeq	r6, sl, r0, lsl #28
    922c:	15d71800 	ldrbne	r1, [r7, #2048]	; 0x800
    9230:	ba010000 	blt	49238 <__HEAP_SIZE+0x48238>
    9234:	1aca1809 	bne	ff28f260 <__StackTop+0xc718f260>
    9238:	8a940000 	bhi	fe509240 <__StackTop+0xc6409240>
    923c:	8a900000 	bhi	fe409244 <__StackTop+0xc6309244>
    9240:	1e180000 	cdpne	0, 1, cr0, cr8, cr0, {0}
    9244:	01000017 	tsteq	r0, r7, lsl r0
    9248:	ca1809bb 	bgt	60b93c <__RAM_SIZE+0x50b93c>
    924c:	b600001a 			; <UNDEFINED> instruction: 0xb600001a
    9250:	b200008a 	andlt	r0, r0, #138	; 0x8a
    9254:	1800008a 	stmdane	r0, {r1, r3, r7}
    9258:	00002366 	andeq	r2, r0, r6, ror #6
    925c:	1d09bc01 	stcne	12, cr11, [r9, #-4]
    9260:	00002a2b 	andeq	r2, r0, fp, lsr #20
    9264:	00008ade 	ldrdeq	r8, [r0], -lr
    9268:	00008ad4 	ldrdeq	r8, [r0], -r4
    926c:	00053823 	andeq	r3, r5, r3, lsr #16
    9270:	002ee600 	eoreq	lr, lr, r0, lsl #12
    9274:	00782e00 	rsbseq	r2, r8, r0, lsl #28
    9278:	2809ec01 	stmdacs	r9, {r0, sl, fp, sp, lr, pc}
    927c:	00000119 	andeq	r0, r0, r9, lsl r1
    9280:	00008b26 	andeq	r8, r0, r6, lsr #22
    9284:	00008b20 	andeq	r8, r0, r0, lsr #22
    9288:	00001d00 	andeq	r1, r0, r0, lsl #26
    928c:	37f20000 	ldrbcc	r0, [r2, r0]!
    9290:	001d0000 	andseq	r0, sp, r0
    9294:	00000000 	andeq	r0, r0, r0
    9298:	00000038 	andeq	r0, r0, r8, lsr r0
    929c:	02bc0122 	adcseq	r0, ip, #-2147483640	; 0x80000008
    92a0:	83010000 	movwhi	r0, #4096	; 0x1000
    92a4:	50010a09 	andpl	r0, r1, r9, lsl #20
    92a8:	6e10002b 	cdpvs	0, 1, cr0, cr0, cr11, {1}
    92ac:	4f10002b 	svcmi	0x0010002b
    92b0:	0100008b 	smlabbeq	r0, fp, r0, r0
    92b4:	00002f74 	andeq	r2, r0, r4, ror pc
    92b8:	0021051b 	eoreq	r0, r1, fp, lsl r5
    92bc:	09830100 	stmibeq	r3, {r8}
    92c0:	00015b27 	andeq	r5, r1, r7, lsr #22
    92c4:	008b7500 	addeq	r7, fp, r0, lsl #10
    92c8:	008b6f00 	addeq	r6, fp, r0, lsl #30
    92cc:	21f71800 	mvnscs	r1, r0, lsl #16
    92d0:	85010000 	strhi	r0, [r1, #-0]
    92d4:	01191409 	tsteq	r9, r9, lsl #8
    92d8:	8ba50000 	blhi	fe9492e0 <__StackTop+0xc68492e0>
    92dc:	8ba10000 	blhi	fe8492e4 <__StackTop+0xc67492e4>
    92e0:	5a1d0000 	bpl	7492e8 <__RAM_SIZE+0x6492e8>
    92e4:	2810002b 	ldmdacs	r0, {r0, r1, r3, r5}
    92e8:	1e000026 	cdpne	0, 0, cr0, cr0, cr6, {1}
    92ec:	10002b62 	andne	r2, r0, r2, ror #22
    92f0:	00000986 	andeq	r0, r0, r6, lsl #19
    92f4:	00002f61 	andeq	r2, r0, r1, ror #30
    92f8:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    92fc:	011f0074 	tsteq	pc, r4, ror r0	; <UNPREDICTABLE>
    9300:	00300151 	eorseq	r0, r0, r1, asr r1
    9304:	002b661d 	eoreq	r6, fp, sp, lsl r6
    9308:	0024cf10 	eoreq	ip, r4, r0, lsl pc
    930c:	2b6c1d00 	blcs	1b10714 <__RAM_SIZE+0x1a10714>
    9310:	382a1000 	stmdacc	sl!, {ip}
    9314:	21000000 	mrscs	r0, (UNDEF: 0)
    9318:	00156c01 	andseq	r6, r5, r1, lsl #24
    931c:	09270100 	stmdbeq	r7!, {r8}
    9320:	01190110 	tsteq	r9, r0, lsl r1
	...
    932c:	8bc40000 	blhi	ff109334 <__StackTop+0xc7009334>
    9330:	47010000 	strmi	r0, [r1, -r0]
    9334:	1b000030 	blne	93fc <__HEAP_SIZE+0x83fc>
    9338:	00001fe4 	andeq	r1, r0, r4, ror #31
    933c:	34092701 	strcc	r2, [r9], #-1793	; 0xfffff8ff
    9340:	000018a3 	andeq	r1, r0, r3, lsr #17
    9344:	00008be8 	andeq	r8, r0, r8, ror #23
    9348:	00008be4 	andeq	r8, r0, r4, ror #23
    934c:	0023071b 	eoreq	r0, r3, fp, lsl r7
    9350:	09280100 	stmdbeq	r8!, {r8}
    9354:	00015b32 	andeq	r5, r1, r2, lsr fp
    9358:	008c0c00 	addeq	r0, ip, r0, lsl #24
    935c:	008c0600 	addeq	r0, ip, r0, lsl #12
    9360:	232d1800 			; <UNDEFINED> instruction: 0x232d1800
    9364:	2a010000 	bcs	4936c <__HEAP_SIZE+0x4836c>
    9368:	014a1409 	cmpeq	sl, r9, lsl #8
    936c:	8c460000 	marhi	acc0, r0, r6
    9370:	8c380000 	ldchi	0, cr0, [r8], #-0
    9374:	f7180000 			; <UNDEFINED> instruction: 0xf7180000
    9378:	01000021 	tsteq	r0, r1, lsr #32
    937c:	1914092b 	ldmdbne	r4, {r0, r1, r3, r5, r8, fp}
    9380:	a2000001 	andge	r0, r0, #1
    9384:	9e00008c 	cdpls	0, 0, cr0, cr0, cr12, {4}
    9388:	1800008c 	stmdane	r0, {r2, r3, r7}
    938c:	00001b26 	andeq	r1, r0, r6, lsr #22
    9390:	25092b01 	strcs	r2, [r9, #-2817]	; 0xfffff4ff
    9394:	00000119 	andeq	r0, r0, r9, lsl r1
    9398:	00008cca 	andeq	r8, r0, sl, asr #25
    939c:	00008cc0 	andeq	r8, r0, r0, asr #25
    93a0:	00063823 	andeq	r3, r6, r3, lsr #16
    93a4:	00302b00 	eorseq	r2, r0, r0, lsl #22
    93a8:	1a1b1800 	bne	6cf3b0 <__RAM_SIZE+0x5cf3b0>
    93ac:	36010000 	strcc	r0, [r1], -r0
    93b0:	015b1e09 	cmpeq	fp, r9, lsl #28
    93b4:	8d120000 	ldchi	0, cr0, [r2, #-0]
    93b8:	8d0e0000 	stchi	0, cr0, [lr, #-0]
    93bc:	00200000 	eoreq	r0, r0, r0
    93c0:	86000000 	strhi	r0, [r0], -r0
    93c4:	1f000009 	svcne	0x00000009
    93c8:	30015101 	andcc	r5, r1, r1, lsl #2
    93cc:	001d0000 	andseq	r0, sp, r0
    93d0:	28000000 	stmdacs	r0, {}	; <UNPREDICTABLE>
    93d4:	1d000026 	stcne	0, cr0, [r0, #-152]	; 0xffffff68
    93d8:	00000000 	andeq	r0, r0, r0
    93dc:	000024cf 	andeq	r2, r0, pc, asr #9
    93e0:	0000001d 	andeq	r0, r0, sp, lsl r0
    93e4:	00382a00 	eorseq	r2, r8, r0, lsl #20
    93e8:	01220000 			; <UNDEFINED> instruction: 0x01220000
    93ec:	00001e42 	andeq	r1, r0, r2, asr #28
    93f0:	0a088f01 	beq	22cffc <__RAM_SIZE+0x12cffc>
    93f4:	00000001 	andeq	r0, r0, r1
    93f8:	00000000 	andeq	r0, r0, r0
    93fc:	008d3000 	addeq	r3, sp, r0
    9400:	313e0100 	teqcc	lr, r0, lsl #2
    9404:	9a1b0000 	bls	6c940c <__RAM_SIZE+0x5c940c>
    9408:	0100001f 	tsteq	r0, pc, lsl r0
    940c:	a724088f 	strge	r0, [r4, -pc, lsl #17]!
    9410:	56000003 	strpl	r0, [r0], -r3
    9414:	5000008d 	andpl	r0, r0, sp, lsl #1
    9418:	1800008d 	stmdane	r0, {r0, r2, r3, r7}
    941c:	00002366 	andeq	r2, r0, r6, ror #6
    9420:	11089101 	tstne	r8, r1, lsl #2
    9424:	00000666 	andeq	r0, r0, r6, ror #12
    9428:	00008d83 	andeq	r8, r0, r3, lsl #27
    942c:	00008d7f 	andeq	r8, r0, pc, ror sp
    9430:	00163a18 	andseq	r3, r6, r8, lsl sl
    9434:	08920100 	ldmeq	r2, {r8}
    9438:	00011914 	andeq	r1, r1, r4, lsl r9
    943c:	008da700 	addeq	sl, sp, r0, lsl #14
    9440:	008da100 	addeq	sl, sp, r0, lsl #2
    9444:	24951800 	ldrcs	r1, [r5], #2048	; 0x800
    9448:	93010000 	movwls	r0, #4096	; 0x1000
    944c:	01191408 	tsteq	r9, r8, lsl #8
    9450:	8dd70000 	ldclhi	0, cr0, [r7]
    9454:	8dd30000 	ldclhi	0, cr0, [r3]
    9458:	001d0000 	andseq	r0, sp, r0
    945c:	f2000000 	vhadd.s8	d0, d0, d0
    9460:	1e000037 	mcrne	0, 0, r0, cr0, cr7, {1}
    9464:	00000000 	andeq	r0, r0, r0
    9468:	000037d4 	ldrdeq	r3, [r0], -r4
    946c:	000030d4 	ldrdeq	r3, [r0], -r4
    9470:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    9474:	1e000075 	mcrne	0, 0, r0, cr0, cr5, {3}
    9478:	00000000 	andeq	r0, r0, r0
    947c:	000037d4 	ldrdeq	r3, [r0], -r4
    9480:	000030e8 	andeq	r3, r0, r8, ror #1
    9484:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    9488:	1d001874 	stcne	8, cr1, [r0, #-464]	; 0xfffffe30
    948c:	00000000 	andeq	r0, r0, r0
    9490:	00001491 	muleq	r0, r1, r4
    9494:	0000001d 	andeq	r0, r0, sp, lsl r0
    9498:	00380000 	eorseq	r0, r8, r0
    949c:	00001e00 	andeq	r1, r0, r0, lsl #28
    94a0:	14a70000 	strtne	r0, [r7], #0
    94a4:	310e0000 	mrscc	r0, (UNDEF: 14)
    94a8:	011f0000 	tsteq	pc, r0
    94ac:	00740250 	rsbseq	r0, r4, r0, asr r2
    94b0:	00001e00 	andeq	r1, r0, r0, lsl #28
    94b4:	389e0000 	ldmcc	lr, {}	; <UNPREDICTABLE>
    94b8:	312b0000 			; <UNDEFINED> instruction: 0x312b0000
    94bc:	011f0000 	tsteq	pc, r0
    94c0:	34030550 	strcc	r0, [r3], #-1360	; 0xfffffab0
    94c4:	1f38008b 	svcne	0x0038008b
    94c8:	75025101 	strvc	r5, [r2, #-257]	; 0xfffffeff
    94cc:	001d0000 	andseq	r0, sp, r0
    94d0:	00000000 	andeq	r0, r0, r0
    94d4:	1d000038 	stcne	0, cr0, [r0, #-224]	; 0xffffff20
    94d8:	00000000 	andeq	r0, r0, r0
    94dc:	0000382a 	andeq	r3, r0, sl, lsr #16
    94e0:	1b781a00 	blne	1e0fce8 <__RAM_SIZE+0x1d0fce8>
    94e4:	e3010000 	movw	r0, #4096	; 0x1000
    94e8:	d8011107 	stmdale	r1, {r0, r1, r2, r8, ip}
    94ec:	94100025 	ldrls	r0, [r0], #-37	; 0xffffffdb
    94f0:	f5100026 			; <UNDEFINED> instruction: 0xf5100026
    94f4:	0100008d 	smlabbeq	r0, sp, r0, r0
    94f8:	000031b6 			; <UNDEFINED> instruction: 0x000031b6
    94fc:	001bd81b 	andseq	sp, fp, fp, lsl r8
    9500:	07e30100 	strbeq	r0, [r3, r0, lsl #2]!
    9504:	00066633 	andeq	r6, r6, r3, lsr r6
    9508:	008e1900 	addeq	r1, lr, r0, lsl #18
    950c:	008e1500 	addeq	r1, lr, r0, lsl #10
    9510:	26261c00 	strtcs	r1, [r6], -r0, lsl #24
    9514:	26581000 	ldrbcs	r1, [r8], -r0
    9518:	31911000 	orrscc	r1, r1, r0
    951c:	7f180000 	svcvc	0x00180000
    9520:	0100000a 	tsteq	r0, sl
    9524:	910d081d 	tstls	sp, sp, lsl r8
    9528:	39000003 	stmdbcc	r0, {r0, r1}
    952c:	3700008e 	strcc	r0, [r0, -lr, lsl #1]
    9530:	0000008e 	andeq	r0, r0, lr, lsl #1
    9534:	0025e01d 	eoreq	lr, r5, sp, lsl r0
    9538:	0037f210 	eorseq	pc, r7, r0, lsl r2	; <UNPREDICTABLE>
    953c:	265c1d00 	ldrbcs	r1, [ip], -r0, lsl #26
    9540:	38001000 	stmdacc	r0, {ip}
    9544:	741d0000 	ldrvc	r0, [sp], #-0
    9548:	38100026 	ldmdacc	r0, {r1, r2, r5}
    954c:	1d000016 	stcne	0, cr0, [r0, #-88]	; 0xffffffa8
    9550:	1000267a 	andne	r2, r0, sl, ror r6
    9554:	0000382a 	andeq	r3, r0, sl, lsr #16
    9558:	1f131a00 	svcne	0x00131a00
    955c:	01010000 	mrseq	r0, (UNDEF: 1)
    9560:	88010d07 	stmdahi	r1, {r0, r1, r2, r8, sl, fp}
    9564:	1e100024 	cdpne	0, 1, cr0, cr0, cr4, {1}
    9568:	4c100025 	ldcmi	0, cr0, [r0], {37}	; 0x25
    956c:	0100008e 	smlabbeq	r0, lr, r0, r0
    9570:	000032f3 	strdeq	r3, [r0], -r3	; <UNPREDICTABLE>
    9574:	00239a1b 	eoreq	r9, r3, fp, lsl sl
    9578:	07010100 	streq	r0, [r1, -r0, lsl #2]
    957c:	0000ea32 	andeq	lr, r0, r2, lsr sl
    9580:	008e7000 	addeq	r7, lr, r0
    9584:	008e6c00 	addeq	r6, lr, r0, lsl #24
    9588:	1a3e1b00 	bne	f90190 <__RAM_SIZE+0xe90190>
    958c:	02010000 	andeq	r0, r1, #0
    9590:	00be3607 	adcseq	r3, lr, r7, lsl #12
    9594:	8e920000 	cdphi	0, 9, cr0, cr2, cr0, {0}
    9598:	8e8e0000 	cdphi	0, 8, cr0, cr14, cr0, {0}
    959c:	a21b0000 	andsge	r0, fp, #0
    95a0:	01000019 	tsteq	r0, r9, lsl r0
    95a4:	35400703 	strbcc	r0, [r0, #-1795]	; 0xfffff8fd
    95a8:	b8000000 	stmdalt	r0, {}	; <UNPREDICTABLE>
    95ac:	b000008e 	andlt	r0, r0, lr, lsl #1
    95b0:	1b00008e 	blne	97f0 <__HEAP_SIZE+0x87f0>
    95b4:	00001f28 	andeq	r1, r0, r8, lsr #30
    95b8:	30070401 	andcc	r0, r7, r1, lsl #8
    95bc:	000000a1 	andeq	r0, r0, r1, lsr #1
    95c0:	00008ef9 	strdeq	r8, [r0], -r9
    95c4:	00008ef5 	strdeq	r8, [r0], -r5
    95c8:	0015161b 	andseq	r1, r5, fp, lsl r6
    95cc:	07050100 	streq	r0, [r5, -r0, lsl #2]
    95d0:	00012f2f 	andeq	r2, r1, pc, lsr #30
    95d4:	008f1b00 	addeq	r1, pc, r0, lsl #22
    95d8:	008f1700 	addeq	r1, pc, r0, lsl #14
    95dc:	24481900 	strbcs	r1, [r8], #-2304	; 0xfffff700
    95e0:	06010000 	streq	r0, [r1], -r0
    95e4:	32f93807 	rscscc	r3, r9, #458752	; 0x70000
    95e8:	91020000 	mrsls	r0, (UNDEF: 2)
    95ec:	1bd81904 	blne	ff60fa04 <__StackTop+0xc750fa04>
    95f0:	07010000 	streq	r0, [r1, -r0]
    95f4:	06662b07 	strbteq	r2, [r6], -r7, lsl #22
    95f8:	91020000 	mrsls	r0, (UNDEF: 2)
    95fc:	22711908 	rsbscs	r1, r1, #8, 18	; 0x20000
    9600:	08010000 	stmdaeq	r1, {}	; <UNPREDICTABLE>
    9604:	33044007 	movwcc	r4, #16391	; 0x4007
    9608:	91020000 	mrsls	r0, (UNDEF: 2)
    960c:	23ba180c 			; <UNDEFINED> instruction: 0x23ba180c
    9610:	0a010000 	beq	49618 <__HEAP_SIZE+0x48618>
    9614:	05bb1307 	ldreq	r1, [fp, #775]!	; 0x307
    9618:	8f3c0000 	svchi	0x003c0000
    961c:	8f3a0000 	svchi	0x003a0000
    9620:	782e0000 	stmdavc	lr!, {}	; <UNPREDICTABLE>
    9624:	070b0100 	streq	r0, [fp, -r0, lsl #2]
    9628:	00012f11 	andeq	r2, r1, r1, lsl pc
    962c:	008f5100 	addeq	r5, pc, r0, lsl #2
    9630:	008f4f00 	addeq	r4, pc, r0, lsl #30
    9634:	24a61e00 	strtcs	r1, [r6], #3584	; 0xe00
    9638:	38ad1000 	stmiacc	sp!, {ip}
    963c:	32ae0000 	adccc	r0, lr, #0
    9640:	011f0000 	tsteq	pc, r0
    9644:	a5080251 	strge	r0, [r8, #-593]	; 0xfffffdaf
    9648:	0452011f 	ldrbeq	r0, [r2], #-287	; 0xfffffee1
    964c:	24320077 	ldrtcs	r0, [r2], #-119	; 0xffffff89
    9650:	24f01e00 	ldrbtcs	r1, [r0], #3584	; 0xe00
    9654:	38bb1000 	ldmcc	fp!, {ip}
    9658:	32c20000 	sbccc	r0, r2, #0
    965c:	011f0000 	tsteq	pc, r0
    9660:	04740250 	ldrbteq	r0, [r4], #-592	; 0xfffffdb0
    9664:	24f81e00 	ldrbtcs	r1, [r8], #3584	; 0xe00
    9668:	38bb1000 	ldmcc	fp!, {ip}
    966c:	32d60000 	sbcscc	r0, r6, #0
    9670:	011f0000 	tsteq	pc, r0
    9674:	18740250 	ldmdane	r4!, {r4, r6, r9}^
    9678:	250e2000 	strcs	r2, [lr, #-0]
    967c:	38ca1000 	stmiacc	sl, {ip}^
    9680:	011f0000 	tsteq	pc, r0
    9684:	00770250 	rsbseq	r0, r7, r0, asr r2
    9688:	0252011f 	subseq	r0, r2, #-1073741817	; 0xc0000007
    968c:	011f0078 	tsteq	pc, r8, ror r0	; <UNPREDICTABLE>
    9690:	00790253 	rsbseq	r0, r9, r3, asr r2
    9694:	04070000 	streq	r0, [r7], #-0
    9698:	000003a7 	andeq	r0, r0, r7, lsr #7
    969c:	0032f303 	eorseq	pc, r2, r3, lsl #6
    96a0:	b6040700 	strlt	r0, [r4], -r0, lsl #14
    96a4:	03000005 	movweq	r0, #5
    96a8:	000032fe 	strdeq	r3, [r0], -lr
    96ac:	02f30121 	rscseq	r0, r3, #1073741832	; 0x40000008
    96b0:	b6010000 	strlt	r0, [r1], -r0
    96b4:	19011006 	stmdbne	r1, {r1, r2, ip}
    96b8:	38000001 	stmdacc	r0, {r0}
    96bc:	5a100028 	bpl	409764 <__RAM_SIZE+0x309764>
    96c0:	64100028 	ldrvs	r0, [r0], #-40	; 0xffffffd8
    96c4:	0100008f 	smlabbeq	r0, pc, r0, r0	; <UNPREDICTABLE>
    96c8:	00003414 	andeq	r3, r0, r4, lsl r4
    96cc:	00239a1b 	eoreq	r9, r3, fp, lsl sl
    96d0:	06b60100 	ldrteq	r0, [r6], r0, lsl #2
    96d4:	0000ea2c 	andeq	lr, r0, ip, lsr #20
    96d8:	008fac00 	addeq	sl, pc, r0, lsl #24
    96dc:	008fa800 	addeq	sl, pc, r0, lsl #16
    96e0:	1a3e1b00 	bne	f902e8 <__RAM_SIZE+0xe902e8>
    96e4:	b7010000 	strlt	r0, [r1, -r0]
    96e8:	00be3006 	adcseq	r3, lr, r6
    96ec:	8fd10000 	svchi	0x00d10000
    96f0:	8fcd0000 	svchi	0x00cd0000
    96f4:	a21b0000 	andsge	r0, fp, #0
    96f8:	01000019 	tsteq	r0, r9, lsl r0
    96fc:	353a06b8 	ldrcc	r0, [sl, #-1720]!	; 0xfffff948
    9700:	f6000000 			; <UNDEFINED> instruction: 0xf6000000
    9704:	f200008f 	vhadd.s8	d0, d16, d15
    9708:	1b00008f 	blne	994c <__HEAP_SIZE+0x894c>
    970c:	00001f28 	andeq	r1, r0, r8, lsr #30
    9710:	2a06b901 	bcs	1b7b1c <__RAM_SIZE+0xb7b1c>
    9714:	000000a1 	andeq	r0, r0, r1, lsr #1
    9718:	0000901b 	andeq	r9, r0, fp, lsl r0
    971c:	00009017 	andeq	r9, r0, r7, lsl r0
    9720:	0015161b 	andseq	r1, r5, fp, lsl r6
    9724:	06ba0100 	ldrteq	r0, [sl], r0, lsl #2
    9728:	00012f29 	andeq	r2, r1, r9, lsr #30
    972c:	00904000 	addseq	r4, r0, r0
    9730:	00903c00 	addseq	r3, r0, r0, lsl #24
    9734:	24481b00 	strbcs	r1, [r8], #-2816	; 0xfffff500
    9738:	bb010000 	bllt	49740 <__HEAP_SIZE+0x48740>
    973c:	32f93206 	rscscc	r3, r9, #1610612736	; 0x60000000
    9740:	90640000 	rsbls	r0, r4, r0
    9744:	90600000 	rsbls	r0, r0, r0
    9748:	d8180000 	ldmdale	r8, {}	; <UNPREDICTABLE>
    974c:	0100001b 	tsteq	r0, fp, lsl r0
    9750:	661106bd 			; <UNDEFINED> instruction: 0x661106bd
    9754:	88000006 	stmdahi	r0, {r1, r2}
    9758:	84000090 	strhi	r0, [r0], #-144	; 0xffffff70
    975c:	18000090 	stmdane	r0, {r4, r7}
    9760:	00001abd 			; <UNDEFINED> instruction: 0x00001abd
    9764:	1406be01 	strne	fp, [r6], #-3585	; 0xfffff1ff
    9768:	00000119 	andeq	r0, r0, r9, lsl r1
    976c:	000090aa 	andeq	r9, r0, sl, lsr #1
    9770:	000090a6 	andeq	r9, r0, r6, lsr #1
    9774:	0028481e 	eoreq	r4, r8, lr, lsl r8
    9778:	00341410 	eorseq	r1, r4, r0, lsl r4
    977c:	00340a00 	eorseq	r0, r4, r0, lsl #20
    9780:	50011f00 	andpl	r1, r1, r0, lsl #30
    9784:	5001f303 	andpl	pc, r1, r3, lsl #6
    9788:	0351011f 	cmpeq	r1, #-1073741817	; 0xc0000007
    978c:	1f5101f3 	svcne	0x005101f3
    9790:	f3035201 	vhsub.u8	d5, d3, d1
    9794:	011f5201 	tsteq	pc, r1, lsl #4
    9798:	01f30353 	mvnseq	r0, r3, asr r3
    979c:	7d021f53 	stcvc	15, cr1, [r2, #-332]	; 0xfffffeb4
    97a0:	00740200 	rsbseq	r0, r4, r0, lsl #4
    97a4:	047d021f 	ldrbteq	r0, [sp], #-543	; 0xfffffde1
    97a8:	06049103 	streq	r9, [r4], -r3, lsl #2
    97ac:	284e1d00 	stmdacs	lr, {r8, sl, fp, ip}^
    97b0:	313e1000 	teqcc	lr, r0
    97b4:	2d000000 	stccs	0, cr0, [r0, #-0]
    97b8:	00001863 	andeq	r1, r0, r3, ror #16
    97bc:	14065401 	strne	r5, [r6], #-1025	; 0xfffffbff
    97c0:	00066601 	andeq	r6, r6, r1, lsl #12
    97c4:	00269400 	eoreq	r9, r6, r0, lsl #8
    97c8:	0026f610 	eoreq	pc, r6, r0, lsl r6	; <UNPREDICTABLE>
    97cc:	0090cb10 	addseq	ip, r0, r0, lsl fp
    97d0:	357e0100 	ldrbcc	r0, [lr, #-256]!	; 0xffffff00
    97d4:	9a1b0000 	bls	6c97dc <__RAM_SIZE+0x5c97dc>
    97d8:	01000023 	tsteq	r0, r3, lsr #32
    97dc:	ea320654 	b	c8b134 <__RAM_SIZE+0xb8b134>
    97e0:	13000000 	movwne	r0, #0
    97e4:	0f000091 	svceq	0x00000091
    97e8:	1b000091 	blne	9a34 <__HEAP_SIZE+0x8a34>
    97ec:	00001a3e 	andeq	r1, r0, lr, lsr sl
    97f0:	36065501 	strcc	r5, [r6], -r1, lsl #10
    97f4:	000000be 	strheq	r0, [r0], -lr
    97f8:	00009135 	andeq	r9, r0, r5, lsr r1
    97fc:	00009131 	andeq	r9, r0, r1, lsr r1
    9800:	0019a21b 	andseq	sl, r9, fp, lsl r2
    9804:	06560100 	ldrbeq	r0, [r6], -r0, lsl #2
    9808:	00003540 	andeq	r3, r0, r0, asr #10
    980c:	00915700 	addseq	r5, r1, r0, lsl #14
    9810:	00915300 	addseq	r5, r1, r0, lsl #6
    9814:	1f281b00 	svcne	0x00281b00
    9818:	57010000 	strpl	r0, [r1, -r0]
    981c:	00a13006 	adceq	r3, r1, r6
    9820:	91790000 	cmnls	r9, r0
    9824:	91750000 	cmnls	r5, r0
    9828:	161b0000 	ldrne	r0, [fp], -r0
    982c:	01000015 	tsteq	r0, r5, lsl r0
    9830:	2f2f0658 	svccs	0x002f0658
    9834:	9b000001 	blls	9840 <__HEAP_SIZE+0x8840>
    9838:	97000091 			; <UNDEFINED> instruction: 0x97000091
    983c:	1b000091 	blne	9a88 <__HEAP_SIZE+0x8a88>
    9840:	00002448 	andeq	r2, r0, r8, asr #8
    9844:	38065901 	stmdacc	r6, {r0, r8, fp, ip, lr}
    9848:	000032f9 	strdeq	r3, [r0], -r9
    984c:	000091bf 			; <UNDEFINED> instruction: 0x000091bf
    9850:	000091bb 			; <UNDEFINED> instruction: 0x000091bb
    9854:	001bd818 	andseq	sp, fp, r8, lsl r8
    9858:	065b0100 	ldrbeq	r0, [fp], -r0, lsl #2
    985c:	00066611 	andeq	r6, r6, r1, lsl r6
    9860:	0091e700 	addseq	lr, r1, r0, lsl #14
    9864:	0091df00 	addseq	sp, r1, r0, lsl #30
    9868:	05082300 	streq	r2, [r8, #-768]	; 0xfffffd00
    986c:	353e0000 	ldrcc	r0, [lr, #-0]!
    9870:	7c180000 	ldcvc	0, cr0, [r8], {-0}
    9874:	0100001f 	tsteq	r0, pc, lsl r0
    9878:	bb1b0680 	bllt	6cb280 <__RAM_SIZE+0x5cb280>
    987c:	21000005 	tstcs	r0, r5
    9880:	1b000092 	blne	9ad0 <__HEAP_SIZE+0x8ad0>
    9884:	1e000092 	mcrne	0, 0, r0, cr0, cr2, {4}
    9888:	100026a8 	andne	r2, r0, r8, lsr #13
    988c:	000038d8 	ldrdeq	r3, [r0], -r8
    9890:	000034fa 	strdeq	r3, [r0], -sl
    9894:	0450011f 	ldrbeq	r0, [r0], #-287	; 0xfffffee1
    9898:	24320075 	ldrtcs	r0, [r2], #-117	; 0xffffff8b
    989c:	26b21e00 	ldrtcs	r1, [r2], r0, lsl #28
    98a0:	38d81000 	ldmcc	r8, {ip}^
    98a4:	350e0000 	strcc	r0, [lr, #-0]
    98a8:	011f0000 	tsteq	pc, r0
    98ac:	4c080250 	sfmmi	f0, 4, [r8], {80}	; 0x50
    98b0:	26be1e00 	ldrtcs	r1, [lr], r0, lsl #28
    98b4:	38e61000 	stmiacc	r6!, {ip}^
    98b8:	352d0000 	strcc	r0, [sp, #-0]!
    98bc:	011f0000 	tsteq	pc, r0
    98c0:	00740250 	rsbseq	r0, r4, r0, asr r2
    98c4:	0151011f 	cmpeq	r1, pc, lsl r1
    98c8:	52011f30 	andpl	r1, r1, #48, 30	; 0xc0
    98cc:	004c0802 	subeq	r0, ip, r2, lsl #16
    98d0:	0026f020 	eoreq	pc, r6, r0, lsr #32
    98d4:	00383810 	eorseq	r3, r8, r0, lsl r8
    98d8:	50011f00 	andpl	r1, r1, r0, lsl #30
    98dc:	00007902 	andeq	r7, r0, r2, lsl #18
    98e0:	26e22000 	strbtcs	r2, [r2], r0
    98e4:	31b61000 			; <UNDEFINED> instruction: 0x31b61000
    98e8:	011f0000 	tsteq	pc, r0
    98ec:	00760250 	rsbseq	r0, r6, r0, asr r2
    98f0:	0251011f 	subseq	r0, r1, #-1073741817	; 0xc0000007
    98f4:	011f0077 	tsteq	pc, r7, ror r0	; <UNPREDICTABLE>
    98f8:	00750252 	rsbseq	r0, r5, r2, asr r2
    98fc:	0253011f 	subseq	r0, r3, #-1073741817	; 0xc0000007
    9900:	021f0078 	andseq	r0, pc, #120	; 0x78
    9904:	9103007d 	tstls	r3, sp, ror r0
    9908:	021f0600 	andseq	r0, pc, #0, 12
    990c:	9103047d 	tstls	r3, sp, ror r4
    9910:	021f0604 	andseq	r0, pc, #4, 12	; 0x400000
    9914:	7402087d 	strvc	r0, [r2], #-2173	; 0xfffff783
    9918:	7d021f00 	stcvc	15, cr1, [r2, #-0]
    991c:	0030010c 	eorseq	r0, r0, ip, lsl #2
    9920:	e9012100 	stmdb	r1, {r8, sp}
    9924:	01000017 	tsteq	r0, r7, lsl r0
    9928:	0112051d 	tsteq	r2, sp, lsl r5
    992c:	000003a7 	andeq	r0, r0, r7, lsr #7
    9930:	10002810 	andne	r2, r0, r0, lsl r8
    9934:	10002838 	andne	r2, r0, r8, lsr r8
    9938:	0000924a 	andeq	r9, r0, sl, asr #4
    993c:	00369901 	eorseq	r9, r6, r1, lsl #18
    9940:	239a1b00 	orrscs	r1, sl, #0, 22
    9944:	1d010000 	stcne	0, cr0, [r1, #-0]
    9948:	00ea3405 	rsceq	r3, sl, r5, lsl #8
    994c:	92860000 	addls	r0, r6, #0
    9950:	92820000 	addls	r0, r2, #0
    9954:	3e1b0000 	cdpcc	0, 1, cr0, cr11, cr0, {0}
    9958:	0100001a 	tsteq	r0, sl, lsl r0
    995c:	be38051e 	mrclt	5, 1, r0, cr8, cr14, {0}
    9960:	ab000000 	blge	9968 <__HEAP_SIZE+0x8968>
    9964:	a7000092 			; <UNDEFINED> instruction: 0xa7000092
    9968:	1b000092 	blne	9bb8 <__HEAP_SIZE+0x8bb8>
    996c:	000019a2 	andeq	r1, r0, r2, lsr #19
    9970:	42051f01 	andmi	r1, r5, #1, 30
    9974:	00000035 	andeq	r0, r0, r5, lsr r0
    9978:	000092d0 	ldrdeq	r9, [r0], -r0
    997c:	000092cc 	andeq	r9, r0, ip, asr #5
    9980:	001f281b 	andseq	r2, pc, fp, lsl r8	; <UNPREDICTABLE>
    9984:	05200100 	streq	r0, [r0, #-256]!	; 0xffffff00
    9988:	0000a132 	andeq	sl, r0, r2, lsr r1
    998c:	0092f500 	addseq	pc, r2, r0, lsl #10
    9990:	0092f100 	addseq	pc, r2, r0, lsl #2
    9994:	15161900 	ldrne	r1, [r6, #-2304]	; 0xfffff700
    9998:	21010000 	mrscs	r0, (UNDEF: 1)
    999c:	012f3105 			; <UNDEFINED> instruction: 0x012f3105
    99a0:	91020000 	mrsls	r0, (UNDEF: 2)
    99a4:	1bc91900 	blne	ff24fdac <__StackTop+0xc714fdac>
    99a8:	22010000 	andcs	r0, r1, #0
    99ac:	05c13905 	strbeq	r3, [r1, #2309]	; 0x905
    99b0:	91020000 	mrsls	r0, (UNDEF: 2)
    99b4:	1dbd1904 			; <UNDEFINED> instruction: 0x1dbd1904
    99b8:	23010000 	movwcs	r0, #4096	; 0x1000
    99bc:	08f63a05 	ldmeq	r6!, {r0, r2, r9, fp, ip, sp}^
    99c0:	91020000 	mrsls	r0, (UNDEF: 2)
    99c4:	1abd1608 	bne	fef4f1ec <__StackTop+0xc6e4f1ec>
    99c8:	25010000 	strcs	r0, [r1, #-0]
    99cc:	03a71605 			; <UNDEFINED> instruction: 0x03a71605
    99d0:	91020000 	mrsls	r0, (UNDEF: 2)
    99d4:	1bd81874 	blne	ff60fbac <__StackTop+0xc750fbac>
    99d8:	26010000 	strcs	r0, [r1], -r0
    99dc:	06661105 	strbteq	r1, [r6], -r5, lsl #2
    99e0:	93180000 	tstls	r8, #0
    99e4:	93160000 	tstls	r6, #0
    99e8:	2c1e0000 	ldccs	0, cr0, [lr], {-0}
    99ec:	99100028 	ldmdbls	r0, {r3, r5}
    99f0:	8f000036 	svchi	0x00000036
    99f4:	1f000036 	svcne	0x00000036
    99f8:	f3035001 	vhadd.u8	d5, d3, d1
    99fc:	011f5001 	tsteq	pc, r1
    9a00:	01f30351 	mvnseq	r0, r1, asr r3
    9a04:	52011f51 	andpl	r1, r1, #324	; 0x144
    9a08:	5201f303 	andpl	pc, r1, #201326592	; 0xc000000
    9a0c:	0353011f 	cmpeq	r3, #-1073741817	; 0xc0000007
    9a10:	1f5301f3 	svcne	0x005301f3
    9a14:	02007d02 	andeq	r7, r0, #2, 26	; 0x80
    9a18:	021f0074 	andseq	r0, pc, #116	; 0x74
    9a1c:	9103047d 	tstls	r3, sp, ror r4
    9a20:	021f0604 	andseq	r0, pc, #4, 12	; 0x400000
    9a24:	9103087d 	tstls	r3, sp, ror r8
    9a28:	021f0608 	andseq	r0, pc, #8, 12	; 0x800000
    9a2c:	91020c7d 	tstls	r2, sp, ror ip
    9a30:	321d0074 	andscc	r0, sp, #116	; 0x74
    9a34:	3e100028 	cdpcc	0, 1, cr0, cr0, cr8, {1}
    9a38:	00000031 	andeq	r0, r0, r1, lsr r0
    9a3c:	0018f42d 	andseq	pc, r8, sp, lsr #8
    9a40:	04e60100 	strbteq	r0, [r6], #256	; 0x100
    9a44:	06660114 			; <UNDEFINED> instruction: 0x06660114
    9a48:	251e0000 	ldrcs	r0, [lr, #-0]
    9a4c:	25701000 	ldrbcs	r1, [r0, #-0]!
    9a50:	932b1000 			; <UNDEFINED> instruction: 0x932b1000
    9a54:	d4010000 	strle	r0, [r1], #-0
    9a58:	1b000037 	blne	9b3c <__HEAP_SIZE+0x8b3c>
    9a5c:	0000239a 	muleq	r0, sl, r3
    9a60:	3804e601 	stmdacc	r4, {r0, r9, sl, sp, lr, pc}
    9a64:	000000ea 	andeq	r0, r0, sl, ror #1
    9a68:	0000937d 	andeq	r9, r0, sp, ror r3
    9a6c:	0000936f 	andeq	r9, r0, pc, ror #6
    9a70:	001a3e1b 	andseq	r3, sl, fp, lsl lr
    9a74:	04e70100 	strbteq	r0, [r7], #256	; 0x100
    9a78:	0000be3c 	andeq	fp, r0, ip, lsr lr
    9a7c:	0093e000 	addseq	lr, r3, r0
    9a80:	0093d800 	addseq	sp, r3, r0, lsl #16
    9a84:	19a21b00 	stmibne	r2!, {r8, r9, fp, ip}
    9a88:	e8010000 	stmda	r1, {}	; <UNPREDICTABLE>
    9a8c:	00354604 	eorseq	r4, r5, r4, lsl #12
    9a90:	941f0000 	ldrls	r0, [pc], #-0	; 9a98 <__HEAP_SIZE+0x8a98>
    9a94:	94170000 	ldrls	r0, [r7], #-0
    9a98:	281b0000 	ldmdacs	fp, {}	; <UNPREDICTABLE>
    9a9c:	0100001f 	tsteq	r0, pc, lsl r0
    9aa0:	a13604e9 	teqge	r6, r9, ror #9
    9aa4:	5e000000 	cdppl	0, 0, cr0, cr0, cr0, {0}
    9aa8:	56000094 			; <UNDEFINED> instruction: 0x56000094
    9aac:	1b000094 	blne	9d04 <__HEAP_SIZE+0x8d04>
    9ab0:	00001516 	andeq	r1, r0, r6, lsl r5
    9ab4:	3504ea01 	strcc	lr, [r4, #-2561]	; 0xfffff5ff
    9ab8:	0000012f 	andeq	r0, r0, pc, lsr #2
    9abc:	00009499 	muleq	r0, r9, r4
    9ac0:	00009495 	muleq	r0, r5, r4
    9ac4:	001bc91b 	andseq	ip, fp, fp, lsl r9
    9ac8:	04eb0100 	strbteq	r0, [fp], #256	; 0x100
    9acc:	0005c13d 	andeq	ip, r5, sp, lsr r1
    9ad0:	0094bd00 	addseq	fp, r4, r0, lsl #26
    9ad4:	0094b900 	addseq	fp, r4, r0, lsl #18
    9ad8:	1dbd1b00 			; <UNDEFINED> instruction: 0x1dbd1b00
    9adc:	ec010000 	stc	0, cr0, [r1], {-0}
    9ae0:	08f63e04 	ldmeq	r6!, {r2, r9, sl, fp, ip, sp}^
    9ae4:	94e10000 	strbtls	r0, [r1], #0
    9ae8:	94dd0000 	ldrbls	r0, [sp], #0
    9aec:	481b0000 	ldmdami	fp, {}	; <UNPREDICTABLE>
    9af0:	01000024 	tsteq	r0, r4, lsr #32
    9af4:	f93e04ed 			; <UNDEFINED> instruction: 0xf93e04ed
    9af8:	05000032 	streq	r0, [r0, #-50]	; 0xffffffce
    9afc:	01000095 	swpeq	r0, r5, [r0]	; <UNPREDICTABLE>
    9b00:	18000095 	stmdane	r0, {r0, r2, r4, r7}
    9b04:	00001bd8 	ldrdeq	r1, [r0], -r8
    9b08:	1104ef01 	tstne	r4, r1, lsl #30
    9b0c:	00000666 	andeq	r0, r0, r6, ror #12
    9b10:	00009529 	andeq	r9, r0, r9, lsr #10
    9b14:	00009525 	andeq	r9, r0, r5, lsr #10
    9b18:	00253e1e 	eoreq	r3, r5, lr, lsl lr
    9b1c:	0038e610 	eorseq	lr, r8, r0, lsl r6
    9b20:	00379400 	eorseq	r9, r7, r0, lsl #8
    9b24:	50011f00 	andpl	r1, r1, r0, lsl #30
    9b28:	1f007402 	svcne	0x00007402
    9b2c:	30015101 	andcc	r5, r1, r1, lsl #2
    9b30:	0252011f 	subseq	r0, r2, #-1073741817	; 0xc0000007
    9b34:	20004c08 	andcs	r4, r0, r8, lsl #24
    9b38:	10002560 	andne	r2, r0, r0, ror #10
    9b3c:	000031b6 			; <UNDEFINED> instruction: 0x000031b6
    9b40:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    9b44:	011f0075 	tsteq	pc, r5, ror r0	; <UNPREDICTABLE>
    9b48:	00790251 	rsbseq	r0, r9, r1, asr r2
    9b4c:	0252011f 	subseq	r0, r2, #-1073741817	; 0xc0000007
    9b50:	011f0078 	tsteq	pc, r8, ror r0	; <UNPREDICTABLE>
    9b54:	00770253 	rsbseq	r0, r7, r3, asr r2
    9b58:	007d021f 	rsbseq	r0, sp, pc, lsl r2
    9b5c:	06009103 	streq	r9, [r0], -r3, lsl #2
    9b60:	047d021f 	ldrbteq	r0, [sp], #-543	; 0xfffffde1
    9b64:	060c9103 	streq	r9, [ip], -r3, lsl #2
    9b68:	087d021f 	ldmdaeq	sp!, {r0, r1, r2, r3, r4, r9}^
    9b6c:	1f007402 	svcne	0x00007402
    9b70:	010c7d02 	tsteq	ip, r2, lsl #26
    9b74:	2f000030 	svccs	0x00000030
    9b78:	0ac00101 	beq	ff009f84 <__StackTop+0xc6f09f84>
    9b7c:	0ac00000 	beq	ff009b84 <__StackTop+0xc6f09b84>
    9b80:	f7080000 			; <UNDEFINED> instruction: 0xf7080000
    9b84:	012f0d01 			; <UNDEFINED> instruction: 0x012f0d01
    9b88:	000adb01 	andeq	sp, sl, r1, lsl #22
    9b8c:	000adb00 	andeq	sp, sl, r0, lsl #22
    9b90:	01d10800 	bicseq	r0, r1, r0, lsl #16
    9b94:	01013006 	tsteq	r1, r6
    9b98:	00000c77 	andeq	r0, r0, r7, ror ip
    9b9c:	00000c77 	andeq	r0, r0, r7, ror ip
    9ba0:	300d7106 	andcc	r7, sp, r6, lsl #2
    9ba4:	0ae70101 	beq	ff9c9fb0 <__StackTop+0xc78c9fb0>
    9ba8:	0ae70000 	beq	ff9c9bb0 <__StackTop+0xc78c9bb0>
    9bac:	72060000 	andvc	r0, r6, #0
    9bb0:	0101300d 	tsteq	r1, sp
    9bb4:	00001021 	andeq	r1, r0, r1, lsr #32
    9bb8:	00001021 	andeq	r1, r0, r1, lsr #32
    9bbc:	30117406 	andscc	r7, r1, r6, lsl #8
    9bc0:	0d2d0101 	stfeqs	f0, [sp, #-4]!
    9bc4:	0d2d0000 	stceq	0, cr0, [sp, #-0]
    9bc8:	75060000 	strvc	r0, [r6, #-0]
    9bcc:	0101300d 	tsteq	r1, sp
    9bd0:	00000b22 	andeq	r0, r0, r2, lsr #22
    9bd4:	00000b22 	andeq	r0, r0, r2, lsr #22
    9bd8:	300d6f06 	andcc	r6, sp, r6, lsl #30
    9bdc:	12650101 	rsbne	r0, r5, #1073741824	; 0x40000000
    9be0:	12650000 	rsbne	r0, r5, #0
    9be4:	b80a0000 	stmdalt	sl, {}	; <UNPREDICTABLE>
    9be8:	01012f06 	tsteq	r1, r6, lsl #30
    9bec:	00000a3f 	andeq	r0, r0, pc, lsr sl
    9bf0:	00000a3f 	andeq	r0, r0, pc, lsr sl
    9bf4:	0601b908 	streq	fp, [r1], -r8, lsl #18
    9bf8:	3101012f 	tstcc	r1, pc, lsr #2
    9bfc:	31000021 	tstcc	r0, r1, lsr #32
    9c00:	06000021 	streq	r0, [r0], -r1, lsr #32
    9c04:	2f110177 	svccs	0x00110177
    9c08:	23d30101 	bicscs	r0, r3, #1073741824	; 0x40000000
    9c0c:	23d30000 	bicscs	r0, r3, #0
    9c10:	c70b0000 	strgt	r0, [fp, -r0]
    9c14:	01300e01 	teqeq	r0, r1, lsl #28
    9c18:	001fbf01 	andseq	fp, pc, r1, lsl #30
    9c1c:	001fbf00 	andseq	fp, pc, r0, lsl #30
    9c20:	06e30a00 	strbteq	r0, [r3], r0, lsl #20
    9c24:	a701012f 	strge	r0, [r1, -pc, lsr #2]
    9c28:	a7000017 	smladge	r0, r7, r0, r0
    9c2c:	0b000017 	bleq	9c90 <__HEAP_SIZE+0x8c90>
    9c30:	300c0548 	andcc	r0, ip, r8, asr #10
    9c34:	15020101 	strne	r0, [r2, #-257]	; 0xfffffeff
    9c38:	15020000 	strne	r0, [r2, #-0]
    9c3c:	dc0a0000 	stcle	0, cr0, [sl], {-0}
    9c40:	01012f0c 	tsteq	r1, ip, lsl #30
    9c44:	00000a29 	andeq	r0, r0, r9, lsr #20
    9c48:	00000a29 	andeq	r0, r0, r9, lsr #20
    9c4c:	0601e708 	streq	lr, [r1], -r8, lsl #14
    9c50:	a1010130 	tstge	r1, r0, lsr r1
    9c54:	a1000001 	tstge	r0, r1
    9c58:	0c000001 	stceq	0, cr0, [r0], {1}
    9c5c:	012f0921 			; <UNDEFINED> instruction: 0x012f0921
    9c60:	000a0501 	andeq	r0, sl, r1, lsl #10
    9c64:	000a0500 	andeq	r0, sl, r0, lsl #10
    9c68:	01c40800 	biceq	r0, r4, r0, lsl #16
    9c6c:	01013006 	tsteq	r1, r6
    9c70:	00001c34 	andeq	r1, r0, r4, lsr ip
    9c74:	00001c34 	andeq	r1, r0, r4, lsr ip
    9c78:	3017800a 	andscc	r8, r7, sl
    9c7c:	0d9c0101 	ldfeqs	f0, [ip, #4]
    9c80:	0d9c0000 	ldceq	0, cr0, [ip]
    9c84:	b50a0000 	strlt	r0, [sl, #-0]
    9c88:	01013108 	tsteq	r1, r8, lsl #2
    9c8c:	000001a1 	andeq	r0, r0, r1, lsr #3
    9c90:	00000197 	muleq	r0, r7, r1
    9c94:	8c00000d 	stchi	0, cr0, [r0], {13}
    9c98:	02000019 	andeq	r0, r0, #25
    9c9c:	00133a00 	andseq	r3, r3, r0, lsl #20
    9ca0:	bf010400 	svclt	0x00010400
    9ca4:	0c000000 	stceq	0, cr0, [r0], {-0}
    9ca8:	0000260c 	andeq	r2, r0, ip, lsl #12
    9cac:	000001a8 	andeq	r0, r0, r8, lsr #3
    9cb0:	00000a38 	andeq	r0, r0, r8, lsr sl
	...
    9cbc:	0000715f 	andeq	r7, r0, pc, asr r1
    9cc0:	0004e702 	andeq	lr, r4, r2, lsl #14
    9cc4:	17d10200 	ldrbne	r0, [r1, r0, lsl #4]
    9cc8:	00000035 	andeq	r0, r0, r5, lsr r0
    9ccc:	1d070403 	cfstrsne	mvf0, [r7, #-12]
    9cd0:	04000002 	streq	r0, [r0], #-2
    9cd4:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
    9cd8:	08030074 	stmdaeq	r3, {r2, r4, r5, r6}
    9cdc:	00025505 	andeq	r5, r2, r5, lsl #10
    9ce0:	04080300 	streq	r0, [r8], #-768	; 0xfffffd00
    9ce4:	00000249 	andeq	r0, r0, r9, asr #4
    9ce8:	8f060103 	svchi	0x00060103
    9cec:	02000000 	andeq	r0, r0, #0
    9cf0:	00000000 	andeq	r0, r0, r0
    9cf4:	64182b03 	ldrvs	r2, [r8], #-2819	; 0xfffff4fd
    9cf8:	03000000 	movweq	r0, #0
    9cfc:	008d0801 	addeq	r0, sp, r1, lsl #16
    9d00:	02030000 	andeq	r0, r3, #0
    9d04:	0002a505 	andeq	sl, r2, r5, lsl #10
    9d08:	07020300 	streq	r0, [r2, -r0, lsl #6]
    9d0c:	000000ac 	andeq	r0, r0, ip, lsr #1
    9d10:	5a050403 	bpl	14ad24 <__RAM_SIZE+0x4ad24>
    9d14:	02000002 	andeq	r0, r0, #2
    9d18:	0000037d 	andeq	r0, r0, sp, ror r3
    9d1c:	8c194f03 	ldchi	15, cr4, [r9], {3}
    9d20:	03000000 	movweq	r0, #0
    9d24:	02180704 	andseq	r0, r8, #4, 14	; 0x100000
    9d28:	08030000 	stmdaeq	r3, {}	; <UNPREDICTABLE>
    9d2c:	00021307 	andeq	r1, r2, r7, lsl #6
    9d30:	06040500 	streq	r0, [r4], -r0, lsl #10
    9d34:	0000009a 	muleq	r0, sl, r0
    9d38:	96080103 	strls	r0, [r8], -r3, lsl #2
    9d3c:	06000000 	streq	r0, [r0], -r0
    9d40:	000000a1 	andeq	r0, r0, r1, lsr #1
    9d44:	00a80407 	adceq	r0, r8, r7, lsl #8
    9d48:	ad060000 	stcge	0, cr0, [r6, #-0]
    9d4c:	02000000 	andeq	r0, r0, #0
    9d50:	00000002 	andeq	r0, r0, r2
    9d54:	58131804 	ldmdapl	r3, {r2, fp, ip}
    9d58:	02000000 	andeq	r0, r0, #0
    9d5c:	0000037f 	andeq	r0, r0, pc, ror r3
    9d60:	80143004 	andshi	r3, r4, r4
    9d64:	02000000 	andeq	r0, r0, #0
    9d68:	00001cdc 	ldrdeq	r1, [r0], -ip
    9d6c:	dc112405 	cfldrsle	mvf2, [r1], {5}
    9d70:	07000000 	streq	r0, [r0, -r0]
    9d74:	0000e204 	andeq	lr, r0, r4, lsl #4
    9d78:	ee010800 	cdp	8, 0, cr0, cr1, cr0, {0}
    9d7c:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    9d80:	0000009a 	muleq	r0, sl, r0
    9d84:	16030200 	strne	r0, [r3], -r0, lsl #4
    9d88:	49060000 	stmdbmi	r6, {}	; <UNPREDICTABLE>
    9d8c:	0000c41a 	andeq	ip, r0, sl, lsl r4
    9d90:	0a690200 	beq	1a4a598 <__RAM_SIZE+0x194a598>
    9d94:	4a060000 	bmi	189d9c <__RAM_SIZE+0x89d9c>
    9d98:	0000791a 	andeq	r7, r0, sl, lsl r9
    9d9c:	00fa0600 	rscseq	r0, sl, r0, lsl #12
    9da0:	68020000 	stmdavs	r2, {}	; <UNPREDICTABLE>
    9da4:	0600000a 	streq	r0, [r0], -sl
    9da8:	008c1a4b 	addeq	r1, ip, fp, asr #20
    9dac:	c4020000 	strgt	r0, [r2], #-0
    9db0:	06000009 	streq	r0, [r0], -r9
    9db4:	00c41a51 	sbceq	r1, r4, r1, asr sl
    9db8:	17060000 	strne	r0, [r6, -r0]
    9dbc:	0a000001 	beq	9dc8 <__HEAP_SIZE+0x8dc8>
    9dc0:	000012c8 	andeq	r1, r0, r8, asr #5
    9dc4:	0c0c0714 	stceq	7, cr0, [ip], {20}
    9dc8:	00015708 	andeq	r5, r1, r8, lsl #14
    9dcc:	0e690b00 	vmuleq.f64	d16, d9, d0
    9dd0:	11070000 	mrsne	r0, (UNDEF: 7)
    9dd4:	0117100c 	tsteq	r7, ip
    9dd8:	23020000 	movwcs	r0, #8192	; 0x2000
    9ddc:	0e5f0b00 	vnmlseq.f64	d16, d15, d0
    9de0:	12070000 	andne	r0, r7, #0
    9de4:	01570c0c 	cmpeq	r7, ip, lsl #24
    9de8:	23020000 	movwcs	r0, #8192	; 0x2000
    9dec:	9a0c0004 	bls	309e04 <__RAM_SIZE+0x209e04>
    9df0:	67000000 	strvs	r0, [r0, -r0]
    9df4:	0d000001 	stceq	0, cr0, [r0, #-4]
    9df8:	00000035 	andeq	r0, r0, r5, lsr r0
    9dfc:	db0e0003 	blle	389e10 <__RAM_SIZE+0x289e10>
    9e00:	07000019 	smladeq	r0, r9, r0, r0
    9e04:	28220c17 	stmdacs	r2!, {r0, r1, r2, r4, sl, fp}
    9e08:	0e000001 	cdpeq	0, 0, cr0, cr0, cr1, {0}
    9e0c:	00000c0e 	andeq	r0, r0, lr, lsl #24
    9e10:	2b0c2507 	blcs	313234 <__RAM_SIZE+0x213234>
    9e14:	00000128 	andeq	r0, r0, r8, lsr #2
    9e18:	00105a0a 	andseq	r5, r0, sl, lsl #20
    9e1c:	29071c00 	stmdbcs	r7, {sl, fp, ip}
    9e20:	01c0100c 	biceq	r1, r0, ip
    9e24:	680b0000 	stmdavs	fp, {}	; <UNPREDICTABLE>
    9e28:	0700000e 	streq	r0, [r0, -lr]
    9e2c:	0b110c2e 	bleq	44ceec <__RAM_SIZE+0x34ceec>
    9e30:	02000001 	andeq	r0, r0, #1
    9e34:	5f0b0023 	svcpl	0x000b0023
    9e38:	0700000e 	streq	r0, [r0, -lr]
    9e3c:	9a0c0c2f 	bls	30cf00 <__RAM_SIZE+0x20cf00>
    9e40:	02000000 	andeq	r0, r0, #0
    9e44:	7b0b0423 	blvc	2caed8 <__RAM_SIZE+0x1caed8>
    9e48:	0700000e 	streq	r0, [r0, -lr]
    9e4c:	741a0c30 	ldrvc	r0, [sl], #-3120	; 0xfffff3d0
    9e50:	02000001 	andeq	r0, r0, #1
    9e54:	0e000823 	cdpeq	8, 0, cr0, cr0, cr3, {1}
    9e58:	00001481 	andeq	r1, r0, r1, lsl #9
    9e5c:	030c3407 	movweq	r3, #50183	; 0xc407
    9e60:	00000181 	andeq	r0, r0, r1, lsl #3
    9e64:	001ff70a 	andseq	pc, pc, sl, lsl #14
    9e68:	43074c00 	movwmi	r4, #31744	; 0x7c00
    9e6c:	028c100c 	addeq	r1, ip, #12
    9e70:	4a0b0000 	bmi	2c9e78 <__RAM_SIZE+0x1c9e78>
    9e74:	0700001c 	smladeq	r0, ip, r0, r0
    9e78:	9a0c0c45 	bls	30cf94 <__RAM_SIZE+0x20cf94>
    9e7c:	02000000 	andeq	r0, r0, #0
    9e80:	8d0b0023 	stchi	0, cr0, [fp, #-140]	; 0xffffff74
    9e84:	07000013 	smladeq	r0, r3, r0, r0
    9e88:	8c160c4c 	ldchi	12, cr0, [r6], {76}	; 0x4c
    9e8c:	02000002 	andeq	r0, r0, #2
    9e90:	5f0b0423 	svcpl	0x000b0423
    9e94:	0700001a 	smladeq	r0, sl, r0, r0
    9e98:	0b110c4d 	bleq	44cfd4 <__RAM_SIZE+0x34cfd4>
    9e9c:	02000001 	andeq	r0, r0, #1
    9ea0:	5d0b2c23 	stcpl	12, cr2, [fp, #-140]	; 0xffffff74
    9ea4:	0700001c 	smladeq	r0, ip, r0, r0
    9ea8:	9a0c0c4e 	bls	30cfe8 <__RAM_SIZE+0x20cfe8>
    9eac:	02000000 	andeq	r0, r0, #0
    9eb0:	4e0b3023 	cdpmi	0, 0, cr3, cr11, cr3, {1}
    9eb4:	0700001e 	smladeq	r0, lr, r0, r0
    9eb8:	9c0d0c53 	stcls	12, cr0, [sp], {83}	; 0x53
    9ebc:	02000002 	andeq	r0, r0, #2
    9ec0:	620b3423 	andvs	r3, fp, #587202560	; 0x23000000
    9ec4:	07000015 	smladeq	r0, r5, r0, r0
    9ec8:	ac150c61 	ldcge	12, cr0, [r5], {97}	; 0x61
    9ecc:	02000002 	andeq	r0, r0, #2
    9ed0:	ff0b3823 			; <UNDEFINED> instruction: 0xff0b3823
    9ed4:	0700001d 	smladeq	r0, sp, r0, r0
    9ed8:	9a100c64 	bls	40d070 <__RAM_SIZE+0x30d070>
    9edc:	02000000 	andeq	r0, r0, #0
    9ee0:	260b4023 	strcs	r4, [fp], -r3, lsr #32
    9ee4:	07000020 	streq	r0, [r0, -r0, lsr #32]
    9ee8:	bc120c70 	ldclt	12, cr0, [r2], {112}	; 0x70
    9eec:	02000002 	andeq	r0, r0, #2
    9ef0:	530b4423 	movwpl	r4, #46115	; 0xb423
    9ef4:	0700001c 	smladeq	r0, ip, r0, r0
    9ef8:	cc110c71 	ldcgt	12, cr0, [r1], {113}	; 0x71
    9efc:	02000002 	andeq	r0, r0, #2
    9f00:	810b4823 	tsthi	fp, r3, lsr #16
    9f04:	07000016 	smladeq	r0, r6, r0, r0
    9f08:	b8110c74 	ldmdalt	r1, {r2, r4, r5, r6, sl, fp}
    9f0c:	02000000 	andeq	r0, r0, #0
    9f10:	2b0b4923 	blcs	2dc3a4 <__RAM_SIZE+0x1dc3a4>
    9f14:	0700001d 	smladeq	r0, sp, r0, r0
    9f18:	b8110c78 	ldmdalt	r1, {r3, r4, r5, r6, sl, fp}
    9f1c:	02000000 	andeq	r0, r0, #0
    9f20:	0c004a23 			; <UNDEFINED> instruction: 0x0c004a23
    9f24:	00000167 	andeq	r0, r0, r7, ror #2
    9f28:	0000029c 	muleq	r0, ip, r2
    9f2c:	0000350d 	andeq	r3, r0, sp, lsl #10
    9f30:	0c000100 	stfeqs	f0, [r0], {-0}
    9f34:	000000b8 	strheq	r0, [r0], -r8
    9f38:	000002ac 	andeq	r0, r0, ip, lsr #5
    9f3c:	0000350d 	andeq	r3, r0, sp, lsl #10
    9f40:	0c000300 	stceq	3, cr0, [r0], {-0}
    9f44:	0000010b 	andeq	r0, r0, fp, lsl #2
    9f48:	000002bc 			; <UNDEFINED> instruction: 0x000002bc
    9f4c:	0000350d 	andeq	r3, r0, sp, lsl #10
    9f50:	0c000100 	stfeqs	f0, [r0], {-0}
    9f54:	000000c4 	andeq	r0, r0, r4, asr #1
    9f58:	000002cc 	andeq	r0, r0, ip, asr #5
    9f5c:	0000350d 	andeq	r3, r0, sp, lsl #10
    9f60:	0c000000 	stceq	0, cr0, [r0], {-0}
    9f64:	000000b8 	strheq	r0, [r0], -r8
    9f68:	000002dc 	ldrdeq	r0, [r0], -ip
    9f6c:	0000350d 	andeq	r3, r0, sp, lsl #10
    9f70:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
    9f74:	000014ac 	andeq	r1, r0, ip, lsr #9
    9f78:	030c7d07 	movweq	r7, #52487	; 0xcd07
    9f7c:	000001cd 	andeq	r0, r0, sp, asr #3
    9f80:	9107040f 	tstls	r7, pc, lsl #8
    9f84:	030e050c 	movweq	r0, #58636	; 0xe50c
    9f88:	56100000 	ldrpl	r0, [r0], -r0
    9f8c:	0700000e 	streq	r0, [r0, -lr]
    9f90:	9a100c93 	bls	40d1e4 <__RAM_SIZE+0x30d1e4>
    9f94:	10000000 	andne	r0, r0, r0
    9f98:	00000e68 	andeq	r0, r0, r8, ror #28
    9f9c:	150c9407 	strne	r9, [ip, #-1031]	; 0xfffffbf9
    9fa0:	0000010b 	andeq	r0, r0, fp, lsl #2
    9fa4:	14470a00 	strbne	r0, [r7], #-2560	; 0xfffff600
    9fa8:	075c0000 	ldrbeq	r0, [ip, -r0]
    9fac:	8b100c8d 	blhi	40d1e8 <__RAM_SIZE+0x30d1e8>
    9fb0:	0b000003 	bleq	9fc4 <__HEAP_SIZE+0x8fc4>
    9fb4:	00000e4d 	andeq	r0, r0, sp, asr #28
    9fb8:	0c0c8f07 	stceq	15, cr8, [ip], {7}
    9fbc:	0000038b 	andeq	r0, r0, fp, lsl #7
    9fc0:	11002302 	tstne	r0, r2, lsl #6
    9fc4:	95070075 	strls	r0, [r7, #-117]	; 0xffffff8b
    9fc8:	02e9070c 	rsceq	r0, r9, #12, 14	; 0x300000
    9fcc:	23020000 	movwcs	r0, #8192	; 0x2000
    9fd0:	138d0b0c 	orrne	r0, sp, #12, 22	; 0x3000
    9fd4:	97070000 	strls	r0, [r7, -r0]
    9fd8:	039b120c 	orrseq	r1, fp, #12, 4	; 0xc0000000
    9fdc:	23020000 	movwcs	r0, #8192	; 0x2000
    9fe0:	0e7a0b10 	vmoveq.s8	r0, d10[4]
    9fe4:	98070000 	stmdals	r7, {}	; <UNPREDICTABLE>
    9fe8:	03ab110c 			; <UNDEFINED> instruction: 0x03ab110c
    9fec:	23020000 	movwcs	r0, #8192	; 0x2000
    9ff0:	119c0b48 	orrsne	r0, ip, r8, asr #22
    9ff4:	99070000 	stmdbls	r7, {}	; <UNPREDICTABLE>
    9ff8:	03bb0d0c 			; <UNDEFINED> instruction: 0x03bb0d0c
    9ffc:	23020000 	movwcs	r0, #8192	; 0x2000
    a000:	11a50b54 			; <UNDEFINED> instruction: 0x11a50b54
    a004:	9c070000 	stcls	0, cr0, [r7], {-0}
    a008:	00b8110c 	adcseq	r1, r8, ip, lsl #2
    a00c:	23020000 	movwcs	r0, #8192	; 0x2000
    a010:	0e710b56 	vmoveq.s8	r0, d1[6]
    a014:	a0070000 	andge	r0, r7, r0
    a018:	009a100c 	addseq	r1, sl, ip
    a01c:	23020000 	movwcs	r0, #8192	; 0x2000
    a020:	9a0c0058 	bls	30a188 <__RAM_SIZE+0x20a188>
    a024:	9b000000 	blls	a02c <__HEAP_SIZE+0x902c>
    a028:	0d000003 	stceq	0, cr0, [r0, #-12]
    a02c:	00000035 	andeq	r0, r0, r5, lsr r0
    a030:	c00c0002 	andgt	r0, ip, r2
    a034:	ab000001 	blge	a040 <__HEAP_SIZE+0x9040>
    a038:	0d000003 	stceq	0, cr0, [r0, #-12]
    a03c:	00000035 	andeq	r0, r0, r5, lsr r0
    a040:	0b0c0001 	bleq	30a04c <__RAM_SIZE+0x20a04c>
    a044:	bb000001 	bllt	a050 <__HEAP_SIZE+0x9050>
    a048:	0d000003 	stceq	0, cr0, [r0, #-12]
    a04c:	00000035 	andeq	r0, r0, r5, lsr r0
    a050:	b80c0002 	stmdalt	ip, {r1}
    a054:	cb000000 	blgt	a05c <__HEAP_SIZE+0x905c>
    a058:	0d000003 	stceq	0, cr0, [r0, #-12]
    a05c:	00000035 	andeq	r0, r0, r5, lsr r0
    a060:	8a0e0001 	bhi	38a06c <__RAM_SIZE+0x28a06c>
    a064:	07000010 	smladeq	r0, r0, r0, r0
    a068:	0e030ca7 	cdpeq	12, 0, cr0, cr3, cr7, {5}
    a06c:	0a000003 	beq	a080 <__HEAP_SIZE+0x9080>
    a070:	00002597 	muleq	r0, r7, r5
    a074:	0cd40728 	ldcleq	7, cr0, [r4], {40}	; 0x28
    a078:	00044710 	andeq	r4, r4, r0, lsl r7
    a07c:	0e4d0b00 	vmlaeq.f64	d16, d13, d0
    a080:	d6070000 	strle	r0, [r7], -r0
    a084:	009a0c0c 	addseq	r0, sl, ip, lsl #24
    a088:	23020000 	movwcs	r0, #8192	; 0x2000
    a08c:	0e690b00 	vmuleq.f64	d16, d9, d0
    a090:	d7070000 	strle	r0, [r7, -r0]
    a094:	0167160c 	cmneq	r7, ip, lsl #12
    a098:	23020000 	movwcs	r0, #8192	; 0x2000
    a09c:	138d0b04 	orrne	r0, sp, #4, 22	; 0x1000
    a0a0:	d8070000 	stmdale	r7, {}	; <UNPREDICTABLE>
    a0a4:	0117100c 	tsteq	r7, ip
    a0a8:	23020000 	movwcs	r0, #8192	; 0x2000
    a0ac:	27480b18 	smlaldcs	r0, r8, r8, fp
    a0b0:	d9070000 	stmdble	r7, {}	; <UNPREDICTABLE>
    a0b4:	009a0c0c 	addseq	r0, sl, ip, lsl #24
    a0b8:	23020000 	movwcs	r0, #8192	; 0x2000
    a0bc:	26910b1c 			; <UNDEFINED> instruction: 0x26910b1c
    a0c0:	da070000 	ble	1ca0c8 <__RAM_SIZE+0xca0c8>
    a0c4:	00d0140c 	sbcseq	r1, r0, ip, lsl #8
    a0c8:	23020000 	movwcs	r0, #8192	; 0x2000
    a0cc:	28650b20 	stmdacs	r5!, {r5, r8, r9, fp}^
    a0d0:	de070000 	cdple	0, 0, cr0, cr7, cr0, {0}
    a0d4:	00b80d0c 	adcseq	r0, r8, ip, lsl #26
    a0d8:	23020000 	movwcs	r0, #8192	; 0x2000
    a0dc:	890e0024 	stmdbhi	lr, {r2, r5}
    a0e0:	07000025 	streq	r0, [r0, -r5, lsr #32]
    a0e4:	d8030cdf 	stmdale	r3, {r0, r1, r2, r3, r4, r6, r7, sl, fp}
    a0e8:	12000003 	andne	r0, r0, #3
    a0ec:	000009eb 	andeq	r0, r0, fp, ror #19
    a0f0:	08900814 	ldmeq	r0, {r2, r4, fp}
    a0f4:	000004ad 	andeq	r0, r0, sp, lsr #9
    a0f8:	0009cf13 	andeq	ip, r9, r3, lsl pc
    a0fc:	24930800 	ldrcs	r0, [r3], #2048	; 0x800
    a100:	00000117 	andeq	r0, r0, r7, lsl r1
    a104:	13002302 	movwne	r2, #770	; 0x302
    a108:	00000a38 	andeq	r0, r0, r8, lsr sl
    a10c:	ad2d9408 	cfstrsge	mvf9, [sp, #-32]!	; 0xffffffe0
    a110:	02000004 	andeq	r0, r0, #4
    a114:	87130423 	ldrhi	r0, [r3, -r3, lsr #8]
    a118:	0800000a 	stmdaeq	r0, {r1, r3}
    a11c:	04ad2d95 	strteq	r2, [sp], #3477	; 0xd95
    a120:	23020000 	movwcs	r0, #8192	; 0x2000
    a124:	09e31308 	stmibeq	r3!, {r3, r8, r9, ip}^
    a128:	96080000 	strls	r0, [r8], -r0
    a12c:	00009a0c 	andeq	r9, r0, ip, lsl #20
    a130:	0c230200 	sfmeq	f0, 4, [r3], #-0
    a134:	0009b813 	andeq	fp, r9, r3, lsl r8
    a138:	28970800 	ldmcs	r7, {fp}
    a13c:	000004ee 	andeq	r0, r0, lr, ror #9
    a140:	00102302 	andseq	r2, r0, r2, lsl #6
    a144:	04540407 	ldrbeq	r0, [r4], #-1031	; 0xfffffbf9
    a148:	ba120000 	blt	48a150 <__RAM_SIZE+0x38a150>
    a14c:	1c00000a 	stcne	0, cr0, [r0], {10}
    a150:	ee10ac08 	cdp	12, 1, cr10, cr0, cr8, {0}
    a154:	13000004 	movwne	r0, #4
    a158:	00000a19 	andeq	r0, r0, r9, lsl sl
    a15c:	0b25af08 	bleq	975d84 <__RAM_SIZE+0x875d84>
    a160:	02000001 	andeq	r0, r0, #1
    a164:	7f130023 	svcvc	0x00130023
    a168:	0800000a 	stmdaeq	r0, {r1, r3}
    a16c:	050c26b0 	streq	r2, [ip, #-1712]	; 0xfffff950
    a170:	23020000 	movwcs	r0, #8192	; 0x2000
    a174:	09da1304 	ldmibeq	sl, {r2, r8, r9, ip}^
    a178:	b1080000 	mrslt	r0, (UNDEF: 8)
    a17c:	00050014 	andeq	r0, r5, r4, lsl r0
    a180:	08230200 	stmdaeq	r3!, {r9}
    a184:	b3040700 	movwlt	r0, #18176	; 0x4700
    a188:	02000004 	andeq	r0, r0, #4
    a18c:	000019e1 	andeq	r1, r0, r1, ror #19
    a190:	541b9a08 	ldrpl	r9, [fp], #-2568	; 0xfffff5f8
    a194:	02000004 	andeq	r0, r0, #4
    a198:	00000c14 	andeq	r0, r0, r4, lsl ip
    a19c:	5424a608 	strtpl	sl, [r4], #-1544	; 0xfffff9f8
    a1a0:	07000004 	streq	r0, [r0, -r4]
    a1a4:	0004f404 	andeq	pc, r4, r4, lsl #8
    a1a8:	14870200 	strne	r0, [r7], #512	; 0x200
    a1ac:	b3080000 	movwlt	r0, #32768	; 0x8000
    a1b0:	0004b303 	andeq	fp, r4, r3, lsl #6
    a1b4:	02af0200 	adceq	r0, pc, #0, 4
    a1b8:	5c090000 	stcpl	0, cr0, [r9], {-0}
    a1bc:	00052a2e 	andeq	r2, r5, lr, lsr #20
    a1c0:	30040700 	andcc	r0, r4, r0, lsl #14
    a1c4:	14000005 	strne	r0, [r0], #-5
    a1c8:	000001f2 	strdeq	r0, [r0], -r2
    a1cc:	ee040701 	cdp	7, 0, cr0, cr4, cr1, {0}
    a1d0:	02000000 	andeq	r0, r0, #0
    a1d4:	00000fac 	andeq	r0, r0, ip, lsr #31
    a1d8:	4824330a 	stmdami	r4!, {r1, r3, r8, r9, ip, sp}
    a1dc:	07000005 	streq	r0, [r0, -r5]
    a1e0:	00054e04 	andeq	r4, r5, r4, lsl #28
    a1e4:	0d1d1400 	cfldrseq	mvf1, [sp, #-0]
    a1e8:	02010000 	andeq	r0, r1, #0
    a1ec:	00002644 	andeq	r2, r0, r4, asr #12
    a1f0:	65224e0b 	strvs	r4, [r2, #-3595]!	; 0xfffff1f5
    a1f4:	06000005 	streq	r0, [r0], -r5
    a1f8:	00000554 	andeq	r0, r0, r4, asr r5
    a1fc:	056b0407 	strbeq	r0, [fp, #-1031]!	; 0xfffffbf9
    a200:	67120000 	ldrvs	r0, [r2, -r0]
    a204:	28000029 	stmdacs	r0, {r0, r3, r5}
    a208:	d3145301 	tstle	r4, #67108864	; 0x4000000
    a20c:	13000005 	movwne	r0, #5
    a210:	0000253c 	andeq	r2, r0, ip, lsr r5
    a214:	ad165501 	cfldr32ge	mvfx5, [r6, #-4]
    a218:	02000000 	andeq	r0, r0, #0
    a21c:	04130023 	ldreq	r0, [r3], #-35	; 0xffffffdd
    a220:	01000028 	tsteq	r0, r8, lsr #32
    a224:	04f41456 	ldrbteq	r1, [r4], #1110	; 0x456
    a228:	23020000 	movwcs	r0, #8192	; 0x2000
    a22c:	24cb1304 	strbcs	r1, [fp], #772	; 0x304
    a230:	57010000 	strpl	r0, [r1, -r0]
    a234:	00011714 	andeq	r1, r1, r4, lsl r7
    a238:	18230200 	stmdane	r3!, {r9}
    a23c:	0028f713 	eoreq	pc, r8, r3, lsl r7	; <UNPREDICTABLE>
    a240:	10580100 	subsne	r0, r8, r0, lsl #2
    a244:	0000009a 	muleq	r0, sl, r0
    a248:	131c2302 	tstne	ip, #134217728	; 0x8000000
    a24c:	000024df 	ldrdeq	r2, [r0], -pc	; <UNPREDICTABLE>
    a250:	d33e5901 	teqle	lr, #16384	; 0x4000
    a254:	02000005 	andeq	r0, r0, #5
    a258:	9c132023 	ldcls	0, cr2, [r3], {35}	; 0x23
    a25c:	01000028 	tsteq	r0, r8, lsr #32
    a260:	00b8115d 	adcseq	r1, r8, sp, asr r1
    a264:	23020000 	movwcs	r0, #8192	; 0x2000
    a268:	bb020024 	bllt	8a300 <__HEAP_SIZE+0x89300>
    a26c:	0b000025 	bleq	a308 <__HEAP_SIZE+0x9308>
    a270:	05df1153 	ldrbeq	r1, [pc, #339]	; a3cb <__HEAP_SIZE+0x93cb>
    a274:	04070000 	streq	r0, [r7], #-0
    a278:	000005e5 	andeq	r0, r0, r5, ror #11
    a27c:	05f10108 	ldrbeq	r0, [r1, #264]!	; 0x108
    a280:	54090000 	strpl	r0, [r9], #-0
    a284:	00000005 	andeq	r0, r0, r5
    a288:	0028ca02 	eoreq	ip, r8, r2, lsl #20
    a28c:	11590b00 	cmpne	r9, r0, lsl #22
    a290:	000005fd 	strdeq	r0, [r0], -sp
    a294:	06030407 	streq	r0, [r3], -r7, lsl #8
    a298:	01080000 	mrseq	r0, (UNDEF: 8)
    a29c:	00000614 	andeq	r0, r0, r4, lsl r6
    a2a0:	00009a09 	andeq	r9, r0, r9, lsl #20
    a2a4:	00c40900 	sbceq	r0, r4, r0, lsl #18
    a2a8:	02000000 	andeq	r0, r0, #0
    a2ac:	00002751 	andeq	r2, r0, r1, asr r7
    a2b0:	6b075e01 	blvs	1e1abc <__RAM_SIZE+0xe1abc>
    a2b4:	02000005 	andeq	r0, r0, #5
    a2b8:	0000258f 	andeq	r2, r0, pc, lsl #11
    a2bc:	14146201 	ldrne	r6, [r4], #-513	; 0xfffffdff
    a2c0:	12000006 	andne	r0, r0, #6
    a2c4:	00002a00 	andeq	r2, r0, r0, lsl #20
    a2c8:	14690108 	strbtne	r0, [r9], #-264	; 0xfffffef8
    a2cc:	00000658 	andeq	r0, r0, r8, asr r6
    a2d0:	00294913 	eoreq	r4, r9, r3, lsl r9
    a2d4:	146b0100 	strbtne	r0, [fp], #-256	; 0xffffff00
    a2d8:	00000117 	andeq	r0, r0, r7, lsl r1
    a2dc:	13002302 	movwne	r2, #770	; 0x302
    a2e0:	00002941 	andeq	r2, r0, r1, asr #18
    a2e4:	58136c01 	ldmdapl	r3, {r0, sl, fp, sp, lr}
    a2e8:	02000006 	andeq	r0, r0, #6
    a2ec:	07000423 	streq	r0, [r0, -r3, lsr #8]
    a2f0:	00062004 	andeq	r2, r6, r4
    a2f4:	06580600 	ldrbeq	r0, [r8], -r0, lsl #12
    a2f8:	6c020000 	stcvs	0, cr0, [r2], {-0}
    a2fc:	01000025 	tsteq	r0, r5, lsr #32
    a300:	062c076d 	strteq	r0, [ip], -sp, ror #14
    a304:	ab120000 	blge	48a30c <__RAM_SIZE+0x38a30c>
    a308:	0c000027 	stceq	0, cr0, [r0], {39}	; 0x27
    a30c:	aa147001 	bge	526318 <__RAM_SIZE+0x426318>
    a310:	13000006 	movwne	r0, #6
    a314:	000024df 	ldrdeq	r2, [r0], -pc	; <UNPREDICTABLE>
    a318:	f11a7301 			; <UNDEFINED> instruction: 0xf11a7301
    a31c:	02000005 	andeq	r0, r0, #5
    a320:	58130023 	ldmdapl	r3, {r0, r1, r5}
    a324:	01000028 	tsteq	r0, r8, lsr #32
    a328:	009a1074 	addseq	r1, sl, r4, ror r0
    a32c:	23020000 	movwcs	r0, #8192	; 0x2000
    a330:	25481304 	strbcs	r1, [r8, #-772]	; 0xfffffcfc
    a334:	75010000 	strvc	r0, [r1, #-0]
    a338:	0000c412 	andeq	ip, r0, r2, lsl r4
    a33c:	08230200 	stmdaeq	r3!, {r9}
    a340:	267c0200 	ldrbtcs	r0, [ip], -r0, lsl #4
    a344:	76010000 	strvc	r0, [r1], -r0
    a348:	00066f07 	andeq	r6, r6, r7, lsl #30
    a34c:	06aa0600 	strteq	r0, [sl], r0, lsl #12
    a350:	0c150000 	ldceq	0, cr0, [r5], {-0}
    a354:	dd097d01 	stcle	13, cr7, [r9, #-4]
    a358:	16000006 	strne	r0, [r0], -r6
    a35c:	0000251c 	andeq	r2, r0, ip, lsl r5
    a360:	631e7f01 	tstvs	lr, #1, 30
    a364:	16000006 	strne	r0, [r0], -r6
    a368:	000027df 	ldrdeq	r2, [r0], -pc	; <UNPREDICTABLE>
    a36c:	aa268401 	bge	9ab378 <__RAM_SIZE+0x8ab378>
    a370:	00000006 	andeq	r0, r0, r6
    a374:	0026cf12 	eoreq	ip, r6, r2, lsl pc
    a378:	7a011000 	bvc	4e380 <__HEAP_SIZE+0x4d380>
    a37c:	00070714 	andeq	r0, r7, r4, lsl r7
    a380:	29011300 	stmdbcs	r1, {r8, r9, ip}
    a384:	7c010000 	stcvc	0, cr0, [r1], {-0}
    a388:	0000fa14 	andeq	pc, r0, r4, lsl sl	; <UNPREDICTABLE>
    a38c:	00230200 	eoreq	r0, r3, r0, lsl #4
    a390:	01007517 	tsteq	r0, r7, lsl r5
    a394:	06bb0b86 	ldrteq	r0, [fp], r6, lsl #23
    a398:	23020000 	movwcs	r0, #8192	; 0x2000
    a39c:	0c020004 	stceq	0, cr0, [r2], {4}
    a3a0:	01000029 	tsteq	r0, r9, lsr #32
    a3a4:	06dd0787 	ldrbeq	r0, [sp], r7, lsl #15
    a3a8:	58180000 	ldmdapl	r8, {}	; <UNPREDICTABLE>
    a3ac:	01000027 	tsteq	r0, r7, lsr #32
    a3b0:	0512238f 	ldreq	r2, [r2, #-911]	; 0xfffffc71
    a3b4:	03050000 	movweq	r0, #20480	; 0x5000
    a3b8:	38008c4c 	stmdacc	r0, {r2, r3, r6, sl, fp, pc}
    a3bc:	00276a18 	eoreq	r6, r7, r8, lsl sl
    a3c0:	23900100 	orrscs	r0, r0, #0, 2
    a3c4:	00000512 	andeq	r0, r0, r2, lsl r5
    a3c8:	8c680305 	stclhi	3, cr0, [r8], #-20	; 0xffffffec
    a3cc:	db183800 	blle	6183d4 <__RAM_SIZE+0x5183d4>
    a3d0:	01000028 	tsteq	r0, r8, lsr #32
    a3d4:	07492591 			; <UNDEFINED> instruction: 0x07492591
    a3d8:	03050000 	movweq	r0, #20480	; 0x5000
    a3dc:	38008ba4 	stmdacc	r0, {r2, r5, r7, r8, r9, fp, pc}
    a3e0:	05120407 	ldreq	r0, [r2, #-1031]	; 0xfffffbf9
    a3e4:	1e180000 	cdpne	0, 1, cr0, cr8, cr0, {0}
    a3e8:	01000027 	tsteq	r0, r7, lsr #32
    a3ec:	07492592 			; <UNDEFINED> instruction: 0x07492592
    a3f0:	03050000 	movweq	r0, #20480	; 0x5000
    a3f4:	38008ba8 	stmdacc	r0, {r3, r5, r7, r8, r9, fp, pc}
    a3f8:	00257d18 	eoreq	r7, r5, r8, lsl sp
    a3fc:	2a950100 	bcs	fe54a804 <__StackTop+0xc644a804>
    a400:	0000053c 	andeq	r0, r0, ip, lsr r5
    a404:	8ce40305 	stclhi	3, cr0, [r4], #20
    a408:	6e183800 	cdpvs	8, 1, cr3, cr8, cr0, {0}
    a40c:	01000028 	tsteq	r0, r8, lsr #32
    a410:	051e2996 	ldreq	r2, [lr, #-2454]	; 0xfffff66a
    a414:	03050000 	movweq	r0, #20480	; 0x5000
    a418:	38008ce8 	stmdacc	r0, {r3, r5, r6, r7, sl, fp, pc}
    a41c:	29200119 	stmdbcs	r0!, {r0, r3, r4, r8}
    a420:	32010000 	andcc	r0, r1, #0
    a424:	00010a05 	andeq	r0, r1, r5, lsl #20
    a428:	00000000 	andeq	r0, r0, r0
    a42c:	02000000 	andeq	r0, r0, #0
    a430:	1a01007d 	bne	4a62c <__HEAP_SIZE+0x4962c>
    a434:	00255501 	eoreq	r5, r5, r1, lsl #10
    a438:	04ef0100 	strbteq	r0, [pc], #256	; a440 <__HEAP_SIZE+0x9440>
    a43c:	00fa0114 	rscseq	r0, sl, r4, lsl r1
	...
    a448:	95470000 	strbls	r0, [r7, #-0]
    a44c:	52010000 	andpl	r0, r1, #0
    a450:	1b000008 	blne	a478 <__HEAP_SIZE+0x9478>
    a454:	00002957 	andeq	r2, r0, r7, asr r9
    a458:	3d04ef01 	stccc	15, cr14, [r4, #-4]
    a45c:	000005f1 	strdeq	r0, [r0], -r1
    a460:	00009585 	andeq	r9, r0, r5, lsl #11
    a464:	0000957f 	andeq	r9, r0, pc, ror r5
    a468:	0028581b 	eoreq	r5, r8, fp, lsl r8
    a46c:	04f00100 	ldrbteq	r0, [r0], #256	; 0x100
    a470:	00009a33 	andeq	r9, r0, r3, lsr sl
    a474:	0095b800 	addseq	fp, r5, r0, lsl #16
    a478:	0095b200 	addseq	fp, r5, r0, lsl #4
    a47c:	25481b00 	strbcs	r1, [r8, #-2816]	; 0xfffff500
    a480:	f1010000 	setend	le
    a484:	00c43504 	sbceq	r3, r4, r4, lsl #10
    a488:	95eb0000 	strbls	r0, [fp, #0]!
    a48c:	95e50000 	strbls	r0, [r5, #0]!
    a490:	851b0000 	ldrhi	r0, [fp, #-0]
    a494:	01000021 	tsteq	r0, r1, lsr #32
    a498:	173704f2 			; <UNDEFINED> instruction: 0x173704f2
    a49c:	1d000001 	stcne	0, cr0, [r0, #-4]
    a4a0:	17000096 			; <UNDEFINED> instruction: 0x17000096
    a4a4:	1c000096 	stcne	0, cr0, [r0], {150}	; 0x96
    a4a8:	000028ee 	andeq	r2, r0, lr, ror #17
    a4ac:	2104f401 	tstcs	r4, r1, lsl #8	; <UNPREDICTABLE>
    a4b0:	00000707 	andeq	r0, r0, r7, lsl #14
    a4b4:	1d689102 	stfnep	f1, [r8, #-8]!
    a4b8:	00001abd 			; <UNDEFINED> instruction: 0x00001abd
    a4bc:	1804f501 	stmdane	r4, {r0, r8, sl, ip, sp, lr, pc}
    a4c0:	000000fa 	strdeq	r0, [r0], -sl
    a4c4:	0000964b 	andeq	r9, r0, fp, asr #12
    a4c8:	00009649 	andeq	r9, r0, r9, asr #12
    a4cc:	0000001e 	andeq	r0, r0, lr, lsl r0
    a4d0:	00186800 	andseq	r6, r8, r0, lsl #16
    a4d4:	51011f00 	tstpl	r1, r0, lsl #30
    a4d8:	1f007d02 	svcne	0x00007d02
    a4dc:	f3035201 	vhsub.u8	d5, d3, d1
    a4e0:	011f5301 	tsteq	pc, r1, lsl #6
    a4e4:	00300153 	eorseq	r0, r0, r3, asr r1
    a4e8:	86011a00 	strhi	r1, [r1], -r0, lsl #20
    a4ec:	01000029 	tsteq	r0, r9, lsr #32
    a4f0:	011404d1 			; <UNDEFINED> instruction: 0x011404d1
    a4f4:	000000fa 	strdeq	r0, [r0], -sl
	...
    a500:	0000965e 	andeq	r9, r0, lr, asr r6
    a504:	00090801 	andeq	r0, r9, r1, lsl #16
    a508:	29571b00 	ldmdbcs	r7, {r8, r9, fp, ip}^
    a50c:	d1010000 	mrsle	r0, (UNDEF: 1)
    a510:	05f14404 	ldrbeq	r4, [r1, #1028]!	; 0x404
    a514:	969c0000 	ldrls	r0, [ip], r0
    a518:	96960000 	ldrls	r0, [r6], r0
    a51c:	581b0000 	ldmdapl	fp, {}	; <UNPREDICTABLE>
    a520:	01000028 	tsteq	r0, r8, lsr #32
    a524:	9a3a04d2 	bls	e8b874 <__RAM_SIZE+0xd8b874>
    a528:	cf000000 	svcgt	0x00000000
    a52c:	c9000096 	stmdbgt	r0, {r1, r2, r4, r7}
    a530:	1b000096 	blne	a790 <__HEAP_SIZE+0x9790>
    a534:	00002548 	andeq	r2, r0, r8, asr #10
    a538:	3c04d301 	stccc	3, cr13, [r4], {1}
    a53c:	000000c4 	andeq	r0, r0, r4, asr #1
    a540:	00009702 	andeq	r9, r0, r2, lsl #14
    a544:	000096fc 	strdeq	r9, [r0], -ip
    a548:	000b951b 	andeq	r9, fp, fp, lsl r5
    a54c:	04d40100 	ldrbeq	r0, [r4], #256	; 0x100
    a550:	00090840 	andeq	r0, r9, r0, asr #16
    a554:	00973400 	addseq	r3, r7, r0, lsl #8
    a558:	00972e00 	addseq	r2, r7, r0, lsl #28
    a55c:	28ee1c00 	stmiacs	lr!, {sl, fp, ip}^
    a560:	d6010000 	strle	r0, [r1], -r0
    a564:	07072104 	streq	r2, [r7, -r4, lsl #2]
    a568:	91020000 	mrsls	r0, (UNDEF: 2)
    a56c:	1abd1d68 	bne	fef51b14 <__StackTop+0xc6e51b14>
    a570:	d7010000 	strle	r0, [r1, -r0]
    a574:	00fa1804 	rscseq	r1, sl, r4, lsl #16
    a578:	97620000 	strbls	r0, [r2, -r0]!
    a57c:	97600000 	strbls	r0, [r0, -r0]!
    a580:	001e0000 	andseq	r0, lr, r0
    a584:	77000000 	strvc	r0, [r0, -r0]
    a588:	1f000018 	svcne	0x00000018
    a58c:	7d025101 	stfvcs	f5, [r2, #-4]
    a590:	52011f00 	andpl	r1, r1, #0, 30
    a594:	5301f303 	movwpl	pc, #4867	; 0x1303	; <UNPREDICTABLE>
    a598:	0153011f 	cmpeq	r3, pc, lsl r1
    a59c:	07000030 	smladxeq	r0, r0, r0, r0
    a5a0:	0000fa04 	andeq	pc, r0, r4, lsl #20
    a5a4:	09080600 	stmdbeq	r8, {r9, sl}
    a5a8:	01200000 			; <UNDEFINED> instruction: 0x01200000
    a5ac:	000027f3 	strdeq	r2, [r0], -r3
    a5b0:	0a04bc01 	beq	1395bc <__RAM_SIZE+0x395bc>
    a5b4:	00000001 	andeq	r0, r0, r1
    a5b8:	00000000 	andeq	r0, r0, r0
    a5bc:	00977500 	addseq	r7, r7, r0, lsl #10
    a5c0:	09810100 	stmibeq	r1, {r8}
    a5c4:	421b0000 	andsmi	r0, fp, #0
    a5c8:	01000029 	tsteq	r0, r9, lsr #32
    a5cc:	542a04bc 	strtpl	r0, [sl], #-1212	; 0xfffffb44
    a5d0:	99000005 	stmdbls	r0, {r0, r2}
    a5d4:	95000097 	strls	r0, [r0, #-151]	; 0xffffff69
    a5d8:	1b000097 	blne	a83c <__HEAP_SIZE+0x983c>
    a5dc:	00002813 	andeq	r2, r0, r3, lsl r8
    a5e0:	2304bd01 	movwcs	fp, #19713	; 0x4d01
    a5e4:	0000009a 	muleq	r0, sl, r0
    a5e8:	000097bb 			; <UNDEFINED> instruction: 0x000097bb
    a5ec:	000097b7 			; <UNDEFINED> instruction: 0x000097b7
    a5f0:	0029411d 	eoreq	r4, r9, sp, lsl r1
    a5f4:	04bf0100 	ldrteq	r0, [pc], #256	; a5fc <__HEAP_SIZE+0x95fc>
    a5f8:	00065e19 	andeq	r5, r6, r9, lsl lr
    a5fc:	0097dd00 	addseq	sp, r7, r0, lsl #26
    a600:	0097d900 	addseq	sp, r7, r0, lsl #18
    a604:	00002100 	andeq	r2, r0, r0, lsl #2
    a608:	18860000 	stmne	r6, {}	; <UNPREDICTABLE>
    a60c:	00210000 	eoreq	r0, r1, r0
    a610:	94000000 	strls	r0, [r0], #-0
    a614:	00000018 	andeq	r0, r0, r8, lsl r0
    a618:	26e4011a 	usatcs	r0, #4, sl, lsl #2
    a61c:	a7010000 	strge	r0, [r1, -r0]
    a620:	9a010c04 	bls	4d638 <__HEAP_SIZE+0x4c638>
	...
    a62c:	fb000000 	blx	a636 <__HEAP_SIZE+0x9636>
    a630:	01000097 	swpeq	r0, r7, [r0]	; <UNPREDICTABLE>
    a634:	000009f3 	strdeq	r0, [r0], -r3
    a638:	0029421b 	eoreq	r4, r9, fp, lsl r2
    a63c:	04a70100 	strteq	r0, [r7], #256	; 0x100
    a640:	00056033 	andeq	r6, r5, r3, lsr r0
    a644:	00982100 	addseq	r2, r8, r0, lsl #2
    a648:	00981b00 	addseq	r1, r8, r0, lsl #22
    a64c:	29411d00 	stmdbcs	r1, {r8, sl, fp, ip}^
    a650:	a9010000 	stmdbge	r1, {}	; <UNPREDICTABLE>
    a654:	065e1904 	ldrbeq	r1, [lr], -r4, lsl #18
    a658:	98530000 	ldmdals	r3, {}^	; <UNPREDICTABLE>
    a65c:	984d0000 	stmdals	sp, {}^	; <UNPREDICTABLE>
    a660:	a51d0000 	ldrge	r0, [sp, #-0]
    a664:	01000026 	tsteq	r0, r6, lsr #32
    a668:	9a1004aa 	bls	40b918 <__RAM_SIZE+0x30b918>
    a66c:	81000000 	mrshi	r0, (UNDEF: 0)
    a670:	7f000098 	svcvc	0x00000098
    a674:	21000098 	swpcs	r0, r8, [r0]	; <UNPREDICTABLE>
    a678:	00000000 	andeq	r0, r0, r0
    a67c:	00001886 	andeq	r1, r0, r6, lsl #17
    a680:	00000021 	andeq	r0, r0, r1, lsr #32
    a684:	00189400 	andseq	r9, r8, r0, lsl #8
    a688:	011a0000 	tsteq	sl, r0
    a68c:	000026ae 	andeq	r2, r0, lr, lsr #13
    a690:	10048a01 	andne	r8, r4, r1, lsl #20
    a694:	0000fa01 	andeq	pc, r0, r1, lsl #20
	...
    a6a0:	00989400 	addseq	r9, r8, r0, lsl #8
    a6a4:	0a650100 	beq	194aaac <__RAM_SIZE+0x184aaac>
    a6a8:	421b0000 	andsmi	r0, fp, #0
    a6ac:	01000029 	tsteq	r0, r9, lsr #32
    a6b0:	5433048a 	ldrtpl	r0, [r3], #-1162	; 0xfffffb76
    a6b4:	be000005 	cdplt	0, 0, cr0, cr0, cr5, {0}
    a6b8:	b4000098 	strlt	r0, [r0], #-152	; 0xffffff68
    a6bc:	1d000098 	stcne	0, cr0, [r0, #-608]	; 0xfffffda0
    a6c0:	00001abd 			; <UNDEFINED> instruction: 0x00001abd
    a6c4:	14048c01 	strne	r8, [r4], #-3073	; 0xfffff3ff
    a6c8:	000000fa 	strdeq	r0, [r0], -sl
    a6cc:	00009905 	andeq	r9, r0, r5, lsl #18
    a6d0:	00009903 	andeq	r9, r0, r3, lsl #18
    a6d4:	0029411d 	eoreq	r4, r9, sp, lsl r1
    a6d8:	048d0100 	streq	r0, [sp], #256	; 0x100
    a6dc:	00065813 	andeq	r5, r6, r3, lsl r8
    a6e0:	00992200 	addseq	r2, r9, r0, lsl #4
    a6e4:	00991800 	addseq	r1, r9, r0, lsl #16
    a6e8:	00002100 	andeq	r2, r0, r0, lsl #2
    a6ec:	18860000 	stmne	r6, {}	; <UNPREDICTABLE>
    a6f0:	00210000 	eoreq	r0, r1, r0
    a6f4:	94000000 	strls	r0, [r0], #-0
    a6f8:	00000018 	andeq	r0, r0, r8, lsl r0
    a6fc:	0025ef22 	eoreq	lr, r5, r2, lsr #30
    a700:	04570100 	ldrbeq	r0, [r7], #-256	; 0xffffff00
    a704:	32580111 	subscc	r0, r8, #1073741828	; 0x40000004
    a708:	32b81000 	adcscc	r1, r8, #0
    a70c:	99671000 	stmdbls	r7!, {ip}^
    a710:	17010000 	strne	r0, [r1, -r0]
    a714:	2300000b 	movwcs	r0, #11
    a718:	10003286 	andne	r3, r0, r6, lsl #5
    a71c:	1000329a 	mulne	r0, sl, r2
    a720:	00000ae0 	andeq	r0, r0, r0, ror #21
    a724:	00250a1c 	eoreq	r0, r5, ip, lsl sl
    a728:	04690100 	strbteq	r0, [r9], #-256	; 0xffffff00
    a72c:	0003cb3a 	andeq	ip, r3, sl, lsr fp
    a730:	88030500 	stmdahi	r3, {r8, sl}
    a734:	1c38008c 	ldcne	0, cr0, [r8], #-560	; 0xfffffdd0
    a738:	0000283e 	andeq	r2, r0, lr, lsr r8
    a73c:	34046a01 	strcc	r6, [r4], #-2561	; 0xfffff5ff
    a740:	00000b17 	andeq	r0, r0, r7, lsl fp
    a744:	8bac0305 	blhi	feb0b360 <__StackTop+0xc6a0b360>
    a748:	961e3800 	ldrls	r3, [lr], -r0, lsl #16
    a74c:	a2100032 	andsge	r0, r0, #50	; 0x32
    a750:	1f000018 	svcne	0x00000018
    a754:	3a015001 	bcc	5e760 <__HEAP_SIZE+0x5d760>
    a758:	0151011f 	cmpeq	r1, pc, lsl r1
    a75c:	52011f40 	andpl	r1, r1, #64, 30	; 0x100
    a760:	8bac0305 	blhi	feb0b37c <__StackTop+0xc6a0b37c>
    a764:	011f3800 	tsteq	pc, r0, lsl #16
    a768:	88030553 	stmdahi	r3, {r0, r1, r4, r6, r8, sl}
    a76c:	1f38008c 	svcne	0x0038008c
    a770:	01007d02 	tsteq	r0, r2, lsl #26
    a774:	21000030 	tstcs	r0, r0, lsr r0
    a778:	10003260 	andne	r3, r0, r0, ror #4
    a77c:	00001886 	andeq	r1, r0, r6, lsl #17
    a780:	00326a21 	eorseq	r6, r2, r1, lsr #20
    a784:	00189410 	andseq	r9, r8, r0, lsl r4
    a788:	32762400 	rsbscc	r2, r6, #0, 8
    a78c:	18b11000 	ldmne	r1!, {ip}
    a790:	0b060000 	bleq	18a798 <__RAM_SIZE+0x8a798>
    a794:	011f0000 	tsteq	pc, r0
    a798:	00750250 	rsbseq	r0, r5, r0, asr r2
    a79c:	327e1e00 	rsbscc	r1, lr, #0, 28
    a7a0:	18b11000 	ldmne	r1!, {ip}
    a7a4:	011f0000 	tsteq	pc, r0
    a7a8:	00740250 	rsbseq	r0, r4, r0, asr r2
    a7ac:	b80c0000 	stmdalt	ip, {}	; <UNPREDICTABLE>
    a7b0:	27000000 	strcs	r0, [r0, -r0]
    a7b4:	0d00000b 	stceq	0, cr0, [r0, #-44]	; 0xffffffd4
    a7b8:	00000035 	andeq	r0, r0, r5, lsr r0
    a7bc:	1b22009f 	blne	88aa40 <__RAM_SIZE+0x78aa40>
    a7c0:	01000028 	tsteq	r0, r8, lsr #32
    a7c4:	0111043e 	tsteq	r1, lr, lsr r4
    a7c8:	10003084 	andne	r3, r0, r4, lsl #1
    a7cc:	100030b4 	strhne	r3, [r0], -r4
    a7d0:	000099ab 	andeq	r9, r0, fp, lsr #19
    a7d4:	000b7d01 	andeq	r7, fp, r1, lsl #26
    a7d8:	288c1d00 	stmcs	ip, {r8, sl, fp, ip}
    a7dc:	40010000 	andmi	r0, r1, r0
    a7e0:	01171404 	tsteq	r7, r4, lsl #8
    a7e4:	99cd0000 	stmibls	sp, {}^	; <UNPREDICTABLE>
    a7e8:	99cb0000 	stmibls	fp, {}^	; <UNPREDICTABLE>
    a7ec:	4c1d0000 	ldcmi	0, cr0, [sp], {-0}
    a7f0:	01000019 	tsteq	r0, r9, lsl r0
    a7f4:	49120441 	ldmdbmi	r2, {r0, r6, sl}
    a7f8:	e5000007 	str	r0, [r0, #-7]
    a7fc:	e1000099 	swp	r0, r9, [r0]	; <UNPREDICTABLE>
    a800:	1e000099 	mcrne	0, 0, r0, cr0, cr9, {4}
    a804:	10003094 	mulne	r0, r4, r0
    a808:	00000f90 	muleq	r0, r0, pc	; <UNPREDICTABLE>
    a80c:	0251011f 	subseq	r0, r1, #-1073741817	; 0xc0000007
    a810:	0000ff09 	andeq	pc, r0, r9, lsl #30
    a814:	0028a525 	eoreq	sl, r8, r5, lsr #10
    a818:	03aa0100 			; <UNDEFINED> instruction: 0x03aa0100
    a81c:	31480111 	cmpcc	r8, r1, lsl r1
    a820:	32401000 	subcc	r1, r0, #0
    a824:	9a071000 	bls	1ce82c <__RAM_SIZE+0xce82c>
    a828:	bb010000 	bllt	4a830 <__HEAP_SIZE+0x49830>
    a82c:	1c00000c 	stcne	0, cr0, [r0], {12}
    a830:	000028ee 	andeq	r2, r0, lr, ror #17
    a834:	1d03ac01 	stcne	12, cr10, [r3, #-4]
    a838:	00000707 	andeq	r0, r0, r7, lsl #14
    a83c:	1d609102 	stfnep	f1, [r0, #-8]!
    a840:	00002941 	andeq	r2, r0, r1, asr #18
    a844:	1303ad01 	movwne	sl, #15617	; 0x3d01
    a848:	00000658 	andeq	r0, r0, r8, asr r6
    a84c:	00009a41 	andeq	r9, r0, r1, asr #20
    a850:	00009a3f 	andeq	r9, r0, pc, lsr sl
    a854:	002a431c 	eoreq	r4, sl, ip, lsl r3
    a858:	03ae0100 			; <UNDEFINED> instruction: 0x03ae0100
    a85c:	0000fa14 	andeq	pc, r0, r4, lsl sl	; <UNPREDICTABLE>
    a860:	5c910200 	lfmpl	f0, 4, [r1], {0}
    a864:	0025011d 	eoreq	r0, r5, sp, lsl r1
    a868:	03af0100 			; <UNDEFINED> instruction: 0x03af0100
    a86c:	00011714 	andeq	r1, r1, r4, lsl r7
    a870:	009a6000 	addseq	r6, sl, r0
    a874:	009a5400 	addseq	r5, sl, r0, lsl #8
    a878:	31742300 	cmncc	r4, r0, lsl #6
    a87c:	317c1000 	cmncc	ip, r0
    a880:	0c051000 	stceq	0, cr1, [r5], {-0}
    a884:	221d0000 	andscs	r0, sp, #0
    a888:	0100002a 	tsteq	r0, sl, lsr #32
    a88c:	c13803b9 	teqgt	r8, r9	; <illegal shifter operand>
    a890:	ac00000c 	stcge	0, cr0, [r0], {12}
    a894:	aa00009a 	bge	ab04 <__HEAP_SIZE+0x9b04>
    a898:	0000009a 	muleq	r0, sl, r0
    a89c:	00316a24 	eorseq	r6, r1, r4, lsr #20
    a8a0:	0018c010 	andseq	ip, r8, r0, lsl r0
    a8a4:	000c1e00 	andeq	r1, ip, r0, lsl #28
    a8a8:	51011f00 	tstpl	r1, r0, lsl #30
    a8ac:	1f609102 	svcne	0x00609102
    a8b0:	30015201 	andcc	r5, r1, r1, lsl #4
    a8b4:	318a2400 	orrcc	r2, sl, r0, lsl #8
    a8b8:	18cf1000 	stmiane	pc, {ip}^	; <UNPREDICTABLE>
    a8bc:	0c320000 	ldceq	0, cr0, [r2], #-0
    a8c0:	011f0000 	tsteq	pc, r0
    a8c4:	04740250 	ldrbteq	r0, [r4], #-592	; 0xfffffdb0
    a8c8:	31902400 	orrscc	r2, r0, r0, lsl #8
    a8cc:	0d791000 	ldcleq	0, cr1, [r9, #-0]
    a8d0:	0c460000 	mareq	acc0, r0, r6
    a8d4:	011f0000 	tsteq	pc, r0
    a8d8:	5c910250 	lfmpl	f0, 4, [r1], {80}	; 0x50
    a8dc:	31c22400 	biccc	r2, r2, r0, lsl #8
    a8e0:	0cc61000 	stcleq	0, cr1, [r6], {0}
    a8e4:	0c600000 	stcleq	0, cr0, [r0], #-0
    a8e8:	011f0000 	tsteq	pc, r0
    a8ec:	00740250 	rsbseq	r0, r4, r0, asr r2
    a8f0:	0252011f 	subseq	r0, r2, #-1073741817	; 0xc0000007
    a8f4:	26000075 			; <UNDEFINED> instruction: 0x26000075
    a8f8:	100031de 	ldrdne	r3, [r0], -lr
    a8fc:	00000c70 	andeq	r0, r0, r0, ror ip
    a900:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    a904:	24000074 	strcs	r0, [r0], #-116	; 0xffffff8c
    a908:	100031ee 	andne	r3, r0, lr, ror #3
    a90c:	0000102b 	andeq	r1, r0, fp, lsr #32
    a910:	00000c8a 	andeq	r0, r0, sl, lsl #25
    a914:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    a918:	011f0074 	tsteq	pc, r4, ror r0	; <UNPREDICTABLE>
    a91c:	00750252 	rsbseq	r0, r5, r2, asr r2
    a920:	321a2400 	andscc	r2, sl, #0, 8
    a924:	0cc61000 	stcleq	0, cr1, [r6], {0}
    a928:	0caa0000 	stceq	0, cr0, [sl]
    a92c:	011f0000 	tsteq	pc, r0
    a930:	00740250 	rsbseq	r0, r4, r0, asr r2
    a934:	0252011f 	subseq	r0, r2, #-1073741817	; 0xc0000007
    a938:	011f0075 	tsteq	pc, r5, ror r0	; <UNPREDICTABLE>
    a93c:	00750253 	rsbseq	r0, r5, r3, asr r2
    a940:	32361e00 	eorscc	r1, r6, #0, 28
    a944:	18de1000 	ldmne	lr, {ip}^
    a948:	011f0000 	tsteq	pc, r0
    a94c:	00740250 	rsbseq	r0, r4, r0, asr r2
    a950:	04070000 	streq	r0, [r7], #-0
    a954:	000006b6 			; <UNDEFINED> instruction: 0x000006b6
    a958:	000cbb06 	andeq	fp, ip, r6, lsl #22
    a95c:	277c2700 	ldrbcs	r2, [ip, -r0, lsl #14]!
    a960:	7e010000 	cdpvc	0, 0, cr0, cr1, cr0, {0}
    a964:	fa011703 	blx	50578 <__HEAP_SIZE+0x4f578>
    a968:	d4000000 	strle	r0, [r0], #-0
    a96c:	1c10002f 	ldcne	0, cr0, [r0], {47}	; 0x2f
    a970:	c1100030 	tstgt	r0, r0, lsr r0
    a974:	0100009a 	swpeq	r0, sl, [r0]	; <UNPREDICTABLE>
    a978:	00000d79 	andeq	r0, r0, r9, ror sp
    a97c:	0029411b 	eoreq	r4, r9, fp, lsl r1
    a980:	037e0100 	cmneq	lr, #0, 2
    a984:	00065e43 	andeq	r5, r6, r3, asr #28
    a988:	009af500 	addseq	pc, sl, r0, lsl #10
    a98c:	009ae100 	addseq	lr, sl, r0, lsl #2
    a990:	29d31b00 	ldmibcs	r3, {r8, r9, fp, ip}^
    a994:	7f010000 	svcvc	0x00010000
    a998:	01234403 			; <UNDEFINED> instruction: 0x01234403
    a99c:	9b910000 	blls	fe44a9a4 <__StackTop+0xc634a9a4>
    a9a0:	9b7b0000 	blls	1eca9a8 <__RAM_SIZE+0x1dca9a8>
    a9a4:	011b0000 	tsteq	fp, r0
    a9a8:	01000025 	tsteq	r0, r5, lsr #32
    a9ac:	23440380 	movtcs	r0, #17280	; 0x4380
    a9b0:	29000001 	stmdbcs	r0, {r0}
    a9b4:	1f00009c 	svcne	0x0000009c
    a9b8:	1b00009c 	blne	ac30 <__HEAP_SIZE+0x9c30>
    a9bc:	000024be 			; <UNDEFINED> instruction: 0x000024be
    a9c0:	44038101 	strmi	r8, [r3], #-257	; 0xfffffeff
    a9c4:	00000123 	andeq	r0, r0, r3, lsr #2
    a9c8:	00009c78 	andeq	r9, r0, r8, ror ip
    a9cc:	00009c6e 	andeq	r9, r0, lr, ror #24
    a9d0:	0025de1d 	eoreq	sp, r5, sp, lsl lr
    a9d4:	03830100 	orreq	r0, r3, #0, 2
    a9d8:	0000fa14 	andeq	pc, r0, r4, lsl sl	; <UNPREDICTABLE>
    a9dc:	009cc300 	addseq	ip, ip, r0, lsl #6
    a9e0:	009cbd00 	addseq	fp, ip, r0, lsl #26
    a9e4:	2ff42400 	svccs	0x00f42400
    a9e8:	18ec1000 	stmiane	ip!, {ip}^
    a9ec:	0d650000 	stcleq	0, cr0, [r5, #-0]
    a9f0:	011f0000 	tsteq	pc, r0
    a9f4:	01f30551 	mvnseq	r0, r1, asr r5
    a9f8:	00042350 	andeq	r2, r4, r0, asr r3
    a9fc:	00300a1e 	eorseq	r0, r0, lr, lsl sl
    aa00:	0018ec10 	andseq	lr, r8, r0, lsl ip
    aa04:	51011f00 	tstpl	r1, r0, lsl #30
    aa08:	5001f305 	andpl	pc, r1, r5, lsl #6
    aa0c:	00000423 	andeq	r0, r0, r3, lsr #8
    aa10:	0027ce27 	eoreq	ip, r7, r7, lsr #28
    aa14:	03670100 	cmneq	r7, #0, 2
    aa18:	01170117 	tsteq	r7, r7, lsl r1
    aa1c:	30b40000 	adcscc	r0, r4, r0
    aa20:	30e01000 	rsccc	r1, r0, r0
    aa24:	9cef1000 	stclls	0, cr1, [pc]	; aa2c <__HEAP_SIZE+0x9a2c>
    aa28:	e8010000 	stmda	r1, {}	; <UNPREDICTABLE>
    aa2c:	1b00000d 	blne	aa68 <__HEAP_SIZE+0x9a68>
    aa30:	00002a42 	andeq	r2, r0, r2, asr #20
    aa34:	3c036701 	stccc	7, cr6, [r3], {1}
    aa38:	0000090e 	andeq	r0, r0, lr, lsl #18
    aa3c:	00009d13 	andeq	r9, r0, r3, lsl sp
    aa40:	00009d0f 	andeq	r9, r0, pc, lsl #26
    aa44:	0025011d 	eoreq	r0, r5, sp, lsl r1
    aa48:	03690100 	cmneq	r9, #0, 2
    aa4c:	00011714 	andeq	r1, r1, r4, lsl r7
    aa50:	009d3900 	addseq	r3, sp, r0, lsl #18
    aa54:	009d3100 	addseq	r3, sp, r0, lsl #2
    aa58:	28c01c00 	stmiacs	r0, {sl, fp, ip}^
    aa5c:	6a010000 	bvs	4aa64 <__HEAP_SIZE+0x49a64>
    aa60:	01172b03 	tsteq	r7, r3, lsl #22
    aa64:	03050000 	movweq	r0, #20480	; 0x5000
    aa68:	38008c84 	stmdacc	r0, {r2, r7, sl, fp, pc}
    aa6c:	0030bc21 	eorseq	fp, r0, r1, lsr #24
    aa70:	0018fb10 	andseq	pc, r8, r0, lsl fp	; <UNPREDICTABLE>
    aa74:	30d62100 	sbcscc	r2, r6, r0, lsl #2
    aa78:	0b271000 	bleq	9cea80 <__RAM_SIZE+0x8cea80>
    aa7c:	28000000 	stmdacs	r0, {}	; <UNPREDICTABLE>
    aa80:	00002a2d 	andeq	r2, r0, sp, lsr #20
    aa84:	17034c01 	strne	r4, [r3, -r1, lsl #24]
    aa88:	00011701 	andeq	r1, r1, r1, lsl #14
    aa8c:	002fb400 	eoreq	fp, pc, r0, lsl #8
    aa90:	002fd410 	eoreq	sp, pc, r0, lsl r4	; <UNPREDICTABLE>
    aa94:	007d0210 	rsbseq	r0, sp, r0, lsl r2
    aa98:	000e3101 	andeq	r3, lr, r1, lsl #2
    aa9c:	24f21b00 	ldrbtcs	r1, [r2], #2816	; 0xb00
    aaa0:	4c010000 	stcmi	0, cr0, [r1], {-0}
    aaa4:	090e4003 	stmdbeq	lr, {r0, r1, lr}
    aaa8:	9d750000 	ldclls	0, cr0, [r5, #-0]
    aaac:	9d6d0000 	stclls	0, cr0, [sp, #-0]
    aab0:	8c1d0000 	ldchi	0, cr0, [sp], {-0}
    aab4:	01000028 	tsteq	r0, r8, lsr #32
    aab8:	1714034e 	ldrne	r0, [r4, -lr, asr #6]
    aabc:	b3000001 	movwlt	r0, #1
    aac0:	af00009d 	svcge	0x0000009d
    aac4:	0000009d 	muleq	r0, sp, r0
    aac8:	0029a422 	eoreq	sl, r9, r2, lsr #8
    aacc:	030e0100 	movweq	r0, #57600	; 0xe100
    aad0:	30e00111 	rsccc	r0, r0, r1, lsl r1
    aad4:	31481000 	mrscc	r1, (UNDEF: 72)
    aad8:	9dd21000 	ldclls	0, cr1, [r2]
    aadc:	14010000 	strne	r0, [r1], #-0
    aae0:	1b00000f 	blne	ab24 <__HEAP_SIZE+0x9b24>
    aae4:	0000288c 	andeq	r2, r0, ip, lsl #17
    aae8:	3e030e01 	cdpcc	14, 0, cr0, cr3, cr1, {0}
    aaec:	00000123 	andeq	r0, r0, r3, lsr #2
    aaf0:	00009e1a 	andeq	r9, r0, sl, lsl lr
    aaf4:	00009e16 	andeq	r9, r0, r6, lsl lr
    aaf8:	0024f31b 	eoreq	pc, r4, fp, lsl r3	; <UNPREDICTABLE>
    aafc:	030f0100 	movweq	r0, #61696	; 0xf100
    ab00:	0000fa38 	andeq	pc, r0, r8, lsr sl	; <UNPREDICTABLE>
    ab04:	009e4000 	addseq	r4, lr, r0
    ab08:	009e3800 	addseq	r3, lr, r0, lsl #16
    ab0c:	25011d00 	strcs	r1, [r1, #-3328]	; 0xfffff300
    ab10:	11010000 	mrsne	r0, (UNDEF: 1)
    ab14:	01171403 	tsteq	r7, r3, lsl #8
    ab18:	9e850000 	cdpls	0, 8, cr0, cr5, cr0, {0}
    ab1c:	9e770000 	cdpls	0, 7, cr0, cr7, cr0, {0}
    ab20:	431c0000 	tstmi	ip, #0
    ab24:	0100002a 	tsteq	r0, sl, lsr #32
    ab28:	fa140312 	blx	50b778 <__RAM_SIZE+0x40b778>
    ab2c:	02000000 	andeq	r0, r0, #0
    ab30:	ec216c91 	stc	12, cr6, [r1], #-580	; 0xfffffdbc
    ab34:	0a100030 	beq	40abfc <__RAM_SIZE+0x30abfc>
    ab38:	24000019 	strcs	r0, [r0], #-25	; 0xffffffe7
    ab3c:	100030f2 	strdne	r3, [r0], -r2
    ab40:	00000d79 	andeq	r0, r0, r9, ror sp
    ab44:	00000eb8 			; <UNDEFINED> instruction: 0x00000eb8
    ab48:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    ab4c:	24006c91 	strcs	r6, [r0], #-3217	; 0xfffff36f
    ab50:	10003116 	andne	r3, r0, r6, lsl r1
    ab54:	00001919 	andeq	r1, r0, r9, lsl r9
    ab58:	00000ed5 	ldrdeq	r0, [r0], -r5
    ab5c:	0551011f 	ldrbeq	r0, [r1, #-287]	; 0xfffffee1
    ab60:	00750076 	rsbseq	r0, r5, r6, ror r0
    ab64:	52011f1c 	andpl	r1, r1, #28, 30	; 0x70
    ab68:	00007402 	andeq	r7, r0, r2, lsl #8
    ab6c:	00311a21 	eorseq	r1, r1, r1, lsr #20
    ab70:	00192810 	andseq	r2, r9, r0, lsl r8
    ab74:	31242100 			; <UNDEFINED> instruction: 0x31242100
    ab78:	19281000 	stmdbne	r8!, {ip}
    ab7c:	2c240000 	stccs	0, cr0, [r4], #-0
    ab80:	90100031 	andsls	r0, r0, r1, lsr r0
    ab84:	0100000f 	tsteq	r0, pc
    ab88:	1f00000f 	svcne	0x0000000f
    ab8c:	76025001 	strvc	r5, [r2], -r1
    ab90:	51011f00 	tstpl	r1, r0, lsl #30
    ab94:	00007502 	andeq	r7, r0, r2, lsl #10
    ab98:	00313621 	eorseq	r3, r1, r1, lsr #12
    ab9c:	00193710 	andseq	r3, r9, r0, lsl r7
    aba0:	313c2100 	teqcc	ip, r0, lsl #2
    aba4:	19281000 	stmdbne	r8!, {ip}
    aba8:	22000000 	andcs	r0, r0, #0
    abac:	0000287f 	andeq	r2, r0, pc, ror r8
    abb0:	0c02ec01 	stceq	12, cr14, [r2], {1}
    abb4:	00324001 	eorseq	r4, r2, r1
    abb8:	00325610 	eorseq	r5, r2, r0, lsl r6
    abbc:	009eda10 	addseq	sp, lr, r0, lsl sl
    abc0:	0f900100 	svceq	0x00900100
    abc4:	281b0000 	ldmdacs	fp, {}	; <UNPREDICTABLE>
    abc8:	0100001f 	tsteq	r0, pc, lsl r0
    abcc:	9a0c02ec 	bls	30b784 <__RAM_SIZE+0x20b784>
    abd0:	0a000000 	beq	abd8 <__HEAP_SIZE+0x9bd8>
    abd4:	0600009f 			; <UNDEFINED> instruction: 0x0600009f
    abd8:	1d00009f 	stcne	0, cr0, [r0, #-636]	; 0xfffffd84
    abdc:	0000288c 	andeq	r2, r0, ip, lsl #17
    abe0:	1402ee01 	strne	lr, [r2], #-3585	; 0xfffff1ff
    abe4:	00000117 	andeq	r0, r0, r7, lsl r1
    abe8:	00009f2d 	andeq	r9, r0, sp, lsr #30
    abec:	00009f2b 	andeq	r9, r0, fp, lsr #30
    abf0:	0024f31c 	eoreq	pc, r4, ip, lsl r3	; <UNPREDICTABLE>
    abf4:	02ef0100 	rsceq	r0, pc, #0, 2
    abf8:	0000fa14 	andeq	pc, r0, r4, lsl sl	; <UNPREDICTABLE>
    abfc:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    ac00:	00324a24 	eorseq	r4, r2, r4, lsr #20
    ac04:	000de810 	andeq	lr, sp, r0, lsl r8
    ac08:	000f7d00 	andeq	r7, pc, r0, lsl #26
    ac0c:	50011f00 	andpl	r1, r1, r0, lsl #30
    ac10:	00749102 	rsbseq	r9, r4, r2, lsl #2
    ac14:	00325021 	eorseq	r5, r2, r1, lsr #32
    ac18:	000e3110 	andeq	r3, lr, r0, lsl r1
    ac1c:	32542100 	subscc	r2, r4, #0, 2
    ac20:	0b7d1000 	bleq	1f4ec28 <__RAM_SIZE+0x1e4ec28>
    ac24:	22000000 	andcs	r0, r0, #0
    ac28:	00002665 	andeq	r2, r0, r5, ror #12
    ac2c:	1102ce01 	tstne	r2, r1, lsl #28
    ac30:	00304401 	eorseq	r4, r0, r1, lsl #8
    ac34:	00308410 	eorseq	r8, r0, r0, lsl r4
    ac38:	009f4010 	addseq	r4, pc, r0, lsl r0	; <UNPREDICTABLE>
    ac3c:	102b0100 	eorne	r0, fp, r0, lsl #2
    ac40:	8c1b0000 	ldchi	0, cr0, [fp], {-0}
    ac44:	01000028 	tsteq	r0, r8, lsr #32
    ac48:	233a02ce 	teqcs	sl, #-536870900	; 0xe000000c
    ac4c:	64000001 	strvs	r0, [r0], #-1
    ac50:	6000009f 	mulvs	r0, pc, r0	; <UNPREDICTABLE>
    ac54:	1b00009f 	blne	aed8 <__HEAP_SIZE+0x9ed8>
    ac58:	00002501 	andeq	r2, r0, r1, lsl #10
    ac5c:	3a02cf01 	bcc	be868 <__HEAP_SIZE+0xbd868>
    ac60:	00000123 	andeq	r0, r0, r3, lsr #2
    ac64:	00009f86 	andeq	r9, r0, r6, lsl #31
    ac68:	00009f82 	andeq	r9, r0, r2, lsl #31
    ac6c:	0029411d 	eoreq	r4, r9, sp, lsl r1
    ac70:	02d40100 	sbcseq	r0, r4, #0, 2
    ac74:	00065e19 	andeq	r5, r6, r9, lsl lr
    ac78:	009fa600 	addseq	sl, pc, r0, lsl #12
    ac7c:	009fa400 	addseq	sl, pc, r0, lsl #8
    ac80:	30582400 	subscc	r2, r8, r0, lsl #8
    ac84:	18cf1000 	stmiane	pc, {ip}^	; <UNPREDICTABLE>
    ac88:	0ffe0000 	svceq	0x00fe0000
    ac8c:	011f0000 	tsteq	pc, r0
    ac90:	04740250 	ldrbteq	r0, [r4], #-592	; 0xfffffdb0
    ac94:	30702600 	rsbscc	r2, r0, r0, lsl #12
    ac98:	100e1000 	andne	r1, lr, r0
    ac9c:	011f0000 	tsteq	pc, r0
    aca0:	00740250 	rsbseq	r0, r4, r0, asr r2
    aca4:	307c1e00 	rsbscc	r1, ip, r0, lsl #28
    aca8:	102b1000 	eorne	r1, fp, r0
    acac:	011f0000 	tsteq	pc, r0
    acb0:	00740250 	rsbseq	r0, r4, r0, asr r2
    acb4:	0251011f 	subseq	r0, r1, #-1073741817	; 0xc0000007
    acb8:	011f0075 	tsteq	pc, r5, ror r0	; <UNPREDICTABLE>
    acbc:	00760252 	rsbseq	r0, r6, r2, asr r2
    acc0:	2f220000 	svccs	0x00220000
    acc4:	01000028 	tsteq	r0, r8, lsr #32
    acc8:	011102bb 			; <UNDEFINED> instruction: 0x011102bb
    accc:	1000301c 	andne	r3, r0, ip, lsl r0
    acd0:	10003044 	andne	r3, r0, r4, asr #32
    acd4:	00009fb9 			; <UNDEFINED> instruction: 0x00009fb9
    acd8:	0010b201 	andseq	fp, r0, r1, lsl #4
    acdc:	29411b00 	stmdbcs	r1, {r8, r9, fp, ip}^
    ace0:	bb010000 	bllt	4ace8 <__HEAP_SIZE+0x49ce8>
    ace4:	065e3102 	ldrbeq	r3, [lr], -r2, lsl #2
    ace8:	9fdd0000 	svcls	0x00dd0000
    acec:	9fd90000 	svcls	0x00d90000
    acf0:	c21b0000 	andsgt	r0, fp, #0
    acf4:	01000026 	tsteq	r0, r6, lsr #32
    acf8:	172c02bc 			; <UNDEFINED> instruction: 0x172c02bc
    acfc:	ff000001 			; <UNDEFINED> instruction: 0xff000001
    ad00:	fb00009f 	blx	af86 <__HEAP_SIZE+0x9f86>
    ad04:	1b00009f 	blne	af88 <__HEAP_SIZE+0x9f88>
    ad08:	00002501 	andeq	r2, r0, r1, lsl #10
    ad0c:	3202bd01 	andcc	fp, r2, #1, 26	; 0x40
    ad10:	00000123 	andeq	r0, r0, r3, lsr #2
    ad14:	0000a021 	andeq	sl, r0, r1, lsr #32
    ad18:	0000a01d 	andeq	sl, r0, sp, lsl r0
    ad1c:	00303026 	eorseq	r3, r0, r6, lsr #32
    ad20:	00109510 	andseq	r9, r0, r0, lsl r5
    ad24:	50011f00 	andpl	r1, r1, r0, lsl #30
    ad28:	00007402 	andeq	r7, r0, r2, lsl #8
    ad2c:	00303e1e 	eorseq	r3, r0, lr, lsl lr
    ad30:	000cc610 	andeq	ip, ip, r0, lsl r6
    ad34:	50011f00 	andpl	r1, r1, r0, lsl #30
    ad38:	1f007402 	svcne	0x00007402
    ad3c:	76025201 	strvc	r5, [r2], -r1, lsl #4
    ad40:	53011f00 	movwpl	r1, #7936	; 0x1f00
    ad44:	00007502 	andeq	r7, r0, r2, lsl #10
    ad48:	77012900 	strvc	r2, [r1, -r0, lsl #18]
    ad4c:	01000029 	tsteq	r0, r9, lsr #32
    ad50:	011202ad 	tsteq	r2, sp, lsr #5
    ad54:	000000ad 	andeq	r0, r0, sp, lsr #1
	...
    ad60:	01007d02 	tsteq	r0, r2, lsl #26
    ad64:	000010fc 	strdeq	r1, [r0], -ip
    ad68:	0029421b 	eoreq	r4, r9, fp, lsl r2
    ad6c:	02ad0100 	adceq	r0, sp, #0, 2
    ad70:	00055430 	andeq	r5, r5, r0, lsr r4
    ad74:	00a04300 	adceq	r4, r0, r0, lsl #6
    ad78:	00a03f00 	adceq	r3, r0, r0, lsl #30
    ad7c:	29411d00 	stmdbcs	r1, {r8, sl, fp, ip}^
    ad80:	af010000 	svcge	0x00010000
    ad84:	06581302 	ldrbeq	r1, [r8], -r2, lsl #6
    ad88:	a0680000 	rsbge	r0, r8, r0
    ad8c:	a0640000 	rsbge	r0, r4, r0
    ad90:	29000000 	stmdbcs	r0, {}	; <UNPREDICTABLE>
    ad94:	0025a501 	eoreq	sl, r5, r1, lsl #10
    ad98:	028f0100 	addeq	r0, pc, #0, 2
    ad9c:	00fa0114 	rscseq	r0, sl, r4, lsl r1
	...
    ada8:	7d020000 	stcvc	0, cr0, [r2, #-0]
    adac:	116a0100 	cmnne	sl, r0, lsl #2
    adb0:	421b0000 	andsmi	r0, fp, #0
    adb4:	01000029 	tsteq	r0, r9, lsr #32
    adb8:	5439028f 	ldrtpl	r0, [r9], #-655	; 0xfffffd71
    adbc:	91000005 	tstls	r0, r5
    adc0:	890000a0 	stmdbhi	r0, {r5, r7}
    adc4:	2a0000a0 	bcs	b04c <__HEAP_SIZE+0xa04c>
    adc8:	00002a13 	andeq	r2, r0, r3, lsl sl
    adcc:	3c029001 	stccc	0, cr9, [r2], {1}
    add0:	0000116a 	andeq	r1, r0, sl, ror #2
    add4:	bd1d5101 	ldflts	f5, [sp, #-4]
    add8:	0100001a 	tsteq	r0, sl, lsl r0
    addc:	fa180292 	blx	60b82c <__RAM_SIZE+0x50b82c>
    ade0:	cd000000 	stcgt	0, cr0, [r0, #-0]
    ade4:	c90000a0 	stmdbgt	r0, {r5, r7}
    ade8:	1d0000a0 	stcne	0, cr0, [r0, #-640]	; 0xfffffd80
    adec:	00002941 	andeq	r2, r0, r1, asr #18
    adf0:	17029301 	strne	r9, [r2, -r1, lsl #6]
    adf4:	00000658 	andeq	r0, r0, r8, asr r6
    adf8:	0000a0f5 	strdeq	sl, [r0], -r5
    adfc:	0000a0ed 	andeq	sl, r0, sp, ror #1
    ae00:	70040700 	andvc	r0, r4, r0, lsl #14
    ae04:	07000011 	smladeq	r0, r1, r0, r0
    ae08:	00044704 	andeq	r4, r4, r4, lsl #14
    ae0c:	97012900 	strls	r2, [r1, -r0, lsl #18]
    ae10:	01000027 	tsteq	r0, r7, lsr #32
    ae14:	0110027e 	tsteq	r0, lr, ror r2
    ae18:	00000117 	andeq	r0, r0, r7, lsl r1
	...
    ae24:	01007d02 	tsteq	r0, r2, lsl #26
    ae28:	000011d5 	ldrdeq	r1, [r0], -r5
    ae2c:	0029421b 	eoreq	r4, r9, fp, lsl r2
    ae30:	027e0100 	rsbseq	r0, lr, #0, 2
    ae34:	00055433 	andeq	r5, r5, r3, lsr r4
    ae38:	00a13100 	adceq	r3, r1, r0, lsl #2
    ae3c:	00a12d00 	adceq	r2, r1, r0, lsl #26
    ae40:	29411d00 	stmdbcs	r1, {r8, sl, fp, ip}^
    ae44:	80010000 	andhi	r0, r1, r0
    ae48:	06581302 	ldrbeq	r1, [r8], -r2, lsl #6
    ae4c:	a1560000 	cmpge	r6, r0
    ae50:	a1520000 	cmpge	r2, r0
    ae54:	bd1d0000 	ldclt	0, cr0, [sp, #-0]
    ae58:	0100001a 	tsteq	r0, sl, lsl r0
    ae5c:	17140281 	ldrne	r0, [r4, -r1, lsl #5]
    ae60:	7b000001 	blvc	ae6c <__HEAP_SIZE+0x9e6c>
    ae64:	770000a1 	strvc	r0, [r0, -r1, lsr #1]
    ae68:	000000a1 	andeq	r0, r0, r1, lsr #1
    ae6c:	262f011a 			; <UNDEFINED> instruction: 0x262f011a
    ae70:	70010000 	andvc	r0, r1, r0
    ae74:	0b011102 	bleq	4f284 <__HEAP_SIZE+0x4e284>
    ae78:	00000001 	andeq	r0, r0, r1
    ae7c:	00000000 	andeq	r0, r0, r0
    ae80:	9a000000 	bls	ae88 <__HEAP_SIZE+0x9e88>
    ae84:	010000a1 	smlatbeq	r0, r1, r0, r0
    ae88:	00001231 	andeq	r1, r0, r1, lsr r2
    ae8c:	0029421b 	eoreq	r4, r9, fp, lsl r2
    ae90:	02700100 	rsbseq	r0, r0, #0, 2
    ae94:	00055435 	andeq	r5, r5, r5, lsr r4
    ae98:	00a1be00 	adceq	fp, r1, r0, lsl #28
    ae9c:	00a1ba00 	adceq	fp, r1, r0, lsl #20
    aea0:	0ca91d00 	stceq	13, cr1, [r9]
    aea4:	72010000 	andvc	r0, r1, #0
    aea8:	010b1502 	tsteq	fp, r2, lsl #10
    aeac:	a1e10000 	mvnge	r0, r0
    aeb0:	a1df0000 	bicsge	r0, pc, r0
    aeb4:	001e0000 	andseq	r0, lr, r0
    aeb8:	31000000 	mrscc	r0, (UNDEF: 0)
    aebc:	1f000012 	svcne	0x00000012
    aec0:	f3035001 	vhadd.u8	d5, d3, d1
    aec4:	00005001 	andeq	r5, r0, r1
    aec8:	2630011a 			; <UNDEFINED> instruction: 0x2630011a
    aecc:	54010000 	strpl	r0, [r1], #-0
    aed0:	fa011002 	blx	4eee0 <__HEAP_SIZE+0x4dee0>
	...
    aedc:	f4000000 	vst4.8	{d0-d3}, [r0], r0
    aee0:	010000a1 	smlatbeq	r0, r1, r0, r0
    aee4:	000012a3 	andeq	r1, r0, r3, lsr #5
    aee8:	0029421b 	eoreq	r4, r9, fp, lsl r2
    aeec:	02540100 	subseq	r0, r4, #0, 2
    aef0:	00055433 	andeq	r5, r5, r3, lsr r4
    aef4:	00a21e00 	adceq	r1, r2, r0, lsl #28
    aef8:	00a21400 	adceq	r1, r2, r0, lsl #8
    aefc:	29411d00 	stmdbcs	r1, {r8, sl, fp, ip}^
    af00:	56010000 	strpl	r0, [r1], -r0
    af04:	06581302 	ldrbeq	r1, [r8], -r2, lsl #6
    af08:	a26d0000 	rsbge	r0, sp, #0
    af0c:	a2630000 	rsbge	r0, r3, #0
    af10:	bd1d0000 	ldclt	0, cr0, [sp, #-0]
    af14:	0100001a 	tsteq	r0, sl, lsl r0
    af18:	fa140257 	blx	50b87c <__RAM_SIZE+0x40b87c>
    af1c:	b4000000 	strlt	r0, [r0], #-0
    af20:	b20000a2 	andlt	r0, r0, #162	; 0xa2
    af24:	210000a2 	smlatbcs	r0, r2, r0, r0
    af28:	00000000 	andeq	r0, r0, r0
    af2c:	00001886 	andeq	r1, r0, r6, lsl #17
    af30:	00000021 	andeq	r0, r0, r1, lsr #32
    af34:	00189400 	andseq	r9, r8, r0, lsl #8
    af38:	01200000 			; <UNDEFINED> instruction: 0x01200000
    af3c:	000029bf 			; <UNDEFINED> instruction: 0x000029bf
    af40:	0a023b01 	beq	99b4c <__HEAP_SIZE+0x98b4c>
    af44:	00000001 	andeq	r0, r0, r1
    af48:	00000000 	andeq	r0, r0, r0
    af4c:	00a2c700 	adceq	ip, r2, r0, lsl #14
    af50:	13110100 	tstne	r1, #0, 2
    af54:	421b0000 	andsmi	r0, fp, #0
    af58:	01000029 	tsteq	r0, r9, lsr #32
    af5c:	542d023b 	strtpl	r0, [sp], #-571	; 0xfffffdc5
    af60:	eb000005 	bl	af7c <__HEAP_SIZE+0x9f7c>
    af64:	e70000a2 	str	r0, [r0, -r2, lsr #1]
    af68:	1b0000a2 	blne	b1f8 <__HEAP_SIZE+0xa1f8>
    af6c:	000026f6 	strdeq	r2, [r0], -r6
    af70:	30023c01 	andcc	r3, r2, r1, lsl #24
    af74:	00000106 	andeq	r0, r0, r6, lsl #2
    af78:	0000a30d 	andeq	sl, r0, sp, lsl #6
    af7c:	0000a309 	andeq	sl, r0, r9, lsl #6
    af80:	0029411d 	eoreq	r4, r9, sp, lsl r1
    af84:	023e0100 	eorseq	r0, lr, #0, 2
    af88:	00065813 	andeq	r5, r6, r3, lsl r8
    af8c:	00a32f00 	adceq	r2, r3, r0, lsl #30
    af90:	00a32b00 	adceq	r2, r3, r0, lsl #22
    af94:	00002100 	andeq	r2, r0, r0, lsl #2
    af98:	18860000 	stmne	r6, {}	; <UNPREDICTABLE>
    af9c:	00210000 	eoreq	r0, r1, r0
    afa0:	94000000 	strls	r0, [r0], #-0
    afa4:	00000018 	andeq	r0, r0, r8, lsl r0
    afa8:	29310129 	ldmdbcs	r1!, {r0, r3, r5, r8}
    afac:	2d010000 	stccs	0, cr0, [r1, #-0]
    afb0:	17011002 	strne	r1, [r1, -r2]
    afb4:	00000001 	andeq	r0, r0, r1
    afb8:	00000000 	andeq	r0, r0, r0
    afbc:	02000000 	andeq	r0, r0, #0
    afc0:	5b01007d 	blpl	4b1bc <__HEAP_SIZE+0x4a1bc>
    afc4:	1b000013 	blne	b018 <__HEAP_SIZE+0xa018>
    afc8:	00002942 	andeq	r2, r0, r2, asr #18
    afcc:	2f022d01 	svccs	0x00022d01
    afd0:	00000554 	andeq	r0, r0, r4, asr r5
    afd4:	0000a351 	andeq	sl, r0, r1, asr r3
    afd8:	0000a34d 	andeq	sl, r0, sp, asr #6
    afdc:	0029411d 	eoreq	r4, r9, sp, lsl r1
    afe0:	022f0100 	eoreq	r0, pc, #0, 2
    afe4:	00065813 	andeq	r5, r6, r3, lsl r8
    afe8:	00a37600 	adceq	r7, r3, r0, lsl #12
    afec:	00a37200 	adceq	r7, r3, r0, lsl #4
    aff0:	012b0000 			; <UNDEFINED> instruction: 0x012b0000
    aff4:	000023d3 	ldrdeq	r2, [r0], -r3
    aff8:	12021f01 	andne	r1, r2, #1, 30
    affc:	00051e01 	andeq	r1, r5, r1, lsl #28
	...
    b008:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    b00c:	02011a01 	andeq	r1, r1, #4096	; 0x1000
    b010:	01000027 	tsteq	r0, r7, lsr #32
    b014:	011001f3 			; <UNDEFINED> instruction: 0x011001f3
    b018:	000000fa 	strdeq	r0, [r0], -sl
	...
    b024:	0000a397 	muleq	r0, r7, r3
    b028:	00144701 	andseq	r4, r4, r1, lsl #14
    b02c:	29421b00 	stmdbcs	r2, {r8, r9, fp, ip}^
    b030:	f3010000 	vhadd.u8	d0, d1, d0
    b034:	05543b01 	ldrbeq	r3, [r4, #-2817]	; 0xfffff4ff
    b038:	a3eb0000 	mvnge	r0, #0
    b03c:	a3db0000 	bicsge	r0, fp, #0
    b040:	d31b0000 	tstle	fp, #0
    b044:	01000025 	tsteq	r0, r5, lsr #32
    b048:	063e01f4 			; <UNDEFINED> instruction: 0x063e01f4
    b04c:	62000001 	andvs	r0, r0, #1
    b050:	560000a4 	strpl	r0, [r0], -r4, lsr #1
    b054:	1b0000a4 	blne	b2ec <__HEAP_SIZE+0xa2ec>
    b058:	0000252d 	andeq	r2, r0, sp, lsr #10
    b05c:	3e01f501 	cfsh32cc	mvfx15, mvfx1, #1
    b060:	00000123 	andeq	r0, r0, r3, lsr #2
    b064:	0000a4bf 			; <UNDEFINED> instruction: 0x0000a4bf
    b068:	0000a4b3 			; <UNDEFINED> instruction: 0x0000a4b3
    b06c:	000b951b 	andeq	r9, fp, fp, lsl r5
    b070:	01f60100 	mvnseq	r0, r0, lsl #2
    b074:	00090e40 	andeq	r0, r9, r0, asr #28
    b078:	00a51c00 	adceq	r1, r5, r0, lsl #24
    b07c:	00a51000 	adceq	r1, r5, r0
    b080:	21851b00 	orrcs	r1, r5, r0, lsl #22
    b084:	f7010000 			; <UNDEFINED> instruction: 0xf7010000
    b088:	01233e01 			; <UNDEFINED> instruction: 0x01233e01
    b08c:	a5700000 	ldrbge	r0, [r0, #-0]!
    b090:	a56c0000 	strbge	r0, [ip, #-0]!
    b094:	bd1d0000 	ldclt	0, cr0, [sp, #-0]
    b098:	0100001a 	tsteq	r0, sl, lsl r0
    b09c:	fa1401f9 	blx	50b888 <__RAM_SIZE+0x40b888>
    b0a0:	98000000 	stmdals	r0, {}	; <UNPREDICTABLE>
    b0a4:	900000a5 	andls	r0, r0, r5, lsr #1
    b0a8:	1c0000a5 	stcne	0, cr0, [r0], {165}	; 0xa5
    b0ac:	000028ee 	andeq	r2, r0, lr, ror #17
    b0b0:	1d01fa01 	vstrne	s30, [r1, #-4]
    b0b4:	00000707 	andeq	r0, r0, r7, lsl #14
    b0b8:	1e689102 	lgnnee	f1, f2
    b0bc:	00000000 	andeq	r0, r0, r0
    b0c0:	00001877 	andeq	r1, r0, r7, ror r8
    b0c4:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    b0c8:	011f0074 	tsteq	pc, r4, ror r0	; <UNPREDICTABLE>
    b0cc:	007d0251 	rsbseq	r0, sp, r1, asr r2
    b0d0:	0352011f 	cmpeq	r2, #-1073741817	; 0xc0000007
    b0d4:	1f5301f3 	svcne	0x005301f3
    b0d8:	30015301 	andcc	r5, r1, r1, lsl #6
    b0dc:	011a0000 	tsteq	sl, r0
    b0e0:	000029e3 	andeq	r2, r0, r3, ror #19
    b0e4:	1001c001 	andne	ip, r1, r1
    b0e8:	0000fa01 	andeq	pc, r0, r1, lsl #20
	...
    b0f4:	00a5cf00 	adceq	ip, r5, r0, lsl #30
    b0f8:	15390100 	ldrne	r0, [r9, #-256]!	; 0xffffff00
    b0fc:	421b0000 	andsmi	r0, fp, #0
    b100:	01000029 	tsteq	r0, r9, lsr #32
    b104:	543c01c0 	ldrtpl	r0, [ip], #-448	; 0xfffffe40
    b108:	2d000005 	stccs	0, cr0, [r0, #-20]	; 0xffffffec
    b10c:	1f0000a6 	svcne	0x000000a6
    b110:	1b0000a6 	blne	b3b0 <__HEAP_SIZE+0xa3b0>
    b114:	000025d3 	ldrdeq	r2, [r0], -r3
    b118:	3f01c101 	svccc	0x0001c101
    b11c:	00000106 	andeq	r0, r0, r6, lsl #2
    b120:	0000a696 	muleq	r0, r6, r6
    b124:	0000a68c 	andeq	sl, r0, ip, lsl #13
    b128:	00252d1b 	eoreq	r2, r5, fp, lsl sp
    b12c:	01c20100 	biceq	r0, r2, r0, lsl #2
    b130:	0001233f 	andeq	r2, r1, pc, lsr r3
    b134:	00a6e500 	adceq	lr, r6, r0, lsl #10
    b138:	00a6db00 	adceq	sp, r6, r0, lsl #22
    b13c:	0b951b00 	bleq	fe551d44 <__StackTop+0xc6451d44>
    b140:	c3010000 	movwgt	r0, #4096	; 0x1000
    b144:	090e4101 	stmdbeq	lr, {r0, r8, lr}
    b148:	a72e0000 	strge	r0, [lr, -r0]!
    b14c:	a72a0000 	strge	r0, [sl, -r0]!
    b150:	851b0000 	ldrhi	r0, [fp, #-0]
    b154:	01000021 	tsteq	r0, r1, lsr #32
    b158:	233f01c4 	teqcs	pc, #196, 2	; 0x31
    b15c:	53000001 	movwpl	r0, #1
    b160:	4f0000a7 	svcmi	0x000000a7
    b164:	1d0000a7 	stcne	0, cr0, [r0, #-668]	; 0xfffffd64
    b168:	00001abd 			; <UNDEFINED> instruction: 0x00001abd
    b16c:	1401c601 	strne	ip, [r1], #-1537	; 0xfffff9ff
    b170:	000000fa 	strdeq	r0, [r0], -sl
    b174:	0000a77f 	andeq	sl, r0, pc, ror r7
    b178:	0000a773 	andeq	sl, r0, r3, ror r7
    b17c:	0028ee1c 	eoreq	lr, r8, ip, lsl lr
    b180:	01c70100 	biceq	r0, r7, r0, lsl #2
    b184:	0007071d 	andeq	r0, r7, sp, lsl r7
    b188:	68910200 	ldmvs	r1, {r9}
    b18c:	00000021 	andeq	r0, r0, r1, lsr #32
    b190:	00194500 	andseq	r4, r9, r0, lsl #10
    b194:	00002400 	andeq	r2, r0, r0, lsl #8
    b198:	18680000 	stmdane	r8!, {}^	; <UNPREDICTABLE>
    b19c:	151c0000 	ldrne	r0, [ip, #-0]
    b1a0:	011f0000 	tsteq	pc, r0
    b1a4:	007d0251 	rsbseq	r0, sp, r1, asr r2
    b1a8:	0152011f 	cmpeq	r2, pc, lsl r1
    b1ac:	53011f30 	movwpl	r1, #7984	; 0x1f30
    b1b0:	1e003001 	cdpne	0, 0, cr3, cr0, cr1, {0}
    b1b4:	00000000 	andeq	r0, r0, r0
    b1b8:	00001868 	andeq	r1, r0, r8, ror #16
    b1bc:	0251011f 	subseq	r0, r1, #-1073741817	; 0xc0000007
    b1c0:	011f007d 	tsteq	pc, sp, ror r0	; <UNPREDICTABLE>
    b1c4:	00910352 	addseq	r0, r1, r2, asr r3
    b1c8:	53011f06 	movwpl	r1, #7942	; 0x1f06
    b1cc:	00003001 	andeq	r3, r0, r1
    b1d0:	00273222 	eoreq	r3, r7, r2, lsr #4
    b1d4:	01a10100 			; <UNDEFINED> instruction: 0x01a10100
    b1d8:	00000111 	andeq	r0, r0, r1, lsl r1
    b1dc:	00000000 	andeq	r0, r0, r0
    b1e0:	a7cd0000 	strbge	r0, [sp, r0]
    b1e4:	e2010000 	and	r0, r1, #0
    b1e8:	1b000015 	blne	b244 <__HEAP_SIZE+0xa244>
    b1ec:	0000253c 	andeq	r2, r0, ip, lsr r5
    b1f0:	3b01a101 	blcc	735fc <__HEAP_SIZE+0x725fc>
    b1f4:	000000b3 	strheq	r0, [r0], -r3
    b1f8:	0000a7f1 	strdeq	sl, [r0], -r1
    b1fc:	0000a7ed 	andeq	sl, r0, sp, ror #15
    b200:	0024cb1b 	eoreq	ip, r4, fp, lsl fp
    b204:	01a20100 			; <UNDEFINED> instruction: 0x01a20100
    b208:	00012339 	andeq	r2, r1, r9, lsr r3
    b20c:	00a81300 	adceq	r1, r8, r0, lsl #6
    b210:	00a80f00 	adceq	r0, r8, r0, lsl #30
    b214:	26f61b00 	ldrbtcs	r1, [r6], r0, lsl #22
    b218:	a3010000 	movwge	r0, #4096	; 0x1000
    b21c:	01063901 	tsteq	r6, r1, lsl #18
    b220:	a8350000 	ldmdage	r5!, {}	; <UNPREDICTABLE>
    b224:	a8310000 	ldmdage	r1!, {}	; <UNPREDICTABLE>
    b228:	f71b0000 			; <UNDEFINED> instruction: 0xf71b0000
    b22c:	01000028 	tsteq	r0, r8, lsr #32
    b230:	9c3501a4 	ldflss	f0, [r5], #-656	; 0xfffffd70
    b234:	57000000 	strpl	r0, [r0, -r0]
    b238:	530000a8 	movwpl	r0, #168	; 0xa8
    b23c:	2a0000a8 	bcs	b4e4 <__HEAP_SIZE+0xa4e4>
    b240:	000024df 	ldrdeq	r2, [r0], -pc	; <UNPREDICTABLE>
    b244:	4001a501 	andmi	sl, r1, r1, lsl #10
    b248:	000005d3 	ldrdeq	r0, [r0], -r3
    b24c:	2a009102 	bcs	2f65c <__HEAP_SIZE+0x2e65c>
    b250:	0000269a 	muleq	r0, sl, r6
    b254:	3201a601 	andcc	sl, r1, #1048576	; 0x100000
    b258:	00000658 	andeq	r0, r0, r8, asr r6
    b25c:	21049102 	tstcs	r4, r2, lsl #2
    b260:	00000000 	andeq	r0, r0, r0
    b264:	00000a65 	andeq	r0, r0, r5, ror #20
    b268:	0000001e 	andeq	r0, r0, lr, lsl r0
    b26c:	00195400 	andseq	r5, r9, r0, lsl #8
    b270:	50011f00 	andpl	r1, r1, r0, lsl #30
    b274:	00047402 	andeq	r7, r4, r2, lsl #8
    b278:	52011a00 	andpl	r1, r1, #0, 20
    b27c:	01000026 	tsteq	r0, r6, lsr #32
    b280:	01170172 	tsteq	r7, r2, ror r1
    b284:	00000554 	andeq	r0, r0, r4, asr r5
	...
    b290:	0000a875 	andeq	sl, r0, r5, ror r8
    b294:	0016c001 	andseq	ip, r6, r1
    b298:	253c1b00 	ldrcs	r1, [ip, #-2816]!	; 0xfffff500
    b29c:	72010000 	andvc	r0, r1, #0
    b2a0:	00b33e01 	adcseq	r3, r3, r1, lsl #28
    b2a4:	a8b10000 	ldmge	r1!, {}	; <UNPREDICTABLE>
    b2a8:	a8ad0000 	stmiage	sp!, {}	; <UNPREDICTABLE>
    b2ac:	cb1b0000 	blgt	6cb2b4 <__RAM_SIZE+0x5cb2b4>
    b2b0:	01000024 	tsteq	r0, r4, lsr #32
    b2b4:	233c0173 	teqcs	ip, #-1073741796	; 0xc000001c
    b2b8:	d6000001 	strle	r0, [r0], -r1
    b2bc:	d20000a8 	andle	r0, r0, #168	; 0xa8
    b2c0:	1b0000a8 	blne	b568 <__HEAP_SIZE+0xa568>
    b2c4:	000026f6 	strdeq	r2, [r0], -r6
    b2c8:	3c017401 	cfstrscc	mvf7, [r1], {1}
    b2cc:	00000106 	andeq	r0, r0, r6, lsl #2
    b2d0:	0000a8fb 	strdeq	sl, [r0], -fp
    b2d4:	0000a8f7 	strdeq	sl, [r0], -r7
    b2d8:	0028f71b 	eoreq	pc, r8, fp, lsl r7	; <UNPREDICTABLE>
    b2dc:	01750100 	cmneq	r5, r0, lsl #2
    b2e0:	00009c38 	andeq	r9, r0, r8, lsr ip
    b2e4:	00a92000 	adceq	r2, r9, r0
    b2e8:	00a91c00 	adceq	r1, r9, r0, lsl #24
    b2ec:	24df2a00 	ldrbcs	r2, [pc], #2560	; b2f4 <__HEAP_SIZE+0xa2f4>
    b2f0:	76010000 	strvc	r0, [r1], -r0
    b2f4:	05d34301 	ldrbeq	r4, [r3, #769]	; 0x301
    b2f8:	91020000 	mrsls	r0, (UNDEF: 2)
    b2fc:	2a142a00 	bcs	515b04 <__RAM_SIZE+0x415b04>
    b300:	77010000 	strvc	r0, [r1, -r0]
    b304:	11703b01 	cmnne	r0, r1, lsl #22
    b308:	91020000 	mrsls	r0, (UNDEF: 2)
    b30c:	269a1d04 	ldrcs	r1, [sl], r4, lsl #26
    b310:	79010000 	stmdbvc	r1, {}	; <UNPREDICTABLE>
    b314:	06581701 	ldrbeq	r1, [r8], -r1, lsl #14
    b318:	a9430000 	stmdbge	r3, {}^	; <UNPREDICTABLE>
    b31c:	a9410000 	stmdbge	r1, {}^	; <UNPREDICTABLE>
    b320:	001e0000 	andseq	r0, lr, r0
    b324:	39000000 	stmdbcc	r0, {}	; <UNPREDICTABLE>
    b328:	1f000015 	svcne	0x00000015
    b32c:	f3035001 	vhadd.u8	d5, d3, d1
    b330:	011f5001 	tsteq	pc, r1
    b334:	01f30351 	mvnseq	r0, r1, asr r3
    b338:	52011f51 	andpl	r1, r1, #324	; 0x144
    b33c:	5201f303 	andpl	pc, r1, #201326592	; 0xc000000
    b340:	0353011f 	cmpeq	r3, #-1073741817	; 0xc0000007
    b344:	1f5301f3 	svcne	0x005301f3
    b348:	02007d02 	andeq	r7, r0, #2, 26	; 0x80
    b34c:	021f0075 	andseq	r0, pc, #117	; 0x75
    b350:	7402047d 	strvc	r0, [r2], #-1149	; 0xfffffb83
    b354:	1a000000 	bne	b35c <__HEAP_SIZE+0xa35c>
    b358:	0027c101 	eoreq	ip, r7, r1, lsl #2
    b35c:	01500100 	cmpeq	r0, r0, lsl #2
    b360:	05540117 	ldrbeq	r0, [r4, #-279]	; 0xfffffee9
	...
    b36c:	a9560000 	ldmdbge	r6, {}^	; <UNPREDICTABLE>
    b370:	9f010000 	svcls	0x00010000
    b374:	1b000017 	blne	b3d8 <__HEAP_SIZE+0xa3d8>
    b378:	0000253c 	andeq	r2, r0, ip, lsr r5
    b37c:	38015001 	stmdacc	r1, {r0, ip, lr}
    b380:	000000b3 	strheq	r0, [r0], -r3
    b384:	0000a992 	muleq	r0, r2, r9
    b388:	0000a98e 	andeq	sl, r0, lr, lsl #19
    b38c:	0024cb1b 	eoreq	ip, r4, fp, lsl fp
    b390:	01510100 	cmpeq	r1, r0, lsl #2
    b394:	00012336 	andeq	r2, r1, r6, lsr r3
    b398:	00a9b400 	adceq	fp, r9, r0, lsl #8
    b39c:	00a9b000 	adceq	fp, r9, r0
    b3a0:	26f61b00 	ldrbtcs	r1, [r6], r0, lsl #22
    b3a4:	52010000 	andpl	r0, r1, #0
    b3a8:	01063601 	tsteq	r6, r1, lsl #12
    b3ac:	a9d60000 	ldmibge	r6, {}^	; <UNPREDICTABLE>
    b3b0:	a9d20000 	ldmibge	r2, {}^	; <UNPREDICTABLE>
    b3b4:	f71b0000 			; <UNDEFINED> instruction: 0xf71b0000
    b3b8:	01000028 	tsteq	r0, r8, lsr #32
    b3bc:	9c320153 	ldflss	f0, [r2], #-332	; 0xfffffeb4
    b3c0:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
    b3c4:	f40000a9 	vst4.32	{d0-d3}, [r0 :128], r9
    b3c8:	2a0000a9 	bcs	b674 <__HEAP_SIZE+0xa674>
    b3cc:	000024df 	ldrdeq	r2, [r0], -pc	; <UNPREDICTABLE>
    b3d0:	3d015401 	cfstrscc	mvf5, [r1, #-4]
    b3d4:	000005d3 	ldrdeq	r0, [r0], -r3
    b3d8:	1d009102 	stfned	f1, [r0, #-8]
    b3dc:	0000269a 	muleq	r0, sl, r6
    b3e0:	17015601 	strne	r5, [r1, -r1, lsl #12]
    b3e4:	00000658 	andeq	r0, r0, r8, asr r6
    b3e8:	0000aa1a 	andeq	sl, r0, sl, lsl sl
    b3ec:	0000aa16 	andeq	sl, r0, r6, lsl sl
    b3f0:	00000024 	andeq	r0, r0, r4, lsr #32
    b3f4:	00196300 	andseq	r6, r9, r0, lsl #6
    b3f8:	00176d00 	andseq	r6, r7, r0, lsl #26
    b3fc:	50011f00 	andpl	r1, r1, r0, lsl #30
    b400:	00280802 	eoreq	r0, r8, r2, lsl #16
    b404:	0000001e 	andeq	r0, r0, lr, lsl r0
    b408:	00153900 	andseq	r3, r5, r0, lsl #18
    b40c:	50011f00 	andpl	r1, r1, r0, lsl #30
    b410:	1f007402 	svcne	0x00007402
    b414:	78025101 	stmdavc	r2, {r0, r8, ip, lr}
    b418:	52011f00 	andpl	r1, r1, #0, 30
    b41c:	1f007702 	svcne	0x00007702
    b420:	75025301 	strvc	r5, [r2, #-769]	; 0xfffffcff
    b424:	7d021f00 	stcvc	15, cr1, [r2, #-0]
    b428:	00910300 	addseq	r0, r1, r0, lsl #6
    b42c:	7d021f06 	stcvc	15, cr1, [r2, #-24]	; 0xffffffe8
    b430:	00760204 	rsbseq	r0, r6, r4, lsl #4
    b434:	012c0000 			; <UNDEFINED> instruction: 0x012c0000
    b438:	000017a7 	andeq	r1, r0, r7, lsr #15
    b43c:	0110ed01 	tsteq	r0, r1, lsl #26
    b440:	000000fa 	strdeq	r0, [r0], -sl
    b444:	100032b8 			; <UNDEFINED> instruction: 0x100032b8
    b448:	10003314 	andne	r3, r0, r4, lsl r3
    b44c:	0000aa38 	andeq	sl, r0, r8, lsr sl
    b450:	00186201 	andseq	r6, r8, r1, lsl #4
    b454:	1abd2d00 	bne	fef5685c <__StackTop+0xc6e5685c>
    b458:	ef010000 	svc	0x00010000
    b45c:	0000fa14 	andeq	pc, r0, r4, lsl sl	; <UNPREDICTABLE>
    b460:	00aa7600 	adceq	r7, sl, r0, lsl #12
    b464:	00aa7000 	adceq	r7, sl, r0
    b468:	32c62300 	sbccc	r2, r6, #0, 6
    b46c:	32f81000 	rscscc	r1, r8, #0
    b470:	18581000 	ldmdane	r8, {ip}^
    b474:	851c0000 	ldrhi	r0, [ip, #-0]
    b478:	0100001f 	tsteq	r0, pc, lsl r0
    b47c:	62240122 	eorvs	r0, r4, #-2147483640	; 0x80000008
    b480:	02000018 	andeq	r0, r0, #24
    b484:	ea1c6c91 	b	7266d0 <__RAM_SIZE+0x6266d0>
    b488:	0100001b 	tsteq	r0, fp, lsl r0
    b48c:	36230123 	strtcc	r0, [r3], -r3, lsr #2
    b490:	02000005 	andeq	r0, r0, #5
    b494:	4d1c7091 	ldcmi	0, cr7, [ip, #-580]	; 0xfffffdbc
    b498:	01000021 	tsteq	r0, r1, lsr #32
    b49c:	292c0124 	stmdbcs	ip!, {r2, r5, r8}
    b4a0:	02000000 	andeq	r0, r0, #0
    b4a4:	d6247491 			; <UNDEFINED> instruction: 0xd6247491
    b4a8:	71100032 	tstvc	r0, r2, lsr r0
    b4ac:	2f000019 	svccs	0x00000019
    b4b0:	1f000018 	svcne	0x00000018
    b4b4:	91025001 	tstls	r2, r1
    b4b8:	51011f6c 	tstpl	r1, ip, ror #30
    b4bc:	1f709102 	svcne	0x00709102
    b4c0:	91025201 	tstls	r2, r1, lsl #4
    b4c4:	ee1e0074 	mrc	0, 0, r0, cr14, cr4, {3}
    b4c8:	80100032 	andshi	r0, r0, r2, lsr r0
    b4cc:	1f000019 	svcne	0x00000019
    b4d0:	03055001 	movweq	r5, #20481	; 0x5001
    b4d4:	10003241 	andne	r3, r0, r1, asr #4
    b4d8:	0551011f 	ldrbeq	r0, [r1, #-287]	; 0xfffffee1
    b4dc:	005dd403 	subseq	sp, sp, r3, lsl #8
    b4e0:	53011f10 	movwpl	r1, #7952	; 0x1f10
    b4e4:	1f007402 	svcne	0x00007402
    b4e8:	01007d02 	tsteq	r0, r2, lsl #26
    b4ec:	21000034 	tstcs	r0, r4, lsr r0
    b4f0:	100032c0 	andne	r3, r0, r0, asr #5
    b4f4:	00000a65 	andeq	r0, r0, r5, ror #20
    b4f8:	dc040700 	stcle	7, cr0, [r4], {-0}
    b4fc:	2e000002 	cdpcs	0, 0, cr0, cr0, cr2, {0}
    b500:	0e960101 	fmleqs	f0, f6, f1
    b504:	0e960000 	cdpeq	0, 9, cr0, cr6, cr0, {0}
    b508:	ae0a0000 	cdpge	0, 0, cr0, cr10, cr0, {0}
    b50c:	012e0c02 			; <UNDEFINED> instruction: 0x012e0c02
    b510:	000bf501 	andeq	pc, fp, r1, lsl #10
    b514:	000bf500 	andeq	pc, fp, r0, lsl #10
    b518:	05510a00 	ldrbeq	r0, [r1, #-2560]	; 0xfffff600
    b51c:	01012f0c 	tsteq	r1, ip, lsl #30
    b520:	00000c77 	andeq	r0, r0, r7, ror ip
    b524:	00000c77 	andeq	r0, r0, r7, ror ip
    b528:	2f0d7106 	svccs	0x000d7106
    b52c:	0ae70101 	beq	ff9cb938 <__StackTop+0xc78cb938>
    b530:	0ae70000 	beq	ff9cb538 <__StackTop+0xc78cb538>
    b534:	72060000 	andvc	r0, r6, #0
    b538:	01012e0d 	tsteq	r1, sp, lsl #28
    b53c:	000012a6 	andeq	r1, r0, r6, lsr #5
    b540:	000012a6 	andeq	r1, r0, r6, lsr #5
    b544:	13064f0a 	movwne	r4, #28426	; 0x6f0a
    b548:	3f01012e 	svccc	0x0001012e
    b54c:	3f00000a 	svccc	0x0000000a
    b550:	0800000a 	stmdaeq	r0, {r1, r3}
    b554:	2e0601b9 	mcrcs	1, 0, r0, cr6, cr9, {5}
    b558:	0b5b0101 	bleq	16cb964 <__RAM_SIZE+0x15cb964>
    b55c:	0b5b0000 	bleq	16cb564 <__RAM_SIZE+0x15cb564>
    b560:	910a0000 	mrsls	r0, (UNDEF: 10)
    b564:	012e0c03 			; <UNDEFINED> instruction: 0x012e0c03
    b568:	000ac001 	andeq	ip, sl, r1
    b56c:	000ac000 	andeq	ip, sl, r0
    b570:	01f70800 	mvnseq	r0, r0, lsl #16
    b574:	01012f0d 	tsteq	r1, sp, lsl #30
    b578:	00001265 	andeq	r1, r0, r5, ror #4
    b57c:	00001265 	andeq	r1, r0, r5, ror #4
    b580:	2e06b80c 	cdpcs	8, 0, cr11, cr6, cr12, {0}
    b584:	0adb0101 	beq	ff6cb990 <__StackTop+0xc75cb990>
    b588:	0adb0000 	beq	ff6cb590 <__StackTop+0xc75cb590>
    b58c:	d1080000 	mrsle	r0, (UNDEF: 8)
    b590:	012e0601 			; <UNDEFINED> instruction: 0x012e0601
    b594:	001d3501 	andseq	r3, sp, r1, lsl #10
    b598:	001d3500 	andseq	r3, sp, r0, lsl #10
    b59c:	06a40900 	strteq	r0, [r4], r0, lsl #18
    b5a0:	01012e0c 	tsteq	r1, ip, lsl #28
    b5a4:	00000dc0 	andeq	r0, r0, r0, asr #27
    b5a8:	00000dc0 	andeq	r0, r0, r0, asr #27
    b5ac:	06065b09 	streq	r5, [r6], -r9, lsl #22
    b5b0:	d701012e 	strle	r0, [r1, -lr, lsr #2]
    b5b4:	d7000011 	smladle	r0, r1, r0, r0
    b5b8:	0a000011 	beq	b604 <__HEAP_SIZE+0xa604>
    b5bc:	2e0606f6 	mcrcs	6, 0, r0, cr6, cr6, {7}
    b5c0:	121b0101 	andsne	r0, fp, #1073741824	; 0x40000000
    b5c4:	121b0000 	andsne	r0, fp, #0
    b5c8:	93090000 	movwls	r0, #36864	; 0x9000
    b5cc:	012f0c06 			; <UNDEFINED> instruction: 0x012f0c06
    b5d0:	000b2201 	andeq	r2, fp, r1, lsl #4
    b5d4:	000b2200 	andeq	r2, fp, r0, lsl #4
    b5d8:	0d6f0600 	stcleq	6, cr0, [pc, #-0]	; b5e0 <__HEAP_SIZE+0xa5e0>
    b5dc:	a301012e 	movwge	r0, #4398	; 0x112e
    b5e0:	a3000015 	movwge	r0, #21
    b5e4:	09000015 	stmdbeq	r0, {r0, r2, r4}
    b5e8:	2e0c0e14 	mcrcs	14, 0, r0, cr12, cr4, {0}
    b5ec:	0a050101 	beq	14b9f8 <__RAM_SIZE+0x4b9f8>
    b5f0:	0a050000 	beq	14b5f8 <__RAM_SIZE+0x4b5f8>
    b5f4:	c4080000 	strgt	r0, [r8], #-0
    b5f8:	012f0601 			; <UNDEFINED> instruction: 0x012f0601
    b5fc:	000d9c01 	andeq	r9, sp, r1, lsl #24
    b600:	000d9c00 	andeq	r9, sp, r0, lsl #24
    b604:	08b50c00 	ldmeq	r5!, {sl, fp}
    b608:	1001012e 	andne	r0, r1, lr, lsr #2
    b60c:	10000018 	andne	r0, r0, r8, lsl r0
    b610:	0b000018 	bleq	b678 <__HEAP_SIZE+0xa678>
    b614:	2e0a0575 	cfrshl64cs	mvdx10, mvdx5, r0
    b618:	17e90101 	strbne	r0, [r9, r1, lsl #2]!
    b61c:	17e90000 	strbne	r0, [r9, r0]!
    b620:	fd090000 	stc2	0, cr0, [r9, #-0]
    b624:	15001201 	strne	r1, [r0, #-513]	; 0xfffffdff
    b628:	02000006 	andeq	r0, r0, #6
    b62c:	00165c00 	andseq	r5, r6, r0, lsl #24
    b630:	bf010400 	svclt	0x00010400
    b634:	0c000000 	stceq	0, cr0, [r0], {-0}
    b638:	00002b34 	andeq	r2, r0, r4, lsr fp
    b63c:	000001a8 	andeq	r0, r0, r8, lsr #3
    b640:	00000b30 	andeq	r0, r0, r0, lsr fp
	...
    b64c:	00007d37 	andeq	r7, r0, r7, lsr sp
    b650:	0004e702 	andeq	lr, r4, r2, lsl #14
    b654:	17d10200 	ldrbne	r0, [r1, r0, lsl #4]
    b658:	0000003a 	andeq	r0, r0, sl, lsr r0
    b65c:	00002903 	andeq	r2, r0, r3, lsl #18
    b660:	07040400 	streq	r0, [r4, -r0, lsl #8]
    b664:	0000021d 	andeq	r0, r0, sp, lsl r2
    b668:	69050405 	stmdbvs	r5, {r0, r2, sl}
    b66c:	0400746e 	streq	r7, [r0], #-1134	; 0xfffffb92
    b670:	02550508 	subseq	r0, r5, #8, 10	; 0x2000000
    b674:	08040000 	stmdaeq	r4, {}	; <UNPREDICTABLE>
    b678:	00024904 	andeq	r4, r2, r4, lsl #18
    b67c:	06010400 	streq	r0, [r1], -r0, lsl #8
    b680:	0000008f 	andeq	r0, r0, pc, lsl #1
    b684:	00000002 	andeq	r0, r0, r2
    b688:	182b0300 	stmdane	fp!, {r8, r9}
    b68c:	00000069 	andeq	r0, r0, r9, rrx
    b690:	8d080104 	stfhis	f0, [r8, #-16]
    b694:	04000000 	streq	r0, [r0], #-0
    b698:	02a50502 	adceq	r0, r5, #8388608	; 0x800000
    b69c:	02040000 	andeq	r0, r4, #0
    b6a0:	0000ac07 	andeq	sl, r0, r7, lsl #24
    b6a4:	05040400 	streq	r0, [r4, #-1024]	; 0xfffffc00
    b6a8:	0000025a 	andeq	r0, r0, sl, asr r2
    b6ac:	00037d02 	andeq	r7, r3, r2, lsl #26
    b6b0:	194f0300 	stmdbne	pc, {r8, r9}^	; <UNPREDICTABLE>
    b6b4:	00000091 	muleq	r0, r1, r0
    b6b8:	18070404 	stmdane	r7, {r2, sl}
    b6bc:	04000002 	streq	r0, [r0], #-2
    b6c0:	02130708 	andseq	r0, r3, #8, 14	; 0x200000
    b6c4:	04060000 	streq	r0, [r6], #-0
    b6c8:	96080104 	strls	r0, [r8], -r4, lsl #2
    b6cc:	02000000 	andeq	r0, r0, #0
    b6d0:	00000002 	andeq	r0, r0, r2
    b6d4:	5d131804 	ldcpl	8, cr1, [r3, #-16]
    b6d8:	02000000 	andeq	r0, r0, #0
    b6dc:	0000037f 	andeq	r0, r0, pc, ror r3
    b6e0:	85143004 	ldrhi	r3, [r4, #-4]
    b6e4:	02000000 	andeq	r0, r0, #0
    b6e8:	000009c4 	andeq	r0, r0, r4, asr #19
    b6ec:	b41a5105 	ldrlt	r5, [sl], #-261	; 0xfffffefb
    b6f0:	07000000 	streq	r0, [r0, -r0]
    b6f4:	0000a804 	andeq	sl, r0, r4, lsl #16
    b6f8:	2a6c0800 	bcs	1b0d700 <__RAM_SIZE+0x1a0d700>
    b6fc:	061c0000 	ldreq	r0, [ip], -r0
    b700:	01491094 	swpbeq	r1, r4, [r9]
    b704:	19090000 	stmdbne	r9, {}	; <UNPREDICTABLE>
    b708:	0600002c 	streq	r0, [r0], -ip, lsr #32
    b70c:	00290c96 	mlaeq	r9, r6, ip, r0
    b710:	23020000 	movwcs	r0, #8192	; 0x2000
    b714:	2c650900 			; <UNDEFINED> instruction: 0x2c650900
    b718:	97060000 	strls	r0, [r6, -r0]
    b71c:	0000290c 	andeq	r2, r0, ip, lsl #18
    b720:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    b724:	002b1409 	eoreq	r1, fp, r9, lsl #8
    b728:	0c980600 	ldceq	6, cr0, [r8], {0}
    b72c:	00000029 	andeq	r0, r0, r9, lsr #32
    b730:	09082302 	stmdbeq	r8, {r1, r8, r9, sp}
    b734:	00002ac3 	andeq	r2, r0, r3, asr #21
    b738:	290c9906 	stmdbcs	ip, {r1, r2, r8, fp, ip, pc}
    b73c:	02000000 	andeq	r0, r0, #0
    b740:	77090c23 	strvc	r0, [r9, -r3, lsr #24]
    b744:	0600002a 	streq	r0, [r0], -sl, lsr #32
    b748:	00290c9a 	mlaeq	r9, sl, ip, r0
    b74c:	23020000 	movwcs	r0, #8192	; 0x2000
    b750:	2bfa0910 	blcs	ffe8db98 <__StackTop+0xc7d8db98>
    b754:	9b060000 	blls	18b75c <__RAM_SIZE+0x8b75c>
    b758:	0000290c 	andeq	r2, r0, ip, lsl #18
    b75c:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    b760:	002caf09 	eoreq	sl, ip, r9, lsl #30
    b764:	0c9c0600 	ldceq	6, cr0, [ip], {0}
    b768:	00000029 	andeq	r0, r0, r9, lsr #32
    b76c:	00182302 	andseq	r2, r8, r2, lsl #6
    b770:	002a9602 	eoreq	r9, sl, r2, lsl #12
    b774:	039d0600 	orrseq	r0, sp, #0, 12
    b778:	000000d2 	ldrdeq	r0, [r0], -r2
    b77c:	0000a80a 	andeq	sl, r0, sl, lsl #16
    b780:	00016600 	andeq	r6, r1, r0, lsl #12
    b784:	003a0b00 	eorseq	r0, sl, r0, lsl #22
    b788:	7fff0000 	svcvc	0x00ff0000
    b78c:	02060c00 	andeq	r0, r6, #0, 24
    b790:	5d010000 	stcpl	0, cr0, [r1, #-0]
    b794:	00015514 	andeq	r5, r1, r4, lsl r5
    b798:	08010100 	stmdaeq	r1, {r8}
    b79c:	00002af8 	strdeq	r2, [r0], -r8
    b7a0:	10640108 	rsbne	r0, r4, r8, lsl #2
    b7a4:	000001a0 	andeq	r0, r0, r0, lsr #3
    b7a8:	002aa209 	eoreq	sl, sl, r9, lsl #4
    b7ac:	1b660100 	blne	198bbb4 <__RAM_SIZE+0x188bbb4>
    b7b0:	000001a0 	andeq	r0, r0, r0, lsr #3
    b7b4:	09002302 	stmdbeq	r0, {r1, r8, r9, sp}
    b7b8:	00002cc8 	andeq	r2, r0, r8, asr #25
    b7bc:	290c6701 	stmdbcs	ip, {r0, r8, r9, sl, sp, lr}
    b7c0:	02000000 	andeq	r0, r0, #0
    b7c4:	07000423 	streq	r0, [r0, -r3, lsr #8]
    b7c8:	00017404 	andeq	r7, r1, r4, lsl #8
    b7cc:	2bee0200 	blcs	ffb8bfd4 <__StackTop+0xc7a8bfd4>
    b7d0:	68010000 	stmdavs	r1, {}	; <UNPREDICTABLE>
    b7d4:	00017403 	andeq	r7, r1, r3, lsl #8
    b7d8:	2c340d00 	ldccs	13, cr0, [r4], #-0
    b7dc:	9e010000 	cdpls	0, 0, cr0, cr1, cr0, {0}
    b7e0:	00003515 	andeq	r3, r0, r5, lsl r5
    b7e4:	d30e0800 	movwle	r0, #59392	; 0xe800
    b7e8:	0100002c 	tsteq	r0, ip, lsr #32
    b7ec:	01a624a1 			; <UNDEFINED> instruction: 0x01a624a1
    b7f0:	03050000 	movweq	r0, #20480	; 0x5000
    b7f4:	38008d00 	stmdacc	r0, {r8, sl, fp, pc}
    b7f8:	002ad70e 	eoreq	sp, sl, lr, lsl #14
    b7fc:	26a20100 	strtcs	r0, [r2], r0, lsl #2
    b800:	000001e3 	andeq	r0, r0, r3, ror #3
    b804:	8cec0305 	stclhi	3, cr0, [ip], #20
    b808:	04073800 	streq	r3, [r7], #-2048	; 0xfffff800
    b80c:	000001a6 	andeq	r0, r0, r6, lsr #3
    b810:	002c510e 	eoreq	r5, ip, lr, lsl #2
    b814:	1fa60100 	svcne	0x00a60100
    b818:	00000029 	andeq	r0, r0, r9, lsr #32
    b81c:	8cf00305 	ldclhi	3, cr0, [r0], #20
    b820:	770e3800 	strvc	r3, [lr, -r0, lsl #16]
    b824:	0100002a 	tsteq	r0, sl, lsr #32
    b828:	00291fa7 	eoreq	r1, r9, r7, lsr #31
    b82c:	03050000 	movweq	r0, #20480	; 0x5000
    b830:	38008cf4 	stmdacc	r0, {r2, r4, r5, r6, r7, sl, fp, pc}
    b834:	002bfa0e 	eoreq	pc, fp, lr, lsl #20
    b838:	1fa80100 	svcne	0x00a80100
    b83c:	00000029 	andeq	r0, r0, r9, lsr #32
    b840:	8cf80305 	ldclhi	3, cr0, [r8], #20
    b844:	af0e3800 	svcge	0x000e3800
    b848:	0100002c 	tsteq	r0, ip, lsr #32
    b84c:	00291fa9 	eoreq	r1, r9, r9, lsr #31
    b850:	03050000 	movweq	r0, #20480	; 0x5000
    b854:	38008cfc 	stmdacc	r0, {r2, r3, r4, r5, r6, r7, sl, fp, pc}
    b858:	2bb1010f 	blcs	fec4bc9c <__StackTop+0xc6b4bc9c>
    b85c:	69010000 	stmdbvs	r1, {}	; <UNPREDICTABLE>
    b860:	00010602 	andeq	r0, r1, r2, lsl #12
    b864:	00000000 	andeq	r0, r0, r0
    b868:	02000000 	andeq	r0, r0, #0
    b86c:	1001007d 	andne	r0, r1, sp, ror r0
    b870:	002d1a01 	eoreq	r1, sp, r1, lsl #20
    b874:	02300100 	eorseq	r0, r0, #0, 2
    b878:	00000106 	andeq	r0, r0, r6, lsl #2
    b87c:	00000000 	andeq	r0, r0, r0
    b880:	aaa20000 	bge	fe88b888 <__StackTop+0xc678b888>
    b884:	f2010000 	vhadd.s8	d0, d1, d0
    b888:	11000002 	tstne	r0, r2
    b88c:	00002a6b 	andeq	r2, r0, fp, ror #20
    b890:	27023001 	strcs	r3, [r2, -r1]
    b894:	000002f2 	strdeq	r0, [r0], -r2
    b898:	0000aac6 	andeq	sl, r0, r6, asr #21
    b89c:	0000aac2 	andeq	sl, r0, r2, asr #21
    b8a0:	002ab212 	eoreq	fp, sl, r2, lsl r2
    b8a4:	02320100 	eorseq	r0, r2, #0, 2
    b8a8:	0001e313 	andeq	lr, r1, r3, lsl r3
    b8ac:	00aae800 	adceq	lr, sl, r0, lsl #16
    b8b0:	00aae400 	adceq	lr, sl, r0, lsl #8
    b8b4:	2cda1200 	lfmcs	f1, 2, [sl], {0}
    b8b8:	33010000 	movwcc	r0, #4096	; 0x1000
    b8bc:	00290c02 	eoreq	r0, r9, r2, lsl #24
    b8c0:	ab0a0000 	blge	28b8c8 <__RAM_SIZE+0x18b8c8>
    b8c4:	ab060000 	blge	18b8cc <__RAM_SIZE+0x8b8cc>
    b8c8:	c5120000 	ldrgt	r0, [r2, #-0]
    b8cc:	0100002b 	tsteq	r0, fp, lsr #32
    b8d0:	29190233 	ldmdbcs	r9, {r0, r1, r4, r5, r9}
    b8d4:	2d000000 	stccs	0, cr0, [r0, #-0]
    b8d8:	290000ab 	stmdbcs	r0, {r0, r1, r3, r5, r7}
    b8dc:	120000ab 	andne	r0, r0, #171	; 0xab
    b8e0:	00002aba 			; <UNDEFINED> instruction: 0x00002aba
    b8e4:	27023301 	strcs	r3, [r2, -r1, lsl #6]
    b8e8:	00000029 	andeq	r0, r0, r9, lsr #32
    b8ec:	0000ab50 	andeq	sl, r0, r0, asr fp
    b8f0:	0000ab4c 	andeq	sl, r0, ip, asr #22
    b8f4:	00000013 	andeq	r0, r0, r3, lsl r0
    b8f8:	0005d100 	andeq	sp, r5, r0, lsl #2
    b8fc:	00001300 	andeq	r1, r0, r0, lsl #6
    b900:	05e00000 	strbeq	r0, [r0, #0]!
    b904:	00130000 	andseq	r0, r3, r0
    b908:	ef000000 	svc	0x00000000
    b90c:	13000005 	movwne	r0, #5
    b910:	00000000 	andeq	r0, r0, r0
    b914:	000005fd 	strdeq	r0, [r0], -sp
    b918:	49040700 	stmdbmi	r4, {r8, r9, sl}
    b91c:	14000001 	strne	r0, [r0], #-1
    b920:	00002add 	ldrdeq	r2, [r0], -sp
    b924:	0d01ec01 	stceq	12, cr14, [r1, #-4]
    b928:	00336c01 	eorseq	r6, r3, r1, lsl #24
    b92c:	0033d010 	eorseq	sp, r3, r0, lsl r0
    b930:	00ab7010 	adceq	r7, fp, r0, lsl r0
    b934:	03530100 	cmpeq	r3, #0, 2
    b938:	90110000 	andsls	r0, r1, r0
    b93c:	0100002c 	tsteq	r0, ip, lsr #32
    b940:	e33701ec 	teq	r7, #236, 2	; 0x3b
    b944:	bc000001 	stclt	0, cr0, [r0], {1}
    b948:	b40000ab 	strlt	r0, [r0], #-171	; 0xffffff55
    b94c:	120000ab 	andne	r0, r0, #171	; 0xab
    b950:	00000a74 	andeq	r0, r0, r4, ror sl
    b954:	1301ee01 	movwne	lr, #7681	; 0x1e01
    b958:	000001e3 	andeq	r0, r0, r3, ror #3
    b95c:	0000abf9 	strdeq	sl, [r0], -r9
    b960:	0000abf3 	strdeq	sl, [r0], -r3
    b964:	63757015 	cmnvs	r5, #21
    b968:	01ef0100 	mvneq	r0, r0, lsl #2
    b96c:	0000cc0f 	andeq	ip, r0, pc, lsl #24
    b970:	00ac2f00 	adceq	r2, ip, r0, lsl #30
    b974:	00ac2700 	adceq	r2, ip, r0, lsl #14
    b978:	84160000 	ldrhi	r0, [r6], #-0
    b97c:	0100002c 	tsteq	r0, ip, lsr #32
    b980:	010d01bc 			; <UNDEFINED> instruction: 0x010d01bc
    b984:	10003314 	andne	r3, r0, r4, lsl r3
    b988:	1000336c 	andne	r3, r0, ip, ror #6
    b98c:	01007d02 	tsteq	r0, r2, lsl #26
    b990:	000003c2 	andeq	r0, r0, r2, asr #7
    b994:	002ce712 	eoreq	lr, ip, r2, lsl r7
    b998:	01be0100 			; <UNDEFINED> instruction: 0x01be0100
    b99c:	0001e313 	andeq	lr, r1, r3, lsl r3
    b9a0:	00ac6500 	adceq	r6, ip, r0, lsl #10
    b9a4:	00ac6300 	adceq	r6, ip, r0, lsl #6
    b9a8:	2b051200 	blcs	1501b0 <__RAM_SIZE+0x501b0>
    b9ac:	bf010000 	svclt	0x00010000
    b9b0:	00b41b01 	adcseq	r1, r4, r1, lsl #22
    b9b4:	ac7c0000 	ldclge	0, cr0, [ip], #-0
    b9b8:	ac780000 	ldclge	0, cr0, [r8], #-0
    b9bc:	68120000 	ldmdavs	r2, {}	; <UNPREDICTABLE>
    b9c0:	0100002b 	tsteq	r0, fp, lsr #32
    b9c4:	b42b01bf 	strtlt	r0, [fp], #-447	; 0xfffffe41
    b9c8:	9e000000 	cdpls	0, 0, cr0, cr0, cr0, {0}
    b9cc:	9a0000ac 	bls	bc84 <__HEAP_SIZE+0xac84>
    b9d0:	120000ac 	andne	r0, r0, #172	; 0xac
    b9d4:	00002ca0 	andeq	r2, r0, r0, lsr #25
    b9d8:	0c01c001 	stceq	0, cr12, [r1], {1}
    b9dc:	00000029 	andeq	r0, r0, r9, lsr #32
    b9e0:	0000acc3 	andeq	sl, r0, r3, asr #25
    b9e4:	0000acbd 			; <UNDEFINED> instruction: 0x0000acbd
    b9e8:	44011700 	strmi	r1, [r1], #-1792	; 0xfffff900
    b9ec:	0100002c 	tsteq	r0, ip, lsr #32
    b9f0:	010801a9 	smlatbeq	r8, r9, r1, r0
    b9f4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    ba00:	0000acf2 	strdeq	sl, [r0], -r2
    ba04:	00045001 	andeq	r5, r4, r1
    ba08:	2ce21100 	stfcse	f1, [r2]
    ba0c:	a9010000 	stmdbge	r1, {}	; <UNPREDICTABLE>
    ba10:	00291d01 	eoreq	r1, r9, r1, lsl #26
    ba14:	ad1a0000 	ldcge	0, cr0, [sl, #-0]
    ba18:	ad120000 	ldcge	0, cr0, [r2, #-0]
    ba1c:	c8110000 	ldmdagt	r1, {}	; <UNPREDICTABLE>
    ba20:	0100002b 	tsteq	r0, fp, lsr #32
    ba24:	291d01aa 	ldmdbcs	sp, {r1, r3, r5, r7, r8}
    ba28:	57000000 	strpl	r0, [r0, -r0]
    ba2c:	510000ad 	smlatbpl	r0, sp, r0, r0
    ba30:	150000ad 	strne	r0, [r0, #-173]	; 0xffffff53
    ba34:	01007670 	tsteq	r0, r0, ror r6
    ba38:	9f0c01ac 	svcls	0x000c01ac
    ba3c:	8b000000 	blhi	ba44 <__HEAP_SIZE+0xaa44>
    ba40:	830000ad 	movwhi	r0, #173	; 0xad
    ba44:	180000ad 	stmdane	r0, {r0, r2, r3, r5, r7}
    ba48:	00000000 	andeq	r0, r0, r0
    ba4c:	0000051e 	andeq	r0, r0, lr, lsl r5
    ba50:	00000434 	andeq	r0, r0, r4, lsr r4
    ba54:	02500119 	subseq	r0, r0, #1073741830	; 0x40000006
    ba58:	1a000074 	bne	bc30 <__HEAP_SIZE+0xac30>
    ba5c:	00000000 	andeq	r0, r0, r0
    ba60:	0000060b 	andeq	r0, r0, fp, lsl #12
    ba64:	02500119 	subseq	r0, r0, #1073741830	; 0x40000006
    ba68:	01190075 	tsteq	r9, r5, ror r0
    ba6c:	19300151 	ldmdbne	r0!, {r0, r4, r6, r8}
    ba70:	74025201 	strvc	r5, [r2], #-513	; 0xfffffdff
    ba74:	0f000000 	svceq	0x00000000
    ba78:	002d0401 	eoreq	r0, sp, r1, lsl #8
    ba7c:	01a30100 			; <UNDEFINED> instruction: 0x01a30100
    ba80:	00000106 	andeq	r0, r0, r6, lsl #2
    ba84:	00000000 	andeq	r0, r0, r0
    ba88:	7d020000 	stcvc	0, cr0, [r2, #-0]
    ba8c:	011b0100 	tsteq	fp, r0, lsl #2
    ba90:	00002bce 	andeq	r2, r0, lr, asr #23
    ba94:	08019d01 	stmdaeq	r1, {r0, r8, sl, fp, ip, pc}
    ba98:	00002901 	andeq	r2, r0, r1, lsl #18
	...
    baa4:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    baa8:	84011b01 	strhi	r1, [r1], #-2817	; 0xfffff4ff
    baac:	0100002b 	tsteq	r0, fp, lsr #32
    bab0:	01080197 			; <UNDEFINED> instruction: 0x01080197
    bab4:	00000029 	andeq	r0, r0, r9, lsr #32
	...
    bac0:	01007d02 	tsteq	r0, r2, lsl #26
    bac4:	12650110 	rsbne	r0, r5, #16, 2
    bac8:	5c010000 	stcpl	0, cr0, [r1], {-0}
    bacc:	a4010601 	strge	r0, [r1], #-1537	; 0xfffff9ff
    bad0:	f4100034 			; <UNDEFINED> instruction: 0xf4100034
    bad4:	c1100034 	tstgt	r0, r4, lsr r0
    bad8:	010000ad 	smlatbeq	r0, sp, r0, r0
    badc:	0000051e 	andeq	r0, r0, lr, lsl r5
    bae0:	0076701c 	rsbseq	r7, r6, ip, lsl r0
    bae4:	18015c01 	stmdane	r1, {r0, sl, fp, ip, lr}
    bae8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    baec:	0000adf7 	strdeq	sl, [r0], -r7
    baf0:	0000aded 	andeq	sl, r0, sp, ror #27
    baf4:	63757015 	cmnvs	r5, #21
    baf8:	015e0100 	cmpeq	lr, r0, lsl #2
    bafc:	0000cc0f 	andeq	ip, r0, pc, lsl #24
    bb00:	00ae3c00 	adceq	r3, lr, r0, lsl #24
    bb04:	00ae3600 	adceq	r3, lr, r0, lsl #12
    bb08:	2d2c1200 	sfmcs	f1, 4, [ip, #-0]
    bb0c:	5f010000 	svcpl	0x00010000
    bb10:	01e31301 	mvneq	r1, r1, lsl #6
    bb14:	ae670000 	cdpge	0, 6, cr0, cr7, cr0, {0}
    bb18:	ae650000 	cdpge	0, 6, cr0, cr5, cr0, {0}
    bb1c:	ca130000 	bgt	4cbb24 <__RAM_SIZE+0x3cbb24>
    bb20:	d1100034 	tstle	r0, r4, lsr r0
    bb24:	18000005 	stmdane	r0, {r0, r2}
    bb28:	100034dc 	ldrdne	r3, [r0], -ip
    bb2c:	000002f8 	strdeq	r0, [r0], -r8
    bb30:	00000514 	andeq	r0, r0, r4, lsl r5
    bb34:	02500119 	subseq	r0, r0, #1073741830	; 0x40000006
    bb38:	13000075 	movwne	r0, #117	; 0x75
    bb3c:	100034e8 	andne	r3, r0, r8, ror #9
    bb40:	000005e0 	andeq	r0, r0, r0, ror #11
    bb44:	9c011d00 	stcls	13, cr1, [r1], {-0}
    bb48:	0100000d 	tsteq	r0, sp
    bb4c:	9f0108ad 	svcls	0x000108ad
    bb50:	d0000000 	andle	r0, r0, r0
    bb54:	a4100033 	ldrge	r0, [r0], #-51	; 0xffffffcd
    bb58:	7a100034 	bvc	40bc30 <__RAM_SIZE+0x30bc30>
    bb5c:	010000ae 	smlatbeq	r0, lr, r0, r0
    bb60:	000005d1 	ldrdeq	r0, [r0], -r1
    bb64:	002cf81e 	eoreq	pc, ip, lr, lsl r8	; <UNPREDICTABLE>
    bb68:	1dad0100 	stfnes	f0, [sp]
    bb6c:	00000029 	andeq	r0, r0, r9, lsr #32
    bb70:	0000aea6 	andeq	sl, r0, r6, lsr #29
    bb74:	0000ae9a 	muleq	r0, sl, lr
    bb78:	002ab21f 	eoreq	fp, sl, pc, lsl r2
    bb7c:	13af0100 			; <UNDEFINED> instruction: 0x13af0100
    bb80:	000001e3 	andeq	r0, r0, r3, ror #3
    bb84:	0000aef8 	strdeq	sl, [r0], -r8
    bb88:	0000aef2 	strdeq	sl, [r0], -r2
    bb8c:	002a5b1f 	eoreq	r5, sl, pc, lsl fp
    bb90:	13b00100 	movsne	r0, #0, 2
    bb94:	000001e3 	andeq	r0, r0, r3, ror #3
    bb98:	0000af29 	andeq	sl, r0, r9, lsr #30
    bb9c:	0000af21 	andeq	sl, r0, r1, lsr #30
    bba0:	002b751f 	eoreq	r7, fp, pc, lsl r5
    bba4:	13b10100 			; <UNDEFINED> instruction: 0x13b10100
    bba8:	000001e3 	andeq	r0, r0, r3, ror #3
    bbac:	0000af64 	andeq	sl, r0, r4, ror #30
    bbb0:	0000af62 	andeq	sl, r0, r2, ror #30
    bbb4:	0026a51f 	eoreq	sl, r6, pc, lsl r5
    bbb8:	0cb20100 	ldfeqs	f0, [r2]
    bbbc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    bbc0:	0000af7d 	andeq	sl, r0, sp, ror pc
    bbc4:	0000af77 	andeq	sl, r0, r7, ror pc
    bbc8:	002b991f 	eoreq	r9, fp, pc, lsl r9
    bbcc:	0cb30100 	ldfeqs	f0, [r3]
    bbd0:	00000029 	andeq	r0, r0, r9, lsr #32
    bbd4:	0000afac 	andeq	sl, r0, ip, lsr #31
    bbd8:	0000afa8 	andeq	sl, r0, r8, lsr #31
    bbdc:	0033f813 	eorseq	pc, r3, r3, lsl r8	; <UNPREDICTABLE>
    bbe0:	0005d110 	andeq	sp, r5, r0, lsl r1
    bbe4:	341c1300 	ldrcc	r1, [ip], #-768	; 0xfffffd00
    bbe8:	03531000 	cmpeq	r3, #0
    bbec:	7c130000 	ldcvc	0, cr0, [r3], {-0}
    bbf0:	e0100034 	ands	r0, r0, r4, lsr r0
    bbf4:	00000005 	andeq	r0, r0, r5
    bbf8:	c0010120 	andgt	r0, r1, r0, lsr #2
    bbfc:	c000000d 	andgt	r0, r0, sp
    bc00:	0700000d 	streq	r0, [r0, -sp]
    bc04:	2006065b 	andcs	r0, r6, fp, asr r6
    bc08:	121b0101 	andsne	r0, fp, #1073741824	; 0x40000000
    bc0c:	121b0000 	andsne	r0, fp, #0
    bc10:	93070000 	movwls	r0, #28672	; 0x7000
    bc14:	01210c06 			; <UNDEFINED> instruction: 0x01210c06
    bc18:	000c7701 	andeq	r7, ip, r1, lsl #14
    bc1c:	000c7700 	andeq	r7, ip, r0, lsl #14
    bc20:	0d710500 	cfldr64eq	mvdx0, [r1, #-0]
    bc24:	e7010121 	str	r0, [r1, -r1, lsr #2]
    bc28:	e700000a 	str	r0, [r0, -sl]
    bc2c:	0500000a 	streq	r0, [r0, #-10]
    bc30:	01220d72 			; <UNDEFINED> instruction: 0x01220d72
    bc34:	0001a101 	andeq	sl, r1, r1, lsl #2
    bc38:	00019700 	andeq	r9, r1, r0, lsl #14
    bc3c:	00000800 	andeq	r0, r0, r0, lsl #16
    bc40:	00000563 	andeq	r0, r0, r3, ror #10
    bc44:	18ba0002 	ldmne	sl!, {r1}
    bc48:	01040000 	mrseq	r0, (UNDEF: 4)
    bc4c:	000000bf 	strheq	r0, [r0], -pc	; <UNPREDICTABLE>
    bc50:	002da40c 	eoreq	sl, sp, ip, lsl #8
    bc54:	0001a800 	andeq	sl, r1, r0, lsl #16
    bc58:	000b8800 	andeq	r8, fp, r0, lsl #16
	...
    bc64:	00848800 	addeq	r8, r4, r0, lsl #16
    bc68:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
    bc6c:	00746e69 	rsbseq	r6, r4, r9, ror #28
    bc70:	1d070403 	cfstrsne	mvf0, [r7, #-12]
    bc74:	03000002 	movweq	r0, #2
    bc78:	02550508 	subseq	r0, r5, #8, 10	; 0x2000000
    bc7c:	08030000 	stmdaeq	r3, {}	; <UNPREDICTABLE>
    bc80:	00024904 	andeq	r4, r2, r4, lsl #18
    bc84:	06010300 	streq	r0, [r1], -r0, lsl #6
    bc88:	0000008f 	andeq	r0, r0, pc, lsl #1
    bc8c:	00000004 	andeq	r0, r0, r4
    bc90:	182b0200 	stmdane	fp!, {r9}
    bc94:	00000058 	andeq	r0, r0, r8, asr r0
    bc98:	8d080103 	stfhis	f0, [r8, #-12]
    bc9c:	03000000 	movweq	r0, #0
    bca0:	02a50502 	adceq	r0, r5, #8388608	; 0x800000
    bca4:	02030000 	andeq	r0, r3, #0
    bca8:	0000ac07 	andeq	sl, r0, r7, lsl #24
    bcac:	05040300 	streq	r0, [r4, #-768]	; 0xfffffd00
    bcb0:	0000025a 	andeq	r0, r0, sl, asr r2
    bcb4:	00037d04 	andeq	r7, r3, r4, lsl #26
    bcb8:	194f0200 	stmdbne	pc, {r9}^	; <UNPREDICTABLE>
    bcbc:	00000080 	andeq	r0, r0, r0, lsl #1
    bcc0:	18070403 	stmdane	r7, {r0, r1, sl}
    bcc4:	03000002 	movweq	r0, #2
    bcc8:	02130708 	andseq	r0, r3, #8, 14	; 0x200000
    bccc:	02040000 	andeq	r0, r4, #0
    bcd0:	03000000 	movweq	r0, #0
    bcd4:	004c1318 	subeq	r1, ip, r8, lsl r3
    bcd8:	7f040000 	svcvc	0x00040000
    bcdc:	03000003 	movweq	r0, #3
    bce0:	00741430 	rsbseq	r1, r4, r0, lsr r4
    bce4:	9a050000 	bls	14bcec <__RAM_SIZE+0x4bcec>
    bce8:	04000000 	streq	r0, [r0], #-0
    bcec:	00001cdc 	ldrdeq	r1, [r0], -ip
    bcf0:	b7112404 	ldrlt	r2, [r1, -r4, lsl #8]
    bcf4:	06000000 	streq	r0, [r0], -r0
    bcf8:	0000bd04 	andeq	fp, r0, r4, lsl #26
    bcfc:	c9010700 	stmdbgt	r1, {r8, r9, sl}
    bd00:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    bd04:	000000c9 	andeq	r0, r0, r9, asr #1
    bd08:	04040900 	streq	r0, [r4], #-2304	; 0xfffff700
    bd0c:	00001603 	andeq	r1, r0, r3, lsl #12
    bd10:	9a1a4905 	bls	69e12c <__RAM_SIZE+0x59e12c>
    bd14:	04000000 	streq	r0, [r0], #-0
    bd18:	00000a69 	andeq	r0, r0, r9, ror #20
    bd1c:	6d1a4a05 	vldrvs	s8, [sl, #-20]	; 0xffffffec
    bd20:	04000000 	streq	r0, [r0], #-0
    bd24:	000009c4 	andeq	r0, r0, r4, asr #19
    bd28:	9a1a5105 	bls	6a0144 <__RAM_SIZE+0x5a0144>
    bd2c:	03000000 	movweq	r0, #0
    bd30:	00960801 	addseq	r0, r6, r1, lsl #16
    bd34:	04060000 	streq	r0, [r6], #-0
    bd38:	000000cb 	andeq	r0, r0, fp, asr #1
    bd3c:	5801070a 	stmdapl	r1, {r1, r3, r8, r9, sl}
    bd40:	07000000 	streq	r0, [r0, -r0]
    bd44:	011d01b6 			; <UNDEFINED> instruction: 0x011d01b6
    bd48:	7e0b0000 	cdpvc	0, 0, cr0, cr11, cr0, {0}
    bd4c:	00000018 	andeq	r0, r0, r8, lsl r0
    bd50:	0020680b 	eoreq	r6, r0, fp, lsl #16
    bd54:	7f0b0100 	svcvc	0x000b0100
    bd58:	02000020 	andeq	r0, r0, #32
    bd5c:	2f1d0400 	svccs	0x001d0400
    bd60:	56010000 	strpl	r0, [r1], -r0
    bd64:	00012e12 	andeq	r2, r1, r2, lsl lr
    bd68:	011d0c00 	tsteq	sp, r0, lsl #24
    bd6c:	04060000 	streq	r0, [r6], #-0
    bd70:	00000134 	andeq	r0, r0, r4, lsr r1
    bd74:	330e010d 	movwcc	r0, #57613	; 0xe10d
    bd78:	0100002d 	tsteq	r0, sp, lsr #32
    bd7c:	a62a0200 	strtge	r0, [sl], -r0, lsl #4
    bd80:	05000000 	streq	r0, [r0, #-0]
    bd84:	00001003 	andeq	r1, r0, r3
    bd88:	2f450e38 	svccs	0x00450e38
    bd8c:	1d010000 	stcne	0, cr0, [r1, #-0]
    bd90:	009a2502 	addseq	r2, sl, r2, lsl #10
    bd94:	03050000 	movweq	r0, #20480	; 0x5000
    bd98:	38008d0c 	stmdacc	r0, {r2, r3, r8, sl, fp, pc}
    bd9c:	002e870e 	eoreq	r8, lr, lr, lsl #14
    bda0:	02230100 	eoreq	r0, r3, #0, 2
    bda4:	00009a25 	andeq	r9, r0, r5, lsr #20
    bda8:	10030500 	andne	r0, r3, r0, lsl #10
    bdac:	0e38008d 	cdpeq	0, 3, cr0, cr8, cr13, {4}
    bdb0:	00002e1d 	andeq	r2, r0, sp, lsl lr
    bdb4:	25022901 	strcs	r2, [r2, #-2305]	; 0xfffff6ff
    bdb8:	0000009a 	muleq	r0, sl, r0
    bdbc:	8d080305 	stchi	3, cr0, [r8, #-20]	; 0xffffffec
    bdc0:	010f3800 	tsteq	pc, r0, lsl #16
    bdc4:	00002ed8 	ldrdeq	r2, [r0], -r8
    bdc8:	0c07af01 	stceq	15, cr10, [r7], {1}
    bdcc:	0000d701 	andeq	sp, r0, r1, lsl #14
	...
    bdd8:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    bddc:	0001c501 	andeq	ip, r1, r1, lsl #10
    bde0:	2eef1000 	cdpcs	0, 14, cr1, cr15, cr0, {0}
    bde4:	b1010000 	mrslt	r0, (UNDEF: 1)
    bde8:	009a0e07 	addseq	r0, sl, r7, lsl #28
    bdec:	afcc0000 	svcge	0x00cc0000
    bdf0:	afca0000 	svcge	0x00ca0000
    bdf4:	bd110000 	ldclt	0, cr0, [r1, #-0]
    bdf8:	0100001a 	tsteq	r0, sl, lsl r0
    bdfc:	d71007b2 			; <UNDEFINED> instruction: 0xd71007b2
    be00:	01000000 	mrseq	r0, (UNDEF: 0)
    be04:	bf011200 	svclt	0x00011200
    be08:	0100001f 	tsteq	r0, pc, lsl r0
    be0c:	010606ee 	smlatteq	r6, lr, r6, r0
	...
    be18:	01007d02 	tsteq	r0, r2, lsl #26
    be1c:	15020113 	strne	r0, [r2, #-275]	; 0xfffffeed
    be20:	55010000 	strpl	r0, [r1, #-0]
    be24:	d7010c06 	strle	r0, [r1, -r6, lsl #24]
    be28:	74000000 	strvc	r0, [r0], #-0
    be2c:	b4100037 	ldrlt	r0, [r0], #-55	; 0xffffffc9
    be30:	df100037 	svcle	0x00100037
    be34:	010000af 	smlatbeq	r0, pc, r0, r0	; <UNPREDICTABLE>
    be38:	00000234 	andeq	r0, r0, r4, lsr r2
    be3c:	00020f14 	andeq	r0, r2, r4, lsl pc
    be40:	2d6e1500 	cfstr64cs	mvdx1, [lr, #-0]
    be44:	65010000 	strvs	r0, [r1, #-0]
    be48:	023a2106 	eorseq	r2, sl, #-2147483647	; 0x80000001
    be4c:	16000000 	strne	r0, [r0], -r0
    be50:	1000379c 	mulne	r0, ip, r7
    be54:	0000040b 	andeq	r0, r0, fp, lsl #8
    be58:	0037a416 	eorseq	sl, r7, r6, lsl r4
    be5c:	0004f210 	andeq	pc, r4, r0, lsl r2	; <UNPREDICTABLE>
    be60:	37a81600 	strcc	r1, [r8, r0, lsl #12]!
    be64:	05001000 	streq	r1, [r0, #-0]
    be68:	ac160000 	ldcge	0, cr0, [r6], {-0}
    be6c:	d6100037 			; <UNDEFINED> instruction: 0xd6100037
    be70:	00000003 	andeq	r0, r0, r3
    be74:	01290406 			; <UNDEFINED> instruction: 0x01290406
    be78:	340c0000 	strcc	r0, [ip], #-0
    be7c:	13000002 	movwne	r0, #2
    be80:	001c3401 	andseq	r3, ip, r1, lsl #8
    be84:	06020100 	streq	r0, [r2], -r0, lsl #2
    be88:	00f60113 	rscseq	r0, r6, r3, lsl r1
    be8c:	36e40000 	strbtcc	r0, [r4], r0
    be90:	37741000 	ldrbcc	r1, [r4, -r0]!
    be94:	afff1000 	svcge	0x00ff1000
    be98:	ae010000 	cdpge	0, 0, cr0, cr1, cr0, {0}
    be9c:	17000002 	strne	r0, [r0, -r2]
    bea0:	000023ba 			; <UNDEFINED> instruction: 0x000023ba
    bea4:	38060201 	stmdacc	r6, {r0, r9}
    bea8:	000000f6 	strdeq	r0, [r0], -r6
    beac:	0000b053 	andeq	fp, r0, r3, asr r0
    beb0:	0000b02b 	andeq	fp, r0, fp, lsr #32
    beb4:	002e7a18 	eoreq	r7, lr, r8, lsl sl
    beb8:	06030100 	streq	r0, [r3], -r0, lsl #2
    bebc:	0000f638 	andeq	pc, r0, r8, lsr r6	; <UNPREDICTABLE>
    bec0:	17510100 	ldrbne	r0, [r1, -r0, lsl #2]
    bec4:	00002ed1 	ldrdeq	r2, [r0], -r1
    bec8:	39060401 	stmdbcc	r6, {r0, sl}
    becc:	000000ab 	andeq	r0, r0, fp, lsr #1
    bed0:	0000b163 	andeq	fp, r0, r3, ror #2
    bed4:	0000b15d 	andeq	fp, r0, sp, asr r1
    bed8:	001f2817 	andseq	r2, pc, r7, lsl r8	; <UNPREDICTABLE>
    bedc:	06050100 	streq	r0, [r5], -r0, lsl #2
    bee0:	0000c931 	andeq	ip, r0, r1, lsr r9
    bee4:	00b19500 	adcseq	r9, r1, r0, lsl #10
    bee8:	00b18f00 	adcseq	r8, r1, r0, lsl #30
    beec:	01190000 	tsteq	r9, r0
    bef0:	00002d7c 	andeq	r2, r0, ip, ror sp
    bef4:	06040901 	streq	r0, [r4], -r1, lsl #18
    bef8:	0036ce01 	eorseq	ip, r6, r1, lsl #28
    befc:	0036e210 	eorseq	lr, r6, r0, lsl r2
    bf00:	00b1c010 	adcseq	ip, r1, r0, lsl r0
    bf04:	03130100 	tsteq	r3, #0, 2
    bf08:	07170000 	ldreq	r0, [r7, -r0]
    bf0c:	0100002e 	tsteq	r0, lr, lsr #32
    bf10:	13240409 			; <UNDEFINED> instruction: 0x13240409
    bf14:	e8000003 	stmda	r0, {r0, r1}
    bf18:	e00000b1 	strh	r0, [r0], -r1
    bf1c:	100000b1 	strhne	r0, [r0], -r1
    bf20:	00002d4d 	andeq	r2, r0, sp, asr #26
    bf24:	0e041901 	vmlaeq.f16	s2, s8, s2	; <UNPREDICTABLE>
    bf28:	0000009a 	muleq	r0, sl, r0
    bf2c:	0000b228 	andeq	fp, r0, r8, lsr #4
    bf30:	0000b222 	andeq	fp, r0, r2, lsr #4
    bf34:	002d5210 	eoreq	r5, sp, r0, lsl r2
    bf38:	04220100 	strteq	r0, [r2], #-256	; 0xffffff00
    bf3c:	00008e0d 	andeq	r8, r0, sp, lsl #28
    bf40:	00b25700 	adcseq	r5, r2, r0, lsl #14
    bf44:	00b25300 	adcseq	r5, r2, r0, lsl #6
    bf48:	36e01600 	strbtcc	r1, [r0], r0, lsl #12
    bf4c:	050f1000 	streq	r1, [pc, #-0]	; bf54 <__HEAP_SIZE+0xaf54>
    bf50:	06000000 	streq	r0, [r0], -r0
    bf54:	00009a04 	andeq	r9, r0, r4, lsl #20
    bf58:	27011900 	strcs	r1, [r1, -r0, lsl #18]
    bf5c:	0100002f 	tsteq	r0, pc, lsr #32
    bf60:	010603f2 	strdeq	r0, [r6, -r2]
    bf64:	100036ac 	andne	r3, r0, ip, lsr #13
    bf68:	100036ce 	andne	r3, r0, lr, asr #13
    bf6c:	0000b275 	andeq	fp, r0, r5, ror r2
    bf70:	00036d01 	andeq	r6, r3, r1, lsl #26
    bf74:	2f5d1000 	svccs	0x005d1000
    bf78:	f4010000 	vst4.8	{d0-d3}, [r1], r0
    bf7c:	009a0e03 	addseq	r0, sl, r3, lsl #28
    bf80:	b2990000 	addslt	r0, r9, #0
    bf84:	b2950000 	addslt	r0, r5, #0
    bf88:	b2160000 	andslt	r0, r6, #0
    bf8c:	1d100036 	ldcne	0, cr0, [r0, #-216]	; 0xffffff28
    bf90:	16000005 	strne	r0, [r0], -r5
    bf94:	100036b8 			; <UNDEFINED> instruction: 0x100036b8
    bf98:	0000052b 	andeq	r0, r0, fp, lsr #10
    bf9c:	0036cc1a 	eorseq	ip, r6, sl, lsl ip
    bfa0:	00053a10 	andeq	r3, r5, r0, lsl sl
    bfa4:	50011b00 	andpl	r1, r1, r0, lsl #22
    bfa8:	00007402 	andeq	r7, r0, r2, lsl #8
    bfac:	e7011900 	str	r1, [r1, -r0, lsl #18]
    bfb0:	0100000a 	tsteq	r0, sl
    bfb4:	010603e6 	smlatteq	r6, r6, r3, r0
    bfb8:	10003690 	mulne	r0, r0, r6
    bfbc:	100036ac 	andne	r3, r0, ip, lsr #13
    bfc0:	0000b2b7 			; <UNDEFINED> instruction: 0x0000b2b7
    bfc4:	00039901 	andeq	r9, r3, r1, lsl #18
    bfc8:	36a61a00 	strtcc	r1, [r6], r0, lsl #20
    bfcc:	053a1000 	ldreq	r1, [sl, #-0]!
    bfd0:	011b0000 	tsteq	fp, r0
    bfd4:	00300150 	eorseq	r0, r0, r0, asr r1
    bfd8:	77011900 	strvc	r1, [r1, -r0, lsl #18]
    bfdc:	0100000c 	tsteq	r0, ip
    bfe0:	010603da 	ldrdeq	r0, [r6, -sl]
    bfe4:	10003674 	andne	r3, r0, r4, ror r6
    bfe8:	10003690 	mulne	r0, r0, r6
    bfec:	0000b2d7 	ldrdeq	fp, [r0], -r7
    bff0:	0003bf01 	andeq	fp, r3, r1, lsl #30
    bff4:	367a1600 	ldrbtcc	r1, [sl], -r0, lsl #12
    bff8:	051d1000 	ldreq	r1, [sp, #-0]
    bffc:	12000000 	andne	r0, r0, #0
    c000:	000b2201 	andeq	r2, fp, r1, lsl #4
    c004:	03ce0100 	biceq	r0, lr, #0, 2
    c008:	365c0106 	ldrbcc	r0, [ip], -r6, lsl #2
    c00c:	36721000 	ldrbtcc	r1, [r2], -r0
    c010:	7d021000 	stcvc	0, cr1, [r2, #-0]
    c014:	a71c0100 	ldrge	r0, [ip, -r0, lsl #2]
    c018:	0100002e 	tsteq	r0, lr, lsr #32
    c01c:	010d0326 	tsteq	sp, r6, lsr #6
    c020:	100034f4 	strdne	r3, [r0], -r4
    c024:	1000350c 	andne	r3, r0, ip, lsl #10
    c028:	0000b2f7 	strdeq	fp, [r0], -r7
    c02c:	00040b01 	andeq	r0, r4, r1, lsl #22
    c030:	2d450e00 	stclcs	14, cr0, [r5, #-0]
    c034:	28010000 	stmdacs	r1, {}	; <UNPREDICTABLE>
    c038:	00a61703 	adceq	r1, r6, r3, lsl #14
    c03c:	91020000 	mrsls	r0, (UNDEF: 2)
    c040:	35001674 	strcc	r1, [r0, #-1652]	; 0xfffff98c
    c044:	051d1000 	ldreq	r1, [sp, #-0]
    c048:	12000000 	andne	r0, r0, #0
    c04c:	002eb801 	eoreq	fp, lr, r1, lsl #16
    c050:	030a0100 	movweq	r0, #41216	; 0xa100
    c054:	36200120 	strtcc	r0, [r0], -r0, lsr #2
    c058:	365c1000 	ldrbcc	r1, [ip], -r0
    c05c:	7d021000 	stcvc	0, cr1, [r2, #-0]
    c060:	01190100 	tsteq	r9, r0, lsl #2
    c064:	00002131 	andeq	r2, r0, r1, lsr r1
    c068:	24022f01 	strcs	r2, [r2], #-3841	; 0xfffff0ff
    c06c:	00350c01 	eorseq	r0, r5, r1, lsl #24
    c070:	00362010 	eorseq	r2, r6, r0, lsl r0
    c074:	00b32f10 	adcseq	r2, r3, r0, lsl pc
    c078:	04f20100 	ldrbteq	r0, [r2], #256	; 0x100
    c07c:	6f170000 	svcvs	0x00170000
    c080:	01000016 	tsteq	r0, r6, lsl r0
    c084:	e34b022f 	movt	r0, #45615	; 0xb22f
    c088:	59000000 	stmdbpl	r0, {}	; <UNPREDICTABLE>
    c08c:	4f0000b3 	svcmi	0x000000b3
    c090:	100000b3 	strhne	r0, [r0], -r3
    c094:	00002f37 	andeq	r2, r0, r7, lsr pc
    c098:	12023101 	andne	r3, r2, #1073741824	; 0x40000000
    c09c:	0000009a 	muleq	r0, sl, r0
    c0a0:	0000b39e 	muleq	r0, lr, r3
    c0a4:	0000b39a 	muleq	r0, sl, r3
    c0a8:	002d8e10 	eoreq	r8, sp, r0, lsl lr
    c0ac:	02310100 	eorseq	r0, r1, #0, 2
    c0b0:	00009a21 	andeq	r9, r0, r1, lsr #20
    c0b4:	00b3c000 	adcseq	ip, r3, r0
    c0b8:	00b3bc00 	adcseq	fp, r3, r0, lsl #24
    c0bc:	2dea1000 	stclcs	0, cr1, [sl]
    c0c0:	31010000 	mrscc	r0, (UNDEF: 1)
    c0c4:	009a3802 	addseq	r3, sl, r2, lsl #16
    c0c8:	b3e20000 	mvnlt	r0, #0
    c0cc:	b3de0000 	bicslt	r0, lr, #0
    c0d0:	38100000 	ldmdacc	r0, {}	; <UNPREDICTABLE>
    c0d4:	0100002e 	tsteq	r0, lr, lsr #32
    c0d8:	9a560231 	bls	158c9a4 <__RAM_SIZE+0x148c9a4>
    c0dc:	0b000000 	bleq	c0e4 <__HEAP_SIZE+0xb0e4>
    c0e0:	050000b4 	streq	r0, [r0, #-180]	; 0xffffff4c
    c0e4:	100000b4 	strhne	r0, [r0], -r4
    c0e8:	00002e66 	andeq	r2, r0, r6, ror #28
    c0ec:	14023201 	strne	r3, [r2], #-513	; 0xfffffdff
    c0f0:	000000e3 	andeq	r0, r0, r3, ror #1
    c0f4:	0000b43a 	andeq	fp, r0, sl, lsr r4
    c0f8:	0000b434 	andeq	fp, r0, r4, lsr r4
    c0fc:	0035b21d 	eorseq	fp, r5, sp, lsl r2
    c100:	0035d610 	eorseq	sp, r5, r0, lsl r6
    c104:	0004df10 	andeq	sp, r4, r0, lsl pc
    c108:	2e501000 	cdpcs	0, 5, cr1, cr0, cr0, {0}
    c10c:	a5010000 	strge	r0, [r1, #-0]
    c110:	009a1a02 	addseq	r1, sl, r2, lsl #20
    c114:	b4670000 	strbtlt	r0, [r7], #-0
    c118:	b4650000 	strbtlt	r0, [r5], #-0
    c11c:	16000000 	strne	r0, [r0], -r0
    c120:	10003526 	andne	r3, r0, r6, lsr #10
    c124:	00000548 	andeq	r0, r0, r8, asr #10
    c128:	0035ee16 	eorseq	lr, r5, r6, lsl lr
    c12c:	00055710 	andeq	r5, r5, r0, lsl r7
    c130:	011e0000 	tsteq	lr, r0
    c134:	002d5e01 	eoreq	r5, sp, r1, lsl #28
    c138:	002d5e00 	eoreq	r5, sp, r0, lsl #28
    c13c:	064d0600 	strbeq	r0, [sp], -r0, lsl #12
    c140:	8401011f 	strhi	r0, [r1], #-287	; 0xfffffee1
    c144:	8400001e 	strhi	r0, [r0], #-30	; 0xffffffe2
    c148:	0700001e 	smladeq	r0, lr, r0, r0
    c14c:	1e1b0df5 	mrcne	13, 0, r0, cr11, cr5, {7}
    c150:	2f020101 	svccs	0x00020101
    c154:	2f020000 	svccs	0x00020000
    c158:	2a060000 	bcs	18c160 <__RAM_SIZE+0x8c160>
    c15c:	01011e06 	tsteq	r1, r6, lsl #28
    c160:	00001021 	andeq	r1, r0, r1, lsr #32
    c164:	00001021 	andeq	r1, r0, r1, lsr #32
    c168:	1f0a5206 	svcne	0x000a5206
    c16c:	19810101 	stmibne	r1, {r0, r8}
    c170:	19810000 	stmibne	r1, {}	; <UNPREDICTABLE>
    c174:	9a070000 	bls	1cc17c <__RAM_SIZE+0xcc17c>
    c178:	011e0c0d 	tsteq	lr, sp, lsl #24
    c17c:	000d2d01 	andeq	r2, sp, r1, lsl #26
    c180:	000d2d00 	andeq	r2, sp, r0, lsl #26
    c184:	06570600 	ldrbeq	r0, [r7], -r0, lsl #12
    c188:	9001011f 	andls	r0, r1, pc, lsl r1
    c18c:	9000001a 	andls	r0, r0, sl, lsl r0
    c190:	0700001a 	smladeq	r0, sl, r0, r0
    c194:	1f160e58 	svcne	0x00160e58
    c198:	19940101 	ldmibne	r4, {r0, r8}
    c19c:	19940000 	ldmibne	r4, {}	; <UNPREDICTABLE>
    c1a0:	46070000 	strmi	r0, [r7], -r0
    c1a4:	7a000a0e 	bvc	e9e4 <__HEAP_SIZE+0xd9e4>
    c1a8:	02000001 	andeq	r0, r0, #1
    c1ac:	001a9800 	andseq	r9, sl, r0, lsl #16
    c1b0:	bf010400 	svclt	0x00010400
    c1b4:	0c000000 	stceq	0, cr0, [r0], {-0}
    c1b8:	00002f7b 	andeq	r2, r0, fp, ror pc
    c1bc:	000001a8 	andeq	r0, r0, r8, lsr #3
    c1c0:	00000bf0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
	...
    c1cc:	00008a7e 	andeq	r8, r0, lr, ror sl
    c1d0:	8f060102 	svchi	0x00060102
    c1d4:	02000000 	andeq	r0, r0, #0
    c1d8:	008d0801 	addeq	r0, sp, r1, lsl #16
    c1dc:	02020000 	andeq	r0, r2, #0
    c1e0:	0002a505 	andeq	sl, r2, r5, lsl #10
    c1e4:	07020200 	streq	r0, [r2, -r0, lsl #4]
    c1e8:	000000ac 	andeq	r0, r0, ip, lsr #1
    c1ec:	5a050402 	bpl	14d1fc <__RAM_SIZE+0x4d1fc>
    c1f0:	03000002 	movweq	r0, #2
    c1f4:	0000037d 	andeq	r0, r0, sp, ror r3
    c1f8:	58194f02 	ldmdapl	r9, {r1, r8, r9, sl, fp, lr}
    c1fc:	02000000 	andeq	r0, r0, #0
    c200:	02180704 	andseq	r0, r8, #4, 14	; 0x100000
    c204:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    c208:	00025505 	andeq	r5, r2, r5, lsl #10
    c20c:	07080200 	streq	r0, [r8, -r0, lsl #4]
    c210:	00000213 	andeq	r0, r0, r3, lsl r2
    c214:	69050404 	stmdbvs	r5, {r2, sl}
    c218:	0200746e 	andeq	r7, r0, #1845493760	; 0x6e000000
    c21c:	021d0704 	andseq	r0, sp, #4, 14	; 0x100000
    c220:	7f030000 	svcvc	0x00030000
    c224:	03000003 	movweq	r0, #3
    c228:	004c1430 	subeq	r1, ip, r0, lsr r4
    c22c:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    c230:	00024904 	andeq	r4, r2, r4, lsl #18
    c234:	0a690300 	beq	1a4ce3c <__RAM_SIZE+0x194ce3c>
    c238:	4a040000 	bmi	10c240 <__RAM_SIZE+0xc240>
    c23c:	0000451a 	andeq	r4, r0, sl, lsl r5
    c240:	d2010500 	andle	r0, r1, #0, 10
    c244:	0100002f 	tsteq	r0, pc, lsr #32
    c248:	010a01c7 	smlabteq	sl, r7, r1, r0
    c24c:	1000386c 	andne	r3, r0, ip, ror #16
    c250:	1000387e 	andne	r3, r0, lr, ror r8
    c254:	01007d02 	tsteq	r0, r2, lsl #26
    c258:	2f6c0105 	svccs	0x006c0105
    c25c:	6b010000 	blvs	4c264 <__HEAP_SIZE+0x4b264>
    c260:	24010a01 	strcs	r0, [r1], #-2561	; 0xfffff5ff
    c264:	68100038 	ldmdavs	r0, {r3, r4, r5}
    c268:	02100038 	andseq	r0, r0, #56	; 0x38
    c26c:	0601007d 			; <UNDEFINED> instruction: 0x0601007d
    c270:	000d2d01 	andeq	r2, sp, r1, lsl #26
    c274:	06e80100 	strbteq	r0, [r8], r0, lsl #2
    c278:	00381601 	eorseq	r1, r8, r1, lsl #12
    c27c:	00382410 	eorseq	r2, r8, r0, lsl r4
    c280:	007d0210 	rsbseq	r0, sp, r0, lsl r2
    c284:	0000f101 	andeq	pc, r0, r1, lsl #2
    c288:	2fee0700 	svccs	0x00ee0700
    c28c:	e8010000 	stmda	r1, {}	; <UNPREDICTABLE>
    c290:	00007b40 	andeq	r7, r0, r0, asr #22
    c294:	00500100 	subseq	r0, r0, r0, lsl #2
    c298:	10210108 	eorne	r0, r1, r8, lsl #2
    c29c:	d7010000 	strle	r0, [r1, -r0]
    c2a0:	007b010a 	rsbseq	r0, fp, sl, lsl #2
    c2a4:	38000000 	stmdacc	r0, {}	; <UNPREDICTABLE>
    c2a8:	38161000 	ldmdacc	r6, {ip}
    c2ac:	7d021000 	stcvc	0, cr1, [r2, #-0]
    c2b0:	01090100 	mrseq	r0, (UNDEF: 25)
    c2b4:	00002d5e 	andeq	r2, r0, lr, asr sp
    c2b8:	0106c201 	tsteq	r6, r1, lsl #4
    c2bc:	100037e0 	andne	r3, r0, r0, ror #15
    c2c0:	100037fa 	strdne	r3, [r0], -sl
    c2c4:	01007d02 	tsteq	r0, r2, lsl #26
    c2c8:	2fde0109 	svccs	0x00de0109
    c2cc:	b3010000 	movwlt	r0, #4096	; 0x1000
    c2d0:	00000106 	andeq	r0, r0, r6, lsl #2
    c2d4:	00000000 	andeq	r0, r0, r0
    c2d8:	7d020000 	stcvc	0, cr0, [r2, #-0]
    c2dc:	01090100 	mrseq	r0, (UNDEF: 25)
    c2e0:	00002ff5 	strdeq	r2, [r0], -r5
    c2e4:	0106a401 	tsteq	r6, r1, lsl #8
	...
    c2f0:	01007d02 	tsteq	r0, r2, lsl #26
    c2f4:	2fc40108 	svccs	0x00c40108
    c2f8:	93010000 	movwls	r0, #4096	; 0x1000
    c2fc:	008e010c 	addeq	r0, lr, ip, lsl #2
	...
    c308:	7d020000 	stcvc	0, cr0, [r2, #-0]
    c30c:	01090100 	mrseq	r0, (UNDEF: 25)
    c310:	00002f02 	andeq	r2, r0, r2, lsl #30
    c314:	010a7901 	tsteq	sl, r1, lsl #18
    c318:	100037b4 			; <UNDEFINED> instruction: 0x100037b4
    c31c:	100037da 	ldrdne	r3, [r0], -sl
    c320:	01007d02 	tsteq	r0, r2, lsl #26
    c324:	00002200 	andeq	r2, r0, r0, lsl #4
    c328:	50000200 	andpl	r0, r0, r0, lsl #4
    c32c:	0400001b 	streq	r0, [r0], #-27	; 0xffffffe5
    c330:	008cbd01 	addeq	fp, ip, r1, lsl #26
    c334:	0038a400 	eorseq	sl, r8, r0, lsl #8
    c338:	00391410 	eorseq	r1, r9, r0, lsl r4
    c33c:	00300510 	eorseq	r0, r0, r0, lsl r5
    c340:	0001a800 	andeq	sl, r1, r0, lsl #16
    c344:	00302500 	eorseq	r2, r0, r0, lsl #10
    c348:	22800100 	addcs	r0, r0, #0, 2
    c34c:	02000000 	andeq	r0, r0, #0
    c350:	001b6400 	andseq	r6, fp, r0, lsl #8
    c354:	43010400 	movwmi	r0, #5120	; 0x1400
    c358:	1400008d 	strne	r0, [r0], #-141	; 0xffffff73
    c35c:	5c100039 	ldcpl	0, cr0, [r0], {57}	; 0x39
    c360:	33100039 	tstcc	r0, #57	; 0x39
    c364:	a8000030 	stmdage	r0, {r4, r5}
    c368:	25000001 	strcs	r0, [r0, #-1]
    c36c:	01000030 	tsteq	r0, r0, lsr r0
    c370:	Address 0x0000c370 is out of bounds.


Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
    __asm volatile ( "mrs %0, ipsr" : "=r" ( ulCurrentInterrupt )::"memory" );
       0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
    if( ulCurrentInterrupt == 0 )
       4:	030b130e 	movweq	r1, #45838	; 0xb30e
        xReturn = pdFALSE;
       8:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
}
       c:	52011106 	andpl	r1, r1, #-2147483647	; 0x80000001
      10:	00061001 	andeq	r1, r6, r1
      14:	00240200 	eoreq	r0, r4, r0, lsl #4
      18:	0b3e0b0b 	bleq	f82c4c <__RAM_SIZE+0xe82c4c>
}
      1c:	00000e03 	andeq	r0, r0, r3, lsl #28
      20:	03001603 	movweq	r1, #1539	; 0x603
      24:	3b0b3a0e 	blcc	2ce864 <__RAM_SIZE+0x1ce864>
      28:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
      2c:	04000013 	streq	r0, [r0], #-19	; 0xffffffed
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
      30:	0b0b0024 	bleq	2c00c8 <__RAM_SIZE+0x1c00c8>
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
      34:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
      38:	0f050000 	svceq	0x00050000
      3c:	000b0b00 	andeq	r0, fp, r0, lsl #22
      40:	00260600 	eoreq	r0, r6, r0, lsl #12
        BaseType_t xReturn = pdFAIL;
      44:	00001349 	andeq	r1, r0, r9, asr #6
    }
      48:	0b000f07 	bleq	3c6c <__HEAP_SIZE+0x2c6c>
                pxBlock = heapPROTECT_BLOCK_POINTER( pxBlock->pxNextFreeBlock );
      4c:	0013490b 	andseq	r4, r3, fp, lsl #18
            while( pxBlock != pxEnd )
      50:	00130800 	andseq	r0, r3, r0, lsl #16
      54:	0c3c0e03 	ldceq	14, cr0, [ip], #-12
                if( pxBlock->xBlockSize > xMaxSize )
      58:	01090000 	mrseq	r0, (UNDEF: 9)
      5c:	01134901 	tsteq	r3, r1, lsl #18
                if( pxBlock->xBlockSize < xMinSize )
      60:	0a000013 	beq	b4 <__STACKSEAL_SIZE+0xb4>
                    xMinSize = pxBlock->xBlockSize;
      64:	13490021 	movtne	r0, #36897	; 0x9021
      68:	0000052f 	andeq	r0, r0, pc, lsr #10
      6c:	0300340b 	movweq	r3, #1035	; 0x40b
      70:	3b0b3a0e 	blcc	2ce8b0 <__RAM_SIZE+0x1ce8b0>
      74:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
      78:	020c3f13 	andeq	r3, ip, #19, 30	; 0x4c
      7c:	0c00000a 	stceq	0, cr0, [r0], {10}
            prvUnlockQueue( pxQueue );
      80:	0c3f012e 	ldfeqs	f0, [pc], #-184	; ffffffd0 <__StackTop+0xc7efffd0>
            ( void ) xTaskResumeAll();
      84:	0b3a0e03 	bleq	e83898 <__RAM_SIZE+0xd83898>
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
      88:	0b390b3b 	bleq	e42d7c <__RAM_SIZE+0xd42d7c>
      8c:	13490c27 	movtne	r0, #39975	; 0x9c27
      90:	01120111 	tsteq	r2, r1, lsl r1
        taskENTER_CRITICAL();
      94:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
            if( uxSemaphoreCount > ( UBaseType_t ) 0 )
      98:	0013010c 	andseq	r0, r3, ip, lsl #2
                if( xTicksToWait == ( TickType_t ) 0 )
      9c:	00340d00 	eorseq	r0, r4, r0, lsl #26
      a0:	0b3a0e03 	bleq	e838b4 <__RAM_SIZE+0xd838b4>
                else if( xEntryTimeSet == pdFALSE )
      a4:	0b390b3b 	bleq	e42d98 <__RAM_SIZE+0xd42d98>
        taskEXIT_CRITICAL();
      a8:	06021349 	streq	r1, [r2], -r9, asr #6
        vTaskSuspendAll();
      ac:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
        prvLockQueue( pxQueue );
      b0:	82890e00 	addhi	r0, r9, #0, 28
      b4:	01110001 	tsteq	r1, r1
      b8:	00001331 	andeq	r1, r0, r1, lsr r3
      bc:	0182890f 	orreq	r8, r2, pc, lsl #18
      c0:	31011101 	tstcc	r1, r1, lsl #2
      c4:	00130113 	andseq	r0, r3, r3, lsl r1
      c8:	828a1000 	addhi	r1, sl, #0
      cc:	0a020001 	beq	800d8 <__HEAP_SIZE+0x7f0d8>
        if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
      d0:	000a4291 	muleq	sl, r1, r2
      d4:	82891100 	addhi	r1, r9, #0, 2
      d8:	01110101 	tsteq	r1, r1, lsl #2
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
      dc:	00001331 	andeq	r1, r0, r1, lsr r3
      e0:	03012e12 	movweq	r2, #7698	; 0x1e12
                    if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
      e4:	3b0b3a0e 	blcc	2ce924 <__RAM_SIZE+0x1ce924>
      e8:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
                vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
      ec:	1201110c 	andne	r1, r1, #12, 2
      f0:	97064001 	strls	r4, [r6, -r1]
                prvUnlockQueue( pxQueue );
      f4:	13010c42 	movwne	r0, #7234	; 0x1c42
      f8:	34130000 	ldrcc	r0, [r3], #-0
                if( xTaskResumeAll() == pdFALSE )
      fc:	3a0e0300 	bcc	380d04 <__RAM_SIZE+0x280d04>
     100:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
                    taskYIELD_WITHIN_API();
     104:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
                    if( xInheritanceOccurred != pdFALSE )
     108:	1400000a 	strne	r0, [r0], #-10
                return errQUEUE_EMPTY;
     10c:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
                        taskENTER_CRITICAL();
     110:	0b3b0b3a 	bleq	ec2e00 <__RAM_SIZE+0xdc2e00>
                            uxHighestWaitingPriority = prvGetDisinheritPriorityAfterTimeout( pxQueue );
     114:	13490b39 	movtne	r0, #39737	; 0x9b39
     118:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
                            vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
     11c:	15000006 	strne	r0, [r0, #-6]
                        taskEXIT_CRITICAL();
     120:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 70 <__STACKSEAL_SIZE+0x70>
     124:	0b3a0e03 	bleq	e83938 <__RAM_SIZE+0xd83938>
     128:	0b390b3b 	bleq	e42e1c <__RAM_SIZE+0xd42e1c>
     12c:	01110c27 	tsteq	r1, r7, lsr #24
     130:	06400112 			; <UNDEFINED> instruction: 0x06400112
     134:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
     138:	16000013 			; <UNDEFINED> instruction: 0x16000013
     13c:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     140:	0c341349 	ldceq	3, cr1, [r4], #-292	; 0xfffffedc
     144:	00000a02 	andeq	r0, r0, r2, lsl #20
     148:	49002117 	stmdbmi	r0, {r0, r1, r2, r4, r8, sp}
     14c:	000b2f13 	andeq	r2, fp, r3, lsl pc
     150:	002e1800 	eoreq	r1, lr, r0, lsl #16
     154:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
     158:	0b3b0b3a 	bleq	ec2e48 <__RAM_SIZE+0xdc2e48>
     15c:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     160:	00000c3c 	andeq	r0, r0, ip, lsr ip
     164:	55010b19 	strpl	r0, [r1, #-2841]	; 0xfffff4e7
     168:	00130106 	andseq	r0, r3, r6, lsl #2
     16c:	00341a00 	eorseq	r1, r4, r0, lsl #20
     170:	0b3a0803 	bleq	e82184 <__RAM_SIZE+0xd82184>
     174:	0b390b3b 	bleq	e42e68 <__RAM_SIZE+0xd42e68>
     178:	06021349 	streq	r1, [r2], -r9, asr #6
     17c:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
     180:	002e1b00 	eoreq	r1, lr, r0, lsl #22
     184:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
     188:	030e4087 	movweq	r4, #57479	; 0xe087
     18c:	3b0b3a0e 	blcc	2ce9cc <__RAM_SIZE+0x1ce9cc>
     190:	000b390b 	andeq	r3, fp, fp, lsl #18
     194:	002e1c00 	eoreq	r1, lr, r0, lsl #24
     198:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
     19c:	030e4087 	movweq	r4, #57479	; 0xe087
     1a0:	3b0b3a0e 	blcc	2ce9e0 <__RAM_SIZE+0x1ce9e0>
     1a4:	1d00000b 	stcne	0, cr0, [r0, #-44]	; 0xffffffd4
     1a8:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; f8 <__STACKSEAL_SIZE+0xf8>
     1ac:	40870c3c 	addmi	r0, r7, ip, lsr ip
     1b0:	3a0e030e 	bcc	380df0 <__RAM_SIZE+0x280df0>
     1b4:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     1b8:	0000000b 	andeq	r0, r0, fp
     1bc:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
     1c0:	030b130e 	movweq	r1, #45838	; 0xb30e
     1c4:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
     1c8:	52011106 	andpl	r1, r1, #-2147483647	; 0x80000001
     1cc:	00061001 	andeq	r1, r6, r1
     1d0:	00240200 	eoreq	r0, r4, r0, lsl #4
     1d4:	0b3e0b0b 	bleq	f82e08 <__RAM_SIZE+0xe82e08>
     1d8:	00000e03 	andeq	r0, r0, r3, lsl #28
     1dc:	03001603 	movweq	r1, #1539	; 0x603
     1e0:	3b0b3a0e 	blcc	2cea20 <__RAM_SIZE+0x1cea20>
     1e4:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     1e8:	04000013 	streq	r0, [r0], #-19	; 0xffffffed
     1ec:	0b0b0024 	bleq	2c0284 <__RAM_SIZE+0x1c0284>
     1f0:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
     1f4:	35050000 	strcc	r0, [r5, #-0]
     1f8:	00134900 	andseq	r4, r3, r0, lsl #18
     1fc:	00260600 	eoreq	r0, r6, r0, lsl #12
     200:	00001349 	andeq	r1, r0, r9, asr #6
     204:	0b011307 	bleq	44e28 <__HEAP_SIZE+0x43e28>
     208:	3b0b3a05 	blcc	2cea24 <__RAM_SIZE+0x1cea24>
     20c:	010b3905 	tsteq	fp, r5, lsl #18
     210:	08000013 	stmdaeq	r0, {r0, r1, r4}
     214:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
     218:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     21c:	13490b39 	movtne	r0, #39737	; 0x9b39
     220:	00000a38 	andeq	r0, r0, r8, lsr sl
     224:	03000d09 	movweq	r0, #3337	; 0xd09
     228:	3b0b3a08 	blcc	2cea50 <__RAM_SIZE+0x1cea50>
     22c:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     230:	000a3813 	andeq	r3, sl, r3, lsl r8
     234:	01010a00 	tsteq	r1, r0, lsl #20
     238:	13011349 	movwne	r1, #4937	; 0x1349
     23c:	210b0000 	mrscs	r0, (UNDEF: 11)
     240:	2f134900 	svccs	0x00134900
     244:	0c00000b 	stceq	0, cr0, [r0], {11}
     248:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
     24c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     250:	13490b39 	movtne	r0, #39737	; 0x9b39
     254:	0f0d0000 	svceq	0x000d0000
     258:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
     25c:	0e000013 	mcreq	0, 0, r0, cr0, cr3, {0}
     260:	0c270015 	stceq	0, cr0, [r7], #-84	; 0xffffffac
     264:	340f0000 	strcc	r0, [pc], #-0	; 26c <__STACKSEAL_SIZE+0x26c>
     268:	3a0e0300 	bcc	380e70 <__RAM_SIZE+0x280e70>
     26c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     270:	3f13490b 	svccc	0x0013490b
     274:	000c3c0c 	andeq	r3, ip, ip, lsl #24
     278:	00211000 	eoreq	r1, r1, r0
     27c:	052f1349 	streq	r1, [pc, #-841]!	; ffffff3b <__StackTop+0xc7efff3b>
     280:	34110000 	ldrcc	r0, [r1], #-0
     284:	3a134700 	bcc	4d1e8c <__RAM_SIZE+0x3d1e8c>
     288:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     28c:	000a020b 	andeq	r0, sl, fp, lsl #4
     290:	002e1200 	eoreq	r1, lr, r0, lsl #4
     294:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
     298:	0b3b0b3a 	bleq	ec2f88 <__RAM_SIZE+0xdc2f88>
     29c:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     2a0:	01120111 	tsteq	r2, r1, lsl r1
     2a4:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
     2a8:	0000000c 	andeq	r0, r0, ip
     2ac:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
     2b0:	030b130e 	movweq	r1, #45838	; 0xb30e
     2b4:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
     2b8:	52011106 	andpl	r1, r1, #-2147483647	; 0x80000001
     2bc:	00061001 	andeq	r1, r6, r1
     2c0:	00240200 	eoreq	r0, r4, r0, lsl #4
     2c4:	0b3e0b0b 	bleq	f82ef8 <__RAM_SIZE+0xe82ef8>
     2c8:	00000e03 	andeq	r0, r0, r3, lsl #28
     2cc:	49002603 	stmdbmi	r0, {r0, r1, r9, sl, sp}
     2d0:	04000013 	streq	r0, [r0], #-19	; 0xffffffed
     2d4:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
     2d8:	0b3b0b3a 	bleq	ec2fc8 <__RAM_SIZE+0xdc2fc8>
     2dc:	13490b39 	movtne	r0, #39737	; 0x9b39
     2e0:	24050000 	strcs	r0, [r5], #-0
     2e4:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     2e8:	0008030b 	andeq	r0, r8, fp, lsl #6
     2ec:	01130600 	tsteq	r3, r0, lsl #12
     2f0:	0b0b0e03 	bleq	2c3b04 <__RAM_SIZE+0x1c3b04>
     2f4:	0b3b0b3a 	bleq	ec2fe4 <__RAM_SIZE+0xdc2fe4>
     2f8:	00001301 	andeq	r1, r0, r1, lsl #6
     2fc:	03000d07 	movweq	r0, #3335	; 0xd07
     300:	3813490e 	ldmdacc	r3, {r1, r2, r3, r8, fp, lr}
     304:	000c340a 	andeq	r3, ip, sl, lsl #8
     308:	000f0800 	andeq	r0, pc, r0, lsl #16
     30c:	00000b0b 	andeq	r0, r0, fp, lsl #22
     310:	0b000f09 	bleq	3f3c <__HEAP_SIZE+0x2f3c>
     314:	0013490b 	andseq	r4, r3, fp, lsl #18
     318:	01150a00 	tsteq	r5, r0, lsl #20
     31c:	13010c27 	movwne	r0, #7207	; 0x1c27
     320:	050b0000 	streq	r0, [fp, #-0]
     324:	00134900 	andseq	r4, r3, r0, lsl #18
     328:	01130c00 	tsteq	r3, r0, lsl #24
     32c:	0b3a0b0b 	bleq	e82f60 <__RAM_SIZE+0xd82f60>
     330:	0b390b3b 	bleq	e43024 <__RAM_SIZE+0xd43024>
     334:	00001301 	andeq	r1, r0, r1, lsl #6
     338:	03000d0d 	movweq	r0, #3341	; 0xd0d
     33c:	3b0b3a08 	blcc	2ceb64 <__RAM_SIZE+0x1ceb64>
     340:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     344:	000a3813 	andeq	r3, sl, r3, lsl r8
     348:	012e0e00 			; <UNDEFINED> instruction: 0x012e0e00
     34c:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
     350:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     354:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     358:	01111349 	tsteq	r1, r9, asr #6
     35c:	06400112 			; <UNDEFINED> instruction: 0x06400112
     360:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
     364:	0f000013 	svceq	0x00000013
     368:	08030005 	stmdaeq	r3, {r0, r2}
     36c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     370:	13490b39 	movtne	r0, #39737	; 0x9b39
     374:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
     378:	10000006 	andne	r0, r0, r6
     37c:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
     380:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     384:	13490b39 	movtne	r0, #39737	; 0x9b39
     388:	00000a02 	andeq	r0, r0, r2, lsl #20
     38c:	00001811 	andeq	r1, r0, r1, lsl r8
     390:	00341200 	eorseq	r1, r4, r0, lsl #4
     394:	0b3a0803 	bleq	e823a8 <__RAM_SIZE+0xd823a8>
     398:	0b39053b 	bleq	e4188c <__RAM_SIZE+0xd4188c>
     39c:	0a021349 	beq	850c8 <__HEAP_SIZE+0x840c8>
     3a0:	34130000 	ldrcc	r0, [r3], #-0
     3a4:	3a0e0300 	bcc	380fac <__RAM_SIZE+0x280fac>
     3a8:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     3ac:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     3b0:	1400000a 	strne	r0, [r0], #-10
     3b4:	08030034 	stmdaeq	r3, {r2, r4, r5}
     3b8:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     3bc:	13490b39 	movtne	r0, #39737	; 0x9b39
     3c0:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
     3c4:	15000006 	strne	r0, [r0, #-6]
     3c8:	01018289 	smlabbeq	r1, r9, r2, r8
     3cc:	13310111 	teqne	r1, #1073741828	; 0x40000004
     3d0:	8a160000 	bhi	5803d8 <__RAM_SIZE+0x4803d8>
     3d4:	02000182 	andeq	r0, r0, #-2147483616	; 0x80000020
     3d8:	0a42910a 	beq	10a4808 <__RAM_SIZE+0xfa4808>
     3dc:	05170000 	ldreq	r0, [r7, #-0]
     3e0:	3a0e0300 	bcc	380fe8 <__RAM_SIZE+0x280fe8>
     3e4:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     3e8:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     3ec:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
     3f0:	01180000 	tsteq	r8, r0
     3f4:	01134901 	tsteq	r3, r1, lsl #18
     3f8:	19000013 	stmdbne	r0, {r0, r1, r4}
     3fc:	13490021 	movtne	r0, #36897	; 0x9021
     400:	00000b2f 	andeq	r0, r0, pc, lsr #22
     404:	03012e1a 	movweq	r2, #7706	; 0x1e1a
     408:	3b0b3a0e 	blcc	2cec48 <__RAM_SIZE+0x1cec48>
     40c:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
     410:	1113490c 	tstne	r3, ip, lsl #18
     414:	40011201 	andmi	r1, r1, r1, lsl #4
     418:	0c429706 	mcrreq	7, 0, r9, r2, cr6
     41c:	00001301 	andeq	r1, r0, r1, lsl #6
     420:	0300051b 	movweq	r0, #1307	; 0x51b
     424:	3b0b3a08 	blcc	2cec4c <__RAM_SIZE+0x1cec4c>
     428:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     42c:	000a0213 	andeq	r0, sl, r3, lsl r2
     430:	00341c00 	eorseq	r1, r4, r0, lsl #24
     434:	0b3a0e03 	bleq	e83c48 <__RAM_SIZE+0xd83c48>
     438:	0b39053b 	bleq	e4192c <__RAM_SIZE+0xd4192c>
     43c:	06021349 	streq	r1, [r2], -r9, asr #6
     440:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
     444:	010b1d00 	tsteq	fp, r0, lsl #26
     448:	01120111 	tsteq	r2, r1, lsl r1
     44c:	00001301 	andeq	r1, r0, r1, lsl #6
     450:	55010b1e 	strpl	r0, [r1, #-2846]	; 0xfffff4e2
     454:	00130106 	andseq	r0, r3, r6, lsl #2
     458:	00341f00 	eorseq	r1, r4, r0, lsl #30
     45c:	0b3a0e03 	bleq	e83c70 <__RAM_SIZE+0xd83c70>
     460:	0b39053b 	bleq	e41954 <__RAM_SIZE+0xd41954>
     464:	00001349 	andeq	r1, r0, r9, asr #6
     468:	01828920 	orreq	r8, r2, r0, lsr #18
     46c:	31011101 	tstcc	r1, r1, lsl #2
     470:	00130113 	andseq	r0, r3, r3, lsl r1
     474:	82892100 	addhi	r2, r9, #0, 2
     478:	01110101 	tsteq	r1, r1, lsl #2
     47c:	00001301 	andeq	r1, r0, r1, lsl #6
     480:	01828922 	orreq	r8, r2, r2, lsr #18
     484:	00011101 	andeq	r1, r1, r1, lsl #2
     488:	011d2300 	tsteq	sp, r0, lsl #6
     48c:	01111331 	tsteq	r1, r1, lsr r3
     490:	0b580112 	bleq	16008e0 <__RAM_SIZE+0x15008e0>
     494:	0b570559 	bleq	15c1a00 <__RAM_SIZE+0x14c1a00>
     498:	00001301 	andeq	r1, r0, r1, lsl #6
     49c:	31000524 	tstcc	r0, r4, lsr #10
     4a0:	b7060213 	smladlt	r6, r3, r2, r0
     4a4:	00000642 	andeq	r0, r0, r2, asr #12
     4a8:	31000525 	tstcc	r0, r5, lsr #10
     4ac:	26000013 			; <UNDEFINED> instruction: 0x26000013
     4b0:	13310034 	teqne	r1, #52	; 0x34
     4b4:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
     4b8:	27000006 	strcs	r0, [r0, -r6]
     4bc:	1331011d 	teqne	r1, #1073741831	; 0x40000007
     4c0:	42b80152 	adcsmi	r0, r8, #-2147483628	; 0x80000014
     4c4:	12011105 	andne	r1, r1, #1073741825	; 0x40000001
     4c8:	590b5801 	stmdbpl	fp, {r0, fp, ip, lr}
     4cc:	010b5705 	tsteq	fp, r5, lsl #14
     4d0:	28000013 	stmdacs	r0, {r0, r1, r4}
     4d4:	01018289 	smlabbeq	r1, r9, r2, r8
     4d8:	42930111 	addsmi	r0, r3, #1073741828	; 0x40000004
     4dc:	0013010a 	andseq	r0, r3, sl, lsl #2
     4e0:	01172900 	tsteq	r7, r0, lsl #18
     4e4:	0b3a0b0b 	bleq	e83118 <__RAM_SIZE+0xd83118>
     4e8:	0b39053b 	bleq	e419dc <__RAM_SIZE+0xd419dc>
     4ec:	00001301 	andeq	r1, r0, r1, lsl #6
     4f0:	03000d2a 	movweq	r0, #3370	; 0xd2a
     4f4:	3b0b3a08 	blcc	2ced1c <__RAM_SIZE+0x1ced1c>
     4f8:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     4fc:	2b000013 	blcs	550 <__STACKSEAL_SIZE+0x550>
     500:	00018289 	andeq	r8, r1, r9, lsl #5
     504:	13310111 	teqne	r1, #1073741828	; 0x40000004
     508:	2e2c0000 	cdpcs	0, 2, cr0, cr12, cr0, {0}
     50c:	3a0e0301 	bcc	381118 <__RAM_SIZE+0x281118>
     510:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     514:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
     518:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
     51c:	97064001 	strls	r4, [r6, -r1]
     520:	13010c42 	movwne	r0, #7234	; 0x1c42
     524:	052d0000 	streq	r0, [sp, #-0]!
     528:	3a080300 	bcc	201130 <__RAM_SIZE+0x101130>
     52c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     530:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     534:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
     538:	052e0000 	streq	r0, [lr, #-0]!
     53c:	3a0e0300 	bcc	381144 <__RAM_SIZE+0x281144>
     540:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     544:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     548:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
     54c:	342f0000 	strtcc	r0, [pc], #-0	; 554 <__STACKSEAL_SIZE+0x554>
     550:	3a0e0300 	bcc	381158 <__RAM_SIZE+0x281158>
     554:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     558:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     55c:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
     560:	34300000 	ldrtcc	r0, [r0], #-0
     564:	3a080300 	bcc	20116c <__RAM_SIZE+0x10116c>
     568:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     56c:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     570:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
     574:	2e310000 	cdpcs	0, 3, cr0, cr1, cr0, {0}
     578:	3a0e0301 	bcc	381184 <__RAM_SIZE+0x281184>
     57c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     580:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
     584:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
     588:	970a4001 	strls	r4, [sl, -r1]
     58c:	13010c42 	movwne	r0, #7234	; 0x1c42
     590:	1d320000 	ldcne	0, cr0, [r2, #-0]
     594:	52133101 	andspl	r3, r3, #1073741824	; 0x40000000
     598:	0542b801 	strbeq	fp, [r2, #-2049]	; 0xfffff7ff
     59c:	01120111 	tsteq	r2, r1, lsl r1
     5a0:	0b590b58 	bleq	1643308 <__RAM_SIZE+0x1543308>
     5a4:	00000b57 	andeq	r0, r0, r7, asr fp
     5a8:	03012e33 	movweq	r2, #7731	; 0x1e33
     5ac:	3b0b3a0e 	blcc	2cedec <__RAM_SIZE+0x1cedec>
     5b0:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
     5b4:	2013490c 	andscs	r4, r3, ip, lsl #18
     5b8:	0013010b 	andseq	r0, r3, fp, lsl #2
     5bc:	00053400 	andeq	r3, r5, r0, lsl #8
     5c0:	0b3a0803 	bleq	e825d4 <__RAM_SIZE+0xd825d4>
     5c4:	0b390b3b 	bleq	e432b8 <__RAM_SIZE+0xd432b8>
     5c8:	00001349 	andeq	r1, r0, r9, asr #6
     5cc:	03000535 	movweq	r0, #1333	; 0x535
     5d0:	3b0b3a0e 	blcc	2cee10 <__RAM_SIZE+0x1cee10>
     5d4:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     5d8:	36000013 			; <UNDEFINED> instruction: 0x36000013
     5dc:	08030034 	stmdaeq	r3, {r2, r4, r5}
     5e0:	0b3b0b3a 	bleq	ec32d0 <__RAM_SIZE+0xdc32d0>
     5e4:	13490b39 	movtne	r0, #39737	; 0x9b39
     5e8:	2e370000 	cdpcs	0, 3, cr0, cr7, cr0, {0}
     5ec:	3a0e0301 	bcc	3811f8 <__RAM_SIZE+0x2811f8>
     5f0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     5f4:	110c270b 	tstne	ip, fp, lsl #14
     5f8:	40011201 	andmi	r1, r1, r1, lsl #4
     5fc:	0c429606 	mcrreq	6, 0, r9, r2, cr6
     600:	00001301 	andeq	r1, r0, r1, lsl #6
     604:	03012e38 	movweq	r2, #7736	; 0x1e38
     608:	3b0b3a0e 	blcc	2cee48 <__RAM_SIZE+0x1cee48>
     60c:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
     610:	1201110c 	andne	r1, r1, #12, 2
     614:	97064001 	strls	r4, [r6, -r1]
     618:	13010c42 	movwne	r0, #7234	; 0x1c42
     61c:	2e390000 	cdpcs	0, 3, cr0, cr9, cr0, {0}
     620:	3a0e0301 	bcc	38122c <__RAM_SIZE+0x28122c>
     624:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     628:	110c270b 	tstne	ip, fp, lsl #14
     62c:	40011201 	andmi	r1, r1, r1, lsl #4
     630:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
     634:	00001301 	andeq	r1, r0, r1, lsl #6
     638:	0300053a 	movweq	r0, #1338	; 0x53a
     63c:	3b0b3a0e 	blcc	2cee7c <__RAM_SIZE+0x1cee7c>
     640:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     644:	000a0213 	andeq	r0, sl, r3, lsl r2
     648:	00053b00 	andeq	r3, r5, r0, lsl #22
     64c:	0b3a0803 	bleq	e82660 <__RAM_SIZE+0xd82660>
     650:	0b390b3b 	bleq	e43344 <__RAM_SIZE+0xd43344>
     654:	0a021349 	beq	85380 <__HEAP_SIZE+0x84380>
     658:	2e3c0000 	cdpcs	0, 3, cr0, cr12, cr0, {0}
     65c:	3c0c3f00 	stccc	15, cr3, [ip], {-0}
     660:	0e40870c 	cdpeq	7, 4, cr8, cr0, cr12, {0}
     664:	00000e03 	andeq	r0, r0, r3, lsl #28
     668:	3f002e3d 	svccc	0x00002e3d
     66c:	870c3c0c 	strhi	r3, [ip, -ip, lsl #24]
     670:	0e030e40 	cdpeq	14, 0, cr0, cr3, cr0, {2}
     674:	0b3b0b3a 	bleq	ec3364 <__RAM_SIZE+0xdc3364>
     678:	00000b39 	andeq	r0, r0, r9, lsr fp
     67c:	01110100 	tsteq	r1, r0, lsl #2
     680:	0b130e25 	bleq	4c3f1c <__RAM_SIZE+0x3c3f1c>
     684:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
     688:	01110655 	tsteq	r1, r5, asr r6
     68c:	06100152 			; <UNDEFINED> instruction: 0x06100152
     690:	24020000 	strcs	r0, [r2], #-0
     694:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     698:	000e030b 	andeq	r0, lr, fp, lsl #6
     69c:	00160300 	andseq	r0, r6, r0, lsl #6
     6a0:	0b3a0e03 	bleq	e83eb4 <__RAM_SIZE+0xd83eb4>
     6a4:	0b390b3b 	bleq	e43398 <__RAM_SIZE+0xd43398>
     6a8:	00001349 	andeq	r1, r0, r9, asr #6
     6ac:	0b002404 	bleq	96c4 <__HEAP_SIZE+0x86c4>
     6b0:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
     6b4:	05000008 	streq	r0, [r0, #-8]
     6b8:	13490026 	movtne	r0, #36902	; 0x9026
     6bc:	0f060000 	svceq	0x00060000
     6c0:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
     6c4:	07000013 	smladeq	r0, r3, r0, r0
     6c8:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 618 <__STACKSEAL_SIZE+0x618>
     6cc:	0b3a0e03 	bleq	e83ee0 <__RAM_SIZE+0xd83ee0>
     6d0:	0b390b3b 	bleq	e433c4 <__RAM_SIZE+0xd433c4>
     6d4:	13490c27 	movtne	r0, #39975	; 0x9c27
     6d8:	01120111 	tsteq	r2, r1, lsl r1
     6dc:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
     6e0:	0013010c 	andseq	r0, r3, ip, lsl #2
     6e4:	00050800 	andeq	r0, r5, r0, lsl #16
     6e8:	0b3a0e03 	bleq	e83efc <__RAM_SIZE+0xd83efc>
     6ec:	0b390b3b 	bleq	e433e0 <__RAM_SIZE+0xd433e0>
     6f0:	06021349 	streq	r1, [r2], -r9, asr #6
     6f4:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
     6f8:	00340900 	eorseq	r0, r4, r0, lsl #18
     6fc:	0b3a0803 	bleq	e82710 <__RAM_SIZE+0xd82710>
     700:	0b390b3b 	bleq	e433f4 <__RAM_SIZE+0xd433f4>
     704:	06021349 	streq	r1, [r2], -r9, asr #6
     708:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
     70c:	82890a00 	addhi	r0, r9, #0, 20
     710:	01110001 	tsteq	r1, r1
     714:	00001331 	andeq	r1, r0, r1, lsr r3
     718:	3f012e0b 	svccc	0x00012e0b
     71c:	3a0e030c 	bcc	381354 <__RAM_SIZE+0x281354>
     720:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     724:	110c270b 	tstne	ip, fp, lsl #14
     728:	40011201 	andmi	r1, r1, r1, lsl #4
     72c:	0c429706 	mcrreq	7, 0, r9, r2, cr6
     730:	00001301 	andeq	r1, r0, r1, lsl #6
     734:	0182890c 	orreq	r8, r2, ip, lsl #18
     738:	31011101 	tstcc	r1, r1, lsl #2
     73c:	0d000013 	stceq	0, cr0, [r0, #-76]	; 0xffffffb4
     740:	0001828a 	andeq	r8, r1, sl, lsl #5
     744:	42910a02 	addsmi	r0, r1, #8192	; 0x2000
     748:	0e00000a 	cdpeq	0, 0, cr0, cr0, cr10, {0}
     74c:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 69c <__STACKSEAL_SIZE+0x69c>
     750:	0b3a0e03 	bleq	e83f64 <__RAM_SIZE+0xd83f64>
     754:	0b390b3b 	bleq	e43448 <__RAM_SIZE+0xd43448>
     758:	01110c27 	tsteq	r1, r7, lsr #24
     75c:	0a400112 	beq	1000bac <__RAM_SIZE+0xf00bac>
     760:	000c4297 	muleq	ip, r7, r2
     764:	00340f00 	eorseq	r0, r4, r0, lsl #30
     768:	0b3a0e03 	bleq	e83f7c <__RAM_SIZE+0xd83f7c>
     76c:	0b390b3b 	bleq	e43460 <__RAM_SIZE+0xd43460>
     770:	06021349 	streq	r1, [r2], -r9, asr #6
     774:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
     778:	002e1000 	eoreq	r1, lr, r0
     77c:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
     780:	0b3b0b3a 	bleq	ec3470 <__RAM_SIZE+0xdc3470>
     784:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     788:	01111349 	tsteq	r1, r9, asr #6
     78c:	0a400112 	beq	1000bdc <__RAM_SIZE+0xf00bdc>
     790:	000c4297 	muleq	ip, r7, r2
     794:	012e1100 			; <UNDEFINED> instruction: 0x012e1100
     798:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
     79c:	0b3b0b3a 	bleq	ec348c <__RAM_SIZE+0xdc348c>
     7a0:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     7a4:	01111349 	tsteq	r1, r9, asr #6
     7a8:	0a400112 	beq	1000bf8 <__RAM_SIZE+0xf00bf8>
     7ac:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
     7b0:	12000013 	andne	r0, r0, #19
     7b4:	08030005 	stmdaeq	r3, {r0, r2}
     7b8:	0b3b0b3a 	bleq	ec34a8 <__RAM_SIZE+0xdc34a8>
     7bc:	13490b39 	movtne	r0, #39737	; 0x9b39
     7c0:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
     7c4:	13000006 	movwne	r0, #6
     7c8:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 718 <__STACKSEAL_SIZE+0x718>
     7cc:	40870c3c 	addmi	r0, r7, ip, lsr ip
     7d0:	3a0e030e 	bcc	381410 <__RAM_SIZE+0x281410>
     7d4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     7d8:	0000000b 	andeq	r0, r0, fp
     7dc:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
     7e0:	030b130e 	movweq	r1, #45838	; 0xb30e
     7e4:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
     7e8:	52011106 	andpl	r1, r1, #-2147483647	; 0x80000001
     7ec:	00061001 	andeq	r1, r6, r1
     7f0:	00240200 	eoreq	r0, r4, r0, lsl #4
     7f4:	0b3e0b0b 	bleq	f83428 <__RAM_SIZE+0xe83428>
     7f8:	00000e03 	andeq	r0, r0, r3, lsl #28
     7fc:	03001603 	movweq	r1, #1539	; 0x603
     800:	3b0b3a0e 	blcc	2cf040 <__RAM_SIZE+0x1cf040>
     804:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     808:	04000013 	streq	r0, [r0], #-19	; 0xffffffed
     80c:	0b0b0024 	bleq	2c08a4 <__RAM_SIZE+0x1c08a4>
     810:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
     814:	35050000 	strcc	r0, [r5, #-0]
     818:	00134900 	andseq	r4, r3, r0, lsl #18
     81c:	01130600 	tsteq	r3, r0, lsl #12
     820:	0b0b0e03 	bleq	2c4034 <__RAM_SIZE+0x1c4034>
     824:	0b3b0b3a 	bleq	ec3514 <__RAM_SIZE+0xdc3514>
     828:	13010b39 	movwne	r0, #6969	; 0x1b39
     82c:	0d070000 	stceq	0, cr0, [r7, #-0]
     830:	3a080300 	bcc	201438 <__RAM_SIZE+0x101438>
     834:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     838:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
     83c:	0800000a 	stmdaeq	r0, {r1, r3}
     840:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
     844:	0b3b0b3a 	bleq	ec3534 <__RAM_SIZE+0xdc3534>
     848:	13490b39 	movtne	r0, #39737	; 0x9b39
     84c:	00000a38 	andeq	r0, r0, r8, lsr sl
     850:	0b000f09 	bleq	447c <__HEAP_SIZE+0x347c>
     854:	0013490b 	andseq	r4, r3, fp, lsl #18
     858:	01150a00 	tsteq	r5, r0, lsl #20
     85c:	13490c27 	movtne	r0, #39975	; 0x9c27
     860:	00001301 	andeq	r1, r0, r1, lsl #6
     864:	4900050b 	stmdbmi	r0, {r0, r1, r3, r8, sl}
     868:	0c000013 	stceq	0, cr0, [r0], {19}
     86c:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     870:	0b3b0b3a 	bleq	ec3560 <__RAM_SIZE+0xdc3560>
     874:	13490b39 	movtne	r0, #39737	; 0x9b39
     878:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
     87c:	340d0000 	strcc	r0, [sp], #-0
     880:	3a0e0300 	bcc	381488 <__RAM_SIZE+0x281488>
     884:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     888:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     88c:	0e00000a 	cdpeq	0, 0, cr0, cr0, cr10, {0}
     890:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     894:	0b3b0b3a 	bleq	ec3584 <__RAM_SIZE+0xdc3584>
     898:	13490b39 	movtne	r0, #39737	; 0x9b39
     89c:	0a020c3f 	beq	839a0 <__HEAP_SIZE+0x829a0>
     8a0:	2e0f0000 	cdpcs	0, 0, cr0, cr15, cr0, {0}
     8a4:	030c3f01 	movweq	r3, #52993	; 0xcf01
     8a8:	3b0b3a0e 	blcc	2cf0e8 <__RAM_SIZE+0x1cf0e8>
     8ac:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
     8b0:	1113490c 	tstne	r3, ip, lsl #18
     8b4:	40011201 	andmi	r1, r1, r1, lsl #4
     8b8:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
     8bc:	00001301 	andeq	r1, r0, r1, lsl #6
     8c0:	03000510 	movweq	r0, #1296	; 0x510
     8c4:	3b0b3a0e 	blcc	2cf104 <__RAM_SIZE+0x1cf104>
     8c8:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     8cc:	b7060213 	smladlt	r6, r3, r2, r0
     8d0:	00000642 	andeq	r0, r0, r2, asr #12
     8d4:	03003411 	movweq	r3, #1041	; 0x411
     8d8:	3b0b3a0e 	blcc	2cf118 <__RAM_SIZE+0x1cf118>
     8dc:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     8e0:	b7060213 	smladlt	r6, r3, r2, r0
     8e4:	00000642 	andeq	r0, r0, r2, asr #12
     8e8:	3f002e12 	svccc	0x00002e12
     8ec:	3a0e030c 	bcc	381524 <__RAM_SIZE+0x281524>
     8f0:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     8f4:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
     8f8:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
     8fc:	970a4001 	strls	r4, [sl, -r1]
     900:	00000c42 	andeq	r0, r0, r2, asr #24
     904:	31011d13 	tstcc	r1, r3, lsl sp
     908:	b8015213 	stmdalt	r1, {r0, r1, r4, r9, ip, lr}
     90c:	01110b42 	tsteq	r1, r2, asr #22
     910:	0b580112 	bleq	1600d60 <__RAM_SIZE+0x1500d60>
     914:	0b570559 	bleq	15c1e80 <__RAM_SIZE+0x14c1e80>
     918:	34140000 	ldrcc	r0, [r4], #-0
     91c:	02133100 	andseq	r3, r3, #0, 2
     920:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
     924:	2e150000 	cdpcs	0, 1, cr0, cr5, cr0, {0}
     928:	030c3f01 	movweq	r3, #52993	; 0xcf01
     92c:	3b0b3a0e 	blcc	2cf16c <__RAM_SIZE+0x1cf16c>
     930:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
     934:	1113490c 	tstne	r3, ip, lsl #18
     938:	40011201 	andmi	r1, r1, r1, lsl #4
     93c:	0c429706 	mcrreq	7, 0, r9, r2, cr6
     940:	00001301 	andeq	r1, r0, r1, lsl #6
     944:	03000516 	movweq	r0, #1302	; 0x516
     948:	3b0b3a0e 	blcc	2cf188 <__RAM_SIZE+0x1cf188>
     94c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     950:	b7060213 	smladlt	r6, r3, r2, r0
     954:	00000642 	andeq	r0, r0, r2, asr #12
     958:	03003417 	movweq	r3, #1047	; 0x417
     95c:	3b0b3a0e 	blcc	2cf19c <__RAM_SIZE+0x1cf19c>
     960:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     964:	b7060213 	smladlt	r6, r3, r2, r0
     968:	00000642 	andeq	r0, r0, r2, asr #12
     96c:	03003418 	movweq	r3, #1048	; 0x418
     970:	3b0b3a08 	blcc	2cf198 <__RAM_SIZE+0x1cf198>
     974:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     978:	b7060213 	smladlt	r6, r3, r2, r0
     97c:	00000642 	andeq	r0, r0, r2, asr #12
     980:	01828919 	orreq	r8, r2, r9, lsl r9
     984:	31011101 	tstcc	r1, r1, lsl #2
     988:	00130113 	andseq	r0, r3, r3, lsl r1
     98c:	828a1a00 	addhi	r1, sl, #0, 20
     990:	0a020001 	beq	8099c <__HEAP_SIZE+0x7f99c>
     994:	000a4291 	muleq	sl, r1, r2
     998:	82891b00 	addhi	r1, r9, #0, 22
     99c:	01110001 	tsteq	r1, r1
     9a0:	00001331 	andeq	r1, r0, r1, lsr r3
     9a4:	3f012e1c 	svccc	0x00012e1c
     9a8:	3a0e030c 	bcc	3815e0 <__RAM_SIZE+0x2815e0>
     9ac:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     9b0:	110c270b 	tstne	ip, fp, lsl #14
     9b4:	40011201 	andmi	r1, r1, r1, lsl #4
     9b8:	0c429706 	mcrreq	7, 0, r9, r2, cr6
     9bc:	00001301 	andeq	r1, r0, r1, lsl #6
     9c0:	0182891d 	orreq	r8, r2, sp, lsl r9
     9c4:	01011101 	tsteq	r1, r1, lsl #2
     9c8:	1e000013 	mcrne	0, 0, r0, cr0, cr3, {0}
     9cc:	01018289 	smlabbeq	r1, r9, r2, r8
     9d0:	13310111 	teqne	r1, #1073741828	; 0x40000004
     9d4:	011f0000 	tsteq	pc, r0
     9d8:	01134901 	tsteq	r3, r1, lsl #18
     9dc:	20000013 	andcs	r0, r0, r3, lsl r0
     9e0:	13490021 	movtne	r0, #36897	; 0x9021
     9e4:	00000b2f 	andeq	r0, r0, pc, lsr #22
     9e8:	03012e21 	movweq	r2, #7713	; 0x1e21
     9ec:	3b0b3a0e 	blcc	2cf22c <__RAM_SIZE+0x1cf22c>
     9f0:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
     9f4:	1113490c 	tstne	r3, ip, lsl #18
     9f8:	40011201 	andmi	r1, r1, r1, lsl #4
     9fc:	0c429706 	mcrreq	7, 0, r9, r2, cr6
     a00:	00001301 	andeq	r1, r0, r1, lsl #6
     a04:	3f012e22 	svccc	0x00012e22
     a08:	3a0e030c 	bcc	381640 <__RAM_SIZE+0x281640>
     a0c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     a10:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
     a14:	010c3c13 	tsteq	ip, r3, lsl ip
     a18:	23000013 	movwcs	r0, #19
     a1c:	0e03012e 	adfeqsp	f0, f3, #0.5
     a20:	0b3b0b3a 	bleq	ec3710 <__RAM_SIZE+0xdc3710>
     a24:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     a28:	01120111 	tsteq	r2, r1, lsl r1
     a2c:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
     a30:	0013010c 	andseq	r0, r3, ip, lsl #2
     a34:	012e2400 			; <UNDEFINED> instruction: 0x012e2400
     a38:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
     a3c:	0b3b0b3a 	bleq	ec372c <__RAM_SIZE+0xdc372c>
     a40:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     a44:	13010c3c 	movwne	r0, #7228	; 0x1c3c
     a48:	2e250000 	cdpcs	0, 2, cr0, cr5, cr0, {0}
     a4c:	3a0e0301 	bcc	381658 <__RAM_SIZE+0x281658>
     a50:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     a54:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
     a58:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
     a5c:	970a4001 	strls	r4, [sl, -r1]
     a60:	13010c42 	movwne	r0, #7234	; 0x1c42
     a64:	05260000 	streq	r0, [r6, #-0]!
     a68:	3a080300 	bcc	201670 <__RAM_SIZE+0x101670>
     a6c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     a70:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     a74:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
     a78:	0b270000 	bleq	9c0a80 <__RAM_SIZE+0x8c0a80>
     a7c:	12011101 	andne	r1, r1, #1073741824	; 0x40000000
     a80:	28000001 	stmdacs	r0, {r0}
     a84:	0e03012e 	adfeqsp	f0, f3, #0.5
     a88:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     a8c:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     a90:	0b201349 	bleq	8057bc <__RAM_SIZE+0x7057bc>
     a94:	00001301 	andeq	r1, r0, r1, lsl #6
     a98:	03003429 	movweq	r3, #1065	; 0x429
     a9c:	3b0b3a0e 	blcc	2cf2dc <__RAM_SIZE+0x1cf2dc>
     aa0:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     aa4:	2a000013 	bcs	af8 <__Vectors_Size+0x338>
     aa8:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 9f8 <__Vectors_Size+0x238>
     aac:	40870c3c 	addmi	r0, r7, ip, lsr ip
     ab0:	3a0e030e 	bcc	3816f0 <__RAM_SIZE+0x2816f0>
     ab4:	000b3b0b 	andeq	r3, fp, fp, lsl #22
     ab8:	002e2b00 	eoreq	r2, lr, r0, lsl #22
     abc:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
     ac0:	030e4087 	movweq	r4, #57479	; 0xe087
     ac4:	3b0b3a0e 	blcc	2cf304 <__RAM_SIZE+0x1cf304>
     ac8:	000b390b 	andeq	r3, fp, fp, lsl #18
     acc:	11010000 	mrsne	r0, (UNDEF: 1)
     ad0:	130e2501 	movwne	r2, #58625	; 0xe501
     ad4:	1b0e030b 	blne	381708 <__RAM_SIZE+0x281708>
     ad8:	1106550e 	tstne	r6, lr, lsl #10
     adc:	10015201 	andne	r5, r1, r1, lsl #4
     ae0:	02000006 	andeq	r0, r0, #6
     ae4:	0b0b0024 	bleq	2c0b7c <__RAM_SIZE+0x1c0b7c>
     ae8:	0e030b3e 	vmoveq.16	d3[0], r0
     aec:	16030000 	strne	r0, [r3], -r0
     af0:	3a0e0300 	bcc	3816f8 <__RAM_SIZE+0x2816f8>
     af4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     af8:	0013490b 	andseq	r4, r3, fp, lsl #18
     afc:	00240400 	eoreq	r0, r4, r0, lsl #8
     b00:	0b3e0b0b 	bleq	f83734 <__RAM_SIZE+0xe83734>
     b04:	00000803 	andeq	r0, r0, r3, lsl #16
     b08:	49003505 	stmdbmi	r0, {r0, r2, r8, sl, ip, sp}
     b0c:	06000013 			; <UNDEFINED> instruction: 0x06000013
     b10:	13490026 	movtne	r0, #36902	; 0x9026
     b14:	13070000 	movwne	r0, #28672	; 0x7000
     b18:	3a050b01 	bcc	143724 <__RAM_SIZE+0x43724>
     b1c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     b20:	0013010b 	andseq	r0, r3, fp, lsl #2
     b24:	000d0800 	andeq	r0, sp, r0, lsl #16
     b28:	0b3a0e03 	bleq	e8433c <__RAM_SIZE+0xd8433c>
     b2c:	0b39053b 	bleq	e42020 <__RAM_SIZE+0xd42020>
     b30:	0a381349 	beq	e0585c <__RAM_SIZE+0xd0585c>
     b34:	0d090000 	stceq	0, cr0, [r9, #-0]
     b38:	3a080300 	bcc	201740 <__RAM_SIZE+0x101740>
     b3c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     b40:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
     b44:	0a00000a 	beq	b74 <__Vectors_Size+0x3b4>
     b48:	13490101 	movtne	r0, #37121	; 0x9101
     b4c:	00001301 	andeq	r1, r0, r1, lsl #6
     b50:	4900210b 	stmdbmi	r0, {r0, r1, r3, r8, sp}
     b54:	000b2f13 	andeq	r2, fp, r3, lsl pc
     b58:	00160c00 	andseq	r0, r6, r0, lsl #24
     b5c:	0b3a0e03 	bleq	e84370 <__RAM_SIZE+0xd84370>
     b60:	0b39053b 	bleq	e42054 <__RAM_SIZE+0xd42054>
     b64:	00001349 	andeq	r1, r0, r9, asr #6
     b68:	3f012e0d 	svccc	0x00012e0d
     b6c:	3a0e030c 	bcc	3817a4 <__RAM_SIZE+0x2817a4>
     b70:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     b74:	110c270b 	tstne	ip, fp, lsl #14
     b78:	40011201 	andmi	r1, r1, r1, lsl #4
     b7c:	0c429706 	mcrreq	7, 0, r9, r2, cr6
     b80:	00001301 	andeq	r1, r0, r1, lsl #6
     b84:	0300340e 	movweq	r3, #1038	; 0x40e
     b88:	3b0b3a0e 	blcc	2cf3c8 <__RAM_SIZE+0x1cf3c8>
     b8c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     b90:	b7060213 	smladlt	r6, r3, r2, r0
     b94:	00000642 	andeq	r0, r0, r2, asr #12
     b98:	0300340f 	movweq	r3, #1039	; 0x40f
     b9c:	3b0b3a0e 	blcc	2cf3dc <__RAM_SIZE+0x1cf3dc>
     ba0:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     ba4:	000a0213 	andeq	r0, sl, r3, lsl r2
     ba8:	82891000 	addhi	r1, r9, #0
     bac:	01110101 	tsteq	r1, r1, lsl #2
     bb0:	13011331 	movwne	r1, #4913	; 0x1331
     bb4:	8a110000 	bhi	440bbc <__RAM_SIZE+0x340bbc>
     bb8:	02000182 	andeq	r0, r0, #-2147483616	; 0x80000020
     bbc:	0a42910a 	beq	10a4fec <__RAM_SIZE+0xfa4fec>
     bc0:	89120000 	ldmdbhi	r2, {}	; <UNPREDICTABLE>
     bc4:	11010182 	smlabbne	r1, r2, r1, r0
     bc8:	00133101 	andseq	r3, r3, r1, lsl #2
     bcc:	000f1300 	andeq	r1, pc, r0, lsl #6
     bd0:	13490b0b 	movtne	r0, #39691	; 0x9b0b
     bd4:	34140000 	ldrcc	r0, [r4], #-0
     bd8:	3a080300 	bcc	2017e0 <__RAM_SIZE+0x1017e0>
     bdc:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     be0:	1c13490b 			; <UNDEFINED> instruction: 0x1c13490b
     be4:	1500000b 	strne	r0, [r0, #-11]
     be8:	0c3f012e 	ldfeqs	f0, [pc], #-184	; b38 <__Vectors_Size+0x378>
     bec:	0b3a0e03 	bleq	e84400 <__RAM_SIZE+0xd84400>
     bf0:	0b390b3b 	bleq	e438e4 <__RAM_SIZE+0xd438e4>
     bf4:	13490c27 	movtne	r0, #39975	; 0x9c27
     bf8:	01120111 	tsteq	r2, r1, lsl r1
     bfc:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
     c00:	0013010c 	andseq	r0, r3, ip, lsl #2
     c04:	00051600 	andeq	r1, r5, r0, lsl #12
     c08:	0b3a0e03 	bleq	e8441c <__RAM_SIZE+0xd8441c>
     c0c:	0b390b3b 	bleq	e43900 <__RAM_SIZE+0xd43900>
     c10:	06021349 	streq	r1, [r2], -r9, asr #6
     c14:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
     c18:	002e1700 	eoreq	r1, lr, r0, lsl #14
     c1c:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
     c20:	030e4087 	movweq	r4, #57479	; 0xe087
     c24:	3b0b3a0e 	blcc	2cf464 <__RAM_SIZE+0x1cf464>
     c28:	000b390b 	andeq	r3, fp, fp, lsl #18
     c2c:	002e1800 	eoreq	r1, lr, r0, lsl #16
     c30:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
     c34:	030e4087 	movweq	r4, #57479	; 0xe087
     c38:	3b0b3a0e 	blcc	2cf478 <__RAM_SIZE+0x1cf478>
     c3c:	0000000b 	andeq	r0, r0, fp
     c40:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
     c44:	030b130e 	movweq	r1, #45838	; 0xb30e
     c48:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
     c4c:	52011106 	andpl	r1, r1, #-2147483647	; 0x80000001
     c50:	00061001 	andeq	r1, r6, r1
     c54:	00240200 	eoreq	r0, r4, r0, lsl #4
     c58:	0b3e0b0b 	bleq	f8388c <__RAM_SIZE+0xe8388c>
     c5c:	00000e03 	andeq	r0, r0, r3, lsl #28
     c60:	0b002403 	bleq	9c74 <__HEAP_SIZE+0x8c74>
     c64:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
     c68:	04000008 	streq	r0, [r0], #-8
     c6c:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
     c70:	0b3b0b3a 	bleq	ec3960 <__RAM_SIZE+0xdc3960>
     c74:	13490b39 	movtne	r0, #39737	; 0x9b39
     c78:	0f050000 	svceq	0x00050000
     c7c:	000b0b00 	andeq	r0, fp, r0, lsl #22
     c80:	00260600 	eoreq	r0, r6, r0, lsl #12
     c84:	00001349 	andeq	r1, r0, r9, asr #6
     c88:	03011307 	movweq	r1, #4871	; 0x1307
     c8c:	3a0b0b0e 	bcc	2c38cc <__RAM_SIZE+0x1c38cc>
     c90:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     c94:	0013010b 	andseq	r0, r3, fp, lsl #2
     c98:	000d0800 	andeq	r0, sp, r0, lsl #16
     c9c:	0b3a0e03 	bleq	e844b0 <__RAM_SIZE+0xd844b0>
     ca0:	0b390b3b 	bleq	e43994 <__RAM_SIZE+0xd43994>
     ca4:	0a381349 	beq	e059d0 <__RAM_SIZE+0xd059d0>
     ca8:	0f090000 	svceq	0x00090000
     cac:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
     cb0:	0a000013 	beq	d04 <__Vectors_Size+0x544>
     cb4:	0c3f012e 	ldfeqs	f0, [pc], #-184	; c04 <__Vectors_Size+0x444>
     cb8:	0b3a0e03 	bleq	e844cc <__RAM_SIZE+0xd844cc>
     cbc:	0b390b3b 	bleq	e439b0 <__RAM_SIZE+0xd439b0>
     cc0:	13490c27 	movtne	r0, #39975	; 0x9c27
     cc4:	01120111 	tsteq	r2, r1, lsl r1
     cc8:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
     ccc:	0013010c 	andseq	r0, r3, ip, lsl #2
     cd0:	00050b00 	andeq	r0, r5, r0, lsl #22
     cd4:	0b3a0e03 	bleq	e844e8 <__RAM_SIZE+0xd844e8>
     cd8:	0b390b3b 	bleq	e439cc <__RAM_SIZE+0xd439cc>
     cdc:	06021349 	streq	r1, [r2], -r9, asr #6
     ce0:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
     ce4:	00340c00 	eorseq	r0, r4, r0, lsl #24
     ce8:	0b3a0e03 	bleq	e844fc <__RAM_SIZE+0xd844fc>
     cec:	0b390b3b 	bleq	e439e0 <__RAM_SIZE+0xd439e0>
     cf0:	06021349 	streq	r1, [r2], -r9, asr #6
     cf4:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
     cf8:	012e0d00 			; <UNDEFINED> instruction: 0x012e0d00
     cfc:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
     d00:	0b3b0b3a 	bleq	ec39f0 <__RAM_SIZE+0xdc39f0>
     d04:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     d08:	01120111 	tsteq	r2, r1, lsl r1
     d0c:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
     d10:	0013010c 	andseq	r0, r3, ip, lsl #2
     d14:	00050e00 	andeq	r0, r5, r0, lsl #28
     d18:	0b3a0e03 	bleq	e8452c <__RAM_SIZE+0xd8452c>
     d1c:	0b390b3b 	bleq	e43a10 <__RAM_SIZE+0xd43a10>
     d20:	0a021349 	beq	85a4c <__HEAP_SIZE+0x84a4c>
     d24:	2e0f0000 	cdpcs	0, 0, cr0, cr15, cr0, {0}
     d28:	030c3f01 	movweq	r3, #52993	; 0xcf01
     d2c:	3b0b3a0e 	blcc	2cf56c <__RAM_SIZE+0x1cf56c>
     d30:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
     d34:	1201110c 	andne	r1, r1, #12, 2
     d38:	970a4001 	strls	r4, [sl, -r1]
     d3c:	13010c42 	movwne	r0, #7234	; 0x1c42
     d40:	2e100000 	cdpcs	0, 1, cr0, cr0, cr0, {0}
     d44:	030c3f01 	movweq	r3, #52993	; 0xcf01
     d48:	3b0b3a0e 	blcc	2cf588 <__RAM_SIZE+0x1cf588>
     d4c:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
     d50:	1201110c 	andne	r1, r1, #12, 2
     d54:	970a4001 	strls	r4, [sl, -r1]
     d58:	00000c42 	andeq	r0, r0, r2, asr #24
     d5c:	01110100 	tsteq	r1, r0, lsl #2
     d60:	0b130e25 	bleq	4c45fc <__RAM_SIZE+0x3c45fc>
     d64:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
     d68:	01110655 	tsteq	r1, r5, asr r6
     d6c:	06100152 			; <UNDEFINED> instruction: 0x06100152
     d70:	16020000 	strne	r0, [r2], -r0
     d74:	3a0e0300 	bcc	38197c <__RAM_SIZE+0x28197c>
     d78:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     d7c:	0013490b 	andseq	r4, r3, fp, lsl #18
     d80:	00240300 	eoreq	r0, r4, r0, lsl #6
     d84:	0b3e0b0b 	bleq	f839b8 <__RAM_SIZE+0xe839b8>
     d88:	00000e03 	andeq	r0, r0, r3, lsl #28
     d8c:	0b002404 	bleq	9da4 <__HEAP_SIZE+0x8da4>
     d90:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
     d94:	05000008 	streq	r0, [r0, #-8]
     d98:	0b0b000f 	bleq	2c0ddc <__RAM_SIZE+0x1c0ddc>
     d9c:	26060000 	strcs	r0, [r6], -r0
     da0:	00134900 	andseq	r4, r3, r0, lsl #18
     da4:	000f0700 	andeq	r0, pc, r0, lsl #14
     da8:	13490b0b 	movtne	r0, #39691	; 0x9b0b
     dac:	26080000 	strcs	r0, [r8], -r0
     db0:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
     db4:	13490035 	movtne	r0, #36917	; 0x9035
     db8:	130a0000 	movwne	r0, #40960	; 0xa000
     dbc:	0b0e0301 	bleq	3819c8 <__RAM_SIZE+0x2819c8>
     dc0:	3b0b3a0b 	blcc	2cf5f4 <__RAM_SIZE+0x1cf5f4>
     dc4:	010b3905 	tsteq	fp, r5, lsl #18
     dc8:	0b000013 	bleq	e1c <__Vectors_Size+0x65c>
     dcc:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
     dd0:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     dd4:	13490b39 	movtne	r0, #39737	; 0x9b39
     dd8:	00000a38 	andeq	r0, r0, r8, lsr sl
     ddc:	4901010c 	stmdbmi	r1, {r2, r3, r8}
     de0:	00130113 	andseq	r0, r3, r3, lsl r1
     de4:	00210d00 	eoreq	r0, r1, r0, lsl #26
     de8:	0b2f1349 	bleq	bc5b14 <__RAM_SIZE+0xac5b14>
     dec:	160e0000 	strne	r0, [lr], -r0
     df0:	3a0e0300 	bcc	3819f8 <__RAM_SIZE+0x2819f8>
     df4:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     df8:	0013490b 	andseq	r4, r3, fp, lsl #18
     dfc:	01170f00 	tsteq	r7, r0, lsl #30
     e00:	0b3a0b0b 	bleq	e83a34 <__RAM_SIZE+0xd83a34>
     e04:	0b39053b 	bleq	e422f8 <__RAM_SIZE+0xd422f8>
     e08:	00001301 	andeq	r1, r0, r1, lsl #6
     e0c:	03000d10 	movweq	r0, #3344	; 0xd10
     e10:	3b0b3a0e 	blcc	2cf650 <__RAM_SIZE+0x1cf650>
     e14:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     e18:	11000013 	tstne	r0, r3, lsl r0
     e1c:	0803000d 	stmdaeq	r3, {r0, r2, r3}
     e20:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     e24:	13490b39 	movtne	r0, #39737	; 0x9b39
     e28:	00000a38 	andeq	r0, r0, r8, lsr sl
     e2c:	03011312 	movweq	r1, #4882	; 0x1312
     e30:	3a0b0b0e 	bcc	2c3a70 <__RAM_SIZE+0x1c3a70>
     e34:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     e38:	0013010b 	andseq	r0, r3, fp, lsl #2
     e3c:	000d1300 	andeq	r1, sp, r0, lsl #6
     e40:	0b3a0e03 	bleq	e84654 <__RAM_SIZE+0xd84654>
     e44:	0b390b3b 	bleq	e43b38 <__RAM_SIZE+0xd43b38>
     e48:	0a381349 	beq	e05b74 <__RAM_SIZE+0xd05b74>
     e4c:	13140000 	tstne	r4, #0
     e50:	3c0e0300 	stccc	3, cr0, [lr], {-0}
     e54:	1500000c 	strne	r0, [r0, #-12]
     e58:	0803000d 	stmdaeq	r3, {r0, r2, r3}
     e5c:	0b3b0b3a 	bleq	ec3b4c <__RAM_SIZE+0xdc3b4c>
     e60:	13490b39 	movtne	r0, #39737	; 0x9b39
     e64:	00000a38 	andeq	r0, r0, r8, lsr sl
     e68:	0b011716 	bleq	46ac8 <__HEAP_SIZE+0x45ac8>
     e6c:	3b0b3a0b 	blcc	2cf6a0 <__RAM_SIZE+0x1cf6a0>
     e70:	010b390b 	tsteq	fp, fp, lsl #18
     e74:	17000013 	smladne	r0, r3, r0, r0
     e78:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
     e7c:	0b3b0b3a 	bleq	ec3b6c <__RAM_SIZE+0xdc3b6c>
     e80:	13490b39 	movtne	r0, #39737	; 0x9b39
     e84:	2e180000 	cdpcs	0, 1, cr0, cr8, cr0, {0}
     e88:	3a0e0301 	bcc	381a94 <__RAM_SIZE+0x281a94>
     e8c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     e90:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
     e94:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
     e98:	97064001 	strls	r4, [r6, -r1]
     e9c:	13010c42 	movwne	r0, #7234	; 0x1c42
     ea0:	05190000 	ldreq	r0, [r9, #-0]
     ea4:	3a0e0300 	bcc	381aac <__RAM_SIZE+0x281aac>
     ea8:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     eac:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     eb0:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
     eb4:	341a0000 	ldrcc	r0, [sl], #-0
     eb8:	3a0e0300 	bcc	381ac0 <__RAM_SIZE+0x281ac0>
     ebc:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     ec0:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     ec4:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
     ec8:	0b1b0000 	bleq	6c0ed0 <__RAM_SIZE+0x5c0ed0>
     ecc:	00065501 	andeq	r5, r6, r1, lsl #10
     ed0:	010b1c00 	tsteq	fp, r0, lsl #24
     ed4:	01120111 	tsteq	r2, r1, lsl r1
     ed8:	00001301 	andeq	r1, r0, r1, lsl #6
     edc:	0182891d 	orreq	r8, r2, sp, lsl r9
     ee0:	31011100 	mrscc	r1, (UNDEF: 17)
     ee4:	1e000013 	mcrne	0, 0, r0, cr0, cr3, {0}
     ee8:	01018289 	smlabbeq	r1, r9, r2, r8
     eec:	13310111 	teqne	r1, #1073741828	; 0x40000004
     ef0:	00001301 	andeq	r1, r0, r1, lsl #6
     ef4:	01828a1f 	orreq	r8, r2, pc, lsl sl
     ef8:	910a0200 	mrsls	r0, R10_fiq
     efc:	00000a42 	andeq	r0, r0, r2, asr #20
     f00:	01828920 	orreq	r8, r2, r0, lsr #18
     f04:	31011101 	tstcc	r1, r1, lsl #2
     f08:	21000013 	tstcs	r0, r3, lsl r0
     f0c:	0c3f012e 	ldfeqs	f0, [pc], #-184	; e5c <__Vectors_Size+0x69c>
     f10:	0b3a0e03 	bleq	e84724 <__RAM_SIZE+0xd84724>
     f14:	0b39053b 	bleq	e42408 <__RAM_SIZE+0xd42408>
     f18:	13490c27 	movtne	r0, #39975	; 0x9c27
     f1c:	01120111 	tsteq	r2, r1, lsl r1
     f20:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
     f24:	0013010c 	andseq	r0, r3, ip, lsl #2
     f28:	00342200 	eorseq	r2, r4, r0, lsl #4
     f2c:	0b3a0e03 	bleq	e84740 <__RAM_SIZE+0xd84740>
     f30:	0b39053b 	bleq	e42424 <__RAM_SIZE+0xd42424>
     f34:	0a021349 	beq	85c60 <__HEAP_SIZE+0x84c60>
     f38:	2e230000 	cdpcs	0, 2, cr0, cr3, cr0, {0}
     f3c:	030c3f01 	movweq	r3, #52993	; 0xcf01
     f40:	3b0b3a0e 	blcc	2cf780 <__RAM_SIZE+0x1cf780>
     f44:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
     f48:	1201110c 	andne	r1, r1, #12, 2
     f4c:	97064001 	strls	r4, [r6, -r1]
     f50:	13010c42 	movwne	r0, #7234	; 0x1c42
     f54:	2e240000 	cdpcs	0, 2, cr0, cr4, cr0, {0}
     f58:	030c3f01 	movweq	r3, #52993	; 0xcf01
     f5c:	3b0b3a0e 	blcc	2cf79c <__RAM_SIZE+0x1cf79c>
     f60:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
     f64:	1113490c 	tstne	r3, ip, lsl #18
     f68:	40011201 	andmi	r1, r1, r1, lsl #4
     f6c:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
     f70:	00001301 	andeq	r1, r0, r1, lsl #6
     f74:	03003425 	movweq	r3, #1061	; 0x425
     f78:	3b0b3a0e 	blcc	2cf7b8 <__RAM_SIZE+0x1cf7b8>
     f7c:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     f80:	000b1c13 	andeq	r1, fp, r3, lsl ip
     f84:	012e2600 			; <UNDEFINED> instruction: 0x012e2600
     f88:	0b3a0e03 	bleq	e8479c <__RAM_SIZE+0xd8479c>
     f8c:	0b39053b 	bleq	e42480 <__RAM_SIZE+0xd42480>
     f90:	01110c27 	tsteq	r1, r7, lsr #24
     f94:	06400112 			; <UNDEFINED> instruction: 0x06400112
     f98:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
     f9c:	27000013 	smladcs	r0, r3, r0, r0
     fa0:	0e03012e 	adfeqsp	f0, f3, #0.5
     fa4:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     fa8:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     fac:	01111349 	tsteq	r1, r9, asr #6
     fb0:	0a400112 	beq	1001400 <__RAM_SIZE+0xf01400>
     fb4:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
     fb8:	28000013 	stmdacs	r0, {r0, r1, r4}
     fbc:	0655010b 	ldrbeq	r0, [r5], -fp, lsl #2
     fc0:	00001301 	andeq	r1, r0, r1, lsl #6
     fc4:	11010b29 	tstne	r1, r9, lsr #22
     fc8:	00011201 	andeq	r1, r1, r1, lsl #4
     fcc:	00052a00 	andeq	r2, r5, r0, lsl #20
     fd0:	0b3a0e03 	bleq	e847e4 <__RAM_SIZE+0xd847e4>
     fd4:	0b39053b 	bleq	e424c8 <__RAM_SIZE+0xd424c8>
     fd8:	0a021349 	beq	85d04 <__HEAP_SIZE+0x84d04>
     fdc:	2e2b0000 	cdpcs	0, 2, cr0, cr11, cr0, {0}
     fe0:	3c0c3f00 	stccc	15, cr3, [ip], {-0}
     fe4:	0e40870c 	cdpeq	7, 4, cr8, cr0, cr12, {0}
     fe8:	0b3a0e03 	bleq	e847fc <__RAM_SIZE+0xd847fc>
     fec:	0b39053b 	bleq	e424e0 <__RAM_SIZE+0xd424e0>
     ff0:	2e2c0000 	cdpcs	0, 2, cr0, cr12, cr0, {0}
     ff4:	3c0c3f00 	stccc	15, cr3, [ip], {-0}
     ff8:	0e40870c 	cdpeq	7, 4, cr8, cr0, cr12, {0}
     ffc:	0b3a0e03 	bleq	e84810 <__RAM_SIZE+0xd84810>
    1000:	0b390b3b 	bleq	e43cf4 <__RAM_SIZE+0xd43cf4>
    1004:	2e2d0000 	cdpcs	0, 2, cr0, cr13, cr0, {0}
    1008:	3c0c3f00 	stccc	15, cr3, [ip], {-0}
    100c:	0e40870c 	cdpeq	7, 4, cr8, cr0, cr12, {0}
    1010:	0b3a0e03 	bleq	e84824 <__RAM_SIZE+0xd84824>
    1014:	00000b3b 	andeq	r0, r0, fp, lsr fp
    1018:	01110100 	tsteq	r1, r0, lsl #2
    101c:	0b130e25 	bleq	4c48b8 <__RAM_SIZE+0x3c48b8>
    1020:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
    1024:	01110655 	tsteq	r1, r5, asr r6
    1028:	06100152 			; <UNDEFINED> instruction: 0x06100152
    102c:	16020000 	strne	r0, [r2], -r0
    1030:	3a0e0300 	bcc	381c38 <__RAM_SIZE+0x281c38>
    1034:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1038:	0013490b 	andseq	r4, r3, fp, lsl #18
    103c:	00260300 	eoreq	r0, r6, r0, lsl #6
    1040:	00001349 	andeq	r1, r0, r9, asr #6
    1044:	0b002404 	bleq	a05c <__HEAP_SIZE+0x905c>
    1048:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
    104c:	0500000e 	streq	r0, [r0, #-14]
    1050:	0b0b0024 	bleq	2c10e8 <__RAM_SIZE+0x1c10e8>
    1054:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
    1058:	0f060000 	svceq	0x00060000
    105c:	000b0b00 	andeq	r0, fp, r0, lsl #22
    1060:	000f0700 	andeq	r0, pc, r0, lsl #14
    1064:	13490b0b 	movtne	r0, #39691	; 0x9b0b
    1068:	35080000 	strcc	r0, [r8, #-0]
    106c:	00134900 	andseq	r4, r3, r0, lsl #18
    1070:	01150900 	tsteq	r5, r0, lsl #18
    1074:	13010c27 	movwne	r0, #7207	; 0x1c27
    1078:	050a0000 	streq	r0, [sl, #-0]
    107c:	00134900 	andseq	r4, r3, r0, lsl #18
    1080:	01130b00 	tsteq	r3, r0, lsl #22
    1084:	0b0b0e03 	bleq	2c4898 <__RAM_SIZE+0x1c4898>
    1088:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    108c:	13010b39 	movwne	r0, #6969	; 0x1b39
    1090:	0d0c0000 	stceq	0, cr0, [ip, #-0]
    1094:	3a0e0300 	bcc	381c9c <__RAM_SIZE+0x281c9c>
    1098:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    109c:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    10a0:	0d00000a 	stceq	0, cr0, [r0, #-40]	; 0xffffffd8
    10a4:	13490101 	movtne	r0, #37121	; 0x9101
    10a8:	00001301 	andeq	r1, r0, r1, lsl #6
    10ac:	4900210e 	stmdbmi	r0, {r1, r2, r3, r8, sp}
    10b0:	000b2f13 	andeq	r2, fp, r3, lsl pc
    10b4:	00160f00 	andseq	r0, r6, r0, lsl #30
    10b8:	0b3a0e03 	bleq	e848cc <__RAM_SIZE+0xd848cc>
    10bc:	0b39053b 	bleq	e425b0 <__RAM_SIZE+0xd425b0>
    10c0:	00001349 	andeq	r1, r0, r9, asr #6
    10c4:	03011310 	movweq	r1, #4880	; 0x1310
    10c8:	3a0b0b0e 	bcc	2c3d08 <__RAM_SIZE+0x1c3d08>
    10cc:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    10d0:	0013010b 	andseq	r0, r3, fp, lsl #2
    10d4:	000d1100 	andeq	r1, sp, r0, lsl #2
    10d8:	0b3a0e03 	bleq	e848ec <__RAM_SIZE+0xd848ec>
    10dc:	0b390b3b 	bleq	e43dd0 <__RAM_SIZE+0xd43dd0>
    10e0:	0a381349 	beq	e05e0c <__RAM_SIZE+0xd05e0c>
    10e4:	15120000 	ldrne	r0, [r2, #-0]
    10e8:	490c2701 	stmdbmi	ip, {r0, r8, r9, sl, sp}
    10ec:	00130113 	andseq	r0, r3, r3, lsl r1
    10f0:	01041300 	mrseq	r1, LR_abt
    10f4:	0b0b0b3e 	bleq	2c3df4 <__RAM_SIZE+0x1c3df4>
    10f8:	0b3a1349 	bleq	e85e24 <__RAM_SIZE+0xd85e24>
    10fc:	0b390b3b 	bleq	e43df0 <__RAM_SIZE+0xd43df0>
    1100:	00001301 	andeq	r1, r0, r1, lsl #6
    1104:	03002814 	movweq	r2, #2068	; 0x814
    1108:	000b1c0e 	andeq	r1, fp, lr, lsl #24
    110c:	00341500 	eorseq	r1, r4, r0, lsl #10
    1110:	0b3a0e03 	bleq	e84924 <__RAM_SIZE+0xd84924>
    1114:	0b39053b 	bleq	e42608 <__RAM_SIZE+0xd42608>
    1118:	0c3f1349 	ldceq	3, cr1, [pc], #-292	; ffc <__Vectors_Size+0x83c>
    111c:	00000a02 	andeq	r0, r0, r2, lsl #20
    1120:	03003416 	movweq	r3, #1046	; 0x416
    1124:	3b0b3a0e 	blcc	2cf964 <__RAM_SIZE+0x1cf964>
    1128:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    112c:	000a0213 	andeq	r0, sl, r3, lsl r2
    1130:	012e1700 			; <UNDEFINED> instruction: 0x012e1700
    1134:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    1138:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    113c:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    1140:	01120111 	tsteq	r2, r1, lsl r1
    1144:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
    1148:	0013010c 	andseq	r0, r3, ip, lsl #2
    114c:	00341800 	eorseq	r1, r4, r0, lsl #16
    1150:	0b3a0e03 	bleq	e84964 <__RAM_SIZE+0xd84964>
    1154:	0b39053b 	bleq	e42648 <__RAM_SIZE+0xd42648>
    1158:	06021349 	streq	r1, [r2], -r9, asr #6
    115c:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
    1160:	00051900 	andeq	r1, r5, r0, lsl #18
    1164:	0b3a0e03 	bleq	e84978 <__RAM_SIZE+0xd84978>
    1168:	0b39053b 	bleq	e4265c <__RAM_SIZE+0xd4265c>
    116c:	0a021349 	beq	85e98 <__HEAP_SIZE+0x84e98>
    1170:	2e1a0000 	cdpcs	0, 1, cr0, cr10, cr0, {0}
    1174:	3a0e0301 	bcc	381d80 <__RAM_SIZE+0x281d80>
    1178:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    117c:	110c270b 	tstne	ip, fp, lsl #14
    1180:	40011201 	andmi	r1, r1, r1, lsl #4
    1184:	0c429706 	mcrreq	7, 0, r9, r2, cr6
    1188:	00001301 	andeq	r1, r0, r1, lsl #6
    118c:	0300051b 	movweq	r0, #1307	; 0x51b
    1190:	3b0b3a0e 	blcc	2cf9d0 <__RAM_SIZE+0x1cf9d0>
    1194:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    1198:	b7060213 	smladlt	r6, r3, r2, r0
    119c:	00000642 	andeq	r0, r0, r2, asr #12
    11a0:	11010b1c 	tstne	r1, ip, lsl fp
    11a4:	01011201 	tsteq	r1, r1, lsl #4
    11a8:	1d000013 	stcne	0, cr0, [r0, #-76]	; 0xffffffb4
    11ac:	00018289 	andeq	r8, r1, r9, lsl #5
    11b0:	13310111 	teqne	r1, #1073741828	; 0x40000004
    11b4:	891e0000 	ldmdbhi	lr, {}	; <UNPREDICTABLE>
    11b8:	11010182 	smlabbne	r1, r2, r1, r0
    11bc:	01133101 	tsteq	r3, r1, lsl #2
    11c0:	1f000013 	svcne	0x00000013
    11c4:	0001828a 	andeq	r8, r1, sl, lsl #5
    11c8:	42910a02 	addsmi	r0, r1, #8192	; 0x2000
    11cc:	2000000a 	andcs	r0, r0, sl
    11d0:	01018289 	smlabbeq	r1, r9, r2, r8
    11d4:	13310111 	teqne	r1, #1073741828	; 0x40000004
    11d8:	2e210000 	cdpcs	0, 2, cr0, cr1, cr0, {0}
    11dc:	030c3f01 	movweq	r3, #52993	; 0xcf01
    11e0:	3b0b3a0e 	blcc	2cfa20 <__RAM_SIZE+0x1cfa20>
    11e4:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    11e8:	1113490c 	tstne	r3, ip, lsl #18
    11ec:	40011201 	andmi	r1, r1, r1, lsl #4
    11f0:	0c429706 	mcrreq	7, 0, r9, r2, cr6
    11f4:	00001301 	andeq	r1, r0, r1, lsl #6
    11f8:	3f012e22 	svccc	0x00012e22
    11fc:	3a0e030c 	bcc	381e34 <__RAM_SIZE+0x281e34>
    1200:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1204:	110c270b 	tstne	ip, fp, lsl #14
    1208:	40011201 	andmi	r1, r1, r1, lsl #4
    120c:	0c429706 	mcrreq	7, 0, r9, r2, cr6
    1210:	00001301 	andeq	r1, r0, r1, lsl #6
    1214:	55010b23 	strpl	r0, [r1, #-2851]	; 0xfffff4dd
    1218:	00130106 	andseq	r0, r3, r6, lsl #2
    121c:	012e2400 			; <UNDEFINED> instruction: 0x012e2400
    1220:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    1224:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1228:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    122c:	01111349 	tsteq	r1, r9, asr #6
    1230:	0a400112 	beq	1001680 <__RAM_SIZE+0xf01680>
    1234:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
    1238:	25000013 	strcs	r0, [r0, #-19]	; 0xffffffed
    123c:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    1240:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1244:	13490b39 	movtne	r0, #39737	; 0x9b39
    1248:	00000b1c 	andeq	r0, r0, ip, lsl fp
    124c:	03002e26 	movweq	r2, #3622	; 0xe26
    1250:	3b0b3a0e 	blcc	2cfa90 <__RAM_SIZE+0x1cfa90>
    1254:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    1258:	1201110c 	andne	r1, r1, #12, 2
    125c:	970a4001 	strls	r4, [sl, -r1]
    1260:	00000c42 	andeq	r0, r0, r2, asr #24
    1264:	03012e27 	movweq	r2, #7719	; 0x1e27
    1268:	3b0b3a0e 	blcc	2cfaa8 <__RAM_SIZE+0x1cfaa8>
    126c:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    1270:	1113490c 	tstne	r3, ip, lsl #18
    1274:	40011201 	andmi	r1, r1, r1, lsl #4
    1278:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
    127c:	00001301 	andeq	r1, r0, r1, lsl #6
    1280:	55010b28 	strpl	r0, [r1, #-2856]	; 0xfffff4d8
    1284:	29000006 	stmdbcs	r0, {r1, r2}
    1288:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 11d8 <__HEAP_SIZE+0x1d8>
    128c:	0b3a0e03 	bleq	e84aa0 <__RAM_SIZE+0xd84aa0>
    1290:	0b39053b 	bleq	e42784 <__RAM_SIZE+0xd42784>
    1294:	01110c27 	tsteq	r1, r7, lsr #24
    1298:	0a400112 	beq	10016e8 <__RAM_SIZE+0xf016e8>
    129c:	000c4297 	muleq	ip, r7, r2
    12a0:	82892a00 	addhi	r2, r9, #0, 20
    12a4:	01110101 	tsteq	r1, r1, lsl #2
    12a8:	0b2b0000 	bleq	ac12b0 <__RAM_SIZE+0x9c12b0>
    12ac:	12011101 	andne	r1, r1, #1073741824	; 0x40000000
    12b0:	2c000001 	stccs	0, cr0, [r0], {1}
    12b4:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 1204 <__HEAP_SIZE+0x204>
    12b8:	0b3a0e03 	bleq	e84acc <__RAM_SIZE+0xd84acc>
    12bc:	0b39053b 	bleq	e427b0 <__RAM_SIZE+0xd427b0>
    12c0:	13490c27 	movtne	r0, #39975	; 0x9c27
    12c4:	01120111 	tsteq	r2, r1, lsl r1
    12c8:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
    12cc:	2d00000c 	stccs	0, cr0, [r0, #-48]	; 0xffffffd0
    12d0:	0e03012e 	adfeqsp	f0, f3, #0.5
    12d4:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    12d8:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    12dc:	01111349 	tsteq	r1, r9, asr #6
    12e0:	06400112 			; <UNDEFINED> instruction: 0x06400112
    12e4:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
    12e8:	2e000013 	mcrcs	0, 0, r0, cr0, cr3, {0}
    12ec:	08030034 	stmdaeq	r3, {r2, r4, r5}
    12f0:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    12f4:	13490b39 	movtne	r0, #39737	; 0x9b39
    12f8:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    12fc:	2f000006 	svccs	0x00000006
    1300:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 1250 <__HEAP_SIZE+0x250>
    1304:	40870c3c 	addmi	r0, r7, ip, lsr ip
    1308:	3a0e030e 	bcc	381f48 <__RAM_SIZE+0x281f48>
    130c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1310:	3000000b 	andcc	r0, r0, fp
    1314:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 1264 <__HEAP_SIZE+0x264>
    1318:	40870c3c 	addmi	r0, r7, ip, lsr ip
    131c:	3a0e030e 	bcc	381f5c <__RAM_SIZE+0x281f5c>
    1320:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1324:	3100000b 	tstcc	r0, fp
    1328:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 1278 <__HEAP_SIZE+0x278>
    132c:	40870c3c 	addmi	r0, r7, ip, lsr ip
    1330:	3a0e030e 	bcc	381f70 <__RAM_SIZE+0x281f70>
    1334:	000b3b0b 	andeq	r3, fp, fp, lsl #22
    1338:	11010000 	mrsne	r0, (UNDEF: 1)
    133c:	130e2501 	movwne	r2, #58625	; 0xe501
    1340:	1b0e030b 	blne	381f74 <__RAM_SIZE+0x281f74>
    1344:	1106550e 	tstne	r6, lr, lsl #10
    1348:	10015201 	andne	r5, r1, r1, lsl #4
    134c:	02000006 	andeq	r0, r0, #6
    1350:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
    1354:	0b3b0b3a 	bleq	ec4044 <__RAM_SIZE+0xdc4044>
    1358:	13490b39 	movtne	r0, #39737	; 0x9b39
    135c:	24030000 	strcs	r0, [r3], #-0
    1360:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    1364:	000e030b 	andeq	r0, lr, fp, lsl #6
    1368:	00240400 	eoreq	r0, r4, r0, lsl #8
    136c:	0b3e0b0b 	bleq	f83fa0 <__RAM_SIZE+0xe83fa0>
    1370:	00000803 	andeq	r0, r0, r3, lsl #16
    1374:	0b000f05 	bleq	4f90 <__HEAP_SIZE+0x3f90>
    1378:	0600000b 	streq	r0, [r0], -fp
    137c:	13490026 	movtne	r0, #36902	; 0x9026
    1380:	0f070000 	svceq	0x00070000
    1384:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
    1388:	08000013 	stmdaeq	r0, {r0, r1, r4}
    138c:	0c270115 	stfeqs	f0, [r7], #-84	; 0xffffffac
    1390:	00001301 	andeq	r1, r0, r1, lsl #6
    1394:	49000509 	stmdbmi	r0, {r0, r3, r8, sl}
    1398:	0a000013 	beq	13ec <__HEAP_SIZE+0x3ec>
    139c:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
    13a0:	0b3a0b0b 	bleq	e83fd4 <__RAM_SIZE+0xd83fd4>
    13a4:	0b39053b 	bleq	e42898 <__RAM_SIZE+0xd42898>
    13a8:	00001301 	andeq	r1, r0, r1, lsl #6
    13ac:	03000d0b 	movweq	r0, #3339	; 0xd0b
    13b0:	3b0b3a0e 	blcc	2cfbf0 <__RAM_SIZE+0x1cfbf0>
    13b4:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    13b8:	000a3813 	andeq	r3, sl, r3, lsl r8
    13bc:	01010c00 	tsteq	r1, r0, lsl #24
    13c0:	13011349 	movwne	r1, #4937	; 0x1349
    13c4:	210d0000 	mrscs	r0, (UNDEF: 13)
    13c8:	2f134900 	svccs	0x00134900
    13cc:	0e00000b 	cdpeq	0, 0, cr0, cr0, cr11, {0}
    13d0:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
    13d4:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    13d8:	13490b39 	movtne	r0, #39737	; 0x9b39
    13dc:	170f0000 	strne	r0, [pc, -r0]
    13e0:	3a0b0b01 	bcc	2c3fec <__RAM_SIZE+0x1c3fec>
    13e4:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    13e8:	0013010b 	andseq	r0, r3, fp, lsl #2
    13ec:	000d1000 	andeq	r1, sp, r0
    13f0:	0b3a0e03 	bleq	e84c04 <__RAM_SIZE+0xd84c04>
    13f4:	0b39053b 	bleq	e428e8 <__RAM_SIZE+0xd428e8>
    13f8:	00001349 	andeq	r1, r0, r9, asr #6
    13fc:	03000d11 	movweq	r0, #3345	; 0xd11
    1400:	3b0b3a08 	blcc	2cfc28 <__RAM_SIZE+0x1cfc28>
    1404:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    1408:	000a3813 	andeq	r3, sl, r3, lsl r8
    140c:	01131200 	tsteq	r3, r0, lsl #4
    1410:	0b0b0e03 	bleq	2c4c24 <__RAM_SIZE+0x1c4c24>
    1414:	0b3b0b3a 	bleq	ec4104 <__RAM_SIZE+0xdc4104>
    1418:	13010b39 	movwne	r0, #6969	; 0x1b39
    141c:	0d130000 	ldceq	0, cr0, [r3, #-0]
    1420:	3a0e0300 	bcc	382028 <__RAM_SIZE+0x282028>
    1424:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1428:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    142c:	1400000a 	strne	r0, [r0], #-10
    1430:	0e030013 	mcreq	0, 0, r0, cr3, cr3, {0}
    1434:	00000c3c 	andeq	r0, r0, ip, lsr ip
    1438:	0b011715 	bleq	47094 <__HEAP_SIZE+0x46094>
    143c:	3b0b3a0b 	blcc	2cfc70 <__RAM_SIZE+0x1cfc70>
    1440:	010b390b 	tsteq	fp, fp, lsl #18
    1444:	16000013 			; <UNDEFINED> instruction: 0x16000013
    1448:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
    144c:	0b3b0b3a 	bleq	ec413c <__RAM_SIZE+0xdc413c>
    1450:	13490b39 	movtne	r0, #39737	; 0x9b39
    1454:	0d170000 	ldceq	0, cr0, [r7, #-0]
    1458:	3a080300 	bcc	202060 <__RAM_SIZE+0x102060>
    145c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1460:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    1464:	1800000a 	stmdane	r0, {r1, r3}
    1468:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    146c:	0b3b0b3a 	bleq	ec415c <__RAM_SIZE+0xdc415c>
    1470:	13490b39 	movtne	r0, #39737	; 0x9b39
    1474:	00000a02 	andeq	r0, r0, r2, lsl #20
    1478:	3f002e19 	svccc	0x00002e19
    147c:	3a0e030c 	bcc	3820b4 <__RAM_SIZE+0x2820b4>
    1480:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1484:	110c270b 	tstne	ip, fp, lsl #14
    1488:	40011201 	andmi	r1, r1, r1, lsl #4
    148c:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
    1490:	2e1a0000 	cdpcs	0, 1, cr0, cr10, cr0, {0}
    1494:	030c3f01 	movweq	r3, #52993	; 0xcf01
    1498:	3b0b3a0e 	blcc	2cfcd8 <__RAM_SIZE+0x1cfcd8>
    149c:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    14a0:	1113490c 	tstne	r3, ip, lsl #18
    14a4:	40011201 	andmi	r1, r1, r1, lsl #4
    14a8:	0c429706 	mcrreq	7, 0, r9, r2, cr6
    14ac:	00001301 	andeq	r1, r0, r1, lsl #6
    14b0:	0300051b 	movweq	r0, #1307	; 0x51b
    14b4:	3b0b3a0e 	blcc	2cfcf4 <__RAM_SIZE+0x1cfcf4>
    14b8:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    14bc:	b7060213 	smladlt	r6, r3, r2, r0
    14c0:	00000642 	andeq	r0, r0, r2, asr #12
    14c4:	0300341c 	movweq	r3, #1052	; 0x41c
    14c8:	3b0b3a0e 	blcc	2cfd08 <__RAM_SIZE+0x1cfd08>
    14cc:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    14d0:	000a0213 	andeq	r0, sl, r3, lsl r2
    14d4:	00341d00 	eorseq	r1, r4, r0, lsl #26
    14d8:	0b3a0e03 	bleq	e84cec <__RAM_SIZE+0xd84cec>
    14dc:	0b39053b 	bleq	e429d0 <__RAM_SIZE+0xd429d0>
    14e0:	06021349 	streq	r1, [r2], -r9, asr #6
    14e4:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
    14e8:	82891e00 	addhi	r1, r9, #0, 28
    14ec:	01110101 	tsteq	r1, r1, lsl #2
    14f0:	00001331 	andeq	r1, r0, r1, lsr r3
    14f4:	01828a1f 	orreq	r8, r2, pc, lsl sl
    14f8:	910a0200 	mrsls	r0, R10_fiq
    14fc:	00000a42 	andeq	r0, r0, r2, asr #20
    1500:	3f012e20 	svccc	0x00012e20
    1504:	3a0e030c 	bcc	38213c <__RAM_SIZE+0x28213c>
    1508:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    150c:	110c270b 	tstne	ip, fp, lsl #14
    1510:	40011201 	andmi	r1, r1, r1, lsl #4
    1514:	0c429706 	mcrreq	7, 0, r9, r2, cr6
    1518:	00001301 	andeq	r1, r0, r1, lsl #6
    151c:	01828921 	orreq	r8, r2, r1, lsr #18
    1520:	31011100 	mrscc	r1, (UNDEF: 17)
    1524:	22000013 	andcs	r0, r0, #19
    1528:	0e03012e 	adfeqsp	f0, f3, #0.5
    152c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1530:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    1534:	01120111 	tsteq	r2, r1, lsl r1
    1538:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
    153c:	0013010c 	andseq	r0, r3, ip, lsl #2
    1540:	010b2300 	mrseq	r2, (UNDEF: 59)
    1544:	01120111 	tsteq	r2, r1, lsl r1
    1548:	00001301 	andeq	r1, r0, r1, lsl #6
    154c:	01828924 	orreq	r8, r2, r4, lsr #18
    1550:	31011101 	tstcc	r1, r1, lsl #2
    1554:	00130113 	andseq	r0, r3, r3, lsl r1
    1558:	012e2500 			; <UNDEFINED> instruction: 0x012e2500
    155c:	0b3a0e03 	bleq	e84d70 <__RAM_SIZE+0xd84d70>
    1560:	0b39053b 	bleq	e42a54 <__RAM_SIZE+0xd42a54>
    1564:	01110c27 	tsteq	r1, r7, lsr #24
    1568:	06400112 			; <UNDEFINED> instruction: 0x06400112
    156c:	010c4296 			; <UNDEFINED> instruction: 0x010c4296
    1570:	26000013 			; <UNDEFINED> instruction: 0x26000013
    1574:	01018289 	smlabbeq	r1, r9, r2, r8
    1578:	13010111 	movwne	r0, #4369	; 0x1111
    157c:	2e270000 	cdpcs	0, 2, cr0, cr7, cr0, {0}
    1580:	3a0e0301 	bcc	38218c <__RAM_SIZE+0x28218c>
    1584:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1588:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
    158c:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    1590:	97064001 	strls	r4, [r6, -r1]
    1594:	13010c42 	movwne	r0, #7234	; 0x1c42
    1598:	2e280000 	cdpcs	0, 2, cr0, cr8, cr0, {0}
    159c:	3a0e0301 	bcc	3821a8 <__RAM_SIZE+0x2821a8>
    15a0:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    15a4:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
    15a8:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    15ac:	970a4001 	strls	r4, [sl, -r1]
    15b0:	13010c42 	movwne	r0, #7234	; 0x1c42
    15b4:	2e290000 	cdpcs	0, 2, cr0, cr9, cr0, {0}
    15b8:	030c3f01 	movweq	r3, #52993	; 0xcf01
    15bc:	3b0b3a0e 	blcc	2cfdfc <__RAM_SIZE+0x1cfdfc>
    15c0:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    15c4:	1113490c 	tstne	r3, ip, lsl #18
    15c8:	40011201 	andmi	r1, r1, r1, lsl #4
    15cc:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
    15d0:	00001301 	andeq	r1, r0, r1, lsl #6
    15d4:	0300052a 	movweq	r0, #1322	; 0x52a
    15d8:	3b0b3a0e 	blcc	2cfe18 <__RAM_SIZE+0x1cfe18>
    15dc:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    15e0:	000a0213 	andeq	r0, sl, r3, lsl r2
    15e4:	002e2b00 	eoreq	r2, lr, r0, lsl #22
    15e8:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    15ec:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    15f0:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    15f4:	01111349 	tsteq	r1, r9, asr #6
    15f8:	0a400112 	beq	1001a48 <__RAM_SIZE+0xf01a48>
    15fc:	000c4297 	muleq	ip, r7, r2
    1600:	012e2c00 			; <UNDEFINED> instruction: 0x012e2c00
    1604:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    1608:	0b3b0b3a 	bleq	ec42f8 <__RAM_SIZE+0xdc42f8>
    160c:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    1610:	01111349 	tsteq	r1, r9, asr #6
    1614:	06400112 			; <UNDEFINED> instruction: 0x06400112
    1618:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
    161c:	2d000013 	stccs	0, cr0, [r0, #-76]	; 0xffffffb4
    1620:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    1624:	0b3b0b3a 	bleq	ec4314 <__RAM_SIZE+0xdc4314>
    1628:	13490b39 	movtne	r0, #39737	; 0x9b39
    162c:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    1630:	2e000006 	cdpcs	0, 0, cr0, cr0, cr6, {0}
    1634:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 1584 <__HEAP_SIZE+0x584>
    1638:	40870c3c 	addmi	r0, r7, ip, lsr ip
    163c:	3a0e030e 	bcc	38227c <__RAM_SIZE+0x28227c>
    1640:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1644:	2f00000b 	svccs	0x0000000b
    1648:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 1598 <__HEAP_SIZE+0x598>
    164c:	40870c3c 	addmi	r0, r7, ip, lsr ip
    1650:	3a0e030e 	bcc	382290 <__RAM_SIZE+0x282290>
    1654:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1658:	0000000b 	andeq	r0, r0, fp
    165c:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
    1660:	030b130e 	movweq	r1, #45838	; 0xb30e
    1664:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
    1668:	52011106 	andpl	r1, r1, #-2147483647	; 0x80000001
    166c:	00061001 	andeq	r1, r6, r1
    1670:	00160200 	andseq	r0, r6, r0, lsl #4
    1674:	0b3a0e03 	bleq	e84e88 <__RAM_SIZE+0xd84e88>
    1678:	0b390b3b 	bleq	e4436c <__RAM_SIZE+0xd4436c>
    167c:	00001349 	andeq	r1, r0, r9, asr #6
    1680:	49002603 	stmdbmi	r0, {r0, r1, r9, sl, sp}
    1684:	04000013 	streq	r0, [r0], #-19	; 0xffffffed
    1688:	0b0b0024 	bleq	2c1720 <__RAM_SIZE+0x1c1720>
    168c:	0e030b3e 	vmoveq.16	d3[0], r0
    1690:	24050000 	strcs	r0, [r5], #-0
    1694:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    1698:	0008030b 	andeq	r0, r8, fp, lsl #6
    169c:	000f0600 	andeq	r0, pc, r0, lsl #12
    16a0:	00000b0b 	andeq	r0, r0, fp, lsl #22
    16a4:	0b000f07 	bleq	52c8 <__HEAP_SIZE+0x42c8>
    16a8:	0013490b 	andseq	r4, r3, fp, lsl #18
    16ac:	01130800 	tsteq	r3, r0, lsl #16
    16b0:	0b0b0e03 	bleq	2c4ec4 <__RAM_SIZE+0x1c4ec4>
    16b4:	0b3b0b3a 	bleq	ec43a4 <__RAM_SIZE+0xdc43a4>
    16b8:	13010b39 	movwne	r0, #6969	; 0x1b39
    16bc:	0d090000 	stceq	0, cr0, [r9, #-0]
    16c0:	3a0e0300 	bcc	3822c8 <__RAM_SIZE+0x2822c8>
    16c4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    16c8:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    16cc:	0a00000a 	beq	16fc <__HEAP_SIZE+0x6fc>
    16d0:	13490101 	movtne	r0, #37121	; 0x9101
    16d4:	00001301 	andeq	r1, r0, r1, lsl #6
    16d8:	4900210b 	stmdbmi	r0, {r0, r1, r3, r8, sp}
    16dc:	00052f13 	andeq	r2, r5, r3, lsl pc
    16e0:	00340c00 	eorseq	r0, r4, r0, lsl #24
    16e4:	0b3a0e03 	bleq	e84ef8 <__RAM_SIZE+0xd84ef8>
    16e8:	0b390b3b 	bleq	e443dc <__RAM_SIZE+0xd443dc>
    16ec:	0c3f1349 	ldceq	3, cr1, [pc], #-292	; 15d0 <__HEAP_SIZE+0x5d0>
    16f0:	00000c3c 	andeq	r0, r0, ip, lsr ip
    16f4:	0300340d 	movweq	r3, #1037	; 0x40d
    16f8:	3b0b3a0e 	blcc	2cff38 <__RAM_SIZE+0x1cff38>
    16fc:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1700:	000b1c13 	andeq	r1, fp, r3, lsl ip
    1704:	00340e00 	eorseq	r0, r4, r0, lsl #28
    1708:	0b3a0e03 	bleq	e84f1c <__RAM_SIZE+0xd84f1c>
    170c:	0b390b3b 	bleq	e44400 <__RAM_SIZE+0xd44400>
    1710:	0a021349 	beq	8643c <__HEAP_SIZE+0x8543c>
    1714:	2e0f0000 	cdpcs	0, 0, cr0, cr15, cr0, {0}
    1718:	030c3f00 	movweq	r3, #52992	; 0xcf00
    171c:	3b0b3a0e 	blcc	2cff5c <__RAM_SIZE+0x1cff5c>
    1720:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    1724:	1201110c 	andne	r1, r1, #12, 2
    1728:	970a4001 	strls	r4, [sl, -r1]
    172c:	00000c42 	andeq	r0, r0, r2, asr #24
    1730:	3f012e10 	svccc	0x00012e10
    1734:	3a0e030c 	bcc	38236c <__RAM_SIZE+0x28236c>
    1738:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    173c:	110c270b 	tstne	ip, fp, lsl #14
    1740:	40011201 	andmi	r1, r1, r1, lsl #4
    1744:	0c429706 	mcrreq	7, 0, r9, r2, cr6
    1748:	00001301 	andeq	r1, r0, r1, lsl #6
    174c:	03000511 	movweq	r0, #1297	; 0x511
    1750:	3b0b3a0e 	blcc	2cff90 <__RAM_SIZE+0x1cff90>
    1754:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    1758:	b7060213 	smladlt	r6, r3, r2, r0
    175c:	00000642 	andeq	r0, r0, r2, asr #12
    1760:	03003412 	movweq	r3, #1042	; 0x412
    1764:	3b0b3a0e 	blcc	2cffa4 <__RAM_SIZE+0x1cffa4>
    1768:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    176c:	b7060213 	smladlt	r6, r3, r2, r0
    1770:	00000642 	andeq	r0, r0, r2, asr #12
    1774:	01828913 	orreq	r8, r2, r3, lsl r9
    1778:	31011100 	mrscc	r1, (UNDEF: 17)
    177c:	14000013 	strne	r0, [r0], #-19	; 0xffffffed
    1780:	0e03012e 	adfeqsp	f0, f3, #0.5
    1784:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1788:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    178c:	01120111 	tsteq	r2, r1, lsl r1
    1790:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
    1794:	0013010c 	andseq	r0, r3, ip, lsl #2
    1798:	00341500 	eorseq	r1, r4, r0, lsl #10
    179c:	0b3a0803 	bleq	e837b0 <__RAM_SIZE+0xd837b0>
    17a0:	0b39053b 	bleq	e42c94 <__RAM_SIZE+0xd42c94>
    17a4:	06021349 	streq	r1, [r2], -r9, asr #6
    17a8:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
    17ac:	012e1600 			; <UNDEFINED> instruction: 0x012e1600
    17b0:	0b3a0e03 	bleq	e84fc4 <__RAM_SIZE+0xd84fc4>
    17b4:	0b39053b 	bleq	e42ca8 <__RAM_SIZE+0xd42ca8>
    17b8:	01110c27 	tsteq	r1, r7, lsr #24
    17bc:	0a400112 	beq	1001c0c <__RAM_SIZE+0xf01c0c>
    17c0:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
    17c4:	17000013 	smladne	r0, r3, r0, r0
    17c8:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 1718 <__HEAP_SIZE+0x718>
    17cc:	0b3a0e03 	bleq	e84fe0 <__RAM_SIZE+0xd84fe0>
    17d0:	0b39053b 	bleq	e42cc4 <__RAM_SIZE+0xd42cc4>
    17d4:	13490c27 	movtne	r0, #39975	; 0x9c27
    17d8:	01120111 	tsteq	r2, r1, lsl r1
    17dc:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
    17e0:	0013010c 	andseq	r0, r3, ip, lsl #2
    17e4:	82891800 	addhi	r1, r9, #0, 16
    17e8:	01110101 	tsteq	r1, r1, lsl #2
    17ec:	13011331 	movwne	r1, #4913	; 0x1331
    17f0:	8a190000 	bhi	6417f8 <__RAM_SIZE+0x5417f8>
    17f4:	02000182 	andeq	r0, r0, #-2147483616	; 0x80000020
    17f8:	0a42910a 	beq	10a5c28 <__RAM_SIZE+0xfa5c28>
    17fc:	891a0000 	ldmdbhi	sl, {}	; <UNPREDICTABLE>
    1800:	11010182 	smlabbne	r1, r2, r1, r0
    1804:	00133101 	andseq	r3, r3, r1, lsl #2
    1808:	002e1b00 	eoreq	r1, lr, r0, lsl #22
    180c:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    1810:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1814:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    1818:	01111349 	tsteq	r1, r9, asr #6
    181c:	0a400112 	beq	1001c6c <__RAM_SIZE+0xf01c6c>
    1820:	000c4297 	muleq	ip, r7, r2
    1824:	00051c00 	andeq	r1, r5, r0, lsl #24
    1828:	0b3a0803 	bleq	e8383c <__RAM_SIZE+0xd8383c>
    182c:	0b39053b 	bleq	e42d20 <__RAM_SIZE+0xd42d20>
    1830:	06021349 	streq	r1, [r2], -r9, asr #6
    1834:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
    1838:	012e1d00 			; <UNDEFINED> instruction: 0x012e1d00
    183c:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    1840:	0b3b0b3a 	bleq	ec4530 <__RAM_SIZE+0xdc4530>
    1844:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    1848:	01111349 	tsteq	r1, r9, asr #6
    184c:	06400112 			; <UNDEFINED> instruction: 0x06400112
    1850:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
    1854:	1e000013 	mcrne	0, 0, r0, cr0, cr3, {0}
    1858:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
    185c:	0b3b0b3a 	bleq	ec454c <__RAM_SIZE+0xdc454c>
    1860:	13490b39 	movtne	r0, #39737	; 0x9b39
    1864:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    1868:	1f000006 	svcne	0x00000006
    186c:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    1870:	0b3b0b3a 	bleq	ec4560 <__RAM_SIZE+0xdc4560>
    1874:	13490b39 	movtne	r0, #39737	; 0x9b39
    1878:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    187c:	20000006 	andcs	r0, r0, r6
    1880:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 17d0 <__HEAP_SIZE+0x7d0>
    1884:	40870c3c 	addmi	r0, r7, ip, lsr ip
    1888:	3a0e030e 	bcc	3824c8 <__RAM_SIZE+0x2824c8>
    188c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1890:	2100000b 	tstcs	r0, fp
    1894:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 17e4 <__HEAP_SIZE+0x7e4>
    1898:	40870c3c 	addmi	r0, r7, ip, lsr ip
    189c:	3a0e030e 	bcc	3824dc <__RAM_SIZE+0x2824dc>
    18a0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    18a4:	2200000b 	andcs	r0, r0, #11
    18a8:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 17f8 <__HEAP_SIZE+0x7f8>
    18ac:	40870c3c 	addmi	r0, r7, ip, lsr ip
    18b0:	3a0e030e 	bcc	3824f0 <__RAM_SIZE+0x2824f0>
    18b4:	000b3b0b 	andeq	r3, fp, fp, lsl #22
    18b8:	11010000 	mrsne	r0, (UNDEF: 1)
    18bc:	130e2501 	movwne	r2, #58625	; 0xe501
    18c0:	1b0e030b 	blne	3824f4 <__RAM_SIZE+0x2824f4>
    18c4:	1106550e 	tstne	r6, lr, lsl #10
    18c8:	10015201 	andne	r5, r1, r1, lsl #4
    18cc:	02000006 	andeq	r0, r0, #6
    18d0:	0b0b0024 	bleq	2c1968 <__RAM_SIZE+0x1c1968>
    18d4:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
    18d8:	24030000 	strcs	r0, [r3], #-0
    18dc:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    18e0:	000e030b 	andeq	r0, lr, fp, lsl #6
    18e4:	00160400 	andseq	r0, r6, r0, lsl #8
    18e8:	0b3a0e03 	bleq	e850fc <__RAM_SIZE+0xd850fc>
    18ec:	0b390b3b 	bleq	e445e0 <__RAM_SIZE+0xd445e0>
    18f0:	00001349 	andeq	r1, r0, r9, asr #6
    18f4:	49003505 	stmdbmi	r0, {r0, r2, r8, sl, ip, sp}
    18f8:	06000013 			; <UNDEFINED> instruction: 0x06000013
    18fc:	0b0b000f 	bleq	2c1940 <__RAM_SIZE+0x1c1940>
    1900:	00001349 	andeq	r1, r0, r9, asr #6
    1904:	27011507 	strcs	r1, [r1, -r7, lsl #10]
    1908:	0013010c 	andseq	r0, r3, ip, lsl #2
    190c:	00050800 	andeq	r0, r5, r0, lsl #16
    1910:	00001349 	andeq	r1, r0, r9, asr #6
    1914:	0b000f09 	bleq	5540 <__HEAP_SIZE+0x4540>
    1918:	0a00000b 	beq	194c <__HEAP_SIZE+0x94c>
    191c:	0b3e0104 	bleq	f81d34 <__RAM_SIZE+0xe81d34>
    1920:	13490b0b 	movtne	r0, #39691	; 0x9b0b
    1924:	0b3b0b3a 	bleq	ec4614 <__RAM_SIZE+0xdc4614>
    1928:	13010b39 	movwne	r0, #6969	; 0x1b39
    192c:	280b0000 	stmdacs	fp, {}	; <UNPREDICTABLE>
    1930:	1c0e0300 	stcne	3, cr0, [lr], {-0}
    1934:	0c00000b 	stceq	0, cr0, [r0], {11}
    1938:	13490026 	movtne	r0, #36902	; 0x9026
    193c:	150d0000 	strne	r0, [sp, #-0]
    1940:	000c2700 	andeq	r2, ip, r0, lsl #14
    1944:	00340e00 	eorseq	r0, r4, r0, lsl #28
    1948:	0b3a0e03 	bleq	e8515c <__RAM_SIZE+0xd8515c>
    194c:	0b39053b 	bleq	e42e40 <__RAM_SIZE+0xd42e40>
    1950:	0a021349 	beq	8667c <__HEAP_SIZE+0x8567c>
    1954:	2e0f0000 	cdpcs	0, 0, cr0, cr15, cr0, {0}
    1958:	030c3f01 	movweq	r3, #52993	; 0xcf01
    195c:	3b0b3a0e 	blcc	2d019c <__RAM_SIZE+0x1d019c>
    1960:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    1964:	1113490c 	tstne	r3, ip, lsl #18
    1968:	40011201 	andmi	r1, r1, r1, lsl #4
    196c:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
    1970:	00001301 	andeq	r1, r0, r1, lsl #6
    1974:	03003410 	movweq	r3, #1040	; 0x410
    1978:	3b0b3a0e 	blcc	2d01b8 <__RAM_SIZE+0x1d01b8>
    197c:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    1980:	b7060213 	smladlt	r6, r3, r2, r0
    1984:	00000642 	andeq	r0, r0, r2, asr #12
    1988:	03003411 	movweq	r3, #1041	; 0x411
    198c:	3b0b3a0e 	blcc	2d01cc <__RAM_SIZE+0x1d01cc>
    1990:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    1994:	000b1c13 	andeq	r1, fp, r3, lsl ip
    1998:	002e1200 	eoreq	r1, lr, r0, lsl #4
    199c:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    19a0:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    19a4:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    19a8:	01120111 	tsteq	r2, r1, lsl r1
    19ac:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
    19b0:	1300000c 	movwne	r0, #12
    19b4:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 1904 <__HEAP_SIZE+0x904>
    19b8:	0b3a0e03 	bleq	e851cc <__RAM_SIZE+0xd851cc>
    19bc:	0b39053b 	bleq	e42eb0 <__RAM_SIZE+0xd42eb0>
    19c0:	13490c27 	movtne	r0, #39975	; 0x9c27
    19c4:	01120111 	tsteq	r2, r1, lsl r1
    19c8:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
    19cc:	0013010c 	andseq	r0, r3, ip, lsl #2
    19d0:	010b1400 	tsteq	fp, r0, lsl #8
    19d4:	00001301 	andeq	r1, r0, r1, lsl #6
    19d8:	03003415 	movweq	r3, #1045	; 0x415
    19dc:	3b0b3a0e 	blcc	2d021c <__RAM_SIZE+0x1d021c>
    19e0:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    19e4:	16000013 			; <UNDEFINED> instruction: 0x16000013
    19e8:	00018289 	andeq	r8, r1, r9, lsl #5
    19ec:	13310111 	teqne	r1, #1073741828	; 0x40000004
    19f0:	05170000 	ldreq	r0, [r7, #-0]
    19f4:	3a0e0300 	bcc	3825fc <__RAM_SIZE+0x2825fc>
    19f8:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    19fc:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    1a00:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
    1a04:	05180000 	ldreq	r0, [r8, #-0]
    1a08:	3a0e0300 	bcc	382610 <__RAM_SIZE+0x282610>
    1a0c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1a10:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    1a14:	1900000a 	stmdbne	r0, {r1, r3}
    1a18:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 1968 <__HEAP_SIZE+0x968>
    1a1c:	0b3a0e03 	bleq	e85230 <__RAM_SIZE+0xd85230>
    1a20:	0b39053b 	bleq	e42f14 <__RAM_SIZE+0xd42f14>
    1a24:	01110c27 	tsteq	r1, r7, lsr #24
    1a28:	06400112 			; <UNDEFINED> instruction: 0x06400112
    1a2c:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
    1a30:	1a000013 	bne	1a84 <__HEAP_SIZE+0xa84>
    1a34:	01018289 	smlabbeq	r1, r9, r2, r8
    1a38:	13310111 	teqne	r1, #1073741828	; 0x40000004
    1a3c:	8a1b0000 	bhi	6c1a44 <__RAM_SIZE+0x5c1a44>
    1a40:	02000182 	andeq	r0, r0, #-2147483616	; 0x80000020
    1a44:	0a42910a 	beq	10a5e74 <__RAM_SIZE+0xfa5e74>
    1a48:	2e1c0000 	cdpcs	0, 1, cr0, cr12, cr0, {0}
    1a4c:	3a0e0301 	bcc	382658 <__RAM_SIZE+0x282658>
    1a50:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1a54:	110c270b 	tstne	ip, fp, lsl #14
    1a58:	40011201 	andmi	r1, r1, r1, lsl #4
    1a5c:	0c429706 	mcrreq	7, 0, r9, r2, cr6
    1a60:	00001301 	andeq	r1, r0, r1, lsl #6
    1a64:	11010b1d 	tstne	r1, sp, lsl fp
    1a68:	01011201 	tsteq	r1, r1, lsl #4
    1a6c:	1e000013 	mcrne	0, 0, r0, cr0, cr3, {0}
    1a70:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 19c0 <__HEAP_SIZE+0x9c0>
    1a74:	40870c3c 	addmi	r0, r7, ip, lsr ip
    1a78:	3a0e030e 	bcc	3826b8 <__RAM_SIZE+0x2826b8>
    1a7c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1a80:	1f00000b 	svcne	0x0000000b
    1a84:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 19d4 <__HEAP_SIZE+0x9d4>
    1a88:	40870c3c 	addmi	r0, r7, ip, lsr ip
    1a8c:	3a0e030e 	bcc	3826cc <__RAM_SIZE+0x2826cc>
    1a90:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1a94:	0000000b 	andeq	r0, r0, fp
    1a98:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
    1a9c:	030b130e 	movweq	r1, #45838	; 0xb30e
    1aa0:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
    1aa4:	52011106 	andpl	r1, r1, #-2147483647	; 0x80000001
    1aa8:	00061001 	andeq	r1, r6, r1
    1aac:	00240200 	eoreq	r0, r4, r0, lsl #4
    1ab0:	0b3e0b0b 	bleq	f846e4 <__RAM_SIZE+0xe846e4>
    1ab4:	00000e03 	andeq	r0, r0, r3, lsl #28
    1ab8:	03001603 	movweq	r1, #1539	; 0x603
    1abc:	3b0b3a0e 	blcc	2d02fc <__RAM_SIZE+0x1d02fc>
    1ac0:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1ac4:	04000013 	streq	r0, [r0], #-19	; 0xffffffed
    1ac8:	0b0b0024 	bleq	2c1b60 <__RAM_SIZE+0x1c1b60>
    1acc:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
    1ad0:	2e050000 	cdpcs	0, 0, cr0, cr5, cr0, {0}
    1ad4:	030c3f00 	movweq	r3, #52992	; 0xcf00
    1ad8:	3b0b3a0e 	blcc	2d0318 <__RAM_SIZE+0x1d0318>
    1adc:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    1ae0:	1201110c 	andne	r1, r1, #12, 2
    1ae4:	970a4001 	strls	r4, [sl, -r1]
    1ae8:	00000c42 	andeq	r0, r0, r2, asr #24
    1aec:	3f012e06 	svccc	0x00012e06
    1af0:	3a0e030c 	bcc	382728 <__RAM_SIZE+0x282728>
    1af4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1af8:	110c270b 	tstne	ip, fp, lsl #14
    1afc:	40011201 	andmi	r1, r1, r1, lsl #4
    1b00:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
    1b04:	00001301 	andeq	r1, r0, r1, lsl #6
    1b08:	03000507 	movweq	r0, #1287	; 0x507
    1b0c:	3b0b3a0e 	blcc	2d034c <__RAM_SIZE+0x1d034c>
    1b10:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1b14:	000a0213 	andeq	r0, sl, r3, lsl r2
    1b18:	002e0800 	eoreq	r0, lr, r0, lsl #16
    1b1c:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    1b20:	0b3b0b3a 	bleq	ec4810 <__RAM_SIZE+0xdc4810>
    1b24:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    1b28:	01111349 	tsteq	r1, r9, asr #6
    1b2c:	0a400112 	beq	1001f7c <__RAM_SIZE+0xf01f7c>
    1b30:	000c4297 	muleq	ip, r7, r2
    1b34:	002e0900 	eoreq	r0, lr, r0, lsl #18
    1b38:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    1b3c:	0b3b0b3a 	bleq	ec482c <__RAM_SIZE+0xdc482c>
    1b40:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    1b44:	01120111 	tsteq	r2, r1, lsl r1
    1b48:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
    1b4c:	0000000c 	andeq	r0, r0, ip
    1b50:	10001101 	andne	r1, r0, r1, lsl #2
    1b54:	12011106 	andne	r1, r1, #-2147483647	; 0x80000001
    1b58:	1b0e0301 	blne	382764 <__RAM_SIZE+0x282764>
    1b5c:	130e250e 	movwne	r2, #58638	; 0xe50e
    1b60:	00000005 	andeq	r0, r0, r5
    1b64:	10001101 	andne	r1, r0, r1, lsl #2
    1b68:	12011106 	andne	r1, r1, #-2147483647	; 0x80000001
    1b6c:	1b0e0301 	blne	382778 <__RAM_SIZE+0x282778>
    1b70:	130e250e 	movwne	r2, #58638	; 0xe50e
    1b74:	00000005 	andeq	r0, r0, r5

Disassembly of section .debug_loc:

00000000 <.debug_loc>:
    __asm volatile ( "mrs %0, ipsr" : "=r" ( ulCurrentInterrupt )::"memory" );
       0:	10000964 	andne	r0, r0, r4, ror #18
    if( ulCurrentInterrupt == 0 )
       4:	10000966 	andne	r0, r0, r6, ror #18
        xReturn = pdFALSE;
       8:	007d0002 	rsbseq	r0, sp, r2
}
       c:	10000966 	andne	r0, r0, r6, ror #18
      10:	10000990 	mulne	r0, r0, r9
      14:	087d0002 	ldmdaeq	sp!, {r1}^
	...
      20:	00000001 	andeq	r0, r0, r1
      24:	09660000 	stmdbeq	r6!, {}^	; <UNPREDICTABLE>
      28:	097a1000 	ldmdbeq	sl!, {ip}^
      2c:	00021000 	andeq	r1, r2, r0
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
      30:	097a9f30 	ldmdbeq	sl!, {r4, r5, r8, r9, sl, fp, ip, pc}^
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
      34:	097e1000 	ldmdbeq	lr!, {ip}^
      38:	00011000 	andeq	r1, r1, r0
      3c:	00097e51 	andeq	r7, r9, r1, asr lr
      40:	00099010 	andeq	r9, r9, r0, lsl r0
        BaseType_t xReturn = pdFAIL;
      44:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
	...
            while( pxBlock != pxEnd )
      50:	10000800 	andne	r0, r0, r0, lsl #16
      54:	10000802 	andne	r0, r0, r2, lsl #16
                if( pxBlock->xBlockSize > xMaxSize )
      58:	007d0002 	rsbseq	r0, sp, r2
      5c:	10000802 	andne	r0, r0, r2, lsl #16
                if( pxBlock->xBlockSize < xMinSize )
      60:	10000804 	andne	r0, r0, r4, lsl #16
                    xMinSize = pxBlock->xBlockSize;
      64:	047d0002 	ldrbteq	r0, [sp], #-2
      68:	10000804 	andne	r0, r0, r4, lsl #16
      6c:	10000828 	andne	r0, r0, r8, lsr #16
      70:	107d0002 	rsbsne	r0, sp, r2
      74:	10000828 	andne	r0, r0, r8, lsr #16
      78:	1000082c 	andne	r0, r0, ip, lsr #16
      7c:	047d0002 	ldrbteq	r0, [sp], #-2
            prvUnlockQueue( pxQueue );
      80:	1000082c 	andne	r0, r0, ip, lsr #16
            ( void ) xTaskResumeAll();
      84:	10000844 	andne	r0, r0, r4, asr #16
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
      88:	107d0002 	rsbsne	r0, sp, r2
	...
        taskENTER_CRITICAL();
      94:	00000002 	andeq	r0, r0, r2
            if( uxSemaphoreCount > ( UBaseType_t ) 0 )
      98:	00000000 	andeq	r0, r0, r0
                if( xTicksToWait == ( TickType_t ) 0 )
      9c:	10000804 	andne	r0, r0, r4, lsl #16
      a0:	1000081a 	andne	r0, r0, sl, lsl r8
                else if( xEntryTimeSet == pdFALSE )
      a4:	9f310002 	svcls	0x00310002
        taskEXIT_CRITICAL();
      a8:	1000081a 	andne	r0, r0, sl, lsl r8
        vTaskSuspendAll();
      ac:	10000822 	andne	r0, r0, r2, lsr #16
        prvLockQueue( pxQueue );
      b0:	22500001 	subscs	r0, r0, #1
      b4:	25100008 	ldrcs	r0, [r0, #-8]
      b8:	01100008 	tsteq	r0, r8
      bc:	082c5100 	stmdaeq	ip!, {r8, ip, lr}
      c0:	082f1000 	stmdaeq	pc!, {ip}	; <UNPREDICTABLE>
      c4:	00011000 	andeq	r1, r1, r0
      c8:	00000050 	andeq	r0, r0, r0, asr r0
      cc:	00000000 	andeq	r0, r0, r0
        if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
      d0:	00094000 	andeq	r4, r9, r0
      d4:	00094210 	andeq	r4, r9, r0, lsl r2
      d8:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
      dc:	00094200 	andeq	r4, r9, r0, lsl #4
      e0:	00096410 	andeq	r6, r9, r0, lsl r4
                    if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
      e4:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
      e8:	00000008 	andeq	r0, r0, r8
	...
                prvUnlockQueue( pxQueue );
      f4:	00094000 	andeq	r4, r9, r0
      f8:	00094610 	andeq	r4, r9, r0, lsl r6
                if( xTaskResumeAll() == pdFALSE )
      fc:	50000110 	andpl	r0, r0, r0, lsl r1
     100:	10000946 	andne	r0, r0, r6, asr #18
                    taskYIELD_WITHIN_API();
     104:	10000964 	andne	r0, r0, r4, ror #18
                    if( xInheritanceOccurred != pdFALSE )
     108:	01f30004 	mvnseq	r0, r4
                return errQUEUE_EMPTY;
     10c:	00009f50 	andeq	r9, r0, r0, asr pc
                        taskENTER_CRITICAL();
     110:	00000000 	andeq	r0, r0, r0
                            uxHighestWaitingPriority = prvGetDisinheritPriorityAfterTimeout( pxQueue );
     114:	00010000 	andeq	r0, r1, r0
     118:	09420000 	stmdbeq	r2, {}^	; <UNPREDICTABLE>
                            vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
     11c:	09461000 	stmdbeq	r6, {ip}^
                        taskEXIT_CRITICAL();
     120:	00021000 	andeq	r1, r2, r0
     124:	09469f30 	stmdbeq	r6, {r4, r5, r8, r9, sl, fp, ip, pc}^
     128:	09641000 	stmdbeq	r4!, {ip}^
     12c:	00011000 	andeq	r1, r1, r0
     130:	00000054 	andeq	r0, r0, r4, asr r0
     134:	00000000 	andeq	r0, r0, r0
     138:	00092800 	andeq	r2, r9, r0, lsl #16
     13c:	00092a10 	andeq	r2, r9, r0, lsl sl
     140:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
     144:	00092a00 	andeq	r2, r9, r0, lsl #20
     148:	00094010 	andeq	r4, r9, r0, lsl r0
     14c:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
     150:	00000008 	andeq	r0, r0, r8
     154:	00000000 	andeq	r0, r0, r0
     158:	00091000 	andeq	r1, r9, r0
     15c:	00091210 	andeq	r1, r9, r0, lsl r2
     160:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
     164:	00091200 	andeq	r1, r9, r0, lsl #4
     168:	00092810 	andeq	r2, r9, r0, lsl r8
     16c:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
     170:	00000008 	andeq	r0, r0, r8
     174:	00000000 	andeq	r0, r0, r0
     178:	0008f800 	andeq	pc, r8, r0, lsl #16
     17c:	0008fa10 	andeq	pc, r8, r0, lsl sl	; <UNPREDICTABLE>
     180:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
     184:	0008fa00 	andeq	pc, r8, r0, lsl #20
     188:	00091010 	andeq	r1, r9, r0, lsl r0
     18c:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
     190:	00000008 	andeq	r0, r0, r8
     194:	00000000 	andeq	r0, r0, r0
     198:	0008e000 	andeq	lr, r8, r0
     19c:	0008e210 	andeq	lr, r8, r0, lsl r2
     1a0:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
     1a4:	0008e200 	andeq	lr, r8, r0, lsl #4
     1a8:	0008f810 	andeq	pc, r8, r0, lsl r8	; <UNPREDICTABLE>
     1ac:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
     1b0:	00000008 	andeq	r0, r0, r8
     1b4:	00000000 	andeq	r0, r0, r0
     1b8:	0008c800 	andeq	ip, r8, r0, lsl #16
     1bc:	0008ca10 	andeq	ip, r8, r0, lsl sl
     1c0:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
     1c4:	0008ca00 	andeq	ip, r8, r0, lsl #20
     1c8:	0008e010 	andeq	lr, r8, r0, lsl r0
     1cc:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
     1d0:	00000008 	andeq	r0, r0, r8
     1d4:	00000000 	andeq	r0, r0, r0
     1d8:	0008ac00 	andeq	sl, r8, r0, lsl #24
     1dc:	0008ae10 	andeq	sl, r8, r0, lsl lr
     1e0:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
     1e4:	0008ae00 	andeq	sl, r8, r0, lsl #28
     1e8:	0008c810 	andeq	ip, r8, r0, lsl r8
     1ec:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
     1f0:	00000008 	andeq	r0, r0, r8
     1f4:	00000000 	andeq	r0, r0, r0
     1f8:	00084400 	andeq	r4, r8, r0, lsl #8
     1fc:	00084610 	andeq	r4, r8, r0, lsl r6
     200:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
     204:	00084600 	andeq	r4, r8, r0, lsl #12
     208:	00084810 	andeq	r4, r8, r0, lsl r8
     20c:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
     210:	0008480c 	andeq	r4, r8, ip, lsl #16
     214:	00089a10 	andeq	r9, r8, r0, lsl sl
     218:	7d000310 	stcvc	3, cr0, [r0, #-64]	; 0xffffffc0
     21c:	089a0290 	ldmeq	sl, {r4, r7, r9}
     220:	08ac1000 	stmiaeq	ip!, {ip}
     224:	00021000 	andeq	r1, r2, r0
     228:	00000c7d 	andeq	r0, r0, sp, ror ip
	...
     238:	1000085a 	andne	r0, r0, sl, asr r8
     23c:	1000085d 	andne	r0, r0, sp, asr r8
     240:	5d500001 	ldclpl	0, cr0, [r0, #-4]
     244:	76100008 	ldrvc	r0, [r0], -r8
     248:	01100008 	tsteq	r0, r8
     24c:	08785400 	ldmdaeq	r8!, {sl, ip, lr}^
     250:	08821000 	stmeq	r2, {ip}
     254:	00011000 	andeq	r1, r1, r0
     258:	00000054 	andeq	r0, r0, r4, asr r0
	...
     264:	00086000 	andeq	r6, r8, r0
     268:	00086610 	andeq	r6, r8, r0, lsl r6
     26c:	50000110 	andpl	r0, r0, r0, lsl r1
     270:	10000866 	andne	r0, r0, r6, ror #16
     274:	10000869 	andne	r0, r0, r9, ror #16
     278:	00530001 	subseq	r0, r3, r1
	...
     288:	6a000000 	bvs	290 <__STACKSEAL_SIZE+0x290>
     28c:	70100008 	andsvc	r0, r0, r8
     290:	01100008 	tsteq	r0, r8
     294:	08705000 	ldmdaeq	r0!, {ip, lr}^
     298:	08781000 	ldmdaeq	r8!, {ip}^
     29c:	00011000 	andeq	r1, r1, r0
     2a0:	00087855 	andeq	r7, r8, r5, asr r8
     2a4:	00087c10 	andeq	r7, r8, r0, lsl ip
     2a8:	50000110 	andpl	r0, r0, r0, lsl r1
     2ac:	1000087c 	andne	r0, r0, ip, ror r8
     2b0:	1000089c 	mulne	r0, ip, r8
     2b4:	00550001 	subseq	r0, r5, r1
     2b8:	00000000 	andeq	r0, r0, r0
     2bc:	02000000 	andeq	r0, r0, #0
     2c0:	74000000 	strvc	r0, [r0], #-0
     2c4:	78100008 	ldmdavc	r0, {r3}
     2c8:	02100008 	andseq	r0, r0, #8
     2cc:	829f3000 	addshi	r3, pc, #0
     2d0:	98100008 	ldmdals	r0, {r3}
     2d4:	01100008 	tsteq	r0, r8
     2d8:	00005400 	andeq	r5, r0, r0, lsl #8
	...
     2e8:	00020000 	andeq	r0, r2, r0
     2ec:	0000007d 	andeq	r0, r0, sp, ror r0
     2f0:	00000000 	andeq	r0, r0, r0
     2f4:	00020000 	andeq	r0, r2, r0
     2f8:	0000087d 	andeq	r0, r0, sp, ror r8
	...
     308:	00020000 	andeq	r0, r2, r0
     30c:	0000007d 	andeq	r0, r0, sp, ror r0
     310:	00000000 	andeq	r0, r0, r0
     314:	00020000 	andeq	r0, r2, r0
     318:	0000087d 	andeq	r0, r0, sp, ror r8
	...
     328:	00020000 	andeq	r0, r2, r0
     32c:	0000007d 	andeq	r0, r0, sp, ror r0
     330:	00000000 	andeq	r0, r0, r0
     334:	00020000 	andeq	r0, r2, r0
     338:	0000087d 	andeq	r0, r0, sp, ror r8
     33c:	00000000 	andeq	r0, r0, r0
     340:	00020000 	andeq	r0, r2, r0
     344:	00000c7d 	andeq	r0, r0, sp, ror ip
     348:	00000000 	andeq	r0, r0, r0
     34c:	00020000 	andeq	r0, r2, r0
     350:	0000287d 	andeq	r2, r0, sp, ror r8
     354:	00000000 	andeq	r0, r0, r0
     358:	00020000 	andeq	r0, r2, r0
     35c:	00000c7d 	andeq	r0, r0, sp, ror ip
     360:	00000000 	andeq	r0, r0, r0
     364:	00020000 	andeq	r0, r2, r0
     368:	0000087d 	andeq	r0, r0, sp, ror r8
     36c:	00000000 	andeq	r0, r0, r0
     370:	00020000 	andeq	r0, r2, r0
     374:	0000007d 	andeq	r0, r0, sp, ror r0
	...
     38c:	00500001 	subseq	r0, r0, r1
     390:	00000000 	andeq	r0, r0, r0
     394:	02000000 	andeq	r0, r0, #0
     398:	00549100 	subseq	r9, r4, r0, lsl #2
     39c:	00000000 	andeq	r0, r0, r0
     3a0:	04000000 	streq	r0, [r0], #-0
     3a4:	5001f300 	andpl	pc, r1, r0, lsl #6
     3a8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
     3bc:	51000100 	mrspl	r0, (UNDEF: 16)
	...
     3c8:	01f30004 	mvnseq	r0, r4
     3cc:	00009f51 	andeq	r9, r0, r1, asr pc
	...
     3e0:	00500001 	subseq	r0, r0, r1
	...
     3f0:	02000000 	andeq	r0, r0, #0
     3f4:	00007d00 	andeq	r7, r0, r0, lsl #26
     3f8:	00000000 	andeq	r0, r0, r0
     3fc:	02000000 	andeq	r0, r0, #0
     400:	00047d00 	andeq	r7, r4, r0, lsl #26
     404:	00000000 	andeq	r0, r0, r0
     408:	02000000 	andeq	r0, r0, #0
     40c:	00107d00 	andseq	r7, r0, r0, lsl #26
     410:	00000000 	andeq	r0, r0, r0
     414:	02000000 	andeq	r0, r0, #0
     418:	00047d00 	andeq	r7, r4, r0, lsl #26
	...
     430:	50000100 	andpl	r0, r0, r0, lsl #2
	...
     43c:	00510001 	subseq	r0, r1, r1
     440:	00000000 	andeq	r0, r0, r0
     444:	04000000 	streq	r0, [r0], #-0
     448:	5001f300 	andpl	pc, r1, r0, lsl #6
     44c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
     460:	01000000 	mrseq	r0, (UNDEF: 0)
     464:	00005100 	andeq	r5, r0, r0, lsl #2
     468:	00000000 	andeq	r0, r0, r0
     46c:	00010000 	andeq	r0, r1, r0
     470:	00000052 	andeq	r0, r0, r2, asr r0
     474:	00000000 	andeq	r0, r0, r0
     478:	f3000400 	vshl.u8	d0, d0, d0
     47c:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
     494:	52000100 	andpl	r0, r0, #0, 2
	...
     4a0:	00530001 	subseq	r0, r3, r1
     4a4:	00000000 	andeq	r0, r0, r0
     4a8:	04000000 	streq	r0, [r0], #-0
     4ac:	5201f300 	andpl	pc, r1, #0, 6
     4b0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
     4c0:	01000000 	mrseq	r0, (UNDEF: 0)
     4c4:	00005300 	andeq	r5, r0, r0, lsl #6
	...
     4d4:	00020000 	andeq	r0, r2, r0
     4d8:	0000007d 	andeq	r0, r0, sp, ror r0
     4dc:	00000000 	andeq	r0, r0, r0
     4e0:	00020000 	andeq	r0, r2, r0
     4e4:	0000047d 	andeq	r0, r0, sp, ror r4
     4e8:	00000000 	andeq	r0, r0, r0
     4ec:	00020000 	andeq	r0, r2, r0
     4f0:	0000187d 	andeq	r1, r0, sp, ror r8
     4f4:	00000000 	andeq	r0, r0, r0
     4f8:	00020000 	andeq	r0, r2, r0
     4fc:	0000047d 	andeq	r0, r0, sp, ror r4
	...
     514:	00500001 	subseq	r0, r0, r1
     518:	00000000 	andeq	r0, r0, r0
     51c:	01000000 	mrseq	r0, (UNDEF: 0)
     520:	00005300 	andeq	r5, r0, r0, lsl #6
     524:	00000000 	andeq	r0, r0, r0
     528:	00040000 	andeq	r0, r4, r0
     52c:	9f5001f3 	svcls	0x005001f3
	...
     540:	00010000 	andeq	r0, r1, r0
     544:	00000051 	andeq	r0, r0, r1, asr r0
	...
     554:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
     560:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     564:	00000008 	andeq	r0, r0, r8
     568:	00000000 	andeq	r0, r0, r0
     56c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     570:	00000010 	andeq	r0, r0, r0, lsl r0
     574:	00000000 	andeq	r0, r0, r0
     578:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     57c:	00000020 	andeq	r0, r0, r0, lsr #32
     580:	00000000 	andeq	r0, r0, r0
     584:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     588:	00000010 	andeq	r0, r0, r0, lsl r0
     58c:	00000000 	andeq	r0, r0, r0
     590:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     594:	00000008 	andeq	r0, r0, r8
     598:	00000000 	andeq	r0, r0, r0
     59c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
     5b4:	01000000 	mrseq	r0, (UNDEF: 0)
     5b8:	00005000 	andeq	r5, r0, r0
     5bc:	00000000 	andeq	r0, r0, r0
     5c0:	00010000 	andeq	r0, r1, r0
     5c4:	00000051 	andeq	r0, r0, r1, asr r0
     5c8:	00000000 	andeq	r0, r0, r0
     5cc:	f3000400 	vshl.u8	d0, d0, d0
     5d0:	009f5001 	addseq	r5, pc, r1
	...
     5e8:	51000100 	mrspl	r0, (UNDEF: 16)
	...
     5f4:	00520001 	subseq	r0, r2, r1
     5f8:	00000000 	andeq	r0, r0, r0
     5fc:	04000000 	streq	r0, [r0], #-0
     600:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
     604:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
     614:	01000000 	mrseq	r0, (UNDEF: 0)
     618:	00005000 	andeq	r5, r0, r0
	...
     628:	00020000 	andeq	r0, r2, r0
     62c:	0000007d 	andeq	r0, r0, sp, ror r0
     630:	00000000 	andeq	r0, r0, r0
     634:	00020000 	andeq	r0, r2, r0
     638:	00000c7d 	andeq	r0, r0, sp, ror ip
     63c:	00000000 	andeq	r0, r0, r0
     640:	00020000 	andeq	r0, r2, r0
     644:	0000107d 	andeq	r1, r0, sp, ror r0
     648:	00000000 	andeq	r0, r0, r0
     64c:	00020000 	andeq	r0, r2, r0
     650:	0000207d 	andeq	r2, r0, sp, ror r0
     654:	00000000 	andeq	r0, r0, r0
     658:	00020000 	andeq	r0, r2, r0
     65c:	0000107d 	andeq	r1, r0, sp, ror r0
     660:	00000000 	andeq	r0, r0, r0
     664:	00020000 	andeq	r0, r2, r0
     668:	00000c7d 	andeq	r0, r0, sp, ror ip
     66c:	00000000 	andeq	r0, r0, r0
     670:	00020000 	andeq	r0, r2, r0
     674:	0000007d 	andeq	r0, r0, sp, ror r0
	...
     68c:	00500001 	subseq	r0, r0, r1
     690:	00000000 	andeq	r0, r0, r0
     694:	01000000 	mrseq	r0, (UNDEF: 0)
     698:	00005100 	andeq	r5, r0, r0, lsl #2
     69c:	00000000 	andeq	r0, r0, r0
     6a0:	00040000 	andeq	r0, r4, r0
     6a4:	9f5001f3 	svcls	0x005001f3
	...
     6b8:	00010000 	andeq	r0, r1, r0
     6bc:	00000050 	andeq	r0, r0, r0, asr r0
     6c0:	00000000 	andeq	r0, r0, r0
     6c4:	001b0c00 	andseq	r0, fp, r0, lsl #24
     6c8:	001b0e10 	andseq	r0, fp, r0, lsl lr
     6cc:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
     6d0:	001b0e00 	andseq	r0, fp, r0, lsl #28
     6d4:	001b1010 	andseq	r1, fp, r0, lsl r0
     6d8:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
     6dc:	001b1010 	andseq	r1, fp, r0, lsl r0
     6e0:	001b1210 	andseq	r1, fp, r0, lsl r2
     6e4:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
     6e8:	001b1214 	andseq	r1, fp, r4, lsl r2
     6ec:	001b2a10 	andseq	r2, fp, r0, lsl sl
     6f0:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
     6f4:	001b2a28 	andseq	r2, fp, r8, lsr #20
     6f8:	001b2e10 	andseq	r2, fp, r0, lsl lr
     6fc:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
     700:	001b2e14 	andseq	r2, fp, r4, lsl lr
     704:	001b3010 	andseq	r3, fp, r0, lsl r0
     708:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
     70c:	001b3010 	andseq	r3, fp, r0, lsl r0
     710:	001b3810 	andseq	r3, fp, r0, lsl r8
     714:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
	...
     720:	28000000 	stmdacs	r0, {}	; <UNPREDICTABLE>
     724:	3810001b 	ldmdacc	r0, {r0, r1, r3, r4}
     728:	0110001b 	tsteq	r0, fp, lsl r0
     72c:	00005000 	andeq	r5, r0, r0
     730:	00000000 	andeq	r0, r0, r0
     734:	14800000 	strne	r0, [r0], #0
     738:	14841000 	strne	r1, [r4], #0
     73c:	00021000 	andeq	r1, r2, r0
     740:	1484007d 	strne	r0, [r4], #125	; 0x7d
     744:	14861000 	strne	r1, [r6], #0
     748:	00021000 	andeq	r1, r2, r0
     74c:	1486247d 	strne	r2, [r6], #1149	; 0x47d
     750:	1af61000 	bne	ffd84758 <__StackTop+0xc7c84758>
     754:	00031000 	andeq	r1, r3, r0
     758:	f600e07d 			; <UNDEFINED> instruction: 0xf600e07d
     75c:	0010001a 	andseq	r0, r0, sl, lsl r0
     760:	0210001b 	andseq	r0, r0, #27
     764:	00247d00 	eoreq	r7, r4, r0, lsl #26
	...
     774:	80000000 	andhi	r0, r0, r0
     778:	94100014 	ldrls	r0, [r0], #-20	; 0xffffffec
     77c:	01100014 	tsteq	r0, r4, lsl r0
     780:	14965000 	ldrne	r5, [r6], #0
     784:	1adc1000 	bne	ff70478c <__StackTop+0xc760478c>
     788:	00011000 	andeq	r1, r1, r0
     78c:	001adc57 	andseq	sp, sl, r7, asr ip
     790:	001ae010 	andseq	lr, sl, r0, lsl r0
     794:	50000110 	andpl	r0, r0, r0, lsl r1
     798:	10001ae0 	andne	r1, r0, r0, ror #21
     79c:	10001afa 	strdne	r1, [r0], -sl
     7a0:	00570001 	subseq	r0, r7, r1
	...
     7b4:	00148000 	andseq	r8, r4, r0
     7b8:	00149610 	andseq	r9, r4, r0, lsl r6
     7bc:	51000110 	tstpl	r0, r0, lsl r1
     7c0:	10001496 	mulne	r0, r6, r4
     7c4:	10001adc 	ldrdne	r1, [r0], -ip
     7c8:	dc580001 	mrrcle	0, 0, r0, r8, cr1
     7cc:	e010001a 	ands	r0, r0, sl, lsl r0
     7d0:	0110001a 	tsteq	r0, sl, lsl r0
     7d4:	1ae05100 	bne	ff814bdc <__StackTop+0xc7714bdc>
     7d8:	1afa1000 	bne	ffe847e0 <__StackTop+0xc7d847e0>
     7dc:	00011000 	andeq	r1, r1, r0
     7e0:	001afa58 	andseq	pc, sl, r8, asr sl	; <UNPREDICTABLE>
     7e4:	001b0010 	andseq	r0, fp, r0, lsl r0
     7e8:	f3000410 	vqshl.u8	d0, d0, d0
     7ec:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
     808:	00148000 	andseq	r8, r4, r0
     80c:	00149610 	andseq	r9, r4, r0, lsl r6
     810:	52000110 	andpl	r0, r0, #16, 2
     814:	10001496 	mulne	r0, r6, r4
     818:	100019fe 	strdne	r1, [r0], -lr
     81c:	fe560001 	cdp2	0, 5, cr0, cr6, cr1, {0}
     820:	00100019 	andseq	r0, r0, r9, lsl r0
     824:	0110001a 	tsteq	r0, sl, lsl r0
     828:	1a005b00 	bne	17430 <__HEAP_SIZE+0x16430>
     82c:	1a2a1000 	bne	a84834 <__RAM_SIZE+0x984834>
     830:	00011000 	andeq	r1, r1, r0
     834:	001a2a56 	andseq	r2, sl, r6, asr sl
     838:	001a5410 	andseq	r5, sl, r0, lsl r4
     83c:	5b000110 	blpl	c84 <__Vectors_Size+0x4c4>
     840:	10001a54 	andne	r1, r0, r4, asr sl
     844:	10001adc 	ldrdne	r1, [r0], -ip
     848:	dc560001 	mrrcle	0, 0, r0, r6, cr1
     84c:	e010001a 	ands	r0, r0, sl, lsl r0
     850:	0110001a 	tsteq	r0, sl, lsl r0
     854:	1ae05200 	bne	ff81505c <__StackTop+0xc771505c>
     858:	1afa1000 	bne	ffe84860 <__StackTop+0xc7d84860>
     85c:	00011000 	andeq	r1, r1, r0
     860:	001afa56 	andseq	pc, sl, r6, asr sl	; <UNPREDICTABLE>
     864:	001b0010 	andseq	r0, fp, r0, lsl r0
     868:	f3000410 	vqshl.u8	d0, d0, d0
     86c:	009f5201 	addseq	r5, pc, r1, lsl #4
	...
     878:	80000000 	andhi	r0, r0, r0
     87c:	96100014 			; <UNDEFINED> instruction: 0x96100014
     880:	01100014 	tsteq	r0, r4, lsl r0
     884:	1adc5300 	bne	ff71548c <__StackTop+0xc761548c>
     888:	1ae01000 	bne	ff804890 <__StackTop+0xc7704890>
     88c:	00011000 	andeq	r1, r1, r0
     890:	00000053 	andeq	r0, r0, r3, asr r0
     894:	00000000 	andeq	r0, r0, r0
     898:	00000100 	andeq	r0, r0, r0, lsl #2
	...
     8b0:	0014bc00 	andseq	fp, r4, r0, lsl #24
     8b4:	0014be10 	andseq	fp, r4, r0, lsl lr
     8b8:	30000210 	andcc	r0, r0, r0, lsl r2
     8bc:	0014be9f 	mulseq	r4, pc, lr	; <UNPREDICTABLE>
     8c0:	0015bc10 	andseq	fp, r5, r0, lsl ip
     8c4:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
     8c8:	100015bc 			; <UNDEFINED> instruction: 0x100015bc
     8cc:	100015ce 	andne	r1, r0, lr, asr #11
     8d0:	ce510001 	cdpgt	0, 5, cr0, cr1, cr1, {0}
     8d4:	d8100015 	ldmdale	r0, {r0, r2, r4}
     8d8:	01100015 	tsteq	r0, r5, lsl r0
     8dc:	15d85500 	ldrbne	r5, [r8, #1280]	; 0x500
     8e0:	15ea1000 	strbne	r1, [sl, #0]!
     8e4:	00011000 	andeq	r1, r1, r0
     8e8:	0015ea51 	andseq	lr, r5, r1, asr sl
     8ec:	00179810 	andseq	r9, r7, r0, lsl r8
     8f0:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
     8f4:	100017a0 	andne	r1, r0, r0, lsr #15
     8f8:	100017bc 			; <UNDEFINED> instruction: 0x100017bc
     8fc:	bc550001 	mrrclt	0, 0, r0, r5, cr1
     900:	db100017 	blle	400964 <__RAM_SIZE+0x300964>
     904:	02100017 	andseq	r0, r0, #23
     908:	e0409100 	sub	r9, r0, r0, lsl #2
     90c:	44100017 	ldrmi	r0, [r0], #-23	; 0xffffffe9
     910:	01100019 	tsteq	r0, r9, lsl r0
     914:	19b25500 	ldmibne	r2!, {r8, sl, ip, lr}
     918:	1a0c1000 	bne	304920 <__RAM_SIZE+0x204920>
     91c:	00011000 	andeq	r1, r1, r0
     920:	001a7c55 	andseq	r7, sl, r5, asr ip
     924:	001ab410 	andseq	fp, sl, r0, lsl r4
     928:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
     92c:	10001ac8 	andne	r1, r0, r8, asr #21
     930:	10001aca 	andne	r1, r0, sl, asr #21
     934:	00550001 	subseq	r0, r5, r1
     938:	00000000 	andeq	r0, r0, r0
     93c:	02000000 	andeq	r0, r0, #0
	...
     950:	00000202 	andeq	r0, r0, r2, lsl #4
     954:	0014e000 	andseq	lr, r4, r0
     958:	0014f210 	andseq	pc, r4, r0, lsl r2	; <UNPREDICTABLE>
     95c:	30000210 	andcc	r0, r0, r0, lsl r2
     960:	0014f29f 	mulseq	r4, pc, r2	; <UNPREDICTABLE>
     964:	00151f10 	andseq	r1, r5, r0, lsl pc
     968:	91000210 	tstls	r0, r0, lsl r2
     96c:	00155248 	andseq	r5, r5, r8, asr #4
     970:	00155a10 	andseq	r5, r5, r0, lsl sl
     974:	30000210 	andcc	r0, r0, r0, lsl r2
     978:	00155a9f 	mulseq	r5, pc, sl	; <UNPREDICTABLE>
     97c:	00155c10 	andseq	r5, r5, r0, lsl ip
     980:	50000110 	andpl	r0, r0, r0, lsl r1
     984:	1000155c 	andne	r1, r0, ip, asr r5
     988:	1000156a 	andne	r1, r0, sl, ror #10
     98c:	9f300002 	svcls	0x00300002
     990:	1000156a 	andne	r1, r0, sl, ror #10
     994:	10001572 	andne	r1, r0, r2, ror r5
     998:	48910002 	ldmmi	r1, {r1}
     99c:	10001572 	andne	r1, r0, r2, ror r5
     9a0:	1000157a 	andne	r1, r0, sl, ror r5
     9a4:	9f300002 	svcls	0x00300002
     9a8:	1000157a 	andne	r1, r0, sl, ror r5
     9ac:	1000157c 	andne	r1, r0, ip, ror r5
     9b0:	7c530001 	mrrcvc	0, 0, r0, r3, cr1
     9b4:	7c100015 	ldcvc	0, cr0, [r0], {21}
     9b8:	0210001a 	andseq	r0, r0, #26
     9bc:	7c489100 	stfvcp	f1, [r8], {-0}
     9c0:	b210001a 	andslt	r0, r0, #26
     9c4:	0210001a 	andseq	r0, r0, #26
     9c8:	b29f3800 	addslt	r3, pc, #0, 16
     9cc:	dc10001a 	ldcle	0, cr0, [r0], {26}
     9d0:	0210001a 	andseq	r0, r0, #26
     9d4:	00489100 	subeq	r9, r8, r0, lsl #2
     9d8:	00000000 	andeq	r0, r0, r0
     9dc:	01000000 	mrseq	r0, (UNDEF: 0)
	...
     9fc:	0014f200 	andseq	pc, r4, r0, lsl #4
     a00:	0014fe10 	andseq	pc, r4, r0, lsl lr	; <UNPREDICTABLE>
     a04:	30000210 	andcc	r0, r0, r0, lsl r2
     a08:	0014fe9f 	mulseq	r4, pc, lr	; <UNPREDICTABLE>
     a0c:	00151f10 	andseq	r1, r5, r0, lsl pc
     a10:	5b000110 	blpl	e58 <__Vectors_Size+0x698>
     a14:	1000157c 	andne	r1, r0, ip, ror r5
     a18:	100015a2 	andne	r1, r0, r2, lsr #11
     a1c:	9f300002 	svcls	0x00300002
     a20:	100015a2 	andne	r1, r0, r2, lsr #11
     a24:	100015a4 	andne	r1, r0, r4, lsr #11
     a28:	a4500001 	ldrbge	r0, [r0], #-1
     a2c:	b0100015 	andslt	r0, r0, r5, lsl r0
     a30:	02100015 	andseq	r0, r0, #21
     a34:	b09f3000 	addslt	r3, pc, r0
     a38:	4a100015 	bmi	400a94 <__RAM_SIZE+0x300a94>
     a3c:	01100019 	tsteq	r0, r9, lsl r0
     a40:	19865b00 	stmibne	r6, {r8, r9, fp, ip, lr}
     a44:	198c1000 	stmibne	ip, {ip}
     a48:	00011000 	andeq	r1, r1, r0
     a4c:	0019b25b 	andseq	fp, r9, fp, asr r2
     a50:	0019fc10 	andseq	pc, r9, r0, lsl ip	; <UNPREDICTABLE>
     a54:	5b000110 	blpl	e9c <__Vectors_Size+0x6dc>
     a58:	100019fc 	strdne	r1, [r0], -ip
     a5c:	10001a00 	andne	r1, r0, r0, lsl #20
     a60:	00540001 	subseq	r0, r4, r1
     a64:	2810001a 	ldmdacs	r0, {r1, r3, r4}
     a68:	0110001a 	tsteq	r0, sl, lsl r0
     a6c:	1a285b00 	bne	a17674 <__RAM_SIZE+0x917674>
     a70:	1a2c1000 	bne	b04a78 <__RAM_SIZE+0xa04a78>
     a74:	00011000 	andeq	r1, r1, r0
     a78:	001a2c54 	andseq	r2, sl, r4, asr ip
     a7c:	001a2e10 	andseq	r2, sl, r0, lsl lr
     a80:	53000110 	movwpl	r0, #272	; 0x110
     a84:	10001a2e 	andne	r1, r0, lr, lsr #20
     a88:	10001a48 	andne	r1, r0, r8, asr #20
     a8c:	48540001 	ldmdami	r4, {r0}^
     a90:	4c10001a 	ldcmi	0, cr0, [r0], {26}
     a94:	0110001a 	tsteq	r0, sl, lsl r0
     a98:	1a7c5300 	bne	1f156a0 <__RAM_SIZE+0x1e156a0>
     a9c:	1adc1000 	bne	ff704aa4 <__StackTop+0xc7604aa4>
     aa0:	00011000 	andeq	r1, r1, r0
     aa4:	0000005b 	andeq	r0, r0, fp, asr r0
     aa8:	00000000 	andeq	r0, r0, r0
     aac:	01000000 	mrseq	r0, (UNDEF: 0)
     ab0:	01000100 	mrseq	r0, (UNDEF: 16)
     ab4:	01000100 	mrseq	r0, (UNDEF: 16)
     ab8:	e0000000 	and	r0, r0, r0
     abc:	1f100014 	svcne	0x00100014
     ac0:	02100015 	andseq	r0, r0, #21
     ac4:	289f3000 	ldmcs	pc, {ip, sp}	; <UNPREDICTABLE>
     ac8:	2a100015 	bcs	400b24 <__RAM_SIZE+0x300b24>
     acc:	02100015 	andseq	r0, r0, #21
     ad0:	329f3100 	addscc	r3, pc, #0, 2
     ad4:	34100015 	ldrcc	r0, [r0], #-21	; 0xffffffeb
     ad8:	02100015 	andseq	r0, r0, #21
     adc:	3c9f3100 	ldfccs	f3, [pc], {0}
     ae0:	3e100015 	mrccc	0, 0, r0, cr0, cr5, {0}
     ae4:	02100015 	andseq	r0, r0, #21
     ae8:	469f3100 	ldrmi	r3, [pc], r0, lsl #2
     aec:	48100015 	ldmdami	r0, {r0, r2, r4}
     af0:	02100015 	andseq	r0, r0, #21
     af4:	509f3100 	addspl	r3, pc, r0, lsl #2
     af8:	52100015 	andspl	r0, r0, #21
     afc:	02100015 	andseq	r0, r0, #21
     b00:	529f3100 	addspl	r3, pc, #0, 2
     b04:	dc100015 	ldcle	0, cr0, [r0], {21}
     b08:	0210001a 	andseq	r0, r0, #26
     b0c:	009f3000 	addseq	r3, pc, r0
     b10:	00000000 	andeq	r0, r0, r0
     b14:	02000000 	andeq	r0, r0, #0
	...
     b74:	8c000000 	stchi	0, cr0, [r0], {-0}
     b78:	96100014 			; <UNDEFINED> instruction: 0x96100014
     b7c:	02100014 	andseq	r0, r0, #20
     b80:	969f3000 	ldrls	r3, [pc], r0
     b84:	a6100014 			; <UNDEFINED> instruction: 0xa6100014
     b88:	01100014 	tsteq	r0, r4, lsl r0
     b8c:	14a65400 	strtne	r5, [r6], #1024	; 0x400
     b90:	14b81000 	ldrtne	r1, [r8], #0
     b94:	00011000 	andeq	r1, r1, r0
     b98:	0014b855 	andseq	fp, r4, r5, asr r8
     b9c:	00174210 	andseq	r4, r7, r0, lsl r2
     ba0:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
     ba4:	10001742 	andne	r1, r0, r2, asr #14
     ba8:	10001744 	andne	r1, r0, r4, asr #14
     bac:	44500001 	ldrbmi	r0, [r0], #-1
     bb0:	98100017 	ldmdals	r0, {r0, r1, r2, r4}
     bb4:	01100017 	tsteq	r0, r7, lsl r0
     bb8:	17985400 	ldrne	r5, [r8, r0, lsl #8]
     bbc:	17a01000 	strne	r1, [r0, r0]!
     bc0:	00011000 	andeq	r1, r1, r0
     bc4:	0017a050 	andseq	sl, r7, r0, asr r0
     bc8:	0017de10 	andseq	sp, r7, r0, lsl lr
     bcc:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
     bd0:	100017de 	ldrdne	r1, [r0], -lr
     bd4:	100017e0 	andne	r1, r0, r0, ror #15
     bd8:	e0500001 	subs	r0, r0, r1
     bdc:	18100017 	ldmdane	r0, {r0, r1, r2, r4}
     be0:	01100018 	tsteq	r0, r8, lsl r0
     be4:	18185400 	ldmdane	r8, {sl, ip, lr}
     be8:	181a1000 	ldmdane	sl, {ip}
     bec:	00011000 	andeq	r1, r1, r0
     bf0:	00181a50 	andseq	r1, r8, r0, asr sl
     bf4:	00186c10 	andseq	r6, r8, r0, lsl ip
     bf8:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
     bfc:	1000186c 	andne	r1, r0, ip, ror #16
     c00:	1000186e 	andne	r1, r0, lr, ror #16
     c04:	6e500001 	cdpvs	0, 5, cr0, cr0, cr1, {0}
     c08:	96100018 			; <UNDEFINED> instruction: 0x96100018
     c0c:	01100018 	tsteq	r0, r8, lsl r0
     c10:	18965400 	ldmne	r6, {sl, ip, lr}
     c14:	18981000 	ldmne	r8, {ip}
     c18:	00011000 	andeq	r1, r1, r0
     c1c:	00189850 	andseq	r9, r8, r0, asr r8
     c20:	0018e410 	andseq	lr, r8, r0, lsl r4
     c24:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
     c28:	100018e4 	andne	r1, r0, r4, ror #17
     c2c:	100018ec 	andne	r1, r0, ip, ror #17
     c30:	ec500001 	mrrc	0, 0, r0, r0, cr1	; <UNPREDICTABLE>
     c34:	38100018 	ldmdacc	r0, {r3, r4}
     c38:	01100019 	tsteq	r0, r9, lsl r0
     c3c:	19385400 	ldmdbne	r8!, {sl, ip, lr}
     c40:	19401000 	stmdbne	r0, {ip}^
     c44:	00011000 	andeq	r1, r1, r0
     c48:	00194050 	andseq	r4, r9, r0, asr r0
     c4c:	00195410 	andseq	r5, r9, r0, lsl r4
     c50:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
     c54:	10001954 	andne	r1, r0, r4, asr r9
     c58:	1000196a 	andne	r1, r0, sl, ror #18
     c5c:	6a5a0001 	bvs	1680c68 <__RAM_SIZE+0x1580c68>
     c60:	6e100019 	mrcvs	0, 0, r0, cr0, cr9, {0}
     c64:	01100019 	tsteq	r0, r9, lsl r0
     c68:	196e5200 	stmdbne	lr!, {r9, ip, lr}^
     c6c:	197a1000 	ldmdbne	sl!, {ip}^
     c70:	00011000 	andeq	r1, r1, r0
     c74:	00197a5a 	andseq	r7, r9, sl, asr sl
     c78:	00198610 	andseq	r8, r9, r0, lsl r6
     c7c:	52000110 	andpl	r0, r0, #16, 2
     c80:	10001986 	andne	r1, r0, r6, lsl #19
     c84:	10001990 	mulne	r0, r0, r9
     c88:	90540001 	subsls	r0, r4, r1
     c8c:	96100019 			; <UNDEFINED> instruction: 0x96100019
     c90:	01100019 	tsteq	r0, r9, lsl r0
     c94:	19965a00 	ldmibne	r6, {r9, fp, ip, lr}
     c98:	199a1000 	ldmibne	sl, {ip}
     c9c:	00011000 	andeq	r1, r1, r0
     ca0:	00199a52 	andseq	r9, r9, r2, asr sl
     ca4:	0019a610 	andseq	sl, r9, r0, lsl r6
     ca8:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
     cac:	100019a6 	andne	r1, r0, r6, lsr #19
     cb0:	100019b2 			; <UNDEFINED> instruction: 0x100019b2
     cb4:	b2520001 	subslt	r0, r2, #1
     cb8:	fa100019 	blx	400d24 <__RAM_SIZE+0x300d24>
     cbc:	01100019 	tsteq	r0, r9, lsl r0
     cc0:	19fa5400 	ldmibne	sl!, {sl, ip, lr}^
     cc4:	1a001000 	bne	4ccc <__HEAP_SIZE+0x3ccc>
     cc8:	00011000 	andeq	r1, r1, r0
     ccc:	001a0052 	andseq	r0, sl, r2, asr r0
     cd0:	001a0810 	andseq	r0, sl, r0, lsl r8
     cd4:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
     cd8:	10001a08 	andne	r1, r0, r8, lsl #20
     cdc:	10001a10 	andne	r1, r0, r0, lsl sl
     ce0:	10520001 	subsne	r0, r2, r1
     ce4:	1c10001a 	ldcne	0, cr0, [r0], {26}
     ce8:	0110001a 	tsteq	r0, sl, lsl r0
     cec:	1a1c5900 	bne	7170f4 <__RAM_SIZE+0x6170f4>
     cf0:	1a341000 	bne	d04cf8 <__RAM_SIZE+0xc04cf8>
     cf4:	00011000 	andeq	r1, r1, r0
     cf8:	001a3452 	andseq	r3, sl, r2, asr r4
     cfc:	001a3c10 	andseq	r3, sl, r0, lsl ip
     d00:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
     d04:	10001a3c 	andne	r1, r0, ip, lsr sl
     d08:	10001a64 	andne	r1, r0, r4, ror #20
     d0c:	64520001 	ldrbvs	r0, [r2], #-1
     d10:	7010001a 	andsvc	r0, r0, sl, lsl r0
     d14:	0110001a 	tsteq	r0, sl, lsl r0
     d18:	1a705500 	bne	1c16120 <__RAM_SIZE+0x1b16120>
     d1c:	1a7c1000 	bne	1f04d24 <__RAM_SIZE+0x1e04d24>
     d20:	00011000 	andeq	r1, r1, r0
     d24:	001a7c52 	andseq	r7, sl, r2, asr ip
     d28:	001aaa10 	andseq	sl, sl, r0, lsl sl
     d2c:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
     d30:	10001aaa 	andne	r1, r0, sl, lsr #21
     d34:	10001ab2 			; <UNDEFINED> instruction: 0x10001ab2
     d38:	b2500001 	subslt	r0, r0, #1
     d3c:	b410001a 	ldrlt	r0, [r0], #-26	; 0xffffffe6
     d40:	0110001a 	tsteq	r0, sl, lsl r0
     d44:	1ab45400 	bne	fed15d4c <__StackTop+0xc6c15d4c>
     d48:	1ac81000 	bne	ff204d50 <__StackTop+0xc7104d50>
     d4c:	00011000 	andeq	r1, r1, r0
     d50:	001ac855 	andseq	ip, sl, r5, asr r8
     d54:	001aca10 	andseq	ip, sl, r0, lsl sl
     d58:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
     d5c:	10001aca 	andne	r1, r0, sl, asr #21
     d60:	10001adc 	ldrdne	r1, [r0], -ip
     d64:	dc550001 	mrrcle	0, 0, r0, r5, cr1
     d68:	e010001a 	ands	r0, r0, sl, lsl r0
     d6c:	0210001a 	andseq	r0, r0, #26
     d70:	e09f3000 	adds	r3, pc, r0
     d74:	fa10001a 	blx	400de4 <__RAM_SIZE+0x300de4>
     d78:	0110001a 	tsteq	r0, sl, lsl r0
     d7c:	1afa5400 	bne	ffe95d84 <__StackTop+0xc7d95d84>
     d80:	1b001000 	blne	4d88 <__HEAP_SIZE+0x3d88>
     d84:	00011000 	andeq	r1, r1, r0
     d88:	00000050 	andeq	r0, r0, r0, asr r0
     d8c:	00000000 	andeq	r0, r0, r0
     d90:	00000100 	andeq	r0, r0, r0, lsl #2
	...
     dac:	0016d600 	andseq	sp, r6, r0, lsl #12
     db0:	0016de10 	andseq	sp, r6, r0, lsl lr
     db4:	3a000210 	bcc	15fc <__HEAP_SIZE+0x5fc>
     db8:	0016e09f 	mulseq	r6, pc, r0	; <UNPREDICTABLE>
     dbc:	00173010 	andseq	r3, r7, r0, lsl r0
     dc0:	53000110 	movwpl	r0, #272	; 0x110
     dc4:	10001730 	andne	r1, r0, r0, lsr r7
     dc8:	1000173f 	andne	r1, r0, pc, lsr r7
     dcc:	a8910003 	ldmge	r1, {r0, r1}
     dd0:	0017507f 	andseq	r5, r7, pc, ror r0
     dd4:	00178c10 	andseq	r8, r7, r0, lsl ip
     dd8:	53000110 	movwpl	r0, #272	; 0x110
     ddc:	1000178c 	andne	r1, r0, ip, lsl #15
     de0:	10001795 	mulne	r0, r5, r7
     de4:	a8910003 	ldmge	r1, {r0, r1}
     de8:	0017a07f 	andseq	sl, r7, pc, ror r0
     dec:	0017c610 	andseq	ip, r7, r0, lsl r6
     df0:	53000110 	movwpl	r0, #272	; 0x110
     df4:	100017c6 	andne	r1, r0, r6, asr #15
     df8:	100017db 	ldrdne	r1, [r0], -fp
     dfc:	b0910003 	addslt	r0, r1, r3
     e00:	0017e07f 	andseq	lr, r7, pc, ror r0
     e04:	00180c10 	andseq	r0, r8, r0, lsl ip
     e08:	53000110 	movwpl	r0, #272	; 0x110
     e0c:	1000180c 	andne	r1, r0, ip, lsl #16
     e10:	10001815 	andne	r1, r0, r5, lsl r8
     e14:	a8910003 	ldmge	r1, {r0, r1}
     e18:	00181a7f 	andseq	r1, r8, pc, ror sl
     e1c:	00186010 	andseq	r6, r8, r0, lsl r0
     e20:	53000110 	movwpl	r0, #272	; 0x110
     e24:	10001860 	andne	r1, r0, r0, ror #16
     e28:	10001869 	andne	r1, r0, r9, ror #16
     e2c:	b0910003 	addslt	r0, r1, r3
     e30:	00186e7f 	andseq	r6, r8, pc, ror lr
     e34:	00188210 	andseq	r8, r8, r0, lsl r2
     e38:	53000110 	movwpl	r0, #272	; 0x110
     e3c:	10001882 	andne	r1, r0, r2, lsl #17
     e40:	10001893 	mulne	r0, r3, r8
     e44:	a8910003 	ldmge	r1, {r0, r1}
     e48:	0018987f 	andseq	r9, r8, pc, ror r8
     e4c:	0018b210 	andseq	fp, r8, r0, lsl r2
     e50:	53000110 	movwpl	r0, #272	; 0x110
	...
     e5c:	17700000 	ldrbne	r0, [r0, -r0]!
     e60:	17861000 	strne	r1, [r6, r0]
     e64:	00011000 	andeq	r1, r1, r0
     e68:	00000052 	andeq	r0, r0, r2, asr r0
	...
     e74:	00172200 	andseq	r2, r7, r0, lsl #4
     e78:	00173810 	andseq	r3, r7, r0, lsl r8
     e7c:	52000110 	andpl	r0, r0, #16, 2
     e80:	10001738 	andne	r1, r0, r8, lsr r7
     e84:	1000173f 	andne	r1, r0, pc, lsr r7
     e88:	007d0002 	rsbseq	r0, sp, r2
	...
     e94:	00000001 	andeq	r0, r0, r1
	...
     ea8:	10001940 	andne	r1, r0, r0, asr #18
     eac:	1000194a 	andne	r1, r0, sl, asr #18
     eb0:	9f310002 	svcls	0x00310002
     eb4:	1000194a 	andne	r1, r0, sl, asr #18
     eb8:	10001960 	andne	r1, r0, r0, ror #18
     ebc:	6a590001 	bvs	1640ec8 <__RAM_SIZE+0x1540ec8>
     ec0:	7a100019 	bvc	400f2c <__RAM_SIZE+0x300f2c>
     ec4:	01100019 	tsteq	r0, r9, lsl r0
     ec8:	197a5900 	ldmdbne	sl!, {r8, fp, ip, lr}^
     ecc:	197e1000 	ldmdbne	lr!, {ip}^
     ed0:	00011000 	andeq	r1, r1, r0
     ed4:	00197e53 	andseq	r7, r9, r3, asr lr
     ed8:	00198610 	andseq	r8, r9, r0, lsl r6
     edc:	59000110 	stmdbpl	r0, {r4, r8}
     ee0:	10001986 	andne	r1, r0, r6, lsl #19
     ee4:	10001990 	mulne	r0, r0, r9
     ee8:	9f310002 	svcls	0x00310002
     eec:	10001990 	mulne	r0, r0, r9
     ef0:	10001998 	mulne	r0, r8, r9
     ef4:	98590001 	ldmdals	r9, {r0}^
     ef8:	a6100019 			; <UNDEFINED> instruction: 0xa6100019
     efc:	01100019 	tsteq	r0, r9, lsl r0
     f00:	19a65400 	stmibne	r6!, {sl, ip, lr}
     f04:	19aa1000 	stmibne	sl!, {ip}
     f08:	00011000 	andeq	r1, r1, r0
     f0c:	0019aa59 	andseq	sl, r9, r9, asr sl
     f10:	0019b210 	andseq	fp, r9, r0, lsl r2
     f14:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
	...
     f24:	10001a2c 	andne	r1, r0, ip, lsr #20
     f28:	10001a54 	andne	r1, r0, r4, asr sl
     f2c:	5c5a0001 	mrrcpl	0, 0, r0, sl, cr1
     f30:	6010001a 	andsvs	r0, r0, sl, lsl r0
     f34:	0110001a 	tsteq	r0, sl, lsl r0
     f38:	00005a00 	andeq	r5, r0, r0, lsl #20
	...
     f58:	100019e0 	andne	r1, r0, r0, ror #19
     f5c:	10001a00 	andne	r1, r0, r0, lsl #20
     f60:	04590001 	ldrbeq	r0, [r9], #-1
     f64:	0c10001a 	ldceq	0, cr0, [r0], {26}
     f68:	0110001a 	tsteq	r0, sl, lsl r0
     f6c:	1a0c5900 	bne	317374 <__RAM_SIZE+0x217374>
     f70:	1a1c1000 	bne	704f78 <__RAM_SIZE+0x604f78>
     f74:	00011000 	andeq	r1, r1, r0
     f78:	001a1c55 	andseq	r1, sl, r5, asr ip
     f7c:	001a1e10 	andseq	r1, sl, r0, lsl lr
     f80:	53000110 	movwpl	r0, #272	; 0x110
     f84:	10001a1e 	andne	r1, r0, lr, lsl sl
     f88:	10001a2c 	andne	r1, r0, ip, lsr #20
     f8c:	2c550001 	mrrccs	0, 0, r0, r5, cr1
     f90:	5410001a 	ldrpl	r0, [r0], #-26	; 0xffffffe6
     f94:	0110001a 	tsteq	r0, sl, lsl r0
     f98:	1a5c5900 	bne	17173a0 <__RAM_SIZE+0x16173a0>
     f9c:	1a621000 	bne	1884fa4 <__RAM_SIZE+0x1784fa4>
     fa0:	00011000 	andeq	r1, r1, r0
     fa4:	001a6259 	andseq	r6, sl, r9, asr r2
     fa8:	001a7010 	andseq	r7, sl, r0, lsl r0
     fac:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
     fb0:	10001a70 	andne	r1, r0, r0, ror sl
     fb4:	10001a74 	andne	r1, r0, r4, ror sl
     fb8:	74590001 	ldrbvc	r0, [r9], #-1
     fbc:	7a10001a 	bvc	40102c <__RAM_SIZE+0x30102c>
     fc0:	0110001a 	tsteq	r0, sl, lsl r0
     fc4:	1a7a5400 	bne	1e95fcc <__RAM_SIZE+0x1d95fcc>
     fc8:	1a7c1000 	bne	1f04fd0 <__RAM_SIZE+0x1e04fd0>
     fcc:	00031000 	andeq	r1, r3, r0
     fd0:	009f0179 	addseq	r0, pc, r9, ror r1	; <UNPREDICTABLE>
	...
     fe0:	0019ca00 	andseq	ip, r9, r0, lsl #20
     fe4:	0019d010 	andseq	sp, r9, r0, lsl r0
     fe8:	52000110 	andpl	r0, r0, #16, 2
     fec:	100019d0 	ldrdne	r1, [r0], -r0
     ff0:	100019d8 	ldrdne	r1, [r0], -r8
     ff4:	d8530001 	ldmdale	r3, {r0}^
     ff8:	dc100019 	ldcle	0, cr0, [r0], {25}
     ffc:	01100019 	tsteq	r0, r9, lsl r0
    1000:	00005200 	andeq	r5, r0, r0, lsl #4
	...
    100c:	100019ca 	andne	r1, r0, sl, asr #19
    1010:	100019e0 	andne	r1, r0, r0, ror #19
    1014:	00590001 	subseq	r0, r9, r1
    1018:	00000000 	andeq	r0, r0, r0
    101c:	01000000 	mrseq	r0, (UNDEF: 0)
    1020:	001a8000 	andseq	r8, sl, r0
    1024:	001ab210 	andseq	fp, sl, r0, lsl r2
    1028:	30000210 	andcc	r0, r0, r0, lsl r2
    102c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    1030:	00000000 	andeq	r0, r0, r0
    1034:	e0000300 	and	r0, r0, r0, lsl #6
    1038:	e6100014 			; <UNDEFINED> instruction: 0xe6100014
    103c:	01100014 	tsteq	r0, r4, lsl r0
    1040:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    104c:	10001586 	andne	r1, r0, r6, lsl #11
    1050:	1000158c 	andne	r1, r0, ip, lsl #11
    1054:	00520001 	subseq	r0, r2, r1
    1058:	00000000 	andeq	r0, r0, r0
    105c:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
    1060:	fc10000c 	ldc2	0, cr0, [r0], {12}
    1064:	0210000c 	andseq	r0, r0, #12
    1068:	fc007d00 	vdot.bf16	d7, d0, d0
    106c:	0010000c 	andseq	r0, r0, ip
    1070:	0210000d 	andseq	r0, r0, #13
    1074:	00247d00 	eoreq	r7, r4, r0, lsl #26
    1078:	0210000d 	andseq	r0, r0, #13
    107c:	0210000d 	andseq	r0, r0, #13
    1080:	022c7d00 	eoreq	r7, ip, #0, 26
    1084:	4c10000d 	ldcmi	0, cr0, [r0], {13}
    1088:	0310000f 	tsteq	r0, #15
    108c:	00f07d00 	rscseq	r7, r0, r0, lsl #26
    1090:	10000f4c 	andne	r0, r0, ip, asr #30
    1094:	10000f50 	andne	r0, r0, r0, asr pc
    1098:	2c7d0002 	ldclcs	0, cr0, [sp], #-8
    109c:	10000f50 	andne	r0, r0, r0, asr pc
    10a0:	10000f54 	andne	r0, r0, r4, asr pc
    10a4:	247d0002 	ldrbtcs	r0, [sp], #-2
    10a8:	10000f54 	andne	r0, r0, r4, asr pc
    10ac:	100010e2 	andne	r1, r0, r2, ror #1
    10b0:	f07d0003 			; <UNDEFINED> instruction: 0xf07d0003
	...
    10c0:	000cf800 	andeq	pc, ip, r0, lsl #16
    10c4:	000d1010 	andeq	r1, sp, r0, lsl r0
    10c8:	50000110 	andpl	r0, r0, r0, lsl r1
    10cc:	10000d10 	andne	r0, r0, r0, lsl sp
    10d0:	100010e2 	andne	r1, r0, r2, ror #1
    10d4:	005a0001 	subseq	r0, sl, r1
	...
    10e0:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
    10e4:	1210000c 	andsne	r0, r0, #12
    10e8:	0110000d 	tsteq	r0, sp
    10ec:	0d125100 	ldfeqs	f5, [r2, #-0]
    10f0:	10e21000 	rscne	r1, r2, r0
    10f4:	00011000 	andeq	r1, r1, r0
    10f8:	00000054 	andeq	r0, r0, r4, asr r0
	...
    1114:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
    1118:	0e10000c 	cdpeq	0, 1, cr0, cr0, cr12, {0}
    111c:	0110000d 	tsteq	r0, sp
    1120:	0d0e5200 	sfmeq	f5, 4, [lr, #-0]
    1124:	0f4a1000 	svceq	0x004a1000
    1128:	00011000 	andeq	r1, r1, r0
    112c:	000f545b 	andeq	r5, pc, fp, asr r4	; <UNPREDICTABLE>
    1130:	00105c10 	andseq	r5, r0, r0, lsl ip
    1134:	5b000110 	blpl	157c <__HEAP_SIZE+0x57c>
    1138:	1000105c 	andne	r1, r0, ip, asr r0
    113c:	10001072 	andne	r1, r0, r2, ror r0
    1140:	72500001 	subsvc	r0, r0, #1
    1144:	a6100010 			; <UNDEFINED> instruction: 0xa6100010
    1148:	01100010 	tsteq	r0, r0, lsl r0
    114c:	10a65800 	adcne	r5, r6, r0, lsl #16
    1150:	10b41000 	adcsne	r1, r4, r0
    1154:	00011000 	andeq	r1, r1, r0
    1158:	0010b450 	andseq	fp, r0, r0, asr r4
    115c:	0010c410 	andseq	ip, r0, r0, lsl r4
    1160:	5b000110 	blpl	15a8 <__HEAP_SIZE+0x5a8>
    1164:	100010c4 	andne	r1, r0, r4, asr #1
    1168:	100010ca 	andne	r1, r0, sl, asr #1
    116c:	ca500001 	bgt	1401178 <__RAM_SIZE+0x1301178>
    1170:	cc100010 	ldcgt	0, cr0, [r0], {16}
    1174:	01100010 	tsteq	r0, r0, lsl r0
    1178:	10cc5200 	sbcne	r5, ip, r0, lsl #4
    117c:	10d61000 	sbcsne	r1, r6, r0
    1180:	00011000 	andeq	r1, r1, r0
    1184:	0010d656 	andseq	sp, r0, r6, asr r6
    1188:	0010e210 	andseq	lr, r0, r0, lsl r2
    118c:	52000110 	andpl	r0, r0, #16, 2
	...
    119c:	10000cf8 	strdne	r0, [r0], -r8
    11a0:	10000d15 	andne	r0, r0, r5, lsl sp
    11a4:	15530001 	ldrbne	r0, [r3, #-1]
    11a8:	e210000d 	ands	r0, r0, #13
    11ac:	01100010 	tsteq	r0, r0, lsl r0
    11b0:	00005500 	andeq	r5, r0, r0, lsl #10
	...
    11c4:	0cf80000 	ldcleq	0, cr0, [r8]
    11c8:	0d601000 	stcleq	0, cr1, [r0, #-0]
    11cc:	00021000 	andeq	r1, r2, r0
    11d0:	0d600091 	stcleq	0, cr0, [r0, #-580]!	; 0xfffffdbc
    11d4:	0f2a1000 	svceq	0x002a1000
    11d8:	00031000 	andeq	r1, r3, r0
    11dc:	2a7fa891 	bcs	1feb428 <__RAM_SIZE+0x1eeb428>
    11e0:	4a10000f 	bmi	401224 <__RAM_SIZE+0x301224>
    11e4:	0210000f 	andseq	r0, r0, #15
    11e8:	54009100 	strpl	r9, [r0], #-256	; 0xffffff00
    11ec:	6810000f 	ldmdavs	r0, {r0, r1, r2, r3}
    11f0:	0210000f 	andseq	r0, r0, #15
    11f4:	68009100 	stmdavs	r0, {r8, ip, pc}
    11f8:	3810000f 	ldmdacc	r0, {r0, r1, r2, r3}
    11fc:	03100010 	tsteq	r0, #16
    1200:	7fa89100 	svcvc	0x00a89100
    1204:	100010b4 	strhne	r1, [r0], -r4
    1208:	100010c2 	andne	r1, r0, r2, asr #1
    120c:	a8910003 	ldmge	r1, {r0, r1}
    1210:	0000007f 	andeq	r0, r0, pc, ror r0
	...
    1224:	000cf800 	andeq	pc, ip, r0, lsl #16
    1228:	000d6e10 	andeq	r6, sp, r0, lsl lr
    122c:	91000210 	tstls	r0, r0, lsl r2
    1230:	000d6e08 	andeq	r6, sp, r8, lsl #28
    1234:	000f2810 	andeq	r2, pc, r0, lsl r8	; <UNPREDICTABLE>
    1238:	91000210 	tstls	r0, r0, lsl r2
    123c:	000f2808 	andeq	r2, pc, r8, lsl #16
    1240:	000f2a10 	andeq	r2, pc, r0, lsl sl	; <UNPREDICTABLE>
    1244:	53000110 	movwpl	r0, #272	; 0x110
    1248:	10000f2a 	andne	r0, r0, sl, lsr #30
    124c:	10000f9c 	mulne	r0, ip, pc	; <UNPREDICTABLE>
    1250:	08910002 	ldmeq	r1, {r1}
    1254:	10000f9c 	mulne	r0, ip, pc	; <UNPREDICTABLE>
    1258:	10001004 	andne	r1, r0, r4
    125c:	04530001 	ldrbeq	r0, [r3], #-1
    1260:	e2100010 	ands	r0, r0, #16
    1264:	02100010 	andseq	r0, r0, #16
    1268:	00089100 	andeq	r9, r8, r0, lsl #2
	...
    1274:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
    1278:	5410000c 	ldrpl	r0, [r0], #-12
    127c:	0210000f 	andseq	r0, r0, #15
    1280:	540c9100 	strpl	r9, [ip], #-256	; 0xffffff00
    1284:	e210000f 	ands	r0, r0, #15
    1288:	02100010 	andseq	r0, r0, #16
    128c:	000c9100 	andeq	r9, ip, r0, lsl #2
	...
    129c:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
    12a0:	5410000c 	ldrpl	r0, [r0], #-12
    12a4:	0210000f 	andseq	r0, r0, #15
    12a8:	54109100 	ldrpl	r9, [r0], #-256	; 0xffffff00
    12ac:	7a10000f 	bvc	4012f0 <__RAM_SIZE+0x3012f0>
    12b0:	0210000f 	andseq	r0, r0, #15
    12b4:	7a109100 	bvc	4256bc <__RAM_SIZE+0x3256bc>
    12b8:	7e10000f 	cdpvc	0, 1, cr0, cr0, cr15, {0}
    12bc:	0110000f 	tsteq	r0, pc
    12c0:	0f7e5300 	svceq	0x007e5300
    12c4:	10e21000 	rscne	r1, r2, r0
    12c8:	00021000 	andeq	r1, r2, r0
    12cc:	00001091 	muleq	r0, r1, r0
    12d0:	00000000 	andeq	r0, r0, r0
    12d4:	00010000 	andeq	r0, r1, r0
    12d8:	0d460000 	stcleq	0, cr0, [r6, #-0]
    12dc:	0f2a1000 	svceq	0x002a1000
    12e0:	00121000 	andseq	r1, r2, r0
    12e4:	08f60091 	ldmeq	r6!, {r0, r4, r7}^
    12e8:	0829f429 	stmdaeq	r9!, {r0, r3, r5, sl, ip, sp, lr, pc}
	...
    12f4:	0f549f2d 	svceq	0x00549f2d
    12f8:	10e21000 	rscne	r1, r2, r0
    12fc:	00121000 	andseq	r1, r2, r0
    1300:	08f60091 	ldmeq	r6!, {r0, r4, r7}^
    1304:	0829f429 	stmdaeq	r9!, {r0, r3, r5, sl, ip, sp, lr, pc}
	...
    1310:	00009f2d 	andeq	r9, r0, sp, lsr #30
	...
    131c:	0f4a0001 	svceq	0x004a0001
    1320:	0f501000 	svceq	0x00501000
    1324:	00081000 	andeq	r1, r8, r0
    1328:	04935090 	ldreq	r5, [r3], #144	; 0x90
    132c:	04935190 	ldreq	r5, [r3], #400	; 0x190
    1330:	10001018 	andne	r1, r0, r8, lsl r0
    1334:	100010e2 	andne	r1, r0, r2, ror #1
    1338:	50900008 	addspl	r0, r0, r8
    133c:	51900493 			; <UNDEFINED> instruction: 0x51900493
    1340:	00000493 	muleq	r0, r3, r4
	...
    1354:	0d780000 	ldcleq	0, cr0, [r8, #-0]
    1358:	0d8a1000 	stceq	0, cr1, [sl]
    135c:	00041000 	andeq	r1, r4, r0
    1360:	9f788170 	svcls	0x00788170
    1364:	10000d8a 	andne	r0, r0, sl, lsl #27
    1368:	10000d8d 	andne	r0, r0, sp, lsl #27
    136c:	ee500001 	cdp	0, 5, cr0, cr0, cr1, {0}
    1370:	f610000d 			; <UNDEFINED> instruction: 0xf610000d
    1374:	0110000d 	tsteq	r0, sp
    1378:	0df65000 	ldcleq	0, cr5, [r6]
    137c:	0e301000 	cdpeq	0, 3, cr1, cr0, cr0, {0}
    1380:	00011000 	andeq	r1, r1, r0
    1384:	000e3057 	andeq	r3, lr, r7, asr r0
    1388:	000eec10 	andeq	lr, lr, r0, lsl ip
    138c:	77000410 	smladvc	r0, r0, r4, r0
    1390:	6a9f7881 	bvs	fe7df59c <__StackTop+0xc66df59c>
    1394:	6c10000f 	ldcvs	0, cr0, [r0], {15}
    1398:	0410000f 	ldreq	r0, [r0], #-15
    139c:	78817700 	stmvc	r1, {r8, r9, sl, ip, sp, lr}
    13a0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    13ac:	02000000 	andeq	r0, r0, #0
    13b0:	ce000000 	cdpgt	0, 0, cr0, cr0, cr0, {0}
    13b4:	d110000d 	tstle	r0, sp
    13b8:	0110000d 	tsteq	r0, sp
    13bc:	0dd15000 	ldcleq	0, cr5, [r1]
    13c0:	0f241000 	svceq	0x00241000
    13c4:	00011000 	andeq	r1, r1, r0
    13c8:	000f6a56 	andeq	r6, pc, r6, asr sl	; <UNPREDICTABLE>
    13cc:	000f7210 	andeq	r7, pc, r0, lsl r2	; <UNPREDICTABLE>
    13d0:	56000110 			; <UNDEFINED> instruction: 0x56000110
    13d4:	10000f7a 	andne	r0, r0, sl, ror pc
    13d8:	10000f7e 	andne	r0, r0, lr, ror pc
    13dc:	9f300002 	svcls	0x00300002
    13e0:	10000f7e 	andne	r0, r0, lr, ror pc
    13e4:	100010ca 	andne	r1, r0, sl, asr #1
    13e8:	00560001 	subseq	r0, r6, r1
	...
    13f4:	000e2000 	andeq	r2, lr, r0
    13f8:	000e6010 	andeq	r6, lr, r0, lsl r0
    13fc:	58000610 	stmdapl	r0, {r4, r9, sl}
    1400:	93590493 	cmpls	r9, #-1828716544	; 0x93000000
    1404:	00000004 	andeq	r0, r0, r4
	...
    1410:	2c000000 	stccs	0, cr0, [r0], {-0}
    1414:	4610000e 	ldrmi	r0, [r0], -lr
    1418:	0610000e 	ldreq	r0, [r0], -lr
    141c:	04935000 	ldreq	r5, [r3], #0
    1420:	46049351 			; <UNDEFINED> instruction: 0x46049351
    1424:	2a10000e 	bcs	401464 <__RAM_SIZE+0x301464>
    1428:	0310000f 	tsteq	r0, #15
    142c:	7fb89100 	svcvc	0x00b89100
    1430:	10000f6a 	andne	r0, r0, sl, ror #30
    1434:	100010e2 	andne	r1, r0, r2, ror #1
    1438:	b8910003 	ldmlt	r1, {r0, r1}
    143c:	0000007f 	andeq	r0, r0, pc, ror r0
	...
    1448:	00000101 	andeq	r0, r0, r1, lsl #2
    144c:	00000000 	andeq	r0, r0, r0
    1450:	000eec00 	andeq	lr, lr, r0, lsl #24
    1454:	000f2a10 	andeq	r2, pc, r0, lsl sl	; <UNPREDICTABLE>
    1458:	57000110 	smladpl	r0, r0, r1, r0
    145c:	10000f6e 	andne	r0, r0, lr, ror #30
    1460:	10000f7a 	andne	r0, r0, sl, ror pc
    1464:	7a570001 	bvc	15c1470 <__RAM_SIZE+0x14c1470>
    1468:	7e10000f 	cdpvc	0, 1, cr0, cr0, cr15, {0}
    146c:	0210000f 	andseq	r0, r0, #15
    1470:	7e9f3000 	cdpvc	0, 9, cr3, cr15, cr0, {0}
    1474:	8a10000f 	bhi	4014b8 <__RAM_SIZE+0x3014b8>
    1478:	01100010 	tsteq	r0, r0, lsl r0
    147c:	108a5700 	addne	r5, sl, r0, lsl #14
    1480:	10b21000 	adcsne	r1, r2, r0
    1484:	00031000 	andeq	r1, r3, r0
    1488:	b49f0177 	ldrlt	r0, [pc], #375	; 1490 <__HEAP_SIZE+0x490>
    148c:	ca100010 	bgt	4014d4 <__RAM_SIZE+0x3014d4>
    1490:	01100010 	tsteq	r0, r0, lsl r0
    1494:	00005700 	andeq	r5, r0, r0, lsl #14
    1498:	00000000 	andeq	r0, r0, r0
    149c:	00010000 	andeq	r0, r1, r0
	...
    14a8:	10000f7e 	andne	r0, r0, lr, ror pc
    14ac:	10000f88 	andne	r0, r0, r8, lsl #31
    14b0:	0c910002 	ldceq	0, cr0, [r1], {2}
    14b4:	10000f88 	andne	r0, r0, r8, lsl #31
    14b8:	10000f8a 	andne	r0, r0, sl, lsl #31
    14bc:	04580001 	ldrbeq	r0, [r8], #-1
    14c0:	08100010 	ldmdaeq	r0, {r4}
    14c4:	01100010 	tsteq	r0, r0, lsl r0
    14c8:	10085300 	andne	r5, r8, r0, lsl #6
    14cc:	10721000 	rsbsne	r1, r2, r0
    14d0:	00011000 	andeq	r1, r1, r0
    14d4:	0010b458 	andseq	fp, r0, r8, asr r4
    14d8:	0010ca10 	andseq	ip, r0, r0, lsl sl
    14dc:	58000110 	stmdapl	r0, {r4, r8}
	...
    14e8:	10280001 	eorne	r0, r8, r1
    14ec:	10e21000 	rscne	r1, r2, r0
    14f0:	00011000 	andeq	r1, r1, r0
    14f4:	0000005b 	andeq	r0, r0, fp, asr r0
    14f8:	00000000 	andeq	r0, r0, r0
    14fc:	0010e800 	andseq	lr, r0, r0, lsl #16
    1500:	0010ec10 	andseq	lr, r0, r0, lsl ip
    1504:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    1508:	0010ec00 	andseq	lr, r0, r0, lsl #24
    150c:	0010f010 	andseq	pc, r0, r0, lsl r0	; <UNPREDICTABLE>
    1510:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    1514:	0010f024 	andseq	pc, r0, r4, lsr #32
    1518:	0010f210 	andseq	pc, r0, r0, lsl r2	; <UNPREDICTABLE>
    151c:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    1520:	0010f22c 	andseq	pc, r0, ip, lsr #4
    1524:	00140c10 	andseq	r0, r4, r0, lsl ip
    1528:	7d000310 	stcvc	3, cr0, [r0, #-64]	; 0xffffffc0
    152c:	140c0180 	strne	r0, [ip], #-384	; 0xfffffe80
    1530:	14101000 	ldrne	r1, [r0], #-0
    1534:	00021000 	andeq	r1, r2, r0
    1538:	14102c7d 	ldrne	r2, [r0], #-3197	; 0xfffff383
    153c:	14141000 	ldrne	r1, [r4], #-0
    1540:	00021000 	andeq	r1, r2, r0
    1544:	1414247d 	ldrne	r2, [r4], #-1149	; 0xfffffb83
    1548:	147e1000 	ldrbtne	r1, [lr], #-0
    154c:	00031000 	andeq	r1, r3, r0
    1550:	0001807d 	andeq	r8, r1, sp, ror r0
	...
    155c:	e8000000 	stmda	r0, {}	; <UNPREDICTABLE>
    1560:	06100010 			; <UNDEFINED> instruction: 0x06100010
    1564:	01100011 	tsteq	r0, r1, lsl r0
    1568:	11065000 	mrsne	r5, (UNDEF: 6)
    156c:	147e1000 	ldrbtne	r1, [lr], #-0
    1570:	00031000 	andeq	r1, r3, r0
    1574:	007f9c91 			; <UNDEFINED> instruction: 0x007f9c91
	...
    1580:	e8000000 	stmda	r0, {}	; <UNPREDICTABLE>
    1584:	08100010 	ldmdaeq	r0, {r4}
    1588:	01100011 	tsteq	r0, r1, lsl r0
    158c:	11085100 	mrsne	r5, (UNDEF: 24)
    1590:	147e1000 	ldrbtne	r1, [lr], #-0
    1594:	00031000 	andeq	r1, r3, r0
    1598:	007fa891 			; <UNDEFINED> instruction: 0x007fa891
	...
    15a4:	e8000000 	stmda	r0, {}	; <UNPREDICTABLE>
    15a8:	02100010 	andseq	r0, r0, #16
    15ac:	01100011 	tsteq	r0, r1, lsl r0
    15b0:	11025200 	mrsne	r5, R10_usr
    15b4:	147e1000 	ldrbtne	r1, [lr], #-0
    15b8:	00011000 	andeq	r1, r1, r0
    15bc:	0000005a 	andeq	r0, r0, sl, asr r0
	...
    15c8:	0010e800 	andseq	lr, r0, r0, lsl #16
    15cc:	00110410 	andseq	r0, r1, r0, lsl r4
    15d0:	53000110 	movwpl	r0, #272	; 0x110
    15d4:	10001104 	andne	r1, r0, r4, lsl #2
    15d8:	1000147e 	andne	r1, r0, lr, ror r4
    15dc:	005b0001 	subseq	r0, fp, r1
	...
    15f0:	0010e800 	andseq	lr, r0, r0, lsl #16
    15f4:	00116e10 	andseq	r6, r1, r0, lsl lr
    15f8:	91000210 	tstls	r0, r0, lsl r2
    15fc:	00116e00 	andseq	r6, r1, r0, lsl #28
    1600:	00119210 	andseq	r9, r1, r0, lsl r2
    1604:	58000610 	stmdapl	r0, {r4, r9, sl}
    1608:	93590493 	cmpls	r9, #-1828716544	; 0x93000000
    160c:	00119204 	andseq	r9, r1, r4, lsl #4
    1610:	00122a10 	andseq	r2, r2, r0, lsl sl
    1614:	91000210 	tstls	r0, r0, lsl r2
    1618:	00122a00 	andseq	r2, r2, r0, lsl #20
    161c:	0012c210 	andseq	ip, r2, r0, lsl r2
    1620:	58000610 	stmdapl	r0, {r4, r9, sl}
    1624:	93590493 	cmpls	r9, #-1828716544	; 0x93000000
    1628:	0012e604 	andseq	lr, r2, r4, lsl #12
    162c:	00136210 	andseq	r6, r3, r0, lsl r2
    1630:	58000610 	stmdapl	r0, {r4, r9, sl}
    1634:	93590493 	cmpls	r9, #-1828716544	; 0x93000000
    1638:	00000004 	andeq	r0, r0, r4
	...
    1648:	0010e800 	andseq	lr, r0, r0, lsl #16
    164c:	00117610 	andseq	r7, r1, r0, lsl r6
    1650:	91000210 	tstls	r0, r0, lsl r2
    1654:	00117808 	andseq	r7, r1, r8, lsl #16
    1658:	00119210 	andseq	r9, r1, r0, lsl r2
    165c:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
    1660:	10001192 	mulne	r0, r2, r1
    1664:	10001234 	andne	r1, r0, r4, lsr r2
    1668:	08910002 	ldmeq	r1, {r1}
    166c:	10001234 	andne	r1, r0, r4, lsr r2
    1670:	10001302 	andne	r1, r0, r2, lsl #6
    1674:	00550001 	subseq	r0, r5, r1
	...
    1688:	0010e800 	andseq	lr, r0, r0, lsl #16
    168c:	0013d810 	andseq	sp, r3, r0, lsl r8
    1690:	91000210 	tstls	r0, r0, lsl r2
    1694:	0013d80c 	andseq	sp, r3, ip, lsl #16
    1698:	00142a10 	andseq	r2, r4, r0, lsl sl
    169c:	91000210 	tstls	r0, r0, lsl r2
    16a0:	00142a0c 	andseq	r2, r4, ip, lsl #20
    16a4:	00142e10 	andseq	r2, r4, r0, lsl lr
    16a8:	53000110 	movwpl	r0, #272	; 0x110
    16ac:	1000142e 	andne	r1, r0, lr, lsr #8
    16b0:	10001446 	andne	r1, r0, r6, asr #8
    16b4:	46510001 	ldrbmi	r0, [r1], -r1
    16b8:	7e100014 	mrcvc	0, 0, r0, cr0, cr4, {0}
    16bc:	02100014 	andseq	r0, r0, #20
    16c0:	000c9100 	andeq	r9, ip, r0, lsl #2
	...
    16cc:	e8000000 	stmda	r0, {}	; <UNPREDICTABLE>
    16d0:	14100010 	ldrne	r0, [r0], #-16
    16d4:	02100014 	andseq	r0, r0, #20
    16d8:	14109100 	ldrne	r9, [r0], #-256	; 0xffffff00
    16dc:	7e100014 	mrcvc	0, 0, r0, cr0, cr4, {0}
    16e0:	02100014 	andseq	r0, r0, #20
    16e4:	00109100 	andseq	r9, r0, r0, lsl #2
    16e8:	00000000 	andeq	r0, r0, r0
    16ec:	02000000 	andeq	r0, r0, #0
    16f0:	01010000 	mrseq	r0, (UNDEF: 1)
	...
    16fc:	01010000 	mrseq	r0, (UNDEF: 1)
    1700:	01010000 	mrseq	r0, (UNDEF: 1)
    1704:	00000000 	andeq	r0, r0, r0
    1708:	01010000 	mrseq	r0, (UNDEF: 1)
    170c:	00000000 	andeq	r0, r0, r0
    1710:	00000101 	andeq	r0, r0, r1, lsl #2
    1714:	00000101 	andeq	r0, r0, r1, lsl #2
    1718:	00000101 	andeq	r0, r0, r1, lsl #2
    171c:	00110000 	andseq	r0, r1, r0
    1720:	00117810 	andseq	r7, r1, r0, lsl r8
    1724:	30000210 	andcc	r0, r0, r0, lsl r2
    1728:	0011789f 	mulseq	r1, pc, r8	; <UNPREDICTABLE>
    172c:	00118010 	andseq	r8, r1, r0, lsl r0
    1730:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    1734:	10001180 	andne	r1, r0, r0, lsl #3
    1738:	10001190 	mulne	r0, r0, r1
    173c:	01740003 	cmneq	r4, r3
    1740:	0011909f 	mulseq	r1, pc, r0	; <UNPREDICTABLE>
    1744:	00119210 	andseq	r9, r1, r0, lsl r2
    1748:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    174c:	10001192 	mulne	r0, r2, r1
    1750:	10001234 	andne	r1, r0, r4, lsr r2
    1754:	9f300002 	svcls	0x00300002
    1758:	10001234 	andne	r1, r0, r4, lsr r2
    175c:	1000131c 	andne	r1, r0, ip, lsl r3
    1760:	1c540001 	mrrcne	0, 0, r0, r4, cr1
    1764:	36100013 			; <UNDEFINED> instruction: 0x36100013
    1768:	01100013 	tsteq	r0, r3, lsl r0
    176c:	13365200 	teqne	r6, #0, 4
    1770:	133e1000 	teqne	lr, #0
    1774:	00011000 	andeq	r1, r1, r0
    1778:	00133e54 	andseq	r3, r3, r4, asr lr
    177c:	00134e10 	andseq	r4, r3, r0, lsl lr
    1780:	74000310 	strvc	r0, [r0], #-784	; 0xfffffcf0
    1784:	134e9f01 	movtne	r9, #61185	; 0xef01
    1788:	13541000 	cmpne	r4, #0
    178c:	00011000 	andeq	r1, r1, r0
    1790:	00135454 	andseq	r5, r3, r4, asr r4
    1794:	00136210 	andseq	r6, r3, r0, lsl r2
    1798:	74000310 	strvc	r0, [r0], #-784	; 0xfffffcf0
    179c:	13629f01 	cmnne	r2, #1, 30
    17a0:	137e1000 	cmnne	lr, #0
    17a4:	00011000 	andeq	r1, r1, r0
    17a8:	00137e54 	andseq	r7, r3, r4, asr lr
    17ac:	0013ce10 	andseq	ip, r3, r0, lsl lr
    17b0:	51000110 	tstpl	r0, r0, lsl r1
    17b4:	100013ce 	andne	r1, r0, lr, asr #7
    17b8:	100013e2 	andne	r1, r0, r2, ror #7
    17bc:	e2540001 	subs	r0, r4, #1
    17c0:	f0100013 			; <UNDEFINED> instruction: 0xf0100013
    17c4:	03100013 	tsteq	r0, #19
    17c8:	9f017400 	svcls	0x00017400
    17cc:	100013f0 	strdne	r1, [r0], -r0
    17d0:	1000140a 	andne	r1, r0, sl, lsl #8
    17d4:	14540001 	ldrbne	r0, [r4], #-1
    17d8:	2e100014 	mrccs	0, 0, r0, cr0, cr4, {0}
    17dc:	01100014 	tsteq	r0, r4, lsl r0
    17e0:	142e5400 	strtne	r5, [lr], #-1024	; 0xfffffc00
    17e4:	143c1000 	ldrtne	r1, [ip], #-0
    17e8:	00031000 	andeq	r1, r3, r0
    17ec:	3c9f0174 	ldfccs	f0, [pc], {116}	; 0x74
    17f0:	56100014 			; <UNDEFINED> instruction: 0x56100014
    17f4:	01100014 	tsteq	r0, r4, lsl r0
    17f8:	14565400 	ldrbne	r5, [r6], #-1024	; 0xfffffc00
    17fc:	14641000 	strbtne	r1, [r4], #-0
    1800:	00031000 	andeq	r1, r3, r0
    1804:	649f0174 	ldrvs	r0, [pc], #372	; 180c <__HEAP_SIZE+0x80c>
    1808:	6e100014 	mrcvs	0, 0, r0, cr0, cr4, {0}
    180c:	01100014 	tsteq	r0, r4, lsl r0
    1810:	146e5400 	strbtne	r5, [lr], #-1024	; 0xfffffc00
    1814:	147c1000 	ldrbtne	r1, [ip], #-0
    1818:	00031000 	andeq	r1, r3, r0
    181c:	7c9f0174 	ldfvcs	f0, [pc], {116}	; 0x74
    1820:	7e100014 	mrcvc	0, 0, r0, cr0, cr4, {0}
    1824:	01100014 	tsteq	r0, r4, lsl r0
    1828:	00005400 	andeq	r5, r0, r0, lsl #8
    182c:	00000000 	andeq	r0, r0, r0
    1830:	00030000 	andeq	r0, r3, r0
	...
    183c:	10001100 	andne	r1, r0, r0, lsl #2
    1840:	10001286 	andne	r1, r0, r6, lsl #5
    1844:	089e000a 	ldmeq	lr, {r1, r3}
	...
    1850:	10001286 	andne	r1, r0, r6, lsl #5
    1854:	10001288 	andne	r1, r0, r8, lsl #5
    1858:	93520006 	cmpls	r2, #6
    185c:	04935304 	ldreq	r5, [r3], #772	; 0x304
    1860:	10001288 	andne	r1, r0, r8, lsl #5
    1864:	100012c2 	andne	r1, r0, r2, asr #5
    1868:	a0910003 	addsge	r0, r1, r3
    186c:	0012c27f 	andseq	ip, r2, pc, ror r2
    1870:	0012e610 	andseq	lr, r2, r0, lsl r6
    1874:	57000610 	smladpl	r0, r0, r6, r0
    1878:	93580493 	cmpls	r8, #-1828716544	; 0x93000000
    187c:	0012e604 	andseq	lr, r2, r4, lsl #12
    1880:	00136210 	andseq	r6, r3, r0, lsl r2
    1884:	91000310 	tstls	r0, r0, lsl r3
    1888:	00007fa0 	andeq	r7, r0, r0, lsr #31
    188c:	00000000 	andeq	r0, r0, r0
    1890:	00010000 	andeq	r0, r1, r0
    1894:	01000000 	mrseq	r0, (UNDEF: 0)
    1898:	00000001 	andeq	r0, r0, r1
    189c:	115a0000 	cmpne	sl, r0
    18a0:	116e1000 	cmnne	lr, r0
    18a4:	00021000 	andeq	r1, r2, r0
    18a8:	116e9f30 	cmnne	lr, r0, lsr pc
    18ac:	11921000 	orrsne	r1, r2, r0
    18b0:	00031000 	andeq	r1, r3, r0
    18b4:	1a7fac91 	bne	1fecb00 <__RAM_SIZE+0x1eecb00>
    18b8:	1a100012 	bne	401908 <__RAM_SIZE+0x301908>
    18bc:	02100012 	andseq	r0, r0, #18
    18c0:	1a9f3000 	bne	fe7cd8c8 <__StackTop+0xc66cd8c8>
    18c4:	30100012 	andscc	r0, r0, r2, lsl r0
    18c8:	02100012 	andseq	r0, r0, #18
    18cc:	309f3100 	addscc	r3, pc, r0, lsl #2
    18d0:	0a100012 	beq	401920 <__RAM_SIZE+0x301920>
    18d4:	03100014 	tsteq	r0, #20
    18d8:	7fac9100 	svcvc	0x00ac9100
    18dc:	10001414 	andne	r1, r0, r4, lsl r4
    18e0:	1000147e 	andne	r1, r0, lr, ror r4
    18e4:	ac910003 	ldcge	0, cr0, [r1], {3}
    18e8:	0000007f 	andeq	r0, r0, pc, ror r0
	...
    18f8:	3e000000 	cdpcc	0, 0, cr0, cr0, cr0, {0}
    18fc:	41100012 	tstmi	r0, r2, lsl r0
    1900:	01100012 	tsteq	r0, r2, lsl r0
    1904:	12415000 	subne	r5, r1, #0
    1908:	138e1000 	orrne	r1, lr, #0
    190c:	00011000 	andeq	r1, r1, r0
    1910:	00138e56 	andseq	r8, r3, r6, asr lr
    1914:	0013ce10 	andseq	ip, r3, r0, lsl lr
    1918:	52000110 	andpl	r0, r0, #16, 2
    191c:	100013ce 	andne	r1, r0, lr, asr #7
    1920:	1000140a 	andne	r1, r0, sl, lsl #8
    1924:	14560001 	ldrbne	r0, [r6], #-1
    1928:	7e100014 	mrcvc	0, 0, r0, cr0, cr4, {0}
    192c:	01100014 	tsteq	r0, r4, lsl r0
    1930:	00005600 	andeq	r5, r0, r0, lsl #12
	...
    193c:	12680000 	rsbne	r0, r8, #0
    1940:	126b1000 	rsbne	r1, fp, #0
    1944:	00061000 	andeq	r1, r6, r0
    1948:	53049352 	movwpl	r9, #17234	; 0x4352
    194c:	126b0493 	rsbne	r0, fp, #-1828716544	; 0x93000000
    1950:	12861000 	addne	r1, r6, #0
    1954:	00031000 	andeq	r1, r3, r0
    1958:	007fa091 			; <UNDEFINED> instruction: 0x007fa091
	...
    1964:	01010000 	mrseq	r0, (UNDEF: 1)
    1968:	00000000 	andeq	r0, r0, r0
    196c:	6e000101 	adfvss	f0, f0, f1
    1970:	71100012 	tstvc	r0, r2, lsl r0
    1974:	01100012 	tsteq	r0, r2, lsl r0
    1978:	12715000 	rsbsne	r5, r1, #0
    197c:	12a61000 	adcne	r1, r6, #0
    1980:	00011000 	andeq	r1, r1, r0
    1984:	0012a657 	andseq	sl, r2, r7, asr r6
    1988:	0012aa10 	andseq	sl, r2, r0, lsl sl
    198c:	30000210 	andcc	r0, r0, r0, lsl r2
    1990:	0012aa9f 	mulseq	r2, pc, sl	; <UNPREDICTABLE>
    1994:	0012c010 	andseq	ip, r2, r0, lsl r0
    1998:	57000110 	smladpl	r0, r0, r1, r0
    199c:	100012e6 	andne	r1, r0, r6, ror #5
    19a0:	1000132a 	andne	r1, r0, sl, lsr #6
    19a4:	2a570001 	bcs	15c19b0 <__RAM_SIZE+0x14c19b0>
    19a8:	36100013 			; <UNDEFINED> instruction: 0x36100013
    19ac:	01100013 	tsteq	r0, r3, lsl r0
    19b0:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    19bc:	13020000 	movwne	r0, #8192	; 0x2000
    19c0:	133c1000 	teqne	ip, #0
    19c4:	00011000 	andeq	r1, r1, r0
    19c8:	00133c55 	andseq	r3, r3, r5, asr ip
    19cc:	00135010 	andseq	r5, r3, r0, lsl r0
    19d0:	53000110 	movwpl	r0, #272	; 0x110
	...
    19dc:	10000c2c 	andne	r0, r0, ip, lsr #24
    19e0:	10000c30 	andne	r0, r0, r0, lsr ip
    19e4:	007d0002 	rsbseq	r0, sp, r2
    19e8:	10000c30 	andne	r0, r0, r0, lsr ip
    19ec:	10000c32 	andne	r0, r0, r2, lsr ip
    19f0:	247d0002 	ldrbtcs	r0, [sp], #-2
    19f4:	10000c32 	andne	r0, r0, r2, lsr ip
    19f8:	10000cee 	andne	r0, r0, lr, ror #25
    19fc:	f87d0003 			; <UNDEFINED> instruction: 0xf87d0003
    1a00:	000cee00 	andeq	lr, ip, r0, lsl #28
    1a04:	000cf210 	andeq	pc, ip, r0, lsl r2	; <UNPREDICTABLE>
    1a08:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    1a0c:	00000024 	andeq	r0, r0, r4, lsr #32
	...
    1a1c:	000c2c00 	andeq	r2, ip, r0, lsl #24
    1a20:	000c6210 	andeq	r6, ip, r0, lsl r2
    1a24:	50000110 	andpl	r0, r0, r0, lsl r1
    1a28:	10000c62 	andne	r0, r0, r2, ror #24
    1a2c:	10000cc0 	andne	r0, r0, r0, asr #25
    1a30:	ac910003 	ldcge	0, cr0, [r1], {3}
    1a34:	000cc07f 	andeq	ip, ip, pc, ror r0
    1a38:	000cc410 	andeq	ip, ip, r0, lsl r4
    1a3c:	50000110 	andpl	r0, r0, r0, lsl r1
    1a40:	10000cc4 	andne	r0, r0, r4, asr #25
    1a44:	10000cf2 	strdne	r0, [r0], -r2
    1a48:	ac910003 	ldcge	0, cr0, [r1], {3}
    1a4c:	0000007f 	andeq	r0, r0, pc, ror r0
	...
    1a5c:	000c2c00 	andeq	r2, ip, r0, lsl #24
    1a60:	000c6210 	andeq	r6, ip, r0, lsl r2
    1a64:	51000110 	tstpl	r0, r0, lsl r1
    1a68:	10000c62 	andne	r0, r0, r2, ror #24
    1a6c:	10000cc0 	andne	r0, r0, r0, asr #25
    1a70:	b0910003 	addslt	r0, r1, r3
    1a74:	000cc07f 	andeq	ip, ip, pc, ror r0
    1a78:	000cc410 	andeq	ip, ip, r0, lsl r4
    1a7c:	51000110 	tstpl	r0, r0, lsl r1
    1a80:	10000cc4 	andne	r0, r0, r4, asr #25
    1a84:	10000cf2 	strdne	r0, [r0], -r2
    1a88:	b0910003 	addslt	r0, r1, r3
    1a8c:	0000007f 	andeq	r0, r0, pc, ror r0
	...
    1a9c:	000c2c00 	andeq	r2, ip, r0, lsl #24
    1aa0:	000c6210 	andeq	r6, ip, r0, lsl r2
    1aa4:	52000110 	andpl	r0, r0, #16, 2
    1aa8:	10000c62 	andne	r0, r0, r2, ror #24
    1aac:	10000cc0 	andne	r0, r0, r0, asr #25
    1ab0:	b4910003 	ldrlt	r0, [r1], #3
    1ab4:	000cc07f 	andeq	ip, ip, pc, ror r0
    1ab8:	000cc410 	andeq	ip, ip, r0, lsl r4
    1abc:	52000110 	andpl	r0, r0, #16, 2
    1ac0:	10000cc4 	andne	r0, r0, r4, asr #25
    1ac4:	10000cf2 	strdne	r0, [r0], -r2
    1ac8:	b4910003 	ldrlt	r0, [r1], #3
    1acc:	0000007f 	andeq	r0, r0, pc, ror r0
	...
    1ad8:	000c2c00 	andeq	r2, ip, r0, lsl #24
    1adc:	000c4c10 	andeq	r4, ip, r0, lsl ip
    1ae0:	53000110 	movwpl	r0, #272	; 0x110
    1ae4:	10000c4c 	andne	r0, r0, ip, asr #24
    1ae8:	10000cf2 	strdne	r0, [r0], -r2
    1aec:	005b0001 	subseq	r0, fp, r1
	...
    1b00:	000c2c00 	andeq	r2, ip, r0, lsl #24
    1b04:	000c6210 	andeq	r6, ip, r0, lsl r2
    1b08:	91000210 	tstls	r0, r0, lsl r2
    1b0c:	000c6200 	andeq	r6, ip, r0, lsl #4
    1b10:	000c8410 	andeq	r8, ip, r0, lsl r4
    1b14:	55000610 	strpl	r0, [r0, #-1552]	; 0xfffff9f0
    1b18:	93560493 	cmpls	r6, #-1828716544	; 0x93000000
    1b1c:	000c8404 	andeq	r8, ip, r4, lsl #8
    1b20:	000c9810 	andeq	r9, ip, r0, lsl r8
    1b24:	50000610 	andpl	r0, r0, r0, lsl r6
    1b28:	93510493 	cmpls	r1, #-1828716544	; 0x93000000
    1b2c:	000c9804 	andeq	r9, ip, r4, lsl #16
    1b30:	000cc010 	andeq	ip, ip, r0, lsl r0
    1b34:	55000610 	strpl	r0, [r0, #-1552]	; 0xfffff9f0
    1b38:	93560493 	cmpls	r6, #-1828716544	; 0x93000000
    1b3c:	000cc004 	andeq	ip, ip, r4
    1b40:	000cc410 	andeq	ip, ip, r0, lsl r4
    1b44:	91000210 	tstls	r0, r0, lsl r2
	...
    1b54:	000c2c00 	andeq	r2, ip, r0, lsl #24
    1b58:	000c5210 	andeq	r5, ip, r0, lsl r2
    1b5c:	91000210 	tstls	r0, r0, lsl r2
    1b60:	000c5220 	andeq	r5, ip, r0, lsr #4
    1b64:	000cf210 	andeq	pc, ip, r0, lsl r2	; <UNPREDICTABLE>
    1b68:	5a000110 	bpl	1fb0 <__HEAP_SIZE+0xfb0>
	...
    1b74:	00000002 	andeq	r0, r0, r2
	...
    1b80:	10000c48 	andne	r0, r0, r8, asr #24
    1b84:	10000c62 	andne	r0, r0, r2, ror #24
    1b88:	9f300002 	svcls	0x00300002
    1b8c:	10000c62 	andne	r0, r0, r2, ror #24
    1b90:	10000c6c 	andne	r0, r0, ip, ror #24
    1b94:	6c540001 	mrrcvs	0, 0, r0, r4, cr1
    1b98:	9810000c 	ldmdals	r0, {r2, r3}
    1b9c:	0110000c 	tsteq	r0, ip
    1ba0:	0c985900 			; <UNDEFINED> instruction: 0x0c985900
    1ba4:	0cc01000 	stcleq	0, cr1, [r0], {0}
    1ba8:	00011000 	andeq	r1, r1, r0
    1bac:	000cc054 	andeq	ip, ip, r4, asr r0
    1bb0:	000cc410 	andeq	ip, ip, r0, lsl r4
    1bb4:	30000210 	andcc	r0, r0, r0, lsl r2
    1bb8:	000cc49f 	muleq	ip, pc, r4	; <UNPREDICTABLE>
    1bbc:	000cf210 	andeq	pc, ip, r0, lsl r2	; <UNPREDICTABLE>
    1bc0:	59000110 	stmdbpl	r0, {r4, r8}
	...
    1bd0:	10000c62 	andne	r0, r0, r2, ror #24
    1bd4:	10000c70 	andne	r0, r0, r0, ror ip
    1bd8:	a6530001 	ldrbge	r0, [r3], -r1
    1bdc:	c010000c 	andsgt	r0, r0, ip
    1be0:	0110000c 	tsteq	r0, ip
    1be4:	00005300 	andeq	r5, r0, r0, lsl #6
    1be8:	00000000 	andeq	r0, r0, r0
    1bec:	0b980000 	bleq	fe601bf4 <__StackTop+0xc6501bf4>
    1bf0:	0b9a1000 	bleq	fe685bf8 <__StackTop+0xc6585bf8>
    1bf4:	00021000 	andeq	r1, r2, r0
    1bf8:	0b9a007d 	bleq	fe681df4 <__StackTop+0xc6581df4>
    1bfc:	0b9c1000 	bleq	fe705c04 <__StackTop+0xc6605c04>
    1c00:	00021000 	andeq	r1, r2, r0
    1c04:	0b9c147d 	bleq	fe706e00 <__StackTop+0xc6606e00>
    1c08:	0c2a1000 	stceq	0, cr1, [sl], #-0
    1c0c:	00031000 	andeq	r1, r3, r0
    1c10:	2a00d87d 	bcs	37e0c <__HEAP_SIZE+0x36e0c>
    1c14:	2c10000c 	ldccs	0, cr0, [r0], {12}
    1c18:	0210000c 	andseq	r0, r0, #12
    1c1c:	00147d00 	andseq	r7, r4, r0, lsl #26
	...
    1c28:	98000000 	stmdals	r0, {}	; <UNPREDICTABLE>
    1c2c:	2710000b 	ldrcs	r0, [r0, -fp]
    1c30:	0110000c 	tsteq	r0, ip
    1c34:	0c275000 	stceq	0, cr5, [r7], #-0
    1c38:	0c2c1000 	stceq	0, cr1, [ip], #-0
    1c3c:	00041000 	andeq	r1, r4, r0
    1c40:	9f5001f3 	svcls	0x005001f3
	...
    1c50:	10000b98 	mulne	r0, r8, fp
    1c54:	10000c27 	andne	r0, r0, r7, lsr #24
    1c58:	27510001 	ldrbcs	r0, [r1, -r1]
    1c5c:	2c10000c 	ldccs	0, cr0, [r0], {12}
    1c60:	0410000c 	ldreq	r0, [r0], #-12
    1c64:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    1c68:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    1c74:	000b9800 	andeq	r9, fp, r0, lsl #16
    1c78:	000c2710 	andeq	r2, ip, r0, lsl r7
    1c7c:	52000110 	andpl	r0, r0, #16, 2
    1c80:	10000c27 	andne	r0, r0, r7, lsr #24
    1c84:	10000c2c 	andne	r0, r0, ip, lsr #24
    1c88:	01f30004 	mvnseq	r0, r4
    1c8c:	00009f52 	andeq	r9, r0, r2, asr pc
	...
    1c98:	0b980000 	bleq	fe601ca0 <__StackTop+0xc6501ca0>
    1c9c:	0c271000 	stceq	0, cr1, [r7], #-0
    1ca0:	00011000 	andeq	r1, r1, r0
    1ca4:	000c2753 	andeq	r2, ip, r3, asr r7
    1ca8:	000c2c10 	andeq	r2, ip, r0, lsl ip
    1cac:	f3000410 	vqshl.u8	d0, d0, d0
    1cb0:	009f5301 	addseq	r5, pc, r1, lsl #6
	...
    1cc4:	000b9800 	andeq	r9, fp, r0, lsl #16
    1cc8:	000bb610 	andeq	fp, fp, r0, lsl r6
    1ccc:	91000210 	tstls	r0, r0, lsl r2
    1cd0:	000bb600 	andeq	fp, fp, r0, lsl #12
    1cd4:	000bd010 	andeq	sp, fp, r0, lsl r0
    1cd8:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    1cdc:	10000bd0 	ldrdne	r0, [r0], -r0	; <UNPREDICTABLE>
    1ce0:	10000bdc 	ldrdne	r0, [r0], -ip
    1ce4:	dc5c0001 	mrrcle	0, 0, r0, ip, cr1
    1ce8:	0a10000b 	beq	401d1c <__RAM_SIZE+0x301d1c>
    1cec:	0110000c 	tsteq	r0, ip
    1cf0:	0c0a5400 	cfstrseq	mvf5, [sl], {-0}
    1cf4:	0c0c1000 	stceq	0, cr1, [ip], {-0}
    1cf8:	00021000 	andeq	r1, r2, r0
    1cfc:	00000091 	muleq	r0, r1, r0
	...
    1d08:	0b980000 	bleq	fe601d10 <__StackTop+0xc6501d10>
    1d0c:	0ba81000 	bleq	fea05d14 <__StackTop+0xc6905d14>
    1d10:	00021000 	andeq	r1, r2, r0
    1d14:	0ba81491 	bleq	fea06f60 <__StackTop+0xc6906f60>
    1d18:	0c2c1000 	stceq	0, cr1, [ip], #-0
    1d1c:	00011000 	andeq	r1, r1, r0
    1d20:	00000056 	andeq	r0, r0, r6, asr r0
    1d24:	00000000 	andeq	r0, r0, r0
    1d28:	00000200 	andeq	r0, r0, r0, lsl #4
	...
    1d34:	000ba200 	andeq	sl, fp, r0, lsl #4
    1d38:	000bb610 	andeq	fp, fp, r0, lsl r6
    1d3c:	30000210 	andcc	r0, r0, r0, lsl r2
    1d40:	000bb69f 	muleq	fp, pc, r6	; <UNPREDICTABLE>
    1d44:	000bc210 	andeq	ip, fp, r0, lsl r2
    1d48:	5e000110 	fltpls	f0, r0
    1d4c:	10000bc2 	andne	r0, r0, r2, asr #23
    1d50:	10000bdc 	ldrdne	r0, [r0], -ip
    1d54:	dc570001 	mrrcle	0, 0, r0, r7, cr1
    1d58:	0a10000b 	beq	401d8c <__RAM_SIZE+0x301d8c>
    1d5c:	0110000c 	tsteq	r0, ip
    1d60:	0c0a5e00 	stceq	14, cr5, [sl], {-0}
    1d64:	0c0c1000 	stceq	0, cr1, [ip], {-0}
    1d68:	00021000 	andeq	r1, r2, r0
    1d6c:	0c0c9f30 	stceq	15, cr9, [ip], {48}	; 0x30
    1d70:	0c2c1000 	stceq	0, cr1, [ip], #-0
    1d74:	00011000 	andeq	r1, r1, r0
    1d78:	00000057 	andeq	r0, r0, r7, asr r0
	...
    1d8c:	000bb600 	andeq	fp, fp, r0, lsl #12
    1d90:	000bba10 	andeq	fp, fp, r0, lsl sl
    1d94:	5c000110 	stfpls	f0, [r0], {16}
    1d98:	10000bba 			; <UNDEFINED> instruction: 0x10000bba
    1d9c:	10000bbe 			; <UNDEFINED> instruction: 0x10000bbe
    1da0:	507c0003 	rsbspl	r0, ip, r3
    1da4:	000bbe9f 	muleq	fp, pc, lr	; <UNPREDICTABLE>
    1da8:	000bdc10 	andeq	sp, fp, r0, lsl ip
    1dac:	74001210 	strvc	r1, [r0], #-528	; 0xfffffdf0
    1db0:	f7007400 			; <UNDEFINED> instruction: 0xf7007400
    1db4:	f7007530 			; <UNDEFINED> instruction: 0xf7007530
    1db8:	00f71b30 	rscseq	r1, r7, r0, lsr fp
    1dbc:	1c1e0075 	ldcne	0, cr0, [lr], {117}	; 0x75
    1dc0:	000be89f 	muleq	fp, pc, r8	; <UNPREDICTABLE>
    1dc4:	000bf810 	andeq	pc, fp, r0, lsl r8	; <UNPREDICTABLE>
    1dc8:	5c000110 	stfpls	f0, [r0], {16}
    1dcc:	10000bf8 	strdne	r0, [r0], -r8
    1dd0:	10000c06 	andne	r0, r0, r6, lsl #24
    1dd4:	00740012 	rsbseq	r0, r4, r2, lsl r0
    1dd8:	30f70074 	rscscc	r0, r7, r4, ror r0
    1ddc:	30f70075 	rscscc	r0, r7, r5, ror r0
    1de0:	7500f71b 	strvc	pc, [r0, #-1819]	; 0xfffff8e5
    1de4:	9f1c1e00 	svcls	0x001c1e00
    1de8:	10000c06 	andne	r0, r0, r6, lsl #24
    1dec:	10000c0a 	andne	r0, r0, sl, lsl #24
    1df0:	005c0001 	subseq	r0, ip, r1
    1df4:	00000000 	andeq	r0, r0, r0
    1df8:	60000000 	andvs	r0, r0, r0
    1dfc:	6410000a 	ldrvs	r0, [r0], #-10
    1e00:	0210000a 	andseq	r0, r0, #10
    1e04:	64007d00 	strvs	r7, [r0], #-3328	; 0xfffff300
    1e08:	6610000a 	ldrvs	r0, [r0], -sl
    1e0c:	0210000a 	andseq	r0, r0, #10
    1e10:	661c7d00 	ldrvs	r7, [ip], -r0, lsl #26
    1e14:	1c10000a 	ldcne	0, cr0, [r0], {10}
    1e18:	0210000b 	andseq	r0, r0, #11
    1e1c:	1c307d00 	ldcne	13, cr7, [r0], #-0
    1e20:	2010000b 	andscs	r0, r0, fp
    1e24:	0210000b 	andseq	r0, r0, #11
    1e28:	201c7d00 	andscs	r7, ip, r0, lsl #26
    1e2c:	9810000b 	ldmdals	r0, {r0, r1, r3}
    1e30:	0210000b 	andseq	r0, r0, #11
    1e34:	00307d00 	eorseq	r7, r0, r0, lsl #26
	...
    1e44:	000a6000 	andeq	r6, sl, r0
    1e48:	000b1910 	andeq	r1, fp, r0, lsl r9
    1e4c:	50000110 	andpl	r0, r0, r0, lsl r1
    1e50:	10000b19 	andne	r0, r0, r9, lsl fp
    1e54:	10000b20 	andne	r0, r0, r0, lsr #22
    1e58:	01f30004 	mvnseq	r0, r4
    1e5c:	0b209f50 	bleq	829ba4 <__RAM_SIZE+0x729ba4>
    1e60:	0b981000 	bleq	fe605e68 <__StackTop+0xc6505e68>
    1e64:	00011000 	andeq	r1, r1, r0
    1e68:	00000050 	andeq	r0, r0, r0, asr r0
	...
    1e74:	60000000 	andvs	r0, r0, r0
    1e78:	1910000a 	ldmdbne	r0, {r1, r3}
    1e7c:	0110000b 	tsteq	r0, fp
    1e80:	0b195100 	bleq	656288 <__RAM_SIZE+0x556288>
    1e84:	0b201000 	bleq	805e8c <__RAM_SIZE+0x705e8c>
    1e88:	00041000 	andeq	r1, r4, r0
    1e8c:	9f5101f3 	svcls	0x005101f3
    1e90:	10000b20 	andne	r0, r0, r0, lsr #22
    1e94:	10000b98 	mulne	r0, r8, fp
    1e98:	00510001 	subseq	r0, r1, r1
	...
    1ea8:	000a6000 	andeq	r6, sl, r0
    1eac:	000b1910 	andeq	r1, fp, r0, lsl r9
    1eb0:	52000110 	andpl	r0, r0, #16, 2
    1eb4:	10000b19 	andne	r0, r0, r9, lsl fp
    1eb8:	10000b20 	andne	r0, r0, r0, lsr #22
    1ebc:	01f30004 	mvnseq	r0, r4
    1ec0:	0b209f52 	bleq	829c10 <__RAM_SIZE+0x729c10>
    1ec4:	0b981000 	bleq	fe605ecc <__StackTop+0xc6505ecc>
    1ec8:	00011000 	andeq	r1, r1, r0
    1ecc:	00000052 	andeq	r0, r0, r2, asr r0
	...
    1ed8:	60000000 	andvs	r0, r0, r0
    1edc:	1910000a 	ldmdbne	r0, {r1, r3}
    1ee0:	0110000b 	tsteq	r0, fp
    1ee4:	0b195300 	bleq	656aec <__RAM_SIZE+0x556aec>
    1ee8:	0b201000 	bleq	805ef0 <__RAM_SIZE+0x705ef0>
    1eec:	00041000 	andeq	r1, r4, r0
    1ef0:	9f5301f3 	svcls	0x005301f3
    1ef4:	10000b20 	andne	r0, r0, r0, lsr #22
    1ef8:	10000b98 	mulne	r0, r8, fp
    1efc:	00530001 	subseq	r0, r3, r1
	...
    1f08:	60000000 	andvs	r0, r0, r0
    1f0c:	2010000a 	andscs	r0, r0, sl
    1f10:	0210000b 	andseq	r0, r0, #11
    1f14:	20009100 	andcs	r9, r0, r0, lsl #2
    1f18:	9810000b 	ldmdals	r0, {r0, r1, r3}
    1f1c:	0210000b 	andseq	r0, r0, #11
    1f20:	00009100 	andeq	r9, r0, r0, lsl #2
	...
    1f2c:	01010000 	mrseq	r0, (UNDEF: 1)
    1f30:	01010000 	mrseq	r0, (UNDEF: 1)
    1f34:	01010000 	mrseq	r0, (UNDEF: 1)
    1f38:	01010000 	mrseq	r0, (UNDEF: 1)
    1f3c:	01010000 	mrseq	r0, (UNDEF: 1)
	...
    1f48:	00000101 	andeq	r0, r0, r1, lsl #2
    1f4c:	00000101 	andeq	r0, r0, r1, lsl #2
    1f50:	00000101 	andeq	r0, r0, r1, lsl #2
    1f54:	00000101 	andeq	r0, r0, r1, lsl #2
    1f58:	00000101 	andeq	r0, r0, r1, lsl #2
    1f5c:	000a6000 	andeq	r6, sl, r0
    1f60:	000a9810 	andeq	r9, sl, r0, lsl r8
    1f64:	91000210 	tstls	r0, r0, lsl r2
    1f68:	000a9804 	andeq	r9, sl, r4, lsl #16
    1f6c:	000a9810 	andeq	r9, sl, r0, lsl r8
    1f70:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    1f74:	10000a98 	mulne	r0, r8, sl
    1f78:	10000aa2 	andne	r0, r0, r2, lsr #21
    1f7c:	01740003 	cmneq	r4, r3
    1f80:	000aa29f 	muleq	sl, pc, r2	; <UNPREDICTABLE>
    1f84:	000ab810 	andeq	fp, sl, r0, lsl r8
    1f88:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    1f8c:	10000ab8 			; <UNDEFINED> instruction: 0x10000ab8
    1f90:	10000ac2 	andne	r0, r0, r2, asr #21
    1f94:	01740003 	cmneq	r4, r3
    1f98:	000ac29f 	muleq	sl, pc, r2	; <UNPREDICTABLE>
    1f9c:	000af010 	andeq	pc, sl, r0, lsl r0	; <UNPREDICTABLE>
    1fa0:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    1fa4:	10000af0 	strdne	r0, [r0], -r0	; <UNPREDICTABLE>
    1fa8:	10000afa 	strdne	r0, [r0], -sl
    1fac:	01740003 	cmneq	r4, r3
    1fb0:	000afa9f 	muleq	sl, pc, sl	; <UNPREDICTABLE>
    1fb4:	000b0410 	andeq	r0, fp, r0, lsl r4
    1fb8:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    1fbc:	10000b04 	andne	r0, r0, r4, lsl #22
    1fc0:	10000b0e 	andne	r0, r0, lr, lsl #22
    1fc4:	01740003 	cmneq	r4, r3
    1fc8:	000b0e9f 	muleq	fp, pc, lr	; <UNPREDICTABLE>
    1fcc:	000b2010 	andeq	r2, fp, r0, lsl r0
    1fd0:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    1fd4:	10000b20 	andne	r0, r0, r0, lsr #22
    1fd8:	10000b24 	andne	r0, r0, r4, lsr #22
    1fdc:	7f740003 	svcvc	0x00740003
    1fe0:	000b249f 	muleq	fp, pc, r4	; <UNPREDICTABLE>
    1fe4:	000b3210 	andeq	r3, fp, r0, lsl r2
    1fe8:	5c000110 	stfpls	f0, [r0], {16}
    1fec:	10000b32 	andne	r0, r0, r2, lsr fp
    1ff0:	10000b34 	andne	r0, r0, r4, lsr fp
    1ff4:	34540001 	ldrbcc	r0, [r4], #-1
    1ff8:	3810000b 	ldmdacc	r0, {r0, r1, r3}
    1ffc:	0110000b 	tsteq	r0, fp
    2000:	0b385c00 	bleq	e19008 <__RAM_SIZE+0xd19008>
    2004:	0b421000 	bleq	108600c <__RAM_SIZE+0xf8600c>
    2008:	00011000 	andeq	r1, r1, r0
    200c:	000b4254 	andeq	r4, fp, r4, asr r2
    2010:	000b4c10 	andeq	r4, fp, r0, lsl ip
    2014:	74000310 	strvc	r0, [r0], #-784	; 0xfffffcf0
    2018:	0b4c9f01 	bleq	1329c24 <__RAM_SIZE+0x1229c24>
    201c:	0b581000 	bleq	1606024 <__RAM_SIZE+0x1506024>
    2020:	00011000 	andeq	r1, r1, r0
    2024:	000b5854 	andeq	r5, fp, r4, asr r8
    2028:	000b6210 	andeq	r6, fp, r0, lsl r2
    202c:	74000310 	strvc	r0, [r0], #-784	; 0xfffffcf0
    2030:	0b629f01 	bleq	18a9c3c <__RAM_SIZE+0x17a9c3c>
    2034:	0b681000 	bleq	1a0603c <__RAM_SIZE+0x190603c>
    2038:	00011000 	andeq	r1, r1, r0
    203c:	000b6854 	andeq	r6, fp, r4, asr r8
    2040:	000b7210 	andeq	r7, fp, r0, lsl r2
    2044:	74000310 	strvc	r0, [r0], #-784	; 0xfffffcf0
    2048:	0b729f01 	bleq	1ca9c54 <__RAM_SIZE+0x1ba9c54>
    204c:	0b7a1000 	bleq	1e86054 <__RAM_SIZE+0x1d86054>
    2050:	00011000 	andeq	r1, r1, r0
    2054:	000b7a54 	andeq	r7, fp, r4, asr sl
    2058:	000b8410 	andeq	r8, fp, r0, lsl r4
    205c:	74000310 	strvc	r0, [r0], #-784	; 0xfffffcf0
    2060:	0b849f01 	bleq	fe129c6c <__StackTop+0xc6029c6c>
    2064:	0b8c1000 	bleq	fe30606c <__StackTop+0xc620606c>
    2068:	00011000 	andeq	r1, r1, r0
    206c:	000b8c54 	andeq	r8, fp, r4, asr ip
    2070:	000b9610 	andeq	r9, fp, r0, lsl r6
    2074:	74000310 	strvc	r0, [r0], #-784	; 0xfffffcf0
    2078:	0b969f01 	bleq	fe5a9c84 <__StackTop+0xc64a9c84>
    207c:	0b981000 	bleq	fe606084 <__StackTop+0xc6506084>
    2080:	00011000 	andeq	r1, r1, r0
    2084:	00000054 	andeq	r0, r0, r4, asr r0
	...
    2090:	000a6000 	andeq	r6, sl, r0
    2094:	000b2010 	andeq	r2, fp, r0, lsl r0
    2098:	91000210 	tstls	r0, r0, lsl r2
    209c:	000b2008 	andeq	r2, fp, r8
    20a0:	000b9810 	andeq	r9, fp, r0, lsl r8
    20a4:	91000210 	tstls	r0, r0, lsl r2
    20a8:	00000008 	andeq	r0, r0, r8
	...
    20b4:	000a6000 	andeq	r6, sl, r0
    20b8:	000b2010 	andeq	r2, fp, r0, lsl r0
    20bc:	91000210 	tstls	r0, r0, lsl r2
    20c0:	000b200c 	andeq	r2, fp, ip
    20c4:	000b9810 	andeq	r9, fp, r0, lsl r8
    20c8:	91000210 	tstls	r0, r0, lsl r2
    20cc:	0000000c 	andeq	r0, r0, ip
	...
    20d8:	000a6000 	andeq	r6, sl, r0
    20dc:	000b2010 	andeq	r2, fp, r0, lsl r0
    20e0:	91000210 	tstls	r0, r0, lsl r2
    20e4:	000b2010 	andeq	r2, fp, r0, lsl r0
    20e8:	000b9810 	andeq	r9, fp, r0, lsl r8
    20ec:	91000210 	tstls	r0, r0, lsl r2
    20f0:	00000010 	andeq	r0, r0, r0, lsl r0
	...
    20fc:	000a6000 	andeq	r6, sl, r0
    2100:	000a9610 	andeq	r9, sl, r0, lsl r6
    2104:	91000210 	tstls	r0, r0, lsl r2
    2108:	000a9614 	andeq	r9, sl, r4, lsl r6
    210c:	000b9810 	andeq	r9, fp, r0, lsl r8
    2110:	57000110 	smladpl	r0, r0, r1, r0
	...
    2120:	10000a60 	andne	r0, r0, r0, ror #20
    2124:	10000b20 	andne	r0, r0, r0, lsr #22
    2128:	18910002 	ldmne	r1, {r1}
    212c:	10000b20 	andne	r0, r0, r0, lsr #22
    2130:	10000b98 	mulne	r0, r8, fp
    2134:	18910002 	ldmne	r1, {r1}
	...
    2140:	100009e2 	andne	r0, r0, r2, ror #19
    2144:	100009e6 	andne	r0, r0, r6, ror #19
    2148:	007d0002 	rsbseq	r0, sp, r2
    214c:	100009e6 	andne	r0, r0, r6, ror #19
    2150:	100009e8 	andne	r0, r0, r8, ror #19
    2154:	247d0002 	ldrbtcs	r0, [sp], #-2
    2158:	100009e8 	andne	r0, r0, r8, ror #19
    215c:	10000a46 	andne	r0, r0, r6, asr #20
    2160:	307d0002 	rsbscc	r0, sp, r2
    2164:	10000a46 	andne	r0, r0, r6, asr #20
    2168:	10000a4a 	andne	r0, r0, sl, asr #20
    216c:	247d0002 	ldrbtcs	r0, [sp], #-2
    2170:	10000a4a 	andne	r0, r0, sl, asr #20
    2174:	10000a60 	andne	r0, r0, r0, ror #20
    2178:	307d0002 	rsbscc	r0, sp, r2
	...
    2188:	100009e2 	andne	r0, r0, r2, ror #19
    218c:	10000a06 	andne	r0, r0, r6, lsl #20
    2190:	06500001 	ldrbeq	r0, [r0], -r1
    2194:	6010000a 	andsvs	r0, r0, sl
    2198:	0110000a 	tsteq	r0, sl
    219c:	00005500 	andeq	r5, r0, r0, lsl #10
	...
    21a8:	09e20000 	stmibeq	r2!, {}^	; <UNPREDICTABLE>
    21ac:	0a061000 	beq	1861b4 <__RAM_SIZE+0x861b4>
    21b0:	00011000 	andeq	r1, r1, r0
    21b4:	000a0651 	andeq	r0, sl, r1, asr r6
    21b8:	000a6010 	andeq	r6, sl, r0, lsl r0
    21bc:	56000110 			; <UNDEFINED> instruction: 0x56000110
	...
    21d4:	100009e2 	andne	r0, r0, r2, ror #19
    21d8:	10000a0e 	andne	r0, r0, lr, lsl #20
    21dc:	0e520001 	cdpeq	0, 5, cr0, cr2, cr1, {0}
    21e0:	1e10000a 	cdpne	0, 1, cr0, cr0, cr10, {0}
    21e4:	0110000a 	tsteq	r0, sl
    21e8:	0a1e5b00 	beq	798df0 <__RAM_SIZE+0x698df0>
    21ec:	0a2a1000 	beq	a861f4 <__RAM_SIZE+0x9861f4>
    21f0:	00011000 	andeq	r1, r1, r0
    21f4:	000a2a52 	andeq	r2, sl, r2, asr sl
    21f8:	000a3610 	andeq	r3, sl, r0, lsl r6
    21fc:	58000110 	stmdapl	r0, {r4, r8}
    2200:	10000a36 	andne	r0, r0, r6, lsr sl
    2204:	10000a54 	andne	r0, r0, r4, asr sl
    2208:	54520001 	ldrbpl	r0, [r2], #-1
    220c:	6010000a 	andsvs	r0, r0, sl
    2210:	0110000a 	tsteq	r0, sl
    2214:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    2220:	09e20000 	stmibeq	r2!, {}^	; <UNPREDICTABLE>
    2224:	09fc1000 	ldmibeq	ip!, {ip}^
    2228:	00011000 	andeq	r1, r1, r0
    222c:	0009fc53 	andeq	pc, r9, r3, asr ip	; <UNPREDICTABLE>
    2230:	000a6010 	andeq	r6, sl, r0, lsl r0
    2234:	57000110 	smladpl	r0, r0, r1, r0
	...
    2244:	100009e2 	andne	r0, r0, r2, ror #19
    2248:	10000a4a 	andne	r0, r0, sl, asr #20
    224c:	00910002 	addseq	r0, r1, r2
    2250:	10000a4a 	andne	r0, r0, sl, asr #20
    2254:	10000a60 	andne	r0, r0, r0, ror #20
    2258:	00910002 	addseq	r0, r1, r2
	...
    2268:	100009e2 	andne	r0, r0, r2, ror #19
    226c:	10000a24 	andne	r0, r0, r4, lsr #20
    2270:	04910002 	ldreq	r0, [r1], #2
    2274:	10000a24 	andne	r0, r0, r4, lsr #20
    2278:	10000a42 	andne	r0, r0, r2, asr #20
    227c:	00540001 	subseq	r0, r4, r1
	...
    2288:	e2000000 	and	r0, r0, #0
    228c:	4a100009 	bmi	4022b8 <__RAM_SIZE+0x3022b8>
    2290:	0210000a 	andseq	r0, r0, #10
    2294:	4a089100 	bmi	22669c <__RAM_SIZE+0x12669c>
    2298:	6010000a 	andsvs	r0, r0, sl
    229c:	0210000a 	andseq	r0, r0, #10
    22a0:	00089100 	andeq	r9, r8, r0, lsl #2
	...
    22ac:	e2000000 	and	r0, r0, #0
    22b0:	4a100009 	bmi	4022dc <__RAM_SIZE+0x3022dc>
    22b4:	0210000a 	andseq	r0, r0, #10
    22b8:	4a0c9100 	bmi	3266c0 <__RAM_SIZE+0x2266c0>
    22bc:	6010000a 	andsvs	r0, r0, sl
    22c0:	0210000a 	andseq	r0, r0, #10
    22c4:	000c9100 	andeq	r9, ip, r0, lsl #2
    22c8:	00000000 	andeq	r0, r0, r0
    22cc:	01000000 	mrseq	r0, (UNDEF: 0)
    22d0:	00000000 	andeq	r0, r0, r0
    22d4:	0009fa00 	andeq	pc, r9, r0, lsl #20
    22d8:	000a0610 	andeq	r0, sl, r0, lsl r6
    22dc:	52000110 	andpl	r0, r0, #16, 2
    22e0:	10000a06 	andne	r0, r0, r6, lsl #20
    22e4:	10000a24 	andne	r0, r0, r4, lsr #20
    22e8:	54910002 	ldrpl	r0, [r1], #2
    22ec:	10000a24 	andne	r0, r0, r4, lsr #20
    22f0:	10000a60 	andne	r0, r0, r0, ror #20
    22f4:	01f30004 	mvnseq	r0, r4
    22f8:	00009f52 	andeq	r9, r0, r2, asr pc
	...
    2304:	10000a06 	andne	r0, r0, r6, lsl #20
    2308:	10000a24 	andne	r0, r0, r4, lsr #20
    230c:	00580001 	subseq	r0, r8, r1
	...
    2318:	be000000 	cdplt	0, 0, cr0, cr0, cr0, {0}
    231c:	c2100009 	andsgt	r0, r0, #9
    2320:	01100009 	tsteq	r0, r9
    2324:	09c25000 	stmibeq	r2, {ip, lr}^
    2328:	09e21000 	stmibeq	r2!, {ip}^
    232c:	00011000 	andeq	r1, r1, r0
    2330:	00000051 	andeq	r0, r0, r1, asr r0
    2334:	00000000 	andeq	r0, r0, r0
    2338:	00000100 	andeq	r0, r0, r0, lsl #2
    233c:	c0000000 	andgt	r0, r0, r0
    2340:	c4100009 	ldrgt	r0, [r0], #-9
    2344:	02100009 	andseq	r0, r0, #9
    2348:	c49f3000 	ldrgt	r3, [pc], #0	; 2350 <__HEAP_SIZE+0x1350>
    234c:	c8100009 	ldmdagt	r0, {r0, r3}
    2350:	01100009 	tsteq	r0, r9
    2354:	09d45000 	ldmibeq	r4, {ip, lr}^
    2358:	09e21000 	stmibeq	r2!, {ip}^
    235c:	00011000 	andeq	r1, r1, r0
    2360:	00000050 	andeq	r0, r0, r0, asr r0
	...
    236c:	0009d800 	andeq	sp, r9, r0, lsl #16
    2370:	0009da10 	andeq	sp, r9, r0, lsl sl
    2374:	53000110 	movwpl	r0, #272	; 0x110
    2378:	100009da 	ldrdne	r0, [r0], -sl
    237c:	100009dc 	ldrdne	r0, [r0], -ip
    2380:	30730003 	rsbscc	r0, r3, r3
    2384:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    2394:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    23a0:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    23a4:	00000008 	andeq	r0, r0, r8
    23a8:	00000000 	andeq	r0, r0, r0
    23ac:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    23c4:	01000000 	mrseq	r0, (UNDEF: 0)
    23c8:	00005000 	andeq	r5, r0, r0
    23cc:	00000000 	andeq	r0, r0, r0
    23d0:	00040000 	andeq	r0, r4, r0
    23d4:	9f5001f3 	svcls	0x005001f3
	...
    23e0:	00500001 	subseq	r0, r0, r1
	...
    23f8:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    2404:	01f30004 	mvnseq	r0, r4
    2408:	00009f51 	andeq	r9, r0, r1, asr pc
    240c:	00000000 	andeq	r0, r0, r0
    2410:	00010000 	andeq	r0, r1, r0
    2414:	00000051 	andeq	r0, r0, r1, asr r0
	...
    2428:	01000000 	mrseq	r0, (UNDEF: 0)
    242c:	00005200 	andeq	r5, r0, r0, lsl #4
    2430:	00000000 	andeq	r0, r0, r0
    2434:	00040000 	andeq	r0, r4, r0
    2438:	9f5201f3 	svcls	0x005201f3
	...
    2444:	00520001 	subseq	r0, r2, r1
	...
    245c:	53000100 	movwpl	r0, #256	; 0x100
	...
    2468:	01f30004 	mvnseq	r0, r4
    246c:	00009f53 	andeq	r9, r0, r3, asr pc
    2470:	00000000 	andeq	r0, r0, r0
    2474:	00010000 	andeq	r0, r1, r0
    2478:	00000053 	andeq	r0, r0, r3, asr r0
    247c:	00000000 	andeq	r0, r0, r0
    2480:	001b0000 	andseq	r0, fp, r0
    2484:	001b0610 	andseq	r0, fp, r0, lsl r6
    2488:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    248c:	001b0600 	andseq	r0, fp, r0, lsl #12
    2490:	001b0c10 	andseq	r0, fp, r0, lsl ip
    2494:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    2498:	00000008 	andeq	r0, r0, r8
	...
    24a4:	001b0000 	andseq	r0, fp, r0
    24a8:	001b0910 	andseq	r0, fp, r0, lsl r9
    24ac:	50000110 	andpl	r0, r0, r0, lsl r1
    24b0:	10001b09 	andne	r1, r0, r9, lsl #22
    24b4:	10001b0c 	andne	r1, r0, ip, lsl #22
    24b8:	01f30004 	mvnseq	r0, r4
    24bc:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    24c8:	1b000000 	blne	24d0 <__HEAP_SIZE+0x14d0>
    24cc:	1b091000 	blne	2464d4 <__RAM_SIZE+0x1464d4>
    24d0:	00011000 	andeq	r1, r1, r0
    24d4:	001b0951 	andseq	r0, fp, r1, asr r9
    24d8:	001b0c10 	andseq	r0, fp, r0, lsl ip
    24dc:	f3000410 	vqshl.u8	d0, d0, d0
    24e0:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
    24f0:	0910001b 	ldmdbeq	r0, {r0, r1, r3, r4}
    24f4:	0110001b 	tsteq	r0, fp, lsl r0
    24f8:	1b095200 	blne	256d00 <__RAM_SIZE+0x156d00>
    24fc:	1b0c1000 	blne	306504 <__RAM_SIZE+0x206504>
    2500:	00041000 	andeq	r1, r4, r0
    2504:	9f5201f3 	svcls	0x005201f3
	...
    2514:	10001b00 	andne	r1, r0, r0, lsl #22
    2518:	10001b09 	andne	r1, r0, r9, lsl #22
    251c:	09530001 	ldmdbeq	r3, {r0}^
    2520:	0c10001b 	ldceq	0, cr0, [r0], {27}
    2524:	0410001b 	ldreq	r0, [r0], #-27	; 0xffffffe5
    2528:	5301f300 	movwpl	pc, #4864	; 0x1300	; <UNPREDICTABLE>
    252c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    253c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    2548:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    254c:	00000010 	andeq	r0, r0, r0, lsl r0
	...
    2560:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    256c:	00560001 	subseq	r0, r6, r1
	...
    2580:	01000000 	mrseq	r0, (UNDEF: 0)
    2584:	00005100 	andeq	r5, r0, r0, lsl #2
    2588:	00000000 	andeq	r0, r0, r0
    258c:	00010000 	andeq	r0, r1, r0
    2590:	00000055 	andeq	r0, r0, r5, asr r0
    2594:	00000000 	andeq	r0, r0, r0
    2598:	00000100 	andeq	r0, r0, r0, lsl #2
    259c:	00000001 	andeq	r0, r0, r1
    25a0:	00000000 	andeq	r0, r0, r0
    25a4:	02000000 	andeq	r0, r0, #0
    25a8:	009f3000 	addseq	r3, pc, r0
    25ac:	00000000 	andeq	r0, r0, r0
    25b0:	01000000 	mrseq	r0, (UNDEF: 0)
    25b4:	00005000 	andeq	r5, r0, r0
    25b8:	00000000 	andeq	r0, r0, r0
    25bc:	00010000 	andeq	r0, r1, r0
    25c0:	00000050 	andeq	r0, r0, r0, asr r0
    25c4:	00000000 	andeq	r0, r0, r0
    25c8:	00000200 	andeq	r0, r0, r0, lsl #4
	...
    25d4:	30000200 	andcc	r0, r0, r0, lsl #4
    25d8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    25dc:	00000000 	andeq	r0, r0, r0
    25e0:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    25f4:	007d0002 	rsbseq	r0, sp, r2
	...
    2600:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    2618:	00500001 	subseq	r0, r0, r1
    261c:	00000000 	andeq	r0, r0, r0
    2620:	04000000 	streq	r0, [r0], #-0
    2624:	5001f300 	andpl	pc, r1, r0, lsl #6
    2628:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    262c:	00000000 	andeq	r0, r0, r0
    2630:	001b4c00 	andseq	r4, fp, r0, lsl #24
    2634:	001b4e10 	andseq	r4, fp, r0, lsl lr
    2638:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    263c:	001b4e00 	andseq	r4, fp, r0, lsl #28
    2640:	001b6a10 	andseq	r6, fp, r0, lsl sl
    2644:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    2648:	00000010 	andeq	r0, r0, r0, lsl r0
	...
    2654:	001b4c00 	andseq	r4, fp, r0, lsl #24
    2658:	001b5410 	andseq	r5, fp, r0, lsl r4
    265c:	50000110 	andpl	r0, r0, r0, lsl r1
    2660:	10001b54 	andne	r1, r0, r4, asr fp
    2664:	10001b6a 	andne	r1, r0, sl, ror #22
    2668:	00550001 	subseq	r0, r5, r1
    266c:	00000000 	andeq	r0, r0, r0
    2670:	01000000 	mrseq	r0, (UNDEF: 0)
    2674:	50000000 	andpl	r0, r0, r0
    2678:	5410001b 	ldrpl	r0, [r0], #-27	; 0xffffffe5
    267c:	0210001b 	andseq	r0, r0, #27
    2680:	549f3000 	ldrpl	r3, [pc], #0	; 2688 <__HEAP_SIZE+0x1688>
    2684:	6a10001b 	bvs	4026f8 <__RAM_SIZE+0x3026f8>
    2688:	0110001b 	tsteq	r0, fp, lsl r0
    268c:	00005400 	andeq	r5, r0, r0, lsl #8
    2690:	00000000 	andeq	r0, r0, r0
    2694:	00010000 	andeq	r0, r1, r0
    2698:	10001b38 	andne	r1, r0, r8, lsr fp
    269c:	10001b4c 	andne	r1, r0, ip, asr #22
    26a0:	00500001 	subseq	r0, r0, r1
	...
    26b8:	01000000 	mrseq	r0, (UNDEF: 0)
    26bc:	00005000 	andeq	r5, r0, r0
    26c0:	00000000 	andeq	r0, r0, r0
    26c4:	00050000 	andeq	r0, r5, r0
    26c8:	00000803 	andeq	r0, r0, r3, lsl #16
    26cc:	00000038 	andeq	r0, r0, r8, lsr r0
    26d0:	00000000 	andeq	r0, r0, r0
    26d4:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    26e0:	01f30004 	mvnseq	r0, r4
    26e4:	00009f50 	andeq	r9, r0, r0, asr pc
    26e8:	00000000 	andeq	r0, r0, r0
    26ec:	01020000 	mrseq	r0, (UNDEF: 2)
    26f0:	00000001 	andeq	r0, r0, r1
	...
    26fc:	9f320002 	svcls	0x00320002
	...
    2708:	9f300002 	svcls	0x00300002
	...
    2714:	9f320002 	svcls	0x00320002
	...
    2720:	1e900100 	fmlnes	f0, f0, f0
    2724:	1e901000 	cdpne	0, 9, cr1, cr0, cr0, {0}
    2728:	00011000 	andeq	r1, r1, r0
    272c:	00000050 	andeq	r0, r0, r0, asr r0
    2730:	00000000 	andeq	r0, r0, r0
    2734:	001bf400 	andseq	pc, fp, r0, lsl #8
    2738:	001bf810 	andseq	pc, fp, r0, lsl r8	; <UNPREDICTABLE>
    273c:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    2740:	001bf800 	andseq	pc, fp, r0, lsl #16
    2744:	001c7010 	andseq	r7, ip, r0, lsl r0
    2748:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    274c:	00000020 	andeq	r0, r0, r0, lsr #32
	...
    275c:	001bf400 	andseq	pc, fp, r0, lsl #8
    2760:	001c0e10 	andseq	r0, ip, r0, lsl lr
    2764:	50000110 	andpl	r0, r0, r0, lsl r1
    2768:	10001c0e 	andne	r1, r0, lr, lsl #24
    276c:	10001c48 	andne	r1, r0, r8, asr #24
    2770:	48580001 	ldmdami	r8, {r0}^
    2774:	4e10001c 	mrcmi	0, 0, r0, cr0, cr12, {0}
    2778:	0410001c 	ldreq	r0, [r0], #-28	; 0xffffffe4
    277c:	5001f300 	andpl	pc, r1, r0, lsl #6
    2780:	001c4e9f 	mulseq	ip, pc, lr	; <UNPREDICTABLE>
    2784:	001c7010 	andseq	r7, ip, r0, lsl r0
    2788:	50000110 	andpl	r0, r0, r0, lsl r1
	...
    279c:	10001bf4 	strdne	r1, [r0], -r4
    27a0:	10001c0e 	andne	r1, r0, lr, lsl #24
    27a4:	0e510001 	cdpeq	0, 5, cr0, cr1, cr1, {0}
    27a8:	4810001c 	ldmdami	r0, {r2, r3, r4}
    27ac:	0110001c 	tsteq	r0, ip, lsl r0
    27b0:	1c485700 	mcrrne	7, 0, r5, r8, cr0
    27b4:	1c4e1000 	marne	acc0, r1, lr
    27b8:	00041000 	andeq	r1, r4, r0
    27bc:	9f5101f3 	svcls	0x005101f3
    27c0:	10001c4e 	andne	r1, r0, lr, asr #24
    27c4:	10001c70 	andne	r1, r0, r0, ror ip
    27c8:	00510001 	subseq	r0, r1, r1
	...
    27d8:	001bf400 	andseq	pc, fp, r0, lsl #8
    27dc:	001c0e10 	andseq	r0, ip, r0, lsl lr
    27e0:	52000110 	andpl	r0, r0, #16, 2
    27e4:	10001c0e 	andne	r1, r0, lr, lsl #24
    27e8:	10001c4e 	andne	r1, r0, lr, asr #24
    27ec:	01f30004 	mvnseq	r0, r4
    27f0:	1c4e9f52 	mcrrne	15, 5, r9, lr, cr2
    27f4:	1c701000 	ldclne	0, cr1, [r0], #-0
    27f8:	00011000 	andeq	r1, r1, r0
    27fc:	00000052 	andeq	r0, r0, r2, asr r0
	...
    280c:	001bf400 	andseq	pc, fp, r0, lsl #8
    2810:	001c0e10 	andseq	r0, ip, r0, lsl lr
    2814:	53000110 	movwpl	r0, #272	; 0x110
    2818:	10001c0e 	andne	r1, r0, lr, lsl #24
    281c:	10001c48 	andne	r1, r0, r8, asr #24
    2820:	48550001 	ldmdami	r5, {r0}^
    2824:	4e10001c 	mrcmi	0, 0, r0, cr0, cr12, {0}
    2828:	0410001c 	ldreq	r0, [r0], #-28	; 0xffffffe4
    282c:	5301f300 	movwpl	pc, #4864	; 0x1300	; <UNPREDICTABLE>
    2830:	001c4e9f 	mulseq	ip, pc, lr	; <UNPREDICTABLE>
    2834:	001c7010 	andseq	r7, ip, r0, lsl r0
    2838:	53000110 	movwpl	r0, #272	; 0x110
	...
    2844:	00000001 	andeq	r0, r0, r1
    2848:	1bf80000 	blne	ffe02850 <__StackTop+0xc7d02850>
    284c:	1c0e1000 	stcne	0, cr1, [lr], {-0}
    2850:	00021000 	andeq	r1, r2, r0
    2854:	1c0e9f30 	stcne	15, cr9, [lr], {48}	; 0x30
    2858:	1c481000 	marne	acc0, r1, r8
    285c:	00011000 	andeq	r1, r1, r0
    2860:	001c4e56 	andseq	r4, ip, r6, asr lr
    2864:	001c6410 	andseq	r6, ip, r0, lsl r4
    2868:	30000210 	andcc	r0, r0, r0, lsl r2
    286c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    2870:	00000000 	andeq	r0, r0, r0
    2874:	00000200 	andeq	r0, r0, r0, lsl #4
    2878:	00000101 	andeq	r0, r0, r1, lsl #2
    287c:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
    2880:	0e10001b 	mrceq	0, 0, r0, cr0, cr11, {0}
    2884:	0210001c 	andseq	r0, r0, #28
    2888:	189f3000 	ldmne	pc, {ip, sp}	; <UNPREDICTABLE>
    288c:	2a10001c 	bcs	402904 <__RAM_SIZE+0x302904>
    2890:	0110001c 	tsteq	r0, ip, lsl r0
    2894:	1c2a5200 	sfmne	f5, 4, [sl], #-0
    2898:	1c2e1000 	stcne	0, cr1, [lr], #-0
    289c:	00031000 	andeq	r1, r3, r0
    28a0:	2e9f7f72 	mrccs	15, 4, r7, cr15, cr2, {3}
    28a4:	4810001c 	ldmdami	r0, {r2, r3, r4}
    28a8:	0110001c 	tsteq	r0, ip, lsl r0
    28ac:	1c4e5900 	mcrrne	9, 0, r5, lr, cr0	; <UNPREDICTABLE>
    28b0:	1c701000 	ldclne	0, cr1, [r0], #-0
    28b4:	00021000 	andeq	r1, r2, r0
    28b8:	00009f30 	andeq	r9, r0, r0, lsr pc
    28bc:	00000000 	andeq	r0, r0, r0
    28c0:	00020000 	andeq	r0, r2, r0
    28c4:	00000000 	andeq	r0, r0, r0
    28c8:	10001bf8 	strdne	r1, [r0], -r8
    28cc:	10001c0e 	andne	r1, r0, lr, lsl #24
    28d0:	9f300002 	svcls	0x00300002
    28d4:	10001c36 	andne	r1, r0, r6, lsr ip
    28d8:	10001c39 	andne	r1, r0, r9, lsr ip
    28dc:	4e500001 	cdpmi	0, 5, cr0, cr0, cr1, {0}
    28e0:	7010001c 	andsvc	r0, r0, ip, lsl r0
    28e4:	0210001c 	andseq	r0, r0, #28
    28e8:	009f3000 	addseq	r3, pc, r0
    28ec:	00000000 	andeq	r0, r0, r0
    28f0:	02000000 	andeq	r0, r0, #0
    28f4:	00000000 	andeq	r0, r0, r0
    28f8:	001bf800 	andseq	pc, fp, r0, lsl #16
    28fc:	001c0e10 	andseq	r0, ip, r0, lsl lr
    2900:	30000210 	andcc	r0, r0, r0, lsl r2
    2904:	001c0e9f 	mulseq	ip, pc, lr	; <UNPREDICTABLE>
    2908:	001c4810 	andseq	r4, ip, r0, lsl r8
    290c:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    2910:	10001c4e 	andne	r1, r0, lr, asr #24
    2914:	10001c70 	andne	r1, r0, r0, ror ip
    2918:	9f300002 	svcls	0x00300002
	...
    2924:	10001ce0 	andne	r1, r0, r0, ror #25
    2928:	10001ce2 	andne	r1, r0, r2, ror #25
    292c:	007d0002 	rsbseq	r0, sp, r2
    2930:	10001ce2 	andne	r1, r0, r2, ror #25
    2934:	10001e8c 	andne	r1, r0, ip, lsl #29
    2938:	187d0002 	ldmdane	sp!, {r1}^
	...
    294c:	1ce00000 	stclne	0, cr0, [r0]
    2950:	1d2c1000 	stcne	0, cr1, [ip, #-0]
    2954:	00011000 	andeq	r1, r1, r0
    2958:	001d2c50 	andseq	r2, sp, r0, asr ip
    295c:	001de210 	andseq	lr, sp, r0, lsl r2
    2960:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
    2964:	10001de2 	andne	r1, r0, r2, ror #27
    2968:	10001df6 	strdne	r1, [r0], -r6
    296c:	01f30004 	mvnseq	r0, r4
    2970:	1df69f50 	ldclne	15, cr9, [r6, #320]!	; 0x140
    2974:	1e061000 	cdpne	0, 0, cr1, cr6, cr0, {0}
    2978:	00011000 	andeq	r1, r1, r0
    297c:	001e0655 	andseq	r0, lr, r5, asr r6
    2980:	001e8c10 	andseq	r8, lr, r0, lsl ip
    2984:	f3000410 	vqshl.u8	d0, d0, d0
    2988:	009f5001 	addseq	r5, pc, r1
	...
    2994:	e0000000 	and	r0, r0, r0
    2998:	2f10001c 	svccs	0x0010001c
    299c:	0110001d 	tsteq	r0, sp, lsl r0
    29a0:	1d2f5100 	stfnes	f5, [pc, #-0]	; 29a8 <__HEAP_SIZE+0x19a8>
    29a4:	1e8c1000 	cdpne	0, 8, cr1, cr12, cr0, {0}
    29a8:	00011000 	andeq	r1, r1, r0
    29ac:	00000056 	andeq	r0, r0, r6, asr r0
    29b0:	00000000 	andeq	r0, r0, r0
    29b4:	00000100 	andeq	r0, r0, r0, lsl #2
	...
    29c0:	001ce600 	andseq	lr, ip, r0, lsl #12
    29c4:	001de210 	andseq	lr, sp, r0, lsl r2
    29c8:	30000210 	andcc	r0, r0, r0, lsl r2
    29cc:	001de29f 	mulseq	sp, pc, r2	; <UNPREDICTABLE>
    29d0:	001de410 	andseq	lr, sp, r0, lsl r4
    29d4:	50000110 	andpl	r0, r0, r0, lsl r1
    29d8:	10001de4 	andne	r1, r0, r4, ror #27
    29dc:	10001df6 	strdne	r1, [r0], -r6
    29e0:	f6550001 			; <UNDEFINED> instruction: 0xf6550001
    29e4:	0610001d 			; <UNDEFINED> instruction: 0x0610001d
    29e8:	0210001e 	andseq	r0, r0, #30
    29ec:	069f3000 	ldreq	r3, [pc], r0
    29f0:	0810001e 	ldmdaeq	r0, {r1, r2, r3, r4}
    29f4:	0110001e 	tsteq	r0, lr, lsl r0
    29f8:	1e085000 	cdpne	0, 0, cr5, cr8, cr0, {0}
    29fc:	1e8c1000 	cdpne	0, 8, cr1, cr12, cr0, {0}
    2a00:	00011000 	andeq	r1, r1, r0
    2a04:	00000055 	andeq	r0, r0, r5, asr r0
    2a08:	00000000 	andeq	r0, r0, r0
    2a0c:	01010100 	mrseq	r0, (UNDEF: 17)
    2a10:	00000101 	andeq	r0, r0, r1, lsl #2
    2a14:	e6000000 	str	r0, [r0], -r0
    2a18:	c810001c 	ldmdagt	r0, {r2, r3, r4}
    2a1c:	0210001d 	andseq	r0, r0, #29
    2a20:	c89f3000 	ldmgt	pc, {ip, sp}	; <UNPREDICTABLE>
    2a24:	f210001d 	vqadd.s16	d0, d0, d13
    2a28:	0210001d 	andseq	r0, r0, #29
    2a2c:	f29f4000 	vaddl.s16	q2, d15, d0
    2a30:	f610001d 			; <UNDEFINED> instruction: 0xf610001d
    2a34:	0210001d 	andseq	r0, r0, #29
    2a38:	f69f3000 			; <UNDEFINED> instruction: 0xf69f3000
    2a3c:	0810001d 	ldmdaeq	r0, {r0, r2, r3, r4}
    2a40:	0210001e 	andseq	r0, r0, #30
    2a44:	089f4000 	ldmeq	pc, {lr}	; <UNPREDICTABLE>
    2a48:	8c10001e 	ldchi	0, cr0, [r0], {30}
    2a4c:	0110001e 	tsteq	r0, lr, lsl r0
    2a50:	00005400 	andeq	r5, r0, r0, lsl #8
    2a54:	00000000 	andeq	r0, r0, r0
    2a58:	05020000 	streq	r0, [r2, #-0]
    2a5c:	01010105 	tsteq	r1, r5, lsl #2
    2a60:	01010101 	tsteq	r1, r1, lsl #2
    2a64:	01010101 	tsteq	r1, r1, lsl #2
    2a68:	01010101 	tsteq	r1, r1, lsl #2
    2a6c:	01010101 	tsteq	r1, r1, lsl #2
    2a70:	01010101 	tsteq	r1, r1, lsl #2
    2a74:	01010101 	tsteq	r1, r1, lsl #2
    2a78:	00010101 	andeq	r0, r1, r1, lsl #2
	...
    2a84:	10001ce6 	andne	r1, r0, r6, ror #25
    2a88:	10001ce6 	andne	r1, r0, r6, ror #25
    2a8c:	e6500001 	ldrb	r0, [r0], -r1
    2a90:	ec10001c 	ldc	0, cr0, [r0], {28}
    2a94:	0310001c 	tsteq	r0, #28
    2a98:	9f047000 	svcls	0x00047000
    2a9c:	10001cec 	andne	r1, r0, ip, ror #25
    2aa0:	10001cf0 	strdne	r1, [r0], -r0
    2aa4:	08700003 	ldmdaeq	r0!, {r0, r1}^
    2aa8:	001cf09f 	mulseq	ip, pc, r0	; <UNPREDICTABLE>
    2aac:	001cf410 	andseq	pc, ip, r0, lsl r4	; <UNPREDICTABLE>
    2ab0:	70000310 	andvc	r0, r0, r0, lsl r3
    2ab4:	1cf49f0c 	ldclne	15, cr9, [r4], #48	; 0x30
    2ab8:	1cf81000 	ldclne	0, cr1, [r8]
    2abc:	00031000 	andeq	r1, r3, r0
    2ac0:	f89f1070 			; <UNDEFINED> instruction: 0xf89f1070
    2ac4:	fc10001c 	ldc2	0, cr0, [r0], {28}
    2ac8:	0310001c 	tsteq	r0, #28
    2acc:	9f147000 	svcls	0x00147000
    2ad0:	10001cfc 	strdne	r1, [r0], -ip
    2ad4:	10001d00 	andne	r1, r0, r0, lsl #26
    2ad8:	18700003 	ldmdane	r0!, {r0, r1}^
    2adc:	001d009f 	mulseq	sp, pc, r0	; <UNPREDICTABLE>
    2ae0:	001d0410 	andseq	r0, sp, r0, lsl r4
    2ae4:	70000310 	andvc	r0, r0, r0, lsl r3
    2ae8:	1d049f1c 	stcne	15, cr9, [r4, #-112]	; 0xffffff90
    2aec:	1d081000 	stcne	0, cr1, [r8, #-0]
    2af0:	00031000 	andeq	r1, r3, r0
    2af4:	089f2070 	ldmeq	pc, {r4, r5, r6, sp}	; <UNPREDICTABLE>
    2af8:	0c10001d 	ldceq	0, cr0, [r0], {29}
    2afc:	0310001d 	tsteq	r0, #29
    2b00:	9f247000 	svcls	0x00247000
    2b04:	10001d0c 	andne	r1, r0, ip, lsl #26
    2b08:	10001d10 	andne	r1, r0, r0, lsl sp
    2b0c:	28700003 	ldmdacs	r0!, {r0, r1}^
    2b10:	001d109f 	mulseq	sp, pc, r0	; <UNPREDICTABLE>
    2b14:	001d1410 	andseq	r1, sp, r0, lsl r4
    2b18:	70000310 	andvc	r0, r0, r0, lsl r3
    2b1c:	1d149f2c 	ldcne	15, cr9, [r4, #-176]	; 0xffffff50
    2b20:	1d181000 	ldcne	0, cr1, [r8, #-0]
    2b24:	00031000 	andeq	r1, r3, r0
    2b28:	189f3070 	ldmne	pc, {r4, r5, r6, ip, sp}	; <UNPREDICTABLE>
    2b2c:	1c10001d 	ldcne	0, cr0, [r0], {29}
    2b30:	0310001d 	tsteq	r0, #29
    2b34:	9f347000 	svcls	0x00347000
    2b38:	10001d1c 	andne	r1, r0, ip, lsl sp
    2b3c:	10001d20 	andne	r1, r0, r0, lsr #26
    2b40:	38700003 	ldmdacc	r0!, {r0, r1}^
    2b44:	001d209f 	mulseq	sp, pc, r0	; <UNPREDICTABLE>
    2b48:	001d2410 	andseq	r2, sp, r0, lsl r4
    2b4c:	70000310 	andvc	r0, r0, r0, lsl r3
    2b50:	1d249f3c 	stcne	15, cr9, [r4, #-240]!	; 0xffffff10
    2b54:	1d2c1000 	stcne	0, cr1, [ip, #-0]
    2b58:	00041000 	andeq	r1, r4, r0
    2b5c:	9f00c070 	svcls	0x0000c070
    2b60:	10001d2c 	andne	r1, r0, ip, lsr #26
    2b64:	10001de2 	andne	r1, r0, r2, ror #27
    2b68:	c0750004 	rsbsgt	r0, r5, r4
    2b6c:	1de29f00 	stclne	15, cr9, [r2]
    2b70:	1df61000 	ldclne	0, cr1, [r6]
    2b74:	00061000 	andeq	r1, r6, r0
    2b78:	235001f3 	cmpcs	r0, #-1073741764	; 0xc000003c
    2b7c:	1df69f40 	ldclne	15, cr9, [r6, #256]!	; 0x100
    2b80:	1e061000 	cdpne	0, 0, cr1, cr6, cr0, {0}
    2b84:	00041000 	andeq	r1, r4, r0
    2b88:	9f00c075 	svcls	0x0000c075
    2b8c:	10001e06 	andne	r1, r0, r6, lsl #28
    2b90:	10001e8c 	andne	r1, r0, ip, lsl #29
    2b94:	01f30006 	mvnseq	r0, r6
    2b98:	9f402350 	svcls	0x00402350
	...
    2ba4:	10001c88 	andne	r1, r0, r8, lsl #25
    2ba8:	10001c8a 	andne	r1, r0, sl, lsl #25
    2bac:	007d0002 	rsbseq	r0, sp, r2
    2bb0:	10001c8a 	andne	r1, r0, sl, lsl #25
    2bb4:	10001c90 	mulne	r0, r0, ip
    2bb8:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    2bc8:	10001c88 	andne	r1, r0, r8, lsl #25
    2bcc:	10001c8d 	andne	r1, r0, sp, lsl #25
    2bd0:	8d500001 	ldclhi	0, cr0, [r0, #-4]
    2bd4:	9010001c 	andsls	r0, r0, ip, lsl r0
    2bd8:	0410001c 	ldreq	r0, [r0], #-28	; 0xffffffe4
    2bdc:	5001f300 	andpl	pc, r1, r0, lsl #6
    2be0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    2be4:	00000000 	andeq	r0, r0, r0
    2be8:	00000100 	andeq	r0, r0, r0, lsl #2
    2bec:	001c8a00 	andseq	r8, ip, r0, lsl #20
    2bf0:	001c8e10 	andseq	r8, ip, r0, lsl lr
    2bf4:	31000210 	tstcc	r0, r0, lsl r2
    2bf8:	001c8e9f 	mulseq	ip, pc, lr	; <UNPREDICTABLE>
    2bfc:	001c9010 	andseq	r9, ip, r0, lsl r0
    2c00:	50000110 	andpl	r0, r0, r0, lsl r1
	...
    2c0c:	10001c70 	andne	r1, r0, r0, ror ip
    2c10:	10001c72 	andne	r1, r0, r2, ror ip
    2c14:	007d0002 	rsbseq	r0, sp, r2
    2c18:	10001c72 	andne	r1, r0, r2, ror ip
    2c1c:	10001c88 	andne	r1, r0, r8, lsl #25
    2c20:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    2c34:	10001c70 	andne	r1, r0, r0, ror ip
    2c38:	10001c78 	andne	r1, r0, r8, ror ip
    2c3c:	78500001 	ldmdavc	r0, {r0}^
    2c40:	7b10001c 	blvc	402cb8 <__RAM_SIZE+0x302cb8>
    2c44:	0110001c 	tsteq	r0, ip, lsl r0
    2c48:	1c7b5100 	ldfnee	f5, [fp], #-0
    2c4c:	1c841000 	stcne	0, cr1, [r4], {0}
    2c50:	00011000 	andeq	r1, r1, r0
    2c54:	001c8454 	andseq	r8, ip, r4, asr r4
    2c58:	001c8810 	andseq	r8, ip, r0, lsl r8
    2c5c:	f3000410 	vqshl.u8	d0, d0, d0
    2c60:	009f5001 	addseq	r5, pc, r1
	...
    2c6c:	bc000000 	stclt	0, cr0, [r0], {-0}
    2c70:	c210001b 	andsgt	r0, r0, #27
    2c74:	0110001b 	tsteq	r0, fp, lsl r0
    2c78:	1bc25000 	blne	ff096c80 <__StackTop+0xc6f96c80>
    2c7c:	1bf21000 	blne	ffc86c84 <__StackTop+0xc7b86c84>
    2c80:	00041000 	andeq	r1, r4, r0
    2c84:	9f5001f3 	svcls	0x005001f3
	...
    2c90:	1bc00000 	blne	ff002c98 <__StackTop+0xc6f02c98>
    2c94:	1bf21000 	blne	ffc86c9c <__StackTop+0xc7b86c9c>
    2c98:	00011000 	andeq	r1, r1, r0
    2c9c:	00000053 	andeq	r0, r0, r3, asr r0
	...
    2cb8:	001bc600 	andseq	ip, fp, r0, lsl #12
    2cbc:	001be010 	andseq	lr, fp, r0, lsl r0
    2cc0:	50000110 	andpl	r0, r0, r0, lsl r1
    2cc4:	10001be0 	andne	r1, r0, r0, ror #23
    2cc8:	10001be2 	andne	r1, r0, r2, ror #23
    2ccc:	01f3000a 	mvnseq	r0, sl
    2cd0:	0a254050 	beq	952e18 <__RAM_SIZE+0x852e18>
    2cd4:	9f1af800 	svcls	0x001af800
    2cd8:	10001be2 	andne	r1, r0, r2, ror #23
    2cdc:	10001be4 	andne	r1, r0, r4, ror #23
    2ce0:	e4500001 	ldrb	r0, [r0], #-1
    2ce4:	e610001b 			; <UNDEFINED> instruction: 0xe610001b
    2ce8:	0a10001b 	beq	402d5c <__RAM_SIZE+0x302d5c>
    2cec:	5001f300 	andpl	pc, r1, r0, lsl #6
    2cf0:	000a2540 	andeq	r2, sl, r0, asr #10
    2cf4:	e69f1af8 			; <UNDEFINED> instruction: 0xe69f1af8
    2cf8:	e810001b 	ldmda	r0, {r0, r1, r3, r4}
    2cfc:	0110001b 	tsteq	r0, fp, lsl r0
    2d00:	1be85000 	blne	ffa16d08 <__StackTop+0xc7916d08>
    2d04:	1bea1000 	blne	ffa86d0c <__StackTop+0xc7986d0c>
    2d08:	000a1000 	andeq	r1, sl, r0
    2d0c:	405001f3 	ldrshmi	r0, [r0], #-19	; 0xffffffed
    2d10:	f8000a25 			; <UNDEFINED> instruction: 0xf8000a25
    2d14:	1bea9f1a 	blne	ffaaa984 <__StackTop+0xc79aa984>
    2d18:	1bec1000 	blne	ffb06d20 <__StackTop+0xc7a06d20>
    2d1c:	00011000 	andeq	r1, r1, r0
    2d20:	001bec50 	andseq	lr, fp, r0, asr ip
    2d24:	001bee10 	andseq	lr, fp, r0, lsl lr
    2d28:	f3000a10 	vpmin.u8	d0, d0, d0
    2d2c:	25405001 	strbcs	r5, [r0, #-1]
    2d30:	1af8000a 	bne	ffe02d60 <__StackTop+0xc7d02d60>
    2d34:	001bee9f 	mulseq	fp, pc, lr	; <UNPREDICTABLE>
    2d38:	001bf010 	andseq	pc, fp, r0, lsl r0	; <UNPREDICTABLE>
    2d3c:	50000110 	andpl	r0, r0, r0, lsl r1
    2d40:	10001bf0 	strdne	r1, [r0], -r0
    2d44:	10001bf2 	strdne	r1, [r0], -r2
    2d48:	01f3000a 	mvnseq	r0, sl
    2d4c:	0a254050 	beq	952e94 <__RAM_SIZE+0x852e94>
    2d50:	9f1af800 	svcls	0x001af800
	...
    2d5c:	10001b90 	mulne	r0, r0, fp
    2d60:	10001b92 	mulne	r0, r2, fp
    2d64:	007d0002 	rsbseq	r0, sp, r2
    2d68:	10001b92 	mulne	r0, r2, fp
    2d6c:	10001bba 			; <UNDEFINED> instruction: 0x10001bba
    2d70:	087d0002 	ldmdaeq	sp!, {r1}^
    2d74:	10001bba 			; <UNDEFINED> instruction: 0x10001bba
    2d78:	10001bbc 			; <UNDEFINED> instruction: 0x10001bbc
    2d7c:	007d0002 	rsbseq	r0, sp, r2
	...
    2d8c:	10001b90 	mulne	r0, r0, fp
    2d90:	10001bb0 			; <UNDEFINED> instruction: 0x10001bb0
    2d94:	b0500001 	subslt	r0, r0, r1
    2d98:	bc10001b 	ldclt	0, cr0, [r0], {27}
    2d9c:	0410001b 	ldreq	r0, [r0], #-27	; 0xffffffe5
    2da0:	5001f300 	andpl	pc, r1, r0, lsl #6
    2da4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    2da8:	00000000 	andeq	r0, r0, r0
    2dac:	00000100 	andeq	r0, r0, r0, lsl #2
    2db0:	96000000 	strls	r0, [r0], -r0
    2db4:	b410001b 	ldrlt	r0, [r0], #-27	; 0xffffffe5
    2db8:	0210001b 	andseq	r0, r0, #27
    2dbc:	b49f3000 	ldrlt	r3, [pc], #0	; 2dc4 <__HEAP_SIZE+0x1dc4>
    2dc0:	b810001b 	ldmdalt	r0, {r0, r1, r3, r4}
    2dc4:	0810001b 	ldmdaeq	r0, {r0, r1, r3, r4}
    2dc8:	40007000 	andmi	r7, r0, r0
    2dcc:	21007324 	tstcs	r0, r4, lsr #6
    2dd0:	001bb89f 	mulseq	fp, pc, r8	; <UNPREDICTABLE>
    2dd4:	001bbc10 	andseq	fp, fp, r0, lsl ip
    2dd8:	50000110 	andpl	r0, r0, r0, lsl r1
	...
    2de4:	00000003 	andeq	r0, r0, r3
    2de8:	10001b96 	mulne	r0, r6, fp
    2dec:	10001b98 	mulne	r0, r8, fp
    2df0:	9f300002 	svcls	0x00300002
    2df4:	10001b98 	mulne	r0, r8, fp
    2df8:	10001bb4 			; <UNDEFINED> instruction: 0x10001bb4
    2dfc:	00530001 	subseq	r0, r3, r1
    2e00:	00000000 	andeq	r0, r0, r0
    2e04:	90000000 	andls	r0, r0, r0
    2e08:	9210001c 	andsls	r0, r0, #28
    2e0c:	0210001c 	andseq	r0, r0, #28
    2e10:	92007d00 	andls	r7, r0, #0, 26
    2e14:	e010001c 	ands	r0, r0, ip, lsl r0
    2e18:	0210001c 	andseq	r0, r0, #28
    2e1c:	00087d00 	andeq	r7, r8, r0, lsl #26
    2e20:	00000000 	andeq	r0, r0, r0
    2e24:	a8000000 	stmdage	r0, {}	; <UNPREDICTABLE>
    2e28:	aa10001f 	bge	402eac <__RAM_SIZE+0x302eac>
    2e2c:	0210001f 	andseq	r0, r0, #31
    2e30:	aa007d00 	bge	22238 <__HEAP_SIZE+0x21238>
    2e34:	ac10001f 	ldcge	0, cr0, [r0], {31}
    2e38:	0210001f 	andseq	r0, r0, #31
    2e3c:	ac0c7d00 	stcge	13, cr7, [ip], {-0}
    2e40:	ea10001f 	b	402ec4 <__RAM_SIZE+0x302ec4>
    2e44:	0210001f 	andseq	r0, r0, #31
    2e48:	ea187d00 	b	622250 <__RAM_SIZE+0x522250>
    2e4c:	f410001f 			; <UNDEFINED> instruction: 0xf410001f
    2e50:	0210001f 	andseq	r0, r0, #31
    2e54:	000c7d00 	andeq	r7, ip, r0, lsl #26
    2e58:	00000000 	andeq	r0, r0, r0
    2e5c:	01000000 	mrseq	r0, (UNDEF: 0)
    2e60:	01010101 	tsteq	r1, r1, lsl #2
    2e64:	001fac00 	andseq	sl, pc, r0, lsl #24
    2e68:	001fca10 	andseq	ip, pc, r0, lsl sl	; <UNPREDICTABLE>
    2e6c:	30000210 	andcc	r0, r0, r0, lsl r2
    2e70:	001fca9f 	mulseq	pc, pc, sl	; <UNPREDICTABLE>
    2e74:	001fd810 	andseq	sp, pc, r0, lsl r8	; <UNPREDICTABLE>
    2e78:	34000210 	strcc	r0, [r0], #-528	; 0xfffffdf0
    2e7c:	001fd89f 	mulseq	pc, pc, r8	; <UNPREDICTABLE>
    2e80:	001ff410 	andseq	pc, pc, r0, lsl r4	; <UNPREDICTABLE>
    2e84:	33000210 	movwcc	r0, #528	; 0x210
    2e88:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    2e98:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    2ea4:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    2ea8:	00000008 	andeq	r0, r0, r8
	...
    2eb8:	001f9800 	andseq	r9, pc, r0, lsl #16
    2ebc:	001fa010 	andseq	sl, pc, r0, lsl r0	; <UNPREDICTABLE>
    2ec0:	50000110 	andpl	r0, r0, r0, lsl r1
    2ec4:	10001fa0 	andne	r1, r0, r0, lsr #31
    2ec8:	10001fa2 	andne	r1, r0, r2, lsr #31
    2ecc:	01f30004 	mvnseq	r0, r4
    2ed0:	1fa29f50 	svcne	0x00a29f50
    2ed4:	1fa41000 	svcne	0x00a41000
    2ed8:	00011000 	andeq	r1, r1, r0
    2edc:	001fa450 	andseq	sl, pc, r0, asr r4	; <UNPREDICTABLE>
    2ee0:	001fa610 	andseq	sl, pc, r0, lsl r6	; <UNPREDICTABLE>
    2ee4:	f3000410 	vqshl.u8	d0, d0, d0
    2ee8:	009f5001 	addseq	r5, pc, r1
    2eec:	00000000 	andeq	r0, r0, r0
    2ef0:	9c000000 	stcls	0, cr0, [r0], {-0}
    2ef4:	9e10001e 	mrcls	0, 0, r0, cr0, cr14, {0}
    2ef8:	0210001e 	andseq	r0, r0, #30
    2efc:	9e007d00 	cdpls	13, 0, cr7, cr0, cr0, {0}
    2f00:	9810001e 	ldmdals	r0, {r1, r2, r3, r4}
    2f04:	0210001f 	andseq	r0, r0, #31
    2f08:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    2f14:	9c000000 	stcls	0, cr0, [r0], {-0}
    2f18:	a210001e 	andsge	r0, r0, #30
    2f1c:	0110001e 	tsteq	r0, lr, lsl r0
    2f20:	1ea25000 	cdpne	0, 10, cr5, cr2, cr0, {0}
    2f24:	1f981000 	svcne	0x00981000
    2f28:	00011000 	andeq	r1, r1, r0
    2f2c:	00000054 	andeq	r0, r0, r4, asr r0
	...
    2f38:	46000000 	strmi	r0, [r0], -r0
    2f3c:	5e100020 	cdppl	0, 1, cr0, cr0, cr0, {1}
    2f40:	01100020 	tsteq	r0, r0, lsr #32
    2f44:	205e5000 	subscs	r5, lr, r0
    2f48:	20641000 	rsbcs	r1, r4, r0
    2f4c:	00041000 	andeq	r1, r4, r0
    2f50:	9f5001f3 	svcls	0x005001f3
    2f54:	10002064 	andne	r2, r0, r4, rrx
    2f58:	1000206a 	andne	r2, r0, sl, rrx
    2f5c:	00500001 	subseq	r0, r0, r1
	...
    2f68:	00204800 	eoreq	r4, r0, r0, lsl #16
    2f6c:	00206a10 	eoreq	r6, r0, r0, lsl sl
    2f70:	53000110 	movwpl	r0, #272	; 0x110
	...
    2f7c:	10002014 	andne	r2, r0, r4, lsl r0
    2f80:	10002016 	andne	r2, r0, r6, lsl r0
    2f84:	007d0002 	rsbseq	r0, sp, r2
    2f88:	10002016 	andne	r2, r0, r6, lsl r0
    2f8c:	10002040 	andne	r2, r0, r0, asr #32
    2f90:	087d0002 	ldmdaeq	sp!, {r1}^
    2f94:	10002040 	andne	r2, r0, r0, asr #32
    2f98:	10002042 	andne	r2, r0, r2, asr #32
    2f9c:	007d0002 	rsbseq	r0, sp, r2
    2fa0:	10002042 	andne	r2, r0, r2, asr #32
    2fa4:	10002046 	andne	r2, r0, r6, asr #32
    2fa8:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    2fb8:	20220000 	eorcs	r0, r2, r0
    2fbc:	20261000 	eorcs	r1, r6, r0
    2fc0:	00011000 	andeq	r1, r1, r0
    2fc4:	00202653 	eoreq	r2, r0, r3, asr r6
    2fc8:	00204010 	eoreq	r4, r0, r0, lsl r0
    2fcc:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    2fd0:	10002044 	andne	r2, r0, r4, asr #32
    2fd4:	10002046 	andne	r2, r0, r6, asr #32
    2fd8:	00540001 	subseq	r0, r4, r1
	...
    2fe4:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    2fe8:	40100020 	andsmi	r0, r0, r0, lsr #32
    2fec:	01100020 	tsteq	r0, r0, lsr #32
    2ff0:	20425500 	subcs	r5, r2, r0, lsl #10
    2ff4:	20461000 	subcs	r1, r6, r0
    2ff8:	00011000 	andeq	r1, r1, r0
    2ffc:	00000055 	andeq	r0, r0, r5, asr r0
	...
    300c:	01000000 	mrseq	r0, (UNDEF: 0)
    3010:	00005300 	andeq	r5, r0, r0, lsl #6
    3014:	00000000 	andeq	r0, r0, r0
    3018:	211e0000 	tstcs	lr, r0
    301c:	21201000 			; <UNDEFINED> instruction: 0x21201000
    3020:	00021000 	andeq	r1, r2, r0
    3024:	2120007d 			; <UNDEFINED> instruction: 0x2120007d
    3028:	21221000 			; <UNDEFINED> instruction: 0x21221000
    302c:	00021000 	andeq	r1, r2, r0
    3030:	2122107d 			; <UNDEFINED> instruction: 0x2122107d
    3034:	21341000 	teqcs	r4, r0
    3038:	00021000 	andeq	r1, r2, r0
    303c:	2134187d 	teqcs	r4, sp, ror r8
    3040:	21361000 	teqcs	r6, r0
    3044:	00021000 	andeq	r1, r2, r0
    3048:	2136107d 	teqcs	r6, sp, ror r0
    304c:	21761000 	cmncs	r6, r0
    3050:	00021000 	andeq	r1, r2, r0
    3054:	0000187d 	andeq	r1, r0, sp, ror r8
	...
    3064:	1000211e 	andne	r2, r0, lr, lsl r1
    3068:	10002130 	andne	r2, r0, r0, lsr r1
    306c:	36500001 	ldrbcc	r0, [r0], -r1
    3070:	42100021 	andsmi	r0, r0, #33	; 0x21
    3074:	01100021 	tsteq	r0, r1, lsr #32
    3078:	21425000 	mrscs	r5, (UNDEF: 66)
    307c:	21451000 	mrscs	r1, (UNDEF: 69)
    3080:	00021000 	andeq	r1, r2, r0
    3084:	00000071 	andeq	r0, r0, r1, ror r0
	...
    3090:	10002126 	andne	r2, r0, r6, lsr #2
    3094:	10002176 	andne	r2, r0, r6, ror r1
    3098:	00540001 	subseq	r0, r4, r1
    309c:	00000000 	andeq	r0, r0, r0
    30a0:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    30b0:	00212600 	eoreq	r2, r1, r0, lsl #12
    30b4:	00213010 	eoreq	r3, r1, r0, lsl r0
    30b8:	30000210 	andcc	r0, r0, r0, lsl r2
    30bc:	0021369f 	mlaeq	r1, pc, r6, r3	; <UNPREDICTABLE>
    30c0:	00214810 	eoreq	r4, r1, r0, lsl r8
    30c4:	30000210 	andcc	r0, r0, r0, lsl r2
    30c8:	0021489f 	mlaeq	r1, pc, r8, r4	; <UNPREDICTABLE>
    30cc:	00215810 	eoreq	r5, r1, r0, lsl r8
    30d0:	50000110 	andpl	r0, r0, r0, lsl r1
    30d4:	10002158 	andne	r2, r0, r8, asr r1
    30d8:	10002162 	andne	r2, r0, r2, ror #2
    30dc:	62550001 	subsvs	r0, r5, #1
    30e0:	64100021 	ldrvs	r0, [r0], #-33	; 0xffffffdf
    30e4:	02100021 	andseq	r0, r0, #33	; 0x21
    30e8:	649f3100 	ldrvs	r3, [pc], #256	; 30f0 <__HEAP_SIZE+0x20f0>
    30ec:	67100021 	ldrvs	r0, [r0, -r1, lsr #32]
    30f0:	01100021 	tsteq	r0, r1, lsr #32
    30f4:	21675000 	cmncs	r7, r0
    30f8:	21761000 	cmncs	r6, r0
    30fc:	00011000 	andeq	r1, r1, r0
    3100:	00000055 	andeq	r0, r0, r5, asr r0
	...
    310c:	00213c00 	eoreq	r3, r1, r0, lsl #24
    3110:	00216e10 	eoreq	r6, r1, r0, lsl lr
    3114:	56000110 			; <UNDEFINED> instruction: 0x56000110
    3118:	1000216e 	andne	r2, r0, lr, ror #2
    311c:	10002170 	andne	r2, r0, r0, ror r1
    3120:	7f760003 	svcvc	0x00760003
    3124:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3128:	00000000 	andeq	r0, r0, r0
    312c:	68000000 	stmdavs	r0, {}	; <UNPREDICTABLE>
    3130:	76100021 	ldrvc	r0, [r0], -r1, lsr #32
    3134:	01100021 	tsteq	r0, r1, lsr #32
    3138:	00005000 	andeq	r5, r0, r0
	...
    3148:	00020000 	andeq	r0, r2, r0
    314c:	0000007d 	andeq	r0, r0, sp, ror r0
    3150:	00000000 	andeq	r0, r0, r0
    3154:	00020000 	andeq	r0, r2, r0
    3158:	0000047d 	andeq	r0, r0, sp, ror r4
    315c:	00000000 	andeq	r0, r0, r0
    3160:	00020000 	andeq	r0, r2, r0
    3164:	0000107d 	andeq	r1, r0, sp, ror r0
    3168:	00000000 	andeq	r0, r0, r0
    316c:	00020000 	andeq	r0, r2, r0
    3170:	0000047d 	andeq	r0, r0, sp, ror r4
	...
    3184:	00010000 	andeq	r0, r1, r0
    3188:	00000050 	andeq	r0, r0, r0, asr r0
    318c:	00000000 	andeq	r0, r0, r0
    3190:	f3000400 	vshl.u8	d0, d0, d0
    3194:	009f5001 	addseq	r5, pc, r1
	...
    31a4:	02000000 	andeq	r0, r0, #0
    31a8:	00007d00 	andeq	r7, r0, r0, lsl #26
    31ac:	00000000 	andeq	r0, r0, r0
    31b0:	02000000 	andeq	r0, r0, #0
    31b4:	00047d00 	andeq	r7, r4, r0, lsl #26
    31b8:	00000000 	andeq	r0, r0, r0
    31bc:	02000000 	andeq	r0, r0, #0
    31c0:	00107d00 	andseq	r7, r0, r0, lsl #26
    31c4:	00000000 	andeq	r0, r0, r0
    31c8:	02000000 	andeq	r0, r0, #0
    31cc:	00047d00 	andeq	r7, r4, r0, lsl #26
	...
    31e0:	01000000 	mrseq	r0, (UNDEF: 0)
    31e4:	00005000 	andeq	r5, r0, r0
    31e8:	00000000 	andeq	r0, r0, r0
    31ec:	00040000 	andeq	r0, r4, r0
    31f0:	9f5001f3 	svcls	0x005001f3
	...
    3208:	00010000 	andeq	r0, r1, r0
    320c:	00000051 	andeq	r0, r0, r1, asr r0
    3210:	00000000 	andeq	r0, r0, r0
    3214:	52000100 	andpl	r0, r0, #0, 2
	...
    3220:	01f30004 	mvnseq	r0, r4
    3224:	00009f51 	andeq	r9, r0, r1, asr pc
	...
    3234:	00020000 	andeq	r0, r2, r0
    3238:	0000007d 	andeq	r0, r0, sp, ror r0
    323c:	00000000 	andeq	r0, r0, r0
    3240:	00020000 	andeq	r0, r2, r0
    3244:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    3260:	00010000 	andeq	r0, r1, r0
    3264:	00000050 	andeq	r0, r0, r0, asr r0
    3268:	00000000 	andeq	r0, r0, r0
    326c:	f3000400 	vshl.u8	d0, d0, d0
    3270:	009f5001 	addseq	r5, pc, r1
    3274:	00000000 	andeq	r0, r0, r0
    3278:	01000000 	mrseq	r0, (UNDEF: 0)
    327c:	00005000 	andeq	r5, r0, r0
    3280:	00000000 	andeq	r0, r0, r0
    3284:	00010000 	andeq	r0, r1, r0
    3288:	00000054 	andeq	r0, r0, r4, asr r0
    328c:	00000000 	andeq	r0, r0, r0
    3290:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    329c:	00540001 	subseq	r0, r4, r1
	...
    32a8:	00000202 	andeq	r0, r0, r2, lsl #4
	...
    32b4:	01000000 	mrseq	r0, (UNDEF: 0)
    32b8:	00005100 	andeq	r5, r0, r0, lsl #2
    32bc:	00000000 	andeq	r0, r0, r0
    32c0:	00040000 	andeq	r0, r4, r0
    32c4:	9f5101f3 	svcls	0x005101f3
	...
    32d0:	00510001 	subseq	r0, r1, r1
    32d4:	00000000 	andeq	r0, r0, r0
    32d8:	04000000 	streq	r0, [r0], #-0
    32dc:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    32e0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    32e4:	00000000 	andeq	r0, r0, r0
    32e8:	01020000 	mrseq	r0, (UNDEF: 2)
	...
    32f4:	30000200 	andcc	r0, r0, r0, lsl #4
    32f8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    32fc:	00000000 	andeq	r0, r0, r0
    3300:	31000200 	mrscc	r0, R8_usr
    3304:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3308:	00000000 	andeq	r0, r0, r0
    330c:	00000300 	andeq	r0, r0, r0, lsl #6
	...
    3320:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    332c:	01f30004 	mvnseq	r0, r4
    3330:	00009f50 	andeq	r9, r0, r0, asr pc
    3334:	00000000 	andeq	r0, r0, r0
    3338:	00010000 	andeq	r0, r1, r0
    333c:	00000050 	andeq	r0, r0, r0, asr r0
    3340:	00000000 	andeq	r0, r0, r0
    3344:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    3350:	00500001 	subseq	r0, r0, r1
    3354:	00000000 	andeq	r0, r0, r0
    3358:	01000000 	mrseq	r0, (UNDEF: 0)
    335c:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    336c:	00020000 	andeq	r0, r2, r0
    3370:	0000007d 	andeq	r0, r0, sp, ror r0
    3374:	00000000 	andeq	r0, r0, r0
    3378:	00020000 	andeq	r0, r2, r0
    337c:	0000107d 	andeq	r1, r0, sp, ror r0
	...
    339c:	00500001 	subseq	r0, r0, r1
    33a0:	00000000 	andeq	r0, r0, r0
    33a4:	01000000 	mrseq	r0, (UNDEF: 0)
    33a8:	00005400 	andeq	r5, r0, r0, lsl #8
    33ac:	00000000 	andeq	r0, r0, r0
    33b0:	00040000 	andeq	r0, r4, r0
    33b4:	9f5001f3 	svcls	0x005001f3
	...
    33c0:	00540001 	subseq	r0, r4, r1
    33c4:	00000000 	andeq	r0, r0, r0
    33c8:	04000000 	streq	r0, [r0], #-0
    33cc:	5001f300 	andpl	pc, r1, r0, lsl #6
    33d0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    33d4:	00000000 	andeq	r0, r0, r0
    33d8:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    33e4:	01f30004 	mvnseq	r0, r4
    33e8:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    33fc:	00010000 	andeq	r0, r1, r0
    3400:	00000051 	andeq	r0, r0, r1, asr r0
    3404:	00000000 	andeq	r0, r0, r0
    3408:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    3414:	00010000 	andeq	r0, r1, r0
	...
    3420:	00540001 	subseq	r0, r4, r1
    3424:	00000000 	andeq	r0, r0, r0
    3428:	02000000 	andeq	r0, r0, #0
    342c:	009f3100 	addseq	r3, pc, r0, lsl #2
	...
    343c:	02000000 	andeq	r0, r0, #0
    3440:	00007d00 	andeq	r7, r0, r0, lsl #26
    3444:	00000000 	andeq	r0, r0, r0
    3448:	02000000 	andeq	r0, r0, #0
    344c:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    3460:	01000000 	mrseq	r0, (UNDEF: 0)
    3464:	00005000 	andeq	r5, r0, r0
    3468:	00000000 	andeq	r0, r0, r0
    346c:	00040000 	andeq	r0, r4, r0
    3470:	9f5001f3 	svcls	0x005001f3
	...
    3484:	00010000 	andeq	r0, r1, r0
    3488:	00000050 	andeq	r0, r0, r0, asr r0
    348c:	00000000 	andeq	r0, r0, r0
    3490:	0023cc00 	eoreq	ip, r3, r0, lsl #24
    3494:	0023ce10 	eoreq	ip, r3, r0, lsl lr
    3498:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    349c:	0023ce00 	eoreq	ip, r3, r0, lsl #28
    34a0:	00241e10 	eoreq	r1, r4, r0, lsl lr
    34a4:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    34a8:	00000010 	andeq	r0, r0, r0, lsl r0
	...
    34b4:	0023cc00 	eoreq	ip, r3, r0, lsl #24
    34b8:	0023d710 	eoreq	sp, r3, r0, lsl r7
    34bc:	50000110 	andpl	r0, r0, r0, lsl r1
    34c0:	100023d7 	ldrdne	r2, [r0], -r7
    34c4:	1000241e 	andne	r2, r0, lr, lsl r4
    34c8:	00540001 	subseq	r0, r4, r1
	...
    34d4:	cc000000 	stcgt	0, cr0, [r0], {-0}
    34d8:	d7100023 	ldrle	r0, [r0, -r3, lsr #32]
    34dc:	01100023 	tsteq	r0, r3, lsr #32
    34e0:	23d75100 	bicscs	r5, r7, #0, 2
    34e4:	241e1000 	ldrcs	r1, [lr], #-0
    34e8:	00011000 	andeq	r1, r1, r0
    34ec:	00000055 	andeq	r0, r0, r5, asr r0
	...
    34f8:	0023cc00 	eoreq	ip, r3, r0, lsl #24
    34fc:	0023d710 	eoreq	sp, r3, r0, lsl r7
    3500:	52000110 	andpl	r0, r0, #16, 2
    3504:	100023d7 	ldrdne	r2, [r0], -r7
    3508:	1000241e 	andne	r2, r0, lr, lsl r4
    350c:	00560001 	subseq	r0, r6, r1
    3510:	00000000 	andeq	r0, r0, r0
    3514:	01000000 	mrseq	r0, (UNDEF: 0)
    3518:	d4000000 	strle	r0, [r0], #-0
    351c:	d7100023 	ldrle	r0, [r0, -r3, lsr #32]
    3520:	01100023 	tsteq	r0, r3, lsr #32
    3524:	23d75000 	bicscs	r5, r7, #0
    3528:	241e1000 	ldrcs	r1, [lr], #-0
    352c:	00011000 	andeq	r1, r1, r0
    3530:	00000054 	andeq	r0, r0, r4, asr r0
	...
    3548:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    3554:	01f30004 	mvnseq	r0, r4
    3558:	00009f50 	andeq	r9, r0, r0, asr pc
    355c:	00000000 	andeq	r0, r0, r0
    3560:	00010000 	andeq	r0, r1, r0
    3564:	00000050 	andeq	r0, r0, r0, asr r0
    3568:	00000000 	andeq	r0, r0, r0
    356c:	f3000400 	vshl.u8	d0, d0, d0
    3570:	009f5001 	addseq	r5, pc, r1
	...
    3584:	30000200 	andcc	r0, r0, r0, lsl #4
    3588:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    358c:	00000000 	andeq	r0, r0, r0
    3590:	00000300 	andeq	r0, r0, r0, lsl #6
	...
    35a0:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    35ac:	01f30004 	mvnseq	r0, r4
    35b0:	00009f50 	andeq	r9, r0, r0, asr pc
    35b4:	00000000 	andeq	r0, r0, r0
    35b8:	00010000 	andeq	r0, r1, r0
    35bc:	00000050 	andeq	r0, r0, r0, asr r0
    35c0:	00000000 	andeq	r0, r0, r0
    35c4:	f3000400 	vshl.u8	d0, d0, d0
    35c8:	009f5001 	addseq	r5, pc, r1
	...
    35d8:	02000000 	andeq	r0, r0, #0
    35dc:	00007d00 	andeq	r7, r0, r0, lsl #26
    35e0:	00000000 	andeq	r0, r0, r0
    35e4:	02000000 	andeq	r0, r0, #0
    35e8:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    3604:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    3610:	00540001 	subseq	r0, r4, r1
    3614:	00000000 	andeq	r0, r0, r0
    3618:	04000000 	streq	r0, [r0], #-0
    361c:	5001f300 	andpl	pc, r1, r0, lsl #6
    3620:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3624:	00000000 	andeq	r0, r0, r0
    3628:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    3634:	01f30004 	mvnseq	r0, r4
    3638:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    364c:	00540001 	subseq	r0, r4, r1
	...
    3664:	01000000 	mrseq	r0, (UNDEF: 0)
    3668:	00005000 	andeq	r5, r0, r0
    366c:	00000000 	andeq	r0, r0, r0
    3670:	00040000 	andeq	r0, r4, r0
    3674:	9f5001f3 	svcls	0x005001f3
	...
    3680:	00500001 	subseq	r0, r0, r1
    3684:	00000000 	andeq	r0, r0, r0
    3688:	04000000 	streq	r0, [r0], #-0
    368c:	5001f300 	andpl	pc, r1, r0, lsl #6
    3690:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3694:	00000000 	andeq	r0, r0, r0
    3698:	00000300 	andeq	r0, r0, r0, lsl #6
	...
    36a8:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    36b4:	01f30004 	mvnseq	r0, r4
    36b8:	00009f50 	andeq	r9, r0, r0, asr pc
    36bc:	00000000 	andeq	r0, r0, r0
    36c0:	00010000 	andeq	r0, r1, r0
    36c4:	00000050 	andeq	r0, r0, r0, asr r0
    36c8:	00000000 	andeq	r0, r0, r0
    36cc:	f3000400 	vshl.u8	d0, d0, d0
    36d0:	009f5001 	addseq	r5, pc, r1
    36d4:	00000000 	andeq	r0, r0, r0
    36d8:	6a000000 	bvs	36e0 <__HEAP_SIZE+0x26e0>
    36dc:	6c100020 	ldcvs	0, cr0, [r0], {32}
    36e0:	02100020 	andseq	r0, r0, #32
    36e4:	6c007d00 	stcvs	13, cr7, [r0], {-0}
    36e8:	84100020 	ldrhi	r0, [r0], #-32	; 0xffffffe0
    36ec:	02100020 	andseq	r0, r0, #32
    36f0:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    3704:	00206a00 	eoreq	r6, r0, r0, lsl #20
    3708:	00207110 	eoreq	r7, r0, r0, lsl r1
    370c:	50000110 	andpl	r0, r0, r0, lsl r1
    3710:	10002071 	andne	r2, r0, r1, ror r0
    3714:	10002078 	andne	r2, r0, r8, ror r0
    3718:	78540001 	ldmdavc	r4, {r0}^
    371c:	80100020 	andshi	r0, r0, r0, lsr #32
    3720:	04100020 	ldreq	r0, [r0], #-32	; 0xffffffe0
    3724:	5001f300 	andpl	pc, r1, r0, lsl #6
    3728:	0020809f 	mlaeq	r0, pc, r0, r8	; <UNPREDICTABLE>
    372c:	00208210 	eoreq	r8, r0, r0, lsl r2
    3730:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    3734:	10002082 	andne	r2, r0, r2, lsl #1
    3738:	10002084 	andne	r2, r0, r4, lsl #1
    373c:	01f30004 	mvnseq	r0, r4
    3740:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    374c:	10002078 	andne	r2, r0, r8, ror r0
    3750:	10002080 	andne	r2, r0, r0, lsl #1
    3754:	00540001 	subseq	r0, r4, r1
    3758:	00000000 	andeq	r0, r0, r0
    375c:	76000000 	strvc	r0, [r0], -r0
    3760:	78100021 	ldmdavc	r0, {r0, r5}
    3764:	02100021 	andseq	r0, r0, #33	; 0x21
    3768:	78007d00 	stmdavc	r0, {r8, sl, fp, ip, sp, lr}
    376c:	f8100021 			; <UNDEFINED> instruction: 0xf8100021
    3770:	02100021 	andseq	r0, r0, #33	; 0x21
    3774:	00107d00 	andseq	r7, r0, r0, lsl #26
	...
    3780:	76000000 	strvc	r0, [r0], -r0
    3784:	7d100021 	ldcvc	0, cr0, [r0, #-132]	; 0xffffff7c
    3788:	01100021 	tsteq	r0, r1, lsr #32
    378c:	217d5000 	cmncs	sp, r0
    3790:	21f81000 	mvnscs	r1, r0
    3794:	00011000 	andeq	r1, r1, r0
    3798:	00000055 	andeq	r0, r0, r5, asr r0
	...
    37a4:	00218400 	eoreq	r8, r1, r0, lsl #8
    37a8:	00219610 	eoreq	r9, r1, r0, lsl r6
    37ac:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    37b0:	10002198 	mulne	r0, r8, r1
    37b4:	100021ca 	andne	r2, r0, sl, asr #3
    37b8:	00540001 	subseq	r0, r4, r1
	...
    37c4:	cc000000 	stcgt	0, cr0, [r0], {-0}
    37c8:	d0100021 	andsle	r0, r0, r1, lsr #32
    37cc:	01100021 	tsteq	r0, r1, lsr #32
    37d0:	21d25400 	bicscs	r5, r2, r0, lsl #8
    37d4:	21f81000 	mvnscs	r1, r0
    37d8:	00011000 	andeq	r1, r1, r0
    37dc:	00000054 	andeq	r0, r0, r4, asr r0
    37e0:	00000000 	andeq	r0, r0, r0
    37e4:	0020fa00 	eoreq	pc, r0, r0, lsl #20
    37e8:	00210210 	eoreq	r0, r1, r0, lsl r2
    37ec:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    37f0:	00210200 	eoreq	r0, r1, r0, lsl #4
    37f4:	00211c10 	eoreq	r1, r1, r0, lsl ip
    37f8:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    37fc:	00211c08 	eoreq	r1, r1, r8, lsl #24
    3800:	00211e10 	eoreq	r1, r1, r0, lsl lr
    3804:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
	...
    3818:	0020fa00 	eoreq	pc, r0, r0, lsl #20
    381c:	00210410 	eoreq	r0, r1, r0, lsl r4
    3820:	50000110 	andpl	r0, r0, r0, lsl r1
    3824:	10002104 	andne	r2, r0, r4, lsl #2
    3828:	10002119 	andne	r2, r0, r9, lsl r1
    382c:	19530001 	ldmdbne	r3, {r0}^
    3830:	1c100021 	ldcne	0, cr0, [r0], {33}	; 0x21
    3834:	04100021 	ldreq	r0, [r0], #-33	; 0xffffffdf
    3838:	5001f300 	andpl	pc, r1, r0, lsl #6
    383c:	00211c9f 	mlaeq	r1, pc, ip, r1	; <UNPREDICTABLE>
    3840:	00211e10 	eoreq	r1, r1, r0, lsl lr
    3844:	50000110 	andpl	r0, r0, r0, lsl r1
	...
    3858:	100020fa 	strdne	r2, [r0], -sl
    385c:	10002106 	andne	r2, r0, r6, lsl #2
    3860:	06510001 	ldrbeq	r0, [r1], -r1
    3864:	19100021 	ldmdbne	r0, {r0, r5}
    3868:	01100021 	tsteq	r0, r1, lsr #32
    386c:	21195000 	tstcs	r9, r0
    3870:	211c1000 	tstcs	ip, r0
    3874:	00041000 	andeq	r1, r4, r0
    3878:	9f5101f3 	svcls	0x005101f3
    387c:	1000211c 	andne	r2, r0, ip, lsl r1
    3880:	1000211e 	andne	r2, r0, lr, lsl r1
    3884:	00510001 	subseq	r0, r1, r1
    3888:	00000000 	andeq	r0, r0, r0
    388c:	84000000 	strhi	r0, [r0], #-0
    3890:	86100020 	ldrhi	r0, [r0], -r0, lsr #32
    3894:	02100020 	andseq	r0, r0, #32
    3898:	86007d00 	strhi	r7, [r0], -r0, lsl #26
    389c:	fa100020 	blx	403924 <__RAM_SIZE+0x303924>
    38a0:	02100020 	andseq	r0, r0, #32
    38a4:	00107d00 	andseq	r7, r0, r0, lsl #26
	...
    38bc:	84000000 	strhi	r0, [r0], #-0
    38c0:	96100020 	ldrls	r0, [r0], -r0, lsr #32
    38c4:	01100020 	tsteq	r0, r0, lsr #32
    38c8:	20965000 	addscs	r5, r6, r0
    38cc:	209c1000 	addscs	r1, ip, r0
    38d0:	00011000 	andeq	r1, r1, r0
    38d4:	00209c54 	eoreq	r9, r0, r4, asr ip
    38d8:	00209e10 	eoreq	r9, r0, r0, lsl lr
    38dc:	50000110 	andpl	r0, r0, r0, lsl r1
    38e0:	1000209e 	mulne	r0, lr, r0
    38e4:	100020a8 	andne	r2, r0, r8, lsr #1
    38e8:	a8540001 	ldmdage	r4, {r0}^
    38ec:	ac100020 	ldcge	0, cr0, [r0], {32}
    38f0:	01100020 	tsteq	r0, r0, lsr #32
    38f4:	20ac5000 	adccs	r5, ip, r0
    38f8:	20c61000 	sbccs	r1, r6, r0
    38fc:	00011000 	andeq	r1, r1, r0
    3900:	0020c654 	eoreq	ip, r0, r4, asr r6
    3904:	0020c810 	eoreq	ip, r0, r0, lsl r8
    3908:	50000110 	andpl	r0, r0, r0, lsl r1
    390c:	100020c8 	andne	r2, r0, r8, asr #1
    3910:	100020fa 	strdne	r2, [r0], -sl
    3914:	00540001 	subseq	r0, r4, r1
	...
    392c:	84000000 	strhi	r0, [r0], #-0
    3930:	96100020 	ldrls	r0, [r0], -r0, lsr #32
    3934:	01100020 	tsteq	r0, r0, lsr #32
    3938:	20965100 	addscs	r5, r6, r0, lsl #2
    393c:	209c1000 	addscs	r1, ip, r0
    3940:	00041000 	andeq	r1, r4, r0
    3944:	9f5101f3 	svcls	0x005101f3
    3948:	1000209c 	mulne	r0, ip, r0
    394c:	100020a1 	andne	r2, r0, r1, lsr #1
    3950:	a1510001 	cmpge	r1, r1
    3954:	a8100020 	ldmdage	r0, {r5}
    3958:	04100020 	ldreq	r0, [r0], #-32	; 0xffffffe0
    395c:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    3960:	0020a89f 	mlaeq	r0, pc, r8, sl	; <UNPREDICTABLE>
    3964:	0020af10 	eoreq	sl, r0, r0, lsl pc
    3968:	51000110 	tstpl	r0, r0, lsl r1
    396c:	100020af 	andne	r2, r0, pc, lsr #1
    3970:	100020c6 	andne	r2, r0, r6, asr #1
    3974:	01f30004 	mvnseq	r0, r4
    3978:	20c69f51 	sbccs	r9, r6, r1, asr pc
    397c:	20cb1000 	sbccs	r1, fp, r0
    3980:	00011000 	andeq	r1, r1, r0
    3984:	0020cb51 	eoreq	ip, r0, r1, asr fp
    3988:	0020fa10 	eoreq	pc, r0, r0, lsl sl	; <UNPREDICTABLE>
    398c:	f3000410 	vqshl.u8	d0, d0, d0
    3990:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
    399c:	84000000 	strhi	r0, [r0], #-0
    39a0:	8e100020 	cdphi	0, 1, cr0, cr0, cr0, {1}
    39a4:	01100020 	tsteq	r0, r0, lsr #32
    39a8:	208e5200 	addcs	r5, lr, r0, lsl #4
    39ac:	20fa1000 	rscscs	r1, sl, r0
    39b0:	00011000 	andeq	r1, r1, r0
    39b4:	00000055 	andeq	r0, r0, r5, asr r0
    39b8:	00000000 	andeq	r0, r0, r0
    39bc:	00000100 	andeq	r0, r0, r0, lsl #2
    39c0:	00000000 	andeq	r0, r0, r0
    39c4:	8a000000 	bhi	39cc <__HEAP_SIZE+0x29cc>
    39c8:	96100020 	ldrls	r0, [r0], -r0, lsr #32
    39cc:	02100020 	andseq	r0, r0, #32
    39d0:	969f3000 	ldrls	r3, [pc], r0
    39d4:	9c100020 	ldcls	0, cr0, [r0], {32}
    39d8:	01100020 	tsteq	r0, r0, lsr #32
    39dc:	209c5000 	addscs	r5, ip, r0
    39e0:	20a21000 	adccs	r1, r2, r0
    39e4:	00021000 	andeq	r1, r2, r0
    39e8:	20a29f30 	adccs	r9, r2, r0, lsr pc
    39ec:	20a81000 	adccs	r1, r8, r0
    39f0:	00011000 	andeq	r1, r1, r0
    39f4:	0020a850 	eoreq	sl, r0, r0, asr r8
    39f8:	0020fa10 	eoreq	pc, r0, r0, lsl sl	; <UNPREDICTABLE>
    39fc:	30000210 	andcc	r0, r0, r0, lsl r2
    3a00:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    3a0c:	8c000000 	stchi	0, cr0, [r0], {-0}
    3a10:	98100020 	ldmdals	r0, {r5}
    3a14:	01100020 	tsteq	r0, r0, lsr #32
    3a18:	20985600 	addscs	r5, r8, r0, lsl #12
    3a1c:	209c1000 	addscs	r1, ip, r0
    3a20:	00031000 	andeq	r1, r3, r0
    3a24:	9c9f7f76 	ldcls	15, cr7, [pc], {118}	; 0x76
    3a28:	fa100020 	blx	403ab0 <__RAM_SIZE+0x303ab0>
    3a2c:	01100020 	tsteq	r0, r0, lsr #32
    3a30:	00005600 	andeq	r5, r0, r0, lsl #12
	...
    3a48:	00500001 	subseq	r0, r0, r1
    3a4c:	00000000 	andeq	r0, r0, r0
    3a50:	01000000 	mrseq	r0, (UNDEF: 0)
    3a54:	00005300 	andeq	r5, r0, r0, lsl #6
    3a58:	00000000 	andeq	r0, r0, r0
    3a5c:	00040000 	andeq	r0, r4, r0
    3a60:	9f5001f3 	svcls	0x005001f3
	...
    3a6c:	00000100 	andeq	r0, r0, r0, lsl #2
    3a70:	00000000 	andeq	r0, r0, r0
    3a74:	00010000 	andeq	r0, r1, r0
    3a78:	00000050 	andeq	r0, r0, r0, asr r0
	...
    3a8c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    3a98:	01f30004 	mvnseq	r0, r4
    3a9c:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    3ab0:	00010000 	andeq	r0, r1, r0
    3ab4:	00000050 	andeq	r0, r0, r0, asr r0
    3ab8:	00000000 	andeq	r0, r0, r0
    3abc:	f3000400 	vshl.u8	d0, d0, d0
    3ac0:	009f5001 	addseq	r5, pc, r1
	...
    3ad0:	02000000 	andeq	r0, r0, #0
    3ad4:	00007d00 	andeq	r7, r0, r0, lsl #26
    3ad8:	00000000 	andeq	r0, r0, r0
    3adc:	02000000 	andeq	r0, r0, #0
    3ae0:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    3af8:	01000000 	mrseq	r0, (UNDEF: 0)
    3afc:	00005000 	andeq	r5, r0, r0
    3b00:	00000000 	andeq	r0, r0, r0
    3b04:	00040000 	andeq	r0, r4, r0
    3b08:	9f5001f3 	svcls	0x005001f3
	...
    3b14:	00500001 	subseq	r0, r0, r1
    3b18:	00000000 	andeq	r0, r0, r0
    3b1c:	04000000 	streq	r0, [r0], #-0
    3b20:	5001f300 	andpl	pc, r1, r0, lsl #6
    3b24:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3b28:	00000000 	andeq	r0, r0, r0
    3b2c:	00000100 	andeq	r0, r0, r0, lsl #2
	...
    3b3c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    3b48:	01f30004 	mvnseq	r0, r4
    3b4c:	00009f50 	andeq	r9, r0, r0, asr pc
    3b50:	00000000 	andeq	r0, r0, r0
    3b54:	00010000 	andeq	r0, r1, r0
    3b58:	00000050 	andeq	r0, r0, r0, asr r0
    3b5c:	00000000 	andeq	r0, r0, r0
    3b60:	f3000400 	vshl.u8	d0, d0, d0
    3b64:	009f5001 	addseq	r5, pc, r1
	...
    3b78:	01000000 	mrseq	r0, (UNDEF: 0)
    3b7c:	00005000 	andeq	r5, r0, r0
    3b80:	00000000 	andeq	r0, r0, r0
    3b84:	00040000 	andeq	r0, r4, r0
    3b88:	9f5001f3 	svcls	0x005001f3
	...
    3b9c:	00010000 	andeq	r0, r1, r0
    3ba0:	00000050 	andeq	r0, r0, r0, asr r0
    3ba4:	00000000 	andeq	r0, r0, r0
    3ba8:	00000300 	andeq	r0, r0, r0, lsl #6
	...
    3bb4:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    3bc0:	01f30004 	mvnseq	r0, r4
    3bc4:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    3bd4:	00020000 	andeq	r0, r2, r0
    3bd8:	0000007d 	andeq	r0, r0, sp, ror r0
    3bdc:	00000000 	andeq	r0, r0, r0
    3be0:	00020000 	andeq	r0, r2, r0
    3be4:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    3bfc:	00500001 	subseq	r0, r0, r1
    3c00:	00000000 	andeq	r0, r0, r0
    3c04:	01000000 	mrseq	r0, (UNDEF: 0)
    3c08:	00005400 	andeq	r5, r0, r0, lsl #8
    3c0c:	00000000 	andeq	r0, r0, r0
    3c10:	00040000 	andeq	r0, r4, r0
    3c14:	9f5001f3 	svcls	0x005001f3
	...
    3c28:	00010000 	andeq	r0, r1, r0
    3c2c:	00000054 	andeq	r0, r0, r4, asr r0
    3c30:	00000000 	andeq	r0, r0, r0
    3c34:	00000200 	andeq	r0, r0, r0, lsl #4
	...
    3c40:	01000000 	mrseq	r0, (UNDEF: 0)
    3c44:	00005000 	andeq	r5, r0, r0
    3c48:	00000000 	andeq	r0, r0, r0
    3c4c:	00010000 	andeq	r0, r1, r0
    3c50:	00000054 	andeq	r0, r0, r4, asr r0
    3c54:	00000000 	andeq	r0, r0, r0
    3c58:	f3000400 	vshl.u8	d0, d0, d0
    3c5c:	009f5001 	addseq	r5, pc, r1
	...
    3c6c:	02000000 	andeq	r0, r0, #0
    3c70:	00007d00 	andeq	r7, r0, r0, lsl #26
    3c74:	00000000 	andeq	r0, r0, r0
    3c78:	02000000 	andeq	r0, r0, #0
    3c7c:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    3c94:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    3ca0:	00540001 	subseq	r0, r4, r1
    3ca4:	00000000 	andeq	r0, r0, r0
    3ca8:	04000000 	streq	r0, [r0], #-0
    3cac:	5001f300 	andpl	pc, r1, r0, lsl #6
    3cb0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    3cc0:	01000000 	mrseq	r0, (UNDEF: 0)
    3cc4:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    3cd4:	00020000 	andeq	r0, r2, r0
    3cd8:	0000007d 	andeq	r0, r0, sp, ror r0
    3cdc:	00000000 	andeq	r0, r0, r0
    3ce0:	00020000 	andeq	r0, r2, r0
    3ce4:	0000187d 	andeq	r1, r0, sp, ror r8
	...
    3d00:	00500001 	subseq	r0, r0, r1
    3d04:	00000000 	andeq	r0, r0, r0
    3d08:	01000000 	mrseq	r0, (UNDEF: 0)
    3d0c:	00005400 	andeq	r5, r0, r0, lsl #8
    3d10:	00000000 	andeq	r0, r0, r0
    3d14:	00040000 	andeq	r0, r4, r0
    3d18:	9f5001f3 	svcls	0x005001f3
	...
    3d24:	00540001 	subseq	r0, r4, r1
    3d28:	00000000 	andeq	r0, r0, r0
    3d2c:	04000000 	streq	r0, [r0], #-0
    3d30:	5001f300 	andpl	pc, r1, r0, lsl #6
    3d34:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    3d48:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    3d54:	00560001 	subseq	r0, r6, r1
	...
    3d60:	00000100 	andeq	r0, r0, r0, lsl #2
    3d64:	00000000 	andeq	r0, r0, r0
    3d68:	01000000 	mrseq	r0, (UNDEF: 0)
    3d6c:	00005400 	andeq	r5, r0, r0, lsl #8
    3d70:	00000000 	andeq	r0, r0, r0
    3d74:	00020000 	andeq	r0, r2, r0
    3d78:	00009f31 	andeq	r9, r0, r1, lsr pc
	...
    3d90:	00010000 	andeq	r0, r1, r0
    3d94:	00000050 	andeq	r0, r0, r0, asr r0
    3d98:	00000000 	andeq	r0, r0, r0
    3d9c:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    3da8:	00500001 	subseq	r0, r0, r1
    3dac:	00000000 	andeq	r0, r0, r0
    3db0:	01000000 	mrseq	r0, (UNDEF: 0)
    3db4:	00005500 	andeq	r5, r0, r0, lsl #10
	...
    3dc8:	00570001 	subseq	r0, r7, r1
    3dcc:	00000000 	andeq	r0, r0, r0
    3dd0:	04000000 	streq	r0, [r0], #-0
	...
    3de4:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    3df0:	00540001 	subseq	r0, r4, r1
    3df4:	00000000 	andeq	r0, r0, r0
    3df8:	04000000 	streq	r0, [r0], #-0
    3dfc:	5001f300 	andpl	pc, r1, r0, lsl #6
    3e00:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3e04:	00000000 	andeq	r0, r0, r0
    3e08:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    3e14:	01f30004 	mvnseq	r0, r4
    3e18:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    3e28:	00020000 	andeq	r0, r2, r0
    3e2c:	0000007d 	andeq	r0, r0, sp, ror r0
    3e30:	00000000 	andeq	r0, r0, r0
    3e34:	00020000 	andeq	r0, r2, r0
    3e38:	0000207d 	andeq	r2, r0, sp, ror r0
	...
    3e68:	00500001 	subseq	r0, r0, r1
    3e6c:	00000000 	andeq	r0, r0, r0
    3e70:	01000000 	mrseq	r0, (UNDEF: 0)
    3e74:	00005400 	andeq	r5, r0, r0, lsl #8
    3e78:	00000000 	andeq	r0, r0, r0
    3e7c:	00040000 	andeq	r0, r4, r0
    3e80:	9f5001f3 	svcls	0x005001f3
	...
    3e8c:	00540001 	subseq	r0, r4, r1
    3e90:	00000000 	andeq	r0, r0, r0
    3e94:	04000000 	streq	r0, [r0], #-0
    3e98:	5001f300 	andpl	pc, r1, r0, lsl #6
    3e9c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3ea0:	00000000 	andeq	r0, r0, r0
    3ea4:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    3eb0:	01f30004 	mvnseq	r0, r4
    3eb4:	00009f50 	andeq	r9, r0, r0, asr pc
    3eb8:	00000000 	andeq	r0, r0, r0
    3ebc:	00010000 	andeq	r0, r1, r0
    3ec0:	00000054 	andeq	r0, r0, r4, asr r0
    3ec4:	00000000 	andeq	r0, r0, r0
    3ec8:	f3000400 	vshl.u8	d0, d0, d0
    3ecc:	009f5001 	addseq	r5, pc, r1
    3ed0:	00000000 	andeq	r0, r0, r0
    3ed4:	01000000 	mrseq	r0, (UNDEF: 0)
    3ed8:	00005400 	andeq	r5, r0, r0, lsl #8
    3edc:	00000000 	andeq	r0, r0, r0
    3ee0:	00040000 	andeq	r0, r4, r0
    3ee4:	9f5001f3 	svcls	0x005001f3
	...
    3ef0:	00540001 	subseq	r0, r4, r1
    3ef4:	00000000 	andeq	r0, r0, r0
    3ef8:	04000000 	streq	r0, [r0], #-0
    3efc:	5001f300 	andpl	pc, r1, r0, lsl #6
    3f00:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3f04:	00000000 	andeq	r0, r0, r0
    3f08:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    3f14:	01f30004 	mvnseq	r0, r4
    3f18:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    3f2c:	00010000 	andeq	r0, r1, r0
    3f30:	00000051 	andeq	r0, r0, r1, asr r0
    3f34:	00000000 	andeq	r0, r0, r0
    3f38:	57000100 	strpl	r0, [r0, -r0, lsl #2]
	...
    3f50:	00520001 	subseq	r0, r2, r1
    3f54:	00000000 	andeq	r0, r0, r0
    3f58:	01000000 	mrseq	r0, (UNDEF: 0)
    3f5c:	00005800 	andeq	r5, r0, r0, lsl #16
	...
    3f70:	00540001 	subseq	r0, r4, r1
	...
    3f88:	01000000 	mrseq	r0, (UNDEF: 0)
    3f8c:	00005000 	andeq	r5, r0, r0
    3f90:	00000000 	andeq	r0, r0, r0
    3f94:	00010000 	andeq	r0, r1, r0
    3f98:	00000055 	andeq	r0, r0, r5, asr r0
    3f9c:	00000000 	andeq	r0, r0, r0
    3fa0:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    3fac:	00550001 	subseq	r0, r5, r1
    3fb0:	00000000 	andeq	r0, r0, r0
    3fb4:	03000000 	movweq	r0, #0
	...
    3fdc:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    3fe8:	00540001 	subseq	r0, r4, r1
    3fec:	00000000 	andeq	r0, r0, r0
    3ff0:	04000000 	streq	r0, [r0], #-0
    3ff4:	5001f300 	andpl	pc, r1, r0, lsl #6
    3ff8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3ffc:	00000000 	andeq	r0, r0, r0
    4000:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    400c:	01f30004 	mvnseq	r0, r4
    4010:	00009f50 	andeq	r9, r0, r0, asr pc
    4014:	00000000 	andeq	r0, r0, r0
    4018:	00010000 	andeq	r0, r1, r0
    401c:	00000054 	andeq	r0, r0, r4, asr r0
    4020:	00000000 	andeq	r0, r0, r0
    4024:	f3000400 	vshl.u8	d0, d0, d0
    4028:	009f5001 	addseq	r5, pc, r1
    402c:	00000000 	andeq	r0, r0, r0
    4030:	01000000 	mrseq	r0, (UNDEF: 0)
    4034:	00005400 	andeq	r5, r0, r0, lsl #8
    4038:	00000000 	andeq	r0, r0, r0
    403c:	00040000 	andeq	r0, r4, r0
    4040:	9f5001f3 	svcls	0x005001f3
	...
    404c:	00540001 	subseq	r0, r4, r1
    4050:	00000000 	andeq	r0, r0, r0
    4054:	04000000 	streq	r0, [r0], #-0
    4058:	5001f300 	andpl	pc, r1, r0, lsl #6
    405c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4060:	00000000 	andeq	r0, r0, r0
    4064:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    4070:	01f30004 	mvnseq	r0, r4
    4074:	00009f50 	andeq	r9, r0, r0, asr pc
    4078:	00000000 	andeq	r0, r0, r0
    407c:	00010000 	andeq	r0, r1, r0
    4080:	00000054 	andeq	r0, r0, r4, asr r0
    4084:	00000000 	andeq	r0, r0, r0
    4088:	f3000400 	vshl.u8	d0, d0, d0
    408c:	009f5001 	addseq	r5, pc, r1
	...
    40a4:	56000100 	strpl	r0, [r0], -r0, lsl #2
	...
    40b0:	00560001 	subseq	r0, r6, r1
    40b4:	00000000 	andeq	r0, r0, r0
    40b8:	03000000 	movweq	r0, #0
    40bc:	9f017600 	svcls	0x00017600
	...
    40d4:	00010000 	andeq	r0, r1, r0
    40d8:	00000059 	andeq	r0, r0, r9, asr r0
    40dc:	00000000 	andeq	r0, r0, r0
    40e0:	79000300 	stmdbvc	r0, {r8, r9}
    40e4:	00009f7f 	andeq	r9, r0, pc, ror pc
    40e8:	00000000 	andeq	r0, r0, r0
    40ec:	00010000 	andeq	r0, r1, r0
    40f0:	00000059 	andeq	r0, r0, r9, asr r0
	...
    4104:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    4110:	00500001 	subseq	r0, r0, r1
	...
    4120:	02000000 	andeq	r0, r0, #0
    4124:	00007d00 	andeq	r7, r0, r0, lsl #26
    4128:	00000000 	andeq	r0, r0, r0
    412c:	02000000 	andeq	r0, r0, #0
    4130:	00107d00 	andseq	r7, r0, r0, lsl #26
    4134:	00000000 	andeq	r0, r0, r0
    4138:	02000000 	andeq	r0, r0, #0
    413c:	00207d00 	eoreq	r7, r0, r0, lsl #26
    4140:	00000000 	andeq	r0, r0, r0
    4144:	02000000 	andeq	r0, r0, #0
    4148:	00107d00 	andseq	r7, r0, r0, lsl #26
    414c:	00000000 	andeq	r0, r0, r0
    4150:	02000000 	andeq	r0, r0, #0
    4154:	00207d00 	eoreq	r7, r0, r0, lsl #26
	...
    4168:	01000000 	mrseq	r0, (UNDEF: 0)
    416c:	00005000 	andeq	r5, r0, r0
    4170:	00000000 	andeq	r0, r0, r0
    4174:	00010000 	andeq	r0, r1, r0
    4178:	00000054 	andeq	r0, r0, r4, asr r0
	...
    418c:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    4198:	00560001 	subseq	r0, r6, r1
	...
    41ac:	52000100 	andpl	r0, r0, #0, 2
	...
    41b8:	00000001 	andeq	r0, r0, r1
    41bc:	00010100 	andeq	r0, r1, r0, lsl #2
	...
    41c8:	00020000 	andeq	r0, r2, r0
    41cc:	00009f30 	andeq	r9, r0, r0, lsr pc
    41d0:	00000000 	andeq	r0, r0, r0
    41d4:	00010000 	andeq	r0, r1, r0
    41d8:	00000055 	andeq	r0, r0, r5, asr r0
    41dc:	00000000 	andeq	r0, r0, r0
    41e0:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    41ec:	9f310002 	svcls	0x00310002
	...
    41f8:	00550001 	subseq	r0, r5, r1
	...
    420c:	01000000 	mrseq	r0, (UNDEF: 0)
    4210:	00005500 	andeq	r5, r0, r0, lsl #10
    4214:	00000000 	andeq	r0, r0, r0
    4218:	00010000 	andeq	r0, r1, r0
    421c:	00000055 	andeq	r0, r0, r5, asr r0
    4220:	00000000 	andeq	r0, r0, r0
    4224:	00000400 	andeq	r0, r0, r0, lsl #8
	...
    4230:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    423c:	00540001 	subseq	r0, r4, r1
	...
    4250:	01000000 	mrseq	r0, (UNDEF: 0)
    4254:	00005300 	andeq	r5, r0, r0, lsl #6
    4258:	00000000 	andeq	r0, r0, r0
    425c:	00010000 	andeq	r0, r1, r0
    4260:	00000053 	andeq	r0, r0, r3, asr r0
	...
    4270:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    427c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    4280:	00000010 	andeq	r0, r0, r0, lsl r0
    4284:	00000000 	andeq	r0, r0, r0
    4288:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    428c:	00000020 	andeq	r0, r0, r0, lsr #32
    4290:	00000000 	andeq	r0, r0, r0
    4294:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    4298:	00000010 	andeq	r0, r0, r0, lsl r0
    429c:	00000000 	andeq	r0, r0, r0
    42a0:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    42a4:	00000020 	andeq	r0, r0, r0, lsr #32
	...
    42b8:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    42c4:	00540001 	subseq	r0, r4, r1
	...
    42d8:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    42e4:	01000001 	tsteq	r0, r1
    42e8:	00000001 	andeq	r0, r0, r1
	...
    42f4:	9f300002 	svcls	0x00300002
	...
    4300:	00550001 	subseq	r0, r5, r1
    4304:	00000000 	andeq	r0, r0, r0
    4308:	02000000 	andeq	r0, r0, #0
    430c:	009f3100 	addseq	r3, pc, r0, lsl #2
    4310:	00000000 	andeq	r0, r0, r0
    4314:	01000000 	mrseq	r0, (UNDEF: 0)
    4318:	00005500 	andeq	r5, r0, r0, lsl #10
    431c:	00000000 	andeq	r0, r0, r0
    4320:	00030000 	andeq	r0, r3, r0
	...
    432c:	00010000 	andeq	r0, r1, r0
    4330:	00000050 	andeq	r0, r0, r0, asr r0
    4334:	00000000 	andeq	r0, r0, r0
    4338:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    4344:	00000004 	andeq	r0, r0, r4
	...
    4354:	9f300002 	svcls	0x00300002
	...
    4360:	00560001 	subseq	r0, r6, r1
    4364:	00000000 	andeq	r0, r0, r0
    4368:	01000000 	mrseq	r0, (UNDEF: 0)
    436c:	00005000 	andeq	r5, r0, r0
    4370:	00000000 	andeq	r0, r0, r0
    4374:	00010000 	andeq	r0, r1, r0
    4378:	00000056 	andeq	r0, r0, r6, asr r0
	...
    4390:	01000000 	mrseq	r0, (UNDEF: 0)
    4394:	00005300 	andeq	r5, r0, r0, lsl #6
    4398:	00000000 	andeq	r0, r0, r0
    439c:	00030000 	andeq	r0, r3, r0
    43a0:	009f0173 	addseq	r0, pc, r3, ror r1	; <UNPREDICTABLE>
    43a4:	00000000 	andeq	r0, r0, r0
    43a8:	07000000 	streq	r0, [r0, -r0]
    43ac:	00c87400 	sbceq	r7, r8, r0, lsl #8
    43b0:	9f012306 	svcls	0x00012306
	...
    43bc:	c8740007 	ldmdagt	r4!, {r0, r1, r2}^
    43c0:	01230600 			; <UNDEFINED> instruction: 0x01230600
    43c4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    43c8:	00000000 	andeq	r0, r0, r0
    43cc:	53000100 	movwpl	r0, #256	; 0x100
	...
    43e4:	00500001 	subseq	r0, r0, r1
    43e8:	00000000 	andeq	r0, r0, r0
    43ec:	01000000 	mrseq	r0, (UNDEF: 0)
    43f0:	00005100 	andeq	r5, r0, r0, lsl #2
    43f4:	00000000 	andeq	r0, r0, r0
    43f8:	22dc0000 	sbcscs	r0, ip, #0
    43fc:	22de1000 	sbcscs	r1, lr, #0
    4400:	00021000 	andeq	r1, r2, r0
    4404:	22de007d 	sbcscs	r0, lr, #125	; 0x7d
    4408:	22e01000 	rsccs	r1, r0, #0
    440c:	00021000 	andeq	r1, r2, r0
    4410:	22e0147d 	rsccs	r1, r0, #2097152000	; 0x7d000000
    4414:	23021000 	movwcs	r1, #8192	; 0x2000
    4418:	00021000 	andeq	r1, r2, r0
    441c:	2302287d 	movwcs	r2, #10365	; 0x287d
    4420:	23041000 	movwcs	r1, #16384	; 0x4000
    4424:	00021000 	andeq	r1, r2, r0
    4428:	2304147d 	movwcs	r1, #17533	; 0x447d
    442c:	23cc1000 	biccs	r1, ip, #0
    4430:	00021000 	andeq	r1, r2, r0
    4434:	0000287d 	andeq	r2, r0, sp, ror r8
	...
    4440:	22dc0000 	sbcscs	r0, ip, #0
    4444:	22ea1000 	rsccs	r1, sl, #0
    4448:	00011000 	andeq	r1, r1, r0
    444c:	0022ea50 	eoreq	lr, r2, r0, asr sl
    4450:	0023cc10 	eoreq	ip, r3, r0, lsl ip
    4454:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
	...
    4464:	100022dc 	ldrdne	r2, [r0], -ip
    4468:	100022ea 	andne	r2, r0, sl, ror #5
    446c:	ea510001 	b	1444478 <__RAM_SIZE+0x1344478>
    4470:	cc100022 	ldcgt	0, cr0, [r0], {34}	; 0x22
    4474:	01100023 	tsteq	r0, r3, lsr #32
    4478:	00005700 	andeq	r5, r0, r0, lsl #14
	...
    4484:	100022dc 	ldrdne	r2, [r0], -ip
    4488:	100022ea 	andne	r2, r0, sl, ror #5
    448c:	00520001 	subseq	r0, r2, r1
    4490:	00000000 	andeq	r0, r0, r0
    4494:	01000000 	mrseq	r0, (UNDEF: 0)
    4498:	01010000 	mrseq	r0, (UNDEF: 1)
    449c:	e6000000 	str	r0, [r0], -r0
    44a0:	ea100022 	b	404530 <__RAM_SIZE+0x304530>
    44a4:	02100022 	andseq	r0, r0, #34	; 0x22
    44a8:	ea9f3000 	b	fe7d04b0 <__StackTop+0xc66d04b0>
    44ac:	24100022 	ldrcs	r0, [r0], #-34	; 0xffffffde
    44b0:	01100023 	tsteq	r0, r3, lsr #32
    44b4:	23245600 			; <UNDEFINED> instruction: 0x23245600
    44b8:	23281000 			; <UNDEFINED> instruction: 0x23281000
    44bc:	00021000 	andeq	r1, r2, r0
    44c0:	23289f31 			; <UNDEFINED> instruction: 0x23289f31
    44c4:	23cc1000 	biccs	r1, ip, #0
    44c8:	00011000 	andeq	r1, r1, r0
    44cc:	00000056 	andeq	r0, r0, r6, asr r0
    44d0:	00000000 	andeq	r0, r0, r0
    44d4:	00000300 	andeq	r0, r0, r0, lsl #6
    44d8:	0022e600 	eoreq	lr, r2, r0, lsl #12
    44dc:	0022ea10 	eoreq	lr, r2, r0, lsl sl
    44e0:	50000110 	andpl	r0, r0, r0, lsl r1
    44e4:	100022ea 	andne	r2, r0, sl, ror #5
    44e8:	100023cc 	andne	r2, r0, ip, asr #7
    44ec:	00540001 	subseq	r0, r4, r1
	...
    4500:	0022ea00 	eoreq	lr, r2, r0, lsl #20
    4504:	0022f410 	eoreq	pc, r2, r0, lsl r4	; <UNPREDICTABLE>
    4508:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
    450c:	100022f4 	strdne	r2, [r0], -r4
    4510:	10002300 	andne	r2, r0, r0, lsl #6
    4514:	01750003 	cmneq	r5, r3
    4518:	0023049f 	mlaeq	r3, pc, r4, r0	; <UNPREDICTABLE>
    451c:	00231610 	eoreq	r1, r3, r0, lsl r6
    4520:	75000310 	strvc	r0, [r0, #-784]	; 0xfffffcf0
    4524:	23169f01 	tstcs	r6, #1, 30
    4528:	23581000 	cmpcs	r8, #0
    452c:	00011000 	andeq	r1, r1, r0
    4530:	00235e55 	eoreq	r5, r3, r5, asr lr
    4534:	0023cc10 	eoreq	ip, r3, r0, lsl ip
    4538:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
	...
    454c:	007d0002 	rsbseq	r0, sp, r2
	...
    4558:	187d0002 	ldmdane	sp!, {r1}^
	...
    4594:	00010000 	andeq	r0, r1, r0
    4598:	00000050 	andeq	r0, r0, r0, asr r0
    459c:	00000000 	andeq	r0, r0, r0
    45a0:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    45ac:	01f30004 	mvnseq	r0, r4
    45b0:	00009f50 	andeq	r9, r0, r0, asr pc
    45b4:	00000000 	andeq	r0, r0, r0
    45b8:	00010000 	andeq	r0, r1, r0
    45bc:	00000054 	andeq	r0, r0, r4, asr r0
    45c0:	00000000 	andeq	r0, r0, r0
    45c4:	f3000400 	vshl.u8	d0, d0, d0
    45c8:	009f5001 	addseq	r5, pc, r1
    45cc:	00000000 	andeq	r0, r0, r0
    45d0:	01000000 	mrseq	r0, (UNDEF: 0)
    45d4:	00005400 	andeq	r5, r0, r0, lsl #8
    45d8:	00000000 	andeq	r0, r0, r0
    45dc:	00040000 	andeq	r0, r4, r0
    45e0:	9f5001f3 	svcls	0x005001f3
	...
    45ec:	00540001 	subseq	r0, r4, r1
    45f0:	00000000 	andeq	r0, r0, r0
    45f4:	04000000 	streq	r0, [r0], #-0
    45f8:	5001f300 	andpl	pc, r1, r0, lsl #6
    45fc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4600:	00000000 	andeq	r0, r0, r0
    4604:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    4610:	01f30004 	mvnseq	r0, r4
    4614:	00009f50 	andeq	r9, r0, r0, asr pc
    4618:	00000000 	andeq	r0, r0, r0
    461c:	00010000 	andeq	r0, r1, r0
    4620:	00000054 	andeq	r0, r0, r4, asr r0
    4624:	00000000 	andeq	r0, r0, r0
    4628:	f3000400 	vshl.u8	d0, d0, d0
    462c:	009f5001 	addseq	r5, pc, r1
    4630:	00000000 	andeq	r0, r0, r0
    4634:	01000000 	mrseq	r0, (UNDEF: 0)
    4638:	00005400 	andeq	r5, r0, r0, lsl #8
    463c:	00000000 	andeq	r0, r0, r0
    4640:	00040000 	andeq	r0, r4, r0
    4644:	9f5001f3 	svcls	0x005001f3
	...
    4650:	00540001 	subseq	r0, r4, r1
    4654:	00000000 	andeq	r0, r0, r0
    4658:	04000000 	streq	r0, [r0], #-0
    465c:	5001f300 	andpl	pc, r1, r0, lsl #6
    4660:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4664:	00000000 	andeq	r0, r0, r0
    4668:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    4674:	01f30004 	mvnseq	r0, r4
    4678:	00009f50 	andeq	r9, r0, r0, asr pc
    467c:	00000000 	andeq	r0, r0, r0
    4680:	00010000 	andeq	r0, r1, r0
    4684:	00000054 	andeq	r0, r0, r4, asr r0
    4688:	00000000 	andeq	r0, r0, r0
    468c:	f3000400 	vshl.u8	d0, d0, d0
    4690:	009f5001 	addseq	r5, pc, r1
	...
    46a4:	01000000 	mrseq	r0, (UNDEF: 0)
    46a8:	00005100 	andeq	r5, r0, r0, lsl #2
    46ac:	00000000 	andeq	r0, r0, r0
    46b0:	00010000 	andeq	r0, r1, r0
    46b4:	00000056 	andeq	r0, r0, r6, asr r0
	...
    46c4:	01000000 	mrseq	r0, (UNDEF: 0)
    46c8:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    46e8:	00010000 	andeq	r0, r1, r0
    46ec:	00000050 	andeq	r0, r0, r0, asr r0
    46f0:	00000000 	andeq	r0, r0, r0
    46f4:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    4700:	00500001 	subseq	r0, r0, r1
    4704:	00000000 	andeq	r0, r0, r0
    4708:	01000000 	mrseq	r0, (UNDEF: 0)
    470c:	00005500 	andeq	r5, r0, r0, lsl #10
    4710:	00000000 	andeq	r0, r0, r0
    4714:	00010000 	andeq	r0, r1, r0
    4718:	00000050 	andeq	r0, r0, r0, asr r0
    471c:	00000000 	andeq	r0, r0, r0
    4720:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    472c:	00500001 	subseq	r0, r0, r1
    4730:	00000000 	andeq	r0, r0, r0
    4734:	01000000 	mrseq	r0, (UNDEF: 0)
    4738:	00005500 	andeq	r5, r0, r0, lsl #10
    473c:	00000000 	andeq	r0, r0, r0
    4740:	00030000 	andeq	r0, r3, r0
	...
    4774:	00500001 	subseq	r0, r0, r1
    4778:	00000000 	andeq	r0, r0, r0
    477c:	01000000 	mrseq	r0, (UNDEF: 0)
    4780:	00005400 	andeq	r5, r0, r0, lsl #8
    4784:	00000000 	andeq	r0, r0, r0
    4788:	00040000 	andeq	r0, r4, r0
    478c:	9f5001f3 	svcls	0x005001f3
	...
    4798:	00540001 	subseq	r0, r4, r1
    479c:	00000000 	andeq	r0, r0, r0
    47a0:	04000000 	streq	r0, [r0], #-0
    47a4:	5001f300 	andpl	pc, r1, r0, lsl #6
    47a8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    47ac:	00000000 	andeq	r0, r0, r0
    47b0:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    47bc:	01f30004 	mvnseq	r0, r4
    47c0:	00009f50 	andeq	r9, r0, r0, asr pc
    47c4:	00000000 	andeq	r0, r0, r0
    47c8:	00010000 	andeq	r0, r1, r0
    47cc:	00000054 	andeq	r0, r0, r4, asr r0
    47d0:	00000000 	andeq	r0, r0, r0
    47d4:	f3000400 	vshl.u8	d0, d0, d0
    47d8:	009f5001 	addseq	r5, pc, r1
    47dc:	00000000 	andeq	r0, r0, r0
    47e0:	01000000 	mrseq	r0, (UNDEF: 0)
    47e4:	00005400 	andeq	r5, r0, r0, lsl #8
    47e8:	00000000 	andeq	r0, r0, r0
    47ec:	00040000 	andeq	r0, r4, r0
    47f0:	9f5001f3 	svcls	0x005001f3
	...
    47fc:	00540001 	subseq	r0, r4, r1
    4800:	00000000 	andeq	r0, r0, r0
    4804:	04000000 	streq	r0, [r0], #-0
    4808:	5001f300 	andpl	pc, r1, r0, lsl #6
    480c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4810:	00000000 	andeq	r0, r0, r0
    4814:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    4820:	01f30004 	mvnseq	r0, r4
    4824:	00009f50 	andeq	r9, r0, r0, asr pc
    4828:	00000000 	andeq	r0, r0, r0
    482c:	00010000 	andeq	r0, r1, r0
    4830:	00000054 	andeq	r0, r0, r4, asr r0
    4834:	00000000 	andeq	r0, r0, r0
    4838:	f3000400 	vshl.u8	d0, d0, d0
    483c:	009f5001 	addseq	r5, pc, r1
    4840:	00000000 	andeq	r0, r0, r0
    4844:	01000000 	mrseq	r0, (UNDEF: 0)
    4848:	00005400 	andeq	r5, r0, r0, lsl #8
    484c:	00000000 	andeq	r0, r0, r0
    4850:	00040000 	andeq	r0, r4, r0
    4854:	9f5001f3 	svcls	0x005001f3
	...
    4860:	00540001 	subseq	r0, r4, r1
    4864:	00000000 	andeq	r0, r0, r0
    4868:	04000000 	streq	r0, [r0], #-0
    486c:	5001f300 	andpl	pc, r1, r0, lsl #6
    4870:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    4890:	53000100 	movwpl	r0, #256	; 0x100
	...
    489c:	7f730003 	svcvc	0x00730003
    48a0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    48a4:	00000000 	andeq	r0, r0, r0
    48a8:	74000700 	strvc	r0, [r0], #-1792	; 0xfffff900
    48ac:	310600c8 	smlabtcc	r6, r8, r0, r0
    48b0:	00009f1c 	andeq	r9, r0, ip, lsl pc
    48b4:	00000000 	andeq	r0, r0, r0
    48b8:	00070000 	andeq	r0, r7, r0
    48bc:	0600c874 			; <UNDEFINED> instruction: 0x0600c874
    48c0:	009f1c31 	addseq	r1, pc, r1, lsr ip	; <UNPREDICTABLE>
    48c4:	00000000 	andeq	r0, r0, r0
    48c8:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    48cc:	5001f300 	andpl	pc, r1, r0, lsl #6
    48d0:	31064823 	tstcc	r6, r3, lsr #16
    48d4:	00009f1c 	andeq	r9, r0, ip, lsl pc
    48d8:	00000000 	andeq	r0, r0, r0
    48dc:	00070000 	andeq	r0, r7, r0
    48e0:	0600c874 			; <UNDEFINED> instruction: 0x0600c874
    48e4:	009f1c31 	addseq	r1, pc, r1, lsr ip	; <UNPREDICTABLE>
    48e8:	00000000 	andeq	r0, r0, r0
    48ec:	03000000 	movweq	r0, #0
    48f0:	9f7f7300 	svcls	0x007f7300
	...
    48fc:	00530001 	subseq	r0, r3, r1
	...
    4914:	57000100 	strpl	r0, [r0, -r0, lsl #2]
	...
    4920:	7f770003 	svcvc	0x00770003
    4924:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4928:	00000000 	andeq	r0, r0, r0
    492c:	57000100 	strpl	r0, [r0, -r0, lsl #2]
	...
    4944:	00500001 	subseq	r0, r0, r1
    4948:	00000000 	andeq	r0, r0, r0
    494c:	01000000 	mrseq	r0, (UNDEF: 0)
    4950:	00005000 	andeq	r5, r0, r0
	...
    4960:	00020000 	andeq	r0, r2, r0
    4964:	0000007d 	andeq	r0, r0, sp, ror r0
    4968:	00000000 	andeq	r0, r0, r0
    496c:	00020000 	andeq	r0, r2, r0
    4970:	0000207d 	andeq	r2, r0, sp, ror r0
	...
    49b0:	00500001 	subseq	r0, r0, r1
    49b4:	00000000 	andeq	r0, r0, r0
    49b8:	01000000 	mrseq	r0, (UNDEF: 0)
    49bc:	00005400 	andeq	r5, r0, r0, lsl #8
    49c0:	00000000 	andeq	r0, r0, r0
    49c4:	00040000 	andeq	r0, r4, r0
    49c8:	9f5001f3 	svcls	0x005001f3
	...
    49d4:	00540001 	subseq	r0, r4, r1
    49d8:	00000000 	andeq	r0, r0, r0
    49dc:	04000000 	streq	r0, [r0], #-0
    49e0:	5001f300 	andpl	pc, r1, r0, lsl #6
    49e4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    49e8:	00000000 	andeq	r0, r0, r0
    49ec:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    49f8:	01f30004 	mvnseq	r0, r4
    49fc:	00009f50 	andeq	r9, r0, r0, asr pc
    4a00:	00000000 	andeq	r0, r0, r0
    4a04:	00010000 	andeq	r0, r1, r0
    4a08:	00000054 	andeq	r0, r0, r4, asr r0
    4a0c:	00000000 	andeq	r0, r0, r0
    4a10:	f3000400 	vshl.u8	d0, d0, d0
    4a14:	009f5001 	addseq	r5, pc, r1
    4a18:	00000000 	andeq	r0, r0, r0
    4a1c:	01000000 	mrseq	r0, (UNDEF: 0)
    4a20:	00005400 	andeq	r5, r0, r0, lsl #8
    4a24:	00000000 	andeq	r0, r0, r0
    4a28:	00040000 	andeq	r0, r4, r0
    4a2c:	9f5001f3 	svcls	0x005001f3
	...
    4a38:	00540001 	subseq	r0, r4, r1
    4a3c:	00000000 	andeq	r0, r0, r0
    4a40:	04000000 	streq	r0, [r0], #-0
    4a44:	5001f300 	andpl	pc, r1, r0, lsl #6
    4a48:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4a4c:	00000000 	andeq	r0, r0, r0
    4a50:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    4a5c:	01f30004 	mvnseq	r0, r4
    4a60:	00009f50 	andeq	r9, r0, r0, asr pc
    4a64:	00000000 	andeq	r0, r0, r0
    4a68:	00010000 	andeq	r0, r1, r0
    4a6c:	00000054 	andeq	r0, r0, r4, asr r0
    4a70:	00000000 	andeq	r0, r0, r0
    4a74:	f3000400 	vshl.u8	d0, d0, d0
    4a78:	009f5001 	addseq	r5, pc, r1
    4a7c:	00000000 	andeq	r0, r0, r0
    4a80:	01000000 	mrseq	r0, (UNDEF: 0)
    4a84:	00005400 	andeq	r5, r0, r0, lsl #8
    4a88:	00000000 	andeq	r0, r0, r0
    4a8c:	00040000 	andeq	r0, r4, r0
    4a90:	9f5001f3 	svcls	0x005001f3
	...
    4a9c:	00540001 	subseq	r0, r4, r1
    4aa0:	00000000 	andeq	r0, r0, r0
    4aa4:	04000000 	streq	r0, [r0], #-0
    4aa8:	5001f300 	andpl	pc, r1, r0, lsl #6
    4aac:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4ab0:	00000000 	andeq	r0, r0, r0
    4ab4:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    4ac0:	01f30004 	mvnseq	r0, r4
    4ac4:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    4ad8:	00010000 	andeq	r0, r1, r0
    4adc:	00000051 	andeq	r0, r0, r1, asr r0
    4ae0:	00000000 	andeq	r0, r0, r0
    4ae4:	57000100 	strpl	r0, [r0, -r0, lsl #2]
	...
    4afc:	00520001 	subseq	r0, r2, r1
    4b00:	00000000 	andeq	r0, r0, r0
    4b04:	01000000 	mrseq	r0, (UNDEF: 0)
    4b08:	00005900 	andeq	r5, r0, r0, lsl #18
	...
    4b1c:	00010000 	andeq	r0, r1, r0
    4b20:	00000053 	andeq	r0, r0, r3, asr r0
    4b24:	00000000 	andeq	r0, r0, r0
    4b28:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    4b3c:	00010000 	andeq	r0, r1, r0
    4b40:	00000054 	andeq	r0, r0, r4, asr r0
	...
    4b58:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    4b64:	00560001 	subseq	r0, r6, r1
    4b68:	00000000 	andeq	r0, r0, r0
    4b6c:	01000000 	mrseq	r0, (UNDEF: 0)
    4b70:	00005000 	andeq	r5, r0, r0
    4b74:	00000000 	andeq	r0, r0, r0
    4b78:	00010000 	andeq	r0, r1, r0
    4b7c:	00000056 	andeq	r0, r0, r6, asr r0
    4b80:	00000000 	andeq	r0, r0, r0
    4b84:	00000300 	andeq	r0, r0, r0, lsl #6
	...
    4bb8:	01000000 	mrseq	r0, (UNDEF: 0)
    4bbc:	00005000 	andeq	r5, r0, r0
    4bc0:	00000000 	andeq	r0, r0, r0
    4bc4:	00010000 	andeq	r0, r1, r0
    4bc8:	00000054 	andeq	r0, r0, r4, asr r0
    4bcc:	00000000 	andeq	r0, r0, r0
    4bd0:	f3000400 	vshl.u8	d0, d0, d0
    4bd4:	009f5001 	addseq	r5, pc, r1
    4bd8:	00000000 	andeq	r0, r0, r0
    4bdc:	01000000 	mrseq	r0, (UNDEF: 0)
    4be0:	00005400 	andeq	r5, r0, r0, lsl #8
    4be4:	00000000 	andeq	r0, r0, r0
    4be8:	00040000 	andeq	r0, r4, r0
    4bec:	9f5001f3 	svcls	0x005001f3
	...
    4bf8:	00540001 	subseq	r0, r4, r1
    4bfc:	00000000 	andeq	r0, r0, r0
    4c00:	04000000 	streq	r0, [r0], #-0
    4c04:	5001f300 	andpl	pc, r1, r0, lsl #6
    4c08:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4c0c:	00000000 	andeq	r0, r0, r0
    4c10:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    4c1c:	01f30004 	mvnseq	r0, r4
    4c20:	00009f50 	andeq	r9, r0, r0, asr pc
    4c24:	00000000 	andeq	r0, r0, r0
    4c28:	00010000 	andeq	r0, r1, r0
    4c2c:	00000054 	andeq	r0, r0, r4, asr r0
    4c30:	00000000 	andeq	r0, r0, r0
    4c34:	f3000400 	vshl.u8	d0, d0, d0
    4c38:	009f5001 	addseq	r5, pc, r1
    4c3c:	00000000 	andeq	r0, r0, r0
    4c40:	01000000 	mrseq	r0, (UNDEF: 0)
    4c44:	00005400 	andeq	r5, r0, r0, lsl #8
    4c48:	00000000 	andeq	r0, r0, r0
    4c4c:	00040000 	andeq	r0, r4, r0
    4c50:	9f5001f3 	svcls	0x005001f3
	...
    4c5c:	00540001 	subseq	r0, r4, r1
    4c60:	00000000 	andeq	r0, r0, r0
    4c64:	04000000 	streq	r0, [r0], #-0
    4c68:	5001f300 	andpl	pc, r1, r0, lsl #6
    4c6c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4c70:	00000000 	andeq	r0, r0, r0
    4c74:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    4c80:	01f30004 	mvnseq	r0, r4
    4c84:	00009f50 	andeq	r9, r0, r0, asr pc
    4c88:	00000000 	andeq	r0, r0, r0
    4c8c:	00010000 	andeq	r0, r1, r0
    4c90:	00000054 	andeq	r0, r0, r4, asr r0
    4c94:	00000000 	andeq	r0, r0, r0
    4c98:	f3000400 	vshl.u8	d0, d0, d0
    4c9c:	009f5001 	addseq	r5, pc, r1
    4ca0:	00000000 	andeq	r0, r0, r0
    4ca4:	01000000 	mrseq	r0, (UNDEF: 0)
    4ca8:	00005400 	andeq	r5, r0, r0, lsl #8
    4cac:	00000000 	andeq	r0, r0, r0
    4cb0:	00040000 	andeq	r0, r4, r0
    4cb4:	9f5001f3 	svcls	0x005001f3
	...
    4cc0:	00540001 	subseq	r0, r4, r1
    4cc4:	00000000 	andeq	r0, r0, r0
    4cc8:	04000000 	streq	r0, [r0], #-0
    4ccc:	5001f300 	andpl	pc, r1, r0, lsl #6
    4cd0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    4ce4:	01000000 	mrseq	r0, (UNDEF: 0)
    4ce8:	00005800 	andeq	r5, r0, r0, lsl #16
    4cec:	00000000 	andeq	r0, r0, r0
    4cf0:	00030000 	andeq	r0, r3, r0
    4cf4:	009f7f78 	addseq	r7, pc, r8, ror pc	; <UNPREDICTABLE>
    4cf8:	00000000 	andeq	r0, r0, r0
    4cfc:	01000000 	mrseq	r0, (UNDEF: 0)
    4d00:	00005800 	andeq	r5, r0, r0, lsl #16
	...
    4d14:	005a0001 	subseq	r0, sl, r1
	...
    4d28:	01000000 	mrseq	r0, (UNDEF: 0)
    4d2c:	00005000 	andeq	r5, r0, r0
    4d30:	00000000 	andeq	r0, r0, r0
    4d34:	00010000 	andeq	r0, r1, r0
    4d38:	00000050 	andeq	r0, r0, r0, asr r0
	...
    4d48:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    4d54:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    4d58:	00000014 	andeq	r0, r0, r4, lsl r0
    4d5c:	00000000 	andeq	r0, r0, r0
    4d60:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    4d64:	00000028 	andeq	r0, r0, r8, lsr #32
    4d68:	00000000 	andeq	r0, r0, r0
    4d6c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    4d70:	00000014 	andeq	r0, r0, r4, lsl r0
    4d74:	00000000 	andeq	r0, r0, r0
    4d78:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    4d7c:	00000028 	andeq	r0, r0, r8, lsr #32
	...
    4d90:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    4d9c:	00540001 	subseq	r0, r4, r1
	...
    4db0:	01000000 	mrseq	r0, (UNDEF: 0)
    4db4:	00005100 	andeq	r5, r0, r0, lsl #2
    4db8:	00000000 	andeq	r0, r0, r0
    4dbc:	00010000 	andeq	r0, r1, r0
    4dc0:	00000057 	andeq	r0, r0, r7, asr r0
	...
    4dd0:	01000000 	mrseq	r0, (UNDEF: 0)
    4dd4:	00005200 	andeq	r5, r0, r0, lsl #4
	...
    4de8:	00010000 	andeq	r0, r1, r0
    4dec:	00000053 	andeq	r0, r0, r3, asr r0
    4df0:	00000000 	andeq	r0, r0, r0
    4df4:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    4e00:	00000001 	andeq	r0, r0, r1
    4e04:	00010100 	andeq	r0, r1, r0, lsl #2
	...
    4e10:	00020000 	andeq	r0, r2, r0
    4e14:	00009f30 	andeq	r9, r0, r0, lsr pc
    4e18:	00000000 	andeq	r0, r0, r0
    4e1c:	00010000 	andeq	r0, r1, r0
    4e20:	00000056 	andeq	r0, r0, r6, asr r0
    4e24:	00000000 	andeq	r0, r0, r0
    4e28:	56000100 	strpl	r0, [r0], -r0, lsl #2
	...
    4e34:	9f310002 	svcls	0x00310002
	...
    4e40:	00560001 	subseq	r0, r6, r1
	...
    4e58:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    4e64:	00500001 	subseq	r0, r0, r1
    4e68:	00000000 	andeq	r0, r0, r0
    4e6c:	01000000 	mrseq	r0, (UNDEF: 0)
    4e70:	00005000 	andeq	r5, r0, r0
    4e74:	00000000 	andeq	r0, r0, r0
    4e78:	00030000 	andeq	r0, r3, r0
	...
    4e84:	00010000 	andeq	r0, r1, r0
    4e88:	00000050 	andeq	r0, r0, r0, asr r0
    4e8c:	00000000 	andeq	r0, r0, r0
    4e90:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    4ea8:	00560001 	subseq	r0, r6, r1
    4eac:	00000000 	andeq	r0, r0, r0
    4eb0:	01000000 	mrseq	r0, (UNDEF: 0)
    4eb4:	00005600 	andeq	r5, r0, r0, lsl #12
	...
    4ec4:	00020000 	andeq	r0, r2, r0
    4ec8:	0000007d 	andeq	r0, r0, sp, ror r0
    4ecc:	00000000 	andeq	r0, r0, r0
    4ed0:	00020000 	andeq	r0, r2, r0
    4ed4:	0000087d 	andeq	r0, r0, sp, ror r8
    4ed8:	00000000 	andeq	r0, r0, r0
    4edc:	00020000 	andeq	r0, r2, r0
    4ee0:	0000007d 	andeq	r0, r0, sp, ror r0
    4ee4:	00000000 	andeq	r0, r0, r0
    4ee8:	00020000 	andeq	r0, r2, r0
    4eec:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    4f08:	00010000 	andeq	r0, r1, r0
    4f0c:	00000050 	andeq	r0, r0, r0, asr r0
    4f10:	00000000 	andeq	r0, r0, r0
    4f14:	f3000400 	vshl.u8	d0, d0, d0
    4f18:	009f5001 	addseq	r5, pc, r1
    4f1c:	00000000 	andeq	r0, r0, r0
    4f20:	01000000 	mrseq	r0, (UNDEF: 0)
    4f24:	00005000 	andeq	r5, r0, r0
    4f28:	00000000 	andeq	r0, r0, r0
    4f2c:	00040000 	andeq	r0, r4, r0
    4f30:	9f5001f3 	svcls	0x005001f3
	...
    4f3c:	00500001 	subseq	r0, r0, r1
    4f40:	00000000 	andeq	r0, r0, r0
    4f44:	04000000 	streq	r0, [r0], #-0
    4f48:	5001f300 	andpl	pc, r1, r0, lsl #6
    4f4c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    4f58:	04040000 	streq	r0, [r4], #-0
	...
    4f64:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    4f70:	00540001 	subseq	r0, r4, r1
    4f74:	00000000 	andeq	r0, r0, r0
    4f78:	01000000 	mrseq	r0, (UNDEF: 0)
    4f7c:	00005100 	andeq	r5, r0, r0, lsl #2
    4f80:	00000000 	andeq	r0, r0, r0
    4f84:	00010000 	andeq	r0, r1, r0
    4f88:	00000054 	andeq	r0, r0, r4, asr r0
    4f8c:	00000000 	andeq	r0, r0, r0
    4f90:	00000200 	andeq	r0, r0, r0, lsl #4
    4f94:	00040000 	andeq	r0, r4, r0
    4f98:	00000000 	andeq	r0, r0, r0
    4f9c:	02000000 	andeq	r0, r0, #0
    4fa0:	009f3000 	addseq	r3, pc, r0
    4fa4:	00000000 	andeq	r0, r0, r0
    4fa8:	01000000 	mrseq	r0, (UNDEF: 0)
    4fac:	00005000 	andeq	r5, r0, r0
    4fb0:	00000000 	andeq	r0, r0, r0
    4fb4:	00020000 	andeq	r0, r2, r0
    4fb8:	00009f30 	andeq	r9, r0, r0, lsr pc
	...
    4fc8:	00020000 	andeq	r0, r2, r0
    4fcc:	0000007d 	andeq	r0, r0, sp, ror r0
    4fd0:	00000000 	andeq	r0, r0, r0
    4fd4:	00020000 	andeq	r0, r2, r0
    4fd8:	0000087d 	andeq	r0, r0, sp, ror r8
    4fdc:	00000000 	andeq	r0, r0, r0
    4fe0:	00020000 	andeq	r0, r2, r0
    4fe4:	0000107d 	andeq	r1, r0, sp, ror r0
    4fe8:	00000000 	andeq	r0, r0, r0
    4fec:	00020000 	andeq	r0, r2, r0
    4ff0:	0000007d 	andeq	r0, r0, sp, ror r0
    4ff4:	00000000 	andeq	r0, r0, r0
    4ff8:	00020000 	andeq	r0, r2, r0
    4ffc:	0000107d 	andeq	r1, r0, sp, ror r0
    5000:	00000000 	andeq	r0, r0, r0
    5004:	00020000 	andeq	r0, r2, r0
    5008:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    5024:	00010000 	andeq	r0, r1, r0
    5028:	00000050 	andeq	r0, r0, r0, asr r0
    502c:	00000000 	andeq	r0, r0, r0
    5030:	f3000400 	vshl.u8	d0, d0, d0
    5034:	009f5001 	addseq	r5, pc, r1
    5038:	00000000 	andeq	r0, r0, r0
    503c:	01000000 	mrseq	r0, (UNDEF: 0)
    5040:	00005000 	andeq	r5, r0, r0
    5044:	00000000 	andeq	r0, r0, r0
    5048:	00040000 	andeq	r0, r4, r0
    504c:	9f5001f3 	svcls	0x005001f3
	...
    5058:	00500001 	subseq	r0, r0, r1
    505c:	00000000 	andeq	r0, r0, r0
    5060:	04000000 	streq	r0, [r0], #-0
    5064:	5001f300 	andpl	pc, r1, r0, lsl #6
    5068:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    5074:	04040000 	streq	r0, [r4], #-0
	...
    5080:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    508c:	00540001 	subseq	r0, r4, r1
    5090:	00000000 	andeq	r0, r0, r0
    5094:	01000000 	mrseq	r0, (UNDEF: 0)
    5098:	00005100 	andeq	r5, r0, r0, lsl #2
    509c:	00000000 	andeq	r0, r0, r0
    50a0:	00010000 	andeq	r0, r1, r0
    50a4:	00000054 	andeq	r0, r0, r4, asr r0
	...
    50b4:	00000404 	andeq	r0, r0, r4, lsl #8
    50b8:	00000000 	andeq	r0, r0, r0
    50bc:	01000000 	mrseq	r0, (UNDEF: 0)
    50c0:	00005200 	andeq	r5, r0, r0, lsl #4
    50c4:	00000000 	andeq	r0, r0, r0
    50c8:	00010000 	andeq	r0, r1, r0
    50cc:	00000053 	andeq	r0, r0, r3, asr r0
    50d0:	00000000 	andeq	r0, r0, r0
    50d4:	f3000400 	vshl.u8	d0, d0, d0
    50d8:	009f5201 	addseq	r5, pc, r1, lsl #4
    50dc:	00000000 	andeq	r0, r0, r0
    50e0:	01000000 	mrseq	r0, (UNDEF: 0)
    50e4:	00005200 	andeq	r5, r0, r0, lsl #4
    50e8:	00000000 	andeq	r0, r0, r0
    50ec:	00040000 	andeq	r0, r4, r0
    50f0:	9f5201f3 	svcls	0x005201f3
	...
    50fc:	00000002 	andeq	r0, r0, r2
    5100:	00000400 	andeq	r0, r0, r0, lsl #8
    5104:	00000000 	andeq	r0, r0, r0
    5108:	00020000 	andeq	r0, r2, r0
    510c:	00009f30 	andeq	r9, r0, r0, lsr pc
    5110:	00000000 	andeq	r0, r0, r0
    5114:	00010000 	andeq	r0, r1, r0
    5118:	00000050 	andeq	r0, r0, r0, asr r0
    511c:	00000000 	andeq	r0, r0, r0
    5120:	30000200 	andcc	r0, r0, r0, lsl #4
    5124:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    5134:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    5140:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    5144:	00000010 	andeq	r0, r0, r0, lsl r0
	...
    5158:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    5164:	00540001 	subseq	r0, r4, r1
	...
    5178:	01000000 	mrseq	r0, (UNDEF: 0)
    517c:	00005100 	andeq	r5, r0, r0, lsl #2
    5180:	00000000 	andeq	r0, r0, r0
    5184:	00010000 	andeq	r0, r1, r0
    5188:	00000055 	andeq	r0, r0, r5, asr r0
    518c:	00000000 	andeq	r0, r0, r0
    5190:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    519c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    51a8:	9f310002 	svcls	0x00310002
	...
    51b4:	00000002 	andeq	r0, r0, r2
	...
    51c0:	00500001 	subseq	r0, r0, r1
    51c4:	00000000 	andeq	r0, r0, r0
    51c8:	01000000 	mrseq	r0, (UNDEF: 0)
    51cc:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    51dc:	00020000 	andeq	r0, r2, r0
    51e0:	0000007d 	andeq	r0, r0, sp, ror r0
    51e4:	00000000 	andeq	r0, r0, r0
    51e8:	00020000 	andeq	r0, r2, r0
    51ec:	0000107d 	andeq	r1, r0, sp, ror r0
	...
    5200:	00010000 	andeq	r0, r1, r0
    5204:	00000050 	andeq	r0, r0, r0, asr r0
    5208:	00000000 	andeq	r0, r0, r0
    520c:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    5220:	00020000 	andeq	r0, r2, r0
    5224:	00009f31 	andeq	r9, r0, r1, lsr pc
    5228:	00000000 	andeq	r0, r0, r0
    522c:	00020000 	andeq	r0, r2, r0
	...
    5238:	00010000 	andeq	r0, r1, r0
    523c:	00000050 	andeq	r0, r0, r0, asr r0
    5240:	00000000 	andeq	r0, r0, r0
    5244:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    5258:	007d0002 	rsbseq	r0, sp, r2
	...
    5264:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    5270:	107d0002 	rsbsne	r0, sp, r2
	...
    527c:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    5294:	00500001 	subseq	r0, r0, r1
    5298:	00000000 	andeq	r0, r0, r0
    529c:	04000000 	streq	r0, [r0], #-0
    52a0:	5001f300 	andpl	pc, r1, r0, lsl #6
    52a4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    52b8:	01000000 	mrseq	r0, (UNDEF: 0)
    52bc:	00005100 	andeq	r5, r0, r0, lsl #2
    52c0:	00000000 	andeq	r0, r0, r0
    52c4:	00010000 	andeq	r0, r1, r0
    52c8:	00000053 	andeq	r0, r0, r3, asr r0
    52cc:	00000000 	andeq	r0, r0, r0
    52d0:	f3000400 	vshl.u8	d0, d0, d0
    52d4:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
    52e8:	01000000 	mrseq	r0, (UNDEF: 0)
    52ec:	00005000 	andeq	r5, r0, r0
    52f0:	00000000 	andeq	r0, r0, r0
    52f4:	00010000 	andeq	r0, r1, r0
    52f8:	00000054 	andeq	r0, r0, r4, asr r0
	...
    5308:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    5314:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    5318:	00000008 	andeq	r0, r0, r8
	...
    532c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    5338:	01f30004 	mvnseq	r0, r4
    533c:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    5350:	00010000 	andeq	r0, r1, r0
    5354:	00000050 	andeq	r0, r0, r0, asr r0
    5358:	00000000 	andeq	r0, r0, r0
    535c:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    5370:	007d0002 	rsbseq	r0, sp, r2
	...
    537c:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    5388:	007d0002 	rsbseq	r0, sp, r2
	...
    53a0:	00010000 	andeq	r0, r1, r0
    53a4:	00000050 	andeq	r0, r0, r0, asr r0
    53a8:	00000000 	andeq	r0, r0, r0
    53ac:	f3000400 	vshl.u8	d0, d0, d0
    53b0:	009f5001 	addseq	r5, pc, r1
    53b4:	00000000 	andeq	r0, r0, r0
    53b8:	01000000 	mrseq	r0, (UNDEF: 0)
    53bc:	00005000 	andeq	r5, r0, r0
    53c0:	00000000 	andeq	r0, r0, r0
    53c4:	227e0000 	rsbscs	r0, lr, #0
    53c8:	22801000 	addcs	r1, r0, #0
    53cc:	00021000 	andeq	r1, r2, r0
    53d0:	2280007d 	addcs	r0, r0, #125	; 0x7d
    53d4:	229e1000 	addscs	r1, lr, #0
    53d8:	00021000 	andeq	r1, r2, r0
    53dc:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    53ec:	227e0000 	rsbscs	r0, lr, #0
    53f0:	22901000 	addscs	r1, r0, #0
    53f4:	00011000 	andeq	r1, r1, r0
    53f8:	00229050 	eoreq	r9, r2, r0, asr r0
    53fc:	00229310 	eoreq	r9, r2, r0, lsl r3
    5400:	70000310 	andvc	r0, r0, r0, lsl r3
    5404:	229300cc 	addscs	r0, r3, #204	; 0xcc
    5408:	229a1000 	addscs	r1, sl, #0
    540c:	00041000 	andeq	r1, r4, r0
    5410:	9f5001f3 	svcls	0x005001f3
    5414:	1000229a 	mulne	r0, sl, r2
    5418:	1000229e 	mulne	r0, lr, r2
    541c:	00500001 	subseq	r0, r0, r1
	...
    542c:	7e000000 	cdpvc	0, 0, cr0, cr0, cr0, {0}
    5430:	8e100022 	cdphi	0, 1, cr0, cr0, cr2, {1}
    5434:	01100022 	tsteq	r0, r2, lsr #32
    5438:	228e5100 	addcs	r5, lr, #0, 2
    543c:	22931000 	addscs	r1, r3, #0
    5440:	00011000 	andeq	r1, r1, r0
    5444:	00229353 	eoreq	r9, r2, r3, asr r3
    5448:	00229a10 	eoreq	r9, r2, r0, lsl sl
    544c:	f3000410 	vqshl.u8	d0, d0, d0
    5450:	9a9f5101 	bls	fe7d985c <__StackTop+0xc66d985c>
    5454:	9e100022 	cdpls	0, 1, cr0, cr0, cr2, {1}
    5458:	01100022 	tsteq	r0, r2, lsr #32
    545c:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    546c:	1000227e 	andne	r2, r0, lr, ror r2
    5470:	10002293 	mulne	r0, r3, r2
    5474:	93520001 	cmpls	r2, #1
    5478:	9a100022 	bls	405508 <__RAM_SIZE+0x305508>
    547c:	04100022 	ldreq	r0, [r0], #-34	; 0xffffffde
    5480:	5201f300 	andpl	pc, r1, #0, 6
    5484:	00229a9f 	mlaeq	r2, pc, sl, r9	; <UNPREDICTABLE>
    5488:	00229e10 	eoreq	r9, r2, r0, lsl lr
    548c:	52000110 	andpl	r0, r0, #16, 2
	...
    549c:	1000227e 	andne	r2, r0, lr, ror r2
    54a0:	10002284 	andne	r2, r0, r4, lsl #5
    54a4:	84530001 	ldrbhi	r0, [r3], #-1
    54a8:	9e100022 	cdpls	0, 1, cr0, cr0, cr2, {1}
    54ac:	04100022 	ldreq	r0, [r0], #-34	; 0xffffffde
    54b0:	5301f300 	movwpl	pc, #4864	; 0x1300	; <UNPREDICTABLE>
    54b4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    54c0:	00227e00 	eoreq	r7, r2, r0, lsl #28
    54c4:	00229a10 	eoreq	r9, r2, r0, lsl sl
    54c8:	91000210 	tstls	r0, r0, lsl r2
    54cc:	00229a00 	eoreq	r9, r2, r0, lsl #20
    54d0:	00229e10 	eoreq	r9, r2, r0, lsl lr
    54d4:	91000210 	tstls	r0, r0, lsl r2
	...
    54e8:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    54f4:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    54f8:	00000014 	andeq	r0, r0, r4, lsl r0
    54fc:	00000000 	andeq	r0, r0, r0
    5500:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    5504:	00000020 	andeq	r0, r0, r0, lsr #32
    5508:	00000000 	andeq	r0, r0, r0
    550c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    5510:	00000014 	andeq	r0, r0, r4, lsl r0
    5514:	00000000 	andeq	r0, r0, r0
    5518:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    551c:	00000020 	andeq	r0, r0, r0, lsr #32
	...
    5538:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    5544:	00560001 	subseq	r0, r6, r1
    5548:	00000000 	andeq	r0, r0, r0
    554c:	01000000 	mrseq	r0, (UNDEF: 0)
    5550:	00005000 	andeq	r5, r0, r0
    5554:	00000000 	andeq	r0, r0, r0
    5558:	00040000 	andeq	r0, r4, r0
    555c:	9f5001f3 	svcls	0x005001f3
	...
    5568:	00500001 	subseq	r0, r0, r1
    556c:	00000000 	andeq	r0, r0, r0
    5570:	01000000 	mrseq	r0, (UNDEF: 0)
    5574:	00005600 	andeq	r5, r0, r0, lsl #12
	...
    5590:	00510001 	subseq	r0, r1, r1
    5594:	00000000 	andeq	r0, r0, r0
    5598:	01000000 	mrseq	r0, (UNDEF: 0)
    559c:	00005400 	andeq	r5, r0, r0, lsl #8
    55a0:	00000000 	andeq	r0, r0, r0
    55a4:	00010000 	andeq	r0, r1, r0
    55a8:	00000051 	andeq	r0, r0, r1, asr r0
    55ac:	00000000 	andeq	r0, r0, r0
    55b0:	f3000400 	vshl.u8	d0, d0, d0
    55b4:	009f5101 	addseq	r5, pc, r1, lsl #2
    55b8:	00000000 	andeq	r0, r0, r0
    55bc:	01000000 	mrseq	r0, (UNDEF: 0)
    55c0:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    55d8:	00010000 	andeq	r0, r1, r0
    55dc:	00000052 	andeq	r0, r0, r2, asr r0
    55e0:	00000000 	andeq	r0, r0, r0
    55e4:	f3000400 	vshl.u8	d0, d0, d0
    55e8:	009f5201 	addseq	r5, pc, r1, lsl #4
    55ec:	00000000 	andeq	r0, r0, r0
    55f0:	01000000 	mrseq	r0, (UNDEF: 0)
    55f4:	00005200 	andeq	r5, r0, r0, lsl #4
    55f8:	00000000 	andeq	r0, r0, r0
    55fc:	00040000 	andeq	r0, r4, r0
    5600:	9f5201f3 	svcls	0x005201f3
	...
    560c:	00000001 	andeq	r0, r0, r1
	...
    561c:	00020000 	andeq	r0, r2, r0
    5620:	00009f30 	andeq	r9, r0, r0, lsr pc
    5624:	00000000 	andeq	r0, r0, r0
    5628:	00010000 	andeq	r0, r1, r0
    562c:	00000050 	andeq	r0, r0, r0, asr r0
    5630:	00000000 	andeq	r0, r0, r0
    5634:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    5640:	9f300002 	svcls	0x00300002
	...
    564c:	9f300002 	svcls	0x00300002
	...
    5658:	00000001 	andeq	r0, r0, r1
	...
    5664:	00010000 	andeq	r0, r1, r0
    5668:	00000050 	andeq	r0, r0, r0, asr r0
    566c:	00000000 	andeq	r0, r0, r0
    5670:	70000400 	andvc	r0, r0, r0, lsl #8
    5674:	009f7fa4 	addseq	r7, pc, r4, lsr #31
    5678:	00000000 	andeq	r0, r0, r0
    567c:	06000000 	streq	r0, [r0], -r0
    5680:	76007400 	strvc	r7, [r0], -r0, lsl #8
    5684:	009f1e00 	addseq	r1, pc, r0, lsl #28
    5688:	00000000 	andeq	r0, r0, r0
    568c:	01000000 	mrseq	r0, (UNDEF: 0)
    5690:	00000202 	andeq	r0, r0, r2, lsl #4
	...
    569c:	01000000 	mrseq	r0, (UNDEF: 0)
    56a0:	00005000 	andeq	r5, r0, r0
    56a4:	00000000 	andeq	r0, r0, r0
    56a8:	00040000 	andeq	r0, r4, r0
    56ac:	9f00dc70 	svcls	0x0000dc70
	...
    56b8:	00520001 	subseq	r0, r2, r1
    56bc:	00000000 	andeq	r0, r0, r0
    56c0:	04000000 	streq	r0, [r0], #-0
    56c4:	00dc7500 	sbcseq	r7, ip, r0, lsl #10
    56c8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    56e0:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    56ec:	01f30004 	mvnseq	r0, r4
    56f0:	00009f50 	andeq	r9, r0, r0, asr pc
    56f4:	00000000 	andeq	r0, r0, r0
    56f8:	00010000 	andeq	r0, r1, r0
    56fc:	00000050 	andeq	r0, r0, r0, asr r0
    5700:	00000000 	andeq	r0, r0, r0
    5704:	72000200 	andvc	r0, r0, #0, 4
	...
    5710:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    571c:	30000200 	andcc	r0, r0, r0, lsl #4
    5720:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    5724:	00000000 	andeq	r0, r0, r0
    5728:	31000200 	mrscc	r0, R8_usr
    572c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    5730:	00000000 	andeq	r0, r0, r0
    5734:	00000300 	andeq	r0, r0, r0, lsl #6
	...
    5744:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    5750:	01f30004 	mvnseq	r0, r4
    5754:	00009f50 	andeq	r9, r0, r0, asr pc
    5758:	00000000 	andeq	r0, r0, r0
    575c:	00010000 	andeq	r0, r1, r0
    5760:	00000050 	andeq	r0, r0, r0, asr r0
    5764:	00000000 	andeq	r0, r0, r0
    5768:	72000200 	andvc	r0, r0, #0, 4
	...
    5774:	00229e00 	eoreq	r9, r2, r0, lsl #28
    5778:	0022a210 	eoreq	sl, r2, r0, lsl r2
    577c:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    5780:	0022a200 	eoreq	sl, r2, r0, lsl #4
    5784:	0022a410 	eoreq	sl, r2, r0, lsl r4
    5788:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    578c:	0022a408 	eoreq	sl, r2, r8, lsl #8
    5790:	0022c610 	eoreq	ip, r2, r0, lsl r6
    5794:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    5798:	0022c610 	eoreq	ip, r2, r0, lsl r6
    579c:	0022c810 	eoreq	ip, r2, r0, lsl r8
    57a0:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    57a4:	0022c808 	eoreq	ip, r2, r8, lsl #16
    57a8:	0022d010 	eoreq	sp, r2, r0, lsl r0
    57ac:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    57b0:	0022d010 	eoreq	sp, r2, r0, lsl r0
    57b4:	0022d410 	eoreq	sp, r2, r0, lsl r4
    57b8:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    57bc:	0022d400 	eoreq	sp, r2, r0, lsl #8
    57c0:	0022dc10 	eoreq	sp, r2, r0, lsl ip
    57c4:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    57c8:	00000010 	andeq	r0, r0, r0, lsl r0
	...
    57e4:	9e000000 	cdpls	0, 0, cr0, cr0, cr0, {0}
    57e8:	be100022 	cdplt	0, 1, cr0, cr0, cr2, {1}
    57ec:	01100022 	tsteq	r0, r2, lsr #32
    57f0:	22be5000 	adcscs	r5, lr, #0
    57f4:	22c11000 	sbccs	r1, r1, #0
    57f8:	00011000 	andeq	r1, r1, r0
    57fc:	0022c15c 	eoreq	ip, r2, ip, asr r1
    5800:	0022c810 	eoreq	ip, r2, r0, lsl r8
    5804:	f3000410 	vqshl.u8	d0, d0, d0
    5808:	c89f5001 	ldmgt	pc, {r0, ip, lr}	; <UNPREDICTABLE>
    580c:	ce100022 	cdpgt	0, 1, cr0, cr0, cr2, {1}
    5810:	01100022 	tsteq	r0, r2, lsr #32
    5814:	22ce5000 	sbccs	r5, lr, #0
    5818:	22d01000 	sbcscs	r1, r0, #0
    581c:	00011000 	andeq	r1, r1, r0
    5820:	0022d05c 	eoreq	sp, r2, ip, asr r0
    5824:	0022d210 	eoreq	sp, r2, r0, lsl r2
    5828:	50000110 	andpl	r0, r0, r0, lsl r1
    582c:	100022d2 	ldrdne	r2, [r0], -r2	; <UNPREDICTABLE>
    5830:	100022d4 	ldrdne	r2, [r0], -r4
    5834:	01f30004 	mvnseq	r0, r4
    5838:	22d49f50 	sbcscs	r9, r4, #80, 30	; 0x140
    583c:	22d61000 	sbcscs	r1, r6, #0
    5840:	00011000 	andeq	r1, r1, r0
    5844:	0022d650 	eoreq	sp, r2, r0, asr r6
    5848:	0022d810 	eoreq	sp, r2, r0, lsl r8
    584c:	5c000110 	stfpls	f0, [r0], {16}
    5850:	100022d8 	ldrdne	r2, [r0], -r8
    5854:	100022da 	ldrdne	r2, [r0], -sl
    5858:	da500001 	ble	1405864 <__RAM_SIZE+0x1305864>
    585c:	dc100022 	ldcle	0, cr0, [r0], {34}	; 0x22
    5860:	01100022 	tsteq	r0, r2, lsr #32
    5864:	00005c00 	andeq	r5, r0, r0, lsl #24
	...
    5874:	1000229e 	mulne	r0, lr, r2
    5878:	100022c1 	andne	r2, r0, r1, asr #5
    587c:	c1510001 	cmpgt	r1, r1
    5880:	c8100022 	ldmdagt	r0, {r1, r5}
    5884:	04100022 	ldreq	r0, [r0], #-34	; 0xffffffde
    5888:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    588c:	0022c89f 	mlaeq	r2, pc, r8, ip	; <UNPREDICTABLE>
    5890:	0022dc10 	eoreq	sp, r2, r0, lsl ip
    5894:	51000110 	tstpl	r0, r0, lsl r1
	...
    58a4:	229e0000 	addscs	r0, lr, #0
    58a8:	22c11000 	sbccs	r1, r1, #0
    58ac:	00011000 	andeq	r1, r1, r0
    58b0:	0022c152 	eoreq	ip, r2, r2, asr r1
    58b4:	0022c810 	eoreq	ip, r2, r0, lsl r8
    58b8:	f3000410 	vqshl.u8	d0, d0, d0
    58bc:	c89f5201 	ldmgt	pc, {r0, r9, ip, lr}	; <UNPREDICTABLE>
    58c0:	dc100022 	ldcle	0, cr0, [r0], {34}	; 0x22
    58c4:	01100022 	tsteq	r0, r2, lsr #32
    58c8:	00005200 	andeq	r5, r0, r0, lsl #4
	...
    58d8:	1000229e 	mulne	r0, lr, r2
    58dc:	100022b2 			; <UNDEFINED> instruction: 0x100022b2
    58e0:	b2530001 	subslt	r0, r3, #1
    58e4:	c8100022 	ldmdagt	r0, {r1, r5}
    58e8:	01100022 	tsteq	r0, r2, lsr #32
    58ec:	22c85400 	sbccs	r5, r8, #0, 8
    58f0:	22dc1000 	sbcscs	r1, ip, #0
    58f4:	00011000 	andeq	r1, r1, r0
    58f8:	00000053 	andeq	r0, r0, r3, asr r0
	...
    5904:	00229e00 	eoreq	r9, r2, r0, lsl #28
    5908:	0022c810 	eoreq	ip, r2, r0, lsl r8
    590c:	91000210 	tstls	r0, r0, lsl r2
    5910:	0022c800 	eoreq	ip, r2, r0, lsl #16
    5914:	0022dc10 	eoreq	sp, r2, r0, lsl ip
    5918:	91000210 	tstls	r0, r0, lsl r2
	...
    5924:	01010200 	mrseq	r0, R9_usr
	...
    5930:	00229e00 	eoreq	r9, r2, r0, lsl #28
    5934:	0022b010 	eoreq	fp, r2, r0, lsl r0
    5938:	30000210 	andcc	r0, r0, r0, lsl r2
    593c:	0022b09f 	mlaeq	r2, pc, r0, fp	; <UNPREDICTABLE>
    5940:	0022b210 	eoreq	fp, r2, r0, lsl r2
    5944:	53000110 	movwpl	r0, #272	; 0x110
    5948:	100022b2 			; <UNDEFINED> instruction: 0x100022b2
    594c:	100022c4 	andne	r2, r0, r4, asr #5
    5950:	c8540001 	ldmdagt	r4, {r0}^
    5954:	ce100022 	cdpgt	0, 1, cr0, cr0, cr2, {1}
    5958:	02100022 	andseq	r0, r0, #34	; 0x22
    595c:	ce9f3000 	cdpgt	0, 9, cr3, cr15, cr0, {0}
    5960:	d0100022 	andsle	r0, r0, r2, lsr #32
    5964:	01100022 	tsteq	r0, r2, lsr #32
    5968:	22d05000 	sbcscs	r5, r0, #0
    596c:	22dc1000 	sbcscs	r1, ip, #0
    5970:	00021000 	andeq	r1, r2, r0
    5974:	00009f30 	andeq	r9, r0, r0, lsr pc
    5978:	00000000 	andeq	r0, r0, r0
    597c:	21f80000 	mvnscs	r0, r0
    5980:	21fe1000 	mvnscs	r1, r0
    5984:	00021000 	andeq	r1, r2, r0
    5988:	21fe007d 	mvnscs	r0, sp, ror r0
    598c:	22761000 	rsbscs	r1, r6, #0
    5990:	00021000 	andeq	r1, r2, r0
    5994:	2276107d 	rsbscs	r1, r6, #125	; 0x7d
    5998:	227a1000 	rsbscs	r1, sl, #0
    599c:	00021000 	andeq	r1, r2, r0
    59a0:	227a007d 	rsbscs	r0, sl, #125	; 0x7d
    59a4:	227e1000 	rsbscs	r1, lr, #0
    59a8:	00021000 	andeq	r1, r2, r0
    59ac:	0000107d 	andeq	r1, r0, sp, ror r0
	...
    59c4:	21f80000 	mvnscs	r0, r0
    59c8:	22161000 	andscs	r1, r6, #0
    59cc:	00011000 	andeq	r1, r1, r0
    59d0:	00221650 	eoreq	r1, r2, r0, asr r6
    59d4:	00221810 	eoreq	r1, r2, r0, lsl r8
    59d8:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    59dc:	10002218 	andne	r2, r0, r8, lsl r2
    59e0:	1000221f 	andne	r2, r0, pc, lsl r2
    59e4:	1f500001 	svcne	0x00500001
    59e8:	76100022 	ldrvc	r0, [r0], -r2, lsr #32
    59ec:	01100022 	tsteq	r0, r2, lsr #32
    59f0:	22765400 	rsbscs	r5, r6, #0, 8
    59f4:	22781000 	rsbscs	r1, r8, #0
    59f8:	00011000 	andeq	r1, r1, r0
    59fc:	00227850 	eoreq	r7, r2, r0, asr r8
    5a00:	00227a10 	eoreq	r7, r2, r0, lsl sl
    5a04:	f3000410 	vqshl.u8	d0, d0, d0
    5a08:	7a9f5001 	bvc	fe7d9a14 <__StackTop+0xc66d9a14>
    5a0c:	7c100022 	ldcvc	0, cr0, [r0], {34}	; 0x22
    5a10:	01100022 	tsteq	r0, r2, lsr #32
    5a14:	227c5000 	rsbscs	r5, ip, #0
    5a18:	227e1000 	rsbscs	r1, lr, #0
    5a1c:	00011000 	andeq	r1, r1, r0
    5a20:	00000054 	andeq	r0, r0, r4, asr r0
	...
    5a30:	0021f800 	eoreq	pc, r1, r0, lsl #16
    5a34:	00220c10 	eoreq	r0, r2, r0, lsl ip
    5a38:	51000110 	tstpl	r0, r0, lsl r1
    5a3c:	1000220c 	andne	r2, r0, ip, lsl #4
    5a40:	10002276 	andne	r2, r0, r6, ror r2
    5a44:	76550001 	ldrbvc	r0, [r5], -r1
    5a48:	7c100022 	ldcvc	0, cr0, [r0], {34}	; 0x22
    5a4c:	01100022 	tsteq	r0, r2, lsr #32
    5a50:	227c5100 	rsbscs	r5, ip, #0, 2
    5a54:	227e1000 	rsbscs	r1, lr, #0
    5a58:	00011000 	andeq	r1, r1, r0
    5a5c:	00000055 	andeq	r0, r0, r5, asr r0
    5a60:	00000000 	andeq	r0, r0, r0
    5a64:	00000200 	andeq	r0, r0, r0, lsl #4
    5a68:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
    5a6c:	16100021 	ldrne	r0, [r0], -r1, lsr #32
    5a70:	02100022 	andseq	r0, r0, #34	; 0x22
    5a74:	169f3100 	ldrne	r3, [pc], r0, lsl #2
    5a78:	18100022 	ldmdane	r0, {r1, r5}
    5a7c:	02100022 	andseq	r0, r0, #34	; 0x22
    5a80:	189f3000 	ldmne	pc, {ip, sp}	; <UNPREDICTABLE>
    5a84:	7c100022 	ldcvc	0, cr0, [r0], {34}	; 0x22
    5a88:	02100022 	andseq	r0, r0, #34	; 0x22
    5a8c:	009f3100 	addseq	r3, pc, r0, lsl #2
    5a90:	00000000 	andeq	r0, r0, r0
    5a94:	03000000 	movweq	r0, #0
	...
    5aa4:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
    5aa8:	16100021 	ldrne	r0, [r0], -r1, lsr #32
    5aac:	01100022 	tsteq	r0, r2, lsr #32
    5ab0:	22165000 	andscs	r5, r6, #0
    5ab4:	22181000 	andscs	r1, r8, #0
    5ab8:	00011000 	andeq	r1, r1, r0
    5abc:	00221854 	eoreq	r1, r2, r4, asr r8
    5ac0:	00221f10 	eoreq	r1, r2, r0, lsl pc
    5ac4:	50000110 	andpl	r0, r0, r0, lsl r1
    5ac8:	1000221f 	andne	r2, r0, pc, lsl r2
    5acc:	10002276 	andne	r2, r0, r6, ror r2
    5ad0:	76540001 	ldrbvc	r0, [r4], -r1
    5ad4:	78100022 	ldmdavc	r0, {r1, r5}
    5ad8:	01100022 	tsteq	r0, r2, lsr #32
    5adc:	22785000 	rsbscs	r5, r8, #0
    5ae0:	227a1000 	rsbscs	r1, sl, #0
    5ae4:	00041000 	andeq	r1, r4, r0
    5ae8:	9f5001f3 	svcls	0x005001f3
    5aec:	1000227a 	andne	r2, r0, sl, ror r2
    5af0:	1000227c 	andne	r2, r0, ip, ror r2
    5af4:	7c500001 	mrrcvc	0, 0, r0, r0, cr1	; <UNPREDICTABLE>
    5af8:	7e100022 	cdpvc	0, 1, cr0, cr0, cr2, {1}
    5afc:	01100022 	tsteq	r0, r2, lsr #32
    5b00:	00005400 	andeq	r5, r0, r0, lsl #8
    5b04:	00000000 	andeq	r0, r0, r0
    5b08:	00010000 	andeq	r0, r1, r0
	...
    5b14:	00010000 	andeq	r0, r1, r0
    5b18:	00000053 	andeq	r0, r0, r3, asr r0
    5b1c:	00000000 	andeq	r0, r0, r0
    5b20:	53000100 	movwpl	r0, #256	; 0x100
	...
    5b2c:	10002768 	andne	r2, r0, r8, ror #14
    5b30:	1000276c 	andne	r2, r0, ip, ror #14
    5b34:	007d0002 	rsbseq	r0, sp, r2
    5b38:	1000276c 	andne	r2, r0, ip, ror #14
    5b3c:	10002810 	andne	r2, r0, r0, lsl r8
    5b40:	187d0002 	ldmdane	sp!, {r1}^
	...
    5b54:	27680000 	strbcs	r0, [r8, -r0]!
    5b58:	278a1000 	strcs	r1, [sl, r0]
    5b5c:	00011000 	andeq	r1, r1, r0
    5b60:	00278a50 	eoreq	r8, r7, r0, asr sl
    5b64:	00279810 	eoreq	r9, r7, r0, lsl r8
    5b68:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    5b6c:	10002798 	mulne	r0, r8, r7
    5b70:	100027b2 			; <UNDEFINED> instruction: 0x100027b2
    5b74:	01f30004 	mvnseq	r0, r4
    5b78:	27b29f50 	sbfxcs	r9, r0, #30, #19
    5b7c:	27c41000 	strbcs	r1, [r4, r0]
    5b80:	00011000 	andeq	r1, r1, r0
    5b84:	0027c454 	eoreq	ip, r7, r4, asr r4
    5b88:	00281010 	eoreq	r1, r8, r0, lsl r0
    5b8c:	f3000410 	vqshl.u8	d0, d0, d0
    5b90:	009f5001 	addseq	r5, pc, r1
	...
    5b9c:	68000000 	stmdavs	r0, {}	; <UNPREDICTABLE>
    5ba0:	84100027 	ldrhi	r0, [r0], #-39	; 0xffffffd9
    5ba4:	01100027 	tsteq	r0, r7, lsr #32
    5ba8:	27845100 	strcs	r5, [r4, r0, lsl #2]
    5bac:	28101000 	ldmdacs	r0, {ip}
    5bb0:	00011000 	andeq	r1, r1, r0
    5bb4:	00000055 	andeq	r0, r0, r5, asr r0
	...
    5bc0:	00279800 	eoreq	r9, r7, r0, lsl #16
    5bc4:	0027ae10 	eoreq	sl, r7, r0, lsl lr
    5bc8:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    5bcc:	100027de 	ldrdne	r2, [r0], -lr
    5bd0:	10002810 	andne	r2, r0, r0, lsl r8
    5bd4:	00540001 	subseq	r0, r4, r1
	...
    5be0:	00277400 	eoreq	r7, r7, r0, lsl #8
    5be4:	00281010 	eoreq	r1, r8, r0, lsl r0
    5be8:	56000110 			; <UNDEFINED> instruction: 0x56000110
	...
    5bf4:	27780000 	ldrbcs	r0, [r8, -r0]!
    5bf8:	28101000 	ldmdacs	r0, {ip}
    5bfc:	00011000 	andeq	r1, r1, r0
    5c00:	00000057 	andeq	r0, r0, r7, asr r0
    5c04:	00000000 	andeq	r0, r0, r0
    5c08:	7e000000 	cdpvc	0, 0, cr0, cr0, cr0, {0}
    5c0c:	10100027 	andsne	r0, r0, r7, lsr #32
    5c10:	01100028 	tsteq	r0, r8, lsr #32
    5c14:	00005800 	andeq	r5, r0, r0, lsl #16
	...
    5c20:	100027ba 			; <UNDEFINED> instruction: 0x100027ba
    5c24:	100027de 	ldrdne	r2, [r0], -lr
    5c28:	00510001 	subseq	r0, r1, r1
	...
    5c38:	02000000 	andeq	r0, r0, #0
    5c3c:	00007d00 	andeq	r7, r0, r0, lsl #26
    5c40:	00000000 	andeq	r0, r0, r0
    5c44:	02000000 	andeq	r0, r0, #0
    5c48:	00107d00 	andseq	r7, r0, r0, lsl #26
	...
    5c5c:	01000000 	mrseq	r0, (UNDEF: 0)
    5c60:	00005000 	andeq	r5, r0, r0
    5c64:	00000000 	andeq	r0, r0, r0
    5c68:	00010000 	andeq	r0, r1, r0
    5c6c:	00000050 	andeq	r0, r0, r0, asr r0
	...
    5c80:	01000000 	mrseq	r0, (UNDEF: 0)
    5c84:	00005100 	andeq	r5, r0, r0, lsl #2
    5c88:	00000000 	andeq	r0, r0, r0
    5c8c:	00010000 	andeq	r0, r1, r0
    5c90:	00000055 	andeq	r0, r0, r5, asr r0
    5c94:	00000000 	andeq	r0, r0, r0
    5c98:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    5cb0:	00010000 	andeq	r0, r1, r0
    5cb4:	00000052 	andeq	r0, r0, r2, asr r0
    5cb8:	00000000 	andeq	r0, r0, r0
    5cbc:	56000100 	strpl	r0, [r0], -r0, lsl #2
	...
    5cc8:	00520001 	subseq	r0, r2, r1
	...
    5cdc:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    5cf0:	00010000 	andeq	r0, r1, r0
    5cf4:	00000054 	andeq	r0, r0, r4, asr r0
	...
    5d04:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    5d10:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    5d14:	00000010 	andeq	r0, r0, r0, lsl r0
	...
    5d28:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    5d34:	00500001 	subseq	r0, r0, r1
	...
    5d50:	01000000 	mrseq	r0, (UNDEF: 0)
    5d54:	00005100 	andeq	r5, r0, r0, lsl #2
    5d58:	00000000 	andeq	r0, r0, r0
    5d5c:	00010000 	andeq	r0, r1, r0
    5d60:	00000054 	andeq	r0, r0, r4, asr r0
    5d64:	00000000 	andeq	r0, r0, r0
    5d68:	f3000400 	vshl.u8	d0, d0, d0
    5d6c:	009f5101 	addseq	r5, pc, r1, lsl #2
    5d70:	00000000 	andeq	r0, r0, r0
    5d74:	01000000 	mrseq	r0, (UNDEF: 0)
    5d78:	00005100 	andeq	r5, r0, r0, lsl #2
    5d7c:	00000000 	andeq	r0, r0, r0
    5d80:	00010000 	andeq	r0, r1, r0
    5d84:	00000054 	andeq	r0, r0, r4, asr r0
    5d88:	00000000 	andeq	r0, r0, r0
    5d8c:	f3000400 	vshl.u8	d0, d0, d0
    5d90:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
    5da4:	01000000 	mrseq	r0, (UNDEF: 0)
    5da8:	00005500 	andeq	r5, r0, r0, lsl #10
    5dac:	00000000 	andeq	r0, r0, r0
    5db0:	00010000 	andeq	r0, r1, r0
    5db4:	00000055 	andeq	r0, r0, r5, asr r0
    5db8:	00000000 	andeq	r0, r0, r0
    5dbc:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    5dc8:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    5dd4:	9f310002 	svcls	0x00310002
	...
    5de8:	007d0002 	rsbseq	r0, sp, r2
	...
    5df4:	107d0002 	rsbsne	r0, sp, r2
	...
    5e0c:	00500001 	subseq	r0, r0, r1
    5e10:	00000000 	andeq	r0, r0, r0
    5e14:	01000000 	mrseq	r0, (UNDEF: 0)
    5e18:	00005500 	andeq	r5, r0, r0, lsl #10
	...
    5e30:	00010000 	andeq	r0, r1, r0
    5e34:	00000051 	andeq	r0, r0, r1, asr r0
    5e38:	00000000 	andeq	r0, r0, r0
    5e3c:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    5e48:	70740003 	rsbsvc	r0, r4, r3
    5e4c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    5e50:	00000000 	andeq	r0, r0, r0
    5e54:	f3000400 	vshl.u8	d0, d0, d0
    5e58:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
    5e6c:	01000000 	mrseq	r0, (UNDEF: 0)
    5e70:	00005200 	andeq	r5, r0, r0, lsl #4
    5e74:	00000000 	andeq	r0, r0, r0
    5e78:	00010000 	andeq	r0, r1, r0
    5e7c:	00000056 	andeq	r0, r0, r6, asr r0
    5e80:	00000000 	andeq	r0, r0, r0
    5e84:	00000800 	andeq	r0, r0, r0, lsl #16
	...
    5e90:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    5e9c:	00550001 	subseq	r0, r5, r1
	...
    5eb0:	01000000 	mrseq	r0, (UNDEF: 0)
    5eb4:	00005300 	andeq	r5, r0, r0, lsl #6
    5eb8:	00000000 	andeq	r0, r0, r0
    5ebc:	00010000 	andeq	r0, r1, r0
    5ec0:	00000053 	andeq	r0, r0, r3, asr r0
	...
    5ed4:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    5ee0:	00500001 	subseq	r0, r0, r1
	...
    5ef4:	01000000 	mrseq	r0, (UNDEF: 0)
    5ef8:	00005300 	andeq	r5, r0, r0, lsl #6
    5efc:	00000000 	andeq	r0, r0, r0
    5f00:	00010000 	andeq	r0, r1, r0
    5f04:	00000053 	andeq	r0, r0, r3, asr r0
	...
    5f14:	01000000 	mrseq	r0, (UNDEF: 0)
    5f18:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    5f2c:	00520001 	subseq	r0, r2, r1
	...
    5f3c:	02000000 	andeq	r0, r0, #0
    5f40:	00007d00 	andeq	r7, r0, r0, lsl #26
    5f44:	00000000 	andeq	r0, r0, r0
    5f48:	02000000 	andeq	r0, r0, #0
    5f4c:	00187d00 	andseq	r7, r8, r0, lsl #26
	...
    5f60:	01000000 	mrseq	r0, (UNDEF: 0)
    5f64:	00005000 	andeq	r5, r0, r0
    5f68:	00000000 	andeq	r0, r0, r0
    5f6c:	00010000 	andeq	r0, r1, r0
    5f70:	00000056 	andeq	r0, r0, r6, asr r0
	...
    5fa0:	01000000 	mrseq	r0, (UNDEF: 0)
    5fa4:	00005100 	andeq	r5, r0, r0, lsl #2
    5fa8:	00000000 	andeq	r0, r0, r0
    5fac:	00010000 	andeq	r0, r1, r0
    5fb0:	00000054 	andeq	r0, r0, r4, asr r0
    5fb4:	00000000 	andeq	r0, r0, r0
    5fb8:	74000300 	strvc	r0, [r0], #-768	; 0xfffffd00
    5fbc:	00009f70 	andeq	r9, r0, r0, ror pc
    5fc0:	00000000 	andeq	r0, r0, r0
    5fc4:	00040000 	andeq	r0, r4, r0
    5fc8:	9f5101f3 	svcls	0x005101f3
	...
    5fd4:	00540001 	subseq	r0, r4, r1
    5fd8:	00000000 	andeq	r0, r0, r0
    5fdc:	03000000 	movweq	r0, #0
    5fe0:	9f707400 	svcls	0x00707400
	...
    5fec:	01f30004 	mvnseq	r0, r4
    5ff0:	00009f51 	andeq	r9, r0, r1, asr pc
    5ff4:	00000000 	andeq	r0, r0, r0
    5ff8:	00010000 	andeq	r0, r1, r0
    5ffc:	00000054 	andeq	r0, r0, r4, asr r0
    6000:	00000000 	andeq	r0, r0, r0
    6004:	74000300 	strvc	r0, [r0], #-768	; 0xfffffd00
    6008:	00009f70 	andeq	r9, r0, r0, ror pc
    600c:	00000000 	andeq	r0, r0, r0
    6010:	00040000 	andeq	r0, r4, r0
    6014:	9f5101f3 	svcls	0x005101f3
	...
    6020:	00540001 	subseq	r0, r4, r1
    6024:	00000000 	andeq	r0, r0, r0
    6028:	03000000 	movweq	r0, #0
    602c:	9f707400 	svcls	0x00707400
	...
    6038:	01f30004 	mvnseq	r0, r4
    603c:	00009f51 	andeq	r9, r0, r1, asr pc
    6040:	00000000 	andeq	r0, r0, r0
    6044:	00010000 	andeq	r0, r1, r0
    6048:	00000054 	andeq	r0, r0, r4, asr r0
    604c:	00000000 	andeq	r0, r0, r0
    6050:	f3000400 	vshl.u8	d0, d0, d0
    6054:	009f5101 	addseq	r5, pc, r1, lsl #2
    6058:	00000000 	andeq	r0, r0, r0
    605c:	01000000 	mrseq	r0, (UNDEF: 0)
    6060:	00005400 	andeq	r5, r0, r0, lsl #8
    6064:	00000000 	andeq	r0, r0, r0
    6068:	00040000 	andeq	r0, r4, r0
    606c:	9f5101f3 	svcls	0x005101f3
	...
    6088:	00010000 	andeq	r0, r1, r0
    608c:	00000052 	andeq	r0, r0, r2, asr r0
    6090:	00000000 	andeq	r0, r0, r0
    6094:	57000100 	strpl	r0, [r0, -r0, lsl #2]
	...
    60a0:	01f30004 	mvnseq	r0, r4
    60a4:	00009f52 	andeq	r9, r0, r2, asr pc
    60a8:	00000000 	andeq	r0, r0, r0
    60ac:	00010000 	andeq	r0, r1, r0
    60b0:	00000057 	andeq	r0, r0, r7, asr r0
    60b4:	00000000 	andeq	r0, r0, r0
    60b8:	f3000400 	vshl.u8	d0, d0, d0
    60bc:	009f5201 	addseq	r5, pc, r1, lsl #4
	...
    60d0:	01000000 	mrseq	r0, (UNDEF: 0)
    60d4:	00005300 	andeq	r5, r0, r0, lsl #6
    60d8:	00000000 	andeq	r0, r0, r0
    60dc:	00040000 	andeq	r0, r4, r0
    60e0:	9f5301f3 	svcls	0x005301f3
	...
    60f8:	00910002 	addseq	r0, r1, r2
	...
    6104:	00910002 	addseq	r0, r1, r2
	...
    611c:	04910002 	ldreq	r0, [r1], #2
	...
    6128:	04910002 	ldreq	r0, [r1], #2
	...
    6134:	00000009 	andeq	r0, r0, r9
	...
    6140:	00500001 	subseq	r0, r0, r1
    6144:	00000000 	andeq	r0, r0, r0
    6148:	01000000 	mrseq	r0, (UNDEF: 0)
    614c:	00005600 	andeq	r5, r0, r0, lsl #12
	...
    6160:	00010000 	andeq	r0, r1, r0
    6164:	0000005c 	andeq	r0, r0, ip, asr r0
    6168:	00000000 	andeq	r0, r0, r0
    616c:	5c000100 	stfpls	f0, [r0], {-0}
	...
    6178:	00000003 	andeq	r0, r0, r3
	...
    6188:	9f310002 	svcls	0x00310002
	...
    6194:	00540001 	subseq	r0, r4, r1
    6198:	00000000 	andeq	r0, r0, r0
    619c:	02000000 	andeq	r0, r0, #0
    61a0:	009f3100 	addseq	r3, pc, r0, lsl #2
    61a4:	00000000 	andeq	r0, r0, r0
    61a8:	01000000 	mrseq	r0, (UNDEF: 0)
    61ac:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    61c0:	00010000 	andeq	r0, r1, r0
    61c4:	00000050 	andeq	r0, r0, r0, asr r0
    61c8:	00000000 	andeq	r0, r0, r0
    61cc:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    61e4:	00530001 	subseq	r0, r3, r1
    61e8:	00000000 	andeq	r0, r0, r0
    61ec:	01000000 	mrseq	r0, (UNDEF: 0)
    61f0:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    6204:	00530001 	subseq	r0, r3, r1
	...
    6218:	52000100 	andpl	r0, r0, #0, 2
	...
    622c:	007d0002 	rsbseq	r0, sp, r2
	...
    6238:	187d0002 	ldmdane	sp!, {r1}^
	...
    6250:	00500001 	subseq	r0, r0, r1
    6254:	00000000 	andeq	r0, r0, r0
    6258:	01000000 	mrseq	r0, (UNDEF: 0)
    625c:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    6290:	00510001 	subseq	r0, r1, r1
    6294:	00000000 	andeq	r0, r0, r0
    6298:	01000000 	mrseq	r0, (UNDEF: 0)
    629c:	00005500 	andeq	r5, r0, r0, lsl #10
    62a0:	00000000 	andeq	r0, r0, r0
    62a4:	00030000 	andeq	r0, r3, r0
    62a8:	009f7075 	addseq	r7, pc, r5, ror r0	; <UNPREDICTABLE>
    62ac:	00000000 	andeq	r0, r0, r0
    62b0:	04000000 	streq	r0, [r0], #-0
    62b4:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    62b8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    62bc:	00000000 	andeq	r0, r0, r0
    62c0:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    62cc:	70750003 	rsbsvc	r0, r5, r3
    62d0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    62d4:	00000000 	andeq	r0, r0, r0
    62d8:	f3000400 	vshl.u8	d0, d0, d0
    62dc:	009f5101 	addseq	r5, pc, r1, lsl #2
    62e0:	00000000 	andeq	r0, r0, r0
    62e4:	01000000 	mrseq	r0, (UNDEF: 0)
    62e8:	00005500 	andeq	r5, r0, r0, lsl #10
    62ec:	00000000 	andeq	r0, r0, r0
    62f0:	00030000 	andeq	r0, r3, r0
    62f4:	009f7075 	addseq	r7, pc, r5, ror r0	; <UNPREDICTABLE>
    62f8:	00000000 	andeq	r0, r0, r0
    62fc:	04000000 	streq	r0, [r0], #-0
    6300:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    6304:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    6308:	00000000 	andeq	r0, r0, r0
    630c:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    6318:	70750003 	rsbsvc	r0, r5, r3
    631c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    6320:	00000000 	andeq	r0, r0, r0
    6324:	f3000400 	vshl.u8	d0, d0, d0
    6328:	009f5101 	addseq	r5, pc, r1, lsl #2
    632c:	00000000 	andeq	r0, r0, r0
    6330:	01000000 	mrseq	r0, (UNDEF: 0)
    6334:	00005500 	andeq	r5, r0, r0, lsl #10
    6338:	00000000 	andeq	r0, r0, r0
    633c:	00040000 	andeq	r0, r4, r0
    6340:	9f5101f3 	svcls	0x005101f3
	...
    634c:	00550001 	subseq	r0, r5, r1
    6350:	00000000 	andeq	r0, r0, r0
    6354:	04000000 	streq	r0, [r0], #-0
    6358:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    635c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    6374:	01000000 	mrseq	r0, (UNDEF: 0)
    6378:	00005200 	andeq	r5, r0, r0, lsl #4
    637c:	00000000 	andeq	r0, r0, r0
    6380:	00010000 	andeq	r0, r1, r0
    6384:	00000057 	andeq	r0, r0, r7, asr r0
    6388:	00000000 	andeq	r0, r0, r0
    638c:	f3000400 	vshl.u8	d0, d0, d0
    6390:	009f5201 	addseq	r5, pc, r1, lsl #4
    6394:	00000000 	andeq	r0, r0, r0
    6398:	01000000 	mrseq	r0, (UNDEF: 0)
    639c:	00005700 	andeq	r5, r0, r0, lsl #14
    63a0:	00000000 	andeq	r0, r0, r0
    63a4:	00040000 	andeq	r0, r4, r0
    63a8:	9f5201f3 	svcls	0x005201f3
	...
    63c0:	00530001 	subseq	r0, r3, r1
    63c4:	00000000 	andeq	r0, r0, r0
    63c8:	04000000 	streq	r0, [r0], #-0
    63cc:	5301f300 	movwpl	pc, #4864	; 0x1300	; <UNPREDICTABLE>
    63d0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    63e4:	91000200 	mrsls	r0, R8_usr
	...
    63f0:	91000200 	mrsls	r0, R8_usr
	...
    63fc:	00000700 	andeq	r0, r0, r0, lsl #14
	...
    6408:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    6414:	00540001 	subseq	r0, r4, r1
    6418:	00000000 	andeq	r0, r0, r0
    641c:	02000000 	andeq	r0, r0, #0
	...
    642c:	02000000 	andeq	r0, r0, #0
    6430:	009f3100 	addseq	r3, pc, r0, lsl #2
    6434:	00000000 	andeq	r0, r0, r0
    6438:	01000000 	mrseq	r0, (UNDEF: 0)
    643c:	00005500 	andeq	r5, r0, r0, lsl #10
    6440:	00000000 	andeq	r0, r0, r0
    6444:	00020000 	andeq	r0, r2, r0
    6448:	00009f31 	andeq	r9, r0, r1, lsr pc
    644c:	00000000 	andeq	r0, r0, r0
    6450:	00010000 	andeq	r0, r1, r0
    6454:	00000055 	andeq	r0, r0, r5, asr r0
	...
    6468:	01000000 	mrseq	r0, (UNDEF: 0)
    646c:	00005000 	andeq	r5, r0, r0
    6470:	00000000 	andeq	r0, r0, r0
    6474:	00010000 	andeq	r0, r1, r0
    6478:	00000050 	andeq	r0, r0, r0, asr r0
    647c:	00000000 	andeq	r0, r0, r0
    6480:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    6498:	00530001 	subseq	r0, r3, r1
    649c:	00000000 	andeq	r0, r0, r0
    64a0:	01000000 	mrseq	r0, (UNDEF: 0)
    64a4:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    64b8:	00530001 	subseq	r0, r3, r1
	...
    64c8:	02000000 	andeq	r0, r0, #0
    64cc:	00007d00 	andeq	r7, r0, r0, lsl #26
    64d0:	00000000 	andeq	r0, r0, r0
    64d4:	02000000 	andeq	r0, r0, #0
    64d8:	00187d00 	andseq	r7, r8, r0, lsl #26
	...
    64f0:	01000000 	mrseq	r0, (UNDEF: 0)
    64f4:	00005000 	andeq	r5, r0, r0
    64f8:	00000000 	andeq	r0, r0, r0
    64fc:	00010000 	andeq	r0, r1, r0
    6500:	00000054 	andeq	r0, r0, r4, asr r0
    6504:	00000000 	andeq	r0, r0, r0
    6508:	f3000400 	vshl.u8	d0, d0, d0
    650c:	009f5001 	addseq	r5, pc, r1
    6510:	00000000 	andeq	r0, r0, r0
    6514:	01000000 	mrseq	r0, (UNDEF: 0)
    6518:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    652c:	00010000 	andeq	r0, r1, r0
    6530:	00000051 	andeq	r0, r0, r1, asr r0
    6534:	00000000 	andeq	r0, r0, r0
    6538:	58000100 	stmdapl	r0, {r8}
	...
    6554:	00010000 	andeq	r0, r1, r0
    6558:	00000052 	andeq	r0, r0, r2, asr r0
    655c:	00000000 	andeq	r0, r0, r0
    6560:	56000100 	strpl	r0, [r0], -r0, lsl #2
	...
    656c:	01f30004 	mvnseq	r0, r4
    6570:	00009f52 	andeq	r9, r0, r2, asr pc
    6574:	00000000 	andeq	r0, r0, r0
    6578:	00010000 	andeq	r0, r1, r0
    657c:	00000056 	andeq	r0, r0, r6, asr r0
    6580:	00000000 	andeq	r0, r0, r0
    6584:	f3000400 	vshl.u8	d0, d0, d0
    6588:	009f5201 	addseq	r5, pc, r1, lsl #4
	...
    65a4:	53000100 	movwpl	r0, #256	; 0x100
	...
    65b0:	00550001 	subseq	r0, r5, r1
    65b4:	00000000 	andeq	r0, r0, r0
    65b8:	04000000 	streq	r0, [r0], #-0
    65bc:	5301f300 	movwpl	pc, #4864	; 0x1300	; <UNPREDICTABLE>
    65c0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    65c4:	00000000 	andeq	r0, r0, r0
    65c8:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    65d4:	01f30004 	mvnseq	r0, r4
    65d8:	00009f53 	andeq	r9, r0, r3, asr pc
	...
    65ec:	00020000 	andeq	r0, r2, r0
    65f0:	00000091 	muleq	r0, r1, r0
    65f4:	00000000 	andeq	r0, r0, r0
    65f8:	00020000 	andeq	r0, r2, r0
    65fc:	00000091 	muleq	r0, r1, r0
	...
    6608:	00000001 	andeq	r0, r0, r1
    660c:	00000000 	andeq	r0, r0, r0
    6610:	00010000 	andeq	r0, r1, r0
    6614:	00000055 	andeq	r0, r0, r5, asr r0
    6618:	00000000 	andeq	r0, r0, r0
    661c:	31000200 	mrscc	r0, R8_usr
    6620:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    6634:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    6640:	00500001 	subseq	r0, r0, r1
    6644:	00000000 	andeq	r0, r0, r0
    6648:	01000000 	mrseq	r0, (UNDEF: 0)
    664c:	01010001 	tsteq	r1, r1
	...
    6658:	30000200 	andcc	r0, r0, r0, lsl #4
    665c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    6660:	00000000 	andeq	r0, r0, r0
    6664:	30000200 	andcc	r0, r0, r0, lsl #4
    6668:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    666c:	00000000 	andeq	r0, r0, r0
    6670:	31000200 	mrscc	r0, R8_usr
    6674:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    6684:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    6690:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    6694:	00000010 	andeq	r0, r0, r0, lsl r0
	...
    66ac:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    66b8:	00540001 	subseq	r0, r4, r1
    66bc:	00000000 	andeq	r0, r0, r0
    66c0:	04000000 	streq	r0, [r0], #-0
    66c4:	5001f300 	andpl	pc, r1, r0, lsl #6
    66c8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    66cc:	00000000 	andeq	r0, r0, r0
    66d0:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    66e8:	00510001 	subseq	r0, r1, r1
    66ec:	00000000 	andeq	r0, r0, r0
    66f0:	01000000 	mrseq	r0, (UNDEF: 0)
    66f4:	00005600 	andeq	r5, r0, r0, lsl #12
	...
    6700:	00010100 	andeq	r0, r1, r0, lsl #2
	...
    6714:	00520001 	subseq	r0, r2, r1
    6718:	00000000 	andeq	r0, r0, r0
    671c:	01000000 	mrseq	r0, (UNDEF: 0)
    6720:	00005500 	andeq	r5, r0, r0, lsl #10
    6724:	00000000 	andeq	r0, r0, r0
    6728:	00040000 	andeq	r0, r4, r0
    672c:	9f5201f3 	svcls	0x005201f3
	...
    6738:	00550001 	subseq	r0, r5, r1
    673c:	00000000 	andeq	r0, r0, r0
    6740:	04000000 	streq	r0, [r0], #-0
    6744:	5201f300 	andpl	pc, r1, #0, 6
    6748:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    674c:	00000000 	andeq	r0, r0, r0
    6750:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    675c:	01f30004 	mvnseq	r0, r4
    6760:	00009f52 	andeq	r9, r0, r2, asr pc
	...
    6774:	00010000 	andeq	r0, r1, r0
    6778:	00000055 	andeq	r0, r0, r5, asr r0
    677c:	00000000 	andeq	r0, r0, r0
    6780:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    6798:	00500001 	subseq	r0, r0, r1
    679c:	00000000 	andeq	r0, r0, r0
    67a0:	01000000 	mrseq	r0, (UNDEF: 0)
    67a4:	00005000 	andeq	r5, r0, r0
    67a8:	00000000 	andeq	r0, r0, r0
    67ac:	01020000 	mrseq	r0, (UNDEF: 2)
    67b0:	00010100 	andeq	r0, r1, r0, lsl #2
	...
    67bc:	9f300002 	svcls	0x00300002
	...
    67c8:	9f300002 	svcls	0x00300002
	...
    67d4:	9f310002 	svcls	0x00310002
	...
    67e8:	00010000 	andeq	r0, r1, r0
    67ec:	00000050 	andeq	r0, r0, r0, asr r0
	...
    67fc:	01000000 	mrseq	r0, (UNDEF: 0)
    6800:	00005000 	andeq	r5, r0, r0
	...
    6810:	00020000 	andeq	r0, r2, r0
    6814:	0000007d 	andeq	r0, r0, sp, ror r0
    6818:	00000000 	andeq	r0, r0, r0
    681c:	00020000 	andeq	r0, r2, r0
    6820:	0000107d 	andeq	r1, r0, sp, ror r0
    6824:	00000000 	andeq	r0, r0, r0
    6828:	00020000 	andeq	r0, r2, r0
    682c:	0000007d 	andeq	r0, r0, sp, ror r0
	...
    6848:	00500001 	subseq	r0, r0, r1
    684c:	00000000 	andeq	r0, r0, r0
    6850:	01000000 	mrseq	r0, (UNDEF: 0)
    6854:	00005400 	andeq	r5, r0, r0, lsl #8
    6858:	00000000 	andeq	r0, r0, r0
    685c:	00010000 	andeq	r0, r1, r0
    6860:	00000050 	andeq	r0, r0, r0, asr r0
    6864:	00000000 	andeq	r0, r0, r0
    6868:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    6874:	00500001 	subseq	r0, r0, r1
	...
    688c:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    6898:	01f30004 	mvnseq	r0, r4
    689c:	00009f51 	andeq	r9, r0, r1, asr pc
    68a0:	00000000 	andeq	r0, r0, r0
    68a4:	00010000 	andeq	r0, r1, r0
    68a8:	00000051 	andeq	r0, r0, r1, asr r0
    68ac:	00000000 	andeq	r0, r0, r0
    68b0:	00000200 	andeq	r0, r0, r0, lsl #4
	...
    68c0:	01000000 	mrseq	r0, (UNDEF: 0)
    68c4:	00005000 	andeq	r5, r0, r0
    68c8:	00000000 	andeq	r0, r0, r0
    68cc:	00010000 	andeq	r0, r1, r0
    68d0:	00000054 	andeq	r0, r0, r4, asr r0
    68d4:	00000000 	andeq	r0, r0, r0
    68d8:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    68e4:	00540001 	subseq	r0, r4, r1
    68e8:	00000000 	andeq	r0, r0, r0
    68ec:	01000000 	mrseq	r0, (UNDEF: 0)
    68f0:	00005000 	andeq	r5, r0, r0
    68f4:	00000000 	andeq	r0, r0, r0
    68f8:	00030000 	andeq	r0, r3, r0
	...
    6904:	00520001 	subseq	r0, r2, r1
	...
    691c:	01000000 	mrseq	r0, (UNDEF: 0)
    6920:	00005300 	andeq	r5, r0, r0, lsl #6
    6924:	00000000 	andeq	r0, r0, r0
    6928:	00010000 	andeq	r0, r1, r0
    692c:	00000053 	andeq	r0, r0, r3, asr r0
    6930:	00000000 	andeq	r0, r0, r0
    6934:	70000200 	andvc	r0, r0, r0, lsl #4
    6938:	0000002c 	andeq	r0, r0, ip, lsr #32
    693c:	00000000 	andeq	r0, r0, r0
    6940:	74000200 	strvc	r0, [r0], #-512	; 0xfffffe00
    6944:	0000002c 	andeq	r0, r0, ip, lsr #32
	...
    6954:	01000000 	mrseq	r0, (UNDEF: 0)
    6958:	00005300 	andeq	r5, r0, r0, lsl #6
    695c:	00000000 	andeq	r0, r0, r0
    6960:	2e500000 	cdpcs	0, 5, cr0, cr0, cr0, {0}
    6964:	2e561000 	cdpcs	0, 5, cr1, cr6, cr0, {0}
    6968:	00021000 	andeq	r1, r2, r0
    696c:	2e56007d 	mrccs	0, 2, r0, cr6, cr13, {3}
    6970:	2ebe1000 	cdpcs	0, 11, cr1, cr14, cr0, {0}
    6974:	00021000 	andeq	r1, r2, r0
    6978:	2ebe107d 	mrccs	0, 5, r1, cr14, cr13, {3}
    697c:	2ec21000 	cdpcs	0, 12, cr1, cr2, cr0, {0}
    6980:	00021000 	andeq	r1, r2, r0
    6984:	2ec2007d 	mcrcs	0, 6, r0, cr2, cr13, {3}
    6988:	2ed01000 	cdpcs	0, 13, cr1, cr0, cr0, {0}
    698c:	00021000 	andeq	r1, r2, r0
    6990:	0000107d 	andeq	r1, r0, sp, ror r0
	...
    69a8:	2e500000 	cdpcs	0, 5, cr0, cr0, cr0, {0}
    69ac:	2e6a1000 	cdpcs	0, 6, cr1, cr10, cr0, {0}
    69b0:	00011000 	andeq	r1, r1, r0
    69b4:	002e6a50 	eoreq	r6, lr, r0, asr sl
    69b8:	002e6c10 	eoreq	r6, lr, r0, lsl ip
    69bc:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    69c0:	10002e6c 	andne	r2, r0, ip, ror #28
    69c4:	10002e70 	andne	r2, r0, r0, ror lr
    69c8:	70500001 	subsvc	r0, r0, r1
    69cc:	be10002e 	cdplt	0, 1, cr0, cr0, cr14, {1}
    69d0:	0110002e 	tsteq	r0, lr, lsr #32
    69d4:	2ebe5400 	cdpcs	4, 11, cr5, cr14, cr0, {0}
    69d8:	2ec01000 	cdpcs	0, 12, cr1, cr0, cr0, {0}
    69dc:	00011000 	andeq	r1, r1, r0
    69e0:	002ec050 	eoreq	ip, lr, r0, asr r0
    69e4:	002ec210 	eoreq	ip, lr, r0, lsl r2
    69e8:	f3000410 	vqshl.u8	d0, d0, d0
    69ec:	c29f5001 	addsgt	r5, pc, #1
    69f0:	c410002e 	ldrgt	r0, [r0], #-46	; 0xffffffd2
    69f4:	0110002e 	tsteq	r0, lr, lsr #32
    69f8:	2ec45000 	cdpcs	0, 12, cr5, cr4, cr0, {0}
    69fc:	2ed01000 	cdpcs	0, 13, cr1, cr0, cr0, {0}
    6a00:	00011000 	andeq	r1, r1, r0
    6a04:	00000054 	andeq	r0, r0, r4, asr r0
    6a08:	00000000 	andeq	r0, r0, r0
    6a0c:	00000200 	andeq	r0, r0, r0, lsl #4
	...
    6a1c:	002e5000 	eoreq	r5, lr, r0
    6a20:	002e6a10 	eoreq	r6, lr, r0, lsl sl
    6a24:	50000110 	andpl	r0, r0, r0, lsl r1
    6a28:	10002e6a 	andne	r2, r0, sl, ror #28
    6a2c:	10002e6c 	andne	r2, r0, ip, ror #28
    6a30:	6c540001 	mrrcvs	0, 0, r0, r4, cr1
    6a34:	7010002e 	andsvc	r0, r0, lr, lsr #32
    6a38:	0110002e 	tsteq	r0, lr, lsr #32
    6a3c:	2e705000 	cdpcs	0, 7, cr5, cr0, cr0, {0}
    6a40:	2ebe1000 	cdpcs	0, 11, cr1, cr14, cr0, {0}
    6a44:	00011000 	andeq	r1, r1, r0
    6a48:	002ebe54 	eoreq	fp, lr, r4, asr lr
    6a4c:	002ec010 	eoreq	ip, lr, r0, lsl r0
    6a50:	50000110 	andpl	r0, r0, r0, lsl r1
    6a54:	10002ec0 	andne	r2, r0, r0, asr #29
    6a58:	10002ec2 	andne	r2, r0, r2, asr #29
    6a5c:	01f30004 	mvnseq	r0, r4
    6a60:	2ec29f50 	mcrcs	15, 6, r9, cr2, cr0, {2}
    6a64:	2ec41000 	cdpcs	0, 12, cr1, cr4, cr0, {0}
    6a68:	00011000 	andeq	r1, r1, r0
    6a6c:	002ec450 	eoreq	ip, lr, r0, asr r4
    6a70:	002ed010 	eoreq	sp, lr, r0, lsl r0
    6a74:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
	...
    6a80:	04000303 	streq	r0, [r0], #-771	; 0xfffffcfd
    6a84:	00000004 	andeq	r0, r0, r4
    6a88:	10002e50 	andne	r2, r0, r0, asr lr
    6a8c:	10002e6a 	andne	r2, r0, sl, ror #28
    6a90:	9f300002 	svcls	0x00300002
    6a94:	10002e6c 	andne	r2, r0, ip, ror #28
    6a98:	10002eba 			; <UNDEFINED> instruction: 0x10002eba
    6a9c:	9f300002 	svcls	0x00300002
    6aa0:	10002eba 			; <UNDEFINED> instruction: 0x10002eba
    6aa4:	10002ebe 			; <UNDEFINED> instruction: 0x10002ebe
    6aa8:	9f310002 	svcls	0x00310002
    6aac:	10002ebe 			; <UNDEFINED> instruction: 0x10002ebe
    6ab0:	10002ed0 	ldrdne	r2, [r0], -r0
    6ab4:	9f300002 	svcls	0x00300002
	...
    6ac0:	2e960000 	cdpcs	0, 9, cr0, cr6, cr0, {0}
    6ac4:	2ea21000 	cdpcs	0, 10, cr1, cr2, cr0, {0}
    6ac8:	00011000 	andeq	r1, r1, r0
    6acc:	00000053 	andeq	r0, r0, r3, asr r0
	...
    6adc:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    6ae8:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    6aec:	00000010 	andeq	r0, r0, r0, lsl r0
    6af0:	00000000 	andeq	r0, r0, r0
    6af4:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    6b00:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    6b04:	00000010 	andeq	r0, r0, r0, lsl r0
	...
    6b28:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    6b34:	00540001 	subseq	r0, r4, r1
    6b38:	00000000 	andeq	r0, r0, r0
    6b3c:	01000000 	mrseq	r0, (UNDEF: 0)
    6b40:	00005000 	andeq	r5, r0, r0
    6b44:	00000000 	andeq	r0, r0, r0
    6b48:	00010000 	andeq	r0, r1, r0
    6b4c:	00000054 	andeq	r0, r0, r4, asr r0
    6b50:	00000000 	andeq	r0, r0, r0
    6b54:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    6b60:	00540001 	subseq	r0, r4, r1
    6b64:	00000000 	andeq	r0, r0, r0
    6b68:	01000000 	mrseq	r0, (UNDEF: 0)
    6b6c:	00005000 	andeq	r5, r0, r0
    6b70:	00000000 	andeq	r0, r0, r0
    6b74:	00040000 	andeq	r0, r4, r0
    6b78:	9f5001f3 	svcls	0x005001f3
	...
    6b84:	00500001 	subseq	r0, r0, r1
    6b88:	00000000 	andeq	r0, r0, r0
    6b8c:	01000000 	mrseq	r0, (UNDEF: 0)
    6b90:	00005400 	andeq	r5, r0, r0, lsl #8
    6b94:	00000000 	andeq	r0, r0, r0
    6b98:	00020000 	andeq	r0, r2, r0
	...
    6bb4:	00010000 	andeq	r0, r1, r0
    6bb8:	00000050 	andeq	r0, r0, r0, asr r0
    6bbc:	00000000 	andeq	r0, r0, r0
    6bc0:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    6bcc:	00500001 	subseq	r0, r0, r1
    6bd0:	00000000 	andeq	r0, r0, r0
    6bd4:	01000000 	mrseq	r0, (UNDEF: 0)
    6bd8:	00005400 	andeq	r5, r0, r0, lsl #8
    6bdc:	00000000 	andeq	r0, r0, r0
    6be0:	00010000 	andeq	r0, r1, r0
    6be4:	00000050 	andeq	r0, r0, r0, asr r0
    6be8:	00000000 	andeq	r0, r0, r0
    6bec:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    6bf8:	00500001 	subseq	r0, r0, r1
    6bfc:	00000000 	andeq	r0, r0, r0
    6c00:	04000000 	streq	r0, [r0], #-0
    6c04:	5001f300 	andpl	pc, r1, r0, lsl #6
    6c08:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    6c0c:	00000000 	andeq	r0, r0, r0
    6c10:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    6c1c:	00540001 	subseq	r0, r4, r1
    6c20:	00000000 	andeq	r0, r0, r0
    6c24:	03000000 	movweq	r0, #0
	...
    6c34:	30000200 	andcc	r0, r0, r0, lsl #4
    6c38:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    6c3c:	00000000 	andeq	r0, r0, r0
    6c40:	30000200 	andcc	r0, r0, r0, lsl #4
    6c44:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    6c48:	00000000 	andeq	r0, r0, r0
    6c4c:	31000200 	mrscc	r0, R8_usr
    6c50:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    6c60:	01000000 	mrseq	r0, (UNDEF: 0)
    6c64:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    6c78:	9f300002 	svcls	0x00300002
	...
    6c94:	00500001 	subseq	r0, r0, r1
    6c98:	00000000 	andeq	r0, r0, r0
    6c9c:	04000000 	streq	r0, [r0], #-0
    6ca0:	5001f300 	andpl	pc, r1, r0, lsl #6
    6ca4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    6ca8:	00000000 	andeq	r0, r0, r0
    6cac:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    6cb8:	01f30004 	mvnseq	r0, r4
    6cbc:	00009f50 	andeq	r9, r0, r0, asr pc
    6cc0:	00000000 	andeq	r0, r0, r0
    6cc4:	00020000 	andeq	r0, r2, r0
	...
    6cd4:	9f300002 	svcls	0x00300002
	...
    6ce0:	00500001 	subseq	r0, r0, r1
    6ce4:	00000000 	andeq	r0, r0, r0
    6ce8:	02000000 	andeq	r0, r0, #0
    6cec:	009f3000 	addseq	r3, pc, r0
	...
    6d00:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    6d0c:	100026f6 	strdne	r2, [r0], -r6
    6d10:	100026f8 	strdne	r2, [r0], -r8
    6d14:	007d0002 	rsbseq	r0, sp, r2
    6d18:	100026f8 	strdne	r2, [r0], -r8
    6d1c:	1000271a 	andne	r2, r0, sl, lsl r7
    6d20:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    6d38:	100026f6 	strdne	r2, [r0], -r6
    6d3c:	10002704 	andne	r2, r0, r4, lsl #14
    6d40:	04500001 	ldrbeq	r0, [r0], #-1
    6d44:	06100027 	ldreq	r0, [r0], -r7, lsr #32
    6d48:	01100027 	tsteq	r0, r7, lsr #32
    6d4c:	27065400 	strcs	r5, [r6, -r0, lsl #8]
    6d50:	27081000 	strcs	r1, [r8, -r0]
    6d54:	00011000 	andeq	r1, r1, r0
    6d58:	00270850 	eoreq	r0, r7, r0, asr r8
    6d5c:	00271410 	eoreq	r1, r7, r0, lsl r4
    6d60:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    6d64:	10002714 	andne	r2, r0, r4, lsl r7
    6d68:	10002717 	andne	r2, r0, r7, lsl r7
    6d6c:	17500001 	ldrbne	r0, [r0, -r1]
    6d70:	1a100027 	bne	406e14 <__RAM_SIZE+0x306e14>
    6d74:	01100027 	tsteq	r0, r7, lsr #32
    6d78:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    6d88:	00020000 	andeq	r0, r2, r0
    6d8c:	0000007d 	andeq	r0, r0, sp, ror r0
    6d90:	00000000 	andeq	r0, r0, r0
    6d94:	00020000 	andeq	r0, r2, r0
    6d98:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    6dac:	00010000 	andeq	r0, r1, r0
    6db0:	00000050 	andeq	r0, r0, r0, asr r0
    6db4:	00000000 	andeq	r0, r0, r0
    6db8:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    6dcc:	00010000 	andeq	r0, r1, r0
    6dd0:	00000053 	andeq	r0, r0, r3, asr r0
    6dd4:	00000000 	andeq	r0, r0, r0
    6dd8:	00000100 	andeq	r0, r0, r0, lsl #2
    6ddc:	00000000 	andeq	r0, r0, r0
    6de0:	02000000 	andeq	r0, r0, #0
    6de4:	00307300 	eorseq	r7, r0, r0, lsl #6
	...
    6df8:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    6e10:	00500001 	subseq	r0, r0, r1
    6e14:	00000000 	andeq	r0, r0, r0
    6e18:	01000000 	mrseq	r0, (UNDEF: 0)
    6e1c:	00005000 	andeq	r5, r0, r0
    6e20:	00000000 	andeq	r0, r0, r0
    6e24:	00020000 	andeq	r0, r2, r0
    6e28:	00010100 	andeq	r0, r1, r0, lsl #2
	...
    6e34:	00020000 	andeq	r0, r2, r0
    6e38:	00009f30 	andeq	r9, r0, r0, lsr pc
    6e3c:	00000000 	andeq	r0, r0, r0
    6e40:	00010000 	andeq	r0, r1, r0
    6e44:	00000053 	andeq	r0, r0, r3, asr r0
    6e48:	00000000 	andeq	r0, r0, r0
    6e4c:	73000500 	movwvc	r0, #1280	; 0x500
    6e50:	9f253200 	svcls	0x00253200
	...
    6e5c:	00500001 	subseq	r0, r0, r1
    6e60:	00000000 	andeq	r0, r0, r0
    6e64:	1c000000 	stcne	0, cr0, [r0], {-0}
    6e68:	24100027 	ldrcs	r0, [r0], #-39	; 0xffffffd9
    6e6c:	02100027 	andseq	r0, r0, #39	; 0x27
    6e70:	24007d00 	strcs	r7, [r0], #-3328	; 0xfffff300
    6e74:	58100027 	ldmdapl	r0, {r0, r1, r2, r5}
    6e78:	02100027 	andseq	r0, r0, #39	; 0x27
    6e7c:	58087d00 	stmdapl	r8, {r8, sl, fp, ip, sp, lr}
    6e80:	68100027 	ldmdavs	r0, {r0, r1, r2, r5}
    6e84:	02100027 	andseq	r0, r0, #39	; 0x27
    6e88:	00007d00 	andeq	r7, r0, r0, lsl #26
	...
    6e94:	00272e00 	eoreq	r2, r7, r0, lsl #28
    6e98:	00275810 	eoreq	r5, r7, r0, lsl r8
    6e9c:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
	...
    6ea8:	10002570 	andne	r2, r0, r0, ror r5
    6eac:	10002572 	andne	r2, r0, r2, ror r5
    6eb0:	007d0002 	rsbseq	r0, sp, r2
    6eb4:	10002572 	andne	r2, r0, r2, ror r5
    6eb8:	100025d8 	ldrdne	r2, [r0], -r8
    6ebc:	107d0002 	rsbsne	r0, sp, r2
	...
    6ec8:	00000002 	andeq	r0, r0, r2
    6ecc:	10002572 	andne	r2, r0, r2, ror r5
    6ed0:	10002576 	andne	r2, r0, r6, ror r5
    6ed4:	9f300002 	svcls	0x00300002
    6ed8:	10002576 	andne	r2, r0, r6, ror r5
    6edc:	10002594 	mulne	r0, r4, r5
    6ee0:	00540001 	subseq	r0, r4, r1
    6ee4:	00000000 	andeq	r0, r0, r0
    6ee8:	03000000 	movweq	r0, #0
    6eec:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    6ef0:	3a10002e 	bcc	406fb0 <__RAM_SIZE+0x306fb0>
    6ef4:	0210002e 	andseq	r0, r0, #46	; 0x2e
    6ef8:	3a9f3100 	bcc	fe7d3300 <__StackTop+0xc66d3300>
    6efc:	5010002e 	andspl	r0, r0, lr, lsr #32
    6f00:	0110002e 	tsteq	r0, lr, lsr #32
    6f04:	00005000 	andeq	r5, r0, r0
    6f08:	00000000 	andeq	r0, r0, r0
    6f0c:	2b700000 	blcs	1c06f14 <__RAM_SIZE+0x1b06f14>
    6f10:	2b721000 	blcs	1c8af18 <__RAM_SIZE+0x1b8af18>
    6f14:	00021000 	andeq	r1, r2, r0
    6f18:	2b72007d 	blcs	1c87114 <__RAM_SIZE+0x1b87114>
    6f1c:	2ba81000 	blcs	fea0af24 <__StackTop+0xc690af24>
    6f20:	00021000 	andeq	r1, r2, r0
    6f24:	0000087d 	andeq	r0, r0, sp, ror r8
    6f28:	00000000 	andeq	r0, r0, r0
    6f2c:	00010000 	andeq	r0, r1, r0
    6f30:	2b700000 	blcs	1c06f38 <__RAM_SIZE+0x1b06f38>
    6f34:	2b741000 	blcs	1d0af3c <__RAM_SIZE+0x1c0af3c>
    6f38:	00011000 	andeq	r1, r1, r0
    6f3c:	002b7450 	eoreq	r7, fp, r0, asr r4
    6f40:	002ba810 	eoreq	sl, fp, r0, lsl r8
    6f44:	f3000410 	vqshl.u8	d0, d0, d0
    6f48:	009f5001 	addseq	r5, pc, r1
	...
    6f58:	002b7800 	eoreq	r7, fp, r0, lsl #16
    6f5c:	002b7c10 	eoreq	r7, fp, r0, lsl ip
    6f60:	50000110 	andpl	r0, r0, r0, lsl r1
    6f64:	10002b8e 	andne	r2, r0, lr, lsl #23
    6f68:	10002b91 	mulne	r0, r1, fp
    6f6c:	96500001 	ldrbls	r0, [r0], -r1
    6f70:	9d10002b 	ldcls	0, cr0, [r0, #-172]	; 0xffffff54
    6f74:	0110002b 	tsteq	r0, fp, lsr #32
    6f78:	00005000 	andeq	r5, r0, r0
    6f7c:	00000000 	andeq	r0, r0, r0
    6f80:	2d800000 	stccs	0, cr0, [r0]
    6f84:	2d821000 	stccs	0, cr1, [r2]
    6f88:	00021000 	andeq	r1, r2, r0
    6f8c:	2d82007d 	stccs	0, cr0, [r2, #500]	; 0x1f4
    6f90:	2dfc1000 	ldclcs	0, cr1, [ip]
    6f94:	00021000 	andeq	r1, r2, r0
    6f98:	0000187d 	andeq	r1, r0, sp, ror r8
	...
    6fb8:	10002d80 	andne	r2, r0, r0, lsl #27
    6fbc:	10002d89 	andne	r2, r0, r9, lsl #27
    6fc0:	89500001 	ldmdbhi	r0, {r0}^
    6fc4:	a810002d 	ldmdage	r0, {r0, r2, r3, r5}
    6fc8:	0110002d 	tsteq	r0, sp, lsr #32
    6fcc:	2da85400 	cfstrscs	mvf5, [r8]
    6fd0:	2db01000 	ldccs	0, cr1, [r0]
    6fd4:	00041000 	andeq	r1, r4, r0
    6fd8:	9f5001f3 	svcls	0x005001f3
    6fdc:	10002db0 			; <UNDEFINED> instruction: 0x10002db0
    6fe0:	10002dcc 	andne	r2, r0, ip, asr #27
    6fe4:	cc540001 	mrrcgt	0, 0, r0, r4, cr1
    6fe8:	ce10002d 	cdpgt	0, 1, cr0, cr0, cr13, {1}
    6fec:	0410002d 	ldreq	r0, [r0], #-45	; 0xffffffd3
    6ff0:	5001f300 	andpl	pc, r1, r0, lsl #6
    6ff4:	002dce9f 	mlaeq	sp, pc, lr, ip	; <UNPREDICTABLE>
    6ff8:	002dd810 	eoreq	sp, sp, r0, lsl r8
    6ffc:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    7000:	10002dd8 	ldrdne	r2, [r0], -r8
    7004:	10002dda 	ldrdne	r2, [r0], -sl
    7008:	01f30004 	mvnseq	r0, r4
    700c:	2dda9f50 	ldclcs	15, cr9, [sl, #320]	; 0x140
    7010:	2de81000 	stclcs	0, cr1, [r8]
    7014:	00011000 	andeq	r1, r1, r0
    7018:	002de854 	eoreq	lr, sp, r4, asr r8
    701c:	002dea10 	eoreq	lr, sp, r0, lsl sl
    7020:	f3000410 	vqshl.u8	d0, d0, d0
    7024:	ea9f5001 	b	fe7db030 <__StackTop+0xc66db030>
    7028:	ec10002d 	ldc	0, cr0, [r0], {45}	; 0x2d
    702c:	0110002d 	tsteq	r0, sp, lsr #32
    7030:	2dec5400 	cfstrdcs	mvd5, [ip]
    7034:	2dfc1000 	ldclcs	0, cr1, [ip]
    7038:	00041000 	andeq	r1, r4, r0
    703c:	9f5001f3 	svcls	0x005001f3
	...
    704c:	10002d80 	andne	r2, r0, r0, lsl #27
    7050:	10002d89 	andne	r2, r0, r9, lsl #27
    7054:	89510001 	ldmdbhi	r1, {r0}^
    7058:	fc10002d 	ldc2	0, cr0, [r0], {45}	; 0x2d
    705c:	0110002d 	tsteq	r0, sp, lsr #32
    7060:	00005500 	andeq	r5, r0, r0, lsl #10
    7064:	00000000 	andeq	r0, r0, r0
    7068:	00010000 	andeq	r0, r1, r0
    706c:	00010000 	andeq	r0, r1, r0
    7070:	00010001 	andeq	r0, r1, r1
    7074:	10002da6 	andne	r2, r0, r6, lsr #27
    7078:	10002da8 	andne	r2, r0, r8, lsr #27
    707c:	9f310002 	svcls	0x00310002
    7080:	10002da8 	andne	r2, r0, r8, lsr #27
    7084:	10002db0 			; <UNDEFINED> instruction: 0x10002db0
    7088:	c6540001 	ldrbgt	r0, [r4], -r1
    708c:	ce10002d 	cdpgt	0, 1, cr0, cr0, cr13, {1}
    7090:	0210002d 	andseq	r0, r0, #45	; 0x2d
    7094:	d69f3100 	ldrle	r3, [pc], r0, lsl #2
    7098:	da10002d 	ble	407154 <__RAM_SIZE+0x307154>
    709c:	0210002d 	andseq	r0, r0, #45	; 0x2d
    70a0:	e69f3100 	ldr	r3, [pc], r0, lsl #2
    70a4:	ea10002d 	b	407160 <__RAM_SIZE+0x307160>
    70a8:	0210002d 	andseq	r0, r0, #45	; 0x2d
    70ac:	009f3000 	addseq	r3, pc, r0
	...
    70bc:	002d8e00 	eoreq	r8, sp, r0, lsl #28
    70c0:	002da210 	eoreq	sl, sp, r0, lsl r2
    70c4:	52000110 	andpl	r0, r0, #16, 2
    70c8:	10002db0 			; <UNDEFINED> instruction: 0x10002db0
    70cc:	10002de5 	andne	r2, r0, r5, ror #27
    70d0:	ea520001 	b	14870dc <__RAM_SIZE+0x13870dc>
    70d4:	fc10002d 	ldc2	0, cr0, [r0], {45}	; 0x2d
    70d8:	0110002d 	tsteq	r0, sp, lsr #32
    70dc:	00005200 	andeq	r5, r0, r0, lsl #4
	...
    70ec:	10002d92 	mulne	r0, r2, sp
    70f0:	10002da8 	andne	r2, r0, r8, lsr #27
    70f4:	b0500001 	subslt	r0, r0, r1
    70f8:	e210002d 	ands	r0, r0, #45	; 0x2d
    70fc:	0110002d 	tsteq	r0, sp, lsr #32
    7100:	2dea5000 	stclcs	0, cr5, [sl]
    7104:	2dfc1000 	ldclcs	0, cr1, [ip]
    7108:	00011000 	andeq	r1, r1, r0
    710c:	00000050 	andeq	r0, r0, r0, asr r0
	...
    711c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    7128:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    712c:	00000008 	andeq	r0, r0, r8
	...
    7140:	01000000 	mrseq	r0, (UNDEF: 0)
    7144:	00005000 	andeq	r5, r0, r0
    7148:	00000000 	andeq	r0, r0, r0
    714c:	00010000 	andeq	r0, r1, r0
    7150:	00000054 	andeq	r0, r0, r4, asr r0
    7154:	00000000 	andeq	r0, r0, r0
    7158:	f3000400 	vshl.u8	d0, d0, d0
    715c:	009f5001 	addseq	r5, pc, r1
	...
    716c:	02000000 	andeq	r0, r0, #0
    7170:	00007d00 	andeq	r7, r0, r0, lsl #26
    7174:	00000000 	andeq	r0, r0, r0
    7178:	02000000 	andeq	r0, r0, #0
    717c:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    7194:	01000000 	mrseq	r0, (UNDEF: 0)
    7198:	00005000 	andeq	r5, r0, r0
    719c:	00000000 	andeq	r0, r0, r0
    71a0:	00040000 	andeq	r0, r4, r0
    71a4:	9f5001f3 	svcls	0x005001f3
	...
    71b0:	00500001 	subseq	r0, r0, r1
    71b4:	00000000 	andeq	r0, r0, r0
    71b8:	04000000 	streq	r0, [r0], #-0
    71bc:	5001f300 	andpl	pc, r1, r0, lsl #6
    71c0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    71d4:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    71e0:	01f30004 	mvnseq	r0, r4
    71e4:	00009f51 	andeq	r9, r0, r1, asr pc
	...
    71f8:	00540001 	subseq	r0, r4, r1
	...
    720c:	01000000 	mrseq	r0, (UNDEF: 0)
    7210:	00005300 	andeq	r5, r0, r0, lsl #6
    7214:	00000000 	andeq	r0, r0, r0
    7218:	00010000 	andeq	r0, r1, r0
    721c:	00000053 	andeq	r0, r0, r3, asr r0
	...
    7230:	53000100 	movwpl	r0, #256	; 0x100
	...
    723c:	00530001 	subseq	r0, r3, r1
	...
    7250:	53000100 	movwpl	r0, #256	; 0x100
	...
    725c:	10002c84 	andne	r2, r0, r4, lsl #25
    7260:	10002c86 	andne	r2, r0, r6, lsl #25
    7264:	007d0002 	rsbseq	r0, sp, r2
    7268:	10002c86 	andne	r2, r0, r6, lsl #25
    726c:	10002d68 	andne	r2, r0, r8, ror #26
    7270:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    7284:	10002c84 	andne	r2, r0, r4, lsl #25
    7288:	10002cee 	andne	r2, r0, lr, ror #25
    728c:	ee500001 	cdp	0, 5, cr0, cr0, cr1, {0}
    7290:	2610002c 	ldrcs	r0, [r0], -ip, lsr #32
    7294:	0410002d 	ldreq	r0, [r0], #-45	; 0xffffffd3
    7298:	5001f300 	andpl	pc, r1, r0, lsl #6
    729c:	002d269f 	mlaeq	sp, pc, r6, r2	; <UNPREDICTABLE>
    72a0:	002d3a10 	eoreq	r3, sp, r0, lsl sl
    72a4:	50000110 	andpl	r0, r0, r0, lsl r1
    72a8:	10002d3a 	andne	r2, r0, sl, lsr sp
    72ac:	10002d68 	andne	r2, r0, r8, ror #26
    72b0:	01f30004 	mvnseq	r0, r4
    72b4:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    72c0:	10002c8a 	andne	r2, r0, sl, lsl #25
    72c4:	10002d68 	andne	r2, r0, r8, ror #26
    72c8:	00540001 	subseq	r0, r4, r1
    72cc:	00000000 	andeq	r0, r0, r0
    72d0:	01000000 	mrseq	r0, (UNDEF: 0)
    72d4:	1e000000 	cdpne	0, 0, cr0, cr0, cr0, {0}
    72d8:	2410002d 	ldrcs	r0, [r0], #-45	; 0xffffffd3
    72dc:	0210002d 	andseq	r0, r0, #45	; 0x2d
    72e0:	4c9f3100 	ldfmis	f3, [pc], {0}
    72e4:	6810002d 	ldmdavs	r0, {r0, r2, r3, r5}
    72e8:	0210002d 	andseq	r0, r0, #45	; 0x2d
    72ec:	009f3000 	addseq	r3, pc, r0
	...
    72f8:	8c000000 	stchi	0, cr0, [r0], {-0}
    72fc:	ac10002c 	ldcge	0, cr0, [r0], {44}	; 0x2c
    7300:	0110002c 	tsteq	r0, ip, lsr #32
    7304:	2d265300 	stccs	3, cr5, [r6, #-0]
    7308:	2d2c1000 	stccs	0, cr1, [ip, #-0]
    730c:	00011000 	andeq	r1, r1, r0
    7310:	00000053 	andeq	r0, r0, r3, asr r0
	...
    731c:	002cb400 	eoreq	fp, ip, r0, lsl #8
    7320:	002cd210 	eoreq	sp, ip, r0, lsl r2
    7324:	53000110 	movwpl	r0, #272	; 0x110
    7328:	10002d2c 	andne	r2, r0, ip, lsr #26
    732c:	10002d32 	andne	r2, r0, r2, lsr sp
    7330:	00530001 	subseq	r0, r3, r1
	...
    733c:	002cea00 	eoreq	lr, ip, r0, lsl #20
    7340:	002cf610 	eoreq	pc, ip, r0, lsl r6	; <UNPREDICTABLE>
    7344:	53000110 	movwpl	r0, #272	; 0x110
	...
    7350:	2d360000 	ldccs	0, cr0, [r6, #-0]
    7354:	2d441000 	stclcs	0, cr1, [r4, #-0]
    7358:	00011000 	andeq	r1, r1, r0
    735c:	00000052 	andeq	r0, r0, r2, asr r0
    7360:	00000000 	andeq	r0, r0, r0
    7364:	002c4800 	eoreq	r4, ip, r0, lsl #16
    7368:	002c4a10 	eoreq	r4, ip, r0, lsl sl
    736c:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    7370:	002c4a00 	eoreq	r4, ip, r0, lsl #20
    7374:	002c8410 	eoreq	r8, ip, r0, lsl r4
    7378:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    737c:	00000010 	andeq	r0, r0, r0, lsl r0
	...
    7388:	48000000 	stmdami	r0, {}	; <UNPREDICTABLE>
    738c:	4e10002c 	cdpmi	0, 1, cr0, cr0, cr12, {1}
    7390:	0110002c 	tsteq	r0, ip, lsr #32
    7394:	2c4e5000 	marcs	acc0, r5, lr
    7398:	2c7d1000 	ldclcs	0, cr1, [sp], #-0
    739c:	00011000 	andeq	r1, r1, r0
    73a0:	002c7d53 	eoreq	r7, ip, r3, asr sp
    73a4:	002c8410 	eoreq	r8, ip, r0, lsl r4
    73a8:	f3000410 	vqshl.u8	d0, d0, d0
    73ac:	009f5001 	addseq	r5, pc, r1
	...
    73b8:	48000000 	stmdami	r0, {}	; <UNPREDICTABLE>
    73bc:	5010002c 	andspl	r0, r0, ip, lsr #32
    73c0:	0110002c 	tsteq	r0, ip, lsr #32
    73c4:	2c505100 	ldfcse	f5, [r0], {-0}
    73c8:	2c7d1000 	ldclcs	0, cr1, [sp], #-0
    73cc:	00011000 	andeq	r1, r1, r0
    73d0:	00000050 	andeq	r0, r0, r0, asr r0
	...
    73dc:	002c4800 	eoreq	r4, ip, r0, lsl #16
    73e0:	002c7d10 	eoreq	r7, ip, r0, lsl sp
    73e4:	52000110 	andpl	r0, r0, #16, 2
    73e8:	10002c7d 	andne	r2, r0, sp, ror ip
    73ec:	10002c84 	andne	r2, r0, r4, lsl #25
    73f0:	01f30004 	mvnseq	r0, r4
    73f4:	00009f52 	andeq	r9, r0, r2, asr pc
	...
    7400:	10002c50 	andne	r2, r0, r0, asr ip
    7404:	10002c6a 	andne	r2, r0, sl, ror #24
    7408:	00510001 	subseq	r0, r1, r1
	...
    7418:	02000000 	andeq	r0, r0, #0
    741c:	00007d00 	andeq	r7, r0, r0, lsl #26
    7420:	00000000 	andeq	r0, r0, r0
    7424:	02000000 	andeq	r0, r0, #0
    7428:	00107d00 	andseq	r7, r0, r0, lsl #26
	...
    7440:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    744c:	00530001 	subseq	r0, r3, r1
    7450:	00000000 	andeq	r0, r0, r0
    7454:	04000000 	streq	r0, [r0], #-0
    7458:	5001f300 	andpl	pc, r1, r0, lsl #6
    745c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    7470:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    747c:	01f30004 	mvnseq	r0, r4
    7480:	00009f51 	andeq	r9, r0, r1, asr pc
	...
    7494:	00010000 	andeq	r0, r1, r0
    7498:	00000052 	andeq	r0, r0, r2, asr r0
    749c:	00000000 	andeq	r0, r0, r0
    74a0:	f3000400 	vshl.u8	d0, d0, d0
    74a4:	009f5201 	addseq	r5, pc, r1, lsl #4
	...
    74b8:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    74c4:	10002c2c 	andne	r2, r0, ip, lsr #24
    74c8:	10002c2e 	andne	r2, r0, lr, lsr #24
    74cc:	007d0002 	rsbseq	r0, sp, r2
    74d0:	10002c2e 	andne	r2, r0, lr, lsr #24
    74d4:	10002c48 	andne	r2, r0, r8, asr #24
    74d8:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    74e8:	10002c2c 	andne	r2, r0, ip, lsr #24
    74ec:	10002c39 	andne	r2, r0, r9, lsr ip
    74f0:	39500001 	ldmdbcc	r0, {r0}^
    74f4:	4810002c 	ldmdami	r0, {r2, r3, r5}
    74f8:	0410002c 	ldreq	r0, [r0], #-44	; 0xffffffd4
    74fc:	5001f300 	andpl	pc, r1, r0, lsl #6
    7500:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    750c:	2c000000 	stccs	0, cr0, [r0], {-0}
    7510:	3410002c 	ldrcc	r0, [r0], #-44	; 0xffffffd4
    7514:	0110002c 	tsteq	r0, ip, lsr #32
    7518:	2c345100 	ldfcss	f5, [r4], #-0
    751c:	2c441000 	marcs	acc0, r1, r4
    7520:	00011000 	andeq	r1, r1, r0
    7524:	002c4454 	eoreq	r4, ip, r4, asr r4
    7528:	002c4810 	eoreq	r4, ip, r0, lsl r8
    752c:	f3000410 	vqshl.u8	d0, d0, d0
    7530:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
    7540:	002bc000 	eoreq	ip, fp, r0
    7544:	002c0810 	eoreq	r0, ip, r0, lsl r8
    7548:	53000110 	movwpl	r0, #272	; 0x110
    754c:	10002c08 	andne	r2, r0, r8, lsl #24
    7550:	10002c0a 	andne	r2, r0, sl, lsl #24
    7554:	60030005 	andvs	r0, r3, r5
    7558:	0a38008a 	beq	e07788 <__RAM_SIZE+0xd07788>
    755c:	2c10002c 	ldccs	0, cr0, [r0], {44}	; 0x2c
    7560:	0110002c 	tsteq	r0, ip, lsr #32
    7564:	00005300 	andeq	r5, r0, r0, lsl #6
    7568:	00000000 	andeq	r0, r0, r0
    756c:	00020000 	andeq	r0, r2, r0
    7570:	00000000 	andeq	r0, r0, r0
    7574:	10002bd2 	ldrdne	r2, [r0], -r2	; <UNPREDICTABLE>
    7578:	10002c08 	andne	r2, r0, r8, lsl #24
    757c:	0073000b 	rsbseq	r0, r3, fp
    7580:	c4031e4c 	strgt	r1, [r3], #-3660	; 0xfffff1b4
    7584:	22380085 	eorscs	r0, r8, #133	; 0x85
    7588:	002c089f 	mlaeq	ip, pc, r8, r0	; <UNPREDICTABLE>
    758c:	002c0a10 	eoreq	r0, ip, r0, lsl sl
    7590:	03000f10 	movweq	r0, #3856	; 0xf10
    7594:	38008a60 	stmdacc	r0, {r5, r6, r9, fp, pc}
    7598:	031e4c06 	tsteq	lr, #1536	; 0x600
    759c:	380085c4 	stmdacc	r0, {r2, r6, r7, r8, sl, pc}
    75a0:	2c0a9f22 	stccs	15, cr9, [sl], {34}	; 0x22
    75a4:	2c2c1000 	stccs	0, cr1, [ip], #-0
    75a8:	000b1000 	andeq	r1, fp, r0
    75ac:	1e4c0073 	mcrne	0, 2, r0, cr12, cr3, {3}
    75b0:	0085c403 	addeq	ip, r5, r3, lsl #8
    75b4:	009f2238 	addseq	r2, pc, r8, lsr r2	; <UNPREDICTABLE>
	...
    75c4:	02000000 	andeq	r0, r0, #0
    75c8:	00007d00 	andeq	r7, r0, r0, lsl #26
    75cc:	00000000 	andeq	r0, r0, r0
    75d0:	02000000 	andeq	r0, r0, #0
    75d4:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    75e8:	01000000 	mrseq	r0, (UNDEF: 0)
    75ec:	00005000 	andeq	r5, r0, r0
    75f0:	00000000 	andeq	r0, r0, r0
    75f4:	00010000 	andeq	r0, r1, r0
    75f8:	00000050 	andeq	r0, r0, r0, asr r0
	...
    760c:	01000000 	mrseq	r0, (UNDEF: 0)
    7610:	00005100 	andeq	r5, r0, r0, lsl #2
    7614:	00000000 	andeq	r0, r0, r0
    7618:	00040000 	andeq	r0, r4, r0
    761c:	9f5101f3 	svcls	0x005101f3
	...
    7628:	00510001 	subseq	r0, r1, r1
	...
    763c:	01000000 	mrseq	r0, (UNDEF: 0)
    7640:	00005300 	andeq	r5, r0, r0, lsl #6
    7644:	00000000 	andeq	r0, r0, r0
    7648:	00010000 	andeq	r0, r1, r0
    764c:	00000053 	andeq	r0, r0, r3, asr r0
	...
    765c:	02000000 	andeq	r0, r0, #0
    7660:	009f3000 	addseq	r3, pc, r0
	...
    7670:	02000000 	andeq	r0, r0, #0
    7674:	00007d00 	andeq	r7, r0, r0, lsl #26
    7678:	00000000 	andeq	r0, r0, r0
    767c:	02000000 	andeq	r0, r0, #0
    7680:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    7694:	01000000 	mrseq	r0, (UNDEF: 0)
    7698:	00005000 	andeq	r5, r0, r0
    769c:	00000000 	andeq	r0, r0, r0
    76a0:	00010000 	andeq	r0, r1, r0
    76a4:	00000050 	andeq	r0, r0, r0, asr r0
	...
    76b4:	01000000 	mrseq	r0, (UNDEF: 0)
    76b8:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    76cc:	00540001 	subseq	r0, r4, r1
	...
    76e0:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    76f4:	007d0002 	rsbseq	r0, sp, r2
	...
    7700:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    7718:	00500001 	subseq	r0, r0, r1
    771c:	00000000 	andeq	r0, r0, r0
    7720:	01000000 	mrseq	r0, (UNDEF: 0)
    7724:	00005000 	andeq	r5, r0, r0
	...
    7738:	00540001 	subseq	r0, r4, r1
	...
    774c:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    7760:	007d0002 	rsbseq	r0, sp, r2
	...
    776c:	107d0002 	rsbsne	r0, sp, r2
	...
    7784:	00500001 	subseq	r0, r0, r1
    7788:	00000000 	andeq	r0, r0, r0
    778c:	01000000 	mrseq	r0, (UNDEF: 0)
    7790:	00005000 	andeq	r5, r0, r0
	...
    77a8:	00510001 	subseq	r0, r1, r1
    77ac:	00000000 	andeq	r0, r0, r0
    77b0:	01000000 	mrseq	r0, (UNDEF: 0)
    77b4:	00005400 	andeq	r5, r0, r0, lsl #8
    77b8:	00000000 	andeq	r0, r0, r0
    77bc:	00010000 	andeq	r0, r1, r0
    77c0:	00000051 	andeq	r0, r0, r1, asr r0
	...
    77d4:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    77e0:	00550001 	subseq	r0, r5, r1
    77e4:	00000000 	andeq	r0, r0, r0
    77e8:	c0000000 	andgt	r0, r0, r0
    77ec:	cc100028 	ldcgt	0, cr0, [r0], {40}	; 0x28
    77f0:	02100028 	andseq	r0, r0, #40	; 0x28
    77f4:	cc007d00 	stcgt	13, cr7, [r0], {-0}
    77f8:	e4100028 	ldr	r0, [r0], #-40	; 0xffffffd8
    77fc:	02100029 	andseq	r0, r0, #41	; 0x29
    7800:	e4107d00 	ldr	r7, [r0], #-3328	; 0xfffff300
    7804:	f0100029 			; <UNDEFINED> instruction: 0xf0100029
    7808:	02100029 	andseq	r0, r0, #41	; 0x29
    780c:	f0007d00 			; <UNDEFINED> instruction: 0xf0007d00
    7810:	20100029 	andscs	r0, r0, r9, lsr #32
    7814:	0210002a 	andseq	r0, r0, #42	; 0x2a
    7818:	00107d00 	andseq	r7, r0, r0, lsl #26
	...
    7828:	00292800 	eoreq	r2, r9, r0, lsl #16
    782c:	00292a10 	eoreq	r2, r9, r0, lsl sl
    7830:	53000110 	movwpl	r0, #272	; 0x110
    7834:	1000292e 	andne	r2, r0, lr, lsr #18
    7838:	10002984 	andne	r2, r0, r4, lsl #19
    783c:	a0530001 	subsge	r0, r3, r1
    7840:	e4100029 	ldr	r0, [r0], #-41	; 0xffffffd7
    7844:	01100029 	tsteq	r0, r9, lsr #32
    7848:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    7858:	10002928 	andne	r2, r0, r8, lsr #18
    785c:	1000292e 	andne	r2, r0, lr, lsr #18
    7860:	a2520001 	subsge	r0, r2, #1
    7864:	a8100029 	ldmdage	r0, {r0, r3, r5}
    7868:	01100029 	tsteq	r0, r9, lsr #32
    786c:	29a85200 	stmibcs	r8!, {r9, ip, lr}
    7870:	29ae1000 	stmibcs	lr!, {ip}
    7874:	00021000 	andeq	r1, r2, r0
    7878:	00000473 	andeq	r0, r0, r3, ror r4
    787c:	00000000 	andeq	r0, r0, r0
    7880:	00040000 	andeq	r0, r4, r0
	...
    7890:	100028c0 	andne	r2, r0, r0, asr #17
    7894:	100028e0 	andne	r2, r0, r0, ror #17
    7898:	9f300002 	svcls	0x00300002
    789c:	100028e0 	andne	r2, r0, r0, ror #17
    78a0:	100028fe 	strdne	r2, [r0], -lr
    78a4:	00500001 	subseq	r0, r0, r1
    78a8:	1e100029 	cdpne	0, 1, cr0, cr0, cr9, {1}
    78ac:	02100029 	andseq	r0, r0, #41	; 0x29
    78b0:	1e9f3000 	cdpne	0, 9, cr3, cr15, cr0, {0}
    78b4:	e4100029 	ldr	r0, [r0], #-41	; 0xffffffd7
    78b8:	01100029 	tsteq	r0, r9, lsr #32
    78bc:	29e45000 	stmibcs	r4!, {ip, lr}^
    78c0:	29f01000 	ldmibcs	r0!, {ip}^
    78c4:	00021000 	andeq	r1, r2, r0
    78c8:	29f09f30 	ldmibcs	r0!, {r4, r5, r8, r9, sl, fp, ip, pc}^
    78cc:	29f21000 	ldmibcs	r2!, {ip}^
    78d0:	00011000 	andeq	r1, r1, r0
    78d4:	0029f250 	eoreq	pc, r9, r0, asr r2	; <UNPREDICTABLE>
    78d8:	002a2010 	eoreq	r2, sl, r0, lsl r0
    78dc:	31000210 	tstcc	r0, r0, lsl r2
    78e0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    78ec:	0028d200 	eoreq	sp, r8, r0, lsl #4
    78f0:	0029e410 	eoreq	lr, r9, r0, lsl r4
    78f4:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    78f8:	100029f0 	strdne	r2, [r0], -r0
    78fc:	10002a20 	andne	r2, r0, r0, lsr #20
    7900:	00540001 	subseq	r0, r4, r1
	...
    790c:	00290400 	eoreq	r0, r9, r0, lsl #8
    7910:	00291710 	eoreq	r1, r9, r0, lsl r7
    7914:	51000110 	tstpl	r0, r0, lsl r1
	...
    7924:	1000292e 	andne	r2, r0, lr, lsr #18
    7928:	10002934 	andne	r2, r0, r4, lsr r9
    792c:	a8520001 	ldmdage	r2, {r0}^
    7930:	c6100029 	ldrgt	r0, [r0], -r9, lsr #32
    7934:	01100029 	tsteq	r0, r9, lsr #32
    7938:	00005200 	andeq	r5, r0, r0, lsl #4
    793c:	00000000 	andeq	r0, r0, r0
    7940:	01000000 	mrseq	r0, (UNDEF: 0)
    7944:	29340002 	ldmdbcs	r4!, {r1}
    7948:	293e1000 	ldmdbcs	lr!, {ip}
    794c:	00011000 	andeq	r1, r1, r0
    7950:	0029ca52 	eoreq	ip, r9, r2, asr sl
    7954:	0029e410 	eoreq	lr, r9, r0, lsl r4
    7958:	52000110 	andpl	r0, r0, #16, 2
	...
    7964:	295c0000 	ldmdbcs	ip, {}^	; <UNPREDICTABLE>
    7968:	29681000 	stmdbcs	r8!, {ip}^
    796c:	00011000 	andeq	r1, r1, r0
    7970:	00000052 	andeq	r0, r0, r2, asr r0
	...
    7980:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    798c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    7990:	00000010 	andeq	r0, r0, r0, lsl r0
	...
    79ac:	01000000 	mrseq	r0, (UNDEF: 0)
    79b0:	00005000 	andeq	r5, r0, r0
    79b4:	00000000 	andeq	r0, r0, r0
    79b8:	00010000 	andeq	r0, r1, r0
    79bc:	00000054 	andeq	r0, r0, r4, asr r0
    79c0:	00000000 	andeq	r0, r0, r0
    79c4:	f3000400 	vshl.u8	d0, d0, d0
    79c8:	009f5001 	addseq	r5, pc, r1
    79cc:	00000000 	andeq	r0, r0, r0
    79d0:	01000000 	mrseq	r0, (UNDEF: 0)
    79d4:	00005400 	andeq	r5, r0, r0, lsl #8
    79d8:	00000000 	andeq	r0, r0, r0
    79dc:	00030000 	andeq	r0, r3, r0
    79e0:	009f7c75 	addseq	r7, pc, r5, ror ip	; <UNPREDICTABLE>
    79e4:	00000000 	andeq	r0, r0, r0
    79e8:	01000000 	mrseq	r0, (UNDEF: 0)
    79ec:	00005400 	andeq	r5, r0, r0, lsl #8
    79f0:	00000000 	andeq	r0, r0, r0
    79f4:	00030000 	andeq	r0, r3, r0
    79f8:	009f7c75 	addseq	r7, pc, r5, ror ip	; <UNPREDICTABLE>
    79fc:	00000000 	andeq	r0, r0, r0
    7a00:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    7a18:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    7a24:	00540001 	subseq	r0, r4, r1
    7a28:	00000000 	andeq	r0, r0, r0
    7a2c:	04000000 	streq	r0, [r0], #-0
    7a30:	5001f300 	andpl	pc, r1, r0, lsl #6
    7a34:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    7a38:	00000000 	andeq	r0, r0, r0
    7a3c:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    7a48:	7c750003 	ldclvc	0, cr0, [r5], #-12
    7a4c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    7a50:	00000000 	andeq	r0, r0, r0
    7a54:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    7a60:	7c750003 	ldclvc	0, cr0, [r5], #-12
    7a64:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    7a68:	00000000 	andeq	r0, r0, r0
    7a6c:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    7a78:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    7a84:	9f310002 	svcls	0x00310002
	...
    7a98:	00010000 	andeq	r0, r1, r0
    7a9c:	00000053 	andeq	r0, r0, r3, asr r0
	...
    7aac:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    7ab8:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    7abc:	00000008 	andeq	r0, r0, r8
	...
    7ad0:	01000000 	mrseq	r0, (UNDEF: 0)
    7ad4:	00005000 	andeq	r5, r0, r0
    7ad8:	00000000 	andeq	r0, r0, r0
    7adc:	00010000 	andeq	r0, r1, r0
    7ae0:	00000054 	andeq	r0, r0, r4, asr r0
    7ae4:	00000000 	andeq	r0, r0, r0
    7ae8:	f3000400 	vshl.u8	d0, d0, d0
    7aec:	009f5001 	addseq	r5, pc, r1
	...
    7b00:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    7b0c:	10002884 	andne	r2, r0, r4, lsl #17
    7b10:	10002886 	andne	r2, r0, r6, lsl #17
    7b14:	007d0002 	rsbseq	r0, sp, r2
    7b18:	10002886 	andne	r2, r0, r6, lsl #17
    7b1c:	100028c0 	andne	r2, r0, r0, asr #17
    7b20:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    7b34:	10002884 	andne	r2, r0, r4, lsl #17
    7b38:	10002896 	mulne	r0, r6, r8
    7b3c:	96500001 	ldrbls	r0, [r0], -r1
    7b40:	9c100028 	ldcls	0, cr0, [r0], {40}	; 0x28
    7b44:	01100028 	tsteq	r0, r8, lsr #32
    7b48:	28a05400 	stmiacs	r0!, {sl, ip, lr}
    7b4c:	28a31000 	stmiacs	r3!, {ip}
    7b50:	00011000 	andeq	r1, r1, r0
    7b54:	0028a350 	eoreq	sl, r8, r0, asr r3
    7b58:	0028c010 	eoreq	ip, r8, r0, lsl r0
    7b5c:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
	...
    7b6c:	1000288e 	andne	r2, r0, lr, lsl #17
    7b70:	10002896 	mulne	r0, r6, r8
    7b74:	a0530001 	subsge	r0, r3, r1
    7b78:	a3100028 	tstge	r0, #40	; 0x28
    7b7c:	01100028 	tsteq	r0, r8, lsr #32
    7b80:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    7b94:	00010000 	andeq	r0, r1, r0
    7b98:	00000050 	andeq	r0, r0, r0, asr r0
    7b9c:	00000000 	andeq	r0, r0, r0
    7ba0:	f3000400 	vshl.u8	d0, d0, d0
    7ba4:	009f5001 	addseq	r5, pc, r1
	...
    7bb8:	01000000 	mrseq	r0, (UNDEF: 0)
    7bbc:	00005000 	andeq	r5, r0, r0
    7bc0:	00000000 	andeq	r0, r0, r0
    7bc4:	00010000 	andeq	r0, r1, r0
    7bc8:	00000050 	andeq	r0, r0, r0, asr r0
    7bcc:	00000000 	andeq	r0, r0, r0
    7bd0:	01000000 	mrseq	r0, (UNDEF: 0)
    7bd4:	00000100 	andeq	r0, r0, r0, lsl #2
    7bd8:	00000000 	andeq	r0, r0, r0
    7bdc:	02000000 	andeq	r0, r0, #0
    7be0:	009f3000 	addseq	r3, pc, r0
    7be4:	00000000 	andeq	r0, r0, r0
    7be8:	02000000 	andeq	r0, r0, #0
    7bec:	009f3100 	addseq	r3, pc, r0, lsl #2
    7bf0:	00000000 	andeq	r0, r0, r0
    7bf4:	02000000 	andeq	r0, r0, #0
    7bf8:	009f3100 	addseq	r3, pc, r0, lsl #2
	...
    7c0c:	01000000 	mrseq	r0, (UNDEF: 0)
    7c10:	00005300 	andeq	r5, r0, r0, lsl #6
    7c14:	00000000 	andeq	r0, r0, r0
    7c18:	00010000 	andeq	r0, r1, r0
    7c1c:	00000053 	andeq	r0, r0, r3, asr r0
	...
    7c2c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    7c38:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    7c3c:	00000010 	andeq	r0, r0, r0, lsl r0
	...
    7c50:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    7c5c:	00560001 	subseq	r0, r6, r1
    7c60:	00000000 	andeq	r0, r0, r0
    7c64:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    7c70:	02000000 	andeq	r0, r0, #0
    7c74:	009f3500 	addseq	r3, pc, r0, lsl #10
    7c78:	00000000 	andeq	r0, r0, r0
    7c7c:	01000000 	mrseq	r0, (UNDEF: 0)
    7c80:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    7ca8:	00500001 	subseq	r0, r0, r1
    7cac:	00000000 	andeq	r0, r0, r0
    7cb0:	01000000 	mrseq	r0, (UNDEF: 0)
    7cb4:	00005500 	andeq	r5, r0, r0, lsl #10
    7cb8:	00000000 	andeq	r0, r0, r0
    7cbc:	00010000 	andeq	r0, r1, r0
    7cc0:	00000050 	andeq	r0, r0, r0, asr r0
    7cc4:	00000000 	andeq	r0, r0, r0
    7cc8:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    7cd4:	00500001 	subseq	r0, r0, r1
    7cd8:	00000000 	andeq	r0, r0, r0
    7cdc:	01000000 	mrseq	r0, (UNDEF: 0)
    7ce0:	00005500 	andeq	r5, r0, r0, lsl #10
    7ce4:	00000000 	andeq	r0, r0, r0
    7ce8:	00010000 	andeq	r0, r1, r0
    7cec:	00000050 	andeq	r0, r0, r0, asr r0
    7cf0:	00000000 	andeq	r0, r0, r0
    7cf4:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    7d00:	00500001 	subseq	r0, r0, r1
    7d04:	00000000 	andeq	r0, r0, r0
    7d08:	01000000 	mrseq	r0, (UNDEF: 0)
    7d0c:	00005500 	andeq	r5, r0, r0, lsl #10
    7d10:	00000000 	andeq	r0, r0, r0
    7d14:	00010000 	andeq	r0, r1, r0
    7d18:	00000050 	andeq	r0, r0, r0, asr r0
	...
    7d28:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    7d34:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    7d38:	0000000c 	andeq	r0, r0, ip
	...
    7d50:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    7d5c:	78750003 	ldmdavc	r5!, {r0, r1}^
    7d60:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    7d64:	00000000 	andeq	r0, r0, r0
    7d68:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    7d74:	78750003 	ldmdavc	r5!, {r0, r1}^
    7d78:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    7d84:	02020000 	andeq	r0, r2, #0
	...
    7d90:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    7d9c:	005e0001 	subseq	r0, lr, r1
    7da0:	00000000 	andeq	r0, r0, r0
    7da4:	01000000 	mrseq	r0, (UNDEF: 0)
    7da8:	00005100 	andeq	r5, r0, r0, lsl #2
    7dac:	00000000 	andeq	r0, r0, r0
    7db0:	00040000 	andeq	r0, r4, r0
    7db4:	9f5101f3 	svcls	0x005101f3
	...
    7dc0:	00000001 	andeq	r0, r0, r1
    7dc4:	00000200 	andeq	r0, r0, r0, lsl #4
    7dc8:	00000000 	andeq	r0, r0, r0
    7dcc:	00020000 	andeq	r0, r2, r0
    7dd0:	00009f30 	andeq	r9, r0, r0, lsr pc
    7dd4:	00000000 	andeq	r0, r0, r0
    7dd8:	00010000 	andeq	r0, r1, r0
    7ddc:	00000050 	andeq	r0, r0, r0, asr r0
    7de0:	00000000 	andeq	r0, r0, r0
    7de4:	30000200 	andcc	r0, r0, r0, lsl #4
    7de8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    7dec:	00000000 	andeq	r0, r0, r0
    7df0:	00000200 	andeq	r0, r0, r0, lsl #4
    7df4:	00000000 	andeq	r0, r0, r0
    7df8:	00000002 	andeq	r0, r0, r2
    7dfc:	00000000 	andeq	r0, r0, r0
    7e00:	30000200 	andcc	r0, r0, r0, lsl #4
    7e04:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    7e08:	00000000 	andeq	r0, r0, r0
    7e0c:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    7e18:	00510001 	subseq	r0, r1, r1
    7e1c:	00000000 	andeq	r0, r0, r0
    7e20:	02000000 	andeq	r0, r0, #0
    7e24:	009f3000 	addseq	r3, pc, r0
	...
    7e30:	00000200 	andeq	r0, r0, r0, lsl #4
	...
    7e3c:	53000100 	movwpl	r0, #256	; 0x100
	...
    7e48:	9f300002 	svcls	0x00300002
	...
    7e54:	00530001 	subseq	r0, r3, r1
	...
    7e68:	01000000 	mrseq	r0, (UNDEF: 0)
    7e6c:	00005200 	andeq	r5, r0, r0, lsl #4
    7e70:	00000000 	andeq	r0, r0, r0
    7e74:	00010000 	andeq	r0, r1, r0
    7e78:	00000052 	andeq	r0, r0, r2, asr r0
    7e7c:	00000000 	andeq	r0, r0, r0
    7e80:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    7e8c:	30000200 	andcc	r0, r0, r0, lsl #4
    7e90:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    7e94:	00000000 	andeq	r0, r0, r0
    7e98:	30000200 	andcc	r0, r0, r0, lsl #4
    7e9c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    7eb0:	70000300 	andvc	r0, r0, r0, lsl #6
    7eb4:	00009f08 	andeq	r9, r0, r8, lsl #30
    7eb8:	00000000 	andeq	r0, r0, r0
    7ebc:	00010000 	andeq	r0, r1, r0
    7ec0:	00000055 	andeq	r0, r0, r5, asr r0
	...
    7ed0:	01000000 	mrseq	r0, (UNDEF: 0)
    7ed4:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    7ee8:	00010000 	andeq	r0, r1, r0
    7eec:	00000050 	andeq	r0, r0, r0, asr r0
    7ef0:	00000000 	andeq	r0, r0, r0
    7ef4:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    7f08:	00010000 	andeq	r0, r1, r0
    7f0c:	00000053 	andeq	r0, r0, r3, asr r0
	...
    7f1c:	01000000 	mrseq	r0, (UNDEF: 0)
    7f20:	00005000 	andeq	r5, r0, r0
	...
    7f2c:	10002870 	andne	r2, r0, r0, ror r8
    7f30:	10002878 	andne	r2, r0, r8, ror r8
    7f34:	00500001 	subseq	r0, r0, r1
    7f38:	00000000 	andeq	r0, r0, r0
    7f3c:	20000000 	andcs	r0, r0, r0
    7f40:	2210002a 	andscs	r0, r0, #42	; 0x2a
    7f44:	0210002a 	andseq	r0, r0, #42	; 0x2a
    7f48:	22007d00 	andcs	r7, r0, #0, 26
    7f4c:	5010002a 	andspl	r0, r0, sl, lsr #32
    7f50:	0210002b 	andseq	r0, r0, #43	; 0x2b
    7f54:	00087d00 	andeq	r7, r8, r0, lsl #26
    7f58:	00000000 	andeq	r0, r0, r0
    7f5c:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    7f68:	22000000 	andcs	r0, r0, #0
    7f6c:	3e10002a 	cdpcc	0, 1, cr0, cr0, cr10, {1}
    7f70:	0210002a 	andseq	r0, r0, #42	; 0x2a
    7f74:	3e9f3000 	cdpcc	0, 9, cr3, cr15, cr0, {0}
    7f78:	4a10002a 	bmi	408028 <__RAM_SIZE+0x308028>
    7f7c:	0110002a 	tsteq	r0, sl, lsr #32
    7f80:	2a4a5300 	bcs	129cb88 <__RAM_SIZE+0x119cb88>
    7f84:	2a4c1000 	bcs	130bf8c <__RAM_SIZE+0x120bf8c>
    7f88:	00021000 	andeq	r1, r2, r0
    7f8c:	2a4c9f30 	bcs	132fc54 <__RAM_SIZE+0x122fc54>
    7f90:	2a561000 	bcs	158bf98 <__RAM_SIZE+0x148bf98>
    7f94:	00011000 	andeq	r1, r1, r0
    7f98:	002a5a53 	eoreq	r5, sl, r3, asr sl
    7f9c:	002aef10 	eoreq	lr, sl, r0, lsl pc
    7fa0:	53000110 	movwpl	r0, #272	; 0x110
    7fa4:	10002b24 	andne	r2, r0, r4, lsr #22
    7fa8:	10002b26 	andne	r2, r0, r6, lsr #22
    7fac:	9f300002 	svcls	0x00300002
	...
    7fb8:	00010102 	andeq	r0, r1, r2, lsl #2
    7fbc:	00000000 	andeq	r0, r0, r0
    7fc0:	2a220000 	bcs	887fc8 <__RAM_SIZE+0x787fc8>
    7fc4:	2afc1000 	bcs	fff0bfcc <__StackTop+0xc7e0bfcc>
    7fc8:	00021000 	andeq	r1, r2, r0
    7fcc:	2afc9f30 	bcs	fff2fc94 <__StackTop+0xc7e2fc94>
    7fd0:	2b081000 	blcs	20bfd8 <__RAM_SIZE+0x10bfd8>
    7fd4:	00021000 	andeq	r1, r2, r0
    7fd8:	2b089f31 	blcs	22fca4 <__RAM_SIZE+0x12fca4>
    7fdc:	2b261000 	blcs	98bfe4 <__RAM_SIZE+0x88bfe4>
    7fe0:	00021000 	andeq	r1, r2, r0
    7fe4:	2b269f30 	blcs	9afcac <__RAM_SIZE+0x8afcac>
    7fe8:	2b2e1000 	blcs	b8bff0 <__RAM_SIZE+0xa8bff0>
    7fec:	00011000 	andeq	r1, r1, r0
    7ff0:	002b2e54 	eoreq	r2, fp, r4, asr lr
    7ff4:	002b5010 	eoreq	r5, fp, r0, lsl r0
    7ff8:	50000110 	andpl	r0, r0, r0, lsl r1
	...
    8008:	10002a3e 	andne	r2, r0, lr, lsr sl
    800c:	10002a44 	andne	r2, r0, r4, asr #20
    8010:	5c520001 	mrrcpl	0, 0, r0, r2, cr1
    8014:	7c10002a 	ldcvc	0, cr0, [r0], {42}	; 0x2a
    8018:	0110002a 	tsteq	r0, sl, lsr #32
    801c:	00005200 	andeq	r5, r0, r0, lsl #4
	...
    8028:	2a440000 	bcs	1108030 <__RAM_SIZE+0x1008030>
    802c:	2a4a1000 	bcs	128c034 <__RAM_SIZE+0x118c034>
    8030:	00011000 	andeq	r1, r1, r0
    8034:	002a7c52 	eoreq	r7, sl, r2, asr ip
    8038:	002a9a10 	eoreq	r9, sl, r0, lsl sl
    803c:	52000110 	andpl	r0, r0, #16, 2
	...
    8048:	2ab20000 	bcs	fec88050 <__StackTop+0xc6b88050>
    804c:	2abe1000 	bcs	fef8c054 <__StackTop+0xc6e8c054>
    8050:	00011000 	andeq	r1, r1, r0
    8054:	00000052 	andeq	r0, r0, r2, asr r0
	...
    8060:	00000202 	andeq	r0, r0, r2, lsl #4
    8064:	002af400 	eoreq	pc, sl, r0, lsl #8
    8068:	002afa10 	eoreq	pc, sl, r0, lsl sl	; <UNPREDICTABLE>
    806c:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    8070:	10002b08 	andne	r2, r0, r8, lsl #22
    8074:	10002b08 	andne	r2, r0, r8, lsl #22
    8078:	08540001 	ldmdaeq	r4, {r0}^
    807c:	0a10002b 	beq	408130 <__RAM_SIZE+0x308130>
    8080:	0310002b 	tsteq	r0, #43	; 0x2b
    8084:	9f7f7400 	svcls	0x007f7400
    8088:	10002b0a 	andne	r2, r0, sl, lsl #22
    808c:	10002b24 	andne	r2, r0, r4, lsr #22
    8090:	00540001 	subseq	r0, r4, r1
	...
    809c:	3e010000 	cdpcc	0, 0, cr0, cr1, cr0, {0}
    80a0:	46100024 	ldrmi	r0, [r0], -r4, lsr #32
    80a4:	01100024 	tsteq	r0, r4, lsr #32
    80a8:	24485000 	strbcs	r5, [r8], #-0
    80ac:	24481000 	strbcs	r1, [r8], #-0
    80b0:	00021000 	andeq	r1, r2, r0
    80b4:	00009f30 	andeq	r9, r0, r0, lsr pc
    80b8:	00000000 	andeq	r0, r0, r0
    80bc:	00030000 	andeq	r0, r3, r0
    80c0:	00000000 	andeq	r0, r0, r0
    80c4:	10002420 	andne	r2, r0, r0, lsr #8
    80c8:	10002424 	andne	r2, r0, r4, lsr #8
    80cc:	9f300002 	svcls	0x00300002
    80d0:	10002428 	andne	r2, r0, r8, lsr #8
    80d4:	1000243c 	andne	r2, r0, ip, lsr r4
    80d8:	46530001 	ldrbmi	r0, [r3], -r1
    80dc:	60100024 	andsvs	r0, r0, r4, lsr #32
    80e0:	01100024 	tsteq	r0, r4, lsr #32
    80e4:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    80f4:	00020000 	andeq	r0, r2, r0
    80f8:	0000007d 	andeq	r0, r0, sp, ror r0
    80fc:	00000000 	andeq	r0, r0, r0
    8100:	00020000 	andeq	r0, r2, r0
    8104:	0000087d 	andeq	r0, r0, sp, ror r8
    8108:	00000000 	andeq	r0, r0, r0
    810c:	00010000 	andeq	r0, r1, r0
	...
    8118:	00020000 	andeq	r0, r2, r0
    811c:	00009f30 	andeq	r9, r0, r0, lsr pc
    8120:	00000000 	andeq	r0, r0, r0
    8124:	00010000 	andeq	r0, r1, r0
    8128:	00000054 	andeq	r0, r0, r4, asr r0
    812c:	00000000 	andeq	r0, r0, r0
    8130:	002f5400 	eoreq	r5, pc, r0, lsl #8
    8134:	002f5610 	eoreq	r5, pc, r0, lsl r6	; <UNPREDICTABLE>
    8138:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    813c:	002f5600 	eoreq	r5, pc, r0, lsl #12
    8140:	002f9c10 	eoreq	r9, pc, r0, lsl ip	; <UNPREDICTABLE>
    8144:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    8148:	00000008 	andeq	r0, r0, r8
	...
    8154:	5a000000 	bpl	815c <__HEAP_SIZE+0x715c>
    8158:	6210002f 	andsvs	r0, r0, #47	; 0x2f
    815c:	0110002f 	tsteq	r0, pc, lsr #32
    8160:	2f685000 	svccs	0x00685000
    8164:	2f6b1000 	svccs	0x006b1000
    8168:	00011000 	andeq	r1, r1, r0
    816c:	002f6c50 	eoreq	r6, pc, r0, asr ip	; <UNPREDICTABLE>
    8170:	002f7110 	eoreq	r7, pc, r0, lsl r1	; <UNPREDICTABLE>
    8174:	50000110 	andpl	r0, r0, r0, lsl r1
	...
    8180:	10002ee8 	andne	r2, r0, r8, ror #29
    8184:	10002eea 	andne	r2, r0, sl, ror #29
    8188:	007d0002 	rsbseq	r0, sp, r2
    818c:	10002eea 	andne	r2, r0, sl, ror #29
    8190:	10002eec 	andne	r2, r0, ip, ror #29
    8194:	0c7d0002 	ldcleq	0, cr0, [sp], #-8
    8198:	10002eec 	andne	r2, r0, ip, ror #29
    819c:	10002f10 	andne	r2, r0, r0, lsl pc
    81a0:	307d0002 	rsbscc	r0, sp, r2
    81a4:	10002f10 	andne	r2, r0, r0, lsl pc
    81a8:	10002f12 	andne	r2, r0, r2, lsl pc
    81ac:	0c7d0002 	ldcleq	0, cr0, [sp], #-8
    81b0:	10002f12 	andne	r2, r0, r2, lsl pc
    81b4:	10002f54 	andne	r2, r0, r4, asr pc
    81b8:	307d0002 	rsbscc	r0, sp, r2
	...
    81c4:	01000101 	tsteq	r0, r1, lsl #2
    81c8:	2eec0001 	cdpcs	0, 14, cr0, cr12, cr1, {0}
    81cc:	2f0e1000 	svccs	0x000e1000
    81d0:	00021000 	andeq	r1, r2, r0
    81d4:	2f129f31 	svccs	0x00129f31
    81d8:	2f441000 	svccs	0x00441000
    81dc:	00021000 	andeq	r1, r2, r0
    81e0:	2f449f31 	svccs	0x00449f31
    81e4:	2f541000 	svccs	0x00541000
    81e8:	00021000 	andeq	r1, r2, r0
    81ec:	00009f30 	andeq	r9, r0, r0, lsr pc
	...
    81f8:	10002f08 	andne	r2, r0, r8, lsl #30
    81fc:	10002f54 	andne	r2, r0, r4, asr pc
    8200:	00540001 	subseq	r0, r4, r1
    8204:	00000000 	andeq	r0, r0, r0
    8208:	04000000 	streq	r0, [r0], #-0
    820c:	002eec00 	eoreq	lr, lr, r0, lsl #24
    8210:	002f0810 	eoreq	r0, pc, r0, lsl r8	; <UNPREDICTABLE>
    8214:	30000210 	andcc	r0, r0, r0, lsl r2
    8218:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    821c:	00000000 	andeq	r0, r0, r0
    8220:	00000600 	andeq	r0, r0, r0, lsl #12
    8224:	002eec00 	eoreq	lr, lr, r0, lsl #24
    8228:	002eee10 	eoreq	lr, lr, r0, lsl lr
    822c:	30000210 	andcc	r0, r0, r0, lsl r2
    8230:	002eee9f 	mlaeq	lr, pc, lr, lr	; <UNPREDICTABLE>
    8234:	002f0810 	eoreq	r0, pc, r0, lsl r8	; <UNPREDICTABLE>
    8238:	53000110 	movwpl	r0, #272	; 0x110
	...
    824c:	007d0002 	rsbseq	r0, sp, r2
	...
    8258:	187d0002 	ldmdane	sp!, {r1}^
	...
    8270:	00500001 	subseq	r0, r0, r1
    8274:	00000000 	andeq	r0, r0, r0
    8278:	01000000 	mrseq	r0, (UNDEF: 0)
    827c:	00005400 	andeq	r5, r0, r0, lsl #8
    8280:	00000000 	andeq	r0, r0, r0
    8284:	01010000 	mrseq	r0, (UNDEF: 1)
    8288:	00000001 	andeq	r0, r0, r1
	...
    8294:	00020000 	andeq	r0, r2, r0
    8298:	00009f30 	andeq	r9, r0, r0, lsr pc
    829c:	00000000 	andeq	r0, r0, r0
    82a0:	00020000 	andeq	r0, r2, r0
    82a4:	00009f31 	andeq	r9, r0, r1, lsr pc
    82a8:	00000000 	andeq	r0, r0, r0
    82ac:	00010000 	andeq	r0, r1, r0
    82b0:	00000056 	andeq	r0, r0, r6, asr r0
    82b4:	00000000 	andeq	r0, r0, r0
    82b8:	30000200 	andcc	r0, r0, r0, lsl #4
    82bc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    82c0:	00000000 	andeq	r0, r0, r0
    82c4:	00000200 	andeq	r0, r0, r0, lsl #4
	...
    82d0:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    82dc:	00540001 	subseq	r0, r4, r1
	...
    82f0:	01000000 	mrseq	r0, (UNDEF: 0)
    82f4:	00005000 	andeq	r5, r0, r0
    82f8:	00000000 	andeq	r0, r0, r0
    82fc:	00010000 	andeq	r0, r1, r0
    8300:	00000055 	andeq	r0, r0, r5, asr r0
	...
    8310:	01000000 	mrseq	r0, (UNDEF: 0)
    8314:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    8324:	00020000 	andeq	r0, r2, r0
    8328:	0000007d 	andeq	r0, r0, sp, ror r0
    832c:	00000000 	andeq	r0, r0, r0
    8330:	00020000 	andeq	r0, r2, r0
    8334:	0000107d 	andeq	r1, r0, sp, ror r0
	...
    8340:	00020200 	andeq	r0, r2, r0, lsl #4
	...
    834c:	00010000 	andeq	r0, r1, r0
    8350:	00000050 	andeq	r0, r0, r0, asr r0
    8354:	00000000 	andeq	r0, r0, r0
    8358:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    8364:	01f30004 	mvnseq	r0, r4
    8368:	00009f50 	andeq	r9, r0, r0, asr pc
    836c:	00000000 	andeq	r0, r0, r0
    8370:	00010000 	andeq	r0, r1, r0
    8374:	00000054 	andeq	r0, r0, r4, asr r0
    8378:	00000000 	andeq	r0, r0, r0
    837c:	00000100 	andeq	r0, r0, r0, lsl #2
    8380:	00000202 	andeq	r0, r0, r2, lsl #4
	...
    838c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    8398:	00540001 	subseq	r0, r4, r1
    839c:	00000000 	andeq	r0, r0, r0
    83a0:	04000000 	streq	r0, [r0], #-0
    83a4:	5001f300 	andpl	pc, r1, r0, lsl #6
    83a8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    83ac:	00000000 	andeq	r0, r0, r0
    83b0:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    83c4:	00010000 	andeq	r0, r1, r0
    83c8:	00000053 	andeq	r0, r0, r3, asr r0
	...
    83ec:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    83f8:	01f30004 	mvnseq	r0, r4
    83fc:	00009f50 	andeq	r9, r0, r0, asr pc
    8400:	00000000 	andeq	r0, r0, r0
    8404:	00010000 	andeq	r0, r1, r0
    8408:	00000050 	andeq	r0, r0, r0, asr r0
    840c:	00000000 	andeq	r0, r0, r0
    8410:	f3000400 	vshl.u8	d0, d0, d0
    8414:	009f5001 	addseq	r5, pc, r1
    8418:	00000000 	andeq	r0, r0, r0
    841c:	01000000 	mrseq	r0, (UNDEF: 0)
    8420:	00005000 	andeq	r5, r0, r0
    8424:	00000000 	andeq	r0, r0, r0
    8428:	00040000 	andeq	r0, r4, r0
    842c:	9f5001f3 	svcls	0x005001f3
	...
    8438:	00500001 	subseq	r0, r0, r1
    843c:	00000000 	andeq	r0, r0, r0
    8440:	04000000 	streq	r0, [r0], #-0
    8444:	5001f300 	andpl	pc, r1, r0, lsl #6
    8448:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    844c:	00000000 	andeq	r0, r0, r0
    8450:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    845c:	01f30004 	mvnseq	r0, r4
    8460:	00009f50 	andeq	r9, r0, r0, asr pc
    8464:	00000000 	andeq	r0, r0, r0
    8468:	00020000 	andeq	r0, r2, r0
	...
    8478:	9f300002 	svcls	0x00300002
	...
    8484:	9f300002 	svcls	0x00300002
	...
    8490:	9f300002 	svcls	0x00300002
	...
    849c:	00000003 	andeq	r0, r0, r3
	...
    84b8:	00500001 	subseq	r0, r0, r1
    84bc:	00000000 	andeq	r0, r0, r0
    84c0:	04000000 	streq	r0, [r0], #-0
    84c4:	5001f300 	andpl	pc, r1, r0, lsl #6
    84c8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    84cc:	00000000 	andeq	r0, r0, r0
    84d0:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    84dc:	01f30004 	mvnseq	r0, r4
    84e0:	00009f50 	andeq	r9, r0, r0, asr pc
    84e4:	00000000 	andeq	r0, r0, r0
    84e8:	00010000 	andeq	r0, r1, r0
    84ec:	00000050 	andeq	r0, r0, r0, asr r0
    84f0:	00000000 	andeq	r0, r0, r0
    84f4:	f3000400 	vshl.u8	d0, d0, d0
    84f8:	009f5001 	addseq	r5, pc, r1
    84fc:	00000000 	andeq	r0, r0, r0
    8500:	01000000 	mrseq	r0, (UNDEF: 0)
    8504:	00005000 	andeq	r5, r0, r0
    8508:	00000000 	andeq	r0, r0, r0
    850c:	00040000 	andeq	r0, r4, r0
    8510:	9f5001f3 	svcls	0x005001f3
	...
    851c:	00500001 	subseq	r0, r0, r1
    8520:	00000000 	andeq	r0, r0, r0
    8524:	04000000 	streq	r0, [r0], #-0
    8528:	5001f300 	andpl	pc, r1, r0, lsl #6
    852c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    8540:	53000100 	movwpl	r0, #256	; 0x100
	...
    854c:	00530001 	subseq	r0, r3, r1
	...
    855c:	02000000 	andeq	r0, r0, #0
    8560:	00007d00 	andeq	r7, r0, r0, lsl #26
    8564:	00000000 	andeq	r0, r0, r0
    8568:	02000000 	andeq	r0, r0, #0
    856c:	00107d00 	andseq	r7, r0, r0, lsl #26
	...
    8584:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    8590:	00540001 	subseq	r0, r4, r1
    8594:	00000000 	andeq	r0, r0, r0
    8598:	01000000 	mrseq	r0, (UNDEF: 0)
    859c:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    85b0:	00010000 	andeq	r0, r1, r0
    85b4:	00000054 	andeq	r0, r0, r4, asr r0
    85b8:	00000000 	andeq	r0, r0, r0
    85bc:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    85c8:	00000002 	andeq	r0, r0, r2
	...
    85d4:	00020000 	andeq	r0, r2, r0
    85d8:	00009f30 	andeq	r9, r0, r0, lsr pc
    85dc:	00000000 	andeq	r0, r0, r0
    85e0:	00010000 	andeq	r0, r1, r0
    85e4:	00000053 	andeq	r0, r0, r3, asr r0
    85e8:	00000000 	andeq	r0, r0, r0
    85ec:	53000100 	movwpl	r0, #256	; 0x100
	...
    8604:	00010000 	andeq	r0, r1, r0
    8608:	00000053 	andeq	r0, r0, r3, asr r0
    860c:	00000000 	andeq	r0, r0, r0
    8610:	03000500 	movweq	r0, #1280	; 0x500
    8614:	38008b18 	stmdacc	r0, {r3, r4, r8, r9, fp, pc}
	...
    8620:	00530001 	subseq	r0, r3, r1
	...
    8630:	02000000 	andeq	r0, r0, #0
    8634:	00007d00 	andeq	r7, r0, r0, lsl #26
    8638:	00000000 	andeq	r0, r0, r0
    863c:	02000000 	andeq	r0, r0, #0
    8640:	00107d00 	andseq	r7, r0, r0, lsl #26
	...
    8658:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    8664:	00540001 	subseq	r0, r4, r1
    8668:	00000000 	andeq	r0, r0, r0
    866c:	01000000 	mrseq	r0, (UNDEF: 0)
    8670:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    868c:	00510001 	subseq	r0, r1, r1
    8690:	00000000 	andeq	r0, r0, r0
    8694:	01000000 	mrseq	r0, (UNDEF: 0)
    8698:	00005500 	andeq	r5, r0, r0, lsl #10
    869c:	00000000 	andeq	r0, r0, r0
    86a0:	00020000 	andeq	r0, r2, r0
    86a4:	00003874 	andeq	r3, r0, r4, ror r8
    86a8:	00000000 	andeq	r0, r0, r0
    86ac:	00010000 	andeq	r0, r1, r0
    86b0:	00000055 	andeq	r0, r0, r5, asr r0
    86b4:	00000000 	andeq	r0, r0, r0
    86b8:	74000200 	strvc	r0, [r0], #-512	; 0xfffffe00
    86bc:	00000038 	andeq	r0, r0, r8, lsr r0
	...
    86d0:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    86dc:	00540001 	subseq	r0, r4, r1
	...
    86f4:	52000100 	andpl	r0, r0, #0, 2
	...
    8700:	00520001 	subseq	r0, r2, r1
    8704:	00000000 	andeq	r0, r0, r0
    8708:	01000000 	mrseq	r0, (UNDEF: 0)
    870c:	00005200 	andeq	r5, r0, r0, lsl #4
	...
    8720:	00530001 	subseq	r0, r3, r1
    8724:	00000000 	andeq	r0, r0, r0
    8728:	03000000 	movweq	r0, #0
	...
    8738:	02000000 	andeq	r0, r0, #0
    873c:	009f3000 	addseq	r3, pc, r0
    8740:	00000000 	andeq	r0, r0, r0
    8744:	01000000 	mrseq	r0, (UNDEF: 0)
    8748:	00005600 	andeq	r5, r0, r0, lsl #12
    874c:	00000000 	andeq	r0, r0, r0
    8750:	00020000 	andeq	r0, r2, r0
    8754:	00009f30 	andeq	r9, r0, r0, lsr pc
    8758:	00000000 	andeq	r0, r0, r0
    875c:	00010000 	andeq	r0, r1, r0
    8760:	00000056 	andeq	r0, r0, r6, asr r0
	...
    8770:	01000000 	mrseq	r0, (UNDEF: 0)
    8774:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    8784:	00020000 	andeq	r0, r2, r0
    8788:	0000007d 	andeq	r0, r0, sp, ror r0
    878c:	00000000 	andeq	r0, r0, r0
    8790:	00020000 	andeq	r0, r2, r0
    8794:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    87ac:	00500001 	subseq	r0, r0, r1
    87b0:	00000000 	andeq	r0, r0, r0
    87b4:	01000000 	mrseq	r0, (UNDEF: 0)
    87b8:	00005400 	andeq	r5, r0, r0, lsl #8
    87bc:	00000000 	andeq	r0, r0, r0
    87c0:	00010000 	andeq	r0, r1, r0
    87c4:	00000054 	andeq	r0, r0, r4, asr r0
	...
    87d4:	01000000 	mrseq	r0, (UNDEF: 0)
    87d8:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    87ec:	00540001 	subseq	r0, r4, r1
	...
    8800:	01000000 	mrseq	r0, (UNDEF: 0)
    8804:	00005000 	andeq	r5, r0, r0
    8808:	00000000 	andeq	r0, r0, r0
    880c:	00010000 	andeq	r0, r1, r0
    8810:	00000050 	andeq	r0, r0, r0, asr r0
	...
    8820:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    882c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    8830:	00000008 	andeq	r0, r0, r8
	...
    8844:	01000000 	mrseq	r0, (UNDEF: 0)
    8848:	00005000 	andeq	r5, r0, r0
    884c:	00000000 	andeq	r0, r0, r0
    8850:	00010000 	andeq	r0, r1, r0
    8854:	00000054 	andeq	r0, r0, r4, asr r0
    8858:	00000000 	andeq	r0, r0, r0
    885c:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    8870:	00010000 	andeq	r0, r1, r0
    8874:	00000054 	andeq	r0, r0, r4, asr r0
	...
    8884:	01000000 	mrseq	r0, (UNDEF: 0)
    8888:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    8898:	00020000 	andeq	r0, r2, r0
    889c:	0000007d 	andeq	r0, r0, sp, ror r0
    88a0:	00000000 	andeq	r0, r0, r0
    88a4:	00020000 	andeq	r0, r2, r0
    88a8:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    88c0:	00500001 	subseq	r0, r0, r1
    88c4:	00000000 	andeq	r0, r0, r0
    88c8:	01000000 	mrseq	r0, (UNDEF: 0)
    88cc:	00005400 	andeq	r5, r0, r0, lsl #8
    88d0:	00000000 	andeq	r0, r0, r0
    88d4:	00010000 	andeq	r0, r1, r0
    88d8:	00000054 	andeq	r0, r0, r4, asr r0
	...
    88e8:	01000000 	mrseq	r0, (UNDEF: 0)
    88ec:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    8900:	00540001 	subseq	r0, r4, r1
	...
    8914:	01000000 	mrseq	r0, (UNDEF: 0)
    8918:	00005000 	andeq	r5, r0, r0
    891c:	00000000 	andeq	r0, r0, r0
    8920:	00010000 	andeq	r0, r1, r0
    8924:	00000050 	andeq	r0, r0, r0, asr r0
	...
    8934:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    8940:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    8944:	00000008 	andeq	r0, r0, r8
	...
    8958:	01000000 	mrseq	r0, (UNDEF: 0)
    895c:	00005000 	andeq	r5, r0, r0
    8960:	00000000 	andeq	r0, r0, r0
    8964:	00010000 	andeq	r0, r1, r0
    8968:	00000054 	andeq	r0, r0, r4, asr r0
    896c:	00000000 	andeq	r0, r0, r0
    8970:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    8984:	00010000 	andeq	r0, r1, r0
    8988:	00000054 	andeq	r0, r0, r4, asr r0
	...
    8998:	01000000 	mrseq	r0, (UNDEF: 0)
    899c:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    89ac:	00020000 	andeq	r0, r2, r0
    89b0:	0000007d 	andeq	r0, r0, sp, ror r0
    89b4:	00000000 	andeq	r0, r0, r0
    89b8:	00020000 	andeq	r0, r2, r0
    89bc:	0000187d 	andeq	r1, r0, sp, ror r8
    89c0:	00000000 	andeq	r0, r0, r0
    89c4:	00020000 	andeq	r0, r2, r0
    89c8:	0000007d 	andeq	r0, r0, sp, ror r0
    89cc:	00000000 	andeq	r0, r0, r0
    89d0:	00020000 	andeq	r0, r2, r0
    89d4:	0000187d 	andeq	r1, r0, sp, ror r8
	...
    89f0:	00500001 	subseq	r0, r0, r1
    89f4:	00000000 	andeq	r0, r0, r0
    89f8:	01000000 	mrseq	r0, (UNDEF: 0)
    89fc:	00005400 	andeq	r5, r0, r0, lsl #8
    8a00:	00000000 	andeq	r0, r0, r0
    8a04:	00010000 	andeq	r0, r1, r0
    8a08:	00000050 	andeq	r0, r0, r0, asr r0
    8a0c:	00000000 	andeq	r0, r0, r0
    8a10:	f3000400 	vshl.u8	d0, d0, d0
    8a14:	009f5001 	addseq	r5, pc, r1
    8a18:	00000000 	andeq	r0, r0, r0
    8a1c:	01000000 	mrseq	r0, (UNDEF: 0)
    8a20:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    8a34:	00010000 	andeq	r0, r1, r0
    8a38:	00000050 	andeq	r0, r0, r0, asr r0
    8a3c:	00000000 	andeq	r0, r0, r0
    8a40:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    8a58:	00550001 	subseq	r0, r5, r1
    8a5c:	00000000 	andeq	r0, r0, r0
    8a60:	01000000 	mrseq	r0, (UNDEF: 0)
    8a64:	00005500 	andeq	r5, r0, r0, lsl #10
	...
    8a78:	00010000 	andeq	r0, r1, r0
    8a7c:	00000056 	andeq	r0, r0, r6, asr r0
    8a80:	00000000 	andeq	r0, r0, r0
    8a84:	56000100 	strpl	r0, [r0], -r0, lsl #2
	...
    8a9c:	00570001 	subseq	r0, r7, r1
    8aa0:	00000000 	andeq	r0, r0, r0
    8aa4:	01000000 	mrseq	r0, (UNDEF: 0)
    8aa8:	00005700 	andeq	r5, r0, r0, lsl #14
	...
    8abc:	00010000 	andeq	r0, r1, r0
    8ac0:	00000058 	andeq	r0, r0, r8, asr r0
    8ac4:	00000000 	andeq	r0, r0, r0
    8ac8:	58000100 	stmdapl	r0, {r8}
	...
    8ad4:	00000007 	andeq	r0, r0, r7
	...
    8ae4:	00010000 	andeq	r0, r1, r0
    8ae8:	00000050 	andeq	r0, r0, r0, asr r0
    8aec:	00000000 	andeq	r0, r0, r0
    8af0:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    8afc:	00500001 	subseq	r0, r0, r1
    8b00:	00000000 	andeq	r0, r0, r0
    8b04:	04000000 	streq	r0, [r0], #-0
    8b08:	5001f300 	andpl	pc, r1, r0, lsl #6
    8b0c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    8b10:	00000000 	andeq	r0, r0, r0
    8b14:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    8b2c:	00010000 	andeq	r0, r1, r0
    8b30:	00000053 	andeq	r0, r0, r3, asr r0
    8b34:	00000000 	andeq	r0, r0, r0
    8b38:	53000100 	movwpl	r0, #256	; 0x100
	...
    8b44:	00530001 	subseq	r0, r3, r1
    8b48:	00000000 	andeq	r0, r0, r0
    8b4c:	50000000 	andpl	r0, r0, r0
    8b50:	5210002b 	andspl	r0, r0, #43	; 0x2b
    8b54:	0210002b 	andseq	r0, r0, #43	; 0x2b
    8b58:	52007d00 	andpl	r7, r0, #0, 26
    8b5c:	6e10002b 	cdpvs	0, 1, cr0, cr0, cr11, {1}
    8b60:	0210002b 	andseq	r0, r0, #43	; 0x2b
    8b64:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    8b74:	002b5000 	eoreq	r5, fp, r0
    8b78:	002b5910 	eoreq	r5, fp, r0, lsl r9
    8b7c:	50000110 	andpl	r0, r0, r0, lsl r1
    8b80:	10002b59 	andne	r2, r0, r9, asr fp
    8b84:	10002b68 	andne	r2, r0, r8, ror #22
    8b88:	68540001 	ldmdavs	r4, {r0}^
    8b8c:	6e10002b 	cdpvs	0, 1, cr0, cr0, cr11, {1}
    8b90:	0410002b 	ldreq	r0, [r0], #-43	; 0xffffffd5
    8b94:	5001f300 	andpl	pc, r1, r0, lsl #6
    8b98:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    8b9c:	00000000 	andeq	r0, r0, r0
    8ba0:	00000100 	andeq	r0, r0, r0, lsl #2
    8ba4:	002b5200 	eoreq	r5, fp, r0, lsl #4
    8ba8:	002b6610 	eoreq	r6, fp, r0, lsl r6
    8bac:	30000210 	andcc	r0, r0, r0, lsl r2
    8bb0:	002b669f 	mlaeq	fp, pc, r6, r6	; <UNPREDICTABLE>
    8bb4:	002b6810 	eoreq	r6, fp, r0, lsl r8
    8bb8:	50000110 	andpl	r0, r0, r0, lsl r1
	...
    8bcc:	007d0002 	rsbseq	r0, sp, r2
	...
    8bd8:	107d0002 	rsbsne	r0, sp, r2
	...
    8bf0:	00500001 	subseq	r0, r0, r1
    8bf4:	00000000 	andeq	r0, r0, r0
    8bf8:	01000000 	mrseq	r0, (UNDEF: 0)
    8bfc:	00005500 	andeq	r5, r0, r0, lsl #10
	...
    8c14:	00510001 	subseq	r0, r1, r1
    8c18:	00000000 	andeq	r0, r0, r0
    8c1c:	01000000 	mrseq	r0, (UNDEF: 0)
    8c20:	00005400 	andeq	r5, r0, r0, lsl #8
    8c24:	00000000 	andeq	r0, r0, r0
    8c28:	00040000 	andeq	r0, r4, r0
    8c2c:	9f5101f3 	svcls	0x005101f3
	...
    8c4c:	00010000 	andeq	r0, r1, r0
    8c50:	00000054 	andeq	r0, r0, r4, asr r0
    8c54:	00000000 	andeq	r0, r0, r0
    8c58:	75000200 	strvc	r0, [r0, #-512]	; 0xfffffe00
	...
    8c64:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    8c70:	00750002 	rsbseq	r0, r5, r2
	...
    8c7c:	00540001 	subseq	r0, r4, r1
    8c80:	00000000 	andeq	r0, r0, r0
    8c84:	01000000 	mrseq	r0, (UNDEF: 0)
    8c88:	00005400 	andeq	r5, r0, r0, lsl #8
    8c8c:	00000000 	andeq	r0, r0, r0
    8c90:	00020000 	andeq	r0, r2, r0
    8c94:	00000075 	andeq	r0, r0, r5, ror r0
	...
    8ca8:	00010000 	andeq	r0, r1, r0
    8cac:	00000050 	andeq	r0, r0, r0, asr r0
    8cb0:	00000000 	andeq	r0, r0, r0
    8cb4:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    8cc0:	00010102 	andeq	r0, r1, r2, lsl #2
    8cc4:	00010100 	andeq	r0, r1, r0, lsl #2
	...
    8cd0:	00020000 	andeq	r0, r2, r0
    8cd4:	00009f30 	andeq	r9, r0, r0, lsr pc
    8cd8:	00000000 	andeq	r0, r0, r0
    8cdc:	00020000 	andeq	r0, r2, r0
    8ce0:	00009f31 	andeq	r9, r0, r1, lsr pc
    8ce4:	00000000 	andeq	r0, r0, r0
    8ce8:	00020000 	andeq	r0, r2, r0
    8cec:	00009f30 	andeq	r9, r0, r0, lsr pc
    8cf0:	00000000 	andeq	r0, r0, r0
    8cf4:	00020000 	andeq	r0, r2, r0
    8cf8:	00009f31 	andeq	r9, r0, r1, lsr pc
    8cfc:	00000000 	andeq	r0, r0, r0
    8d00:	00020000 	andeq	r0, r2, r0
    8d04:	00009f30 	andeq	r9, r0, r0, lsr pc
	...
    8d18:	00010000 	andeq	r0, r1, r0
    8d1c:	00000050 	andeq	r0, r0, r0, asr r0
    8d20:	00000000 	andeq	r0, r0, r0
    8d24:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    8d38:	007d0002 	rsbseq	r0, sp, r2
	...
    8d44:	107d0002 	rsbsne	r0, sp, r2
	...
    8d5c:	00010000 	andeq	r0, r1, r0
    8d60:	00000050 	andeq	r0, r0, r0, asr r0
    8d64:	00000000 	andeq	r0, r0, r0
    8d68:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    8d74:	00540001 	subseq	r0, r4, r1
	...
    8d88:	01000000 	mrseq	r0, (UNDEF: 0)
    8d8c:	00005400 	andeq	r5, r0, r0, lsl #8
    8d90:	00000000 	andeq	r0, r0, r0
    8d94:	00010000 	andeq	r0, r1, r0
    8d98:	00000054 	andeq	r0, r0, r4, asr r0
    8d9c:	00000000 	andeq	r0, r0, r0
    8da0:	00000200 	andeq	r0, r0, r0, lsl #4
    8da4:	00000202 	andeq	r0, r0, r2, lsl #4
    8da8:	00000000 	andeq	r0, r0, r0
    8dac:	02000000 	andeq	r0, r0, #0
    8db0:	009f3000 	addseq	r3, pc, r0
    8db4:	00000000 	andeq	r0, r0, r0
    8db8:	02000000 	andeq	r0, r0, #0
    8dbc:	009f3000 	addseq	r3, pc, r0
    8dc0:	00000000 	andeq	r0, r0, r0
    8dc4:	02000000 	andeq	r0, r0, #0
    8dc8:	009f3100 	addseq	r3, pc, r0, lsl #2
	...
    8ddc:	01000000 	mrseq	r0, (UNDEF: 0)
    8de0:	00005200 	andeq	r5, r0, r0, lsl #4
    8de4:	00000000 	andeq	r0, r0, r0
    8de8:	00010000 	andeq	r0, r1, r0
    8dec:	00000052 	andeq	r0, r0, r2, asr r0
    8df0:	00000000 	andeq	r0, r0, r0
    8df4:	0025d800 	eoreq	sp, r5, r0, lsl #16
    8df8:	0025da10 	eoreq	sp, r5, r0, lsl sl
    8dfc:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    8e00:	0025da00 	eoreq	sp, r5, r0, lsl #20
    8e04:	00269410 	eoreq	r9, r6, r0, lsl r4
    8e08:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    8e0c:	00000008 	andeq	r0, r0, r8
	...
    8e18:	0025d800 	eoreq	sp, r5, r0, lsl #16
    8e1c:	0025df10 	eoreq	sp, r5, r0, lsl pc
    8e20:	50000110 	andpl	r0, r0, r0, lsl r1
    8e24:	100025df 	ldrdne	r2, [r0], -pc	; <UNPREDICTABLE>
    8e28:	10002694 	mulne	r0, r4, r6
    8e2c:	00540001 	subseq	r0, r4, r1
	...
    8e38:	00263200 	eoreq	r3, r6, r0, lsl #4
    8e3c:	00264010 	eoreq	r4, r6, r0, lsl r0
    8e40:	53000110 	movwpl	r0, #272	; 0x110
	...
    8e4c:	10002488 	andne	r2, r0, r8, lsl #9
    8e50:	1000248c 	andne	r2, r0, ip, lsl #9
    8e54:	007d0002 	rsbseq	r0, sp, r2
    8e58:	1000248c 	andne	r2, r0, ip, lsl #9
    8e5c:	1000251e 	andne	r2, r0, lr, lsl r5
    8e60:	207d0002 	rsbscs	r0, sp, r2
	...
    8e70:	10002488 	andne	r2, r0, r8, lsl #9
    8e74:	100024a2 	andne	r2, r0, r2, lsr #9
    8e78:	a2500001 	subsge	r0, r0, #1
    8e7c:	1e100024 	cdpne	0, 1, cr0, cr0, cr4, {1}
    8e80:	01100025 	tsteq	r0, r5, lsr #32
    8e84:	00005800 	andeq	r5, r0, r0, lsl #16
	...
    8e90:	24880000 	strcs	r0, [r8], #0
    8e94:	24a01000 	strtcs	r1, [r0], #0
    8e98:	00011000 	andeq	r1, r1, r0
    8e9c:	0024a051 	eoreq	sl, r4, r1, asr r0
    8ea0:	00251e10 	eoreq	r1, r5, r0, lsl lr
    8ea4:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
	...
    8eb8:	10002488 	andne	r2, r0, r8, lsl #9
    8ebc:	1000249e 	mulne	r0, lr, r4
    8ec0:	9e520001 	cdpls	0, 5, cr0, cr2, cr1, {0}
    8ec4:	b2100024 	andslt	r0, r0, #36	; 0x24
    8ec8:	01100024 	tsteq	r0, r4, lsr #32
    8ecc:	24b25700 	ldrtcs	r5, [r2], #1792	; 0x700
    8ed0:	24bc1000 	ldrtcs	r1, [ip], #0
    8ed4:	00071000 	andeq	r1, r7, r0
    8ed8:	80808172 	addhi	r8, r0, r2, ror r1
    8edc:	bc9f7c80 	ldclt	12, cr7, [pc], {128}	; 0x80
    8ee0:	1e100024 	cdpne	0, 1, cr0, cr0, cr4, {1}
    8ee4:	04100025 	ldreq	r0, [r0], #-37	; 0xffffffdb
    8ee8:	5201f300 	andpl	pc, r1, #0, 6
    8eec:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    8ef8:	00248800 	eoreq	r8, r4, r0, lsl #16
    8efc:	0024a510 	eoreq	sl, r4, r0, lsl r5
    8f00:	53000110 	movwpl	r0, #272	; 0x110
    8f04:	100024a5 	andne	r2, r0, r5, lsr #9
    8f08:	1000251e 	andne	r2, r0, lr, lsl r5
    8f0c:	00590001 	subseq	r0, r9, r1
	...
    8f18:	88000000 	stmdahi	r0, {}	; <UNPREDICTABLE>
    8f1c:	e6100024 	ldr	r0, [r0], -r4, lsr #32
    8f20:	02100024 	andseq	r0, r0, #36	; 0x24
    8f24:	e6009100 	str	r9, [r0], -r0, lsl #2
    8f28:	fe100024 	cdp2	0, 1, cr0, cr0, cr4, {1}
    8f2c:	01100024 	tsteq	r0, r4, lsr #32
    8f30:	00005600 	andeq	r5, r0, r0, lsl #12
	...
    8f3c:	100024b2 			; <UNDEFINED> instruction: 0x100024b2
    8f40:	1000251e 	andne	r2, r0, lr, lsl r5
    8f44:	00570001 	subseq	r0, r7, r1
	...
    8f50:	0024bc00 	eoreq	fp, r4, r0, lsl #24
    8f54:	0024e010 	eoreq	lr, r4, r0, lsl r0
    8f58:	5c000110 	stfpls	f0, [r0], {16}
	...
    8f64:	10002838 	andne	r2, r0, r8, lsr r8
    8f68:	1000283a 	andne	r2, r0, sl, lsr r8
    8f6c:	007d0002 	rsbseq	r0, sp, r2
    8f70:	1000283a 	andne	r2, r0, sl, lsr r8
    8f74:	1000283c 	andne	r2, r0, ip, lsr r8
    8f78:	087d0002 	ldmdaeq	sp!, {r1}^
    8f7c:	1000283c 	andne	r2, r0, ip, lsr r8
    8f80:	10002852 	andne	r2, r0, r2, asr r8
    8f84:	107d0002 	rsbsne	r0, sp, r2
    8f88:	10002852 	andne	r2, r0, r2, asr r8
    8f8c:	10002854 	andne	r2, r0, r4, asr r8
    8f90:	087d0002 	ldmdaeq	sp!, {r1}^
    8f94:	10002854 	andne	r2, r0, r4, asr r8
    8f98:	1000285a 	andne	r2, r0, sl, asr r8
    8f9c:	107d0002 	rsbsne	r0, sp, r2
	...
    8fac:	10002838 	andne	r2, r0, r8, lsr r8
    8fb0:	10002847 	andne	r2, r0, r7, asr #16
    8fb4:	47500001 	ldrbmi	r0, [r0, -r1]
    8fb8:	5a100028 	bpl	409060 <__RAM_SIZE+0x309060>
    8fbc:	04100028 	ldreq	r0, [r0], #-40	; 0xffffffd8
    8fc0:	5001f300 	andpl	pc, r1, r0, lsl #6
    8fc4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    8fd0:	00283800 	eoreq	r3, r8, r0, lsl #16
    8fd4:	00284710 	eoreq	r4, r8, r0, lsl r7
    8fd8:	51000110 	tstpl	r0, r0, lsl r1
    8fdc:	10002847 	andne	r2, r0, r7, asr #16
    8fe0:	1000285a 	andne	r2, r0, sl, asr r8
    8fe4:	01f30004 	mvnseq	r0, r4
    8fe8:	00009f51 	andeq	r9, r0, r1, asr pc
	...
    8ff4:	28380000 	ldmdacs	r8!, {}	; <UNPREDICTABLE>
    8ff8:	28471000 	stmdacs	r7, {ip}^
    8ffc:	00011000 	andeq	r1, r1, r0
    9000:	00284752 	eoreq	r4, r8, r2, asr r7
    9004:	00285a10 	eoreq	r5, r8, r0, lsl sl
    9008:	f3000410 	vqshl.u8	d0, d0, d0
    900c:	009f5201 	addseq	r5, pc, r1, lsl #4
	...
    9018:	38000000 	stmdacc	r0, {}	; <UNPREDICTABLE>
    901c:	47100028 	ldrmi	r0, [r0, -r8, lsr #32]
    9020:	01100028 	tsteq	r0, r8, lsr #32
    9024:	28475300 	stmdacs	r7, {r8, r9, ip, lr}^
    9028:	285a1000 	ldmdacs	sl, {ip}^
    902c:	00041000 	andeq	r1, r4, r0
    9030:	9f5301f3 	svcls	0x005301f3
	...
    9040:	10002838 	andne	r2, r0, r8, lsr r8
    9044:	10002854 	andne	r2, r0, r4, asr r8
    9048:	00910002 	addseq	r0, r1, r2
    904c:	10002854 	andne	r2, r0, r4, asr r8
    9050:	1000285a 	andne	r2, r0, sl, asr r8
    9054:	00910002 	addseq	r0, r1, r2
	...
    9064:	10002838 	andne	r2, r0, r8, lsr r8
    9068:	10002854 	andne	r2, r0, r4, asr r8
    906c:	04910002 	ldreq	r0, [r1], #2
    9070:	10002854 	andne	r2, r0, r4, asr r8
    9074:	1000285a 	andne	r2, r0, sl, asr r8
    9078:	04910002 	ldreq	r0, [r1], #2
	...
    9088:	10002848 	andne	r2, r0, r8, asr #16
    908c:	1000284d 	andne	r2, r0, sp, asr #16
    9090:	54500001 	ldrbpl	r0, [r0], #-1
    9094:	58100028 	ldmdapl	r0, {r3, r5}
    9098:	01100028 	tsteq	r0, r8, lsr #32
    909c:	00005000 	andeq	r5, r0, r0
    90a0:	00000000 	andeq	r0, r0, r0
    90a4:	00010000 	andeq	r0, r1, r0
    90a8:	284e0000 	stmdacs	lr, {}^	; <UNPREDICTABLE>
    90ac:	28501000 	ldmdacs	r0, {ip}^
    90b0:	00021000 	andeq	r1, r2, r0
    90b4:	28589f31 	ldmdacs	r8, {r0, r4, r5, r8, r9, sl, fp, ip, pc}^
    90b8:	285a1000 	ldmdacs	sl, {ip}^
    90bc:	00031000 	andeq	r1, r3, r0
    90c0:	009fff09 	addseq	pc, pc, r9, lsl #30
    90c4:	00000000 	andeq	r0, r0, r0
    90c8:	94000000 	strls	r0, [r0], #-0
    90cc:	98100026 	ldmdals	r0, {r1, r2, r5}
    90d0:	02100026 	andseq	r0, r0, #38	; 0x26
    90d4:	98007d00 	stmdals	r0, {r8, sl, fp, ip, sp, lr}
    90d8:	9a100026 	bls	409178 <__RAM_SIZE+0x309178>
    90dc:	02100026 	andseq	r0, r0, #38	; 0x26
    90e0:	9a1c7d00 	bls	7284e8 <__RAM_SIZE+0x6284e8>
    90e4:	e6100026 	ldr	r0, [r0], -r6, lsr #32
    90e8:	02100026 	andseq	r0, r0, #38	; 0x26
    90ec:	e6307d00 	ldrt	r7, [r0], -r0, lsl #26
    90f0:	ea100026 	b	409190 <__RAM_SIZE+0x309190>
    90f4:	02100026 	andseq	r0, r0, #38	; 0x26
    90f8:	ea1c7d00 	b	728500 <__RAM_SIZE+0x628500>
    90fc:	f6100026 			; <UNDEFINED> instruction: 0xf6100026
    9100:	02100026 	andseq	r0, r0, #38	; 0x26
    9104:	00307d00 	eorseq	r7, r0, r0, lsl #26
	...
    9110:	94000000 	strls	r0, [r0], #-0
    9114:	a4100026 	ldrge	r0, [r0], #-38	; 0xffffffda
    9118:	01100026 	tsteq	r0, r6, lsr #32
    911c:	26a45000 	strtcs	r5, [r4], r0
    9120:	26f61000 	ldrbtcs	r1, [r6], r0
    9124:	00011000 	andeq	r1, r1, r0
    9128:	00000056 	andeq	r0, r0, r6, asr r0
	...
    9134:	00269400 	eoreq	r9, r6, r0, lsl #8
    9138:	0026a710 	eoreq	sl, r6, r0, lsl r7
    913c:	51000110 	tstpl	r0, r0, lsl r1
    9140:	100026a7 	andne	r2, r0, r7, lsr #13
    9144:	100026f6 	strdne	r2, [r0], -r6
    9148:	00570001 	subseq	r0, r7, r1
	...
    9154:	94000000 	strls	r0, [r0], #-0
    9158:	a7100026 	ldrge	r0, [r0, -r6, lsr #32]
    915c:	01100026 	tsteq	r0, r6, lsr #32
    9160:	26a75200 	strtcs	r5, [r7], r0, lsl #4
    9164:	26f61000 	ldrbtcs	r1, [r6], r0
    9168:	00011000 	andeq	r1, r1, r0
    916c:	00000055 	andeq	r0, r0, r5, asr r0
	...
    9178:	00269400 	eoreq	r9, r6, r0, lsl #8
    917c:	0026a710 	eoreq	sl, r6, r0, lsl r7
    9180:	53000110 	movwpl	r0, #272	; 0x110
    9184:	100026a7 	andne	r2, r0, r7, lsr #13
    9188:	100026f6 	strdne	r2, [r0], -r6
    918c:	00580001 	subseq	r0, r8, r1
	...
    9198:	94000000 	strls	r0, [r0], #-0
    919c:	ea100026 	b	40923c <__RAM_SIZE+0x30923c>
    91a0:	02100026 	andseq	r0, r0, #38	; 0x26
    91a4:	ea009100 	b	2d5ac <__HEAP_SIZE+0x2c5ac>
    91a8:	f6100026 			; <UNDEFINED> instruction: 0xf6100026
    91ac:	02100026 	andseq	r0, r0, #38	; 0x26
    91b0:	00009100 	andeq	r9, r0, r0, lsl #2
	...
    91bc:	94000000 	strls	r0, [r0], #-0
    91c0:	ea100026 	b	409260 <__RAM_SIZE+0x309260>
    91c4:	02100026 	andseq	r0, r0, #38	; 0x26
    91c8:	ea049100 	b	12d5d0 <__RAM_SIZE+0x2d5d0>
    91cc:	f6100026 			; <UNDEFINED> instruction: 0xf6100026
    91d0:	02100026 	andseq	r0, r0, #38	; 0x26
    91d4:	00049100 	andeq	r9, r4, r0, lsl #2
	...
    91e4:	b2000000 	andlt	r0, r0, #0
    91e8:	bd100026 	ldclt	0, cr0, [r0, #-152]	; 0xffffff68
    91ec:	01100026 	tsteq	r0, r6, lsr #32
    91f0:	26bd5000 	ldrtcs	r5, [sp], r0
    91f4:	26e21000 	strbtcs	r1, [r2], r0
    91f8:	00011000 	andeq	r1, r1, r0
    91fc:	0026ea54 	eoreq	lr, r6, r4, asr sl
    9200:	0026ec10 	eoreq	lr, r6, r0, lsl ip
    9204:	50000110 	andpl	r0, r0, r0, lsl r1
    9208:	100026ec 	andne	r2, r0, ip, ror #13
    920c:	100026f2 	strdne	r2, [r0], -r2	; <UNPREDICTABLE>
    9210:	00540001 	subseq	r0, r4, r1
	...
    9220:	0026a800 	eoreq	sl, r6, r0, lsl #16
    9224:	0026ae10 	eoreq	sl, r6, r0, lsl lr
    9228:	50000110 	andpl	r0, r0, r0, lsl r1
    922c:	100026ae 	andne	r2, r0, lr, lsr #13
    9230:	100026f2 	strdne	r2, [r0], -r2	; <UNPREDICTABLE>
    9234:	f2590001 	vhadd.s16	d16, d9, d1
    9238:	f6100026 			; <UNDEFINED> instruction: 0xf6100026
    923c:	01100026 	tsteq	r0, r6, lsr #32
    9240:	00005000 	andeq	r5, r0, r0
    9244:	00000000 	andeq	r0, r0, r0
    9248:	28100000 	ldmdacs	r0, {}	; <UNPREDICTABLE>
    924c:	28121000 	ldmdacs	r2, {ip}
    9250:	00021000 	andeq	r1, r2, r0
    9254:	2812007d 	ldmdacs	r2, {r0, r2, r3, r4, r5, r6}
    9258:	28141000 	ldmdacs	r4, {ip}
    925c:	00021000 	andeq	r1, r2, r0
    9260:	2814087d 	ldmdacs	r4, {r0, r2, r3, r4, r5, r6, fp}
    9264:	28361000 	ldmdacs	r6!, {ip}
    9268:	00021000 	andeq	r1, r2, r0
    926c:	2836207d 	ldmdacs	r6!, {r0, r2, r3, r4, r5, r6, sp}
    9270:	28381000 	ldmdacs	r8!, {ip}
    9274:	00021000 	andeq	r1, r2, r0
    9278:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    9284:	28100000 	ldmdacs	r0, {}	; <UNPREDICTABLE>
    9288:	282b1000 	stmdacs	fp!, {ip}
    928c:	00011000 	andeq	r1, r1, r0
    9290:	00282b50 	eoreq	r2, r8, r0, asr fp
    9294:	00283810 	eoreq	r3, r8, r0, lsl r8
    9298:	f3000410 	vqshl.u8	d0, d0, d0
    929c:	009f5001 	addseq	r5, pc, r1
	...
    92a8:	10000000 	andne	r0, r0, r0
    92ac:	2b100028 	blcs	409354 <__RAM_SIZE+0x309354>
    92b0:	01100028 	tsteq	r0, r8, lsr #32
    92b4:	282b5100 	stmdacs	fp!, {r8, ip, lr}
    92b8:	28381000 	ldmdacs	r8!, {ip}
    92bc:	00041000 	andeq	r1, r4, r0
    92c0:	9f5101f3 	svcls	0x005101f3
	...
    92d0:	10002810 	andne	r2, r0, r0, lsl r8
    92d4:	1000282b 	andne	r2, r0, fp, lsr #16
    92d8:	2b520001 	blcs	14892e4 <__RAM_SIZE+0x13892e4>
    92dc:	38100028 	ldmdacc	r0, {r3, r5}
    92e0:	04100028 	ldreq	r0, [r0], #-40	; 0xffffffd8
    92e4:	5201f300 	andpl	pc, r1, #0, 6
    92e8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    92f4:	00281000 	eoreq	r1, r8, r0
    92f8:	00282b10 	eoreq	r2, r8, r0, lsl fp
    92fc:	53000110 	movwpl	r0, #272	; 0x110
    9300:	1000282b 	andne	r2, r0, fp, lsr #16
    9304:	10002838 	andne	r2, r0, r8, lsr r8
    9308:	01f30004 	mvnseq	r0, r4
    930c:	00009f53 	andeq	r9, r0, r3, asr pc
	...
    9318:	1000282c 	andne	r2, r0, ip, lsr #16
    931c:	10002831 	andne	r2, r0, r1, lsr r8
    9320:	00500001 	subseq	r0, r0, r1
    9324:	00000000 	andeq	r0, r0, r0
    9328:	1e000000 	cdpne	0, 0, cr0, cr0, cr0, {0}
    932c:	22100025 	andscs	r0, r0, #37	; 0x25
    9330:	02100025 	andseq	r0, r0, #37	; 0x25
    9334:	22007d00 	andcs	r7, r0, #0, 26
    9338:	24100025 	ldrcs	r0, [r0], #-37	; 0xffffffdb
    933c:	02100025 	andseq	r0, r0, #37	; 0x25
    9340:	241c7d00 	ldrcs	r7, [ip], #-3328	; 0xfffff300
    9344:	64100025 	ldrvs	r0, [r0], #-37	; 0xffffffdb
    9348:	02100025 	andseq	r0, r0, #37	; 0x25
    934c:	64307d00 	ldrtvs	r7, [r0], #-3328	; 0xfffff300
    9350:	68100025 	ldmdavs	r0, {r0, r2, r5}
    9354:	02100025 	andseq	r0, r0, #37	; 0x25
    9358:	681c7d00 	ldmdavs	ip, {r8, sl, fp, ip, sp, lr}
    935c:	70100025 	andsvc	r0, r0, r5, lsr #32
    9360:	02100025 	andseq	r0, r0, #37	; 0x25
    9364:	00307d00 	eorseq	r7, r0, r0, lsl #26
	...
    937c:	00251e00 	eoreq	r1, r5, r0, lsl #28
    9380:	00253a10 	eoreq	r3, r5, r0, lsl sl
    9384:	50000110 	andpl	r0, r0, r0, lsl r1
    9388:	1000253a 	andne	r2, r0, sl, lsr r5
    938c:	10002562 	andne	r2, r0, r2, ror #10
    9390:	62550001 	subsvs	r0, r5, #1
    9394:	68100025 	ldmdavs	r0, {r0, r2, r5}
    9398:	04100025 	ldreq	r0, [r0], #-37	; 0xffffffdb
    939c:	5001f300 	andpl	pc, r1, r0, lsl #6
    93a0:	0025689f 	mlaeq	r5, pc, r8, r6	; <UNPREDICTABLE>
    93a4:	00256a10 	eoreq	r6, r5, r0, lsl sl
    93a8:	50000110 	andpl	r0, r0, r0, lsl r1
    93ac:	1000256a 	andne	r2, r0, sl, ror #10
    93b0:	1000256c 	andne	r2, r0, ip, ror #10
    93b4:	01f30004 	mvnseq	r0, r4
    93b8:	256c9f50 	strbcs	r9, [ip, #-3920]!	; 0xfffff0b0
    93bc:	256e1000 	strbcs	r1, [lr, #-0]!
    93c0:	00011000 	andeq	r1, r1, r0
    93c4:	00256e50 	eoreq	r6, r5, r0, asr lr
    93c8:	00257010 	eoreq	r7, r5, r0, lsl r0
    93cc:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
	...
    93e0:	1000251e 	andne	r2, r0, lr, lsl r5
    93e4:	10002538 	andne	r2, r0, r8, lsr r5
    93e8:	38510001 	ldmdacc	r1, {r0}^
    93ec:	62100025 	andsvs	r0, r0, #37	; 0x25
    93f0:	01100025 	tsteq	r0, r5, lsr #32
    93f4:	25625900 	strbcs	r5, [r2, #-2304]!	; 0xfffff700
    93f8:	25681000 	strbcs	r1, [r8, #-0]!
    93fc:	00041000 	andeq	r1, r4, r0
    9400:	9f5101f3 	svcls	0x005101f3
    9404:	10002568 	andne	r2, r0, r8, ror #10
    9408:	10002570 	andne	r2, r0, r0, ror r5
    940c:	00510001 	subseq	r0, r1, r1
	...
    941c:	1e000000 	cdpne	0, 0, cr0, cr0, cr0, {0}
    9420:	36100025 	ldrcc	r0, [r0], -r5, lsr #32
    9424:	01100025 	tsteq	r0, r5, lsr #32
    9428:	25365200 	ldrcs	r5, [r6, #-512]!	; 0xfffffe00
    942c:	25621000 	strbcs	r1, [r2, #-0]!
    9430:	00011000 	andeq	r1, r1, r0
    9434:	00256258 	eoreq	r6, r5, r8, asr r2
    9438:	00256810 	eoreq	r6, r5, r0, lsl r8
    943c:	f3000410 	vqshl.u8	d0, d0, d0
    9440:	689f5201 	ldmvs	pc, {r0, r9, ip, lr}	; <UNPREDICTABLE>
    9444:	70100025 	andsvc	r0, r0, r5, lsr #32
    9448:	01100025 	tsteq	r0, r5, lsr #32
    944c:	00005200 	andeq	r5, r0, r0, lsl #4
	...
    945c:	251e0000 	ldrcs	r0, [lr, #-0]
    9460:	253d1000 	ldrcs	r1, [sp, #-0]!
    9464:	00011000 	andeq	r1, r1, r0
    9468:	00253d53 	eoreq	r3, r5, r3, asr sp
    946c:	00256210 	eoreq	r6, r5, r0, lsl r2
    9470:	57000110 	smladpl	r0, r0, r1, r0
    9474:	10002562 	andne	r2, r0, r2, ror #10
    9478:	10002568 	andne	r2, r0, r8, ror #10
    947c:	01f30004 	mvnseq	r0, r4
    9480:	25689f53 	strbcs	r9, [r8, #-3923]!	; 0xfffff0ad
    9484:	25701000 	ldrbcs	r1, [r0, #-0]!
    9488:	00011000 	andeq	r1, r1, r0
    948c:	00000053 	andeq	r0, r0, r3, asr r0
	...
    9498:	00251e00 	eoreq	r1, r5, r0, lsl #28
    949c:	00256810 	eoreq	r6, r5, r0, lsl r8
    94a0:	91000210 	tstls	r0, r0, lsl r2
    94a4:	00256800 	eoreq	r6, r5, r0, lsl #16
    94a8:	00257010 	eoreq	r7, r5, r0, lsl r0
    94ac:	91000210 	tstls	r0, r0, lsl r2
	...
    94bc:	00251e00 	eoreq	r1, r5, r0, lsl #28
    94c0:	00256810 	eoreq	r6, r5, r0, lsl r8
    94c4:	91000210 	tstls	r0, r0, lsl r2
    94c8:	00256804 	eoreq	r6, r5, r4, lsl #16
    94cc:	00257010 	eoreq	r7, r5, r0, lsl r0
    94d0:	91000210 	tstls	r0, r0, lsl r2
    94d4:	00000004 	andeq	r0, r0, r4
	...
    94e0:	00251e00 	eoreq	r1, r5, r0, lsl #28
    94e4:	00256810 	eoreq	r6, r5, r0, lsl r8
    94e8:	91000210 	tstls	r0, r0, lsl r2
    94ec:	00256808 	eoreq	r6, r5, r8, lsl #16
    94f0:	00257010 	eoreq	r7, r5, r0, lsl r0
    94f4:	91000210 	tstls	r0, r0, lsl r2
    94f8:	00000008 	andeq	r0, r0, r8
	...
    9504:	00251e00 	eoreq	r1, r5, r0, lsl #28
    9508:	00256810 	eoreq	r6, r5, r0, lsl r8
    950c:	91000210 	tstls	r0, r0, lsl r2
    9510:	0025680c 	eoreq	r6, r5, ip, lsl #16
    9514:	00257010 	eoreq	r7, r5, r0, lsl r0
    9518:	91000210 	tstls	r0, r0, lsl r2
    951c:	0000000c 	andeq	r0, r0, ip
    9520:	00000000 	andeq	r0, r0, r0
    9524:	00000100 	andeq	r0, r0, r0, lsl #2
    9528:	00253400 	eoreq	r3, r5, r0, lsl #8
    952c:	00256210 	eoreq	r6, r5, r0, lsl r2
    9530:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    9534:	1000256e 	andne	r2, r0, lr, ror #10
    9538:	10002570 	andne	r2, r0, r0, ror r5
    953c:	00500001 	subseq	r0, r0, r1
	...
    954c:	02000000 	andeq	r0, r0, #0
    9550:	00007d00 	andeq	r7, r0, r0, lsl #26
    9554:	00000000 	andeq	r0, r0, r0
    9558:	02000000 	andeq	r0, r0, #0
    955c:	00087d00 	andeq	r7, r8, r0, lsl #26
    9560:	00000000 	andeq	r0, r0, r0
    9564:	02000000 	andeq	r0, r0, #0
    9568:	00187d00 	andseq	r7, r8, r0, lsl #26
    956c:	00000000 	andeq	r0, r0, r0
    9570:	02000000 	andeq	r0, r0, #0
    9574:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    958c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    9598:	6c910002 	ldcvs	0, cr0, [r1], {2}
	...
    95a4:	01f30004 	mvnseq	r0, r4
    95a8:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    95c0:	00510001 	subseq	r0, r1, r1
    95c4:	00000000 	andeq	r0, r0, r0
    95c8:	02000000 	andeq	r0, r0, #0
    95cc:	00709100 	rsbseq	r9, r0, r0, lsl #2
    95d0:	00000000 	andeq	r0, r0, r0
    95d4:	04000000 	streq	r0, [r0], #-0
    95d8:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    95dc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    95f0:	01000000 	mrseq	r0, (UNDEF: 0)
    95f4:	00005200 	andeq	r5, r0, r0, lsl #4
    95f8:	00000000 	andeq	r0, r0, r0
    95fc:	00010000 	andeq	r0, r1, r0
    9600:	00000054 	andeq	r0, r0, r4, asr r0
    9604:	00000000 	andeq	r0, r0, r0
    9608:	f3000400 	vshl.u8	d0, d0, d0
    960c:	009f5201 	addseq	r5, pc, r1, lsl #4
	...
    9624:	53000100 	movwpl	r0, #256	; 0x100
	...
    9630:	00520001 	subseq	r0, r2, r1
    9634:	00000000 	andeq	r0, r0, r0
    9638:	04000000 	streq	r0, [r0], #-0
    963c:	5301f300 	movwpl	pc, #4864	; 0x1300	; <UNPREDICTABLE>
    9640:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    9650:	01000000 	mrseq	r0, (UNDEF: 0)
    9654:	00005000 	andeq	r5, r0, r0
	...
    9664:	00020000 	andeq	r0, r2, r0
    9668:	0000007d 	andeq	r0, r0, sp, ror r0
    966c:	00000000 	andeq	r0, r0, r0
    9670:	00020000 	andeq	r0, r2, r0
    9674:	0000087d 	andeq	r0, r0, sp, ror r8
    9678:	00000000 	andeq	r0, r0, r0
    967c:	00020000 	andeq	r0, r2, r0
    9680:	0000187d 	andeq	r1, r0, sp, ror r8
    9684:	00000000 	andeq	r0, r0, r0
    9688:	00020000 	andeq	r0, r2, r0
    968c:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    96a4:	00500001 	subseq	r0, r0, r1
    96a8:	00000000 	andeq	r0, r0, r0
    96ac:	02000000 	andeq	r0, r0, #0
    96b0:	006c9100 	rsbeq	r9, ip, r0, lsl #2
    96b4:	00000000 	andeq	r0, r0, r0
    96b8:	04000000 	streq	r0, [r0], #-0
    96bc:	5001f300 	andpl	pc, r1, r0, lsl #6
    96c0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    96d4:	01000000 	mrseq	r0, (UNDEF: 0)
    96d8:	00005100 	andeq	r5, r0, r0, lsl #2
    96dc:	00000000 	andeq	r0, r0, r0
    96e0:	00020000 	andeq	r0, r2, r0
    96e4:	00007091 	muleq	r0, r1, r0
    96e8:	00000000 	andeq	r0, r0, r0
    96ec:	00040000 	andeq	r0, r4, r0
    96f0:	9f5101f3 	svcls	0x005101f3
	...
    9708:	00010000 	andeq	r0, r1, r0
    970c:	00000052 	andeq	r0, r0, r2, asr r0
    9710:	00000000 	andeq	r0, r0, r0
    9714:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    9720:	01f30004 	mvnseq	r0, r4
    9724:	00009f52 	andeq	r9, r0, r2, asr pc
	...
    973c:	00530001 	subseq	r0, r3, r1
    9740:	00000000 	andeq	r0, r0, r0
    9744:	01000000 	mrseq	r0, (UNDEF: 0)
    9748:	00005200 	andeq	r5, r0, r0, lsl #4
    974c:	00000000 	andeq	r0, r0, r0
    9750:	00040000 	andeq	r0, r4, r0
    9754:	9f5301f3 	svcls	0x005301f3
	...
    9768:	00010000 	andeq	r0, r1, r0
    976c:	00000050 	andeq	r0, r0, r0, asr r0
	...
    977c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    9788:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    978c:	00000010 	andeq	r0, r0, r0, lsl r0
	...
    97a0:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    97ac:	00540001 	subseq	r0, r4, r1
	...
    97c0:	01000000 	mrseq	r0, (UNDEF: 0)
    97c4:	00005100 	andeq	r5, r0, r0, lsl #2
    97c8:	00000000 	andeq	r0, r0, r0
    97cc:	00010000 	andeq	r0, r1, r0
    97d0:	00000055 	andeq	r0, r0, r5, asr r0
    97d4:	00000000 	andeq	r0, r0, r0
    97d8:	00000100 	andeq	r0, r0, r0, lsl #2
	...
    97e4:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    97f0:	00540001 	subseq	r0, r4, r1
	...
    9800:	02000000 	andeq	r0, r0, #0
    9804:	00007d00 	andeq	r7, r0, r0, lsl #26
    9808:	00000000 	andeq	r0, r0, r0
    980c:	02000000 	andeq	r0, r0, #0
    9810:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    9828:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    9834:	00540001 	subseq	r0, r4, r1
    9838:	00000000 	andeq	r0, r0, r0
    983c:	04000000 	streq	r0, [r0], #-0
    9840:	5001f300 	andpl	pc, r1, r0, lsl #6
    9844:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    9848:	00000000 	andeq	r0, r0, r0
    984c:	00000100 	andeq	r0, r0, r0, lsl #2
	...
    9858:	01000000 	mrseq	r0, (UNDEF: 0)
    985c:	00005000 	andeq	r5, r0, r0
    9860:	00000000 	andeq	r0, r0, r0
    9864:	00010000 	andeq	r0, r1, r0
    9868:	00000054 	andeq	r0, r0, r4, asr r0
    986c:	00000000 	andeq	r0, r0, r0
    9870:	f3000400 	vshl.u8	d0, d0, d0
    9874:	009f5001 	addseq	r5, pc, r1
	...
    9888:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    989c:	007d0002 	rsbseq	r0, sp, r2
	...
    98a8:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    98c4:	00010000 	andeq	r0, r1, r0
    98c8:	00000050 	andeq	r0, r0, r0, asr r0
    98cc:	00000000 	andeq	r0, r0, r0
    98d0:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    98dc:	01f30004 	mvnseq	r0, r4
    98e0:	00009f50 	andeq	r9, r0, r0, asr pc
    98e4:	00000000 	andeq	r0, r0, r0
    98e8:	00010000 	andeq	r0, r1, r0
    98ec:	00000054 	andeq	r0, r0, r4, asr r0
    98f0:	00000000 	andeq	r0, r0, r0
    98f4:	f3000400 	vshl.u8	d0, d0, d0
    98f8:	009f5001 	addseq	r5, pc, r1
	...
    990c:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    9918:	00000002 	andeq	r0, r0, r2
	...
    9928:	00010000 	andeq	r0, r1, r0
    992c:	00000050 	andeq	r0, r0, r0, asr r0
    9930:	00000000 	andeq	r0, r0, r0
    9934:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    9940:	01f30004 	mvnseq	r0, r4
    9944:	00009f50 	andeq	r9, r0, r0, asr pc
    9948:	00000000 	andeq	r0, r0, r0
    994c:	00010000 	andeq	r0, r1, r0
    9950:	00000054 	andeq	r0, r0, r4, asr r0
    9954:	00000000 	andeq	r0, r0, r0
    9958:	f3000400 	vshl.u8	d0, d0, d0
    995c:	009f5001 	addseq	r5, pc, r1
    9960:	00000000 	andeq	r0, r0, r0
    9964:	58000000 	stmdapl	r0, {}	; <UNPREDICTABLE>
    9968:	5a100032 	bpl	409a38 <__RAM_SIZE+0x309a38>
    996c:	02100032 	andseq	r0, r0, #50	; 0x32
    9970:	5a007d00 	bpl	28d78 <__HEAP_SIZE+0x27d78>
    9974:	5c100032 	ldcpl	0, cr0, [r0], {50}	; 0x32
    9978:	02100032 	andseq	r0, r0, #50	; 0x32
    997c:	5c0c7d00 	stcpl	13, cr7, [ip], {-0}
    9980:	6c100032 	ldcvs	0, cr0, [r0], {50}	; 0x32
    9984:	02100032 	andseq	r0, r0, #50	; 0x32
    9988:	6c187d00 	ldcvs	13, cr7, [r8], {-0}
    998c:	6e100032 	mrcvs	0, 0, r0, cr0, cr2, {1}
    9990:	02100032 	andseq	r0, r0, #50	; 0x32
    9994:	6e0c7d00 	cdpvs	13, 0, cr7, cr12, cr0, {0}
    9998:	b8100032 	ldmdalt	r0, {r1, r4, r5}
    999c:	02100032 	andseq	r0, r0, #50	; 0x32
    99a0:	00187d00 	andseq	r7, r8, r0, lsl #26
    99a4:	00000000 	andeq	r0, r0, r0
    99a8:	84000000 	strhi	r0, [r0], #-0
    99ac:	86100030 			; <UNDEFINED> instruction: 0x86100030
    99b0:	02100030 	andseq	r0, r0, #48	; 0x30
    99b4:	86007d00 	strhi	r7, [r0], -r0, lsl #26
    99b8:	b4100030 	ldrlt	r0, [r0], #-48	; 0xffffffd0
    99bc:	02100030 	andseq	r0, r0, #48	; 0x30
    99c0:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    99cc:	00308a00 	eorseq	r8, r0, r0, lsl #20
    99d0:	00309310 	eorseq	r9, r0, r0, lsl r3
    99d4:	73000210 	movwvc	r0, #528	; 0x210
	...
    99e0:	00000100 	andeq	r0, r0, r0, lsl #2
    99e4:	00309e00 	eorseq	r9, r0, r0, lsl #28
    99e8:	0030aa10 	eorseq	sl, r0, r0, lsl sl
    99ec:	53000110 	movwpl	r0, #272	; 0x110
    99f0:	100030aa 	andne	r3, r0, sl, lsr #1
    99f4:	100030b4 	strhne	r3, [r0], -r4
    99f8:	a8030005 	stmdage	r3, {r0, r2}
    99fc:	0038008b 	eorseq	r0, r8, fp, lsl #1
    9a00:	00000000 	andeq	r0, r0, r0
    9a04:	48000000 	stmdami	r0, {}	; <UNPREDICTABLE>
    9a08:	4a100031 	bmi	409ad4 <__RAM_SIZE+0x309ad4>
    9a0c:	02100031 	andseq	r0, r0, #49	; 0x31
    9a10:	4a007d00 	bmi	28e18 <__HEAP_SIZE+0x27e18>
    9a14:	4c100031 	ldcmi	0, cr0, [r0], {49}	; 0x31
    9a18:	02100031 	andseq	r0, r0, #49	; 0x31
    9a1c:	4c0c7d00 	stcmi	13, cr7, [ip], {-0}
    9a20:	3a100031 	bcc	409aec <__RAM_SIZE+0x309aec>
    9a24:	02100032 	andseq	r0, r0, #50	; 0x32
    9a28:	3a287d00 	bcc	a28e30 <__RAM_SIZE+0x928e30>
    9a2c:	40100032 	andsmi	r0, r0, r2, lsr r0
    9a30:	02100032 	andseq	r0, r0, #50	; 0x32
    9a34:	000c7d00 	andeq	r7, ip, r0, lsl #26
	...
    9a40:	00318000 	eorseq	r8, r1, r0
    9a44:	00323810 	eorseq	r3, r2, r0, lsl r8
    9a48:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
	...
    9a60:	10003192 	mulne	r0, r2, r1
    9a64:	100031be 			; <UNDEFINED> instruction: 0x100031be
    9a68:	be500001 	cdplt	0, 5, cr0, cr0, cr1, {0}
    9a6c:	f0100031 			; <UNDEFINED> instruction: 0xf0100031
    9a70:	01100031 	tsteq	r0, r1, lsr r0
    9a74:	31f05500 	mvnscc	r5, r0, lsl #10
    9a78:	32161000 	andscc	r1, r6, #0
    9a7c:	00011000 	andeq	r1, r1, r0
    9a80:	00321650 	eorseq	r1, r2, r0, asr r6
    9a84:	00321c10 	eorseq	r1, r2, r0, lsl ip
    9a88:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
    9a8c:	1000321c 	andne	r3, r0, ip, lsl r2
    9a90:	10003232 	andne	r3, r0, r2, lsr r2
    9a94:	32500001 	subscc	r0, r0, #1
    9a98:	38100032 	ldmdacc	r0, {r1, r4, r5}
    9a9c:	01100032 	tsteq	r0, r2, lsr r0
    9aa0:	00005500 	andeq	r5, r0, r0, lsl #10
    9aa4:	00000000 	andeq	r0, r0, r0
    9aa8:	00010000 	andeq	r0, r1, r0
    9aac:	10003174 	andne	r3, r0, r4, ror r1
    9ab0:	1000317e 	andne	r3, r0, lr, ror r1
    9ab4:	64910003 	ldrvs	r0, [r1], #3
    9ab8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    9abc:	00000000 	andeq	r0, r0, r0
    9ac0:	002fd400 	eoreq	sp, pc, r0, lsl #8
    9ac4:	002fd610 	eoreq	sp, pc, r0, lsl r6	; <UNPREDICTABLE>
    9ac8:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    9acc:	002fd600 	eoreq	sp, pc, r0, lsl #12
    9ad0:	00301c10 	eorseq	r1, r0, r0, lsl ip
    9ad4:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    9ad8:	00000008 	andeq	r0, r0, r8
	...
    9af4:	002fd400 	eoreq	sp, pc, r0, lsl #8
    9af8:	002fe810 	eoreq	lr, pc, r0, lsl r8	; <UNPREDICTABLE>
    9afc:	50000110 	andpl	r0, r0, r0, lsl r1
    9b00:	10002fe8 	andne	r2, r0, r8, ror #31
    9b04:	10002fea 	andne	r2, r0, sl, ror #31
    9b08:	01f30004 	mvnseq	r0, r4
    9b0c:	2fea9f50 	svccs	0x00ea9f50
    9b10:	2ff01000 	svccs	0x00f01000
    9b14:	00011000 	andeq	r1, r1, r0
    9b18:	002ff050 	eoreq	pc, pc, r0, asr r0	; <UNPREDICTABLE>
    9b1c:	002ff310 	eoreq	pc, pc, r0, lsl r3	; <UNPREDICTABLE>
    9b20:	71000310 	tstvc	r0, r0, lsl r3
    9b24:	2ff39f7c 	svccs	0x00f39f7c
    9b28:	2ff81000 	svccs	0x00f81000
    9b2c:	00041000 	andeq	r1, r4, r0
    9b30:	9f5001f3 	svcls	0x005001f3
    9b34:	10002ff8 	strdne	r2, [r0], -r8
    9b38:	10003006 	andne	r3, r0, r6
    9b3c:	06500001 	ldrbeq	r0, [r0], -r1
    9b40:	09100030 	ldmdbeq	r0, {r4, r5}
    9b44:	03100030 	tsteq	r0, #48	; 0x30
    9b48:	9f7c7100 	svcls	0x007c7100
    9b4c:	10003009 	andne	r3, r0, r9
    9b50:	1000300e 	andne	r3, r0, lr
    9b54:	01f30004 	mvnseq	r0, r4
    9b58:	300e9f50 	andcc	r9, lr, r0, asr pc
    9b5c:	30101000 	andscc	r1, r0, r0
    9b60:	00011000 	andeq	r1, r1, r0
    9b64:	00301050 	eorseq	r1, r0, r0, asr r0
    9b68:	00301c10 	eorseq	r1, r0, r0, lsl ip
    9b6c:	f3000410 	vqshl.u8	d0, d0, d0
    9b70:	009f5001 	addseq	r5, pc, r1
	...
    9b90:	002fd400 	eoreq	sp, pc, r0, lsl #8
    9b94:	002fe810 	eoreq	lr, pc, r0, lsl r8	; <UNPREDICTABLE>
    9b98:	51000110 	tstpl	r0, r0, lsl r1
    9b9c:	10002fe8 	andne	r2, r0, r8, ror #31
    9ba0:	10002fea 	andne	r2, r0, sl, ror #31
    9ba4:	01f30004 	mvnseq	r0, r4
    9ba8:	2fea9f51 	svccs	0x00ea9f51
    9bac:	2fec1000 	svccs	0x00ec1000
    9bb0:	00011000 	andeq	r1, r1, r0
    9bb4:	002fec51 	eoreq	lr, pc, r1, asr ip	; <UNPREDICTABLE>
    9bb8:	002ff010 	eoreq	pc, pc, r0, lsl r0	; <UNPREDICTABLE>
    9bbc:	70000210 	andvc	r0, r0, r0, lsl r2
    9bc0:	002ff004 	eoreq	pc, pc, r4
    9bc4:	002ff310 	eoreq	pc, pc, r0, lsl r3	; <UNPREDICTABLE>
    9bc8:	71000210 	tstvc	r0, r0, lsl r2
    9bcc:	002ff300 	eoreq	pc, pc, r0, lsl #6
    9bd0:	002ff810 	eoreq	pc, pc, r0, lsl r8	; <UNPREDICTABLE>
    9bd4:	f3000410 	vqshl.u8	d0, d0, d0
    9bd8:	f89f5101 			; <UNDEFINED> instruction: 0xf89f5101
    9bdc:	0210002f 	andseq	r0, r0, #47	; 0x2f
    9be0:	01100030 	tsteq	r0, r0, lsr r0
    9be4:	30025100 	andcc	r5, r2, r0, lsl #2
    9be8:	30061000 	andcc	r1, r6, r0
    9bec:	00021000 	andeq	r1, r2, r0
    9bf0:	30060470 	andcc	r0, r6, r0, ror r4
    9bf4:	30091000 	andcc	r1, r9, r0
    9bf8:	00021000 	andeq	r1, r2, r0
    9bfc:	30090071 	andcc	r0, r9, r1, ror r0
    9c00:	300e1000 	andcc	r1, lr, r0
    9c04:	00041000 	andeq	r1, r4, r0
    9c08:	9f5101f3 	svcls	0x005101f3
    9c0c:	1000300e 	andne	r3, r0, lr
    9c10:	1000301c 	andne	r3, r0, ip, lsl r0
    9c14:	00510001 	subseq	r0, r1, r1
	...
    9c28:	002fd400 	eoreq	sp, pc, r0, lsl #8
    9c2c:	002fe010 	eoreq	lr, pc, r0, lsl r0	; <UNPREDICTABLE>
    9c30:	52000110 	andpl	r0, r0, #16, 2
    9c34:	10002fe0 	andne	r2, r0, r0, ror #31
    9c38:	10002ff8 	strdne	r2, [r0], -r8
    9c3c:	01f30004 	mvnseq	r0, r4
    9c40:	2ff89f52 	svccs	0x00f89f52
    9c44:	30091000 	andcc	r1, r9, r0
    9c48:	00011000 	andeq	r1, r1, r0
    9c4c:	00300952 	eorseq	r0, r0, r2, asr r9
    9c50:	00300e10 	eorseq	r0, r0, r0, lsl lr
    9c54:	f3000410 	vqshl.u8	d0, d0, d0
    9c58:	0e9f5201 	cdpeq	2, 9, cr5, cr15, cr1, {0}
    9c5c:	1c100030 	ldcne	0, cr0, [r0], {48}	; 0x30
    9c60:	01100030 	tsteq	r0, r0, lsr r0
    9c64:	00005200 	andeq	r5, r0, r0, lsl #4
	...
    9c78:	10002fd4 	ldrdne	r2, [r0], -r4
    9c7c:	10002fe2 	andne	r2, r0, r2, ror #31
    9c80:	e2530001 	subs	r0, r3, #1
    9c84:	f810002f 			; <UNDEFINED> instruction: 0xf810002f
    9c88:	0410002f 	ldreq	r0, [r0], #-47	; 0xffffffd1
    9c8c:	5301f300 	movwpl	pc, #4864	; 0x1300	; <UNPREDICTABLE>
    9c90:	002ff89f 	mlaeq	pc, pc, r8, pc	; <UNPREDICTABLE>
    9c94:	00300410 	eorseq	r0, r0, r0, lsl r4
    9c98:	53000110 	movwpl	r0, #272	; 0x110
    9c9c:	10003004 	andne	r3, r0, r4
    9ca0:	1000300e 	andne	r3, r0, lr
    9ca4:	01f30004 	mvnseq	r0, r4
    9ca8:	300e9f53 	andcc	r9, lr, r3, asr pc
    9cac:	301c1000 	andscc	r1, ip, r0
    9cb0:	00011000 	andeq	r1, r1, r0
    9cb4:	00000053 	andeq	r0, r0, r3, asr r0
    9cb8:	00000000 	andeq	r0, r0, r0
    9cbc:	00000100 	andeq	r0, r0, r0, lsl #2
    9cc0:	d6000000 	strle	r0, [r0], -r0
    9cc4:	e810002f 	ldmda	r0, {r0, r1, r2, r3, r5}
    9cc8:	0210002f 	andseq	r0, r0, #47	; 0x2f
    9ccc:	ea9f3000 	b	fe7d5cd4 <__StackTop+0xc66d5cd4>
    9cd0:	1010002f 	andsne	r0, r0, pc, lsr #32
    9cd4:	02100030 	andseq	r0, r0, #48	; 0x30
    9cd8:	109f3000 	addsne	r3, pc, r0
    9cdc:	1c100030 	ldcne	0, cr0, [r0], {48}	; 0x30
    9ce0:	02100030 	andseq	r0, r0, #48	; 0x30
    9ce4:	009f3100 	addseq	r3, pc, r0, lsl #2
    9ce8:	00000000 	andeq	r0, r0, r0
    9cec:	b4000000 	strlt	r0, [r0], #-0
    9cf0:	b6100030 			; <UNDEFINED> instruction: 0xb6100030
    9cf4:	02100030 	andseq	r0, r0, #48	; 0x30
    9cf8:	b6007d00 	strlt	r7, [r0], -r0, lsl #26
    9cfc:	e0100030 	ands	r0, r0, r0, lsr r0
    9d00:	02100030 	andseq	r0, r0, #48	; 0x30
    9d04:	00107d00 	andseq	r7, r0, r0, lsl #26
	...
    9d10:	b4000000 	strlt	r0, [r0], #-0
    9d14:	bb100030 	bllt	409ddc <__RAM_SIZE+0x309ddc>
    9d18:	01100030 	tsteq	r0, r0, lsr r0
    9d1c:	30bb5000 	adcscc	r5, fp, r0
    9d20:	30e01000 	rsccc	r1, r0, r0
    9d24:	00011000 	andeq	r1, r1, r0
    9d28:	00000055 	andeq	r0, r0, r5, asr r0
	...
    9d38:	0030be00 	eorseq	fp, r0, r0, lsl #28
    9d3c:	0030ca10 	eorseq	ip, r0, r0, lsl sl
    9d40:	50000110 	andpl	r0, r0, r0, lsl r1
    9d44:	100030ca 	andne	r3, r0, sl, asr #1
    9d48:	100030d2 	ldrdne	r3, [r0], -r2
    9d4c:	d2540001 	subsle	r0, r4, #1
    9d50:	d5100030 	ldrle	r0, [r0, #-48]	; 0xffffffd0
    9d54:	01100030 	tsteq	r0, r0, lsr r0
    9d58:	30d55000 	sbcscc	r5, r5, r0
    9d5c:	30e01000 	rsccc	r1, r0, r0
    9d60:	00011000 	andeq	r1, r1, r0
    9d64:	00000054 	andeq	r0, r0, r4, asr r0
	...
    9d74:	002fb400 	eoreq	fp, pc, r0, lsl #8
    9d78:	002fc610 	eoreq	ip, pc, r0, lsl r6	; <UNPREDICTABLE>
    9d7c:	50000110 	andpl	r0, r0, r0, lsl r1
    9d80:	10002fc6 	andne	r2, r0, r6, asr #31
    9d84:	10002fc8 	andne	r2, r0, r8, asr #31
    9d88:	01f30004 	mvnseq	r0, r4
    9d8c:	2fc89f50 	svccs	0x00c89f50
    9d90:	2fce1000 	svccs	0x00ce1000
    9d94:	00011000 	andeq	r1, r1, r0
    9d98:	002fce50 	eoreq	ip, pc, r0, asr lr	; <UNPREDICTABLE>
    9d9c:	002fd410 	eoreq	sp, pc, r0, lsl r4	; <UNPREDICTABLE>
    9da0:	f3000410 	vqshl.u8	d0, d0, d0
    9da4:	009f5001 	addseq	r5, pc, r1
	...
    9db0:	c6000000 	strgt	r0, [r0], -r0
    9db4:	c810002f 	ldmdagt	r0, {r0, r1, r2, r3, r5}
    9db8:	0110002f 	tsteq	r0, pc, lsr #32
    9dbc:	2fce5000 	svccs	0x00ce5000
    9dc0:	2fd41000 	svccs	0x00d41000
    9dc4:	00021000 	andeq	r1, r2, r0
    9dc8:	00009f30 	andeq	r9, r0, r0, lsr pc
    9dcc:	00000000 	andeq	r0, r0, r0
    9dd0:	30e00000 	rsccc	r0, r0, r0
    9dd4:	30e21000 	rsccc	r1, r2, r0
    9dd8:	00021000 	andeq	r1, r2, r0
    9ddc:	30e2007d 	rsccc	r0, r2, sp, ror r0
    9de0:	30e41000 	rsccc	r1, r4, r0
    9de4:	00021000 	andeq	r1, r2, r0
    9de8:	30e4107d 	rsccc	r1, r4, sp, ror r0
    9dec:	311e1000 	tstcc	lr, r0
    9df0:	00021000 	andeq	r1, r2, r0
    9df4:	311e187d 	tstcc	lr, sp, ror r8
    9df8:	31201000 			; <UNDEFINED> instruction: 0x31201000
    9dfc:	00021000 	andeq	r1, r2, r0
    9e00:	3120107d 			; <UNDEFINED> instruction: 0x3120107d
    9e04:	31481000 	mrscc	r1, (UNDEF: 72)
    9e08:	00021000 	andeq	r1, r2, r0
    9e0c:	0000187d 	andeq	r1, r0, sp, ror r8
	...
    9e18:	30e00000 	rsccc	r0, r0, r0
    9e1c:	30eb1000 	rsccc	r1, fp, r0
    9e20:	00011000 	andeq	r1, r1, r0
    9e24:	0030eb50 	eorseq	lr, r0, r0, asr fp
    9e28:	00314810 	eorseq	r4, r1, r0, lsl r8
    9e2c:	56000110 			; <UNDEFINED> instruction: 0x56000110
	...
    9e40:	100030e0 	andne	r3, r0, r0, ror #1
    9e44:	100030eb 	andne	r3, r0, fp, ror #1
    9e48:	eb510001 	bl	1449e54 <__RAM_SIZE+0x1349e54>
    9e4c:	30100030 	andscc	r0, r0, r0, lsr r0
    9e50:	01100031 	tsteq	r0, r1, lsr r0
    9e54:	31305400 	teqcc	r0, r0, lsl #8
    9e58:	31321000 	teqcc	r2, r0
    9e5c:	00041000 	andeq	r1, r4, r0
    9e60:	9f5101f3 	svcls	0x005101f3
    9e64:	10003132 	andne	r3, r0, r2, lsr r1
    9e68:	10003148 	andne	r3, r0, r8, asr #2
    9e6c:	00540001 	subseq	r0, r4, r1
	...
    9e84:	0030f200 	eorseq	pc, r0, r0, lsl #4
    9e88:	00311210 	eorseq	r1, r1, r0, lsl r2
    9e8c:	50000110 	andpl	r0, r0, r0, lsl r1
    9e90:	10003112 	andne	r3, r0, r2, lsl r1
    9e94:	1000311c 	andne	r3, r0, ip, lsl r1
    9e98:	20550001 	subscs	r0, r5, r1
    9e9c:	23100031 	tstcs	r0, #49	; 0x31
    9ea0:	01100031 	tsteq	r0, r1, lsr r0
    9ea4:	31235000 			; <UNDEFINED> instruction: 0x31235000
    9ea8:	312e1000 			; <UNDEFINED> instruction: 0x312e1000
    9eac:	00011000 	andeq	r1, r1, r0
    9eb0:	00312e55 	eorseq	r2, r1, r5, asr lr
    9eb4:	00313210 	eorseq	r3, r1, r0, lsl r2
    9eb8:	50000110 	andpl	r0, r0, r0, lsl r1
    9ebc:	10003132 	andne	r3, r0, r2, lsr r1
    9ec0:	10003138 	andne	r3, r0, r8, lsr r1
    9ec4:	38550001 	ldmdacc	r5, {r0}^
    9ec8:	3b100031 	blcc	409f94 <__RAM_SIZE+0x309f94>
    9ecc:	01100031 	tsteq	r0, r1, lsr r0
    9ed0:	00005000 	andeq	r5, r0, r0
    9ed4:	00000000 	andeq	r0, r0, r0
    9ed8:	32400000 	subcc	r0, r0, #0
    9edc:	32421000 	subcc	r1, r2, #0
    9ee0:	00021000 	andeq	r1, r2, r0
    9ee4:	3242007d 	subcc	r0, r2, #125	; 0x7d
    9ee8:	32441000 	subcc	r1, r4, #0
    9eec:	00021000 	andeq	r1, r2, r0
    9ef0:	3244047d 	subcc	r0, r4, #2097152000	; 0x7d000000
    9ef4:	32561000 	subscc	r1, r6, #0
    9ef8:	00021000 	andeq	r1, r2, r0
    9efc:	0000107d 	andeq	r1, r0, sp, ror r0
    9f00:	00000000 	andeq	r0, r0, r0
    9f04:	00010000 	andeq	r0, r1, r0
    9f08:	32400000 	subcc	r0, r0, #0
    9f0c:	32441000 	subcc	r1, r4, #0
    9f10:	00011000 	andeq	r1, r1, r0
    9f14:	00324450 	eorseq	r4, r2, r0, asr r4
    9f18:	00325610 	eorseq	r5, r2, r0, lsl r6
    9f1c:	f3000410 	vqshl.u8	d0, d0, d0
    9f20:	009f5001 	addseq	r5, pc, r1
	...
    9f2c:	00324a00 	eorseq	r4, r2, r0, lsl #20
    9f30:	00324f10 	eorseq	r4, r2, r0, lsl pc
    9f34:	50000110 	andpl	r0, r0, r0, lsl r1
	...
    9f40:	10003044 	andne	r3, r0, r4, asr #32
    9f44:	10003046 	andne	r3, r0, r6, asr #32
    9f48:	007d0002 	rsbseq	r0, sp, r2
    9f4c:	10003046 	andne	r3, r0, r6, asr #32
    9f50:	10003084 	andne	r3, r0, r4, lsl #1
    9f54:	107d0002 	rsbsne	r0, sp, r2
	...
    9f64:	10003044 	andne	r3, r0, r4, asr #32
    9f68:	10003054 	andne	r3, r0, r4, asr r0
    9f6c:	54500001 	ldrbpl	r0, [r0], #-1
    9f70:	84100030 	ldrhi	r0, [r0], #-48	; 0xffffffd0
    9f74:	01100030 	tsteq	r0, r0, lsr r0
    9f78:	00005500 	andeq	r5, r0, r0, lsl #10
	...
    9f84:	30440000 	subcc	r0, r4, r0
    9f88:	30571000 	subscc	r1, r7, r0
    9f8c:	00011000 	andeq	r1, r1, r0
    9f90:	00305751 	eorseq	r5, r0, r1, asr r7
    9f94:	00308410 	eorseq	r8, r0, r0, lsl r4
    9f98:	56000110 			; <UNDEFINED> instruction: 0x56000110
	...
    9fa4:	30520000 	subscc	r0, r2, r0
    9fa8:	30841000 	addcc	r1, r4, r0
    9fac:	00011000 	andeq	r1, r1, r0
    9fb0:	00000054 	andeq	r0, r0, r4, asr r0
    9fb4:	00000000 	andeq	r0, r0, r0
    9fb8:	00301c00 	eorseq	r1, r0, r0, lsl #24
    9fbc:	00301e10 	eorseq	r1, r0, r0, lsl lr
    9fc0:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    9fc4:	00301e00 	eorseq	r1, r0, r0, lsl #28
    9fc8:	00304410 	eorseq	r4, r0, r0, lsl r4
    9fcc:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    9fd0:	00000010 	andeq	r0, r0, r0, lsl r0
	...
    9fdc:	00301c00 	eorseq	r1, r0, r0, lsl #24
    9fe0:	00302610 	eorseq	r2, r0, r0, lsl r6
    9fe4:	50000110 	andpl	r0, r0, r0, lsl r1
    9fe8:	10003026 	andne	r3, r0, r6, lsr #32
    9fec:	10003044 	andne	r3, r0, r4, asr #32
    9ff0:	00540001 	subseq	r0, r4, r1
	...
    9ffc:	1c000000 	stcne	0, cr0, [r0], {-0}
    a000:	26100030 			; <UNDEFINED> instruction: 0x26100030
    a004:	01100030 	tsteq	r0, r0, lsr r0
    a008:	30265100 	eorcc	r5, r6, r0, lsl #2
    a00c:	30441000 	subcc	r1, r4, r0
    a010:	00011000 	andeq	r1, r1, r0
    a014:	00000055 	andeq	r0, r0, r5, asr r0
	...
    a020:	00301c00 	eorseq	r1, r0, r0, lsl #24
    a024:	00302610 	eorseq	r2, r0, r0, lsl r6
    a028:	52000110 	andpl	r0, r0, #16, 2
    a02c:	10003026 	andne	r3, r0, r6, lsr #32
    a030:	10003044 	andne	r3, r0, r4, asr #32
    a034:	00560001 	subseq	r0, r6, r1
	...
    a048:	01000000 	mrseq	r0, (UNDEF: 0)
    a04c:	00005000 	andeq	r5, r0, r0
    a050:	00000000 	andeq	r0, r0, r0
    a054:	00040000 	andeq	r0, r4, r0
    a058:	9f5001f3 	svcls	0x005001f3
	...
    a064:	00000002 	andeq	r0, r0, r2
	...
    a070:	00500001 	subseq	r0, r0, r1
    a074:	00000000 	andeq	r0, r0, r0
    a078:	04000000 	streq	r0, [r0], #-0
    a07c:	5001f300 	andpl	pc, r1, r0, lsl #6
    a080:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    a098:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    a0a4:	00710002 	rsbseq	r0, r1, r2
	...
    a0b0:	00500001 	subseq	r0, r0, r1
    a0b4:	00000000 	andeq	r0, r0, r0
    a0b8:	04000000 	streq	r0, [r0], #-0
    a0bc:	5001f300 	andpl	pc, r1, r0, lsl #6
    a0c0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    a0c4:	00000000 	andeq	r0, r0, r0
    a0c8:	00000100 	andeq	r0, r0, r0, lsl #2
	...
    a0d4:	31000200 	mrscc	r0, R8_usr
    a0d8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    a0dc:	00000000 	andeq	r0, r0, r0
    a0e0:	30000200 	andcc	r0, r0, r0, lsl #4
    a0e4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    a0e8:	00000000 	andeq	r0, r0, r0
    a0ec:	00000300 	andeq	r0, r0, r0, lsl #6
	...
    a0fc:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    a108:	00710002 	rsbseq	r0, r1, r2
	...
    a114:	00500001 	subseq	r0, r0, r1
    a118:	00000000 	andeq	r0, r0, r0
    a11c:	04000000 	streq	r0, [r0], #-0
    a120:	5001f300 	andpl	pc, r1, r0, lsl #6
    a124:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    a138:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    a144:	01f30004 	mvnseq	r0, r4
    a148:	00009f50 	andeq	r9, r0, r0, asr pc
    a14c:	00000000 	andeq	r0, r0, r0
    a150:	00020000 	andeq	r0, r2, r0
	...
    a15c:	00010000 	andeq	r0, r1, r0
    a160:	00000050 	andeq	r0, r0, r0, asr r0
    a164:	00000000 	andeq	r0, r0, r0
    a168:	f3000400 	vshl.u8	d0, d0, d0
    a16c:	009f5001 	addseq	r5, pc, r1
    a170:	00000000 	andeq	r0, r0, r0
    a174:	06000000 	streq	r0, [r0], -r0
	...
    a180:	02000000 	andeq	r0, r0, #0
    a184:	00047000 	andeq	r7, r4, r0
    a188:	00000000 	andeq	r0, r0, r0
    a18c:	01000000 	mrseq	r0, (UNDEF: 0)
    a190:	00005000 	andeq	r5, r0, r0
	...
    a1a0:	00020000 	andeq	r0, r2, r0
    a1a4:	0000007d 	andeq	r0, r0, sp, ror r0
    a1a8:	00000000 	andeq	r0, r0, r0
    a1ac:	00020000 	andeq	r0, r2, r0
    a1b0:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    a1c4:	00010000 	andeq	r0, r1, r0
    a1c8:	00000050 	andeq	r0, r0, r0, asr r0
    a1cc:	00000000 	andeq	r0, r0, r0
    a1d0:	f3000400 	vshl.u8	d0, d0, d0
    a1d4:	009f5001 	addseq	r5, pc, r1
	...
    a1e8:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    a1fc:	007d0002 	rsbseq	r0, sp, r2
	...
    a208:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    a224:	00010000 	andeq	r0, r1, r0
    a228:	00000050 	andeq	r0, r0, r0, asr r0
    a22c:	00000000 	andeq	r0, r0, r0
    a230:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    a23c:	01f30004 	mvnseq	r0, r4
    a240:	00009f50 	andeq	r9, r0, r0, asr pc
    a244:	00000000 	andeq	r0, r0, r0
    a248:	00010000 	andeq	r0, r1, r0
    a24c:	00000054 	andeq	r0, r0, r4, asr r0
    a250:	00000000 	andeq	r0, r0, r0
    a254:	f3000400 	vshl.u8	d0, d0, d0
    a258:	009f5001 	addseq	r5, pc, r1
    a25c:	00000000 	andeq	r0, r0, r0
    a260:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    a274:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    a280:	00540001 	subseq	r0, r4, r1
    a284:	00000000 	andeq	r0, r0, r0
    a288:	04000000 	streq	r0, [r0], #-0
    a28c:	5001f300 	andpl	pc, r1, r0, lsl #6
    a290:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    a294:	00000000 	andeq	r0, r0, r0
    a298:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    a2a4:	01f30004 	mvnseq	r0, r4
    a2a8:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    a2bc:	00540001 	subseq	r0, r4, r1
	...
    a2cc:	02000000 	andeq	r0, r0, #0
    a2d0:	00007d00 	andeq	r7, r0, r0, lsl #26
    a2d4:	00000000 	andeq	r0, r0, r0
    a2d8:	02000000 	andeq	r0, r0, #0
    a2dc:	00107d00 	andseq	r7, r0, r0, lsl #26
	...
    a2f0:	01000000 	mrseq	r0, (UNDEF: 0)
    a2f4:	00005000 	andeq	r5, r0, r0
    a2f8:	00000000 	andeq	r0, r0, r0
    a2fc:	00010000 	andeq	r0, r1, r0
    a300:	00000054 	andeq	r0, r0, r4, asr r0
	...
    a314:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    a320:	00550001 	subseq	r0, r5, r1
    a324:	00000000 	andeq	r0, r0, r0
    a328:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    a334:	01000000 	mrseq	r0, (UNDEF: 0)
    a338:	00005000 	andeq	r5, r0, r0
    a33c:	00000000 	andeq	r0, r0, r0
    a340:	00010000 	andeq	r0, r1, r0
    a344:	00000054 	andeq	r0, r0, r4, asr r0
	...
    a358:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    a364:	01f30004 	mvnseq	r0, r4
    a368:	00009f50 	andeq	r9, r0, r0, asr pc
    a36c:	00000000 	andeq	r0, r0, r0
    a370:	00020000 	andeq	r0, r2, r0
	...
    a37c:	00010000 	andeq	r0, r1, r0
    a380:	00000050 	andeq	r0, r0, r0, asr r0
    a384:	00000000 	andeq	r0, r0, r0
    a388:	f3000400 	vshl.u8	d0, d0, d0
    a38c:	009f5001 	addseq	r5, pc, r1
	...
    a39c:	02000000 	andeq	r0, r0, #0
    a3a0:	00007d00 	andeq	r7, r0, r0, lsl #26
    a3a4:	00000000 	andeq	r0, r0, r0
    a3a8:	02000000 	andeq	r0, r0, #0
    a3ac:	00087d00 	andeq	r7, r8, r0, lsl #26
    a3b0:	00000000 	andeq	r0, r0, r0
    a3b4:	02000000 	andeq	r0, r0, #0
    a3b8:	00187d00 	andseq	r7, r8, r0, lsl #26
    a3bc:	00000000 	andeq	r0, r0, r0
    a3c0:	02000000 	andeq	r0, r0, #0
    a3c4:	00087d00 	andeq	r7, r8, r0, lsl #26
    a3c8:	00000000 	andeq	r0, r0, r0
    a3cc:	02000000 	andeq	r0, r0, #0
    a3d0:	00187d00 	andseq	r7, r8, r0, lsl #26
	...
    a3dc:	03030000 	movweq	r0, #12288	; 0x3000
	...
    a3f0:	01000000 	mrseq	r0, (UNDEF: 0)
    a3f4:	00005000 	andeq	r5, r0, r0
    a3f8:	00000000 	andeq	r0, r0, r0
    a3fc:	00020000 	andeq	r0, r2, r0
    a400:	00007091 	muleq	r0, r1, r0
    a404:	00000000 	andeq	r0, r0, r0
    a408:	00040000 	andeq	r0, r4, r0
    a40c:	9f5001f3 	svcls	0x005001f3
	...
    a418:	00500001 	subseq	r0, r0, r1
    a41c:	00000000 	andeq	r0, r0, r0
    a420:	02000000 	andeq	r0, r0, #0
    a424:	00709100 	rsbseq	r9, r0, r0, lsl #2
    a428:	00000000 	andeq	r0, r0, r0
    a42c:	04000000 	streq	r0, [r0], #-0
    a430:	5001f300 	andpl	pc, r1, r0, lsl #6
    a434:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    a438:	00000000 	andeq	r0, r0, r0
    a43c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    a448:	01f30004 	mvnseq	r0, r4
    a44c:	00009f50 	andeq	r9, r0, r0, asr pc
    a450:	00000000 	andeq	r0, r0, r0
    a454:	03000000 	movweq	r0, #0
    a458:	00000003 	andeq	r0, r0, r3
	...
    a468:	00010000 	andeq	r0, r1, r0
    a46c:	00000051 	andeq	r0, r0, r1, asr r0
    a470:	00000000 	andeq	r0, r0, r0
    a474:	f3000400 	vshl.u8	d0, d0, d0
    a478:	009f5101 	addseq	r5, pc, r1, lsl #2
    a47c:	00000000 	andeq	r0, r0, r0
    a480:	01000000 	mrseq	r0, (UNDEF: 0)
    a484:	00005100 	andeq	r5, r0, r0, lsl #2
    a488:	00000000 	andeq	r0, r0, r0
    a48c:	00020000 	andeq	r0, r2, r0
    a490:	00000071 	andeq	r0, r0, r1, ror r0
    a494:	00000000 	andeq	r0, r0, r0
    a498:	00040000 	andeq	r0, r4, r0
    a49c:	9f5101f3 	svcls	0x005101f3
	...
    a4a8:	00510001 	subseq	r0, r1, r1
	...
    a4b4:	00000303 	andeq	r0, r0, r3, lsl #6
	...
    a4c4:	01000000 	mrseq	r0, (UNDEF: 0)
    a4c8:	00005200 	andeq	r5, r0, r0, lsl #4
    a4cc:	00000000 	andeq	r0, r0, r0
    a4d0:	00040000 	andeq	r0, r4, r0
    a4d4:	9f5201f3 	svcls	0x005201f3
	...
    a4e0:	00520001 	subseq	r0, r2, r1
    a4e4:	00000000 	andeq	r0, r0, r0
    a4e8:	02000000 	andeq	r0, r0, #0
    a4ec:	006c9100 	rsbeq	r9, ip, r0, lsl #2
    a4f0:	00000000 	andeq	r0, r0, r0
    a4f4:	04000000 	streq	r0, [r0], #-0
    a4f8:	5201f300 	andpl	pc, r1, #0, 6
    a4fc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    a500:	00000000 	andeq	r0, r0, r0
    a504:	52000100 	andpl	r0, r0, #0, 2
	...
    a510:	03000000 	movweq	r0, #0
    a514:	00000003 	andeq	r0, r0, r3
	...
    a524:	00530001 	subseq	r0, r3, r1
    a528:	00000000 	andeq	r0, r0, r0
    a52c:	01000000 	mrseq	r0, (UNDEF: 0)
    a530:	00005c00 	andeq	r5, r0, r0, lsl #24
    a534:	00000000 	andeq	r0, r0, r0
    a538:	00040000 	andeq	r0, r4, r0
    a53c:	9f5301f3 	svcls	0x005301f3
	...
    a548:	005c0001 	subseq	r0, ip, r1
    a54c:	00000000 	andeq	r0, r0, r0
    a550:	04000000 	streq	r0, [r0], #-0
    a554:	5301f300 	movwpl	pc, #4864	; 0x1300	; <UNPREDICTABLE>
    a558:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    a55c:	00000000 	andeq	r0, r0, r0
    a560:	5c000100 	stfpls	f0, [r0], {-0}
	...
    a578:	00910002 	addseq	r0, r1, r2
	...
    a584:	00910002 	addseq	r0, r1, r2
	...
    a590:	00000301 	andeq	r0, r0, r1, lsl #6
	...
    a5a0:	9f300002 	svcls	0x00300002
	...
    a5ac:	9f300002 	svcls	0x00300002
	...
    a5b8:	00500001 	subseq	r0, r0, r1
    a5bc:	00000000 	andeq	r0, r0, r0
    a5c0:	02000000 	andeq	r0, r0, #0
    a5c4:	009f3000 	addseq	r3, pc, r0
	...
    a5d4:	02000000 	andeq	r0, r0, #0
    a5d8:	00007d00 	andeq	r7, r0, r0, lsl #26
    a5dc:	00000000 	andeq	r0, r0, r0
    a5e0:	02000000 	andeq	r0, r0, #0
    a5e4:	00047d00 	andeq	r7, r4, r0, lsl #26
    a5e8:	00000000 	andeq	r0, r0, r0
    a5ec:	02000000 	andeq	r0, r0, #0
    a5f0:	00187d00 	andseq	r7, r8, r0, lsl #26
    a5f4:	00000000 	andeq	r0, r0, r0
    a5f8:	02000000 	andeq	r0, r0, #0
    a5fc:	00047d00 	andeq	r7, r4, r0, lsl #26
    a600:	00000000 	andeq	r0, r0, r0
    a604:	02000000 	andeq	r0, r0, #0
    a608:	00187d00 	andseq	r7, r8, r0, lsl #26
    a60c:	00000000 	andeq	r0, r0, r0
    a610:	02000000 	andeq	r0, r0, #0
    a614:	00007d00 	andeq	r7, r0, r0, lsl #26
	...
    a620:	03030000 	movweq	r0, #12288	; 0x3000
	...
    a634:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    a640:	70910002 	addsvc	r0, r1, r2
	...
    a64c:	01f30004 	mvnseq	r0, r4
    a650:	00009f50 	andeq	r9, r0, r0, asr pc
    a654:	00000000 	andeq	r0, r0, r0
    a658:	00010000 	andeq	r0, r1, r0
    a65c:	00000050 	andeq	r0, r0, r0, asr r0
    a660:	00000000 	andeq	r0, r0, r0
    a664:	f3000400 	vshl.u8	d0, d0, d0
    a668:	009f5001 	addseq	r5, pc, r1
    a66c:	00000000 	andeq	r0, r0, r0
    a670:	01000000 	mrseq	r0, (UNDEF: 0)
    a674:	00005000 	andeq	r5, r0, r0
    a678:	00000000 	andeq	r0, r0, r0
    a67c:	00040000 	andeq	r0, r4, r0
    a680:	9f5001f3 	svcls	0x005001f3
	...
    a68c:	00030300 	andeq	r0, r3, r0, lsl #6
	...
    a69c:	00010000 	andeq	r0, r1, r0
    a6a0:	00000051 	andeq	r0, r0, r1, asr r0
    a6a4:	00000000 	andeq	r0, r0, r0
    a6a8:	f3000400 	vshl.u8	d0, d0, d0
    a6ac:	009f5101 	addseq	r5, pc, r1, lsl #2
    a6b0:	00000000 	andeq	r0, r0, r0
    a6b4:	01000000 	mrseq	r0, (UNDEF: 0)
    a6b8:	00005100 	andeq	r5, r0, r0, lsl #2
    a6bc:	00000000 	andeq	r0, r0, r0
    a6c0:	00040000 	andeq	r0, r4, r0
    a6c4:	9f5101f3 	svcls	0x005101f3
	...
    a6d0:	00510001 	subseq	r0, r1, r1
	...
    a6dc:	00000303 	andeq	r0, r0, r3, lsl #6
	...
    a6ec:	52000100 	andpl	r0, r0, #0, 2
	...
    a6f8:	01f30004 	mvnseq	r0, r4
    a6fc:	00009f52 	andeq	r9, r0, r2, asr pc
    a700:	00000000 	andeq	r0, r0, r0
    a704:	00010000 	andeq	r0, r1, r0
    a708:	00000052 	andeq	r0, r0, r2, asr r0
    a70c:	00000000 	andeq	r0, r0, r0
    a710:	f3000400 	vshl.u8	d0, d0, d0
    a714:	009f5201 	addseq	r5, pc, r1, lsl #4
    a718:	00000000 	andeq	r0, r0, r0
    a71c:	01000000 	mrseq	r0, (UNDEF: 0)
    a720:	00005200 	andeq	r5, r0, r0, lsl #4
	...
    a734:	00010000 	andeq	r0, r1, r0
    a738:	00000053 	andeq	r0, r0, r3, asr r0
    a73c:	00000000 	andeq	r0, r0, r0
    a740:	f3000400 	vshl.u8	d0, d0, d0
    a744:	009f5301 	addseq	r5, pc, r1, lsl #6
	...
    a758:	02000000 	andeq	r0, r0, #0
    a75c:	00009100 	andeq	r9, r0, r0, lsl #2
    a760:	00000000 	andeq	r0, r0, r0
    a764:	02000000 	andeq	r0, r0, #0
    a768:	00009100 	andeq	r9, r0, r0, lsl #2
    a76c:	00000000 	andeq	r0, r0, r0
    a770:	02000000 	andeq	r0, r0, #0
    a774:	00000003 	andeq	r0, r0, r3
	...
    a784:	02000000 	andeq	r0, r0, #0
    a788:	009f3000 	addseq	r3, pc, r0
    a78c:	00000000 	andeq	r0, r0, r0
    a790:	02000000 	andeq	r0, r0, #0
    a794:	009f3000 	addseq	r3, pc, r0
    a798:	00000000 	andeq	r0, r0, r0
    a79c:	01000000 	mrseq	r0, (UNDEF: 0)
    a7a0:	00005000 	andeq	r5, r0, r0
    a7a4:	00000000 	andeq	r0, r0, r0
    a7a8:	00020000 	andeq	r0, r2, r0
    a7ac:	00009f30 	andeq	r9, r0, r0, lsr pc
    a7b0:	00000000 	andeq	r0, r0, r0
    a7b4:	00010000 	andeq	r0, r1, r0
    a7b8:	00000050 	andeq	r0, r0, r0, asr r0
    a7bc:	00000000 	andeq	r0, r0, r0
    a7c0:	30000200 	andcc	r0, r0, r0, lsl #4
    a7c4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    a7d4:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    a7e0:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    a7e4:	00000018 	andeq	r0, r0, r8, lsl r0
	...
    a7f8:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    a804:	00580001 	subseq	r0, r8, r1
	...
    a818:	01000000 	mrseq	r0, (UNDEF: 0)
    a81c:	00005100 	andeq	r5, r0, r0, lsl #2
    a820:	00000000 	andeq	r0, r0, r0
    a824:	00010000 	andeq	r0, r1, r0
    a828:	00000057 	andeq	r0, r0, r7, asr r0
	...
    a83c:	52000100 	andpl	r0, r0, #0, 2
	...
    a848:	00550001 	subseq	r0, r5, r1
	...
    a85c:	01000000 	mrseq	r0, (UNDEF: 0)
    a860:	00005300 	andeq	r5, r0, r0, lsl #6
    a864:	00000000 	andeq	r0, r0, r0
    a868:	00010000 	andeq	r0, r1, r0
    a86c:	00000056 	andeq	r0, r0, r6, asr r0
	...
    a87c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    a888:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    a88c:	0000000c 	andeq	r0, r0, ip
    a890:	00000000 	andeq	r0, r0, r0
    a894:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    a898:	00000018 	andeq	r0, r0, r8, lsl r0
    a89c:	00000000 	andeq	r0, r0, r0
    a8a0:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    a8a4:	0000000c 	andeq	r0, r0, ip
	...
    a8b8:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    a8c4:	01f30004 	mvnseq	r0, r4
    a8c8:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    a8dc:	00010000 	andeq	r0, r1, r0
    a8e0:	00000051 	andeq	r0, r0, r1, asr r0
    a8e4:	00000000 	andeq	r0, r0, r0
    a8e8:	f3000400 	vshl.u8	d0, d0, d0
    a8ec:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
    a900:	01000000 	mrseq	r0, (UNDEF: 0)
    a904:	00005200 	andeq	r5, r0, r0, lsl #4
    a908:	00000000 	andeq	r0, r0, r0
    a90c:	00040000 	andeq	r0, r4, r0
    a910:	9f5201f3 	svcls	0x005201f3
	...
    a928:	00530001 	subseq	r0, r3, r1
    a92c:	00000000 	andeq	r0, r0, r0
    a930:	04000000 	streq	r0, [r0], #-0
    a934:	5301f300 	movwpl	pc, #4864	; 0x1300	; <UNPREDICTABLE>
    a938:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    a93c:	00000000 	andeq	r0, r0, r0
    a940:	00000400 	andeq	r0, r0, r0, lsl #8
    a944:	00000000 	andeq	r0, r0, r0
    a948:	01000000 	mrseq	r0, (UNDEF: 0)
    a94c:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    a95c:	00020000 	andeq	r0, r2, r0
    a960:	0000007d 	andeq	r0, r0, sp, ror r0
    a964:	00000000 	andeq	r0, r0, r0
    a968:	00020000 	andeq	r0, r2, r0
    a96c:	0000187d 	andeq	r1, r0, sp, ror r8
    a970:	00000000 	andeq	r0, r0, r0
    a974:	00020000 	andeq	r0, r2, r0
    a978:	0000207d 	andeq	r2, r0, sp, ror r0
    a97c:	00000000 	andeq	r0, r0, r0
    a980:	00020000 	andeq	r0, r2, r0
    a984:	0000187d 	andeq	r1, r0, sp, ror r8
	...
    a998:	00010000 	andeq	r0, r1, r0
    a99c:	00000050 	andeq	r0, r0, r0, asr r0
    a9a0:	00000000 	andeq	r0, r0, r0
    a9a4:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    a9bc:	00510001 	subseq	r0, r1, r1
    a9c0:	00000000 	andeq	r0, r0, r0
    a9c4:	01000000 	mrseq	r0, (UNDEF: 0)
    a9c8:	00005800 	andeq	r5, r0, r0, lsl #16
	...
    a9dc:	00010000 	andeq	r0, r1, r0
    a9e0:	00000052 	andeq	r0, r0, r2, asr r0
    a9e4:	00000000 	andeq	r0, r0, r0
    a9e8:	57000100 	strpl	r0, [r0, -r0, lsl #2]
	...
    aa00:	00530001 	subseq	r0, r3, r1
    aa04:	00000000 	andeq	r0, r0, r0
    aa08:	01000000 	mrseq	r0, (UNDEF: 0)
    aa0c:	00005500 	andeq	r5, r0, r0, lsl #10
	...
    aa20:	00010000 	andeq	r0, r1, r0
    aa24:	00000050 	andeq	r0, r0, r0, asr r0
    aa28:	00000000 	andeq	r0, r0, r0
    aa2c:	56000100 	strpl	r0, [r0], -r0, lsl #2
	...
    aa38:	100032b8 			; <UNDEFINED> instruction: 0x100032b8
    aa3c:	100032ba 			; <UNDEFINED> instruction: 0x100032ba
    aa40:	007d0002 	rsbseq	r0, sp, r2
    aa44:	100032ba 			; <UNDEFINED> instruction: 0x100032ba
    aa48:	100032bc 			; <UNDEFINED> instruction: 0x100032bc
    aa4c:	087d0002 	ldmdaeq	sp!, {r1}^
    aa50:	100032bc 			; <UNDEFINED> instruction: 0x100032bc
    aa54:	10003300 	andne	r3, r0, r0, lsl #6
    aa58:	287d0002 	ldmdacs	sp!, {r1}^
    aa5c:	10003300 	andne	r3, r0, r0, lsl #6
    aa60:	10003314 	andne	r3, r0, r4, lsl r3
    aa64:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    aa70:	00000001 	andeq	r0, r0, r1
    aa74:	32bc0400 	adcscc	r0, ip, #0, 8
    aa78:	32f61000 	rscscc	r1, r6, #0
    aa7c:	00021000 	andeq	r1, r2, r0
    aa80:	32f69f30 	rscscc	r9, r6, #48, 30	; 0xc0
    aa84:	32f81000 	rscscc	r1, r8, #0
    aa88:	00021000 	andeq	r1, r2, r0
    aa8c:	32f89f31 	rscscc	r9, r8, #49, 30	; 0xc4
    aa90:	32fe1000 	rscscc	r1, lr, #0
    aa94:	00021000 	andeq	r1, r2, r0
    aa98:	00009f30 	andeq	r9, r0, r0, lsr pc
	...
    aaa8:	00020000 	andeq	r0, r2, r0
    aaac:	0000007d 	andeq	r0, r0, sp, ror r0
    aab0:	00000000 	andeq	r0, r0, r0
    aab4:	00020000 	andeq	r0, r2, r0
    aab8:	0000187d 	andeq	r1, r0, sp, ror r8
	...
    aacc:	00010000 	andeq	r0, r1, r0
    aad0:	00000050 	andeq	r0, r0, r0, asr r0
    aad4:	00000000 	andeq	r0, r0, r0
    aad8:	57000100 	strpl	r0, [r0, -r0, lsl #2]
	...
    aaf0:	00530001 	subseq	r0, r3, r1
    aaf4:	00000000 	andeq	r0, r0, r0
    aaf8:	01000000 	mrseq	r0, (UNDEF: 0)
    aafc:	00005300 	andeq	r5, r0, r0, lsl #6
    ab00:	00000000 	andeq	r0, r0, r0
    ab04:	00020000 	andeq	r0, r2, r0
	...
    ab10:	00020000 	andeq	r0, r2, r0
    ab14:	00009f30 	andeq	r9, r0, r0, lsr pc
    ab18:	00000000 	andeq	r0, r0, r0
    ab1c:	00010000 	andeq	r0, r1, r0
    ab20:	00000054 	andeq	r0, r0, r4, asr r0
    ab24:	00000000 	andeq	r0, r0, r0
    ab28:	00000200 	andeq	r0, r0, r0, lsl #4
	...
    ab34:	30000200 	andcc	r0, r0, r0, lsl #4
    ab38:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    ab3c:	00000000 	andeq	r0, r0, r0
    ab40:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    ab4c:	00000002 	andeq	r0, r0, r2
	...
    ab58:	ff090003 			; <UNDEFINED> instruction: 0xff090003
    ab5c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    ab60:	00000000 	andeq	r0, r0, r0
    ab64:	56000100 	strpl	r0, [r0], -r0, lsl #2
	...
    ab70:	1000336c 	andne	r3, r0, ip, ror #6
    ab74:	100033a0 	andne	r3, r0, r0, lsr #7
    ab78:	007d0002 	rsbseq	r0, sp, r2
    ab7c:	100033a0 	andne	r3, r0, r0, lsr #7
    ab80:	100033be 			; <UNDEFINED> instruction: 0x100033be
    ab84:	047d0002 	ldrbteq	r0, [sp], #-2
    ab88:	100033be 			; <UNDEFINED> instruction: 0x100033be
    ab8c:	100033c0 	andne	r3, r0, r0, asr #7
    ab90:	007d0002 	rsbseq	r0, sp, r2
    ab94:	100033c0 	andne	r3, r0, r0, asr #7
    ab98:	100033c4 	andne	r3, r0, r4, asr #7
    ab9c:	047d0002 	ldrbteq	r0, [sp], #-2
    aba0:	100033c4 	andne	r3, r0, r4, asr #7
    aba4:	100033d0 	ldrdne	r3, [r0], -r0
    aba8:	007d0002 	rsbseq	r0, sp, r2
	...
    abb4:	01000000 	mrseq	r0, (UNDEF: 0)
    abb8:	00000001 	andeq	r0, r0, r1
    abbc:	1000336c 	andne	r3, r0, ip, ror #6
    abc0:	10003396 	mulne	r0, r6, r3
    abc4:	96500001 	ldrbls	r0, [r0], -r1
    abc8:	9a100033 	bls	40ac9c <__RAM_SIZE+0x30ac9c>
    abcc:	04100033 	ldreq	r0, [r0], #-51	; 0xffffffcd
    abd0:	5001f300 	andpl	pc, r1, r0, lsl #6
    abd4:	00339a9f 	mlaseq	r3, pc, sl, r9	; <UNPREDICTABLE>
    abd8:	00339e10 	eorseq	r9, r3, r0, lsl lr
    abdc:	52000110 	andpl	r0, r0, #16, 2
    abe0:	1000339e 	mulne	r0, lr, r3
    abe4:	100033d0 	ldrdne	r3, [r0], -r0
    abe8:	00500001 	subseq	r0, r0, r1
    abec:	00000000 	andeq	r0, r0, r0
    abf0:	04000000 	streq	r0, [r0], #-0
    abf4:	00000000 	andeq	r0, r0, r0
    abf8:	00336c00 	eorseq	r6, r3, r0, lsl #24
    abfc:	00336e10 	eorseq	r6, r3, r0, lsl lr
    ac00:	03000610 	movweq	r0, #1552	; 0x610
    ac04:	38008d00 	stmdacc	r0, {r8, sl, fp, pc}
    ac08:	00336e9f 	mlaseq	r3, pc, lr, r6	; <UNPREDICTABLE>
    ac0c:	00337210 	eorseq	r7, r3, r0, lsl r2
    ac10:	53000110 	movwpl	r0, #272	; 0x110
    ac14:	10003372 	andne	r3, r0, r2, ror r3
    ac18:	100033d0 	ldrdne	r3, [r0], -r0
    ac1c:	00520001 	subseq	r0, r2, r1
    ac20:	00000000 	andeq	r0, r0, r0
    ac24:	03000000 	movweq	r0, #0
    ac28:	00000202 	andeq	r0, r0, r2, lsl #4
    ac2c:	76000000 	strvc	r0, [r0], -r0
    ac30:	80100033 	andshi	r0, r0, r3, lsr r0
    ac34:	01100033 	tsteq	r0, r3, lsr r0
    ac38:	33805200 	orrcc	r5, r0, #0, 4
    ac3c:	33941000 	orrscc	r1, r4, #0
    ac40:	00011000 	andeq	r1, r1, r0
    ac44:	00339450 	eorseq	r9, r3, r0, asr r4
    ac48:	00339e10 	eorseq	r9, r3, r0, lsl lr
    ac4c:	52000110 	andpl	r0, r0, #16, 2
    ac50:	1000339e 	mulne	r0, lr, r3
    ac54:	100033d0 	ldrdne	r3, [r0], -r0
    ac58:	00500001 	subseq	r0, r0, r1
    ac5c:	00000000 	andeq	r0, r0, r0
    ac60:	01000000 	mrseq	r0, (UNDEF: 0)
    ac64:	00334200 	eorseq	r4, r3, r0, lsl #4
    ac68:	00335210 	eorseq	r5, r3, r0, lsl r2
    ac6c:	52000110 	andpl	r0, r0, #16, 2
	...
    ac7c:	1000331e 	andne	r3, r0, lr, lsl r3
    ac80:	1000332a 	andne	r3, r0, sl, lsr #6
    ac84:	2a510001 	bcs	144ac90 <__RAM_SIZE+0x134ac90>
    ac88:	52100033 	andspl	r0, r0, #51	; 0x33
    ac8c:	01100033 	tsteq	r0, r3, lsr r0
    ac90:	00005200 	andeq	r5, r0, r0, lsl #4
	...
    ac9c:	33340000 	teqcc	r4, #0
    aca0:	334a1000 	movtcc	r1, #40960	; 0xa000
    aca4:	00011000 	andeq	r1, r1, r0
    aca8:	00334a53 	eorseq	r4, r3, r3, asr sl
    acac:	00335210 	eorseq	r5, r3, r0, lsl r2
    acb0:	72000210 	andvc	r0, r0, #16, 4
	...
    acbc:	00000400 	andeq	r0, r0, r0, lsl #8
    acc0:	14000000 	strne	r0, [r0], #-0
    acc4:	28100033 	ldmdacs	r0, {r0, r1, r4, r5}
    acc8:	04100033 	ldreq	r0, [r0], #-51	; 0xffffffcd
    accc:	80000a00 	andhi	r0, r0, r0, lsl #20
    acd0:	0033289f 	mlaseq	r3, pc, r8, r2	; <UNPREDICTABLE>
    acd4:	00333410 	eorseq	r3, r3, r0, lsl r4
    acd8:	53000110 	movwpl	r0, #272	; 0x110
    acdc:	10003352 	andne	r3, r0, r2, asr r3
    ace0:	1000336c 	andne	r3, r0, ip, ror #6
    ace4:	000a0004 	andeq	r0, sl, r4
    ace8:	00009f80 	andeq	r9, r0, r0, lsl #31
	...
    acf8:	00020000 	andeq	r0, r2, r0
    acfc:	0000007d 	andeq	r0, r0, sp, ror r0
    ad00:	00000000 	andeq	r0, r0, r0
    ad04:	00020000 	andeq	r0, r2, r0
    ad08:	0000107d 	andeq	r1, r0, sp, ror r0
	...
    ad20:	00010000 	andeq	r0, r1, r0
    ad24:	00000050 	andeq	r0, r0, r0, asr r0
    ad28:	00000000 	andeq	r0, r0, r0
    ad2c:	53000100 	movwpl	r0, #256	; 0x100
	...
    ad38:	01f30004 	mvnseq	r0, r4
    ad3c:	00009f50 	andeq	r9, r0, r0, asr pc
    ad40:	00000000 	andeq	r0, r0, r0
    ad44:	00010000 	andeq	r0, r1, r0
    ad48:	00000053 	andeq	r0, r0, r3, asr r0
	...
    ad5c:	01000000 	mrseq	r0, (UNDEF: 0)
    ad60:	00005100 	andeq	r5, r0, r0, lsl #2
    ad64:	00000000 	andeq	r0, r0, r0
    ad68:	00040000 	andeq	r0, r4, r0
    ad6c:	9f5101f3 	svcls	0x005101f3
	...
    ad78:	00510001 	subseq	r0, r1, r1
    ad7c:	00000000 	andeq	r0, r0, r0
    ad80:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    ad90:	02000000 	andeq	r0, r0, #0
    ad94:	009f3000 	addseq	r3, pc, r0
    ad98:	00000000 	andeq	r0, r0, r0
    ad9c:	01000000 	mrseq	r0, (UNDEF: 0)
    ada0:	00005000 	andeq	r5, r0, r0
    ada4:	00000000 	andeq	r0, r0, r0
    ada8:	00010000 	andeq	r0, r1, r0
    adac:	00000055 	andeq	r0, r0, r5, asr r0
    adb0:	00000000 	andeq	r0, r0, r0
    adb4:	30000200 	andcc	r0, r0, r0, lsl #4
    adb8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    adbc:	00000000 	andeq	r0, r0, r0
    adc0:	0034a400 	eorseq	sl, r4, r0, lsl #8
    adc4:	0034a810 	eorseq	sl, r4, r0, lsl r8
    adc8:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    adcc:	0034a800 	eorseq	sl, r4, r0, lsl #16
    add0:	0034ea10 	eorseq	lr, r4, r0, lsl sl
    add4:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    add8:	0034ea10 	eorseq	lr, r4, r0, lsl sl
    addc:	0034f410 	eorseq	pc, r4, r0, lsl r4	; <UNPREDICTABLE>
    ade0:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
	...
    adf4:	a4000000 	strge	r0, [r0], #-0
    adf8:	bc100034 	ldclt	0, cr0, [r0], {52}	; 0x34
    adfc:	01100034 	tsteq	r0, r4, lsr r0
    ae00:	34bc5000 	ldrtcc	r5, [ip], #0
    ae04:	34be1000 	ldrtcc	r1, [lr], #0
    ae08:	00011000 	andeq	r1, r1, r0
    ae0c:	0034be54 	eorseq	fp, r4, r4, asr lr
    ae10:	0034c910 	eorseq	ip, r4, r0, lsl r9
    ae14:	50000110 	andpl	r0, r0, r0, lsl r1
    ae18:	100034c9 	andne	r3, r0, r9, asr #9
    ae1c:	100034ea 	andne	r3, r0, sl, ror #9
    ae20:	ea540001 	b	150ae2c <__RAM_SIZE+0x140ae2c>
    ae24:	f4100034 			; <UNDEFINED> instruction: 0xf4100034
    ae28:	01100034 	tsteq	r0, r4, lsr r0
    ae2c:	00005000 	andeq	r5, r0, r0
    ae30:	00000000 	andeq	r0, r0, r0
    ae34:	00020000 	andeq	r0, r2, r0
    ae38:	00000000 	andeq	r0, r0, r0
    ae3c:	100034a4 	andne	r3, r0, r4, lsr #9
    ae40:	100034ae 	andne	r3, r0, lr, lsr #9
    ae44:	ae500001 	cdpge	0, 5, cr0, cr0, cr1, {0}
    ae48:	ea100034 	b	40af20 <__RAM_SIZE+0x30af20>
    ae4c:	01100034 	tsteq	r0, r4, lsr r0
    ae50:	34ea5500 	strbtcc	r5, [sl], #1280	; 0x500
    ae54:	34f41000 	ldrbtcc	r1, [r4], #0
    ae58:	00011000 	andeq	r1, r1, r0
    ae5c:	00000050 	andeq	r0, r0, r0, asr r0
    ae60:	00000000 	andeq	r0, r0, r0
    ae64:	ae000100 	adfges	f0, f0, f0
    ae68:	ea100034 	b	40af40 <__RAM_SIZE+0x30af40>
    ae6c:	01100034 	tsteq	r0, r4, lsr r0
    ae70:	00005500 	andeq	r5, r0, r0, lsl #10
    ae74:	00000000 	andeq	r0, r0, r0
    ae78:	33d00000 	bicscc	r0, r0, #0
    ae7c:	33d21000 	bicscc	r1, r2, #0
    ae80:	00021000 	andeq	r1, r2, r0
    ae84:	33d2007d 	bicscc	r0, r2, #125	; 0x7d
    ae88:	34a41000 	strtcc	r1, [r4], #0
    ae8c:	00021000 	andeq	r1, r2, r0
    ae90:	0000107d 	andeq	r1, r0, sp, ror r0
	...
    aea4:	33d00000 	bicscc	r0, r0, #0
    aea8:	33de1000 	bicscc	r1, lr, #0
    aeac:	00011000 	andeq	r1, r1, r0
    aeb0:	0033de50 	eorseq	sp, r3, r0, asr lr
    aeb4:	0033f210 	eorseq	pc, r3, r0, lsl r2	; <UNPREDICTABLE>
    aeb8:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    aebc:	100033f2 	strdne	r3, [r0], -r2
    aec0:	100033f4 	strdne	r3, [r0], -r4
    aec4:	f4500001 			; <UNDEFINED> instruction: 0xf4500001
    aec8:	16100033 			; <UNDEFINED> instruction: 0x16100033
    aecc:	01100034 	tsteq	r0, r4, lsr r0
    aed0:	34165400 	ldrcc	r5, [r6], #-1024	; 0xfffffc00
    aed4:	34181000 	ldrcc	r1, [r8], #-0
    aed8:	00031000 	andeq	r1, r3, r0
    aedc:	189f0870 	ldmne	pc, {r4, r5, r6, fp}	; <UNPREDICTABLE>
    aee0:	a4100034 	ldrge	r0, [r0], #-52	; 0xffffffcc
    aee4:	01100034 	tsteq	r0, r4, lsr r0
    aee8:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    aef8:	10003412 	andne	r3, r0, r2, lsl r4
    aefc:	10003414 	andne	r3, r0, r4, lsl r4
    af00:	1e530001 	cdpne	0, 5, cr0, cr3, cr1, {0}
    af04:	74100034 	ldrvc	r0, [r0], #-52	; 0xffffffcc
    af08:	01100034 	tsteq	r0, r4, lsr r0
    af0c:	348c5300 	strcc	r5, [ip], #768	; 0x300
    af10:	34a41000 	strtcc	r1, [r4], #0
    af14:	00011000 	andeq	r1, r1, r0
    af18:	00000053 	andeq	r0, r0, r3, asr r0
    af1c:	00000000 	andeq	r0, r0, r0
    af20:	00000100 	andeq	r0, r0, r0, lsl #2
    af24:	00000000 	andeq	r0, r0, r0
    af28:	00340e00 	eorseq	r0, r4, r0, lsl #28
    af2c:	00341410 	eorseq	r1, r4, r0, lsl r4
    af30:	03000610 	movweq	r0, #1552	; 0x610
    af34:	38008d00 	stmdacc	r0, {r8, sl, fp, pc}
    af38:	00341e9f 	mlaseq	r4, pc, lr, r1	; <UNPREDICTABLE>
    af3c:	00342010 	eorseq	r2, r4, r0, lsl r0
    af40:	51000110 	tstpl	r0, r0, lsl r1
    af44:	10003422 	andne	r3, r0, r2, lsr #8
    af48:	10003454 	andne	r3, r0, r4, asr r4
    af4c:	8c510001 	mrrchi	0, 0, r0, r1, cr1
    af50:	a4100034 	ldrge	r0, [r0], #-52	; 0xffffffcc
    af54:	01100034 	tsteq	r0, r4, lsr r0
    af58:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    af64:	10003448 	andne	r3, r0, r8, asr #8
    af68:	10003452 	andne	r3, r0, r2, asr r4
    af6c:	00520001 	subseq	r0, r2, r1
    af70:	00000000 	andeq	r0, r0, r0
    af74:	04000000 	streq	r0, [r0], #-0
    af78:	00000000 	andeq	r0, r0, r0
    af7c:	0033d200 	eorseq	sp, r3, r0, lsl #4
    af80:	00343a10 	eorseq	r3, r4, r0, lsl sl
    af84:	30000210 	andcc	r0, r0, r0, lsl r2
    af88:	00343a9f 	mlaseq	r4, pc, sl, r3	; <UNPREDICTABLE>
    af8c:	00348010 	eorseq	r8, r4, r0, lsl r0
    af90:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
    af94:	10003480 	andne	r3, r0, r0, lsl #9
    af98:	100034a4 	andne	r3, r0, r4, lsr #9
    af9c:	9f300002 	svcls	0x00300002
	...
    afac:	100033e8 	andne	r3, r0, r8, ror #7
    afb0:	100033f2 	strdne	r3, [r0], -r2
    afb4:	14530001 	ldrbne	r0, [r3], #-1
    afb8:	18100034 	ldmdane	r0, {r2, r4, r5}
    afbc:	01100034 	tsteq	r0, r4, lsr r0
    afc0:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    afd4:	00530001 	subseq	r0, r3, r1
    afd8:	00000000 	andeq	r0, r0, r0
    afdc:	74000000 	strvc	r0, [r0], #-0
    afe0:	76100037 			; <UNDEFINED> instruction: 0x76100037
    afe4:	02100037 	andseq	r0, r0, #55	; 0x37
    afe8:	76007d00 	strvc	r7, [r0], -r0, lsl #26
    afec:	b4100037 	ldrlt	r0, [r0], #-55	; 0xffffffc9
    aff0:	02100037 	andseq	r0, r0, #55	; 0x37
    aff4:	00087d00 	andeq	r7, r8, r0, lsl #26
    aff8:	00000000 	andeq	r0, r0, r0
    affc:	e4000000 	str	r0, [r0], #-0
    b000:	e6100036 			; <UNDEFINED> instruction: 0xe6100036
    b004:	02100036 	andseq	r0, r0, #54	; 0x36
    b008:	e6007d00 	str	r7, [r0], -r0, lsl #26
    b00c:	6e100036 	mrcvs	0, 0, r0, cr0, cr6, {1}
    b010:	02100037 	andseq	r0, r0, #55	; 0x37
    b014:	6e047d00 	cdpvs	13, 0, cr7, cr4, cr0, {0}
    b018:	74100037 	ldrvc	r0, [r0], #-55	; 0xffffffc9
    b01c:	02100037 	andseq	r0, r0, #55	; 0x37
    b020:	00007d00 	andeq	r7, r0, r0, lsl #26
	...
    b02c:	01010101 	tsteq	r1, r1, lsl #2
    b030:	01010101 	tsteq	r1, r1, lsl #2
    b034:	01010101 	tsteq	r1, r1, lsl #2
    b038:	01010101 	tsteq	r1, r1, lsl #2
    b03c:	01010101 	tsteq	r1, r1, lsl #2
    b040:	01010101 	tsteq	r1, r1, lsl #2
    b044:	01010101 	tsteq	r1, r1, lsl #2
    b048:	01010101 	tsteq	r1, r1, lsl #2
    b04c:	01010101 	tsteq	r1, r1, lsl #2
    b050:	e4000000 	str	r0, [r0], #-0
    b054:	e6100036 			; <UNDEFINED> instruction: 0xe6100036
    b058:	01100036 	tsteq	r0, r6, lsr r0
    b05c:	36e65000 	strbtcc	r5, [r6], r0
    b060:	36ee1000 	strbtcc	r1, [lr], r0
    b064:	00031000 	andeq	r1, r3, r0
    b068:	ee9f7c70 	mrc	12, 4, r7, cr15, cr0, {3}
    b06c:	f2100036 	vqadd.s16	d0, d0, d22
    b070:	03100036 	tsteq	r0, #54	; 0x36
    b074:	9f787000 	svcls	0x00787000
    b078:	100036f2 	strdne	r3, [r0], -r2
    b07c:	100036f8 	strdne	r3, [r0], -r8
    b080:	74700003 	ldrbtvc	r0, [r0], #-3
    b084:	0036f89f 	mlaseq	r6, pc, r8, pc	; <UNPREDICTABLE>
    b088:	00370010 	eorseq	r0, r7, r0, lsl r0
    b08c:	70000310 	andvc	r0, r0, r0, lsl r3
    b090:	37009f70 	smlsdxcc	r0, r0, pc, r9	; <UNPREDICTABLE>
    b094:	37081000 	strcc	r1, [r8, -r0]
    b098:	00031000 	andeq	r1, r3, r0
    b09c:	089f6c70 	ldmeq	pc, {r4, r5, r6, sl, fp, sp, lr}	; <UNPREDICTABLE>
    b0a0:	10100037 	andsne	r0, r0, r7, lsr r0
    b0a4:	03100037 	tsteq	r0, #55	; 0x37
    b0a8:	9f687000 	svcls	0x00687000
    b0ac:	10003710 	andne	r3, r0, r0, lsl r7
    b0b0:	10003718 	andne	r3, r0, r8, lsl r7
    b0b4:	64700003 	ldrbtvs	r0, [r0], #-3
    b0b8:	0037189f 	mlaseq	r7, pc, r8, r1	; <UNPREDICTABLE>
    b0bc:	00371c10 	eorseq	r1, r7, r0, lsl ip
    b0c0:	70000310 	andvc	r0, r0, r0, lsl r3
    b0c4:	371c9f60 	ldrcc	r9, [ip, -r0, ror #30]
    b0c8:	37241000 	strcc	r1, [r4, -r0]!
    b0cc:	00031000 	andeq	r1, r3, r0
    b0d0:	249f5c70 	ldrcs	r5, [pc], #3184	; b0d8 <__HEAP_SIZE+0xa0d8>
    b0d4:	2c100037 	ldccs	0, cr0, [r0], {55}	; 0x37
    b0d8:	03100037 	tsteq	r0, #55	; 0x37
    b0dc:	9f587000 	svcls	0x00587000
    b0e0:	1000372c 	andne	r3, r0, ip, lsr #14
    b0e4:	10003734 	andne	r3, r0, r4, lsr r7
    b0e8:	54700003 	ldrbtpl	r0, [r0], #-3
    b0ec:	0037349f 	mlaseq	r7, pc, r4, r3	; <UNPREDICTABLE>
    b0f0:	00373c10 	eorseq	r3, r7, r0, lsl ip
    b0f4:	70000310 	andvc	r0, r0, r0, lsl r3
    b0f8:	373c9f50 			; <UNDEFINED> instruction: 0x373c9f50
    b0fc:	37441000 	strbcc	r1, [r4, -r0]
    b100:	00031000 	andeq	r1, r3, r0
    b104:	449f4c70 	ldrmi	r4, [pc], #3184	; b10c <__HEAP_SIZE+0xa10c>
    b108:	4c100037 	ldcmi	0, cr0, [r0], {55}	; 0x37
    b10c:	03100037 	tsteq	r0, #55	; 0x37
    b110:	9f487000 	svcls	0x00487000
    b114:	1000374c 	andne	r3, r0, ip, asr #14
    b118:	10003754 	andne	r3, r0, r4, asr r7
    b11c:	44700003 	ldrbtmi	r0, [r0], #-3
    b120:	0037549f 	mlaseq	r7, pc, r4, r5	; <UNPREDICTABLE>
    b124:	00375c10 	eorseq	r5, r7, r0, lsl ip
    b128:	70000310 	andvc	r0, r0, r0, lsl r3
    b12c:	375c9f40 	ldrbcc	r9, [ip, -r0, asr #30]
    b130:	37641000 	strbcc	r1, [r4, -r0]!
    b134:	00041000 	andeq	r1, r4, r0
    b138:	9f7fbc70 	svcls	0x007fbc70
    b13c:	10003764 	andne	r3, r0, r4, ror #14
    b140:	1000376a 	andne	r3, r0, sl, ror #14
    b144:	b8700004 	ldmdalt	r0!, {r2}^
    b148:	376a9f7f 			; <UNDEFINED> instruction: 0x376a9f7f
    b14c:	37741000 	ldrbcc	r1, [r4, -r0]!
    b150:	00011000 	andeq	r1, r1, r0
    b154:	00000050 	andeq	r0, r0, r0, asr r0
	...
    b160:	e4000000 	str	r0, [r0], #-0
    b164:	f4100036 			; <UNDEFINED> instruction: 0xf4100036
    b168:	01100036 	tsteq	r0, r6, lsr r0
    b16c:	36f45200 	ldrbtcc	r5, [r4], r0, lsl #4
    b170:	376a1000 	strbcc	r1, [sl, -r0]!
    b174:	00021000 	andeq	r1, r2, r0
    b178:	376a7870 			; <UNDEFINED> instruction: 0x376a7870
    b17c:	37741000 	ldrbcc	r1, [r4, -r0]!
    b180:	00031000 	andeq	r1, r3, r0
    b184:	0000c070 	andeq	ip, r0, r0, ror r0
	...
    b194:	0036e400 	eorseq	lr, r6, r0, lsl #8
    b198:	00372010 	eorseq	r2, r7, r0, lsl r0
    b19c:	53000110 	movwpl	r0, #272	; 0x110
    b1a0:	10003720 	andne	r3, r0, r0, lsr #14
    b1a4:	1000376a 	andne	r3, r0, sl, ror #14
    b1a8:	60700002 	rsbsvs	r0, r0, r2
    b1ac:	1000376a 	andne	r3, r0, sl, ror #14
    b1b0:	10003774 	andne	r3, r0, r4, ror r7
    b1b4:	28700002 	ldmdacs	r0!, {r1}^
	...
    b1c0:	100036ce 	andne	r3, r0, lr, asr #13
    b1c4:	100036d0 	ldrdne	r3, [r0], -r0
    b1c8:	007d0002 	rsbseq	r0, sp, r2
    b1cc:	100036d0 	ldrdne	r3, [r0], -r0
    b1d0:	100036e2 	andne	r3, r0, r2, ror #13
    b1d4:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    b1e8:	100036ce 	andne	r3, r0, lr, asr #13
    b1ec:	100036da 	ldrdne	r3, [r0], -sl
    b1f0:	da500001 	ble	140b1fc <__RAM_SIZE+0x130b1fc>
    b1f4:	dc100036 	ldcle	0, cr0, [r0], {54}	; 0x36
    b1f8:	04100036 	ldreq	r0, [r0], #-54	; 0xffffffca
    b1fc:	5001f300 	andpl	pc, r1, r0, lsl #6
    b200:	0036dc9f 	mlaseq	r6, pc, ip, sp	; <UNPREDICTABLE>
    b204:	0036df10 	eorseq	sp, r6, r0, lsl pc
    b208:	50000110 	andpl	r0, r0, r0, lsl r1
    b20c:	100036df 	ldrdne	r3, [r0], -pc	; <UNPREDICTABLE>
    b210:	100036e2 	andne	r3, r0, r2, ror #13
    b214:	01f30004 	mvnseq	r0, r4
    b218:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    b228:	100036d2 	ldrdne	r3, [r0], -r2
    b22c:	100036d6 	ldrdne	r3, [r0], -r6
    b230:	d6530001 	ldrble	r0, [r3], -r1
    b234:	da100036 	ble	40b314 <__RAM_SIZE+0x30b314>
    b238:	02100036 	andseq	r0, r0, #54	; 0x36
    b23c:	dc187000 	ldcle	0, cr7, [r8], {-0}
    b240:	df100036 	svcle	0x00100036
    b244:	02100036 	andseq	r0, r0, #54	; 0x36
    b248:	00187000 	andseq	r7, r8, r0
	...
    b254:	d6000000 	strle	r0, [r0], -r0
    b258:	da100036 	ble	40b338 <__RAM_SIZE+0x30b338>
    b25c:	01100036 	tsteq	r0, r6, lsr r0
    b260:	36dc5300 	ldrbcc	r5, [ip], r0, lsl #6
    b264:	36df1000 	ldrbcc	r1, [pc], r0
    b268:	00011000 	andeq	r1, r1, r0
    b26c:	00000053 	andeq	r0, r0, r3, asr r0
    b270:	00000000 	andeq	r0, r0, r0
    b274:	0036ac00 	eorseq	sl, r6, r0, lsl #24
    b278:	0036ae10 	eorseq	sl, r6, r0, lsl lr
    b27c:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    b280:	0036ae00 	eorseq	sl, r6, r0, lsl #28
    b284:	0036ce10 	eorseq	ip, r6, r0, lsl lr
    b288:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    b28c:	00000008 	andeq	r0, r0, r8
	...
    b298:	0036b400 	eorseq	fp, r6, r0, lsl #8
    b29c:	0036b710 	eorseq	fp, r6, r0, lsl r7
    b2a0:	50000110 	andpl	r0, r0, r0, lsl r1
    b2a4:	100036b7 			; <UNDEFINED> instruction: 0x100036b7
    b2a8:	100036ce 	andne	r3, r0, lr, asr #13
    b2ac:	00540001 	subseq	r0, r4, r1
    b2b0:	00000000 	andeq	r0, r0, r0
    b2b4:	90000000 	andls	r0, r0, r0
    b2b8:	92100036 	andsls	r0, r0, #54	; 0x36
    b2bc:	02100036 	andseq	r0, r0, #54	; 0x36
    b2c0:	92007d00 	andls	r7, r0, #0, 26
    b2c4:	ac100036 	ldcge	0, cr0, [r0], {54}	; 0x36
    b2c8:	02100036 	andseq	r0, r0, #54	; 0x36
    b2cc:	00087d00 	andeq	r7, r8, r0, lsl #26
    b2d0:	00000000 	andeq	r0, r0, r0
    b2d4:	74000000 	strvc	r0, [r0], #-0
    b2d8:	76100036 			; <UNDEFINED> instruction: 0x76100036
    b2dc:	02100036 	andseq	r0, r0, #54	; 0x36
    b2e0:	76007d00 	strvc	r7, [r0], -r0, lsl #26
    b2e4:	90100036 	andsls	r0, r0, r6, lsr r0
    b2e8:	02100036 	andseq	r0, r0, #54	; 0x36
    b2ec:	00087d00 	andeq	r7, r8, r0, lsl #26
    b2f0:	00000000 	andeq	r0, r0, r0
    b2f4:	f4000000 	vst4.8	{d0-d3}, [r0], r0
    b2f8:	f6100034 			; <UNDEFINED> instruction: 0xf6100034
    b2fc:	02100034 	andseq	r0, r0, #52	; 0x34
    b300:	f6007d00 			; <UNDEFINED> instruction: 0xf6007d00
    b304:	f8100034 			; <UNDEFINED> instruction: 0xf8100034
    b308:	02100034 	andseq	r0, r0, #52	; 0x34
    b30c:	f8047d00 			; <UNDEFINED> instruction: 0xf8047d00
    b310:	08100034 	ldmdaeq	r0, {r2, r4, r5}
    b314:	02100035 	andseq	r0, r0, #53	; 0x35
    b318:	08107d00 	ldmdaeq	r0, {r8, sl, fp, ip, sp, lr}
    b31c:	0c100035 	ldceq	0, cr0, [r0], {53}	; 0x35
    b320:	02100035 	andseq	r0, r0, #53	; 0x35
    b324:	00047d00 	andeq	r7, r4, r0, lsl #26
    b328:	00000000 	andeq	r0, r0, r0
    b32c:	0c000000 	stceq	0, cr0, [r0], {-0}
    b330:	0e100035 	mrceq	0, 0, r0, cr0, cr5, {1}
    b334:	02100035 	andseq	r0, r0, #53	; 0x35
    b338:	0e007d00 	cdpeq	13, 0, cr7, cr0, cr0, {0}
    b33c:	20100035 	andscs	r0, r0, r5, lsr r0
    b340:	02100036 	andseq	r0, r0, #54	; 0x36
    b344:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    b354:	00000001 	andeq	r0, r0, r1
    b358:	00350c00 	eorseq	r0, r5, r0, lsl #24
    b35c:	00351810 	eorseq	r1, r5, r0, lsl r8
    b360:	50000110 	andpl	r0, r0, r0, lsl r1
    b364:	10003518 	andne	r3, r0, r8, lsl r5
    b368:	1000352a 	andne	r3, r0, sl, lsr #10
    b36c:	2c540001 	mrrccs	0, 0, r0, r4, cr1
    b370:	d6100035 			; <UNDEFINED> instruction: 0xd6100035
    b374:	01100035 	tsteq	r0, r5, lsr r0
    b378:	35f25400 	ldrbcc	r5, [r2, #1024]!	; 0x400
    b37c:	36001000 	strcc	r1, [r0], -r0
    b380:	00011000 	andeq	r1, r1, r0
    b384:	00360054 	eorseq	r0, r6, r4, asr r0
    b388:	00360210 	eorseq	r0, r6, r0, lsl r2
    b38c:	70000310 	andvc	r0, r0, r0, lsl r3
    b390:	00009f01 	andeq	r9, r0, r1, lsl #30
	...
    b39c:	35460000 	strbcc	r0, [r6, #-0]
    b3a0:	35be1000 	ldrcc	r1, [lr, #0]!
    b3a4:	00011000 	andeq	r1, r1, r0
    b3a8:	0035f253 	eorseq	pc, r5, r3, asr r2	; <UNPREDICTABLE>
    b3ac:	0035f810 	eorseq	pc, r5, r0, lsl r8	; <UNPREDICTABLE>
    b3b0:	53000110 	movwpl	r0, #272	; 0x110
	...
    b3bc:	00000001 	andeq	r0, r0, r1
    b3c0:	100035d6 	ldrdne	r3, [r0], -r6
    b3c4:	100035ed 	andne	r3, r0, sp, ror #11
    b3c8:	06500001 	ldrbeq	r0, [r0], -r1
    b3cc:	20100036 	andscs	r0, r0, r6, lsr r0
    b3d0:	01100036 	tsteq	r0, r6, lsr r0
    b3d4:	00005000 	andeq	r5, r0, r0
	...
    b3e0:	36020000 	strcc	r0, [r2], -r0
    b3e4:	36061000 	strcc	r1, [r6], -r0
    b3e8:	00011000 	andeq	r1, r1, r0
    b3ec:	00360650 	eorseq	r0, r6, r0, asr r6
    b3f0:	00360c10 	eorseq	r0, r6, r0, lsl ip
    b3f4:	74000610 	strvc	r0, [r0], #-1552	; 0xfffff9f0
    b3f8:	1c007300 	stcne	3, cr7, [r0], {-0}
    b3fc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    b408:	36000000 	strcc	r0, [r0], -r0
    b40c:	3a100035 	bcc	40b4e8 <__RAM_SIZE+0x30b4e8>
    b410:	01100035 	tsteq	r0, r5, lsr r0
    b414:	353c5300 	ldrcc	r5, [ip, #-768]!	; 0xfffffd00
    b418:	35461000 	strbcc	r1, [r6, #-0]
    b41c:	00011000 	andeq	r1, r1, r0
    b420:	0035f853 	eorseq	pc, r5, r3, asr r8	; <UNPREDICTABLE>
    b424:	00362010 	eorseq	r2, r6, r0, lsl r0
    b428:	53000110 	movwpl	r0, #272	; 0x110
	...
    b434:	00000101 	andeq	r0, r0, r1, lsl #2
    b438:	35820000 	strcc	r0, [r2]
    b43c:	35d61000 	ldrbcc	r1, [r6]
    b440:	00011000 	andeq	r1, r1, r0
    b444:	0035f254 	eorseq	pc, r5, r4, asr r2	; <UNPREDICTABLE>
    b448:	00360010 	eorseq	r0, r6, r0, lsl r0
    b44c:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    b450:	10003600 	andne	r3, r0, r0, lsl #12
    b454:	10003602 	andne	r3, r0, r2, lsl #12
    b458:	01700003 	cmneq	r0, r3
    b45c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    b460:	00000000 	andeq	r0, r0, r0
    b464:	c2010000 	andgt	r0, r1, #0
    b468:	d6100035 			; <UNDEFINED> instruction: 0xd6100035
    b46c:	01100035 	tsteq	r0, r5, lsr r0
    b470:	00005300 	andeq	r5, r0, r0, lsl #6
    b474:	00000000 	andeq	r0, r0, r0
	...

Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
    __asm volatile ( "mrs %0, ipsr" : "=r" ( ulCurrentInterrupt )::"memory" );
   0:	00000074 	andeq	r0, r0, r4, ror r0
    if( ulCurrentInterrupt == 0 )
   4:	00000002 	andeq	r0, r0, r2
        xReturn = pdFALSE;
   8:	00040000 	andeq	r0, r4, r0
}
   c:	00000000 	andeq	r0, r0, r0
  10:	10000800 	andne	r0, r0, r0, lsl #16
  14:	00000044 	andeq	r0, r0, r4, asr #32
        if(ch == '\n' || it >= size) {
  18:	00000000 	andeq	r0, r0, r0
}
  1c:	00000010 	andeq	r0, r0, r0, lsl r0
  20:	00000000 	andeq	r0, r0, r0
  24:	00000010 	andeq	r0, r0, r0, lsl r0
  28:	10000844 	andne	r0, r0, r4, asr #16
  2c:	00000068 	andeq	r0, r0, r8, rrx
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
  30:	100008ac 	andne	r0, r0, ip, lsr #17
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
  34:	0000001c 	andeq	r0, r0, ip, lsl r0
  38:	100008c8 	andne	r0, r0, r8, asr #17
  3c:	00000018 	andeq	r0, r0, r8, lsl r0
  40:	100008e0 	andne	r0, r0, r0, ror #17
        BaseType_t xReturn = pdFAIL;
  44:	00000018 	andeq	r0, r0, r8, lsl r0
    }
  48:	100008f8 	strdne	r0, [r0], -r8
                pxBlock = heapPROTECT_BLOCK_POINTER( pxBlock->pxNextFreeBlock );
  4c:	00000018 	andeq	r0, r0, r8, lsl r0
            while( pxBlock != pxEnd )
  50:	10000910 	andne	r0, r0, r0, lsl r9
  54:	00000018 	andeq	r0, r0, r8, lsl r0
                if( pxBlock->xBlockSize > xMaxSize )
  58:	10000928 	andne	r0, r0, r8, lsr #18
  5c:	00000018 	andeq	r0, r0, r8, lsl r0
                if( pxBlock->xBlockSize < xMinSize )
  60:	10000940 	andne	r0, r0, r0, asr #18
                    xMinSize = pxBlock->xBlockSize;
  64:	00000024 	andeq	r0, r0, r4, lsr #32
  68:	10000964 	andne	r0, r0, r4, ror #18
  6c:	0000002c 	andeq	r0, r0, ip, lsr #32
	...
  78:	00000024 	andeq	r0, r0, r4, lsr #32
  7c:	072d0002 	streq	r0, [sp, -r2]!
            prvUnlockQueue( pxQueue );
  80:	00040000 	andeq	r0, r4, r0
	...
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
  8c:	00000010 	andeq	r0, r0, r0, lsl r0
  90:	10000990 	mulne	r0, r0, r9
        taskENTER_CRITICAL();
  94:	0000002c 	andeq	r0, r0, ip, lsr #32
	...
                if( xTicksToWait == ( TickType_t ) 0 )
  a0:	000000a4 	andeq	r0, r0, r4, lsr #1
                else if( xEntryTimeSet == pdFALSE )
  a4:	0c160002 	ldceq	0, cr0, [r6], {2}
        taskEXIT_CRITICAL();
  a8:	00040000 	andeq	r0, r4, r0
	...
        prvLockQueue( pxQueue );
  b4:	00000008 	andeq	r0, r0, r8
  b8:	100009bc 			; <UNDEFINED> instruction: 0x100009bc
  bc:	00000002 	andeq	r0, r0, r2
  c0:	00000000 	andeq	r0, r0, r0
  c4:	0000000e 	andeq	r0, r0, lr
  c8:	100009be 			; <UNDEFINED> instruction: 0x100009be
  cc:	00000024 	andeq	r0, r0, r4, lsr #32
        if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
  d0:	100009e2 	andne	r0, r0, r2, ror #19
  d4:	0000007e 	andeq	r0, r0, lr, ror r0
  d8:	10000a60 	andne	r0, r0, r0, ror #20
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
  dc:	00000138 	andeq	r0, r0, r8, lsr r1
  e0:	10000b98 	mulne	r0, r8, fp
                    if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
  e4:	00000094 	muleq	r0, r4, r0
  e8:	10000c2c 	andne	r0, r0, ip, lsr #24
                vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
  ec:	000000c6 	andeq	r0, r0, r6, asr #1
  f0:	10000cf8 	strdne	r0, [r0], -r8
                prvUnlockQueue( pxQueue );
  f4:	000003ea 	andeq	r0, r0, sl, ror #7
  f8:	100010e8 	andne	r1, r0, r8, ror #1
                if( xTaskResumeAll() == pdFALSE )
  fc:	00000396 	muleq	r0, r6, r3
 100:	10001480 	andne	r1, r0, r0, lsl #9
                    taskYIELD_WITHIN_API();
 104:	00000680 	andeq	r0, r0, r0, lsl #13
                    if( xInheritanceOccurred != pdFALSE )
 108:	10001b00 	andne	r1, r0, r0, lsl #22
                return errQUEUE_EMPTY;
 10c:	0000000c 	andeq	r0, r0, ip
                        taskENTER_CRITICAL();
 110:	10001b0c 	andne	r1, r0, ip, lsl #22
                            uxHighestWaitingPriority = prvGetDisinheritPriorityAfterTimeout( pxQueue );
 114:	0000002c 	andeq	r0, r0, ip, lsr #32
 118:	00000000 	andeq	r0, r0, r0
                            vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 11c:	0000002c 	andeq	r0, r0, ip, lsr #32
                        taskEXIT_CRITICAL();
 120:	00000000 	andeq	r0, r0, r0
 124:	00000028 	andeq	r0, r0, r8, lsr #32
 128:	00000000 	andeq	r0, r0, r0
 12c:	00000020 	andeq	r0, r0, r0, lsr #32
 130:	00000000 	andeq	r0, r0, r0
 134:	0000001c 	andeq	r0, r0, ip, lsl r0
 138:	00000000 	andeq	r0, r0, r0
 13c:	00000030 	andeq	r0, r0, r0, lsr r0
	...
 148:	00000044 	andeq	r0, r0, r4, asr #32
 14c:	27db0002 	ldrbcs	r0, [fp, r2]
 150:	00040000 	andeq	r0, r4, r0
 154:	00000000 	andeq	r0, r0, r0
 158:	10001b38 	andne	r1, r0, r8, lsr fp
 15c:	00000014 	andeq	r0, r0, r4, lsl r0
 160:	00000000 	andeq	r0, r0, r0
 164:	00000014 	andeq	r0, r0, r4, lsl r0
 168:	10001b4c 	andne	r1, r0, ip, asr #22
 16c:	0000001e 	andeq	r0, r0, lr, lsl r0
 170:	10001b6c 	andne	r1, r0, ip, ror #22
 174:	00000024 	andeq	r0, r0, r4, lsr #32
 178:	00000000 	andeq	r0, r0, r0
 17c:	00000008 	andeq	r0, r0, r8
 180:	00000000 	andeq	r0, r0, r0
 184:	00000020 	andeq	r0, r0, r0, lsr #32
	...
 190:	00000074 	andeq	r0, r0, r4, ror r0
 194:	2a2e0002 	bcs	b801a4 <__RAM_SIZE+0xa801a4>
 198:	00040000 	andeq	r0, r4, r0
 19c:	00000000 	andeq	r0, r0, r0
 1a0:	10001b90 	mulne	r0, r0, fp
 1a4:	0000002c 	andeq	r0, r0, ip, lsr #32
 1a8:	10001bbc 			; <UNDEFINED> instruction: 0x10001bbc
 1ac:	00000036 	andeq	r0, r0, r6, lsr r0
 1b0:	10001bf4 	strdne	r1, [r0], -r4
 1b4:	0000007c 	andeq	r0, r0, ip, ror r0
 1b8:	10001c70 	andne	r1, r0, r0, ror ip
 1bc:	00000018 	andeq	r0, r0, r8, lsl r0
 1c0:	10001c88 	andne	r1, r0, r8, lsl #25
 1c4:	00000008 	andeq	r0, r0, r8
 1c8:	10001c90 	mulne	r0, r0, ip
 1cc:	00000050 	andeq	r0, r0, r0, asr r0
 1d0:	10001ce0 	andne	r1, r0, r0, ror #25
 1d4:	000001ac 	andeq	r0, r0, ip, lsr #3
 1d8:	10001e8c 	andne	r1, r0, ip, lsl #29
 1dc:	00000006 	andeq	r0, r0, r6
 1e0:	10001e94 	mulne	r0, r4, lr
 1e4:	00000008 	andeq	r0, r0, r8
 1e8:	00000000 	andeq	r0, r0, r0
 1ec:	00000008 	andeq	r0, r0, r8
 1f0:	00000000 	andeq	r0, r0, r0
 1f4:	00000008 	andeq	r0, r0, r8
 1f8:	00000000 	andeq	r0, r0, r0
 1fc:	00000014 	andeq	r0, r0, r4, lsl r0
	...
 208:	00000034 	andeq	r0, r0, r4, lsr r0
 20c:	346d0002 	strbtcc	r0, [sp], #-2
 210:	00040000 	andeq	r0, r4, r0
 214:	00000000 	andeq	r0, r0, r0
 218:	10001e9c 	mulne	r0, ip, lr
 21c:	000000fc 	strdeq	r0, [r0], -ip
 220:	10001f98 	mulne	r0, r8, pc	; <UNPREDICTABLE>
 224:	0000000e 	andeq	r0, r0, lr
 228:	00000000 	andeq	r0, r0, r0
 22c:	00000020 	andeq	r0, r0, r0, lsr #32
 230:	10001fa8 	andne	r1, r0, r8, lsr #31
 234:	0000004c 	andeq	r0, r0, ip, asr #32
	...
 240:	0000003c 	andeq	r0, r0, ip, lsr r0
 244:	3c130002 	ldccc	0, cr0, [r3], {2}
 248:	00040000 	andeq	r0, r4, r0
 24c:	00000000 	andeq	r0, r0, r0
 250:	10001ff4 	strdne	r1, [r0], -r4
 254:	0000001a 	andeq	r0, r0, sl, lsl r0
 258:	1000200e 	andne	r2, r0, lr
 25c:	00000006 	andeq	r0, r0, r6
 260:	00000000 	andeq	r0, r0, r0
 264:	00000016 	andeq	r0, r0, r6, lsl r0
 268:	10002014 	andne	r2, r0, r4, lsl r0
 26c:	00000032 	andeq	r0, r0, r2, lsr r0
 270:	10002046 	andne	r2, r0, r6, asr #32
 274:	00000024 	andeq	r0, r0, r4, lsr #32
	...
 280:	0000015c 	andeq	r0, r0, ip, asr r1
 284:	3ee20002 	cdpcc	0, 14, cr0, cr2, cr2, {0}
 288:	00040000 	andeq	r0, r4, r0
	...
 294:	00000010 	andeq	r0, r0, r0, lsl r0
 298:	00000000 	andeq	r0, r0, r0
 29c:	0000001e 	andeq	r0, r0, lr, lsl r0
 2a0:	1000206a 	andne	r2, r0, sl, rrx
 2a4:	0000001a 	andeq	r0, r0, sl, lsl r0
 2a8:	10002084 	andne	r2, r0, r4, lsl #1
 2ac:	00000076 	andeq	r0, r0, r6, ror r0
 2b0:	100020fa 	strdne	r2, [r0], -sl
 2b4:	00000024 	andeq	r0, r0, r4, lsr #32
 2b8:	1000211e 	andne	r2, r0, lr, lsl r1
 2bc:	00000058 	andeq	r0, r0, r8, asr r0
 2c0:	10002176 	andne	r2, r0, r6, ror r1
 2c4:	00000082 	andeq	r0, r0, r2, lsl #1
 2c8:	100021f8 	strdne	r2, [r0], -r8
 2cc:	00000086 	andeq	r0, r0, r6, lsl #1
 2d0:	1000227e 	andne	r2, r0, lr, ror r2
 2d4:	00000020 	andeq	r0, r0, r0, lsr #32
 2d8:	1000229e 	mulne	r0, lr, r2
 2dc:	0000003e 	andeq	r0, r0, lr, lsr r0
 2e0:	00000000 	andeq	r0, r0, r0
 2e4:	00000018 	andeq	r0, r0, r8, lsl r0
 2e8:	00000000 	andeq	r0, r0, r0
 2ec:	00000056 	andeq	r0, r0, r6, asr r0
 2f0:	00000000 	andeq	r0, r0, r0
 2f4:	0000002a 	andeq	r0, r0, sl, lsr #32
 2f8:	00000000 	andeq	r0, r0, r0
 2fc:	00000020 	andeq	r0, r0, r0, lsr #32
 300:	00000000 	andeq	r0, r0, r0
 304:	0000010c 	andeq	r0, r0, ip, lsl #2
 308:	00000000 	andeq	r0, r0, r0
 30c:	00000018 	andeq	r0, r0, r8, lsl r0
 310:	00000000 	andeq	r0, r0, r0
 314:	00000016 	andeq	r0, r0, r6, lsl r0
 318:	00000000 	andeq	r0, r0, r0
 31c:	0000001e 	andeq	r0, r0, lr, lsl r0
 320:	00000000 	andeq	r0, r0, r0
 324:	0000002c 	andeq	r0, r0, ip, lsr #32
 328:	00000000 	andeq	r0, r0, r0
 32c:	000000bc 	strheq	r0, [r0], -ip
 330:	00000000 	andeq	r0, r0, r0
 334:	00000086 	andeq	r0, r0, r6, lsl #1
 338:	100022dc 	ldrdne	r2, [r0], -ip
 33c:	000000f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
 340:	00000000 	andeq	r0, r0, r0
 344:	00000126 	andeq	r0, r0, r6, lsr #2
 348:	00000000 	andeq	r0, r0, r0
 34c:	0000002c 	andeq	r0, r0, ip, lsr #32
 350:	00000000 	andeq	r0, r0, r0
 354:	000000f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
 358:	00000000 	andeq	r0, r0, r0
 35c:	00000080 	andeq	r0, r0, r0, lsl #1
 360:	00000000 	andeq	r0, r0, r0
 364:	0000002c 	andeq	r0, r0, ip, lsr #32
 368:	00000000 	andeq	r0, r0, r0
 36c:	00000012 	andeq	r0, r0, r2, lsl r0
 370:	00000000 	andeq	r0, r0, r0
 374:	00000016 	andeq	r0, r0, r6, lsl r0
 378:	00000000 	andeq	r0, r0, r0
 37c:	00000004 	andeq	r0, r0, r4
 380:	00000000 	andeq	r0, r0, r0
 384:	00000010 	andeq	r0, r0, r0, lsl r0
 388:	00000000 	andeq	r0, r0, r0
 38c:	00000004 	andeq	r0, r0, r4
 390:	00000000 	andeq	r0, r0, r0
 394:	00000004 	andeq	r0, r0, r4
 398:	00000000 	andeq	r0, r0, r0
 39c:	0000000c 	andeq	r0, r0, ip
 3a0:	00000000 	andeq	r0, r0, r0
 3a4:	00000010 	andeq	r0, r0, r0, lsl r0
 3a8:	100023cc 	andne	r2, r0, ip, asr #7
 3ac:	00000052 	andeq	r0, r0, r2, asr r0
 3b0:	00000000 	andeq	r0, r0, r0
 3b4:	0000000c 	andeq	r0, r0, ip
 3b8:	00000000 	andeq	r0, r0, r0
 3bc:	00000026 	andeq	r0, r0, r6, lsr #32
 3c0:	00000000 	andeq	r0, r0, r0
 3c4:	00000026 	andeq	r0, r0, r6, lsr #32
 3c8:	00000000 	andeq	r0, r0, r0
 3cc:	00000018 	andeq	r0, r0, r8, lsl r0
 3d0:	00000000 	andeq	r0, r0, r0
 3d4:	00000016 	andeq	r0, r0, r6, lsl r0
	...
 3e0:	0000028c 	andeq	r0, r0, ip, lsl #5
 3e4:	63a30002 			; <UNDEFINED> instruction: 0x63a30002
 3e8:	00040000 	andeq	r0, r4, r0
	...
 3f4:	00000044 	andeq	r0, r0, r4, asr #32
 3f8:	10002420 	andne	r2, r0, r0, lsr #8
 3fc:	00000040 	andeq	r0, r0, r0, asr #32
 400:	00000000 	andeq	r0, r0, r0
 404:	0000003e 	andeq	r0, r0, lr, lsr r0
 408:	00000000 	andeq	r0, r0, r0
 40c:	00000012 	andeq	r0, r0, r2, lsl r0
 410:	10002460 	andne	r2, r0, r0, ror #8
 414:	00000028 	andeq	r0, r0, r8, lsr #32
 418:	10002488 	andne	r2, r0, r8, lsl #9
 41c:	00000096 	muleq	r0, r6, r0
 420:	1000251e 	andne	r2, r0, lr, lsl r5
 424:	00000052 	andeq	r0, r0, r2, asr r0
 428:	10002570 	andne	r2, r0, r0, ror r5
 42c:	00000068 	andeq	r0, r0, r8, rrx
 430:	100025d8 	ldrdne	r2, [r0], -r8
 434:	000000bc 	strheq	r0, [r0], -ip
 438:	10002694 	mulne	r0, r4, r6
 43c:	00000062 	andeq	r0, r0, r2, rrx
 440:	100026f6 	strdne	r2, [r0], -r6
 444:	00000024 	andeq	r0, r0, r4, lsr #32
 448:	1000271c 	andne	r2, r0, ip, lsl r7
 44c:	0000004c 	andeq	r0, r0, ip, asr #32
 450:	10002768 	andne	r2, r0, r8, ror #14
 454:	000000a8 	andeq	r0, r0, r8, lsr #1
 458:	10002810 	andne	r2, r0, r0, lsl r8
 45c:	00000028 	andeq	r0, r0, r8, lsr #32
 460:	10002838 	andne	r2, r0, r8, lsr r8
 464:	00000022 	andeq	r0, r0, r2, lsr #32
 468:	00000000 	andeq	r0, r0, r0
 46c:	0000009c 	muleq	r0, ip, r0
 470:	00000000 	andeq	r0, r0, r0
 474:	0000009c 	muleq	r0, ip, r0
 478:	00000000 	andeq	r0, r0, r0
 47c:	00000020 	andeq	r0, r0, r0, lsr #32
 480:	00000000 	andeq	r0, r0, r0
 484:	00000020 	andeq	r0, r0, r0, lsr #32
 488:	00000000 	andeq	r0, r0, r0
 48c:	00000020 	andeq	r0, r0, r0, lsr #32
 490:	00000000 	andeq	r0, r0, r0
 494:	00000020 	andeq	r0, r0, r0, lsr #32
 498:	00000000 	andeq	r0, r0, r0
 49c:	000000d8 	ldrdeq	r0, [r0], -r8
 4a0:	00000000 	andeq	r0, r0, r0
 4a4:	00000084 	andeq	r0, r0, r4, lsl #1
 4a8:	00000000 	andeq	r0, r0, r0
 4ac:	000000ac 	andeq	r0, r0, ip, lsr #1
 4b0:	00000000 	andeq	r0, r0, r0
 4b4:	0000003c 	andeq	r0, r0, ip, lsr r0
 4b8:	1000285c 	andne	r2, r0, ip, asr r8
 4bc:	00000010 	andeq	r0, r0, r0, lsl r0
 4c0:	1000286c 	andne	r2, r0, ip, ror #16
 4c4:	0000000c 	andeq	r0, r0, ip
 4c8:	00000000 	andeq	r0, r0, r0
 4cc:	0000000c 	andeq	r0, r0, ip
 4d0:	10002878 	andne	r2, r0, r8, ror r8
 4d4:	0000000c 	andeq	r0, r0, ip
 4d8:	00000000 	andeq	r0, r0, r0
 4dc:	00000014 	andeq	r0, r0, r4, lsl r0
 4e0:	00000000 	andeq	r0, r0, r0
 4e4:	00000034 	andeq	r0, r0, r4, lsr r0
 4e8:	00000000 	andeq	r0, r0, r0
 4ec:	0000000c 	andeq	r0, r0, ip
 4f0:	00000000 	andeq	r0, r0, r0
 4f4:	0000000c 	andeq	r0, r0, ip
 4f8:	10002884 	andne	r2, r0, r4, lsl #17
 4fc:	0000003c 	andeq	r0, r0, ip, lsr r0
 500:	100028c0 	andne	r2, r0, r0, asr #17
 504:	00000160 	andeq	r0, r0, r0, ror #2
 508:	10002a20 	andne	r2, r0, r0, lsr #20
 50c:	00000130 	andeq	r0, r0, r0, lsr r1
 510:	00000000 	andeq	r0, r0, r0
 514:	0000005c 	andeq	r0, r0, ip, asr r0
 518:	10002b50 	andne	r2, r0, r0, asr fp
 51c:	0000001e 	andeq	r0, r0, lr, lsl r0
 520:	10002b70 	andne	r2, r0, r0, ror fp
 524:	00000038 	andeq	r0, r0, r8, lsr r0
 528:	00000000 	andeq	r0, r0, r0
 52c:	0000007c 	andeq	r0, r0, ip, ror r0
 530:	00000000 	andeq	r0, r0, r0
 534:	00000024 	andeq	r0, r0, r4, lsr #32
 538:	00000000 	andeq	r0, r0, r0
 53c:	000000a4 	andeq	r0, r0, r4, lsr #1
 540:	00000000 	andeq	r0, r0, r0
 544:	00000020 	andeq	r0, r0, r0, lsr #32
 548:	00000000 	andeq	r0, r0, r0
 54c:	00000020 	andeq	r0, r0, r0, lsr #32
 550:	00000000 	andeq	r0, r0, r0
 554:	00000020 	andeq	r0, r0, r0, lsr #32
 558:	00000000 	andeq	r0, r0, r0
 55c:	00000020 	andeq	r0, r0, r0, lsr #32
 560:	10002ba8 	andne	r2, r0, r8, lsr #23
 564:	00000084 	andeq	r0, r0, r4, lsl #1
 568:	00000000 	andeq	r0, r0, r0
 56c:	000000a4 	andeq	r0, r0, r4, lsr #1
 570:	10002c2c 	andne	r2, r0, ip, lsr #24
 574:	0000001c 	andeq	r0, r0, ip, lsl r0
 578:	00000000 	andeq	r0, r0, r0
 57c:	00000040 	andeq	r0, r0, r0, asr #32
 580:	10002c48 	andne	r2, r0, r8, asr #24
 584:	0000003c 	andeq	r0, r0, ip, lsr r0
 588:	10002c84 	andne	r2, r0, r4, lsl #25
 58c:	000000e4 	andeq	r0, r0, r4, ror #1
 590:	00000000 	andeq	r0, r0, r0
 594:	000000b8 	strheq	r0, [r0], -r8
 598:	00000000 	andeq	r0, r0, r0
 59c:	00000024 	andeq	r0, r0, r4, lsr #32
 5a0:	10002d68 	andne	r2, r0, r8, ror #26
 5a4:	00000018 	andeq	r0, r0, r8, lsl r0
 5a8:	10002d80 	andne	r2, r0, r0, lsl #27
 5ac:	0000007c 	andeq	r0, r0, ip, ror r0
 5b0:	10002dfc 	strdne	r2, [r0], -ip
 5b4:	0000000c 	andeq	r0, r0, ip
 5b8:	10002e08 	andne	r2, r0, r8, lsl #28
 5bc:	00000048 	andeq	r0, r0, r8, asr #32
 5c0:	00000000 	andeq	r0, r0, r0
 5c4:	00000018 	andeq	r0, r0, r8, lsl r0
 5c8:	00000000 	andeq	r0, r0, r0
 5cc:	0000000c 	andeq	r0, r0, ip
 5d0:	00000000 	andeq	r0, r0, r0
 5d4:	00000010 	andeq	r0, r0, r0, lsl r0
 5d8:	00000000 	andeq	r0, r0, r0
 5dc:	00000020 	andeq	r0, r0, r0, lsr #32
 5e0:	00000000 	andeq	r0, r0, r0
 5e4:	000000b8 	strheq	r0, [r0], -r8
 5e8:	10002e50 	andne	r2, r0, r0, asr lr
 5ec:	00000080 	andeq	r0, r0, r0, lsl #1
 5f0:	00000000 	andeq	r0, r0, r0
 5f4:	00000090 	muleq	r0, r0, r0
 5f8:	00000000 	andeq	r0, r0, r0
 5fc:	00000018 	andeq	r0, r0, r8, lsl r0
 600:	00000000 	andeq	r0, r0, r0
 604:	00000014 	andeq	r0, r0, r4, lsl r0
 608:	00000000 	andeq	r0, r0, r0
 60c:	000000a8 	andeq	r0, r0, r8, lsr #1
 610:	00000000 	andeq	r0, r0, r0
 614:	000000cc 	andeq	r0, r0, ip, asr #1
 618:	00000000 	andeq	r0, r0, r0
 61c:	0000011c 	andeq	r0, r0, ip, lsl r1
 620:	00000000 	andeq	r0, r0, r0
 624:	00000158 	andeq	r0, r0, r8, asr r1
 628:	00000000 	andeq	r0, r0, r0
 62c:	000000ec 	andeq	r0, r0, ip, ror #1
 630:	00000000 	andeq	r0, r0, r0
 634:	00000038 	andeq	r0, r0, r8, lsr r0
 638:	00000000 	andeq	r0, r0, r0
 63c:	00000034 	andeq	r0, r0, r4, lsr r0
 640:	10002ed0 	ldrdne	r2, [r0], -r0
 644:	00000018 	andeq	r0, r0, r8, lsl r0
 648:	10002ee8 	andne	r2, r0, r8, ror #29
 64c:	0000006c 	andeq	r0, r0, ip, rrx
 650:	10002f54 	andne	r2, r0, r4, asr pc
 654:	00000048 	andeq	r0, r0, r8, asr #32
 658:	10002f9c 	mulne	r0, ip, pc	; <UNPREDICTABLE>
 65c:	00000018 	andeq	r0, r0, r8, lsl r0
 660:	00000000 	andeq	r0, r0, r0
 664:	00000074 	andeq	r0, r0, r4, ror r0
	...
 670:	00000104 	andeq	r0, r0, r4, lsl #2
 674:	9c970002 	ldcls	0, cr0, [r7], {2}
 678:	00040000 	andeq	r0, r4, r0
 67c:	00000000 	andeq	r0, r0, r0
 680:	10002fb4 			; <UNDEFINED> instruction: 0x10002fb4
 684:	00000020 	andeq	r0, r0, r0, lsr #32
 688:	10002fd4 	ldrdne	r2, [r0], -r4
 68c:	00000048 	andeq	r0, r0, r8, asr #32
 690:	1000301c 	andne	r3, r0, ip, lsl r0
 694:	00000028 	andeq	r0, r0, r8, lsr #32
 698:	10003044 	andne	r3, r0, r4, asr #32
 69c:	00000040 	andeq	r0, r0, r0, asr #32
 6a0:	10003084 	andne	r3, r0, r4, lsl #1
 6a4:	00000030 	andeq	r0, r0, r0, lsr r0
 6a8:	100030b4 	strhne	r3, [r0], -r4
 6ac:	0000002c 	andeq	r0, r0, ip, lsr #32
 6b0:	100030e0 	andne	r3, r0, r0, ror #1
 6b4:	00000068 	andeq	r0, r0, r8, rrx
 6b8:	10003148 	andne	r3, r0, r8, asr #2
 6bc:	000000f8 	strdeq	r0, [r0], -r8
 6c0:	10003240 	andne	r3, r0, r0, asr #4
 6c4:	00000016 	andeq	r0, r0, r6, lsl r0
 6c8:	10003258 	andne	r3, r0, r8, asr r2
 6cc:	00000060 	andeq	r0, r0, r0, rrx
 6d0:	00000000 	andeq	r0, r0, r0
 6d4:	00000036 	andeq	r0, r0, r6, lsr r0
 6d8:	100032b8 			; <UNDEFINED> instruction: 0x100032b8
 6dc:	0000005c 	andeq	r0, r0, ip, asr r0
 6e0:	00000000 	andeq	r0, r0, r0
 6e4:	00000038 	andeq	r0, r0, r8, lsr r0
 6e8:	00000000 	andeq	r0, r0, r0
 6ec:	00000020 	andeq	r0, r0, r0, lsr #32
 6f0:	00000000 	andeq	r0, r0, r0
 6f4:	0000004c 	andeq	r0, r0, ip, asr #32
 6f8:	00000000 	andeq	r0, r0, r0
 6fc:	00000034 	andeq	r0, r0, r4, lsr r0
 700:	00000000 	andeq	r0, r0, r0
 704:	0000000c 	andeq	r0, r0, ip
 708:	00000000 	andeq	r0, r0, r0
 70c:	00000004 	andeq	r0, r0, r4
 710:	00000000 	andeq	r0, r0, r0
 714:	0000002c 	andeq	r0, r0, ip, lsr #32
 718:	00000000 	andeq	r0, r0, r0
 71c:	00000020 	andeq	r0, r0, r0, lsr #32
 720:	00000000 	andeq	r0, r0, r0
 724:	00000008 	andeq	r0, r0, r8
 728:	00000000 	andeq	r0, r0, r0
 72c:	00000004 	andeq	r0, r0, r4
 730:	00000000 	andeq	r0, r0, r0
 734:	00000014 	andeq	r0, r0, r4, lsl r0
 738:	00000000 	andeq	r0, r0, r0
 73c:	00000004 	andeq	r0, r0, r4
 740:	00000000 	andeq	r0, r0, r0
 744:	00000020 	andeq	r0, r0, r0, lsr #32
 748:	00000000 	andeq	r0, r0, r0
 74c:	00000012 	andeq	r0, r0, r2, lsl r0
 750:	00000000 	andeq	r0, r0, r0
 754:	00000012 	andeq	r0, r0, r2, lsl r0
 758:	00000000 	andeq	r0, r0, r0
 75c:	00000028 	andeq	r0, r0, r8, lsr #32
 760:	00000000 	andeq	r0, r0, r0
 764:	00000028 	andeq	r0, r0, r8, lsr #32
 768:	00000000 	andeq	r0, r0, r0
 76c:	00000014 	andeq	r0, r0, r4, lsl r0
	...
 778:	00000064 	andeq	r0, r0, r4, rrx
 77c:	b6270002 	strtlt	r0, [r7], -r2
 780:	00040000 	andeq	r0, r4, r0
 784:	00000000 	andeq	r0, r0, r0
 788:	10003314 	andne	r3, r0, r4, lsl r3
 78c:	00000058 	andeq	r0, r0, r8, asr r0
 790:	1000336c 	andne	r3, r0, ip, ror #6
 794:	00000064 	andeq	r0, r0, r4, rrx
 798:	100033d0 	ldrdne	r3, [r0], -r0
 79c:	000000d4 	ldrdeq	r0, [r0], -r4
 7a0:	100034a4 	andne	r3, r0, r4, lsr #9
 7a4:	00000050 	andeq	r0, r0, r0, asr r0
 7a8:	00000000 	andeq	r0, r0, r0
 7ac:	0000000c 	andeq	r0, r0, ip
 7b0:	00000000 	andeq	r0, r0, r0
 7b4:	0000000c 	andeq	r0, r0, ip
 7b8:	00000000 	andeq	r0, r0, r0
 7bc:	00000002 	andeq	r0, r0, r2
 7c0:	00000000 	andeq	r0, r0, r0
 7c4:	00000032 	andeq	r0, r0, r2, lsr r0
 7c8:	00000000 	andeq	r0, r0, r0
 7cc:	00000080 	andeq	r0, r0, r0, lsl #1
 7d0:	00000000 	andeq	r0, r0, r0
 7d4:	0000002c 	andeq	r0, r0, ip, lsr #32
	...
 7e0:	00000074 	andeq	r0, r0, r4, ror r0
 7e4:	bc400002 	mcrrlt	0, 0, r0, r0, cr2
 7e8:	00040000 	andeq	r0, r4, r0
 7ec:	00000000 	andeq	r0, r0, r0
 7f0:	100034f4 	strdne	r3, [r0], -r4
 7f4:	00000018 	andeq	r0, r0, r8, lsl r0
 7f8:	1000350c 	andne	r3, r0, ip, lsl #10
 7fc:	00000114 	andeq	r0, r0, r4, lsl r1
 800:	10003620 	andne	r3, r0, r0, lsr #12
 804:	0000003c 	andeq	r0, r0, ip, lsr r0
 808:	1000365c 	andne	r3, r0, ip, asr r6
 80c:	00000016 	andeq	r0, r0, r6, lsl r0
 810:	10003674 	andne	r3, r0, r4, ror r6
 814:	0000001c 	andeq	r0, r0, ip, lsl r0
 818:	10003690 	mulne	r0, r0, r6
 81c:	0000001c 	andeq	r0, r0, ip, lsl r0
 820:	100036ac 	andne	r3, r0, ip, lsr #13
 824:	00000022 	andeq	r0, r0, r2, lsr #32
 828:	100036ce 	andne	r3, r0, lr, asr #13
 82c:	00000014 	andeq	r0, r0, r4, lsl r0
 830:	100036e4 	andne	r3, r0, r4, ror #13
 834:	00000090 	muleq	r0, r0, r0
 838:	10003774 	andne	r3, r0, r4, ror r7
 83c:	00000040 	andeq	r0, r0, r0, asr #32
 840:	00000000 	andeq	r0, r0, r0
 844:	00000002 	andeq	r0, r0, r2
 848:	00000000 	andeq	r0, r0, r0
 84c:	0000000e 	andeq	r0, r0, lr
	...
 858:	0000005c 	andeq	r0, r0, ip, asr r0
 85c:	c1a70002 			; <UNDEFINED> instruction: 0xc1a70002
 860:	00040000 	andeq	r0, r4, r0
 864:	00000000 	andeq	r0, r0, r0
 868:	100037b4 			; <UNDEFINED> instruction: 0x100037b4
 86c:	00000026 	andeq	r0, r0, r6, lsr #32
 870:	00000000 	andeq	r0, r0, r0
 874:	00000010 	andeq	r0, r0, r0, lsl r0
 878:	00000000 	andeq	r0, r0, r0
 87c:	0000000e 	andeq	r0, r0, lr
 880:	00000000 	andeq	r0, r0, r0
 884:	0000000e 	andeq	r0, r0, lr
 888:	100037e0 	andne	r3, r0, r0, ror #15
 88c:	0000001a 	andeq	r0, r0, sl, lsl r0
 890:	10003800 	andne	r3, r0, r0, lsl #16
 894:	00000016 	andeq	r0, r0, r6, lsl r0
 898:	10003816 	andne	r3, r0, r6, lsl r8
 89c:	0000000e 	andeq	r0, r0, lr
 8a0:	10003824 	andne	r3, r0, r4, lsr #16
 8a4:	00000044 	andeq	r0, r0, r4, asr #32
 8a8:	1000386c 	andne	r3, r0, ip, ror #16
 8ac:	00000012 	andeq	r0, r0, r2, lsl r0
	...
 8b8:	0000001c 	andeq	r0, r0, ip, lsl r0
 8bc:	c3250002 			; <UNDEFINED> instruction: 0xc3250002
 8c0:	00040000 	andeq	r0, r4, r0
 8c4:	00000000 	andeq	r0, r0, r0
 8c8:	100038a4 	andne	r3, r0, r4, lsr #17
 8cc:	00000070 	andeq	r0, r0, r0, ror r0
	...
 8d8:	0000001c 	andeq	r0, r0, ip, lsl r0
 8dc:	c34b0002 	movtgt	r0, #45058	; 0xb002
 8e0:	00040000 	andeq	r0, r4, r0
 8e4:	00000000 	andeq	r0, r0, r0
 8e8:	10003914 	andne	r3, r0, r4, lsl r9
 8ec:	00000048 	andeq	r0, r0, r8, asr #32
	...

Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
    __asm volatile ( "mrs %0, ipsr" : "=r" ( ulCurrentInterrupt )::"memory" );
   0:	10000874 	andne	r0, r0, r4, ror r8
    if( ulCurrentInterrupt == 0 )
   4:	10000878 	andne	r0, r0, r8, ror r8
        xReturn = pdFALSE;
   8:	10000882 	andne	r0, r0, r2, lsl #17
}
   c:	10000892 	mulne	r0, r2, r8
	...
        if(ch == '\n' || it >= size) {
  18:	10000800 	andne	r0, r0, r0, lsl #16
}
  1c:	10000844 	andne	r0, r0, r4, asr #16
  20:	00000001 	andeq	r0, r0, r1
  24:	00000001 	andeq	r0, r0, r1
  28:	00000001 	andeq	r0, r0, r1
  2c:	00000001 	andeq	r0, r0, r1
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
  30:	10000844 	andne	r0, r0, r4, asr #16
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
  34:	100008ac 	andne	r0, r0, ip, lsr #17
  38:	100008ac 	andne	r0, r0, ip, lsr #17
  3c:	100008c8 	andne	r0, r0, r8, asr #17
  40:	100008c8 	andne	r0, r0, r8, asr #17
        BaseType_t xReturn = pdFAIL;
  44:	100008e0 	andne	r0, r0, r0, ror #17
    }
  48:	100008e0 	andne	r0, r0, r0, ror #17
                pxBlock = heapPROTECT_BLOCK_POINTER( pxBlock->pxNextFreeBlock );
  4c:	100008f8 	strdne	r0, [r0], -r8
            while( pxBlock != pxEnd )
  50:	100008f8 	strdne	r0, [r0], -r8
  54:	10000910 	andne	r0, r0, r0, lsl r9
                if( pxBlock->xBlockSize > xMaxSize )
  58:	10000910 	andne	r0, r0, r0, lsl r9
  5c:	10000928 	andne	r0, r0, r8, lsr #18
                if( pxBlock->xBlockSize < xMinSize )
  60:	10000928 	andne	r0, r0, r8, lsr #18
                    xMinSize = pxBlock->xBlockSize;
  64:	10000940 	andne	r0, r0, r0, asr #18
  68:	10000940 	andne	r0, r0, r0, asr #18
  6c:	10000964 	andne	r0, r0, r4, ror #18
  70:	10000964 	andne	r0, r0, r4, ror #18
  74:	10000990 	mulne	r0, r0, r9
	...
            prvUnlockQueue( pxQueue );
  80:	00000001 	andeq	r0, r0, r1
            ( void ) xTaskResumeAll();
  84:	00000001 	andeq	r0, r0, r1
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
  88:	10000990 	mulne	r0, r0, r9
  8c:	100009bc 			; <UNDEFINED> instruction: 0x100009bc
	...
            if( uxSemaphoreCount > ( UBaseType_t ) 0 )
  98:	10000a02 	andne	r0, r0, r2, lsl #20
                if( xTicksToWait == ( TickType_t ) 0 )
  9c:	10000a04 	andne	r0, r0, r4, lsl #20
  a0:	10000a06 	andne	r0, r0, r6, lsl #20
                else if( xEntryTimeSet == pdFALSE )
  a4:	10000a24 	andne	r0, r0, r4, lsr #20
	...
        prvLockQueue( pxQueue );
  b0:	10000bb6 			; <UNDEFINED> instruction: 0x10000bb6
  b4:	10000bd0 	ldrdne	r0, [r0], -r0	; <UNPREDICTABLE>
  b8:	10000bd8 	ldrdne	r0, [r0], -r8
  bc:	10000bdc 	ldrdne	r0, [r0], -ip
  c0:	10000bdc 	ldrdne	r0, [r0], -ip
  c4:	10000c0a 	andne	r0, r0, sl, lsl #24
	...
        if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
  d0:	10000c62 	andne	r0, r0, r2, ror #24
  d4:	10000c84 	andne	r0, r0, r4, lsl #25
  d8:	10000c92 	mulne	r0, r2, ip
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
  dc:	10000c98 	mulne	r0, r8, ip
  e0:	10000c98 	mulne	r0, r8, ip
                    if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
  e4:	10000cc0 	andne	r0, r0, r0, asr #25
	...
                vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
  f0:	10001494 	mulne	r0, r4, r4
                prvUnlockQueue( pxQueue );
  f4:	10001496 	mulne	r0, r6, r4
  f8:	10001940 	andne	r1, r0, r0, asr #18
                if( xTaskResumeAll() == pdFALSE )
  fc:	100019b2 			; <UNDEFINED> instruction: 0x100019b2
	...
                    if( xInheritanceOccurred != pdFALSE )
 108:	10001712 	andne	r1, r0, r2, lsl r7
                return errQUEUE_EMPTY;
 10c:	10001744 	andne	r1, r0, r4, asr #14
                        taskENTER_CRITICAL();
 110:	10001898 	mulne	r0, r8, r8
                            uxHighestWaitingPriority = prvGetDisinheritPriorityAfterTimeout( pxQueue );
 114:	100018b2 			; <UNDEFINED> instruction: 0x100018b2
	...
                        taskEXIT_CRITICAL();
 120:	10001762 	andne	r1, r0, r2, ror #14
 124:	10001798 	mulne	r0, r8, r7
 128:	1000181a 	andne	r1, r0, sl, lsl r8
 12c:	10001836 	andne	r1, r0, r6, lsr r8
	...
 138:	100017a0 	andne	r1, r0, r0, lsr #15
 13c:	100017de 	ldrdne	r1, [r0], -lr
 140:	100017e0 	andne	r1, r0, r0, ror #15
 144:	100017e8 	andne	r1, r0, r8, ror #15
	...
 150:	00000001 	andeq	r0, r0, r1
 154:	00000001 	andeq	r0, r0, r1
 158:	100009bc 			; <UNDEFINED> instruction: 0x100009bc
 15c:	100009be 			; <UNDEFINED> instruction: 0x100009be
 160:	00000001 	andeq	r0, r0, r1
 164:	00000001 	andeq	r0, r0, r1
 168:	100009be 			; <UNDEFINED> instruction: 0x100009be
 16c:	100009e2 	andne	r0, r0, r2, ror #19
 170:	100009e2 	andne	r0, r0, r2, ror #19
 174:	10000a60 	andne	r0, r0, r0, ror #20
 178:	10000a60 	andne	r0, r0, r0, ror #20
 17c:	10000b98 	mulne	r0, r8, fp
 180:	10000b98 	mulne	r0, r8, fp
 184:	10000c2c 	andne	r0, r0, ip, lsr #24
 188:	10000c2c 	andne	r0, r0, ip, lsr #24
 18c:	10000cf2 	strdne	r0, [r0], -r2
 190:	10000cf8 	strdne	r0, [r0], -r8
 194:	100010e2 	andne	r1, r0, r2, ror #1
 198:	100010e8 	andne	r1, r0, r8, ror #1
 19c:	1000147e 	andne	r1, r0, lr, ror r4
 1a0:	10001480 	andne	r1, r0, r0, lsl #9
 1a4:	10001b00 	andne	r1, r0, r0, lsl #22
 1a8:	10001b00 	andne	r1, r0, r0, lsl #22
 1ac:	10001b0c 	andne	r1, r0, ip, lsl #22
 1b0:	10001b0c 	andne	r1, r0, ip, lsl #22
 1b4:	10001b38 	andne	r1, r0, r8, lsr fp
 1b8:	00000001 	andeq	r0, r0, r1
 1bc:	00000001 	andeq	r0, r0, r1
 1c0:	00000001 	andeq	r0, r0, r1
 1c4:	00000001 	andeq	r0, r0, r1
 1c8:	00000001 	andeq	r0, r0, r1
 1cc:	00000001 	andeq	r0, r0, r1
 1d0:	00000001 	andeq	r0, r0, r1
 1d4:	00000001 	andeq	r0, r0, r1
 1d8:	00000001 	andeq	r0, r0, r1
 1dc:	00000001 	andeq	r0, r0, r1
	...
 1e8:	10001b38 	andne	r1, r0, r8, lsr fp
 1ec:	10001b4c 	andne	r1, r0, ip, asr #22
 1f0:	00000001 	andeq	r0, r0, r1
 1f4:	00000001 	andeq	r0, r0, r1
 1f8:	10001b4c 	andne	r1, r0, ip, asr #22
 1fc:	10001b6a 	andne	r1, r0, sl, ror #22
 200:	10001b6c 	andne	r1, r0, ip, ror #22
 204:	10001b90 	mulne	r0, r0, fp
 208:	00000001 	andeq	r0, r0, r1
 20c:	00000001 	andeq	r0, r0, r1
 210:	00000001 	andeq	r0, r0, r1
 214:	00000001 	andeq	r0, r0, r1
	...
 220:	10001b90 	mulne	r0, r0, fp
 224:	10001bbc 			; <UNDEFINED> instruction: 0x10001bbc
 228:	10001bbc 			; <UNDEFINED> instruction: 0x10001bbc
 22c:	10001bf2 	strdne	r1, [r0], -r2
 230:	10001bf4 	strdne	r1, [r0], -r4
 234:	10001c70 	andne	r1, r0, r0, ror ip
 238:	10001c70 	andne	r1, r0, r0, ror ip
 23c:	10001c88 	andne	r1, r0, r8, lsl #25
 240:	10001c88 	andne	r1, r0, r8, lsl #25
 244:	10001c90 	mulne	r0, r0, ip
 248:	10001c90 	mulne	r0, r0, ip
 24c:	10001ce0 	andne	r1, r0, r0, ror #25
 250:	10001ce0 	andne	r1, r0, r0, ror #25
 254:	10001e8c 	andne	r1, r0, ip, lsl #29
 258:	10001e8c 	andne	r1, r0, ip, lsl #29
 25c:	10001e92 	mulne	r0, r2, lr
 260:	10001e94 	mulne	r0, r4, lr
 264:	10001e9c 	mulne	r0, ip, lr
 268:	00000001 	andeq	r0, r0, r1
 26c:	00000001 	andeq	r0, r0, r1
 270:	00000001 	andeq	r0, r0, r1
 274:	00000001 	andeq	r0, r0, r1
 278:	00000001 	andeq	r0, r0, r1
 27c:	00000001 	andeq	r0, r0, r1
	...
 288:	10001e9c 	mulne	r0, ip, lr
 28c:	10001f98 	mulne	r0, r8, pc	; <UNPREDICTABLE>
 290:	10001f98 	mulne	r0, r8, pc	; <UNPREDICTABLE>
 294:	10001fa6 	andne	r1, r0, r6, lsr #31
 298:	00000001 	andeq	r0, r0, r1
 29c:	00000001 	andeq	r0, r0, r1
 2a0:	10001fa8 	andne	r1, r0, r8, lsr #31
 2a4:	10001ff4 	strdne	r1, [r0], -r4
	...
 2b0:	10001ff4 	strdne	r1, [r0], -r4
 2b4:	1000200e 	andne	r2, r0, lr
 2b8:	1000200e 	andne	r2, r0, lr
 2bc:	10002014 	andne	r2, r0, r4, lsl r0
 2c0:	00000001 	andeq	r0, r0, r1
 2c4:	00000001 	andeq	r0, r0, r1
 2c8:	10002014 	andne	r2, r0, r4, lsl r0
 2cc:	10002046 	andne	r2, r0, r6, asr #32
 2d0:	10002046 	andne	r2, r0, r6, asr #32
 2d4:	1000206a 	andne	r2, r0, sl, rrx
	...
 2e0:	10002136 	andne	r2, r0, r6, lsr r1
 2e4:	10002162 	andne	r2, r0, r2, ror #2
 2e8:	10002164 	andne	r2, r0, r4, ror #2
 2ec:	10002176 	andne	r2, r0, r6, ror r1
	...
 2f8:	00000001 	andeq	r0, r0, r1
 2fc:	00000001 	andeq	r0, r0, r1
 300:	00000001 	andeq	r0, r0, r1
 304:	00000001 	andeq	r0, r0, r1
	...
 310:	00000001 	andeq	r0, r0, r1
 314:	00000001 	andeq	r0, r0, r1
 318:	00000001 	andeq	r0, r0, r1
 31c:	00000001 	andeq	r0, r0, r1
	...
 328:	00000001 	andeq	r0, r0, r1
 32c:	00000001 	andeq	r0, r0, r1
 330:	00000001 	andeq	r0, r0, r1
 334:	00000001 	andeq	r0, r0, r1
	...
 340:	100022ea 	andne	r2, r0, sl, ror #5
 344:	10002300 	andne	r2, r0, r0, lsl #6
 348:	10002304 	andne	r2, r0, r4, lsl #6
 34c:	10002328 	andne	r2, r0, r8, lsr #6
 350:	1000235c 	andne	r2, r0, ip, asr r3
 354:	1000236c 	andne	r2, r0, ip, ror #6
	...
 360:	00000001 	andeq	r0, r0, r1
 364:	00000001 	andeq	r0, r0, r1
 368:	00000001 	andeq	r0, r0, r1
 36c:	00000001 	andeq	r0, r0, r1
 370:	00000001 	andeq	r0, r0, r1
 374:	00000001 	andeq	r0, r0, r1
	...
 380:	00000001 	andeq	r0, r0, r1
 384:	00000001 	andeq	r0, r0, r1
 388:	00000001 	andeq	r0, r0, r1
 38c:	00000001 	andeq	r0, r0, r1
 390:	00000001 	andeq	r0, r0, r1
 394:	00000001 	andeq	r0, r0, r1
	...
 3a0:	00000001 	andeq	r0, r0, r1
 3a4:	00000001 	andeq	r0, r0, r1
 3a8:	00000001 	andeq	r0, r0, r1
 3ac:	00000001 	andeq	r0, r0, r1
	...
 3b8:	00000001 	andeq	r0, r0, r1
 3bc:	00000001 	andeq	r0, r0, r1
 3c0:	00000001 	andeq	r0, r0, r1
 3c4:	00000001 	andeq	r0, r0, r1
 3c8:	1000206a 	andne	r2, r0, sl, rrx
 3cc:	10002084 	andne	r2, r0, r4, lsl #1
 3d0:	10002084 	andne	r2, r0, r4, lsl #1
 3d4:	100020fa 	strdne	r2, [r0], -sl
 3d8:	100020fa 	strdne	r2, [r0], -sl
 3dc:	1000211e 	andne	r2, r0, lr, lsl r1
 3e0:	1000211e 	andne	r2, r0, lr, lsl r1
 3e4:	10002176 	andne	r2, r0, r6, ror r1
 3e8:	10002176 	andne	r2, r0, r6, ror r1
 3ec:	100021f8 	strdne	r2, [r0], -r8
 3f0:	100021f8 	strdne	r2, [r0], -r8
 3f4:	1000227e 	andne	r2, r0, lr, ror r2
 3f8:	1000227e 	andne	r2, r0, lr, ror r2
 3fc:	1000229e 	mulne	r0, lr, r2
 400:	1000229e 	mulne	r0, lr, r2
 404:	100022dc 	ldrdne	r2, [r0], -ip
 408:	00000001 	andeq	r0, r0, r1
 40c:	00000001 	andeq	r0, r0, r1
 410:	00000001 	andeq	r0, r0, r1
 414:	00000001 	andeq	r0, r0, r1
 418:	00000001 	andeq	r0, r0, r1
 41c:	00000001 	andeq	r0, r0, r1
 420:	00000001 	andeq	r0, r0, r1
 424:	00000001 	andeq	r0, r0, r1
 428:	00000001 	andeq	r0, r0, r1
 42c:	00000001 	andeq	r0, r0, r1
 430:	00000001 	andeq	r0, r0, r1
 434:	00000001 	andeq	r0, r0, r1
 438:	00000001 	andeq	r0, r0, r1
 43c:	00000001 	andeq	r0, r0, r1
 440:	00000001 	andeq	r0, r0, r1
 444:	00000001 	andeq	r0, r0, r1
 448:	00000001 	andeq	r0, r0, r1
 44c:	00000001 	andeq	r0, r0, r1
 450:	00000001 	andeq	r0, r0, r1
 454:	00000001 	andeq	r0, r0, r1
 458:	00000001 	andeq	r0, r0, r1
 45c:	00000001 	andeq	r0, r0, r1
 460:	100022dc 	ldrdne	r2, [r0], -ip
 464:	100023cc 	andne	r2, r0, ip, asr #7
 468:	00000001 	andeq	r0, r0, r1
 46c:	00000001 	andeq	r0, r0, r1
 470:	00000001 	andeq	r0, r0, r1
 474:	00000001 	andeq	r0, r0, r1
 478:	00000001 	andeq	r0, r0, r1
 47c:	00000001 	andeq	r0, r0, r1
 480:	00000001 	andeq	r0, r0, r1
 484:	00000001 	andeq	r0, r0, r1
 488:	00000001 	andeq	r0, r0, r1
 48c:	00000001 	andeq	r0, r0, r1
 490:	00000001 	andeq	r0, r0, r1
 494:	00000001 	andeq	r0, r0, r1
 498:	00000001 	andeq	r0, r0, r1
 49c:	00000001 	andeq	r0, r0, r1
 4a0:	00000001 	andeq	r0, r0, r1
 4a4:	00000001 	andeq	r0, r0, r1
 4a8:	00000001 	andeq	r0, r0, r1
 4ac:	00000001 	andeq	r0, r0, r1
 4b0:	00000001 	andeq	r0, r0, r1
 4b4:	00000001 	andeq	r0, r0, r1
 4b8:	00000001 	andeq	r0, r0, r1
 4bc:	00000001 	andeq	r0, r0, r1
 4c0:	00000001 	andeq	r0, r0, r1
 4c4:	00000001 	andeq	r0, r0, r1
 4c8:	00000001 	andeq	r0, r0, r1
 4cc:	00000001 	andeq	r0, r0, r1
 4d0:	100023cc 	andne	r2, r0, ip, asr #7
 4d4:	1000241e 	andne	r2, r0, lr, lsl r4
 4d8:	00000001 	andeq	r0, r0, r1
 4dc:	00000001 	andeq	r0, r0, r1
 4e0:	00000001 	andeq	r0, r0, r1
 4e4:	00000001 	andeq	r0, r0, r1
 4e8:	00000001 	andeq	r0, r0, r1
 4ec:	00000001 	andeq	r0, r0, r1
 4f0:	00000001 	andeq	r0, r0, r1
 4f4:	00000001 	andeq	r0, r0, r1
 4f8:	00000001 	andeq	r0, r0, r1
 4fc:	00000001 	andeq	r0, r0, r1
	...
 508:	100026a2 	andne	r2, r0, r2, lsr #13
 50c:	100026c2 	andne	r2, r0, r2, asr #13
 510:	100026ea 	andne	r2, r0, sl, ror #13
 514:	100026f4 	strdne	r2, [r0], -r4
	...
 520:	1000271c 	andne	r2, r0, ip, lsl r7
 524:	10002722 	andne	r2, r0, r2, lsr #14
 528:	10002724 	andne	r2, r0, r4, lsr #14
 52c:	10002756 	andne	r2, r0, r6, asr r7
	...
 538:	00000001 	andeq	r0, r0, r1
 53c:	00000001 	andeq	r0, r0, r1
 540:	00000001 	andeq	r0, r0, r1
 544:	00000001 	andeq	r0, r0, r1
	...
 550:	00000001 	andeq	r0, r0, r1
 554:	00000001 	andeq	r0, r0, r1
 558:	00000001 	andeq	r0, r0, r1
 55c:	00000001 	andeq	r0, r0, r1
	...
 568:	100028cc 	andne	r2, r0, ip, asr #17
 56c:	100028de 	ldrdne	r2, [r0], -lr
 570:	100028e0 	andne	r2, r0, r0, ror #17
 574:	100028fe 	strdne	r2, [r0], -lr
 578:	10002900 	andne	r2, r0, r0, lsl #18
 57c:	1000291a 	andne	r2, r0, sl, lsl r9
 580:	1000291e 	andne	r2, r0, lr, lsl r9
 584:	100029e4 	andne	r2, r0, r4, ror #19
 588:	100029f0 	strdne	r2, [r0], -r0
 58c:	100029f2 	strdne	r2, [r0], -r2	; <UNPREDICTABLE>
	...
 598:	1000292e 	andne	r2, r0, lr, lsr #18
 59c:	10002934 	andne	r2, r0, r4, lsr r9
 5a0:	100029a6 	andne	r2, r0, r6, lsr #19
 5a4:	100029c4 	andne	r2, r0, r4, asr #19
	...
 5b0:	10002934 	andne	r2, r0, r4, lsr r9
 5b4:	1000293e 	andne	r2, r0, lr, lsr r9
 5b8:	100029ca 	andne	r2, r0, sl, asr #19
 5bc:	100029e4 	andne	r2, r0, r4, ror #19
	...
 5c8:	10002a26 	andne	r2, r0, r6, lsr #20
 5cc:	10002a3a 	andne	r2, r0, sl, lsr sl
 5d0:	10002a3e 	andne	r2, r0, lr, lsr sl
 5d4:	10002a4a 	andne	r2, r0, sl, asr #20
 5d8:	10002a4c 	andne	r2, r0, ip, asr #20
 5dc:	10002b24 	andne	r2, r0, r4, lsr #22
 5e0:	10002b26 	andne	r2, r0, r6, lsr #22
 5e4:	10002b26 	andne	r2, r0, r6, lsr #22
	...
 5f0:	10002a3e 	andne	r2, r0, lr, lsr sl
 5f4:	10002a44 	andne	r2, r0, r4, asr #20
 5f8:	10002a5a 	andne	r2, r0, sl, asr sl
 5fc:	10002a7a 	andne	r2, r0, sl, ror sl
	...
 608:	10002a44 	andne	r2, r0, r4, asr #20
 60c:	10002a4a 	andne	r2, r0, sl, asr #20
 610:	10002a7a 	andne	r2, r0, sl, ror sl
 614:	10002a98 	mulne	r0, r8, sl
	...
 620:	10002af0 	strdne	r2, [r0], -r0
 624:	10002af6 	strdne	r2, [r0], -r6
 628:	10002b08 	andne	r2, r0, r8, lsl #22
 62c:	10002b24 	andne	r2, r0, r4, lsr #22
	...
 638:	00000001 	andeq	r0, r0, r1
 63c:	00000001 	andeq	r0, r0, r1
 640:	00000001 	andeq	r0, r0, r1
 644:	00000001 	andeq	r0, r0, r1
 648:	00000001 	andeq	r0, r0, r1
 64c:	00000001 	andeq	r0, r0, r1
 650:	00000001 	andeq	r0, r0, r1
 654:	00000001 	andeq	r0, r0, r1
	...
 660:	10002b74 	andne	r2, r0, r4, ror fp
 664:	10002b7c 	andne	r2, r0, ip, ror fp
 668:	10002b8e 	andne	r2, r0, lr, lsl #23
 66c:	10002ba8 	andne	r2, r0, r8, lsr #23
	...
 678:	10002bbc 			; <UNDEFINED> instruction: 0x10002bbc
 67c:	10002c06 	andne	r2, r0, r6, lsl #24
 680:	10002c0a 	andne	r2, r0, sl, lsl #24
 684:	10002c2c 	andne	r2, r0, ip, lsr #24
	...
 690:	10002bd2 	ldrdne	r2, [r0], -r2	; <UNPREDICTABLE>
 694:	10002c02 	andne	r2, r0, r2, lsl #24
 698:	10002c0a 	andne	r2, r0, sl, lsl #24
 69c:	10002c2c 	andne	r2, r0, ip, lsr #24
	...
 6a8:	00000001 	andeq	r0, r0, r1
 6ac:	00000001 	andeq	r0, r0, r1
 6b0:	00000001 	andeq	r0, r0, r1
 6b4:	00000001 	andeq	r0, r0, r1
	...
 6c0:	00000001 	andeq	r0, r0, r1
 6c4:	00000001 	andeq	r0, r0, r1
 6c8:	00000001 	andeq	r0, r0, r1
 6cc:	00000001 	andeq	r0, r0, r1
	...
 6d8:	10002c8a 	andne	r2, r0, sl, lsl #25
 6dc:	10002caa 	andne	r2, r0, sl, lsr #25
 6e0:	10002d26 	andne	r2, r0, r6, lsr #26
 6e4:	10002d2c 	andne	r2, r0, ip, lsr #26
	...
 6f0:	10002cb2 			; <UNDEFINED> instruction: 0x10002cb2
 6f4:	10002cd0 	ldrdne	r2, [r0], -r0
 6f8:	10002d2c 	andne	r2, r0, ip, lsr #26
 6fc:	10002d32 	andne	r2, r0, r2, lsr sp
	...
 708:	00000001 	andeq	r0, r0, r1
 70c:	00000001 	andeq	r0, r0, r1
 710:	00000001 	andeq	r0, r0, r1
 714:	00000001 	andeq	r0, r0, r1
	...
 720:	00000001 	andeq	r0, r0, r1
 724:	00000001 	andeq	r0, r0, r1
 728:	00000001 	andeq	r0, r0, r1
 72c:	00000001 	andeq	r0, r0, r1
	...
 738:	10002d8a 	andne	r2, r0, sl, lsl #27
 73c:	10002da8 	andne	r2, r0, r8, lsr #27
 740:	10002db0 			; <UNDEFINED> instruction: 0x10002db0
 744:	10002dfc 	strdne	r2, [r0], -ip
	...
 750:	00000001 	andeq	r0, r0, r1
 754:	00000001 	andeq	r0, r0, r1
 758:	00000001 	andeq	r0, r0, r1
 75c:	00000001 	andeq	r0, r0, r1
	...
 768:	00000001 	andeq	r0, r0, r1
 76c:	00000001 	andeq	r0, r0, r1
 770:	00000001 	andeq	r0, r0, r1
 774:	00000001 	andeq	r0, r0, r1
	...
 780:	00000001 	andeq	r0, r0, r1
 784:	00000001 	andeq	r0, r0, r1
 788:	00000001 	andeq	r0, r0, r1
 78c:	00000001 	andeq	r0, r0, r1
	...
 798:	10002f12 	andne	r2, r0, r2, lsl pc
 79c:	10002f40 	andne	r2, r0, r0, asr #30
 7a0:	10002f44 	andne	r2, r0, r4, asr #30
 7a4:	10002f44 	andne	r2, r0, r4, asr #30
 7a8:	10002f44 	andne	r2, r0, r4, asr #30
 7ac:	10002f54 	andne	r2, r0, r4, asr pc
	...
 7b8:	00000001 	andeq	r0, r0, r1
 7bc:	00000001 	andeq	r0, r0, r1
 7c0:	10002420 	andne	r2, r0, r0, lsr #8
 7c4:	10002460 	andne	r2, r0, r0, ror #8
 7c8:	00000001 	andeq	r0, r0, r1
 7cc:	00000001 	andeq	r0, r0, r1
 7d0:	00000001 	andeq	r0, r0, r1
 7d4:	00000001 	andeq	r0, r0, r1
 7d8:	10002460 	andne	r2, r0, r0, ror #8
 7dc:	10002488 	andne	r2, r0, r8, lsl #9
 7e0:	10002488 	andne	r2, r0, r8, lsl #9
 7e4:	1000251e 	andne	r2, r0, lr, lsl r5
 7e8:	1000251e 	andne	r2, r0, lr, lsl r5
 7ec:	10002570 	andne	r2, r0, r0, ror r5
 7f0:	10002570 	andne	r2, r0, r0, ror r5
 7f4:	100025d8 	ldrdne	r2, [r0], -r8
 7f8:	100025d8 	ldrdne	r2, [r0], -r8
 7fc:	10002694 	mulne	r0, r4, r6
 800:	10002694 	mulne	r0, r4, r6
 804:	100026f6 	strdne	r2, [r0], -r6
 808:	100026f6 	strdne	r2, [r0], -r6
 80c:	1000271a 	andne	r2, r0, sl, lsl r7
 810:	1000271c 	andne	r2, r0, ip, lsl r7
 814:	10002768 	andne	r2, r0, r8, ror #14
 818:	10002768 	andne	r2, r0, r8, ror #14
 81c:	10002810 	andne	r2, r0, r0, lsl r8
 820:	10002810 	andne	r2, r0, r0, lsl r8
 824:	10002838 	andne	r2, r0, r8, lsr r8
 828:	10002838 	andne	r2, r0, r8, lsr r8
 82c:	1000285a 	andne	r2, r0, sl, asr r8
 830:	00000001 	andeq	r0, r0, r1
 834:	00000001 	andeq	r0, r0, r1
 838:	00000001 	andeq	r0, r0, r1
 83c:	00000001 	andeq	r0, r0, r1
 840:	00000001 	andeq	r0, r0, r1
 844:	00000001 	andeq	r0, r0, r1
 848:	00000001 	andeq	r0, r0, r1
 84c:	00000001 	andeq	r0, r0, r1
 850:	00000001 	andeq	r0, r0, r1
 854:	00000001 	andeq	r0, r0, r1
 858:	00000001 	andeq	r0, r0, r1
 85c:	00000001 	andeq	r0, r0, r1
 860:	00000001 	andeq	r0, r0, r1
 864:	00000001 	andeq	r0, r0, r1
 868:	00000001 	andeq	r0, r0, r1
 86c:	00000001 	andeq	r0, r0, r1
 870:	00000001 	andeq	r0, r0, r1
 874:	00000001 	andeq	r0, r0, r1
 878:	00000001 	andeq	r0, r0, r1
 87c:	00000001 	andeq	r0, r0, r1
 880:	1000285c 	andne	r2, r0, ip, asr r8
 884:	1000286c 	andne	r2, r0, ip, ror #16
 888:	1000286c 	andne	r2, r0, ip, ror #16
 88c:	10002878 	andne	r2, r0, r8, ror r8
 890:	00000001 	andeq	r0, r0, r1
 894:	00000001 	andeq	r0, r0, r1
 898:	10002878 	andne	r2, r0, r8, ror r8
 89c:	10002884 	andne	r2, r0, r4, lsl #17
 8a0:	00000001 	andeq	r0, r0, r1
 8a4:	00000001 	andeq	r0, r0, r1
 8a8:	00000001 	andeq	r0, r0, r1
 8ac:	00000001 	andeq	r0, r0, r1
 8b0:	00000001 	andeq	r0, r0, r1
 8b4:	00000001 	andeq	r0, r0, r1
 8b8:	00000001 	andeq	r0, r0, r1
 8bc:	00000001 	andeq	r0, r0, r1
 8c0:	10002884 	andne	r2, r0, r4, lsl #17
 8c4:	100028c0 	andne	r2, r0, r0, asr #17
 8c8:	100028c0 	andne	r2, r0, r0, asr #17
 8cc:	10002a20 	andne	r2, r0, r0, lsr #20
 8d0:	10002a20 	andne	r2, r0, r0, lsr #20
 8d4:	10002b50 	andne	r2, r0, r0, asr fp
 8d8:	00000001 	andeq	r0, r0, r1
 8dc:	00000001 	andeq	r0, r0, r1
 8e0:	10002b50 	andne	r2, r0, r0, asr fp
 8e4:	10002b6e 	andne	r2, r0, lr, ror #22
 8e8:	10002b70 	andne	r2, r0, r0, ror fp
 8ec:	10002ba8 	andne	r2, r0, r8, lsr #23
 8f0:	00000001 	andeq	r0, r0, r1
 8f4:	00000001 	andeq	r0, r0, r1
 8f8:	00000001 	andeq	r0, r0, r1
 8fc:	00000001 	andeq	r0, r0, r1
 900:	00000001 	andeq	r0, r0, r1
 904:	00000001 	andeq	r0, r0, r1
 908:	00000001 	andeq	r0, r0, r1
 90c:	00000001 	andeq	r0, r0, r1
 910:	00000001 	andeq	r0, r0, r1
 914:	00000001 	andeq	r0, r0, r1
 918:	00000001 	andeq	r0, r0, r1
 91c:	00000001 	andeq	r0, r0, r1
 920:	00000001 	andeq	r0, r0, r1
 924:	00000001 	andeq	r0, r0, r1
 928:	10002ba8 	andne	r2, r0, r8, lsr #23
 92c:	10002c2c 	andne	r2, r0, ip, lsr #24
 930:	00000001 	andeq	r0, r0, r1
 934:	00000001 	andeq	r0, r0, r1
 938:	10002c2c 	andne	r2, r0, ip, lsr #24
 93c:	10002c48 	andne	r2, r0, r8, asr #24
 940:	00000001 	andeq	r0, r0, r1
 944:	00000001 	andeq	r0, r0, r1
 948:	10002c48 	andne	r2, r0, r8, asr #24
 94c:	10002c84 	andne	r2, r0, r4, lsl #25
 950:	10002c84 	andne	r2, r0, r4, lsl #25
 954:	10002d68 	andne	r2, r0, r8, ror #26
 958:	00000001 	andeq	r0, r0, r1
 95c:	00000001 	andeq	r0, r0, r1
 960:	00000001 	andeq	r0, r0, r1
 964:	00000001 	andeq	r0, r0, r1
 968:	10002d68 	andne	r2, r0, r8, ror #26
 96c:	10002d80 	andne	r2, r0, r0, lsl #27
 970:	10002d80 	andne	r2, r0, r0, lsl #27
 974:	10002dfc 	strdne	r2, [r0], -ip
 978:	10002dfc 	strdne	r2, [r0], -ip
 97c:	10002e08 	andne	r2, r0, r8, lsl #28
 980:	10002e08 	andne	r2, r0, r8, lsl #28
 984:	10002e50 	andne	r2, r0, r0, asr lr
 988:	00000001 	andeq	r0, r0, r1
 98c:	00000001 	andeq	r0, r0, r1
 990:	00000001 	andeq	r0, r0, r1
 994:	00000001 	andeq	r0, r0, r1
 998:	00000001 	andeq	r0, r0, r1
 99c:	00000001 	andeq	r0, r0, r1
 9a0:	00000001 	andeq	r0, r0, r1
 9a4:	00000001 	andeq	r0, r0, r1
 9a8:	00000001 	andeq	r0, r0, r1
 9ac:	00000001 	andeq	r0, r0, r1
 9b0:	10002e50 	andne	r2, r0, r0, asr lr
 9b4:	10002ed0 	ldrdne	r2, [r0], -r0
 9b8:	00000001 	andeq	r0, r0, r1
 9bc:	00000001 	andeq	r0, r0, r1
 9c0:	00000001 	andeq	r0, r0, r1
 9c4:	00000001 	andeq	r0, r0, r1
 9c8:	00000001 	andeq	r0, r0, r1
 9cc:	00000001 	andeq	r0, r0, r1
 9d0:	00000001 	andeq	r0, r0, r1
 9d4:	00000001 	andeq	r0, r0, r1
 9d8:	00000001 	andeq	r0, r0, r1
 9dc:	00000001 	andeq	r0, r0, r1
 9e0:	00000001 	andeq	r0, r0, r1
 9e4:	00000001 	andeq	r0, r0, r1
 9e8:	00000001 	andeq	r0, r0, r1
 9ec:	00000001 	andeq	r0, r0, r1
 9f0:	00000001 	andeq	r0, r0, r1
 9f4:	00000001 	andeq	r0, r0, r1
 9f8:	00000001 	andeq	r0, r0, r1
 9fc:	00000001 	andeq	r0, r0, r1
 a00:	00000001 	andeq	r0, r0, r1
 a04:	00000001 	andeq	r0, r0, r1
 a08:	10002ed0 	ldrdne	r2, [r0], -r0
 a0c:	10002ee8 	andne	r2, r0, r8, ror #29
 a10:	10002ee8 	andne	r2, r0, r8, ror #29
 a14:	10002f54 	andne	r2, r0, r4, asr pc
 a18:	10002f54 	andne	r2, r0, r4, asr pc
 a1c:	10002f9c 	mulne	r0, ip, pc	; <UNPREDICTABLE>
 a20:	10002f9c 	mulne	r0, ip, pc	; <UNPREDICTABLE>
 a24:	10002fb4 			; <UNDEFINED> instruction: 0x10002fb4
 a28:	00000001 	andeq	r0, r0, r1
 a2c:	00000001 	andeq	r0, r0, r1
	...
 a38:	10002fb4 			; <UNDEFINED> instruction: 0x10002fb4
 a3c:	10002fd4 	ldrdne	r2, [r0], -r4
 a40:	10002fd4 	ldrdne	r2, [r0], -r4
 a44:	1000301c 	andne	r3, r0, ip, lsl r0
 a48:	1000301c 	andne	r3, r0, ip, lsl r0
 a4c:	10003044 	andne	r3, r0, r4, asr #32
 a50:	10003044 	andne	r3, r0, r4, asr #32
 a54:	10003084 	andne	r3, r0, r4, lsl #1
 a58:	10003084 	andne	r3, r0, r4, lsl #1
 a5c:	100030b4 	strhne	r3, [r0], -r4
 a60:	100030b4 	strhne	r3, [r0], -r4
 a64:	100030e0 	andne	r3, r0, r0, ror #1
 a68:	100030e0 	andne	r3, r0, r0, ror #1
 a6c:	10003148 	andne	r3, r0, r8, asr #2
 a70:	10003148 	andne	r3, r0, r8, asr #2
 a74:	10003240 	andne	r3, r0, r0, asr #4
 a78:	10003240 	andne	r3, r0, r0, asr #4
 a7c:	10003256 	andne	r3, r0, r6, asr r2
 a80:	10003258 	andne	r3, r0, r8, asr r2
 a84:	100032b8 			; <UNDEFINED> instruction: 0x100032b8
 a88:	00000001 	andeq	r0, r0, r1
 a8c:	00000001 	andeq	r0, r0, r1
 a90:	100032b8 			; <UNDEFINED> instruction: 0x100032b8
 a94:	10003314 	andne	r3, r0, r4, lsl r3
 a98:	00000001 	andeq	r0, r0, r1
 a9c:	00000001 	andeq	r0, r0, r1
 aa0:	00000001 	andeq	r0, r0, r1
 aa4:	00000001 	andeq	r0, r0, r1
 aa8:	00000001 	andeq	r0, r0, r1
 aac:	00000001 	andeq	r0, r0, r1
 ab0:	00000001 	andeq	r0, r0, r1
 ab4:	00000001 	andeq	r0, r0, r1
 ab8:	00000001 	andeq	r0, r0, r1
 abc:	00000001 	andeq	r0, r0, r1
 ac0:	00000001 	andeq	r0, r0, r1
 ac4:	00000001 	andeq	r0, r0, r1
 ac8:	00000001 	andeq	r0, r0, r1
 acc:	00000001 	andeq	r0, r0, r1
 ad0:	00000001 	andeq	r0, r0, r1
 ad4:	00000001 	andeq	r0, r0, r1
 ad8:	00000001 	andeq	r0, r0, r1
 adc:	00000001 	andeq	r0, r0, r1
 ae0:	00000001 	andeq	r0, r0, r1
 ae4:	00000001 	andeq	r0, r0, r1
 ae8:	00000001 	andeq	r0, r0, r1
 aec:	00000001 	andeq	r0, r0, r1
 af0:	00000001 	andeq	r0, r0, r1
 af4:	00000001 	andeq	r0, r0, r1
 af8:	00000001 	andeq	r0, r0, r1
 afc:	00000001 	andeq	r0, r0, r1
 b00:	00000001 	andeq	r0, r0, r1
 b04:	00000001 	andeq	r0, r0, r1
 b08:	00000001 	andeq	r0, r0, r1
 b0c:	00000001 	andeq	r0, r0, r1
 b10:	00000001 	andeq	r0, r0, r1
 b14:	00000001 	andeq	r0, r0, r1
 b18:	00000001 	andeq	r0, r0, r1
 b1c:	00000001 	andeq	r0, r0, r1
 b20:	00000001 	andeq	r0, r0, r1
 b24:	00000001 	andeq	r0, r0, r1
	...
 b30:	10003314 	andne	r3, r0, r4, lsl r3
 b34:	1000336c 	andne	r3, r0, ip, ror #6
 b38:	1000336c 	andne	r3, r0, ip, ror #6
 b3c:	100033d0 	ldrdne	r3, [r0], -r0
 b40:	100033d0 	ldrdne	r3, [r0], -r0
 b44:	100034a4 	andne	r3, r0, r4, lsr #9
 b48:	100034a4 	andne	r3, r0, r4, lsr #9
 b4c:	100034f4 	strdne	r3, [r0], -r4
 b50:	00000001 	andeq	r0, r0, r1
 b54:	00000001 	andeq	r0, r0, r1
 b58:	00000001 	andeq	r0, r0, r1
 b5c:	00000001 	andeq	r0, r0, r1
 b60:	00000001 	andeq	r0, r0, r1
 b64:	00000001 	andeq	r0, r0, r1
 b68:	00000001 	andeq	r0, r0, r1
 b6c:	00000001 	andeq	r0, r0, r1
 b70:	00000001 	andeq	r0, r0, r1
 b74:	00000001 	andeq	r0, r0, r1
 b78:	00000001 	andeq	r0, r0, r1
 b7c:	00000001 	andeq	r0, r0, r1
	...
 b88:	100034f4 	strdne	r3, [r0], -r4
 b8c:	1000350c 	andne	r3, r0, ip, lsl #10
 b90:	1000350c 	andne	r3, r0, ip, lsl #10
 b94:	10003620 	andne	r3, r0, r0, lsr #12
 b98:	10003620 	andne	r3, r0, r0, lsr #12
 b9c:	1000365c 	andne	r3, r0, ip, asr r6
 ba0:	1000365c 	andne	r3, r0, ip, asr r6
 ba4:	10003672 	andne	r3, r0, r2, ror r6
 ba8:	10003674 	andne	r3, r0, r4, ror r6
 bac:	10003690 	mulne	r0, r0, r6
 bb0:	10003690 	mulne	r0, r0, r6
 bb4:	100036ac 	andne	r3, r0, ip, lsr #13
 bb8:	100036ac 	andne	r3, r0, ip, lsr #13
 bbc:	100036ce 	andne	r3, r0, lr, asr #13
 bc0:	100036ce 	andne	r3, r0, lr, asr #13
 bc4:	100036e2 	andne	r3, r0, r2, ror #13
 bc8:	100036e4 	andne	r3, r0, r4, ror #13
 bcc:	10003774 	andne	r3, r0, r4, ror r7
 bd0:	10003774 	andne	r3, r0, r4, ror r7
 bd4:	100037b4 			; <UNDEFINED> instruction: 0x100037b4
 bd8:	00000001 	andeq	r0, r0, r1
 bdc:	00000001 	andeq	r0, r0, r1
 be0:	00000001 	andeq	r0, r0, r1
 be4:	00000001 	andeq	r0, r0, r1
	...
 bf0:	100037b4 			; <UNDEFINED> instruction: 0x100037b4
 bf4:	100037da 	ldrdne	r3, [r0], -sl
 bf8:	00000001 	andeq	r0, r0, r1
 bfc:	00000001 	andeq	r0, r0, r1
 c00:	00000001 	andeq	r0, r0, r1
 c04:	00000001 	andeq	r0, r0, r1
 c08:	00000001 	andeq	r0, r0, r1
 c0c:	00000001 	andeq	r0, r0, r1
 c10:	100037e0 	andne	r3, r0, r0, ror #15
 c14:	100037fa 	strdne	r3, [r0], -sl
 c18:	10003800 	andne	r3, r0, r0, lsl #16
 c1c:	10003816 	andne	r3, r0, r6, lsl r8
 c20:	10003816 	andne	r3, r0, r6, lsl r8
 c24:	10003824 	andne	r3, r0, r4, lsr #16
 c28:	10003824 	andne	r3, r0, r4, lsr #16
 c2c:	10003868 	andne	r3, r0, r8, ror #16
 c30:	1000386c 	andne	r3, r0, ip, ror #16
 c34:	1000387e 	andne	r3, r0, lr, ror r8
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
    __asm volatile ( "mrs %0, ipsr" : "=r" ( ulCurrentInterrupt )::"memory" );
       0:	00000430 	andeq	r0, r0, r0, lsr r4
    if( ulCurrentInterrupt == 0 )
       4:	02340003 	eorseq	r0, r4, #3
        xReturn = pdFALSE;
       8:	01020000 	mrseq	r0, (UNDEF: 2)
}
       c:	000d0efb 	strdeq	r0, [sp], -fp
      10:	01010101 	tsteq	r1, r1, lsl #2
      14:	01000000 	mrseq	r0, (UNDEF: 0)
        if(ch == '\n' || it >= size) {
      18:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
}
      1c:	7070612f 	rsbsvc	r6, r0, pc, lsr #2
      20:	6163696c 	cmnvs	r3, ip, ror #18
      24:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
      28:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
      2c:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
      30:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
      34:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
      38:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
      3c:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
      40:	5f6d7261 	svcpl	0x006d7261
        BaseType_t xReturn = pdFAIL;
      44:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
    }
      48:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
                pxBlock = heapPROTECT_BLOCK_POINTER( pxBlock->pxNextFreeBlock );
      4c:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
            while( pxBlock != pxEnd )
      50:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
      54:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
                if( pxBlock->xBlockSize > xMaxSize )
      58:	30312d69 	eorscc	r2, r1, r9, ror #26
      5c:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
                if( pxBlock->xBlockSize < xMinSize )
      60:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
                    xMinSize = pxBlock->xBlockSize;
      64:	615c3031 	cmpvs	ip, r1, lsr r0
      68:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
      6c:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
      70:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
      74:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
      78:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
      7c:	63616d5c 	cmnvs	r1, #92, 26	; 0x1700
            prvUnlockQueue( pxQueue );
      80:	656e6968 	strbvs	r6, [lr, #-2408]!	; 0xfffff698
            ( void ) xTaskResumeAll();
      84:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
      88:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
      8c:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
      90:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
        taskENTER_CRITICAL();
      94:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
            if( uxSemaphoreCount > ( UBaseType_t ) 0 )
      98:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
                if( xTicksToWait == ( TickType_t ) 0 )
      9c:	5f6d7261 	svcpl	0x006d7261
      a0:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
                else if( xEntryTimeSet == pdFALSE )
      a4:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
        taskEXIT_CRITICAL();
      a8:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
        vTaskSuspendAll();
      ac:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
        prvLockQueue( pxQueue );
      b0:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
      b4:	30312d69 	eorscc	r2, r1, r9, ror #26
      b8:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
      bc:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
      c0:	615c3031 	cmpvs	ip, r1, lsr r0
      c4:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
      c8:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
      cc:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
        if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
      d0:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
      d4:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
      d8:	7379735c 	cmnvc	r9, #92, 6	; 0x70000001
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
      dc:	2f2e2e00 	svccs	0x002e2e00
      e0:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
                    if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
      e4:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
      e8:	6f747262 	svcvs	0x00747262
                vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
      ec:	72462f73 	subvc	r2, r6, #460	; 0x1cc
      f0:	54526565 	ldrbpl	r6, [r2], #-1381	; 0xfffffa9b
                prvUnlockQueue( pxQueue );
      f4:	702f534f 	eorvc	r5, pc, pc, asr #6
      f8:	6174726f 	cmnvs	r4, pc, ror #4
                if( xTaskResumeAll() == pdFALSE )
      fc:	2f656c62 	svccs	0x00656c62
     100:	2f434347 	svccs	0x00434347
                    taskYIELD_WITHIN_API();
     104:	5f4d5241 	svcpl	0x004d5241
                    if( xInheritanceOccurred != pdFALSE )
     108:	33334d43 	teqcc	r3, #4288	; 0x10c0
                return errQUEUE_EMPTY;
     10c:	5a544e5f 	bpl	1513a90 <__RAM_SIZE+0x1413a90>
                        taskENTER_CRITICAL();
     110:	6e6f6e2f 	cdpvs	14, 6, cr6, cr15, cr15, {1}
                            uxHighestWaitingPriority = prvGetDisinheritPriorityAfterTimeout( pxQueue );
     114:	6365735f 	cmnvs	r5, #2080374785	; 0x7c000001
     118:	00657275 	rsbeq	r7, r5, r5, ror r2
                            vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
     11c:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
                        taskEXIT_CRITICAL();
     120:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
     124:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
     128:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
     12c:	6572462f 	ldrbvs	r4, [r2, #-1583]!	; 0xfffff9d1
     130:	4f545265 	svcmi	0x00545265
     134:	6e692f53 	mcrvs	15, 3, r2, cr9, cr3, {2}
     138:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
     13c:	2e2e0065 	cdpcs	0, 2, cr0, cr14, cr5, {3}
     140:	726f432f 	rsbvc	r4, pc, #-1140850688	; 0xbc000000
     144:	6e492f65 	cdpvs	15, 4, cr2, cr9, cr5, {3}
     148:	2e2e0063 	cdpcs	0, 2, cr0, cr14, cr3, {3}
     14c:	2f2e2e2f 	svccs	0x002e2e2f
     150:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; a0 <__STACKSEAL_SIZE+0xa0>
     154:	74756269 	ldrbtvc	r6, [r5], #-617	; 0xfffffd97
     158:	2f736c69 	svccs	0x00736c69
     15c:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
     160:	75642d74 	strbvc	r2, [r4, #-3444]!	; 0xfffff28c
     164:	692f706d 	stmdbvs	pc!, {r0, r2, r3, r5, r6, ip, sp, lr}	; <UNPREDICTABLE>
     168:	6300636e 	movwvs	r6, #878	; 0x36e
     16c:	73755c3a 	cmnvc	r5, #14848	; 0x3a00
     170:	5c737265 	lfmpl	f7, 2, [r3], #-404	; 0xfffffe6c
     174:	6f646978 	svcvs	0x00646978
     178:	72705c6e 	rsbsvc	r5, r0, #28160	; 0x6e00
     17c:	6172676f 	cmnvs	r2, pc, ror #14
     180:	72615c6d 	rsbvc	r5, r1, #27904	; 0x6d00
     184:	63675f6d 	cmnvs	r7, #436	; 0x1b4
     188:	63675c63 	cmnvs	r7, #25344	; 0x6300
     18c:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
     190:	6f6e2d6d 	svcvs	0x006e2d6d
     194:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
     198:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
     19c:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
     1a0:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
     1a4:	30312e31 	eorscc	r2, r1, r1, lsr lr
     1a8:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
     1ac:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
     1b0:	61652d65 	cmnvs	r5, r5, ror #26
     1b4:	695c6962 	ldmdbvs	ip, {r1, r5, r6, r8, fp, sp, lr}^
     1b8:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
     1bc:	00006564 	andeq	r6, r0, r4, ror #10
     1c0:	6e69616d 	powvsez	f6, f1, #5.0
     1c4:	0100632e 	tsteq	r0, lr, lsr #6
     1c8:	645f0000 	ldrbvs	r0, [pc], #-0	; 1d0 <__STACKSEAL_SIZE+0x1d0>
     1cc:	75616665 	strbvc	r6, [r1, #-1637]!	; 0xfffff99b
     1d0:	745f746c 	ldrbvc	r7, [pc], #-1132	; 1d8 <__STACKSEAL_SIZE+0x1d8>
     1d4:	73657079 	cmnvc	r5, #121	; 0x79
     1d8:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
     1dc:	735f0000 	cmpvc	pc, #0
     1e0:	6e696474 	mcrvs	4, 3, r6, cr9, cr4, {3}
     1e4:	00682e74 	rsbeq	r2, r8, r4, ror lr
     1e8:	70000003 	andvc	r0, r0, r3
     1ec:	6d74726f 	lfmvs	f7, 2, [r4, #-444]!	; 0xfffffe44
     1f0:	6f726361 	svcvs	0x00726361
     1f4:	6d6d6f63 	stclvs	15, cr6, [sp, #-396]!	; 0xfffffe74
     1f8:	682e6e6f 	stmdavs	lr!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}
     1fc:	00000400 	andeq	r0, r0, r0, lsl #8
     200:	6b736174 	blvs	1cd87d8 <__RAM_SIZE+0x1bd87d8>
     204:	0500682e 	streq	r6, [r0, #-2094]	; 0xfffff7d2
     208:	61750000 	cmnvs	r5, r0
     20c:	682e7472 	stmdavs	lr!, {r1, r4, r5, r6, sl, ip, sp, lr}
     210:	00000600 	andeq	r0, r0, r0, lsl #12
     214:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
     218:	75642d74 	strbvc	r2, [r4, #-3444]!	; 0xfffff28c
     21c:	682e706d 	stmdavs	lr!, {r0, r2, r3, r5, r6, ip, sp, lr}
     220:	00000700 	andeq	r0, r0, r0, lsl #14
     224:	69647473 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
     228:	00682e6f 	rsbeq	r2, r8, pc, ror #28
     22c:	3c000008 	stccc	0, cr0, [r0], {8}
     230:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	; 0xfffffe78
     234:	6e692d74 	mcrvs	13, 3, r2, cr9, cr4, {3}
     238:	0000003e 	andeq	r0, r0, lr, lsr r0
     23c:	22050000 	andcs	r0, r5, #0
     240:	00020500 	andeq	r0, r2, r0, lsl #10
     244:	03100008 	tsteq	r0, #8
     248:	050100d3 	streq	r0, [r1, #-211]	; 0xffffff2d
     24c:	13132f05 	tstne	r3, #5, 30
     250:	01060f05 	tsteq	r6, r5, lsl #30
     254:	ad060505 	cfstr32ge	mvfx0, [r6, #-20]	; 0xffffffec
     258:	01060805 	tsteq	r6, r5, lsl #16
     25c:	3f060905 	svccc	0x00060905
     260:	01052006 	tsteq	r5, r6
     264:	06090530 			; <UNDEFINED> instruction: 0x06090530
     268:	022e0638 	eoreq	r0, lr, #56, 12	; 0x3800000
     26c:	0101000a 	tsteq	r1, sl
     270:	05002605 	streq	r2, [r0, #-1541]	; 0xfffff9fb
     274:	00000002 	andeq	r0, r0, r2
     278:	010e0300 	mrseq	r0, ELR_hyp
     27c:	05210505 	streq	r0, [r1, #-1285]!	; 0xfffffafb
     280:	023d0601 	eorseq	r0, sp, #1048576	; 0x100000
     284:	01010004 	tsteq	r1, r4
     288:	05001c05 	streq	r1, [r0, #-3077]	; 0xfffff3fb
     28c:	00000002 	andeq	r0, r0, r2
     290:	01120300 	tsteq	r2, r0, lsl #6
     294:	05210505 	streq	r0, [r1, #-1285]!	; 0xfffffafb
     298:	023d0601 	eorseq	r0, sp, #1048576	; 0x100000
     29c:	01010004 	tsteq	r1, r4
     2a0:	05001b05 	streq	r1, [r0, #-2821]	; 0xfffff4fb
     2a4:	00084402 	andeq	r4, r8, r2, lsl #8
     2a8:	01160310 	tsteq	r6, r0, lsl r3
     2ac:	052f0505 	streq	r0, [pc, #-1285]!	; fffffdaf <__StackTop+0xc7effdaf>
     2b0:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
     2b4:	05670605 	strbeq	r0, [r7, #-1541]!	; 0xfffff9fb
     2b8:	0501061a 	streq	r0, [r1, #-1562]	; 0xfffff9e6
     2bc:	053d0605 	ldreq	r0, [sp, #-1541]!	; 0xfffff9fb
     2c0:	2e01061a 	mcrcs	6, 0, r0, cr1, cr10, {0}
     2c4:	21060505 	tstcs	r6, r5, lsl #10
     2c8:	01061105 	tsteq	r6, r5, lsl #2
     2cc:	0605053c 			; <UNDEFINED> instruction: 0x0605053c
     2d0:	0608052f 	streq	r0, [r8], -pc, lsr #10
     2d4:	06090501 	streq	r0, [r9], -r1, lsl #10
     2d8:	06200631 			; <UNDEFINED> instruction: 0x06200631
     2dc:	010e052f 	tsteq	lr, pc, lsr #10
     2e0:	01061205 	tsteq	r6, r5, lsl #4
     2e4:	20200905 	eorcs	r0, r0, r5, lsl #18
     2e8:	2e060f06 	cdpcs	15, 0, cr0, cr6, cr6, {0}
     2ec:	02000d05 	andeq	r0, r0, #320	; 0x140
     2f0:	40060304 	andmi	r0, r6, r4, lsl #6
     2f4:	02002405 	andeq	r2, r0, #83886080	; 0x5000000
     2f8:	05570304 	ldrbeq	r0, [r7, #-772]	; 0xfffffcfc
     2fc:	04020025 	streq	r0, [r2], #-37	; 0xffffffdb
     300:	05010603 	streq	r0, [r1, #-1539]	; 0xfffff9fd
     304:	04020019 	streq	r0, [r2], #-25	; 0xffffffe7
     308:	05200601 	streq	r0, [r0, #-1537]!	; 0xfffff9ff
     30c:	04020009 	streq	r0, [r2], #-9
     310:	06010601 	streq	r0, [r1], -r1, lsl #12
     314:	06010531 			; <UNDEFINED> instruction: 0x06010531
     318:	08022e3e 	stmdaeq	r2, {r1, r2, r3, r4, r5, r9, sl, fp, sp}
     31c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
     320:	02050012 	andeq	r0, r5, #18
     324:	100008ac 	andne	r0, r0, ip, lsr #17
     328:	05012603 	streq	r2, [r1, #-1539]	; 0xfffff9fd
     32c:	2f4b2105 	svccs	0x004b2105
     330:	06010513 			; <UNDEFINED> instruction: 0x06010513
     334:	0005022f 	andeq	r0, r5, pc, lsr #4
     338:	12050101 	andne	r0, r5, #1073741824	; 0x40000000
     33c:	c8020500 	stmdagt	r2, {r8, sl}
     340:	03100008 	tsteq	r0, #8
     344:	0505012d 	streq	r0, [r5, #-301]	; 0xfffffed3
     348:	01054b21 	tsteq	r5, r1, lsr #22
     34c:	05022f06 	streq	r2, [r2, #-3846]	; 0xfffff0fa
     350:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
     354:	02050012 	andeq	r0, r5, #18
     358:	100008e0 	andne	r0, r0, r0, ror #17
     35c:	05013203 	streq	r3, [r1, #-515]	; 0xfffffdfd
     360:	054b2105 	strbeq	r2, [fp, #-261]	; 0xfffffefb
     364:	022f0601 	eoreq	r0, pc, #1048576	; 0x100000
     368:	01010005 	tsteq	r1, r5
     36c:	05001205 	streq	r1, [r0, #-517]	; 0xfffffdfb
     370:	0008f802 	andeq	pc, r8, r2, lsl #16
     374:	01370310 	teqeq	r7, r0, lsl r3
     378:	4b210505 	blmi	841794 <__RAM_SIZE+0x741794>
     37c:	2f060105 	svccs	0x00060105
     380:	01000502 	tsteq	r0, r2, lsl #10
     384:	00120501 	andseq	r0, r2, r1, lsl #10
     388:	09100205 	ldmdbeq	r0, {r0, r2, r9}
     38c:	3c031000 	stccc	0, cr1, [r3], {-0}
     390:	21050501 	tstcs	r5, r1, lsl #10
     394:	0601054b 	streq	r0, [r1], -fp, asr #10
     398:	0005022f 	andeq	r0, r5, pc, lsr #4
     39c:	12050101 	andne	r0, r5, #1073741824	; 0x40000000
     3a0:	28020500 	stmdacs	r2, {r8, sl}
     3a4:	03100009 	tsteq	r0, #9
     3a8:	050100c1 	streq	r0, [r1, #-193]	; 0xffffff3f
     3ac:	054b2105 	strbeq	r2, [fp, #-261]	; 0xfffffefb
     3b0:	022f0601 	eoreq	r0, pc, #1048576	; 0x100000
     3b4:	01010005 	tsteq	r1, r5
     3b8:	05002f05 	streq	r2, [r0, #-3845]	; 0xfffff0fb
     3bc:	00094002 	andeq	r4, r9, r2
     3c0:	00c60310 	sbceq	r0, r6, r0, lsl r3
     3c4:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
     3c8:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
     3cc:	05010609 	streq	r0, [r1, #-1545]	; 0xfffff9f7
     3d0:	0533060d 	ldreq	r0, [r3, #-1549]!	; 0xfffff9f3
     3d4:	09052a05 	stmdbeq	r5, {r0, r2, r9, fp, sp}
     3d8:	053d4b13 	ldreq	r4, [sp, #-2835]!	; 0xfffff4ed
     3dc:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
     3e0:	0531060d 	ldreq	r0, [r1, #-1549]!	; 0xfffff9f3
     3e4:	20010614 	andcs	r0, r1, r4, lsl r6
     3e8:	01000302 	tsteq	r0, r2, lsl #6
     3ec:	00100501 	andseq	r0, r0, r1, lsl #10
     3f0:	09640205 	stmdbeq	r4!, {r0, r2, r9}^
     3f4:	de031000 	cdple	0, 0, cr1, cr3, cr0, {0}
     3f8:	05050100 	streq	r0, [r5, #-256]	; 0xffffff00
     3fc:	3d301321 	ldccc	3, cr1, [r0, #-132]!	; 0xffffff7c
     400:	0609052f 	streq	r0, [r9], -pc, lsr #10
     404:	00050529 	andeq	r0, r5, r9, lsr #10
     408:	06010402 	streq	r0, [r1], -r2, lsl #8
     40c:	00090527 	andeq	r0, r9, r7, lsr #10
     410:	13010402 	movwne	r0, #5122	; 0x1402
     414:	01040200 	mrseq	r0, R12_usr
     418:	04020021 	streq	r0, [r2], #-33	; 0xffffffdf
     41c:	05200601 	streq	r0, [r0, #-1537]!	; 0xfffff9ff
     420:	0402000b 	streq	r0, [r2], #-11
     424:	053a0601 	ldreq	r0, [sl, #-1537]!	; 0xfffff9ff
     428:	04020009 	streq	r0, [r2], #-9
     42c:	02140601 	andseq	r0, r4, #1048576	; 0x100000
     430:	01010006 	tsteq	r1, r6
     434:	000001d1 	ldrdeq	r0, [r0], -r1
     438:	01810003 	orreq	r0, r1, r3
     43c:	01020000 	mrseq	r0, (UNDEF: 2)
     440:	000d0efb 	strdeq	r0, [sp], -fp
     444:	01010101 	tsteq	r1, r1, lsl #2
     448:	01000000 	mrseq	r0, (UNDEF: 0)
     44c:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
     450:	7070612f 	rsbsvc	r6, r0, pc, lsr #2
     454:	6163696c 	cmnvs	r3, ip, ror #18
     458:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
     45c:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
     460:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
     464:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
     468:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
     46c:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
     470:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
     474:	5f6d7261 	svcpl	0x006d7261
     478:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
     47c:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
     480:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
     484:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
     488:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
     48c:	30312d69 	eorscc	r2, r1, r9, ror #26
     490:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
     494:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
     498:	615c3031 	cmpvs	ip, r1, lsr r0
     49c:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
     4a0:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
     4a4:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     4a8:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
     4ac:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
     4b0:	63616d5c 	cmnvs	r1, #92, 26	; 0x1700
     4b4:	656e6968 	strbvs	r6, [lr, #-2408]!	; 0xfffff698
     4b8:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
     4bc:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
     4c0:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
     4c4:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
     4c8:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
     4cc:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
     4d0:	5f6d7261 	svcpl	0x006d7261
     4d4:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
     4d8:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
     4dc:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
     4e0:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
     4e4:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
     4e8:	30312d69 	eorscc	r2, r1, r9, ror #26
     4ec:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
     4f0:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
     4f4:	615c3031 	cmpvs	ip, r1, lsr r0
     4f8:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
     4fc:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
     500:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     504:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
     508:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
     50c:	7379735c 	cmnvc	r9, #92, 6	; 0x70000001
     510:	2f2e2e00 	svccs	0x002e2e00
     514:	76697244 	strbtvc	r7, [r9], -r4, asr #4
     518:	2f737265 	svccs	0x00737265
     51c:	49534d43 	ldmdbmi	r3, {r0, r1, r6, r8, sl, fp, lr}^
     520:	2f355f53 	svccs	0x00355f53
     524:	49534d43 	ldmdbmi	r3, {r0, r1, r6, r8, sl, fp, lr}^
     528:	6f432f53 	svcvs	0x00432f53
     52c:	492f6572 	stmdbmi	pc!, {r1, r4, r5, r6, r8, sl, sp, lr}	; <UNPREDICTABLE>
     530:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
     534:	2e006564 	cfsh32cs	mvfx6, mvfx0, #52
     538:	72442f2e 	subvc	r2, r4, #46, 30	; 0xb8
     53c:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
     540:	4d432f73 	stclmi	15, cr2, [r3, #-460]	; 0xfffffe34
     544:	5f534953 	svcpl	0x00534953
     548:	65442f35 	strbvs	r2, [r4, #-3893]	; 0xfffff0cb
     54c:	65636976 	strbvs	r6, [r3, #-2422]!	; 0xfffff68a
     550:	4d52412f 	ldfmie	f4, [r2, #-188]	; 0xffffff44
     554:	4d52412f 	ldfmie	f4, [r2, #-188]	; 0xffffff44
     558:	33334d43 	teqcc	r3, #4288	; 0x10c0
     55c:	636e492f 	cmnvs	lr, #770048	; 0xbc000
     560:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
     564:	79730000 	ldmdbvc	r3!, {}^	; <UNPREDICTABLE>
     568:	6d657473 	cfstrdvs	mvd7, [r5, #-460]!	; 0xfffffe34
     56c:	4d52415f 	ldfmie	f4, [r2, #-380]	; 0xfffffe84
     570:	33334d43 	teqcc	r3, #4288	; 0x10c0
     574:	0100632e 	tsteq	r0, lr, lsr #6
     578:	645f0000 	ldrbvs	r0, [pc], #-0	; 580 <__STACKSEAL_SIZE+0x580>
     57c:	75616665 	strbvc	r6, [r1, #-1637]!	; 0xfffff99b
     580:	745f746c 	ldrbvc	r7, [pc], #-1132	; 588 <__STACKSEAL_SIZE+0x588>
     584:	73657079 	cmnvc	r5, #121	; 0x79
     588:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
     58c:	735f0000 	cmpvc	pc, #0
     590:	6e696474 	mcrvs	4, 3, r6, cr9, cr4, {3}
     594:	00682e74 	rsbeq	r2, r8, r4, ror lr
     598:	63000003 	movwvs	r0, #3
     59c:	5f65726f 	svcpl	0x0065726f
     5a0:	33336d63 	teqcc	r3, #6336	; 0x18c0
     5a4:	0400682e 	streq	r6, [r0], #-2094	; 0xfffff7d2
     5a8:	79730000 	ldmdbvc	r3!, {}^	; <UNPREDICTABLE>
     5ac:	6d657473 	cfstrdvs	mvd7, [r5, #-460]!	; 0xfffffe34
     5b0:	4d52415f 	ldfmie	f4, [r2, #-380]	; 0xfffffe84
     5b4:	33334d43 	teqcc	r3, #4288	; 0x10c0
     5b8:	0500682e 	streq	r6, [r0, #-2094]	; 0xfffff7d2
     5bc:	05000000 	streq	r0, [r0, #-0]
     5c0:	02050001 	andeq	r0, r5, #1
     5c4:	00000000 	andeq	r0, r0, r0
     5c8:	0100c403 	tsteq	r0, r3, lsl #8
     5cc:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
     5d0:	05010613 	streq	r0, [r1, #-1555]	; 0xfffff9ed
     5d4:	05023d01 	streq	r3, [r2, #-3329]	; 0xfffff2ff
     5d8:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
     5dc:	02050001 	andeq	r0, r5, #1
     5e0:	10000990 	mulne	r0, r0, r9
     5e4:	0100cc03 	tsteq	r0, r3, lsl #24
     5e8:	05150305 	ldreq	r0, [r5, #-773]	; 0xfffffcfb
     5ec:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
     5f0:	05400603 	strbeq	r0, [r0, #-1539]	; 0xfffff9fd
     5f4:	0501060e 	streq	r0, [r1, #-1550]	; 0xfffff9f2
     5f8:	0c030603 	stceq	6, cr0, [r3], {3}
     5fc:	06130566 	ldreq	r0, [r3], -r6, ror #10
     600:	3d010501 	cfstr32cc	mvfx0, [r1, #-4]
     604:	01000a02 	tsteq	r0, r2, lsl #20
     608:	00120d01 	andseq	r0, r2, r1, lsl #26
     60c:	a1000300 	mrsge	r0, LR_irq
     610:	02000001 	andeq	r0, r0, #1
     614:	0d0efb01 	vstreq	d15, [lr, #-4]
     618:	01010100 	mrseq	r0, (UNDEF: 17)
     61c:	00000001 	andeq	r0, r0, r1
     620:	01000001 	tsteq	r0, r1
     624:	432f2e2e 			; <UNDEFINED> instruction: 0x432f2e2e
     628:	2f65726f 	svccs	0x0065726f
     62c:	00637253 	rsbeq	r7, r3, r3, asr r2
     630:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
     634:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
     638:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
     63c:	705c6e6f 	subsvc	r6, ip, pc, ror #28
     640:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
     644:	615c6d61 	cmpvs	ip, r1, ror #26
     648:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
     64c:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
     650:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
     654:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
     658:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
     65c:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     660:	2e30312d 	rsfcssp	f3, f0, #5.0
     664:	30322d33 	eorscc	r2, r2, r3, lsr sp
     668:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
     66c:	72615c30 	rsbvc	r5, r1, #48, 24	; 0x3000
     670:	6f6e2d6d 	svcvs	0x006e2d6d
     674:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
     678:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
     67c:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
     680:	5c656475 	cfstrdpl	mvd6, [r5], #-468	; 0xfffffe2c
     684:	6863616d 	stmdavs	r3!, {r0, r2, r3, r5, r6, r8, sp, lr}^
     688:	00656e69 	rsbeq	r6, r5, r9, ror #28
     68c:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
     690:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
     694:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
     698:	705c6e6f 	subsvc	r6, ip, pc, ror #28
     69c:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
     6a0:	615c6d61 	cmpvs	ip, r1, ror #26
     6a4:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
     6a8:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
     6ac:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
     6b0:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
     6b4:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
     6b8:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     6bc:	2e30312d 	rsfcssp	f3, f0, #5.0
     6c0:	30322d33 	eorscc	r2, r2, r3, lsr sp
     6c4:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
     6c8:	72615c30 	rsbvc	r5, r1, #48, 24	; 0x3000
     6cc:	6f6e2d6d 	svcvs	0x006e2d6d
     6d0:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
     6d4:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
     6d8:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
     6dc:	5c656475 	cfstrdpl	mvd6, [r5], #-468	; 0xfffffe2c
     6e0:	00737973 	rsbseq	r7, r3, r3, ror r9
     6e4:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
     6e8:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
     6ec:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
     6f0:	705c6e6f 	subsvc	r6, ip, pc, ror #28
     6f4:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
     6f8:	615c6d61 	cmpvs	ip, r1, ror #26
     6fc:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
     700:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
     704:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
     708:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
     70c:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
     710:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     714:	2e30312d 	rsfcssp	f3, f0, #5.0
     718:	30322d33 	eorscc	r2, r2, r3, lsr sp
     71c:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
     720:	696c5c30 	stmdbvs	ip!, {r4, r5, sl, fp, ip, lr}^
     724:	63675c62 	cmnvs	r7, #25088	; 0x6200
     728:	72615c63 	rsbvc	r5, r1, #25344	; 0x6300
     72c:	6f6e2d6d 	svcvs	0x006e2d6d
     730:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
     734:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
     738:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
     73c:	695c312e 	ldmdbvs	ip, {r1, r2, r3, r5, r8, ip, sp}^
     740:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
     744:	2e006564 	cfsh32cs	mvfx6, mvfx0, #52
     748:	6f432f2e 	svcvs	0x00432f2e
     74c:	492f6572 	stmdbmi	pc!, {r1, r4, r5, r6, r8, sl, sp, lr}	; <UNPREDICTABLE>
     750:	0000636e 	andeq	r6, r0, lr, ror #6
     754:	6e697270 	mcrvs	2, 3, r7, cr9, cr0, {3}
     758:	632e6674 			; <UNDEFINED> instruction: 0x632e6674
     75c:	00000100 	andeq	r0, r0, r0, lsl #2
     760:	6665645f 			; <UNDEFINED> instruction: 0x6665645f
     764:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
     768:	7079745f 	rsbsvc	r7, r9, pc, asr r4
     76c:	682e7365 	stmdavs	lr!, {r0, r2, r5, r6, r8, r9, ip, sp, lr}
     770:	00000200 	andeq	r0, r0, r0, lsl #4
     774:	6474735f 	ldrbtvs	r7, [r4], #-863	; 0xfffffca1
     778:	2e746e69 	cdpcs	14, 7, cr6, cr4, cr9, {3}
     77c:	00030068 	andeq	r0, r3, r8, rrx
     780:	64747300 	ldrbtvs	r7, [r4], #-768	; 0xfffffd00
     784:	2e677261 	cdpcs	2, 6, cr7, cr7, cr1, {3}
     788:	00040068 	andeq	r0, r4, r8, rrx
     78c:	64747300 	ldrbtvs	r7, [r4], #-768	; 0xfffffd00
     790:	2e666564 	cdpcs	5, 6, cr6, cr6, cr4, {3}
     794:	00040068 	andeq	r0, r4, r8, rrx
     798:	75623c00 	strbvc	r3, [r2, #-3072]!	; 0xfffff400
     79c:	2d746c69 	ldclcs	12, cr6, [r4, #-420]!	; 0xfffffe5c
     7a0:	003e6e69 	eorseq	r6, lr, r9, ror #28
     7a4:	70000000 	andvc	r0, r0, r0
     7a8:	746e6972 	strbtvc	r6, [lr], #-2418	; 0xfffff68e
     7ac:	00682e66 	rsbeq	r2, r8, r6, ror #28
     7b0:	00000005 	andeq	r0, r0, r5
     7b4:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
     7b8:	00000002 	andeq	r0, r0, r2
     7bc:	01850300 	orreq	r0, r5, r0, lsl #6
     7c0:	13030501 	movwne	r0, #13569	; 0x3501
     7c4:	01060605 	tsteq	r6, r5, lsl #12
     7c8:	2f060505 	svccs	0x00060505
     7cc:	01061a05 	tsteq	r6, r5, lsl #20
     7d0:	02220105 	eoreq	r0, r2, #1073741825	; 0x40000001
     7d4:	01010001 	tsteq	r1, r1
     7d8:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
     7dc:	0009bc02 	andeq	fp, r9, r2, lsl #24
     7e0:	018e0310 	orreq	r0, lr, r0, lsl r3
     7e4:	13030501 	movwne	r0, #13569	; 0x3501
     7e8:	05011405 	streq	r1, [r1, #-1029]	; 0xfffffbfb
     7ec:	2d050122 	stfcss	f0, [r5, #-136]	; 0xffffff78
     7f0:	06010501 	streq	r0, [r1], -r1, lsl #10
     7f4:	00010213 	andeq	r0, r1, r3, lsl r2
     7f8:	01050101 	tsteq	r5, r1, lsl #2
     7fc:	00020500 	andeq	r0, r2, r0, lsl #10
     800:	03000000 	movweq	r0, #0
     804:	0501019f 	streq	r0, [r1, #-415]	; 0xfffffe61
     808:	0e051303 	cdpeq	3, 0, cr1, cr5, cr3, {0}
     80c:	13030501 	movwne	r0, #13569	; 0x3501
     810:	01060605 	tsteq	r6, r5, lsl #12
     814:	051e0105 	ldreq	r0, [lr, #-261]	; 0xfffffefb
     818:	05240605 	streq	r0, [r4, #-1541]!	; 0xfffff9fb
     81c:	05010621 	streq	r0, [r1, #-1569]	; 0xfffff9df
     820:	05202006 	streq	r2, [r0, #-6]!
     824:	02202201 	eoreq	r2, r0, #268435456	; 0x10000000
     828:	01010001 	tsteq	r1, r1
     82c:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
     830:	0009be02 	andeq	fp, r9, r2, lsl #28
     834:	01bc0310 			; <UNDEFINED> instruction: 0x01bc0310
     838:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
     83c:	13210603 			; <UNDEFINED> instruction: 0x13210603
     840:	11061005 	tstne	r6, r5
     844:	05210905 	streq	r0, [r1, #-2309]!	; 0xfffff6fb
     848:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
     84c:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
     850:	22052e2a 	andcs	r2, r5, #672	; 0x2a0
     854:	2011052e 	andscs	r0, r1, lr, lsr #10
     858:	052e0705 	streq	r0, [lr, #-1797]!	; 0xfffff8fb
     85c:	051f0609 	ldreq	r0, [pc, #-1545]	; 25b <__STACKSEAL_SIZE+0x25b>
     860:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
     864:	1405200a 	strne	r2, [r5], #-10
     868:	20760306 	rsbscs	r0, r6, r6, lsl #6
     86c:	05140305 	ldreq	r0, [r4, #-773]	; 0xfffffcfb
     870:	20010616 	andcs	r0, r1, r6, lsl r6
     874:	1a090520 	bne	241cfc <__RAM_SIZE+0x141cfc>
     878:	31060305 	tstcc	r6, r5, lsl #6
     87c:	13060105 	movwne	r0, #24837	; 0x6105
     880:	01000102 	tsteq	r0, r2, lsl #2
     884:	00010501 	andeq	r0, r1, r1, lsl #10
     888:	09e20205 	stmibeq	r2!, {r0, r2, r9}^
     88c:	c7031000 	strgt	r1, [r3, -r0]
     890:	01060101 	tsteq	r6, r1, lsl #2
     894:	bb060305 	bllt	1814b0 <__RAM_SIZE+0x814b0>
     898:	06060515 			; <UNDEFINED> instruction: 0x06060515
     89c:	11052001 	tstne	r5, r1
     8a0:	001a053d 	andseq	r0, sl, sp, lsr r5
     8a4:	06010402 	streq	r0, [r1], -r2, lsl #8
     8a8:	0005052e 	andeq	r0, r5, lr, lsr #10
     8ac:	06010402 	streq	r0, [r1], -r2, lsl #8
     8b0:	00070501 	andeq	r0, r7, r1, lsl #10
     8b4:	06030402 	streq	r0, [r3], -r2, lsl #8
     8b8:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
     8bc:	052e0603 	streq	r0, [lr, #-1539]!	; 0xfffff9fd
     8c0:	04020025 	streq	r0, [r2], #-37	; 0xffffffdb
     8c4:	05490603 	strbeq	r0, [r9, #-1539]	; 0xfffff9fd
     8c8:	04020026 	streq	r0, [r2], #-38	; 0xffffffda
     8cc:	05010603 	streq	r0, [r1, #-1539]	; 0xfffff9fd
     8d0:	04020007 	streq	r0, [r2], #-7
     8d4:	02002f03 	andeq	r2, r0, #3, 30
     8d8:	002e0304 	eoreq	r0, lr, r4, lsl #6
     8dc:	3c030402 	cfstrscc	mvf0, [r3], {2}
     8e0:	18060505 	stmdane	r6, {r0, r2, r8, sl}
     8e4:	052e2006 	streq	r2, [lr, #-6]!
     8e8:	05650609 	strbeq	r0, [r5, #-1545]!	; 0xfffff9f7
     8ec:	06053303 	streq	r3, [r5], -r3, lsl #6
     8f0:	01050106 	tsteq	r5, r6, lsl #2
     8f4:	060b0551 			; <UNDEFINED> instruction: 0x060b0551
     8f8:	054a7a03 	strbeq	r7, [sl, #-2563]	; 0xfffff5fd
     8fc:	05010610 	streq	r0, [r1, #-1552]	; 0xfffff9f0
     900:	07052e0b 	streq	r2, [r5, -fp, lsl #28]
     904:	20062f06 	andcs	r2, r6, r6, lsl #30
     908:	01000602 	tsteq	r0, r2, lsl #12
     90c:	00010501 	andeq	r0, r1, r1, lsl #10
     910:	0a600205 	beq	180112c <__RAM_SIZE+0x170112c>
     914:	e3031000 	movw	r1, #12288	; 0x3000
     918:	01060101 	tsteq	r6, r1, lsl #2
     91c:	ca060305 	bgt	181538 <__RAM_SIZE+0x81538>
     920:	01060605 	tsteq	r6, r5, lsl #12
     924:	3d060505 	cfstr32cc	mvfx0, [r6, #-20]	; 0xffffffec
     928:	01060805 	tsteq	r6, r5, lsl #16
     92c:	02000f05 	andeq	r0, r0, #5, 30
     930:	05200104 	streq	r0, [r0, #-260]!	; 0xfffffefc
     934:	0402002a 	streq	r0, [r2], #-42	; 0xffffffd6
     938:	37053c02 	strcc	r3, [r5, -r2, lsl #24]
     93c:	03040200 	movweq	r0, #16896	; 0x4200
     940:	0607053c 			; <UNDEFINED> instruction: 0x0607053c
     944:	060c053d 			; <UNDEFINED> instruction: 0x060c053d
     948:	07052001 	streq	r2, [r5, -r1]
     94c:	12052306 	andne	r2, r5, #402653184	; 0x18000000
     950:	0e050106 	adfeqs	f0, f5, f6
     954:	060b054a 	streq	r0, [fp], -sl, asr #10
     958:	0019051f 	andseq	r0, r9, pc, lsl r5
     95c:	06010402 	streq	r0, [r1], -r2, lsl #8
     960:	060b052e 	streq	r0, [fp], -lr, lsr #10
     964:	00240531 	eoreq	r0, r4, r1, lsr r5
     968:	06010402 	streq	r0, [r1], -r2, lsl #8
     96c:	0035053c 	eorseq	r0, r5, ip, lsr r5
     970:	2e020402 	cdpcs	4, 0, cr0, cr2, cr2, {0}
     974:	2f060705 	svccs	0x00060705
     978:	01061205 	tsteq	r6, r5, lsl #4
     97c:	204a0e05 	subcs	r0, sl, r5, lsl #28
     980:	25060305 	strcs	r0, [r6, #-773]	; 0xfffffcfb
     984:	01060605 	tsteq	r6, r5, lsl #12
     988:	3d060505 	cfstr32cc	mvfx0, [r6, #-20]	; 0xffffffec
     98c:	01060805 	tsteq	r6, r5, lsl #16
     990:	02002405 	andeq	r2, r0, #83886080	; 0x5000000
     994:	053c0104 	ldreq	r0, [ip, #-260]!	; 0xfffffefc
     998:	0402002b 	streq	r0, [r2], #-43	; 0xffffffd5
     99c:	3d052002 	stccc	0, cr2, [r5, #-8]
     9a0:	03040200 	movweq	r0, #16896	; 0x4200
     9a4:	0605052e 	streq	r0, [r5], -lr, lsr #10
     9a8:	06080534 			; <UNDEFINED> instruction: 0x06080534
     9ac:	060a0501 	streq	r0, [sl], -r1, lsl #10
     9b0:	060d053f 			; <UNDEFINED> instruction: 0x060d053f
     9b4:	060a0501 	streq	r0, [sl], -r1, lsl #10
     9b8:	060d053f 			; <UNDEFINED> instruction: 0x060d053f
     9bc:	06050501 	streq	r0, [r5], -r1, lsl #10
     9c0:	0608053f 			; <UNDEFINED> instruction: 0x0608053f
     9c4:	06070501 	streq	r0, [r7], -r1, lsl #10
     9c8:	0612052f 	ldreq	r0, [r2], -pc, lsr #10
     9cc:	4a0e0501 	bmi	381dd8 <__RAM_SIZE+0x281dd8>
     9d0:	24060305 	strcs	r0, [r6], #-773	; 0xfffffcfb
     9d4:	01060605 	tsteq	r6, r5, lsl #12
     9d8:	2f060505 	svccs	0x00060505
     9dc:	01060805 	tsteq	r6, r5, lsl #16
     9e0:	3d060705 	stccc	7, cr0, [r6, #-20]	; 0xffffffec
     9e4:	01061205 	tsteq	r6, r5, lsl #4
     9e8:	054a0e05 	strbeq	r0, [sl, #-3589]	; 0xfffff1fb
     9ec:	0a030603 	beq	c2200 <__HEAP_SIZE+0xc1200>
     9f0:	060a0520 	streq	r0, [sl], -r0, lsr #10
     9f4:	67010501 	strvs	r0, [r1, -r1, lsl #10]
     9f8:	03060705 	movweq	r0, #26373	; 0x6705
     9fc:	05133c60 	ldreq	r3, [r3, #-3168]	; 0xfffff3a0
     a00:	2e01060a 	cfmadd32cs	mvax0, mvfx0, mvfx1, mvfx10
     a04:	02000f05 	andeq	r0, r0, #5, 30
     a08:	05200104 	streq	r0, [r0, #-260]!	; 0xfffffefc
     a0c:	09053b0a 	stmdbeq	r5, {r1, r3, r8, r9, fp, ip, sp}
     a10:	0c053006 	stceq	0, cr3, [r5], {6}
     a14:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
     a18:	17051e0a 	strne	r1, [r5, -sl, lsl #28]
     a1c:	01040200 	mrseq	r0, R12_usr
     a20:	00350533 	eorseq	r0, r5, r3, lsr r5
     a24:	3c020402 	cfstrscc	mvf0, [r2], {2}
     a28:	2f060705 	svccs	0x00060705
     a2c:	01061205 	tsteq	r6, r5, lsl #4
     a30:	054a0e05 	strbeq	r0, [sl, #-3589]	; 0xfffff1fb
     a34:	1c052012 	stcne	0, cr2, [r5], {18}
     a38:	01040200 	mrseq	r0, R12_usr
     a3c:	00390522 	eorseq	r0, r9, r2, lsr #10
     a40:	3c020402 	cfstrscc	mvf0, [r2], {2}
     a44:	2f060705 	svccs	0x00060705
     a48:	01061205 	tsteq	r6, r5, lsl #4
     a4c:	054a0e05 	strbeq	r0, [sl, #-3589]	; 0xfffff1fb
     a50:	1b052012 	blne	148aa0 <__RAM_SIZE+0x48aa0>
     a54:	01040200 	mrseq	r0, R12_usr
     a58:	06070522 	streq	r0, [r7], -r2, lsr #10
     a5c:	0612052f 	ldreq	r0, [r2], -pc, lsr #10
     a60:	4a0e0501 	bmi	381e6c <__RAM_SIZE+0x281e6c>
     a64:	060a0520 	streq	r0, [sl], -r0, lsr #10
     a68:	05200b03 	streq	r0, [r0, #-2819]!	; 0xfffff4fd
     a6c:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
     a70:	053d0607 	ldreq	r0, [sp, #-1543]!	; 0xfffff9f9
     a74:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
     a78:	05204a0e 	streq	r4, [r0, #-2574]!	; 0xfffff5f2
     a7c:	0522060a 	streq	r0, [r2, #-1546]!	; 0xfffff9f6
     a80:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
     a84:	053d0607 	ldreq	r0, [sp, #-1543]!	; 0xfffff9f9
     a88:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
     a8c:	02204a0e 	eoreq	r4, r0, #57344	; 0xe000
     a90:	01010001 	tsteq	r1, r1
     a94:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
     a98:	000b9802 	andeq	r9, fp, r2, lsl #16
     a9c:	02990310 	addseq	r0, r9, #16, 6	; 0x40000000
     aa0:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
     aa4:	13590603 	cmpne	r9, #3145728	; 0x300000
     aa8:	06060515 			; <UNDEFINED> instruction: 0x06060515
     aac:	06050501 	streq	r0, [r5], -r1, lsl #10
     ab0:	060b0521 	streq	r0, [fp], -r1, lsr #10
     ab4:	06030501 	streq	r0, [r3], -r1, lsl #10
     ab8:	06060532 			; <UNDEFINED> instruction: 0x06060532
     abc:	00220501 	eoreq	r0, r2, r1, lsl #10
     ac0:	3c010402 	cfstrscc	mvf0, [r1], {2}
     ac4:	02001205 	andeq	r1, r0, #1342177280	; 0x50000000
     ac8:	004d0104 	subeq	r0, sp, r4, lsl #2
     acc:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
     ad0:	02000e05 	andeq	r0, r0, #5, 28	; 0x50
     ad4:	052e0804 	streq	r0, [lr, #-2052]!	; 0xfffff7fc
     ad8:	04020012 	streq	r0, [r2], #-18	; 0xffffffee
     adc:	07052e08 	streq	r2, [r5, -r8, lsl #28]
     ae0:	08040200 	stmdaeq	r4, {r9}
     ae4:	0d055906 	vstreq.16	s10, [r5, #-12]	; <UNPREDICTABLE>
     ae8:	08040200 	stmdaeq	r4, {r9}
     aec:	02000106 	andeq	r0, r0, #-2147483647	; 0x80000001
     af0:	002e0804 	eoreq	r0, lr, r4, lsl #16
     af4:	06080402 	streq	r0, [r8], -r2, lsl #8
     af8:	00050513 	andeq	r0, r5, r3, lsl r5
     afc:	06080402 	streq	r0, [r8], -r2, lsl #8
     b00:	00140501 	andseq	r0, r4, r1, lsl #10
     b04:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
     b08:	052c0e05 	streq	r0, [ip, #-3589]!	; 0xfffff1fb
     b0c:	0520210d 	streq	r2, [r0, #-269]!	; 0xfffffef3
     b10:	050f0605 	streq	r0, [pc, #-1541]	; 513 <__STACKSEAL_SIZE+0x513>
     b14:	27051307 	strcs	r1, [r5, -r7, lsl #6]
     b18:	12050106 	andne	r0, r5, #-2147483647	; 0x80000001
     b1c:	0607054a 	streq	r0, [r7], -sl, asr #10
     b20:	0612052f 	ldreq	r0, [r2], -pc, lsr #10
     b24:	00550501 	subseq	r0, r5, r1, lsl #10
     b28:	3c020402 	cfstrscc	mvf0, [r2], {2}
     b2c:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
     b30:	02002007 	andeq	r2, r0, #7
     b34:	05200704 	streq	r0, [r0, #-1796]!	; 0xfffff8fc
     b38:	04020012 	streq	r0, [r2], #-18	; 0xffffffee
     b3c:	55052e07 	strpl	r2, [r5, #-3591]	; 0xfffff1f9
     b40:	0a052e58 	beq	14c4a8 <__RAM_SIZE+0x4c4a8>
     b44:	05017503 	streq	r7, [r1, #-1283]	; 0xfffffafd
     b48:	10030603 	andne	r0, r3, r3, lsl #12
     b4c:	060a0520 	streq	r0, [sl], -r0, lsr #10
     b50:	d7010501 	strle	r0, [r1, -r1, lsl #10]
     b54:	0101002e 	tsteq	r1, lr, lsr #32
     b58:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
     b5c:	000c2c02 	andeq	r2, ip, r2, lsl #24
     b60:	02b20310 	adcseq	r0, r2, #16, 6	; 0x40000000
     b64:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
     b68:	13d70603 	bicsne	r0, r7, #3145728	; 0x300000
     b6c:	06060515 			; <UNDEFINED> instruction: 0x06060515
     b70:	05052e01 	streq	r2, [r5, #-3585]	; 0xfffff1ff
     b74:	0b052106 	bleq	148f94 <__RAM_SIZE+0x48f94>
     b78:	03050106 	movweq	r0, #20742	; 0x5106
     b7c:	06053206 	streq	r3, [r5], -r6, lsl #4
     b80:	22050106 	andcs	r0, r5, #-2147483647	; 0x80000001
     b84:	01040200 	mrseq	r0, R12_usr
     b88:	0012053c 	andseq	r0, r2, ip, lsr r5
     b8c:	5b010402 	blpl	41b9c <__HEAP_SIZE+0x40b9c>
     b90:	02000e05 	andeq	r0, r0, #5, 28	; 0x50
     b94:	053c0804 	ldreq	r0, [ip, #-2052]!	; 0xfffff7fc
     b98:	04020012 	streq	r0, [r2], #-18	; 0xffffffee
     b9c:	02002e08 	andeq	r2, r0, #8, 28	; 0x80
     ba0:	052e0804 	streq	r0, [lr, #-2052]!	; 0xfffff7fc
     ba4:	04020007 	streq	r0, [r2], #-7
     ba8:	054b0608 	strbeq	r0, [fp, #-1544]	; 0xfffff9f8
     bac:	0402000d 	streq	r0, [r2], #-13
     bb0:	00010608 	andeq	r0, r1, r8, lsl #12
     bb4:	66080402 	strvs	r0, [r8], -r2, lsl #8
     bb8:	08040200 	stmdaeq	r4, {r9}
     bbc:	05051306 	streq	r1, [r5, #-774]	; 0xfffffcfa
     bc0:	08040200 	stmdaeq	r4, {r9}
     bc4:	14050106 	strne	r0, [r5], #-262	; 0xfffffefa
     bc8:	01040200 	mrseq	r0, R12_usr
     bcc:	3a0e054a 	bcc	3820fc <__RAM_SIZE+0x2820fc>
     bd0:	2e210d05 	cdpcs	13, 2, cr0, cr1, cr5, {0}
     bd4:	0f060505 	svceq	0x00060505
     bd8:	05130705 	ldreq	r0, [r3, #-1797]	; 0xfffff8fb
     bdc:	05010627 	streq	r0, [r1, #-1575]	; 0xfffff9d9
     be0:	07056612 	smladeq	r5, r2, r6, r6
     be4:	12052106 	andne	r2, r5, #-2147483647	; 0x80000001
     be8:	55050106 	strpl	r0, [r5, #-262]	; 0xfffffefa
     bec:	02040200 	andeq	r0, r4, #0, 4
     bf0:	02003c2e 	andeq	r3, r0, #11776	; 0x2e00
     bf4:	05200704 	streq	r0, [r0, #-1796]!	; 0xfffff8fc
     bf8:	04020012 	streq	r0, [r2], #-18	; 0xffffffee
     bfc:	55052e07 	strpl	r2, [r5, #-3591]	; 0xfffff1f9
     c00:	0a052e3c 	beq	14c4f8 <__RAM_SIZE+0x4c4f8>
     c04:	05017503 	streq	r7, [r1, #-1283]	; 0xfffffafd
     c08:	10030603 	andne	r0, r3, r3, lsl #12
     c0c:	060a052e 	streq	r0, [sl], -lr, lsr #10
     c10:	08010501 	stmdaeq	r1, {r0, r8, sl}
     c14:	01003c3d 	tsteq	r0, sp, lsr ip
     c18:	00010501 	andeq	r0, r1, r1, lsl #10
     c1c:	0cf80205 	lfmeq	f0, 2, [r8], #20
     c20:	d3031000 	movwle	r1, #12288	; 0x3000
     c24:	01060103 	tsteq	r6, r3, lsl #2
     c28:	92060305 	andls	r0, r6, #335544320	; 0x14000000
     c2c:	01060605 	tsteq	r6, r5, lsl #12
     c30:	2e20202e 	cdpcs	0, 2, cr2, cr0, cr14, {1}
     c34:	02001805 	andeq	r1, r0, #327680	; 0x50000
     c38:	053c0104 	ldreq	r0, [ip, #-260]!	; 0xfffffefc
     c3c:	0402002d 	streq	r0, [r2], #-45	; 0xffffffd3
     c40:	03059e02 	movweq	r9, #24066	; 0x5e02
     c44:	0513b106 	ldreq	fp, [r3, #-262]	; 0xfffffefa
     c48:	05010606 	streq	r0, [r1, #-1542]	; 0xfffff9fa
     c4c:	05cd0603 	strbeq	r0, [sp, #1539]	; 0x603
     c50:	05010606 	streq	r0, [r1, #-1542]	; 0xfffff9fa
     c54:	0305590a 	movweq	r5, #22794	; 0x590a
     c58:	13173306 	tstne	r7, #402653184	; 0x18000000
     c5c:	3c060e05 	stccc	14, cr0, [r6], {5}
     c60:	2f060305 	svccs	0x00060305
     c64:	01061405 	tsteq	r6, r5, lsl #8
     c68:	052e2c05 	streq	r2, [lr, #-3077]!	; 0xfffff3fb
     c6c:	055a0603 	ldrbeq	r0, [sl, #-1539]	; 0xfffff9fd
     c70:	2e01062d 	cfmadd32cs	mvax1, mvfx0, mvfx1, mvfx13
     c74:	5826052e 	stmdapl	r6!, {r1, r2, r3, r5, r8, sl}
     c78:	05744b05 	ldrbeq	r4, [r4, #-2821]!	; 0xfffff4fb
     c7c:	41056652 	tstmi	r5, r2, asr r6
     c80:	4a070574 	bmi	1c2258 <__RAM_SIZE+0xc2258>
     c84:	3e060305 	cdpcc	3, 0, cr0, cr6, cr5, {0}
     c88:	01061705 	tsteq	r6, r5, lsl #14
     c8c:	742b052e 	strtvc	r0, [fp], #-1326	; 0xfffffad2
     c90:	054a0805 	strbeq	r0, [sl, #-2053]	; 0xfffff7fb
     c94:	053d0603 	ldreq	r0, [sp, #-1539]!	; 0xfffff9fd
     c98:	4a01061c 	bmi	42510 <__HEAP_SIZE+0x41510>
     c9c:	05583705 	ldrbeq	r3, [r8, #-1797]	; 0xfffff8fb
     ca0:	03059e10 	movweq	r9, #24080	; 0x5e10
     ca4:	10056706 	andne	r6, r5, r6, lsl #14
     ca8:	03050106 	movweq	r0, #20742	; 0x5106
     cac:	1c056706 	stcne	7, cr6, [r5], {6}
     cb0:	24050106 	strcs	r0, [r5], #-262	; 0xfffffefa
     cb4:	0603052e 	streq	r0, [r3], -lr, lsr #10
     cb8:	06130584 	ldreq	r0, [r3], -r4, lsl #11
     cbc:	1c053c01 	stcne	12, cr3, [r5], {1}
     cc0:	3c058258 	sfmcc	f0, 1, [r5], {88}	; 0x58
     cc4:	66370520 	ldrtvs	r0, [r7], -r0, lsr #10
     cc8:	05663105 	strbeq	r3, [r6, #-261]!	; 0xfffffefb
     ccc:	26054a2b 	strcs	r4, [r5], -fp, lsr #20
     cd0:	66200566 	strtvs	r0, [r0], -r6, ror #10
     cd4:	05661705 	strbeq	r1, [r6, #-1797]!	; 0xfffff8fb
     cd8:	0a054a0f 	beq	15351c <__RAM_SIZE+0x5351c>
     cdc:	0603054a 	streq	r0, [r3], -sl, asr #10
     ce0:	06060584 	streq	r0, [r6], -r4, lsl #11
     ce4:	06050501 	streq	r0, [r5], -r1, lsl #10
     ce8:	060b0559 			; <UNDEFINED> instruction: 0x060b0559
     cec:	06050501 	streq	r0, [r5], -r1, lsl #10
     cf0:	060c0521 	streq	r0, [ip], -r1, lsr #10
     cf4:	06030501 	streq	r0, [r3], -r1, lsl #10
     cf8:	062b0586 	strteq	r0, [fp], -r6, lsl #11
     cfc:	2e440501 	cdpcs	5, 4, cr0, cr4, cr1, {0}
     d00:	0003052e 	andeq	r0, r3, lr, lsr #10
     d04:	06040402 	streq	r0, [r4], -r2, lsl #8
     d08:	00060523 	andeq	r0, r6, r3, lsr #10
     d0c:	06040402 	streq	r0, [r4], -r2, lsl #8
     d10:	06050501 	streq	r0, [r5], -r1, lsl #10
     d14:	0608054c 	streq	r0, [r8], -ip, asr #10
     d18:	00190501 	andseq	r0, r9, r1, lsl #10
     d1c:	ac010402 	cfstrsge	mvf0, [r1], {2}
     d20:	91060705 	tstls	r6, r5, lsl #14
     d24:	01060a05 	tsteq	r6, r5, lsl #20
     d28:	3d060905 	vstrcc.16	s0, [r6, #-10]	; <UNPREDICTABLE>
     d2c:	01062505 	tsteq	r6, r5, lsl #10
     d30:	2e202e05 	cdpcs	14, 2, cr2, cr0, cr5, {0}
     d34:	03060505 	movweq	r0, #25861	; 0x6505
     d38:	0c052051 	stceq	0, cr2, [r5], {81}	; 0x51
     d3c:	01050106 	tsteq	r5, r6, lsl #2
     d40:	f200e403 	vshl.s8	d14, d3, d0
     d44:	0605053c 			; <UNDEFINED> instruction: 0x0605053c
     d48:	2e7fa203 	cdpcs	2, 7, cr10, cr15, cr3, {0}
     d4c:	01060b05 	tsteq	r6, r5, lsl #22
     d50:	0344059e 	movteq	r0, #17822	; 0x459e
     d54:	05202022 	streq	r2, [r0, #-34]!	; 0xffffffde
     d58:	200a030e 	andcs	r0, sl, lr, lsl #6
     d5c:	30060705 	andcc	r0, r6, r5, lsl #14
     d60:	01060d05 	tsteq	r6, r5, lsl #26
     d64:	4c060705 	stcmi	7, cr0, [r6], {5}
     d68:	06100513 			; <UNDEFINED> instruction: 0x06100513
     d6c:	03052111 	movweq	r2, #20753	; 0x5111
     d70:	200b0306 	andcs	r0, fp, r6, lsl #6
     d74:	06060513 			; <UNDEFINED> instruction: 0x06060513
     d78:	06050501 	streq	r0, [r5], -r1, lsl #10
     d7c:	060c053e 			; <UNDEFINED> instruction: 0x060c053e
     d80:	07052e01 	streq	r2, [r5, -r1, lsl #28]
     d84:	20760306 	rsbscs	r0, r6, r6, lsl #6
     d88:	01060a05 	tsteq	r6, r5, lsl #20
     d8c:	02001605 	andeq	r1, r0, #5242880	; 0x500000
     d90:	053c0104 	ldreq	r0, [ip, #-260]!	; 0xfffffefc
     d94:	063d0609 	ldrteq	r0, [sp], -r9, lsl #12
     d98:	030c053c 	movweq	r0, #50492	; 0xc53c
     d9c:	0134020c 	teqeq	r4, ip, lsl #4
     da0:	30060305 	andcc	r0, r6, r5, lsl #6
     da4:	01060605 	tsteq	r6, r5, lsl #12
     da8:	02001c05 	andeq	r1, r0, #1280	; 0x500
     dac:	054a0104 	strbeq	r0, [sl, #-260]	; 0xfffffefc
     db0:	0305220c 	movweq	r2, #21004	; 0x520c
     db4:	06053206 	streq	r3, [r5], -r6, lsl #4
     db8:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     dbc:	12052106 	andne	r2, r5, #-2147483647	; 0x80000001
     dc0:	0b050106 	bleq	1411e0 <__RAM_SIZE+0x411e0>
     dc4:	0603052e 	streq	r0, [r3], -lr, lsr #10
     dc8:	0905136a 	stmdbeq	r5, {r1, r3, r5, r6, r8, r9, ip}
     dcc:	02000106 	andeq	r0, r0, #-2147483647	; 0x80000001
     dd0:	05820404 	streq	r0, [r2, #1028]	; 0x404
     dd4:	04020003 	streq	r0, [r2], #-3
     dd8:	23080604 	movwcs	r0, #34308	; 0x8604
     ddc:	02000605 	andeq	r0, r0, #5242880	; 0x500000
     de0:	01060404 	tsteq	r6, r4, lsl #8
     de4:	3e060505 	cfsh32cc	mvfx0, mvfx6, #5
     de8:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
     dec:	02006606 	andeq	r6, r0, #6291456	; 0x600000
     df0:	002e0404 	eoreq	r0, lr, r4, lsl #8
     df4:	06040402 	streq	r0, [r4], -r2, lsl #8
     df8:	0047055a 	subeq	r0, r7, sl, asr r5
     dfc:	06040402 	streq	r0, [r4], -r2, lsl #8
     e00:	000b0501 	andeq	r0, fp, r1, lsl #10
     e04:	4a040402 	bmi	101e14 <__RAM_SIZE+0x1e14>
     e08:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
     e0c:	0005053c 	andeq	r0, r5, ip, lsr r5
     e10:	06040402 	streq	r0, [r4], -r2, lsl #8
     e14:	000805d8 	ldrdeq	r0, [r8], -r8
     e18:	06040402 	streq	r0, [r4], -r2, lsl #8
     e1c:	04020001 	streq	r0, [r2], #-1
     e20:	09056604 	stmdbeq	r5, {r2, r9, sl, sp, lr}
     e24:	01040200 	mrseq	r0, R12_usr
     e28:	00207703 	eoreq	r7, r0, r3, lsl #14
     e2c:	74010402 	strvc	r0, [r1], #-1026	; 0xfffffbfe
     e30:	05250505 	streq	r0, [r5, #-1285]!	; 0xfffffafb
     e34:	04020027 	streq	r0, [r2], #-39	; 0xffffffd9
     e38:	00410602 	subeq	r0, r1, r2, lsl #12
     e3c:	06020402 	streq	r0, [r2], -r2, lsl #8
     e40:	000d0520 	andeq	r0, sp, r0, lsr #10
     e44:	06010402 	streq	r0, [r1], -r2, lsl #8
     e48:	00120558 	andseq	r0, r2, r8, asr r5
     e4c:	06010402 	streq	r0, [r1], -r2, lsl #8
     e50:	000d0501 	andeq	r0, sp, r1, lsl #10
     e54:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
     e58:	01040200 	mrseq	r0, R12_usr
     e5c:	0002022e 	andeq	r0, r2, lr, lsr #4
     e60:	01050101 	tsteq	r5, r1, lsl #2
     e64:	e8020500 	stmda	r2, {r8, sl}
     e68:	03100010 	tsteq	r0, #16
     e6c:	060102d3 			; <UNDEFINED> instruction: 0x060102d3
     e70:	06030501 	streq	r0, [r3], -r1, lsl #10
     e74:	151313bb 	ldrne	r1, [r3, #-955]	; 0xfffffc45
     e78:	06060515 			; <UNDEFINED> instruction: 0x06060515
     e7c:	20202001 	eorcs	r2, r0, r1
     e80:	06030520 	streq	r0, [r3], -r0, lsr #10
     e84:	0606054c 	streq	r0, [r6], -ip, asr #10
     e88:	06030501 	streq	r0, [r3], -r1, lsl #10
     e8c:	060605a0 	streq	r0, [r6], -r0, lsr #11
     e90:	06030501 	streq	r0, [r3], -r1, lsl #10
     e94:	06060595 			; <UNDEFINED> instruction: 0x06060595
     e98:	00220501 	eoreq	r0, r2, r1, lsl #10
     e9c:	90010402 	andls	r0, r1, r2, lsl #8
     ea0:	03060305 	movweq	r0, #25349	; 0x6305
     ea4:	05139009 	ldreq	r9, [r3, #-9]
     ea8:	05010606 	streq	r0, [r1, #-1542]	; 0xfffff9fa
     eac:	03058108 	movweq	r8, #20744	; 0x5108
     eb0:	06053506 	streq	r3, [r5], -r6, lsl #10
     eb4:	0a050106 	beq	1412d4 <__RAM_SIZE+0x412d4>
     eb8:	0609054b 	streq	r0, [r9], -fp, asr #10
     ebc:	002a0523 	eoreq	r0, sl, r3, lsr #10
     ec0:	06010402 	streq	r0, [r1], -r2, lsl #8
     ec4:	0605052e 	streq	r0, [r5], -lr, lsr #10
     ec8:	0610052f 	ldreq	r0, [r0], -pc, lsr #10
     ecc:	06050501 	streq	r0, [r5], -r1, lsl #10
     ed0:	06090567 	streq	r0, [r9], -r7, ror #10
     ed4:	1f0c0501 	svcne	0x000c0501
     ed8:	06050520 	streq	r0, [r5], -r0, lsr #10
     edc:	05206303 	streq	r6, [r0, #-771]!	; 0xfffffcfd
     ee0:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
     ee4:	05e60605 	strbeq	r0, [r6, #1541]!	; 0x605
     ee8:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
     eec:	05e60605 	strbeq	r0, [r6, #1541]!	; 0x605
     ef0:	0001060c 	andeq	r0, r1, ip, lsl #12
     ef4:	58040402 	stmdapl	r4, {r1, sl}
     ef8:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
     efc:	05c82008 	strbeq	r2, [r8, #8]
     f00:	05500605 	ldrbeq	r0, [r0, #-1541]	; 0xfffff9fb
     f04:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
     f08:	09030605 	stmdbeq	r3, {r0, r2, r9, sl}
     f0c:	0b0513d6 	bleq	145e6c <__RAM_SIZE+0x45e6c>
     f10:	0e050106 	adfeqs	f0, f5, f6
     f14:	420a0581 	andmi	r0, sl, #541065216	; 0x20400000
     f18:	36060305 	strcc	r0, [r6], -r5, lsl #6
     f1c:	01060705 	tsteq	r6, r5, lsl #14
     f20:	59060305 	stmdbpl	r6, {r0, r2, r8, r9}
     f24:	01061705 	tsteq	r6, r5, lsl #14
     f28:	6627052e 	strtvs	r0, [r7], -lr, lsr #10
     f2c:	05580a05 	ldrbeq	r0, [r8, #-2565]	; 0xfffff5fb
     f30:	05830603 	streq	r0, [r3, #1539]	; 0x603
     f34:	2e010611 	mcrcs	6, 0, r0, cr1, cr1, {0}
     f38:	21060305 	tstcs	r6, r5, lsl #6
     f3c:	01060e05 	tsteq	r6, r5, lsl #28
     f40:	2e08052e 	cfsh32cs	mvfx0, mvfx8, #30
     f44:	84060305 	strhi	r0, [r6], #-773	; 0xfffffcfb
     f48:	01060605 	tsteq	r6, r5, lsl #12
     f4c:	06050520 	streq	r0, [r5], -r0, lsr #10
     f50:	0e05224b 	cdpeq	2, 0, cr2, cr5, cr11, {2}
     f54:	08050106 	stmdaeq	r5, {r1, r2, r8}
     f58:	06070558 			; <UNDEFINED> instruction: 0x06070558
     f5c:	0c051359 	stceq	3, cr1, [r5], {89}	; 0x59
     f60:	03051f06 	movweq	r1, #24326	; 0x5f06
     f64:	200b0306 	andcs	r0, fp, r6, lsl #6
     f68:	01060605 	tsteq	r6, r5, lsl #12
     f6c:	21060505 	tstcs	r6, r5, lsl #10
     f70:	01061405 	tsteq	r6, r5, lsl #8
     f74:	58580a05 	ldmdapl	r8, {r0, r2, r9, fp}^
     f78:	21060505 	tstcs	r6, r5, lsl #10
     f7c:	01060805 	tsteq	r6, r5, lsl #16
     f80:	02001805 	andeq	r1, r0, #327680	; 0x50000
     f84:	05580204 	ldrbeq	r0, [r8, #-516]	; 0xfffffdfc
     f88:	04020029 	streq	r0, [r2], #-41	; 0xffffffd7
     f8c:	07058203 	streq	r8, [r5, -r3, lsl #4]
     f90:	20063f06 	andcs	r3, r6, r6, lsl #30
     f94:	03060805 	movweq	r0, #26629	; 0x6805
     f98:	0b052074 	bleq	149170 <__RAM_SIZE+0x49170>
     f9c:	08050106 	stmdaeq	r5, {r1, r2, r8}
     fa0:	0b058406 	bleq	161fc0 <__RAM_SIZE+0x61fc0>
     fa4:	19050106 	stmdbne	r5, {r1, r2, r8}
     fa8:	01040200 	mrseq	r0, R12_usr
     fac:	06050520 	streq	r0, [r5], -r0, lsr #10
     fb0:	0520063e 	streq	r0, [r0, #-1598]!	; 0xfffff9c2
     fb4:	0e03060b 	cfmadd32eq	mvax0, mvfx0, mvfx3, mvfx11
     fb8:	2f070520 	svccs	0x00070520
     fbc:	06270521 	strteq	r0, [r7], -r1, lsr #10
     fc0:	900e0501 	andls	r0, lr, r1, lsl #10
     fc4:	05201405 	streq	r1, [r0, #-1029]!	; 0xfffffbfb
     fc8:	07052012 	smladeq	r5, r2, r0, r2
     fcc:	0a056706 	beq	15abec <__RAM_SIZE+0x5abec>
     fd0:	12050106 	andne	r0, r5, #-2147483647	; 0x80000001
     fd4:	1f0e052e 	svcne	0x000e052e
     fd8:	060b052e 	streq	r0, [fp], -lr, lsr #10
     fdc:	00350526 	eorseq	r0, r5, r6, lsr #10
     fe0:	06010402 	streq	r0, [r1], -r2, lsl #8
     fe4:	002c052e 	eoreq	r0, ip, lr, lsr #10
     fe8:	20010402 	andcs	r0, r1, r2, lsl #8
     fec:	21060705 	tstcs	r6, r5, lsl #14
     ff0:	01061205 	tsteq	r6, r5, lsl #4
     ff4:	05653505 	strbeq	r3, [r5, #-1285]!	; 0xfffffafb
     ff8:	0520210e 	streq	r2, [r0, #-270]!	; 0xfffffef2
     ffc:	05220605 	streq	r0, [r2, #-1541]!	; 0xfffff9fb
    1000:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
    1004:	05300607 	ldreq	r0, [r0, #-1543]!	; 0xfffff9f9
    1008:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
    100c:	0520660e 	streq	r6, [r0, #-1550]!	; 0xfffff9f2
    1010:	05170609 	ldreq	r0, [r7, #-1545]	; 0xfffff9f7
    1014:	25052f05 	strcs	r2, [r5, #-3845]	; 0xfffff0fb
    1018:	0c050106 	stfeqs	f0, [r5], {6}
    101c:	201205ac 	andscs	r0, r2, ip, lsr #11
    1020:	05201005 	streq	r1, [r0, #-5]!
    1024:	05670605 	strbeq	r0, [r7, #-1541]!	; 0xfffff9fb
    1028:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    102c:	0c052008 	stceq	0, cr2, [r5], {8}
    1030:	05c8081f 	strbeq	r0, [r8, #2079]	; 0x81f
    1034:	05270603 	streq	r0, [r7, #-1539]!	; 0xfffff9fd
    1038:	0501061d 	streq	r0, [r1, #-1565]	; 0xfffff9e3
    103c:	03053c06 	movweq	r3, #23558	; 0x5c06
    1040:	2e090306 	cdpcs	3, 0, cr0, cr9, cr6, {0}
    1044:	01060605 	tsteq	r6, r5, lsl #12
    1048:	2f060505 	svccs	0x00060505
    104c:	01060805 	tsteq	r6, r5, lsl #16
    1050:	3d060705 	stccc	7, cr0, [r6, #-20]	; 0xffffffec
    1054:	01061205 	tsteq	r6, r5, lsl #4
    1058:	05660e05 	strbeq	r0, [r6, #-3589]!	; 0xfffff1fb
    105c:	0a030603 	beq	c2870 <__HEAP_SIZE+0xc1870>
    1060:	060a0520 	streq	r0, [sl], -r0, lsr #10
    1064:	c9010501 	stmdbgt	r1, {r0, r8, sl}
    1068:	03060505 	movweq	r0, #25861	; 0x6505
    106c:	0805586b 	stmdaeq	r5, {r0, r1, r3, r5, r6, fp, ip, lr}
    1070:	0f050106 	svceq	0x00050106
    1074:	01040200 	mrseq	r0, R12_usr
    1078:	001c052e 	andseq	r0, ip, lr, lsr #10
    107c:	2e020402 	cdpcs	4, 0, cr0, cr2, cr2, {0}
    1080:	4b060705 	blmi	182c9c <__RAM_SIZE+0x82c9c>
    1084:	01060c05 	tsteq	r6, r5, lsl #24
    1088:	0607053c 			; <UNDEFINED> instruction: 0x0607053c
    108c:	06120531 			; <UNDEFINED> instruction: 0x06120531
    1090:	660e0501 	strvs	r0, [lr], -r1, lsl #10
    1094:	1f060b05 	svcne	0x00060b05
    1098:	02001a05 	andeq	r1, r0, #20480	; 0x5000
    109c:	2e060104 	adfcss	f0, f6, f4
    10a0:	01040200 	mrseq	r0, R12_usr
    10a4:	060a053c 			; <UNDEFINED> instruction: 0x060a053c
    10a8:	054a0903 	strbeq	r0, [sl, #-2307]	; 0xfffff6fd
    10ac:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
    10b0:	054b0607 	strbeq	r0, [fp, #-1543]	; 0xfffff9f9
    10b4:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
    10b8:	0520660e 	streq	r6, [r0, #-1550]!	; 0xfffff9f2
    10bc:	0522060a 	streq	r0, [r2, #-1546]!	; 0xfffff9f6
    10c0:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
    10c4:	054b0607 	strbeq	r0, [fp, #-1543]	; 0xfffff9f9
    10c8:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
    10cc:	0220660e 	eoreq	r6, r0, #14680064	; 0xe00000
    10d0:	01010001 	tsteq	r1, r1
    10d4:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    10d8:	00148002 	andseq	r8, r4, r2
    10dc:	04c10310 	strbeq	r0, [r1], #784	; 0x310
    10e0:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    10e4:	13670603 	cmnne	r7, #3145728	; 0x300000
    10e8:	06060514 			; <UNDEFINED> instruction: 0x06060514
    10ec:	03090501 	movweq	r0, #38145	; 0x9501
    10f0:	204a01d3 	ldrdcs	r0, [sl], #-19	; 0xffffffed
    10f4:	7eb20306 	cdpvc	3, 11, cr0, cr2, cr6, {0}
    10f8:	060a0501 	streq	r0, [sl], -r1, lsl #10
    10fc:	2e090501 	cfsh32cs	mvfx0, mvfx9, #1
    1100:	3f060505 	svccc	0x00060505
    1104:	01060805 	tsteq	r6, r5, lsl #16
    1108:	30060705 	andcc	r0, r6, r5, lsl #14
    110c:	4b062006 	blmi	18912c <__RAM_SIZE+0x8912c>
    1110:	01060d05 	tsteq	r6, r5, lsl #26
    1114:	3d060705 	stccc	7, cr0, [r6, #-20]	; 0xffffffec
    1118:	06221006 	strteq	r1, [r2], -r6
    111c:	060d0524 	streq	r0, [sp], -r4, lsr #10
    1120:	06050501 	streq	r0, [r5], -r1, lsl #10
    1124:	060b0532 			; <UNDEFINED> instruction: 0x060b0532
    1128:	06050501 	streq	r0, [r5], -r1, lsl #10
    112c:	13070521 	movwne	r0, #29985	; 0x7521
    1130:	01060f05 	tsteq	r6, r5, lsl #30
    1134:	052e0705 	streq	r0, [lr, #-1797]!	; 0xfffff8fb
    1138:	05ec060d 	strbeq	r0, [ip, #1549]!	; 0x60d
    113c:	05131505 	ldreq	r1, [r3, #-1285]	; 0xfffffafb
    1140:	7ccd0314 	stclvc	3, cr0, [sp], {20}
    1144:	14030501 	strne	r0, [r3], #-1281	; 0xfffffaff
    1148:	01061605 	tsteq	r6, r5, lsl #12
    114c:	0308053c 	movweq	r0, #34108	; 0x853c
    1150:	050103b1 	streq	r0, [r1, #-945]	; 0xfffffc4f
    1154:	0531060a 	ldreq	r0, [r1, #-1546]!	; 0xfffff9f6
    1158:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
    115c:	05052a0b 	streq	r2, [r5, #-2571]	; 0xfffff5f5
    1160:	2e110306 	cdpcs	3, 1, cr0, cr1, cr6, {0}
    1164:	06090513 			; <UNDEFINED> instruction: 0x06090513
    1168:	2e080501 	cfsh32cs	mvfx0, mvfx8, #1
    116c:	052d0f05 	streq	r0, [sp, #-3845]!	; 0xfffff0fb
    1170:	0f030605 	svceq	0x00030605
    1174:	060d052e 	streq	r0, [sp], -lr, lsr #10
    1178:	2e050501 	cfsh32cs	mvfx0, mvfx5, #1
    117c:	03061305 	movweq	r1, #25349	; 0x6305
    1180:	1905e456 	stmdbne	r5, {r1, r2, r4, r6, sl, sp, lr, pc}
    1184:	2b050106 	blcs	1415a4 <__RAM_SIZE+0x415a4>
    1188:	31052e06 	tstcc	r5, r6, lsl #28
    118c:	35050106 	strcc	r0, [r5, #-262]	; 0xfffffefa
    1190:	3d052e06 	stccc	14, cr2, [r5, #-24]	; 0xffffffe8
    1194:	190d0501 	stmdbne	sp, {r0, r8, sl}
    1198:	7a031305 	bvc	c5db4 <__HEAP_SIZE+0xc4db4>
    119c:	06190520 	ldreq	r0, [r9], -r0, lsr #10
    11a0:	062b0501 	strteq	r0, [fp], -r1, lsl #10
    11a4:	0631052e 	ldrteq	r0, [r1], -lr, lsr #10
    11a8:	06350501 	ldrteq	r0, [r5], -r1, lsl #10
    11ac:	013d052e 	teqeq	sp, lr, lsr #10
    11b0:	05180d05 	ldreq	r0, [r8, #-3333]	; 0xfffff2fb
    11b4:	19051b13 	stmdbne	r5, {r0, r1, r4, r8, r9, fp, ip}
    11b8:	2b050106 	blcs	1415d8 <__RAM_SIZE+0x415d8>
    11bc:	31052e06 	tstcc	r5, r6, lsl #28
    11c0:	35050106 	strcc	r0, [r5, #-262]	; 0xfffffefa
    11c4:	3d052e06 	stccc	14, cr2, [r5, #-24]	; 0xffffffe8
    11c8:	170d0501 	strne	r0, [sp, -r1, lsl #10]
    11cc:	051c1305 	ldreq	r1, [ip, #-773]	; 0xfffffcfb
    11d0:	05010619 	streq	r0, [r1, #-1561]	; 0xfffff9e7
    11d4:	052e062b 	streq	r0, [lr, #-1579]!	; 0xfffff9d5
    11d8:	05010631 	streq	r0, [r1, #-1585]	; 0xfffff9cf
    11dc:	052e0635 	streq	r0, [lr, #-1589]!	; 0xfffff9cb
    11e0:	0d05013d 	stfeqs	f0, [r5, #-244]	; 0xffffff0c
    11e4:	1d130516 	cfldr32ne	mvfx0, [r3, #-88]	; 0xffffffa8
    11e8:	01061905 	tsteq	r6, r5, lsl #18
    11ec:	2e062b05 	vmlacs.f64	d2, d6, d5
    11f0:	01063105 	tsteq	r6, r5, lsl #2
    11f4:	2e063505 	cfsh32cs	mvfx3, mvfx6, #5
    11f8:	05013d05 	streq	r3, [r1, #-3333]	; 0xfffff2fb
    11fc:	0705150d 	streq	r1, [r5, -sp, lsl #10]
    1200:	060f0525 	streq	r0, [pc], -r5, lsr #10
    1204:	07054a01 	streq	r4, [r5, -r1, lsl #20]
    1208:	11052306 	tstne	r5, r6, lsl #6
    120c:	07050106 	streq	r0, [r5, -r6, lsl #2]
    1210:	0a054b06 	beq	153e30 <__RAM_SIZE+0x53e30>
    1214:	09050106 	stmdbeq	r5, {r1, r2, r8}
    1218:	0f053306 	svceq	0x00053306
    121c:	07050106 	streq	r0, [r5, -r6, lsl #2]
    1220:	0d052206 	sfmeq	f2, 4, [r5, #-24]	; 0xffffffe8
    1224:	09050106 	stmdbeq	r5, {r1, r2, r8}
    1228:	4a7a0306 	bmi	1e81e48 <__RAM_SIZE+0x1d81e48>
    122c:	01060f05 	tsteq	r6, r5, lsl #30
    1230:	2f060905 	svccs	0x00060905
    1234:	01061f05 	tsteq	r6, r5, lsl #30
    1238:	0705202e 	streq	r2, [r5, -lr, lsr #32]
    123c:	010b0306 	tsteq	fp, r6, lsl #6
    1240:	01060d05 	tsteq	r6, r5, lsl #26
    1244:	2f060705 	svccs	0x00060705
    1248:	01060d05 	tsteq	r6, r5, lsl #26
    124c:	2f060705 	svccs	0x00060705
    1250:	01060b05 	tsteq	r6, r5, lsl #22
    1254:	03061405 	movweq	r1, #25605	; 0x6405
    1258:	05207cb9 	streq	r7, [r0, #-3257]!	; 0xfffff347
    125c:	16051403 	strne	r1, [r5], -r3, lsl #8
    1260:	053c0106 	ldreq	r0, [ip, #-262]!	; 0xfffffefa
    1264:	03c5030a 	biceq	r0, r5, #671088640	; 0x28000000
    1268:	060c0501 	streq	r0, [ip], -r1, lsl #10
    126c:	060f0531 			; <UNDEFINED> instruction: 0x060f0531
    1270:	2e790301 	cdpcs	3, 7, cr0, cr9, cr1, {0}
    1274:	41060905 	tstmi	r6, r5, lsl #18
    1278:	01061505 	tsteq	r6, r5, lsl #10
    127c:	0609054a 	streq	r0, [r9], -sl, asr #10
    1280:	06130523 	ldreq	r0, [r3], -r3, lsr #10
    1284:	06090501 	streq	r0, [r9], -r1, lsl #10
    1288:	0633054b 	ldrteq	r0, [r3], -fp, asr #10
    128c:	06090501 	streq	r0, [r9], -r1, lsl #10
    1290:	060f052f 	streq	r0, [pc], -pc, lsr #10
    1294:	09054a01 	stmdbeq	r5, {r0, r9, fp, lr}
    1298:	0f051906 	svceq	0x00051906
    129c:	09050106 	stmdbeq	r5, {r1, r2, r8}
    12a0:	0f052f06 	svceq	0x00052f06
    12a4:	09050106 	stmdbeq	r5, {r1, r2, r8}
    12a8:	0d052f06 	stceq	15, cr2, [r5, #-24]	; 0xffffffe8
    12ac:	0c050106 	stfeqs	f0, [r5], {6}
    12b0:	2c0f0520 	cfstr32cs	mvfx0, [pc], {32}
    12b4:	31060b05 	tstcc	r6, r5, lsl #22
    12b8:	01061105 	tsteq	r6, r5, lsl #2
    12bc:	2f060b05 	svccs	0x00060b05
    12c0:	01061105 	tsteq	r6, r5, lsl #2
    12c4:	40060905 	andmi	r0, r6, r5, lsl #18
    12c8:	01060f05 	tsteq	r6, r5, lsl #30
    12cc:	2f060905 	svccs	0x00060905
    12d0:	01060f05 	tsteq	r6, r5, lsl #30
    12d4:	2f060905 	svccs	0x00060905
    12d8:	01060d05 	tsteq	r6, r5, lsl #26
    12dc:	05200c05 	streq	r0, [r0, #-3077]!	; 0xfffff3fb
    12e0:	0b052c0f 	bleq	14c324 <__RAM_SIZE+0x4c324>
    12e4:	11053106 	tstne	r5, r6, lsl #2
    12e8:	0b050106 	bleq	141708 <__RAM_SIZE+0x41708>
    12ec:	11052f06 	tstne	r5, r6, lsl #30
    12f0:	09050106 	stmdbeq	r5, {r1, r2, r8}
    12f4:	0f054106 	svceq	0x00054106
    12f8:	09050106 	stmdbeq	r5, {r1, r2, r8}
    12fc:	0f052f06 	svceq	0x00052f06
    1300:	09050106 	stmdbeq	r5, {r1, r2, r8}
    1304:	05052f06 	streq	r2, [r5, #-3846]	; 0xfffff0fa
    1308:	05010f03 	streq	r0, [r1, #-3843]	; 0xfffff0fd
    130c:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
    1310:	09052e05 	stmdbeq	r5, {r0, r2, r9, sl, fp, sp}
    1314:	02740306 	rsbseq	r0, r4, #402653184	; 0x18000000
    1318:	0f05015b 	svceq	0x0005015b
    131c:	09050106 	stmdbeq	r5, {r1, r2, r8}
    1320:	0f052f06 	svceq	0x00052f06
    1324:	09050106 	stmdbeq	r5, {r1, r2, r8}
    1328:	05222f06 	streq	r2, [r2, #-3846]!	; 0xfffff0fa
    132c:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    1330:	052f0609 	streq	r0, [pc, #-1545]!	; d2f <__Vectors_Size+0x56f>
    1334:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    1338:	032f0609 			; <UNDEFINED> instruction: 0x032f0609
    133c:	0513200f 	ldreq	r2, [r3, #-15]
    1340:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    1344:	0402001c 	streq	r0, [r2], #-28	; 0xffffffe4
    1348:	0e052e01 	cdpeq	14, 0, cr2, cr5, cr1, {0}
    134c:	11053106 	tstne	r5, r6, lsl #2
    1350:	0e050106 	adfeqs	f0, f5, f6
    1354:	11053106 	tstne	r5, r6, lsl #2
    1358:	0b050106 	bleq	141778 <__RAM_SIZE+0x41778>
    135c:	05133206 	ldreq	r3, [r3, #-518]	; 0xfffffdfa
    1360:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    1364:	77032d10 	smladvc	r3, r0, sp, r2
    1368:	0609052e 	streq	r0, [r9], -lr, lsr #10
    136c:	05200d03 	streq	r0, [r0, #-3331]!	; 0xfffff2fd
    1370:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    1374:	05330609 	ldreq	r0, [r3, #-1545]!	; 0xfffff9f7
    1378:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    137c:	0402001e 	streq	r0, [r2], #-30	; 0xffffffe2
    1380:	0b052e01 	bleq	14cb8c <__RAM_SIZE+0x4cb8c>
    1384:	11052f06 	tstne	r5, r6, lsl #30
    1388:	09050106 	stmdbeq	r5, {r1, r2, r8}
    138c:	0c053206 	sfmeq	f3, 4, [r5], {6}
    1390:	0b050106 	bleq	1417b0 <__RAM_SIZE+0x417b0>
    1394:	11053d06 	tstne	r5, r6, lsl #26
    1398:	09050106 	stmdbeq	r5, {r1, r2, r8}
    139c:	0c053206 	sfmeq	f3, 4, [r5], {6}
    13a0:	1e050106 	adfnes	f0, f5, f6
    13a4:	01040200 	mrseq	r0, R12_usr
    13a8:	060b052e 	streq	r0, [fp], -lr, lsr #10
    13ac:	052e1303 	streq	r1, [lr, #-771]!	; 0xfffffcfd
    13b0:	0501060e 	streq	r0, [r1, #-1550]	; 0xfffff9f2
    13b4:	054f0610 	strbeq	r0, [pc, #-1552]	; dac <__Vectors_Size+0x5ec>
    13b8:	05010613 	streq	r0, [r1, #-1555]	; 0xfffff9ed
    13bc:	054e060d 	strbeq	r0, [lr, #-1549]	; 0xfffff9f3
    13c0:	05010667 	streq	r0, [r1, #-1639]	; 0xfffff999
    13c4:	0d054a4e 	vstreq	s8, [r5, #-312]	; 0xfffffec8
    13c8:	08040200 	stmdaeq	r4, {r9}
    13cc:	13054b06 	movwne	r4, #23302	; 0x5b06
    13d0:	08040200 	stmdaeq	r4, {r9}
    13d4:	02000106 	andeq	r0, r0, #-2147483647	; 0x80000001
    13d8:	00740804 	rsbseq	r0, r4, r4, lsl #16
    13dc:	4a080402 	bmi	2023ec <__RAM_SIZE+0x1023ec>
    13e0:	08040200 	stmdaeq	r4, {r9}
    13e4:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    13e8:	02002008 	andeq	r2, r0, #8
    13ec:	05200804 	streq	r0, [r0, #-2052]!	; 0xfffff7fc
    13f0:	01470310 	cmpeq	r7, r0, lsl r3
    13f4:	0b053131 	bleq	14d8c0 <__RAM_SIZE+0x4d8c0>
    13f8:	11053606 	tstne	r5, r6, lsl #12
    13fc:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
    1400:	1003060b 	andne	r0, r3, fp, lsl #12
    1404:	060e0520 	streq	r0, [lr], -r0, lsr #10
    1408:	06100501 	ldreq	r0, [r0], -r1, lsl #10
    140c:	06130542 	ldreq	r0, [r3], -r2, asr #10
    1410:	060d0501 	streq	r0, [sp], -r1, lsl #10
    1414:	064c0541 	strbeq	r0, [ip], -r1, asr #10
    1418:	3c3c0501 	cfldr32cc	mvfx0, [ip], #-4
    141c:	02000d05 	andeq	r0, r0, #320	; 0x140
    1420:	4b060804 	blmi	183438 <__RAM_SIZE+0x83438>
    1424:	02003805 	andeq	r3, r0, #327680	; 0x50000
    1428:	01060804 	tsteq	r6, r4, lsl #16
    142c:	02001305 	andeq	r1, r0, #335544320	; 0x14000000
    1430:	004a0804 	subeq	r0, sl, r4, lsl #16
    1434:	74080402 	strvc	r0, [r8], #-1026	; 0xfffffbfe
    1438:	08040200 	stmdaeq	r4, {r9}
    143c:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    1440:	02005808 	andeq	r5, r0, #8, 16	; 0x80000
    1444:	05200804 	streq	r0, [r0, #-2052]!	; 0xfffff7fc
    1448:	12030609 	andne	r0, r3, #9437184	; 0x900000
    144c:	060f0501 	streq	r0, [pc], -r1, lsl #10
    1450:	06090501 	streq	r0, [r9], -r1, lsl #10
    1454:	030d053d 	movweq	r0, #54589	; 0xd53d
    1458:	1d052063 	stcne	0, cr2, [r5, #-396]	; 0xfffffe74
    145c:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    1460:	3d058306 	stccc	3, cr8, [r5, #-24]	; 0xffffffe8
    1464:	13050106 	movwne	r0, #20742	; 0x5106
    1468:	ac582e4a 	mrrcge	14, 4, r2, r8, cr10
    146c:	203d0520 	eorscs	r0, sp, r0, lsr #10
    1470:	4e060d05 	cdpmi	13, 0, cr0, cr6, cr5, {0}
    1474:	01061805 	tsteq	r6, r5, lsl #16
    1478:	4b060d05 	blmi	184894 <__RAM_SIZE+0x84894>
    147c:	01063805 	tsteq	r6, r5, lsl #16
    1480:	9e4a1305 	cdpls	3, 4, cr1, cr10, cr5, {0}
    1484:	81052058 	qaddhi	r2, r8, r5
    1488:	04020001 	streq	r0, [r2], #-1
    148c:	71052302 	tstvc	r5, r2, lsl #6
    1490:	3c66053c 	cfstr64cc	mvdx0, [r6], #-240	; 0xffffff10
    1494:	3c018105 	stfccd	f0, [r1], {5}
    1498:	060d0558 			; <UNDEFINED> instruction: 0x060d0558
    149c:	0613051a 			; <UNDEFINED> instruction: 0x0613051a
    14a0:	584a0801 	stmdapl	sl, {r0, fp}^
    14a4:	060d0520 	streq	r0, [sp], -r0, lsr #10
    14a8:	06130524 	ldreq	r0, [r3], -r4, lsr #10
    14ac:	20909e01 	addscs	r9, r0, r1, lsl #28
    14b0:	0001ae05 	andeq	sl, r1, r5, lsl #28
    14b4:	23020402 	movwcs	r0, #9218	; 0x2402
    14b8:	3c019505 	cfstr32cc	mvfx9, [r1], {5}
    14bc:	5801ae05 	stmdapl	r1, {r0, r2, r9, sl, fp, sp, pc}
    14c0:	06090558 			; <UNDEFINED> instruction: 0x06090558
    14c4:	05010a03 	streq	r0, [r1, #-2563]	; 0xfffff5fd
    14c8:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    14cc:	052f0609 	streq	r0, [pc, #-1545]!	; ecb <__Vectors_Size+0x70b>
    14d0:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    14d4:	67080609 	strvs	r0, [r8, -r9, lsl #12]
    14d8:	01060f05 	tsteq	r6, r5, lsl #30
    14dc:	3d060905 	vstrcc.16	s0, [r6, #-10]	; <UNPREDICTABLE>
    14e0:	02001d05 	andeq	r1, r0, #320	; 0x140
    14e4:	051d0104 	ldreq	r0, [sp, #-260]	; 0xfffffefc
    14e8:	04020023 	streq	r0, [r2], #-35	; 0xffffffdd
    14ec:	00010601 	andeq	r0, r1, r1, lsl #12
    14f0:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    14f4:	03060905 	movweq	r0, #26885	; 0x6905
    14f8:	0c052009 	stceq	0, cr2, [r5], {9}
    14fc:	1d050106 	stfnes	f0, [r5, #-24]	; 0xffffffe8
    1500:	02040200 	andeq	r0, r4, #0, 4
    1504:	0031052e 	eorseq	r0, r1, lr, lsr #10
    1508:	06030402 	streq	r0, [r3], -r2, lsl #8
    150c:	0037052e 	eorseq	r0, r7, lr, lsr #10
    1510:	06030402 	streq	r0, [r3], -r2, lsl #8
    1514:	06090501 	streq	r0, [r9], -r1, lsl #10
    1518:	060c052f 	streq	r0, [ip], -pc, lsr #10
    151c:	001d0501 	andseq	r0, sp, r1, lsl #10
    1520:	2e020402 	cdpcs	4, 0, cr0, cr2, cr2, {0}
    1524:	02003105 	andeq	r3, r0, #1073741825	; 0x40000001
    1528:	2e060304 	cdpcs	3, 0, cr0, cr6, cr4, {0}
    152c:	02003705 	andeq	r3, r0, #1310720	; 0x140000
    1530:	01060304 	tsteq	r6, r4, lsl #6
    1534:	2f060905 	svccs	0x00060905
    1538:	01060f05 	tsteq	r6, r5, lsl #30
    153c:	08060905 	stmdaeq	r6, {r0, r2, r8, fp}
    1540:	060f0567 	streq	r0, [pc], -r7, ror #10
    1544:	06090501 	streq	r0, [r9], -r1, lsl #10
    1548:	0514243d 	ldreq	r2, [r4, #-1085]	; 0xfffffbc3
    154c:	2e01060c 	cfmadd32cs	mvax0, mvfx0, mvfx1, mvfx12
    1550:	051e1605 	ldreq	r1, [lr, #-1541]	; 0xfffff9fb
    1554:	05360609 	ldreq	r0, [r6, #-1545]!	; 0xfffff9f7
    1558:	05010613 	streq	r0, [r1, #-1555]	; 0xfffff9ed
    155c:	062e3c09 	strteq	r3, [lr], -r9, lsl #24
    1560:	060c055a 			; <UNDEFINED> instruction: 0x060c055a
    1564:	06090501 	streq	r0, [r9], -r1, lsl #10
    1568:	060f0525 	streq	r0, [pc], -r5, lsr #10
    156c:	06090501 	streq	r0, [r9], -r1, lsl #10
    1570:	030d053d 	movweq	r0, #54589	; 0xd53d
    1574:	2e062e74 	mcrcs	14, 0, r2, cr6, cr4, {3}
    1578:	05491305 	strbeq	r1, [r9, #-773]	; 0xfffffcfb
    157c:	1105210d 	tstne	r5, sp, lsl #2
    1580:	13051f06 	movwne	r1, #24326	; 0x5f06
    1584:	11050106 	tstne	r5, r6, lsl #2
    1588:	16052e2e 	strne	r2, [r5], -lr, lsr #28
    158c:	3c2e3c2b 	stccc	12, cr3, [lr], #-172	; 0xffffff54
    1590:	03060d05 	movweq	r0, #27909	; 0x6d05
    1594:	2006200c 	andcs	r2, r6, ip
    1598:	05491305 	strbeq	r1, [r9, #-773]	; 0xfffffcfb
    159c:	1105210d 	tstne	r5, sp, lsl #2
    15a0:	13051f06 	movwne	r1, #24326	; 0x5f06
    15a4:	11050106 	tstne	r5, r6, lsl #2
    15a8:	052e2e2e 	streq	r2, [lr, #-3630]!	; 0xfffff1d2
    15ac:	09030609 	stmdbeq	r3, {r0, r3, r9, sl}
    15b0:	06150501 	ldreq	r0, [r5], -r1, lsl #10
    15b4:	06090501 	streq	r0, [r9], -r1, lsl #10
    15b8:	061a0559 			; <UNDEFINED> instruction: 0x061a0559
    15bc:	06260501 	strteq	r0, [r6], -r1, lsl #10
    15c0:	747b9003 	ldrbtvc	r9, [fp], #-3
    15c4:	05012205 	streq	r2, [r1, #-517]	; 0xfffffdfb
    15c8:	052e061e 	streq	r0, [lr, #-1566]!	; 0xfffff9e2
    15cc:	05200611 	streq	r0, [r0, #-1553]!	; 0xfffff9ef
    15d0:	052e0603 	streq	r0, [lr, #-1539]!	; 0xfffff9fd
    15d4:	1405201e 	strne	r2, [r5], #-30	; 0xffffffe2
    15d8:	06030520 	streq	r0, [r3], -r0, lsr #10
    15dc:	061b052f 	ldreq	r0, [fp], -pc, lsr #10
    15e0:	09052e01 	stmdbeq	r5, {r0, r9, sl, fp, sp}
    15e4:	04f10306 	ldrbteq	r0, [r1], #774	; 0x306
    15e8:	060c0501 	streq	r0, [ip], -r1, lsl #10
    15ec:	060b0501 	streq	r0, [fp], -r1, lsl #10
    15f0:	060d054b 	streq	r0, [sp], -fp, asr #10
    15f4:	06090501 	streq	r0, [r9], -r1, lsl #10
    15f8:	060c053e 			; <UNDEFINED> instruction: 0x060c053e
    15fc:	202e4a01 	eorcs	r4, lr, r1, lsl #20
    1600:	1b1a0520 	blne	682a88 <__RAM_SIZE+0x582a88>
    1604:	0d052e2e 	stceq	14, cr2, [r5, #-184]	; 0xffffff48
    1608:	2e063506 	cfsh32cs	mvfx3, mvfx6, #6
    160c:	05491305 	strbeq	r1, [r9, #-773]	; 0xfffffcfb
    1610:	1105210d 	tstne	r5, sp, lsl #2
    1614:	13051f06 	movwne	r1, #24326	; 0x5f06
    1618:	11050106 	tstne	r5, r6, lsl #2
    161c:	2e130520 	cfmul64cs	mvdx0, mvdx3, mvdx0
    1620:	4505203c 	strmi	r2, [r5, #-60]	; 0xffffffc4
    1624:	060b0525 	streq	r0, [fp], -r5, lsr #10
    1628:	06120521 	ldreq	r0, [r2], -r1, lsr #10
    162c:	2e0b0501 	cfsh32cs	mvfx0, mvfx11, #1
    1630:	060f0520 	streq	r0, [pc], -r0, lsr #10
    1634:	06110549 	ldreq	r0, [r1], -r9, asr #10
    1638:	2e0f0501 	cfsh32cs	mvfx0, mvfx15, #1
    163c:	02001a05 	andeq	r1, r0, #20480	; 0x5000
    1640:	05200104 	streq	r0, [r0, #-260]!	; 0xfffffefc
    1644:	04020045 	streq	r0, [r2], #-69	; 0xffffffbb
    1648:	39052e02 	stmdbcc	r5, {r1, r9, sl, fp, sp}
    164c:	02040200 	andeq	r0, r4, #0, 4
    1650:	320c0520 	andcc	r0, ip, #32, 10	; 0x8000000
    1654:	2e060905 	vmlacs.f16	s0, s12, s10	; <UNPREDICTABLE>
    1658:	01060c05 	tsteq	r6, r5, lsl #24
    165c:	33060905 	movwcc	r0, #26885	; 0x6905
    1660:	01060f05 	tsteq	r6, r5, lsl #30
    1664:	3d060905 	vstrcc.16	s0, [r6, #-10]	; <UNPREDICTABLE>
    1668:	052e2006 	streq	r2, [lr, #-6]!
    166c:	061c060d 	ldreq	r0, [ip], -sp, lsl #12
    1670:	49130520 	ldmdbmi	r3, {r5, r8, sl}
    1674:	05210d05 	streq	r0, [r1, #-3333]!	; 0xfffff2fb
    1678:	051f0611 	ldreq	r0, [pc, #-1553]	; 106f <__HEAP_SIZE+0x6f>
    167c:	05010613 	streq	r0, [r1, #-1555]	; 0xfffff9ed
    1680:	202e2e11 	eorcs	r2, lr, r1, lsl lr
    1684:	06090520 	streq	r0, [r9], -r0, lsr #10
    1688:	13010903 	movwne	r0, #6403	; 0x1903
    168c:	01060f05 	tsteq	r6, r5, lsl #30
    1690:	30060905 	andcc	r0, r6, r5, lsl #18
    1694:	170b0513 	smladne	fp, r3, r5, r0
    1698:	01065105 	tsteq	r6, r5, lsl #2
    169c:	054a1105 	strbeq	r1, [sl, #-261]	; 0xfffffefb
    16a0:	16080609 	strne	r0, [r8], -r9, lsl #12
    16a4:	01060f05 	tsteq	r6, r5, lsl #30
    16a8:	3d060905 	vstrcc.16	s0, [r6, #-10]	; <UNPREDICTABLE>
    16ac:	16062006 	strne	r2, [r6], -r6
    16b0:	59062006 	stmdbpl	r6, {r1, r2, sp}
    16b4:	01060f05 	tsteq	r6, r5, lsl #30
    16b8:	3d060905 	vstrcc.16	s0, [r6, #-10]	; <UNPREDICTABLE>
    16bc:	06221006 	strteq	r1, [r2], -r6
    16c0:	06200623 	strteq	r0, [r0], -r3, lsr #12
    16c4:	060f054b 	streq	r0, [pc], -fp, asr #10
    16c8:	06090501 	streq	r0, [r9], -r1, lsl #10
    16cc:	2210063d 	andscs	r0, r0, #63963136	; 0x3d00000
    16d0:	207df803 	rsbscs	pc, sp, r3, lsl #16
    16d4:	03060305 	movweq	r0, #25349	; 0x6305
    16d8:	002e028d 	eoreq	r0, lr, sp, lsl #5
    16dc:	06010402 	streq	r0, [r1], -r2, lsl #8
    16e0:	02002e2e 	andeq	r2, r0, #736	; 0x2e0
    16e4:	00200404 	eoreq	r0, r0, r4, lsl #8
    16e8:	06040402 	streq	r0, [r4], -r2, lsl #8
    16ec:	0001054d 	andeq	r0, r1, sp, asr #10
    16f0:	06040402 	streq	r0, [r4], -r2, lsl #8
    16f4:	04020013 	streq	r0, [r2], #-19	; 0xffffffed
    16f8:	03024a04 	movweq	r4, #10756	; 0x2a04
    16fc:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    1700:	02050001 	andeq	r0, r5, #1
    1704:	10001b00 	andne	r1, r0, r0, lsl #22
    1708:	01019503 	tsteq	r1, r3, lsl #10
    170c:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
    1710:	1c050111 	stfnes	f0, [r5], {17}
    1714:	13030501 	movwne	r0, #13569	; 0x3501
    1718:	01060605 	tsteq	r6, r5, lsl #12
    171c:	052c0105 	streq	r0, [ip, #-261]!	; 0xfffffefb
    1720:	05230605 	streq	r0, [r3, #-1541]!	; 0xfffff9fb
    1724:	02300601 	eorseq	r0, r0, #1048576	; 0x100000
    1728:	01010001 	tsteq	r1, r1
    172c:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    1730:	001b0c02 	andseq	r0, fp, r2, lsl #24
    1734:	06de0310 			; <UNDEFINED> instruction: 0x06de0310
    1738:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    173c:	13670603 	cmnne	r7, #3145728	; 0x300000
    1740:	13051321 	movwne	r1, #21281	; 0x5321
    1744:	03050106 	movweq	r0, #20742	; 0x5106
    1748:	05137506 	ldreq	r7, [r3, #-1286]	; 0xfffffafa
    174c:	02130601 	andseq	r0, r3, #1048576	; 0x100000
    1750:	01010008 	tsteq	r1, r8
    1754:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    1758:	00000002 	andeq	r0, r0, r2
    175c:	06e90300 	strbteq	r0, [r9], r0, lsl #6
    1760:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    1764:	13750603 	cmnne	r5, #3145728	; 0x300000
    1768:	06130521 	ldreq	r0, [r3], -r1, lsr #10
    176c:	03054a01 	movweq	r4, #23041	; 0x5a01
    1770:	05132f06 	ldreq	r2, [r3, #-3846]	; 0xfffff0fa
    1774:	02130601 	andseq	r0, r3, #1048576	; 0x100000
    1778:	01010008 	tsteq	r1, r8
    177c:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    1780:	00000002 	andeq	r0, r0, r2
    1784:	06f30300 	ldrbteq	r0, [r3], r0, lsl #6
    1788:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    178c:	13750603 	cmnne	r5, #3145728	; 0x300000
    1790:	06130521 	ldreq	r0, [r3], -r1, lsr #10
    1794:	05202e01 	streq	r2, [r0, #-3585]!	; 0xfffff1ff
    1798:	132f0603 			; <UNDEFINED> instruction: 0x132f0603
    179c:	13060105 	movwne	r0, #24837	; 0x6105
    17a0:	01000702 	tsteq	r0, r2, lsl #14
    17a4:	00010501 	andeq	r0, r1, r1, lsl #10
    17a8:	00000205 	andeq	r0, r0, r5, lsl #4
    17ac:	fd030000 	stc2	0, cr0, [r3, #-0]
    17b0:	01060106 	tsteq	r6, r6, lsl #2
    17b4:	3d060305 	stccc	3, cr0, [r6, #-20]	; 0xffffffec
    17b8:	060a0513 			; <UNDEFINED> instruction: 0x060a0513
    17bc:	05204a01 	streq	r4, [r0, #-2561]!	; 0xfffff5ff
    17c0:	06022f01 	streq	r2, [r2], -r1, lsl #30
    17c4:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    17c8:	02050001 	andeq	r0, r5, #1
    17cc:	00000000 	andeq	r0, r0, r0
    17d0:	01078403 	tsteq	r7, r3, lsl #8
    17d4:	03050106 	movweq	r0, #20742	; 0x5106
    17d8:	0a052f06 	beq	14d3f8 <__RAM_SIZE+0x4d3f8>
    17dc:	202e0106 	eorcs	r0, lr, r6, lsl #2
    17e0:	01052020 	tsteq	r5, r0, lsr #32
    17e4:	0005022f 	andeq	r0, r5, pc, lsr #4
    17e8:	01050101 	tsteq	r5, r1, lsl #2
    17ec:	00020500 	andeq	r0, r2, r0, lsl #10
    17f0:	03000000 	movweq	r0, #0
    17f4:	0601078a 	streq	r0, [r1], -sl, lsl #15
    17f8:	06030501 	streq	r0, [r3], -r1, lsl #10
    17fc:	05211367 	streq	r1, [r1, #-871]!	; 0xfffffc99
    1800:	0501061b 	streq	r0, [r1, #-1563]	; 0xfffff9e5
    1804:	052f0603 	streq	r0, [pc, #-1539]!	; 1209 <__HEAP_SIZE+0x209>
    1808:	58010613 	stmdapl	r1, {r0, r1, r4, r9, sl}
    180c:	2f060305 	svccs	0x00060305
    1810:	06010513 			; <UNDEFINED> instruction: 0x06010513
    1814:	00080213 	andeq	r0, r8, r3, lsl r2
    1818:	03380101 	teqeq	r8, #1073741824	; 0x40000000
    181c:	00030000 	andeq	r0, r3, r0
    1820:	000001cc 	andeq	r0, r0, ip, asr #3
    1824:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
    1828:	0101000d 	tsteq	r1, sp
    182c:	00000101 	andeq	r0, r0, r1, lsl #2
    1830:	00000100 	andeq	r0, r0, r0, lsl #2
    1834:	2f2e2e01 	svccs	0x002e2e01
    1838:	65726f43 	ldrbvs	r6, [r2, #-3907]!	; 0xfffff0bd
    183c:	6372532f 	cmnvs	r2, #-1140850688	; 0xbc000000
    1840:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
    1844:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
    1848:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
    184c:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
    1850:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
    1854:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
    1858:	5f6d7261 	svcpl	0x006d7261
    185c:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
    1860:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
    1864:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    1868:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    186c:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    1870:	30312d69 	eorscc	r2, r1, r9, ror #26
    1874:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
    1878:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
    187c:	615c3031 	cmpvs	ip, r1, lsr r0
    1880:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    1884:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    1888:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    188c:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
    1890:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    1894:	63616d5c 	cmnvs	r1, #92, 26	; 0x1700
    1898:	656e6968 	strbvs	r6, [lr, #-2408]!	; 0xfffff698
    189c:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
    18a0:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
    18a4:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
    18a8:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
    18ac:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
    18b0:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
    18b4:	5f6d7261 	svcpl	0x006d7261
    18b8:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
    18bc:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
    18c0:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    18c4:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    18c8:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    18cc:	30312d69 	eorscc	r2, r1, r9, ror #26
    18d0:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
    18d4:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
    18d8:	6c5c3031 	mrrcvs	0, 3, r3, ip, cr1
    18dc:	675c6269 	ldrbvs	r6, [ip, -r9, ror #4]
    18e0:	615c6363 	cmpvs	ip, r3, ror #6
    18e4:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    18e8:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    18ec:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    18f0:	2e30315c 	mrccs	1, 1, r3, cr0, cr12, {2}
    18f4:	5c312e33 	ldcpl	14, cr2, [r1], #-204	; 0xffffff34
    18f8:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    18fc:	00656475 	rsbeq	r6, r5, r5, ror r4
    1900:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
    1904:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    1908:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
    190c:	705c6e6f 	subsvc	r6, ip, pc, ror #28
    1910:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
    1914:	615c6d61 	cmpvs	ip, r1, ror #26
    1918:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
    191c:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
    1920:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
    1924:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    1928:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    192c:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    1930:	2e30312d 	rsfcssp	f3, f0, #5.0
    1934:	30322d33 	eorscc	r2, r2, r3, lsr sp
    1938:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
    193c:	72615c30 	rsbvc	r5, r1, #48, 24	; 0x3000
    1940:	6f6e2d6d 	svcvs	0x006e2d6d
    1944:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    1948:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
    194c:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    1950:	5c656475 	cfstrdpl	mvd6, [r5], #-468	; 0xfffffe2c
    1954:	00737973 	rsbseq	r7, r3, r3, ror r9
    1958:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
    195c:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    1960:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
    1964:	705c6e6f 	subsvc	r6, ip, pc, ror #28
    1968:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
    196c:	615c6d61 	cmpvs	ip, r1, ror #26
    1970:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
    1974:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
    1978:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
    197c:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    1980:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    1984:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    1988:	2e30312d 	rsfcssp	f3, f0, #5.0
    198c:	30322d33 	eorscc	r2, r2, r3, lsr sp
    1990:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
    1994:	72615c30 	rsbvc	r5, r1, #48, 24	; 0x3000
    1998:	6f6e2d6d 	svcvs	0x006e2d6d
    199c:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    19a0:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
    19a4:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    19a8:	00656475 	rsbeq	r6, r5, r5, ror r4
    19ac:	72617500 	rsbvc	r7, r1, #0, 10
    19b0:	00632e74 	rsbeq	r2, r3, r4, ror lr
    19b4:	5f000001 	svcpl	0x00000001
    19b8:	61666564 	cmnvs	r6, r4, ror #10
    19bc:	5f746c75 	svcpl	0x00746c75
    19c0:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
    19c4:	00682e73 	rsbeq	r2, r8, r3, ror lr
    19c8:	73000002 	movwvc	r0, #2
    19cc:	65646474 	strbvs	r6, [r4, #-1140]!	; 0xfffffb8c
    19d0:	00682e66 	rsbeq	r2, r8, r6, ror #28
    19d4:	5f000003 	svcpl	0x00000003
    19d8:	69647473 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
    19dc:	682e746e 	stmdavs	lr!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
    19e0:	00000400 	andeq	r0, r0, r0, lsl #8
    19e4:	69647473 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
    19e8:	00682e6f 	rsbeq	r2, r8, pc, ror #28
    19ec:	00000005 	andeq	r0, r0, r5
    19f0:	05001605 	streq	r1, [r0, #-1541]	; 0xfffff9fb
    19f4:	001b3802 	andseq	r3, fp, r2, lsl #16
    19f8:	011c0310 	tsteq	ip, r0, lsl r3
    19fc:	02002405 	andeq	r2, r0, #83886080	; 0x5000000
    1a00:	05130104 	ldreq	r0, [r3, #-260]	; 0xfffffefc
    1a04:	0402000b 	streq	r0, [r2], #-11
    1a08:	0c050101 	stfeqs	f0, [r5], {1}
    1a0c:	01040200 	mrseq	r0, R12_usr
    1a10:	0b050106 	bleq	141e30 <__RAM_SIZE+0x41e30>
    1a14:	01040200 	mrseq	r0, R12_usr
    1a18:	0605052e 	streq	r0, [r5], -lr, lsr #10
    1a1c:	0616053d 			; <UNDEFINED> instruction: 0x0616053d
    1a20:	06050501 	streq	r0, [r5], -r1, lsl #10
    1a24:	0601052f 	streq	r0, [r1], -pc, lsr #10
    1a28:	00030213 	andeq	r0, r3, r3, lsl r2
    1a2c:	14050101 	strne	r0, [r5], #-257	; 0xfffffeff
    1a30:	00020500 	andeq	r0, r2, r0, lsl #10
    1a34:	03000000 	movweq	r0, #0
    1a38:	2b050122 	blcs	141ec8 <__RAM_SIZE+0x41ec8>
    1a3c:	01040200 	mrseq	r0, R12_usr
    1a40:	000b0513 	andeq	r0, fp, r3, lsl r5
    1a44:	01010402 	tsteq	r1, r2, lsl #8
    1a48:	02000d05 	andeq	r0, r0, #320	; 0x140
    1a4c:	01060104 	tsteq	r6, r4, lsl #2
    1a50:	02000b05 	andeq	r0, r0, #5120	; 0x1400
    1a54:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
    1a58:	053d0605 	ldreq	r0, [sp, #-1541]!	; 0xfffff9fb
    1a5c:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    1a60:	03022f01 	movweq	r2, #12033	; 0x2f01
    1a64:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    1a68:	0205001e 	andeq	r0, r5, #30
    1a6c:	10001b4c 	andne	r1, r0, ip, asr #22
    1a70:	06012703 	streq	r2, [r1], -r3, lsl #14
    1a74:	06050501 	streq	r0, [r5], -r1, lsl #10
    1a78:	0905132f 	stmdbeq	r5, {r0, r1, r2, r3, r5, r8, r9, ip}
    1a7c:	0b051106 	bleq	145e9c <__RAM_SIZE+0x45e9c>
    1a80:	06090521 	streq	r0, [r9], -r1, lsr #10
    1a84:	0e052f21 	cdpeq	15, 0, cr2, cr5, cr1, {1}
    1a88:	0b050106 	bleq	141ea8 <__RAM_SIZE+0x41ea8>
    1a8c:	12051e06 	andne	r1, r5, #6, 28	; 0x60
    1a90:	0b050106 	bleq	141eb0 <__RAM_SIZE+0x41eb0>
    1a94:	06050520 	streq	r0, [r5], -r0, lsr #10
    1a98:	01053d32 	tsteq	r5, r2, lsr sp
    1a9c:	002e1306 	eoreq	r1, lr, r6, lsl #6
    1aa0:	16050101 	strne	r0, [r5], -r1, lsl #2
    1aa4:	6c020500 	cfstr32vs	mvfx0, [r2], {-0}
    1aa8:	0310001b 	tsteq	r0, #27
    1aac:	05050131 	streq	r0, [r5, #-305]	; 0xfffffecf
    1ab0:	06160513 			; <UNDEFINED> instruction: 0x06160513
    1ab4:	06050501 	streq	r0, [r5], -r1, lsl #10
    1ab8:	0616053d 			; <UNDEFINED> instruction: 0x0616053d
    1abc:	06050501 	streq	r0, [r5], -r1, lsl #10
    1ac0:	0616052f 	ldreq	r0, [r6], -pc, lsr #10
    1ac4:	06050501 	streq	r0, [r5], -r1, lsl #10
    1ac8:	0616052f 	ldreq	r0, [r6], -pc, lsr #10
    1acc:	06050501 	streq	r0, [r5], -r1, lsl #10
    1ad0:	0616053d 			; <UNDEFINED> instruction: 0x0616053d
    1ad4:	06050501 	streq	r0, [r5], -r1, lsl #10
    1ad8:	0616052f 	ldreq	r0, [r6], -pc, lsr #10
    1adc:	2f010501 	svccs	0x00010501
    1ae0:	01000402 	tsteq	r0, r2, lsl #8
    1ae4:	00240501 	eoreq	r0, r4, r1, lsl #10
    1ae8:	00000205 	andeq	r0, r0, r5, lsl #4
    1aec:	3a030000 	bcc	c1af4 <__HEAP_SIZE+0xc0af4>
    1af0:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    1af4:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
    1af8:	022f0601 	eoreq	r0, pc, #1048576	; 0x100000
    1afc:	01010001 	tsteq	r1, r1
    1b00:	05003005 	streq	r3, [r0, #-5]
    1b04:	00000002 	andeq	r0, r0, r2
    1b08:	013e0300 	teqeq	lr, r0, lsl #6
    1b0c:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    1b10:	05133d06 	ldreq	r3, [r3, #-3334]	; 0xfffff2fa
    1b14:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    1b18:	05340609 	ldreq	r0, [r4, #-1545]!	; 0xfffff9f7
    1b1c:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
    1b20:	05210609 	streq	r0, [r1, #-1545]!	; 0xfffff9f7
    1b24:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    1b28:	7a03060b 	bvc	c335c <__HEAP_SIZE+0xc235c>
    1b2c:	01050520 	tsteq	r5, r0, lsr #10
    1b30:	05130905 	ldreq	r0, [r3, #-2309]	; 0xfffff6fb
    1b34:	0501060e 	streq	r0, [r1, #-1550]	; 0xfffff9f2
    1b38:	09052e0c 	stmdbeq	r5, {r2, r3, r9, sl, fp, sp}
    1b3c:	0b052106 	bleq	149f5c <__RAM_SIZE+0x49f5c>
    1b40:	17050106 	strne	r0, [r5, -r6, lsl #2]
    1b44:	01040200 	mrseq	r0, R12_usr
    1b48:	0605052e 	streq	r0, [r5], -lr, lsr #10
    1b4c:	06010534 			; <UNDEFINED> instruction: 0x06010534
    1b50:	00202013 	eoreq	r2, r0, r3, lsl r0
    1b54:	06460101 	strbeq	r0, [r6], -r1, lsl #2
    1b58:	00030000 	andeq	r0, r3, r0
    1b5c:	0000025b 	andeq	r0, r0, fp, asr r2
    1b60:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
    1b64:	0101000d 	tsteq	r1, sp
    1b68:	00000101 	andeq	r0, r0, r1, lsl #2
    1b6c:	00000100 	andeq	r0, r0, r0, lsl #2
    1b70:	2f2e2e01 	svccs	0x002e2e01
    1b74:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    1b78:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    1b7c:	69747562 	ldmdbvs	r4!, {r1, r5, r6, r8, sl, ip, sp, lr}^
    1b80:	662f736c 	strtvs	r7, [pc], -ip, ror #6
    1b84:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
    1b88:	6d75642d 	cfldrdvs	mvd6, [r5, #-180]!	; 0xffffff4c
    1b8c:	72732f70 	rsbsvc	r2, r3, #112, 30	; 0x1c0
    1b90:	2e2e0063 	cdpcs	0, 2, cr0, cr14, cr3, {3}
    1b94:	6972442f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, sl, lr}^
    1b98:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
    1b9c:	534d432f 	movtpl	r4, #54063	; 0xd32f
    1ba0:	355f5349 	ldrbcc	r5, [pc, #-841]	; 185f <__HEAP_SIZE+0x85f>
    1ba4:	534d432f 	movtpl	r4, #54063	; 0xd32f
    1ba8:	432f5349 			; <UNDEFINED> instruction: 0x432f5349
    1bac:	2f65726f 	svccs	0x0065726f
    1bb0:	6c636e49 	stclvs	14, cr6, [r3], #-292	; 0xfffffedc
    1bb4:	00656475 	rsbeq	r6, r5, r5, ror r4
    1bb8:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
    1bbc:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    1bc0:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
    1bc4:	705c6e6f 	subsvc	r6, ip, pc, ror #28
    1bc8:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
    1bcc:	615c6d61 	cmpvs	ip, r1, ror #26
    1bd0:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
    1bd4:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
    1bd8:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
    1bdc:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    1be0:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    1be4:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    1be8:	2e30312d 	rsfcssp	f3, f0, #5.0
    1bec:	30322d33 	eorscc	r2, r2, r3, lsr sp
    1bf0:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
    1bf4:	72615c30 	rsbvc	r5, r1, #48, 24	; 0x3000
    1bf8:	6f6e2d6d 	svcvs	0x006e2d6d
    1bfc:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    1c00:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
    1c04:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    1c08:	5c656475 	cfstrdpl	mvd6, [r5], #-468	; 0xfffffe2c
    1c0c:	6863616d 	stmdavs	r3!, {r0, r2, r3, r5, r6, r8, sp, lr}^
    1c10:	00656e69 	rsbeq	r6, r5, r9, ror #28
    1c14:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
    1c18:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    1c1c:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
    1c20:	705c6e6f 	subsvc	r6, ip, pc, ror #28
    1c24:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
    1c28:	615c6d61 	cmpvs	ip, r1, ror #26
    1c2c:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
    1c30:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
    1c34:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
    1c38:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    1c3c:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    1c40:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    1c44:	2e30312d 	rsfcssp	f3, f0, #5.0
    1c48:	30322d33 	eorscc	r2, r2, r3, lsr sp
    1c4c:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
    1c50:	696c5c30 	stmdbvs	ip!, {r4, r5, sl, fp, ip, lr}^
    1c54:	63675c62 	cmnvs	r7, #25088	; 0x6200
    1c58:	72615c63 	rsbvc	r5, r1, #25344	; 0x6300
    1c5c:	6f6e2d6d 	svcvs	0x006e2d6d
    1c60:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    1c64:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
    1c68:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
    1c6c:	695c312e 	ldmdbvs	ip, {r1, r2, r3, r5, r8, ip, sp}^
    1c70:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    1c74:	63006564 	movwvs	r6, #1380	; 0x564
    1c78:	73755c3a 	cmnvc	r5, #14848	; 0x3a00
    1c7c:	5c737265 	lfmpl	f7, 2, [r3], #-404	; 0xfffffe6c
    1c80:	6f646978 	svcvs	0x00646978
    1c84:	72705c6e 	rsbsvc	r5, r0, #28160	; 0x6e00
    1c88:	6172676f 	cmnvs	r2, pc, ror #14
    1c8c:	72615c6d 	rsbvc	r5, r1, #27904	; 0x6d00
    1c90:	63675f6d 	cmnvs	r7, #436	; 0x1b4
    1c94:	63675c63 	cmnvs	r7, #25344	; 0x6300
    1c98:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
    1c9c:	6f6e2d6d 	svcvs	0x006e2d6d
    1ca0:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    1ca4:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
    1ca8:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
    1cac:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
    1cb0:	30312e31 	eorscc	r2, r1, r1, lsr lr
    1cb4:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    1cb8:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    1cbc:	61652d65 	cmnvs	r5, r5, ror #26
    1cc0:	695c6962 	ldmdbvs	ip, {r1, r5, r6, r8, fp, sp, lr}^
    1cc4:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    1cc8:	735c6564 	cmpvc	ip, #100, 10	; 0x19000000
    1ccc:	2e007379 	mcrcs	3, 0, r7, cr0, cr9, {3}
    1cd0:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    1cd4:	2f2e2e2f 	svccs	0x002e2e2f
    1cd8:	7562696c 	strbvc	r6, [r2, #-2412]!	; 0xfffff694
    1cdc:	736c6974 	cmnvc	ip, #116, 18	; 0x1d0000
    1ce0:	7561662f 	strbvc	r6, [r1, #-1583]!	; 0xfffff9d1
    1ce4:	642d746c 	strtvs	r7, [sp], #-1132	; 0xfffffb94
    1ce8:	2f706d75 	svccs	0x00706d75
    1cec:	00636e69 	rsbeq	r6, r3, r9, ror #28
    1cf0:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
    1cf4:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    1cf8:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
    1cfc:	705c6e6f 	subsvc	r6, ip, pc, ror #28
    1d00:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
    1d04:	615c6d61 	cmpvs	ip, r1, ror #26
    1d08:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
    1d0c:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
    1d10:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
    1d14:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    1d18:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    1d1c:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    1d20:	2e30312d 	rsfcssp	f3, f0, #5.0
    1d24:	30322d33 	eorscc	r2, r2, r3, lsr sp
    1d28:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
    1d2c:	72615c30 	rsbvc	r5, r1, #48, 24	; 0x3000
    1d30:	6f6e2d6d 	svcvs	0x006e2d6d
    1d34:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    1d38:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
    1d3c:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    1d40:	00656475 	rsbeq	r6, r5, r5, ror r4
    1d44:	75616600 	strbvc	r6, [r1, #-1536]!	; 0xfffffa00
    1d48:	642d746c 	strtvs	r7, [sp], #-1132	; 0xfffffb94
    1d4c:	2e706d75 	mrccs	13, 3, r6, cr0, cr5, {3}
    1d50:	00010063 	andeq	r0, r1, r3, rrx
    1d54:	736d6300 	cmnvc	sp, #0, 6
    1d58:	675f7369 	ldrbvs	r7, [pc, -r9, ror #6]
    1d5c:	682e6363 	stmdavs	lr!, {r0, r1, r5, r6, r8, r9, sp, lr}
    1d60:	00000200 	andeq	r0, r0, r0, lsl #4
    1d64:	6665645f 			; <UNDEFINED> instruction: 0x6665645f
    1d68:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
    1d6c:	7079745f 	rsbsvc	r7, r9, pc, asr r4
    1d70:	682e7365 	stmdavs	lr!, {r0, r2, r5, r6, r8, r9, ip, sp, lr}
    1d74:	00000300 	andeq	r0, r0, r0, lsl #6
    1d78:	64647473 	strbtvs	r7, [r4], #-1139	; 0xfffffb8d
    1d7c:	682e6665 	stmdavs	lr!, {r0, r2, r5, r6, r9, sl, sp, lr}
    1d80:	00000400 	andeq	r0, r0, r0, lsl #8
    1d84:	6474735f 	ldrbtvs	r7, [r4], #-863	; 0xfffffca1
    1d88:	2e746e69 	cdpcs	14, 7, cr6, cr4, cr9, {3}
    1d8c:	00050068 	andeq	r0, r5, r8, rrx
    1d90:	75616600 	strbvc	r6, [r1, #-1536]!	; 0xfffffa00
    1d94:	642d746c 	strtvs	r7, [sp], #-1132	; 0xfffffb94
    1d98:	2e706d75 	mrccs	13, 3, r6, cr0, cr5, {3}
    1d9c:	00060068 	andeq	r0, r6, r8, rrx
    1da0:	64747300 	ldrbtvs	r7, [r4], #-768	; 0xfffffd00
    1da4:	682e6f69 	stmdavs	lr!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}
    1da8:	00000700 	andeq	r0, r0, r0, lsl #14
    1dac:	6975623c 	ldmdbvs	r5!, {r2, r3, r4, r5, r9, sp, lr}^
    1db0:	692d746c 	pushvs	{r2, r3, r5, r6, sl, ip, sp, lr}
    1db4:	00003e6e 	andeq	r3, r0, lr, ror #28
    1db8:	05000000 	streq	r0, [r0, #-0]
    1dbc:	02050038 	andeq	r0, r5, #56	; 0x38
    1dc0:	10001b90 	mulne	r0, r0, fp
    1dc4:	01018103 	tsteq	r1, r3, lsl #2
    1dc8:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    1dcc:	0e052106 	adfeqs	f2, f5, f6
    1dd0:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    1dd4:	05132f06 	ldreq	r2, [r3, #-3846]	; 0xfffff0fa
    1dd8:	0505010a 	streq	r0, [r5, #-266]	; 0xfffffef6
    1ddc:	09050106 	stmdbeq	r5, {r1, r2, r8}
    1de0:	03040200 	movweq	r0, #16896	; 0x4200
    1de4:	14052106 	strne	r2, [r5], #-262	; 0xfffffefa
    1de8:	03040200 	movweq	r0, #16896	; 0x4200
    1dec:	12050106 	andne	r0, r5, #-2147483647	; 0x80000001
    1df0:	03040200 	movweq	r0, #16896	; 0x4200
    1df4:	003d052e 	eorseq	r0, sp, lr, lsr #10
    1df8:	06030402 	streq	r0, [r3], -r2, lsl #8
    1dfc:	003e0557 	eorseq	r0, lr, r7, asr r5
    1e00:	06030402 	streq	r0, [r3], -r2, lsl #8
    1e04:	00150501 	andseq	r0, r5, r1, lsl #10
    1e08:	06010402 	streq	r0, [r1], -r2, lsl #8
    1e0c:	00050520 	andeq	r0, r5, r0, lsr #10
    1e10:	06010402 	streq	r0, [r1], -r2, lsl #8
    1e14:	05310601 	ldreq	r0, [r1, #-1537]!	; 0xfffff9ff
    1e18:	2f010622 	svccs	0x00010622
    1e1c:	2f060505 	svccs	0x00060505
    1e20:	13060105 	movwne	r0, #24837	; 0x6105
    1e24:	0002022e 	andeq	r0, r2, lr, lsr #4
    1e28:	33050101 	movwcc	r0, #20737	; 0x5101
    1e2c:	bc020500 	cfstr32lt	mvfx0, [r2], {-0}
    1e30:	0310001b 	tsteq	r0, #27
    1e34:	0501018c 	streq	r0, [r1, #-396]	; 0xfffffe74
    1e38:	0e051605 	cfmadd32eq	mvax0, mvfx1, mvfx5, mvfx5
    1e3c:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    1e40:	32052f06 	andcc	r2, r5, #6, 30
    1e44:	0e050106 	adfeqs	f0, f5, f6
    1e48:	06050520 	streq	r0, [r5], -r0, lsr #10
    1e4c:	0608052f 	streq	r0, [r8], -pc, lsr #10
    1e50:	00260501 	eoreq	r0, r6, r1, lsl #10
    1e54:	3c010402 	cfstrscc	mvf0, [r1], {2}
    1e58:	3f060505 	svccc	0x00060505
    1e5c:	01060805 	tsteq	r6, r5, lsl #16
    1e60:	02002605 	andeq	r2, r0, #5242880	; 0x500000
    1e64:	053c0104 	ldreq	r0, [ip, #-260]!	; 0xfffffefc
    1e68:	05203f0c 	streq	r3, [r0, #-3852]!	; 0xfffff0f4
    1e6c:	20201b10 	eorcs	r1, r0, r0, lsl fp
    1e70:	20202320 	eorcs	r2, r0, r0, lsr #6
    1e74:	02230105 	eoreq	r0, r3, #1073741825	; 0x40000001
    1e78:	01010001 	tsteq	r1, r1
    1e7c:	05007305 	streq	r7, [r0, #-773]	; 0xfffffcfb
    1e80:	001bf402 	andseq	pc, fp, r2, lsl #8
    1e84:	01ee0310 	mvneq	r0, r0, lsl r3
    1e88:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    1e8c:	132f0605 			; <UNDEFINED> instruction: 0x132f0605
    1e90:	06080513 			; <UNDEFINED> instruction: 0x06080513
    1e94:	001a0501 	andseq	r0, sl, r1, lsl #10
    1e98:	58010402 	stmdapl	r1, {r1, sl}
    1e9c:	23060505 	movwcs	r0, #25861	; 0x6505
    1ea0:	01040200 	mrseq	r0, R12_usr
    1ea4:	09052006 	stmdbeq	r5, {r1, r2, sp}
    1ea8:	00050529 	andeq	r0, r5, r9, lsr #10
    1eac:	06020402 	streq	r0, [r2], -r2, lsl #8
    1eb0:	04020036 	streq	r0, [r2], #-54	; 0xffffffca
    1eb4:	02002001 	andeq	r2, r0, #1
    1eb8:	20060304 	andcs	r0, r6, r4, lsl #6
    1ebc:	30060905 	andcc	r0, r6, r5, lsl #18
    1ec0:	01060c05 	tsteq	r6, r5, lsl #24
    1ec4:	22060905 	andcs	r0, r6, #81920	; 0x14000
    1ec8:	01061305 	tsteq	r6, r5, lsl #6
    1ecc:	05200c05 	streq	r0, [r0, #-3077]!	; 0xfffff3fb
    1ed0:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    1ed4:	26052e01 	strcs	r2, [r5], -r1, lsl #28
    1ed8:	01040200 	mrseq	r0, R12_usr
    1edc:	06090520 	streq	r0, [r9], -r0, lsr #10
    1ee0:	060c0532 			; <UNDEFINED> instruction: 0x060c0532
    1ee4:	06090501 	streq	r0, [r9], -r1, lsl #10
    1ee8:	0c051440 	cfstrseq	mvf1, [r5], {64}	; 0x40
    1eec:	09050106 	stmdbeq	r5, {r1, r2, r8}
    1ef0:	0c053006 	stceq	0, cr3, [r5], {6}
    1ef4:	09050106 	stmdbeq	r5, {r1, r2, r8}
    1ef8:	0e052406 	cdpeq	4, 0, cr2, cr5, cr6, {0}
    1efc:	09050106 	stmdbeq	r5, {r1, r2, r8}
    1f00:	0e053e06 	cdpeq	14, 0, cr3, cr5, cr6, {0}
    1f04:	0c050106 	stfeqs	f0, [r5], {6}
    1f08:	0609052e 	streq	r0, [r9], -lr, lsr #10
    1f0c:	06170532 			; <UNDEFINED> instruction: 0x06170532
    1f10:	06090501 	streq	r0, [r9], -r1, lsl #10
    1f14:	060f052f 	streq	r0, [pc], -pc, lsr #10
    1f18:	06090501 	streq	r0, [r9], -r1, lsl #10
    1f1c:	060c0521 	streq	r0, [ip], -r1, lsr #10
    1f20:	33010501 	movwcc	r0, #5377	; 0x1501
    1f24:	5a031005 	bpl	c5f40 <__HEAP_SIZE+0xc4f40>
    1f28:	583f3c3c 	ldmdapl	pc!, {r2, r3, r4, r5, sl, fp, ip, sp}	; <UNPREDICTABLE>
    1f2c:	01000602 	tsteq	r0, r2, lsl #12
    1f30:	00360501 	eorseq	r0, r6, r1, lsl #10
    1f34:	1c700205 	lfmne	f0, 2, [r0], #-20	; 0xffffffec
    1f38:	9b031000 	blls	c5f40 <__HEAP_SIZE+0xc4f40>
    1f3c:	01060101 	tsteq	r6, r1, lsl #2
    1f40:	2f060505 	svccs	0x00060505
    1f44:	30062e06 	andcc	r2, r6, r6, lsl #28
    1f48:	06010513 			; <UNDEFINED> instruction: 0x06010513
    1f4c:	0202203e 	andeq	r2, r2, #62	; 0x3e
    1f50:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    1f54:	02050036 	andeq	r0, r5, #54	; 0x36
    1f58:	10001c88 	andne	r1, r0, r8, lsl #25
    1f5c:	0101a303 	tsteq	r1, r3, lsl #6
    1f60:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    1f64:	13142106 	tstne	r4, #-2147483647	; 0x80000001
    1f68:	01060e05 	tsteq	r6, r5, lsl #28
    1f6c:	32060505 	andcc	r0, r6, #20971520	; 0x1400000
    1f70:	13060105 	movwne	r0, #24837	; 0x6105
    1f74:	01000102 	tsteq	r0, r2, lsl #2
    1f78:	001c0501 	andseq	r0, ip, r1, lsl #10
    1f7c:	1c900205 	lfmne	f0, 4, [r0], {5}
    1f80:	f6031000 			; <UNDEFINED> instruction: 0xf6031000
    1f84:	05050100 	streq	r0, [r5, #-256]	; 0xffffff00
    1f88:	061a0521 	ldreq	r0, [sl], -r1, lsr #10
    1f8c:	20180501 	andscs	r0, r8, r1, lsl #10
    1f90:	2f060505 	svccs	0x00060505
    1f94:	01061a05 	tsteq	r6, r5, lsl #20
    1f98:	05201805 	streq	r1, [r0, #-2053]!	; 0xfffff7fb
    1f9c:	4c2f0605 	stcmi	6, cr0, [pc], #-20	; 1f90 <__HEAP_SIZE+0xf90>
    1fa0:	06010568 	streq	r0, [r1], -r8, ror #10
    1fa4:	0013024c 	andseq	r0, r3, ip, asr #4
    1fa8:	43050101 	movwmi	r0, #20737	; 0x5101
    1fac:	e0020500 	and	r0, r2, r0, lsl #10
    1fb0:	0310001c 	tsteq	r0, #28
    1fb4:	060101ae 	streq	r0, [r1], -lr, lsr #3
    1fb8:	06050501 	streq	r0, [r5], -r1, lsl #10
    1fbc:	1313133d 	tstne	r3, #-201326592	; 0xf4000000
    1fc0:	06180514 			; <UNDEFINED> instruction: 0x06180514
    1fc4:	20160501 	andscs	r0, r6, r1, lsl #10
    1fc8:	2f060505 	svccs	0x00060505
    1fcc:	01061805 	tsteq	r6, r5, lsl #16
    1fd0:	05201605 	streq	r1, [r0, #-1541]!	; 0xfffff9fb
    1fd4:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
    1fd8:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    1fdc:	05052016 	streq	r2, [r5, #-22]	; 0xffffffea
    1fe0:	18052106 	stmdane	r5, {r1, r2, r8, sp}
    1fe4:	16050106 	strne	r0, [r5], -r6, lsl #2
    1fe8:	06050520 	streq	r0, [r5], -r0, lsr #10
    1fec:	06180521 	ldreq	r0, [r8], -r1, lsr #10
    1ff0:	20160501 	andscs	r0, r6, r1, lsl #10
    1ff4:	21060505 	tstcs	r6, r5, lsl #10
    1ff8:	01061805 	tsteq	r6, r5, lsl #16
    1ffc:	05201605 	streq	r1, [r0, #-1541]!	; 0xfffff9fb
    2000:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
    2004:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    2008:	05052016 	streq	r2, [r5, #-22]	; 0xffffffea
    200c:	18052106 	stmdane	r5, {r1, r2, r8, sp}
    2010:	16050106 	strne	r0, [r5], -r6, lsl #2
    2014:	06050520 	streq	r0, [r5], -r0, lsr #10
    2018:	06180521 	ldreq	r0, [r8], -r1, lsr #10
    201c:	20160501 	andscs	r0, r6, r1, lsl #10
    2020:	21060505 	tstcs	r6, r5, lsl #10
    2024:	01061805 	tsteq	r6, r5, lsl #16
    2028:	05201605 	streq	r1, [r0, #-1541]!	; 0xfffff9fb
    202c:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
    2030:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    2034:	05052016 	streq	r2, [r5, #-22]	; 0xffffffea
    2038:	18052106 	stmdane	r5, {r1, r2, r8, sp}
    203c:	16050106 	strne	r0, [r5], -r6, lsl #2
    2040:	06050520 	streq	r0, [r5], -r0, lsr #10
    2044:	06180521 	ldreq	r0, [r8], -r1, lsr #10
    2048:	20160501 	andscs	r0, r6, r1, lsl #10
    204c:	21060505 	tstcs	r6, r5, lsl #10
    2050:	01061805 	tsteq	r6, r5, lsl #16
    2054:	05201605 	streq	r1, [r0, #-1541]!	; 0xfffff9fb
    2058:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
    205c:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    2060:	05052016 	streq	r2, [r5, #-22]	; 0xffffffea
    2064:	18052106 	stmdane	r5, {r1, r2, r8, sp}
    2068:	16050106 	strne	r0, [r5], -r6, lsl #2
    206c:	06050520 	streq	r0, [r5], -r0, lsr #10
    2070:	062e0622 	strteq	r0, [lr], -r2, lsr #12
    2074:	4b3d3d2f 	blmi	f51538 <__RAM_SIZE+0xe51538>
    2078:	4b4b4b4b 	blmi	12d4dac <__RAM_SIZE+0x11d4dac>
    207c:	4b4b4b4b 	blmi	12d4db0 <__RAM_SIZE+0x11d4db0>
    2080:	4b4b4b4b 	blmi	12d4db4 <__RAM_SIZE+0x11d4db4>
    2084:	3d4b4b4b 	vstrcc	d20, [fp, #-300]	; 0xfffffed4
    2088:	0905143e 	stmdbeq	r5, {r1, r2, r3, r4, r5, sl, ip}
    208c:	08050106 	stmdaeq	r5, {r1, r2, r8}
    2090:	0609053c 			; <UNDEFINED> instruction: 0x0609053c
    2094:	06110521 	ldreq	r0, [r1], -r1, lsr #10
    2098:	06050501 	streq	r0, [r5], -r1, lsl #10
    209c:	06200697 			; <UNDEFINED> instruction: 0x06200697
    20a0:	1005592f 	andne	r5, r5, pc, lsr #18
    20a4:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    20a8:	06090520 	streq	r0, [r9], -r0, lsr #10
    20ac:	0611051b 			; <UNDEFINED> instruction: 0x0611051b
    20b0:	09058201 	stmdbeq	r5, {r0, r9, pc}
    20b4:	03040200 	movweq	r0, #16896	; 0x4200
    20b8:	24052606 	strcs	r2, [r5], #-1542	; 0xfffff9fa
    20bc:	03040200 	movweq	r0, #16896	; 0x4200
    20c0:	00290565 	eoreq	r0, r9, r5, ror #10
    20c4:	06030402 	streq	r0, [r3], -r2, lsl #8
    20c8:	00150501 	andseq	r0, r5, r1, lsl #10
    20cc:	06010402 	streq	r0, [r1], -r2, lsl #8
    20d0:	00050520 	andeq	r0, r5, r0, lsr #10
    20d4:	06010402 	streq	r0, [r1], -r2, lsl #8
    20d8:	00310601 	eorseq	r0, r1, r1, lsl #12
    20dc:	3d010402 	cfstrscc	mvf0, [r1, #-8]
    20e0:	02000e05 	andeq	r0, r0, #5, 28	; 0x50
    20e4:	05010104 	streq	r0, [r1, #-260]	; 0xfffffefc
    20e8:	0402000b 	streq	r0, [r2], #-11
    20ec:	36020101 	strcc	r0, [r2], -r1, lsl #2
    20f0:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    20f4:	0205002e 	andeq	r0, r5, #46	; 0x2e
    20f8:	10001e8c 	andne	r1, r0, ip, lsl #29
    20fc:	01029a03 	tsteq	r2, r3, lsl #20
    2100:	04130505 	ldreq	r0, [r3], #-1285	; 0xfffffafb
    2104:	031f0502 	tsteq	pc, #8388608	; 0x800000
    2108:	050106c7 	streq	r0, [r1, #-1735]	; 0xfffff939
    210c:	2f141403 	svccs	0x00141403
    2110:	01040106 	tsteq	r4, r6, lsl #2
    2114:	b5030105 	strlt	r0, [r3, #-261]	; 0xfffffefb
    2118:	01020179 	tsteq	r2, r9, ror r1
    211c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    2120:	0205002e 	andeq	r0, r5, #46	; 0x2e
    2124:	10001e94 	mulne	r0, r4, lr
    2128:	01029e03 	tsteq	r2, r3, lsl #28
    212c:	05130505 	ldreq	r0, [r3, #-1285]	; 0xfffffafb
    2130:	02130601 	andseq	r0, r3, #1048576	; 0x100000
    2134:	01010004 	tsteq	r1, r4
    2138:	05002905 	streq	r2, [r0, #-2309]	; 0xfffff6fb
    213c:	00000002 	andeq	r0, r0, r2
    2140:	02a20300 	adceq	r0, r2, #0, 6
    2144:	13050501 	movwne	r0, #21761	; 0x5501
    2148:	13060105 	movwne	r0, #24837	; 0x6105
    214c:	01000402 	tsteq	r0, r2, lsl #8
    2150:	00290501 	eoreq	r0, r9, r1, lsl #10
    2154:	00000205 	andeq	r0, r0, r5, lsl #4
    2158:	a6030000 	strge	r0, [r3], -r0
    215c:	05050102 	streq	r0, [r5, #-258]	; 0xfffffefe
    2160:	06010513 			; <UNDEFINED> instruction: 0x06010513
    2164:	00040213 	andeq	r0, r4, r3, lsl r2
    2168:	38050101 	stmdacc	r5, {r0, r8}
    216c:	00020500 	andeq	r0, r2, r0, lsl #10
    2170:	03000000 	movweq	r0, #0
    2174:	050102aa 	streq	r0, [r1, #-682]	; 0xfffffd56
    2178:	05131305 	ldreq	r1, [r3, #-773]	; 0xfffffcfb
    217c:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
    2180:	05210609 	streq	r0, [r1, #-1545]!	; 0xfffff9f7
    2184:	0501061d 	streq	r0, [r1, #-1565]	; 0xfffff9e3
    2188:	052f0609 	streq	r0, [pc, #-1545]!	; 1b87 <__HEAP_SIZE+0xb87>
    218c:	20010610 	andcs	r0, r1, r0, lsl r6
    2190:	051d0905 	ldreq	r0, [sp, #-2309]	; 0xfffff6fb
    2194:	05250605 	streq	r0, [r5, #-1541]!	; 0xfffff9fb
    2198:	02130601 	andseq	r0, r3, #1048576	; 0x100000
    219c:	01010004 	tsteq	r1, r4
    21a0:	000002cf 	andeq	r0, r0, pc, asr #5
    21a4:	01c50003 	biceq	r0, r5, r3
    21a8:	01020000 	mrseq	r0, (UNDEF: 2)
    21ac:	000d0efb 	strdeq	r0, [sp], -fp
    21b0:	01010101 	tsteq	r1, r1, lsl #2
    21b4:	01000000 	mrseq	r0, (UNDEF: 0)
    21b8:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
    21bc:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    21c0:	2f2e2e2f 	svccs	0x002e2e2f
    21c4:	7562696c 	strbvc	r6, [r2, #-2412]!	; 0xfffff694
    21c8:	736c6974 	cmnvc	ip, #116, 18	; 0x1d0000
    21cc:	7561662f 	strbvc	r6, [r1, #-1583]!	; 0xfffff9d1
    21d0:	642d746c 	strtvs	r7, [sp], #-1132	; 0xfffffb94
    21d4:	2f706d75 	svccs	0x00706d75
    21d8:	2f757063 	svccs	0x00757063
    21dc:	74726f63 	ldrbtvc	r6, [r2], #-3939	; 0xfffff09d
    21e0:	6d2d7865 	stcvs	8, cr7, [sp, #-404]!	; 0xfffffe6c
    21e4:	63003333 	movwvs	r3, #819	; 0x333
    21e8:	73755c3a 	cmnvc	r5, #14848	; 0x3a00
    21ec:	5c737265 	lfmpl	f7, 2, [r3], #-404	; 0xfffffe6c
    21f0:	6f646978 	svcvs	0x00646978
    21f4:	72705c6e 	rsbsvc	r5, r0, #28160	; 0x6e00
    21f8:	6172676f 	cmnvs	r2, pc, ror #14
    21fc:	72615c6d 	rsbvc	r5, r1, #27904	; 0x6d00
    2200:	63675f6d 	cmnvs	r7, #436	; 0x1b4
    2204:	63675c63 	cmnvs	r7, #25344	; 0x6300
    2208:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
    220c:	6f6e2d6d 	svcvs	0x006e2d6d
    2210:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    2214:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
    2218:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
    221c:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
    2220:	30312e31 	eorscc	r2, r1, r1, lsr lr
    2224:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    2228:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    222c:	61652d65 	cmnvs	r5, r5, ror #26
    2230:	695c6962 	ldmdbvs	ip, {r1, r5, r6, r8, fp, sp, lr}^
    2234:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    2238:	6d5c6564 	cfldr64vs	mvdx6, [ip, #-400]	; 0xfffffe70
    223c:	69686361 	stmdbvs	r8!, {r0, r5, r6, r8, r9, sp, lr}^
    2240:	6300656e 	movwvs	r6, #1390	; 0x56e
    2244:	73755c3a 	cmnvc	r5, #14848	; 0x3a00
    2248:	5c737265 	lfmpl	f7, 2, [r3], #-404	; 0xfffffe6c
    224c:	6f646978 	svcvs	0x00646978
    2250:	72705c6e 	rsbsvc	r5, r0, #28160	; 0x6e00
    2254:	6172676f 	cmnvs	r2, pc, ror #14
    2258:	72615c6d 	rsbvc	r5, r1, #27904	; 0x6d00
    225c:	63675f6d 	cmnvs	r7, #436	; 0x1b4
    2260:	63675c63 	cmnvs	r7, #25344	; 0x6300
    2264:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
    2268:	6f6e2d6d 	svcvs	0x006e2d6d
    226c:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    2270:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
    2274:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
    2278:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
    227c:	30312e31 	eorscc	r2, r1, r1, lsr lr
    2280:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    2284:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    2288:	61652d65 	cmnvs	r5, r5, ror #26
    228c:	695c6962 	ldmdbvs	ip, {r1, r5, r6, r8, fp, sp, lr}^
    2290:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    2294:	735c6564 	cmpvc	ip, #100, 10	; 0x19000000
    2298:	2e007379 	mcrcs	3, 0, r7, cr0, cr9, {3}
    229c:	72442f2e 	subvc	r2, r4, #46, 30	; 0xb8
    22a0:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    22a4:	4d432f73 	stclmi	15, cr2, [r3, #-460]	; 0xfffffe34
    22a8:	5f534953 	svcpl	0x00534953
    22ac:	4d432f35 	stclmi	15, cr2, [r3, #-212]	; 0xffffff2c
    22b0:	2f534953 	svccs	0x00534953
    22b4:	65726f43 	ldrbvs	r6, [r2, #-3907]!	; 0xfffff0bd
    22b8:	636e492f 	cmnvs	lr, #770048	; 0xbc000
    22bc:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    22c0:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
    22c4:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
    22c8:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
    22cc:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
    22d0:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
    22d4:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
    22d8:	5f6d7261 	svcpl	0x006d7261
    22dc:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
    22e0:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
    22e4:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    22e8:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    22ec:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    22f0:	30312d69 	eorscc	r2, r1, r9, ror #26
    22f4:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
    22f8:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
    22fc:	615c3031 	cmpvs	ip, r1, lsr r0
    2300:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    2304:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    2308:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    230c:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
    2310:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    2314:	61660000 	cmnvs	r6, r0
    2318:	2d746c75 	ldclcs	12, cr6, [r4, #-468]!	; 0xfffffe2c
    231c:	2e6c6168 	powcsez	f6, f4, #0.0
    2320:	00010063 	andeq	r0, r1, r3, rrx
    2324:	65645f00 	strbvs	r5, [r4, #-3840]!	; 0xfffff100
    2328:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
    232c:	79745f74 	ldmdbvc	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    2330:	2e736570 	mrccs	5, 3, r6, cr3, cr0, {3}
    2334:	00020068 	andeq	r0, r2, r8, rrx
    2338:	74735f00 	ldrbtvc	r5, [r3], #-3840	; 0xfffff100
    233c:	746e6964 	strbtvc	r6, [lr], #-2404	; 0xfffff69c
    2340:	0300682e 	movweq	r6, #2094	; 0x82e
    2344:	6f630000 	svcvs	0x00630000
    2348:	635f6572 	cmpvs	pc, #478150656	; 0x1c800000
    234c:	2e33336d 	cdpcs	3, 3, cr3, cr3, cr13, {3}
    2350:	00040068 	andeq	r0, r4, r8, rrx
    2354:	64747300 	ldrbtvs	r7, [r4], #-768	; 0xfffffd00
    2358:	682e6f69 	stmdavs	lr!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}
    235c:	00000500 	andeq	r0, r0, r0, lsl #10
    2360:	6975623c 	ldmdbvs	r5!, {r2, r3, r4, r5, r9, sp, lr}^
    2364:	692d746c 	pushvs	{r2, r3, r5, r6, sl, ip, sp, lr}
    2368:	00003e6e 	andeq	r3, r0, lr, ror #28
    236c:	05000000 	streq	r0, [r0, #-0]
    2370:	02050035 	andeq	r0, r5, #53	; 0x35
    2374:	10001e9c 	mulne	r0, ip, lr
    2378:	06010e03 	streq	r0, [r1], -r3, lsl #28
    237c:	06050501 	streq	r0, [r5], -r1, lsl #10
    2380:	0620062f 	strteq	r0, [r0], -pc, lsr #12
    2384:	08053d2f 	stmdaeq	r5, {r0, r1, r2, r3, r5, r8, sl, fp, ip, sp}
    2388:	09050106 	stmdbeq	r5, {r1, r2, r8}
    238c:	05053d06 	streq	r3, [r5, #-3334]	; 0xfffff2fa
    2390:	08053d40 	stmdaeq	r5, {r6, r8, sl, fp, ip, sp}
    2394:	09050106 	stmdbeq	r5, {r1, r2, r8}
    2398:	05053d06 	streq	r3, [r5, #-3334]	; 0xfffff2fa
    239c:	08053d40 	stmdaeq	r5, {r6, r8, sl, fp, ip, sp}
    23a0:	09050106 	stmdbeq	r5, {r1, r2, r8}
    23a4:	05053d06 	streq	r3, [r5, #-3334]	; 0xfffff2fa
    23a8:	08053d40 	stmdaeq	r5, {r6, r8, sl, fp, ip, sp}
    23ac:	09050106 	stmdbeq	r5, {r1, r2, r8}
    23b0:	05053d06 	streq	r3, [r5, #-3334]	; 0xfffff2fa
    23b4:	08053d40 	stmdaeq	r5, {r6, r8, sl, fp, ip, sp}
    23b8:	09050106 	stmdbeq	r5, {r1, r2, r8}
    23bc:	05053d06 	streq	r3, [r5, #-3334]	; 0xfffff2fa
    23c0:	08053d40 	stmdaeq	r5, {r6, r8, sl, fp, ip, sp}
    23c4:	09050106 	stmdbeq	r5, {r1, r2, r8}
    23c8:	05053d06 	streq	r3, [r5, #-3334]	; 0xfffff2fa
    23cc:	06010540 	streq	r0, [r1], -r0, asr #10
    23d0:	0609053d 			; <UNDEFINED> instruction: 0x0609053d
    23d4:	50205f03 	eorpl	r5, r0, r3, lsl #30
    23d8:	50505050 	subspl	r5, r0, r0, asr r0
    23dc:	01002b02 	tsteq	r0, r2, lsl #22
    23e0:	00340501 	eorseq	r0, r4, r1, lsl #10
    23e4:	1f980205 	svcne	0x00980205
    23e8:	37031000 	strcc	r1, [r3, -r0]
    23ec:	13050501 	movwne	r0, #21761	; 0x5501
    23f0:	01060805 	tsteq	r6, r5, lsl #16
    23f4:	203d1005 	eorscs	r1, sp, r5
    23f8:	22010522 	andcs	r0, r1, #142606336	; 0x8800000
    23fc:	01000102 	tsteq	r0, r2, lsl #2
    2400:	00200501 	eoreq	r0, r0, r1, lsl #10
    2404:	00000205 	andeq	r0, r0, r5, lsl #4
    2408:	3f030000 	svccc	0x00030000
    240c:	21050501 	tstcs	r5, r1, lsl #10
    2410:	060e0514 			; <UNDEFINED> instruction: 0x060e0514
    2414:	06050501 	streq	r0, [r5], -r1, lsl #10
    2418:	01051359 	tsteq	r5, r9, asr r3
    241c:	06024b06 	streq	r4, [r2], -r6, lsl #22
    2420:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    2424:	0205001f 	andeq	r0, r5, #31
    2428:	10001fa8 	andne	r1, r0, r8, lsr #31
    242c:	0100c703 	tsteq	r0, r3, lsl #14
    2430:	132f0505 			; <UNDEFINED> instruction: 0x132f0505
    2434:	01061205 	tsteq	r6, r5, lsl #4
    2438:	2f060505 	svccs	0x00060505
    243c:	01060e05 	tsteq	r6, r5, lsl #28
    2440:	59060505 	stmdbpl	r6, {r0, r2, r8, sl}
    2444:	060d0513 			; <UNDEFINED> instruction: 0x060d0513
    2448:	200b0501 	andcs	r0, fp, r1, lsl #10
    244c:	21060505 	tstcs	r6, r5, lsl #10
    2450:	0d051367 	stceq	3, cr1, [r5, #-412]	; 0xfffffe64
    2454:	0b050106 	bleq	142874 <__RAM_SIZE+0x42874>
    2458:	06050520 	streq	r0, [r5], -r0, lsr #10
    245c:	05135921 	ldreq	r5, [r3, #-2337]	; 0xfffff6df
    2460:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
    2464:	05052e0b 	streq	r2, [r5, #-3595]	; 0xfffff1f5
    2468:	01052106 	tsteq	r5, r6, lsl #2
    246c:	06025906 	streq	r5, [r2], -r6, lsl #18
    2470:	99010100 	stmdbls	r1, {r8}
    2474:	03000003 	movweq	r0, #3
    2478:	00018c00 	andeq	r8, r1, r0, lsl #24
    247c:	fb010200 	blx	42c86 <__HEAP_SIZE+0x41c86>
    2480:	01000d0e 	tsteq	r0, lr, lsl #26
    2484:	00010101 	andeq	r0, r1, r1, lsl #2
    2488:	00010000 	andeq	r0, r1, r0
    248c:	2e2e0100 	sufcse	f0, f6, f0
    2490:	2f2e2e2f 	svccs	0x002e2e2f
    2494:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 23e4 <__HEAP_SIZE+0x13e4>
    2498:	74726269 	ldrbtvc	r6, [r2], #-617	; 0xfffffd97
    249c:	462f736f 	strtmi	r7, [pc], -pc, ror #6
    24a0:	52656572 	rsbpl	r6, r5, #478150656	; 0x1c800000
    24a4:	00534f54 	subseq	r4, r3, r4, asr pc
    24a8:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
    24ac:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    24b0:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
    24b4:	705c6e6f 	subsvc	r6, ip, pc, ror #28
    24b8:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
    24bc:	615c6d61 	cmpvs	ip, r1, ror #26
    24c0:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
    24c4:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
    24c8:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
    24cc:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    24d0:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    24d4:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    24d8:	2e30312d 	rsfcssp	f3, f0, #5.0
    24dc:	30322d33 	eorscc	r2, r2, r3, lsr sp
    24e0:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
    24e4:	72615c30 	rsbvc	r5, r1, #48, 24	; 0x3000
    24e8:	6f6e2d6d 	svcvs	0x006e2d6d
    24ec:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    24f0:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
    24f4:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    24f8:	5c656475 	cfstrdpl	mvd6, [r5], #-468	; 0xfffffe2c
    24fc:	6863616d 	stmdavs	r3!, {r0, r2, r3, r5, r6, r8, sp, lr}^
    2500:	00656e69 	rsbeq	r6, r5, r9, ror #28
    2504:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
    2508:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    250c:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
    2510:	705c6e6f 	subsvc	r6, ip, pc, ror #28
    2514:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
    2518:	615c6d61 	cmpvs	ip, r1, ror #26
    251c:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
    2520:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
    2524:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
    2528:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    252c:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    2530:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    2534:	2e30312d 	rsfcssp	f3, f0, #5.0
    2538:	30322d33 	eorscc	r2, r2, r3, lsr sp
    253c:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
    2540:	72615c30 	rsbvc	r5, r1, #48, 24	; 0x3000
    2544:	6f6e2d6d 	svcvs	0x006e2d6d
    2548:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    254c:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
    2550:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    2554:	5c656475 	cfstrdpl	mvd6, [r5], #-468	; 0xfffffe2c
    2558:	00737973 	rsbseq	r7, r3, r3, ror r9
    255c:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    2560:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    2564:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    2568:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    256c:	6572462f 	ldrbvs	r4, [r2, #-1583]!	; 0xfffff9d1
    2570:	4f545265 	svcmi	0x00545265
    2574:	6f702f53 	svcvs	0x00702f53
    2578:	62617472 	rsbvs	r7, r1, #1912602624	; 0x72000000
    257c:	472f656c 	strmi	r6, [pc, -ip, ror #10]!
    2580:	412f4343 			; <UNDEFINED> instruction: 0x412f4343
    2584:	435f4d52 	cmpmi	pc, #5248	; 0x1480
    2588:	5f33334d 	svcpl	0x0033334d
    258c:	2f5a544e 	svccs	0x005a544e
    2590:	5f6e6f6e 	svcpl	0x006e6f6e
    2594:	75636573 	strbvc	r6, [r3, #-1395]!	; 0xfffffa8d
    2598:	2e006572 	cfrshl64cs	mvdx0, mvdx2, r6
    259c:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    25a0:	2f2e2e2f 	svccs	0x002e2e2f
    25a4:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
    25a8:	2f736f74 	svccs	0x00736f74
    25ac:	65657246 	strbvs	r7, [r5, #-582]!	; 0xfffffdba
    25b0:	534f5452 	movtpl	r5, #62546	; 0xf452
    25b4:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    25b8:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    25bc:	696c0000 	stmdbvs	ip!, {}^	; <UNPREDICTABLE>
    25c0:	632e7473 			; <UNDEFINED> instruction: 0x632e7473
    25c4:	00000100 	andeq	r0, r0, r0, lsl #2
    25c8:	6665645f 			; <UNDEFINED> instruction: 0x6665645f
    25cc:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
    25d0:	7079745f 	rsbsvc	r7, r9, pc, asr r4
    25d4:	682e7365 	stmdavs	lr!, {r0, r2, r5, r6, r8, r9, ip, sp, lr}
    25d8:	00000200 	andeq	r0, r0, r0, lsl #4
    25dc:	6474735f 	ldrbtvs	r7, [r4], #-863	; 0xfffffca1
    25e0:	2e746e69 	cdpcs	14, 7, cr6, cr4, cr9, {3}
    25e4:	00030068 	andeq	r0, r3, r8, rrx
    25e8:	726f7000 	rsbvc	r7, pc, #0
    25ec:	63616d74 	cmnvs	r1, #116, 26	; 0x1d00
    25f0:	6f636f72 	svcvs	0x00636f72
    25f4:	6e6f6d6d 	cdpvs	13, 6, cr6, cr15, cr13, {3}
    25f8:	0400682e 	streq	r6, [r0], #-2094	; 0xfffff7d2
    25fc:	696c0000 	stmdbvs	ip!, {}^	; <UNPREDICTABLE>
    2600:	682e7473 	stmdavs	lr!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}
    2604:	00000500 	andeq	r0, r0, r0, lsl #10
    2608:	00010500 	andeq	r0, r1, r0, lsl #10
    260c:	1ff40205 	svcne	0x00f40205
    2610:	31031000 	mrscc	r1, (UNDEF: 3)
    2614:	13290501 			; <UNDEFINED> instruction: 0x13290501
    2618:	05170505 	ldreq	r0, [r7, #-1285]	; 0xfffffafb
    261c:	05010628 	streq	r0, [r1, #-1576]	; 0xfffff9d8
    2620:	4b052e15 	blmi	14de7c <__RAM_SIZE+0x4de7c>
    2624:	05052206 	streq	r2, [r5, #-518]	; 0xfffffdfa
    2628:	06210516 			; <UNDEFINED> instruction: 0x06210516
    262c:	06050501 	streq	r0, [r5], -r1, lsl #10
    2630:	061d0540 	ldreq	r0, [sp], -r0, asr #10
    2634:	06050501 	streq	r0, [r5], -r1, lsl #10
    2638:	06210521 	strteq	r0, [r1], -r1, lsr #10
    263c:	06090501 	streq	r0, [r9], -r1, lsl #10
    2640:	06220525 	strteq	r0, [r2], -r5, lsr #10
    2644:	06090501 	streq	r0, [r9], -r1, lsl #10
    2648:	0626052f 	strteq	r0, [r6], -pc, lsr #10
    264c:	06500501 	ldrbeq	r0, [r0], -r1, lsl #10
    2650:	16050521 	strne	r0, [r5], -r1, lsr #10
    2654:	01061d05 	tsteq	r6, r5, lsl #26
    2658:	24063305 	strcs	r3, [r6], #-773	; 0xfffffcfb
    265c:	14220513 	strtne	r0, [r2], #-1299	; 0xfffffaed
    2660:	13060105 	movwne	r0, #24837	; 0x6105
    2664:	01000102 	tsteq	r0, r2, lsl #2
    2668:	00010501 	andeq	r0, r1, r1, lsl #10
    266c:	200e0205 	andcs	r0, lr, r5, lsl #4
    2670:	d9031000 	stmdble	r3, {ip}
    2674:	2d050100 	stfcss	f0, [r5, #-0]
    2678:	15050513 	strne	r0, [r5, #-1299]	; 0xfffffaed
    267c:	01061905 	tsteq	r6, r5, lsl #18
    2680:	32063c05 	andcc	r3, r6, #1280	; 0x500
    2684:	05133d05 	ldreq	r3, [r3, #-3333]	; 0xfffff2fb
    2688:	01051426 	tsteq	r5, r6, lsr #8
    268c:	01021306 	tsteq	r2, r6, lsl #6
    2690:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    2694:	02050001 	andeq	r0, r5, #1
    2698:	00000000 	andeq	r0, r0, r0
    269c:	0100ea03 	tsteq	r0, r3, lsl #20
    26a0:	05130505 	ldreq	r0, [r3, #-1285]	; 0xfffffafb
    26a4:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    26a8:	05220637 	streq	r0, [r2, #-1591]!	; 0xfffff9c9
    26ac:	32051726 	andcc	r1, r5, #9961472	; 0x980000
    26b0:	17050513 	smladne	r5, r3, r5, r0
    26b4:	01061b05 	tsteq	r6, r5, lsl #22
    26b8:	21060505 	tstcs	r6, r5, lsl #10
    26bc:	01062805 	tsteq	r6, r5, lsl #16
    26c0:	05201f05 	streq	r1, [r0, #-3845]!	; 0xfffff0fb
    26c4:	0523061c 	streq	r0, [r3, #-1564]!	; 0xfffff9e4
    26c8:	21051405 	tstcs	r5, r5, lsl #8
    26cc:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    26d0:	19052106 	stmdbne	r5, {r1, r2, r8, sp}
    26d4:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    26d8:	20052306 	andcs	r2, r5, r6, lsl #6
    26dc:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    26e0:	3b052206 	blcc	14af00 <__RAM_SIZE+0x4af00>
    26e4:	23050106 	movwcs	r0, #20742	; 0x5106
    26e8:	20210520 	eorcs	r0, r1, r0, lsr #10
    26ec:	01052206 	tsteq	r5, r6, lsl #4
    26f0:	01021306 	tsteq	r2, r6, lsl #6
    26f4:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    26f8:	02050001 	andeq	r0, r5, #1
    26fc:	10002014 	andne	r2, r0, r4, lsl r0
    2700:	01018c03 	tsteq	r1, r3, lsl #24
    2704:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    2708:	05132106 	ldreq	r2, [r3, #-262]	; 0xfffffefa
    270c:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    2710:	05220634 	streq	r0, [r2, #-1588]!	; 0xfffff9cc
    2714:	32051726 	andcc	r1, r5, #9961472	; 0x980000
    2718:	03050513 	movweq	r0, #21779	; 0x5513
    271c:	0705010a 	streq	r0, [r5, -sl, lsl #2]
    2720:	09050106 	stmdbeq	r5, {r1, r2, r8}
    2724:	3c1f0306 	ldccc	3, cr0, [pc], {6}
    2728:	01061905 	tsteq	r6, r5, lsl #18
    272c:	02004305 	andeq	r4, r0, #335544320	; 0x14000000
    2730:	2e060104 	adfcss	f0, f6, f4
    2734:	02004d05 	andeq	r4, r0, #320	; 0x140
    2738:	20060104 	andcs	r0, r6, r4, lsl #2
    273c:	02005505 	andeq	r5, r0, #20971520	; 0x1400000
    2740:	05200104 	streq	r0, [r0, #-260]!	; 0xfffffefc
    2744:	04020009 	streq	r0, [r2], #-9
    2748:	05052001 	streq	r2, [r5, #-1]
    274c:	27053506 	strcs	r3, [r5, -r6, lsl #10]
    2750:	1b050106 	blne	142b70 <__RAM_SIZE+0x42b70>
    2754:	06050520 	streq	r0, [r5], -r0, lsr #10
    2758:	06270521 	strteq	r0, [r7], -r1, lsr #10
    275c:	06050501 	streq	r0, [r5], -r1, lsl #10
    2760:	061f0521 	ldreq	r0, [pc], -r1, lsr #10
    2764:	06050501 	streq	r0, [r5], -r1, lsl #10
    2768:	06180521 	ldreq	r0, [r8], -r1, lsr #10
    276c:	06050501 	streq	r0, [r5], -r1, lsl #10
    2770:	06200524 	strteq	r0, [r0], -r4, lsr #10
    2774:	06050501 	streq	r0, [r5], -r1, lsl #10
    2778:	063b0522 	ldrteq	r0, [fp], -r2, lsr #10
    277c:	20230501 	eorcs	r0, r3, r1, lsl #10
    2780:	05202105 	streq	r2, [r0, #-261]!	; 0xfffffefb
    2784:	0522061e 	streq	r0, [r2, #-1566]!	; 0xfffff9e2
    2788:	20130601 	andscs	r0, r3, r1, lsl #12
    278c:	03060905 	movweq	r0, #26885	; 0x6905
    2790:	14052050 	strne	r2, [r5], #-80	; 0xffffffb0
    2794:	02200106 	eoreq	r0, r0, #-2147483647	; 0x80000001
    2798:	01010001 	tsteq	r1, r1
    279c:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    27a0:	00204602 	eoreq	r4, r0, r2, lsl #12
    27a4:	01d70310 	bicseq	r0, r7, r0, lsl r3
    27a8:	15050501 	strne	r0, [r5, #-1281]	; 0xfffffaff
    27ac:	01061405 	tsteq	r6, r5, lsl #8
    27b0:	22062e05 	andcs	r2, r6, #5, 28	; 0x50
    27b4:	05140505 	ldreq	r0, [r4, #-1285]	; 0xfffffafb
    27b8:	05010613 	streq	r0, [r1, #-1555]	; 0xfffff9ed
    27bc:	28052038 	stmdacs	r5, {r3, r4, r5, sp}
    27c0:	06050520 	streq	r0, [r5], -r0, lsr #10
    27c4:	06380521 	ldrteq	r0, [r8], -r1, lsr #10
    27c8:	20280501 	eorcs	r0, r8, r1, lsl #10
    27cc:	23061c05 	movwcs	r1, #27653	; 0x6c05
    27d0:	05150505 	ldreq	r0, [r5, #-1285]	; 0xfffffafb
    27d4:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    27d8:	21052007 	tstcs	r5, r7
    27dc:	05053406 	streq	r3, [r5, #-1030]	; 0xfffffbfa
    27e0:	06210515 			; <UNDEFINED> instruction: 0x06210515
    27e4:	06050501 	streq	r0, [r5], -r1, lsl #10
    27e8:	063b052f 	ldrteq	r0, [fp], -pc, lsr #10
    27ec:	20230501 	eorcs	r0, r3, r1, lsl #10
    27f0:	05202105 	streq	r2, [r0, #-261]!	; 0xfffffefb
    27f4:	05220638 	streq	r0, [r2, #-1592]!	; 0xfffff9c8
    27f8:	01051405 	tsteq	r5, r5, lsl #8
    27fc:	09051306 	stmdbeq	r5, {r1, r2, r8, r9, ip}
    2800:	20730306 	rsbscs	r0, r3, r6, lsl #6
    2804:	01062905 	tsteq	r6, r5, lsl #18
    2808:	02201905 	eoreq	r1, r0, #81920	; 0x14000
    280c:	01010002 	tsteq	r1, r2
    2810:	00001723 	andeq	r1, r0, r3, lsr #14
    2814:	023b0003 	eorseq	r0, fp, #3
    2818:	01020000 	mrseq	r0, (UNDEF: 2)
    281c:	000d0efb 	strdeq	r0, [sp], -fp
    2820:	01010101 	tsteq	r1, r1, lsl #2
    2824:	01000000 	mrseq	r0, (UNDEF: 0)
    2828:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
    282c:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    2830:	2f2e2e2f 	svccs	0x002e2e2f
    2834:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
    2838:	2f736f74 	svccs	0x00736f74
    283c:	65657246 	strbvs	r7, [r5, #-582]!	; 0xfffffdba
    2840:	534f5452 	movtpl	r5, #62546	; 0xf452
    2844:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
    2848:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
    284c:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
    2850:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
    2854:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
    2858:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
    285c:	5f6d7261 	svcpl	0x006d7261
    2860:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
    2864:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
    2868:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    286c:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    2870:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    2874:	30312d69 	eorscc	r2, r1, r9, ror #26
    2878:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
    287c:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
    2880:	6c5c3031 	mrrcvs	0, 3, r3, ip, cr1
    2884:	675c6269 	ldrbvs	r6, [ip, -r9, ror #4]
    2888:	615c6363 	cmpvs	ip, r3, ror #6
    288c:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    2890:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    2894:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    2898:	2e30315c 	mrccs	1, 1, r3, cr0, cr12, {2}
    289c:	5c312e33 	ldcpl	14, cr2, [r1], #-204	; 0xffffff34
    28a0:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    28a4:	00656475 	rsbeq	r6, r5, r5, ror r4
    28a8:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
    28ac:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    28b0:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
    28b4:	705c6e6f 	subsvc	r6, ip, pc, ror #28
    28b8:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
    28bc:	615c6d61 	cmpvs	ip, r1, ror #26
    28c0:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
    28c4:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
    28c8:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
    28cc:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    28d0:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    28d4:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    28d8:	2e30312d 	rsfcssp	f3, f0, #5.0
    28dc:	30322d33 	eorscc	r2, r2, r3, lsr sp
    28e0:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
    28e4:	72615c30 	rsbvc	r5, r1, #48, 24	; 0x3000
    28e8:	6f6e2d6d 	svcvs	0x006e2d6d
    28ec:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    28f0:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
    28f4:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    28f8:	5c656475 	cfstrdpl	mvd6, [r5], #-468	; 0xfffffe2c
    28fc:	6863616d 	stmdavs	r3!, {r0, r2, r3, r5, r6, r8, sp, lr}^
    2900:	00656e69 	rsbeq	r6, r5, r9, ror #28
    2904:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
    2908:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    290c:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
    2910:	705c6e6f 	subsvc	r6, ip, pc, ror #28
    2914:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
    2918:	615c6d61 	cmpvs	ip, r1, ror #26
    291c:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
    2920:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
    2924:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
    2928:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    292c:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    2930:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    2934:	2e30312d 	rsfcssp	f3, f0, #5.0
    2938:	30322d33 	eorscc	r2, r2, r3, lsr sp
    293c:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
    2940:	72615c30 	rsbvc	r5, r1, #48, 24	; 0x3000
    2944:	6f6e2d6d 	svcvs	0x006e2d6d
    2948:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    294c:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
    2950:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    2954:	5c656475 	cfstrdpl	mvd6, [r5], #-468	; 0xfffffe2c
    2958:	00737973 	rsbseq	r7, r3, r3, ror r9
    295c:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    2960:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    2964:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    2968:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    296c:	6572462f 	ldrbvs	r4, [r2, #-1583]!	; 0xfffff9d1
    2970:	4f545265 	svcmi	0x00545265
    2974:	6f702f53 	svcvs	0x00702f53
    2978:	62617472 	rsbvs	r7, r1, #1912602624	; 0x72000000
    297c:	472f656c 	strmi	r6, [pc, -ip, ror #10]!
    2980:	412f4343 			; <UNDEFINED> instruction: 0x412f4343
    2984:	435f4d52 	cmpmi	pc, #5248	; 0x1480
    2988:	5f33334d 	svcpl	0x0033334d
    298c:	2f5a544e 	svccs	0x005a544e
    2990:	5f6e6f6e 	svcpl	0x006e6f6e
    2994:	75636573 	strbvc	r6, [r3, #-1395]!	; 0xfffffa8d
    2998:	2e006572 	cfrshl64cs	mvdx0, mvdx2, r6
    299c:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    29a0:	2f2e2e2f 	svccs	0x002e2e2f
    29a4:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
    29a8:	2f736f74 	svccs	0x00736f74
    29ac:	65657246 	strbvs	r7, [r5, #-582]!	; 0xfffffdba
    29b0:	534f5452 	movtpl	r5, #62546	; 0xf452
    29b4:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    29b8:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    29bc:	75710000 	ldrbvc	r0, [r1, #-0]!
    29c0:	2e657565 	cdpcs	5, 6, cr7, cr5, cr5, {3}
    29c4:	00010063 	andeq	r0, r1, r3, rrx
    29c8:	64747300 	ldrbtvs	r7, [r4], #-768	; 0xfffffd00
    29cc:	2e666564 	cdpcs	5, 6, cr6, cr6, cr4, {3}
    29d0:	00020068 	andeq	r0, r2, r8, rrx
    29d4:	65645f00 	strbvs	r5, [r4, #-3840]!	; 0xfffff100
    29d8:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
    29dc:	79745f74 	ldmdbvc	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    29e0:	2e736570 	mrccs	5, 3, r6, cr3, cr0, {3}
    29e4:	00030068 	andeq	r0, r3, r8, rrx
    29e8:	74735f00 	ldrbtvc	r5, [r3], #-3840	; 0xfffff100
    29ec:	746e6964 	strbtvc	r6, [lr], #-2404	; 0xfffff69c
    29f0:	0400682e 	streq	r6, [r0], #-2094	; 0xfffff7d2
    29f4:	6f700000 	svcvs	0x00700000
    29f8:	616d7472 	smcvs	55106	; 0xd742
    29fc:	636f7263 	cmnvs	pc, #805306374	; 0x30000006
    2a00:	6f6d6d6f 	svcvs	0x006d6d6f
    2a04:	00682e6e 	rsbeq	r2, r8, lr, ror #28
    2a08:	46000005 	strmi	r0, [r0], -r5
    2a0c:	52656572 	rsbpl	r6, r5, #478150656	; 0x1c800000
    2a10:	2e534f54 	mrccs	15, 2, r4, cr3, cr4, {2}
    2a14:	00060068 	andeq	r0, r6, r8, rrx
    2a18:	73696c00 	cmnvc	r9, #0, 24
    2a1c:	00682e74 	rsbeq	r2, r8, r4, ror lr
    2a20:	74000006 	strvc	r0, [r0], #-6
    2a24:	2e6b7361 	cdpcs	3, 6, cr7, cr11, cr1, {3}
    2a28:	00060068 	andeq	r0, r6, r8, rrx
    2a2c:	65757100 	ldrbvs	r7, [r5, #-256]!	; 0xffffff00
    2a30:	682e6575 	stmdavs	lr!, {r0, r2, r4, r5, r6, r8, sl, sp, lr}
    2a34:	00000600 	andeq	r0, r0, r0, lsl #12
    2a38:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
    2a3c:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
    2a40:	0600682e 	streq	r6, [r0], -lr, lsr #16
    2a44:	623c0000 	eorsvs	r0, ip, #0
    2a48:	746c6975 	strbtvc	r6, [ip], #-2421	; 0xfffff68b
    2a4c:	3e6e692d 	vmulcc.f16	s13, s28, s27	; <UNPREDICTABLE>
    2a50:	00000000 	andeq	r0, r0, r0
    2a54:	00050500 	andeq	r0, r5, r0, lsl #10
    2a58:	00000205 	andeq	r0, r0, r5, lsl #4
    2a5c:	bd030000 	stclt	0, cr0, [r3, #-0]
    2a60:	01060112 	tsteq	r6, r2, lsl r1
    2a64:	21060905 	tstcs	r6, r5, lsl #18
    2a68:	060d051a 			; <UNDEFINED> instruction: 0x060d051a
    2a6c:	200b0501 	andcs	r0, fp, r1, lsl #10
    2a70:	22060d05 	andcs	r0, r6, #320	; 0x140
    2a74:	01067805 	tsteq	r6, r5, lsl #16
    2a78:	202d0520 	eorcs	r0, sp, r0, lsr #10
    2a7c:	35060905 	strcc	r0, [r6, #-2309]	; 0xfffff6fb
    2a80:	13060505 	movwne	r0, #25861	; 0x6505
    2a84:	01000102 	tsteq	r0, r2, lsl #2
    2a88:	00010501 	andeq	r0, r1, r1, lsl #10
    2a8c:	00000205 	andeq	r0, r0, r5, lsl #4
    2a90:	e3030000 	movw	r0, #12288	; 0x3000
    2a94:	01060114 	tsteq	r6, r4, lsl r1
    2a98:	2f060505 	svccs	0x00060505
    2a9c:	30090514 	andcc	r0, r9, r4, lsl r5
    2aa0:	01061405 	tsteq	r6, r5, lsl #8
    2aa4:	05203205 	streq	r3, [r0, #-517]!	; 0xfffffdfb
    2aa8:	1505200b 	strne	r2, [r5, #-11]
    2aac:	06050534 			; <UNDEFINED> instruction: 0x06050534
    2ab0:	01053023 	tsteq	r5, r3, lsr #32
    2ab4:	15051306 	strne	r1, [r5, #-774]	; 0xfffffcfa
    2ab8:	202e7603 	eorcs	r7, lr, r3, lsl #12
    2abc:	01000102 	tsteq	r0, r2, lsl #2
    2ac0:	00010501 	andeq	r0, r1, r1, lsl #10
    2ac4:	206a0205 	rsbcs	r0, sl, r5, lsl #4
    2ac8:	b6031000 	strlt	r1, [r3], -r0
    2acc:	01060114 	tsteq	r6, r4, lsl r1
    2ad0:	2f060505 	svccs	0x00060505
    2ad4:	30090514 	andcc	r0, r9, r4, lsl r5
    2ad8:	01061405 	tsteq	r6, r5, lsl #8
    2adc:	05200b05 	streq	r0, [r0, #-2821]!	; 0xfffff4fb
    2ae0:	05052215 	streq	r2, [r5, #-533]	; 0xfffffdeb
    2ae4:	05302706 	ldreq	r2, [r0, #-1798]!	; 0xfffff8fa
    2ae8:	05130601 	ldreq	r0, [r3, #-1537]	; 0xfffff9ff
    2aec:	2e7a0315 	mrccs	3, 3, r0, cr10, cr5, {0}
    2af0:	00010220 	andeq	r0, r1, r0, lsr #4
    2af4:	01050101 	tsteq	r5, r1, lsl #2
    2af8:	84020500 	strhi	r0, [r2], #-1280	; 0xfffffb00
    2afc:	03100020 	tsteq	r0, #32
    2b00:	060112d8 			; <UNDEFINED> instruction: 0x060112d8
    2b04:	06050501 	streq	r0, [r5], -r1, lsl #10
    2b08:	0516133d 	ldreq	r1, [r6, #-829]	; 0xfffffcc3
    2b0c:	05010617 	streq	r0, [r1, #-1559]	; 0xfffff9e9
    2b10:	05220605 	streq	r0, [r2, #-1541]!	; 0xfffff9fb
    2b14:	05010610 	streq	r0, [r1, #-1552]	; 0xfffff9f0
    2b18:	0d052007 	stceq	0, cr2, [r5, #-28]	; 0xffffffe4
    2b1c:	18052406 	stmdane	r5, {r1, r2, sl, sp}
    2b20:	0f050106 	svceq	0x00050106
    2b24:	03100520 	tsteq	r0, #32, 10	; 0x8000000
    2b28:	25052075 	strcs	r2, [r5, #-117]	; 0xffffff8b
    2b2c:	00c50306 	sbceq	r0, r5, r6, lsl #6
    2b30:	16050520 	strne	r0, [r5], -r0, lsr #10
    2b34:	01062205 	tsteq	r6, r5, lsl #4
    2b38:	05202005 	streq	r2, [r0, #-5]!
    2b3c:	05220605 	streq	r0, [r2, #-1541]!	; 0xfffff9fb
    2b40:	05130601 	ldreq	r0, [r3, #-1537]	; 0xfffff9ff
    2b44:	42030611 	andmi	r0, r3, #17825792	; 0x1100000
    2b48:	061b0520 	ldreq	r0, [fp], -r0, lsr #10
    2b4c:	11052001 	tstne	r5, r1
    2b50:	34052f06 	strcc	r2, [r5], #-3846	; 0xfffff0fa
    2b54:	0a050106 	beq	142f74 <__RAM_SIZE+0x42f74>
    2b58:	3c090306 	stccc	3, cr0, [r9], {6}
    2b5c:	01060c05 	tsteq	r6, r5, lsl #24
    2b60:	22060905 	andcs	r0, r6, #81920	; 0x14000
    2b64:	01061205 	tsteq	r6, r5, lsl #4
    2b68:	06090520 	streq	r0, [r9], -r0, lsr #10
    2b6c:	0626052f 	strteq	r0, [r6], -pc, lsr #10
    2b70:	201c0501 	andscs	r0, ip, r1, lsl #10
    2b74:	3e060905 	vmlacc.f16	s0, s12, s10	; <UNPREDICTABLE>
    2b78:	01063405 	tsteq	r6, r5, lsl #8
    2b7c:	05200b05 	streq	r0, [r0, #-2821]!	; 0xfffff4fb
    2b80:	0530060d 	ldreq	r0, [r0, #-1549]!	; 0xfffff9f3
    2b84:	05010629 	streq	r0, [r1, #-1577]	; 0xfffff9d7
    2b88:	10052020 	andne	r2, r5, r0, lsr #32
    2b8c:	05206103 	streq	r6, [r0, #-259]!	; 0xfffffefd
    2b90:	28030609 	stmdacs	r3, {r0, r3, r9, sl}
    2b94:	0612052e 	ldreq	r0, [r2], -lr, lsr #10
    2b98:	09052001 	stmdbeq	r5, {r0, sp}
    2b9c:	30052f06 	andcc	r2, r5, r6, lsl #30
    2ba0:	26050106 	strcs	r0, [r5], -r6, lsl #2
    2ba4:	06090520 	streq	r0, [r9], -r0, lsr #10
    2ba8:	0633054c 	ldrteq	r0, [r3], -ip, asr #10
    2bac:	200b0501 	andcs	r0, fp, r1, lsl #10
    2bb0:	30060d05 	andcc	r0, r6, r5, lsl #26
    2bb4:	01063f05 	tsteq	r6, r5, lsl #30
    2bb8:	05204705 	streq	r4, [r0, #-1797]!	; 0xfffff8fb
    2bbc:	2505202a 	strcs	r2, [r5, #-42]	; 0xffffffd6
    2bc0:	09052406 	stmdbeq	r5, {r1, r2, sl, sp}
    2bc4:	060b0515 			; <UNDEFINED> instruction: 0x060b0515
    2bc8:	03100501 	tsteq	r0, #4194304	; 0x400000
    2bcc:	0d052e4c 	stceq	14, cr2, [r5, #-304]	; 0xfffffed0
    2bd0:	2e360306 	cdpcs	3, 3, cr0, cr6, cr6, {0}
    2bd4:	01060f05 	tsteq	r6, r5, lsl #30
    2bd8:	26061105 	strcs	r1, [r6], -r5, lsl #2
    2bdc:	03061005 	movweq	r1, #24581	; 0x6005
    2be0:	2e2e2044 	cdpcs	0, 2, cr2, cr14, cr4, {2}
    2be4:	01000202 	tsteq	r0, r2, lsl #4
    2be8:	00010501 	andeq	r0, r1, r1, lsl #10
    2bec:	20fa0205 	rscscs	r0, sl, r5, lsl #4
    2bf0:	aa031000 	bge	c6bf8 <__HEAP_SIZE+0xc5bf8>
    2bf4:	01060113 	tsteq	r6, r3, lsl r1
    2bf8:	21060505 	tstcs	r6, r5, lsl #10
    2bfc:	01061005 	tsteq	r6, r5
    2c00:	05200705 	streq	r0, [r0, #-1797]!	; 0xfffff8fb
    2c04:	09051f01 	stmdbeq	r5, {r0, r8, r9, sl, fp, ip}
    2c08:	26053106 	strcs	r3, [r5], -r6, lsl #2
    2c0c:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    2c10:	05300609 	ldreq	r0, [r0, #-1545]!	; 0xfffff9f7
    2c14:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
    2c18:	053e060d 	ldreq	r0, [lr, #-1549]!	; 0xfffff9f3
    2c1c:	05010633 	streq	r0, [r1, #-1587]	; 0xfffff9cd
    2c20:	2505202a 	strcs	r2, [r5, #-42]	; 0xffffffd6
    2c24:	09052406 	stmdbeq	r5, {r1, r2, sl, sp}
    2c28:	06120515 			; <UNDEFINED> instruction: 0x06120515
    2c2c:	3e010501 	cfsh32cc	mvfx0, mvfx1, #1
    2c30:	00010220 	andeq	r0, r1, r0, lsr #4
    2c34:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    2c38:	1e020500 	cfsh32ne	mvfx0, mvfx2, #0
    2c3c:	03100021 	tsteq	r0, #33	; 0x21
    2c40:	060119ee 	streq	r1, [r1], -lr, ror #19
    2c44:	06090501 	streq	r0, [r9], -r1, lsl #10
    2c48:	0613053d 			; <UNDEFINED> instruction: 0x0613053d
    2c4c:	06090501 	streq	r0, [r9], -r1, lsl #10
    2c50:	192c0521 	stmdbne	ip!, {r0, r5, r8, sl}
    2c54:	05135f05 	ldreq	r5, [r3, #-3845]	; 0xfffff0fb
    2c58:	20051409 	andcs	r1, r5, r9, lsl #8
    2c5c:	49050106 	stmdbmi	r5, {r1, r2, r8}
    2c60:	200b0520 	andcs	r0, fp, r0, lsr #10
    2c64:	76031405 	strvc	r1, [r3], -r5, lsl #8
    2c68:	0305052e 	movweq	r0, #21806	; 0x552e
    2c6c:	0d052031 	stceq	0, cr2, [r5, #-196]	; 0xffffff3c
    2c70:	3c5b0306 	mrrccc	3, 0, r0, fp, cr6
    2c74:	01061a05 	tsteq	r6, r5, lsl #20
    2c78:	3e063705 	cdpcc	7, 0, cr3, cr6, cr5, {0}
    2c7c:	05150d05 	ldreq	r0, [r5, #-3333]	; 0xfffff2fb
    2c80:	3c010617 	stccc	6, cr0, [r1], {23}
    2c84:	060d052e 	streq	r0, [sp], -lr, lsr #10
    2c88:	060f0522 	streq	r0, [pc], -r2, lsr #10
    2c8c:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    2c90:	0615053e 			; <UNDEFINED> instruction: 0x0615053e
    2c94:	20130501 	andscs	r0, r3, r1, lsl #10
    2c98:	30061505 	andcc	r1, r6, r5, lsl #10
    2c9c:	01061905 	tsteq	r6, r5, lsl #18
    2ca0:	2e17052e 	cfmul64cs	mvdx0, mvdx7, mvdx14
    2ca4:	20312105 	eorscs	r2, r1, r5, lsl #2
    2ca8:	03062505 	movweq	r2, #25861	; 0x6505
    2cac:	09050113 	stmdbeq	r5, {r0, r1, r4, r8}
    2cb0:	06100515 			; <UNDEFINED> instruction: 0x06100515
    2cb4:	00110501 	andseq	r0, r1, r1, lsl #10
    2cb8:	06020402 	streq	r0, [r2], -r2, lsl #8
    2cbc:	00207803 	eoreq	r7, r0, r3, lsl #16
    2cc0:	01020402 	tsteq	r2, r2, lsl #8
    2cc4:	02040200 	andeq	r0, r4, #0, 4
    2cc8:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    2ccc:	02002e01 	andeq	r2, r0, #1, 28
    2cd0:	00010104 	andeq	r0, r1, r4, lsl #2
    2cd4:	06010402 	streq	r0, [r1], -r2, lsl #8
    2cd8:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    2cdc:	03022001 	movweq	r2, #8193	; 0x2001
    2ce0:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    2ce4:	02050001 	andeq	r0, r5, #1
    2ce8:	10002176 	andne	r2, r0, r6, ror r1
    2cec:	0113be03 	tsteq	r3, r3, lsl #28
    2cf0:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    2cf4:	09053506 	stmdbeq	r5, {r1, r2, r8, sl, ip, sp}
    2cf8:	06100530 			; <UNDEFINED> instruction: 0x06100530
    2cfc:	06090501 	streq	r0, [r9], -r1, lsl #10
    2d00:	060e053f 			; <UNDEFINED> instruction: 0x060e053f
    2d04:	06150501 	ldreq	r0, [r5], -r1, lsl #10
    2d08:	05201903 	streq	r1, [r0, #-2307]!	; 0xfffff6fd
    2d0c:	05010619 	streq	r0, [r1, #-1561]	; 0xfffff9e7
    2d10:	19052017 	stmdbne	r5, {r0, r1, r2, r4, sp}
    2d14:	1d052206 	sfmne	f2, 4, [r5, #-24]	; 0xffffffe8
    2d18:	1b050106 	blne	143138 <__RAM_SIZE+0x43138>
    2d1c:	0635054a 	ldrteq	r0, [r5], -sl, asr #10
    2d20:	030d0528 	movweq	r0, #54568	; 0xd528
    2d24:	20060121 	andcs	r0, r6, r1, lsr #2
    2d28:	03060e05 	movweq	r0, #28165	; 0x6e05
    2d2c:	05207fbc 	streq	r7, [r0, #-4028]!	; 0xfffff044
    2d30:	1c053411 	cfstrsne	mvf3, [r5], {17}
    2d34:	13050106 	movwne	r0, #20742	; 0x5106
    2d38:	06150520 	ldreq	r0, [r5], -r0, lsr #10
    2d3c:	06190530 			; <UNDEFINED> instruction: 0x06190530
    2d40:	3c170501 	cfldr32cc	mvfx0, [r7], {1}
    2d44:	33061905 	movwcc	r1, #26885	; 0x6905
    2d48:	12031d05 	andne	r1, r3, #320	; 0x140
    2d4c:	0309053c 	movweq	r0, #38204	; 0x953c
    2d50:	1a053c28 	bne	151df8 <__RAM_SIZE+0x51df8>
    2d54:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    2d58:	05313e06 	ldreq	r3, [r1, #-3590]!	; 0xfffff1fa
    2d5c:	10053009 	andne	r3, r5, r9
    2d60:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
    2d64:	05220609 	streq	r0, [r2, #-1545]!	; 0xfffff9f7
    2d68:	0501060e 	streq	r0, [r1, #-1550]	; 0xfffff9f2
    2d6c:	0a03062d 	beq	c4628 <__HEAP_SIZE+0xc3628>
    2d70:	15110520 	ldrne	r0, [r1, #-1312]	; 0xfffffae0
    2d74:	0e052006 	cdpeq	0, 0, cr2, cr5, cr6, {0}
    2d78:	20730306 	rsbscs	r0, r3, r6, lsl #6
    2d7c:	05300d05 	ldreq	r0, [r0, #-3333]!	; 0xfffff2fb
    2d80:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    2d84:	1105200f 	tstne	r5, pc
    2d88:	15052206 	strne	r2, [r5, #-518]	; 0xfffffdfa
    2d8c:	13050106 	movwne	r0, #20742	; 0x5106
    2d90:	0615054a 	ldreq	r0, [r5], -sl, asr #10
    2d94:	03090530 	movweq	r0, #38192	; 0x9530
    2d98:	1a053c0f 	bne	151ddc <__RAM_SIZE+0x51ddc>
    2d9c:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    2da0:	01053e06 	tsteq	r5, r6, lsl #28
    2da4:	00202f06 	eoreq	r2, r0, r6, lsl #30
    2da8:	01050101 	tsteq	r5, r1, lsl #2
    2dac:	f8020500 			; <UNDEFINED> instruction: 0xf8020500
    2db0:	03100021 	tsteq	r0, #33	; 0x21
    2db4:	050102b0 	streq	r0, [r1, #-688]	; 0xfffffd50
    2db8:	05131305 	ldreq	r1, [r3, #-773]	; 0xfffffcfb
    2dbc:	1c051437 	cfstrsne	mvf1, [r5], {55}	; 0x37
    2dc0:	14050514 	strne	r0, [r5], #-1300	; 0xfffffaec
    2dc4:	01060705 	tsteq	r6, r5, lsl #14
    2dc8:	02000105 	andeq	r0, r0, #1073741825	; 0x40000001
    2dcc:	78030104 	stmdavc	r3, {r2, r8}
    2dd0:	0012052e 	andseq	r0, r2, lr, lsr #10
    2dd4:	03010402 	movweq	r0, #5122	; 0x1402
    2dd8:	1d053c09 	stcne	12, cr3, [r5, #-36]	; 0xffffffdc
    2ddc:	01040200 	mrseq	r0, R12_usr
    2de0:	3136051f 	teqcc	r6, pc, lsl r5
    2de4:	20202c05 	eorcs	r2, r0, r5, lsl #24
    2de8:	053a2505 	ldreq	r2, [sl, #-1285]!	; 0xfffffafb
    2dec:	202f0311 	eorcs	r0, pc, r1, lsl r3	; <UNPREDICTABLE>
    2df0:	23062605 	movwcs	r2, #26117	; 0x6605
    2df4:	05162e05 	ldreq	r2, [r6, #-3589]	; 0xfffff1fb
    2df8:	0c051405 	cfstrseq	mvf1, [r5], {5}
    2dfc:	2c050106 	stfcss	f0, [r5], {6}
    2e00:	05204a03 	streq	r4, [r0, #-2563]!	; 0xfffff5fd
    2e04:	05300609 	ldreq	r0, [r0, #-1545]!	; 0xfffff9f7
    2e08:	2f05300d 	svccs	0x0005300d
    2e0c:	43050106 	movwmi	r0, #20742	; 0x5106
    2e10:	20570520 	subscs	r0, r7, r0, lsr #10
    2e14:	05203805 	streq	r3, [r0, #-2053]!	; 0xfffff7fb
    2e18:	0d052e26 	stceq	14, cr2, [r5, #-152]	; 0xffffff68
    2e1c:	28052106 	stmdacs	r5, {r1, r2, r8, sp}
    2e20:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    2e24:	20052f06 	andcs	r2, r5, r6, lsl #30
    2e28:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    2e2c:	54052106 	strpl	r2, [r5], #-262	; 0xfffffefa
    2e30:	3c050106 	stfccs	f0, [r5], {6}
    2e34:	2e2a0520 	cfsh64cs	mvdx0, mvdx10, #16
    2e38:	21060d05 	tstcs	r6, r5, lsl #26
    2e3c:	01061e05 	tsteq	r6, r5, lsl #28
    2e40:	3d060d05 	stccc	13, cr0, [r6, #-20]	; 0xffffffec
    2e44:	01061e05 	tsteq	r6, r5, lsl #28
    2e48:	30060d05 	andcc	r0, r6, r5, lsl #26
    2e4c:	01060f05 	tsteq	r6, r5, lsl #30
    2e50:	27061105 	strcs	r1, [r6, -r5, lsl #2]
    2e54:	01061505 	tsteq	r6, r5, lsl #10
    2e58:	05201305 	streq	r1, [r0, #-773]!	; 0xfffffcfb
    2e5c:	17030609 	strne	r0, [r3, -r9, lsl #12]
    2e60:	06100520 	ldreq	r0, [r0], -r0, lsr #10
    2e64:	052e4d03 	streq	r4, [lr, #-3331]!	; 0xfffff2fd
    2e68:	20330309 	eorscs	r0, r3, r9, lsl #6
    2e6c:	03061505 	movweq	r1, #25861	; 0x6505
    2e70:	1905206b 	stmdbne	r5, {r0, r1, r3, r5, r6, sp}
    2e74:	17050106 	strne	r0, [r5, -r6, lsl #2]
    2e78:	0619054a 	ldreq	r0, [r9], -sl, asr #10
    2e7c:	03110530 	tsteq	r1, #48, 10	; 0xc000000
    2e80:	064b3c0f 	strbeq	r3, [fp], -pc, lsl #24
    2e84:	0301055f 	movweq	r0, #5471	; 0x155f
    2e88:	1105200a 	tstne	r5, sl
    2e8c:	05207603 	streq	r7, [r0, #-1539]!	; 0xfffff9fd
    2e90:	200a0301 	andcs	r0, sl, r1, lsl #6
    2e94:	01010020 	tsteq	r1, r0, lsr #32
    2e98:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    2e9c:	00227e02 	eoreq	r7, r2, r2, lsl #28
    2ea0:	04ba0310 	ldrteq	r0, [sl], #784	; 0x310
    2ea4:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    2ea8:	14310605 	ldrtne	r0, [r1], #-1541	; 0xfffff9fb
    2eac:	01060705 	tsteq	r6, r5, lsl #14
    2eb0:	06090520 	streq	r0, [r9], -r0, lsr #10
    2eb4:	061c0526 	ldreq	r0, [ip], -r6, lsr #10
    2eb8:	06050501 	streq	r0, [r5], -r1, lsl #10
    2ebc:	05200a03 	streq	r0, [r0, #-2563]!	; 0xfffff5fd
    2ec0:	0501061a 	streq	r0, [r1, #-1562]	; 0xfffff9e6
    2ec4:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
    2ec8:	0501061c 	streq	r0, [r1, #-1564]	; 0xfffff9e4
    2ecc:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
    2ed0:	2001060e 	andcs	r0, r1, lr, lsl #12
    2ed4:	06090520 	streq	r0, [r9], -r0, lsr #10
    2ed8:	052e0a03 	streq	r0, [lr, #-2563]!	; 0xfffff5fd
    2edc:	05010629 	streq	r0, [r1, #-1577]	; 0xfffff9d7
    2ee0:	05320624 	ldreq	r0, [r2, #-1572]!	; 0xfffff9dc
    2ee4:	05130601 	ldreq	r0, [r3, #-1537]	; 0xfffff9ff
    2ee8:	6a030609 	bvs	c4714 <__HEAP_SIZE+0xc3714>
    2eec:	061c0520 	ldreq	r0, [ip], -r0, lsr #10
    2ef0:	00020201 	andeq	r0, r2, r1, lsl #4
    2ef4:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    2ef8:	9e020500 	cfsh32ls	mvfx0, mvfx2, #0
    2efc:	03100022 	tsteq	r0, #34	; 0x22
    2f00:	050102fc 	streq	r0, [r1, #-764]	; 0xfffffd04
    2f04:	77051309 	strvc	r1, [r5, -r9, lsl #6]
    2f08:	16260514 			; <UNDEFINED> instruction: 0x16260514
    2f0c:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    2f10:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
    2f14:	04020005 	streq	r0, [r2], #-5
    2f18:	20770301 	rsbscs	r0, r7, r1, lsl #6
    2f1c:	02003305 	andeq	r3, r0, #335544320	; 0x14000000
    2f20:	09030104 	stmdbeq	r3, {r2, r8}
    2f24:	2127054a 			; <UNDEFINED> instruction: 0x2127054a
    2f28:	05240f05 	streq	r0, [r4, #-3845]!	; 0xfffff0fb
    2f2c:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    2f30:	0d052001 	stceq	0, cr2, [r5, #-4]
    2f34:	20160306 	andscs	r0, r6, r6, lsl #6
    2f38:	05191105 	ldreq	r1, [r9, #-261]	; 0xfffffefb
    2f3c:	20010633 	andcs	r0, r1, r3, lsr r6
    2f40:	32060d05 	andcc	r0, r6, #320	; 0x140
    2f44:	18054a06 	stmdane	r5, {r1, r2, r9, fp, lr}
    2f48:	052e7503 	streq	r7, [lr, #-1283]!	; 0xfffffafd
    2f4c:	20160305 	andscs	r0, r6, r5, lsl #6
    2f50:	55030f05 	strpl	r0, [r3, #-3845]	; 0xfffff0fb
    2f54:	0313052e 	tsteq	r3, #192937984	; 0xb800000
    2f58:	3c052e72 	stccc	14, cr2, [r5], {114}	; 0x72
    2f5c:	20360306 	eorscs	r0, r6, r6, lsl #6
    2f60:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    2f64:	05010610 	streq	r0, [r1, #-1552]	; 0xfffff9f0
    2f68:	20480313 	subcs	r0, r8, r3, lsl r3
    2f6c:	39030505 	stmdbcc	r3, {r0, r2, r8, sl}
    2f70:	03130520 	tsteq	r3, #32, 10	; 0x8000000
    2f74:	20202047 	eorcs	r2, r0, r7, asr #32
    2f78:	00010220 	andeq	r0, r1, r0, lsr #4
    2f7c:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    2f80:	00020500 	andeq	r0, r2, r0, lsl #10
    2f84:	03000000 	movweq	r0, #0
    2f88:	050103c0 	streq	r0, [r1, #-960]	; 0xfffffc40
    2f8c:	05131309 	ldreq	r1, [r3, #-777]	; 0xfffffcf7
    2f90:	2005145d 	andcs	r1, r5, sp, asr r4
    2f94:	13270514 			; <UNDEFINED> instruction: 0x13270514
    2f98:	05170d05 	ldreq	r0, [r7, #-3333]	; 0xfffff2fb
    2f9c:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    2fa0:	19052e0f 	stmdbne	r5, {r0, r1, r2, r3, r9, sl, fp, sp}
    2fa4:	052e0f03 	streq	r0, [lr, #-3843]!	; 0xfffff0fd
    2fa8:	1003063d 	andne	r0, r3, sp, lsr r6
    2fac:	14090520 	strne	r0, [r9], #-1312	; 0xfffffae0
    2fb0:	13060505 	movwne	r0, #25861	; 0x6505
    2fb4:	03061105 	movweq	r1, #24837	; 0x6105
    2fb8:	13052060 	movwne	r2, #20576	; 0x5060
    2fbc:	15050106 	strne	r0, [r5, #-262]	; 0xfffffefa
    2fc0:	3e052206 	cdpcc	2, 0, cr2, cr5, cr6, {0}
    2fc4:	27050106 	strcs	r0, [r5, -r6, lsl #2]
    2fc8:	06110520 	ldreq	r0, [r1], -r0, lsr #10
    2fcc:	06210526 	strteq	r0, [r1], -r6, lsr #10
    2fd0:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    2fd4:	06190521 	ldreq	r0, [r9], -r1, lsr #10
    2fd8:	01022001 	tsteq	r2, r1
    2fdc:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    2fe0:	02050005 	andeq	r0, r5, #5
    2fe4:	00000000 	andeq	r0, r0, r0
    2fe8:	0103f803 	tsteq	r3, r3, lsl #16	; <UNPREDICTABLE>
    2fec:	09050106 	stmdbeq	r5, {r1, r2, r8}
    2ff0:	13132f06 	tstne	r3, #6, 30
    2ff4:	05145105 	ldreq	r5, [r4, #-261]	; 0xfffffefb
    2ff8:	0b051409 	bleq	148024 <__RAM_SIZE+0x48024>
    2ffc:	2c050106 	stfcss	f0, [r5], {6}
    3000:	01040200 	mrseq	r0, R12_usr
    3004:	0402004c 	streq	r0, [r2], #-76	; 0xffffffb4
    3008:	33053c01 	movwcc	r3, #23553	; 0x5c01
    300c:	01040200 	mrseq	r0, R12_usr
    3010:	2453051e 	ldrbcs	r0, [r3], #-1310	; 0xfffffae2
    3014:	052c3c05 	streq	r3, [ip, #-3077]!	; 0xfffff3fb
    3018:	1743060d 	strbne	r0, [r3, -sp, lsl #12]
    301c:	01062805 	tsteq	r6, r5, lsl #16
    3020:	060d0520 	streq	r0, [sp], -r0, lsr #10
    3024:	060f0530 			; <UNDEFINED> instruction: 0x060f0530
    3028:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    302c:	15051332 	strne	r1, [r5, #-818]	; 0xfffffcce
    3030:	06370519 			; <UNDEFINED> instruction: 0x06370519
    3034:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    3038:	2e4a0640 	cdpcs	6, 4, cr0, cr10, cr0, {2}
    303c:	002c052e 	eoreq	r0, ip, lr, lsr #10
    3040:	03010402 	movweq	r0, #5122	; 0x1402
    3044:	13052062 	movwne	r2, #20578	; 0x5062
    3048:	052e7803 	streq	r7, [lr, #-2051]!	; 0xfffff7fd
    304c:	20370305 	eorscs	r0, r7, r5, lsl #6
    3050:	49031305 	stmdbmi	r3, {r0, r2, r8, r9, ip}
    3054:	27052e3c 	smladxcs	r5, ip, lr, r2
    3058:	20300306 	eorscs	r0, r0, r6, lsl #6
    305c:	05132505 	ldreq	r2, [r3, #-1285]	; 0xfffffafb
    3060:	09051536 	stmdbeq	r5, {r1, r2, r4, r5, r8, sl, ip}
    3064:	06100514 			; <UNDEFINED> instruction: 0x06100514
    3068:	00010201 	andeq	r0, r1, r1, lsl #4
    306c:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    3070:	00020500 	andeq	r0, r2, r0, lsl #10
    3074:	03000000 	movweq	r0, #0
    3078:	050106e0 	streq	r0, [r1, #-1760]	; 0xfffff920
    307c:	64051309 	strvs	r1, [r5], #-777	; 0xfffffcf7
    3080:	14090514 	strne	r0, [r9], #-1300	; 0xfffffaec
    3084:	01060b05 	tsteq	r6, r5, lsl #22
    3088:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    308c:	051b0104 	ldreq	r0, [fp, #-260]	; 0xfffffefc
    3090:	04020022 	streq	r0, [r2], #-34	; 0xffffffde
    3094:	0d054101 	stfeqs	f4, [r5, #-4]
    3098:	17053106 	strne	r3, [r5, -r6, lsl #2]
    309c:	204a0106 	subcs	r0, sl, r6, lsl #2
    30a0:	30060d05 	andcc	r0, r6, r5, lsl #26
    30a4:	01060f05 	tsteq	r6, r5, lsl #30
    30a8:	22061105 	andcs	r1, r6, #1073741825	; 0x40000001
    30ac:	01063e05 	tsteq	r6, r5, lsl #28
    30b0:	22063105 	andcs	r3, r6, #1073741825	; 0x40000001
    30b4:	03061705 	movweq	r1, #26373	; 0x6705
    30b8:	05052073 	streq	r2, [r5, #-115]	; 0xffffff8d
    30bc:	05201d03 	streq	r1, [r0, #-3331]!	; 0xfffff2fd
    30c0:	20630317 	rsbcs	r0, r3, r7, lsl r3
    30c4:	03062405 	movweq	r2, #25605	; 0x6405
    30c8:	25052016 	strcs	r2, [r5, #-22]	; 0xffffffea
    30cc:	15430513 	strbne	r0, [r3, #-1299]	; 0xfffffaed
    30d0:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    30d4:	2e130605 	cfmsub32cs	mvax0, mvfx0, mvfx3, mvfx5
    30d8:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    30dc:	02050005 	andeq	r0, r5, #5
    30e0:	00000000 	andeq	r0, r0, r0
    30e4:	01078703 	tsteq	r7, r3, lsl #14
    30e8:	05130905 	ldreq	r0, [r3, #-2309]	; 0xfffff6fb
    30ec:	0905144f 	stmdbeq	r5, {r0, r1, r2, r3, r6, sl, ip}
    30f0:	060b0514 			; <UNDEFINED> instruction: 0x060b0514
    30f4:	00050501 	andeq	r0, r5, r1, lsl #10
    30f8:	1b010402 	blne	44108 <__HEAP_SIZE+0x43108>
    30fc:	02002205 	andeq	r2, r0, #1342177280	; 0x50000000
    3100:	05330104 	ldreq	r0, [r3, #-260]!	; 0xfffffefc
    3104:	0531060d 	ldreq	r0, [r1, #-1549]!	; 0xfffff9f3
    3108:	2e010617 	mcrcs	6, 0, r0, cr1, cr7, {0}
    310c:	30060d05 	andcc	r0, r6, r5, lsl #26
    3110:	01060f05 	tsteq	r6, r5, lsl #30
    3114:	22061105 	andcs	r1, r6, #1073741825	; 0x40000001
    3118:	01063e05 	tsteq	r6, r5, lsl #28
    311c:	22063105 	andcs	r3, r6, #1073741825	; 0x40000001
    3120:	03061705 	movweq	r1, #26373	; 0x6705
    3124:	05052073 	streq	r2, [r5, #-115]	; 0xffffff8d
    3128:	05201d03 	streq	r1, [r0, #-3331]!	; 0xfffff2fd
    312c:	20630317 	rsbcs	r0, r3, r7, lsl r3
    3130:	03062405 	movweq	r2, #25605	; 0x6405
    3134:	25052016 	strcs	r2, [r5, #-22]	; 0xffffffea
    3138:	153d0513 	ldrne	r0, [sp, #-1299]!	; 0xfffffaed
    313c:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    3140:	20130605 	andscs	r0, r3, r5, lsl #12
    3144:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    3148:	02050001 	andeq	r0, r5, #1
    314c:	00000000 	andeq	r0, r0, r0
    3150:	0107ae03 	tsteq	r7, r3, lsl #28
    3154:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    3158:	13136706 	tstne	r3, #1572864	; 0x180000
    315c:	10061005 	andne	r1, r6, r5
    3160:	03062b05 	movweq	r2, #27397	; 0x6b05
    3164:	15052e19 	strne	r2, [r5, #-3609]	; 0xfffff1e7
    3168:	06270516 			; <UNDEFINED> instruction: 0x06270516
    316c:	06150501 	ldreq	r0, [r5], -r1, lsl #10
    3170:	06260522 	strteq	r0, [r6], -r2, lsr #10
    3174:	06150501 	ldreq	r0, [r5], -r1, lsl #10
    3178:	0620055a 			; <UNDEFINED> instruction: 0x0620055a
    317c:	20170501 	andscs	r0, r7, r1, lsl #10
    3180:	22061905 	andcs	r1, r6, #81920	; 0x14000
    3184:	01061b05 	tsteq	r6, r5, lsl #22
    3188:	02004105 	andeq	r4, r0, #1073741825	; 0x40000001
    318c:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
    3190:	0527061e 	streq	r0, [r7, #-1566]!	; 0xfffff9e2
    3194:	20010622 	andcs	r0, r1, r2, lsr #12
    3198:	052e2005 	streq	r2, [lr, #-5]!
    319c:	29030635 	stmdbcs	r3, {r0, r2, r4, r5, r9, sl}
    31a0:	03110520 	tsteq	r1, #32, 10	; 0x8000000
    31a4:	38050128 	stmdacc	r5, {r3, r5, r8}
    31a8:	14110530 	ldrne	r0, [r1], #-1328	; 0xfffffad0
    31ac:	01061805 	tsteq	r6, r5, lsl #16
    31b0:	d3030105 	movwle	r0, #12549	; 0x3105
    31b4:	1d052000 	stcne	0, cr2, [r5, #-0]
    31b8:	7edd0306 	cdpvc	3, 13, cr0, cr13, cr6, {0}
    31bc:	0319052e 	tsteq	r9, #192937984	; 0xb800000
    31c0:	1d053c0b 	stcne	12, cr3, [r5, #-44]	; 0xffffffd4
    31c4:	1b050106 	blne	1435e4 <__RAM_SIZE+0x435e4>
    31c8:	061e0520 	ldreq	r0, [lr], -r0, lsr #10
    31cc:	05200f03 	streq	r0, [r0, #-3843]!	; 0xfffff0fd
    31d0:	05010620 	streq	r0, [r1, #-1568]	; 0xfffff9e0
    31d4:	0634061d 			; <UNDEFINED> instruction: 0x0634061d
    31d8:	6d03062e 	stcvs	6, cr0, [r3, #-184]	; 0xffffff48
    31dc:	06210520 	strteq	r0, [r1], -r0, lsr #10
    31e0:	1f052e01 	svcne	0x00052e01
    31e4:	0621052e 	strteq	r0, [r1], -lr, lsr #10
    31e8:	053c0634 	ldreq	r0, [ip, #-1588]!	; 0xfffff9cc
    31ec:	c5030615 	strgt	r0, [r3, #-1557]	; 0xfffff9eb
    31f0:	36050100 	strcc	r0, [r5], -r0, lsl #2
    31f4:	13430532 	movtne	r0, #13618	; 0x3532
    31f8:	05141505 	ldreq	r1, [r4, #-1285]	; 0xfffffafb
    31fc:	0501061c 	streq	r0, [r1, #-1564]	; 0xfffff9e4
    3200:	3d340615 	ldccc	6, cr0, [r4, #-84]!	; 0xffffffac
    3204:	01062305 	tsteq	r6, r5, lsl #6
    3208:	02000905 	andeq	r0, r0, #81920	; 0x14000
    320c:	03060104 	movweq	r0, #24836	; 0x6104
    3210:	02002e0f 	andeq	r2, r0, #15, 28	; 0xf0
    3214:	054a0404 	strbeq	r0, [sl, #-1028]	; 0xfffffbfc
    3218:	4a1e0311 	bmi	783e64 <__RAM_SIZE+0x683e64>
    321c:	061a053d 			; <UNDEFINED> instruction: 0x061a053d
    3220:	06570501 	ldrbeq	r0, [r7], -r1, lsl #10
    3224:	2e7ec103 	expcse	f4, f3
    3228:	05141c05 	ldreq	r1, [r4, #-3077]	; 0xfffff3fb
    322c:	5b051364 	blpl	147fc4 <__RAM_SIZE+0x47fc4>
    3230:	156e0513 	strbne	r0, [lr, #-1299]!	; 0xfffffaed
    3234:	05160505 	ldreq	r0, [r6, #-1285]	; 0xfffffafb
    3238:	0d051409 	cfstrseq	mvf1, [r5, #-36]	; 0xffffffdc
    323c:	061a0534 			; <UNDEFINED> instruction: 0x061a0534
    3240:	20370501 	eorscs	r0, r7, r1, lsl #10
    3244:	05200f05 	streq	r0, [r0, #-3845]!	; 0xfffff0fb
    3248:	04020044 	streq	r0, [r2], #-68	; 0xffffffbc
    324c:	11052e01 	tstne	r5, r1, lsl #28
    3250:	00ec0306 	rsceq	r0, ip, r6, lsl #6
    3254:	0622052e 	strteq	r0, [r2], -lr, lsr #10
    3258:	20130501 	andscs	r0, r3, r1, lsl #10
    325c:	03061605 	movweq	r1, #26117	; 0x6605
    3260:	18052e0d 	stmdane	r5, {r0, r2, r3, r9, sl, fp, sp}
    3264:	2d050106 	stfcss	f0, [r5, #-24]	; 0xffffffe8
    3268:	2e0a0306 	cdpcs	3, 0, cr0, cr10, cr6, {0}
    326c:	33160905 	tstcc	r6, #81920	; 0x14000
    3270:	02002e2f 	andeq	r2, r0, #752	; 0x2f0
    3274:	00660304 	rsbeq	r0, r6, r4, lsl #6
    3278:	66060402 	strvs	r0, [r6], -r2, lsl #8
    327c:	06040200 	streq	r0, [r4], -r0, lsl #4
    3280:	000d0531 	andeq	r0, sp, r1, lsr r5
    3284:	06060402 	streq	r0, [r6], -r2, lsl #8
    3288:	000b0501 	andeq	r0, fp, r1, lsl #10
    328c:	4a060402 	bmi	18429c <__RAM_SIZE+0x8429c>
    3290:	22060d05 	andcs	r0, r6, #320	; 0x140
    3294:	01061105 	tsteq	r6, r5, lsl #2
    3298:	053c0f05 	ldreq	r0, [ip, #-3845]!	; 0xfffff0fb
    329c:	05300637 	ldreq	r0, [r0, #-1591]!	; 0xfffff9c9
    32a0:	435f1311 	cmpmi	pc, #1140850688	; 0x44000000
    32a4:	01061505 	tsteq	r6, r5, lsl #10
    32a8:	052e1305 	streq	r1, [lr, #-773]!	; 0xfffffcfb
    32ac:	05300615 	ldreq	r0, [r0, #-1557]!	; 0xfffff9eb
    32b0:	3c0d030d 	stccc	3, cr0, [sp], {13}
    32b4:	0616053d 			; <UNDEFINED> instruction: 0x0616053d
    32b8:	062e0501 	strteq	r0, [lr], -r1, lsl #10
    32bc:	133b0530 	teqne	fp, #48, 10	; 0xc000000
    32c0:	05140d05 	ldreq	r0, [r4, #-3333]	; 0xfffff2fb
    32c4:	02010614 	andeq	r0, r1, #20, 12	; 0x1400000
    32c8:	01010002 	tsteq	r1, r2
    32cc:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    32d0:	00000002 	andeq	r0, r0, r2
    32d4:	04e60300 	strbteq	r0, [r6], #768	; 0x300
    32d8:	13090501 	movwne	r0, #38145	; 0x9501
    32dc:	01060b05 	tsteq	r6, r5, lsl #22
    32e0:	051f0505 	ldreq	r0, [pc, #-1285]	; 2de3 <__HEAP_SIZE+0x1de3>
    32e4:	0527060d 	streq	r0, [r7, #-1549]!	; 0xfffff9f3
    32e8:	05010633 	streq	r0, [r1, #-1587]	; 0xfffff9cd
    32ec:	052f060d 	streq	r0, [pc, #-1549]!	; 2ce7 <__HEAP_SIZE+0x1ce7>
    32f0:	05010625 	streq	r0, [r1, #-1573]	; 0xfffff9db
    32f4:	0523060d 	streq	r0, [r3, #-1549]!	; 0xfffff9f3
    32f8:	0501063b 	streq	r0, [r1, #-1595]	; 0xfffff9c5
    32fc:	0522062c 	streq	r0, [r2, #-1580]!	; 0xfffff9d4
    3300:	1605150d 	strne	r1, [r5], -sp, lsl #10
    3304:	27050106 	strcs	r0, [r5, -r6, lsl #2]
    3308:	05054e06 	streq	r4, [r5, #-3590]	; 0xfffff1fa
    330c:	02201406 	eoreq	r1, r0, #100663296	; 0x6000000
    3310:	01010001 	tsteq	r1, r1
    3314:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    3318:	00000002 	andeq	r0, r0, r2
    331c:	05840300 	streq	r0, [r4, #768]	; 0x300
    3320:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    3324:	132f0609 			; <UNDEFINED> instruction: 0x132f0609
    3328:	05143405 	ldreq	r3, [r4, #-1029]	; 0xfffffbfb
    332c:	15051409 	strne	r1, [r5, #-1033]	; 0xfffffbf7
    3330:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
    3334:	053d0609 	ldreq	r0, [sp, #-1545]!	; 0xfffff9f7
    3338:	09053033 	stmdbeq	r5, {r0, r1, r4, r5, ip, sp}
    333c:	06050514 			; <UNDEFINED> instruction: 0x06050514
    3340:	01002e13 	tsteq	r0, r3, lsl lr
    3344:	00050501 	andeq	r0, r5, r1, lsl #10
    3348:	00000205 	andeq	r0, r0, r5, lsl #4
    334c:	99030000 	stmdbls	r3, {}	; <UNPREDICTABLE>
    3350:	01060105 	tsteq	r6, r5, lsl #2
    3354:	3d060905 	vstrcc.16	s0, [r6, #-10]	; <UNPREDICTABLE>
    3358:	14490513 	strbne	r0, [r9], #-1299	; 0xfffffaed
    335c:	14160905 	ldrne	r0, [r6], #-2309	; 0xfffff6fb
    3360:	01061505 	tsteq	r6, r5, lsl #10
    3364:	052e203c 	streq	r2, [lr, #-60]!	; 0xffffffc4
    3368:	05210609 	streq	r0, [r1, #-1545]!	; 0xfffff9f7
    336c:	09053039 	stmdbeq	r5, {r0, r3, r4, r5, ip, sp}
    3370:	06050514 			; <UNDEFINED> instruction: 0x06050514
    3374:	01003c13 	tsteq	r0, r3, lsl ip
    3378:	00050501 	andeq	r0, r5, r1, lsl #10
    337c:	00000205 	andeq	r0, r0, r5, lsl #4
    3380:	f4030000 	vst4.8	{d0-d3}, [r3], r0
    3384:	01060105 	tsteq	r6, r5, lsl #2
    3388:	2f060905 	svccs	0x00060905
    338c:	14360513 	ldrtne	r0, [r6], #-1299	; 0xfffffaed
    3390:	05142005 	ldreq	r2, [r4, #-5]
    3394:	22051a09 	andcs	r1, r5, #36864	; 0x9000
    3398:	33050106 	movwcc	r0, #20742	; 0x5106
    339c:	2e0b0520 	cfsh32cs	mvfx0, mvfx11, #16
    33a0:	1d031505 	cfstr32ne	mvfx1, [r3, #-20]	; 0xffffffec
    33a4:	2805052e 	stmdacs	r5, {r1, r2, r3, r5, r8, sl}
    33a8:	03063105 	movweq	r3, #24837	; 0x6105
    33ac:	0d05205d 	stceq	0, cr2, [r5, #-372]	; 0xfffffe8c
    33b0:	06240519 			; <UNDEFINED> instruction: 0x06240519
    33b4:	203b0501 	eorscs	r0, fp, r1, lsl #10
    33b8:	31060d05 	tstcc	r6, r5, lsl #26
    33bc:	01060f05 	tsteq	r6, r5, lsl #30
    33c0:	0b031505 	bleq	c87dc <__HEAP_SIZE+0xc77dc>
    33c4:	06380520 	ldrteq	r0, [r8], -r0, lsr #10
    33c8:	09051528 	stmdbeq	r5, {r3, r5, r8, sl, ip}
    33cc:	06100514 			; <UNDEFINED> instruction: 0x06100514
    33d0:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    33d4:	05206c03 	streq	r6, [r0, #-3075]!	; 0xfffff3fd
    33d8:	0501061a 	streq	r0, [r1, #-1562]	; 0xfffff9e6
    33dc:	02025f15 	andeq	r5, r2, #21, 30	; 0x54
    33e0:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    33e4:	02050001 	andeq	r0, r5, #1
    33e8:	00000000 	andeq	r0, r0, r0
    33ec:	01098803 	tsteq	r9, r3, lsl #16
    33f0:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    33f4:	13136706 	tstne	r3, #1572864	; 0x180000
    33f8:	05146b05 	ldreq	r6, [r4, #-2821]	; 0xfffff4fb
    33fc:	6405141c 	strvs	r1, [r5], #-1052	; 0xfffffbe4
    3400:	135b0513 	cmpne	fp, #79691776	; 0x4c00000
    3404:	10032f05 	andne	r2, r3, r5, lsl #30
    3408:	03050501 	movweq	r0, #21761	; 0x5501
    340c:	2e05010a 	adfcss	f0, f5, #2.0
    3410:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
    3414:	05220609 	streq	r0, [r2, #-1545]!	; 0xfffff9f7
    3418:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    341c:	0b052033 	bleq	14b4f0 <__RAM_SIZE+0x4b4f0>
    3420:	00400520 	subeq	r0, r0, r0, lsr #10
    3424:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    3428:	f8031505 			; <UNDEFINED> instruction: 0xf8031505
    342c:	05052e00 	streq	r2, [r5, #-3584]	; 0xfffff200
    3430:	34052306 	strcc	r2, [r5], #-774	; 0xfffffcfa
    3434:	1405053e 	strne	r0, [r5], #-1342	; 0xfffffac2
    3438:	13060105 	movwne	r0, #24837	; 0x6105
    343c:	03060d05 	movweq	r0, #27909	; 0x6d05
    3440:	053c7f82 	ldreq	r7, [ip, #-3970]!	; 0xfffff07e
    3444:	0501061a 	streq	r0, [r1, #-1562]	; 0xfffff9e6
    3448:	054b060d 	strbeq	r0, [fp, #-1549]	; 0xfffff9f3
    344c:	0501061f 	streq	r0, [r1, #-1567]	; 0xfffff9e1
    3450:	05300630 	ldreq	r0, [r0, #-1584]!	; 0xfffff9d0
    3454:	1605190d 	strne	r1, [r5], -sp, lsl #18
    3458:	053c0106 	ldreq	r0, [ip, #-262]!	; 0xfffffefa
    345c:	0532060d 	ldreq	r0, [r2, #-1549]!	; 0xfffff9f3
    3460:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    3464:	05400615 	strbeq	r0, [r0, #-1557]	; 0xfffff9eb
    3468:	05010620 	streq	r0, [r1, #-1568]	; 0xfffff9e0
    346c:	19052017 	stmdbne	r5, {r0, r1, r2, r4, sp}
    3470:	1b052206 	blne	14bc90 <__RAM_SIZE+0x4bc90>
    3474:	41050106 	tstmi	r5, r6, lsl #2
    3478:	01040200 	mrseq	r0, R12_usr
    347c:	061e052e 	ldreq	r0, [lr], -lr, lsr #10
    3480:	06220543 	strteq	r0, [r2], -r3, asr #10
    3484:	3c200501 	cfstr32cc	mvfx0, [r0], #-4
    3488:	25061d05 	strcs	r1, [r6, #-3333]	; 0xfffff2fb
    348c:	01061f05 	tsteq	r6, r5, lsl #30
    3490:	3e062105 	adfccs	f2, f6, f5
    3494:	01063c05 	tsteq	r6, r5, lsl #24
    3498:	06190520 	ldreq	r0, [r9], -r0, lsr #10
    349c:	053c0e03 	ldreq	r0, [ip, #-3587]!	; 0xfffff1fd
    34a0:	0501061d 	streq	r0, [r1, #-1565]	; 0xfffff9e3
    34a4:	1505201b 	strne	r2, [r5, #-27]	; 0xffffffe5
    34a8:	2000c103 	andcs	ip, r0, r3, lsl #2
    34ac:	061d0520 	ldreq	r0, [sp], -r0, lsr #10
    34b0:	05204103 	streq	r4, [r0, #-259]!	; 0xfffffefd
    34b4:	05010621 	streq	r0, [r1, #-1569]	; 0xfffff9df
    34b8:	21054a1f 	tstcs	r5, pc, lsl sl
    34bc:	23052406 	movwcs	r2, #21510	; 0x5406
    34c0:	25050106 	strcs	r0, [r5, #-262]	; 0xfffffefa
    34c4:	40053e06 	andmi	r3, r5, r6, lsl #28
    34c8:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    34cc:	36030611 			; <UNDEFINED> instruction: 0x36030611
    34d0:	002e013c 	eoreq	r0, lr, ip, lsr r1
    34d4:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    34d8:	01040200 	mrseq	r0, R12_usr
    34dc:	04020001 	streq	r0, [r2], #-1
    34e0:	002e0601 	eoreq	r0, lr, r1, lsl #12
    34e4:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    34e8:	02001505 	andeq	r1, r0, #20971520	; 0x1400000
    34ec:	00310104 	eorseq	r0, r1, r4, lsl #2
    34f0:	20010402 	andcs	r0, r1, r2, lsl #8
    34f4:	20202020 	eorcs	r2, r0, r0, lsr #32
    34f8:	20202020 	eorcs	r2, r0, r0, lsr #32
    34fc:	20202020 	eorcs	r2, r0, r0, lsr #32
    3500:	01000102 	tsteq	r0, r2, lsl #2
    3504:	00010501 	andeq	r0, r1, r1, lsl #10
    3508:	00000205 	andeq	r0, r0, r5, lsl #4
    350c:	b2030000 	andlt	r0, r3, #0
    3510:	0106010a 	tsteq	r6, sl, lsl #2
    3514:	3d060505 	cfstr32cc	mvfx0, [r6, #-20]	; 0xffffffec
    3518:	46051313 			; <UNDEFINED> instruction: 0x46051313
    351c:	1a1c0514 	bne	704974 <__RAM_SIZE+0x604974>
    3520:	05162d05 	ldreq	r2, [r6, #-3333]	; 0xfffff2fb
    3524:	2f05177b 	svccs	0x0005177b
    3528:	05011003 	streq	r1, [r1, #-3]
    352c:	2e051705 	cdpcs	7, 0, cr1, cr5, cr5, {0}
    3530:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
    3534:	05220609 	streq	r0, [r2, #-1545]!	; 0xfffff9f7
    3538:	0501061b 	streq	r0, [r1, #-1563]	; 0xfffff9e5
    353c:	05250609 	streq	r0, [r5, #-1545]!	; 0xfffff9f7
    3540:	05010628 	streq	r0, [r1, #-1576]	; 0xfffff9d8
    3544:	0d05200b 	stceq	0, cr2, [r5, #-44]	; 0xffffffd4
    3548:	1a053006 	bne	14f568 <__RAM_SIZE+0x4f568>
    354c:	30050106 	andcc	r0, r5, r6, lsl #2
    3550:	0d053e06 	stceq	14, cr3, [r5, #-24]	; 0xffffffe8
    3554:	062a051a 			; <UNDEFINED> instruction: 0x062a051a
    3558:	20280501 	eorcs	r0, r8, r1, lsl #10
    355c:	24060d05 	strcs	r0, [r6], #-3333	; 0xfffff2fb
    3560:	01060f05 	tsteq	r6, r5, lsl #30
    3564:	40061505 	andmi	r1, r6, r5, lsl #10
    3568:	01062005 	tsteq	r6, r5
    356c:	05201705 	streq	r1, [r0, #-1797]!	; 0xfffff8fb
    3570:	05220619 	streq	r0, [r2, #-1561]!	; 0xfffff9e7
    3574:	2001061d 	andcs	r0, r1, sp, lsl r6
    3578:	052e1b05 	streq	r1, [lr, #-2821]!	; 0xfffff4fb
    357c:	0525061d 	streq	r0, [r5, #-1565]!	; 0xfffff9e3
    3580:	0501061f 	streq	r0, [r1, #-1567]	; 0xfffff9e1
    3584:	05220621 	streq	r0, [r2, #-1569]!	; 0xfffff9df
    3588:	2001063c 	andcs	r0, r1, ip, lsr r6
    358c:	03061905 	movweq	r1, #26885	; 0x6905
    3590:	1d052e0e 	stcne	14, cr2, [r5, #-56]	; 0xffffffc8
    3594:	1b050106 	blne	1439b4 <__RAM_SIZE+0x439b4>
    3598:	03150520 	tsteq	r5, #32, 10	; 0x8000000
    359c:	0520203e 	streq	r2, [r0, #-62]!	; 0xffffffc2
    35a0:	4403061d 	strmi	r0, [r3], #-1565	; 0xfffff9e3
    35a4:	06210520 	strteq	r0, [r1], -r0, lsr #10
    35a8:	1f052e01 	svcne	0x00052e01
    35ac:	0621052e 	strteq	r0, [r1], -lr, lsr #10
    35b0:	06230524 	strteq	r0, [r3], -r4, lsr #10
    35b4:	06250501 	strteq	r0, [r5], -r1, lsl #10
    35b8:	06400522 	strbeq	r0, [r0], -r2, lsr #10
    35bc:	11052001 	tstne	r5, r1
    35c0:	2e330306 	cdpcs	3, 3, cr0, cr3, cr6, {0}
    35c4:	02002e01 	andeq	r2, r0, #1, 28
    35c8:	002e0104 	eoreq	r0, lr, r4, lsl #2
    35cc:	01010402 	tsteq	r1, r2, lsl #8
    35d0:	01040200 	mrseq	r0, R12_usr
    35d4:	02002006 	andeq	r2, r0, #6
    35d8:	05200104 	streq	r0, [r0, #-260]!	; 0xfffffefc
    35dc:	04020015 	streq	r0, [r2], #-21	; 0xffffffeb
    35e0:	02003101 	andeq	r3, r0, #1073741824	; 0x40000000
    35e4:	00200104 	eoreq	r0, r0, r4, lsl #2
    35e8:	20010402 	andcs	r0, r1, r2, lsl #8
    35ec:	05052017 	streq	r2, [r5, #-23]	; 0xffffffe9
    35f0:	2d051506 	cfstr32cs	mvfx1, [r5, #-24]	; 0xffffffe8
    35f4:	1405053e 	strne	r0, [r5], #-1342	; 0xfffffac2
    35f8:	13060105 	movwne	r0, #24837	; 0x6105
    35fc:	73031505 	movwvc	r1, #13573	; 0x3505
    3600:	2020202e 	eorcs	r2, r0, lr, lsr #32
    3604:	20202020 	eorcs	r2, r0, r0, lsr #32
    3608:	01022020 	tsteq	r2, r0, lsr #32
    360c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    3610:	02050001 	andeq	r0, r5, #1
    3614:	100022dc 	ldrdne	r2, [r0], -ip
    3618:	010be003 	tsteq	fp, r3
    361c:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    3620:	13135906 	tstne	r3, #98304	; 0x18000
    3624:	10061005 	andne	r1, r6, r5
    3628:	03061105 	movweq	r1, #24837	; 0x6105
    362c:	2e052e1f 	mcrcs	14, 0, r2, cr5, cr15, {0}
    3630:	1311054b 	tstne	r1, #314572800	; 0x12c00000
    3634:	01062e05 	tsteq	r6, r5, lsl #28
    3638:	05202c05 	streq	r2, [r0, #-3077]!	; 0xfffff3fb
    363c:	05250611 	streq	r0, [r5, #-1553]!	; 0xfffff9ef
    3640:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    3644:	2d052013 	stccs	0, cr2, [r5, #-76]	; 0xffffffb4
    3648:	200d0306 	andcs	r0, sp, r6, lsl #6
    364c:	05151105 	ldreq	r1, [r5, #-261]	; 0xfffffefb
    3650:	11053034 	tstne	r5, r4, lsr r0
    3654:	06180514 			; <UNDEFINED> instruction: 0x06180514
    3658:	01052001 	tsteq	r5, r1
    365c:	0100d503 	tsteq	r0, r3, lsl #10
    3660:	03061505 	movweq	r1, #25861	; 0x6505
    3664:	052e7f99 	streq	r7, [lr, #-3993]!	; 0xfffff067
    3668:	05010619 	streq	r0, [r1, #-1561]	; 0xfffff9e7
    366c:	19054a17 	stmdbne	r5, {r0, r1, r2, r4, r9, fp, lr}
    3670:	15053006 	strne	r3, [r5, #-6]
    3674:	053c1803 	ldreq	r1, [ip, #-2051]!	; 0xfffff7fd
    3678:	40053039 	andmi	r3, r5, r9, lsr r0
    367c:	14150513 	ldrne	r0, [r5], #-1299	; 0xfffffaed
    3680:	01061c05 	tsteq	r6, r5, lsl #24
    3684:	34061505 	strcc	r1, [r6], #-1285	; 0xfffffafb
    3688:	0623053d 			; <UNDEFINED> instruction: 0x0623053d
    368c:	09052e01 	stmdbeq	r5, {r0, r9, sl, fp, sp}
    3690:	01040200 	mrseq	r0, R12_usr
    3694:	010f0306 	tsteq	pc, r6, lsl #6
    3698:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    369c:	0311054a 	tsteq	r1, #310378496	; 0x12800000
    36a0:	053d4a1a 	ldreq	r4, [sp, #-2586]!	; 0xfffff5e6
    36a4:	0501061a 	streq	r0, [r1, #-1562]	; 0xfffff9e6
    36a8:	3d43060d 	stclcc	6, cr0, [r3, #-52]	; 0xffffffcc
    36ac:	01061605 	tsteq	r6, r5, lsl #12
    36b0:	30060d05 	andcc	r0, r6, r5, lsl #26
    36b4:	01061105 	tsteq	r6, r5, lsl #2
    36b8:	053c0f05 	ldreq	r0, [ip, #-3845]!	; 0xfffff0fb
    36bc:	8203063f 	andhi	r0, r3, #66060288	; 0x3f00000
    36c0:	20052e7f 	andcs	r2, r5, pc, ror lr
    36c4:	16670515 			; <UNDEFINED> instruction: 0x16670515
    36c8:	05176e05 	ldreq	r6, [r7, #-3589]	; 0xfffff1fb
    36cc:	09051605 	stmdbeq	r5, {r0, r2, r9, sl, ip}
    36d0:	300d0514 	andcc	r0, sp, r4, lsl r5
    36d4:	01061f05 	tsteq	r6, r5, lsl #30
    36d8:	24060d05 	strcs	r0, [r6], #-3333	; 0xfffff2fb
    36dc:	01060f05 	tsteq	r6, r5, lsl #30
    36e0:	03061105 	movweq	r1, #24837	; 0x6105
    36e4:	22052e22 	andcs	r2, r5, #544	; 0x220
    36e8:	13050106 	movwne	r0, #20742	; 0x5106
    36ec:	06160520 	ldreq	r0, [r6], -r0, lsr #10
    36f0:	052e0b03 	streq	r0, [lr, #-2819]!	; 0xfffff4fd
    36f4:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    36f8:	0a03062d 	beq	c4fb4 <__HEAP_SIZE+0xc3fb4>
    36fc:	1609052e 	strne	r0, [r9], -lr, lsr #10
    3700:	002e2f33 	eoreq	r2, lr, r3, lsr pc
    3704:	66030402 	strvs	r0, [r3], -r2, lsl #8
    3708:	06040200 	streq	r0, [r4], -r0, lsl #4
    370c:	04020066 	streq	r0, [r2], #-102	; 0xffffff9a
    3710:	0d053106 	stfeqs	f3, [r5, #-24]	; 0xffffffe8
    3714:	06040200 	streq	r0, [r4], -r0, lsl #4
    3718:	0b050106 	bleq	143b38 <__RAM_SIZE+0x43b38>
    371c:	06040200 	streq	r0, [r4], -r0, lsl #4
    3720:	060d054a 	streq	r0, [sp], -sl, asr #10
    3724:	06110532 			; <UNDEFINED> instruction: 0x06110532
    3728:	3c0f0501 	cfstr32cc	mvfx0, [pc], {1}
    372c:	30063a05 	andcc	r3, r6, r5, lsl #20
    3730:	59131105 	ldmdbpl	r3, {r0, r2, r8, ip}
    3734:	0615053e 			; <UNDEFINED> instruction: 0x0615053e
    3738:	2e130501 	cfmul32cs	mvfx0, mvfx3, mvfx1
    373c:	30061505 	andcc	r1, r6, r5, lsl #10
    3740:	03061805 	movweq	r1, #26629	; 0x6805
    3744:	02023c1b 	andeq	r3, r2, #6912	; 0x1b00
    3748:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    374c:	02050001 	andeq	r0, r5, #1
    3750:	00000000 	andeq	r0, r0, r0
    3754:	010cf503 	tsteq	ip, r3, lsl #10	; <UNPREDICTABLE>
    3758:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    375c:	13134b06 	tstne	r3, #6144	; 0x1800
    3760:	05150905 	ldreq	r0, [r5, #-2309]	; 0xfffff6fb
    3764:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
    3768:	2e051b10 	vmovcs.32	d5[0], r1
    376c:	2e240306 	cdpcs	3, 2, cr0, cr4, cr6, {0}
    3770:	05161105 	ldreq	r1, [r6, #-261]	; 0xfffffefb
    3774:	0501062e 	streq	r0, [r1, #-1582]	; 0xfffff9d2
    3778:	1505202c 	strne	r2, [r5, #-44]	; 0xffffffd4
    377c:	20052406 	andcs	r2, r5, r6, lsl #8
    3780:	17050106 	strne	r0, [r5, -r6, lsl #2]
    3784:	06310520 	ldrteq	r0, [r1], -r0, lsr #10
    3788:	19110528 	ldmdbne	r1, {r3, r5, r8, sl}
    378c:	01061505 	tsteq	r6, r5, lsl #10
    3790:	05201305 	streq	r1, [r0, #-773]!	; 0xfffffcfb
    3794:	0d03062d 	stceq	6, cr0, [r3, #-180]	; 0xffffff4c
    3798:	15110520 	ldrne	r0, [r1, #-1312]	; 0xfffffae0
    379c:	05303a05 	ldreq	r3, [r0, #-2565]!	; 0xfffff5fb
    37a0:	18051411 	stmdane	r5, {r0, r4, sl, ip}
    37a4:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    37a8:	018c0301 	orreq	r0, ip, r1, lsl #6
    37ac:	06190501 	ldreq	r0, [r9], -r1, lsl #10
    37b0:	2e7ed503 	cdpcs	5, 7, cr13, cr14, cr3, {0}
    37b4:	01063e05 	tsteq	r6, r5, lsl #28
    37b8:	052e3c05 	streq	r3, [lr, #-3077]!	; 0xfffff3fb
    37bc:	0d030615 	stceq	6, cr0, [r3, #-84]	; 0xffffffac
    37c0:	0619052e 	ldreq	r0, [r9], -lr, lsr #10
    37c4:	4a170501 	bmi	5c4bd0 <__RAM_SIZE+0x4c4bd0>
    37c8:	30061905 	andcc	r1, r6, r5, lsl #18
    37cc:	18031505 	stmdane	r3, {r0, r2, r8, sl, ip}
    37d0:	3039053c 	eorscc	r0, r9, ip, lsr r5
    37d4:	05134605 	ldreq	r4, [r3, #-1541]	; 0xfffff9fb
    37d8:	1c051415 	cfstrsne	mvf1, [r5], {21}
    37dc:	15050106 	strne	r0, [r5, #-262]	; 0xfffffefa
    37e0:	053d3406 	ldreq	r3, [sp, #-1030]!	; 0xfffffbfa
    37e4:	2e010623 	cfmadd32cs	mvax1, mvfx0, mvfx1, mvfx3
    37e8:	02000905 	andeq	r0, r0, #81920	; 0x14000
    37ec:	03060104 	movweq	r0, #24836	; 0x6104
    37f0:	0200010f 	andeq	r0, r0, #-1073741821	; 0xc0000003
    37f4:	054a0404 	strbeq	r0, [sl, #-1028]	; 0xfffffbfc
    37f8:	4a110319 	bmi	444464 <__RAM_SIZE+0x344464>
    37fc:	05301d05 	ldreq	r1, [r0, #-3333]!	; 0xfffff2fb
    3800:	05010634 	streq	r0, [r1, #-1588]	; 0xfffff9cc
    3804:	064c0619 			; <UNDEFINED> instruction: 0x064c0619
    3808:	0611052e 	ldreq	r0, [r1], -lr, lsr #10
    380c:	3d201903 			; <UNDEFINED> instruction: 0x3d201903
    3810:	01061a05 	tsteq	r6, r5, lsl #20
    3814:	42060d05 	andmi	r0, r6, #320	; 0x140
    3818:	0616053d 			; <UNDEFINED> instruction: 0x0616053d
    381c:	060d0501 	streq	r0, [sp], -r1, lsl #10
    3820:	06110534 			; <UNDEFINED> instruction: 0x06110534
    3824:	3c0f0501 	cfstr32cc	mvfx0, [pc], {1}
    3828:	03063b05 	movweq	r3, #27397	; 0x6b05
    382c:	052e7eda 	streq	r7, [lr, #-3802]!	; 0xfffff126
    3830:	2d051520 	cfstr32cs	mvfx1, [r5, #-128]	; 0xffffff80
    3834:	176e0516 			; <UNDEFINED> instruction: 0x176e0516
    3838:	05160505 	ldreq	r0, [r6, #-1285]	; 0xfffffafb
    383c:	0d051409 	cfstrseq	mvf1, [r5, #-36]	; 0xffffffdc
    3840:	061f0532 			; <UNDEFINED> instruction: 0x061f0532
    3844:	060d0501 	streq	r0, [sp], -r1, lsl #10
    3848:	060f0524 	streq	r0, [pc], -r4, lsr #10
    384c:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    3850:	052e3103 	streq	r3, [lr, #-259]!	; 0xfffffefd
    3854:	05010622 	streq	r0, [r1, #-1570]	; 0xfffff9de
    3858:	16052013 			; <UNDEFINED> instruction: 0x16052013
    385c:	2e0b0306 	cdpcs	3, 0, cr0, cr11, cr6, {0}
    3860:	01061805 	tsteq	r6, r5, lsl #16
    3864:	03062d05 	movweq	r2, #27909	; 0x6d05
    3868:	09052e0a 	stmdbeq	r5, {r1, r3, r9, sl, fp, sp}
    386c:	2e2f3316 	mcrcs	3, 1, r3, cr15, cr6, {0}
    3870:	03040200 	movweq	r0, #16896	; 0x4200
    3874:	04020066 	streq	r0, [r2], #-102	; 0xffffff9a
    3878:	02006606 	andeq	r6, r0, #6291456	; 0x600000
    387c:	05310604 	ldreq	r0, [r1, #-1540]!	; 0xfffff9fc
    3880:	0402000d 	streq	r0, [r2], #-13
    3884:	05010606 	streq	r0, [r1, #-1542]	; 0xfffff9fa
    3888:	0402000b 	streq	r0, [r2], #-11
    388c:	0d054a06 	vstreq	s8, [r5, #-24]	; 0xffffffe8
    3890:	11053406 	tstne	r5, r6, lsl #8
    3894:	0f050106 	svceq	0x00050106
    3898:	063a053c 			; <UNDEFINED> instruction: 0x063a053c
    389c:	16150530 			; <UNDEFINED> instruction: 0x16150530
    38a0:	01062005 	tsteq	r6, r5
    38a4:	05201705 	streq	r1, [r0, #-1797]!	; 0xfffff8fb
    38a8:	0a030631 	beq	c5174 <__HEAP_SIZE+0xc4174>
    38ac:	1711052e 	ldrne	r0, [r1, -lr, lsr #10]
    38b0:	15053e59 	strne	r3, [r5, #-3673]	; 0xfffff1a7
    38b4:	13050106 	movwne	r0, #20742	; 0x5106
    38b8:	0615052e 	ldreq	r0, [r5], -lr, lsr #10
    38bc:	3c200330 	stccc	3, cr0, [r0], #-192	; 0xffffff40
    38c0:	01061705 	tsteq	r6, r5, lsl #14
    38c4:	03063505 	movweq	r3, #25861	; 0x6505
    38c8:	4205201b 	andmi	r2, r5, #27
    38cc:	14110513 	ldrne	r0, [r1], #-1299	; 0xfffffaed
    38d0:	01061805 	tsteq	r6, r5, lsl #16
    38d4:	03061905 	movweq	r1, #26885	; 0x6905
    38d8:	1d052e64 	stcne	14, cr2, [r5, #-400]	; 0xfffffe70
    38dc:	38051930 	stmdacc	r5, {r4, r5, r8, fp, ip}
    38e0:	1d050106 	stfnes	f0, [r5, #-24]	; 0xffffffe8
    38e4:	4a090306 	bmi	244504 <__RAM_SIZE+0x144504>
    38e8:	052e2006 	streq	r2, [lr, #-6]!
    38ec:	02140619 	andseq	r0, r4, #26214400	; 0x1900000
    38f0:	01010003 	tsteq	r1, r3
    38f4:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    38f8:	00000002 	andeq	r0, r0, r2
    38fc:	06b00300 	ldrteq	r0, [r0], r0, lsl #6
    3900:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    3904:	133d0609 	teqne	sp, #9437184	; 0x900000
    3908:	05144405 	ldreq	r4, [r4, #-1029]	; 0xfffffbfb
    390c:	2d051420 	cfstrscs	mvf1, [r5, #-128]	; 0xffffff80
    3910:	14090517 	strne	r0, [r9], #-1303	; 0xfffffae9
    3914:	01062205 	tsteq	r6, r5, lsl #4
    3918:	05203305 	streq	r3, [r0, #-773]!	; 0xfffffcfb
    391c:	0d052e0b 	stceq	14, cr2, [r5, #-44]	; 0xffffffd4
    3920:	17053506 	strne	r3, [r5, -r6, lsl #10]
    3924:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    3928:	0f054f06 	svceq	0x00054f06
    392c:	11050106 	tstne	r5, r6, lsl #2
    3930:	28052206 	stmdacs	r5, {r1, r2, r9, sp}
    3934:	3f050106 	svccc	0x00050106
    3938:	063c0520 	ldrteq	r0, [ip], -r0, lsr #10
    393c:	16380532 			; <UNDEFINED> instruction: 0x16380532
    3940:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    3944:	05010610 	streq	r0, [r1, #-1552]	; 0xfffff9f0
    3948:	6a03060d 	bvs	c5184 <__HEAP_SIZE+0xc4184>
    394c:	06240520 	strteq	r0, [r4], -r0, lsr #10
    3950:	203b0501 	eorscs	r0, fp, r1, lsl #10
    3954:	2f060d05 	svccs	0x00060d05
    3958:	01061505 	tsteq	r6, r5, lsl #10
    395c:	16030505 	strne	r0, [r3], -r5, lsl #10
    3960:	01002020 	tsteq	r0, r0, lsr #32
    3964:	00010501 	andeq	r0, r1, r1, lsl #10
    3968:	00000205 	andeq	r0, r0, r5, lsl #4
    396c:	d7030000 	strle	r0, [r3, -r0]
    3970:	0106010e 	tsteq	r6, lr, lsl #2
    3974:	59060505 	stmdbpl	r6, {r0, r2, r8, sl}
    3978:	05131313 	ldreq	r1, [r3, #-787]	; 0xfffffced
    397c:	050f0610 	streq	r0, [pc, #-1552]	; 3374 <__HEAP_SIZE+0x2374>
    3980:	22030611 	andcs	r0, r3, #17825792	; 0x1100000
    3984:	0628052e 	strteq	r0, [r8], -lr, lsr #10
    3988:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    398c:	4b2b0522 	blmi	ac4e1c <__RAM_SIZE+0x9c4e1c>
    3990:	05151105 	ldreq	r1, [r5, #-261]	; 0xfffffefb
    3994:	0501062e 	streq	r0, [r1, #-1582]	; 0xfffff9d2
    3998:	05240611 	streq	r0, [r4, #-1553]!	; 0xfffff9ef
    399c:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    39a0:	2d052013 	stccs	0, cr2, [r5, #-76]	; 0xffffffb4
    39a4:	200e0306 	andcs	r0, lr, r6, lsl #6
    39a8:	05151105 	ldreq	r1, [r5, #-261]	; 0xfffffefb
    39ac:	11053031 	tstne	r5, r1, lsr r0
    39b0:	06180514 			; <UNDEFINED> instruction: 0x06180514
    39b4:	01052001 	tsteq	r5, r1
    39b8:	0100d603 	tsteq	r0, r3, lsl #12
    39bc:	03061505 	movweq	r1, #25861	; 0x6505
    39c0:	052e7f97 	streq	r7, [lr, #-3991]!	; 0xfffff069
    39c4:	05010619 	streq	r0, [r1, #-1561]	; 0xfffff9e7
    39c8:	19054a17 	stmdbne	r5, {r0, r1, r2, r4, r9, fp, lr}
    39cc:	15053106 	strne	r3, [r5, #-262]	; 0xfffffefa
    39d0:	053c1803 	ldreq	r1, [ip, #-2051]!	; 0xfffff7fd
    39d4:	3d053036 	stccc	0, cr3, [r5, #-216]	; 0xffffff28
    39d8:	14150513 	ldrne	r0, [r5], #-1299	; 0xfffffaed
    39dc:	01061c05 	tsteq	r6, r5, lsl #24
    39e0:	35061505 	strcc	r1, [r6, #-1285]	; 0xfffffafb
    39e4:	0623053d 			; <UNDEFINED> instruction: 0x0623053d
    39e8:	09052e01 	stmdbeq	r5, {r0, r9, sl, fp, sp}
    39ec:	01040200 	mrseq	r0, R12_usr
    39f0:	010f0306 	tsteq	pc, r6, lsl #6
    39f4:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    39f8:	0311054a 	tsteq	r1, #310378496	; 0x12800000
    39fc:	053d4a1a 	ldreq	r4, [sp, #-2586]!	; 0xfffff5e6
    3a00:	0501061a 	streq	r0, [r1, #-1562]	; 0xfffff9e6
    3a04:	3d43060d 	stclcc	6, cr0, [r3, #-52]	; 0xffffffcc
    3a08:	01061605 	tsteq	r6, r5, lsl #12
    3a0c:	30060d05 	andcc	r0, r6, r5, lsl #26
    3a10:	01061105 	tsteq	r6, r5, lsl #2
    3a14:	053c0f05 	ldreq	r0, [ip, #-3845]!	; 0xfffff0fb
    3a18:	fb03063c 	blx	c5312 <__HEAP_SIZE+0xc4312>
    3a1c:	20052e7e 	andcs	r2, r5, lr, ror lr
    3a20:	16670515 			; <UNDEFINED> instruction: 0x16670515
    3a24:	05176e05 	ldreq	r6, [r7, #-3589]	; 0xfffff1fb
    3a28:	09051605 	stmdbeq	r5, {r0, r2, r9, sl, ip}
    3a2c:	300d0514 	andcc	r0, sp, r4, lsl r5
    3a30:	01061f05 	tsteq	r6, r5, lsl #30
    3a34:	24060d05 	strcs	r0, [r6], #-3333	; 0xfffff2fb
    3a38:	01060f05 	tsteq	r6, r5, lsl #30
    3a3c:	03061105 	movweq	r1, #24837	; 0x6105
    3a40:	22052e28 	andcs	r2, r5, #40, 28	; 0x280
    3a44:	13050106 	movwne	r0, #20742	; 0x5106
    3a48:	06160520 	ldreq	r0, [r6], -r0, lsr #10
    3a4c:	052e0b03 	streq	r0, [lr, #-2819]!	; 0xfffff4fd
    3a50:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    3a54:	0b03062d 	bleq	c5310 <__HEAP_SIZE+0xc4310>
    3a58:	1609052e 	strne	r0, [r9], -lr, lsr #10
    3a5c:	002e2f33 	eoreq	r2, lr, r3, lsr pc
    3a60:	66030402 	strvs	r0, [r3], -r2, lsl #8
    3a64:	06040200 	streq	r0, [r4], -r0, lsl #4
    3a68:	04020066 	streq	r0, [r2], #-102	; 0xffffff9a
    3a6c:	0d053106 	stfeqs	f3, [r5, #-24]	; 0xffffffe8
    3a70:	06040200 	streq	r0, [r4], -r0, lsl #4
    3a74:	0b050106 	bleq	143e94 <__RAM_SIZE+0x43e94>
    3a78:	06040200 	streq	r0, [r4], -r0, lsl #4
    3a7c:	060d054a 	streq	r0, [sp], -sl, asr #10
    3a80:	06110532 			; <UNDEFINED> instruction: 0x06110532
    3a84:	3c0f0501 	cfstr32cc	mvfx0, [pc], {1}
    3a88:	30063705 	andcc	r3, r6, r5, lsl #14
    3a8c:	59131105 	ldmdbpl	r3, {r0, r2, r8, ip}
    3a90:	0615053e 			; <UNDEFINED> instruction: 0x0615053e
    3a94:	2e130501 	cfmul32cs	mvfx0, mvfx3, mvfx1
    3a98:	30061505 	andcc	r1, r6, r5, lsl #10
    3a9c:	03061805 	movweq	r1, #26629	; 0x6805
    3aa0:	02023c1b 	andeq	r3, r2, #6912	; 0x1b00
    3aa4:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    3aa8:	02050001 	andeq	r0, r5, #1
    3aac:	00000000 	andeq	r0, r0, r0
    3ab0:	010ff503 	tsteq	pc, r3, lsl #10	; <UNPREDICTABLE>
    3ab4:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    3ab8:	13135906 	tstne	r3, #98304	; 0x18000
    3abc:	05145305 	ldreq	r5, [r4, #-773]	; 0xfffffcfb
    3ac0:	5f05141c 	svcpl	0x0005141c
    3ac4:	032f0513 			; <UNDEFINED> instruction: 0x032f0513
    3ac8:	05050110 	streq	r0, [r5, #-272]	; 0xfffffef0
    3acc:	062e0517 			; <UNDEFINED> instruction: 0x062e0517
    3ad0:	09052e01 	stmdbeq	r5, {r0, r9, sl, fp, sp}
    3ad4:	1b052206 	blne	14c2f4 <__RAM_SIZE+0x4c2f4>
    3ad8:	09050106 	stmdbeq	r5, {r1, r2, r8}
    3adc:	0b052306 	bleq	14c6fc <__RAM_SIZE+0x4c6fc>
    3ae0:	15050106 	strne	r0, [r5, #-262]	; 0xfffffefa
    3ae4:	05203303 	streq	r3, [r0, #-771]!	; 0xfffffcfd
    3ae8:	0521063a 	streq	r0, [r1, #-1594]!	; 0xfffff9c6
    3aec:	30051505 	andcc	r1, r5, r5, lsl #10
    3af0:	1405053e 	strne	r0, [r5], #-1342	; 0xfffffac2
    3af4:	13060105 	movwne	r0, #24837	; 0x6105
    3af8:	03060d05 	movweq	r0, #27909	; 0x6d05
    3afc:	1a053c46 	bne	152c1c <__RAM_SIZE+0x52c1c>
    3b00:	33050106 	movwcc	r0, #20742	; 0x5106
    3b04:	0d054c06 	stceq	12, cr4, [r5, #-24]	; 0xffffffe8
    3b08:	062e0614 			; <UNDEFINED> instruction: 0x062e0614
    3b0c:	062a052f 	strteq	r0, [sl], -pc, lsr #10
    3b10:	20280501 	eorcs	r0, r8, r1, lsl #10
    3b14:	26060d05 	strcs	r0, [r6], -r5, lsl #26
    3b18:	01060f05 	tsteq	r6, r5, lsl #30
    3b1c:	3e061105 	adfccs	f1, f6, f5
    3b20:	01061505 	tsteq	r6, r5, lsl #10
    3b24:	05201305 	streq	r1, [r0, #-773]!	; 0xfffffcfb
    3b28:	20200315 	eorcs	r0, r0, r5, lsl r3
    3b2c:	62030620 	andvs	r0, r3, #32, 12	; 0x2000000
    3b30:	06190520 	ldreq	r0, [r9], -r0, lsr #10
    3b34:	4a170501 	bmi	5c4f40 <__RAM_SIZE+0x4c4f40>
    3b38:	24061905 	strcs	r1, [r6], #-2309	; 0xfffff6fb
    3b3c:	01061b05 	tsteq	r6, r5, lsl #22
    3b40:	3e061d05 	cdpcc	13, 0, cr1, cr6, cr5, {0}
    3b44:	01063805 	tsteq	r6, r5, lsl #16
    3b48:	06110520 	ldreq	r0, [r1], -r0, lsr #10
    3b4c:	013c1503 	teqeq	ip, r3, lsl #10
    3b50:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    3b54:	02002e01 	andeq	r2, r0, #1, 28
    3b58:	00010104 	andeq	r0, r1, r4, lsl #2
    3b5c:	06010402 	streq	r0, [r1], -r2, lsl #8
    3b60:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    3b64:	15052e01 	strne	r2, [r5, #-3585]	; 0xfffff1ff
    3b68:	01040200 	mrseq	r0, R12_usr
    3b6c:	04020031 	streq	r0, [r2], #-49	; 0xffffffcf
    3b70:	20202001 	eorcs	r2, r0, r1
    3b74:	20202020 	eorcs	r2, r0, r0, lsr #32
    3b78:	01000102 	tsteq	r0, r2, lsl #2
    3b7c:	00010501 	andeq	r0, r1, r1, lsl #10
    3b80:	00000205 	andeq	r0, r0, r5, lsl #4
    3b84:	d8030000 	stmdale	r3, {}	; <UNPREDICTABLE>
    3b88:	01060110 	tsteq	r6, r0, lsl r1
    3b8c:	3d060505 	cfstr32cc	mvfx0, [r6, #-20]	; 0xffffffec
    3b90:	05131313 	ldreq	r1, [r3, #-787]	; 0xfffffced
    3b94:	1c051435 	cfstrsne	mvf1, [r5], {53}	; 0x35
    3b98:	135f0514 	cmpne	pc, #20, 10	; 0x5000000
    3b9c:	05132d05 	ldreq	r2, [r3, #-3333]	; 0xfffff2fb
    3ba0:	0110032f 	tsteq	r0, pc, lsr #6
    3ba4:	05170505 	ldreq	r0, [r7, #-1285]	; 0xfffffafb
    3ba8:	2e01062e 	cfmadd32cs	mvax1, mvfx0, mvfx1, mvfx14
    3bac:	23060905 	movwcs	r0, #26885	; 0x6905
    3bb0:	01061405 	tsteq	r6, r5, lsl #8
    3bb4:	05200b05 	streq	r0, [r0, #-2821]!	; 0xfffff4fb
    3bb8:	200e0315 	andcs	r0, lr, r5, lsl r3
    3bbc:	21063705 	tstcs	r6, r5, lsl #14
    3bc0:	05150505 	ldreq	r0, [r5, #-1285]	; 0xfffffafb
    3bc4:	05053e2d 	streq	r3, [r5, #-3629]	; 0xfffff1d3
    3bc8:	06010514 			; <UNDEFINED> instruction: 0x06010514
    3bcc:	06300513 			; <UNDEFINED> instruction: 0x06300513
    3bd0:	052e6b03 	streq	r6, [lr, #-2819]!	; 0xfffff4fd
    3bd4:	2405160d 	strcs	r1, [r5], #-1549	; 0xfffff9f3
    3bd8:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    3bdc:	2e062106 	adfcss	f2, f6, f6
    3be0:	2a052f06 	bcs	14f800 <__RAM_SIZE+0x4f800>
    3be4:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    3be8:	15052206 	strne	r2, [r5, #-518]	; 0xfffffdfa
    3bec:	02200106 	eoreq	r0, r0, #-2147483647	; 0x80000001
    3bf0:	01010001 	tsteq	r1, r1
    3bf4:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    3bf8:	00000002 	andeq	r0, r0, r2
    3bfc:	11950300 	orrsne	r0, r5, r0, lsl #6
    3c00:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    3c04:	052f0605 	streq	r0, [pc, #-1541]!	; 3607 <__HEAP_SIZE+0x2607>
    3c08:	1b051430 	blne	148cd0 <__RAM_SIZE+0x48cd0>
    3c0c:	14050514 	strne	r0, [r5], #-1300	; 0xfffffaec
    3c10:	05300905 	ldreq	r0, [r0, #-2309]!	; 0xfffff6fb
    3c14:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
    3c18:	05220605 	streq	r0, [r2, #-1541]!	; 0xfffff9fb
    3c1c:	05053033 	streq	r3, [r5, #-51]	; 0xffffffcd
    3c20:	06010514 			; <UNDEFINED> instruction: 0x06010514
    3c24:	01002e13 	tsteq	r0, r3, lsl lr
    3c28:	00010501 	andeq	r0, r1, r1, lsl #10
    3c2c:	00000205 	andeq	r0, r0, r5, lsl #4
    3c30:	a9030000 	stmdbge	r3, {}	; <UNPREDICTABLE>
    3c34:	01060111 	tsteq	r6, r1, lsl r1
    3c38:	2f060505 	svccs	0x00060505
    3c3c:	14300513 	ldrtne	r0, [r0], #-1299	; 0xfffffaed
    3c40:	05141c05 	ldreq	r1, [r4, #-3077]	; 0xfffff3fb
    3c44:	09051405 	stmdbeq	r5, {r0, r2, sl, ip}
    3c48:	062d0530 			; <UNDEFINED> instruction: 0x062d0530
    3c4c:	20410501 	subcs	r0, r1, r1, lsl #10
    3c50:	05201205 	streq	r1, [r0, #-517]!	; 0xfffffdfb
    3c54:	05220605 	streq	r0, [r2, #-1541]!	; 0xfffff9fb
    3c58:	05053033 	streq	r3, [r5, #-51]	; 0xffffffcd
    3c5c:	06010514 			; <UNDEFINED> instruction: 0x06010514
    3c60:	01002e13 	tsteq	r0, r3, lsl lr
    3c64:	00010501 	andeq	r0, r1, r1, lsl #10
    3c68:	00000205 	andeq	r0, r0, r5, lsl #4
    3c6c:	be030000 	cdplt	0, 0, cr0, cr3, cr0, {0}
    3c70:	05050111 	streq	r0, [r5, #-273]	; 0xfffffeef
    3c74:	37051313 	smladcc	r5, r3, r3, r1
    3c78:	141c0514 	ldrne	r0, [ip], #-1300	; 0xfffffaec
    3c7c:	05130505 	ldreq	r0, [r3, #-1285]	; 0xfffffafb
    3c80:	0501060e 	streq	r0, [r1, #-1550]	; 0xfffff9f2
    3c84:	0522063a 	streq	r0, [r2, #-1594]!	; 0xfffff9c6
    3c88:	01051405 	tsteq	r5, r5, lsl #8
    3c8c:	01021306 	tsteq	r2, r6, lsl #6
    3c90:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    3c94:	02050001 	andeq	r0, r5, #1
    3c98:	00000000 	andeq	r0, r0, r0
    3c9c:	0111ce03 	tsteq	r1, r3, lsl #28
    3ca0:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    3ca4:	26052106 	strcs	r2, [r5], -r6, lsl #2
    3ca8:	141c0514 	ldrne	r0, [ip], #-1300	; 0xfffffaec
    3cac:	05132105 	ldreq	r2, [r3, #-261]	; 0xfffffefb
    3cb0:	01120309 	tsteq	r2, r9, lsl #6
    3cb4:	01061405 	tsteq	r6, r5, lsl #8
    3cb8:	052e0b05 	streq	r0, [lr, #-2821]!	; 0xfffff4fb
    3cbc:	20120301 	andscs	r0, r2, r1, lsl #6
    3cc0:	03060d05 	movweq	r0, #27909	; 0x6d05
    3cc4:	25052070 	strcs	r2, [r5, #-112]	; 0xffffff90
    3cc8:	031f0532 	tsteq	pc, #209715200	; 0xc800000
    3ccc:	0105010b 	tsteq	r5, fp, lsl #2
    3cd0:	01021306 	tsteq	r2, r6, lsl #6
    3cd4:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    3cd8:	02050001 	andeq	r0, r5, #1
    3cdc:	00000000 	andeq	r0, r0, r0
    3ce0:	0112a703 	tsteq	r2, r3, lsl #14
    3ce4:	05133105 	ldreq	r3, [r3, #-261]	; 0xfffffefb
    3ce8:	05051450 	streq	r1, [r5, #-1104]	; 0xfffffbb0
    3cec:	06010514 			; <UNDEFINED> instruction: 0x06010514
    3cf0:	01022013 	tsteq	r2, r3, lsl r0
    3cf4:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    3cf8:	02050001 	andeq	r0, r5, #1
    3cfc:	00000000 	andeq	r0, r0, r0
    3d00:	0112b103 	tsteq	r2, r3, lsl #2
    3d04:	05132f05 	ldreq	r2, [r3, #-3845]	; 0xfffff0fb
    3d08:	0505144c 	streq	r1, [r5, #-1100]	; 0xfffffbb4
    3d0c:	06010514 			; <UNDEFINED> instruction: 0x06010514
    3d10:	01022013 	tsteq	r2, r3, lsl r0
    3d14:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    3d18:	02050001 	andeq	r0, r5, #1
    3d1c:	00000000 	andeq	r0, r0, r0
    3d20:	0114cb03 	tsteq	r4, r3, lsl #22
    3d24:	13130505 	tstne	r3, #20971520	; 0x1400000
    3d28:	05143305 	ldreq	r3, [r4, #-773]	; 0xfffffcfb
    3d2c:	0505141c 	streq	r1, [r5, #-1052]	; 0xfffffbe4
    3d30:	06100514 			; <UNDEFINED> instruction: 0x06100514
    3d34:	20070501 	andcs	r0, r7, r1, lsl #10
    3d38:	20221105 	eorcs	r1, r2, r5, lsl #2
    3d3c:	06350524 	ldrteq	r0, [r5], -r4, lsr #10
    3d40:	14050523 	strne	r0, [r5], #-1315	; 0xfffffadd
    3d44:	13060105 	movwne	r0, #24837	; 0x6105
    3d48:	01000102 	tsteq	r0, r2, lsl #2
    3d4c:	00010501 	andeq	r0, r1, r1, lsl #10
    3d50:	00000205 	andeq	r0, r0, r5, lsl #4
    3d54:	f8030000 			; <UNDEFINED> instruction: 0xf8030000
    3d58:	05050114 	streq	r0, [r5, #-276]	; 0xfffffeec
    3d5c:	32051313 	andcc	r1, r5, #1275068416	; 0x4c000000
    3d60:	141c0514 	ldrne	r0, [ip], #-1300	; 0xfffffaec
    3d64:	05140505 	ldreq	r0, [r4, #-1285]	; 0xfffffafb
    3d68:	05010610 	streq	r0, [r1, #-1552]	; 0xfffff9f0
    3d6c:	0705202e 	streq	r2, [r5, -lr, lsr #32]
    3d70:	34110520 	ldrcc	r0, [r1], #-1312	; 0xfffffae0
    3d74:	23063405 	movwcs	r3, #25605	; 0x6405
    3d78:	05140505 	ldreq	r0, [r4, #-1285]	; 0xfffffafb
    3d7c:	05130601 	ldreq	r0, [r3, #-1537]	; 0xfffff9ff
    3d80:	20760311 	rsbscs	r0, r6, r1, lsl r3
    3d84:	00010220 	andeq	r0, r1, r0, lsr #4
    3d88:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    3d8c:	cc020500 	cfstr32gt	mvfx0, [r2], {-0}
    3d90:	03100023 	tsteq	r0, #35	; 0x23
    3d94:	060118be 			; <UNDEFINED> instruction: 0x060118be
    3d98:	06090501 	streq	r0, [r9], -r1, lsl #10
    3d9c:	145d054b 	ldrbne	r0, [sp], #-1355	; 0xfffffab5
    3da0:	10030905 	andne	r0, r3, r5, lsl #18
    3da4:	02002e01 	andeq	r2, r0, #1, 28
    3da8:	00660304 	rsbeq	r0, r6, r4, lsl #6
    3dac:	66060402 	strvs	r0, [r6], -r2, lsl #8
    3db0:	06040200 	streq	r0, [r4], -r0, lsl #4
    3db4:	00140530 	andseq	r0, r4, r0, lsr r5
    3db8:	06060402 	streq	r0, [r6], -r2, lsl #8
    3dbc:	000b0501 	andeq	r0, fp, r1, lsl #10
    3dc0:	20060402 	andcs	r0, r6, r2, lsl #8
    3dc4:	27062505 	strcs	r2, [r6, -r5, lsl #10]
    3dc8:	05150905 	ldreq	r0, [r5, #-2309]	; 0xfffff6fb
    3dcc:	05053e35 	streq	r3, [r5, #-3637]	; 0xfffff1cb
    3dd0:	09051306 	stmdbeq	r5, {r1, r2, r8, r9, ip}
    3dd4:	01040200 	mrseq	r0, R12_usr
    3dd8:	20710306 	rsbscs	r0, r1, r6, lsl #6
    3ddc:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    3de0:	4f0d054a 	svcmi	0x000d054a
    3de4:	01000702 	tsteq	r0, r2, lsl #14
    3de8:	00050501 	andeq	r0, r5, r1, lsl #10
    3dec:	00000205 	andeq	r0, r0, r5, lsl #4
    3df0:	e8030000 	stmda	r3, {}	; <UNPREDICTABLE>
    3df4:	01060118 	tsteq	r6, r8, lsl r1
    3df8:	21060905 	tstcs	r6, r5, lsl #18
    3dfc:	05143905 	ldreq	r3, [r4, #-2309]	; 0xfffff6fb
    3e00:	13051409 	movwne	r1, #21513	; 0x5409
    3e04:	2f050106 	svccs	0x00050106
    3e08:	09054c06 	stmdbeq	r5, {r1, r2, sl, fp, lr}
    3e0c:	06050514 			; <UNDEFINED> instruction: 0x06050514
    3e10:	00010213 	andeq	r0, r1, r3, lsl r2
    3e14:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    3e18:	00020500 	andeq	r0, r2, r0, lsl #10
    3e1c:	03000000 	movweq	r0, #0
    3e20:	060118fb 			; <UNDEFINED> instruction: 0x060118fb
    3e24:	06090501 	streq	r0, [r9], -r1, lsl #10
    3e28:	1442053d 	strbne	r0, [r2], #-1341	; 0xfffffac3
    3e2c:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    3e30:	3405300d 	strcc	r3, [r5], #-13
    3e34:	0f050106 	svceq	0x00050106
    3e38:	23190520 	tstcs	r9, #32, 10	; 0x8000000
    3e3c:	03060905 	movweq	r0, #26885	; 0x6905
    3e40:	2e05200e 	cdpcs	0, 0, cr2, cr5, cr14, {0}
    3e44:	14090530 	strne	r0, [r9], #-1328	; 0xfffffad0
    3e48:	13060505 	movwne	r0, #25861	; 0x6505
    3e4c:	03061205 	movweq	r1, #25093	; 0x6205
    3e50:	39052e6f 	stmdbcc	r5, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp}
    3e54:	14050106 	strne	r0, [r5], #-262	; 0xfffffefa
    3e58:	06110520 	ldreq	r0, [r1], -r0, lsr #10
    3e5c:	064a0528 	strbeq	r0, [sl], -r8, lsr #10
    3e60:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    3e64:	06190521 	ldreq	r0, [r9], -r1, lsr #10
    3e68:	201b2001 	andscs	r2, fp, r1
    3e6c:	01000102 	tsteq	r0, r2, lsl #2
    3e70:	00050501 	andeq	r0, r5, r1, lsl #10
    3e74:	00000205 	andeq	r0, r0, r5, lsl #4
    3e78:	a1030000 	mrsge	r0, (UNDEF: 3)
    3e7c:	09050119 	stmdbeq	r5, {r0, r3, r4, r8}
    3e80:	47051313 	smladmi	r5, r3, r3, r1
    3e84:	14090514 	strne	r0, [r9], #-1300	; 0xfffffaec
    3e88:	01061f05 	tsteq	r6, r5, lsl #30
    3e8c:	05200b05 	streq	r0, [r0, #-2821]!	; 0xfffff4fb
    3e90:	05053115 	streq	r3, [r5, #-277]	; 0xfffffeeb
    3e94:	03201703 			; <UNDEFINED> instruction: 0x03201703
    3e98:	0e052060 	cdpeq	0, 0, cr2, cr5, cr0, {3}
    3e9c:	2e0b0306 	cdpcs	3, 0, cr0, cr11, cr6, {0}
    3ea0:	01062405 	tsteq	r6, r5, lsl #8
    3ea4:	05201005 	streq	r1, [r0, #-5]!
    3ea8:	33052515 	movwcc	r2, #21781	; 0x5515
    3eac:	200d0306 	andcs	r0, sp, r6, lsl #6
    3eb0:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    3eb4:	05130605 	ldreq	r0, [r3, #-1541]	; 0xfffff9fb
    3eb8:	7403060d 	strvc	r0, [r3], #-1549	; 0xfffff9f3
    3ebc:	31110520 	tstcc	r1, r0, lsr #10
    3ec0:	01063905 	tsteq	r6, r5, lsl #18
    3ec4:	30060d05 	andcc	r0, r6, r5, lsl #26
    3ec8:	0615052f 	ldreq	r0, [r5], -pc, lsr #10
    3ecc:	00020201 	andeq	r0, r2, r1, lsl #4
    3ed0:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    3ed4:	00020500 	andeq	r0, r2, r0, lsl #10
    3ed8:	03000000 	movweq	r0, #0
    3edc:	060119ca 	streq	r1, [r1], -sl, asr #19
    3ee0:	06090501 	streq	r0, [r9], -r1, lsl #10
    3ee4:	0620053d 			; <UNDEFINED> instruction: 0x0620053d
    3ee8:	06420501 	strbeq	r0, [r2], -r1, lsl #10
    3eec:	14090530 	strne	r0, [r9], #-1328	; 0xfffffad0
    3ef0:	01061205 	tsteq	r6, r5, lsl #4
    3ef4:	06330520 	ldrteq	r0, [r3], -r0, lsr #10
    3ef8:	14090530 	strne	r0, [r9], #-1328	; 0xfffffad0
    3efc:	13060505 	movwne	r0, #25861	; 0x6505
    3f00:	01000402 	tsteq	r0, r2, lsl #8
    3f04:	00050501 	andeq	r0, r5, r1, lsl #10
    3f08:	00000205 	andeq	r0, r0, r5, lsl #4
    3f0c:	dc030000 	stcle	0, cr0, [r3], {-0}
    3f10:	01060119 	tsteq	r6, r9, lsl r1
    3f14:	2f060905 	svccs	0x00060905
    3f18:	01062005 	tsteq	r6, r5
    3f1c:	30063b05 	andcc	r3, r6, r5, lsl #22
    3f20:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    3f24:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
    3f28:	053e063a 	ldreq	r0, [lr, #-1594]!	; 0xfffff9c6
    3f2c:	05051409 	streq	r1, [r5, #-1033]	; 0xfffffbf7
    3f30:	04021306 	streq	r1, [r2], #-774	; 0xfffffcfa
    3f34:	24010100 	strcs	r0, [r1], #-256	; 0xffffff00
    3f38:	03000032 	movweq	r0, #50	; 0x32
    3f3c:	0002aa00 	andeq	sl, r2, r0, lsl #20
    3f40:	fb010200 	blx	4474a <__HEAP_SIZE+0x4374a>
    3f44:	01000d0e 	tsteq	r0, lr, lsl #26
    3f48:	00010101 	andeq	r0, r1, r1, lsl #2
    3f4c:	00010000 	andeq	r0, r1, r0
    3f50:	2e2e0100 	sufcse	f0, f6, f0
    3f54:	2f2e2e2f 	svccs	0x002e2e2f
    3f58:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 3ea8 <__HEAP_SIZE+0x2ea8>
    3f5c:	74726269 	ldrbtvc	r6, [r2], #-617	; 0xfffffd97
    3f60:	462f736f 	strtmi	r7, [pc], -pc, ror #6
    3f64:	52656572 	rsbpl	r6, r5, #478150656	; 0x1c800000
    3f68:	00534f54 	subseq	r4, r3, r4, asr pc
    3f6c:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
    3f70:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    3f74:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
    3f78:	705c6e6f 	subsvc	r6, ip, pc, ror #28
    3f7c:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
    3f80:	615c6d61 	cmpvs	ip, r1, ror #26
    3f84:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
    3f88:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
    3f8c:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
    3f90:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    3f94:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    3f98:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    3f9c:	2e30312d 	rsfcssp	f3, f0, #5.0
    3fa0:	30322d33 	eorscc	r2, r2, r3, lsr sp
    3fa4:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
    3fa8:	696c5c30 	stmdbvs	ip!, {r4, r5, sl, fp, ip, lr}^
    3fac:	63675c62 	cmnvs	r7, #25088	; 0x6200
    3fb0:	72615c63 	rsbvc	r5, r1, #25344	; 0x6300
    3fb4:	6f6e2d6d 	svcvs	0x006e2d6d
    3fb8:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    3fbc:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
    3fc0:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
    3fc4:	695c312e 	ldmdbvs	ip, {r1, r2, r3, r5, r8, ip, sp}^
    3fc8:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    3fcc:	63006564 	movwvs	r6, #1380	; 0x564
    3fd0:	73755c3a 	cmnvc	r5, #14848	; 0x3a00
    3fd4:	5c737265 	lfmpl	f7, 2, [r3], #-404	; 0xfffffe6c
    3fd8:	6f646978 	svcvs	0x00646978
    3fdc:	72705c6e 	rsbsvc	r5, r0, #28160	; 0x6e00
    3fe0:	6172676f 	cmnvs	r2, pc, ror #14
    3fe4:	72615c6d 	rsbvc	r5, r1, #27904	; 0x6d00
    3fe8:	63675f6d 	cmnvs	r7, #436	; 0x1b4
    3fec:	63675c63 	cmnvs	r7, #25344	; 0x6300
    3ff0:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
    3ff4:	6f6e2d6d 	svcvs	0x006e2d6d
    3ff8:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    3ffc:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
    4000:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
    4004:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
    4008:	30312e31 	eorscc	r2, r1, r1, lsr lr
    400c:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    4010:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    4014:	61652d65 	cmnvs	r5, r5, ror #26
    4018:	695c6962 	ldmdbvs	ip, {r1, r5, r6, r8, fp, sp, lr}^
    401c:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    4020:	6d5c6564 	cfldr64vs	mvdx6, [ip, #-400]	; 0xfffffe70
    4024:	69686361 	stmdbvs	r8!, {r0, r5, r6, r8, r9, sp, lr}^
    4028:	6300656e 	movwvs	r6, #1390	; 0x56e
    402c:	73755c3a 	cmnvc	r5, #14848	; 0x3a00
    4030:	5c737265 	lfmpl	f7, 2, [r3], #-404	; 0xfffffe6c
    4034:	6f646978 	svcvs	0x00646978
    4038:	72705c6e 	rsbsvc	r5, r0, #28160	; 0x6e00
    403c:	6172676f 	cmnvs	r2, pc, ror #14
    4040:	72615c6d 	rsbvc	r5, r1, #27904	; 0x6d00
    4044:	63675f6d 	cmnvs	r7, #436	; 0x1b4
    4048:	63675c63 	cmnvs	r7, #25344	; 0x6300
    404c:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
    4050:	6f6e2d6d 	svcvs	0x006e2d6d
    4054:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    4058:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
    405c:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
    4060:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
    4064:	30312e31 	eorscc	r2, r1, r1, lsr lr
    4068:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    406c:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    4070:	61652d65 	cmnvs	r5, r5, ror #26
    4074:	695c6962 	ldmdbvs	ip, {r1, r5, r6, r8, fp, sp, lr}^
    4078:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    407c:	735c6564 	cmpvc	ip, #100, 10	; 0x19000000
    4080:	2e007379 	mcrcs	3, 0, r7, cr0, cr9, {3}
    4084:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    4088:	2f2e2e2f 	svccs	0x002e2e2f
    408c:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
    4090:	2f736f74 	svccs	0x00736f74
    4094:	65657246 	strbvs	r7, [r5, #-582]!	; 0xfffffdba
    4098:	534f5452 	movtpl	r5, #62546	; 0xf452
    409c:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    40a0:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    40a4:	2f2e2e00 	svccs	0x002e2e00
    40a8:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    40ac:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    40b0:	6f747262 	svcvs	0x00747262
    40b4:	72462f73 	subvc	r2, r6, #460	; 0x1cc
    40b8:	54526565 	ldrbpl	r6, [r2], #-1381	; 0xfffffa9b
    40bc:	702f534f 	eorvc	r5, pc, pc, asr #6
    40c0:	6174726f 	cmnvs	r4, pc, ror #4
    40c4:	2f656c62 	svccs	0x00656c62
    40c8:	2f434347 	svccs	0x00434347
    40cc:	5f4d5241 	svcpl	0x004d5241
    40d0:	33334d43 	teqcc	r3, #4288	; 0x10c0
    40d4:	5a544e5f 	bpl	1517a58 <__RAM_SIZE+0x1417a58>
    40d8:	6e6f6e2f 	cdpvs	14, 6, cr6, cr15, cr15, {1}
    40dc:	6365735f 	cmnvs	r5, #2080374785	; 0x7c000001
    40e0:	00657275 	rsbeq	r7, r5, r5, ror r2
    40e4:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
    40e8:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    40ec:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
    40f0:	705c6e6f 	subsvc	r6, ip, pc, ror #28
    40f4:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
    40f8:	615c6d61 	cmpvs	ip, r1, ror #26
    40fc:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
    4100:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
    4104:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
    4108:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    410c:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    4110:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    4114:	2e30312d 	rsfcssp	f3, f0, #5.0
    4118:	30322d33 	eorscc	r2, r2, r3, lsr sp
    411c:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
    4120:	72615c30 	rsbvc	r5, r1, #48, 24	; 0x3000
    4124:	6f6e2d6d 	svcvs	0x006e2d6d
    4128:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    412c:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
    4130:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    4134:	00656475 	rsbeq	r6, r5, r5, ror r4
    4138:	73617400 	cmnvc	r1, #0, 8
    413c:	632e736b 			; <UNDEFINED> instruction: 0x632e736b
    4140:	00000100 	andeq	r0, r0, r0, lsl #2
    4144:	64647473 	strbtvs	r7, [r4], #-1139	; 0xfffffb8d
    4148:	682e6665 	stmdavs	lr!, {r0, r2, r5, r6, r9, sl, sp, lr}
    414c:	00000200 	andeq	r0, r0, r0, lsl #4
    4150:	6665645f 			; <UNDEFINED> instruction: 0x6665645f
    4154:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
    4158:	7079745f 	rsbsvc	r7, r9, pc, asr r4
    415c:	682e7365 	stmdavs	lr!, {r0, r2, r5, r6, r8, r9, ip, sp, lr}
    4160:	00000300 	andeq	r0, r0, r0, lsl #6
    4164:	6474735f 	ldrbtvs	r7, [r4], #-863	; 0xfffffca1
    4168:	2e746e69 	cdpcs	14, 7, cr6, cr4, cr9, {3}
    416c:	00040068 	andeq	r0, r4, r8, rrx
    4170:	6f727000 	svcvs	0x00727000
    4174:	6665646a 	strbtvs	r6, [r5], -sl, ror #8
    4178:	00682e73 	rsbeq	r2, r8, r3, ror lr
    417c:	70000005 	andvc	r0, r0, r5
    4180:	6d74726f 	lfmvs	f7, 2, [r4, #-444]!	; 0xfffffe44
    4184:	6f726361 	svcvs	0x00726361
    4188:	6d6d6f63 	stclvs	15, cr6, [sp, #-396]!	; 0xfffffe74
    418c:	682e6e6f 	stmdavs	lr!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}
    4190:	00000600 	andeq	r0, r0, r0, lsl #12
    4194:	65657246 	strbvs	r7, [r5, #-582]!	; 0xfffffdba
    4198:	534f5452 	movtpl	r5, #62546	; 0xf452
    419c:	0500682e 	streq	r6, [r0, #-2094]	; 0xfffff7d2
    41a0:	696c0000 	stmdbvs	ip!, {}^	; <UNPREDICTABLE>
    41a4:	682e7473 	stmdavs	lr!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}
    41a8:	00000500 	andeq	r0, r0, r0, lsl #10
    41ac:	6b736174 	blvs	1cdc784 <__RAM_SIZE+0x1bdc784>
    41b0:	0500682e 	streq	r6, [r0, #-2094]	; 0xfffff7d2
    41b4:	6f700000 	svcvs	0x00700000
    41b8:	62617472 	rsbvs	r7, r1, #1912602624	; 0x72000000
    41bc:	682e656c 	stmdavs	lr!, {r2, r3, r5, r6, r8, sl, sp, lr}
    41c0:	00000500 	andeq	r0, r0, r0, lsl #10
    41c4:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
    41c8:	682e7372 	stmdavs	lr!, {r1, r4, r5, r6, r8, r9, ip, sp, lr}
    41cc:	00000500 	andeq	r0, r0, r0, lsl #10
    41d0:	69727473 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
    41d4:	682e676e 	stmdavs	lr!, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}
    41d8:	00000700 	andeq	r0, r0, r0, lsl #14
    41dc:	6975623c 	ldmdbvs	r5!, {r2, r3, r4, r5, r9, sp, lr}^
    41e0:	692d746c 	pushvs	{r2, r3, r5, r6, sl, ip, sp, lr}
    41e4:	00003e6e 	andeq	r3, r0, lr, ror #28
    41e8:	05000000 	streq	r0, [r0, #-0]
    41ec:	02050005 	andeq	r0, r5, #5
    41f0:	00000000 	andeq	r0, r0, r0
    41f4:	0119d303 	tsteq	r9, r3, lsl #6
    41f8:	13130905 	tstne	r3, #81920	; 0x14000
    41fc:	05181e05 	ldreq	r1, [r8, #-3589]	; 0xfffff1fb
    4200:	0d051509 	cfstr32eq	mvfx1, [r5, #-36]	; 0xffffffdc
    4204:	0b050106 	bleq	144624 <__RAM_SIZE+0x44624>
    4208:	03140520 	tsteq	r4, #32, 10	; 0x8000000
    420c:	05203c76 	streq	r3, [r0, #-3190]!	; 0xfffff38a
    4210:	0d03060d 	stceq	6, cr0, [r3, #-52]	; 0xffffffcc
    4214:	06110520 	ldreq	r0, [r1], -r0, lsr #10
    4218:	200f0501 	andcs	r0, pc, r1, lsl #10
    421c:	73031405 	movwvc	r1, #13317	; 0x3405
    4220:	1105203c 	tstne	r5, ip, lsr r0
    4224:	20110306 	andscs	r0, r1, r6, lsl #6
    4228:	01061305 	tsteq	r6, r5, lsl #6
    422c:	6f031405 	svcvs	0x00031405
    4230:	1d052020 	stcne	0, cr2, [r5, #-128]	; 0xffffff80
    4234:	20200306 	eorcs	r0, r0, r6, lsl #6
    4238:	01063505 	tsteq	r6, r5, lsl #10
    423c:	054a1f05 	strbeq	r1, [sl, #-3845]	; 0xfffff0fb
    4240:	0402006e 	streq	r0, [r2], #-110	; 0xffffff92
    4244:	052c0602 	streq	r0, [ip, #-1538]!	; 0xfffff9fe
    4248:	0402006f 	streq	r0, [r2], #-111	; 0xffffff91
    424c:	00010602 	andeq	r0, r1, r2, lsl #12
    4250:	20020402 	andcs	r0, r2, r2, lsl #8
    4254:	05202005 	streq	r2, [r0, #-5]!
    4258:	04020034 	streq	r0, [r2], #-52	; 0xffffffcc
    425c:	05200601 	streq	r0, [r0, #-1537]!	; 0xfffff9ff
    4260:	04020019 	streq	r0, [r2], #-25	; 0xffffffe7
    4264:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    4268:	05202c21 	streq	r2, [r0, #-3105]!	; 0xfffff3df
    426c:	05202629 	streq	r2, [r0, #-1577]!	; 0xfffff9d7
    4270:	17030625 	strne	r0, [r3, -r5, lsr #12]
    4274:	15090501 	strne	r0, [r9, #-1281]	; 0xfffffaff
    4278:	13060505 	movwne	r0, #25861	; 0x6505
    427c:	01000502 	tsteq	r0, r2, lsl #10
    4280:	00050501 	andeq	r0, r5, r1, lsl #10
    4284:	24200205 	strtcs	r0, [r0], #-517	; 0xfffffdfb
    4288:	b6031000 	strlt	r1, [r3], -r0
    428c:	0905011e 	stmdbeq	r5, {r1, r2, r3, r4, r8}
    4290:	0d051313 	stceq	3, cr1, [r5, #-76]	; 0xffffffb4
    4294:	0624051a 			; <UNDEFINED> instruction: 0x0624051a
    4298:	2e0f0501 	cfsh32cs	mvfx0, mvfx15, #1
    429c:	05222c05 	streq	r2, [r2, #-3077]!	; 0xfffff3fb
    42a0:	13030609 	movwne	r0, #13833	; 0x3609
    42a4:	06190520 	ldreq	r0, [r9], -r0, lsr #10
    42a8:	3c0b0501 	cfstr32cc	mvfx0, [fp], {1}
    42ac:	24060e05 	strcs	r0, [r6], #-3589	; 0xfffff1fb
    42b0:	01061205 	tsteq	r6, r5, lsl #4
    42b4:	052e1005 	streq	r1, [lr, #-5]!
    42b8:	0535060e 	ldreq	r0, [r5, #-1550]!	; 0xfffff9f2
    42bc:	05010610 	streq	r0, [r1, #-1552]	; 0xfffff9f0
    42c0:	0903060d 	stmdbeq	r3, {r0, r2, r3, r9, sl}
    42c4:	06150520 	ldreq	r0, [r5], -r0, lsr #10
    42c8:	0d052001 	stceq	0, cr2, [r5, #-4]
    42cc:	15052106 	strne	r2, [r5, #-262]	; 0xfffffefa
    42d0:	03202e06 			; <UNDEFINED> instruction: 0x03202e06
    42d4:	0905206d 	stmdbeq	r5, {r0, r2, r3, r5, r6, sp}
    42d8:	20160306 	andscs	r0, r6, r6, lsl #6
    42dc:	13060505 	movwne	r0, #25861	; 0x6505
    42e0:	01000c02 	tsteq	r0, r2, lsl #24
    42e4:	00050501 	andeq	r0, r5, r1, lsl #10
    42e8:	00000205 	andeq	r0, r0, r5, lsl #4
    42ec:	df030000 	svcle	0x00030000
    42f0:	01060120 	tsteq	r6, r0, lsr #2
    42f4:	21060905 	tstcs	r6, r5, lsl #18
    42f8:	13131313 	tstne	r3, #1275068416	; 0x4c000000
    42fc:	061c0513 			; <UNDEFINED> instruction: 0x061c0513
    4300:	06090501 	streq	r0, [r9], -r1, lsl #10
    4304:	0d051621 	stceq	6, cr1, [r5, #-132]	; 0xffffff7c
    4308:	0b050106 	bleq	144728 <__RAM_SIZE+0x44728>
    430c:	060d052e 	streq	r0, [sp], -lr, lsr #10
    4310:	061d0530 			; <UNDEFINED> instruction: 0x061d0530
    4314:	03110501 	tsteq	r1, #4194304	; 0x400000
    4318:	0d052074 	stceq	0, cr2, [r5, #-464]	; 0xfffffe30
    431c:	05200c03 	streq	r0, [r0, #-3075]!	; 0xfffff3fd
    4320:	20180322 	andscs	r0, r8, r2, lsr #6
    4324:	03061105 	movweq	r1, #24837	; 0x6105
    4328:	1305200e 	movwne	r2, #20494	; 0x500e
    432c:	58050106 	stmdapl	r5, {r1, r2, r8}
    4330:	02040200 	andeq	r0, r4, #0, 4
    4334:	205a0306 	subscs	r0, sl, r6, lsl #6
    4338:	02006305 	andeq	r6, r0, #335544320	; 0x14000000
    433c:	01060204 	tsteq	r6, r4, lsl #4
    4340:	02003d05 	andeq	r3, r0, #320	; 0x140
    4344:	20060104 	andcs	r0, r6, r4, lsl #2
    4348:	02000d05 	andeq	r0, r0, #320	; 0x140
    434c:	01060104 	tsteq	r6, r4, lsl #2
    4350:	33061105 	movwcc	r1, #24837	; 0x6105
    4354:	01061705 	tsteq	r6, r5, lsl #14
    4358:	24061105 	strcs	r1, [r6], #-261	; 0xfffffefb
    435c:	06180514 			; <UNDEFINED> instruction: 0x06180514
    4360:	002d0501 	eoreq	r0, sp, r1, lsl #10
    4364:	06010402 	streq	r0, [r1], -r2, lsl #8
    4368:	00110520 	andseq	r0, r1, r0, lsr #10
    436c:	06010402 	streq	r0, [r1], -r2, lsl #8
    4370:	06150501 	ldreq	r0, [r5], -r1, lsl #10
    4374:	061f0530 			; <UNDEFINED> instruction: 0x061f0530
    4378:	06150501 	ldreq	r0, [r5], -r1, lsl #10
    437c:	0633053e 			; <UNDEFINED> instruction: 0x0633053e
    4380:	2e170501 	cfmul32cs	mvfx0, mvfx7, mvfx1
    4384:	33061a05 	movwcc	r1, #27141	; 0x6a05
    4388:	01061c05 	tsteq	r6, r5, lsl #24
    438c:	02003105 	andeq	r3, r0, #1073741825	; 0x40000001
    4390:	03060204 	movweq	r0, #25092	; 0x6204
    4394:	15052e09 	strne	r2, [r5, #-3593]	; 0xfffff1f7
    4398:	02040200 	andeq	r0, r4, #0, 4
    439c:	005a0515 	subseq	r0, sl, r5, lsl r5
    43a0:	03020402 	movweq	r0, #9218	; 0x2402
    43a4:	5b05016b 	blpl	144958 <__RAM_SIZE+0x44958>
    43a8:	02040200 	andeq	r0, r4, #0, 4
    43ac:	02000106 	andeq	r0, r0, #-2147483647	; 0x80000001
    43b0:	05200204 	streq	r0, [r0, #-516]!	; 0xfffffdfc
    43b4:	20690311 	rsbcs	r0, r9, r1, lsl r3
    43b8:	03062505 	movweq	r2, #25861	; 0x6505
    43bc:	0905203b 	stmdbeq	r5, {r0, r1, r3, r4, r5, sp}
    43c0:	06050515 			; <UNDEFINED> instruction: 0x06050515
    43c4:	01002013 	tsteq	r0, r3, lsl r0
    43c8:	00050501 	andeq	r0, r5, r1, lsl #10
    43cc:	00000205 	andeq	r0, r0, r5, lsl #4
    43d0:	a3030000 	movwge	r0, #12288	; 0x3000
    43d4:	09050131 	stmdbeq	r5, {r0, r4, r5, r8}
    43d8:	20051413 	andcs	r1, r5, r3, lsl r4
    43dc:	0e051006 	cdpeq	0, 0, cr1, cr5, cr6, {0}
    43e0:	060d0522 	streq	r0, [sp], -r2, lsr #10
    43e4:	061a0522 	ldreq	r0, [sl], -r2, lsr #10
    43e8:	060d0501 	streq	r0, [sp], -r1, lsl #10
    43ec:	06140521 	ldreq	r0, [r4], -r1, lsr #10
    43f0:	060e0501 	streq	r0, [lr], -r1, lsl #10
    43f4:	0610051d 			; <UNDEFINED> instruction: 0x0610051d
    43f8:	200e0501 	andcs	r0, lr, r1, lsl #10
    43fc:	34060905 	strcc	r0, [r6], #-2309	; 0xfffff6fb
    4400:	06050514 			; <UNDEFINED> instruction: 0x06050514
    4404:	01022013 	tsteq	r2, r3, lsl r0
    4408:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    440c:	02050001 	andeq	r0, r5, #1
    4410:	10002460 	andne	r2, r0, r0, ror #8
    4414:	0132b803 	teqeq	r2, r3, lsl #16
    4418:	05130505 	ldreq	r0, [r3, #-1285]	; 0xfffffafb
    441c:	05010609 	streq	r0, [r1, #-1545]	; 0xfffff9f7
    4420:	09053c07 	stmdbeq	r5, {r0, r1, r2, sl, fp, ip, sp}
    4424:	1e052606 	cfmadd32ne	mvax0, mvfx2, mvfx5, mvfx6
    4428:	09050106 	stmdbeq	r5, {r1, r2, r8}
    442c:	20056006 	andcs	r6, r5, r6
    4430:	1e050106 	adfnes	f0, f5, f6
    4434:	3001054a 	andcc	r0, r1, sl, asr #10
    4438:	01000502 	tsteq	r0, r2, lsl #10
    443c:	00010501 	andeq	r0, r1, r1, lsl #10
    4440:	24880205 	strcs	r0, [r8], #517	; 0x205
    4444:	88031000 	stmdahi	r3, {ip}
    4448:	0106010e 	tsteq	r6, lr, lsl #2
    444c:	9f060505 	svcls	0x00060505
    4450:	03090513 	movweq	r0, #38163	; 0x9513
    4454:	12050115 	andne	r0, r5, #1073741829	; 0x40000005
    4458:	20200106 	eorcs	r0, r0, r6, lsl #2
    445c:	06090520 	streq	r0, [r9], -r0, lsr #10
    4460:	052e0a03 	streq	r0, [lr, #-2563]!	; 0xfffff5fd
    4464:	05010623 	streq	r0, [r1, #-1571]	; 0xfffff9dd
    4468:	1605202c 	strne	r2, [r5], -ip, lsr #32
    446c:	0609053c 			; <UNDEFINED> instruction: 0x0609053c
    4470:	0657052f 	ldrbeq	r0, [r7], -pc, lsr #10
    4474:	01810501 	orreq	r0, r1, r1, lsl #10
    4478:	05053106 	streq	r3, [r5, #-262]	; 0xfffffefa
    447c:	05011903 	streq	r1, [r1, #-2307]	; 0xfffff6fd
    4480:	05010607 	streq	r0, [r1, #-1543]	; 0xfffff9f9
    4484:	25052210 	strcs	r2, [r5, #-528]	; 0xfffffdf0
    4488:	01040200 	mrseq	r0, R12_usr
    448c:	09052e06 	stmdbeq	r5, {r1, r2, r9, sl, fp, sp}
    4490:	01040200 	mrseq	r0, R12_usr
    4494:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    4498:	2f053e06 	svccs	0x00053e06
    449c:	27050106 	strcs	r0, [r5, -r6, lsl #2]
    44a0:	060d052e 	streq	r0, [sp], -lr, lsr #10
    44a4:	0617054f 	ldreq	r0, [r7], -pc, asr #10
    44a8:	2e0f0501 	cfsh32cs	mvfx0, mvfx15, #1
    44ac:	02002905 	andeq	r2, r0, #81920	; 0x14000
    44b0:	26060204 	strcs	r0, [r6], -r4, lsl #4
    44b4:	02005205 	andeq	r5, r0, #1342177280	; 0x50000000
    44b8:	73030204 	movwvc	r0, #12804	; 0x3204
    44bc:	00530501 	subseq	r0, r3, r1, lsl #10
    44c0:	06020402 	streq	r0, [r2], -r2, lsl #8
    44c4:	04020001 	streq	r0, [r2], #-1
    44c8:	09052e02 	stmdbeq	r5, {r1, r9, sl, fp, sp}
    44cc:	20130306 	andscs	r0, r3, r6, lsl #6
    44d0:	01063e05 	tsteq	r6, r5, lsl #28
    44d4:	40062105 	andmi	r2, r6, r5, lsl #2
    44d8:	05163605 	ldreq	r3, [r6, #-1541]	; 0xfffff9fb
    44dc:	07051405 	streq	r1, [r5, -r5, lsl #8]
    44e0:	14050106 	strne	r0, [r5], #-262	; 0xfffffefa
    44e4:	06210530 			; <UNDEFINED> instruction: 0x06210530
    44e8:	15050524 	strne	r0, [r5, #-1316]	; 0xfffffadc
    44ec:	01061a05 	tsteq	r6, r5, lsl #20
    44f0:	23060905 	movwcs	r0, #26885	; 0x6905
    44f4:	01062205 	tsteq	r6, r5, lsl #4
    44f8:	24060505 	strcs	r0, [r6], #-1285	; 0xfffffafb
    44fc:	06234e3d 			; <UNDEFINED> instruction: 0x06234e3d
    4500:	0521062e 	streq	r0, [r1, #-1582]!	; 0xfffff9d2
    4504:	20090309 	andcs	r0, r9, r9, lsl #6
    4508:	2f031105 	svccs	0x00031105
    450c:	062a0501 	strteq	r0, [sl], -r1, lsl #10
    4510:	66280501 	strtvs	r0, [r8], -r1, lsl #10
    4514:	03060505 	movweq	r0, #25861	; 0x6505
    4518:	0705201d 	smladeq	r5, sp, r0, r2
    451c:	09050106 	stmdbeq	r5, {r1, r2, r8}
    4520:	18054006 	stmdane	r5, {r1, r2, lr}
    4524:	21050106 	tstcs	r5, r6, lsl #2
    4528:	01053206 	tsteq	r5, r6, lsl #4
    452c:	002e1406 	eoreq	r1, lr, r6, lsl #8
    4530:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    4534:	1e020500 	cfsh32ne	mvfx0, mvfx2, #0
    4538:	03100025 	tsteq	r0, #37	; 0x25
    453c:	060109ed 	streq	r0, [r1], -sp, ror #19
    4540:	06090501 	streq	r0, [r9], -r1, lsl #10
    4544:	142f0559 	strtne	r0, [pc], #-1369	; 454c <__HEAP_SIZE+0x354c>
    4548:	05132d05 	ldreq	r2, [r3, #-3333]	; 0xfffff2fb
    454c:	010d0309 	tsteq	sp, r9, lsl #6
    4550:	01060b05 	tsteq	r6, r5, lsl #22
    4554:	02002605 	andeq	r2, r0, #5242880	; 0x500000
    4558:	05580104 	ldrbeq	r0, [r8, #-260]	; 0xfffffefc
    455c:	1327060d 			; <UNDEFINED> instruction: 0x1327060d
    4560:	01061605 	tsteq	r6, r5, lsl #12
    4564:	05202020 	streq	r2, [r0, #-32]!	; 0xffffffe0
    4568:	052f060d 	streq	r0, [pc, #-1549]!	; 3f63 <__HEAP_SIZE+0x2f63>
    456c:	0501061f 	streq	r0, [r1, #-1567]	; 0xfffff9e1
    4570:	05260611 	streq	r0, [r6, #-1553]!	; 0xfffff9ef
    4574:	05010631 	streq	r0, [r1, #-1585]	; 0xfffff9cf
    4578:	0540060d 	strbeq	r0, [r0, #-1549]	; 0xfffff9f3
    457c:	74030616 	strvc	r0, [r3], #-1558	; 0xfffff9ea
    4580:	030505c8 	movweq	r0, #21960	; 0x55c8
    4584:	16052014 			; <UNDEFINED> instruction: 0x16052014
    4588:	05202038 	streq	r2, [r0, #-56]!	; 0xffffffc8
    458c:	05230609 	streq	r0, [r3, #-1545]!	; 0xfffff9f7
    4590:	02010610 	andeq	r0, r1, #16, 12	; 0x1000000
    4594:	01010001 	tsteq	r1, r1
    4598:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    459c:	00257002 	eoreq	r7, r5, r2
    45a0:	2efb0310 	mrccs	3, 7, r0, cr11, cr0, {0}
    45a4:	21050501 	tstcs	r5, r1, lsl #10
    45a8:	06150514 			; <UNDEFINED> instruction: 0x06150514
    45ac:	20050501 	andcs	r0, r5, r1, lsl #10
    45b0:	02000905 	andeq	r0, r0, #81920	; 0x14000
    45b4:	22060304 	andcs	r0, r6, #4, 6	; 0x10000000
    45b8:	02005e05 	andeq	r5, r0, #5, 28	; 0x50
    45bc:	05720304 	ldrbeq	r0, [r2, #-772]!	; 0xfffffcfc
    45c0:	04020068 	streq	r0, [r2], #-104	; 0xffffff98
    45c4:	05010603 	streq	r0, [r1, #-1539]	; 0xfffff9fd
    45c8:	0402002b 	streq	r0, [r2], #-43	; 0xffffffd5
    45cc:	05200601 	streq	r0, [r0, #-1537]!	; 0xfffff9ff
    45d0:	04020005 	streq	r0, [r2], #-5
    45d4:	06010601 	streq	r0, [r1], -r1, lsl #12
    45d8:	20064b33 	andcs	r4, r6, r3, lsr fp
    45dc:	09053d06 	stmdbeq	r5, {r1, r2, r8, sl, fp, ip, sp}
    45e0:	05054240 	streq	r4, [r5, #-576]	; 0xfffffdc0
    45e4:	06170542 	ldreq	r0, [r7], -r2, asr #10
    45e8:	06050501 	streq	r0, [r5], -r1, lsl #10
    45ec:	061f052f 	ldreq	r0, [pc], -pc, lsr #10
    45f0:	2f010501 	svccs	0x00010501
    45f4:	01001202 	tsteq	r0, r2, lsl #4
    45f8:	00050501 	andeq	r0, r5, r1, lsl #10
    45fc:	25d80205 	ldrbcs	r0, [r8, #517]	; 0x205
    4600:	e3031000 	movw	r1, #12288	; 0x3000
    4604:	0106010f 	tsteq	r6, pc, lsl #2
    4608:	31060905 	tstcc	r6, r5, lsl #18
    460c:	05300d05 	ldreq	r0, [r0, #-3333]!	; 0xfffff2fb
    4610:	05010626 	streq	r0, [r1, #-1574]	; 0xfffff9da
    4614:	0d053c24 	stceq	12, cr3, [r5, #-144]	; 0xffffff70
    4618:	1e052206 	cdpne	2, 0, cr2, cr5, cr6, {0}
    461c:	0f050106 	svceq	0x00050106
    4620:	0611052e 	ldreq	r0, [r1], -lr, lsr #10
    4624:	05201703 	streq	r1, [r0, #-1795]!	; 0xfffff8fd
    4628:	05010627 	streq	r0, [r1, #-1575]	; 0xfffff9d9
    462c:	15052e13 	strne	r2, [r5, #-3603]	; 0xfffff1ed
    4630:	25052206 	strcs	r2, [r5, #-518]	; 0xfffffdfa
    4634:	3d050106 	stfccs	f0, [r5, #-24]	; 0xffffffe8
    4638:	2017053c 	andscs	r0, r7, ip, lsr r5
    463c:	30061905 	andcc	r1, r6, r5, lsl #18
    4640:	01062605 	tsteq	r6, r5, lsl #12
    4644:	03061105 	movweq	r1, #24837	; 0x6105
    4648:	1e053c69 	cdpne	12, 0, cr3, cr5, cr9, {3}
    464c:	11050106 	tstne	r5, r6, lsl #2
    4650:	2c053006 	stccs	0, cr3, [r5], {6}
    4654:	13050106 	movwne	r0, #20742	; 0x5106
    4658:	062d0520 	strteq	r0, [sp], -r0, lsr #10
    465c:	052e1e03 	streq	r1, [lr, #-3587]!	; 0xfffff1fd
    4660:	1905160d 	stmdbne	r5, {r0, r2, r3, r9, sl, ip}
    4664:	29050106 	stmdbcs	r5, {r1, r2, r8}
    4668:	0d055206 	sfmeq	f5, 4, [r5, #-24]	; 0xffffffe8
    466c:	01010114 	tsteq	r1, r4, lsl r1
    4670:	01040200 	mrseq	r0, R12_usr
    4674:	04020058 	streq	r0, [r2], #-88	; 0xffffffa8
    4678:	02002e03 	andeq	r2, r0, #3, 28	; 0x30
    467c:	00010304 	andeq	r0, r1, r4, lsl #6
    4680:	01030402 	tsteq	r3, r2, lsl #8
    4684:	03040200 	movweq	r0, #16896	; 0x4200
    4688:	04020066 	streq	r0, [r2], #-102	; 0xffffff9a
    468c:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    4690:	00010304 	andeq	r0, r1, r4, lsl #6
    4694:	20030402 	andcs	r0, r3, r2, lsl #8
    4698:	03040200 	movweq	r0, #16896	; 0x4200
    469c:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    46a0:	02002e03 	andeq	r2, r0, #3, 28	; 0x30
    46a4:	00200304 	eoreq	r0, r0, r4, lsl #6
    46a8:	06030402 	streq	r0, [r3], -r2, lsl #8
    46ac:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    46b0:	00580603 	subseq	r0, r8, r3, lsl #12
    46b4:	74030402 	strvc	r0, [r3], #-1026	; 0xfffffbfe
    46b8:	03040200 	movweq	r0, #16896	; 0x4200
    46bc:	04020001 	streq	r0, [r2], #-1
    46c0:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    46c4:	05140304 	ldreq	r0, [r4, #-772]	; 0xfffffcfc
    46c8:	04020009 	streq	r0, [r2], #-9
    46cc:	02001403 	andeq	r1, r0, #50331648	; 0x3000000
    46d0:	05300304 	ldreq	r0, [r0, #-772]!	; 0xfffffcfc
    46d4:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    46d8:	05010603 	streq	r0, [r1, #-1539]	; 0xfffff9fd
    46dc:	0402000b 	streq	r0, [r2], #-11
    46e0:	0d052e03 	stceq	14, cr2, [r5, #-12]
    46e4:	05012406 	streq	r2, [r1, #-1030]	; 0xfffffbfa
    46e8:	056c0605 	strbeq	r0, [ip, #-1541]!	; 0xfffff9fb
    46ec:	49030615 	stmdbmi	r3, {r0, r2, r4, r9, sl}
    46f0:	000d0520 	andeq	r0, sp, r0, lsr #10
    46f4:	03010402 	movweq	r0, #5122	; 0x1402
    46f8:	25053c31 	strcs	r3, [r5, #-3121]	; 0xfffff3cf
    46fc:	01040200 	mrseq	r0, R12_usr
    4700:	00050532 	andeq	r0, r5, r2, lsr r5
    4704:	06010402 	streq	r0, [r1], -r2, lsl #8
    4708:	000d0214 	andeq	r0, sp, r4, lsl r2
    470c:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    4710:	94020500 	strls	r0, [r2], #-1280	; 0xfffffb00
    4714:	03100026 	tsteq	r0, #38	; 0x26
    4718:	06010cd9 			; <UNDEFINED> instruction: 0x06010cd9
    471c:	06090501 	streq	r0, [r9], -r1, lsl #10
    4720:	030d0575 	movweq	r0, #54645	; 0xd575
    4724:	05180125 	ldreq	r0, [r8, #-293]	; 0xfffffedb
    4728:	20010617 	andcs	r0, r1, r7, lsl r6
    472c:	30060d05 	andcc	r0, r6, r5, lsl #26
    4730:	01060f05 	tsteq	r6, r5, lsl #30
    4734:	34061105 	strcc	r1, [r6], #-261	; 0xfffffefb
    4738:	01062805 	tsteq	r6, r5, lsl #16
    473c:	06110520 	ldreq	r0, [r1], -r0, lsr #10
    4740:	06130530 			; <UNDEFINED> instruction: 0x06130530
    4744:	06150501 	ldreq	r0, [r5], -r1, lsl #10
    4748:	061e0530 			; <UNDEFINED> instruction: 0x061e0530
    474c:	06150501 	ldreq	r0, [r5], -r1, lsl #10
    4750:	0627054d 	strteq	r0, [r7], -sp, asr #10
    4754:	09052e01 	stmdbeq	r5, {r0, r9, sl, fp, sp}
    4758:	01100306 	tsteq	r0, r6, lsl #6
    475c:	01060b05 	tsteq	r6, r5, lsl #22
    4760:	26061105 	strcs	r1, [r6], -r5, lsl #2
    4764:	01063105 	tsteq	r6, r5, lsl #2
    4768:	40060d05 	andmi	r0, r6, r5, lsl #26
    476c:	be060505 	cfsh32lt	mvfx0, mvfx6, #5
    4770:	03061505 	movweq	r1, #25861	; 0x6505
    4774:	20064a68 	andcs	r4, r6, r8, ror #20
    4778:	05411a05 	strbeq	r1, [r1, #-2565]	; 0xfffff5fb
    477c:	12030609 	andne	r0, r3, #9437184	; 0x900000
    4780:	06100520 	ldreq	r0, [r0], -r0, lsr #10
    4784:	00010201 	andeq	r0, r1, r1, lsl #4
    4788:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    478c:	f6020500 			; <UNDEFINED> instruction: 0xf6020500
    4790:	03100026 	tsteq	r0, #38	; 0x26
    4794:	06013283 	streq	r3, [r1], -r3, lsl #5
    4798:	06090501 	streq	r0, [r9], -r1, lsl #10
    479c:	030d0532 	movweq	r0, #54578	; 0xd532
    47a0:	16050115 			; <UNDEFINED> instruction: 0x16050115
    47a4:	0f050106 	svceq	0x00050106
    47a8:	0612052e 	ldreq	r0, [r2], -lr, lsr #10
    47ac:	06140527 	ldreq	r0, [r4], -r7, lsr #10
    47b0:	03050501 	movweq	r0, #21761	; 0x5501
    47b4:	11052e0f 	tstne	r5, pc, lsl #28
    47b8:	206e0306 	rsbcs	r0, lr, r6, lsl #6
    47bc:	2f062006 	svccs	0x00062006
    47c0:	34660550 	strbtcc	r0, [r6], #-1360	; 0xfffffab0
    47c4:	05132905 	ldreq	r2, [r3, #-2309]	; 0xfffff6fb
    47c8:	02160605 	andseq	r0, r6, #5242880	; 0x500000
    47cc:	01010001 	tsteq	r1, r1
    47d0:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    47d4:	00271c02 	eoreq	r1, r7, r2, lsl #24
    47d8:	2f9b0310 	svccs	0x009b0310
    47dc:	17090501 	strne	r0, [r9, -r1, lsl #10]
    47e0:	010e0516 	tsteq	lr, r6, lsl r5
    47e4:	01062d05 	tsteq	r6, r5, lsl #26
    47e8:	052e0e05 	streq	r0, [lr, #-3589]!	; 0xfffff1fb
    47ec:	20770301 	rsbscs	r0, r7, r1, lsl #6
    47f0:	03061105 	movweq	r1, #24837	; 0x6105
    47f4:	1905200d 	stmdbne	r5, {r0, r2, r3, sp}
    47f8:	06210534 			; <UNDEFINED> instruction: 0x06210534
    47fc:	2e1f0501 	cfmul32cs	mvfx0, mvfx15, mvfx1
    4800:	21061905 	tstcs	r6, r5, lsl #18
    4804:	01062205 	tsteq	r6, r5, lsl #4
    4808:	3d061905 	vstrcc.16	s2, [r6, #-10]	; <UNPREDICTABLE>
    480c:	4d11054b 	cfldr32mi	mvfx0, [r1, #-300]	; 0xfffffed4
    4810:	030e0530 	movweq	r0, #58672	; 0xe530
    4814:	2d053c6e 	stccs	12, cr3, [r5, #-440]	; 0xfffffe48
    4818:	0e050106 	adfeqs	f0, f5, f6
    481c:	0301052e 	movweq	r0, #5422	; 0x152e
    4820:	02202e3f 	eoreq	r2, r0, #1008	; 0x3f0
    4824:	01010008 	tsteq	r1, r8
    4828:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    482c:	00276802 	eoreq	r6, r7, r2, lsl #16
    4830:	c1e00310 	mvngt	r0, r0, lsl r3
    4834:	01060100 	mrseq	r0, (UNDEF: 22)
    4838:	4b060505 	blmi	185c54 <__RAM_SIZE+0x85c54>
    483c:	06160513 			; <UNDEFINED> instruction: 0x06160513
    4840:	06050501 	streq	r0, [r5], -r1, lsl #10
    4844:	0614052f 	ldreq	r0, [r4], -pc, lsr #10
    4848:	06050501 	streq	r0, [r5], -r1, lsl #10
    484c:	0614052f 	ldreq	r0, [r4], -pc, lsr #10
    4850:	06090501 	streq	r0, [r9], -r1, lsl #10
    4854:	06150543 	ldreq	r0, [r5], -r3, asr #10
    4858:	2e260501 	cfsh64cs	mvdx0, mvdx6, #1
    485c:	06050520 	streq	r0, [r5], -r0, lsr #10
    4860:	06260534 			; <UNDEFINED> instruction: 0x06260534
    4864:	20090501 	andcs	r0, r9, r1, lsl #10
    4868:	44062105 	strmi	r2, [r6], #-261	; 0xfffffefb
    486c:	05170905 	ldreq	r0, [r7, #-2309]	; 0xfffff6fb
    4870:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
    4874:	0c03060d 	stceq	6, cr0, [r3], {13}
    4878:	0619053c 			; <UNDEFINED> instruction: 0x0619053c
    487c:	060d0501 	streq	r0, [sp], -r1, lsl #10
    4880:	0f053e23 	svceq	0x00053e23
    4884:	3b050106 	blcc	144ca4 <__RAM_SIZE+0x44ca4>
    4888:	11053206 	tstne	r5, r6, lsl #4
    488c:	06440513 			; <UNDEFINED> instruction: 0x06440513
    4890:	2e110501 	cfmul32cs	mvfx0, mvfx1, mvfx1
    4894:	3e030105 	adfccs	f0, f3, f5
    4898:	002f054a 	eoreq	r0, pc, sl, asr #10
    489c:	03010402 	movweq	r0, #5122	; 0x1402
    48a0:	052e7fac 	streq	r7, [lr, #-4012]!	; 0xfffff054
    48a4:	0133060d 	teqeq	r3, sp, lsl #12
    48a8:	3c01012e 	stfccs	f0, [r1], {46}	; 0x2e
    48ac:	20062e06 	andcs	r2, r6, r6, lsl #28
    48b0:	3c2e3c3c 	stccc	12, cr3, [lr], #-240	; 0xffffff10
    48b4:	17033205 	strne	r3, [r3, -r5, lsl #4]
    48b8:	13110520 	tstne	r1, #32, 10	; 0x8000000
    48bc:	01063c05 	tsteq	r6, r5, lsl #24
    48c0:	062e1105 	strteq	r1, [lr], -r5, lsl #2
    48c4:	0621054f 	strteq	r0, [r1], -pc, asr #10
    48c8:	2e130501 	cfmul32cs	mvfx0, mvfx3, mvfx1
    48cc:	30061505 	andcc	r1, r6, r5, lsl #10
    48d0:	01062a05 	tsteq	r6, r5, lsl #20
    48d4:	32062d05 	andcc	r2, r6, #320	; 0x140
    48d8:	03060105 	movweq	r0, #24837	; 0x6105
    48dc:	0d02012c 	stfeqs	f0, [r2, #-176]	; 0xffffff50
    48e0:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    48e4:	02050005 	andeq	r0, r5, #5
    48e8:	10002810 	andne	r2, r0, r0, lsl r8
    48ec:	010aa303 	tsteq	sl, r3, lsl #6
    48f0:	09050106 	stmdbeq	r5, {r1, r2, r8}
    48f4:	16052f06 	strne	r2, [r5], -r6, lsl #30
    48f8:	09050106 	stmdbeq	r5, {r1, r2, r8}
    48fc:	81052f06 	tsthi	r5, r6, lsl #30
    4900:	09051401 	stmdbeq	r5, {r0, sl, ip}
    4904:	06140514 			; <UNDEFINED> instruction: 0x06140514
    4908:	06090501 	streq	r0, [r9], -r1, lsl #10
    490c:	060b05a0 	streq	r0, [fp], -r0, lsr #11
    4910:	060d0501 	streq	r0, [sp], -r1, lsl #10
    4914:	05200903 	streq	r0, [r0, #-2307]!	; 0xfffff6fd
    4918:	31053225 	tstcc	r5, r5, lsr #4
    491c:	14090515 	strne	r0, [r9], #-1301	; 0xfffffaeb
    4920:	13060505 	movwne	r0, #25861	; 0x6505
    4924:	0101003c 	tsteq	r1, ip, lsr r0
    4928:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    492c:	00283802 	eoreq	r3, r8, r2, lsl #16
    4930:	0dbb0310 	ldceq	3, cr0, [fp, #64]!	; 0x40
    4934:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    4938:	132f0609 			; <UNDEFINED> instruction: 0x132f0609
    493c:	05146c05 	ldreq	r6, [r4, #-3077]	; 0xfffff3fb
    4940:	14051409 	strne	r1, [r5], #-1033	; 0xfffffbf7
    4944:	09050106 	stmdbeq	r5, {r1, r2, r8}
    4948:	0b056806 	bleq	15e968 <__RAM_SIZE+0x5e968>
    494c:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    4950:	20090306 	andcs	r0, r9, r6, lsl #6
    4954:	0615052f 	ldreq	r0, [r5], -pc, lsr #10
    4958:	03050501 	movweq	r0, #21761	; 0x5501
    495c:	1505200a 	strne	r2, [r5, #-10]
    4960:	052e7a03 	streq	r7, [lr, #-2563]!	; 0xfffff5fd
    4964:	0531062b 	ldreq	r0, [r1, #-1579]!	; 0xfffff9d5
    4968:	10051409 	andne	r1, r5, r9, lsl #8
    496c:	01020106 	tsteq	r2, r6, lsl #2
    4970:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    4974:	02050005 	andeq	r0, r5, #5
    4978:	00000000 	andeq	r0, r0, r0
    497c:	01118f03 	tsteq	r1, r3, lsl #30
    4980:	09050106 	stmdbeq	r5, {r1, r2, r8}
    4984:	13132f06 	tstne	r3, #6, 30
    4988:	05143005 	ldreq	r3, [r4, #-5]
    498c:	0d051409 	cfstrseq	mvf1, [r5, #-36]	; 0xffffffdc
    4990:	06150532 			; <UNDEFINED> instruction: 0x06150532
    4994:	000d0501 	andeq	r0, sp, r1, lsl #10
    4998:	06040402 	streq	r0, [r4], -r2, lsl #8
    499c:	00110523 	andseq	r0, r1, r3, lsr #10
    49a0:	06040402 	streq	r0, [r4], -r2, lsl #8
    49a4:	00290501 	eoreq	r0, r9, r1, lsl #10
    49a8:	06040402 	streq	r0, [r4], -r2, lsl #8
    49ac:	000d0550 	andeq	r0, sp, r0, asr r5
    49b0:	16040402 	strne	r0, [r4], -r2, lsl #8
    49b4:	02001105 	andeq	r1, r0, #1073741825	; 0x40000001
    49b8:	01060404 	tsteq	r6, r4, lsl #8
    49bc:	02000f05 	andeq	r0, r0, #5, 30
    49c0:	05200404 	streq	r0, [r0, #-1028]!	; 0xfffffbfc
    49c4:	05220611 	streq	r0, [r2, #-1553]!	; 0xfffff9ef
    49c8:	0501061a 	streq	r0, [r1, #-1562]	; 0xfffff9e6
    49cc:	054e0629 	strbeq	r0, [lr, #-1577]	; 0xfffff9d7
    49d0:	1905190d 	stmdbne	r5, {r0, r2, r3, r8, fp, ip}
    49d4:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    49d8:	28054f06 	stmdacs	r5, {r1, r2, r8, r9, sl, fp, lr}
    49dc:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    49e0:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    49e4:	25055d06 	strcs	r5, [r5, #-3334]	; 0xfffff2fa
    49e8:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    49ec:	0f050106 	svceq	0x00050106
    49f0:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    49f4:	0032052e 	eorseq	r0, r2, lr, lsr #10
    49f8:	20010402 	andcs	r0, r1, r2, lsl #8
    49fc:	03061105 	movweq	r1, #24837	; 0x6105
    4a00:	2006203b 	andcs	r2, r6, fp, lsr r0
    4a04:	3d062a05 	vstrcc	s4, [r6, #-20]	; 0xffffffec
    4a08:	05161105 	ldreq	r1, [r6, #-261]	; 0xfffffefb
    4a0c:	05333109 	ldreq	r3, [r3, #-265]!	; 0xfffffef7
    4a10:	0543140d 	strbeq	r1, [r3, #-1037]	; 0xfffffbf3
    4a14:	05010623 	streq	r0, [r1, #-1571]	; 0xfffff9dd
    4a18:	11052e0f 	tstne	r5, pc, lsl #28
    4a1c:	1b052206 	blne	14d23c <__RAM_SIZE+0x4d23c>
    4a20:	13050106 	movwne	r0, #20742	; 0x5106
    4a24:	0305052e 	movweq	r0, #21806	; 0x552e
    4a28:	15052e0e 	strne	r2, [r5, #-3598]	; 0xfffff1f2
    4a2c:	01040200 	mrseq	r0, R12_usr
    4a30:	207efb03 	rsbscs	pc, lr, r3, lsl #22
    4a34:	01040200 	mrseq	r0, R12_usr
    4a38:	0328052e 			; <UNDEFINED> instruction: 0x0328052e
    4a3c:	1105201f 	tstne	r5, pc, lsl r0
    4a40:	2e0d0306 	cdpcs	3, 0, cr0, cr13, cr6, {0}
    4a44:	4e2a054f 	cfsh64mi	mvdx0, mvdx10, #47
    4a48:	05151105 	ldreq	r1, [r5, #-261]	; 0xfffffefb
    4a4c:	09051a50 	stmdbeq	r5, {r4, r6, r9, fp, ip}
    4a50:	33012703 	movwcc	r2, #5891	; 0x1703
    4a54:	0d033e05 	stceq	14, cr3, [r3, #-20]	; 0xffffffec
    4a58:	13150520 	tstne	r5, #32, 10	; 0x8000000
    4a5c:	05322d05 	ldreq	r2, [r2, #-3333]!	; 0xfffff2fb
    4a60:	05051822 	streq	r1, [r5, #-2082]	; 0xfffff7de
    4a64:	0d021306 	stceq	3, cr1, [r2, #-24]	; 0xffffffe8
    4a68:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    4a6c:	02050005 	andeq	r0, r5, #5
    4a70:	00000000 	andeq	r0, r0, r0
    4a74:	0113b503 	tsteq	r3, r3, lsl #10
    4a78:	13130905 	tstne	r3, #81920	; 0x14000
    4a7c:	13131313 	tstne	r3, #1275068416	; 0x4c000000
    4a80:	05142a05 	ldreq	r2, [r4, #-2565]	; 0xfffff5fb
    4a84:	0d05141e 	cfstrseq	mvf1, [r5, #-120]	; 0xffffff88
    4a88:	06170515 			; <UNDEFINED> instruction: 0x06170515
    4a8c:	2e0f0501 	cfsh32cs	mvfx0, mvfx15, #1
    4a90:	73030505 	movwvc	r0, #13573	; 0x3505
    4a94:	060d052e 	streq	r0, [sp], -lr, lsr #10
    4a98:	053c1503 	ldreq	r1, [ip, #-1283]!	; 0xfffffafd
    4a9c:	1d053011 	stcne	0, cr3, [r5, #-68]	; 0xffffffbc
    4aa0:	11050106 	tstne	r5, r6, lsl #2
    4aa4:	1d052106 	stfnes	f2, [r5, #-24]	; 0xffffffe8
    4aa8:	11050106 	tstne	r5, r6, lsl #2
    4aac:	1f052106 	svcne	0x00052106
    4ab0:	11050106 	tstne	r5, r6, lsl #2
    4ab4:	29052f06 	stmdbcs	r5, {r1, r2, r8, r9, sl, fp, sp}
    4ab8:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    4abc:	05303e06 	ldreq	r3, [r0, #-3590]!	; 0xfffff1fa
    4ac0:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    4ac4:	05430612 	strbeq	r0, [r3, #-1554]	; 0xfffff9ee
    4ac8:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
    4acc:	04020037 	streq	r0, [r2], #-55	; 0xffffffc9
    4ad0:	16052e01 	strne	r2, [r5], -r1, lsl #28
    4ad4:	18053606 	stmdane	r5, {r1, r2, r9, sl, ip, sp}
    4ad8:	16050106 	strne	r0, [r5], -r6, lsl #2
    4adc:	3c290306 	stccc	3, cr0, [r9], #-24	; 0xffffffe8
    4ae0:	01061805 	tsteq	r6, r5, lsl #16
    4ae4:	02004705 	andeq	r4, r0, #1310720	; 0x140000
    4ae8:	053c0104 	ldreq	r0, [ip, #-260]!	; 0xfffffefc
    4aec:	200f031d 	andcs	r0, pc, sp, lsl r3	; <UNPREDICTABLE>
    4af0:	03061505 	movweq	r1, #25861	; 0x6505
    4af4:	19052e4d 	stmdbne	r5, {r0, r2, r3, r6, r9, sl, fp, sp}
    4af8:	17050106 	strne	r0, [r5, -r6, lsl #2]
    4afc:	03210520 			; <UNDEFINED> instruction: 0x03210520
    4b00:	0306201e 	movweq	r2, #24606	; 0x601e
    4b04:	39052e71 	stmdbcc	r5, {r0, r4, r5, r6, r9, sl, fp, sp}
    4b08:	23050106 	movwcs	r0, #20742	; 0x5106
    4b0c:	0072054a 	rsbseq	r0, r2, sl, asr #10
    4b10:	06020402 	streq	r0, [r2], -r2, lsl #8
    4b14:	0073052c 	rsbseq	r0, r3, ip, lsr #10
    4b18:	06020402 	streq	r0, [r2], -r2, lsl #8
    4b1c:	04020001 	streq	r0, [r2], #-1
    4b20:	24052002 	strcs	r2, [r5], #-2
    4b24:	00380520 	eorseq	r0, r8, r0, lsr #10
    4b28:	06010402 	streq	r0, [r1], -r2, lsl #8
    4b2c:	001d0520 	andseq	r0, sp, r0, lsr #10
    4b30:	06010402 	streq	r0, [r1], -r2, lsl #8
    4b34:	2c250501 	cfstr32cs	mvfx0, [r5], #-4
    4b38:	031d052e 	tsteq	sp, #192937984	; 0xb800000
    4b3c:	1905011e 	stmdbne	r5, {r1, r2, r3, r4, r8}
    4b40:	2e7fb503 	cdpcs	5, 7, cr11, cr15, cr3, {0}
    4b44:	03062d05 	movweq	r2, #27909	; 0x6d05
    4b48:	052000e9 	streq	r0, [r0, #-233]!	; 0xffffff17
    4b4c:	05051409 	streq	r1, [r5, #-1033]	; 0xfffffbf7
    4b50:	19051306 	stmdbne	r5, {r1, r2, r8, r9, ip}
    4b54:	207fa703 	rsbscs	sl, pc, r3, lsl #14
    4b58:	03062d05 	movweq	r2, #27909	; 0x6d05
    4b5c:	052000d6 	streq	r0, [r0, #-214]!	; 0xffffff2a
    4b60:	05051409 	streq	r1, [r5, #-1033]	; 0xfffffbf7
    4b64:	19051306 	stmdbne	r5, {r1, r2, r8, r9, ip}
    4b68:	2e7fad03 	cdpcs	13, 7, cr10, cr15, cr3, {0}
    4b6c:	1a032d05 	bne	cff88 <__HEAP_SIZE+0xcef88>
    4b70:	1d052e4a 	stcne	14, cr2, [r5, #-296]	; 0xfffffed8
    4b74:	02011803 	andeq	r1, r1, #196608	; 0x30000
    4b78:	0101000e 	tsteq	r1, lr
    4b7c:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    4b80:	00000002 	andeq	r0, r0, r2
    4b84:	14b90300 	ldrtne	r0, [r9], #768	; 0x300
    4b88:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    4b8c:	132f0609 			; <UNDEFINED> instruction: 0x132f0609
    4b90:	05142e05 	ldreq	r2, [r4, #-3589]	; 0xfffff1fb
    4b94:	0d051409 	cfstrseq	mvf1, [r5, #-36]	; 0xffffffdc
    4b98:	06150532 			; <UNDEFINED> instruction: 0x06150532
    4b9c:	000d0501 	andeq	r0, sp, r1, lsl #10
    4ba0:	06040402 	streq	r0, [r4], -r2, lsl #8
    4ba4:	00160521 	andseq	r0, r6, r1, lsr #10
    4ba8:	06040402 	streq	r0, [r4], -r2, lsl #8
    4bac:	00090501 	andeq	r0, r9, r1, lsl #10
    4bb0:	06040402 	streq	r0, [r4], -r2, lsl #8
    4bb4:	00320522 	eorseq	r0, r2, r2, lsr #10
    4bb8:	30040402 	andcc	r0, r4, r2, lsl #8
    4bbc:	02000905 	andeq	r0, r0, #81920	; 0x14000
    4bc0:	05140404 	ldreq	r0, [r4, #-1028]	; 0xfffffbfc
    4bc4:	04020005 	streq	r0, [r2], #-5
    4bc8:	05130604 	ldreq	r0, [r3, #-1540]	; 0xfffff9fc
    4bcc:	04020015 	streq	r0, [r2], #-21	; 0xffffffeb
    4bd0:	2e780301 	cdpcs	3, 7, cr0, cr8, cr1, {0}
    4bd4:	01040200 	mrseq	r0, R12_usr
    4bd8:	0004022e 	andeq	r0, r4, lr, lsr #4
    4bdc:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    4be0:	00020500 	andeq	r0, r2, r0, lsl #10
    4be4:	03000000 	movweq	r0, #0
    4be8:	060114d3 			; <UNDEFINED> instruction: 0x060114d3
    4bec:	06090501 	streq	r0, [r9], -r1, lsl #10
    4bf0:	0513132f 	ldreq	r1, [r3, #-815]	; 0xfffffcd1
    4bf4:	33051435 	movwcc	r1, #21557	; 0x5435
    4bf8:	05011203 	streq	r1, [r1, #-515]	; 0xfffffdfd
    4bfc:	32051709 	andcc	r1, r5, #2359296	; 0x240000
    4c00:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    4c04:	15053206 	strne	r3, [r5, #-518]	; 0xfffffdfa
    4c08:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    4c0c:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    4c10:	16052106 	strne	r2, [r5], -r6, lsl #2
    4c14:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    4c18:	09050106 	stmdbeq	r5, {r1, r2, r8}
    4c1c:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    4c20:	39052206 	stmdbcc	r5, {r1, r2, r9, sp}
    4c24:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    4c28:	00090530 	andeq	r0, r9, r0, lsr r5
    4c2c:	14040402 	strne	r0, [r4], #-1026	; 0xfffffbfe
    4c30:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    4c34:	13060404 	movwne	r0, #25604	; 0x6404
    4c38:	02001505 	andeq	r1, r0, #20971520	; 0x1400000
    4c3c:	78030104 	stmdavc	r3, {r2, r8}
    4c40:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    4c44:	04022e01 	streq	r2, [r2], #-3585	; 0xfffff1ff
    4c48:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    4c4c:	02050005 	andeq	r0, r5, #5
    4c50:	00000000 	andeq	r0, r0, r0
    4c54:	01158303 	tsteq	r5, r3, lsl #6
    4c58:	09050106 	stmdbeq	r5, {r1, r2, r8}
    4c5c:	05132f06 	ldreq	r2, [r3, #-3846]	; 0xfffff0fa
    4c60:	09051432 	stmdbeq	r5, {r1, r4, r5, sl, ip}
    4c64:	320d0514 	andcc	r0, sp, #20, 10	; 0x5000000
    4c68:	01061505 	tsteq	r6, r5, lsl #10
    4c6c:	02000d05 	andeq	r0, r0, #320	; 0x140
    4c70:	21060404 	tstcs	r6, r4, lsl #8
    4c74:	02001605 	andeq	r1, r0, #5242880	; 0x500000
    4c78:	01060404 	tsteq	r6, r4, lsl #8
    4c7c:	02000905 	andeq	r0, r0, #81920	; 0x14000
    4c80:	22060404 	andcs	r0, r6, #4, 8	; 0x4000000
    4c84:	02003605 	andeq	r3, r0, #5242880	; 0x500000
    4c88:	05300404 	ldreq	r0, [r0, #-1028]!	; 0xfffffbfc
    4c8c:	04020009 	streq	r0, [r2], #-9
    4c90:	05051404 	streq	r1, [r5, #-1028]	; 0xfffffbfc
    4c94:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    4c98:	15051306 	strne	r1, [r5, #-774]	; 0xfffffcfa
    4c9c:	01040200 	mrseq	r0, R12_usr
    4ca0:	002e7803 	eoreq	r7, lr, r3, lsl #16
    4ca4:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    4ca8:	01000402 	tsteq	r0, r2, lsl #8
    4cac:	00050501 	andeq	r0, r5, r1, lsl #10
    4cb0:	00000205 	andeq	r0, r0, r5, lsl #4
    4cb4:	9d030000 	stcls	0, cr0, [r3, #-0]
    4cb8:	01060115 	tsteq	r6, r5, lsl r1
    4cbc:	2f060905 	svccs	0x00060905
    4cc0:	39051313 	stmdbcc	r5, {r0, r1, r4, r8, r9, ip}
    4cc4:	03330514 	teqeq	r3, #20, 10	; 0x5000000
    4cc8:	09050112 	stmdbeq	r5, {r1, r4, r8}
    4ccc:	06320517 			; <UNDEFINED> instruction: 0x06320517
    4cd0:	060d0501 	streq	r0, [sp], -r1, lsl #10
    4cd4:	06150532 			; <UNDEFINED> instruction: 0x06150532
    4cd8:	000d0501 	andeq	r0, sp, r1, lsl #10
    4cdc:	06040402 	streq	r0, [r4], -r2, lsl #8
    4ce0:	00160521 	andseq	r0, r6, r1, lsr #10
    4ce4:	06040402 	streq	r0, [r4], -r2, lsl #8
    4ce8:	00090501 	andeq	r0, r9, r1, lsl #10
    4cec:	06040402 	streq	r0, [r4], -r2, lsl #8
    4cf0:	003d0522 	eorseq	r0, sp, r2, lsr #10
    4cf4:	30040402 	andcc	r0, r4, r2, lsl #8
    4cf8:	02000905 	andeq	r0, r0, #81920	; 0x14000
    4cfc:	05140404 	ldreq	r0, [r4, #-1028]	; 0xfffffbfc
    4d00:	04020005 	streq	r0, [r2], #-5
    4d04:	05130604 	ldreq	r0, [r3, #-1540]	; 0xfffff9fc
    4d08:	04020015 	streq	r0, [r2], #-21	; 0xffffffeb
    4d0c:	2e780301 	cdpcs	3, 7, cr0, cr8, cr1, {0}
    4d10:	01040200 	mrseq	r0, R12_usr
    4d14:	0004022e 	andeq	r0, r4, lr, lsr #4
    4d18:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    4d1c:	00020500 	andeq	r0, r2, r0, lsl #10
    4d20:	03000000 	movweq	r0, #0
    4d24:	060115ce 	streq	r1, [r1], -lr, asr #11
    4d28:	06090501 	streq	r0, [r9], -r1, lsl #10
    4d2c:	0513133d 	ldreq	r1, [r3, #-829]	; 0xfffffcc3
    4d30:	3d05183c 	stccc	8, cr1, [r5, #-240]	; 0xffffff10
    4d34:	15090514 	strne	r0, [r9, #-1300]	; 0xfffffaec
    4d38:	01060b05 	tsteq	r6, r5, lsl #22
    4d3c:	05301b05 	ldreq	r1, [r0, #-2821]!	; 0xfffff4fb
    4d40:	05240625 	streq	r0, [r4, #-1573]!	; 0xfffff9db
    4d44:	0d051509 	cfstr32eq	mvfx1, [r5, #-36]	; 0xffffffdc
    4d48:	06150532 			; <UNDEFINED> instruction: 0x06150532
    4d4c:	003b0501 	eorseq	r0, fp, r1, lsl #10
    4d50:	06040402 	streq	r0, [r4], -r2, lsl #8
    4d54:	00110522 	andseq	r0, r1, r2, lsr #10
    4d58:	16040402 	strne	r0, [r4], -r2, lsl #8
    4d5c:	02002705 	andeq	r2, r0, #1310720	; 0x140000
    4d60:	01060404 	tsteq	r6, r4, lsl #8
    4d64:	02000d05 	andeq	r0, r0, #320	; 0x140
    4d68:	28060404 	stmdacs	r6, {r2, sl}
    4d6c:	02000f05 	andeq	r0, r0, #5, 30
    4d70:	01060404 	tsteq	r6, r4, lsl #8
    4d74:	32061105 	andcc	r1, r6, #1073741825	; 0x40000001
    4d78:	01061305 	tsteq	r6, r5, lsl #6
    4d7c:	24061905 	strcs	r1, [r6], #-2309	; 0xfffff6fb
    4d80:	01062305 	tsteq	r6, r5, lsl #6
    4d84:	052e1b05 	streq	r1, [lr, #-2821]!	; 0xfffff4fb
    4d88:	0533061d 	ldreq	r0, [r3, #-1565]!	; 0xfffff9e3
    4d8c:	0501063d 	streq	r0, [r1, #-1597]	; 0xfffff9c3
    4d90:	14053c1f 	strne	r3, [r5], #-3103	; 0xfffff3e1
    4d94:	052e4d03 	streq	r4, [lr, #-3331]!	; 0xfffff2fd
    4d98:	04020015 	streq	r0, [r2], #-21	; 0xffffffeb
    4d9c:	2e180301 	cdpcs	3, 1, cr0, cr8, cr1, {0}
    4da0:	01040200 	mrseq	r0, R12_usr
    4da4:	0616052e 	ldreq	r0, [r6], -lr, lsr #10
    4da8:	05203303 	streq	r3, [r0, #-771]!	; 0xfffffcfd
    4dac:	05010637 	streq	r0, [r1, #-1591]	; 0xfffff9c9
    4db0:	14052e18 	strne	r2, [r5], #-3608	; 0xfffff1e8
    4db4:	2e7fb503 	cdpcs	5, 7, cr11, cr15, cr3, {0}
    4db8:	03061105 	movweq	r1, #24837	; 0x6105
    4dbc:	172000dc 			; <UNDEFINED> instruction: 0x172000dc
    4dc0:	01062705 	tsteq	r6, r5, lsl #14
    4dc4:	27061505 	strcs	r1, [r6, -r5, lsl #10]
    4dc8:	01061705 	tsteq	r6, r5, lsl #14
    4dcc:	02004805 	andeq	r4, r0, #327680	; 0x50000
    4dd0:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
    4dd4:	05300619 	ldreq	r0, [r0, #-1561]!	; 0xfffff9e7
    4dd8:	0501062b 	streq	r0, [r1, #-1579]	; 0xfffff9d5
    4ddc:	05280615 	streq	r0, [r8, #-1557]!	; 0xfffff9eb
    4de0:	0501062b 	streq	r0, [r1, #-1579]	; 0xfffff9d5
    4de4:	0a030611 	beq	c6630 <__HEAP_SIZE+0xc5630>
    4de8:	06170520 	ldreq	r0, [r7], -r0, lsr #10
    4dec:	20130501 	andscs	r0, r3, r1, lsl #10
    4df0:	30061505 	andcc	r1, r6, r5, lsl #10
    4df4:	2d052e06 	stccs	14, cr2, [r5, #-24]	; 0xffffffe8
    4df8:	11052406 	tstne	r5, r6, lsl #8
    4dfc:	06150519 			; <UNDEFINED> instruction: 0x06150519
    4e00:	13053c01 	movwne	r3, #23553	; 0x5c01
    4e04:	0631053c 			; <UNDEFINED> instruction: 0x0631053c
    4e08:	052e1703 	streq	r1, [lr, #-1795]!	; 0xfffff8fd
    4e0c:	010c0311 	tsteq	ip, r1, lsl r3
    4e10:	01061305 	tsteq	r6, r5, lsl #6
    4e14:	03063105 	movweq	r3, #24837	; 0x6105
    4e18:	11052012 	tstne	r5, r2, lsl r0
    4e1c:	15090518 	strne	r0, [r9, #-1304]	; 0xfffffae8
    4e20:	05302705 	ldreq	r2, [r0, #-1797]!	; 0xfffff8fb
    4e24:	05130605 	ldreq	r0, [r3, #-1541]	; 0xfffff9fb
    4e28:	7eb60314 	mrcvc	3, 5, r0, cr6, cr4, {0}
    4e2c:	03300520 	teqeq	r0, #32, 10	; 0x8000000
    4e30:	28052e35 	stmdacs	r5, {r0, r2, r4, r5, r9, sl, fp, sp}
    4e34:	052e1f03 	streq	r1, [lr, #-3843]!	; 0xfffff0fd
    4e38:	3a030615 	bcc	c6694 <__HEAP_SIZE+0xc5694>
    4e3c:	0619052e 	ldreq	r0, [r9], -lr, lsr #10
    4e40:	06310501 	ldrteq	r0, [r1], -r1, lsl #10
    4e44:	054a0903 	strbeq	r0, [sl, #-2307]	; 0xfffff6fd
    4e48:	01011515 	tsteq	r1, r5, lsl r5
    4e4c:	04020001 	streq	r0, [r2], #-1
    4e50:	02005801 	andeq	r5, r0, #65536	; 0x10000
    4e54:	002e0304 	eoreq	r0, lr, r4, lsl #6
    4e58:	01030402 	tsteq	r3, r2, lsl #8
    4e5c:	03040200 	movweq	r0, #16896	; 0x4200
    4e60:	04020001 	streq	r0, [r2], #-1
    4e64:	02006603 	andeq	r6, r0, #3145728	; 0x300000
    4e68:	00010304 	andeq	r0, r1, r4, lsl #6
    4e6c:	01030402 	tsteq	r3, r2, lsl #8
    4e70:	03040200 	movweq	r0, #16896	; 0x4200
    4e74:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    4e78:	02002e03 	andeq	r2, r0, #3, 28	; 0x30
    4e7c:	00200304 	eoreq	r0, r0, r4, lsl #6
    4e80:	20030402 	andcs	r0, r3, r2, lsl #8
    4e84:	03040200 	movweq	r0, #16896	; 0x4200
    4e88:	02002006 	andeq	r2, r0, #6
    4e8c:	58060304 	stmdapl	r6, {r2, r8, r9}
    4e90:	03040200 	movweq	r0, #16896	; 0x4200
    4e94:	04020074 	streq	r0, [r2], #-116	; 0xffffff8c
    4e98:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    4e9c:	03010304 	movweq	r0, #4868	; 0x1304
    4ea0:	01012015 	tsteq	r1, r5, lsl r0
    4ea4:	0007022e 	andeq	r0, r7, lr, lsr #4
    4ea8:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    4eac:	00020500 	andeq	r0, r2, r0, lsl #10
    4eb0:	03000000 	movweq	r0, #0
    4eb4:	06011a99 			; <UNDEFINED> instruction: 0x06011a99
    4eb8:	06090501 	streq	r0, [r9], -r1, lsl #10
    4ebc:	14300521 	ldrtne	r0, [r0], #-1313	; 0xfffffadf
    4ec0:	05152605 	ldreq	r2, [r5, #-1541]	; 0xfffff9fb
    4ec4:	1905180d 	stmdbne	r5, {r0, r2, r3, fp, ip}
    4ec8:	0f050106 	svceq	0x00050106
    4ecc:	002b052e 	eoreq	r0, fp, lr, lsr #10
    4ed0:	3c010402 	cfstrscc	mvf0, [r1], {2}
    4ed4:	03060d05 	movweq	r0, #27909	; 0x6d05
    4ed8:	1105200b 	tstne	r5, fp
    4edc:	06150530 			; <UNDEFINED> instruction: 0x06150530
    4ee0:	3c130501 	cfldr32cc	mvfx0, [r3], {1}
    4ee4:	03062d05 	movweq	r2, #27909	; 0x6d05
    4ee8:	0d052010 	stceq	0, cr2, [r5, #-64]	; 0xffffffc0
    4eec:	32250515 	eorcc	r0, r5, #88080384	; 0x5400000
    4ef0:	05152205 	ldreq	r2, [r5, #-517]	; 0xfffffdfb
    4ef4:	05130605 	ldreq	r0, [r3, #-1541]	; 0xfffff9fb
    4ef8:	6703062e 	strvs	r0, [r3, -lr, lsr #12]
    4efc:	16150520 	ldrne	r0, [r5], -r0, lsr #10
    4f00:	01061e05 	tsteq	r6, r5, lsl #28
    4f04:	4b061505 	blmi	18a320 <__RAM_SIZE+0x8a320>
    4f08:	00010101 	andeq	r0, r1, r1, lsl #2
    4f0c:	58010402 	stmdapl	r1, {r1, sl}
    4f10:	03040200 	movweq	r0, #16896	; 0x4200
    4f14:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    4f18:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    4f1c:	00010304 	andeq	r0, r1, r4, lsl #6
    4f20:	66030402 	strvs	r0, [r3], -r2, lsl #8
    4f24:	03040200 	movweq	r0, #16896	; 0x4200
    4f28:	04020001 	streq	r0, [r2], #-1
    4f2c:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    4f30:	00200304 	eoreq	r0, r0, r4, lsl #6
    4f34:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
    4f38:	03040200 	movweq	r0, #16896	; 0x4200
    4f3c:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    4f40:	02002003 	andeq	r2, r0, #3
    4f44:	20060304 	andcs	r0, r6, r4, lsl #6
    4f48:	03040200 	movweq	r0, #16896	; 0x4200
    4f4c:	02005806 	andeq	r5, r0, #393216	; 0x60000
    4f50:	00740304 	rsbseq	r0, r4, r4, lsl #6
    4f54:	01030402 	tsteq	r3, r2, lsl #8
    4f58:	03040200 	movweq	r0, #16896	; 0x4200
    4f5c:	04020001 	streq	r0, [r2], #-1
    4f60:	02001703 	andeq	r1, r0, #786432	; 0xc0000
    4f64:	00010304 	andeq	r0, r1, r4, lsl #6
    4f68:	66010402 	strvs	r0, [r1], -r2, lsl #8
    4f6c:	01000902 	tsteq	r0, r2, lsl #18
    4f70:	00050501 	andeq	r0, r5, r1, lsl #10
    4f74:	00000205 	andeq	r0, r0, r5, lsl #4
    4f78:	d6030000 	strle	r0, [r3], -r0
    4f7c:	0106011a 	tsteq	r6, sl, lsl r1
    4f80:	2f060905 	svccs	0x00060905
    4f84:	37051313 	smladcc	r5, r3, r3, r1
    4f88:	14260514 	strtne	r0, [r6], #-1300	; 0xfffffaec
    4f8c:	12033305 	andne	r3, r3, #335544320	; 0x14000000
    4f90:	17090501 	strne	r0, [r9, -r1, lsl #10]
    4f94:	01062205 	tsteq	r6, r5, lsl #4
    4f98:	060d052e 	streq	r0, [sp], -lr, lsr #10
    4f9c:	06110522 	ldreq	r0, [r1], -r2, lsr #10
    4fa0:	0f052001 	svceq	0x00052001
    4fa4:	0633052e 	ldrteq	r0, [r3], -lr, lsr #10
    4fa8:	1511053e 	ldrne	r0, [r1, #-1342]	; 0xfffffac2
    4fac:	01062a05 	tsteq	r6, r5, lsl #20
    4fb0:	052e1305 	streq	r1, [lr, #-773]!	; 0xfffffcfb
    4fb4:	05340619 	ldreq	r0, [r4, #-1561]!	; 0xfffff9e7
    4fb8:	05010622 	streq	r0, [r1, #-1570]	; 0xfffff9de
    4fbc:	1b05203d 	blne	14d0b8 <__RAM_SIZE+0x4d0b8>
    4fc0:	061d053c 			; <UNDEFINED> instruction: 0x061d053c
    4fc4:	31051730 	tstcc	r5, r0, lsr r7
    4fc8:	35050106 	strcc	r0, [r5, #-262]	; 0xfffffefa
    4fcc:	15054006 	strne	r4, [r5, #-6]
    4fd0:	061e0517 			; <UNDEFINED> instruction: 0x061e0517
    4fd4:	06150501 	ldreq	r0, [r5], -r1, lsl #10
    4fd8:	0101014b 	tsteq	r1, fp, asr #2
    4fdc:	01040200 	mrseq	r0, R12_usr
    4fe0:	04020058 	streq	r0, [r2], #-88	; 0xffffffa8
    4fe4:	02002e03 	andeq	r2, r0, #3, 28	; 0x30
    4fe8:	00010304 	andeq	r0, r1, r4, lsl #6
    4fec:	01030402 	tsteq	r3, r2, lsl #8
    4ff0:	03040200 	movweq	r0, #16896	; 0x4200
    4ff4:	04020066 	streq	r0, [r2], #-102	; 0xffffff9a
    4ff8:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    4ffc:	00010304 	andeq	r0, r1, r4, lsl #6
    5000:	20030402 	andcs	r0, r3, r2, lsl #8
    5004:	03040200 	movweq	r0, #16896	; 0x4200
    5008:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    500c:	02002003 	andeq	r2, r0, #3
    5010:	00200304 	eoreq	r0, r0, r4, lsl #6
    5014:	06030402 	streq	r0, [r3], -r2, lsl #8
    5018:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    501c:	00580603 	subseq	r0, r8, r3, lsl #12
    5020:	74030402 	strvc	r0, [r3], #-1026	; 0xfffffbfe
    5024:	03040200 	movweq	r0, #16896	; 0x4200
    5028:	04020001 	streq	r0, [r2], #-1
    502c:	29050103 	stmdbcs	r5, {r0, r1, r8}
    5030:	05011703 	streq	r1, [r1, #-1795]	; 0xfffff8fd
    5034:	39051509 	stmdbcc	r5, {r0, r3, r8, sl, ip}
    5038:	1409053e 	strne	r0, [r9], #-1342	; 0xfffffac2
    503c:	13060505 	movwne	r0, #25861	; 0x6505
    5040:	a6031405 	strge	r1, [r3], -r5, lsl #8
    5044:	15052e7f 	strne	r2, [r5, #-3711]	; 0xfffff181
    5048:	00c20306 	sbceq	r0, r2, r6, lsl #6
    504c:	0614052e 	ldreq	r0, [r4], -lr, lsr #10
    5050:	587fbe03 	ldmdapl	pc!, {r0, r1, r9, sl, fp, ip, sp, pc}^	; <UNPREDICTABLE>
    5054:	01000f02 	tsteq	r0, r2, lsl #30
    5058:	00010501 	andeq	r0, r1, r1, lsl #10
    505c:	00000205 	andeq	r0, r0, r5, lsl #4
    5060:	b8030000 	stmdalt	r3, {}	; <UNPREDICTABLE>
    5064:	2305011d 	movwcs	r0, #20765	; 0x511d
    5068:	16090521 	strne	r0, [r9], -r1, lsr #10
    506c:	05170d05 	ldreq	r0, [r7, #-3333]	; 0xfffff2fb
    5070:	16054f09 	strne	r4, [r5], -r9, lsl #30
    5074:	1b050106 	blne	145494 <__RAM_SIZE+0x45494>
    5078:	01040200 	mrseq	r0, R12_usr
    507c:	09052006 	stmdbeq	r5, {r1, r2, sp}
    5080:	01040200 	mrseq	r0, R12_usr
    5084:	03060106 	movweq	r0, #24838	; 0x6106
    5088:	05052e09 	streq	r2, [r5, #-3593]	; 0xfffff1f7
    508c:	17052f35 	smladxne	r5, r5, pc, r2	; <UNPREDICTABLE>
    5090:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    5094:	24054006 	strcs	r4, [r5], #-6
    5098:	06010530 			; <UNDEFINED> instruction: 0x06010530
    509c:	000d0513 	andeq	r0, sp, r3, lsl r5
    50a0:	06030402 	streq	r0, [r3], -r2, lsl #8
    50a4:	05206a03 	streq	r6, [r0, #-2563]!	; 0xfffff5fd
    50a8:	0402004b 	streq	r0, [r2], #-75	; 0xffffffb5
    50ac:	52055603 	andpl	r5, r5, #3145728	; 0x300000
    50b0:	03040200 	movweq	r0, #16896	; 0x4200
    50b4:	02000106 	andeq	r0, r0, #-2147483647	; 0x80000001
    50b8:	02200304 	eoreq	r0, r0, #4, 6	; 0x10000000
    50bc:	01010006 	tsteq	r1, r6
    50c0:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    50c4:	00285c02 	eoreq	r5, r8, r2, lsl #24
    50c8:	1de30310 	stclne	3, cr0, [r3, #64]!	; 0x40
    50cc:	13210501 			; <UNDEFINED> instruction: 0x13210501
    50d0:	0b031f05 	bleq	cccec <__HEAP_SIZE+0xcbcec>
    50d4:	16090501 	strne	r0, [r9], -r1, lsl #10
    50d8:	01062005 	tsteq	r6, r5
    50dc:	053c1e05 	ldreq	r1, [ip, #-3589]!	; 0xfffff1fb
    50e0:	05240609 	streq	r0, [r4, #-1545]!	; 0xfffff9f7
    50e4:	01370322 	teqeq	r7, r2, lsr #6
    50e8:	13060105 	movwne	r0, #24837	; 0x6105
    50ec:	01000402 	tsteq	r0, r2, lsl #8
    50f0:	00010501 	andeq	r0, r1, r1, lsl #10
    50f4:	286c0205 	stmdacs	ip!, {r0, r2, r9}^
    50f8:	8a031000 	bhi	c9100 <__HEAP_SIZE+0xc8100>
    50fc:	05050120 	streq	r0, [r5, #-288]	; 0xfffffee0
    5100:	14230513 	strtne	r0, [r3], #-1299	; 0xfffffaed
    5104:	14090515 	strne	r0, [r9], #-1301	; 0xfffffaeb
    5108:	01061005 	tsteq	r6, r5
    510c:	30062205 	andcc	r2, r6, r5, lsl #4
    5110:	05142c05 	ldreq	r2, [r4, #-3077]	; 0xfffff3fb
    5114:	01051405 	tsteq	r5, r5, lsl #8
    5118:	04021306 	streq	r1, [r2], #-774	; 0xfffffcfa
    511c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    5120:	02050001 	andeq	r0, r5, #1
    5124:	00000000 	andeq	r0, r0, r0
    5128:	01209d03 			; <UNDEFINED> instruction: 0x01209d03
    512c:	13130505 	tstne	r3, #20971520	; 0x1400000
    5130:	05142a05 	ldreq	r2, [r4, #-2565]	; 0xfffff5fb
    5134:	0110032f 	tsteq	r0, pc, lsr #6
    5138:	05140505 	ldreq	r0, [r4, #-1285]	; 0xfffffafb
    513c:	11051409 	tstne	r5, r9, lsl #8
    5140:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    5144:	34053006 	strcc	r3, [r5], #-6
    5148:	14050514 	strne	r0, [r5], #-1300	; 0xfffffaec
    514c:	13060105 	movwne	r0, #24837	; 0x6105
    5150:	01000402 	tsteq	r0, r2, lsl #8
    5154:	00010501 	andeq	r0, r1, r1, lsl #10
    5158:	28780205 	ldmdacs	r8!, {r0, r2, r9}^
    515c:	c0031000 	andgt	r1, r3, r0
    5160:	28050120 	stmdacs	r5, {r5, r8}
    5164:	16410513 			; <UNDEFINED> instruction: 0x16410513
    5168:	05140505 	ldreq	r0, [r4, #-1285]	; 0xfffffafb
    516c:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    5170:	04022f01 	streq	r2, [r2], #-3841	; 0xfffff0ff
    5174:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    5178:	02050001 	andeq	r0, r5, #1
    517c:	00000000 	andeq	r0, r0, r0
    5180:	0120cc03 			; <UNDEFINED> instruction: 0x0120cc03
    5184:	05130505 	ldreq	r0, [r3, #-1285]	; 0xfffffafb
    5188:	0505142d 	streq	r1, [r5, #-1069]	; 0xfffffbd3
    518c:	060d0516 			; <UNDEFINED> instruction: 0x060d0516
    5190:	001a0501 	andseq	r0, sl, r1, lsl #10
    5194:	06040402 	streq	r0, [r4], -r2, lsl #8
    5198:	003d052f 	eorseq	r0, sp, pc, lsr #10
    519c:	14040402 	strne	r0, [r4], #-1026	; 0xfffffbfe
    51a0:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    51a4:	05140404 	ldreq	r0, [r4, #-1028]	; 0xfffffbfc
    51a8:	04020001 	streq	r0, [r2], #-1
    51ac:	05130604 	ldreq	r0, [r3, #-1540]	; 0xfffff9fc
    51b0:	0402000d 	streq	r0, [r2], #-13
    51b4:	3c7a0301 	ldclcc	3, cr0, [sl], #-4
    51b8:	01040200 	mrseq	r0, R12_usr
    51bc:	0003022e 	andeq	r0, r3, lr, lsr #4
    51c0:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    51c4:	00020500 	andeq	r0, r2, r0, lsl #10
    51c8:	03000000 	movweq	r0, #0
    51cc:	050121ed 	streq	r2, [r1, #-493]	; 0xfffffe13
    51d0:	05131309 	ldreq	r1, [r3, #-777]	; 0xfffffcf7
    51d4:	30051452 	andcc	r1, r5, r2, asr r4
    51d8:	132e0514 			; <UNDEFINED> instruction: 0x132e0514
    51dc:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    51e0:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    51e4:	0402000d 	streq	r0, [r2], #-13
    51e8:	05320604 	ldreq	r0, [r2, #-1540]!	; 0xfffff9fc
    51ec:	04020016 	streq	r0, [r2], #-22	; 0xffffffea
    51f0:	05010604 	streq	r0, [r1, #-1540]	; 0xfffff9fc
    51f4:	0402000f 	streq	r0, [r2], #-15
    51f8:	12052e04 	andne	r2, r5, #4, 28	; 0x40
    51fc:	2e090306 	cdpcs	3, 0, cr0, cr9, cr6, {0}
    5200:	01061405 	tsteq	r6, r5, lsl #8
    5204:	05361905 	ldreq	r1, [r6, #-2309]!	; 0xfffff6fb
    5208:	0b030635 	bleq	c6ae4 <__HEAP_SIZE+0xc5ae4>
    520c:	14090520 	strne	r0, [r9], #-1312	; 0xfffffae0
    5210:	13060505 	movwne	r0, #25861	; 0x6505
    5214:	02001105 	andeq	r1, r0, #1073741825	; 0x40000001
    5218:	5d030104 	stfpls	f0, [r3, #-16]
    521c:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    5220:	26062e01 	strcs	r2, [r6], -r1, lsl #28
    5224:	01062905 	tsteq	r6, r5, lsl #18
    5228:	05202205 	streq	r2, [r0, #-517]!	; 0xfffffdfb
    522c:	05240611 	streq	r0, [r4, #-1553]!	; 0xfffff9ef
    5230:	05010620 	streq	r0, [r1, #-1568]	; 0xfffff9e0
    5234:	05210611 	streq	r0, [r1, #-1553]!	; 0xfffff9ef
    5238:	05010619 	streq	r0, [r1, #-1561]	; 0xfffff9e7
    523c:	05320611 	ldreq	r0, [r2, #-1553]!	; 0xfffff9ef
    5240:	05010629 	streq	r0, [r1, #-1577]	; 0xfffff9d7
    5244:	11052022 	tstne	r5, r2, lsr #32
    5248:	20052106 	andcs	r2, r5, r6, lsl #2
    524c:	11050106 	tstne	r5, r6, lsl #2
    5250:	01062f06 	tsteq	r6, r6, lsl #30
    5254:	01000402 	tsteq	r0, r2, lsl #8
    5258:	00090501 	andeq	r0, r9, r1, lsl #10
    525c:	00000205 	andeq	r0, r0, r5, lsl #4
    5260:	f1030000 			; <UNDEFINED> instruction: 0xf1030000
    5264:	30050122 	andcc	r0, r5, r2, lsr #2
    5268:	163e0513 			; <UNDEFINED> instruction: 0x163e0513
    526c:	05144805 	ldreq	r4, [r4, #-2053]	; 0xfffff7fb
    5270:	0905140d 	stmdbeq	r5, {r0, r2, r3, sl, ip}
    5274:	06021306 	streq	r1, [r2], -r6, lsl #6
    5278:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    527c:	02050005 	andeq	r0, r5, #5
    5280:	00000000 	andeq	r0, r0, r0
    5284:	0122ff03 	msreq	LR_svc, r3
    5288:	05133c05 	ldreq	r3, [r3, #-3077]	; 0xfffff3fb
    528c:	4005153f 	andmi	r1, r5, pc, lsr r5
    5290:	14510516 	ldrbne	r0, [r1], #-1302	; 0xfffffaea
    5294:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    5298:	3c130605 	ldccc	6, cr0, [r3], {5}
    529c:	01000302 	tsteq	r0, r2, lsl #6
    52a0:	00050501 	andeq	r0, r5, r1, lsl #10
    52a4:	28840205 	stmcs	r4, {r0, r2, r9}
    52a8:	98031000 	stmdals	r3, {ip}
    52ac:	01060123 	tsteq	r6, r3, lsr #2
    52b0:	2f060905 	svccs	0x00060905
    52b4:	05143105 	ldreq	r3, [r4, #-261]	; 0xfffffefb
    52b8:	28051709 	stmdacs	r5, {r0, r3, r8, r9, sl, ip}
    52bc:	1b050106 	blne	1456dc <__RAM_SIZE+0x456dc>
    52c0:	0642052e 	strbeq	r0, [r2], -lr, lsr #10
    52c4:	14090521 	strne	r0, [r9], #-1313	; 0xfffffadf
    52c8:	01061f05 	tsteq	r6, r5, lsl #30
    52cc:	052e0b05 	streq	r0, [lr, #-2821]!	; 0xfffff4fb
    52d0:	12030625 	andne	r0, r3, #38797312	; 0x2500000
    52d4:	1509052e 	strne	r0, [r9, #-1326]	; 0xfffffad2
    52d8:	01061405 	tsteq	r6, r5, lsl #8
    52dc:	0631053c 			; <UNDEFINED> instruction: 0x0631053c
    52e0:	13240522 			; <UNDEFINED> instruction: 0x13240522
    52e4:	13060505 	movwne	r0, #25861	; 0x6505
    52e8:	03064705 	movweq	r4, #26373	; 0x6705
    52ec:	3d05206c 	stccc	0, cr2, [r5, #-432]	; 0xfffffe50
    52f0:	150d0513 	strne	r0, [sp, #-1299]	; 0xfffffaed
    52f4:	05301105 	ldreq	r1, [r0, #-261]!	; 0xfffffefb
    52f8:	0501061d 	streq	r0, [r1, #-1565]	; 0xfffff9e3
    52fc:	2f4c060d 	svccs	0x004c060d
    5300:	01061905 	tsteq	r6, r5, lsl #18
    5304:	00070220 	andeq	r0, r7, r0, lsr #4
    5308:	01050101 	tsteq	r5, r1, lsl #2
    530c:	c0020500 	andgt	r0, r2, r0, lsl #10
    5310:	03100028 	tsteq	r0, #40	; 0x28
    5314:	050124be 	streq	r2, [r1, #-1214]	; 0xfffffb42
    5318:	13131305 	tstne	r3, #335544320	; 0x14000000
    531c:	05182405 	ldreq	r2, [r8, #-1029]	; 0xfffffbfb
    5320:	0505172b 	streq	r1, [r5, #-1835]	; 0xfffff8d5
    5324:	061e0518 			; <UNDEFINED> instruction: 0x061e0518
    5328:	2e070501 	cfsh32cs	mvfx0, mvfx7, #1
    532c:	6c030105 	stfvss	f0, [r3], {5}
    5330:	0609053c 			; <UNDEFINED> instruction: 0x0609053c
    5334:	05201803 	streq	r1, [r0, #-2051]!	; 0xfffff7fd
    5338:	05010637 	streq	r0, [r1, #-1591]	; 0xfffff9c9
    533c:	09052e1a 	stmdbeq	r5, {r1, r3, r4, r9, sl, fp, sp}
    5340:	14052406 	strne	r2, [r5], #-1030	; 0xfffffbfa
    5344:	09050106 	stmdbeq	r5, {r1, r2, r8}
    5348:	0b052206 	bleq	14db68 <__RAM_SIZE+0x4db68>
    534c:	25050106 	strcs	r0, [r5, #-262]	; 0xfffffefa
    5350:	09052606 	stmdbeq	r5, {r1, r2, r9, sl, sp}
    5354:	061d0519 			; <UNDEFINED> instruction: 0x061d0519
    5358:	2e0b0501 	cfsh32cs	mvfx0, mvfx11, #1
    535c:	58031005 	stmdapl	r3, {r0, r2, ip}
    5360:	0611052e 	ldreq	r0, [r1], -lr, lsr #10
    5364:	20018c03 	andcs	r8, r1, r3, lsl #24
    5368:	01061505 	tsteq	r6, r5, lsl #10
    536c:	05821305 	streq	r1, [r2, #773]	; 0x305
    5370:	2d053025 	stccs	0, cr3, [r5, #-148]	; 0xffffff6c
    5374:	11052406 	tstne	r5, r6, lsl #8
    5378:	05012b03 	streq	r2, [r1, #-2819]	; 0xfffff4fd
    537c:	05010623 	streq	r0, [r1, #-1571]	; 0xfffff9dd
    5380:	052e2e13 	streq	r2, [lr, #-3603]!	; 0xfffff1ed
    5384:	013a0301 	teqeq	sl, r1, lsl #6
    5388:	03060d05 	movweq	r0, #27909	; 0x6d05
    538c:	01207ea6 			; <UNDEFINED> instruction: 0x01207ea6
    5390:	3c2e0101 	stfccs	f0, [lr], #-4
    5394:	2e064a20 	vmlacs.f32	s8, s12, s1
    5398:	20060106 	andcs	r0, r6, r6, lsl #2
    539c:	63031005 	movwvs	r1, #12293	; 0x3005
    53a0:	06150501 	ldreq	r0, [r5], -r1, lsl #10
    53a4:	052e3303 	streq	r3, [lr, #-771]!	; 0xfffffcfd
    53a8:	0501062a 	streq	r0, [r1, #-1578]	; 0xfffff9d6
    53ac:	054b0615 	strbeq	r0, [fp, #-1557]	; 0xfffff9eb
    53b0:	20150319 	andscs	r0, r5, r9, lsl r3
    53b4:	01062e05 	tsteq	r6, r5, lsl #28
    53b8:	06190520 	ldreq	r0, [r9], -r0, lsr #10
    53bc:	00150521 	andseq	r0, r5, r1, lsr #10
    53c0:	28010402 	stmdacs	r1, {r1, sl}
    53c4:	01040200 	mrseq	r0, R12_usr
    53c8:	19053c06 	stmdbne	r5, {r1, r2, sl, fp, ip, sp}
    53cc:	03040200 	movweq	r0, #16896	; 0x4200
    53d0:	02001806 	andeq	r1, r0, #393216	; 0x60000
    53d4:	002e0304 	eoreq	r0, lr, r4, lsl #6
    53d8:	3c030402 	cfstrscc	mvf0, [r3], {2}
    53dc:	05163105 	ldreq	r3, [r6, #-261]	; 0xfffffefb
    53e0:	01011715 	tsteq	r1, r5, lsl r7
    53e4:	04020001 	streq	r0, [r2], #-1
    53e8:	02005801 	andeq	r5, r0, #65536	; 0x10000
    53ec:	002e0304 	eoreq	r0, lr, r4, lsl #6
    53f0:	01030402 	tsteq	r3, r2, lsl #8
    53f4:	03040200 	movweq	r0, #16896	; 0x4200
    53f8:	04020001 	streq	r0, [r2], #-1
    53fc:	02008203 	andeq	r8, r0, #805306368	; 0x30000000
    5400:	00010304 	andeq	r0, r1, r4, lsl #6
    5404:	01030402 	tsteq	r3, r2, lsl #8
    5408:	03040200 	movweq	r0, #16896	; 0x4200
    540c:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    5410:	02002e03 	andeq	r2, r0, #3, 28	; 0x30
    5414:	00200304 	eoreq	r0, r0, r4, lsl #6
    5418:	20030402 	andcs	r0, r3, r2, lsl #8
    541c:	03040200 	movweq	r0, #16896	; 0x4200
    5420:	02002006 	andeq	r2, r0, #6
    5424:	66060304 	strvs	r0, [r6], -r4, lsl #6
    5428:	03040200 	movweq	r0, #16896	; 0x4200
    542c:	04020066 	streq	r0, [r2], #-102	; 0xffffff9a
    5430:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    5434:	05010304 	streq	r0, [r1, #-772]	; 0xfffffcfc
    5438:	0402001d 	streq	r0, [r2], #-29	; 0xffffffe3
    543c:	01100303 	tsteq	r0, r3, lsl #6
    5440:	02002605 	andeq	r2, r0, #5242880	; 0x500000
    5444:	01060304 	tsteq	r6, r4, lsl #6
    5448:	02004105 	andeq	r4, r0, #1073741825	; 0x40000001
    544c:	00200304 	eoreq	r0, r0, r4, lsl #6
    5450:	20030402 	andcs	r0, r3, r2, lsl #8
    5454:	02001f05 	andeq	r1, r0, #5, 30
    5458:	052e0304 	streq	r0, [lr, #-772]!	; 0xfffffcfc
    545c:	0d053031 	stceq	0, cr3, [r5, #-196]	; 0xffffff3c
    5460:	7fb70306 	svcvc	0x00b70306
    5464:	14110520 	ldrne	r0, [r1], #-1312	; 0xfffffae0
    5468:	01061505 	tsteq	r6, r5, lsl #10
    546c:	053c1305 	ldreq	r1, [ip, #-773]!	; 0xfffffcfb
    5470:	13030615 	movwne	r0, #13845	; 0x3615
    5474:	061d052e 	ldreq	r0, [sp], -lr, lsr #10
    5478:	3c1b0501 	cfldr32cc	mvfx0, [fp], {1}
    547c:	21061505 	tstcs	r6, r5, lsl #10
    5480:	01062005 	tsteq	r6, r5
    5484:	22061505 	andcs	r1, r6, #20971520	; 0x1400000
    5488:	01061705 	tsteq	r6, r5, lsl #14
    548c:	03063105 	movweq	r3, #24837	; 0x6105
    5490:	15052e0c 	strne	r2, [r5, #-3596]	; 0xfffff1f4
    5494:	3c200116 	stfccs	f0, [r0], #-88	; 0xffffffa8
    5498:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    549c:	02004a03 	andeq	r4, r0, #12288	; 0x3000
    54a0:	002e0304 	eoreq	r0, lr, r4, lsl #6
    54a4:	3c030402 	cfstrscc	mvf0, [r3], {2}
    54a8:	03040200 	movweq	r0, #16896	; 0x4200
    54ac:	00190516 	andseq	r0, r9, r6, lsl r5
    54b0:	06030402 	streq	r0, [r3], -r2, lsl #8
    54b4:	00170501 	andseq	r0, r7, r1, lsl #10
    54b8:	20030402 	andcs	r0, r3, r2, lsl #8
    54bc:	30061905 	andcc	r1, r6, r5, lsl #18
    54c0:	2e3c0101 	rsfcse	f0, f4, f1
    54c4:	01040200 	mrseq	r0, R12_usr
    54c8:	04020058 	streq	r0, [r2], #-88	; 0xffffffa8
    54cc:	053c0601 	ldreq	r0, [ip, #-1537]!	; 0xfffff9ff
    54d0:	91030609 	tstls	r3, r9, lsl #12
    54d4:	16050101 	strne	r0, [r5], -r1, lsl #2
    54d8:	10050106 	andne	r0, r5, r6, lsl #2
    54dc:	4a7e9703 	bmi	1fab0f0 <__RAM_SIZE+0x1eab0f0>
    54e0:	f7030105 			; <UNDEFINED> instruction: 0xf7030105
    54e4:	25052001 	strcs	r2, [r5, #-1]
    54e8:	20204803 	eorcs	r4, r0, r3, lsl #16
    54ec:	03063605 	movweq	r3, #26117	; 0x6605
    54f0:	05050135 	streq	r0, [r5, #-309]	; 0xfffffecb
    54f4:	060c0514 			; <UNDEFINED> instruction: 0x060c0514
    54f8:	00170201 	andseq	r0, r7, r1, lsl #4
    54fc:	01050101 	tsteq	r5, r1, lsl #2
    5500:	20020500 	andcs	r0, r2, r0, lsl #10
    5504:	0310002a 	tsteq	r0, #42	; 0x2a
    5508:	05011ef4 	streq	r1, [r1, #-3828]	; 0xfffff10c
    550c:	05132105 	ldreq	r2, [r3, #-261]	; 0xfffffefb
    5510:	09051420 	stmdbeq	r5, {r5, sl, ip}
    5514:	05010b03 	streq	r0, [r1, #-2819]	; 0xfffff4fd
    5518:	0513300d 	ldreq	r3, [r3, #-13]
    551c:	0d051637 	stceq	6, cr1, [r5, #-220]	; 0xffffff24
    5520:	06240514 			; <UNDEFINED> instruction: 0x06240514
    5524:	3c220501 	cfstr32cc	mvfx0, [r2], #-4
    5528:	21062405 	tstcs	r6, r5, lsl #8
    552c:	05140d05 	ldreq	r0, [r4, #-3333]	; 0xfffff2fb
    5530:	05010626 	streq	r0, [r1, #-1574]	; 0xfffff9da
    5534:	1105200f 	tstne	r5, pc
    5538:	2c053006 	stccs	0, cr3, [r5], {6}
    553c:	13050106 	movwne	r0, #20742	; 0x5106
    5540:	0310052e 	tsteq	r0, #192937984	; 0xb800000
    5544:	19052065 	stmdbne	r5, {r0, r2, r5, r6, sp}
    5548:	01040200 	mrseq	r0, R12_usr
    554c:	2e250306 	cdpcs	3, 2, cr0, cr5, cr6, {0}
    5550:	01040200 	mrseq	r0, R12_usr
    5554:	02003c06 	andeq	r3, r0, #1536	; 0x600
    5558:	14060104 	strne	r0, [r6], #-260	; 0xfffffefc
    555c:	01040200 	mrseq	r0, R12_usr
    5560:	0d053c06 	stceq	12, cr3, [r5, #-24]	; 0xffffffe8
    5564:	05015803 	streq	r5, [r1, #-2051]	; 0xfffff7fd
    5568:	35030639 	strcc	r0, [r3, #-1593]	; 0xfffff9c7
    556c:	031a0520 	tsteq	sl, #32, 10	; 0x8000000
    5570:	1c05016b 	stfnes	f0, [r5], {107}	; 0x6b
    5574:	1a050106 	bne	145994 <__RAM_SIZE+0x45994>
    5578:	0619052e 	ldreq	r0, [r9], -lr, lsr #10
    557c:	06210533 			; <UNDEFINED> instruction: 0x06210533
    5580:	1f052001 	svcne	0x00052001
    5584:	06190520 	ldreq	r0, [r9], -r0, lsr #10
    5588:	3c200121 	stfccs	f0, [r0], #-132	; 0xffffff7c
    558c:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    5590:	02005803 	andeq	r5, r0, #196608	; 0x30000
    5594:	002e0304 	eoreq	r0, lr, r4, lsl #6
    5598:	3c030402 	cfstrscc	mvf0, [r3], {2}
    559c:	03040200 	movweq	r0, #16896	; 0x4200
    55a0:	04020013 	streq	r0, [r2], #-19	; 0xffffffed
    55a4:	02001303 	andeq	r1, r0, #201326592	; 0xc000000
    55a8:	00010304 	andeq	r0, r1, r4, lsl #6
    55ac:	20030402 	andcs	r0, r3, r2, lsl #8
    55b0:	03040200 	movweq	r0, #16896	; 0x4200
    55b4:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    55b8:	02002e03 	andeq	r2, r0, #3, 28	; 0x30
    55bc:	004a0304 	subeq	r0, sl, r4, lsl #6
    55c0:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
    55c4:	03040200 	movweq	r0, #16896	; 0x4200
    55c8:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    55cc:	02001303 	andeq	r1, r0, #201326592	; 0xc000000
    55d0:	00010304 	andeq	r0, r1, r4, lsl #6
    55d4:	01030402 	tsteq	r3, r2, lsl #8
    55d8:	03040200 	movweq	r0, #16896	; 0x4200
    55dc:	04020001 	streq	r0, [r2], #-1
    55e0:	00200603 	eoreq	r0, r0, r3, lsl #12
    55e4:	06010402 	streq	r0, [r1], -r2, lsl #8
    55e8:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    55ec:	02002e03 	andeq	r2, r0, #3, 28	; 0x30
    55f0:	00010304 	andeq	r0, r1, r4, lsl #6
    55f4:	01030402 	tsteq	r3, r2, lsl #8
    55f8:	03040200 	movweq	r0, #16896	; 0x4200
    55fc:	04020066 	streq	r0, [r2], #-102	; 0xffffff9a
    5600:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    5604:	00010304 	andeq	r0, r1, r4, lsl #6
    5608:	20030402 	andcs	r0, r3, r2, lsl #8
    560c:	03040200 	movweq	r0, #16896	; 0x4200
    5610:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    5614:	02002003 	andeq	r2, r0, #3
    5618:	00200304 	eoreq	r0, r0, r4, lsl #6
    561c:	06030402 	streq	r0, [r3], -r2, lsl #8
    5620:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    5624:	00580603 	subseq	r0, r8, r3, lsl #12
    5628:	74030402 	strvc	r0, [r3], #-1026	; 0xfffffbfe
    562c:	03040200 	movweq	r0, #16896	; 0x4200
    5630:	04020001 	streq	r0, [r2], #-1
    5634:	1d050103 	stfnes	f0, [r5, #-12]
    5638:	03040200 	movweq	r0, #16896	; 0x4200
    563c:	00260518 	eoreq	r0, r6, r8, lsl r5
    5640:	06030402 	streq	r0, [r3], -r2, lsl #8
    5644:	00410501 	subeq	r0, r1, r1, lsl #10
    5648:	20030402 	andcs	r0, r3, r2, lsl #8
    564c:	02001f05 	andeq	r1, r0, #5, 30
    5650:	053c0304 	ldreq	r0, [ip, #-772]!	; 0xfffffcfc
    5654:	05300621 	ldreq	r0, [r0, #-1569]!	; 0xfffff9df
    5658:	0501063b 	streq	r0, [r1, #-1595]	; 0xfffff9c5
    565c:	10030615 	andne	r0, r3, r5, lsl r6
    5660:	0617054a 	ldreq	r0, [r7], -sl, asr #10
    5664:	06190501 	ldreq	r0, [r9], -r1, lsl #10
    5668:	2e0d0328 	cdpcs	3, 0, cr0, cr13, cr8, {1}
    566c:	01062405 	tsteq	r6, r5, lsl #8
    5670:	30061905 	andcc	r1, r6, r5, lsl #18
    5674:	01061b05 	tsteq	r6, r5, lsl #22
    5678:	03063505 	movweq	r3, #25861	; 0x6505
    567c:	15052016 	strne	r2, [r5, #-22]	; 0xffffffea
    5680:	06270516 			; <UNDEFINED> instruction: 0x06270516
    5684:	2e170501 	cfmul32cs	mvfx0, mvfx7, mvfx1
    5688:	24061d05 	strcs	r1, [r6], #-3333	; 0xfffff2fb
    568c:	2e2e0118 	mcrcs	1, 1, r0, cr14, cr8, {0}
    5690:	03062d05 	movweq	r2, #27909	; 0x6d05
    5694:	3d05017a 	stfccs	f0, [r5, #-488]	; 0xfffffe18
    5698:	2e6e0306 	cdpcs	3, 6, cr0, cr14, cr6, {0}
    569c:	05152105 	ldreq	r2, [r5, #-261]	; 0xfffffefb
    56a0:	1d051324 	stcne	3, cr1, [r5, #-144]	; 0xffffff70
    56a4:	06200106 	strteq	r0, [r0], -r6, lsl #2
    56a8:	05207203 	streq	r7, [r0, #-515]!	; 0xfffffdfd
    56ac:	25051421 	strcs	r1, [r5, #-1057]	; 0xfffffbdf
    56b0:	23050106 	movwcs	r0, #20742	; 0x5106
    56b4:	0625052e 	strteq	r0, [r5], -lr, lsr #10
    56b8:	063f0532 			; <UNDEFINED> instruction: 0x063f0532
    56bc:	061d0501 	ldreq	r0, [sp], -r1, lsl #10
    56c0:	054a0a03 	strbeq	r0, [sl, #-2563]	; 0xfffff5fd
    56c4:	4a01062a 	bmi	46f74 <__HEAP_SIZE+0x45f74>
    56c8:	97031005 	strls	r1, [r3, -r5]
    56cc:	2905017f 	stmdbcs	r5, {r0, r1, r2, r3, r4, r5, r6, r8}
    56d0:	01870306 	orreq	r0, r7, r6, lsl #6
    56d4:	15090520 	strne	r0, [r9, #-1312]	; 0xfffffae0
    56d8:	05313205 	ldreq	r3, [r1, #-517]!	; 0xfffffdfb
    56dc:	01051405 	tsteq	r5, r5, lsl #8
    56e0:	082e1306 	stmdaeq	lr!, {r1, r2, r8, r9, ip}
    56e4:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    56e8:	02050005 	andeq	r0, r5, #5
    56ec:	00000000 	andeq	r0, r0, r0
    56f0:	0112a803 	tsteq	r2, r3, lsl #16
    56f4:	09050106 	stmdbeq	r5, {r1, r2, r8}
    56f8:	05133d06 	ldreq	r3, [r3, #-3334]	; 0xfffff2fa
    56fc:	2b051449 	blcs	14a828 <__RAM_SIZE+0x4a828>
    5700:	13300514 	teqne	r0, #20, 10	; 0x5000000
    5704:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    5708:	1e05320d 	cdpne	2, 0, cr3, cr5, cr13, {0}
    570c:	37050106 	strcc	r0, [r5, -r6, lsl #2]
    5710:	0d053006 	stceq	0, cr3, [r5, #-24]	; 0xffffffe8
    5714:	061b0515 			; <UNDEFINED> instruction: 0x061b0515
    5718:	20190501 	andscs	r0, r9, r1, lsl #10
    571c:	22060d05 	andcs	r0, r6, #320	; 0x140
    5720:	01060f05 	tsteq	r6, r5, lsl #30
    5724:	35061105 	strcc	r1, [r6, #-261]	; 0xfffffefb
    5728:	01061305 	tsteq	r6, r5, lsl #6
    572c:	03060d05 	movweq	r0, #27909	; 0x6d05
    5730:	21052e19 	tstcs	r5, r9, lsl lr
    5734:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    5738:	25052206 	strcs	r2, [r5, #-518]	; 0xfffffdfa
    573c:	014c0306 	cmpeq	ip, r6, lsl #6
    5740:	003b0520 	eorseq	r0, fp, r0, lsr #10
    5744:	03010402 	movweq	r0, #5122	; 0x1402
    5748:	0d052019 	stceq	0, cr2, [r5, #-100]	; 0xffffff9c
    574c:	2e190306 	cdpcs	3, 1, cr0, cr9, cr6, {0}
    5750:	01062105 	tsteq	r6, r5, lsl #2
    5754:	22060d05 	andcs	r0, r6, #320	; 0x140
    5758:	03062505 	movweq	r2, #25861	; 0x6505
    575c:	0520014c 	streq	r0, [r0, #-332]!	; 0xfffffeb4
    5760:	1b030615 	blne	c6fbc <__HEAP_SIZE+0xc5fbc>
    5764:	030d0520 	movweq	r0, #54560	; 0xd520
    5768:	21050117 	tstcs	r5, r7, lsl r1
    576c:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    5770:	11052206 	tstne	r5, r6, lsl #4
    5774:	05207303 	streq	r7, [r0, #-771]!	; 0xfffffcfd
    5778:	05010613 	streq	r0, [r1, #-1555]	; 0xfffff9ed
    577c:	0402003b 	streq	r0, [r2], #-59	; 0xffffffc5
    5780:	15052e01 	strne	r2, [r5, #-3585]	; 0xfffff1ff
    5784:	0d053006 	stceq	0, cr3, [r5, #-24]	; 0xffffffe8
    5788:	05010903 	streq	r0, [r1, #-2307]	; 0xfffff6fd
    578c:	05010621 	streq	r0, [r1, #-1569]	; 0xfffff9df
    5790:	0522060d 	streq	r0, [r2, #-1549]!	; 0xfffff9f3
    5794:	11051435 	tstne	r5, r5, lsr r4
    5798:	052e0616 	streq	r0, [lr, #-1558]!	; 0xfffff9ea
    579c:	05400629 	strbeq	r0, [r0, #-1577]	; 0xfffff9d7
    57a0:	1b051509 	blne	14abcc <__RAM_SIZE+0x4abcc>
    57a4:	09050106 	stmdbeq	r5, {r1, r2, r8}
    57a8:	0b053206 	bleq	151fc8 <__RAM_SIZE+0x51fc8>
    57ac:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    57b0:	05200c03 	streq	r0, [r0, #-3075]!	; 0xfffff3fd
    57b4:	6103060d 	tstvs	r3, sp, lsl #12
    57b8:	0621052e 	strteq	r0, [r1], -lr, lsr #10
    57bc:	060d0501 	streq	r0, [sp], -r1, lsl #10
    57c0:	06250522 	strteq	r0, [r5], -r2, lsr #10
    57c4:	20014c03 	andcs	r4, r1, r3, lsl #24
    57c8:	03060d05 	movweq	r0, #27909	; 0x6d05
    57cc:	052000c7 	streq	r0, [r0, #-199]!	; 0xffffff39
    57d0:	34053225 	strcc	r3, [r5], #-549	; 0xfffffddb
    57d4:	14090515 	strne	r0, [r9], #-1301	; 0xfffffaeb
    57d8:	01061005 	tsteq	r6, r5
    57dc:	01000302 	tsteq	r0, r2, lsl #6
    57e0:	00050501 	andeq	r0, r5, r1, lsl #10
    57e4:	2b500205 	blcs	1406000 <__RAM_SIZE+0x1306000>
    57e8:	83031000 	movwhi	r1, #12288	; 0x3000
    57ec:	01060113 	tsteq	r6, r3, lsl r1
    57f0:	21060905 	tstcs	r6, r5, lsl #18
    57f4:	05142f05 	ldreq	r2, [r4, #-3845]	; 0xfffff0fb
    57f8:	0b051509 	bleq	14ac24 <__RAM_SIZE+0x4ac24>
    57fc:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    5800:	3b053006 	blcc	151820 <__RAM_SIZE+0x51820>
    5804:	14220530 	strtne	r0, [r2], #-1328	; 0xfffffad0
    5808:	09031105 	stmdbeq	r3, {r0, r2, r8, ip}
    580c:	4c0d0501 	cfstr32mi	mvfx0, [sp], {1}
    5810:	01061f05 	tsteq	r6, r5, lsl #30
    5814:	32062505 	andcc	r2, r6, #20971520	; 0x1400000
    5818:	05170905 	ldreq	r0, [r7, #-2309]	; 0xfffff6fb
    581c:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
    5820:	0522060d 	streq	r0, [r2, #-1549]!	; 0xfffff9f3
    5824:	21053225 	tstcs	r5, r5, lsr #4
    5828:	06050515 			; <UNDEFINED> instruction: 0x06050515
    582c:	00010213 	andeq	r0, r1, r3, lsl r2
    5830:	01050101 	tsteq	r5, r1, lsl #2
    5834:	70020500 	andvc	r0, r2, r0, lsl #10
    5838:	0310002b 	tsteq	r0, #43	; 0x2b
    583c:	06012cf4 			; <UNDEFINED> instruction: 0x06012cf4
    5840:	06290501 	strteq	r0, [r9], -r1, lsl #10
    5844:	052e3603 	streq	r3, [lr, #-1539]!	; 0xfffff9fd
    5848:	0112030d 	tsteq	r2, sp, lsl #6
    584c:	06210519 			; <UNDEFINED> instruction: 0x06210519
    5850:	060d0501 	streq	r0, [sp], -r1, lsl #10
    5854:	060f0530 			; <UNDEFINED> instruction: 0x060f0530
    5858:	05052e01 	streq	r2, [r5, #-3585]	; 0xfffff1ff
    585c:	7fb10306 	svcvc	0x00b10306
    5860:	1a430501 	bne	10c6c6c <__RAM_SIZE+0xfc6c6c>
    5864:	0a030505 	beq	c6c80 <__HEAP_SIZE+0xc5c80>
    5868:	16090501 	strne	r0, [r9], -r1, lsl #10
    586c:	18030d05 	stmdane	r3, {r0, r2, r8, sl, fp}
    5870:	0611052e 	ldreq	r0, [r1], -lr, lsr #10
    5874:	2e0f0501 	cfsh32cs	mvfx0, mvfx15, #1
    5878:	30061105 	andcc	r1, r6, r5, lsl #2
    587c:	053c2103 	ldreq	r2, [ip, #-259]!	; 0xfffffefd
    5880:	15053347 	strne	r3, [r5, #-839]	; 0xfffffcb9
    5884:	06290513 			; <UNDEFINED> instruction: 0x06290513
    5888:	06570501 	ldrbeq	r0, [r7], -r1, lsl #10
    588c:	14150533 	ldrne	r0, [r5], #-1331	; 0xfffffacd
    5890:	01061705 	tsteq	r6, r5, lsl #14
    5894:	30063405 	andcc	r3, r6, r5, lsl #8
    5898:	05131905 	ldreq	r1, [r3, #-2309]	; 0xfffff6fb
    589c:	31052f32 	tstcc	r5, r2, lsr pc
    58a0:	15110516 	ldrne	r0, [r1, #-1302]	; 0xfffffaea
    58a4:	01061a05 	tsteq	r6, r5, lsl #20
    58a8:	01000502 	tsteq	r0, r2, lsl #10
    58ac:	00050501 	andeq	r0, r5, r1, lsl #10
    58b0:	00000205 	andeq	r0, r0, r5, lsl #4
    58b4:	a7030000 	strge	r0, [r3, -r0]
    58b8:	01060121 	tsteq	r6, r1, lsr #2
    58bc:	2f060905 	svccs	0x00060905
    58c0:	14330513 	ldrtne	r0, [r3], #-1299	; 0xfffffaed
    58c4:	05154a05 	ldreq	r4, [r5, #-2565]	; 0xfffff5fb
    58c8:	15051409 	strne	r1, [r5, #-1033]	; 0xfffffbf7
    58cc:	2e780306 	cdpcs	3, 7, cr0, cr8, cr6, {0}
    58d0:	03060d05 	movweq	r0, #27909	; 0x6d05
    58d4:	1105200b 	tstne	r5, fp
    58d8:	06180514 			; <UNDEFINED> instruction: 0x06180514
    58dc:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    58e0:	06190521 	ldreq	r0, [r9], -r1, lsr #10
    58e4:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    58e8:	06130584 	ldreq	r0, [r3], -r4, lsl #11
    58ec:	06140501 	ldreq	r0, [r4], -r1, lsl #10
    58f0:	060d0533 			; <UNDEFINED> instruction: 0x060d0533
    58f4:	05310601 	ldreq	r0, [r1, #-1537]!	; 0xfffff9ff
    58f8:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    58fc:	0525060d 	streq	r0, [r5, #-1549]!	; 0xfffff9f3
    5900:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    5904:	05270611 	streq	r0, [r7, #-1553]!	; 0xfffff9ef
    5908:	05010613 	streq	r0, [r1, #-1555]	; 0xfffff9ed
    590c:	0a030611 	beq	c7158 <__HEAP_SIZE+0xc6158>
    5910:	06130520 	ldreq	r0, [r3], -r0, lsr #10
    5914:	06090501 	streq	r0, [r9], -r1, lsl #10
    5918:	06120528 	ldreq	r0, [r2], -r8, lsr #10
    591c:	062c0501 	strteq	r0, [ip], -r1, lsl #10
    5920:	14090530 	strne	r0, [r9], #-1328	; 0xfffffad0
    5924:	13060505 	movwne	r0, #25861	; 0x6505
    5928:	03061105 	movweq	r1, #24837	; 0x6105
    592c:	19052e5f 	stmdbne	r5, {r0, r1, r2, r3, r4, r6, r9, sl, fp, sp}
    5930:	4a2e0106 	bmi	b85d50 <__RAM_SIZE+0xa85d50>
    5934:	25061105 	strcs	r1, [r6, #-261]	; 0xfffffefb
    5938:	01061905 	tsteq	r6, r5, lsl #18
    593c:	15054a2e 	strne	r4, [r5, #-2606]	; 0xfffff5d2
    5940:	1d052806 	stcne	8, cr2, [r5, #-24]	; 0xffffffe8
    5944:	3c2e0106 	stfccs	f0, [lr], #-24	; 0xffffffe8
    5948:	03061505 	movweq	r1, #25861	; 0x6505
    594c:	1d05200a 	stcne	0, cr2, [r5, #-40]	; 0xffffffd8
    5950:	3c2e0106 	stfccs	f0, [lr], #-24	; 0xffffffe8
    5954:	01000b02 	tsteq	r0, r2, lsl #22
    5958:	00010501 	andeq	r0, r1, r1, lsl #10
    595c:	00000205 	andeq	r0, r0, r5, lsl #4
    5960:	c2030000 	andgt	r0, r3, #0
    5964:	01060123 	tsteq	r6, r3, lsr #2
    5968:	2f060505 	svccs	0x00060505
    596c:	05143405 	ldreq	r3, [r4, #-1029]	; 0xfffffbfb
    5970:	0505163f 	streq	r1, [r5, #-1599]	; 0xfffff9c1
    5974:	09053116 	stmdbeq	r5, {r1, r2, r4, r8, ip, sp}
    5978:	06160530 			; <UNDEFINED> instruction: 0x06160530
    597c:	06050501 	streq	r0, [r5], -r1, lsl #10
    5980:	16052f4c 	strne	r2, [r5], -ip, asr #30
    5984:	34050106 	strcc	r0, [r5], #-262	; 0xfffffefa
    5988:	05053006 	streq	r3, [r5, #-6]
    598c:	06010514 			; <UNDEFINED> instruction: 0x06010514
    5990:	03022013 	movweq	r2, #8211	; 0x2013
    5994:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    5998:	02050005 	andeq	r0, r5, #5
    599c:	00000000 	andeq	r0, r0, r0
    59a0:	0123e003 			; <UNDEFINED> instruction: 0x0123e003
    59a4:	09050106 	stmdbeq	r5, {r1, r2, r8}
    59a8:	05132f06 	ldreq	r2, [r3, #-3846]	; 0xfffff0fa
    59ac:	1e05142c 	cdpne	4, 0, cr1, cr5, cr12, {1}
    59b0:	14090514 	strne	r0, [r9], #-1300	; 0xfffffaec
    59b4:	05320d05 	ldreq	r0, [r2, #-3333]!	; 0xfffff2fb
    59b8:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    59bc:	19053c0f 	stmdbne	r5, {r0, r1, r2, r3, sl, fp, ip, sp}
    59c0:	2e00c403 	cdpcs	4, 0, cr12, cr0, cr3, {0}
    59c4:	23060905 	movwcs	r0, #26885	; 0x6905
    59c8:	01061205 	tsteq	r6, r5, lsl #4
    59cc:	30062f05 	andcc	r2, r6, r5, lsl #30
    59d0:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    59d4:	05130605 	ldreq	r0, [r3, #-1541]	; 0xfffff9fb
    59d8:	b6030611 			; <UNDEFINED> instruction: 0xb6030611
    59dc:	05172e7f 	ldreq	r2, [r7, #-3711]	; 0xfffff181
    59e0:	0501061a 	streq	r0, [r1, #-1562]	; 0xfffff9e6
    59e4:	05500611 	ldrbeq	r0, [r0, #-1553]	; 0xfffff9ef
    59e8:	19053015 	stmdbne	r5, {r0, r2, r4, ip, sp}
    59ec:	17050106 	strne	r0, [r5, -r6, lsl #2]
    59f0:	06190520 	ldreq	r0, [r9], -r0, lsr #10
    59f4:	06220522 	strteq	r0, [r2], -r2, lsr #10
    59f8:	06190501 	ldreq	r0, [r9], -r1, lsl #10
    59fc:	062f054f 	strteq	r0, [pc], -pc, asr #10
    5a00:	06310501 	ldrteq	r0, [r1], -r1, lsl #10
    5a04:	15110540 	ldrne	r0, [r1, #-1344]	; 0xfffffac0
    5a08:	01010131 	tsteq	r1, r1, lsr r1
    5a0c:	01040200 	mrseq	r0, R12_usr
    5a10:	04020058 	streq	r0, [r2], #-88	; 0xffffffa8
    5a14:	02002e03 	andeq	r2, r0, #3, 28	; 0x30
    5a18:	00010304 	andeq	r0, r1, r4, lsl #6
    5a1c:	01030402 	tsteq	r3, r2, lsl #8
    5a20:	03040200 	movweq	r0, #16896	; 0x4200
    5a24:	04020066 	streq	r0, [r2], #-102	; 0xffffff9a
    5a28:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    5a2c:	00010304 	andeq	r0, r1, r4, lsl #6
    5a30:	20030402 	andcs	r0, r3, r2, lsl #8
    5a34:	03040200 	movweq	r0, #16896	; 0x4200
    5a38:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    5a3c:	02002003 	andeq	r2, r0, #3
    5a40:	00200304 	eoreq	r0, r0, r4, lsl #6
    5a44:	06030402 	streq	r0, [r3], -r2, lsl #8
    5a48:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    5a4c:	00580603 	subseq	r0, r8, r3, lsl #12
    5a50:	74030402 	strvc	r0, [r3], #-1026	; 0xfffffbfe
    5a54:	03040200 	movweq	r0, #16896	; 0x4200
    5a58:	04020001 	streq	r0, [r2], #-1
    5a5c:	19050103 	stmdbne	r5, {r0, r1, r8}
    5a60:	03040200 	movweq	r0, #16896	; 0x4200
    5a64:	05010b03 	streq	r0, [r1, #-2819]	; 0xfffff4fd
    5a68:	04020022 	streq	r0, [r2], #-34	; 0xffffffde
    5a6c:	05010603 	streq	r0, [r1, #-1539]	; 0xfffff9fd
    5a70:	0402003d 	streq	r0, [r2], #-61	; 0xffffffc3
    5a74:	1b052003 	blne	14da88 <__RAM_SIZE+0x4da88>
    5a78:	03040200 	movweq	r0, #16896	; 0x4200
    5a7c:	061d053c 			; <UNDEFINED> instruction: 0x061d053c
    5a80:	06310532 			; <UNDEFINED> instruction: 0x06310532
    5a84:	19052001 	stmdbne	r5, {r0, sp}
    5a88:	203c5303 	eorscs	r5, ip, r3, lsl #6
    5a8c:	01000902 	tsteq	r0, r2, lsl #18
    5a90:	00050501 	andeq	r0, r5, r1, lsl #10
    5a94:	00000205 	andeq	r0, r0, r5, lsl #4
    5a98:	bf030000 	svclt	0x00030000
    5a9c:	01060126 	tsteq	r6, r6, lsr #2
    5aa0:	2f060905 	svccs	0x00060905
    5aa4:	05144705 	ldreq	r4, [r4, #-1797]	; 0xfffff8fb
    5aa8:	0b051609 	bleq	14b2d4 <__RAM_SIZE+0x4b2d4>
    5aac:	09050106 	stmdbeq	r5, {r1, r2, r8}
    5ab0:	2e0b0306 	cdpcs	3, 0, cr0, cr11, cr6, {0}
    5ab4:	05300d05 	ldreq	r0, [r0, #-3333]!	; 0xfffff2fb
    5ab8:	0501061d 	streq	r0, [r1, #-1565]	; 0xfffff9e3
    5abc:	05220609 	streq	r0, [r2, #-1545]!	; 0xfffff9f7
    5ac0:	05053031 	streq	r3, [r5, #-49]	; 0xffffffcf
    5ac4:	0d051306 	stceq	3, cr1, [r5, #-24]	; 0xffffffe8
    5ac8:	20700306 	rsbscs	r0, r0, r6, lsl #6
    5acc:	01061205 	tsteq	r6, r5, lsl #4
    5ad0:	0004022e 	andeq	r0, r4, lr, lsr #4
    5ad4:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    5ad8:	00020500 	andeq	r0, r2, r0, lsl #10
    5adc:	03000000 	movweq	r0, #0
    5ae0:	060126e0 	streq	r2, [r1], -r0, ror #13
    5ae4:	06090501 	streq	r0, [r9], -r1, lsl #10
    5ae8:	37051321 	strcc	r1, [r5, -r1, lsr #6]
    5aec:	15090514 	strne	r0, [r9, #-1300]	; 0xfffffaec
    5af0:	01061105 	tsteq	r6, r5, lsl #2
    5af4:	02000905 	andeq	r0, r0, #81920	; 0x14000
    5af8:	32060404 	andcc	r0, r6, #4, 8	; 0x4000000
    5afc:	02000d05 	andeq	r0, r0, #320	; 0x140
    5b00:	05300404 	ldreq	r0, [r0, #-1028]!	; 0xfffffbfc
    5b04:	04020015 	streq	r0, [r2], #-21	; 0xffffffeb
    5b08:	05010604 	streq	r0, [r1, #-1540]	; 0xfffff9fc
    5b0c:	04020009 	streq	r0, [r2], #-9
    5b10:	05220604 	streq	r0, [r2, #-1540]!	; 0xfffff9fc
    5b14:	0402003a 	streq	r0, [r2], #-58	; 0xffffffc6
    5b18:	09053004 	stmdbeq	r5, {r2, ip, sp}
    5b1c:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    5b20:	00050514 	andeq	r0, r5, r4, lsl r5
    5b24:	06040402 	streq	r0, [r4], -r2, lsl #8
    5b28:	00110513 	andseq	r0, r1, r3, lsl r5
    5b2c:	03010402 	movweq	r0, #5122	; 0x1402
    5b30:	02002e73 	andeq	r2, r0, #1840	; 0x730
    5b34:	022e0104 	eoreq	r0, lr, #4, 2
    5b38:	01010004 	tsteq	r1, r4
    5b3c:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    5b40:	00000002 	andeq	r0, r0, r2
    5b44:	26fc0300 	ldrbtcs	r0, [ip], r0, lsl #6
    5b48:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    5b4c:	13210609 			; <UNDEFINED> instruction: 0x13210609
    5b50:	143e0513 	ldrtne	r0, [lr], #-1299	; 0xfffffaed
    5b54:	05150905 	ldreq	r0, [r5, #-2309]	; 0xfffff6fb
    5b58:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    5b5c:	04020009 	streq	r0, [r2], #-9
    5b60:	05350604 	ldreq	r0, [r5, #-1540]!	; 0xfffff9fc
    5b64:	04020022 	streq	r0, [r2], #-34	; 0xffffffde
    5b68:	05010604 	streq	r0, [r1, #-1540]	; 0xfffff9fc
    5b6c:	0402000d 	streq	r0, [r2], #-13
    5b70:	05300604 	ldreq	r0, [r0, #-1540]!	; 0xfffff9fc
    5b74:	04020015 	streq	r0, [r2], #-21	; 0xffffffeb
    5b78:	05010604 	streq	r0, [r1, #-1540]	; 0xfffff9fc
    5b7c:	04020009 	streq	r0, [r2], #-9
    5b80:	05220604 	streq	r0, [r2, #-1540]!	; 0xfffff9fc
    5b84:	04020041 	streq	r0, [r2], #-65	; 0xffffffbf
    5b88:	09053004 	stmdbeq	r5, {r2, ip, sp}
    5b8c:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    5b90:	00050514 	andeq	r0, r5, r4, lsl r5
    5b94:	06040402 	streq	r0, [r4], -r2, lsl #8
    5b98:	00110513 	andseq	r0, r1, r3, lsl r5
    5b9c:	03010402 	movweq	r0, #5122	; 0x1402
    5ba0:	02002e70 	andeq	r2, r0, #112, 28	; 0x700
    5ba4:	022e0104 	eoreq	r0, lr, #4, 2
    5ba8:	01010004 	tsteq	r1, r4
    5bac:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    5bb0:	00000002 	andeq	r0, r0, r2
    5bb4:	279d0300 	ldrcs	r0, [sp, r0, lsl #6]
    5bb8:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    5bbc:	13210609 			; <UNDEFINED> instruction: 0x13210609
    5bc0:	05144605 	ldreq	r4, [r4, #-1541]	; 0xfffff9fb
    5bc4:	0b051509 	bleq	14aff0 <__RAM_SIZE+0x4aff0>
    5bc8:	09050106 	stmdbeq	r5, {r1, r2, r8}
    5bcc:	2e090306 	cdpcs	3, 0, cr0, cr9, cr6, {0}
    5bd0:	01061105 	tsteq	r6, r5, lsl #2
    5bd4:	05200b05 	streq	r0, [r0, #-2821]!	; 0xfffff4fb
    5bd8:	0522060d 	streq	r0, [r2, #-1549]!	; 0xfffff9f3
    5bdc:	05010617 	streq	r0, [r1, #-1559]	; 0xfffff9e9
    5be0:	2e0a0305 	cdpcs	3, 0, cr0, cr10, cr5, {0}
    5be4:	03060d05 	movweq	r0, #27909	; 0x6d05
    5be8:	1205206d 	andne	r2, r5, #109	; 0x6d
    5bec:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
    5bf0:	200d0315 	andcs	r0, sp, r5, lsl r3
    5bf4:	23063c05 	movwcs	r3, #27653	; 0x6c05
    5bf8:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    5bfc:	02010610 	andeq	r0, r1, #16, 12	; 0x1000000
    5c00:	01010004 	tsteq	r1, r4
    5c04:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    5c08:	002ba802 	eoreq	sl, fp, r2, lsl #16
    5c0c:	27c00310 	bfics	r0, r0, (invalid: 6:0)
    5c10:	13280501 			; <UNDEFINED> instruction: 0x13280501
    5c14:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    5c18:	05010622 	streq	r0, [r1, #-1570]	; 0xfffff9de
    5c1c:	0d052e0b 	stceq	14, cr2, [r5, #-44]	; 0xffffffd4
    5c20:	21052406 	tstcs	r5, r6, lsl #8
    5c24:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    5c28:	21054e06 	tstcs	r5, r6, lsl #28
    5c2c:	25050106 	strcs	r0, [r5, #-262]	; 0xfffffefa
    5c30:	2b053d06 	blcs	155050 <__RAM_SIZE+0x55050>
    5c34:	05011f03 	streq	r1, [r1, #-3843]	; 0xfffff0fd
    5c38:	010e030d 	tsteq	lr, sp, lsl #6
    5c3c:	02002e01 	andeq	r2, r0, #1, 28
    5c40:	00200304 	eoreq	r0, r0, r4, lsl #6
    5c44:	01030402 	tsteq	r3, r2, lsl #8
    5c48:	01040200 	mrseq	r0, R12_usr
    5c4c:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    5c50:	02007404 	andeq	r7, r0, #4, 8	; 0x4000000
    5c54:	00010404 	andeq	r0, r1, r4, lsl #8
    5c58:	01040402 	tsteq	r4, r2, lsl #8
    5c5c:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    5c60:	04020074 	streq	r0, [r2], #-116	; 0xffffff8c
    5c64:	02008207 	andeq	r8, r0, #1879048192	; 0x70000000
    5c68:	00900704 	addseq	r0, r0, r4, lsl #14
    5c6c:	01070402 	tsteq	r7, r2, lsl #8
    5c70:	07040200 	streq	r0, [r4, -r0, lsl #4]
    5c74:	0024052e 	eoreq	r0, r4, lr, lsr #10
    5c78:	13070402 	movwne	r0, #29698	; 0x7402
    5c7c:	02000d05 	andeq	r0, r0, #320	; 0x140
    5c80:	05170704 	ldreq	r0, [r7, #-1796]	; 0xfffff8fc
    5c84:	04020029 	streq	r0, [r2], #-41	; 0xffffffd7
    5c88:	20120307 	andscs	r0, r2, r7, lsl #6
    5c8c:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    5c90:	13060704 	movwne	r0, #26372	; 0x6704
    5c94:	02000d05 	andeq	r0, r0, #320	; 0x140
    5c98:	03060504 	movweq	r0, #25860	; 0x6504
    5c9c:	00082067 	andeq	r2, r8, r7, rrx
    5ca0:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    5ca4:	00020500 	andeq	r0, r2, r0, lsl #10
    5ca8:	03000000 	movweq	r0, #0
    5cac:	060118b1 			; <UNDEFINED> instruction: 0x060118b1
    5cb0:	06090501 	streq	r0, [r9], -r1, lsl #10
    5cb4:	1432052f 	ldrtne	r0, [r2], #-1327	; 0xfffffad1
    5cb8:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    5cbc:	1505320d 	strne	r3, [r5, #-525]	; 0xfffffdf3
    5cc0:	27050106 	strcs	r0, [r5, -r6, lsl #2]
    5cc4:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    5cc8:	0d052206 	sfmeq	f2, 4, [r5, #-24]	; 0xffffffe8
    5ccc:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    5cd0:	00110516 	andseq	r0, r1, r6, lsl r5
    5cd4:	06040402 	streq	r0, [r4], -r2, lsl #8
    5cd8:	00290501 	eoreq	r0, r9, r1, lsl #10
    5cdc:	06040402 	streq	r0, [r4], -r2, lsl #8
    5ce0:	000d0550 	andeq	r0, sp, r0, asr r5
    5ce4:	16040402 	strne	r0, [r4], -r2, lsl #8
    5ce8:	02001105 	andeq	r1, r0, #1073741825	; 0x40000001
    5cec:	01060404 	tsteq	r6, r4, lsl #8
    5cf0:	02000f05 	andeq	r0, r0, #5, 30
    5cf4:	05200404 	streq	r0, [r0, #-1028]!	; 0xfffffbfc
    5cf8:	05220611 	streq	r0, [r2, #-1553]!	; 0xfffff9ef
    5cfc:	0501061a 	streq	r0, [r1, #-1562]	; 0xfffff9e6
    5d00:	054e0629 	strbeq	r0, [lr, #-1577]	; 0xfffff9d7
    5d04:	1105150d 	tstne	r5, sp, lsl #10
    5d08:	1805144e 	stmdane	r5, {r1, r2, r3, r6, sl, ip}
    5d0c:	2c050106 	stfcss	f0, [r5], {6}
    5d10:	01040200 	mrseq	r0, R12_usr
    5d14:	11052006 	tstne	r5, r6
    5d18:	01040200 	mrseq	r0, R12_usr
    5d1c:	09050106 	stmdbeq	r5, {r1, r2, r8}
    5d20:	2e340306 	cdpcs	3, 3, cr0, cr4, cr6, {0}
    5d24:	14320d05 	ldrtne	r0, [r2], #-3333	; 0xfffff2fb
    5d28:	01062305 	tsteq	r6, r5, lsl #6
    5d2c:	052e0f05 	streq	r0, [lr, #-3845]!	; 0xfffff0fb
    5d30:	0c030629 	stceq	6, cr0, [r3], {41}	; 0x29
    5d34:	150d0520 	strne	r0, [sp, #-1312]	; 0xfffffae0
    5d38:	01061705 	tsteq	r6, r5, lsl #14
    5d3c:	052e0f05 	streq	r0, [lr, #-3845]!	; 0xfffff0fb
    5d40:	2e290305 	cdpcs	3, 2, cr0, cr9, cr5, {0}
    5d44:	02001505 	andeq	r1, r0, #20971520	; 0x1400000
    5d48:	ef030104 	svc	0x00030104
    5d4c:	0200207e 	andeq	r2, r0, #126	; 0x7e
    5d50:	062e0104 	strteq	r0, [lr], -r4, lsl #2
    5d54:	05202103 	streq	r2, [r0, #-259]!	; 0xfffffefd
    5d58:	0501062d 	streq	r0, [r1, #-1581]	; 0xfffff9d3
    5d5c:	66054a17 			; <UNDEFINED> instruction: 0x66054a17
    5d60:	02040200 	andeq	r0, r4, #0, 4
    5d64:	67052c06 	strvs	r2, [r5, -r6, lsl #24]
    5d68:	02040200 	andeq	r0, r4, #0, 4
    5d6c:	02000106 	andeq	r0, r0, #-2147483647	; 0x80000001
    5d70:	05200204 	streq	r0, [r0, #-516]!	; 0xfffffdfc
    5d74:	05260619 	streq	r0, [r6, #-1561]!	; 0xfffff9e7
    5d78:	58010633 	stmdapl	r1, {r0, r1, r4, r5, r9, sl}
    5d7c:	03061105 	movweq	r1, #24837	; 0x6105
    5d80:	15050138 	strne	r0, [r5, #-312]	; 0xfffffec8
    5d84:	30110530 	andscc	r0, r1, r0, lsr r5
    5d88:	053c0903 	ldreq	r0, [ip, #-2307]!	; 0xfffff6fd
    5d8c:	05010627 	streq	r0, [r1, #-1575]	; 0xfffff9d9
    5d90:	15052e13 	strne	r2, [r5, #-3603]	; 0xfffff1ed
    5d94:	200f0306 	andcs	r0, pc, r6, lsl #6
    5d98:	01062905 	tsteq	r6, r5, lsl #18
    5d9c:	30061505 	andcc	r1, r6, r5, lsl #10
    5da0:	01062d05 	tsteq	r6, r5, lsl #26
    5da4:	052e1705 	streq	r1, [lr, #-1797]!	; 0xfffff8fb
    5da8:	05340619 	ldreq	r0, [r4, #-1561]!	; 0xfffff9e7
    5dac:	20010626 	andcs	r0, r1, r6, lsr #12
    5db0:	03063e05 	movweq	r3, #28165	; 0x6e05
    5db4:	15053c6c 	strne	r3, [r5, #-3180]	; 0xfffff394
    5db8:	03190513 	tsteq	r9, #79691776	; 0x4c00000
    5dbc:	29053c17 	stmdbcs	r5, {r0, r1, r2, r4, sl, fp, ip, sp}
    5dc0:	17230534 			; <UNDEFINED> instruction: 0x17230534
    5dc4:	13060505 	movwne	r0, #25861	; 0x6505
    5dc8:	01000902 	tsteq	r0, r2, lsl #18
    5dcc:	00010501 	andeq	r0, r1, r1, lsl #10
    5dd0:	2c2c0205 	sfmcs	f0, 4, [ip], #-20	; 0xffffffec
    5dd4:	fc031000 	stc2	0, cr1, [r3], {-0}
    5dd8:	01060128 	tsteq	r6, r8, lsr #2
    5ddc:	2f064205 	svccs	0x00064205
    5de0:	05142005 	ldreq	r2, [r4, #-5]
    5de4:	01100305 	tsteq	r0, r5, lsl #6
    5de8:	01062e05 	tsteq	r6, r5, lsl #28
    5dec:	062e0505 	strteq	r0, [lr], -r5, lsl #10
    5df0:	4c28053e 	cfstr32mi	mvfx0, [r8], #-248	; 0xffffff08
    5df4:	13060105 	movwne	r0, #24837	; 0x6105
    5df8:	00020220 	andeq	r0, r2, r0, lsr #4
    5dfc:	01050101 	tsteq	r5, r1, lsl #2
    5e00:	00020500 	andeq	r0, r2, r0, lsl #10
    5e04:	03000000 	movweq	r0, #0
    5e08:	0601299a 			; <UNDEFINED> instruction: 0x0601299a
    5e0c:	06570501 	ldrbeq	r0, [r7], -r1, lsl #10
    5e10:	1420052f 	strtne	r0, [r0], #-1327	; 0xfffffad1
    5e14:	05163f05 	ldreq	r3, [r6, #-3845]	; 0xfffff0fb
    5e18:	2e061705 	cdpcs	7, 0, cr1, cr6, cr5, {0}
    5e1c:	0127062e 			; <UNDEFINED> instruction: 0x0127062e
    5e20:	2e010120 	adfcssp	f0, f1, f0
    5e24:	063c3c3c 			; <UNDEFINED> instruction: 0x063c3c3c
    5e28:	3c200620 	stccc	6, cr0, [r0], #-128	; 0xffffff80
    5e2c:	4c310514 	cfldr32mi	mvfx0, [r1], #-80	; 0xffffffb0
    5e30:	13060105 	movwne	r0, #24837	; 0x6105
    5e34:	01000402 	tsteq	r0, r2, lsl #8
    5e38:	00050501 	andeq	r0, r5, r1, lsl #10
    5e3c:	2c480205 	sfmcs	f0, 2, [r8], {5}
    5e40:	ba031000 	blt	c9e48 <__HEAP_SIZE+0xc8e48>
    5e44:	01060129 	tsteq	r6, r9, lsr #2
    5e48:	3d066305 	stccc	3, cr6, [r6, #-20]	; 0xffffffec
    5e4c:	05142405 	ldreq	r2, [r4, #-1029]	; 0xfffffbfb
    5e50:	010c0309 	tsteq	ip, r9, lsl #6
    5e54:	01012001 	tsteq	r1, r1
    5e58:	3c3c3c3c 	ldccc	12, cr3, [ip], #-240	; 0xffffff10
    5e5c:	20062006 	andcs	r2, r6, r6
    5e60:	0b05173c 	bleq	14bb58 <__RAM_SIZE+0x4bb58>
    5e64:	1a050106 	bne	146284 <__RAM_SIZE+0x46284>
    5e68:	063f0530 			; <UNDEFINED> instruction: 0x063f0530
    5e6c:	13090531 	movwne	r0, #38193	; 0x9531
    5e70:	05303605 	ldreq	r3, [r0, #-1541]!	; 0xfffff9fb
    5e74:	02130605 	andseq	r0, r3, #5242880	; 0x500000
    5e78:	01010003 	tsteq	r1, r3
    5e7c:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    5e80:	002c8402 	eoreq	r8, ip, r2, lsl #8
    5e84:	29dd0310 	ldmibcs	sp, {r4, r8, r9}^
    5e88:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    5e8c:	13210605 			; <UNDEFINED> instruction: 0x13210605
    5e90:	05143705 	ldreq	r3, [r4, #-1797]	; 0xfffff8fb
    5e94:	01120305 	tsteq	r2, r5, lsl #6
    5e98:	01061605 	tsteq	r6, r5, lsl #12
    5e9c:	05201405 	streq	r1, [r0, #-1029]!	; 0xfffffbfb
    5ea0:	05210623 	streq	r0, [r1, #-1571]!	; 0xfffff9dd
    5ea4:	20011305 	andcs	r1, r1, r5, lsl #6
    5ea8:	02002e3c 	andeq	r2, r0, #60, 28	; 0x3c0
    5eac:	00580304 	subseq	r0, r8, r4, lsl #6
    5eb0:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
    5eb4:	03040200 	movweq	r0, #16896	; 0x4200
    5eb8:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    5ebc:	1e051403 	cdpne	4, 0, cr1, cr5, cr3, {0}
    5ec0:	03040200 	movweq	r0, #16896	; 0x4200
    5ec4:	02000106 	andeq	r0, r0, #-2147483647	; 0x80000001
    5ec8:	05200304 	streq	r0, [r0, #-772]!	; 0xfffffcfc
    5ecc:	04020007 	streq	r0, [r2], #-7
    5ed0:	09052003 	stmdbeq	r5, {r0, r1, sp}
    5ed4:	20013006 	andcs	r3, r1, r6
    5ed8:	02002e3c 	andeq	r2, r0, #60, 28	; 0x3c0
    5edc:	004a0304 	subeq	r0, sl, r4, lsl #6
    5ee0:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
    5ee4:	03040200 	movweq	r0, #16896	; 0x4200
    5ee8:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    5eec:	02001303 	andeq	r1, r0, #201326592	; 0xc000000
    5ef0:	00010304 	andeq	r0, r1, r4, lsl #6
    5ef4:	01030402 	tsteq	r3, r2, lsl #8
    5ef8:	03040200 	movweq	r0, #16896	; 0x4200
    5efc:	04020001 	streq	r0, [r2], #-1
    5f00:	00200603 	eoreq	r0, r0, r3, lsl #12
    5f04:	06010402 	streq	r0, [r1], -r2, lsl #8
    5f08:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    5f0c:	02002e03 	andeq	r2, r0, #3, 28	; 0x30
    5f10:	00010304 	andeq	r0, r1, r4, lsl #6
    5f14:	01030402 	tsteq	r3, r2, lsl #8
    5f18:	03040200 	movweq	r0, #16896	; 0x4200
    5f1c:	04020066 	streq	r0, [r2], #-102	; 0xffffff9a
    5f20:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    5f24:	00010304 	andeq	r0, r1, r4, lsl #6
    5f28:	20030402 	andcs	r0, r3, r2, lsl #8
    5f2c:	03040200 	movweq	r0, #16896	; 0x4200
    5f30:	02002006 	andeq	r2, r0, #6
    5f34:	20060304 	andcs	r0, r6, r4, lsl #6
    5f38:	03040200 	movweq	r0, #16896	; 0x4200
    5f3c:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    5f40:	02002003 	andeq	r2, r0, #3
    5f44:	20060304 	andcs	r0, r6, r4, lsl #6
    5f48:	03040200 	movweq	r0, #16896	; 0x4200
    5f4c:	02005806 	andeq	r5, r0, #393216	; 0x60000
    5f50:	00740304 	rsbseq	r0, r4, r4, lsl #6
    5f54:	01030402 	tsteq	r3, r2, lsl #8
    5f58:	03040200 	movweq	r0, #16896	; 0x4200
    5f5c:	000d0501 	andeq	r0, sp, r1, lsl #10
    5f60:	03030402 	movweq	r0, #13314	; 0x3402
    5f64:	0905010c 	stmdbeq	r5, {r2, r3, r8}
    5f68:	01040200 	mrseq	r0, R12_usr
    5f6c:	04020036 	streq	r0, [r2], #-54	; 0xffffffca
    5f70:	1b051701 	blne	14bb7c <__RAM_SIZE+0x4bb7c>
    5f74:	01040200 	mrseq	r0, R12_usr
    5f78:	36050106 	strcc	r0, [r5], -r6, lsl #2
    5f7c:	01040200 	mrseq	r0, R12_usr
    5f80:	000b0520 	andeq	r0, fp, r0, lsr #10
    5f84:	3c010402 	cfstrscc	mvf0, [r1], {2}
    5f88:	33060d05 	movwcc	r0, #27909	; 0x6d05
    5f8c:	06210516 			; <UNDEFINED> instruction: 0x06210516
    5f90:	03010501 	movweq	r0, #5377	; 0x1501
    5f94:	05053c1a 	streq	r3, [r5, #-3098]	; 0xfffff3e6
    5f98:	01040200 	mrseq	r0, R12_usr
    5f9c:	7fbf0306 	svcvc	0x00bf0306
    5fa0:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    5fa4:	053c0601 	ldreq	r0, [ip, #-1537]!	; 0xfffff9ff
    5fa8:	04020009 	streq	r0, [r2], #-9
    5fac:	00160601 	andseq	r0, r6, r1, lsl #12
    5fb0:	06010402 	streq	r0, [r1], -r2, lsl #8
    5fb4:	1503063c 	strne	r0, [r3, #-1596]	; 0xfffff9c4
    5fb8:	012e0101 			; <UNDEFINED> instruction: 0x012e0101
    5fbc:	20062001 	andcs	r2, r6, r1
    5fc0:	20202006 	eorcs	r2, r0, r6
    5fc4:	3c200620 	stccc	6, cr0, [r0], #-128	; 0xffffff80
    5fc8:	12031505 	andne	r1, r3, #20971520	; 0x1400000
    5fcc:	06340501 	ldrteq	r0, [r4], -r1, lsl #10
    5fd0:	05201403 	streq	r1, [r0, #-1027]!	; 0xfffffbfd
    5fd4:	0c051305 	stceq	3, cr1, [r5], {5}
    5fd8:	0e020106 	adfeqs	f0, f2, f6
    5fdc:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    5fe0:	02050001 	andeq	r0, r5, #1
    5fe4:	00000000 	andeq	r0, r0, r0
    5fe8:	012abb03 			; <UNDEFINED> instruction: 0x012abb03
    5fec:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    5ff0:	50052106 	andpl	r2, r5, r6, lsl #2
    5ff4:	163f0514 			; <UNDEFINED> instruction: 0x163f0514
    5ff8:	06150505 	ldreq	r0, [r5], -r5, lsl #10
    5ffc:	0527062e 	streq	r0, [r7, #-1582]!	; 0xfffff9d2
    6000:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
    6004:	05210623 	streq	r0, [r1, #-1571]!	; 0xfffff9dd
    6008:	20011305 	andcs	r1, r1, r5, lsl #6
    600c:	02003c3c 	andeq	r3, r0, #60, 24	; 0x3c00
    6010:	003c0304 	eorseq	r0, ip, r4, lsl #6
    6014:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
    6018:	03040200 	movweq	r0, #16896	; 0x4200
    601c:	0009053c 	andeq	r0, r9, ip, lsr r5
    6020:	03030402 	movweq	r0, #13314	; 0x3402
    6024:	0505010c 	streq	r0, [r5, #-268]	; 0xfffffef4
    6028:	03040200 	movweq	r0, #16896	; 0x4200
    602c:	04020035 	streq	r0, [r2], #-53	; 0xffffffcb
    6030:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    6034:	00200304 	eoreq	r0, r0, r4, lsl #6
    6038:	3c030402 	cfstrscc	mvf0, [r3], {2}
    603c:	03040200 	movweq	r0, #16896	; 0x4200
    6040:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    6044:	02004a03 	andeq	r4, r0, #12288	; 0x3000
    6048:	002e0304 	eoreq	r0, lr, r4, lsl #6
    604c:	3c030402 	cfstrscc	mvf0, [r3], {2}
    6050:	03040200 	movweq	r0, #16896	; 0x4200
    6054:	04020013 	streq	r0, [r2], #-19	; 0xffffffed
    6058:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    605c:	00010304 	andeq	r0, r1, r4, lsl #6
    6060:	01030402 	tsteq	r3, r2, lsl #8
    6064:	03040200 	movweq	r0, #16896	; 0x4200
    6068:	02002006 	andeq	r2, r0, #6
    606c:	4a060104 	bmi	186484 <__RAM_SIZE+0x86484>
    6070:	03040200 	movweq	r0, #16896	; 0x4200
    6074:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    6078:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    607c:	00010304 	andeq	r0, r1, r4, lsl #6
    6080:	66030402 	strvs	r0, [r3], -r2, lsl #8
    6084:	03040200 	movweq	r0, #16896	; 0x4200
    6088:	04020001 	streq	r0, [r2], #-1
    608c:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    6090:	00200304 	eoreq	r0, r0, r4, lsl #6
    6094:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
    6098:	03040200 	movweq	r0, #16896	; 0x4200
    609c:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    60a0:	02002003 	andeq	r2, r0, #3
    60a4:	20060304 	andcs	r0, r6, r4, lsl #6
    60a8:	03040200 	movweq	r0, #16896	; 0x4200
    60ac:	02005806 	andeq	r5, r0, #393216	; 0x60000
    60b0:	00740304 	rsbseq	r0, r4, r4, lsl #6
    60b4:	01030402 	tsteq	r3, r2, lsl #8
    60b8:	03040200 	movweq	r0, #16896	; 0x4200
    60bc:	00090501 	andeq	r0, r9, r1, lsl #10
    60c0:	16030402 	strne	r0, [r3], -r2, lsl #8
    60c4:	02001b05 	andeq	r1, r0, #5120	; 0x1400
    60c8:	01060304 	tsteq	r6, r4, lsl #6
    60cc:	02003605 	andeq	r3, r0, #5242880	; 0x500000
    60d0:	05200304 	streq	r0, [r0, #-772]!	; 0xfffffcfc
    60d4:	0402000b 	streq	r0, [r2], #-11
    60d8:	0d053c03 	stceq	12, cr3, [r5, #-12]
    60dc:	21053406 	tstcs	r5, r6, lsl #8
    60e0:	34050106 	strcc	r0, [r5], #-262	; 0xfffffefa
    60e4:	3c110306 	ldccc	3, cr0, [r1], {6}
    60e8:	13060105 	movwne	r0, #24837	; 0x6105
    60ec:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    60f0:	03060104 	movweq	r0, #24836	; 0x6104
    60f4:	02002050 	andeq	r2, r0, #80	; 0x50
    60f8:	3c060104 	stfccs	f0, [r6], {4}
    60fc:	01040200 	mrseq	r0, R12_usr
    6100:	01130306 	tsteq	r3, r6, lsl #6
    6104:	01000b02 	tsteq	r0, r2, lsl #22
    6108:	00010501 	andeq	r0, r1, r1, lsl #10
    610c:	00000205 	andeq	r0, r0, r5, lsl #4
    6110:	82030000 	andhi	r0, r3, #0
    6114:	0106012b 	tsteq	r6, fp, lsr #2
    6118:	2f063105 	svccs	0x00063105
    611c:	05141e05 	ldreq	r1, [r4, #-3589]	; 0xfffff1fb
    6120:	09051305 	stmdbeq	r5, {r0, r2, r8, r9, ip}
    6124:	06230530 			; <UNDEFINED> instruction: 0x06230530
    6128:	06090501 	streq	r0, [r9], -r1, lsl #10
    612c:	0624053d 			; <UNDEFINED> instruction: 0x0624053d
    6130:	06050501 	streq	r0, [r5], -r1, lsl #10
    6134:	3027053e 	eorcc	r0, r7, lr, lsr r5
    6138:	13060105 	movwne	r0, #24837	; 0x6105
    613c:	00050220 	andeq	r0, r5, r0, lsr #4
    6140:	01050101 	tsteq	r5, r1, lsl #2
    6144:	68020500 	stmdavs	r2, {r8, sl}
    6148:	0310002d 	tsteq	r0, #45	; 0x2d
    614c:	05012b92 	streq	r2, [r1, #-2962]	; 0xfffff46e
    6150:	05051339 	streq	r1, [r5, #-825]	; 0xfffffcc7
    6154:	061f0515 			; <UNDEFINED> instruction: 0x061f0515
    6158:	06050501 	streq	r0, [r5], -r1, lsl #10
    615c:	0620053d 			; <UNDEFINED> instruction: 0x0620053d
    6160:	062f0501 	strteq	r0, [pc], -r1, lsl #10
    6164:	0601053e 			; <UNDEFINED> instruction: 0x0601053e
    6168:	00060213 	andeq	r0, r6, r3, lsl r2
    616c:	01050101 	tsteq	r5, r1, lsl #2
    6170:	80020500 	andhi	r0, r2, r0, lsl #10
    6174:	0310002d 	tsteq	r0, #45	; 0x2d
    6178:	06012b9f 			; <UNDEFINED> instruction: 0x06012b9f
    617c:	06050501 	streq	r0, [r5], -r1, lsl #10
    6180:	1440053d 	strbne	r0, [r0], #-1341	; 0xfffffac3
    6184:	05141e05 	ldreq	r1, [r4, #-3589]	; 0xfffff1fb
    6188:	05051322 	streq	r1, [r5, #-802]	; 0xfffffcde
    618c:	31090514 	tstcc	r9, r4, lsl r5
    6190:	01061a05 	tsteq	r6, r5, lsl #20
    6194:	2f060905 	svccs	0x00060905
    6198:	01064405 	tsteq	r6, r5, lsl #8
    619c:	05201a05 	streq	r1, [r0, #-2565]!	; 0xfffff5fb
    61a0:	0523060d 	streq	r0, [r3, #-1549]!	; 0xfffff9f3
    61a4:	0501061d 	streq	r0, [r1, #-1565]	; 0xfffff9e3
    61a8:	11054a0f 	tstne	r5, pc, lsl #20
    61ac:	1d052406 	cfstrsne	mvf2, [r5, #-24]	; 0xffffffe8
    61b0:	2e050106 	adfcss	f0, f5, f6
    61b4:	1105202e 	tstne	r5, lr, lsr #32
    61b8:	19052f06 	stmdbne	r5, {r1, r2, r8, r9, sl, fp, sp}
    61bc:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    61c0:	27030605 	strcs	r0, [r3, -r5, lsl #12]
    61c4:	30300501 	eorscc	r0, r0, r1, lsl #10
    61c8:	05140505 	ldreq	r0, [r4, #-1285]	; 0xfffffafb
    61cc:	05130601 	ldreq	r0, [r3, #-1537]	; 0xfffff9ff
    61d0:	5a03060d 	bpl	c7a0c <__HEAP_SIZE+0xc6a0c>
    61d4:	0611052e 	ldreq	r0, [r1], -lr, lsr #10
    61d8:	200f0501 	andcs	r0, pc, r1, lsl #10
    61dc:	03060905 	movweq	r0, #26885	; 0x6905
    61e0:	1f053c0a 	svcne	0x00053c0a
    61e4:	0b050106 	bleq	146604 <__RAM_SIZE+0x46604>
    61e8:	003e052e 	eorseq	r0, lr, lr, lsr #10
    61ec:	3c010402 	cfstrscc	mvf0, [r1], {2}
    61f0:	35060d05 	strcc	r0, [r6, #-3333]	; 0xfffff2fb
    61f4:	061c0513 			; <UNDEFINED> instruction: 0x061c0513
    61f8:	2d150501 	cfldr32cs	mvfx0, [r5, #-4]
    61fc:	05211c05 	streq	r1, [r1, #-3077]!	; 0xfffff3fb
    6200:	0522060e 	streq	r0, [r2, #-1550]!	; 0xfffff9f2
    6204:	05010610 	streq	r0, [r1, #-1552]	; 0xfffff9f0
    6208:	0903060d 	stmdbeq	r3, {r0, r2, r3, r9, sl}
    620c:	061c052e 	ldreq	r0, [ip], -lr, lsr #10
    6210:	060d0501 	streq	r0, [sp], -r1, lsl #10
    6214:	0615052f 	ldreq	r0, [r5], -pc, lsr #10
    6218:	0d052001 	stceq	0, cr2, [r5, #-4]
    621c:	20790306 	rsbscs	r0, r9, r6, lsl #6
    6220:	01061c05 	tsteq	r6, r5, lsl #24
    6224:	3d060d05 	stccc	13, cr0, [r6, #-20]	; 0xffffffec
    6228:	2f062006 	svccs	0x00062006
    622c:	01061505 	tsteq	r6, r5, lsl #10
    6230:	03190520 	tsteq	r9, #32, 10	; 0x8000000
    6234:	0220206c 	eoreq	r2, r0, #108	; 0x6c
    6238:	01010008 	tsteq	r1, r8
    623c:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    6240:	002dfc02 	eoreq	pc, sp, r2, lsl #24
    6244:	2be30310 	blcs	ff8c6e8c <__StackTop+0xc77c6e8c>
    6248:	13220501 			; <UNDEFINED> instruction: 0x13220501
    624c:	05150505 	ldreq	r0, [r5, #-1285]	; 0xfffffafb
    6250:	05010629 	streq	r0, [r1, #-1577]	; 0xfffff9d7
    6254:	053e0623 	ldreq	r0, [lr, #-1571]!	; 0xfffff9dd
    6258:	02130601 	andseq	r0, r3, #1048576	; 0x100000
    625c:	01010003 	tsteq	r1, r3
    6260:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    6264:	002e0802 	eoreq	r0, lr, r2, lsl #16
    6268:	2dfc0310 	ldclcs	3, cr0, [ip, #64]!	; 0x40
    626c:	150d0501 	strne	r0, [sp, #-1281]	; 0xfffffaff
    6270:	05150905 	ldreq	r0, [r5, #-2309]	; 0xfffff6fb
    6274:	09051431 	stmdbeq	r5, {r0, r4, r5, sl, ip}
    6278:	060d0516 			; <UNDEFINED> instruction: 0x060d0516
    627c:	2e0b0501 	cfsh32cs	mvfx0, mvfx11, #1
    6280:	25060e05 	strcs	r0, [r6, #-3589]	; 0xfffff1fb
    6284:	01062005 	tsteq	r6, r5
    6288:	052e1005 	streq	r1, [lr, #-5]!
    628c:	0525060e 	streq	r0, [r5, #-1550]!	; 0xfffff9f2
    6290:	0501061f 	streq	r0, [r1, #-1567]	; 0xfffff9e1
    6294:	12052e10 	andne	r2, r5, #16, 28	; 0x100
    6298:	16052806 	strne	r2, [r5], -r6, lsl #16
    629c:	61050106 	tstvs	r5, r6, lsl #2
    62a0:	3c14052e 	cfldr32cc	mvfx0, [r4], {46}	; 0x2e
    62a4:	68031a05 	stmdavs	r3, {r0, r2, r9, fp, ip}
    62a8:	0315052e 	tsteq	r5, #192937984	; 0xb800000
    62ac:	34332e09 	ldrtcc	r2, [r3], #-3593	; 0xfffff1f7
    62b0:	0a031905 	beq	cc6cc <__HEAP_SIZE+0xcb6cc>
    62b4:	0625052e 	strteq	r0, [r5], -lr, lsr #10
    62b8:	153b0525 	ldrne	r0, [fp, #-1317]!	; 0xfffffadb
    62bc:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    62c0:	02130605 	andseq	r0, r3, #5242880	; 0x500000
    62c4:	0101000b 	tsteq	r1, fp
    62c8:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    62cc:	00000002 	andeq	r0, r0, r2
    62d0:	31e30300 	mvncc	r0, r0, lsl #6
    62d4:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    62d8:	13210609 			; <UNDEFINED> instruction: 0x13210609
    62dc:	14380513 	ldrtne	r0, [r8], #-1299	; 0xfffffaed
    62e0:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    62e4:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    62e8:	0402000d 	streq	r0, [r2], #-13
    62ec:	05320604 	ldreq	r0, [r2, #-1540]!	; 0xfffff9fc
    62f0:	04020009 	streq	r0, [r2], #-9
    62f4:	24051a04 	strcs	r1, [r5], #-2564	; 0xfffff5fc
    62f8:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    62fc:	3c050106 	stfccs	f0, [r5], {6}
    6300:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    6304:	09053e06 	stmdbeq	r5, {r1, r2, r9, sl, fp, ip, sp}
    6308:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    630c:	00050514 	andeq	r0, r5, r4, lsl r5
    6310:	06040402 	streq	r0, [r4], -r2, lsl #8
    6314:	00110513 	andseq	r0, r1, r3, lsl r5
    6318:	03010402 	movweq	r0, #5122	; 0x1402
    631c:	0200206f 	andeq	r2, r0, #111	; 0x6f
    6320:	022e0104 	eoreq	r0, lr, #4, 2
    6324:	01010003 	tsteq	r1, r3
    6328:	05000905 	streq	r0, [r0, #-2309]	; 0xfffff6fb
    632c:	00000002 	andeq	r0, r0, r2
    6330:	32d00300 	sbcscc	r0, r0, #0, 6
    6334:	130d0501 	movwne	r0, #54529	; 0xd501
    6338:	05143305 	ldreq	r3, [r4, #-773]	; 0xfffffcfb
    633c:	1505170d 	strne	r1, [r5, #-1805]	; 0xfffff8f3
    6340:	3d050106 	stfccs	f0, [r5, #-24]	; 0xffffffe8
    6344:	0d053006 	stceq	0, cr3, [r5, #-24]	; 0xffffffe8
    6348:	06090514 			; <UNDEFINED> instruction: 0x06090514
    634c:	00040213 	andeq	r0, r4, r3, lsl r2
    6350:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    6354:	00020500 	andeq	r0, r2, r0, lsl #10
    6358:	03000000 	movweq	r0, #0
    635c:	050132f3 	streq	r3, [r1, #-755]	; 0xfffffd0d
    6360:	3f051309 	svccc	0x00051309
    6364:	14090514 	strne	r0, [r9], #-1300	; 0xfffffaec
    6368:	01060b05 	tsteq	r6, r5, lsl #22
    636c:	23061105 	movwcs	r1, #24837	; 0x6105
    6370:	01061905 	tsteq	r6, r5, lsl #18
    6374:	0316052e 	tsteq	r6, #192937984	; 0xb800000
    6378:	40052079 	andmi	r2, r5, r9, ror r0
    637c:	200d0306 	andcs	r0, sp, r6, lsl #6
    6380:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    6384:	02130605 	andseq	r0, r3, #5242880	; 0x500000
    6388:	01010003 	tsteq	r1, r3
    638c:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    6390:	00000002 	andeq	r0, r0, r2
    6394:	338c0300 	orrcc	r0, ip, #0, 6
    6398:	13090501 	movwne	r0, #38145	; 0x9501
    639c:	05142c05 	ldreq	r2, [r4, #-3077]	; 0xfffff3fb
    63a0:	1f051409 	svcne	0x00051409
    63a4:	0b050106 	bleq	1467c4 <__RAM_SIZE+0x467c4>
    63a8:	0611052e 	ldreq	r0, [r1], -lr, lsr #10
    63ac:	05200a03 	streq	r0, [r0, #-2563]!	; 0xfffff5fd
    63b0:	0501062a 	streq	r0, [r1, #-1578]	; 0xfffff9d6
    63b4:	1d052e13 	stcne	14, cr2, [r5, #-76]	; 0xffffffb4
    63b8:	06360526 	ldrteq	r0, [r6], -r6, lsr #10
    63bc:	14090528 	strne	r0, [r9], #-1320	; 0xfffffad8
    63c0:	13060505 	movwne	r0, #25861	; 0x6505
    63c4:	71031d05 	tstvc	r3, r5, lsl #26
    63c8:	03150520 	tsteq	r5, #32, 10	; 0x8000000
    63cc:	06022e76 			; <UNDEFINED> instruction: 0x06022e76
    63d0:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    63d4:	02050005 	andeq	r0, r5, #5
    63d8:	00000000 	andeq	r0, r0, r0
    63dc:	0133b403 	teqeq	r3, r3, lsl #8
    63e0:	13130905 	tstne	r3, #81920	; 0x14000
    63e4:	05143905 	ldreq	r3, [r4, #-2309]	; 0xfffff6fb
    63e8:	0b051609 	bleq	14bc14 <__RAM_SIZE+0x4bc14>
    63ec:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    63f0:	052e7803 	streq	r7, [lr, #-2051]!	; 0xfffff7fd
    63f4:	0d03060d 	stceq	6, cr0, [r3, #-52]	; 0xffffffcc
    63f8:	0621052e 	strteq	r0, [r1], -lr, lsr #10
    63fc:	203c0501 	eorscs	r0, ip, r1, lsl #10
    6400:	053c0f05 	ldreq	r0, [ip, #-3845]!	; 0xfffff0fb
    6404:	05330611 	ldreq	r0, [r3, #-1553]!	; 0xfffff9ef
    6408:	05010617 	streq	r0, [r1, #-1559]	; 0xfffff9e9
    640c:	15052013 	strne	r2, [r5, #-19]	; 0xffffffed
    6410:	2d053006 	stccs	0, cr3, [r5, #-24]	; 0xffffffe8
    6414:	1711056a 	ldrne	r0, [r1, -sl, ror #10]
    6418:	01061505 	tsteq	r6, r5, lsl #10
    641c:	05661305 	strbeq	r1, [r6, #-773]!	; 0xfffffcfb
    6420:	1f030615 	svcne	0x00030615
    6424:	0640052e 	strbeq	r0, [r0], -lr, lsr #10
    6428:	3c320501 	cfldr32cc	mvfx0, [r2], #-4
    642c:	05261905 	streq	r1, [r6, #-2309]!	; 0xfffff6fb
    6430:	201d0305 	andscs	r0, sp, r5, lsl #6
    6434:	03061505 	movweq	r1, #25861	; 0x6505
    6438:	19052040 	stmdbne	r5, {r6, sp}
    643c:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
    6440:	09030631 	stmdbeq	r3, {r0, r4, r5, r9, sl}
    6444:	1615052e 	ldrne	r0, [r5], -lr, lsr #10
    6448:	01064005 	tsteq	r6, r5
    644c:	053c3205 	ldreq	r3, [ip, #-517]!	; 0xfffffdfb
    6450:	01210615 			; <UNDEFINED> instruction: 0x01210615
    6454:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    6458:	004a0104 	subeq	r0, sl, r4, lsl #2
    645c:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
    6460:	03040200 	movweq	r0, #16896	; 0x4200
    6464:	04020001 	streq	r0, [r2], #-1
    6468:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    646c:	00660304 	rsbeq	r0, r6, r4, lsl #6
    6470:	01030402 	tsteq	r3, r2, lsl #8
    6474:	03040200 	movweq	r0, #16896	; 0x4200
    6478:	04020001 	streq	r0, [r2], #-1
    647c:	02002003 	andeq	r2, r0, #3
    6480:	002e0304 	eoreq	r0, lr, r4, lsl #6
    6484:	20030402 	andcs	r0, r3, r2, lsl #8
    6488:	03040200 	movweq	r0, #16896	; 0x4200
    648c:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    6490:	00200603 	eoreq	r0, r0, r3, lsl #12
    6494:	06030402 	streq	r0, [r3], -r2, lsl #8
    6498:	04020058 	streq	r0, [r2], #-88	; 0xffffffa8
    649c:	02007403 	andeq	r7, r0, #50331648	; 0x3000000
    64a0:	00010304 	andeq	r0, r1, r4, lsl #6
    64a4:	01030402 	tsteq	r3, r2, lsl #8
    64a8:	02001905 	andeq	r1, r0, #81920	; 0x14000
    64ac:	03060304 	movweq	r0, #25348	; 0x6304
    64b0:	11050115 	tstne	r5, r5, lsl r1
    64b4:	25053206 	strcs	r3, [r5, #-518]	; 0xfffffdfa
    64b8:	44050106 	strmi	r0, [r5], #-262	; 0xfffffefa
    64bc:	3c130520 	cfldr32cc	mvfx0, [r3], {32}
    64c0:	bc031405 	cfstrslt	mvf1, [r3], {5}
    64c4:	20202e7f 	eorcs	r2, r0, pc, ror lr
    64c8:	dd030505 	cfstr32le	mvfx0, [r3, #-20]	; 0xffffffec
    64cc:	1d052000 	stcne	0, cr2, [r5, #-0]
    64d0:	05207003 	streq	r7, [r0, #-3]!
    64d4:	0a030625 	beq	c7d70 <__HEAP_SIZE+0xc6d70>
    64d8:	15340520 	ldrne	r0, [r4, #-1312]!	; 0xfffffae0
    64dc:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    64e0:	02010610 	andeq	r0, r1, #16, 12	; 0x1000000
    64e4:	01010008 	tsteq	r1, r8
    64e8:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    64ec:	002e5002 	eoreq	r5, lr, r2
    64f0:	349b0310 	ldrcc	r0, [fp], #784	; 0x310
    64f4:	13090501 	movwne	r0, #38145	; 0x9501
    64f8:	143c0513 	ldrtne	r0, [ip], #-1299	; 0xfffffaed
    64fc:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    6500:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
    6504:	2e7a0305 	cdpcs	3, 7, cr0, cr10, cr5, {0}
    6508:	03063205 	movweq	r3, #25093	; 0x6205
    650c:	31052e0c 	tstcc	r5, ip, lsl #28
    6510:	130d0513 	movwne	r0, #54547	; 0xd513
    6514:	01061405 	tsteq	r6, r5, lsl #8
    6518:	05202505 	streq	r2, [r0, #-1285]!	; 0xfffffafb
    651c:	0532060d 	ldreq	r0, [r2, #-1549]!	; 0xfffff9f3
    6520:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    6524:	0f05202b 	svceq	0x0005202b
    6528:	06110520 	ldreq	r0, [r1], -r0, lsr #10
    652c:	06130531 			; <UNDEFINED> instruction: 0x06130531
    6530:	03140501 	tsteq	r4, #4194304	; 0x400000
    6534:	2505206d 	strcs	r2, [r5, #-109]	; 0xffffff93
    6538:	00ce0306 	sbceq	r0, lr, r6, lsl #6
    653c:	15370520 	ldrne	r0, [r7, #-1312]!	; 0xfffffae0
    6540:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    6544:	05130605 	ldreq	r0, [r3, #-1541]	; 0xfffff9fb
    6548:	46030615 			; <UNDEFINED> instruction: 0x46030615
    654c:	06190520 	ldreq	r0, [r9], -r0, lsr #10
    6550:	31052e01 	tstcc	r5, r1, lsl #28
    6554:	52053406 	andpl	r3, r5, #100663296	; 0x6000000
    6558:	13150517 	tstne	r5, #96468992	; 0x5c00000
    655c:	01062e05 	tsteq	r6, r5, lsl #28
    6560:	05202705 	streq	r2, [r0, #-1797]!	; 0xfffff8fb
    6564:	3d250615 	stccc	6, cr0, [r5, #-84]!	; 0xffffffac
    6568:	00010101 	andeq	r0, r1, r1, lsl #2
    656c:	4a010402 	bmi	4757c <__HEAP_SIZE+0x4657c>
    6570:	03040200 	movweq	r0, #16896	; 0x4200
    6574:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    6578:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    657c:	00010304 	andeq	r0, r1, r4, lsl #6
    6580:	66030402 	strvs	r0, [r3], -r2, lsl #8
    6584:	03040200 	movweq	r0, #16896	; 0x4200
    6588:	04020001 	streq	r0, [r2], #-1
    658c:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    6590:	00200304 	eoreq	r0, r0, r4, lsl #6
    6594:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
    6598:	03040200 	movweq	r0, #16896	; 0x4200
    659c:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    65a0:	02002003 	andeq	r2, r0, #3
    65a4:	20060304 	andcs	r0, r6, r4, lsl #6
    65a8:	03040200 	movweq	r0, #16896	; 0x4200
    65ac:	02005806 	andeq	r5, r0, #393216	; 0x60000
    65b0:	00740304 	rsbseq	r0, r4, r4, lsl #6
    65b4:	01030402 	tsteq	r3, r2, lsl #8
    65b8:	03040200 	movweq	r0, #16896	; 0x4200
    65bc:	04020001 	streq	r0, [r2], #-1
    65c0:	01140303 	tsteq	r4, r3, lsl #6
    65c4:	02001d05 	andeq	r1, r0, #320	; 0x140
    65c8:	01060304 	tsteq	r6, r4, lsl #6
    65cc:	40031405 	andmi	r1, r3, r5, lsl #8
    65d0:	0305052e 	movweq	r0, #21806	; 0x552e
    65d4:	052000d4 	streq	r0, [r0, #-212]!	; 0xffffff2c
    65d8:	7fac0314 	svcvc	0x00ac0314
    65dc:	06022020 	streq	r2, [r2], -r0, lsr #32
    65e0:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    65e4:	02050005 	andeq	r0, r5, #5
    65e8:	00000000 	andeq	r0, r0, r0
    65ec:	0134fa03 	teqeq	r4, r3, lsl #20	; <UNPREDICTABLE>
    65f0:	13130905 	tstne	r3, #81920	; 0x14000
    65f4:	14660513 	strbtne	r0, [r6], #-1299	; 0xfffffaed
    65f8:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    65fc:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
    6600:	2e790305 	cdpcs	3, 7, cr0, cr9, cr5, {0}
    6604:	03063105 	movweq	r3, #24837	; 0x6105
    6608:	0d052e0b 	stceq	14, cr2, [r5, #-44]	; 0xffffffd4
    660c:	06160518 			; <UNDEFINED> instruction: 0x06160518
    6610:	200f0501 	andcs	r0, pc, r1, lsl #10
    6614:	05302105 	ldreq	r2, [r0, #-261]!	; 0xfffffefb
    6618:	0528060d 	streq	r0, [r8, #-1549]!	; 0xfffff9f3
    661c:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    6620:	1105200f 	tstne	r5, pc
    6624:	1a053406 	bne	153644 <__RAM_SIZE+0x53644>
    6628:	13050106 	movwne	r0, #20742	; 0x5106
    662c:	03050520 	movweq	r0, #21792	; 0x5520
    6630:	052e00ce 	streq	r0, [lr, #-206]!	; 0xffffff32
    6634:	b703063a 	smladxlt	r3, sl, r6, r0
    6638:	4c05207f 	stcmi	0, cr2, [r5], {127}	; 0x7f
    663c:	13150517 	tstne	r5, #96468992	; 0x5c00000
    6640:	06270513 			; <UNDEFINED> instruction: 0x06270513
    6644:	06150501 	ldreq	r0, [r5], -r1, lsl #10
    6648:	061b0524 	ldreq	r0, [fp], -r4, lsr #10
    664c:	20170501 	andscs	r0, r7, r1, lsl #10
    6650:	30061905 	andcc	r1, r6, r5, lsl #18
    6654:	31052e06 	tstcc	r5, r6, lsl #28
    6658:	15052406 	strne	r2, [r5, #-1030]	; 0xfffffbfa
    665c:	05010903 	streq	r0, [r1, #-2307]	; 0xfffff6fd
    6660:	3c010619 	stccc	6, cr0, [r1], {25}
    6664:	053c1705 	ldreq	r1, [ip, #-1797]!	; 0xfffff8fb
    6668:	05300619 	ldreq	r0, [r0, #-1561]!	; 0xfffff9e7
    666c:	2e01061d 	mcrcs	6, 0, r0, cr1, cr13, {0}
    6670:	03063505 	movweq	r3, #25861	; 0x6505
    6674:	19052e09 	stmdbne	r5, {r0, r3, r9, sl, fp, sp}
    6678:	01010115 	tsteq	r1, r5, lsl r1
    667c:	01040200 	mrseq	r0, R12_usr
    6680:	04020058 	streq	r0, [r2], #-88	; 0xffffffa8
    6684:	02002e03 	andeq	r2, r0, #3, 28	; 0x30
    6688:	00010304 	andeq	r0, r1, r4, lsl #6
    668c:	01030402 	tsteq	r3, r2, lsl #8
    6690:	03040200 	movweq	r0, #16896	; 0x4200
    6694:	04020066 	streq	r0, [r2], #-102	; 0xffffff9a
    6698:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    669c:	00010304 	andeq	r0, r1, r4, lsl #6
    66a0:	20030402 	andcs	r0, r3, r2, lsl #8
    66a4:	03040200 	movweq	r0, #16896	; 0x4200
    66a8:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    66ac:	02002003 	andeq	r2, r0, #3
    66b0:	00200304 	eoreq	r0, r0, r4, lsl #6
    66b4:	06030402 	streq	r0, [r3], -r2, lsl #8
    66b8:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    66bc:	00580603 	subseq	r0, r8, r3, lsl #12
    66c0:	74030402 	strvc	r0, [r3], #-1026	; 0xfffffbfe
    66c4:	03040200 	movweq	r0, #16896	; 0x4200
    66c8:	04020001 	streq	r0, [r2], #-1
    66cc:	25050103 	strcs	r0, [r5, #-259]	; 0xfffffefd
    66d0:	03040200 	movweq	r0, #16896	; 0x4200
    66d4:	05011d03 	streq	r1, [r1, #-3331]	; 0xfffff2fd
    66d8:	0402003a 	streq	r0, [r2], #-58	; 0xffffffc6
    66dc:	05051503 	streq	r1, [r5, #-1283]	; 0xfffffafd
    66e0:	03040200 	movweq	r0, #16896	; 0x4200
    66e4:	02001306 	andeq	r1, r0, #402653184	; 0x18000000
    66e8:	02200304 	eoreq	r0, r0, #4, 6	; 0x10000000
    66ec:	01010006 	tsteq	r1, r6
    66f0:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    66f4:	00000002 	andeq	r0, r0, r2
    66f8:	3b910300 	blcc	fe447300 <__StackTop+0xc6347300>
    66fc:	13050501 	movwne	r0, #21761	; 0x5501
    6700:	05142b05 	ldreq	r2, [r4, #-2821]	; 0xfffff4fb
    6704:	10051405 	andne	r1, r5, r5, lsl #8
    6708:	0e050106 	adfeqs	f0, f5, f6
    670c:	0605052e 	streq	r0, [r5], -lr, lsr #10
    6710:	68360524 	ldmdavs	r6!, {r2, r5, r8, sl}
    6714:	05140505 	ldreq	r0, [r4, #-1285]	; 0xfffffafb
    6718:	02130601 	andseq	r0, r3, #1048576	; 0x100000
    671c:	01010003 	tsteq	r1, r3
    6720:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    6724:	00000002 	andeq	r0, r0, r2
    6728:	3ba50300 	blcc	fe947330 <__StackTop+0xc6847330>
    672c:	13090501 	movwne	r0, #38145	; 0x9501
    6730:	05143305 	ldreq	r3, [r4, #-773]	; 0xfffffcfb
    6734:	0f051409 	svceq	0x00051409
    6738:	09050106 	stmdbeq	r5, {r1, r2, r8}
    673c:	0b053206 	bleq	152f5c <__RAM_SIZE+0x52f5c>
    6740:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    6744:	14052206 	strne	r2, [r5], #-518	; 0xfffffdfa
    6748:	25050106 	strcs	r0, [r5, #-262]	; 0xfffffefa
    674c:	063b0520 	ldrteq	r0, [fp], -r0, lsr #10
    6750:	14090531 	strne	r0, [r9], #-1329	; 0xfffffacf
    6754:	13060505 	movwne	r0, #25861	; 0x6505
    6758:	01000402 	tsteq	r0, r2, lsl #8
    675c:	00050501 	andeq	r0, r5, r1, lsl #10
    6760:	00000205 	andeq	r0, r0, r5, lsl #4
    6764:	c0030000 	andgt	r0, r3, r0
    6768:	0106013b 	tsteq	r6, fp, lsr r1
    676c:	4b060905 	blmi	188b88 <__RAM_SIZE+0x88b88>
    6770:	145f0513 	ldrbne	r0, [pc], #-1299	; 6778 <__HEAP_SIZE+0x5778>
    6774:	05145005 	ldreq	r5, [r4, #-5]
    6778:	0d051609 	stceq	6, cr1, [r5, #-36]	; 0xffffffdc
    677c:	31110534 	tstcc	r1, r4, lsr r5
    6780:	01062105 	tsteq	r6, r5, lsl #2
    6784:	052e3205 	streq	r3, [lr, #-517]!	; 0xfffffdfb
    6788:	15055813 	strne	r5, [r5, #-2067]	; 0xfffff7ed
    678c:	21052306 	tstcs	r5, r6, lsl #6
    6790:	44050106 	strmi	r0, [r5], #-262	; 0xfffffefa
    6794:	0615052e 	ldreq	r0, [r5], -lr, lsr #10
    6798:	0617054c 	ldreq	r0, [r7], -ip, asr #10
    679c:	062d0501 	strteq	r0, [sp], -r1, lsl #10
    67a0:	05200b03 	streq	r0, [r0, #-2819]!	; 0xfffff4fd
    67a4:	0533150d 	ldreq	r1, [r3, #-1293]!	; 0xfffffaf3
    67a8:	09051929 	stmdbeq	r5, {r0, r3, r5, r8, fp, ip}
    67ac:	061b0515 			; <UNDEFINED> instruction: 0x061b0515
    67b0:	06090501 	streq	r0, [r9], -r1, lsl #10
    67b4:	060b0531 			; <UNDEFINED> instruction: 0x060b0531
    67b8:	06250501 	strteq	r0, [r5], -r1, lsl #10
    67bc:	15090526 	strne	r0, [r9, #-1318]	; 0xfffffada
    67c0:	05303505 	ldreq	r3, [r0, #-1285]!	; 0xfffffafb
    67c4:	2405130d 	strcs	r1, [r5], #-781	; 0xfffffcf3
    67c8:	16050106 	strne	r0, [r5], -r6, lsl #2
    67cc:	060d052e 	streq	r0, [sp], -lr, lsr #10
    67d0:	060f055a 			; <UNDEFINED> instruction: 0x060f055a
    67d4:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    67d8:	06130522 	ldreq	r0, [r3], -r2, lsr #10
    67dc:	06150501 	ldreq	r0, [r5], -r1, lsl #10
    67e0:	06210522 	strteq	r0, [r1], -r2, lsr #10
    67e4:	2e460501 	cdpcs	5, 4, cr0, cr6, cr1, {0}
    67e8:	03062905 	movweq	r2, #26885	; 0x6905
    67ec:	0d054a09 	vstreq	s8, [r5, #-36]	; 0xffffffdc
    67f0:	06190515 			; <UNDEFINED> instruction: 0x06190515
    67f4:	2e3c0501 	cdpcs	5, 3, cr0, cr12, cr1, {0}
    67f8:	06090520 	streq	r0, [r9], -r0, lsr #10
    67fc:	3038053e 	eorscc	r0, r8, lr, lsr r5
    6800:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    6804:	05130605 	ldreq	r0, [r3, #-1541]	; 0xfffff9fb
    6808:	4603062d 	strmi	r0, [r3], -sp, lsr #12
    680c:	150d052e 	strne	r0, [sp, #-1326]	; 0xfffffad2
    6810:	06250533 			; <UNDEFINED> instruction: 0x06250533
    6814:	20015703 	andcs	r5, r1, r3, lsl #14
    6818:	03061905 	movweq	r1, #26885	; 0x6905
    681c:	2d052018 	stccs	0, cr2, [r5, #-96]	; 0xffffffa0
    6820:	05010903 	streq	r0, [r1, #-2307]	; 0xfffff6fd
    6824:	0533150d 	ldreq	r1, [r3, #-1293]!	; 0xfffffaf3
    6828:	1105143f 	tstne	r5, pc, lsr r4
    682c:	06260513 			; <UNDEFINED> instruction: 0x06260513
    6830:	204a6c03 	subcs	r6, sl, r3, lsl #24
    6834:	02002805 	andeq	r2, r0, #327680	; 0x50000
    6838:	1e030104 	adfnes	f0, f3, f4
    683c:	060d0520 	streq	r0, [sp], -r0, lsr #10
    6840:	052e0630 	streq	r0, [lr, #-1584]!	; 0xfffff9d0
    6844:	14030615 	strne	r0, [r3], #-1557	; 0xfffff9eb
    6848:	06210520 	strteq	r0, [r1], -r0, lsr #10
    684c:	2e510501 	cdpcs	5, 5, cr0, cr1, cr1, {0}
    6850:	02204605 	eoreq	r4, r0, #5242880	; 0x500000
    6854:	01010009 	tsteq	r1, r9
    6858:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    685c:	00000002 	andeq	r0, r0, r2
    6860:	3ca90300 	stccc	3, cr0, [r9]
    6864:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    6868:	05750609 	ldrbeq	r0, [r5, #-1545]!	; 0xfffff9f7
    686c:	0514018c 	ldreq	r0, [r4, #-396]	; 0xfffffe74
    6870:	09051450 	stmdbeq	r5, {r4, r6, sl, ip}
    6874:	330d0516 	movwcc	r0, #54550	; 0xd516
    6878:	05311105 	ldreq	r1, [r1, #-261]!	; 0xfffffefb
    687c:	05010621 	streq	r0, [r1, #-1569]	; 0xfffff9df
    6880:	13052e30 	movwne	r2, #24112	; 0x5e30
    6884:	0615054a 	ldreq	r0, [r5], -sl, asr #10
    6888:	06460533 			; <UNDEFINED> instruction: 0x06460533
    688c:	06150501 	ldreq	r0, [r5], -r1, lsl #10
    6890:	062105a1 	strteq	r0, [r1], -r1, lsr #11
    6894:	20440501 	subcs	r0, r4, r1, lsl #10
    6898:	4c061505 	cfstr32mi	mvfx1, [r6], {5}
    689c:	01061705 	tsteq	r6, r5, lsl #14
    68a0:	03062d05 	movweq	r2, #27909	; 0x6d05
    68a4:	0d05200b 	stceq	0, cr2, [r5, #-44]	; 0xffffffd4
    68a8:	29053315 	stmdbcs	r5, {r0, r2, r4, r8, r9, ip, sp}
    68ac:	15090519 	strne	r0, [r9, #-1305]	; 0xfffffae7
    68b0:	01061b05 	tsteq	r6, r5, lsl #22
    68b4:	31060905 	tstcc	r6, r5, lsl #18
    68b8:	01060b05 	tsteq	r6, r5, lsl #22
    68bc:	26062505 	strcs	r2, [r6], -r5, lsl #10
    68c0:	05150905 	ldreq	r0, [r5, #-2309]	; 0xfffff6fb
    68c4:	0d053035 	stceq	0, cr3, [r5, #-212]	; 0xffffff2c
    68c8:	060f0514 			; <UNDEFINED> instruction: 0x060f0514
    68cc:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    68d0:	06350524 	ldrteq	r0, [r5], -r4, lsr #10
    68d4:	2e460501 	cdpcs	5, 4, cr0, cr6, cr1, {0}
    68d8:	05582705 	ldrbeq	r2, [r8, #-1797]	; 0xfffff8fb
    68dc:	0527060d 	streq	r0, [r7, #-1549]!	; 0xfffff9f3
    68e0:	0501061d 	streq	r0, [r1, #-1565]	; 0xfffff9e3
    68e4:	0f052e2c 	svceq	0x00052e2c
    68e8:	3119054a 	tstcc	r9, sl, asr #10
    68ec:	03060d05 	movweq	r0, #27909	; 0x6d05
    68f0:	1905200a 	stmdbne	r5, {r1, r3, sp}
    68f4:	3c050106 	stfccs	f0, [r5], {6}
    68f8:	0905202e 	stmdbeq	r5, {r1, r2, r3, r5, sp}
    68fc:	36053e06 	strcc	r3, [r5], -r6, lsl #28
    6900:	14090530 	strne	r0, [r9], #-1328	; 0xfffffad0
    6904:	13060505 	movwne	r0, #25861	; 0x6505
    6908:	03062d05 	movweq	r2, #27909	; 0x6d05
    690c:	053c7fbf 	ldreq	r7, [ip, #-4031]!	; 0xfffff041
    6910:	0533150d 	ldreq	r1, [r3, #-1293]!	; 0xfffffaf3
    6914:	5303062e 	movwpl	r0, #13870	; 0x362e
    6918:	06190501 	ldreq	r0, [r9], -r1, lsl #10
    691c:	052e1c03 	streq	r1, [lr, #-3075]!	; 0xfffff3fd
    6920:	0109032d 	tsteq	r9, sp, lsr #6
    6924:	33150d05 	tstcc	r5, #320	; 0x140
    6928:	05143f05 	ldreq	r3, [r4, #-3845]	; 0xfffff0fb
    692c:	26051311 			; <UNDEFINED> instruction: 0x26051311
    6930:	4a6c0306 	bmi	1b07550 <__RAM_SIZE+0x1a07550>
    6934:	02002805 	andeq	r2, r0, #327680	; 0x50000
    6938:	1e030104 	adfnes	f0, f3, f4
    693c:	060d052e 	streq	r0, [sp], -lr, lsr #10
    6940:	052e0630 	streq	r0, [lr, #-1584]!	; 0xfffff9d0
    6944:	1f030611 	svcne	0x00030611
    6948:	06420520 	strbeq	r0, [r2], -r0, lsr #10
    694c:	11059001 	tstne	r5, r1
    6950:	19052106 	stmdbne	r5, {r1, r2, r8, sp}
    6954:	02200106 	eoreq	r0, r0, #-2147483647	; 0x80000001
    6958:	01010003 	tsteq	r1, r3
    695c:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    6960:	00000002 	andeq	r0, r0, r2
    6964:	3d9c0300 	ldccc	3, cr0, [ip]
    6968:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    696c:	13830609 	orrne	r0, r3, #9437184	; 0x900000
    6970:	14780513 	ldrbtne	r0, [r8], #-1299	; 0xfffffaed
    6974:	05145005 	ldreq	r5, [r4, #-5]
    6978:	09051326 	stmdbeq	r5, {r1, r2, r5, r8, r9, ip}
    697c:	0d051413 	cfstrseq	mvf1, [r5, #-76]	; 0xffffffb4
    6980:	060f0530 			; <UNDEFINED> instruction: 0x060f0530
    6984:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    6988:	0647053e 			; <UNDEFINED> instruction: 0x0647053e
    698c:	582f0501 	stmdapl	pc!, {r0, r8, sl}	; <UNPREDICTABLE>
    6990:	31060d05 	tstcc	r6, r5, lsl #26
    6994:	01062305 	tsteq	r6, r5, lsl #6
    6998:	4c060d05 	stcmi	13, cr0, [r6], {5}
    699c:	01063505 	tsteq	r6, r5, lsl #10
    69a0:	3e060d05 	cdpcc	13, 0, cr0, cr6, cr5, {0}
    69a4:	05771505 	ldrbeq	r1, [r7, #-1285]!	; 0xfffffafb
    69a8:	2001063f 	andcs	r0, r1, pc, lsr r6
    69ac:	15052e2e 	strne	r2, [r5, #-3630]	; 0xfffff1d2
    69b0:	14052106 	strne	r2, [r5], #-262	; 0xfffffefa
    69b4:	01680306 	cmneq	r8, r6, lsl #6
    69b8:	03063005 	movweq	r3, #24581	; 0x6005
    69bc:	052000c0 	streq	r0, [r0, #-192]!	; 0xffffff40
    69c0:	0f05160d 	svceq	0x0005160d
    69c4:	29050106 	stmdbcs	r5, {r1, r2, r8}
    69c8:	2e1e0306 	cdpcs	3, 1, cr0, cr14, cr6, {0}
    69cc:	05150905 	ldreq	r0, [r5, #-2309]	; 0xfffff6fb
    69d0:	09053032 	stmdbeq	r5, {r1, r4, r5, ip, sp}
    69d4:	06050514 			; <UNDEFINED> instruction: 0x06050514
    69d8:	06150513 			; <UNDEFINED> instruction: 0x06150513
    69dc:	3c7fb103 	ldfccp	f3, [pc], #-12	; 69d8 <__HEAP_SIZE+0x59d8>
    69e0:	01062d05 	tsteq	r6, r5, lsl #26
    69e4:	42052e20 	andmi	r2, r5, #32, 28	; 0x200
    69e8:	06150520 	ldreq	r0, [r5], -r0, lsr #10
    69ec:	0614052f 	ldreq	r0, [r4], -pc, lsr #10
    69f0:	05016403 	streq	r6, [r1, #-1027]	; 0xfffffbfd
    69f4:	201c0315 	andscs	r0, ip, r5, lsl r3
    69f8:	3f052306 	svccc	0x00052306
    69fc:	2e200106 	sufcss	f0, f0, f6
    6a00:	21061505 	tstcs	r6, r5, lsl #10
    6a04:	03061405 	movweq	r1, #25605	; 0x6405
    6a08:	15050160 	strne	r0, [r5, #-352]	; 0xfffffea0
    6a0c:	06202003 	strteq	r2, [r0], -r3
    6a10:	06170524 	ldreq	r0, [r7], -r4, lsr #10
    6a14:	06190501 	ldreq	r0, [r9], -r1, lsl #10
    6a18:	06430530 			; <UNDEFINED> instruction: 0x06430530
    6a1c:	052e2001 	streq	r2, [lr, #-1]!
    6a20:	205a0314 	subscs	r0, sl, r4, lsl r3
    6a24:	14030d05 	strne	r0, [r3], #-3333	; 0xfffff2fb
    6a28:	2105202e 	tstcs	r5, lr, lsr #32
    6a2c:	20201703 	eorcs	r1, r0, r3, lsl #14
    6a30:	03061105 	movweq	r1, #24837	; 0x6105
    6a34:	2001201b 	andcs	r2, r1, fp, lsl r0
    6a38:	02003c3c 	andeq	r3, r0, #60, 24	; 0x3c00
    6a3c:	004a0304 	subeq	r0, sl, r4, lsl #6
    6a40:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
    6a44:	03040200 	movweq	r0, #16896	; 0x4200
    6a48:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    6a4c:	02001303 	andeq	r1, r0, #201326592	; 0xc000000
    6a50:	00010304 	andeq	r0, r1, r4, lsl #6
    6a54:	01030402 	tsteq	r3, r2, lsl #8
    6a58:	03040200 	movweq	r0, #16896	; 0x4200
    6a5c:	04020001 	streq	r0, [r2], #-1
    6a60:	00200603 	eoreq	r0, r0, r3, lsl #12
    6a64:	06010402 	streq	r0, [r1], -r2, lsl #8
    6a68:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    6a6c:	02002e03 	andeq	r2, r0, #3, 28	; 0x30
    6a70:	00010304 	andeq	r0, r1, r4, lsl #6
    6a74:	01030402 	tsteq	r3, r2, lsl #8
    6a78:	03040200 	movweq	r0, #16896	; 0x4200
    6a7c:	04020066 	streq	r0, [r2], #-102	; 0xffffff9a
    6a80:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    6a84:	00010304 	andeq	r0, r1, r4, lsl #6
    6a88:	20030402 	andcs	r0, r3, r2, lsl #8
    6a8c:	03040200 	movweq	r0, #16896	; 0x4200
    6a90:	02002006 	andeq	r2, r0, #6
    6a94:	20060304 	andcs	r0, r6, r4, lsl #6
    6a98:	03040200 	movweq	r0, #16896	; 0x4200
    6a9c:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    6aa0:	02002003 	andeq	r2, r0, #3
    6aa4:	20060304 	andcs	r0, r6, r4, lsl #6
    6aa8:	03040200 	movweq	r0, #16896	; 0x4200
    6aac:	02005806 	andeq	r5, r0, #393216	; 0x60000
    6ab0:	00740304 	rsbseq	r0, r4, r4, lsl #6
    6ab4:	01030402 	tsteq	r3, r2, lsl #8
    6ab8:	03040200 	movweq	r0, #16896	; 0x4200
    6abc:	005e0501 	subseq	r0, lr, r1, lsl #10
    6ac0:	15030402 	strne	r0, [r3, #-1026]	; 0xfffffbfe
    6ac4:	02001505 	andeq	r1, r0, #20971520	; 0x1400000
    6ac8:	0e030304 	cdpeq	3, 0, cr0, cr3, cr4, {0}
    6acc:	00110501 	andseq	r0, r1, r1, lsl #10
    6ad0:	34030402 	strcc	r0, [r3], #-1026	; 0xfffffbfe
    6ad4:	03040200 	movweq	r0, #16896	; 0x4200
    6ad8:	04020001 	streq	r0, [r2], #-1
    6adc:	02006601 	andeq	r6, r0, #1048576	; 0x100000
    6ae0:	68030104 	stmdavs	r3, {r2, r8}
    6ae4:	000a023c 	andeq	r0, sl, ip, lsr r2
    6ae8:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    6aec:	00020500 	andeq	r0, r2, r0, lsl #10
    6af0:	03000000 	movweq	r0, #0
    6af4:	06013e95 			; <UNDEFINED> instruction: 0x06013e95
    6af8:	06090501 	streq	r0, [r9], -r1, lsl #10
    6afc:	13131383 	tstne	r3, #201326594	; 0xc000002
    6b00:	14019a05 	strne	r9, [r1], #-2565	; 0xfffff5fb
    6b04:	05142605 	ldreq	r2, [r4, #-1541]	; 0xfffff9fb
    6b08:	33051350 	movwcc	r1, #21328	; 0x5350
    6b0c:	05011203 	streq	r1, [r1, #-515]	; 0xfffffdfd
    6b10:	05171409 	ldreq	r1, [r7, #-1033]	; 0xfffffbf7
    6b14:	05010632 	streq	r0, [r1, #-1586]	; 0xfffff9ce
    6b18:	0530060d 	ldreq	r0, [r0, #-1549]!	; 0xfffff9f3
    6b1c:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    6b20:	053e0611 	ldreq	r0, [lr, #-1553]!	; 0xfffff9ef
    6b24:	05010647 	streq	r0, [r1, #-1607]	; 0xfffff9b9
    6b28:	0d05582f 	stceq	8, cr5, [r5, #-188]	; 0xffffff44
    6b2c:	23053106 	movwcs	r3, #20742	; 0x5106
    6b30:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    6b34:	35055906 	strcc	r5, [r5, #-2310]	; 0xfffff6fa
    6b38:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    6b3c:	15053e06 	strne	r3, [r5, #-3590]	; 0xfffff1fa
    6b40:	063f0577 			; <UNDEFINED> instruction: 0x063f0577
    6b44:	2e2e2001 	cdpcs	0, 2, cr2, cr14, cr1, {0}
    6b48:	21061505 	tstcs	r6, r5, lsl #10
    6b4c:	03061405 	movweq	r1, #25605	; 0x6405
    6b50:	39050153 	stmdbcc	r5, {r0, r1, r4, r6, r8}
    6b54:	00d40306 	sbcseq	r0, r4, r6, lsl #6
    6b58:	160d0520 	strne	r0, [sp], -r0, lsr #10
    6b5c:	01060f05 	tsteq	r6, r5, lsl #30
    6b60:	03063105 	movweq	r3, #24837	; 0x6105
    6b64:	09053c23 	stmdbeq	r5, {r0, r1, r5, sl, fp, ip, sp}
    6b68:	05011603 	streq	r1, [r1, #-1539]	; 0xfffff9fd
    6b6c:	09053039 	stmdbeq	r5, {r0, r3, r4, r5, ip, sp}
    6b70:	06050514 			; <UNDEFINED> instruction: 0x06050514
    6b74:	06150513 			; <UNDEFINED> instruction: 0x06150513
    6b78:	3c7f9a03 			; <UNDEFINED> instruction: 0x3c7f9a03
    6b7c:	01062d05 	tsteq	r6, r5, lsl #26
    6b80:	42052e20 	andmi	r2, r5, #32, 28	; 0x200
    6b84:	06150520 	ldreq	r0, [r5], -r0, lsr #10
    6b88:	0614052f 	ldreq	r0, [r4], -pc, lsr #10
    6b8c:	05014f03 	streq	r4, [r1, #-3843]	; 0xfffff0fd
    6b90:	20310315 	eorscs	r0, r1, r5, lsl r3
    6b94:	3f052306 	svccc	0x00052306
    6b98:	2e200106 	sufcss	f0, f0, f6
    6b9c:	21061505 	tstcs	r6, r5, lsl #10
    6ba0:	03061405 	movweq	r1, #25605	; 0x6405
    6ba4:	1505014b 	strne	r0, [r5, #-331]	; 0xfffffeb5
    6ba8:	06203503 	strteq	r3, [r0], -r3, lsl #10
    6bac:	06170524 	ldreq	r0, [r7], -r4, lsr #10
    6bb0:	06190501 	ldreq	r0, [r9], -r1, lsl #10
    6bb4:	0643053e 			; <UNDEFINED> instruction: 0x0643053e
    6bb8:	052e2001 	streq	r2, [lr, #-1]!
    6bbc:	20450314 	subcs	r0, r5, r4, lsl r3
    6bc0:	29030d05 	stmdbcs	r3, {r0, r2, r8, sl, fp}
    6bc4:	2105202e 	tstcs	r5, lr, lsr #32
    6bc8:	20201703 	eorcs	r1, r0, r3, lsl #14
    6bcc:	03065e05 	movweq	r5, #28165	; 0x6e05
    6bd0:	1105201b 	tstne	r5, fp, lsl r0
    6bd4:	062a0514 			; <UNDEFINED> instruction: 0x062a0514
    6bd8:	2e130501 	cfmul32cs	mvfx0, mvfx3, mvfx1
    6bdc:	30061505 	andcc	r1, r6, r5, lsl #10
    6be0:	3c3c2001 	ldccc	0, cr2, [ip], #-4
    6be4:	03040200 	movweq	r0, #16896	; 0x4200
    6be8:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    6bec:	02002e03 	andeq	r2, r0, #3, 28	; 0x30
    6bf0:	003c0304 	eorseq	r0, ip, r4, lsl #6
    6bf4:	13030402 	movwne	r0, #13314	; 0x3402
    6bf8:	03040200 	movweq	r0, #16896	; 0x4200
    6bfc:	04020001 	streq	r0, [r2], #-1
    6c00:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    6c04:	00010304 	andeq	r0, r1, r4, lsl #6
    6c08:	06030402 	streq	r0, [r3], -r2, lsl #8
    6c0c:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    6c10:	004a0601 	subeq	r0, sl, r1, lsl #12
    6c14:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
    6c18:	03040200 	movweq	r0, #16896	; 0x4200
    6c1c:	04020001 	streq	r0, [r2], #-1
    6c20:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    6c24:	00660304 	rsbeq	r0, r6, r4, lsl #6
    6c28:	01030402 	tsteq	r3, r2, lsl #8
    6c2c:	03040200 	movweq	r0, #16896	; 0x4200
    6c30:	04020001 	streq	r0, [r2], #-1
    6c34:	02002003 	andeq	r2, r0, #3
    6c38:	002e0304 	eoreq	r0, lr, r4, lsl #6
    6c3c:	20030402 	andcs	r0, r3, r2, lsl #8
    6c40:	03040200 	movweq	r0, #16896	; 0x4200
    6c44:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    6c48:	00200603 	eoreq	r0, r0, r3, lsl #12
    6c4c:	06030402 	streq	r0, [r3], -r2, lsl #8
    6c50:	04020058 	streq	r0, [r2], #-88	; 0xffffffa8
    6c54:	02007403 	andeq	r7, r0, #50331648	; 0x3000000
    6c58:	00010304 	andeq	r0, r1, r4, lsl #6
    6c5c:	01030402 	tsteq	r3, r2, lsl #8
    6c60:	01040200 	mrseq	r0, R12_usr
    6c64:	04020018 	streq	r0, [r2], #-24	; 0xffffffe8
    6c68:	1e051701 	cdpne	7, 0, cr1, cr5, cr1, {0}
    6c6c:	01040200 	mrseq	r0, R12_usr
    6c70:	39050106 	stmdbcc	r5, {r1, r2, r8}
    6c74:	01040200 	mrseq	r0, R12_usr
    6c78:	00170520 	andseq	r0, r7, r0, lsr #10
    6c7c:	3c010402 	cfstrscc	mvf0, [r1], {2}
    6c80:	32061905 	andcc	r1, r6, #81920	; 0x14000
    6c84:	01061b05 	tsteq	r6, r5, lsl #22
    6c88:	30061d05 	andcc	r1, r6, r5, lsl #26
    6c8c:	01063805 	tsteq	r6, r5, lsl #16
    6c90:	42061905 	andmi	r1, r6, #81920	; 0x14000
    6c94:	01062d05 	tsteq	r6, r5, lsl #26
    6c98:	02001505 	andeq	r1, r0, #20971520	; 0x1400000
    6c9c:	03060104 	movweq	r0, #24836	; 0x6104
    6ca0:	02004a68 	andeq	r4, r0, #104, 20	; 0x68000
    6ca4:	3c060104 	stfccs	f0, [r6], {4}
    6ca8:	2e011906 	vmlacs.f16	s2, s2, s12	; <UNPREDICTABLE>
    6cac:	2e200101 	sufcss	f0, f0, f1
    6cb0:	0620203c 			; <UNDEFINED> instruction: 0x0620203c
    6cb4:	000f0220 	andeq	r0, pc, r0, lsr #4
    6cb8:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    6cbc:	00020500 	andeq	r0, r2, r0, lsl #10
    6cc0:	03000000 	movweq	r0, #0
    6cc4:	06013fb8 			; <UNDEFINED> instruction: 0x06013fb8
    6cc8:	06090501 	streq	r0, [r9], -r1, lsl #10
    6ccc:	0513134b 	ldreq	r1, [r3, #-843]	; 0xfffffcb5
    6cd0:	2605146e 	strcs	r1, [r5], -lr, ror #8
    6cd4:	13500514 	cmpne	r0, #20, 10	; 0x5000000
    6cd8:	12033305 	andne	r3, r3, #335544320	; 0x14000000
    6cdc:	14090501 	strne	r0, [r9], #-1281	; 0xfffffaff
    6ce0:	06320517 			; <UNDEFINED> instruction: 0x06320517
    6ce4:	060d0501 	streq	r0, [sp], -r1, lsl #10
    6ce8:	06230530 			; <UNDEFINED> instruction: 0x06230530
    6cec:	060d0501 	streq	r0, [sp], -r1, lsl #10
    6cf0:	0635054b 	ldrteq	r0, [r5], -fp, asr #10
    6cf4:	060d0501 	streq	r0, [sp], -r1, lsl #10
    6cf8:	06250540 	strteq	r0, [r5], -r0, asr #10
    6cfc:	052e2001 	streq	r2, [lr, #-1]!
    6d00:	3e05203a 	mcrcc	0, 0, r2, cr5, cr10, {1}
    6d04:	0d053006 	stceq	0, cr3, [r5, #-24]	; 0xffffffe8
    6d08:	060f0516 			; <UNDEFINED> instruction: 0x060f0516
    6d0c:	06310501 	ldrteq	r0, [r1], -r1, lsl #10
    6d10:	052e2303 	streq	r2, [lr, #-771]!	; 0xfffffcfd
    6d14:	01160309 	tsteq	r6, r9, lsl #6
    6d18:	05303405 	ldreq	r3, [r0, #-1029]!	; 0xfffffbfb
    6d1c:	05130605 	ldreq	r0, [r3, #-1541]	; 0xfffff9fb
    6d20:	4703065e 	smlsdmi	r3, lr, r6, r0
    6d24:	14110520 	ldrne	r0, [r1], #-1312	; 0xfffffae0
    6d28:	01062a05 	tsteq	r6, r5, lsl #20
    6d2c:	20130520 	andscs	r0, r3, r0, lsr #10
    6d30:	30061505 	andcc	r1, r6, r5, lsl #10
    6d34:	3c3c2001 	ldccc	0, cr2, [ip], #-4
    6d38:	03040200 	movweq	r0, #16896	; 0x4200
    6d3c:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    6d40:	02002e03 	andeq	r2, r0, #3, 28	; 0x30
    6d44:	003c0304 	eorseq	r0, ip, r4, lsl #6
    6d48:	13030402 	movwne	r0, #13314	; 0x3402
    6d4c:	03040200 	movweq	r0, #16896	; 0x4200
    6d50:	04020001 	streq	r0, [r2], #-1
    6d54:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    6d58:	00010304 	andeq	r0, r1, r4, lsl #6
    6d5c:	06030402 	streq	r0, [r3], -r2, lsl #8
    6d60:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    6d64:	004a0601 	subeq	r0, sl, r1, lsl #12
    6d68:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
    6d6c:	03040200 	movweq	r0, #16896	; 0x4200
    6d70:	04020001 	streq	r0, [r2], #-1
    6d74:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    6d78:	00660304 	rsbeq	r0, r6, r4, lsl #6
    6d7c:	01030402 	tsteq	r3, r2, lsl #8
    6d80:	03040200 	movweq	r0, #16896	; 0x4200
    6d84:	04020001 	streq	r0, [r2], #-1
    6d88:	02002003 	andeq	r2, r0, #3
    6d8c:	002e0304 	eoreq	r0, lr, r4, lsl #6
    6d90:	20030402 	andcs	r0, r3, r2, lsl #8
    6d94:	03040200 	movweq	r0, #16896	; 0x4200
    6d98:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    6d9c:	00200603 	eoreq	r0, r0, r3, lsl #12
    6da0:	06030402 	streq	r0, [r3], -r2, lsl #8
    6da4:	04020058 	streq	r0, [r2], #-88	; 0xffffffa8
    6da8:	02007403 	andeq	r7, r0, #50331648	; 0x3000000
    6dac:	00010304 	andeq	r0, r1, r4, lsl #6
    6db0:	01030402 	tsteq	r3, r2, lsl #8
    6db4:	01040200 	mrseq	r0, R12_usr
    6db8:	04020018 	streq	r0, [r2], #-24	; 0xffffffe8
    6dbc:	1e051701 	cdpne	7, 0, cr1, cr5, cr1, {0}
    6dc0:	01040200 	mrseq	r0, R12_usr
    6dc4:	39050106 	stmdbcc	r5, {r1, r2, r8}
    6dc8:	01040200 	mrseq	r0, R12_usr
    6dcc:	00170520 	andseq	r0, r7, r0, lsr #10
    6dd0:	3c010402 	cfstrscc	mvf0, [r1], {2}
    6dd4:	32061905 	andcc	r1, r6, #81920	; 0x14000
    6dd8:	01061b05 	tsteq	r6, r5, lsl #22
    6ddc:	22061d05 	andcs	r1, r6, #320	; 0x140
    6de0:	01063805 	tsteq	r6, r5, lsl #16
    6de4:	34061905 	strcc	r1, [r6], #-2309	; 0xfffff6fb
    6de8:	01062d05 	tsteq	r6, r5, lsl #26
    6dec:	02001505 	andeq	r1, r0, #20971520	; 0x1400000
    6df0:	03060104 	movweq	r0, #24836	; 0x6104
    6df4:	02004a68 	andeq	r4, r0, #104, 20	; 0x68000
    6df8:	3c060104 	stfccs	f0, [r6], {4}
    6dfc:	2e011906 	vmlacs.f16	s2, s2, s12	; <UNPREDICTABLE>
    6e00:	2e200101 	sufcss	f0, f0, f1
    6e04:	0620203c 			; <UNDEFINED> instruction: 0x0620203c
    6e08:	00100220 	andseq	r0, r0, r0, lsr #4
    6e0c:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    6e10:	00020500 	andeq	r0, r2, r0, lsl #10
    6e14:	03000000 	movweq	r0, #0
    6e18:	0100c0ab 	smlatbeq	r0, fp, r0, ip
    6e1c:	09050106 	stmdbeq	r5, {r1, r2, r8}
    6e20:	05132f06 	ldreq	r2, [r3, #-3846]	; 0xfffff0fa
    6e24:	4f051449 	svcmi	0x00051449
    6e28:	16090514 			; <UNDEFINED> instruction: 0x16090514
    6e2c:	01061105 	tsteq	r6, r5, lsl #2
    6e30:	02000905 	andeq	r0, r0, #81920	; 0x14000
    6e34:	30060404 	andcc	r0, r6, r4, lsl #8
    6e38:	02000d05 	andeq	r0, r0, #320	; 0x140
    6e3c:	05300404 	ldreq	r0, [r0, #-1028]!	; 0xfffffbfc
    6e40:	04020025 	streq	r0, [r2], #-37	; 0xffffffdb
    6e44:	05010604 	streq	r0, [r1, #-1540]	; 0xfffff9fc
    6e48:	0402000f 	streq	r0, [r2], #-15
    6e4c:	19054a04 	stmdbne	r5, {r2, r9, fp, lr}
    6e50:	06090535 			; <UNDEFINED> instruction: 0x06090535
    6e54:	303c0523 	eorscc	r0, ip, r3, lsr #10
    6e58:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    6e5c:	05130605 	ldreq	r0, [r3, #-1541]	; 0xfffff9fb
    6e60:	04020011 	streq	r0, [r2], #-17	; 0xffffffef
    6e64:	2e6d0301 	cdpcs	3, 6, cr0, cr13, cr1, {0}
    6e68:	01040200 	mrseq	r0, R12_usr
    6e6c:	0526062e 	streq	r0, [r6, #-1582]!	; 0xfffff9d2
    6e70:	20010638 	andcs	r0, r1, r8, lsr r6
    6e74:	3d061105 	stfccs	f1, [r6, #-20]	; 0xffffffec
    6e78:	01061905 	tsteq	r6, r5, lsl #18
    6e7c:	01000402 	tsteq	r0, r2, lsl #8
    6e80:	00050501 	andeq	r0, r5, r1, lsl #10
    6e84:	00000205 	andeq	r0, r0, r5, lsl #4
    6e88:	d2030000 	andle	r0, r3, #0
    6e8c:	060100c0 	streq	r0, [r1], -r0, asr #1
    6e90:	06090501 	streq	r0, [r9], -r1, lsl #10
    6e94:	5905133d 	stmdbpl	r5, {r0, r2, r3, r4, r5, r8, r9, ip}
    6e98:	144f0514 	strbne	r0, [pc], #-1300	; 6ea0 <__HEAP_SIZE+0x5ea0>
    6e9c:	05160905 	ldreq	r0, [r6, #-2309]	; 0xfffff6fb
    6ea0:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    6ea4:	04020009 	streq	r0, [r2], #-9
    6ea8:	05300604 	ldreq	r0, [r0, #-1540]!	; 0xfffff9fc
    6eac:	0402000d 	streq	r0, [r2], #-13
    6eb0:	16053204 	strne	r3, [r5], -r4, lsl #4
    6eb4:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    6eb8:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    6ebc:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    6ec0:	36055906 	strcc	r5, [r5], -r6, lsl #18
    6ec4:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    6ec8:	09050106 	stmdbeq	r5, {r1, r2, r8}
    6ecc:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    6ed0:	3e054c06 	cdpcc	12, 0, cr4, cr5, cr6, {0}
    6ed4:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    6ed8:	00090530 	andeq	r0, r9, r0, lsr r5
    6edc:	14040402 	strne	r0, [r4], #-1026	; 0xfffffbfe
    6ee0:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    6ee4:	13060404 	movwne	r0, #25604	; 0x6404
    6ee8:	02001105 	andeq	r1, r0, #1073741825	; 0x40000001
    6eec:	72030104 	andvc	r0, r3, #4, 2
    6ef0:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    6ef4:	04022e01 	streq	r2, [r2], #-3585	; 0xfffff1ff
    6ef8:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    6efc:	02050005 	andeq	r0, r5, #5
    6f00:	10002ed0 	ldrdne	r2, [r0], -r0
    6f04:	00c38a03 	sbceq	r8, r3, r3, lsl #20
    6f08:	13090501 	movwne	r0, #38145	; 0x9501
    6f0c:	1f051413 	svcne	0x00051413
    6f10:	09050106 	stmdbeq	r5, {r1, r2, r8}
    6f14:	21052f06 	tstcs	r5, r6, lsl #30
    6f18:	09050106 	stmdbeq	r5, {r1, r2, r8}
    6f1c:	1f052f06 	svcne	0x00052f06
    6f20:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    6f24:	0006022f 	andeq	r0, r6, pc, lsr #4
    6f28:	01050101 	tsteq	r5, r1, lsl #2
    6f2c:	e8020500 	stmda	r2, {r8, sl}
    6f30:	0310002e 	tsteq	r0, #46	; 0x2e
    6f34:	05011bb7 	streq	r1, [r1, #-2999]	; 0xfffff449
    6f38:	13132f05 	tstne	r3, #5, 30
    6f3c:	05141313 	ldreq	r1, [r4, #-787]	; 0xfffffced
    6f40:	0501061d 	streq	r0, [r1, #-1565]	; 0xfffff9e3
    6f44:	04020031 	streq	r0, [r2], #-49	; 0xffffffcf
    6f48:	05200601 	streq	r0, [r0, #-1537]!	; 0xfffff9ff
    6f4c:	04020005 	streq	r0, [r2], #-5
    6f50:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    6f54:	05300609 	ldreq	r0, [r0, #-1545]!	; 0xfffff9f7
    6f58:	0501063f 	streq	r0, [r1, #-1599]	; 0xfffff9c1
    6f5c:	09052e29 	stmdbeq	r5, {r0, r3, r5, r9, sl, fp, sp}
    6f60:	0b055d06 	bleq	15e380 <__RAM_SIZE+0x5e380>
    6f64:	25050106 	strcs	r0, [r5, #-262]	; 0xfffffefa
    6f68:	02040200 	andeq	r0, r4, #0, 4
    6f6c:	6e052606 	cfmadd32vs	mvax0, mvfx2, mvfx5, mvfx6
    6f70:	02040200 	andeq	r0, r4, #0, 4
    6f74:	05017303 	streq	r7, [r1, #-771]	; 0xfffffcfd
    6f78:	02000180 	andeq	r0, r0, #128, 2
    6f7c:	01060204 	tsteq	r6, r4, lsl #4
    6f80:	02040200 	andeq	r0, r4, #0, 4
    6f84:	001d0520 	andseq	r0, sp, r0, lsr #10
    6f88:	20010402 	andcs	r0, r1, r2, lsl #8
    6f8c:	02002605 	andeq	r2, r0, #5242880	; 0x500000
    6f90:	03060104 	movweq	r0, #24836	; 0x6104
    6f94:	05052012 	streq	r2, [r5, #-18]	; 0xffffffee
    6f98:	01040200 	mrseq	r0, R12_usr
    6f9c:	03060106 	movweq	r0, #24838	; 0x6106
    6fa0:	053c00fb 	ldreq	r0, [ip, #-251]!	; 0xffffff05
    6fa4:	05130601 	ldreq	r0, [r3, #-1537]	; 0xfffff9ff
    6fa8:	8803060d 	stmdahi	r3, {r0, r2, r3, r9, sl}
    6fac:	2f032e7f 	svccs	0x00032e7f
    6fb0:	061c0501 	ldreq	r0, [ip], -r1, lsl #10
    6fb4:	060d0501 	streq	r0, [sp], -r1, lsl #10
    6fb8:	061b052f 	ldreq	r0, [fp], -pc, lsr #10
    6fbc:	060d0501 	streq	r0, [sp], -r1, lsl #10
    6fc0:	18110521 	ldmdane	r1, {r0, r5, r8, sl}
    6fc4:	0e030d05 	cdpeq	13, 0, cr0, cr3, cr5, {0}
    6fc8:	062b0558 			; <UNDEFINED> instruction: 0x062b0558
    6fcc:	ac290501 	cfstr32ge	mvfx0, [r9], #-4
    6fd0:	44060d05 	strmi	r0, [r6], #-3333	; 0xfffff2fb
    6fd4:	01060f05 	tsteq	r6, r5, lsl #30
    6fd8:	06090520 	streq	r0, [r9], -r0, lsr #10
    6fdc:	05011603 	streq	r1, [r1, #-1539]	; 0xfffff9fd
    6fe0:	56051a29 	strpl	r1, [r5], -r9, lsr #20
    6fe4:	017f9103 	cmneq	pc, r3, lsl #2
    6fe8:	01065d05 	tsteq	r6, r5, lsl #26
    6fec:	06110520 	ldreq	r0, [r1], -r0, lsr #10
    6ff0:	2000d703 	andcs	sp, r0, r3, lsl #14
    6ff4:	09050106 	stmdbeq	r5, {r1, r2, r8}
    6ff8:	01100306 	tsteq	r0, r6, lsl #6
    6ffc:	03061905 	movweq	r1, #26885	; 0x6905
    7000:	08020170 	stmdaeq	r2, {r4, r5, r6, r8}
    7004:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    7008:	02050001 	andeq	r0, r5, #1
    700c:	10002f54 	andne	r2, r0, r4, asr pc
    7010:	011cd103 	tsteq	ip, r3, lsl #2
    7014:	05210505 	streq	r0, [r1, #-1285]!	; 0xfffffafb
    7018:	05051425 	streq	r1, [r5, #-1061]	; 0xfffffbdb
    701c:	05010a03 	streq	r0, [r1, #-2563]	; 0xfffff5fd
    7020:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    7024:	05320609 	ldreq	r0, [r2, #-1545]!	; 0xfffff9f7
    7028:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
    702c:	05340625 	ldreq	r0, [r4, #-1573]!	; 0xfffff9db
    7030:	07051705 	streq	r1, [r5, -r5, lsl #14]
    7034:	49050106 	stmdbmi	r5, {r1, r2, r8}
    7038:	2e3b0306 	cdpcs	3, 3, cr0, cr11, cr6, {0}
    703c:	16170505 	ldrne	r0, [r7], -r5, lsl #10
    7040:	05302605 	ldreq	r2, [r0, #-1541]!	; 0xfffff9fb
    7044:	05130601 	ldreq	r0, [r3, #-1537]	; 0xfffff9ff
    7048:	b003060d 	andlt	r0, r3, sp, lsl #12
    704c:	1705207f 	smlsdxne	r5, pc, r0, r2	; <UNPREDICTABLE>
    7050:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
    7054:	19030609 	stmdbne	r3, {r0, r3, r9, sl}
    7058:	2e0a0320 	cdpcs	3, 0, cr0, cr10, cr0, {1}
    705c:	01061e05 	tsteq	r6, r5, lsl #28
    7060:	4b060905 	blmi	18947c <__RAM_SIZE+0x8947c>
    7064:	01061b05 	tsteq	r6, r5, lsl #22
    7068:	3d060905 	vstrcc.16	s0, [r6, #-10]	; <UNPREDICTABLE>
    706c:	01061405 	tsteq	r6, r5, lsl #8
    7070:	44063105 	strmi	r3, [r6], #-261	; 0xfffffefb
    7074:	05142005 	ldreq	r2, [r4, #-5]
    7078:	12051909 	andne	r1, r5, #147456	; 0x24000
    707c:	0b020106 	bleq	8749c <__HEAP_SIZE+0x8649c>
    7080:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    7084:	02050005 	andeq	r0, r5, #5
    7088:	10002f9c 	mulne	r0, ip, pc	; <UNPREDICTABLE>
    708c:	00c3b303 	sbceq	fp, r3, r3, lsl #6
    7090:	13090501 	movwne	r0, #38145	; 0x9501
    7094:	20051413 	andcs	r1, r5, r3, lsl r4
    7098:	09050106 	stmdbeq	r5, {r1, r2, r8}
    709c:	22052f06 	andcs	r2, r5, #6, 30
    70a0:	09050106 	stmdbeq	r5, {r1, r2, r8}
    70a4:	20052f06 	andcs	r2, r5, r6, lsl #30
    70a8:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    70ac:	0006022f 	andeq	r0, r6, pc, lsr #4
    70b0:	01050101 	tsteq	r5, r1, lsl #2
    70b4:	00020500 	andeq	r0, r2, r0, lsl #10
    70b8:	03000000 	movweq	r0, #0
    70bc:	0100c3c5 	smlabteq	r0, r5, r3, ip
    70c0:	05130505 	ldreq	r0, [r3, #-1285]	; 0xfffffafb
    70c4:	16051709 	strne	r1, [r5], -r9, lsl #14
    70c8:	09050106 	stmdbeq	r5, {r1, r2, r8}
    70cc:	26054206 	strcs	r4, [r5], -r6, lsl #4
    70d0:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    70d4:	2e0b0306 	cdpcs	3, 0, cr0, cr11, cr6, {0}
    70d8:	01061c05 	tsteq	r6, r5, lsl #24
    70dc:	2f060505 	svccs	0x00060505
    70e0:	01061005 	tsteq	r6, r5
    70e4:	2f060505 	svccs	0x00060505
    70e8:	01061805 	tsteq	r6, r5, lsl #16
    70ec:	2f060505 	svccs	0x00060505
    70f0:	01061705 	tsteq	r6, r5, lsl #14
    70f4:	2f060505 	svccs	0x00060505
    70f8:	01061205 	tsteq	r6, r5, lsl #4
    70fc:	30060505 	andcc	r0, r6, r5, lsl #10
    7100:	02001705 	andeq	r1, r0, #1310720	; 0x140000
    7104:	05010104 	streq	r0, [r1, #-260]	; 0xfffffefc
    7108:	04020005 	streq	r0, [r2], #-5
    710c:	06010601 	streq	r0, [r1], -r1, lsl #12
    7110:	06150533 			; <UNDEFINED> instruction: 0x06150533
    7114:	05052001 	streq	r2, [r5, #-1]
    7118:	12052f06 	andne	r2, r5, #6, 30
    711c:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    7120:	1a052f06 	bne	152d40 <__RAM_SIZE+0x52d40>
    7124:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    7128:	1a053006 	bne	153148 <__RAM_SIZE+0x53148>
    712c:	01050106 	tsteq	r5, r6, lsl #2
    7130:	052e0b03 	streq	r0, [lr, #-2819]!	; 0xfffff4fd
    7134:	04020009 	streq	r0, [r2], #-9
    7138:	6e030603 	cfmadd32vs	mvax0, mvfx0, mvfx3, mvfx3
    713c:	00230520 	eoreq	r0, r3, r0, lsr #10
    7140:	06030402 	streq	r0, [r3], -r2, lsl #8
    7144:	00380501 	eorseq	r0, r8, r1, lsl #10
    7148:	06030402 	streq	r0, [r3], -r2, lsl #8
    714c:	003f0548 	eorseq	r0, pc, r8, asr #10
    7150:	06030402 	streq	r0, [r3], -r2, lsl #8
    7154:	04020001 	streq	r0, [r2], #-1
    7158:	1a022003 	bne	8f16c <__HEAP_SIZE+0x8e16c>
    715c:	d4010100 	strle	r0, [r1], #-256	; 0xffffff00
    7160:	0300000b 	movweq	r0, #11
    7164:	00024800 	andeq	r4, r2, r0, lsl #16
    7168:	fb010200 	blx	47972 <__HEAP_SIZE+0x46972>
    716c:	01000d0e 	tsteq	r0, lr, lsl #26
    7170:	00010101 	andeq	r0, r1, r1, lsl #2
    7174:	00010000 	andeq	r0, r1, r0
    7178:	2e2e0100 	sufcse	f0, f6, f0
    717c:	2f2e2e2f 	svccs	0x002e2e2f
    7180:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 70d0 <__HEAP_SIZE+0x60d0>
    7184:	74726269 	ldrbtvc	r6, [r2], #-617	; 0xfffffd97
    7188:	462f736f 	strtmi	r7, [pc], -pc, ror #6
    718c:	52656572 	rsbpl	r6, r5, #478150656	; 0x1c800000
    7190:	00534f54 	subseq	r4, r3, r4, asr pc
    7194:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
    7198:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    719c:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
    71a0:	705c6e6f 	subsvc	r6, ip, pc, ror #28
    71a4:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
    71a8:	615c6d61 	cmpvs	ip, r1, ror #26
    71ac:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
    71b0:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
    71b4:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
    71b8:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    71bc:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    71c0:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    71c4:	2e30312d 	rsfcssp	f3, f0, #5.0
    71c8:	30322d33 	eorscc	r2, r2, r3, lsr sp
    71cc:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
    71d0:	696c5c30 	stmdbvs	ip!, {r4, r5, sl, fp, ip, lr}^
    71d4:	63675c62 	cmnvs	r7, #25088	; 0x6200
    71d8:	72615c63 	rsbvc	r5, r1, #25344	; 0x6300
    71dc:	6f6e2d6d 	svcvs	0x006e2d6d
    71e0:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    71e4:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
    71e8:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
    71ec:	695c312e 	ldmdbvs	ip, {r1, r2, r3, r5, r8, ip, sp}^
    71f0:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    71f4:	63006564 	movwvs	r6, #1380	; 0x564
    71f8:	73755c3a 	cmnvc	r5, #14848	; 0x3a00
    71fc:	5c737265 	lfmpl	f7, 2, [r3], #-404	; 0xfffffe6c
    7200:	6f646978 	svcvs	0x00646978
    7204:	72705c6e 	rsbsvc	r5, r0, #28160	; 0x6e00
    7208:	6172676f 	cmnvs	r2, pc, ror #14
    720c:	72615c6d 	rsbvc	r5, r1, #27904	; 0x6d00
    7210:	63675f6d 	cmnvs	r7, #436	; 0x1b4
    7214:	63675c63 	cmnvs	r7, #25344	; 0x6300
    7218:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
    721c:	6f6e2d6d 	svcvs	0x006e2d6d
    7220:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    7224:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
    7228:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
    722c:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
    7230:	30312e31 	eorscc	r2, r1, r1, lsr lr
    7234:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    7238:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    723c:	61652d65 	cmnvs	r5, r5, ror #26
    7240:	695c6962 	ldmdbvs	ip, {r1, r5, r6, r8, fp, sp, lr}^
    7244:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    7248:	6d5c6564 	cfldr64vs	mvdx6, [ip, #-400]	; 0xfffffe70
    724c:	69686361 	stmdbvs	r8!, {r0, r5, r6, r8, r9, sp, lr}^
    7250:	6300656e 	movwvs	r6, #1390	; 0x56e
    7254:	73755c3a 	cmnvc	r5, #14848	; 0x3a00
    7258:	5c737265 	lfmpl	f7, 2, [r3], #-404	; 0xfffffe6c
    725c:	6f646978 	svcvs	0x00646978
    7260:	72705c6e 	rsbsvc	r5, r0, #28160	; 0x6e00
    7264:	6172676f 	cmnvs	r2, pc, ror #14
    7268:	72615c6d 	rsbvc	r5, r1, #27904	; 0x6d00
    726c:	63675f6d 	cmnvs	r7, #436	; 0x1b4
    7270:	63675c63 	cmnvs	r7, #25344	; 0x6300
    7274:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
    7278:	6f6e2d6d 	svcvs	0x006e2d6d
    727c:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    7280:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
    7284:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
    7288:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
    728c:	30312e31 	eorscc	r2, r1, r1, lsr lr
    7290:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    7294:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    7298:	61652d65 	cmnvs	r5, r5, ror #26
    729c:	695c6962 	ldmdbvs	ip, {r1, r5, r6, r8, fp, sp, lr}^
    72a0:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    72a4:	735c6564 	cmpvc	ip, #100, 10	; 0x19000000
    72a8:	2e007379 	mcrcs	3, 0, r7, cr0, cr9, {3}
    72ac:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    72b0:	2f2e2e2f 	svccs	0x002e2e2f
    72b4:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
    72b8:	2f736f74 	svccs	0x00736f74
    72bc:	65657246 	strbvs	r7, [r5, #-582]!	; 0xfffffdba
    72c0:	534f5452 	movtpl	r5, #62546	; 0xf452
    72c4:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    72c8:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    72cc:	2f2e2e00 	svccs	0x002e2e00
    72d0:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    72d4:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    72d8:	6f747262 	svcvs	0x00747262
    72dc:	72462f73 	subvc	r2, r6, #460	; 0x1cc
    72e0:	54526565 	ldrbpl	r6, [r2], #-1381	; 0xfffffa9b
    72e4:	702f534f 	eorvc	r5, pc, pc, asr #6
    72e8:	6174726f 	cmnvs	r4, pc, ror #4
    72ec:	2f656c62 	svccs	0x00656c62
    72f0:	2f434347 	svccs	0x00434347
    72f4:	5f4d5241 	svcpl	0x004d5241
    72f8:	33334d43 	teqcc	r3, #4288	; 0x10c0
    72fc:	5a544e5f 	bpl	151ac80 <__RAM_SIZE+0x141ac80>
    7300:	6e6f6e2f 	cdpvs	14, 6, cr6, cr15, cr15, {1}
    7304:	6365735f 	cmnvs	r5, #2080374785	; 0x7c000001
    7308:	00657275 	rsbeq	r7, r5, r5, ror r2
    730c:	6d697400 	cfstrdvs	mvd7, [r9, #-0]
    7310:	2e737265 	cdpcs	2, 7, cr7, cr3, cr5, {3}
    7314:	00010063 	andeq	r0, r1, r3, rrx
    7318:	64747300 	ldrbtvs	r7, [r4], #-768	; 0xfffffd00
    731c:	2e666564 	cdpcs	5, 6, cr6, cr6, cr4, {3}
    7320:	00020068 	andeq	r0, r2, r8, rrx
    7324:	65645f00 	strbvs	r5, [r4, #-3840]!	; 0xfffff100
    7328:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
    732c:	79745f74 	ldmdbvc	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    7330:	2e736570 	mrccs	5, 3, r6, cr3, cr0, {3}
    7334:	00030068 	andeq	r0, r3, r8, rrx
    7338:	74735f00 	ldrbtvc	r5, [r3], #-3840	; 0xfffff100
    733c:	746e6964 	strbtvc	r6, [lr], #-2404	; 0xfffff69c
    7340:	0400682e 	streq	r6, [r0], #-2094	; 0xfffff7d2
    7344:	72700000 	rsbsvc	r0, r0, #0
    7348:	65646a6f 	strbvs	r6, [r4, #-2671]!	; 0xfffff591
    734c:	682e7366 	stmdavs	lr!, {r1, r2, r5, r6, r8, r9, ip, sp, lr}
    7350:	00000500 	andeq	r0, r0, r0, lsl #10
    7354:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
    7358:	7263616d 	rsbvc	r6, r3, #1073741851	; 0x4000001b
    735c:	6d6f636f 	stclvs	3, cr6, [pc, #-444]!	; 71a8 <__HEAP_SIZE+0x61a8>
    7360:	2e6e6f6d 	cdpcs	15, 6, cr6, cr14, cr13, {3}
    7364:	00060068 	andeq	r0, r6, r8, rrx
    7368:	65724600 	ldrbvs	r4, [r2, #-1536]!	; 0xfffffa00
    736c:	4f545265 	svcmi	0x00545265
    7370:	00682e53 	rsbeq	r2, r8, r3, asr lr
    7374:	6c000005 	stcvs	0, cr0, [r0], {5}
    7378:	2e747369 	cdpcs	3, 7, cr7, cr4, cr9, {3}
    737c:	00050068 	andeq	r0, r5, r8, rrx
    7380:	73617400 	cmnvc	r1, #0, 8
    7384:	00682e6b 	rsbeq	r2, r8, fp, ror #28
    7388:	71000005 	tstvc	r0, r5
    738c:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
    7390:	0500682e 	streq	r6, [r0, #-2094]	; 0xfffff7d2
    7394:	69740000 	ldmdbvs	r4!, {}^	; <UNPREDICTABLE>
    7398:	7372656d 	cmnvc	r2, #457179136	; 0x1b400000
    739c:	0500682e 	streq	r6, [r0, #-2094]	; 0xfffff7d2
    73a0:	6f700000 	svcvs	0x00700000
    73a4:	62617472 	rsbvs	r7, r1, #1912602624	; 0x72000000
    73a8:	682e656c 	stmdavs	lr!, {r2, r3, r5, r6, r8, sl, sp, lr}
    73ac:	00000500 	andeq	r0, r0, r0, lsl #10
    73b0:	00050500 	andeq	r0, r5, r0, lsl #10
    73b4:	2fb40205 	svccs	0x00b40205
    73b8:	cc031000 	stcgt	0, cr1, [r3], {-0}
    73bc:	09050106 	stmdbeq	r5, {r1, r2, r8}
    73c0:	01090313 	tsteq	r9, r3, lsl r3
    73c4:	01061b05 	tsteq	r6, r5, lsl #22
    73c8:	02001905 	andeq	r1, r0, #81920	; 0x14000
    73cc:	05580404 	ldrbeq	r0, [r8, #-1028]	; 0xfffffbfc
    73d0:	04020009 	streq	r0, [r2], #-9
    73d4:	05220604 	streq	r0, [r2, #-1540]!	; 0xfffff9fc
    73d8:	0402000b 	streq	r0, [r2], #-11
    73dc:	05010604 	streq	r0, [r1, #-1540]	; 0xfffff9fc
    73e0:	0522060d 	streq	r0, [r2, #-1549]!	; 0xfffff9f3
    73e4:	0501061f 	streq	r0, [r1, #-1567]	; 0xfffff9e1
    73e8:	0520201d 	streq	r2, [r0, #-29]!	; 0xffffffe3
    73ec:	1d051c1b 	stcne	12, cr1, [r5, #-108]	; 0xffffff94
    73f0:	052e0903 	streq	r0, [lr, #-2307]!	; 0xfffff6fd
    73f4:	05230609 	streq	r0, [r3, #-1545]!	; 0xfffff9f7
    73f8:	02130605 	andseq	r0, r3, #5242880	; 0x500000
    73fc:	01010003 	tsteq	r1, r3
    7400:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    7404:	002fd402 	eoreq	sp, pc, r2, lsl #8
    7408:	07810310 	usada8eq	r1, r0, r3, r0
    740c:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    7410:	14210609 	strtne	r0, [r1], #-1545	; 0xfffff9f7
    7414:	0b052221 	bleq	14fca0 <__RAM_SIZE+0x4fca0>
    7418:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    741c:	13053206 	movwne	r3, #20998	; 0x5206
    7420:	4a050106 	bmi	147840 <__RAM_SIZE+0x47840>
    7424:	200f0520 	andcs	r0, pc, r0, lsr #10
    7428:	05322205 	ldreq	r2, [r2, #-517]!	; 0xfffffdfb
    742c:	20170305 	andscs	r0, r7, r5, lsl #6
    7430:	03061105 	movweq	r1, #24837	; 0x6105
    7434:	2006206d 	andcs	r2, r6, sp, rrx
    7438:	0314052e 	tsteq	r4, #192937984	; 0xb800000
    743c:	0d052e6f 	stceq	14, cr2, [r5, #-444]	; 0xfffffe44
    7440:	2e160306 	cdpcs	3, 1, cr0, cr6, cr6, {0}
    7444:	01060f05 	tsteq	r6, r5, lsl #30
    7448:	02002d05 	andeq	r2, r0, #320	; 0x140
    744c:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
    7450:	09030611 	stmdbeq	r3, {r0, r4, r9, sl}
    7454:	2020062e 	eorcs	r0, r0, lr, lsr #12
    7458:	03140520 	tsteq	r4, #32, 10	; 0x8000000
    745c:	22052e61 	andcs	r2, r5, #1552	; 0x610
    7460:	052e1b03 	streq	r1, [lr, #-2819]!	; 0xfffff4fd
    7464:	05280609 	streq	r0, [r8, #-1545]!	; 0xfffff9f7
    7468:	02010610 	andeq	r0, r1, #16, 12	; 0x1000000
    746c:	01010006 	tsteq	r1, r6
    7470:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    7474:	00301c02 	eorseq	r1, r0, r2, lsl #24
    7478:	05bd0310 	ldreq	r0, [sp, #784]!	; 0x310
    747c:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    7480:	054e0609 	strbeq	r0, [lr, #-1545]	; 0xfffff9f7
    7484:	0501060e 	streq	r0, [r1, #-1550]	; 0xfffff9f2
    7488:	0523060d 	streq	r0, [r3, #-1549]!	; 0xfffff9f3
    748c:	05010624 	streq	r0, [r1, #-1572]	; 0xfffff9dc
    7490:	2a05201a 	bcs	14f500 <__RAM_SIZE+0x4f500>
    7494:	0d052306 	stceq	3, cr2, [r5, #-24]	; 0xffffffe8
    7498:	06140513 			; <UNDEFINED> instruction: 0x06140513
    749c:	200d0501 	andcs	r0, sp, r1, lsl #10
    74a0:	03060e05 	movweq	r0, #28165	; 0x6e05
    74a4:	4d052e79 	stcmi	14, cr2, [r5, #-484]	; 0xfffffe1c
    74a8:	10050106 	andne	r0, r5, r6, lsl #2
    74ac:	660e0520 	strvs	r0, [lr], -r0, lsr #10
    74b0:	09030505 	stmdbeq	r3, {r0, r2, r8, sl}
    74b4:	0100202e 	tsteq	r0, lr, lsr #32
    74b8:	00050501 	andeq	r0, r5, r1, lsl #10
    74bc:	30440205 	subcc	r0, r4, r5, lsl #4
    74c0:	cf031000 	svcgt	0x00031000
    74c4:	01060105 	tsteq	r6, r5, lsl #2
    74c8:	40060905 	andmi	r0, r6, r5, lsl #18
    74cc:	01063105 	tsteq	r6, r5, lsl #2
    74d0:	053c1905 	ldreq	r1, [ip, #-2309]!	; 0xfffff6fb
    74d4:	05250609 	streq	r0, [r5, #-1545]!	; 0xfffff9f7
    74d8:	20010612 	andcs	r0, r1, r2, lsl r6
    74dc:	32060905 	andcc	r0, r6, #81920	; 0x14000
    74e0:	01061605 	tsteq	r6, r5, lsl #12
    74e4:	052e0b05 	streq	r0, [lr, #-2821]!	; 0xfffff4fb
    74e8:	0542060d 	strbeq	r0, [r2, #-1549]	; 0xfffff9f3
    74ec:	0501061f 	streq	r0, [r1, #-1567]	; 0xfffff9e1
    74f0:	054e0626 	strbeq	r0, [lr, #-1574]	; 0xfffff9da
    74f4:	10051309 	andne	r1, r5, r9, lsl #6
    74f8:	09050106 	stmdbeq	r5, {r1, r2, r8}
    74fc:	2f050520 	svccs	0x00050520
    7500:	03060d05 	movweq	r0, #27909	; 0x6d05
    7504:	09022076 	stmdbeq	r2, {r1, r2, r4, r5, r6, sp}
    7508:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    750c:	02050005 	andeq	r0, r5, #5
    7510:	10003084 	andne	r3, r0, r4, lsl #1
    7514:	0108be03 	tsteq	r8, r3, lsl #28
    7518:	13210905 			; <UNDEFINED> instruction: 0x13210905
    751c:	060e0518 			; <UNDEFINED> instruction: 0x060e0518
    7520:	060d0501 	streq	r0, [sp], -r1, lsl #10
    7524:	061f0522 	ldreq	r0, [pc], -r2, lsr #10
    7528:	060d0501 	streq	r0, [sp], -r1, lsl #10
    752c:	030e0525 	movweq	r0, #58661	; 0xe525
    7530:	10055879 	andne	r5, r5, r9, ror r8
    7534:	0e050106 	adfeqs	f0, f5, f6
    7538:	0609053c 			; <UNDEFINED> instruction: 0x0609053c
    753c:	132e0a03 			; <UNDEFINED> instruction: 0x132e0a03
    7540:	01061c05 	tsteq	r6, r5, lsl #24
    7544:	4b060905 	blmi	189960 <__RAM_SIZE+0x89960>
    7548:	01061d05 	tsteq	r6, r5, lsl #26
    754c:	20210505 	eorcs	r0, r1, r5, lsl #10
    7550:	01000502 	tsteq	r0, r2, lsl #10
    7554:	00050501 	andeq	r0, r5, r1, lsl #10
    7558:	30b40205 	adcscc	r0, r4, r5, lsl #4
    755c:	e7031000 	str	r1, [r3, -r0]
    7560:	01060106 	tsteq	r6, r6, lsl #2
    7564:	2f060905 	svccs	0x00060905
    7568:	05131905 	ldreq	r1, [r3, #-2309]	; 0xfffff6fb
    756c:	14051409 	strne	r1, [r5], #-1033	; 0xfffffbf7
    7570:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
    7574:	05220609 	streq	r0, [r2, #-1545]!	; 0xfffff9f7
    7578:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    757c:	0d052e0b 	stceq	14, cr2, [r5, #-44]	; 0xffffffd4
    7580:	27053506 	strcs	r3, [r5, -r6, lsl #10]
    7584:	09050106 	stmdbeq	r5, {r1, r2, r8}
    7588:	13053106 	movwne	r3, #20742	; 0x5106
    758c:	09050106 	stmdbeq	r5, {r1, r2, r8}
    7590:	05053006 	streq	r3, [r5, #-6]
    7594:	0d051306 	stceq	3, cr1, [r5, #-24]	; 0xffffffe8
    7598:	2e750306 	cdpcs	3, 7, cr0, cr5, cr6, {0}
    759c:	0627052f 	strteq	r0, [r7], -pc, lsr #10
    75a0:	00050201 	andeq	r0, r5, r1, lsl #4
    75a4:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    75a8:	e0020500 	and	r0, r2, r0, lsl #10
    75ac:	03100030 	tsteq	r0, #48	; 0x30
    75b0:	0601068f 	streq	r0, [r1], -pc, lsl #13
    75b4:	06090501 	streq	r0, [r9], -r1, lsl #10
    75b8:	0514134b 	ldreq	r1, [r4, #-843]	; 0xfffffcb5
    75bc:	1805350d 	stmdane	r5, {r0, r2, r3, r8, sl, ip, sp}
    75c0:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    75c4:	29053e06 	stmdbcs	r5, {r1, r2, r9, sl, fp, ip, sp}
    75c8:	0f050106 	svceq	0x00050106
    75cc:	06110520 	ldreq	r0, [r1], -r0, lsr #10
    75d0:	06130531 			; <UNDEFINED> instruction: 0x06130531
    75d4:	00320501 	eorseq	r0, r2, r1, lsl #10
    75d8:	20010402 	andcs	r0, r1, r2, lsl #8
    75dc:	03061505 	movweq	r1, #25861	; 0x6505
    75e0:	17052e0d 	strne	r2, [r5, -sp, lsl #28]
    75e4:	19050106 	stmdbne	r5, {r1, r2, r8}
    75e8:	29052406 	stmdbcs	r5, {r1, r2, sl, sp}
    75ec:	15050106 	strne	r0, [r5, #-262]	; 0xfffffefa
    75f0:	4a065b06 	bmi	19e210 <__RAM_SIZE+0x9e210>
    75f4:	19053006 	stmdbne	r5, {r1, r2, ip, sp}
    75f8:	17050106 	strne	r0, [r5, -r6, lsl #2]
    75fc:	0305052e 	movweq	r0, #21806	; 0x552e
    7600:	15052013 	strne	r2, [r5, #-19]	; 0xffffffed
    7604:	2e590306 	cdpcs	3, 5, cr0, cr9, cr6, {0}
    7608:	01061e05 	tsteq	r6, r5, lsl #28
    760c:	2f061505 	svccs	0x00061505
    7610:	03062905 	movweq	r2, #26885	; 0x6905
    7614:	0520580e 	streq	r5, [r0, #-2062]!	; 0xfffff7f2
    7618:	0b030619 	bleq	c8e84 <__HEAP_SIZE+0xc7e84>
    761c:	03110520 	tsteq	r1, #32, 10	; 0x8000000
    7620:	1a053c0a 	bne	156650 <__RAM_SIZE+0x56650>
    7624:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    7628:	00060231 	andeq	r0, r6, r1, lsr r2
    762c:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    7630:	48020500 	stmdami	r2, {r8, sl}
    7634:	03100031 	tsteq	r0, #49	; 0x31
    7638:	050107aa 	streq	r0, [r1, #-1962]	; 0xfffff856
    763c:	1d052f09 	stcne	15, cr2, [r5, #-36]	; 0xffffffdc
    7640:	09050106 	stmdbeq	r5, {r1, r2, r8}
    7644:	13135906 	tstne	r3, #98304	; 0x18000
    7648:	060e0514 			; <UNDEFINED> instruction: 0x060e0514
    764c:	062d0501 	strteq	r0, [sp], -r1, lsl #10
    7650:	05201303 	streq	r1, [r0, #-771]!	; 0xfffffcfd
    7654:	1905190d 	stmdbne	r5, {r0, r2, r3, r8, fp, ip}
    7658:	0f050106 	svceq	0x00050106
    765c:	060e0520 	streq	r0, [lr], -r0, lsr #10
    7660:	052e6603 	streq	r6, [lr, #-1539]!	; 0xfffff9fd
    7664:	05010610 	streq	r0, [r1, #-1552]	; 0xfffff9f0
    7668:	1105660e 	tstne	r5, lr, lsl #12
    766c:	1d053406 	cfstrsne	mvf3, [r5, #-24]	; 0xffffffe8
    7670:	13050106 	movwne	r0, #20742	; 0x5106
    7674:	06150520 	ldreq	r0, [r5], -r0, lsr #10
    7678:	162f0530 			; <UNDEFINED> instruction: 0x162f0530
    767c:	05151505 	ldreq	r1, [r5, #-1285]	; 0xfffffafb
    7680:	580f0311 	stmdapl	pc, {r0, r4, r8, r9}	; <UNPREDICTABLE>
    7684:	01061905 	tsteq	r6, r5, lsl #18
    7688:	22061105 	andcs	r1, r6, #1073741825	; 0x40000001
    768c:	01061505 	tsteq	r6, r5, lsl #10
    7690:	05201305 	streq	r1, [r0, #-773]!	; 0xfffffcfb
    7694:	05230615 	streq	r0, [r3, #-1557]!	; 0xfffff9eb
    7698:	0501061e 	streq	r0, [r1, #-1566]	; 0xfffff9e2
    769c:	0540062d 	strbeq	r0, [r0, #-1581]	; 0xfffff9d3
    76a0:	11051577 	tstne	r5, r7, ror r5
    76a4:	061c051a 			; <UNDEFINED> instruction: 0x061c051a
    76a8:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    76ac:	0621054c 	strteq	r0, [r1], -ip, asr #10
    76b0:	20110501 	andscs	r0, r1, r1, lsl #10
    76b4:	a5061905 	strge	r1, [r6, #-2309]	; 0xfffff6fb
    76b8:	01062b05 	tsteq	r6, r5, lsl #22
    76bc:	68061905 	stmdavs	r6, {r0, r2, r8, fp, ip}
    76c0:	01065d05 	tsteq	r6, r5, lsl #26
    76c4:	05207505 	streq	r7, [r0, #-1285]!	; 0xfffffafb
    76c8:	053c201d 	ldreq	r2, [ip, #-29]!	; 0xffffffe3
    76cc:	1d052e1b 	stcne	14, cr2, [r5, #-108]	; 0xffffff94
    76d0:	2a053206 	bcs	153ef0 <__RAM_SIZE+0x53ef0>
    76d4:	1f050106 	svcne	0x00050106
    76d8:	0621052e 	strteq	r0, [r1], -lr, lsr #10
    76dc:	06330542 	ldrteq	r0, [r3], -r2, asr #10
    76e0:	063a0501 	ldrteq	r0, [sl], -r1, lsl #10
    76e4:	131d054e 	tstne	sp, #327155712	; 0x13800000
    76e8:	01062405 	tsteq	r6, r5, lsl #8
    76ec:	05201d05 	streq	r1, [r0, #-3333]!	; 0xfffff2fb
    76f0:	77030621 	strvc	r0, [r3, -r1, lsr #12]
    76f4:	066d053c 			; <UNDEFINED> instruction: 0x066d053c
    76f8:	20210501 	eorcs	r0, r1, r1, lsl #10
    76fc:	03061905 	movweq	r1, #26885	; 0x6905
    7700:	2b057415 	blcs	16475c <__RAM_SIZE+0x6475c>
    7704:	19050106 	stmdbne	r5, {r1, r2, r8}
    7708:	05246706 	streq	r6, [r4, #-1798]!	; 0xfffff8fa
    770c:	0501062b 	streq	r0, [r1, #-1579]	; 0xfffff9d5
    7710:	05670619 	strbeq	r0, [r7, #-1561]!	; 0xfffff9e7
    7714:	05010653 	streq	r0, [r1, #-1619]	; 0xfffff9ad
    7718:	4d052036 	stcmi	0, cr2, [r5, #-216]	; 0xffffff28
    771c:	19052106 	stmdbne	r5, {r1, r2, r8, sp}
    7720:	0622051a 			; <UNDEFINED> instruction: 0x0622051a
    7724:	19054a01 	stmdbne	r5, {r0, r9, fp, lr}
    7728:	1d052f06 	stcne	15, cr2, [r5, #-24]	; 0xffffffe8
    772c:	062a0528 	strteq	r0, [sl], -r8, lsr #10
    7730:	2e1f0501 	cfmul32cs	mvfx0, mvfx15, mvfx1
    7734:	42062105 	andmi	r2, r6, #1073741825	; 0x40000001
    7738:	01063305 	tsteq	r6, r5, lsl #6
    773c:	54062105 	strpl	r2, [r6], #-261	; 0xfffffefb
    7740:	05052006 	streq	r2, [r5, #-6]
    7744:	023c1803 	eorseq	r1, ip, #196608	; 0x30000
    7748:	01010004 	tsteq	r1, r4
    774c:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    7750:	00324002 	eorseq	r4, r2, r2
    7754:	05ec0310 	strbeq	r0, [ip, #784]!	; 0x310
    7758:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    775c:	04020009 	streq	r0, [r2], #-9
    7760:	002f0601 	eoreq	r0, pc, r1, lsl #12
    7764:	13010402 	movwne	r0, #5122	; 0x1402
    7768:	01040200 	mrseq	r0, R12_usr
    776c:	04020015 	streq	r0, [r2], #-21	; 0xffffffeb
    7770:	010c0301 	tsteq	ip, r1, lsl #6
    7774:	02000d05 	andeq	r0, r0, #320	; 0x140
    7778:	05160104 	ldreq	r0, [r6, #-260]	; 0xfffffefc
    777c:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    7780:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    7784:	0402000d 	streq	r0, [r2], #-13
    7788:	00400601 	subeq	r0, r0, r1, lsl #12
    778c:	3f010402 	svccc	0x00010402
    7790:	02002d05 	andeq	r2, r0, #320	; 0x140
    7794:	75030104 	strvc	r0, [r3, #-260]	; 0xfffffefc
    7798:	0001022e 	andeq	r0, r1, lr, lsr #4
    779c:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    77a0:	58020500 	stmdapl	r2, {r8, sl}
    77a4:	03100032 	tsteq	r0, #50	; 0x32
    77a8:	050108d7 	streq	r0, [r1, #-2263]	; 0xfffff729
    77ac:	0d053209 	sfmeq	f3, 4, [r5, #-36]	; 0xffffffdc
    77b0:	061d0530 			; <UNDEFINED> instruction: 0x061d0530
    77b4:	2e0f0501 	cfsh32cs	mvfx0, mvfx15, #1
    77b8:	03062905 	movweq	r2, #26885	; 0x6905
    77bc:	09052025 	stmdbeq	r5, {r0, r2, r5, sp}
    77c0:	06050515 			; <UNDEFINED> instruction: 0x06050515
    77c4:	0611052f 	ldreq	r0, [r1], -pc, lsr #10
    77c8:	4b2e5903 	blmi	b9dbdc <__RAM_SIZE+0xa9dbdc>
    77cc:	0624054b 	strteq	r0, [r4], -fp, asr #10
    77d0:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    77d4:	0625052f 	strteq	r0, [r5], -pc, lsr #10
    77d8:	13340601 	teqne	r4, #1048576	; 0x100000
    77dc:	05141505 	ldreq	r1, [r4, #-1285]	; 0xfffffafb
    77e0:	05010623 	streq	r0, [r1, #-1571]	; 0xfffff9dd
    77e4:	00088221 	andeq	r8, r8, r1, lsr #4
    77e8:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    77ec:	00020500 	andeq	r0, r2, r0, lsl #10
    77f0:	03000000 	movweq	r0, #0
    77f4:	060103a6 	streq	r0, [r1], -r6, lsr #7
    77f8:	06340501 	ldrteq	r0, [r4], -r1, lsl #10
    77fc:	16090576 			; <UNDEFINED> instruction: 0x16090576
    7800:	06210532 			; <UNDEFINED> instruction: 0x06210532
    7804:	06090501 	streq	r0, [r9], -r1, lsl #10
    7808:	0629052f 	strteq	r0, [r9], -pc, lsr #10
    780c:	06090501 	streq	r0, [r9], -r1, lsl #10
    7810:	061f0521 	ldreq	r0, [pc], -r1, lsr #10
    7814:	06090501 	streq	r0, [r9], -r1, lsl #10
    7818:	06280521 	strteq	r0, [r8], -r1, lsr #10
    781c:	06090501 	streq	r0, [r9], -r1, lsl #10
    7820:	0b053e2f 	bleq	1570e4 <__RAM_SIZE+0x570e4>
    7824:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    7828:	22052206 	andcs	r2, r5, #1610612736	; 0x60000000
    782c:	28050106 	stmdacs	r5, {r1, r2, r8}
    7830:	05056906 	streq	r6, [r5, #-2310]	; 0xfffff6fa
    7834:	002e1306 	eoreq	r1, lr, r6, lsl #6
    7838:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    783c:	b8020500 	stmdalt	r2, {r8, sl}
    7840:	03100032 	tsteq	r0, #50	; 0x32
    7844:	050101ed 	streq	r0, [r1, #-493]	; 0xfffffe13
    7848:	2b052f09 	blcs	153474 <__RAM_SIZE+0x53474>
    784c:	18090514 	stmdane	r9, {r2, r4, r8, sl}
    7850:	06190530 			; <UNDEFINED> instruction: 0x06190530
    7854:	2e0b0501 	cfsh32cs	mvfx0, mvfx11, #1
    7858:	03061505 	movweq	r1, #25861	; 0x6505
    785c:	24052029 	strcs	r2, [r5], #-41	; 0xffffffd7
    7860:	15050106 	strne	r0, [r5, #-262]	; 0xfffffefa
    7864:	23052f06 	movwcs	r2, #24326	; 0x5f06
    7868:	15050106 	strne	r0, [r5, #-262]	; 0xfffffefa
    786c:	59142106 	ldmdbpl	r4, {r1, r2, r8, sp}
    7870:	01062805 	tsteq	r6, r5, lsl #16
    7874:	05ba2605 	ldreq	r2, [sl, #1541]!	; 0x605
    7878:	05360615 	ldreq	r0, [r6, #-1557]!	; 0xfffff9eb
    787c:	05010617 	streq	r0, [r1, #-1559]	; 0xfffff9e9
    7880:	20202221 	eorcs	r2, r0, r1, lsr #4
    7884:	be031405 	cdplt	4, 0, cr1, cr3, cr5, {0}
    7888:	2505017f 	strcs	r0, [r5, #-383]	; 0xfffffe81
    788c:	00d40306 	sbcseq	r0, r4, r6, lsl #6
    7890:	1520053c 	strne	r0, [r0, #-1340]!	; 0xfffffac4
    7894:	05143505 	ldreq	r3, [r4, #-1285]	; 0xfffffafb
    7898:	05051409 	streq	r1, [r5, #-1033]	; 0xfffffbf7
    789c:	0b021306 	bleq	8c4bc <__HEAP_SIZE+0x8b4bc>
    78a0:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    78a4:	02050009 	andeq	r0, r5, #9
    78a8:	00000000 	andeq	r0, r0, r0
    78ac:	0102d403 	tsteq	r2, r3, lsl #8
    78b0:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    78b4:	74057506 	strvc	r7, [r5], #-1286	; 0xfffffafa
    78b8:	170d0514 	smladne	sp, r4, r5, r0
    78bc:	01062805 	tsteq	r6, r5, lsl #16
    78c0:	060d0520 	streq	r0, [sp], -r0, lsr #10
    78c4:	060f0530 			; <UNDEFINED> instruction: 0x060f0530
    78c8:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    78cc:	06260533 			; <UNDEFINED> instruction: 0x06260533
    78d0:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    78d4:	0574063d 	ldrbeq	r0, [r4, #-1597]!	; 0xfffff9c3
    78d8:	05310633 	ldreq	r0, [r1, #-1587]!	; 0xfffff9cd
    78dc:	0905140d 	stmdbeq	r5, {r0, r2, r3, sl, ip}
    78e0:	004a1306 	subeq	r1, sl, r6, lsl #6
    78e4:	09050101 	stmdbeq	r5, {r0, r8}
    78e8:	00020500 	andeq	r0, r2, r0, lsl #10
    78ec:	03000000 	movweq	r0, #0
    78f0:	060102f7 			; <UNDEFINED> instruction: 0x060102f7
    78f4:	060d0501 	streq	r0, [sp], -r1, lsl #10
    78f8:	0189053d 	orreq	r0, r9, sp, lsr r5
    78fc:	032a0514 			; <UNDEFINED> instruction: 0x032a0514
    7900:	0d05010e 	stfeqs	f0, [r5, #-56]	; 0xffffffc8
    7904:	0f051416 	svceq	0x00051416
    7908:	11050106 	tstne	r5, r6, lsl #2
    790c:	26052506 	strcs	r2, [r5], -r6, lsl #10
    7910:	11050106 	tstne	r5, r6, lsl #2
    7914:	39054c06 	stmdbcc	r5, {r1, r2, sl, fp, lr}
    7918:	140d055b 	strne	r0, [sp], #-1371	; 0xfffffaa5
    791c:	13060905 	movwne	r0, #26885	; 0x6905
    7920:	0101003c 	tsteq	r1, ip, lsr r0
    7924:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    7928:	00000002 	andeq	r0, r0, r2
    792c:	03c40300 	biceq	r0, r4, #0, 6
    7930:	13090501 	movwne	r0, #38145	; 0x9501
    7934:	7f051413 	svcvc	0x00051413
    7938:	141f0514 	ldrne	r0, [pc], #-1300	; 7940 <__HEAP_SIZE+0x6940>
    793c:	05160905 	ldreq	r0, [r6, #-2309]	; 0xfffff6fb
    7940:	20010619 	andcs	r0, r1, r9, lsl r6
    7944:	05200b05 	streq	r0, [r0, #-2821]!	; 0xfffff4fb
    7948:	20740305 	rsbscs	r0, r4, r5, lsl #6
    794c:	03060d05 	movweq	r0, #27909	; 0x6d05
    7950:	21052e0f 	tstcs	r5, pc, lsl #28
    7954:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    7958:	37052106 	strcc	r2, [r5, -r6, lsl #2]
    795c:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    7960:	31052106 	tstcc	r5, r6, lsl #2
    7964:	43050106 	movwmi	r0, #20742	; 0x5106
    7968:	0d052206 	sfmeq	f2, 4, [r5, #-24]	; 0xffffffe8
    796c:	060f0514 			; <UNDEFINED> instruction: 0x060f0514
    7970:	03140501 	tsteq	r4, #4194304	; 0x400000
    7974:	25052e6c 	strcs	r2, [r5, #-3692]	; 0xfffff194
    7978:	20240306 	eorcs	r0, r4, r6, lsl #6
    797c:	05153c05 	ldreq	r3, [r5, #-3077]	; 0xfffff3fb
    7980:	05051409 	streq	r1, [r5, #-1033]	; 0xfffffbf7
    7984:	11051306 	tstne	r5, r6, lsl #6
    7988:	3c6c0306 	stclcc	3, cr0, [ip], #-24	; 0xffffffe8
    798c:	01061505 	tsteq	r6, r5, lsl #10
    7990:	052e1305 	streq	r1, [lr, #-773]!	; 0xfffffcfb
    7994:	05340615 	ldreq	r0, [r4, #-1557]!	; 0xfffff9eb
    7998:	7401061f 	strvc	r0, [r1], #-1567	; 0xfffff9e1
    799c:	1c061505 	cfstr32ne	mvfx1, [r6], {5}
    79a0:	01061f05 	tsteq	r6, r5, lsl #30
    79a4:	03140574 	tsteq	r4, #116, 10	; 0x1d000000
    79a8:	05052068 	streq	r2, [r5, #-104]	; 0xffffff98
    79ac:	02202a03 	eoreq	r2, r0, #12288	; 0x3000
    79b0:	01010003 	tsteq	r1, r3
    79b4:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    79b8:	00000002 	andeq	r0, r0, r2
    79bc:	03f70300 	mvnseq	r0, #0, 6
    79c0:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    79c4:	133d0609 	teqne	sp, #9437184	; 0x900000
    79c8:	147e0514 	ldrbtne	r0, [lr], #-1300	; 0xfffffaec
    79cc:	05141f05 	ldreq	r1, [r4, #-3845]	; 0xfffff0fb
    79d0:	19051609 	stmdbne	r5, {r0, r3, r9, sl, ip}
    79d4:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    79d8:	0d05200b 	stceq	0, cr2, [r5, #-44]	; 0xffffffd4
    79dc:	21052306 	tstcs	r5, r6, lsl #6
    79e0:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    79e4:	37052106 	strcc	r2, [r5, -r6, lsl #2]
    79e8:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    79ec:	31052106 	tstcc	r5, r6, lsl #2
    79f0:	44050106 	strmi	r0, [r5], #-262	; 0xfffffefa
    79f4:	0d052206 	sfmeq	f2, 4, [r5, #-24]	; 0xffffffe8
    79f8:	060f0514 			; <UNDEFINED> instruction: 0x060f0514
    79fc:	03140501 	tsteq	r4, #4194304	; 0x400000
    7a00:	25052e6c 	strcs	r2, [r5, #-3692]	; 0xfffff194
    7a04:	201d0306 	andscs	r0, sp, r6, lsl #6
    7a08:	05153b05 	ldreq	r3, [r5, #-2821]	; 0xfffff4fb
    7a0c:	05051409 	streq	r1, [r5, #-1033]	; 0xfffffbf7
    7a10:	11051306 	tstne	r5, r6, lsl #6
    7a14:	2e730306 	cdpcs	3, 7, cr0, cr3, cr6, {0}
    7a18:	01061b05 	tsteq	r6, r5, lsl #22
    7a1c:	2e20202e 	cdpcs	0, 2, cr2, cr0, cr14, {1}
    7a20:	6a031405 	bvs	cca3c <__HEAP_SIZE+0xcba3c>
    7a24:	04022020 	streq	r2, [r2], #-32	; 0xffffffe0
    7a28:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    7a2c:	02050005 	andeq	r0, r5, #5
    7a30:	00000000 	andeq	r0, r0, r0
    7a34:	01049f03 	tsteq	r4, r3, lsl #30
    7a38:	05133405 	ldreq	r3, [r3, #-1029]	; 0xfffffbfb
    7a3c:	47051635 	smladxmi	r5, r5, r6, r1
    7a40:	14090514 	strne	r0, [r9], #-1300	; 0xfffffaec
    7a44:	13060505 	movwne	r0, #25861	; 0x6505
    7a48:	01000602 	tsteq	r0, r2, lsl #12
    7a4c:	00050501 	andeq	r0, r5, r1, lsl #10
    7a50:	00000205 	andeq	r0, r0, r5, lsl #4
    7a54:	ad030000 	stcge	0, cr0, [r3, #-0]
    7a58:	09050104 	stmdbeq	r5, {r2, r8}
    7a5c:	142d0513 	strtne	r0, [sp], #-1299	; 0xfffffaed
    7a60:	05141f05 	ldreq	r1, [r4, #-3845]	; 0xfffff0fb
    7a64:	09051444 	stmdbeq	r5, {r2, r6, sl, ip}
    7a68:	06050514 			; <UNDEFINED> instruction: 0x06050514
    7a6c:	01022013 	tsteq	r2, r3, lsl r0
    7a70:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    7a74:	02050005 	andeq	r0, r5, #5
    7a78:	00000000 	andeq	r0, r0, r0
    7a7c:	0104bc03 	tsteq	r4, r3, lsl #24
    7a80:	09050106 	stmdbeq	r5, {r1, r2, r8}
    7a84:	3e053d06 	cdpcc	13, 0, cr3, cr5, cr6, {0}
    7a88:	141f0514 	ldrne	r0, [pc], #-1300	; 7a90 <__HEAP_SIZE+0x6a90>
    7a8c:	05130905 	ldreq	r0, [r3, #-2309]	; 0xfffff6fb
    7a90:	0f05300d 	svceq	0x0005300d
    7a94:	11050106 	tstne	r5, r6, lsl #2
    7a98:	23052206 	movwcs	r2, #20998	; 0x5206
    7a9c:	09050106 	stmdbeq	r5, {r1, r2, r8}
    7aa0:	2a056d06 	bcs	162ec0 <__RAM_SIZE+0x62ec0>
    7aa4:	06050530 			; <UNDEFINED> instruction: 0x06050530
    7aa8:	06110513 			; <UNDEFINED> instruction: 0x06110513
    7aac:	05207a03 	streq	r7, [r0, #-2563]!	; 0xfffff5fd
    7ab0:	02010623 	andeq	r0, r1, #36700160	; 0x2300000
    7ab4:	01010007 	tsteq	r1, r7
    7ab8:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    7abc:	00000002 	andeq	r0, r0, r2
    7ac0:	04d40300 	ldrbeq	r0, [r4], #768	; 0x300
    7ac4:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    7ac8:	132f0609 			; <UNDEFINED> instruction: 0x132f0609
    7acc:	05143105 	ldreq	r3, [r4, #-261]	; 0xfffffefb
    7ad0:	0905141f 	stmdbeq	r5, {r0, r1, r2, r3, r4, sl, ip}
    7ad4:	300d0513 	andcc	r0, sp, r3, lsl r5
    7ad8:	01061a05 	tsteq	r6, r5, lsl #20
    7adc:	052e0f05 	streq	r0, [lr, #-3845]!	; 0xfffff0fb
    7ae0:	09053f19 	stmdbeq	r5, {r0, r3, r4, r8, r9, sl, fp, ip, sp}
    7ae4:	33052806 	movwcc	r2, #22534	; 0x5806
    7ae8:	14090530 	strne	r0, [r9], #-1328	; 0xfffffad0
    7aec:	13060505 	movwne	r0, #25861	; 0x6505
    7af0:	78031905 	stmdavc	r3, {r0, r2, r8, fp, ip}
    7af4:	0102202e 	tsteq	r2, lr, lsr #32
    7af8:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    7afc:	02050005 	andeq	r0, r5, #5
    7b00:	00000000 	andeq	r0, r0, r0
    7b04:	0104f003 	tsteq	r4, r3	; <UNPREDICTABLE>
    7b08:	09050106 	stmdbeq	r5, {r1, r2, r8}
    7b0c:	32052106 	andcc	r2, r5, #-2147483647	; 0x80000001
    7b10:	14090514 	strne	r0, [r9], #-1300	; 0xfffffaec
    7b14:	01062405 	tsteq	r6, r5, lsl #8
    7b18:	30063505 	andcc	r3, r6, r5, lsl #10
    7b1c:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    7b20:	02130605 	andseq	r0, r3, #5242880	; 0x500000
    7b24:	01010001 	tsteq	r1, r1
    7b28:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    7b2c:	00000002 	andeq	r0, r0, r2
    7b30:	04fe0300 	ldrbteq	r0, [lr], #768	; 0x300
    7b34:	13090501 	movwne	r0, #38145	; 0x9501
    7b38:	14310513 	ldrtne	r0, [r1], #-1299	; 0xfffffaed
    7b3c:	05141f05 	ldreq	r1, [r4, #-3845]	; 0xfffff0fb
    7b40:	33051309 	movwcc	r1, #21257	; 0x5309
    7b44:	14090514 	strne	r0, [r9], #-1300	; 0xfffffaec
    7b48:	13060505 	movwne	r0, #25861	; 0x6505
    7b4c:	00010220 	andeq	r0, r1, r0, lsr #4
    7b50:	09050101 	stmdbeq	r5, {r0, r8}
    7b54:	00020500 	andeq	r0, r2, r0, lsl #10
    7b58:	03000000 	movweq	r0, #0
    7b5c:	05010590 	streq	r0, [r1, #-1424]	; 0xfffffa70
    7b60:	0513130d 	ldreq	r1, [r3, #-781]	; 0xfffffcf3
    7b64:	33051447 	movwcc	r1, #21575	; 0x5447
    7b68:	140d0514 	strne	r0, [sp], #-1300	; 0xfffffaec
    7b6c:	01061a05 	tsteq	r6, r5, lsl #20
    7b70:	052e0f05 	streq	r0, [lr, #-3845]!	; 0xfffff0fb
    7b74:	05410611 	strbeq	r0, [r1, #-1553]	; 0xfffff9ef
    7b78:	05010621 	streq	r0, [r1, #-1569]	; 0xfffff9df
    7b7c:	05210611 	streq	r0, [r1, #-1553]!	; 0xfffff9ef
    7b80:	20010619 	andcs	r0, r1, r9, lsl r6
    7b84:	06390524 	ldrteq	r0, [r9], -r4, lsr #10
    7b88:	140d0523 	strne	r0, [sp], #-1315	; 0xfffffadd
    7b8c:	13060905 	movwne	r0, #26885	; 0x6905
    7b90:	01000102 	tsteq	r0, r2, lsl #2
    7b94:	00050501 	andeq	r0, r5, r1, lsl #10
    7b98:	00000205 	andeq	r0, r0, r5, lsl #4
    7b9c:	ad030000 	stcge	0, cr0, [r3, #-0]
    7ba0:	09050105 	stmdbeq	r5, {r0, r2, r8}
    7ba4:	142c0513 	strtne	r0, [ip], #-1299	; 0xfffffaed
    7ba8:	05141f05 	ldreq	r1, [r4, #-3845]	; 0xfffff0fb
    7bac:	0905143b 	stmdbeq	r5, {r0, r1, r3, r4, r5, sl, ip}
    7bb0:	06050514 			; <UNDEFINED> instruction: 0x06050514
    7bb4:	01022013 	tsteq	r2, r3, lsl r0
    7bb8:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    7bbc:	02050005 	andeq	r0, r5, #5
    7bc0:	00000000 	andeq	r0, r0, r0
    7bc4:	01098a03 	tsteq	r9, r3, lsl #20
    7bc8:	09050106 	stmdbeq	r5, {r1, r2, r8}
    7bcc:	05132f06 	ldreq	r2, [r3, #-3846]	; 0xfffff0fa
    7bd0:	1f051431 	svcne	0x00051431
    7bd4:	15090514 	strne	r0, [r9, #-1300]	; 0xfffffaec
    7bd8:	05300d05 	ldreq	r0, [r0, #-3333]!	; 0xfffff2fb
    7bdc:	0501061a 	streq	r0, [r1, #-1562]	; 0xfffff9e6
    7be0:	19052e0f 	stmdbne	r5, {r0, r1, r2, r3, r9, sl, fp, sp}
    7be4:	0609053e 			; <UNDEFINED> instruction: 0x0609053e
    7be8:	30330527 	eorscc	r0, r3, r7, lsr #10
    7bec:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    7bf0:	05130605 	ldreq	r0, [r3, #-1541]	; 0xfffff9fb
    7bf4:	2e780319 	mrccs	3, 3, r0, cr8, cr9, {0}
    7bf8:	00010220 	andeq	r0, r1, r0, lsr #4
    7bfc:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    7c00:	00020500 	andeq	r0, r2, r0, lsl #10
    7c04:	03000000 	movweq	r0, #0
    7c08:	060109a7 	streq	r0, [r1], -r7, lsr #19
    7c0c:	06090501 	streq	r0, [r9], -r1, lsl #10
    7c10:	2f05132f 	svccs	0x0005132f
    7c14:	141f0514 	ldrne	r0, [pc], #-1300	; 7c1c <__HEAP_SIZE+0x6c1c>
    7c18:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    7c1c:	1605300d 	strne	r3, [r5], -sp
    7c20:	09050106 	stmdbeq	r5, {r1, r2, r8}
    7c24:	32052206 	andcc	r2, r5, #1610612736	; 0x60000000
    7c28:	14090530 	strne	r0, [r9], #-1328	; 0xfffffad0
    7c2c:	13060505 	movwne	r0, #25861	; 0x6505
    7c30:	0101002e 	tsteq	r1, lr, lsr #32
    7c34:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    7c38:	00000002 	andeq	r0, r0, r2
    7c3c:	09bd0300 	ldmibeq	sp!, {r8, r9}
    7c40:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    7c44:	053d0609 	ldreq	r0, [sp, #-1545]!	; 0xfffff9f7
    7c48:	1f051437 	svcne	0x00051437
    7c4c:	14090514 	strne	r0, [r9], #-1300	; 0xfffffaec
    7c50:	05300d05 	ldreq	r0, [r0, #-3333]!	; 0xfffff2fb
    7c54:	05010620 	streq	r0, [r1, #-1568]	; 0xfffff9e0
    7c58:	05220609 	streq	r0, [r2, #-1545]!	; 0xfffff9f7
    7c5c:	05053027 	streq	r3, [r5, #-39]	; 0xffffffd9
    7c60:	00201306 	eoreq	r1, r0, r6, lsl #6
    7c64:	09050101 	stmdbeq	r5, {r0, r8}
    7c68:	00020500 	andeq	r0, r2, r0, lsl #10
    7c6c:	03000000 	movweq	r0, #0
    7c70:	060109d4 			; <UNDEFINED> instruction: 0x060109d4
    7c74:	060d0501 	streq	r0, [sp], -r1, lsl #10
    7c78:	7f05134b 	svcvc	0x0005134b
    7c7c:	160d0514 			; <UNDEFINED> instruction: 0x160d0514
    7c80:	01062105 	tsteq	r6, r5, lsl #2
    7c84:	060d052e 	streq	r0, [sp], -lr, lsr #10
    7c88:	063f0521 	ldrteq	r0, [pc], -r1, lsr #10
    7c8c:	060d0501 	streq	r0, [sp], -r1, lsl #10
    7c90:	06390521 	ldrteq	r0, [r9], -r1, lsr #10
    7c94:	060d0501 	streq	r0, [sp], -r1, lsl #10
    7c98:	06390521 	ldrteq	r0, [r9], -r1, lsr #10
    7c9c:	060d0501 	streq	r0, [sp], -r1, lsl #10
    7ca0:	06170522 	ldreq	r0, [r7], -r2, lsr #10
    7ca4:	05202e01 	streq	r2, [r0, #-3585]!	; 0xfffff1ff
    7ca8:	053e0661 	ldreq	r0, [lr, #-1633]!	; 0xfffff99f
    7cac:	0d051341 	stceq	3, cr1, [r5, #-260]	; 0xfffffefc
    7cb0:	06090514 			; <UNDEFINED> instruction: 0x06090514
    7cb4:	02022e13 	andeq	r2, r2, #304	; 0x130
    7cb8:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    7cbc:	02050009 	andeq	r0, r5, #9
    7cc0:	00000000 	andeq	r0, r0, r0
    7cc4:	0109f203 	tsteq	r9, r3, lsl #4	; <UNPREDICTABLE>
    7cc8:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    7ccc:	05134b06 	ldreq	r4, [r3, #-2822]	; 0xfffff4fa
    7cd0:	2805146b 	stmdacs	r5, {r0, r1, r3, r5, r6, sl, ip}
    7cd4:	160d0517 			; <UNDEFINED> instruction: 0x160d0517
    7cd8:	01062105 	tsteq	r6, r5, lsl #2
    7cdc:	060d052e 	streq	r0, [sp], -lr, lsr #10
    7ce0:	063f0521 	ldrteq	r0, [pc], -r1, lsr #10
    7ce4:	060d0501 	streq	r0, [sp], -r1, lsl #10
    7ce8:	06390521 	ldrteq	r0, [r9], -r1, lsr #10
    7cec:	060d0501 	streq	r0, [sp], -r1, lsl #10
    7cf0:	06390521 	ldrteq	r0, [r9], -r1, lsr #10
    7cf4:	060d0501 	streq	r0, [sp], -r1, lsl #10
    7cf8:	06170522 	ldreq	r0, [r7], -r2, lsr #10
    7cfc:	05202e01 	streq	r2, [r0, #-3585]!	; 0xfffff1ff
    7d00:	053e0658 	ldreq	r0, [lr, #-1624]!	; 0xfffff9a8
    7d04:	0d05133a 	stceq	3, cr1, [r5, #-232]	; 0xffffff18
    7d08:	06090514 			; <UNDEFINED> instruction: 0x06090514
    7d0c:	02022e13 	andeq	r2, r2, #304	; 0x130
    7d10:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    7d14:	02050005 	andeq	r0, r5, #5
    7d18:	00000000 	andeq	r0, r0, r0
    7d1c:	010ab203 	tsteq	sl, r3, lsl #4
    7d20:	05130905 	ldreq	r0, [r3, #-2309]	; 0xfffff6fb
    7d24:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    7d28:	053d0609 	ldreq	r0, [sp, #-1545]!	; 0xfffff9f7
    7d2c:	0501061a 	streq	r0, [r1, #-1562]	; 0xfffff9e6
    7d30:	05022f05 	streq	r2, [r2, #-3845]	; 0xfffff0fb
    7d34:	4d010100 	stfmis	f0, [r1, #-0]
    7d38:	03000007 	movweq	r0, #7
    7d3c:	00022a00 	andeq	r2, r2, r0, lsl #20
    7d40:	fb010200 	blx	4854a <__HEAP_SIZE+0x4754a>
    7d44:	01000d0e 	tsteq	r0, lr, lsl #26
    7d48:	00010101 	andeq	r0, r1, r1, lsl #2
    7d4c:	00010000 	andeq	r0, r1, r0
    7d50:	2e2e0100 	sufcse	f0, f6, f0
    7d54:	2f2e2e2f 	svccs	0x002e2e2f
    7d58:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 7ca8 <__HEAP_SIZE+0x6ca8>
    7d5c:	74726269 	ldrbtvc	r6, [r2], #-617	; 0xfffffd97
    7d60:	462f736f 	strtmi	r7, [pc], -pc, ror #6
    7d64:	52656572 	rsbpl	r6, r5, #478150656	; 0x1c800000
    7d68:	2f534f54 	svccs	0x00534f54
    7d6c:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
    7d70:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
    7d74:	6d654d2f 	stclvs	13, cr4, [r5, #-188]!	; 0xffffff44
    7d78:	676e614d 	strbvs	r6, [lr, -sp, asr #2]!
    7d7c:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
    7d80:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
    7d84:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
    7d88:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
    7d8c:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
    7d90:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
    7d94:	5f6d7261 	svcpl	0x006d7261
    7d98:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
    7d9c:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
    7da0:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    7da4:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    7da8:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    7dac:	30312d69 	eorscc	r2, r1, r9, ror #26
    7db0:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
    7db4:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
    7db8:	6c5c3031 	mrrcvs	0, 3, r3, ip, cr1
    7dbc:	675c6269 	ldrbvs	r6, [ip, -r9, ror #4]
    7dc0:	615c6363 	cmpvs	ip, r3, ror #6
    7dc4:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    7dc8:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    7dcc:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    7dd0:	2e30315c 	mrccs	1, 1, r3, cr0, cr12, {2}
    7dd4:	5c312e33 	ldcpl	14, cr2, [r1], #-204	; 0xffffff34
    7dd8:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    7ddc:	00656475 	rsbeq	r6, r5, r5, ror r4
    7de0:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
    7de4:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    7de8:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
    7dec:	705c6e6f 	subsvc	r6, ip, pc, ror #28
    7df0:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
    7df4:	615c6d61 	cmpvs	ip, r1, ror #26
    7df8:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
    7dfc:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
    7e00:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
    7e04:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    7e08:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    7e0c:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    7e10:	2e30312d 	rsfcssp	f3, f0, #5.0
    7e14:	30322d33 	eorscc	r2, r2, r3, lsr sp
    7e18:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
    7e1c:	72615c30 	rsbvc	r5, r1, #48, 24	; 0x3000
    7e20:	6f6e2d6d 	svcvs	0x006e2d6d
    7e24:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    7e28:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
    7e2c:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    7e30:	5c656475 	cfstrdpl	mvd6, [r5], #-468	; 0xfffffe2c
    7e34:	6863616d 	stmdavs	r3!, {r0, r2, r3, r5, r6, r8, sp, lr}^
    7e38:	00656e69 	rsbeq	r6, r5, r9, ror #28
    7e3c:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
    7e40:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    7e44:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
    7e48:	705c6e6f 	subsvc	r6, ip, pc, ror #28
    7e4c:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
    7e50:	615c6d61 	cmpvs	ip, r1, ror #26
    7e54:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
    7e58:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
    7e5c:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
    7e60:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    7e64:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    7e68:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    7e6c:	2e30312d 	rsfcssp	f3, f0, #5.0
    7e70:	30322d33 	eorscc	r2, r2, r3, lsr sp
    7e74:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
    7e78:	72615c30 	rsbvc	r5, r1, #48, 24	; 0x3000
    7e7c:	6f6e2d6d 	svcvs	0x006e2d6d
    7e80:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    7e84:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
    7e88:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    7e8c:	5c656475 	cfstrdpl	mvd6, [r5], #-468	; 0xfffffe2c
    7e90:	00737973 	rsbseq	r7, r3, r3, ror r9
    7e94:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    7e98:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    7e9c:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    7ea0:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    7ea4:	6572462f 	ldrbvs	r4, [r2, #-1583]!	; 0xfffff9d1
    7ea8:	4f545265 	svcmi	0x00545265
    7eac:	6f702f53 	svcvs	0x00702f53
    7eb0:	62617472 	rsbvs	r7, r1, #1912602624	; 0x72000000
    7eb4:	472f656c 	strmi	r6, [pc, -ip, ror #10]!
    7eb8:	412f4343 			; <UNDEFINED> instruction: 0x412f4343
    7ebc:	435f4d52 	cmpmi	pc, #5248	; 0x1480
    7ec0:	5f33334d 	svcpl	0x0033334d
    7ec4:	2f5a544e 	svccs	0x005a544e
    7ec8:	5f6e6f6e 	svcpl	0x006e6f6e
    7ecc:	75636573 	strbvc	r6, [r3, #-1395]!	; 0xfffffa8d
    7ed0:	2e006572 	cfrshl64cs	mvdx0, mvdx2, r6
    7ed4:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    7ed8:	2f2e2e2f 	svccs	0x002e2e2f
    7edc:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
    7ee0:	2f736f74 	svccs	0x00736f74
    7ee4:	65657246 	strbvs	r7, [r5, #-582]!	; 0xfffffdba
    7ee8:	534f5452 	movtpl	r5, #62546	; 0xf452
    7eec:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    7ef0:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    7ef4:	65680000 	strbvs	r0, [r8, #-0]!
    7ef8:	345f7061 	ldrbcc	r7, [pc], #-97	; 7f00 <__HEAP_SIZE+0x6f00>
    7efc:	0100632e 	tsteq	r0, lr, lsr #6
    7f00:	74730000 	ldrbtvc	r0, [r3], #-0
    7f04:	66656464 	strbtvs	r6, [r5], -r4, ror #8
    7f08:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    7f0c:	645f0000 	ldrbvs	r0, [pc], #-0	; 7f14 <__HEAP_SIZE+0x6f14>
    7f10:	75616665 	strbvc	r6, [r1, #-1637]!	; 0xfffff99b
    7f14:	745f746c 	ldrbvc	r7, [pc], #-1132	; 7f1c <__HEAP_SIZE+0x6f1c>
    7f18:	73657079 	cmnvc	r5, #121	; 0x79
    7f1c:	0300682e 	movweq	r6, #2094	; 0x82e
    7f20:	735f0000 	cmpvc	pc, #0
    7f24:	6e696474 	mcrvs	4, 3, r6, cr9, cr4, {3}
    7f28:	00682e74 	rsbeq	r2, r8, r4, ror lr
    7f2c:	70000004 	andvc	r0, r0, r4
    7f30:	6d74726f 	lfmvs	f7, 2, [r4, #-444]!	; 0xfffffe44
    7f34:	6f726361 	svcvs	0x00726361
    7f38:	6d6d6f63 	stclvs	15, cr6, [sp, #-396]!	; 0xfffffe74
    7f3c:	682e6e6f 	stmdavs	lr!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}
    7f40:	00000500 	andeq	r0, r0, r0, lsl #10
    7f44:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
    7f48:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
    7f4c:	0600682e 	streq	r6, [r0], -lr, lsr #16
    7f50:	61740000 	cmnvs	r4, r0
    7f54:	682e6b73 	stmdavs	lr!, {r0, r1, r4, r5, r6, r8, r9, fp, sp, lr}
    7f58:	00000600 	andeq	r0, r0, r0, lsl #12
    7f5c:	6975623c 	ldmdbvs	r5!, {r2, r3, r4, r5, r9, sp, lr}^
    7f60:	692d746c 	pushvs	{r2, r3, r5, r6, sl, ip, sp, lr}
    7f64:	00003e6e 	andeq	r3, r0, lr, ror #28
    7f68:	05000000 	streq	r0, [r0, #-0]
    7f6c:	02050001 	andeq	r0, r5, #1
    7f70:	10003314 	andne	r3, r0, r4, lsl r3
    7f74:	0103bc03 	tsteq	r3, r3, lsl #24
    7f78:	13130505 	tstne	r3, #20971520	; 0x1400000
    7f7c:	14051513 	strne	r1, [r5], #-1299	; 0xfffffaed
    7f80:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    7f84:	07052206 	streq	r2, [r5, -r6, lsl #4]
    7f88:	09050106 	stmdbeq	r5, {r1, r2, r8}
    7f8c:	18053e06 	stmdane	r5, {r1, r2, r9, sl, fp, ip, sp}
    7f90:	09050106 	stmdbeq	r5, {r1, r2, r8}
    7f94:	18052106 	stmdane	r5, {r1, r2, r8, sp}
    7f98:	09050106 	stmdbeq	r5, {r1, r2, r8}
    7f9c:	18052f06 	stmdane	r5, {r1, r2, r8, r9, sl, fp, sp}
    7fa0:	053b0106 	ldreq	r0, [fp, #-262]!	; 0xfffffefa
    7fa4:	0c030605 	stceq	6, cr0, [r3], {5}
    7fa8:	061c0520 	ldreq	r0, [ip], -r0, lsr #10
    7fac:	06050501 	streq	r0, [r5], -r1, lsl #10
    7fb0:	0617052f 	ldreq	r0, [r7], -pc, lsr #10
    7fb4:	06050501 	streq	r0, [r5], -r1, lsl #10
    7fb8:	06120532 			; <UNDEFINED> instruction: 0x06120532
    7fbc:	06050501 	streq	r0, [r5], -r1, lsl #10
    7fc0:	06120521 	ldreq	r0, [r2], -r1, lsr #10
    7fc4:	06050501 	streq	r0, [r5], -r1, lsl #10
    7fc8:	06120521 	ldreq	r0, [r2], -r1, lsr #10
    7fcc:	06050501 	streq	r0, [r5], -r1, lsl #10
    7fd0:	060b052f 	streq	r0, [fp], -pc, lsr #10
    7fd4:	06050501 	streq	r0, [r5], -r1, lsl #10
    7fd8:	0617052f 	ldreq	r0, [r7], -pc, lsr #10
    7fdc:	06050501 	streq	r0, [r5], -r1, lsl #10
    7fe0:	061c0521 	ldreq	r0, [ip], -r1, lsr #10
    7fe4:	06050501 	streq	r0, [r5], -r1, lsl #10
    7fe8:	3e051324 	cdpcc	3, 0, cr1, cr5, cr4, {1}
    7fec:	22050106 	andcs	r0, r5, #-2147483647	; 0x80000001
    7ff0:	06050520 	streq	r0, [r5], -r0, lsr #10
    7ff4:	06270521 	strteq	r0, [r7], -r1, lsr #10
    7ff8:	06050501 	streq	r0, [r5], -r1, lsl #10
    7ffc:	06240523 	strteq	r0, [r4], -r3, lsr #10
    8000:	05052001 	streq	r2, [r5, #-1]
    8004:	19052106 	stmdbne	r5, {r1, r2, r8, sp}
    8008:	01050106 	tsteq	r5, r6, lsl #2
    800c:	030c052f 	movweq	r0, #50479	; 0xc52f
    8010:	0d022057 	stceq	0, cr2, [r2, #-348]	; 0xfffffea4
    8014:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    8018:	02050001 	andeq	r0, r5, #1
    801c:	1000336c 	andne	r3, r0, ip, ror #6
    8020:	0103ec03 	tsteq	r3, r3, lsl #24
    8024:	13130505 	tstne	r3, #20971520	; 0x1400000
    8028:	06150516 			; <UNDEFINED> instruction: 0x06150516
    802c:	00200501 	eoreq	r0, r0, r1, lsl #10
    8030:	06010402 	streq	r0, [r1], -r2, lsl #8
    8034:	00050520 	andeq	r0, r5, r0, lsr #10
    8038:	06010402 	streq	r0, [r1], -r2, lsl #8
    803c:	0533062e 	ldreq	r0, [r3, #-1582]!	; 0xfffff9d2
    8040:	05051431 	streq	r1, [r5, #-1073]	; 0xfffffbcf
    8044:	1b051417 	blne	14d0a8 <__RAM_SIZE+0x4d0a8>
    8048:	0f050106 	svceq	0x00050106
    804c:	2e070520 	cfsh32cs	mvfx0, mvfx7, #16
    8050:	35062105 	strcc	r2, [r6, #-261]	; 0xfffffefb
    8054:	14170505 	ldrne	r0, [r7], #-1285	; 0xfffffafb
    8058:	01062005 	tsteq	r6, r5
    805c:	05200f05 	streq	r0, [r0, #-3845]!	; 0xfffff0fb
    8060:	09052e07 	stmdbeq	r5, {r0, r1, r2, r9, sl, fp, sp}
    8064:	2e0f0306 	cdpcs	3, 0, cr0, cr15, cr6, {0}
    8068:	01062a05 	tsteq	r6, r5, lsl #20
    806c:	27060505 	strcs	r0, [r6, -r5, lsl #10]
    8070:	01060705 	tsteq	r6, r5, lsl #14
    8074:	30060905 	andcc	r0, r6, r5, lsl #18
    8078:	01062505 	tsteq	r6, r5, lsl #10
    807c:	24062105 	strcs	r2, [r6], #-261	; 0xfffffefb
    8080:	58030905 	stmdapl	r3, {r0, r2, r8, fp}
    8084:	06320520 	ldrteq	r0, [r2], -r0, lsr #10
    8088:	20200501 	eorcs	r0, r0, r1, lsl #10
    808c:	2f060905 	svccs	0x00060905
    8090:	01061905 	tsteq	r6, r5, lsl #18
    8094:	69030105 	stmdbvs	r3, {r0, r2, r8}
    8098:	0609052e 	streq	r0, [r9], -lr, lsr #10
    809c:	05202403 	streq	r2, [r0, #-1027]!	; 0xfffffbfd
    80a0:	05010646 	streq	r0, [r1, #-1606]	; 0xfffff9ba
    80a4:	0d052e0b 	stceq	14, cr2, [r5, #-44]	; 0xffffffd4
    80a8:	64053106 	strvs	r3, [r5], #-262	; 0xfffffefa
    80ac:	29050106 	stmdbcs	r5, {r1, r2, r8}
    80b0:	060d0520 	streq	r0, [sp], -r0, lsr #10
    80b4:	0630052f 	ldrteq	r0, [r0], -pc, lsr #10
    80b8:	20680501 	rsbcs	r0, r8, r1, lsl #10
    80bc:	05202e05 	streq	r2, [r0, #-3589]!	; 0xfffff1fb
    80c0:	10030605 	andne	r0, r3, r5, lsl #12
    80c4:	06070520 	streq	r0, [r7], -r0, lsr #10
    80c8:	06090501 	streq	r0, [r9], -r1, lsl #10
    80cc:	06250530 			; <UNDEFINED> instruction: 0x06250530
    80d0:	06210501 	strteq	r0, [r1], -r1, lsl #10
    80d4:	06010524 	streq	r0, [r1], -r4, lsr #10
    80d8:	060d0514 			; <UNDEFINED> instruction: 0x060d0514
    80dc:	053c6c03 	ldreq	r6, [ip, #-3075]!	; 0xfffff3fd
    80e0:	2e01062e 	cfmadd32cs	mvax1, mvfx0, mvfx1, mvfx14
    80e4:	01000602 	tsteq	r0, r2, lsl #12
    80e8:	00010501 	andeq	r0, r1, r1, lsl #10
    80ec:	33d00205 	bicscc	r0, r0, #1342177280	; 0x50000000
    80f0:	ad031000 	stcge	0, cr1, [r3, #-0]
    80f4:	01060101 	tsteq	r6, r1, lsl #2
    80f8:	21060505 	tstcs	r6, r5, lsl #10
    80fc:	13131313 	tstne	r3, #1275068416	; 0x4c000000
    8100:	06070514 			; <UNDEFINED> instruction: 0x06070514
    8104:	06090501 	streq	r0, [r9], -r1, lsl #10
    8108:	060b0532 			; <UNDEFINED> instruction: 0x060b0532
    810c:	060d0501 	streq	r0, [sp], -r1, lsl #10
    8110:	0619053e 			; <UNDEFINED> instruction: 0x0619053e
    8114:	060d0501 	streq	r0, [sp], -r1, lsl #10
    8118:	060f0524 	streq	r0, [pc], -r4, lsr #10
    811c:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    8120:	0629053f 			; <UNDEFINED> instruction: 0x0629053f
    8124:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    8128:	06150530 			; <UNDEFINED> instruction: 0x06150530
    812c:	20130501 	andscs	r0, r3, r1, lsl #10
    8130:	30061505 	andcc	r1, r6, r5, lsl #10
    8134:	01062105 	tsteq	r6, r5, lsl #2
    8138:	03190520 	tsteq	r9, #32, 10	; 0x8000000
    813c:	2105200e 	tstcs	r5, lr
    8140:	05052506 	streq	r2, [r5, #-1286]	; 0xfffffafa
    8144:	32090515 	andcc	r0, r9, #88080384	; 0x5400000
    8148:	01061305 	tsteq	r6, r5, lsl #6
    814c:	052e0b05 	streq	r0, [lr, #-2821]!	; 0xfffff4fb
    8150:	05260625 	streq	r0, [r6, #-1573]!	; 0xfffff9db
    8154:	0b051909 	bleq	14e580 <__RAM_SIZE+0x4e580>
    8158:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    815c:	0f053006 	svceq	0x00053006
    8160:	36050106 	strcc	r0, [r5], -r6, lsl #2
    8164:	01040200 	mrseq	r0, R12_usr
    8168:	0025052e 	eoreq	r0, r5, lr, lsr #10
    816c:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    8170:	32061105 	andcc	r1, r6, #1073741825	; 0x40000001
    8174:	06190513 			; <UNDEFINED> instruction: 0x06190513
    8178:	06360501 	ldrteq	r0, [r6], -r1, lsl #10
    817c:	1411052f 	ldrne	r0, [r1], #-1327	; 0xfffffad1
    8180:	01061605 	tsteq	r6, r5, lsl #12
    8184:	53032105 	movwpl	r2, #12549	; 0x3105
    8188:	0d052020 	stceq	0, cr2, [r5, #-128]	; 0xffffff80
    818c:	20180306 	andscs	r0, r8, r6, lsl #6
    8190:	03062505 	movweq	r2, #25861	; 0x6505
    8194:	1d053c17 	stcne	12, cr3, [r5, #-92]	; 0xffffffa4
    8198:	063a0521 	ldrteq	r0, [sl], -r1, lsr #10
    819c:	0e160521 	cfmul64eq	mvdx0, mvdx6, mvdx1
    81a0:	01062105 	tsteq	r6, r5, lsl #2
    81a4:	05201605 	streq	r1, [r0, #-1541]!	; 0xfffff9fb
    81a8:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    81ac:	3e052e01 	cdpcc	14, 0, cr2, cr5, cr1, {0}
    81b0:	01040200 	mrseq	r0, R12_usr
    81b4:	06110520 	ldreq	r0, [r1], -r0, lsr #10
    81b8:	052e0903 	streq	r0, [lr, #-2307]!	; 0xfffff6fd
    81bc:	0501061d 	streq	r0, [r1, #-1565]	; 0xfffff9e3
    81c0:	15052e13 	strne	r2, [r5, #-3603]	; 0xfffff1ed
    81c4:	3d053206 	sfmcc	f3, 4, [r5, #-24]	; 0xffffffe8
    81c8:	1e050106 	adfnes	f0, f5, f6
    81cc:	063b0520 	ldrteq	r0, [fp], -r0, lsr #10
    81d0:	16150521 	ldrne	r0, [r5], -r1, lsr #10
    81d4:	01063f05 	tsteq	r6, r5, lsl #30
    81d8:	05203605 	streq	r3, [r0, #-1541]!	; 0xfffff9fb
    81dc:	05240669 	streq	r0, [r4, #-1641]!	; 0xfffff997
    81e0:	22051415 	andcs	r1, r5, #352321536	; 0x15000000
    81e4:	2f050106 	svccs	0x00050106
    81e8:	20170520 	andscs	r0, r7, r0, lsr #10
    81ec:	34061905 	strcc	r1, [r6], #-2309	; 0xfffff6fb
    81f0:	01062805 	tsteq	r6, r5, lsl #16
    81f4:	21066905 	tstcs	r6, r5, lsl #18
    81f8:	05161905 	ldreq	r1, [r6, #-2309]	; 0xfffff6fb
    81fc:	05010634 	streq	r0, [r1, #-1588]	; 0xfffff9cc
    8200:	05210619 	streq	r0, [r1, #-1561]!	; 0xfffff9e7
    8204:	0501062d 	streq	r0, [r1, #-1581]	; 0xfffff9d3
    8208:	05230619 	streq	r0, [r3, #-1561]!	; 0xfffff9e7
    820c:	0501064a 	streq	r0, [r1, #-1610]	; 0xfffff9b6
    8210:	19052039 	stmdbne	r5, {r0, r3, r4, r5, sp}
    8214:	3a052106 	bcc	150634 <__RAM_SIZE+0x50634>
    8218:	31050106 	tstcc	r5, r6, lsl #2
    821c:	15052406 	strne	r2, [r5, #-1030]	; 0xfffffbfa
    8220:	06330515 			; <UNDEFINED> instruction: 0x06330515
    8224:	20290501 	eorcs	r0, r9, r1, lsl #10
    8228:	3e061505 	cfsh32cc	mvfx1, mvfx6, #5
    822c:	01062d05 	tsteq	r6, r5, lsl #26
    8230:	052e1705 	streq	r1, [lr, #-1797]!	; 0xfffff8fb
    8234:	05300619 	ldreq	r0, [r0, #-1561]!	; 0xfffff9e7
    8238:	05010638 	streq	r0, [r1, #-1592]	; 0xfffff9c8
    823c:	05320631 	ldreq	r0, [r2, #-1585]!	; 0xfffff9cf
    8240:	053d1715 	ldreq	r1, [sp, #-1813]!	; 0xfffff8eb
    8244:	0501062e 	streq	r0, [r1, #-1582]	; 0xfffff9d2
    8248:	052f0615 	streq	r0, [pc, #-1557]!	; 7c3b <__HEAP_SIZE+0x6c3b>
    824c:	2e010633 	mcrcs	6, 0, r0, cr1, cr3, {1}
    8250:	03062505 	movweq	r2, #25861	; 0x6505
    8254:	2d052e0e 	stccs	14, cr2, [r5, #-56]	; 0xffffffc8
    8258:	14050515 	strne	r0, [r5], #-1301	; 0xfffffaeb
    825c:	01060e05 	tsteq	r6, r5, lsl #28
    8260:	03065a05 	movweq	r5, #27141	; 0x6a05
    8264:	05052e0f 	streq	r2, [r5, #-3599]	; 0xfffff1f1
    8268:	06010513 			; <UNDEFINED> instruction: 0x06010513
    826c:	030c0513 	movweq	r0, #50451	; 0xc513
    8270:	662e7ed9 			; <UNDEFINED> instruction: 0x662e7ed9
    8274:	01000c02 	tsteq	r0, r2, lsl #24
    8278:	00010501 	andeq	r0, r1, r1, lsl #10
    827c:	34a40205 	strtcc	r0, [r4], #517	; 0x205
    8280:	dc031000 	stcle	0, cr1, [r3], {-0}
    8284:	05050102 	streq	r0, [r5, #-258]	; 0xfffffefe
    8288:	05141313 	ldreq	r1, [r4, #-787]	; 0xfffffced
    828c:	05010607 	streq	r0, [r1, #-1543]	; 0xfffff9f9
    8290:	09051c01 	stmdbeq	r5, {r0, sl, fp, ip}
    8294:	0d053606 	stceq	6, cr3, [r5, #-24]	; 0xffffffe8
    8298:	09050106 	stmdbeq	r5, {r1, r2, r8}
    829c:	2d053106 	stfcss	f3, [r5, #-24]	; 0xffffffe8
    82a0:	133e0514 	teqne	lr, #20, 10	; 0x5000000
    82a4:	05133805 	ldreq	r3, [r3, #-2053]	; 0xfffff7fb
    82a8:	0d051409 	cfstrseq	mvf1, [r5, #-36]	; 0xffffffdc
    82ac:	0b050106 	bleq	1486cc <__RAM_SIZE+0x486cc>
    82b0:	060d052e 	streq	r0, [sp], -lr, lsr #10
    82b4:	06170530 			; <UNDEFINED> instruction: 0x06170530
    82b8:	2e0f0501 	cfsh32cs	mvfx0, mvfx15, #1
    82bc:	24030105 	strcs	r0, [r3], #-261	; 0xfffffefb
    82c0:	06110520 	ldreq	r0, [r1], -r0, lsr #10
    82c4:	03206003 			; <UNDEFINED> instruction: 0x03206003
    82c8:	15054a0c 	strne	r4, [r5, #-2572]	; 0xfffff5f4
    82cc:	06320531 			; <UNDEFINED> instruction: 0x06320531
    82d0:	2e290501 	cfsh64cs	mvdx0, mvdx9, #1
    82d4:	4b063805 	blmi	1962f0 <__RAM_SIZE+0x962f0>
    82d8:	3d131505 	cfldr32cc	mvfx1, [r3, #-20]	; 0xffffffec
    82dc:	01062d05 	tsteq	r6, r5, lsl #26
    82e0:	4c061105 	stfmis	f1, [r6], {5}
    82e4:	01061a05 	tsteq	r6, r5, lsl #20
    82e8:	03062505 	movweq	r2, #25861	; 0x6505
    82ec:	01052e09 	tsteq	r5, r9, lsl #28
    82f0:	02201506 	eoreq	r1, r0, #25165824	; 0x1800000
    82f4:	01010005 	tsteq	r1, r5
    82f8:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    82fc:	00000002 	andeq	r0, r0, r2
    8300:	03970300 	orrseq	r0, r7, #0, 6
    8304:	13050501 	movwne	r0, #21761	; 0x5501
    8308:	13060105 	movwne	r0, #24837	; 0x6105
    830c:	01000602 	tsteq	r0, r2, lsl #12
    8310:	00010501 	andeq	r0, r1, r1, lsl #10
    8314:	00000205 	andeq	r0, r0, r5, lsl #4
    8318:	9d030000 	stcls	0, cr0, [r3, #-0]
    831c:	05050103 	streq	r0, [r5, #-259]	; 0xfffffefd
    8320:	06010513 			; <UNDEFINED> instruction: 0x06010513
    8324:	00060213 	andeq	r0, r6, r3, lsl r2
    8328:	01050101 	tsteq	r5, r1, lsl #2
    832c:	00020500 	andeq	r0, r2, r0, lsl #10
    8330:	03000000 	movweq	r0, #0
    8334:	140103a3 	strne	r0, [r1], #-931	; 0xfffffc5d
    8338:	01000102 	tsteq	r0, r2, lsl #2
    833c:	00010501 	andeq	r0, r1, r1, lsl #10
    8340:	00000205 	andeq	r0, r0, r5, lsl #4
    8344:	aa030000 	bge	c834c <__HEAP_SIZE+0xc734c>
    8348:	01060103 	tsteq	r6, r3, lsl #2
    834c:	21060505 	tstcs	r6, r5, lsl #10
    8350:	06090514 			; <UNDEFINED> instruction: 0x06090514
    8354:	02005801 	andeq	r5, r0, #65536	; 0x10000
    8358:	06200104 	strteq	r0, [r0], -r4, lsl #2
    835c:	060e0522 	streq	r0, [lr], -r2, lsr #10
    8360:	06090501 	streq	r0, [r9], -r1, lsl #10
    8364:	060b055a 			; <UNDEFINED> instruction: 0x060b055a
    8368:	060d0501 	streq	r0, [sp], -r1, lsl #10
    836c:	06160530 			; <UNDEFINED> instruction: 0x06160530
    8370:	4f010501 	svcmi	0x00010501
    8374:	030c052e 	movweq	r0, #50478	; 0xc52e
    8378:	05052e73 	streq	r2, [r5, #-3699]	; 0xfffff18d
    837c:	200c0306 	andcs	r0, ip, r6, lsl #6
    8380:	01060c05 	tsteq	r6, r5, lsl #24
    8384:	01000102 	tsteq	r0, r2, lsl #2
    8388:	00010501 	andeq	r0, r1, r1, lsl #10
    838c:	00000205 	andeq	r0, r0, r5, lsl #4
    8390:	b0030000 	andlt	r0, r3, r0
    8394:	01060104 	tsteq	r6, r4, lsl #2
    8398:	2f060505 	svccs	0x00060505
    839c:	09051413 	stmdbeq	r5, {r0, r1, r4, sl, ip}
    83a0:	06110530 			; <UNDEFINED> instruction: 0x06110530
    83a4:	06090501 	streq	r0, [r9], -r1, lsl #10
    83a8:	060b0532 			; <UNDEFINED> instruction: 0x060b0532
    83ac:	03270501 			; <UNDEFINED> instruction: 0x03270501
    83b0:	19052078 	stmdbne	r5, {r3, r4, r5, r6, sp}
    83b4:	200c052e 	andcs	r0, ip, lr, lsr #10
    83b8:	052e2705 	streq	r2, [lr, #-1797]!	; 0xfffff8fb
    83bc:	0c052e19 	stceq	14, cr2, [r5], {25}
    83c0:	06050520 	streq	r0, [r5], -r0, lsr #10
    83c4:	05202003 	streq	r2, [r0, #-3]!
    83c8:	0501060e 	streq	r0, [r1, #-1550]	; 0xfffff9f2
    83cc:	05300605 	ldreq	r0, [r0, #-1541]!	; 0xfffff9fb
    83d0:	05010631 	streq	r0, [r1, #-1585]	; 0xfffff9cf
    83d4:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
    83d8:	05010632 	streq	r0, [r1, #-1586]	; 0xfffff9ce
    83dc:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
    83e0:	05010626 	streq	r0, [r1, #-1574]	; 0xfffff9da
    83e4:	05220605 	streq	r0, [r2, #-1541]!	; 0xfffff9fb
    83e8:	31053009 	tstcc	r5, r9
    83ec:	09050106 	stmdbeq	r5, {r1, r2, r8}
    83f0:	35053d06 	strcc	r3, [r5, #-3334]	; 0xfffff2fa
    83f4:	09050106 	stmdbeq	r5, {r1, r2, r8}
    83f8:	2f053d06 	svccs	0x00053d06
    83fc:	09050106 	stmdbeq	r5, {r1, r2, r8}
    8400:	35053d06 	strcc	r3, [r5, #-3334]	; 0xfffff2fa
    8404:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    8408:	01053e06 	tsteq	r5, r6, lsl #28
    840c:	11052f06 	tstne	r5, r6, lsl #30
    8410:	206e0306 	rsbcs	r0, lr, r6, lsl #6
    8414:	01061905 	tsteq	r6, r5, lsl #18
    8418:	03061205 	movweq	r1, #25093	; 0x6205
    841c:	1c05206e 	stcne	0, cr2, [r5], {110}	; 0x6e
    8420:	12050106 	andne	r0, r5, #-2147483647	; 0x80000001
    8424:	0611052e 	ldreq	r0, [r1], -lr, lsr #10
    8428:	06180532 			; <UNDEFINED> instruction: 0x06180532
    842c:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    8430:	061c0522 	ldreq	r0, [ip], -r2, lsr #10
    8434:	20130501 	andscs	r0, r3, r1, lsl #10
    8438:	05301e05 	ldreq	r1, [r0, #-3589]!	; 0xfffff1fb
    843c:	05230611 	streq	r0, [r3, #-1553]!	; 0xfffff9ef
    8440:	05010613 	streq	r0, [r1, #-1555]	; 0xfffff9ed
    8444:	0220301e 	eoreq	r3, r0, #30
    8448:	0101000d 	tsteq	r1, sp
    844c:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    8450:	00000002 	andeq	r0, r0, r2
    8454:	04e90300 	strbteq	r0, [r9], #768	; 0x300
    8458:	13050501 	movwne	r0, #21761	; 0x5501
    845c:	01060b05 	tsteq	r6, r5, lsl #22
    8460:	3e060505 	cfsh32cc	mvfx0, mvfx6, #5
    8464:	01061905 	tsteq	r6, r5, lsl #18
    8468:	2f060505 	svccs	0x00060505
    846c:	01062405 	tsteq	r6, r5, lsl #8
    8470:	2f060505 	svccs	0x00060505
    8474:	01062405 	tsteq	r6, r5, lsl #8
    8478:	2f060505 	svccs	0x00060505
    847c:	01061e05 	tsteq	r6, r5, lsl #28
    8480:	022f0105 	eoreq	r0, pc, #1073741825	; 0x40000001
    8484:	0101000b 	tsteq	r1, fp
    8488:	000005f2 	strdeq	r0, [r0], -r2
    848c:	018d0003 	orreq	r0, sp, r3
    8490:	01020000 	mrseq	r0, (UNDEF: 2)
    8494:	000d0efb 	strdeq	r0, [sp], -fp
    8498:	01010101 	tsteq	r1, r1, lsl #2
    849c:	01000000 	mrseq	r0, (UNDEF: 0)
    84a0:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
    84a4:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    84a8:	2f2e2e2f 	svccs	0x002e2e2f
    84ac:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
    84b0:	2f736f74 	svccs	0x00736f74
    84b4:	65657246 	strbvs	r7, [r5, #-582]!	; 0xfffffdba
    84b8:	534f5452 	movtpl	r5, #62546	; 0xf452
    84bc:	726f702f 	rsbvc	r7, pc, #47	; 0x2f
    84c0:	6c626174 	stfvse	f6, [r2], #-464	; 0xfffffe30
    84c4:	43472f65 	movtmi	r2, #32613	; 0x7f65
    84c8:	52412f43 	subpl	r2, r1, #268	; 0x10c
    84cc:	4d435f4d 	stclmi	15, cr5, [r3, #-308]	; 0xfffffecc
    84d0:	4e5f3333 	mrcmi	3, 2, r3, cr15, cr3, {1}
    84d4:	6e2f5a54 			; <UNDEFINED> instruction: 0x6e2f5a54
    84d8:	735f6e6f 	cmpvc	pc, #1776	; 0x6f0
    84dc:	72756365 	rsbsvc	r6, r5, #-1811939327	; 0x94000001
    84e0:	3a630065 	bcc	18c867c <__RAM_SIZE+0x17c867c>
    84e4:	6573755c 	ldrbvs	r7, [r3, #-1372]!	; 0xfffffaa4
    84e8:	785c7372 	ldmdavc	ip, {r1, r4, r5, r6, r8, r9, ip, sp, lr}^
    84ec:	6e6f6469 	cdpvs	4, 6, cr6, cr15, cr9, {3}
    84f0:	6f72705c 	svcvs	0x0072705c
    84f4:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
    84f8:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    84fc:	6363675f 	cmnvs	r3, #24903680	; 0x17c0000
    8500:	6363675c 	cmnvs	r3, #92, 14	; 0x1700000
    8504:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
    8508:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    850c:	61652d65 	cmnvs	r5, r5, ror #26
    8510:	312d6962 			; <UNDEFINED> instruction: 0x312d6962
    8514:	2d332e30 	ldccs	14, cr2, [r3, #-192]!	; 0xffffff40
    8518:	31323032 	teqcc	r2, r2, lsr r0
    851c:	5c30312e 	ldfpls	f3, [r0], #-184	; 0xffffff48
    8520:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    8524:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    8528:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    852c:	6e695c69 	cdpvs	12, 6, cr5, cr9, cr9, {3}
    8530:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    8534:	616d5c65 	cmnvs	sp, r5, ror #24
    8538:	6e696863 	cdpvs	8, 6, cr6, cr9, cr3, {3}
    853c:	3a630065 	bcc	18c86d8 <__RAM_SIZE+0x17c86d8>
    8540:	6573755c 	ldrbvs	r7, [r3, #-1372]!	; 0xfffffaa4
    8544:	785c7372 	ldmdavc	ip, {r1, r4, r5, r6, r8, r9, ip, sp, lr}^
    8548:	6e6f6469 	cdpvs	4, 6, cr6, cr15, cr9, {3}
    854c:	6f72705c 	svcvs	0x0072705c
    8550:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
    8554:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    8558:	6363675f 	cmnvs	r3, #24903680	; 0x17c0000
    855c:	6363675c 	cmnvs	r3, #92, 14	; 0x1700000
    8560:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
    8564:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    8568:	61652d65 	cmnvs	r5, r5, ror #26
    856c:	312d6962 			; <UNDEFINED> instruction: 0x312d6962
    8570:	2d332e30 	ldccs	14, cr2, [r3, #-192]!	; 0xffffff40
    8574:	31323032 	teqcc	r2, r2, lsr r0
    8578:	5c30312e 	ldfpls	f3, [r0], #-184	; 0xffffff48
    857c:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    8580:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    8584:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    8588:	6e695c69 	cdpvs	12, 6, cr5, cr9, cr9, {3}
    858c:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    8590:	79735c65 	ldmdbvc	r3!, {r0, r2, r5, r6, sl, fp, ip, lr}^
    8594:	2e2e0073 	mcrcs	0, 1, r0, cr14, cr3, {3}
    8598:	2f2e2e2f 	svccs	0x002e2e2f
    859c:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 84ec <__HEAP_SIZE+0x74ec>
    85a0:	74726269 	ldrbtvc	r6, [r2], #-617	; 0xfffffd97
    85a4:	462f736f 	strtmi	r7, [pc], -pc, ror #6
    85a8:	52656572 	rsbpl	r6, r5, #478150656	; 0x1c800000
    85ac:	2f534f54 	svccs	0x00534f54
    85b0:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    85b4:	00656475 	rsbeq	r6, r5, r5, ror r4
    85b8:	726f7000 	rsbvc	r7, pc, #0
    85bc:	00632e74 	rsbeq	r2, r3, r4, ror lr
    85c0:	5f000001 	svcpl	0x00000001
    85c4:	61666564 	cmnvs	r6, r4, ror #10
    85c8:	5f746c75 	svcpl	0x00746c75
    85cc:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
    85d0:	00682e73 	rsbeq	r2, r8, r3, ror lr
    85d4:	5f000002 	svcpl	0x00000002
    85d8:	69647473 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
    85dc:	682e746e 	stmdavs	lr!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
    85e0:	00000300 	andeq	r0, r0, r0, lsl #6
    85e4:	6a6f7270 	bvs	1be4fac <__RAM_SIZE+0x1ae4fac>
    85e8:	73666564 	cmnvc	r6, #100, 10	; 0x19000000
    85ec:	0400682e 	streq	r6, [r0], #-2094	; 0xfffff7d2
    85f0:	6f700000 	svcvs	0x00700000
    85f4:	616d7472 	smcvs	55106	; 0xd742
    85f8:	636f7263 	cmnvs	pc, #805306374	; 0x30000006
    85fc:	6f6d6d6f 	svcvs	0x006d6d6f
    8600:	00682e6e 	rsbeq	r2, r8, lr, ror #28
    8604:	70000001 	andvc	r0, r0, r1
    8608:	6174726f 	cmnvs	r4, pc, ror #4
    860c:	682e6d73 	stmdavs	lr!, {r0, r1, r4, r5, r6, r8, sl, fp, sp, lr}
    8610:	00000100 	andeq	r0, r0, r0, lsl #2
    8614:	6b736174 	blvs	1ce0bec <__RAM_SIZE+0x1be0bec>
    8618:	0400682e 	streq	r6, [r0], #-2094	; 0xfffff7d2
    861c:	05000000 	streq	r0, [r0, #-0]
    8620:	02050001 	andeq	r0, r5, #1
    8624:	100034f4 	strdne	r3, [r0], -r4
    8628:	0106a603 	tsteq	r6, r3, lsl #12
    862c:	052f0505 	streq	r0, [pc, #-1285]!	; 812f <__HEAP_SIZE+0x712f>
    8630:	05010617 	streq	r0, [r1, #-1559]	; 0xfffff9e9
    8634:	0535062e 	ldreq	r0, [r5, #-1582]!	; 0xfffff9d2
    8638:	00301305 	eorseq	r1, r0, r5, lsl #6
    863c:	03010402 	movweq	r0, #5122	; 0x1402
    8640:	0a050109 	beq	148a6c <__RAM_SIZE+0x48a6c>
    8644:	01040200 	mrseq	r0, R12_usr
    8648:	05017703 	streq	r7, [r1, #-1795]	; 0xfffff8fd
    864c:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    8650:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    8654:	0402000a 	streq	r0, [r2], #-10
    8658:	01052001 	tsteq	r5, r1
    865c:	022e0a03 	eoreq	r0, lr, #12288	; 0x3000
    8660:	01010003 	tsteq	r1, r3
    8664:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    8668:	00350c02 	eorseq	r0, r5, r2, lsl #24
    866c:	04af0310 	strteq	r0, [pc], #784	; 8674 <__HEAP_SIZE+0x7674>
    8670:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    8674:	13210609 			; <UNDEFINED> instruction: 0x13210609
    8678:	061f0515 			; <UNDEFINED> instruction: 0x061f0515
    867c:	2e0b0501 	cfsh32cs	mvfx0, mvfx11, #1
    8680:	43060905 	movwmi	r0, #26885	; 0x6905
    8684:	05322f21 	ldreq	r2, [r2, #-3873]!	; 0xfffff0df
    8688:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
    868c:	0d052e0b 	stceq	14, cr2, [r5, #-44]	; 0xffffffd4
    8690:	05052406 	streq	r2, [r5, #-1030]	; 0xfffffbfa
    8694:	01bf0306 			; <UNDEFINED> instruction: 0x01bf0306
    8698:	060d0520 	streq	r0, [sp], -r0, lsr #10
    869c:	207ec903 	rsbscs	ip, lr, r3, lsl #18
    86a0:	01062705 	tsteq	r6, r5, lsl #14
    86a4:	51060d05 	tstpl	r6, r5, lsl #26
    86a8:	01062505 	tsteq	r6, r5, lsl #10
    86ac:	22060d05 	andcs	r0, r6, #320	; 0x140
    86b0:	01060f05 	tsteq	r6, r5, lsl #30
    86b4:	22061105 	andcs	r1, r6, #1073741825	; 0x40000001
    86b8:	01062905 	tsteq	r6, r5, lsl #18
    86bc:	060d0520 	streq	r0, [sp], -r0, lsr #10
    86c0:	05200903 	streq	r0, [r0, #-2307]!	; 0xfffff6fd
    86c4:	05010667 	streq	r0, [r1, #-1639]	; 0xfffff999
    86c8:	1b052051 	blne	150814 <__RAM_SIZE+0x50814>
    86cc:	060d052e 	streq	r0, [sp], -lr, lsr #10
    86d0:	06130530 			; <UNDEFINED> instruction: 0x06130530
    86d4:	4a0f0501 	bmi	3c9ae0 <__RAM_SIZE+0x2c9ae0>
    86d8:	3e061105 	adfccs	f1, f6, f5
    86dc:	01062705 	tsteq	r6, r5, lsl #14
    86e0:	67061105 	strvs	r1, [r6, -r5, lsl #2]
    86e4:	01061f05 	tsteq	r6, r5, lsl #30
    86e8:	3f060d05 	svccc	0x00060d05
    86ec:	01061f05 	tsteq	r6, r5, lsl #30
    86f0:	052e0f05 	streq	r0, [lr, #-3845]!	; 0xfffff0fb
    86f4:	05300611 	ldreq	r0, [r0, #-1553]!	; 0xfffff9ef
    86f8:	0501061f 	streq	r0, [r1, #-1567]	; 0xfffff9e1
    86fc:	0524060d 	streq	r0, [r4, #-1549]!	; 0xfffff9f3
    8700:	05010627 	streq	r0, [r1, #-1575]	; 0xfffff9d9
    8704:	0540060d 	strbeq	r0, [r0, #-1549]	; 0xfffff9f3
    8708:	05010630 	streq	r0, [r1, #-1584]	; 0xfffff9d0
    870c:	0531060d 	ldreq	r0, [r1, #-1549]!	; 0xfffff9f3
    8710:	05010627 	streq	r0, [r1, #-1575]	; 0xfffff9d9
    8714:	0551060d 	ldrbeq	r0, [r1, #-1549]	; 0xfffff9f3
    8718:	0d05133e 	stceq	3, cr1, [r5, #-248]	; 0xffffff08
    871c:	060f0514 			; <UNDEFINED> instruction: 0x060f0514
    8720:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    8724:	05212f22 	streq	r2, [r1, #-3874]!	; 0xfffff0de
    8728:	0d05313d 	stfeqs	f3, [r5, #-244]	; 0xffffff0c
    872c:	342f2117 	strtcc	r2, [pc], #-279	; 8734 <__HEAP_SIZE+0x7734>
    8730:	09032f21 	stmdbeq	r3, {r0, r5, r8, r9, sl, fp, sp}
    8734:	0627052e 	strteq	r0, [r7], -lr, lsr #10
    8738:	060d0501 	streq	r0, [sp], -r1, lsl #10
    873c:	0613054d 	ldreq	r0, [r3], -sp, asr #10
    8740:	200f0501 	andcs	r0, pc, r1, lsl #10
    8744:	3e061105 	adfccs	f1, f6, f5
    8748:	064b0517 			; <UNDEFINED> instruction: 0x064b0517
    874c:	2e5f0501 	cdpcs	5, 5, cr0, cr15, cr1, {0}
    8750:	053c5d05 	ldreq	r5, [ip, #-3333]!	; 0xfffff2fb
    8754:	2705204b 	strcs	r2, [r5, -fp, asr #32]
    8758:	06110520 	ldreq	r0, [r1], -r0, lsr #10
    875c:	062d0526 	strteq	r0, [sp], -r6, lsr #10
    8760:	2e130501 	cfmul32cs	mvfx0, mvfx3, mvfx1
    8764:	02004d05 	andeq	r4, r0, #320	; 0x140
    8768:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
    876c:	05300615 	ldreq	r0, [r0, #-1557]!	; 0xfffff9eb
    8770:	0501062b 	streq	r0, [r1, #-1579]	; 0xfffff9d5
    8774:	05230611 	streq	r0, [r3, #-1553]!	; 0xfffff9ef
    8778:	0501062b 	streq	r0, [r1, #-1579]	; 0xfffff9d5
    877c:	06410611 			; <UNDEFINED> instruction: 0x06410611
    8780:	060d0501 	streq	r0, [sp], -r1, lsl #10
    8784:	05012d03 	streq	r2, [r1, #-3331]	; 0xfffff2fd
    8788:	05010630 	streq	r0, [r1, #-1584]	; 0xfffff9d0
    878c:	054b060d 	strbeq	r0, [fp, #-1549]	; 0xfffff9f3
    8790:	05010627 	streq	r0, [r1, #-1575]	; 0xfffff9d9
    8794:	05310611 	ldreq	r0, [r1, #-1553]!	; 0xfffff9ef
    8798:	05010645 	streq	r0, [r1, #-1605]	; 0xfffff9bb
    879c:	0d053c2b 	stceq	12, cr3, [r5, #-172]	; 0xffffff54
    87a0:	20150306 	andscs	r0, r5, r6, lsl #6
    87a4:	06050531 			; <UNDEFINED> instruction: 0x06050531
    87a8:	06110522 	ldreq	r0, [r1], -r2, lsr #10
    87ac:	207fbe03 	rsbscs	fp, pc, r3, lsl #28
    87b0:	01062905 	tsteq	r6, r5, lsl #18
    87b4:	03061105 	movweq	r1, #24837	; 0x6105
    87b8:	44053c12 	strmi	r3, [r5], #-3090	; 0xfffff3ee
    87bc:	2e050106 	adfcss	f0, f5, f6
    87c0:	0611054a 	ldreq	r0, [r1], -sl, asr #10
    87c4:	06270524 	strteq	r0, [r7], -r4, lsr #10
    87c8:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    87cc:	064f0532 			; <UNDEFINED> instruction: 0x064f0532
    87d0:	2e6b0501 	cdpcs	5, 6, cr0, cr11, cr1, {0}
    87d4:	202b0520 	eorcs	r0, fp, r0, lsr #10
    87d8:	00080220 	andeq	r0, r8, r0, lsr #4
    87dc:	01050101 	tsteq	r5, r1, lsl #2
    87e0:	20020500 	andcs	r0, r2, r0, lsl #10
    87e4:	03100036 	tsteq	r0, #54	; 0x36
    87e8:	0501068a 	streq	r0, [r1, #-1674]	; 0xfffff976
    87ec:	21051609 	tstcs	r5, r9, lsl #12
    87f0:	09050106 	stmdbeq	r5, {r1, r2, r8}
    87f4:	29054b06 	stmdbcs	r5, {r1, r2, r8, r9, fp, lr}
    87f8:	09050106 	stmdbeq	r5, {r1, r2, r8}
    87fc:	24054b06 	strcs	r4, [r5], #-2822	; 0xfffff4fa
    8800:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    8804:	3c0c0306 	stccc	3, cr0, [ip], {6}
    8808:	01061f05 	tsteq	r6, r5, lsl #30
    880c:	4b060505 	blmi	189c28 <__RAM_SIZE+0x89c28>
    8810:	01062805 	tsteq	r6, r5, lsl #16
    8814:	31060505 	tstcc	r6, r5, lsl #10
    8818:	01061f05 	tsteq	r6, r5, lsl #30
    881c:	3d060505 	cfstr32cc	mvfx0, [r6, #-20]	; 0xffffffec
    8820:	01061f05 	tsteq	r6, r5, lsl #30
    8824:	022f0105 	eoreq	r0, pc, #1073741825	; 0x40000001
    8828:	01010008 	tsteq	r1, r8
    882c:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    8830:	00365c02 	eorseq	r5, r6, r2, lsl #24
    8834:	07ce0310 	bfieq	r0, r0, #6, #9
    8838:	14050501 	strne	r0, [r5], #-1281	; 0xfffffaff
    883c:	01061b05 	tsteq	r6, r5, lsl #22
    8840:	6a060505 	bvs	189c5c <__RAM_SIZE+0x89c5c>
    8844:	0601052f 	streq	r0, [r1], -pc, lsr #10
    8848:	0001022f 	andeq	r0, r1, pc, lsr #4
    884c:	01050101 	tsteq	r5, r1, lsl #2
    8850:	74020500 	strvc	r0, [r2], #-1280	; 0xfffffb00
    8854:	03100036 	tsteq	r0, #54	; 0x36
    8858:	050107da 	streq	r0, [r1, #-2010]	; 0xfffff826
    885c:	052f2105 	streq	r2, [pc, #-261]!	; 875f <__HEAP_SIZE+0x775f>
    8860:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    8864:	2f4e0605 	svccs	0x004e0605
    8868:	2f060105 	svccs	0x00060105
    886c:	01000302 	tsteq	r0, r2, lsl #6
    8870:	00010501 	andeq	r0, r1, r1, lsl #10
    8874:	36900205 	ldrcc	r0, [r0], r5, lsl #4
    8878:	e6031000 	str	r1, [r3], -r0
    887c:	26050107 	strcs	r0, [r5], -r7, lsl #2
    8880:	13050521 	movwne	r0, #21793	; 0x5521
    8884:	01061605 	tsteq	r6, r5, lsl #12
    8888:	4c060505 	cfstr32mi	mvfx0, [r6], {5}
    888c:	01061b05 	tsteq	r6, r5, lsl #22
    8890:	05200705 	streq	r0, [r0, #-1797]!	; 0xfffff8fb
    8894:	09052401 	stmdbeq	r5, {r0, sl, sp}
    8898:	01051e06 	tsteq	r5, r6, lsl #28
    889c:	03023e06 	movweq	r3, #11782	; 0x2e06
    88a0:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    88a4:	02050001 	andeq	r0, r5, #1
    88a8:	100036ac 	andne	r3, r0, ip, lsr #13
    88ac:	0107f203 	tsteq	r7, r3, lsl #4	; <UNPREDICTABLE>
    88b0:	14210505 	strtne	r0, [r1], #-1285	; 0xfffffafb
    88b4:	01061605 	tsteq	r6, r5, lsl #12
    88b8:	3d061505 	cfstr32cc	mvfx1, [r6, #-20]	; 0xffffffec
    88bc:	05150905 	ldreq	r0, [r5, #-2309]	; 0xfffff6fb
    88c0:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
    88c4:	29052e0b 	stmdbcs	r5, {r0, r1, r3, r9, sl, fp, sp}
    88c8:	0d052206 	sfmeq	f2, 4, [r5, #-24]	; 0xffffffe8
    88cc:	06230514 			; <UNDEFINED> instruction: 0x06230514
    88d0:	061c0501 	ldreq	r0, [ip], -r1, lsl #10
    88d4:	1505056a 	strne	r0, [r5, #-1386]	; 0xfffffa96
    88d8:	3d060105 	stfccs	f0, [r6, #-20]	; 0xffffffec
    88dc:	01010020 	tsteq	r1, r0, lsr #32
    88e0:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    88e4:	0036ce02 	eorseq	ip, r6, r2, lsl #28
    88e8:	08890310 	stmeq	r9, {r4, r8, r9}
    88ec:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    88f0:	0f030605 	svceq	0x00030605
    88f4:	01090320 	tsteq	r9, r0, lsr #6
    88f8:	060a0516 			; <UNDEFINED> instruction: 0x060a0516
    88fc:	06050501 	streq	r0, [r5], -r1, lsl #10
    8900:	06110521 	ldreq	r0, [r1], -r1, lsr #10
    8904:	06050501 	streq	r0, [r5], -r1, lsl #10
    8908:	06010530 			; <UNDEFINED> instruction: 0x06010530
    890c:	2e00db03 	vmlacs.f64	d13, d0, d3
    8910:	03060d05 	movweq	r0, #27909	; 0x6d05
    8914:	052f2066 	streq	r2, [pc, #-102]!	; 88b6 <__HEAP_SIZE+0x78b6>
    8918:	01170324 	tsteq	r7, r4, lsr #6
    891c:	14060105 	strne	r0, [r6], #-261	; 0xfffffefb
    8920:	01000102 	tsteq	r0, r2, lsl #2
    8924:	00050501 	andeq	r0, r5, r1, lsl #10
    8928:	36e40205 	strbtcc	r0, [r4], r5, lsl #4
    892c:	85031000 	strhi	r1, [r3, #-0]
    8930:	0106010c 	tsteq	r6, ip, lsl #2
    8934:	03060d05 	movweq	r0, #27909	; 0x6d05
    8938:	0513201b 	ldreq	r2, [r3, #-27]	; 0xffffffe5
    893c:	0501061b 	streq	r0, [r1, #-1563]	; 0xfffff9e5
    8940:	134b060d 	movtne	r0, #46605	; 0xb60d
    8944:	01061b05 	tsteq	r6, r5, lsl #22
    8948:	2f060d05 	svccs	0x00060d05
    894c:	061d0513 			; <UNDEFINED> instruction: 0x061d0513
    8950:	201b0501 	andscs	r0, fp, r1, lsl #10
    8954:	2f060d05 	svccs	0x00060d05
    8958:	061b0513 			; <UNDEFINED> instruction: 0x061b0513
    895c:	060d0501 	streq	r0, [sp], -r1, lsl #10
    8960:	1b05134b 	blne	14d694 <__RAM_SIZE+0x4d694>
    8964:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    8968:	05134b06 	ldreq	r4, [r3, #-2822]	; 0xfffff4fa
    896c:	0501061b 	streq	r0, [r1, #-1563]	; 0xfffff9e5
    8970:	134b060d 	movtne	r0, #46605	; 0xb60d
    8974:	01061b05 	tsteq	r6, r5, lsl #22
    8978:	4b060d05 	blmi	18bd94 <__RAM_SIZE+0x8bd94>
    897c:	061b0513 			; <UNDEFINED> instruction: 0x061b0513
    8980:	060d0501 	streq	r0, [sp], -r1, lsl #10
    8984:	1b05132f 	blne	14d648 <__RAM_SIZE+0x4d648>
    8988:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
    898c:	132f060d 			; <UNDEFINED> instruction: 0x132f060d
    8990:	01061b05 	tsteq	r6, r5, lsl #22
    8994:	4b060d05 	blmi	18bdb0 <__RAM_SIZE+0x8bdb0>
    8998:	061b0513 			; <UNDEFINED> instruction: 0x061b0513
    899c:	060d0501 	streq	r0, [sp], -r1, lsl #10
    89a0:	1b05134b 	blne	14d6d4 <__RAM_SIZE+0x4d6d4>
    89a4:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    89a8:	05134b06 	ldreq	r4, [r3, #-2822]	; 0xfffff4fa
    89ac:	0501061b 	streq	r0, [r1, #-1563]	; 0xfffff9e5
    89b0:	134b060d 	movtne	r0, #46605	; 0xb60d
    89b4:	01061b05 	tsteq	r6, r5, lsl #22
    89b8:	4b060d05 	blmi	18bdd4 <__RAM_SIZE+0x8bdd4>
    89bc:	061b0513 			; <UNDEFINED> instruction: 0x061b0513
    89c0:	060d0501 	streq	r0, [sp], -r1, lsl #10
    89c4:	1b05134b 	blne	14d6f8 <__RAM_SIZE+0x4d6f8>
    89c8:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    89cc:	05134b06 	ldreq	r4, [r3, #-2822]	; 0xfffff4fa
    89d0:	0501061b 	streq	r0, [r1, #-1563]	; 0xfffff9e5
    89d4:	134b060d 	movtne	r0, #46605	; 0xb60d
    89d8:	01061b05 	tsteq	r6, r5, lsl #22
    89dc:	03060905 	movweq	r0, #26885	; 0x6905
    89e0:	05052e0b 	streq	r2, [r5, #-3595]	; 0xfffff1f5
    89e4:	02201306 	eoreq	r1, r0, #402653184	; 0x18000000
    89e8:	01010005 	tsteq	r1, r5
    89ec:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    89f0:	00377402 	eorseq	r7, r7, r2, lsl #8
    89f4:	0cd50310 	ldcleq	3, cr0, [r5], {16}
    89f8:	03090501 	movweq	r0, #38145	; 0x9501
    89fc:	4d05200f 	stcmi	0, cr2, [r5, #-60]	; 0xffffffc4
    8a00:	05010f03 	streq	r0, [r1, #-3843]	; 0xfffff0fd
    8a04:	05051353 	streq	r1, [r5, #-851]	; 0xfffffcad
    8a08:	0100d003 	tsteq	r0, r3
    8a0c:	01061805 	tsteq	r6, r5, lsl #16
    8a10:	83060505 	movwhi	r0, #25861	; 0x6505
    8a14:	01061805 	tsteq	r6, r5, lsl #16
    8a18:	67060505 	strvs	r0, [r6, -r5, lsl #10]
    8a1c:	01061805 	tsteq	r6, r5, lsl #16
    8a20:	03060505 	movweq	r0, #25861	; 0x6505
    8a24:	05313c0b 	ldreq	r3, [r1, #-3083]!	; 0xfffff3f5
    8a28:	05010617 	streq	r0, [r1, #-1559]	; 0xfffff9e9
    8a2c:	09030605 	stmdbeq	r3, {r0, r2, r9, sl}
    8a30:	312f362e 			; <UNDEFINED> instruction: 0x312f362e
    8a34:	13060105 	movwne	r0, #24837	; 0x6105
    8a38:	01000402 	tsteq	r0, r2, lsl #8
    8a3c:	00010501 	andeq	r0, r1, r1, lsl #10
    8a40:	00000205 	andeq	r0, r0, r5, lsl #4
    8a44:	ee030000 	cdp	0, 0, cr0, cr3, cr0, {0}
    8a48:	3005010d 	andcc	r0, r5, sp, lsl #2
    8a4c:	06010515 			; <UNDEFINED> instruction: 0x06010515
    8a50:	00010213 	andeq	r0, r1, r3, lsl r2
    8a54:	01050101 	tsteq	r5, r1, lsl #2
    8a58:	00020500 	andeq	r0, r2, r0, lsl #10
    8a5c:	03000000 	movweq	r0, #0
    8a60:	05010faf 	streq	r0, [r1, #-4015]	; 0xfffff051
    8a64:	17131305 	ldrne	r1, [r3, -r5, lsl #6]
    8a68:	06070530 			; <UNDEFINED> instruction: 0x06070530
    8a6c:	22110501 	andscs	r0, r1, #4194304	; 0x400000
    8a70:	06050532 			; <UNDEFINED> instruction: 0x06050532
    8a74:	06010523 	streq	r0, [r1], -r3, lsr #10
    8a78:	00010213 	andeq	r0, r1, r3, lsl r2
    8a7c:	023b0101 	eorseq	r0, fp, #1073741824	; 0x40000000
    8a80:	00030000 	andeq	r0, r3, r0
    8a84:	00000149 	andeq	r0, r0, r9, asr #2
    8a88:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
    8a8c:	0101000d 	tsteq	r1, sp
    8a90:	00000101 	andeq	r0, r0, r1, lsl #2
    8a94:	00000100 	andeq	r0, r0, r0, lsl #2
    8a98:	2f2e2e01 	svccs	0x002e2e01
    8a9c:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    8aa0:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    8aa4:	6f747262 	svcvs	0x00747262
    8aa8:	72462f73 	subvc	r2, r6, #460	; 0x1cc
    8aac:	54526565 	ldrbpl	r6, [r2], #-1381	; 0xfffffa9b
    8ab0:	702f534f 	eorvc	r5, pc, pc, asr #6
    8ab4:	6174726f 	cmnvs	r4, pc, ror #4
    8ab8:	2f656c62 	svccs	0x00656c62
    8abc:	2f434347 	svccs	0x00434347
    8ac0:	5f4d5241 	svcpl	0x004d5241
    8ac4:	33334d43 	teqcc	r3, #4288	; 0x10c0
    8ac8:	5a544e5f 	bpl	151c44c <__RAM_SIZE+0x141c44c>
    8acc:	6e6f6e2f 	cdpvs	14, 6, cr6, cr15, cr15, {1}
    8ad0:	6365735f 	cmnvs	r5, #2080374785	; 0x7c000001
    8ad4:	00657275 	rsbeq	r7, r5, r5, ror r2
    8ad8:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
    8adc:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    8ae0:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
    8ae4:	705c6e6f 	subsvc	r6, ip, pc, ror #28
    8ae8:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
    8aec:	615c6d61 	cmpvs	ip, r1, ror #26
    8af0:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
    8af4:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
    8af8:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
    8afc:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    8b00:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    8b04:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    8b08:	2e30312d 	rsfcssp	f3, f0, #5.0
    8b0c:	30322d33 	eorscc	r2, r2, r3, lsr sp
    8b10:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
    8b14:	72615c30 	rsbvc	r5, r1, #48, 24	; 0x3000
    8b18:	6f6e2d6d 	svcvs	0x006e2d6d
    8b1c:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    8b20:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
    8b24:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    8b28:	5c656475 	cfstrdpl	mvd6, [r5], #-468	; 0xfffffe2c
    8b2c:	6863616d 	stmdavs	r3!, {r0, r2, r3, r5, r6, r8, sp, lr}^
    8b30:	00656e69 	rsbeq	r6, r5, r9, ror #28
    8b34:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
    8b38:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    8b3c:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
    8b40:	705c6e6f 	subsvc	r6, ip, pc, ror #28
    8b44:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
    8b48:	615c6d61 	cmpvs	ip, r1, ror #26
    8b4c:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
    8b50:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
    8b54:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
    8b58:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    8b5c:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    8b60:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    8b64:	2e30312d 	rsfcssp	f3, f0, #5.0
    8b68:	30322d33 	eorscc	r2, r2, r3, lsr sp
    8b6c:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
    8b70:	72615c30 	rsbvc	r5, r1, #48, 24	; 0x3000
    8b74:	6f6e2d6d 	svcvs	0x006e2d6d
    8b78:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    8b7c:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
    8b80:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    8b84:	5c656475 	cfstrdpl	mvd6, [r5], #-468	; 0xfffffe2c
    8b88:	00737973 	rsbseq	r7, r3, r3, ror r9
    8b8c:	726f7000 	rsbvc	r7, pc, #0
    8b90:	6d736174 	ldfvse	f6, [r3, #-464]!	; 0xfffffe30
    8b94:	0100632e 	tsteq	r0, lr, lsr #6
    8b98:	645f0000 	ldrbvs	r0, [pc], #-0	; 8ba0 <__HEAP_SIZE+0x7ba0>
    8b9c:	75616665 	strbvc	r6, [r1, #-1637]!	; 0xfffff99b
    8ba0:	745f746c 	ldrbvc	r7, [pc], #-1132	; 8ba8 <__HEAP_SIZE+0x7ba8>
    8ba4:	73657079 	cmnvc	r5, #121	; 0x79
    8ba8:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    8bac:	735f0000 	cmpvc	pc, #0
    8bb0:	6e696474 	mcrvs	4, 3, r6, cr9, cr4, {3}
    8bb4:	00682e74 	rsbeq	r2, r8, r4, ror lr
    8bb8:	70000003 	andvc	r0, r0, r3
    8bbc:	6d74726f 	lfmvs	f7, 2, [r4, #-444]!	; 0xfffffe44
    8bc0:	6f726361 	svcvs	0x00726361
    8bc4:	6d6d6f63 	stclvs	15, cr6, [sp, #-396]!	; 0xfffffe74
    8bc8:	682e6e6f 	stmdavs	lr!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}
    8bcc:	00000100 	andeq	r0, r0, r0, lsl #2
    8bd0:	00050500 	andeq	r0, r5, r0, lsl #10
    8bd4:	37b40205 	ldrcc	r0, [r4, r5, lsl #4]!
    8bd8:	f9031000 			; <UNDEFINED> instruction: 0xf9031000
    8bdc:	09050100 	stmdbeq	r5, {r8}
    8be0:	06050513 			; <UNDEFINED> instruction: 0x06050513
    8be4:	2e081303 	cdpcs	3, 0, cr1, cr8, cr3, {0}
    8be8:	01000302 	tsteq	r0, r2, lsl #6
    8bec:	00010501 	andeq	r0, r1, r1, lsl #10
    8bf0:	00000205 	andeq	r0, r0, r5, lsl #4
    8bf4:	93030000 	movwls	r0, #12288	; 0x3000
    8bf8:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    8bfc:	06010513 			; <UNDEFINED> instruction: 0x06010513
    8c00:	00820c03 	addeq	r0, r2, r3, lsl #24
    8c04:	01050101 	tsteq	r5, r1, lsl #2
    8c08:	00020500 	andeq	r0, r2, r0, lsl #10
    8c0c:	03000000 	movweq	r0, #0
    8c10:	050101a4 	streq	r0, [r1, #-420]	; 0xfffffe5c
    8c14:	01051305 	tsteq	r5, r5, lsl #6
    8c18:	740a0306 	strvc	r0, [sl], #-774	; 0xfffffcfa
    8c1c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    8c20:	02050001 	andeq	r0, r5, #1
    8c24:	00000000 	andeq	r0, r0, r0
    8c28:	0101b303 	tsteq	r1, r3, lsl #6
    8c2c:	05130505 	ldreq	r0, [r3, #-1285]	; 0xfffffafb
    8c30:	0a030601 	beq	ca43c <__HEAP_SIZE+0xc943c>
    8c34:	01010074 	tsteq	r1, r4, ror r0
    8c38:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    8c3c:	0037e002 	eorseq	lr, r7, r2
    8c40:	01c20310 	biceq	r0, r2, r0, lsl r3
    8c44:	13050501 	movwne	r0, #21761	; 0x5501
    8c48:	03060105 	movweq	r0, #24837	; 0x6105
    8c4c:	0302c810 	movweq	ip, #10256	; 0x2810
    8c50:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    8c54:	02050001 	andeq	r0, r5, #1
    8c58:	10003800 	andne	r3, r0, r0, lsl #16
    8c5c:	0101d703 	tsteq	r1, r3, lsl #14
    8c60:	05130505 	ldreq	r0, [r3, #-1285]	; 0xfffffafb
    8c64:	0c030601 	stceq	6, cr0, [r3], {1}
    8c68:	010100ac 	smlatbeq	r1, ip, r0, r0
    8c6c:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    8c70:	00381602 	eorseq	r1, r8, r2, lsl #12
    8c74:	01e80310 	mvneq	r0, r0, lsl r3
    8c78:	13050501 	movwne	r0, #21761	; 0x5501
    8c7c:	03060105 	movweq	r0, #24837	; 0x6105
    8c80:	0100740a 	tsteq	r0, sl, lsl #8
    8c84:	00050501 	andeq	r0, r5, r1, lsl #10
    8c88:	38240205 	stmdacc	r4!, {r0, r2, r9}
    8c8c:	eb031000 	bl	ccc94 <__HEAP_SIZE+0xcbc94>
    8c90:	09050102 	stmdbeq	r5, {r1, r8}
    8c94:	06050513 			; <UNDEFINED> instruction: 0x06050513
    8c98:	22022d03 	andcs	r2, r2, #3, 26	; 0xc0
    8c9c:	00020201 	andeq	r0, r2, r1, lsl #4
    8ca0:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    8ca4:	6c020500 	cfstr32vs	mvfx0, [r2], {-0}
    8ca8:	03100038 	tsteq	r0, #56	; 0x38
    8cac:	050103c7 	streq	r0, [r1, #-967]	; 0xfffffc39
    8cb0:	05051309 	streq	r1, [r5, #-777]	; 0xfffffcf7
    8cb4:	900b0306 	andls	r0, fp, r6, lsl #6
    8cb8:	01000302 	tsteq	r0, r2, lsl #6
    8cbc:	00008201 	andeq	r8, r0, r1, lsl #4
    8cc0:	36000300 	strcc	r0, [r0], -r0, lsl #6
    8cc4:	02000000 	andeq	r0, r0, #0
    8cc8:	0d0efb01 	vstreq	d15, [lr, #-4]
    8ccc:	01010100 	mrseq	r0, (UNDEF: 17)
    8cd0:	00000001 	andeq	r0, r0, r1
    8cd4:	01000001 	tsteq	r0, r1
    8cd8:	74732f2e 	ldrbtvc	r2, [r3], #-3886	; 0xfffff0d2
    8cdc:	75747261 	ldrbvc	r7, [r4, #-609]!	; 0xfffffd9f
    8ce0:	63672f70 	cmnvs	r7, #112, 30	; 0x1c0
    8ce4:	73000063 	movwvc	r0, #99	; 0x63
    8ce8:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
    8cec:	415f7075 	cmpmi	pc, r5, ror r0	; <UNPREDICTABLE>
    8cf0:	4d434d52 	stclmi	13, cr4, [r3, #-328]	; 0xfffffeb8
    8cf4:	732e3333 			; <UNDEFINED> instruction: 0x732e3333
    8cf8:	00000100 	andeq	r0, r0, r0, lsl #2
    8cfc:	02050000 	andeq	r0, r5, #0
    8d00:	100038a4 	andne	r3, r0, r4, lsr #17
    8d04:	0100d303 	tsteq	r0, r3, lsl #6
    8d08:	2f213021 	svccs	0x00213021
    8d0c:	23213036 			; <UNDEFINED> instruction: 0x23213036
    8d10:	21212121 			; <UNDEFINED> instruction: 0x21212121
    8d14:	21212321 			; <UNDEFINED> instruction: 0x21212321
    8d18:	21222121 			; <UNDEFINED> instruction: 0x21222121
    8d1c:	21232123 			; <UNDEFINED> instruction: 0x21232123
    8d20:	21212121 			; <UNDEFINED> instruction: 0x21212121
    8d24:	21212123 			; <UNDEFINED> instruction: 0x21212123
    8d28:	03232122 			; <UNDEFINED> instruction: 0x03232122
    8d2c:	09032e0e 	stmdbeq	r3, {r1, r2, r3, r9, sl, fp, sp}
    8d30:	7faf0320 	svcvc	0x00af0320
    8d34:	0c03312e 	stfeqs	f3, [r3], {46}	; 0x2e
    8d38:	15032f2e 	strne	r2, [r3, #-3886]	; 0xfffff0d2
    8d3c:	02022f2e 	andeq	r2, r2, #46, 30	; 0xb8
    8d40:	80010100 	andhi	r0, r1, r0, lsl #2
    8d44:	03000000 	movweq	r0, #0
    8d48:	00004e00 	andeq	r4, r0, r0, lsl #28
    8d4c:	fb010200 	blx	49556 <__HEAP_SIZE+0x48556>
    8d50:	01000d0e 	tsteq	r0, lr, lsl #26
    8d54:	00010101 	andeq	r0, r1, r1, lsl #2
    8d58:	00010000 	andeq	r0, r1, r0
    8d5c:	2e2e0100 	sufcse	f0, f6, f0
    8d60:	2f2e2e2f 	svccs	0x002e2e2f
    8d64:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 8cb4 <__HEAP_SIZE+0x7cb4>
    8d68:	74756269 	ldrbtvc	r6, [r5], #-617	; 0xfffffd97
    8d6c:	2f736c69 	svccs	0x00736c69
    8d70:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
    8d74:	75642d74 	strbvc	r2, [r4, #-3444]!	; 0xfffff28c
    8d78:	632f706d 			; <UNDEFINED> instruction: 0x632f706d
    8d7c:	632f7570 			; <UNDEFINED> instruction: 0x632f7570
    8d80:	6574726f 	ldrbvs	r7, [r4, #-623]!	; 0xfffffd91
    8d84:	336d2d78 	cmncc	sp, #120, 26	; 0x1e00
    8d88:	66000033 			; <UNDEFINED> instruction: 0x66000033
    8d8c:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
    8d90:	6363672d 	cmnvs	r3, #11796480	; 0xb40000
    8d94:	0100732e 	tsteq	r0, lr, lsr #6
    8d98:	00000000 	andeq	r0, r0, r0
    8d9c:	39140205 	ldmdbcc	r4, {r0, r2, r9}
    8da0:	19031000 	stmdbne	r3, {ip}
    8da4:	21212101 			; <UNDEFINED> instruction: 0x21212101
    8da8:	222f2221 	eorcs	r2, pc, #268435458	; 0x10000002
    8dac:	2121212f 			; <UNDEFINED> instruction: 0x2121212f
    8db0:	222f2f22 	eorcs	r2, pc, #34, 30	; 0x88
    8db4:	2122312f 			; <UNDEFINED> instruction: 0x2122312f
    8db8:	03212f21 			; <UNDEFINED> instruction: 0x03212f21
    8dbc:	03302064 	teqeq	r0, #100	; 0x64
    8dc0:	02022e17 	andeq	r2, r2, #368	; 0x170
    8dc4:	Address 0x00008dc4 is out of bounds.


Disassembly of section .debug_str:

00000000 <.debug_str>:
    __asm volatile ( "mrs %0, ipsr" : "=r" ( ulCurrentInterrupt )::"memory" );
       0:	69755f5f 	ldmdbvs	r5!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, fp, ip, lr}^
    if( ulCurrentInterrupt == 0 )
       4:	5f38746e 	svcpl	0x0038746e
        xReturn = pdFALSE;
       8:	61660074 	smcvs	24580	; 0x6004
}
       c:	5f746c75 	svcpl	0x00746c75
      10:	706d7564 	rsbvc	r7, sp, r4, ror #10
      14:	5f6d625f 	svcpl	0x006d625f
        if(ch == '\n' || it >= size) {
      18:	63617473 	cmnvs	r1, #1929379840	; 0x73000000
}
      1c:	74735f6b 	ldrbtvc	r5, [r3], #-3947	; 0xfffff095
      20:	00747261 	rsbseq	r7, r4, r1, ror #4
      24:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
      28:	616d0074 	smcvs	53252	; 0xd004
      2c:	745f6e69 	ldrbvc	r6, [pc], #-3689	; 34 <__STACKSEAL_SIZE+0x34>
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
      30:	5f6b7361 	svcpl	0x006b7361
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
      34:	72746e65 	rsbsvc	r6, r4, #1616	; 0x650
      38:	54760079 	ldrbtpl	r0, [r6], #-121	; 0xffffff87
      3c:	536b7361 	cmnpl	fp, #-2080374783	; 0x84000001
      40:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
        BaseType_t xReturn = pdFAIL;
      44:	65686353 	strbvs	r6, [r8, #-851]!	; 0xfffffcad
    }
      48:	656c7564 	strbvs	r7, [ip, #-1380]!	; 0xfffffa9c
                pxBlock = heapPROTECT_BLOCK_POINTER( pxBlock->pxNextFreeBlock );
      4c:	5f5f0072 	svcpl	0x005f0072
            while( pxBlock != pxEnd )
      50:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
      54:	2e005f5f 	mcrcs	15, 0, r5, cr0, cr15, {2}
                if( pxBlock->xBlockSize > xMaxSize )
      58:	7070612f 	rsbsvc	r6, r0, pc, lsr #2
      5c:	6163696c 	cmnvs	r3, ip, ror #18
                if( pxBlock->xBlockSize < xMinSize )
      60:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
                    xMinSize = pxBlock->xBlockSize;
      64:	69616d2f 	stmdbvs	r1!, {r0, r1, r2, r3, r5, r8, sl, fp, sp, lr}^
      68:	00632e6e 	rsbeq	r2, r3, lr, ror #28
      6c:	74726175 	ldrbtvc	r6, [r2], #-373	; 0xfffffe8b
      70:	696e695f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, sp, lr}^
      74:	6f630074 	svcvs	0x00630074
      78:	65746e75 	ldrbvs	r6, [r4, #-3701]!	; 0xfffff18b
      7c:	5f5f0072 	svcpl	0x005f0072
            prvUnlockQueue( pxQueue );
      80:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	; 0xfffffe78
            ( void ) xTaskResumeAll();
      84:	5f6e6974 	svcpl	0x006e6974
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
      88:	73747570 	cmnvc	r4, #112, 10	; 0x1c000000
      8c:	736e7500 	cmnvc	lr, #0, 10
      90:	656e6769 	strbvs	r6, [lr, #-1897]!	; 0xfffff897
        taskENTER_CRITICAL();
      94:	68632064 	stmdavs	r3!, {r2, r5, r6, sp}^
            if( uxSemaphoreCount > ( UBaseType_t ) 0 )
      98:	74007261 	strvc	r7, [r0], #-609	; 0xfffffd9f
                if( xTicksToWait == ( TickType_t ) 0 )
      9c:	33747365 	cmncc	r4, #-1811939327	; 0x94000001
      a0:	72617000 	rsbvc	r7, r1, #0
                else if( xEntryTimeSet == pdFALSE )
      a4:	74656d61 	strbtvc	r6, [r5], #-3425	; 0xfffff29f
        taskEXIT_CRITICAL();
      a8:	00737265 	rsbseq	r7, r3, r5, ror #4
        vTaskSuspendAll();
      ac:	726f6873 	rsbvc	r6, pc, #7536640	; 0x730000
        prvLockQueue( pxQueue );
      b0:	6e752074 	mrcvs	0, 3, r2, cr5, cr4, {3}
      b4:	6e676973 			; <UNDEFINED> instruction: 0x6e676973
      b8:	69206465 	stmdbvs	r0!, {r0, r2, r5, r6, sl, sp, lr}
      bc:	4700746e 	strmi	r7, [r0, -lr, ror #8]
      c0:	4320554e 			; <UNDEFINED> instruction: 0x4320554e
      c4:	31203731 			; <UNDEFINED> instruction: 0x31203731
      c8:	2e332e30 	mrccs	14, 1, r2, cr3, cr0, {1}
      cc:	30322031 	eorscc	r2, r2, r1, lsr r0
        if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
      d0:	38303132 	ldmdacc	r0!, {r1, r4, r5, r8, ip, sp}
      d4:	28203432 	stmdacs	r0!, {r1, r4, r5, sl, ip, sp}
      d8:	656c6572 	strbvs	r6, [ip, #-1394]!	; 0xfffffa8e
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
      dc:	29657361 	stmdbcs	r5!, {r0, r5, r6, r8, r9, ip, sp, lr}^
      e0:	636d2d20 	cmnvs	sp, #32, 26	; 0x800
                    if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
      e4:	633d7570 	teqvs	sp, #112, 10	; 0x1c000000
      e8:	6574726f 	ldrbvs	r7, [r4, #-623]!	; 0xfffffd91
                vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
      ec:	336d2d78 	cmncc	sp, #120, 26	; 0x1e00
      f0:	6d2d2033 	stcvs	0, cr2, [sp, #-204]!	; 0xffffff34
                prvUnlockQueue( pxQueue );
      f4:	3d757066 	ldclcc	0, cr7, [r5, #-408]!	; 0xfffffe68
      f8:	35767066 	ldrbcc	r7, [r6, #-102]!	; 0xffffff9a
                if( xTaskResumeAll() == pdFALSE )
      fc:	2d70732d 	ldclcs	3, cr7, [r0, #-180]!	; 0xffffff4c
     100:	20363164 	eorscs	r3, r6, r4, ror #2
                    taskYIELD_WITHIN_API();
     104:	6c666d2d 	stclvs	13, cr6, [r6], #-180	; 0xffffff4c
                    if( xInheritanceOccurred != pdFALSE )
     108:	2d74616f 	ldfcse	f6, [r4, #-444]!	; 0xfffffe44
                return errQUEUE_EMPTY;
     10c:	3d696261 	sfmcc	f6, 2, [r9, #-388]!	; 0xfffffe7c
                        taskENTER_CRITICAL();
     110:	64726168 	ldrbtvs	r6, [r2], #-360	; 0xfffffe98
                            uxHighestWaitingPriority = prvGetDisinheritPriorityAfterTimeout( pxQueue );
     114:	746d2d20 	strbtvc	r2, [sp], #-3360	; 0xfffff2e0
     118:	626d7568 	rsbvs	r7, sp, #104, 10	; 0x1a000000
                            vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
     11c:	616d2d20 	cmnvs	sp, r0, lsr #26
                        taskEXIT_CRITICAL();
     120:	3d686372 	stclcc	3, cr6, [r8, #-456]!	; 0xfffffe38
     124:	766d7261 	strbtvc	r7, [sp], -r1, ror #4
     128:	2e6d2d38 	mcrcs	13, 3, r2, cr13, cr8, {1}
     12c:	6e69616d 	powvsez	f6, f1, #5.0
     130:	7073642b 	rsbsvc	r6, r3, fp, lsr #8
     134:	2070662b 	rsbscs	r6, r0, fp, lsr #12
     138:	2d20672d 	stccs	7, cr6, [r0, #-180]!	; 0xffffff4c
     13c:	61776467 	cmnvs	r7, r7, ror #8
     140:	322d6672 	eorcc	r6, sp, #119537664	; 0x7200000
     144:	674f2d20 	strbvs	r2, [pc, -r0, lsr #26]
     148:	64662d20 	strbtvs	r2, [r6], #-3360	; 0xfffff2e0
     14c:	2d617461 	cfstrdcs	mvd7, [r1, #-388]!	; 0xfffffe7c
     150:	74636573 	strbtvc	r6, [r3], #-1395	; 0xfffffa8d
     154:	736e6f69 	cmnvc	lr, #420	; 0x1a4
     158:	66662d20 	strbtvs	r2, [r6], -r0, lsr #26
     15c:	74636e75 	strbtvc	r6, [r3], #-3701	; 0xfffff18b
     160:	2d6e6f69 	stclcs	15, cr6, [lr, #-420]!	; 0xfffffe5c
     164:	74636573 	strbtvc	r6, [r3], #-1395	; 0xfffffa8d
     168:	736e6f69 	cmnvc	lr, #420	; 0x1a4
     16c:	6e662d20 	cdpvs	13, 6, cr2, cr6, cr0, {1}
     170:	78652d6f 	stmdavc	r5!, {r0, r1, r2, r3, r5, r6, r8, sl, fp, sp}^
     174:	74706563 	ldrbtvc	r6, [r0], #-1379	; 0xfffffa9d
     178:	736e6f69 	cmnvc	lr, #420	; 0x1a4
     17c:	72614800 	rsbvc	r4, r1, #0, 16
     180:	75614664 	strbvc	r4, [r1, #-1636]!	; 0xfffff99c
     184:	485f746c 	ldmdami	pc, {r2, r3, r5, r6, sl, ip, sp, lr}^	; <UNPREDICTABLE>
     188:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
     18c:	4c5f7265 	lfmmi	f7, 2, [pc], {101}	; 0x65
     190:	6e656765 	cdpvs	7, 6, cr6, cr5, cr5, {3}
     194:	5f007963 	svcpl	0x00007963
     198:	6975625f 	ldmdbvs	r5!, {r0, r1, r2, r3, r4, r6, r9, sp, lr}^
     19c:	6e69746c 	cdpvs	4, 6, cr7, cr9, cr12, {3}
     1a0:	6d656d5f 	stclvs	13, cr6, [r5, #-380]!	; 0xfffffe84
     1a4:	00746573 	rsbseq	r6, r4, r3, ror r5
     1a8:	555c3a43 	ldrbpl	r3, [ip, #-2627]	; 0xfffff5bd
     1ac:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
     1b0:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
     1b4:	635c6e6f 	cmpvs	ip, #1776	; 0x6f0
     1b8:	5c65646f 	cfstrdpl	mvd6, [r5], #-444	; 0xfffffe44
     1bc:	68746967 	ldmdavs	r4!, {r0, r1, r2, r5, r6, r8, fp, sp, lr}^
     1c0:	715c6275 	cmpvc	ip, r5, ror r2
     1c4:	2d756d65 	ldclcs	13, cr6, [r5, #-404]!	; 0xfffffe6c
     1c8:	756d6973 	strbvc	r6, [sp, #-2419]!	; 0xfffff68d
     1cc:	6f74616c 	svcvs	0x0074616c
     1d0:	6f625c72 	svcvs	0x00625c72
     1d4:	73647261 	cmnvc	r4, #268435462	; 0x10000006
     1d8:	73706d5c 	cmnvc	r0, #92, 26	; 0x1700
     1dc:	6e612d32 	mcrvs	13, 3, r2, cr1, cr2, {1}
     1e0:	5c353035 	ldcpl	0, cr3, [r5], #-212	; 0xffffff2c
     1e4:	65657246 	strbvs	r7, [r5, #-582]!	; 0xfffffdba
     1e8:	534f5452 	movtpl	r5, #62546	; 0xf452
     1ec:	69616d00 	stmdbvs	r1!, {r8, sl, fp, sp, lr}^
     1f0:	7374006e 	cmnvc	r4, #110	; 0x6e
     1f4:	7361546b 	cmnvc	r1, #1795162112	; 0x6b000000
     1f8:	6e6f436b 	cdpvs	3, 6, cr4, cr15, cr11, {3}
     1fc:	6c6f7274 	sfmvs	f7, 2, [pc], #-464	; 34 <__STACKSEAL_SIZE+0x34>
     200:	636f6c42 	cmnvs	pc, #16896	; 0x4200
     204:	6375006b 	cmnvs	r5, #107	; 0x6b
     208:	70616548 	rsbvc	r6, r1, r8, asr #10
     20c:	73657400 	cmnvc	r5, #0, 8
     210:	6c003474 	cfstrsvs	mvf3, [r0], {116}	; 0x74
     214:	20676e6f 	rsbcs	r6, r7, pc, ror #28
     218:	676e6f6c 	strbvs	r6, [lr, -ip, ror #30]!
     21c:	736e7520 	cmnvc	lr, #32, 10	; 0x8000000
     220:	656e6769 	strbvs	r6, [lr, #-1897]!	; 0xfffff897
     224:	6e692064 	cdpvs	0, 6, cr2, cr9, cr4, {3}
     228:	616d0074 	smcvs	53252	; 0xd004
     22c:	745f6e69 	ldrbvc	r6, [pc], #-3689	; 234 <__STACKSEAL_SIZE+0x234>
     230:	006b7361 	rsbeq	r7, fp, r1, ror #6
     234:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
     238:	75645f74 	strbvc	r5, [r4, #-3956]!	; 0xfffff08c
     23c:	635f706d 	cmpvs	pc, #109	; 0x6d
     240:	736c6c61 	cmnvc	ip, #24832	; 0x6100
     244:	6b636174 	blvs	18d881c <__RAM_SIZE+0x17d881c>
     248:	6e6f6c00 	cdpvs	12, 6, cr6, cr15, cr0, {0}
     24c:	6f642067 	svcvs	0x00642067
     250:	656c6275 	strbvs	r6, [ip, #-629]!	; 0xfffffd8b
     254:	6e6f6c00 	cdpvs	12, 6, cr6, cr15, cr0, {0}
     258:	6f6c2067 	svcvs	0x006c2067
     25c:	6920676e 	stmdbvs	r0!, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}
     260:	4400746e 	strmi	r7, [r0], #-1134	; 0xfffffb92
     264:	75616665 	strbvc	r6, [r1, #-1637]!	; 0xfffff99b
     268:	485f746c 	ldmdami	pc, {r2, r3, r5, r6, sl, ip, sp, lr}^	; <UNPREDICTABLE>
     26c:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
     270:	66007265 	strvs	r7, [r0], -r5, ror #4
     274:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
     278:	6d75645f 	cfldrdvs	mvd6, [r5, #-380]!	; 0xfffffe84
     27c:	6e755f70 	mrcvs	15, 3, r5, cr5, cr0, {3}
     280:	67696c61 	strbvs	r6, [r9, -r1, ror #24]!
     284:	6166006e 	cmnvs	r6, lr, rrx
     288:	5f746c75 	svcpl	0x00746c75
     28c:	706d7564 	rsbvc	r7, sp, r4, ror #10
     290:	696e695f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, sp, lr}^
     294:	616d0074 	smcvs	53252	; 0xd004
     298:	745f6e69 	ldrbvc	r6, [pc], #-3689	; 2a0 <__STACKSEAL_SIZE+0x2a0>
     29c:	5f6b7361 	svcpl	0x006b7361
     2a0:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
     2a4:	6f687300 	svcvs	0x00687300
     2a8:	69207472 	stmdbvs	r0!, {r1, r4, r5, r6, sl, ip, sp, lr}
     2ac:	5400746e 	strpl	r7, [r0], #-1134	; 0xfffffb92
     2b0:	486b7361 	stmdami	fp!, {r0, r5, r6, r8, r9, ip, sp, lr}^
     2b4:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
     2b8:	00745f65 	rsbseq	r5, r4, r5, ror #30
     2bc:	73615476 	cmnvc	r1, #1979711488	; 0x76000000
     2c0:	6c65446b 	cfstrdvs	mvd4, [r5], #-428	; 0xfffffe54
     2c4:	66007961 	strvs	r7, [r0], -r1, ror #18
     2c8:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
     2cc:	6d75645f 	cfldrdvs	mvd6, [r5, #-380]!	; 0xfffffe84
     2d0:	6d625f70 	stclvs	15, cr5, [r2, #-448]!	; 0xfffffe40
     2d4:	6174735f 	cmnvs	r4, pc, asr r3
     2d8:	705f6b63 	subsvc	r6, pc, r3, ror #22
     2dc:	746e696f 	strbtvc	r6, [lr], #-2415	; 0xfffff691
     2e0:	73657400 	cmnvc	r5, #0, 8
     2e4:	74003074 	strvc	r3, [r0], #-116	; 0xffffff8c
     2e8:	31747365 	cmncc	r4, r5, ror #6
     2ec:	73657400 	cmnvc	r5, #0, 8
     2f0:	78003274 	stmdavc	r0, {r2, r4, r5, r6, r9, ip, sp}
     2f4:	6b736154 	blvs	1cd884c <__RAM_SIZE+0x1bd884c>
     2f8:	61657243 	cmnvs	r5, r3, asr #4
     2fc:	74006574 	strvc	r6, [r0], #-1396	; 0xfffffa8c
     300:	35747365 	ldrbcc	r7, [r4, #-869]!	; 0xfffffc9b
     304:	612f2e00 			; <UNDEFINED> instruction: 0x612f2e00
     308:	696c7070 	stmdbvs	ip!, {r4, r5, r6, ip, sp, lr}^
     30c:	69746163 	ldmdbvs	r4!, {r0, r1, r5, r6, r8, sp, lr}^
     310:	732f6e6f 			; <UNDEFINED> instruction: 0x732f6e6f
     314:	65747379 	ldrbvs	r7, [r4, #-889]!	; 0xfffffc87
     318:	52415f6d 	subpl	r5, r1, #436	; 0x1b4
     31c:	334d434d 	movtcc	r4, #54093	; 0xd34d
     320:	00632e33 	rsbeq	r2, r3, r3, lsr lr
     324:	52495453 	subpl	r5, r9, #1392508928	; 0x53000000
     328:	49434400 	stmdbmi	r3, {sl, lr}^
     32c:	4341564d 	movtmi	r5, #5709	; 0x164d
     330:	494c4300 	stmdbmi	ip, {r8, r9, lr}^
     334:	43005244 	movwmi	r5, #580	; 0x244
     338:	44495550 	strbmi	r5, [r9], #-1360	; 0xfffffab0
     33c:	49504200 	ldmdbmi	r0, {r9, lr}^
     340:	004c4c41 	subeq	r4, ip, r1, asr #24
     344:	505f4449 	subspl	r4, pc, r9, asr #8
     348:	44005246 	strmi	r5, [r0], #-582	; 0xfffffdba
     34c:	53494343 	movtpl	r4, #37699	; 0x9343
     350:	79530057 	ldmdbvc	r3, {r0, r1, r2, r4, r6}^
     354:	6d657473 	cfstrdvs	mvd7, [r5, #-460]!	; 0xfffffe34
     358:	65726f43 	ldrbvs	r6, [r2, #-3907]!	; 0xfffff0bd
     35c:	636f6c43 	cmnvs	pc, #17152	; 0x4300
     360:	6470556b 	ldrbtvs	r5, [r0], #-1387	; 0xfffffa95
     364:	00657461 	rsbeq	r7, r5, r1, ror #8
     368:	4d5f4449 	cfldrdmi	mvd4, [pc, #-292]	; 24c <__STACKSEAL_SIZE+0x24c>
     36c:	0052464d 	subseq	r4, r2, sp, asr #12
     370:	41494349 	cmpmi	r9, r9, asr #6
     374:	00554c4c 	subseq	r4, r5, ip, asr #24
     378:	52414642 	subpl	r4, r1, #69206016	; 0x4200000
     37c:	755f5f00 	ldrbvc	r5, [pc, #-3840]	; fffff484 <__StackTop+0xc7eff484>
     380:	33746e69 	cmncc	r4, #1680	; 0x690
     384:	00745f32 	rsbseq	r5, r4, r2, lsr pc
     388:	5f424353 	svcpl	0x00424353
     38c:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
     390:	5f444900 	svcpl	0x00444900
     394:	00524644 	subseq	r4, r2, r4, asr #12
     398:	4d434344 	stclmi	3, cr4, [r3, #-272]	; 0xfffffef0
     39c:	00434156 	subeq	r4, r3, r6, asr r1
     3a0:	45535343 	ldrbmi	r5, [r3, #-835]	; 0xfffffcbd
     3a4:	5300524c 	movwpl	r5, #588	; 0x24c
     3a8:	65747379 	ldrbvs	r7, [r4, #-889]!	; 0xfffffc87
     3ac:	726f436d 	rsbvc	r4, pc, #-1275068415	; 0xb4000001
     3b0:	6f6c4365 	svcvs	0x006c4365
     3b4:	44006b63 	strmi	r6, [r0], #-2915	; 0xfffff49d
     3b8:	564d4343 	strbpl	r4, [sp], -r3, asr #6
     3bc:	5f005541 	svcpl	0x00005541
     3c0:	6365565f 	cmnvs	r5, #99614720	; 0x5f00000
     3c4:	73726f74 	cmnvc	r2, #116, 30	; 0x1d0
     3c8:	4f545600 	svcmi	0x00545600
     3cc:	46530052 			; <UNDEFINED> instruction: 0x46530052
     3d0:	49005241 	stmdbmi	r0, {r0, r6, r9, ip, lr}
     3d4:	00525343 	subseq	r5, r2, r3, asr #6
     3d8:	43524941 	cmpmi	r2, #1064960	; 0x104000
     3dc:	46440052 			; <UNDEFINED> instruction: 0x46440052
     3e0:	4d005253 	sfmmi	f5, 4, [r0, #-332]	; 0xfffffeb4
     3e4:	5241464d 	subpl	r4, r1, #80740352	; 0x4d00000
     3e8:	53434300 	movtpl	r4, #13056	; 0x3300
     3ec:	00524449 	subseq	r4, r2, r9, asr #8
     3f0:	52534643 	subspl	r4, r3, #70254592	; 0x4300000
     3f4:	41534e00 	cmpmi	r3, r0, lsl #28
     3f8:	4d005243 	sfmmi	f5, 4, [r0, #-268]	; 0xfffffef4
     3fc:	30524656 	subscc	r4, r2, r6, asr r6
     400:	46564d00 	ldrbmi	r4, [r6], -r0, lsl #26
     404:	4d003152 	stfmis	f3, [r0, #-328]	; 0xfffffeb8
     408:	32524656 	subscc	r4, r2, #90177536	; 0x5600000
     40c:	53455200 	movtpl	r5, #20992	; 0x5200
     410:	45565245 	ldrbmi	r5, [r6, #-581]	; 0xfffffdbb
     414:	52003344 	andpl	r3, r0, #68, 6	; 0x10000001
     418:	52455345 	subpl	r5, r5, #335544321	; 0x14000001
     41c:	34444556 	strbcc	r4, [r4], #-1366	; 0xfffffaaa
     420:	53455200 	movtpl	r5, #20992	; 0x5200
     424:	45565245 	ldrbmi	r5, [r6, #-581]	; 0xfffffdbb
     428:	52003544 	andpl	r3, r0, #68, 10	; 0x11000000
     42c:	52455345 	subpl	r5, r5, #335544321	; 0x14000001
     430:	36444556 			; <UNDEFINED> instruction: 0x36444556
     434:	53455200 	movtpl	r5, #20992	; 0x5200
     438:	45565245 	ldrbmi	r5, [r6, #-581]	; 0xfffffdbb
     43c:	53003744 	movwpl	r3, #1860	; 0x744
     440:	65747379 	ldrbvs	r7, [r4, #-889]!	; 0xfffffc87
     444:	696e496d 	stmdbvs	lr!, {r0, r2, r3, r5, r6, r8, fp, lr}^
     448:	48530074 	ldmdami	r3, {r2, r4, r5, r6}^
     44c:	00525343 	subseq	r5, r2, r3, asr #6
     450:	49434344 	stmdbmi	r3, {r2, r6, r8, r9, lr}^
     454:	4341564d 	movtmi	r5, #5709	; 0x164d
     458:	49434900 	stmdbmi	r3, {r8, fp, lr}^
     45c:	5541564d 	strbpl	r5, [r1, #-1613]	; 0xfffff9b3
     460:	49434400 	stmdbmi	r3, {sl, lr}^
     464:	41005753 	tstmi	r0, r3, asr r7
     468:	00525346 	subseq	r5, r2, r6, asr #6
     46c:	52534653 	subspl	r4, r3, #87031808	; 0x5300000
     470:	43434400 	movtmi	r4, #13312	; 0x3400
     474:	53005753 	movwpl	r5, #1875	; 0x753
     478:	00525048 	subseq	r5, r2, r8, asr #32
     47c:	54434556 	strbpl	r4, [r3], #-1366	; 0xfffffaaa
     480:	545f524f 	ldrbpl	r5, [pc], #-591	; 488 <__STACKSEAL_SIZE+0x488>
     484:	454c4241 	strbmi	r4, [ip, #-577]	; 0xfffffdbf
     488:	7079545f 	rsbsvc	r5, r9, pc, asr r4
     48c:	44490065 	strbmi	r0, [r9], #-101	; 0xffffff9b
     490:	5246415f 	subpl	r4, r6, #-1073741801	; 0xc0000017
     494:	5f444900 	svcpl	0x00444900
     498:	52415349 	subpl	r5, r1, #603979777	; 0x24000001
     49c:	41504300 	cmpmi	r0, r0, lsl #6
     4a0:	48005243 	stmdami	r0, {r0, r1, r6, r9, ip, lr}
     4a4:	00525346 	subseq	r5, r2, r6, asr #6
     4a8:	65615f5f 	strbvs	r5, [r1, #-3935]!	; 0xfffff0a1
     4ac:	5f696261 	svcpl	0x00696261
     4b0:	00643269 	rsbeq	r3, r4, r9, ror #4
     4b4:	31776f70 	cmncc	r7, r0, ror pc
     4b8:	78650030 	stmdavc	r5!, {r4, r5}^
     4bc:	6f003270 	svcvs	0x00003270
     4c0:	665f7475 			; <UNDEFINED> instruction: 0x665f7475
     4c4:	775f7463 	ldrbvc	r7, [pc, -r3, ror #8]
     4c8:	00706172 	rsbseq	r6, r0, r2, ror r1
     4cc:	76707865 	ldrbtvc	r7, [r0], -r5, ror #16
     4d0:	5f006c61 	svcpl	0x00006c61
     4d4:	5f74756f 	svcpl	0x0074756f
     4d8:	66667562 	strbtvs	r7, [r6], -r2, ror #10
     4dc:	76007265 	strvc	r7, [r0], -r5, ror #4
     4e0:	6e697270 	mcrvs	2, 3, r7, cr9, cr0, {3}
     4e4:	73006674 	movwvc	r6, #1652	; 0x674
     4e8:	5f657a69 	svcpl	0x00657a69
     4ec:	696d0074 	stmdbvs	sp!, {r2, r4, r5, r6}^
     4f0:	6469776e 	strbtvs	r7, [r9], #-1902	; 0xfffff892
     4f4:	5f006874 	svcpl	0x00006874
     4f8:	6165615f 	cmnvs	r5, pc, asr r1
     4fc:	645f6962 	ldrbvs	r6, [pc], #-2402	; 504 <__STACKSEAL_SIZE+0x504>
     500:	00766964 	rsbseq	r6, r6, r4, ror #18
     504:	6f74655f 	svcvs	0x0074655f
     508:	75700061 	ldrbvc	r0, [r0, #-97]!	; 0xffffff9f
     50c:	68635f74 	stmdavs	r3!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     510:	5f007261 	svcpl	0x00007261
     514:	5f74756f 	svcpl	0x0074756f
     518:	72616863 	rsbvc	r6, r1, #6488064	; 0x630000
     51c:	78616d00 	stmdavc	r1!, {r8, sl, fp, sp, lr}^
     520:	657a6973 	ldrbvs	r6, [sl, #-2419]!	; 0xfffff68d
     524:	6f687700 	svcvs	0x00687700
     528:	5f00656c 	svcpl	0x0000656c
     52c:	6165615f 	cmnvs	r5, pc, asr r1
     530:	645f6962 	ldrbvs	r6, [pc], #-2402	; 538 <__STACKSEAL_SIZE+0x538>
     534:	007a6932 	rsbseq	r6, sl, r2, lsr r9
     538:	63617266 	cmnvs	r1, #1610612742	; 0x60000006
     53c:	6c617600 	stclvs	6, cr7, [r1], #-0
     540:	5f006575 	svcpl	0x00006575
     544:	5f74756f 	svcpl	0x0074756f
     548:	00746366 	rsbseq	r6, r4, r6, ror #6
     54c:	65615f5f 	strbvs	r5, [r1, #-3935]!	; 0xfffff0a1
     550:	5f696261 	svcpl	0x00696261
     554:	69753264 	ldmdbvs	r5!, {r2, r5, r6, r9, ip, sp}^
     558:	7473007a 	ldrbtvc	r0, [r3], #-122	; 0xffffff86
     55c:	5f747261 	svcpl	0x00747261
     560:	00786469 	rsbseq	r6, r8, r9, ror #8
     564:	70746366 	rsbsvc	r6, r4, r6, ror #6
     568:	746e6972 	strbtvc	r6, [lr], #-2418	; 0xfffff68e
     56c:	656e0066 	strbvs	r0, [lr, #-102]!	; 0xffffff9a
     570:	69746167 	ldmdbvs	r4!, {r0, r1, r2, r5, r6, r8, sp, lr}^
     574:	5f006576 	svcpl	0x00006576
     578:	6165615f 	cmnvs	r5, pc, asr r1
     57c:	645f6962 	ldrbvs	r6, [pc], #-2402	; 584 <__STACKSEAL_SIZE+0x584>
     580:	00646461 	rsbeq	r6, r4, r1, ror #8
     584:	61765f5f 	cmnvs	r6, pc, asr pc
     588:	73696c5f 	cmnvc	r9, #24320	; 0x5f00
     58c:	2e2e0074 	mcrcs	0, 1, r0, cr14, cr4, {3}
     590:	726f432f 	rsbvc	r4, pc, #-1140850688	; 0xbc000000
     594:	72532f65 	subsvc	r2, r3, #404	; 0x194
     598:	72702f63 	rsbsvc	r2, r0, #396	; 0x18c
     59c:	66746e69 	ldrbtvs	r6, [r4], -r9, ror #28
     5a0:	5f00632e 	svcpl	0x0000632e
     5a4:	616f746e 	cmnvs	pc, lr, ror #8
     5a8:	726f665f 	rsbvc	r6, pc, #99614720	; 0x5f00000
     5ac:	0074616d 	rsbseq	r6, r4, sp, ror #2
     5b0:	6f74665f 	svcvs	0x0074665f
     5b4:	765f0061 	ldrbvc	r0, [pc], -r1, rrx
     5b8:	72706e73 	rsbsvc	r6, r0, #1840	; 0x730
     5bc:	66746e69 	ldrbtvs	r6, [r4], -r9, ror #28
     5c0:	756f5f00 	strbvc	r5, [pc, #-3840]!	; fffff6c8 <__StackTop+0xc7eff6c8>
     5c4:	756e5f74 	strbvc	r5, [lr, #-3956]!	; 0xfffff08c
     5c8:	6f006c6c 	svcvs	0x00006c6c
     5cc:	665f7475 			; <UNDEFINED> instruction: 0x665f7475
     5d0:	745f7463 	ldrbvc	r7, [pc], #-1123	; 5d8 <__STACKSEAL_SIZE+0x5d8>
     5d4:	00657079 	rsbeq	r7, r5, r9, ror r0
     5d8:	65615f5f 	strbvs	r5, [r1, #-3935]!	; 0xfffff0a1
     5dc:	5f696261 	svcpl	0x00696261
     5e0:	706d6364 	rsbvc	r6, sp, r4, ror #6
     5e4:	5f006567 	svcpl	0x00006567
     5e8:	616f746e 	cmnvs	pc, lr, ror #8
     5ec:	6e6f6c5f 	mcrvs	12, 3, r6, cr15, cr15, {2}
     5f0:	70730067 	rsbsvc	r0, r3, r7, rrx
     5f4:	746e6972 	strbtvc	r6, [lr], #-2418	; 0xfffff68e
     5f8:	5f5f0066 	svcpl	0x005f0066
     5fc:	62616561 	rsbvs	r6, r1, #406847488	; 0x18400000
     600:	69755f69 	ldmdbvs	r5!, {r0, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
     604:	66006432 			; <UNDEFINED> instruction: 0x66006432
     608:	7367616c 	cmnvc	r7, #108, 2
     60c:	615f5f00 	cmpvs	pc, r0, lsl #30
     610:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     614:	6d63645f 	cfstrdvs	mvd6, [r3, #-380]!	; 0xfffffe84
     618:	00746770 	rsbseq	r6, r4, r0, ror r7
     61c:	6c78616d 	ldfvse	f6, [r8], #-436	; 0xfffffe4c
     620:	5f006e65 	svcpl	0x00006e65
     624:	696f7461 	stmdbvs	pc!, {r0, r5, r6, sl, ip, sp, lr}^	; <UNPREDICTABLE>
     628:	74735f00 	ldrbtvc	r5, [r3], #-3840	; 0xfffff100
     62c:	656c6e72 	strbvs	r6, [ip, #-3698]!	; 0xfffff18e
     630:	00735f6e 	rsbseq	r5, r3, lr, ror #30
     634:	70615f5f 	rsbvc	r5, r1, pc, asr pc
     638:	615f5f00 	cmpvs	pc, r0, lsl #30
     63c:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     640:	756d645f 	strbvc	r6, [sp, #-1119]!	; 0xfffffba1
     644:	425f006c 	subsmi	r0, pc, #108	; 0x6c
     648:	006c6f6f 	rsbeq	r6, ip, pc, ror #30
     64c:	69755f5f 	ldmdbvs	r5!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, fp, ip, lr}^
     650:	3436746e 	ldrtcc	r7, [r6], #-1134	; 0xfffffb92
     654:	5f00745f 	svcpl	0x0000745f
     658:	645f7369 	ldrbvs	r7, [pc], #-873	; 660 <__STACKSEAL_SIZE+0x660>
     65c:	74696769 	strbtvc	r6, [r9], #-1897	; 0xfffff897
     660:	6e6f6300 	cdpvs	3, 6, cr6, cr15, cr0, {0}
     664:	5f5f0076 	svcpl	0x005f0076
     668:	62616561 	rsbvs	r6, r1, #406847488	; 0x18400000
     66c:	63645f69 	cmnvs	r4, #420	; 0x1a4
     670:	7165706d 	cmnvc	r5, sp, rrx
     674:	755f5f00 	ldrbvc	r5, [pc, #-3840]	; fffff77c <__StackTop+0xc7eff77c>
     678:	70746e69 	rsbsvc	r6, r4, r9, ror #28
     67c:	745f7274 	ldrbvc	r7, [pc], #-628	; 684 <__STACKSEAL_SIZE+0x684>
     680:	61686300 	cmnvs	r8, r0, lsl #6
     684:	74636172 	strbtvc	r6, [r3], #-370	; 0xfffffe8e
     688:	5f007265 	svcpl	0x00007265
     68c:	5f74756f 	svcpl	0x0074756f
     690:	00766572 	rsbseq	r6, r6, r2, ror r5
     694:	65615f5f 	strbvs	r5, [r1, #-3935]!	; 0xfffff0a1
     698:	5f696261 	svcpl	0x00696261
     69c:	62757364 	rsbsvs	r7, r5, #100, 6	; 0x90000001
     6a0:	615f5f00 	cmpvs	pc, r0, lsl #30
     6a4:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     6a8:	646c755f 	strbtvs	r7, [ip], #-1375	; 0xfffffaa1
     6ac:	6f6d7669 	svcvs	0x006d7669
     6b0:	5f5f0064 	svcpl	0x005f0064
     6b4:	62616561 	rsbvs	r6, r1, #406847488	; 0x18400000
     6b8:	63645f69 	cmnvs	r4, #420	; 0x1a4
     6bc:	656c706d 	strbvs	r7, [ip, #-109]!	; 0xffffff93
     6c0:	74756f00 	ldrbtvc	r6, [r5], #-3840	; 0xfffff100
     6c4:	7463665f 	strbtvc	r6, [r3], #-1631	; 0xfffff9a1
     6c8:	6172775f 	cmnvs	r2, pc, asr r7
     6cc:	79745f70 	ldmdbvc	r4!, {r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     6d0:	70006570 	andvc	r6, r0, r0, ror r5
     6d4:	00636572 	rsbeq	r6, r3, r2, ror r5
     6d8:	64697766 	strbtvs	r7, [r9], #-1894	; 0xfffff89a
     6dc:	5f006874 	svcpl	0x00006874
     6e0:	756e675f 	strbvc	r6, [lr, #-1887]!	; 0xfffff8a1
     6e4:	61765f63 	cmnvs	r6, r3, ror #30
     6e8:	73696c5f 	cmnvc	r9, #24320	; 0x5f00
     6ec:	5f5f0074 	svcpl	0x005f0074
     6f0:	62616561 	rsbvs	r6, r1, #406847488	; 0x18400000
     6f4:	63645f69 	cmnvs	r4, #420	; 0x1a4
     6f8:	746c706d 	strbtvc	r7, [ip], #-109	; 0xffffff93
     6fc:	746e5f00 	strbtvc	r5, [lr], #-3840	; 0xfffff100
     700:	6c5f616f 	ldfvse	f6, [pc], {111}	; 0x6f
     704:	5f676e6f 	svcpl	0x00676e6f
     708:	676e6f6c 	strbvs	r6, [lr, -ip, ror #30]!
     70c:	5f736900 	svcpl	0x00736900
     710:	70006c6c 	andvc	r6, r0, ip, ror #24
     714:	69636572 	stmdbvs	r3!, {r1, r4, r5, r6, r8, sl, sp, lr}^
     718:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
     71c:	66696400 	strbtvs	r6, [r9], -r0, lsl #8
     720:	2e2e0066 	cdpcs	0, 2, cr0, cr14, cr6, {3}
     724:	726f432f 	rsbvc	r4, pc, #-1140850688	; 0xbc000000
     728:	72532f65 	subsvc	r2, r3, #404	; 0x194
     72c:	61752f63 	cmnvs	r5, r3, ror #30
     730:	632e7472 			; <UNDEFINED> instruction: 0x632e7472
     734:	72747300 	rsbsvc	r7, r4, #0, 6
     738:	00676e69 	rsbeq	r6, r7, r9, ror #28
     73c:	74726175 	ldrbtvc	r6, [r2], #-373	; 0xfffffe8b
     740:	6365725f 	cmnvs	r5, #-268435451	; 0xf0000005
     744:	65670076 	strbvs	r0, [r7, #-118]!	; 0xffffff8a
     748:	61686374 	smcvs	34356	; 0x8634
     74c:	6e690072 	mcrvs	0, 3, r0, cr9, cr2, {3}
     750:	00786564 	rsbseq	r6, r8, r4, ror #10
     754:	74726175 	ldrbtvc	r6, [r2], #-373	; 0xfffffe8b
     758:	6e65735f 	mcrvs	3, 3, r7, cr5, cr15, {2}
     75c:	65670064 	strbvs	r0, [r7, #-100]!	; 0xffffff9c
     760:	68635f74 	stmdavs	r3!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     764:	66007261 	strvs	r7, [r0], -r1, ror #4
     768:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
     76c:	6d75645f 	cfldrdvs	mvd6, [r5, #-380]!	; 0xfffffe84
     770:	73705f70 	cmnvc	r0, #112, 30	; 0x1c0
     774:	74735f70 	ldrbtvc	r5, [r3], #-3952	; 0xfffff090
     778:	5f6b6361 	svcpl	0x006b6361
     77c:	73726170 	cmnvc	r2, #112, 2
     780:	73007265 	movwvc	r7, #613	; 0x265
     784:	6b636174 	blvs	18d8d5c <__RAM_SIZE+0x17d8d5c>
     788:	6973755f 	ldmdbvs	r3!, {r0, r1, r2, r3, r4, r6, r8, sl, ip, sp, lr}^
     78c:	6d5f676e 	ldclvs	7, cr6, [pc, #-440]	; 5dc <__STACKSEAL_SIZE+0x5dc>
     790:	66007073 			; <UNDEFINED> instruction: 0x66007073
     794:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
     798:	6d75645f 	cfldrdvs	mvd6, [r5, #-380]!	; 0xfffffe84
     79c:	78655f70 	stmdavc	r5!, {r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     7a0:	65725f63 	ldrbvs	r5, [r2, #-3939]!	; 0xfffff09d
     7a4:	6e727574 	mrcvs	5, 3, r7, cr2, cr4, {3}
     7a8:	63706f00 	cmnvs	r0, #0, 30
     7ac:	5f65646f 	svcpl	0x0065646f
     7b0:	625f7369 	subsvs	r7, pc, #-1543503871	; 0xa4000001
     7b4:	726f5f6c 	rsbvc	r5, pc, #108, 30	; 0x1b0
     7b8:	786c625f 	stmdavc	ip!, {r0, r1, r2, r3, r4, r6, r9, sp, lr}^
     7bc:	61747300 	cmnvs	r4, r0, lsl #6
     7c0:	665f6b63 	ldrbvs	r6, [pc], -r3, ror #22
     7c4:	656d6172 	strbvs	r6, [sp, #-370]!	; 0xfffffe8e
     7c8:	6600745f 			; <UNDEFINED> instruction: 0x6600745f
     7cc:	616d5f64 	cmnvs	sp, r4, ror #30
     7d0:	735f6e69 	cmpvc	pc, #1680	; 0x690
     7d4:	6b636174 	blvs	18d8dac <__RAM_SIZE+0x17d8dac>
     7d8:	6c75665f 	ldclvs	6, cr6, [r5], #-380	; 0xfffffe84
     7dc:	5f5f006c 	svcpl	0x005f006c
     7e0:	746e6975 	strbtvc	r6, [lr], #-2421	; 0xfffff68b
     7e4:	745f3631 	ldrbvc	r3, [pc], #-1585	; 7ec <__Vectors_Size+0x2c>
     7e8:	75616600 	strbvc	r6, [r1, #-1536]!	; 0xfffffa00
     7ec:	645f746c 	ldrbvs	r7, [pc], #-1132	; 7f4 <__Vectors_Size+0x34>
     7f0:	5f706d75 	svcpl	0x00706d75
     7f4:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
     7f8:	646e655f 	strbtvs	r6, [lr], #-1375	; 0xfffffaa1
     7fc:	735f0073 	cmpvc	pc, #115	; 0x73
     800:	63617473 	cmnvs	r1, #1929379840	; 0x73000000
     804:	6166006b 	cmnvs	r6, fp, rrx
     808:	5f746c75 	svcpl	0x00746c75
     80c:	706d7564 	rsbvc	r7, sp, r4, ror #10
     810:	63706f5f 	cmnvs	r0, #380	; 0x17c
     814:	0065646f 	rsbeq	r6, r5, pc, ror #8
     818:	7473655f 	ldrbtvc	r6, [r3], #-1375	; 0xfffffaa1
     81c:	006b6361 	rsbeq	r6, fp, r1, ror #6
     820:	75736572 	ldrbvc	r6, [r3, #-1394]!	; 0xfffffa8e
     824:	6600746c 	strvs	r7, [r0], -ip, ror #8
     828:	736d5f64 	cmnvc	sp, #100, 30	; 0x190
     82c:	74735f70 	ldrbtvc	r5, [r3], #-3952	; 0xfffff090
     830:	5f6b6361 	svcpl	0x006b6361
     834:	73726170 	cmnvc	r2, #112, 2
     838:	6c007265 	sfmvs	f7, 4, [r0], {101}	; 0x65
     83c:	656b6e69 	strbvs	r6, [fp, #-3689]!	; 0xfffff197
     840:	74730072 	ldrbtvc	r0, [r3], #-114	; 0xffffff8e
     844:	5f6b6361 	svcpl	0x006b6361
     848:	6d617266 	sfmvs	f7, 2, [r1, #-408]!	; 0xfffffe68
     84c:	616d5f65 	cmnvs	sp, r5, ror #30
     850:	6c61756e 	cfstr64vs	mvdx7, [r1], #-440	; 0xfffffe48
     854:	6f00745f 	svcvs	0x0000745f
     858:	646f6370 	strbtvs	r6, [pc], #-880	; 860 <__Vectors_Size+0xa0>
     85c:	6f003165 	svcvs	0x00003165
     860:	646f6370 	strbtvs	r6, [pc], #-880	; 868 <__Vectors_Size+0xa8>
     864:	73003265 	movwvc	r3, #613	; 0x265
     868:	6b636174 	blvs	18d8e40 <__RAM_SIZE+0x17d8e40>
     86c:	6172665f 	cmnvs	r2, pc, asr r6
     870:	6d5f656d 	cfldr64vs	mvdx6, [pc, #-436]	; 6c4 <__STACKSEAL_SIZE+0x6c4>
     874:	61756e61 	cmnvs	r5, r1, ror #28
     878:	7473006c 	ldrbtvc	r0, [r3], #-108	; 0xffffff94
     87c:	5f6b6361 	svcpl	0x006b6361
     880:	6d617266 	sfmvs	f7, 2, [r1, #-408]!	; 0xfffffe68
     884:	74730065 	ldrbtvc	r0, [r3], #-101	; 0xffffff9b
     888:	5f6b6361 	svcpl	0x006b6361
     88c:	6d617266 	sfmvs	f7, 2, [r1, #-408]!	; 0xfffffe68
     890:	78655f65 	stmdavc	r5!, {r0, r2, r5, r6, r8, r9, sl, fp, ip, lr}^
     894:	74706563 	ldrbtvc	r6, [r0], #-1379	; 0xfffffa9d
     898:	6600745f 			; <UNDEFINED> instruction: 0x6600745f
     89c:	73705f64 	cmnvc	r0, #100, 30	; 0x190
     8a0:	74735f70 	ldrbtvc	r5, [r3], #-3952	; 0xfffff090
     8a4:	5f6b6361 	svcpl	0x006b6361
     8a8:	73726170 	cmnvc	r2, #112, 2
     8ac:	2e007265 	cdpcs	2, 0, cr7, cr0, cr5, {3}
     8b0:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
     8b4:	2f2e2e2f 	svccs	0x002e2e2f
     8b8:	7562696c 	strbvc	r6, [r2, #-2412]!	; 0xfffff694
     8bc:	736c6974 	cmnvc	ip, #116, 18	; 0x1d0000
     8c0:	7561662f 	strbvc	r6, [r1, #-1583]!	; 0xfffff9d1
     8c4:	642d746c 	strtvs	r7, [sp], #-1132	; 0xfffffb94
     8c8:	2f706d75 	svccs	0x00706d75
     8cc:	2f637273 	svccs	0x00637273
     8d0:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
     8d4:	75642d74 	strbvc	r2, [r4, #-3444]!	; 0xfffff28c
     8d8:	632e706d 			; <UNDEFINED> instruction: 0x632e706d
     8dc:	75616600 	strbvc	r6, [r1, #-1536]!	; 0xfffffa00
     8e0:	645f746c 	ldrbvs	r7, [pc], #-1132	; 8e8 <__Vectors_Size+0x128>
     8e4:	5f706d75 	svcpl	0x00706d75
     8e8:	646e6168 	strbtvs	r6, [lr], #-360	; 0xfffffe98
     8ec:	0072656c 	rsbseq	r6, r2, ip, ror #10
     8f0:	6d5f6466 	cfldrdvs	mvd6, [pc, #-408]	; 760 <__STACKSEAL_SIZE+0x760>
     8f4:	5f6e6961 	svcpl	0x006e6961
     8f8:	63617473 	cmnvs	r1, #1929379840	; 0x73000000
     8fc:	61625f6b 	cmnvs	r2, fp, ror #30
     900:	66006573 			; <UNDEFINED> instruction: 0x66006573
     904:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
     908:	6d75645f 	cfldrdvs	mvd6, [r5, #-380]!	; 0xfffffe84
     90c:	73755f70 	cmnvc	r5, #112, 30	; 0x1c0
     910:	5f676e69 	svcpl	0x00676e69
     914:	0070736d 	rsbseq	r7, r0, sp, ror #6
     918:	6574735f 	ldrbvs	r7, [r4, #-863]!	; 0xfffffca1
     91c:	66007478 			; <UNDEFINED> instruction: 0x66007478
     920:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
     924:	6d75645f 	cfldrdvs	mvd6, [r5, #-380]!	; 0xfffffe84
     928:	65745f70 	ldrbvs	r5, [r4, #-3952]!	; 0xfffff090
     92c:	625f7478 	subsvs	r7, pc, #120, 8	; 0x78000000
     930:	00657361 	rsbeq	r7, r5, r1, ror #6
     934:	63617473 	cmnvs	r1, #1929379840	; 0x73000000
     938:	61705f6b 	cmnvs	r0, fp, ror #30
     93c:	72657372 	rsbvc	r7, r5, #-939524095	; 0xc8000001
     940:	5f00745f 	svcpl	0x0000745f
     944:	7465675f 	strbtvc	r6, [r5], #-1887	; 0xfffff8a1
     948:	50534d5f 	subspl	r4, r3, pc, asr sp
     94c:	61747300 	cmnvs	r4, r0, lsl #6
     950:	665f6b63 	ldrbvs	r6, [pc], -r3, ror #22
     954:	656d6172 	strbvs	r6, [sp, #-370]!	; 0xfffffe8e
     958:	6378655f 	cmnvs	r8, #398458880	; 0x17c00000
     95c:	00747065 	rsbseq	r7, r4, r5, rrx
     960:	6574655f 	ldrbvs	r6, [r4, #-1375]!	; 0xfffffaa1
     964:	61007478 	tstvs	r0, r8, ror r4
     968:	00726464 	rsbseq	r6, r2, r4, ror #8
     96c:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
     970:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
     974:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
     978:	6c697475 	cfstrdvs	mvd7, [r9], #-468	; 0xfffffe2c
     97c:	61662f73 	smcvs	25331	; 0x62f3
     980:	2d746c75 	ldclcs	12, cr6, [r4, #-468]!	; 0xfffffe2c
     984:	706d7564 	rsbvc	r7, sp, r4, ror #10
     988:	7570632f 	ldrbvc	r6, [r0, #-815]!	; 0xfffffcd1
     98c:	726f632f 	rsbvc	r6, pc, #-1140850688	; 0xbc000000
     990:	2d786574 	cfldr64cs	mvdx6, [r8, #-464]!	; 0xfffffe30
     994:	2f33336d 	svccs	0x0033336d
     998:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
     99c:	61682d74 	smcvs	33492	; 0x82d4
     9a0:	00632e6c 	rsbeq	r2, r3, ip, ror #28
     9a4:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
     9a8:	75645f74 	strbvc	r5, [r4, #-3956]!	; 0xfffff08c
     9ac:	645f706d 	ldrbvs	r7, [pc], #-109	; 9b4 <__Vectors_Size+0x1f4>
     9b0:	7a5f7669 	bvc	17de35c <__RAM_SIZE+0x16de35c>
     9b4:	006f7265 	rsbeq	r7, pc, r5, ror #4
     9b8:	6f437670 	svcvs	0x00437670
     9bc:	6961746e 	stmdbvs	r1!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
     9c0:	0072656e 	rsbseq	r6, r2, lr, ror #10
     9c4:	6b636954 	blvs	18daf1c <__RAM_SIZE+0x17daf1c>
     9c8:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
     9cc:	7800745f 	stmdavc	r0, {r0, r1, r2, r3, r4, r6, sl, ip, sp, lr}
     9d0:	6d657449 	cfstrdvs	mvd7, [r5, #-292]!	; 0xfffffedc
     9d4:	756c6156 	strbvc	r6, [ip, #-342]!	; 0xfffffeaa
     9d8:	4c780065 	ldclmi	0, cr0, [r8], #-404	; 0xfffffe6c
     9dc:	45747369 	ldrbmi	r7, [r4, #-873]!	; 0xfffffc97
     9e0:	7000646e 	andvc	r6, r0, lr, ror #8
     9e4:	6e774f76 	mrcvs	15, 3, r4, cr7, cr6, {3}
     9e8:	78007265 	stmdavc	r0, {r0, r2, r5, r6, r9, ip, sp, lr}
     9ec:	5453494c 	ldrbpl	r4, [r3], #-2380	; 0xfffff6b4
     9f0:	4554495f 	ldrbmi	r4, [r4, #-2399]	; 0xfffff6a1
     9f4:	7870004d 	ldmdavc	r0!, {r0, r2, r3, r6}^
     9f8:	6d657449 	cfstrdvs	mvd7, [r5, #-292]!	; 0xfffffedc
     9fc:	65526f54 	ldrbvs	r6, [r2, #-3924]	; 0xfffff0ac
     a00:	65766f6d 	ldrbvs	r6, [r6, #-3949]!	; 0xfffff093
     a04:	694c7600 	stmdbvs	ip, {r9, sl, ip, sp, lr}^
     a08:	6e497473 	mcrvs	4, 2, r7, cr9, cr3, {3}
     a0c:	61697469 	cmnvs	r9, r9, ror #8
     a10:	6573696c 	ldrbvs	r6, [r3, #-2412]!	; 0xfffff694
     a14:	6d657449 	cfstrdvs	mvd7, [r5, #-292]!	; 0xfffffedc
     a18:	4e787500 	cdpmi	5, 7, cr7, cr8, cr0, {0}
     a1c:	65626d75 	strbvs	r6, [r2, #-3445]!	; 0xfffff28b
     a20:	49664f72 	stmdbmi	r6!, {r1, r4, r5, r6, r8, r9, sl, fp, lr}^
     a24:	736d6574 	cmnvc	sp, #116, 10	; 0x1d000000
     a28:	694c7600 	stmdbvs	ip, {r9, sl, ip, sp, lr}^
     a2c:	6e497473 	mcrvs	4, 2, r7, cr9, cr3, {3}
     a30:	74726573 	ldrbtvc	r6, [r2], #-1395	; 0xfffffa8d
     a34:	00646e45 	rsbeq	r6, r4, r5, asr #28
     a38:	654e7870 	strbvs	r7, [lr, #-2160]	; 0xfffff790
     a3c:	76007478 			; <UNDEFINED> instruction: 0x76007478
     a40:	7473694c 	ldrbtvc	r6, [r3], #-2380	; 0xfffff6b4
     a44:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xfffff1b7
     a48:	696c6169 	stmdbvs	ip!, {r0, r3, r5, r6, r8, sp, lr}^
     a4c:	78006573 	stmdavc	r0, {r0, r1, r4, r5, r6, r8, sl, sp, lr}
     a50:	756c6156 	strbvc	r6, [ip, #-342]!	; 0xfffffeaa
     a54:	49664f65 	stmdbmi	r6!, {r0, r2, r5, r6, r8, r9, sl, fp, lr}^
     a58:	7265736e 	rsbvc	r7, r5, #-1207959551	; 0xb8000001
     a5c:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
     a60:	49787000 	ldmdbmi	r8!, {ip, sp, lr}^
     a64:	006d6574 	rsbeq	r6, sp, r4, ror r5
     a68:	73614255 	cmnvc	r1, #1342177285	; 0x50000005
     a6c:	70795465 	rsbsvc	r5, r9, r5, ror #8
     a70:	00745f65 	rsbseq	r5, r4, r5, ror #30
     a74:	74497870 	strbvc	r7, [r9], #-2160	; 0xfffff790
     a78:	74617265 	strbtvc	r7, [r1], #-613	; 0xfffffd9b
     a7c:	7000726f 	andvc	r7, r0, pc, ror #4
     a80:	646e4978 	strbtvs	r4, [lr], #-2424	; 0xfffff688
     a84:	70007865 	andvc	r7, r0, r5, ror #16
     a88:	65725078 	ldrbvs	r5, [r2, #-120]!	; 0xffffff88
     a8c:	756f6976 	strbvc	r6, [pc, #-2422]!	; 11e <__STACKSEAL_SIZE+0x11e>
     a90:	2e2e0073 	mcrcs	0, 1, r0, cr14, cr3, {3}
     a94:	2f2e2e2f 	svccs	0x002e2e2f
     a98:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 9e8 <__Vectors_Size+0x228>
     a9c:	74726269 	ldrbtvc	r6, [r2], #-617	; 0xfffffd97
     aa0:	462f736f 	strtmi	r7, [pc], -pc, ror #6
     aa4:	52656572 	rsbpl	r6, r5, #478150656	; 0x1c800000
     aa8:	2f534f54 	svccs	0x00534f54
     aac:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
     ab0:	7000632e 	andvc	r6, r0, lr, lsr #6
     ab4:	73694c78 	cmnvc	r9, #120, 24	; 0x7800
     ab8:	4c780074 	ldclmi	0, cr0, [r8], #-464	; 0xfffffe30
     abc:	00545349 	subseq	r5, r4, r9, asr #6
     ac0:	694c7875 	stmdbvs	ip, {r0, r2, r4, r5, r6, fp, ip, sp, lr}^
     ac4:	65527473 	ldrbvs	r7, [r2, #-1139]	; 0xfffffb8d
     ac8:	65766f6d 	ldrbvs	r6, [r6, #-3949]!	; 0xfffff093
     acc:	4e787000 	cdpmi	0, 7, cr7, cr8, cr0, {0}
     ad0:	694c7765 	stmdbvs	ip, {r0, r2, r5, r6, r8, r9, sl, ip, sp, lr}^
     ad4:	74497473 	strbvc	r7, [r9], #-1139	; 0xfffffb8d
     ad8:	76006d65 	strvc	r6, [r0], -r5, ror #26
     adc:	7473694c 	ldrbtvc	r6, [r3], #-2380	; 0xfffff6b4
     ae0:	65736e49 	ldrbvs	r6, [r3, #-3657]!	; 0xfffff1b7
     ae4:	76007472 			; <UNDEFINED> instruction: 0x76007472
     ae8:	74726f50 	ldrbtvc	r6, [r2], #-3920	; 0xfffff0b0
     aec:	74697845 	strbtvc	r7, [r9], #-2117	; 0xfffff7bb
     af0:	74697243 	strbtvc	r7, [r9], #-579	; 0xfffffdbd
     af4:	6c616369 	stclvs	3, cr6, [r1], #-420	; 0xfffffe5c
     af8:	76727000 	ldrbtvc	r7, [r2], -r0
     afc:	69746f4e 	ldmdbvs	r4!, {r1, r2, r3, r6, r8, r9, sl, fp, sp, lr}^
     b00:	75517966 	ldrbvc	r7, [r1, #-2406]	; 0xfffff69a
     b04:	53657565 	cmnpl	r5, #423624704	; 0x19400000
     b08:	6f437465 	svcvs	0x00437465
     b0c:	6961746e 	stmdbvs	r1!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
     b10:	0072656e 	rsbseq	r6, r2, lr, ror #10
     b14:	616d6553 	cmnvs	sp, r3, asr r5
     b18:	726f6870 	rsbvc	r6, pc, #112, 16	; 0x700000
     b1c:	74614465 	strbtvc	r4, [r1], #-1125	; 0xfffffb9b
     b20:	50760061 	rsbspl	r0, r6, r1, rrx
     b24:	5974726f 	ldmdbpl	r4!, {r0, r1, r2, r3, r5, r6, r9, ip, sp, lr}^
     b28:	646c6569 	strbtvs	r6, [ip], #-1385	; 0xfffffa97
     b2c:	6d655300 	stclvs	3, cr5, [r5, #-0]
     b30:	6f687061 	svcvs	0x00687061
     b34:	61446572 	hvcvs	18002	; 0x4652
     b38:	745f6174 	ldrbvc	r6, [pc], #-372	; b40 <__Vectors_Size+0x380>
     b3c:	75517800 	ldrbvc	r7, [r1, #-2048]	; 0xfffff800
     b40:	47657565 	strbmi	r7, [r5, -r5, ror #10]!
     b44:	72656e65 	rsbvc	r6, r5, #1616	; 0x650
     b48:	65476369 	strbvs	r6, [r7, #-873]	; 0xfffffc97
     b4c:	61745374 	cmnvs	r4, r4, ror r3
     b50:	42636974 	rsbmi	r6, r3, #116, 18	; 0x1d0000
     b54:	65666675 	strbvs	r6, [r6, #-1653]!	; 0xfffff98b
     b58:	78007372 	stmdavc	r0, {r1, r4, r5, r6, r8, r9, ip, sp, lr}
     b5c:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
     b60:	63655265 	cmnvs	r5, #1342177286	; 0x50000006
     b64:	65766965 	ldrbvs	r6, [r6, #-2405]!	; 0xfffff69b
     b68:	75517800 	ldrbvc	r7, [r1, #-2048]	; 0xfffff800
     b6c:	52657565 	rsbpl	r7, r5, #423624704	; 0x19400000
     b70:	69656365 	stmdbvs	r5!, {r0, r2, r5, r6, r8, r9, sp, lr}^
     b74:	72466576 	subvc	r6, r6, #494927872	; 0x1d800000
     b78:	53496d6f 	movtpl	r6, #40303	; 0x9d6f
     b7c:	54780052 	ldrbtpl	r0, [r8], #-82	; 0xffffffae
     b80:	736b7361 	cmnvc	fp, #-2080374783	; 0x84000001
     b84:	74696157 	strbtvc	r6, [r9], #-343	; 0xfffffea9
     b88:	54676e69 	strbtpl	r6, [r7], #-3689	; 0xfffff197
     b8c:	6365526f 	cmnvs	r5, #-268435450	; 0xf0000006
     b90:	65766965 	ldrbvs	r6, [r6, #-2405]!	; 0xfffff69b
     b94:	48787000 	ldmdami	r8!, {ip, sp, lr}^
     b98:	65686769 	strbvs	r6, [r8, #-1897]!	; 0xfffff897
     b9c:	69725072 	ldmdbvs	r2!, {r1, r4, r5, r6, ip, lr}^
     ba0:	7469726f 	strbtvc	r7, [r9], #-623	; 0xfffffd91
     ba4:	73615479 	cmnvc	r1, #2030043136	; 0x79000000
     ba8:	6b6f576b 	blvs	1bd695c <__RAM_SIZE+0x1ad695c>
     bac:	70006e65 	andvc	r6, r0, r5, ror #28
     bb0:	74754d78 	ldrbtvc	r4, [r5], #-3448	; 0xfffff288
     bb4:	78007865 	stmdavc	r0, {r0, r2, r5, r6, fp, ip, sp, lr}
     bb8:	454d4954 	strbmi	r4, [sp, #-2388]	; 0xfffff6ac
     bbc:	54554f5f 	ldrbpl	r4, [r5], #-3935	; 0xfffff0a1
     bc0:	75517800 	ldrbvc	r7, [r1, #-2048]	; 0xfffff800
     bc4:	54657565 	strbtpl	r7, [r5], #-1381	; 0xfffffa9b
     bc8:	4d656b61 	fstmdbxmi	r5!, {d22-d69}	;@ Deprecated
     bcc:	78657475 	stmdavc	r5!, {r0, r2, r4, r5, r6, sl, ip, sp, lr}^
     bd0:	75636552 	strbvc	r6, [r3, #-1362]!	; 0xfffffaae
     bd4:	76697372 			; <UNDEFINED> instruction: 0x76697372
     bd8:	51780065 	cmnpl	r8, r5, rrx
     bdc:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
     be0:	656c6553 	strbvs	r6, [ip, #-1363]!	; 0xfffffaad
     be4:	72467463 	subvc	r7, r6, #1660944384	; 0x63000000
     be8:	65536d6f 	ldrbvs	r6, [r3, #-3439]	; 0xfffff291
     bec:	6f724674 	svcvs	0x00724674
     bf0:	5253496d 	subspl	r4, r3, #1785856	; 0x1b4000
     bf4:	75517800 	ldrbvc	r7, [r1, #-2048]	; 0xfffff800
     bf8:	47657565 	strbmi	r7, [r5, -r5, ror #10]!
     bfc:	72656e65 	rsbvc	r6, r5, #1616	; 0x650
     c00:	65536369 	ldrbvs	r6, [r3, #-873]	; 0xfffffc97
     c04:	7246646e 	subvc	r6, r6, #1845493760	; 0x6e000000
     c08:	53496d6f 	movtpl	r6, #40303	; 0x9d6f
     c0c:	74530052 	ldrbvc	r0, [r3], #-82	; 0xffffffae
     c10:	63697461 	cmnvs	r9, #1627389952	; 0x61000000
     c14:	696e694d 	stmdbvs	lr!, {r0, r2, r3, r6, r8, fp, sp, lr}^
     c18:	7473694c 	ldrbtvc	r6, [r3], #-2380	; 0xfffff6b4
     c1c:	6d657449 	cfstrdvs	mvd7, [r5, #-292]!	; 0xfffffedc
     c20:	7800745f 	stmdavc	r0, {r0, r1, r2, r3, r4, r6, sl, ip, sp, lr}
     c24:	74696157 	strbtvc	r6, [r9], #-343	; 0xfffffea9
     c28:	65646e49 	strbvs	r6, [r4, #-3657]!	; 0xfffff1b7
     c2c:	696e6966 	stmdbvs	lr!, {r1, r2, r5, r6, r8, fp, sp, lr}^
     c30:	796c6574 	stmdbvc	ip!, {r2, r4, r5, r6, r8, sl, sp, lr}^
     c34:	61547800 	cmpvs	r4, r0, lsl #16
     c38:	57736b73 			; <UNDEFINED> instruction: 0x57736b73
     c3c:	69746961 	ldmdbvs	r4!, {r0, r5, r6, r8, fp, sp, lr}^
     c40:	6f54676e 	svcvs	0x0054676e
     c44:	646e6553 	strbtvs	r6, [lr], #-1363	; 0xfffffaad
     c48:	51787500 	cmnpl	r8, r0, lsl #10
     c4c:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
     c50:	63617053 	cmnvs	r1, #83	; 0x53
     c54:	76417365 	strbvc	r7, [r1], -r5, ror #6
     c58:	616c6961 	cmnvs	ip, r1, ror #18
     c5c:	00656c62 	rsbeq	r6, r5, r2, ror #24
     c60:	4c785463 	cfldrdmi	mvd5, [r8], #-396	; 0xfffffe74
     c64:	006b636f 	rsbeq	r6, fp, pc, ror #6
     c68:	65764f78 	ldrbvs	r4, [r6, #-3960]!	; 0xfffff088
     c6c:	6f6c6672 	svcvs	0x006c6672
     c70:	756f4377 	strbvc	r4, [pc, #-887]!	; 901 <__Vectors_Size+0x141>
     c74:	7600746e 	strvc	r7, [r0], -lr, ror #8
     c78:	74726f50 	ldrbtvc	r6, [r2], #-3920	; 0xfffff0b0
     c7c:	65746e45 	ldrbvs	r6, [r4, #-3653]!	; 0xfffff1bb
     c80:	69724372 	ldmdbvs	r2!, {r1, r4, r5, r6, r8, r9, lr}^
     c84:	61636974 	smcvs	13972	; 0x3694
     c88:	5f5f006c 	svcpl	0x005f006c
     c8c:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	; 0xfffffe78
     c90:	5f6e6974 	svcpl	0x006e6974
     c94:	636d656d 	cmnvs	sp, #457179136	; 0x1b400000
     c98:	78007970 	stmdavc	r0, {r4, r5, r6, r8, fp, ip, sp, lr}
     c9c:	79706f43 	ldmdbvc	r0!, {r0, r1, r6, r8, r9, sl, fp, sp, lr}^
     ca0:	69736f50 	ldmdbvs	r3!, {r4, r6, r8, r9, sl, fp, sp, lr}^
     ca4:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
     ca8:	52787500 	rsbspl	r7, r8, #0, 10
     cac:	72757465 	rsbsvc	r7, r5, #1694498816	; 0x65000000
     cb0:	5176006e 	cmnpl	r6, lr, rrx
     cb4:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
     cb8:	656c6544 	strbvs	r6, [ip, #-1348]!	; 0xfffffabc
     cbc:	70006574 	andvc	r6, r0, r4, ror r5
     cc0:	61655263 	cmnvs	r5, r3, ror #4
     cc4:	6f724664 	svcvs	0x00724664
     cc8:	7875006d 	ldmdavc	r5!, {r0, r2, r3, r5, r6}^
     ccc:	65766153 	ldrbvs	r6, [r6, #-339]!	; 0xfffffead
     cd0:	746e4964 	strbtvc	r4, [lr], #-2404	; 0xfffff69c
     cd4:	75727265 	ldrbvc	r7, [r2, #-613]!	; 0xfffffd9b
     cd8:	74537470 	ldrbvc	r7, [r3], #-1136	; 0xfffffb90
     cdc:	73757461 	cmnvc	r5, #1627389952	; 0x61000000
     ce0:	76727000 	ldrbtvc	r7, [r2], -r0
     ce4:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xfffff1b7
     ce8:	696c6169 	stmdbvs	ip!, {r0, r3, r5, r6, r8, sp, lr}^
     cec:	654e6573 	strbvs	r6, [lr, #-1395]	; 0xfffffa8d
     cf0:	65755177 	ldrbvs	r5, [r5, #-375]!	; 0xfffffe89
     cf4:	75006575 	strvc	r6, [r0, #-1397]	; 0xfffffa8b
     cf8:	74754d78 	ldrbtvc	r4, [r5], #-3448	; 0xfffff288
     cfc:	69537865 	ldmdbvs	r3, {r0, r2, r5, r6, fp, ip, sp, lr}^
     d00:	7800657a 	stmdavc	r0, {r1, r3, r4, r5, r6, r8, sl, sp, lr}
     d04:	6c656959 			; <UNDEFINED> instruction: 0x6c656959
     d08:	71655264 	cmnvc	r5, r4, ror #4
     d0c:	65726975 	ldrbvs	r6, [r2, #-2421]!	; 0xfffff68b
     d10:	78700064 	ldmdavc	r0!, {r2, r5, r6}^
     d14:	5177654e 	cmnpl	r7, lr, asr #10
     d18:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
     d1c:	65755100 	ldrbvs	r5, [r5, #-256]!	; 0xffffff00
     d20:	65446575 	strbvs	r6, [r4, #-1397]	; 0xfffffa8b
     d24:	696e6966 	stmdbvs	lr!, {r1, r2, r5, r6, r8, fp, sp, lr}^
     d28:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
     d2c:	6c437600 	mcrrvs	6, 0, r7, r3, cr0
     d30:	49726165 	ldmdbmi	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     d34:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
     d38:	74707572 	ldrbtvc	r7, [r0], #-1394	; 0xfffffa8e
     d3c:	6b73614d 	blvs	1cd9278 <__RAM_SIZE+0x1bd9278>
     d40:	76727000 	ldrbtvc	r7, [r2], -r0
     d44:	75517349 	ldrbvc	r7, [r1, #-841]	; 0xfffffcb7
     d48:	45657565 	strbmi	r7, [r5, #-1381]!	; 0xfffffa9b
     d4c:	7974706d 	ldmdbvc	r4!, {r0, r2, r3, r5, r6, ip, sp, lr}^
     d50:	42767000 	rsbsmi	r7, r6, #0
     d54:	65666675 	strbvs	r6, [r6, #-1653]!	; 0xfffff98b
     d58:	72700072 	rsbsvc	r0, r0, #114	; 0x72
     d5c:	74654776 	strbtvc	r4, [r5], #-1910	; 0xfffff88a
     d60:	69736944 	ldmdbvs	r3!, {r2, r6, r8, fp, sp, lr}^
     d64:	7265686e 	rsbvc	r6, r5, #7208960	; 0x6e0000
     d68:	72507469 	subsvc	r7, r0, #1761607680	; 0x69000000
     d6c:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
     d70:	66417974 			; <UNDEFINED> instruction: 0x66417974
     d74:	54726574 	ldrbtpl	r6, [r2], #-1396	; 0xfffffa8c
     d78:	6f656d69 	svcvs	0x00656d69
     d7c:	75007475 	strvc	r7, [r0, #-1141]	; 0xfffffb8b
     d80:	73654d78 	cmnvc	r5, #120, 26	; 0x1e00
     d84:	65676173 	strbvs	r6, [r7, #-371]!	; 0xfffffe8d
     d88:	69615773 	stmdbvs	r1!, {r0, r1, r4, r5, r6, r8, r9, sl, ip, lr}^
     d8c:	676e6974 			; <UNDEFINED> instruction: 0x676e6974
     d90:	65537800 	ldrbvs	r7, [r3, #-2048]	; 0xfffff800
     d94:	6870616d 	ldmdavs	r0!, {r0, r2, r3, r5, r6, r8, sp, lr}^
     d98:	0065726f 	rsbeq	r7, r5, pc, ror #4
     d9c:	6f507670 	svcvs	0x00507670
     da0:	614d7472 	hvcvs	55106	; 0xd742
     da4:	636f6c6c 	cmnvs	pc, #108, 24	; 0x6c00
     da8:	54787500 	ldrbtpl	r7, [r8], #-1280	; 0xfffffb00
     dac:	476b7361 	strbmi	r7, [fp, -r1, ror #6]!
     db0:	754e7465 	strbvc	r7, [lr, #-1125]	; 0xfffffb9b
     db4:	7265626d 	rsbvc	r6, r5, #-805306362	; 0xd0000006
     db8:	6154664f 	cmpvs	r4, pc, asr #12
     dbc:	00736b73 	rsbseq	r6, r3, r3, ror fp
     dc0:	73615476 	cmnvc	r1, #1979711488	; 0x76000000
     dc4:	7375536b 	cmnvc	r5, #-1409286143	; 0xac000001
     dc8:	646e6570 	strbtvs	r6, [lr], #-1392	; 0xfffffa90
     dcc:	006c6c41 	rsbeq	r6, ip, r1, asr #24
     dd0:	65755178 	ldrbvs	r5, [r5, #-376]!	; 0xfffffe88
     dd4:	65506575 	ldrbvs	r6, [r0, #-1397]	; 0xfffffa8b
     dd8:	78006b65 	stmdavc	r0, {r0, r2, r5, r6, r8, r9, fp, sp, lr}
     ddc:	72746e45 	rsbsvc	r6, r4, #1104	; 0x450
     de0:	6d695479 	cfstrdvs	mvd5, [r9, #-484]!	; 0xfffffe1c
     de4:	74655365 	strbtvc	r5, [r5], #-869	; 0xfffffc9b
     de8:	61487800 	cmpvs	r8, r0, lsl #16
     dec:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
     df0:	65755100 	ldrbvs	r5, [r5, #-256]!	; 0xffffff00
     df4:	65536575 	ldrbvs	r6, [r3, #-1397]	; 0xfffffa8b
     df8:	6d654d74 	stclvs	13, cr4, [r5, #-464]!	; 0xfffffe30
     dfc:	48726562 	ldmdami	r2!, {r1, r5, r6, r8, sl, sp, lr}^
     e00:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
     e04:	00745f65 	rsbseq	r5, r4, r5, ror #30
     e08:	6e497875 	mcrvs	8, 2, r7, cr9, cr5, {3}
     e0c:	61697469 	cmnvs	r9, r9, ror #8
     e10:	756f436c 	strbvc	r4, [pc, #-876]!	; aac <__Vectors_Size+0x2ec>
     e14:	7000746e 	andvc	r7, r0, lr, ror #8
     e18:	51637570 	smcpl	14160	; 0x3750
     e1c:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
     e20:	726f7453 	rsbvc	r7, pc, #1392508928	; 0x53000000
     e24:	00656761 	rsbeq	r6, r5, r1, ror #14
     e28:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
     e2c:	74655365 	strbtvc	r5, [r5], #-869	; 0xfffffc9b
     e30:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
     e34:	745f656c 	ldrbvc	r6, [pc], #-1388	; e3c <__Vectors_Size+0x67c>
     e38:	75517800 	ldrbvc	r7, [r1, #-2048]	; 0xfffff800
     e3c:	53657565 	cmnpl	r5, #423624704	; 0x19400000
     e40:	70616d65 	rsbvc	r6, r1, r5, ror #26
     e44:	65726f68 	ldrbvs	r6, [r2, #-3944]!	; 0xfffff098
     e48:	656b6154 	strbvs	r6, [fp, #-340]!	; 0xfffffeac
     e4c:	44767000 	ldrbtmi	r7, [r6], #-0
     e50:	796d6d75 	stmdbvc	sp!, {r0, r2, r4, r5, r6, r8, sl, fp, sp, lr}^
     e54:	76700031 			; <UNDEFINED> instruction: 0x76700031
     e58:	6d6d7544 	cfstr64vs	mvdx7, [sp, #-272]!	; 0xfffffef0
     e5c:	70003279 	andvc	r3, r0, r9, ror r2
     e60:	6d754476 	cfldrdvs	mvd4, [r5, #-472]!	; 0xfffffe28
     e64:	0033796d 	eorseq	r7, r3, sp, ror #18
     e68:	75447875 	strbvc	r7, [r4, #-2165]	; 0xfffff78b
     e6c:	32796d6d 	rsbscc	r6, r9, #6976	; 0x1b40
     e70:	44767000 	ldrbtmi	r7, [r6], #-0
     e74:	796d6d75 	stmdbvc	sp!, {r0, r2, r4, r5, r6, r8, sl, fp, sp, lr}^
     e78:	78750037 	ldmdavc	r5!, {r0, r1, r2, r4, r5}^
     e7c:	6d6d7544 	cfstr64vs	mvdx7, [sp, #-272]!	; 0xfffffef0
     e80:	70003479 	andvc	r3, r0, r9, ror r4
     e84:	6f437672 	svcvs	0x00437672
     e88:	61447970 	hvcvs	18320	; 0x4790
     e8c:	6f546174 	svcvs	0x00546174
     e90:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
     e94:	51780065 	cmnpl	r8, r5, rrx
     e98:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
     e9c:	656e6547 	strbvs	r6, [lr, #-1351]!	; 0xfffffab9
     ea0:	53636972 	cmnpl	r3, #1867776	; 0x1c8000
     ea4:	00646e65 	rsbeq	r6, r4, r5, ror #28
     ea8:	74536375 	ldrbvc	r6, [r3], #-885	; 0xfffffc8b
     eac:	63697461 	cmnvs	r9, #1627389952	; 0x61000000
     eb0:	796c6c61 	stmdbvc	ip!, {r0, r5, r6, sl, fp, sp, lr}^
     eb4:	6f6c6c41 	svcvs	0x006c6c41
     eb8:	65746163 	ldrbvs	r6, [r4, #-355]!	; 0xfffffe9d
     ebc:	54760064 	ldrbtpl	r0, [r6], #-100	; 0xffffff9c
     ec0:	506b7361 	rsbpl	r7, fp, r1, ror #6
     ec4:	6563616c 	strbvs	r6, [r3, #-364]!	; 0xfffffe94
     ec8:	76456e4f 	strbvc	r6, [r5], -pc, asr #28
     ecc:	4c746e65 	ldclmi	14, cr6, [r4], #-404	; 0xfffffe6c
     ed0:	00747369 	rsbseq	r7, r4, r9, ror #6
     ed4:	61547670 	cmpvs	r4, r0, ror r6
     ed8:	6e496b73 	vmovvs.8	d9[3], r6
     edc:	6d657263 	sfmvs	f7, 2, [r5, #-396]!	; 0xfffffe74
     ee0:	4d746e65 	ldclmi	14, cr6, [r4, #-404]!	; 0xfffffe6c
     ee4:	78657475 	stmdavc	r5!, {r0, r2, r4, r5, r6, sl, ip, sp, lr}^
     ee8:	646c6548 	strbtvs	r6, [ip], #-1352	; 0xfffffab8
     eec:	6e756f43 	cdpvs	15, 7, cr6, cr5, cr3, {2}
     ef0:	2e2e0074 	mcrcs	0, 1, r0, cr14, cr4, {3}
     ef4:	2f2e2e2f 	svccs	0x002e2e2f
     ef8:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; e48 <__Vectors_Size+0x688>
     efc:	74726269 	ldrbtvc	r6, [r2], #-617	; 0xfffffd97
     f00:	462f736f 	strtmi	r7, [pc], -pc, ror #6
     f04:	52656572 	rsbpl	r6, r5, #478150656	; 0x1c800000
     f08:	2f534f54 	svccs	0x00534f54
     f0c:	75657571 	strbvc	r7, [r5, #-1393]!	; 0xfffffa8f
     f10:	00632e65 	rsbeq	r2, r3, r5, ror #28
     f14:	74497875 	strbvc	r7, [r9], #-2165	; 0xfffff78b
     f18:	69536d65 	ldmdbvs	r3, {r0, r2, r5, r6, r8, sl, fp, sp, lr}^
     f1c:	7500657a 	strvc	r6, [r0, #-1402]	; 0xfffffa86
     f20:	65755178 	ldrbvs	r5, [r5, #-376]!	; 0xfffffe88
     f24:	654d6575 	strbvs	r6, [sp, #-1397]	; 0xfffffa8b
     f28:	67617373 			; <UNDEFINED> instruction: 0x67617373
     f2c:	61577365 	cmpvs	r7, r5, ror #6
     f30:	6e697469 	cdpvs	4, 6, cr7, cr9, cr9, {3}
     f34:	6f724667 	svcvs	0x00724667
     f38:	5253496d 	subspl	r4, r3, #1785856	; 0x1b4000
     f3c:	50787500 	rsbspl	r7, r8, r0, lsl #10
     f40:	69766572 	ldmdbvs	r6!, {r1, r4, r5, r6, r8, sl, sp, lr}^
     f44:	4d73756f 	cfldr64mi	mvdx7, [r3, #-444]!	; 0xfffffe44
     f48:	61737365 	cmnvs	r3, r5, ror #6
     f4c:	57736567 	ldrbpl	r6, [r3, -r7, ror #10]!
     f50:	69746961 	ldmdbvs	r4!, {r0, r5, r6, r8, fp, sp, lr}^
     f54:	7800676e 	stmdavc	r0, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}
     f58:	6b736154 	blvs	1cd94b0 <__RAM_SIZE+0x1bd94b0>
     f5c:	6f697250 	svcvs	0x00697250
     f60:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
     f64:	69736944 	ldmdbvs	r3!, {r2, r6, r8, fp, sp, lr}^
     f68:	7265686e 	rsbvc	r6, r5, #7208960	; 0x6e0000
     f6c:	75007469 	strvc	r7, [r0, #-1129]	; 0xfffffb97
     f70:	74754d78 	ldrbtvc	r4, [r5], #-3448	; 0xfffff288
     f74:	654c7865 	strbvs	r7, [ip, #-2149]	; 0xfffff79b
     f78:	6874676e 	ldmdavs	r4!, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}^
     f7c:	76727000 	ldrbtvc	r7, [r2], -r0
     f80:	75517349 	ldrbvc	r7, [r1, #-841]	; 0xfffffcb7
     f84:	46657565 	strbtmi	r7, [r5], -r5, ror #10
     f88:	006c6c75 	rsbeq	r6, ip, r5, ror ip
     f8c:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
     f90:	696f5065 	stmdbvs	pc!, {r0, r2, r5, r6, ip, lr}^	; <UNPREDICTABLE>
     f94:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
     f98:	51780073 	cmnpl	r8, r3, ror r0
     f9c:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
     fa0:	65766947 	ldrbvs	r6, [r6, #-2375]!	; 0xfffff6b9
     fa4:	6d6f7246 	sfmvs	f7, 2, [pc, #-280]!	; e94 <__Vectors_Size+0x6d4>
     fa8:	00525349 	subseq	r5, r2, r9, asr #6
     fac:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
     fb0:	6e614865 	cdpvs	8, 6, cr4, cr1, cr5, {3}
     fb4:	5f656c64 	svcpl	0x00656c64
     fb8:	51780074 	cmnpl	r8, r4, ror r0
     fbc:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
     fc0:	00746553 	rsbseq	r6, r4, r3, asr r5
     fc4:	73615476 	cmnvc	r1, #1979711488	; 0x76000000
     fc8:	616c506b 	cmnvs	ip, fp, rrx
     fcc:	6e4f6563 	cdpvs	5, 4, cr6, cr15, cr3, {3}
     fd0:	6e657645 	cdpvs	6, 6, cr7, cr5, cr5, {2}
     fd4:	73694c74 	cmnvc	r9, #116, 24	; 0x7400
     fd8:	73655274 	cmnvc	r5, #116, 4	; 0x40000007
     fdc:	63697274 	cmnvs	r9, #116, 4	; 0x40000007
     fe0:	00646574 	rsbeq	r6, r4, r4, ror r5
     fe4:	75517875 	ldrbvc	r7, [r1, #-2165]	; 0xfffff78b
     fe8:	47657565 	strbmi	r7, [r5, -r5, ror #10]!
     fec:	75517465 	ldrbvc	r7, [r1, #-1125]	; 0xfffffb9b
     ff0:	4c657565 	cfstr64mi	mvdx7, [r5], #-404	; 0xfffffe6c
     ff4:	74676e65 	strbtvc	r6, [r7], #-3685	; 0xfffff19b
     ff8:	70700068 	rsbsvc	r0, r0, r8, rrx
     ffc:	61745378 	cmnvs	r4, r8, ror r3
    1000:	51636974 	smcpl	13972	; 0x3694
    1004:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
    1008:	75517800 	ldrbvc	r7, [r1, #-2048]	; 0xfffff800
    100c:	43657565 	cmnmi	r5, #423624704	; 0x19400000
    1010:	74616572 	strbtvc	r6, [r1], #-1394	; 0xfffffa8e
    1014:	74754d65 	ldrbtvc	r4, [r5], #-3429	; 0xfffff29b
    1018:	74537865 	ldrbvc	r7, [r3], #-2149	; 0xfffff79b
    101c:	63697461 	cmnvs	r9, #1627389952	; 0x61000000
    1020:	536c7500 	cmnpl	ip, #0, 10
    1024:	6e497465 	cdpvs	4, 4, cr7, cr9, cr5, {3}
    1028:	72726574 	rsbsvc	r6, r2, #116, 10	; 0x1d000000
    102c:	4d747075 	ldclmi	0, cr7, [r4, #-468]!	; 0xfffffe2c
    1030:	006b7361 	rsbeq	r7, fp, r1, ror #6
    1034:	65755178 	ldrbvs	r5, [r5, #-376]!	; 0xfffffe88
    1038:	65476575 	strbvs	r6, [r7, #-1397]	; 0xfffffa8b
    103c:	6972656e 	ldmdbvs	r2!, {r1, r2, r3, r5, r6, r8, sl, sp, lr}^
    1040:	65724363 	ldrbvs	r4, [r2, #-867]!	; 0xfffffc9d
    1044:	00657461 	rsbeq	r7, r5, r1, ror #8
    1048:	65755178 	ldrbvs	r5, [r5, #-376]!	; 0xfffffe88
    104c:	72436575 	subvc	r6, r3, #490733568	; 0x1d400000
    1050:	65746165 	ldrbvs	r6, [r4, #-357]!	; 0xfffffe9b
    1054:	6574754d 	ldrbvs	r7, [r4, #-1357]!	; 0xfffffab3
    1058:	53780078 	cmnpl	r8, #120	; 0x78
    105c:	49544154 	ldmdbmi	r4, {r2, r4, r6, r8, lr}^
    1060:	494c5f43 	stmdbmi	ip, {r0, r1, r6, r8, r9, sl, fp, ip, lr}^
    1064:	70005453 	andvc	r5, r0, r3, asr r4
    1068:	6e497672 	mcrvs	6, 2, r7, cr9, cr2, {3}
    106c:	61697469 	cmnvs	r9, r9, ror #8
    1070:	6573696c 	ldrbvs	r6, [r3, #-2412]!	; 0xfffff694
    1074:	6574754d 	ldrbvs	r7, [r4, #-1357]!	; 0xfffffab3
    1078:	54780078 	ldrbtpl	r0, [r8], #-120	; 0xffffff88
    107c:	4f656d69 	svcmi	0x00656d69
    1080:	746e456e 	strbtvc	r4, [lr], #-1390	; 0xfffffa92
    1084:	6e697265 	cdpvs	2, 6, cr7, cr9, cr5, {3}
    1088:	74530067 	ldrbvc	r0, [r3], #-103	; 0xffffff99
    108c:	63697461 	cmnvs	r9, #1627389952	; 0x61000000
    1090:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
    1094:	00745f65 	rsbseq	r5, r4, r5, ror #30
    1098:	65755178 	ldrbvs	r5, [r5, #-376]!	; 0xfffffe88
    109c:	65526575 	ldrbvs	r6, [r2, #-1397]	; 0xfffffa8b
    10a0:	65766f6d 	ldrbvs	r6, [r6, #-3949]!	; 0xfffff093
    10a4:	6d6f7246 	sfmvs	f7, 2, [pc, #-280]!	; f94 <__Vectors_Size+0x7d4>
    10a8:	00746553 	rsbseq	r6, r4, r3, asr r5
    10ac:	614d7875 	hvcvs	55173	; 0xd785
    10b0:	756f4378 	strbvc	r4, [pc, #-888]!	; d40 <__Vectors_Size+0x580>
    10b4:	7800746e 	stmdavc	r0, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
    10b8:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
    10bc:	65724365 	ldrbvs	r4, [r2, #-869]!	; 0xfffffc9b
    10c0:	53657461 	cmnpl	r5, #1627389952	; 0x61000000
    10c4:	54007465 	strpl	r7, [r0], #-1125	; 0xfffffb9b
    10c8:	4f656d69 	svcmi	0x00656d69
    10cc:	745f7475 	ldrbvc	r7, [pc], #-1141	; 10d4 <__HEAP_SIZE+0xd4>
    10d0:	61547600 	cmpvs	r4, r0, lsl #12
    10d4:	6e496b73 	vmovvs.8	d9[3], r6
    10d8:	6e726574 	mrcvs	5, 3, r6, cr2, cr4, {3}
    10dc:	65536c61 	ldrbvs	r6, [r3, #-3169]	; 0xfffff39f
    10e0:	6d695474 	cfstrdvs	mvd5, [r9, #-464]!	; 0xfffffe30
    10e4:	74754f65 	ldrbtvc	r4, [r5], #-3941	; 0xfffff09b
    10e8:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
    10ec:	63700065 	cmnvs	r0, #101	; 0x65
    10f0:	6769724f 	strbvs	r7, [r9, -pc, asr #4]!
    10f4:	6c616e69 	stclvs	14, cr6, [r1], #-420	; 0xfffffe5c
    10f8:	64616552 	strbtvs	r6, [r1], #-1362	; 0xfffffaae
    10fc:	69736f50 	ldmdbvs	r3!, {r4, r6, r8, r9, sl, fp, sp, lr}^
    1100:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    1104:	75517800 	ldrbvc	r7, [r1, #-2048]	; 0xfffff800
    1108:	43657565 	cmnmi	r5, #423624704	; 0x19400000
    110c:	74616572 	strbtvc	r6, [r1], #-1394	; 0xfffffa8e
    1110:	756f4365 	strbvc	r4, [pc, #-869]!	; db3 <__Vectors_Size+0x5f3>
    1114:	6e69746e 	cdpvs	4, 6, cr7, cr9, cr14, {3}
    1118:	6d655367 	stclvs	3, cr5, [r5, #-412]!	; 0xfffffe64
    111c:	6f687061 	svcvs	0x00687061
    1120:	74536572 	ldrbvc	r6, [r3], #-1394	; 0xfffffa8e
    1124:	63697461 	cmnvs	r9, #1627389952	; 0x61000000
    1128:	48787500 	ldmdami	r8!, {r8, sl, ip, sp, lr}^
    112c:	65686769 	strbvs	r6, [r8, #-1897]!	; 0xfffff897
    1130:	72507473 	subsvc	r7, r0, #1929379840	; 0x73000000
    1134:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    1138:	664f7974 			; <UNDEFINED> instruction: 0x664f7974
    113c:	74696157 	strbtvc	r6, [r9], #-343	; 0xfffffea9
    1140:	54676e69 	strbtpl	r6, [r7], #-3689	; 0xfffff197
    1144:	736b7361 	cmnvc	fp, #-2080374783	; 0x84000001
    1148:	51637500 	cmnpl	r3, r0, lsl #10
    114c:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
    1150:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
    1154:	53787500 	cmnpl	r8, #0, 10
    1158:	70616d65 	rsbvc	r6, r1, r5, ror #26
    115c:	65726f68 	ldrbvs	r6, [r2, #-3944]!	; 0xfffff098
    1160:	6e756f43 	cdpvs	15, 7, cr6, cr5, cr3, {2}
    1164:	63700074 	cmnvs	r0, #116	; 0x74
    1168:	74697257 	strbtvc	r7, [r9], #-599	; 0xfffffda9
    116c:	006f5465 	rsbeq	r5, pc, r5, ror #8
    1170:	6e695f5f 	mcrvs	15, 3, r5, cr9, cr15, {2}
    1174:	745f3874 	ldrbvc	r3, [pc], #-2164	; 117c <__HEAP_SIZE+0x17c>
    1178:	51787500 	cmnpl	r8, r0, lsl #10
    117c:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
    1180:	676e654c 	strbvs	r6, [lr, -ip, asr #10]!
    1184:	78006874 	stmdavc	r0, {r2, r4, r5, r6, fp, sp, lr}
    1188:	65686e49 	strbvs	r6, [r8, #-3657]!	; 0xfffff1b7
    118c:	61746972 	cmnvs	r4, r2, ror r9
    1190:	4f65636e 	svcmi	0x0065636e
    1194:	72756363 	rsbsvc	r6, r5, #-1946157055	; 0x8c000001
    1198:	00646572 	rsbeq	r6, r4, r2, ror r5
    119c:	75446375 	strbvc	r6, [r4, #-885]	; 0xfffffc8b
    11a0:	35796d6d 	ldrbcc	r6, [r9, #-3437]!	; 0xfffff293
    11a4:	44637500 	strbtmi	r7, [r3], #-1280	; 0xfffffb00
    11a8:	796d6d75 	stmdbvc	sp!, {r0, r2, r4, r5, r6, r8, sl, fp, sp, lr}^
    11ac:	78750036 	ldmdavc	r5!, {r1, r2, r4, r5}^
    11b0:	626d754e 	rsbvs	r7, sp, #327155712	; 0x13800000
    11b4:	664f7265 	strbvs	r7, [pc], -r5, ror #4
    11b8:	6b736154 	blvs	1cd9710 <__RAM_SIZE+0x1bd9710>
    11bc:	75510073 	ldrbvc	r0, [r1, #-115]	; 0xffffff8d
    11c0:	50657565 	rsbpl	r7, r5, r5, ror #10
    11c4:	746e696f 	strbtvc	r6, [lr], #-2415	; 0xfffff691
    11c8:	5f737265 	svcpl	0x00737265
    11cc:	78750074 	ldmdavc	r5!, {r2, r4, r5, r6}^
    11d0:	676e654c 	strbvs	r6, [lr, -ip, asr #10]!
    11d4:	76006874 			; <UNDEFINED> instruction: 0x76006874
    11d8:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
    11dc:	69615765 	stmdbvs	r1!, {r0, r2, r5, r6, r8, r9, sl, ip, lr}^
    11e0:	726f4674 	rsbvc	r4, pc, #116, 12	; 0x7400000
    11e4:	7373654d 	cmnvc	r3, #322961408	; 0x13400000
    11e8:	52656761 	rsbpl	r6, r5, #25427968	; 0x1840000
    11ec:	72747365 	rsbsvc	r7, r4, #-1811939327	; 0x94000001
    11f0:	65746369 	ldrbvs	r6, [r4, #-873]!	; 0xfffffc97
    11f4:	78700064 	ldmdavc	r0!, {r2, r5, r6}^
    11f8:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
    11fc:	53724f65 	cmnpl	r2, #404	; 0x194
    1200:	70616d65 	rsbvc	r6, r1, r5, ror #26
    1204:	65726f68 	ldrbvs	r6, [r2, #-3944]!	; 0xfffff098
    1208:	75517800 	ldrbvc	r7, [r1, #-2048]	; 0xfffff800
    120c:	53657565 	cmnpl	r5, #423624704	; 0x19400000
    1210:	49657a69 	stmdbmi	r5!, {r0, r3, r5, r6, r9, fp, ip, sp, lr}^
    1214:	7479426e 	ldrbtvc	r4, [r9], #-622	; 0xfffffd92
    1218:	78007365 	stmdavc	r0, {r0, r2, r5, r6, r8, r9, ip, sp, lr}
    121c:	6b736154 	blvs	1cd9774 <__RAM_SIZE+0x1bd9774>
    1220:	75736552 	ldrbvc	r6, [r3, #-1362]!	; 0xfffffaae
    1224:	6c41656d 	cfstr64vs	mvdx6, [r1], {109}	; 0x6d
    1228:	7875006c 	ldmdavc	r5!, {r2, r3, r5, r6}^
    122c:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
    1230:	74654765 	strbtvc	r4, [r5], #-1893	; 0xfffff89b
    1234:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
    1238:	65744965 	ldrbvs	r4, [r4, #-2405]!	; 0xfffff69b
    123c:	7a69536d 	bvc	1a55ff8 <__RAM_SIZE+0x1955ff8>
    1240:	76700065 	ldrbtvc	r0, [r0], -r5, rrx
    1244:	6d657449 	cfstrdvs	mvd7, [r5, #-292]!	; 0xfffffedc
    1248:	75516f54 	ldrbvc	r6, [r1, #-3924]	; 0xfffff0ac
    124c:	00657565 	rsbeq	r7, r5, r5, ror #10
    1250:	73615478 	cmnvc	r1, #120, 8	; 0x78000000
    1254:	6568436b 	strbvs	r4, [r8, #-875]!	; 0xfffffc95
    1258:	6f466b63 	svcvs	0x00466b63
    125c:	6d695472 	cfstrdvs	mvd5, [r9, #-456]!	; 0xfffffe38
    1260:	74754f65 	ldrbtvc	r4, [r5], #-3941	; 0xfffff09b
    1264:	6f507600 	svcvs	0x00507600
    1268:	72467472 	subvc	r7, r6, #1912602624	; 0x72000000
    126c:	78006565 	stmdavc	r0, {r0, r2, r5, r6, r8, sl, sp, lr}
    1270:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
    1274:	51734965 	cmnpl	r3, r5, ror #18
    1278:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
    127c:	6c6c7546 	cfstr64vs	mvdx7, [ip], #-280	; 0xfffffee8
    1280:	6d6f7246 	sfmvs	f7, 2, [pc, #-280]!	; 1170 <__HEAP_SIZE+0x170>
    1284:	00525349 	subseq	r5, r2, r9, asr #6
    1288:	75517875 	ldrbvc	r7, [r1, #-2165]	; 0xfffff78b
    128c:	4d657565 	cfstr64mi	mvdx7, [r5, #-404]!	; 0xfffffe6c
    1290:	61737365 	cmnvs	r3, r5, ror #6
    1294:	57736567 	ldrbpl	r6, [r3, -r7, ror #10]!
    1298:	69746961 	ldmdbvs	r4!, {r0, r5, r6, r8, fp, sp, lr}^
    129c:	7000676e 	andvc	r6, r0, lr, ror #14
    12a0:	69615463 	stmdbvs	r1!, {r0, r1, r5, r6, sl, ip, lr}^
    12a4:	5178006c 	cmnpl	r8, ip, rrx
    12a8:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
    12ac:	656e6547 	strbvs	r6, [lr, #-1351]!	; 0xfffffab9
    12b0:	43636972 	cmnmi	r3, #1867776	; 0x1c8000
    12b4:	74616572 	strbtvc	r6, [r1], #-1394	; 0xfffffa8e
    12b8:	61745365 	cmnvs	r4, r5, ror #6
    12bc:	00636974 	rsbeq	r6, r3, r4, ror r9
    12c0:	75517870 	ldrbvc	r7, [r1, #-2160]	; 0xfffff790
    12c4:	00657565 	rsbeq	r7, r5, r5, ror #10
    12c8:	41545378 	cmpmi	r4, r8, ror r3
    12cc:	5f434954 	svcpl	0x00434954
    12d0:	5453494c 	ldrbpl	r4, [r3], #-2380	; 0xfffff6b4
    12d4:	4554495f 	ldrbmi	r4, [r4, #-2399]	; 0xfffff6a1
    12d8:	5476004d 	ldrbtpl	r0, [r6], #-77	; 0xffffffb3
    12dc:	4d6b7361 	stclmi	3, cr7, [fp, #-388]!	; 0xfffffe7c
    12e0:	65737369 	ldrbvs	r7, [r3, #-873]!	; 0xfffffc97
    12e4:	65695964 	strbvs	r5, [r9, #-2404]!	; 0xfffff69c
    12e8:	7800646c 	stmdavc	r0, {r2, r3, r5, r6, sl, sp, lr}
    12ec:	6b736154 	blvs	1cd9844 <__RAM_SIZE+0x1bd9844>
    12f0:	6f697250 	svcvs	0x00697250
    12f4:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    12f8:	65686e49 	strbvs	r6, [r8, #-3657]!	; 0xfffff1b7
    12fc:	00746972 	rsbseq	r6, r4, r2, ror r9
    1300:	65527875 	ldrbvs	r7, [r2, #-2165]	; 0xfffff78b
    1304:	73727563 	cmnvc	r2, #415236096	; 0x18c00000
    1308:	43657669 	cmnmi	r5, #110100480	; 0x6900000
    130c:	436c6c61 	cmnmi	ip, #24832	; 0x6100
    1310:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
    1314:	75517800 	ldrbvc	r7, [r1, #-2048]	; 0xfffff800
    1318:	53657565 	cmnpl	r5, #423624704	; 0x19400000
    131c:	63656c65 	cmnvs	r5, #25856	; 0x6500
    1320:	6f724674 	svcvs	0x00724674
    1324:	7465536d 	strbtvc	r5, [r5], #-877	; 0xfffffc93
    1328:	75517800 	ldrbvc	r7, [r1, #-2048]	; 0xfffff800
    132c:	50657565 	rsbpl	r7, r5, r5, ror #10
    1330:	466b6565 	strbtmi	r6, [fp], -r5, ror #10
    1334:	496d6f72 	stmdbmi	sp!, {r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
    1338:	75005253 	strvc	r5, [r0, #-595]	; 0xfffffdad
    133c:	67694878 			; <UNDEFINED> instruction: 0x67694878
    1340:	74736568 	ldrbtvc	r6, [r3], #-1384	; 0xfffffa98
    1344:	74696157 	strbtvc	r6, [r9], #-343	; 0xfffffea9
    1348:	50676e69 	rsbpl	r6, r7, r9, ror #28
    134c:	726f6972 	rsbvc	r6, pc, #1867776	; 0x1c8000
    1350:	00797469 	rsbseq	r7, r9, r9, ror #8
    1354:	43767270 	cmnmi	r6, #112, 4
    1358:	4479706f 	ldrbtmi	r7, [r9], #-111	; 0xffffff91
    135c:	46617461 	strbtmi	r7, [r1], -r1, ror #8
    1360:	516d6f72 	smcpl	55026	; 0xd6f2
    1364:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
    1368:	61547600 	cmpvs	r4, r0, lsl #12
    136c:	72506b73 	subsvc	r6, r0, #117760	; 0x1cc00
    1370:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    1374:	69447974 	stmdbvs	r4, {r2, r4, r5, r6, r8, fp, ip, sp, lr}^
    1378:	686e6973 	stmdavs	lr!, {r0, r1, r4, r5, r6, r8, fp, sp, lr}^
    137c:	74697265 	strbtvc	r7, [r9], #-613	; 0xfffffd9b
    1380:	65746641 	ldrbvs	r6, [r4, #-1601]!	; 0xfffff9bf
    1384:	6d695472 	cfstrdvs	mvd5, [r9, #-456]!	; 0xfffffe38
    1388:	74756f65 	ldrbtvc	r6, [r5], #-3941	; 0xfffff09b
    138c:	75447800 	strbvc	r7, [r4, #-2048]	; 0xfffff800
    1390:	33796d6d 	cmncc	r9, #6976	; 0x1b40
    1394:	61547800 	cmpvs	r4, r0, lsl #16
    1398:	65476b73 	strbvs	r6, [r7, #-2931]	; 0xfffff48d
    139c:	72754374 	rsbsvc	r4, r5, #116, 6	; 0xd0000001
    13a0:	746e6572 	strbtvc	r6, [lr], #-1394	; 0xfffffa8e
    13a4:	6b736154 	blvs	1cd98fc <__RAM_SIZE+0x1bd98fc>
    13a8:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
    13ac:	7000656c 	andvc	r6, r0, ip, ror #10
    13b0:	61654863 	cmnvs	r5, r3, ror #16
    13b4:	51780064 	cmnpl	r8, r4, rrx
    13b8:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
    13bc:	65766947 	ldrbvs	r6, [r6, #-2375]!	; 0xfffff6b9
    13c0:	6574754d 	ldrbvs	r7, [r4, #-1357]!	; 0xfffffab3
    13c4:	63655278 	cmnvs	r5, #120, 4	; 0x80000007
    13c8:	69737275 	ldmdbvs	r3!, {r0, r2, r4, r5, r6, r9, ip, sp, lr}^
    13cc:	70006576 	andvc	r6, r0, r6, ror r5
    13d0:	6e557672 	mrcvs	6, 2, r7, cr5, cr2, {3}
    13d4:	6b636f6c 	blvs	18dd18c <__RAM_SIZE+0x17dd18c>
    13d8:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
    13dc:	51780065 	cmnpl	r8, r5, rrx
    13e0:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
    13e4:	656e6547 	strbvs	r6, [lr, #-1351]!	; 0xfffffab9
    13e8:	52636972 	rsbpl	r6, r3, #1867776	; 0x1c8000
    13ec:	74657365 	strbtvc	r7, [r5], #-869	; 0xfffffc9b
    13f0:	75517800 	ldrbvc	r7, [r1, #-2048]	; 0xfffff800
    13f4:	49657565 	stmdbmi	r5!, {r0, r2, r5, r6, r8, sl, ip, sp, lr}^
    13f8:	65755173 	ldrbvs	r5, [r5, #-371]!	; 0xfffffe8d
    13fc:	6d456575 	cfstr64vs	mvdx6, [r5, #-468]	; 0xfffffe2c
    1400:	46797470 			; <UNDEFINED> instruction: 0x46797470
    1404:	496d6f72 	stmdbmi	sp!, {r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
    1408:	78005253 	stmdavc	r0, {r0, r1, r4, r6, r9, ip, lr}
    140c:	55455551 	strbpl	r5, [r5, #-1361]	; 0xfffffaaf
    1410:	78700045 	ldmdavc	r0!, {r0, r2, r6}^
    1414:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
    1418:	74655365 	strbtvc	r5, [r5], #-869	; 0xfffffc9b
    141c:	746e6f43 	strbtvc	r6, [lr], #-3907	; 0xfffff0bd
    1420:	656e6961 	strbvs	r6, [lr, #-2401]!	; 0xfffff69f
    1424:	50780072 	rsbspl	r0, r8, r2, ror r0
    1428:	7469736f 	strbtvc	r7, [r9], #-879	; 0xfffffc91
    142c:	006e6f69 	rsbeq	r6, lr, r9, ror #30
    1430:	65755178 	ldrbvs	r5, [r5, #-376]!	; 0xfffffe88
    1434:	64416575 	strbvs	r6, [r1], #-1397	; 0xfffffa8b
    1438:	536f5464 	cmnpl	pc, #100, 8	; 0x64000000
    143c:	63007465 	movwvs	r7, #1125	; 0x465
    1440:	6f4c7852 	svcvs	0x004c7852
    1444:	78006b63 	stmdavc	r0, {r0, r1, r5, r6, r8, r9, fp, sp, lr}
    1448:	54415453 	strbpl	r5, [r1], #-1107	; 0xfffffbad
    144c:	515f4349 	cmppl	pc, r9, asr #6
    1450:	45554555 	ldrbmi	r4, [r5, #-1365]	; 0xfffffaab
    1454:	45787500 	ldrbmi	r7, [r8, #-1280]!	; 0xfffffb00
    1458:	746e6576 	strbtvc	r6, [lr], #-1398	; 0xfffffa8a
    145c:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
    1460:	6e654c65 	cdpvs	12, 6, cr4, cr5, cr5, {3}
    1464:	00687467 	rsbeq	r7, r8, r7, ror #8
    1468:	73615478 	cmnvc	r1, #120, 8	; 0x78000000
    146c:	6d65526b 	sfmvs	f5, 2, [r5, #-428]!	; 0xfffffe54
    1470:	4665766f 	strbtmi	r7, [r5], -pc, ror #12
    1474:	456d6f72 	strbmi	r6, [sp, #-3954]!	; 0xfffff08e
    1478:	746e6576 	strbtvc	r6, [lr], #-1398	; 0xfffffa8a
    147c:	7473694c 	ldrbtvc	r6, [r3], #-2380	; 0xfffff6b4
    1480:	61745300 	cmnvs	r4, r0, lsl #6
    1484:	4c636974 			; <UNDEFINED> instruction: 0x4c636974
    1488:	5f747369 	svcpl	0x00747369
    148c:	51780074 	cmnpl	r8, r4, ror r0
    1490:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
    1494:	61657243 	cmnvs	r5, r3, asr #4
    1498:	6f436574 	svcvs	0x00436574
    149c:	69746e75 	ldmdbvs	r4!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
    14a0:	6553676e 	ldrbvs	r6, [r3, #-1902]	; 0xfffff892
    14a4:	6870616d 	ldmdavs	r0!, {r0, r2, r3, r5, r6, r8, sp, lr}^
    14a8:	0065726f 	rsbeq	r7, r5, pc, ror #4
    14ac:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
    14b0:	61546369 	cmpvs	r4, r9, ror #6
    14b4:	745f6b73 	ldrbvc	r6, [pc], #-2931	; 14bc <__HEAP_SIZE+0x4bc>
    14b8:	6f437800 	svcvs	0x00437800
    14bc:	44496572 	strbmi	r6, [r9], #-1394	; 0xfffffa8e
    14c0:	54637000 	strbtpl	r7, [r3], #-0
    14c4:	4e6b7361 	cdpmi	3, 6, cr7, cr11, cr1, {3}
    14c8:	00656d61 	rsbeq	r6, r5, r1, ror #26
    14cc:	73615476 	cmnvc	r1, #1979711488	; 0x76000000
    14d0:	616c506b 	cmnvs	ip, fp, rrx
    14d4:	6e4f6563 	cdpvs	5, 4, cr6, cr15, cr3, {3}
    14d8:	726f6e55 	rsbvc	r6, pc, #1360	; 0x550
    14dc:	65726564 	ldrbvs	r6, [r2, #-1380]!	; 0xfffffa9c
    14e0:	65764564 	ldrbvs	r4, [r6, #-1380]!	; 0xfffffa9c
    14e4:	694c746e 	stmdbvs	ip, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
    14e8:	70007473 	andvc	r7, r0, r3, ror r4
    14ec:	64497870 	strbvs	r7, [r9], #-2160	; 0xfffff790
    14f0:	6154656c 	cmpvs	r4, ip, ror #10
    14f4:	74536b73 	ldrbvc	r6, [r3], #-2931	; 0xfffff48d
    14f8:	426b6361 	rsbmi	r6, fp, #-2080374783	; 0x84000001
    14fc:	65666675 	strbvs	r6, [r6, #-1653]!	; 0xfffff98b
    1500:	50780072 	rsbspl	r0, r8, r2, ror r0
    1504:	5374726f 	cmnpl	r4, #-268435450	; 0xf0000006
    1508:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
    150c:	65686353 	strbvs	r6, [r8, #-851]!	; 0xfffffcad
    1510:	656c7564 	strbvs	r7, [ip, #-1380]!	; 0xfffffa9c
    1514:	78750072 	ldmdavc	r5!, {r1, r4, r5, r6}^
    1518:	6f697250 	svcvs	0x00697250
    151c:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    1520:	43787000 	cmnmi	r8, #0
    1524:	74736e6f 	ldrbtvc	r6, [r3], #-3695	; 0xfffff191
    1528:	7473694c 	ldrbtvc	r6, [r3], #-2380	; 0xfffff6b4
    152c:	61547800 	cmpvs	r4, r0, lsl #16
    1530:	65476b73 	strbvs	r6, [r7, #-2931]	; 0xfffff48d
    1534:	6c644974 			; <UNDEFINED> instruction: 0x6c644974
    1538:	73615465 	cmnvc	r1, #1694498816	; 0x65000000
    153c:	6e61486b 	cdpvs	8, 6, cr4, cr1, cr11, {3}
    1540:	46656c64 	strbtmi	r6, [r5], -r4, ror #24
    1544:	6f43726f 	svcvs	0x0043726f
    1548:	70006572 	andvc	r6, r0, r2, ror r5
    154c:	61745378 	cmnvs	r4, r8, ror r3
    1550:	694c6574 	stmdbvs	ip, {r2, r4, r5, r6, r8, sl, sp, lr}^
    1554:	65007473 	strvs	r7, [r0, #-1139]	; 0xfffffb8d
    1558:	70737553 	rsbsvc	r7, r3, r3, asr r5
    155c:	65646e65 	strbvs	r6, [r4, #-3685]!	; 0xfffff19b
    1560:	78750064 	ldmdavc	r5!, {r2, r5, r6}^
    1564:	6d6d7544 	cfstr64vs	mvdx7, [sp, #-272]!	; 0xfffffef0
    1568:	00323179 	eorseq	r3, r2, r9, ror r1
    156c:	73615478 	cmnvc	r1, #120, 8	; 0x78000000
    1570:	6c65446b 	cfstrdvs	mvd4, [r5], #-428	; 0xfffffe54
    1574:	6e557961 	vnmlavs.f16	s15, s10, s3	; <UNPREDICTABLE>
    1578:	006c6974 	rsbeq	r6, ip, r4, ror r9
    157c:	6e4f7875 	mcrvs	8, 2, r7, cr15, cr5, {3}
    1580:	6e4f796c 	vmlsvs.f16	s15, s30, s25	; <UNPREDICTABLE>
    1584:	74754d65 	ldrbtvc	r4, [r5], #-3429	; 0xfffff29b
    1588:	65487865 	strbvs	r7, [r8, #-2149]	; 0xfffff79b
    158c:	7500646c 	strvc	r6, [r0, #-1132]	; 0xfffffb94
    1590:	7469426c 	strbtvc	r4, [r9], #-620	; 0xfffffd94
    1594:	436f5473 	cmnmi	pc, #1929379840	; 0x73000000
    1598:	7261656c 	rsbvc	r6, r1, #108, 10	; 0x1b000000
    159c:	78456e4f 	stmdavc	r5, {r0, r1, r2, r3, r6, r9, sl, fp, sp, lr}^
    15a0:	78007469 	stmdavc	r0, {r0, r3, r5, r6, sl, ip, sp, lr}
    15a4:	6b736154 	blvs	1cd9afc <__RAM_SIZE+0x1bd9afc>
    15a8:	53746547 	cmnpl	r4, #297795584	; 0x11c00000
    15ac:	64656863 	strbtvs	r6, [r5], #-2147	; 0xfffff79d
    15b0:	72656c75 	rsbvc	r6, r5, #29952	; 0x7500
    15b4:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
    15b8:	4e650065 	cdpmi	0, 6, cr0, cr5, cr5, {3}
    15bc:	7463416f 	strbtvc	r4, [r3], #-367	; 0xfffffe91
    15c0:	006e6f69 	rsbeq	r6, lr, r9, ror #30
    15c4:	6f547875 	svcvs	0x00547875
    15c8:	61655270 	smcvs	21792	; 0x5520
    15cc:	72507964 	subsvc	r7, r0, #100, 18	; 0x190000
    15d0:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    15d4:	70007974 	andvc	r7, r0, r4, ror r9
    15d8:	6c654478 	cfstrdvs	mvd4, [r5], #-480	; 0xfffffe20
    15dc:	64657961 	strbtvs	r7, [r5], #-2401	; 0xfffff69f
    15e0:	7473694c 	ldrbtvc	r6, [r3], #-2380	; 0xfffff6b4
    15e4:	45787000 	ldrbmi	r7, [r8, #-0]!
    15e8:	746e6576 	strbtvc	r6, [lr], #-1398	; 0xfffffa8a
    15ec:	7473694c 	ldrbtvc	r6, [r3], #-2380	; 0xfffff6b4
    15f0:	63537800 	cmpvs	r3, #0, 16
    15f4:	75646568 	strbvc	r6, [r4, #-1384]!	; 0xfffffa98
    15f8:	5272656c 	rsbspl	r6, r2, #108, 10	; 0x1b000000
    15fc:	696e6e75 	stmdbvs	lr!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
    1600:	5300676e 	movwpl	r6, #1902	; 0x76e
    1604:	6b636174 	blvs	18d9bdc <__RAM_SIZE+0x17d9bdc>
    1608:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
    160c:	7500745f 	strvc	r7, [r0, #-1119]	; 0xfffffba1
    1610:	7469426c 	strbtvc	r4, [r9], #-620	; 0xfffffd94
    1614:	436f5473 	cmnmi	pc, #1929379840	; 0x73000000
    1618:	7261656c 	rsbvc	r6, r1, #108, 10	; 0x1b000000
    161c:	44787500 	ldrbtmi	r7, [r8], #-1280	; 0xfffffb00
    1620:	74656c65 	strbtvc	r6, [r5], #-3173	; 0xfffff39b
    1624:	61546465 	cmpvs	r4, r5, ror #8
    1628:	57736b73 			; <UNDEFINED> instruction: 0x57736b73
    162c:	69746961 	ldmdbvs	r4!, {r0, r5, r6, r8, fp, sp, lr}^
    1630:	6c43676e 	mcrrvs	7, 6, r6, r3, cr14
    1634:	556e6165 	strbpl	r6, [lr, #-357]!	; 0xfffffe9b
    1638:	44780070 	ldrbtmi	r0, [r8], #-112	; 0xffffff90
    163c:	74656c65 	strbtvc	r6, [r5], #-3173	; 0xfffff39b
    1640:	42435465 	submi	r5, r3, #1694498816	; 0x65000000
    1644:	64496e49 	strbvs	r6, [r9], #-3657	; 0xfffff1b7
    1648:	6154656c 	cmpvs	r4, ip, ror #10
    164c:	78006b73 	stmdavc	r0, {r0, r1, r4, r5, r6, r8, r9, fp, sp, lr}
    1650:	646e6550 	strbtvs	r6, [lr], #-1360	; 0xfffffab0
    1654:	6f436465 	svcvs	0x00436465
    1658:	73746e75 	cmnvc	r4, #1872	; 0x750
    165c:	52787000 	rsbspl	r7, r8, #0
    1660:	79646165 	stmdbvc	r4!, {r0, r2, r5, r6, r8, sp, lr}^
    1664:	6b736154 	blvs	1cd9bbc <__RAM_SIZE+0x1bd9bbc>
    1668:	73694c73 	cmnvc	r9, #29440	; 0x7300
    166c:	78007374 	stmdavc	r0, {r2, r4, r5, r6, r8, r9, ip, sp, lr}
    1670:	65707845 	ldrbvs	r7, [r0, #-2117]!	; 0xfffff7bb
    1674:	64657463 	strbtvs	r7, [r5], #-1123	; 0xfffffb9d
    1678:	656c6449 	strbvs	r6, [ip, #-1097]!	; 0xfffffbb7
    167c:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    1680:	44787500 	ldrbtmi	r7, [r8], #-1280	; 0xfffffb00
    1684:	796d6d75 	stmdbvc	sp!, {r0, r2, r4, r5, r6, r8, sl, fp, sp, lr}^
    1688:	78003032 	stmdavc	r0, {r1, r4, r5, ip, sp}
    168c:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    1690:	73615472 	cmnvc	r1, #1912602624	; 0x72000000
    1694:	4243546b 	submi	r5, r3, #1795162112	; 0x6b000000
    1698:	4f637500 	svcmi	0x00637500
    169c:	69676972 	stmdbvs	r7!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    16a0:	4e6c616e 	powmiez	f6, f4, #0.5
    16a4:	6669746f 	strbtvs	r7, [r9], -pc, ror #8
    16a8:	61745379 	cmnvs	r4, r9, ror r3
    16ac:	76006574 			; <UNDEFINED> instruction: 0x76006574
    16b0:	6b736154 	blvs	1cd9c08 <__RAM_SIZE+0x1bd9c08>
    16b4:	54746553 	ldrbtpl	r6, [r4], #-1363	; 0xfffffaad
    16b8:	4f656d69 	svcmi	0x00656d69
    16bc:	74537475 	ldrbvc	r7, [r3], #-1141	; 0xfffffb8b
    16c0:	00657461 	rsbeq	r7, r5, r1, ror #8
    16c4:	73615478 	cmnvc	r1, #120, 8	; 0x78000000
    16c8:	6e65476b 	cdpvs	7, 6, cr4, cr5, cr11, {3}
    16cc:	63697265 	cmnvs	r9, #1342177286	; 0x50000006
    16d0:	69746f4e 	ldmdbvs	r4!, {r1, r2, r3, r6, r8, r9, sl, fp, sp, lr}^
    16d4:	72467966 	subvc	r7, r6, #1671168	; 0x198000
    16d8:	53496d6f 	movtpl	r6, #40303	; 0x9d6f
    16dc:	59780052 	ldmdbpl	r8!, {r1, r4, r6}^
    16e0:	646c6569 	strbtvs	r6, [ip], #-1385	; 0xfffffa97
    16e4:	646e6550 	strbtvs	r6, [lr], #-1360	; 0xfffffab0
    16e8:	73676e69 	cmnvc	r7, #1680	; 0x690
    16ec:	63757000 	cmnvs	r5, #0
    16f0:	63617453 	cmnvs	r1, #1392508928	; 0x53000000
    16f4:	7479426b 	ldrbtvc	r4, [r9], #-619	; 0xfffffd95
    16f8:	44780065 	ldrbtmi	r0, [r8], #-101	; 0xffffff9b
    16fc:	79616c65 	stmdbvc	r1!, {r0, r2, r5, r6, sl, fp, sp, lr}^
    1700:	61546465 	cmpvs	r4, r5, ror #8
    1704:	694c6b73 	stmdbvs	ip, {r0, r1, r4, r5, r6, r8, r9, fp, sp, lr}^
    1708:	00317473 	eorseq	r7, r1, r3, ror r4
    170c:	6c654478 	cfstrdvs	mvd4, [r5], #-480	; 0xfffffe20
    1710:	64657961 	strbtvs	r7, [r5], #-2401	; 0xfffff69f
    1714:	6b736154 	blvs	1cd9c6c <__RAM_SIZE+0x1bd9c6c>
    1718:	7473694c 	ldrbtvc	r6, [r3], #-2380	; 0xfffff6b4
    171c:	78700032 	ldmdavc	r0!, {r1, r4, r5}^
    1720:	7265764f 	rsbvc	r7, r5, #82837504	; 0x4f00000
    1724:	776f6c66 	strbvc	r6, [pc, -r6, ror #24]!
    1728:	65446465 	strbvs	r6, [r4, #-1125]	; 0xfffffb9b
    172c:	6579616c 	ldrbvs	r6, [r9, #-364]!	; 0xfffffe94
    1730:	73694c64 	cmnvc	r9, #100, 24	; 0x6400
    1734:	55780074 	ldrbpl	r0, [r8, #-116]!	; 0xffffff8c
    1738:	74616470 	strbtvc	r6, [r1], #-1136	; 0xfffffb90
    173c:	69546465 	ldmdbvs	r4, {r0, r2, r5, r6, sl, sp, lr}^
    1740:	6f436b63 	svcvs	0x00436b63
    1744:	00746e75 	rsbseq	r6, r4, r5, ror lr
    1748:	73615478 	cmnvc	r1, #120, 8	; 0x78000000
    174c:	7461436b 	strbtvc	r4, [r1], #-875	; 0xfffffc95
    1750:	70556863 	subsvc	r6, r5, r3, ror #16
    1754:	6b636954 	blvs	18dbcac <__RAM_SIZE+0x17dbcac>
    1758:	6c750073 	ldclvs	0, cr0, [r5], #-460	; 0xfffffe34
    175c:	61726150 	cmnvs	r2, r0, asr r1
    1760:	6574656d 	ldrbvs	r6, [r4, #-1389]!	; 0xfffffa93
    1764:	65007372 	strvs	r7, [r0, #-882]	; 0xfffffc8e
    1768:	75746552 	ldrbvc	r6, [r4, #-1362]!	; 0xfffffaae
    176c:	78006e72 	stmdavc	r0, {r1, r4, r5, r6, r9, sl, fp, sp, lr}
    1770:	6b736154 	blvs	1cd9cc8 <__RAM_SIZE+0x1bd9cc8>
    1774:	65526f54 	ldrbvs	r6, [r2, #-3924]	; 0xfffff0ac
    1778:	656d7573 	strbvs	r7, [sp, #-1395]!	; 0xfffffa8d
    177c:	49787500 	ldmdbmi	r8!, {r8, sl, ip, sp, lr}^
    1780:	7865646e 	stmdavc	r5!, {r1, r2, r3, r5, r6, sl, sp, lr}^
    1784:	6c436f54 	mcrrvs	15, 5, r6, r3, cr4
    1788:	00726165 	rsbseq	r6, r2, r5, ror #2
    178c:	73615476 	cmnvc	r1, #1979711488	; 0x76000000
    1790:	7465536b 	strbtvc	r5, [r5], #-875	; 0xfffffc95
    1794:	6c707041 	ldclvs	0, cr7, [r0], #-260	; 0xfffffefc
    1798:	74616369 	strbtvc	r6, [r1], #-873	; 0xfffffc97
    179c:	546e6f69 	strbtpl	r6, [lr], #-3945	; 0xfffff097
    17a0:	546b7361 	strbtpl	r7, [fp], #-865	; 0xfffffc9f
    17a4:	78006761 	stmdavc	r0, {r0, r5, r6, r8, r9, sl, sp, lr}
    17a8:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    17ac:	65724372 	ldrbvs	r4, [r2, #-882]!	; 0xfffffc8e
    17b0:	54657461 	strbtpl	r7, [r5], #-1121	; 0xfffffb9f
    17b4:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    17b8:	6b736154 	blvs	1cd9d10 <__RAM_SIZE+0x1bd9d10>
    17bc:	6c536500 	cfldr64vs	mvdx6, [r3], {-0}
    17c0:	4d706565 	cfldr64mi	mvdx6, [r0, #-404]!	; 0xfffffe6c
    17c4:	5365646f 	cmnpl	r5, #1862270976	; 0x6f000000
    17c8:	75746174 	ldrbvc	r6, [r4, #-372]!	; 0xfffffe8c
    17cc:	78750073 	ldmdavc	r5!, {r0, r1, r4, r5, r6}^
    17d0:	68676948 	stmdavs	r7!, {r3, r6, r8, fp, sp, lr}^
    17d4:	72507265 	subsvc	r7, r0, #1342177286	; 0x50000006
    17d8:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    17dc:	65527974 	ldrbvs	r7, [r2, #-2420]	; 0xfffff68c
    17e0:	54796461 	ldrbtpl	r6, [r9], #-1121	; 0xfffffb9f
    17e4:	736b7361 	cmnvc	fp, #-2080374783	; 0x84000001
    17e8:	61547800 	cmpvs	r4, r0, lsl #16
    17ec:	72436b73 	subvc	r6, r3, #117760	; 0x1cc00
    17f0:	65746165 	ldrbvs	r6, [r4, #-357]!	; 0xfffffe9b
    17f4:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
    17f8:	74006369 	strvc	r6, [r0], #-873	; 0xfffffc97
    17fc:	43546b73 	cmpmi	r4, #117760	; 0x1cc00
    1800:	63750042 	cmnvs	r5, #66	; 0x42
    1804:	69746f4e 	ldmdbvs	r4!, {r1, r2, r3, r6, r8, r9, sl, fp, sp, lr}^
    1808:	74537966 	ldrbvc	r7, [r3], #-2406	; 0xfffff69a
    180c:	00657461 	rsbeq	r7, r5, r1, ror #8
    1810:	70704176 	rsbsvc	r4, r0, r6, ror r1
    1814:	6163696c 	cmnvs	r3, ip, ror #18
    1818:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    181c:	54746547 	ldrbtpl	r6, [r4], #-1351	; 0xfffffab9
    1820:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    1824:	6b736154 	blvs	1cd9d7c <__RAM_SIZE+0x1bd9d7c>
    1828:	6f6d654d 	svcvs	0x006d654d
    182c:	78007972 	stmdavc	r0, {r1, r4, r5, r6, r8, fp, ip, sp, lr}
    1830:	6b736154 	blvs	1cd9d88 <__RAM_SIZE+0x1bd9d88>
    1834:	656e6547 	strbvs	r6, [lr, #-1351]!	; 0xfffffab9
    1838:	4e636972 			; <UNDEFINED> instruction: 0x4e636972
    183c:	6669746f 	strbtvs	r7, [r9], -pc, ror #8
    1840:	78700079 	ldmdavc	r0!, {r0, r3, r4, r5, r6}^
    1844:	6c626e55 	stclvs	14, cr6, [r2], #-340	; 0xfffffeac
    1848:	656b636f 	strbvs	r6, [fp, #-879]!	; 0xfffffc91
    184c:	42435464 	submi	r5, r3, #100, 8	; 0x64000000
    1850:	6c437800 	mcrrvs	8, 0, r7, r3, cr0
    1854:	43726165 	cmnmi	r2, #1073741849	; 0x40000019
    1858:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
    185c:	78456e4f 	stmdavc	r5, {r0, r1, r2, r3, r6, r9, sl, fp, sp, lr}^
    1860:	70007469 	andvc	r7, r0, r9, ror #8
    1864:	72437672 	subvc	r7, r3, #119537664	; 0x7200000
    1868:	65746165 	ldrbvs	r6, [r4, #-357]!	; 0xfffffe9b
    186c:	6b736154 	blvs	1cd9dc4 <__RAM_SIZE+0x1bd9dc4>
    1870:	6c457800 	mcrrvs	8, 0, r7, r5, cr0
    1874:	65737061 	ldrbvs	r7, [r3, #-97]!	; 0xffffff9f
    1878:	6d695464 	cfstrdvs	mvd5, [r9, #-400]!	; 0xfffffe70
    187c:	41650065 	cmnmi	r5, r5, rrx
    1880:	74726f62 	ldrbtvc	r6, [r2], #-3938	; 0xfffff09e
    1884:	65656c53 	strbvs	r6, [r5, #-3155]!	; 0xfffff3ad
    1888:	53650070 	cmnpl	r5, #112	; 0x70
    188c:	61567465 	cmpvs	r6, r5, ror #8
    1890:	5765756c 	strbpl	r7, [r5, -ip, ror #10]!
    1894:	4f687469 	svcmi	0x00687469
    1898:	77726576 			; <UNDEFINED> instruction: 0x77726576
    189c:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
    18a0:	61547800 	cmpvs	r4, r0, lsl #16
    18a4:	65476b73 	strbvs	r6, [r7, #-2931]	; 0xfffff48d
    18a8:	63695474 	cmnvs	r9, #116, 8	; 0x74000000
    18ac:	756f436b 	strbvc	r4, [pc, #-875]!	; 1549 <__HEAP_SIZE+0x549>
    18b0:	7246746e 	subvc	r7, r6, #1845493760	; 0x6e000000
    18b4:	53496d6f 	movtpl	r6, #40303	; 0x9d6f
    18b8:	6c750052 	ldclvs	0, cr0, [r5], #-328	; 0xfffffeb8
    18bc:	73746942 	cmnvc	r4, #1081344	; 0x108000
    18c0:	6c436f54 	mcrrvs	15, 5, r6, r3, cr4
    18c4:	4f726165 	svcmi	0x00726165
    18c8:	746e456e 	strbtvc	r4, [lr], #-1390	; 0xfffffa92
    18cc:	78007972 	stmdavc	r0, {r1, r4, r5, r6, r8, fp, ip, sp, lr}
    18d0:	656c6449 	strbvs	r6, [ip, #-1097]!	; 0xfffffbb7
    18d4:	6b736154 	blvs	1cd9e2c <__RAM_SIZE+0x1bd9e2c>
    18d8:	656d614e 	strbvs	r6, [sp, #-334]!	; 0xfffffeb2
    18dc:	65646e49 	strbvs	r6, [r4, #-3657]!	; 0xfffff1b7
    18e0:	50780078 	rsbspl	r0, r8, r8, ror r0
    18e4:	69646e65 	stmdbvs	r4!, {r0, r2, r5, r6, r9, sl, fp, sp, lr}^
    18e8:	6552676e 	ldrbvs	r6, [r2, #-1902]	; 0xfffff892
    18ec:	4c796461 	cfldrdmi	mvd6, [r9], #-388	; 0xfffffe7c
    18f0:	00747369 	rsbseq	r7, r4, r9, ror #6
    18f4:	43767270 	cmnmi	r6, #112, 4
    18f8:	74616572 	strbtvc	r6, [r1], #-1394	; 0xfffffa8e
    18fc:	61745365 	cmnvs	r4, r5, ror #6
    1900:	54636974 	strbtpl	r6, [r3], #-2420	; 0xfffff68c
    1904:	006b7361 	rsbeq	r7, fp, r1, ror #6
    1908:	73615478 	cmnvc	r1, #120, 8	; 0x78000000
    190c:	7465476b 	strbtvc	r4, [r5], #-1899	; 0xfffff895
    1910:	6c707041 	ldclvs	0, cr7, [r0], #-260	; 0xfffffefc
    1914:	74616369 	strbtvc	r6, [r1], #-873	; 0xfffffc97
    1918:	546e6f69 	strbtpl	r6, [lr], #-3945	; 0xfffff097
    191c:	546b7361 	strbtpl	r7, [fp], #-865	; 0xfffffc9f
    1920:	78006761 	stmdavc	r0, {r0, r5, r6, r8, r9, sl, sp, lr}
    1924:	6b736154 	blvs	1cd9e7c <__RAM_SIZE+0x1bd9e7c>
    1928:	69615773 	stmdbvs	r1!, {r0, r1, r4, r5, r6, r8, r9, sl, ip, lr}^
    192c:	676e6974 			; <UNDEFINED> instruction: 0x676e6974
    1930:	6d726554 	cfldr64vs	mvdx6, [r2, #-336]!	; 0xfffffeb0
    1934:	74616e69 	strbtvc	r6, [r1], #-3689	; 0xfffff197
    1938:	006e6f69 	rsbeq	r6, lr, r9, ror #30
    193c:	73615476 	cmnvc	r1, #1979711488	; 0x76000000
    1940:	7365526b 	cmnvc	r5, #-1342177274	; 0xb0000006
    1944:	74537465 	ldrbvc	r7, [r3], #-1125	; 0xfffffb9b
    1948:	00657461 	rsbeq	r7, r5, r1, ror #8
    194c:	65547870 	ldrbvs	r7, [r4, #-2160]	; 0xfffff790
    1950:	7500706d 	strvc	r7, [r0, #-109]	; 0xffffff93
    1954:	706f5478 	rsbvc	r5, pc, r8, ror r4	; <UNPREDICTABLE>
    1958:	64657355 	strbtvs	r7, [r5], #-853	; 0xfffffcab
    195c:	6f697250 	svcvs	0x00697250
    1960:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    1964:	54787500 	ldrbtpl	r7, [r8], #-1280	; 0xfffffb00
    1968:	476b7361 	strbmi	r7, [fp, -r1, ror #6]!
    196c:	74537465 	ldrbvc	r7, [r3], #-1125	; 0xfffffb9b
    1970:	486b6361 	stmdami	fp!, {r0, r5, r6, r8, r9, sp, lr}^
    1974:	57686769 	strbpl	r6, [r8, -r9, ror #14]!
    1978:	72657461 	rsbvc	r7, r5, #1627389952	; 0x61000000
    197c:	6b72614d 	blvs	1c99eb8 <__RAM_SIZE+0x1b99eb8>
    1980:	61547800 	cmpvs	r4, r0, lsl #16
    1984:	6e496b73 	vmovvs.8	d9[3], r6
    1988:	6d657263 	sfmvs	f7, 2, [r5, #-396]!	; 0xfffffe74
    198c:	54746e65 	ldrbtpl	r6, [r4], #-3685	; 0xfffff19b
    1990:	006b6369 	rsbeq	r6, fp, r9, ror #6
    1994:	73615476 	cmnvc	r1, #1979711488	; 0x76000000
    1998:	6574536b 	ldrbvs	r5, [r4, #-875]!	; 0xfffffc95
    199c:	63695470 	cmnvs	r9, #112, 8	; 0x70000000
    19a0:	7875006b 	ldmdavc	r5!, {r0, r1, r3, r5, r6}^
    19a4:	63617453 	cmnvs	r1, #1392508928	; 0x53000000
    19a8:	7065446b 	rsbvc	r4, r5, fp, ror #8
    19ac:	65006874 	strvs	r6, [r0, #-2164]	; 0xfffff78c
    19b0:	69746f4e 	ldmdbvs	r4!, {r1, r2, r3, r6, r8, r9, sl, fp, sp, lr}^
    19b4:	63417966 	movtvs	r7, #6502	; 0x1966
    19b8:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    19bc:	61547800 	cmpvs	r4, r0, lsl #16
    19c0:	65476b73 	strbvs	r6, [r7, #-2931]	; 0xfffff48d
    19c4:	6e614874 	mcrvs	8, 3, r4, cr1, cr4, {3}
    19c8:	00656c64 	rsbeq	r6, r5, r4, ror #24
    19cc:	65446375 	strbvs	r6, [r4, #-885]	; 0xfffffc8b
    19d0:	4179616c 	cmnmi	r9, ip, ror #2
    19d4:	74726f62 	ldrbtvc	r6, [r2], #-3938	; 0xfffff09e
    19d8:	53006465 	movwpl	r6, #1125	; 0x465
    19dc:	69746174 	ldmdbvs	r4!, {r2, r4, r5, r6, r8, sp, lr}^
    19e0:	73694c63 	cmnvc	r9, #25344	; 0x6300
    19e4:	65744974 	ldrbvs	r4, [r4, #-2420]!	; 0xfffff68c
    19e8:	00745f6d 	rsbseq	r5, r4, sp, ror #30
    19ec:	63695478 	cmnvs	r9, #120, 8	; 0x78000000
    19f0:	756f436b 	strbvc	r4, [pc, #-875]!	; 168d <__HEAP_SIZE+0x68d>
    19f4:	7600746e 	strvc	r7, [r0], -lr, ror #8
    19f8:	6b736154 	blvs	1cd9f50 <__RAM_SIZE+0x1bd9f50>
    19fc:	53646e45 	cmnpl	r4, #1104	; 0x450
    1a00:	64656863 	strbtvs	r6, [r5], #-2147	; 0xfffff79d
    1a04:	72656c75 	rsbvc	r6, r5, #29952	; 0x7500
    1a08:	54787500 	ldrbtpl	r7, [r8], #-1280	; 0xfffffb00
    1a0c:	506b7361 	rsbpl	r7, fp, r1, ror #6
    1a10:	726f6972 	rsbvc	r6, pc, #1867776	; 0x1c8000
    1a14:	47797469 	ldrbmi	r7, [r9, -r9, ror #8]!
    1a18:	78007465 	stmdavc	r0, {r0, r2, r5, r6, sl, ip, sp, lr}
    1a1c:	736e6f43 	cmnvc	lr, #268	; 0x10c
    1a20:	63695474 	cmnvs	r9, #116, 8	; 0x74000000
    1a24:	756f436b 	strbvc	r4, [pc, #-875]!	; 16c1 <__HEAP_SIZE+0x6c1>
    1a28:	7800746e 	stmdavc	r0, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
    1a2c:	70737553 	rsbsvc	r7, r3, r3, asr r5
    1a30:	65646e65 	strbvs	r6, [r4, #-3685]!	; 0xfffff19b
    1a34:	73615464 	cmnvc	r1, #100, 8	; 0x64000000
    1a38:	73694c6b 	cmnvc	r9, #27392	; 0x6b00
    1a3c:	63700074 	cmnvs	r0, #116	; 0x74
    1a40:	656d614e 	strbvs	r6, [sp, #-334]!	; 0xfffffeb2
    1a44:	4f787000 	svcmi	0x00787000
    1a48:	66726576 			; <UNDEFINED> instruction: 0x66726576
    1a4c:	44776f6c 	ldrbtmi	r6, [r7], #-3948	; 0xfffff094
    1a50:	79616c65 	stmdbvc	r1!, {r0, r2, r5, r6, sl, fp, sp, lr}^
    1a54:	61546465 	cmpvs	r4, r5, ror #8
    1a58:	694c6b73 	stmdbvs	ip, {r0, r1, r4, r5, r6, r8, r9, fp, sp, lr}^
    1a5c:	75007473 	strvc	r7, [r0, #-1139]	; 0xfffffb8d
    1a60:	6d754478 	cfldrdvs	mvd4, [r5, #-480]!	; 0xfffffe20
    1a64:	0035796d 	eorseq	r7, r5, sp, ror #18
    1a68:	47767270 			; <UNDEFINED> instruction: 0x47767270
    1a6c:	78457465 	stmdavc	r5, {r0, r2, r5, r6, sl, ip, sp, lr}^
    1a70:	74636570 	strbtvc	r6, [r3], #-1392	; 0xfffffa90
    1a74:	64496465 	strbvs	r6, [r9], #-1125	; 0xfffffb9b
    1a78:	6954656c 	ldmdbvs	r4, {r2, r3, r5, r6, r8, sl, sp, lr}^
    1a7c:	7800656d 	stmdavc	r0, {r0, r2, r3, r5, r6, r8, sl, sp, lr}
    1a80:	656c6449 	strbvs	r6, [ip, #-1097]!	; 0xfffffbb7
    1a84:	6b736154 	blvs	1cd9fdc <__RAM_SIZE+0x1bd9fdc>
    1a88:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
    1a8c:	0073656c 	rsbseq	r6, r3, ip, ror #10
    1a90:	73615465 	cmnvc	r1, #1694498816	; 0x65000000
    1a94:	6e6f436b 	cdpvs	3, 6, cr4, cr15, cr11, {3}
    1a98:	6d726966 			; <UNDEFINED> instruction: 0x6d726966
    1a9c:	65656c53 	strbvs	r6, [r5, #-3155]!	; 0xfffff3ad
    1aa0:	646f4d70 	strbtvs	r4, [pc], #-3440	; 1aa8 <__HEAP_SIZE+0xaa8>
    1aa4:	61745365 	cmnvs	r4, r5, ror #6
    1aa8:	00737574 	rsbseq	r7, r3, r4, ror r5
    1aac:	6f4e6c75 	svcvs	0x004e6c75
    1ab0:	69666974 	stmdbvs	r6!, {r2, r4, r5, r6, r8, fp, sp, lr}^
    1ab4:	61566465 	cmpvs	r6, r5, ror #8
    1ab8:	0065756c 	rsbeq	r7, r5, ip, ror #10
    1abc:	65527870 	ldrbvs	r7, [r2, #-2160]	; 0xfffff790
    1ac0:	6e727574 	mrcvs	5, 3, r7, cr2, cr4, {3}
    1ac4:	61547600 	cmpvs	r4, r0, lsl #12
    1ac8:	65526b73 	ldrbvs	r6, [r2, #-2931]	; 0xfffff48d
    1acc:	65766f6d 	ldrbvs	r6, [r6, #-3949]!	; 0xfffff093
    1ad0:	6d6f7246 	sfmvs	f7, 2, [pc, #-280]!	; 19c0 <__HEAP_SIZE+0x9c0>
    1ad4:	726f6e55 	rsbvc	r6, pc, #1360	; 0x550
    1ad8:	65726564 	ldrbvs	r6, [r2, #-1380]!	; 0xfffffa9c
    1adc:	65764564 	ldrbvs	r4, [r6, #-1380]!	; 0xfffffa9c
    1ae0:	694c746e 	stmdbvs	ip, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
    1ae4:	75007473 	strvc	r7, [r0, #-1139]	; 0xfffffb8d
    1ae8:	74754d78 	ldrbtvc	r4, [r5], #-3448	; 0xfffff288
    1aec:	73657865 	cmnvc	r5, #6619136	; 0x650000
    1af0:	646c6548 	strbtvs	r6, [ip], #-1352	; 0xfffffab8
    1af4:	65536500 	ldrbvs	r6, [r3, #-1280]	; 0xfffffb00
    1af8:	6c615674 	stclvs	6, cr5, [r1], #-464	; 0xfffffe30
    1afc:	69576575 	ldmdbvs	r7, {r0, r2, r4, r5, r6, r8, sl, sp, lr}^
    1b00:	756f6874 	strbvc	r6, [pc, #-2164]!	; 1294 <__HEAP_SIZE+0x294>
    1b04:	65764f74 	ldrbvs	r4, [r6, #-3956]!	; 0xfffff08c
    1b08:	69727772 	ldmdbvs	r2!, {r1, r4, r5, r6, r8, r9, sl, ip, sp, lr}^
    1b0c:	78006574 	stmdavc	r0, {r2, r4, r5, r6, r8, sl, sp, lr}
    1b10:	6b736154 	blvs	1cda068 <__RAM_SIZE+0x1bda068>
    1b14:	656e6547 	strbvs	r6, [lr, #-1351]!	; 0xfffffab9
    1b18:	4e636972 			; <UNDEFINED> instruction: 0x4e636972
    1b1c:	6669746f 	strbtvs	r7, [r9], -pc, ror #8
    1b20:	69615779 	stmdbvs	r1!, {r0, r3, r4, r5, r6, r8, r9, sl, ip, lr}^
    1b24:	53780074 	cmnpl	r8, #116	; 0x74
    1b28:	6c756f68 	ldclvs	15, cr6, [r5], #-416	; 0xfffffe60
    1b2c:	6c654464 	cfstrdvs	mvd4, [r5], #-400	; 0xfffffe70
    1b30:	70007961 	andvc	r7, r0, r1, ror #18
    1b34:	64497672 	strbvs	r7, [r9], #-1650	; 0xfffff98e
    1b38:	6154656c 	cmpvs	r4, ip, ror #10
    1b3c:	70006b73 	andvc	r6, r0, r3, ror fp
    1b40:	65537672 	ldrbvs	r7, [r3, #-1650]	; 0xfffff98e
    1b44:	68637261 	stmdavs	r3!, {r0, r5, r6, r9, ip, sp, lr}^
    1b48:	4e726f46 	cdpmi	15, 7, cr6, cr2, cr6, {2}
    1b4c:	57656d61 	strbpl	r6, [r5, -r1, ror #26]!
    1b50:	69687469 	stmdbvs	r8!, {r0, r3, r5, r6, sl, ip, sp, lr}^
    1b54:	6e69536e 	cdpvs	3, 6, cr5, cr9, cr14, {3}
    1b58:	4c656c67 	stclmi	12, cr6, [r5], #-412	; 0xfffffe64
    1b5c:	00747369 	rsbseq	r7, r4, r9, ror #6
    1b60:	61546c75 	cmpvs	r4, r5, ror ip
    1b64:	65476b73 	strbvs	r6, [r7, #-2931]	; 0xfffff48d
    1b68:	6972656e 	ldmdbvs	r2!, {r1, r2, r3, r5, r6, r8, sl, sp, lr}^
    1b6c:	746f4e63 	strbtvc	r4, [pc], #-3683	; 1b74 <__HEAP_SIZE+0xb74>
    1b70:	54796669 	ldrbtpl	r6, [r9], #-1641	; 0xfffff997
    1b74:	00656b61 	rsbeq	r6, r5, r1, ror #22
    1b78:	41767270 	cmnmi	r6, r0, ror r2
    1b7c:	654e6464 	strbvs	r6, [lr, #-1124]	; 0xfffffb9c
    1b80:	73615477 	cmnvc	r1, #1996488704	; 0x77000000
    1b84:	526f546b 	rsbpl	r5, pc, #1795162112	; 0x6b000000
    1b88:	79646165 	stmdbvc	r4!, {r0, r2, r5, r6, r8, sp, lr}^
    1b8c:	7473694c 	ldrbtvc	r6, [r3], #-2380	; 0xfffff6b4
    1b90:	48787000 	ldmdami	r8!, {ip, sp, lr}^
    1b94:	466b6f6f 	strbtmi	r6, [fp], -pc, ror #30
    1b98:	74636e75 	strbtvc	r6, [r3], #-3701	; 0xfffff18b
    1b9c:	006e6f69 	rsbeq	r6, lr, r9, ror #30
    1ba0:	61655265 	cmnvs	r5, r5, ror #4
    1ba4:	70007964 	andvc	r7, r0, r4, ror #18
    1ba8:	72437672 	subvc	r7, r3, #119537664	; 0x7200000
    1bac:	65746165 	ldrbvs	r6, [r4, #-357]!	; 0xfffffe9b
    1bb0:	656c6449 	strbvs	r6, [ip, #-1097]!	; 0xfffffbb7
    1bb4:	6b736154 	blvs	1cda10c <__RAM_SIZE+0x1bda10c>
    1bb8:	54650073 	strbtpl	r0, [r5], #-115	; 0xffffff8d
    1bbc:	476b7361 	strbmi	r7, [fp, -r1, ror #6]!
    1bc0:	74537465 	ldrbvc	r7, [r3], #-1125	; 0xfffffb9b
    1bc4:	00657461 	rsbeq	r7, r5, r1, ror #8
    1bc8:	78757070 	ldmdavc	r5!, {r4, r5, r6, ip, sp, lr}^
    1bcc:	63617453 	cmnvs	r1, #1392508928	; 0x53000000
    1bd0:	6675426b 	ldrbtvs	r4, [r5], -fp, ror #4
    1bd4:	00726566 	rsbseq	r6, r2, r6, ror #10
    1bd8:	654e7870 	strbvs	r7, [lr, #-2160]	; 0xfffff790
    1bdc:	42435477 	submi	r5, r3, #1996488704	; 0x77000000
    1be0:	51787500 	cmnpl	r8, r0, lsl #10
    1be4:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
    1be8:	78707000 	ldmdavc	r0!, {ip, sp, lr}^
    1bec:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    1bf0:	73615472 	cmnvc	r1, #1912602624	; 0x72000000
    1bf4:	6174536b 	cmnvs	r4, fp, ror #6
    1bf8:	75426b63 	strbvc	r6, [r2, #-2915]	; 0xfffff49d
    1bfc:	72656666 	rsbvc	r6, r5, #106954752	; 0x6600000
    1c00:	69597800 	ldmdbvs	r9, {fp, ip, sp, lr}^
    1c04:	4f646c65 	svcmi	0x00646c65
    1c08:	72756363 	rsbsvc	r6, r5, #-1946157055	; 0x8c000001
    1c0c:	00646572 	rsbeq	r6, r4, r2, ror r5
    1c10:	6f6d654d 	svcvs	0x006d654d
    1c14:	65527972 	ldrbvs	r7, [r2, #-2418]	; 0xfffff68e
    1c18:	6e6f6967 	vnmulvs.f16	s13, s30, s15	; <UNPREDICTABLE>
    1c1c:	7800745f 	stmdavc	r0, {r0, r1, r2, r3, r4, r6, sl, ip, sp, lr}
    1c20:	7478654e 	ldrbtvc	r6, [r8], #-1358	; 0xfffffab2
    1c24:	6b736154 	blvs	1cda17c <__RAM_SIZE+0x1bda17c>
    1c28:	6c626e55 	stclvs	14, cr6, [r2], #-340	; 0xfffffeac
    1c2c:	546b636f 	strbtpl	r6, [fp], #-879	; 0xfffffc91
    1c30:	00656d69 	rsbeq	r6, r5, r9, ror #26
    1c34:	6f507870 	svcvs	0x00507870
    1c38:	6e497472 	mcrvs	4, 2, r7, cr9, cr2, {3}
    1c3c:	61697469 	cmnvs	r9, r9, ror #8
    1c40:	6573696c 	ldrbvs	r6, [r3, #-2412]!	; 0xfffff694
    1c44:	63617453 	cmnvs	r1, #1392508928	; 0x53000000
    1c48:	7870006b 	ldmdavc	r0!, {r0, r1, r3, r5, r6}^
    1c4c:	6d6d7544 	cfstr64vs	mvdx7, [sp, #-272]!	; 0xfffffef0
    1c50:	75003179 	strvc	r3, [r0, #-377]	; 0xfffffe87
    1c54:	6d754463 	cfldrdvs	mvd4, [r5, #-396]!	; 0xfffffe74
    1c58:	3931796d 	ldmdbcc	r1!, {r0, r2, r3, r5, r6, r8, fp, ip, sp, lr}
    1c5c:	44787000 	ldrbtmi	r7, [r8], #-0
    1c60:	796d6d75 	stmdbvc	sp!, {r0, r2, r4, r5, r6, r8, sl, fp, sp, lr}^
    1c64:	44650036 	strbtmi	r0, [r5], #-54	; 0xffffffca
    1c68:	74656c65 	strbtvc	r6, [r5], #-3173	; 0xfffff39b
    1c6c:	75006465 	strvc	r6, [r0, #-1125]	; 0xfffffb9b
    1c70:	7361546c 	cmnvc	r1, #108, 8	; 0x6c000000
    1c74:	6e65476b 	cdpvs	7, 6, cr4, cr5, cr11, {3}
    1c78:	63697265 	cmnvs	r9, #1342177286	; 0x50000006
    1c7c:	69746f4e 	ldmdbvs	r4!, {r1, r2, r3, r6, r8, r9, sl, fp, sp, lr}^
    1c80:	61567966 	cmpvs	r6, r6, ror #18
    1c84:	4365756c 	cmnmi	r5, #108, 10	; 0x1b000000
    1c88:	7261656c 	rsbvc	r6, r1, #108, 10	; 0x1b000000
    1c8c:	4c6c7500 	cfstr64mi	mvdx7, [ip], #-0
    1c90:	74676e65 	strbtvc	r6, [r7], #-3685	; 0xfffff19b
    1c94:	426e4968 	rsbmi	r4, lr, #104, 18	; 0x1a0000
    1c98:	73657479 	cmnvc	r5, #2030043136	; 0x79000000
    1c9c:	78707000 	ldmdavc	r0!, {ip, sp, lr}^
    1ca0:	656c6449 	strbvs	r6, [ip, #-1097]!	; 0xfffffbb7
    1ca4:	6b736154 	blvs	1cda1fc <__RAM_SIZE+0x1bda1fc>
    1ca8:	42424354 	submi	r4, r2, #84, 6	; 0x50000001
    1cac:	65666675 	strbvs	r6, [r6, #-1653]!	; 0xfffff98b
    1cb0:	72700072 	rsbsvc	r0, r0, #114	; 0x72
    1cb4:	73655276 	cmnvc	r5, #1610612743	; 0x60000007
    1cb8:	654e7465 	strbvs	r7, [lr, #-1125]	; 0xfffffb9b
    1cbc:	61547478 	cmpvs	r4, r8, ror r4
    1cc0:	6e556b73 	vmovvs.s8	r6, d5[3]
    1cc4:	636f6c62 	cmnvs	pc, #25088	; 0x6200
    1cc8:	6d69546b 	cfstrdvs	mvd5, [r9, #-428]!	; 0xfffffe54
    1ccc:	78750065 	ldmdavc	r5!, {r0, r2, r5, r6}^
    1cd0:	5077654e 	rsbspl	r6, r7, lr, asr #10
    1cd4:	726f6972 	rsbvc	r6, pc, #1867776	; 0x1c8000
    1cd8:	00797469 	rsbseq	r7, r9, r9, ror #8
    1cdc:	6b736154 	blvs	1cda234 <__RAM_SIZE+0x1bda234>
    1ce0:	636e7546 	cmnvs	lr, #293601280	; 0x11800000
    1ce4:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    1ce8:	7000745f 	andvc	r7, r0, pc, asr r4
    1cec:	72506c75 	subsvc	r6, r0, #29952	; 0x7500
    1cf0:	6f697665 	svcvs	0x00697665
    1cf4:	6f4e7375 	svcvs	0x004e7375
    1cf8:	69666974 	stmdbvs	r6!, {r2, r4, r5, r6, r8, fp, sp, lr}^
    1cfc:	69746163 	ldmdbvs	r4!, {r0, r1, r5, r6, r8, sp, lr}^
    1d00:	61566e6f 	cmpvs	r6, pc, ror #28
    1d04:	0065756c 	rsbeq	r7, r5, ip, ror #10
    1d08:	69547870 	ldmdbvs	r4, {r4, r5, r6, fp, ip, sp, lr}^
    1d0c:	754f656d 	strbvc	r6, [pc, #-1389]	; 17a7 <__HEAP_SIZE+0x7a7>
    1d10:	78750074 	ldmdavc	r5!, {r2, r4, r5, r6}^
    1d14:	6b736154 	blvs	1cda26c <__RAM_SIZE+0x1bda26c>
    1d18:	6f697250 	svcvs	0x00697250
    1d1c:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    1d20:	46746547 	ldrbtmi	r6, [r4], -r7, asr #10
    1d24:	496d6f72 	stmdbmi	sp!, {r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
    1d28:	75005253 	strvc	r5, [r0, #-595]	; 0xfffffdad
    1d2c:	6d754463 	cfldrdvs	mvd4, [r5, #-396]!	; 0xfffffe74
    1d30:	3132796d 	teqcc	r2, sp, ror #18
    1d34:	61547800 	cmpvs	r4, r0, lsl #16
    1d38:	65476b73 	strbvs	r6, [r7, #-2931]	; 0xfffff48d
    1d3c:	63695474 	cmnvs	r9, #116, 8	; 0x74000000
    1d40:	756f436b 	strbvc	r4, [pc, #-875]!	; 19dd <__HEAP_SIZE+0x9dd>
    1d44:	7800746e 	stmdavc	r0, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
    1d48:	6b636954 	blvs	18dc2a0 <__RAM_SIZE+0x17dc2a0>
    1d4c:	4a6f5473 	bmi	1bd6f20 <__RAM_SIZE+0x1ad6f20>
    1d50:	00706d75 	rsbseq	r6, r0, r5, ror sp
    1d54:	61547875 	cmpvs	r4, r5, ror r8
    1d58:	754e6b73 	strbvc	r6, [lr, #-2931]	; 0xfffff48d
    1d5c:	7265626d 	rsbvc	r6, r5, #-805306362	; 0xd0000006
    1d60:	63416500 	movtvs	r6, #5376	; 0x1500
    1d64:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    1d68:	54787500 	ldrbtpl	r7, [r8], #-1280	; 0xfffffb00
    1d6c:	526b7361 	rsbpl	r7, fp, #-2080374783	; 0x84000001
    1d70:	74657365 	strbtvc	r7, [r5], #-869	; 0xfffffc9b
    1d74:	6e657645 	cdpvs	6, 6, cr7, cr5, cr5, {2}
    1d78:	65744974 	ldrbvs	r4, [r4, #-2420]!	; 0xfffff68c
    1d7c:	6c61566d 	stclvs	6, cr5, [r1], #-436	; 0xfffffe4c
    1d80:	76006575 			; <UNDEFINED> instruction: 0x76006575
    1d84:	6b736154 	blvs	1cda2dc <__RAM_SIZE+0x1bda2dc>
    1d88:	6f697250 	svcvs	0x00697250
    1d8c:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    1d90:	00746553 	rsbseq	r6, r4, r3, asr r5
    1d94:	61547875 	cmpvs	r4, r5, ror r8
    1d98:	61426b73 	hvcvs	9907	; 0x26b3
    1d9c:	72506573 	subsvc	r6, r0, #482344960	; 0x1cc00000
    1da0:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    1da4:	65477974 	strbvs	r7, [r7, #-2420]	; 0xfffff68c
    1da8:	6f724674 	svcvs	0x00724674
    1dac:	5253496d 	subspl	r4, r3, #1785856	; 0x1b4000
    1db0:	61546500 	cmpvs	r4, r0, lsl #10
    1db4:	74536b73 	ldrbvc	r6, [r3], #-2931	; 0xfffff48d
    1db8:	00657461 	rsbeq	r7, r5, r1, ror #8
    1dbc:	54787070 	ldrbtpl	r7, [r8], #-112	; 0xffffff90
    1dc0:	426b7361 	rsbmi	r7, fp, #-2080374783	; 0x84000001
    1dc4:	65666675 	strbvs	r6, [r6, #-1653]!	; 0xfffff98b
    1dc8:	78700072 	ldmdavc	r0!, {r1, r4, r5, r6}^
    1dcc:	4d646e45 	stclmi	14, cr6, [r4, #-276]!	; 0xfffffeec
    1dd0:	656b7261 	strbvs	r7, [fp, #-609]!	; 0xfffffd9f
    1dd4:	75700072 	ldrbvc	r0, [r0, #-114]!	; 0xffffff8e
    1dd8:	6c644978 			; <UNDEFINED> instruction: 0x6c644978
    1ddc:	73615465 	cmnvc	r1, #1694498816	; 0x65000000
    1de0:	6174536b 	cmnvs	r4, fp, ror #6
    1de4:	69536b63 	ldmdbvs	r3, {r0, r1, r5, r6, r8, r9, fp, sp, lr}^
    1de8:	7800657a 	stmdavc	r0, {r1, r3, r4, r5, r6, r8, sl, sp, lr}
    1dec:	6b736154 	blvs	1cda344 <__RAM_SIZE+0x1bda344>
    1df0:	6f4e6f54 	svcvs	0x004e6f54
    1df4:	79666974 	stmdbvc	r6!, {r2, r4, r5, r6, r8, fp, sp, lr}^
    1df8:	61547800 	cmpvs	r4, r0, lsl #16
    1dfc:	70006b73 	andvc	r6, r0, r3, ror fp
    1e00:	6d754478 	cfldrdvs	mvd4, [r5, #-480]!	; 0xfffffe20
    1e04:	3431796d 	ldrtcc	r7, [r1], #-2413	; 0xfffff693
    1e08:	61547800 	cmpvs	r4, r0, lsl #16
    1e0c:	6f546b73 	svcvs	0x00546b73
    1e10:	72657551 	rsbvc	r7, r5, #339738624	; 0x14400000
    1e14:	53650079 	cmnpl	r5, #121	; 0x79
    1e18:	69427465 	stmdbvs	r2, {r0, r2, r5, r6, sl, ip, sp, lr}^
    1e1c:	78007374 	stmdavc	r0, {r2, r4, r5, r6, r8, r9, ip, sp, lr}
    1e20:	4f4d454d 	svcmi	0x004d454d
    1e24:	525f5952 	subspl	r5, pc, #1343488	; 0x148000
    1e28:	4f494745 	svcmi	0x00494745
    1e2c:	7875004e 	ldmdavc	r5!, {r1, r2, r3, r6}^
    1e30:	72727543 	rsbsvc	r7, r2, #281018368	; 0x10c00000
    1e34:	4c746e65 	ldclmi	14, cr6, [r4], #-404	; 0xfffffe6c
    1e38:	4c747369 	ldclmi	3, cr7, [r4], #-420	; 0xfffffe5c
    1e3c:	74676e65 	strbtvc	r6, [r7], #-3685	; 0xfffff19b
    1e40:	54760068 	ldrbtpl	r0, [r6], #-104	; 0xffffff98
    1e44:	446b7361 	strbtmi	r7, [fp], #-865	; 0xfffffc9f
    1e48:	74656c65 	strbtvc	r6, [r5], #-3173	; 0xfffff39b
    1e4c:	63750065 	cmnvs	r5, #101	; 0x65
    1e50:	6d6d7544 	cfstr64vs	mvdx7, [sp, #-272]!	; 0xfffffef0
    1e54:	78003779 	stmdavc	r0, {r0, r3, r4, r5, r6, r8, r9, sl, ip, sp}
    1e58:	6b736154 	blvs	1cda3b0 <__RAM_SIZE+0x1bda3b0>
    1e5c:	6c6c6143 	stfvse	f6, [ip], #-268	; 0xfffffef4
    1e60:	6c707041 	ldclvs	0, cr7, [r0], #-260	; 0xfffffefc
    1e64:	74616369 	strbtvc	r6, [r1], #-873	; 0xfffffc97
    1e68:	546e6f69 	strbtpl	r6, [lr], #-3945	; 0xfffff097
    1e6c:	486b7361 	stmdami	fp!, {r0, r5, r6, r8, r9, ip, sp, lr}^
    1e70:	006b6f6f 	rsbeq	r6, fp, pc, ror #30
    1e74:	72507875 	subsvc	r7, r0, #7667712	; 0x750000
    1e78:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    1e7c:	6f547974 	svcvs	0x00547974
    1e80:	00657355 	rsbeq	r7, r5, r5, asr r3
    1e84:	73615476 	cmnvc	r1, #1979711488	; 0x76000000
    1e88:	6977536b 	ldmdbvs	r7!, {r0, r1, r3, r5, r6, r8, r9, ip, lr}^
    1e8c:	43686374 	cmnmi	r8, #116, 6	; 0xd0000001
    1e90:	65746e6f 	ldrbvs	r6, [r4, #-3695]!	; 0xfffff191
    1e94:	78007478 	stmdavc	r0, {r3, r4, r5, r6, sl, ip, sp, lr}
    1e98:	4f6d754e 	svcmi	0x006d754e
    1e9c:	65764f66 	ldrbvs	r4, [r6, #-3942]!	; 0xfffff09a
    1ea0:	6f6c6672 	svcvs	0x006c6672
    1ea4:	78007377 	stmdavc	r0, {r0, r1, r2, r4, r5, r6, r8, r9, ip, sp, lr}
    1ea8:	61657242 	cmnvs	r5, r2, asr #4
    1eac:	6f6f4c6b 	svcvs	0x006f4c6b
    1eb0:	54780070 	ldrbtpl	r0, [r8], #-112	; 0xffffff90
    1eb4:	476b7361 	strbmi	r7, [fp, -r1, ror #6]!
    1eb8:	74537465 	ldrbvc	r7, [r3], #-1125	; 0xfffffb9b
    1ebc:	63697461 	cmnvs	r9, #1627389952	; 0x61000000
    1ec0:	66667542 	strbtvs	r7, [r6], -r2, asr #10
    1ec4:	00737265 	rsbseq	r7, r3, r5, ror #4
    1ec8:	75437870 	strbvc	r7, [r3, #-2160]	; 0xfffff790
    1ecc:	6e657272 	mcrvs	2, 3, r7, cr5, cr2, {3}
    1ed0:	42435474 	submi	r5, r3, #116, 8	; 0x74000000
    1ed4:	48787500 	ldmdami	r8!, {r8, sl, ip, sp, lr}^
    1ed8:	65686769 	strbvs	r6, [r8, #-1897]!	; 0xfffff897
    1edc:	72507473 	subsvc	r7, r0, #1929379840	; 0x73000000
    1ee0:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    1ee4:	61577974 	cmpvs	r7, r4, ror r9
    1ee8:	6e697469 	cdpvs	4, 6, cr7, cr9, cr9, {3}
    1eec:	73615467 	cmnvc	r1, #1728053248	; 0x67000000
    1ef0:	5378006b 	cmnpl	r8, #107	; 0x6b
    1ef4:	6c756f68 	ldclvs	15, cr6, [r5], #-416	; 0xfffffe60
    1ef8:	6f6c4264 	svcvs	0x006c4264
    1efc:	63006b63 	movwvs	r6, #2915	; 0xb63
    1f00:	7478654e 	ldrbtvc	r6, [r8], #-1358	; 0xfffffab2
    1f04:	72616843 	rsbvc	r6, r1, #4390912	; 0x430000
    1f08:	54787000 	ldrbtpl	r7, [r8], #-0
    1f0c:	546b7361 	strbtpl	r7, [fp], #-865	; 0xfffffc9f
    1f10:	70006761 	andvc	r6, r0, r1, ror #14
    1f14:	6e497672 	mcrvs	6, 2, r7, cr9, cr2, {3}
    1f18:	61697469 	cmnvs	r9, r9, ror #8
    1f1c:	6573696c 	ldrbvs	r6, [r3, #-2412]!	; 0xfffff694
    1f20:	5477654e 	ldrbtpl	r6, [r7], #-1358	; 0xfffffab2
    1f24:	006b7361 	rsbeq	r7, fp, r1, ror #6
    1f28:	61507670 	cmpvs	r0, r0, ror r6
    1f2c:	656d6172 	strbvs	r6, [sp, #-370]!	; 0xfffffe8e
    1f30:	73726574 	cmnvc	r2, #116, 10	; 0x1d000000
    1f34:	44787000 	ldrbtmi	r7, [r8], #-0
    1f38:	79616c65 	stmdbvc	r1!, {r0, r2, r5, r6, sl, fp, sp, lr}^
    1f3c:	61546465 	cmpvs	r4, r5, ror #8
    1f40:	694c6b73 	stmdbvs	ip, {r0, r1, r4, r5, r6, r8, r9, fp, sp, lr}^
    1f44:	70007473 	andvc	r7, r0, r3, ror r4
    1f48:	61547672 	cmpvs	r4, r2, ror r6
    1f4c:	73496b73 	movtvc	r6, #39795	; 0x9b73
    1f50:	6b736154 	blvs	1cda4a8 <__RAM_SIZE+0x1bda4a8>
    1f54:	70737553 	rsbsvc	r7, r3, r3, asr r5
    1f58:	65646e65 	strbvs	r6, [r4, #-3685]!	; 0xfffff19b
    1f5c:	53780064 	cmnpl	r8, #100	; 0x64
    1f60:	63746977 	cmnvs	r4, #1949696	; 0x1dc000
    1f64:	71655268 	cmnvc	r5, r8, ror #4
    1f68:	65726975 	ldrbvs	r6, [r2, #-2421]!	; 0xfffff68b
    1f6c:	78700064 	ldmdavc	r0!, {r2, r5, r6}^
    1f70:	6574754d 	ldrbvs	r7, [r4, #-1357]!	; 0xfffffab3
    1f74:	6c6f4878 	stclvs	8, cr4, [pc], #-480	; 1d9c <__HEAP_SIZE+0xd9c>
    1f78:	00726564 	rsbseq	r6, r2, r4, ror #10
    1f7c:	74537870 	ldrbvc	r7, [r3], #-2160	; 0xfffff790
    1f80:	006b6361 	rsbeq	r6, fp, r1, ror #6
    1f84:	54787070 	ldrbtpl	r7, [r8], #-112	; 0xffffff90
    1f88:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    1f8c:	6b736154 	blvs	1cda4e4 <__RAM_SIZE+0x1bda4e4>
    1f90:	42424354 	submi	r4, r2, #84, 6	; 0x50000001
    1f94:	65666675 	strbvs	r6, [r6, #-1653]!	; 0xfffff98b
    1f98:	54780072 	ldrbtpl	r0, [r8], #-114	; 0xffffff8e
    1f9c:	546b7361 	strbtpl	r7, [fp], #-865	; 0xfffffc9f
    1fa0:	6c65446f 	cfstrdvs	mvd4, [r5], #-444	; 0xfffffe44
    1fa4:	00657465 	rsbeq	r7, r5, r5, ror #8
    1fa8:	61566c75 	cmpvs	r6, r5, ror ip
    1fac:	0065756c 	rsbeq	r7, r5, ip, ror #10
    1fb0:	73615478 	cmnvc	r1, #120, 8	; 0x78000000
    1fb4:	536f546b 	cmnpl	pc, #1795162112	; 0x6b000000
    1fb8:	65707375 	ldrbvs	r7, [r0, #-885]!	; 0xfffffc8b
    1fbc:	7600646e 	strvc	r6, [r0], -lr, ror #8
    1fc0:	74726f50 	ldrbtvc	r6, [r2], #-3920	; 0xfffff0b0
    1fc4:	53646e45 	cmnpl	r4, #1104	; 0x450
    1fc8:	64656863 	strbtvs	r6, [r5], #-2147	; 0xfffff79d
    1fcc:	72656c75 	rsbvc	r6, r5, #29952	; 0x7500
    1fd0:	49787000 	ldmdbmi	r8!, {ip, sp, lr}^
    1fd4:	54656c64 	strbtpl	r6, [r5], #-3172	; 0xfffff39c
    1fd8:	466b7361 	strbtmi	r7, [fp], -r1, ror #6
    1fdc:	74636e75 	strbtvc	r6, [r3], #-3701	; 0xfffff18b
    1fe0:	006e6f69 	rsbeq	r6, lr, r9, ror #30
    1fe4:	72507870 	subsvc	r7, r0, #112, 16	; 0x700000
    1fe8:	6f697665 	svcvs	0x00697665
    1fec:	61577375 	cmpvs	r7, r5, ror r3
    1ff0:	6954656b 	ldmdbvs	r4, {r0, r1, r3, r5, r6, r8, sl, sp, lr}^
    1ff4:	7800656d 	stmdavc	r0, {r0, r2, r3, r5, r6, r8, sl, sp, lr}
    1ff8:	54415453 	strbpl	r5, [r1], #-1107	; 0xfffffbad
    1ffc:	545f4349 	ldrbpl	r4, [pc], #-841	; 2004 <__HEAP_SIZE+0x1004>
    2000:	78004243 	stmdavc	r0, {r0, r1, r6, r9, lr}
    2004:	6b736154 	blvs	1cda55c <__RAM_SIZE+0x1bda55c>
    2008:	726f6241 	rsbvc	r6, pc, #268435460	; 0x10000004
    200c:	6c654474 	cfstrdvs	mvd4, [r5], #-464	; 0xfffffe30
    2010:	78007961 	stmdavc	r0, {r0, r5, r6, r8, fp, ip, sp, lr}
    2014:	6b736154 	blvs	1cda56c <__RAM_SIZE+0x1bda56c>
    2018:	75736552 	ldrbvc	r6, [r3, #-1362]!	; 0xfffffaae
    201c:	7246656d 	subvc	r6, r6, #457179136	; 0x1b400000
    2020:	53496d6f 	movtpl	r6, #40303	; 0x9d6f
    2024:	6c750052 	ldclvs	0, cr0, [r5], #-328	; 0xfffffeb8
    2028:	6d6d7544 	cfstr64vs	mvdx7, [sp, #-272]!	; 0xfffffef0
    202c:	00383179 	eorseq	r3, r8, r9, ror r1
    2030:	4e6c7570 	mcrmi	5, 3, r7, cr12, cr0, {3}
    2034:	6669746f 	strbtvs	r7, [r9], -pc, ror #8
    2038:	74616369 	strbtvc	r6, [r1], #-873	; 0xfffffc97
    203c:	566e6f69 	strbtpl	r6, [lr], -r9, ror #30
    2040:	65756c61 	ldrbvs	r6, [r5, #-3169]!	; 0xfffff39f
    2044:	49787500 	ldmdbmi	r8!, {r8, sl, ip, sp, lr}^
    2048:	54656c64 	strbtpl	r6, [r5], #-3172	; 0xfffff39c
    204c:	536b7361 	cmnpl	fp, #-2080374783	; 0x84000001
    2050:	6b636174 	blvs	18da628 <__RAM_SIZE+0x17da628>
    2054:	73615400 	cmnvc	r1, #0, 8
    2058:	6f6f486b 	svcvs	0x006f486b
    205c:	6e75466b 	cdpvs	6, 7, cr4, cr5, cr11, {3}
    2060:	6f697463 	svcvs	0x00697463
    2064:	00745f6e 	rsbseq	r5, r4, lr, ror #30
    2068:	61745365 	cmnvs	r4, r5, ror #6
    206c:	7261646e 	rsbvc	r6, r1, #1845493760	; 0x6e000000
    2070:	656c5364 	strbvs	r5, [ip, #-868]!	; 0xfffffc9c
    2074:	75007065 	strvc	r7, [r0, #-101]	; 0xffffff9b
    2078:	756f4378 	strbvc	r4, [pc, #-888]!	; 1d08 <__HEAP_SIZE+0xd08>
    207c:	6500746e 	strvs	r7, [r0, #-1134]	; 0xfffffb92
    2080:	61546f4e 	cmpvs	r4, lr, asr #30
    2084:	57736b73 			; <UNDEFINED> instruction: 0x57736b73
    2088:	69746961 	ldmdbvs	r4!, {r0, r5, r6, r8, fp, sp, lr}^
    208c:	6954676e 	ldmdbvs	r4, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}^
    2090:	756f656d 	strbvc	r6, [pc, #-1389]!	; 1b2b <__HEAP_SIZE+0xb2b>
    2094:	75700074 	ldrbvc	r0, [r0, #-116]!	; 0xffffff8c
    2098:	646e4563 	strbtvs	r4, [lr], #-1379	; 0xfffffa9d
    209c:	7453664f 	ldrbvc	r6, [r3], #-1615	; 0xfffff9b1
    20a0:	006b6361 	rsbeq	r6, fp, r1, ror #6
    20a4:	754d7870 	strbvc	r7, [sp, #-2160]	; 0xfffff790
    20a8:	48786574 	ldmdami	r8!, {r2, r4, r5, r6, r8, sl, sp, lr}^
    20ac:	65646c6f 	strbvs	r6, [r4, #-3183]!	; 0xfffff391
    20b0:	42435472 	submi	r5, r3, #1912602624	; 0x72000000
    20b4:	54637000 	strbtpl	r7, [r3], #-0
    20b8:	476b7361 	strbmi	r7, [fp, -r1, ror #6]!
    20bc:	614e7465 	cmpvs	lr, r5, ror #8
    20c0:	7800656d 	stmdavc	r0, {r0, r2, r3, r5, r6, r8, sl, sp, lr}
    20c4:	6b636954 	blvs	18dc61c <__RAM_SIZE+0x17dc61c>
    20c8:	43780073 	cmnmi	r8, #115	; 0x73
    20cc:	6c426e61 	mcrrvs	14, 6, r6, r2, cr1
    20d0:	496b636f 	stmdbmi	fp!, {r0, r1, r2, r3, r5, r6, r8, r9, sp, lr}^
    20d4:	6665646e 	strbtvs	r6, [r5], -lr, ror #8
    20d8:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
    20dc:	00796c65 	rsbseq	r6, r9, r5, ror #24
    20e0:	6e755265 	cdpvs	2, 7, cr5, cr5, cr5, {3}
    20e4:	676e696e 	strbvs	r6, [lr, -lr, ror #18]!
    20e8:	4e637000 	cdpmi	0, 6, cr7, cr3, cr0, {0}
    20ec:	54656d61 	strbtpl	r6, [r5], #-3425	; 0xfffff29f
    20f0:	6575516f 	ldrbvs	r5, [r5, #-367]!	; 0xfffffe91
    20f4:	70007972 	andvc	r7, r0, r2, ror r9
    20f8:	73614276 	cmnvc	r1, #1610612743	; 0x60000007
    20fc:	64644165 	strbtvs	r4, [r4], #-357	; 0xfffffe9b
    2100:	73736572 	cmnvc	r3, #478150656	; 0x1c800000
    2104:	69547800 	ldmdbvs	r4, {fp, ip, sp, lr}^
    2108:	54736b63 	ldrbtpl	r6, [r3], #-2915	; 0xfffff49d
    210c:	6c65446f 	cfstrdvs	mvd4, [r5], #-444	; 0xfffffe44
    2110:	76007961 	strvc	r7, [r0], -r1, ror #18
    2114:	6b736154 	blvs	1cda66c <__RAM_SIZE+0x1bda66c>
    2118:	656e6547 	strbvs	r6, [lr, #-1351]!	; 0xfffffab9
    211c:	4e636972 			; <UNDEFINED> instruction: 0x4e636972
    2120:	6669746f 	strbtvs	r7, [r9], -pc, ror #8
    2124:	76694779 			; <UNDEFINED> instruction: 0x76694779
    2128:	6f724665 	svcvs	0x00724665
    212c:	5253496d 	subspl	r4, r3, #1785856	; 0x1b4000
    2130:	6f507600 	svcvs	0x00507600
    2134:	75537472 	ldrbvc	r7, [r3, #-1138]	; 0xfffffb8e
    2138:	65727070 	ldrbvs	r7, [r2, #-112]!	; 0xffffff90
    213c:	69547373 	ldmdbvs	r4, {r0, r1, r4, r5, r6, r8, r9, ip, sp, lr}^
    2140:	41736b63 	cmnmi	r3, r3, ror #22
    2144:	6c53646e 	cfldrdvs	mvd6, [r3], {110}	; 0x6e
    2148:	00706565 	rsbseq	r6, r0, r5, ror #10
    214c:	54787570 	ldrbtpl	r7, [r8], #-1392	; 0xfffffa90
    2150:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    2154:	6b736154 	blvs	1cda6ac <__RAM_SIZE+0x1bda6ac>
    2158:	63617453 	cmnvs	r1, #1392508928	; 0x53000000
    215c:	7a69536b 	bvc	1a56f10 <__RAM_SIZE+0x1956f10>
    2160:	2e2e0065 	cdpcs	0, 2, cr0, cr14, cr5, {3}
    2164:	2f2e2e2f 	svccs	0x002e2e2f
    2168:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 20b8 <__HEAP_SIZE+0x10b8>
    216c:	74726269 	ldrbtvc	r6, [r2], #-617	; 0xfffffd97
    2170:	462f736f 	strtmi	r7, [pc], -pc, ror #6
    2174:	52656572 	rsbpl	r6, r5, #478150656	; 0x1c800000
    2178:	2f534f54 	svccs	0x00534f54
    217c:	6b736174 	blvs	1cda754 <__RAM_SIZE+0x1bda754>
    2180:	00632e73 	rsbeq	r2, r3, r3, ror lr
    2184:	69547870 	ldmdbvs	r4, {r4, r5, r6, fp, ip, sp, lr}^
    2188:	54736b63 	ldrbtpl	r6, [r3], #-2915	; 0xfffff49d
    218c:	6961576f 	stmdbvs	r1!, {r0, r1, r2, r3, r5, r6, r8, r9, sl, ip, lr}^
    2190:	49650074 	stmdbmi	r5!, {r2, r4, r5, r6}^
    2194:	6c61766e 	stclvs	6, cr7, [r1], #-440	; 0xfffffe48
    2198:	75006469 	strvc	r6, [r0, #-1129]	; 0xfffffb97
    219c:	706f5478 	rsbvc	r5, pc, r8, ror r4	; <UNPREDICTABLE>
    21a0:	6f697250 	svcvs	0x00697250
    21a4:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    21a8:	42787500 	rsbsmi	r7, r8, #0, 10
    21ac:	50657361 	rsbpl	r7, r5, r1, ror #6
    21b0:	726f6972 	rsbvc	r6, pc, #1867776	; 0x1c8000
    21b4:	00797469 	rsbseq	r7, r9, r9, ror #8
    21b8:	72507875 	subsvc	r7, r0, #7667712	; 0x750000
    21bc:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    21c0:	73557974 	cmpvc	r5, #116, 18	; 0x1d0000
    21c4:	6e4f6465 	cdpvs	4, 4, cr6, cr15, cr5, {3}
    21c8:	72746e45 	rsbsvc	r6, r4, #1104	; 0x450
    21cc:	43540079 	cmpmi	r4, #121	; 0x79
    21d0:	00745f42 	rsbseq	r5, r4, r2, asr #30
    21d4:	44767270 	ldrbtmi	r7, [r6], #-624	; 0xfffffd90
    21d8:	74656c65 	strbtvc	r6, [r5], #-3173	; 0xfffff39b
    21dc:	42435465 	submi	r5, r3, #1694498816	; 0x65000000
    21e0:	6c426500 	cfstr64vs	mvdx6, [r2], {-0}
    21e4:	656b636f 	strbvs	r6, [fp, #-879]!	; 0xfffffc91
    21e8:	54760064 	ldrbtpl	r0, [r6], #-100	; 0xffffff9c
    21ec:	536b7361 	cmnpl	fp, #-2080374783	; 0x84000001
    21f0:	65707375 	ldrbvs	r7, [r0, #-885]!	; 0xfffffc8b
    21f4:	7800646e 	stmdavc	r0, {r1, r2, r3, r5, r6, sl, sp, lr}
    21f8:	65726c41 	ldrbvs	r6, [r2, #-3137]!	; 0xfffff3bf
    21fc:	59796461 	ldmdbpl	r9!, {r0, r5, r6, sl, sp, lr}^
    2200:	646c6569 	strbtvs	r6, [ip], #-1385	; 0xfffffa97
    2204:	70006465 	andvc	r6, r0, r5, ror #8
    2208:	65764578 	ldrbvs	r4, [r6, #-1400]!	; 0xfffffa88
    220c:	694c746e 	stmdbvs	ip, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
    2210:	74497473 	strbvc	r7, [r9], #-1139	; 0xfffffb8d
    2214:	70006d65 	andvc	r6, r0, r5, ror #26
    2218:	72615076 	rsbvc	r5, r1, #118	; 0x76
    221c:	74656d61 	strbtvc	r6, [r5], #-3425	; 0xfffff29f
    2220:	78007265 	stmdavc	r0, {r0, r2, r5, r6, r9, ip, sp, lr}
    2224:	646e6550 	strbtvs	r6, [lr], #-1360	; 0xfffffab0
    2228:	69546465 	ldmdbvs	r4, {r0, r2, r5, r6, sl, sp, lr}^
    222c:	00736b63 	rsbseq	r6, r3, r3, ror #22
    2230:	54767270 	ldrbtpl	r7, [r6], #-624	; 0xfffffd90
    2234:	436b7361 	cmnmi	fp, #-2080374783	; 0x84000001
    2238:	6b636568 	blvs	18db7e0 <__RAM_SIZE+0x17db7e0>
    223c:	65657246 	strbvs	r7, [r5, #-582]!	; 0xfffffdba
    2240:	63617453 	cmnvs	r1, #1392508928	; 0x53000000
    2244:	6170536b 	cmnvs	r0, fp, ror #6
    2248:	75006563 	strvc	r6, [r0, #-1379]	; 0xfffffa9d
    224c:	72754378 	rsbsvc	r4, r5, #120, 6	; 0xe0000001
    2250:	746e6572 	strbtvc	r6, [lr], #-1394	; 0xfffffa8e
    2254:	65736142 	ldrbvs	r6, [r3, #-322]!	; 0xfffffebe
    2258:	6f697250 	svcvs	0x00697250
    225c:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    2260:	69547800 	ldmdbvs	r4, {fp, ip, sp, lr}^
    2264:	54736b63 	ldrbtpl	r6, [r3], #-2915	; 0xfffff49d
    2268:	7461436f 	strbtvc	r4, [r1], #-879	; 0xfffffc91
    226c:	70556863 	subsvc	r6, r5, r3, ror #16
    2270:	65527800 	ldrbvs	r7, [r2, #-2048]	; 0xfffff800
    2274:	6e6f6967 	vnmulvs.f16	s13, s30, s15	; <UNPREDICTABLE>
    2278:	72700073 	rsbsvc	r0, r0, #115	; 0x73
    227c:	64644176 	strbtvs	r4, [r4], #-374	; 0xfffffe8a
    2280:	72727543 	rsbsvc	r7, r2, #281018368	; 0x10c00000
    2284:	54746e65 	ldrbtpl	r6, [r4], #-3685	; 0xfffff19b
    2288:	546b7361 	strbtpl	r7, [fp], #-865	; 0xfffffc9f
    228c:	6c65446f 	cfstrdvs	mvd4, [r5], #-444	; 0xfffffe44
    2290:	64657961 	strbtvs	r7, [r5], #-2401	; 0xfffff69f
    2294:	7473694c 	ldrbtvc	r6, [r3], #-2380	; 0xfffff6b4
    2298:	4e787500 	cdpmi	5, 7, cr7, cr8, cr0, {0}
    229c:	70416e6f 	subvc	r6, r1, pc, ror #28
    22a0:	63696c70 	cmnvs	r9, #112, 24	; 0x7000
    22a4:	6f697461 	svcvs	0x00697461
    22a8:	7361546e 	cmnvc	r1, #1845493760	; 0x6e000000
    22ac:	6300736b 	movwvs	r7, #875	; 0x36b
    22b0:	656c6449 	strbvs	r6, [ip, #-1097]!	; 0xfffffbb7
    22b4:	656d614e 	strbvs	r6, [sp, #-334]!	; 0xfffffeb2
    22b8:	61547800 	cmpvs	r4, r0, lsl #16
    22bc:	65476b73 	strbvs	r6, [r7, #-2931]	; 0xfffff48d
    22c0:	72754374 	rsbsvc	r4, r5, #116, 6	; 0xd0000001
    22c4:	746e6572 	strbtvc	r6, [lr], #-1394	; 0xfffffa8e
    22c8:	6b736154 	blvs	1cda820 <__RAM_SIZE+0x1bda820>
    22cc:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
    22d0:	6f46656c 	svcvs	0x0046656c
    22d4:	726f4372 	rsbvc	r4, pc, #-939524095	; 0xc8000001
    22d8:	78750065 	ldmdavc	r5!, {r0, r2, r5, r6}^
    22dc:	6b736154 	blvs	1cda834 <__RAM_SIZE+0x1bda834>
    22e0:	65736142 	ldrbvs	r6, [r3, #-322]!	; 0xfffffebe
    22e4:	6f697250 	svcvs	0x00697250
    22e8:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    22ec:	00746547 	rsbseq	r6, r4, r7, asr #10
    22f0:	75437875 	strbvc	r7, [r3, #-2165]	; 0xfffff78b
    22f4:	6e657272 	mcrvs	2, 3, r7, cr5, cr2, {3}
    22f8:	6d754e74 	ldclvs	14, cr4, [r5, #-464]!	; 0xfffffe30
    22fc:	4f726562 	svcmi	0x00726562
    2300:	73615466 	cmnvc	r1, #1711276032	; 0x66000000
    2304:	7800736b 	stmdavc	r0, {r0, r1, r3, r5, r6, r8, r9, ip, sp, lr}
    2308:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    230c:	72636e49 	rsbvc	r6, r3, #1168	; 0x490
    2310:	6e656d65 	cdpvs	13, 6, cr6, cr5, cr5, {3}
    2314:	54780074 	ldrbtpl	r0, [r8], #-116	; 0xffffff8c
    2318:	476b7361 	strbmi	r7, [fp, -r1, ror #6]!
    231c:	64497465 	strbvs	r7, [r9], #-1125	; 0xfffffb9b
    2320:	6154656c 	cmpvs	r4, ip, ror #10
    2324:	61486b73 	hvcvs	34483	; 0x86b3
    2328:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
    232c:	69547800 	ldmdbvs	r4, {fp, ip, sp, lr}^
    2330:	6f54656d 	svcvs	0x0054656d
    2334:	656b6157 	strbvs	r6, [fp, #-343]!	; 0xfffffea9
    2338:	74537800 	ldrbvc	r7, [r3], #-2048	; 0xfffff800
    233c:	4c657461 	cfstrdmi	mvd7, [r5], #-388	; 0xfffffe7c
    2340:	49747369 	ldmdbmi	r4!, {r0, r3, r5, r6, r8, r9, ip, sp, lr}^
    2344:	006d6574 	rsbeq	r6, sp, r4, ror r5
    2348:	70704176 	rsbsvc	r4, r0, r6, ror r1
    234c:	6163696c 	cmnvs	r3, ip, ror #18
    2350:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    2354:	49746547 	ldmdbmi	r4!, {r0, r1, r2, r6, r8, sl, sp, lr}^
    2358:	54656c64 	strbtpl	r6, [r5], #-3172	; 0xfffff39c
    235c:	4d6b7361 	stclmi	3, cr7, [fp, #-388]!	; 0xfffffe7c
    2360:	726f6d65 	rsbvc	r6, pc, #6464	; 0x1940
    2364:	78700079 	ldmdavc	r0!, {r0, r3, r4, r5, r6}^
    2368:	00424354 	subeq	r4, r2, r4, asr r3
    236c:	73615478 	cmnvc	r1, #120, 8	; 0x78000000
    2370:	6e65476b 	cdpvs	7, 6, cr4, cr5, cr11, {3}
    2374:	63697265 	cmnvs	r9, #1342177286	; 0x50000006
    2378:	69746f4e 	ldmdbvs	r4!, {r1, r2, r3, r6, r8, r9, sl, fp, sp, lr}^
    237c:	74537966 	ldrbvc	r7, [r3], #-2406	; 0xfffff69a
    2380:	43657461 	cmnmi	r5, #1627389952	; 0x61000000
    2384:	7261656c 	rsbvc	r6, r1, #108, 10	; 0x1b000000
    2388:	54787500 	ldrbtpl	r7, [r8], #-1280	; 0xfffffb00
    238c:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    2390:	6b736154 	blvs	1cda8e8 <__RAM_SIZE+0x1bda8e8>
    2394:	63617453 	cmnvs	r1, #1392508928	; 0x53000000
    2398:	7870006b 	ldmdavc	r0!, {r0, r1, r3, r5, r6}^
    239c:	6b736154 	blvs	1cda8f4 <__RAM_SIZE+0x1bda8f4>
    23a0:	65646f43 	strbvs	r6, [r4, #-3907]!	; 0xfffff0bd
    23a4:	53787500 	cmnpl	r8, #0, 10
    23a8:	64656863 	strbtvs	r6, [r5], #-2147	; 0xfffff79d
    23ac:	72656c75 	rsbvc	r6, r5, #29952	; 0x7500
    23b0:	70737553 	rsbsvc	r7, r3, r3, asr r5
    23b4:	65646e65 	strbvs	r6, [r4, #-3685]!	; 0xfffff19b
    23b8:	78700064 	ldmdavc	r0!, {r2, r5, r6}^
    23bc:	4f706f54 	svcmi	0x00706f54
    23c0:	61745366 	cmnvs	r4, r6, ror #6
    23c4:	76006b63 	strvc	r6, [r0], -r3, ror #22
    23c8:	6b736154 	blvs	1cda920 <__RAM_SIZE+0x1bda920>
    23cc:	75736552 	ldrbvc	r6, [r3, #-1362]!	; 0xfffffaae
    23d0:	7800656d 	stmdavc	r0, {r0, r2, r3, r5, r6, r8, sl, sp, lr}
    23d4:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    23d8:	74654772 	strbtvc	r4, [r5], #-1906	; 0xfffff88e
    23dc:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    23e0:	65614472 	strbvs	r4, [r1, #-1138]!	; 0xfffffb8e
    23e4:	546e6f6d 	strbtpl	r6, [lr], #-3949	; 0xfffff093
    23e8:	486b7361 	stmdami	fp!, {r0, r5, r6, r8, r9, ip, sp, lr}^
    23ec:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
    23f0:	72700065 	rsbsvc	r0, r0, #101	; 0x65
    23f4:	696e4976 	stmdbvs	lr!, {r1, r2, r4, r5, r6, r8, fp, lr}^
    23f8:	6c616974 			; <UNDEFINED> instruction: 0x6c616974
    23fc:	54657369 	strbtpl	r7, [r5], #-873	; 0xfffffc97
    2400:	4c6b7361 	stclmi	3, cr7, [fp], #-388	; 0xfffffe7c
    2404:	73747369 	cmnvc	r4, #-1543503871	; 0xa4000001
    2408:	64497800 	strbvs	r7, [r9], #-2048	; 0xfffff800
    240c:	6154656c 	cmpvs	r4, ip, ror #10
    2410:	43546b73 	cmpmi	r4, #117760	; 0x1cc00
    2414:	78750042 	ldmdavc	r5!, {r1, r6}^
    2418:	65646e49 	strbvs	r6, [r4, #-3657]!	; 0xfffff1b7
    241c:	4e6f5478 	mcrmi	4, 3, r5, cr15, cr8, {3}
    2420:	6669746f 	strbtvs	r7, [r9], -pc, ror #8
    2424:	54780079 	ldrbtpl	r0, [r8], #-121	; 0xffffff87
    2428:	476b7361 	strbmi	r7, [fp, -r1, ror #6]!
    242c:	70417465 	subvc	r7, r1, r5, ror #8
    2430:	63696c70 	cmnvs	r9, #112, 24	; 0x7000
    2434:	6f697461 	svcvs	0x00697461
    2438:	7361546e 	cmnvc	r1, #1845493760	; 0x6e000000
    243c:	6761546b 	strbvs	r5, [r1, -fp, ror #8]!
    2440:	6d6f7246 	sfmvs	f7, 2, [pc, #-280]!	; 2330 <__HEAP_SIZE+0x1330>
    2444:	00525349 	subseq	r5, r2, r9, asr #6
    2448:	72437870 	subvc	r7, r3, #112, 16	; 0x700000
    244c:	65746165 	ldrbvs	r6, [r4, #-357]!	; 0xfffffe9b
    2450:	73615464 	cmnvc	r1, #100, 8	; 0x64000000
    2454:	7270006b 	rsbsvc	r0, r0, #107	; 0x6b
    2458:	65684376 	strbvs	r4, [r8, #-886]!	; 0xfffffc8a
    245c:	61546b63 	cmpvs	r4, r3, ror #22
    2460:	57736b73 			; <UNDEFINED> instruction: 0x57736b73
    2464:	69746961 	ldmdbvs	r4!, {r0, r5, r6, r8, fp, sp, lr}^
    2468:	6554676e 	ldrbvs	r6, [r4, #-1902]	; 0xfffff892
    246c:	6e696d72 	mcrvs	13, 3, r6, cr9, cr2, {3}
    2470:	6f697461 	svcvs	0x00697461
    2474:	7870006e 	ldmdavc	r0!, {r1, r2, r3, r5, r6}^
    2478:	7265764f 	rsbvc	r7, r5, #82837504	; 0x4f00000
    247c:	776f6c66 	strbvc	r6, [pc, -r6, ror #24]!
    2480:	616c6544 	cmnvs	ip, r4, asr #10
    2484:	4c646579 	cfstr64mi	mvdx6, [r4], #-484	; 0xfffffe1c
    2488:	00747369 	rsbseq	r7, r4, r9, ror #6
    248c:	65526c75 	ldrbvs	r6, [r2, #-3189]	; 0xfffff38b
    2490:	6e727574 	mrcvs	5, 3, r7, cr2, cr4, {3}
    2494:	61547800 	cmpvs	r4, r0, lsl #16
    2498:	73496b73 	movtvc	r6, #39795	; 0x9b73
    249c:	6e6e7552 	mcrvs	5, 3, r7, cr14, cr2, {2}
    24a0:	4f676e69 	svcmi	0x00676e69
    24a4:	65695972 	strbvs	r5, [r9, #-2418]!	; 0xfffff68e
    24a8:	6e69646c 	cdpvs	4, 6, cr6, cr9, cr12, {3}
    24ac:	78750067 	ldmdavc	r5!, {r0, r1, r2, r5, r6}^
    24b0:	65646e49 	strbvs	r6, [r4, #-3657]!	; 0xfffff1b7
    24b4:	576f5478 			; <UNDEFINED> instruction: 0x576f5478
    24b8:	4f746961 	svcmi	0x00746961
    24bc:	4378006e 	cmnmi	r8, #110	; 0x6e
    24c0:	616d6d6f 	cmnvs	sp, pc, ror #26
    24c4:	6954646e 	ldmdbvs	r4, {r1, r2, r3, r5, r6, sl, sp, lr}^
    24c8:	7800656d 	stmdavc	r0, {r0, r2, r3, r5, r6, r8, sl, sp, lr}
    24cc:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    24d0:	72655072 	rsbvc	r5, r5, #114	; 0x72
    24d4:	49646f69 	stmdbmi	r4!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    24d8:	6369546e 	cmnvs	r9, #1845493760	; 0x6e000000
    24dc:	7000736b 	andvc	r7, r0, fp, ror #6
    24e0:	6c614378 	stclvs	3, cr4, [r1], #-480	; 0xfffffe20
    24e4:	6361626c 	cmnvs	r1, #108, 4	; 0xc0000006
    24e8:	6e75466b 	cdpvs	6, 7, cr4, cr5, cr11, {3}
    24ec:	6f697463 	svcvs	0x00697463
    24f0:	7870006e 	ldmdavc	r0!, {r1, r2, r3, r5, r6}^
    24f4:	7473694c 	ldrbtvc	r6, [r3], #-2380	; 0xfffff6b4
    24f8:	45736157 	ldrbmi	r6, [r3, #-343]!	; 0xfffffea9
    24fc:	7974706d 	ldmdbvc	r4!, {r0, r2, r3, r5, r6, ip, sp, lr}^
    2500:	69547800 	ldmdbvs	r4, {fp, ip, sp, lr}^
    2504:	6f4e656d 	svcvs	0x004e656d
    2508:	53780077 	cmnpl	r8, #119	; 0x77
    250c:	69746174 	ldmdbvs	r4!, {r2, r4, r5, r6, r8, sp, lr}^
    2510:	6d695463 	cfstrdvs	mvd5, [r9, #-396]!	; 0xfffffe74
    2514:	75517265 	ldrbvc	r7, [r1, #-613]	; 0xfffffd9b
    2518:	00657565 	rsbeq	r7, r5, r5, ror #10
    251c:	6d695478 	cfstrdvs	mvd5, [r9, #-480]!	; 0xfffffe20
    2520:	61507265 	cmpvs	r0, r5, ror #4
    2524:	656d6172 	strbvs	r6, [sp, #-370]!	; 0xfffffe8e
    2528:	73726574 	cmnvc	r2, #116, 10	; 0x1d000000
    252c:	704f7800 	subvc	r7, pc, r0, lsl #16
    2530:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    2534:	61566c61 	cmpvs	r6, r1, ror #24
    2538:	0065756c 	rsbeq	r7, r5, ip, ror #10
    253c:	69546370 	ldmdbvs	r4, {r4, r5, r6, r8, r9, sp, lr}^
    2540:	4e72656d 	cdpmi	5, 7, cr6, cr2, cr13, {3}
    2544:	00656d61 	rsbeq	r6, r5, r1, ror #26
    2548:	61506c75 	cmpvs	r0, r5, ror ip
    254c:	656d6172 	strbvs	r6, [sp, #-370]!	; 0xfffffe8e
    2550:	32726574 	rsbscc	r6, r2, #116, 10	; 0x1d000000
    2554:	69547800 	ldmdbvs	r4, {fp, ip, sp, lr}^
    2558:	5072656d 	rsbspl	r6, r2, sp, ror #10
    255c:	46646e65 	strbtmi	r6, [r4], -r5, ror #28
    2560:	74636e75 	strbtvc	r6, [r3], #-3701	; 0xfffff18b
    2564:	436e6f69 	cmnmi	lr, #420	; 0x1a4
    2568:	006c6c61 	rsbeq	r6, ip, r1, ror #24
    256c:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    2570:	72615072 	rsbvc	r5, r1, #114	; 0x72
    2574:	74656d61 	strbtvc	r6, [r5], #-3425	; 0xfffff29f
    2578:	745f7265 	ldrbvc	r7, [pc], #-613	; 2580 <__HEAP_SIZE+0x1580>
    257c:	69547800 	ldmdbvs	r4, {fp, ip, sp, lr}^
    2580:	5172656d 	cmnpl	r2, sp, ror #10
    2584:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
    2588:	61745300 	cmnvs	r4, r0, lsl #6
    258c:	54636974 	strbtpl	r6, [r3], #-2420	; 0xfffff68c
    2590:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    2594:	7800745f 	stmdavc	r0, {r0, r1, r2, r3, r4, r6, sl, ip, sp, lr}
    2598:	54415453 	strbpl	r5, [r1], #-1107	; 0xfffffbad
    259c:	545f4349 	ldrbpl	r4, [pc], #-841	; 25a4 <__HEAP_SIZE+0x15a4>
    25a0:	52454d49 	subpl	r4, r5, #4672	; 0x1240
    25a4:	69547800 	ldmdbvs	r4, {fp, ip, sp, lr}^
    25a8:	4772656d 	ldrbmi	r6, [r2, -sp, ror #10]!
    25ac:	74537465 	ldrbvc	r7, [r3], #-1125	; 0xfffffb9b
    25b0:	63697461 	cmnvs	r9, #1627389952	; 0x61000000
    25b4:	66667542 	strbtvs	r7, [r6], -r2, asr #10
    25b8:	54007265 	strpl	r7, [r0], #-613	; 0xfffffd9b
    25bc:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    25c0:	6c6c6143 	stfvse	f6, [ip], #-268	; 0xfffffef4
    25c4:	6b636162 	blvs	18dab54 <__RAM_SIZE+0x17dab54>
    25c8:	636e7546 	cmnvs	lr, #293601280	; 0x11800000
    25cc:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    25d0:	7800745f 	stmdavc	r0, {r0, r1, r2, r3, r4, r6, sl, ip, sp, lr}
    25d4:	6d6d6f43 	stclvs	15, cr6, [sp, #-268]!	; 0xfffffef4
    25d8:	49646e61 	stmdbmi	r4!, {r0, r5, r6, r9, sl, fp, sp, lr}^
    25dc:	50780044 	rsbspl	r0, r8, r4, asr #32
    25e0:	65636f72 	strbvs	r6, [r3, #-3954]!	; 0xfffff08e
    25e4:	69547373 	ldmdbvs	r4, {r0, r1, r4, r5, r6, r8, r9, ip, sp, lr}^
    25e8:	4e72656d 	cdpmi	5, 7, cr6, cr2, cr13, {3}
    25ec:	7000776f 	andvc	r7, r0, pc, ror #14
    25f0:	68437672 	stmdavs	r3, {r1, r4, r5, r6, r9, sl, ip, sp, lr}^
    25f4:	466b6365 	strbtmi	r6, [fp], -r5, ror #6
    25f8:	6156726f 	cmpvs	r6, pc, ror #4
    25fc:	4c64696c 			; <UNDEFINED> instruction: 0x4c64696c
    2600:	41747369 	cmnmi	r4, r9, ror #6
    2604:	7551646e 	ldrbvc	r6, [r1, #-1134]	; 0xfffffb92
    2608:	00657565 	rsbeq	r7, r5, r5, ror #10
    260c:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    2610:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    2614:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    2618:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    261c:	6572462f 	ldrbvs	r4, [r2, #-1583]!	; 0xfffff9d1
    2620:	4f545265 	svcmi	0x00545265
    2624:	69742f53 	ldmdbvs	r4!, {r0, r1, r4, r6, r8, r9, sl, fp, sp}^
    2628:	7372656d 	cmnvc	r2, #457179136	; 0x1b400000
    262c:	7500632e 	strvc	r6, [r0, #-814]	; 0xfffffcd2
    2630:	6d695478 	cfstrdvs	mvd5, [r9, #-480]!	; 0xfffffe20
    2634:	65477265 	strbvs	r7, [r7, #-613]	; 0xfffffd9b
    2638:	6c655274 	sfmvs	f5, 2, [r5], #-464	; 0xfffffe30
    263c:	4d64616f 	stfmie	f6, [r4, #-444]!	; 0xfffffe44
    2640:	0065646f 	rsbeq	r6, r5, pc, ror #8
    2644:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    2648:	6e614872 	mcrvs	8, 3, r4, cr1, cr2, {3}
    264c:	5f656c64 	svcpl	0x00656c64
    2650:	54780074 	ldrbtpl	r0, [r8], #-116	; 0xffffff8c
    2654:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    2658:	61657243 	cmnvs	r5, r3, asr #4
    265c:	74536574 	ldrbvc	r6, [r3], #-1396	; 0xfffffa8c
    2660:	63697461 	cmnvs	r9, #1627389952	; 0x61000000
    2664:	76727000 	ldrbtvc	r7, [r2], -r0
    2668:	636f7250 	cmnvs	pc, #80, 4
    266c:	45737365 	ldrbmi	r7, [r3, #-869]!	; 0xfffffc9b
    2670:	72697078 	rsbvc	r7, r9, #120	; 0x78
    2674:	69546465 	ldmdbvs	r4, {r0, r2, r5, r6, sl, sp, lr}^
    2678:	0072656d 	rsbseq	r6, r2, sp, ror #10
    267c:	6c6c6143 	stfvse	f6, [ip], #-268	; 0xfffffef4
    2680:	6b636162 	blvs	18dac10 <__RAM_SIZE+0x17dac10>
    2684:	61726150 	cmnvs	r2, r0, asr r1
    2688:	6574656d 	ldrbvs	r6, [r4, #-1389]!	; 0xfffffa93
    268c:	745f7372 	ldrbvc	r7, [pc], #-882	; 2694 <__HEAP_SIZE+0x1694>
    2690:	44767000 	ldrbtmi	r7, [r6], #-0
    2694:	796d6d75 	stmdbvc	sp!, {r0, r2, r4, r5, r6, r8, sl, fp, sp, lr}^
    2698:	78700036 	ldmdavc	r0!, {r1, r2, r4, r5}^
    269c:	5477654e 	ldrbtpl	r6, [r7], #-1358	; 0xfffffab2
    26a0:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    26a4:	52767000 	rsbspl	r7, r6, #0
    26a8:	72757465 	rsbsvc	r7, r5, #1694498816	; 0x65000000
    26ac:	5478006e 	ldrbtpl	r0, [r8], #-110	; 0xffffff92
    26b0:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    26b4:	69547349 	ldmdbvs	r4, {r0, r3, r6, r8, r9, ip, sp, lr}^
    26b8:	4172656d 	cmnmi	r2, sp, ror #10
    26bc:	76697463 	strbtvc	r7, [r9], -r3, ror #8
    26c0:	45780065 	ldrbmi	r0, [r8, #-101]!	; 0xffffff9b
    26c4:	72697078 	rsbvc	r7, r9, #120	; 0x78
    26c8:	69546465 	ldmdbvs	r4, {r0, r2, r5, r6, sl, sp, lr}^
    26cc:	7400656d 	strvc	r6, [r0], #-1389	; 0xfffffa93
    26d0:	6954726d 	ldmdbvs	r4, {r0, r2, r3, r5, r6, r9, ip, sp, lr}^
    26d4:	5172656d 	cmnpl	r2, sp, ror #10
    26d8:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
    26dc:	7373654d 	cmnvc	r3, #322961408	; 0x13400000
    26e0:	00656761 	rsbeq	r6, r5, r1, ror #14
    26e4:	69547670 	ldmdbvs	r4, {r4, r5, r6, r9, sl, ip, sp, lr}^
    26e8:	4772656d 	ldrbmi	r6, [r2, -sp, ror #10]!
    26ec:	69547465 	ldmdbvs	r4, {r0, r2, r5, r6, sl, ip, sp, lr}^
    26f0:	4972656d 	ldmdbmi	r2!, {r0, r2, r3, r5, r6, r8, sl, sp, lr}^
    26f4:	41780044 	cmnmi	r8, r4, asr #32
    26f8:	526f7475 	rsbpl	r7, pc, #1962934272	; 0x75000000
    26fc:	616f6c65 	cmnvs	pc, r5, ror #24
    2700:	54780064 	ldrbtpl	r0, [r8], #-100	; 0xffffff9c
    2704:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    2708:	656e6547 	strbvs	r6, [lr, #-1351]!	; 0xfffffab9
    270c:	43636972 	cmnmi	r3, #1867776	; 0x1c8000
    2710:	616d6d6f 	cmnvs	sp, pc, ror #26
    2714:	7246646e 	subvc	r6, r6, #1845493760	; 0x6e000000
    2718:	53496d6f 	movtpl	r6, #40303	; 0x9d6f
    271c:	78700052 	ldmdavc	r0!, {r1, r4, r6}^
    2720:	7265764f 	rsbvc	r7, r5, #82837504	; 0x4f00000
    2724:	776f6c66 	strbvc	r6, [pc, -r6, ror #24]!
    2728:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    272c:	73694c72 	cmnvc	r9, #29184	; 0x7200
    2730:	72700074 	rsbsvc	r0, r0, #116	; 0x74
    2734:	696e4976 	stmdbvs	lr!, {r1, r2, r4, r5, r6, r8, fp, lr}^
    2738:	6c616974 			; <UNDEFINED> instruction: 0x6c616974
    273c:	4e657369 	cdpmi	3, 6, cr7, cr5, cr9, {3}
    2740:	69547765 	ldmdbvs	r4, {r0, r2, r5, r6, r8, r9, sl, ip, sp, lr}^
    2744:	0072656d 	rsbseq	r6, r2, sp, ror #10
    2748:	75447670 	strbvc	r7, [r4, #-1648]	; 0xfffff990
    274c:	35796d6d 	ldrbcc	r6, [r9, #-3437]!	; 0xfffff293
    2750:	49547800 	ldmdbmi	r4, {fp, ip, sp, lr}^
    2754:	0052454d 	subseq	r4, r2, sp, asr #10
    2758:	74634178 	strbtvc	r4, [r3], #-376	; 0xfffffe88
    275c:	54657669 	strbtpl	r7, [r5], #-1641	; 0xfffff997
    2760:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    2764:	7473694c 	ldrbtvc	r6, [r3], #-2380	; 0xfffff6b4
    2768:	41780031 	cmnmi	r8, r1, lsr r0
    276c:	76697463 	strbtvc	r7, [r9], -r3, ror #8
    2770:	6d695465 	cfstrdvs	mvd5, [r9, #-404]!	; 0xfffffe6c
    2774:	694c7265 	stmdbvs	ip, {r0, r2, r5, r6, r9, ip, sp, lr}^
    2778:	00327473 	eorseq	r7, r2, r3, ror r4
    277c:	49767270 	ldmdbmi	r6!, {r4, r5, r6, r9, ip, sp, lr}^
    2780:	7265736e 	rsbvc	r7, r5, #-1207959551	; 0xb8000001
    2784:	6d695474 	cfstrdvs	mvd5, [r9, #-464]!	; 0xfffffe30
    2788:	6e497265 	cdpvs	2, 4, cr7, cr9, cr5, {3}
    278c:	69746341 	ldmdbvs	r4!, {r0, r6, r8, r9, sp, lr}^
    2790:	694c6576 	stmdbvs	ip, {r1, r2, r4, r5, r6, r8, sl, sp, lr}^
    2794:	78007473 	stmdavc	r0, {r0, r1, r4, r5, r6, sl, ip, sp, lr}
    2798:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    279c:	74654772 	strbtvc	r4, [r5], #-1906	; 0xfffff88e
    27a0:	69707845 	ldmdbvs	r0!, {r0, r2, r6, fp, ip, sp, lr}^
    27a4:	69547972 	ldmdbvs	r4, {r1, r4, r5, r6, r8, fp, ip, sp, lr}^
    27a8:	7400656d 	strvc	r6, [r0], #-1389	; 0xfffffa93
    27ac:	6143726d 	cmpvs	r3, sp, ror #4
    27b0:	61626c6c 	cmnvs	r2, ip, ror #24
    27b4:	61506b63 	cmpvs	r0, r3, ror #22
    27b8:	656d6172 	strbvs	r6, [sp, #-370]!	; 0xfffffe8e
    27bc:	73726574 	cmnvc	r2, #116, 10	; 0x1d000000
    27c0:	69547800 	ldmdbvs	r4, {fp, ip, sp, lr}^
    27c4:	4372656d 	cmnmi	r2, #457179136	; 0x1b400000
    27c8:	74616572 	strbtvc	r6, [r1], #-1394	; 0xfffffa8e
    27cc:	72700065 	rsbsvc	r0, r0, #101	; 0x65
    27d0:	6d615376 	stclvs	3, cr5, [r1, #-472]!	; 0xfffffe28
    27d4:	54656c70 	strbtpl	r6, [r5], #-3184	; 0xfffff390
    27d8:	4e656d69 	cdpmi	13, 6, cr6, cr5, cr9, {3}
    27dc:	7800776f 	stmdavc	r0, {r0, r1, r2, r3, r5, r6, r8, r9, sl, ip, sp, lr}
    27e0:	6c6c6143 	stfvse	f6, [ip], #-268	; 0xfffffef4
    27e4:	6b636162 	blvs	18dad74 <__RAM_SIZE+0x17dad74>
    27e8:	61726150 	cmnvs	r2, r0, asr r1
    27ec:	6574656d 	ldrbvs	r6, [r4, #-1389]!	; 0xfffffa93
    27f0:	76007372 			; <UNDEFINED> instruction: 0x76007372
    27f4:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    27f8:	74655372 	strbtvc	r5, [r5], #-882	; 0xfffffc8e
    27fc:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    2800:	00444972 	subeq	r4, r4, r2, ror r9
    2804:	6d695478 	cfstrdvs	mvd5, [r9, #-480]!	; 0xfffffe20
    2808:	694c7265 	stmdbvs	ip, {r0, r2, r5, r6, r9, ip, sp, lr}^
    280c:	74497473 	strbvc	r7, [r9], #-1139	; 0xfffffb8d
    2810:	70006d65 	andvc	r6, r0, r5, ror #26
    2814:	77654e76 			; <UNDEFINED> instruction: 0x77654e76
    2818:	70004449 	andvc	r4, r0, r9, asr #8
    281c:	77537672 			; <UNDEFINED> instruction: 0x77537672
    2820:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
    2824:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    2828:	73694c72 	cmnvc	r9, #29184	; 0x7200
    282c:	70007374 	andvc	r7, r0, r4, ror r3
    2830:	65527672 	ldrbvs	r7, [r2, #-1650]	; 0xfffff98e
    2834:	64616f6c 	strbtvs	r6, [r1], #-3948	; 0xfffff094
    2838:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    283c:	63750072 	cmnvs	r5, #114	; 0x72
    2840:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
    2844:	69546369 	ldmdbvs	r4, {r0, r3, r5, r6, r8, r9, sp, lr}^
    2848:	5172656d 	cmnpl	r2, sp, ror #10
    284c:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
    2850:	726f7453 	rsbvc	r7, pc, #1392508928	; 0x53000000
    2854:	00656761 	rsbeq	r6, r5, r1, ror #14
    2858:	61507670 	cmpvs	r0, r0, ror r6
    285c:	656d6172 	strbvs	r6, [sp, #-370]!	; 0xfffffe8e
    2860:	31726574 	cmncc	r2, r4, ror r5
    2864:	44637500 	strbtmi	r7, [r3], #-1280	; 0xfffffb00
    2868:	796d6d75 	stmdbvc	sp!, {r0, r2, r4, r5, r6, r8, sl, fp, sp, lr}^
    286c:	54780038 	ldrbtpl	r0, [r8], #-56	; 0xffffffc8
    2870:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    2874:	6b736154 	blvs	1cdadcc <__RAM_SIZE+0x1bdadcc>
    2878:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
    287c:	7000656c 	andvc	r6, r0, ip, ror #10
    2880:	69547672 	ldmdbvs	r4, {r1, r4, r5, r6, r9, sl, ip, sp, lr}^
    2884:	5472656d 	ldrbtpl	r6, [r2], #-1389	; 0xfffffa93
    2888:	006b7361 	rsbeq	r7, fp, r1, ror #6
    288c:	78654e78 	stmdavc	r5!, {r3, r4, r5, r6, r9, sl, fp, lr}^
    2890:	70784574 	rsbsvc	r4, r8, r4, ror r5
    2894:	54657269 	strbtpl	r7, [r5], #-617	; 0xfffffd97
    2898:	00656d69 	rsbeq	r6, r5, r9, ror #26
    289c:	74536375 	ldrbvc	r6, [r3], #-885	; 0xfffffc8b
    28a0:	73757461 	cmnvc	r5, #1627389952	; 0x61000000
    28a4:	76727000 	ldrbtvc	r7, [r2], -r0
    28a8:	636f7250 	cmnvs	pc, #80, 4
    28ac:	52737365 	rsbspl	r7, r3, #-1811939327	; 0x94000001
    28b0:	69656365 	stmdbvs	r5!, {r0, r2, r5, r6, r8, r9, sp, lr}^
    28b4:	43646576 	cmnmi	r4, #494927872	; 0x1d800000
    28b8:	616d6d6f 	cmnvs	sp, pc, ror #26
    28bc:	0073646e 	rsbseq	r6, r3, lr, ror #8
    28c0:	73614c78 	cmnvc	r1, #120, 24	; 0x7800
    28c4:	6d695474 	cfstrdvs	mvd5, [r9, #-464]!	; 0xfffffe30
    28c8:	65500065 	ldrbvs	r0, [r0, #-101]	; 0xffffff9b
    28cc:	6465646e 	strbtvs	r6, [r5], #-1134	; 0xfffffb92
    28d0:	636e7546 	cmnvs	lr, #293601280	; 0x11800000
    28d4:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    28d8:	7000745f 	andvc	r7, r0, pc, asr r4
    28dc:	72754378 	rsbsvc	r4, r5, #120, 6	; 0xe0000001
    28e0:	746e6572 	strbtvc	r6, [lr], #-1394	; 0xfffffa8e
    28e4:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    28e8:	73694c72 	cmnvc	r9, #29184	; 0x7200
    28ec:	4d780074 	ldclmi	0, cr0, [r8, #-464]!	; 0xfffffe30
    28f0:	61737365 	cmnvs	r3, r5, ror #6
    28f4:	70006567 	andvc	r6, r0, r7, ror #10
    28f8:	6d695476 	cfstrdvs	mvd5, [r9, #-472]!	; 0xfffffe28
    28fc:	44497265 	strbmi	r7, [r9], #-613	; 0xfffffd9b
    2900:	654d7800 	strbvs	r7, [sp, #-2048]	; 0xfffff800
    2904:	67617373 			; <UNDEFINED> instruction: 0x67617373
    2908:	00444965 	subeq	r4, r4, r5, ror #18
    290c:	6d656144 	stfvse	f6, [r5, #-272]!	; 0xfffffef0
    2910:	61546e6f 	cmpvs	r4, pc, ror #28
    2914:	654d6b73 	strbvs	r6, [sp, #-2931]	; 0xfffff48d
    2918:	67617373 			; <UNDEFINED> instruction: 0x67617373
    291c:	00745f65 	rsbseq	r5, r4, r5, ror #30
    2920:	6d695476 	cfstrdvs	mvd5, [r9, #-472]!	; 0xfffffe28
    2924:	65527265 	ldrbvs	r7, [r2, #-613]	; 0xfffffd9b
    2928:	53746573 	cmnpl	r4, #482344960	; 0x1cc00000
    292c:	65746174 	ldrbvs	r6, [r4, #-372]!	; 0xfffffe8c
    2930:	69547800 	ldmdbvs	r4, {fp, ip, sp, lr}^
    2934:	4772656d 	ldrbmi	r6, [r2, -sp, ror #10]!
    2938:	65507465 	ldrbvs	r7, [r0, #-1125]	; 0xfffffb9b
    293c:	646f6972 	strbtvs	r6, [pc], #-2418	; 2944 <__HEAP_SIZE+0x1944>
    2940:	54787000 	ldrbtpl	r7, [r8], #-0
    2944:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    2948:	654d7800 	strbvs	r7, [sp, #-2048]	; 0xfffff800
    294c:	67617373 			; <UNDEFINED> instruction: 0x67617373
    2950:	6c615665 	stclvs	6, cr5, [r1], #-404	; 0xfffffe6c
    2954:	78006575 	stmdavc	r0, {r0, r2, r4, r5, r6, r8, sl, sp, lr}
    2958:	636e7546 	cmnvs	lr, #293601280	; 0x11800000
    295c:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    2960:	65506f54 	ldrbvs	r6, [r0, #-3924]	; 0xfffff0ac
    2964:	7400646e 	strvc	r6, [r0], #-1134	; 0xfffffb92
    2968:	6954726d 	ldmdbvs	r4, {r0, r2, r3, r5, r6, r9, ip, sp, lr}^
    296c:	4372656d 	cmnmi	r2, #457179136	; 0x1b400000
    2970:	72746e6f 	rsbsvc	r6, r4, #1776	; 0x6f0
    2974:	70006c6f 	andvc	r6, r0, pc, ror #24
    2978:	6d695463 	cfstrdvs	mvd5, [r9, #-396]!	; 0xfffffe74
    297c:	65477265 	strbvs	r7, [r7, #-613]	; 0xfffffd9b
    2980:	6d614e74 	stclvs	14, cr4, [r1, #-464]!	; 0xfffffe30
    2984:	54780065 	ldrbtpl	r0, [r8], #-101	; 0xffffff9b
    2988:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    298c:	646e6550 	strbtvs	r6, [lr], #-1360	; 0xfffffab0
    2990:	636e7546 	cmnvs	lr, #293601280	; 0x11800000
    2994:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    2998:	6c6c6143 	stfvse	f6, [ip], #-268	; 0xfffffef4
    299c:	6d6f7246 	sfmvs	f7, 2, [pc, #-280]!	; 288c <__HEAP_SIZE+0x188c>
    29a0:	00525349 	subseq	r5, r2, r9, asr #6
    29a4:	50767270 	rsbspl	r7, r6, r0, ror r2
    29a8:	65636f72 	strbvs	r6, [r3, #-3954]!	; 0xfffff08e
    29ac:	69547373 	ldmdbvs	r4, {r0, r1, r4, r5, r6, r8, r9, ip, sp, lr}^
    29b0:	4f72656d 	svcmi	0x0072656d
    29b4:	6f6c4272 	svcvs	0x006c4272
    29b8:	61546b63 	cmpvs	r4, r3, ror #22
    29bc:	76006b73 			; <UNDEFINED> instruction: 0x76006b73
    29c0:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    29c4:	74655372 	strbtvc	r5, [r5], #-882	; 0xfffffc8e
    29c8:	6f6c6552 	svcvs	0x006c6552
    29cc:	6f4d6461 	svcvs	0x004d6461
    29d0:	78006564 	stmdavc	r0, {r2, r5, r6, r8, sl, sp, lr}
    29d4:	7478654e 	ldrbtvc	r6, [r8], #-1358	; 0xfffffab2
    29d8:	69707845 	ldmdbvs	r0!, {r0, r2, r6, fp, ip, sp, lr}^
    29dc:	69547972 	ldmdbvs	r4, {r1, r4, r5, r6, r8, fp, ip, sp, lr}^
    29e0:	7800656d 	stmdavc	r0, {r0, r2, r3, r5, r6, r8, sl, sp, lr}
    29e4:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    29e8:	6e654772 	mcrvs	7, 3, r4, cr5, cr2, {3}
    29ec:	63697265 	cmnvs	r9, #1342177286	; 0x50000006
    29f0:	6d6d6f43 	stclvs	15, cr6, [sp, #-268]!	; 0xfffffef4
    29f4:	46646e61 	strbtmi	r6, [r4], -r1, ror #28
    29f8:	546d6f72 	strbtpl	r6, [sp], #-3954	; 0xfffff08e
    29fc:	006b7361 	rsbeq	r7, fp, r1, ror #6
    2a00:	54726d74 	ldrbtpl	r6, [r2], #-3444	; 0xfffff28c
    2a04:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    2a08:	61726150 	cmnvs	r2, r0, asr r1
    2a0c:	6574656d 	ldrbvs	r6, [r4, #-1389]!	; 0xfffffa93
    2a10:	70007372 	andvc	r7, r0, r2, ror r3
    2a14:	69547870 	ldmdbvs	r4, {r4, r5, r6, fp, ip, sp, lr}^
    2a18:	4272656d 	rsbsmi	r6, r2, #457179136	; 0x1b400000
    2a1c:	65666675 	strbvs	r6, [r6, #-1653]!	; 0xfffff98b
    2a20:	78700072 	ldmdavc	r0!, {r1, r4, r5, r6}^
    2a24:	6c6c6143 	stfvse	f6, [ip], #-268	; 0xfffffef4
    2a28:	6b636162 	blvs	18dafb8 <__RAM_SIZE+0x17dafb8>
    2a2c:	76727000 	ldrbtvc	r7, [r2], -r0
    2a30:	4e746547 	cdpmi	5, 7, cr6, cr4, cr7, {2}
    2a34:	45747865 	ldrbmi	r7, [r4, #-2149]!	; 0xfffff79b
    2a38:	72697078 	rsbvc	r7, r9, #120	; 0x78
    2a3c:	6d695465 	cfstrdvs	mvd5, [r9, #-404]!	; 0xfffffe6c
    2a40:	78700065 	ldmdavc	r0!, {r0, r2, r5, r6}^
    2a44:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    2a48:	73694c72 	cmnvc	r9, #29184	; 0x7200
    2a4c:	65577374 	ldrbvs	r7, [r7, #-884]	; 0xfffffc8c
    2a50:	77536572 			; <UNDEFINED> instruction: 0x77536572
    2a54:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
    2a58:	70006465 	andvc	r6, r0, r5, ror #8
    2a5c:	65725078 	ldrbvs	r5, [r2, #-120]!	; 0xffffff88
    2a60:	756f6976 	strbvc	r6, [pc, #-2422]!	; 20f2 <__HEAP_SIZE+0x10f2>
    2a64:	6f6c4273 	svcvs	0x006c4273
    2a68:	70006b63 	andvc	r6, r0, r3, ror #22
    2a6c:	61654878 	smcvs	21640	; 0x5488
    2a70:	61745370 	cmnvs	r4, r0, ror r3
    2a74:	78007374 	stmdavc	r0, {r2, r4, r5, r6, r8, r9, ip, sp, lr}
    2a78:	696e694d 	stmdbvs	lr!, {r0, r2, r3, r6, r8, fp, sp, lr}^
    2a7c:	456d756d 	strbmi	r7, [sp, #-1389]!	; 0xfffffa93
    2a80:	46726576 			; <UNDEFINED> instruction: 0x46726576
    2a84:	42656572 	rsbmi	r6, r5, #478150656	; 0x1c800000
    2a88:	73657479 	cmnvc	r5, #2030043136	; 0x79000000
    2a8c:	616d6552 	cmnvs	sp, r2, asr r5
    2a90:	6e696e69 	cdpvs	14, 6, cr6, cr9, cr9, {3}
    2a94:	65480067 	strbvs	r0, [r8, #-103]	; 0xffffff99
    2a98:	74537061 	ldrbvc	r7, [r3], #-97	; 0xffffff9f
    2a9c:	5f737461 	svcpl	0x00737461
    2aa0:	78700074 	ldmdavc	r0!, {r2, r4, r5, r6}^
    2aa4:	7478654e 	ldrbtvc	r6, [r8], #-1358	; 0xfffffab2
    2aa8:	65657246 	strbvs	r7, [r5, #-582]!	; 0xfffffdba
    2aac:	636f6c42 	cmnvs	pc, #16896	; 0x4200
    2ab0:	7870006b 	ldmdavc	r0!, {r0, r1, r3, r5, r6}^
    2ab4:	636f6c42 	cmnvs	pc, #16896	; 0x4200
    2ab8:	4d78006b 	ldclmi	0, cr0, [r8, #-428]!	; 0xfffffe54
    2abc:	69536e69 	ldmdbvs	r3, {r0, r3, r5, r6, r9, sl, fp, sp, lr}^
    2ac0:	7800657a 	stmdavc	r0, {r1, r3, r4, r5, r6, r8, sl, sp, lr}
    2ac4:	626d754e 	rsbvs	r7, sp, #327155712	; 0x13800000
    2ac8:	664f7265 	strbvs	r7, [pc], -r5, ror #4
    2acc:	65657246 	strbvs	r7, [r5, #-582]!	; 0xfffffdba
    2ad0:	636f6c42 	cmnvs	pc, #16896	; 0x4200
    2ad4:	7000736b 	andvc	r7, r0, fp, ror #6
    2ad8:	646e4578 	strbtvs	r4, [lr], #-1400	; 0xfffffa88
    2adc:	76727000 	ldrbtvc	r7, [r2], -r0
    2ae0:	65736e49 	ldrbvs	r6, [r3, #-3657]!	; 0xfffff1b7
    2ae4:	6c427472 	cfstrdvs	mvd7, [r2], {114}	; 0x72
    2ae8:	496b636f 	stmdbmi	fp!, {r0, r1, r2, r3, r5, r6, r8, r9, sp, lr}^
    2aec:	466f746e 	strbtmi	r7, [pc], -lr, ror #8
    2af0:	4c656572 	cfstr64mi	mvdx6, [r5], #-456	; 0xfffffe38
    2af4:	00747369 	rsbseq	r7, r4, r9, ror #6
    2af8:	4c425f41 	mcrrmi	15, 4, r5, r2, cr1
    2afc:	5f4b434f 	svcpl	0x004b434f
    2b00:	4b4e494c 	blmi	1395038 <__RAM_SIZE+0x1295038>
    2b04:	53787500 	cmnpl	r8, #0, 10
    2b08:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
    2b0c:	72646441 	rsbvc	r6, r4, #1090519040	; 0x41000000
    2b10:	00737365 	rsbseq	r7, r3, r5, ror #6
    2b14:	7a695378 	bvc	1a578fc <__RAM_SIZE+0x19578fc>
    2b18:	53664f65 	cmnpl	r6, #404	; 0x194
    2b1c:	6c6c616d 	stfvse	f6, [ip], #-436	; 0xfffffe4c
    2b20:	46747365 	ldrbtmi	r7, [r4], -r5, ror #6
    2b24:	42656572 	rsbmi	r6, r5, #478150656	; 0x1c800000
    2b28:	6b636f6c 	blvs	18de8e0 <__RAM_SIZE+0x17de8e0>
    2b2c:	79426e49 	stmdbvc	r2, {r0, r3, r6, r9, sl, fp, sp, lr}^
    2b30:	00736574 	rsbseq	r6, r3, r4, ror r5
    2b34:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    2b38:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    2b3c:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    2b40:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    2b44:	6572462f 	ldrbvs	r4, [r2, #-1583]!	; 0xfffff9d1
    2b48:	4f545265 	svcmi	0x00545265
    2b4c:	6f702f53 	svcvs	0x00702f53
    2b50:	62617472 	rsbvs	r7, r1, #1912602624	; 0x72000000
    2b54:	4d2f656c 	cfstr32mi	mvfx6, [pc, #-432]!	; 29ac <__HEAP_SIZE+0x19ac>
    2b58:	614d6d65 	cmpvs	sp, r5, ror #26
    2b5c:	682f676e 	stmdavs	pc!, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}	; <UNPREDICTABLE>
    2b60:	5f706165 	svcpl	0x00706165
    2b64:	00632e34 	rsbeq	r2, r3, r4, lsr lr
    2b68:	6e457875 	mcrvs	8, 2, r7, cr5, cr5, {3}
    2b6c:	64644164 	strbtvs	r4, [r4], #-356	; 0xfffffe9c
    2b70:	73736572 	cmnvc	r3, #478150656	; 0x1c800000
    2b74:	4e787000 	cdpmi	0, 7, cr7, cr8, cr0, {0}
    2b78:	6c427765 	mcrrvs	7, 6, r7, r2, cr5
    2b7c:	4c6b636f 	stclmi	3, cr6, [fp], #-444	; 0xfffffe44
    2b80:	006b6e69 	rsbeq	r6, fp, r9, ror #28
    2b84:	726f5078 	rsbvc	r5, pc, #120	; 0x78
    2b88:	74654774 	strbtvc	r4, [r5], #-1908	; 0xfffff88c
    2b8c:	65657246 	strbvs	r7, [r5, #-582]!	; 0xfffffdba
    2b90:	70616548 	rsbvc	r6, r1, r8, asr #10
    2b94:	657a6953 	ldrbvs	r6, [sl, #-2387]!	; 0xfffff6ad
    2b98:	64417800 	strbvs	r7, [r1], #-2048	; 0xfffff800
    2b9c:	69746964 	ldmdbvs	r4!, {r2, r5, r6, r8, fp, sp, lr}^
    2ba0:	6c616e6f 	stclvs	14, cr6, [r1], #-444	; 0xfffffe44
    2ba4:	75716552 	ldrbvc	r6, [r1, #-1362]!	; 0xfffffaae
    2ba8:	64657269 	strbtvs	r7, [r5], #-617	; 0xfffffd97
    2bac:	657a6953 	ldrbvs	r6, [sl, #-2387]!	; 0xfffff6ad
    2bb0:	6f507600 	svcvs	0x00507600
    2bb4:	65487472 	strbvs	r7, [r8, #-1138]	; 0xfffffb8e
    2bb8:	65527061 	ldrbvs	r7, [r2, #-97]	; 0xffffff9f
    2bbc:	53746573 	cmnpl	r4, #482344960	; 0x1cc00000
    2bc0:	65746174 	ldrbvs	r6, [r4, #-372]!	; 0xfffffe8c
    2bc4:	614d7800 	cmpvs	sp, r0, lsl #16
    2bc8:	7a695378 	bvc	1a579b0 <__RAM_SIZE+0x19579b0>
    2bcc:	50780065 	rsbspl	r0, r8, r5, rrx
    2bd0:	4774726f 	ldrbmi	r7, [r4, -pc, ror #4]!
    2bd4:	694d7465 	stmdbvs	sp, {r0, r2, r5, r6, sl, ip, sp, lr}^
    2bd8:	756d696e 	strbvc	r6, [sp, #-2414]!	; 0xfffff692
    2bdc:	6576456d 	ldrbvs	r4, [r6, #-1389]!	; 0xfffffa93
    2be0:	65724672 	ldrbvs	r4, [r2, #-1650]!	; 0xfffff98e
    2be4:	61654865 	cmnvs	r5, r5, ror #16
    2be8:	7a695370 	bvc	1a579b0 <__RAM_SIZE+0x19579b0>
    2bec:	6c420065 	mcrrvs	0, 6, r0, r2, cr5
    2bf0:	4c6b636f 	stclmi	3, cr6, [fp], #-444	; 0xfffffe44
    2bf4:	5f6b6e69 	svcpl	0x006b6e69
    2bf8:	4e780074 	mrcmi	0, 3, r0, cr8, cr4, {3}
    2bfc:	65626d75 	strbvs	r6, [r2, #-3445]!	; 0xfffff28b
    2c00:	53664f72 	cmnpl	r6, #456	; 0x1c8
    2c04:	65636375 	strbvs	r6, [r3, #-885]!	; 0xfffffc8b
    2c08:	75667373 	strbvc	r7, [r6, #-883]!	; 0xfffffc8d
    2c0c:	6c6c416c 	stfvse	f4, [ip], #-432	; 0xfffffe50
    2c10:	7461636f 	strbtvc	r6, [r1], #-879	; 0xfffffc91
    2c14:	736e6f69 	cmnvc	lr, #420	; 0x1a4
    2c18:	76417800 	strbvc	r7, [r1], -r0, lsl #16
    2c1c:	616c6961 	cmnvs	ip, r1, ror #18
    2c20:	48656c62 	stmdami	r5!, {r1, r5, r6, sl, fp, sp, lr}^
    2c24:	53706165 	cmnpl	r0, #1073741849	; 0x40000019
    2c28:	65636170 	strbvs	r6, [r3, #-368]!	; 0xfffffe90
    2c2c:	79426e49 	stmdbvc	r2, {r0, r3, r6, r9, sl, fp, sp, lr}^
    2c30:	00736574 	rsbseq	r6, r3, r4, ror r5
    2c34:	61654878 	smcvs	21640	; 0x5488
    2c38:	72745370 	rsbsvc	r5, r4, #112, 6	; 0xc0000001
    2c3c:	53746375 	cmnpl	r4, #-738197503	; 0xd4000001
    2c40:	00657a69 	rsbeq	r7, r5, r9, ror #20
    2c44:	6f507670 	svcvs	0x00507670
    2c48:	61437472 	hvcvs	14146	; 0x3742
    2c4c:	636f6c6c 	cmnvs	pc, #108, 24	; 0x6c00
    2c50:	72467800 	subvc	r7, r6, #0, 16
    2c54:	79426565 	stmdbvc	r2, {r0, r2, r5, r6, r8, sl, sp, lr}^
    2c58:	52736574 	rsbspl	r6, r3, #116, 10	; 0x1d000000
    2c5c:	69616d65 	stmdbvs	r1!, {r0, r2, r5, r6, r8, sl, fp, sp, lr}^
    2c60:	676e696e 	strbvs	r6, [lr, -lr, ror #18]!
    2c64:	69537800 	ldmdbvs	r3, {fp, ip, sp, lr}^
    2c68:	664f657a 			; <UNDEFINED> instruction: 0x664f657a
    2c6c:	6772614c 	ldrbvs	r6, [r2, -ip, asr #2]!
    2c70:	46747365 	ldrbtmi	r7, [r4], -r5, ror #6
    2c74:	42656572 	rsbmi	r6, r5, #478150656	; 0x1c800000
    2c78:	6b636f6c 	blvs	18dea30 <__RAM_SIZE+0x17dea30>
    2c7c:	79426e49 	stmdbvc	r2, {r0, r3, r6, r9, sl, fp, sp, lr}^
    2c80:	00736574 	rsbseq	r6, r3, r4, ror r5
    2c84:	48767270 	ldmdami	r6!, {r4, r5, r6, r9, ip, sp, lr}^
    2c88:	49706165 	ldmdbmi	r0!, {r0, r2, r5, r6, r8, sp, lr}^
    2c8c:	0074696e 	rsbseq	r6, r4, lr, ror #18
    2c90:	6c427870 	mcrrvs	8, 7, r7, r2, cr0
    2c94:	546b636f 	strbtpl	r6, [fp], #-879	; 0xfffffc91
    2c98:	736e496f 	cmnvc	lr, #1818624	; 0x1bc000
    2c9c:	00747265 	rsbseq	r7, r4, r5, ror #4
    2ca0:	746f5478 	strbtvc	r5, [pc], #-1144	; 2ca8 <__HEAP_SIZE+0x1ca8>
    2ca4:	65486c61 	strbvs	r6, [r8, #-3169]	; 0xfffff39f
    2ca8:	69537061 	ldmdbvs	r3, {r0, r5, r6, ip, sp, lr}^
    2cac:	7800657a 	stmdavc	r0, {r1, r3, r4, r5, r6, r8, sl, sp, lr}
    2cb0:	626d754e 	rsbvs	r7, sp, #327155712	; 0x13800000
    2cb4:	664f7265 	strbvs	r7, [pc], -r5, ror #4
    2cb8:	63637553 	cmnvs	r3, #348127232	; 0x14c00000
    2cbc:	66737365 	ldrbtvs	r7, [r3], -r5, ror #6
    2cc0:	72466c75 	subvc	r6, r6, #29952	; 0x7500
    2cc4:	00736565 	rsbseq	r6, r3, r5, ror #10
    2cc8:	6f6c4278 	svcvs	0x006c4278
    2ccc:	69536b63 	ldmdbvs	r3, {r0, r1, r5, r6, r8, r9, fp, sp, lr}^
    2cd0:	7800657a 	stmdavc	r0, {r1, r3, r4, r5, r6, r8, sl, sp, lr}
    2cd4:	72617453 	rsbvc	r7, r1, #1392508928	; 0x53000000
    2cd8:	42780074 	rsbsmi	r0, r8, #116	; 0x74
    2cdc:	6b636f6c 	blvs	18dea94 <__RAM_SIZE+0x17dea94>
    2ce0:	4e780073 	mrcmi	0, 3, r0, cr8, cr3, {3}
    2ce4:	70006d75 	andvc	r6, r0, r5, ror sp
    2ce8:	72694678 	rsbvc	r4, r9, #120, 12	; 0x7800000
    2cec:	72467473 	subvc	r7, r6, #1929379840	; 0x73000000
    2cf0:	6c426565 	cfstr64vs	mvdx6, [r2], {101}	; 0x65
    2cf4:	006b636f 	rsbeq	r6, fp, pc, ror #6
    2cf8:	6e615778 	mcrvs	7, 3, r5, cr1, cr8, {3}
    2cfc:	53646574 	cmnpl	r4, #116, 10	; 0x1d000000
    2d00:	00657a69 	rsbeq	r7, r5, r9, ror #20
    2d04:	726f5076 	rsbvc	r5, pc, #118	; 0x76
    2d08:	696e4974 	stmdbvs	lr!, {r2, r4, r5, r6, r8, fp, lr}^
    2d0c:	6c616974 			; <UNDEFINED> instruction: 0x6c616974
    2d10:	42657369 	rsbmi	r7, r5, #-1543503871	; 0xa4000001
    2d14:	6b636f6c 	blvs	18deacc <__RAM_SIZE+0x17deacc>
    2d18:	50760073 	rsbspl	r0, r6, r3, ror r0
    2d1c:	4774726f 	ldrbmi	r7, [r4, -pc, ror #4]!
    2d20:	65487465 	strbvs	r7, [r8, #-1125]	; 0xfffffb9b
    2d24:	74537061 	ldrbvc	r7, [r3], #-97	; 0xffffff9f
    2d28:	00737461 	rsbseq	r7, r3, r1, ror #8
    2d2c:	694c7870 	stmdbvs	ip, {r4, r5, r6, fp, ip, sp, lr}^
    2d30:	75006b6e 	strvc	r6, [r0, #-2926]	; 0xfffff492
    2d34:	6972436c 	ldmdbvs	r2!, {r2, r3, r5, r6, r8, r9, lr}^
    2d38:	61636974 	smcvs	13972	; 0x3694
    2d3c:	73654e6c 	cmnvc	r5, #108, 28	; 0x6c0
    2d40:	676e6974 			; <UNDEFINED> instruction: 0x676e6974
    2d44:	446c7500 	strbtmi	r7, [ip], #-1280	; 0xfffffb00
    2d48:	796d6d75 	stmdbvc	sp!, {r0, r2, r4, r5, r6, r8, sl, fp, sp, lr}^
    2d4c:	506c7500 	rsbpl	r7, ip, r0, lsl #10
    2d50:	63750043 	cmnvs	r5, #67	; 0x43
    2d54:	4e435653 	mcrmi	6, 2, r5, cr3, cr3, {2}
    2d58:	65626d75 	strbvs	r6, [r2, #-3445]!	; 0xfffff28b
    2d5c:	53760072 	cmnpl	r6, #114	; 0x72
    2d60:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
    2d64:	73726946 	cmnvc	r2, #1146880	; 0x118000
    2d68:	73615474 	cmnvc	r1, #116, 8	; 0x74000000
    2d6c:	7870006b 	ldmdavc	r0!, {r0, r1, r3, r5, r6}^
    2d70:	74636556 	strbtvc	r6, [r3], #-1366	; 0xfffffaaa
    2d74:	6154726f 	cmpvs	r4, pc, ror #4
    2d78:	00656c62 	rsbeq	r6, r5, r2, ror #24
    2d7c:	726f5076 	rsbvc	r5, pc, #118	; 0x76
    2d80:	43565374 	cmpmi	r6, #116, 6	; 0xd0000001
    2d84:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
    2d88:	5f72656c 	svcpl	0x0072656c
    2d8c:	6c750043 	ldclvs	0, cr0, [r5], #-268	; 0xfffffef4
    2d90:	706d6f43 	rsbvc	r6, sp, r3, asr #30
    2d94:	6574656c 	ldrbvs	r6, [r4, #-1388]!	; 0xfffffa94
    2d98:	6b636954 	blvs	18dd2f0 <__RAM_SIZE+0x17dd2f0>
    2d9c:	69726550 	ldmdbvs	r2!, {r4, r6, r8, sl, sp, lr}^
    2da0:	0073646f 	rsbseq	r6, r3, pc, ror #8
    2da4:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    2da8:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    2dac:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    2db0:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    2db4:	6572462f 	ldrbvs	r4, [r2, #-1583]!	; 0xfffff9d1
    2db8:	4f545265 	svcmi	0x00545265
    2dbc:	6f702f53 	svcvs	0x00702f53
    2dc0:	62617472 	rsbvs	r7, r1, #1912602624	; 0x72000000
    2dc4:	472f656c 	strmi	r6, [pc, -ip, ror #10]!
    2dc8:	412f4343 			; <UNDEFINED> instruction: 0x412f4343
    2dcc:	435f4d52 	cmpmi	pc, #5248	; 0x1480
    2dd0:	5f33334d 	svcpl	0x0033334d
    2dd4:	2f5a544e 	svccs	0x005a544e
    2dd8:	5f6e6f6e 	svcpl	0x006e6f6e
    2ddc:	75636573 	strbvc	r6, [r3, #-1395]!	; 0xfffffa8d
    2de0:	702f6572 	eorvc	r6, pc, r2, ror r5	; <UNPREDICTABLE>
    2de4:	2e74726f 	cdpcs	2, 7, cr7, cr4, cr15, {3}
    2de8:	6c750063 	ldclvs	0, cr0, [r5], #-396	; 0xfffffe74
    2dec:	706d6f43 	rsbvc	r6, sp, r3, asr #30
    2df0:	6574656c 	ldrbvs	r6, [r4, #-1388]!	; 0xfffffa94
    2df4:	73795364 	cmnvc	r9, #100, 6	; 0x90000001
    2df8:	6b636954 	blvs	18dd350 <__RAM_SIZE+0x17dd350>
    2dfc:	72636544 	rsbvc	r6, r3, #68, 10	; 0x11000000
    2e00:	6e656d65 	cdpvs	13, 6, cr6, cr5, cr5, {3}
    2e04:	70007374 	andvc	r7, r0, r4, ror r3
    2e08:	61436c75 	hvcvs	14021	; 0x36c5
    2e0c:	72656c6c 	rsbvc	r6, r5, #108, 24	; 0x6c00
    2e10:	63617453 	cmnvs	r1, #1392508928	; 0x53000000
    2e14:	6464416b 	strbtvs	r4, [r4], #-363	; 0xfffffe95
    2e18:	73736572 	cmnvc	r3, #478150656	; 0x1c800000
    2e1c:	536c7500 	cmnpl	ip, #0, 10
    2e20:	70706f74 	rsbsvc	r6, r0, r4, ror pc
    2e24:	69546465 	ldmdbvs	r4, {r0, r2, r5, r6, sl, sp, lr}^
    2e28:	4372656d 	cmnmi	r2, #457179136	; 0x1b400000
    2e2c:	65706d6f 	ldrbvs	r6, [r0, #-3439]!	; 0xfffff291
    2e30:	7461736e 	strbtvc	r7, [r1], #-878	; 0xfffffc92
    2e34:	006e6f69 	rsbeq	r6, lr, r9, ror #30
    2e38:	79536c75 	ldmdbvc	r3, {r0, r2, r4, r5, r6, sl, fp, sp, lr}^
    2e3c:	63695473 	cmnvs	r9, #1929379840	; 0x73000000
    2e40:	6365446b 	cmnvs	r5, #1795162112	; 0x6b000000
    2e44:	656d6572 	strbvs	r6, [sp, #-1394]!	; 0xfffffa8e
    2e48:	4c73746e 	cfldrdmi	mvd7, [r3], #-440	; 0xfffffe48
    2e4c:	00746665 	rsbseq	r6, r4, r5, ror #12
    2e50:	61436c75 	hvcvs	14021	; 0x36c5
    2e54:	6c75636c 	ldclvs	3, cr6, [r5], #-432	; 0xfffffe50
    2e58:	64657461 	strbtvs	r7, [r5], #-1121	; 0xfffffb9f
    2e5c:	64616f4c 	strbtvs	r6, [r1], #-3916	; 0xfffff0b4
    2e60:	756c6156 	strbvc	r6, [ip, #-342]!	; 0xfffffeaa
    2e64:	4d780065 	ldclmi	0, cr0, [r8, #-404]!	; 0xfffffe6c
    2e68:	6669646f 	strbtvs	r6, [r9], -pc, ror #8
    2e6c:	6c626169 	stfvse	f6, [r2], #-420	; 0xfffffe5c
    2e70:	6c644965 			; <UNDEFINED> instruction: 0x6c644965
    2e74:	6d695465 	cfstrdvs	mvd5, [r9, #-404]!	; 0xfffffe6c
    2e78:	78700065 	ldmdavc	r0!, {r0, r2, r5, r6}^
    2e7c:	4f646e45 	svcmi	0x00646e45
    2e80:	61745366 	cmnvs	r4, r6, ror #6
    2e84:	78006b63 	stmdavc	r0, {r0, r1, r5, r6, r8, r9, fp, sp, lr}
    2e88:	6978614d 	ldmdbvs	r8!, {r0, r2, r3, r6, r8, sp, lr}^
    2e8c:	506d756d 	rsbpl	r7, sp, sp, ror #10
    2e90:	6973736f 	ldmdbvs	r3!, {r0, r1, r2, r3, r5, r6, r8, r9, ip, sp, lr}^
    2e94:	53656c62 	cmnpl	r5, #25088	; 0x6200
    2e98:	72707075 	rsbsvc	r7, r0, #117	; 0x75
    2e9c:	65737365 	ldrbvs	r7, [r3, #-869]!	; 0xfffffc9b
    2ea0:	63695464 	cmnvs	r9, #100, 8	; 0x64000000
    2ea4:	7000736b 	andvc	r7, r0, fp, ror #6
    2ea8:	61547672 	cmpvs	r4, r2, ror r6
    2eac:	78456b73 	stmdavc	r5, {r0, r1, r4, r5, r6, r8, r9, fp, sp, lr}^
    2eb0:	72457469 	subvc	r7, r5, #1761607680	; 0x69000000
    2eb4:	00726f72 	rsbseq	r6, r2, r2, ror pc
    2eb8:	726f5076 	rsbvc	r5, pc, #118	; 0x76
    2ebc:	74655374 	strbtvc	r5, [r5], #-884	; 0xfffffc8c
    2ec0:	69547075 	ldmdbvs	r4, {r0, r2, r4, r5, r6, ip, sp, lr}^
    2ec4:	4972656d 	ldmdbmi	r2!, {r0, r2, r3, r5, r6, r8, sl, sp, lr}^
    2ec8:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
    2ecc:	74707572 	ldrbtvc	r7, [r0], #-1394	; 0xfffffa8e
    2ed0:	43787000 	cmnmi	r8, #0
    2ed4:	0065646f 	rsbeq	r6, r5, pc, ror #8
    2ed8:	726f5078 	rsbvc	r5, pc, #120	; 0x78
    2edc:	49734974 	ldmdbmi	r3!, {r2, r4, r5, r6, r8, fp, lr}^
    2ee0:	6469736e 	strbtvs	r7, [r9], #-878	; 0xfffffc92
    2ee4:	746e4965 	strbtvc	r4, [lr], #-2405	; 0xfffff69b
    2ee8:	75727265 	ldrbvc	r7, [r2, #-613]!	; 0xfffffd9b
    2eec:	75007470 	strvc	r7, [r0, #-1136]	; 0xfffffb90
    2ef0:	7275436c 	rsbsvc	r4, r5, #108, 6	; 0xb0000001
    2ef4:	746e6572 	strbtvc	r6, [lr], #-1394	; 0xfffffa8e
    2ef8:	65746e49 	ldrbvs	r6, [r4, #-3657]!	; 0xfffff1b7
    2efc:	70757272 	rsbsvc	r7, r5, r2, ror r2
    2f00:	52760074 	rsbspl	r0, r6, #116	; 0x74
    2f04:	6f747365 	svcvs	0x00747365
    2f08:	6f436572 	svcvs	0x00436572
    2f0c:	7865746e 	stmdavc	r5!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
    2f10:	46664f74 	uqsub16mi	r4, r6, r4
    2f14:	74737269 	ldrbtvc	r7, [r3], #-617	; 0xfffffd97
    2f18:	6b736154 	blvs	1cdb470 <__RAM_SIZE+0x1bdb470>
    2f1c:	726f7000 	rsbvc	r7, pc, #0
    2f20:	52534974 	subspl	r4, r3, #116, 18	; 0x1d0000
    2f24:	5300745f 	movwpl	r7, #1119	; 0x45f
    2f28:	69547379 	ldmdbvs	r4, {r0, r3, r4, r5, r6, r8, r9, ip, sp, lr}^
    2f2c:	485f6b63 	ldmdami	pc, {r0, r1, r5, r6, r8, r9, fp, sp, lr}^	; <UNPREDICTABLE>
    2f30:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
    2f34:	75007265 	strvc	r7, [r0, #-613]	; 0xfffffd9b
    2f38:	6c65526c 	sfmvs	f5, 2, [r5], #-432	; 0xfffffe50
    2f3c:	5664616f 	strbtpl	r6, [r4], -pc, ror #2
    2f40:	65756c61 	ldrbvs	r6, [r5, #-3169]!	; 0xfffff39f
    2f44:	546c7500 	strbtpl	r7, [ip], #-1280	; 0xfffffb00
    2f48:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    2f4c:	6e756f43 	cdpvs	15, 7, cr6, cr5, cr3, {2}
    2f50:	6f467374 	svcvs	0x00467374
    2f54:	656e4f72 	strbvs	r4, [lr, #-3954]!	; 0xfffff08e
    2f58:	6b636954 	blvs	18dd4b0 <__RAM_SIZE+0x17dd4b0>
    2f5c:	506c7500 	rsbpl	r7, ip, r0, lsl #10
    2f60:	69766572 	ldmdbvs	r6!, {r1, r4, r5, r6, r8, sl, sp, lr}^
    2f64:	4d73756f 	cfldr64mi	mvdx7, [r3, #-444]!	; 0xfffffe44
    2f68:	006b7361 	rsbeq	r7, fp, r1, ror #6
    2f6c:	646e6550 	strbtvs	r6, [lr], #-1360	; 0xfffffab0
    2f70:	485f5653 	ldmdami	pc, {r0, r1, r4, r6, r9, sl, ip, lr}^	; <UNPREDICTABLE>
    2f74:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
    2f78:	2e007265 	cdpcs	2, 0, cr7, cr0, cr5, {3}
    2f7c:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    2f80:	2f2e2e2f 	svccs	0x002e2e2f
    2f84:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
    2f88:	2f736f74 	svccs	0x00736f74
    2f8c:	65657246 	strbvs	r7, [r5, #-582]!	; 0xfffffdba
    2f90:	534f5452 	movtpl	r5, #62546	; 0xf452
    2f94:	726f702f 	rsbvc	r7, pc, #47	; 0x2f
    2f98:	6c626174 	stfvse	f6, [r2], #-464	; 0xfffffe30
    2f9c:	43472f65 	movtmi	r2, #32613	; 0x7f65
    2fa0:	52412f43 	subpl	r2, r1, #268	; 0x10c
    2fa4:	4d435f4d 	stclmi	15, cr5, [r3, #-308]	; 0xfffffecc
    2fa8:	4e5f3333 	mrcmi	3, 2, r3, cr15, cr3, {1}
    2fac:	6e2f5a54 			; <UNDEFINED> instruction: 0x6e2f5a54
    2fb0:	735f6e6f 	cmpvc	pc, #1776	; 0x6f0
    2fb4:	72756365 	rsbsvc	r6, r5, #-1811939327	; 0x94000001
    2fb8:	6f702f65 	svcvs	0x00702f65
    2fbc:	73617472 	cmnvc	r1, #1912602624	; 0x72000000
    2fc0:	00632e6d 	rsbeq	r2, r3, sp, ror #28
    2fc4:	50734978 	rsbspl	r4, r3, r8, ror r9
    2fc8:	69766972 	ldmdbvs	r6!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    2fcc:	6567656c 	strbvs	r6, [r7, #-1388]!	; 0xfffffa94
    2fd0:	56530064 	ldrbpl	r0, [r3], -r4, rrx
    2fd4:	61485f43 	cmpvs	r8, r3, asr #30
    2fd8:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
    2fdc:	52760072 	rsbspl	r0, r6, #114	; 0x72
    2fe0:	74657365 	strbtvc	r7, [r5], #-869	; 0xfffffc9b
    2fe4:	76697250 			; <UNDEFINED> instruction: 0x76697250
    2fe8:	67656c69 	strbvs	r6, [r5, -r9, ror #24]!
    2fec:	6c750065 	ldclvs	0, cr0, [r5], #-404	; 0xfffffe6c
    2ff0:	6b73614d 	blvs	1cdb52c <__RAM_SIZE+0x1bdb52c>
    2ff4:	61527600 	cmpvs	r2, r0, lsl #12
    2ff8:	50657369 	rsbpl	r7, r5, r9, ror #6
    2ffc:	69766972 	ldmdbvs	r6!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    3000:	6567656c 	strbvs	r6, [r7, #-1388]!	; 0xfffffa94
    3004:	732f2e00 			; <UNDEFINED> instruction: 0x732f2e00
    3008:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
    300c:	672f7075 			; <UNDEFINED> instruction: 0x672f7075
    3010:	732f6363 			; <UNDEFINED> instruction: 0x732f6363
    3014:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
    3018:	415f7075 	cmpmi	pc, r5, ror r0	; <UNPREDICTABLE>
    301c:	4d434d52 	stclmi	13, cr4, [r3, #-328]	; 0xfffffeb8
    3020:	732e3333 			; <UNDEFINED> instruction: 0x732e3333
    3024:	554e4700 	strbpl	r4, [lr, #-1792]	; 0xfffff900
    3028:	20534120 	subscs	r4, r3, r0, lsr #2
    302c:	36332e32 			; <UNDEFINED> instruction: 0x36332e32
    3030:	2e00312e 	adfcssp	f3, f0, #0.5
    3034:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    3038:	2f2e2e2f 	svccs	0x002e2e2f
    303c:	7562696c 	strbvc	r6, [r2, #-2412]!	; 0xfffff694
    3040:	736c6974 	cmnvc	ip, #116, 18	; 0x1d0000
    3044:	7561662f 	strbvc	r6, [r1, #-1583]!	; 0xfffff9d1
    3048:	642d746c 	strtvs	r7, [sp], #-1132	; 0xfffffb94
    304c:	2f706d75 	svccs	0x00706d75
    3050:	2f757063 	svccs	0x00757063
    3054:	74726f63 	ldrbtvc	r6, [r2], #-3939	; 0xfffff09d
    3058:	6d2d7865 	stcvs	8, cr7, [sp, #-404]!	; 0xfffffe6c
    305c:	662f3333 			; <UNDEFINED> instruction: 0x662f3333
    3060:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
    3064:	6363672d 	cmnvs	r3, #11796480	; 0xb40000
    3068:	Address 0x00003068 is out of bounds.


Disassembly of section .debug_frame:

00000000 <.debug_frame>:
    __asm volatile ( "mrs %0, ipsr" : "=r" ( ulCurrentInterrupt )::"memory" );
       0:	0000000c 	andeq	r0, r0, ip
    if( ulCurrentInterrupt == 0 )
       4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
        xReturn = pdFALSE;
       8:	7c020001 	stcvc	0, cr0, [r2], {1}
}
       c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
      10:	0000001c 	andeq	r0, r0, ip, lsl r0
      14:	00000000 	andeq	r0, r0, r0
        if(ch == '\n' || it >= size) {
      18:	10000800 	andne	r0, r0, r0, lsl #16
}
      1c:	00000044 	andeq	r0, r0, r4, asr #32
      20:	8e040e41 	cdphi	14, 0, cr0, cr4, cr1, {2}
      24:	100e4101 	andne	r4, lr, r1, lsl #2
      28:	040e0a52 	streq	r0, [lr], #-2642	; 0xfffff5ae
      2c:	00000b42 	andeq	r0, r0, r2, asr #22
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
      30:	00000014 	andeq	r0, r0, r4, lsl r0
	...
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
      3c:	00000010 	andeq	r0, r0, r0, lsl r0
      40:	83080e41 	movwhi	r0, #36417	; 0x8e41
        BaseType_t xReturn = pdFAIL;
      44:	00018e02 	andeq	r8, r1, r2, lsl #28
    }
      48:	00000014 	andeq	r0, r0, r4, lsl r0
	...
            while( pxBlock != pxEnd )
      54:	00000010 	andeq	r0, r0, r0, lsl r0
                if( pxBlock->xBlockSize > xMaxSize )
      58:	83080e41 	movwhi	r0, #36417	; 0x8e41
      5c:	00018e02 	andeq	r8, r1, r2, lsl #28
                if( pxBlock->xBlockSize < xMinSize )
      60:	0000001c 	andeq	r0, r0, ip, lsl r0
                    xMinSize = pxBlock->xBlockSize;
      64:	00000000 	andeq	r0, r0, r0
      68:	10000844 	andne	r0, r0, r4, asr #16
      6c:	00000068 	andeq	r0, r0, r8, rrx
      70:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
      74:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
      78:	900e4101 	andls	r4, lr, r1, lsl #2
      7c:	0c0e6902 			; <UNDEFINED> instruction: 0x0c0e6902
            prvUnlockQueue( pxQueue );
      80:	00000014 	andeq	r0, r0, r4, lsl r0
            ( void ) xTaskResumeAll();
      84:	00000000 	andeq	r0, r0, r0
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
      88:	100008ac 	andne	r0, r0, ip, lsr #17
      8c:	0000001c 	andeq	r0, r0, ip, lsl r0
      90:	83080e41 	movwhi	r0, #36417	; 0x8e41
        taskENTER_CRITICAL();
      94:	00018e02 	andeq	r8, r1, r2, lsl #28
            if( uxSemaphoreCount > ( UBaseType_t ) 0 )
      98:	00000014 	andeq	r0, r0, r4, lsl r0
                if( xTicksToWait == ( TickType_t ) 0 )
      9c:	00000000 	andeq	r0, r0, r0
      a0:	100008c8 	andne	r0, r0, r8, asr #17
                else if( xEntryTimeSet == pdFALSE )
      a4:	00000018 	andeq	r0, r0, r8, lsl r0
        taskEXIT_CRITICAL();
      a8:	83080e41 	movwhi	r0, #36417	; 0x8e41
        vTaskSuspendAll();
      ac:	00018e02 	andeq	r8, r1, r2, lsl #28
        prvLockQueue( pxQueue );
      b0:	00000014 	andeq	r0, r0, r4, lsl r0
      b4:	00000000 	andeq	r0, r0, r0
      b8:	100008e0 	andne	r0, r0, r0, ror #17
      bc:	00000018 	andeq	r0, r0, r8, lsl r0
      c0:	83080e41 	movwhi	r0, #36417	; 0x8e41
      c4:	00018e02 	andeq	r8, r1, r2, lsl #28
      c8:	00000014 	andeq	r0, r0, r4, lsl r0
      cc:	00000000 	andeq	r0, r0, r0
        if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
      d0:	100008f8 	strdne	r0, [r0], -r8
      d4:	00000018 	andeq	r0, r0, r8, lsl r0
      d8:	83080e41 	movwhi	r0, #36417	; 0x8e41
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
      dc:	00018e02 	andeq	r8, r1, r2, lsl #28
      e0:	00000014 	andeq	r0, r0, r4, lsl r0
                    if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
      e4:	00000000 	andeq	r0, r0, r0
      e8:	10000910 	andne	r0, r0, r0, lsl r9
                vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
      ec:	00000018 	andeq	r0, r0, r8, lsl r0
      f0:	83080e41 	movwhi	r0, #36417	; 0x8e41
                prvUnlockQueue( pxQueue );
      f4:	00018e02 	andeq	r8, r1, r2, lsl #28
      f8:	00000014 	andeq	r0, r0, r4, lsl r0
                if( xTaskResumeAll() == pdFALSE )
      fc:	00000000 	andeq	r0, r0, r0
     100:	10000928 	andne	r0, r0, r8, lsr #18
                    taskYIELD_WITHIN_API();
     104:	00000018 	andeq	r0, r0, r8, lsl r0
                    if( xInheritanceOccurred != pdFALSE )
     108:	83080e41 	movwhi	r0, #36417	; 0x8e41
                return errQUEUE_EMPTY;
     10c:	00018e02 	andeq	r8, r1, r2, lsl #28
                        taskENTER_CRITICAL();
     110:	00000014 	andeq	r0, r0, r4, lsl r0
                            uxHighestWaitingPriority = prvGetDisinheritPriorityAfterTimeout( pxQueue );
     114:	00000000 	andeq	r0, r0, r0
     118:	10000940 	andne	r0, r0, r0, asr #18
                            vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
     11c:	00000024 	andeq	r0, r0, r4, lsr #32
                        taskEXIT_CRITICAL();
     120:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     124:	00018e02 	andeq	r8, r1, r2, lsl #28
     128:	00000014 	andeq	r0, r0, r4, lsl r0
     12c:	00000000 	andeq	r0, r0, r0
     130:	10000964 	andne	r0, r0, r4, ror #18
     134:	0000002c 	andeq	r0, r0, ip, lsr #32
     138:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     13c:	00018e02 	andeq	r8, r1, r2, lsl #28
     140:	0000000c 	andeq	r0, r0, ip
     144:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     148:	7c020001 	stcvc	0, cr0, [r2], {1}
     14c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     150:	0000000c 	andeq	r0, r0, ip
     154:	00000140 	andeq	r0, r0, r0, asr #2
     158:	00000000 	andeq	r0, r0, r0
     15c:	00000010 	andeq	r0, r0, r0, lsl r0
     160:	0000000c 	andeq	r0, r0, ip
     164:	00000140 	andeq	r0, r0, r0, asr #2
     168:	10000990 	mulne	r0, r0, r9
     16c:	0000002c 	andeq	r0, r0, ip, lsr #32
     170:	0000000c 	andeq	r0, r0, ip
     174:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     178:	7c020001 	stcvc	0, cr0, [r2], {1}
     17c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     180:	0000000c 	andeq	r0, r0, ip
     184:	00000170 	andeq	r0, r0, r0, ror r1
     188:	00000000 	andeq	r0, r0, r0
     18c:	00000008 	andeq	r0, r0, r8
     190:	0000000c 	andeq	r0, r0, ip
     194:	00000170 	andeq	r0, r0, r0, ror r1
     198:	100009bc 			; <UNDEFINED> instruction: 0x100009bc
     19c:	00000002 	andeq	r0, r0, r2
     1a0:	00000018 	andeq	r0, r0, r8, lsl r0
     1a4:	00000170 	andeq	r0, r0, r0, ror r1
     1a8:	00000000 	andeq	r0, r0, r0
     1ac:	0000000e 	andeq	r0, r0, lr
     1b0:	83080e42 	movwhi	r0, #36418	; 0x8e42
     1b4:	44018e02 	strmi	r8, [r1], #-3586	; 0xfffff1fe
     1b8:	cec3000e 	cdpgt	0, 12, cr0, cr3, cr14, {0}
     1bc:	0000000c 	andeq	r0, r0, ip
     1c0:	00000170 	andeq	r0, r0, r0, ror r1
     1c4:	100009be 			; <UNDEFINED> instruction: 0x100009be
     1c8:	00000024 	andeq	r0, r0, r4, lsr #32
     1cc:	0000002c 	andeq	r0, r0, ip, lsr #32
     1d0:	00000170 	andeq	r0, r0, r0, ror r1
     1d4:	100009e2 	andne	r0, r0, r2, ror #19
     1d8:	0000007e 	andeq	r0, r0, lr, ror r0
     1dc:	84240e42 	strthi	r0, [r4], #-3650	; 0xfffff1be
     1e0:	86088509 	strhi	r8, [r8], -r9, lsl #10
     1e4:	88068707 	stmdahi	r6, {r0, r1, r2, r8, r9, sl, pc}
     1e8:	8a048905 	bhi	122604 <__RAM_SIZE+0x22604>
     1ec:	8e028b03 	vmlahi.f64	d8, d2, d3
     1f0:	300e4101 	andcc	r4, lr, r1, lsl #2
     1f4:	240e0a6f 	strcs	r0, [lr], #-2671	; 0xfffff591
     1f8:	00000b42 	andeq	r0, r0, r2, asr #22
     1fc:	00000028 	andeq	r0, r0, r8, lsr #32
     200:	00000170 	andeq	r0, r0, r0, ror r1
     204:	10000a60 	andne	r0, r0, r0, ror #20
     208:	00000138 	andeq	r0, r0, r8, lsr r1
     20c:	841c0e42 	ldrhi	r0, [ip], #-3650	; 0xfffff1be
     210:	86068507 	strhi	r8, [r6], -r7, lsl #10
     214:	88048705 	stmdahi	r4, {r0, r2, r8, r9, sl, pc}
     218:	8e028903 	vmlahi.f16	s16, s4, s6	; <UNPREDICTABLE>
     21c:	300e4101 	andcc	r4, lr, r1, lsl #2
     220:	0e0a5b02 	vmlaeq.f64	d5, d10, d2
     224:	000b421c 	andeq	r4, fp, ip, lsl r2
     228:	00000020 	andeq	r0, r0, r0, lsr #32
     22c:	00000170 	andeq	r0, r0, r0, ror r1
     230:	10000b98 	mulne	r0, r8, fp
     234:	00000094 	muleq	r0, r4, r0
     238:	84140e41 	ldrhi	r0, [r4], #-3649	; 0xfffff1bf
     23c:	86048505 	strhi	r8, [r4], -r5, lsl #10
     240:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
     244:	580e4101 	stmdapl	lr, {r0, r8, lr}
     248:	140e4702 	strne	r4, [lr], #-1794	; 0xfffff8fe
     24c:	00000028 	andeq	r0, r0, r8, lsr #32
     250:	00000170 	andeq	r0, r0, r0, ror r1
     254:	10000c2c 	andne	r0, r0, ip, lsr #24
     258:	000000c6 	andeq	r0, r0, r6, asr #1
     25c:	84240e42 	strthi	r0, [r4], #-3650	; 0xfffff1be
     260:	86088509 	strhi	r8, [r8], -r9, lsl #10
     264:	88068707 	stmdahi	r6, {r0, r1, r2, r8, r9, sl, pc}
     268:	8a048905 	bhi	122684 <__RAM_SIZE+0x22684>
     26c:	8e028b03 	vmlahi.f64	d8, d2, d3
     270:	780e4101 	stmdavc	lr, {r0, r8, lr}
     274:	240e5e02 	strcs	r5, [lr], #-3586	; 0xfffff1fe
     278:	0000003c 	andeq	r0, r0, ip, lsr r0
     27c:	00000170 	andeq	r0, r0, r0, ror r1
     280:	10000cf8 	strdne	r0, [r0], -r8
     284:	000003ea 	andeq	r0, r0, sl, ror #7
     288:	84240e42 	strthi	r0, [r4], #-3650	; 0xfffff1be
     28c:	86088509 	strhi	r8, [r8], -r9, lsl #10
     290:	88068707 	stmdahi	r6, {r0, r1, r2, r8, r9, sl, pc}
     294:	8a048905 	bhi	1226b0 <__RAM_SIZE+0x226b0>
     298:	8e028b03 	vmlahi.f64	d8, d2, d3
     29c:	2c0e4201 	sfmcs	f4, 4, [lr], {1}
     2a0:	050b5005 	streq	r5, [fp, #-5]
     2a4:	0e410a51 			; <UNDEFINED> instruction: 0x0e410a51
     2a8:	01250370 			; <UNDEFINED> instruction: 0x01250370
     2ac:	422c0e0a 	eormi	r0, ip, #10, 28	; 0xa0
     2b0:	51065006 	tstpl	r6, r6
     2b4:	0b42240e 	bleq	10892f4 <__RAM_SIZE+0xf892f4>
     2b8:	00000040 	andeq	r0, r0, r0, asr #32
     2bc:	00000170 	andeq	r0, r0, r0, ror r1
     2c0:	100010e8 	andne	r1, r0, r8, ror #1
     2c4:	00000396 	muleq	r0, r6, r3
     2c8:	84240e42 	strthi	r0, [r4], #-3650	; 0xfffff1be
     2cc:	86088509 	strhi	r8, [r8], -r9, lsl #10
     2d0:	88068707 	stmdahi	r6, {r0, r1, r2, r8, r9, sl, pc}
     2d4:	8a048905 	bhi	1226f0 <__RAM_SIZE+0x226f0>
     2d8:	8e028b03 	vmlahi.f64	d8, d2, d3
     2dc:	2c0e4201 	sfmcs	f4, 4, [lr], {1}
     2e0:	050b5005 	streq	r5, [fp, #-5]
     2e4:	0e410a51 			; <UNDEFINED> instruction: 0x0e410a51
     2e8:	8d030180 	stfhis	f0, [r3, #-512]	; 0xfffffe00
     2ec:	2c0e0a01 			; <UNDEFINED> instruction: 0x2c0e0a01
     2f0:	06500642 	ldrbeq	r0, [r0], -r2, asr #12
     2f4:	42240e51 	eormi	r0, r4, #1296	; 0x510
     2f8:	0000000b 	andeq	r0, r0, fp
     2fc:	0000002c 	andeq	r0, r0, ip, lsr #32
     300:	00000170 	andeq	r0, r0, r0, ror r1
     304:	10001480 	andne	r1, r0, r0, lsl #9
     308:	00000680 	andeq	r0, r0, r0, lsl #13
     30c:	84240e42 	strthi	r0, [r4], #-3650	; 0xfffff1be
     310:	86088509 	strhi	r8, [r8], -r9, lsl #10
     314:	88068707 	stmdahi	r6, {r0, r1, r2, r8, r9, sl, pc}
     318:	8a048905 	bhi	122734 <__RAM_SIZE+0x22734>
     31c:	8e028b03 	vmlahi.f64	d8, d2, d3
     320:	600e4101 	andvs	r4, lr, r1, lsl #2
     324:	0e033803 	cdpeq	8, 0, cr3, cr3, cr3, {0}
     328:	00000024 	andeq	r0, r0, r4, lsr #32
     32c:	00000014 	andeq	r0, r0, r4, lsl r0
     330:	00000170 	andeq	r0, r0, r0, ror r1
     334:	10001b00 	andne	r1, r0, r0, lsl #22
     338:	0000000c 	andeq	r0, r0, ip
     33c:	83080e43 	movwhi	r0, #36419	; 0x8e43
     340:	00018e02 	andeq	r8, r1, r2, lsl #28
     344:	00000030 	andeq	r0, r0, r0, lsr r0
     348:	00000170 	andeq	r0, r0, r0, ror r1
     34c:	10001b0c 	andne	r1, r0, ip, lsl #22
     350:	0000002c 	andeq	r0, r0, ip, lsr #32
     354:	80100e41 	andshi	r0, r0, r1, asr #28
     358:	82038104 	andhi	r8, r3, #4, 2
     35c:	41018302 	tstmi	r1, r2, lsl #6
     360:	058e140e 	streq	r1, [lr, #1038]	; 0x40e
     364:	4c280e41 	stcmi	14, cr0, [r8], #-260	; 0xfffffefc
     368:	ce42140e 	cdpgt	4, 4, cr1, cr2, cr14, {0}
     36c:	c341100e 	movtgt	r1, #4110	; 0x100e
     370:	0ec0c1c2 	acseqdm	f4, f2
     374:	00000000 	andeq	r0, r0, r0
     378:	0000002c 	andeq	r0, r0, ip, lsr #32
     37c:	00000170 	andeq	r0, r0, r0, ror r1
     380:	00000000 	andeq	r0, r0, r0
     384:	0000002c 	andeq	r0, r0, ip, lsr #32
     388:	810c0e41 	tsthi	ip, r1, asr #28
     38c:	83028203 	movwhi	r8, #8707	; 0x2203
     390:	100e4101 	andne	r4, lr, r1, lsl #2
     394:	0e41048e 	cdpeq	4, 4, cr0, cr1, cr14, {4}
     398:	100e4c20 	andne	r4, lr, r0, lsr #24
     39c:	0c0ece42 	stceq	14, cr12, [lr], {66}	; 0x42
     3a0:	c1c2c341 	bicgt	ip, r2, r1, asr #6
     3a4:	0000000e 	andeq	r0, r0, lr
     3a8:	0000002c 	andeq	r0, r0, ip, lsr #32
     3ac:	00000170 	andeq	r0, r0, r0, ror r1
     3b0:	00000000 	andeq	r0, r0, r0
     3b4:	00000028 	andeq	r0, r0, r8, lsr #32
     3b8:	82080e41 	andhi	r0, r8, #1040	; 0x410
     3bc:	41018302 	tstmi	r1, r2, lsl #6
     3c0:	0484100e 	streq	r1, [r4], #14
     3c4:	0e41038e 	cdpeq	3, 4, cr0, cr1, cr14, {4}
     3c8:	100e4b20 	andne	r4, lr, r0, lsr #22
     3cc:	0ec4ce42 	cdpeq	14, 12, cr12, cr4, cr2, {2}
     3d0:	c2c34108 	sbcgt	r4, r3, #8, 2
     3d4:	0000000e 	andeq	r0, r0, lr
     3d8:	00000018 	andeq	r0, r0, r8, lsl r0
     3dc:	00000170 	andeq	r0, r0, r0, ror r1
     3e0:	00000000 	andeq	r0, r0, r0
     3e4:	00000020 	andeq	r0, r0, r0, lsr #32
     3e8:	8e040e41 	cdphi	14, 0, cr0, cr4, cr1, {2}
     3ec:	180e4101 	stmdane	lr, {r0, r8, lr}
     3f0:	00040e49 	andeq	r0, r4, r9, asr #28
     3f4:	00000018 	andeq	r0, r0, r8, lsl r0
     3f8:	00000170 	andeq	r0, r0, r0, ror r1
     3fc:	00000000 	andeq	r0, r0, r0
     400:	0000001c 	andeq	r0, r0, ip, lsl r0
     404:	8e040e41 	cdphi	14, 0, cr0, cr4, cr1, {2}
     408:	100e4101 	andne	r4, lr, r1, lsl #2
     40c:	00040e48 	andeq	r0, r4, r8, asr #28
     410:	00000028 	andeq	r0, r0, r8, lsr #32
     414:	00000170 	andeq	r0, r0, r0, ror r1
     418:	00000000 	andeq	r0, r0, r0
     41c:	00000030 	andeq	r0, r0, r0, lsr r0
     420:	82080e41 	andhi	r0, r8, #1040	; 0x410
     424:	41018302 	tstmi	r1, r2, lsl #6
     428:	038e0c0e 	orreq	r0, lr, #3584	; 0xe00
     42c:	4e280e41 	cdpmi	14, 2, cr0, cr8, cr1, {2}
     430:	ce420c0e 	cdpgt	12, 4, cr0, cr2, cr14, {0}
     434:	c341080e 	movtgt	r0, #6158	; 0x180e
     438:	00000ec2 	andeq	r0, r0, r2, asr #29
     43c:	0000000c 	andeq	r0, r0, ip
     440:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     444:	7c020001 	stcvc	0, cr0, [r2], {1}
     448:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     44c:	0000000c 	andeq	r0, r0, ip
     450:	0000043c 	andeq	r0, r0, ip, lsr r4
     454:	10001b38 	andne	r1, r0, r8, lsr fp
     458:	00000014 	andeq	r0, r0, r4, lsl r0
     45c:	0000000c 	andeq	r0, r0, ip
     460:	0000043c 	andeq	r0, r0, ip, lsr r4
     464:	00000000 	andeq	r0, r0, r0
     468:	00000014 	andeq	r0, r0, r4, lsl r0
     46c:	00000018 	andeq	r0, r0, r8, lsl r0
     470:	0000043c 	andeq	r0, r0, ip, lsr r4
     474:	10001b4c 	andne	r1, r0, ip, asr #22
     478:	0000001e 	andeq	r0, r0, lr, lsl r0
     47c:	83100e41 	tsthi	r0, #1040	; 0x410
     480:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     484:	00018e02 	andeq	r8, r1, r2, lsl #28
     488:	0000000c 	andeq	r0, r0, ip
     48c:	0000043c 	andeq	r0, r0, ip, lsr r4
     490:	10001b6c 	andne	r1, r0, ip, ror #22
     494:	00000024 	andeq	r0, r0, r4, lsr #32
     498:	00000014 	andeq	r0, r0, r4, lsl r0
     49c:	0000043c 	andeq	r0, r0, ip, lsr r4
     4a0:	00000000 	andeq	r0, r0, r0
     4a4:	00000008 	andeq	r0, r0, r8
     4a8:	83080e41 	movwhi	r0, #36417	; 0x8e41
     4ac:	00018e02 	andeq	r8, r1, r2, lsl #28
     4b0:	00000018 	andeq	r0, r0, r8, lsl r0
     4b4:	0000043c 	andeq	r0, r0, ip, lsr r4
     4b8:	00000000 	andeq	r0, r0, r0
     4bc:	00000020 	andeq	r0, r0, r0, lsr #32
     4c0:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
     4c4:	86038504 	strhi	r8, [r3], -r4, lsl #10
     4c8:	00018e02 	andeq	r8, r1, r2, lsl #28
     4cc:	0000000c 	andeq	r0, r0, ip
     4d0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     4d4:	7c020001 	stcvc	0, cr0, [r2], {1}
     4d8:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     4dc:	00000014 	andeq	r0, r0, r4, lsl r0
     4e0:	000004cc 	andeq	r0, r0, ip, asr #9
     4e4:	10001b90 	mulne	r0, r0, fp
     4e8:	0000002c 	andeq	r0, r0, ip, lsr #32
     4ec:	54080e41 	strpl	r0, [r8], #-3649	; 0xfffff1bf
     4f0:	0000000e 	andeq	r0, r0, lr
     4f4:	0000000c 	andeq	r0, r0, ip
     4f8:	000004cc 	andeq	r0, r0, ip, asr #9
     4fc:	10001bbc 			; <UNDEFINED> instruction: 0x10001bbc
     500:	00000036 	andeq	r0, r0, r6, lsr r0
     504:	00000020 	andeq	r0, r0, r0, lsr #32
     508:	000004cc 	andeq	r0, r0, ip, asr #9
     50c:	10001bf4 	strdne	r1, [r0], -r4
     510:	0000007c 	andeq	r0, r0, ip, ror r0
     514:	83200e42 			; <UNDEFINED> instruction: 0x83200e42
     518:	85078408 	strhi	r8, [r7, #-1032]	; 0xfffffbf8
     51c:	87058606 	strhi	r8, [r5, -r6, lsl #12]
     520:	89038804 	stmdbhi	r3, {r2, fp, pc}
     524:	00018e02 	andeq	r8, r1, r2, lsl #28
     528:	00000014 	andeq	r0, r0, r4, lsl r0
     52c:	000004cc 	andeq	r0, r0, ip, asr #9
     530:	10001c70 	andne	r1, r0, r0, ror ip
     534:	00000018 	andeq	r0, r0, r8, lsl r0
     538:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     53c:	00018e02 	andeq	r8, r1, r2, lsl #28
     540:	00000014 	andeq	r0, r0, r4, lsl r0
     544:	000004cc 	andeq	r0, r0, ip, asr #9
     548:	10001c88 	andne	r1, r0, r8, lsl #25
     54c:	00000008 	andeq	r0, r0, r8
     550:	83080e41 	movwhi	r0, #36417	; 0x8e41
     554:	00018e02 	andeq	r8, r1, r2, lsl #28
     558:	00000014 	andeq	r0, r0, r4, lsl r0
     55c:	000004cc 	andeq	r0, r0, ip, asr #9
     560:	10001c90 	mulne	r0, r0, ip
     564:	00000050 	andeq	r0, r0, r0, asr r0
     568:	83080e41 	movwhi	r0, #36417	; 0x8e41
     56c:	00018e02 	andeq	r8, r1, r2, lsl #28
     570:	0000001c 	andeq	r0, r0, ip, lsl r0
     574:	000004cc 	andeq	r0, r0, ip, asr #9
     578:	10001ce0 	andne	r1, r0, r0, ror #25
     57c:	000001ac 	andeq	r0, r0, ip, lsr #3
     580:	83180e41 	tsthi	r8, #1040	; 0x410
     584:	85058406 	strhi	r8, [r5, #-1030]	; 0xfffffbfa
     588:	87038604 	strhi	r8, [r3, -r4, lsl #12]
     58c:	00018e02 	andeq	r8, r1, r2, lsl #28
     590:	0000000c 	andeq	r0, r0, ip
     594:	000004cc 	andeq	r0, r0, ip, asr #9
     598:	10001e8c 	andne	r1, r0, ip, lsl #29
     59c:	00000006 	andeq	r0, r0, r6
     5a0:	0000000c 	andeq	r0, r0, ip
     5a4:	000004cc 	andeq	r0, r0, ip, asr #9
     5a8:	10001e94 	mulne	r0, r4, lr
     5ac:	00000008 	andeq	r0, r0, r8
     5b0:	0000000c 	andeq	r0, r0, ip
     5b4:	000004cc 	andeq	r0, r0, ip, asr #9
     5b8:	00000000 	andeq	r0, r0, r0
     5bc:	00000008 	andeq	r0, r0, r8
     5c0:	0000000c 	andeq	r0, r0, ip
     5c4:	000004cc 	andeq	r0, r0, ip, asr #9
     5c8:	00000000 	andeq	r0, r0, r0
     5cc:	00000008 	andeq	r0, r0, r8
     5d0:	0000000c 	andeq	r0, r0, ip
     5d4:	000004cc 	andeq	r0, r0, ip, asr #9
     5d8:	00000000 	andeq	r0, r0, r0
     5dc:	00000014 	andeq	r0, r0, r4, lsl r0
     5e0:	0000000c 	andeq	r0, r0, ip
     5e4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     5e8:	7c020001 	stcvc	0, cr0, [r2], {1}
     5ec:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     5f0:	00000014 	andeq	r0, r0, r4, lsl r0
     5f4:	000005e0 	andeq	r0, r0, r0, ror #11
     5f8:	10001e9c 	mulne	r0, ip, lr
     5fc:	000000fc 	strdeq	r0, [r0], -ip
     600:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     604:	00018e02 	andeq	r8, r1, r2, lsl #28
     608:	0000000c 	andeq	r0, r0, ip
     60c:	000005e0 	andeq	r0, r0, r0, ror #11
     610:	10001f98 	mulne	r0, r8, pc	; <UNPREDICTABLE>
     614:	0000000e 	andeq	r0, r0, lr
     618:	00000014 	andeq	r0, r0, r4, lsl r0
     61c:	000005e0 	andeq	r0, r0, r0, ror #11
     620:	00000000 	andeq	r0, r0, r0
     624:	00000020 	andeq	r0, r0, r0, lsr #32
     628:	83080e41 	movwhi	r0, #36417	; 0x8e41
     62c:	00018e02 	andeq	r8, r1, r2, lsl #28
     630:	0000001c 	andeq	r0, r0, ip, lsl r0
     634:	000005e0 	andeq	r0, r0, r0, ror #11
     638:	10001fa8 	andne	r1, r0, r8, lsr #31
     63c:	0000004c 	andeq	r0, r0, ip, asr #32
     640:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
     644:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
     648:	180e4101 	stmdane	lr, {r0, r8, lr}
     64c:	000c0e5f 	andeq	r0, ip, pc, asr lr
     650:	0000000c 	andeq	r0, r0, ip
     654:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     658:	7c020001 	stcvc	0, cr0, [r2], {1}
     65c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     660:	0000000c 	andeq	r0, r0, ip
     664:	00000650 	andeq	r0, r0, r0, asr r6
     668:	10001ff4 	strdne	r1, [r0], -r4
     66c:	0000001a 	andeq	r0, r0, sl, lsl r0
     670:	0000000c 	andeq	r0, r0, ip
     674:	00000650 	andeq	r0, r0, r0, asr r6
     678:	1000200e 	andne	r2, r0, lr
     67c:	00000006 	andeq	r0, r0, r6
     680:	0000000c 	andeq	r0, r0, ip
     684:	00000650 	andeq	r0, r0, r0, asr r6
     688:	00000000 	andeq	r0, r0, r0
     68c:	00000016 	andeq	r0, r0, r6, lsl r0
     690:	0000001c 	andeq	r0, r0, ip, lsl r0
     694:	00000650 	andeq	r0, r0, r0, asr r6
     698:	10002014 	andne	r2, r0, r4, lsl r0
     69c:	00000032 	andeq	r0, r0, r2, lsr r0
     6a0:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     6a4:	55018502 	strpl	r8, [r1, #-1282]	; 0xfffffafe
     6a8:	0ec4c50a 	cdpeq	5, 12, cr12, cr4, cr10, {0}
     6ac:	000b4100 	andeq	r4, fp, r0, lsl #2
     6b0:	0000000c 	andeq	r0, r0, ip
     6b4:	00000650 	andeq	r0, r0, r0, asr r6
     6b8:	10002046 	andne	r2, r0, r6, asr #32
     6bc:	00000024 	andeq	r0, r0, r4, lsr #32
     6c0:	0000000c 	andeq	r0, r0, ip
     6c4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     6c8:	7c020001 	stcvc	0, cr0, [r2], {1}
     6cc:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     6d0:	0000000c 	andeq	r0, r0, ip
     6d4:	000006c0 	andeq	r0, r0, r0, asr #13
     6d8:	00000000 	andeq	r0, r0, r0
     6dc:	00000010 	andeq	r0, r0, r0, lsl r0
     6e0:	00000014 	andeq	r0, r0, r4, lsl r0
     6e4:	000006c0 	andeq	r0, r0, r0, asr #13
     6e8:	00000000 	andeq	r0, r0, r0
     6ec:	0000001e 	andeq	r0, r0, lr, lsl r0
     6f0:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     6f4:	00018e02 	andeq	r8, r1, r2, lsl #28
     6f8:	00000014 	andeq	r0, r0, r4, lsl r0
     6fc:	000006c0 	andeq	r0, r0, r0, asr #13
     700:	1000206a 	andne	r2, r0, sl, rrx
     704:	0000001a 	andeq	r0, r0, sl, lsl r0
     708:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     70c:	00018e02 	andeq	r8, r1, r2, lsl #28
     710:	00000018 	andeq	r0, r0, r8, lsl r0
     714:	000006c0 	andeq	r0, r0, r0, asr #13
     718:	10002084 	andne	r2, r0, r4, lsl #1
     71c:	00000076 	andeq	r0, r0, r6, ror r0
     720:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
     724:	86038504 	strhi	r8, [r3], -r4, lsl #10
     728:	00018e02 	andeq	r8, r1, r2, lsl #28
     72c:	00000018 	andeq	r0, r0, r8, lsl r0
     730:	000006c0 	andeq	r0, r0, r0, asr #13
     734:	100020fa 	strdne	r2, [r0], -sl
     738:	00000024 	andeq	r0, r0, r4, lsr #32
     73c:	84080e44 	strhi	r0, [r8], #-3652	; 0xfffff1bc
     740:	4d018e02 	stcmi	14, cr8, [r1, #-8]
     744:	cec4000e 	cdpgt	0, 12, cr0, cr4, cr14, {0}
     748:	00000020 	andeq	r0, r0, r0, lsr #32
     74c:	000006c0 	andeq	r0, r0, r0, asr #13
     750:	1000211e 	andne	r2, r0, lr, lsl r1
     754:	00000058 	andeq	r0, r0, r8, asr r0
     758:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
     75c:	86038504 	strhi	r8, [r3], -r4, lsl #10
     760:	41018e02 	tstmi	r1, r2, lsl #28
     764:	0a49180e 	beq	12467a4 <__RAM_SIZE+0x11467a4>
     768:	0b41100e 	bleq	10447a8 <__RAM_SIZE+0xf447a8>
     76c:	00000018 	andeq	r0, r0, r8, lsl r0
     770:	000006c0 	andeq	r0, r0, r0, asr #13
     774:	10002176 	andne	r2, r0, r6, ror r1
     778:	00000082 	andeq	r0, r0, r2, lsl #1
     77c:	83100e41 	tsthi	r0, #1040	; 0x410
     780:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     784:	00018e02 	andeq	r8, r1, r2, lsl #28
     788:	0000002c 	andeq	r0, r0, ip, lsr #32
     78c:	000006c0 	andeq	r0, r0, r0, asr #13
     790:	100021f8 	strdne	r2, [r0], -r8
     794:	00000086 	andeq	r0, r0, r6, lsl #1
     798:	83100e43 	tsthi	r0, #1072	; 0x430
     79c:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     7a0:	7c018e02 	stcvc	14, cr8, [r1], {2}
     7a4:	c4c3000e 	strbgt	r0, [r3], #14
     7a8:	0e42cec5 	cdpeq	14, 4, cr12, cr2, cr5, {6}
     7ac:	84048310 	strhi	r8, [r4], #-784	; 0xfffffcf0
     7b0:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
     7b4:	00000001 	andeq	r0, r0, r1
     7b8:	00000014 	andeq	r0, r0, r4, lsl r0
     7bc:	000006c0 	andeq	r0, r0, r0, asr #13
     7c0:	1000227e 	andne	r2, r0, lr, ror r2
     7c4:	00000020 	andeq	r0, r0, r0, lsr #32
     7c8:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     7cc:	00018e02 	andeq	r8, r1, r2, lsl #28
     7d0:	00000028 	andeq	r0, r0, r8, lsr #32
     7d4:	000006c0 	andeq	r0, r0, r0, asr #13
     7d8:	1000229e 	mulne	r0, lr, r2
     7dc:	0000003e 	andeq	r0, r0, lr, lsr r0
     7e0:	84080e42 	strhi	r0, [r8], #-3650	; 0xfffff1be
     7e4:	41018e02 	tstmi	r1, r2, lsl #28
     7e8:	0a51100e 	beq	1444828 <__RAM_SIZE+0x1344828>
     7ec:	0b41080e 	bleq	104282c <__RAM_SIZE+0xf4282c>
     7f0:	c4000e44 	strgt	r0, [r0], #-3652	; 0xfffff1bc
     7f4:	100e42ce 	andne	r4, lr, lr, asr #5
     7f8:	018e0284 	orreq	r0, lr, r4, lsl #5
     7fc:	0000000c 	andeq	r0, r0, ip
     800:	000006c0 	andeq	r0, r0, r0, asr #13
     804:	00000000 	andeq	r0, r0, r0
     808:	00000018 	andeq	r0, r0, r8, lsl r0
     80c:	00000024 	andeq	r0, r0, r4, lsr #32
     810:	000006c0 	andeq	r0, r0, r0, asr #13
     814:	00000000 	andeq	r0, r0, r0
     818:	00000056 	andeq	r0, r0, r6, asr r0
     81c:	84140e41 	ldrhi	r0, [r4], #-3649	; 0xfffff1bf
     820:	86048505 	strhi	r8, [r4], -r5, lsl #10
     824:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
     828:	200e4101 	andcs	r4, lr, r1, lsl #2
     82c:	140e0a64 	strne	r0, [lr], #-2660	; 0xfffff59c
     830:	00000b41 	andeq	r0, r0, r1, asr #22
     834:	00000028 	andeq	r0, r0, r8, lsr #32
     838:	000006c0 	andeq	r0, r0, r0, asr #13
     83c:	00000000 	andeq	r0, r0, r0
     840:	0000002a 	andeq	r0, r0, sl, lsr #32
     844:	84080e42 	strhi	r0, [r8], #-3650	; 0xfffff1be
     848:	41018e02 	tstmi	r1, r2, lsl #28
     84c:	0e4d100e 	cdpeq	0, 4, cr1, cr13, cr14, {0}
     850:	42cec400 	sbcmi	ip, lr, #0, 8
     854:	0284100e 	addeq	r1, r4, #14
     858:	0e42018e 	dvfeqd	f0, f2, #0.5
     85c:	00000008 	andeq	r0, r0, r8
     860:	00000020 	andeq	r0, r0, r0, lsr #32
     864:	000006c0 	andeq	r0, r0, r0, asr #13
     868:	00000000 	andeq	r0, r0, r0
     86c:	00000020 	andeq	r0, r0, r0, lsr #32
     870:	84080e42 	strhi	r0, [r8], #-3650	; 0xfffff1be
     874:	4a018e02 	bmi	64084 <__HEAP_SIZE+0x63084>
     878:	cec4000e 	cdpgt	0, 12, cr0, cr4, cr14, {0}
     87c:	84080e42 	strhi	r0, [r8], #-3650	; 0xfffff1be
     880:	00018e02 	andeq	r8, r1, r2, lsl #28
     884:	00000024 	andeq	r0, r0, r4, lsr #32
     888:	000006c0 	andeq	r0, r0, r0, asr #13
     88c:	00000000 	andeq	r0, r0, r0
     890:	0000010c 	andeq	r0, r0, ip, lsl #2
     894:	84140e41 	ldrhi	r0, [r4], #-3649	; 0xfffff1bf
     898:	86048505 	strhi	r8, [r4], -r5, lsl #10
     89c:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
     8a0:	280e4101 	stmdacs	lr, {r0, r8, lr}
     8a4:	140e0a59 	strne	r0, [lr], #-2649	; 0xfffff5a7
     8a8:	00000b41 	andeq	r0, r0, r1, asr #22
     8ac:	00000018 	andeq	r0, r0, r8, lsl r0
     8b0:	000006c0 	andeq	r0, r0, r0, asr #13
     8b4:	00000000 	andeq	r0, r0, r0
     8b8:	00000018 	andeq	r0, r0, r8, lsl r0
     8bc:	83080e42 	movwhi	r0, #36418	; 0x8e42
     8c0:	49018e02 	stmdbmi	r1, {r1, r9, sl, fp, pc}
     8c4:	cec3000e 	cdpgt	0, 12, cr0, cr3, cr14, {0}
     8c8:	00000014 	andeq	r0, r0, r4, lsl r0
     8cc:	000006c0 	andeq	r0, r0, r0, asr #13
     8d0:	00000000 	andeq	r0, r0, r0
     8d4:	00000016 	andeq	r0, r0, r6, lsl r0
     8d8:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     8dc:	00018e02 	andeq	r8, r1, r2, lsl #28
     8e0:	0000001c 	andeq	r0, r0, ip, lsl r0
     8e4:	000006c0 	andeq	r0, r0, r0, asr #13
     8e8:	00000000 	andeq	r0, r0, r0
     8ec:	0000001e 	andeq	r0, r0, lr, lsl r0
     8f0:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     8f4:	41018e02 	tstmi	r1, r2, lsl #28
     8f8:	0e4c100e 	cdpeq	0, 4, cr1, cr12, cr14, {0}
     8fc:	00000008 	andeq	r0, r0, r8
     900:	00000018 	andeq	r0, r0, r8, lsl r0
     904:	000006c0 	andeq	r0, r0, r0, asr #13
     908:	00000000 	andeq	r0, r0, r0
     90c:	0000002c 	andeq	r0, r0, ip, lsr #32
     910:	83100e41 	tsthi	r0, #1040	; 0x410
     914:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     918:	00018e02 	andeq	r8, r1, r2, lsl #28
     91c:	00000020 	andeq	r0, r0, r0, lsr #32
     920:	000006c0 	andeq	r0, r0, r0, asr #13
     924:	00000000 	andeq	r0, r0, r0
     928:	000000bc 	strheq	r0, [r0], -ip
     92c:	84200e42 	strthi	r0, [r0], #-3650	; 0xfffff1be
     930:	86078508 	strhi	r8, [r7], -r8, lsl #10
     934:	88058706 	stmdahi	r5, {r1, r2, r8, r9, sl, pc}
     938:	8a038904 	bhi	e2d50 <__HEAP_SIZE+0xe1d50>
     93c:	00018e02 	andeq	r8, r1, r2, lsl #28
     940:	0000001c 	andeq	r0, r0, ip, lsl r0
     944:	000006c0 	andeq	r0, r0, r0, asr #13
     948:	00000000 	andeq	r0, r0, r0
     94c:	00000086 	andeq	r0, r0, r6, lsl #1
     950:	83180e41 	tsthi	r8, #1040	; 0x410
     954:	85058406 	strhi	r8, [r5, #-1030]	; 0xfffffbfa
     958:	87038604 	strhi	r8, [r3, -r4, lsl #12]
     95c:	00018e02 	andeq	r8, r1, r2, lsl #28
     960:	00000024 	andeq	r0, r0, r4, lsr #32
     964:	000006c0 	andeq	r0, r0, r0, asr #13
     968:	100022dc 	ldrdne	r2, [r0], -ip
     96c:	000000f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
     970:	84140e41 	ldrhi	r0, [r4], #-3649	; 0xfffff1bf
     974:	86048505 	strhi	r8, [r4], -r5, lsl #10
     978:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
     97c:	280e4101 	stmdacs	lr, {r0, r8, lr}
     980:	140e0a51 	strne	r0, [lr], #-2641	; 0xfffff5af
     984:	00000b41 	andeq	r0, r0, r1, asr #22
     988:	00000020 	andeq	r0, r0, r0, lsr #32
     98c:	000006c0 	andeq	r0, r0, r0, asr #13
     990:	00000000 	andeq	r0, r0, r0
     994:	00000126 	andeq	r0, r0, r6, lsr #2
     998:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
     99c:	86038504 	strhi	r8, [r3], -r4, lsl #10
     9a0:	41018e02 	tstmi	r1, r2, lsl #28
     9a4:	0a4f200e 	beq	13c89e4 <__RAM_SIZE+0x12c89e4>
     9a8:	0b41100e 	bleq	10449e8 <__RAM_SIZE+0xf449e8>
     9ac:	00000018 	andeq	r0, r0, r8, lsl r0
     9b0:	000006c0 	andeq	r0, r0, r0, asr #13
     9b4:	00000000 	andeq	r0, r0, r0
     9b8:	0000002c 	andeq	r0, r0, ip, lsr #32
     9bc:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
     9c0:	86038504 	strhi	r8, [r3], -r4, lsl #10
     9c4:	00018e02 	andeq	r8, r1, r2, lsl #28
     9c8:	00000020 	andeq	r0, r0, r0, lsr #32
     9cc:	000006c0 	andeq	r0, r0, r0, asr #13
     9d0:	00000000 	andeq	r0, r0, r0
     9d4:	000000f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
     9d8:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
     9dc:	86038504 	strhi	r8, [r3], -r4, lsl #10
     9e0:	41018e02 	tstmi	r1, r2, lsl #28
     9e4:	0a51200e 	beq	1448a24 <__RAM_SIZE+0x1348a24>
     9e8:	0b41100e 	bleq	1044a28 <__RAM_SIZE+0xf44a28>
     9ec:	00000020 	andeq	r0, r0, r0, lsr #32
     9f0:	000006c0 	andeq	r0, r0, r0, asr #13
     9f4:	00000000 	andeq	r0, r0, r0
     9f8:	00000080 	andeq	r0, r0, r0, lsl #1
     9fc:	83200e42 			; <UNDEFINED> instruction: 0x83200e42
     a00:	85078408 	strhi	r8, [r7, #-1032]	; 0xfffffbf8
     a04:	87058606 	strhi	r8, [r5, -r6, lsl #12]
     a08:	89038804 	stmdbhi	r3, {r2, fp, pc}
     a0c:	00018e02 	andeq	r8, r1, r2, lsl #28
     a10:	0000001c 	andeq	r0, r0, ip, lsl r0
     a14:	000006c0 	andeq	r0, r0, r0, asr #13
     a18:	00000000 	andeq	r0, r0, r0
     a1c:	0000002c 	andeq	r0, r0, ip, lsr #32
     a20:	83180e41 	tsthi	r8, #1040	; 0x410
     a24:	85058406 	strhi	r8, [r5, #-1030]	; 0xfffffbfa
     a28:	87038604 	strhi	r8, [r3, -r4, lsl #12]
     a2c:	00018e02 	andeq	r8, r1, r2, lsl #28
     a30:	00000014 	andeq	r0, r0, r4, lsl r0
     a34:	000006c0 	andeq	r0, r0, r0, asr #13
     a38:	00000000 	andeq	r0, r0, r0
     a3c:	00000012 	andeq	r0, r0, r2, lsl r0
     a40:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     a44:	00018e02 	andeq	r8, r1, r2, lsl #28
     a48:	00000014 	andeq	r0, r0, r4, lsl r0
     a4c:	000006c0 	andeq	r0, r0, r0, asr #13
     a50:	00000000 	andeq	r0, r0, r0
     a54:	00000016 	andeq	r0, r0, r6, lsl r0
     a58:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     a5c:	00018e02 	andeq	r8, r1, r2, lsl #28
     a60:	0000000c 	andeq	r0, r0, ip
     a64:	000006c0 	andeq	r0, r0, r0, asr #13
     a68:	00000000 	andeq	r0, r0, r0
     a6c:	00000004 	andeq	r0, r0, r4
     a70:	00000014 	andeq	r0, r0, r4, lsl r0
     a74:	000006c0 	andeq	r0, r0, r0, asr #13
     a78:	00000000 	andeq	r0, r0, r0
     a7c:	00000010 	andeq	r0, r0, r0, lsl r0
     a80:	83080e41 	movwhi	r0, #36417	; 0x8e41
     a84:	00018e02 	andeq	r8, r1, r2, lsl #28
     a88:	0000000c 	andeq	r0, r0, ip
     a8c:	000006c0 	andeq	r0, r0, r0, asr #13
     a90:	00000000 	andeq	r0, r0, r0
     a94:	00000004 	andeq	r0, r0, r4
     a98:	0000000c 	andeq	r0, r0, ip
     a9c:	000006c0 	andeq	r0, r0, r0, asr #13
     aa0:	00000000 	andeq	r0, r0, r0
     aa4:	00000004 	andeq	r0, r0, r4
     aa8:	0000000c 	andeq	r0, r0, ip
     aac:	000006c0 	andeq	r0, r0, r0, asr #13
     ab0:	00000000 	andeq	r0, r0, r0
     ab4:	0000000c 	andeq	r0, r0, ip
     ab8:	0000000c 	andeq	r0, r0, ip
     abc:	000006c0 	andeq	r0, r0, r0, asr #13
     ac0:	00000000 	andeq	r0, r0, r0
     ac4:	00000010 	andeq	r0, r0, r0, lsl r0
     ac8:	00000018 	andeq	r0, r0, r8, lsl r0
     acc:	000006c0 	andeq	r0, r0, r0, asr #13
     ad0:	100023cc 	andne	r2, r0, ip, asr #7
     ad4:	00000052 	andeq	r0, r0, r2, asr r0
     ad8:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
     adc:	86038504 	strhi	r8, [r3], -r4, lsl #10
     ae0:	00018e02 	andeq	r8, r1, r2, lsl #28
     ae4:	00000014 	andeq	r0, r0, r4, lsl r0
     ae8:	000006c0 	andeq	r0, r0, r0, asr #13
     aec:	00000000 	andeq	r0, r0, r0
     af0:	0000000c 	andeq	r0, r0, ip
     af4:	83080e41 	movwhi	r0, #36417	; 0x8e41
     af8:	00018e02 	andeq	r8, r1, r2, lsl #28
     afc:	00000018 	andeq	r0, r0, r8, lsl r0
     b00:	000006c0 	andeq	r0, r0, r0, asr #13
     b04:	00000000 	andeq	r0, r0, r0
     b08:	00000026 	andeq	r0, r0, r6, lsr #32
     b0c:	83100e41 	tsthi	r0, #1040	; 0x410
     b10:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     b14:	00018e02 	andeq	r8, r1, r2, lsl #28
     b18:	00000014 	andeq	r0, r0, r4, lsl r0
     b1c:	000006c0 	andeq	r0, r0, r0, asr #13
     b20:	00000000 	andeq	r0, r0, r0
     b24:	00000026 	andeq	r0, r0, r6, lsr #32
     b28:	84080e46 	strhi	r0, [r8], #-3654	; 0xfffff1ba
     b2c:	00018e02 	andeq	r8, r1, r2, lsl #28
     b30:	00000018 	andeq	r0, r0, r8, lsl r0
     b34:	000006c0 	andeq	r0, r0, r0, asr #13
     b38:	00000000 	andeq	r0, r0, r0
     b3c:	00000018 	andeq	r0, r0, r8, lsl r0
     b40:	8e040e41 	cdphi	14, 0, cr0, cr4, cr1, {2}
     b44:	100e4101 	andne	r4, lr, r1, lsl #2
     b48:	00040e48 	andeq	r0, r4, r8, asr #28
     b4c:	00000018 	andeq	r0, r0, r8, lsl r0
     b50:	000006c0 	andeq	r0, r0, r0, asr #13
     b54:	00000000 	andeq	r0, r0, r0
     b58:	00000016 	andeq	r0, r0, r6, lsl r0
     b5c:	8e040e41 	cdphi	14, 0, cr0, cr4, cr1, {2}
     b60:	100e4101 	andne	r4, lr, r1, lsl #2
     b64:	00040e47 	andeq	r0, r4, r7, asr #28
     b68:	0000000c 	andeq	r0, r0, ip
     b6c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     b70:	7c020001 	stcvc	0, cr0, [r2], {1}
     b74:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     b78:	0000000c 	andeq	r0, r0, ip
     b7c:	00000b68 	andeq	r0, r0, r8, ror #22
     b80:	00000000 	andeq	r0, r0, r0
     b84:	00000044 	andeq	r0, r0, r4, asr #32
     b88:	0000000c 	andeq	r0, r0, ip
     b8c:	00000b68 	andeq	r0, r0, r8, ror #22
     b90:	10002420 	andne	r2, r0, r0, lsr #8
     b94:	00000040 	andeq	r0, r0, r0, asr #32
     b98:	00000018 	andeq	r0, r0, r8, lsl r0
     b9c:	00000b68 	andeq	r0, r0, r8, ror #22
     ba0:	00000000 	andeq	r0, r0, r0
     ba4:	0000003e 	andeq	r0, r0, lr, lsr r0
     ba8:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
     bac:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
     bb0:	00000001 	andeq	r0, r0, r1
     bb4:	0000000c 	andeq	r0, r0, ip
     bb8:	00000b68 	andeq	r0, r0, r8, ror #22
     bbc:	00000000 	andeq	r0, r0, r0
     bc0:	00000012 	andeq	r0, r0, r2, lsl r0
     bc4:	0000000c 	andeq	r0, r0, ip
     bc8:	00000b68 	andeq	r0, r0, r8, ror #22
     bcc:	10002460 	andne	r2, r0, r0, ror #8
     bd0:	00000028 	andeq	r0, r0, r8, lsr #32
     bd4:	00000020 	andeq	r0, r0, r0, lsr #32
     bd8:	00000b68 	andeq	r0, r0, r8, ror #22
     bdc:	10002488 	andne	r2, r0, r8, lsl #9
     be0:	00000096 	muleq	r0, r6, r0
     be4:	84200e42 	strthi	r0, [r0], #-3650	; 0xfffff1be
     be8:	86078508 	strhi	r8, [r7], -r8, lsl #10
     bec:	88058706 	stmdahi	r5, {r1, r2, r8, r9, sl, pc}
     bf0:	8a038904 	bhi	e3008 <__HEAP_SIZE+0xe2008>
     bf4:	00018e02 	andeq	r8, r1, r2, lsl #28
     bf8:	00000028 	andeq	r0, r0, r8, lsr #32
     bfc:	00000b68 	andeq	r0, r0, r8, ror #22
     c00:	1000251e 	andne	r2, r0, lr, lsl r5
     c04:	00000052 	andeq	r0, r0, r2, asr r0
     c08:	841c0e42 	ldrhi	r0, [ip], #-3650	; 0xfffff1be
     c0c:	86068507 	strhi	r8, [r6], -r7, lsl #10
     c10:	88048705 	stmdahi	r4, {r0, r2, r8, r9, sl, pc}
     c14:	8e028903 	vmlahi.f16	s16, s4, s6	; <UNPREDICTABLE>
     c18:	300e4101 	andcc	r4, lr, r1, lsl #2
     c1c:	1c0e0a60 			; <UNDEFINED> instruction: 0x1c0e0a60
     c20:	00000b42 	andeq	r0, r0, r2, asr #22
     c24:	00000018 	andeq	r0, r0, r8, lsl r0
     c28:	00000b68 	andeq	r0, r0, r8, ror #22
     c2c:	10002570 	andne	r2, r0, r0, ror r5
     c30:	00000068 	andeq	r0, r0, r8, rrx
     c34:	83100e41 	tsthi	r0, #1040	; 0x410
     c38:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     c3c:	00018e02 	andeq	r8, r1, r2, lsl #28
     c40:	00000014 	andeq	r0, r0, r4, lsl r0
     c44:	00000b68 	andeq	r0, r0, r8, ror #22
     c48:	100025d8 	ldrdne	r2, [r0], -r8
     c4c:	000000bc 	strheq	r0, [r0], -ip
     c50:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     c54:	00018e02 	andeq	r8, r1, r2, lsl #28
     c58:	00000028 	andeq	r0, r0, r8, lsr #32
     c5c:	00000b68 	andeq	r0, r0, r8, ror #22
     c60:	10002694 	mulne	r0, r4, r6
     c64:	00000062 	andeq	r0, r0, r2, rrx
     c68:	841c0e42 	ldrhi	r0, [ip], #-3650	; 0xfffff1be
     c6c:	86068507 	strhi	r8, [r6], -r7, lsl #10
     c70:	88048705 	stmdahi	r4, {r0, r2, r8, r9, sl, pc}
     c74:	8e028903 	vmlahi.f16	s16, s4, s6	; <UNPREDICTABLE>
     c78:	300e4101 	andcc	r4, lr, r1, lsl #2
     c7c:	1c0e0a66 			; <UNDEFINED> instruction: 0x1c0e0a66
     c80:	00000b42 	andeq	r0, r0, r2, asr #22
     c84:	00000014 	andeq	r0, r0, r4, lsl r0
     c88:	00000b68 	andeq	r0, r0, r8, ror #22
     c8c:	100026f6 	strdne	r2, [r0], -r6
     c90:	00000024 	andeq	r0, r0, r4, lsr #32
     c94:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     c98:	00018e02 	andeq	r8, r1, r2, lsl #28
     c9c:	00000018 	andeq	r0, r0, r8, lsl r0
     ca0:	00000b68 	andeq	r0, r0, r8, ror #22
     ca4:	1000271c 	andne	r2, r0, ip, lsl r7
     ca8:	0000004c 	andeq	r0, r0, ip, asr #32
     cac:	84080e44 	strhi	r0, [r8], #-3652	; 0xfffff1bc
     cb0:	5a018e02 	bpl	644c0 <__HEAP_SIZE+0x634c0>
     cb4:	cec4000e 	cdpgt	0, 12, cr0, cr4, cr14, {0}
     cb8:	0000001c 	andeq	r0, r0, ip, lsl r0
     cbc:	00000b68 	andeq	r0, r0, r8, ror #22
     cc0:	10002768 	andne	r2, r0, r8, ror #14
     cc4:	000000a8 	andeq	r0, r0, r8, lsr #1
     cc8:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
     ccc:	86058506 	strhi	r8, [r5], -r6, lsl #10
     cd0:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
     cd4:	00018e02 	andeq	r8, r1, r2, lsl #28
     cd8:	0000001c 	andeq	r0, r0, ip, lsl r0
     cdc:	00000b68 	andeq	r0, r0, r8, ror #22
     ce0:	10002810 	andne	r2, r0, r0, lsl r8
     ce4:	00000028 	andeq	r0, r0, r8, lsr #32
     ce8:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     cec:	41018e02 	tstmi	r1, r2, lsl #28
     cf0:	0e51200e 	cdpeq	0, 5, cr2, cr1, cr14, {0}
     cf4:	00000008 	andeq	r0, r0, r8
     cf8:	0000001c 	andeq	r0, r0, ip, lsl r0
     cfc:	00000b68 	andeq	r0, r0, r8, ror #22
     d00:	10002838 	andne	r2, r0, r8, lsr r8
     d04:	00000022 	andeq	r0, r0, r2, lsr #32
     d08:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     d0c:	41018e02 	tstmi	r1, r2, lsl #28
     d10:	0a4b100e 	beq	12c4d50 <__RAM_SIZE+0x11c4d50>
     d14:	0b41080e 	bleq	1042d54 <__RAM_SIZE+0xf42d54>
     d18:	00000018 	andeq	r0, r0, r8, lsl r0
     d1c:	00000b68 	andeq	r0, r0, r8, ror #22
     d20:	00000000 	andeq	r0, r0, r0
     d24:	0000009c 	muleq	r0, ip, r0
     d28:	83100e41 	tsthi	r0, #1040	; 0x410
     d2c:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     d30:	00018e02 	andeq	r8, r1, r2, lsl #28
     d34:	00000034 	andeq	r0, r0, r4, lsr r0
     d38:	00000b68 	andeq	r0, r0, r8, ror #22
     d3c:	00000000 	andeq	r0, r0, r0
     d40:	0000009c 	muleq	r0, ip, r0
     d44:	84180e46 	ldrhi	r0, [r8], #-3654	; 0xfffff1ba
     d48:	86058506 	strhi	r8, [r5], -r6, lsl #10
     d4c:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
     d50:	6f018e02 	svcvs	0x00018e02
     d54:	c5c4000e 	strbgt	r0, [r4, #14]
     d58:	cec8c7c6 	cdpgt	7, 12, cr12, cr8, cr6, {6}
     d5c:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
     d60:	86058506 	strhi	r8, [r5], -r6, lsl #10
     d64:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
     d68:	00018e02 	andeq	r8, r1, r2, lsl #28
     d6c:	00000014 	andeq	r0, r0, r4, lsl r0
     d70:	00000b68 	andeq	r0, r0, r8, ror #22
     d74:	00000000 	andeq	r0, r0, r0
     d78:	00000020 	andeq	r0, r0, r0, lsr #32
     d7c:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     d80:	00018e02 	andeq	r8, r1, r2, lsl #28
     d84:	00000014 	andeq	r0, r0, r4, lsl r0
     d88:	00000b68 	andeq	r0, r0, r8, ror #22
     d8c:	00000000 	andeq	r0, r0, r0
     d90:	00000020 	andeq	r0, r0, r0, lsr #32
     d94:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     d98:	00018e02 	andeq	r8, r1, r2, lsl #28
     d9c:	00000014 	andeq	r0, r0, r4, lsl r0
     da0:	00000b68 	andeq	r0, r0, r8, ror #22
     da4:	00000000 	andeq	r0, r0, r0
     da8:	00000020 	andeq	r0, r0, r0, lsr #32
     dac:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     db0:	00018e02 	andeq	r8, r1, r2, lsl #28
     db4:	00000014 	andeq	r0, r0, r4, lsl r0
     db8:	00000b68 	andeq	r0, r0, r8, ror #22
     dbc:	00000000 	andeq	r0, r0, r0
     dc0:	00000020 	andeq	r0, r0, r0, lsr #32
     dc4:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     dc8:	00018e02 	andeq	r8, r1, r2, lsl #28
     dcc:	00000018 	andeq	r0, r0, r8, lsl r0
     dd0:	00000b68 	andeq	r0, r0, r8, ror #22
     dd4:	00000000 	andeq	r0, r0, r0
     dd8:	000000d8 	ldrdeq	r0, [r0], -r8
     ddc:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
     de0:	86038504 	strhi	r8, [r3], -r4, lsl #10
     de4:	00018e02 	andeq	r8, r1, r2, lsl #28
     de8:	00000018 	andeq	r0, r0, r8, lsl r0
     dec:	00000b68 	andeq	r0, r0, r8, ror #22
     df0:	00000000 	andeq	r0, r0, r0
     df4:	00000084 	andeq	r0, r0, r4, lsl #1
     df8:	83100e41 	tsthi	r0, #1040	; 0x410
     dfc:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     e00:	00018e02 	andeq	r8, r1, r2, lsl #28
     e04:	0000001c 	andeq	r0, r0, ip, lsl r0
     e08:	00000b68 	andeq	r0, r0, r8, ror #22
     e0c:	00000000 	andeq	r0, r0, r0
     e10:	000000ac 	andeq	r0, r0, ip, lsr #1
     e14:	83180e41 	tsthi	r8, #1040	; 0x410
     e18:	85058406 	strhi	r8, [r5, #-1030]	; 0xfffffbfa
     e1c:	87038604 	strhi	r8, [r3, -r4, lsl #12]
     e20:	00018e02 	andeq	r8, r1, r2, lsl #28
     e24:	00000014 	andeq	r0, r0, r4, lsl r0
     e28:	00000b68 	andeq	r0, r0, r8, ror #22
     e2c:	00000000 	andeq	r0, r0, r0
     e30:	0000003c 	andeq	r0, r0, ip, lsr r0
     e34:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     e38:	00018e02 	andeq	r8, r1, r2, lsl #28
     e3c:	0000000c 	andeq	r0, r0, ip
     e40:	00000b68 	andeq	r0, r0, r8, ror #22
     e44:	1000285c 	andne	r2, r0, ip, asr r8
     e48:	00000010 	andeq	r0, r0, r0, lsl r0
     e4c:	0000000c 	andeq	r0, r0, ip
     e50:	00000b68 	andeq	r0, r0, r8, ror #22
     e54:	1000286c 	andne	r2, r0, ip, ror #16
     e58:	0000000c 	andeq	r0, r0, ip
     e5c:	0000000c 	andeq	r0, r0, ip
     e60:	00000b68 	andeq	r0, r0, r8, ror #22
     e64:	00000000 	andeq	r0, r0, r0
     e68:	0000000c 	andeq	r0, r0, ip
     e6c:	0000000c 	andeq	r0, r0, ip
     e70:	00000b68 	andeq	r0, r0, r8, ror #22
     e74:	10002878 	andne	r2, r0, r8, ror r8
     e78:	0000000c 	andeq	r0, r0, ip
     e7c:	0000000c 	andeq	r0, r0, ip
     e80:	00000b68 	andeq	r0, r0, r8, ror #22
     e84:	00000000 	andeq	r0, r0, r0
     e88:	00000014 	andeq	r0, r0, r4, lsl r0
     e8c:	0000000c 	andeq	r0, r0, ip
     e90:	00000b68 	andeq	r0, r0, r8, ror #22
     e94:	00000000 	andeq	r0, r0, r0
     e98:	00000034 	andeq	r0, r0, r4, lsr r0
     e9c:	0000000c 	andeq	r0, r0, ip
     ea0:	00000b68 	andeq	r0, r0, r8, ror #22
     ea4:	00000000 	andeq	r0, r0, r0
     ea8:	0000000c 	andeq	r0, r0, ip
     eac:	0000000c 	andeq	r0, r0, ip
     eb0:	00000b68 	andeq	r0, r0, r8, ror #22
     eb4:	00000000 	andeq	r0, r0, r0
     eb8:	0000000c 	andeq	r0, r0, ip
     ebc:	00000014 	andeq	r0, r0, r4, lsl r0
     ec0:	00000b68 	andeq	r0, r0, r8, ror #22
     ec4:	10002884 	andne	r2, r0, r4, lsl #17
     ec8:	0000003c 	andeq	r0, r0, ip, lsr r0
     ecc:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     ed0:	00018e02 	andeq	r8, r1, r2, lsl #28
     ed4:	0000002c 	andeq	r0, r0, ip, lsr #32
     ed8:	00000b68 	andeq	r0, r0, r8, ror #22
     edc:	100028c0 	andne	r2, r0, r0, asr #17
     ee0:	00000160 	andeq	r0, r0, r0, ror #2
     ee4:	84100e46 	ldrhi	r0, [r0], #-3654	; 0xfffff1ba
     ee8:	86038504 	strhi	r8, [r3], -r4, lsl #10
     eec:	02018e02 	andeq	r8, r1, #2, 28
     ef0:	c4000e8c 	strgt	r0, [r0], #-3724	; 0xfffff174
     ef4:	46cec6c5 	strbmi	ip, [lr], r5, asr #13
     ef8:	0484100e 	streq	r1, [r4], #14
     efc:	02860385 	addeq	r0, r6, #335544322	; 0x14000002
     f00:	0000018e 	andeq	r0, r0, lr, lsl #3
     f04:	00000014 	andeq	r0, r0, r4, lsl r0
     f08:	00000b68 	andeq	r0, r0, r8, ror #22
     f0c:	10002a20 	andne	r2, r0, r0, lsr #20
     f10:	00000130 	andeq	r0, r0, r0, lsr r1
     f14:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     f18:	00018e02 	andeq	r8, r1, r2, lsl #28
     f1c:	00000018 	andeq	r0, r0, r8, lsl r0
     f20:	00000b68 	andeq	r0, r0, r8, ror #22
     f24:	00000000 	andeq	r0, r0, r0
     f28:	0000005c 	andeq	r0, r0, ip, asr r0
     f2c:	83100e41 	tsthi	r0, #1040	; 0x410
     f30:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     f34:	00018e02 	andeq	r8, r1, r2, lsl #28
     f38:	00000014 	andeq	r0, r0, r4, lsl r0
     f3c:	00000b68 	andeq	r0, r0, r8, ror #22
     f40:	10002b50 	andne	r2, r0, r0, asr fp
     f44:	0000001e 	andeq	r0, r0, lr, lsl r0
     f48:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     f4c:	00018e02 	andeq	r8, r1, r2, lsl #28
     f50:	00000014 	andeq	r0, r0, r4, lsl r0
     f54:	00000b68 	andeq	r0, r0, r8, ror #22
     f58:	10002b70 	andne	r2, r0, r0, ror fp
     f5c:	00000038 	andeq	r0, r0, r8, lsr r0
     f60:	83080e41 	movwhi	r0, #36417	; 0x8e41
     f64:	00018e02 	andeq	r8, r1, r2, lsl #28
     f68:	00000018 	andeq	r0, r0, r8, lsl r0
     f6c:	00000b68 	andeq	r0, r0, r8, ror #22
     f70:	00000000 	andeq	r0, r0, r0
     f74:	0000007c 	andeq	r0, r0, ip, ror r0
     f78:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
     f7c:	86038504 	strhi	r8, [r3], -r4, lsl #10
     f80:	00018e02 	andeq	r8, r1, r2, lsl #28
     f84:	00000014 	andeq	r0, r0, r4, lsl r0
     f88:	00000b68 	andeq	r0, r0, r8, ror #22
     f8c:	00000000 	andeq	r0, r0, r0
     f90:	00000024 	andeq	r0, r0, r4, lsr #32
     f94:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     f98:	00018e02 	andeq	r8, r1, r2, lsl #28
     f9c:	00000018 	andeq	r0, r0, r8, lsl r0
     fa0:	00000b68 	andeq	r0, r0, r8, ror #22
     fa4:	00000000 	andeq	r0, r0, r0
     fa8:	000000a4 	andeq	r0, r0, r4, lsr #1
     fac:	83100e41 	tsthi	r0, #1040	; 0x410
     fb0:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     fb4:	00018e02 	andeq	r8, r1, r2, lsl #28
     fb8:	00000018 	andeq	r0, r0, r8, lsl r0
     fbc:	00000b68 	andeq	r0, r0, r8, ror #22
     fc0:	00000000 	andeq	r0, r0, r0
     fc4:	00000020 	andeq	r0, r0, r0, lsr #32
     fc8:	83100e41 	tsthi	r0, #1040	; 0x410
     fcc:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     fd0:	00018e02 	andeq	r8, r1, r2, lsl #28
     fd4:	00000014 	andeq	r0, r0, r4, lsl r0
     fd8:	00000b68 	andeq	r0, r0, r8, ror #22
     fdc:	00000000 	andeq	r0, r0, r0
     fe0:	00000020 	andeq	r0, r0, r0, lsr #32
     fe4:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     fe8:	00018e02 	andeq	r8, r1, r2, lsl #28
     fec:	00000014 	andeq	r0, r0, r4, lsl r0
     ff0:	00000b68 	andeq	r0, r0, r8, ror #22
     ff4:	00000000 	andeq	r0, r0, r0
     ff8:	00000020 	andeq	r0, r0, r0, lsr #32
     ffc:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    1000:	00018e02 	andeq	r8, r1, r2, lsl #28
    1004:	00000014 	andeq	r0, r0, r4, lsl r0
    1008:	00000b68 	andeq	r0, r0, r8, ror #22
    100c:	00000000 	andeq	r0, r0, r0
    1010:	00000020 	andeq	r0, r0, r0, lsr #32
    1014:	83080e41 	movwhi	r0, #36417	; 0x8e41
    1018:	00018e02 	andeq	r8, r1, r2, lsl #28
    101c:	0000000c 	andeq	r0, r0, ip
    1020:	00000b68 	andeq	r0, r0, r8, ror #22
    1024:	10002ba8 	andne	r2, r0, r8, lsr #23
    1028:	00000084 	andeq	r0, r0, r4, lsl #1
    102c:	00000018 	andeq	r0, r0, r8, lsl r0
    1030:	00000b68 	andeq	r0, r0, r8, ror #22
    1034:	00000000 	andeq	r0, r0, r0
    1038:	000000a4 	andeq	r0, r0, r4, lsr #1
    103c:	83100e41 	tsthi	r0, #1040	; 0x410
    1040:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    1044:	00018e02 	andeq	r8, r1, r2, lsl #28
    1048:	00000014 	andeq	r0, r0, r4, lsl r0
    104c:	00000b68 	andeq	r0, r0, r8, ror #22
    1050:	10002c2c 	andne	r2, r0, ip, lsr #24
    1054:	0000001c 	andeq	r0, r0, ip, lsl r0
    1058:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    105c:	00018e02 	andeq	r8, r1, r2, lsl #28
    1060:	00000018 	andeq	r0, r0, r8, lsl r0
    1064:	00000b68 	andeq	r0, r0, r8, ror #22
    1068:	00000000 	andeq	r0, r0, r0
    106c:	00000040 	andeq	r0, r0, r0, asr #32
    1070:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    1074:	86038504 	strhi	r8, [r3], -r4, lsl #10
    1078:	00018e02 	andeq	r8, r1, r2, lsl #28
    107c:	00000018 	andeq	r0, r0, r8, lsl r0
    1080:	00000b68 	andeq	r0, r0, r8, ror #22
    1084:	10002c48 	andne	r2, r0, r8, asr #24
    1088:	0000003c 	andeq	r0, r0, ip, lsr r0
    108c:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    1090:	86038504 	strhi	r8, [r3], -r4, lsl #10
    1094:	00018e02 	andeq	r8, r1, r2, lsl #28
    1098:	00000014 	andeq	r0, r0, r4, lsl r0
    109c:	00000b68 	andeq	r0, r0, r8, ror #22
    10a0:	10002c84 	andne	r2, r0, r4, lsl #25
    10a4:	000000e4 	andeq	r0, r0, r4, ror #1
    10a8:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    10ac:	00018e02 	andeq	r8, r1, r2, lsl #28
    10b0:	00000014 	andeq	r0, r0, r4, lsl r0
    10b4:	00000b68 	andeq	r0, r0, r8, ror #22
    10b8:	00000000 	andeq	r0, r0, r0
    10bc:	000000b8 	strheq	r0, [r0], -r8
    10c0:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    10c4:	00018e02 	andeq	r8, r1, r2, lsl #28
    10c8:	00000014 	andeq	r0, r0, r4, lsl r0
    10cc:	00000b68 	andeq	r0, r0, r8, ror #22
    10d0:	00000000 	andeq	r0, r0, r0
    10d4:	00000024 	andeq	r0, r0, r4, lsr #32
    10d8:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    10dc:	00018e02 	andeq	r8, r1, r2, lsl #28
    10e0:	0000000c 	andeq	r0, r0, ip
    10e4:	00000b68 	andeq	r0, r0, r8, ror #22
    10e8:	10002d68 	andne	r2, r0, r8, ror #26
    10ec:	00000018 	andeq	r0, r0, r8, lsl r0
    10f0:	0000001c 	andeq	r0, r0, ip, lsl r0
    10f4:	00000b68 	andeq	r0, r0, r8, ror #22
    10f8:	10002d80 	andne	r2, r0, r0, lsl #27
    10fc:	0000007c 	andeq	r0, r0, ip, ror r0
    1100:	83180e41 	tsthi	r8, #1040	; 0x410
    1104:	85058406 	strhi	r8, [r5, #-1030]	; 0xfffffbfa
    1108:	87038604 	strhi	r8, [r3, -r4, lsl #12]
    110c:	00018e02 	andeq	r8, r1, r2, lsl #28
    1110:	0000000c 	andeq	r0, r0, ip
    1114:	00000b68 	andeq	r0, r0, r8, ror #22
    1118:	10002dfc 	strdne	r2, [r0], -ip
    111c:	0000000c 	andeq	r0, r0, ip
    1120:	0000000c 	andeq	r0, r0, ip
    1124:	00000b68 	andeq	r0, r0, r8, ror #22
    1128:	10002e08 	andne	r2, r0, r8, lsl #28
    112c:	00000048 	andeq	r0, r0, r8, asr #32
    1130:	00000014 	andeq	r0, r0, r4, lsl r0
    1134:	00000b68 	andeq	r0, r0, r8, ror #22
    1138:	00000000 	andeq	r0, r0, r0
    113c:	00000018 	andeq	r0, r0, r8, lsl r0
    1140:	83080e41 	movwhi	r0, #36417	; 0x8e41
    1144:	00018e02 	andeq	r8, r1, r2, lsl #28
    1148:	0000000c 	andeq	r0, r0, ip
    114c:	00000b68 	andeq	r0, r0, r8, ror #22
    1150:	00000000 	andeq	r0, r0, r0
    1154:	0000000c 	andeq	r0, r0, ip
    1158:	0000000c 	andeq	r0, r0, ip
    115c:	00000b68 	andeq	r0, r0, r8, ror #22
    1160:	00000000 	andeq	r0, r0, r0
    1164:	00000010 	andeq	r0, r0, r0, lsl r0
    1168:	0000000c 	andeq	r0, r0, ip
    116c:	00000b68 	andeq	r0, r0, r8, ror #22
    1170:	00000000 	andeq	r0, r0, r0
    1174:	00000020 	andeq	r0, r0, r0, lsr #32
    1178:	0000002c 	andeq	r0, r0, ip, lsr #32
    117c:	00000b68 	andeq	r0, r0, r8, ror #22
    1180:	00000000 	andeq	r0, r0, r0
    1184:	000000b8 	strheq	r0, [r0], -r8
    1188:	83100e43 	tsthi	r0, #1072	; 0x430
    118c:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    1190:	02018e02 	andeq	r8, r1, #2, 28
    1194:	c3000e4e 	movwgt	r0, #3662	; 0xe4e
    1198:	42cec5c4 	sbcmi	ip, lr, #196, 10	; 0x31000000
    119c:	0483100e 	streq	r1, [r3], #14
    11a0:	02850384 	addeq	r0, r5, #132, 6	; 0x10000002
    11a4:	0000018e 	andeq	r0, r0, lr, lsl #3
    11a8:	0000002c 	andeq	r0, r0, ip, lsr #32
    11ac:	00000b68 	andeq	r0, r0, r8, ror #22
    11b0:	10002e50 	andne	r2, r0, r0, asr lr
    11b4:	00000080 	andeq	r0, r0, r0, lsl #1
    11b8:	83100e43 	tsthi	r0, #1072	; 0x430
    11bc:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    11c0:	74018e02 	strvc	r8, [r1], #-3586	; 0xfffff1fe
    11c4:	c4c3000e 	strbgt	r0, [r3], #14
    11c8:	0e42cec5 	cdpeq	14, 4, cr12, cr2, cr5, {6}
    11cc:	84048310 	strhi	r8, [r4], #-784	; 0xfffffcf0
    11d0:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
    11d4:	00000001 	andeq	r0, r0, r1
    11d8:	00000020 	andeq	r0, r0, r0, lsr #32
    11dc:	00000b68 	andeq	r0, r0, r8, ror #22
    11e0:	00000000 	andeq	r0, r0, r0
    11e4:	00000090 	muleq	r0, r0, r0
    11e8:	83100e43 	tsthi	r0, #1072	; 0x430
    11ec:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    11f0:	7f018e02 	svcvc	0x00018e02
    11f4:	c4c3000e 	strbgt	r0, [r3], #14
    11f8:	0000cec5 	andeq	ip, r0, r5, asr #29
    11fc:	0000000c 	andeq	r0, r0, ip
    1200:	00000b68 	andeq	r0, r0, r8, ror #22
    1204:	00000000 	andeq	r0, r0, r0
    1208:	00000018 	andeq	r0, r0, r8, lsl r0
    120c:	0000000c 	andeq	r0, r0, ip
    1210:	00000b68 	andeq	r0, r0, r8, ror #22
    1214:	00000000 	andeq	r0, r0, r0
    1218:	00000014 	andeq	r0, r0, r4, lsl r0
    121c:	00000018 	andeq	r0, r0, r8, lsl r0
    1220:	00000b68 	andeq	r0, r0, r8, ror #22
    1224:	00000000 	andeq	r0, r0, r0
    1228:	000000a8 	andeq	r0, r0, r8, lsr #1
    122c:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    1230:	86038504 	strhi	r8, [r3], -r4, lsl #10
    1234:	00018e02 	andeq	r8, r1, r2, lsl #28
    1238:	0000001c 	andeq	r0, r0, ip, lsl r0
    123c:	00000b68 	andeq	r0, r0, r8, ror #22
    1240:	00000000 	andeq	r0, r0, r0
    1244:	000000cc 	andeq	r0, r0, ip, asr #1
    1248:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
    124c:	86058506 	strhi	r8, [r5], -r6, lsl #10
    1250:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
    1254:	00018e02 	andeq	r8, r1, r2, lsl #28
    1258:	0000001c 	andeq	r0, r0, ip, lsl r0
    125c:	00000b68 	andeq	r0, r0, r8, ror #22
    1260:	00000000 	andeq	r0, r0, r0
    1264:	0000011c 	andeq	r0, r0, ip, lsl r1
    1268:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
    126c:	86058506 	strhi	r8, [r5], -r6, lsl #10
    1270:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
    1274:	00018e02 	andeq	r8, r1, r2, lsl #28
    1278:	0000001c 	andeq	r0, r0, ip, lsl r0
    127c:	00000b68 	andeq	r0, r0, r8, ror #22
    1280:	00000000 	andeq	r0, r0, r0
    1284:	00000158 	andeq	r0, r0, r8, asr r1
    1288:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
    128c:	86058506 	strhi	r8, [r5], -r6, lsl #10
    1290:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
    1294:	00018e02 	andeq	r8, r1, r2, lsl #28
    1298:	00000018 	andeq	r0, r0, r8, lsl r0
    129c:	00000b68 	andeq	r0, r0, r8, ror #22
    12a0:	00000000 	andeq	r0, r0, r0
    12a4:	000000ec 	andeq	r0, r0, ip, ror #1
    12a8:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    12ac:	86038504 	strhi	r8, [r3], -r4, lsl #10
    12b0:	00018e02 	andeq	r8, r1, r2, lsl #28
    12b4:	00000018 	andeq	r0, r0, r8, lsl r0
    12b8:	00000b68 	andeq	r0, r0, r8, ror #22
    12bc:	00000000 	andeq	r0, r0, r0
    12c0:	00000038 	andeq	r0, r0, r8, lsr r0
    12c4:	83100e41 	tsthi	r0, #1040	; 0x410
    12c8:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    12cc:	00018e02 	andeq	r8, r1, r2, lsl #28
    12d0:	00000018 	andeq	r0, r0, r8, lsl r0
    12d4:	00000b68 	andeq	r0, r0, r8, ror #22
    12d8:	00000000 	andeq	r0, r0, r0
    12dc:	00000034 	andeq	r0, r0, r4, lsr r0
    12e0:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    12e4:	86038504 	strhi	r8, [r3], -r4, lsl #10
    12e8:	00018e02 	andeq	r8, r1, r2, lsl #28
    12ec:	0000000c 	andeq	r0, r0, ip
    12f0:	00000b68 	andeq	r0, r0, r8, ror #22
    12f4:	10002ed0 	ldrdne	r2, [r0], -r0
    12f8:	00000018 	andeq	r0, r0, r8, lsl r0
    12fc:	00000020 	andeq	r0, r0, r0, lsr #32
    1300:	00000b68 	andeq	r0, r0, r8, ror #22
    1304:	10002ee8 	andne	r2, r0, r8, ror #29
    1308:	0000006c 	andeq	r0, r0, ip, rrx
    130c:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
    1310:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
    1314:	300e4101 	andcc	r4, lr, r1, lsl #2
    1318:	0c0e0a52 			; <UNDEFINED> instruction: 0x0c0e0a52
    131c:	00000b41 	andeq	r0, r0, r1, asr #22
    1320:	00000014 	andeq	r0, r0, r4, lsl r0
    1324:	00000b68 	andeq	r0, r0, r8, ror #22
    1328:	10002f54 	andne	r2, r0, r4, asr pc
    132c:	00000048 	andeq	r0, r0, r8, asr #32
    1330:	83080e41 	movwhi	r0, #36417	; 0x8e41
    1334:	00018e02 	andeq	r8, r1, r2, lsl #28
    1338:	0000000c 	andeq	r0, r0, ip
    133c:	00000b68 	andeq	r0, r0, r8, ror #22
    1340:	10002f9c 	mulne	r0, ip, pc	; <UNPREDICTABLE>
    1344:	00000018 	andeq	r0, r0, r8, lsl r0
    1348:	0000000c 	andeq	r0, r0, ip
    134c:	00000b68 	andeq	r0, r0, r8, ror #22
    1350:	00000000 	andeq	r0, r0, r0
    1354:	00000074 	andeq	r0, r0, r4, ror r0
    1358:	0000000c 	andeq	r0, r0, ip
    135c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1360:	7c020001 	stcvc	0, cr0, [r2], {1}
    1364:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1368:	0000000c 	andeq	r0, r0, ip
    136c:	00001358 	andeq	r1, r0, r8, asr r3
    1370:	10002fb4 			; <UNDEFINED> instruction: 0x10002fb4
    1374:	00000020 	andeq	r0, r0, r0, lsr #32
    1378:	00000014 	andeq	r0, r0, r4, lsl r0
    137c:	00001358 	andeq	r1, r0, r8, asr r3
    1380:	10002fd4 	ldrdne	r2, [r0], -r4
    1384:	00000048 	andeq	r0, r0, r8, asr #32
    1388:	83080e41 	movwhi	r0, #36417	; 0x8e41
    138c:	00018e02 	andeq	r8, r1, r2, lsl #28
    1390:	00000018 	andeq	r0, r0, r8, lsl r0
    1394:	00001358 	andeq	r1, r0, r8, asr r3
    1398:	1000301c 	andne	r3, r0, ip, lsl r0
    139c:	00000028 	andeq	r0, r0, r8, lsr #32
    13a0:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    13a4:	86038504 	strhi	r8, [r3], -r4, lsl #10
    13a8:	00018e02 	andeq	r8, r1, r2, lsl #28
    13ac:	00000018 	andeq	r0, r0, r8, lsl r0
    13b0:	00001358 	andeq	r1, r0, r8, asr r3
    13b4:	10003044 	andne	r3, r0, r4, asr #32
    13b8:	00000040 	andeq	r0, r0, r0, asr #32
    13bc:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    13c0:	86038504 	strhi	r8, [r3], -r4, lsl #10
    13c4:	00018e02 	andeq	r8, r1, r2, lsl #28
    13c8:	00000014 	andeq	r0, r0, r4, lsl r0
    13cc:	00001358 	andeq	r1, r0, r8, asr r3
    13d0:	10003084 	andne	r3, r0, r4, lsl #1
    13d4:	00000030 	andeq	r0, r0, r0, lsr r0
    13d8:	83080e41 	movwhi	r0, #36417	; 0x8e41
    13dc:	00018e02 	andeq	r8, r1, r2, lsl #28
    13e0:	00000018 	andeq	r0, r0, r8, lsl r0
    13e4:	00001358 	andeq	r1, r0, r8, asr r3
    13e8:	100030b4 	strhne	r3, [r0], -r4
    13ec:	0000002c 	andeq	r0, r0, ip, lsr #32
    13f0:	83100e41 	tsthi	r0, #1040	; 0x410
    13f4:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    13f8:	00018e02 	andeq	r8, r1, r2, lsl #28
    13fc:	00000020 	andeq	r0, r0, r0, lsr #32
    1400:	00001358 	andeq	r1, r0, r8, asr r3
    1404:	100030e0 	andne	r3, r0, r0, ror #1
    1408:	00000068 	andeq	r0, r0, r8, rrx
    140c:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    1410:	86038504 	strhi	r8, [r3], -r4, lsl #10
    1414:	41018e02 	tstmi	r1, r2, lsl #28
    1418:	0a5d180e 	beq	1747458 <__RAM_SIZE+0x1647458>
    141c:	0b41100e 	bleq	104545c <__RAM_SIZE+0xf4545c>
    1420:	0000001c 	andeq	r0, r0, ip, lsl r0
    1424:	00001358 	andeq	r1, r0, r8, asr r3
    1428:	10003148 	andne	r3, r0, r8, asr #2
    142c:	000000f8 	strdeq	r0, [r0], -r8
    1430:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
    1434:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
    1438:	280e4101 	stmdacs	lr, {r0, r8, lr}
    143c:	0c0e7702 	stceq	7, cr7, [lr], {2}
    1440:	00000014 	andeq	r0, r0, r4, lsl r0
    1444:	00001358 	andeq	r1, r0, r8, asr r3
    1448:	10003240 	andne	r3, r0, r0, asr #4
    144c:	00000016 	andeq	r0, r0, r6, lsl r0
    1450:	8e040e41 	cdphi	14, 0, cr0, cr4, cr1, {2}
    1454:	100e4101 	andne	r4, lr, r1, lsl #2
    1458:	00000020 	andeq	r0, r0, r0, lsr #32
    145c:	00001358 	andeq	r1, r0, r8, asr r3
    1460:	10003258 	andne	r3, r0, r8, asr r2
    1464:	00000060 	andeq	r0, r0, r0, rrx
    1468:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
    146c:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
    1470:	180e4101 	stmdane	lr, {r0, r8, lr}
    1474:	0c0e0a48 			; <UNDEFINED> instruction: 0x0c0e0a48
    1478:	00000b41 	andeq	r0, r0, r1, asr #22
    147c:	0000001c 	andeq	r0, r0, ip, lsl r0
    1480:	00001358 	andeq	r1, r0, r8, asr r3
    1484:	00000000 	andeq	r0, r0, r0
    1488:	00000036 	andeq	r0, r0, r6, lsr r0
    148c:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
    1490:	86058506 	strhi	r8, [r5], -r6, lsl #10
    1494:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
    1498:	00018e02 	andeq	r8, r1, r2, lsl #28
    149c:	0000001c 	andeq	r0, r0, ip, lsl r0
    14a0:	00001358 	andeq	r1, r0, r8, asr r3
    14a4:	100032b8 			; <UNDEFINED> instruction: 0x100032b8
    14a8:	0000005c 	andeq	r0, r0, ip, asr r0
    14ac:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    14b0:	41018e02 	tstmi	r1, r2, lsl #28
    14b4:	0e62280e 	cdpeq	8, 6, cr2, cr2, cr14, {0}
    14b8:	00000008 	andeq	r0, r0, r8
    14bc:	00000024 	andeq	r0, r0, r4, lsr #32
    14c0:	00001358 	andeq	r1, r0, r8, asr r3
    14c4:	00000000 	andeq	r0, r0, r0
    14c8:	00000038 	andeq	r0, r0, r8, lsr r0
    14cc:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
    14d0:	86058506 	strhi	r8, [r5], -r6, lsl #10
    14d4:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
    14d8:	41018e02 	tstmi	r1, r2, lsl #28
    14dc:	0e57200e 	cdpeq	0, 5, cr2, cr7, cr14, {0}
    14e0:	00000018 	andeq	r0, r0, r8, lsl r0
    14e4:	0000001c 	andeq	r0, r0, ip, lsl r0
    14e8:	00001358 	andeq	r1, r0, r8, asr r3
    14ec:	00000000 	andeq	r0, r0, r0
    14f0:	00000020 	andeq	r0, r0, r0, lsr #32
    14f4:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
    14f8:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
    14fc:	180e4101 	stmdane	lr, {r0, r8, lr}
    1500:	000c0e4d 	andeq	r0, ip, sp, asr #28
    1504:	00000020 	andeq	r0, r0, r0, lsr #32
    1508:	00001358 	andeq	r1, r0, r8, asr r3
    150c:	00000000 	andeq	r0, r0, r0
    1510:	0000004c 	andeq	r0, r0, ip, asr #32
    1514:	8e040e44 	cdphi	14, 0, cr0, cr4, cr4, {2}
    1518:	180e4101 	stmdane	lr, {r0, r8, lr}
    151c:	040e0a47 	streq	r0, [lr], #-2631	; 0xfffff5b9
    1520:	0e540b42 	vnmlaeq.f64	d16, d4, d2
    1524:	0000ce00 	andeq	ip, r0, r0, lsl #28
    1528:	0000001c 	andeq	r0, r0, ip, lsl r0
    152c:	00001358 	andeq	r1, r0, r8, asr r3
    1530:	00000000 	andeq	r0, r0, r0
    1534:	00000034 	andeq	r0, r0, r4, lsr r0
    1538:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    153c:	41018e02 	tstmi	r1, r2, lsl #28
    1540:	0a4b180e 	beq	12c7580 <__RAM_SIZE+0x11c7580>
    1544:	0b41080e 	bleq	1043584 <__RAM_SIZE+0xf43584>
    1548:	0000000c 	andeq	r0, r0, ip
    154c:	00001358 	andeq	r1, r0, r8, asr r3
    1550:	00000000 	andeq	r0, r0, r0
    1554:	0000000c 	andeq	r0, r0, ip
    1558:	0000000c 	andeq	r0, r0, ip
    155c:	00001358 	andeq	r1, r0, r8, asr r3
    1560:	00000000 	andeq	r0, r0, r0
    1564:	00000004 	andeq	r0, r0, r4
    1568:	00000018 	andeq	r0, r0, r8, lsl r0
    156c:	00001358 	andeq	r1, r0, r8, asr r3
    1570:	00000000 	andeq	r0, r0, r0
    1574:	0000002c 	andeq	r0, r0, ip, lsr #32
    1578:	83100e41 	tsthi	r0, #1040	; 0x410
    157c:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    1580:	00018e02 	andeq	r8, r1, r2, lsl #28
    1584:	00000014 	andeq	r0, r0, r4, lsl r0
    1588:	00001358 	andeq	r1, r0, r8, asr r3
    158c:	00000000 	andeq	r0, r0, r0
    1590:	00000020 	andeq	r0, r0, r0, lsr #32
    1594:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    1598:	00018e02 	andeq	r8, r1, r2, lsl #28
    159c:	00000014 	andeq	r0, r0, r4, lsl r0
    15a0:	00001358 	andeq	r1, r0, r8, asr r3
    15a4:	00000000 	andeq	r0, r0, r0
    15a8:	00000008 	andeq	r0, r0, r8
    15ac:	83080e41 	movwhi	r0, #36417	; 0x8e41
    15b0:	00018e02 	andeq	r8, r1, r2, lsl #28
    15b4:	0000000c 	andeq	r0, r0, ip
    15b8:	00001358 	andeq	r1, r0, r8, asr r3
    15bc:	00000000 	andeq	r0, r0, r0
    15c0:	00000004 	andeq	r0, r0, r4
    15c4:	0000000c 	andeq	r0, r0, ip
    15c8:	00001358 	andeq	r1, r0, r8, asr r3
    15cc:	00000000 	andeq	r0, r0, r0
    15d0:	00000014 	andeq	r0, r0, r4, lsl r0
    15d4:	0000000c 	andeq	r0, r0, ip
    15d8:	00001358 	andeq	r1, r0, r8, asr r3
    15dc:	00000000 	andeq	r0, r0, r0
    15e0:	00000004 	andeq	r0, r0, r4
    15e4:	00000014 	andeq	r0, r0, r4, lsl r0
    15e8:	00001358 	andeq	r1, r0, r8, asr r3
    15ec:	00000000 	andeq	r0, r0, r0
    15f0:	00000020 	andeq	r0, r0, r0, lsr #32
    15f4:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    15f8:	00018e02 	andeq	r8, r1, r2, lsl #28
    15fc:	00000014 	andeq	r0, r0, r4, lsl r0
    1600:	00001358 	andeq	r1, r0, r8, asr r3
    1604:	00000000 	andeq	r0, r0, r0
    1608:	00000012 	andeq	r0, r0, r2, lsl r0
    160c:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    1610:	00018e02 	andeq	r8, r1, r2, lsl #28
    1614:	00000018 	andeq	r0, r0, r8, lsl r0
    1618:	00001358 	andeq	r1, r0, r8, asr r3
    161c:	00000000 	andeq	r0, r0, r0
    1620:	00000012 	andeq	r0, r0, r2, lsl r0
    1624:	83100e41 	tsthi	r0, #1040	; 0x410
    1628:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    162c:	00018e02 	andeq	r8, r1, r2, lsl #28
    1630:	0000001c 	andeq	r0, r0, ip, lsl r0
    1634:	00001358 	andeq	r1, r0, r8, asr r3
    1638:	00000000 	andeq	r0, r0, r0
    163c:	00000028 	andeq	r0, r0, r8, lsr #32
    1640:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    1644:	41018e02 	tstmi	r1, r2, lsl #28
    1648:	0e4f180e 	cdpeq	8, 4, cr1, cr15, cr14, {0}
    164c:	00000008 	andeq	r0, r0, r8
    1650:	0000001c 	andeq	r0, r0, ip, lsl r0
    1654:	00001358 	andeq	r1, r0, r8, asr r3
    1658:	00000000 	andeq	r0, r0, r0
    165c:	00000028 	andeq	r0, r0, r8, lsr #32
    1660:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    1664:	41018e02 	tstmi	r1, r2, lsl #28
    1668:	0e4f180e 	cdpeq	8, 4, cr1, cr15, cr14, {0}
    166c:	00000008 	andeq	r0, r0, r8
    1670:	0000000c 	andeq	r0, r0, ip
    1674:	00001358 	andeq	r1, r0, r8, asr r3
    1678:	00000000 	andeq	r0, r0, r0
    167c:	00000014 	andeq	r0, r0, r4, lsl r0
    1680:	0000000c 	andeq	r0, r0, ip
    1684:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1688:	7c020001 	stcvc	0, cr0, [r2], {1}
    168c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1690:	0000000c 	andeq	r0, r0, ip
    1694:	00001680 	andeq	r1, r0, r0, lsl #13
    1698:	10003314 	andne	r3, r0, r4, lsl r3
    169c:	00000058 	andeq	r0, r0, r8, asr r0
    16a0:	0000001c 	andeq	r0, r0, ip, lsl r0
    16a4:	00001680 	andeq	r1, r0, r0, lsl #13
    16a8:	1000336c 	andne	r3, r0, ip, ror #6
    16ac:	00000064 	andeq	r0, r0, r4, rrx
    16b0:	84040e5a 	strhi	r0, [r4], #-3674	; 0xfffff1a6
    16b4:	c40a4f01 	strgt	r4, [sl], #-3841	; 0xfffff0ff
    16b8:	0b41000e 	bleq	10416f8 <__RAM_SIZE+0xf416f8>
    16bc:	c4000e42 	strgt	r0, [r0], #-3650	; 0xfffff1be
    16c0:	00000018 	andeq	r0, r0, r8, lsl r0
    16c4:	00001680 	andeq	r1, r0, r0, lsl #13
    16c8:	100033d0 	ldrdne	r3, [r0], -r0
    16cc:	000000d4 	ldrdeq	r0, [r0], -r4
    16d0:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    16d4:	86038504 	strhi	r8, [r3], -r4, lsl #10
    16d8:	00018e02 	andeq	r8, r1, r2, lsl #28
    16dc:	00000020 	andeq	r0, r0, r0, lsr #32
    16e0:	00001680 	andeq	r1, r0, r0, lsl #13
    16e4:	100034a4 	andne	r3, r0, r4, lsr #9
    16e8:	00000050 	andeq	r0, r0, r0, asr r0
    16ec:	83100e42 	tsthi	r0, #1056	; 0x420
    16f0:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    16f4:	61018e02 	tstvs	r1, r2, lsl #28
    16f8:	c4c3000e 	strbgt	r0, [r3], #14
    16fc:	0000cec5 	andeq	ip, r0, r5, asr #29
    1700:	0000000c 	andeq	r0, r0, ip
    1704:	00001680 	andeq	r1, r0, r0, lsl #13
    1708:	00000000 	andeq	r0, r0, r0
    170c:	0000000c 	andeq	r0, r0, ip
    1710:	0000000c 	andeq	r0, r0, ip
    1714:	00001680 	andeq	r1, r0, r0, lsl #13
    1718:	00000000 	andeq	r0, r0, r0
    171c:	0000000c 	andeq	r0, r0, ip
    1720:	0000000c 	andeq	r0, r0, ip
    1724:	00001680 	andeq	r1, r0, r0, lsl #13
    1728:	00000000 	andeq	r0, r0, r0
    172c:	00000002 	andeq	r0, r0, r2
    1730:	00000018 	andeq	r0, r0, r8, lsl r0
    1734:	00001680 	andeq	r1, r0, r0, lsl #13
    1738:	00000000 	andeq	r0, r0, r0
    173c:	00000032 	andeq	r0, r0, r2, lsr r0
    1740:	83100e41 	tsthi	r0, #1040	; 0x410
    1744:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    1748:	00018e02 	andeq	r8, r1, r2, lsl #28
    174c:	0000001c 	andeq	r0, r0, ip, lsl r0
    1750:	00001680 	andeq	r1, r0, r0, lsl #13
    1754:	00000000 	andeq	r0, r0, r0
    1758:	00000080 	andeq	r0, r0, r0, lsl #1
    175c:	83180e41 	tsthi	r8, #1040	; 0x410
    1760:	85058406 	strhi	r8, [r5, #-1030]	; 0xfffffbfa
    1764:	87038604 	strhi	r8, [r3, -r4, lsl #12]
    1768:	00018e02 	andeq	r8, r1, r2, lsl #28
    176c:	0000000c 	andeq	r0, r0, ip
    1770:	00001680 	andeq	r1, r0, r0, lsl #13
    1774:	00000000 	andeq	r0, r0, r0
    1778:	0000002c 	andeq	r0, r0, ip, lsr #32
    177c:	0000000c 	andeq	r0, r0, ip
    1780:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1784:	7c020001 	stcvc	0, cr0, [r2], {1}
    1788:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    178c:	00000018 	andeq	r0, r0, r8, lsl r0
    1790:	0000177c 	andeq	r1, r0, ip, ror r7
    1794:	100034f4 	strdne	r3, [r0], -r4
    1798:	00000018 	andeq	r0, r0, r8, lsl r0
    179c:	8e040e41 	cdphi	14, 0, cr0, cr4, cr1, {2}
    17a0:	100e4101 	andne	r4, lr, r1, lsl #2
    17a4:	00040e48 	andeq	r0, r4, r8, asr #28
    17a8:	00000014 	andeq	r0, r0, r4, lsl r0
    17ac:	0000177c 	andeq	r1, r0, ip, ror r7
    17b0:	1000350c 	andne	r3, r0, ip, lsl #10
    17b4:	00000114 	andeq	r0, r0, r4, lsl r1
    17b8:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    17bc:	00018e02 	andeq	r8, r1, r2, lsl #28
    17c0:	0000000c 	andeq	r0, r0, ip
    17c4:	0000177c 	andeq	r1, r0, ip, ror r7
    17c8:	10003620 	andne	r3, r0, r0, lsr #12
    17cc:	0000003c 	andeq	r0, r0, ip, lsr r0
    17d0:	0000000c 	andeq	r0, r0, ip
    17d4:	0000177c 	andeq	r1, r0, ip, ror r7
    17d8:	1000365c 	andne	r3, r0, ip, asr r6
    17dc:	00000016 	andeq	r0, r0, r6, lsl r0
    17e0:	00000014 	andeq	r0, r0, r4, lsl r0
    17e4:	0000177c 	andeq	r1, r0, ip, ror r7
    17e8:	10003674 	andne	r3, r0, r4, ror r6
    17ec:	0000001c 	andeq	r0, r0, ip, lsl r0
    17f0:	83080e41 	movwhi	r0, #36417	; 0x8e41
    17f4:	00018e02 	andeq	r8, r1, r2, lsl #28
    17f8:	00000014 	andeq	r0, r0, r4, lsl r0
    17fc:	0000177c 	andeq	r1, r0, ip, ror r7
    1800:	10003690 	mulne	r0, r0, r6
    1804:	0000001c 	andeq	r0, r0, ip, lsl r0
    1808:	83080e41 	movwhi	r0, #36417	; 0x8e41
    180c:	00018e02 	andeq	r8, r1, r2, lsl #28
    1810:	00000014 	andeq	r0, r0, r4, lsl r0
    1814:	0000177c 	andeq	r1, r0, ip, ror r7
    1818:	100036ac 	andne	r3, r0, ip, lsr #13
    181c:	00000022 	andeq	r0, r0, r2, lsr #32
    1820:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    1824:	00018e02 	andeq	r8, r1, r2, lsl #28
    1828:	00000014 	andeq	r0, r0, r4, lsl r0
    182c:	0000177c 	andeq	r1, r0, ip, ror r7
    1830:	100036ce 	andne	r3, r0, lr, asr #13
    1834:	00000014 	andeq	r0, r0, r4, lsl r0
    1838:	83080e41 	movwhi	r0, #36417	; 0x8e41
    183c:	00018e02 	andeq	r8, r1, r2, lsl #28
    1840:	00000018 	andeq	r0, r0, r8, lsl r0
    1844:	0000177c 	andeq	r1, r0, ip, ror r7
    1848:	100036e4 	andne	r3, r0, r4, ror #13
    184c:	00000090 	muleq	r0, r0, r0
    1850:	84040e41 	strhi	r0, [r4], #-3649	; 0xfffff1bf
    1854:	c4440201 	strbgt	r0, [r4], #-513	; 0xfffffdff
    1858:	0000000e 	andeq	r0, r0, lr
    185c:	00000014 	andeq	r0, r0, r4, lsl r0
    1860:	0000177c 	andeq	r1, r0, ip, ror r7
    1864:	10003774 	andne	r3, r0, r4, ror r7
    1868:	00000040 	andeq	r0, r0, r0, asr #32
    186c:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    1870:	00018e02 	andeq	r8, r1, r2, lsl #28
    1874:	0000000c 	andeq	r0, r0, ip
    1878:	0000177c 	andeq	r1, r0, ip, ror r7
    187c:	00000000 	andeq	r0, r0, r0
    1880:	00000002 	andeq	r0, r0, r2
    1884:	0000000c 	andeq	r0, r0, ip
    1888:	0000177c 	andeq	r1, r0, ip, ror r7
    188c:	00000000 	andeq	r0, r0, r0
    1890:	0000000e 	andeq	r0, r0, lr
    1894:	0000000c 	andeq	r0, r0, ip
    1898:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    189c:	7c020001 	stcvc	0, cr0, [r2], {1}
    18a0:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    18a4:	0000000c 	andeq	r0, r0, ip
    18a8:	00001894 	muleq	r0, r4, r8
    18ac:	100037b4 			; <UNDEFINED> instruction: 0x100037b4
    18b0:	00000026 	andeq	r0, r0, r6, lsr #32
    18b4:	0000000c 	andeq	r0, r0, ip
    18b8:	00001894 	muleq	r0, r4, r8
    18bc:	00000000 	andeq	r0, r0, r0
    18c0:	00000010 	andeq	r0, r0, r0, lsl r0
    18c4:	0000000c 	andeq	r0, r0, ip
    18c8:	00001894 	muleq	r0, r4, r8
    18cc:	00000000 	andeq	r0, r0, r0
    18d0:	0000000e 	andeq	r0, r0, lr
    18d4:	0000000c 	andeq	r0, r0, ip
    18d8:	00001894 	muleq	r0, r4, r8
    18dc:	00000000 	andeq	r0, r0, r0
    18e0:	0000000e 	andeq	r0, r0, lr
    18e4:	0000000c 	andeq	r0, r0, ip
    18e8:	00001894 	muleq	r0, r4, r8
    18ec:	100037e0 	andne	r3, r0, r0, ror #15
    18f0:	0000001a 	andeq	r0, r0, sl, lsl r0
    18f4:	0000000c 	andeq	r0, r0, ip
    18f8:	00001894 	muleq	r0, r4, r8
    18fc:	10003800 	andne	r3, r0, r0, lsl #16
    1900:	00000016 	andeq	r0, r0, r6, lsl r0
    1904:	0000000c 	andeq	r0, r0, ip
    1908:	00001894 	muleq	r0, r4, r8
    190c:	10003816 	andne	r3, r0, r6, lsl r8
    1910:	0000000e 	andeq	r0, r0, lr
    1914:	0000000c 	andeq	r0, r0, ip
    1918:	00001894 	muleq	r0, r4, r8
    191c:	10003824 	andne	r3, r0, r4, lsr #16
    1920:	00000044 	andeq	r0, r0, r4, asr #32
    1924:	0000000c 	andeq	r0, r0, ip
    1928:	00001894 	muleq	r0, r4, r8
    192c:	1000386c 	andne	r3, r0, ip, ror #16
    1930:	00000012 	andeq	r0, r0, r2, lsl r0
    1934:	0000000c 	andeq	r0, r0, ip
    1938:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    193c:	7c020001 	stcvc	0, cr0, [r2], {1}
    1940:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1944:	0000000c 	andeq	r0, r0, ip
    1948:	00001934 	andeq	r1, r0, r4, lsr r9
    194c:	1000395c 	andne	r3, r0, ip, asr r9
    1950:	0000000c 	andeq	r0, r0, ip
    1954:	0000000c 	andeq	r0, r0, ip
    1958:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    195c:	7c020001 	stcvc	0, cr0, [r2], {1}
    1960:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1964:	00000018 	andeq	r0, r0, r8, lsl r0
    1968:	00001954 	andeq	r1, r0, r4, asr r9
    196c:	10003a54 	andne	r3, r0, r4, asr sl
    1970:	000000a4 	andeq	r0, r0, r4, lsr #1
    1974:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    1978:	86038504 	strhi	r8, [r3], -r4, lsl #10
    197c:	00018e02 	andeq	r8, r1, r2, lsl #28
    1980:	0000000c 	andeq	r0, r0, ip
    1984:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1988:	7c020001 	stcvc	0, cr0, [r2], {1}
    198c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1990:	0000000c 	andeq	r0, r0, ip
    1994:	00001980 	andeq	r1, r0, r0, lsl #19
    1998:	10003af8 	strdne	r3, [r0], -r8
    199c:	00000014 	andeq	r0, r0, r4, lsl r0
    19a0:	00000044 	andeq	r0, r0, r4, asr #32
    19a4:	00001980 	andeq	r1, r0, r0, lsl #19
    19a8:	00000000 	andeq	r0, r0, r0
    19ac:	000000c8 	andeq	r0, r0, r8, asr #1
    19b0:	83280e42 			; <UNDEFINED> instruction: 0x83280e42
    19b4:	8509840a 	strhi	r8, [r9, #-1034]	; 0xfffffbf6
    19b8:	87078608 	strhi	r8, [r7, -r8, lsl #12]
    19bc:	89058806 	stmdbhi	r5, {r1, r2, fp, pc}
    19c0:	8b038a04 	blhi	e41d8 <__HEAP_SIZE+0xe31d8>
    19c4:	46018e02 	strmi	r8, [r1], -r2, lsl #28
    19c8:	5005300e 	andpl	r3, r5, lr
    19cc:	0b51050c 	bleq	1442e04 <__RAM_SIZE+0x1342e04>
    19d0:	50060a60 	andpl	r0, r6, r0, ror #20
    19d4:	280e5106 	stmdacs	lr, {r1, r2, r8, ip, lr}
    19d8:	cacbce43 	bgt	ff2f52ec <__StackTop+0xc71f52ec>
    19dc:	c6c7c8c9 	strbgt	ip, [r7], r9, asr #17
    19e0:	0ec3c4c5 	cdpeq	4, 12, cr12, cr3, cr5, {6}
    19e4:	000b4200 	andeq	r4, fp, r0, lsl #4
    19e8:	0000000c 	andeq	r0, r0, ip
    19ec:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    19f0:	7c020001 	stcvc	0, cr0, [r2], {1}
    19f4:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    19f8:	0000000c 	andeq	r0, r0, ip
    19fc:	000019e8 	andeq	r1, r0, r8, ror #19
    1a00:	10003b0c 	andne	r3, r0, ip, lsl #22
    1a04:	0000000c 	andeq	r0, r0, ip
    1a08:	0000000c 	andeq	r0, r0, ip
    1a0c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1a10:	7c020001 	stcvc	0, cr0, [r2], {1}
    1a14:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1a18:	00000020 	andeq	r0, r0, r0, lsr #32
    1a1c:	00001a08 	andeq	r1, r0, r8, lsl #20
    1a20:	10003b18 	andne	r3, r0, r8, lsl fp
    1a24:	0000002c 	andeq	r0, r0, ip, lsr #32
    1a28:	83100e41 	tsthi	r0, #1040	; 0x410
    1a2c:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    1a30:	4f018e02 	svcmi	0x00018e02
    1a34:	c3c4c5ce 	bicgt	ip, r4, #864026624	; 0x33800000
    1a38:	0000000e 	andeq	r0, r0, lr
    1a3c:	0000000c 	andeq	r0, r0, ip
    1a40:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1a44:	7c020001 	stcvc	0, cr0, [r2], {1}
    1a48:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1a4c:	0000000c 	andeq	r0, r0, ip
    1a50:	00001a3c 	andeq	r1, r0, ip, lsr sl
    1a54:	00000000 	andeq	r0, r0, r0
    1a58:	00000002 	andeq	r0, r0, r2
    1a5c:	0000000c 	andeq	r0, r0, ip
    1a60:	00001a3c 	andeq	r1, r0, ip, lsr sl
    1a64:	00000000 	andeq	r0, r0, r0
    1a68:	00000002 	andeq	r0, r0, r2
    1a6c:	0000000c 	andeq	r0, r0, ip
    1a70:	00001a3c 	andeq	r1, r0, ip, lsr sl
    1a74:	00000000 	andeq	r0, r0, r0
    1a78:	00000002 	andeq	r0, r0, r2
    1a7c:	0000000c 	andeq	r0, r0, ip
    1a80:	00001a3c 	andeq	r1, r0, ip, lsr sl
    1a84:	00000000 	andeq	r0, r0, r0
    1a88:	00000002 	andeq	r0, r0, r2
    1a8c:	0000000c 	andeq	r0, r0, ip
    1a90:	00001a3c 	andeq	r1, r0, ip, lsr sl
    1a94:	00000000 	andeq	r0, r0, r0
    1a98:	00000002 	andeq	r0, r0, r2
    1a9c:	0000000c 	andeq	r0, r0, ip
    1aa0:	00001a3c 	andeq	r1, r0, ip, lsr sl
    1aa4:	10003b44 	andne	r3, r0, r4, asr #22
    1aa8:	00000002 	andeq	r0, r0, r2
    1aac:	0000000c 	andeq	r0, r0, ip
    1ab0:	00001a3c 	andeq	r1, r0, ip, lsr sl
    1ab4:	00000000 	andeq	r0, r0, r0
    1ab8:	00000004 	andeq	r0, r0, r4
    1abc:	0000000c 	andeq	r0, r0, ip
    1ac0:	00001a3c 	andeq	r1, r0, ip, lsr sl
    1ac4:	00000000 	andeq	r0, r0, r0
    1ac8:	00000004 	andeq	r0, r0, r4
    1acc:	0000000c 	andeq	r0, r0, ip
    1ad0:	00001a3c 	andeq	r1, r0, ip, lsr sl
    1ad4:	00000000 	andeq	r0, r0, r0
    1ad8:	00000002 	andeq	r0, r0, r2
    1adc:	0000000c 	andeq	r0, r0, ip
    1ae0:	00001a3c 	andeq	r1, r0, ip, lsr sl
    1ae4:	10003b48 	andne	r3, r0, r8, asr #22
    1ae8:	00000002 	andeq	r0, r0, r2
    1aec:	0000000c 	andeq	r0, r0, ip
    1af0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1af4:	7c020001 	stcvc	0, cr0, [r2], {1}
    1af8:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1afc:	00000020 	andeq	r0, r0, r0, lsr #32
    1b00:	00001aec 	andeq	r1, r0, ip, ror #21
    1b04:	10003b4c 	andne	r3, r0, ip, asr #22
    1b08:	00000090 	muleq	r0, r0, r0
    1b0c:	84200e42 	strthi	r0, [r0], #-3650	; 0xfffff1be
    1b10:	86078508 	strhi	r8, [r7], -r8, lsl #10
    1b14:	88058706 	stmdahi	r5, {r1, r2, r8, r9, sl, pc}
    1b18:	8a038904 	bhi	e3f30 <__HEAP_SIZE+0xe2f30>
    1b1c:	00018e02 	andeq	r8, r1, r2, lsl #28
    1b20:	0000000c 	andeq	r0, r0, ip
    1b24:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1b28:	7c020001 	stcvc	0, cr0, [r2], {1}
    1b2c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1b30:	00000024 	andeq	r0, r0, r4, lsr #32
    1b34:	00001b20 	andeq	r1, r0, r0, lsr #22
    1b38:	00000000 	andeq	r0, r0, r0
    1b3c:	00000048 	andeq	r0, r0, r8, asr #32
    1b40:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
    1b44:	86058506 	strhi	r8, [r5], -r6, lsl #10
    1b48:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
    1b4c:	60018e02 	andvs	r8, r1, r2, lsl #28
    1b50:	c6c7c8ce 	strbgt	ip, [r7], lr, asr #17
    1b54:	000ec4c5 	andeq	ip, lr, r5, asr #9
    1b58:	00000028 	andeq	r0, r0, r8, lsr #32
    1b5c:	00001b20 	andeq	r1, r0, r0, lsr #22
    1b60:	00000000 	andeq	r0, r0, r0
    1b64:	00000090 	muleq	r0, r0, r0
    1b68:	84100e46 	ldrhi	r0, [r0], #-3654	; 0xfffff1ba
    1b6c:	86038504 	strhi	r8, [r3], -r4, lsl #10
    1b70:	7c018e02 	stcvc	14, cr8, [r1], {2}
    1b74:	c5c6ce0a 	strbgt	ip, [r6, #3594]	; 0xe0a
    1b78:	42000ec4 	andmi	r0, r0, #196, 28	; 0xc40
    1b7c:	000e410b 	andeq	r4, lr, fp, lsl #2
    1b80:	cec6c5c4 	cdpgt	5, 12, cr12, cr6, cr4, {6}
    1b84:	0000000c 	andeq	r0, r0, ip
    1b88:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1b8c:	7c020001 	stcvc	0, cr0, [r2], {1}
    1b90:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1b94:	0000001c 	andeq	r0, r0, ip, lsl r0
    1b98:	00001b84 	andeq	r1, r0, r4, lsl #23
    1b9c:	10003bdc 	ldrdne	r3, [r0], -ip
    1ba0:	00000282 	andeq	r0, r0, r2, lsl #5
    1ba4:	0c0e470a 	stceq	7, cr4, [lr], {10}
    1ba8:	02850384 	addeq	r0, r5, #132, 6	; 0x10000002
    1bac:	3a03018e 	bcc	c21ec <__HEAP_SIZE+0xc11ec>
    1bb0:	00000b01 	andeq	r0, r0, r1, lsl #22
    1bb4:	00000018 	andeq	r0, r0, r8, lsl r0
    1bb8:	00001b84 	andeq	r1, r0, r4, lsl #23
    1bbc:	10003e60 	andne	r3, r0, r0, ror #28
    1bc0:	0000001e 	andeq	r0, r0, lr, lsl r0
    1bc4:	0c0e460a 	stceq	6, cr4, [lr], {10}
    1bc8:	02850384 	addeq	r0, r5, #132, 6	; 0x10000002
    1bcc:	0b49018e 	bleq	124220c <__RAM_SIZE+0x114220c>
    1bd0:	00000018 	andeq	r0, r0, r8, lsl r0
    1bd4:	00001b84 	andeq	r1, r0, r4, lsl #23
    1bd8:	10003e80 	andne	r3, r0, r0, lsl #29
    1bdc:	00000022 	andeq	r0, r0, r2, lsr #32
    1be0:	0c0e460a 	stceq	6, cr4, [lr], {10}
    1be4:	02850384 	addeq	r0, r5, #132, 6	; 0x10000002
    1be8:	0b4b018e 	bleq	12c2228 <__RAM_SIZE+0x11c2228>
    1bec:	00000018 	andeq	r0, r0, r8, lsl r0
    1bf0:	00001b84 	andeq	r1, r0, r4, lsl #23
    1bf4:	10003ea4 	andne	r3, r0, r4, lsr #29
    1bf8:	00000042 	andeq	r0, r0, r2, asr #32
    1bfc:	0c0e5a0a 			; <UNDEFINED> instruction: 0x0c0e5a0a
    1c00:	02850384 	addeq	r0, r5, #132, 6	; 0x10000002
    1c04:	0b47018e 	bleq	11c2244 <__RAM_SIZE+0x10c2244>
    1c08:	00000024 	andeq	r0, r0, r4, lsr #32
    1c0c:	00001b84 	andeq	r1, r0, r4, lsl #23
    1c10:	10003ee8 	andne	r3, r0, r8, ror #29
    1c14:	0000006a 	andeq	r0, r0, sl, rrx
    1c18:	0e450a0a 	vmlaeq.f32	s1, s10, s20
    1c1c:	8503840c 	strhi	r8, [r3, #-1036]	; 0xfffffbf4
    1c20:	43018e02 	movwmi	r8, #7682	; 0x1e02
    1c24:	0c0e450b 	cfstr32eq	mvfx4, [lr], {11}
    1c28:	02850384 	addeq	r0, r5, #132, 6	; 0x10000002
    1c2c:	0b68018e 	bleq	1a0226c <__RAM_SIZE+0x190226c>
    1c30:	0000000c 	andeq	r0, r0, ip
    1c34:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1c38:	7c020001 	stcvc	0, cr0, [r2], {1}
    1c3c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1c40:	0000001c 	andeq	r0, r0, ip, lsl r0
    1c44:	00001c30 	andeq	r1, r0, r0, lsr ip
    1c48:	10003f54 	andne	r3, r0, r4, asr pc
    1c4c:	00000254 	andeq	r0, r0, r4, asr r2
    1c50:	100e410a 	andne	r4, lr, sl, lsl #2
    1c54:	03850484 	orreq	r0, r5, #132, 8	; 0x84000000
    1c58:	018e0286 	orreq	r0, lr, r6, lsl #5
    1c5c:	0b012903 	bleq	4c070 <__HEAP_SIZE+0x4b070>
    1c60:	0000001c 	andeq	r0, r0, ip, lsl r0
    1c64:	00001c30 	andeq	r1, r0, r0, lsr ip
    1c68:	100041a8 	andne	r4, r0, r8, lsr #3
    1c6c:	000001d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    1c70:	100e410a 	andne	r4, lr, sl, lsl #2
    1c74:	03850484 	orreq	r0, r5, #132, 8	; 0x84000000
    1c78:	018e0286 	orreq	r0, lr, r6, lsl #5
    1c7c:	000be702 	andeq	lr, fp, r2, lsl #14
    1c80:	0000000c 	andeq	r0, r0, ip
    1c84:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1c88:	7c020001 	stcvc	0, cr0, [r2], {1}
    1c8c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1c90:	0000001c 	andeq	r0, r0, ip, lsl r0
    1c94:	00001c80 	andeq	r1, r0, r0, lsl #25
    1c98:	10004378 	andne	r4, r0, r8, ror r3
    1c9c:	0000008a 	andeq	r0, r0, sl, lsl #1
    1ca0:	040e4c0a 	streq	r4, [lr], #-3082	; 0xfffff3f6
    1ca4:	0e410a4a 	vmlseq.f32	s1, s2, s20
    1ca8:	520b5b00 	andpl	r5, fp, #0, 22
    1cac:	0b41000e 	bleq	1041cec <__RAM_SIZE+0xf41cec>
    1cb0:	00000018 	andeq	r0, r0, r8, lsl r0
    1cb4:	00001c80 	andeq	r1, r0, r0, lsl #25
    1cb8:	10004404 	andne	r4, r0, r4, lsl #8
    1cbc:	00000020 	andeq	r0, r0, r0, lsr #32
    1cc0:	080e490a 	stmdaeq	lr, {r1, r3, r8, fp, lr}
    1cc4:	018e0280 	orreq	r0, lr, r0, lsl #5
    1cc8:	00000b47 	andeq	r0, r0, r7, asr #22
    1ccc:	00000014 	andeq	r0, r0, r4, lsl r0
    1cd0:	00001c80 	andeq	r1, r0, r0, lsl #25
    1cd4:	10004424 	andne	r4, r0, r4, lsr #8
    1cd8:	00000012 	andeq	r0, r0, r2, lsl r0
    1cdc:	080e420a 	stmdaeq	lr, {r1, r3, r9, lr}
    1ce0:	0b47028e 	bleq	11c2720 <__RAM_SIZE+0x10c2720>
    1ce4:	00000014 	andeq	r0, r0, r4, lsl r0
    1ce8:	00001c80 	andeq	r1, r0, r0, lsl #25
    1cec:	10004438 	andne	r4, r0, r8, lsr r4
    1cf0:	00000012 	andeq	r0, r0, r2, lsl r0
    1cf4:	080e420a 	stmdaeq	lr, {r1, r3, r9, lr}
    1cf8:	0b47028e 	bleq	11c2738 <__RAM_SIZE+0x10c2738>
    1cfc:	00000014 	andeq	r0, r0, r4, lsl r0
    1d00:	00001c80 	andeq	r1, r0, r0, lsl #25
    1d04:	1000444c 	andne	r4, r0, ip, asr #8
    1d08:	00000012 	andeq	r0, r0, r2, lsl r0
    1d0c:	080e420a 	stmdaeq	lr, {r1, r3, r9, lr}
    1d10:	0b47028e 	bleq	11c2750 <__RAM_SIZE+0x10c2750>
    1d14:	00000014 	andeq	r0, r0, r4, lsl r0
    1d18:	00001c80 	andeq	r1, r0, r0, lsl #25
    1d1c:	10004460 	andne	r4, r0, r0, ror #8
    1d20:	00000012 	andeq	r0, r0, r2, lsl r0
    1d24:	080e420a 	stmdaeq	lr, {r1, r3, r9, lr}
    1d28:	0b47028e 	bleq	11c2768 <__RAM_SIZE+0x10c2768>
    1d2c:	00000014 	andeq	r0, r0, r4, lsl r0
    1d30:	00001c80 	andeq	r1, r0, r0, lsl #25
    1d34:	10004474 	andne	r4, r0, r4, ror r4
    1d38:	00000012 	andeq	r0, r0, r2, lsl r0
    1d3c:	080e420a 	stmdaeq	lr, {r1, r3, r9, lr}
    1d40:	0b47028e 	bleq	11c2780 <__RAM_SIZE+0x10c2780>
    1d44:	0000000c 	andeq	r0, r0, ip
    1d48:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1d4c:	7c020001 	stcvc	0, cr0, [r2], {1}
    1d50:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1d54:	00000010 	andeq	r0, r0, r0, lsl r0
    1d58:	00001d44 	andeq	r1, r0, r4, asr #26
    1d5c:	10004488 	andne	r4, r0, r8, lsl #9
    1d60:	0000004e 	andeq	r0, r0, lr, asr #32
    1d64:	000b670a 	andeq	r6, fp, sl, lsl #14
    1d68:	0000000c 	andeq	r0, r0, ip
    1d6c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1d70:	7c020001 	stcvc	0, cr0, [r2], {1}
    1d74:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1d78:	00000010 	andeq	r0, r0, r0, lsl r0
    1d7c:	00001d68 	andeq	r1, r0, r8, ror #26
    1d80:	100044d8 	ldrdne	r4, [r0], -r8
    1d84:	00000040 	andeq	r0, r0, r0, asr #32
    1d88:	000b600a 	andeq	r6, fp, sl
    1d8c:	0000000c 	andeq	r0, r0, ip
    1d90:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1d94:	7c020001 	stcvc	0, cr0, [r2], {1}
    1d98:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1d9c:	00000018 	andeq	r0, r0, r8, lsl r0
    1da0:	00001d8c 	andeq	r1, r0, ip, lsl #27
    1da4:	10004518 	andne	r4, r0, r8, lsl r5
    1da8:	00000030 	andeq	r0, r0, r0, lsr r0
    1dac:	8e100e50 	mrchi	14, 0, r0, cr0, cr0, {2}
    1db0:	0ece4703 	cdpeq	7, 12, cr4, cr14, cr3, {0}
    1db4:	00000010 	andeq	r0, r0, r0, lsl r0
    1db8:	0000000c 	andeq	r0, r0, ip
    1dbc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1dc0:	7c020001 	stcvc	0, cr0, [r2], {1}
    1dc4:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1dc8:	00000024 	andeq	r0, r0, r4, lsr #32
    1dcc:	00001db8 			; <UNDEFINED> instruction: 0x00001db8
    1dd0:	10004548 	andne	r4, r0, r8, asr #10
    1dd4:	000002ec 	andeq	r0, r0, ip, ror #5
    1dd8:	84240e42 	strthi	r0, [r4], #-3650	; 0xfffff1be
    1ddc:	86088509 	strhi	r8, [r8], -r9, lsl #10
    1de0:	88068707 	stmdahi	r6, {r0, r1, r2, r8, r9, sl, pc}
    1de4:	8a048905 	bhi	124200 <__RAM_SIZE+0x24200>
    1de8:	8e028b03 	vmlahi.f64	d8, d2, d3
    1dec:	00000001 	andeq	r0, r0, r1
    1df0:	0000000c 	andeq	r0, r0, ip
    1df4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1df8:	7c020001 	stcvc	0, cr0, [r2], {1}
    1dfc:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1e00:	0000000c 	andeq	r0, r0, ip
    1e04:	00001df0 	strdeq	r1, [r0], -r0
    1e08:	10004834 	andne	r4, r0, r4, lsr r8
    1e0c:	00000012 	andeq	r0, r0, r2, lsl r0
    1e10:	00000020 	andeq	r0, r0, r0, lsr #32
    1e14:	00001df0 	strdeq	r1, [r0], -r0
    1e18:	10004848 	andne	r4, r0, r8, asr #16
    1e1c:	00000060 	andeq	r0, r0, r0, rrx
    1e20:	84200e42 	strthi	r0, [r0], #-3650	; 0xfffff1be
    1e24:	86078508 	strhi	r8, [r7], -r8, lsl #10
    1e28:	88058706 	stmdahi	r5, {r1, r2, r8, r9, sl, pc}
    1e2c:	8a038904 	bhi	e4244 <__HEAP_SIZE+0xe3244>
    1e30:	00018e02 	andeq	r8, r1, r2, lsl #28
    1e34:	0000000c 	andeq	r0, r0, ip
    1e38:	00001df0 	strdeq	r1, [r0], -r0
    1e3c:	100048a8 	andne	r4, r0, r8, lsr #17
    1e40:	00000028 	andeq	r0, r0, r8, lsr #32
    1e44:	0000002c 	andeq	r0, r0, ip, lsr #32
    1e48:	00001df0 	strdeq	r1, [r0], -r0
    1e4c:	100048d0 	ldrdne	r4, [r0], -r0
    1e50:	0000009c 	muleq	r0, ip, r0
    1e54:	840c0e42 	strhi	r0, [ip], #-3650	; 0xfffff1be
    1e58:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
    1e5c:	180e4201 	stmdane	lr, {r0, r9, lr}
    1e60:	0c0e0a65 			; <UNDEFINED> instruction: 0x0c0e0a65
    1e64:	0a440b41 	beq	1104b70 <__RAM_SIZE+0x1004b70>
    1e68:	0b410c0e 	bleq	1044ea8 <__RAM_SIZE+0xf44ea8>
    1e6c:	0c0e0a50 			; <UNDEFINED> instruction: 0x0c0e0a50
    1e70:	00000b41 	andeq	r0, r0, r1, asr #22
    1e74:	00000018 	andeq	r0, r0, r8, lsl r0
    1e78:	00001df0 	strdeq	r1, [r0], -r0
    1e7c:	1000496c 	andne	r4, r0, ip, ror #18
    1e80:	00000058 	andeq	r0, r0, r8, asr r0
    1e84:	84080e43 	strhi	r0, [r8], #-3651	; 0xfffff1bd
    1e88:	67018e02 	strvs	r8, [r1, -r2, lsl #28]
    1e8c:	000ec4ce 	andeq	ip, lr, lr, asr #9
    1e90:	0000000c 	andeq	r0, r0, ip
    1e94:	00001df0 	strdeq	r1, [r0], -r0
    1e98:	100049c4 	andne	r4, r0, r4, asr #19
    1e9c:	00000004 	andeq	r0, r0, r4
    1ea0:	0000000c 	andeq	r0, r0, ip
    1ea4:	00001df0 	strdeq	r1, [r0], -r0
    1ea8:	100049c8 	andne	r4, r0, r8, asr #19
    1eac:	0000000a 	andeq	r0, r0, sl
    1eb0:	0000000c 	andeq	r0, r0, ip
    1eb4:	00001df0 	strdeq	r1, [r0], -r0
    1eb8:	100049d4 	ldrdne	r4, [r0], -r4	; <UNPREDICTABLE>
    1ebc:	00000002 	andeq	r0, r0, r2
    1ec0:	00000018 	andeq	r0, r0, r8, lsl r0
    1ec4:	00001df0 	strdeq	r1, [r0], -r0
    1ec8:	100049d8 	ldrdne	r4, [r0], -r8
    1ecc:	0000003e 	andeq	r0, r0, lr, lsr r0
    1ed0:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    1ed4:	86038504 	strhi	r8, [r3], -r4, lsl #10
    1ed8:	00018e02 	andeq	r8, r1, r2, lsl #28
    1edc:	0000002c 	andeq	r0, r0, ip, lsr #32
    1ee0:	00001df0 	strdeq	r1, [r0], -r0
    1ee4:	10004a18 	andne	r4, r0, r8, lsl sl
    1ee8:	000000da 	ldrdeq	r0, [r0], -sl
    1eec:	84200e42 	strthi	r0, [r0], #-3650	; 0xfffff1be
    1ef0:	86078508 	strhi	r8, [r7], -r8, lsl #10
    1ef4:	88058706 	stmdahi	r5, {r1, r2, r8, r9, sl, pc}
    1ef8:	8a038904 	bhi	e4310 <__HEAP_SIZE+0xe3310>
    1efc:	44018e02 	strmi	r8, [r1], #-3586	; 0xfffff1fe
    1f00:	0207f00e 	andeq	pc, r7, #14
    1f04:	200e0a5b 	andcs	r0, lr, fp, asr sl
    1f08:	00000b42 	andeq	r0, r0, r2, asr #22
    1f0c:	0000000c 	andeq	r0, r0, ip
    1f10:	00001df0 	strdeq	r1, [r0], -r0
    1f14:	10004af4 	strdne	r4, [r0], -r4	; <UNPREDICTABLE>
    1f18:	00000004 	andeq	r0, r0, r4
    1f1c:	00000024 	andeq	r0, r0, r4, lsr #32
    1f20:	00001df0 	strdeq	r1, [r0], -r0
    1f24:	10004af8 	strdne	r4, [r0], -r8
    1f28:	00000066 	andeq	r0, r0, r6, rrx
    1f2c:	84140e41 	ldrhi	r0, [r4], #-3649	; 0xfffff1bf
    1f30:	86048505 	strhi	r8, [r4], -r5, lsl #10
    1f34:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
    1f38:	f80e4201 			; <UNDEFINED> instruction: 0xf80e4201
    1f3c:	0e0a6603 	cfmadd32eq	mvax0, mvfx6, mvfx10, mvfx3
    1f40:	000b4114 	andeq	r4, fp, r4, lsl r1
    1f44:	00000018 	andeq	r0, r0, r8, lsl r0
    1f48:	00001df0 	strdeq	r1, [r0], -r0
    1f4c:	10004b60 	andne	r4, r0, r0, ror #22
    1f50:	00000012 	andeq	r0, r0, r2, lsl r0
    1f54:	84040e41 	strhi	r0, [r4], #-3649	; 0xfffff1bf
    1f58:	0ec44701 	cdpeq	7, 12, cr4, cr4, cr1, {0}
    1f5c:	00000000 	andeq	r0, r0, r0
    1f60:	00000018 	andeq	r0, r0, r8, lsl r0
    1f64:	00001df0 	strdeq	r1, [r0], -r0
    1f68:	10004b74 	andne	r4, r0, r4, ror fp
    1f6c:	00000044 	andeq	r0, r0, r4, asr #32
    1f70:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    1f74:	86038504 	strhi	r8, [r3], -r4, lsl #10
    1f78:	00018e02 	andeq	r8, r1, r2, lsl #28
    1f7c:	0000000c 	andeq	r0, r0, ip
    1f80:	00001df0 	strdeq	r1, [r0], -r0
    1f84:	10004bb8 			; <UNDEFINED> instruction: 0x10004bb8
    1f88:	00000012 	andeq	r0, r0, r2, lsl r0
    1f8c:	0000000c 	andeq	r0, r0, ip
    1f90:	00001df0 	strdeq	r1, [r0], -r0
    1f94:	10004bcc 	andne	r4, r0, ip, asr #23
    1f98:	00000002 	andeq	r0, r0, r2
    1f9c:	0000000c 	andeq	r0, r0, ip
    1fa0:	00001df0 	strdeq	r1, [r0], -r0
    1fa4:	10004bd0 	ldrdne	r4, [r0], -r0
    1fa8:	0000000c 	andeq	r0, r0, ip
    1fac:	0000000c 	andeq	r0, r0, ip
    1fb0:	00001df0 	strdeq	r1, [r0], -r0
    1fb4:	10004bdc 	ldrdne	r4, [r0], -ip
    1fb8:	00000034 	andeq	r0, r0, r4, lsr r0
    1fbc:	0000001c 	andeq	r0, r0, ip, lsl r0
    1fc0:	00001df0 	strdeq	r1, [r0], -r0
    1fc4:	10004c10 	andne	r4, r0, r0, lsl ip
    1fc8:	00000018 	andeq	r0, r0, r8, lsl r0
    1fcc:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    1fd0:	41018e02 	tstmi	r1, r2, lsl #28
    1fd4:	0e49180e 	cdpeq	8, 4, cr1, cr9, cr14, {0}
    1fd8:	00000008 	andeq	r0, r0, r8
    1fdc:	0000000c 	andeq	r0, r0, ip
    1fe0:	00001df0 	strdeq	r1, [r0], -r0
    1fe4:	10004c28 	andne	r4, r0, r8, lsr #24
    1fe8:	00000034 	andeq	r0, r0, r4, lsr r0
    1fec:	0000001c 	andeq	r0, r0, ip, lsl r0
    1ff0:	00001df0 	strdeq	r1, [r0], -r0
    1ff4:	10004c5c 	andne	r4, r0, ip, asr ip
    1ff8:	00000018 	andeq	r0, r0, r8, lsl r0
    1ffc:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    2000:	41018e02 	tstmi	r1, r2, lsl #28
    2004:	0e49180e 	cdpeq	8, 4, cr1, cr9, cr14, {0}
    2008:	00000008 	andeq	r0, r0, r8
    200c:	00000020 	andeq	r0, r0, r0, lsr #32
    2010:	00001df0 	strdeq	r1, [r0], -r0
    2014:	10004c74 	andne	r4, r0, r4, ror ip
    2018:	0000007c 	andeq	r0, r0, ip, ror r0
    201c:	84140e41 	ldrhi	r0, [r4], #-3649	; 0xfffff1bf
    2020:	86048505 	strhi	r8, [r4], -r5, lsl #10
    2024:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
    2028:	d00e4301 	andle	r4, lr, r1, lsl #6
    202c:	140e7904 	strne	r7, [lr], #-2308	; 0xfffff6fc
    2030:	00000030 	andeq	r0, r0, r0, lsr r0
    2034:	00001df0 	strdeq	r1, [r0], -r0
    2038:	10004cf0 	strdne	r4, [r0], -r0
    203c:	000002c8 	andeq	r0, r0, r8, asr #5
    2040:	84240e42 	strthi	r0, [r4], #-3650	; 0xfffff1be
    2044:	86088509 	strhi	r8, [r8], -r9, lsl #10
    2048:	88068707 	stmdahi	r6, {r0, r1, r2, r8, r9, sl, pc}
    204c:	8a048905 	bhi	124468 <__RAM_SIZE+0x24468>
    2050:	8e028b03 	vmlahi.f64	d8, d2, d3
    2054:	480e4201 	stmdami	lr, {r0, r9, lr}
    2058:	240e0a64 	strcs	r0, [lr], #-2660	; 0xfffff59c
    205c:	0a710b42 	beq	1c44d6c <__RAM_SIZE+0x1b44d6c>
    2060:	0b42240e 	bleq	108b0a0 <__RAM_SIZE+0xf8b0a0>
    2064:	0000000c 	andeq	r0, r0, ip
    2068:	00001df0 	strdeq	r1, [r0], -r0
    206c:	10004fb8 			; <UNDEFINED> instruction: 0x10004fb8
    2070:	00000004 	andeq	r0, r0, r4
    2074:	0000000c 	andeq	r0, r0, ip
    2078:	00001df0 	strdeq	r1, [r0], -r0
    207c:	10004fbc 			; <UNDEFINED> instruction: 0x10004fbc
    2080:	00000004 	andeq	r0, r0, r4
    2084:	0000000c 	andeq	r0, r0, ip
    2088:	00001df0 	strdeq	r1, [r0], -r0
    208c:	10004fc0 	andne	r4, r0, r0, asr #31
    2090:	00000004 	andeq	r0, r0, r4
    2094:	0000003c 	andeq	r0, r0, ip, lsr r0
    2098:	00001df0 	strdeq	r1, [r0], -r0
    209c:	10004fc4 	andne	r4, r0, r4, asr #31
    20a0:	000002b4 			; <UNDEFINED> instruction: 0x000002b4
    20a4:	841c0e42 	ldrhi	r0, [ip], #-3650	; 0xfffff1be
    20a8:	86068507 	strhi	r8, [r6], -r7, lsl #10
    20ac:	88048705 	stmdahi	r4, {r0, r2, r8, r9, sl, pc}
    20b0:	8e028903 	vmlahi.f16	s16, s4, s6	; <UNPREDICTABLE>
    20b4:	a80e4201 	stmdage	lr, {r0, r9, lr}
    20b8:	0e0a7102 	adfeqe	f7, f2, f2
    20bc:	6b0b421c 	blvs	2d2934 <__RAM_SIZE+0x1d2934>
    20c0:	421c0e0a 	andsmi	r0, ip, #10, 28	; 0xa0
    20c4:	0a48020b 	beq	12028f8 <__RAM_SIZE+0x11028f8>
    20c8:	0b421c0e 	bleq	1089108 <__RAM_SIZE+0xf89108>
    20cc:	1c0e0a5f 			; <UNDEFINED> instruction: 0x1c0e0a5f
    20d0:	00000b42 	andeq	r0, r0, r2, asr #22
    20d4:	0000000c 	andeq	r0, r0, ip
    20d8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    20dc:	7c020001 	stcvc	0, cr0, [r2], {1}
    20e0:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    20e4:	00000018 	andeq	r0, r0, r8, lsl r0
    20e8:	000020d4 	ldrdeq	r2, [r0], -r4
    20ec:	10005424 	andne	r5, r0, r4, lsr #8
    20f0:	0000003c 	andeq	r0, r0, ip, lsr r0
    20f4:	84040e4a 	strhi	r0, [r4], #-3658	; 0xfffff1b6
    20f8:	0ec44901 	vdiveq.f16	s9, s8, s2	; <UNPREDICTABLE>
    20fc:	00000000 	andeq	r0, r0, r0
    2100:	0000001c 	andeq	r0, r0, ip, lsl r0
    2104:	000020d4 	ldrdeq	r2, [r0], -r4
    2108:	10005460 	andne	r5, r0, r0, ror #8
    210c:	00000018 	andeq	r0, r0, r8, lsl r0
    2110:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    2114:	41018e02 	tstmi	r1, r2, lsl #28
    2118:	0e49180e 	cdpeq	8, 4, cr1, cr9, cr14, {0}
    211c:	00000008 	andeq	r0, r0, r8
    2120:	0000000c 	andeq	r0, r0, ip
    2124:	000020d4 	ldrdeq	r2, [r0], -r4
    2128:	10005478 	andne	r5, r0, r8, ror r4
    212c:	00000002 	andeq	r0, r0, r2
    2130:	00000028 	andeq	r0, r0, r8, lsr #32
    2134:	000020d4 	ldrdeq	r2, [r0], -r4
    2138:	1000547c 	andne	r5, r0, ip, ror r4
    213c:	000002ca 	andeq	r0, r0, sl, asr #5
    2140:	841c0e42 	ldrhi	r0, [ip], #-3650	; 0xfffff1be
    2144:	86068507 	strhi	r8, [r6], -r7, lsl #10
    2148:	88048705 	stmdahi	r4, {r0, r2, r8, r9, sl, pc}
    214c:	8e028903 	vmlahi.f16	s16, s4, s6	; <UNPREDICTABLE>
    2150:	300e4301 	andcc	r4, lr, r1, lsl #6
    2154:	1c0e0a6a 			; <UNDEFINED> instruction: 0x1c0e0a6a
    2158:	00000b42 	andeq	r0, r0, r2, asr #22
    215c:	00000018 	andeq	r0, r0, r8, lsl r0
    2160:	000020d4 	ldrdeq	r2, [r0], -r4
    2164:	10005748 	andne	r5, r0, r8, asr #14
    2168:	00000030 	andeq	r0, r0, r0, lsr r0
    216c:	8e040e49 	cdphi	14, 0, cr0, cr4, cr9, {2}
    2170:	180e4101 	stmdane	lr, {r0, r8, lr}
    2174:	00040e4c 	andeq	r0, r4, ip, asr #28
    2178:	00000014 	andeq	r0, r0, r4, lsl r0
    217c:	000020d4 	ldrdeq	r2, [r0], -r4
    2180:	10005778 	andne	r5, r0, r8, ror r7
    2184:	0000000a 	andeq	r0, r0, sl
    2188:	83080e41 	movwhi	r0, #36417	; 0x8e41
    218c:	00018e02 	andeq	r8, r1, r2, lsl #28
    2190:	00000014 	andeq	r0, r0, r4, lsl r0
    2194:	000020d4 	ldrdeq	r2, [r0], -r4
    2198:	10005784 	andne	r5, r0, r4, lsl #15
    219c:	00000012 	andeq	r0, r0, r2, lsl r0
    21a0:	83080e41 	movwhi	r0, #36417	; 0x8e41
    21a4:	00018e02 	andeq	r8, r1, r2, lsl #28
    21a8:	00000014 	andeq	r0, r0, r4, lsl r0
    21ac:	000020d4 	ldrdeq	r2, [r0], -r4
    21b0:	00000000 	andeq	r0, r0, r0
    21b4:	00000006 	andeq	r0, r0, r6
    21b8:	83080e41 	movwhi	r0, #36417	; 0x8e41
    21bc:	00018e02 	andeq	r8, r1, r2, lsl #28
    21c0:	00000014 	andeq	r0, r0, r4, lsl r0
    21c4:	000020d4 	ldrdeq	r2, [r0], -r4
    21c8:	00000000 	andeq	r0, r0, r0
    21cc:	00000006 	andeq	r0, r0, r6
    21d0:	83080e41 	movwhi	r0, #36417	; 0x8e41
    21d4:	00018e02 	andeq	r8, r1, r2, lsl #28
    21d8:	0000000c 	andeq	r0, r0, ip
    21dc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    21e0:	7c020001 	stcvc	0, cr0, [r2], {1}
    21e4:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    21e8:	00000014 	andeq	r0, r0, r4, lsl r0
    21ec:	000021d8 	ldrdeq	r2, [r0], -r8
    21f0:	1000579c 	mulne	r0, ip, r7
    21f4:	0000000e 	andeq	r0, r0, lr
    21f8:	83080e42 	movwhi	r0, #36418	; 0x8e42
    21fc:	00018e02 	andeq	r8, r1, r2, lsl #28
    2200:	0000000c 	andeq	r0, r0, ip
    2204:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    2208:	7c020001 	stcvc	0, cr0, [r2], {1}
    220c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    2210:	00000018 	andeq	r0, r0, r8, lsl r0
    2214:	00002200 	andeq	r2, r0, r0, lsl #4
    2218:	00000000 	andeq	r0, r0, r0
    221c:	00000030 	andeq	r0, r0, r0, lsr r0
    2220:	83100e41 	tsthi	r0, #1040	; 0x410
    2224:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    2228:	00018e02 	andeq	r8, r1, r2, lsl #28
    222c:	0000001c 	andeq	r0, r0, ip, lsl r0
    2230:	00002200 	andeq	r2, r0, r0, lsl #4
    2234:	00000000 	andeq	r0, r0, r0
    2238:	0000004c 	andeq	r0, r0, ip, asr #32
    223c:	83180e42 	tsthi	r8, #1056	; 0x420
    2240:	85058406 	strhi	r8, [r5, #-1030]	; 0xfffffbfa
    2244:	87038604 	strhi	r8, [r3, -r4, lsl #12]
    2248:	00018e02 	andeq	r8, r1, r2, lsl #28
    224c:	00000024 	andeq	r0, r0, r4, lsr #32
    2250:	00002200 	andeq	r2, r0, r0, lsl #4
    2254:	00000000 	andeq	r0, r0, r0
    2258:	00000056 	andeq	r0, r0, r6, asr r0
    225c:	83100e42 	tsthi	r0, #1056	; 0x420
    2260:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    2264:	5c018e02 	stcpl	14, cr8, [r1], {2}
    2268:	c4c5ce0a 	strbgt	ip, [r5], #3594	; 0xe0a
    226c:	42000ec3 	andmi	r0, r0, #3120	; 0xc30
    2270:	0000000b 	andeq	r0, r0, fp
    2274:	00000020 	andeq	r0, r0, r0, lsr #32
    2278:	00002200 	andeq	r2, r0, r0, lsl #4
    227c:	00000000 	andeq	r0, r0, r0
    2280:	00000064 	andeq	r0, r0, r4, rrx
    2284:	83100e45 	tsthi	r0, #1104	; 0x450
    2288:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    228c:	6a018e02 	bvs	65a9c <__HEAP_SIZE+0x64a9c>
    2290:	c4c3000e 	strbgt	r0, [r3], #14
    2294:	0000cec5 	andeq	ip, r0, r5, asr #29
    2298:	00000024 	andeq	r0, r0, r4, lsr #32
    229c:	00002200 	andeq	r2, r0, r0, lsl #4
    22a0:	100057ac 	andne	r5, r0, ip, lsr #15
    22a4:	0000005c 	andeq	r0, r0, ip, asr r0
    22a8:	83100e41 	tsthi	r0, #1040	; 0x410
    22ac:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    22b0:	5d018e02 	stcpl	14, cr8, [r1, #-8]
    22b4:	c4c5ce0a 	strbgt	ip, [r5], #3594	; 0xe0a
    22b8:	42000ec3 	andmi	r0, r0, #3120	; 0xc30
    22bc:	0000000b 	andeq	r0, r0, fp
    22c0:	00000018 	andeq	r0, r0, r8, lsl r0
    22c4:	00002200 	andeq	r2, r0, r0, lsl #4
    22c8:	00000000 	andeq	r0, r0, r0
    22cc:	00000054 	andeq	r0, r0, r4, asr r0
    22d0:	84100e43 	ldrhi	r0, [r0], #-3651	; 0xfffff1bd
    22d4:	86038504 	strhi	r8, [r3], -r4, lsl #10
    22d8:	00018e02 	andeq	r8, r1, r2, lsl #28
    22dc:	00000018 	andeq	r0, r0, r8, lsl r0
    22e0:	00002200 	andeq	r2, r0, r0, lsl #4
    22e4:	00000000 	andeq	r0, r0, r0
    22e8:	00000038 	andeq	r0, r0, r8, lsr r0
    22ec:	83100e41 	tsthi	r0, #1040	; 0x410
    22f0:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    22f4:	00018e02 	andeq	r8, r1, r2, lsl #28
    22f8:	00000018 	andeq	r0, r0, r8, lsl r0
    22fc:	00002200 	andeq	r2, r0, r0, lsl #4
    2300:	00000000 	andeq	r0, r0, r0
    2304:	00000068 	andeq	r0, r0, r8, rrx
    2308:	83100e41 	tsthi	r0, #1040	; 0x410
    230c:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    2310:	00018e02 	andeq	r8, r1, r2, lsl #28
    2314:	0000000c 	andeq	r0, r0, ip
    2318:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    231c:	7c020001 	stcvc	0, cr0, [r2], {1}
    2320:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    2324:	00000018 	andeq	r0, r0, r8, lsl r0
    2328:	00002314 	andeq	r2, r0, r4, lsl r3
    232c:	10005808 	andne	r5, r0, r8, lsl #16
    2330:	0000002c 	andeq	r0, r0, ip, lsr #32
    2334:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    2338:	86038504 	strhi	r8, [r3], -r4, lsl #10
    233c:	00018e02 	andeq	r8, r1, r2, lsl #28
    2340:	0000000c 	andeq	r0, r0, ip
    2344:	00002314 	andeq	r2, r0, r4, lsl r3
    2348:	10005834 	andne	r5, r0, r4, lsr r8
    234c:	00000004 	andeq	r0, r0, r4


.\build\gcc/an505-qemu.elf:     file format elf32-littlearm


Disassembly of section .text:

10000000 <__Vectors>:
10000000:	38100000 	ldmdacc	r0, {}	; <UNPREDICTABLE>
10000004:	10003861 	andne	r3, r0, r1, ror #16
10000008:	100038b5 			; <UNDEFINED> instruction: 0x100038b5
1000000c:	100038d1 	ldrdne	r3, [r0], -r1
10000010:	100038b5 			; <UNDEFINED> instruction: 0x100038b5
10000014:	100038b5 			; <UNDEFINED> instruction: 0x100038b5
10000018:	100038b5 			; <UNDEFINED> instruction: 0x100038b5
1000001c:	100038b5 			; <UNDEFINED> instruction: 0x100038b5
	...
1000002c:	10003829 	andne	r3, r0, r9, lsr #16
10000030:	100038b5 			; <UNDEFINED> instruction: 0x100038b5
10000034:	00000000 	andeq	r0, r0, r0
10000038:	100037e1 	andne	r3, r0, r1, ror #15
1000003c:	10003669 	andne	r3, r0, r9, ror #12
10000040:	100038b5 			; <UNDEFINED> instruction: 0x100038b5
10000044:	100038b5 			; <UNDEFINED> instruction: 0x100038b5
10000048:	100038b5 			; <UNDEFINED> instruction: 0x100038b5
1000004c:	100038b5 			; <UNDEFINED> instruction: 0x100038b5
10000050:	100038b5 			; <UNDEFINED> instruction: 0x100038b5
10000054:	100038b5 			; <UNDEFINED> instruction: 0x100038b5
10000058:	100038b5 			; <UNDEFINED> instruction: 0x100038b5
1000005c:	100038b5 			; <UNDEFINED> instruction: 0x100038b5
10000060:	100038b5 			; <UNDEFINED> instruction: 0x100038b5
10000064:	100038b5 			; <UNDEFINED> instruction: 0x100038b5
	...

100007c0 <__do_global_dtors_aux>:
100007c0:	b510      	push	{r4, lr}
100007c2:	4c05      	ldr	r4, [pc, #20]	; (100007d8 <__do_global_dtors_aux+0x18>)
100007c4:	7823      	ldrb	r3, [r4, #0]
100007c6:	b933      	cbnz	r3, 100007d6 <__do_global_dtors_aux+0x16>
100007c8:	4b04      	ldr	r3, [pc, #16]	; (100007dc <__do_global_dtors_aux+0x1c>)
100007ca:	b113      	cbz	r3, 100007d2 <__do_global_dtors_aux+0x12>
100007cc:	4804      	ldr	r0, [pc, #16]	; (100007e0 <__do_global_dtors_aux+0x20>)
100007ce:	e000      	b.n	100007d2 <__do_global_dtors_aux+0x12>
100007d0:	bf00      	nop
100007d2:	2301      	movs	r3, #1
100007d4:	7023      	strb	r3, [r4, #0]
100007d6:	bd10      	pop	{r4, pc}
100007d8:	38000448 	stmdacc	r0, {r3, r6, sl}
100007dc:	00000000 	andeq	r0, r0, r0
100007e0:	10005d9c 	mulne	r0, ip, sp

100007e4 <frame_dummy>:
100007e4:	b508      	push	{r3, lr}
100007e6:	4b03      	ldr	r3, [pc, #12]	; (100007f4 <frame_dummy+0x10>)
100007e8:	b11b      	cbz	r3, 100007f2 <frame_dummy+0xe>
100007ea:	4903      	ldr	r1, [pc, #12]	; (100007f8 <frame_dummy+0x14>)
100007ec:	4803      	ldr	r0, [pc, #12]	; (100007fc <frame_dummy+0x18>)
100007ee:	e000      	b.n	100007f2 <frame_dummy+0xe>
100007f0:	bf00      	nop
100007f2:	bd08      	pop	{r3, pc}
100007f4:	00000000 	andeq	r0, r0, r0
100007f8:	3800044c 	stmdacc	r0, {r2, r3, r6, sl}
100007fc:	10005d9c 	mulne	r0, ip, sp

10000800 <main_task_init>:
            counter++;
        }
    }
}

static void main_task_init(void) {
10000800:	b500      	push	{lr}
10000802:	b083      	sub	sp, #12
    static TaskHandle_t main_task = NULL;
    BaseType_t xReturn = pdPASS;
    xReturn = xTaskCreate(main_task_entry, "main_task", 2048, NULL, 1U, &main_task);
10000804:	4b0b      	ldr	r3, [pc, #44]	; (10000834 <main_task_init+0x34>)
10000806:	9301      	str	r3, [sp, #4]
10000808:	2301      	movs	r3, #1
1000080a:	9300      	str	r3, [sp, #0]
1000080c:	2300      	movs	r3, #0
1000080e:	f44f 6200 	mov.w	r2, #2048	; 0x800
10000812:	4909      	ldr	r1, [pc, #36]	; (10000838 <main_task_init+0x38>)
10000814:	4809      	ldr	r0, [pc, #36]	; (1000083c <main_task_init+0x3c>)
10000816:	f001 ffed 	bl	100027f4 <xTaskCreate>
    if (xReturn == pdPASS) {
1000081a:	2801      	cmp	r0, #1
1000081c:	d006      	beq.n	1000082c <main_task_init+0x2c>
1000081e:	4601      	mov	r1, r0
        vTaskStartScheduler();
    } else {
        printf("main task create failed(%d).\r\n", (int)(xReturn));
10000820:	4807      	ldr	r0, [pc, #28]	; (10000840 <main_task_init+0x40>)
10000822:	f001 f997 	bl	10001b54 <printf>
    }
}
10000826:	b003      	add	sp, #12
10000828:	f85d fb04 	ldr.w	pc, [sp], #4
        vTaskStartScheduler();
1000082c:	f002 fb70 	bl	10002f10 <vTaskStartScheduler>
10000830:	e7f9      	b.n	10000826 <main_task_init+0x26>
10000832:	bf00      	nop
10000834:	38000464 	stmdacc	r0, {r2, r5, r6, sl}
10000838:	1000580c 	andne	r5, r0, ip, lsl #16
1000083c:	1000098d 	andne	r0, r0, sp, lsl #19
10000840:	10005818 	andne	r5, r0, r8, lsl r8

10000844 <fault_unalign_trigger>:
void fault_unalign_trigger(void) {
10000844:	b530      	push	{r4, r5, lr}
10000846:	b083      	sub	sp, #12
    volatile int value = 0;
10000848:	2400      	movs	r4, #0
1000084a:	9401      	str	r4, [sp, #4]
    SCB->CCR |= SCB_CCR_UNALIGN_TRP_Msk;
1000084c:	4a0e      	ldr	r2, [pc, #56]	; (10000888 <fault_unalign_trigger+0x44>)
1000084e:	6953      	ldr	r3, [r2, #20]
10000850:	f043 0308 	orr.w	r3, r3, #8
10000854:	6153      	str	r3, [r2, #20]
    value = *addr;
10000856:	6823      	ldr	r3, [r4, #0]
10000858:	9301      	str	r3, [sp, #4]
    printf("addr:0x%02X-value:0x%08X\r\n", (int)addr, value);
1000085a:	9a01      	ldr	r2, [sp, #4]
1000085c:	4d0b      	ldr	r5, [pc, #44]	; (1000088c <fault_unalign_trigger+0x48>)
1000085e:	4621      	mov	r1, r4
10000860:	4628      	mov	r0, r5
10000862:	f001 f977 	bl	10001b54 <printf>
    value = *addr;
10000866:	6863      	ldr	r3, [r4, #4]
10000868:	9301      	str	r3, [sp, #4]
    printf("addr:0x%02X-value:0x%08X\r\n", (int)addr, value);
1000086a:	9a01      	ldr	r2, [sp, #4]
1000086c:	2104      	movs	r1, #4
1000086e:	4628      	mov	r0, r5
10000870:	f001 f970 	bl	10001b54 <printf>
    value = *addr;
10000874:	f8d4 3003 	ldr.w	r3, [r4, #3]
10000878:	9301      	str	r3, [sp, #4]
    printf("addr:0x%02X-value:0x%08X\r\n", (int)addr, value);
1000087a:	9a01      	ldr	r2, [sp, #4]
1000087c:	2103      	movs	r1, #3
1000087e:	4628      	mov	r0, r5
10000880:	f001 f968 	bl	10001b54 <printf>
}
10000884:	b003      	add	sp, #12
10000886:	bd30      	pop	{r4, r5, pc}
10000888:	e000ed00 	and	lr, r0, r0, lsl #26
1000088c:	10005838 	andne	r5, r0, r8, lsr r8

10000890 <dump_callstack>:
void dump_callstack(void) {
10000890:	b530      	push	{r4, r5, lr}
10000892:	b0c1      	sub	sp, #260	; 0x104
    unsigned int buffer[FD_STACK_DUMP_DEPTH_MAX] = {0};
10000894:	f44f 7280 	mov.w	r2, #256	; 0x100
10000898:	2100      	movs	r1, #0
1000089a:	4668      	mov	r0, sp
1000089c:	f003 f8b8 	bl	10003a10 <memset>
    unsigned int point = fault_dump_bm_stack_point();
100008a0:	f001 fb00 	bl	10001ea4 <fault_dump_bm_stack_point>
100008a4:	4604      	mov	r4, r0
    unsigned int start = fault_dump_bm_stack_start();
100008a6:	f001 fb01 	bl	10001eac <fault_dump_bm_stack_start>
100008aa:	4603      	mov	r3, r0
    int count = fault_dump_callstack(buffer, FD_STACK_DUMP_DEPTH_MAX, (unsigned int*)point, (unsigned int*)start);
100008ac:	4622      	mov	r2, r4
100008ae:	2140      	movs	r1, #64	; 0x40
100008b0:	4668      	mov	r0, sp
100008b2:	f001 f9f7 	bl	10001ca4 <fault_dump_callstack>
    if (count < 0) {
100008b6:	1e05      	subs	r5, r0, #0
100008b8:	db04      	blt.n	100008c4 <dump_callstack+0x34>
        printf("CallStack:[ ");
100008ba:	480b      	ldr	r0, [pc, #44]	; (100008e8 <dump_callstack+0x58>)
100008bc:	f001 f94a 	bl	10001b54 <printf>
        for (int i = 0; i < count; i++) {
100008c0:	2400      	movs	r4, #0
100008c2:	e00a      	b.n	100008da <dump_callstack+0x4a>
        printf("CallStack dump error: %d\r\n", count);
100008c4:	4629      	mov	r1, r5
100008c6:	4809      	ldr	r0, [pc, #36]	; (100008ec <dump_callstack+0x5c>)
100008c8:	f001 f944 	bl	10001b54 <printf>
100008cc:	e00a      	b.n	100008e4 <dump_callstack+0x54>
            printf("%08X ", buffer[i]);
100008ce:	f85d 1024 	ldr.w	r1, [sp, r4, lsl #2]
100008d2:	4807      	ldr	r0, [pc, #28]	; (100008f0 <dump_callstack+0x60>)
100008d4:	f001 f93e 	bl	10001b54 <printf>
        for (int i = 0; i < count; i++) {
100008d8:	3401      	adds	r4, #1
100008da:	42ac      	cmp	r4, r5
100008dc:	dbf7      	blt.n	100008ce <dump_callstack+0x3e>
        printf("] \r\n");
100008de:	4805      	ldr	r0, [pc, #20]	; (100008f4 <dump_callstack+0x64>)
100008e0:	f001 f958 	bl	10001b94 <puts>
}
100008e4:	b041      	add	sp, #260	; 0x104
100008e6:	bd30      	pop	{r4, r5, pc}
100008e8:	10005870 	andne	r5, r0, r0, ror r8
100008ec:	10005854 	andne	r5, r0, r4, asr r8
100008f0:	10005880 	andne	r5, r0, r0, lsl #17
100008f4:	10005888 	andne	r5, r0, r8, lsl #17

100008f8 <test0>:
void test0(void) {
100008f8:	b508      	push	{r3, lr}
    printf("this is %s.\r\n", __func__);
100008fa:	4904      	ldr	r1, [pc, #16]	; (1000090c <test0+0x14>)
100008fc:	4804      	ldr	r0, [pc, #16]	; (10000910 <test0+0x18>)
100008fe:	f001 f929 	bl	10001b54 <printf>
    dump_callstack();
10000902:	f7ff ffc5 	bl	10000890 <dump_callstack>
    fault_unalign_trigger();
10000906:	f7ff ff9d 	bl	10000844 <fault_unalign_trigger>
}
1000090a:	bd08      	pop	{r3, pc}
1000090c:	100058fc 	strdne	r5, [r0], -ip
10000910:	1000588c 	andne	r5, r0, ip, lsl #17

10000914 <test1>:
void test1(void) {
10000914:	b508      	push	{r3, lr}
    printf("this is %s.\r\n", __func__);
10000916:	4903      	ldr	r1, [pc, #12]	; (10000924 <test1+0x10>)
10000918:	4803      	ldr	r0, [pc, #12]	; (10000928 <test1+0x14>)
1000091a:	f001 f91b 	bl	10001b54 <printf>
    test0();
1000091e:	f7ff ffeb 	bl	100008f8 <test0>
}
10000922:	bd08      	pop	{r3, pc}
10000924:	100058f4 	strdne	r5, [r0], -r4
10000928:	1000588c 	andne	r5, r0, ip, lsl #17

1000092c <test2>:
void test2(void) {
1000092c:	b508      	push	{r3, lr}
    printf("this is %s.\r\n", __func__);
1000092e:	4903      	ldr	r1, [pc, #12]	; (1000093c <test2+0x10>)
10000930:	4803      	ldr	r0, [pc, #12]	; (10000940 <test2+0x14>)
10000932:	f001 f90f 	bl	10001b54 <printf>
    test1();
10000936:	f7ff ffed 	bl	10000914 <test1>
}
1000093a:	bd08      	pop	{r3, pc}
1000093c:	100058ec 	andne	r5, r0, ip, ror #17
10000940:	1000588c 	andne	r5, r0, ip, lsl #17

10000944 <test3>:
void test3(void) {
10000944:	b508      	push	{r3, lr}
    printf("this is %s.\r\n", __func__);
10000946:	4903      	ldr	r1, [pc, #12]	; (10000954 <test3+0x10>)
10000948:	4803      	ldr	r0, [pc, #12]	; (10000958 <test3+0x14>)
1000094a:	f001 f903 	bl	10001b54 <printf>
    test2();
1000094e:	f7ff ffed 	bl	1000092c <test2>
}
10000952:	bd08      	pop	{r3, pc}
10000954:	100058e4 	andne	r5, r0, r4, ror #17
10000958:	1000588c 	andne	r5, r0, ip, lsl #17

1000095c <test4>:
void test4(void) {
1000095c:	b508      	push	{r3, lr}
    printf("this is %s.\r\n", __func__);
1000095e:	4903      	ldr	r1, [pc, #12]	; (1000096c <test4+0x10>)
10000960:	4803      	ldr	r0, [pc, #12]	; (10000970 <test4+0x14>)
10000962:	f001 f8f7 	bl	10001b54 <printf>
    test3();
10000966:	f7ff ffed 	bl	10000944 <test3>
}
1000096a:	bd08      	pop	{r3, pc}
1000096c:	100058dc 	ldrdne	r5, [r0], -ip
10000970:	1000588c 	andne	r5, r0, ip, lsl #17

10000974 <test5>:
void test5(void) {
10000974:	b508      	push	{r3, lr}
    printf("this is %s.\r\n", __func__);
10000976:	4903      	ldr	r1, [pc, #12]	; (10000984 <test5+0x10>)
10000978:	4803      	ldr	r0, [pc, #12]	; (10000988 <test5+0x14>)
1000097a:	f001 f8eb 	bl	10001b54 <printf>
    test4();
1000097e:	f7ff ffed 	bl	1000095c <test4>
}
10000982:	bd08      	pop	{r3, pc}
10000984:	100058d4 	ldrdne	r5, [r0], -r4
10000988:	1000588c 	andne	r5, r0, ip, lsl #17

1000098c <main_task_entry>:
static void main_task_entry(void *parameters) {
1000098c:	b510      	push	{r4, lr}
    int counter = 0;
1000098e:	2400      	movs	r4, #0
10000990:	e001      	b.n	10000996 <main_task_entry+0xa>
            test5();
10000992:	f7ff ffef 	bl	10000974 <test5>
        vTaskDelay(1000);
10000996:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
1000099a:	f002 f8b7 	bl	10002b0c <vTaskDelay>
        printf("hello this is FreeRTOS.\r\n");
1000099e:	4803      	ldr	r0, [pc, #12]	; (100009ac <main_task_entry+0x20>)
100009a0:	f001 f8f8 	bl	10001b94 <puts>
        if (counter >= 3) {
100009a4:	2c02      	cmp	r4, #2
100009a6:	dcf4      	bgt.n	10000992 <main_task_entry+0x6>
            counter++;
100009a8:	3401      	adds	r4, #1
100009aa:	e7f4      	b.n	10000996 <main_task_entry+0xa>
100009ac:	1000589c 	mulne	r0, ip, r8

100009b0 <main>:

int main(void) {
100009b0:	b510      	push	{r4, lr}
    int count = 0;
    uart_init();
100009b2:	f001 f8ff 	bl	10001bb4 <uart_init>

    printf("Start\r\n");
100009b6:	4807      	ldr	r0, [pc, #28]	; (100009d4 <main+0x24>)
100009b8:	f001 f8ec 	bl	10001b94 <puts>
    fault_dump_init();
100009bc:	f001 f94a 	bl	10001c54 <fault_dump_init>
    main_task_init();
100009c0:	f7ff ff1e 	bl	10000800 <main_task_init>
    int count = 0;
100009c4:	2100      	movs	r1, #0

    while (1) {
        __NOP();
100009c6:	bf00      	nop
        printf("hello world - %d.\r\n", count++);
100009c8:	1c4c      	adds	r4, r1, #1
100009ca:	4803      	ldr	r0, [pc, #12]	; (100009d8 <main+0x28>)
100009cc:	f001 f8c2 	bl	10001b54 <printf>
100009d0:	4621      	mov	r1, r4
100009d2:	e7f8      	b.n	100009c6 <main+0x16>
100009d4:	100058b8 			; <UNDEFINED> instruction: 0x100058b8
100009d8:	100058c0 	andne	r5, r0, r0, asr #17

100009dc <SystemInit>:
 *----------------------------------------------------------------------------*/
void SystemInit (void)
{

#if defined (__VTOR_PRESENT) && (__VTOR_PRESENT == 1U)
  SCB->VTOR = (uint32_t) &(__VECTOR_TABLE[0]);
100009dc:	4b06      	ldr	r3, [pc, #24]	; (100009f8 <SystemInit+0x1c>)
100009de:	4a07      	ldr	r2, [pc, #28]	; (100009fc <SystemInit+0x20>)
100009e0:	609a      	str	r2, [r3, #8]
#endif

#if defined (__FPU_USED) && (__FPU_USED == 1U)
  SCB->CPACR |= ((3U << 10U*2U) |           /* enable CP10 Full Access */
100009e2:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
100009e6:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
100009ea:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88

#if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
  TZ_SAU_Setup();
#endif

  SystemCoreClock = SYSTEM_CLOCK;
100009ee:	4b04      	ldr	r3, [pc, #16]	; (10000a00 <SystemInit+0x24>)
100009f0:	4a04      	ldr	r2, [pc, #16]	; (10000a04 <SystemInit+0x28>)
100009f2:	601a      	str	r2, [r3, #0]
}
100009f4:	4770      	bx	lr
100009f6:	bf00      	nop
100009f8:	e000ed00 	and	lr, r0, r0, lsl #26
100009fc:	10000000 	andne	r0, r0, r0
10000a00:	38000000 	stmdacc	r0, {}	; <UNPREDICTABLE>
10000a04:	017d7840 	cmneq	sp, r0, asr #16

10000a08 <_out_null>:

// internal null output
static inline void _out_null(char character, void* buffer, size_t idx, size_t maxlen)
{
  (void)character; (void)buffer; (void)idx; (void)maxlen;
}
10000a08:	4770      	bx	lr

10000a0a <_atoi>:
}


// internal ASCII string to unsigned int conversion
static unsigned int _atoi(const char** str)
{
10000a0a:	4601      	mov	r1, r0
  unsigned int i = 0U;
10000a0c:	2000      	movs	r0, #0
  while (_is_digit(**str)) {
10000a0e:	e007      	b.n	10000a20 <_atoi+0x16>
    i = i * 10U + (unsigned int)(*((*str)++) - '0');
10000a10:	eb00 0080 	add.w	r0, r0, r0, lsl #2
10000a14:	1c53      	adds	r3, r2, #1
10000a16:	600b      	str	r3, [r1, #0]
10000a18:	7813      	ldrb	r3, [r2, #0]
10000a1a:	eb03 0040 	add.w	r0, r3, r0, lsl #1
10000a1e:	3830      	subs	r0, #48	; 0x30
  while (_is_digit(**str)) {
10000a20:	680a      	ldr	r2, [r1, #0]
10000a22:	7813      	ldrb	r3, [r2, #0]
  return (ch >= '0') && (ch <= '9');
10000a24:	3b30      	subs	r3, #48	; 0x30
10000a26:	b2db      	uxtb	r3, r3
  while (_is_digit(**str)) {
10000a28:	2b09      	cmp	r3, #9
10000a2a:	d9f1      	bls.n	10000a10 <_atoi+0x6>
  }
  return i;
}
10000a2c:	4770      	bx	lr

10000a2e <_out_rev>:


// output the specified string in reverse, taking care of any zero-padding
static size_t _out_rev(out_fct_type out, char* buffer, size_t idx, size_t maxlen, const char* buf, size_t len, unsigned int width, unsigned int flags)
{
10000a2e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10000a32:	b083      	sub	sp, #12
10000a34:	4605      	mov	r5, r0
10000a36:	460e      	mov	r6, r1
10000a38:	4693      	mov	fp, r2
10000a3a:	461f      	mov	r7, r3
10000a3c:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
10000a40:	9c0d      	ldr	r4, [sp, #52]	; 0x34
10000a42:	f8dd 9038 	ldr.w	r9, [sp, #56]	; 0x38
  const size_t start_idx = idx;

  // pad spaces up to given width
  if (!(flags & FLAGS_LEFT) && !(flags & FLAGS_ZEROPAD)) {
10000a46:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
10000a48:	f013 0f03 	tst.w	r3, #3
10000a4c:	d119      	bne.n	10000a82 <_out_rev+0x54>
    for (size_t i = len; i < width; i++) {
10000a4e:	46a0      	mov	r8, r4
10000a50:	9201      	str	r2, [sp, #4]
10000a52:	45c8      	cmp	r8, r9
10000a54:	d209      	bcs.n	10000a6a <_out_rev+0x3c>
      out(' ', buffer, idx++, maxlen);
10000a56:	f102 0b01 	add.w	fp, r2, #1
10000a5a:	463b      	mov	r3, r7
10000a5c:	4631      	mov	r1, r6
10000a5e:	2020      	movs	r0, #32
10000a60:	47a8      	blx	r5
    for (size_t i = len; i < width; i++) {
10000a62:	f108 0801 	add.w	r8, r8, #1
      out(' ', buffer, idx++, maxlen);
10000a66:	465a      	mov	r2, fp
10000a68:	e7f3      	b.n	10000a52 <_out_rev+0x24>
10000a6a:	f8dd b004 	ldr.w	fp, [sp, #4]
10000a6e:	e008      	b.n	10000a82 <_out_rev+0x54>
    }
  }

  // reverse string
  while (len) {
    out(buf[--len], buffer, idx++, maxlen);
10000a70:	3c01      	subs	r4, #1
10000a72:	f102 0801 	add.w	r8, r2, #1
10000a76:	463b      	mov	r3, r7
10000a78:	4631      	mov	r1, r6
10000a7a:	f81a 0004 	ldrb.w	r0, [sl, r4]
10000a7e:	47a8      	blx	r5
10000a80:	4642      	mov	r2, r8
  while (len) {
10000a82:	2c00      	cmp	r4, #0
10000a84:	d1f4      	bne.n	10000a70 <_out_rev+0x42>
  }

  // append pad spaces up to given width
  if (flags & FLAGS_LEFT) {
10000a86:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
10000a88:	f013 0f02 	tst.w	r3, #2
10000a8c:	d103      	bne.n	10000a96 <_out_rev+0x68>
      out(' ', buffer, idx++, maxlen);
    }
  }

  return idx;
}
10000a8e:	4610      	mov	r0, r2
10000a90:	b003      	add	sp, #12
10000a92:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    while (idx - start_idx < width) {
10000a96:	eba2 030b 	sub.w	r3, r2, fp
10000a9a:	454b      	cmp	r3, r9
10000a9c:	d2f7      	bcs.n	10000a8e <_out_rev+0x60>
      out(' ', buffer, idx++, maxlen);
10000a9e:	1c54      	adds	r4, r2, #1
10000aa0:	463b      	mov	r3, r7
10000aa2:	4631      	mov	r1, r6
10000aa4:	2020      	movs	r0, #32
10000aa6:	47a8      	blx	r5
10000aa8:	4622      	mov	r2, r4
10000aaa:	e7f4      	b.n	10000a96 <_out_rev+0x68>

10000aac <_ntoa_format>:


// internal itoa format
static size_t _ntoa_format(out_fct_type out, char* buffer, size_t idx, size_t maxlen, char* buf, size_t len, bool negative, unsigned int base, unsigned int prec, unsigned int width, unsigned int flags)
{
10000aac:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
10000ab0:	b085      	sub	sp, #20
10000ab2:	9d0c      	ldr	r5, [sp, #48]	; 0x30
10000ab4:	9c0d      	ldr	r4, [sp, #52]	; 0x34
10000ab6:	f89d 9038 	ldrb.w	r9, [sp, #56]	; 0x38
10000aba:	f8dd 803c 	ldr.w	r8, [sp, #60]	; 0x3c
10000abe:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
10000ac2:	9f11      	ldr	r7, [sp, #68]	; 0x44
10000ac4:	9e12      	ldr	r6, [sp, #72]	; 0x48
  // pad leading zeros
  if (!(flags & FLAGS_LEFT)) {
10000ac6:	f016 0f02 	tst.w	r6, #2
10000aca:	d121      	bne.n	10000b10 <_ntoa_format+0x64>
    if (width && (flags & FLAGS_ZEROPAD) && (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
10000acc:	b17f      	cbz	r7, 10000aee <_ntoa_format+0x42>
10000ace:	f016 0f01 	tst.w	r6, #1
10000ad2:	d00c      	beq.n	10000aee <_ntoa_format+0x42>
10000ad4:	f1b9 0f00 	cmp.w	r9, #0
10000ad8:	d102      	bne.n	10000ae0 <_ntoa_format+0x34>
10000ada:	f016 0f0c 	tst.w	r6, #12
10000ade:	d006      	beq.n	10000aee <_ntoa_format+0x42>
      width--;
10000ae0:	3f01      	subs	r7, #1
10000ae2:	e004      	b.n	10000aee <_ntoa_format+0x42>
    }
    while ((len < prec) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
      buf[len++] = '0';
10000ae4:	f04f 0c30 	mov.w	ip, #48	; 0x30
10000ae8:	f805 c004 	strb.w	ip, [r5, r4]
10000aec:	3401      	adds	r4, #1
    while ((len < prec) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
10000aee:	4574      	cmp	r4, lr
10000af0:	d201      	bcs.n	10000af6 <_ntoa_format+0x4a>
10000af2:	2c1f      	cmp	r4, #31
10000af4:	d9f6      	bls.n	10000ae4 <_ntoa_format+0x38>
    }
    while ((flags & FLAGS_ZEROPAD) && (len < width) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
10000af6:	f016 0f01 	tst.w	r6, #1
10000afa:	d009      	beq.n	10000b10 <_ntoa_format+0x64>
10000afc:	42bc      	cmp	r4, r7
10000afe:	d207      	bcs.n	10000b10 <_ntoa_format+0x64>
10000b00:	2c1f      	cmp	r4, #31
10000b02:	d805      	bhi.n	10000b10 <_ntoa_format+0x64>
      buf[len++] = '0';
10000b04:	f04f 0c30 	mov.w	ip, #48	; 0x30
10000b08:	f805 c004 	strb.w	ip, [r5, r4]
10000b0c:	3401      	adds	r4, #1
10000b0e:	e7f2      	b.n	10000af6 <_ntoa_format+0x4a>
    }
  }

  // handle hash
  if (flags & FLAGS_HASH) {
10000b10:	f016 0f10 	tst.w	r6, #16
10000b14:	d017      	beq.n	10000b46 <_ntoa_format+0x9a>
    if (!(flags & FLAGS_PRECISION) && len && ((len == prec) || (len == width))) {
10000b16:	f416 6f80 	tst.w	r6, #1024	; 0x400
10000b1a:	d104      	bne.n	10000b26 <_ntoa_format+0x7a>
10000b1c:	b11c      	cbz	r4, 10000b26 <_ntoa_format+0x7a>
10000b1e:	4574      	cmp	r4, lr
10000b20:	d024      	beq.n	10000b6c <_ntoa_format+0xc0>
10000b22:	42bc      	cmp	r4, r7
10000b24:	d022      	beq.n	10000b6c <_ntoa_format+0xc0>
      len--;
      if (len && (base == 16U)) {
        len--;
      }
    }
    if ((base == 16U) && !(flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
10000b26:	f1b8 0f10 	cmp.w	r8, #16
10000b2a:	d02b      	beq.n	10000b84 <_ntoa_format+0xd8>
      buf[len++] = 'x';
    }
    else if ((base == 16U) && (flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
10000b2c:	f1b8 0f10 	cmp.w	r8, #16
10000b30:	d033      	beq.n	10000b9a <_ntoa_format+0xee>
      buf[len++] = 'X';
    }
    else if ((base == 2U) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
10000b32:	f1b8 0f02 	cmp.w	r8, #2
10000b36:	d03b      	beq.n	10000bb0 <_ntoa_format+0x104>
      buf[len++] = 'b';
    }
    if (len < PRINTF_NTOA_BUFFER_SIZE) {
10000b38:	2c1f      	cmp	r4, #31
10000b3a:	d804      	bhi.n	10000b46 <_ntoa_format+0x9a>
      buf[len++] = '0';
10000b3c:	f04f 0c30 	mov.w	ip, #48	; 0x30
10000b40:	f805 c004 	strb.w	ip, [r5, r4]
10000b44:	3401      	adds	r4, #1
    }
  }

  if (len < PRINTF_NTOA_BUFFER_SIZE) {
10000b46:	2c1f      	cmp	r4, #31
10000b48:	d807      	bhi.n	10000b5a <_ntoa_format+0xae>
    if (negative) {
10000b4a:	f1b9 0f00 	cmp.w	r9, #0
10000b4e:	d037      	beq.n	10000bc0 <_ntoa_format+0x114>
      buf[len++] = '-';
10000b50:	f04f 0c2d 	mov.w	ip, #45	; 0x2d
10000b54:	f805 c004 	strb.w	ip, [r5, r4]
10000b58:	3401      	adds	r4, #1
    else if (flags & FLAGS_SPACE) {
      buf[len++] = ' ';
    }
  }

  return _out_rev(out, buffer, idx, maxlen, buf, len, width, flags);
10000b5a:	9603      	str	r6, [sp, #12]
10000b5c:	9702      	str	r7, [sp, #8]
10000b5e:	9401      	str	r4, [sp, #4]
10000b60:	9500      	str	r5, [sp, #0]
10000b62:	f7ff ff64 	bl	10000a2e <_out_rev>
}
10000b66:	b005      	add	sp, #20
10000b68:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
      if (len && (base == 16U)) {
10000b6c:	f1b4 0c01 	subs.w	ip, r4, #1
10000b70:	d006      	beq.n	10000b80 <_ntoa_format+0xd4>
10000b72:	f1b8 0f10 	cmp.w	r8, #16
10000b76:	d001      	beq.n	10000b7c <_ntoa_format+0xd0>
      len--;
10000b78:	4664      	mov	r4, ip
10000b7a:	e7d4      	b.n	10000b26 <_ntoa_format+0x7a>
        len--;
10000b7c:	3c02      	subs	r4, #2
10000b7e:	e7d2      	b.n	10000b26 <_ntoa_format+0x7a>
      len--;
10000b80:	4664      	mov	r4, ip
10000b82:	e7d0      	b.n	10000b26 <_ntoa_format+0x7a>
    if ((base == 16U) && !(flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
10000b84:	f016 0f20 	tst.w	r6, #32
10000b88:	d1d0      	bne.n	10000b2c <_ntoa_format+0x80>
10000b8a:	2c1f      	cmp	r4, #31
10000b8c:	d8ce      	bhi.n	10000b2c <_ntoa_format+0x80>
      buf[len++] = 'x';
10000b8e:	f04f 0c78 	mov.w	ip, #120	; 0x78
10000b92:	f805 c004 	strb.w	ip, [r5, r4]
10000b96:	3401      	adds	r4, #1
10000b98:	e7ce      	b.n	10000b38 <_ntoa_format+0x8c>
    else if ((base == 16U) && (flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
10000b9a:	f016 0f20 	tst.w	r6, #32
10000b9e:	d0c8      	beq.n	10000b32 <_ntoa_format+0x86>
10000ba0:	2c1f      	cmp	r4, #31
10000ba2:	d8c6      	bhi.n	10000b32 <_ntoa_format+0x86>
      buf[len++] = 'X';
10000ba4:	f04f 0c58 	mov.w	ip, #88	; 0x58
10000ba8:	f805 c004 	strb.w	ip, [r5, r4]
10000bac:	3401      	adds	r4, #1
10000bae:	e7c3      	b.n	10000b38 <_ntoa_format+0x8c>
    else if ((base == 2U) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
10000bb0:	2c1f      	cmp	r4, #31
10000bb2:	d8c1      	bhi.n	10000b38 <_ntoa_format+0x8c>
      buf[len++] = 'b';
10000bb4:	f04f 0c62 	mov.w	ip, #98	; 0x62
10000bb8:	f805 c004 	strb.w	ip, [r5, r4]
10000bbc:	3401      	adds	r4, #1
10000bbe:	e7bb      	b.n	10000b38 <_ntoa_format+0x8c>
    else if (flags & FLAGS_PLUS) {
10000bc0:	f016 0f04 	tst.w	r6, #4
10000bc4:	d005      	beq.n	10000bd2 <_ntoa_format+0x126>
      buf[len++] = '+';  // ignore the space if the '+' exists
10000bc6:	f04f 0c2b 	mov.w	ip, #43	; 0x2b
10000bca:	f805 c004 	strb.w	ip, [r5, r4]
10000bce:	3401      	adds	r4, #1
10000bd0:	e7c3      	b.n	10000b5a <_ntoa_format+0xae>
    else if (flags & FLAGS_SPACE) {
10000bd2:	f016 0f08 	tst.w	r6, #8
10000bd6:	d0c0      	beq.n	10000b5a <_ntoa_format+0xae>
      buf[len++] = ' ';
10000bd8:	f04f 0c20 	mov.w	ip, #32
10000bdc:	f805 c004 	strb.w	ip, [r5, r4]
10000be0:	3401      	adds	r4, #1
10000be2:	e7ba      	b.n	10000b5a <_ntoa_format+0xae>

10000be4 <_ntoa_long>:


// internal itoa for 'long' type
static size_t _ntoa_long(out_fct_type out, char* buffer, size_t idx, size_t maxlen, unsigned long value, bool negative, unsigned long base, unsigned int prec, unsigned int width, unsigned int flags)
{
10000be4:	b5f0      	push	{r4, r5, r6, r7, lr}
10000be6:	b091      	sub	sp, #68	; 0x44
10000be8:	9c16      	ldr	r4, [sp, #88]	; 0x58
10000bea:	9d18      	ldr	r5, [sp, #96]	; 0x60
10000bec:	9e1b      	ldr	r6, [sp, #108]	; 0x6c
  char buf[PRINTF_NTOA_BUFFER_SIZE];
  size_t len = 0U;

  // no hash for 0 values
  if (!value) {
10000bee:	b90c      	cbnz	r4, 10000bf4 <_ntoa_long+0x10>
    flags &= ~FLAGS_HASH;
10000bf0:	f026 0610 	bic.w	r6, r6, #16
  }

  // write if precision != 0 and value is != 0
  if (!(flags & FLAGS_PRECISION) || value) {
10000bf4:	f416 6e80 	ands.w	lr, r6, #1024	; 0x400
10000bf8:	d016      	beq.n	10000c28 <_ntoa_long+0x44>
10000bfa:	b364      	cbz	r4, 10000c56 <_ntoa_long+0x72>
10000bfc:	f04f 0e00 	mov.w	lr, #0
10000c00:	e012      	b.n	10000c28 <_ntoa_long+0x44>
    do {
      const char digit = (char)(value % base);
      buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
10000c02:	f10c 0c30 	add.w	ip, ip, #48	; 0x30
10000c06:	fa5f fc8c 	uxtb.w	ip, ip
10000c0a:	f10e 0701 	add.w	r7, lr, #1
10000c0e:	f10e 0e40 	add.w	lr, lr, #64	; 0x40
10000c12:	44ee      	add	lr, sp
10000c14:	f80e cc20 	strb.w	ip, [lr, #-32]
      value /= base;
10000c18:	fbb4 fcf5 	udiv	ip, r4, r5
    } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
10000c1c:	42ac      	cmp	r4, r5
10000c1e:	d31b      	bcc.n	10000c58 <_ntoa_long+0x74>
10000c20:	2f1f      	cmp	r7, #31
10000c22:	d819      	bhi.n	10000c58 <_ntoa_long+0x74>
      buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
10000c24:	46be      	mov	lr, r7
      value /= base;
10000c26:	4664      	mov	r4, ip
      const char digit = (char)(value % base);
10000c28:	fbb4 fcf5 	udiv	ip, r4, r5
10000c2c:	fb05 4c1c 	mls	ip, r5, ip, r4
10000c30:	fa5f fc8c 	uxtb.w	ip, ip
      buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
10000c34:	f1bc 0f09 	cmp.w	ip, #9
10000c38:	d9e3      	bls.n	10000c02 <_ntoa_long+0x1e>
10000c3a:	f016 0f20 	tst.w	r6, #32
10000c3e:	d008      	beq.n	10000c52 <_ntoa_long+0x6e>
10000c40:	2741      	movs	r7, #65	; 0x41
10000c42:	44bc      	add	ip, r7
10000c44:	fa5f fc8c 	uxtb.w	ip, ip
10000c48:	f1ac 0c0a 	sub.w	ip, ip, #10
10000c4c:	fa5f fc8c 	uxtb.w	ip, ip
10000c50:	e7db      	b.n	10000c0a <_ntoa_long+0x26>
10000c52:	2761      	movs	r7, #97	; 0x61
10000c54:	e7f5      	b.n	10000c42 <_ntoa_long+0x5e>
  size_t len = 0U;
10000c56:	4627      	mov	r7, r4
  }

  return _ntoa_format(out, buffer, idx, maxlen, buf, len, negative, (unsigned int)base, prec, width, flags);
10000c58:	9606      	str	r6, [sp, #24]
10000c5a:	9c1a      	ldr	r4, [sp, #104]	; 0x68
10000c5c:	9405      	str	r4, [sp, #20]
10000c5e:	9c19      	ldr	r4, [sp, #100]	; 0x64
10000c60:	9404      	str	r4, [sp, #16]
10000c62:	9503      	str	r5, [sp, #12]
10000c64:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
10000c68:	9402      	str	r4, [sp, #8]
10000c6a:	9701      	str	r7, [sp, #4]
10000c6c:	ac08      	add	r4, sp, #32
10000c6e:	9400      	str	r4, [sp, #0]
10000c70:	f7ff ff1c 	bl	10000aac <_ntoa_format>
}
10000c74:	b011      	add	sp, #68	; 0x44
10000c76:	bdf0      	pop	{r4, r5, r6, r7, pc}

10000c78 <_ntoa_long_long>:


// internal itoa for 'long long' type
#if defined(PRINTF_SUPPORT_LONG_LONG)
static size_t _ntoa_long_long(out_fct_type out, char* buffer, size_t idx, size_t maxlen, unsigned long long value, bool negative, unsigned long long base, unsigned int prec, unsigned int width, unsigned int flags)
{
10000c78:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10000c7c:	b095      	sub	sp, #84	; 0x54
10000c7e:	9009      	str	r0, [sp, #36]	; 0x24
10000c80:	910a      	str	r1, [sp, #40]	; 0x28
10000c82:	920b      	str	r2, [sp, #44]	; 0x2c
10000c84:	469b      	mov	fp, r3
10000c86:	9d1e      	ldr	r5, [sp, #120]	; 0x78
10000c88:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
10000c8a:	9f22      	ldr	r7, [sp, #136]	; 0x88
10000c8c:	f8dd 808c 	ldr.w	r8, [sp, #140]	; 0x8c
10000c90:	f8dd a098 	ldr.w	sl, [sp, #152]	; 0x98
  char buf[PRINTF_NTOA_BUFFER_SIZE];
  size_t len = 0U;

  // no hash for 0 values
  if (!value) {
10000c94:	ea55 0306 	orrs.w	r3, r5, r6
10000c98:	d101      	bne.n	10000c9e <_ntoa_long_long+0x26>
    flags &= ~FLAGS_HASH;
10000c9a:	f02a 0a10 	bic.w	sl, sl, #16
  }

  // write if precision != 0 and value is != 0
  if (!(flags & FLAGS_PRECISION) || value) {
10000c9e:	f41a 6480 	ands.w	r4, sl, #1024	; 0x400
10000ca2:	d01f      	beq.n	10000ce4 <_ntoa_long_long+0x6c>
10000ca4:	ea55 0306 	orrs.w	r3, r5, r6
10000ca8:	d030      	beq.n	10000d0c <_ntoa_long_long+0x94>
10000caa:	2400      	movs	r4, #0
10000cac:	e01a      	b.n	10000ce4 <_ntoa_long_long+0x6c>
    do {
      const char digit = (char)(value % base);
      buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
10000cae:	f103 0230 	add.w	r2, r3, #48	; 0x30
10000cb2:	b2d2      	uxtb	r2, r2
10000cb4:	f104 0901 	add.w	r9, r4, #1
10000cb8:	f104 0350 	add.w	r3, r4, #80	; 0x50
10000cbc:	eb0d 0403 	add.w	r4, sp, r3
10000cc0:	f804 2c20 	strb.w	r2, [r4, #-32]
      value /= base;
10000cc4:	463a      	mov	r2, r7
10000cc6:	4643      	mov	r3, r8
10000cc8:	4628      	mov	r0, r5
10000cca:	4631      	mov	r1, r6
10000ccc:	f003 fc02 	bl	100044d4 <__aeabi_uldivmod>
    } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
10000cd0:	42bd      	cmp	r5, r7
10000cd2:	eb76 0308 	sbcs.w	r3, r6, r8
10000cd6:	d31b      	bcc.n	10000d10 <_ntoa_long_long+0x98>
10000cd8:	f1b9 0f1f 	cmp.w	r9, #31
10000cdc:	d818      	bhi.n	10000d10 <_ntoa_long_long+0x98>
      buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
10000cde:	464c      	mov	r4, r9
      value /= base;
10000ce0:	4605      	mov	r5, r0
10000ce2:	460e      	mov	r6, r1
      const char digit = (char)(value % base);
10000ce4:	463a      	mov	r2, r7
10000ce6:	4643      	mov	r3, r8
10000ce8:	4628      	mov	r0, r5
10000cea:	4631      	mov	r1, r6
10000cec:	f003 fbf2 	bl	100044d4 <__aeabi_uldivmod>
10000cf0:	b2d3      	uxtb	r3, r2
      buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
10000cf2:	2b09      	cmp	r3, #9
10000cf4:	d9db      	bls.n	10000cae <_ntoa_long_long+0x36>
10000cf6:	f01a 0f20 	tst.w	sl, #32
10000cfa:	d005      	beq.n	10000d08 <_ntoa_long_long+0x90>
10000cfc:	2241      	movs	r2, #65	; 0x41
10000cfe:	441a      	add	r2, r3
10000d00:	b2d2      	uxtb	r2, r2
10000d02:	3a0a      	subs	r2, #10
10000d04:	b2d2      	uxtb	r2, r2
10000d06:	e7d5      	b.n	10000cb4 <_ntoa_long_long+0x3c>
10000d08:	2261      	movs	r2, #97	; 0x61
10000d0a:	e7f8      	b.n	10000cfe <_ntoa_long_long+0x86>
  size_t len = 0U;
10000d0c:	f04f 0900 	mov.w	r9, #0
  }

  return _ntoa_format(out, buffer, idx, maxlen, buf, len, negative, (unsigned int)base, prec, width, flags);
10000d10:	f8cd a018 	str.w	sl, [sp, #24]
10000d14:	9b25      	ldr	r3, [sp, #148]	; 0x94
10000d16:	9305      	str	r3, [sp, #20]
10000d18:	9b24      	ldr	r3, [sp, #144]	; 0x90
10000d1a:	9304      	str	r3, [sp, #16]
10000d1c:	9703      	str	r7, [sp, #12]
10000d1e:	f89d 3080 	ldrb.w	r3, [sp, #128]	; 0x80
10000d22:	9302      	str	r3, [sp, #8]
10000d24:	f8cd 9004 	str.w	r9, [sp, #4]
10000d28:	ab0c      	add	r3, sp, #48	; 0x30
10000d2a:	9300      	str	r3, [sp, #0]
10000d2c:	465b      	mov	r3, fp
10000d2e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
10000d30:	990a      	ldr	r1, [sp, #40]	; 0x28
10000d32:	9809      	ldr	r0, [sp, #36]	; 0x24
10000d34:	f7ff feba 	bl	10000aac <_ntoa_format>
}
10000d38:	b015      	add	sp, #84	; 0x54
10000d3a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

10000d40 <_etoa>:


#if defined(PRINTF_SUPPORT_EXPONENTIAL)
// internal ftoa variant for exponential floating-point type, contributed by Martijn Jasperse <m.jasperse@gmail.com>
static size_t _etoa(out_fct_type out, char* buffer, size_t idx, size_t maxlen, double value, unsigned int prec, unsigned int width, unsigned int flags)
{
10000d40:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10000d44:	ed2d 8b02 	vpush	{d8}
10000d48:	b091      	sub	sp, #68	; 0x44
10000d4a:	4682      	mov	sl, r0
10000d4c:	460c      	mov	r4, r1
10000d4e:	4693      	mov	fp, r2
10000d50:	461d      	mov	r5, r3
  // check for NaN and special values
  if ((value != value) || (value > DBL_MAX) || (value < -DBL_MAX)) {
10000d52:	e9dd 231c 	ldrd	r2, r3, [sp, #112]	; 0x70
10000d56:	4610      	mov	r0, r2
10000d58:	4619      	mov	r1, r3
10000d5a:	f003 fb41 	bl	100043e0 <__aeabi_dcmpeq>
10000d5e:	2800      	cmp	r0, #0
10000d60:	f000 8107 	beq.w	10000f72 <_etoa+0x232>
10000d64:	f04f 32ff 	mov.w	r2, #4294967295
10000d68:	4bb1      	ldr	r3, [pc, #708]	; (10001030 <_etoa+0x2f0>)
10000d6a:	e9dd 011c 	ldrd	r0, r1, [sp, #112]	; 0x70
10000d6e:	f003 fb5f 	bl	10004430 <__aeabi_dcmpgt>
10000d72:	2800      	cmp	r0, #0
10000d74:	f040 80fd 	bne.w	10000f72 <_etoa+0x232>
10000d78:	f04f 32ff 	mov.w	r2, #4294967295
10000d7c:	f46f 1380 	mvn.w	r3, #1048576	; 0x100000
10000d80:	e9dd 011c 	ldrd	r0, r1, [sp, #112]	; 0x70
10000d84:	f003 fb36 	bl	100043f4 <__aeabi_dcmplt>
10000d88:	2800      	cmp	r0, #0
10000d8a:	f040 80f2 	bne.w	10000f72 <_etoa+0x232>
    return _ftoa(out, buffer, idx, maxlen, value, prec, width, flags);
  }

  // determine the sign
  const bool negative = value < 0;
  if (negative) {
10000d8e:	2200      	movs	r2, #0
10000d90:	2300      	movs	r3, #0
10000d92:	e9dd 011c 	ldrd	r0, r1, [sp, #112]	; 0x70
10000d96:	f003 fb2d 	bl	100043f4 <__aeabi_dcmplt>
10000d9a:	2800      	cmp	r0, #0
10000d9c:	f040 80fe 	bne.w	10000f9c <_etoa+0x25c>
10000da0:	ed9d 7b1c 	vldr	d7, [sp, #112]	; 0x70
10000da4:	ed8d 7b06 	vstr	d7, [sp, #24]
    value = -value;
  }

  // default precision
  if (!(flags & FLAGS_PRECISION)) {
10000da8:	9b20      	ldr	r3, [sp, #128]	; 0x80
10000daa:	f413 6380 	ands.w	r3, r3, #1024	; 0x400
10000dae:	930f      	str	r3, [sp, #60]	; 0x3c
10000db0:	d101      	bne.n	10000db6 <_etoa+0x76>
    prec = PRINTF_DEFAULT_FLOAT_PRECISION;
10000db2:	2306      	movs	r3, #6
10000db4:	931e      	str	r3, [sp, #120]	; 0x78
    uint64_t U;
    double   F;
  } conv;

  conv.F = value;
  int exp2 = (int)((conv.U >> 52U) & 0x07FFU) - 1023;           // effectively log2
10000db6:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
10000dba:	4602      	mov	r2, r0
10000dbc:	f3c1 500a 	ubfx	r0, r1, #20, #11
  conv.U = (conv.U & ((1ULL << 52U) - 1U)) | (1023ULL << 52U);  // drop the exponent so conv.F is now in [1,2)
10000dc0:	f3c1 0313 	ubfx	r3, r1, #0, #20
10000dc4:	4690      	mov	r8, r2
10000dc6:	f043 597f 	orr.w	r9, r3, #1069547520	; 0x3fc00000
10000dca:	f449 1940 	orr.w	r9, r9, #3145728	; 0x300000
  // now approximate log10 from the log2 integer part and an expansion of ln around 1.5
  int expval = (int)(0.1760912590558 + exp2 * 0.301029995663981 + (conv.F - 1.5) * 0.289529654602168);
10000dce:	f2a0 30ff 	subw	r0, r0, #1023	; 0x3ff
10000dd2:	f003 f833 	bl	10003e3c <__aeabi_i2d>
10000dd6:	a384      	add	r3, pc, #528	; (adr r3, 10000fe8 <_etoa+0x2a8>)
10000dd8:	e9d3 2300 	ldrd	r2, r3, [r3]
10000ddc:	f003 f898 	bl	10003f10 <__aeabi_dmul>
10000de0:	a383      	add	r3, pc, #524	; (adr r3, 10000ff0 <_etoa+0x2b0>)
10000de2:	e9d3 2300 	ldrd	r2, r3, [r3]
10000de6:	f002 fedd 	bl	10003ba4 <__adddf3>
10000dea:	4606      	mov	r6, r0
10000dec:	460f      	mov	r7, r1
10000dee:	2200      	movs	r2, #0
10000df0:	4b90      	ldr	r3, [pc, #576]	; (10001034 <_etoa+0x2f4>)
10000df2:	4640      	mov	r0, r8
10000df4:	4649      	mov	r1, r9
10000df6:	f002 fed3 	bl	10003ba0 <__aeabi_dsub>
10000dfa:	a37f      	add	r3, pc, #508	; (adr r3, 10000ff8 <_etoa+0x2b8>)
10000dfc:	e9d3 2300 	ldrd	r2, r3, [r3]
10000e00:	f003 f886 	bl	10003f10 <__aeabi_dmul>
10000e04:	4602      	mov	r2, r0
10000e06:	460b      	mov	r3, r1
10000e08:	4630      	mov	r0, r6
10000e0a:	4639      	mov	r1, r7
10000e0c:	f002 feca 	bl	10003ba4 <__adddf3>
10000e10:	f003 fb18 	bl	10004444 <__aeabi_d2iz>
10000e14:	4606      	mov	r6, r0
  // now we want to compute 10^expval but we want to be sure it won't overflow
  exp2 = (int)(expval * 3.321928094887362 + 0.5);
10000e16:	f003 f811 	bl	10003e3c <__aeabi_i2d>
10000e1a:	4680      	mov	r8, r0
10000e1c:	4689      	mov	r9, r1
10000e1e:	a378      	add	r3, pc, #480	; (adr r3, 10001000 <_etoa+0x2c0>)
10000e20:	e9d3 2300 	ldrd	r2, r3, [r3]
10000e24:	f003 f874 	bl	10003f10 <__aeabi_dmul>
10000e28:	2200      	movs	r2, #0
10000e2a:	4b83      	ldr	r3, [pc, #524]	; (10001038 <_etoa+0x2f8>)
10000e2c:	f002 feba 	bl	10003ba4 <__adddf3>
10000e30:	f003 fb08 	bl	10004444 <__aeabi_d2iz>
10000e34:	4607      	mov	r7, r0
  const double z  = expval * 2.302585092994046 - exp2 * 0.6931471805599453;
10000e36:	a374      	add	r3, pc, #464	; (adr r3, 10001008 <_etoa+0x2c8>)
10000e38:	e9d3 2300 	ldrd	r2, r3, [r3]
10000e3c:	4640      	mov	r0, r8
10000e3e:	4649      	mov	r1, r9
10000e40:	f003 f866 	bl	10003f10 <__aeabi_dmul>
10000e44:	4680      	mov	r8, r0
10000e46:	4689      	mov	r9, r1
10000e48:	4638      	mov	r0, r7
10000e4a:	f002 fff7 	bl	10003e3c <__aeabi_i2d>
10000e4e:	a370      	add	r3, pc, #448	; (adr r3, 10001010 <_etoa+0x2d0>)
10000e50:	e9d3 2300 	ldrd	r2, r3, [r3]
10000e54:	f003 f85c 	bl	10003f10 <__aeabi_dmul>
10000e58:	4602      	mov	r2, r0
10000e5a:	460b      	mov	r3, r1
10000e5c:	4640      	mov	r0, r8
10000e5e:	4649      	mov	r1, r9
10000e60:	f002 fe9e 	bl	10003ba0 <__aeabi_dsub>
10000e64:	4680      	mov	r8, r0
10000e66:	4689      	mov	r9, r1
  const double z2 = z * z;
10000e68:	4602      	mov	r2, r0
10000e6a:	460b      	mov	r3, r1
10000e6c:	f003 f850 	bl	10003f10 <__aeabi_dmul>
10000e70:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
  conv.U = (uint64_t)(exp2 + 1023) << 52U;
10000e74:	f207 37ff 	addw	r7, r7, #1023	; 0x3ff
10000e78:	2100      	movs	r1, #0
10000e7a:	2200      	movs	r2, #0
10000e7c:	e9cd 1208 	strd	r1, r2, [sp, #32]
10000e80:	053b      	lsls	r3, r7, #20
10000e82:	9309      	str	r3, [sp, #36]	; 0x24
10000e84:	2300      	movs	r3, #0
10000e86:	9308      	str	r3, [sp, #32]
  // compute exp(z) using continued fractions, see https://en.wikipedia.org/wiki/Exponential_function#Continued_fractions_for_ex
  conv.F *= 1 + 2 * z / (2 - z + (z2 / (6 + (z2 / (10 + z2 / 14)))));
10000e88:	4642      	mov	r2, r8
10000e8a:	464b      	mov	r3, r9
10000e8c:	4640      	mov	r0, r8
10000e8e:	4649      	mov	r1, r9
10000e90:	f002 fe88 	bl	10003ba4 <__adddf3>
10000e94:	e9cd 010c 	strd	r0, r1, [sp, #48]	; 0x30
10000e98:	4642      	mov	r2, r8
10000e9a:	464b      	mov	r3, r9
10000e9c:	2000      	movs	r0, #0
10000e9e:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
10000ea2:	f002 fe7d 	bl	10003ba0 <__aeabi_dsub>
10000ea6:	4680      	mov	r8, r0
10000ea8:	4689      	mov	r9, r1
10000eaa:	2200      	movs	r2, #0
10000eac:	4b63      	ldr	r3, [pc, #396]	; (1000103c <_etoa+0x2fc>)
10000eae:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
10000eb2:	f003 f957 	bl	10004164 <__aeabi_ddiv>
10000eb6:	2200      	movs	r2, #0
10000eb8:	4b61      	ldr	r3, [pc, #388]	; (10001040 <_etoa+0x300>)
10000eba:	f002 fe73 	bl	10003ba4 <__adddf3>
10000ebe:	4602      	mov	r2, r0
10000ec0:	460b      	mov	r3, r1
10000ec2:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
10000ec6:	f003 f94d 	bl	10004164 <__aeabi_ddiv>
10000eca:	2200      	movs	r2, #0
10000ecc:	4b5d      	ldr	r3, [pc, #372]	; (10001044 <_etoa+0x304>)
10000ece:	f002 fe69 	bl	10003ba4 <__adddf3>
10000ed2:	4602      	mov	r2, r0
10000ed4:	460b      	mov	r3, r1
10000ed6:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
10000eda:	f003 f943 	bl	10004164 <__aeabi_ddiv>
10000ede:	4602      	mov	r2, r0
10000ee0:	460b      	mov	r3, r1
10000ee2:	4640      	mov	r0, r8
10000ee4:	4649      	mov	r1, r9
10000ee6:	f002 fe5d 	bl	10003ba4 <__adddf3>
10000eea:	4602      	mov	r2, r0
10000eec:	460b      	mov	r3, r1
10000eee:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
10000ef2:	f003 f937 	bl	10004164 <__aeabi_ddiv>
10000ef6:	2200      	movs	r2, #0
10000ef8:	4b53      	ldr	r3, [pc, #332]	; (10001048 <_etoa+0x308>)
10000efa:	f002 fe53 	bl	10003ba4 <__adddf3>
10000efe:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
10000f02:	f003 f805 	bl	10003f10 <__aeabi_dmul>
10000f06:	4680      	mov	r8, r0
10000f08:	4689      	mov	r9, r1
10000f0a:	ec49 8b18 	vmov	d8, r8, r9
  // correct for rounding errors
  if (value < conv.F) {
10000f0e:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
10000f12:	f003 fa8d 	bl	10004430 <__aeabi_dcmpgt>
10000f16:	b140      	cbz	r0, 10000f2a <_etoa+0x1ea>
    expval--;
10000f18:	3e01      	subs	r6, #1
    conv.F /= 10;
10000f1a:	2200      	movs	r2, #0
10000f1c:	4b48      	ldr	r3, [pc, #288]	; (10001040 <_etoa+0x300>)
10000f1e:	4640      	mov	r0, r8
10000f20:	4649      	mov	r1, r9
10000f22:	f003 f91f 	bl	10004164 <__aeabi_ddiv>
10000f26:	ec41 0b18 	vmov	d8, r0, r1
  }

  // the exponent format is "%+03d" and largest value is "307", so set aside 4-5 characters
  unsigned int minwidth = ((expval < 100) && (expval > -100)) ? 4U : 5U;
10000f2a:	f106 0363 	add.w	r3, r6, #99	; 0x63
10000f2e:	2bc6      	cmp	r3, #198	; 0xc6
10000f30:	d83f      	bhi.n	10000fb2 <_etoa+0x272>
10000f32:	2704      	movs	r7, #4

  // in "%g" mode, "prec" is the number of *significant figures* not decimals
  if (flags & FLAGS_ADAPT_EXP) {
10000f34:	9b20      	ldr	r3, [sp, #128]	; 0x80
10000f36:	f413 6f00 	tst.w	r3, #2048	; 0x800
10000f3a:	d044      	beq.n	10000fc6 <_etoa+0x286>
    // do we want to fall-back to "%f" mode?
    if ((value >= 1e-4) && (value < 1e6)) {
10000f3c:	a336      	add	r3, pc, #216	; (adr r3, 10001018 <_etoa+0x2d8>)
10000f3e:	e9d3 2300 	ldrd	r2, r3, [r3]
10000f42:	e9dd 8906 	ldrd	r8, r9, [sp, #24]
10000f46:	4640      	mov	r0, r8
10000f48:	4649      	mov	r1, r9
10000f4a:	f003 fa67 	bl	1000441c <__aeabi_dcmpge>
10000f4e:	2800      	cmp	r0, #0
10000f50:	d03f      	beq.n	10000fd2 <_etoa+0x292>
10000f52:	a333      	add	r3, pc, #204	; (adr r3, 10001020 <_etoa+0x2e0>)
10000f54:	e9d3 2300 	ldrd	r2, r3, [r3]
10000f58:	4640      	mov	r0, r8
10000f5a:	4649      	mov	r1, r9
10000f5c:	f003 fa4a 	bl	100043f4 <__aeabi_dcmplt>
10000f60:	2800      	cmp	r0, #0
10000f62:	d036      	beq.n	10000fd2 <_etoa+0x292>
      if ((int)prec > expval) {
10000f64:	9b1e      	ldr	r3, [sp, #120]	; 0x78
10000f66:	42b3      	cmp	r3, r6
10000f68:	dd25      	ble.n	10000fb6 <_etoa+0x276>
        prec = (unsigned)((int)prec - expval - 1);
10000f6a:	1b9e      	subs	r6, r3, r6
10000f6c:	1e73      	subs	r3, r6, #1
10000f6e:	931e      	str	r3, [sp, #120]	; 0x78
10000f70:	e023      	b.n	10000fba <_etoa+0x27a>
    return _ftoa(out, buffer, idx, maxlen, value, prec, width, flags);
10000f72:	9b20      	ldr	r3, [sp, #128]	; 0x80
10000f74:	9304      	str	r3, [sp, #16]
10000f76:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
10000f78:	9303      	str	r3, [sp, #12]
10000f7a:	9b1e      	ldr	r3, [sp, #120]	; 0x78
10000f7c:	9302      	str	r3, [sp, #8]
10000f7e:	ed9d 7b1c 	vldr	d7, [sp, #112]	; 0x70
10000f82:	ed8d 7b00 	vstr	d7, [sp]
10000f86:	462b      	mov	r3, r5
10000f88:	465a      	mov	r2, fp
10000f8a:	4621      	mov	r1, r4
10000f8c:	4650      	mov	r0, sl
10000f8e:	f000 f8cf 	bl	10001130 <_ftoa>
    if (flags & FLAGS_LEFT) {
      while (idx - start_idx < width) out(' ', buffer, idx++, maxlen);
    }
  }
  return idx;
}
10000f92:	b011      	add	sp, #68	; 0x44
10000f94:	ecbd 8b02 	vpop	{d8}
10000f98:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    value = -value;
10000f9c:	ed9f 7b22 	vldr	d7, [pc, #136]	; 10001028 <_etoa+0x2e8>
10000fa0:	ed8d 7b06 	vstr	d7, [sp, #24]
10000fa4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
10000fa6:	9306      	str	r3, [sp, #24]
10000fa8:	9b1d      	ldr	r3, [sp, #116]	; 0x74
10000faa:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
10000fae:	9307      	str	r3, [sp, #28]
10000fb0:	e6fa      	b.n	10000da8 <_etoa+0x68>
  unsigned int minwidth = ((expval < 100) && (expval > -100)) ? 4U : 5U;
10000fb2:	2705      	movs	r7, #5
10000fb4:	e7be      	b.n	10000f34 <_etoa+0x1f4>
        prec = 0;
10000fb6:	2300      	movs	r3, #0
10000fb8:	931e      	str	r3, [sp, #120]	; 0x78
      flags |= FLAGS_PRECISION;   // make sure _ftoa respects precision
10000fba:	9b20      	ldr	r3, [sp, #128]	; 0x80
10000fbc:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
10000fc0:	9320      	str	r3, [sp, #128]	; 0x80
      minwidth = 0U;
10000fc2:	2700      	movs	r7, #0
      expval   = 0;
10000fc4:	463e      	mov	r6, r7
  if (width > minwidth) {
10000fc6:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
10000fc8:	429f      	cmp	r7, r3
10000fca:	d23f      	bcs.n	1000104c <_etoa+0x30c>
    fwidth -= minwidth;
10000fcc:	eba3 0807 	sub.w	r8, r3, r7
10000fd0:	e03e      	b.n	10001050 <_etoa+0x310>
      if ((prec > 0) && (flags & FLAGS_PRECISION)) {
10000fd2:	9b1e      	ldr	r3, [sp, #120]	; 0x78
10000fd4:	2b00      	cmp	r3, #0
10000fd6:	d0f6      	beq.n	10000fc6 <_etoa+0x286>
10000fd8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
10000fda:	2b00      	cmp	r3, #0
10000fdc:	d0f3      	beq.n	10000fc6 <_etoa+0x286>
        --prec;
10000fde:	9b1e      	ldr	r3, [sp, #120]	; 0x78
10000fe0:	3b01      	subs	r3, #1
10000fe2:	931e      	str	r3, [sp, #120]	; 0x78
10000fe4:	e7ef      	b.n	10000fc6 <_etoa+0x286>
10000fe6:	bf00      	nop
10000fe8:	509f79fb 			; <UNDEFINED> instruction: 0x509f79fb
10000fec:	3fd34413 	svccc	0x00d34413
10000ff0:	8b60c8b3 	blhi	118332c4 <__copy_table_end__+0x182d440>
10000ff4:	3fc68a28 	svccc	0x00c68a28
10000ff8:	636f4361 	cmnvs	pc, #-2080374783	; 0x84000001
10000ffc:	3fd287a7 	svccc	0x00d287a7
10001000:	0979a371 	ldmdbeq	r9!, {r0, r4, r5, r6, r8, r9, sp, pc}^
10001004:	400a934f 	andmi	r9, sl, pc, asr #6
10001008:	bbb55516 	bllt	ed56468 <__RAM_SIZE+0xec56468>
1000100c:	40026bb1 			; <UNDEFINED> instruction: 0x40026bb1
10001010:	fefa39ef 			; <UNDEFINED> instruction: 0xfefa39ef
10001014:	3fe62e42 	svccc	0x00e62e42
10001018:	eb1c432d 	bl	10711cd4 <__copy_table_end__+0x70be50>
1000101c:	3f1a36e2 	svccc	0x001a36e2
10001020:	00000000 	andeq	r0, r0, r0
10001024:	412e8480 	smlawbmi	lr, r0, r4, r8
	...
10001030:	7fefffff 	svcvc	0x00efffff
10001034:	3ff80000 	svccc	0x00f80000
10001038:	3fe00000 	svccc	0x00e00000
1000103c:	402c0000 	eormi	r0, ip, r0
10001040:	40240000 	eormi	r0, r4, r0
10001044:	40180000 	andsmi	r0, r8, r0
10001048:	3ff00000 	svccc	0x00f00000	; IMB
    fwidth = 0U;
1000104c:	f04f 0800 	mov.w	r8, #0
  if ((flags & FLAGS_LEFT) && minwidth) {
10001050:	9b20      	ldr	r3, [sp, #128]	; 0x80
10001052:	f013 0902 	ands.w	r9, r3, #2
10001056:	d002      	beq.n	1000105e <_etoa+0x31e>
10001058:	b10f      	cbz	r7, 1000105e <_etoa+0x31e>
    fwidth = 0U;
1000105a:	f04f 0800 	mov.w	r8, #0
  if (expval) {
1000105e:	b13e      	cbz	r6, 10001070 <_etoa+0x330>
    value /= conv.F;
10001060:	ec53 2b18 	vmov	r2, r3, d8
10001064:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
10001068:	f003 f87c 	bl	10004164 <__aeabi_ddiv>
1000106c:	e9cd 0106 	strd	r0, r1, [sp, #24]
  idx = _ftoa(out, buffer, idx, maxlen, negative ? -value : value, prec, fwidth, flags & ~FLAGS_ADAPT_EXP);
10001070:	2200      	movs	r2, #0
10001072:	2300      	movs	r3, #0
10001074:	e9dd 011c 	ldrd	r0, r1, [sp, #112]	; 0x70
10001078:	f003 f9bc 	bl	100043f4 <__aeabi_dcmplt>
1000107c:	2800      	cmp	r0, #0
1000107e:	d13d      	bne.n	100010fc <_etoa+0x3bc>
10001080:	9b20      	ldr	r3, [sp, #128]	; 0x80
10001082:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
10001086:	9304      	str	r3, [sp, #16]
10001088:	f8cd 800c 	str.w	r8, [sp, #12]
1000108c:	9b1e      	ldr	r3, [sp, #120]	; 0x78
1000108e:	9302      	str	r3, [sp, #8]
10001090:	ed9d 7b06 	vldr	d7, [sp, #24]
10001094:	ed8d 7b00 	vstr	d7, [sp]
10001098:	462b      	mov	r3, r5
1000109a:	465a      	mov	r2, fp
1000109c:	4621      	mov	r1, r4
1000109e:	4650      	mov	r0, sl
100010a0:	f000 f846 	bl	10001130 <_ftoa>
  if (minwidth) {
100010a4:	2f00      	cmp	r7, #0
100010a6:	f43f af74 	beq.w	10000f92 <_etoa+0x252>
    out((flags & FLAGS_UPPERCASE) ? 'E' : 'e', buffer, idx++, maxlen);
100010aa:	9b20      	ldr	r3, [sp, #128]	; 0x80
100010ac:	f013 0f20 	tst.w	r3, #32
100010b0:	d02c      	beq.n	1000110c <_etoa+0x3cc>
100010b2:	f04f 0c45 	mov.w	ip, #69	; 0x45
100010b6:	f100 0801 	add.w	r8, r0, #1
100010ba:	462b      	mov	r3, r5
100010bc:	4602      	mov	r2, r0
100010be:	4621      	mov	r1, r4
100010c0:	4660      	mov	r0, ip
100010c2:	47d0      	blx	sl
    idx = _ntoa_long(out, buffer, idx, maxlen, (expval < 0) ? -expval : expval, expval < 0, 10, 0, minwidth-1, FLAGS_ZEROPAD | FLAGS_PLUS);
100010c4:	ea86 73e6 	eor.w	r3, r6, r6, asr #31
100010c8:	eba3 73e6 	sub.w	r3, r3, r6, asr #31
100010cc:	2205      	movs	r2, #5
100010ce:	9205      	str	r2, [sp, #20]
100010d0:	3f01      	subs	r7, #1
100010d2:	9704      	str	r7, [sp, #16]
100010d4:	2200      	movs	r2, #0
100010d6:	9203      	str	r2, [sp, #12]
100010d8:	220a      	movs	r2, #10
100010da:	9202      	str	r2, [sp, #8]
100010dc:	0ff0      	lsrs	r0, r6, #31
100010de:	9001      	str	r0, [sp, #4]
100010e0:	9300      	str	r3, [sp, #0]
100010e2:	462b      	mov	r3, r5
100010e4:	4642      	mov	r2, r8
100010e6:	4621      	mov	r1, r4
100010e8:	4650      	mov	r0, sl
100010ea:	f7ff fd7b 	bl	10000be4 <_ntoa_long>
    if (flags & FLAGS_LEFT) {
100010ee:	f1b9 0f00 	cmp.w	r9, #0
100010f2:	f43f af4e 	beq.w	10000f92 <_etoa+0x252>
100010f6:	4602      	mov	r2, r0
100010f8:	9f1f      	ldr	r7, [sp, #124]	; 0x7c
100010fa:	e010      	b.n	1000111e <_etoa+0x3de>
  idx = _ftoa(out, buffer, idx, maxlen, negative ? -value : value, prec, fwidth, flags & ~FLAGS_ADAPT_EXP);
100010fc:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
10001100:	4602      	mov	r2, r0
10001102:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
10001106:	e9cd 2306 	strd	r2, r3, [sp, #24]
1000110a:	e7b9      	b.n	10001080 <_etoa+0x340>
    out((flags & FLAGS_UPPERCASE) ? 'E' : 'e', buffer, idx++, maxlen);
1000110c:	f04f 0c65 	mov.w	ip, #101	; 0x65
10001110:	e7d1      	b.n	100010b6 <_etoa+0x376>
      while (idx - start_idx < width) out(' ', buffer, idx++, maxlen);
10001112:	1c56      	adds	r6, r2, #1
10001114:	462b      	mov	r3, r5
10001116:	4621      	mov	r1, r4
10001118:	2020      	movs	r0, #32
1000111a:	47d0      	blx	sl
1000111c:	4632      	mov	r2, r6
1000111e:	eba2 030b 	sub.w	r3, r2, fp
10001122:	42bb      	cmp	r3, r7
10001124:	d3f5      	bcc.n	10001112 <_etoa+0x3d2>
10001126:	4610      	mov	r0, r2
10001128:	e733      	b.n	10000f92 <_etoa+0x252>
1000112a:	bf00      	nop
1000112c:	0000      	movs	r0, r0
	...

10001130 <_ftoa>:
{
10001130:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10001134:	ed2d 8b02 	vpush	{d8}
10001138:	b095      	sub	sp, #84	; 0x54
1000113a:	9007      	str	r0, [sp, #28]
1000113c:	910a      	str	r1, [sp, #40]	; 0x28
1000113e:	4692      	mov	sl, r2
10001140:	469b      	mov	fp, r3
10001142:	e9dd 8920 	ldrd	r8, r9, [sp, #128]	; 0x80
10001146:	9d22      	ldr	r5, [sp, #136]	; 0x88
  if (value != value)
10001148:	4642      	mov	r2, r8
1000114a:	464b      	mov	r3, r9
1000114c:	4640      	mov	r0, r8
1000114e:	4649      	mov	r1, r9
10001150:	f003 f946 	bl	100043e0 <__aeabi_dcmpeq>
10001154:	2800      	cmp	r0, #0
10001156:	d040      	beq.n	100011da <_ftoa+0xaa>
  if (value < -DBL_MAX)
10001158:	f04f 32ff 	mov.w	r2, #4294967295
1000115c:	f46f 1380 	mvn.w	r3, #1048576	; 0x100000
10001160:	4640      	mov	r0, r8
10001162:	4649      	mov	r1, r9
10001164:	f003 f946 	bl	100043f4 <__aeabi_dcmplt>
10001168:	2800      	cmp	r0, #0
1000116a:	d145      	bne.n	100011f8 <_ftoa+0xc8>
  if (value > DBL_MAX)
1000116c:	f04f 32ff 	mov.w	r2, #4294967295
10001170:	4b9f      	ldr	r3, [pc, #636]	; (100013f0 <_ftoa+0x2c0>)
10001172:	4640      	mov	r0, r8
10001174:	4649      	mov	r1, r9
10001176:	f003 f95b 	bl	10004430 <__aeabi_dcmpgt>
1000117a:	2800      	cmp	r0, #0
1000117c:	d14b      	bne.n	10001216 <_ftoa+0xe6>
  if ((value > PRINTF_MAX_FLOAT) || (value < -PRINTF_MAX_FLOAT)) {
1000117e:	a398      	add	r3, pc, #608	; (adr r3, 100013e0 <_ftoa+0x2b0>)
10001180:	e9d3 2300 	ldrd	r2, r3, [r3]
10001184:	4640      	mov	r0, r8
10001186:	4649      	mov	r1, r9
10001188:	f003 f952 	bl	10004430 <__aeabi_dcmpgt>
1000118c:	2800      	cmp	r0, #0
1000118e:	d15a      	bne.n	10001246 <_ftoa+0x116>
10001190:	a395      	add	r3, pc, #596	; (adr r3, 100013e8 <_ftoa+0x2b8>)
10001192:	e9d3 2300 	ldrd	r2, r3, [r3]
10001196:	4640      	mov	r0, r8
10001198:	4649      	mov	r1, r9
1000119a:	f003 f92b 	bl	100043f4 <__aeabi_dcmplt>
1000119e:	2800      	cmp	r0, #0
100011a0:	d151      	bne.n	10001246 <_ftoa+0x116>
  if (value < 0) {
100011a2:	2200      	movs	r2, #0
100011a4:	2300      	movs	r3, #0
100011a6:	4640      	mov	r0, r8
100011a8:	4649      	mov	r1, r9
100011aa:	f003 f923 	bl	100043f4 <__aeabi_dcmplt>
100011ae:	2800      	cmp	r0, #0
100011b0:	d157      	bne.n	10001262 <_ftoa+0x132>
  bool negative = false;
100011b2:	2300      	movs	r3, #0
100011b4:	930b      	str	r3, [sp, #44]	; 0x2c
  if (!(flags & FLAGS_PRECISION)) {
100011b6:	9b24      	ldr	r3, [sp, #144]	; 0x90
100011b8:	f413 6f80 	tst.w	r3, #1024	; 0x400
100011bc:	d05c      	beq.n	10001278 <_ftoa+0x148>
    prec = PRINTF_DEFAULT_FLOAT_PRECISION;
100011be:	2400      	movs	r4, #0
  while ((len < PRINTF_FTOA_BUFFER_SIZE) && (prec > 9U)) {
100011c0:	2c1f      	cmp	r4, #31
100011c2:	d85b      	bhi.n	1000127c <_ftoa+0x14c>
100011c4:	2d09      	cmp	r5, #9
100011c6:	d959      	bls.n	1000127c <_ftoa+0x14c>
    buf[len++] = '0';
100011c8:	f104 0350 	add.w	r3, r4, #80	; 0x50
100011cc:	446b      	add	r3, sp
100011ce:	2230      	movs	r2, #48	; 0x30
100011d0:	f803 2c20 	strb.w	r2, [r3, #-32]
    prec--;
100011d4:	3d01      	subs	r5, #1
    buf[len++] = '0';
100011d6:	3401      	adds	r4, #1
100011d8:	e7f2      	b.n	100011c0 <_ftoa+0x90>
    return _out_rev(out, buffer, idx, maxlen, "nan", 3, width, flags);
100011da:	9b24      	ldr	r3, [sp, #144]	; 0x90
100011dc:	9303      	str	r3, [sp, #12]
100011de:	9b23      	ldr	r3, [sp, #140]	; 0x8c
100011e0:	9302      	str	r3, [sp, #8]
100011e2:	2303      	movs	r3, #3
100011e4:	9301      	str	r3, [sp, #4]
100011e6:	4b83      	ldr	r3, [pc, #524]	; (100013f4 <_ftoa+0x2c4>)
100011e8:	9300      	str	r3, [sp, #0]
100011ea:	465b      	mov	r3, fp
100011ec:	4652      	mov	r2, sl
100011ee:	990a      	ldr	r1, [sp, #40]	; 0x28
100011f0:	9807      	ldr	r0, [sp, #28]
100011f2:	f7ff fc1c 	bl	10000a2e <_out_rev>
100011f6:	e12c      	b.n	10001452 <_ftoa+0x322>
    return _out_rev(out, buffer, idx, maxlen, "fni-", 4, width, flags);
100011f8:	9b24      	ldr	r3, [sp, #144]	; 0x90
100011fa:	9303      	str	r3, [sp, #12]
100011fc:	9b23      	ldr	r3, [sp, #140]	; 0x8c
100011fe:	9302      	str	r3, [sp, #8]
10001200:	2304      	movs	r3, #4
10001202:	9301      	str	r3, [sp, #4]
10001204:	4b7c      	ldr	r3, [pc, #496]	; (100013f8 <_ftoa+0x2c8>)
10001206:	9300      	str	r3, [sp, #0]
10001208:	465b      	mov	r3, fp
1000120a:	4652      	mov	r2, sl
1000120c:	990a      	ldr	r1, [sp, #40]	; 0x28
1000120e:	9807      	ldr	r0, [sp, #28]
10001210:	f7ff fc0d 	bl	10000a2e <_out_rev>
10001214:	e11d      	b.n	10001452 <_ftoa+0x322>
    return _out_rev(out, buffer, idx, maxlen, (flags & FLAGS_PLUS) ? "fni+" : "fni", (flags & FLAGS_PLUS) ? 4U : 3U, width, flags);
10001216:	9b24      	ldr	r3, [sp, #144]	; 0x90
10001218:	f013 0304 	ands.w	r3, r3, #4
1000121c:	d00f      	beq.n	1000123e <_ftoa+0x10e>
1000121e:	4a77      	ldr	r2, [pc, #476]	; (100013fc <_ftoa+0x2cc>)
10001220:	b17b      	cbz	r3, 10001242 <_ftoa+0x112>
10001222:	2304      	movs	r3, #4
10001224:	9924      	ldr	r1, [sp, #144]	; 0x90
10001226:	9103      	str	r1, [sp, #12]
10001228:	9923      	ldr	r1, [sp, #140]	; 0x8c
1000122a:	9102      	str	r1, [sp, #8]
1000122c:	9301      	str	r3, [sp, #4]
1000122e:	9200      	str	r2, [sp, #0]
10001230:	465b      	mov	r3, fp
10001232:	4652      	mov	r2, sl
10001234:	990a      	ldr	r1, [sp, #40]	; 0x28
10001236:	9807      	ldr	r0, [sp, #28]
10001238:	f7ff fbf9 	bl	10000a2e <_out_rev>
1000123c:	e109      	b.n	10001452 <_ftoa+0x322>
1000123e:	4a70      	ldr	r2, [pc, #448]	; (10001400 <_ftoa+0x2d0>)
10001240:	e7ee      	b.n	10001220 <_ftoa+0xf0>
10001242:	2303      	movs	r3, #3
10001244:	e7ee      	b.n	10001224 <_ftoa+0xf4>
    return _etoa(out, buffer, idx, maxlen, value, prec, width, flags);
10001246:	9b24      	ldr	r3, [sp, #144]	; 0x90
10001248:	9304      	str	r3, [sp, #16]
1000124a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
1000124c:	9303      	str	r3, [sp, #12]
1000124e:	9502      	str	r5, [sp, #8]
10001250:	e9cd 8900 	strd	r8, r9, [sp]
10001254:	465b      	mov	r3, fp
10001256:	4652      	mov	r2, sl
10001258:	990a      	ldr	r1, [sp, #40]	; 0x28
1000125a:	9807      	ldr	r0, [sp, #28]
1000125c:	f7ff fd70 	bl	10000d40 <_etoa>
10001260:	e0f7      	b.n	10001452 <_ftoa+0x322>
    value = 0 - value;
10001262:	4642      	mov	r2, r8
10001264:	464b      	mov	r3, r9
10001266:	2000      	movs	r0, #0
10001268:	2100      	movs	r1, #0
1000126a:	f002 fc99 	bl	10003ba0 <__aeabi_dsub>
1000126e:	4680      	mov	r8, r0
10001270:	4689      	mov	r9, r1
    negative = true;
10001272:	2301      	movs	r3, #1
10001274:	930b      	str	r3, [sp, #44]	; 0x2c
10001276:	e79e      	b.n	100011b6 <_ftoa+0x86>
    prec = PRINTF_DEFAULT_FLOAT_PRECISION;
10001278:	2506      	movs	r5, #6
1000127a:	e7a0      	b.n	100011be <_ftoa+0x8e>
  int whole = (int)value;
1000127c:	4640      	mov	r0, r8
1000127e:	4649      	mov	r1, r9
10001280:	f003 f8e0 	bl	10004444 <__aeabi_d2iz>
10001284:	4606      	mov	r6, r0
  double tmp = (value - whole) * pow10[prec];
10001286:	f002 fdd9 	bl	10003e3c <__aeabi_i2d>
1000128a:	4602      	mov	r2, r0
1000128c:	460b      	mov	r3, r1
1000128e:	4640      	mov	r0, r8
10001290:	4649      	mov	r1, r9
10001292:	f002 fc85 	bl	10003ba0 <__aeabi_dsub>
10001296:	4b5b      	ldr	r3, [pc, #364]	; (10001404 <_ftoa+0x2d4>)
10001298:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
1000129c:	ed93 8b00 	vldr	d8, [r3]
100012a0:	ec53 2b18 	vmov	r2, r3, d8
100012a4:	f002 fe34 	bl	10003f10 <__aeabi_dmul>
100012a8:	4602      	mov	r2, r0
100012aa:	460b      	mov	r3, r1
100012ac:	e9cd 2308 	strd	r2, r3, [sp, #32]
  unsigned long frac = (unsigned long)tmp;
100012b0:	f003 f8f0 	bl	10004494 <__aeabi_d2uiz>
100012b4:	4607      	mov	r7, r0
  diff = tmp - frac;
100012b6:	f002 fdb1 	bl	10003e1c <__aeabi_ui2d>
100012ba:	4602      	mov	r2, r0
100012bc:	460b      	mov	r3, r1
100012be:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
100012c2:	f002 fc6d 	bl	10003ba0 <__aeabi_dsub>
100012c6:	4602      	mov	r2, r0
100012c8:	460b      	mov	r3, r1
100012ca:	e9cd 2308 	strd	r2, r3, [sp, #32]
  if (diff > 0.5) {
100012ce:	2200      	movs	r2, #0
100012d0:	4b4d      	ldr	r3, [pc, #308]	; (10001408 <_ftoa+0x2d8>)
100012d2:	f003 f8ad 	bl	10004430 <__aeabi_dcmpgt>
100012d6:	b350      	cbz	r0, 1000132e <_ftoa+0x1fe>
    ++frac;
100012d8:	3701      	adds	r7, #1
    if (frac >= pow10[prec]) {
100012da:	4638      	mov	r0, r7
100012dc:	f002 fd9e 	bl	10003e1c <__aeabi_ui2d>
100012e0:	4602      	mov	r2, r0
100012e2:	460b      	mov	r3, r1
100012e4:	ec51 0b18 	vmov	r0, r1, d8
100012e8:	f003 f88e 	bl	10004408 <__aeabi_dcmple>
100012ec:	b108      	cbz	r0, 100012f2 <_ftoa+0x1c2>
      ++whole;
100012ee:	3601      	adds	r6, #1
      frac = 0;
100012f0:	2700      	movs	r7, #0
  if (prec == 0U) {
100012f2:	bb55      	cbnz	r5, 1000134a <_ftoa+0x21a>
    diff = value - (double)whole;
100012f4:	4630      	mov	r0, r6
100012f6:	f002 fda1 	bl	10003e3c <__aeabi_i2d>
100012fa:	4602      	mov	r2, r0
100012fc:	460b      	mov	r3, r1
100012fe:	4640      	mov	r0, r8
10001300:	4649      	mov	r1, r9
10001302:	f002 fc4d 	bl	10003ba0 <__aeabi_dsub>
10001306:	4607      	mov	r7, r0
10001308:	4688      	mov	r8, r1
    if ((!(diff < 0.5) || (diff > 0.5)) && (whole & 1)) {
1000130a:	2200      	movs	r2, #0
1000130c:	4b3e      	ldr	r3, [pc, #248]	; (10001408 <_ftoa+0x2d8>)
1000130e:	f003 f871 	bl	100043f4 <__aeabi_dcmplt>
10001312:	b138      	cbz	r0, 10001324 <_ftoa+0x1f4>
10001314:	2200      	movs	r2, #0
10001316:	4b3c      	ldr	r3, [pc, #240]	; (10001408 <_ftoa+0x2d8>)
10001318:	4638      	mov	r0, r7
1000131a:	4641      	mov	r1, r8
1000131c:	f003 f888 	bl	10004430 <__aeabi_dcmpgt>
10001320:	2800      	cmp	r0, #0
10001322:	d042      	beq.n	100013aa <_ftoa+0x27a>
10001324:	f016 0f01 	tst.w	r6, #1
10001328:	d03f      	beq.n	100013aa <_ftoa+0x27a>
      ++whole;
1000132a:	3601      	adds	r6, #1
1000132c:	e03d      	b.n	100013aa <_ftoa+0x27a>
  else if (diff < 0.5) {
1000132e:	2200      	movs	r2, #0
10001330:	4b35      	ldr	r3, [pc, #212]	; (10001408 <_ftoa+0x2d8>)
10001332:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
10001336:	f003 f85d 	bl	100043f4 <__aeabi_dcmplt>
1000133a:	2800      	cmp	r0, #0
1000133c:	d1d9      	bne.n	100012f2 <_ftoa+0x1c2>
  else if ((frac == 0U) || (frac & 1U)) {
1000133e:	b117      	cbz	r7, 10001346 <_ftoa+0x216>
10001340:	f017 0f01 	tst.w	r7, #1
10001344:	d0d5      	beq.n	100012f2 <_ftoa+0x1c2>
    ++frac;
10001346:	3701      	adds	r7, #1
10001348:	e7d3      	b.n	100012f2 <_ftoa+0x1c2>
    while (len < PRINTF_FTOA_BUFFER_SIZE) {
1000134a:	2c1f      	cmp	r4, #31
1000134c:	d817      	bhi.n	1000137e <_ftoa+0x24e>
      --count;
1000134e:	3d01      	subs	r5, #1
      buf[len++] = (char)(48U + (frac % 10U));
10001350:	4b2e      	ldr	r3, [pc, #184]	; (1000140c <_ftoa+0x2dc>)
10001352:	fba3 2307 	umull	r2, r3, r3, r7
10001356:	08db      	lsrs	r3, r3, #3
10001358:	4619      	mov	r1, r3
1000135a:	eb03 0383 	add.w	r3, r3, r3, lsl #2
1000135e:	eba7 0343 	sub.w	r3, r7, r3, lsl #1
10001362:	1c62      	adds	r2, r4, #1
10001364:	3330      	adds	r3, #48	; 0x30
10001366:	f104 0050 	add.w	r0, r4, #80	; 0x50
1000136a:	eb0d 0400 	add.w	r4, sp, r0
1000136e:	f804 3c20 	strb.w	r3, [r4, #-32]
      if (!(frac /= 10U)) {
10001372:	2f09      	cmp	r7, #9
10001374:	d902      	bls.n	1000137c <_ftoa+0x24c>
10001376:	460f      	mov	r7, r1
      buf[len++] = (char)(48U + (frac % 10U));
10001378:	4614      	mov	r4, r2
1000137a:	e7e6      	b.n	1000134a <_ftoa+0x21a>
1000137c:	4614      	mov	r4, r2
    while ((len < PRINTF_FTOA_BUFFER_SIZE) && (count-- > 0U)) {
1000137e:	2c1f      	cmp	r4, #31
10001380:	d80a      	bhi.n	10001398 <_ftoa+0x268>
10001382:	1e6b      	subs	r3, r5, #1
10001384:	b145      	cbz	r5, 10001398 <_ftoa+0x268>
      buf[len++] = '0';
10001386:	f104 0250 	add.w	r2, r4, #80	; 0x50
1000138a:	446a      	add	r2, sp
1000138c:	2130      	movs	r1, #48	; 0x30
1000138e:	f802 1c20 	strb.w	r1, [r2, #-32]
    while ((len < PRINTF_FTOA_BUFFER_SIZE) && (count-- > 0U)) {
10001392:	461d      	mov	r5, r3
      buf[len++] = '0';
10001394:	3401      	adds	r4, #1
10001396:	e7f2      	b.n	1000137e <_ftoa+0x24e>
    if (len < PRINTF_FTOA_BUFFER_SIZE) {
10001398:	2c1f      	cmp	r4, #31
1000139a:	d806      	bhi.n	100013aa <_ftoa+0x27a>
      buf[len++] = '.';
1000139c:	f104 0350 	add.w	r3, r4, #80	; 0x50
100013a0:	446b      	add	r3, sp
100013a2:	222e      	movs	r2, #46	; 0x2e
100013a4:	f803 2c20 	strb.w	r2, [r3, #-32]
100013a8:	3401      	adds	r4, #1
  while (len < PRINTF_FTOA_BUFFER_SIZE) {
100013aa:	2c1f      	cmp	r4, #31
100013ac:	d833      	bhi.n	10001416 <_ftoa+0x2e6>
    buf[len++] = (char)(48 + (whole % 10));
100013ae:	4a18      	ldr	r2, [pc, #96]	; (10001410 <_ftoa+0x2e0>)
100013b0:	fb82 3206 	smull	r3, r2, r2, r6
100013b4:	17f3      	asrs	r3, r6, #31
100013b6:	ebc3 03a2 	rsb	r3, r3, r2, asr #2
100013ba:	461a      	mov	r2, r3
100013bc:	eb03 0383 	add.w	r3, r3, r3, lsl #2
100013c0:	eba6 0343 	sub.w	r3, r6, r3, lsl #1
100013c4:	1c61      	adds	r1, r4, #1
100013c6:	3330      	adds	r3, #48	; 0x30
100013c8:	f104 0050 	add.w	r0, r4, #80	; 0x50
100013cc:	eb0d 0400 	add.w	r4, sp, r0
100013d0:	f804 3c20 	strb.w	r3, [r4, #-32]
    if (!(whole /= 10)) {
100013d4:	4616      	mov	r6, r2
100013d6:	b1ea      	cbz	r2, 10001414 <_ftoa+0x2e4>
    buf[len++] = (char)(48 + (whole % 10));
100013d8:	460c      	mov	r4, r1
100013da:	e7e6      	b.n	100013aa <_ftoa+0x27a>
100013dc:	f3af 8000 	nop.w
100013e0:	00000000 	andeq	r0, r0, r0
100013e4:	41cdcd65 	bicmi	ip, sp, r5, ror #26
100013e8:	00000000 	andeq	r0, r0, r0
100013ec:	c1cdcd65 	bicgt	ip, sp, r5, ror #26
100013f0:	7fefffff 	svcvc	0x00efffff
100013f4:	10005910 	andne	r5, r0, r0, lsl r9
100013f8:	10005914 	andne	r5, r0, r4, lsl r9
100013fc:	10005908 	andne	r5, r0, r8, lsl #18
10001400:	10005904 	andne	r5, r0, r4, lsl #18
10001404:	10005920 	andne	r5, r0, r0, lsr #18
10001408:	3fe00000 	svccc	0x00e00000
1000140c:	cccccccd 	stclgt	12, cr12, [ip], {205}	; 0xcd
10001410:	66666667 	strbtvs	r6, [r6], -r7, ror #12
10001414:	460c      	mov	r4, r1
  if (!(flags & FLAGS_LEFT) && (flags & FLAGS_ZEROPAD)) {
10001416:	9b24      	ldr	r3, [sp, #144]	; 0x90
10001418:	f003 0303 	and.w	r3, r3, #3
1000141c:	2b01      	cmp	r3, #1
1000141e:	d01d      	beq.n	1000145c <_ftoa+0x32c>
  if (len < PRINTF_FTOA_BUFFER_SIZE) {
10001420:	2c1f      	cmp	r4, #31
10001422:	d809      	bhi.n	10001438 <_ftoa+0x308>
    if (negative) {
10001424:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
10001426:	2b00      	cmp	r3, #0
10001428:	d035      	beq.n	10001496 <_ftoa+0x366>
      buf[len++] = '-';
1000142a:	f104 0350 	add.w	r3, r4, #80	; 0x50
1000142e:	446b      	add	r3, sp
10001430:	222d      	movs	r2, #45	; 0x2d
10001432:	f803 2c20 	strb.w	r2, [r3, #-32]
10001436:	3401      	adds	r4, #1
  return _out_rev(out, buffer, idx, maxlen, buf, len, width, flags);
10001438:	9b24      	ldr	r3, [sp, #144]	; 0x90
1000143a:	9303      	str	r3, [sp, #12]
1000143c:	9b23      	ldr	r3, [sp, #140]	; 0x8c
1000143e:	9302      	str	r3, [sp, #8]
10001440:	9401      	str	r4, [sp, #4]
10001442:	ab0c      	add	r3, sp, #48	; 0x30
10001444:	9300      	str	r3, [sp, #0]
10001446:	465b      	mov	r3, fp
10001448:	4652      	mov	r2, sl
1000144a:	990a      	ldr	r1, [sp, #40]	; 0x28
1000144c:	9807      	ldr	r0, [sp, #28]
1000144e:	f7ff faee 	bl	10000a2e <_out_rev>
}
10001452:	b015      	add	sp, #84	; 0x54
10001454:	ecbd 8b02 	vpop	{d8}
10001458:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    if (width && (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
1000145c:	9b23      	ldr	r3, [sp, #140]	; 0x8c
1000145e:	b1b3      	cbz	r3, 1000148e <_ftoa+0x35e>
10001460:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
10001462:	b91b      	cbnz	r3, 1000146c <_ftoa+0x33c>
10001464:	9b24      	ldr	r3, [sp, #144]	; 0x90
10001466:	f013 0f0c 	tst.w	r3, #12
1000146a:	d012      	beq.n	10001492 <_ftoa+0x362>
      width--;
1000146c:	9b23      	ldr	r3, [sp, #140]	; 0x8c
1000146e:	3b01      	subs	r3, #1
10001470:	9323      	str	r3, [sp, #140]	; 0x8c
10001472:	4619      	mov	r1, r3
10001474:	e006      	b.n	10001484 <_ftoa+0x354>
      buf[len++] = '0';
10001476:	f104 0350 	add.w	r3, r4, #80	; 0x50
1000147a:	446b      	add	r3, sp
1000147c:	2230      	movs	r2, #48	; 0x30
1000147e:	f803 2c20 	strb.w	r2, [r3, #-32]
10001482:	3401      	adds	r4, #1
    while ((len < width) && (len < PRINTF_FTOA_BUFFER_SIZE)) {
10001484:	428c      	cmp	r4, r1
10001486:	d2cb      	bcs.n	10001420 <_ftoa+0x2f0>
10001488:	2c1f      	cmp	r4, #31
1000148a:	d9f4      	bls.n	10001476 <_ftoa+0x346>
1000148c:	e7c8      	b.n	10001420 <_ftoa+0x2f0>
1000148e:	9923      	ldr	r1, [sp, #140]	; 0x8c
10001490:	e7f8      	b.n	10001484 <_ftoa+0x354>
10001492:	9923      	ldr	r1, [sp, #140]	; 0x8c
10001494:	e7f6      	b.n	10001484 <_ftoa+0x354>
    else if (flags & FLAGS_PLUS) {
10001496:	9b24      	ldr	r3, [sp, #144]	; 0x90
10001498:	f013 0f04 	tst.w	r3, #4
1000149c:	d007      	beq.n	100014ae <_ftoa+0x37e>
      buf[len++] = '+';  // ignore the space if the '+' exists
1000149e:	f104 0350 	add.w	r3, r4, #80	; 0x50
100014a2:	446b      	add	r3, sp
100014a4:	222b      	movs	r2, #43	; 0x2b
100014a6:	f803 2c20 	strb.w	r2, [r3, #-32]
100014aa:	3401      	adds	r4, #1
100014ac:	e7c4      	b.n	10001438 <_ftoa+0x308>
    else if (flags & FLAGS_SPACE) {
100014ae:	9b24      	ldr	r3, [sp, #144]	; 0x90
100014b0:	f013 0f08 	tst.w	r3, #8
100014b4:	d0c0      	beq.n	10001438 <_ftoa+0x308>
      buf[len++] = ' ';
100014b6:	f104 0350 	add.w	r3, r4, #80	; 0x50
100014ba:	446b      	add	r3, sp
100014bc:	2220      	movs	r2, #32
100014be:	f803 2c20 	strb.w	r2, [r3, #-32]
100014c2:	3401      	adds	r4, #1
100014c4:	e7b8      	b.n	10001438 <_ftoa+0x308>
100014c6:	bf00      	nop

100014c8 <_vsnprintf>:
#endif  // PRINTF_SUPPORT_FLOAT


// internal vsnprintf
static int _vsnprintf(out_fct_type out, char* buffer, const size_t maxlen, const char* format, va_list va)
{
100014c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
100014cc:	b08f      	sub	sp, #60	; 0x3c
100014ce:	4607      	mov	r7, r0
100014d0:	4616      	mov	r6, r2
100014d2:	930d      	str	r3, [sp, #52]	; 0x34
  unsigned int flags, width, precision, n;
  size_t idx = 0U;

  if (!buffer) {
100014d4:	4688      	mov	r8, r1
100014d6:	2900      	cmp	r1, #0
100014d8:	f000 8324 	beq.w	10001b24 <_vsnprintf+0x65c>
          while (l++ < width) {
            out(' ', buffer, idx++, maxlen);
          }
        }
        format++;
        break;
100014dc:	2400      	movs	r4, #0
  while (*format)
100014de:	9b0d      	ldr	r3, [sp, #52]	; 0x34
100014e0:	7818      	ldrb	r0, [r3, #0]
100014e2:	2800      	cmp	r0, #0
100014e4:	f000 8320 	beq.w	10001b28 <_vsnprintf+0x660>
    if (*format != '%') {
100014e8:	2825      	cmp	r0, #37	; 0x25
100014ea:	d009      	beq.n	10001500 <_vsnprintf+0x38>
      out(*format, buffer, idx++, maxlen);
100014ec:	1c65      	adds	r5, r4, #1
100014ee:	4633      	mov	r3, r6
100014f0:	4622      	mov	r2, r4
100014f2:	4641      	mov	r1, r8
100014f4:	47b8      	blx	r7
      format++;
100014f6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
100014f8:	3301      	adds	r3, #1
100014fa:	930d      	str	r3, [sp, #52]	; 0x34
      out(*format, buffer, idx++, maxlen);
100014fc:	462c      	mov	r4, r5
      continue;
100014fe:	e7ee      	b.n	100014de <_vsnprintf+0x16>
      format++;
10001500:	3301      	adds	r3, #1
10001502:	930d      	str	r3, [sp, #52]	; 0x34
    flags = 0U;
10001504:	2500      	movs	r5, #0
      switch (*format) {
10001506:	9b0d      	ldr	r3, [sp, #52]	; 0x34
10001508:	7819      	ldrb	r1, [r3, #0]
1000150a:	f1a1 0220 	sub.w	r2, r1, #32
1000150e:	2a10      	cmp	r2, #16
10001510:	d80a      	bhi.n	10001528 <_vsnprintf+0x60>
10001512:	e8df f002 	tbb	[pc, r2]
10001516:	3d090938 	vstrcc.16	s0, [r9, #-112]	; 0xffffff90	; <UNPREDICTABLE>
1000151a:	09090909 	stmdbeq	r9, {r0, r3, r8, fp}
1000151e:	33090909 	movwcc	r0, #39177	; 0x9909
10001522:	09092e09 	stmdbeq	r9, {r0, r3, r9, sl, fp, sp}
10001526:	f1a10029 			; <UNDEFINED> instruction: 0xf1a10029
  return (ch >= '0') && (ch <= '9');
1000152a:	0330      	lsls	r0, r6, #12
1000152c:	b2db      	uxtb	r3, r3
    if (_is_digit(*format)) {
1000152e:	2b09      	cmp	r3, #9
10001530:	d933      	bls.n	1000159a <_vsnprintf+0xd2>
    else if (*format == '*') {
10001532:	292a      	cmp	r1, #42	; 0x2a
10001534:	d036      	beq.n	100015a4 <_vsnprintf+0xdc>
    width = 0U;
10001536:	2300      	movs	r3, #0
10001538:	930a      	str	r3, [sp, #40]	; 0x28
    if (*format == '.') {
1000153a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
1000153c:	781a      	ldrb	r2, [r3, #0]
1000153e:	2a2e      	cmp	r2, #46	; 0x2e
10001540:	d040      	beq.n	100015c4 <_vsnprintf+0xfc>
    precision = 0U;
10001542:	f04f 0b00 	mov.w	fp, #0
    switch (*format) {
10001546:	9a0d      	ldr	r2, [sp, #52]	; 0x34
10001548:	7813      	ldrb	r3, [r2, #0]
1000154a:	3b68      	subs	r3, #104	; 0x68
1000154c:	2b12      	cmp	r3, #18
1000154e:	d877      	bhi.n	10001640 <_vsnprintf+0x178>
10001550:	e8df f003 	tbb	[pc, r3]
10001554:	76d37664 	ldrbvc	r7, [r3], r4, ror #12
10001558:	76767656 			; <UNDEFINED> instruction: 0x76767656
1000155c:	76767676 			; <UNDEFINED> instruction: 0x76767676
10001560:	76767672 			; <UNDEFINED> instruction: 0x76767672
10001564:	00d87676 	sbcseq	r7, r8, r6, ror r6
        case '0': flags |= FLAGS_ZEROPAD; format++; n = 1U; break;
10001568:	f045 0501 	orr.w	r5, r5, #1
1000156c:	3301      	adds	r3, #1
1000156e:	930d      	str	r3, [sp, #52]	; 0x34
    } while (n);
10001570:	e7c9      	b.n	10001506 <_vsnprintf+0x3e>
        case '-': flags |= FLAGS_LEFT;    format++; n = 1U; break;
10001572:	f045 0502 	orr.w	r5, r5, #2
10001576:	3301      	adds	r3, #1
10001578:	930d      	str	r3, [sp, #52]	; 0x34
    } while (n);
1000157a:	e7c4      	b.n	10001506 <_vsnprintf+0x3e>
        case '+': flags |= FLAGS_PLUS;    format++; n = 1U; break;
1000157c:	f045 0504 	orr.w	r5, r5, #4
10001580:	3301      	adds	r3, #1
10001582:	930d      	str	r3, [sp, #52]	; 0x34
    } while (n);
10001584:	e7bf      	b.n	10001506 <_vsnprintf+0x3e>
        case ' ': flags |= FLAGS_SPACE;   format++; n = 1U; break;
10001586:	f045 0508 	orr.w	r5, r5, #8
1000158a:	3301      	adds	r3, #1
1000158c:	930d      	str	r3, [sp, #52]	; 0x34
    } while (n);
1000158e:	e7ba      	b.n	10001506 <_vsnprintf+0x3e>
        case '#': flags |= FLAGS_HASH;    format++; n = 1U; break;
10001590:	f045 0510 	orr.w	r5, r5, #16
10001594:	3301      	adds	r3, #1
10001596:	930d      	str	r3, [sp, #52]	; 0x34
    } while (n);
10001598:	e7b5      	b.n	10001506 <_vsnprintf+0x3e>
      width = _atoi(&format);
1000159a:	a80d      	add	r0, sp, #52	; 0x34
1000159c:	f7ff fa35 	bl	10000a0a <_atoi>
100015a0:	900a      	str	r0, [sp, #40]	; 0x28
100015a2:	e7ca      	b.n	1000153a <_vsnprintf+0x72>
      const int w = va_arg(va, int);
100015a4:	9b18      	ldr	r3, [sp, #96]	; 0x60
100015a6:	1d1a      	adds	r2, r3, #4
100015a8:	9218      	str	r2, [sp, #96]	; 0x60
100015aa:	6818      	ldr	r0, [r3, #0]
      if (w < 0) {
100015ac:	2800      	cmp	r0, #0
100015ae:	db04      	blt.n	100015ba <_vsnprintf+0xf2>
        width = (unsigned int)w;
100015b0:	900a      	str	r0, [sp, #40]	; 0x28
      format++;
100015b2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
100015b4:	3301      	adds	r3, #1
100015b6:	930d      	str	r3, [sp, #52]	; 0x34
100015b8:	e7bf      	b.n	1000153a <_vsnprintf+0x72>
        flags |= FLAGS_LEFT;    // reverse padding
100015ba:	f045 0502 	orr.w	r5, r5, #2
        width = (unsigned int)-w;
100015be:	4243      	negs	r3, r0
100015c0:	930a      	str	r3, [sp, #40]	; 0x28
100015c2:	e7f6      	b.n	100015b2 <_vsnprintf+0xea>
      flags |= FLAGS_PRECISION;
100015c4:	f445 6580 	orr.w	r5, r5, #1024	; 0x400
      format++;
100015c8:	1c5a      	adds	r2, r3, #1
100015ca:	920d      	str	r2, [sp, #52]	; 0x34
      if (_is_digit(*format)) {
100015cc:	785a      	ldrb	r2, [r3, #1]
  return (ch >= '0') && (ch <= '9');
100015ce:	f1a2 0330 	sub.w	r3, r2, #48	; 0x30
100015d2:	b2db      	uxtb	r3, r3
      if (_is_digit(*format)) {
100015d4:	2b09      	cmp	r3, #9
100015d6:	d904      	bls.n	100015e2 <_vsnprintf+0x11a>
      else if (*format == '*') {
100015d8:	2a2a      	cmp	r2, #42	; 0x2a
100015da:	d007      	beq.n	100015ec <_vsnprintf+0x124>
    precision = 0U;
100015dc:	f04f 0b00 	mov.w	fp, #0
100015e0:	e7b1      	b.n	10001546 <_vsnprintf+0x7e>
        precision = _atoi(&format);
100015e2:	a80d      	add	r0, sp, #52	; 0x34
100015e4:	f7ff fa11 	bl	10000a0a <_atoi>
100015e8:	4683      	mov	fp, r0
100015ea:	e7ac      	b.n	10001546 <_vsnprintf+0x7e>
        const int prec = (int)va_arg(va, int);
100015ec:	9b18      	ldr	r3, [sp, #96]	; 0x60
100015ee:	1d1a      	adds	r2, r3, #4
100015f0:	9218      	str	r2, [sp, #96]	; 0x60
100015f2:	681b      	ldr	r3, [r3, #0]
        precision = prec > 0 ? (unsigned int)prec : 0U;
100015f4:	ea23 7be3 	bic.w	fp, r3, r3, asr #31
        format++;
100015f8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
100015fa:	3301      	adds	r3, #1
100015fc:	930d      	str	r3, [sp, #52]	; 0x34
100015fe:	e7a2      	b.n	10001546 <_vsnprintf+0x7e>
        flags |= FLAGS_LONG;
10001600:	f445 7180 	orr.w	r1, r5, #256	; 0x100
        format++;
10001604:	1c53      	adds	r3, r2, #1
10001606:	930d      	str	r3, [sp, #52]	; 0x34
        if (*format == 'l') {
10001608:	7852      	ldrb	r2, [r2, #1]
1000160a:	2a6c      	cmp	r2, #108	; 0x6c
1000160c:	d001      	beq.n	10001612 <_vsnprintf+0x14a>
        flags |= FLAGS_LONG;
1000160e:	460d      	mov	r5, r1
10001610:	e016      	b.n	10001640 <_vsnprintf+0x178>
          flags |= FLAGS_LONG_LONG;
10001612:	f445 7540 	orr.w	r5, r5, #768	; 0x300
          format++;
10001616:	3301      	adds	r3, #1
10001618:	930d      	str	r3, [sp, #52]	; 0x34
1000161a:	e011      	b.n	10001640 <_vsnprintf+0x178>
        flags |= FLAGS_SHORT;
1000161c:	f045 0180 	orr.w	r1, r5, #128	; 0x80
        format++;
10001620:	1c53      	adds	r3, r2, #1
10001622:	930d      	str	r3, [sp, #52]	; 0x34
        if (*format == 'h') {
10001624:	7852      	ldrb	r2, [r2, #1]
10001626:	2a68      	cmp	r2, #104	; 0x68
10001628:	d001      	beq.n	1000162e <_vsnprintf+0x166>
        flags |= FLAGS_SHORT;
1000162a:	460d      	mov	r5, r1
1000162c:	e008      	b.n	10001640 <_vsnprintf+0x178>
          flags |= FLAGS_CHAR;
1000162e:	f045 05c0 	orr.w	r5, r5, #192	; 0xc0
          format++;
10001632:	3301      	adds	r3, #1
10001634:	930d      	str	r3, [sp, #52]	; 0x34
10001636:	e003      	b.n	10001640 <_vsnprintf+0x178>
        flags |= (sizeof(ptrdiff_t) == sizeof(long) ? FLAGS_LONG : FLAGS_LONG_LONG);
10001638:	f445 7580 	orr.w	r5, r5, #256	; 0x100
        format++;
1000163c:	3201      	adds	r2, #1
1000163e:	920d      	str	r2, [sp, #52]	; 0x34
    switch (*format) {
10001640:	9b0d      	ldr	r3, [sp, #52]	; 0x34
10001642:	7818      	ldrb	r0, [r3, #0]
10001644:	f1a0 0325 	sub.w	r3, r0, #37	; 0x25
10001648:	2b53      	cmp	r3, #83	; 0x53
1000164a:	f200 8261 	bhi.w	10001b10 <_vsnprintf+0x648>
1000164e:	e8df f013 	tbh	[pc, r3, lsl #1]
10001652:	025f0254 	subseq	r0, pc, #84, 4	; 0x40000005
10001656:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000165a:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000165e:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
10001662:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
10001666:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000166a:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000166e:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
10001672:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
10001676:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000167a:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000167e:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
10001682:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
10001686:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000168a:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000168e:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
10001692:	01540174 	cmpeq	r4, r4, ror r1
10001696:	025f0174 	subseq	r0, pc, #116, 2
1000169a:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000169e:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
100016a2:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
100016a6:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
100016aa:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
100016ae:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
100016b2:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
100016b6:	005e025f 	subseq	r0, lr, pc, asr r2
100016ba:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
100016be:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
100016c2:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
100016c6:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
100016ca:	005e025f 	subseq	r0, lr, pc, asr r2
100016ce:	005e019b 			; <UNDEFINED> instruction: 0x005e019b
100016d2:	01540174 	cmpeq	r4, r4, ror r1
100016d6:	025f0174 	subseq	r0, pc, #116, 2
100016da:	025f005e 	subseq	r0, pc, #94	; 0x5e
100016de:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
100016e2:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
100016e6:	0239005e 	eorseq	r0, r9, #94	; 0x5e
100016ea:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
100016ee:	025f01d4 	subseq	r0, pc, #212, 2	; 0x35
100016f2:	025f005e 	subseq	r0, pc, #94	; 0x5e
100016f6:	005e025f 	subseq	r0, lr, pc, asr r2
        flags |= (sizeof(intmax_t) == sizeof(long) ? FLAGS_LONG : FLAGS_LONG_LONG);
100016fa:	f445 7500 	orr.w	r5, r5, #512	; 0x200
        format++;
100016fe:	3201      	adds	r2, #1
10001700:	920d      	str	r2, [sp, #52]	; 0x34
        break;
10001702:	e79d      	b.n	10001640 <_vsnprintf+0x178>
        flags |= (sizeof(size_t) == sizeof(long) ? FLAGS_LONG : FLAGS_LONG_LONG);
10001704:	f445 7580 	orr.w	r5, r5, #256	; 0x100
        format++;
10001708:	3201      	adds	r2, #1
1000170a:	920d      	str	r2, [sp, #52]	; 0x34
        break;
1000170c:	e798      	b.n	10001640 <_vsnprintf+0x178>
        if (*format == 'x' || *format == 'X') {
1000170e:	2878      	cmp	r0, #120	; 0x78
10001710:	d009      	beq.n	10001726 <_vsnprintf+0x25e>
10001712:	2858      	cmp	r0, #88	; 0x58
10001714:	d03a      	beq.n	1000178c <_vsnprintf+0x2c4>
        else if (*format == 'o') {
10001716:	286f      	cmp	r0, #111	; 0x6f
10001718:	d03a      	beq.n	10001790 <_vsnprintf+0x2c8>
        else if (*format == 'b') {
1000171a:	2862      	cmp	r0, #98	; 0x62
1000171c:	d03a      	beq.n	10001794 <_vsnprintf+0x2cc>
          flags &= ~FLAGS_HASH;   // no hash for dec format
1000171e:	f025 0510 	bic.w	r5, r5, #16
          base = 10U;
10001722:	230a      	movs	r3, #10
10001724:	e000      	b.n	10001728 <_vsnprintf+0x260>
          base = 16U;
10001726:	2310      	movs	r3, #16
        if (*format == 'X') {
10001728:	2858      	cmp	r0, #88	; 0x58
1000172a:	d035      	beq.n	10001798 <_vsnprintf+0x2d0>
        if ((*format != 'i') && (*format != 'd')) {
1000172c:	2869      	cmp	r0, #105	; 0x69
1000172e:	d003      	beq.n	10001738 <_vsnprintf+0x270>
10001730:	2864      	cmp	r0, #100	; 0x64
10001732:	d001      	beq.n	10001738 <_vsnprintf+0x270>
          flags &= ~(FLAGS_PLUS | FLAGS_SPACE);
10001734:	f025 050c 	bic.w	r5, r5, #12
        if (flags & FLAGS_PRECISION) {
10001738:	f415 6f80 	tst.w	r5, #1024	; 0x400
1000173c:	d001      	beq.n	10001742 <_vsnprintf+0x27a>
          flags &= ~FLAGS_ZEROPAD;
1000173e:	f025 0501 	bic.w	r5, r5, #1
        if ((*format == 'i') || (*format == 'd')) {
10001742:	2869      	cmp	r0, #105	; 0x69
10001744:	d02b      	beq.n	1000179e <_vsnprintf+0x2d6>
10001746:	2864      	cmp	r0, #100	; 0x64
10001748:	d029      	beq.n	1000179e <_vsnprintf+0x2d6>
          if (flags & FLAGS_LONG_LONG) {
1000174a:	f415 7f00 	tst.w	r5, #512	; 0x200
1000174e:	f040 8096 	bne.w	1000187e <_vsnprintf+0x3b6>
          else if (flags & FLAGS_LONG) {
10001752:	f415 7f80 	tst.w	r5, #256	; 0x100
10001756:	f040 80ae 	bne.w	100018b6 <_vsnprintf+0x3ee>
            const unsigned int value = (flags & FLAGS_CHAR) ? (unsigned char)va_arg(va, unsigned int) : (flags & FLAGS_SHORT) ? (unsigned short int)va_arg(va, unsigned int) : va_arg(va, unsigned int);
1000175a:	f015 0f40 	tst.w	r5, #64	; 0x40
1000175e:	f000 80bf 	beq.w	100018e0 <_vsnprintf+0x418>
10001762:	9a18      	ldr	r2, [sp, #96]	; 0x60
10001764:	1d11      	adds	r1, r2, #4
10001766:	9118      	str	r1, [sp, #96]	; 0x60
10001768:	7812      	ldrb	r2, [r2, #0]
            idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base, precision, width, flags);
1000176a:	9505      	str	r5, [sp, #20]
1000176c:	990a      	ldr	r1, [sp, #40]	; 0x28
1000176e:	9104      	str	r1, [sp, #16]
10001770:	f8cd b00c 	str.w	fp, [sp, #12]
10001774:	9302      	str	r3, [sp, #8]
10001776:	2300      	movs	r3, #0
10001778:	9301      	str	r3, [sp, #4]
1000177a:	9200      	str	r2, [sp, #0]
1000177c:	4633      	mov	r3, r6
1000177e:	4622      	mov	r2, r4
10001780:	4641      	mov	r1, r8
10001782:	4638      	mov	r0, r7
10001784:	f7ff fa2e 	bl	10000be4 <_ntoa_long>
10001788:	4604      	mov	r4, r0
1000178a:	e029      	b.n	100017e0 <_vsnprintf+0x318>
          base = 16U;
1000178c:	2310      	movs	r3, #16
1000178e:	e7cb      	b.n	10001728 <_vsnprintf+0x260>
          base =  8U;
10001790:	2308      	movs	r3, #8
10001792:	e7c9      	b.n	10001728 <_vsnprintf+0x260>
          base =  2U;
10001794:	2302      	movs	r3, #2
10001796:	e7c7      	b.n	10001728 <_vsnprintf+0x260>
          flags |= FLAGS_UPPERCASE;
10001798:	f045 0520 	orr.w	r5, r5, #32
1000179c:	e7c6      	b.n	1000172c <_vsnprintf+0x264>
          if (flags & FLAGS_LONG_LONG) {
1000179e:	f415 7f00 	tst.w	r5, #512	; 0x200
100017a2:	d121      	bne.n	100017e8 <_vsnprintf+0x320>
          else if (flags & FLAGS_LONG) {
100017a4:	f415 7f80 	tst.w	r5, #256	; 0x100
100017a8:	d142      	bne.n	10001830 <_vsnprintf+0x368>
            const int value = (flags & FLAGS_CHAR) ? (char)va_arg(va, int) : (flags & FLAGS_SHORT) ? (short int)va_arg(va, int) : va_arg(va, int);
100017aa:	f015 0f40 	tst.w	r5, #64	; 0x40
100017ae:	d058      	beq.n	10001862 <_vsnprintf+0x39a>
100017b0:	9a18      	ldr	r2, [sp, #96]	; 0x60
100017b2:	1d11      	adds	r1, r2, #4
100017b4:	9118      	str	r1, [sp, #96]	; 0x60
100017b6:	7812      	ldrb	r2, [r2, #0]
            idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned int)(value > 0 ? value : 0 - value), value < 0, base, precision, width, flags);
100017b8:	ea82 71e2 	eor.w	r1, r2, r2, asr #31
100017bc:	eba1 71e2 	sub.w	r1, r1, r2, asr #31
100017c0:	9505      	str	r5, [sp, #20]
100017c2:	980a      	ldr	r0, [sp, #40]	; 0x28
100017c4:	9004      	str	r0, [sp, #16]
100017c6:	f8cd b00c 	str.w	fp, [sp, #12]
100017ca:	9302      	str	r3, [sp, #8]
100017cc:	0fd2      	lsrs	r2, r2, #31
100017ce:	9201      	str	r2, [sp, #4]
100017d0:	9100      	str	r1, [sp, #0]
100017d2:	4633      	mov	r3, r6
100017d4:	4622      	mov	r2, r4
100017d6:	4641      	mov	r1, r8
100017d8:	4638      	mov	r0, r7
100017da:	f7ff fa03 	bl	10000be4 <_ntoa_long>
100017de:	4604      	mov	r4, r0
        format++;
100017e0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
100017e2:	3301      	adds	r3, #1
100017e4:	930d      	str	r3, [sp, #52]	; 0x34
        break;
100017e6:	e67a      	b.n	100014de <_vsnprintf+0x16>
            const long long value = va_arg(va, long long);
100017e8:	9a18      	ldr	r2, [sp, #96]	; 0x60
100017ea:	3207      	adds	r2, #7
100017ec:	f022 0207 	bic.w	r2, r2, #7
100017f0:	f102 0108 	add.w	r1, r2, #8
100017f4:	9118      	str	r1, [sp, #96]	; 0x60
100017f6:	6851      	ldr	r1, [r2, #4]
            idx = _ntoa_long_long(out, buffer, idx, maxlen, (unsigned long long)(value > 0 ? value : 0 - value), value < 0, base, precision, width, flags);
100017f8:	6812      	ldr	r2, [r2, #0]
100017fa:	4608      	mov	r0, r1
100017fc:	2900      	cmp	r1, #0
100017fe:	db13      	blt.n	10001828 <_vsnprintf+0x360>
10001800:	9508      	str	r5, [sp, #32]
10001802:	9d0a      	ldr	r5, [sp, #40]	; 0x28
10001804:	9507      	str	r5, [sp, #28]
10001806:	f8cd b018 	str.w	fp, [sp, #24]
1000180a:	9304      	str	r3, [sp, #16]
1000180c:	2300      	movs	r3, #0
1000180e:	9305      	str	r3, [sp, #20]
10001810:	0fc9      	lsrs	r1, r1, #31
10001812:	9102      	str	r1, [sp, #8]
10001814:	9200      	str	r2, [sp, #0]
10001816:	9001      	str	r0, [sp, #4]
10001818:	4633      	mov	r3, r6
1000181a:	4622      	mov	r2, r4
1000181c:	4641      	mov	r1, r8
1000181e:	4638      	mov	r0, r7
10001820:	f7ff fa2a 	bl	10000c78 <_ntoa_long_long>
10001824:	4604      	mov	r4, r0
10001826:	e7db      	b.n	100017e0 <_vsnprintf+0x318>
10001828:	4252      	negs	r2, r2
1000182a:	eb61 0041 	sbc.w	r0, r1, r1, lsl #1
1000182e:	e7e7      	b.n	10001800 <_vsnprintf+0x338>
            const long value = va_arg(va, long);
10001830:	9a18      	ldr	r2, [sp, #96]	; 0x60
10001832:	1d11      	adds	r1, r2, #4
10001834:	9118      	str	r1, [sp, #96]	; 0x60
10001836:	6812      	ldr	r2, [r2, #0]
            idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned long)(value > 0 ? value : 0 - value), value < 0, base, precision, width, flags);
10001838:	ea82 71e2 	eor.w	r1, r2, r2, asr #31
1000183c:	eba1 71e2 	sub.w	r1, r1, r2, asr #31
10001840:	9505      	str	r5, [sp, #20]
10001842:	980a      	ldr	r0, [sp, #40]	; 0x28
10001844:	9004      	str	r0, [sp, #16]
10001846:	f8cd b00c 	str.w	fp, [sp, #12]
1000184a:	9302      	str	r3, [sp, #8]
1000184c:	0fd2      	lsrs	r2, r2, #31
1000184e:	9201      	str	r2, [sp, #4]
10001850:	9100      	str	r1, [sp, #0]
10001852:	4633      	mov	r3, r6
10001854:	4622      	mov	r2, r4
10001856:	4641      	mov	r1, r8
10001858:	4638      	mov	r0, r7
1000185a:	f7ff f9c3 	bl	10000be4 <_ntoa_long>
1000185e:	4604      	mov	r4, r0
10001860:	e7be      	b.n	100017e0 <_vsnprintf+0x318>
            const int value = (flags & FLAGS_CHAR) ? (char)va_arg(va, int) : (flags & FLAGS_SHORT) ? (short int)va_arg(va, int) : va_arg(va, int);
10001862:	f015 0f80 	tst.w	r5, #128	; 0x80
10001866:	d005      	beq.n	10001874 <_vsnprintf+0x3ac>
10001868:	9a18      	ldr	r2, [sp, #96]	; 0x60
1000186a:	1d11      	adds	r1, r2, #4
1000186c:	9118      	str	r1, [sp, #96]	; 0x60
1000186e:	f9b2 2000 	ldrsh.w	r2, [r2]
10001872:	e7a1      	b.n	100017b8 <_vsnprintf+0x2f0>
10001874:	9a18      	ldr	r2, [sp, #96]	; 0x60
10001876:	1d11      	adds	r1, r2, #4
10001878:	9118      	str	r1, [sp, #96]	; 0x60
1000187a:	6812      	ldr	r2, [r2, #0]
1000187c:	e79c      	b.n	100017b8 <_vsnprintf+0x2f0>
            idx = _ntoa_long_long(out, buffer, idx, maxlen, va_arg(va, unsigned long long), false, base, precision, width, flags);
1000187e:	9a18      	ldr	r2, [sp, #96]	; 0x60
10001880:	3207      	adds	r2, #7
10001882:	f022 0207 	bic.w	r2, r2, #7
10001886:	f102 0108 	add.w	r1, r2, #8
1000188a:	9118      	str	r1, [sp, #96]	; 0x60
1000188c:	9508      	str	r5, [sp, #32]
1000188e:	990a      	ldr	r1, [sp, #40]	; 0x28
10001890:	9107      	str	r1, [sp, #28]
10001892:	f8cd b018 	str.w	fp, [sp, #24]
10001896:	2100      	movs	r1, #0
10001898:	9304      	str	r3, [sp, #16]
1000189a:	9105      	str	r1, [sp, #20]
1000189c:	9102      	str	r1, [sp, #8]
1000189e:	e9d2 2300 	ldrd	r2, r3, [r2]
100018a2:	e9cd 2300 	strd	r2, r3, [sp]
100018a6:	4633      	mov	r3, r6
100018a8:	4622      	mov	r2, r4
100018aa:	4641      	mov	r1, r8
100018ac:	4638      	mov	r0, r7
100018ae:	f7ff f9e3 	bl	10000c78 <_ntoa_long_long>
100018b2:	4604      	mov	r4, r0
100018b4:	e794      	b.n	100017e0 <_vsnprintf+0x318>
            idx = _ntoa_long(out, buffer, idx, maxlen, va_arg(va, unsigned long), false, base, precision, width, flags);
100018b6:	9a18      	ldr	r2, [sp, #96]	; 0x60
100018b8:	1d11      	adds	r1, r2, #4
100018ba:	9118      	str	r1, [sp, #96]	; 0x60
100018bc:	9505      	str	r5, [sp, #20]
100018be:	990a      	ldr	r1, [sp, #40]	; 0x28
100018c0:	9104      	str	r1, [sp, #16]
100018c2:	f8cd b00c 	str.w	fp, [sp, #12]
100018c6:	9302      	str	r3, [sp, #8]
100018c8:	2300      	movs	r3, #0
100018ca:	9301      	str	r3, [sp, #4]
100018cc:	6813      	ldr	r3, [r2, #0]
100018ce:	9300      	str	r3, [sp, #0]
100018d0:	4633      	mov	r3, r6
100018d2:	4622      	mov	r2, r4
100018d4:	4641      	mov	r1, r8
100018d6:	4638      	mov	r0, r7
100018d8:	f7ff f984 	bl	10000be4 <_ntoa_long>
100018dc:	4604      	mov	r4, r0
100018de:	e77f      	b.n	100017e0 <_vsnprintf+0x318>
            const unsigned int value = (flags & FLAGS_CHAR) ? (unsigned char)va_arg(va, unsigned int) : (flags & FLAGS_SHORT) ? (unsigned short int)va_arg(va, unsigned int) : va_arg(va, unsigned int);
100018e0:	f015 0f80 	tst.w	r5, #128	; 0x80
100018e4:	d004      	beq.n	100018f0 <_vsnprintf+0x428>
100018e6:	9a18      	ldr	r2, [sp, #96]	; 0x60
100018e8:	1d11      	adds	r1, r2, #4
100018ea:	9118      	str	r1, [sp, #96]	; 0x60
100018ec:	8812      	ldrh	r2, [r2, #0]
100018ee:	e73c      	b.n	1000176a <_vsnprintf+0x2a2>
100018f0:	9a18      	ldr	r2, [sp, #96]	; 0x60
100018f2:	1d11      	adds	r1, r2, #4
100018f4:	9118      	str	r1, [sp, #96]	; 0x60
100018f6:	6812      	ldr	r2, [r2, #0]
100018f8:	e737      	b.n	1000176a <_vsnprintf+0x2a2>
        if (*format == 'F') flags |= FLAGS_UPPERCASE;
100018fa:	2846      	cmp	r0, #70	; 0x46
100018fc:	d01a      	beq.n	10001934 <_vsnprintf+0x46c>
        idx = _ftoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
100018fe:	9b18      	ldr	r3, [sp, #96]	; 0x60
10001900:	3307      	adds	r3, #7
10001902:	f023 0307 	bic.w	r3, r3, #7
10001906:	f103 0208 	add.w	r2, r3, #8
1000190a:	9218      	str	r2, [sp, #96]	; 0x60
1000190c:	9504      	str	r5, [sp, #16]
1000190e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
10001910:	9203      	str	r2, [sp, #12]
10001912:	f8cd b008 	str.w	fp, [sp, #8]
10001916:	e9d3 2300 	ldrd	r2, r3, [r3]
1000191a:	e9cd 2300 	strd	r2, r3, [sp]
1000191e:	4633      	mov	r3, r6
10001920:	4622      	mov	r2, r4
10001922:	4641      	mov	r1, r8
10001924:	4638      	mov	r0, r7
10001926:	f7ff fc03 	bl	10001130 <_ftoa>
1000192a:	4604      	mov	r4, r0
        format++;
1000192c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
1000192e:	3301      	adds	r3, #1
10001930:	930d      	str	r3, [sp, #52]	; 0x34
        break;
10001932:	e5d4      	b.n	100014de <_vsnprintf+0x16>
        if (*format == 'F') flags |= FLAGS_UPPERCASE;
10001934:	f045 0520 	orr.w	r5, r5, #32
10001938:	e7e1      	b.n	100018fe <_vsnprintf+0x436>
        if ((*format == 'g')||(*format == 'G')) flags |= FLAGS_ADAPT_EXP;
1000193a:	2867      	cmp	r0, #103	; 0x67
1000193c:	d001      	beq.n	10001942 <_vsnprintf+0x47a>
1000193e:	2847      	cmp	r0, #71	; 0x47
10001940:	d101      	bne.n	10001946 <_vsnprintf+0x47e>
10001942:	f445 6500 	orr.w	r5, r5, #2048	; 0x800
        if ((*format == 'E')||(*format == 'G')) flags |= FLAGS_UPPERCASE;
10001946:	2845      	cmp	r0, #69	; 0x45
10001948:	d001      	beq.n	1000194e <_vsnprintf+0x486>
1000194a:	2847      	cmp	r0, #71	; 0x47
1000194c:	d101      	bne.n	10001952 <_vsnprintf+0x48a>
1000194e:	f045 0520 	orr.w	r5, r5, #32
        idx = _etoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
10001952:	9b18      	ldr	r3, [sp, #96]	; 0x60
10001954:	3307      	adds	r3, #7
10001956:	f023 0307 	bic.w	r3, r3, #7
1000195a:	f103 0208 	add.w	r2, r3, #8
1000195e:	9218      	str	r2, [sp, #96]	; 0x60
10001960:	9504      	str	r5, [sp, #16]
10001962:	9a0a      	ldr	r2, [sp, #40]	; 0x28
10001964:	9203      	str	r2, [sp, #12]
10001966:	f8cd b008 	str.w	fp, [sp, #8]
1000196a:	e9d3 2300 	ldrd	r2, r3, [r3]
1000196e:	e9cd 2300 	strd	r2, r3, [sp]
10001972:	4633      	mov	r3, r6
10001974:	4622      	mov	r2, r4
10001976:	4641      	mov	r1, r8
10001978:	4638      	mov	r0, r7
1000197a:	f7ff f9e1 	bl	10000d40 <_etoa>
1000197e:	4604      	mov	r4, r0
        format++;
10001980:	9b0d      	ldr	r3, [sp, #52]	; 0x34
10001982:	3301      	adds	r3, #1
10001984:	930d      	str	r3, [sp, #52]	; 0x34
        break;
10001986:	e5aa      	b.n	100014de <_vsnprintf+0x16>
        if (!(flags & FLAGS_LEFT)) {
10001988:	f015 0502 	ands.w	r5, r5, #2
1000198c:	d01f      	beq.n	100019ce <_vsnprintf+0x506>
        unsigned int l = 1U;
1000198e:	f04f 0901 	mov.w	r9, #1
        out((char)va_arg(va, int), buffer, idx++, maxlen);
10001992:	9818      	ldr	r0, [sp, #96]	; 0x60
10001994:	1d03      	adds	r3, r0, #4
10001996:	9318      	str	r3, [sp, #96]	; 0x60
10001998:	f104 0a01 	add.w	sl, r4, #1
1000199c:	4633      	mov	r3, r6
1000199e:	4622      	mov	r2, r4
100019a0:	4641      	mov	r1, r8
100019a2:	7800      	ldrb	r0, [r0, #0]
100019a4:	47b8      	blx	r7
        if (flags & FLAGS_LEFT) {
100019a6:	b9bd      	cbnz	r5, 100019d8 <_vsnprintf+0x510>
        format++;
100019a8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
100019aa:	3301      	adds	r3, #1
100019ac:	930d      	str	r3, [sp, #52]	; 0x34
        break;
100019ae:	4654      	mov	r4, sl
100019b0:	e595      	b.n	100014de <_vsnprintf+0x16>
            out(' ', buffer, idx++, maxlen);
100019b2:	f102 0a01 	add.w	sl, r2, #1
100019b6:	4633      	mov	r3, r6
100019b8:	4641      	mov	r1, r8
100019ba:	2020      	movs	r0, #32
100019bc:	47b8      	blx	r7
          while (l++ < width) {
100019be:	464b      	mov	r3, r9
            out(' ', buffer, idx++, maxlen);
100019c0:	4652      	mov	r2, sl
          while (l++ < width) {
100019c2:	f103 0901 	add.w	r9, r3, #1
100019c6:	459b      	cmp	fp, r3
100019c8:	d8f3      	bhi.n	100019b2 <_vsnprintf+0x4ea>
100019ca:	4614      	mov	r4, r2
100019cc:	e7e1      	b.n	10001992 <_vsnprintf+0x4ca>
        unsigned int l = 1U;
100019ce:	2301      	movs	r3, #1
100019d0:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
100019d4:	4622      	mov	r2, r4
100019d6:	e7f4      	b.n	100019c2 <_vsnprintf+0x4fa>
100019d8:	4652      	mov	r2, sl
100019da:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
100019de:	e006      	b.n	100019ee <_vsnprintf+0x526>
            out(' ', buffer, idx++, maxlen);
100019e0:	1c55      	adds	r5, r2, #1
100019e2:	4633      	mov	r3, r6
100019e4:	4641      	mov	r1, r8
100019e6:	2020      	movs	r0, #32
100019e8:	47b8      	blx	r7
          while (l++ < width) {
100019ea:	46a1      	mov	r9, r4
            out(' ', buffer, idx++, maxlen);
100019ec:	462a      	mov	r2, r5
          while (l++ < width) {
100019ee:	f109 0401 	add.w	r4, r9, #1
100019f2:	45ca      	cmp	sl, r9
100019f4:	d8f4      	bhi.n	100019e0 <_vsnprintf+0x518>
100019f6:	4692      	mov	sl, r2
100019f8:	e7d6      	b.n	100019a8 <_vsnprintf+0x4e0>
      }

      case 's' : {
        const char* p = va_arg(va, char*);
100019fa:	9b18      	ldr	r3, [sp, #96]	; 0x60
100019fc:	1d1a      	adds	r2, r3, #4
100019fe:	9218      	str	r2, [sp, #96]	; 0x60
10001a00:	f8d3 a000 	ldr.w	sl, [r3]
        unsigned int l = _strnlen_s(p, precision ? precision : (size_t)-1);
10001a04:	f1bb 0f00 	cmp.w	fp, #0
10001a08:	d11e      	bne.n	10001a48 <_vsnprintf+0x580>
10001a0a:	f04f 33ff 	mov.w	r3, #4294967295
10001a0e:	46d1      	mov	r9, sl
10001a10:	e002      	b.n	10001a18 <_vsnprintf+0x550>
  for (s = str; *s && maxsize--; ++s);
10001a12:	f109 0901 	add.w	r9, r9, #1
10001a16:	4613      	mov	r3, r2
10001a18:	f899 2000 	ldrb.w	r2, [r9]
10001a1c:	b112      	cbz	r2, 10001a24 <_vsnprintf+0x55c>
10001a1e:	1e5a      	subs	r2, r3, #1
10001a20:	2b00      	cmp	r3, #0
10001a22:	d1f6      	bne.n	10001a12 <_vsnprintf+0x54a>
  return (unsigned int)(s - str);
10001a24:	eba9 090a 	sub.w	r9, r9, sl
        // pre padding
        if (flags & FLAGS_PRECISION) {
10001a28:	f415 6380 	ands.w	r3, r5, #1024	; 0x400
10001a2c:	930b      	str	r3, [sp, #44]	; 0x2c
10001a2e:	d002      	beq.n	10001a36 <_vsnprintf+0x56e>
          l = (l < precision ? l : precision);
10001a30:	45d9      	cmp	r9, fp
10001a32:	bf28      	it	cs
10001a34:	46d9      	movcs	r9, fp
        }
        if (!(flags & FLAGS_LEFT)) {
10001a36:	f015 0302 	ands.w	r3, r5, #2
10001a3a:	930c      	str	r3, [sp, #48]	; 0x30
10001a3c:	d006      	beq.n	10001a4c <_vsnprintf+0x584>
10001a3e:	4622      	mov	r2, r4
10001a40:	465c      	mov	r4, fp
10001a42:	46b3      	mov	fp, r6
10001a44:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
10001a46:	e01d      	b.n	10001a84 <_vsnprintf+0x5bc>
        unsigned int l = _strnlen_s(p, precision ? precision : (size_t)-1);
10001a48:	465b      	mov	r3, fp
10001a4a:	e7e0      	b.n	10001a0e <_vsnprintf+0x546>
10001a4c:	4622      	mov	r2, r4
10001a4e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
10001a50:	464b      	mov	r3, r9
10001a52:	e007      	b.n	10001a64 <_vsnprintf+0x59c>
          while (l++ < width) {
            out(' ', buffer, idx++, maxlen);
10001a54:	f102 0901 	add.w	r9, r2, #1
10001a58:	4633      	mov	r3, r6
10001a5a:	4641      	mov	r1, r8
10001a5c:	2020      	movs	r0, #32
10001a5e:	47b8      	blx	r7
          while (l++ < width) {
10001a60:	462b      	mov	r3, r5
            out(' ', buffer, idx++, maxlen);
10001a62:	464a      	mov	r2, r9
          while (l++ < width) {
10001a64:	1c5d      	adds	r5, r3, #1
10001a66:	429c      	cmp	r4, r3
10001a68:	d8f4      	bhi.n	10001a54 <_vsnprintf+0x58c>
10001a6a:	46a9      	mov	r9, r5
10001a6c:	465c      	mov	r4, fp
10001a6e:	46b3      	mov	fp, r6
10001a70:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
10001a72:	e007      	b.n	10001a84 <_vsnprintf+0x5bc>
          }
        }
        // string output
        while ((*p != 0) && (!(flags & FLAGS_PRECISION) || precision--)) {
10001a74:	461c      	mov	r4, r3
          out(*(p++), buffer, idx++, maxlen);
10001a76:	f10a 0a01 	add.w	sl, sl, #1
10001a7a:	1c55      	adds	r5, r2, #1
10001a7c:	465b      	mov	r3, fp
10001a7e:	4641      	mov	r1, r8
10001a80:	47b8      	blx	r7
10001a82:	462a      	mov	r2, r5
        while ((*p != 0) && (!(flags & FLAGS_PRECISION) || precision--)) {
10001a84:	f89a 0000 	ldrb.w	r0, [sl]
10001a88:	b120      	cbz	r0, 10001a94 <_vsnprintf+0x5cc>
10001a8a:	2e00      	cmp	r6, #0
10001a8c:	d0f3      	beq.n	10001a76 <_vsnprintf+0x5ae>
10001a8e:	1e63      	subs	r3, r4, #1
10001a90:	2c00      	cmp	r4, #0
10001a92:	d1ef      	bne.n	10001a74 <_vsnprintf+0x5ac>
        }
        // post padding
        if (flags & FLAGS_LEFT) {
10001a94:	4614      	mov	r4, r2
10001a96:	465e      	mov	r6, fp
10001a98:	9b0c      	ldr	r3, [sp, #48]	; 0x30
10001a9a:	b91b      	cbnz	r3, 10001aa4 <_vsnprintf+0x5dc>
          while (l++ < width) {
            out(' ', buffer, idx++, maxlen);
          }
        }
        format++;
10001a9c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
10001a9e:	3301      	adds	r3, #1
10001aa0:	930d      	str	r3, [sp, #52]	; 0x34
        break;
10001aa2:	e51c      	b.n	100014de <_vsnprintf+0x16>
10001aa4:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
10001aa8:	e006      	b.n	10001ab8 <_vsnprintf+0x5f0>
            out(' ', buffer, idx++, maxlen);
10001aaa:	1c55      	adds	r5, r2, #1
10001aac:	4633      	mov	r3, r6
10001aae:	4641      	mov	r1, r8
10001ab0:	2020      	movs	r0, #32
10001ab2:	47b8      	blx	r7
          while (l++ < width) {
10001ab4:	46a1      	mov	r9, r4
            out(' ', buffer, idx++, maxlen);
10001ab6:	462a      	mov	r2, r5
          while (l++ < width) {
10001ab8:	f109 0401 	add.w	r4, r9, #1
10001abc:	45ca      	cmp	sl, r9
10001abe:	d8f4      	bhi.n	10001aaa <_vsnprintf+0x5e2>
10001ac0:	4614      	mov	r4, r2
10001ac2:	e7eb      	b.n	10001a9c <_vsnprintf+0x5d4>
      }

      case 'p' : {
        width = sizeof(void*) * 2U;
        flags |= FLAGS_ZEROPAD | FLAGS_UPPERCASE;
10001ac4:	f045 0521 	orr.w	r5, r5, #33	; 0x21
        if (is_ll) {
          idx = _ntoa_long_long(out, buffer, idx, maxlen, (uintptr_t)va_arg(va, void*), false, 16U, precision, width, flags);
        }
        else {
#endif
          idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned long)((uintptr_t)va_arg(va, void*)), false, 16U, precision, width, flags);
10001ac8:	9b18      	ldr	r3, [sp, #96]	; 0x60
10001aca:	1d1a      	adds	r2, r3, #4
10001acc:	9218      	str	r2, [sp, #96]	; 0x60
10001ace:	681b      	ldr	r3, [r3, #0]
10001ad0:	9505      	str	r5, [sp, #20]
10001ad2:	2208      	movs	r2, #8
10001ad4:	9204      	str	r2, [sp, #16]
10001ad6:	f8cd b00c 	str.w	fp, [sp, #12]
10001ada:	2210      	movs	r2, #16
10001adc:	9202      	str	r2, [sp, #8]
10001ade:	2200      	movs	r2, #0
10001ae0:	9201      	str	r2, [sp, #4]
10001ae2:	9300      	str	r3, [sp, #0]
10001ae4:	4633      	mov	r3, r6
10001ae6:	4622      	mov	r2, r4
10001ae8:	4641      	mov	r1, r8
10001aea:	4638      	mov	r0, r7
10001aec:	f7ff f87a 	bl	10000be4 <_ntoa_long>
10001af0:	4604      	mov	r4, r0
#if defined(PRINTF_SUPPORT_LONG_LONG)
        }
#endif
        format++;
10001af2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
10001af4:	3301      	adds	r3, #1
10001af6:	930d      	str	r3, [sp, #52]	; 0x34
        break;
10001af8:	e4f1      	b.n	100014de <_vsnprintf+0x16>
      }

      case '%' :
        out('%', buffer, idx++, maxlen);
10001afa:	1c65      	adds	r5, r4, #1
10001afc:	4633      	mov	r3, r6
10001afe:	4622      	mov	r2, r4
10001b00:	4641      	mov	r1, r8
10001b02:	2025      	movs	r0, #37	; 0x25
10001b04:	47b8      	blx	r7
        format++;
10001b06:	9b0d      	ldr	r3, [sp, #52]	; 0x34
10001b08:	3301      	adds	r3, #1
10001b0a:	930d      	str	r3, [sp, #52]	; 0x34
        out('%', buffer, idx++, maxlen);
10001b0c:	462c      	mov	r4, r5
        break;
10001b0e:	e4e6      	b.n	100014de <_vsnprintf+0x16>

      default :
        out(*format, buffer, idx++, maxlen);
10001b10:	1c65      	adds	r5, r4, #1
10001b12:	4633      	mov	r3, r6
10001b14:	4622      	mov	r2, r4
10001b16:	4641      	mov	r1, r8
10001b18:	47b8      	blx	r7
        format++;
10001b1a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
10001b1c:	3301      	adds	r3, #1
10001b1e:	930d      	str	r3, [sp, #52]	; 0x34
        out(*format, buffer, idx++, maxlen);
10001b20:	462c      	mov	r4, r5
        break;
10001b22:	e4dc      	b.n	100014de <_vsnprintf+0x16>
    out = _out_null;
10001b24:	4f07      	ldr	r7, [pc, #28]	; (10001b44 <_vsnprintf+0x67c>)
10001b26:	e4d9      	b.n	100014dc <_vsnprintf+0x14>
    }
  }

  // termination
  out((char)0, buffer, idx < maxlen ? idx : maxlen - 1U, maxlen);
10001b28:	42b4      	cmp	r4, r6
10001b2a:	d301      	bcc.n	10001b30 <_vsnprintf+0x668>
10001b2c:	1e72      	subs	r2, r6, #1
10001b2e:	e000      	b.n	10001b32 <_vsnprintf+0x66a>
10001b30:	4622      	mov	r2, r4
10001b32:	4633      	mov	r3, r6
10001b34:	4641      	mov	r1, r8
10001b36:	2000      	movs	r0, #0
10001b38:	47b8      	blx	r7

  // return written chars without terminating \0
  return (int)idx;
}
10001b3a:	4620      	mov	r0, r4
10001b3c:	b00f      	add	sp, #60	; 0x3c
10001b3e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10001b42:	bf00      	nop
10001b44:	10000a09 	andne	r0, r0, r9, lsl #20

10001b48 <_out_char>:
  if (character) {
10001b48:	b900      	cbnz	r0, 10001b4c <_out_char+0x4>
10001b4a:	4770      	bx	lr
{
10001b4c:	b508      	push	{r3, lr}
    put_char(character);
10001b4e:	f000 f817 	bl	10001b80 <put_char>
}
10001b52:	bd08      	pop	{r3, pc}

10001b54 <printf>:


///////////////////////////////////////////////////////////////////////////////

int printf(const char* format, ...)
{
10001b54:	b40f      	push	{r0, r1, r2, r3}
10001b56:	b500      	push	{lr}
10001b58:	b085      	sub	sp, #20
10001b5a:	aa06      	add	r2, sp, #24
10001b5c:	f852 3b04 	ldr.w	r3, [r2], #4
  va_list va;
  va_start(va, format);
10001b60:	9203      	str	r2, [sp, #12]
  char buffer[1];
  const int ret = _vsnprintf(_out_char, buffer, (size_t)-1, format, va);
10001b62:	9200      	str	r2, [sp, #0]
10001b64:	f04f 32ff 	mov.w	r2, #4294967295
10001b68:	a902      	add	r1, sp, #8
10001b6a:	4804      	ldr	r0, [pc, #16]	; (10001b7c <printf+0x28>)
10001b6c:	f7ff fcac 	bl	100014c8 <_vsnprintf>
  va_end(va);
  return ret;
}
10001b70:	b005      	add	sp, #20
10001b72:	f85d eb04 	ldr.w	lr, [sp], #4
10001b76:	b004      	add	sp, #16
10001b78:	4770      	bx	lr
10001b7a:	bf00      	nop
10001b7c:	10001b49 	andne	r1, r0, r9, asr #22

10001b80 <put_char>:
#define UART_MIS(base)          (*((volatile uint32_t *)(base + 0x40)))
#define UART_ICR(base)          (*((volatile uint32_t *)(base + 0x44)))
#define UART_DMACR(base)        (*((volatile uint32_t *)(base + 0x48)))

int put_char(int ch) {
    while (UART_FLAG(UART0) & 0x20);
10001b80:	4b03      	ldr	r3, [pc, #12]	; (10001b90 <put_char+0x10>)
10001b82:	699b      	ldr	r3, [r3, #24]
10001b84:	f013 0f20 	tst.w	r3, #32
10001b88:	d1fa      	bne.n	10001b80 <put_char>
    UART_DATA(UART0) = ch;
10001b8a:	4b01      	ldr	r3, [pc, #4]	; (10001b90 <put_char+0x10>)
10001b8c:	6018      	str	r0, [r3, #0]
    return ch;
}
10001b8e:	4770      	bx	lr
10001b90:	40200000 	eormi	r0, r0, r0

10001b94 <puts>:
int get_char(void) {
    while ((UART_FLAG(UART0) & 0x40) == 0);
    return UART_DATA(UART0);
}

int puts(const char* string) {
10001b94:	b538      	push	{r3, r4, r5, lr}
10001b96:	4605      	mov	r5, r0
    int index = 0;
10001b98:	2400      	movs	r4, #0
    while (string[index] != '\0') {
10001b9a:	e002      	b.n	10001ba2 <puts+0xe>
        put_char(string[index]);
10001b9c:	f7ff fff0 	bl	10001b80 <put_char>
        index++;
10001ba0:	3401      	adds	r4, #1
    while (string[index] != '\0') {
10001ba2:	5d28      	ldrb	r0, [r5, r4]
10001ba4:	2800      	cmp	r0, #0
10001ba6:	d1f9      	bne.n	10001b9c <puts+0x8>
    }
    put_char('\n');
10001ba8:	200a      	movs	r0, #10
10001baa:	f7ff ffe9 	bl	10001b80 <put_char>
    return index;
}
10001bae:	4620      	mov	r0, r4
10001bb0:	bd38      	pop	{r3, r4, r5, pc}
	...

10001bb4 <uart_init>:

void uart_init(void) {
    UART_IBRD(UART0) = 40;
10001bb4:	4b07      	ldr	r3, [pc, #28]	; (10001bd4 <uart_init+0x20>)
10001bb6:	2228      	movs	r2, #40	; 0x28
10001bb8:	625a      	str	r2, [r3, #36]	; 0x24
    UART_FBRD(UART0) = 11;
10001bba:	220b      	movs	r2, #11
10001bbc:	629a      	str	r2, [r3, #40]	; 0x28
    UART_LCRH(UART0) = 0x60;
10001bbe:	2260      	movs	r2, #96	; 0x60
10001bc0:	62da      	str	r2, [r3, #44]	; 0x2c
    UART_CR(UART0)   = 0x301;
10001bc2:	f240 3201 	movw	r2, #769	; 0x301
10001bc6:	631a      	str	r2, [r3, #48]	; 0x30
    UART_RSR(UART0)  = 0x0A;
10001bc8:	220a      	movs	r2, #10
10001bca:	605a      	str	r2, [r3, #4]
    UART_CTRL(UART0) = 0x01;
10001bcc:	2201      	movs	r2, #1
10001bce:	609a      	str	r2, [r3, #8]
}
10001bd0:	4770      	bx	lr
10001bd2:	bf00      	nop
10001bd4:	40200000 	eormi	r0, r0, r0

10001bd8 <fault_dump_opcode>:
    FD_CODE_TEXT_BASE,  FD_CODE_TEXT_ENDS,  FD_CODE_TEXT_SIZE );
    printf("Code Stack Growth Downward:%d\r\n", 
    FD_STACK_GROWTH_DOWNWARD);
}

static unsigned int fault_dump_opcode(unsigned int pc) {
10001bd8:	b082      	sub	sp, #8
    uint16_t value[2] = {0};
10001bda:	2300      	movs	r3, #0
10001bdc:	9301      	str	r3, [sp, #4]
    unsigned int opcode = 0;
    for (int i = 0; i < (sizeof(value) / sizeof(uint16_t)); i++) {
10001bde:	e007      	b.n	10001bf0 <fault_dump_opcode+0x18>
        value[i] = *(uint16_t*)(pc + i * sizeof(uint16_t));
10001be0:	f830 1013 	ldrh.w	r1, [r0, r3, lsl #1]
10001be4:	aa02      	add	r2, sp, #8
10001be6:	eb02 0243 	add.w	r2, r2, r3, lsl #1
10001bea:	f822 1c04 	strh.w	r1, [r2, #-4]
    for (int i = 0; i < (sizeof(value) / sizeof(uint16_t)); i++) {
10001bee:	3301      	adds	r3, #1
10001bf0:	2b01      	cmp	r3, #1
10001bf2:	d9f5      	bls.n	10001be0 <fault_dump_opcode+0x8>
    }
    opcode = ((unsigned int)value[1] << 0x10) |
10001bf4:	f8bd 0006 	ldrh.w	r0, [sp, #6]
             ((unsigned int)value[0] << 0x00);
10001bf8:	f8bd 3004 	ldrh.w	r3, [sp, #4]
    return opcode;
}
10001bfc:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
10001c00:	b002      	add	sp, #8
10001c02:	4770      	bx	lr

10001c04 <opcode_is_bl_or_blx>:

static bool opcode_is_bl_or_blx(unsigned int ins) {
#define FD_BL_OPCODE_MASK   (0xF800)
#define FD_BL_OPCODE_BL     (0xF000)
#define FD_BL_OPCODE_BLX    (0xF800)
    uint16_t opcode1 = (((ins >> 0x00) & 0xFFFF) & FD_BL_OPCODE_MASK);
10001c04:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
    uint16_t opcode2 = (((ins >> 0x10) & 0xFFFF) & FD_BL_OPCODE_MASK);
10001c08:	0c00      	lsrs	r0, r0, #16
10001c0a:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
    if ((opcode1 == FD_BL_OPCODE_BL) || (opcode1 == FD_BL_OPCODE_BLX)) {
10001c0e:	f5b3 4f70 	cmp.w	r3, #61440	; 0xf000
10001c12:	d00a      	beq.n	10001c2a <opcode_is_bl_or_blx+0x26>
10001c14:	f5b3 4f78 	cmp.w	r3, #63488	; 0xf800
10001c18:	d009      	beq.n	10001c2e <opcode_is_bl_or_blx+0x2a>
        return true;
    }
    if ((opcode2 == FD_BL_OPCODE_BL) || (opcode2 == FD_BL_OPCODE_BLX)) {
10001c1a:	f5b0 4f70 	cmp.w	r0, #61440	; 0xf000
10001c1e:	d008      	beq.n	10001c32 <opcode_is_bl_or_blx+0x2e>
10001c20:	f5b0 4f78 	cmp.w	r0, #63488	; 0xf800
10001c24:	d007      	beq.n	10001c36 <opcode_is_bl_or_blx+0x32>
        return true;
    }
    return false;
10001c26:	2000      	movs	r0, #0
10001c28:	4770      	bx	lr
        return true;
10001c2a:	2001      	movs	r0, #1
10001c2c:	4770      	bx	lr
10001c2e:	2001      	movs	r0, #1
10001c30:	4770      	bx	lr
        return true;
10001c32:	2001      	movs	r0, #1
10001c34:	4770      	bx	lr
10001c36:	2001      	movs	r0, #1
}
10001c38:	4770      	bx	lr
	...

10001c3c <dump_exc_return>:

static void dump_exc_return(unsigned int exc_return) {
10001c3c:	b510      	push	{r4, lr}
10001c3e:	4604      	mov	r4, r0
    printf(" EXE_RETURN: 0x%08X \r\n", exc_return);
10001c40:	4601      	mov	r1, r0
10001c42:	4803      	ldr	r0, [pc, #12]	; (10001c50 <dump_exc_return+0x14>)
10001c44:	f7ff ff86 	bl	10001b54 <printf>
#if FD_DUMP_EXC_RETURN_VALUE
    extern void fault_dump_exc_return(unsigned int exc_return);
    fault_dump_exc_return(exc_return);
10001c48:	4620      	mov	r0, r4
10001c4a:	f000 f933 	bl	10001eb4 <fault_dump_exc_return>
#endif
}
10001c4e:	bd10      	pop	{r4, pc}
10001c50:	10005970 	andne	r5, r0, r0, ror r9

10001c54 <fault_dump_init>:
void fault_dump_init(void) {
10001c54:	b508      	push	{r3, lr}
    fd_main_stack_base = FD_CODE_STACK_BASE;
10001c56:	490a      	ldr	r1, [pc, #40]	; (10001c80 <fault_dump_init+0x2c>)
10001c58:	4b0a      	ldr	r3, [pc, #40]	; (10001c84 <fault_dump_init+0x30>)
10001c5a:	6019      	str	r1, [r3, #0]
    fd_main_stack_full = FD_CODE_STACK_FULL;
10001c5c:	4a0a      	ldr	r2, [pc, #40]	; (10001c88 <fault_dump_init+0x34>)
10001c5e:	4b0b      	ldr	r3, [pc, #44]	; (10001c8c <fault_dump_init+0x38>)
10001c60:	601a      	str	r2, [r3, #0]
    printf("Code Stack:[%08X - %08X], size:%d\r\n",
10001c62:	1a53      	subs	r3, r2, r1
10001c64:	480a      	ldr	r0, [pc, #40]	; (10001c90 <fault_dump_init+0x3c>)
10001c66:	f7ff ff75 	bl	10001b54 <printf>
    printf("Code Text :[%08X - %08X], size:%d\r\n",
10001c6a:	490a      	ldr	r1, [pc, #40]	; (10001c94 <fault_dump_init+0x40>)
10001c6c:	4a0a      	ldr	r2, [pc, #40]	; (10001c98 <fault_dump_init+0x44>)
10001c6e:	1a53      	subs	r3, r2, r1
10001c70:	480a      	ldr	r0, [pc, #40]	; (10001c9c <fault_dump_init+0x48>)
10001c72:	f7ff ff6f 	bl	10001b54 <printf>
    printf("Code Stack Growth Downward:%d\r\n", 
10001c76:	2101      	movs	r1, #1
10001c78:	4809      	ldr	r0, [pc, #36]	; (10001ca0 <fault_dump_init+0x4c>)
10001c7a:	f7ff ff6b 	bl	10001b54 <printf>
}
10001c7e:	bd08      	pop	{r3, pc}
10001c80:	380ff000 	stmdacc	pc, {ip, sp, lr, pc}	; <UNPREDICTABLE>
10001c84:	38008568 	stmdacc	r0, {r3, r5, r6, r8, sl, pc}
10001c88:	38100000 	ldmdacc	r0, {}	; <UNPREDICTABLE>
10001c8c:	3800856c 	stmdacc	r0, {r2, r3, r5, r6, r8, sl, pc}
10001c90:	10005988 	andne	r5, r0, r8, lsl #19
10001c94:	10000000 	andne	r0, r0, r0
10001c98:	10005da0 	andne	r5, r0, r0, lsr #27
10001c9c:	100059ac 	andne	r5, r0, ip, lsr #19
10001ca0:	100059d0 	ldrdne	r5, [r0], -r0

10001ca4 <fault_dump_callstack>:
    }
    printf("\r\n");
    while (1);
}

int fault_dump_callstack(unsigned int *buffer, size_t size, unsigned int *stack_point, unsigned int *stack_start) {
10001ca4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    int count = 0;
    unsigned int pc = 0, op = 0, *sp = NULL;
    if ((buffer == NULL) || (size <= 0)) {
10001ca8:	b348      	cbz	r0, 10001cfe <fault_dump_callstack+0x5a>
10001caa:	460f      	mov	r7, r1
10001cac:	4614      	mov	r4, r2
10001cae:	461d      	mov	r5, r3
10001cb0:	4680      	mov	r8, r0
10001cb2:	b339      	cbz	r1, 10001d04 <fault_dump_callstack+0x60>
        return -FD_EEMPTY;
    }
    FD_STACK_CHECKIT(stack_point, stack_start) {
10001cb4:	b34a      	cbz	r2, 10001d0a <fault_dump_callstack+0x66>
10001cb6:	429a      	cmp	r2, r3
10001cb8:	d82a      	bhi.n	10001d10 <fault_dump_callstack+0x6c>
    int count = 0;
10001cba:	2600      	movs	r6, #0
10001cbc:	e000      	b.n	10001cc0 <fault_dump_callstack+0x1c>
        return -FD_EINVAL;
    }
    FD_STACK_FOREACH(stack_point, stack_start) {
10001cbe:	3404      	adds	r4, #4
10001cc0:	b1d4      	cbz	r4, 10001cf8 <fault_dump_callstack+0x54>
10001cc2:	42ac      	cmp	r4, r5
10001cc4:	d818      	bhi.n	10001cf8 <fault_dump_callstack+0x54>
        // Read stack[x] value to pc.
        pc = *(unsigned int *)sp;
10001cc6:	6822      	ldr	r2, [r4, #0]
        // PC must be in the code segment.
        if ((pc < FD_CODE_TEXT_BASE) || (pc > FD_CODE_TEXT_ENDS)) {
10001cc8:	4813      	ldr	r0, [pc, #76]	; (10001d18 <fault_dump_callstack+0x74>)
10001cca:	4290      	cmp	r0, r2
10001ccc:	d8f7      	bhi.n	10001cbe <fault_dump_callstack+0x1a>
10001cce:	4b13      	ldr	r3, [pc, #76]	; (10001d1c <fault_dump_callstack+0x78>)
10001cd0:	4293      	cmp	r3, r2
10001cd2:	d3f4      	bcc.n	10001cbe <fault_dump_callstack+0x1a>
            continue;
        }
        // The thumb instruction must be an odd number.
        if ((pc % 2) == 0) {
10001cd4:	f012 0f01 	tst.w	r2, #1
10001cd8:	d0f1      	beq.n	10001cbe <fault_dump_callstack+0x1a>
            continue;
        }
        // Fix thumb instruction set.
        pc = pc - 1;
        // Calculate the address of the instruction being executed before pushing on the stack.
        pc = pc - sizeof(unsigned int);
10001cda:	f1a2 0905 	sub.w	r9, r2, #5
        // The thumb instruction is at least 2-byte aligned.
        if ((pc & 0x1) != 0) {
10001cde:	d0ee      	beq.n	10001cbe <fault_dump_callstack+0x1a>
            continue;
        }
        // Read the instruction at the PC address.
        op = fault_dump_opcode(pc);
10001ce0:	4648      	mov	r0, r9
10001ce2:	f7ff ff79 	bl	10001bd8 <fault_dump_opcode>
        // Only BL or BLX opcode need to be recorded.
        if (!opcode_is_bl_or_blx(op)) {
10001ce6:	f7ff ff8d 	bl	10001c04 <opcode_is_bl_or_blx>
10001cea:	2800      	cmp	r0, #0
10001cec:	d0e7      	beq.n	10001cbe <fault_dump_callstack+0x1a>
            continue;
        }
        // storage this address.
        buffer[count] = pc;
10001cee:	f848 9026 	str.w	r9, [r8, r6, lsl #2]
        count = count + 1;
10001cf2:	3601      	adds	r6, #1
        if (count >= size) {
10001cf4:	42be      	cmp	r6, r7
10001cf6:	d3e2      	bcc.n	10001cbe <fault_dump_callstack+0x1a>
            break;
        }
    }
    return count;
}
10001cf8:	4630      	mov	r0, r6
10001cfa:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
        return -FD_EEMPTY;
10001cfe:	f06f 0601 	mvn.w	r6, #1
10001d02:	e7f9      	b.n	10001cf8 <fault_dump_callstack+0x54>
10001d04:	f06f 0601 	mvn.w	r6, #1
10001d08:	e7f6      	b.n	10001cf8 <fault_dump_callstack+0x54>
        return -FD_EINVAL;
10001d0a:	f06f 0602 	mvn.w	r6, #2
10001d0e:	e7f3      	b.n	10001cf8 <fault_dump_callstack+0x54>
10001d10:	f06f 0602 	mvn.w	r6, #2
10001d14:	e7f0      	b.n	10001cf8 <fault_dump_callstack+0x54>
10001d16:	bf00      	nop
10001d18:	10000000 	andne	r0, r0, r0
10001d1c:	10005da0 	andne	r5, r0, r0, lsr #27

10001d20 <fault_dump_handler>:
void fault_dump_handler(unsigned int *stack, unsigned int linker) {
10001d20:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10001d22:	4605      	mov	r5, r0
10001d24:	460e      	mov	r6, r1
    frame.manual.r4  = FD_STACK_READVAL(point);
10001d26:	6803      	ldr	r3, [r0, #0]
10001d28:	4c46      	ldr	r4, [pc, #280]	; (10001e44 <fault_dump_handler+0x124>)
10001d2a:	6023      	str	r3, [r4, #0]
    frame.manual.r5  = FD_STACK_READVAL(point);
10001d2c:	6843      	ldr	r3, [r0, #4]
10001d2e:	6063      	str	r3, [r4, #4]
    frame.manual.r6  = FD_STACK_READVAL(point);
10001d30:	6883      	ldr	r3, [r0, #8]
10001d32:	60a3      	str	r3, [r4, #8]
    frame.manual.r7  = FD_STACK_READVAL(point);
10001d34:	68c3      	ldr	r3, [r0, #12]
10001d36:	60e3      	str	r3, [r4, #12]
    frame.manual.r8  = FD_STACK_READVAL(point);
10001d38:	6903      	ldr	r3, [r0, #16]
10001d3a:	6123      	str	r3, [r4, #16]
    frame.manual.r9  = FD_STACK_READVAL(point);
10001d3c:	6943      	ldr	r3, [r0, #20]
10001d3e:	6163      	str	r3, [r4, #20]
    frame.manual.r10 = FD_STACK_READVAL(point);
10001d40:	6983      	ldr	r3, [r0, #24]
10001d42:	61a3      	str	r3, [r4, #24]
    frame.manual.r11 = FD_STACK_READVAL(point);
10001d44:	69c3      	ldr	r3, [r0, #28]
10001d46:	61e3      	str	r3, [r4, #28]
    frame.except.r0  = FD_STACK_READVAL(point);
10001d48:	6a03      	ldr	r3, [r0, #32]
10001d4a:	6223      	str	r3, [r4, #32]
    frame.except.r1  = FD_STACK_READVAL(point);
10001d4c:	6a43      	ldr	r3, [r0, #36]	; 0x24
10001d4e:	6263      	str	r3, [r4, #36]	; 0x24
    frame.except.r2  = FD_STACK_READVAL(point);
10001d50:	6a83      	ldr	r3, [r0, #40]	; 0x28
10001d52:	62a3      	str	r3, [r4, #40]	; 0x28
    frame.except.r3  = FD_STACK_READVAL(point);
10001d54:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
10001d56:	62e3      	str	r3, [r4, #44]	; 0x2c
    frame.except.r12 = FD_STACK_READVAL(point);
10001d58:	6b03      	ldr	r3, [r0, #48]	; 0x30
10001d5a:	6323      	str	r3, [r4, #48]	; 0x30
    frame.except.lr  = FD_STACK_READVAL(point);
10001d5c:	6b43      	ldr	r3, [r0, #52]	; 0x34
10001d5e:	6363      	str	r3, [r4, #52]	; 0x34
    frame.except.pc  = FD_STACK_READVAL(point);
10001d60:	6b83      	ldr	r3, [r0, #56]	; 0x38
10001d62:	63a3      	str	r3, [r4, #56]	; 0x38
    frame.except.psr = FD_STACK_READVAL(point);
10001d64:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
10001d66:	63e3      	str	r3, [r4, #60]	; 0x3c
    printf("\r\n");
10001d68:	4f37      	ldr	r7, [pc, #220]	; (10001e48 <fault_dump_handler+0x128>)
10001d6a:	4638      	mov	r0, r7
10001d6c:	f7ff ff12 	bl	10001b94 <puts>
    printf(" HardFault Information Dump \r\n");
10001d70:	4836      	ldr	r0, [pc, #216]	; (10001e4c <fault_dump_handler+0x12c>)
10001d72:	f7ff ff0f 	bl	10001b94 <puts>
    printf(" Stack Frame   \r\n");
10001d76:	4836      	ldr	r0, [pc, #216]	; (10001e50 <fault_dump_handler+0x130>)
10001d78:	f7ff ff0c 	bl	10001b94 <puts>
    printf(" R0   = 0x%08X \r\n", (unsigned int)frame.except.r0);
10001d7c:	6a21      	ldr	r1, [r4, #32]
10001d7e:	4835      	ldr	r0, [pc, #212]	; (10001e54 <fault_dump_handler+0x134>)
10001d80:	f7ff fee8 	bl	10001b54 <printf>
    printf(" R1   = 0x%08X \r\n", (unsigned int)frame.except.r1);
10001d84:	6a61      	ldr	r1, [r4, #36]	; 0x24
10001d86:	4834      	ldr	r0, [pc, #208]	; (10001e58 <fault_dump_handler+0x138>)
10001d88:	f7ff fee4 	bl	10001b54 <printf>
    printf(" R2   = 0x%08X \r\n", (unsigned int)frame.except.r2);
10001d8c:	6aa1      	ldr	r1, [r4, #40]	; 0x28
10001d8e:	4833      	ldr	r0, [pc, #204]	; (10001e5c <fault_dump_handler+0x13c>)
10001d90:	f7ff fee0 	bl	10001b54 <printf>
    printf(" R3   = 0x%08X \r\n", (unsigned int)frame.except.r3);
10001d94:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
10001d96:	4832      	ldr	r0, [pc, #200]	; (10001e60 <fault_dump_handler+0x140>)
10001d98:	f7ff fedc 	bl	10001b54 <printf>
    printf(" R4   = 0x%08X \r\n", (unsigned int)frame.manual.r4);
10001d9c:	6821      	ldr	r1, [r4, #0]
10001d9e:	4831      	ldr	r0, [pc, #196]	; (10001e64 <fault_dump_handler+0x144>)
10001da0:	f7ff fed8 	bl	10001b54 <printf>
    printf(" R5   = 0x%08X \r\n", (unsigned int)frame.manual.r5);
10001da4:	6861      	ldr	r1, [r4, #4]
10001da6:	4830      	ldr	r0, [pc, #192]	; (10001e68 <fault_dump_handler+0x148>)
10001da8:	f7ff fed4 	bl	10001b54 <printf>
    printf(" R6   = 0x%08X \r\n", (unsigned int)frame.manual.r6);
10001dac:	68a1      	ldr	r1, [r4, #8]
10001dae:	482f      	ldr	r0, [pc, #188]	; (10001e6c <fault_dump_handler+0x14c>)
10001db0:	f7ff fed0 	bl	10001b54 <printf>
    printf(" R7   = 0x%08X \r\n", (unsigned int)frame.manual.r7);
10001db4:	68e1      	ldr	r1, [r4, #12]
10001db6:	482e      	ldr	r0, [pc, #184]	; (10001e70 <fault_dump_handler+0x150>)
10001db8:	f7ff fecc 	bl	10001b54 <printf>
    printf(" R8   = 0x%08X \r\n", (unsigned int)frame.manual.r8);
10001dbc:	6921      	ldr	r1, [r4, #16]
10001dbe:	482d      	ldr	r0, [pc, #180]	; (10001e74 <fault_dump_handler+0x154>)
10001dc0:	f7ff fec8 	bl	10001b54 <printf>
    printf(" R9   = 0x%08X \r\n", (unsigned int)frame.manual.r9);
10001dc4:	6961      	ldr	r1, [r4, #20]
10001dc6:	482c      	ldr	r0, [pc, #176]	; (10001e78 <fault_dump_handler+0x158>)
10001dc8:	f7ff fec4 	bl	10001b54 <printf>
    printf(" R10  = 0x%08X \r\n", (unsigned int)frame.manual.r10);
10001dcc:	69a1      	ldr	r1, [r4, #24]
10001dce:	482b      	ldr	r0, [pc, #172]	; (10001e7c <fault_dump_handler+0x15c>)
10001dd0:	f7ff fec0 	bl	10001b54 <printf>
    printf(" R11  = 0x%08X \r\n", (unsigned int)frame.manual.r11);
10001dd4:	69e1      	ldr	r1, [r4, #28]
10001dd6:	482a      	ldr	r0, [pc, #168]	; (10001e80 <fault_dump_handler+0x160>)
10001dd8:	f7ff febc 	bl	10001b54 <printf>
    printf(" R12  = 0x%08X \r\n", (unsigned int)frame.except.r12);
10001ddc:	6b21      	ldr	r1, [r4, #48]	; 0x30
10001dde:	4829      	ldr	r0, [pc, #164]	; (10001e84 <fault_dump_handler+0x164>)
10001de0:	f7ff feb8 	bl	10001b54 <printf>
    printf(" LR   = 0x%08X \r\n", (unsigned int)frame.except.lr);
10001de4:	6b61      	ldr	r1, [r4, #52]	; 0x34
10001de6:	4828      	ldr	r0, [pc, #160]	; (10001e88 <fault_dump_handler+0x168>)
10001de8:	f7ff feb4 	bl	10001b54 <printf>
    printf(" PC   = 0x%08X \r\n", (unsigned int)frame.except.pc);
10001dec:	6ba1      	ldr	r1, [r4, #56]	; 0x38
10001dee:	4827      	ldr	r0, [pc, #156]	; (10001e8c <fault_dump_handler+0x16c>)
10001df0:	f7ff feb0 	bl	10001b54 <printf>
    printf(" PSR  = 0x%08X \r\n", (unsigned int)frame.except.psr);
10001df4:	6be1      	ldr	r1, [r4, #60]	; 0x3c
10001df6:	4826      	ldr	r0, [pc, #152]	; (10001e90 <fault_dump_handler+0x170>)
10001df8:	f7ff feac 	bl	10001b54 <printf>
    printf("\r\n");
10001dfc:	4638      	mov	r0, r7
10001dfe:	f7ff fec9 	bl	10001b94 <puts>
    dump_exc_return(linker);
10001e02:	4630      	mov	r0, r6
10001e04:	f7ff ff1a 	bl	10001c3c <dump_exc_return>
    count = fault_dump_callstack(buffer, FD_STACK_DUMP_DEPTH_MAX, 
10001e08:	4b22      	ldr	r3, [pc, #136]	; (10001e94 <fault_dump_handler+0x174>)
10001e0a:	f105 0240 	add.w	r2, r5, #64	; 0x40
10001e0e:	2140      	movs	r1, #64	; 0x40
10001e10:	4821      	ldr	r0, [pc, #132]	; (10001e98 <fault_dump_handler+0x178>)
10001e12:	f7ff ff47 	bl	10001ca4 <fault_dump_callstack>
10001e16:	4605      	mov	r5, r0
    printf(" Stack Call: ");
10001e18:	4820      	ldr	r0, [pc, #128]	; (10001e9c <fault_dump_handler+0x17c>)
10001e1a:	f7ff fe9b 	bl	10001b54 <printf>
    printf("%08X ", (unsigned int)frame.except.pc);
10001e1e:	6ba1      	ldr	r1, [r4, #56]	; 0x38
10001e20:	481f      	ldr	r0, [pc, #124]	; (10001ea0 <fault_dump_handler+0x180>)
10001e22:	f7ff fe97 	bl	10001b54 <printf>
    for (index = 0; index < count; index++) {
10001e26:	2400      	movs	r4, #0
10001e28:	e006      	b.n	10001e38 <fault_dump_handler+0x118>
        printf("%08X ", buffer[index]);
10001e2a:	4b1b      	ldr	r3, [pc, #108]	; (10001e98 <fault_dump_handler+0x178>)
10001e2c:	f853 1024 	ldr.w	r1, [r3, r4, lsl #2]
10001e30:	481b      	ldr	r0, [pc, #108]	; (10001ea0 <fault_dump_handler+0x180>)
10001e32:	f7ff fe8f 	bl	10001b54 <printf>
    for (index = 0; index < count; index++) {
10001e36:	3401      	adds	r4, #1
10001e38:	42ac      	cmp	r4, r5
10001e3a:	dbf6      	blt.n	10001e2a <fault_dump_handler+0x10a>
    printf("\r\n");
10001e3c:	4802      	ldr	r0, [pc, #8]	; (10001e48 <fault_dump_handler+0x128>)
10001e3e:	f7ff fea9 	bl	10001b94 <puts>
    while (1);
10001e42:	e7fe      	b.n	10001e42 <fault_dump_handler+0x122>
10001e44:	38008570 	stmdacc	r0, {r4, r5, r6, r8, sl, pc}
10001e48:	10005a0c 	andne	r5, r0, ip, lsl #20
10001e4c:	100059f0 	strdne	r5, [r0], -r0
10001e50:	10005a10 	andne	r5, r0, r0, lsl sl
10001e54:	10005a24 	andne	r5, r0, r4, lsr #20
10001e58:	10005a38 	andne	r5, r0, r8, lsr sl
10001e5c:	10005a4c 	andne	r5, r0, ip, asr #20
10001e60:	10005a60 	andne	r5, r0, r0, ror #20
10001e64:	10005a74 	andne	r5, r0, r4, ror sl
10001e68:	10005a88 	andne	r5, r0, r8, lsl #21
10001e6c:	10005a9c 	mulne	r0, ip, sl
10001e70:	10005ab0 			; <UNDEFINED> instruction: 0x10005ab0
10001e74:	10005ac4 	andne	r5, r0, r4, asr #21
10001e78:	10005ad8 	ldrdne	r5, [r0], -r8
10001e7c:	10005aec 	andne	r5, r0, ip, ror #21
10001e80:	10005b00 	andne	r5, r0, r0, lsl #22
10001e84:	10005b14 	andne	r5, r0, r4, lsl fp
10001e88:	10005b28 	andne	r5, r0, r8, lsr #22
10001e8c:	10005b3c 	andne	r5, r0, ip, lsr fp
10001e90:	10005b50 	andne	r5, r0, r0, asr fp
10001e94:	38100000 	ldmdacc	r0, {}	; <UNPREDICTABLE>
10001e98:	38008468 	stmdacc	r0, {r3, r5, r6, sl, pc}
10001e9c:	10005b64 	andne	r5, r0, r4, ror #22
10001ea0:	10005880 	andne	r5, r0, r0, lsl #17

10001ea4 <fault_dump_bm_stack_point>:
 */
__STATIC_FORCEINLINE uint32_t __get_MSP(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, msp" : "=r" (result) );
10001ea4:	f3ef 8008 	mrs	r0, MSP

unsigned int fault_dump_bm_stack_point(void) {
    return __get_MSP();
}
10001ea8:	4770      	bx	lr
	...

10001eac <fault_dump_bm_stack_start>:

unsigned int fault_dump_bm_stack_start(void) {
    return FD_STACK_START;
}
10001eac:	4800      	ldr	r0, [pc, #0]	; (10001eb0 <fault_dump_bm_stack_start+0x4>)
10001eae:	4770      	bx	lr
10001eb0:	38100000 	ldmdacc	r0, {}	; <UNPREDICTABLE>

10001eb4 <fault_dump_exc_return>:
  *
  ******************************************************************************
  */
#include "fault-dump.h"

void fault_dump_exc_return(unsigned int exc_return) {
10001eb4:	b510      	push	{r4, lr}
10001eb6:	4604      	mov	r4, r0
    printf(" \r\n");
10001eb8:	482a      	ldr	r0, [pc, #168]	; (10001f64 <fault_dump_exc_return+0xb0>)
10001eba:	f7ff fe6b 	bl	10001b94 <puts>
    printf(" Bit0 Except Security State: ");
10001ebe:	482a      	ldr	r0, [pc, #168]	; (10001f68 <fault_dump_exc_return+0xb4>)
10001ec0:	f7ff fe48 	bl	10001b54 <printf>
    if (FD_CHECK_BIT(exc_return, 0)) {
10001ec4:	f014 0f01 	tst.w	r4, #1
10001ec8:	d033      	beq.n	10001f32 <fault_dump_exc_return+0x7e>
        printf("[Use Security State    ].\r\n");
10001eca:	4828      	ldr	r0, [pc, #160]	; (10001f6c <fault_dump_exc_return+0xb8>)
10001ecc:	f7ff fe62 	bl	10001b94 <puts>
    } else {
        printf("[Use Not Security State].\r\n");
    }
    printf(" Bit2 Stack Point Select:    ");
10001ed0:	4827      	ldr	r0, [pc, #156]	; (10001f70 <fault_dump_exc_return+0xbc>)
10001ed2:	f7ff fe3f 	bl	10001b54 <printf>
    if (FD_CHECK_BIT(exc_return, 2)) {
10001ed6:	f014 0f04 	tst.w	r4, #4
10001eda:	d02e      	beq.n	10001f3a <fault_dump_exc_return+0x86>
        printf("[Use PSP               ].\r\n");
10001edc:	4825      	ldr	r0, [pc, #148]	; (10001f74 <fault_dump_exc_return+0xc0>)
10001ede:	f7ff fe59 	bl	10001b94 <puts>
    } else {
        printf("[Use MSP               ].\r\n");
    }
    printf(" Bit3 Proc Mode Before IRQ:  ");
10001ee2:	4825      	ldr	r0, [pc, #148]	; (10001f78 <fault_dump_exc_return+0xc4>)
10001ee4:	f7ff fe36 	bl	10001b54 <printf>
    if (FD_CHECK_BIT(exc_return, 3)) {
10001ee8:	f014 0f08 	tst.w	r4, #8
10001eec:	d029      	beq.n	10001f42 <fault_dump_exc_return+0x8e>
        printf("[Use Thread Mode       ].\r\n");
10001eee:	4823      	ldr	r0, [pc, #140]	; (10001f7c <fault_dump_exc_return+0xc8>)
10001ef0:	f7ff fe50 	bl	10001b94 <puts>
    } else {
        printf("[Use Process Mode      ].\r\n");
    }
    printf(" Bit4 Stack Frame Type:      ");
10001ef4:	4822      	ldr	r0, [pc, #136]	; (10001f80 <fault_dump_exc_return+0xcc>)
10001ef6:	f7ff fe2d 	bl	10001b54 <printf>
    if (FD_CHECK_BIT(exc_return, 4)) {
10001efa:	f014 0f10 	tst.w	r4, #16
10001efe:	d024      	beq.n	10001f4a <fault_dump_exc_return+0x96>
        printf("[Use Standard Frame    ].\r\n");
10001f00:	4820      	ldr	r0, [pc, #128]	; (10001f84 <fault_dump_exc_return+0xd0>)
10001f02:	f7ff fe47 	bl	10001b94 <puts>
    } else {
        printf("[Use Extended Frame    ].\r\n");
    }
    printf(" Bit5 Default Call Rule:     ");
10001f06:	4820      	ldr	r0, [pc, #128]	; (10001f88 <fault_dump_exc_return+0xd4>)
10001f08:	f7ff fe24 	bl	10001b54 <printf>
    if (FD_CHECK_BIT(exc_return, 5)) {
10001f0c:	f014 0f20 	tst.w	r4, #32
10001f10:	d01f      	beq.n	10001f52 <fault_dump_exc_return+0x9e>
        printf("[Use Default Rule      ].\r\n");
10001f12:	481e      	ldr	r0, [pc, #120]	; (10001f8c <fault_dump_exc_return+0xd8>)
10001f14:	f7ff fe3e 	bl	10001b94 <puts>
    } else {
        printf("[Use Not Default Rule  ].\r\n");
    }
    printf(" Bit6 Security Stack:        ");
10001f18:	481d      	ldr	r0, [pc, #116]	; (10001f90 <fault_dump_exc_return+0xdc>)
10001f1a:	f7ff fe1b 	bl	10001b54 <printf>
    if (FD_CHECK_BIT(exc_return, 6)) {
10001f1e:	f014 0f40 	tst.w	r4, #64	; 0x40
10001f22:	d01a      	beq.n	10001f5a <fault_dump_exc_return+0xa6>
        printf("[Use Security Stack    ].\r\n");
10001f24:	481b      	ldr	r0, [pc, #108]	; (10001f94 <fault_dump_exc_return+0xe0>)
10001f26:	f7ff fe35 	bl	10001b94 <puts>
    } else {
        printf("[Use Not Security Stack].\r\n");
    }
    printf(" \r\n");
10001f2a:	480e      	ldr	r0, [pc, #56]	; (10001f64 <fault_dump_exc_return+0xb0>)
10001f2c:	f7ff fe32 	bl	10001b94 <puts>
}
10001f30:	bd10      	pop	{r4, pc}
        printf("[Use Not Security State].\r\n");
10001f32:	4819      	ldr	r0, [pc, #100]	; (10001f98 <fault_dump_exc_return+0xe4>)
10001f34:	f7ff fe2e 	bl	10001b94 <puts>
10001f38:	e7ca      	b.n	10001ed0 <fault_dump_exc_return+0x1c>
        printf("[Use MSP               ].\r\n");
10001f3a:	4818      	ldr	r0, [pc, #96]	; (10001f9c <fault_dump_exc_return+0xe8>)
10001f3c:	f7ff fe2a 	bl	10001b94 <puts>
10001f40:	e7cf      	b.n	10001ee2 <fault_dump_exc_return+0x2e>
        printf("[Use Process Mode      ].\r\n");
10001f42:	4817      	ldr	r0, [pc, #92]	; (10001fa0 <fault_dump_exc_return+0xec>)
10001f44:	f7ff fe26 	bl	10001b94 <puts>
10001f48:	e7d4      	b.n	10001ef4 <fault_dump_exc_return+0x40>
        printf("[Use Extended Frame    ].\r\n");
10001f4a:	4816      	ldr	r0, [pc, #88]	; (10001fa4 <fault_dump_exc_return+0xf0>)
10001f4c:	f7ff fe22 	bl	10001b94 <puts>
10001f50:	e7d9      	b.n	10001f06 <fault_dump_exc_return+0x52>
        printf("[Use Not Default Rule  ].\r\n");
10001f52:	4815      	ldr	r0, [pc, #84]	; (10001fa8 <fault_dump_exc_return+0xf4>)
10001f54:	f7ff fe1e 	bl	10001b94 <puts>
10001f58:	e7de      	b.n	10001f18 <fault_dump_exc_return+0x64>
        printf("[Use Not Security Stack].\r\n");
10001f5a:	4814      	ldr	r0, [pc, #80]	; (10001fac <fault_dump_exc_return+0xf8>)
10001f5c:	f7ff fe1a 	bl	10001b94 <puts>
10001f60:	e7e3      	b.n	10001f2a <fault_dump_exc_return+0x76>
10001f62:	bf00      	nop
10001f64:	10005b74 	andne	r5, r0, r4, ror fp
10001f68:	10005b78 	andne	r5, r0, r8, ror fp
10001f6c:	10005b98 	mulne	r0, r8, fp
10001f70:	10005bd0 	ldrdne	r5, [r0], -r0
10001f74:	10005bf0 	strdne	r5, [r0], -r0
10001f78:	10005c28 	andne	r5, r0, r8, lsr #24
10001f7c:	10005c48 	andne	r5, r0, r8, asr #24
10001f80:	10005c80 	andne	r5, r0, r0, lsl #25
10001f84:	10005ca0 	andne	r5, r0, r0, lsr #25
10001f88:	10005cd8 	ldrdne	r5, [r0], -r8
10001f8c:	10005cf8 	strdne	r5, [r0], -r8
10001f90:	10005d30 	andne	r5, r0, r0, lsr sp
10001f94:	10005d50 	andne	r5, r0, r0, asr sp
10001f98:	10005bb4 			; <UNDEFINED> instruction: 0x10005bb4
10001f9c:	10005c0c 	andne	r5, r0, ip, lsl #24
10001fa0:	10005c64 	andne	r5, r0, r4, ror #24
10001fa4:	10005cbc 			; <UNDEFINED> instruction: 0x10005cbc
10001fa8:	10005d14 	andne	r5, r0, r4, lsl sp
10001fac:	10005d6c 	andne	r5, r0, ip, ror #26

10001fb0 <vListInitialise>:
    traceENTER_vListInitialise( pxList );

    /* The list structure contains a list item which is used to mark the
     * end of the list.  To initialise the list the list end is inserted
     * as the only list entry. */
    pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );
10001fb0:	f100 0308 	add.w	r3, r0, #8
10001fb4:	6043      	str	r3, [r0, #4]

    listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( &( pxList->xListEnd ) );

    /* The list end value is the highest possible value in the list to
     * ensure it remains at the end of the list. */
    pxList->xListEnd.xItemValue = portMAX_DELAY;
10001fb6:	f04f 32ff 	mov.w	r2, #4294967295
10001fba:	6082      	str	r2, [r0, #8]

    /* The list end next and previous pointers point to itself so we know
     * when the list is empty. */
    pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );
10001fbc:	60c3      	str	r3, [r0, #12]
    pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );
10001fbe:	6103      	str	r3, [r0, #16]

    /* Initialize the remaining fields of xListEnd when it is a proper ListItem_t */
    #if ( configUSE_MINI_LIST_ITEM == 0 )
    {
        pxList->xListEnd.pvOwner = NULL;
10001fc0:	2300      	movs	r3, #0
10001fc2:	6143      	str	r3, [r0, #20]
        pxList->xListEnd.pxContainer = NULL;
10001fc4:	6183      	str	r3, [r0, #24]
        listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( &( pxList->xListEnd ) );
    }
    #endif

    pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
10001fc6:	6003      	str	r3, [r0, #0]
     * configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
    listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
    listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );

    traceRETURN_vListInitialise();
}
10001fc8:	4770      	bx	lr

10001fca <vListInitialiseItem>:
void vListInitialiseItem( ListItem_t * const pxItem )
{
    traceENTER_vListInitialiseItem( pxItem );

    /* Make sure the list item is not recorded as being on a list. */
    pxItem->pxContainer = NULL;
10001fca:	2300      	movs	r3, #0
10001fcc:	6103      	str	r3, [r0, #16]
     * configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
    listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
    listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );

    traceRETURN_vListInitialiseItem();
}
10001fce:	4770      	bx	lr

10001fd0 <vListInsert>:
}
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList,
                  ListItem_t * const pxNewListItem )
{
10001fd0:	b430      	push	{r4, r5}
    ListItem_t * pxIterator;
    const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
10001fd2:	680d      	ldr	r5, [r1, #0]
     * new list item should be placed after it.  This ensures that TCBs which are
     * stored in ready lists (all of which have the same xItemValue value) get a
     * share of the CPU.  However, if the xItemValue is the same as the back marker
     * the iteration loop below will not end.  Therefore the value is checked
     * first, and the algorithm slightly modified if necessary. */
    if( xValueOfInsertion == portMAX_DELAY )
10001fd4:	f1b5 3fff 	cmp.w	r5, #4294967295
10001fd8:	d011      	beq.n	10001ffe <vListInsert+0x2e>
        *   5) If the FreeRTOS port supports interrupt nesting then ensure that
        *      the priority of the tick interrupt is at or below
        *      configMAX_SYSCALL_INTERRUPT_PRIORITY.
        **********************************************************************/

        for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext )
10001fda:	f100 0308 	add.w	r3, r0, #8
10001fde:	461c      	mov	r4, r3
10001fe0:	685b      	ldr	r3, [r3, #4]
10001fe2:	681a      	ldr	r2, [r3, #0]
10001fe4:	42aa      	cmp	r2, r5
10001fe6:	d9fa      	bls.n	10001fde <vListInsert+0xe>
            /* There is nothing to do here, just iterating to the wanted
             * insertion position. */
        }
    }

    pxNewListItem->pxNext = pxIterator->pxNext;
10001fe8:	6863      	ldr	r3, [r4, #4]
10001fea:	604b      	str	r3, [r1, #4]
    pxNewListItem->pxNext->pxPrevious = pxNewListItem;
10001fec:	6099      	str	r1, [r3, #8]
    pxNewListItem->pxPrevious = pxIterator;
10001fee:	608c      	str	r4, [r1, #8]
    pxIterator->pxNext = pxNewListItem;
10001ff0:	6061      	str	r1, [r4, #4]

    /* Remember which list the item is in.  This allows fast removal of the
     * item later. */
    pxNewListItem->pxContainer = pxList;
10001ff2:	6108      	str	r0, [r1, #16]

    ( pxList->uxNumberOfItems ) = ( UBaseType_t ) ( pxList->uxNumberOfItems + 1U );
10001ff4:	6803      	ldr	r3, [r0, #0]
10001ff6:	3301      	adds	r3, #1
10001ff8:	6003      	str	r3, [r0, #0]

    traceRETURN_vListInsert();
}
10001ffa:	bc30      	pop	{r4, r5}
10001ffc:	4770      	bx	lr
        pxIterator = pxList->xListEnd.pxPrevious;
10001ffe:	6904      	ldr	r4, [r0, #16]
10002000:	e7f2      	b.n	10001fe8 <vListInsert+0x18>

10002002 <uxListRemove>:

UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
{
    /* The list item knows which list it is in.  Obtain the list from the list
     * item. */
    List_t * const pxList = pxItemToRemove->pxContainer;
10002002:	6903      	ldr	r3, [r0, #16]

    traceENTER_uxListRemove( pxItemToRemove );

    pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
10002004:	6841      	ldr	r1, [r0, #4]
10002006:	6882      	ldr	r2, [r0, #8]
10002008:	608a      	str	r2, [r1, #8]
    pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
1000200a:	6841      	ldr	r1, [r0, #4]
1000200c:	6051      	str	r1, [r2, #4]

    /* Only used during decision coverage testing. */
    mtCOVERAGE_TEST_DELAY();

    /* Make sure the index is left pointing to a valid item. */
    if( pxList->pxIndex == pxItemToRemove )
1000200e:	685a      	ldr	r2, [r3, #4]
10002010:	4282      	cmp	r2, r0
10002012:	d005      	beq.n	10002020 <uxListRemove+0x1e>
    else
    {
        mtCOVERAGE_TEST_MARKER();
    }

    pxItemToRemove->pxContainer = NULL;
10002014:	2200      	movs	r2, #0
10002016:	6102      	str	r2, [r0, #16]
    ( pxList->uxNumberOfItems ) = ( UBaseType_t ) ( pxList->uxNumberOfItems - 1U );
10002018:	6818      	ldr	r0, [r3, #0]
1000201a:	3801      	subs	r0, #1
1000201c:	6018      	str	r0, [r3, #0]

    traceRETURN_uxListRemove( pxList->uxNumberOfItems );

    return pxList->uxNumberOfItems;
}
1000201e:	4770      	bx	lr
        pxList->pxIndex = pxItemToRemove->pxPrevious;
10002020:	6882      	ldr	r2, [r0, #8]
10002022:	605a      	str	r2, [r3, #4]
10002024:	e7f6      	b.n	10002014 <uxListRemove+0x12>

10002026 <prvIsQueueEmpty>:
    taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t * pxQueue )
{
10002026:	b510      	push	{r4, lr}
10002028:	4604      	mov	r4, r0
    BaseType_t xReturn;

    taskENTER_CRITICAL();
1000202a:	f001 fb01 	bl	10003630 <vPortEnterCritical>
    {
        if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0 )
1000202e:	6ca3      	ldr	r3, [r4, #72]	; 0x48
10002030:	b923      	cbnz	r3, 1000203c <prvIsQueueEmpty+0x16>
        {
            xReturn = pdTRUE;
10002032:	2401      	movs	r4, #1
        else
        {
            xReturn = pdFALSE;
        }
    }
    taskEXIT_CRITICAL();
10002034:	f001 fb0a 	bl	1000364c <vPortExitCritical>

    return xReturn;
}
10002038:	4620      	mov	r0, r4
1000203a:	bd10      	pop	{r4, pc}
            xReturn = pdFALSE;
1000203c:	2400      	movs	r4, #0
1000203e:	e7f9      	b.n	10002034 <prvIsQueueEmpty+0xe>

10002040 <prvCopyDataToQueue>:
{
10002040:	b570      	push	{r4, r5, r6, lr}
10002042:	4604      	mov	r4, r0
10002044:	4615      	mov	r5, r2
    uxMessagesWaiting = pxQueue->uxMessagesWaiting;
10002046:	6c86      	ldr	r6, [r0, #72]	; 0x48
    if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
10002048:	6d02      	ldr	r2, [r0, #80]	; 0x50
1000204a:	b95a      	cbnz	r2, 10002064 <prvCopyDataToQueue+0x24>
            if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
1000204c:	6803      	ldr	r3, [r0, #0]
1000204e:	b11b      	cbz	r3, 10002058 <prvCopyDataToQueue+0x18>
    BaseType_t xReturn = pdFALSE;
10002050:	2000      	movs	r0, #0
    pxQueue->uxMessagesWaiting = ( UBaseType_t ) ( uxMessagesWaiting + ( UBaseType_t ) 1 );
10002052:	3601      	adds	r6, #1
10002054:	64a6      	str	r6, [r4, #72]	; 0x48
}
10002056:	bd70      	pop	{r4, r5, r6, pc}
                xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
10002058:	6880      	ldr	r0, [r0, #8]
1000205a:	f000 fed7 	bl	10002e0c <xTaskPriorityDisinherit>
                pxQueue->u.xSemaphore.xMutexHolder = NULL;
1000205e:	2300      	movs	r3, #0
10002060:	60a3      	str	r3, [r4, #8]
10002062:	e7f6      	b.n	10002052 <prvCopyDataToQueue+0x12>
    else if( xPosition == queueSEND_TO_BACK )
10002064:	b96d      	cbnz	r5, 10002082 <prvCopyDataToQueue+0x42>
        ( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize );
10002066:	6840      	ldr	r0, [r0, #4]
10002068:	f001 fc5c 	bl	10003924 <memcpy>
        pxQueue->pcWriteTo += pxQueue->uxItemSize;
1000206c:	6d22      	ldr	r2, [r4, #80]	; 0x50
1000206e:	6863      	ldr	r3, [r4, #4]
10002070:	4413      	add	r3, r2
10002072:	6063      	str	r3, [r4, #4]
        if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail )
10002074:	68a2      	ldr	r2, [r4, #8]
10002076:	4293      	cmp	r3, r2
10002078:	d319      	bcc.n	100020ae <prvCopyDataToQueue+0x6e>
            pxQueue->pcWriteTo = pxQueue->pcHead;
1000207a:	6823      	ldr	r3, [r4, #0]
1000207c:	6063      	str	r3, [r4, #4]
    BaseType_t xReturn = pdFALSE;
1000207e:	4628      	mov	r0, r5
10002080:	e7e7      	b.n	10002052 <prvCopyDataToQueue+0x12>
        ( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize );
10002082:	68c0      	ldr	r0, [r0, #12]
10002084:	f001 fc4e 	bl	10003924 <memcpy>
        pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
10002088:	6d22      	ldr	r2, [r4, #80]	; 0x50
1000208a:	4251      	negs	r1, r2
1000208c:	68e3      	ldr	r3, [r4, #12]
1000208e:	1a9b      	subs	r3, r3, r2
10002090:	60e3      	str	r3, [r4, #12]
        if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead )
10002092:	6822      	ldr	r2, [r4, #0]
10002094:	4293      	cmp	r3, r2
10002096:	d202      	bcs.n	1000209e <prvCopyDataToQueue+0x5e>
            pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
10002098:	68a3      	ldr	r3, [r4, #8]
1000209a:	440b      	add	r3, r1
1000209c:	60e3      	str	r3, [r4, #12]
        if( xPosition == queueOVERWRITE )
1000209e:	2d02      	cmp	r5, #2
100020a0:	d001      	beq.n	100020a6 <prvCopyDataToQueue+0x66>
    BaseType_t xReturn = pdFALSE;
100020a2:	2000      	movs	r0, #0
100020a4:	e7d5      	b.n	10002052 <prvCopyDataToQueue+0x12>
            if( uxMessagesWaiting > ( UBaseType_t ) 0 )
100020a6:	b126      	cbz	r6, 100020b2 <prvCopyDataToQueue+0x72>
                --uxMessagesWaiting;
100020a8:	3e01      	subs	r6, #1
    BaseType_t xReturn = pdFALSE;
100020aa:	2000      	movs	r0, #0
100020ac:	e7d1      	b.n	10002052 <prvCopyDataToQueue+0x12>
100020ae:	4628      	mov	r0, r5
100020b0:	e7cf      	b.n	10002052 <prvCopyDataToQueue+0x12>
100020b2:	2000      	movs	r0, #0
100020b4:	e7cd      	b.n	10002052 <prvCopyDataToQueue+0x12>

100020b6 <prvCopyDataFromQueue>:
{
100020b6:	4603      	mov	r3, r0
    if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
100020b8:	6d02      	ldr	r2, [r0, #80]	; 0x50
100020ba:	b16a      	cbz	r2, 100020d8 <prvCopyDataFromQueue+0x22>
{
100020bc:	b510      	push	{r4, lr}
100020be:	4608      	mov	r0, r1
        pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize;
100020c0:	68d9      	ldr	r1, [r3, #12]
100020c2:	4411      	add	r1, r2
100020c4:	60d9      	str	r1, [r3, #12]
        if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail )
100020c6:	689c      	ldr	r4, [r3, #8]
100020c8:	42a1      	cmp	r1, r4
100020ca:	d301      	bcc.n	100020d0 <prvCopyDataFromQueue+0x1a>
            pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
100020cc:	6819      	ldr	r1, [r3, #0]
100020ce:	60d9      	str	r1, [r3, #12]
        ( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize );
100020d0:	68d9      	ldr	r1, [r3, #12]
100020d2:	f001 fc27 	bl	10003924 <memcpy>
}
100020d6:	bd10      	pop	{r4, pc}
100020d8:	4770      	bx	lr

100020da <prvNotifyQueueSetContainer>:
/*-----------------------------------------------------------*/

#if ( configUSE_QUEUE_SETS == 1 )

    static BaseType_t prvNotifyQueueSetContainer( const Queue_t * const pxQueue )
    {
100020da:	b570      	push	{r4, r5, r6, lr}
100020dc:	b082      	sub	sp, #8
100020de:	9001      	str	r0, [sp, #4]
        Queue_t * pxQueueSetContainer = pxQueue->pxQueueSetContainer;
100020e0:	6d84      	ldr	r4, [r0, #88]	; 0x58
         * to prvNotifyQueueSetContainer is preceded by a check that
         * pxQueueSetContainer != NULL */
        configASSERT( pxQueueSetContainer ); /* LCOV_EXCL_BR_LINE */
        configASSERT( pxQueueSetContainer->uxMessagesWaiting < pxQueueSetContainer->uxLength );

        if( pxQueueSetContainer->uxMessagesWaiting < pxQueueSetContainer->uxLength )
100020e2:	6ca2      	ldr	r2, [r4, #72]	; 0x48
100020e4:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
100020e6:	429a      	cmp	r2, r3
100020e8:	d303      	bcc.n	100020f2 <prvNotifyQueueSetContainer+0x18>
        BaseType_t xReturn = pdFALSE;
100020ea:	2500      	movs	r5, #0
        {
            mtCOVERAGE_TEST_MARKER();
        }

        return xReturn;
    }
100020ec:	4628      	mov	r0, r5
100020ee:	b002      	add	sp, #8
100020f0:	bd70      	pop	{r4, r5, r6, pc}
            const int8_t cTxLock = pxQueueSetContainer->cTxLock;
100020f2:	f894 6055 	ldrb.w	r6, [r4, #85]	; 0x55
100020f6:	b276      	sxtb	r6, r6
            xReturn = prvCopyDataToQueue( pxQueueSetContainer, &pxQueue, queueSEND_TO_BACK );
100020f8:	2200      	movs	r2, #0
100020fa:	a901      	add	r1, sp, #4
100020fc:	4620      	mov	r0, r4
100020fe:	f7ff ff9f 	bl	10002040 <prvCopyDataToQueue>
10002102:	4605      	mov	r5, r0
            if( cTxLock == queueUNLOCKED )
10002104:	f1b6 3fff 	cmp.w	r6, #4294967295
10002108:	d10a      	bne.n	10002120 <prvNotifyQueueSetContainer+0x46>
                if( listLIST_IS_EMPTY( &( pxQueueSetContainer->xTasksWaitingToReceive ) ) == pdFALSE )
1000210a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
1000210c:	2b00      	cmp	r3, #0
1000210e:	d0ed      	beq.n	100020ec <prvNotifyQueueSetContainer+0x12>
                    if( xTaskRemoveFromEventList( &( pxQueueSetContainer->xTasksWaitingToReceive ) ) != pdFALSE )
10002110:	f104 002c 	add.w	r0, r4, #44	; 0x2c
10002114:	f000 fd94 	bl	10002c40 <xTaskRemoveFromEventList>
10002118:	2800      	cmp	r0, #0
1000211a:	d0e7      	beq.n	100020ec <prvNotifyQueueSetContainer+0x12>
                        xReturn = pdTRUE;
1000211c:	2501      	movs	r5, #1
        return xReturn;
1000211e:	e7e5      	b.n	100020ec <prvNotifyQueueSetContainer+0x12>
                prvIncrementQueueTxLock( pxQueueSetContainer, cTxLock );
10002120:	f000 fb88 	bl	10002834 <uxTaskGetNumberOfTasks>
10002124:	4286      	cmp	r6, r0
10002126:	d2e1      	bcs.n	100020ec <prvNotifyQueueSetContainer+0x12>
10002128:	3601      	adds	r6, #1
1000212a:	b276      	sxtb	r6, r6
1000212c:	f884 6055 	strb.w	r6, [r4, #85]	; 0x55
10002130:	e7dc      	b.n	100020ec <prvNotifyQueueSetContainer+0x12>

10002132 <prvUnlockQueue>:
{
10002132:	b538      	push	{r3, r4, r5, lr}
10002134:	4605      	mov	r5, r0
    taskENTER_CRITICAL();
10002136:	f001 fa7b 	bl	10003630 <vPortEnterCritical>
        int8_t cTxLock = pxQueue->cTxLock;
1000213a:	f895 4055 	ldrb.w	r4, [r5, #85]	; 0x55
1000213e:	b264      	sxtb	r4, r4
        while( cTxLock > queueLOCKED_UNMODIFIED )
10002140:	e008      	b.n	10002154 <prvUnlockQueue+0x22>
                    if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
10002142:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
10002144:	b1b3      	cbz	r3, 10002174 <prvUnlockQueue+0x42>
                        if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
10002146:	f105 002c 	add.w	r0, r5, #44	; 0x2c
1000214a:	f000 fd79 	bl	10002c40 <xTaskRemoveFromEventList>
1000214e:	b970      	cbnz	r0, 1000216e <prvUnlockQueue+0x3c>
            --cTxLock;
10002150:	3c01      	subs	r4, #1
10002152:	b264      	sxtb	r4, r4
        while( cTxLock > queueLOCKED_UNMODIFIED )
10002154:	2c00      	cmp	r4, #0
10002156:	dd0d      	ble.n	10002174 <prvUnlockQueue+0x42>
                if( pxQueue->pxQueueSetContainer != NULL )
10002158:	6dab      	ldr	r3, [r5, #88]	; 0x58
1000215a:	2b00      	cmp	r3, #0
1000215c:	d0f1      	beq.n	10002142 <prvUnlockQueue+0x10>
                    if( prvNotifyQueueSetContainer( pxQueue ) != pdFALSE )
1000215e:	4628      	mov	r0, r5
10002160:	f7ff ffbb 	bl	100020da <prvNotifyQueueSetContainer>
10002164:	2800      	cmp	r0, #0
10002166:	d0f3      	beq.n	10002150 <prvUnlockQueue+0x1e>
                        vTaskMissedYield();
10002168:	f000 fe26 	bl	10002db8 <vTaskMissedYield>
1000216c:	e7f0      	b.n	10002150 <prvUnlockQueue+0x1e>
                            vTaskMissedYield();
1000216e:	f000 fe23 	bl	10002db8 <vTaskMissedYield>
10002172:	e7ed      	b.n	10002150 <prvUnlockQueue+0x1e>
        pxQueue->cTxLock = queueUNLOCKED;
10002174:	23ff      	movs	r3, #255	; 0xff
10002176:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
    taskEXIT_CRITICAL();
1000217a:	f001 fa67 	bl	1000364c <vPortExitCritical>
    taskENTER_CRITICAL();
1000217e:	f001 fa57 	bl	10003630 <vPortEnterCritical>
        int8_t cRxLock = pxQueue->cRxLock;
10002182:	f895 4054 	ldrb.w	r4, [r5, #84]	; 0x54
10002186:	b264      	sxtb	r4, r4
        while( cRxLock > queueLOCKED_UNMODIFIED )
10002188:	e001      	b.n	1000218e <prvUnlockQueue+0x5c>
                --cRxLock;
1000218a:	3c01      	subs	r4, #1
1000218c:	b264      	sxtb	r4, r4
        while( cRxLock > queueLOCKED_UNMODIFIED )
1000218e:	2c00      	cmp	r4, #0
10002190:	dd0a      	ble.n	100021a8 <prvUnlockQueue+0x76>
            if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
10002192:	692b      	ldr	r3, [r5, #16]
10002194:	b143      	cbz	r3, 100021a8 <prvUnlockQueue+0x76>
                if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
10002196:	f105 0010 	add.w	r0, r5, #16
1000219a:	f000 fd51 	bl	10002c40 <xTaskRemoveFromEventList>
1000219e:	2800      	cmp	r0, #0
100021a0:	d0f3      	beq.n	1000218a <prvUnlockQueue+0x58>
                    vTaskMissedYield();
100021a2:	f000 fe09 	bl	10002db8 <vTaskMissedYield>
100021a6:	e7f0      	b.n	1000218a <prvUnlockQueue+0x58>
        pxQueue->cRxLock = queueUNLOCKED;
100021a8:	23ff      	movs	r3, #255	; 0xff
100021aa:	f885 3054 	strb.w	r3, [r5, #84]	; 0x54
    taskEXIT_CRITICAL();
100021ae:	f001 fa4d 	bl	1000364c <vPortExitCritical>
}
100021b2:	bd38      	pop	{r3, r4, r5, pc}

100021b4 <xQueueGenericReset>:
    if( ( pxQueue != NULL ) &&
100021b4:	2800      	cmp	r0, #0
100021b6:	d03c      	beq.n	10002232 <xQueueGenericReset+0x7e>
{
100021b8:	b538      	push	{r3, r4, r5, lr}
100021ba:	460d      	mov	r5, r1
100021bc:	4604      	mov	r4, r0
        ( pxQueue->uxLength >= 1U ) &&
100021be:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
    if( ( pxQueue != NULL ) &&
100021c0:	2b00      	cmp	r3, #0
100021c2:	d038      	beq.n	10002236 <xQueueGenericReset+0x82>
        ( ( SIZE_MAX / pxQueue->uxLength ) >= pxQueue->uxItemSize ) )
100021c4:	6d02      	ldr	r2, [r0, #80]	; 0x50
100021c6:	2100      	movs	r1, #0
100021c8:	fba3 2302 	umull	r2, r3, r3, r2
100021cc:	b913      	cbnz	r3, 100021d4 <xQueueGenericReset+0x20>
        ( pxQueue->uxLength >= 1U ) &&
100021ce:	b119      	cbz	r1, 100021d8 <xQueueGenericReset+0x24>
        xReturn = pdFAIL;
100021d0:	2000      	movs	r0, #0
    return xReturn;
100021d2:	e031      	b.n	10002238 <xQueueGenericReset+0x84>
        ( ( SIZE_MAX / pxQueue->uxLength ) >= pxQueue->uxItemSize ) )
100021d4:	2101      	movs	r1, #1
100021d6:	e7fa      	b.n	100021ce <xQueueGenericReset+0x1a>
        taskENTER_CRITICAL();
100021d8:	f001 fa2a 	bl	10003630 <vPortEnterCritical>
            pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize );
100021dc:	6823      	ldr	r3, [r4, #0]
100021de:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
100021e0:	6d21      	ldr	r1, [r4, #80]	; 0x50
100021e2:	fb01 3002 	mla	r0, r1, r2, r3
100021e6:	60a0      	str	r0, [r4, #8]
            pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
100021e8:	2000      	movs	r0, #0
100021ea:	64a0      	str	r0, [r4, #72]	; 0x48
            pxQueue->pcWriteTo = pxQueue->pcHead;
100021ec:	6063      	str	r3, [r4, #4]
            pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize );
100021ee:	3a01      	subs	r2, #1
100021f0:	fb02 3301 	mla	r3, r2, r1, r3
100021f4:	60e3      	str	r3, [r4, #12]
            pxQueue->cRxLock = queueUNLOCKED;
100021f6:	23ff      	movs	r3, #255	; 0xff
100021f8:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
            pxQueue->cTxLock = queueUNLOCKED;
100021fc:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
            if( xNewQueue == pdFALSE )
10002200:	b975      	cbnz	r5, 10002220 <xQueueGenericReset+0x6c>
                if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
10002202:	6923      	ldr	r3, [r4, #16]
10002204:	b91b      	cbnz	r3, 1000220e <xQueueGenericReset+0x5a>
        taskEXIT_CRITICAL();
10002206:	f001 fa21 	bl	1000364c <vPortExitCritical>
    BaseType_t xReturn = pdPASS;
1000220a:	2001      	movs	r0, #1
        taskEXIT_CRITICAL();
1000220c:	e014      	b.n	10002238 <xQueueGenericReset+0x84>
                    if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
1000220e:	f104 0010 	add.w	r0, r4, #16
10002212:	f000 fd15 	bl	10002c40 <xTaskRemoveFromEventList>
10002216:	2800      	cmp	r0, #0
10002218:	d0f5      	beq.n	10002206 <xQueueGenericReset+0x52>
                        queueYIELD_IF_USING_PREEMPTION();
1000221a:	f001 f9fd 	bl	10003618 <vPortYield>
1000221e:	e7f2      	b.n	10002206 <xQueueGenericReset+0x52>
                vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
10002220:	f104 0010 	add.w	r0, r4, #16
10002224:	f7ff fec4 	bl	10001fb0 <vListInitialise>
                vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
10002228:	f104 002c 	add.w	r0, r4, #44	; 0x2c
1000222c:	f7ff fec0 	bl	10001fb0 <vListInitialise>
10002230:	e7e9      	b.n	10002206 <xQueueGenericReset+0x52>
        xReturn = pdFAIL;
10002232:	2000      	movs	r0, #0
}
10002234:	4770      	bx	lr
        xReturn = pdFAIL;
10002236:	2000      	movs	r0, #0
}
10002238:	bd38      	pop	{r3, r4, r5, pc}

1000223a <prvInitialiseNewQueue>:
{
1000223a:	b510      	push	{r4, lr}
1000223c:	9c02      	ldr	r4, [sp, #8]
    if( uxItemSize == ( UBaseType_t ) 0 )
1000223e:	460b      	mov	r3, r1
10002240:	b949      	cbnz	r1, 10002256 <prvInitialiseNewQueue+0x1c>
        pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
10002242:	6024      	str	r4, [r4, #0]
    pxNewQueue->uxLength = uxQueueLength;
10002244:	64e0      	str	r0, [r4, #76]	; 0x4c
    pxNewQueue->uxItemSize = uxItemSize;
10002246:	6523      	str	r3, [r4, #80]	; 0x50
    ( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
10002248:	2101      	movs	r1, #1
1000224a:	4620      	mov	r0, r4
1000224c:	f7ff ffb2 	bl	100021b4 <xQueueGenericReset>
        pxNewQueue->pxQueueSetContainer = NULL;
10002250:	2300      	movs	r3, #0
10002252:	65a3      	str	r3, [r4, #88]	; 0x58
}
10002254:	bd10      	pop	{r4, pc}
        pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
10002256:	6022      	str	r2, [r4, #0]
10002258:	e7f4      	b.n	10002244 <prvInitialiseNewQueue+0xa>

1000225a <xQueueGenericCreateStatic>:
        if( ( uxQueueLength > ( UBaseType_t ) 0 ) &&
1000225a:	b1b8      	cbz	r0, 1000228c <xQueueGenericCreateStatic+0x32>
    {
1000225c:	b510      	push	{r4, lr}
1000225e:	b082      	sub	sp, #8
10002260:	461c      	mov	r4, r3
10002262:	4684      	mov	ip, r0
        if( ( uxQueueLength > ( UBaseType_t ) 0 ) &&
10002264:	b1a3      	cbz	r3, 10002290 <xQueueGenericCreateStatic+0x36>
            ( pxStaticQueue != NULL ) &&
10002266:	b102      	cbz	r2, 1000226a <xQueueGenericCreateStatic+0x10>
            ( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0U ) ) ) &&
10002268:	b1a1      	cbz	r1, 10002294 <xQueueGenericCreateStatic+0x3a>
1000226a:	b15a      	cbz	r2, 10002284 <xQueueGenericCreateStatic+0x2a>
                pxNewQueue->ucStaticallyAllocated = pdTRUE;
1000226c:	2301      	movs	r3, #1
1000226e:	f884 3056 	strb.w	r3, [r4, #86]	; 0x56
            prvInitialiseNewQueue( uxQueueLength, uxItemSize, pucQueueStorage, ucQueueType, pxNewQueue );
10002272:	9400      	str	r4, [sp, #0]
10002274:	f89d 3010 	ldrb.w	r3, [sp, #16]
10002278:	4660      	mov	r0, ip
1000227a:	f7ff ffde 	bl	1000223a <prvInitialiseNewQueue>
            pxNewQueue = ( Queue_t * ) pxStaticQueue;
1000227e:	4620      	mov	r0, r4
    }
10002280:	b002      	add	sp, #8
10002282:	bd10      	pop	{r4, pc}
            ( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0U ) ) ) )
10002284:	2900      	cmp	r1, #0
10002286:	d0f1      	beq.n	1000226c <xQueueGenericCreateStatic+0x12>
        Queue_t * pxNewQueue = NULL;
10002288:	4610      	mov	r0, r2
        return pxNewQueue;
1000228a:	e7f9      	b.n	10002280 <xQueueGenericCreateStatic+0x26>
        Queue_t * pxNewQueue = NULL;
1000228c:	2000      	movs	r0, #0
    }
1000228e:	4770      	bx	lr
        Queue_t * pxNewQueue = NULL;
10002290:	4618      	mov	r0, r3
10002292:	e7f5      	b.n	10002280 <xQueueGenericCreateStatic+0x26>
10002294:	2000      	movs	r0, #0
10002296:	e7f3      	b.n	10002280 <xQueueGenericCreateStatic+0x26>

10002298 <xQueueReceive>:
{
10002298:	b5f0      	push	{r4, r5, r6, r7, lr}
1000229a:	b085      	sub	sp, #20
1000229c:	4604      	mov	r4, r0
1000229e:	460f      	mov	r7, r1
100022a0:	9201      	str	r2, [sp, #4]
    BaseType_t xEntryTimeSet = pdFALSE;
100022a2:	2600      	movs	r6, #0
100022a4:	e036      	b.n	10002314 <xQueueReceive+0x7c>
                prvCopyDataFromQueue( pxQueue, pvBuffer );
100022a6:	4639      	mov	r1, r7
100022a8:	4620      	mov	r0, r4
100022aa:	f7ff ff04 	bl	100020b6 <prvCopyDataFromQueue>
                pxQueue->uxMessagesWaiting = ( UBaseType_t ) ( uxMessagesWaiting - ( UBaseType_t ) 1 );
100022ae:	3d01      	subs	r5, #1
100022b0:	64a5      	str	r5, [r4, #72]	; 0x48
                if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
100022b2:	6923      	ldr	r3, [r4, #16]
100022b4:	b923      	cbnz	r3, 100022c0 <xQueueReceive+0x28>
                taskEXIT_CRITICAL();
100022b6:	f001 f9c9 	bl	1000364c <vPortExitCritical>
                return pdPASS;
100022ba:	2001      	movs	r0, #1
}
100022bc:	b005      	add	sp, #20
100022be:	bdf0      	pop	{r4, r5, r6, r7, pc}
                    if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
100022c0:	f104 0010 	add.w	r0, r4, #16
100022c4:	f000 fcbc 	bl	10002c40 <xTaskRemoveFromEventList>
100022c8:	2800      	cmp	r0, #0
100022ca:	d0f4      	beq.n	100022b6 <xQueueReceive+0x1e>
                        queueYIELD_IF_USING_PREEMPTION();
100022cc:	f001 f9a4 	bl	10003618 <vPortYield>
100022d0:	e7f1      	b.n	100022b6 <xQueueReceive+0x1e>
                    taskEXIT_CRITICAL();
100022d2:	f001 f9bb 	bl	1000364c <vPortExitCritical>
                    return errQUEUE_EMPTY;
100022d6:	2000      	movs	r0, #0
100022d8:	e7f0      	b.n	100022bc <xQueueReceive+0x24>
                    vTaskInternalSetTimeOutState( &xTimeOut );
100022da:	a802      	add	r0, sp, #8
100022dc:	f000 fd22 	bl	10002d24 <vTaskInternalSetTimeOutState>
                    xEntryTimeSet = pdTRUE;
100022e0:	2601      	movs	r6, #1
100022e2:	e021      	b.n	10002328 <xQueueReceive+0x90>
        prvLockQueue( pxQueue );
100022e4:	2300      	movs	r3, #0
100022e6:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
100022ea:	e029      	b.n	10002340 <xQueueReceive+0xa8>
100022ec:	2300      	movs	r3, #0
100022ee:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
100022f2:	e02b      	b.n	1000234c <xQueueReceive+0xb4>
                prvUnlockQueue( pxQueue );
100022f4:	4620      	mov	r0, r4
100022f6:	f7ff ff1c 	bl	10002132 <prvUnlockQueue>
                ( void ) xTaskResumeAll();
100022fa:	f000 fb6f 	bl	100029dc <xTaskResumeAll>
100022fe:	e009      	b.n	10002314 <xQueueReceive+0x7c>
            prvUnlockQueue( pxQueue );
10002300:	4620      	mov	r0, r4
10002302:	f7ff ff16 	bl	10002132 <prvUnlockQueue>
            ( void ) xTaskResumeAll();
10002306:	f000 fb69 	bl	100029dc <xTaskResumeAll>
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1000230a:	4620      	mov	r0, r4
1000230c:	f7ff fe8b 	bl	10002026 <prvIsQueueEmpty>
10002310:	2800      	cmp	r0, #0
10002312:	d137      	bne.n	10002384 <xQueueReceive+0xec>
        taskENTER_CRITICAL();
10002314:	f001 f98c 	bl	10003630 <vPortEnterCritical>
            const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
10002318:	6ca5      	ldr	r5, [r4, #72]	; 0x48
            if( uxMessagesWaiting > ( UBaseType_t ) 0 )
1000231a:	2d00      	cmp	r5, #0
1000231c:	d1c3      	bne.n	100022a6 <xQueueReceive+0xe>
                if( xTicksToWait == ( TickType_t ) 0 )
1000231e:	9b01      	ldr	r3, [sp, #4]
10002320:	2b00      	cmp	r3, #0
10002322:	d0d6      	beq.n	100022d2 <xQueueReceive+0x3a>
                else if( xEntryTimeSet == pdFALSE )
10002324:	2e00      	cmp	r6, #0
10002326:	d0d8      	beq.n	100022da <xQueueReceive+0x42>
        taskEXIT_CRITICAL();
10002328:	f001 f990 	bl	1000364c <vPortExitCritical>
        vTaskSuspendAll();
1000232c:	f000 fa74 	bl	10002818 <vTaskSuspendAll>
        prvLockQueue( pxQueue );
10002330:	f001 f97e 	bl	10003630 <vPortEnterCritical>
10002334:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
10002338:	b25b      	sxtb	r3, r3
1000233a:	f1b3 3fff 	cmp.w	r3, #4294967295
1000233e:	d0d1      	beq.n	100022e4 <xQueueReceive+0x4c>
10002340:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
10002344:	b25b      	sxtb	r3, r3
10002346:	f1b3 3fff 	cmp.w	r3, #4294967295
1000234a:	d0cf      	beq.n	100022ec <xQueueReceive+0x54>
1000234c:	f001 f97e 	bl	1000364c <vPortExitCritical>
        if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
10002350:	a901      	add	r1, sp, #4
10002352:	a802      	add	r0, sp, #8
10002354:	f000 fcf2 	bl	10002d3c <xTaskCheckForTimeOut>
10002358:	2800      	cmp	r0, #0
1000235a:	d1d1      	bne.n	10002300 <xQueueReceive+0x68>
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1000235c:	4620      	mov	r0, r4
1000235e:	f7ff fe62 	bl	10002026 <prvIsQueueEmpty>
10002362:	2800      	cmp	r0, #0
10002364:	d0c6      	beq.n	100022f4 <xQueueReceive+0x5c>
                vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
10002366:	9901      	ldr	r1, [sp, #4]
10002368:	f104 002c 	add.w	r0, r4, #44	; 0x2c
1000236c:	f000 fc3c 	bl	10002be8 <vTaskPlaceOnEventList>
                prvUnlockQueue( pxQueue );
10002370:	4620      	mov	r0, r4
10002372:	f7ff fede 	bl	10002132 <prvUnlockQueue>
                if( xTaskResumeAll() == pdFALSE )
10002376:	f000 fb31 	bl	100029dc <xTaskResumeAll>
1000237a:	2800      	cmp	r0, #0
1000237c:	d1ca      	bne.n	10002314 <xQueueReceive+0x7c>
                    taskYIELD_WITHIN_API();
1000237e:	f001 f94b 	bl	10003618 <vPortYield>
10002382:	e7c7      	b.n	10002314 <xQueueReceive+0x7c>
                return errQUEUE_EMPTY;
10002384:	2000      	movs	r0, #0
10002386:	e799      	b.n	100022bc <xQueueReceive+0x24>

10002388 <vQueueWaitForMessageRestricted>:
    {
10002388:	b570      	push	{r4, r5, r6, lr}
1000238a:	4604      	mov	r4, r0
1000238c:	460d      	mov	r5, r1
1000238e:	4616      	mov	r6, r2
        prvLockQueue( pxQueue );
10002390:	f001 f94e 	bl	10003630 <vPortEnterCritical>
10002394:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
10002398:	b25b      	sxtb	r3, r3
1000239a:	f1b3 3fff 	cmp.w	r3, #4294967295
1000239e:	d00d      	beq.n	100023bc <vQueueWaitForMessageRestricted+0x34>
100023a0:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
100023a4:	b25b      	sxtb	r3, r3
100023a6:	f1b3 3fff 	cmp.w	r3, #4294967295
100023aa:	d00b      	beq.n	100023c4 <vQueueWaitForMessageRestricted+0x3c>
100023ac:	f001 f94e 	bl	1000364c <vPortExitCritical>
        if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
100023b0:	6ca3      	ldr	r3, [r4, #72]	; 0x48
100023b2:	b15b      	cbz	r3, 100023cc <vQueueWaitForMessageRestricted+0x44>
        prvUnlockQueue( pxQueue );
100023b4:	4620      	mov	r0, r4
100023b6:	f7ff febc 	bl	10002132 <prvUnlockQueue>
    }
100023ba:	bd70      	pop	{r4, r5, r6, pc}
        prvLockQueue( pxQueue );
100023bc:	2300      	movs	r3, #0
100023be:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
100023c2:	e7ed      	b.n	100023a0 <vQueueWaitForMessageRestricted+0x18>
100023c4:	2300      	movs	r3, #0
100023c6:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
100023ca:	e7ef      	b.n	100023ac <vQueueWaitForMessageRestricted+0x24>
            vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
100023cc:	4632      	mov	r2, r6
100023ce:	4629      	mov	r1, r5
100023d0:	f104 002c 	add.w	r0, r4, #44	; 0x2c
100023d4:	f000 fc16 	bl	10002c04 <vTaskPlaceOnEventListRestricted>
100023d8:	e7ec      	b.n	100023b4 <vQueueWaitForMessageRestricted+0x2c>
	...

100023dc <prvGetExpectedIdleTime>:
         * configUSE_PREEMPTION is 0, so there may be tasks above the idle priority
         * task that are in the Ready state, even though the idle task is
         * running. */
        #if ( configUSE_PORT_OPTIMISED_TASK_SELECTION == 0 )
        {
            if( uxTopReadyPriority > tskIDLE_PRIORITY )
100023dc:	4b0a      	ldr	r3, [pc, #40]	; (10002408 <prvGetExpectedIdleTime+0x2c>)
100023de:	681b      	ldr	r3, [r3, #0]
100023e0:	b103      	cbz	r3, 100023e4 <prvGetExpectedIdleTime+0x8>
            {
                uxHigherPriorityReadyTasks = pdTRUE;
100023e2:	2301      	movs	r3, #1
                uxHigherPriorityReadyTasks = pdTRUE;
            }
        }
        #endif /* if ( configUSE_PORT_OPTIMISED_TASK_SELECTION == 0 ) */

        if( pxCurrentTCB->uxPriority > tskIDLE_PRIORITY )
100023e4:	4a09      	ldr	r2, [pc, #36]	; (1000240c <prvGetExpectedIdleTime+0x30>)
100023e6:	6812      	ldr	r2, [r2, #0]
100023e8:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
100023ea:	b950      	cbnz	r0, 10002402 <prvGetExpectedIdleTime+0x26>
        {
            xReturn = 0;
        }
        else if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > 1U )
100023ec:	4a08      	ldr	r2, [pc, #32]	; (10002410 <prvGetExpectedIdleTime+0x34>)
100023ee:	6812      	ldr	r2, [r2, #0]
100023f0:	2a01      	cmp	r2, #1
100023f2:	d807      	bhi.n	10002404 <prvGetExpectedIdleTime+0x28>
            /* There are other idle priority tasks in the ready state.  If
             * time slicing is used then the very next tick interrupt must be
             * processed. */
            xReturn = 0;
        }
        else if( uxHigherPriorityReadyTasks != pdFALSE )
100023f4:	b933      	cbnz	r3, 10002404 <prvGetExpectedIdleTime+0x28>
             * configUSE_PREEMPTION is 0. */
            xReturn = 0;
        }
        else
        {
            xReturn = xNextTaskUnblockTime;
100023f6:	4b07      	ldr	r3, [pc, #28]	; (10002414 <prvGetExpectedIdleTime+0x38>)
100023f8:	6818      	ldr	r0, [r3, #0]
            xReturn -= xTickCount;
100023fa:	4b07      	ldr	r3, [pc, #28]	; (10002418 <prvGetExpectedIdleTime+0x3c>)
100023fc:	681b      	ldr	r3, [r3, #0]
100023fe:	1ac0      	subs	r0, r0, r3
10002400:	4770      	bx	lr
            xReturn = 0;
10002402:	2000      	movs	r0, #0
        }

        return xReturn;
    }
10002404:	4770      	bx	lr
10002406:	bf00      	nop
10002408:	38008a58 	stmdacc	r0, {r3, r4, r6, r9, fp, pc}
1000240c:	380085b0 	stmdacc	r0, {r4, r5, r7, r8, sl, pc}
10002410:	380085bc 	stmdacc	r0, {r2, r3, r4, r5, r7, r8, sl, pc}
10002414:	38008ae4 	stmdacc	r0, {r2, r5, r6, r7, r9, fp, pc}
10002418:	38008b48 	stmdacc	r0, {r3, r6, r8, r9, fp, pc}

1000241c <prvResetNextTaskUnblockTime>:
#endif /* INCLUDE_vTaskDelete */
/*-----------------------------------------------------------*/

static void prvResetNextTaskUnblockTime( void )
{
    if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
1000241c:	4b07      	ldr	r3, [pc, #28]	; (1000243c <prvResetNextTaskUnblockTime+0x20>)
1000241e:	681b      	ldr	r3, [r3, #0]
10002420:	681b      	ldr	r3, [r3, #0]
10002422:	b923      	cbnz	r3, 1000242e <prvResetNextTaskUnblockTime+0x12>
    {
        /* The new current delayed list is empty.  Set xNextTaskUnblockTime to
         * the maximum possible value so it is  extremely unlikely that the
         * if( xTickCount >= xNextTaskUnblockTime ) test will pass until
         * there is an item in the delayed list. */
        xNextTaskUnblockTime = portMAX_DELAY;
10002424:	4b06      	ldr	r3, [pc, #24]	; (10002440 <prvResetNextTaskUnblockTime+0x24>)
10002426:	f04f 32ff 	mov.w	r2, #4294967295
1000242a:	601a      	str	r2, [r3, #0]
1000242c:	4770      	bx	lr
    {
        /* The new current delayed list is not empty, get the value of
         * the item at the head of the delayed list.  This is the time at
         * which the task at the head of the delayed list should be removed
         * from the Blocked state. */
        xNextTaskUnblockTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxDelayedTaskList );
1000242e:	4b03      	ldr	r3, [pc, #12]	; (1000243c <prvResetNextTaskUnblockTime+0x20>)
10002430:	681b      	ldr	r3, [r3, #0]
10002432:	68db      	ldr	r3, [r3, #12]
10002434:	681a      	ldr	r2, [r3, #0]
10002436:	4b02      	ldr	r3, [pc, #8]	; (10002440 <prvResetNextTaskUnblockTime+0x24>)
10002438:	601a      	str	r2, [r3, #0]
    }
}
1000243a:	4770      	bx	lr
1000243c:	380085b4 	stmdacc	r0, {r2, r4, r5, r7, r8, sl, pc}
10002440:	38008ae4 	stmdacc	r0, {r2, r5, r6, r7, r9, fp, pc}

10002444 <prvInitialiseNewTask>:
{
10002444:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
10002448:	4680      	mov	r8, r0
1000244a:	460d      	mov	r5, r1
1000244c:	4617      	mov	r7, r2
1000244e:	4699      	mov	r9, r3
10002450:	9e08      	ldr	r6, [sp, #32]
10002452:	f8dd a024 	ldr.w	sl, [sp, #36]	; 0x24
10002456:	9c0a      	ldr	r4, [sp, #40]	; 0x28
        ( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) uxStackDepth * sizeof( StackType_t ) );
10002458:	0092      	lsls	r2, r2, #2
1000245a:	21a5      	movs	r1, #165	; 0xa5
1000245c:	6b20      	ldr	r0, [r4, #48]	; 0x30
1000245e:	f001 fad7 	bl	10003a10 <memset>
        pxTopOfStack = &( pxNewTCB->pxStack[ uxStackDepth - ( configSTACK_DEPTH_TYPE ) 1 ] );
10002462:	6b23      	ldr	r3, [r4, #48]	; 0x30
10002464:	f107 4280 	add.w	r2, r7, #1073741824	; 0x40000000
10002468:	3a01      	subs	r2, #1
1000246a:	eb03 0782 	add.w	r7, r3, r2, lsl #2
        pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) );
1000246e:	f027 0707 	bic.w	r7, r7, #7
    if( pcName != NULL )
10002472:	b19d      	cbz	r5, 1000249c <prvInitialiseNewTask+0x58>
        for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
10002474:	f04f 0c00 	mov.w	ip, #0
10002478:	f1bc 0f03 	cmp.w	ip, #3
1000247c:	d80b      	bhi.n	10002496 <prvInitialiseNewTask+0x52>
            pxNewTCB->pcTaskName[ x ] = pcName[ x ];
1000247e:	f815 200c 	ldrb.w	r2, [r5, ip]
10002482:	eb04 030c 	add.w	r3, r4, ip
10002486:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
            if( pcName[ x ] == ( char ) 0x00 )
1000248a:	f815 300c 	ldrb.w	r3, [r5, ip]
1000248e:	b113      	cbz	r3, 10002496 <prvInitialiseNewTask+0x52>
        for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
10002490:	f10c 0c01 	add.w	ip, ip, #1
10002494:	e7f0      	b.n	10002478 <prvInitialiseNewTask+0x34>
        pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1U ] = '\0';
10002496:	2300      	movs	r3, #0
10002498:	f884 3037 	strb.w	r3, [r4, #55]	; 0x37
    if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
1000249c:	2e04      	cmp	r6, #4
1000249e:	d900      	bls.n	100024a2 <prvInitialiseNewTask+0x5e>
        uxPriority = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) 1U;
100024a0:	2604      	movs	r6, #4
    pxNewTCB->uxPriority = uxPriority;
100024a2:	62e6      	str	r6, [r4, #44]	; 0x2c
        pxNewTCB->uxBasePriority = uxPriority;
100024a4:	63a6      	str	r6, [r4, #56]	; 0x38
    vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
100024a6:	1d20      	adds	r0, r4, #4
100024a8:	f7ff fd8f 	bl	10001fca <vListInitialiseItem>
    vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
100024ac:	f104 0018 	add.w	r0, r4, #24
100024b0:	f7ff fd8b 	bl	10001fca <vListInitialiseItem>
    listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
100024b4:	6124      	str	r4, [r4, #16]
    listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority );
100024b6:	f1c6 0605 	rsb	r6, r6, #5
100024ba:	61a6      	str	r6, [r4, #24]
    listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
100024bc:	6264      	str	r4, [r4, #36]	; 0x24
                pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxNewTCB->pxStack, pxTaskCode, pvParameters );
100024be:	464b      	mov	r3, r9
100024c0:	4642      	mov	r2, r8
100024c2:	6b21      	ldr	r1, [r4, #48]	; 0x30
100024c4:	4638      	mov	r0, r7
100024c6:	f001 f8eb 	bl	100036a0 <pxPortInitialiseStack>
100024ca:	6020      	str	r0, [r4, #0]
    if( pxCreatedTask != NULL )
100024cc:	f1ba 0f00 	cmp.w	sl, #0
100024d0:	d001      	beq.n	100024d6 <prvInitialiseNewTask+0x92>
        *pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
100024d2:	f8ca 4000 	str.w	r4, [sl]
}
100024d6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

100024da <prvCreateStaticTask>:
    {
100024da:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
100024de:	b085      	sub	sp, #20
100024e0:	9e0d      	ldr	r6, [sp, #52]	; 0x34
100024e2:	9c0e      	ldr	r4, [sp, #56]	; 0x38
        if( ( pxTaskBuffer != NULL ) && ( puxStackBuffer != NULL ) )
100024e4:	b1f4      	cbz	r4, 10002524 <prvCreateStaticTask+0x4a>
100024e6:	4605      	mov	r5, r0
100024e8:	4689      	mov	r9, r1
100024ea:	4690      	mov	r8, r2
100024ec:	461f      	mov	r7, r3
100024ee:	b1de      	cbz	r6, 10002528 <prvCreateStaticTask+0x4e>
            ( void ) memset( ( void * ) pxNewTCB, 0x00, sizeof( TCB_t ) );
100024f0:	224c      	movs	r2, #76	; 0x4c
100024f2:	2100      	movs	r1, #0
100024f4:	4620      	mov	r0, r4
100024f6:	f001 fa8b 	bl	10003a10 <memset>
            pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
100024fa:	6326      	str	r6, [r4, #48]	; 0x30
                pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
100024fc:	2302      	movs	r3, #2
100024fe:	f884 3049 	strb.w	r3, [r4, #73]	; 0x49
            prvInitialiseNewTask( pxTaskCode, pcName, uxStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
10002502:	2300      	movs	r3, #0
10002504:	9303      	str	r3, [sp, #12]
10002506:	9402      	str	r4, [sp, #8]
10002508:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
1000250a:	9301      	str	r3, [sp, #4]
1000250c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
1000250e:	9300      	str	r3, [sp, #0]
10002510:	463b      	mov	r3, r7
10002512:	4642      	mov	r2, r8
10002514:	4649      	mov	r1, r9
10002516:	4628      	mov	r0, r5
10002518:	f7ff ff94 	bl	10002444 <prvInitialiseNewTask>
            pxNewTCB = ( TCB_t * ) pxTaskBuffer;
1000251c:	4620      	mov	r0, r4
    }
1000251e:	b005      	add	sp, #20
10002520:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
            pxNewTCB = NULL;
10002524:	4620      	mov	r0, r4
10002526:	e7fa      	b.n	1000251e <prvCreateStaticTask+0x44>
10002528:	4630      	mov	r0, r6
        return pxNewTCB;
1000252a:	e7f8      	b.n	1000251e <prvCreateStaticTask+0x44>

1000252c <prvInitialiseTaskLists>:
{
1000252c:	b538      	push	{r3, r4, r5, lr}
    for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
1000252e:	2400      	movs	r4, #0
10002530:	e007      	b.n	10002542 <prvInitialiseTaskLists+0x16>
        vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
10002532:	ebc4 02c4 	rsb	r2, r4, r4, lsl #3
10002536:	0093      	lsls	r3, r2, #2
10002538:	480e      	ldr	r0, [pc, #56]	; (10002574 <prvInitialiseTaskLists+0x48>)
1000253a:	4418      	add	r0, r3
1000253c:	f7ff fd38 	bl	10001fb0 <vListInitialise>
    for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
10002540:	3401      	adds	r4, #1
10002542:	2c04      	cmp	r4, #4
10002544:	d9f5      	bls.n	10002532 <prvInitialiseTaskLists+0x6>
    vListInitialise( &xDelayedTaskList1 );
10002546:	4d0c      	ldr	r5, [pc, #48]	; (10002578 <prvInitialiseTaskLists+0x4c>)
10002548:	4628      	mov	r0, r5
1000254a:	f7ff fd31 	bl	10001fb0 <vListInitialise>
    vListInitialise( &xDelayedTaskList2 );
1000254e:	4c0b      	ldr	r4, [pc, #44]	; (1000257c <prvInitialiseTaskLists+0x50>)
10002550:	4620      	mov	r0, r4
10002552:	f7ff fd2d 	bl	10001fb0 <vListInitialise>
    vListInitialise( &xPendingReadyList );
10002556:	480a      	ldr	r0, [pc, #40]	; (10002580 <prvInitialiseTaskLists+0x54>)
10002558:	f7ff fd2a 	bl	10001fb0 <vListInitialise>
        vListInitialise( &xTasksWaitingTermination );
1000255c:	4809      	ldr	r0, [pc, #36]	; (10002584 <prvInitialiseTaskLists+0x58>)
1000255e:	f7ff fd27 	bl	10001fb0 <vListInitialise>
        vListInitialise( &xSuspendedTaskList );
10002562:	4809      	ldr	r0, [pc, #36]	; (10002588 <prvInitialiseTaskLists+0x5c>)
10002564:	f7ff fd24 	bl	10001fb0 <vListInitialise>
    pxDelayedTaskList = &xDelayedTaskList1;
10002568:	4b08      	ldr	r3, [pc, #32]	; (1000258c <prvInitialiseTaskLists+0x60>)
1000256a:	601d      	str	r5, [r3, #0]
    pxOverflowDelayedTaskList = &xDelayedTaskList2;
1000256c:	4b08      	ldr	r3, [pc, #32]	; (10002590 <prvInitialiseTaskLists+0x64>)
1000256e:	601c      	str	r4, [r3, #0]
}
10002570:	bd38      	pop	{r3, r4, r5, pc}
10002572:	bf00      	nop
10002574:	380085bc 	stmdacc	r0, {r2, r3, r4, r5, r7, r8, sl, pc}
10002578:	38008a5c 	stmdacc	r0, {r2, r3, r4, r6, r9, fp, pc}
1000257c:	38008a78 	stmdacc	r0, {r3, r4, r5, r6, r9, fp, pc}
10002580:	38008af0 	stmdacc	r0, {r4, r5, r6, r7, r9, fp, pc}
10002584:	38008b2c 	stmdacc	r0, {r2, r3, r5, r8, r9, fp, pc}
10002588:	38008b10 	stmdacc	r0, {r4, r8, r9, fp, pc}
1000258c:	380085b4 	stmdacc	r0, {r2, r4, r5, r7, r8, sl, pc}
10002590:	380085b8 	stmdacc	r0, {r3, r4, r5, r7, r8, sl, pc}

10002594 <prvAddNewTaskToReadyList>:
    {
10002594:	b510      	push	{r4, lr}
10002596:	4604      	mov	r4, r0
        taskENTER_CRITICAL();
10002598:	f001 f84a 	bl	10003630 <vPortEnterCritical>
            uxCurrentNumberOfTasks = ( UBaseType_t ) ( uxCurrentNumberOfTasks + 1U );
1000259c:	4a26      	ldr	r2, [pc, #152]	; (10002638 <prvAddNewTaskToReadyList+0xa4>)
1000259e:	6813      	ldr	r3, [r2, #0]
100025a0:	3301      	adds	r3, #1
100025a2:	6013      	str	r3, [r2, #0]
            if( pxCurrentTCB == NULL )
100025a4:	4b25      	ldr	r3, [pc, #148]	; (1000263c <prvAddNewTaskToReadyList+0xa8>)
100025a6:	681b      	ldr	r3, [r3, #0]
100025a8:	b15b      	cbz	r3, 100025c2 <prvAddNewTaskToReadyList+0x2e>
                if( xSchedulerRunning == pdFALSE )
100025aa:	4b25      	ldr	r3, [pc, #148]	; (10002640 <prvAddNewTaskToReadyList+0xac>)
100025ac:	681b      	ldr	r3, [r3, #0]
100025ae:	b96b      	cbnz	r3, 100025cc <prvAddNewTaskToReadyList+0x38>
                    if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
100025b0:	4b22      	ldr	r3, [pc, #136]	; (1000263c <prvAddNewTaskToReadyList+0xa8>)
100025b2:	681b      	ldr	r3, [r3, #0]
100025b4:	6ada      	ldr	r2, [r3, #44]	; 0x2c
100025b6:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
100025b8:	429a      	cmp	r2, r3
100025ba:	d807      	bhi.n	100025cc <prvAddNewTaskToReadyList+0x38>
                        pxCurrentTCB = pxNewTCB;
100025bc:	4b1f      	ldr	r3, [pc, #124]	; (1000263c <prvAddNewTaskToReadyList+0xa8>)
100025be:	601c      	str	r4, [r3, #0]
100025c0:	e004      	b.n	100025cc <prvAddNewTaskToReadyList+0x38>
                pxCurrentTCB = pxNewTCB;
100025c2:	4b1e      	ldr	r3, [pc, #120]	; (1000263c <prvAddNewTaskToReadyList+0xa8>)
100025c4:	601c      	str	r4, [r3, #0]
                if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
100025c6:	6813      	ldr	r3, [r2, #0]
100025c8:	2b01      	cmp	r3, #1
100025ca:	d02f      	beq.n	1000262c <prvAddNewTaskToReadyList+0x98>
            uxTaskNumber++;
100025cc:	4a1d      	ldr	r2, [pc, #116]	; (10002644 <prvAddNewTaskToReadyList+0xb0>)
100025ce:	6813      	ldr	r3, [r2, #0]
100025d0:	3301      	adds	r3, #1
100025d2:	6013      	str	r3, [r2, #0]
            prvAddTaskToReadyList( pxNewTCB );
100025d4:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
100025d6:	4a1c      	ldr	r2, [pc, #112]	; (10002648 <prvAddNewTaskToReadyList+0xb4>)
100025d8:	6812      	ldr	r2, [r2, #0]
100025da:	4293      	cmp	r3, r2
100025dc:	d901      	bls.n	100025e2 <prvAddNewTaskToReadyList+0x4e>
100025de:	4a1a      	ldr	r2, [pc, #104]	; (10002648 <prvAddNewTaskToReadyList+0xb4>)
100025e0:	6013      	str	r3, [r2, #0]
100025e2:	4a1a      	ldr	r2, [pc, #104]	; (1000264c <prvAddNewTaskToReadyList+0xb8>)
100025e4:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
100025e8:	eb02 0383 	add.w	r3, r2, r3, lsl #2
100025ec:	685b      	ldr	r3, [r3, #4]
100025ee:	60a3      	str	r3, [r4, #8]
100025f0:	6898      	ldr	r0, [r3, #8]
100025f2:	60e0      	str	r0, [r4, #12]
100025f4:	1d21      	adds	r1, r4, #4
100025f6:	6041      	str	r1, [r0, #4]
100025f8:	6099      	str	r1, [r3, #8]
100025fa:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
100025fc:	ebc3 01c3 	rsb	r1, r3, r3, lsl #3
10002600:	eb02 0081 	add.w	r0, r2, r1, lsl #2
10002604:	6160      	str	r0, [r4, #20]
10002606:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
1000260a:	3101      	adds	r1, #1
1000260c:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
10002610:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
        taskEXIT_CRITICAL();
10002614:	f001 f81a 	bl	1000364c <vPortExitCritical>
        if( xSchedulerRunning != pdFALSE )
10002618:	4b09      	ldr	r3, [pc, #36]	; (10002640 <prvAddNewTaskToReadyList+0xac>)
1000261a:	681b      	ldr	r3, [r3, #0]
1000261c:	b12b      	cbz	r3, 1000262a <prvAddNewTaskToReadyList+0x96>
            taskYIELD_ANY_CORE_IF_USING_PREEMPTION( pxNewTCB );
1000261e:	4b07      	ldr	r3, [pc, #28]	; (1000263c <prvAddNewTaskToReadyList+0xa8>)
10002620:	681b      	ldr	r3, [r3, #0]
10002622:	6ada      	ldr	r2, [r3, #44]	; 0x2c
10002624:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
10002626:	429a      	cmp	r2, r3
10002628:	d303      	bcc.n	10002632 <prvAddNewTaskToReadyList+0x9e>
    }
1000262a:	bd10      	pop	{r4, pc}
                    prvInitialiseTaskLists();
1000262c:	f7ff ff7e 	bl	1000252c <prvInitialiseTaskLists>
10002630:	e7cc      	b.n	100025cc <prvAddNewTaskToReadyList+0x38>
            taskYIELD_ANY_CORE_IF_USING_PREEMPTION( pxNewTCB );
10002632:	f000 fff1 	bl	10003618 <vPortYield>
    }
10002636:	e7f8      	b.n	1000262a <prvAddNewTaskToReadyList+0x96>
10002638:	38008648 	stmdacc	r0, {r3, r6, r9, sl, pc}
1000263c:	380085b0 	stmdacc	r0, {r4, r5, r7, r8, sl, pc}
10002640:	38008b0c 	stmdacc	r0, {r2, r3, r8, r9, fp, pc}
10002644:	38008854 	stmdacc	r0, {r2, r4, r6, fp, pc}
10002648:	38008a58 	stmdacc	r0, {r3, r4, r6, r9, fp, pc}
1000264c:	380085bc 	stmdacc	r0, {r2, r3, r4, r5, r7, r8, sl, pc}

10002650 <prvCreateTask>:
    {
10002650:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
10002654:	b085      	sub	sp, #20
10002656:	4606      	mov	r6, r0
10002658:	460f      	mov	r7, r1
1000265a:	4615      	mov	r5, r2
1000265c:	4698      	mov	r8, r3
            pxStack = pvPortMallocStack( ( ( ( size_t ) uxStackDepth ) * sizeof( StackType_t ) ) );
1000265e:	0090      	lsls	r0, r2, #2
10002660:	f000 fe94 	bl	1000338c <pvPortMalloc>
            if( pxStack != NULL )
10002664:	4681      	mov	r9, r0
10002666:	b310      	cbz	r0, 100026ae <prvCreateTask+0x5e>
                pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) );
10002668:	204c      	movs	r0, #76	; 0x4c
1000266a:	f000 fe8f 	bl	1000338c <pvPortMalloc>
                if( pxNewTCB != NULL )
1000266e:	4604      	mov	r4, r0
10002670:	b1c8      	cbz	r0, 100026a6 <prvCreateTask+0x56>
                    ( void ) memset( ( void * ) pxNewTCB, 0x00, sizeof( TCB_t ) );
10002672:	224c      	movs	r2, #76	; 0x4c
10002674:	2100      	movs	r1, #0
10002676:	f001 f9cb 	bl	10003a10 <memset>
                    pxNewTCB->pxStack = pxStack;
1000267a:	f8c4 9030 	str.w	r9, [r4, #48]	; 0x30
        if( pxNewTCB != NULL )
1000267e:	b174      	cbz	r4, 1000269e <prvCreateTask+0x4e>
                pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
10002680:	2300      	movs	r3, #0
10002682:	f884 3049 	strb.w	r3, [r4, #73]	; 0x49
            prvInitialiseNewTask( pxTaskCode, pcName, uxStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
10002686:	9303      	str	r3, [sp, #12]
10002688:	9402      	str	r4, [sp, #8]
1000268a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
1000268c:	9301      	str	r3, [sp, #4]
1000268e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
10002690:	9300      	str	r3, [sp, #0]
10002692:	4643      	mov	r3, r8
10002694:	462a      	mov	r2, r5
10002696:	4639      	mov	r1, r7
10002698:	4630      	mov	r0, r6
1000269a:	f7ff fed3 	bl	10002444 <prvInitialiseNewTask>
    }
1000269e:	4620      	mov	r0, r4
100026a0:	b005      	add	sp, #20
100026a2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
                    vPortFreeStack( pxStack );
100026a6:	4648      	mov	r0, r9
100026a8:	f000 feda 	bl	10003460 <vPortFree>
100026ac:	e7e7      	b.n	1000267e <prvCreateTask+0x2e>
                pxNewTCB = NULL;
100026ae:	4604      	mov	r4, r0
        return pxNewTCB;
100026b0:	e7f5      	b.n	1000269e <prvCreateTask+0x4e>

100026b2 <prvDeleteTCB>:
    {
100026b2:	b510      	push	{r4, lr}
100026b4:	4604      	mov	r4, r0
            if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
100026b6:	f890 3049 	ldrb.w	r3, [r0, #73]	; 0x49
100026ba:	b113      	cbz	r3, 100026c2 <prvDeleteTCB+0x10>
            else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
100026bc:	2b01      	cmp	r3, #1
100026be:	d007      	beq.n	100026d0 <prvDeleteTCB+0x1e>
    }
100026c0:	bd10      	pop	{r4, pc}
                vPortFreeStack( pxTCB->pxStack );
100026c2:	6b00      	ldr	r0, [r0, #48]	; 0x30
100026c4:	f000 fecc 	bl	10003460 <vPortFree>
                vPortFree( pxTCB );
100026c8:	4620      	mov	r0, r4
100026ca:	f000 fec9 	bl	10003460 <vPortFree>
100026ce:	e7f7      	b.n	100026c0 <prvDeleteTCB+0xe>
                vPortFree( pxTCB );
100026d0:	f000 fec6 	bl	10003460 <vPortFree>
    }
100026d4:	e7f4      	b.n	100026c0 <prvDeleteTCB+0xe>
	...

100026d8 <prvCheckTasksWaitingTermination>:
        while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
100026d8:	4b0f      	ldr	r3, [pc, #60]	; (10002718 <prvCheckTasksWaitingTermination+0x40>)
100026da:	681b      	ldr	r3, [r3, #0]
100026dc:	b1d3      	cbz	r3, 10002714 <prvCheckTasksWaitingTermination+0x3c>
{
100026de:	b510      	push	{r4, lr}
                taskENTER_CRITICAL();
100026e0:	f000 ffa6 	bl	10003630 <vPortEnterCritical>
                        pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) );
100026e4:	4b0d      	ldr	r3, [pc, #52]	; (1000271c <prvCheckTasksWaitingTermination+0x44>)
100026e6:	68db      	ldr	r3, [r3, #12]
100026e8:	68dc      	ldr	r4, [r3, #12]
                        ( void ) uxListRemove( &( pxTCB->xStateListItem ) );
100026ea:	1d20      	adds	r0, r4, #4
100026ec:	f7ff fc89 	bl	10002002 <uxListRemove>
                        --uxCurrentNumberOfTasks;
100026f0:	4a0b      	ldr	r2, [pc, #44]	; (10002720 <prvCheckTasksWaitingTermination+0x48>)
100026f2:	6813      	ldr	r3, [r2, #0]
100026f4:	3b01      	subs	r3, #1
100026f6:	6013      	str	r3, [r2, #0]
                        --uxDeletedTasksWaitingCleanUp;
100026f8:	4a07      	ldr	r2, [pc, #28]	; (10002718 <prvCheckTasksWaitingTermination+0x40>)
100026fa:	6813      	ldr	r3, [r2, #0]
100026fc:	3b01      	subs	r3, #1
100026fe:	6013      	str	r3, [r2, #0]
                taskEXIT_CRITICAL();
10002700:	f000 ffa4 	bl	1000364c <vPortExitCritical>
                prvDeleteTCB( pxTCB );
10002704:	4620      	mov	r0, r4
10002706:	f7ff ffd4 	bl	100026b2 <prvDeleteTCB>
        while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
1000270a:	4b03      	ldr	r3, [pc, #12]	; (10002718 <prvCheckTasksWaitingTermination+0x40>)
1000270c:	681b      	ldr	r3, [r3, #0]
1000270e:	2b00      	cmp	r3, #0
10002710:	d1e6      	bne.n	100026e0 <prvCheckTasksWaitingTermination+0x8>
}
10002712:	bd10      	pop	{r4, pc}
10002714:	4770      	bx	lr
10002716:	bf00      	nop
10002718:	3800864c 	stmdacc	r0, {r2, r3, r6, r9, sl, pc}
1000271c:	38008b2c 	stmdacc	r0, {r2, r3, r5, r8, r9, fp, pc}
10002720:	38008648 	stmdacc	r0, {r3, r6, r9, sl, pc}

10002724 <prvAddCurrentTaskToDelayedList>:
#endif /* if ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( INCLUDE_xTaskGetIdleTaskHandle == 1 ) ) */
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait,
                                            const BaseType_t xCanBlockIndefinitely )
{
10002724:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
10002728:	4604      	mov	r4, r0
1000272a:	460d      	mov	r5, r1
    TickType_t xTimeToWake;
    const TickType_t xConstTickCount = xTickCount;
1000272c:	4b21      	ldr	r3, [pc, #132]	; (100027b4 <prvAddCurrentTaskToDelayedList+0x90>)
1000272e:	681e      	ldr	r6, [r3, #0]
    List_t * const pxDelayedList = pxDelayedTaskList;
10002730:	4b21      	ldr	r3, [pc, #132]	; (100027b8 <prvAddCurrentTaskToDelayedList+0x94>)
10002732:	681f      	ldr	r7, [r3, #0]
    List_t * const pxOverflowDelayedList = pxOverflowDelayedTaskList;
10002734:	4b21      	ldr	r3, [pc, #132]	; (100027bc <prvAddCurrentTaskToDelayedList+0x98>)
10002736:	f8d3 8000 	ldr.w	r8, [r3]
    #if ( INCLUDE_xTaskAbortDelay == 1 )
    {
        /* About to enter a delayed list, so ensure the ucDelayAborted flag is
         * reset to pdFALSE so it can be detected as having been set to pdTRUE
         * when the task leaves the Blocked state. */
        pxCurrentTCB->ucDelayAborted = ( uint8_t ) pdFALSE;
1000273a:	4b21      	ldr	r3, [pc, #132]	; (100027c0 <prvAddCurrentTaskToDelayedList+0x9c>)
1000273c:	681a      	ldr	r2, [r3, #0]
1000273e:	2100      	movs	r1, #0
10002740:	f882 104a 	strb.w	r1, [r2, #74]	; 0x4a
    }
    #endif

    /* Remove the task from the ready list before adding it to the blocked list
     * as the same list item is used for both lists. */
    if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
10002744:	6818      	ldr	r0, [r3, #0]
10002746:	3004      	adds	r0, #4
10002748:	f7ff fc5b 	bl	10002002 <uxListRemove>
        mtCOVERAGE_TEST_MARKER();
    }

    #if ( INCLUDE_vTaskSuspend == 1 )
    {
        if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
1000274c:	f1b4 3fff 	cmp.w	r4, #4294967295
10002750:	d00d      	beq.n	1000276e <prvAddCurrentTaskToDelayedList+0x4a>
        else
        {
            /* Calculate the time at which the task should be woken if the event
             * does not occur.  This may overflow but this doesn't matter, the
             * kernel will manage it correctly. */
            xTimeToWake = xConstTickCount + xTicksToWait;
10002752:	4434      	add	r4, r6

            /* The list item will be inserted in wake time order. */
            listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
10002754:	4b1a      	ldr	r3, [pc, #104]	; (100027c0 <prvAddCurrentTaskToDelayedList+0x9c>)
10002756:	681b      	ldr	r3, [r3, #0]
10002758:	605c      	str	r4, [r3, #4]

            if( xTimeToWake < xConstTickCount )
1000275a:	42a6      	cmp	r6, r4
1000275c:	d91d      	bls.n	1000279a <prvAddCurrentTaskToDelayedList+0x76>
            {
                /* Wake time has overflowed.  Place this item in the overflow
                 * list. */
                traceMOVED_TASK_TO_OVERFLOW_DELAYED_LIST();
                vListInsert( pxOverflowDelayedList, &( pxCurrentTCB->xStateListItem ) );
1000275e:	4b18      	ldr	r3, [pc, #96]	; (100027c0 <prvAddCurrentTaskToDelayedList+0x9c>)
10002760:	6819      	ldr	r1, [r3, #0]
10002762:	3104      	adds	r1, #4
10002764:	4640      	mov	r0, r8
10002766:	f7ff fc33 	bl	10001fd0 <vListInsert>

        /* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
        ( void ) xCanBlockIndefinitely;
    }
    #endif /* INCLUDE_vTaskSuspend */
}
1000276a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
1000276e:	2d00      	cmp	r5, #0
10002770:	d0ef      	beq.n	10002752 <prvAddCurrentTaskToDelayedList+0x2e>
            listINSERT_END( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
10002772:	4a14      	ldr	r2, [pc, #80]	; (100027c4 <prvAddCurrentTaskToDelayedList+0xa0>)
10002774:	6851      	ldr	r1, [r2, #4]
10002776:	4b12      	ldr	r3, [pc, #72]	; (100027c0 <prvAddCurrentTaskToDelayedList+0x9c>)
10002778:	6818      	ldr	r0, [r3, #0]
1000277a:	6081      	str	r1, [r0, #8]
1000277c:	6818      	ldr	r0, [r3, #0]
1000277e:	688c      	ldr	r4, [r1, #8]
10002780:	60c4      	str	r4, [r0, #12]
10002782:	6818      	ldr	r0, [r3, #0]
10002784:	3004      	adds	r0, #4
10002786:	6060      	str	r0, [r4, #4]
10002788:	6818      	ldr	r0, [r3, #0]
1000278a:	3004      	adds	r0, #4
1000278c:	6088      	str	r0, [r1, #8]
1000278e:	681b      	ldr	r3, [r3, #0]
10002790:	615a      	str	r2, [r3, #20]
10002792:	6813      	ldr	r3, [r2, #0]
10002794:	3301      	adds	r3, #1
10002796:	6013      	str	r3, [r2, #0]
10002798:	e7e7      	b.n	1000276a <prvAddCurrentTaskToDelayedList+0x46>
                vListInsert( pxDelayedList, &( pxCurrentTCB->xStateListItem ) );
1000279a:	4b09      	ldr	r3, [pc, #36]	; (100027c0 <prvAddCurrentTaskToDelayedList+0x9c>)
1000279c:	6819      	ldr	r1, [r3, #0]
1000279e:	3104      	adds	r1, #4
100027a0:	4638      	mov	r0, r7
100027a2:	f7ff fc15 	bl	10001fd0 <vListInsert>
                if( xTimeToWake < xNextTaskUnblockTime )
100027a6:	4b08      	ldr	r3, [pc, #32]	; (100027c8 <prvAddCurrentTaskToDelayedList+0xa4>)
100027a8:	681b      	ldr	r3, [r3, #0]
100027aa:	42a3      	cmp	r3, r4
100027ac:	d9dd      	bls.n	1000276a <prvAddCurrentTaskToDelayedList+0x46>
                    xNextTaskUnblockTime = xTimeToWake;
100027ae:	4b06      	ldr	r3, [pc, #24]	; (100027c8 <prvAddCurrentTaskToDelayedList+0xa4>)
100027b0:	601c      	str	r4, [r3, #0]
}
100027b2:	e7da      	b.n	1000276a <prvAddCurrentTaskToDelayedList+0x46>
100027b4:	38008b48 	stmdacc	r0, {r3, r6, r8, r9, fp, pc}
100027b8:	380085b4 	stmdacc	r0, {r2, r4, r5, r7, r8, sl, pc}
100027bc:	380085b8 	stmdacc	r0, {r3, r4, r5, r7, r8, sl, pc}
100027c0:	380085b0 	stmdacc	r0, {r4, r5, r7, r8, sl, pc}
100027c4:	38008b10 	stmdacc	r0, {r4, r8, r9, fp, pc}
100027c8:	38008ae4 	stmdacc	r0, {r2, r5, r6, r7, r9, fp, pc}

100027cc <xTaskCreateStatic>:
    {
100027cc:	b510      	push	{r4, lr}
100027ce:	b086      	sub	sp, #24
        TaskHandle_t xReturn = NULL;
100027d0:	2400      	movs	r4, #0
100027d2:	9405      	str	r4, [sp, #20]
        pxNewTCB = prvCreateStaticTask( pxTaskCode, pcName, uxStackDepth, pvParameters, uxPriority, puxStackBuffer, pxTaskBuffer, &xReturn );
100027d4:	ac05      	add	r4, sp, #20
100027d6:	9403      	str	r4, [sp, #12]
100027d8:	9c0a      	ldr	r4, [sp, #40]	; 0x28
100027da:	9402      	str	r4, [sp, #8]
100027dc:	9c09      	ldr	r4, [sp, #36]	; 0x24
100027de:	9401      	str	r4, [sp, #4]
100027e0:	9c08      	ldr	r4, [sp, #32]
100027e2:	9400      	str	r4, [sp, #0]
100027e4:	f7ff fe79 	bl	100024da <prvCreateStaticTask>
        if( pxNewTCB != NULL )
100027e8:	b108      	cbz	r0, 100027ee <xTaskCreateStatic+0x22>
            prvAddNewTaskToReadyList( pxNewTCB );
100027ea:	f7ff fed3 	bl	10002594 <prvAddNewTaskToReadyList>
    }
100027ee:	9805      	ldr	r0, [sp, #20]
100027f0:	b006      	add	sp, #24
100027f2:	bd10      	pop	{r4, pc}

100027f4 <xTaskCreate>:
    {
100027f4:	b510      	push	{r4, lr}
100027f6:	b082      	sub	sp, #8
        pxNewTCB = prvCreateTask( pxTaskCode, pcName, uxStackDepth, pvParameters, uxPriority, pxCreatedTask );
100027f8:	9c05      	ldr	r4, [sp, #20]
100027fa:	9401      	str	r4, [sp, #4]
100027fc:	9c04      	ldr	r4, [sp, #16]
100027fe:	9400      	str	r4, [sp, #0]
10002800:	f7ff ff26 	bl	10002650 <prvCreateTask>
        if( pxNewTCB != NULL )
10002804:	b120      	cbz	r0, 10002810 <xTaskCreate+0x1c>
            prvAddNewTaskToReadyList( pxNewTCB );
10002806:	f7ff fec5 	bl	10002594 <prvAddNewTaskToReadyList>
            xReturn = pdPASS;
1000280a:	2001      	movs	r0, #1
    }
1000280c:	b002      	add	sp, #8
1000280e:	bd10      	pop	{r4, pc}
            xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
10002810:	f04f 30ff 	mov.w	r0, #4294967295
        return xReturn;
10002814:	e7fa      	b.n	1000280c <xTaskCreate+0x18>
	...

10002818 <vTaskSuspendAll>:
        uxSchedulerSuspended = ( UBaseType_t ) ( uxSchedulerSuspended + 1U );
10002818:	4a02      	ldr	r2, [pc, #8]	; (10002824 <vTaskSuspendAll+0xc>)
1000281a:	6813      	ldr	r3, [r2, #0]
1000281c:	3301      	adds	r3, #1
1000281e:	6013      	str	r3, [r2, #0]
}
10002820:	4770      	bx	lr
10002822:	bf00      	nop
10002824:	38008850 	stmdacc	r0, {r4, r6, fp, pc}

10002828 <xTaskGetTickCount>:
        xTicks = xTickCount;
10002828:	4b01      	ldr	r3, [pc, #4]	; (10002830 <xTaskGetTickCount+0x8>)
1000282a:	6818      	ldr	r0, [r3, #0]
}
1000282c:	4770      	bx	lr
1000282e:	bf00      	nop
10002830:	38008b48 	stmdacc	r0, {r3, r6, r8, r9, fp, pc}

10002834 <uxTaskGetNumberOfTasks>:
    return uxCurrentNumberOfTasks;
10002834:	4b01      	ldr	r3, [pc, #4]	; (1000283c <uxTaskGetNumberOfTasks+0x8>)
10002836:	6818      	ldr	r0, [r3, #0]
}
10002838:	4770      	bx	lr
1000283a:	bf00      	nop
1000283c:	38008648 	stmdacc	r0, {r3, r6, r9, sl, pc}

10002840 <vTaskStepTick>:
    {
10002840:	b510      	push	{r4, lr}
10002842:	4604      	mov	r4, r0
        xUpdatedTickCount = xTickCount + xTicksToJump;
10002844:	4b0a      	ldr	r3, [pc, #40]	; (10002870 <vTaskStepTick+0x30>)
10002846:	681b      	ldr	r3, [r3, #0]
10002848:	4403      	add	r3, r0
        if( xUpdatedTickCount == xNextTaskUnblockTime )
1000284a:	4a0a      	ldr	r2, [pc, #40]	; (10002874 <vTaskStepTick+0x34>)
1000284c:	6812      	ldr	r2, [r2, #0]
1000284e:	429a      	cmp	r2, r3
10002850:	d004      	beq.n	1000285c <vTaskStepTick+0x1c>
        xTickCount += xTicksToJump;
10002852:	4b07      	ldr	r3, [pc, #28]	; (10002870 <vTaskStepTick+0x30>)
10002854:	6818      	ldr	r0, [r3, #0]
10002856:	4404      	add	r4, r0
10002858:	601c      	str	r4, [r3, #0]
    }
1000285a:	bd10      	pop	{r4, pc}
            taskENTER_CRITICAL();
1000285c:	f000 fee8 	bl	10003630 <vPortEnterCritical>
                xPendedTicks++;
10002860:	4a05      	ldr	r2, [pc, #20]	; (10002878 <vTaskStepTick+0x38>)
10002862:	6813      	ldr	r3, [r2, #0]
10002864:	3301      	adds	r3, #1
10002866:	6013      	str	r3, [r2, #0]
            taskEXIT_CRITICAL();
10002868:	f000 fef0 	bl	1000364c <vPortExitCritical>
            xTicksToJump--;
1000286c:	3c01      	subs	r4, #1
1000286e:	e7f0      	b.n	10002852 <vTaskStepTick+0x12>
10002870:	38008b48 	stmdacc	r0, {r3, r6, r8, r9, fp, pc}
10002874:	38008ae4 	stmdacc	r0, {r2, r5, r6, r7, r9, fp, pc}
10002878:	38008aec 	stmdacc	r0, {r2, r3, r5, r6, r7, r9, fp, pc}

1000287c <xTaskIncrementTick>:
    if( uxSchedulerSuspended == ( UBaseType_t ) 0U )
1000287c:	4b4c      	ldr	r3, [pc, #304]	; (100029b0 <xTaskIncrementTick+0x134>)
1000287e:	681b      	ldr	r3, [r3, #0]
10002880:	2b00      	cmp	r3, #0
10002882:	f040 808d 	bne.w	100029a0 <xTaskIncrementTick+0x124>
{
10002886:	b570      	push	{r4, r5, r6, lr}
        const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
10002888:	4b4a      	ldr	r3, [pc, #296]	; (100029b4 <xTaskIncrementTick+0x138>)
1000288a:	681c      	ldr	r4, [r3, #0]
1000288c:	3401      	adds	r4, #1
        xTickCount = xConstTickCount;
1000288e:	601c      	str	r4, [r3, #0]
        if( xConstTickCount == ( TickType_t ) 0U )
10002890:	b1a4      	cbz	r4, 100028bc <xTaskIncrementTick+0x40>
        if( xConstTickCount >= xNextTaskUnblockTime )
10002892:	4b49      	ldr	r3, [pc, #292]	; (100029b8 <xTaskIncrementTick+0x13c>)
10002894:	681b      	ldr	r3, [r3, #0]
10002896:	42a3      	cmp	r3, r4
10002898:	d91d      	bls.n	100028d6 <xTaskIncrementTick+0x5a>
    BaseType_t xSwitchRequired = pdFALSE;
1000289a:	2000      	movs	r0, #0
                if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > 1U )
1000289c:	4b47      	ldr	r3, [pc, #284]	; (100029bc <xTaskIncrementTick+0x140>)
1000289e:	681b      	ldr	r3, [r3, #0]
100028a0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
100028a2:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
100028a6:	009a      	lsls	r2, r3, #2
100028a8:	4b45      	ldr	r3, [pc, #276]	; (100029c0 <xTaskIncrementTick+0x144>)
100028aa:	589b      	ldr	r3, [r3, r2]
100028ac:	2b01      	cmp	r3, #1
100028ae:	d900      	bls.n	100028b2 <xTaskIncrementTick+0x36>
                    xSwitchRequired = pdTRUE;
100028b0:	2001      	movs	r0, #1
                if( xYieldPendings[ 0 ] != pdFALSE )
100028b2:	4b44      	ldr	r3, [pc, #272]	; (100029c4 <xTaskIncrementTick+0x148>)
100028b4:	681b      	ldr	r3, [r3, #0]
100028b6:	2b00      	cmp	r3, #0
100028b8:	d178      	bne.n	100029ac <xTaskIncrementTick+0x130>
}
100028ba:	bd70      	pop	{r4, r5, r6, pc}
            taskSWITCH_DELAYED_LISTS();
100028bc:	4a42      	ldr	r2, [pc, #264]	; (100029c8 <xTaskIncrementTick+0x14c>)
100028be:	6811      	ldr	r1, [r2, #0]
100028c0:	4b42      	ldr	r3, [pc, #264]	; (100029cc <xTaskIncrementTick+0x150>)
100028c2:	6818      	ldr	r0, [r3, #0]
100028c4:	6010      	str	r0, [r2, #0]
100028c6:	6019      	str	r1, [r3, #0]
100028c8:	4a41      	ldr	r2, [pc, #260]	; (100029d0 <xTaskIncrementTick+0x154>)
100028ca:	6813      	ldr	r3, [r2, #0]
100028cc:	3301      	adds	r3, #1
100028ce:	6013      	str	r3, [r2, #0]
100028d0:	f7ff fda4 	bl	1000241c <prvResetNextTaskUnblockTime>
100028d4:	e7dd      	b.n	10002892 <xTaskIncrementTick+0x16>
    BaseType_t xSwitchRequired = pdFALSE;
100028d6:	2000      	movs	r0, #0
100028d8:	e037      	b.n	1000294a <xTaskIncrementTick+0xce>
                    xNextTaskUnblockTime = portMAX_DELAY;
100028da:	4b37      	ldr	r3, [pc, #220]	; (100029b8 <xTaskIncrementTick+0x13c>)
100028dc:	f04f 32ff 	mov.w	r2, #4294967295
100028e0:	601a      	str	r2, [r3, #0]
                    break;
100028e2:	e7db      	b.n	1000289c <xTaskIncrementTick+0x20>
                        xNextTaskUnblockTime = xItemValue;
100028e4:	4b34      	ldr	r3, [pc, #208]	; (100029b8 <xTaskIncrementTick+0x13c>)
100028e6:	601a      	str	r2, [r3, #0]
                        break;
100028e8:	e7d8      	b.n	1000289c <xTaskIncrementTick+0x20>
                    listREMOVE_ITEM( &( pxTCB->xStateListItem ) );
100028ea:	68d9      	ldr	r1, [r3, #12]
100028ec:	6051      	str	r1, [r2, #4]
100028ee:	e042      	b.n	10002976 <xTaskIncrementTick+0xfa>
                        listREMOVE_ITEM( &( pxTCB->xEventListItem ) );
100028f0:	2100      	movs	r1, #0
100028f2:	6299      	str	r1, [r3, #40]	; 0x28
100028f4:	6811      	ldr	r1, [r2, #0]
100028f6:	3901      	subs	r1, #1
100028f8:	6011      	str	r1, [r2, #0]
                    prvAddTaskToReadyList( pxTCB );
100028fa:	6ada      	ldr	r2, [r3, #44]	; 0x2c
100028fc:	4935      	ldr	r1, [pc, #212]	; (100029d4 <xTaskIncrementTick+0x158>)
100028fe:	6809      	ldr	r1, [r1, #0]
10002900:	428a      	cmp	r2, r1
10002902:	d901      	bls.n	10002908 <xTaskIncrementTick+0x8c>
10002904:	4933      	ldr	r1, [pc, #204]	; (100029d4 <xTaskIncrementTick+0x158>)
10002906:	600a      	str	r2, [r1, #0]
10002908:	492d      	ldr	r1, [pc, #180]	; (100029c0 <xTaskIncrementTick+0x144>)
1000290a:	ebc2 02c2 	rsb	r2, r2, r2, lsl #3
1000290e:	ea4f 0c82 	mov.w	ip, r2, lsl #2
10002912:	448c      	add	ip, r1
10002914:	f8dc 2004 	ldr.w	r2, [ip, #4]
10002918:	609a      	str	r2, [r3, #8]
1000291a:	6896      	ldr	r6, [r2, #8]
1000291c:	60de      	str	r6, [r3, #12]
1000291e:	6075      	str	r5, [r6, #4]
10002920:	6095      	str	r5, [r2, #8]
10002922:	6ada      	ldr	r2, [r3, #44]	; 0x2c
10002924:	ebc2 0cc2 	rsb	ip, r2, r2, lsl #3
10002928:	ea4f 058c 	mov.w	r5, ip, lsl #2
1000292c:	194e      	adds	r6, r1, r5
1000292e:	615e      	str	r6, [r3, #20]
10002930:	594d      	ldr	r5, [r1, r5]
10002932:	3501      	adds	r5, #1
10002934:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
10002938:	f841 500c 	str.w	r5, [r1, ip]
                            if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
1000293c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
1000293e:	4b1f      	ldr	r3, [pc, #124]	; (100029bc <xTaskIncrementTick+0x140>)
10002940:	681b      	ldr	r3, [r3, #0]
10002942:	6adb      	ldr	r3, [r3, #44]	; 0x2c
10002944:	429a      	cmp	r2, r3
10002946:	d900      	bls.n	1000294a <xTaskIncrementTick+0xce>
                                xSwitchRequired = pdTRUE;
10002948:	2001      	movs	r0, #1
                if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
1000294a:	4b1f      	ldr	r3, [pc, #124]	; (100029c8 <xTaskIncrementTick+0x14c>)
1000294c:	681b      	ldr	r3, [r3, #0]
1000294e:	681b      	ldr	r3, [r3, #0]
10002950:	2b00      	cmp	r3, #0
10002952:	d0c2      	beq.n	100028da <xTaskIncrementTick+0x5e>
                    pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList );
10002954:	4b1c      	ldr	r3, [pc, #112]	; (100029c8 <xTaskIncrementTick+0x14c>)
10002956:	681b      	ldr	r3, [r3, #0]
10002958:	68db      	ldr	r3, [r3, #12]
1000295a:	68db      	ldr	r3, [r3, #12]
                    xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
1000295c:	685a      	ldr	r2, [r3, #4]
                    if( xConstTickCount < xItemValue )
1000295e:	4294      	cmp	r4, r2
10002960:	d3c0      	bcc.n	100028e4 <xTaskIncrementTick+0x68>
                    listREMOVE_ITEM( &( pxTCB->xStateListItem ) );
10002962:	695a      	ldr	r2, [r3, #20]
10002964:	689d      	ldr	r5, [r3, #8]
10002966:	68d9      	ldr	r1, [r3, #12]
10002968:	60a9      	str	r1, [r5, #8]
1000296a:	689d      	ldr	r5, [r3, #8]
1000296c:	604d      	str	r5, [r1, #4]
1000296e:	6851      	ldr	r1, [r2, #4]
10002970:	1d1d      	adds	r5, r3, #4
10002972:	42a9      	cmp	r1, r5
10002974:	d0b9      	beq.n	100028ea <xTaskIncrementTick+0x6e>
10002976:	2100      	movs	r1, #0
10002978:	6159      	str	r1, [r3, #20]
1000297a:	6811      	ldr	r1, [r2, #0]
1000297c:	3901      	subs	r1, #1
1000297e:	6011      	str	r1, [r2, #0]
                    if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
10002980:	6a9a      	ldr	r2, [r3, #40]	; 0x28
10002982:	2a00      	cmp	r2, #0
10002984:	d0b9      	beq.n	100028fa <xTaskIncrementTick+0x7e>
                        listREMOVE_ITEM( &( pxTCB->xEventListItem ) );
10002986:	69de      	ldr	r6, [r3, #28]
10002988:	6a19      	ldr	r1, [r3, #32]
1000298a:	60b1      	str	r1, [r6, #8]
1000298c:	69de      	ldr	r6, [r3, #28]
1000298e:	604e      	str	r6, [r1, #4]
10002990:	6856      	ldr	r6, [r2, #4]
10002992:	f103 0118 	add.w	r1, r3, #24
10002996:	428e      	cmp	r6, r1
10002998:	d1aa      	bne.n	100028f0 <xTaskIncrementTick+0x74>
1000299a:	6a19      	ldr	r1, [r3, #32]
1000299c:	6051      	str	r1, [r2, #4]
1000299e:	e7a7      	b.n	100028f0 <xTaskIncrementTick+0x74>
        xPendedTicks += 1U;
100029a0:	4a0d      	ldr	r2, [pc, #52]	; (100029d8 <xTaskIncrementTick+0x15c>)
100029a2:	6813      	ldr	r3, [r2, #0]
100029a4:	3301      	adds	r3, #1
100029a6:	6013      	str	r3, [r2, #0]
    BaseType_t xSwitchRequired = pdFALSE;
100029a8:	2000      	movs	r0, #0
}
100029aa:	4770      	bx	lr
                    xSwitchRequired = pdTRUE;
100029ac:	2001      	movs	r0, #1
    return xSwitchRequired;
100029ae:	e784      	b.n	100028ba <xTaskIncrementTick+0x3e>
100029b0:	38008850 	stmdacc	r0, {r4, r6, fp, pc}
100029b4:	38008b48 	stmdacc	r0, {r3, r6, r8, r9, fp, pc}
100029b8:	38008ae4 	stmdacc	r0, {r2, r5, r6, r7, r9, fp, pc}
100029bc:	380085b0 	stmdacc	r0, {r4, r5, r7, r8, sl, pc}
100029c0:	380085bc 	stmdacc	r0, {r2, r3, r4, r5, r7, r8, sl, pc}
100029c4:	38008b98 	stmdacc	r0, {r3, r4, r7, r8, r9, fp, pc}
100029c8:	380085b4 	stmdacc	r0, {r2, r4, r5, r7, r8, sl, pc}
100029cc:	380085b8 	stmdacc	r0, {r3, r4, r5, r7, r8, sl, pc}
100029d0:	38008ae8 	stmdacc	r0, {r3, r5, r6, r7, r9, fp, pc}
100029d4:	38008a58 	stmdacc	r0, {r3, r4, r6, r9, fp, pc}
100029d8:	38008aec 	stmdacc	r0, {r2, r3, r5, r6, r7, r9, fp, pc}

100029dc <xTaskResumeAll>:
{
100029dc:	b510      	push	{r4, lr}
        taskENTER_CRITICAL();
100029de:	f000 fe27 	bl	10003630 <vPortEnterCritical>
            uxSchedulerSuspended = ( UBaseType_t ) ( uxSchedulerSuspended - 1U );
100029e2:	4b42      	ldr	r3, [pc, #264]	; (10002aec <xTaskResumeAll+0x110>)
100029e4:	681a      	ldr	r2, [r3, #0]
100029e6:	3a01      	subs	r2, #1
100029e8:	601a      	str	r2, [r3, #0]
            if( uxSchedulerSuspended == ( UBaseType_t ) 0U )
100029ea:	681b      	ldr	r3, [r3, #0]
100029ec:	2b00      	cmp	r3, #0
100029ee:	d177      	bne.n	10002ae0 <xTaskResumeAll+0x104>
                if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
100029f0:	4b3f      	ldr	r3, [pc, #252]	; (10002af0 <xTaskResumeAll+0x114>)
100029f2:	681b      	ldr	r3, [r3, #0]
100029f4:	b93b      	cbnz	r3, 10002a06 <xTaskResumeAll+0x2a>
    BaseType_t xAlreadyYielded = pdFALSE;
100029f6:	2400      	movs	r4, #0
100029f8:	e073      	b.n	10002ae2 <xTaskResumeAll+0x106>
                        listREMOVE_ITEM( &( pxTCB->xEventListItem ) );
100029fa:	6a19      	ldr	r1, [r3, #32]
100029fc:	6051      	str	r1, [r2, #4]
100029fe:	e015      	b.n	10002a2c <xTaskResumeAll+0x50>
                        listREMOVE_ITEM( &( pxTCB->xStateListItem ) );
10002a00:	68d9      	ldr	r1, [r3, #12]
10002a02:	6051      	str	r1, [r2, #4]
10002a04:	e021      	b.n	10002a4a <xTaskResumeAll+0x6e>
    TCB_t * pxTCB = NULL;
10002a06:	2300      	movs	r3, #0
                    while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
10002a08:	4a3a      	ldr	r2, [pc, #232]	; (10002af4 <xTaskResumeAll+0x118>)
10002a0a:	6812      	ldr	r2, [r2, #0]
10002a0c:	2a00      	cmp	r2, #0
10002a0e:	d04a      	beq.n	10002aa6 <xTaskResumeAll+0xca>
                        pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) );
10002a10:	4b38      	ldr	r3, [pc, #224]	; (10002af4 <xTaskResumeAll+0x118>)
10002a12:	68db      	ldr	r3, [r3, #12]
10002a14:	68db      	ldr	r3, [r3, #12]
                        listREMOVE_ITEM( &( pxTCB->xEventListItem ) );
10002a16:	6a9a      	ldr	r2, [r3, #40]	; 0x28
10002a18:	69d8      	ldr	r0, [r3, #28]
10002a1a:	6a19      	ldr	r1, [r3, #32]
10002a1c:	6081      	str	r1, [r0, #8]
10002a1e:	69d8      	ldr	r0, [r3, #28]
10002a20:	6048      	str	r0, [r1, #4]
10002a22:	6850      	ldr	r0, [r2, #4]
10002a24:	f103 0118 	add.w	r1, r3, #24
10002a28:	4288      	cmp	r0, r1
10002a2a:	d0e6      	beq.n	100029fa <xTaskResumeAll+0x1e>
10002a2c:	2100      	movs	r1, #0
10002a2e:	6299      	str	r1, [r3, #40]	; 0x28
10002a30:	6811      	ldr	r1, [r2, #0]
10002a32:	3901      	subs	r1, #1
10002a34:	6011      	str	r1, [r2, #0]
                        listREMOVE_ITEM( &( pxTCB->xStateListItem ) );
10002a36:	695a      	ldr	r2, [r3, #20]
10002a38:	6898      	ldr	r0, [r3, #8]
10002a3a:	68d9      	ldr	r1, [r3, #12]
10002a3c:	6081      	str	r1, [r0, #8]
10002a3e:	6898      	ldr	r0, [r3, #8]
10002a40:	6048      	str	r0, [r1, #4]
10002a42:	6851      	ldr	r1, [r2, #4]
10002a44:	1d18      	adds	r0, r3, #4
10002a46:	4281      	cmp	r1, r0
10002a48:	d0da      	beq.n	10002a00 <xTaskResumeAll+0x24>
10002a4a:	2100      	movs	r1, #0
10002a4c:	6159      	str	r1, [r3, #20]
10002a4e:	6811      	ldr	r1, [r2, #0]
10002a50:	3901      	subs	r1, #1
10002a52:	6011      	str	r1, [r2, #0]
                        prvAddTaskToReadyList( pxTCB );
10002a54:	6ada      	ldr	r2, [r3, #44]	; 0x2c
10002a56:	4928      	ldr	r1, [pc, #160]	; (10002af8 <xTaskResumeAll+0x11c>)
10002a58:	6809      	ldr	r1, [r1, #0]
10002a5a:	428a      	cmp	r2, r1
10002a5c:	d901      	bls.n	10002a62 <xTaskResumeAll+0x86>
10002a5e:	4926      	ldr	r1, [pc, #152]	; (10002af8 <xTaskResumeAll+0x11c>)
10002a60:	600a      	str	r2, [r1, #0]
10002a62:	4926      	ldr	r1, [pc, #152]	; (10002afc <xTaskResumeAll+0x120>)
10002a64:	ebc2 02c2 	rsb	r2, r2, r2, lsl #3
10002a68:	eb01 0282 	add.w	r2, r1, r2, lsl #2
10002a6c:	6852      	ldr	r2, [r2, #4]
10002a6e:	609a      	str	r2, [r3, #8]
10002a70:	6894      	ldr	r4, [r2, #8]
10002a72:	60dc      	str	r4, [r3, #12]
10002a74:	6060      	str	r0, [r4, #4]
10002a76:	6090      	str	r0, [r2, #8]
10002a78:	6ada      	ldr	r2, [r3, #44]	; 0x2c
10002a7a:	ebc2 00c2 	rsb	r0, r2, r2, lsl #3
10002a7e:	eb01 0480 	add.w	r4, r1, r0, lsl #2
10002a82:	615c      	str	r4, [r3, #20]
10002a84:	f851 0020 	ldr.w	r0, [r1, r0, lsl #2]
10002a88:	3001      	adds	r0, #1
10002a8a:	ebc2 02c2 	rsb	r2, r2, r2, lsl #3
10002a8e:	f841 0022 	str.w	r0, [r1, r2, lsl #2]
                            if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
10002a92:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
10002a94:	4a1a      	ldr	r2, [pc, #104]	; (10002b00 <xTaskResumeAll+0x124>)
10002a96:	6812      	ldr	r2, [r2, #0]
10002a98:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
10002a9a:	4291      	cmp	r1, r2
10002a9c:	d9b4      	bls.n	10002a08 <xTaskResumeAll+0x2c>
                                xYieldPendings[ xCoreID ] = pdTRUE;
10002a9e:	4a19      	ldr	r2, [pc, #100]	; (10002b04 <xTaskResumeAll+0x128>)
10002aa0:	2101      	movs	r1, #1
10002aa2:	6011      	str	r1, [r2, #0]
10002aa4:	e7b0      	b.n	10002a08 <xTaskResumeAll+0x2c>
                    if( pxTCB != NULL )
10002aa6:	b10b      	cbz	r3, 10002aac <xTaskResumeAll+0xd0>
                        prvResetNextTaskUnblockTime();
10002aa8:	f7ff fcb8 	bl	1000241c <prvResetNextTaskUnblockTime>
                        TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
10002aac:	4b16      	ldr	r3, [pc, #88]	; (10002b08 <xTaskResumeAll+0x12c>)
10002aae:	681c      	ldr	r4, [r3, #0]
                        if( xPendedCounts > ( TickType_t ) 0U )
10002ab0:	b954      	cbnz	r4, 10002ac8 <xTaskResumeAll+0xec>
                    if( xYieldPendings[ xCoreID ] != pdFALSE )
10002ab2:	4b14      	ldr	r3, [pc, #80]	; (10002b04 <xTaskResumeAll+0x128>)
10002ab4:	681c      	ldr	r4, [r3, #0]
10002ab6:	b1a4      	cbz	r4, 10002ae2 <xTaskResumeAll+0x106>
                            taskYIELD_TASK_CORE_IF_USING_PREEMPTION( pxCurrentTCB );
10002ab8:	4b11      	ldr	r3, [pc, #68]	; (10002b00 <xTaskResumeAll+0x124>)
10002aba:	681b      	ldr	r3, [r3, #0]
10002abc:	f000 fdac 	bl	10003618 <vPortYield>
                            xAlreadyYielded = pdTRUE;
10002ac0:	2401      	movs	r4, #1
10002ac2:	e00e      	b.n	10002ae2 <xTaskResumeAll+0x106>
                            } while( xPendedCounts > ( TickType_t ) 0U );
10002ac4:	3c01      	subs	r4, #1
10002ac6:	d007      	beq.n	10002ad8 <xTaskResumeAll+0xfc>
                                if( xTaskIncrementTick() != pdFALSE )
10002ac8:	f7ff fed8 	bl	1000287c <xTaskIncrementTick>
10002acc:	2800      	cmp	r0, #0
10002ace:	d0f9      	beq.n	10002ac4 <xTaskResumeAll+0xe8>
                                    xYieldPendings[ xCoreID ] = pdTRUE;
10002ad0:	4b0c      	ldr	r3, [pc, #48]	; (10002b04 <xTaskResumeAll+0x128>)
10002ad2:	2201      	movs	r2, #1
10002ad4:	601a      	str	r2, [r3, #0]
10002ad6:	e7f5      	b.n	10002ac4 <xTaskResumeAll+0xe8>
                            xPendedTicks = 0;
10002ad8:	4b0b      	ldr	r3, [pc, #44]	; (10002b08 <xTaskResumeAll+0x12c>)
10002ada:	2200      	movs	r2, #0
10002adc:	601a      	str	r2, [r3, #0]
10002ade:	e7e8      	b.n	10002ab2 <xTaskResumeAll+0xd6>
    BaseType_t xAlreadyYielded = pdFALSE;
10002ae0:	2400      	movs	r4, #0
        taskEXIT_CRITICAL();
10002ae2:	f000 fdb3 	bl	1000364c <vPortExitCritical>
}
10002ae6:	4620      	mov	r0, r4
10002ae8:	bd10      	pop	{r4, pc}
10002aea:	bf00      	nop
10002aec:	38008850 	stmdacc	r0, {r4, r6, fp, pc}
10002af0:	38008648 	stmdacc	r0, {r3, r6, r9, sl, pc}
10002af4:	38008af0 	stmdacc	r0, {r4, r5, r6, r7, r9, fp, pc}
10002af8:	38008a58 	stmdacc	r0, {r3, r4, r6, r9, fp, pc}
10002afc:	380085bc 	stmdacc	r0, {r2, r3, r4, r5, r7, r8, sl, pc}
10002b00:	380085b0 	stmdacc	r0, {r4, r5, r7, r8, sl, pc}
10002b04:	38008b98 	stmdacc	r0, {r3, r4, r7, r8, r9, fp, pc}
10002b08:	38008aec 	stmdacc	r0, {r2, r3, r5, r6, r7, r9, fp, pc}

10002b0c <vTaskDelay>:
    {
10002b0c:	b510      	push	{r4, lr}
        if( xTicksToDelay > ( TickType_t ) 0U )
10002b0e:	b148      	cbz	r0, 10002b24 <vTaskDelay+0x18>
10002b10:	4604      	mov	r4, r0
            vTaskSuspendAll();
10002b12:	f7ff fe81 	bl	10002818 <vTaskSuspendAll>
                prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
10002b16:	2100      	movs	r1, #0
10002b18:	4620      	mov	r0, r4
10002b1a:	f7ff fe03 	bl	10002724 <prvAddCurrentTaskToDelayedList>
            xAlreadyYielded = xTaskResumeAll();
10002b1e:	f7ff ff5d 	bl	100029dc <xTaskResumeAll>
        if( xAlreadyYielded == pdFALSE )
10002b22:	b908      	cbnz	r0, 10002b28 <vTaskDelay+0x1c>
            taskYIELD_WITHIN_API();
10002b24:	f000 fd78 	bl	10003618 <vPortYield>
    }
10002b28:	bd10      	pop	{r4, pc}
	...

10002b2c <prvIdleTask>:
{
10002b2c:	b508      	push	{r3, lr}
10002b2e:	e003      	b.n	10002b38 <prvIdleTask+0xc>
            xExpectedIdleTime = prvGetExpectedIdleTime();
10002b30:	f7ff fc54 	bl	100023dc <prvGetExpectedIdleTime>
            if( xExpectedIdleTime >= ( TickType_t ) configEXPECTED_IDLE_TIME_BEFORE_SLEEP )
10002b34:	2801      	cmp	r0, #1
10002b36:	d808      	bhi.n	10002b4a <prvIdleTask+0x1e>
        prvCheckTasksWaitingTermination();
10002b38:	f7ff fdce 	bl	100026d8 <prvCheckTasksWaitingTermination>
            if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) configNUMBER_OF_CORES )
10002b3c:	4b08      	ldr	r3, [pc, #32]	; (10002b60 <prvIdleTask+0x34>)
10002b3e:	681b      	ldr	r3, [r3, #0]
10002b40:	2b01      	cmp	r3, #1
10002b42:	d9f5      	bls.n	10002b30 <prvIdleTask+0x4>
                taskYIELD();
10002b44:	f000 fd68 	bl	10003618 <vPortYield>
10002b48:	e7f2      	b.n	10002b30 <prvIdleTask+0x4>
                vTaskSuspendAll();
10002b4a:	f7ff fe65 	bl	10002818 <vTaskSuspendAll>
                    xExpectedIdleTime = prvGetExpectedIdleTime();
10002b4e:	f7ff fc45 	bl	100023dc <prvGetExpectedIdleTime>
                    if( xExpectedIdleTime >= ( TickType_t ) configEXPECTED_IDLE_TIME_BEFORE_SLEEP )
10002b52:	2801      	cmp	r0, #1
10002b54:	d901      	bls.n	10002b5a <prvIdleTask+0x2e>
                        portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime );
10002b56:	f000 fcb7 	bl	100034c8 <vPortSuppressTicksAndSleep>
                ( void ) xTaskResumeAll();
10002b5a:	f7ff ff3f 	bl	100029dc <xTaskResumeAll>
10002b5e:	e7eb      	b.n	10002b38 <prvIdleTask+0xc>
10002b60:	380085bc 	stmdacc	r0, {r2, r3, r4, r5, r7, r8, sl, pc}

10002b64 <vTaskSwitchContext>:
        if( uxSchedulerSuspended != ( UBaseType_t ) 0U )
10002b64:	4b1b      	ldr	r3, [pc, #108]	; (10002bd4 <vTaskSwitchContext+0x70>)
10002b66:	681b      	ldr	r3, [r3, #0]
10002b68:	b11b      	cbz	r3, 10002b72 <vTaskSwitchContext+0xe>
            xYieldPendings[ 0 ] = pdTRUE;
10002b6a:	4b1b      	ldr	r3, [pc, #108]	; (10002bd8 <vTaskSwitchContext+0x74>)
10002b6c:	2201      	movs	r2, #1
10002b6e:	601a      	str	r2, [r3, #0]
10002b70:	4770      	bx	lr
            xYieldPendings[ 0 ] = pdFALSE;
10002b72:	4b19      	ldr	r3, [pc, #100]	; (10002bd8 <vTaskSwitchContext+0x74>)
10002b74:	2200      	movs	r2, #0
10002b76:	601a      	str	r2, [r3, #0]
            taskSELECT_HIGHEST_PRIORITY_TASK();
10002b78:	4b18      	ldr	r3, [pc, #96]	; (10002bdc <vTaskSwitchContext+0x78>)
10002b7a:	681b      	ldr	r3, [r3, #0]
10002b7c:	e000      	b.n	10002b80 <vTaskSwitchContext+0x1c>
10002b7e:	3b01      	subs	r3, #1
10002b80:	ebc3 01c3 	rsb	r1, r3, r3, lsl #3
10002b84:	008a      	lsls	r2, r1, #2
10002b86:	4916      	ldr	r1, [pc, #88]	; (10002be0 <vTaskSwitchContext+0x7c>)
10002b88:	588a      	ldr	r2, [r1, r2]
10002b8a:	2a00      	cmp	r2, #0
10002b8c:	d0f7      	beq.n	10002b7e <vTaskSwitchContext+0x1a>
10002b8e:	ebc3 00c3 	rsb	r0, r3, r3, lsl #3
10002b92:	0082      	lsls	r2, r0, #2
10002b94:	440a      	add	r2, r1
10002b96:	6850      	ldr	r0, [r2, #4]
10002b98:	6840      	ldr	r0, [r0, #4]
10002b9a:	6050      	str	r0, [r2, #4]
10002b9c:	ebc3 0cc3 	rsb	ip, r3, r3, lsl #3
10002ba0:	ea4f 028c 	mov.w	r2, ip, lsl #2
10002ba4:	3208      	adds	r2, #8
10002ba6:	4411      	add	r1, r2
10002ba8:	4288      	cmp	r0, r1
10002baa:	d00c      	beq.n	10002bc6 <vTaskSwitchContext+0x62>
10002bac:	ebc3 02c3 	rsb	r2, r3, r3, lsl #3
10002bb0:	0091      	lsls	r1, r2, #2
10002bb2:	4a0b      	ldr	r2, [pc, #44]	; (10002be0 <vTaskSwitchContext+0x7c>)
10002bb4:	440a      	add	r2, r1
10002bb6:	6852      	ldr	r2, [r2, #4]
10002bb8:	68d1      	ldr	r1, [r2, #12]
10002bba:	4a0a      	ldr	r2, [pc, #40]	; (10002be4 <vTaskSwitchContext+0x80>)
10002bbc:	6011      	str	r1, [r2, #0]
10002bbe:	4907      	ldr	r1, [pc, #28]	; (10002bdc <vTaskSwitchContext+0x78>)
10002bc0:	600b      	str	r3, [r1, #0]
            portTASK_SWITCH_HOOK( pxCurrentTCB );
10002bc2:	6813      	ldr	r3, [r2, #0]
    }
10002bc4:	4770      	bx	lr
            taskSELECT_HIGHEST_PRIORITY_TASK();
10002bc6:	4662      	mov	r2, ip
10002bc8:	0091      	lsls	r1, r2, #2
10002bca:	4a05      	ldr	r2, [pc, #20]	; (10002be0 <vTaskSwitchContext+0x7c>)
10002bcc:	440a      	add	r2, r1
10002bce:	68d1      	ldr	r1, [r2, #12]
10002bd0:	6051      	str	r1, [r2, #4]
10002bd2:	e7eb      	b.n	10002bac <vTaskSwitchContext+0x48>
10002bd4:	38008850 	stmdacc	r0, {r4, r6, fp, pc}
10002bd8:	38008b98 	stmdacc	r0, {r3, r4, r7, r8, r9, fp, pc}
10002bdc:	38008a58 	stmdacc	r0, {r3, r4, r6, r9, fp, pc}
10002be0:	380085bc 	stmdacc	r0, {r2, r3, r4, r5, r7, r8, sl, pc}
10002be4:	380085b0 	stmdacc	r0, {r4, r5, r7, r8, sl, pc}

10002be8 <vTaskPlaceOnEventList>:
{
10002be8:	b510      	push	{r4, lr}
10002bea:	460c      	mov	r4, r1
    vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
10002bec:	4b04      	ldr	r3, [pc, #16]	; (10002c00 <vTaskPlaceOnEventList+0x18>)
10002bee:	6819      	ldr	r1, [r3, #0]
10002bf0:	3118      	adds	r1, #24
10002bf2:	f7ff f9ed 	bl	10001fd0 <vListInsert>
    prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
10002bf6:	2101      	movs	r1, #1
10002bf8:	4620      	mov	r0, r4
10002bfa:	f7ff fd93 	bl	10002724 <prvAddCurrentTaskToDelayedList>
}
10002bfe:	bd10      	pop	{r4, pc}
10002c00:	380085b0 	stmdacc	r0, {r4, r5, r7, r8, sl, pc}

10002c04 <vTaskPlaceOnEventListRestricted>:
    {
10002c04:	b570      	push	{r4, r5, r6, lr}
10002c06:	4603      	mov	r3, r0
10002c08:	4608      	mov	r0, r1
        listINSERT_END( pxEventList, &( pxCurrentTCB->xEventListItem ) );
10002c0a:	6859      	ldr	r1, [r3, #4]
10002c0c:	4c0b      	ldr	r4, [pc, #44]	; (10002c3c <vTaskPlaceOnEventListRestricted+0x38>)
10002c0e:	6825      	ldr	r5, [r4, #0]
10002c10:	61e9      	str	r1, [r5, #28]
10002c12:	6825      	ldr	r5, [r4, #0]
10002c14:	688e      	ldr	r6, [r1, #8]
10002c16:	622e      	str	r6, [r5, #32]
10002c18:	6825      	ldr	r5, [r4, #0]
10002c1a:	3518      	adds	r5, #24
10002c1c:	6075      	str	r5, [r6, #4]
10002c1e:	6825      	ldr	r5, [r4, #0]
10002c20:	3518      	adds	r5, #24
10002c22:	608d      	str	r5, [r1, #8]
10002c24:	6821      	ldr	r1, [r4, #0]
10002c26:	628b      	str	r3, [r1, #40]	; 0x28
10002c28:	6819      	ldr	r1, [r3, #0]
10002c2a:	3101      	adds	r1, #1
10002c2c:	6019      	str	r1, [r3, #0]
        if( xWaitIndefinitely != pdFALSE )
10002c2e:	4611      	mov	r1, r2
10002c30:	b10a      	cbz	r2, 10002c36 <vTaskPlaceOnEventListRestricted+0x32>
            xTicksToWait = portMAX_DELAY;
10002c32:	f04f 30ff 	mov.w	r0, #4294967295
        prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
10002c36:	f7ff fd75 	bl	10002724 <prvAddCurrentTaskToDelayedList>
    }
10002c3a:	bd70      	pop	{r4, r5, r6, pc}
10002c3c:	380085b0 	stmdacc	r0, {r4, r5, r7, r8, sl, pc}

10002c40 <xTaskRemoveFromEventList>:
{
10002c40:	b510      	push	{r4, lr}
    pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList );
10002c42:	68c3      	ldr	r3, [r0, #12]
10002c44:	68dc      	ldr	r4, [r3, #12]
    listREMOVE_ITEM( &( pxUnblockedTCB->xEventListItem ) );
10002c46:	6aa3      	ldr	r3, [r4, #40]	; 0x28
10002c48:	69e1      	ldr	r1, [r4, #28]
10002c4a:	6a22      	ldr	r2, [r4, #32]
10002c4c:	608a      	str	r2, [r1, #8]
10002c4e:	69e1      	ldr	r1, [r4, #28]
10002c50:	6051      	str	r1, [r2, #4]
10002c52:	685a      	ldr	r2, [r3, #4]
10002c54:	f104 0118 	add.w	r1, r4, #24
10002c58:	428a      	cmp	r2, r1
10002c5a:	d042      	beq.n	10002ce2 <xTaskRemoveFromEventList+0xa2>
10002c5c:	2200      	movs	r2, #0
10002c5e:	62a2      	str	r2, [r4, #40]	; 0x28
10002c60:	681a      	ldr	r2, [r3, #0]
10002c62:	3a01      	subs	r2, #1
10002c64:	601a      	str	r2, [r3, #0]
    if( uxSchedulerSuspended == ( UBaseType_t ) 0U )
10002c66:	4b29      	ldr	r3, [pc, #164]	; (10002d0c <xTaskRemoveFromEventList+0xcc>)
10002c68:	681b      	ldr	r3, [r3, #0]
10002c6a:	2b00      	cmp	r3, #0
10002c6c:	d13f      	bne.n	10002cee <xTaskRemoveFromEventList+0xae>
        listREMOVE_ITEM( &( pxUnblockedTCB->xStateListItem ) );
10002c6e:	6963      	ldr	r3, [r4, #20]
10002c70:	68a1      	ldr	r1, [r4, #8]
10002c72:	68e2      	ldr	r2, [r4, #12]
10002c74:	608a      	str	r2, [r1, #8]
10002c76:	68a1      	ldr	r1, [r4, #8]
10002c78:	6051      	str	r1, [r2, #4]
10002c7a:	685a      	ldr	r2, [r3, #4]
10002c7c:	1d21      	adds	r1, r4, #4
10002c7e:	428a      	cmp	r2, r1
10002c80:	d032      	beq.n	10002ce8 <xTaskRemoveFromEventList+0xa8>
10002c82:	2200      	movs	r2, #0
10002c84:	6162      	str	r2, [r4, #20]
10002c86:	681a      	ldr	r2, [r3, #0]
10002c88:	3a01      	subs	r2, #1
10002c8a:	601a      	str	r2, [r3, #0]
        prvAddTaskToReadyList( pxUnblockedTCB );
10002c8c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
10002c8e:	4a20      	ldr	r2, [pc, #128]	; (10002d10 <xTaskRemoveFromEventList+0xd0>)
10002c90:	6812      	ldr	r2, [r2, #0]
10002c92:	4293      	cmp	r3, r2
10002c94:	d901      	bls.n	10002c9a <xTaskRemoveFromEventList+0x5a>
10002c96:	4a1e      	ldr	r2, [pc, #120]	; (10002d10 <xTaskRemoveFromEventList+0xd0>)
10002c98:	6013      	str	r3, [r2, #0]
10002c9a:	4a1e      	ldr	r2, [pc, #120]	; (10002d14 <xTaskRemoveFromEventList+0xd4>)
10002c9c:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
10002ca0:	eb02 0383 	add.w	r3, r2, r3, lsl #2
10002ca4:	685b      	ldr	r3, [r3, #4]
10002ca6:	60a3      	str	r3, [r4, #8]
10002ca8:	6898      	ldr	r0, [r3, #8]
10002caa:	60e0      	str	r0, [r4, #12]
10002cac:	6041      	str	r1, [r0, #4]
10002cae:	6099      	str	r1, [r3, #8]
10002cb0:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
10002cb2:	ebc3 01c3 	rsb	r1, r3, r3, lsl #3
10002cb6:	eb02 0081 	add.w	r0, r2, r1, lsl #2
10002cba:	6160      	str	r0, [r4, #20]
10002cbc:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
10002cc0:	3101      	adds	r1, #1
10002cc2:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
10002cc6:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
            prvResetNextTaskUnblockTime();
10002cca:	f7ff fba7 	bl	1000241c <prvResetNextTaskUnblockTime>
        if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
10002cce:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
10002cd0:	4b11      	ldr	r3, [pc, #68]	; (10002d18 <xTaskRemoveFromEventList+0xd8>)
10002cd2:	681b      	ldr	r3, [r3, #0]
10002cd4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
10002cd6:	429a      	cmp	r2, r3
10002cd8:	d915      	bls.n	10002d06 <xTaskRemoveFromEventList+0xc6>
            xYieldPendings[ 0 ] = pdTRUE;
10002cda:	2001      	movs	r0, #1
10002cdc:	4b0f      	ldr	r3, [pc, #60]	; (10002d1c <xTaskRemoveFromEventList+0xdc>)
10002cde:	6018      	str	r0, [r3, #0]
}
10002ce0:	bd10      	pop	{r4, pc}
    listREMOVE_ITEM( &( pxUnblockedTCB->xEventListItem ) );
10002ce2:	6a22      	ldr	r2, [r4, #32]
10002ce4:	605a      	str	r2, [r3, #4]
10002ce6:	e7b9      	b.n	10002c5c <xTaskRemoveFromEventList+0x1c>
        listREMOVE_ITEM( &( pxUnblockedTCB->xStateListItem ) );
10002ce8:	68e2      	ldr	r2, [r4, #12]
10002cea:	605a      	str	r2, [r3, #4]
10002cec:	e7c9      	b.n	10002c82 <xTaskRemoveFromEventList+0x42>
        listINSERT_END( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
10002cee:	4b0c      	ldr	r3, [pc, #48]	; (10002d20 <xTaskRemoveFromEventList+0xe0>)
10002cf0:	685a      	ldr	r2, [r3, #4]
10002cf2:	61e2      	str	r2, [r4, #28]
10002cf4:	6890      	ldr	r0, [r2, #8]
10002cf6:	6220      	str	r0, [r4, #32]
10002cf8:	6041      	str	r1, [r0, #4]
10002cfa:	6091      	str	r1, [r2, #8]
10002cfc:	62a3      	str	r3, [r4, #40]	; 0x28
10002cfe:	681a      	ldr	r2, [r3, #0]
10002d00:	3201      	adds	r2, #1
10002d02:	601a      	str	r2, [r3, #0]
10002d04:	e7e3      	b.n	10002cce <xTaskRemoveFromEventList+0x8e>
            xReturn = pdFALSE;
10002d06:	2000      	movs	r0, #0
    return xReturn;
10002d08:	e7ea      	b.n	10002ce0 <xTaskRemoveFromEventList+0xa0>
10002d0a:	bf00      	nop
10002d0c:	38008850 	stmdacc	r0, {r4, r6, fp, pc}
10002d10:	38008a58 	stmdacc	r0, {r3, r4, r6, r9, fp, pc}
10002d14:	380085bc 	stmdacc	r0, {r2, r3, r4, r5, r7, r8, sl, pc}
10002d18:	380085b0 	stmdacc	r0, {r4, r5, r7, r8, sl, pc}
10002d1c:	38008b98 	stmdacc	r0, {r3, r4, r7, r8, r9, fp, pc}
10002d20:	38008af0 	stmdacc	r0, {r4, r5, r6, r7, r9, fp, pc}

10002d24 <vTaskInternalSetTimeOutState>:
    pxTimeOut->xOverflowCount = xNumOfOverflows;
10002d24:	4b03      	ldr	r3, [pc, #12]	; (10002d34 <vTaskInternalSetTimeOutState+0x10>)
10002d26:	681b      	ldr	r3, [r3, #0]
10002d28:	6003      	str	r3, [r0, #0]
    pxTimeOut->xTimeOnEntering = xTickCount;
10002d2a:	4b03      	ldr	r3, [pc, #12]	; (10002d38 <vTaskInternalSetTimeOutState+0x14>)
10002d2c:	681b      	ldr	r3, [r3, #0]
10002d2e:	6043      	str	r3, [r0, #4]
}
10002d30:	4770      	bx	lr
10002d32:	bf00      	nop
10002d34:	38008ae8 	stmdacc	r0, {r3, r5, r6, r7, r9, fp, pc}
10002d38:	38008b48 	stmdacc	r0, {r3, r6, r8, r9, fp, pc}

10002d3c <xTaskCheckForTimeOut>:
{
10002d3c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10002d3e:	4604      	mov	r4, r0
10002d40:	460d      	mov	r5, r1
    taskENTER_CRITICAL();
10002d42:	f000 fc75 	bl	10003630 <vPortEnterCritical>
        const TickType_t xConstTickCount = xTickCount;
10002d46:	4b19      	ldr	r3, [pc, #100]	; (10002dac <xTaskCheckForTimeOut+0x70>)
10002d48:	681a      	ldr	r2, [r3, #0]
        const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
10002d4a:	6863      	ldr	r3, [r4, #4]
10002d4c:	1ad0      	subs	r0, r2, r3
            if( pxCurrentTCB->ucDelayAborted != ( uint8_t ) pdFALSE )
10002d4e:	4918      	ldr	r1, [pc, #96]	; (10002db0 <xTaskCheckForTimeOut+0x74>)
10002d50:	6809      	ldr	r1, [r1, #0]
10002d52:	f891 104a 	ldrb.w	r1, [r1, #74]	; 0x4a
10002d56:	b149      	cbz	r1, 10002d6c <xTaskCheckForTimeOut+0x30>
                pxCurrentTCB->ucDelayAborted = ( uint8_t ) pdFALSE;
10002d58:	4b15      	ldr	r3, [pc, #84]	; (10002db0 <xTaskCheckForTimeOut+0x74>)
10002d5a:	681b      	ldr	r3, [r3, #0]
10002d5c:	2200      	movs	r2, #0
10002d5e:	f883 204a 	strb.w	r2, [r3, #74]	; 0x4a
                xReturn = pdTRUE;
10002d62:	2401      	movs	r4, #1
    taskEXIT_CRITICAL();
10002d64:	f000 fc72 	bl	1000364c <vPortExitCritical>
}
10002d68:	4620      	mov	r0, r4
10002d6a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
            if( *pxTicksToWait == portMAX_DELAY )
10002d6c:	6829      	ldr	r1, [r5, #0]
10002d6e:	f1b1 3fff 	cmp.w	r1, #4294967295
10002d72:	d018      	beq.n	10002da6 <xTaskCheckForTimeOut+0x6a>
        if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) )
10002d74:	4e0f      	ldr	r6, [pc, #60]	; (10002db4 <xTaskCheckForTimeOut+0x78>)
10002d76:	6836      	ldr	r6, [r6, #0]
10002d78:	6827      	ldr	r7, [r4, #0]
10002d7a:	42b7      	cmp	r7, r6
10002d7c:	d005      	beq.n	10002d8a <xTaskCheckForTimeOut+0x4e>
10002d7e:	4293      	cmp	r3, r2
10002d80:	d803      	bhi.n	10002d8a <xTaskCheckForTimeOut+0x4e>
            *pxTicksToWait = ( TickType_t ) 0;
10002d82:	2300      	movs	r3, #0
10002d84:	602b      	str	r3, [r5, #0]
            xReturn = pdTRUE;
10002d86:	2401      	movs	r4, #1
            *pxTicksToWait = ( TickType_t ) 0;
10002d88:	e7ec      	b.n	10002d64 <xTaskCheckForTimeOut+0x28>
        else if( xElapsedTime < *pxTicksToWait )
10002d8a:	4281      	cmp	r1, r0
10002d8c:	d803      	bhi.n	10002d96 <xTaskCheckForTimeOut+0x5a>
            *pxTicksToWait = ( TickType_t ) 0;
10002d8e:	2300      	movs	r3, #0
10002d90:	602b      	str	r3, [r5, #0]
            xReturn = pdTRUE;
10002d92:	2401      	movs	r4, #1
10002d94:	e7e6      	b.n	10002d64 <xTaskCheckForTimeOut+0x28>
            *pxTicksToWait -= xElapsedTime;
10002d96:	1a9b      	subs	r3, r3, r2
10002d98:	440b      	add	r3, r1
10002d9a:	602b      	str	r3, [r5, #0]
            vTaskInternalSetTimeOutState( pxTimeOut );
10002d9c:	4620      	mov	r0, r4
10002d9e:	f7ff ffc1 	bl	10002d24 <vTaskInternalSetTimeOutState>
            xReturn = pdFALSE;
10002da2:	2400      	movs	r4, #0
10002da4:	e7de      	b.n	10002d64 <xTaskCheckForTimeOut+0x28>
                xReturn = pdFALSE;
10002da6:	2400      	movs	r4, #0
10002da8:	e7dc      	b.n	10002d64 <xTaskCheckForTimeOut+0x28>
10002daa:	bf00      	nop
10002dac:	38008b48 	stmdacc	r0, {r3, r6, r8, r9, fp, pc}
10002db0:	380085b0 	stmdacc	r0, {r4, r5, r7, r8, sl, pc}
10002db4:	38008ae8 	stmdacc	r0, {r3, r5, r6, r7, r9, fp, pc}

10002db8 <vTaskMissedYield>:
    xYieldPendings[ portGET_CORE_ID() ] = pdTRUE;
10002db8:	4b01      	ldr	r3, [pc, #4]	; (10002dc0 <vTaskMissedYield+0x8>)
10002dba:	2201      	movs	r2, #1
10002dbc:	601a      	str	r2, [r3, #0]
}
10002dbe:	4770      	bx	lr
10002dc0:	38008b98 	stmdacc	r0, {r3, r4, r7, r8, r9, fp, pc}

10002dc4 <eTaskConfirmSleepModeStatus>:
        if( listCURRENT_LIST_LENGTH( &xPendingReadyList ) != 0U )
10002dc4:	4b0c      	ldr	r3, [pc, #48]	; (10002df8 <eTaskConfirmSleepModeStatus+0x34>)
10002dc6:	681b      	ldr	r3, [r3, #0]
10002dc8:	b973      	cbnz	r3, 10002de8 <eTaskConfirmSleepModeStatus+0x24>
        else if( xYieldPendings[ portGET_CORE_ID() ] != pdFALSE )
10002dca:	4b0c      	ldr	r3, [pc, #48]	; (10002dfc <eTaskConfirmSleepModeStatus+0x38>)
10002dcc:	681b      	ldr	r3, [r3, #0]
10002dce:	b96b      	cbnz	r3, 10002dec <eTaskConfirmSleepModeStatus+0x28>
        else if( xPendedTicks != 0U )
10002dd0:	4b0b      	ldr	r3, [pc, #44]	; (10002e00 <eTaskConfirmSleepModeStatus+0x3c>)
10002dd2:	681b      	ldr	r3, [r3, #0]
10002dd4:	b963      	cbnz	r3, 10002df0 <eTaskConfirmSleepModeStatus+0x2c>
            else if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList ) == ( uxCurrentNumberOfTasks - uxNonApplicationTasks ) )
10002dd6:	4b0b      	ldr	r3, [pc, #44]	; (10002e04 <eTaskConfirmSleepModeStatus+0x40>)
10002dd8:	681a      	ldr	r2, [r3, #0]
10002dda:	4b0b      	ldr	r3, [pc, #44]	; (10002e08 <eTaskConfirmSleepModeStatus+0x44>)
10002ddc:	681b      	ldr	r3, [r3, #0]
10002dde:	3b01      	subs	r3, #1
10002de0:	429a      	cmp	r2, r3
10002de2:	d007      	beq.n	10002df4 <eTaskConfirmSleepModeStatus+0x30>
        eSleepModeStatus eReturn = eStandardSleep;
10002de4:	2001      	movs	r0, #1
10002de6:	4770      	bx	lr
            eReturn = eAbortSleep;
10002de8:	2000      	movs	r0, #0
10002dea:	4770      	bx	lr
            eReturn = eAbortSleep;
10002dec:	2000      	movs	r0, #0
10002dee:	4770      	bx	lr
            eReturn = eAbortSleep;
10002df0:	2000      	movs	r0, #0
10002df2:	4770      	bx	lr
                eReturn = eNoTasksWaitingTimeout;
10002df4:	2002      	movs	r0, #2
    }
10002df6:	4770      	bx	lr
10002df8:	38008af0 	stmdacc	r0, {r4, r5, r6, r7, r9, fp, pc}
10002dfc:	38008b98 	stmdacc	r0, {r3, r4, r7, r8, r9, fp, pc}
10002e00:	38008aec 	stmdacc	r0, {r2, r3, r5, r6, r7, r9, fp, pc}
10002e04:	38008b10 	stmdacc	r0, {r4, r8, r9, fp, pc}
10002e08:	38008648 	stmdacc	r0, {r3, r6, r9, sl, pc}

10002e0c <xTaskPriorityDisinherit>:
        if( pxMutexHolder != NULL )
10002e0c:	2800      	cmp	r0, #0
10002e0e:	d034      	beq.n	10002e7a <xTaskPriorityDisinherit+0x6e>
    {
10002e10:	b538      	push	{r3, r4, r5, lr}
10002e12:	4604      	mov	r4, r0
            ( pxTCB->uxMutexesHeld )--;
10002e14:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
10002e16:	3b01      	subs	r3, #1
10002e18:	63c3      	str	r3, [r0, #60]	; 0x3c
            if( pxTCB->uxPriority != pxTCB->uxBasePriority )
10002e1a:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
10002e1c:	6b82      	ldr	r2, [r0, #56]	; 0x38
10002e1e:	4291      	cmp	r1, r2
10002e20:	d02d      	beq.n	10002e7e <xTaskPriorityDisinherit+0x72>
                if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
10002e22:	b10b      	cbz	r3, 10002e28 <xTaskPriorityDisinherit+0x1c>
        BaseType_t xReturn = pdFALSE;
10002e24:	2000      	movs	r0, #0
    }
10002e26:	bd38      	pop	{r3, r4, r5, pc}
                    if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
10002e28:	1d05      	adds	r5, r0, #4
10002e2a:	4628      	mov	r0, r5
10002e2c:	f7ff f8e9 	bl	10002002 <uxListRemove>
                    pxTCB->uxPriority = pxTCB->uxBasePriority;
10002e30:	6ba3      	ldr	r3, [r4, #56]	; 0x38
10002e32:	62e3      	str	r3, [r4, #44]	; 0x2c
                    listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority );
10002e34:	f1c3 0205 	rsb	r2, r3, #5
10002e38:	61a2      	str	r2, [r4, #24]
                    prvAddTaskToReadyList( pxTCB );
10002e3a:	4a12      	ldr	r2, [pc, #72]	; (10002e84 <xTaskPriorityDisinherit+0x78>)
10002e3c:	6812      	ldr	r2, [r2, #0]
10002e3e:	4293      	cmp	r3, r2
10002e40:	d901      	bls.n	10002e46 <xTaskPriorityDisinherit+0x3a>
10002e42:	4a10      	ldr	r2, [pc, #64]	; (10002e84 <xTaskPriorityDisinherit+0x78>)
10002e44:	6013      	str	r3, [r2, #0]
10002e46:	4a10      	ldr	r2, [pc, #64]	; (10002e88 <xTaskPriorityDisinherit+0x7c>)
10002e48:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
10002e4c:	eb02 0383 	add.w	r3, r2, r3, lsl #2
10002e50:	685b      	ldr	r3, [r3, #4]
10002e52:	60a3      	str	r3, [r4, #8]
10002e54:	6899      	ldr	r1, [r3, #8]
10002e56:	60e1      	str	r1, [r4, #12]
10002e58:	604d      	str	r5, [r1, #4]
10002e5a:	609d      	str	r5, [r3, #8]
10002e5c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
10002e5e:	ebc3 01c3 	rsb	r1, r3, r3, lsl #3
10002e62:	eb02 0081 	add.w	r0, r2, r1, lsl #2
10002e66:	6160      	str	r0, [r4, #20]
10002e68:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
10002e6c:	3101      	adds	r1, #1
10002e6e:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
10002e72:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
                    xReturn = pdTRUE;
10002e76:	2001      	movs	r0, #1
10002e78:	e7d5      	b.n	10002e26 <xTaskPriorityDisinherit+0x1a>
        BaseType_t xReturn = pdFALSE;
10002e7a:	2000      	movs	r0, #0
    }
10002e7c:	4770      	bx	lr
        BaseType_t xReturn = pdFALSE;
10002e7e:	2000      	movs	r0, #0
10002e80:	e7d1      	b.n	10002e26 <xTaskPriorityDisinherit+0x1a>
10002e82:	bf00      	nop
10002e84:	38008a58 	stmdacc	r0, {r3, r4, r6, r9, fp, pc}
10002e88:	380085bc 	stmdacc	r0, {r2, r3, r4, r5, r7, r8, sl, pc}

10002e8c <vApplicationGetIdleTaskMemory>:
                                        configSTACK_DEPTH_TYPE * puxIdleTaskStackSize )
    {
        static StaticTask_t xIdleTaskTCB;
        static StackType_t uxIdleTaskStack[ configMINIMAL_STACK_SIZE ];

        *ppxIdleTaskTCBBuffer = &( xIdleTaskTCB );
10002e8c:	4b03      	ldr	r3, [pc, #12]	; (10002e9c <vApplicationGetIdleTaskMemory+0x10>)
10002e8e:	6003      	str	r3, [r0, #0]
        *ppxIdleTaskStackBuffer = &( uxIdleTaskStack[ 0 ] );
10002e90:	4b03      	ldr	r3, [pc, #12]	; (10002ea0 <vApplicationGetIdleTaskMemory+0x14>)
10002e92:	600b      	str	r3, [r1, #0]
        *puxIdleTaskStackSize = configMINIMAL_STACK_SIZE;
10002e94:	2380      	movs	r3, #128	; 0x80
10002e96:	6013      	str	r3, [r2, #0]
    }
10002e98:	4770      	bx	lr
10002e9a:	bf00      	nop
10002e9c:	38008a98 	stmdacc	r0, {r3, r4, r7, r9, fp, pc}
10002ea0:	38008650 	stmdacc	r0, {r4, r6, r9, sl, pc}

10002ea4 <prvCreateIdleTasks>:
{
10002ea4:	b530      	push	{r4, r5, lr}
10002ea6:	b089      	sub	sp, #36	; 0x24
    for( xIdleTaskNameIndex = ( BaseType_t ) 0; xIdleTaskNameIndex < ( BaseType_t ) configMAX_TASK_NAME_LEN; xIdleTaskNameIndex++ )
10002ea8:	2300      	movs	r3, #0
10002eaa:	2b03      	cmp	r3, #3
10002eac:	dc09      	bgt.n	10002ec2 <prvCreateIdleTasks+0x1e>
        cIdleName[ xIdleTaskNameIndex ] = configIDLE_TASK_NAME[ xIdleTaskNameIndex ];
10002eae:	4a15      	ldr	r2, [pc, #84]	; (10002f04 <prvCreateIdleTasks+0x60>)
10002eb0:	5cd2      	ldrb	r2, [r2, r3]
10002eb2:	f103 0120 	add.w	r1, r3, #32
10002eb6:	4469      	add	r1, sp
10002eb8:	f801 2c04 	strb.w	r2, [r1, #-4]
        if( cIdleName[ xIdleTaskNameIndex ] == ( char ) 0x00 )
10002ebc:	b10a      	cbz	r2, 10002ec2 <prvCreateIdleTasks+0x1e>
    for( xIdleTaskNameIndex = ( BaseType_t ) 0; xIdleTaskNameIndex < ( BaseType_t ) configMAX_TASK_NAME_LEN; xIdleTaskNameIndex++ )
10002ebe:	3301      	adds	r3, #1
10002ec0:	e7f3      	b.n	10002eaa <prvCreateIdleTasks+0x6>
10002ec2:	2400      	movs	r4, #0
    for( xCoreID = ( BaseType_t ) 0; xCoreID < ( BaseType_t ) configNUMBER_OF_CORES; xCoreID++ )
10002ec4:	2c00      	cmp	r4, #0
10002ec6:	dd02      	ble.n	10002ece <prvCreateIdleTasks+0x2a>
10002ec8:	2001      	movs	r0, #1
}
10002eca:	b009      	add	sp, #36	; 0x24
10002ecc:	bd30      	pop	{r4, r5, pc}
            StaticTask_t * pxIdleTaskTCBBuffer = NULL;
10002ece:	2500      	movs	r5, #0
10002ed0:	9504      	str	r5, [sp, #16]
            StackType_t * pxIdleTaskStackBuffer = NULL;
10002ed2:	9505      	str	r5, [sp, #20]
                vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &uxIdleTaskStackSize );
10002ed4:	aa06      	add	r2, sp, #24
10002ed6:	a905      	add	r1, sp, #20
10002ed8:	a804      	add	r0, sp, #16
10002eda:	f7ff ffd7 	bl	10002e8c <vApplicationGetIdleTaskMemory>
            xIdleTaskHandles[ xCoreID ] = xTaskCreateStatic( pxIdleTaskFunction,
10002ede:	9b04      	ldr	r3, [sp, #16]
10002ee0:	9302      	str	r3, [sp, #8]
10002ee2:	9b05      	ldr	r3, [sp, #20]
10002ee4:	9301      	str	r3, [sp, #4]
10002ee6:	9500      	str	r5, [sp, #0]
10002ee8:	462b      	mov	r3, r5
10002eea:	9a06      	ldr	r2, [sp, #24]
10002eec:	a907      	add	r1, sp, #28
10002eee:	4806      	ldr	r0, [pc, #24]	; (10002f08 <prvCreateIdleTasks+0x64>)
10002ef0:	f7ff fc6c 	bl	100027cc <xTaskCreateStatic>
10002ef4:	4b05      	ldr	r3, [pc, #20]	; (10002f0c <prvCreateIdleTasks+0x68>)
10002ef6:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
            if( xIdleTaskHandles[ xCoreID ] != NULL )
10002efa:	b108      	cbz	r0, 10002f00 <prvCreateIdleTasks+0x5c>
    for( xCoreID = ( BaseType_t ) 0; xCoreID < ( BaseType_t ) configNUMBER_OF_CORES; xCoreID++ )
10002efc:	3401      	adds	r4, #1
10002efe:	e7e1      	b.n	10002ec4 <prvCreateIdleTasks+0x20>
                xReturn = pdFAIL;
10002f00:	2000      	movs	r0, #0
10002f02:	e7e2      	b.n	10002eca <prvCreateIdleTasks+0x26>
10002f04:	10005d88 	andne	r5, r0, r8, lsl #27
10002f08:	10002b2d 	andne	r2, r0, sp, lsr #22
10002f0c:	38008a94 	stmdacc	r0, {r2, r4, r7, r9, fp, pc}

10002f10 <vTaskStartScheduler>:
{
10002f10:	b508      	push	{r3, lr}
    xReturn = prvCreateIdleTasks();
10002f12:	f7ff ffc7 	bl	10002ea4 <prvCreateIdleTasks>
        if( xReturn == pdPASS )
10002f16:	2801      	cmp	r0, #1
10002f18:	d004      	beq.n	10002f24 <vTaskStartScheduler+0x14>
    if( xReturn == pdPASS )
10002f1a:	2801      	cmp	r0, #1
10002f1c:	d005      	beq.n	10002f2a <vTaskStartScheduler+0x1a>
    ( void ) uxTopUsedPriority;
10002f1e:	4b0a      	ldr	r3, [pc, #40]	; (10002f48 <vTaskStartScheduler+0x38>)
10002f20:	681b      	ldr	r3, [r3, #0]
}
10002f22:	bd08      	pop	{r3, pc}
            xReturn = xTimerCreateTimerTask();
10002f24:	f000 f9a6 	bl	10003274 <xTimerCreateTimerTask>
10002f28:	e7f7      	b.n	10002f1a <vTaskStartScheduler+0xa>
        portDISABLE_INTERRUPTS();
10002f2a:	f000 fc47 	bl	100037bc <ulSetInterruptMask>
        xNextTaskUnblockTime = portMAX_DELAY;
10002f2e:	4b07      	ldr	r3, [pc, #28]	; (10002f4c <vTaskStartScheduler+0x3c>)
10002f30:	f04f 32ff 	mov.w	r2, #4294967295
10002f34:	601a      	str	r2, [r3, #0]
        xSchedulerRunning = pdTRUE;
10002f36:	4b06      	ldr	r3, [pc, #24]	; (10002f50 <vTaskStartScheduler+0x40>)
10002f38:	2201      	movs	r2, #1
10002f3a:	601a      	str	r2, [r3, #0]
        xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
10002f3c:	4b05      	ldr	r3, [pc, #20]	; (10002f54 <vTaskStartScheduler+0x44>)
10002f3e:	2200      	movs	r2, #0
10002f40:	601a      	str	r2, [r3, #0]
        ( void ) xPortStartScheduler();
10002f42:	f000 fbf5 	bl	10003730 <xPortStartScheduler>
10002f46:	e7ea      	b.n	10002f1e <vTaskStartScheduler+0xe>
10002f48:	38000004 	stmdacc	r0, {r2}
10002f4c:	38008ae4 	stmdacc	r0, {r2, r5, r6, r7, r9, fp, pc}
10002f50:	38008b0c 	stmdacc	r0, {r2, r3, r8, r9, fp, pc}
10002f54:	38008b48 	stmdacc	r0, {r3, r6, r8, r9, fp, pc}

10002f58 <vApplicationGetTimerTaskMemory>:
                                         configSTACK_DEPTH_TYPE * puxTimerTaskStackSize )
    {
        static StaticTask_t xTimerTaskTCB;
        static StackType_t uxTimerTaskStack[ configTIMER_TASK_STACK_DEPTH ];

        *ppxTimerTaskTCBBuffer = &( xTimerTaskTCB );
10002f58:	4b03      	ldr	r3, [pc, #12]	; (10002f68 <vApplicationGetTimerTaskMemory+0x10>)
10002f5a:	6003      	str	r3, [r0, #0]
        *ppxTimerTaskStackBuffer = &( uxTimerTaskStack[ 0 ] );
10002f5c:	4b03      	ldr	r3, [pc, #12]	; (10002f6c <vApplicationGetTimerTaskMemory+0x14>)
10002f5e:	600b      	str	r3, [r1, #0]
        *puxTimerTaskStackSize = configTIMER_TASK_STACK_DEPTH;
10002f60:	2380      	movs	r3, #128	; 0x80
10002f62:	6013      	str	r3, [r2, #0]
    }
10002f64:	4770      	bx	lr
10002f66:	bf00      	nop
10002f68:	38008b4c 	stmdacc	r0, {r2, r3, r6, r8, r9, fp, pc}
10002f6c:	38008858 	stmdacc	r0, {r3, r4, r6, fp, pc}

10002f70 <prvGetNextExpireTime>:
         * the timer with the nearest expiry time will expire.  If there are no
         * active timers then just set the next expire time to 0.  That will cause
         * this task to unblock when the tick count overflows, at which point the
         * timer lists will be switched and the next expiry time can be
         * re-assessed.  */
        *pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
10002f70:	4b06      	ldr	r3, [pc, #24]	; (10002f8c <prvGetNextExpireTime+0x1c>)
10002f72:	681a      	ldr	r2, [r3, #0]
10002f74:	6813      	ldr	r3, [r2, #0]
10002f76:	b92b      	cbnz	r3, 10002f84 <prvGetNextExpireTime+0x14>
10002f78:	2301      	movs	r3, #1
10002f7a:	6003      	str	r3, [r0, #0]

        if( *pxListWasEmpty == pdFALSE )
10002f7c:	b923      	cbnz	r3, 10002f88 <prvGetNextExpireTime+0x18>
        {
            xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
10002f7e:	68d3      	ldr	r3, [r2, #12]
10002f80:	6818      	ldr	r0, [r3, #0]
10002f82:	4770      	bx	lr
        *pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
10002f84:	2300      	movs	r3, #0
10002f86:	e7f8      	b.n	10002f7a <prvGetNextExpireTime+0xa>
        }
        else
        {
            /* Ensure the task unblocks when the tick count rolls over. */
            xNextExpireTime = ( TickType_t ) 0U;
10002f88:	2000      	movs	r0, #0
        }

        return xNextExpireTime;
    }
10002f8a:	4770      	bx	lr
10002f8c:	38008b9c 	stmdacc	r0, {r2, r3, r4, r7, r8, r9, fp, pc}

10002f90 <prvInsertTimerInActiveList>:

    static BaseType_t prvInsertTimerInActiveList( Timer_t * const pxTimer,
                                                  const TickType_t xNextExpiryTime,
                                                  const TickType_t xTimeNow,
                                                  const TickType_t xCommandTime )
    {
10002f90:	b508      	push	{r3, lr}
        BaseType_t xProcessTimerNow = pdFALSE;

        listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
10002f92:	6041      	str	r1, [r0, #4]
        listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
10002f94:	6100      	str	r0, [r0, #16]

        if( xNextExpiryTime <= xTimeNow )
10002f96:	4291      	cmp	r1, r2
10002f98:	d80c      	bhi.n	10002fb4 <prvInsertTimerInActiveList+0x24>
        {
            /* Has the expiry time elapsed between the command to start/reset a
             * timer was issued, and the time the command was processed? */
            if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks )
10002f9a:	1ad2      	subs	r2, r2, r3
10002f9c:	6983      	ldr	r3, [r0, #24]
10002f9e:	429a      	cmp	r2, r3
10002fa0:	d301      	bcc.n	10002fa6 <prvInsertTimerInActiveList+0x16>
            {
                /* The time between a command being issued and the command being
                 * processed actually exceeds the timers period.  */
                xProcessTimerNow = pdTRUE;
10002fa2:	2001      	movs	r0, #1
                vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
            }
        }

        return xProcessTimerNow;
    }
10002fa4:	bd08      	pop	{r3, pc}
                vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
10002fa6:	1d01      	adds	r1, r0, #4
10002fa8:	4b09      	ldr	r3, [pc, #36]	; (10002fd0 <prvInsertTimerInActiveList+0x40>)
10002faa:	6818      	ldr	r0, [r3, #0]
10002fac:	f7ff f810 	bl	10001fd0 <vListInsert>
        BaseType_t xProcessTimerNow = pdFALSE;
10002fb0:	2000      	movs	r0, #0
10002fb2:	e7f7      	b.n	10002fa4 <prvInsertTimerInActiveList+0x14>
            if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
10002fb4:	429a      	cmp	r2, r3
10002fb6:	d201      	bcs.n	10002fbc <prvInsertTimerInActiveList+0x2c>
10002fb8:	4299      	cmp	r1, r3
10002fba:	d206      	bcs.n	10002fca <prvInsertTimerInActiveList+0x3a>
                vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
10002fbc:	1d01      	adds	r1, r0, #4
10002fbe:	4b05      	ldr	r3, [pc, #20]	; (10002fd4 <prvInsertTimerInActiveList+0x44>)
10002fc0:	6818      	ldr	r0, [r3, #0]
10002fc2:	f7ff f805 	bl	10001fd0 <vListInsert>
        BaseType_t xProcessTimerNow = pdFALSE;
10002fc6:	2000      	movs	r0, #0
10002fc8:	e7ec      	b.n	10002fa4 <prvInsertTimerInActiveList+0x14>
                xProcessTimerNow = pdTRUE;
10002fca:	2001      	movs	r0, #1
        return xProcessTimerNow;
10002fcc:	e7ea      	b.n	10002fa4 <prvInsertTimerInActiveList+0x14>
10002fce:	bf00      	nop
10002fd0:	38008ba0 	stmdacc	r0, {r5, r7, r8, r9, fp, pc}
10002fd4:	38008b9c 	stmdacc	r0, {r2, r3, r4, r7, r8, r9, fp, pc}

10002fd8 <prvReloadTimer>:
    {
10002fd8:	b570      	push	{r4, r5, r6, lr}
10002fda:	4604      	mov	r4, r0
10002fdc:	460d      	mov	r5, r1
10002fde:	4616      	mov	r6, r2
        while( prvInsertTimerInActiveList( pxTimer, ( xExpiredTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xExpiredTime ) != pdFALSE )
10002fe0:	e004      	b.n	10002fec <prvReloadTimer+0x14>
            xExpiredTime += pxTimer->xTimerPeriodInTicks;
10002fe2:	69a3      	ldr	r3, [r4, #24]
10002fe4:	441d      	add	r5, r3
            pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
10002fe6:	6a23      	ldr	r3, [r4, #32]
10002fe8:	4620      	mov	r0, r4
10002fea:	4798      	blx	r3
        while( prvInsertTimerInActiveList( pxTimer, ( xExpiredTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xExpiredTime ) != pdFALSE )
10002fec:	69a1      	ldr	r1, [r4, #24]
10002fee:	462b      	mov	r3, r5
10002ff0:	4632      	mov	r2, r6
10002ff2:	4429      	add	r1, r5
10002ff4:	4620      	mov	r0, r4
10002ff6:	f7ff ffcb 	bl	10002f90 <prvInsertTimerInActiveList>
10002ffa:	2800      	cmp	r0, #0
10002ffc:	d1f1      	bne.n	10002fe2 <prvReloadTimer+0xa>
    }
10002ffe:	bd70      	pop	{r4, r5, r6, pc}

10003000 <prvProcessExpiredTimer>:
    {
10003000:	b570      	push	{r4, r5, r6, lr}
10003002:	4605      	mov	r5, r0
10003004:	460e      	mov	r6, r1
        Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList );
10003006:	4b0d      	ldr	r3, [pc, #52]	; (1000303c <prvProcessExpiredTimer+0x3c>)
10003008:	681b      	ldr	r3, [r3, #0]
1000300a:	68db      	ldr	r3, [r3, #12]
1000300c:	68dc      	ldr	r4, [r3, #12]
        ( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
1000300e:	1d20      	adds	r0, r4, #4
10003010:	f7fe fff7 	bl	10002002 <uxListRemove>
        if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0U )
10003014:	f894 3024 	ldrb.w	r3, [r4, #36]	; 0x24
10003018:	f013 0f04 	tst.w	r3, #4
1000301c:	d107      	bne.n	1000302e <prvProcessExpiredTimer+0x2e>
            pxTimer->ucStatus &= ( ( uint8_t ) ~tmrSTATUS_IS_ACTIVE );
1000301e:	f023 0301 	bic.w	r3, r3, #1
10003022:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
        pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
10003026:	6a23      	ldr	r3, [r4, #32]
10003028:	4620      	mov	r0, r4
1000302a:	4798      	blx	r3
    }
1000302c:	bd70      	pop	{r4, r5, r6, pc}
            prvReloadTimer( pxTimer, xNextExpireTime, xTimeNow );
1000302e:	4632      	mov	r2, r6
10003030:	4629      	mov	r1, r5
10003032:	4620      	mov	r0, r4
10003034:	f7ff ffd0 	bl	10002fd8 <prvReloadTimer>
10003038:	e7f5      	b.n	10003026 <prvProcessExpiredTimer+0x26>
1000303a:	bf00      	nop
1000303c:	38008b9c 	stmdacc	r0, {r2, r3, r4, r7, r8, r9, fp, pc}

10003040 <prvSwitchTimerLists>:
        }
    }
/*-----------------------------------------------------------*/

    static void prvSwitchTimerLists( void )
    {
10003040:	b508      	push	{r3, lr}

        /* The tick count has overflowed.  The timer lists must be switched.
         * If there are any timers still referenced from the current timer list
         * then they must have expired and should be processed before the lists
         * are switched. */
        while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
10003042:	e005      	b.n	10003050 <prvSwitchTimerLists+0x10>
        {
            xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
10003044:	68db      	ldr	r3, [r3, #12]

            /* Process the expired timer.  For auto-reload timers, be careful to
             * process only expirations that occur on the current list.  Further
             * expirations must wait until after the lists are switched. */
            prvProcessExpiredTimer( xNextExpireTime, tmrMAX_TIME_BEFORE_OVERFLOW );
10003046:	f04f 31ff 	mov.w	r1, #4294967295
1000304a:	6818      	ldr	r0, [r3, #0]
1000304c:	f7ff ffd8 	bl	10003000 <prvProcessExpiredTimer>
        while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
10003050:	4b05      	ldr	r3, [pc, #20]	; (10003068 <prvSwitchTimerLists+0x28>)
10003052:	681b      	ldr	r3, [r3, #0]
10003054:	681a      	ldr	r2, [r3, #0]
10003056:	2a00      	cmp	r2, #0
10003058:	d1f4      	bne.n	10003044 <prvSwitchTimerLists+0x4>
        }

        pxTemp = pxCurrentTimerList;
        pxCurrentTimerList = pxOverflowTimerList;
1000305a:	4a04      	ldr	r2, [pc, #16]	; (1000306c <prvSwitchTimerLists+0x2c>)
1000305c:	6810      	ldr	r0, [r2, #0]
1000305e:	4902      	ldr	r1, [pc, #8]	; (10003068 <prvSwitchTimerLists+0x28>)
10003060:	6008      	str	r0, [r1, #0]
        pxOverflowTimerList = pxTemp;
10003062:	6013      	str	r3, [r2, #0]
    }
10003064:	bd08      	pop	{r3, pc}
10003066:	bf00      	nop
10003068:	38008b9c 	stmdacc	r0, {r2, r3, r4, r7, r8, r9, fp, pc}
1000306c:	38008ba0 	stmdacc	r0, {r5, r7, r8, r9, fp, pc}

10003070 <prvSampleTimeNow>:
    {
10003070:	b538      	push	{r3, r4, r5, lr}
10003072:	4605      	mov	r5, r0
        xTimeNow = xTaskGetTickCount();
10003074:	f7ff fbd8 	bl	10002828 <xTaskGetTickCount>
10003078:	4604      	mov	r4, r0
        if( xTimeNow < xLastTime )
1000307a:	4b07      	ldr	r3, [pc, #28]	; (10003098 <prvSampleTimeNow+0x28>)
1000307c:	681b      	ldr	r3, [r3, #0]
1000307e:	4283      	cmp	r3, r0
10003080:	d805      	bhi.n	1000308e <prvSampleTimeNow+0x1e>
            *pxTimerListsWereSwitched = pdFALSE;
10003082:	2300      	movs	r3, #0
10003084:	602b      	str	r3, [r5, #0]
        xLastTime = xTimeNow;
10003086:	4b04      	ldr	r3, [pc, #16]	; (10003098 <prvSampleTimeNow+0x28>)
10003088:	601c      	str	r4, [r3, #0]
    }
1000308a:	4620      	mov	r0, r4
1000308c:	bd38      	pop	{r3, r4, r5, pc}
            prvSwitchTimerLists();
1000308e:	f7ff ffd7 	bl	10003040 <prvSwitchTimerLists>
            *pxTimerListsWereSwitched = pdTRUE;
10003092:	2301      	movs	r3, #1
10003094:	602b      	str	r3, [r5, #0]
10003096:	e7f6      	b.n	10003086 <prvSampleTimeNow+0x16>
10003098:	38008c7c 	stmdacc	r0, {r2, r3, r4, r5, r6, sl, fp, pc}

1000309c <prvProcessTimerOrBlockTask>:
    {
1000309c:	b570      	push	{r4, r5, r6, lr}
1000309e:	b082      	sub	sp, #8
100030a0:	4606      	mov	r6, r0
100030a2:	460c      	mov	r4, r1
        vTaskSuspendAll();
100030a4:	f7ff fbb8 	bl	10002818 <vTaskSuspendAll>
            xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
100030a8:	a801      	add	r0, sp, #4
100030aa:	f7ff ffe1 	bl	10003070 <prvSampleTimeNow>
            if( xTimerListsWereSwitched == pdFALSE )
100030ae:	9b01      	ldr	r3, [sp, #4]
100030b0:	bb03      	cbnz	r3, 100030f4 <prvProcessTimerOrBlockTask+0x58>
100030b2:	4605      	mov	r5, r0
                if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
100030b4:	b90c      	cbnz	r4, 100030ba <prvProcessTimerOrBlockTask+0x1e>
100030b6:	42b0      	cmp	r0, r6
100030b8:	d210      	bcs.n	100030dc <prvProcessTimerOrBlockTask+0x40>
                    if( xListWasEmpty != pdFALSE )
100030ba:	b124      	cbz	r4, 100030c6 <prvProcessTimerOrBlockTask+0x2a>
                        xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
100030bc:	4a0f      	ldr	r2, [pc, #60]	; (100030fc <prvProcessTimerOrBlockTask+0x60>)
100030be:	6812      	ldr	r2, [r2, #0]
100030c0:	6812      	ldr	r2, [r2, #0]
100030c2:	b992      	cbnz	r2, 100030ea <prvProcessTimerOrBlockTask+0x4e>
100030c4:	2401      	movs	r4, #1
                    vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
100030c6:	4622      	mov	r2, r4
100030c8:	1b71      	subs	r1, r6, r5
100030ca:	4b0d      	ldr	r3, [pc, #52]	; (10003100 <prvProcessTimerOrBlockTask+0x64>)
100030cc:	6818      	ldr	r0, [r3, #0]
100030ce:	f7ff f95b 	bl	10002388 <vQueueWaitForMessageRestricted>
                    if( xTaskResumeAll() == pdFALSE )
100030d2:	f7ff fc83 	bl	100029dc <xTaskResumeAll>
100030d6:	b150      	cbz	r0, 100030ee <prvProcessTimerOrBlockTask+0x52>
    }
100030d8:	b002      	add	sp, #8
100030da:	bd70      	pop	{r4, r5, r6, pc}
                    ( void ) xTaskResumeAll();
100030dc:	f7ff fc7e 	bl	100029dc <xTaskResumeAll>
                    prvProcessExpiredTimer( xNextExpireTime, xTimeNow );
100030e0:	4629      	mov	r1, r5
100030e2:	4630      	mov	r0, r6
100030e4:	f7ff ff8c 	bl	10003000 <prvProcessExpiredTimer>
100030e8:	e7f6      	b.n	100030d8 <prvProcessTimerOrBlockTask+0x3c>
                        xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
100030ea:	461c      	mov	r4, r3
100030ec:	e7eb      	b.n	100030c6 <prvProcessTimerOrBlockTask+0x2a>
                        taskYIELD_WITHIN_API();
100030ee:	f000 fa93 	bl	10003618 <vPortYield>
100030f2:	e7f1      	b.n	100030d8 <prvProcessTimerOrBlockTask+0x3c>
                ( void ) xTaskResumeAll();
100030f4:	f7ff fc72 	bl	100029dc <xTaskResumeAll>
    }
100030f8:	e7ee      	b.n	100030d8 <prvProcessTimerOrBlockTask+0x3c>
100030fa:	bf00      	nop
100030fc:	38008ba0 	stmdacc	r0, {r5, r7, r8, r9, fp, pc}
10003100:	38008cdc 	stmdacc	r0, {r2, r3, r4, r6, r7, sl, fp, pc}

10003104 <prvProcessReceivedCommands>:
    {
10003104:	b530      	push	{r4, r5, lr}
10003106:	b087      	sub	sp, #28
        DaemonTaskMessage_t xMessage = { 0 };
10003108:	2300      	movs	r3, #0
1000310a:	9302      	str	r3, [sp, #8]
1000310c:	9303      	str	r3, [sp, #12]
1000310e:	9304      	str	r3, [sp, #16]
10003110:	9305      	str	r3, [sp, #20]
        while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL )
10003112:	e002      	b.n	1000311a <prvProcessReceivedCommands+0x16>
            if( xMessage.xMessageID >= ( BaseType_t ) 0 )
10003114:	9b02      	ldr	r3, [sp, #8]
10003116:	2b00      	cmp	r3, #0
10003118:	da0f      	bge.n	1000313a <prvProcessReceivedCommands+0x36>
        while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL )
1000311a:	2200      	movs	r2, #0
1000311c:	a902      	add	r1, sp, #8
1000311e:	4b36      	ldr	r3, [pc, #216]	; (100031f8 <prvProcessReceivedCommands+0xf4>)
10003120:	6818      	ldr	r0, [r3, #0]
10003122:	f7ff f8b9 	bl	10002298 <xQueueReceive>
10003126:	2800      	cmp	r0, #0
10003128:	d064      	beq.n	100031f4 <prvProcessReceivedCommands+0xf0>
                if( xMessage.xMessageID < ( BaseType_t ) 0 )
1000312a:	9b02      	ldr	r3, [sp, #8]
1000312c:	2b00      	cmp	r3, #0
1000312e:	daf1      	bge.n	10003114 <prvProcessReceivedCommands+0x10>
                    pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
10003130:	9905      	ldr	r1, [sp, #20]
10003132:	9804      	ldr	r0, [sp, #16]
10003134:	9b03      	ldr	r3, [sp, #12]
10003136:	4798      	blx	r3
10003138:	e7ec      	b.n	10003114 <prvProcessReceivedCommands+0x10>
                pxTimer = xMessage.u.xTimerParameters.pxTimer;
1000313a:	9c04      	ldr	r4, [sp, #16]
                if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE )
1000313c:	6963      	ldr	r3, [r4, #20]
1000313e:	b113      	cbz	r3, 10003146 <prvProcessReceivedCommands+0x42>
                    ( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
10003140:	1d20      	adds	r0, r4, #4
10003142:	f7fe ff5e 	bl	10002002 <uxListRemove>
                xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
10003146:	a801      	add	r0, sp, #4
10003148:	f7ff ff92 	bl	10003070 <prvSampleTimeNow>
1000314c:	4605      	mov	r5, r0
                switch( xMessage.xMessageID )
1000314e:	9b02      	ldr	r3, [sp, #8]
10003150:	3b01      	subs	r3, #1
10003152:	2b08      	cmp	r3, #8
10003154:	d8e1      	bhi.n	1000311a <prvProcessReceivedCommands+0x16>
10003156:	e8df f003 	tbb	[pc, r3]
1000315a:	30290505 	eorcc	r0, r9, r5, lsl #10
1000315e:	2905053f 	stmdbcs	r5, {r0, r1, r2, r3, r4, r5, r8, sl}
10003162:	f8940030 			; <UNDEFINED> instruction: 0xf8940030
                        pxTimer->ucStatus |= ( uint8_t ) tmrSTATUS_IS_ACTIVE;
10003166:	3024      	adds	r0, #36	; 0x24
10003168:	f043 0301 	orr.w	r3, r3, #1
1000316c:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
                        if( prvInsertTimerInActiveList( pxTimer, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
10003170:	9b03      	ldr	r3, [sp, #12]
10003172:	69a1      	ldr	r1, [r4, #24]
10003174:	4602      	mov	r2, r0
10003176:	4419      	add	r1, r3
10003178:	4620      	mov	r0, r4
1000317a:	f7ff ff09 	bl	10002f90 <prvInsertTimerInActiveList>
1000317e:	2800      	cmp	r0, #0
10003180:	d0cb      	beq.n	1000311a <prvProcessReceivedCommands+0x16>
                            if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0U )
10003182:	f894 3024 	ldrb.w	r3, [r4, #36]	; 0x24
10003186:	f013 0f04 	tst.w	r3, #4
1000318a:	d107      	bne.n	1000319c <prvProcessReceivedCommands+0x98>
                                pxTimer->ucStatus &= ( ( uint8_t ) ~tmrSTATUS_IS_ACTIVE );
1000318c:	f023 0301 	bic.w	r3, r3, #1
10003190:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
                            pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
10003194:	6a23      	ldr	r3, [r4, #32]
10003196:	4620      	mov	r0, r4
10003198:	4798      	blx	r3
1000319a:	e7be      	b.n	1000311a <prvProcessReceivedCommands+0x16>
                                prvReloadTimer( pxTimer, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow );
1000319c:	69a3      	ldr	r3, [r4, #24]
1000319e:	462a      	mov	r2, r5
100031a0:	9903      	ldr	r1, [sp, #12]
100031a2:	4419      	add	r1, r3
100031a4:	4620      	mov	r0, r4
100031a6:	f7ff ff17 	bl	10002fd8 <prvReloadTimer>
100031aa:	e7f3      	b.n	10003194 <prvProcessReceivedCommands+0x90>
                        pxTimer->ucStatus &= ( ( uint8_t ) ~tmrSTATUS_IS_ACTIVE );
100031ac:	f894 3024 	ldrb.w	r3, [r4, #36]	; 0x24
100031b0:	f023 0301 	bic.w	r3, r3, #1
100031b4:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
                        break;
100031b8:	e7af      	b.n	1000311a <prvProcessReceivedCommands+0x16>
                        pxTimer->ucStatus |= ( uint8_t ) tmrSTATUS_IS_ACTIVE;
100031ba:	f894 3024 	ldrb.w	r3, [r4, #36]	; 0x24
100031be:	f043 0301 	orr.w	r3, r3, #1
100031c2:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
                        pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
100031c6:	9903      	ldr	r1, [sp, #12]
100031c8:	61a1      	str	r1, [r4, #24]
                        ( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
100031ca:	4603      	mov	r3, r0
100031cc:	4602      	mov	r2, r0
100031ce:	4401      	add	r1, r0
100031d0:	4620      	mov	r0, r4
100031d2:	f7ff fedd 	bl	10002f90 <prvInsertTimerInActiveList>
                        break;
100031d6:	e7a0      	b.n	1000311a <prvProcessReceivedCommands+0x16>
                            if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
100031d8:	f894 3024 	ldrb.w	r3, [r4, #36]	; 0x24
100031dc:	f013 0f02 	tst.w	r3, #2
100031e0:	d004      	beq.n	100031ec <prvProcessReceivedCommands+0xe8>
                                pxTimer->ucStatus &= ( ( uint8_t ) ~tmrSTATUS_IS_ACTIVE );
100031e2:	f023 0301 	bic.w	r3, r3, #1
100031e6:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
100031ea:	e796      	b.n	1000311a <prvProcessReceivedCommands+0x16>
                                vPortFree( pxTimer );
100031ec:	4620      	mov	r0, r4
100031ee:	f000 f937 	bl	10003460 <vPortFree>
100031f2:	e792      	b.n	1000311a <prvProcessReceivedCommands+0x16>
    }
100031f4:	b007      	add	sp, #28
100031f6:	bd30      	pop	{r4, r5, pc}
100031f8:	38008cdc 	stmdacc	r0, {r2, r3, r4, r6, r7, sl, fp, pc}

100031fc <prvTimerTask>:
    {
100031fc:	b500      	push	{lr}
100031fe:	b083      	sub	sp, #12
            xNextExpireTime = prvGetNextExpireTime( &xListWasEmpty );
10003200:	a801      	add	r0, sp, #4
10003202:	f7ff feb5 	bl	10002f70 <prvGetNextExpireTime>
            prvProcessTimerOrBlockTask( xNextExpireTime, xListWasEmpty );
10003206:	9901      	ldr	r1, [sp, #4]
10003208:	f7ff ff48 	bl	1000309c <prvProcessTimerOrBlockTask>
            prvProcessReceivedCommands();
1000320c:	f7ff ff7a 	bl	10003104 <prvProcessReceivedCommands>
        for( ; configCONTROL_INFINITE_LOOP(); )
10003210:	e7f6      	b.n	10003200 <prvTimerTask+0x4>
	...

10003214 <prvCheckForValidListAndQueue>:
/*-----------------------------------------------------------*/

    static void prvCheckForValidListAndQueue( void )
    {
10003214:	b530      	push	{r4, r5, lr}
10003216:	b083      	sub	sp, #12
        /* Check that the list from which active timers are referenced, and the
         * queue used to communicate with the timer service, have been
         * initialised. */
        taskENTER_CRITICAL();
10003218:	f000 fa0a 	bl	10003630 <vPortEnterCritical>
        {
            if( xTimerQueue == NULL )
1000321c:	4b0e      	ldr	r3, [pc, #56]	; (10003258 <prvCheckForValidListAndQueue+0x44>)
1000321e:	681b      	ldr	r3, [r3, #0]
10003220:	b11b      	cbz	r3, 1000322a <prvCheckForValidListAndQueue+0x16>
            else
            {
                mtCOVERAGE_TEST_MARKER();
            }
        }
        taskEXIT_CRITICAL();
10003222:	f000 fa13 	bl	1000364c <vPortExitCritical>
    }
10003226:	b003      	add	sp, #12
10003228:	bd30      	pop	{r4, r5, pc}
                vListInitialise( &xActiveTimerList1 );
1000322a:	4d0c      	ldr	r5, [pc, #48]	; (1000325c <prvCheckForValidListAndQueue+0x48>)
1000322c:	4628      	mov	r0, r5
1000322e:	f7fe febf 	bl	10001fb0 <vListInitialise>
                vListInitialise( &xActiveTimerList2 );
10003232:	4c0b      	ldr	r4, [pc, #44]	; (10003260 <prvCheckForValidListAndQueue+0x4c>)
10003234:	4620      	mov	r0, r4
10003236:	f7fe febb 	bl	10001fb0 <vListInitialise>
                pxCurrentTimerList = &xActiveTimerList1;
1000323a:	4b0a      	ldr	r3, [pc, #40]	; (10003264 <prvCheckForValidListAndQueue+0x50>)
1000323c:	601d      	str	r5, [r3, #0]
                pxOverflowTimerList = &xActiveTimerList2;
1000323e:	4b0a      	ldr	r3, [pc, #40]	; (10003268 <prvCheckForValidListAndQueue+0x54>)
10003240:	601c      	str	r4, [r3, #0]
                    xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
10003242:	2300      	movs	r3, #0
10003244:	9300      	str	r3, [sp, #0]
10003246:	4b09      	ldr	r3, [pc, #36]	; (1000326c <prvCheckForValidListAndQueue+0x58>)
10003248:	4a09      	ldr	r2, [pc, #36]	; (10003270 <prvCheckForValidListAndQueue+0x5c>)
1000324a:	2110      	movs	r1, #16
1000324c:	200a      	movs	r0, #10
1000324e:	f7ff f804 	bl	1000225a <xQueueGenericCreateStatic>
10003252:	4b01      	ldr	r3, [pc, #4]	; (10003258 <prvCheckForValidListAndQueue+0x44>)
10003254:	6018      	str	r0, [r3, #0]
10003256:	e7e4      	b.n	10003222 <prvCheckForValidListAndQueue+0xe>
10003258:	38008cdc 	stmdacc	r0, {r2, r3, r4, r6, r7, sl, fp, pc}
1000325c:	38008c44 	stmdacc	r0, {r2, r6, sl, fp, pc}
10003260:	38008c60 	stmdacc	r0, {r5, r6, sl, fp, pc}
10003264:	38008b9c 	stmdacc	r0, {r2, r3, r4, r7, r8, r9, fp, pc}
10003268:	38008ba0 	stmdacc	r0, {r5, r7, r8, r9, fp, pc}
1000326c:	38008c80 	stmdacc	r0, {r7, sl, fp, pc}
10003270:	38008ba4 	stmdacc	r0, {r2, r5, r7, r8, r9, fp, pc}

10003274 <xTimerCreateTimerTask>:
    {
10003274:	b510      	push	{r4, lr}
10003276:	b088      	sub	sp, #32
        prvCheckForValidListAndQueue();
10003278:	f7ff ffcc 	bl	10003214 <prvCheckForValidListAndQueue>
        if( xTimerQueue != NULL )
1000327c:	4b10      	ldr	r3, [pc, #64]	; (100032c0 <xTimerCreateTimerTask+0x4c>)
1000327e:	681b      	ldr	r3, [r3, #0]
10003280:	b1d3      	cbz	r3, 100032b8 <xTimerCreateTimerTask+0x44>
                    StaticTask_t * pxTimerTaskTCBBuffer = NULL;
10003282:	2400      	movs	r4, #0
10003284:	9405      	str	r4, [sp, #20]
                    StackType_t * pxTimerTaskStackBuffer = NULL;
10003286:	9406      	str	r4, [sp, #24]
                    vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &uxTimerTaskStackSize );
10003288:	aa07      	add	r2, sp, #28
1000328a:	a906      	add	r1, sp, #24
1000328c:	a805      	add	r0, sp, #20
1000328e:	f7ff fe63 	bl	10002f58 <vApplicationGetTimerTaskMemory>
                    xTimerTaskHandle = xTaskCreateStatic( prvTimerTask,
10003292:	9b05      	ldr	r3, [sp, #20]
10003294:	9302      	str	r3, [sp, #8]
10003296:	9b06      	ldr	r3, [sp, #24]
10003298:	9301      	str	r3, [sp, #4]
1000329a:	2304      	movs	r3, #4
1000329c:	9300      	str	r3, [sp, #0]
1000329e:	4623      	mov	r3, r4
100032a0:	9a07      	ldr	r2, [sp, #28]
100032a2:	4908      	ldr	r1, [pc, #32]	; (100032c4 <xTimerCreateTimerTask+0x50>)
100032a4:	4808      	ldr	r0, [pc, #32]	; (100032c8 <xTimerCreateTimerTask+0x54>)
100032a6:	f7ff fa91 	bl	100027cc <xTaskCreateStatic>
100032aa:	4b08      	ldr	r3, [pc, #32]	; (100032cc <xTimerCreateTimerTask+0x58>)
100032ac:	6018      	str	r0, [r3, #0]
                    if( xTimerTaskHandle != NULL )
100032ae:	b108      	cbz	r0, 100032b4 <xTimerCreateTimerTask+0x40>
                        xReturn = pdPASS;
100032b0:	2001      	movs	r0, #1
100032b2:	e002      	b.n	100032ba <xTimerCreateTimerTask+0x46>
        BaseType_t xReturn = pdFAIL;
100032b4:	4620      	mov	r0, r4
100032b6:	e000      	b.n	100032ba <xTimerCreateTimerTask+0x46>
100032b8:	2000      	movs	r0, #0
    }
100032ba:	b008      	add	sp, #32
100032bc:	bd10      	pop	{r4, pc}
100032be:	bf00      	nop
100032c0:	38008cdc 	stmdacc	r0, {r2, r3, r4, r6, r7, sl, fp, pc}
100032c4:	10005d90 	mulne	r0, r0, sp
100032c8:	100031fd 	strdne	r3, [r0], -sp
100032cc:	38008ce0 	stmdacc	r0, {r5, r6, r7, sl, fp, pc}

100032d0 <prvHeapInit>:
    BlockLink_t * pxFirstFreeBlock;
    portPOINTER_SIZE_TYPE uxStartAddress, uxEndAddress;
    size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;

    /* Ensure the heap starts on a correctly aligned boundary. */
    uxStartAddress = ( portPOINTER_SIZE_TYPE ) ucHeap;
100032d0:	4a10      	ldr	r2, [pc, #64]	; (10003314 <prvHeapInit+0x44>)

    if( ( uxStartAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
100032d2:	f012 0f07 	tst.w	r2, #7
100032d6:	d01a      	beq.n	1000330e <prvHeapInit+0x3e>
    {
        uxStartAddress += ( portBYTE_ALIGNMENT - 1 );
100032d8:	1dd1      	adds	r1, r2, #7
        uxStartAddress &= ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK );
100032da:	f021 0107 	bic.w	r1, r1, #7
        xTotalHeapSize -= ( size_t ) ( uxStartAddress - ( portPOINTER_SIZE_TYPE ) ucHeap );
100032de:	f5c1 4300 	rsb	r3, r1, #32768	; 0x8000
100032e2:	4413      	add	r3, r2
        uxStartAddress &= ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK );
100032e4:	460a      	mov	r2, r1
    }
    #endif

    /* xStart is used to hold a pointer to the first item in the list of free
     * blocks.  The void cast is used to prevent compiler warnings. */
    xStart.pxNextFreeBlock = ( void * ) heapPROTECT_BLOCK_POINTER( uxStartAddress );
100032e6:	480c      	ldr	r0, [pc, #48]	; (10003318 <prvHeapInit+0x48>)
100032e8:	6002      	str	r2, [r0, #0]
    xStart.xBlockSize = ( size_t ) 0;
100032ea:	2100      	movs	r1, #0
100032ec:	6041      	str	r1, [r0, #4]

    /* pxEnd is used to mark the end of the list of free blocks and is inserted
     * at the end of the heap space. */
    uxEndAddress = uxStartAddress + ( portPOINTER_SIZE_TYPE ) xTotalHeapSize;
100032ee:	4413      	add	r3, r2
    uxEndAddress -= ( portPOINTER_SIZE_TYPE ) xHeapStructSize;
100032f0:	3b08      	subs	r3, #8
    uxEndAddress &= ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK );
100032f2:	f023 0307 	bic.w	r3, r3, #7
    pxEnd = ( BlockLink_t * ) uxEndAddress;
100032f6:	4809      	ldr	r0, [pc, #36]	; (1000331c <prvHeapInit+0x4c>)
100032f8:	6003      	str	r3, [r0, #0]
    pxEnd->xBlockSize = 0;
100032fa:	6059      	str	r1, [r3, #4]
    pxEnd->pxNextFreeBlock = heapPROTECT_BLOCK_POINTER( NULL );
100032fc:	6019      	str	r1, [r3, #0]

    /* To start with there is a single free block that is sized to take up the
     * entire heap space, minus the space taken by pxEnd. */
    pxFirstFreeBlock = ( BlockLink_t * ) uxStartAddress;
    pxFirstFreeBlock->xBlockSize = ( size_t ) ( uxEndAddress - ( portPOINTER_SIZE_TYPE ) pxFirstFreeBlock );
100032fe:	1a99      	subs	r1, r3, r2
10003300:	6051      	str	r1, [r2, #4]
    pxFirstFreeBlock->pxNextFreeBlock = heapPROTECT_BLOCK_POINTER( pxEnd );
10003302:	6013      	str	r3, [r2, #0]

    /* Only one block exists - and it covers the entire usable heap space. */
    xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
10003304:	4b06      	ldr	r3, [pc, #24]	; (10003320 <prvHeapInit+0x50>)
10003306:	6019      	str	r1, [r3, #0]
    xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
10003308:	4b06      	ldr	r3, [pc, #24]	; (10003324 <prvHeapInit+0x54>)
1000330a:	6019      	str	r1, [r3, #0]
}
1000330c:	4770      	bx	lr
    size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;
1000330e:	f44f 4300 	mov.w	r3, #32768	; 0x8000
10003312:	e7e8      	b.n	100032e6 <prvHeapInit+0x16>
10003314:	38000468 	stmdacc	r0, {r3, r5, r6, sl}
10003318:	38008cf8 	stmdacc	r0, {r3, r4, r5, r6, r7, sl, fp, pc}
1000331c:	38008ce4 	stmdacc	r0, {r2, r5, r6, r7, sl, fp, pc}
10003320:	38008cec 	stmdacc	r0, {r2, r3, r5, r6, r7, sl, fp, pc}
10003324:	38008ce8 	stmdacc	r0, {r3, r5, r6, r7, sl, fp, pc}

10003328 <prvInsertBlockIntoFreeList>:
    BlockLink_t * pxIterator;
    uint8_t * puc;

    /* Iterate through the list until a block is found that has a higher address
     * than the block being inserted. */
    for( pxIterator = &xStart; heapPROTECT_BLOCK_POINTER( pxIterator->pxNextFreeBlock ) < pxBlockToInsert; pxIterator = heapPROTECT_BLOCK_POINTER( pxIterator->pxNextFreeBlock ) )
10003328:	4b16      	ldr	r3, [pc, #88]	; (10003384 <prvInsertBlockIntoFreeList+0x5c>)
1000332a:	461a      	mov	r2, r3
1000332c:	681b      	ldr	r3, [r3, #0]
1000332e:	4283      	cmp	r3, r0
10003330:	d3fb      	bcc.n	1000332a <prvInsertBlockIntoFreeList+0x2>

    /* Do the block being inserted, and the block it is being inserted after
     * make a contiguous block of memory? */
    puc = ( uint8_t * ) pxIterator;

    if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
10003332:	6851      	ldr	r1, [r2, #4]
10003334:	eb02 0c01 	add.w	ip, r2, r1
10003338:	4584      	cmp	ip, r0
1000333a:	d009      	beq.n	10003350 <prvInsertBlockIntoFreeList+0x28>

    /* Do the block being inserted, and the block it is being inserted before
     * make a contiguous block of memory? */
    puc = ( uint8_t * ) pxBlockToInsert;

    if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) heapPROTECT_BLOCK_POINTER( pxIterator->pxNextFreeBlock ) )
1000333c:	6841      	ldr	r1, [r0, #4]
1000333e:	eb00 0c01 	add.w	ip, r0, r1
10003342:	4563      	cmp	r3, ip
10003344:	d009      	beq.n	1000335a <prvInsertBlockIntoFreeList+0x32>
            pxBlockToInsert->pxNextFreeBlock = heapPROTECT_BLOCK_POINTER( pxEnd );
        }
    }
    else
    {
        pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;
10003346:	6003      	str	r3, [r0, #0]

    /* If the block being inserted plugged a gab, so was merged with the block
     * before and the block after, then it's pxNextFreeBlock pointer will have
     * already been set, and should not be set here as that would make it point
     * to itself. */
    if( pxIterator != pxBlockToInsert )
10003348:	4290      	cmp	r0, r2
1000334a:	d019      	beq.n	10003380 <prvInsertBlockIntoFreeList+0x58>
    {
        pxIterator->pxNextFreeBlock = heapPROTECT_BLOCK_POINTER( pxBlockToInsert );
1000334c:	6010      	str	r0, [r2, #0]
    }
    else
    {
        mtCOVERAGE_TEST_MARKER();
1000334e:	4770      	bx	lr
        pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
10003350:	6840      	ldr	r0, [r0, #4]
10003352:	4401      	add	r1, r0
10003354:	6051      	str	r1, [r2, #4]
        pxBlockToInsert = pxIterator;
10003356:	4610      	mov	r0, r2
10003358:	e7f0      	b.n	1000333c <prvInsertBlockIntoFreeList+0x14>
{
1000335a:	b410      	push	{r4}
        if( heapPROTECT_BLOCK_POINTER( pxIterator->pxNextFreeBlock ) != pxEnd )
1000335c:	4c0a      	ldr	r4, [pc, #40]	; (10003388 <prvInsertBlockIntoFreeList+0x60>)
1000335e:	6824      	ldr	r4, [r4, #0]
10003360:	42a3      	cmp	r3, r4
10003362:	d00b      	beq.n	1000337c <prvInsertBlockIntoFreeList+0x54>
            pxBlockToInsert->xBlockSize += heapPROTECT_BLOCK_POINTER( pxIterator->pxNextFreeBlock )->xBlockSize;
10003364:	685b      	ldr	r3, [r3, #4]
10003366:	4419      	add	r1, r3
10003368:	6041      	str	r1, [r0, #4]
            pxBlockToInsert->pxNextFreeBlock = heapPROTECT_BLOCK_POINTER( pxIterator->pxNextFreeBlock )->pxNextFreeBlock;
1000336a:	6813      	ldr	r3, [r2, #0]
1000336c:	681b      	ldr	r3, [r3, #0]
1000336e:	6003      	str	r3, [r0, #0]
    if( pxIterator != pxBlockToInsert )
10003370:	4290      	cmp	r0, r2
10003372:	d000      	beq.n	10003376 <prvInsertBlockIntoFreeList+0x4e>
        pxIterator->pxNextFreeBlock = heapPROTECT_BLOCK_POINTER( pxBlockToInsert );
10003374:	6010      	str	r0, [r2, #0]
    }
}
10003376:	f85d 4b04 	ldr.w	r4, [sp], #4
1000337a:	4770      	bx	lr
            pxBlockToInsert->pxNextFreeBlock = heapPROTECT_BLOCK_POINTER( pxEnd );
1000337c:	6004      	str	r4, [r0, #0]
1000337e:	e7f7      	b.n	10003370 <prvInsertBlockIntoFreeList+0x48>
10003380:	4770      	bx	lr
10003382:	bf00      	nop
10003384:	38008cf8 	stmdacc	r0, {r3, r4, r5, r6, r7, sl, fp, pc}
10003388:	38008ce4 	stmdacc	r0, {r2, r5, r6, r7, sl, fp, pc}

1000338c <pvPortMalloc>:
{
1000338c:	b570      	push	{r4, r5, r6, lr}
    if( xWantedSize > 0 )
1000338e:	4604      	mov	r4, r0
10003390:	b170      	cbz	r0, 100033b0 <pvPortMalloc+0x24>
        if( heapADD_WILL_OVERFLOW( xWantedSize, xHeapStructSize ) == 0 )
10003392:	f110 0f09 	cmn.w	r0, #9
10003396:	d80a      	bhi.n	100033ae <pvPortMalloc+0x22>
            xWantedSize += xHeapStructSize;
10003398:	3408      	adds	r4, #8
            if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
1000339a:	f014 0307 	ands.w	r3, r4, #7
1000339e:	d007      	beq.n	100033b0 <pvPortMalloc+0x24>
                xAdditionalRequiredSize = portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK );
100033a0:	f1c3 0308 	rsb	r3, r3, #8
                if( heapADD_WILL_OVERFLOW( xWantedSize, xAdditionalRequiredSize ) == 0 )
100033a4:	43da      	mvns	r2, r3
100033a6:	42a2      	cmp	r2, r4
100033a8:	d312      	bcc.n	100033d0 <pvPortMalloc+0x44>
                    xWantedSize += xAdditionalRequiredSize;
100033aa:	441c      	add	r4, r3
100033ac:	e000      	b.n	100033b0 <pvPortMalloc+0x24>
            xWantedSize = 0;
100033ae:	2400      	movs	r4, #0
    vTaskSuspendAll();
100033b0:	f7ff fa32 	bl	10002818 <vTaskSuspendAll>
        if( pxEnd == NULL )
100033b4:	4b25      	ldr	r3, [pc, #148]	; (1000344c <pvPortMalloc+0xc0>)
100033b6:	681b      	ldr	r3, [r3, #0]
100033b8:	b163      	cbz	r3, 100033d4 <pvPortMalloc+0x48>
        if( heapBLOCK_SIZE_IS_VALID( xWantedSize ) != 0 )
100033ba:	2c00      	cmp	r4, #0
100033bc:	db3e      	blt.n	1000343c <pvPortMalloc+0xb0>
            if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
100033be:	2c00      	cmp	r4, #0
100033c0:	d03e      	beq.n	10003440 <pvPortMalloc+0xb4>
100033c2:	4b23      	ldr	r3, [pc, #140]	; (10003450 <pvPortMalloc+0xc4>)
100033c4:	681e      	ldr	r6, [r3, #0]
100033c6:	42a6      	cmp	r6, r4
100033c8:	d33c      	bcc.n	10003444 <pvPortMalloc+0xb8>
                pxBlock = heapPROTECT_BLOCK_POINTER( xStart.pxNextFreeBlock );
100033ca:	4922      	ldr	r1, [pc, #136]	; (10003454 <pvPortMalloc+0xc8>)
100033cc:	680b      	ldr	r3, [r1, #0]
                while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != heapPROTECT_BLOCK_POINTER( NULL ) ) )
100033ce:	e006      	b.n	100033de <pvPortMalloc+0x52>
                    xWantedSize = 0;
100033d0:	2400      	movs	r4, #0
100033d2:	e7ed      	b.n	100033b0 <pvPortMalloc+0x24>
            prvHeapInit();
100033d4:	f7ff ff7c 	bl	100032d0 <prvHeapInit>
100033d8:	e7ef      	b.n	100033ba <pvPortMalloc+0x2e>
                    pxPreviousBlock = pxBlock;
100033da:	4619      	mov	r1, r3
                    pxBlock = heapPROTECT_BLOCK_POINTER( pxBlock->pxNextFreeBlock );
100033dc:	4613      	mov	r3, r2
                while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != heapPROTECT_BLOCK_POINTER( NULL ) ) )
100033de:	685a      	ldr	r2, [r3, #4]
100033e0:	42a2      	cmp	r2, r4
100033e2:	d202      	bcs.n	100033ea <pvPortMalloc+0x5e>
100033e4:	681a      	ldr	r2, [r3, #0]
100033e6:	2a00      	cmp	r2, #0
100033e8:	d1f7      	bne.n	100033da <pvPortMalloc+0x4e>
                if( pxBlock != pxEnd )
100033ea:	4a18      	ldr	r2, [pc, #96]	; (1000344c <pvPortMalloc+0xc0>)
100033ec:	6812      	ldr	r2, [r2, #0]
100033ee:	429a      	cmp	r2, r3
100033f0:	d02a      	beq.n	10003448 <pvPortMalloc+0xbc>
                    pvReturn = ( void * ) ( ( ( uint8_t * ) heapPROTECT_BLOCK_POINTER( pxPreviousBlock->pxNextFreeBlock ) ) + xHeapStructSize );
100033f2:	680d      	ldr	r5, [r1, #0]
100033f4:	3508      	adds	r5, #8
                    pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
100033f6:	681a      	ldr	r2, [r3, #0]
100033f8:	600a      	str	r2, [r1, #0]
                    if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
100033fa:	6858      	ldr	r0, [r3, #4]
100033fc:	1b00      	subs	r0, r0, r4
100033fe:	2810      	cmp	r0, #16
10003400:	d905      	bls.n	1000340e <pvPortMalloc+0x82>
                        pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
10003402:	191a      	adds	r2, r3, r4
                        pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
10003404:	6050      	str	r0, [r2, #4]
                        pxBlock->xBlockSize = xWantedSize;
10003406:	605c      	str	r4, [r3, #4]
                        pxNewBlockLink->pxNextFreeBlock = pxPreviousBlock->pxNextFreeBlock;
10003408:	6808      	ldr	r0, [r1, #0]
1000340a:	5118      	str	r0, [r3, r4]
                        pxPreviousBlock->pxNextFreeBlock = heapPROTECT_BLOCK_POINTER( pxNewBlockLink );
1000340c:	600a      	str	r2, [r1, #0]
                    xFreeBytesRemaining -= pxBlock->xBlockSize;
1000340e:	6859      	ldr	r1, [r3, #4]
10003410:	1a76      	subs	r6, r6, r1
10003412:	480f      	ldr	r0, [pc, #60]	; (10003450 <pvPortMalloc+0xc4>)
10003414:	6006      	str	r6, [r0, #0]
                    if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
10003416:	4810      	ldr	r0, [pc, #64]	; (10003458 <pvPortMalloc+0xcc>)
10003418:	6800      	ldr	r0, [r0, #0]
1000341a:	4286      	cmp	r6, r0
1000341c:	d201      	bcs.n	10003422 <pvPortMalloc+0x96>
                        xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
1000341e:	480e      	ldr	r0, [pc, #56]	; (10003458 <pvPortMalloc+0xcc>)
10003420:	6006      	str	r6, [r0, #0]
                    heapALLOCATE_BLOCK( pxBlock );
10003422:	f041 4100 	orr.w	r1, r1, #2147483648	; 0x80000000
10003426:	6059      	str	r1, [r3, #4]
                    pxBlock->pxNextFreeBlock = NULL;
10003428:	2200      	movs	r2, #0
1000342a:	601a      	str	r2, [r3, #0]
                    xNumberOfSuccessfulAllocations++;
1000342c:	4a0b      	ldr	r2, [pc, #44]	; (1000345c <pvPortMalloc+0xd0>)
1000342e:	6813      	ldr	r3, [r2, #0]
10003430:	3301      	adds	r3, #1
10003432:	6013      	str	r3, [r2, #0]
    ( void ) xTaskResumeAll();
10003434:	f7ff fad2 	bl	100029dc <xTaskResumeAll>
}
10003438:	4628      	mov	r0, r5
1000343a:	bd70      	pop	{r4, r5, r6, pc}
    void * pvReturn = NULL;
1000343c:	2500      	movs	r5, #0
1000343e:	e7f9      	b.n	10003434 <pvPortMalloc+0xa8>
10003440:	2500      	movs	r5, #0
10003442:	e7f7      	b.n	10003434 <pvPortMalloc+0xa8>
10003444:	2500      	movs	r5, #0
10003446:	e7f5      	b.n	10003434 <pvPortMalloc+0xa8>
10003448:	2500      	movs	r5, #0
1000344a:	e7f3      	b.n	10003434 <pvPortMalloc+0xa8>
1000344c:	38008ce4 	stmdacc	r0, {r2, r5, r6, r7, sl, fp, pc}
10003450:	38008ce8 	stmdacc	r0, {r3, r5, r6, r7, sl, fp, pc}
10003454:	38008cf8 	stmdacc	r0, {r3, r4, r5, r6, r7, sl, fp, pc}
10003458:	38008cec 	stmdacc	r0, {r2, r3, r5, r6, r7, sl, fp, pc}
1000345c:	38008cf0 	stmdacc	r0, {r4, r5, r6, r7, sl, fp, pc}

10003460 <vPortFree>:
    if( pv != NULL )
10003460:	b308      	cbz	r0, 100034a6 <vPortFree+0x46>
{
10003462:	b538      	push	{r3, r4, r5, lr}
10003464:	4604      	mov	r4, r0
        puc -= xHeapStructSize;
10003466:	f1a0 0508 	sub.w	r5, r0, #8
        if( heapBLOCK_IS_ALLOCATED( pxLink ) != 0 )
1000346a:	f850 3c04 	ldr.w	r3, [r0, #-4]
1000346e:	2b00      	cmp	r3, #0
10003470:	da02      	bge.n	10003478 <vPortFree+0x18>
            if( pxLink->pxNextFreeBlock == NULL )
10003472:	f850 2c08 	ldr.w	r2, [r0, #-8]
10003476:	b102      	cbz	r2, 1000347a <vPortFree+0x1a>
}
10003478:	bd38      	pop	{r3, r4, r5, pc}
                heapFREE_BLOCK( pxLink );
1000347a:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
1000347e:	f840 3c04 	str.w	r3, [r0, #-4]
                vTaskSuspendAll();
10003482:	f7ff f9c9 	bl	10002818 <vTaskSuspendAll>
                    xFreeBytesRemaining += pxLink->xBlockSize;
10003486:	f854 1c04 	ldr.w	r1, [r4, #-4]
1000348a:	4a07      	ldr	r2, [pc, #28]	; (100034a8 <vPortFree+0x48>)
1000348c:	6813      	ldr	r3, [r2, #0]
1000348e:	440b      	add	r3, r1
10003490:	6013      	str	r3, [r2, #0]
                    prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
10003492:	4628      	mov	r0, r5
10003494:	f7ff ff48 	bl	10003328 <prvInsertBlockIntoFreeList>
                    xNumberOfSuccessfulFrees++;
10003498:	4a04      	ldr	r2, [pc, #16]	; (100034ac <vPortFree+0x4c>)
1000349a:	6813      	ldr	r3, [r2, #0]
1000349c:	3301      	adds	r3, #1
1000349e:	6013      	str	r3, [r2, #0]
                ( void ) xTaskResumeAll();
100034a0:	f7ff fa9c 	bl	100029dc <xTaskResumeAll>
}
100034a4:	e7e8      	b.n	10003478 <vPortFree+0x18>
100034a6:	4770      	bx	lr
100034a8:	38008ce8 	stmdacc	r0, {r3, r5, r6, r7, sl, fp, pc}
100034ac:	38008cf4 	stmdacc	r0, {r2, r4, r5, r6, r7, sl, fp, pc}

100034b0 <prvTaskExitError>:
    portNVIC_SYSTICK_CTRL_REG = portNVIC_SYSTICK_CLK_BIT_CONFIG | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT;
}
/*-----------------------------------------------------------*/

static void prvTaskExitError( void )
{
100034b0:	b500      	push	{lr}
100034b2:	b083      	sub	sp, #12
    volatile uint32_t ulDummy = 0UL;
100034b4:	2300      	movs	r3, #0
100034b6:	9301      	str	r3, [sp, #4]
     * its caller as there is nothing to return to. If a task wants to exit it
     * should instead call vTaskDelete( NULL ). Artificially force an assert()
     * to be triggered if configASSERT() is defined, then stop here so
     * application writers can catch the error. */
    configASSERT( ulCriticalNesting == ~0UL );
    portDISABLE_INTERRUPTS();
100034b8:	f000 f980 	bl	100037bc <ulSetInterruptMask>

    while( ulDummy == 0 )
100034bc:	9b01      	ldr	r3, [sp, #4]
100034be:	2b00      	cmp	r3, #0
100034c0:	d0fc      	beq.n	100034bc <prvTaskExitError+0xc>
         * warnings about code appearing after this function is called - making
         * ulDummy volatile makes the compiler think the function could return
         * and therefore not output an 'unreachable code' warning for code that
         * appears after it. */
    }
}
100034c2:	b003      	add	sp, #12
100034c4:	f85d fb04 	ldr.w	pc, [sp], #4

100034c8 <vPortSuppressTicksAndSleep>:
    {
100034c8:	b510      	push	{r4, lr}
        if( xExpectedIdleTime > xMaximumPossibleSuppressedTicks )
100034ca:	4b41      	ldr	r3, [pc, #260]	; (100035d0 <vPortSuppressTicksAndSleep+0x108>)
100034cc:	681c      	ldr	r4, [r3, #0]
100034ce:	4284      	cmp	r4, r0
100034d0:	d300      	bcc.n	100034d4 <vPortSuppressTicksAndSleep+0xc>
100034d2:	4604      	mov	r4, r0
        __asm volatile ( "cpsid i" ::: "memory" );
100034d4:	b672      	cpsid	i
        __asm volatile ( "dsb" );
100034d6:	f3bf 8f4f 	dsb	sy
        __asm volatile ( "isb" );
100034da:	f3bf 8f6f 	isb	sy
        if( eTaskConfirmSleepModeStatus() == eAbortSleep )
100034de:	f7ff fc71 	bl	10002dc4 <eTaskConfirmSleepModeStatus>
100034e2:	b908      	cbnz	r0, 100034e8 <vPortSuppressTicksAndSleep+0x20>
            __asm volatile ( "cpsie i" ::: "memory" );
100034e4:	b662      	cpsie	i
    }
100034e6:	bd10      	pop	{r4, pc}
            portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT_CONFIG | portNVIC_SYSTICK_INT_BIT );
100034e8:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
100034ec:	2206      	movs	r2, #6
100034ee:	611a      	str	r2, [r3, #16]
            ulSysTickDecrementsLeft = portNVIC_SYSTICK_CURRENT_VALUE_REG;
100034f0:	699b      	ldr	r3, [r3, #24]
            if( ulSysTickDecrementsLeft == 0 )
100034f2:	b90b      	cbnz	r3, 100034f8 <vPortSuppressTicksAndSleep+0x30>
                ulSysTickDecrementsLeft = ulTimerCountsForOneTick;
100034f4:	4b37      	ldr	r3, [pc, #220]	; (100035d4 <vPortSuppressTicksAndSleep+0x10c>)
100034f6:	681b      	ldr	r3, [r3, #0]
            ulReloadValue = ulSysTickDecrementsLeft + ( ulTimerCountsForOneTick * ( xExpectedIdleTime - 1UL ) );
100034f8:	1e60      	subs	r0, r4, #1
100034fa:	4a36      	ldr	r2, [pc, #216]	; (100035d4 <vPortSuppressTicksAndSleep+0x10c>)
100034fc:	6812      	ldr	r2, [r2, #0]
100034fe:	fb02 3300 	mla	r3, r2, r0, r3
            if( ( portNVIC_INT_CTRL_REG & portNVIC_PEND_SYSTICK_SET_BIT ) != 0 )
10003502:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
10003506:	f8d2 2d04 	ldr.w	r2, [r2, #3332]	; 0xd04
1000350a:	f012 6f80 	tst.w	r2, #67108864	; 0x4000000
1000350e:	d008      	beq.n	10003522 <vPortSuppressTicksAndSleep+0x5a>
                portNVIC_INT_CTRL_REG = portNVIC_PEND_SYSTICK_CLEAR_BIT;
10003510:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
10003514:	f04f 7100 	mov.w	r1, #33554432	; 0x2000000
10003518:	f8c2 1d04 	str.w	r1, [r2, #3332]	; 0xd04
                ulReloadValue -= ulTimerCountsForOneTick;
1000351c:	4a2d      	ldr	r2, [pc, #180]	; (100035d4 <vPortSuppressTicksAndSleep+0x10c>)
1000351e:	6812      	ldr	r2, [r2, #0]
10003520:	1a9b      	subs	r3, r3, r2
            if( ulReloadValue > ulStoppedTimerCompensation )
10003522:	4a2d      	ldr	r2, [pc, #180]	; (100035d8 <vPortSuppressTicksAndSleep+0x110>)
10003524:	6812      	ldr	r2, [r2, #0]
10003526:	429a      	cmp	r2, r3
10003528:	d200      	bcs.n	1000352c <vPortSuppressTicksAndSleep+0x64>
                ulReloadValue -= ulStoppedTimerCompensation;
1000352a:	1a9b      	subs	r3, r3, r2
            portNVIC_SYSTICK_LOAD_REG = ulReloadValue;
1000352c:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
10003530:	6153      	str	r3, [r2, #20]
            portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
10003532:	2100      	movs	r1, #0
10003534:	6191      	str	r1, [r2, #24]
            portNVIC_SYSTICK_CTRL_REG |= portNVIC_SYSTICK_ENABLE_BIT;
10003536:	6911      	ldr	r1, [r2, #16]
10003538:	f041 0101 	orr.w	r1, r1, #1
1000353c:	6111      	str	r1, [r2, #16]
            if( xModifiableIdleTime > 0 )
1000353e:	b124      	cbz	r4, 1000354a <vPortSuppressTicksAndSleep+0x82>
                __asm volatile ( "dsb" ::: "memory" );
10003540:	f3bf 8f4f 	dsb	sy
                __asm volatile ( "wfi" );
10003544:	bf30      	wfi
                __asm volatile ( "isb" );
10003546:	f3bf 8f6f 	isb	sy
            __asm volatile ( "cpsie i" ::: "memory" );
1000354a:	b662      	cpsie	i
            __asm volatile ( "dsb" );
1000354c:	f3bf 8f4f 	dsb	sy
            __asm volatile ( "isb" );
10003550:	f3bf 8f6f 	isb	sy
            __asm volatile ( "cpsid i" ::: "memory" );
10003554:	b672      	cpsid	i
            __asm volatile ( "dsb" );
10003556:	f3bf 8f4f 	dsb	sy
            __asm volatile ( "isb" );
1000355a:	f3bf 8f6f 	isb	sy
            portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT_CONFIG | portNVIC_SYSTICK_INT_BIT );
1000355e:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
10003562:	2106      	movs	r1, #6
10003564:	6111      	str	r1, [r2, #16]
            if( ( portNVIC_SYSTICK_CTRL_REG & portNVIC_SYSTICK_COUNT_FLAG_BIT ) != 0 )
10003566:	6912      	ldr	r2, [r2, #16]
10003568:	f412 3f80 	tst.w	r2, #65536	; 0x10000
1000356c:	d01f      	beq.n	100035ae <vPortSuppressTicksAndSleep+0xe6>
                ulCalculatedLoadValue = ( ulTimerCountsForOneTick - 1UL ) - ( ulReloadValue - portNVIC_SYSTICK_CURRENT_VALUE_REG );
1000356e:	4a19      	ldr	r2, [pc, #100]	; (100035d4 <vPortSuppressTicksAndSleep+0x10c>)
10003570:	6811      	ldr	r1, [r2, #0]
10003572:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
10003576:	6992      	ldr	r2, [r2, #24]
10003578:	1ad3      	subs	r3, r2, r3
1000357a:	440b      	add	r3, r1
1000357c:	3b01      	subs	r3, #1
                if( ( ulCalculatedLoadValue <= ulStoppedTimerCompensation ) || ( ulCalculatedLoadValue > ulTimerCountsForOneTick ) )
1000357e:	4a16      	ldr	r2, [pc, #88]	; (100035d8 <vPortSuppressTicksAndSleep+0x110>)
10003580:	6812      	ldr	r2, [r2, #0]
10003582:	429a      	cmp	r2, r3
10003584:	d201      	bcs.n	1000358a <vPortSuppressTicksAndSleep+0xc2>
10003586:	4299      	cmp	r1, r3
10003588:	d200      	bcs.n	1000358c <vPortSuppressTicksAndSleep+0xc4>
                    ulCalculatedLoadValue = ( ulTimerCountsForOneTick - 1UL );
1000358a:	1e4b      	subs	r3, r1, #1
                portNVIC_SYSTICK_LOAD_REG = ulCalculatedLoadValue;
1000358c:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
10003590:	6153      	str	r3, [r2, #20]
            portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
10003592:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
10003596:	2200      	movs	r2, #0
10003598:	619a      	str	r2, [r3, #24]
            portNVIC_SYSTICK_CTRL_REG = portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT;
1000359a:	2207      	movs	r2, #7
1000359c:	611a      	str	r2, [r3, #16]
                portNVIC_SYSTICK_LOAD_REG = ulTimerCountsForOneTick - 1UL;
1000359e:	4a0d      	ldr	r2, [pc, #52]	; (100035d4 <vPortSuppressTicksAndSleep+0x10c>)
100035a0:	6812      	ldr	r2, [r2, #0]
100035a2:	3a01      	subs	r2, #1
100035a4:	615a      	str	r2, [r3, #20]
            vTaskStepTick( ulCompleteTickPeriods );
100035a6:	f7ff f94b 	bl	10002840 <vTaskStepTick>
            __asm volatile ( "cpsie i" ::: "memory" );
100035aa:	b662      	cpsie	i
    }
100035ac:	e79b      	b.n	100034e6 <vPortSuppressTicksAndSleep+0x1e>
                ulSysTickDecrementsLeft = portNVIC_SYSTICK_CURRENT_VALUE_REG;
100035ae:	f04f 21e0 	mov.w	r1, #3758153728	; 0xe000e000
100035b2:	698b      	ldr	r3, [r1, #24]
                ulCompletedSysTickDecrements = ( xExpectedIdleTime * ulTimerCountsForOneTick ) - ulSysTickDecrementsLeft;
100035b4:	4a07      	ldr	r2, [pc, #28]	; (100035d4 <vPortSuppressTicksAndSleep+0x10c>)
100035b6:	6812      	ldr	r2, [r2, #0]
100035b8:	fb02 f404 	mul.w	r4, r2, r4
100035bc:	1ae0      	subs	r0, r4, r3
                ulCompleteTickPeriods = ulCompletedSysTickDecrements / ulTimerCountsForOneTick;
100035be:	fbb0 f0f2 	udiv	r0, r0, r2
                portNVIC_SYSTICK_LOAD_REG = ( ( ulCompleteTickPeriods + 1UL ) * ulTimerCountsForOneTick ) - ulCompletedSysTickDecrements;
100035c2:	fb00 2202 	mla	r2, r0, r2, r2
100035c6:	1b1c      	subs	r4, r3, r4
100035c8:	4414      	add	r4, r2
100035ca:	614c      	str	r4, [r1, #20]
100035cc:	e7e1      	b.n	10003592 <vPortSuppressTicksAndSleep+0xca>
100035ce:	bf00      	nop
100035d0:	38008d08 	stmdacc	r0, {r3, r8, sl, fp, pc}
100035d4:	38008d04 	stmdacc	r0, {r2, r8, sl, fp, pc}
100035d8:	38008d00 	stmdacc	r0, {r8, sl, fp, pc}

100035dc <vPortSetupTimerInterrupt>:
        ulTimerCountsForOneTick = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ );
100035dc:	4b0b      	ldr	r3, [pc, #44]	; (1000360c <vPortSetupTimerInterrupt+0x30>)
100035de:	f644 6220 	movw	r2, #20000	; 0x4e20
100035e2:	601a      	str	r2, [r3, #0]
        xMaximumPossibleSuppressedTicks = portMAX_24_BIT_NUMBER / ulTimerCountsForOneTick;
100035e4:	4b0a      	ldr	r3, [pc, #40]	; (10003610 <vPortSetupTimerInterrupt+0x34>)
100035e6:	f240 3246 	movw	r2, #838	; 0x346
100035ea:	601a      	str	r2, [r3, #0]
        ulStoppedTimerCompensation = portMISSED_COUNTS_FACTOR / ( configCPU_CLOCK_HZ / configSYSTICK_CLOCK_HZ );
100035ec:	4b09      	ldr	r3, [pc, #36]	; (10003614 <vPortSetupTimerInterrupt+0x38>)
100035ee:	225e      	movs	r2, #94	; 0x5e
100035f0:	601a      	str	r2, [r3, #0]
    portNVIC_SYSTICK_CTRL_REG = portNVIC_SYSTICK_CLK_BIT_CONFIG;
100035f2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
100035f6:	2204      	movs	r2, #4
100035f8:	611a      	str	r2, [r3, #16]
    portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
100035fa:	2200      	movs	r2, #0
100035fc:	619a      	str	r2, [r3, #24]
    portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
100035fe:	f644 621f 	movw	r2, #19999	; 0x4e1f
10003602:	615a      	str	r2, [r3, #20]
    portNVIC_SYSTICK_CTRL_REG = portNVIC_SYSTICK_CLK_BIT_CONFIG | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT;
10003604:	2207      	movs	r2, #7
10003606:	611a      	str	r2, [r3, #16]
}
10003608:	4770      	bx	lr
1000360a:	bf00      	nop
1000360c:	38008d04 	stmdacc	r0, {r2, r8, sl, fp, pc}
10003610:	38008d08 	stmdacc	r0, {r3, r8, sl, fp, pc}
10003614:	38008d00 	stmdacc	r0, {r8, sl, fp, pc}

10003618 <vPortYield>:
/*-----------------------------------------------------------*/

void vPortYield( void ) /* PRIVILEGED_FUNCTION */
{
    /* Set a PendSV to request a context switch. */
    portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
10003618:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
1000361c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
10003620:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04

    /* Barriers are normally not required but do ensure the code is
     * completely within the specified behaviour for the architecture. */
    __asm volatile ( "dsb" ::: "memory" );
10003624:	f3bf 8f4f 	dsb	sy
    __asm volatile ( "isb" );
10003628:	f3bf 8f6f 	isb	sy
}
1000362c:	4770      	bx	lr
	...

10003630 <vPortEnterCritical>:
/*-----------------------------------------------------------*/

void vPortEnterCritical( void ) /* PRIVILEGED_FUNCTION */
{
10003630:	b508      	push	{r3, lr}
    portDISABLE_INTERRUPTS();
10003632:	f000 f8c3 	bl	100037bc <ulSetInterruptMask>
    ulCriticalNesting++;
10003636:	4a04      	ldr	r2, [pc, #16]	; (10003648 <vPortEnterCritical+0x18>)
10003638:	6813      	ldr	r3, [r2, #0]
1000363a:	3301      	adds	r3, #1
1000363c:	6013      	str	r3, [r2, #0]

    /* Barriers are normally not required but do ensure the code is
     * completely within the specified behaviour for the architecture. */
    __asm volatile ( "dsb" ::: "memory" );
1000363e:	f3bf 8f4f 	dsb	sy
    __asm volatile ( "isb" );
10003642:	f3bf 8f6f 	isb	sy
}
10003646:	bd08      	pop	{r3, pc}
10003648:	38000008 	stmdacc	r0, {r3}

1000364c <vPortExitCritical>:
/*-----------------------------------------------------------*/

void vPortExitCritical( void ) /* PRIVILEGED_FUNCTION */
{
1000364c:	b508      	push	{r3, lr}
    configASSERT( ulCriticalNesting );
    ulCriticalNesting--;
1000364e:	4b05      	ldr	r3, [pc, #20]	; (10003664 <vPortExitCritical+0x18>)
10003650:	681a      	ldr	r2, [r3, #0]
10003652:	3a01      	subs	r2, #1
10003654:	601a      	str	r2, [r3, #0]

    if( ulCriticalNesting == 0 )
10003656:	681b      	ldr	r3, [r3, #0]
10003658:	b103      	cbz	r3, 1000365c <vPortExitCritical+0x10>
    {
        portENABLE_INTERRUPTS();
    }
}
1000365a:	bd08      	pop	{r3, pc}
        portENABLE_INTERRUPTS();
1000365c:	2000      	movs	r0, #0
1000365e:	f000 f8b8 	bl	100037d2 <vClearInterruptMask>
}
10003662:	e7fa      	b.n	1000365a <vPortExitCritical+0xe>
10003664:	38000008 	stmdacc	r0, {r3}

10003668 <SysTick_Handler>:
/*-----------------------------------------------------------*/

void SysTick_Handler( void ) /* PRIVILEGED_FUNCTION */
{
10003668:	b510      	push	{r4, lr}
    uint32_t ulPreviousMask;

    ulPreviousMask = portSET_INTERRUPT_MASK_FROM_ISR();
1000366a:	f000 f8a7 	bl	100037bc <ulSetInterruptMask>
1000366e:	4604      	mov	r4, r0
    traceISR_ENTER();
    {
        /* Increment the RTOS tick. */
        if( xTaskIncrementTick() != pdFALSE )
10003670:	f7ff f904 	bl	1000287c <xTaskIncrementTick>
10003674:	b128      	cbz	r0, 10003682 <SysTick_Handler+0x1a>
        {
            traceISR_EXIT_TO_SCHEDULER();
            /* Pend a context switch. */
            portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
10003676:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
1000367a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
1000367e:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
        else
        {
            traceISR_EXIT();
        }
    }
    portCLEAR_INTERRUPT_MASK_FROM_ISR( ulPreviousMask );
10003682:	4620      	mov	r0, r4
10003684:	f000 f8a5 	bl	100037d2 <vClearInterruptMask>
}
10003688:	bd10      	pop	{r4, pc}

1000368a <vPortSVCHandler_C>:
/*-----------------------------------------------------------*/

void vPortSVCHandler_C( uint32_t * pulCallerStackAddress ) /* PRIVILEGED_FUNCTION portDONT_DISCARD */
{
1000368a:	b508      	push	{r3, lr}
    #endif /* configENABLE_TRUSTZONE */
    uint8_t ucSVCNumber;

    /* Register are stored on the stack in the following order - R0, R1, R2, R3,
     * R12, LR, PC, xPSR. */
    ulPC = pulCallerStackAddress[ portOFFSET_TO_PC ];
1000368c:	6983      	ldr	r3, [r0, #24]
    ucSVCNumber = ( ( uint8_t * ) ulPC )[ -2 ];
1000368e:	f813 3c02 	ldrb.w	r3, [r3, #-2]

    switch( ucSVCNumber )
10003692:	2b66      	cmp	r3, #102	; 0x66
10003694:	d000      	beq.n	10003698 <vPortSVCHandler_C+0xe>

        default:
            /* Incorrect SVC call. */
            configASSERT( pdFALSE );
    }
}
10003696:	bd08      	pop	{r3, pc}
            vRestoreContextOfFirstTask();
10003698:	f000 f86a 	bl	10003770 <vRestoreContextOfFirstTask>
}
1000369c:	e7fb      	b.n	10003696 <vPortSVCHandler_C+0xc>
	...

100036a0 <pxPortInitialiseStack>:

    StackType_t * pxPortInitialiseStack( StackType_t * pxTopOfStack,
                                         StackType_t * pxEndOfStack,
                                         TaskFunction_t pxCode,
                                         void * pvParameters ) /* PRIVILEGED_FUNCTION */
    {
100036a0:	b410      	push	{r4}
            #endif /* configENABLE_TRUSTZONE */
        }
        #else /* portPRELOAD_REGISTERS */
        {
            pxTopOfStack--;                                          /* Offset added to account for the way the MCU uses the stack on entry/exit of interrupts. */
            *pxTopOfStack = portINITIAL_XPSR;                        /* xPSR. */
100036a2:	f04f 7480 	mov.w	r4, #16777216	; 0x1000000
100036a6:	f840 4c04 	str.w	r4, [r0, #-4]
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) pxCode;                  /* PC. */
100036aa:	f840 2c08 	str.w	r2, [r0, #-8]
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS; /* LR. */
100036ae:	4a1f      	ldr	r2, [pc, #124]	; (1000372c <pxPortInitialiseStack+0x8c>)
100036b0:	f840 2c0c 	str.w	r2, [r0, #-12]
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x12121212UL;            /* R12. */
100036b4:	f04f 3212 	mov.w	r2, #303174162	; 0x12121212
100036b8:	f840 2c10 	str.w	r2, [r0, #-16]
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x03030303UL;            /* R3. */
100036bc:	f04f 3203 	mov.w	r2, #50529027	; 0x3030303
100036c0:	f840 2c14 	str.w	r2, [r0, #-20]
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x02020202UL;            /* R2. */
100036c4:	f04f 3202 	mov.w	r2, #33686018	; 0x2020202
100036c8:	f840 2c18 	str.w	r2, [r0, #-24]
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x01010101UL;            /* R1. */
100036cc:	f04f 3201 	mov.w	r2, #16843009	; 0x1010101
100036d0:	f840 2c1c 	str.w	r2, [r0, #-28]
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) pvParameters;            /* R0. */
100036d4:	f840 3c20 	str.w	r3, [r0, #-32]
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x11111111UL;            /* R11. */
100036d8:	f04f 3311 	mov.w	r3, #286331153	; 0x11111111
100036dc:	f840 3c24 	str.w	r3, [r0, #-36]
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x10101010UL;            /* R10. */
100036e0:	f04f 3310 	mov.w	r3, #269488144	; 0x10101010
100036e4:	f840 3c28 	str.w	r3, [r0, #-40]
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x09090909UL;            /* R09. */
100036e8:	f04f 3309 	mov.w	r3, #151587081	; 0x9090909
100036ec:	f840 3c2c 	str.w	r3, [r0, #-44]
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x08080808UL;            /* R08. */
100036f0:	f04f 3308 	mov.w	r3, #134744072	; 0x8080808
100036f4:	f840 3c30 	str.w	r3, [r0, #-48]
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x07070707UL;            /* R07. */
100036f8:	f04f 3307 	mov.w	r3, #117901063	; 0x7070707
100036fc:	f840 3c34 	str.w	r3, [r0, #-52]
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x06060606UL;            /* R06. */
10003700:	f04f 3306 	mov.w	r3, #101058054	; 0x6060606
10003704:	f840 3c38 	str.w	r3, [r0, #-56]
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x05050505UL;            /* R05. */
10003708:	f04f 3305 	mov.w	r3, #84215045	; 0x5050505
1000370c:	f840 3c3c 	str.w	r3, [r0, #-60]
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x04040404UL;            /* R04. */
10003710:	f04f 3304 	mov.w	r3, #67372036	; 0x4040404
10003714:	f840 3c40 	str.w	r3, [r0, #-64]
            pxTopOfStack--;
            *pxTopOfStack = portINITIAL_EXC_RETURN;                  /* EXC_RETURN. */
10003718:	f06f 0302 	mvn.w	r3, #2
1000371c:	f840 3c44 	str.w	r3, [r0, #-68]
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) pxEndOfStack;            /* Slot used to hold this task's PSPLIM value. */
10003720:	f840 1c48 	str.w	r1, [r0, #-72]
            #endif /* configENABLE_TRUSTZONE */
        }
        #endif /* portPRELOAD_REGISTERS */

        return pxTopOfStack;
    }
10003724:	3848      	subs	r0, #72	; 0x48
10003726:	f85d 4b04 	ldr.w	r4, [sp], #4
1000372a:	4770      	bx	lr
1000372c:	100034b1 			; <UNDEFINED> instruction: 0x100034b1

10003730 <xPortStartScheduler>:

#endif /* configENABLE_MPU */
/*-----------------------------------------------------------*/

BaseType_t xPortStartScheduler( void ) /* PRIVILEGED_FUNCTION */
{
10003730:	b510      	push	{r4, lr}
    }
    #endif /* #if ( ( configASSERT_DEFINED == 1 ) && ( portHAS_ARMV8M_MAIN_EXTENSION == 1 ) ) */

    /* Make PendSV and SysTick the lowest priority interrupts, and make SVCall
     * the highest priority. */
    portNVIC_SHPR3_REG |= portNVIC_PENDSV_PRI;
10003732:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
10003736:	f8d3 2d20 	ldr.w	r2, [r3, #3360]	; 0xd20
1000373a:	f442 027f 	orr.w	r2, r2, #16711680	; 0xff0000
1000373e:	f8c3 2d20 	str.w	r2, [r3, #3360]	; 0xd20
    portNVIC_SHPR3_REG |= portNVIC_SYSTICK_PRI;
10003742:	f8d3 2d20 	ldr.w	r2, [r3, #3360]	; 0xd20
10003746:	f042 427f 	orr.w	r2, r2, #4278190080	; 0xff000000
1000374a:	f8c3 2d20 	str.w	r2, [r3, #3360]	; 0xd20
    portNVIC_SHPR2_REG = 0;
1000374e:	2400      	movs	r4, #0
10003750:	f8c3 4d1c 	str.w	r4, [r3, #3356]	; 0xd1c
    }
    #endif /* configENABLE_MPU */

    /* Start the timer that generates the tick ISR. Interrupts are disabled
     * here already. */
    vPortSetupTimerInterrupt();
10003754:	f7ff ff42 	bl	100035dc <vPortSetupTimerInterrupt>

    /* Initialize the critical nesting count ready for the first task. */
    ulCriticalNesting = 0;
10003758:	4b04      	ldr	r3, [pc, #16]	; (1000376c <xPortStartScheduler+0x3c>)
1000375a:	601c      	str	r4, [r3, #0]
        xSchedulerRunning = pdTRUE;
    }
    #endif /* ( ( configENABLE_MPU == 1 ) && ( configUSE_MPU_WRAPPERS_V1 == 0 ) ) */

    /* Start the first task. */
    vStartFirstTask();
1000375c:	f000 f81e 	bl	1000379c <vStartFirstTask>
     * exit error function to prevent compiler warnings about a static function
     * not being called in the case that the application writer overrides this
     * functionality by defining configTASK_RETURN_ADDRESS. Call
     * vTaskSwitchContext() so link time optimization does not remove the
     * symbol. */
    vTaskSwitchContext();
10003760:	f7ff fa00 	bl	10002b64 <vTaskSwitchContext>
    prvTaskExitError();
10003764:	f7ff fea4 	bl	100034b0 <prvTaskExitError>

    /* Should not get here. */
    return 0;
}
10003768:	4620      	mov	r0, r4
1000376a:	bd10      	pop	{r4, pc}
1000376c:	38000008 	stmdacc	r0, {r3}

10003770 <vRestoreContextOfFirstTask>:

#else /* configENABLE_MPU */

    void vRestoreContextOfFirstTask( void ) /* __attribute__ (( naked )) PRIVILEGED_FUNCTION */
    {
        __asm volatile
10003770:	4a09      	ldr	r2, [pc, #36]	; (10003798 <vRestoreContextOfFirstTask+0x28>)
10003772:	6811      	ldr	r1, [r2, #0]
10003774:	6808      	ldr	r0, [r1, #0]
10003776:	c806      	ldmia	r0!, {r1, r2}
10003778:	f381 880b 	msr	PSPLIM, r1
1000377c:	2102      	movs	r1, #2
1000377e:	f381 8814 	msr	CONTROL, r1
10003782:	3020      	adds	r0, #32
10003784:	f380 8809 	msr	PSP, r0
10003788:	f3bf 8f6f 	isb	sy
1000378c:	f04f 0000 	mov.w	r0, #0
10003790:	f380 8811 	msr	BASEPRI, r0
10003794:	4710      	bx	r2
            "   isb                                             \n"
            "   mov  r0, #0                                     \n"
            "   msr  basepri, r0                                \n" /* Ensure that interrupts are enabled when the first task starts. */
            "   bx   r2                                         \n" /* Finally, branch to EXC_RETURN. */
        );
    }
10003796:	85b00000 	ldrhi	r0, [r0, #0]!
1000379a:	 	stmdami	r6, {fp, ip, sp}

1000379c <vStartFirstTask>:
}
/*-----------------------------------------------------------*/

void vStartFirstTask( void ) /* __attribute__ (( naked )) PRIVILEGED_FUNCTION */
{
    __asm volatile
1000379c:	4806      	ldr	r0, [pc, #24]	; (100037b8 <vStartFirstTask+0x1c>)
1000379e:	6800      	ldr	r0, [r0, #0]
100037a0:	6800      	ldr	r0, [r0, #0]
100037a2:	f380 8808 	msr	MSP, r0
100037a6:	b662      	cpsie	i
100037a8:	b661      	cpsie	f
100037aa:	f3bf 8f4f 	dsb	sy
100037ae:	f3bf 8f6f 	isb	sy
100037b2:	df66      	svc	102	; 0x66
100037b4:	bf00      	nop
        "   isb                                             \n"
        "   svc %0                                          \n" /* System call to start the first task. */
        "   nop                                             \n"
        ::"i" ( portSVC_START_SCHEDULER ) : "memory"
    );
}
100037b6:	ed080000 	stc	0, cr0, [r8, #-0]
100037ba:	 	vaddl.u32	q15, d15, d0

100037bc <ulSetInterruptMask>:
/*-----------------------------------------------------------*/

uint32_t ulSetInterruptMask( void ) /* __attribute__(( naked )) PRIVILEGED_FUNCTION */
{
    __asm volatile
100037bc:	f3ef 8011 	mrs	r0, BASEPRI
100037c0:	f04f 01bf 	mov.w	r1, #191	; 0xbf
100037c4:	f381 8811 	msr	BASEPRI, r1
100037c8:	f3bf 8f4f 	dsb	sy
100037cc:	f3bf 8f6f 	isb	sy
100037d0:	4770      	bx	lr

100037d2 <vClearInterruptMask>:
}
/*-----------------------------------------------------------*/

void vClearInterruptMask( __attribute__( ( unused ) ) uint32_t ulMask ) /* __attribute__(( naked )) PRIVILEGED_FUNCTION */
{
    __asm volatile
100037d2:	f380 8811 	msr	BASEPRI, r0
100037d6:	f3bf 8f4f 	dsb	sy
100037da:	f3bf 8f6f 	isb	sy
100037de:	4770      	bx	lr

100037e0 <PendSV_Handler>:

#else /* configENABLE_MPU */

    void PendSV_Handler( void ) /* __attribute__ (( naked )) PRIVILEGED_FUNCTION */
    {
        __asm volatile
100037e0:	f3ef 8009 	mrs	r0, PSP
100037e4:	f3ef 820b 	mrs	r2, PSPLIM
100037e8:	4673      	mov	r3, lr
100037ea:	e920 0ffc 	stmdb	r0!, {r2, r3, r4, r5, r6, r7, r8, r9, sl, fp}
100037ee:	4a0d      	ldr	r2, [pc, #52]	; (10003824 <PendSV_Handler+0x44>)
100037f0:	6811      	ldr	r1, [r2, #0]
100037f2:	6008      	str	r0, [r1, #0]
100037f4:	f04f 00bf 	mov.w	r0, #191	; 0xbf
100037f8:	f380 8811 	msr	BASEPRI, r0
100037fc:	f3bf 8f4f 	dsb	sy
10003800:	f3bf 8f6f 	isb	sy
10003804:	f7ff f9ae 	bl	10002b64 <vTaskSwitchContext>
10003808:	f04f 0000 	mov.w	r0, #0
1000380c:	f380 8811 	msr	BASEPRI, r0
10003810:	4a04      	ldr	r2, [pc, #16]	; (10003824 <PendSV_Handler+0x44>)
10003812:	6811      	ldr	r1, [r2, #0]
10003814:	6808      	ldr	r0, [r1, #0]
10003816:	e8b0 0ffc 	ldmia.w	r0!, {r2, r3, r4, r5, r6, r7, r8, r9, sl, fp}
1000381a:	f382 880b 	msr	PSPLIM, r2
1000381e:	f380 8809 	msr	PSP, r0
10003822:	4718      	bx	r3
            "   msr psplim, r2                                  \n" /* Restore the PSPLIM register value for the task. */
            "   msr psp, r0                                     \n" /* Remember the new top of stack for the task. */
            "   bx r3                                           \n"
            ::"i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY )
        );
    }
10003824:	380085b0 	stmdacc	r0, {r4, r5, r7, r8, sl, pc}

10003828 <SVC_Handler>:

#else /* ( configENABLE_MPU == 1 ) && ( configUSE_MPU_WRAPPERS_V1 == 0 ) */

    void SVC_Handler( void ) /* __attribute__ (( naked )) PRIVILEGED_FUNCTION */
    {
        __asm volatile
10003828:	f01e 0f04 	tst.w	lr, #4
1000382c:	bf0c      	ite	eq
1000382e:	f3ef 8008 	mrseq	r0, MSP
10003832:	f3ef 8009 	mrsne	r0, PSP
10003836:	4901      	ldr	r1, [pc, #4]	; (1000383c <SVC_Handler+0x14>)
10003838:	4708      	bx	r1
            "   mrseq r0, msp                                   \n"
            "   mrsne r0, psp                                   \n"
            "   ldr r1, =vPortSVCHandler_C                      \n"
            "   bx r1                                           \n"
        );
    }
1000383a:	368b0000 	strcc	r0, [fp], r0
1000383e:	 	andcs	r1, r1, r0

10003840 <_getpid>:
10003840:	2001      	movs	r0, #1
10003842:	4770      	bx	lr

10003844 <_kill>:
10003844:	b508      	push	{r3, lr}
10003846:	f000 f867 	bl	10003918 <__errno>
1000384a:	2316      	movs	r3, #22
1000384c:	6003      	str	r3, [r0, #0]
1000384e:	f04f 30ff 	mov.w	r0, #4294967295
10003852:	bd08      	pop	{r3, pc}

10003854 <_exit>:
10003854:	b508      	push	{r3, lr}
10003856:	f04f 31ff 	mov.w	r1, #4294967295
1000385a:	f7ff fff3 	bl	10003844 <_kill>
1000385e:	e7fe      	b.n	1000385e <_exit+0xa>

10003860 <Reset_Handler>:
                .thumb_func
                .type    Reset_Handler, %function
                .globl   Reset_Handler
                .fnstart
Reset_Handler:
                ldr      r0, =__INITIAL_SP
10003860:	4815      	ldr	r0, [pc, #84]	; (100038b8 <BusFault_Handler+0x4>)
                msr      psp, r0
10003862:	f380 8809 	msr	PSP, r0

                ldr      r0, =__STACK_LIMIT
10003866:	4815      	ldr	r0, [pc, #84]	; (100038bc <BusFault_Handler+0x8>)
                msr      msplim, r0
10003868:	f380 880a 	msr	MSPLIM, r0
                msr      psplim, r0
1000386c:	f380 880b 	msr	PSPLIM, r0
                ldr      r0, =__STACK_SEAL
                ldr      r1, =0xFEF5EDA5U
                strd     r1,r1,[r0,#0]
                #endif

                bl       SystemInit
10003870:	f7fd f8b4 	bl	100009dc <SystemInit>

                ldr      r4, =__copy_table_start__
10003874:	4c12      	ldr	r4, [pc, #72]	; (100038c0 <BusFault_Handler+0xc>)
                ldr      r5, =__copy_table_end__
10003876:	4d13      	ldr	r5, [pc, #76]	; (100038c4 <BusFault_Handler+0x10>)

.L_loop0:
                cmp      r4, r5
10003878:	42ac      	cmp	r4, r5
                bge      .L_loop0_done
1000387a:	da0a      	bge.n	10003892 <Reset_Handler+0x32>
                ldr      r1, [r4]                /* source address */
1000387c:	6821      	ldr	r1, [r4, #0]
                ldr      r2, [r4, #4]            /* destination address */
1000387e:	6862      	ldr	r2, [r4, #4]
                ldr      r3, [r4, #8]            /* word count */
10003880:	68a3      	ldr	r3, [r4, #8]
                lsls     r3, r3, #2              /* byte count */
10003882:	009b      	lsls	r3, r3, #2

.L_loop0_0:
                subs     r3, #4                  /* decrement byte count */
10003884:	3b04      	subs	r3, #4
                ittt     ge
10003886:	bfa2      	ittt	ge
                ldrge    r0, [r1, r3]
10003888:	58c8      	ldrge	r0, [r1, r3]
                strge    r0, [r2, r3]
1000388a:	50d0      	strge	r0, [r2, r3]
                bge      .L_loop0_0
1000388c:	e7fa      	bge.n	10003884 <Reset_Handler+0x24>

                adds     r4, #12
1000388e:	340c      	adds	r4, #12
                b        .L_loop0
10003890:	e7f2      	b.n	10003878 <Reset_Handler+0x18>
.L_loop0_done:

                ldr      r3, =__zero_table_start__
10003892:	4b0d      	ldr	r3, [pc, #52]	; (100038c8 <BusFault_Handler+0x14>)
                ldr      r4, =__zero_table_end__
10003894:	4c0d      	ldr	r4, [pc, #52]	; (100038cc <BusFault_Handler+0x18>)

.L_loop2:
                cmp      r3, r4
10003896:	42a3      	cmp	r3, r4
                bge      .L_loop2_done
10003898:	da09      	bge.n	100038ae <Reset_Handler+0x4e>
                ldr      r1, [r3]                /* destination address */
1000389a:	6819      	ldr	r1, [r3, #0]
                ldr      r2, [r3, #4]            /* word count */
1000389c:	685a      	ldr	r2, [r3, #4]
                lsls     r2, r2, #2              /* byte count */
1000389e:	0092      	lsls	r2, r2, #2
                movs     r0, 0
100038a0:	2000      	movs	r0, #0

.L_loop2_0:
                subs     r2, #4                  /* decrement byte count */
100038a2:	3a04      	subs	r2, #4
                itt      ge
100038a4:	bfa4      	itt	ge
                strge    r0, [r1, r2]
100038a6:	5088      	strge	r0, [r1, r2]
                bge      .L_loop2_0
100038a8:	e7fb      	bge.n	100038a2 <Reset_Handler+0x42>

                adds     r3, #8
100038aa:	3308      	adds	r3, #8
                b        .L_loop2
100038ac:	e7f3      	b.n	10003896 <Reset_Handler+0x36>
.L_loop2_done:

                bl       main
100038ae:	f7fd f87f 	bl	100009b0 <main>
                .thumb_func
                .type    HardFault_Handler, %function
                .weak    HardFault_Handler
                .fnstart
HardFault_Handler:
                b        .
100038b2:	e7fe      	b.n	100038b2 <Reset_Handler+0x52>

100038b4 <BusFault_Handler>:
                .thumb_func
                .type    Default_Handler, %function
                .weak    Default_Handler
                .fnstart
Default_Handler:
                b        .
100038b4:	e7fe      	b.n	100038b4 <BusFault_Handler>
100038b6:	00000000 	andeq	r0, r0, r0
                ldr      r0, =__INITIAL_SP
100038ba:	f0003810 			; <UNDEFINED> instruction: 0xf0003810
                ldr      r0, =__STACK_LIMIT
100038be:	5e78380f 	cdppl	8, 7, cr3, cr8, cr15, {0}
                ldr      r4, =__copy_table_start__
100038c2:	5e841000 	cdppl	0, 8, cr1, cr4, cr0, {0}
                ldr      r5, =__copy_table_end__
100038c6:	5e841000 	cdppl	0, 8, cr1, cr4, cr0, {0}
                ldr      r3, =__zero_table_start__
100038ca:	5e841000 	cdppl	0, 8, cr1, cr4, cr0, {0}
                ldr      r4, =__zero_table_end__
100038ce:	 	ldrbtlt	r1, [r2], -r0

100038d0 <HardFault_Handler>:
.global fault_dump_handler

.global HardFault_Handler
.type HardFault_Handler, % function
HardFault_Handler:
    cpsid   i                           /* disable interrupts */
100038d0:	b672      	cpsid	i
    ldr     r3, =fd_main_stack_base     /* r3 = &fd_main_stack_base */
100038d2:	4b0e      	ldr	r3, [pc, #56]	; (1000390c <stack_invalid+0xe>)
    ldr     r1, [r3]                    /* r1 = fd_main_stack_base  */
100038d4:	6819      	ldr	r1, [r3, #0]
    ldr     r3, =fd_main_stack_full     /* r3 = &fd_main_stack_full */
100038d6:	4b0e      	ldr	r3, [pc, #56]	; (10003910 <stack_invalid+0x12>)
    ldr     r2, [r3]                    /* r2 = fd_main_stack_full  */
100038d8:	681a      	ldr	r2, [r3, #0]

    tst     lr, #4                      /* use exc_return value get sp value */
100038da:	f01e 0f04 	tst.w	lr, #4
    bne     stack_checked               /* if (sp != msp), jump to stack_checked */
100038de:	d105      	bne.n	100038ec <stack_checked>

    mrs     r0, msp                     /* else (sp == msp), r0 = sp = msp */
100038e0:	f3ef 8008 	mrs	r0, MSP
    cmp     r0, r1                      /* compare msp and stack base addr */
100038e4:	4288      	cmp	r0, r1
    blt     stack_invalid               /* msp < stack_base_addr, msp is invalid */
100038e6:	db0a      	blt.n	100038fe <stack_invalid>
    cmp     r0, r2                      /* compare msp and stack full addr */
100038e8:	4290      	cmp	r0, r2
    bgt     stack_invalid               /* msp > stack_base_addr, msp is invalid */
100038ea:	dc08      	bgt.n	100038fe <stack_invalid>

100038ec <stack_checked>:
    
stack_checked:
    push    {r4 - r11}                  /* sp value is in stack range, push r4 - r11 to stack */
100038ec:	e92d 0ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}

    tst     lr, #4                      /* update sp value to r0 */
100038f0:	f01e 0f04 	tst.w	lr, #4
    ite     eq
100038f4:	bf0c      	ite	eq
    mrseq   r0, msp                     /* lr & 0x04 == 1, r0 = sp = msp */
100038f6:	f3ef 8008 	mrseq	r0, MSP
    mrsne   r0, psp                     /* lr & 0x04 == 0, r0 = sp = psp */
100038fa:	f3ef 8009 	mrsne	r0, PSP

100038fe <stack_invalid>:

stack_invalid:
    mov     r1, lr                      /* now, r0 = sp, r1 = lr */
100038fe:	4671      	mov	r1, lr
    ldr     r2, =fault_dump_handler     /* now, r2 = fault_dump_handler */
10003900:	4a04      	ldr	r2, [pc, #16]	; (10003914 <stack_invalid+0x16>)
    dsb                                 /* wait for memory access to complete */
10003902:	f3bf 8f4f 	dsb	sy
    cpsie   i                           /* enable interrupts */
10003906:	b662      	cpsie	i
    bx      r2                          /* jump to fault_dump_handler */
10003908:	4710      	bx	r2
1000390a:	85680000 	strbhi	r0, [r8, #-0]!
    ldr     r3, =fd_main_stack_base     /* r3 = &fd_main_stack_base */
1000390e:	856c3800 	strbhi	r3, [ip, #-2048]!	; 0xfffff800
    ldr     r3, =fd_main_stack_full     /* r3 = &fd_main_stack_full */
10003912:	1d213800 	stcne	8, cr3, [r1, #-0]
    ldr     r2, =fault_dump_handler     /* now, r2 = fault_dump_handler */
10003916:	 	blmi	1004791e <__copy_table_end__+0x41a9a>

10003918 <__errno>:
10003918:	4b01      	ldr	r3, [pc, #4]	; (10003920 <__errno+0x8>)
1000391a:	6818      	ldr	r0, [r3, #0]
1000391c:	4770      	bx	lr
1000391e:	bf00      	nop
10003920:	3800000c 	stmdacc	r0, {r2, r3}

10003924 <memcpy>:
10003924:	4684      	mov	ip, r0
10003926:	ea41 0300 	orr.w	r3, r1, r0
1000392a:	f013 0303 	ands.w	r3, r3, #3
1000392e:	d149      	bne.n	100039c4 <memcpy+0xa0>
10003930:	3a40      	subs	r2, #64	; 0x40
10003932:	d323      	bcc.n	1000397c <memcpy+0x58>
10003934:	680b      	ldr	r3, [r1, #0]
10003936:	6003      	str	r3, [r0, #0]
10003938:	684b      	ldr	r3, [r1, #4]
1000393a:	6043      	str	r3, [r0, #4]
1000393c:	688b      	ldr	r3, [r1, #8]
1000393e:	6083      	str	r3, [r0, #8]
10003940:	68cb      	ldr	r3, [r1, #12]
10003942:	60c3      	str	r3, [r0, #12]
10003944:	690b      	ldr	r3, [r1, #16]
10003946:	6103      	str	r3, [r0, #16]
10003948:	694b      	ldr	r3, [r1, #20]
1000394a:	6143      	str	r3, [r0, #20]
1000394c:	698b      	ldr	r3, [r1, #24]
1000394e:	6183      	str	r3, [r0, #24]
10003950:	69cb      	ldr	r3, [r1, #28]
10003952:	61c3      	str	r3, [r0, #28]
10003954:	6a0b      	ldr	r3, [r1, #32]
10003956:	6203      	str	r3, [r0, #32]
10003958:	6a4b      	ldr	r3, [r1, #36]	; 0x24
1000395a:	6243      	str	r3, [r0, #36]	; 0x24
1000395c:	6a8b      	ldr	r3, [r1, #40]	; 0x28
1000395e:	6283      	str	r3, [r0, #40]	; 0x28
10003960:	6acb      	ldr	r3, [r1, #44]	; 0x2c
10003962:	62c3      	str	r3, [r0, #44]	; 0x2c
10003964:	6b0b      	ldr	r3, [r1, #48]	; 0x30
10003966:	6303      	str	r3, [r0, #48]	; 0x30
10003968:	6b4b      	ldr	r3, [r1, #52]	; 0x34
1000396a:	6343      	str	r3, [r0, #52]	; 0x34
1000396c:	6b8b      	ldr	r3, [r1, #56]	; 0x38
1000396e:	6383      	str	r3, [r0, #56]	; 0x38
10003970:	6bcb      	ldr	r3, [r1, #60]	; 0x3c
10003972:	63c3      	str	r3, [r0, #60]	; 0x3c
10003974:	3040      	adds	r0, #64	; 0x40
10003976:	3140      	adds	r1, #64	; 0x40
10003978:	3a40      	subs	r2, #64	; 0x40
1000397a:	d2db      	bcs.n	10003934 <memcpy+0x10>
1000397c:	3230      	adds	r2, #48	; 0x30
1000397e:	d30b      	bcc.n	10003998 <memcpy+0x74>
10003980:	680b      	ldr	r3, [r1, #0]
10003982:	6003      	str	r3, [r0, #0]
10003984:	684b      	ldr	r3, [r1, #4]
10003986:	6043      	str	r3, [r0, #4]
10003988:	688b      	ldr	r3, [r1, #8]
1000398a:	6083      	str	r3, [r0, #8]
1000398c:	68cb      	ldr	r3, [r1, #12]
1000398e:	60c3      	str	r3, [r0, #12]
10003990:	3010      	adds	r0, #16
10003992:	3110      	adds	r1, #16
10003994:	3a10      	subs	r2, #16
10003996:	d2f3      	bcs.n	10003980 <memcpy+0x5c>
10003998:	320c      	adds	r2, #12
1000399a:	d305      	bcc.n	100039a8 <memcpy+0x84>
1000399c:	f851 3b04 	ldr.w	r3, [r1], #4
100039a0:	f840 3b04 	str.w	r3, [r0], #4
100039a4:	3a04      	subs	r2, #4
100039a6:	d2f9      	bcs.n	1000399c <memcpy+0x78>
100039a8:	3204      	adds	r2, #4
100039aa:	d008      	beq.n	100039be <memcpy+0x9a>
100039ac:	07d2      	lsls	r2, r2, #31
100039ae:	bf1c      	itt	ne
100039b0:	f811 3b01 	ldrbne.w	r3, [r1], #1
100039b4:	f800 3b01 	strbne.w	r3, [r0], #1
100039b8:	d301      	bcc.n	100039be <memcpy+0x9a>
100039ba:	880b      	ldrh	r3, [r1, #0]
100039bc:	8003      	strh	r3, [r0, #0]
100039be:	4660      	mov	r0, ip
100039c0:	4770      	bx	lr
100039c2:	bf00      	nop
100039c4:	2a08      	cmp	r2, #8
100039c6:	d313      	bcc.n	100039f0 <memcpy+0xcc>
100039c8:	078b      	lsls	r3, r1, #30
100039ca:	d0b1      	beq.n	10003930 <memcpy+0xc>
100039cc:	f010 0303 	ands.w	r3, r0, #3
100039d0:	d0ae      	beq.n	10003930 <memcpy+0xc>
100039d2:	f1c3 0304 	rsb	r3, r3, #4
100039d6:	1ad2      	subs	r2, r2, r3
100039d8:	07db      	lsls	r3, r3, #31
100039da:	bf1c      	itt	ne
100039dc:	f811 3b01 	ldrbne.w	r3, [r1], #1
100039e0:	f800 3b01 	strbne.w	r3, [r0], #1
100039e4:	d3a4      	bcc.n	10003930 <memcpy+0xc>
100039e6:	f831 3b02 	ldrh.w	r3, [r1], #2
100039ea:	f820 3b02 	strh.w	r3, [r0], #2
100039ee:	e79f      	b.n	10003930 <memcpy+0xc>
100039f0:	3a04      	subs	r2, #4
100039f2:	d3d9      	bcc.n	100039a8 <memcpy+0x84>
100039f4:	3a01      	subs	r2, #1
100039f6:	f811 3b01 	ldrb.w	r3, [r1], #1
100039fa:	f800 3b01 	strb.w	r3, [r0], #1
100039fe:	d2f9      	bcs.n	100039f4 <memcpy+0xd0>
10003a00:	780b      	ldrb	r3, [r1, #0]
10003a02:	7003      	strb	r3, [r0, #0]
10003a04:	784b      	ldrb	r3, [r1, #1]
10003a06:	7043      	strb	r3, [r0, #1]
10003a08:	788b      	ldrb	r3, [r1, #2]
10003a0a:	7083      	strb	r3, [r0, #2]
10003a0c:	4660      	mov	r0, ip
10003a0e:	4770      	bx	lr

10003a10 <memset>:
10003a10:	b570      	push	{r4, r5, r6, lr}
10003a12:	0786      	lsls	r6, r0, #30
10003a14:	d048      	beq.n	10003aa8 <memset+0x98>
10003a16:	1e54      	subs	r4, r2, #1
10003a18:	2a00      	cmp	r2, #0
10003a1a:	d03f      	beq.n	10003a9c <memset+0x8c>
10003a1c:	b2ca      	uxtb	r2, r1
10003a1e:	4603      	mov	r3, r0
10003a20:	e001      	b.n	10003a26 <memset+0x16>
10003a22:	3c01      	subs	r4, #1
10003a24:	d33a      	bcc.n	10003a9c <memset+0x8c>
10003a26:	f803 2b01 	strb.w	r2, [r3], #1
10003a2a:	079d      	lsls	r5, r3, #30
10003a2c:	d1f9      	bne.n	10003a22 <memset+0x12>
10003a2e:	2c03      	cmp	r4, #3
10003a30:	d92d      	bls.n	10003a8e <memset+0x7e>
10003a32:	b2cd      	uxtb	r5, r1
10003a34:	2c0f      	cmp	r4, #15
10003a36:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
10003a3a:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
10003a3e:	d936      	bls.n	10003aae <memset+0x9e>
10003a40:	f1a4 0c10 	sub.w	ip, r4, #16
10003a44:	f103 0e20 	add.w	lr, r3, #32
10003a48:	f103 0210 	add.w	r2, r3, #16
10003a4c:	f02c 060f 	bic.w	r6, ip, #15
10003a50:	ea4f 1c1c 	mov.w	ip, ip, lsr #4
10003a54:	44b6      	add	lr, r6
10003a56:	e942 5504 	strd	r5, r5, [r2, #-16]
10003a5a:	e942 5502 	strd	r5, r5, [r2, #-8]
10003a5e:	3210      	adds	r2, #16
10003a60:	4572      	cmp	r2, lr
10003a62:	d1f8      	bne.n	10003a56 <memset+0x46>
10003a64:	f10c 0201 	add.w	r2, ip, #1
10003a68:	f014 0f0c 	tst.w	r4, #12
10003a6c:	f004 0c0f 	and.w	ip, r4, #15
10003a70:	eb03 1202 	add.w	r2, r3, r2, lsl #4
10003a74:	d013      	beq.n	10003a9e <memset+0x8e>
10003a76:	f1ac 0304 	sub.w	r3, ip, #4
10003a7a:	f023 0303 	bic.w	r3, r3, #3
10003a7e:	3304      	adds	r3, #4
10003a80:	4413      	add	r3, r2
10003a82:	f842 5b04 	str.w	r5, [r2], #4
10003a86:	4293      	cmp	r3, r2
10003a88:	d1fb      	bne.n	10003a82 <memset+0x72>
10003a8a:	f00c 0403 	and.w	r4, ip, #3
10003a8e:	b12c      	cbz	r4, 10003a9c <memset+0x8c>
10003a90:	b2ca      	uxtb	r2, r1
10003a92:	441c      	add	r4, r3
10003a94:	f803 2b01 	strb.w	r2, [r3], #1
10003a98:	429c      	cmp	r4, r3
10003a9a:	d1fb      	bne.n	10003a94 <memset+0x84>
10003a9c:	bd70      	pop	{r4, r5, r6, pc}
10003a9e:	4664      	mov	r4, ip
10003aa0:	4613      	mov	r3, r2
10003aa2:	2c00      	cmp	r4, #0
10003aa4:	d1f4      	bne.n	10003a90 <memset+0x80>
10003aa6:	e7f9      	b.n	10003a9c <memset+0x8c>
10003aa8:	4603      	mov	r3, r0
10003aaa:	4614      	mov	r4, r2
10003aac:	e7bf      	b.n	10003a2e <memset+0x1e>
10003aae:	461a      	mov	r2, r3
10003ab0:	46a4      	mov	ip, r4
10003ab2:	e7e0      	b.n	10003a76 <memset+0x66>

10003ab4 <register_fini>:
10003ab4:	4b02      	ldr	r3, [pc, #8]	; (10003ac0 <register_fini+0xc>)
10003ab6:	b113      	cbz	r3, 10003abe <register_fini+0xa>
10003ab8:	4802      	ldr	r0, [pc, #8]	; (10003ac4 <register_fini+0x10>)
10003aba:	f000 b805 	b.w	10003ac8 <atexit>
10003abe:	4770      	bx	lr
10003ac0:	00000000 	andeq	r0, r0, r0
10003ac4:	10003ad5 	ldrdne	r3, [r0], -r5

10003ac8 <atexit>:
10003ac8:	2300      	movs	r3, #0
10003aca:	4601      	mov	r1, r0
10003acc:	461a      	mov	r2, r3
10003ace:	4618      	mov	r0, r3
10003ad0:	f000 b81a 	b.w	10003b08 <__register_exitproc>

10003ad4 <__libc_fini_array>:
10003ad4:	b538      	push	{r3, r4, r5, lr}
10003ad6:	4b08      	ldr	r3, [pc, #32]	; (10003af8 <__libc_fini_array+0x24>)
10003ad8:	4d08      	ldr	r5, [pc, #32]	; (10003afc <__libc_fini_array+0x28>)
10003ada:	1b5b      	subs	r3, r3, r5
10003adc:	109c      	asrs	r4, r3, #2
10003ade:	d007      	beq.n	10003af0 <__libc_fini_array+0x1c>
10003ae0:	3b04      	subs	r3, #4
10003ae2:	441d      	add	r5, r3
10003ae4:	3c01      	subs	r4, #1
10003ae6:	f855 3904 	ldr.w	r3, [r5], #-4
10003aea:	4798      	blx	r3
10003aec:	2c00      	cmp	r4, #0
10003aee:	d1f9      	bne.n	10003ae4 <__libc_fini_array+0x10>
10003af0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
10003af4:	f001 be84 	b.w	10005800 <_fini>
10003af8:	38000448 	stmdacc	r0, {r3, r6, sl}
10003afc:	38000444 	stmdacc	r0, {r2, r6, sl}

10003b00 <__retarget_lock_acquire_recursive>:
10003b00:	4770      	bx	lr
10003b02:	bf00      	nop

10003b04 <__retarget_lock_release_recursive>:
10003b04:	4770      	bx	lr
10003b06:	bf00      	nop

10003b08 <__register_exitproc>:
10003b08:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
10003b0c:	f8df a084 	ldr.w	sl, [pc, #132]	; 10003b94 <__register_exitproc+0x8c>
10003b10:	4606      	mov	r6, r0
10003b12:	4698      	mov	r8, r3
10003b14:	460f      	mov	r7, r1
10003b16:	f8da 0000 	ldr.w	r0, [sl]
10003b1a:	4691      	mov	r9, r2
10003b1c:	f7ff fff0 	bl	10003b00 <__retarget_lock_acquire_recursive>
10003b20:	4b1b      	ldr	r3, [pc, #108]	; (10003b90 <__register_exitproc+0x88>)
10003b22:	681b      	ldr	r3, [r3, #0]
10003b24:	f8d3 4148 	ldr.w	r4, [r3, #328]	; 0x148
10003b28:	b334      	cbz	r4, 10003b78 <__register_exitproc+0x70>
10003b2a:	6865      	ldr	r5, [r4, #4]
10003b2c:	2d1f      	cmp	r5, #31
10003b2e:	dc28      	bgt.n	10003b82 <__register_exitproc+0x7a>
10003b30:	b95e      	cbnz	r6, 10003b4a <__register_exitproc+0x42>
10003b32:	1c6b      	adds	r3, r5, #1
10003b34:	3502      	adds	r5, #2
10003b36:	f8da 0000 	ldr.w	r0, [sl]
10003b3a:	6063      	str	r3, [r4, #4]
10003b3c:	f844 7025 	str.w	r7, [r4, r5, lsl #2]
10003b40:	f7ff ffe0 	bl	10003b04 <__retarget_lock_release_recursive>
10003b44:	2000      	movs	r0, #0
10003b46:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
10003b4a:	eb04 0185 	add.w	r1, r4, r5, lsl #2
10003b4e:	2301      	movs	r3, #1
10003b50:	2e02      	cmp	r6, #2
10003b52:	f8c1 9088 	str.w	r9, [r1, #136]	; 0x88
10003b56:	fa03 f305 	lsl.w	r3, r3, r5
10003b5a:	f8d4 2188 	ldr.w	r2, [r4, #392]	; 0x188
10003b5e:	ea42 0203 	orr.w	r2, r2, r3
10003b62:	f8c4 2188 	str.w	r2, [r4, #392]	; 0x188
10003b66:	f8c1 8108 	str.w	r8, [r1, #264]	; 0x108
10003b6a:	d1e2      	bne.n	10003b32 <__register_exitproc+0x2a>
10003b6c:	f8d4 218c 	ldr.w	r2, [r4, #396]	; 0x18c
10003b70:	4313      	orrs	r3, r2
10003b72:	f8c4 318c 	str.w	r3, [r4, #396]	; 0x18c
10003b76:	e7dc      	b.n	10003b32 <__register_exitproc+0x2a>
10003b78:	f503 74a6 	add.w	r4, r3, #332	; 0x14c
10003b7c:	f8c3 4148 	str.w	r4, [r3, #328]	; 0x148
10003b80:	e7d3      	b.n	10003b2a <__register_exitproc+0x22>
10003b82:	f8da 0000 	ldr.w	r0, [sl]
10003b86:	f7ff ffbd 	bl	10003b04 <__retarget_lock_release_recursive>
10003b8a:	f04f 30ff 	mov.w	r0, #4294967295
10003b8e:	e7da      	b.n	10003b46 <__register_exitproc+0x3e>
10003b90:	10005d98 	mulne	r0, r8, sp
10003b94:	38000438 	stmdacc	r0, {r3, r4, r5, sl}

10003b98 <__aeabi_drsub>:
10003b98:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
10003b9c:	e002      	b.n	10003ba4 <__adddf3>
10003b9e:	bf00      	nop

10003ba0 <__aeabi_dsub>:
10003ba0:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

10003ba4 <__adddf3>:
10003ba4:	b530      	push	{r4, r5, lr}
10003ba6:	ea4f 0441 	mov.w	r4, r1, lsl #1
10003baa:	ea4f 0543 	mov.w	r5, r3, lsl #1
10003bae:	ea94 0f05 	teq	r4, r5
10003bb2:	bf08      	it	eq
10003bb4:	ea90 0f02 	teqeq	r0, r2
10003bb8:	bf1f      	itttt	ne
10003bba:	ea54 0c00 	orrsne.w	ip, r4, r0
10003bbe:	ea55 0c02 	orrsne.w	ip, r5, r2
10003bc2:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
10003bc6:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
10003bca:	f000 80e2 	beq.w	10003d92 <__adddf3+0x1ee>
10003bce:	ea4f 5454 	mov.w	r4, r4, lsr #21
10003bd2:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
10003bd6:	bfb8      	it	lt
10003bd8:	426d      	neglt	r5, r5
10003bda:	dd0c      	ble.n	10003bf6 <__adddf3+0x52>
10003bdc:	442c      	add	r4, r5
10003bde:	ea80 0202 	eor.w	r2, r0, r2
10003be2:	ea81 0303 	eor.w	r3, r1, r3
10003be6:	ea82 0000 	eor.w	r0, r2, r0
10003bea:	ea83 0101 	eor.w	r1, r3, r1
10003bee:	ea80 0202 	eor.w	r2, r0, r2
10003bf2:	ea81 0303 	eor.w	r3, r1, r3
10003bf6:	2d36      	cmp	r5, #54	; 0x36
10003bf8:	bf88      	it	hi
10003bfa:	bd30      	pophi	{r4, r5, pc}
10003bfc:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
10003c00:	ea4f 3101 	mov.w	r1, r1, lsl #12
10003c04:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
10003c08:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
10003c0c:	d002      	beq.n	10003c14 <__adddf3+0x70>
10003c0e:	4240      	negs	r0, r0
10003c10:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
10003c14:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
10003c18:	ea4f 3303 	mov.w	r3, r3, lsl #12
10003c1c:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
10003c20:	d002      	beq.n	10003c28 <__adddf3+0x84>
10003c22:	4252      	negs	r2, r2
10003c24:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
10003c28:	ea94 0f05 	teq	r4, r5
10003c2c:	f000 80a7 	beq.w	10003d7e <__adddf3+0x1da>
10003c30:	f1a4 0401 	sub.w	r4, r4, #1
10003c34:	f1d5 0e20 	rsbs	lr, r5, #32
10003c38:	db0d      	blt.n	10003c56 <__adddf3+0xb2>
10003c3a:	fa02 fc0e 	lsl.w	ip, r2, lr
10003c3e:	fa22 f205 	lsr.w	r2, r2, r5
10003c42:	1880      	adds	r0, r0, r2
10003c44:	f141 0100 	adc.w	r1, r1, #0
10003c48:	fa03 f20e 	lsl.w	r2, r3, lr
10003c4c:	1880      	adds	r0, r0, r2
10003c4e:	fa43 f305 	asr.w	r3, r3, r5
10003c52:	4159      	adcs	r1, r3
10003c54:	e00e      	b.n	10003c74 <__adddf3+0xd0>
10003c56:	f1a5 0520 	sub.w	r5, r5, #32
10003c5a:	f10e 0e20 	add.w	lr, lr, #32
10003c5e:	2a01      	cmp	r2, #1
10003c60:	fa03 fc0e 	lsl.w	ip, r3, lr
10003c64:	bf28      	it	cs
10003c66:	f04c 0c02 	orrcs.w	ip, ip, #2
10003c6a:	fa43 f305 	asr.w	r3, r3, r5
10003c6e:	18c0      	adds	r0, r0, r3
10003c70:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
10003c74:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
10003c78:	d507      	bpl.n	10003c8a <__adddf3+0xe6>
10003c7a:	f04f 0e00 	mov.w	lr, #0
10003c7e:	f1dc 0c00 	rsbs	ip, ip, #0
10003c82:	eb7e 0000 	sbcs.w	r0, lr, r0
10003c86:	eb6e 0101 	sbc.w	r1, lr, r1
10003c8a:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
10003c8e:	d31b      	bcc.n	10003cc8 <__adddf3+0x124>
10003c90:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
10003c94:	d30c      	bcc.n	10003cb0 <__adddf3+0x10c>
10003c96:	0849      	lsrs	r1, r1, #1
10003c98:	ea5f 0030 	movs.w	r0, r0, rrx
10003c9c:	ea4f 0c3c 	mov.w	ip, ip, rrx
10003ca0:	f104 0401 	add.w	r4, r4, #1
10003ca4:	ea4f 5244 	mov.w	r2, r4, lsl #21
10003ca8:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
10003cac:	f080 809a 	bcs.w	10003de4 <__adddf3+0x240>
10003cb0:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
10003cb4:	bf08      	it	eq
10003cb6:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
10003cba:	f150 0000 	adcs.w	r0, r0, #0
10003cbe:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
10003cc2:	ea41 0105 	orr.w	r1, r1, r5
10003cc6:	bd30      	pop	{r4, r5, pc}
10003cc8:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
10003ccc:	4140      	adcs	r0, r0
10003cce:	eb41 0101 	adc.w	r1, r1, r1
10003cd2:	3c01      	subs	r4, #1
10003cd4:	bf28      	it	cs
10003cd6:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
10003cda:	d2e9      	bcs.n	10003cb0 <__adddf3+0x10c>
10003cdc:	f091 0f00 	teq	r1, #0
10003ce0:	bf04      	itt	eq
10003ce2:	4601      	moveq	r1, r0
10003ce4:	2000      	moveq	r0, #0
10003ce6:	fab1 f381 	clz	r3, r1
10003cea:	bf08      	it	eq
10003cec:	3320      	addeq	r3, #32
10003cee:	f1a3 030b 	sub.w	r3, r3, #11
10003cf2:	f1b3 0220 	subs.w	r2, r3, #32
10003cf6:	da0c      	bge.n	10003d12 <__adddf3+0x16e>
10003cf8:	320c      	adds	r2, #12
10003cfa:	dd08      	ble.n	10003d0e <__adddf3+0x16a>
10003cfc:	f102 0c14 	add.w	ip, r2, #20
10003d00:	f1c2 020c 	rsb	r2, r2, #12
10003d04:	fa01 f00c 	lsl.w	r0, r1, ip
10003d08:	fa21 f102 	lsr.w	r1, r1, r2
10003d0c:	e00c      	b.n	10003d28 <__adddf3+0x184>
10003d0e:	f102 0214 	add.w	r2, r2, #20
10003d12:	bfd8      	it	le
10003d14:	f1c2 0c20 	rsble	ip, r2, #32
10003d18:	fa01 f102 	lsl.w	r1, r1, r2
10003d1c:	fa20 fc0c 	lsr.w	ip, r0, ip
10003d20:	bfdc      	itt	le
10003d22:	ea41 010c 	orrle.w	r1, r1, ip
10003d26:	4090      	lslle	r0, r2
10003d28:	1ae4      	subs	r4, r4, r3
10003d2a:	bfa2      	ittt	ge
10003d2c:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
10003d30:	4329      	orrge	r1, r5
10003d32:	bd30      	popge	{r4, r5, pc}
10003d34:	ea6f 0404 	mvn.w	r4, r4
10003d38:	3c1f      	subs	r4, #31
10003d3a:	da1c      	bge.n	10003d76 <__adddf3+0x1d2>
10003d3c:	340c      	adds	r4, #12
10003d3e:	dc0e      	bgt.n	10003d5e <__adddf3+0x1ba>
10003d40:	f104 0414 	add.w	r4, r4, #20
10003d44:	f1c4 0220 	rsb	r2, r4, #32
10003d48:	fa20 f004 	lsr.w	r0, r0, r4
10003d4c:	fa01 f302 	lsl.w	r3, r1, r2
10003d50:	ea40 0003 	orr.w	r0, r0, r3
10003d54:	fa21 f304 	lsr.w	r3, r1, r4
10003d58:	ea45 0103 	orr.w	r1, r5, r3
10003d5c:	bd30      	pop	{r4, r5, pc}
10003d5e:	f1c4 040c 	rsb	r4, r4, #12
10003d62:	f1c4 0220 	rsb	r2, r4, #32
10003d66:	fa20 f002 	lsr.w	r0, r0, r2
10003d6a:	fa01 f304 	lsl.w	r3, r1, r4
10003d6e:	ea40 0003 	orr.w	r0, r0, r3
10003d72:	4629      	mov	r1, r5
10003d74:	bd30      	pop	{r4, r5, pc}
10003d76:	fa21 f004 	lsr.w	r0, r1, r4
10003d7a:	4629      	mov	r1, r5
10003d7c:	bd30      	pop	{r4, r5, pc}
10003d7e:	f094 0f00 	teq	r4, #0
10003d82:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
10003d86:	bf06      	itte	eq
10003d88:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
10003d8c:	3401      	addeq	r4, #1
10003d8e:	3d01      	subne	r5, #1
10003d90:	e74e      	b.n	10003c30 <__adddf3+0x8c>
10003d92:	ea7f 5c64 	mvns.w	ip, r4, asr #21
10003d96:	bf18      	it	ne
10003d98:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
10003d9c:	d029      	beq.n	10003df2 <__adddf3+0x24e>
10003d9e:	ea94 0f05 	teq	r4, r5
10003da2:	bf08      	it	eq
10003da4:	ea90 0f02 	teqeq	r0, r2
10003da8:	d005      	beq.n	10003db6 <__adddf3+0x212>
10003daa:	ea54 0c00 	orrs.w	ip, r4, r0
10003dae:	bf04      	itt	eq
10003db0:	4619      	moveq	r1, r3
10003db2:	4610      	moveq	r0, r2
10003db4:	bd30      	pop	{r4, r5, pc}
10003db6:	ea91 0f03 	teq	r1, r3
10003dba:	bf1e      	ittt	ne
10003dbc:	2100      	movne	r1, #0
10003dbe:	2000      	movne	r0, #0
10003dc0:	bd30      	popne	{r4, r5, pc}
10003dc2:	ea5f 5c54 	movs.w	ip, r4, lsr #21
10003dc6:	d105      	bne.n	10003dd4 <__adddf3+0x230>
10003dc8:	0040      	lsls	r0, r0, #1
10003dca:	4149      	adcs	r1, r1
10003dcc:	bf28      	it	cs
10003dce:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
10003dd2:	bd30      	pop	{r4, r5, pc}
10003dd4:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
10003dd8:	bf3c      	itt	cc
10003dda:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
10003dde:	bd30      	popcc	{r4, r5, pc}
10003de0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
10003de4:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
10003de8:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
10003dec:	f04f 0000 	mov.w	r0, #0
10003df0:	bd30      	pop	{r4, r5, pc}
10003df2:	ea7f 5c64 	mvns.w	ip, r4, asr #21
10003df6:	bf1a      	itte	ne
10003df8:	4619      	movne	r1, r3
10003dfa:	4610      	movne	r0, r2
10003dfc:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
10003e00:	bf1c      	itt	ne
10003e02:	460b      	movne	r3, r1
10003e04:	4602      	movne	r2, r0
10003e06:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
10003e0a:	bf06      	itte	eq
10003e0c:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
10003e10:	ea91 0f03 	teqeq	r1, r3
10003e14:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
10003e18:	bd30      	pop	{r4, r5, pc}
10003e1a:	bf00      	nop

10003e1c <__aeabi_ui2d>:
10003e1c:	f090 0f00 	teq	r0, #0
10003e20:	bf04      	itt	eq
10003e22:	2100      	moveq	r1, #0
10003e24:	4770      	bxeq	lr
10003e26:	b530      	push	{r4, r5, lr}
10003e28:	f44f 6480 	mov.w	r4, #1024	; 0x400
10003e2c:	f104 0432 	add.w	r4, r4, #50	; 0x32
10003e30:	f04f 0500 	mov.w	r5, #0
10003e34:	f04f 0100 	mov.w	r1, #0
10003e38:	e750      	b.n	10003cdc <__adddf3+0x138>
10003e3a:	bf00      	nop

10003e3c <__aeabi_i2d>:
10003e3c:	f090 0f00 	teq	r0, #0
10003e40:	bf04      	itt	eq
10003e42:	2100      	moveq	r1, #0
10003e44:	4770      	bxeq	lr
10003e46:	b530      	push	{r4, r5, lr}
10003e48:	f44f 6480 	mov.w	r4, #1024	; 0x400
10003e4c:	f104 0432 	add.w	r4, r4, #50	; 0x32
10003e50:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
10003e54:	bf48      	it	mi
10003e56:	4240      	negmi	r0, r0
10003e58:	f04f 0100 	mov.w	r1, #0
10003e5c:	e73e      	b.n	10003cdc <__adddf3+0x138>
10003e5e:	bf00      	nop

10003e60 <__aeabi_f2d>:
10003e60:	0042      	lsls	r2, r0, #1
10003e62:	ea4f 01e2 	mov.w	r1, r2, asr #3
10003e66:	ea4f 0131 	mov.w	r1, r1, rrx
10003e6a:	ea4f 7002 	mov.w	r0, r2, lsl #28
10003e6e:	bf1f      	itttt	ne
10003e70:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
10003e74:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
10003e78:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
10003e7c:	4770      	bxne	lr
10003e7e:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
10003e82:	bf08      	it	eq
10003e84:	4770      	bxeq	lr
10003e86:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
10003e8a:	bf04      	itt	eq
10003e8c:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
10003e90:	4770      	bxeq	lr
10003e92:	b530      	push	{r4, r5, lr}
10003e94:	f44f 7460 	mov.w	r4, #896	; 0x380
10003e98:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
10003e9c:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
10003ea0:	e71c      	b.n	10003cdc <__adddf3+0x138>
10003ea2:	bf00      	nop

10003ea4 <__aeabi_ul2d>:
10003ea4:	ea50 0201 	orrs.w	r2, r0, r1
10003ea8:	bf08      	it	eq
10003eaa:	4770      	bxeq	lr
10003eac:	b530      	push	{r4, r5, lr}
10003eae:	f04f 0500 	mov.w	r5, #0
10003eb2:	e00a      	b.n	10003eca <__aeabi_l2d+0x16>

10003eb4 <__aeabi_l2d>:
10003eb4:	ea50 0201 	orrs.w	r2, r0, r1
10003eb8:	bf08      	it	eq
10003eba:	4770      	bxeq	lr
10003ebc:	b530      	push	{r4, r5, lr}
10003ebe:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
10003ec2:	d502      	bpl.n	10003eca <__aeabi_l2d+0x16>
10003ec4:	4240      	negs	r0, r0
10003ec6:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
10003eca:	f44f 6480 	mov.w	r4, #1024	; 0x400
10003ece:	f104 0432 	add.w	r4, r4, #50	; 0x32
10003ed2:	ea5f 5c91 	movs.w	ip, r1, lsr #22
10003ed6:	f43f aed8 	beq.w	10003c8a <__adddf3+0xe6>
10003eda:	f04f 0203 	mov.w	r2, #3
10003ede:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
10003ee2:	bf18      	it	ne
10003ee4:	3203      	addne	r2, #3
10003ee6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
10003eea:	bf18      	it	ne
10003eec:	3203      	addne	r2, #3
10003eee:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
10003ef2:	f1c2 0320 	rsb	r3, r2, #32
10003ef6:	fa00 fc03 	lsl.w	ip, r0, r3
10003efa:	fa20 f002 	lsr.w	r0, r0, r2
10003efe:	fa01 fe03 	lsl.w	lr, r1, r3
10003f02:	ea40 000e 	orr.w	r0, r0, lr
10003f06:	fa21 f102 	lsr.w	r1, r1, r2
10003f0a:	4414      	add	r4, r2
10003f0c:	e6bd      	b.n	10003c8a <__adddf3+0xe6>
10003f0e:	bf00      	nop

10003f10 <__aeabi_dmul>:
10003f10:	b570      	push	{r4, r5, r6, lr}
10003f12:	f04f 0cff 	mov.w	ip, #255	; 0xff
10003f16:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
10003f1a:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
10003f1e:	bf1d      	ittte	ne
10003f20:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
10003f24:	ea94 0f0c 	teqne	r4, ip
10003f28:	ea95 0f0c 	teqne	r5, ip
10003f2c:	f000 f8de 	bleq	100040ec <__aeabi_dmul+0x1dc>
10003f30:	442c      	add	r4, r5
10003f32:	ea81 0603 	eor.w	r6, r1, r3
10003f36:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
10003f3a:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
10003f3e:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
10003f42:	bf18      	it	ne
10003f44:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
10003f48:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
10003f4c:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
10003f50:	d038      	beq.n	10003fc4 <__aeabi_dmul+0xb4>
10003f52:	fba0 ce02 	umull	ip, lr, r0, r2
10003f56:	f04f 0500 	mov.w	r5, #0
10003f5a:	fbe1 e502 	umlal	lr, r5, r1, r2
10003f5e:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
10003f62:	fbe0 e503 	umlal	lr, r5, r0, r3
10003f66:	f04f 0600 	mov.w	r6, #0
10003f6a:	fbe1 5603 	umlal	r5, r6, r1, r3
10003f6e:	f09c 0f00 	teq	ip, #0
10003f72:	bf18      	it	ne
10003f74:	f04e 0e01 	orrne.w	lr, lr, #1
10003f78:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
10003f7c:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
10003f80:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
10003f84:	d204      	bcs.n	10003f90 <__aeabi_dmul+0x80>
10003f86:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
10003f8a:	416d      	adcs	r5, r5
10003f8c:	eb46 0606 	adc.w	r6, r6, r6
10003f90:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
10003f94:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
10003f98:	ea4f 20c5 	mov.w	r0, r5, lsl #11
10003f9c:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
10003fa0:	ea4f 2ece 	mov.w	lr, lr, lsl #11
10003fa4:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
10003fa8:	bf88      	it	hi
10003faa:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
10003fae:	d81e      	bhi.n	10003fee <__aeabi_dmul+0xde>
10003fb0:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
10003fb4:	bf08      	it	eq
10003fb6:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
10003fba:	f150 0000 	adcs.w	r0, r0, #0
10003fbe:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
10003fc2:	bd70      	pop	{r4, r5, r6, pc}
10003fc4:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
10003fc8:	ea46 0101 	orr.w	r1, r6, r1
10003fcc:	ea40 0002 	orr.w	r0, r0, r2
10003fd0:	ea81 0103 	eor.w	r1, r1, r3
10003fd4:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
10003fd8:	bfc2      	ittt	gt
10003fda:	ebd4 050c 	rsbsgt	r5, r4, ip
10003fde:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
10003fe2:	bd70      	popgt	{r4, r5, r6, pc}
10003fe4:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
10003fe8:	f04f 0e00 	mov.w	lr, #0
10003fec:	3c01      	subs	r4, #1
10003fee:	f300 80ab 	bgt.w	10004148 <__aeabi_dmul+0x238>
10003ff2:	f114 0f36 	cmn.w	r4, #54	; 0x36
10003ff6:	bfde      	ittt	le
10003ff8:	2000      	movle	r0, #0
10003ffa:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
10003ffe:	bd70      	pople	{r4, r5, r6, pc}
10004000:	f1c4 0400 	rsb	r4, r4, #0
10004004:	3c20      	subs	r4, #32
10004006:	da35      	bge.n	10004074 <__aeabi_dmul+0x164>
10004008:	340c      	adds	r4, #12
1000400a:	dc1b      	bgt.n	10004044 <__aeabi_dmul+0x134>
1000400c:	f104 0414 	add.w	r4, r4, #20
10004010:	f1c4 0520 	rsb	r5, r4, #32
10004014:	fa00 f305 	lsl.w	r3, r0, r5
10004018:	fa20 f004 	lsr.w	r0, r0, r4
1000401c:	fa01 f205 	lsl.w	r2, r1, r5
10004020:	ea40 0002 	orr.w	r0, r0, r2
10004024:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
10004028:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
1000402c:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
10004030:	fa21 f604 	lsr.w	r6, r1, r4
10004034:	eb42 0106 	adc.w	r1, r2, r6
10004038:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
1000403c:	bf08      	it	eq
1000403e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
10004042:	bd70      	pop	{r4, r5, r6, pc}
10004044:	f1c4 040c 	rsb	r4, r4, #12
10004048:	f1c4 0520 	rsb	r5, r4, #32
1000404c:	fa00 f304 	lsl.w	r3, r0, r4
10004050:	fa20 f005 	lsr.w	r0, r0, r5
10004054:	fa01 f204 	lsl.w	r2, r1, r4
10004058:	ea40 0002 	orr.w	r0, r0, r2
1000405c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
10004060:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
10004064:	f141 0100 	adc.w	r1, r1, #0
10004068:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
1000406c:	bf08      	it	eq
1000406e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
10004072:	bd70      	pop	{r4, r5, r6, pc}
10004074:	f1c4 0520 	rsb	r5, r4, #32
10004078:	fa00 f205 	lsl.w	r2, r0, r5
1000407c:	ea4e 0e02 	orr.w	lr, lr, r2
10004080:	fa20 f304 	lsr.w	r3, r0, r4
10004084:	fa01 f205 	lsl.w	r2, r1, r5
10004088:	ea43 0302 	orr.w	r3, r3, r2
1000408c:	fa21 f004 	lsr.w	r0, r1, r4
10004090:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
10004094:	fa21 f204 	lsr.w	r2, r1, r4
10004098:	ea20 0002 	bic.w	r0, r0, r2
1000409c:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
100040a0:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
100040a4:	bf08      	it	eq
100040a6:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
100040aa:	bd70      	pop	{r4, r5, r6, pc}
100040ac:	f094 0f00 	teq	r4, #0
100040b0:	d10f      	bne.n	100040d2 <__aeabi_dmul+0x1c2>
100040b2:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
100040b6:	0040      	lsls	r0, r0, #1
100040b8:	eb41 0101 	adc.w	r1, r1, r1
100040bc:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
100040c0:	bf08      	it	eq
100040c2:	3c01      	subeq	r4, #1
100040c4:	d0f7      	beq.n	100040b6 <__aeabi_dmul+0x1a6>
100040c6:	ea41 0106 	orr.w	r1, r1, r6
100040ca:	f095 0f00 	teq	r5, #0
100040ce:	bf18      	it	ne
100040d0:	4770      	bxne	lr
100040d2:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
100040d6:	0052      	lsls	r2, r2, #1
100040d8:	eb43 0303 	adc.w	r3, r3, r3
100040dc:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
100040e0:	bf08      	it	eq
100040e2:	3d01      	subeq	r5, #1
100040e4:	d0f7      	beq.n	100040d6 <__aeabi_dmul+0x1c6>
100040e6:	ea43 0306 	orr.w	r3, r3, r6
100040ea:	4770      	bx	lr
100040ec:	ea94 0f0c 	teq	r4, ip
100040f0:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
100040f4:	bf18      	it	ne
100040f6:	ea95 0f0c 	teqne	r5, ip
100040fa:	d00c      	beq.n	10004116 <__aeabi_dmul+0x206>
100040fc:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
10004100:	bf18      	it	ne
10004102:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
10004106:	d1d1      	bne.n	100040ac <__aeabi_dmul+0x19c>
10004108:	ea81 0103 	eor.w	r1, r1, r3
1000410c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
10004110:	f04f 0000 	mov.w	r0, #0
10004114:	bd70      	pop	{r4, r5, r6, pc}
10004116:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
1000411a:	bf06      	itte	eq
1000411c:	4610      	moveq	r0, r2
1000411e:	4619      	moveq	r1, r3
10004120:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
10004124:	d019      	beq.n	1000415a <__aeabi_dmul+0x24a>
10004126:	ea94 0f0c 	teq	r4, ip
1000412a:	d102      	bne.n	10004132 <__aeabi_dmul+0x222>
1000412c:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
10004130:	d113      	bne.n	1000415a <__aeabi_dmul+0x24a>
10004132:	ea95 0f0c 	teq	r5, ip
10004136:	d105      	bne.n	10004144 <__aeabi_dmul+0x234>
10004138:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
1000413c:	bf1c      	itt	ne
1000413e:	4610      	movne	r0, r2
10004140:	4619      	movne	r1, r3
10004142:	d10a      	bne.n	1000415a <__aeabi_dmul+0x24a>
10004144:	ea81 0103 	eor.w	r1, r1, r3
10004148:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
1000414c:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
10004150:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
10004154:	f04f 0000 	mov.w	r0, #0
10004158:	bd70      	pop	{r4, r5, r6, pc}
1000415a:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
1000415e:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
10004162:	bd70      	pop	{r4, r5, r6, pc}

10004164 <__aeabi_ddiv>:
10004164:	b570      	push	{r4, r5, r6, lr}
10004166:	f04f 0cff 	mov.w	ip, #255	; 0xff
1000416a:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
1000416e:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
10004172:	bf1d      	ittte	ne
10004174:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
10004178:	ea94 0f0c 	teqne	r4, ip
1000417c:	ea95 0f0c 	teqne	r5, ip
10004180:	f000 f8a7 	bleq	100042d2 <__aeabi_ddiv+0x16e>
10004184:	eba4 0405 	sub.w	r4, r4, r5
10004188:	ea81 0e03 	eor.w	lr, r1, r3
1000418c:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
10004190:	ea4f 3101 	mov.w	r1, r1, lsl #12
10004194:	f000 8088 	beq.w	100042a8 <__aeabi_ddiv+0x144>
10004198:	ea4f 3303 	mov.w	r3, r3, lsl #12
1000419c:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
100041a0:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
100041a4:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
100041a8:	ea4f 2202 	mov.w	r2, r2, lsl #8
100041ac:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
100041b0:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
100041b4:	ea4f 2600 	mov.w	r6, r0, lsl #8
100041b8:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
100041bc:	429d      	cmp	r5, r3
100041be:	bf08      	it	eq
100041c0:	4296      	cmpeq	r6, r2
100041c2:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
100041c6:	f504 7440 	add.w	r4, r4, #768	; 0x300
100041ca:	d202      	bcs.n	100041d2 <__aeabi_ddiv+0x6e>
100041cc:	085b      	lsrs	r3, r3, #1
100041ce:	ea4f 0232 	mov.w	r2, r2, rrx
100041d2:	1ab6      	subs	r6, r6, r2
100041d4:	eb65 0503 	sbc.w	r5, r5, r3
100041d8:	085b      	lsrs	r3, r3, #1
100041da:	ea4f 0232 	mov.w	r2, r2, rrx
100041de:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
100041e2:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
100041e6:	ebb6 0e02 	subs.w	lr, r6, r2
100041ea:	eb75 0e03 	sbcs.w	lr, r5, r3
100041ee:	bf22      	ittt	cs
100041f0:	1ab6      	subcs	r6, r6, r2
100041f2:	4675      	movcs	r5, lr
100041f4:	ea40 000c 	orrcs.w	r0, r0, ip
100041f8:	085b      	lsrs	r3, r3, #1
100041fa:	ea4f 0232 	mov.w	r2, r2, rrx
100041fe:	ebb6 0e02 	subs.w	lr, r6, r2
10004202:	eb75 0e03 	sbcs.w	lr, r5, r3
10004206:	bf22      	ittt	cs
10004208:	1ab6      	subcs	r6, r6, r2
1000420a:	4675      	movcs	r5, lr
1000420c:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
10004210:	085b      	lsrs	r3, r3, #1
10004212:	ea4f 0232 	mov.w	r2, r2, rrx
10004216:	ebb6 0e02 	subs.w	lr, r6, r2
1000421a:	eb75 0e03 	sbcs.w	lr, r5, r3
1000421e:	bf22      	ittt	cs
10004220:	1ab6      	subcs	r6, r6, r2
10004222:	4675      	movcs	r5, lr
10004224:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
10004228:	085b      	lsrs	r3, r3, #1
1000422a:	ea4f 0232 	mov.w	r2, r2, rrx
1000422e:	ebb6 0e02 	subs.w	lr, r6, r2
10004232:	eb75 0e03 	sbcs.w	lr, r5, r3
10004236:	bf22      	ittt	cs
10004238:	1ab6      	subcs	r6, r6, r2
1000423a:	4675      	movcs	r5, lr
1000423c:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
10004240:	ea55 0e06 	orrs.w	lr, r5, r6
10004244:	d018      	beq.n	10004278 <__aeabi_ddiv+0x114>
10004246:	ea4f 1505 	mov.w	r5, r5, lsl #4
1000424a:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
1000424e:	ea4f 1606 	mov.w	r6, r6, lsl #4
10004252:	ea4f 03c3 	mov.w	r3, r3, lsl #3
10004256:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
1000425a:	ea4f 02c2 	mov.w	r2, r2, lsl #3
1000425e:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
10004262:	d1c0      	bne.n	100041e6 <__aeabi_ddiv+0x82>
10004264:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
10004268:	d10b      	bne.n	10004282 <__aeabi_ddiv+0x11e>
1000426a:	ea41 0100 	orr.w	r1, r1, r0
1000426e:	f04f 0000 	mov.w	r0, #0
10004272:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
10004276:	e7b6      	b.n	100041e6 <__aeabi_ddiv+0x82>
10004278:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
1000427c:	bf04      	itt	eq
1000427e:	4301      	orreq	r1, r0
10004280:	2000      	moveq	r0, #0
10004282:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
10004286:	bf88      	it	hi
10004288:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
1000428c:	f63f aeaf 	bhi.w	10003fee <__aeabi_dmul+0xde>
10004290:	ebb5 0c03 	subs.w	ip, r5, r3
10004294:	bf04      	itt	eq
10004296:	ebb6 0c02 	subseq.w	ip, r6, r2
1000429a:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
1000429e:	f150 0000 	adcs.w	r0, r0, #0
100042a2:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
100042a6:	bd70      	pop	{r4, r5, r6, pc}
100042a8:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
100042ac:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
100042b0:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
100042b4:	bfc2      	ittt	gt
100042b6:	ebd4 050c 	rsbsgt	r5, r4, ip
100042ba:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
100042be:	bd70      	popgt	{r4, r5, r6, pc}
100042c0:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
100042c4:	f04f 0e00 	mov.w	lr, #0
100042c8:	3c01      	subs	r4, #1
100042ca:	e690      	b.n	10003fee <__aeabi_dmul+0xde>
100042cc:	ea45 0e06 	orr.w	lr, r5, r6
100042d0:	e68d      	b.n	10003fee <__aeabi_dmul+0xde>
100042d2:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
100042d6:	ea94 0f0c 	teq	r4, ip
100042da:	bf08      	it	eq
100042dc:	ea95 0f0c 	teqeq	r5, ip
100042e0:	f43f af3b 	beq.w	1000415a <__aeabi_dmul+0x24a>
100042e4:	ea94 0f0c 	teq	r4, ip
100042e8:	d10a      	bne.n	10004300 <__aeabi_ddiv+0x19c>
100042ea:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
100042ee:	f47f af34 	bne.w	1000415a <__aeabi_dmul+0x24a>
100042f2:	ea95 0f0c 	teq	r5, ip
100042f6:	f47f af25 	bne.w	10004144 <__aeabi_dmul+0x234>
100042fa:	4610      	mov	r0, r2
100042fc:	4619      	mov	r1, r3
100042fe:	e72c      	b.n	1000415a <__aeabi_dmul+0x24a>
10004300:	ea95 0f0c 	teq	r5, ip
10004304:	d106      	bne.n	10004314 <__aeabi_ddiv+0x1b0>
10004306:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
1000430a:	f43f aefd 	beq.w	10004108 <__aeabi_dmul+0x1f8>
1000430e:	4610      	mov	r0, r2
10004310:	4619      	mov	r1, r3
10004312:	e722      	b.n	1000415a <__aeabi_dmul+0x24a>
10004314:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
10004318:	bf18      	it	ne
1000431a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
1000431e:	f47f aec5 	bne.w	100040ac <__aeabi_dmul+0x19c>
10004322:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
10004326:	f47f af0d 	bne.w	10004144 <__aeabi_dmul+0x234>
1000432a:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
1000432e:	f47f aeeb 	bne.w	10004108 <__aeabi_dmul+0x1f8>
10004332:	e712      	b.n	1000415a <__aeabi_dmul+0x24a>

10004334 <__gedf2>:
10004334:	f04f 3cff 	mov.w	ip, #4294967295
10004338:	e006      	b.n	10004348 <__cmpdf2+0x4>
1000433a:	bf00      	nop

1000433c <__ledf2>:
1000433c:	f04f 0c01 	mov.w	ip, #1
10004340:	e002      	b.n	10004348 <__cmpdf2+0x4>
10004342:	bf00      	nop

10004344 <__cmpdf2>:
10004344:	f04f 0c01 	mov.w	ip, #1
10004348:	f84d cd04 	str.w	ip, [sp, #-4]!
1000434c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
10004350:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
10004354:	ea4f 0c43 	mov.w	ip, r3, lsl #1
10004358:	bf18      	it	ne
1000435a:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
1000435e:	d01b      	beq.n	10004398 <__cmpdf2+0x54>
10004360:	b001      	add	sp, #4
10004362:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
10004366:	bf0c      	ite	eq
10004368:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
1000436c:	ea91 0f03 	teqne	r1, r3
10004370:	bf02      	ittt	eq
10004372:	ea90 0f02 	teqeq	r0, r2
10004376:	2000      	moveq	r0, #0
10004378:	4770      	bxeq	lr
1000437a:	f110 0f00 	cmn.w	r0, #0
1000437e:	ea91 0f03 	teq	r1, r3
10004382:	bf58      	it	pl
10004384:	4299      	cmppl	r1, r3
10004386:	bf08      	it	eq
10004388:	4290      	cmpeq	r0, r2
1000438a:	bf2c      	ite	cs
1000438c:	17d8      	asrcs	r0, r3, #31
1000438e:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
10004392:	f040 0001 	orr.w	r0, r0, #1
10004396:	4770      	bx	lr
10004398:	ea4f 0c41 	mov.w	ip, r1, lsl #1
1000439c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
100043a0:	d102      	bne.n	100043a8 <__cmpdf2+0x64>
100043a2:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
100043a6:	d107      	bne.n	100043b8 <__cmpdf2+0x74>
100043a8:	ea4f 0c43 	mov.w	ip, r3, lsl #1
100043ac:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
100043b0:	d1d6      	bne.n	10004360 <__cmpdf2+0x1c>
100043b2:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
100043b6:	d0d3      	beq.n	10004360 <__cmpdf2+0x1c>
100043b8:	f85d 0b04 	ldr.w	r0, [sp], #4
100043bc:	4770      	bx	lr
100043be:	bf00      	nop

100043c0 <__aeabi_cdrcmple>:
100043c0:	4684      	mov	ip, r0
100043c2:	4610      	mov	r0, r2
100043c4:	4662      	mov	r2, ip
100043c6:	468c      	mov	ip, r1
100043c8:	4619      	mov	r1, r3
100043ca:	4663      	mov	r3, ip
100043cc:	e000      	b.n	100043d0 <__aeabi_cdcmpeq>
100043ce:	bf00      	nop

100043d0 <__aeabi_cdcmpeq>:
100043d0:	b501      	push	{r0, lr}
100043d2:	f7ff ffb7 	bl	10004344 <__cmpdf2>
100043d6:	2800      	cmp	r0, #0
100043d8:	bf48      	it	mi
100043da:	f110 0f00 	cmnmi.w	r0, #0
100043de:	bd01      	pop	{r0, pc}

100043e0 <__aeabi_dcmpeq>:
100043e0:	f84d ed08 	str.w	lr, [sp, #-8]!
100043e4:	f7ff fff4 	bl	100043d0 <__aeabi_cdcmpeq>
100043e8:	bf0c      	ite	eq
100043ea:	2001      	moveq	r0, #1
100043ec:	2000      	movne	r0, #0
100043ee:	f85d fb08 	ldr.w	pc, [sp], #8
100043f2:	bf00      	nop

100043f4 <__aeabi_dcmplt>:
100043f4:	f84d ed08 	str.w	lr, [sp, #-8]!
100043f8:	f7ff ffea 	bl	100043d0 <__aeabi_cdcmpeq>
100043fc:	bf34      	ite	cc
100043fe:	2001      	movcc	r0, #1
10004400:	2000      	movcs	r0, #0
10004402:	f85d fb08 	ldr.w	pc, [sp], #8
10004406:	bf00      	nop

10004408 <__aeabi_dcmple>:
10004408:	f84d ed08 	str.w	lr, [sp, #-8]!
1000440c:	f7ff ffe0 	bl	100043d0 <__aeabi_cdcmpeq>
10004410:	bf94      	ite	ls
10004412:	2001      	movls	r0, #1
10004414:	2000      	movhi	r0, #0
10004416:	f85d fb08 	ldr.w	pc, [sp], #8
1000441a:	bf00      	nop

1000441c <__aeabi_dcmpge>:
1000441c:	f84d ed08 	str.w	lr, [sp, #-8]!
10004420:	f7ff ffce 	bl	100043c0 <__aeabi_cdrcmple>
10004424:	bf94      	ite	ls
10004426:	2001      	movls	r0, #1
10004428:	2000      	movhi	r0, #0
1000442a:	f85d fb08 	ldr.w	pc, [sp], #8
1000442e:	bf00      	nop

10004430 <__aeabi_dcmpgt>:
10004430:	f84d ed08 	str.w	lr, [sp, #-8]!
10004434:	f7ff ffc4 	bl	100043c0 <__aeabi_cdrcmple>
10004438:	bf34      	ite	cc
1000443a:	2001      	movcc	r0, #1
1000443c:	2000      	movcs	r0, #0
1000443e:	f85d fb08 	ldr.w	pc, [sp], #8
10004442:	bf00      	nop

10004444 <__aeabi_d2iz>:
10004444:	ea4f 0241 	mov.w	r2, r1, lsl #1
10004448:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
1000444c:	d215      	bcs.n	1000447a <__aeabi_d2iz+0x36>
1000444e:	d511      	bpl.n	10004474 <__aeabi_d2iz+0x30>
10004450:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
10004454:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
10004458:	d912      	bls.n	10004480 <__aeabi_d2iz+0x3c>
1000445a:	ea4f 23c1 	mov.w	r3, r1, lsl #11
1000445e:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
10004462:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
10004466:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
1000446a:	fa23 f002 	lsr.w	r0, r3, r2
1000446e:	bf18      	it	ne
10004470:	4240      	negne	r0, r0
10004472:	4770      	bx	lr
10004474:	f04f 0000 	mov.w	r0, #0
10004478:	4770      	bx	lr
1000447a:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
1000447e:	d105      	bne.n	1000448c <__aeabi_d2iz+0x48>
10004480:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
10004484:	bf08      	it	eq
10004486:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
1000448a:	4770      	bx	lr
1000448c:	f04f 0000 	mov.w	r0, #0
10004490:	4770      	bx	lr
10004492:	bf00      	nop

10004494 <__aeabi_d2uiz>:
10004494:	004a      	lsls	r2, r1, #1
10004496:	d211      	bcs.n	100044bc <__aeabi_d2uiz+0x28>
10004498:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
1000449c:	d211      	bcs.n	100044c2 <__aeabi_d2uiz+0x2e>
1000449e:	d50d      	bpl.n	100044bc <__aeabi_d2uiz+0x28>
100044a0:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
100044a4:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
100044a8:	d40e      	bmi.n	100044c8 <__aeabi_d2uiz+0x34>
100044aa:	ea4f 23c1 	mov.w	r3, r1, lsl #11
100044ae:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
100044b2:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
100044b6:	fa23 f002 	lsr.w	r0, r3, r2
100044ba:	4770      	bx	lr
100044bc:	f04f 0000 	mov.w	r0, #0
100044c0:	4770      	bx	lr
100044c2:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
100044c6:	d102      	bne.n	100044ce <__aeabi_d2uiz+0x3a>
100044c8:	f04f 30ff 	mov.w	r0, #4294967295
100044cc:	4770      	bx	lr
100044ce:	f04f 0000 	mov.w	r0, #0
100044d2:	4770      	bx	lr

100044d4 <__aeabi_uldivmod>:
100044d4:	b953      	cbnz	r3, 100044ec <__aeabi_uldivmod+0x18>
100044d6:	b94a      	cbnz	r2, 100044ec <__aeabi_uldivmod+0x18>
100044d8:	2900      	cmp	r1, #0
100044da:	bf08      	it	eq
100044dc:	2800      	cmpeq	r0, #0
100044de:	bf1c      	itt	ne
100044e0:	f04f 31ff 	movne.w	r1, #4294967295
100044e4:	f04f 30ff 	movne.w	r0, #4294967295
100044e8:	f001 b934 	b.w	10005754 <__aeabi_idiv0>
100044ec:	f1ad 0c08 	sub.w	ip, sp, #8
100044f0:	e96d ce04 	strd	ip, lr, [sp, #-16]!
100044f4:	f000 f806 	bl	10004504 <__udivmoddi4>
100044f8:	f8dd e004 	ldr.w	lr, [sp, #4]
100044fc:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
10004500:	b004      	add	sp, #16
10004502:	4770      	bx	lr

10004504 <__udivmoddi4>:
10004504:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10004508:	9d09      	ldr	r5, [sp, #36]	; 0x24
1000450a:	4604      	mov	r4, r0
1000450c:	460f      	mov	r7, r1
1000450e:	2b00      	cmp	r3, #0
10004510:	d148      	bne.n	100045a4 <__udivmoddi4+0xa0>
10004512:	428a      	cmp	r2, r1
10004514:	4694      	mov	ip, r2
10004516:	d961      	bls.n	100045dc <__udivmoddi4+0xd8>
10004518:	fab2 f382 	clz	r3, r2
1000451c:	b143      	cbz	r3, 10004530 <__udivmoddi4+0x2c>
1000451e:	f1c3 0120 	rsb	r1, r3, #32
10004522:	409f      	lsls	r7, r3
10004524:	fa02 fc03 	lsl.w	ip, r2, r3
10004528:	409c      	lsls	r4, r3
1000452a:	fa20 f101 	lsr.w	r1, r0, r1
1000452e:	430f      	orrs	r7, r1
10004530:	ea4f 411c 	mov.w	r1, ip, lsr #16
10004534:	fa1f fe8c 	uxth.w	lr, ip
10004538:	0c22      	lsrs	r2, r4, #16
1000453a:	fbb7 f6f1 	udiv	r6, r7, r1
1000453e:	fb01 7716 	mls	r7, r1, r6, r7
10004542:	fb06 f00e 	mul.w	r0, r6, lr
10004546:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
1000454a:	4290      	cmp	r0, r2
1000454c:	d908      	bls.n	10004560 <__udivmoddi4+0x5c>
1000454e:	eb1c 0202 	adds.w	r2, ip, r2
10004552:	f106 37ff 	add.w	r7, r6, #4294967295
10004556:	d202      	bcs.n	1000455e <__udivmoddi4+0x5a>
10004558:	4290      	cmp	r0, r2
1000455a:	f200 8137 	bhi.w	100047cc <__udivmoddi4+0x2c8>
1000455e:	463e      	mov	r6, r7
10004560:	1a12      	subs	r2, r2, r0
10004562:	b2a4      	uxth	r4, r4
10004564:	fbb2 f0f1 	udiv	r0, r2, r1
10004568:	fb01 2210 	mls	r2, r1, r0, r2
1000456c:	fb00 fe0e 	mul.w	lr, r0, lr
10004570:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
10004574:	45a6      	cmp	lr, r4
10004576:	d908      	bls.n	1000458a <__udivmoddi4+0x86>
10004578:	eb1c 0404 	adds.w	r4, ip, r4
1000457c:	f100 32ff 	add.w	r2, r0, #4294967295
10004580:	d202      	bcs.n	10004588 <__udivmoddi4+0x84>
10004582:	45a6      	cmp	lr, r4
10004584:	f200 811c 	bhi.w	100047c0 <__udivmoddi4+0x2bc>
10004588:	4610      	mov	r0, r2
1000458a:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
1000458e:	eba4 040e 	sub.w	r4, r4, lr
10004592:	2600      	movs	r6, #0
10004594:	b11d      	cbz	r5, 1000459e <__udivmoddi4+0x9a>
10004596:	40dc      	lsrs	r4, r3
10004598:	2300      	movs	r3, #0
1000459a:	e9c5 4300 	strd	r4, r3, [r5]
1000459e:	4631      	mov	r1, r6
100045a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
100045a4:	428b      	cmp	r3, r1
100045a6:	d909      	bls.n	100045bc <__udivmoddi4+0xb8>
100045a8:	2d00      	cmp	r5, #0
100045aa:	f000 80fd 	beq.w	100047a8 <__udivmoddi4+0x2a4>
100045ae:	2600      	movs	r6, #0
100045b0:	e9c5 0100 	strd	r0, r1, [r5]
100045b4:	4630      	mov	r0, r6
100045b6:	4631      	mov	r1, r6
100045b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
100045bc:	fab3 f683 	clz	r6, r3
100045c0:	2e00      	cmp	r6, #0
100045c2:	d14b      	bne.n	1000465c <__udivmoddi4+0x158>
100045c4:	428b      	cmp	r3, r1
100045c6:	f0c0 80f2 	bcc.w	100047ae <__udivmoddi4+0x2aa>
100045ca:	4282      	cmp	r2, r0
100045cc:	f240 80ef 	bls.w	100047ae <__udivmoddi4+0x2aa>
100045d0:	4630      	mov	r0, r6
100045d2:	2d00      	cmp	r5, #0
100045d4:	d0e3      	beq.n	1000459e <__udivmoddi4+0x9a>
100045d6:	e9c5 4700 	strd	r4, r7, [r5]
100045da:	e7e0      	b.n	1000459e <__udivmoddi4+0x9a>
100045dc:	b902      	cbnz	r2, 100045e0 <__udivmoddi4+0xdc>
100045de:	deff      	udf	#255	; 0xff
100045e0:	fab2 f382 	clz	r3, r2
100045e4:	2b00      	cmp	r3, #0
100045e6:	f040 809d 	bne.w	10004724 <__udivmoddi4+0x220>
100045ea:	1a89      	subs	r1, r1, r2
100045ec:	ea4f 4e12 	mov.w	lr, r2, lsr #16
100045f0:	b297      	uxth	r7, r2
100045f2:	2601      	movs	r6, #1
100045f4:	0c20      	lsrs	r0, r4, #16
100045f6:	fbb1 f2fe 	udiv	r2, r1, lr
100045fa:	fb0e 1112 	mls	r1, lr, r2, r1
100045fe:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
10004602:	fb07 f002 	mul.w	r0, r7, r2
10004606:	4288      	cmp	r0, r1
10004608:	d90f      	bls.n	1000462a <__udivmoddi4+0x126>
1000460a:	eb1c 0101 	adds.w	r1, ip, r1
1000460e:	f102 38ff 	add.w	r8, r2, #4294967295
10004612:	bf2c      	ite	cs
10004614:	f04f 0901 	movcs.w	r9, #1
10004618:	f04f 0900 	movcc.w	r9, #0
1000461c:	4288      	cmp	r0, r1
1000461e:	d903      	bls.n	10004628 <__udivmoddi4+0x124>
10004620:	f1b9 0f00 	cmp.w	r9, #0
10004624:	f000 80cf 	beq.w	100047c6 <__udivmoddi4+0x2c2>
10004628:	4642      	mov	r2, r8
1000462a:	1a09      	subs	r1, r1, r0
1000462c:	b2a4      	uxth	r4, r4
1000462e:	fbb1 f0fe 	udiv	r0, r1, lr
10004632:	fb0e 1110 	mls	r1, lr, r0, r1
10004636:	fb00 f707 	mul.w	r7, r0, r7
1000463a:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
1000463e:	42a7      	cmp	r7, r4
10004640:	d908      	bls.n	10004654 <__udivmoddi4+0x150>
10004642:	eb1c 0404 	adds.w	r4, ip, r4
10004646:	f100 31ff 	add.w	r1, r0, #4294967295
1000464a:	d202      	bcs.n	10004652 <__udivmoddi4+0x14e>
1000464c:	42a7      	cmp	r7, r4
1000464e:	f200 80b4 	bhi.w	100047ba <__udivmoddi4+0x2b6>
10004652:	4608      	mov	r0, r1
10004654:	1be4      	subs	r4, r4, r7
10004656:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
1000465a:	e79b      	b.n	10004594 <__udivmoddi4+0x90>
1000465c:	f1c6 0720 	rsb	r7, r6, #32
10004660:	40b3      	lsls	r3, r6
10004662:	fa01 f406 	lsl.w	r4, r1, r6
10004666:	fa22 fc07 	lsr.w	ip, r2, r7
1000466a:	40f9      	lsrs	r1, r7
1000466c:	40b2      	lsls	r2, r6
1000466e:	ea4c 0c03 	orr.w	ip, ip, r3
10004672:	fa20 f307 	lsr.w	r3, r0, r7
10004676:	ea4f 491c 	mov.w	r9, ip, lsr #16
1000467a:	431c      	orrs	r4, r3
1000467c:	fa1f fe8c 	uxth.w	lr, ip
10004680:	fa00 f306 	lsl.w	r3, r0, r6
10004684:	0c20      	lsrs	r0, r4, #16
10004686:	fbb1 f8f9 	udiv	r8, r1, r9
1000468a:	fb09 1118 	mls	r1, r9, r8, r1
1000468e:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
10004692:	fb08 f00e 	mul.w	r0, r8, lr
10004696:	4288      	cmp	r0, r1
10004698:	d90f      	bls.n	100046ba <__udivmoddi4+0x1b6>
1000469a:	eb1c 0101 	adds.w	r1, ip, r1
1000469e:	f108 3aff 	add.w	sl, r8, #4294967295
100046a2:	bf2c      	ite	cs
100046a4:	f04f 0b01 	movcs.w	fp, #1
100046a8:	f04f 0b00 	movcc.w	fp, #0
100046ac:	4288      	cmp	r0, r1
100046ae:	d903      	bls.n	100046b8 <__udivmoddi4+0x1b4>
100046b0:	f1bb 0f00 	cmp.w	fp, #0
100046b4:	f000 808d 	beq.w	100047d2 <__udivmoddi4+0x2ce>
100046b8:	46d0      	mov	r8, sl
100046ba:	1a09      	subs	r1, r1, r0
100046bc:	b2a4      	uxth	r4, r4
100046be:	fbb1 f0f9 	udiv	r0, r1, r9
100046c2:	fb09 1110 	mls	r1, r9, r0, r1
100046c6:	fb00 fe0e 	mul.w	lr, r0, lr
100046ca:	ea44 4101 	orr.w	r1, r4, r1, lsl #16
100046ce:	458e      	cmp	lr, r1
100046d0:	d907      	bls.n	100046e2 <__udivmoddi4+0x1de>
100046d2:	eb1c 0101 	adds.w	r1, ip, r1
100046d6:	f100 34ff 	add.w	r4, r0, #4294967295
100046da:	d201      	bcs.n	100046e0 <__udivmoddi4+0x1dc>
100046dc:	458e      	cmp	lr, r1
100046de:	d87f      	bhi.n	100047e0 <__udivmoddi4+0x2dc>
100046e0:	4620      	mov	r0, r4
100046e2:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
100046e6:	eba1 010e 	sub.w	r1, r1, lr
100046ea:	fba0 9802 	umull	r9, r8, r0, r2
100046ee:	4541      	cmp	r1, r8
100046f0:	464c      	mov	r4, r9
100046f2:	46c6      	mov	lr, r8
100046f4:	d302      	bcc.n	100046fc <__udivmoddi4+0x1f8>
100046f6:	d106      	bne.n	10004706 <__udivmoddi4+0x202>
100046f8:	454b      	cmp	r3, r9
100046fa:	d204      	bcs.n	10004706 <__udivmoddi4+0x202>
100046fc:	3801      	subs	r0, #1
100046fe:	ebb9 0402 	subs.w	r4, r9, r2
10004702:	eb68 0e0c 	sbc.w	lr, r8, ip
10004706:	2d00      	cmp	r5, #0
10004708:	d070      	beq.n	100047ec <__udivmoddi4+0x2e8>
1000470a:	1b1a      	subs	r2, r3, r4
1000470c:	eb61 010e 	sbc.w	r1, r1, lr
10004710:	fa22 f306 	lsr.w	r3, r2, r6
10004714:	fa01 f707 	lsl.w	r7, r1, r7
10004718:	40f1      	lsrs	r1, r6
1000471a:	2600      	movs	r6, #0
1000471c:	431f      	orrs	r7, r3
1000471e:	e9c5 7100 	strd	r7, r1, [r5]
10004722:	e73c      	b.n	1000459e <__udivmoddi4+0x9a>
10004724:	fa02 fc03 	lsl.w	ip, r2, r3
10004728:	f1c3 0020 	rsb	r0, r3, #32
1000472c:	fa01 f203 	lsl.w	r2, r1, r3
10004730:	fa21 f600 	lsr.w	r6, r1, r0
10004734:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
10004738:	fa24 f100 	lsr.w	r1, r4, r0
1000473c:	fa1f f78c 	uxth.w	r7, ip
10004740:	409c      	lsls	r4, r3
10004742:	4311      	orrs	r1, r2
10004744:	fbb6 f0fe 	udiv	r0, r6, lr
10004748:	0c0a      	lsrs	r2, r1, #16
1000474a:	fb0e 6610 	mls	r6, lr, r0, r6
1000474e:	ea42 4206 	orr.w	r2, r2, r6, lsl #16
10004752:	fb00 f607 	mul.w	r6, r0, r7
10004756:	4296      	cmp	r6, r2
10004758:	d90e      	bls.n	10004778 <__udivmoddi4+0x274>
1000475a:	eb1c 0202 	adds.w	r2, ip, r2
1000475e:	f100 38ff 	add.w	r8, r0, #4294967295
10004762:	bf2c      	ite	cs
10004764:	f04f 0901 	movcs.w	r9, #1
10004768:	f04f 0900 	movcc.w	r9, #0
1000476c:	4296      	cmp	r6, r2
1000476e:	d902      	bls.n	10004776 <__udivmoddi4+0x272>
10004770:	f1b9 0f00 	cmp.w	r9, #0
10004774:	d031      	beq.n	100047da <__udivmoddi4+0x2d6>
10004776:	4640      	mov	r0, r8
10004778:	1b92      	subs	r2, r2, r6
1000477a:	b289      	uxth	r1, r1
1000477c:	fbb2 f6fe 	udiv	r6, r2, lr
10004780:	fb0e 2216 	mls	r2, lr, r6, r2
10004784:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
10004788:	fb06 f207 	mul.w	r2, r6, r7
1000478c:	428a      	cmp	r2, r1
1000478e:	d907      	bls.n	100047a0 <__udivmoddi4+0x29c>
10004790:	eb1c 0101 	adds.w	r1, ip, r1
10004794:	f106 38ff 	add.w	r8, r6, #4294967295
10004798:	d201      	bcs.n	1000479e <__udivmoddi4+0x29a>
1000479a:	428a      	cmp	r2, r1
1000479c:	d823      	bhi.n	100047e6 <__udivmoddi4+0x2e2>
1000479e:	4646      	mov	r6, r8
100047a0:	1a89      	subs	r1, r1, r2
100047a2:	ea46 4600 	orr.w	r6, r6, r0, lsl #16
100047a6:	e725      	b.n	100045f4 <__udivmoddi4+0xf0>
100047a8:	462e      	mov	r6, r5
100047aa:	4628      	mov	r0, r5
100047ac:	e6f7      	b.n	1000459e <__udivmoddi4+0x9a>
100047ae:	1a84      	subs	r4, r0, r2
100047b0:	eb61 0303 	sbc.w	r3, r1, r3
100047b4:	2001      	movs	r0, #1
100047b6:	461f      	mov	r7, r3
100047b8:	e70b      	b.n	100045d2 <__udivmoddi4+0xce>
100047ba:	4464      	add	r4, ip
100047bc:	3802      	subs	r0, #2
100047be:	e749      	b.n	10004654 <__udivmoddi4+0x150>
100047c0:	4464      	add	r4, ip
100047c2:	3802      	subs	r0, #2
100047c4:	e6e1      	b.n	1000458a <__udivmoddi4+0x86>
100047c6:	3a02      	subs	r2, #2
100047c8:	4461      	add	r1, ip
100047ca:	e72e      	b.n	1000462a <__udivmoddi4+0x126>
100047cc:	3e02      	subs	r6, #2
100047ce:	4462      	add	r2, ip
100047d0:	e6c6      	b.n	10004560 <__udivmoddi4+0x5c>
100047d2:	f1a8 0802 	sub.w	r8, r8, #2
100047d6:	4461      	add	r1, ip
100047d8:	e76f      	b.n	100046ba <__udivmoddi4+0x1b6>
100047da:	3802      	subs	r0, #2
100047dc:	4462      	add	r2, ip
100047de:	e7cb      	b.n	10004778 <__udivmoddi4+0x274>
100047e0:	3802      	subs	r0, #2
100047e2:	4461      	add	r1, ip
100047e4:	e77d      	b.n	100046e2 <__udivmoddi4+0x1de>
100047e6:	3e02      	subs	r6, #2
100047e8:	4461      	add	r1, ip
100047ea:	e7d9      	b.n	100047a0 <__udivmoddi4+0x29c>
100047ec:	462e      	mov	r6, r5
100047ee:	e6d6      	b.n	1000459e <__udivmoddi4+0x9a>

100047f0 <selfrel_offset31>:
100047f0:	6803      	ldr	r3, [r0, #0]
100047f2:	005a      	lsls	r2, r3, #1
100047f4:	bf4c      	ite	mi
100047f6:	f043 4300 	orrmi.w	r3, r3, #2147483648	; 0x80000000
100047fa:	f023 4300 	bicpl.w	r3, r3, #2147483648	; 0x80000000
100047fe:	4418      	add	r0, r3
10004800:	4770      	bx	lr
10004802:	bf00      	nop

10004804 <search_EIT_table>:
10004804:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
10004808:	b339      	cbz	r1, 1000485a <search_EIT_table+0x56>
1000480a:	f101 38ff 	add.w	r8, r1, #4294967295
1000480e:	4606      	mov	r6, r0
10004810:	4617      	mov	r7, r2
10004812:	f04f 0900 	mov.w	r9, #0
10004816:	4645      	mov	r5, r8
10004818:	eb19 0105 	adds.w	r1, r9, r5
1000481c:	bf48      	it	mi
1000481e:	3101      	addmi	r1, #1
10004820:	1049      	asrs	r1, r1, #1
10004822:	eb06 0ac1 	add.w	sl, r6, r1, lsl #3
10004826:	00cc      	lsls	r4, r1, #3
10004828:	4650      	mov	r0, sl
1000482a:	f7ff ffe1 	bl	100047f0 <selfrel_offset31>
1000482e:	3408      	adds	r4, #8
10004830:	4588      	cmp	r8, r1
10004832:	4603      	mov	r3, r0
10004834:	eb06 0004 	add.w	r0, r6, r4
10004838:	d009      	beq.n	1000484e <search_EIT_table+0x4a>
1000483a:	42bb      	cmp	r3, r7
1000483c:	d809      	bhi.n	10004852 <search_EIT_table+0x4e>
1000483e:	f7ff ffd7 	bl	100047f0 <selfrel_offset31>
10004842:	3801      	subs	r0, #1
10004844:	f101 0901 	add.w	r9, r1, #1
10004848:	42b8      	cmp	r0, r7
1000484a:	d3e5      	bcc.n	10004818 <search_EIT_table+0x14>
1000484c:	e007      	b.n	1000485e <search_EIT_table+0x5a>
1000484e:	42bb      	cmp	r3, r7
10004850:	d905      	bls.n	1000485e <search_EIT_table+0x5a>
10004852:	4589      	cmp	r9, r1
10004854:	f101 35ff 	add.w	r5, r1, #4294967295
10004858:	d1de      	bne.n	10004818 <search_EIT_table+0x14>
1000485a:	f04f 0a00 	mov.w	sl, #0
1000485e:	4650      	mov	r0, sl
10004860:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

10004864 <__gnu_unwind_get_pr_addr>:
10004864:	2801      	cmp	r0, #1
10004866:	d007      	beq.n	10004878 <__gnu_unwind_get_pr_addr+0x14>
10004868:	2802      	cmp	r0, #2
1000486a:	d007      	beq.n	1000487c <__gnu_unwind_get_pr_addr+0x18>
1000486c:	2800      	cmp	r0, #0
1000486e:	4b04      	ldr	r3, [pc, #16]	; (10004880 <__gnu_unwind_get_pr_addr+0x1c>)
10004870:	bf14      	ite	ne
10004872:	2000      	movne	r0, #0
10004874:	4618      	moveq	r0, r3
10004876:	4770      	bx	lr
10004878:	4802      	ldr	r0, [pc, #8]	; (10004884 <__gnu_unwind_get_pr_addr+0x20>)
1000487a:	4770      	bx	lr
1000487c:	4802      	ldr	r0, [pc, #8]	; (10004888 <__gnu_unwind_get_pr_addr+0x24>)
1000487e:	4770      	bx	lr
10004880:	10004f75 	andne	r4, r0, r5, ror pc
10004884:	10004f79 	andne	r4, r0, r9, ror pc
10004888:	10004f7d 	andne	r4, r0, sp, ror pc

1000488c <get_eit_entry>:
1000488c:	4b23      	ldr	r3, [pc, #140]	; (1000491c <get_eit_entry+0x90>)
1000488e:	b530      	push	{r4, r5, lr}
10004890:	4604      	mov	r4, r0
10004892:	b083      	sub	sp, #12
10004894:	1e8d      	subs	r5, r1, #2
10004896:	b343      	cbz	r3, 100048ea <get_eit_entry+0x5e>
10004898:	a901      	add	r1, sp, #4
1000489a:	4628      	mov	r0, r5
1000489c:	e000      	b.n	100048a0 <get_eit_entry+0x14>
1000489e:	bf00      	nop
100048a0:	b1f0      	cbz	r0, 100048e0 <get_eit_entry+0x54>
100048a2:	9901      	ldr	r1, [sp, #4]
100048a4:	462a      	mov	r2, r5
100048a6:	f7ff ffad 	bl	10004804 <search_EIT_table>
100048aa:	4601      	mov	r1, r0
100048ac:	b1c0      	cbz	r0, 100048e0 <get_eit_entry+0x54>
100048ae:	f7ff ff9f 	bl	100047f0 <selfrel_offset31>
100048b2:	684b      	ldr	r3, [r1, #4]
100048b4:	64a0      	str	r0, [r4, #72]	; 0x48
100048b6:	2b01      	cmp	r3, #1
100048b8:	d02c      	beq.n	10004914 <get_eit_entry+0x88>
100048ba:	2b00      	cmp	r3, #0
100048bc:	f101 0004 	add.w	r0, r1, #4
100048c0:	db24      	blt.n	1000490c <get_eit_entry+0x80>
100048c2:	f7ff ff95 	bl	100047f0 <selfrel_offset31>
100048c6:	2300      	movs	r3, #0
100048c8:	e9c4 0313 	strd	r0, r3, [r4, #76]	; 0x4c
100048cc:	6803      	ldr	r3, [r0, #0]
100048ce:	2b00      	cmp	r3, #0
100048d0:	db11      	blt.n	100048f6 <get_eit_entry+0x6a>
100048d2:	f7ff ff8d 	bl	100047f0 <selfrel_offset31>
100048d6:	4603      	mov	r3, r0
100048d8:	2000      	movs	r0, #0
100048da:	6123      	str	r3, [r4, #16]
100048dc:	b003      	add	sp, #12
100048de:	bd30      	pop	{r4, r5, pc}
100048e0:	2300      	movs	r3, #0
100048e2:	2009      	movs	r0, #9
100048e4:	6123      	str	r3, [r4, #16]
100048e6:	b003      	add	sp, #12
100048e8:	bd30      	pop	{r4, r5, pc}
100048ea:	480d      	ldr	r0, [pc, #52]	; (10004920 <get_eit_entry+0x94>)
100048ec:	490d      	ldr	r1, [pc, #52]	; (10004924 <get_eit_entry+0x98>)
100048ee:	1a09      	subs	r1, r1, r0
100048f0:	10c9      	asrs	r1, r1, #3
100048f2:	9101      	str	r1, [sp, #4]
100048f4:	e7d6      	b.n	100048a4 <get_eit_entry+0x18>
100048f6:	f3c3 6003 	ubfx	r0, r3, #24, #4
100048fa:	f7ff ffb3 	bl	10004864 <__gnu_unwind_get_pr_addr>
100048fe:	2800      	cmp	r0, #0
10004900:	6120      	str	r0, [r4, #16]
10004902:	bf14      	ite	ne
10004904:	2000      	movne	r0, #0
10004906:	2009      	moveq	r0, #9
10004908:	b003      	add	sp, #12
1000490a:	bd30      	pop	{r4, r5, pc}
1000490c:	2301      	movs	r3, #1
1000490e:	e9c4 0313 	strd	r0, r3, [r4, #76]	; 0x4c
10004912:	e7db      	b.n	100048cc <get_eit_entry+0x40>
10004914:	2300      	movs	r3, #0
10004916:	2005      	movs	r0, #5
10004918:	6123      	str	r3, [r4, #16]
1000491a:	e7df      	b.n	100048dc <get_eit_entry+0x50>
1000491c:	00000000 	andeq	r0, r0, r0
10004920:	10005db8 			; <UNDEFINED> instruction: 0x10005db8
10004924:	10005e78 	andne	r5, r0, r8, ror lr

10004928 <restore_non_core_regs>:
10004928:	6803      	ldr	r3, [r0, #0]
1000492a:	07da      	lsls	r2, r3, #31
1000492c:	b510      	push	{r4, lr}
1000492e:	4604      	mov	r4, r0
10004930:	d406      	bmi.n	10004940 <restore_non_core_regs+0x18>
10004932:	079b      	lsls	r3, r3, #30
10004934:	f100 0048 	add.w	r0, r0, #72	; 0x48
10004938:	d509      	bpl.n	1000494e <restore_non_core_regs+0x26>
1000493a:	f000 fc8f 	bl	1000525c <__gnu_Unwind_Restore_VFP_D>
1000493e:	6823      	ldr	r3, [r4, #0]
10004940:	0759      	lsls	r1, r3, #29
10004942:	d509      	bpl.n	10004958 <restore_non_core_regs+0x30>
10004944:	071a      	lsls	r2, r3, #28
10004946:	d50e      	bpl.n	10004966 <restore_non_core_regs+0x3e>
10004948:	06db      	lsls	r3, r3, #27
1000494a:	d513      	bpl.n	10004974 <restore_non_core_regs+0x4c>
1000494c:	bd10      	pop	{r4, pc}
1000494e:	f000 fc7d 	bl	1000524c <__gnu_Unwind_Restore_VFP>
10004952:	6823      	ldr	r3, [r4, #0]
10004954:	0759      	lsls	r1, r3, #29
10004956:	d4f5      	bmi.n	10004944 <restore_non_core_regs+0x1c>
10004958:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
1000495c:	f000 fc86 	bl	1000526c <__gnu_Unwind_Restore_VFP_D_16_to_31>
10004960:	6823      	ldr	r3, [r4, #0]
10004962:	071a      	lsls	r2, r3, #28
10004964:	d4f0      	bmi.n	10004948 <restore_non_core_regs+0x20>
10004966:	f504 70a8 	add.w	r0, r4, #336	; 0x150
1000496a:	f000 fc87 	bl	1000527c <__gnu_Unwind_Restore_WMMXD>
1000496e:	6823      	ldr	r3, [r4, #0]
10004970:	06db      	lsls	r3, r3, #27
10004972:	d4eb      	bmi.n	1000494c <restore_non_core_regs+0x24>
10004974:	f504 70e8 	add.w	r0, r4, #464	; 0x1d0
10004978:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
1000497c:	f000 bcc2 	b.w	10005304 <__gnu_Unwind_Restore_WMMXC>

10004980 <__gnu_unwind_24bit.constprop.0>:
10004980:	2009      	movs	r0, #9
10004982:	4770      	bx	lr

10004984 <_Unwind_decode_typeinfo_ptr.constprop.0>:
10004984:	4603      	mov	r3, r0
10004986:	6800      	ldr	r0, [r0, #0]
10004988:	b100      	cbz	r0, 1000498c <_Unwind_decode_typeinfo_ptr.constprop.0+0x8>
1000498a:	4418      	add	r0, r3
1000498c:	4770      	bx	lr
1000498e:	bf00      	nop

10004990 <_Unwind_DebugHook>:
10004990:	4770      	bx	lr
10004992:	bf00      	nop

10004994 <unwind_phase2>:
10004994:	b570      	push	{r4, r5, r6, lr}
10004996:	4604      	mov	r4, r0
10004998:	460e      	mov	r6, r1
1000499a:	6c31      	ldr	r1, [r6, #64]	; 0x40
1000499c:	4620      	mov	r0, r4
1000499e:	f7ff ff75 	bl	1000488c <get_eit_entry>
100049a2:	4605      	mov	r5, r0
100049a4:	b998      	cbnz	r0, 100049ce <unwind_phase2+0x3a>
100049a6:	f8d6 c040 	ldr.w	ip, [r6, #64]	; 0x40
100049aa:	4632      	mov	r2, r6
100049ac:	6923      	ldr	r3, [r4, #16]
100049ae:	4621      	mov	r1, r4
100049b0:	2001      	movs	r0, #1
100049b2:	f8c4 c014 	str.w	ip, [r4, #20]
100049b6:	4798      	blx	r3
100049b8:	2808      	cmp	r0, #8
100049ba:	d0ee      	beq.n	1000499a <unwind_phase2+0x6>
100049bc:	2807      	cmp	r0, #7
100049be:	d106      	bne.n	100049ce <unwind_phase2+0x3a>
100049c0:	4628      	mov	r0, r5
100049c2:	6c31      	ldr	r1, [r6, #64]	; 0x40
100049c4:	f7ff ffe4 	bl	10004990 <_Unwind_DebugHook>
100049c8:	1d30      	adds	r0, r6, #4
100049ca:	f000 fc33 	bl	10005234 <__restore_core_regs>
100049ce:	f000 fec3 	bl	10005758 <abort>
100049d2:	bf00      	nop

100049d4 <unwind_phase2_forced>:
100049d4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
100049d8:	f101 0c04 	add.w	ip, r1, #4
100049dc:	f5ad 7d74 	sub.w	sp, sp, #976	; 0x3d0
100049e0:	68c7      	ldr	r7, [r0, #12]
100049e2:	4606      	mov	r6, r0
100049e4:	f8d0 8018 	ldr.w	r8, [r0, #24]
100049e8:	4614      	mov	r4, r2
100049ea:	f10d 0e14 	add.w	lr, sp, #20
100049ee:	ad04      	add	r5, sp, #16
100049f0:	f04f 0900 	mov.w	r9, #0
100049f4:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
100049f8:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
100049fc:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
10004a00:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
10004a04:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
10004a08:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
10004a0c:	e89c 000f 	ldmia.w	ip, {r0, r1, r2, r3}
10004a10:	e88e 000f 	stmia.w	lr, {r0, r1, r2, r3}
10004a14:	f8c5 9000 	str.w	r9, [r5]
10004a18:	e023      	b.n	10004a62 <unwind_phase2_forced+0x8e>
10004a1a:	6c2b      	ldr	r3, [r5, #64]	; 0x40
10004a1c:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
10004a20:	4629      	mov	r1, r5
10004a22:	a87c      	add	r0, sp, #496	; 0x1f0
10004a24:	6173      	str	r3, [r6, #20]
10004a26:	f7fe ff7d 	bl	10003924 <memcpy>
10004a2a:	aa7c      	add	r2, sp, #496	; 0x1f0
10004a2c:	4631      	mov	r1, r6
10004a2e:	6933      	ldr	r3, [r6, #16]
10004a30:	4650      	mov	r0, sl
10004a32:	4798      	blx	r3
10004a34:	9b8a      	ldr	r3, [sp, #552]	; 0x228
10004a36:	4621      	mov	r1, r4
10004a38:	4681      	mov	r9, r0
10004a3a:	9303      	str	r3, [sp, #12]
10004a3c:	4632      	mov	r2, r6
10004a3e:	9c03      	ldr	r4, [sp, #12]
10004a40:	4633      	mov	r3, r6
10004a42:	2001      	movs	r0, #1
10004a44:	646c      	str	r4, [r5, #68]	; 0x44
10004a46:	e9cd 5800 	strd	r5, r8, [sp]
10004a4a:	47b8      	blx	r7
10004a4c:	4604      	mov	r4, r0
10004a4e:	b9e8      	cbnz	r0, 10004a8c <unwind_phase2_forced+0xb8>
10004a50:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
10004a54:	a97c      	add	r1, sp, #496	; 0x1f0
10004a56:	4628      	mov	r0, r5
10004a58:	f7fe ff64 	bl	10003924 <memcpy>
10004a5c:	f1b9 0f08 	cmp.w	r9, #8
10004a60:	d11b      	bne.n	10004a9a <unwind_phase2_forced+0xc6>
10004a62:	3409      	adds	r4, #9
10004a64:	6c29      	ldr	r1, [r5, #64]	; 0x40
10004a66:	4630      	mov	r0, r6
10004a68:	f7ff ff10 	bl	1000488c <get_eit_entry>
10004a6c:	4681      	mov	r9, r0
10004a6e:	fa5f fa84 	uxtb.w	sl, r4
10004a72:	2800      	cmp	r0, #0
10004a74:	d0d1      	beq.n	10004a1a <unwind_phase2_forced+0x46>
10004a76:	6bac      	ldr	r4, [r5, #56]	; 0x38
10004a78:	4633      	mov	r3, r6
10004a7a:	4632      	mov	r2, r6
10004a7c:	f04a 0110 	orr.w	r1, sl, #16
10004a80:	646c      	str	r4, [r5, #68]	; 0x44
10004a82:	2001      	movs	r0, #1
10004a84:	e9cd 5800 	strd	r5, r8, [sp]
10004a88:	47b8      	blx	r7
10004a8a:	b108      	cbz	r0, 10004a90 <unwind_phase2_forced+0xbc>
10004a8c:	f04f 0909 	mov.w	r9, #9
10004a90:	4648      	mov	r0, r9
10004a92:	f50d 7d74 	add.w	sp, sp, #976	; 0x3d0
10004a96:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
10004a9a:	f1b9 0f07 	cmp.w	r9, #7
10004a9e:	d1f5      	bne.n	10004a8c <unwind_phase2_forced+0xb8>
10004aa0:	4620      	mov	r0, r4
10004aa2:	6c29      	ldr	r1, [r5, #64]	; 0x40
10004aa4:	f7ff ff74 	bl	10004990 <_Unwind_DebugHook>
10004aa8:	a805      	add	r0, sp, #20
10004aaa:	f000 fbc3 	bl	10005234 <__restore_core_regs>
10004aae:	bf00      	nop

10004ab0 <_Unwind_GetCFA>:
10004ab0:	6c40      	ldr	r0, [r0, #68]	; 0x44
10004ab2:	4770      	bx	lr

10004ab4 <__gnu_Unwind_RaiseException>:
10004ab4:	b5f0      	push	{r4, r5, r6, r7, lr}
10004ab6:	6bcb      	ldr	r3, [r1, #60]	; 0x3c
10004ab8:	b0f9      	sub	sp, #484	; 0x1e4
10004aba:	f101 0c04 	add.w	ip, r1, #4
10004abe:	460e      	mov	r6, r1
10004ac0:	640b      	str	r3, [r1, #64]	; 0x40
10004ac2:	ac01      	add	r4, sp, #4
10004ac4:	4605      	mov	r5, r0
10004ac6:	f04f 37ff 	mov.w	r7, #4294967295
10004aca:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
10004ace:	c40f      	stmia	r4!, {r0, r1, r2, r3}
10004ad0:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
10004ad4:	c40f      	stmia	r4!, {r0, r1, r2, r3}
10004ad6:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
10004ada:	c40f      	stmia	r4!, {r0, r1, r2, r3}
10004adc:	e89c 000f 	ldmia.w	ip, {r0, r1, r2, r3}
10004ae0:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
10004ae4:	9700      	str	r7, [sp, #0]
10004ae6:	e006      	b.n	10004af6 <__gnu_Unwind_RaiseException+0x42>
10004ae8:	692b      	ldr	r3, [r5, #16]
10004aea:	466a      	mov	r2, sp
10004aec:	4629      	mov	r1, r5
10004aee:	4798      	blx	r3
10004af0:	2808      	cmp	r0, #8
10004af2:	4604      	mov	r4, r0
10004af4:	d108      	bne.n	10004b08 <__gnu_Unwind_RaiseException+0x54>
10004af6:	9910      	ldr	r1, [sp, #64]	; 0x40
10004af8:	4628      	mov	r0, r5
10004afa:	f7ff fec7 	bl	1000488c <get_eit_entry>
10004afe:	2800      	cmp	r0, #0
10004b00:	d0f2      	beq.n	10004ae8 <__gnu_Unwind_RaiseException+0x34>
10004b02:	2009      	movs	r0, #9
10004b04:	b079      	add	sp, #484	; 0x1e4
10004b06:	bdf0      	pop	{r4, r5, r6, r7, pc}
10004b08:	4668      	mov	r0, sp
10004b0a:	f7ff ff0d 	bl	10004928 <restore_non_core_regs>
10004b0e:	2c06      	cmp	r4, #6
10004b10:	d1f7      	bne.n	10004b02 <__gnu_Unwind_RaiseException+0x4e>
10004b12:	4631      	mov	r1, r6
10004b14:	4628      	mov	r0, r5
10004b16:	f7ff ff3d 	bl	10004994 <unwind_phase2>
10004b1a:	bf00      	nop

10004b1c <__gnu_Unwind_ForcedUnwind>:
10004b1c:	b410      	push	{r4}
10004b1e:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
10004b20:	60c1      	str	r1, [r0, #12]
10004b22:	4619      	mov	r1, r3
10004b24:	6182      	str	r2, [r0, #24]
10004b26:	2200      	movs	r2, #0
10004b28:	641c      	str	r4, [r3, #64]	; 0x40
10004b2a:	bc10      	pop	{r4}
10004b2c:	e752      	b.n	100049d4 <unwind_phase2_forced>
10004b2e:	bf00      	nop

10004b30 <__gnu_Unwind_Resume>:
10004b30:	b570      	push	{r4, r5, r6, lr}
10004b32:	6943      	ldr	r3, [r0, #20]
10004b34:	68c6      	ldr	r6, [r0, #12]
10004b36:	640b      	str	r3, [r1, #64]	; 0x40
10004b38:	b9ae      	cbnz	r6, 10004b66 <__gnu_Unwind_Resume+0x36>
10004b3a:	6903      	ldr	r3, [r0, #16]
10004b3c:	460a      	mov	r2, r1
10004b3e:	4604      	mov	r4, r0
10004b40:	460d      	mov	r5, r1
10004b42:	4601      	mov	r1, r0
10004b44:	2002      	movs	r0, #2
10004b46:	4798      	blx	r3
10004b48:	2807      	cmp	r0, #7
10004b4a:	d005      	beq.n	10004b58 <__gnu_Unwind_Resume+0x28>
10004b4c:	2808      	cmp	r0, #8
10004b4e:	d10f      	bne.n	10004b70 <__gnu_Unwind_Resume+0x40>
10004b50:	4629      	mov	r1, r5
10004b52:	4620      	mov	r0, r4
10004b54:	f7ff ff1e 	bl	10004994 <unwind_phase2>
10004b58:	4630      	mov	r0, r6
10004b5a:	6c29      	ldr	r1, [r5, #64]	; 0x40
10004b5c:	f7ff ff18 	bl	10004990 <_Unwind_DebugHook>
10004b60:	1d28      	adds	r0, r5, #4
10004b62:	f000 fb67 	bl	10005234 <__restore_core_regs>
10004b66:	2201      	movs	r2, #1
10004b68:	f7ff ff34 	bl	100049d4 <unwind_phase2_forced>
10004b6c:	f000 fdf4 	bl	10005758 <abort>
10004b70:	f000 fdf2 	bl	10005758 <abort>

10004b74 <__gnu_Unwind_Resume_or_Rethrow>:
10004b74:	68c2      	ldr	r2, [r0, #12]
10004b76:	b12a      	cbz	r2, 10004b84 <__gnu_Unwind_Resume_or_Rethrow+0x10>
10004b78:	f8d1 c03c 	ldr.w	ip, [r1, #60]	; 0x3c
10004b7c:	2200      	movs	r2, #0
10004b7e:	f8c1 c040 	str.w	ip, [r1, #64]	; 0x40
10004b82:	e727      	b.n	100049d4 <unwind_phase2_forced>
10004b84:	e796      	b.n	10004ab4 <__gnu_Unwind_RaiseException>
10004b86:	bf00      	nop

10004b88 <_Unwind_Complete>:
10004b88:	4770      	bx	lr
10004b8a:	bf00      	nop

10004b8c <_Unwind_DeleteException>:
10004b8c:	6883      	ldr	r3, [r0, #8]
10004b8e:	4601      	mov	r1, r0
10004b90:	b10b      	cbz	r3, 10004b96 <_Unwind_DeleteException+0xa>
10004b92:	2001      	movs	r0, #1
10004b94:	4718      	bx	r3
10004b96:	4770      	bx	lr

10004b98 <_Unwind_VRS_Get>:
10004b98:	2901      	cmp	r1, #1
10004b9a:	d015      	beq.n	10004bc8 <_Unwind_VRS_Get+0x30>
10004b9c:	d80c      	bhi.n	10004bb8 <_Unwind_VRS_Get+0x20>
10004b9e:	b98b      	cbnz	r3, 10004bc4 <_Unwind_VRS_Get+0x2c>
10004ba0:	2a0f      	cmp	r2, #15
10004ba2:	bf94      	ite	ls
10004ba4:	2100      	movls	r1, #0
10004ba6:	2101      	movhi	r1, #1
10004ba8:	b961      	cbnz	r1, 10004bc4 <_Unwind_VRS_Get+0x2c>
10004baa:	eb00 0282 	add.w	r2, r0, r2, lsl #2
10004bae:	4608      	mov	r0, r1
10004bb0:	6853      	ldr	r3, [r2, #4]
10004bb2:	9a00      	ldr	r2, [sp, #0]
10004bb4:	6013      	str	r3, [r2, #0]
10004bb6:	4770      	bx	lr
10004bb8:	3903      	subs	r1, #3
10004bba:	2901      	cmp	r1, #1
10004bbc:	bf94      	ite	ls
10004bbe:	2001      	movls	r0, #1
10004bc0:	2002      	movhi	r0, #2
10004bc2:	4770      	bx	lr
10004bc4:	2002      	movs	r0, #2
10004bc6:	4770      	bx	lr
10004bc8:	4608      	mov	r0, r1
10004bca:	4770      	bx	lr

10004bcc <_Unwind_GetGR>:
10004bcc:	b510      	push	{r4, lr}
10004bce:	b084      	sub	sp, #16
10004bd0:	2300      	movs	r3, #0
10004bd2:	460a      	mov	r2, r1
10004bd4:	ac03      	add	r4, sp, #12
10004bd6:	4619      	mov	r1, r3
10004bd8:	9400      	str	r4, [sp, #0]
10004bda:	f7ff ffdd 	bl	10004b98 <_Unwind_VRS_Get>
10004bde:	9803      	ldr	r0, [sp, #12]
10004be0:	b004      	add	sp, #16
10004be2:	bd10      	pop	{r4, pc}

10004be4 <_Unwind_VRS_Set>:
10004be4:	2901      	cmp	r1, #1
10004be6:	d015      	beq.n	10004c14 <_Unwind_VRS_Set+0x30>
10004be8:	d80c      	bhi.n	10004c04 <_Unwind_VRS_Set+0x20>
10004bea:	b98b      	cbnz	r3, 10004c10 <_Unwind_VRS_Set+0x2c>
10004bec:	2a0f      	cmp	r2, #15
10004bee:	bf94      	ite	ls
10004bf0:	2100      	movls	r1, #0
10004bf2:	2101      	movhi	r1, #1
10004bf4:	b961      	cbnz	r1, 10004c10 <_Unwind_VRS_Set+0x2c>
10004bf6:	9b00      	ldr	r3, [sp, #0]
10004bf8:	eb00 0282 	add.w	r2, r0, r2, lsl #2
10004bfc:	4608      	mov	r0, r1
10004bfe:	681b      	ldr	r3, [r3, #0]
10004c00:	6053      	str	r3, [r2, #4]
10004c02:	4770      	bx	lr
10004c04:	3903      	subs	r1, #3
10004c06:	2901      	cmp	r1, #1
10004c08:	bf94      	ite	ls
10004c0a:	2001      	movls	r0, #1
10004c0c:	2002      	movhi	r0, #2
10004c0e:	4770      	bx	lr
10004c10:	2002      	movs	r0, #2
10004c12:	4770      	bx	lr
10004c14:	4608      	mov	r0, r1
10004c16:	4770      	bx	lr

10004c18 <_Unwind_SetGR>:
10004c18:	b510      	push	{r4, lr}
10004c1a:	b084      	sub	sp, #16
10004c1c:	2300      	movs	r3, #0
10004c1e:	ac03      	add	r4, sp, #12
10004c20:	9203      	str	r2, [sp, #12]
10004c22:	460a      	mov	r2, r1
10004c24:	4619      	mov	r1, r3
10004c26:	9400      	str	r4, [sp, #0]
10004c28:	f7ff ffdc 	bl	10004be4 <_Unwind_VRS_Set>
10004c2c:	b004      	add	sp, #16
10004c2e:	bd10      	pop	{r4, pc}

10004c30 <__gnu_Unwind_Backtrace>:
10004c30:	b5f0      	push	{r4, r5, r6, r7, lr}
10004c32:	6bd3      	ldr	r3, [r2, #60]	; 0x3c
10004c34:	f5ad 7d0f 	sub.w	sp, sp, #572	; 0x23c
10004c38:	1d14      	adds	r4, r2, #4
10004c3a:	4606      	mov	r6, r0
10004c3c:	6413      	str	r3, [r2, #64]	; 0x40
10004c3e:	f10d 0c5c 	add.w	ip, sp, #92	; 0x5c
10004c42:	460d      	mov	r5, r1
10004c44:	f04f 37ff 	mov.w	r7, #4294967295
10004c48:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
10004c4a:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
10004c4e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
10004c50:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
10004c54:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
10004c56:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
10004c5a:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
10004c5e:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}
10004c62:	9716      	str	r7, [sp, #88]	; 0x58
10004c64:	e010      	b.n	10004c88 <__gnu_Unwind_Backtrace+0x58>
10004c66:	f7ff ffd7 	bl	10004c18 <_Unwind_SetGR>
10004c6a:	4629      	mov	r1, r5
10004c6c:	a816      	add	r0, sp, #88	; 0x58
10004c6e:	47b0      	blx	r6
10004c70:	4603      	mov	r3, r0
10004c72:	aa16      	add	r2, sp, #88	; 0x58
10004c74:	4669      	mov	r1, sp
10004c76:	2008      	movs	r0, #8
10004c78:	b983      	cbnz	r3, 10004c9c <__gnu_Unwind_Backtrace+0x6c>
10004c7a:	9b04      	ldr	r3, [sp, #16]
10004c7c:	4798      	blx	r3
10004c7e:	2805      	cmp	r0, #5
10004c80:	4604      	mov	r4, r0
10004c82:	d00c      	beq.n	10004c9e <__gnu_Unwind_Backtrace+0x6e>
10004c84:	2809      	cmp	r0, #9
10004c86:	d00a      	beq.n	10004c9e <__gnu_Unwind_Backtrace+0x6e>
10004c88:	9926      	ldr	r1, [sp, #152]	; 0x98
10004c8a:	4668      	mov	r0, sp
10004c8c:	f7ff fdfe 	bl	1000488c <get_eit_entry>
10004c90:	4603      	mov	r3, r0
10004c92:	466a      	mov	r2, sp
10004c94:	210c      	movs	r1, #12
10004c96:	a816      	add	r0, sp, #88	; 0x58
10004c98:	2b00      	cmp	r3, #0
10004c9a:	d0e4      	beq.n	10004c66 <__gnu_Unwind_Backtrace+0x36>
10004c9c:	2409      	movs	r4, #9
10004c9e:	a816      	add	r0, sp, #88	; 0x58
10004ca0:	f7ff fe42 	bl	10004928 <restore_non_core_regs>
10004ca4:	4620      	mov	r0, r4
10004ca6:	f50d 7d0f 	add.w	sp, sp, #572	; 0x23c
10004caa:	bdf0      	pop	{r4, r5, r6, r7, pc}

10004cac <__gnu_unwind_pr_common>:
10004cac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10004cb0:	6ccc      	ldr	r4, [r1, #76]	; 0x4c
10004cb2:	b089      	sub	sp, #36	; 0x24
10004cb4:	461e      	mov	r6, r3
10004cb6:	460d      	mov	r5, r1
10004cb8:	f854 3b04 	ldr.w	r3, [r4], #4
10004cbc:	4617      	mov	r7, r2
10004cbe:	f000 0803 	and.w	r8, r0, #3
10004cc2:	9406      	str	r4, [sp, #24]
10004cc4:	2e00      	cmp	r6, #0
10004cc6:	d07f      	beq.n	10004dc8 <__gnu_unwind_pr_common+0x11c>
10004cc8:	0c1a      	lsrs	r2, r3, #16
10004cca:	041b      	lsls	r3, r3, #16
10004ccc:	f88d 201d 	strb.w	r2, [sp, #29]
10004cd0:	b2d2      	uxtb	r2, r2
10004cd2:	9305      	str	r3, [sp, #20]
10004cd4:	2302      	movs	r3, #2
10004cd6:	eb04 0482 	add.w	r4, r4, r2, lsl #2
10004cda:	f88d 301c 	strb.w	r3, [sp, #28]
10004cde:	f1b8 0f02 	cmp.w	r8, #2
10004ce2:	6d2b      	ldr	r3, [r5, #80]	; 0x50
10004ce4:	bf08      	it	eq
10004ce6:	6bac      	ldreq	r4, [r5, #56]	; 0x38
10004ce8:	f013 0301 	ands.w	r3, r3, #1
10004cec:	d008      	beq.n	10004d00 <__gnu_unwind_pr_common+0x54>
10004cee:	a905      	add	r1, sp, #20
10004cf0:	4638      	mov	r0, r7
10004cf2:	f000 fba1 	bl	10005438 <__gnu_unwind_execute>
10004cf6:	bb90      	cbnz	r0, 10004d5e <__gnu_unwind_pr_common+0xb2>
10004cf8:	2008      	movs	r0, #8
10004cfa:	b009      	add	sp, #36	; 0x24
10004cfc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10004d00:	f8d4 a000 	ldr.w	sl, [r4]
10004d04:	f1ba 0f00 	cmp.w	sl, #0
10004d08:	d0f1      	beq.n	10004cee <__gnu_unwind_pr_common+0x42>
10004d0a:	9301      	str	r3, [sp, #4]
10004d0c:	f000 0308 	and.w	r3, r0, #8
10004d10:	9302      	str	r3, [sp, #8]
10004d12:	2e02      	cmp	r6, #2
10004d14:	d054      	beq.n	10004dc0 <__gnu_unwind_pr_common+0x114>
10004d16:	f8b4 a000 	ldrh.w	sl, [r4]
10004d1a:	3404      	adds	r4, #4
10004d1c:	f834 9c02 	ldrh.w	r9, [r4, #-2]
10004d20:	6cab      	ldr	r3, [r5, #72]	; 0x48
10004d22:	f029 0b01 	bic.w	fp, r9, #1
10004d26:	210f      	movs	r1, #15
10004d28:	4638      	mov	r0, r7
10004d2a:	449b      	add	fp, r3
10004d2c:	f7ff ff4e 	bl	10004bcc <_Unwind_GetGR>
10004d30:	4583      	cmp	fp, r0
10004d32:	d818      	bhi.n	10004d66 <__gnu_unwind_pr_common+0xba>
10004d34:	f02a 0301 	bic.w	r3, sl, #1
10004d38:	449b      	add	fp, r3
10004d3a:	4583      	cmp	fp, r0
10004d3c:	d913      	bls.n	10004d66 <__gnu_unwind_pr_common+0xba>
10004d3e:	ea4f 0349 	mov.w	r3, r9, lsl #1
10004d42:	f00a 0a01 	and.w	sl, sl, #1
10004d46:	f003 0302 	and.w	r3, r3, #2
10004d4a:	ea43 030a 	orr.w	r3, r3, sl
10004d4e:	2b01      	cmp	r3, #1
10004d50:	f000 80bf 	beq.w	10004ed2 <__gnu_unwind_pr_common+0x226>
10004d54:	2b02      	cmp	r3, #2
10004d56:	f000 8089 	beq.w	10004e6c <__gnu_unwind_pr_common+0x1c0>
10004d5a:	2b00      	cmp	r3, #0
10004d5c:	d04d      	beq.n	10004dfa <__gnu_unwind_pr_common+0x14e>
10004d5e:	2009      	movs	r0, #9
10004d60:	b009      	add	sp, #36	; 0x24
10004d62:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10004d66:	ea4f 0349 	mov.w	r3, r9, lsl #1
10004d6a:	f00a 0a01 	and.w	sl, sl, #1
10004d6e:	f003 0302 	and.w	r3, r3, #2
10004d72:	ea43 030a 	orr.w	r3, r3, sl
10004d76:	2b01      	cmp	r3, #1
10004d78:	d03a      	beq.n	10004df0 <__gnu_unwind_pr_common+0x144>
10004d7a:	2b02      	cmp	r3, #2
10004d7c:	d02a      	beq.n	10004dd4 <__gnu_unwind_pr_common+0x128>
10004d7e:	2b00      	cmp	r3, #0
10004d80:	d1ed      	bne.n	10004d5e <__gnu_unwind_pr_common+0xb2>
10004d82:	3404      	adds	r4, #4
10004d84:	f8d4 a000 	ldr.w	sl, [r4]
10004d88:	f1ba 0f00 	cmp.w	sl, #0
10004d8c:	d1c1      	bne.n	10004d12 <__gnu_unwind_pr_common+0x66>
10004d8e:	a905      	add	r1, sp, #20
10004d90:	4638      	mov	r0, r7
10004d92:	f000 fb51 	bl	10005438 <__gnu_unwind_execute>
10004d96:	2800      	cmp	r0, #0
10004d98:	d1e1      	bne.n	10004d5e <__gnu_unwind_pr_common+0xb2>
10004d9a:	9b01      	ldr	r3, [sp, #4]
10004d9c:	2b00      	cmp	r3, #0
10004d9e:	d0ab      	beq.n	10004cf8 <__gnu_unwind_pr_common+0x4c>
10004da0:	210f      	movs	r1, #15
10004da2:	4638      	mov	r0, r7
10004da4:	f7ff ff12 	bl	10004bcc <_Unwind_GetGR>
10004da8:	210e      	movs	r1, #14
10004daa:	4602      	mov	r2, r0
10004dac:	4638      	mov	r0, r7
10004dae:	f7ff ff33 	bl	10004c18 <_Unwind_SetGR>
10004db2:	4638      	mov	r0, r7
10004db4:	4a6e      	ldr	r2, [pc, #440]	; (10004f70 <__gnu_unwind_pr_common+0x2c4>)
10004db6:	210f      	movs	r1, #15
10004db8:	f7ff ff2e 	bl	10004c18 <_Unwind_SetGR>
10004dbc:	2007      	movs	r0, #7
10004dbe:	e7cf      	b.n	10004d60 <__gnu_unwind_pr_common+0xb4>
10004dc0:	f8d4 9004 	ldr.w	r9, [r4, #4]
10004dc4:	3408      	adds	r4, #8
10004dc6:	e7ab      	b.n	10004d20 <__gnu_unwind_pr_common+0x74>
10004dc8:	021b      	lsls	r3, r3, #8
10004dca:	9305      	str	r3, [sp, #20]
10004dcc:	2303      	movs	r3, #3
10004dce:	f8ad 301c 	strh.w	r3, [sp, #28]
10004dd2:	e784      	b.n	10004cde <__gnu_unwind_pr_common+0x32>
10004dd4:	6823      	ldr	r3, [r4, #0]
10004dd6:	f023 4b00 	bic.w	fp, r3, #2147483648	; 0x80000000
10004dda:	f1b8 0f00 	cmp.w	r8, #0
10004dde:	d121      	bne.n	10004e24 <__gnu_unwind_pr_common+0x178>
10004de0:	2b00      	cmp	r3, #0
10004de2:	da00      	bge.n	10004de6 <__gnu_unwind_pr_common+0x13a>
10004de4:	3404      	adds	r4, #4
10004de6:	f10b 0b01 	add.w	fp, fp, #1
10004dea:	eb04 048b 	add.w	r4, r4, fp, lsl #2
10004dee:	e7c9      	b.n	10004d84 <__gnu_unwind_pr_common+0xd8>
10004df0:	f1b8 0f00 	cmp.w	r8, #0
10004df4:	d120      	bne.n	10004e38 <__gnu_unwind_pr_common+0x18c>
10004df6:	3408      	adds	r4, #8
10004df8:	e7c4      	b.n	10004d84 <__gnu_unwind_pr_common+0xd8>
10004dfa:	f1b8 0f00 	cmp.w	r8, #0
10004dfe:	d0c0      	beq.n	10004d82 <__gnu_unwind_pr_common+0xd6>
10004e00:	4620      	mov	r0, r4
10004e02:	3404      	adds	r4, #4
10004e04:	f7ff fcf4 	bl	100047f0 <selfrel_offset31>
10004e08:	4606      	mov	r6, r0
10004e0a:	63ac      	str	r4, [r5, #56]	; 0x38
10004e0c:	4628      	mov	r0, r5
10004e0e:	e000      	b.n	10004e12 <__gnu_unwind_pr_common+0x166>
10004e10:	bf00      	nop
10004e12:	2800      	cmp	r0, #0
10004e14:	d0a3      	beq.n	10004d5e <__gnu_unwind_pr_common+0xb2>
10004e16:	4638      	mov	r0, r7
10004e18:	4632      	mov	r2, r6
10004e1a:	210f      	movs	r1, #15
10004e1c:	f7ff fefc 	bl	10004c18 <_Unwind_SetGR>
10004e20:	2007      	movs	r0, #7
10004e22:	e79d      	b.n	10004d60 <__gnu_unwind_pr_common+0xb4>
10004e24:	f8d5 9020 	ldr.w	r9, [r5, #32]
10004e28:	210d      	movs	r1, #13
10004e2a:	4638      	mov	r0, r7
10004e2c:	f7ff fece 	bl	10004bcc <_Unwind_GetGR>
10004e30:	4581      	cmp	r9, r0
10004e32:	d079      	beq.n	10004f28 <__gnu_unwind_pr_common+0x27c>
10004e34:	6823      	ldr	r3, [r4, #0]
10004e36:	e7d3      	b.n	10004de0 <__gnu_unwind_pr_common+0x134>
10004e38:	f8d5 9020 	ldr.w	r9, [r5, #32]
10004e3c:	210d      	movs	r1, #13
10004e3e:	4638      	mov	r0, r7
10004e40:	f7ff fec4 	bl	10004bcc <_Unwind_GetGR>
10004e44:	4581      	cmp	r9, r0
10004e46:	d1d6      	bne.n	10004df6 <__gnu_unwind_pr_common+0x14a>
10004e48:	6aab      	ldr	r3, [r5, #40]	; 0x28
10004e4a:	429c      	cmp	r4, r3
10004e4c:	d1d3      	bne.n	10004df6 <__gnu_unwind_pr_common+0x14a>
10004e4e:	4620      	mov	r0, r4
10004e50:	210f      	movs	r1, #15
10004e52:	f7ff fccd 	bl	100047f0 <selfrel_offset31>
10004e56:	4602      	mov	r2, r0
10004e58:	4638      	mov	r0, r7
10004e5a:	f7ff fedd 	bl	10004c18 <_Unwind_SetGR>
10004e5e:	4638      	mov	r0, r7
10004e60:	462a      	mov	r2, r5
10004e62:	2100      	movs	r1, #0
10004e64:	f7ff fed8 	bl	10004c18 <_Unwind_SetGR>
10004e68:	2007      	movs	r0, #7
10004e6a:	e779      	b.n	10004d60 <__gnu_unwind_pr_common+0xb4>
10004e6c:	6823      	ldr	r3, [r4, #0]
10004e6e:	f023 4b00 	bic.w	fp, r3, #2147483648	; 0x80000000
10004e72:	f1b8 0f00 	cmp.w	r8, #0
10004e76:	d1d5      	bne.n	10004e24 <__gnu_unwind_pr_common+0x178>
10004e78:	9a02      	ldr	r2, [sp, #8]
10004e7a:	b112      	cbz	r2, 10004e82 <__gnu_unwind_pr_common+0x1d6>
10004e7c:	f1bb 0f00 	cmp.w	fp, #0
10004e80:	d1ae      	bne.n	10004de0 <__gnu_unwind_pr_common+0x134>
10004e82:	f105 0358 	add.w	r3, r5, #88	; 0x58
10004e86:	f8cd 800c 	str.w	r8, [sp, #12]
10004e8a:	f104 0a04 	add.w	sl, r4, #4
10004e8e:	46b0      	mov	r8, r6
10004e90:	f04f 0900 	mov.w	r9, #0
10004e94:	461e      	mov	r6, r3
10004e96:	e00d      	b.n	10004eb4 <__gnu_unwind_pr_common+0x208>
10004e98:	4650      	mov	r0, sl
10004e9a:	9604      	str	r6, [sp, #16]
10004e9c:	2200      	movs	r2, #0
10004e9e:	f7ff fd71 	bl	10004984 <_Unwind_decode_typeinfo_ptr.constprop.0>
10004ea2:	ab04      	add	r3, sp, #16
10004ea4:	4601      	mov	r1, r0
10004ea6:	4628      	mov	r0, r5
10004ea8:	f10a 0a04 	add.w	sl, sl, #4
10004eac:	e000      	b.n	10004eb0 <__gnu_unwind_pr_common+0x204>
10004eae:	bf00      	nop
10004eb0:	2800      	cmp	r0, #0
10004eb2:	d14a      	bne.n	10004f4a <__gnu_unwind_pr_common+0x29e>
10004eb4:	45d9      	cmp	r9, fp
10004eb6:	f109 0901 	add.w	r9, r9, #1
10004eba:	d1ed      	bne.n	10004e98 <__gnu_unwind_pr_common+0x1ec>
10004ebc:	210d      	movs	r1, #13
10004ebe:	4638      	mov	r0, r7
10004ec0:	f7ff fe84 	bl	10004bcc <_Unwind_GetGR>
10004ec4:	9b04      	ldr	r3, [sp, #16]
10004ec6:	4602      	mov	r2, r0
10004ec8:	2006      	movs	r0, #6
10004eca:	622a      	str	r2, [r5, #32]
10004ecc:	e9c5 3409 	strd	r3, r4, [r5, #36]	; 0x24
10004ed0:	e746      	b.n	10004d60 <__gnu_unwind_pr_common+0xb4>
10004ed2:	f1b8 0f00 	cmp.w	r8, #0
10004ed6:	d1af      	bne.n	10004e38 <__gnu_unwind_pr_common+0x18c>
10004ed8:	6863      	ldr	r3, [r4, #4]
10004eda:	6822      	ldr	r2, [r4, #0]
10004edc:	1c99      	adds	r1, r3, #2
10004ede:	ea4f 72d2 	mov.w	r2, r2, lsr #31
10004ee2:	f43f af3c 	beq.w	10004d5e <__gnu_unwind_pr_common+0xb2>
10004ee6:	f105 0158 	add.w	r1, r5, #88	; 0x58
10004eea:	3301      	adds	r3, #1
10004eec:	9104      	str	r1, [sp, #16]
10004eee:	d031      	beq.n	10004f54 <__gnu_unwind_pr_common+0x2a8>
10004ef0:	1d20      	adds	r0, r4, #4
10004ef2:	f7ff fd47 	bl	10004984 <_Unwind_decode_typeinfo_ptr.constprop.0>
10004ef6:	ab04      	add	r3, sp, #16
10004ef8:	4601      	mov	r1, r0
10004efa:	4628      	mov	r0, r5
10004efc:	e000      	b.n	10004f00 <__gnu_unwind_pr_common+0x254>
10004efe:	bf00      	nop
10004f00:	2800      	cmp	r0, #0
10004f02:	f43f af78 	beq.w	10004df6 <__gnu_unwind_pr_common+0x14a>
10004f06:	4681      	mov	r9, r0
10004f08:	210d      	movs	r1, #13
10004f0a:	4638      	mov	r0, r7
10004f0c:	f7ff fe5e 	bl	10004bcc <_Unwind_GetGR>
10004f10:	f1b9 0f02 	cmp.w	r9, #2
10004f14:	6228      	str	r0, [r5, #32]
10004f16:	d122      	bne.n	10004f5e <__gnu_unwind_pr_common+0x2b2>
10004f18:	462b      	mov	r3, r5
10004f1a:	9a04      	ldr	r2, [sp, #16]
10004f1c:	f843 2f2c 	str.w	r2, [r3, #44]!
10004f20:	626b      	str	r3, [r5, #36]	; 0x24
10004f22:	2006      	movs	r0, #6
10004f24:	62ac      	str	r4, [r5, #40]	; 0x28
10004f26:	e71b      	b.n	10004d60 <__gnu_unwind_pr_common+0xb4>
10004f28:	6aab      	ldr	r3, [r5, #40]	; 0x28
10004f2a:	429c      	cmp	r4, r3
10004f2c:	d182      	bne.n	10004e34 <__gnu_unwind_pr_common+0x188>
10004f2e:	2304      	movs	r3, #4
10004f30:	2200      	movs	r2, #0
10004f32:	f8c5 b028 	str.w	fp, [r5, #40]	; 0x28
10004f36:	e9c5 230b 	strd	r2, r3, [r5, #44]	; 0x2c
10004f3a:	18e3      	adds	r3, r4, r3
10004f3c:	636b      	str	r3, [r5, #52]	; 0x34
10004f3e:	6823      	ldr	r3, [r4, #0]
10004f40:	2b00      	cmp	r3, #0
10004f42:	db0f      	blt.n	10004f64 <__gnu_unwind_pr_common+0x2b8>
10004f44:	2301      	movs	r3, #1
10004f46:	9301      	str	r3, [sp, #4]
10004f48:	e74d      	b.n	10004de6 <__gnu_unwind_pr_common+0x13a>
10004f4a:	4646      	mov	r6, r8
10004f4c:	6823      	ldr	r3, [r4, #0]
10004f4e:	f8dd 800c 	ldr.w	r8, [sp, #12]
10004f52:	e745      	b.n	10004de0 <__gnu_unwind_pr_common+0x134>
10004f54:	210d      	movs	r1, #13
10004f56:	4638      	mov	r0, r7
10004f58:	f7ff fe38 	bl	10004bcc <_Unwind_GetGR>
10004f5c:	6228      	str	r0, [r5, #32]
10004f5e:	9b04      	ldr	r3, [sp, #16]
10004f60:	626b      	str	r3, [r5, #36]	; 0x24
10004f62:	e7de      	b.n	10004f22 <__gnu_unwind_pr_common+0x276>
10004f64:	f10b 0001 	add.w	r0, fp, #1
10004f68:	210f      	movs	r1, #15
10004f6a:	eb04 0080 	add.w	r0, r4, r0, lsl #2
10004f6e:	e770      	b.n	10004e52 <__gnu_unwind_pr_common+0x1a6>
10004f70:	00000000 	andeq	r0, r0, r0

10004f74 <__aeabi_unwind_cpp_pr0>:
10004f74:	2300      	movs	r3, #0
10004f76:	e699      	b.n	10004cac <__gnu_unwind_pr_common>

10004f78 <__aeabi_unwind_cpp_pr1>:
10004f78:	2301      	movs	r3, #1
10004f7a:	e697      	b.n	10004cac <__gnu_unwind_pr_common>

10004f7c <__aeabi_unwind_cpp_pr2>:
10004f7c:	2302      	movs	r3, #2
10004f7e:	e695      	b.n	10004cac <__gnu_unwind_pr_common>

10004f80 <_Unwind_VRS_Pop>:
10004f80:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
10004f84:	4606      	mov	r6, r0
10004f86:	b0c3      	sub	sp, #268	; 0x10c
10004f88:	4615      	mov	r5, r2
10004f8a:	461c      	mov	r4, r3
10004f8c:	2904      	cmp	r1, #4
10004f8e:	f200 80c2 	bhi.w	10005116 <_Unwind_VRS_Pop+0x196>
10004f92:	e8df f001 	tbb	[pc, r1]
10004f96:	2cc059a3 			; <UNDEFINED> instruction: 0x2cc059a3
10004f9a:	2c000003 	stccs	0, cr0, [r0], {3}
10004f9e:	f040 80ba 	bne.w	10005116 <_Unwind_VRS_Pop+0x196>
10004fa2:	2a10      	cmp	r2, #16
10004fa4:	f200 80b7 	bhi.w	10005116 <_Unwind_VRS_Pop+0x196>
10004fa8:	6803      	ldr	r3, [r0, #0]
10004faa:	06df      	lsls	r7, r3, #27
10004fac:	f100 80b7 	bmi.w	1000511e <_Unwind_VRS_Pop+0x19e>
10004fb0:	af20      	add	r7, sp, #128	; 0x80
10004fb2:	4638      	mov	r0, r7
10004fb4:	f000 f9b0 	bl	10005318 <__gnu_Unwind_Save_WMMXC>
10004fb8:	6bb4      	ldr	r4, [r6, #56]	; 0x38
10004fba:	4639      	mov	r1, r7
10004fbc:	2300      	movs	r3, #0
10004fbe:	f04f 0c01 	mov.w	ip, #1
10004fc2:	fa0c f203 	lsl.w	r2, ip, r3
10004fc6:	4620      	mov	r0, r4
10004fc8:	3301      	adds	r3, #1
10004fca:	422a      	tst	r2, r5
10004fcc:	d003      	beq.n	10004fd6 <_Unwind_VRS_Pop+0x56>
10004fce:	f850 2b04 	ldr.w	r2, [r0], #4
10004fd2:	4604      	mov	r4, r0
10004fd4:	600a      	str	r2, [r1, #0]
10004fd6:	2b04      	cmp	r3, #4
10004fd8:	f101 0104 	add.w	r1, r1, #4
10004fdc:	d1f1      	bne.n	10004fc2 <_Unwind_VRS_Pop+0x42>
10004fde:	4638      	mov	r0, r7
10004fe0:	63b4      	str	r4, [r6, #56]	; 0x38
10004fe2:	f000 f98f 	bl	10005304 <__gnu_Unwind_Restore_WMMXC>
10004fe6:	2000      	movs	r0, #0
10004fe8:	b043      	add	sp, #268	; 0x10c
10004fea:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
10004fee:	2c03      	cmp	r4, #3
10004ff0:	f040 8091 	bne.w	10005116 <_Unwind_VRS_Pop+0x196>
10004ff4:	fa1f f882 	uxth.w	r8, r2
10004ff8:	0c14      	lsrs	r4, r2, #16
10004ffa:	eb08 4512 	add.w	r5, r8, r2, lsr #16
10004ffe:	2d10      	cmp	r5, #16
10005000:	f200 8089 	bhi.w	10005116 <_Unwind_VRS_Pop+0x196>
10005004:	6803      	ldr	r3, [r0, #0]
10005006:	071a      	lsls	r2, r3, #28
10005008:	f100 80cd 	bmi.w	100051a6 <_Unwind_VRS_Pop+0x226>
1000500c:	af20      	add	r7, sp, #128	; 0x80
1000500e:	4638      	mov	r0, r7
10005010:	f000 f956 	bl	100052c0 <__gnu_Unwind_Save_WMMXD>
10005014:	6bb5      	ldr	r5, [r6, #56]	; 0x38
10005016:	eb07 01c4 	add.w	r1, r7, r4, lsl #3
1000501a:	f1b8 0f00 	cmp.w	r8, #0
1000501e:	d00b      	beq.n	10005038 <_Unwind_VRS_Pop+0xb8>
10005020:	460b      	mov	r3, r1
10005022:	eb01 01c8 	add.w	r1, r1, r8, lsl #3
10005026:	ea4f 08c8 	mov.w	r8, r8, lsl #3
1000502a:	1ae8      	subs	r0, r5, r3
1000502c:	581a      	ldr	r2, [r3, r0]
1000502e:	f843 2b04 	str.w	r2, [r3], #4
10005032:	428b      	cmp	r3, r1
10005034:	d1fa      	bne.n	1000502c <_Unwind_VRS_Pop+0xac>
10005036:	4445      	add	r5, r8
10005038:	4638      	mov	r0, r7
1000503a:	63b5      	str	r5, [r6, #56]	; 0x38
1000503c:	f000 f91e 	bl	1000527c <__gnu_Unwind_Restore_WMMXD>
10005040:	2000      	movs	r0, #0
10005042:	b043      	add	sp, #268	; 0x10c
10005044:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
10005048:	f004 03fb 	and.w	r3, r4, #251	; 0xfb
1000504c:	ea4f 4812 	mov.w	r8, r2, lsr #16
10005050:	b295      	uxth	r5, r2
10005052:	2b01      	cmp	r3, #1
10005054:	d15f      	bne.n	10005116 <_Unwind_VRS_Pop+0x196>
10005056:	2c01      	cmp	r4, #1
10005058:	eb08 0905 	add.w	r9, r8, r5
1000505c:	d058      	beq.n	10005110 <_Unwind_VRS_Pop+0x190>
1000505e:	f1b9 0f20 	cmp.w	r9, #32
10005062:	d858      	bhi.n	10005116 <_Unwind_VRS_Pop+0x196>
10005064:	f1b8 0f0f 	cmp.w	r8, #15
10005068:	d975      	bls.n	10005156 <_Unwind_VRS_Pop+0x1d6>
1000506a:	2c05      	cmp	r4, #5
1000506c:	46a9      	mov	r9, r5
1000506e:	f000 80a4 	beq.w	100051ba <_Unwind_VRS_Pop+0x23a>
10005072:	2d00      	cmp	r5, #0
10005074:	d14f      	bne.n	10005116 <_Unwind_VRS_Pop+0x196>
10005076:	6bb3      	ldr	r3, [r6, #56]	; 0x38
10005078:	b365      	cbz	r5, 100050d4 <_Unwind_VRS_Pop+0x154>
1000507a:	af20      	add	r7, sp, #128	; 0x80
1000507c:	f04f 0900 	mov.w	r9, #0
10005080:	eb07 07c8 	add.w	r7, r7, r8, lsl #3
10005084:	eb03 05c5 	add.w	r5, r3, r5, lsl #3
10005088:	3f04      	subs	r7, #4
1000508a:	f853 1b04 	ldr.w	r1, [r3], #4
1000508e:	429d      	cmp	r5, r3
10005090:	f847 1f04 	str.w	r1, [r7, #4]!
10005094:	d1f9      	bne.n	1000508a <_Unwind_VRS_Pop+0x10a>
10005096:	f1b9 0f00 	cmp.w	r9, #0
1000509a:	d00f      	beq.n	100050bc <_Unwind_VRS_Pop+0x13c>
1000509c:	466f      	mov	r7, sp
1000509e:	4641      	mov	r1, r8
100050a0:	eb03 05c9 	add.w	r5, r3, r9, lsl #3
100050a4:	2910      	cmp	r1, #16
100050a6:	bf38      	it	cc
100050a8:	2110      	movcc	r1, #16
100050aa:	eb07 01c1 	add.w	r1, r7, r1, lsl #3
100050ae:	3984      	subs	r1, #132	; 0x84
100050b0:	f853 0b04 	ldr.w	r0, [r3], #4
100050b4:	429d      	cmp	r5, r3
100050b6:	f841 0f04 	str.w	r0, [r1, #4]!
100050ba:	d1f9      	bne.n	100050b0 <_Unwind_VRS_Pop+0x130>
100050bc:	2c01      	cmp	r4, #1
100050be:	d07a      	beq.n	100051b6 <_Unwind_VRS_Pop+0x236>
100050c0:	f1b8 0f0f 	cmp.w	r8, #15
100050c4:	63b5      	str	r5, [r6, #56]	; 0x38
100050c6:	d96a      	bls.n	1000519e <_Unwind_VRS_Pop+0x21e>
100050c8:	f1b9 0f00 	cmp.w	r9, #0
100050cc:	d002      	beq.n	100050d4 <_Unwind_VRS_Pop+0x154>
100050ce:	4668      	mov	r0, sp
100050d0:	f000 f8cc 	bl	1000526c <__gnu_Unwind_Restore_VFP_D_16_to_31>
100050d4:	2000      	movs	r0, #0
100050d6:	b043      	add	sp, #268	; 0x10c
100050d8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
100050dc:	b9dc      	cbnz	r4, 10005116 <_Unwind_VRS_Pop+0x196>
100050de:	6b87      	ldr	r7, [r0, #56]	; 0x38
100050e0:	4623      	mov	r3, r4
100050e2:	fa1f fc82 	uxth.w	ip, r2
100050e6:	2001      	movs	r0, #1
100050e8:	1d34      	adds	r4, r6, #4
100050ea:	fa00 f103 	lsl.w	r1, r0, r3
100050ee:	463a      	mov	r2, r7
100050f0:	ea11 0f0c 	tst.w	r1, ip
100050f4:	d004      	beq.n	10005100 <_Unwind_VRS_Pop+0x180>
100050f6:	f852 1b04 	ldr.w	r1, [r2], #4
100050fa:	4617      	mov	r7, r2
100050fc:	f844 1023 	str.w	r1, [r4, r3, lsl #2]
10005100:	3301      	adds	r3, #1
10005102:	2b10      	cmp	r3, #16
10005104:	d1f1      	bne.n	100050ea <_Unwind_VRS_Pop+0x16a>
10005106:	f415 5000 	ands.w	r0, r5, #8192	; 0x2000
1000510a:	d1e3      	bne.n	100050d4 <_Unwind_VRS_Pop+0x154>
1000510c:	63b7      	str	r7, [r6, #56]	; 0x38
1000510e:	e003      	b.n	10005118 <_Unwind_VRS_Pop+0x198>
10005110:	f1b9 0f10 	cmp.w	r9, #16
10005114:	d90b      	bls.n	1000512e <_Unwind_VRS_Pop+0x1ae>
10005116:	2002      	movs	r0, #2
10005118:	b043      	add	sp, #268	; 0x10c
1000511a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
1000511e:	f023 0310 	bic.w	r3, r3, #16
10005122:	f500 70e8 	add.w	r0, r0, #464	; 0x1d0
10005126:	6033      	str	r3, [r6, #0]
10005128:	f000 f8f6 	bl	10005318 <__gnu_Unwind_Save_WMMXC>
1000512c:	e740      	b.n	10004fb0 <_Unwind_VRS_Pop+0x30>
1000512e:	f1b8 0f0f 	cmp.w	r8, #15
10005132:	d8f0      	bhi.n	10005116 <_Unwind_VRS_Pop+0x196>
10005134:	6803      	ldr	r3, [r0, #0]
10005136:	07d8      	lsls	r0, r3, #31
10005138:	d450      	bmi.n	100051dc <_Unwind_VRS_Pop+0x25c>
1000513a:	af20      	add	r7, sp, #128	; 0x80
1000513c:	4638      	mov	r0, r7
1000513e:	f000 f889 	bl	10005254 <__gnu_Unwind_Save_VFP>
10005142:	6bb3      	ldr	r3, [r6, #56]	; 0x38
10005144:	2d00      	cmp	r5, #0
10005146:	d199      	bne.n	1000507c <_Unwind_VRS_Pop+0xfc>
10005148:	461d      	mov	r5, r3
1000514a:	3504      	adds	r5, #4
1000514c:	4638      	mov	r0, r7
1000514e:	63b5      	str	r5, [r6, #56]	; 0x38
10005150:	f000 f87c 	bl	1000524c <__gnu_Unwind_Restore_VFP>
10005154:	e7be      	b.n	100050d4 <_Unwind_VRS_Pop+0x154>
10005156:	f1b9 0f10 	cmp.w	r9, #16
1000515a:	d958      	bls.n	1000520e <_Unwind_VRS_Pop+0x28e>
1000515c:	2c05      	cmp	r4, #5
1000515e:	d1da      	bne.n	10005116 <_Unwind_VRS_Pop+0x196>
10005160:	6833      	ldr	r3, [r6, #0]
10005162:	f1a9 0910 	sub.w	r9, r9, #16
10005166:	07dd      	lsls	r5, r3, #31
10005168:	d509      	bpl.n	1000517e <_Unwind_VRS_Pop+0x1fe>
1000516a:	f023 0301 	bic.w	r3, r3, #1
1000516e:	4630      	mov	r0, r6
10005170:	f043 0302 	orr.w	r3, r3, #2
10005174:	f840 3b48 	str.w	r3, [r0], #72
10005178:	f000 f874 	bl	10005264 <__gnu_Unwind_Save_VFP_D>
1000517c:	6833      	ldr	r3, [r6, #0]
1000517e:	0759      	lsls	r1, r3, #29
10005180:	d421      	bmi.n	100051c6 <_Unwind_VRS_Pop+0x246>
10005182:	a820      	add	r0, sp, #128	; 0x80
10005184:	f000 f86e 	bl	10005264 <__gnu_Unwind_Save_VFP_D>
10005188:	466f      	mov	r7, sp
1000518a:	f1c8 0510 	rsb	r5, r8, #16
1000518e:	4638      	mov	r0, r7
10005190:	f000 f870 	bl	10005274 <__gnu_Unwind_Save_VFP_D_16_to_31>
10005194:	2d00      	cmp	r5, #0
10005196:	6bb3      	ldr	r3, [r6, #56]	; 0x38
10005198:	dd81      	ble.n	1000509e <_Unwind_VRS_Pop+0x11e>
1000519a:	af20      	add	r7, sp, #128	; 0x80
1000519c:	e770      	b.n	10005080 <_Unwind_VRS_Pop+0x100>
1000519e:	a820      	add	r0, sp, #128	; 0x80
100051a0:	f000 f85c 	bl	1000525c <__gnu_Unwind_Restore_VFP_D>
100051a4:	e790      	b.n	100050c8 <_Unwind_VRS_Pop+0x148>
100051a6:	f023 0308 	bic.w	r3, r3, #8
100051aa:	f500 70a8 	add.w	r0, r0, #336	; 0x150
100051ae:	6033      	str	r3, [r6, #0]
100051b0:	f000 f886 	bl	100052c0 <__gnu_Unwind_Save_WMMXD>
100051b4:	e72a      	b.n	1000500c <_Unwind_VRS_Pop+0x8c>
100051b6:	af20      	add	r7, sp, #128	; 0x80
100051b8:	e7c7      	b.n	1000514a <_Unwind_VRS_Pop+0x1ca>
100051ba:	2d00      	cmp	r5, #0
100051bc:	f43f af5b 	beq.w	10005076 <_Unwind_VRS_Pop+0xf6>
100051c0:	6833      	ldr	r3, [r6, #0]
100051c2:	075a      	lsls	r2, r3, #29
100051c4:	d5e0      	bpl.n	10005188 <_Unwind_VRS_Pop+0x208>
100051c6:	f023 0304 	bic.w	r3, r3, #4
100051ca:	4630      	mov	r0, r6
100051cc:	f840 3bd0 	str.w	r3, [r0], #208
100051d0:	f000 f850 	bl	10005274 <__gnu_Unwind_Save_VFP_D_16_to_31>
100051d4:	f1b8 0f0f 	cmp.w	r8, #15
100051d8:	d8d6      	bhi.n	10005188 <_Unwind_VRS_Pop+0x208>
100051da:	e7d2      	b.n	10005182 <_Unwind_VRS_Pop+0x202>
100051dc:	f023 0303 	bic.w	r3, r3, #3
100051e0:	4630      	mov	r0, r6
100051e2:	f840 3b48 	str.w	r3, [r0], #72
100051e6:	f000 f835 	bl	10005254 <__gnu_Unwind_Save_VFP>
100051ea:	2c01      	cmp	r4, #1
100051ec:	d0a5      	beq.n	1000513a <_Unwind_VRS_Pop+0x1ba>
100051ee:	f1b8 0f0f 	cmp.w	r8, #15
100051f2:	f63f af40 	bhi.w	10005076 <_Unwind_VRS_Pop+0xf6>
100051f6:	af20      	add	r7, sp, #128	; 0x80
100051f8:	4638      	mov	r0, r7
100051fa:	f000 f833 	bl	10005264 <__gnu_Unwind_Save_VFP_D>
100051fe:	6bb3      	ldr	r3, [r6, #56]	; 0x38
10005200:	2d00      	cmp	r5, #0
10005202:	f47f af3b 	bne.w	1000507c <_Unwind_VRS_Pop+0xfc>
10005206:	4638      	mov	r0, r7
10005208:	f000 f828 	bl	1000525c <__gnu_Unwind_Restore_VFP_D>
1000520c:	e762      	b.n	100050d4 <_Unwind_VRS_Pop+0x154>
1000520e:	6833      	ldr	r3, [r6, #0]
10005210:	07d9      	lsls	r1, r3, #31
10005212:	d5ea      	bpl.n	100051ea <_Unwind_VRS_Pop+0x26a>
10005214:	2c05      	cmp	r4, #5
10005216:	d1e1      	bne.n	100051dc <_Unwind_VRS_Pop+0x25c>
10005218:	f023 0301 	bic.w	r3, r3, #1
1000521c:	4630      	mov	r0, r6
1000521e:	af20      	add	r7, sp, #128	; 0x80
10005220:	f043 0302 	orr.w	r3, r3, #2
10005224:	f840 3b48 	str.w	r3, [r0], #72
10005228:	f000 f81c 	bl	10005264 <__gnu_Unwind_Save_VFP_D>
1000522c:	4638      	mov	r0, r7
1000522e:	f000 f819 	bl	10005264 <__gnu_Unwind_Save_VFP_D>
10005232:	e7e4      	b.n	100051fe <_Unwind_VRS_Pop+0x27e>

10005234 <__restore_core_regs>:
10005234:	f100 0134 	add.w	r1, r0, #52	; 0x34
10005238:	e891 0038 	ldmia.w	r1, {r3, r4, r5}
1000523c:	469c      	mov	ip, r3
1000523e:	46a6      	mov	lr, r4
10005240:	f84c 5d04 	str.w	r5, [ip, #-4]!
10005244:	e890 0fff 	ldmia.w	r0, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp}
10005248:	46e5      	mov	sp, ip
1000524a:	bd00      	pop	{pc}

1000524c <__gnu_Unwind_Restore_VFP>:
1000524c:	ec90 0b21 	fldmiax	r0, {d0-d15}	;@ Deprecated
10005250:	4770      	bx	lr
10005252:	bf00      	nop

10005254 <__gnu_Unwind_Save_VFP>:
10005254:	ec80 0b21 	fstmiax	r0, {d0-d15}	;@ Deprecated
10005258:	4770      	bx	lr
1000525a:	bf00      	nop

1000525c <__gnu_Unwind_Restore_VFP_D>:
1000525c:	ec90 0b20 	vldmia	r0, {d0-d15}
10005260:	4770      	bx	lr
10005262:	bf00      	nop

10005264 <__gnu_Unwind_Save_VFP_D>:
10005264:	ec80 0b20 	vstmia	r0, {d0-d15}
10005268:	4770      	bx	lr
1000526a:	bf00      	nop

1000526c <__gnu_Unwind_Restore_VFP_D_16_to_31>:
1000526c:	ecd0 0b20 	vldmia	r0, {d16-d31}
10005270:	4770      	bx	lr
10005272:	bf00      	nop

10005274 <__gnu_Unwind_Save_VFP_D_16_to_31>:
10005274:	ecc0 0b20 	vstmia	r0, {d16-d31}
10005278:	4770      	bx	lr
1000527a:	bf00      	nop

1000527c <__gnu_Unwind_Restore_WMMXD>:
1000527c:	ecf0 0102 	ldfe	f0, [r0], #8
10005280:	ecf0 1102 	ldfe	f1, [r0], #8
10005284:	ecf0 2102 	ldfe	f2, [r0], #8
10005288:	ecf0 3102 	ldfe	f3, [r0], #8
1000528c:	ecf0 4102 	ldfe	f4, [r0], #8
10005290:	ecf0 5102 	ldfe	f5, [r0], #8
10005294:	ecf0 6102 	ldfe	f6, [r0], #8
10005298:	ecf0 7102 	ldfe	f7, [r0], #8
1000529c:	ecf0 8102 	ldfp	f0, [r0], #8
100052a0:	ecf0 9102 	ldfp	f1, [r0], #8
100052a4:	ecf0 a102 	ldfp	f2, [r0], #8
100052a8:	ecf0 b102 	ldfp	f3, [r0], #8
100052ac:	ecf0 c102 	ldfp	f4, [r0], #8
100052b0:	ecf0 d102 	ldfp	f5, [r0], #8
100052b4:	ecf0 e102 	ldfp	f6, [r0], #8
100052b8:	ecf0 f102 	ldfp	f7, [r0], #8
100052bc:	4770      	bx	lr
100052be:	bf00      	nop

100052c0 <__gnu_Unwind_Save_WMMXD>:
100052c0:	ece0 0102 	stfe	f0, [r0], #8
100052c4:	ece0 1102 	stfe	f1, [r0], #8
100052c8:	ece0 2102 	stfe	f2, [r0], #8
100052cc:	ece0 3102 	stfe	f3, [r0], #8
100052d0:	ece0 4102 	stfe	f4, [r0], #8
100052d4:	ece0 5102 	stfe	f5, [r0], #8
100052d8:	ece0 6102 	stfe	f6, [r0], #8
100052dc:	ece0 7102 	stfe	f7, [r0], #8
100052e0:	ece0 8102 	stfp	f0, [r0], #8
100052e4:	ece0 9102 	stfp	f1, [r0], #8
100052e8:	ece0 a102 	stfp	f2, [r0], #8
100052ec:	ece0 b102 	stfp	f3, [r0], #8
100052f0:	ece0 c102 	stfp	f4, [r0], #8
100052f4:	ece0 d102 	stfp	f5, [r0], #8
100052f8:	ece0 e102 	stfp	f6, [r0], #8
100052fc:	ece0 f102 	stfp	f7, [r0], #8
10005300:	4770      	bx	lr
10005302:	bf00      	nop

10005304 <__gnu_Unwind_Restore_WMMXC>:
10005304:	fcb0 8101 	ldc2	1, cr8, [r0], #4
10005308:	fcb0 9101 	ldc2	1, cr9, [r0], #4
1000530c:	fcb0 a101 	ldc2	1, cr10, [r0], #4
10005310:	fcb0 b101 	ldc2	1, cr11, [r0], #4
10005314:	4770      	bx	lr
10005316:	bf00      	nop

10005318 <__gnu_Unwind_Save_WMMXC>:
10005318:	fca0 8101 	stc2	1, cr8, [r0], #4
1000531c:	fca0 9101 	stc2	1, cr9, [r0], #4
10005320:	fca0 a101 	stc2	1, cr10, [r0], #4
10005324:	fca0 b101 	stc2	1, cr11, [r0], #4
10005328:	4770      	bx	lr
1000532a:	bf00      	nop

1000532c <_Unwind_RaiseException>:
1000532c:	46ec      	mov	ip, sp
1000532e:	b500      	push	{lr}
10005330:	e92d 5000 	stmdb	sp!, {ip, lr}
10005334:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
10005338:	f04f 0300 	mov.w	r3, #0
1000533c:	e92d 000c 	stmdb	sp!, {r2, r3}
10005340:	a901      	add	r1, sp, #4
10005342:	f7ff fbb7 	bl	10004ab4 <__gnu_Unwind_RaiseException>
10005346:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
1000534a:	b012      	add	sp, #72	; 0x48
1000534c:	4770      	bx	lr
1000534e:	bf00      	nop

10005350 <_Unwind_Resume>:
10005350:	46ec      	mov	ip, sp
10005352:	b500      	push	{lr}
10005354:	e92d 5000 	stmdb	sp!, {ip, lr}
10005358:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
1000535c:	f04f 0300 	mov.w	r3, #0
10005360:	e92d 000c 	stmdb	sp!, {r2, r3}
10005364:	a901      	add	r1, sp, #4
10005366:	f7ff fbe3 	bl	10004b30 <__gnu_Unwind_Resume>
1000536a:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
1000536e:	b012      	add	sp, #72	; 0x48
10005370:	4770      	bx	lr
10005372:	bf00      	nop

10005374 <_Unwind_Resume_or_Rethrow>:
10005374:	46ec      	mov	ip, sp
10005376:	b500      	push	{lr}
10005378:	e92d 5000 	stmdb	sp!, {ip, lr}
1000537c:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
10005380:	f04f 0300 	mov.w	r3, #0
10005384:	e92d 000c 	stmdb	sp!, {r2, r3}
10005388:	a901      	add	r1, sp, #4
1000538a:	f7ff fbf3 	bl	10004b74 <__gnu_Unwind_Resume_or_Rethrow>
1000538e:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
10005392:	b012      	add	sp, #72	; 0x48
10005394:	4770      	bx	lr
10005396:	bf00      	nop

10005398 <_Unwind_ForcedUnwind>:
10005398:	46ec      	mov	ip, sp
1000539a:	b500      	push	{lr}
1000539c:	e92d 5000 	stmdb	sp!, {ip, lr}
100053a0:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
100053a4:	f04f 0300 	mov.w	r3, #0
100053a8:	e92d 000c 	stmdb	sp!, {r2, r3}
100053ac:	ab01      	add	r3, sp, #4
100053ae:	f7ff fbb5 	bl	10004b1c <__gnu_Unwind_ForcedUnwind>
100053b2:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
100053b6:	b012      	add	sp, #72	; 0x48
100053b8:	4770      	bx	lr
100053ba:	bf00      	nop

100053bc <_Unwind_Backtrace>:
100053bc:	46ec      	mov	ip, sp
100053be:	b500      	push	{lr}
100053c0:	e92d 5000 	stmdb	sp!, {ip, lr}
100053c4:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
100053c8:	f04f 0300 	mov.w	r3, #0
100053cc:	e92d 000c 	stmdb	sp!, {r2, r3}
100053d0:	aa01      	add	r2, sp, #4
100053d2:	f7ff fc2d 	bl	10004c30 <__gnu_Unwind_Backtrace>
100053d6:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
100053da:	b012      	add	sp, #72	; 0x48
100053dc:	4770      	bx	lr
100053de:	bf00      	nop

100053e0 <next_unwind_byte>:
100053e0:	7a02      	ldrb	r2, [r0, #8]
100053e2:	4603      	mov	r3, r0
100053e4:	b98a      	cbnz	r2, 1000540a <next_unwind_byte+0x2a>
100053e6:	7a42      	ldrb	r2, [r0, #9]
100053e8:	b1b2      	cbz	r2, 10005418 <next_unwind_byte+0x38>
100053ea:	6841      	ldr	r1, [r0, #4]
100053ec:	3a01      	subs	r2, #1
100053ee:	f04f 0c03 	mov.w	ip, #3
100053f2:	b410      	push	{r4}
100053f4:	7242      	strb	r2, [r0, #9]
100053f6:	1d0c      	adds	r4, r1, #4
100053f8:	6808      	ldr	r0, [r1, #0]
100053fa:	f883 c008 	strb.w	ip, [r3, #8]
100053fe:	0202      	lsls	r2, r0, #8
10005400:	605c      	str	r4, [r3, #4]
10005402:	0e00      	lsrs	r0, r0, #24
10005404:	bc10      	pop	{r4}
10005406:	601a      	str	r2, [r3, #0]
10005408:	4770      	bx	lr
1000540a:	6800      	ldr	r0, [r0, #0]
1000540c:	3a01      	subs	r2, #1
1000540e:	721a      	strb	r2, [r3, #8]
10005410:	0202      	lsls	r2, r0, #8
10005412:	0e00      	lsrs	r0, r0, #24
10005414:	601a      	str	r2, [r3, #0]
10005416:	4770      	bx	lr
10005418:	20b0      	movs	r0, #176	; 0xb0
1000541a:	4770      	bx	lr

1000541c <_Unwind_GetGR.constprop.0>:
1000541c:	b510      	push	{r4, lr}
1000541e:	b084      	sub	sp, #16
10005420:	2300      	movs	r3, #0
10005422:	220c      	movs	r2, #12
10005424:	ac03      	add	r4, sp, #12
10005426:	4619      	mov	r1, r3
10005428:	9400      	str	r4, [sp, #0]
1000542a:	f7ff fbb5 	bl	10004b98 <_Unwind_VRS_Get>
1000542e:	9803      	ldr	r0, [sp, #12]
10005430:	b004      	add	sp, #16
10005432:	bd10      	pop	{r4, pc}

10005434 <unwind_UCB_from_context>:
10005434:	e7f2      	b.n	1000541c <_Unwind_GetGR.constprop.0>
10005436:	bf00      	nop

10005438 <__gnu_unwind_execute>:
10005438:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
1000543c:	f04f 0800 	mov.w	r8, #0
10005440:	b085      	sub	sp, #20
10005442:	4606      	mov	r6, r0
10005444:	460d      	mov	r5, r1
10005446:	4628      	mov	r0, r5
10005448:	f7ff ffca 	bl	100053e0 <next_unwind_byte>
1000544c:	28b0      	cmp	r0, #176	; 0xb0
1000544e:	4604      	mov	r4, r0
10005450:	f000 80bc 	beq.w	100055cc <__gnu_unwind_execute+0x194>
10005454:	0607      	lsls	r7, r0, #24
10005456:	d520      	bpl.n	1000549a <__gnu_unwind_execute+0x62>
10005458:	f000 03f0 	and.w	r3, r0, #240	; 0xf0
1000545c:	2b80      	cmp	r3, #128	; 0x80
1000545e:	d04e      	beq.n	100054fe <__gnu_unwind_execute+0xc6>
10005460:	2b90      	cmp	r3, #144	; 0x90
10005462:	d037      	beq.n	100054d4 <__gnu_unwind_execute+0x9c>
10005464:	2ba0      	cmp	r3, #160	; 0xa0
10005466:	d061      	beq.n	1000552c <__gnu_unwind_execute+0xf4>
10005468:	2bb0      	cmp	r3, #176	; 0xb0
1000546a:	d076      	beq.n	1000555a <__gnu_unwind_execute+0x122>
1000546c:	2bc0      	cmp	r3, #192	; 0xc0
1000546e:	f000 808d 	beq.w	1000558c <__gnu_unwind_execute+0x154>
10005472:	f000 03f8 	and.w	r3, r0, #248	; 0xf8
10005476:	2bd0      	cmp	r3, #208	; 0xd0
10005478:	d10b      	bne.n	10005492 <__gnu_unwind_execute+0x5a>
1000547a:	f000 0207 	and.w	r2, r0, #7
1000547e:	2305      	movs	r3, #5
10005480:	2101      	movs	r1, #1
10005482:	4630      	mov	r0, r6
10005484:	3201      	adds	r2, #1
10005486:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
1000548a:	f7ff fd79 	bl	10004f80 <_Unwind_VRS_Pop>
1000548e:	2800      	cmp	r0, #0
10005490:	d0d9      	beq.n	10005446 <__gnu_unwind_execute+0xe>
10005492:	2009      	movs	r0, #9
10005494:	b005      	add	sp, #20
10005496:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
1000549a:	0083      	lsls	r3, r0, #2
1000549c:	f10d 090c 	add.w	r9, sp, #12
100054a0:	220d      	movs	r2, #13
100054a2:	4630      	mov	r0, r6
100054a4:	b2db      	uxtb	r3, r3
100054a6:	f8cd 9000 	str.w	r9, [sp]
100054aa:	1d1f      	adds	r7, r3, #4
100054ac:	2300      	movs	r3, #0
100054ae:	4619      	mov	r1, r3
100054b0:	f7ff fb72 	bl	10004b98 <_Unwind_VRS_Get>
100054b4:	9b03      	ldr	r3, [sp, #12]
100054b6:	0660      	lsls	r0, r4, #25
100054b8:	f04f 020d 	mov.w	r2, #13
100054bc:	4630      	mov	r0, r6
100054be:	f8cd 9000 	str.w	r9, [sp]
100054c2:	bf4c      	ite	mi
100054c4:	1bdf      	submi	r7, r3, r7
100054c6:	18ff      	addpl	r7, r7, r3
100054c8:	2300      	movs	r3, #0
100054ca:	9703      	str	r7, [sp, #12]
100054cc:	4619      	mov	r1, r3
100054ce:	f7ff fb89 	bl	10004be4 <_Unwind_VRS_Set>
100054d2:	e7b8      	b.n	10005446 <__gnu_unwind_execute+0xe>
100054d4:	f000 030d 	and.w	r3, r0, #13
100054d8:	2b0d      	cmp	r3, #13
100054da:	d0da      	beq.n	10005492 <__gnu_unwind_execute+0x5a>
100054dc:	af03      	add	r7, sp, #12
100054de:	2300      	movs	r3, #0
100054e0:	f000 020f 	and.w	r2, r0, #15
100054e4:	4630      	mov	r0, r6
100054e6:	4619      	mov	r1, r3
100054e8:	9700      	str	r7, [sp, #0]
100054ea:	f7ff fb55 	bl	10004b98 <_Unwind_VRS_Get>
100054ee:	2300      	movs	r3, #0
100054f0:	220d      	movs	r2, #13
100054f2:	4630      	mov	r0, r6
100054f4:	4619      	mov	r1, r3
100054f6:	9700      	str	r7, [sp, #0]
100054f8:	f7ff fb74 	bl	10004be4 <_Unwind_VRS_Set>
100054fc:	e7a3      	b.n	10005446 <__gnu_unwind_execute+0xe>
100054fe:	0224      	lsls	r4, r4, #8
10005500:	4628      	mov	r0, r5
10005502:	f7ff ff6d 	bl	100053e0 <next_unwind_byte>
10005506:	4320      	orrs	r0, r4
10005508:	f5b0 4f00 	cmp.w	r0, #32768	; 0x8000
1000550c:	d0c1      	beq.n	10005492 <__gnu_unwind_execute+0x5a>
1000550e:	0104      	lsls	r4, r0, #4
10005510:	2300      	movs	r3, #0
10005512:	4630      	mov	r0, r6
10005514:	b2a2      	uxth	r2, r4
10005516:	4619      	mov	r1, r3
10005518:	f7ff fd32 	bl	10004f80 <_Unwind_VRS_Pop>
1000551c:	2800      	cmp	r0, #0
1000551e:	d1b8      	bne.n	10005492 <__gnu_unwind_execute+0x5a>
10005520:	f414 4f00 	tst.w	r4, #32768	; 0x8000
10005524:	bf18      	it	ne
10005526:	f04f 0801 	movne.w	r8, #1
1000552a:	e78c      	b.n	10005446 <__gnu_unwind_execute+0xe>
1000552c:	43c2      	mvns	r2, r0
1000552e:	0701      	lsls	r1, r0, #28
10005530:	4630      	mov	r0, r6
10005532:	f002 0307 	and.w	r3, r2, #7
10005536:	f44f 627f 	mov.w	r2, #4080	; 0xff0
1000553a:	fa42 f203 	asr.w	r2, r2, r3
1000553e:	f04f 0300 	mov.w	r3, #0
10005542:	f402 627f 	and.w	r2, r2, #4080	; 0xff0
10005546:	4619      	mov	r1, r3
10005548:	bf48      	it	mi
1000554a:	f442 4280 	orrmi.w	r2, r2, #16384	; 0x4000
1000554e:	f7ff fd17 	bl	10004f80 <_Unwind_VRS_Pop>
10005552:	2800      	cmp	r0, #0
10005554:	f43f af77 	beq.w	10005446 <__gnu_unwind_execute+0xe>
10005558:	e79b      	b.n	10005492 <__gnu_unwind_execute+0x5a>
1000555a:	28b1      	cmp	r0, #177	; 0xb1
1000555c:	d03b      	beq.n	100055d6 <__gnu_unwind_execute+0x19e>
1000555e:	28b2      	cmp	r0, #178	; 0xb2
10005560:	f000 80a1 	beq.w	100056a6 <__gnu_unwind_execute+0x26e>
10005564:	28b3      	cmp	r0, #179	; 0xb3
10005566:	d041      	beq.n	100055ec <__gnu_unwind_execute+0x1b4>
10005568:	f000 03fc 	and.w	r3, r0, #252	; 0xfc
1000556c:	2bb4      	cmp	r3, #180	; 0xb4
1000556e:	d090      	beq.n	10005492 <__gnu_unwind_execute+0x5a>
10005570:	f000 0207 	and.w	r2, r0, #7
10005574:	2301      	movs	r3, #1
10005576:	441a      	add	r2, r3
10005578:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
1000557c:	4619      	mov	r1, r3
1000557e:	4630      	mov	r0, r6
10005580:	f7ff fcfe 	bl	10004f80 <_Unwind_VRS_Pop>
10005584:	2800      	cmp	r0, #0
10005586:	f43f af5e 	beq.w	10005446 <__gnu_unwind_execute+0xe>
1000558a:	e782      	b.n	10005492 <__gnu_unwind_execute+0x5a>
1000558c:	28c6      	cmp	r0, #198	; 0xc6
1000558e:	d051      	beq.n	10005634 <__gnu_unwind_execute+0x1fc>
10005590:	28c7      	cmp	r0, #199	; 0xc7
10005592:	d062      	beq.n	1000565a <__gnu_unwind_execute+0x222>
10005594:	f000 03f8 	and.w	r3, r0, #248	; 0xf8
10005598:	2bc0      	cmp	r3, #192	; 0xc0
1000559a:	d071      	beq.n	10005680 <__gnu_unwind_execute+0x248>
1000559c:	28c8      	cmp	r0, #200	; 0xc8
1000559e:	d076      	beq.n	1000568e <__gnu_unwind_execute+0x256>
100055a0:	28c9      	cmp	r0, #201	; 0xc9
100055a2:	f47f af76 	bne.w	10005492 <__gnu_unwind_execute+0x5a>
100055a6:	4628      	mov	r0, r5
100055a8:	f7ff ff1a 	bl	100053e0 <next_unwind_byte>
100055ac:	0302      	lsls	r2, r0, #12
100055ae:	f000 000f 	and.w	r0, r0, #15
100055b2:	f402 2270 	and.w	r2, r2, #983040	; 0xf0000
100055b6:	3001      	adds	r0, #1
100055b8:	4302      	orrs	r2, r0
100055ba:	2101      	movs	r1, #1
100055bc:	2305      	movs	r3, #5
100055be:	4630      	mov	r0, r6
100055c0:	f7ff fcde 	bl	10004f80 <_Unwind_VRS_Pop>
100055c4:	2800      	cmp	r0, #0
100055c6:	f43f af3e 	beq.w	10005446 <__gnu_unwind_execute+0xe>
100055ca:	e762      	b.n	10005492 <__gnu_unwind_execute+0x5a>
100055cc:	f1b8 0f00 	cmp.w	r8, #0
100055d0:	d01f      	beq.n	10005612 <__gnu_unwind_execute+0x1da>
100055d2:	2000      	movs	r0, #0
100055d4:	e75e      	b.n	10005494 <__gnu_unwind_execute+0x5c>
100055d6:	4628      	mov	r0, r5
100055d8:	f7ff ff02 	bl	100053e0 <next_unwind_byte>
100055dc:	4602      	mov	r2, r0
100055de:	2800      	cmp	r0, #0
100055e0:	f43f af57 	beq.w	10005492 <__gnu_unwind_execute+0x5a>
100055e4:	f010 03f0 	ands.w	r3, r0, #240	; 0xf0
100055e8:	d0c8      	beq.n	1000557c <__gnu_unwind_execute+0x144>
100055ea:	e752      	b.n	10005492 <__gnu_unwind_execute+0x5a>
100055ec:	4628      	mov	r0, r5
100055ee:	f7ff fef7 	bl	100053e0 <next_unwind_byte>
100055f2:	f000 030f 	and.w	r3, r0, #15
100055f6:	0302      	lsls	r2, r0, #12
100055f8:	4630      	mov	r0, r6
100055fa:	3301      	adds	r3, #1
100055fc:	f402 2270 	and.w	r2, r2, #983040	; 0xf0000
10005600:	431a      	orrs	r2, r3
10005602:	2301      	movs	r3, #1
10005604:	4619      	mov	r1, r3
10005606:	f7ff fcbb 	bl	10004f80 <_Unwind_VRS_Pop>
1000560a:	2800      	cmp	r0, #0
1000560c:	f43f af1b 	beq.w	10005446 <__gnu_unwind_execute+0xe>
10005610:	e73f      	b.n	10005492 <__gnu_unwind_execute+0x5a>
10005612:	ac03      	add	r4, sp, #12
10005614:	4643      	mov	r3, r8
10005616:	220e      	movs	r2, #14
10005618:	4641      	mov	r1, r8
1000561a:	4630      	mov	r0, r6
1000561c:	9400      	str	r4, [sp, #0]
1000561e:	f7ff fabb 	bl	10004b98 <_Unwind_VRS_Get>
10005622:	4643      	mov	r3, r8
10005624:	220f      	movs	r2, #15
10005626:	4630      	mov	r0, r6
10005628:	4641      	mov	r1, r8
1000562a:	9400      	str	r4, [sp, #0]
1000562c:	f7ff fada 	bl	10004be4 <_Unwind_VRS_Set>
10005630:	4640      	mov	r0, r8
10005632:	e72f      	b.n	10005494 <__gnu_unwind_execute+0x5c>
10005634:	4628      	mov	r0, r5
10005636:	f7ff fed3 	bl	100053e0 <next_unwind_byte>
1000563a:	f000 030f 	and.w	r3, r0, #15
1000563e:	0302      	lsls	r2, r0, #12
10005640:	4630      	mov	r0, r6
10005642:	3301      	adds	r3, #1
10005644:	f402 2270 	and.w	r2, r2, #983040	; 0xf0000
10005648:	431a      	orrs	r2, r3
1000564a:	2303      	movs	r3, #3
1000564c:	4619      	mov	r1, r3
1000564e:	f7ff fc97 	bl	10004f80 <_Unwind_VRS_Pop>
10005652:	2800      	cmp	r0, #0
10005654:	f43f aef7 	beq.w	10005446 <__gnu_unwind_execute+0xe>
10005658:	e71b      	b.n	10005492 <__gnu_unwind_execute+0x5a>
1000565a:	4628      	mov	r0, r5
1000565c:	f7ff fec0 	bl	100053e0 <next_unwind_byte>
10005660:	4602      	mov	r2, r0
10005662:	2800      	cmp	r0, #0
10005664:	f43f af15 	beq.w	10005492 <__gnu_unwind_execute+0x5a>
10005668:	f010 03f0 	ands.w	r3, r0, #240	; 0xf0
1000566c:	f47f af11 	bne.w	10005492 <__gnu_unwind_execute+0x5a>
10005670:	2104      	movs	r1, #4
10005672:	4630      	mov	r0, r6
10005674:	f7ff fc84 	bl	10004f80 <_Unwind_VRS_Pop>
10005678:	2800      	cmp	r0, #0
1000567a:	f43f aee4 	beq.w	10005446 <__gnu_unwind_execute+0xe>
1000567e:	e708      	b.n	10005492 <__gnu_unwind_execute+0x5a>
10005680:	f000 020f 	and.w	r2, r0, #15
10005684:	2303      	movs	r3, #3
10005686:	3201      	adds	r2, #1
10005688:	f442 2220 	orr.w	r2, r2, #655360	; 0xa0000
1000568c:	e776      	b.n	1000557c <__gnu_unwind_execute+0x144>
1000568e:	4628      	mov	r0, r5
10005690:	f7ff fea6 	bl	100053e0 <next_unwind_byte>
10005694:	f000 02f0 	and.w	r2, r0, #240	; 0xf0
10005698:	f000 030f 	and.w	r3, r0, #15
1000569c:	3210      	adds	r2, #16
1000569e:	3301      	adds	r3, #1
100056a0:	ea43 3202 	orr.w	r2, r3, r2, lsl #12
100056a4:	e789      	b.n	100055ba <__gnu_unwind_execute+0x182>
100056a6:	2300      	movs	r3, #0
100056a8:	f10d 090c 	add.w	r9, sp, #12
100056ac:	220d      	movs	r2, #13
100056ae:	4630      	mov	r0, r6
100056b0:	4619      	mov	r1, r3
100056b2:	f8cd 9000 	str.w	r9, [sp]
100056b6:	f7ff fa6f 	bl	10004b98 <_Unwind_VRS_Get>
100056ba:	4628      	mov	r0, r5
100056bc:	f7ff fe90 	bl	100053e0 <next_unwind_byte>
100056c0:	0602      	lsls	r2, r0, #24
100056c2:	f04f 0402 	mov.w	r4, #2
100056c6:	d50b      	bpl.n	100056e0 <__gnu_unwind_execute+0x2a8>
100056c8:	f000 007f 	and.w	r0, r0, #127	; 0x7f
100056cc:	9b03      	ldr	r3, [sp, #12]
100056ce:	40a0      	lsls	r0, r4
100056d0:	3407      	adds	r4, #7
100056d2:	4418      	add	r0, r3
100056d4:	9003      	str	r0, [sp, #12]
100056d6:	4628      	mov	r0, r5
100056d8:	f7ff fe82 	bl	100053e0 <next_unwind_byte>
100056dc:	0603      	lsls	r3, r0, #24
100056de:	d4f3      	bmi.n	100056c8 <__gnu_unwind_execute+0x290>
100056e0:	9b03      	ldr	r3, [sp, #12]
100056e2:	f000 027f 	and.w	r2, r0, #127	; 0x7f
100056e6:	f8cd 9000 	str.w	r9, [sp]
100056ea:	4630      	mov	r0, r6
100056ec:	40a2      	lsls	r2, r4
100056ee:	f503 7301 	add.w	r3, r3, #516	; 0x204
100056f2:	441a      	add	r2, r3
100056f4:	2300      	movs	r3, #0
100056f6:	9203      	str	r2, [sp, #12]
100056f8:	4619      	mov	r1, r3
100056fa:	220d      	movs	r2, #13
100056fc:	f7ff fa72 	bl	10004be4 <_Unwind_VRS_Set>
10005700:	e6a1      	b.n	10005446 <__gnu_unwind_execute+0xe>
10005702:	bf00      	nop

10005704 <__gnu_unwind_frame>:
10005704:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
10005706:	460b      	mov	r3, r1
10005708:	f04f 0c03 	mov.w	ip, #3
1000570c:	4618      	mov	r0, r3
1000570e:	3208      	adds	r2, #8
10005710:	f852 3c04 	ldr.w	r3, [r2, #-4]
10005714:	b500      	push	{lr}
10005716:	b085      	sub	sp, #20
10005718:	9202      	str	r2, [sp, #8]
1000571a:	a901      	add	r1, sp, #4
1000571c:	0e1a      	lsrs	r2, r3, #24
1000571e:	f88d c00c 	strb.w	ip, [sp, #12]
10005722:	021b      	lsls	r3, r3, #8
10005724:	f88d 200d 	strb.w	r2, [sp, #13]
10005728:	9301      	str	r3, [sp, #4]
1000572a:	f7ff fe85 	bl	10005438 <__gnu_unwind_execute>
1000572e:	b005      	add	sp, #20
10005730:	f85d fb04 	ldr.w	pc, [sp], #4

10005734 <_Unwind_GetRegionStart>:
10005734:	b508      	push	{r3, lr}
10005736:	f7ff fe7d 	bl	10005434 <unwind_UCB_from_context>
1000573a:	6c80      	ldr	r0, [r0, #72]	; 0x48
1000573c:	bd08      	pop	{r3, pc}
1000573e:	bf00      	nop

10005740 <_Unwind_GetLanguageSpecificData>:
10005740:	b508      	push	{r3, lr}
10005742:	f7ff fe77 	bl	10005434 <unwind_UCB_from_context>
10005746:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
10005748:	79c3      	ldrb	r3, [r0, #7]
1000574a:	3302      	adds	r3, #2
1000574c:	eb00 0083 	add.w	r0, r0, r3, lsl #2
10005750:	bd08      	pop	{r3, pc}
10005752:	bf00      	nop

10005754 <__aeabi_idiv0>:
10005754:	4770      	bx	lr
10005756:	bf00      	nop

10005758 <abort>:
10005758:	2006      	movs	r0, #6
1000575a:	b508      	push	{r3, lr}
1000575c:	f000 f804 	bl	10005768 <raise>
10005760:	2001      	movs	r0, #1
10005762:	f7fe f877 	bl	10003854 <_exit>
10005766:	bf00      	nop

10005768 <raise>:
10005768:	b538      	push	{r3, r4, r5, lr}
1000576a:	281f      	cmp	r0, #31
1000576c:	4b14      	ldr	r3, [pc, #80]	; (100057c0 <raise+0x58>)
1000576e:	681d      	ldr	r5, [r3, #0]
10005770:	d820      	bhi.n	100057b4 <raise+0x4c>
10005772:	f8d5 22dc 	ldr.w	r2, [r5, #732]	; 0x2dc
10005776:	4604      	mov	r4, r0
10005778:	b162      	cbz	r2, 10005794 <raise+0x2c>
1000577a:	f852 3020 	ldr.w	r3, [r2, r0, lsl #2]
1000577e:	b14b      	cbz	r3, 10005794 <raise+0x2c>
10005780:	2b01      	cmp	r3, #1
10005782:	d015      	beq.n	100057b0 <raise+0x48>
10005784:	1c59      	adds	r1, r3, #1
10005786:	d00f      	beq.n	100057a8 <raise+0x40>
10005788:	2500      	movs	r5, #0
1000578a:	f842 5020 	str.w	r5, [r2, r0, lsl #2]
1000578e:	4798      	blx	r3
10005790:	4628      	mov	r0, r5
10005792:	bd38      	pop	{r3, r4, r5, pc}
10005794:	4628      	mov	r0, r5
10005796:	f000 f82b 	bl	100057f0 <_getpid_r>
1000579a:	4622      	mov	r2, r4
1000579c:	4601      	mov	r1, r0
1000579e:	4628      	mov	r0, r5
100057a0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
100057a4:	f000 b80e 	b.w	100057c4 <_kill_r>
100057a8:	2316      	movs	r3, #22
100057aa:	2001      	movs	r0, #1
100057ac:	602b      	str	r3, [r5, #0]
100057ae:	bd38      	pop	{r3, r4, r5, pc}
100057b0:	2000      	movs	r0, #0
100057b2:	bd38      	pop	{r3, r4, r5, pc}
100057b4:	2316      	movs	r3, #22
100057b6:	f04f 30ff 	mov.w	r0, #4294967295
100057ba:	602b      	str	r3, [r5, #0]
100057bc:	bd38      	pop	{r3, r4, r5, pc}
100057be:	bf00      	nop
100057c0:	3800000c 	stmdacc	r0, {r2, r3}

100057c4 <_kill_r>:
100057c4:	b570      	push	{r4, r5, r6, lr}
100057c6:	460c      	mov	r4, r1
100057c8:	4603      	mov	r3, r0
100057ca:	4d08      	ldr	r5, [pc, #32]	; (100057ec <_kill_r+0x28>)
100057cc:	2600      	movs	r6, #0
100057ce:	4620      	mov	r0, r4
100057d0:	4611      	mov	r1, r2
100057d2:	461c      	mov	r4, r3
100057d4:	602e      	str	r6, [r5, #0]
100057d6:	f7fe f835 	bl	10003844 <_kill>
100057da:	1c43      	adds	r3, r0, #1
100057dc:	d000      	beq.n	100057e0 <_kill_r+0x1c>
100057de:	bd70      	pop	{r4, r5, r6, pc}
100057e0:	682b      	ldr	r3, [r5, #0]
100057e2:	2b00      	cmp	r3, #0
100057e4:	d0fb      	beq.n	100057de <_kill_r+0x1a>
100057e6:	6023      	str	r3, [r4, #0]
100057e8:	bd70      	pop	{r4, r5, r6, pc}
100057ea:	bf00      	nop
100057ec:	38008d10 	stmdacc	r0, {r4, r8, sl, fp, pc}

100057f0 <_getpid_r>:
100057f0:	f7fe b826 	b.w	10003840 <_getpid>

100057f4 <_init>:
100057f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
100057f6:	bf00      	nop
100057f8:	bcf8      	pop	{r3, r4, r5, r6, r7}
100057fa:	bc08      	pop	{r3}
100057fc:	469e      	mov	lr, r3
100057fe:	4770      	bx	lr

10005800 <_fini>:
10005800:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10005802:	bf00      	nop
10005804:	bcf8      	pop	{r3, r4, r5, r6, r7}
10005806:	bc08      	pop	{r3}
10005808:	469e      	mov	lr, r3
1000580a:	4770      	bx	lr
1000580c:	6e69616d 	powvsez	f6, f1, #5.0
10005810:	7361745f 	cmnvc	r1, #1593835520	; 0x5f000000
10005814:	0000006b 	andeq	r0, r0, fp, rrx
10005818:	6e69616d 	powvsez	f6, f1, #5.0
1000581c:	73617420 	cmnvc	r1, #32, 8	; 0x20000000
10005820:	7263206b 	rsbvc	r2, r3, #107	; 0x6b
10005824:	65746165 	ldrbvs	r6, [r4, #-357]!	; 0xfffffe9b
10005828:	69616620 	stmdbvs	r1!, {r5, r9, sl, sp, lr}^
1000582c:	2864656c 	stmdacs	r4!, {r2, r3, r5, r6, r8, sl, sp, lr}^
10005830:	2e296425 	cdpcs	4, 2, cr6, cr9, cr5, {1}
10005834:	00000a0d 	andeq	r0, r0, sp, lsl #20
10005838:	72646461 	rsbvc	r6, r4, #1627389952	; 0x61000000
1000583c:	2578303a 	ldrbcs	r3, [r8, #-58]!	; 0xffffffc6
10005840:	2d583230 	lfmcs	f3, 2, [r8, #-192]	; 0xffffff40
10005844:	756c6176 	strbvc	r6, [ip, #-374]!	; 0xfffffe8a
10005848:	78303a65 	ldmdavc	r0!, {r0, r2, r5, r6, r9, fp, ip, sp}
1000584c:	58383025 	ldmdapl	r8!, {r0, r2, r5, ip, sp}
10005850:	00000a0d 	andeq	r0, r0, sp, lsl #20
10005854:	6c6c6143 	stfvse	f6, [ip], #-268	; 0xfffffef4
10005858:	63617453 	cmnvs	r1, #1392508928	; 0x53000000
1000585c:	7564206b 	strbvc	r2, [r4, #-107]!	; 0xffffff95
10005860:	6520706d 	strvs	r7, [r0, #-109]!	; 0xffffff93
10005864:	726f7272 	rsbvc	r7, pc, #536870919	; 0x20000007
10005868:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
1000586c:	00000a0d 	andeq	r0, r0, sp, lsl #20
10005870:	6c6c6143 	stfvse	f6, [ip], #-268	; 0xfffffef4
10005874:	63617453 	cmnvs	r1, #1392508928	; 0x53000000
10005878:	205b3a6b 	subscs	r3, fp, fp, ror #20
1000587c:	00000000 	andeq	r0, r0, r0
10005880:	58383025 	ldmdapl	r8!, {r0, r2, r5, ip, sp}
10005884:	00000020 	andeq	r0, r0, r0, lsr #32
10005888:	000d205d 	andeq	r2, sp, sp, asr r0
1000588c:	73696874 	cmnvc	r9, #116, 16	; 0x740000
10005890:	20736920 	rsbscs	r6, r3, r0, lsr #18
10005894:	0d2e7325 	stceq	3, cr7, [lr, #-148]!	; 0xffffff6c
10005898:	0000000a 	andeq	r0, r0, sl
1000589c:	6c6c6568 	cfstr64vs	mvdx6, [ip], #-416	; 0xfffffe60
100058a0:	6874206f 	ldmdavs	r4!, {r0, r1, r2, r3, r5, r6, sp}^
100058a4:	69207369 	stmdbvs	r0!, {r0, r3, r5, r6, r8, r9, ip, sp, lr}
100058a8:	72462073 	subvc	r2, r6, #115	; 0x73
100058ac:	54526565 	ldrbpl	r6, [r2], #-1381	; 0xfffffa9b
100058b0:	0d2e534f 	stceq	3, cr5, [lr, #-316]!	; 0xfffffec4
100058b4:	00000000 	andeq	r0, r0, r0
100058b8:	72617453 	rsbvc	r7, r1, #1392508928	; 0x53000000
100058bc:	00000d74 	andeq	r0, r0, r4, ror sp
100058c0:	6c6c6568 	cfstr64vs	mvdx6, [ip], #-416	; 0xfffffe60
100058c4:	6f77206f 	svcvs	0x0077206f
100058c8:	20646c72 	rsbcs	r6, r4, r2, ror ip
100058cc:	6425202d 	strtvs	r2, [r5], #-45	; 0xffffffd3
100058d0:	000a0d2e 	andeq	r0, sl, lr, lsr #26

100058d4 <__func__.1>:
100058d4:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
100058d8:	00000035 	andeq	r0, r0, r5, lsr r0

100058dc <__func__.2>:
100058dc:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
100058e0:	00000034 	andeq	r0, r0, r4, lsr r0

100058e4 <__func__.3>:
100058e4:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
100058e8:	00000033 	andeq	r0, r0, r3, lsr r0

100058ec <__func__.4>:
100058ec:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
100058f0:	00000032 	andeq	r0, r0, r2, lsr r0

100058f4 <__func__.5>:
100058f4:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
100058f8:	00000031 	andeq	r0, r0, r1, lsr r0

100058fc <__func__.6>:
100058fc:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
10005900:	00000030 	andeq	r0, r0, r0, lsr r0
10005904:	00696e66 	rsbeq	r6, r9, r6, ror #28
10005908:	2b696e66 	blcs	11a612a8 <__copy_table_end__+0x1a5b424>
1000590c:	00000000 	andeq	r0, r0, r0
10005910:	006e616e 	rsbeq	r6, lr, lr, ror #2
10005914:	2d696e66 	stclcs	14, cr6, [r9, #-408]!	; 0xfffffe68
	...

10005920 <pow10.0>:
10005920:	00000000 	andeq	r0, r0, r0
10005924:	3ff00000 	svccc	0x00f00000	; IMB
10005928:	00000000 	andeq	r0, r0, r0
1000592c:	40240000 	eormi	r0, r4, r0
10005930:	00000000 	andeq	r0, r0, r0
10005934:	40590000 	subsmi	r0, r9, r0
10005938:	00000000 	andeq	r0, r0, r0
1000593c:	408f4000 	addmi	r4, pc, r0
10005940:	00000000 	andeq	r0, r0, r0
10005944:	40c38800 	sbcmi	r8, r3, r0, lsl #16
10005948:	00000000 	andeq	r0, r0, r0
1000594c:	40f86a00 	rscsmi	r6, r8, r0, lsl #20
10005950:	00000000 	andeq	r0, r0, r0
10005954:	412e8480 	smlawbmi	lr, r0, r4, r8
10005958:	00000000 	andeq	r0, r0, r0
1000595c:	416312d0 	ldrdmi	r1, [r3, #-32]!	; 0xffffffe0
10005960:	00000000 	andeq	r0, r0, r0
10005964:	4197d784 	orrsmi	sp, r7, r4, lsl #15
10005968:	00000000 	andeq	r0, r0, r0
1000596c:	41cdcd65 	bicmi	ip, sp, r5, ror #26
10005970:	45584520 	ldrbmi	r4, [r8, #-1312]	; 0xfffffae0
10005974:	5445525f 	strbpl	r5, [r5], #-607	; 0xfffffda1
10005978:	3a4e5255 	bcc	1139a2d4 <__copy_table_end__+0x1394450>
1000597c:	25783020 	ldrbcs	r3, [r8, #-32]!	; 0xffffffe0
10005980:	20583830 	subscs	r3, r8, r0, lsr r8
10005984:	00000a0d 	andeq	r0, r0, sp, lsl #20
10005988:	65646f43 	strbvs	r6, [r4, #-3907]!	; 0xfffff0bd
1000598c:	61745320 	cmnvs	r4, r0, lsr #6
10005990:	5b3a6b63 	blpl	10ea0724 <__copy_table_end__+0xe9a8a0>
10005994:	58383025 	ldmdapl	r8!, {r0, r2, r5, ip, sp}
10005998:	25202d20 	strcs	r2, [r0, #-3360]!	; 0xfffff2e0
1000599c:	5d583830 	ldclpl	8, cr3, [r8, #-192]	; 0xffffff40
100059a0:	6973202c 	ldmdbvs	r3!, {r2, r3, r5, sp}^
100059a4:	253a657a 	ldrcs	r6, [sl, #-1402]!	; 0xfffffa86
100059a8:	000a0d64 	andeq	r0, sl, r4, ror #26
100059ac:	65646f43 	strbvs	r6, [r4, #-3907]!	; 0xfffff0bd
100059b0:	78655420 	stmdavc	r5!, {r5, sl, ip, lr}^
100059b4:	5b3a2074 	blpl	10e8db8c <__copy_table_end__+0xe87d08>
100059b8:	58383025 	ldmdapl	r8!, {r0, r2, r5, ip, sp}
100059bc:	25202d20 	strcs	r2, [r0, #-3360]!	; 0xfffff2e0
100059c0:	5d583830 	ldclpl	8, cr3, [r8, #-192]	; 0xffffff40
100059c4:	6973202c 	ldmdbvs	r3!, {r2, r3, r5, sp}^
100059c8:	253a657a 	ldrcs	r6, [sl, #-1402]!	; 0xfffffa86
100059cc:	000a0d64 	andeq	r0, sl, r4, ror #26
100059d0:	65646f43 	strbvs	r6, [r4, #-3907]!	; 0xfffff0bd
100059d4:	61745320 	cmnvs	r4, r0, lsr #6
100059d8:	47206b63 	strmi	r6, [r0, -r3, ror #22]!
100059dc:	74776f72 	ldrbtvc	r6, [r7], #-3954	; 0xfffff08e
100059e0:	6f442068 	svcvs	0x00442068
100059e4:	61776e77 	cmnvs	r7, r7, ror lr
100059e8:	253a6472 	ldrcs	r6, [sl, #-1138]!	; 0xfffffb8e
100059ec:	000a0d64 	andeq	r0, sl, r4, ror #26
100059f0:	72614820 	rsbvc	r4, r1, #32, 16	; 0x200000
100059f4:	75614664 	strbvc	r4, [r1, #-1636]!	; 0xfffff99c
100059f8:	4920746c 	stmdbmi	r0!, {r2, r3, r5, r6, sl, ip, sp, lr}
100059fc:	726f666e 	rsbvc	r6, pc, #115343360	; 0x6e00000
10005a00:	6974616d 	ldmdbvs	r4!, {r0, r2, r3, r5, r6, r8, sp, lr}^
10005a04:	44206e6f 	strtmi	r6, [r0], #-3695	; 0xfffff191
10005a08:	20706d75 	rsbscs	r6, r0, r5, ror sp
10005a0c:	0000000d 	andeq	r0, r0, sp
10005a10:	61745320 	cmnvs	r4, r0, lsr #6
10005a14:	46206b63 	strtmi	r6, [r0], -r3, ror #22
10005a18:	656d6172 	strbvs	r6, [sp, #-370]!	; 0xfffffe8e
10005a1c:	0d202020 	stceq	0, cr2, [r0, #-128]!	; 0xffffff80
10005a20:	00000000 	andeq	r0, r0, r0
10005a24:	20305220 	eorscs	r5, r0, r0, lsr #4
10005a28:	203d2020 	eorscs	r2, sp, r0, lsr #32
10005a2c:	30257830 	eorcc	r7, r5, r0, lsr r8
10005a30:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
10005a34:	0000000a 	andeq	r0, r0, sl
10005a38:	20315220 	eorscs	r5, r1, r0, lsr #4
10005a3c:	203d2020 	eorscs	r2, sp, r0, lsr #32
10005a40:	30257830 	eorcc	r7, r5, r0, lsr r8
10005a44:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
10005a48:	0000000a 	andeq	r0, r0, sl
10005a4c:	20325220 	eorscs	r5, r2, r0, lsr #4
10005a50:	203d2020 	eorscs	r2, sp, r0, lsr #32
10005a54:	30257830 	eorcc	r7, r5, r0, lsr r8
10005a58:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
10005a5c:	0000000a 	andeq	r0, r0, sl
10005a60:	20335220 	eorscs	r5, r3, r0, lsr #4
10005a64:	203d2020 	eorscs	r2, sp, r0, lsr #32
10005a68:	30257830 	eorcc	r7, r5, r0, lsr r8
10005a6c:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
10005a70:	0000000a 	andeq	r0, r0, sl
10005a74:	20345220 	eorscs	r5, r4, r0, lsr #4
10005a78:	203d2020 	eorscs	r2, sp, r0, lsr #32
10005a7c:	30257830 	eorcc	r7, r5, r0, lsr r8
10005a80:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
10005a84:	0000000a 	andeq	r0, r0, sl
10005a88:	20355220 	eorscs	r5, r5, r0, lsr #4
10005a8c:	203d2020 	eorscs	r2, sp, r0, lsr #32
10005a90:	30257830 	eorcc	r7, r5, r0, lsr r8
10005a94:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
10005a98:	0000000a 	andeq	r0, r0, sl
10005a9c:	20365220 	eorscs	r5, r6, r0, lsr #4
10005aa0:	203d2020 	eorscs	r2, sp, r0, lsr #32
10005aa4:	30257830 	eorcc	r7, r5, r0, lsr r8
10005aa8:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
10005aac:	0000000a 	andeq	r0, r0, sl
10005ab0:	20375220 	eorscs	r5, r7, r0, lsr #4
10005ab4:	203d2020 	eorscs	r2, sp, r0, lsr #32
10005ab8:	30257830 	eorcc	r7, r5, r0, lsr r8
10005abc:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
10005ac0:	0000000a 	andeq	r0, r0, sl
10005ac4:	20385220 	eorscs	r5, r8, r0, lsr #4
10005ac8:	203d2020 	eorscs	r2, sp, r0, lsr #32
10005acc:	30257830 	eorcc	r7, r5, r0, lsr r8
10005ad0:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
10005ad4:	0000000a 	andeq	r0, r0, sl
10005ad8:	20395220 	eorscs	r5, r9, r0, lsr #4
10005adc:	203d2020 	eorscs	r2, sp, r0, lsr #32
10005ae0:	30257830 	eorcc	r7, r5, r0, lsr r8
10005ae4:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
10005ae8:	0000000a 	andeq	r0, r0, sl
10005aec:	30315220 	eorscc	r5, r1, r0, lsr #4
10005af0:	203d2020 	eorscs	r2, sp, r0, lsr #32
10005af4:	30257830 	eorcc	r7, r5, r0, lsr r8
10005af8:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
10005afc:	0000000a 	andeq	r0, r0, sl
10005b00:	31315220 	teqcc	r1, r0, lsr #4
10005b04:	203d2020 	eorscs	r2, sp, r0, lsr #32
10005b08:	30257830 	eorcc	r7, r5, r0, lsr r8
10005b0c:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
10005b10:	0000000a 	andeq	r0, r0, sl
10005b14:	32315220 	eorscc	r5, r1, #32, 4
10005b18:	203d2020 	eorscs	r2, sp, r0, lsr #32
10005b1c:	30257830 	eorcc	r7, r5, r0, lsr r8
10005b20:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
10005b24:	0000000a 	andeq	r0, r0, sl
10005b28:	20524c20 	subscs	r4, r2, r0, lsr #24
10005b2c:	203d2020 	eorscs	r2, sp, r0, lsr #32
10005b30:	30257830 	eorcc	r7, r5, r0, lsr r8
10005b34:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
10005b38:	0000000a 	andeq	r0, r0, sl
10005b3c:	20435020 	subcs	r5, r3, r0, lsr #32
10005b40:	203d2020 	eorscs	r2, sp, r0, lsr #32
10005b44:	30257830 	eorcc	r7, r5, r0, lsr r8
10005b48:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
10005b4c:	0000000a 	andeq	r0, r0, sl
10005b50:	52535020 	subspl	r5, r3, #32
10005b54:	203d2020 	eorscs	r2, sp, r0, lsr #32
10005b58:	30257830 	eorcc	r7, r5, r0, lsr r8
10005b5c:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
10005b60:	0000000a 	andeq	r0, r0, sl
10005b64:	61745320 	cmnvs	r4, r0, lsr #6
10005b68:	43206b63 			; <UNDEFINED> instruction: 0x43206b63
10005b6c:	3a6c6c61 	bcc	11b20cf8 <__copy_table_end__+0x1b1ae74>
10005b70:	00000020 	andeq	r0, r0, r0, lsr #32
10005b74:	00000d20 	andeq	r0, r0, r0, lsr #26
10005b78:	74694220 	strbtvc	r4, [r9], #-544	; 0xfffffde0
10005b7c:	78452030 	stmdavc	r5, {r4, r5, sp}^
10005b80:	74706563 	ldrbtvc	r6, [r0], #-1379	; 0xfffffa9d
10005b84:	63655320 	cmnvs	r5, #32, 6	; 0x80000000
10005b88:	74697275 	strbtvc	r7, [r9], #-629	; 0xfffffd8b
10005b8c:	74532079 	ldrbvc	r2, [r3], #-121	; 0xffffff87
10005b90:	3a657461 	bcc	11962d1c <__copy_table_end__+0x195ce98>
10005b94:	00000020 	andeq	r0, r0, r0, lsr #32
10005b98:	6573555b 	ldrbvs	r5, [r3, #-1371]!	; 0xfffffaa5
10005b9c:	63655320 	cmnvs	r5, #32, 6	; 0x80000000
10005ba0:	74697275 	strbtvc	r7, [r9], #-629	; 0xfffffd8b
10005ba4:	74532079 	ldrbvc	r2, [r3], #-121	; 0xffffff87
10005ba8:	20657461 	rsbcs	r7, r5, r1, ror #8
10005bac:	5d202020 	stcpl	0, cr2, [r0, #-128]!	; 0xffffff80
10005bb0:	00000d2e 	andeq	r0, r0, lr, lsr #26
10005bb4:	6573555b 	ldrbvs	r5, [r3, #-1371]!	; 0xfffffaa5
10005bb8:	746f4e20 	strbtvc	r4, [pc], #-3616	; 10005bc0 <pow10.0+0x2a0>
10005bbc:	63655320 	cmnvs	r5, #32, 6	; 0x80000000
10005bc0:	74697275 	strbtvc	r7, [r9], #-629	; 0xfffffd8b
10005bc4:	74532079 	ldrbvc	r2, [r3], #-121	; 0xffffff87
10005bc8:	5d657461 	cfstrdpl	mvd7, [r5, #-388]!	; 0xfffffe7c
10005bcc:	00000d2e 	andeq	r0, r0, lr, lsr #26
10005bd0:	74694220 	strbtvc	r4, [r9], #-544	; 0xfffffde0
10005bd4:	74532032 	ldrbvc	r2, [r3], #-50	; 0xffffffce
10005bd8:	206b6361 	rsbcs	r6, fp, r1, ror #6
10005bdc:	6e696f50 	mcrvs	15, 3, r6, cr9, cr0, {2}
10005be0:	65532074 	ldrbvs	r2, [r3, #-116]	; 0xffffff8c
10005be4:	7463656c 	strbtvc	r6, [r3], #-1388	; 0xfffffa94
10005be8:	2020203a 	eorcs	r2, r0, sl, lsr r0
10005bec:	00000020 	andeq	r0, r0, r0, lsr #32
10005bf0:	6573555b 	ldrbvs	r5, [r3, #-1371]!	; 0xfffffaa5
10005bf4:	50535020 	subspl	r5, r3, r0, lsr #32
10005bf8:	20202020 	eorcs	r2, r0, r0, lsr #32
10005bfc:	20202020 	eorcs	r2, r0, r0, lsr #32
10005c00:	20202020 	eorcs	r2, r0, r0, lsr #32
10005c04:	5d202020 	stcpl	0, cr2, [r0, #-128]!	; 0xffffff80
10005c08:	00000d2e 	andeq	r0, r0, lr, lsr #26
10005c0c:	6573555b 	ldrbvs	r5, [r3, #-1371]!	; 0xfffffaa5
10005c10:	50534d20 	subspl	r4, r3, r0, lsr #26
10005c14:	20202020 	eorcs	r2, r0, r0, lsr #32
10005c18:	20202020 	eorcs	r2, r0, r0, lsr #32
10005c1c:	20202020 	eorcs	r2, r0, r0, lsr #32
10005c20:	5d202020 	stcpl	0, cr2, [r0, #-128]!	; 0xffffff80
10005c24:	00000d2e 	andeq	r0, r0, lr, lsr #26
10005c28:	74694220 	strbtvc	r4, [r9], #-544	; 0xfffffde0
10005c2c:	72502033 	subsvc	r2, r0, #51	; 0x33
10005c30:	4d20636f 	stcmi	3, cr6, [r0, #-444]!	; 0xfffffe44
10005c34:	2065646f 	rsbcs	r6, r5, pc, ror #8
10005c38:	6f666542 	svcvs	0x00666542
10005c3c:	49206572 	stmdbmi	r0!, {r1, r4, r5, r6, r8, sl, sp, lr}
10005c40:	203a5152 	eorscs	r5, sl, r2, asr r1
10005c44:	00000020 	andeq	r0, r0, r0, lsr #32
10005c48:	6573555b 	ldrbvs	r5, [r3, #-1371]!	; 0xfffffaa5
10005c4c:	72685420 	rsbvc	r5, r8, #32, 8	; 0x20000000
10005c50:	20646165 	rsbcs	r6, r4, r5, ror #2
10005c54:	65646f4d 	strbvs	r6, [r4, #-3917]!	; 0xfffff0b3
10005c58:	20202020 	eorcs	r2, r0, r0, lsr #32
10005c5c:	5d202020 	stcpl	0, cr2, [r0, #-128]!	; 0xffffff80
10005c60:	00000d2e 	andeq	r0, r0, lr, lsr #26
10005c64:	6573555b 	ldrbvs	r5, [r3, #-1371]!	; 0xfffffaa5
10005c68:	6f725020 	svcvs	0x00725020
10005c6c:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
10005c70:	646f4d20 	strbtvs	r4, [pc], #-3360	; 10005c78 <pow10.0+0x358>
10005c74:	20202065 	eorcs	r2, r0, r5, rrx
10005c78:	5d202020 	stcpl	0, cr2, [r0, #-128]!	; 0xffffff80
10005c7c:	00000d2e 	andeq	r0, r0, lr, lsr #26
10005c80:	74694220 	strbtvc	r4, [r9], #-544	; 0xfffffde0
10005c84:	74532034 	ldrbvc	r2, [r3], #-52	; 0xffffffcc
10005c88:	206b6361 	rsbcs	r6, fp, r1, ror #6
10005c8c:	6d617246 	sfmvs	f7, 2, [r1, #-280]!	; 0xfffffee8
10005c90:	79542065 	ldmdbvc	r4, {r0, r2, r5, r6, sp}^
10005c94:	203a6570 	eorscs	r6, sl, r0, ror r5
10005c98:	20202020 	eorcs	r2, r0, r0, lsr #32
10005c9c:	00000020 	andeq	r0, r0, r0, lsr #32
10005ca0:	6573555b 	ldrbvs	r5, [r3, #-1371]!	; 0xfffffaa5
10005ca4:	61745320 	cmnvs	r4, r0, lsr #6
10005ca8:	7261646e 	rsbvc	r6, r1, #1845493760	; 0x6e000000
10005cac:	72462064 	subvc	r2, r6, #100	; 0x64
10005cb0:	20656d61 	rsbcs	r6, r5, r1, ror #26
10005cb4:	5d202020 	stcpl	0, cr2, [r0, #-128]!	; 0xffffff80
10005cb8:	00000d2e 	andeq	r0, r0, lr, lsr #26
10005cbc:	6573555b 	ldrbvs	r5, [r3, #-1371]!	; 0xfffffaa5
10005cc0:	74784520 	ldrbtvc	r4, [r8], #-1312	; 0xfffffae0
10005cc4:	65646e65 	strbvs	r6, [r4, #-3685]!	; 0xfffff19b
10005cc8:	72462064 	subvc	r2, r6, #100	; 0x64
10005ccc:	20656d61 	rsbcs	r6, r5, r1, ror #26
10005cd0:	5d202020 	stcpl	0, cr2, [r0, #-128]!	; 0xffffff80
10005cd4:	00000d2e 	andeq	r0, r0, lr, lsr #26
10005cd8:	74694220 	strbtvc	r4, [r9], #-544	; 0xfffffde0
10005cdc:	65442035 	strbvs	r2, [r4, #-53]	; 0xffffffcb
10005ce0:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
10005ce4:	61432074 	hvcvs	12804	; 0x3204
10005ce8:	52206c6c 	eorpl	r6, r0, #108, 24	; 0x6c00
10005cec:	3a656c75 	bcc	11960ec8 <__copy_table_end__+0x195b044>
10005cf0:	20202020 	eorcs	r2, r0, r0, lsr #32
10005cf4:	00000020 	andeq	r0, r0, r0, lsr #32
10005cf8:	6573555b 	ldrbvs	r5, [r3, #-1371]!	; 0xfffffaa5
10005cfc:	66654420 	strbtvs	r4, [r5], -r0, lsr #8
10005d00:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
10005d04:	6c755220 	lfmvs	f5, 2, [r5], #-128	; 0xffffff80
10005d08:	20202065 	eorcs	r2, r0, r5, rrx
10005d0c:	5d202020 	stcpl	0, cr2, [r0, #-128]!	; 0xffffff80
10005d10:	00000d2e 	andeq	r0, r0, lr, lsr #26
10005d14:	6573555b 	ldrbvs	r5, [r3, #-1371]!	; 0xfffffaa5
10005d18:	746f4e20 	strbtvc	r4, [pc], #-3616	; 10005d20 <pow10.0+0x400>
10005d1c:	66654420 	strbtvs	r4, [r5], -r0, lsr #8
10005d20:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
10005d24:	6c755220 	lfmvs	f5, 2, [r5], #-128	; 0xffffff80
10005d28:	5d202065 	stcpl	0, cr2, [r0, #-404]!	; 0xfffffe6c
10005d2c:	00000d2e 	andeq	r0, r0, lr, lsr #26
10005d30:	74694220 	strbtvc	r4, [r9], #-544	; 0xfffffde0
10005d34:	65532036 	ldrbvs	r2, [r3, #-54]	; 0xffffffca
10005d38:	69727563 	ldmdbvs	r2!, {r0, r1, r5, r6, r8, sl, ip, sp, lr}^
10005d3c:	53207974 			; <UNDEFINED> instruction: 0x53207974
10005d40:	6b636174 	blvs	118de318 <__copy_table_end__+0x18d8494>
10005d44:	2020203a 	eorcs	r2, r0, sl, lsr r0
10005d48:	20202020 	eorcs	r2, r0, r0, lsr #32
10005d4c:	00000020 	andeq	r0, r0, r0, lsr #32
10005d50:	6573555b 	ldrbvs	r5, [r3, #-1371]!	; 0xfffffaa5
10005d54:	63655320 	cmnvs	r5, #32, 6	; 0x80000000
10005d58:	74697275 	strbtvc	r7, [r9], #-629	; 0xfffffd8b
10005d5c:	74532079 	ldrbvc	r2, [r3], #-121	; 0xffffff87
10005d60:	206b6361 	rsbcs	r6, fp, r1, ror #6
10005d64:	5d202020 	stcpl	0, cr2, [r0, #-128]!	; 0xffffff80
10005d68:	00000d2e 	andeq	r0, r0, lr, lsr #26
10005d6c:	6573555b 	ldrbvs	r5, [r3, #-1371]!	; 0xfffffaa5
10005d70:	746f4e20 	strbtvc	r4, [pc], #-3616	; 10005d78 <pow10.0+0x458>
10005d74:	63655320 	cmnvs	r5, #32, 6	; 0x80000000
10005d78:	74697275 	strbtvc	r7, [r9], #-629	; 0xfffffd8b
10005d7c:	74532079 	ldrbvc	r2, [r3], #-121	; 0xffffff87
10005d80:	5d6b6361 	stclpl	3, cr6, [fp, #-388]!	; 0xfffffe7c
10005d84:	00000d2e 	andeq	r0, r0, lr, lsr #26
10005d88:	454c4449 	strbmi	r4, [ip, #-1097]	; 0xfffffbb7
10005d8c:	00000000 	andeq	r0, r0, r0
10005d90:	20726d54 	rsbscs	r6, r2, r4, asr sp
10005d94:	00637653 	rsbeq	r7, r3, r3, asr r6

10005d98 <_global_impure_ptr>:
10005d98:	38000010 	stmdacc	r0, {r4}

10005d9c <__EH_FRAME_BEGIN__>:
10005d9c:	00000000 	andeq	r0, r0, r0

Disassembly of section .ARM.extab:

10005da0 <__exidx_start-0x18>:
10005da0:	8101b108 	tsthi	r1, r8, lsl #2
10005da4:	8400b0b0 	strhi	fp, [r0], #-176	; 0xffffff50
10005da8:	00000000 	andeq	r0, r0, r0
10005dac:	8101b108 	tsthi	r1, r8, lsl #2
10005db0:	8400b0b0 	strhi	fp, [r0], #-176	; 0xffffff50
10005db4:	00000000 	andeq	r0, r0, r0

Disassembly of section .ARM.exidx:

10005db8 <__exidx_end-0xc0>:
10005db8:	7fffdaa8 	svcvc	0x00ffdaa8
10005dbc:	80b0b0b0 	ldrhthi	fp, [r0], r0
10005dc0:	7fffdb10 	svcvc	0x00ffdb10
10005dc4:	00000001 	andeq	r0, r0, r1
10005dc8:	7fffeac4 	svcvc	0x00ffeac4
10005dcc:	8002a9b0 			; <UNDEFINED> instruction: 0x8002a9b0
10005dd0:	7fffeb58 	svcvc	0x00ffeb58
10005dd4:	80a8b0b0 	strhthi	fp, [r8], r0
10005dd8:	7fffeba8 	svcvc	0x00ffeba8
10005ddc:	00000001 	andeq	r0, r0, r1
10005de0:	7fffebb4 	svcvc	0x00ffebb4
10005de4:	80aab0b0 	strhthi	fp, [sl], r0
10005de8:	7fffebec 	svcvc	0x00ffebec
10005dec:	80b273ae 	adcshi	r7, r2, lr, lsr #7
10005df0:	7fffecc0 	svcvc	0x00ffecc0
10005df4:	00000001 	andeq	r0, r0, r1
10005df8:	7fffecbc 	svcvc	0x00ffecbc
10005dfc:	80383fab 	eorshi	r3, r8, fp, lsr #31
10005e00:	7fffed1c 	svcvc	0x00ffed1c
10005e04:	00000001 	andeq	r0, r0, r1
10005e08:	7fffed28 	svcvc	0x00ffed28
10005e0c:	80aab0b0 	strhthi	fp, [sl], r0
10005e10:	7fffed64 	svcvc	0x00ffed64
10005e14:	00000001 	andeq	r0, r0, r1
10005e18:	7fffee18 	svcvc	0x00ffee18
10005e1c:	80b20eab 	adcshi	r0, r2, fp, lsr #29
10005e20:	7fffee8c 	svcvc	0x00ffee8c
10005e24:	8008afb0 			; <UNDEFINED> instruction: 0x8008afb0
10005e28:	7ffff14c 	svcvc	0x00fff14c
10005e2c:	00000001 	andeq	r0, r0, r1
10005e30:	7ffff150 	svcvc	0x00fff150
10005e34:	80023fad 	andhi	r3, r2, sp, lsr #31
10005e38:	7ffff3fc 	svcvc	0x00fff3fc
10005e3c:	00000001 	andeq	r0, r0, r1
10005e40:	7ffff5dc 	svcvc	0x00fff5dc
10005e44:	8003a8b0 			; <UNDEFINED> instruction: 0x8003a8b0
10005e48:	7ffff5ec 	svcvc	0x00fff5ec
10005e4c:	00000001 	andeq	r0, r0, r1
10005e50:	7ffff5e8 	svcvc	0x00fff5e8
10005e54:	8004adb0 			; <UNDEFINED> instruction: 0x8004adb0
10005e58:	7ffff8ac 	svcvc	0x00fff8ac
10005e5c:	80048400 	andhi	r8, r4, r0, lsl #8
10005e60:	7ffff8d4 	svcvc	0x00fff8d4
10005e64:	7fffff3c 	svcvc	0x00ffff3c
10005e68:	7ffff8d8 	svcvc	0x00fff8d8
10005e6c:	7fffff40 	svcvc	0x00ffff40
10005e70:	7ffff8e4 	svcvc	0x00fff8e4
10005e74:	00000001 	andeq	r0, r0, r1

Disassembly of section .copy.table:

10005e78 <__copy_table_start__>:
10005e78:	10005e84 	andne	r5, r0, r4, lsl #29
10005e7c:	38000000 	stmdacc	r0, {}	; <UNPREDICTABLE>
10005e80:	00000112 	andeq	r0, r0, r2, lsl r1

Disassembly of section .data:

38000000 <SystemCoreClock>:
38000000:	017d7840 	cmneq	sp, r0, asr #16

38000004 <uxTopUsedPriority>:
static const volatile UBaseType_t uxTopUsedPriority = configMAX_PRIORITIES - 1U;
38000004:	00000004 	andeq	r0, r0, r4

38000008 <ulCriticalNesting>:
PRIVILEGED_DATA static volatile uint32_t ulCriticalNesting = 0xaaaaaaaaUL;
38000008:	aaaaaaaa 	bge	36aaaab8 <__copy_table_end__+0x26aa4c34>

3800000c <_impure_ptr>:
3800000c:	38000010 	stmdacc	r0, {r4}

38000010 <impure_data>:
38000010:	00000000 	andeq	r0, r0, r0
38000014:	380002fc 	stmdacc	r0, {r2, r3, r4, r5, r6, r7, r9}
38000018:	38000364 	stmdacc	r0, {r2, r5, r6, r8, r9}
3800001c:	380003cc 	stmdacc	r0, {r2, r3, r6, r7, r8, r9}
	...
380000b8:	00000001 	andeq	r0, r0, r1
380000bc:	00000000 	andeq	r0, r0, r0
380000c0:	abcd330e 	blge	3734cd00 <__copy_table_end__+0x27346e7c>
380000c4:	e66d1234 			; <UNDEFINED> instruction: 0xe66d1234
380000c8:	0005deec 	andeq	sp, r5, ip, ror #29
380000cc:	0000000b 	andeq	r0, r0, fp
	...

38000438 <__atexit_recursive_mutex>:
38000438:	38008d0c 	stmdacc	r0, {r2, r3, r8, sl, fp, pc}

3800043c <__init_array_start>:
3800043c:	10003ab5 			; <UNDEFINED> instruction: 0x10003ab5

38000440 <__frame_dummy_init_array_entry>:
38000440:	100007e5 	andne	r0, r0, r5, ror #15

38000444 <__do_global_dtors_aux_fini_array_entry>:
38000444:	100007c1 	andne	r0, r0, r1, asr #15

Disassembly of section .bss:

38000448 <__bss_start__>:
38000448:	00000000 	andeq	r0, r0, r0

3800044c <object.0>:
	...

38000464 <main_task.0>:
38000464:	00000000 	andeq	r0, r0, r0

38000468 <ucHeap>:
	...

38008468 <buffer.0>:
	...

38008568 <fd_main_stack_base>:
volatile unsigned int fd_main_stack_base = 0;
38008568:	00000000 	andeq	r0, r0, r0

3800856c <fd_main_stack_full>:
volatile unsigned int fd_main_stack_full = 0;
3800856c:	00000000 	andeq	r0, r0, r0

38008570 <frame.1>:
	...

380085b0 <pxCurrentTCB>:
    portDONT_DISCARD PRIVILEGED_DATA TCB_t * volatile pxCurrentTCB = NULL;
380085b0:	00000000 	andeq	r0, r0, r0

380085b4 <pxDelayedTaskList>:
PRIVILEGED_DATA static List_t * volatile pxDelayedTaskList;              /**< Points to the delayed task list currently being used. */
380085b4:	00000000 	andeq	r0, r0, r0

380085b8 <pxOverflowDelayedTaskList>:
PRIVILEGED_DATA static List_t * volatile pxOverflowDelayedTaskList;      /**< Points to the delayed task list currently being used to hold tasks that have overflowed the current tick count. */
380085b8:	00000000 	andeq	r0, r0, r0

380085bc <pxReadyTasksLists>:
	...

38008648 <uxCurrentNumberOfTasks>:
PRIVILEGED_DATA static volatile UBaseType_t uxCurrentNumberOfTasks = ( UBaseType_t ) 0U;
38008648:	00000000 	andeq	r0, r0, r0

3800864c <uxDeletedTasksWaitingCleanUp>:
    PRIVILEGED_DATA static volatile UBaseType_t uxDeletedTasksWaitingCleanUp = ( UBaseType_t ) 0U;
3800864c:	00000000 	andeq	r0, r0, r0

38008650 <uxIdleTaskStack.2>:
	...

38008850 <uxSchedulerSuspended>:
PRIVILEGED_DATA static volatile UBaseType_t uxSchedulerSuspended = ( UBaseType_t ) 0U;
38008850:	00000000 	andeq	r0, r0, r0

38008854 <uxTaskNumber>:
PRIVILEGED_DATA static UBaseType_t uxTaskNumber = ( UBaseType_t ) 0U;
38008854:	00000000 	andeq	r0, r0, r0

38008858 <uxTimerTaskStack.0>:
	...

38008a58 <uxTopReadyPriority>:
PRIVILEGED_DATA static volatile UBaseType_t uxTopReadyPriority = tskIDLE_PRIORITY;
38008a58:	00000000 	andeq	r0, r0, r0

38008a5c <xDelayedTaskList1>:
	...

38008a78 <xDelayedTaskList2>:
	...

38008a94 <xIdleTaskHandles>:
PRIVILEGED_DATA static TaskHandle_t xIdleTaskHandles[ configNUMBER_OF_CORES ];       /**< Holds the handles of the idle tasks.  The idle tasks are created automatically when the scheduler is started. */
38008a94:	00000000 	andeq	r0, r0, r0

38008a98 <xIdleTaskTCB.3>:
	...

38008ae4 <xNextTaskUnblockTime>:
PRIVILEGED_DATA static volatile TickType_t xNextTaskUnblockTime = ( TickType_t ) 0U; /* Initialised to portMAX_DELAY before the scheduler starts. */
38008ae4:	00000000 	andeq	r0, r0, r0

38008ae8 <xNumOfOverflows>:
PRIVILEGED_DATA static volatile BaseType_t xNumOfOverflows = ( BaseType_t ) 0;
38008ae8:	00000000 	andeq	r0, r0, r0

38008aec <xPendedTicks>:
PRIVILEGED_DATA static volatile TickType_t xPendedTicks = ( TickType_t ) 0U;
38008aec:	00000000 	andeq	r0, r0, r0

38008af0 <xPendingReadyList>:
	...

38008b0c <xSchedulerRunning>:
PRIVILEGED_DATA static volatile BaseType_t xSchedulerRunning = pdFALSE;
38008b0c:	00000000 	andeq	r0, r0, r0

38008b10 <xSuspendedTaskList>:
	...

38008b2c <xTasksWaitingTermination>:
	...

38008b48 <xTickCount>:
PRIVILEGED_DATA static volatile TickType_t xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
38008b48:	00000000 	andeq	r0, r0, r0

38008b4c <xTimerTaskTCB.1>:
	...

38008b98 <xYieldPendings>:
PRIVILEGED_DATA static volatile BaseType_t xYieldPendings[ configNUMBER_OF_CORES ] = { pdFALSE };
38008b98:	00000000 	andeq	r0, r0, r0

38008b9c <pxCurrentTimerList>:
    PRIVILEGED_DATA static List_t * pxCurrentTimerList;
38008b9c:	00000000 	andeq	r0, r0, r0

38008ba0 <pxOverflowTimerList>:
    PRIVILEGED_DATA static List_t * pxOverflowTimerList;
38008ba0:	00000000 	andeq	r0, r0, r0

38008ba4 <ucStaticTimerQueueStorage.1>:
	...

38008c44 <xActiveTimerList1>:
	...

38008c60 <xActiveTimerList2>:
	...

38008c7c <xLastTime.2>:
38008c7c:	00000000 	andeq	r0, r0, r0

38008c80 <xStaticTimerQueue.0>:
	...

38008cdc <xTimerQueue>:
    PRIVILEGED_DATA static QueueHandle_t xTimerQueue = NULL;
38008cdc:	00000000 	andeq	r0, r0, r0

38008ce0 <xTimerTaskHandle>:
    PRIVILEGED_DATA static TaskHandle_t xTimerTaskHandle = NULL;
38008ce0:	00000000 	andeq	r0, r0, r0

38008ce4 <pxEnd>:
PRIVILEGED_DATA static BlockLink_t * pxEnd = NULL;
38008ce4:	00000000 	andeq	r0, r0, r0

38008ce8 <xFreeBytesRemaining>:
PRIVILEGED_DATA static size_t xFreeBytesRemaining = ( size_t ) 0U;
38008ce8:	00000000 	andeq	r0, r0, r0

38008cec <xMinimumEverFreeBytesRemaining>:
PRIVILEGED_DATA static size_t xMinimumEverFreeBytesRemaining = ( size_t ) 0U;
38008cec:	00000000 	andeq	r0, r0, r0

38008cf0 <xNumberOfSuccessfulAllocations>:
PRIVILEGED_DATA static size_t xNumberOfSuccessfulAllocations = ( size_t ) 0U;
38008cf0:	00000000 	andeq	r0, r0, r0

38008cf4 <xNumberOfSuccessfulFrees>:
PRIVILEGED_DATA static size_t xNumberOfSuccessfulFrees = ( size_t ) 0U;
38008cf4:	00000000 	andeq	r0, r0, r0

38008cf8 <xStart>:
	...

38008d00 <ulStoppedTimerCompensation>:
    PRIVILEGED_DATA static uint32_t ulStoppedTimerCompensation = 0;
38008d00:	00000000 	andeq	r0, r0, r0

38008d04 <ulTimerCountsForOneTick>:
    PRIVILEGED_DATA static uint32_t ulTimerCountsForOneTick = 0;
38008d04:	00000000 	andeq	r0, r0, r0

38008d08 <xMaximumPossibleSuppressedTicks>:
    PRIVILEGED_DATA static uint32_t xMaximumPossibleSuppressedTicks = 0;
38008d08:	00000000 	andeq	r0, r0, r0

38008d0c <__lock___atexit_recursive_mutex>:
38008d0c:	00000000 	andeq	r0, r0, r0

38008d10 <errno>:
38008d10:	00000000 	andeq	r0, r0, r0

Disassembly of section .heap:

38008d14 <__end__-0x4>:
38008d14:	00000000 	andeq	r0, r0, r0

38008d18 <__end__>:
	...

Disassembly of section .stack:

380ff000 <__StackLimit>:
	...

Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
    BaseType_t xReturn;

    /* Obtain the number of the currently executing interrupt. Interrupt Program
     * Status Register (IPSR) holds the exception number of the currently-executing
     * exception or zero for Thread mode.*/
    __asm volatile ( "mrs %0, ipsr" : "=r" ( ulCurrentInterrupt )::"memory" );
   0:	00003541 	andeq	r3, r0, r1, asr #10

    if( ulCurrentInterrupt == 0 )
   4:	61656100 	cmnvs	r5, r0, lsl #2
    {
        xReturn = pdFALSE;
   8:	01006962 	tsteq	r0, r2, ror #18
    {
        xReturn = pdTRUE;
    }

    return xReturn;
}
   c:	0000002b 	andeq	r0, r0, fp, lsr #32
    ( pxList->uxNumberOfItems ) = ( UBaseType_t ) ( pxList->uxNumberOfItems + 1U );
  10:	4d2d3805 	stcmi	8, cr3, [sp, #-20]!	; 0xffffffec
}
  14:	49414d2e 	stmdbmi	r1, {r1, r2, r3, r5, r8, sl, fp, lr}^
}
  18:	1106004e 	tstne	r6, lr, asr #32
  1c:	03094d07 	movweq	r4, #40199	; 0x9d07
  va_start(va, format);
  const out_fct_wrap_type out_fct_wrap = { out, arg };
  const int ret = _vsnprintf(_out_fct, (char*)(uintptr_t)&out_fct_wrap, (size_t)-1, format, va);
  va_end(va);
  return ret;
}
  20:	0412080a 	ldreq	r0, [r2], #-2058	; 0xfffff7f6
  24:	01150114 	tsteq	r5, r4, lsl r1
  28:	01180317 	tsteq	r8, r7, lsl r3
  2c:	011b011a 	tsteq	fp, sl, lsl r1
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
  30:	0122011c 			; <UNDEFINED> instruction: 0x0122011c
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
  34:	Address 0x00000034 is out of bounds.


Disassembly of section .comment:

00000000 <.comment>:
    __asm volatile ( "mrs %0, ipsr" : "=r" ( ulCurrentInterrupt )::"memory" );
   0:	3a434347 	bcc	10d0d24 <__RAM_SIZE+0xfd0d24>
    if( ulCurrentInterrupt == 0 )
   4:	4e472820 	cdpmi	8, 4, cr2, cr7, cr0, {1}
        xReturn = pdFALSE;
   8:	72412055 	subvc	r2, r1, #85	; 0x55
}
   c:	6d45206d 	stclvs	0, cr2, [r5, #-436]	; 0xfffffe4c
    ( pxList->uxNumberOfItems ) = ( UBaseType_t ) ( pxList->uxNumberOfItems + 1U );
  10:	64646562 	strbtvs	r6, [r4], #-1378	; 0xfffffa9e
}
  14:	54206465 	strtpl	r6, [r0], #-1125	; 0xfffffb9b
  18:	636c6f6f 	cmnvs	ip, #444	; 0x1bc
  1c:	6e696168 	powvsez	f6, f1, #0.0
  20:	2e303120 	rsfcssp	f3, f0, f0
  24:	30322d33 	eorscc	r2, r2, r3, lsr sp
  28:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
  2c:	31202930 			; <UNDEFINED> instruction: 0x31202930
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
  30:	2e332e30 	mrccs	14, 1, r2, cr3, cr0, {1}
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
  34:	30322031 	eorscc	r2, r2, r1, lsr r0
  38:	38303132 	ldmdacc	r0!, {r1, r4, r5, r8, ip, sp}
  3c:	28203432 	stmdacs	r0!, {r1, r4, r5, sl, ip, sp}
  40:	656c6572 	strbvs	r6, [ip, #-1394]!	; 0xfffffa8e
        BaseType_t xReturn = pdFAIL;
  44:	29657361 	stmdbcs	r5!, {r0, r5, r6, r8, r9, ip, sp, lr}^
	...

Disassembly of section .debug_info:

00000000 <.debug_info>:
    __asm volatile ( "mrs %0, ipsr" : "=r" ( ulCurrentInterrupt )::"memory" );
       0:	00000bd3 	ldrdeq	r0, [r0], -r3
    if( ulCurrentInterrupt == 0 )
       4:	00000002 	andeq	r0, r0, r2
        xReturn = pdFALSE;
       8:	01040000 	mrseq	r0, (UNDEF: 4)
}
       c:	00000189 	andeq	r0, r0, r9, lsl #3
    ( pxList->uxNumberOfItems ) = ( UBaseType_t ) ( pxList->uxNumberOfItems + 1U );
      10:	00014e0c 	andeq	r4, r1, ip, lsl #28
}
      14:	00038d00 	andeq	r8, r3, r0, lsl #26
      18:	00001800 	andeq	r1, r0, r0, lsl #16
	...
      28:	06010200 	streq	r0, [r1], -r0, lsl #4
      2c:	00000273 	andeq	r0, r0, r3, ror r2
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
      30:	00017f03 	andeq	r7, r1, r3, lsl #30
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
      34:	182b0200 	stmdane	fp!, {r9}
      38:	0000003c 	andeq	r0, r0, ip, lsr r0
      3c:	71080102 	tstvc	r8, r2, lsl #2
      40:	02000002 	andeq	r0, r0, #2
        BaseType_t xReturn = pdFAIL;
      44:	00320502 	eorseq	r0, r2, r2, lsl #10
    }
      48:	02020000 	andeq	r0, r2, #0
                    xMinSize = pxBlock->xBlockSize;
                }

                /* Move to the next block in the chain until the last block is
                 * reached. */
                pxBlock = heapPROTECT_BLOCK_POINTER( pxBlock->pxNextFreeBlock );
      4c:	00032207 	andeq	r2, r3, r7, lsl #4
            while( pxBlock != pxEnd )
      50:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
      54:	0000012c 	andeq	r0, r0, ip, lsr #2
                if( pxBlock->xBlockSize > xMaxSize )
      58:	00006f03 	andeq	r6, r0, r3, lsl #30
      5c:	194f0200 	stmdbne	pc, {r9}^	; <UNPREDICTABLE>
                if( pxBlock->xBlockSize < xMinSize )
      60:	00000064 	andeq	r0, r0, r4, rrx
                    xMinSize = pxBlock->xBlockSize;
      64:	ca070402 	bgt	1c1074 <__RAM_SIZE+0xc1074>
      68:	02000002 	andeq	r0, r0, #2
      6c:	01270508 			; <UNDEFINED> instruction: 0x01270508
      70:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
      74:	0002c507 	andeq	ip, r2, r7, lsl #10
      78:	05040400 	streq	r0, [r4, #-1024]	; 0xfffffc00
      7c:	00746e69 	rsbseq	r6, r4, r9, ror #28
            prvUnlockQueue( pxQueue );
      80:	00007905 	andeq	r7, r0, r5, lsl #18
            ( void ) xTaskResumeAll();
      84:	07040200 	streq	r0, [r4, -r0, lsl #4]
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
      88:	000002cf 	andeq	r0, r0, pc, asr #5
      8c:	00018103 	andeq	r8, r1, r3, lsl #2
      90:	13180300 	tstne	r8, #0, 6
        taskENTER_CRITICAL();
      94:	00000030 	andeq	r0, r0, r0, lsr r0
            if( uxSemaphoreCount > ( UBaseType_t ) 0 )
      98:	00008c05 	andeq	r8, r0, r5, lsl #24
                if( xTicksToWait == ( TickType_t ) 0 )
      9c:	00710300 	rsbseq	r0, r1, r0, lsl #6
      a0:	30030000 	andcc	r0, r3, r0
                else if( xEntryTimeSet == pdFALSE )
      a4:	00005814 	andeq	r5, r0, r4, lsl r8
        taskEXIT_CRITICAL();
      a8:	009d0500 	addseq	r0, sp, r0, lsl #10
        vTaskSuspendAll();
      ac:	a9060000 	stmdbge	r6, {}	; <UNPREDICTABLE>
        prvLockQueue( pxQueue );
      b0:	02000000 	andeq	r0, r0, #0
      b4:	00630408 	rsbeq	r0, r3, r8, lsl #8
      b8:	04070000 	streq	r0, [r7], #-0
      bc:	7a080102 	bvc	2004cc <__RAM_SIZE+0x1004cc>
      c0:	06000002 	streq	r0, [r0], -r2
      c4:	000000bc 	strheq	r0, [r0], -ip
      c8:	04027c08 	streq	r7, [r2], #-3080	; 0xfffff3f8
      cc:	cd0901f8 	stfgts	f0, [r9, #-992]	; 0xfffffc20
        if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
      d0:	09000003 	stmdbeq	r0, {r0, r1}
      d4:	00000092 	muleq	r0, r2, r0
      d8:	1201fa04 	andne	pc, r1, #4, 20	; 0x4000
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
      dc:	000000ae 	andeq	r0, r0, lr, lsr #1
      e0:	09002302 	stmdbeq	r0, {r1, r8, r9, sp}
                    if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
      e4:	0000044a 	andeq	r0, r0, sl, asr #8
      e8:	1201fb04 	andne	pc, r1, #4, 22	; 0x1000
                vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
      ec:	000000a9 	andeq	r0, r0, r9, lsr #1
      f0:	09042302 	stmdbeq	r4, {r1, r8, r9, sp}
                prvUnlockQueue( pxQueue );
      f4:	00000354 	andeq	r0, r0, r4, asr r3
      f8:	1201fc04 	andne	pc, r1, #4, 24	; 0x400
                if( xTaskResumeAll() == pdFALSE )
      fc:	000000a9 	andeq	r0, r0, r9, lsr #1
     100:	09082302 	stmdbeq	r8, {r1, r8, r9, sp}
                    taskYIELD_WITHIN_API();
     104:	00000455 	andeq	r0, r0, r5, asr r4
                    if( xInheritanceOccurred != pdFALSE )
     108:	1201fd04 	andne	pc, r1, #4, 26	; 0x100
                return errQUEUE_EMPTY;
     10c:	000000a9 	andeq	r0, r0, r9, lsr #1
                        taskENTER_CRITICAL();
     110:	0a0c2302 	beq	308d20 <__RAM_SIZE+0x208d20>
                            uxHighestWaitingPriority = prvGetDisinheritPriorityAfterTimeout( pxQueue );
     114:	00524353 	subseq	r4, r2, r3, asr r3
     118:	1201fe04 	andne	pc, r1, #4, 28	; 0x40
                            vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
     11c:	000000a9 	andeq	r0, r0, r9, lsr #1
                        taskEXIT_CRITICAL();
     120:	0a102302 	beq	408d30 <__RAM_SIZE+0x308d30>
     124:	00524343 	subseq	r4, r2, r3, asr #6
                    listINSERT_END( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
     128:	1201ff04 	andne	pc, r1, #4, 30
     12c:	000000a9 	andeq	r0, r0, r9, lsr #1
     130:	09142302 	ldmdbeq	r4, {r1, r8, r9, sp}
     134:	000002c0 	andeq	r0, r0, r0, asr #5
     138:	12020004 	andne	r0, r2, #4
     13c:	000003dd 	ldrdeq	r0, [r0], -sp
     140:	09182302 	ldmdbeq	r8, {r1, r8, r9, sp}
     144:	0000030c 	andeq	r0, r0, ip, lsl #6
     148:	12020104 	andne	r0, r2, #4, 2
     14c:	000000a9 	andeq	r0, r0, r9, lsr #1
     150:	09242302 	stmdbeq	r4!, {r1, r8, r9, sp}
     154:	0000025c 	andeq	r0, r0, ip, asr r2
     158:	12020204 	andne	r0, r2, #4, 4	; 0x40000000
     15c:	000000a9 	andeq	r0, r0, r9, lsr #1
     160:	09282302 	stmdbeq	r8!, {r1, r8, r9, sp}
     164:	00000374 	andeq	r0, r0, r4, ror r3
     168:	12020304 	andne	r0, r2, #4, 6	; 0x10000000
     16c:	000000a9 	andeq	r0, r0, r9, lsr #1
     170:	092c2302 	stmdbeq	ip!, {r1, r8, r9, sp}
     174:	00000359 	andeq	r0, r0, r9, asr r3
     178:	12020404 	andne	r0, r2, #4, 8	; 0x4000000
     17c:	000000a9 	andeq	r0, r0, r9, lsr #1
     180:	09302302 	ldmdbeq	r0!, {r1, r8, r9, sp}
     184:	0000002c 	andeq	r0, r0, ip, lsr #32
     188:	12020504 	andne	r0, r2, #4, 10	; 0x1000000
     18c:	000000a9 	andeq	r0, r0, r9, lsr #1
     190:	09342302 	ldmdbeq	r4!, {r1, r8, r9, sp}
     194:	00000135 	andeq	r0, r0, r5, lsr r1
     198:	12020604 	andne	r0, r2, #4, 12	; 0x400000
     19c:	000000a9 	andeq	r0, r0, r9, lsr #1
     1a0:	09382302 	ldmdbeq	r8!, {r1, r8, r9, sp}
     1a4:	00000437 	andeq	r0, r0, r7, lsr r4
     1a8:	12020704 	andne	r0, r2, #4, 14	; 0x100000
     1ac:	000000a9 	andeq	r0, r0, r9, lsr #1
     1b0:	093c2302 	ldmdbeq	ip!, {r1, r8, r9, sp}
     1b4:	0000004c 	andeq	r0, r0, ip, asr #32
     1b8:	12020804 	andne	r0, r2, #4, 16	; 0x40000
     1bc:	000003f7 	strdeq	r0, [r0], -r7
     1c0:	09402302 	stmdbeq	r0, {r1, r8, r9, sp}^
     1c4:	00000443 	andeq	r0, r0, r3, asr #8
     1c8:	12020904 	andne	r0, r2, #4, 18	; 0x10000
     1cc:	000000ae 	andeq	r0, r0, lr, lsr #1
     1d0:	09482302 	stmdbeq	r8, {r1, r8, r9, sp}^
     1d4:	000000e0 	andeq	r0, r0, r0, ror #1
     1d8:	12020a04 	andne	r0, r2, #4, 20	; 0x4000
     1dc:	000000ae 	andeq	r0, r0, lr, lsr #1
     1e0:	094c2302 	stmdbeq	ip, {r1, r8, r9, sp}^
     1e4:	00000163 	andeq	r0, r0, r3, ror #2
     1e8:	12020b04 	andne	r0, r2, #4, 22	; 0x1000
     1ec:	00000411 	andeq	r0, r0, r1, lsl r4
     1f0:	09502302 	ldmdbeq	r0, {r1, r8, r9, sp}^
     1f4:	00000297 	muleq	r0, r7, r2
     1f8:	12020c04 	andne	r0, r2, #4, 24	; 0x400
     1fc:	0000042b 	andeq	r0, r0, fp, lsr #8
     200:	09602302 	stmdbeq	r0!, {r1, r8, r9, sp}^
     204:	000003ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
     208:	12020d04 	andne	r0, r2, #4, 26	; 0x100
     20c:	000000ae 	andeq	r0, r0, lr, lsr #1
     210:	0a782302 	beq	1e08e20 <__RAM_SIZE+0x1d08e20>
     214:	00525443 	subseq	r5, r2, r3, asr #8
     218:	12020e04 	andne	r0, r2, #4, 28	; 0x40
     21c:	000000ae 	andeq	r0, r0, lr, lsr #1
     220:	097c2302 	ldmdbeq	ip!, {r1, r8, r9, sp}^
     224:	00000335 	andeq	r0, r0, r5, lsr r3
     228:	12020f04 	andne	r0, r2, #4, 30
     22c:	000000ae 	andeq	r0, r0, lr, lsr #1
     230:	01802303 	orreq	r2, r0, r3, lsl #6
     234:	00031b09 	andeq	r1, r3, r9, lsl #22
     238:	02100400 	andseq	r0, r0, #0, 8
     23c:	0000a912 	andeq	sl, r0, r2, lsl r9
     240:	84230300 	strthi	r0, [r3], #-768	; 0xfffffd00
     244:	044f0901 	strbeq	r0, [pc], #-2305	; 24c <__STACKSEAL_SIZE+0x24c>
     248:	11040000 	mrsne	r0, (UNDEF: 4)
     24c:	00a91202 	adceq	r1, r9, r2, lsl #4
     250:	23030000 	movwcs	r0, #12288	; 0x3000
     254:	5b090188 	blpl	24087c <__RAM_SIZE+0x14087c>
     258:	04000004 	streq	r0, [r0], #-4
     25c:	a9120212 	ldmdbge	r2, {r1, r4, r9}
     260:	03000000 	movweq	r0, #0
     264:	09018c23 	stmdbeq	r1, {r0, r1, r5, sl, fp, pc}
     268:	000003f5 	strdeq	r0, [r0], -r5
     26c:	12021304 	andne	r1, r2, #4, 6	; 0x10000000
     270:	00000430 	andeq	r0, r0, r0, lsr r4
     274:	01902303 	orrseq	r2, r0, r3, lsl #6
     278:	0002ff09 	andeq	pc, r2, r9, lsl #30
     27c:	02140400 	andseq	r0, r4, #0, 8
     280:	0000a912 	andeq	sl, r0, r2, lsl r9
     284:	e4230300 	strt	r0, [r3], #-768	; 0xfffffd00
     288:	03d20901 	bicseq	r0, r2, #16384	; 0x4000
     28c:	15040000 	strne	r0, [r4, #-0]
     290:	00a91202 	adceq	r1, r9, r2, lsl #4
     294:	23030000 	movwcs	r0, #12288	; 0x3000
     298:	790901e8 	stmdbvc	r9, {r3, r5, r6, r7, r8}
     29c:	04000003 	streq	r0, [r0], #-3
     2a0:	40120216 	andsmi	r0, r2, r6, lsl r2
     2a4:	03000004 	movweq	r0, #4
     2a8:	0901ec23 	stmdbeq	r1, {r0, r1, r5, sl, fp, sp, lr, pc}
     2ac:	000000db 	ldrdeq	r0, [r0], -fp
     2b0:	12021704 	andne	r1, r2, #4, 14	; 0x100000
     2b4:	000000a9 	andeq	r0, r0, r9, lsr #1
     2b8:	04802303 	streq	r2, [r0], #771	; 0x303
     2bc:	00038309 	andeq	r8, r3, r9, lsl #6
     2c0:	02180400 	andseq	r0, r8, #0, 8
     2c4:	00045012 	andeq	r5, r4, r2, lsl r0
     2c8:	84230300 	strthi	r0, [r3], #-768	; 0xfffffd00
     2cc:	00980904 	addseq	r0, r8, r4, lsl #18
     2d0:	19040000 	stmdbne	r4, {}	; <UNPREDICTABLE>
     2d4:	00ae1202 	adceq	r1, lr, r2, lsl #4
     2d8:	23030000 	movwcs	r0, #12288	; 0x3000
     2dc:	3c0904c0 	cfstrscc	mvf0, [r9], {192}	; 0xc0
     2e0:	04000000 	streq	r0, [r0], #-0
     2e4:	ae12021a 	mrcge	2, 0, r0, cr2, cr10, {0}
     2e8:	03000000 	movweq	r0, #0
     2ec:	0904c423 	stmdbeq	r4, {r0, r1, r5, sl, lr, pc}
     2f0:	00000121 	andeq	r0, r0, r1, lsr #2
     2f4:	12021b04 	andne	r1, r2, #4, 22	; 0x1000
     2f8:	000000ae 	andeq	r0, r0, lr, lsr #1
     2fc:	04c82303 	strbeq	r2, [r8], #771	; 0x303
     300:	0000b509 	andeq	fp, r0, r9, lsl #10
     304:	021c0400 	andseq	r0, ip, #0, 8
     308:	00046012 	andeq	r6, r4, r2, lsl r0
     30c:	cc230300 	stcgt	3, cr0, [r3], #-0
     310:	02610904 	rsbeq	r0, r1, #4, 18	; 0x10000
     314:	1d040000 	stcne	0, cr0, [r4, #-0]
     318:	00a91202 	adceq	r1, r9, r2, lsl #4
     31c:	23030000 	movwcs	r0, #12288	; 0x3000
     320:	bf0904d0 	svclt	0x000904d0
     324:	04000000 	streq	r0, [r0], #-0
     328:	6012021e 	andsvs	r0, r2, lr, lsl r2
     32c:	03000004 	movweq	r0, #4
     330:	0904d423 	stmdbeq	r4, {r0, r1, r5, sl, ip, lr, pc}
     334:	0000027f 	andeq	r0, r0, pc, ror r2
     338:	12021f04 	andne	r1, r2, #4, 30
     33c:	000000a9 	andeq	r0, r0, r9, lsr #1
     340:	04d82303 	ldrbeq	r2, [r8], #771	; 0x303
     344:	00026909 	andeq	r6, r2, r9, lsl #18
     348:	02200400 	eoreq	r0, r0, #0, 8
     34c:	0000a912 	andeq	sl, r0, r2, lsl r9
     350:	dc230300 	stcle	3, cr0, [r3], #-0
     354:	01010904 	tsteq	r1, r4, lsl #18
     358:	21040000 	mrscs	r0, (UNDEF: 4)
     35c:	00a91202 	adceq	r1, r9, r2, lsl #4
     360:	23030000 	movwcs	r0, #12288	; 0x3000
     364:	3c0904e0 	cfstrscc	mvf0, [r9], {224}	; 0xe0
     368:	04000003 	streq	r0, [r0], #-3
     36c:	a9120222 	ldmdbge	r2, {r1, r5, r9}
     370:	03000000 	movweq	r0, #0
     374:	0904e423 	stmdbeq	r4, {r0, r1, r5, sl, sp, lr, pc}
     378:	00000304 	andeq	r0, r0, r4, lsl #6
     37c:	12022304 	andne	r2, r2, #4, 6	; 0x10000000
     380:	000000a9 	andeq	r0, r0, r9, lsr #1
     384:	04e82303 	strbteq	r2, [r8], #771	; 0x303
     388:	00000009 	andeq	r0, r0, r9
     38c:	02240400 	eoreq	r0, r4, #0, 8
     390:	0000a912 	andeq	sl, r0, r2, lsl r9
     394:	ec230300 	stc	3, cr0, [r3], #-0
     398:	007a0904 	rsbseq	r0, sl, r4, lsl #18
     39c:	25040000 	strcs	r0, [r4, #-0]
     3a0:	00a91202 	adceq	r1, r9, r2, lsl #4
     3a4:	23030000 	movwcs	r0, #12288	; 0x3000
     3a8:	ee0904f0 	mcr	4, 0, r0, cr9, cr0, {7}
     3ac:	04000003 	streq	r0, [r0], #-3
     3b0:	a9120226 	ldmdbge	r2, {r1, r2, r5, r9}
     3b4:	03000000 	movweq	r0, #0
     3b8:	0904f423 	stmdbeq	r4, {r0, r1, r5, sl, ip, sp, lr, pc}
     3bc:	0000043c 	andeq	r0, r0, ip, lsr r4
     3c0:	12022704 	andne	r2, r2, #4, 14	; 0x100000
     3c4:	000000a9 	andeq	r0, r0, r9, lsr #1
     3c8:	04f82303 	ldrbteq	r2, [r8], #771	; 0x303
     3cc:	00980b00 	addseq	r0, r8, r0, lsl #22
     3d0:	03dd0000 	bicseq	r0, sp, #0
     3d4:	850c0000 	strhi	r0, [ip, #-0]
     3d8:	0b000000 	bleq	3e0 <__STACKSEAL_SIZE+0x3e0>
     3dc:	03cd0500 	biceq	r0, sp, #0, 10
     3e0:	ae0b0000 	cdpge	0, 0, cr0, cr11, cr0, {0}
     3e4:	f2000000 	vhadd.s8	d0, d0, d0
     3e8:	0c000003 	stceq	0, cr0, [r0], {3}
     3ec:	00000085 	andeq	r0, r0, r5, lsl #1
     3f0:	e2060001 	and	r0, r6, #1
     3f4:	05000003 	streq	r0, [r0, #-3]
     3f8:	000003f2 	strdeq	r0, [r0], -r2
     3fc:	0000ae0b 	andeq	sl, r0, fp, lsl #28
     400:	00040c00 	andeq	r0, r4, r0, lsl #24
     404:	00850c00 	addeq	r0, r5, r0, lsl #24
     408:	00030000 	andeq	r0, r3, r0
     40c:	0003fc06 	andeq	pc, r3, r6, lsl #24
     410:	040c0500 	streq	r0, [ip], #-1280	; 0xfffffb00
     414:	ae0b0000 	cdpge	0, 0, cr0, cr11, cr0, {0}
     418:	26000000 	strcs	r0, [r0], -r0
     41c:	0c000004 	stceq	0, cr0, [r0], {4}
     420:	00000085 	andeq	r0, r0, r5, lsl #1
     424:	16060005 	strne	r0, [r6], -r5
     428:	05000004 	streq	r0, [r0, #-4]
     42c:	00000426 	andeq	r0, r0, r6, lsr #8
     430:	00009d0b 	andeq	r9, r0, fp, lsl #26
     434:	00044000 	andeq	r4, r4, r0
     438:	00850c00 	addeq	r0, r5, r0, lsl #24
     43c:	00140000 	andseq	r0, r4, r0
     440:	00009d0b 	andeq	r9, r0, fp, lsl #26
     444:	00045000 	andeq	r5, r4, r0
     448:	00850c00 	addeq	r0, r5, r0, lsl #24
     44c:	00440000 	subeq	r0, r4, r0
     450:	00009d0b 	andeq	r9, r0, fp, lsl #26
     454:	00046000 	andeq	r6, r4, r0
     458:	00850c00 	addeq	r0, r5, r0, lsl #24
     45c:	000e0000 	andeq	r0, lr, r0
     460:	00009d0b 	andeq	r9, r0, fp, lsl #26
     464:	00047000 	andeq	r7, r4, r0
     468:	00850c00 	addeq	r0, r5, r0, lsl #24
     46c:	00000000 	andeq	r0, r0, r0
     470:	0002af0d 	andeq	sl, r2, sp, lsl #30
     474:	02280400 	eoreq	r0, r8, #0, 8
     478:	0000c803 	andeq	ip, r0, r3, lsl #16
     47c:	09cd0300 	stmibeq	sp, {r8, r9}^
     480:	4a050000 	bmi	140488 <__RAM_SIZE+0x40488>
     484:	0000511a 	andeq	r5, r0, sl, lsl r1
     488:	02f20300 	rscseq	r0, r2, #0, 6
     48c:	5c060000 	stcpl	0, cr0, [r6], {-0}
     490:	0004952e 	andeq	r9, r4, lr, lsr #10
     494:	9b040e00 	blls	103c9c <__RAM_SIZE+0x3c9c>
     498:	0f000004 	svceq	0x00000004
     49c:	0000016b 	andeq	r0, r0, fp, ror #2
     4a0:	008c0b01 	addeq	r0, ip, r1, lsl #22
     4a4:	04b20000 	ldrteq	r0, [r2], #0
     4a8:	85100000 	ldrhi	r0, [r0, #-0]
     4ac:	ff000000 			; <UNDEFINED> instruction: 0xff000000
     4b0:	2511007f 	ldrcs	r0, [r1, #-127]	; 0xffffff81
     4b4:	01000000 	mrseq	r0, (UNDEF: 0)
     4b8:	04a1090d 	strteq	r0, [r1], #2317	; 0x90d
     4bc:	05010000 	streq	r0, [r1, #-0]
     4c0:	00046803 	andeq	r6, r4, r3, lsl #16
     4c4:	5e011238 	mcrpl	2, 0, r1, cr1, cr8, {1}
     4c8:	01000000 	mrseq	r0, (UNDEF: 0)
     4cc:	79010577 	stmdbvc	r1, {r0, r1, r2, r4, r5, r6, r8, sl}
     4d0:	b0000000 	andlt	r0, r0, r0
     4d4:	dc100009 	ldcle	0, cr0, [r0], {9}
     4d8:	00100009 	andseq	r0, r0, r9
     4dc:	01000000 	mrseq	r0, (UNDEF: 0)
     4e0:	00000544 	andeq	r0, r0, r4, asr #10
     4e4:	00040513 	andeq	r0, r4, r3, lsl r5
     4e8:	09780100 	ldmdbeq	r8!, {r8}^
     4ec:	00000079 	andeq	r0, r0, r9, ror r0
     4f0:	00000026 	andeq	r0, r0, r6, lsr #32
     4f4:	00000020 	andeq	r0, r0, r0, lsr #32
     4f8:	0009b614 	andeq	fp, r9, r4, lsl r6
     4fc:	000b3b10 	andeq	r3, fp, r0, lsl fp
     500:	09bc1500 	ldmibeq	ip!, {r8, sl, ip}
     504:	0b491000 	bleq	124450c <__RAM_SIZE+0x114450c>
     508:	05180000 	ldreq	r0, [r8, #-0]
     50c:	01160000 	tsteq	r6, r0
     510:	b8030550 	stmdalt	r3, {r4, r6, r8, sl}
     514:	00100058 	andseq	r0, r0, r8, asr r0
     518:	0009c014 	andeq	ip, r9, r4, lsl r0
     51c:	000b5610 	andeq	r5, fp, r0, lsl r6
     520:	09c41400 	stmibeq	r4, {sl, ip}^
     524:	05441000 	strbeq	r1, [r4, #-0]
     528:	d0170000 	andsle	r0, r7, r0
     52c:	64100009 	ldrvs	r0, [r0], #-9
     530:	1600000b 	strne	r0, [r0], -fp
     534:	03055001 	movweq	r5, #20481	; 0x5001
     538:	100058c0 	andne	r5, r0, r0, asr #17
     53c:	02510116 	subseq	r0, r1, #-2147483643	; 0x80000005
     540:	00007f74 	andeq	r7, r0, r4, ror pc
     544:	00008318 	andeq	r8, r0, r8, lsl r3
     548:	0d6c0100 	stfeqe	f0, [ip, #-0]
     54c:	00080001 	andeq	r0, r8, r1
     550:	00084410 	andeq	r4, r8, r0, lsl r4
     554:	00005010 	andeq	r5, r0, r0, lsl r0
     558:	05e10100 	strbeq	r0, [r1, #256]!	; 0x100
     55c:	42190000 	andsmi	r0, r9, #0
     560:	01000000 	mrseq	r0, (UNDEF: 0)
     564:	0489196d 	streq	r1, [r9], #2413	; 0x96d
     568:	03050000 	movweq	r0, #20480	; 0x5000
     56c:	38000464 	stmdacc	r0, {r2, r5, r6, sl}
     570:	001a2113 	andseq	r2, sl, r3, lsl r1
     574:	106e0100 	rsbne	r0, lr, r0, lsl #2
     578:	0000047d 	andeq	r0, r0, sp, ror r4
     57c:	0000009c 	muleq	r0, ip, r0
     580:	00000094 	muleq	r0, r4, r0
     584:	00081a15 	andeq	r1, r8, r5, lsl sl
     588:	000b7210 	andeq	r7, fp, r0, lsl r2
     58c:	0005c000 	andeq	ip, r5, r0
     590:	50011600 	andpl	r1, r1, r0, lsl #12
     594:	098d0305 	stmibeq	sp, {r0, r2, r8, r9}
     598:	01161000 	tsteq	r6, r0
     59c:	0c030551 	cfstr32eq	mvfx0, [r3], {81}	; 0x51
     5a0:	16100058 			; <UNDEFINED> instruction: 0x16100058
     5a4:	0a035201 	beq	d4db0 <__HEAP_SIZE+0xd3db0>
     5a8:	01160800 	tsteq	r6, r0, lsl #16
     5ac:	16300153 			; <UNDEFINED> instruction: 0x16300153
     5b0:	01007d02 	tsteq	r0, r2, lsl #26
     5b4:	7d021631 	stcvc	6, cr1, [r2, #-196]	; 0xffffff3c
     5b8:	64030504 	strvs	r0, [r3], #-1284	; 0xfffffafc
     5bc:	00380004 	eorseq	r0, r8, r4
     5c0:	00082615 	andeq	r2, r8, r5, lsl r6
     5c4:	000b6410 	andeq	r6, fp, r0, lsl r4
     5c8:	0005d700 	andeq	sp, r5, r0, lsl #14
     5cc:	50011600 	andpl	r1, r1, r0, lsl #12
     5d0:	58180305 	ldmdapl	r8, {r0, r2, r8, r9}
     5d4:	14001000 	strne	r1, [r0], #-0
     5d8:	10000830 	andne	r0, r0, r0, lsr r8
     5dc:	00000b81 	andeq	r0, r0, r1, lsl #23
     5e0:	02871800 	addeq	r1, r7, #0, 16
     5e4:	5f010000 	svcpl	0x00010000
     5e8:	098c010d 	stmibeq	ip, {r0, r2, r3, r8}
     5ec:	09b01000 	ldmibeq	r0!, {ip}
     5f0:	00d11000 	sbcseq	r1, r1, r0
     5f4:	55010000 	strpl	r0, [r1, #-0]
     5f8:	1a000006 	bne	618 <__STACKSEAL_SIZE+0x618>
     5fc:	00000006 	andeq	r0, r0, r6
     600:	ba235f01 	blt	8d820c <__RAM_SIZE+0x7d820c>
     604:	f5000000 			; <UNDEFINED> instruction: 0xf5000000
     608:	f1000000 	cps	#0
     60c:	13000000 	movwne	r0, #0
     610:	000002b8 			; <UNDEFINED> instruction: 0x000002b8
     614:	79096001 	stmdbvc	r9, {r0, sp, lr}
     618:	1a000000 	bne	620 <__STACKSEAL_SIZE+0x620>
     61c:	16000001 	strne	r0, [r0], -r1
     620:	14000001 	strne	r0, [r0], #-1
     624:	10000996 	mulne	r0, r6, r9
     628:	00000655 	andeq	r0, r0, r5, asr r6
     62c:	00099e15 	andeq	r9, r9, r5, lsl lr
     630:	000b9010 	andeq	r9, fp, r0, lsl r0
     634:	00064100 	andeq	r4, r6, r0, lsl #2
     638:	50011600 	andpl	r1, r1, r0, lsl #12
     63c:	03e80a03 	mvneq	r0, #12288	; 0x3000
     640:	09a41700 	stmibeq	r4!, {r8, r9, sl, ip}
     644:	0b491000 	bleq	124464c <__RAM_SIZE+0x114464c>
     648:	01160000 	tsteq	r6, r0
     64c:	9c030550 	cfstr32ls	mvfx0, [r3], {80}	; 0x50
     650:	00100058 	andseq	r0, r0, r8, asr r0
     654:	31011b00 	tstcc	r1, r0, lsl #22
     658:	01000004 	tsteq	r0, r4
     65c:	7401065a 	strvc	r0, [r1], #-1626	; 0xfffff9a6
     660:	8c100009 	ldchi	0, cr0, [r0], {9}
     664:	39100009 	ldmdbcc	r0, {r0, r3}
     668:	01000001 	tsteq	r0, r1
     66c:	000006aa 	andeq	r0, r0, sl, lsr #13
     670:	0003121c 	andeq	r1, r3, ip, lsl r2
     674:	0006ba00 	andeq	fp, r6, r0, lsl #20
     678:	03050100 	movweq	r0, #20736	; 0x5100
     67c:	100058d4 	ldrdne	r5, [r0], -r4
     680:	00097e15 	andeq	r7, r9, r5, lsl lr
     684:	000b6410 	andeq	r6, fp, r0, lsl r4
     688:	0006a000 	andeq	sl, r6, r0
     68c:	50011600 	andpl	r1, r1, r0, lsl #12
     690:	588c0305 	stmpl	ip, {r0, r2, r8, r9}
     694:	01161000 	tsteq	r6, r0
     698:	d4030551 	strle	r0, [r3], #-1361	; 0xfffffaaf
     69c:	00100058 	andseq	r0, r0, r8, asr r0
     6a0:	00098214 	andeq	r8, r9, r4, lsl r2
     6a4:	0006bf10 	andeq	fp, r6, r0, lsl pc
     6a8:	c30b0000 	movwgt	r0, #45056	; 0xb000
     6ac:	ba000000 	blt	6b4 <__STACKSEAL_SIZE+0x6b4>
     6b0:	0c000006 	stceq	0, cr0, [r0], {6}
     6b4:	00000085 	andeq	r0, r0, r5, lsl #1
     6b8:	aa060005 	bge	1806d4 <__RAM_SIZE+0x806d4>
     6bc:	1b000006 	blne	6dc <__STACKSEAL_SIZE+0x6dc>
     6c0:	00042b01 	andeq	r2, r4, r1, lsl #22
     6c4:	06550100 	ldrbeq	r0, [r5], -r0, lsl #2
     6c8:	00095c01 	andeq	r5, r9, r1, lsl #24
     6cc:	00097410 	andeq	r7, r9, r0, lsl r4
     6d0:	00015910 	andeq	r5, r1, r0, lsl r9
     6d4:	07140100 	ldreq	r0, [r4, -r0, lsl #2]
     6d8:	121c0000 	andsne	r0, ip, #0
     6dc:	ba000003 	blt	6f0 <__STACKSEAL_SIZE+0x6f0>
     6e0:	01000006 	tsteq	r0, r6
     6e4:	58dc0305 	ldmpl	ip, {r0, r2, r8, r9}^
     6e8:	66151000 	ldrvs	r1, [r5], -r0
     6ec:	64100009 	ldrvs	r0, [r0], #-9
     6f0:	0a00000b 	beq	724 <__STACKSEAL_SIZE+0x724>
     6f4:	16000007 	strne	r0, [r0], -r7
     6f8:	03055001 	movweq	r5, #20481	; 0x5001
     6fc:	1000588c 	andne	r5, r0, ip, lsl #17
     700:	05510116 	ldrbeq	r0, [r1, #-278]	; 0xfffffeea
     704:	0058dc03 	subseq	sp, r8, r3, lsl #24
     708:	6a140010 	bvs	500750 <__RAM_SIZE+0x400750>
     70c:	14100009 	ldrne	r0, [r0], #-9
     710:	00000007 	andeq	r0, r0, r7
     714:	00d5011b 	sbcseq	r0, r5, fp, lsl r1
     718:	50010000 	andpl	r0, r1, r0
     71c:	09440106 	stmdbeq	r4, {r1, r2, r8}^
     720:	095c1000 	ldmdbeq	ip, {ip}^
     724:	01791000 	cmneq	r9, r0
     728:	69010000 	stmdbvs	r1, {}	; <UNPREDICTABLE>
     72c:	1c000007 	stcne	0, cr0, [r0], {7}
     730:	00000312 	andeq	r0, r0, r2, lsl r3
     734:	000006ba 			; <UNDEFINED> instruction: 0x000006ba
     738:	e4030501 	str	r0, [r3], #-1281	; 0xfffffaff
     73c:	15100058 	ldrne	r0, [r0, #-88]	; 0xffffffa8
     740:	1000094e 	andne	r0, r0, lr, asr #18
     744:	00000b64 	andeq	r0, r0, r4, ror #22
     748:	0000075f 	andeq	r0, r0, pc, asr r7
     74c:	05500116 	ldrbeq	r0, [r0, #-278]	; 0xfffffeea
     750:	00588c03 	subseq	r8, r8, r3, lsl #24
     754:	51011610 	tstpl	r1, r0, lsl r6
     758:	58e40305 	stmiapl	r4!, {r0, r2, r8, r9}^
     75c:	14001000 	strne	r1, [r0], #-0
     760:	10000952 	andne	r0, r0, r2, asr r9
     764:	00000769 	andeq	r0, r0, r9, ror #14
     768:	cf011b00 	svcgt	0x00011b00
     76c:	01000000 	mrseq	r0, (UNDEF: 0)
     770:	2c01064b 	stccs	6, cr0, [r1], {75}	; 0x4b
     774:	44100009 	ldrmi	r0, [r0], #-9
     778:	99100009 	ldmdbls	r0, {r0, r3}
     77c:	01000001 	tsteq	r0, r1
     780:	000007be 			; <UNDEFINED> instruction: 0x000007be
     784:	0003121c 	andeq	r1, r3, ip, lsl r2
     788:	0006ba00 	andeq	fp, r6, r0, lsl #20
     78c:	03050100 	movweq	r0, #20736	; 0x5100
     790:	100058ec 	andne	r5, r0, ip, ror #17
     794:	00093615 	andeq	r3, r9, r5, lsl r6
     798:	000b6410 	andeq	r6, fp, r0, lsl r4
     79c:	0007b400 	andeq	fp, r7, r0, lsl #8
     7a0:	50011600 	andpl	r1, r1, r0, lsl #12
     7a4:	588c0305 	stmpl	ip, {r0, r2, r8, r9}
     7a8:	01161000 	tsteq	r6, r0
     7ac:	ec030551 	cfstr32	mvfx0, [r3], {81}	; 0x51
     7b0:	00100058 	andseq	r0, r0, r8, asr r0
     7b4:	00093a14 	andeq	r3, r9, r4, lsl sl
     7b8:	0007be10 	andeq	fp, r7, r0, lsl lr
     7bc:	011b0000 	tsteq	fp, r0
     7c0:	000000c9 	andeq	r0, r0, r9, asr #1
     7c4:	01064601 	tsteq	r6, r1, lsl #12
     7c8:	10000914 	andne	r0, r0, r4, lsl r9
     7cc:	1000092c 	andne	r0, r0, ip, lsr #18
     7d0:	000001b9 			; <UNDEFINED> instruction: 0x000001b9
     7d4:	00081301 	andeq	r1, r8, r1, lsl #6
     7d8:	03121c00 	tsteq	r2, #0, 24
     7dc:	06ba0000 	ldrteq	r0, [sl], r0
     7e0:	05010000 	streq	r0, [r1, #-0]
     7e4:	0058f403 	subseq	pc, r8, r3, lsl #8
     7e8:	091e1510 	ldmdbeq	lr, {r4, r8, sl, ip}
     7ec:	0b641000 	bleq	19047f4 <__RAM_SIZE+0x18047f4>
     7f0:	08090000 	stmdaeq	r9, {}	; <UNPREDICTABLE>
     7f4:	01160000 	tsteq	r6, r0
     7f8:	8c030550 	cfstr32hi	mvfx0, [r3], {80}	; 0x50
     7fc:	16100058 			; <UNDEFINED> instruction: 0x16100058
     800:	03055101 	movweq	r5, #20737	; 0x5101
     804:	100058f4 	strdne	r5, [r0], -r4
     808:	09221400 	stmdbeq	r2!, {sl, ip}
     80c:	08131000 	ldmdaeq	r3, {ip}
     810:	1b000000 	blne	818 <__Vectors_Size+0x58>
     814:	00040b01 	andeq	r0, r4, r1, lsl #22
     818:	063f0100 	ldrteq	r0, [pc], -r0, lsl #2
     81c:	0008f801 	andeq	pc, r8, r1, lsl #16
     820:	00091410 	andeq	r1, r9, r0, lsl r4
     824:	0001d910 	andeq	sp, r1, r0, lsl r9
     828:	08710100 	ldmdaeq	r1!, {r8}^
     82c:	121c0000 	andsne	r0, ip, #0
     830:	ba000003 	blt	844 <__Vectors_Size+0x84>
     834:	01000006 	tsteq	r0, r6
     838:	58fc0305 	ldmpl	ip!, {r0, r2, r8, r9}^
     83c:	02151000 	andseq	r1, r5, #0
     840:	64100009 	ldrvs	r0, [r0], #-9
     844:	5e00000b 	cdppl	0, 0, cr0, cr0, cr11, {0}
     848:	16000008 	strne	r0, [r0], -r8
     84c:	03055001 	movweq	r5, #20481	; 0x5001
     850:	1000588c 	andne	r5, r0, ip, lsl #17
     854:	05510116 	ldrbeq	r0, [r1, #-278]	; 0xfffffeea
     858:	0058fc03 	subseq	pc, r8, r3, lsl #24
     85c:	06140010 			; <UNDEFINED> instruction: 0x06140010
     860:	71100009 	tstvc	r0, r9
     864:	14000008 	strne	r0, [r0], #-8
     868:	1000090a 	andne	r0, r0, sl, lsl #18
     86c:	000009b1 			; <UNDEFINED> instruction: 0x000009b1
     870:	4d011b00 	vstrmi	d1, [r1, #-0]
     874:	01000002 	tsteq	r0, r2
     878:	9001062f 	andls	r0, r1, pc, lsr #12
     87c:	f8100008 			; <UNDEFINED> instruction: 0xf8100008
     880:	f9100008 			; <UNDEFINED> instruction: 0xf9100008
     884:	01000001 	tsteq	r0, r1
     888:	000009a1 	andeq	r0, r0, r1, lsr #19
     88c:	0004fd19 	andeq	pc, r4, r9, lsl sp	; <UNPREDICTABLE>
     890:	12300100 	eorsne	r0, r0, #0, 2
     894:	000009a1 	andeq	r0, r0, r1, lsr #19
     898:	7df09103 	ldfvcp	f1, [r0, #12]!
     89c:	0000fb13 	andeq	pc, r0, r3, lsl fp	; <UNPREDICTABLE>
     8a0:	12310100 	eorsne	r0, r1, #0, 2
     8a4:	00000085 	andeq	r0, r0, r5, lsl #1
     8a8:	00000238 	andeq	r0, r0, r8, lsr r2
     8ac:	00000232 	andeq	r0, r0, r2, lsr r2
     8b0:	00042513 	andeq	r2, r4, r3, lsl r5
     8b4:	12320100 	eorsne	r0, r2, #0, 2
     8b8:	00000085 	andeq	r0, r0, r5, lsl #1
     8bc:	00000265 	andeq	r0, r0, r5, ror #4
     8c0:	00000261 	andeq	r0, r0, r1, ror #4
     8c4:	00040513 	andeq	r0, r4, r3, lsl r5
     8c8:	09330100 	ldmdbeq	r3!, {r8}
     8cc:	00000079 	andeq	r0, r0, r9, ror r0
     8d0:	0000028b 	andeq	r0, r0, fp, lsl #5
     8d4:	00000283 	andeq	r0, r0, r3, lsl #5
     8d8:	0000001d 	andeq	r0, r0, sp, lsl r0
     8dc:	00090700 	andeq	r0, r9, r0, lsl #14
     8e0:	00691e00 	rsbeq	r1, r9, r0, lsl #28
     8e4:	79123801 	ldmdbvc	r2, {r0, fp, ip, sp}
     8e8:	c3000000 	movwgt	r0, #0
     8ec:	bf000002 	svclt	0x00000002
     8f0:	17000002 	strne	r0, [r0, -r2]
     8f4:	100008d8 	ldrdne	r0, [r0], -r8
     8f8:	00000b64 	andeq	r0, r0, r4, ror #22
     8fc:	05500116 	ldrbeq	r0, [r0, #-278]	; 0xfffffeea
     900:	00588003 	subseq	r8, r8, r3
     904:	15000010 	strne	r0, [r0, #-16]
     908:	100008a0 	andne	r0, r0, r0, lsr #17
     90c:	00000b9f 	muleq	r0, pc, fp	; <UNPREDICTABLE>
     910:	00000927 	andeq	r0, r0, r7, lsr #18
     914:	02500116 	subseq	r0, r0, #-2147483643	; 0x80000005
     918:	0116007d 	tsteq	r6, sp, ror r0
     91c:	16300151 			; <UNDEFINED> instruction: 0x16300151
     920:	0a035201 	beq	d512c <__HEAP_SIZE+0xd412c>
     924:	14000100 	strne	r0, [r0], #-256	; 0xffffff00
     928:	100008a4 	andne	r0, r0, r4, lsr #17
     92c:	00000bac 	andeq	r0, r0, ip, lsr #23
     930:	0008aa14 	andeq	sl, r8, r4, lsl sl
     934:	000bba10 	andeq	fp, fp, r0, lsl sl
     938:	08b61500 	ldmeq	r6!, {r8, sl, ip}
     93c:	0bc81000 	bleq	ff204944 <__StackTop+0xc7104944>
     940:	09590000 	ldmdbeq	r9, {}^	; <UNPREDICTABLE>
     944:	01160000 	tsteq	r6, r0
     948:	007d0250 	rsbseq	r0, sp, r0, asr r2
     94c:	02510116 	subseq	r0, r1, #-2147483643	; 0x80000005
     950:	01164008 	tsteq	r6, r8
     954:	00740252 	rsbseq	r0, r4, r2, asr r2
     958:	08c01500 	stmiaeq	r0, {r8, sl, ip}^
     95c:	0b641000 	bleq	1904964 <__RAM_SIZE+0x1804964>
     960:	09700000 	ldmdbeq	r0!, {}^	; <UNPREDICTABLE>
     964:	01160000 	tsteq	r6, r0
     968:	70030550 	andvc	r0, r3, r0, asr r5
     96c:	00100058 	andseq	r0, r0, r8, asr r0
     970:	0008cc15 	andeq	ip, r8, r5, lsl ip
     974:	000b6410 	andeq	r6, fp, r0, lsl r4
     978:	00098d00 	andeq	r8, r9, r0, lsl #26
     97c:	50011600 	andpl	r1, r1, r0, lsl #12
     980:	58540305 	ldmdapl	r4, {r0, r2, r8, r9}^
     984:	01161000 	tsteq	r6, r0
     988:	00750251 	rsbseq	r0, r5, r1, asr r2
     98c:	08e41700 	stmiaeq	r4!, {r8, r9, sl, ip}^
     990:	0b491000 	bleq	1244998 <__RAM_SIZE+0x1144998>
     994:	01160000 	tsteq	r6, r0
     998:	88030550 	stmdahi	r3, {r4, r6, r8, sl}
     99c:	00100058 	andseq	r0, r0, r8, asr r0
     9a0:	00850b00 	addeq	r0, r5, r0, lsl #22
     9a4:	09b10000 	ldmibeq	r1!, {}	; <UNPREDICTABLE>
     9a8:	850c0000 	strhi	r0, [ip, #-0]
     9ac:	3f000000 	svccc	0x00000000
     9b0:	dc011b00 			; <UNDEFINED> instruction: 0xdc011b00
     9b4:	01000002 	tsteq	r0, r2
     9b8:	4401061f 	strmi	r0, [r1], #-1567	; 0xfffff9e1
     9bc:	90100008 	andsls	r0, r0, r8
     9c0:	e2100008 	ands	r0, r0, #8
     9c4:	01000002 	tsteq	r0, r2
     9c8:	00000a38 	andeq	r0, r0, r8, lsr sl
     9cc:	00002013 	andeq	r2, r0, r3, lsl r0
     9d0:	13200100 	nopne	{0}	; <UNPREDICTABLE>
     9d4:	00000a38 	andeq	r0, r0, r8, lsr sl
     9d8:	00000320 	andeq	r0, r0, r0, lsr #6
     9dc:	0000031a 	andeq	r0, r0, sl, lsl r3
     9e0:	00009e19 	andeq	r9, r0, r9, lsl lr
     9e4:	12210100 	eorne	r0, r1, #0, 2
     9e8:	00000080 	andeq	r0, r0, r0, lsl #1
     9ec:	156c9102 	strbne	r9, [ip, #-258]!	; 0xfffffefe
     9f0:	10000866 	andne	r0, r0, r6, ror #16
     9f4:	00000b64 	andeq	r0, r0, r4, ror #22
     9f8:	00000a09 	andeq	r0, r0, r9, lsl #20
     9fc:	02500116 	subseq	r0, r0, #-2147483643	; 0x80000005
     a00:	01160075 	tsteq	r6, r5, ror r0
     a04:	00740251 	rsbseq	r0, r4, r1, asr r2
     a08:	08741500 	ldmdaeq	r4!, {r8, sl, ip}^
     a0c:	0b641000 	bleq	1904a14 <__RAM_SIZE+0x1804a14>
     a10:	0a220000 	beq	880a18 <__RAM_SIZE+0x780a18>
     a14:	01160000 	tsteq	r6, r0
     a18:	00750250 	rsbseq	r0, r5, r0, asr r2
     a1c:	01510116 	cmpeq	r1, r6, lsl r1
     a20:	84170034 	ldrhi	r0, [r7], #-52	; 0xffffffcc
     a24:	64100008 	ldrvs	r0, [r0], #-8
     a28:	1600000b 	strne	r0, [r0], -fp
     a2c:	75025001 	strvc	r5, [r2, #-1]
     a30:	51011600 	tstpl	r1, r0, lsl #12
     a34:	00003301 	andeq	r3, r0, r1, lsl #6
     a38:	0080040e 	addeq	r0, r0, lr, lsl #8
     a3c:	011b0000 	tsteq	fp, r0
     a40:	000003d7 	ldrdeq	r0, [r0], -r7
     a44:	01061701 	tsteq	r6, r1, lsl #14
	...
     a50:	0000034c 	andeq	r0, r0, ip, asr #6
     a54:	000a9301 	andeq	r9, sl, r1, lsl #6
     a58:	00611f00 	rsbeq	r1, r1, r0, lsl #30
     a5c:	79091801 	stmdbvc	r9, {r0, fp, ip}
     a60:	00000000 	andeq	r0, r0, r0
     a64:	0100621f 	tsteq	r0, pc, lsl r2
     a68:	00791018 	rsbseq	r1, r9, r8, lsl r0
     a6c:	1f000000 	svcne	0x00000000
     a70:	18010063 	stmdane	r1, {r0, r1, r5, r6}
     a74:	00007917 	andeq	r7, r0, r7, lsl r9
     a78:	00170000 	andseq	r0, r7, r0
     a7c:	64000000 	strvs	r0, [r0], #-0
     a80:	1600000b 	strne	r0, [r0], -fp
     a84:	03055001 	movweq	r5, #20481	; 0x5001
     a88:	00000000 	andeq	r0, r0, r0
     a8c:	01510116 	cmpeq	r1, r6, lsl r1
     a90:	1b000030 	blne	b58 <__Vectors_Size+0x398>
     a94:	00034401 	andeq	r4, r3, r1, lsl #8
     a98:	06130100 	ldreq	r0, [r3], -r0, lsl #2
     a9c:	00000001 	andeq	r0, r0, r1
     aa0:	00000000 	andeq	r0, r0, r0
     aa4:	00036c00 	andeq	r6, r3, r0, lsl #24
     aa8:	0ad20100 	beq	ff480eb0 <__StackTop+0xc7380eb0>
     aac:	121c0000 	andsne	r0, ip, #0
     ab0:	e2000003 	and	r0, r0, #3
     ab4:	0100000a 	tsteq	r0, sl
     ab8:	00000305 	andeq	r0, r0, r5, lsl #6
     abc:	00170000 	andseq	r0, r7, r0
     ac0:	49000000 	stmdbmi	r0, {}	; <UNPREDICTABLE>
     ac4:	1600000b 	strne	r0, [r0], -fp
     ac8:	03055001 	movweq	r5, #20481	; 0x5001
     acc:	00000000 	andeq	r0, r0, r0
     ad0:	c30b0000 	movwgt	r0, #45056	; 0xb000
     ad4:	e2000000 	and	r0, r0, #0
     ad8:	0c00000a 	stceq	0, cr0, [r0], {10}
     adc:	00000085 	andeq	r0, r0, r5, lsl #1
     ae0:	d206000f 	andle	r0, r6, #15
     ae4:	1b00000a 	blne	b14 <__Vectors_Size+0x354>
     ae8:	00010701 	andeq	r0, r1, r1, lsl #14
     aec:	060f0100 	streq	r0, [pc], -r0, lsl #2
     af0:	00000001 	andeq	r0, r0, r1
     af4:	00000000 	andeq	r0, r0, r0
     af8:	00038c00 	andeq	r8, r3, r0, lsl #24
     afc:	0b260100 	bleq	980f04 <__RAM_SIZE+0x880f04>
     b00:	121c0000 	andsne	r0, ip, #0
     b04:	36000003 	strcc	r0, [r0], -r3
     b08:	0100000b 	tsteq	r0, fp
     b0c:	00000305 	andeq	r0, r0, r5, lsl #6
     b10:	00170000 	andseq	r0, r7, r0
     b14:	49000000 	stmdbmi	r0, {}	; <UNPREDICTABLE>
     b18:	1600000b 	strne	r0, [r0], -fp
     b1c:	03055001 	movweq	r5, #20481	; 0x5001
     b20:	00000000 	andeq	r0, r0, r0
     b24:	c30b0000 	movwgt	r0, #45056	; 0xb000
     b28:	36000000 	strcc	r0, [r0], -r0
     b2c:	0c00000b 	stceq	0, cr0, [r0], {11}
     b30:	00000085 	andeq	r0, r0, r5, lsl #1
     b34:	26060019 			; <UNDEFINED> instruction: 0x26060019
     b38:	2000000b 	andcs	r0, r0, fp
     b3c:	035e0101 	cmpeq	lr, #1073741824	; 0x40000000
     b40:	035e0000 	cmpeq	lr, #0
     b44:	07070000 	streq	r0, [r7, -r0]
     b48:	01012106 	tsteq	r1, r6, lsl #2
     b4c:	0000001b 	andeq	r0, r0, fp, lsl r0
     b50:	00000011 	andeq	r0, r0, r1, lsl r0
     b54:	0120000a 			; <UNDEFINED> instruction: 0x0120000a
     b58:	00029f01 	andeq	r9, r2, r1, lsl #30
     b5c:	00029f00 	andeq	r9, r2, r0, lsl #30
     b60:	06460800 	strbeq	r0, [r6], -r0, lsl #16
     b64:	d9010120 	stmdble	r1, {r5, r8}
     b68:	d9000005 	stmdble	r0, {r0, r2}
     b6c:	09000005 	stmdbeq	r0, {r0, r2}
     b70:	012205c8 	smlawteq	r2, r8, r5, r0
     b74:	00036801 	andeq	r6, r3, r1, lsl #16
     b78:	00036800 	andeq	r6, r3, r0, lsl #16
     b7c:	017e0600 	cmneq	lr, r0, lsl #12
     b80:	01012210 	tsteq	r1, r0, lsl r2
     b84:	0000013a 	andeq	r0, r0, sl, lsr r1
     b88:	0000013a 	andeq	r0, r0, sl, lsr r1
     b8c:	0605ec06 	streq	lr, [r5], -r6, lsl #24
     b90:	53010122 	movwpl	r0, #4386	; 0x1122
     b94:	53000000 	movwpl	r0, #0
     b98:	06000000 	streq	r0, [r0], -r0
     b9c:	21060358 	tstcs	r6, r8, asr r3
     ba0:	00ae0101 	adceq	r0, lr, r1, lsl #2
     ba4:	00a40000 	adceq	r0, r4, r0
     ba8:	000a0000 	andeq	r0, sl, r0
     bac:	e7010120 	str	r0, [r1, -r0, lsr #2]
     bb0:	e7000000 	str	r0, [r0, -r0]
     bb4:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
     bb8:	01200e4a 			; <UNDEFINED> instruction: 0x01200e4a
     bbc:	00041101 	andeq	r1, r4, r1, lsl #2
     bc0:	00041100 	andeq	r1, r4, r0, lsl #2
     bc4:	0e4b0800 	cdpeq	8, 4, cr0, cr11, cr0, {0}
     bc8:	47010120 	strmi	r0, [r1, -r0, lsr #2]
     bcc:	47000002 	strmi	r0, [r0, -r2]
     bd0:	08000002 	stmdaeq	r0, {r1}
     bd4:	e5000648 	str	r0, [r0, #-1608]	; 0xfffff9b8
     bd8:	02000004 	andeq	r0, r0, #4
     bdc:	00020100 	andeq	r0, r2, r0, lsl #2
     be0:	89010400 	stmdbhi	r1, {sl}
     be4:	0c000001 	stceq	0, cr0, [r0], {1}
     be8:	00000461 	andeq	r0, r0, r1, ror #8
     bec:	0000038d 	andeq	r0, r0, sp, lsl #7
     bf0:	00000090 	muleq	r0, r0, r0
	...
     bfc:	000004dd 	ldrdeq	r0, [r0], -sp
     c00:	73060102 	movwvc	r0, #24834	; 0x6102
     c04:	03000002 	movweq	r0, #2
     c08:	0000017f 	andeq	r0, r0, pc, ror r1
     c0c:	3c182b02 			; <UNDEFINED> instruction: 0x3c182b02
     c10:	02000000 	andeq	r0, r0, #0
     c14:	02710801 	rsbseq	r0, r1, #65536	; 0x10000
     c18:	02020000 	andeq	r0, r2, #0
     c1c:	00003205 	andeq	r3, r0, r5, lsl #4
     c20:	07020200 	streq	r0, [r2, -r0, lsl #4]
     c24:	00000322 	andeq	r0, r0, r2, lsr #6
     c28:	2c050402 	cfstrscs	mvf0, [r5], {2}
     c2c:	03000001 	movweq	r0, #1
     c30:	0000006f 	andeq	r0, r0, pc, rrx
     c34:	64194f02 	ldrvs	r4, [r9], #-3842	; 0xfffff0fe
     c38:	02000000 	andeq	r0, r0, #0
     c3c:	02ca0704 	sbceq	r0, sl, #4, 14	; 0x100000
     c40:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
     c44:	00012705 	andeq	r2, r1, r5, lsl #14
     c48:	07080200 	streq	r0, [r8, -r0, lsl #4]
     c4c:	000002c5 	andeq	r0, r0, r5, asr #5
     c50:	69050404 	stmdbvs	r5, {r2, sl}
     c54:	0200746e 	andeq	r7, r0, #1845493760	; 0x6e000000
     c58:	02cf0704 	sbceq	r0, pc, #4, 14	; 0x100000
     c5c:	81030000 	mrshi	r0, (UNDEF: 3)
     c60:	03000001 	movweq	r0, #1
     c64:	00301318 	eorseq	r1, r0, r8, lsl r3
     c68:	87050000 	strhi	r0, [r5, -r0]
     c6c:	03000000 	movweq	r0, #0
     c70:	00000071 	andeq	r0, r0, r1, ror r0
     c74:	58143003 	ldmdapl	r4, {r0, r1, ip, sp}
     c78:	05000000 	streq	r0, [r0, #-0]
     c7c:	00000098 	muleq	r0, r8, r0
     c80:	0000a406 	andeq	sl, r0, r6, lsl #8
     c84:	027c0700 	rsbseq	r0, ip, #0, 14
     c88:	0901f804 	stmdbeq	r1, {r2, fp, ip, sp, lr, pc}
     c8c:	000003b3 			; <UNDEFINED> instruction: 0x000003b3
     c90:	00009208 	andeq	r9, r0, r8, lsl #4
     c94:	01fa0400 	mvnseq	r0, r0, lsl #8
     c98:	0000a912 	andeq	sl, r0, r2, lsl r9
     c9c:	00230200 	eoreq	r0, r3, r0, lsl #4
     ca0:	00044a08 	andeq	r4, r4, r8, lsl #20
     ca4:	01fb0400 	mvnseq	r0, r0, lsl #8
     ca8:	0000a412 	andeq	sl, r0, r2, lsl r4
     cac:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
     cb0:	00035408 	andeq	r5, r3, r8, lsl #8
     cb4:	01fc0400 	mvnseq	r0, r0, lsl #8
     cb8:	0000a412 	andeq	sl, r0, r2, lsl r4
     cbc:	08230200 	stmdaeq	r3!, {r9}
     cc0:	00045508 	andeq	r5, r4, r8, lsl #10
     cc4:	01fd0400 	mvnseq	r0, r0, lsl #8
     cc8:	0000a412 	andeq	sl, r0, r2, lsl r4
     ccc:	0c230200 	sfmeq	f0, 4, [r3], #-0
     cd0:	52435309 	subpl	r5, r3, #603979776	; 0x24000000
     cd4:	01fe0400 	mvnseq	r0, r0, lsl #8
     cd8:	0000a412 	andeq	sl, r0, r2, lsl r4
     cdc:	10230200 	eorne	r0, r3, r0, lsl #4
     ce0:	52434309 	subpl	r4, r3, #603979776	; 0x24000000
     ce4:	01ff0400 	mvnseq	r0, r0, lsl #8
     ce8:	0000a412 	andeq	sl, r0, r2, lsl r4
     cec:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
     cf0:	0002c008 	andeq	ip, r2, r8
     cf4:	02000400 	andeq	r0, r0, #0, 8
     cf8:	0003c312 	andeq	ip, r3, r2, lsl r3
     cfc:	18230200 	stmdane	r3!, {r9}
     d00:	00030c08 	andeq	r0, r3, r8, lsl #24
     d04:	02010400 	andeq	r0, r1, #0, 8
     d08:	0000a412 	andeq	sl, r0, r2, lsl r4
     d0c:	24230200 	strtcs	r0, [r3], #-512	; 0xfffffe00
     d10:	00025c08 	andeq	r5, r2, r8, lsl #24
     d14:	02020400 	andeq	r0, r2, #0, 8
     d18:	0000a412 	andeq	sl, r0, r2, lsl r4
     d1c:	28230200 	stmdacs	r3!, {r9}
     d20:	00037408 	andeq	r7, r3, r8, lsl #8
     d24:	02030400 	andeq	r0, r3, #0, 8
     d28:	0000a412 	andeq	sl, r0, r2, lsl r4
     d2c:	2c230200 	sfmcs	f0, 4, [r3], #-0
     d30:	00035908 	andeq	r5, r3, r8, lsl #18
     d34:	02040400 	andeq	r0, r4, #0, 8
     d38:	0000a412 	andeq	sl, r0, r2, lsl r4
     d3c:	30230200 	eorcc	r0, r3, r0, lsl #4
     d40:	00002c08 	andeq	r2, r0, r8, lsl #24
     d44:	02050400 	andeq	r0, r5, #0, 8
     d48:	0000a412 	andeq	sl, r0, r2, lsl r4
     d4c:	34230200 	strtcc	r0, [r3], #-512	; 0xfffffe00
     d50:	00013508 	andeq	r3, r1, r8, lsl #10
     d54:	02060400 	andeq	r0, r6, #0, 8
     d58:	0000a412 	andeq	sl, r0, r2, lsl r4
     d5c:	38230200 	stmdacc	r3!, {r9}
     d60:	00043708 	andeq	r3, r4, r8, lsl #14
     d64:	02070400 	andeq	r0, r7, #0, 8
     d68:	0000a412 	andeq	sl, r0, r2, lsl r4
     d6c:	3c230200 	sfmcc	f0, 4, [r3], #-0
     d70:	00004c08 	andeq	r4, r0, r8, lsl #24
     d74:	02080400 	andeq	r0, r8, #0, 8
     d78:	0003dd12 	andeq	sp, r3, r2, lsl sp
     d7c:	40230200 	eormi	r0, r3, r0, lsl #4
     d80:	00044308 	andeq	r4, r4, r8, lsl #6
     d84:	02090400 	andeq	r0, r9, #0, 8
     d88:	0000a912 	andeq	sl, r0, r2, lsl r9
     d8c:	48230200 	stmdami	r3!, {r9}
     d90:	0000e008 	andeq	lr, r0, r8
     d94:	020a0400 	andeq	r0, sl, #0, 8
     d98:	0000a912 	andeq	sl, r0, r2, lsl r9
     d9c:	4c230200 	sfmmi	f0, 4, [r3], #-0
     da0:	00016308 	andeq	r6, r1, r8, lsl #6
     da4:	020b0400 	andeq	r0, fp, #0, 8
     da8:	0003f712 	andeq	pc, r3, r2, lsl r7	; <UNPREDICTABLE>
     dac:	50230200 	eorpl	r0, r3, r0, lsl #4
     db0:	00029708 	andeq	r9, r2, r8, lsl #14
     db4:	020c0400 	andeq	r0, ip, #0, 8
     db8:	00041112 	andeq	r1, r4, r2, lsl r1
     dbc:	60230200 	eorvs	r0, r3, r0, lsl #4
     dc0:	0003ff08 	andeq	pc, r3, r8, lsl #30
     dc4:	020d0400 	andeq	r0, sp, #0, 8
     dc8:	0000a912 	andeq	sl, r0, r2, lsl r9
     dcc:	78230200 	stmdavc	r3!, {r9}
     dd0:	52544309 	subspl	r4, r4, #603979776	; 0x24000000
     dd4:	020e0400 	andeq	r0, lr, #0, 8
     dd8:	0000a912 	andeq	sl, r0, r2, lsl r9
     ddc:	7c230200 	sfmvc	f0, 4, [r3], #-0
     de0:	00033508 	andeq	r3, r3, r8, lsl #10
     de4:	020f0400 	andeq	r0, pc, #0, 8
     de8:	0000a912 	andeq	sl, r0, r2, lsl r9
     dec:	80230300 	eorhi	r0, r3, r0, lsl #6
     df0:	031b0801 	tsteq	fp, #65536	; 0x10000
     df4:	10040000 	andne	r0, r4, r0
     df8:	00a41202 	adceq	r1, r4, r2, lsl #4
     dfc:	23030000 	movwcs	r0, #12288	; 0x3000
     e00:	4f080184 	svcmi	0x00080184
     e04:	04000004 	streq	r0, [r0], #-4
     e08:	a4120211 	ldrge	r0, [r2], #-529	; 0xfffffdef
     e0c:	03000000 	movweq	r0, #0
     e10:	08018823 	stmdaeq	r1, {r0, r1, r5, fp, pc}
     e14:	0000045b 	andeq	r0, r0, fp, asr r4
     e18:	12021204 	andne	r1, r2, #4, 4	; 0x40000000
     e1c:	000000a4 	andeq	r0, r0, r4, lsr #1
     e20:	018c2303 	orreq	r2, ip, r3, lsl #6
     e24:	0003f508 	andeq	pc, r3, r8, lsl #10
     e28:	02130400 	andseq	r0, r3, #0, 8
     e2c:	00041612 	andeq	r1, r4, r2, lsl r6
     e30:	90230300 	eorls	r0, r3, r0, lsl #6
     e34:	02ff0801 	rscseq	r0, pc, #65536	; 0x10000
     e38:	14040000 	strne	r0, [r4], #-0
     e3c:	00a41202 	adceq	r1, r4, r2, lsl #4
     e40:	23030000 	movwcs	r0, #12288	; 0x3000
     e44:	d20801e4 	andle	r0, r8, #228, 2	; 0x39
     e48:	04000003 	streq	r0, [r0], #-3
     e4c:	a4120215 	ldrge	r0, [r2], #-533	; 0xfffffdeb
     e50:	03000000 	movweq	r0, #0
     e54:	0801e823 	stmdaeq	r1, {r0, r1, r5, fp, sp, lr, pc}
     e58:	00000379 	andeq	r0, r0, r9, ror r3
     e5c:	12021604 	andne	r1, r2, #4, 12	; 0x400000
     e60:	00000426 	andeq	r0, r0, r6, lsr #8
     e64:	01ec2303 	mvneq	r2, r3, lsl #6
     e68:	0000db08 	andeq	sp, r0, r8, lsl #22
     e6c:	02170400 	andseq	r0, r7, #0, 8
     e70:	0000a412 	andeq	sl, r0, r2, lsl r4
     e74:	80230300 	eorhi	r0, r3, r0, lsl #6
     e78:	03830804 	orreq	r0, r3, #4, 16	; 0x40000
     e7c:	18040000 	stmdane	r4, {}	; <UNPREDICTABLE>
     e80:	04361202 	ldrteq	r1, [r6], #-514	; 0xfffffdfe
     e84:	23030000 	movwcs	r0, #12288	; 0x3000
     e88:	98080484 	stmdals	r8, {r2, r7, sl}
     e8c:	04000000 	streq	r0, [r0], #-0
     e90:	a9120219 	ldmdbge	r2, {r0, r3, r4, r9}
     e94:	03000000 	movweq	r0, #0
     e98:	0804c023 	stmdaeq	r4, {r0, r1, r5, lr, pc}
     e9c:	0000003c 	andeq	r0, r0, ip, lsr r0
     ea0:	12021a04 	andne	r1, r2, #4, 20	; 0x4000
     ea4:	000000a9 	andeq	r0, r0, r9, lsr #1
     ea8:	04c42303 	strbeq	r2, [r4], #771	; 0x303
     eac:	00012108 	andeq	r2, r1, r8, lsl #2
     eb0:	021b0400 	andseq	r0, fp, #0, 8
     eb4:	0000a912 	andeq	sl, r0, r2, lsl r9
     eb8:	c8230300 	stmdagt	r3!, {r8, r9}
     ebc:	00b50804 	adcseq	r0, r5, r4, lsl #16
     ec0:	1c040000 	stcne	0, cr0, [r4], {-0}
     ec4:	04461202 	strbeq	r1, [r6], #-514	; 0xfffffdfe
     ec8:	23030000 	movwcs	r0, #12288	; 0x3000
     ecc:	610804cc 	smlabtvs	r8, ip, r4, r0
     ed0:	04000002 	streq	r0, [r0], #-2
     ed4:	a412021d 	ldrge	r0, [r2], #-541	; 0xfffffde3
     ed8:	03000000 	movweq	r0, #0
     edc:	0804d023 	stmdaeq	r4, {r0, r1, r5, ip, lr, pc}
     ee0:	000000bf 	strheq	r0, [r0], -pc	; <UNPREDICTABLE>
     ee4:	12021e04 	andne	r1, r2, #4, 28	; 0x40
     ee8:	00000446 	andeq	r0, r0, r6, asr #8
     eec:	04d42303 	ldrbeq	r2, [r4], #771	; 0x303
     ef0:	00027f08 	andeq	r7, r2, r8, lsl #30
     ef4:	021f0400 	andseq	r0, pc, #0, 8
     ef8:	0000a412 	andeq	sl, r0, r2, lsl r4
     efc:	d8230300 	stmdale	r3!, {r8, r9}
     f00:	02690804 	rsbeq	r0, r9, #4, 16	; 0x40000
     f04:	20040000 	andcs	r0, r4, r0
     f08:	00a41202 	adceq	r1, r4, r2, lsl #4
     f0c:	23030000 	movwcs	r0, #12288	; 0x3000
     f10:	010804dc 	ldrdeq	r0, [r8, -ip]
     f14:	04000001 	streq	r0, [r0], #-1
     f18:	a4120221 	ldrge	r0, [r2], #-545	; 0xfffffddf
     f1c:	03000000 	movweq	r0, #0
     f20:	0804e023 	stmdaeq	r4, {r0, r1, r5, sp, lr, pc}
     f24:	0000033c 	andeq	r0, r0, ip, lsr r3
     f28:	12022204 	andne	r2, r2, #4, 4	; 0x40000000
     f2c:	000000a4 	andeq	r0, r0, r4, lsr #1
     f30:	04e42303 	strbteq	r2, [r4], #771	; 0x303
     f34:	00030408 	andeq	r0, r3, r8, lsl #8
     f38:	02230400 	eoreq	r0, r3, #0, 8
     f3c:	0000a412 	andeq	sl, r0, r2, lsl r4
     f40:	e8230300 	stmda	r3!, {r8, r9}
     f44:	00000804 	andeq	r0, r0, r4, lsl #16
     f48:	24040000 	strcs	r0, [r4], #-0
     f4c:	00a41202 	adceq	r1, r4, r2, lsl #4
     f50:	23030000 	movwcs	r0, #12288	; 0x3000
     f54:	7a0804ec 	bvc	20230c <__RAM_SIZE+0x10230c>
     f58:	04000000 	streq	r0, [r0], #-0
     f5c:	a4120225 	ldrge	r0, [r2], #-549	; 0xfffffddb
     f60:	03000000 	movweq	r0, #0
     f64:	0804f023 	stmdaeq	r4, {r0, r1, r5, ip, sp, lr, pc}
     f68:	000003ee 	andeq	r0, r0, lr, ror #7
     f6c:	12022604 	andne	r2, r2, #4, 12	; 0x400000
     f70:	000000a4 	andeq	r0, r0, r4, lsr #1
     f74:	04f42303 	ldrbteq	r2, [r4], #771	; 0x303
     f78:	00043c08 	andeq	r3, r4, r8, lsl #24
     f7c:	02270400 	eoreq	r0, r7, #0, 8
     f80:	0000a412 	andeq	sl, r0, r2, lsl r4
     f84:	f8230300 			; <UNDEFINED> instruction: 0xf8230300
     f88:	930a0004 	movwls	r0, #40964	; 0xa004
     f8c:	c3000000 	movwgt	r0, #0
     f90:	0b000003 	bleq	fa4 <__Vectors_Size+0x7e4>
     f94:	00000080 	andeq	r0, r0, r0, lsl #1
     f98:	b305000b 	movwlt	r0, #20491	; 0x500b
     f9c:	0a000003 	beq	fb0 <__Vectors_Size+0x7f0>
     fa0:	000000a9 	andeq	r0, r0, r9, lsr #1
     fa4:	000003d8 	ldrdeq	r0, [r0], -r8
     fa8:	0000800b 	andeq	r8, r0, fp
     fac:	06000100 	streq	r0, [r0], -r0, lsl #2
     fb0:	000003c8 	andeq	r0, r0, r8, asr #7
     fb4:	0003d805 	andeq	sp, r3, r5, lsl #16
     fb8:	00a90a00 	adceq	r0, r9, r0, lsl #20
     fbc:	03f20000 	mvnseq	r0, #0
     fc0:	800b0000 	andhi	r0, fp, r0
     fc4:	03000000 	movweq	r0, #0
     fc8:	03e20600 	mvneq	r0, #0, 12
     fcc:	f2050000 	vhadd.s8	d0, d5, d0
     fd0:	0a000003 	beq	fe4 <__Vectors_Size+0x824>
     fd4:	000000a9 	andeq	r0, r0, r9, lsr #1
     fd8:	0000040c 	andeq	r0, r0, ip, lsl #8
     fdc:	0000800b 	andeq	r8, r0, fp
     fe0:	06000500 	streq	r0, [r0], -r0, lsl #10
     fe4:	000003fc 	strdeq	r0, [r0], -ip
     fe8:	00040c05 	andeq	r0, r4, r5, lsl #24
     fec:	00980a00 	addseq	r0, r8, r0, lsl #20
     ff0:	04260000 	strteq	r0, [r6], #-0
     ff4:	800b0000 	andhi	r0, fp, r0
     ff8:	14000000 	strne	r0, [r0], #-0
     ffc:	00980a00 	addseq	r0, r8, r0, lsl #20
    1000:	04360000 	ldrteq	r0, [r6], #-0
    1004:	800b0000 	andhi	r0, fp, r0
    1008:	44000000 	strmi	r0, [r0], #-0
    100c:	00980a00 	addseq	r0, r8, r0, lsl #20
    1010:	04460000 	strbeq	r0, [r6], #-0
    1014:	800b0000 	andhi	r0, fp, r0
    1018:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
    101c:	00980a00 	addseq	r0, r8, r0, lsl #20
    1020:	04560000 	ldrbeq	r0, [r6], #-0
    1024:	800b0000 	andhi	r0, fp, r0
    1028:	00000000 	andeq	r0, r0, r0
    102c:	02af0c00 	adceq	r0, pc, #0, 24
    1030:	28040000 	stmdacs	r4, {}	; <UNPREDICTABLE>
    1034:	00ae0302 	adceq	r0, lr, r2, lsl #6
    1038:	bb030000 	bllt	c1040 <__HEAP_SIZE+0xc0040>
    103c:	05000004 	streq	r0, [r0, #-4]
    1040:	04740f24 	ldrbteq	r0, [r4], #-3876	; 0xfffff0dc
    1044:	63060000 	movwvs	r0, #24576	; 0x6000
    1048:	0d000004 	stceq	0, cr0, [r0, #-16]
    104c:	00047a04 	andeq	r7, r4, r4, lsl #20
    1050:	0f010e00 	svceq	0x00010e00
    1054:	00000496 	muleq	r0, r6, r4
    1058:	98112905 	ldmdals	r1, {r0, r2, r8, fp, sp}
    105c:	01000000 	mrseq	r0, (UNDEF: 0)
    1060:	046f0a01 	strbteq	r0, [pc], #-2561	; 1068 <__HEAP_SIZE+0x68>
    1064:	049b0000 	ldreq	r0, [fp], #0
    1068:	80100000 	andshi	r0, r0, r0
    106c:	ef000000 	svc	0x00000000
    1070:	8a060001 	bhi	18107c <__RAM_SIZE+0x8107c>
    1074:	0f000004 	svceq	0x00000004
    1078:	000004a6 	andeq	r0, r0, r6, lsr #9
    107c:	9b203801 	blls	80f088 <__RAM_SIZE+0x70f088>
    1080:	01000004 	tsteq	r0, r4
    1084:	047c1101 	ldrbteq	r1, [ip], #-257	; 0xfffffeff
    1088:	3e010000 	cdpcc	0, 0, cr0, cr1, cr0, {0}
    108c:	0003050a 	andeq	r0, r3, sl, lsl #10
    1090:	12380000 	eorsne	r0, r8, #0
    1094:	0004b001 	andeq	fp, r4, r1
    1098:	064c0100 	strbeq	r0, [ip], -r0, lsl #2
    109c:	0009dc01 	andeq	sp, r9, r1, lsl #24
    10a0:	000a0810 	andeq	r0, sl, r0, lsl r8
    10a4:	007d0210 	rsbseq	r0, sp, r0, lsl r2
    10a8:	80011201 	andhi	r1, r1, r1, lsl #4
    10ac:	01000004 	tsteq	r0, r4
    10b0:	00010644 	andeq	r0, r1, r4, asr #12
    10b4:	00000000 	andeq	r0, r0, r0
    10b8:	02000000 	andeq	r0, r0, #0
    10bc:	0001007d 	andeq	r0, r1, sp, ror r0
    10c0:	00001bc1 	andeq	r1, r0, r1, asr #23
    10c4:	02f10002 	rscseq	r0, r1, #2
    10c8:	01040000 	mrseq	r0, (UNDEF: 4)
    10cc:	00000189 	andeq	r0, r0, r9, lsl #3
    10d0:	0005ad0c 	andeq	sl, r5, ip, lsl #26
    10d4:	00038d00 	andeq	r8, r3, r0, lsl #26
    10d8:	00016000 	andeq	r6, r1, r0
	...
    10e4:	0006b200 	andeq	fp, r6, r0, lsl #4
    10e8:	04080200 	streq	r0, [r8], #-512	; 0xfffffe00
    10ec:	00000068 	andeq	r0, r0, r8, rrx
    10f0:	cf070402 	svcgt	0x00070402
    10f4:	02000002 	andeq	r0, r0, #2
    10f8:	02730601 	rsbseq	r0, r3, #1048576	; 0x100000
    10fc:	01020000 	mrseq	r0, (UNDEF: 2)
    1100:	00027108 	andeq	r7, r2, r8, lsl #2
    1104:	05020200 	streq	r0, [r2, #-512]	; 0xfffffe00
    1108:	00000032 	andeq	r0, r0, r2, lsr r0
    110c:	22070202 	andcs	r0, r7, #536870912	; 0x20000000
    1110:	02000003 	andeq	r0, r0, #3
    1114:	012c0504 			; <UNDEFINED> instruction: 0x012c0504
    1118:	53030000 	movwpl	r0, #12288	; 0x3000
    111c:	02000000 	andeq	r0, r0, #0
    1120:	02ca0704 	sbceq	r0, sl, #4, 14	; 0x100000
    1124:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    1128:	00012705 	andeq	r2, r1, r5, lsl #14
    112c:	00660300 	rsbeq	r0, r6, r0, lsl #6
    1130:	6b040000 	blvs	101138 <__RAM_SIZE+0x1138>
    1134:	02000006 	andeq	r0, r0, #6
    1138:	007e1969 	rsbseq	r1, lr, r9, ror #18
    113c:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    1140:	0002c507 	andeq	ip, r2, r7, lsl #10
    1144:	05040500 	streq	r0, [r4, #-1280]	; 0xfffffb00
    1148:	00746e69 	rsbseq	r6, r4, r9, ror #28
    114c:	00008503 	andeq	r8, r0, r3, lsl #10
    1150:	06940400 	ldreq	r0, [r4], r0, lsl #8
    1154:	e8020000 	stmda	r2, {}	; <UNPREDICTABLE>
    1158:	0000301a 	andeq	r3, r0, sl, lsl r0
    115c:	00300300 	eorseq	r0, r0, r0, lsl #6
    1160:	6d040000 	stcvs	0, cr0, [r4, #-0]
    1164:	03000006 	movweq	r0, #6
    1168:	0072143c 	rsbseq	r1, r2, ip, lsr r4
    116c:	96040000 	strls	r0, [r4], -r0
    1170:	03000006 	movweq	r0, #6
    1174:	00911552 	addseq	r1, r1, r2, asr r5
    1178:	fe040000 	cdp2	0, 0, cr0, cr4, cr0, {0}
    117c:	04000006 	streq	r0, [r0], #-6
    1180:	00c61b28 	sbceq	r1, r6, r8, lsr #22
    1184:	a3060000 	movwge	r0, #24576	; 0x6000
    1188:	04000005 	streq	r0, [r0], #-5
    118c:	00e00006 	rsceq	r0, r0, r6
    1190:	53070000 	movwpl	r0, #28672	; 0x7000
    1194:	e0000006 	and	r0, r0, r6
    1198:	02000000 	andeq	r0, r0, #0
    119c:	00010023 	andeq	r0, r1, r3, lsr #32
    11a0:	a5040408 	strge	r0, [r4, #-1032]	; 0xfffffbf8
    11a4:	04000005 	streq	r0, [r0], #-5
    11a8:	00ba1863 	adcseq	r1, sl, r3, ror #16
    11ac:	0c040000 	stceq	0, cr0, [r4], {-0}
    11b0:	05000005 	streq	r0, [r0, #-5]
    11b4:	003017d1 	ldrsbteq	r1, [r0], -r1
    11b8:	ee030000 	cdp	0, 0, cr0, cr3, cr0, {0}
    11bc:	02000000 	andeq	r0, r0, #0
    11c0:	00630408 	rsbeq	r0, r3, r8, lsl #8
    11c4:	ea040000 	b	1011cc <__RAM_SIZE+0x11cc>
    11c8:	01000005 	tsteq	r0, r5
    11cc:	0112107a 	tsteq	r2, sl, ror r0
    11d0:	04090000 	streq	r0, [r9], #-0
    11d4:	00000118 	andeq	r0, r0, r8, lsl r1
    11d8:	0133010a 	teqeq	r3, sl, lsl #2
    11dc:	330b0000 	movwcc	r0, #45056	; 0xb000
    11e0:	0b000001 	bleq	11ec <__HEAP_SIZE+0x1ec>
    11e4:	000000e0 	andeq	r0, r0, r0, ror #1
    11e8:	0000ee0b 	andeq	lr, r0, fp, lsl #28
    11ec:	00ee0b00 	rsceq	r0, lr, r0, lsl #22
    11f0:	02000000 	andeq	r0, r0, #0
    11f4:	027a0801 	rsbseq	r0, sl, #65536	; 0x10000
    11f8:	33030000 	movwcc	r0, #12288	; 0x3000
    11fc:	0c000001 	stceq	0, cr0, [r0], {1}
    1200:	097e0108 	ldmdbeq	lr!, {r3, r8}^
    1204:	00000167 	andeq	r0, r0, r7, ror #2
    1208:	7463660d 	strbtvc	r6, [r3], #-1549	; 0xfffff9f3
    120c:	0b7f0100 	bleq	1fc1614 <__RAM_SIZE+0x1ec1614>
    1210:	00000178 	andeq	r0, r0, r8, ror r1
    1214:	0d002302 	stceq	3, cr2, [r0, #-8]
    1218:	00677261 	rsbeq	r7, r7, r1, ror #4
    121c:	e0098001 	and	r8, r9, r1
    1220:	02000000 	andeq	r0, r0, #0
    1224:	0a000423 	beq	22b8 <__HEAP_SIZE+0x12b8>
    1228:	00017801 	andeq	r7, r1, r1, lsl #16
    122c:	01330b00 	teqeq	r3, r0, lsl #22
    1230:	e00b0000 	and	r0, fp, r0
    1234:	00000000 	andeq	r0, r0, r0
    1238:	01670409 	cmneq	r7, r9, lsl #8
    123c:	e0040000 	and	r0, r4, r0
    1240:	01000006 	tsteq	r0, r6
    1244:	013f0381 	teqeq	pc, r1, lsl #7
    1248:	7e030000 	cdpvc	0, 0, cr0, cr3, cr0, {0}
    124c:	0e000001 	cdpeq	0, 0, cr0, cr0, cr1, {0}
    1250:	00058301 	andeq	r8, r5, r1, lsl #6
    1254:	038a0100 	orreq	r0, sl, #0, 2
    1258:	00850105 	addeq	r0, r5, r5, lsl #2
	...
    1264:	03ac0000 			; <UNDEFINED> instruction: 0x03ac0000
    1268:	4c010000 	stcmi	0, cr0, [r1], {-0}
    126c:	0f000002 	svceq	0x00000002
    1270:	0074756f 	rsbseq	r7, r4, pc, ror #10
    1274:	16038a01 	strne	r8, [r3], -r1, lsl #20
    1278:	00000178 	andeq	r0, r0, r8, ror r1
    127c:	0000040e 	andeq	r0, r0, lr, lsl #8
    1280:	00000408 	andeq	r0, r0, r8, lsl #8
    1284:	6772610f 	ldrbvs	r6, [r2, -pc, lsl #2]!
    1288:	038a0100 	orreq	r0, sl, #0, 2
    128c:	0000e03d 	andeq	lr, r0, sp, lsr r0
    1290:	00043f00 	andeq	r3, r4, r0, lsl #30
    1294:	00043b00 	andeq	r3, r4, r0, lsl #22
    1298:	05c81000 	strbeq	r1, [r8]
    129c:	8a010000 	bhi	412a4 <__HEAP_SIZE+0x402a4>
    12a0:	024c4e03 	subeq	r4, ip, #3, 28	; 0x30
    12a4:	91020000 	mrsls	r0, (UNDEF: 2)
    12a8:	76121178 			; <UNDEFINED> instruction: 0x76121178
    12ac:	8c010061 	stchi	0, cr0, [r1], {97}	; 0x61
    12b0:	00e20b03 	rsceq	r0, r2, r3, lsl #22
    12b4:	91020000 	mrsls	r0, (UNDEF: 2)
    12b8:	04e4136c 	strbteq	r1, [r4], #876	; 0x36c
    12bc:	8e010000 	cdphi	0, 0, cr0, cr1, cr0, {0}
    12c0:	018a1b03 	orreq	r1, sl, r3, lsl #22
    12c4:	91020000 	mrsls	r0, (UNDEF: 2)
    12c8:	65721464 	ldrbvs	r1, [r2, #-1124]!	; 0xfffffb9c
    12cc:	8f010074 	svchi	0x00010074
    12d0:	008c0d03 	addeq	r0, ip, r3, lsl #26
    12d4:	04620000 	strbteq	r0, [r2], #-0
    12d8:	04600000 	strbteq	r0, [r0], #-0
    12dc:	00150000 	andseq	r0, r5, r0
    12e0:	5f000000 	svcpl	0x00000000
    12e4:	16000005 	strne	r0, [r0], -r5
    12e8:	03055001 	movweq	r5, #20481	; 0x5001
    12ec:	00000000 	andeq	r0, r0, r0
    12f0:	02510116 	subseq	r0, r1, #-2147483643	; 0x80000005
    12f4:	01165491 			; <UNDEFINED> instruction: 0x01165491
    12f8:	ff090252 			; <UNDEFINED> instruction: 0xff090252
    12fc:	03530116 	cmpeq	r3, #-2147483643	; 0x80000005
    1300:	16066891 			; <UNDEFINED> instruction: 0x16066891
    1304:	02007d02 	andeq	r7, r0, #2, 26	; 0x80
    1308:	00006c91 	muleq	r0, r1, ip
    130c:	013a0409 	teqeq	sl, r9, lsl #8
    1310:	010e0000 	mrseq	r0, (UNDEF: 14)
    1314:	000005d6 	ldrdeq	r0, [r0], -r6
    1318:	05038401 	streq	r8, [r3, #-1025]	; 0xfffffbff
    131c:	00008501 	andeq	r8, r0, r1, lsl #10
	...
    1328:	00047500 	andeq	r7, r4, r0, lsl #10
    132c:	02ee0100 	rsceq	r0, lr, #0, 2
    1330:	fd170000 	ldc2	0, cr0, [r7, #-0]
    1334:	01000004 	tsteq	r0, r4
    1338:	ee150384 	cdp	3, 1, cr0, cr5, cr4, {4}
    133c:	b3000002 	movwlt	r0, #2
    1340:	ad000004 	stcge	0, cr0, [r0, #-16]
    1344:	17000004 	strne	r0, [r0, -r4]
    1348:	00000405 	andeq	r0, r0, r5, lsl #8
    134c:	24038401 	strcs	r8, [r3], #-1025	; 0xfffffbff
    1350:	000000ee 	andeq	r0, r0, lr, ror #1
    1354:	000004e5 	andeq	r0, r0, r5, ror #9
    1358:	000004df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    135c:	0005c817 	andeq	ip, r5, r7, lsl r8
    1360:	03840100 	orreq	r0, r4, #0, 2
    1364:	00024c37 	andeq	r4, r2, r7, lsr ip
    1368:	00051700 	andeq	r1, r5, r0, lsl #14
    136c:	00051100 	andeq	r1, r5, r0, lsl #2
    1370:	61760f00 	cmnvs	r6, r0, lsl #30
    1374:	03840100 	orreq	r0, r4, #0, 2
    1378:	0000e247 	andeq	lr, r0, r7, asr #4
    137c:	00054500 	andeq	r4, r5, r0, lsl #10
    1380:	00054300 	andeq	r4, r5, r0, lsl #6
    1384:	00001500 	andeq	r1, r0, r0, lsl #10
    1388:	055f0000 	ldrbeq	r0, [pc, #-0]	; 1390 <__HEAP_SIZE+0x390>
    138c:	01160000 	tsteq	r6, r0
    1390:	00030550 	andeq	r0, r3, r0, asr r5
    1394:	16000000 	strne	r0, [r0], -r0
    1398:	f3035101 	vrhadd.u8	d5, d3, d1
    139c:	01165001 	tsteq	r6, r1
    13a0:	01f30352 	mvnseq	r0, r2, asr r3
    13a4:	53011651 	movwpl	r1, #5713	; 0x1651
    13a8:	5201f303 	andpl	pc, r1, #201326592	; 0xc000000
    13ac:	04090000 	streq	r0, [r9], #-0
    13b0:	00000133 	andeq	r0, r0, r3, lsr r1
    13b4:	0504010e 	streq	r0, [r4, #-270]	; 0xfffffef2
    13b8:	7d010000 	stcvc	0, cr0, [r1, #-0]
    13bc:	85010503 	strhi	r0, [r1, #-1283]	; 0xfffffafd
	...
    13c8:	58000000 	stmdapl	r0, {}	; <UNPREDICTABLE>
    13cc:	01000005 	tsteq	r0, r5
    13d0:	00000374 	andeq	r0, r0, r4, ror r3
    13d4:	0005c817 	andeq	ip, r5, r7, lsl r8
    13d8:	037d0100 	cmneq	sp, #0, 2
    13dc:	00024c19 	andeq	r4, r2, r9, lsl ip
    13e0:	00059600 	andeq	r9, r5, r0, lsl #12
    13e4:	00059000 	andeq	r9, r5, r0
    13e8:	61760f00 	cmnvs	r6, r0, lsl #30
    13ec:	037d0100 	cmneq	sp, #0, 2
    13f0:	0000e229 	andeq	lr, r0, r9, lsr #4
    13f4:	0005c400 	andeq	ip, r5, r0, lsl #8
    13f8:	0005c200 	andeq	ip, r5, r0, lsl #4
    13fc:	04fd1300 	ldrbteq	r1, [sp], #768	; 0x300
    1400:	7f010000 	svcvc	0x00010000
    1404:	03740803 	cmneq	r4, #196608	; 0x30000
    1408:	91020000 	mrsls	r0, (UNDEF: 2)
    140c:	00001574 	andeq	r1, r0, r4, ror r5
    1410:	055f0000 	ldrbeq	r0, [pc, #-0]	; 1418 <__HEAP_SIZE+0x418>
    1414:	01160000 	tsteq	r6, r0
    1418:	49030550 	stmdbmi	r3, {r4, r6, r8, sl}
    141c:	1610001b 			; <UNDEFINED> instruction: 0x1610001b
    1420:	91025101 	tstls	r2, r1, lsl #2
    1424:	52011674 	andpl	r1, r1, #116, 12	; 0x7400000
    1428:	16ff0902 	ldrbtne	r0, [pc], r2, lsl #18
    142c:	f3035301 	vcgt.u8	d5, d3, d1
    1430:	00005001 	andeq	r5, r0, r1
    1434:	00013318 	andeq	r3, r1, r8, lsl r3
    1438:	00038400 	andeq	r8, r3, r0, lsl #8
    143c:	00301900 	eorseq	r1, r0, r0, lsl #18
    1440:	00000000 	andeq	r0, r0, r0
    1444:	05d7010e 	ldrbeq	r0, [r7, #270]	; 0x10e
    1448:	73010000 	movwvc	r0, #4096	; 0x1000
    144c:	85010503 	strhi	r0, [r1, #-1283]	; 0xfffffafd
	...
    1458:	d7000000 	strle	r0, [r0, -r0]
    145c:	01000005 	tsteq	r0, r5
    1460:	00000433 	andeq	r0, r0, r3, lsr r4
    1464:	0004fd17 	andeq	pc, r4, r7, lsl sp	; <UNPREDICTABLE>
    1468:	03730100 	cmneq	r3, #0, 2
    146c:	0002ee14 	andeq	lr, r2, r4, lsl lr
    1470:	00063900 	andeq	r3, r6, r0, lsl #18
    1474:	00063300 	andeq	r3, r6, r0, lsl #6
    1478:	04051700 	streq	r1, [r5], #-1792	; 0xfffff900
    147c:	73010000 	movwvc	r0, #4096	; 0x1000
    1480:	00ee2303 	rsceq	r2, lr, r3, lsl #6
    1484:	066b0000 	strbteq	r0, [fp], -r0
    1488:	06650000 	strbteq	r0, [r5], -r0
    148c:	c8100000 	ldmdagt	r0, {}	; <UNPREDICTABLE>
    1490:	01000005 	tsteq	r0, r5
    1494:	4c360373 	ldcmi	3, cr0, [r6], #-460	; 0xfffffe34
    1498:	02000002 	andeq	r0, r0, #2
    149c:	12117891 	andsne	r7, r1, #9502720	; 0x910000
    14a0:	01006176 	tsteq	r0, r6, ror r1
    14a4:	e20b0375 	and	r0, fp, #-738197503	; 0xd4000001
    14a8:	02000000 	andeq	r0, r0, #0
    14ac:	72146c91 	andsvc	r6, r4, #37120	; 0x9100
    14b0:	01007465 	tsteq	r0, r5, ror #8
    14b4:	8c0d0377 	stchi	3, cr0, [sp], {119}	; 0x77
    14b8:	99000000 	stmdbls	r0, {}	; <UNPREDICTABLE>
    14bc:	97000006 	strls	r0, [r0, -r6]
    14c0:	15000006 	strne	r0, [r0, #-6]
    14c4:	00000000 	andeq	r0, r0, r0
    14c8:	0000055f 	andeq	r0, r0, pc, asr r5
    14cc:	05500116 	ldrbeq	r0, [r0, #-278]	; 0xfffffeea
    14d0:	00000003 	andeq	r0, r0, r3
    14d4:	51011600 	tstpl	r1, r0, lsl #12
    14d8:	5001f303 	andpl	pc, r1, r3, lsl #6
    14dc:	03520116 	cmpeq	r2, #-2147483643	; 0x80000005
    14e0:	165101f3 			; <UNDEFINED> instruction: 0x165101f3
    14e4:	91035301 	tstls	r3, r1, lsl #6
    14e8:	02160668 	andseq	r0, r6, #104, 12	; 0x6800000
    14ec:	9102007d 	tstls	r2, sp, ror r0
    14f0:	0e00006c 	cdpeq	0, 0, cr0, cr0, cr12, {3}
    14f4:	00061101 	andeq	r1, r6, r1, lsl #2
    14f8:	03690100 	cmneq	r9, #0, 2
    14fc:	00850105 	addeq	r0, r5, r5, lsl #2
	...
    1508:	06ac0000 	strteq	r0, [ip], r0
    150c:	cc010000 	stcgt	0, cr0, [r1], {-0}
    1510:	17000004 	strne	r0, [r0, -r4]
    1514:	000004fd 	strdeq	r0, [r0], -sp
    1518:	13036901 	movwne	r6, #14593	; 0x3901
    151c:	000002ee 	andeq	r0, r0, lr, ror #5
    1520:	0000070e 	andeq	r0, r0, lr, lsl #14
    1524:	00000708 	andeq	r0, r0, r8, lsl #14
    1528:	0005c810 	andeq	ip, r5, r0, lsl r8
    152c:	03690100 	cmneq	r9, #0, 2
    1530:	00024c27 	andeq	r4, r2, r7, lsr #24
    1534:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    1538:	61761211 	cmnvs	r6, r1, lsl r2
    153c:	036b0100 	cmneq	fp, #0, 2
    1540:	0000e20b 	andeq	lr, r0, fp, lsl #4
    1544:	6c910200 	lfmvs	f0, 4, [r1], {0}
    1548:	74657214 	strbtvc	r7, [r5], #-532	; 0xfffffdec
    154c:	036d0100 	cmneq	sp, #0, 2
    1550:	00008c0d 	andeq	r8, r0, sp, lsl #24
    1554:	00073c00 	andeq	r3, r7, r0, lsl #24
    1558:	00073a00 	andeq	r3, r7, r0, lsl #20
    155c:	00001500 	andeq	r1, r0, r0, lsl #10
    1560:	055f0000 	ldrbeq	r0, [pc, #-0]	; 1568 <__HEAP_SIZE+0x568>
    1564:	01160000 	tsteq	r6, r0
    1568:	00030550 	andeq	r0, r3, r0, asr r5
    156c:	16000000 	strne	r0, [r0], -r0
    1570:	f3035101 	vrhadd.u8	d5, d3, d1
    1574:	01165001 	tsteq	r6, r1
    1578:	ff090252 			; <UNDEFINED> instruction: 0xff090252
    157c:	03530116 	cmpeq	r3, #-2147483643	; 0x80000005
    1580:	16065c91 			; <UNDEFINED> instruction: 0x16065c91
    1584:	02007d02 	andeq	r7, r0, #2, 26	; 0x80
    1588:	00006091 	muleq	r0, r1, r0
    158c:	05d9010e 	ldrbeq	r0, [r9, #270]	; 0x10e
    1590:	5e010000 	cdppl	0, 0, cr0, cr1, cr0, {0}
    1594:	85010503 	strhi	r0, [r1, #-1283]	; 0xfffffafd
    1598:	54000000 	strpl	r0, [r0], #-0
    159c:	8010001b 	andshi	r0, r0, fp, lsl r0
    15a0:	4f10001b 	svcmi	0x0010001b
    15a4:	01000007 	tsteq	r0, r7
    15a8:	0000055f 	andeq	r0, r0, pc, asr r5
    15ac:	0005c810 	andeq	ip, r5, r0, lsl r8
    15b0:	035e0100 	cmpeq	lr, #0, 2
    15b4:	00024c18 	andeq	r4, r2, r8, lsl ip
    15b8:	70910200 	addsvc	r0, r1, r0, lsl #4
    15bc:	61761211 	cmnvs	r6, r1, lsl r2
    15c0:	03600100 	cmneq	r0, #0, 2
    15c4:	0000e20b 	andeq	lr, r0, fp, lsl #4
    15c8:	64910200 	ldrvs	r0, [r1], #512	; 0x200
    15cc:	0004fd13 	andeq	pc, r4, r3, lsl sp	; <UNPREDICTABLE>
    15d0:	03620100 	cmneq	r2, #0, 2
    15d4:	00037408 	andeq	r7, r3, r8, lsl #8
    15d8:	60910200 	addsvs	r0, r1, r0, lsl #4
    15dc:	74657214 	strbtvc	r7, [r5], #-532	; 0xfffffdec
    15e0:	03630100 	cmneq	r3, #0, 2
    15e4:	00008c0d 	andeq	r8, r0, sp, lsl #24
    15e8:	0007ad00 	andeq	sl, r7, r0, lsl #26
    15ec:	0007ab00 	andeq	sl, r7, r0, lsl #22
    15f0:	1b701500 	blne	1c069f8 <__RAM_SIZE+0x1b069f8>
    15f4:	055f1000 	ldrbeq	r1, [pc, #-0]	; 15fc <__HEAP_SIZE+0x5fc>
    15f8:	01160000 	tsteq	r6, r0
    15fc:	49030550 	stmdbmi	r3, {r4, r6, r8, sl}
    1600:	1610001b 			; <UNDEFINED> instruction: 0x1610001b
    1604:	91025101 	tstls	r2, r1, lsl #2
    1608:	52011640 	andpl	r1, r1, #64, 12	; 0x4000000
    160c:	16ff0902 	ldrbtne	r0, [pc], r2, lsl #18
    1610:	91035301 	tstls	r3, r1, lsl #6
    1614:	02160650 	andseq	r0, r6, #80, 12	; 0x5000000
    1618:	9102007d 	tstls	r2, sp, ror r0
    161c:	1a000054 	bne	1774 <__HEAP_SIZE+0x774>
    1620:	000005d5 	ldrdeq	r0, [r0], -r5
    1624:	0c024101 	stfeqs	f4, [r2], {1}
    1628:	00008501 	andeq	r8, r0, r1, lsl #10
    162c:	0014c800 	andseq	ip, r4, r0, lsl #16
    1630:	001b4810 	andseq	r4, fp, r0, lsl r8
    1634:	0007c010 	andeq	ip, r7, r0, lsl r0
    1638:	0b7d0100 	bleq	1f41a40 <__RAM_SIZE+0x1e41a40>
    163c:	6f0f0000 	svcvs	0x000f0000
    1640:	01007475 	tsteq	r0, r5, ror r4
    1644:	06240241 	strteq	r0, [r4], -r1, asr #4
    1648:	01000001 	tsteq	r0, r1
    164c:	f9000008 			; <UNDEFINED> instruction: 0xf9000008
    1650:	17000007 	strne	r0, [r0, -r7]
    1654:	000004fd 	strdeq	r0, [r0], -sp
    1658:	2f024101 	svccs	0x00024101
    165c:	000002ee 	andeq	r0, r0, lr, ror #5
    1660:	0000083f 	andeq	r0, r0, pc, lsr r8
    1664:	00000835 	andeq	r0, r0, r5, lsr r8
    1668:	00063b17 	andeq	r3, r6, r7, lsl fp
    166c:	02410100 	subeq	r0, r1, #0, 2
    1670:	0000fa44 	andeq	pc, r0, r4, asr #20
    1674:	00089300 	andeq	r9, r8, r0, lsl #6
    1678:	00088100 	andeq	r8, r8, r0, lsl #2
    167c:	05c81700 	strbeq	r1, [r8, #1792]	; 0x700
    1680:	41010000 	mrsmi	r0, (UNDEF: 1)
    1684:	024c5802 	subeq	r5, ip, #131072	; 0x20000
    1688:	09050000 	stmdbeq	r5, {}	; <UNPREDICTABLE>
    168c:	09010000 	stmdbeq	r1, {}	; <UNPREDICTABLE>
    1690:	761b0000 	ldrvc	r0, [fp], -r0
    1694:	41010061 	tstmi	r1, r1, rrx
    1698:	00e26802 	rsceq	r6, r2, r2, lsl #16
    169c:	91020000 	mrsls	r0, (UNDEF: 2)
    16a0:	06261c00 	strteq	r1, [r6], -r0, lsl #24
    16a4:	43010000 	movwmi	r0, #4096	; 0x1000
    16a8:	00301002 	eorseq	r1, r0, r2
    16ac:	093b0000 	ldmdbeq	fp!, {}	; <UNPREDICTABLE>
    16b0:	09230000 	stmdbeq	r3!, {}	; <UNPREDICTABLE>
    16b4:	f81c0000 			; <UNDEFINED> instruction: 0xf81c0000
    16b8:	01000006 	tsteq	r0, r6
    16bc:	30170243 	andscc	r0, r7, r3, asr #4
    16c0:	df000000 	svcle	0x00000000
    16c4:	c9000009 	stmdbgt	r0, {r0, r3}
    16c8:	1c000009 	stcne	0, cr0, [r0], {9}
    16cc:	00000732 	andeq	r0, r0, r2, lsr r7
    16d0:	1e024301 	cdpne	3, 0, cr4, cr2, cr1, {0}
    16d4:	00000030 	andeq	r0, r0, r0, lsr r0
    16d8:	00000a87 	andeq	r0, r0, r7, lsl #21
    16dc:	00000a69 	andeq	r0, r0, r9, ror #20
    16e0:	01006e14 	tsteq	r0, r4, lsl lr
    16e4:	30290243 	eorcc	r0, r9, r3, asr #4
    16e8:	45000000 	strmi	r0, [r0, #-0]
    16ec:	3700000b 	strcc	r0, [r0, -fp]
    16f0:	1400000b 	strne	r0, [r0], #-11
    16f4:	00786469 	rsbseq	r6, r8, r9, ror #8
    16f8:	0a024401 	beq	92704 <__HEAP_SIZE+0x91704>
    16fc:	000000ee 	andeq	r0, r0, lr, ror #1
    1700:	00000c01 	andeq	r0, r0, r1, lsl #24
    1704:	00000ba1 	andeq	r0, r0, r1, lsr #23
    1708:	0015a41d 	andseq	sl, r5, sp, lsl r4
    170c:	0015c410 	andseq	ip, r5, r0, lsl r4
    1710:	00066310 	andeq	r6, r6, r0, lsl r3
    1714:	00771200 	rsbseq	r1, r7, r0, lsl #4
    1718:	11026c01 	tstne	r2, r1, lsl #24
    171c:	0000008c 	andeq	r0, r0, ip, lsl #1
    1720:	1d005001 	stcne	0, cr5, [r0, #-4]
    1724:	100015ec 	andne	r1, r0, ip, ror #11
    1728:	10001600 	andne	r1, r0, r0, lsl #12
    172c:	00000680 	andeq	r0, r0, r0, lsl #13
    1730:	0006f213 	andeq	pc, r6, r3, lsl r2	; <UNPREDICTABLE>
    1734:	02800100 	addeq	r0, r0, #0, 2
    1738:	00008c13 	andeq	r8, r0, r3, lsl ip
    173c:	00530100 	subseq	r0, r3, r0, lsl #2
    1740:	00170e1d 	andseq	r0, r7, sp, lsl lr
    1744:	0018fa10 	andseq	pc, r8, r0, lsl sl	; <UNPREDICTABLE>
    1748:	00087310 	andeq	r7, r8, r0, lsl r3
    174c:	085d1c00 	ldmdaeq	sp, {sl, fp, ip}^
    1750:	b4010000 	strlt	r0, [r1], #-0
    1754:	00301602 	eorseq	r1, r0, r2, lsl #12
    1758:	0e370000 	cdpeq	0, 3, cr0, cr7, cr0, {0}
    175c:	0e1b0000 	cdpeq	0, 1, cr0, cr11, cr0, {0}
    1760:	481e0000 	ldmdami	lr, {}	; <UNPREDICTABLE>
    1764:	e9000001 	stmdb	r0, {r0}
    1768:	1f000006 	svcne	0x00000006
    176c:	0000009e 	muleq	r0, lr, r0
    1770:	1d02d601 	stcne	6, cr13, [r2, #-4]
    1774:	0000006d 	andeq	r0, r0, sp, rrx
    1778:	00182415 	andseq	r2, r8, r5, lsl r4
    177c:	00137c10 	andseq	r7, r3, r0, lsl ip
    1780:	50011600 	andpl	r1, r1, r0, lsl #12
    1784:	16007702 	strne	r7, [r0], -r2, lsl #14
    1788:	78025101 	stmdavc	r2, {r0, r8, ip, lr}
    178c:	52011600 	andpl	r1, r1, #0, 12
    1790:	16007402 	strne	r7, [r0], -r2, lsl #8
    1794:	76025301 	strvc	r5, [r2], -r1, lsl #6
    1798:	7d021600 	stcvc	6, cr1, [r2, #-0]
    179c:	007b0218 	rsbseq	r0, fp, r8, lsl r2
    17a0:	1c7d0216 	lfmne	f0, 2, [sp], #-88	; 0xffffffa8
    17a4:	00007502 	andeq	r7, r0, r2, lsl #10
    17a8:	18301d00 	ldmdane	r0!, {r8, sl, fp, ip}
    17ac:	18601000 	stmdane	r0!, {ip}^
    17b0:	073e1000 	ldreq	r1, [lr, -r0]!
    17b4:	9e130000 	cdpls	0, 1, cr0, cr3, cr0, {0}
    17b8:	01000000 	mrseq	r0, (UNDEF: 0)
    17bc:	5a1802db 	bpl	602330 <__RAM_SIZE+0x502330>
    17c0:	01000000 	mrseq	r0, (UNDEF: 0)
    17c4:	185e1552 	ldmdane	lr, {r1, r4, r6, r8, sl, ip}^
    17c8:	150f1000 	strne	r1, [pc, #-0]	; 17d0 <__HEAP_SIZE+0x7d0>
    17cc:	01160000 	tsteq	r6, r0
    17d0:	00770250 	rsbseq	r0, r7, r0, asr r2
    17d4:	02510116 	subseq	r0, r1, #-2147483643	; 0x80000005
    17d8:	01160078 	tsteq	r6, r8, ror r0
    17dc:	00740252 	rsbseq	r0, r4, r2, asr r2
    17e0:	02530116 	subseq	r0, r3, #-2147483643	; 0x80000005
    17e4:	02160076 	andseq	r0, r6, #118	; 0x76
    17e8:	7b020c7d 	blvc	849e4 <__HEAP_SIZE+0x839e4>
    17ec:	7d021600 	stcvc	6, cr1, [r2, #-0]
    17f0:	48910310 	ldmmi	r1, {r4, r8, r9}
    17f4:	7d021606 	stcvc	6, cr1, [r2, #-24]	; 0xffffffe8
    17f8:	00750214 	rsbseq	r0, r5, r4, lsl r2
    17fc:	301e0000 	andscc	r0, lr, r0
    1800:	95000001 	strls	r0, [r0, #-1]
    1804:	1c000007 	stcne	0, cr0, [r0], {7}
    1808:	0000009e 	muleq	r0, lr, r0
    180c:	1702df01 	strne	sp, [r2, -r1, lsl #30]
    1810:	0000008c 	andeq	r0, r0, ip, lsl #1
    1814:	00000ee8 	andeq	r0, r0, r8, ror #29
    1818:	00000ee6 	andeq	r0, r0, r6, ror #29
    181c:	0017de15 	andseq	sp, r7, r5, lsl lr
    1820:	00150f10 	andseq	r0, r5, r0, lsl pc
    1824:	50011600 	andpl	r1, r1, r0, lsl #12
    1828:	16007702 	strne	r7, [r0], -r2, lsl #14
    182c:	78025101 	stmdavc	r2, {r0, r8, ip, lr}
    1830:	52011600 	andpl	r1, r1, #0, 12
    1834:	16007402 	strne	r7, [r0], -r2, lsl #8
    1838:	76025301 	strvc	r5, [r2], -r1, lsl #6
    183c:	7d021600 	stcvc	6, cr1, [r2, #-0]
    1840:	007b020c 	rsbseq	r0, fp, ip, lsl #4
    1844:	107d0216 	rsbsne	r0, sp, r6, lsl r2
    1848:	06489103 	strbeq	r9, [r8], -r3, lsl #2
    184c:	147d0216 	ldrbtne	r0, [sp], #-534	; 0xfffffdea
    1850:	00007502 	andeq	r7, r0, r2, lsl #10
    1854:	01181e00 	tsteq	r8, r0, lsl #28
    1858:	07f20000 	ldrbeq	r0, [r2, r0]!
    185c:	9e1c0000 	cdpls	0, 1, cr0, cr12, cr0, {0}
    1860:	01000000 	mrseq	r0, (UNDEF: 0)
    1864:	9d2002ee 	sfmls	f0, 4, [r0, #-952]!	; 0xfffffc48
    1868:	ff000000 			; <UNDEFINED> instruction: 0xff000000
    186c:	fb00000e 	blx	18ae <__HEAP_SIZE+0x8ae>
    1870:	1500000e 	strne	r0, [r0, #-14]
    1874:	10001788 	andne	r1, r0, r8, lsl #15
    1878:	0000150f 	andeq	r1, r0, pc, lsl #10
    187c:	02500116 	subseq	r0, r0, #-2147483643	; 0x80000005
    1880:	01160077 	tsteq	r6, r7, ror r0
    1884:	00780251 	rsbseq	r0, r8, r1, asr r2
    1888:	02520116 	subseq	r0, r2, #-2147483643	; 0x80000005
    188c:	01160074 	tsteq	r6, r4, ror r0
    1890:	00760253 	rsbseq	r0, r6, r3, asr r2
    1894:	047d0216 	ldrbteq	r0, [sp], #-534	; 0xfffffdea
    1898:	02163001 	andseq	r3, r6, #1
    189c:	7b020c7d 	blvc	84a98 <__HEAP_SIZE+0x83a98>
    18a0:	7d021600 	stcvc	6, cr1, [r2, #-0]
    18a4:	48910310 	ldmmi	r1, {r4, r8, r9}
    18a8:	7d021606 	stcvc	6, cr1, [r2, #-24]	; 0xffffffe8
    18ac:	00750214 	rsbseq	r0, r5, r4, lsl r2
    18b0:	b2200000 	eorlt	r0, r0, #0
    18b4:	7c100018 	ldcvc	0, cr0, [r0], {24}
    18b8:	34000013 	strcc	r0, [r0], #-19	; 0xffffffed
    18bc:	16000008 	strne	r0, [r0], -r8
    18c0:	77025001 	strvc	r5, [r2, -r1]
    18c4:	51011600 	tstpl	r1, r0, lsl #12
    18c8:	16007802 	strne	r7, [r0], -r2, lsl #16
    18cc:	74025201 	strvc	r5, [r2], #-513	; 0xfffffdff
    18d0:	53011600 	movwpl	r1, #5632	; 0x1600
    18d4:	16007602 	strne	r7, [r0], -r2, lsl #12
    18d8:	01087d02 	tsteq	r8, r2, lsl #26
    18dc:	7d021630 	stcvc	6, cr1, [r2, #-192]	; 0xffffff40
    18e0:	007b0218 	rsbseq	r0, fp, r8, lsl r2
    18e4:	1c7d0216 	lfmne	f0, 2, [sp], #-88	; 0xffffffa8
    18e8:	06489103 	strbeq	r9, [r8], -r3, lsl #2
    18ec:	207d0216 	rsbscs	r0, sp, r6, lsl r2
    18f0:	00007502 	andeq	r7, r0, r2, lsl #10
    18f4:	0018dc15 	andseq	sp, r8, r5, lsl ip
    18f8:	00150f10 	andseq	r0, r5, r0, lsl pc
    18fc:	50011600 	andpl	r1, r1, r0, lsl #12
    1900:	16007702 	strne	r7, [r0], -r2, lsl #14
    1904:	78025101 	stmdavc	r2, {r0, r8, ip, lr}
    1908:	52011600 	andpl	r1, r1, #0, 12
    190c:	16007402 	strne	r7, [r0], -r2, lsl #8
    1910:	76025301 	strvc	r5, [r2], -r1, lsl #6
    1914:	7d021600 	stcvc	6, cr1, [r2, #-0]
    1918:	16300104 	ldrtne	r0, [r0], -r4, lsl #2
    191c:	020c7d02 	andeq	r7, ip, #2, 26	; 0x80
    1920:	0216007b 	andseq	r0, r6, #123	; 0x7b
    1924:	9103107d 	tstls	r3, sp, ror r0
    1928:	02160648 	andseq	r0, r6, #72, 12	; 0x4800000
    192c:	7502147d 	strvc	r1, [r2, #-1149]	; 0xfffffb83
    1930:	1e000000 	cdpne	0, 0, cr0, cr0, cr0, {0}
    1934:	00000100 	andeq	r0, r0, r0, lsl #2
    1938:	000008ec 	andeq	r0, r0, ip, ror #17
    193c:	01006c14 	tsteq	r0, r4, lsl ip
    1940:	30160309 	andscc	r0, r6, r9, lsl #6
    1944:	32000000 	andcc	r0, r0, #0
    1948:	1e00000f 	cdpne	0, 0, cr0, cr0, cr15, {0}
    194c:	2100000f 	tstcs	r0, pc
    1950:	100019a6 	andne	r1, r0, r6, lsr #19
    1954:	000008ab 	andeq	r0, r0, fp, lsr #17
    1958:	02510116 	subseq	r0, r1, #-2147483643	; 0x80000005
    195c:	01160078 	tsteq	r6, r8, ror r0
    1960:	00740252 	rsbseq	r0, r4, r2, asr r2
    1964:	02530116 	subseq	r0, r3, #-2147483643	; 0x80000005
    1968:	21000076 	tstcs	r0, r6, ror r0
    196c:	100019be 			; <UNDEFINED> instruction: 0x100019be
    1970:	000008cd 	andeq	r0, r0, sp, asr #17
    1974:	02500116 	subseq	r0, r0, #-2147483643	; 0x80000005
    1978:	01162008 	tsteq	r6, r8
    197c:	00780251 	rsbseq	r0, r8, r1, asr r2
    1980:	02520116 	subseq	r0, r2, #-2147483643	; 0x80000005
    1984:	01167f7a 	tsteq	r6, sl, ror pc
    1988:	00760253 	rsbseq	r0, r6, r3, asr r2
    198c:	19ea2200 	stmibne	sl!, {r9, sp}^
    1990:	01161000 	tsteq	r6, r0
    1994:	20080250 	andcs	r0, r8, r0, asr r2
    1998:	02510116 	subseq	r0, r1, #-2147483643	; 0x80000005
    199c:	01160078 	tsteq	r6, r8, ror r0
    19a0:	7f750252 	svcvc	0x00750252
    19a4:	02530116 	subseq	r0, r3, #-2147483643	; 0x80000005
    19a8:	00000076 	andeq	r0, r0, r6, ror r0
    19ac:	0019fa1d 	andseq	pc, r9, sp, lsl sl	; <UNPREDICTABLE>
    19b0:	001ac410 	andseq	ip, sl, r0, lsl r4
    19b4:	0009b110 	andeq	fp, r9, r0, lsl r1
    19b8:	00701400 	rsbseq	r1, r0, r0, lsl #8
    19bc:	15031d01 	strne	r1, [r3, #-3329]	; 0xfffff2ff
    19c0:	0000024c 	andeq	r0, r0, ip, asr #4
    19c4:	00000fae 	andeq	r0, r0, lr, lsr #31
    19c8:	00000faa 	andeq	r0, r0, sl, lsr #31
    19cc:	01006c14 	tsteq	r0, r4, lsl ip
    19d0:	3016031e 	andscc	r0, r6, lr, lsl r3
    19d4:	e2000000 	and	r0, r0, #0
    19d8:	cc00000f 	stcgt	0, cr0, [r0], {15}
    19dc:	2300000f 	movwcs	r0, #15
    19e0:	00001964 	andeq	r1, r0, r4, ror #18
    19e4:	10001a12 	andne	r1, r0, r2, lsl sl
    19e8:	10001a28 	andne	r1, r0, r8, lsr #20
    19ec:	1a031e01 	bne	c91f8 <__HEAP_SIZE+0xc81f8>
    19f0:	00000954 	andeq	r0, r0, r4, asr r9
    19f4:	00198224 	andseq	r8, r9, r4, lsr #4
    19f8:	00106b00 	andseq	r6, r0, r0, lsl #22
    19fc:	00106500 	andseq	r6, r0, r0, lsl #10
    1a00:	19762500 	ldmdbne	r6!, {r8, sl, sp}^
    1a04:	8e260000 	cdphi	0, 2, cr0, cr6, cr0, {0}
    1a08:	96000019 			; <UNDEFINED> instruction: 0x96000019
    1a0c:	94000010 	strls	r0, [r0], #-16
    1a10:	00000010 	andeq	r0, r0, r0, lsl r0
    1a14:	001a6021 	andseq	r6, sl, r1, lsr #32
    1a18:	00097610 	andeq	r7, r9, r0, lsl r6
    1a1c:	50011600 	andpl	r1, r1, r0, lsl #12
    1a20:	16200802 	strtne	r0, [r0], -r2, lsl #16
    1a24:	78025101 	stmdavc	r2, {r0, r8, ip, lr}
    1a28:	52011600 	andpl	r1, r1, #0, 12
    1a2c:	167f7902 	ldrbtne	r7, [pc], -r2, lsl #18
    1a30:	76025301 	strvc	r5, [r2], -r1, lsl #6
    1a34:	82210000 	eorhi	r0, r1, #0
    1a38:	9210001a 	andsls	r0, r0, #26
    1a3c:	16000009 	strne	r0, [r0], -r9
    1a40:	78025101 	stmdavc	r2, {r0, r8, ip, lr}
    1a44:	52011600 	andpl	r1, r1, #0, 12
    1a48:	167f7502 	ldrbtne	r7, [pc], -r2, lsl #10
    1a4c:	7b025301 	blvc	96658 <__HEAP_SIZE+0x95658>
    1a50:	b4220000 	strtlt	r0, [r2], #-0
    1a54:	1610001a 			; <UNDEFINED> instruction: 0x1610001a
    1a58:	08025001 	stmdaeq	r2, {r0, ip, lr}
    1a5c:	51011620 	tstpl	r1, r0, lsr #12
    1a60:	16007802 	strne	r7, [r0], -r2, lsl #16
    1a64:	75025201 	strvc	r5, [r2, #-513]	; 0xfffffdff
    1a68:	5301167f 	movwpl	r1, #5759	; 0x167f
    1a6c:	00007602 	andeq	r7, r0, r2, lsl #12
    1a70:	1ac41d00 	bne	ff108e78 <__StackTop+0xc7008e78>
    1a74:	1afa1000 	bne	ffe85a7c <__StackTop+0xc7d85a7c>
    1a78:	0a161000 	beq	585a80 <__RAM_SIZE+0x485a80>
    1a7c:	2c1c0000 	ldccs	0, cr0, [ip], {-0}
    1a80:	01000007 	tsteq	r0, r7
    1a84:	8414033a 	ldrhi	r0, [r4], #-826	; 0xfffffcc6
    1a88:	ab00000b 	blge	1abc <__HEAP_SIZE+0xabc>
    1a8c:	a9000010 	stmdbge	r0, {r4}
    1a90:	15000010 	strne	r0, [r0, #-16]
    1a94:	10001af0 	strdne	r1, [r0], -r0
    1a98:	0000150f 	andeq	r1, r0, pc, lsl #10
    1a9c:	02500116 	subseq	r0, r0, #-2147483643	; 0x80000005
    1aa0:	01160077 	tsteq	r6, r7, ror r0
    1aa4:	00780251 	rsbseq	r0, r8, r1, asr r2
    1aa8:	02520116 	subseq	r0, r2, #-2147483643	; 0x80000005
    1aac:	01160074 	tsteq	r6, r4, ror r0
    1ab0:	00760253 	rsbseq	r0, r6, r3, asr r2
    1ab4:	047d0216 	ldrbteq	r0, [sp], #-534	; 0xfffffdea
    1ab8:	02163001 	andseq	r3, r6, #1
    1abc:	4001087d 	andmi	r0, r1, sp, ror r8
    1ac0:	0c7d0216 	lfmeq	f0, 2, [sp], #-88	; 0xffffffa8
    1ac4:	16007b02 	strne	r7, [r0], -r2, lsl #22
    1ac8:	01107d02 	tsteq	r0, r2, lsl #26
    1acc:	7d021638 	stcvc	6, cr1, [r2, #-224]	; 0xffffff20
    1ad0:	00750214 	rsbseq	r0, r5, r4, lsl r2
    1ad4:	46270000 	strtmi	r0, [r7], -r0
    1ad8:	28000019 	stmdacs	r0, {r0, r3, r4}
    1adc:	03100015 	tsteq	r0, #21
    1ae0:	00152800 	andseq	r2, r5, r0, lsl #16
    1ae4:	00152e10 	andseq	r2, r5, r0, lsl lr
    1ae8:	02680110 	rsbeq	r0, r8, #16, 2
    1aec:	000a3f09 	andeq	r3, sl, r9, lsl #30
    1af0:	19582400 	ldmdbne	r8, {sl, sp}^
    1af4:	10c10000 	sbcne	r0, r1, r0
    1af8:	10bf0000 	adcsne	r0, pc, r0
    1afc:	27000000 	strcs	r0, [r0, -r0]
    1b00:	00001946 	andeq	r1, r0, r6, asr #18
    1b04:	100015ce 	andne	r1, r0, lr, asr #11
    1b08:	15ce0000 	strbne	r0, [lr]
    1b0c:	15d41000 	ldrbne	r1, [r4]
    1b10:	7c011000 	stcvc	0, cr1, [r1], {-0}
    1b14:	0a680b02 	beq	1a04724 <__RAM_SIZE+0x1904724>
    1b18:	58240000 	stmdapl	r4!, {}	; <UNPREDICTABLE>
    1b1c:	d6000019 			; <UNDEFINED> instruction: 0xd6000019
    1b20:	d4000010 	strle	r0, [r0], #-16
    1b24:	00000010 	andeq	r0, r0, r0, lsl r0
    1b28:	0014f628 	andseq	pc, r4, r8, lsr #12
    1b2c:	00770210 	rsbseq	r0, r7, r0, lsl r2
    1b30:	00000a87 	andeq	r0, r0, r7, lsl #21
    1b34:	02510116 	subseq	r0, r1, #-2147483643	; 0x80000005
    1b38:	01160078 	tsteq	r6, r8, ror r0
    1b3c:	00740252 	rsbseq	r0, r4, r2, asr r2
    1b40:	02530116 	subseq	r0, r3, #-2147483643	; 0x80000005
    1b44:	20000076 	andcs	r0, r0, r6, ror r0
    1b48:	100015a0 	andne	r1, r0, r0, lsr #11
    1b4c:	000018d8 	ldrdeq	r1, [r0], -r8
    1b50:	00000a9b 	muleq	r0, fp, sl
    1b54:	02500116 	subseq	r0, r0, #-2147483643	; 0x80000005
    1b58:	20005491 	mulcs	r0, r1, r4
    1b5c:	100015e8 	andne	r1, r0, r8, ror #11
    1b60:	000018d8 	ldrdeq	r1, [r0], -r8
    1b64:	00000aaf 	andeq	r0, r0, pc, lsr #21
    1b68:	02500116 	subseq	r0, r0, #-2147483643	; 0x80000005
    1b6c:	20005491 	mulcs	r0, r1, r4
    1b70:	1000192a 	andne	r1, r0, sl, lsr #18
    1b74:	00000fa8 	andeq	r0, r0, r8, lsr #31
    1b78:	00000aeb 	andeq	r0, r0, fp, ror #21
    1b7c:	02500116 	subseq	r0, r0, #-2147483643	; 0x80000005
    1b80:	01160077 	tsteq	r6, r7, ror r0
    1b84:	00780251 	rsbseq	r0, r8, r1, asr r2
    1b88:	02520116 	subseq	r0, r2, #-2147483643	; 0x80000005
    1b8c:	01160074 	tsteq	r6, r4, ror r0
    1b90:	00760253 	rsbseq	r0, r6, r3, asr r2
    1b94:	087d0216 	ldmdaeq	sp!, {r1, r2, r4, r9}^
    1b98:	16007b02 	strne	r7, [r0], -r2, lsl #22
    1b9c:	030c7d02 	movweq	r7, #52482	; 0xcd02
    1ba0:	16064891 			; <UNDEFINED> instruction: 0x16064891
    1ba4:	02107d02 	andseq	r7, r0, #2, 26	; 0x80
    1ba8:	20000075 	andcs	r0, r0, r5, ror r0
    1bac:	1000197e 	andne	r1, r0, lr, ror r9
    1bb0:	00000b89 	andeq	r0, r0, r9, lsl #23
    1bb4:	00000b27 	andeq	r0, r0, r7, lsr #22
    1bb8:	02500116 	subseq	r0, r0, #-2147483643	; 0x80000005
    1bbc:	01160077 	tsteq	r6, r7, ror r0
    1bc0:	00780251 	rsbseq	r0, r8, r1, asr r2
    1bc4:	02520116 	subseq	r0, r2, #-2147483643	; 0x80000005
    1bc8:	01160074 	tsteq	r6, r4, ror r0
    1bcc:	00760253 	rsbseq	r0, r6, r3, asr r2
    1bd0:	087d0216 	ldmdaeq	sp!, {r1, r2, r4, r9}^
    1bd4:	16007b02 	strne	r7, [r0], -r2, lsl #22
    1bd8:	030c7d02 	movweq	r7, #52482	; 0xcd02
    1bdc:	16064891 			; <UNDEFINED> instruction: 0x16064891
    1be0:	02107d02 	andseq	r7, r0, #2, 26	; 0x80
    1be4:	21000075 	tstcs	r0, r5, ror r0
    1be8:	10001b06 	andne	r1, r0, r6, lsl #22
    1bec:	00000b49 	andeq	r0, r0, r9, asr #22
    1bf0:	02500116 	subseq	r0, r0, #-2147483643	; 0x80000005
    1bf4:	01162508 	tsteq	r6, r8, lsl #10
    1bf8:	00780251 	rsbseq	r0, r8, r1, asr r2
    1bfc:	02520116 	subseq	r0, r2, #-2147483643	; 0x80000005
    1c00:	01160074 	tsteq	r6, r4, ror r0
    1c04:	00760253 	rsbseq	r0, r6, r3, asr r2
    1c08:	1b1a2100 	blne	68a010 <__RAM_SIZE+0x58a010>
    1c0c:	0b651000 	bleq	1945c14 <__RAM_SIZE+0x1845c14>
    1c10:	01160000 	tsteq	r6, r0
    1c14:	00780251 	rsbseq	r0, r8, r1, asr r2
    1c18:	02520116 	subseq	r0, r2, #-2147483643	; 0x80000005
    1c1c:	01160074 	tsteq	r6, r4, ror r0
    1c20:	00760253 	rsbseq	r0, r6, r3, asr r2
    1c24:	1b3a2200 	blne	e8a42c <__RAM_SIZE+0xd8a42c>
    1c28:	01161000 	tsteq	r6, r0
    1c2c:	16300150 			; <UNDEFINED> instruction: 0x16300150
    1c30:	78025101 	stmdavc	r2, {r0, r8, ip, lr}
    1c34:	53011600 	movwpl	r1, #5632	; 0x1600
    1c38:	00007602 	andeq	r7, r0, r2, lsl #12
    1c3c:	02010200 	andeq	r0, r1, #0, 4
    1c40:	00000665 	andeq	r0, r0, r5, ror #12
    1c44:	000b7d03 	andeq	r7, fp, r3, lsl #26
    1c48:	05291a00 	streq	r1, [r9, #-2560]!	; 0xfffff600
    1c4c:	d3010000 	movwle	r0, #4096	; 0x1000
    1c50:	ee010f01 	cdp	15, 0, cr0, cr1, cr1, {0}
    1c54:	40000000 	andmi	r0, r0, r0
    1c58:	2a10000d 	bcs	401c94 <__RAM_SIZE+0x301c94>
    1c5c:	e9100011 	ldmdb	r0, {r0, r4}
    1c60:	01000010 	tsteq	r0, r0, lsl r0
    1c64:	00000fa3 	andeq	r0, r0, r3, lsr #31
    1c68:	74756f0f 	ldrbtvc	r6, [r5], #-3855	; 0xfffff0f1
    1c6c:	01d30100 	bicseq	r0, r3, r0, lsl #2
    1c70:	00010622 	andeq	r0, r1, r2, lsr #12
    1c74:	00114b00 	andseq	r4, r1, r0, lsl #22
    1c78:	00114700 	andseq	r4, r1, r0, lsl #14
    1c7c:	04fd1700 	ldrbteq	r1, [sp], #1792	; 0x700
    1c80:	d3010000 	movwle	r0, #4096	; 0x1000
    1c84:	02ee2d01 	rsceq	r2, lr, #1, 26	; 0x40
    1c88:	116d0000 	cmnne	sp, r0
    1c8c:	11690000 	cmnne	r9, r0
    1c90:	690f0000 	stmdbvs	pc, {}	; <UNPREDICTABLE>
    1c94:	01007864 	tsteq	r0, r4, ror #16
    1c98:	ee3c01d3 	mrc	1, 1, r0, cr12, cr3, {6}
    1c9c:	a1000000 	mrsge	r0, (UNDEF: 0)
    1ca0:	8b000011 	blhi	1cec <__HEAP_SIZE+0xcec>
    1ca4:	17000011 	smladne	r0, r1, r0, r0
    1ca8:	0000063b 	andeq	r0, r0, fp, lsr r6
    1cac:	4801d301 	stmdami	r1, {r0, r8, r9, ip, lr, pc}
    1cb0:	000000ee 	andeq	r0, r0, lr, ror #1
    1cb4:	00001226 	andeq	r1, r0, r6, lsr #4
    1cb8:	00001222 	andeq	r1, r0, r2, lsr #4
    1cbc:	00009e17 	andeq	r9, r0, r7, lsl lr
    1cc0:	01d30100 	bicseq	r0, r3, r0, lsl #2
    1cc4:	00002957 	andeq	r2, r0, r7, asr r9
    1cc8:	00125000 	andseq	r5, r2, r0
    1ccc:	00124400 	andseq	r4, r2, r0, lsl #8
    1cd0:	06f21700 	ldrbteq	r1, [r2], r0, lsl #14
    1cd4:	d3010000 	movwle	r0, #4096	; 0x1000
    1cd8:	00306b01 	eorseq	r6, r0, r1, lsl #22
    1cdc:	12af0000 	adcne	r0, pc, #0
    1ce0:	12a30000 	adcne	r0, r3, #0
    1ce4:	f8170000 			; <UNDEFINED> instruction: 0xf8170000
    1ce8:	01000006 	tsteq	r0, r6
    1cec:	307e01d3 	ldrsbtcc	r0, [lr], #-19	; 0xffffffed
    1cf0:	01000000 	mrseq	r0, (UNDEF: 0)
    1cf4:	fd000013 	stc2	0, cr0, [r0, #-76]	; 0xffffffb4
    1cf8:	17000012 	smladne	r0, r2, r0, r0
    1cfc:	00000626 	andeq	r0, r0, r6, lsr #12
    1d00:	9201d301 	andls	sp, r1, #67108864	; 0x4000000
    1d04:	00000030 	andeq	r0, r0, r0, lsr r0
    1d08:	00001329 	andeq	r1, r0, r9, lsr #6
    1d0c:	00001321 	andeq	r1, r0, r1, lsr #6
    1d10:	00058d1c 	andeq	r8, r5, ip, lsl sp
    1d14:	01db0100 	bicseq	r0, fp, r0, lsl #2
    1d18:	000b840e 	andeq	r8, fp, lr, lsl #8
    1d1c:	00136400 	andseq	r6, r3, r0, lsl #8
    1d20:	00136000 	andseq	r6, r3, r0
    1d24:	01082900 	tsteq	r8, r0, lsl #18
    1d28:	860301e7 	strhi	r0, [r3], -r7, ror #3
    1d2c:	2a00000c 	bcs	1d64 <__HEAP_SIZE+0xd64>
    1d30:	e8010055 	stmda	r1, {r0, r2, r4, r6}
    1d34:	00a20e01 	adceq	r0, r2, r1, lsl #28
    1d38:	462a0000 	strtmi	r0, [sl], -r0
    1d3c:	01e90100 	mvneq	r0, r0, lsl #2
    1d40:	0000290e 	andeq	r2, r0, lr, lsl #18
    1d44:	801c0000 	andshi	r0, ip, r0
    1d48:	01000006 	tsteq	r0, r6
    1d4c:	650501ea 	strvs	r0, [r5, #-490]	; 0xfffffe16
    1d50:	a800000c 	stmdage	r0, {r2, r3}
    1d54:	a4000013 	strge	r0, [r0], #-19	; 0xffffffed
    1d58:	1c000013 	stcne	0, cr0, [r0], {19}
    1d5c:	000004df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    1d60:	0701ed01 	streq	lr, [r1, -r1, lsl #26]
    1d64:	00000085 	andeq	r0, r0, r5, lsl #1
    1d68:	000013e0 	andeq	r1, r0, r0, ror #7
    1d6c:	000013d4 	ldrdeq	r1, [r0], -r4
    1d70:	0004f11c 	andeq	pc, r4, ip, lsl r1	; <UNPREDICTABLE>
    1d74:	01f00100 	mvnseq	r0, r0, lsl #2
    1d78:	00008507 	andeq	r8, r0, r7, lsl #10
    1d7c:	00143d00 	andseq	r3, r4, r0, lsl #26
    1d80:	00143300 	andseq	r3, r4, r0, lsl #6
    1d84:	007a1400 	rsbseq	r1, sl, r0, lsl #8
    1d88:	1001f301 	andne	pc, r1, r1, lsl #6
    1d8c:	00000fa3 	andeq	r0, r0, r3, lsr #31
    1d90:	0000147f 	andeq	r1, r0, pc, ror r4
    1d94:	0000147d 	andeq	r1, r0, sp, ror r4
    1d98:	00327a14 	eorseq	r7, r2, r4, lsl sl
    1d9c:	1001f401 	andne	pc, r1, r1, lsl #8
    1da0:	00000fa3 	andeq	r0, r0, r3, lsr #31
    1da4:	0000149d 	muleq	r0, sp, r4
    1da8:	00001497 	muleq	r0, r7, r4
    1dac:	0005131c 	andeq	r1, r5, ip, lsl r3
    1db0:	01ff0100 	mvnseq	r0, r0, lsl #2
    1db4:	00003010 	andeq	r3, r0, r0, lsl r0
    1db8:	0014db00 	andseq	sp, r4, r0, lsl #22
    1dbc:	0014cf00 	andseq	ip, r4, r0, lsl #30
    1dc0:	06f71c00 	ldrbteq	r1, [r7], r0, lsl #24
    1dc4:	19010000 	stmdbne	r1, {}	; <UNPREDICTABLE>
    1dc8:	00301002 	eorseq	r1, r0, r2
    1dcc:	15320000 	ldrne	r0, [r2, #-0]!
    1dd0:	15280000 	strne	r0, [r8, #-0]!
    1dd4:	791c0000 	ldmdbvc	ip, {}	; <UNPREDICTABLE>
    1dd8:	01000005 	tsteq	r0, r5
    1ddc:	fa10022c 	blx	402694 <__RAM_SIZE+0x302694>
    1de0:	74000000 	strvc	r0, [r0], #-0
    1de4:	72000015 	andvc	r0, r0, #21
    1de8:	2b000015 	blcs	1e44 <__HEAP_SIZE+0xe44>
    1dec:	10000d5e 	andne	r0, r0, lr, asr sp
    1df0:	00001b1c 	andeq	r1, r0, ip, lsl fp
    1df4:	000d722b 	andeq	r7, sp, fp, lsr #4
    1df8:	001b2710 	andseq	r2, fp, r0, lsl r7
    1dfc:	0d882b00 	vstreq	d2, [r8]
    1e00:	1b321000 	blne	c85e08 <__RAM_SIZE+0xb85e08>
    1e04:	9a2b0000 	bls	ac1e0c <__RAM_SIZE+0x9c1e0c>
    1e08:	3210000d 	andscc	r0, r0, #13
    1e0c:	2b00001b 	blcs	1e80 <__HEAP_SIZE+0xe80>
    1e10:	10000dd6 	ldrdne	r0, [r0], -r6
    1e14:	00001b3d 	andeq	r1, r0, sp, lsr fp
    1e18:	000de02b 	andeq	lr, sp, fp, lsr #32
    1e1c:	001b4810 	andseq	r4, fp, r0, lsl r8
    1e20:	0dea2b00 			; <UNDEFINED> instruction: 0x0dea2b00
    1e24:	1b531000 	blne	14c5e2c <__RAM_SIZE+0x13c5e2c>
    1e28:	fa2b0000 	blx	ac1e30 <__RAM_SIZE+0x9c1e30>
    1e2c:	5e10000d 	cdppl	0, 1, cr0, cr0, cr13, {0}
    1e30:	2b00001b 	blcs	1ea4 <__HEAP_SIZE+0xea4>
    1e34:	10000e04 	andne	r0, r0, r4, lsl #28
    1e38:	00001b48 	andeq	r1, r0, r8, asr #22
    1e3c:	000e102b 	andeq	r1, lr, fp, lsr #32
    1e40:	001b5310 	andseq	r5, fp, r0, lsl r3
    1e44:	0e142b00 	vnmlseq.f64	d2, d4, d0
    1e48:	1b691000 	blne	1a45e50 <__RAM_SIZE+0x1945e50>
    1e4c:	1a2b0000 	bne	ac1e54 <__RAM_SIZE+0x9c1e54>
    1e50:	3d10000e 	ldccc	0, cr0, [r0, #-56]	; 0xffffffc8
    1e54:	2b00001b 	blcs	1ec8 <__HEAP_SIZE+0xec8>
    1e58:	10000e28 	andne	r0, r0, r8, lsr #28
    1e5c:	00001b48 	andeq	r1, r0, r8, asr #22
    1e60:	000e302b 	andeq	r3, lr, fp, lsr #32
    1e64:	001b5310 	andseq	r5, fp, r0, lsl r3
    1e68:	0e342b00 	vaddeq.f64	d2, d4, d0
    1e6c:	1b691000 	blne	1a45e74 <__RAM_SIZE+0x1945e74>
    1e70:	442b0000 	strtmi	r0, [fp], #-0
    1e74:	4810000e 	ldmdami	r0, {r1, r2, r3}
    1e78:	2b00001b 	blcs	1eec <__HEAP_SIZE+0xeec>
    1e7c:	10000e4e 	andne	r0, r0, lr, asr #28
    1e80:	00001b3d 	andeq	r1, r0, sp, lsr fp
    1e84:	000e582b 	andeq	r5, lr, fp, lsr #16
    1e88:	001b4810 	andseq	r4, fp, r0, lsl r8
    1e8c:	0e642b00 	vmuleq.f64	d18, d4, d0
    1e90:	1b5e1000 	blne	1785e98 <__RAM_SIZE+0x1685e98>
    1e94:	702b0000 	eorvc	r0, fp, r0
    1e98:	4810000e 	ldmdami	r0, {r1, r2, r3}
    1e9c:	2b00001b 	blcs	1f10 <__HEAP_SIZE+0xf10>
    1ea0:	10000e94 	mulne	r0, r4, lr
    1ea4:	00001b53 	andeq	r1, r0, r3, asr fp
    1ea8:	000ea62b 	andeq	sl, lr, fp, lsr #12
    1eac:	001b5e10 	andseq	r5, fp, r0, lsl lr
    1eb0:	0eb62b00 	vmoveq.f64	d2, #96	; 0x3f000000  0.5
    1eb4:	1b741000 	blne	1d05ebc <__RAM_SIZE+0x1c05ebc>
    1eb8:	be2b0000 	cdplt	0, 2, cr0, cr11, cr0, {0}
    1ebc:	5310000e 	tstpl	r0, #14
    1ec0:	2b00001b 	blcs	1f34 <__HEAP_SIZE+0xf34>
    1ec4:	10000eca 	andne	r0, r0, sl, asr #29
    1ec8:	00001b74 	andeq	r1, r0, r4, ror fp
    1ecc:	000ed22b 	andeq	sp, lr, fp, lsr #4
    1ed0:	001b5310 	andseq	r5, fp, r0, lsl r3
    1ed4:	0ede2b00 	vfnmseq.f64	d18, d14, d0
    1ed8:	1b741000 	blne	1d05ee0 <__RAM_SIZE+0x1c05ee0>
    1edc:	ea2b0000 	b	ac1ee4 <__RAM_SIZE+0x9c1ee4>
    1ee0:	5310000e 	tstpl	r0, #14
    1ee4:	2b00001b 	blcs	1f58 <__HEAP_SIZE+0xf58>
    1ee8:	10000ef6 	strdne	r0, [r0], -r6
    1eec:	00001b74 	andeq	r1, r0, r4, ror fp
    1ef0:	000efe2b 	andeq	pc, lr, fp, lsr #28
    1ef4:	001b5310 	andseq	r5, fp, r0, lsl r3
    1ef8:	0f062b00 	svceq	0x00062b00
    1efc:	1b481000 	blne	1205f04 <__RAM_SIZE+0x1105f04>
    1f00:	162b0000 	strtne	r0, [fp], -r0
    1f04:	2710000f 	ldrcs	r0, [r0, -pc]
    1f08:	2b00001b 	blcs	1f7c <__HEAP_SIZE+0xf7c>
    1f0c:	10000f26 	andne	r0, r0, r6, lsr #30
    1f10:	00001b74 	andeq	r1, r0, r4, ror fp
    1f14:	000f4e2b 	andeq	r4, pc, fp, lsr #28
    1f18:	001b7f10 	andseq	r7, fp, r0, lsl pc
    1f1c:	0f602b00 	svceq	0x00602b00
    1f20:	1b321000 	blne	c85f28 <__RAM_SIZE+0xb85f28>
    1f24:	92200000 	eorls	r0, r0, #0
    1f28:	a810000f 	ldmdage	r0, {r0, r1, r2, r3}
    1f2c:	ae00000f 	cdpge	0, 0, cr0, cr0, cr15, {0}
    1f30:	1600000e 	strne	r0, [r0], -lr
    1f34:	7a025001 	bvc	95f40 <__HEAP_SIZE+0x94f40>
    1f38:	51011600 	tstpl	r1, r0, lsl #12
    1f3c:	16007402 	strne	r7, [r0], -r2, lsl #8
    1f40:	7b025201 	blvc	9674c <__HEAP_SIZE+0x9574c>
    1f44:	53011600 	movwpl	r1, #5632	; 0x1600
    1f48:	16007502 	strne	r7, [r0], -r2, lsl #10
    1f4c:	05007d02 	streq	r7, [r0, #-3330]	; 0xfffff2fe
    1f50:	08f60091 	ldmeq	r6!, {r0, r4, r7}^
    1f54:	7d021629 	stcvc	6, cr1, [r2, #-164]	; 0xffffff5c
    1f58:	08910308 	ldmeq	r1, {r3, r8, r9}
    1f5c:	7d021606 	stcvc	6, cr1, [r2, #-24]	; 0xffffffe8
    1f60:	0c91030c 	ldceq	3, cr0, [r1], {12}
    1f64:	7d021606 	stcvc	6, cr1, [r2, #-24]	; 0xffffffe8
    1f68:	10910310 	addsne	r0, r1, r0, lsl r3
    1f6c:	6c2b0006 	stcvs	0, cr0, [fp], #-24	; 0xffffffe8
    1f70:	74100010 	ldrvc	r0, [r0], #-16
    1f74:	2b00001b 	blcs	1fe8 <__HEAP_SIZE+0xfe8>
    1f78:	1000107c 	andne	r1, r0, ip, ror r0
    1f7c:	00001b32 	andeq	r1, r0, r2, lsr fp
    1f80:	0010a420 	andseq	sl, r0, r0, lsr #8
    1f84:	000fa810 	andeq	sl, pc, r0, lsl r8	; <UNPREDICTABLE>
    1f88:	000f0c00 	andeq	r0, pc, r0, lsl #24
    1f8c:	50011600 	andpl	r1, r1, r0, lsl #12
    1f90:	16007a02 	strne	r7, [r0], -r2, lsl #20
    1f94:	74025101 	strvc	r5, [r2], #-257	; 0xfffffeff
    1f98:	52011600 	andpl	r1, r1, #0, 12
    1f9c:	16007b02 	strne	r7, [r0], -r2, lsl #22
    1fa0:	75025301 	strvc	r5, [r2, #-769]	; 0xfffffcff
    1fa4:	7d021600 	stcvc	6, cr1, [r2, #-0]
    1fa8:	a8910600 	ldmge	r1, {r9, sl}
    1fac:	2908f67f 	stmdbcs	r8, {r0, r1, r2, r3, r4, r5, r6, r9, sl, ip, sp, lr, pc}
    1fb0:	087d0216 	ldmdaeq	sp!, {r1, r2, r4, r9}^
    1fb4:	06089103 	streq	r9, [r8], -r3, lsl #2
    1fb8:	0c7d0216 	lfmeq	f0, 2, [sp], #-88	; 0xffffffa8
    1fbc:	16007802 	strne	r7, [r0], -r2, lsl #16
    1fc0:	07107d02 	ldreq	r7, [r0, -r2, lsl #26]
    1fc4:	0b061091 	bleq	186210 <__RAM_SIZE+0x86210>
    1fc8:	001af7ff 			; <UNDEFINED> instruction: 0x001af7ff
    1fcc:	0010c421 	andseq	ip, r0, r1, lsr #8
    1fd0:	000f2810 	andeq	r2, pc, r0, lsl r8	; <UNPREDICTABLE>
    1fd4:	51011600 	tstpl	r1, r0, lsl #12
    1fd8:	16007402 	strne	r7, [r0], -r2, lsl #8
    1fdc:	78025201 	stmdavc	r2, {r0, r9, ip, lr}
    1fe0:	5301167f 	movwpl	r1, #5759	; 0x167f
    1fe4:	00007502 	andeq	r7, r0, r2, lsl #10
    1fe8:	0010ee20 	andseq	lr, r0, r0, lsr #28
    1fec:	00150f10 	andseq	r0, r5, r0, lsl pc
    1ff0:	000f8400 	andeq	r8, pc, r0, lsl #8
    1ff4:	50011600 	andpl	r1, r1, r0, lsl #12
    1ff8:	16007a02 	strne	r7, [r0], -r2, lsl #20
    1ffc:	74025101 	strvc	r5, [r2], #-257	; 0xfffffeff
    2000:	52011600 	andpl	r1, r1, #0, 12
    2004:	16007802 	strne	r7, [r0], -r2, lsl #16
    2008:	75025301 	strvc	r5, [r2, #-769]	; 0xfffffcff
    200c:	7d021600 	stcvc	6, cr1, [r2, #-0]
    2010:	00760c00 	rsbseq	r0, r6, r0, lsl #24
    2014:	0076264f 	rsbseq	r2, r6, pc, asr #12
    2018:	4f007627 	svcmi	0x00007627
    201c:	02161c26 	andseq	r1, r6, #9728	; 0x2600
    2020:	7604047d 			; <UNDEFINED> instruction: 0x7604047d
    2024:	16254f00 	strtne	r4, [r5], -r0, lsl #30
    2028:	01087d02 	tsteq	r8, r2, lsl #26
    202c:	7d02163a 	stcvc	6, cr1, [r2, #-232]	; 0xffffff18
    2030:	b091040c 	addslt	r0, r1, ip, lsl #8
    2034:	0216067f 	andseq	r0, r6, #133169152	; 0x7f00000
    2038:	7702107d 	smlsdxvc	r2, sp, r0, r1
    203c:	7d021600 	stcvc	6, cr1, [r2, #-0]
    2040:	00350114 	eorseq	r0, r5, r4, lsl r1
    2044:	00111c22 	andseq	r1, r1, r2, lsr #24
    2048:	50011610 	andpl	r1, r1, r0, lsl r6
    204c:	16200802 	strtne	r0, [r0], -r2, lsl #16
    2050:	74025101 	strvc	r5, [r2], #-257	; 0xfffffeff
    2054:	52011600 	andpl	r1, r1, #0, 12
    2058:	167f7602 	ldrbtne	r7, [pc], -r2, lsl #12
    205c:	75025301 	strvc	r5, [r2, #-769]	; 0xfffffcff
    2060:	03000000 	movweq	r0, #0
    2064:	00000029 	andeq	r0, r0, r9, lsr #32
    2068:	0005cf1a 	andeq	ip, r5, sl, lsl pc
    206c:	01530100 	cmpeq	r3, r0, lsl #2
    2070:	00ee010f 	rsceq	r0, lr, pc, lsl #2
    2074:	11300000 	teqne	r0, r0
    2078:	14c61000 	strbne	r1, [r6], #0
    207c:	15871000 	strne	r1, [r7]
    2080:	57010000 	strpl	r0, [r1, -r0]
    2084:	0f000013 	svceq	0x00000013
    2088:	0074756f 	rsbseq	r7, r4, pc, ror #10
    208c:	22015301 	andcs	r5, r1, #67108864	; 0x4000000
    2090:	00000106 	andeq	r0, r0, r6, lsl #2
    2094:	000015e9 	andeq	r1, r0, r9, ror #11
    2098:	000015e5 	andeq	r1, r0, r5, ror #11
    209c:	0004fd17 	andeq	pc, r4, r7, lsl sp	; <UNPREDICTABLE>
    20a0:	01530100 	cmpeq	r3, r0, lsl #2
    20a4:	0002ee2d 	andeq	lr, r2, sp, lsr #28
    20a8:	00160d00 	andseq	r0, r6, r0, lsl #26
    20ac:	00160900 	andseq	r0, r6, r0, lsl #18
    20b0:	64690f00 	strbtvs	r0, [r9], #-3840	; 0xfffff100
    20b4:	53010078 	movwpl	r0, #4216	; 0x1078
    20b8:	00ee3c01 	rsceq	r3, lr, r1, lsl #24
    20bc:	16310000 	ldrtne	r0, [r1], -r0
    20c0:	162d0000 	strtne	r0, [sp], -r0
    20c4:	3b170000 	blcc	5c20cc <__RAM_SIZE+0x4c20cc>
    20c8:	01000006 	tsteq	r0, r6
    20cc:	ee480153 	mcr	1, 2, r0, cr8, cr3, {2}
    20d0:	53000000 	movwpl	r0, #0
    20d4:	4f000016 	svcmi	0x00000016
    20d8:	17000016 	smladne	r0, r6, r0, r0
    20dc:	0000009e 	muleq	r0, lr, r0
    20e0:	57015301 	strpl	r5, [r1, -r1, lsl #6]
    20e4:	00000029 	andeq	r0, r0, r9, lsr #32
    20e8:	0000167b 	andeq	r1, r0, fp, ror r6
    20ec:	00001671 	andeq	r1, r0, r1, ror r6
    20f0:	0006f217 	andeq	pc, r6, r7, lsl r2	; <UNPREDICTABLE>
    20f4:	01530100 	cmpeq	r3, r0, lsl #2
    20f8:	0000306b 	andeq	r3, r0, fp, rrx
    20fc:	0016d300 	andseq	sp, r6, r0, lsl #6
    2100:	0016cb00 	andseq	ip, r6, r0, lsl #22
    2104:	06f81700 	ldrbteq	r1, [r8], r0, lsl #14
    2108:	53010000 	movwpl	r0, #4096	; 0x1000
    210c:	00307e01 	eorseq	r7, r0, r1, lsl #28
    2110:	17130000 	ldrne	r0, [r3, -r0]
    2114:	17090000 	strne	r0, [r9, -r0]
    2118:	26170000 	ldrcs	r0, [r7], -r0
    211c:	01000006 	tsteq	r0, r6
    2120:	30920153 	addscc	r0, r2, r3, asr r1
    2124:	59000000 	stmdbpl	r0, {}	; <UNPREDICTABLE>
    2128:	55000017 	strpl	r0, [r0, #-23]	; 0xffffffe9
    212c:	12000017 	andne	r0, r0, #23
    2130:	00667562 	rsbeq	r7, r6, r2, ror #10
    2134:	08015501 	stmdaeq	r1, {r0, r8, sl, ip, lr}
    2138:	00001357 	andeq	r1, r0, r7, asr r3
    213c:	7fb09103 	svcvc	0x00b09103
    2140:	6e656c14 	mcrvs	12, 3, r6, cr5, cr4, {0}
    2144:	01560100 	cmpeq	r6, r0, lsl #2
    2148:	0000ee0a 	andeq	lr, r0, sl, lsl #28
    214c:	0017a700 	andseq	sl, r7, r0, lsl #14
    2150:	00177900 	andseq	r7, r7, r0, lsl #18
    2154:	073c1c00 	ldreq	r1, [ip, -r0, lsl #24]!
    2158:	57010000 	strpl	r0, [r1, -r0]
    215c:	00290a01 	eoreq	r0, r9, r1, lsl #20
    2160:	18c60000 	stmiane	r6, {}^	; <UNPREDICTABLE>
    2164:	18bc0000 	ldmne	ip!, {}	; <UNPREDICTABLE>
    2168:	d9130000 	ldmdble	r3, {}	; <UNPREDICTABLE>
    216c:	01000004 	tsteq	r0, r4
    2170:	7717015a 			; <UNDEFINED> instruction: 0x7717015a
    2174:	05000013 	streq	r0, [r0, #-19]	; 0xffffffed
    2178:	00592003 	subseq	r2, r9, r3
    217c:	058d1c10 	streq	r1, [sp, #3088]	; 0xc10
    2180:	6f010000 	svcvs	0x00010000
    2184:	0b7d0801 	bleq	1f44190 <__RAM_SIZE+0x1e44190>
    2188:	19280000 	stmdbne	r8!, {}	; <UNPREDICTABLE>
    218c:	191c0000 	ldmdbne	ip, {}	; <UNPREDICTABLE>
    2190:	4a1c0000 	bmi	702198 <__RAM_SIZE+0x602198>
    2194:	01000005 	tsteq	r0, r5
    2198:	8507017f 	strhi	r0, [r7, #-383]	; 0xfffffe81
    219c:	85000000 	strhi	r0, [r0, #-0]
    21a0:	7b000019 	blvc	220c <__HEAP_SIZE+0x120c>
    21a4:	14000019 	strne	r0, [r0], #-25	; 0xffffffe7
    21a8:	00706d74 	rsbseq	r6, r0, r4, ror sp
    21ac:	0a018001 	beq	621b8 <__HEAP_SIZE+0x611b8>
    21b0:	00000029 	andeq	r0, r0, r9, lsr #32
    21b4:	000019c8 	andeq	r1, r0, r8, asr #19
    21b8:	000019c4 	andeq	r1, r0, r4, asr #19
    21bc:	00055d1c 	andeq	r5, r5, ip, lsl sp
    21c0:	01810100 	orreq	r0, r1, r0, lsl #2
    21c4:	00005f11 	andeq	r5, r0, r1, lsl pc
    21c8:	0019f900 	andseq	pc, r9, r0, lsl #18
    21cc:	0019ed00 	andseq	lr, r9, r0, lsl #26
    21d0:	134a1d00 	movtne	r1, #44288	; 0xad00
    21d4:	13aa1000 			; <UNDEFINED> instruction: 0x13aa1000
    21d8:	11341000 	teqne	r4, r0
    21dc:	051c0000 	ldreq	r0, [ip, #-0]
    21e0:	01000004 	tsteq	r0, r4
    21e4:	3012019c 	mulscc	r2, ip, r1
    21e8:	48000000 	stmdami	r0, {}	; <UNPREDICTABLE>
    21ec:	4400001a 	strmi	r0, [r0], #-26	; 0xffffffe6
    21f0:	0000001a 	andeq	r0, r0, sl, lsl r0
    21f4:	0011542b 	andseq	r5, r1, fp, lsr #8
    21f8:	001b1c10 	andseq	r1, fp, r0, lsl ip
    21fc:	11682b00 	cmnne	r8, r0, lsl #22
    2200:	1b321000 	blne	c86208 <__RAM_SIZE+0xb86208>
    2204:	7a2b0000 	bvc	ac220c <__RAM_SIZE+0x9c220c>
    2208:	27100011 			; <UNDEFINED> instruction: 0x27100011
    220c:	2b00001b 	blcs	2280 <__HEAP_SIZE+0x1280>
    2210:	1000118c 	andne	r1, r0, ip, lsl #3
    2214:	00001b27 	andeq	r1, r0, r7, lsr #22
    2218:	00119e2b 	andseq	r9, r1, fp, lsr #28
    221c:	001b3210 	andseq	r3, fp, r0, lsl r2
    2220:	11ae2b00 			; <UNDEFINED> instruction: 0x11ae2b00
    2224:	1b321000 	blne	c8622c <__RAM_SIZE+0xb8622c>
    2228:	f6200000 			; <UNDEFINED> instruction: 0xf6200000
    222c:	91100011 	tstls	r0, r1, lsl r0
    2230:	b4000017 	strlt	r0, [r0], #-23	; 0xffffffe9
    2234:	16000011 			; <UNDEFINED> instruction: 0x16000011
    2238:	91045001 	tstls	r4, r1
    223c:	16067f9c 			; <UNDEFINED> instruction: 0x16067f9c
    2240:	91045101 	tstls	r4, r1, lsl #2
    2244:	16067fa8 	strne	r7, [r6], -r8, lsr #31
    2248:	7a025201 	bvc	96a54 <__HEAP_SIZE+0x95a54>
    224c:	53011600 	movwpl	r1, #5632	; 0x1600
    2250:	16007b02 	strne	r7, [r0], -r2, lsl #22
    2254:	05007d02 	streq	r7, [r0, #-3330]	; 0xfffff2fe
    2258:	00591003 	subseq	r1, r9, r3
    225c:	7d021610 	stcvc	6, cr1, [r2, #-64]	; 0xffffffc0
    2260:	16330104 	ldrtne	r0, [r3], -r4, lsl #2
    2264:	03087d02 	movweq	r7, #36098	; 0x8d02
    2268:	16060c91 			; <UNDEFINED> instruction: 0x16060c91
    226c:	030c7d02 	movweq	r7, #52482	; 0xcd02
    2270:	00061091 	muleq	r6, r1, r0
    2274:	00121420 	andseq	r1, r2, r0, lsr #8
    2278:	00179110 	andseq	r9, r7, r0, lsl r1
    227c:	0011fe00 	andseq	pc, r1, r0, lsl #28
    2280:	50011600 	andpl	r1, r1, r0, lsl #12
    2284:	7f9c9104 	svcvc	0x009c9104
    2288:	51011606 	tstpl	r1, r6, lsl #12
    228c:	7fa89104 	svcvc	0x00a89104
    2290:	52011606 	andpl	r1, r1, #6291456	; 0x600000
    2294:	16007a02 	strne	r7, [r0], -r2, lsl #20
    2298:	7b025301 	blvc	96ea4 <__HEAP_SIZE+0x95ea4>
    229c:	7d021600 	stcvc	6, cr1, [r2, #-0]
    22a0:	14030500 	strne	r0, [r3], #-1280	; 0xfffffb00
    22a4:	16100059 			; <UNDEFINED> instruction: 0x16100059
    22a8:	01047d02 	tsteq	r4, r2, lsl #26
    22ac:	7d021634 	stcvc	6, cr1, [r2, #-208]	; 0xffffff30
    22b0:	0c910308 	ldceq	3, cr0, [r1], {8}
    22b4:	7d021606 	stcvc	6, cr1, [r2, #-24]	; 0xffffffe8
    22b8:	1091030c 	addsne	r0, r1, ip, lsl #6
    22bc:	3c200006 	stccc	0, cr0, [r0], #-24	; 0xffffffe8
    22c0:	91100012 	tstls	r0, r2, lsl r0
    22c4:	38000017 	stmdacc	r0, {r0, r1, r2, r4}
    22c8:	16000012 			; <UNDEFINED> instruction: 0x16000012
    22cc:	91045001 	tstls	r4, r1
    22d0:	16067f9c 			; <UNDEFINED> instruction: 0x16067f9c
    22d4:	91045101 	tstls	r4, r1, lsl #2
    22d8:	16067fa8 	strne	r7, [r6], -r8, lsr #31
    22dc:	7a025201 	bvc	96ae8 <__HEAP_SIZE+0x95ae8>
    22e0:	53011600 	movwpl	r1, #5632	; 0x1600
    22e4:	16007b02 	strne	r7, [r0], -r2, lsl #22
    22e8:	03087d02 	movweq	r7, #36098	; 0x8d02
    22ec:	16060c91 			; <UNDEFINED> instruction: 0x16060c91
    22f0:	030c7d02 	movweq	r7, #52482	; 0xcd02
    22f4:	00061091 	muleq	r6, r1, r0
    22f8:	00126020 	andseq	r6, r2, r0, lsr #32
    22fc:	000b8910 	andeq	r8, fp, r0, lsl r9
    2300:	00128100 	andseq	r8, r2, r0, lsl #2
    2304:	50011600 	andpl	r1, r1, r0, lsl #12
    2308:	7f9c9104 	svcvc	0x009c9104
    230c:	51011606 	tstpl	r1, r6, lsl #12
    2310:	7fa89104 	svcvc	0x00a89104
    2314:	52011606 	andpl	r1, r1, #6291456	; 0x600000
    2318:	16007a02 	strne	r7, [r0], -r2, lsl #20
    231c:	7b025301 	blvc	96f28 <__HEAP_SIZE+0x95f28>
    2320:	7d021600 	stcvc	6, cr1, [r2, #-0]
    2324:	08f50300 	ldmeq	r5!, {r8, r9}^
    2328:	7d021629 	stcvc	6, cr1, [r2, #-164]	; 0xffffff5c
    232c:	00750208 	rsbseq	r0, r5, r8, lsl #4
    2330:	0c7d0216 	lfmeq	f0, 2, [sp], #-88	; 0xffffffa8
    2334:	060c9103 	streq	r9, [ip], -r3, lsl #2
    2338:	107d0216 	rsbsne	r0, sp, r6, lsl r2
    233c:	06109103 	ldreq	r9, [r0], -r3, lsl #2
    2340:	126e2b00 	rsbne	r2, lr, #0, 22
    2344:	1b5e1000 	blne	178634c <__RAM_SIZE+0x168634c>
    2348:	842b0000 	strthi	r0, [fp], #-0
    234c:	69100012 	ldmdbvs	r0, {r1, r4}
    2350:	2b00001b 	blcs	23c4 <__HEAP_SIZE+0x13c4>
    2354:	1000128a 	andne	r1, r0, sl, lsl #5
    2358:	00001b3d 	andeq	r1, r0, sp, lsr fp
    235c:	0012962b 	andseq	r9, r2, fp, lsr #12
    2360:	001b5e10 	andseq	r5, fp, r0, lsl lr
    2364:	12a82b00 	adcne	r2, r8, #0, 22
    2368:	1b481000 	blne	1206370 <__RAM_SIZE+0x1106370>
    236c:	b42b0000 	strtlt	r0, [fp], #-0
    2370:	8a100012 	bhi	4023c0 <__RAM_SIZE+0x3023c0>
    2374:	2b00001b 	blcs	23e8 <__HEAP_SIZE+0x13e8>
    2378:	100012ba 			; <UNDEFINED> instruction: 0x100012ba
    237c:	00001b95 	muleq	r0, r5, fp
    2380:	0012c62b 	andseq	ip, r2, fp, lsr #12
    2384:	001b5e10 	andseq	r5, fp, r0, lsl lr
    2388:	12d62b00 	sbcsne	r2, r6, #0, 22
    238c:	1b271000 	blne	9c6394 <__RAM_SIZE+0x8c6394>
    2390:	e02b0000 	eor	r0, fp, r0
    2394:	95100012 	ldrls	r0, [r0, #-18]	; 0xffffffee
    2398:	2b00001b 	blcs	240c <__HEAP_SIZE+0x140c>
    239c:	100012ec 	andne	r1, r0, ip, ror #5
    23a0:	00001ba0 	andeq	r1, r0, r0, lsr #23
    23a4:	0012fa2b 	andseq	pc, r2, fp, lsr #20
    23a8:	001b3d10 	andseq	r3, fp, r0, lsl sp
    23ac:	13062b00 	movwne	r2, #27392	; 0x6b00
    23b0:	1b5e1000 	blne	17863b8 <__RAM_SIZE+0x16863b8>
    23b4:	122b0000 	eorne	r0, fp, #0
    23b8:	32100013 	andscc	r0, r0, #19
    23bc:	2b00001b 	blcs	2430 <__HEAP_SIZE+0x1430>
    23c0:	10001320 	andne	r1, r0, r0, lsr #6
    23c4:	00001b27 	andeq	r1, r0, r7, lsr #22
    23c8:	00133a2b 	andseq	r3, r3, fp, lsr #20
    23cc:	001b3210 	andseq	r3, fp, r0, lsl r2
    23d0:	14521500 	ldrbne	r1, [r2], #-1280	; 0xfffffb00
    23d4:	17911000 	ldrne	r1, [r1, r0]
    23d8:	01160000 	tsteq	r6, r0
    23dc:	9c910450 	cfldrsls	mvf0, [r1], {80}	; 0x50
    23e0:	0116067f 	tsteq	r6, pc, ror r6
    23e4:	a8910451 	ldmge	r1, {r0, r4, r6, sl}
    23e8:	0116067f 	tsteq	r6, pc, ror r6
    23ec:	007a0252 	rsbseq	r0, sl, r2, asr r2
    23f0:	02530116 	subseq	r0, r3, #-2147483643	; 0x80000005
    23f4:	0216007b 	andseq	r0, r6, #123	; 0x7b
    23f8:	9103007d 	tstls	r3, sp, ror r0
    23fc:	02167fb0 	andseq	r7, r6, #176, 30	; 0x2c0
    2400:	7402047d 	strvc	r0, [r2], #-1149	; 0xfffffb83
    2404:	7d021600 	stcvc	6, cr1, [r2, #-0]
    2408:	0c910308 	ldceq	3, cr0, [r1], {8}
    240c:	7d021606 	stcvc	6, cr1, [r2, #-24]	; 0xffffffe8
    2410:	1091030c 	addsne	r0, r1, ip, lsl #6
    2414:	18000006 	stmdane	r0, {r1, r2}
    2418:	00000133 	andeq	r0, r0, r3, lsr r1
    241c:	00001367 	andeq	r1, r0, r7, ror #6
    2420:	00003019 	andeq	r3, r0, r9, lsl r0
    2424:	18001f00 	stmdane	r0, {r8, r9, sl, fp, ip}
    2428:	00000fa3 	andeq	r0, r0, r3, lsr #31
    242c:	00001377 	andeq	r1, r0, r7, ror r3
    2430:	00003019 	andeq	r3, r0, r9, lsl r0
    2434:	03000900 	movweq	r0, #2304	; 0x900
    2438:	00001367 	andeq	r1, r0, r7, ror #6
    243c:	00071c1a 	andeq	r1, r7, sl, lsl ip
    2440:	01320100 	teqeq	r2, r0, lsl #2
    2444:	00ee010f 	rsceq	r0, lr, pc, lsl #2
    2448:	0c780000 	ldcleq	0, cr0, [r8], #-0
    244c:	0d3e1000 	ldceq	0, cr1, [lr, #-0]
    2450:	1a661000 	bne	1986458 <__RAM_SIZE+0x1886458>
    2454:	0f010000 	svceq	0x00010000
    2458:	0f000015 	svceq	0x00000015
    245c:	0074756f 	rsbseq	r7, r4, pc, ror #10
    2460:	2c013201 	sfmcs	f3, 4, [r1], {1}
    2464:	00000106 	andeq	r0, r0, r6, lsl #2
    2468:	00001aa7 	andeq	r1, r0, r7, lsr #21
    246c:	00001a9f 	muleq	r0, pc, sl	; <UNPREDICTABLE>
    2470:	0004fd17 	andeq	pc, r4, r7, lsl sp	; <UNPREDICTABLE>
    2474:	01320100 	teqeq	r2, r0, lsl #2
    2478:	0002ee37 	andeq	lr, r2, r7, lsr lr
    247c:	001ae700 	andseq	lr, sl, r0, lsl #14
    2480:	001adf00 	andseq	sp, sl, r0, lsl #30
    2484:	64690f00 	strbtvs	r0, [r9], #-3840	; 0xfffff100
    2488:	32010078 	andcc	r0, r1, #120	; 0x78
    248c:	00ee4601 	rsceq	r4, lr, r1, lsl #12
    2490:	1b270000 	blne	9c2498 <__RAM_SIZE+0x8c2498>
    2494:	1b1f0000 	blne	7c249c <__RAM_SIZE+0x6c249c>
    2498:	3b170000 	blcc	5c24a0 <__RAM_SIZE+0x4c24a0>
    249c:	01000006 	tsteq	r0, r6
    24a0:	ee520132 	mrc	1, 2, r0, cr2, cr2, {1}
    24a4:	63000000 	movwvs	r0, #0
    24a8:	5f00001b 	svcpl	0x0000001b
    24ac:	1700001b 	smladne	r0, fp, r0, r0
    24b0:	0000009e 	muleq	r0, lr, r0
    24b4:	6d013201 	sfmvs	f3, 4, [r1, #-4]
    24b8:	0000007e 	andeq	r0, r0, lr, ror r0
    24bc:	00001b8b 	andeq	r1, r0, fp, lsl #23
    24c0:	00001b81 	andeq	r1, r0, r1, lsl #23
    24c4:	00058d10 	andeq	r8, r5, r0, lsl sp
    24c8:	01320100 	teqeq	r2, r0, lsl #2
    24cc:	000b7d79 	andeq	r7, fp, r9, ror sp
    24d0:	08910200 	ldmeq	r1, {r9}
    24d4:	00085d10 	andeq	r5, r8, r0, lsl sp
    24d8:	01320100 	teqeq	r2, r0, lsl #2
    24dc:	00007e96 	muleq	r0, r6, lr
    24e0:	10910200 	addsne	r0, r1, r0, lsl #4
    24e4:	0006f210 	andeq	pc, r6, r0, lsl r2	; <UNPREDICTABLE>
    24e8:	01320100 	teqeq	r2, r0, lsl #2
    24ec:	000030a9 	andeq	r3, r0, r9, lsr #1
    24f0:	18910200 	ldmne	r1, {r9}
    24f4:	0006f810 	andeq	pc, r6, r0, lsl r8	; <UNPREDICTABLE>
    24f8:	01320100 	teqeq	r2, r0, lsl #2
    24fc:	000030bc 	strheq	r3, [r0], -ip
    2500:	1c910200 	lfmne	f0, 4, [r1], {0}
    2504:	00062617 	andeq	r2, r6, r7, lsl r6
    2508:	01320100 	teqeq	r2, r0, lsl #2
    250c:	000030d0 	ldrdeq	r3, [r0], -r0
    2510:	001bdf00 	andseq	sp, fp, r0, lsl #30
    2514:	001bdb00 	andseq	sp, fp, r0, lsl #22
    2518:	75621200 	strbvc	r1, [r2, #-512]!	; 0xfffffe00
    251c:	34010066 	strcc	r0, [r1], #-102	; 0xffffff9a
    2520:	13570801 	cmpne	r7, #65536	; 0x10000
    2524:	91030000 	mrsls	r0, (UNDEF: 3)
    2528:	6c147fb8 	ldcvs	15, cr7, [r4], {184}	; 0xb8
    252c:	01006e65 	tsteq	r0, r5, ror #28
    2530:	ee0a0135 	mcr	1, 0, r0, cr10, cr5, {1}
    2534:	0a000000 	beq	253c <__HEAP_SIZE+0x153c>
    2538:	fe00001c 	mcr2	0, 0, r0, cr0, cr12, {0}
    253c:	1e00001b 	mcrne	0, 0, r0, cr0, cr11, {0}
    2540:	000000e0 	andeq	r0, r0, r0, ror #1
    2544:	000014b0 			; <UNDEFINED> instruction: 0x000014b0
    2548:	00067a1c 	andeq	r7, r6, ip, lsl sl
    254c:	013f0100 	teqeq	pc, r0, lsl #2
    2550:	00013a12 	andeq	r3, r1, r2, lsl sl
    2554:	001c5a00 	andseq	r5, ip, r0, lsl #20
    2558:	001c5600 	andseq	r5, ip, r0, lsl #12
    255c:	0cd02b00 	vldmiaeq	r0, {d18-d17}
    2560:	1bab1000 	blne	feac6568 <__StackTop+0xc69c6568>
    2564:	f02b0000 			; <UNDEFINED> instruction: 0xf02b0000
    2568:	ab10000c 	blge	4025a0 <__RAM_SIZE+0x3025a0>
    256c:	0000001b 	andeq	r0, r0, fp, lsl r0
    2570:	000d3815 	andeq	r3, sp, r5, lsl r8
    2574:	00167010 	andseq	r7, r6, r0, lsl r0
    2578:	50011600 	andpl	r1, r1, r0, lsl #12
    257c:	7fac9104 	svcvc	0x00ac9104
    2580:	51011606 	tstpl	r1, r6, lsl #12
    2584:	7fb09104 	svcvc	0x00b09104
    2588:	52011606 	andpl	r1, r1, #6291456	; 0x600000
    258c:	7fb49104 	svcvc	0x00b49104
    2590:	53011606 	movwpl	r1, #5638	; 0x1606
    2594:	16007b02 	strne	r7, [r0], -r2, lsl #22
    2598:	03007d02 	movweq	r7, #3330	; 0xd02
    259c:	167fb891 			; <UNDEFINED> instruction: 0x167fb891
    25a0:	02047d02 	andeq	r7, r4, #2, 26	; 0x80
    25a4:	02160079 	andseq	r0, r6, #121	; 0x79
    25a8:	9104087d 	tstls	r4, sp, ror r8
    25ac:	16019408 	strne	r9, [r1], -r8, lsl #8
    25b0:	020c7d02 	andeq	r7, ip, #2, 26	; 0x80
    25b4:	02160077 	andseq	r0, r6, #119	; 0x77
    25b8:	9103107d 	tstls	r3, sp, ror r0
    25bc:	02160618 	andseq	r0, r6, #24, 12	; 0x1800000
    25c0:	9103147d 	tstls	r3, sp, ror r4
    25c4:	0216061c 	andseq	r0, r6, #28, 12	; 0x1c00000
    25c8:	7a02187d 	bvc	887c4 <__HEAP_SIZE+0x877c4>
    25cc:	1a000000 	bne	25d4 <__HEAP_SIZE+0x15d4>
    25d0:	00000606 	andeq	r0, r0, r6, lsl #12
    25d4:	0f011901 	svceq	0x00011901
    25d8:	0000ee01 	andeq	lr, r0, r1, lsl #28
    25dc:	000be400 	andeq	lr, fp, r0, lsl #8
    25e0:	000c7810 	andeq	r7, ip, r0, lsl r8
    25e4:	001c7810 	andseq	r7, ip, r0, lsl r8
    25e8:	16700100 	ldrbtne	r0, [r0], -r0, lsl #2
    25ec:	6f0f0000 	svcvs	0x000f0000
    25f0:	01007475 	tsteq	r0, r5, ror r4
    25f4:	06270119 			; <UNDEFINED> instruction: 0x06270119
    25f8:	b5000001 	strlt	r0, [r0, #-1]
    25fc:	b100001c 	tstlt	r0, ip, lsl r0
    2600:	1700001c 	smladne	r0, ip, r0, r0
    2604:	000004fd 	strdeq	r0, [r0], -sp
    2608:	32011901 	andcc	r1, r1, #16384	; 0x4000
    260c:	000002ee 	andeq	r0, r0, lr, ror #5
    2610:	00001cda 	ldrdeq	r1, [r0], -sl
    2614:	00001cd6 	ldrdeq	r1, [r0], -r6
    2618:	7864690f 	stmdavc	r4!, {r0, r1, r2, r3, r8, fp, sp, lr}^
    261c:	01190100 	tsteq	r9, r0, lsl #2
    2620:	0000ee41 	andeq	lr, r0, r1, asr #28
    2624:	001cff00 	andseq	pc, ip, r0, lsl #30
    2628:	001cfb00 	andseq	pc, ip, r0, lsl #22
    262c:	063b1700 	ldrteq	r1, [fp], -r0, lsl #14
    2630:	19010000 	stmdbne	r1, {}	; <UNPREDICTABLE>
    2634:	00ee4d01 	rsceq	r4, lr, r1, lsl #26
    2638:	1d240000 	stcne	0, cr0, [r4, #-0]
    263c:	1d200000 	stcne	0, cr0, [r0, #-0]
    2640:	9e170000 	cdpls	0, 1, cr0, cr7, cr0, {0}
    2644:	01000000 	mrseq	r0, (UNDEF: 0)
    2648:	5f630119 	svcpl	0x00630119
    264c:	4f000000 	svcmi	0x00000000
    2650:	4500001d 	strmi	r0, [r0, #-29]	; 0xffffffe3
    2654:	1000001d 	andne	r0, r0, sp, lsl r0
    2658:	0000058d 	andeq	r0, r0, sp, lsl #11
    265c:	6f011901 	svcvs	0x00011901
    2660:	00000b7d 	andeq	r0, r0, sp, ror fp
    2664:	10049102 	andne	r9, r4, r2, lsl #2
    2668:	0000085d 	andeq	r0, r0, sp, asr r8
    266c:	87011901 	strhi	r1, [r1, -r1, lsl #18]
    2670:	0000005f 	andeq	r0, r0, pc, asr r0
    2674:	10089102 	andne	r9, r8, r2, lsl #2
    2678:	000006f2 	strdeq	r0, [r0], -r2
    267c:	9a011901 	bls	48a88 <__HEAP_SIZE+0x47a88>
    2680:	00000030 	andeq	r0, r0, r0, lsr r0
    2684:	100c9102 	andne	r9, ip, r2, lsl #2
    2688:	000006f8 	strdeq	r0, [r0], -r8
    268c:	ad011901 	vstrge.16	s2, [r1, #-2]	; <UNPREDICTABLE>
    2690:	00000030 	andeq	r0, r0, r0, lsr r0
    2694:	17109102 	ldrne	r9, [r0, -r2, lsl #2]
    2698:	00000626 	andeq	r0, r0, r6, lsr #12
    269c:	c1011901 	tstgt	r1, r1, lsl #18
    26a0:	00000030 	andeq	r0, r0, r0, lsr r0
    26a4:	00001d94 	muleq	r0, r4, sp
    26a8:	00001d90 	muleq	r0, r0, sp
    26ac:	66756212 			; <UNDEFINED> instruction: 0x66756212
    26b0:	011b0100 	tsteq	fp, r0, lsl #2
    26b4:	00135708 	andseq	r5, r3, r8, lsl #14
    26b8:	48910200 	ldmmi	r1, {r9}
    26bc:	6e656c14 	mcrvs	12, 3, r6, cr5, cr4, {0}
    26c0:	011c0100 	tsteq	ip, r0, lsl #2
    26c4:	0000ee0a 	andeq	lr, r0, sl, lsl #28
    26c8:	001dbf00 	andseq	fp, sp, r0, lsl #30
    26cc:	001db300 	andseq	fp, sp, r0, lsl #6
    26d0:	00c01e00 	sbceq	r1, r0, r0, lsl #28
    26d4:	16300000 	ldrtne	r0, [r0], -r0
    26d8:	7a1c0000 	bvc	7026e0 <__RAM_SIZE+0x6026e0>
    26dc:	01000006 	tsteq	r0, r6
    26e0:	3a120126 	bcc	482b80 <__RAM_SIZE+0x382b80>
    26e4:	17000001 	strne	r0, [r0, -r1]
    26e8:	0b00001e 	bleq	2768 <__HEAP_SIZE+0x1768>
    26ec:	0000001e 	andeq	r0, r0, lr, lsl r0
    26f0:	000c7415 	andeq	r7, ip, r5, lsl r4
    26f4:	00167010 	andseq	r7, r6, r0, lsl r0
    26f8:	7d021600 	stcvc	6, cr1, [r2, #-0]
    26fc:	00740200 	rsbseq	r0, r4, r0, lsl #4
    2700:	047d0216 	ldrbteq	r0, [sp], #-534	; 0xfffffdea
    2704:	16007702 	strne	r7, [r0], -r2, lsl #14
    2708:	04087d02 	streq	r7, [r8], #-3330	; 0xfffff2fe
    270c:	01940491 			; <UNDEFINED> instruction: 0x01940491
    2710:	0c7d0216 	lfmeq	f0, 2, [sp], #-88	; 0xffffffa8
    2714:	16007502 	strne	r7, [r0], -r2, lsl #10
    2718:	03107d02 	tsteq	r0, #2, 26	; 0x80
    271c:	16060c91 			; <UNDEFINED> instruction: 0x16060c91
    2720:	03147d02 	tsteq	r4, #2, 26	; 0x80
    2724:	16061091 			; <UNDEFINED> instruction: 0x16061091
    2728:	02187d02 	andseq	r7, r8, #2, 26	; 0x80
    272c:	00000076 	andeq	r0, r0, r6, ror r0
    2730:	0005c22c 	andeq	ip, r5, ip, lsr #4
    2734:	0fe30100 	svceq	0x00e30100
    2738:	0000ee01 	andeq	lr, r0, r1, lsl #28
    273c:	000aac00 	andeq	sl, sl, r0, lsl #24
    2740:	000be410 	andeq	lr, fp, r0, lsl r4
    2744:	001e8510 	andseq	r8, lr, r0, lsl r5
    2748:	17910100 	ldrne	r0, [r1, r0, lsl #2]
    274c:	6f2d0000 	svcvs	0x002d0000
    2750:	01007475 	tsteq	r0, r5, ror r4
    2754:	010629e3 	smlatteq	r6, r3, r9, r2
    2758:	1ecf0000 	cdpne	0, 12, cr0, cr15, cr0, {0}
    275c:	1ec90000 	cdpne	0, 12, cr0, cr9, cr0, {0}
    2760:	fd2e0000 	stc2	0, cr0, [lr, #-0]
    2764:	01000004 	tsteq	r0, r4
    2768:	02ee34e3 	rsceq	r3, lr, #-486539264	; 0xe3000000
    276c:	1f010000 	svcne	0x00010000
    2770:	1efb0000 	cdpne	0, 15, cr0, cr11, cr0, {0}
    2774:	692d0000 	pushvs	{}	; <UNPREDICTABLE>
    2778:	01007864 	tsteq	r0, r4, ror #16
    277c:	00ee43e3 	rsceq	r4, lr, r3, ror #7
    2780:	1f330000 	svcne	0x00330000
    2784:	1f2d0000 	svcne	0x002d0000
    2788:	3b2e0000 	blcc	b82790 <__RAM_SIZE+0xa82790>
    278c:	01000006 	tsteq	r0, r6
    2790:	00ee4fe3 	rsceq	r4, lr, r3, ror #31
    2794:	1f650000 	svcne	0x00650000
    2798:	1f5f0000 	svcne	0x005f0000
    279c:	622d0000 	eorvs	r0, sp, #0
    27a0:	01006675 	tsteq	r0, r5, ror r6
    27a4:	02ee5de3 	rsceq	r5, lr, #14528	; 0x38c0
    27a8:	1f950000 	svcne	0x00950000
    27ac:	1f910000 	svcne	0x00910000
    27b0:	6c2d0000 	stcvs	0, cr0, [sp], #-0
    27b4:	01006e65 	tsteq	r0, r5, ror #28
    27b8:	00ee69e3 	rsceq	r6, lr, r3, ror #19
    27bc:	1fe70000 	svcne	0x00e70000
    27c0:	1fb50000 	svcne	0x00b50000
    27c4:	8d2e0000 	stchi	0, cr0, [lr, #-0]
    27c8:	01000005 	tsteq	r0, r5
    27cc:	0b7d73e3 	bleq	1f5f760 <__RAM_SIZE+0x1e5f760>
    27d0:	211b0000 	tstcs	fp, r0
    27d4:	21170000 	tstcs	r7, r0
    27d8:	5d2e0000 	stcpl	0, cr0, [lr, #-0]
    27dc:	01000008 	tsteq	r0, r8
    27e0:	00308ae3 	eorseq	r8, r0, r3, ror #21
    27e4:	213f0000 	teqcs	pc, r0
    27e8:	213b0000 	teqcs	fp, r0
    27ec:	f22e0000 	vhadd.s32	d0, d14, d0
    27f0:	01000006 	tsteq	r0, r6
    27f4:	00309de3 	eorseq	r9, r0, r3, ror #27
    27f8:	21630000 	cmncs	r3, r0
    27fc:	215f0000 	cmpcs	pc, r0
    2800:	f82e0000 			; <UNDEFINED> instruction: 0xf82e0000
    2804:	01000006 	tsteq	r0, r6
    2808:	0030b0e3 	eorseq	fp, r0, r3, ror #1
    280c:	21870000 	orrcs	r0, r7, r0
    2810:	21830000 	orrcs	r0, r3, r0
    2814:	262e0000 	strtcs	r0, [lr], -r0
    2818:	01000006 	tsteq	r0, r6
    281c:	0030c4e3 	eorseq	ip, r0, r3, ror #9
    2820:	21aa0000 			; <UNDEFINED> instruction: 0x21aa0000
    2824:	21a60000 			; <UNDEFINED> instruction: 0x21a60000
    2828:	66150000 	ldrvs	r0, [r5], -r0
    282c:	9110000b 	tstls	r0, fp
    2830:	16000017 			; <UNDEFINED> instruction: 0x16000017
    2834:	02007d02 	andeq	r7, r0, #2, 26	; 0x80
    2838:	02160075 	andseq	r0, r6, #117	; 0x75
    283c:	7402047d 	strvc	r0, [r2], #-1149	; 0xfffffb83
    2840:	7d021600 	stcvc	6, cr1, [r2, #-0]
    2844:	00770208 	rsbseq	r0, r7, r8, lsl #4
    2848:	0c7d0216 	lfmeq	f0, 2, [sp], #-88	; 0xffffffa8
    284c:	00007602 	andeq	r7, r0, r2, lsl #12
    2850:	06aa2c00 	strteq	r2, [sl], r0, lsl #24
    2854:	c7010000 	strgt	r0, [r1, -r0]
    2858:	00ee010f 	rsceq	r0, lr, pc, lsl #2
    285c:	0a2e0000 	beq	b82864 <__RAM_SIZE+0xa82864>
    2860:	0aac1000 	beq	feb06868 <__StackTop+0xc6a06868>
    2864:	21ca1000 	biccs	r1, sl, r0
    2868:	d8010000 	stmdale	r1, {}	; <UNPREDICTABLE>
    286c:	2d000018 	stccs	0, cr0, [r0, #-96]	; 0xffffffa0
    2870:	0074756f 	rsbseq	r7, r4, pc, ror #10
    2874:	0625c701 	strteq	ip, [r5], -r1, lsl #14
    2878:	12000001 	andne	r0, r0, #1
    287c:	0e000022 	cdpeq	0, 0, cr0, cr0, cr2, {1}
    2880:	2e000022 	cdpcs	0, 0, cr0, cr0, cr2, {1}
    2884:	000004fd 	strdeq	r0, [r0], -sp
    2888:	ee30c701 	cdp	7, 3, cr12, cr0, cr1, {0}
    288c:	34000002 	strcc	r0, [r0], #-2
    2890:	30000022 	andcc	r0, r0, r2, lsr #32
    2894:	2d000022 	stccs	0, cr0, [r0, #-136]	; 0xffffff78
    2898:	00786469 	rsbseq	r6, r8, r9, ror #8
    289c:	ee3fc701 	cdp	7, 3, cr12, cr15, cr1, {0}
    28a0:	5e000000 	cdppl	0, 0, cr0, cr0, cr0, {0}
    28a4:	52000022 	andpl	r0, r0, #34	; 0x22
    28a8:	2e000022 	cdpcs	0, 0, cr0, cr0, cr2, {1}
    28ac:	0000063b 	andeq	r0, r0, fp, lsr r6
    28b0:	ee4bc701 	cdp	7, 4, cr12, cr11, cr1, {0}
    28b4:	ac000000 	stcge	0, cr0, [r0], {-0}
    28b8:	a8000022 	stmdage	r0, {r1, r5}
    28bc:	2d000022 	stccs	0, cr0, [r0, #-136]	; 0xffffff78
    28c0:	00667562 	rsbeq	r7, r6, r2, ror #10
    28c4:	4c5fc701 	mrrcmi	7, 0, ip, pc, cr1	; <UNPREDICTABLE>
    28c8:	ce000002 	cdpgt	0, 0, cr0, cr0, cr2, {0}
    28cc:	ca000022 	bgt	295c <__HEAP_SIZE+0x195c>
    28d0:	2d000022 	stccs	0, cr0, [r0, #-136]	; 0xffffff78
    28d4:	006e656c 	rsbeq	r6, lr, ip, ror #10
    28d8:	ee6bc701 	cdp	7, 6, cr12, cr11, cr1, {0}
    28dc:	f2000000 	vhadd.s8	d0, d0, d0
    28e0:	ee000022 	cdp	0, 0, cr0, cr0, cr2, {1}
    28e4:	2e000022 	cdpcs	0, 0, cr0, cr0, cr2, {1}
    28e8:	000006f8 	strdeq	r0, [r0], -r8
    28ec:	307dc701 	rsbscc	ip, sp, r1, lsl #14
    28f0:	15000000 	strne	r0, [r0, #-0]
    28f4:	11000023 	tstne	r0, r3, lsr #32
    28f8:	2e000023 	cdpcs	0, 0, cr0, cr0, cr3, {1}
    28fc:	00000626 	andeq	r0, r0, r6, lsr #12
    2900:	3091c701 	addscc	ip, r1, r1, lsl #14
    2904:	39000000 	stmdbcc	r0, {}	; <UNPREDICTABLE>
    2908:	35000023 	strcc	r0, [r0, #-35]	; 0xffffffdd
    290c:	2f000023 	svccs	0x00000023
    2910:	00000579 	andeq	r0, r0, r9, ror r5
    2914:	fa10c901 	blx	434d20 <__RAM_SIZE+0x334d20>
    2918:	5f000000 	svcpl	0x00000000
    291c:	59000023 	stmdbpl	r0, {r0, r1, r5}
    2920:	1e000023 	cdpne	0, 0, cr0, cr0, cr3, {1}
    2924:	000000a8 	andeq	r0, r0, r8, lsr #1
    2928:	0000189d 	muleq	r0, sp, r8
    292c:	01006930 	tsteq	r0, r0, lsr r9
    2930:	00ee11cd 	rsceq	r1, lr, sp, asr #3
    2934:	238e0000 	orrcs	r0, lr, #0
    2938:	238c0000 	orrcs	r0, ip, #0
    293c:	62220000 	eorvs	r0, r2, #0
    2940:	1610000a 	ldrne	r0, [r0], -sl
    2944:	08025001 	stmdaeq	r2, {r0, ip, lr}
    2948:	51011620 	tstpl	r1, r0, lsr #12
    294c:	16007602 	strne	r7, [r0], -r2, lsl #12
    2950:	7b025201 	blvc	9715c <__HEAP_SIZE+0x9615c>
    2954:	5301167f 	movwpl	r1, #5759	; 0x167f
    2958:	00007702 	andeq	r7, r0, r2, lsl #14
    295c:	0a802100 	beq	fe00ad64 <__StackTop+0xc5f0ad64>
    2960:	18b91000 	ldmne	r9!, {ip}
    2964:	01160000 	tsteq	r6, r0
    2968:	00760251 	rsbseq	r0, r6, r1, asr r2
    296c:	02520116 	subseq	r0, r2, #-2147483643	; 0x80000005
    2970:	01167f78 	tsteq	r6, r8, ror pc
    2974:	00770253 	rsbseq	r0, r7, r3, asr r2
    2978:	0aa82200 	beq	fea0b180 <__StackTop+0xc690b180>
    297c:	01161000 	tsteq	r6, r0
    2980:	20080250 	andcs	r0, r8, r0, asr r2
    2984:	02510116 	subseq	r0, r1, #-2147483643	; 0x80000005
    2988:	01160076 	tsteq	r6, r6, ror r0
    298c:	7f740252 	svcvc	0x00740252
    2990:	02530116 	subseq	r0, r3, #-2147483643	; 0x80000005
    2994:	00000077 	andeq	r0, r0, r7, ror r0
    2998:	00064231 	andeq	r4, r6, r1, lsr r2
    299c:	15bc0100 	ldrne	r0, [ip, #256]!	; 0x100
    29a0:	00003001 	andeq	r3, r0, r1
    29a4:	000a0a00 	andeq	r0, sl, r0, lsl #20
    29a8:	000a2e10 	andeq	r2, sl, r0, lsl lr
    29ac:	007d0210 	rsbseq	r0, sp, r0, lsl r2
    29b0:	00194001 	andseq	r4, r9, r1
    29b4:	74732d00 	ldrbtvc	r2, [r3], #-3328	; 0xfffff300
    29b8:	bc010072 	stclt	0, cr0, [r1], {114}	; 0x72
    29bc:	00194028 	andseq	r4, r9, r8, lsr #32
    29c0:	0023a500 	eoreq	sl, r3, r0, lsl #10
    29c4:	0023a100 	eoreq	sl, r3, r0, lsl #2
    29c8:	00693000 	rsbeq	r3, r9, r0
    29cc:	3010be01 	andscc	fp, r0, r1, lsl #28
    29d0:	c9000000 	stmdbgt	r0, {}	; <UNPREDICTABLE>
    29d4:	c3000023 	movwgt	r0, #35	; 0x23
    29d8:	32000023 	andcc	r0, r0, #35	; 0x23
    29dc:	00001946 	andeq	r1, r0, r6, asr #18
    29e0:	10000a24 	andne	r0, r0, r4, lsr #20
    29e4:	0a240000 	beq	9029ec <__RAM_SIZE+0x8029ec>
    29e8:	0a281000 	beq	a069f0 <__RAM_SIZE+0x9069f0>
    29ec:	bf011000 	svclt	0x00011000
    29f0:	1958240a 	ldmdbne	r8, {r1, r3, sl, sp}^
    29f4:	23f70000 	mvnscs	r0, #0
    29f8:	23f30000 	mvnscs	r0, #0
    29fc:	00000000 	andeq	r0, r0, r0
    2a00:	024c0409 	subeq	r0, ip, #150994944	; 0x9000000
    2a04:	76330000 	ldrtvc	r0, [r3], -r0
    2a08:	01000006 	tsteq	r0, r6
    2a0c:	7d0114b5 	cfstrsvc	mvf1, [r1, #-724]	; 0xfffffd2c
    2a10:	0300000b 	movweq	r0, #11
    2a14:	00001964 	andeq	r1, r0, r4, ror #18
    2a18:	00686334 	rsbeq	r6, r8, r4, lsr r3
    2a1c:	3323b501 			; <UNDEFINED> instruction: 0x3323b501
    2a20:	00000001 	andeq	r0, r0, r1
    2a24:	00064833 	andeq	r4, r6, r3, lsr r8
    2a28:	1cab0100 	stfnes	f0, [fp]
    2a2c:	00003001 	andeq	r3, r0, r1
    2a30:	19990300 	ldmibne	r9, {r8, r9}
    2a34:	73340000 	teqvc	r4, #0
    2a38:	01007274 	tsteq	r0, r4, ror r2
    2a3c:	024c33ab 	subeq	r3, ip, #-1409286142	; 0xac000002
    2a40:	42350000 	eorsmi	r0, r5, #0
    2a44:	01000005 	tsteq	r0, r5
    2a48:	00ee3fab 	rsceq	r3, lr, fp, lsr #31
    2a4c:	73360000 	teqvc	r6, #0
    2a50:	0fad0100 	svceq	0x00ad0100
    2a54:	0000024c 	andeq	r0, r0, ip, asr #4
    2a58:	05623700 	strbeq	r3, [r2, #-1792]!	; 0xfffff900
    2a5c:	9f010000 	svcls	0x00010000
    2a60:	00000114 	andeq	r0, r0, r4, lsl r1
    2a64:	00000000 	andeq	r0, r0, r0
    2a68:	24170000 	ldrcs	r0, [r7], #-0
    2a6c:	04010000 	streq	r0, [r1], #-0
    2a70:	2e00001a 	mcrcs	0, 0, r0, cr0, cr10, {0}
    2a74:	000006a0 	andeq	r0, r0, r0, lsr #13
    2a78:	33229f01 			; <UNDEFINED> instruction: 0x33229f01
    2a7c:	49000001 	stmdbmi	r0, {r0}
    2a80:	43000024 	movwmi	r0, #36	; 0x24
    2a84:	2e000024 	cdpcs	0, 0, cr0, cr0, cr4, {1}
    2a88:	000004fd 	strdeq	r0, [r0], -sp
    2a8c:	e0339f01 	eors	r9, r3, r1, lsl #30
    2a90:	7b000000 	blvc	2a98 <__HEAP_SIZE+0x1a98>
    2a94:	75000024 	strvc	r0, [r0, #-36]	; 0xffffffdc
    2a98:	2d000024 	stccs	0, cr0, [r0, #-144]	; 0xffffff70
    2a9c:	00786469 	rsbseq	r6, r8, r9, ror #8
    2aa0:	ee429f01 	cdp	15, 4, cr9, cr2, cr1, {0}
    2aa4:	ad000000 	stcge	0, cr0, [r0, #-0]
    2aa8:	a7000024 	strge	r0, [r0, -r4, lsr #32]
    2aac:	2e000024 	cdpcs	0, 0, cr0, cr0, cr4, {1}
    2ab0:	0000063b 	andeq	r0, r0, fp, lsr r6
    2ab4:	ee4e9f01 	cdp	15, 4, cr9, cr14, cr1, {0}
    2ab8:	df000000 	svcle	0x00000000
    2abc:	d9000024 	stmdble	r0, {r2, r5}
    2ac0:	00000024 	andeq	r0, r0, r4, lsr #32
    2ac4:	00053838 	andeq	r3, r5, r8, lsr r8
    2ac8:	14950100 	ldrne	r0, [r5], #256	; 0x100
    2acc:	001b4801 	andseq	r4, fp, r1, lsl #16
    2ad0:	001b5410 	andseq	r5, fp, r0, lsl r4
    2ad4:	00250b10 	eoreq	r0, r5, r0, lsl fp
    2ad8:	1a780100 	bne	1e02ee0 <__RAM_SIZE+0x1d02ee0>
    2adc:	a02e0000 	eorge	r0, lr, r0
    2ae0:	01000006 	tsteq	r0, r6
    2ae4:	01332395 	teqeq	r3, r5	; <illegal shifter operand>
    2ae8:	252f0000 	strcs	r0, [pc, #-0]!	; 2af0 <__HEAP_SIZE+0x1af0>
    2aec:	252b0000 	strcs	r0, [fp, #-0]!
    2af0:	fd2e0000 	stc2	0, cr0, [lr, #-0]
    2af4:	01000004 	tsteq	r0, r4
    2af8:	00e03495 	smlaleq	r3, r0, r5, r4
    2afc:	25540000 	ldrbcs	r0, [r4, #-0]
    2b00:	25500000 	ldrbcs	r0, [r0, #-0]
    2b04:	692d0000 	pushvs	{}	; <UNPREDICTABLE>
    2b08:	01007864 	tsteq	r0, r4, ror #16
    2b0c:	00ee4395 	smlaleq	r4, lr, r5, r3
    2b10:	25790000 	ldrbcs	r0, [r9, #-0]!
    2b14:	25750000 	ldrbcs	r0, [r5, #-0]!
    2b18:	3b2e0000 	blcc	b82b20 <__RAM_SIZE+0xa82b20>
    2b1c:	01000006 	tsteq	r0, r6
    2b20:	00ee4f95 	smlaleq	r4, lr, r5, pc	; <UNPREDICTABLE>
    2b24:	259e0000 	ldrcs	r0, [lr]
    2b28:	259a0000 	ldrcs	r0, [sl]
    2b2c:	522b0000 	eorpl	r0, fp, #0
    2b30:	b610001b 			; <UNDEFINED> instruction: 0xb610001b
    2b34:	0000001b 	andeq	r0, r0, fp, lsl r0
    2b38:	0005e039 	andeq	lr, r5, r9, lsr r0
    2b3c:	148e0100 	strne	r0, [lr], #256	; 0x100
    2b40:	000a0801 	andeq	r0, sl, r1, lsl #16
    2b44:	000a0a10 	andeq	r0, sl, r0, lsl sl
    2b48:	007d0210 	rsbseq	r0, sp, r0, lsl r2
    2b4c:	001aca01 	andseq	ip, sl, r1, lsl #20
    2b50:	06a03a00 	strteq	r3, [r0], r0, lsl #20
    2b54:	8e010000 	cdphi	0, 0, cr0, cr1, cr0, {0}
    2b58:	00013323 	andeq	r3, r1, r3, lsr #6
    2b5c:	3a500100 	bcc	1402f64 <__RAM_SIZE+0x1302f64>
    2b60:	000004fd 	strdeq	r0, [r0], -sp
    2b64:	e0348e01 	eors	r8, r4, r1, lsl #28
    2b68:	01000000 	mrseq	r0, (UNDEF: 0)
    2b6c:	64693b51 	strbtvs	r3, [r9], #-2897	; 0xfffff4af
    2b70:	8e010078 	mcrhi	0, 0, r0, cr1, cr8, {3}
    2b74:	0000ee43 	andeq	lr, r0, r3, asr #28
    2b78:	3a520100 	bcc	1482f80 <__RAM_SIZE+0x1382f80>
    2b7c:	0000063b 	andeq	r0, r0, fp, lsr r6
    2b80:	ee4f8e01 	cdp	14, 4, cr8, cr15, cr1, {0}
    2b84:	01000000 	mrseq	r0, (UNDEF: 0)
    2b88:	f8390053 			; <UNDEFINED> instruction: 0xf8390053
    2b8c:	01000004 	tsteq	r0, r4
    2b90:	00011485 	andeq	r1, r1, r5, lsl #9
    2b94:	00000000 	andeq	r0, r0, r0
    2b98:	02000000 	andeq	r0, r0, #0
    2b9c:	1c01007d 	stcne	0, cr0, [r1], {125}	; 0x7d
    2ba0:	3a00001b 	bcc	2c14 <__HEAP_SIZE+0x1c14>
    2ba4:	000006a0 	andeq	r0, r0, r0, lsr #13
    2ba8:	33258501 			; <UNDEFINED> instruction: 0x33258501
    2bac:	01000001 	tsteq	r0, r1
    2bb0:	04fd3a50 	ldrbteq	r3, [sp], #2640	; 0xa50
    2bb4:	85010000 	strhi	r0, [r1, #-0]
    2bb8:	0000e036 	andeq	lr, r0, r6, lsr r0
    2bbc:	3b510100 	blcc	1442fc4 <__RAM_SIZE+0x1342fc4>
    2bc0:	00786469 	rsbseq	r6, r8, r9, ror #8
    2bc4:	ee458501 	cdp	5, 4, cr8, cr5, cr1, {0}
    2bc8:	01000000 	mrseq	r0, (UNDEF: 0)
    2bcc:	063b3a52 			; <UNDEFINED> instruction: 0x063b3a52
    2bd0:	85010000 	strhi	r0, [r1, #-0]
    2bd4:	0000ee51 	andeq	lr, r0, r1, asr lr
    2bd8:	00530100 	subseq	r0, r3, r0, lsl #2
    2bdc:	8501013c 	strhi	r0, [r1, #-316]	; 0xfffffec4
    2be0:	85000006 	strhi	r0, [r0, #-6]
    2be4:	3c000006 	stccc	0, cr0, [r0], {6}
    2be8:	062c0101 	strteq	r0, [ip], -r1, lsl #2
    2bec:	062c0000 	strteq	r0, [ip], -r0
    2bf0:	013c0000 	teqeq	ip, r0
    2bf4:	00070d01 	andeq	r0, r7, r1, lsl #26
    2bf8:	00070d00 	andeq	r0, r7, r0, lsl #26
    2bfc:	01013c00 	tsteq	r1, r0, lsl #24
    2c00:	000004cd 	andeq	r0, r0, sp, asr #9
    2c04:	000004cd 	andeq	r0, r0, sp, asr #9
    2c08:	5801013c 	stmdapl	r1, {r2, r3, r4, r5, r8}
    2c0c:	58000006 	stmdapl	r0, {r1, r2}
    2c10:	3c000006 	stccc	0, cr0, [r0], {6}
    2c14:	05960101 	ldreq	r0, [r6, #257]	; 0x101
    2c18:	05960000 	ldreq	r0, [r6]
    2c1c:	013c0000 	teqeq	ip, r0
    2c20:	0006b301 	andeq	fp, r6, r1, lsl #6
    2c24:	0006b300 	andeq	fp, r6, r0, lsl #6
    2c28:	01013c00 	tsteq	r1, r0, lsl #24
    2c2c:	00000550 	andeq	r0, r0, r0, asr r5
    2c30:	00000550 	andeq	r0, r0, r0, asr r5
    2c34:	1c01013c 	stfnes	f0, [r1], {60}	; 0x3c
    2c38:	1c000005 	stcne	0, cr0, [r0], {5}
    2c3c:	3c000005 	stccc	0, cr0, [r0], {5}
    2c40:	05f70101 	ldrbeq	r0, [r7, #257]!	; 0x101
    2c44:	05f70000 	ldrbeq	r0, [r7, #0]!
    2c48:	013c0000 	teqeq	ip, r0
    2c4c:	00056b01 	andeq	r6, r5, r1, lsl #22
    2c50:	00056b00 	andeq	r6, r5, r0, lsl #22
    2c54:	01013c00 	tsteq	r1, r0, lsl #24
    2c58:	00000619 	andeq	r0, r0, r9, lsl r6
    2c5c:	00000619 	andeq	r0, r0, r9, lsl r6
    2c60:	d101013c 	tstle	r1, ip, lsr r1
    2c64:	d1000006 	tstle	r0, r6
    2c68:	3c000006 	stccc	0, cr0, [r0], {6}
    2c6c:	06c00101 	strbeq	r0, [r0], r1, lsl #2
    2c70:	06c00000 	strbeq	r0, [r0], r0
    2c74:	013d0000 	teqeq	sp, r0
    2c78:	00052f01 	andeq	r2, r5, r1, lsl #30
    2c7c:	00052f00 	andeq	r2, r5, r0, lsl #30
    2c80:	05310700 	ldreq	r0, [r1, #-1792]!	; 0xfffff900
    2c84:	00024f00 	andeq	r4, r2, r0, lsl #30
    2c88:	c2000200 	andgt	r0, r0, #0, 4
    2c8c:	04000006 	streq	r0, [r0], #-6
    2c90:	00018901 	andeq	r8, r1, r1, lsl #18
    2c94:	07410c00 	strbeq	r0, [r1, -r0, lsl #24]
    2c98:	038d0000 	orreq	r0, sp, #0
    2c9c:	01f80000 	mvnseq	r0, r0
	...
    2ca8:	18c30000 	stmiane	r3, {}^	; <UNPREDICTABLE>
    2cac:	01020000 	mrseq	r0, (UNDEF: 2)
    2cb0:	00027306 	andeq	r7, r2, r6, lsl #6
    2cb4:	017f0300 	cmneq	pc, r0, lsl #6
    2cb8:	2b020000 	blcs	82cc0 <__HEAP_SIZE+0x81cc0>
    2cbc:	00003c18 	andeq	r3, r0, r8, lsl ip
    2cc0:	08010200 	stmdaeq	r1, {r9}
    2cc4:	00000271 	andeq	r0, r0, r1, ror r2
    2cc8:	32050202 	andcc	r0, r5, #536870912	; 0x20000000
    2ccc:	02000000 	andeq	r0, r0, #0
    2cd0:	03220702 			; <UNDEFINED> instruction: 0x03220702
    2cd4:	04020000 	streq	r0, [r2], #-0
    2cd8:	00012c05 	andeq	r2, r1, r5, lsl #24
    2cdc:	006f0300 	rsbeq	r0, pc, r0, lsl #6
    2ce0:	4f020000 	svcmi	0x00020000
    2ce4:	00006419 	andeq	r6, r0, r9, lsl r4
    2ce8:	07040200 	streq	r0, [r4, -r0, lsl #4]
    2cec:	000002ca 	andeq	r0, r0, sl, asr #5
    2cf0:	27050802 	strcs	r0, [r5, -r2, lsl #16]
    2cf4:	02000001 	andeq	r0, r0, #1
    2cf8:	02c50708 	sbceq	r0, r5, #8, 14	; 0x200000
    2cfc:	04040000 	streq	r0, [r4], #-0
    2d00:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    2d04:	07040200 	streq	r0, [r4, -r0, lsl #4]
    2d08:	000002cf 	andeq	r0, r0, pc, asr #5
    2d0c:	00050c03 	andeq	r0, r5, r3, lsl #24
    2d10:	17d10300 	ldrbne	r0, [r1, r0, lsl #6]
    2d14:	00000080 	andeq	r0, r0, r0, lsl #1
    2d18:	63040802 	movwvs	r0, #18434	; 0x4802
    2d1c:	02000000 	andeq	r0, r0, #0
    2d20:	027a0801 	rsbseq	r0, sl, #65536	; 0x10000
    2d24:	9a050000 	bls	142d2c <__RAM_SIZE+0x42d2c>
    2d28:	06000000 	streq	r0, [r0], -r0
    2d2c:	0000a104 	andeq	sl, r0, r4, lsl #2
    2d30:	01810300 	orreq	r0, r1, r0, lsl #6
    2d34:	18040000 	stmdane	r4, {}	; <UNPREDICTABLE>
    2d38:	00003013 	andeq	r3, r0, r3, lsl r0
    2d3c:	00710300 	rsbseq	r0, r1, r0, lsl #6
    2d40:	30040000 	andcc	r0, r4, r0
    2d44:	00005814 	andeq	r5, r0, r4, lsl r8
    2d48:	5b010700 	blpl	44950 <__HEAP_SIZE+0x43950>
    2d4c:	01000007 	tsteq	r0, r7
    2d50:	8701083f 	smladxhi	r1, pc, r8, r0	; <UNPREDICTABLE>
	...
    2d5c:	bf000000 	svclt	0x00000000
    2d60:	01000025 	tsteq	r0, r5, lsr #32
    2d64:	0000013b 	andeq	r0, r0, fp, lsr r1
    2d68:	0004fd08 	andeq	pc, r4, r8, lsl #26
    2d6c:	1b3f0100 	blne	fc3174 <__RAM_SIZE+0xec3174>
    2d70:	0000013b 	andeq	r0, r0, fp, lsr r1
    2d74:	000025e3 	andeq	r2, r0, r3, ror #11
    2d78:	000025df 	ldrdeq	r2, [r0], -pc	; <UNPREDICTABLE>
    2d7c:	00054508 	andeq	r4, r5, r8, lsl #10
    2d80:	2a3f0100 	bcs	fc3188 <__RAM_SIZE+0xec3188>
    2d84:	00000087 	andeq	r0, r0, r7, lsl #1
    2d88:	00002605 	andeq	r2, r0, r5, lsl #12
    2d8c:	00002601 	andeq	r2, r0, r1, lsl #12
    2d90:	00686309 	rsbeq	r6, r8, r9, lsl #6
    2d94:	ac0d4001 	stcge	0, cr4, [sp], {1}
    2d98:	29000000 	stmdbcs	r0, {}	; <UNPREDICTABLE>
    2d9c:	23000026 	movwcs	r0, #38	; 0x26
    2da0:	09000026 	stmdbeq	r0, {r1, r2, r5}
    2da4:	01007469 	tsteq	r0, r9, ror #8
    2da8:	00870c41 	addeq	r0, r7, r1, asr #24
    2dac:	26570000 	ldrbcs	r0, [r7], -r0
    2db0:	26530000 	ldrbcs	r0, [r3], -r0
    2db4:	000a0000 	andeq	r0, sl, r0
    2db8:	44000000 	strmi	r0, [r0], #-0
    2dbc:	00000002 	andeq	r0, r0, r2
    2dc0:	00ac0406 	adceq	r0, ip, r6, lsl #8
    2dc4:	010b0000 	mrseq	r0, (UNDEF: 11)
    2dc8:	00000773 	andeq	r0, r0, r3, ror r7
    2dcc:	01063b01 	tsteq	r6, r1, lsl #22
	...
    2dd8:	00002676 	andeq	r2, r0, r6, ror r6
    2ddc:	00018201 	andeq	r8, r1, r1, lsl #4
    2de0:	07540800 	ldrbeq	r0, [r4, -r0, lsl #16]
    2de4:	3b010000 	blcc	42dec <__HEAP_SIZE+0x41dec>
    2de8:	0000a61c 	andeq	sl, r0, ip, lsl r6
    2dec:	00269a00 	eoreq	r9, r6, r0, lsl #20
    2df0:	00269600 	eoreq	r9, r6, r0, lsl #12
    2df4:	00000c00 	andeq	r0, r0, r0, lsl #24
    2df8:	01980000 	orrseq	r0, r8, r0
    2dfc:	010d0000 	mrseq	r0, (UNDEF: 13)
    2e00:	01f30350 	mvnseq	r0, r0, asr r3
    2e04:	0e000050 	mcreq	0, 0, r0, cr0, cr0, {2}
    2e08:	00035e01 	andeq	r5, r3, r1, lsl #28
    2e0c:	06320100 	ldrteq	r0, [r2], -r0, lsl #2
    2e10:	001bb401 	andseq	fp, fp, r1, lsl #8
    2e14:	001bd810 	andseq	sp, fp, r0, lsl r8
    2e18:	007d0210 	rsbseq	r0, sp, r0, lsl r2
    2e1c:	1b010701 	blne	44a28 <__HEAP_SIZE+0x43a28>
    2e20:	05000000 	streq	r0, [r0, #-0]
    2e24:	790105dd 	stmdbvc	r1, {r0, r2, r3, r4, r6, r7, r8, sl}
    2e28:	94000000 	strls	r0, [r0], #-0
    2e2c:	b210001b 	andslt	r0, r0, #27
    2e30:	bb10001b 	bllt	402ea4 <__RAM_SIZE+0x302ea4>
    2e34:	01000026 	tsteq	r0, r6, lsr #32
    2e38:	000001f8 	strdeq	r0, [r0], -r8
    2e3c:	00075408 	andeq	r5, r7, r8, lsl #8
    2e40:	16280100 	strtne	r0, [r8], -r0, lsl #2
    2e44:	000000a6 	andeq	r0, r0, r6, lsr #1
    2e48:	000026df 	ldrdeq	r2, [r0], -pc	; <UNPREDICTABLE>
    2e4c:	000026db 	ldrdeq	r2, [r0], -fp
    2e50:	00076d0f 	andeq	r6, r7, pc, lsl #26
    2e54:	09290100 	stmdbeq	r9!, {r8}
    2e58:	00000079 	andeq	r0, r0, r9, ror r0
    2e5c:	00002701 	andeq	r2, r0, r1, lsl #14
    2e60:	000026fd 	strdeq	r2, [r0], -sp
    2e64:	001ba00a 	andseq	sl, fp, sl
    2e68:	00021210 	andeq	r1, r2, r0, lsl r2
    2e6c:	1bae0c00 	blne	feb85e74 <__StackTop+0xc6a85e74>
    2e70:	02121000 	andseq	r1, r2, #0
    2e74:	010d0000 	mrseq	r0, (UNDEF: 13)
    2e78:	003a0150 	eorseq	r0, sl, r0, asr r1
    2e7c:	7d011000 	stcvc	0, cr1, [r1, #-0]
    2e80:	01000007 	tsteq	r0, r7
    2e84:	79010523 	stmdbvc	r1, {r0, r1, r5, r8, sl}
	...
    2e90:	02000000 	andeq	r0, r0, #0
    2e94:	1101007d 	tstne	r1, sp, ror r0
    2e98:	00052f01 	andeq	r2, r5, r1, lsl #30
    2e9c:	051d0100 	ldreq	r0, [sp, #-256]	; 0xffffff00
    2ea0:	00007901 	andeq	r7, r0, r1, lsl #18
    2ea4:	001b8000 	andseq	r8, fp, r0
    2ea8:	001b9410 	andseq	r9, fp, r0, lsl r4
    2eac:	007d0210 	rsbseq	r0, sp, r0, lsl r2
    2eb0:	00024401 	andeq	r4, r2, r1, lsl #8
    2eb4:	68631200 	stmdavs	r3!, {r9, ip}^
    2eb8:	121d0100 	andsne	r0, sp, #0, 2
    2ebc:	00000079 	andeq	r0, r0, r9, ror r0
    2ec0:	00002722 	andeq	r2, r0, r2, lsr #14
    2ec4:	00002720 	andeq	r2, r0, r0, lsr #14
    2ec8:	01011300 	mrseq	r1, SP_irq
    2ecc:	00000765 	andeq	r0, r0, r5, ror #14
    2ed0:	00000765 	andeq	r0, r0, r5, ror #14
    2ed4:	0005d905 	andeq	sp, r5, r5, lsl #18
    2ed8:	000008ae 	andeq	r0, r0, lr, lsr #17
    2edc:	08210002 	stmdaeq	r1!, {r1}
    2ee0:	01040000 	mrseq	r0, (UNDEF: 4)
    2ee4:	00000189 	andeq	r0, r0, r9, lsl #3
    2ee8:	0008620c 	andeq	r6, r8, ip, lsl #4
    2eec:	00038d00 	andeq	r8, r3, r0, lsl #26
    2ef0:	00023000 	andeq	r3, r2, r0
	...
    2efc:	001bff00 	andseq	pc, fp, r0, lsl #30
    2f00:	06010200 	streq	r0, [r1], -r0, lsl #4
    2f04:	00000273 	andeq	r0, r0, r3, ror r2
    2f08:	71080102 	tstvc	r8, r2, lsl #2
    2f0c:	02000002 	andeq	r0, r0, #2
    2f10:	00320502 	eorseq	r0, r2, r2, lsl #10
    2f14:	bb030000 	bllt	c2f1c <__HEAP_SIZE+0xc1f1c>
    2f18:	03000007 	movweq	r0, #7
    2f1c:	004a1939 	subeq	r1, sl, r9, lsr r9
    2f20:	02020000 	andeq	r0, r2, #0
    2f24:	00032207 	andeq	r2, r3, r7, lsl #4
    2f28:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
    2f2c:	0000012c 	andeq	r0, r0, ip, lsr #2
    2f30:	00006f03 	andeq	r6, r0, r3, lsl #30
    2f34:	194f0300 	stmdbne	pc, {r8, r9}^	; <UNPREDICTABLE>
    2f38:	00000064 	andeq	r0, r0, r4, rrx
    2f3c:	ca070402 	bgt	1c3f4c <__RAM_SIZE+0xc3f4c>
    2f40:	02000002 	andeq	r0, r0, #2
    2f44:	01270508 			; <UNDEFINED> instruction: 0x01270508
    2f48:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    2f4c:	0002c507 	andeq	ip, r2, r7, lsl #10
    2f50:	05040400 	streq	r0, [r4, #-1024]	; 0xfffffc00
    2f54:	00746e69 	rsbseq	r6, r4, r9, ror #28
    2f58:	cf070402 	svcgt	0x00070402
    2f5c:	05000002 	streq	r0, [r0, #-2]
    2f60:	00000080 	andeq	r0, r0, r0, lsl #1
    2f64:	00050c03 	andeq	r0, r5, r3, lsl #24
    2f68:	17d10400 	ldrbne	r0, [r1, r0, lsl #8]
    2f6c:	00000080 	andeq	r0, r0, r0, lsl #1
    2f70:	63040802 	movwvs	r0, #18434	; 0x4802
    2f74:	02000000 	andeq	r0, r0, #0
    2f78:	027a0801 	rsbseq	r0, sl, #65536	; 0x10000
    2f7c:	bd030000 	stclt	0, cr0, [r3, #-0]
    2f80:	05000007 	streq	r0, [r0, #-7]
    2f84:	003e1424 	eorseq	r1, lr, r4, lsr #8
    2f88:	71030000 	mrsvc	r0, (UNDEF: 3)
    2f8c:	05000000 	streq	r0, [r0, #-0]
    2f90:	00581430 	subseq	r1, r8, r0, lsr r4
    2f94:	3a030000 	bcc	c2f9c <__HEAP_SIZE+0xc1f9c>
    2f98:	06000008 	streq	r0, [r0], -r8
    2f9c:	00ca2328 	sbceq	r2, sl, r8, lsr #6
    2fa0:	ca060000 	bgt	182fa8 <__RAM_SIZE+0x82fa8>
    2fa4:	20000008 	andcs	r0, r0, r8
    2fa8:	4a082906 	bmi	20d3c8 <__RAM_SIZE+0x10d3c8>
    2fac:	07000001 	streq	r0, [r0, -r1]
    2fb0:	06003072 			; <UNDEFINED> instruction: 0x06003072
    2fb4:	0080122a 	addeq	r1, r0, sl, lsr #4
    2fb8:	23020000 	movwcs	r0, #8192	; 0x2000
    2fbc:	31720700 	cmncc	r2, r0, lsl #14
    2fc0:	122b0600 	eorne	r0, fp, #0, 12
    2fc4:	00000080 	andeq	r0, r0, r0, lsl #1
    2fc8:	07042302 	streq	r2, [r4, -r2, lsl #6]
    2fcc:	06003272 			; <UNDEFINED> instruction: 0x06003272
    2fd0:	0080122c 	addeq	r1, r0, ip, lsr #4
    2fd4:	23020000 	movwcs	r0, #8192	; 0x2000
    2fd8:	33720708 	cmncc	r2, #8, 14	; 0x200000
    2fdc:	122d0600 	eorne	r0, sp, #0, 12
    2fe0:	00000080 	andeq	r0, r0, r0, lsl #1
    2fe4:	070c2302 	streq	r2, [ip, -r2, lsl #6]
    2fe8:	00323172 	eorseq	r3, r2, r2, ror r1
    2fec:	80122e06 	andshi	r2, r2, r6, lsl #28
    2ff0:	02000000 	andeq	r0, r0, #0
    2ff4:	6c071023 	stcvs	0, cr1, [r7], {35}	; 0x23
    2ff8:	2f060072 	svccs	0x00060072
    2ffc:	00008012 	andeq	r8, r0, r2, lsl r0
    3000:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    3004:	00637007 	rsbeq	r7, r3, r7
    3008:	80123006 	andshi	r3, r2, r6
    300c:	02000000 	andeq	r0, r0, #0
    3010:	70071823 	andvc	r1, r7, r3, lsr #16
    3014:	06007273 			; <UNDEFINED> instruction: 0x06007273
    3018:	00801231 	addeq	r1, r0, r1, lsr r2
    301c:	23020000 	movwcs	r0, #8192	; 0x2000
    3020:	f603001c 			; <UNDEFINED> instruction: 0xf603001c
    3024:	06000007 	streq	r0, [r0], -r7
    3028:	01562334 	cmpeq	r6, r4, lsr r3
    302c:	1b060000 	blne	183034 <__RAM_SIZE+0x83034>
    3030:	20000008 	andcs	r0, r0, r8
    3034:	d6083506 	strle	r3, [r8], -r6, lsl #10
    3038:	07000001 	streq	r0, [r0, -r1]
    303c:	06003472 			; <UNDEFINED> instruction: 0x06003472
    3040:	00801236 	addeq	r1, r0, r6, lsr r2
    3044:	23020000 	movwcs	r0, #8192	; 0x2000
    3048:	35720700 	ldrbcc	r0, [r2, #-1792]!	; 0xfffff900
    304c:	12370600 	eorsne	r0, r7, #0, 12
    3050:	00000080 	andeq	r0, r0, r0, lsl #1
    3054:	07042302 	streq	r2, [r4, -r2, lsl #6]
    3058:	06003672 			; <UNDEFINED> instruction: 0x06003672
    305c:	00801238 	addeq	r1, r0, r8, lsr r2
    3060:	23020000 	movwcs	r0, #8192	; 0x2000
    3064:	37720708 	ldrbcc	r0, [r2, -r8, lsl #14]!
    3068:	12390600 	eorsne	r0, r9, #0, 12
    306c:	00000080 	andeq	r0, r0, r0, lsl #1
    3070:	070c2302 	streq	r2, [ip, -r2, lsl #6]
    3074:	06003872 			; <UNDEFINED> instruction: 0x06003872
    3078:	0080123a 	addeq	r1, r0, sl, lsr r2
    307c:	23020000 	movwcs	r0, #8192	; 0x2000
    3080:	39720710 	ldmdbcc	r2!, {r4, r8, r9, sl}^
    3084:	123b0600 	eorsne	r0, fp, #0, 12
    3088:	00000080 	andeq	r0, r0, r0, lsl #1
    308c:	07142302 	ldreq	r2, [r4, -r2, lsl #6]
    3090:	00303172 	eorseq	r3, r0, r2, ror r1
    3094:	80123c06 	andshi	r3, r2, r6, lsl #24
    3098:	02000000 	andeq	r0, r0, #0
    309c:	72071823 	andvc	r1, r7, #2293760	; 0x230000
    30a0:	06003131 			; <UNDEFINED> instruction: 0x06003131
    30a4:	0080123d 	addeq	r1, r0, sp, lsr r2
    30a8:	23020000 	movwcs	r0, #8192	; 0x2000
    30ac:	9a03001c 	bls	c3124 <__HEAP_SIZE+0xc2124>
    30b0:	06000007 	streq	r0, [r0], -r7
    30b4:	01e21c40 	mvneq	r1, r0, asr #24
    30b8:	2e060000 	cdpcs	0, 0, cr0, cr6, cr0, {0}
    30bc:	40000008 	andmi	r0, r0, r8
    30c0:	0e084106 	adfeqe	f4, f0, f6
    30c4:	08000002 	stmdaeq	r0, {r1}
    30c8:	00000827 	andeq	r0, r0, r7, lsr #16
    30cc:	4a1a4206 	bmi	6938ec <__RAM_SIZE+0x5938ec>
    30d0:	02000001 	andeq	r0, r0, #1
    30d4:	d6080023 	strle	r0, [r8], -r3, lsr #32
    30d8:	06000008 	streq	r0, [r0], -r8
    30dc:	00be1a43 	adcseq	r1, lr, r3, asr #20
    30e0:	23020000 	movwcs	r0, #8192	; 0x2000
    30e4:	b9090020 	stmdblt	r9, {r5}
    30e8:	01000008 	tsteq	r0, r8
    30ec:	0080151d 	addeq	r1, r0, sp, lsl r5
    30f0:	01010000 	mrseq	r0, (UNDEF: 1)
    30f4:	0008dd09 	andeq	sp, r8, r9, lsl #26
    30f8:	151e0100 	ldrne	r0, [lr, #-256]	; 0xffffff00
    30fc:	00000080 	andeq	r0, r0, r0, lsl #1
    3100:	c6090101 	strgt	r0, [r9], -r1, lsl #2
    3104:	01000007 	tsteq	r0, r7
    3108:	0080151f 	addeq	r1, r0, pc, lsl r5
    310c:	01010000 	mrseq	r0, (UNDEF: 1)
    3110:	0007e009 	andeq	lr, r7, r9
    3114:	15200100 	strne	r0, [r0, #-256]!	; 0xffffff00
    3118:	00000080 	andeq	r0, r0, r0, lsl #1
    311c:	4f0a0101 	svcmi	0x000a0101
    3120:	01000008 	tsteq	r0, r8
    3124:	00871771 	addeq	r1, r7, r1, ror r7
    3128:	05010000 	streq	r0, [r1, #-0]
    312c:	00856803 	addeq	r6, r5, r3, lsl #16
    3130:	07a80a38 			; <UNDEFINED> instruction: 0x07a80a38
    3134:	72010000 	andvc	r0, r1, #0
    3138:	00008717 	andeq	r8, r0, r7, lsl r7
    313c:	03050100 	movweq	r0, #20736	; 0x5100
    3140:	3800856c 	stmdacc	r0, {r2, r3, r5, r6, r8, sl, pc}
    3144:	0411010b 	ldreq	r0, [r1], #-267	; 0xfffffef5
    3148:	0c010000 	stceq	0, cr0, [r1], {-0}
    314c:	80010e01 	andhi	r0, r1, r1, lsl #28
    3150:	ac000000 	stcge	0, cr0, [r0], {-0}
    3154:	b410001e 	ldrlt	r0, [r0], #-30	; 0xffffffe2
    3158:	0210001e 	andseq	r0, r0, #30
    315c:	0c01007d 	stceq	0, cr0, [r1], {125}	; 0x7d
    3160:	0000e701 	andeq	lr, r0, r1, lsl #14
    3164:	01080100 	mrseq	r0, (UNDEF: 24)
    3168:	0080010e 	addeq	r0, r0, lr, lsl #2
    316c:	1ea40000 	cdpne	0, 10, cr0, cr4, cr0, {0}
    3170:	1eaa1000 	cdpne	0, 10, cr1, cr10, cr0, {0}
    3174:	7d021000 	stcvc	0, cr1, [r2, #-0]
    3178:	02cb0100 	sbceq	r0, fp, #0, 2
    317c:	670d0000 	strvs	r0, [sp, -r0]
    3180:	a4000008 	strge	r0, [r0], #-8
    3184:	0210001e 	andseq	r0, r0, #30
    3188:	10001ea4 	andne	r1, r0, r4, lsr #29
    318c:	10001ea8 	andne	r1, r0, r8, lsr #29
    3190:	0c010901 			; <UNDEFINED> instruction: 0x0c010901
    3194:	00087a0e 	andeq	r7, r8, lr, lsl #20
    3198:	00273700 	eoreq	r3, r7, r0, lsl #14
    319c:	00273500 	eoreq	r3, r7, r0, lsl #10
    31a0:	0f000000 	svceq	0x00000000
    31a4:	00024701 	andeq	r4, r2, r1, lsl #14
    31a8:	05dc0100 	ldrbeq	r0, [ip, #256]	; 0x100
    31ac:	00007901 	andeq	r7, r0, r1, lsl #18
    31b0:	001ca400 	andseq	sl, ip, r0, lsl #8
    31b4:	001d2010 	andseq	r2, sp, r0, lsl r0
    31b8:	00274a10 	eoreq	r4, r7, r0, lsl sl
    31bc:	03a50100 			; <UNDEFINED> instruction: 0x03a50100
    31c0:	fd100000 	ldc2	0, cr0, [r0, #-0]
    31c4:	01000004 	tsteq	r0, r4
    31c8:	03a528dc 			; <UNDEFINED> instruction: 0x03a528dc
    31cc:	27720000 	ldrbcs	r0, [r2, -r0]!
    31d0:	276a0000 	strbcs	r0, [sl, -r0]!
    31d4:	45100000 	ldrmi	r0, [r0, #-0]
    31d8:	01000005 	tsteq	r0, r5
    31dc:	008c37dc 	ldrdeq	r3, [ip], ip
    31e0:	27b10000 	ldrcs	r0, [r1, r0]!
    31e4:	27a90000 	strcs	r0, [r9, r0]!
    31e8:	f5100000 			; <UNDEFINED> instruction: 0xf5100000
    31ec:	01000000 	mrseq	r0, (UNDEF: 0)
    31f0:	03a54bdc 			; <UNDEFINED> instruction: 0x03a54bdc
    31f4:	27ee0000 	strbcs	r0, [lr, r0]!
    31f8:	27e80000 	strbcs	r0, [r8, r0]!
    31fc:	1f100000 	svcne	0x00100000
    3200:	01000004 	tsteq	r0, r4
    3204:	03a566dc 			; <UNDEFINED> instruction: 0x03a566dc
    3208:	28220000 	stmdacs	r2!, {}	; <UNPREDICTABLE>
    320c:	281a0000 	ldmdacs	sl, {}	; <UNPREDICTABLE>
    3210:	05110000 	ldreq	r0, [r1, #-0]
    3214:	01000004 	tsteq	r0, r4
    3218:	007909dd 	ldrsbteq	r0, [r9], #-157	; 0xffffff63
    321c:	285f0000 	ldmdacs	pc, {}^	; <UNPREDICTABLE>
    3220:	28590000 	ldmdacs	r9, {}^	; <UNPREDICTABLE>
    3224:	70120000 	andsvc	r0, r2, r0
    3228:	de010063 	cdple	0, 0, cr0, cr1, cr3, {3}
    322c:	00008012 	andeq	r8, r0, r2, lsl r0
    3230:	00289400 	eoreq	r9, r8, r0, lsl #8
    3234:	00288a00 	eoreq	r8, r8, r0, lsl #20
    3238:	706f1200 	rsbvc	r1, pc, r0, lsl #4
    323c:	1ade0100 	bne	ff783644 <__StackTop+0xc7683644>
    3240:	00000080 	andeq	r0, r0, r0, lsl #1
    3244:	000028dd 	ldrdeq	r2, [r0], -sp
    3248:	000028d7 	ldrdeq	r2, [r0], -r7
    324c:	00707312 	rsbseq	r7, r0, r2, lsl r3
    3250:	a523de01 	strge	sp, [r3, #-3585]!	; 0xfffff1ff
    3254:	0e000003 	cdpeq	0, 0, cr0, cr0, cr3, {0}
    3258:	08000029 	stmdaeq	r0, {r0, r3, r5}
    325c:	13000029 	movwne	r0, #41	; 0x29
    3260:	10001ce6 	andne	r1, r0, r6, ror #25
    3264:	00000784 	andeq	r0, r0, r4, lsl #15
    3268:	0000039b 	muleq	r0, fp, r3
    326c:	02500114 	subseq	r0, r0, #20, 2
    3270:	15000079 	strne	r0, [r0, #-121]	; 0xffffff87
    3274:	10001cea 	andne	r1, r0, sl, ror #25
    3278:	00000723 	andeq	r0, r0, r3, lsr #14
    327c:	80041600 	andhi	r1, r4, r0, lsl #12
    3280:	17000000 	strne	r0, [r0, -r0]
    3284:	00089001 	andeq	r9, r8, r1
    3288:	06a10100 	strteq	r0, [r1], r0, lsl #2
    328c:	001d2001 	andseq	r2, sp, r1
    3290:	001ea410 	andseq	sl, lr, r0, lsl r4
    3294:	00293910 	eoreq	r3, r9, r0, lsl r9
    3298:	06a20100 	strteq	r0, [r2], r0, lsl #2
    329c:	e2100000 	ands	r0, r0, #0
    32a0:	01000007 	tsteq	r0, r7
    32a4:	03a527a1 			; <UNDEFINED> instruction: 0x03a527a1
    32a8:	295f0000 	ldmdbcs	pc, {}^	; <UNPREDICTABLE>
    32ac:	29590000 	ldmdbcs	r9, {}^	; <UNPREDICTABLE>
    32b0:	ef100000 	svc	0x00100000
    32b4:	01000007 	tsteq	r0, r7
    32b8:	00803ba1 	addeq	r3, r0, r1, lsr #23
    32bc:	298f0000 	stmibcs	pc, {}	; <UNPREDICTABLE>
    32c0:	298b0000 	stmibcs	fp, {}	; <UNPREDICTABLE>
    32c4:	05110000 	ldreq	r0, [r1, #-0]
    32c8:	01000004 	tsteq	r0, r4
    32cc:	007909a2 	rsbseq	r0, r9, r2, lsr #19
    32d0:	29b30000 	ldmibcs	r3!, {}	; <UNPREDICTABLE>
    32d4:	29ad0000 	stmibcs	sp!, {}	; <UNPREDICTABLE>
    32d8:	6d110000 	ldcvs	0, cr0, [r1, #-0]
    32dc:	01000007 	tsteq	r0, r7
    32e0:	007914a2 	rsbseq	r1, r9, r2, lsr #9
    32e4:	29e50000 	stmibcs	r5!, {}^	; <UNPREDICTABLE>
    32e8:	29dd0000 	ldmibcs	sp, {}^	; <UNPREDICTABLE>
    32ec:	fb110000 	blx	4432f6 <__RAM_SIZE+0x3432f6>
    32f0:	01000000 	mrseq	r0, (UNDEF: 0)
    32f4:	03a513a3 			; <UNDEFINED> instruction: 0x03a513a3
    32f8:	2a420000 	bcs	1083300 <__RAM_SIZE+0xf83300>
    32fc:	2a1c0000 	bcs	703304 <__RAM_SIZE+0x603304>
    3300:	34180000 	ldrcc	r0, [r8], #-0
    3304:	01000008 	tsteq	r0, r8
    3308:	01d61aa4 	bicseq	r1, r6, r4, lsr #21
    330c:	03050000 	movweq	r0, #20480	; 0x5000
    3310:	38008570 	stmdacc	r0, {r4, r5, r6, r8, sl, pc}
    3314:	0004fd18 	andeq	pc, r4, r8, lsl sp	; <UNPREDICTABLE>
    3318:	19a50100 	stmibne	r5!, {r8}
    331c:	000006a2 	andeq	r0, r0, r2, lsr #13
    3320:	84680305 	strbthi	r0, [r8], #-773	; 0xfffffcfb
    3324:	70133800 	andsvc	r3, r3, r0, lsl #16
    3328:	8810001d 	ldmdahi	r0, {r0, r2, r3, r4}
    332c:	62000008 	andvs	r0, r0, #8
    3330:	14000004 	strne	r0, [r0], #-4
    3334:	77025001 	strvc	r5, [r2, -r1]
    3338:	76130000 	ldrvc	r0, [r3], -r0
    333c:	8810001d 	ldmdahi	r0, {r0, r2, r3, r4}
    3340:	79000008 	stmdbvc	r0, {r3}
    3344:	14000004 	strne	r0, [r0], #-4
    3348:	03055001 	movweq	r5, #20481	; 0x5001
    334c:	100059f0 	strdne	r5, [r0], -r0
    3350:	1d7c1300 	ldclne	3, cr1, [ip, #-0]
    3354:	08881000 	stmeq	r8, {ip}
    3358:	04900000 	ldreq	r0, [r0], #0
    335c:	01140000 	tsteq	r4, r0
    3360:	10030550 	andne	r0, r3, r0, asr r5
    3364:	0010005a 	andseq	r0, r0, sl, asr r0
    3368:	001d8413 	andseq	r8, sp, r3, lsl r4
    336c:	00089510 	andeq	r9, r8, r0, lsl r5
    3370:	0004a700 	andeq	sl, r4, r0, lsl #14
    3374:	50011400 	andpl	r1, r1, r0, lsl #8
    3378:	5a240305 	bpl	903f94 <__RAM_SIZE+0x803f94>
    337c:	13001000 	movwne	r1, #0
    3380:	10001d8c 	andne	r1, r0, ip, lsl #27
    3384:	00000895 	muleq	r0, r5, r8
    3388:	000004be 			; <UNDEFINED> instruction: 0x000004be
    338c:	05500114 	ldrbeq	r0, [r0, #-276]	; 0xfffffeec
    3390:	005a3803 	subseq	r3, sl, r3, lsl #16
    3394:	94130010 	ldrls	r0, [r3], #-16
    3398:	9510001d 	ldrls	r0, [r0, #-29]	; 0xffffffe3
    339c:	d5000008 	strle	r0, [r0, #-8]
    33a0:	14000004 	strne	r0, [r0], #-4
    33a4:	03055001 	movweq	r5, #20481	; 0x5001
    33a8:	10005a4c 	andne	r5, r0, ip, asr #20
    33ac:	1d9c1300 	ldcne	3, cr1, [ip]
    33b0:	08951000 	ldmeq	r5, {ip}
    33b4:	04ec0000 	strbteq	r0, [ip], #0
    33b8:	01140000 	tsteq	r4, r0
    33bc:	60030550 	andvs	r0, r3, r0, asr r5
    33c0:	0010005a 	andseq	r0, r0, sl, asr r0
    33c4:	001da413 	andseq	sl, sp, r3, lsl r4
    33c8:	00089510 	andeq	r9, r8, r0, lsl r5
    33cc:	00050300 	andeq	r0, r5, r0, lsl #6
    33d0:	50011400 	andpl	r1, r1, r0, lsl #8
    33d4:	5a740305 	bpl	1d03ff0 <__RAM_SIZE+0x1c03ff0>
    33d8:	13001000 	movwne	r1, #0
    33dc:	10001dac 	andne	r1, r0, ip, lsr #27
    33e0:	00000895 	muleq	r0, r5, r8
    33e4:	0000051a 	andeq	r0, r0, sl, lsl r5
    33e8:	05500114 	ldrbeq	r0, [r0, #-276]	; 0xfffffeec
    33ec:	005a8803 	subseq	r8, sl, r3, lsl #16
    33f0:	b4130010 	ldrlt	r0, [r3], #-16
    33f4:	9510001d 	ldrls	r0, [r0, #-29]	; 0xffffffe3
    33f8:	31000008 	tstcc	r0, r8
    33fc:	14000005 	strne	r0, [r0], #-5
    3400:	03055001 	movweq	r5, #20481	; 0x5001
    3404:	10005a9c 	mulne	r0, ip, sl
    3408:	1dbc1300 	ldcne	3, cr1, [ip]
    340c:	08951000 	ldmeq	r5, {ip}
    3410:	05480000 	strbeq	r0, [r8, #-0]
    3414:	01140000 	tsteq	r4, r0
    3418:	b0030550 	andlt	r0, r3, r0, asr r5
    341c:	0010005a 	andseq	r0, r0, sl, asr r0
    3420:	001dc413 	andseq	ip, sp, r3, lsl r4
    3424:	00089510 	andeq	r9, r8, r0, lsl r5
    3428:	00055f00 	andeq	r5, r5, r0, lsl #30
    342c:	50011400 	andpl	r1, r1, r0, lsl #8
    3430:	5ac40305 	bpl	ff10404c <__StackTop+0xc700404c>
    3434:	13001000 	movwne	r1, #0
    3438:	10001dcc 	andne	r1, r0, ip, asr #27
    343c:	00000895 	muleq	r0, r5, r8
    3440:	00000576 	andeq	r0, r0, r6, ror r5
    3444:	05500114 	ldrbeq	r0, [r0, #-276]	; 0xfffffeec
    3448:	005ad803 	subseq	sp, sl, r3, lsl #16
    344c:	d4130010 	ldrle	r0, [r3], #-16
    3450:	9510001d 	ldrls	r0, [r0, #-29]	; 0xffffffe3
    3454:	8d000008 	stchi	0, cr0, [r0, #-32]	; 0xffffffe0
    3458:	14000005 	strne	r0, [r0], #-5
    345c:	03055001 	movweq	r5, #20481	; 0x5001
    3460:	10005aec 	andne	r5, r0, ip, ror #21
    3464:	1ddc1300 	ldclne	3, cr1, [ip]
    3468:	08951000 	ldmeq	r5, {ip}
    346c:	05a40000 	streq	r0, [r4, #0]!
    3470:	01140000 	tsteq	r4, r0
    3474:	00030550 	andeq	r0, r3, r0, asr r5
    3478:	0010005b 	andseq	r0, r0, fp, asr r0
    347c:	001de413 	andseq	lr, sp, r3, lsl r4
    3480:	00089510 	andeq	r9, r8, r0, lsl r5
    3484:	0005bb00 	andeq	fp, r5, r0, lsl #22
    3488:	50011400 	andpl	r1, r1, r0, lsl #8
    348c:	5b140305 	blpl	5040a8 <__RAM_SIZE+0x4040a8>
    3490:	13001000 	movwne	r1, #0
    3494:	10001dec 	andne	r1, r0, ip, ror #27
    3498:	00000895 	muleq	r0, r5, r8
    349c:	000005d2 	ldrdeq	r0, [r0], -r2
    34a0:	05500114 	ldrbeq	r0, [r0, #-276]	; 0xfffffeec
    34a4:	005b2803 	subseq	r2, fp, r3, lsl #16
    34a8:	f4130010 			; <UNDEFINED> instruction: 0xf4130010
    34ac:	9510001d 	ldrls	r0, [r0, #-29]	; 0xffffffe3
    34b0:	e9000008 	stmdb	r0, {r3}
    34b4:	14000005 	strne	r0, [r0], #-5
    34b8:	03055001 	movweq	r5, #20481	; 0x5001
    34bc:	10005b3c 	andne	r5, r0, ip, lsr fp
    34c0:	1dfc1300 	ldclne	3, cr1, [ip]
    34c4:	08951000 	ldmeq	r5, {ip}
    34c8:	06000000 	streq	r0, [r0], -r0
    34cc:	01140000 	tsteq	r4, r0
    34d0:	50030550 	andpl	r0, r3, r0, asr r5
    34d4:	0010005b 	andseq	r0, r0, fp, asr r0
    34d8:	001e0213 	andseq	r0, lr, r3, lsl r2
    34dc:	00088810 	andeq	r8, r8, r0, lsl r8
    34e0:	00061400 	andeq	r1, r6, r0, lsl #8
    34e4:	50011400 	andpl	r1, r1, r0, lsl #8
    34e8:	00007702 	andeq	r7, r0, r2, lsl #14
    34ec:	001e0813 	andseq	r0, lr, r3, lsl r8
    34f0:	0006b210 	andeq	fp, r6, r0, lsl r2
    34f4:	00062800 	andeq	r2, r6, r0, lsl #16
    34f8:	50011400 	andpl	r1, r1, r0, lsl #8
    34fc:	00007602 	andeq	r7, r0, r2, lsl #12
    3500:	001e1613 	andseq	r1, lr, r3, lsl r6
    3504:	0002cb10 	andeq	ip, r2, r0, lsl fp
    3508:	00064c00 	andeq	r4, r6, r0, lsl #24
    350c:	50011400 	andpl	r1, r1, r0, lsl #8
    3510:	84680305 	strbthi	r0, [r8], #-773	; 0xfffffcfb
    3514:	01143800 	tsteq	r4, r0, lsl #16
    3518:	40080251 	andmi	r0, r8, r1, asr r2
    351c:	03520114 	cmpeq	r2, #20, 2
    3520:	0000c075 	andeq	ip, r0, r5, ror r0
    3524:	001e1e13 	andseq	r1, lr, r3, lsl lr
    3528:	00089510 	andeq	r9, r8, r0, lsl r5
    352c:	00066300 	andeq	r6, r6, r0, lsl #6
    3530:	50011400 	andpl	r1, r1, r0, lsl #8
    3534:	5b640305 	blpl	1904150 <__RAM_SIZE+0x1804150>
    3538:	13001000 	movwne	r1, #0
    353c:	10001e26 	andne	r1, r0, r6, lsr #28
    3540:	00000895 	muleq	r0, r5, r8
    3544:	0000067a 	andeq	r0, r0, sl, ror r6
    3548:	05500114 	ldrbeq	r0, [r0, #-276]	; 0xfffffeec
    354c:	00588003 	subseq	r8, r8, r3
    3550:	36130010 			; <UNDEFINED> instruction: 0x36130010
    3554:	9510001e 	ldrls	r0, [r0, #-30]	; 0xffffffe2
    3558:	91000008 	tstls	r0, r8
    355c:	14000006 	strne	r0, [r0], #-6
    3560:	03055001 	movweq	r5, #20481	; 0x5001
    3564:	10005880 	andne	r5, r0, r0, lsl #17
    3568:	1e421900 	vmlane.f16	s3, s4, s0	; <UNPREDICTABLE>
    356c:	08881000 	stmeq	r8, {ip}
    3570:	01140000 	tsteq	r4, r0
    3574:	00770250 	rsbseq	r0, r7, r0, asr r2
    3578:	801a0000 	andshi	r0, sl, r0
    357c:	b2000000 	andlt	r0, r0, #0
    3580:	1b000006 	blne	35a0 <__HEAP_SIZE+0x25a0>
    3584:	00000080 	andeq	r0, r0, r0, lsl #1
    3588:	a91c003f 	ldmdbge	ip, {r0, r1, r2, r3, r4, r5}
    358c:	01000008 	tsteq	r0, r8
    3590:	3c010d99 	stccc	13, cr0, [r1], {153}	; 0x99
    3594:	5410001c 	ldrpl	r0, [r0], #-28	; 0xffffffe4
    3598:	4410001c 	ldrmi	r0, [r0], #-28	; 0xffffffe4
    359c:	0100002b 	tsteq	r0, fp, lsr #32
    35a0:	00000723 	andeq	r0, r0, r3, lsr #14
    35a4:	0008ae10 	andeq	sl, r8, r0, lsl lr
    35a8:	2a990100 	bcs	fe6439b0 <__StackTop+0xc65439b0>
    35ac:	00000080 	andeq	r0, r0, r0, lsl #1
    35b0:	00002b6c 	andeq	r2, r0, ip, ror #22
    35b4:	00002b64 	andeq	r2, r0, r4, ror #22
    35b8:	08a3011d 	stmiaeq	r3!, {r0, r2, r3, r4, r8}
    35bc:	9c010000 	stcls	0, cr0, [r1], {-0}
    35c0:	f5010111 			; <UNDEFINED> instruction: 0xf5010111
    35c4:	1e000006 	cdpne	0, 0, cr0, cr0, cr6, {0}
    35c8:	00000080 	andeq	r0, r0, r0, lsl #1
    35cc:	1c481300 	mcrrne	3, 0, r1, r8, cr0
    35d0:	08951000 	ldmeq	r5, {ip}
    35d4:	07120000 	ldreq	r0, [r2, -r0]
    35d8:	01140000 	tsteq	r4, r0
    35dc:	70030550 	andvc	r0, r3, r0, asr r5
    35e0:	14100059 	ldrne	r0, [r0], #-89	; 0xffffffa7
    35e4:	74025101 	strvc	r5, [r2], #-257	; 0xfffffeff
    35e8:	4e190000 	cdpmi	0, 1, cr0, cr9, cr0, {0}
    35ec:	a310001c 	tstge	r0, #28
    35f0:	14000008 	strne	r0, [r0], #-8
    35f4:	74025001 	strvc	r5, [r2], #-1
    35f8:	1f000000 	svcne	0x00000000
    35fc:	00000786 	andeq	r0, r0, r6, lsl #15
    3600:	010d8a01 	tsteq	sp, r1, lsl #20
    3604:	0000077d 	andeq	r0, r0, sp, ror r7
    3608:	10001c04 	andne	r1, r0, r4, lsl #24
    360c:	10001c3a 	andne	r1, r0, sl, lsr ip
    3610:	01007d02 	tsteq	r0, r2, lsl #26
    3614:	0000077d 	andeq	r0, r0, sp, ror r7
    3618:	736e6920 	cmnvc	lr, #32, 18	; 0x80000
    361c:	2e8a0100 	rmfcse	f0, f2, f0
    3620:	00000080 	andeq	r0, r0, r0, lsl #1
    3624:	00002ba7 	andeq	r2, r0, r7, lsr #23
    3628:	00002ba3 	andeq	r2, r0, r3, lsr #23
    362c:	00080b11 	andeq	r0, r8, r1, lsl fp
    3630:	0e8e0100 	rmfeqe	f0, f6, f0
    3634:	000000a6 	andeq	r0, r0, r6, lsr #1
    3638:	00002bca 	andeq	r2, r0, sl, asr #23
    363c:	00002bc8 	andeq	r2, r0, r8, asr #23
    3640:	00081311 	andeq	r1, r8, r1, lsl r3
    3644:	0e8f0100 	rmfeqe	f0, f7, f0
    3648:	000000a6 	andeq	r0, r0, r6, lsr #1
    364c:	00002bf1 	strdeq	r2, [r0], -r1
    3650:	00002bdd 	ldrdeq	r2, [r0], -sp
    3654:	02010200 	andeq	r0, r1, #0, 4
    3658:	00000665 	andeq	r0, r0, r5, ror #12
    365c:	0007ce21 	andeq	ip, r7, r1, lsr #28
    3660:	157f0100 	ldrbne	r0, [pc, #-256]!	; 3568 <__HEAP_SIZE+0x2568>
    3664:	00008001 	andeq	r8, r0, r1
    3668:	001bd800 	andseq	sp, fp, r0, lsl #16
    366c:	001c0410 	andseq	r0, ip, r0, lsl r4
    3670:	002c9410 	eoreq	r9, ip, r0, lsl r4
    3674:	07f50100 	ldrbeq	r0, [r5, r0, lsl #2]!
    3678:	70200000 	eorvc	r0, r0, r0
    367c:	7f010063 	svcvc	0x00010063
    3680:	00008034 	andeq	r8, r0, r4, lsr r0
    3684:	002cc400 	eoreq	ip, ip, r0, lsl #8
    3688:	002cc000 	eoreq	ip, ip, r0
    368c:	009e1800 	addseq	r1, lr, r0, lsl #16
    3690:	80010000 	andhi	r0, r1, r0
    3694:	0007f50e 	andeq	pc, r7, lr, lsl #10
    3698:	7c910200 	lfmvc	f0, 4, [r1], {0}
    369c:	0007d911 	andeq	sp, r7, r1, lsl r9
    36a0:	12810100 	addne	r0, r1, #0, 2
    36a4:	00000080 	andeq	r0, r0, r0, lsl #1
    36a8:	00002ceb 	andeq	r2, r0, fp, ror #25
    36ac:	00002ce5 	andeq	r2, r0, r5, ror #25
    36b0:	001bde22 	andseq	sp, fp, r2, lsr #28
    36b4:	001bf410 	andseq	pc, fp, r0, lsl r4	; <UNPREDICTABLE>
    36b8:	00691210 	rsbeq	r1, r9, r0, lsl r2
    36bc:	790e8201 	stmdbvc	lr, {r0, r9, pc}
    36c0:	20000000 	andcs	r0, r0, r0
    36c4:	1c00002d 	stcne	0, cr0, [r0], {45}	; 0x2d
    36c8:	0000002d 	andeq	r0, r0, sp, lsr #32
    36cc:	00a61a00 	adceq	r1, r6, r0, lsl #20
    36d0:	08050000 	stmdaeq	r5, {}	; <UNPREDICTABLE>
    36d4:	801b0000 	andshi	r0, fp, r0
    36d8:	01000000 	mrseq	r0, (UNDEF: 0)
    36dc:	9f011700 	svcls	0x00011700
    36e0:	01000002 	tsteq	r0, r2
    36e4:	54010674 	strpl	r0, [r1], #-1652	; 0xfffff98c
    36e8:	a410001c 	ldrge	r0, [r0], #-28	; 0xffffffe4
    36ec:	3f10001c 	svccc	0x0010001c
    36f0:	0100002d 	tsteq	r0, sp, lsr #32
    36f4:	00000867 	andeq	r0, r0, r7, ror #16
    36f8:	001c6a13 	andseq	r6, ip, r3, lsl sl
    36fc:	00089510 	andeq	r9, r8, r0, lsl r5
    3700:	00083700 	andeq	r3, r8, r0, lsl #14
    3704:	50011400 	andpl	r1, r1, r0, lsl #8
    3708:	59880305 	stmibpl	r8, {r0, r2, r8, r9}
    370c:	13001000 	movwne	r1, #0
    3710:	10001c76 	andne	r1, r0, r6, ror ip
    3714:	00000895 	muleq	r0, r5, r8
    3718:	0000084e 	andeq	r0, r0, lr, asr #16
    371c:	05500114 	ldrbeq	r0, [r0, #-276]	; 0xfffffeec
    3720:	0059ac03 	subseq	sl, r9, r3, lsl #24
    3724:	7e190010 	mrcvc	0, 0, r0, cr9, cr0, {0}
    3728:	9510001c 	ldrls	r0, [r0, #-28]	; 0xffffffe4
    372c:	14000008 	strne	r0, [r0], #-8
    3730:	03055001 	movweq	r5, #20481	; 0x5001
    3734:	100059d0 	ldrdne	r5, [r0], -r0
    3738:	01510114 	cmpeq	r1, r4, lsl r1
    373c:	23000031 	movwcs	r0, #49	; 0x31
    3740:	000008c0 	andeq	r0, r0, r0, asr #17
    3744:	1f046302 	svcne	0x00046302
    3748:	0000b201 	andeq	fp, r0, r1, lsl #4
    374c:	08880300 	stmeq	r8, {r8, r9}
    3750:	e8240000 	stmda	r4!, {}	; <UNPREDICTABLE>
    3754:	02000007 	andeq	r0, r0, #7
    3758:	b20c0465 	andlt	r0, ip, #1694498816	; 0x65000000
    375c:	00000000 	andeq	r0, r0, r0
    3760:	1b010125 	blne	43bfc <__HEAP_SIZE+0x42bfc>
    3764:	11000000 	mrsne	r0, (UNDEF: 0)
    3768:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    376c:	01012600 	tsteq	r1, r0, lsl #12
    3770:	000005d9 	ldrdeq	r0, [r0], -r9
    3774:	000005d9 	ldrdeq	r0, [r0], -r9
    3778:	2605c807 	strcs	ip, [r5], -r7, lsl #16
    377c:	08a30101 	stmiaeq	r3!, {r0, r8}
    3780:	08a30000 	stmiaeq	r3!, {}	; <UNPREDICTABLE>
    3784:	9c010000 	stcls	0, cr0, [r1], {-0}
    3788:	028d0011 	addeq	r0, sp, #17
    378c:	00020000 	andeq	r0, r2, r0
    3790:	00000abe 			; <UNDEFINED> instruction: 0x00000abe
    3794:	01890104 	orreq	r0, r9, r4, lsl #2
    3798:	e40c0000 	str	r0, [ip], #-0
    379c:	8d000008 	stchi	0, cr0, [r0, #-32]	; 0xffffffe0
    37a0:	78000003 	stmdavc	r0, {r0, r1}
    37a4:	00000002 	andeq	r0, r0, r2
    37a8:	00000000 	andeq	r0, r0, r0
    37ac:	a7000000 	strge	r0, [r0, -r0]
    37b0:	02000021 	andeq	r0, r0, #33	; 0x21
    37b4:	02730601 	rsbseq	r0, r3, #1048576	; 0x100000
    37b8:	01020000 	mrseq	r0, (UNDEF: 2)
    37bc:	00027108 	andeq	r7, r2, r8, lsl #2
    37c0:	05020200 	streq	r0, [r2, #-512]	; 0xfffffe00
    37c4:	00000032 	andeq	r0, r0, r2, lsr r0
    37c8:	22070202 	andcs	r0, r7, #536870912	; 0x20000000
    37cc:	02000003 	andeq	r0, r0, #3
    37d0:	012c0504 			; <UNDEFINED> instruction: 0x012c0504
    37d4:	04020000 	streq	r0, [r2], #-0
    37d8:	0002ca07 	andeq	ip, r2, r7, lsl #20
    37dc:	05080200 	streq	r0, [r8, #-512]	; 0xfffffe00
    37e0:	00000127 	andeq	r0, r0, r7, lsr #2
    37e4:	c5070802 	strgt	r0, [r7, #-2050]	; 0xfffff7fe
    37e8:	03000002 	movweq	r0, #2
    37ec:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
    37f0:	04020074 	streq	r0, [r2], #-116	; 0xffffff8c
    37f4:	0002cf07 	andeq	ip, r2, r7, lsl #30
    37f8:	04080200 	streq	r0, [r8], #-512	; 0xfffffe00
    37fc:	00000063 	andeq	r0, r0, r3, rrx
    3800:	7a080102 	bvc	203c10 <__RAM_SIZE+0x103c10>
    3804:	04000002 	streq	r0, [r0], #-2
    3808:	0008a301 	andeq	sl, r8, r1, lsl #6
    380c:	060f0100 	streq	r0, [pc], -r0, lsl #2
    3810:	001eb401 	andseq	fp, lr, r1, lsl #8
    3814:	001fb010 	andseq	fp, pc, r0, lsl r0	; <UNPREDICTABLE>
    3818:	002d5f10 	eoreq	r5, sp, r0, lsl pc
    381c:	02750100 	rsbseq	r0, r5, #0, 2
    3820:	ae050000 	cdpge	0, 0, cr0, cr5, cr0, {0}
    3824:	01000008 	tsteq	r0, r8
    3828:	0068290f 	rsbeq	r2, r8, pc, lsl #18
    382c:	2d830000 	stccs	0, cr0, [r3]
    3830:	2d7f0000 	ldclcs	0, cr0, [pc, #-0]	; 3838 <__HEAP_SIZE+0x2838>
    3834:	be060000 	cdplt	0, 0, cr0, cr6, cr0, {0}
    3838:	7510001e 	ldrvc	r0, [r0, #-30]	; 0xffffffe2
    383c:	c3000002 	movwgt	r0, #2
    3840:	07000000 	streq	r0, [r0, -r0]
    3844:	03055001 	movweq	r5, #20481	; 0x5001
    3848:	10005b74 	andne	r5, r0, r4, ror fp
    384c:	1ec40600 	cdpne	6, 12, cr0, cr4, cr0, {0}
    3850:	02821000 	addeq	r1, r2, #0
    3854:	00da0000 	sbcseq	r0, sl, r0
    3858:	01070000 	mrseq	r0, (UNDEF: 7)
    385c:	78030550 	stmdavc	r3, {r4, r6, r8, sl}
    3860:	0010005b 	andseq	r0, r0, fp, asr r0
    3864:	001ed006 	andseq	sp, lr, r6
    3868:	00027510 	andeq	r7, r2, r0, lsl r5
    386c:	0000f100 	andeq	pc, r0, r0, lsl #2
    3870:	50010700 	andpl	r0, r1, r0, lsl #14
    3874:	5b980305 	blpl	fe604490 <__StackTop+0xc6504490>
    3878:	06001000 	streq	r1, [r0], -r0
    387c:	10001ed6 	ldrdne	r1, [r0], -r6
    3880:	00000282 	andeq	r0, r0, r2, lsl #5
    3884:	00000108 	andeq	r0, r0, r8, lsl #2
    3888:	05500107 	ldrbeq	r0, [r0, #-263]	; 0xfffffef9
    388c:	005bd003 	subseq	sp, fp, r3
    3890:	e2060010 	and	r0, r6, #16
    3894:	7510001e 	ldrvc	r0, [r0, #-30]	; 0xffffffe2
    3898:	1f000002 	svcne	0x00000002
    389c:	07000001 	streq	r0, [r0, -r1]
    38a0:	03055001 	movweq	r5, #20481	; 0x5001
    38a4:	10005bf0 	strdne	r5, [r0], -r0
    38a8:	1ee80600 	cdpne	6, 14, cr0, cr8, cr0, {0}
    38ac:	02821000 	addeq	r1, r2, #0
    38b0:	01360000 	teqeq	r6, r0
    38b4:	01070000 	mrseq	r0, (UNDEF: 7)
    38b8:	28030550 	stmdacs	r3, {r4, r6, r8, sl}
    38bc:	0010005c 	andseq	r0, r0, ip, asr r0
    38c0:	001ef406 	andseq	pc, lr, r6, lsl #8
    38c4:	00027510 	andeq	r7, r2, r0, lsl r5
    38c8:	00014d00 	andeq	r4, r1, r0, lsl #26
    38cc:	50010700 	andpl	r0, r1, r0, lsl #14
    38d0:	5c480305 	mcrrpl	3, 0, r0, r8, cr5
    38d4:	06001000 	streq	r1, [r0], -r0
    38d8:	10001efa 	strdne	r1, [r0], -sl
    38dc:	00000282 	andeq	r0, r0, r2, lsl #5
    38e0:	00000164 	andeq	r0, r0, r4, ror #2
    38e4:	05500107 	ldrbeq	r0, [r0, #-263]	; 0xfffffef9
    38e8:	005c8003 	subseq	r8, ip, r3
    38ec:	06060010 			; <UNDEFINED> instruction: 0x06060010
    38f0:	7510001f 	ldrvc	r0, [r0, #-31]	; 0xffffffe1
    38f4:	7b000002 	blvc	3904 <__HEAP_SIZE+0x2904>
    38f8:	07000001 	streq	r0, [r0, -r1]
    38fc:	03055001 	movweq	r5, #20481	; 0x5001
    3900:	10005ca0 	andne	r5, r0, r0, lsr #25
    3904:	1f0c0600 	svcne	0x000c0600
    3908:	02821000 	addeq	r1, r2, #0
    390c:	01920000 	orrseq	r0, r2, r0
    3910:	01070000 	mrseq	r0, (UNDEF: 7)
    3914:	d8030550 	stmdale	r3, {r4, r6, r8, sl}
    3918:	0010005c 	andseq	r0, r0, ip, asr r0
    391c:	001f1806 	andseq	r1, pc, r6, lsl #16
    3920:	00027510 	andeq	r7, r2, r0, lsl r5
    3924:	0001a900 	andeq	sl, r1, r0, lsl #18
    3928:	50010700 	andpl	r0, r1, r0, lsl #14
    392c:	5cf80305 	ldclpl	3, cr0, [r8], #20
    3930:	06001000 	streq	r1, [r0], -r0
    3934:	10001f1e 	andne	r1, r0, lr, lsl pc
    3938:	00000282 	andeq	r0, r0, r2, lsl #5
    393c:	000001c0 	andeq	r0, r0, r0, asr #3
    3940:	05500107 	ldrbeq	r0, [r0, #-263]	; 0xfffffef9
    3944:	005d3003 	subseq	r3, sp, r3
    3948:	2a060010 	bcs	183990 <__RAM_SIZE+0x83990>
    394c:	7510001f 	ldrvc	r0, [r0, #-31]	; 0xffffffe1
    3950:	d7000002 	strle	r0, [r0, -r2]
    3954:	07000001 	streq	r0, [r0, -r1]
    3958:	03055001 	movweq	r5, #20481	; 0x5001
    395c:	10005d50 	andne	r5, r0, r0, asr sp
    3960:	1f300600 	svcne	0x00300600
    3964:	02751000 	rsbseq	r1, r5, #0
    3968:	01ee0000 	mvneq	r0, r0
    396c:	01070000 	mrseq	r0, (UNDEF: 7)
    3970:	74030550 	strvc	r0, [r3], #-1360	; 0xfffffab0
    3974:	0010005b 	andseq	r0, r0, fp, asr r0
    3978:	001f3806 	andseq	r3, pc, r6, lsl #16
    397c:	00027510 	andeq	r7, r2, r0, lsl r5
    3980:	00020500 	andeq	r0, r2, r0, lsl #10
    3984:	50010700 	andpl	r0, r1, r0, lsl #14
    3988:	5bb40305 	blpl	fed045a4 <__StackTop+0xc6c045a4>
    398c:	06001000 	streq	r1, [r0], -r0
    3990:	10001f40 	andne	r1, r0, r0, asr #30
    3994:	00000275 	andeq	r0, r0, r5, ror r2
    3998:	0000021c 	andeq	r0, r0, ip, lsl r2
    399c:	05500107 	ldrbeq	r0, [r0, #-263]	; 0xfffffef9
    39a0:	005c0c03 	subseq	r0, ip, r3, lsl #24
    39a4:	48060010 	stmdami	r6, {r4}
    39a8:	7510001f 	ldrvc	r0, [r0, #-31]	; 0xffffffe1
    39ac:	33000002 	movwcc	r0, #2
    39b0:	07000002 	streq	r0, [r0, -r2]
    39b4:	03055001 	movweq	r5, #20481	; 0x5001
    39b8:	10005c64 	andne	r5, r0, r4, ror #24
    39bc:	1f500600 	svcne	0x00500600
    39c0:	02751000 	rsbseq	r1, r5, #0
    39c4:	024a0000 	subeq	r0, sl, #0
    39c8:	01070000 	mrseq	r0, (UNDEF: 7)
    39cc:	bc030550 	cfstr32lt	mvfx0, [r3], {80}	; 0x50
    39d0:	0010005c 	andseq	r0, r0, ip, asr r0
    39d4:	001f5806 	andseq	r5, pc, r6, lsl #16
    39d8:	00027510 	andeq	r7, r2, r0, lsl r5
    39dc:	00026100 	andeq	r6, r2, r0, lsl #2
    39e0:	50010700 	andpl	r0, r1, r0, lsl #14
    39e4:	5d140305 	ldcpl	3, cr0, [r4, #-20]	; 0xffffffec
    39e8:	08001000 	stmdaeq	r0, {ip}
    39ec:	10001f60 	andne	r1, r0, r0, ror #30
    39f0:	00000275 	andeq	r0, r0, r5, ror r2
    39f4:	05500107 	ldrbeq	r0, [r0, #-263]	; 0xfffffef9
    39f8:	005d6c03 	subseq	r6, sp, r3, lsl #24
    39fc:	09000010 	stmdbeq	r0, {r4}
    3a00:	001b0101 	andseq	r0, fp, r1, lsl #2
    3a04:	00110000 	andseq	r0, r1, r0
    3a08:	00020000 	andeq	r0, r2, r0
    3a0c:	d901010a 	stmdble	r1, {r1, r3, r8}
    3a10:	d9000005 	stmdble	r0, {r0, r2}
    3a14:	03000005 	movweq	r0, #5
    3a18:	cb0005c8 	blgt	5140 <__HEAP_SIZE+0x4140>
    3a1c:	02000002 	andeq	r0, r0, #2
    3a20:	000b6400 	andeq	r6, fp, r0, lsl #8
    3a24:	89010400 	stmdbhi	r1, {sl}
    3a28:	0c000001 	stceq	0, cr0, [r0], {1}
    3a2c:	000009f6 	strdeq	r0, [r0], -r6
    3a30:	0000038d 	andeq	r0, r0, sp, lsl #7
    3a34:	00000288 	andeq	r0, r0, r8, lsl #5
	...
    3a40:	000022de 	ldrdeq	r2, [r0], -lr
    3a44:	cf070402 	svcgt	0x00070402
    3a48:	03000002 	movweq	r0, #2
    3a4c:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
    3a50:	08020074 	stmdaeq	r2, {r2, r4, r5, r6}
    3a54:	00012705 	andeq	r2, r1, r5, lsl #14
    3a58:	04080200 	streq	r0, [r8], #-512	; 0xfffffe00
    3a5c:	00000063 	andeq	r0, r0, r3, rrx
    3a60:	73060102 	movwvc	r0, #24834	; 0x6102
    3a64:	02000002 	andeq	r0, r0, #2
    3a68:	02710801 	rsbseq	r0, r1, #65536	; 0x10000
    3a6c:	02020000 	andeq	r0, r2, #0
    3a70:	00003205 	andeq	r3, r0, r5, lsl #4
    3a74:	07020200 	streq	r0, [r2, -r0, lsl #4]
    3a78:	00000322 	andeq	r0, r0, r2, lsr #6
    3a7c:	2c050402 	cfstrscs	mvf0, [r5], {2}
    3a80:	04000001 	streq	r0, [r0], #-1
    3a84:	0000006f 	andeq	r0, r0, pc, rrx
    3a88:	74194f02 	ldrvc	r4, [r9], #-3842	; 0xfffff0fe
    3a8c:	02000000 	andeq	r0, r0, #0
    3a90:	02ca0704 	sbceq	r0, sl, #4, 14	; 0x100000
    3a94:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    3a98:	0002c507 	andeq	ip, r2, r7, lsl #10
    3a9c:	02040500 	andeq	r0, r4, #0, 10
    3aa0:	027a0801 	rsbseq	r0, sl, #65536	; 0x10000
    3aa4:	71040000 	mrsvc	r0, (UNDEF: 4)
    3aa8:	03000000 	movweq	r0, #0
    3aac:	00681430 	rsbeq	r1, r8, r0, lsr r4
    3ab0:	cc040000 	stcgt	0, cr0, [r4], {-0}
    3ab4:	04000009 	streq	r0, [r0], #-9
    3ab8:	00741a4b 	rsbseq	r1, r4, fp, asr #20
    3abc:	28040000 	stmdacs	r4, {}	; <UNPREDICTABLE>
    3ac0:	04000009 	streq	r0, [r0], #-9
    3ac4:	008b1a51 	addeq	r1, fp, r1, asr sl
    3ac8:	a3060000 	movwge	r0, #24576	; 0x6000
    3acc:	07000000 	streq	r0, [r0, -r0]
    3ad0:	0000094f 	andeq	r0, r0, pc, asr #18
    3ad4:	08900514 	ldmeq	r0, {r2, r4, r8, sl}
    3ad8:	0000010d 	andeq	r0, r0, sp, lsl #2
    3adc:	00093308 	andeq	r3, r9, r8, lsl #6
    3ae0:	24930500 	ldrcs	r0, [r3], #1280	; 0x500
    3ae4:	000000a3 	andeq	r0, r0, r3, lsr #1
    3ae8:	08002302 	stmdaeq	r0, {r1, r8, r9, sp}
    3aec:	0000099c 	muleq	r0, ip, r9
    3af0:	0d2d9405 	cfstrseq	mvf9, [sp, #-20]!	; 0xffffffec
    3af4:	02000001 	andeq	r0, r0, #1
    3af8:	eb080423 	bl	204b8c <__RAM_SIZE+0x104b8c>
    3afc:	05000009 	streq	r0, [r0, #-9]
    3b00:	010d2d95 			; <UNDEFINED> instruction: 0x010d2d95
    3b04:	23020000 	movwcs	r0, #8192	; 0x2000
    3b08:	09470808 	stmdbeq	r7, {r3, fp}^
    3b0c:	96050000 	strls	r0, [r5], -r0
    3b10:	0000820c 	andeq	r8, r0, ip, lsl #4
    3b14:	0c230200 	sfmeq	f0, 4, [r3], #-0
    3b18:	00091c08 	andeq	r1, r9, r8, lsl #24
    3b1c:	28970500 	ldmcs	r7, {r8, sl}
    3b20:	0000014e 	andeq	r0, r0, lr, asr #2
    3b24:	00102302 	andseq	r2, r0, r2, lsl #6
    3b28:	00b40409 	adcseq	r0, r4, r9, lsl #8
    3b2c:	1e070000 	cdpne	0, 0, cr0, cr7, cr0, {0}
    3b30:	1c00000a 	stcne	0, cr0, [r0], {10}
    3b34:	4e10ac05 	cdpmi	12, 1, cr10, cr0, cr5, {0}
    3b38:	08000001 	stmdaeq	r0, {r0}
    3b3c:	0000097d 	andeq	r0, r0, sp, ror r9
    3b40:	9725af05 	strls	sl, [r5, -r5, lsl #30]!
    3b44:	02000000 	andeq	r0, r0, #0
    3b48:	e3080023 	movw	r0, #32803	; 0x8023
    3b4c:	05000009 	streq	r0, [r0, #-9]
    3b50:	016c26b0 	strheq	r2, [ip, #-96]!	; 0xffffffa0
    3b54:	23020000 	movwcs	r0, #8192	; 0x2000
    3b58:	093e0804 	ldmdbeq	lr!, {r2, fp}
    3b5c:	b1050000 	mrslt	r0, (UNDEF: 5)
    3b60:	00016014 	andeq	r6, r1, r4, lsl r0
    3b64:	08230200 	stmdaeq	r3!, {r9}
    3b68:	13040900 	movwne	r0, #18688	; 0x4900
    3b6c:	04000001 	streq	r0, [r0], #-1
    3b70:	00001945 	andeq	r1, r0, r5, asr #18
    3b74:	b41b9a05 	ldrlt	r9, [fp], #-2565	; 0xfffff5fb
    3b78:	04000000 	streq	r0, [r0], #-0
    3b7c:	00000b78 	andeq	r0, r0, r8, ror fp
    3b80:	b424a605 	strtlt	sl, [r4], #-1541	; 0xfffff9fb
    3b84:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    3b88:	00015404 	andeq	r5, r1, r4, lsl #8
    3b8c:	016c0600 	cmneq	ip, r0, lsl #12
    3b90:	eb040000 	bl	103b98 <__RAM_SIZE+0x3b98>
    3b94:	05000013 	streq	r0, [r0, #-19]	; 0xffffffed
    3b98:	011303b3 			; <UNDEFINED> instruction: 0x011303b3
    3b9c:	010a0000 	mrseq	r0, (UNDEF: 10)
    3ba0:	00000a24 	andeq	r0, r0, r4, lsr #20
    3ba4:	010dd701 	tsteq	sp, r1, lsl #14
    3ba8:	00000097 	muleq	r0, r7, r0
    3bac:	10002002 	andne	r2, r0, r2
    3bb0:	10002026 	andne	r2, r0, r6, lsr #32
    3bb4:	01007d02 	tsteq	r0, r2, lsl #26
    3bb8:	000001ca 	andeq	r0, r0, sl, asr #3
    3bbc:	00095a0b 	andeq	r5, r9, fp, lsl #20
    3bc0:	2ed70100 	cdpcs	1, 13, cr0, cr7, cr0, {0}
    3bc4:	00000172 	andeq	r0, r0, r2, ror r1
    3bc8:	00002da7 	andeq	r2, r0, r7, lsr #27
    3bcc:	00002da1 	andeq	r2, r0, r1, lsr #27
    3bd0:	000a170c 	andeq	r1, sl, ip, lsl #14
    3bd4:	14db0100 	ldrbne	r0, [fp], #256	; 0x100
    3bd8:	000001d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    3bdc:	00002dd5 	ldrdeq	r2, [r0], -r5
    3be0:	00002dd3 	ldrdeq	r2, [r0], -r3
    3be4:	77040900 	strvc	r0, [r4, -r0, lsl #18]
    3be8:	06000001 	streq	r0, [r0], -r1
    3bec:	000001ca 	andeq	r0, r0, sl, asr #3
    3bf0:	0a3f010d 	beq	fc402c <__RAM_SIZE+0xec402c>
    3bf4:	8b010000 	blhi	43bfc <__HEAP_SIZE+0x42bfc>
    3bf8:	1fd00106 	svcne	0x00d00106
    3bfc:	20021000 	andcs	r1, r2, r0
    3c00:	2de81000 	stclcs	0, cr1, [r8]
    3c04:	35010000 	strcc	r0, [r1, #-0]
    3c08:	0e000002 	cdpeq	0, 0, cr0, cr0, cr2, {0}
    3c0c:	00000a17 	andeq	r0, r0, r7, lsl sl
    3c10:	d0228b01 	eorle	r8, r2, r1, lsl #22
    3c14:	01000001 	tsteq	r0, r1
    3c18:	0a310e50 	beq	c47560 <__RAM_SIZE+0xb47560>
    3c1c:	8c010000 	stchi	0, cr0, [r1], {-0}
    3c20:	00017226 	andeq	r7, r1, r6, lsr #4
    3c24:	0c510100 	ldfeqe	f0, [r1], {-0}
    3c28:	000009d8 	ldrdeq	r0, [r0], -r8
    3c2c:	6c128e01 	ldcvs	14, cr8, [r2], {1}
    3c30:	26000001 	strcs	r0, [r0], -r1
    3c34:	2000002e 	andcs	r0, r0, lr, lsr #32
    3c38:	0c00002e 	stceq	0, cr0, [r0], {46}	; 0x2e
    3c3c:	000009b3 			; <UNDEFINED> instruction: 0x000009b3
    3c40:	af168f01 	svcge	0x00168f01
    3c44:	53000000 	movwpl	r0, #0
    3c48:	4f00002e 	svcmi	0x0000002e
    3c4c:	0000002e 	andeq	r0, r0, lr, lsr #32
    3c50:	098d010f 	stmibeq	sp, {r0, r1, r2, r3, r8}
    3c54:	69010000 	stmdbvs	r1, {}	; <UNPREDICTABLE>
    3c58:	00000106 	andeq	r0, r0, r6, lsl #2
    3c5c:	00000000 	andeq	r0, r0, r0
    3c60:	7d020000 	stcvc	0, cr0, [r2, #-0]
    3c64:	02800100 	addeq	r0, r0, #0, 2
    3c68:	170e0000 	strne	r0, [lr, -r0]
    3c6c:	0100000a 	tsteq	r0, sl
    3c70:	01d02569 	bicseq	r2, r0, r9, ror #10
    3c74:	50010000 	andpl	r0, r1, r0
    3c78:	000a310e 	andeq	r3, sl, lr, lsl #2
    3c7c:	296a0100 	stmdbcs	sl!, {r8}^
    3c80:	00000172 	andeq	r0, r0, r2, ror r1
    3c84:	e30c5101 	movw	r5, #49409	; 0xc101
    3c88:	01000009 	tsteq	r0, r9
    3c8c:	0172186c 	cmneq	r2, ip, ror #16
    3c90:	2e730000 	cdpcs	0, 7, cr0, cr3, cr0, {0}
    3c94:	2e710000 	cdpcs	0, 7, cr0, cr1, cr0, {0}
    3c98:	0f000000 	svceq	0x00000000
    3c9c:	00096901 	andeq	r6, r9, r1, lsl #18
    3ca0:	06590100 	ldrbeq	r0, [r9], -r0, lsl #2
    3ca4:	001fca01 	andseq	ip, pc, r1, lsl #20
    3ca8:	001fd010 	andseq	sp, pc, r0, lsl r0	; <UNPREDICTABLE>
    3cac:	007d0210 	rsbseq	r0, sp, r0, lsl r2
    3cb0:	0002a901 	andeq	sl, r2, r1, lsl #18
    3cb4:	09c50e00 	stmibeq	r5, {r9, sl, fp}^
    3cb8:	59010000 	stmdbpl	r1, {}	; <UNPREDICTABLE>
    3cbc:	0001722e 	andeq	r7, r1, lr, lsr #4
    3cc0:	00500100 	subseq	r0, r0, r0, lsl #2
    3cc4:	09a30110 	stmibeq	r3!, {r4, r8}
    3cc8:	31010000 	mrscc	r0, (UNDEF: 1)
    3ccc:	1fb00106 	svcne	0x00b00106
    3cd0:	1fca1000 	svcne	0x00ca1000
    3cd4:	7d021000 	stcvc	0, cr1, [r2, #-0]
    3cd8:	170e0100 	strne	r0, [lr, -r0, lsl #2]
    3cdc:	0100000a 	tsteq	r0, sl
    3ce0:	01d02631 	bicseq	r2, r0, r1, lsr r6
    3ce4:	50010000 	andpl	r0, r1, r0
    3ce8:	24bd0000 	ldrtcs	r0, [sp], #0
    3cec:	00020000 	andeq	r0, r2, r0
    3cf0:	00000c81 	andeq	r0, r0, r1, lsl #25
    3cf4:	01890104 	orreq	r0, r9, r4, lsl #2
    3cf8:	560c0000 	strpl	r0, [ip], -r0
    3cfc:	8d00000e 	stchi	0, cr0, [r0, #-56]	; 0xffffffc8
    3d00:	90000003 	andls	r0, r0, r3
    3d04:	00000003 	andeq	r0, r0, r3
    3d08:	00000000 	andeq	r0, r0, r0
    3d0c:	7b000000 	blvc	3d14 <__HEAP_SIZE+0x2d14>
    3d10:	02000026 	andeq	r0, r0, #38	; 0x26
    3d14:	0000050c 	andeq	r0, r0, ip, lsl #10
    3d18:	3517d102 	ldrcc	sp, [r7, #-258]	; 0xfffffefe
    3d1c:	03000000 	movweq	r0, #0
    3d20:	02cf0704 	sbceq	r0, pc, #4, 14	; 0x100000
    3d24:	04040000 	streq	r0, [r4], #-0
    3d28:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    3d2c:	05080300 	streq	r0, [r8, #-768]	; 0xfffffd00
    3d30:	00000127 	andeq	r0, r0, r7, lsr #2
    3d34:	63040803 	movwvs	r0, #18435	; 0x4803
    3d38:	02000000 	andeq	r0, r0, #0
    3d3c:	000010d4 	ldrdeq	r1, [r0], -r4
    3d40:	5d172903 	vldrpl.16	s4, [r7, #-6]	; <UNPREDICTABLE>
    3d44:	03000000 	movweq	r0, #0
    3d48:	02730601 	rsbseq	r0, r3, #1048576	; 0x100000
    3d4c:	7f020000 	svcvc	0x00020000
    3d50:	03000001 	movweq	r0, #1
    3d54:	0070182b 	rsbseq	r1, r0, fp, lsr #16
    3d58:	01030000 	mrseq	r0, (UNDEF: 3)
    3d5c:	00027108 	andeq	r7, r2, r8, lsl #2
    3d60:	05020300 	streq	r0, [r2, #-768]	; 0xfffffd00
    3d64:	00000032 	andeq	r0, r0, r2, lsr r0
    3d68:	22070203 	andcs	r0, r7, #805306368	; 0x30000000
    3d6c:	03000003 	movweq	r0, #3
    3d70:	012c0504 			; <UNDEFINED> instruction: 0x012c0504
    3d74:	6f020000 	svcvs	0x00020000
    3d78:	03000000 	movweq	r0, #0
    3d7c:	0098194f 	addseq	r1, r8, pc, asr #18
    3d80:	04030000 	streq	r0, [r3], #-0
    3d84:	0002ca07 	andeq	ip, r2, r7, lsl #20
    3d88:	07080300 	streq	r0, [r8, -r0, lsl #6]
    3d8c:	000002c5 	andeq	r0, r0, r5, asr #5
    3d90:	a6060405 	strge	r0, [r6], -r5, lsl #8
    3d94:	03000000 	movweq	r0, #0
    3d98:	027a0801 	rsbseq	r0, sl, #65536	; 0x10000
    3d9c:	04070000 	streq	r0, [r7], #-0
    3da0:	000000bf 	strheq	r0, [r0], -pc	; <UNPREDICTABLE>
    3da4:	0000b406 	andeq	fp, r0, r6, lsl #8
    3da8:	d6020800 	strle	r0, [r2], -r0, lsl #16
    3dac:	04000010 	streq	r0, [r0], #-16
    3db0:	00511214 	subseq	r1, r1, r4, lsl r2
    3db4:	c0090000 	andgt	r0, r9, r0
    3db8:	06000000 	streq	r0, [r0], -r0
    3dbc:	000000c0 	andeq	r0, r0, r0, asr #1
    3dc0:	00018102 	andeq	r8, r1, r2, lsl #2
    3dc4:	13180400 	tstne	r8, #0, 8
    3dc8:	00000064 	andeq	r0, r0, r4, rrx
    3dcc:	0000d606 	andeq	sp, r0, r6, lsl #12
    3dd0:	00710200 	rsbseq	r0, r1, r0, lsl #4
    3dd4:	30040000 	andcc	r0, r4, r0
    3dd8:	00008c14 	andeq	r8, r0, r4, lsl ip
    3ddc:	09cd0200 	stmibeq	sp, {r9}^
    3de0:	4a050000 	bmi	143de8 <__RAM_SIZE+0x43de8>
    3de4:	0000851a 	andeq	r8, r0, sl, lsl r5
    3de8:	00f30600 	rscseq	r0, r3, r0, lsl #12
    3dec:	cc020000 	stcgt	0, cr0, [r2], {-0}
    3df0:	05000009 	streq	r0, [r0, #-9]
    3df4:	00981a4b 	addseq	r1, r8, fp, asr #20
    3df8:	04090000 	streq	r0, [r9], #-0
    3dfc:	06000001 	streq	r0, [r0], -r1
    3e00:	00000104 	andeq	r0, r0, r4, lsl #2
    3e04:	00092802 	andeq	r2, r9, r2, lsl #16
    3e08:	1a510500 	bne	1445210 <__RAM_SIZE+0x1345210>
    3e0c:	000000e7 	andeq	r0, r0, r7, ror #1
    3e10:	00011a06 	andeq	r1, r1, r6, lsl #20
    3e14:	d6040700 	strle	r0, [r4], -r0, lsl #14
    3e18:	0a000000 	beq	3e20 <__HEAP_SIZE+0x2e20>
    3e1c:	0000122c 	andeq	r1, r0, ip, lsr #4
    3e20:	0c0c0614 	stceq	6, cr0, [ip], {20}
    3e24:	00016008 	andeq	r6, r1, r8
    3e28:	0dcd0b00 	vstreq	d16, [sp]
    3e2c:	11060000 	mrsne	r0, (UNDEF: 6)
    3e30:	011a100c 	tsteq	sl, ip
    3e34:	23020000 	movwcs	r0, #8192	; 0x2000
    3e38:	0dc30b00 	vstreq	d16, [r3]
    3e3c:	12060000 	andne	r0, r6, #0
    3e40:	01600c0c 	cmneq	r0, ip, lsl #24
    3e44:	23020000 	movwcs	r0, #8192	; 0x2000
    3e48:	a60c0004 	strge	r0, [ip], -r4
    3e4c:	70000000 	andvc	r0, r0, r0
    3e50:	0d000001 	stceq	0, cr0, [r0, #-4]
    3e54:	00000035 	andeq	r0, r0, r5, lsr r0
    3e58:	720e0003 	andvc	r0, lr, #3
    3e5c:	0600000b 	streq	r0, [r0], -fp
    3e60:	312b0c25 			; <UNDEFINED> instruction: 0x312b0c25
    3e64:	0a000001 	beq	3e70 <__HEAP_SIZE+0x2e70>
    3e68:	00000fbe 			; <UNDEFINED> instruction: 0x00000fbe
    3e6c:	0c29061c 	stceq	6, cr0, [r9], #-112	; 0xffffff90
    3e70:	0001bc10 	andeq	fp, r1, r0, lsl ip
    3e74:	0dcc0b00 	vstreq	d16, [ip]
    3e78:	2e060000 	cdpcs	0, 0, cr0, cr6, cr0, {0}
    3e7c:	0104110c 	tsteq	r4, ip, lsl #2
    3e80:	23020000 	movwcs	r0, #8192	; 0x2000
    3e84:	0dc30b00 	vstreq	d16, [r3]
    3e88:	2f060000 	svccs	0x00060000
    3e8c:	00a60c0c 	adceq	r0, r6, ip, lsl #24
    3e90:	23020000 	movwcs	r0, #8192	; 0x2000
    3e94:	0ddf0b04 	vldreq	d16, [pc, #16]	; 3eac <__HEAP_SIZE+0x2eac>
    3e98:	30060000 	andcc	r0, r6, r0
    3e9c:	01701a0c 	cmneq	r0, ip, lsl #20
    3ea0:	23020000 	movwcs	r0, #8192	; 0x2000
    3ea4:	e50e0008 	str	r0, [lr, #-8]
    3ea8:	06000013 			; <UNDEFINED> instruction: 0x06000013
    3eac:	7d030c34 	stcvc	12, cr0, [r3, #-208]	; 0xffffff30
    3eb0:	0f000001 	svceq	0x00000001
    3eb4:	0c910604 	ldceq	6, cr0, [r1], {4}
    3eb8:	0001ee05 	andeq	lr, r1, r5, lsl #28
    3ebc:	0dba1000 	ldceq	0, cr1, [sl]
    3ec0:	93060000 	movwls	r0, #24576	; 0x6000
    3ec4:	00a6100c 	adceq	r1, r6, ip
    3ec8:	cc100000 	ldcgt	0, cr0, [r0], {-0}
    3ecc:	0600000d 	streq	r0, [r0], -sp
    3ed0:	04150c94 	ldreq	r0, [r5], #-3220	; 0xfffff36c
    3ed4:	00000001 	andeq	r0, r0, r1
    3ed8:	0013ab0a 	andseq	sl, r3, sl, lsl #22
    3edc:	8d065c00 	stchi	12, cr5, [r6, #-0]
    3ee0:	026b100c 	rsbeq	r1, fp, #12
    3ee4:	b10b0000 	mrslt	r0, (UNDEF: 11)
    3ee8:	0600000d 	streq	r0, [r0], -sp
    3eec:	6b0c0c8f 	blvs	307130 <__RAM_SIZE+0x207130>
    3ef0:	02000002 	andeq	r0, r0, #2
    3ef4:	75110023 	ldrvc	r0, [r1, #-35]	; 0xffffffdd
    3ef8:	0c950600 	ldceq	6, cr0, [r5], {0}
    3efc:	0001c907 	andeq	ip, r1, r7, lsl #18
    3f00:	0c230200 	sfmeq	f0, 4, [r3], #-0
    3f04:	0012f10b 	andseq	pc, r2, fp, lsl #2
    3f08:	0c970600 	ldceq	6, cr0, [r7], {0}
    3f0c:	00027b12 	andeq	r7, r2, r2, lsl fp
    3f10:	10230200 	eorne	r0, r3, r0, lsl #4
    3f14:	000dde0b 	andeq	sp, sp, fp, lsl #28
    3f18:	0c980600 	ldceq	6, cr0, [r8], {0}
    3f1c:	00028b11 	andeq	r8, r2, r1, lsl fp
    3f20:	48230200 	stmdami	r3!, {r9}
    3f24:	0011000b 	andseq	r0, r1, fp
    3f28:	0c990600 	ldceq	6, cr0, [r9], {0}
    3f2c:	00029b0d 	andeq	r9, r2, sp, lsl #22
    3f30:	54230200 	strtpl	r0, [r3], #-512	; 0xfffffe00
    3f34:	0011090b 	andseq	r0, r1, fp, lsl #18
    3f38:	0c9c0600 	ldceq	6, cr0, [ip], {0}
    3f3c:	0000d611 	andeq	sp, r0, r1, lsl r6
    3f40:	56230200 	strtpl	r0, [r3], -r0, lsl #4
    3f44:	000dd50b 	andeq	sp, sp, fp, lsl #10
    3f48:	0ca00600 	stceq	6, cr0, [r0]
    3f4c:	0000a610 	andeq	sl, r0, r0, lsl r6
    3f50:	58230200 	stmdapl	r3!, {r9}
    3f54:	00a60c00 	adceq	r0, r6, r0, lsl #24
    3f58:	027b0000 	rsbseq	r0, fp, #0
    3f5c:	350d0000 	strcc	r0, [sp, #-0]
    3f60:	02000000 	andeq	r0, r0, #0
    3f64:	01bc0c00 			; <UNDEFINED> instruction: 0x01bc0c00
    3f68:	028b0000 	addeq	r0, fp, #0
    3f6c:	350d0000 	strcc	r0, [sp, #-0]
    3f70:	01000000 	mrseq	r0, (UNDEF: 0)
    3f74:	01040c00 	tsteq	r4, r0, lsl #24
    3f78:	029b0000 	addseq	r0, fp, #0
    3f7c:	350d0000 	strcc	r0, [sp, #-0]
    3f80:	02000000 	andeq	r0, r0, #0
    3f84:	00d60c00 	sbcseq	r0, r6, r0, lsl #24
    3f88:	02ab0000 	adceq	r0, fp, #0
    3f8c:	350d0000 	strcc	r0, [sp, #-0]
    3f90:	01000000 	mrseq	r0, (UNDEF: 0)
    3f94:	0fee0e00 	svceq	0x00ee0e00
    3f98:	a7060000 	strge	r0, [r6, -r0]
    3f9c:	01ee030c 	mvneq	r0, ip, lsl #6
    3fa0:	4f120000 	svcmi	0x00120000
    3fa4:	14000009 	strne	r0, [r0], #-9
    3fa8:	11089007 	tstne	r8, r7
    3fac:	13000003 	movwne	r0, #3
    3fb0:	00000933 	andeq	r0, r0, r3, lsr r9
    3fb4:	1a249307 	bne	928bd8 <__RAM_SIZE+0x828bd8>
    3fb8:	02000001 	andeq	r0, r0, #1
    3fbc:	9c130023 	ldcls	0, cr0, [r3], {35}	; 0x23
    3fc0:	07000009 	streq	r0, [r0, -r9]
    3fc4:	03112d94 	tsteq	r1, #148, 26	; 0x2500
    3fc8:	23020000 	movwcs	r0, #8192	; 0x2000
    3fcc:	09eb1304 	stmibeq	fp!, {r2, r8, r9, ip}^
    3fd0:	95070000 	strls	r0, [r7, #-0]
    3fd4:	0003112d 	andeq	r1, r3, sp, lsr #2
    3fd8:	08230200 	stmdaeq	r3!, {r9}
    3fdc:	00094713 	andeq	r4, r9, r3, lsl r7
    3fe0:	0c960700 	ldceq	7, cr0, [r6], {0}
    3fe4:	000000a6 	andeq	r0, r0, r6, lsr #1
    3fe8:	130c2302 	movwne	r2, #49922	; 0xc302
    3fec:	0000091c 	andeq	r0, r0, ip, lsl r9
    3ff0:	52289707 	eorpl	r9, r8, #1835008	; 0x1c0000
    3ff4:	02000003 	andeq	r0, r0, #3
    3ff8:	07001023 	streq	r1, [r0, -r3, lsr #32]
    3ffc:	0002b804 	andeq	fp, r2, r4, lsl #16
    4000:	0a1e1200 	beq	788808 <__RAM_SIZE+0x688808>
    4004:	071c0000 	ldreq	r0, [ip, -r0]
    4008:	035210ac 	cmpeq	r2, #172	; 0xac
    400c:	7d130000 	ldcvc	0, cr0, [r3, #-0]
    4010:	07000009 	streq	r0, [r0, -r9]
    4014:	010425af 	smlatbeq	r4, pc, r5, r2	; <UNPREDICTABLE>
    4018:	23020000 	movwcs	r0, #8192	; 0x2000
    401c:	09e31300 	stmibeq	r3!, {r8, r9, ip}^
    4020:	b0070000 	andlt	r0, r7, r0
    4024:	00037026 	andeq	r7, r3, r6, lsr #32
    4028:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    402c:	00093e13 	andeq	r3, r9, r3, lsl lr
    4030:	14b10700 	ldrtne	r0, [r1], #1792	; 0x700
    4034:	00000364 	andeq	r0, r0, r4, ror #6
    4038:	00082302 	andeq	r2, r8, r2, lsl #6
    403c:	03170407 	tsteq	r7, #117440512	; 0x7000000
    4040:	45020000 	strmi	r0, [r2, #-0]
    4044:	07000019 	smladeq	r0, r9, r0, r0
    4048:	02b81b9a 	adcseq	r1, r8, #157696	; 0x26800
    404c:	78020000 	stmdavc	r2, {}	; <UNPREDICTABLE>
    4050:	0700000b 	streq	r0, [r0, -fp]
    4054:	02b824a6 	adcseq	r2, r8, #-1509949440	; 0xa6000000
    4058:	04070000 	streq	r0, [r7], #-0
    405c:	00000358 	andeq	r0, r0, r8, asr r3
    4060:	0013eb02 	andseq	lr, r3, r2, lsl #22
    4064:	03b30700 			; <UNDEFINED> instruction: 0x03b30700
    4068:	00000317 	andeq	r0, r0, r7, lsl r3
    406c:	0002f202 	andeq	pc, r2, r2, lsl #4
    4070:	2e5c0800 	cdpcs	8, 5, cr0, cr12, cr0, {0}
    4074:	0000038e 	andeq	r0, r0, lr, lsl #7
    4078:	03940407 	orrseq	r0, r4, #117440512	; 0x7000000
    407c:	6b140000 	blvs	504084 <__RAM_SIZE+0x404084>
    4080:	01000001 	tsteq	r0, r1
    4084:	000b1b12 	andeq	r1, fp, r2, lsl fp
    4088:	7d080800 	stcvc	8, cr0, [r8, #-0]
    408c:	0003c610 	andeq	ip, r3, r0, lsl r6
    4090:	0bcc1300 	bleq	ff308c98 <__StackTop+0xc7208c98>
    4094:	7f080000 	svcvc	0x00080000
    4098:	0000f310 	andeq	pc, r0, r0, lsl r3	; <UNPREDICTABLE>
    409c:	00230200 	eoreq	r0, r3, r0, lsl #4
    40a0:	000fde13 	andeq	sp, pc, r3, lsl lr	; <UNPREDICTABLE>
    40a4:	10800800 	addne	r0, r0, r0, lsl #16
    40a8:	0000011a 	andeq	r0, r0, sl, lsl r1
    40ac:	00042302 	andeq	r2, r4, r2, lsl #6
    40b0:	00102b02 	andseq	r2, r0, r2, lsl #22
    40b4:	03810800 	orreq	r0, r1, #0, 16
    40b8:	0000039a 	muleq	r0, sl, r3
    40bc:	000f1002 	andeq	r1, pc, r2
    40c0:	24330900 	ldrtcs	r0, [r3], #-2304	; 0xfffff700
    40c4:	000003e3 	andeq	r0, r0, r3, ror #7
    40c8:	0003d206 	andeq	sp, r3, r6, lsl #4
    40cc:	e9040700 	stmdb	r4, {r8, r9, sl}
    40d0:	12000003 	andne	r0, r0, #3
    40d4:	00000c81 	andeq	r0, r0, r1, lsl #25
    40d8:	1067015c 	rsbne	r0, r7, ip, asr r1
    40dc:	000004a9 	andeq	r0, r0, r9, lsr #9
    40e0:	00131313 	andseq	r1, r3, r3, lsl r3
    40e4:	0e690100 	poweqe	f0, f1, f0
    40e8:	000004ed 	andeq	r0, r0, sp, ror #9
    40ec:	13002302 	movwne	r2, #770	; 0x302
    40f0:	000010ca 	andeq	r1, r0, sl, asr #1
    40f4:	ed0e6a01 	vstr	s12, [lr, #-4]
    40f8:	02000004 	andeq	r0, r0, #4
    40fc:	75150423 	ldrvc	r0, [r5, #-1059]	; 0xfffffbdd
    4100:	07700100 	ldrbeq	r0, [r0, -r0, lsl #2]!
    4104:	00000537 	andeq	r0, r0, r7, lsr r5
    4108:	13082302 	movwne	r2, #33538	; 0x8302
    410c:	00000b99 	muleq	r0, r9, fp
    4110:	760c7201 	strvc	r7, [ip], -r1, lsl #4
    4114:	02000003 	andeq	r0, r0, #3
    4118:	e2131023 	ands	r1, r3, #35	; 0x23
    411c:	0100000a 	tsteq	r0, sl
    4120:	03760c73 	cmneq	r6, #29440	; 0x7300
    4124:	23020000 	movwcs	r0, #8192	; 0x2000
    4128:	0ce3132c 	stcleq	3, cr1, [r3], #176	; 0xb0
    412c:	75010000 	strvc	r0, [r1, #-0]
    4130:	0001101a 	andeq	r1, r1, sl, lsl r0
    4134:	48230200 	stmdami	r3!, {r9}
    4138:	00113213 	andseq	r3, r1, r3, lsl r2
    413c:	11760100 	cmnne	r6, r0, lsl #2
    4140:	00000104 	andeq	r0, r0, r4, lsl #2
    4144:	134c2302 	movtne	r2, #49922	; 0xc302
    4148:	00000e78 	andeq	r0, r0, r8, ror lr
    414c:	04117701 	ldreq	r7, [r1], #-1793	; 0xfffff8ff
    4150:	02000001 	andeq	r0, r0, #1
    4154:	a3135023 	tstge	r3, #35	; 0x23
    4158:	01000013 	tsteq	r0, r3, lsl r0
    415c:	00cc1579 	sbceq	r1, ip, r9, ror r5
    4160:	23020000 	movwcs	r0, #8192	; 0x2000
    4164:	0bc41354 	bleq	ff108ebc <__StackTop+0xc7008ebc>
    4168:	7a010000 	bvc	44170 <__HEAP_SIZE+0x43170>
    416c:	0000cc15 	andeq	ip, r0, r5, lsl ip
    4170:	55230200 	strpl	r0, [r3, #-512]!	; 0xfffffe00
    4174:	000e0c13 	andeq	r0, lr, r3, lsl ip
    4178:	117d0100 	cmnne	sp, r0, lsl #2
    417c:	000000d6 	ldrdeq	r0, [r0], -r6
    4180:	13562302 	cmpne	r6, #134217728	; 0x8000000
    4184:	00001376 	andeq	r1, r0, r6, ror r3
    4188:	e3228101 			; <UNDEFINED> instruction: 0xe3228101
    418c:	02000003 	andeq	r0, r0, #3
    4190:	02005823 	andeq	r5, r0, #2293760	; 0x230000
    4194:	00000d8c 	andeq	r0, r0, ip, lsl #27
    4198:	e3243a09 			; <UNDEFINED> instruction: 0xe3243a09
    419c:	02000003 	andeq	r0, r0, #3
    41a0:	00000d55 	andeq	r0, r0, r5, asr sp
    41a4:	e3244109 			; <UNDEFINED> instruction: 0xe3244109
    41a8:	12000003 	andne	r0, r0, #3
    41ac:	00000ef0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    41b0:	10440108 	subne	r0, r4, r8, lsl #2
    41b4:	000004ed 	andeq	r0, r0, sp, ror #9
    41b8:	00120313 	andseq	r0, r2, r3, lsl r3
    41bc:	0e460100 	dvfeqs	f0, f6, f0
    41c0:	000004ed 	andeq	r0, r0, sp, ror #9
    41c4:	13002302 	movwne	r2, #770	; 0x302
    41c8:	00000c23 	andeq	r0, r0, r3, lsr #24
    41cc:	ed0e4701 	stc	7, cr4, [lr, #-4]
    41d0:	02000004 	andeq	r0, r0, #4
    41d4:	07000423 	streq	r0, [r0, -r3, lsr #8]
    41d8:	0000c004 	andeq	ip, r0, r4
    41dc:	11220200 			; <UNDEFINED> instruction: 0x11220200
    41e0:	48010000 	stmdami	r1, {}	; <UNPREDICTABLE>
    41e4:	0004c103 	andeq	ip, r4, r3, lsl #2
    41e8:	0a781200 	beq	1e089f0 <__RAM_SIZE+0x1d089f0>
    41ec:	01080000 	mrseq	r0, (UNDEF: 8)
    41f0:	052b104a 	streq	r1, [fp, #-74]!	; 0xffffffb6
    41f4:	d3130000 	tstle	r3, #0
    41f8:	0100001e 	tsteq	r0, lr, lsl r0
    41fc:	0382124c 	orreq	r1, r2, #76, 4	; 0xc0000004
    4200:	23020000 	movwcs	r0, #8192	; 0x2000
    4204:	12641300 	rsbne	r1, r4, #0, 6
    4208:	4d010000 	stcmi	0, cr0, [r1, #-0]
    420c:	00010411 	andeq	r0, r1, r1, lsl r4
    4210:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    4214:	0a910200 	beq	fe444a1c <__StackTop+0xc6344a1c>
    4218:	4e010000 	cdpmi	0, 0, cr0, cr1, cr0, {0}
    421c:	0004ff03 	andeq	pc, r4, r3, lsl #30
    4220:	01081600 	tsteq	r8, r0, lsl #12
    4224:	0559056c 	ldrbeq	r0, [r9, #-1388]	; 0xfffffa94
    4228:	25170000 	ldrcs	r0, [r7, #-0]
    422c:	01000012 	tsteq	r0, r2, lsl r0
    4230:	04f3196e 	ldrbteq	r1, [r3], #2414	; 0x96e
    4234:	f5170000 			; <UNDEFINED> instruction: 0xf5170000
    4238:	0100000c 	tsteq	r0, ip
    423c:	052b196f 	streq	r1, [fp, #-2415]!	; 0xfffff691
    4240:	02000000 	andeq	r0, r0, #0
    4244:	0000136f 	andeq	r1, r0, pc, ror #6
    4248:	e9038801 	stmdb	r3, {r0, fp, pc}
    424c:	02000003 	andeq	r0, r0, #3
    4250:	00000ff4 	strdeq	r0, [r0], -r4
    4254:	59108c01 	ldmdbpl	r0, {r0, sl, fp, pc}
    4258:	06000005 	streq	r0, [r0], -r5
    425c:	00000565 	andeq	r0, r0, r5, ror #10
    4260:	000a5d18 	andeq	r5, sl, r8, lsl sp
    4264:	0cee0100 	stfeqe	f0, [lr]
    4268:	00f30117 	rscseq	r0, r3, r7, lsl r1
    426c:	20da0000 	sbcscs	r0, sl, r0
    4270:	21321000 	teqcs	r2, r0
    4274:	2e861000 	cdpcs	0, 8, cr1, cr6, cr0, {0}
    4278:	4b010000 	blmi	44280 <__HEAP_SIZE+0x43280>
    427c:	19000006 	stmdbne	r0, {r1, r2}
    4280:	00001224 	andeq	r1, r0, r4, lsr #4
    4284:	490cee01 	stmdbmi	ip, {r0, r9, sl, fp, sp, lr, pc}
    4288:	00000651 	andeq	r0, r0, r1, asr r6
    428c:	00002ed0 	ldrdeq	r2, [r0], -r0
    4290:	00002eca 	andeq	r2, r0, sl, asr #29
    4294:	0013761a 	andseq	r7, r3, sl, lsl r6
    4298:	0cf00100 	ldfeqe	f0, [r0]
    429c:	00065613 	andeq	r5, r6, r3, lsl r6
    42a0:	002efc00 	eoreq	pc, lr, r0, lsl #24
    42a4:	002efa00 	eoreq	pc, lr, r0, lsl #20
    42a8:	1a211a00 	bne	84aab0 <__RAM_SIZE+0x74aab0>
    42ac:	f1010000 	setend	le
    42b0:	00f3140c 	rscseq	r1, r3, ip, lsl #8
    42b4:	2f1d0000 	svccs	0x001d0000
    42b8:	2f0f0000 	svccs	0x000f0000
    42bc:	b81b0000 	ldmdalt	fp, {}	; <UNPREDICTABLE>
    42c0:	1a000002 	bne	42d0 <__HEAP_SIZE+0x32d0>
    42c4:	00000bc4 	andeq	r0, r0, r4, asr #23
    42c8:	1a0cfd01 	bne	3436d4 <__RAM_SIZE+0x2436d4>
    42cc:	000000d1 	ldrdeq	r0, [r0], -r1
    42d0:	00002f79 	andeq	r2, r0, r9, ror pc
    42d4:	00002f75 	andeq	r2, r0, r5, ror pc
    42d8:	0021201c 	eoreq	r2, r1, ip, lsl r0
    42dc:	00213210 	eoreq	r3, r1, r0, lsl r2
    42e0:	00061a10 	andeq	r1, r6, r0, lsl sl
    42e4:	11121a00 	tstne	r2, r0, lsl #20
    42e8:	19010000 	stmdbne	r1, {}	; <UNPREDICTABLE>
    42ec:	0115110d 	tsteq	r5, sp, lsl #2
    42f0:	2f9b0000 	svccs	0x009b0000
    42f4:	2f990000 	svccs	0x00990000
    42f8:	241d0000 	ldrcs	r0, [sp], #-0
    42fc:	70100021 	andsvc	r0, r0, r1, lsr #32
    4300:	00000023 	andeq	r0, r0, r3, lsr #32
    4304:	0021021e 	eoreq	r0, r1, lr, lsl r2
    4308:	000bfe10 	andeq	pc, fp, r0, lsl lr	; <UNPREDICTABLE>
    430c:	00063900 	andeq	r3, r6, r0, lsl #18
    4310:	50011f00 	andpl	r1, r1, r0, lsl #30
    4314:	1f007402 	svcne	0x00007402
    4318:	91025101 	tstls	r2, r1, lsl #2
    431c:	52011f6c 	andpl	r1, r1, #108, 30	; 0x1b0
    4320:	20003001 	andcs	r3, r0, r1
    4324:	10002118 	andne	r2, r0, r8, lsl r1
    4328:	0000237f 	andeq	r2, r0, pc, ror r3
    432c:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    4330:	00002c74 	andeq	r2, r0, r4, ror ip
    4334:	71040700 	tstvc	r4, r0, lsl #14
    4338:	06000005 	streq	r0, [r0], -r5
    433c:	0000064b 	andeq	r0, r0, fp, asr #12
    4340:	05650407 	strbeq	r0, [r5, #-1031]!	; 0xfffffbf9
    4344:	56060000 	strpl	r0, [r6], -r0
    4348:	21000006 	tstcs	r0, r6
    434c:	000b3e01 	andeq	r3, fp, r1, lsl #28
    4350:	0cdc0100 	ldfeqe	f0, [ip], {0}
    4354:	04b5011c 	ldrteq	r0, [r5], #284	; 0x11c
	...
    4360:	2fae0000 	svccs	0x00ae0000
    4364:	c3010000 	movwgt	r0, #4096	; 0x1000
    4368:	19000006 	stmdbne	r0, {r1, r2}
    436c:	00000f1e 	andeq	r0, r0, lr, lsl pc
    4370:	490cdc01 	stmdbmi	ip, {r0, sl, fp, ip, lr, pc}
    4374:	000004a9 	andeq	r0, r0, r9, lsr #9
    4378:	00002fea 	andeq	r2, r0, sl, ror #31
    437c:	00002fe6 	andeq	r2, r0, r6, ror #31
    4380:	001a2122 	andseq	r2, sl, r2, lsr #2
    4384:	0cde0100 	ldfeqe	f0, [lr], {0}
    4388:	0004b520 	andeq	fp, r4, r0, lsr #10
    438c:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    4390:	00000020 	andeq	r0, r0, r0, lsr #32
    4394:	000fa500 	andeq	sl, pc, r0, lsl #10
    4398:	50011f00 	andpl	r1, r1, r0, lsl #30
    439c:	5001f303 	andpl	pc, r1, r3, lsl #6
    43a0:	0251011f 	subseq	r0, r1, #-1073741817	; 0xc0000007
    43a4:	011f7491 			; <UNDEFINED> instruction: 0x011f7491
    43a8:	00300152 	eorseq	r0, r0, r2, asr r1
    43ac:	79012100 	stmdbvc	r1, {r8, sp}
    43b0:	01000012 	tsteq	r0, r2, lsl r0
    43b4:	011c0cc9 	tsteq	ip, r9, asr #25
    43b8:	000004b5 			; <UNDEFINED> instruction: 0x000004b5
	...
    43c4:	0000300b 	andeq	r3, r0, fp
    43c8:	00073c01 	andeq	r3, r7, r1, lsl #24
    43cc:	0f1e1900 	svceq	0x001e1900
    43d0:	c9010000 	stmdbgt	r1, {}	; <UNPREDICTABLE>
    43d4:	04a9420c 	strteq	r4, [r9], #524	; 0x20c
    43d8:	30470000 	subcc	r0, r7, r0
    43dc:	30430000 	subcc	r0, r3, r0
    43e0:	e9190000 	ldmdb	r9, {}	; <UNPREDICTABLE>
    43e4:	01000020 	tsteq	r0, r0, lsr #32
    43e8:	26420cca 	strbcs	r0, [r2], -sl, asr #25
    43ec:	6e000001 	cdpvs	0, 0, cr0, cr0, cr1, {0}
    43f0:	68000030 	stmdavs	r0, {r4, r5}
    43f4:	22000030 	andcs	r0, r0, #48	; 0x30
    43f8:	00001a21 	andeq	r1, r0, r1, lsr #20
    43fc:	200ccc01 	andcs	ip, ip, r1, lsl #24
    4400:	000004b5 			; <UNDEFINED> instruction: 0x000004b5
    4404:	20749102 	rsbscs	r9, r4, r2, lsl #2
    4408:	00000000 	andeq	r0, r0, r0
    440c:	00001557 	andeq	r1, r0, r7, asr r5
    4410:	0350011f 	cmpeq	r0, #-1073741817	; 0xc0000007
    4414:	1f5001f3 	svcne	0x005001f3
    4418:	91025101 	tstls	r2, r1, lsl #2
    441c:	52011f74 	andpl	r1, r1, #116, 30	; 0x1d0
    4420:	5101f303 	tstpl	r1, r3, lsl #6	; <UNPREDICTABLE>
    4424:	01210000 			; <UNDEFINED> instruction: 0x01210000
    4428:	00000ffc 	strdeq	r0, [r0], -ip
    442c:	100ca001 	andne	sl, ip, r1
    4430:	0000f301 	andeq	pc, r0, r1, lsl #6
	...
    443c:	00309a00 	eorseq	r9, r0, r0, lsl #20
    4440:	07c30100 	strbeq	r0, [r3, r0, lsl #2]
    4444:	5b190000 	blpl	64444c <__RAM_SIZE+0x54444c>
    4448:	01000011 	tsteq	r0, r1, lsl r0
    444c:	b53c0ca0 	ldrlt	r0, [ip, #-3232]!	; 0xfffff360
    4450:	c6000004 	strgt	r0, [r0], -r4
    4454:	ba000030 	blt	451c <__HEAP_SIZE+0x351c>
    4458:	19000030 	stmdbne	r0, {r4, r5}
    445c:	00000f1e 	andeq	r0, r0, lr, lsl pc
    4460:	360ca101 	strcc	sl, [ip], -r1, lsl #2
    4464:	000004a9 	andeq	r0, r0, r9, lsr #9
    4468:	0000311b 	andeq	r3, r0, fp, lsl r1
    446c:	00003113 	andeq	r3, r0, r3, lsl r1
    4470:	001a211a 	andseq	r2, sl, sl, lsl r1
    4474:	0ca30100 	stfeqs	f0, [r3]
    4478:	0000f314 	andeq	pc, r0, r4, lsl r3	; <UNPREDICTABLE>
    447c:	00315900 	eorseq	r5, r1, r0, lsl #18
    4480:	00315500 	eorseq	r5, r1, r0, lsl #10
    4484:	115a1a00 	cmpne	sl, r0, lsl #20
    4488:	a4010000 	strge	r0, [r1], #-0
    448c:	065c190c 	ldrbeq	r1, [ip], -ip, lsl #18
    4490:	31850000 	orrcc	r0, r5, r0
    4494:	31790000 	cmncc	r9, r0
    4498:	001d0000 	andseq	r0, sp, r0
    449c:	8e000000 	cdphi	0, 0, cr0, cr0, cr0, {0}
    44a0:	1d000023 	stcne	0, cr0, [r0, #-140]	; 0xffffff74
    44a4:	00000000 	andeq	r0, r0, r0
    44a8:	0000239c 	muleq	r0, ip, r3
    44ac:	94012100 	strls	r2, [r1], #-256	; 0xffffff00
    44b0:	01000013 	tsteq	r0, r3, lsl r0
    44b4:	01100c7a 	tsteq	r0, sl, ror ip
    44b8:	000000f3 	strdeq	r0, [r0], -r3
	...
    44c4:	000031d2 	ldrdeq	r3, [r0], -r2
    44c8:	00083501 	andeq	r3, r8, r1, lsl #10
    44cc:	115b1900 	cmpne	fp, r0, lsl #18
    44d0:	7a010000 	bvc	444d8 <__HEAP_SIZE+0x434d8>
    44d4:	04b5370c 	ldrteq	r3, [r5], #1804	; 0x70c
    44d8:	32000000 	andcc	r0, r0, #0
    44dc:	31f20000 	mvnscc	r0, r0
    44e0:	1e190000 	cdpne	0, 1, cr0, cr9, cr0, {0}
    44e4:	0100000f 	tsteq	r0, pc
    44e8:	a9310c7b 	ldmdbge	r1!, {r0, r1, r3, r4, r5, r6, sl, fp}
    44ec:	62000004 	andvs	r0, r0, #4
    44f0:	5e000032 	mcrpl	0, 0, r0, cr0, cr2, {1}
    44f4:	1a000032 	bne	45c4 <__HEAP_SIZE+0x35c4>
    44f8:	00001a21 	andeq	r1, r0, r1, lsr #20
    44fc:	140c7d01 	strne	r7, [ip], #-3329	; 0xfffff2ff
    4500:	000000f3 	strdeq	r0, [r0], -r3
    4504:	00003284 	andeq	r3, r0, r4, lsl #5
    4508:	00003280 	andeq	r3, r0, r0, lsl #5
    450c:	0000001d 	andeq	r0, r0, sp, lsl r0
    4510:	00238e00 	eoreq	r8, r3, r0, lsl #28
    4514:	00001d00 	andeq	r1, r0, r0, lsl #26
    4518:	239c0000 	orrscs	r0, ip, #0
    451c:	21000000 	mrscs	r0, (UNDEF: 0)
    4520:	00101b01 	andseq	r1, r0, r1, lsl #22
    4524:	0c680100 	stfeqe	f0, [r8], #-0
    4528:	04a90116 	strteq	r0, [r9], #278	; 0x116
	...
    4534:	32a30000 	adccc	r0, r3, #0
    4538:	9b010000 	blls	44540 <__HEAP_SIZE+0x43540>
    453c:	19000008 	stmdbne	r0, {r3}
    4540:	000013b9 			; <UNDEFINED> instruction: 0x000013b9
    4544:	390c6801 	stmdbcc	ip, {r0, fp, sp, lr}
    4548:	00000115 	andeq	r0, r0, r5, lsl r1
    454c:	000032c7 	andeq	r3, r0, r7, asr #5
    4550:	000032c3 	andeq	r3, r0, r3, asr #5
    4554:	0012241a 	andseq	r2, r2, sl, lsl r4
    4558:	0c6a0100 	stfeqe	f0, [sl], #-0
    455c:	0004a91a 	andeq	sl, r4, sl, lsl r9
    4560:	0032ea00 	eorseq	lr, r2, r0, lsl #20
    4564:	0032e800 	eorseq	lr, r2, r0, lsl #16
    4568:	00002000 	andeq	r2, r0, r0
    456c:	207e0000 	rsbscs	r0, lr, r0
    4570:	011f0000 	tsteq	pc, r0
    4574:	01f30350 	mvnseq	r0, r0, asr r3
    4578:	51011f50 	tstpl	r1, r0, asr pc
    457c:	011f3401 	tsteq	pc, r1, lsl #8
    4580:	00300152 	eorseq	r0, r0, r2, asr r1
    4584:	3b012300 	blcc	4d18c <__HEAP_SIZE+0x4c18c>
    4588:	01000011 	tsteq	r0, r1, lsl r0
    458c:	010a0c3c 	tsteq	sl, ip, lsr ip
    4590:	10002388 	andne	r2, r0, r8, lsl #7
    4594:	100023da 	ldrdne	r2, [r0], -sl
    4598:	000032fd 	strdeq	r3, [r0], -sp
    459c:	00094e01 	andeq	r4, r9, r1, lsl #28
    45a0:	12251900 	eorne	r1, r5, #0, 18
    45a4:	3c010000 	stccc	0, cr0, [r1], {-0}
    45a8:	03d2380c 	bicseq	r3, r2, #12, 16	; 0xc0000
    45ac:	33210000 			; <UNDEFINED> instruction: 0x33210000
    45b0:	331d0000 	tstcc	sp, #0
    45b4:	e9190000 	ldmdb	r9, {}	; <UNPREDICTABLE>
    45b8:	01000020 	tsteq	r0, r0, lsr #32
    45bc:	1a350c3d 	bne	d476b8 <__RAM_SIZE+0xc476b8>
    45c0:	43000001 	movwmi	r0, #1
    45c4:	3f000033 	svccc	0x00000033
    45c8:	19000033 	stmdbne	r0, {r0, r1, r4, r5}
    45cc:	00000b87 	andeq	r0, r0, r7, lsl #23
    45d0:	3b0c3e01 	blcc	313ddc <__RAM_SIZE+0x213ddc>
    45d4:	000000ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    45d8:	00003365 	andeq	r3, r0, r5, ror #6
    45dc:	00003361 	andeq	r3, r0, r1, ror #6
    45e0:	0012241a 	andseq	r2, r2, sl, lsl r4
    45e4:	0c400100 	stfeqe	f0, [r0], {-0}
    45e8:	00065c19 	andeq	r5, r6, r9, lsl ip
    45ec:	00338700 	eorseq	r8, r3, r0, lsl #14
    45f0:	00338300 	eorseq	r8, r3, r0, lsl #6
    45f4:	23941d00 	orrscs	r1, r4, #0, 26
    45f8:	238e1000 	orrcs	r1, lr, #0
    45fc:	b01d0000 	andslt	r0, sp, r0
    4600:	9c100023 	ldcls	0, cr0, [r0], {35}	; 0x23
    4604:	1e000023 	cdpne	0, 0, cr0, cr0, cr3, {1}
    4608:	100023ba 			; <UNDEFINED> instruction: 0x100023ba
    460c:	00000abd 			; <UNDEFINED> instruction: 0x00000abd
    4610:	00000931 	andeq	r0, r0, r1, lsr r9
    4614:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    4618:	20000074 	andcs	r0, r0, r4, ror r0
    461c:	100023d8 	ldrdne	r2, [r0], -r8
    4620:	000023aa 	andeq	r2, r0, sl, lsr #7
    4624:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    4628:	011f2c74 	tsteq	pc, r4, ror ip	; <UNPREDICTABLE>
    462c:	00750251 	rsbseq	r0, r5, r1, asr r2
    4630:	0252011f 	subseq	r0, r2, #-1073741817	; 0xc0000007
    4634:	00000076 	andeq	r0, r0, r6, ror r0
    4638:	11d30124 	bicsne	r0, r3, r4, lsr #2
    463c:	78010000 	stmdavc	r1, {}	; <UNPREDICTABLE>
    4640:	f3010c0a 			; <UNDEFINED> instruction: 0xf3010c0a
	...
    464c:	02000000 	andeq	r0, r0, #0
    4650:	ad01007d 	stcge	0, cr0, [r1, #-500]	; 0xfffffe0c
    4654:	19000009 	stmdbne	r0, {r0, r3}
    4658:	00001225 	andeq	r1, r0, r5, lsr #4
    465c:	3a0a7801 	bcc	2a2668 <__RAM_SIZE+0x1a2668>
    4660:	000003de 	ldrdeq	r0, [r0], -lr
    4664:	000033ad 	andeq	r3, r0, sp, lsr #7
    4668:	000033a5 	andeq	r3, r0, r5, lsr #7
    466c:	001a211a 	andseq	r2, sl, sl, lsl r1
    4670:	0a7a0100 	beq	1e84a78 <__RAM_SIZE+0x1d84a78>
    4674:	0000f310 	andeq	pc, r0, r0, lsl r3	; <UNPREDICTABLE>
    4678:	0033e900 	eorseq	lr, r3, r0, lsl #18
    467c:	0033e700 	eorseq	lr, r3, r0, lsl #14
    4680:	12241a00 	eorne	r1, r4, #0, 20
    4684:	7b010000 	blvc	4468c <__HEAP_SIZE+0x4368c>
    4688:	065c150a 	ldrbeq	r1, [ip], -sl, lsl #10
    468c:	34050000 	strcc	r0, [r5], #-0
    4690:	33fd0000 	mvnscc	r0, #0
    4694:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    4698:	00000ee1 	andeq	r0, r0, r1, ror #29
    469c:	130a6301 	movwne	r6, #41729	; 0xa301
    46a0:	0000f301 	andeq	pc, r0, r1, lsl #6
	...
    46ac:	00343f00 	eorseq	r3, r4, r0, lsl #30
    46b0:	0a090100 	beq	244ab8 <__RAM_SIZE+0x144ab8>
    46b4:	24190000 	ldrcs	r0, [r9], #-0
    46b8:	01000012 	tsteq	r0, r2, lsl r0
    46bc:	4b330a63 	blmi	cc7050 <__RAM_SIZE+0xbc7050>
    46c0:	69000006 	stmdbvs	r0, {r1, r2}
    46c4:	5f000034 	svcpl	0x00000034
    46c8:	1a000034 	bne	47a0 <__HEAP_SIZE+0x37a0>
    46cc:	00001a21 	andeq	r1, r0, r1, lsr #20
    46d0:	100a6501 	andne	r6, sl, r1, lsl #10
    46d4:	000000f3 	strdeq	r0, [r0], -r3
    46d8:	000034b0 			; <UNDEFINED> instruction: 0x000034b0
    46dc:	000034ae 	andeq	r3, r0, lr, lsr #9
    46e0:	0000001d 	andeq	r0, r0, sp, lsl r0
    46e4:	00238e00 	eoreq	r8, r3, r0, lsl #28
    46e8:	00001d00 	andeq	r1, r0, r0, lsl #26
    46ec:	239c0000 	orrscs	r0, ip, #0
    46f0:	24000000 	strcs	r0, [r0], #-0
    46f4:	00135501 	andseq	r5, r3, r1, lsl #10
    46f8:	0a4b0100 	beq	12c4b00 <__RAM_SIZE+0x11c4b00>
    46fc:	00f3010c 	rscseq	r0, r3, ip, lsl #2
	...
    4708:	7d020000 	stcvc	0, cr0, [r2, #-0]
    470c:	0a610100 	beq	1844b14 <__RAM_SIZE+0x1744b14>
    4710:	25190000 	ldrcs	r0, [r9, #-0]
    4714:	01000012 	tsteq	r0, r2, lsl r0
    4718:	de3b0a4b 	vsuble.f32	s0, s22, s22
    471c:	cb000003 	blgt	4730 <__HEAP_SIZE+0x3730>
    4720:	c3000034 	movwgt	r0, #52	; 0x34
    4724:	25000034 	strcs	r0, [r0, #-52]	; 0xffffffcc
    4728:	00001a21 	andeq	r1, r0, r1, lsr #20
    472c:	100a4d01 	andne	r4, sl, r1, lsl #26
    4730:	000000f3 	strdeq	r0, [r0], -r3
    4734:	12241a00 	eorne	r1, r4, #0, 20
    4738:	4e010000 	cdpmi	0, 0, cr0, cr1, cr0, {0}
    473c:	065c150a 	ldrbeq	r1, [ip], -sl, lsl #10
    4740:	350d0000 	strcc	r0, [sp, #-0]
    4744:	35050000 	strcc	r0, [r5, #-0]
    4748:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    474c:	00000ca5 	andeq	r0, r0, r5, lsr #25
    4750:	130a3601 	movwne	r3, #42497	; 0xa601
    4754:	0000f301 	andeq	pc, r0, r1, lsl #6
    4758:	00202600 	eoreq	r2, r0, r0, lsl #12
    475c:	00204010 	eoreq	r4, r0, r0, lsl r0
    4760:	00354710 	eorseq	r4, r5, r0, lsl r7
    4764:	0abd0100 	beq	fef44b6c <__StackTop+0xc6e44b6c>
    4768:	24190000 	ldrcs	r0, [r9], #-0
    476c:	01000012 	tsteq	r0, r2, lsl r0
    4770:	4b340a36 	blmi	d07050 <__RAM_SIZE+0xc07050>
    4774:	71000006 	tstvc	r0, r6
    4778:	67000035 	smladxvs	r0, r5, r0, r0
    477c:	1a000035 	bne	4858 <__HEAP_SIZE+0x3858>
    4780:	00001a21 	andeq	r1, r0, r1, lsr #20
    4784:	100a3801 	andne	r3, sl, r1, lsl #16
    4788:	000000f3 	strdeq	r0, [r0], -r3
    478c:	000035b8 			; <UNDEFINED> instruction: 0x000035b8
    4790:	000035b6 			; <UNDEFINED> instruction: 0x000035b6
    4794:	00202e1d 	eoreq	r2, r0, sp, lsl lr
    4798:	00238e10 	eoreq	r8, r3, r0, lsl lr
    479c:	20381d00 	eorscs	r1, r8, r0, lsl #26
    47a0:	239c1000 	orrscs	r1, ip, #0
    47a4:	26000000 	strcs	r0, [r0], -r0
    47a8:	00001333 	andeq	r1, r0, r3, lsr r3
    47ac:	0d09be01 	stceq	14, cr11, [r9, #-4]
    47b0:	00213201 	eoreq	r3, r1, r1, lsl #4
    47b4:	0021b410 	eoreq	fp, r1, r0, lsl r4
    47b8:	0035cb10 	eorseq	ip, r5, r0, lsl fp
    47bc:	0baf0100 	bleq	febc4bc4 <__StackTop+0xc6ac4bc4>
    47c0:	24190000 	ldrcs	r0, [r9], #-0
    47c4:	01000012 	tsteq	r0, r2, lsl r0
    47c8:	5c2d09be 			; <UNDEFINED> instruction: 0x5c2d09be
    47cc:	ef000006 	svc	0x00000006
    47d0:	eb000035 	bl	48ac <__HEAP_SIZE+0x38ac>
    47d4:	1c000035 	stcne	0, cr0, [r0], {53}	; 0x35
    47d8:	1000213a 	andne	r2, r0, sl, lsr r1
    47dc:	1000217a 	andne	r2, r0, sl, ror r1
    47e0:	00000b4a 	andeq	r0, r0, sl, asr #22
    47e4:	000bc41a 	andeq	ip, fp, sl, lsl r4
    47e8:	09c80100 	stmibeq	r8, {r8}^
    47ec:	0000c010 	andeq	ip, r0, r0, lsl r0
    47f0:	00361100 	eorseq	r1, r6, r0, lsl #2
    47f4:	00360d00 	eorseq	r0, r6, r0, lsl #26
    47f8:	214e1e00 	cmpcs	lr, r0, lsl #28
    47fc:	237f1000 	cmncs	pc, #0
    4800:	0b230000 	bleq	8c4808 <__RAM_SIZE+0x7c4808>
    4804:	011f0000 	tsteq	pc, r0
    4808:	2c750250 	lfmcs	f0, 2, [r5], #-320	; 0xfffffec0
    480c:	21641e00 	cmncs	r4, r0, lsl #28
    4810:	05761000 	ldrbeq	r1, [r6, #-0]!
    4814:	0b370000 	bleq	dc481c <__RAM_SIZE+0xcc481c>
    4818:	011f0000 	tsteq	pc, r0
    481c:	00750250 	rsbseq	r0, r5, r0, asr r2
    4820:	216c1d00 	cmncs	ip, r0, lsl #26
    4824:	23b91000 			; <UNDEFINED> instruction: 0x23b91000
    4828:	721d0000 	andsvc	r0, sp, #0
    482c:	b9100021 	ldmdblt	r0, {r0, r5}
    4830:	00000023 	andeq	r0, r0, r3, lsr #32
    4834:	0021821c 	eoreq	r8, r1, ip, lsl r2
    4838:	0021ae10 	eoreq	sl, r1, r0, lsl lr
    483c:	000b8a10 	andeq	r8, fp, r0, lsl sl
    4840:	13a31a00 			; <UNDEFINED> instruction: 0x13a31a00
    4844:	19010000 	stmdbne	r1, {}	; <UNPREDICTABLE>
    4848:	00c0100a 	sbceq	r1, r0, sl
    484c:	36330000 	ldrtcc	r0, [r3], -r0
    4850:	362f0000 	strtcc	r0, [pc], -r0
    4854:	9e1e0000 	cdpls	0, 1, cr0, cr14, cr0, {0}
    4858:	7f100021 	svcvc	0x00100021
    485c:	80000023 	andhi	r0, r0, r3, lsr #32
    4860:	1f00000b 	svcne	0x0000000b
    4864:	75025001 	strvc	r5, [r2, #-1]
    4868:	a61d0010 			; <UNDEFINED> instruction: 0xa61d0010
    486c:	b9100021 	ldmdblt	r0, {r0, r5}
    4870:	00000023 	andeq	r0, r0, r3, lsr #32
    4874:	00213a1d 	eoreq	r3, r1, sp, lsl sl
    4878:	00238e10 	eoreq	r8, r3, r0, lsl lr
    487c:	217e1d00 	cmncs	lr, r0, lsl #26
    4880:	239c1000 	orrscs	r1, ip, #0
    4884:	821d0000 	andshi	r0, sp, #0
    4888:	8e100021 	cdphi	0, 1, cr0, cr0, cr1, {1}
    488c:	1d000023 	stcne	0, cr0, [r0, #-140]	; 0xffffff74
    4890:	100021b2 			; <UNDEFINED> instruction: 0x100021b2
    4894:	0000239c 	muleq	r0, ip, r3
    4898:	12b82600 	adcsne	r2, r8, #0, 12
    489c:	a9010000 	stmdbge	r1, {}	; <UNPREDICTABLE>
    48a0:	b6010d09 	strlt	r0, [r1], -r9, lsl #26
    48a4:	da100020 	ble	40492c <__RAM_SIZE+0x30492c>
    48a8:	51100020 	tstpl	r0, r0, lsr #32
    48ac:	01000036 	tsteq	r0, r6, lsr r0
    48b0:	00000bfe 	strdeq	r0, [r0], -lr
    48b4:	00122419 	andseq	r2, r2, r9, lsl r4
    48b8:	09a90100 	stmibeq	r9!, {r8}
    48bc:	00065c33 	andeq	r5, r6, r3, lsr ip
    48c0:	00368500 	eorseq	r8, r6, r0, lsl #10
    48c4:	00367d00 	eorseq	r7, r6, r0, lsl #26
    48c8:	0cb51900 			; <UNDEFINED> instruction: 0x0cb51900
    48cc:	aa010000 	bge	448d4 <__HEAP_SIZE+0x438d4>
    48d0:	00a83009 	adceq	r3, r8, r9
    48d4:	36c40000 	strbcc	r0, [r4], r0
    48d8:	36bc0000 	ldrtcc	r0, [ip], r0
    48dc:	d61d0000 	ldrle	r0, [sp], -r0
    48e0:	c8100020 	ldmdagt	r0, {r5}
    48e4:	00000023 	andeq	r0, r0, r3, lsr #32
    48e8:	000de718 	andeq	lr, sp, r8, lsl r7
    48ec:	09560100 	ldmdbeq	r6, {r8}^
    48f0:	00f30113 	rscseq	r0, r3, r3, lsl r1
    48f4:	20400000 	subcs	r0, r0, r0
    48f8:	20b61000 	adcscs	r1, r6, r0
    48fc:	36fb1000 	ldrbtcc	r1, [fp], r0
    4900:	a2010000 	andge	r0, r1, #0
    4904:	1900000c 	stmdbne	r0, {r2, r3}
    4908:	00001224 	andeq	r1, r0, r4, lsr #4
    490c:	37095601 	strcc	r5, [r9, -r1, lsl #12]
    4910:	0000065c 	andeq	r0, r0, ip, asr r6
    4914:	0000372b 	andeq	r3, r0, fp, lsr #14
    4918:	0000371b 	andeq	r3, r0, fp, lsl r7
    491c:	0011a619 	andseq	sl, r1, r9, lsl r6
    4920:	09570100 	ldmdbeq	r7, {r8}^
    4924:	0000b434 	andeq	fp, r0, r4, lsr r4
    4928:	00379b00 	eorseq	r9, r7, r0, lsl #22
    492c:	00378b00 	eorseq	r8, r7, r0, lsl #22
    4930:	138a1900 	orrne	r1, sl, #0, 18
    4934:	58010000 	stmdapl	r1, {}	; <UNPREDICTABLE>
    4938:	00ff3809 	rscseq	r3, pc, r9, lsl #16
    493c:	380b0000 	stmdacc	fp, {}	; <UNPREDICTABLE>
    4940:	38070000 	stmdacc	r7, {}	; <UNPREDICTABLE>
    4944:	211a0000 	tstcs	sl, r0
    4948:	0100001a 	tsteq	r0, sl, lsl r0
    494c:	f310095a 	vmul.p16	q0, q0, q5
    4950:	33000000 	movwcc	r0, #0
    4954:	29000038 	stmdbcs	r0, {r3, r4, r5}
    4958:	1a000038 	bne	4a40 <__HEAP_SIZE+0x3a40>
    495c:	00000ce3 	andeq	r0, r0, r3, ror #25
    4960:	11095b01 	tstne	r9, r1, lsl #22
    4964:	00000104 	andeq	r0, r0, r4, lsl #2
    4968:	0000387b 	andeq	r3, r0, fp, ror r8
    496c:	00003875 	andeq	r3, r0, r5, ror r8
    4970:	00205e1d 	eoreq	r5, r0, sp, lsl lr
    4974:	0023d510 	eoreq	sp, r3, r0, lsl r5
    4978:	206c1d00 	rsbcs	r1, ip, r0, lsl #26
    497c:	23c81000 	biccs	r1, r8, #0
    4980:	881d0000 	ldmdahi	sp, {}	; <UNPREDICTABLE>
    4984:	c8100020 	ldmdagt	r0, {r5}
    4988:	00000023 	andeq	r0, r0, r3, lsr #32
    498c:	000cbe27 	andeq	fp, ip, r7, lsr #28
    4990:	093d0100 	ldmdbeq	sp!, {r8}
    4994:	01040118 	tsteq	r4, r8, lsl r1
	...
    49a0:	7d020000 	stcvc	0, cr0, [r2, #-0]
    49a4:	0ceb0100 	stfeqe	f0, [fp]
    49a8:	24190000 	ldrcs	r0, [r9], #-0
    49ac:	01000012 	tsteq	r0, r2, lsl r0
    49b0:	5154093d 	cmppl	r4, sp, lsr r9
    49b4:	ac000006 	stcge	0, cr0, [r0], {6}
    49b8:	a6000038 			; <UNDEFINED> instruction: 0xa6000038
    49bc:	1a000038 	bne	4aa4 <__HEAP_SIZE+0x3aa4>
    49c0:	0000108d 	andeq	r1, r0, sp, lsl #1
    49c4:	15093f01 	strne	r3, [r9, #-3841]	; 0xfffff0ff
    49c8:	00000104 	andeq	r0, r0, r4, lsl #2
    49cc:	000038da 	ldrdeq	r3, [r0], -sl
    49d0:	000038d8 	ldrdeq	r3, [r0], -r8
    49d4:	48012400 	stmdami	r1, {sl, sp}
    49d8:	0100000f 	tsteq	r0, pc
    49dc:	010d0931 	tsteq	sp, r1, lsr r9
    49e0:	00000104 	andeq	r0, r0, r4, lsl #2
	...
    49ec:	01007d02 	tsteq	r0, r2, lsl #26
    49f0:	00000d20 	andeq	r0, r0, r0, lsr #26
    49f4:	00122519 	andseq	r2, r2, r9, lsl r5
    49f8:	09310100 	ldmdbeq	r1!, {r8}
    49fc:	0003d232 	andeq	sp, r3, r2, lsr r2
    4a00:	0038f100 	eorseq	pc, r8, r0, lsl #2
    4a04:	0038ed00 	eorseq	lr, r8, r0, lsl #26
    4a08:	01240000 			; <UNDEFINED> instruction: 0x01240000
    4a0c:	0000118e 	andeq	r1, r0, lr, lsl #3
    4a10:	0d092701 	stceq	7, cr2, [r9, #-4]
    4a14:	00010401 	andeq	r0, r1, r1, lsl #8
	...
    4a20:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    4a24:	000d5501 	andeq	r5, sp, r1, lsl #10
    4a28:	12251900 	eorne	r1, r5, #0, 18
    4a2c:	27010000 	strcs	r0, [r1, -r0]
    4a30:	03d23409 	bicseq	r3, r2, #150994944	; 0x9000000
    4a34:	39160000 	ldmdbcc	r6, {}	; <UNPREDICTABLE>
    4a38:	39120000 	ldmdbcc	r2, {}	; <UNPREDICTABLE>
    4a3c:	23000000 	movwcs	r0, #0
    4a40:	000c1601 	andeq	r1, ip, r1, lsl #12
    4a44:	08ce0100 	stmiaeq	lr, {r8}^
    4a48:	00000106 	andeq	r0, r0, r6, lsl #2
    4a4c:	00000000 	andeq	r0, r0, r0
    4a50:	39370000 	ldmdbcc	r7!, {}	; <UNPREDICTABLE>
    4a54:	a5010000 	strge	r0, [r1, #-0]
    4a58:	1900000d 	stmdbne	r0, {r0, r2, r3}
    4a5c:	00001225 	andeq	r1, r0, r5, lsr #4
    4a60:	2208ce01 	andcs	ip, r8, #1, 28
    4a64:	000003d2 	ldrdeq	r0, [r0], -r2
    4a68:	0000395f 	andeq	r3, r0, pc, asr r9
    4a6c:	00003957 	andeq	r3, r0, r7, asr r9
    4a70:	0012241a 	andseq	r2, r2, sl, lsl r4
    4a74:	08d00100 	ldmeq	r0, {r8}^
    4a78:	00065c15 	andeq	r5, r6, r5, lsl ip
    4a7c:	0039a100 	eorseq	sl, r9, r0, lsl #2
    4a80:	00399900 	eorseq	r9, r9, r0, lsl #18
    4a84:	00001d00 	andeq	r1, r0, r0, lsl #26
    4a88:	23e40000 	mvncs	r0, #0
    4a8c:	24000000 	strcs	r0, [r0], #-0
    4a90:	000e8301 	andeq	r8, lr, r1, lsl #6
    4a94:	08be0100 	ldmeq	lr!, {r8}
    4a98:	0104010d 	tsteq	r4, sp, lsl #2
	...
    4aa4:	7d020000 	stcvc	0, cr0, [r2, #-0]
    4aa8:	0e040100 	adfeqs	f0, f4, f0
    4aac:	25190000 	ldrcs	r0, [r9, #-0]
    4ab0:	01000012 	tsteq	r0, r2, lsl r0
    4ab4:	de4008be 	mcrle	8, 2, r0, cr0, cr14, {5}
    4ab8:	df000003 	svcle	0x00000003
    4abc:	db000039 	blle	4ba8 <__HEAP_SIZE+0x3ba8>
    4ac0:	1a000039 	bne	4bac <__HEAP_SIZE+0x3bac>
    4ac4:	00000c0d 	andeq	r0, r0, sp, lsl #24
    4ac8:	1108c001 	tstne	r8, r1
    4acc:	00000104 	andeq	r0, r0, r4, lsl #2
    4ad0:	00003a02 	andeq	r3, r0, r2, lsl #20
    4ad4:	00003a00 	andeq	r3, r0, r0, lsl #20
    4ad8:	0012241a 	andseq	r2, r2, sl, lsl r4
    4adc:	08c10100 	stmiaeq	r1, {r8}^
    4ae0:	00065c15 	andeq	r5, r6, r5, lsl ip
    4ae4:	003a1900 	eorseq	r1, sl, r0, lsl #18
    4ae8:	003a1500 	eorseq	r1, sl, r0, lsl #10
    4aec:	01210000 			; <UNDEFINED> instruction: 0x01210000
    4af0:	00000bad 	andeq	r0, r0, sp, lsr #23
    4af4:	0d08a901 	vstreq.16	s20, [r8, #-2]	; <UNPREDICTABLE>
    4af8:	00010401 	andeq	r0, r1, r1, lsl #8
	...
    4b04:	003a3a00 	eorseq	r3, sl, r0, lsl #20
    4b08:	0e760100 	rpweqs	f0, f6, f0
    4b0c:	25190000 	ldrcs	r0, [r9, #-0]
    4b10:	01000012 	tsteq	r0, r2, lsl r0
    4b14:	de3908a9 	cdple	8, 3, cr0, cr9, cr9, {5}
    4b18:	60000003 	andvs	r0, r0, r3
    4b1c:	5a00003a 	bpl	4c0c <__HEAP_SIZE+0x3c0c>
    4b20:	1a00003a 	bne	4c10 <__HEAP_SIZE+0x3c10>
    4b24:	00000c0d 	andeq	r0, r0, sp, lsl #24
    4b28:	1108ab01 	tstne	r8, r1, lsl #22
    4b2c:	00000104 	andeq	r0, r0, r4, lsl #2
    4b30:	00003a8e 	andeq	r3, r0, lr, lsl #21
    4b34:	00003a8c 	andeq	r3, r0, ip, lsl #21
    4b38:	0012241a 	andseq	r2, r2, sl, lsl r4
    4b3c:	08ac0100 	stmiaeq	ip!, {r8}
    4b40:	00065c15 	andeq	r5, r6, r5, lsl ip
    4b44:	003aa700 	eorseq	sl, sl, r0, lsl #14
    4b48:	003aa100 	eorseq	sl, sl, r0, lsl #2
    4b4c:	00001d00 	andeq	r1, r0, r0, lsl #26
    4b50:	238e0000 	orrcs	r0, lr, #0
    4b54:	001d0000 	andseq	r0, sp, r0
    4b58:	9c000000 	stcls	0, cr0, [r0], {-0}
    4b5c:	00000023 	andeq	r0, r0, r3, lsr #32
    4b60:	11ec0121 	mvnne	r0, r1, lsr #2
    4b64:	95010000 	strls	r0, [r1, #-0]
    4b68:	04010d08 	streq	r0, [r1], #-3336	; 0xfffff2f8
    4b6c:	00000001 	andeq	r0, r0, r1
    4b70:	00000000 	andeq	r0, r0, r0
    4b74:	d3000000 	movwle	r0, #0
    4b78:	0100003a 	tsteq	r0, sl, lsr r0
    4b7c:	00000ed3 	ldrdeq	r0, [r0], -r3
    4b80:	00122519 	andseq	r2, r2, r9, lsl r5
    4b84:	08950100 	ldmeq	r5, {r8}
    4b88:	0003de39 	andeq	sp, r3, r9, lsr lr
    4b8c:	003af900 	eorseq	pc, sl, r0, lsl #18
    4b90:	003af300 	eorseq	pc, sl, r0, lsl #6
    4b94:	0c0d1a00 			; <UNDEFINED> instruction: 0x0c0d1a00
    4b98:	97010000 	strls	r0, [r1, -r0]
    4b9c:	01041108 	tsteq	r4, r8, lsl #2
    4ba0:	3b270000 	blcc	9c4ba8 <__RAM_SIZE+0x8c4ba8>
    4ba4:	3b250000 	blcc	944bac <__RAM_SIZE+0x844bac>
    4ba8:	001d0000 	andseq	r0, sp, r0
    4bac:	8e000000 	cdphi	0, 0, cr0, cr0, cr0, {0}
    4bb0:	1d000023 	stcne	0, cr0, [r0, #-140]	; 0xffffff74
    4bb4:	00000000 	andeq	r0, r0, r0
    4bb8:	0000239c 	muleq	r0, ip, r3
    4bbc:	8d012100 	stfhis	f2, [r1, #-0]
    4bc0:	01000012 	tsteq	r0, r2, lsl r0
    4bc4:	010c0857 	tsteq	ip, r7, asr r8
    4bc8:	000000f3 	strdeq	r0, [r0], -r3
	...
    4bd4:	00003b3a 	andeq	r3, r0, sl, lsr fp
    4bd8:	000fa501 	andeq	sl, pc, r1, lsl #10
    4bdc:	12251900 	eorne	r1, r5, #0, 18
    4be0:	57010000 	strpl	r0, [r1, -r0]
    4be4:	03d22d08 	bicseq	r2, r2, #8, 26	; 0x200
    4be8:	3b640000 	blcc	1904bf0 <__RAM_SIZE+0x1804bf0>
    4bec:	3b5a0000 	blcc	1684bf4 <__RAM_SIZE+0x1584bf4>
    4bf0:	b5190000 	ldrlt	r0, [r9, #-0]
    4bf4:	0100000c 	tsteq	r0, ip
    4bf8:	a82c0858 	stmdage	ip!, {r3, r4, r6, fp}
    4bfc:	ad000000 	stcge	0, cr0, [r0, #-0]
    4c00:	a900003b 	stmdbge	r0, {r0, r1, r3, r4, r5}
    4c04:	1a00003b 	bne	4cf8 <__HEAP_SIZE+0x3cf8>
    4c08:	00001a21 	andeq	r1, r0, r1, lsr #20
    4c0c:	10085a01 	andne	r5, r8, r1, lsl #20
    4c10:	000000f3 	strdeq	r0, [r0], -r3
    4c14:	00003bcf 	andeq	r3, r0, pc, asr #23
    4c18:	00003bcb 	andeq	r3, r0, fp, asr #23
    4c1c:	000c2e1a 	andeq	r2, ip, sl, lsl lr
    4c20:	085b0100 	ldmdaeq	fp, {r8}^
    4c24:	00010411 	andeq	r0, r1, r1, lsl r4
    4c28:	003bf600 	eorseq	pc, fp, r0, lsl #12
    4c2c:	003bee00 	eorseq	lr, fp, r0, lsl #28
    4c30:	10521a00 	subsne	r1, r2, r0, lsl #20
    4c34:	5c010000 	stcpl	0, cr0, [r1], {-0}
    4c38:	04ed0e08 	strbteq	r0, [sp], #3592	; 0xe08
    4c3c:	3c2c0000 	stccc	0, cr0, [ip], #-0
    4c40:	3c2a0000 	stccc	0, cr0, [sl], #-0
    4c44:	241a0000 	ldrcs	r0, [sl], #-0
    4c48:	01000012 	tsteq	r0, r2, lsl r0
    4c4c:	5c15085d 	ldcpl	8, cr0, [r5], {93}	; 0x5d
    4c50:	49000006 	stmdbmi	r0, {r1, r2}
    4c54:	3f00003c 	svccc	0x0000003c
    4c58:	1d00003c 	stcne	0, cr0, [r0, #-240]	; 0xffffff10
    4c5c:	00000000 	andeq	r0, r0, r0
    4c60:	000023f2 	strdeq	r2, [r0], -r2	; <UNPREDICTABLE>
    4c64:	0000001e 	andeq	r0, r0, lr, lsl r0
    4c68:	00240000 	eoreq	r0, r4, r0
    4c6c:	000f8e00 	andeq	r8, pc, r0, lsl #28
    4c70:	50011f00 	andpl	r1, r1, r0, lsl #30
    4c74:	00007502 	andeq	r7, r0, r2, lsl #10
    4c78:	00000020 	andeq	r0, r0, r0, lsr #32
    4c7c:	000baf00 	andeq	sl, fp, r0, lsl #30
    4c80:	50011f00 	andpl	r1, r1, r0, lsl #30
    4c84:	1f007402 	svcne	0x00007402
    4c88:	76025101 	strvc	r5, [r2], -r1, lsl #2
    4c8c:	21000000 	mrscs	r0, (UNDEF: 0)
    4c90:	000acd01 	andeq	ip, sl, r1, lsl #26
    4c94:	07f30100 	ldrbeq	r0, [r3, r0, lsl #2]!
    4c98:	00f3010c 	rscseq	r0, r3, ip, lsl #2
	...
    4ca4:	3c8e0000 	stccc	0, cr0, [lr], {0}
    4ca8:	f1010000 	setend	le
    4cac:	19000010 	stmdbne	r0, {r4}
    4cb0:	00001225 	andeq	r1, r0, r5, lsr #4
    4cb4:	3007f301 	andcc	pc, r7, r1, lsl #6
    4cb8:	000003d2 	ldrdeq	r0, [r0], -r2
    4cbc:	00003ccc 	andeq	r3, r0, ip, asr #25
    4cc0:	00003cae 	andeq	r3, r0, lr, lsr #25
    4cc4:	000cb519 	andeq	fp, ip, r9, lsl r5
    4cc8:	07f40100 	ldrbeq	r0, [r4, r0, lsl #2]!
    4ccc:	0000a82f 	andeq	sl, r0, pc, lsr #16
    4cd0:	003d9200 	eorseq	r9, sp, r0, lsl #4
    4cd4:	003d8e00 	eorseq	r8, sp, r0, lsl #28
    4cd8:	0af91900 	beq	ffe4b0e0 <__StackTop+0xc7d4b0e0>
    4cdc:	f5010000 			; <UNDEFINED> instruction: 0xf5010000
    4ce0:	10f73507 	rscsne	r3, r7, r7, lsl #10
    4ce4:	3db40000 	ldccc	0, cr0, [r4]
    4ce8:	3db00000 	ldccc	0, cr0, [r0]
    4cec:	211a0000 	tstcs	sl, r0
    4cf0:	0100001a 	tsteq	r0, sl, lsl r0
    4cf4:	f31007f7 	vaba.u16	q0, q8, <illegal reg q11.5>
    4cf8:	d4000000 	strle	r0, [r0], #-0
    4cfc:	d200003d 	andle	r0, r0, #61	; 0x3d
    4d00:	1a00003d 	bne	4dfc <__HEAP_SIZE+0x3dfc>
    4d04:	00000c2e 	andeq	r0, r0, lr, lsr #24
    4d08:	1107f801 	tstne	r7, r1, lsl #16	; <UNPREDICTABLE>
    4d0c:	00000104 	andeq	r0, r0, r4, lsl #2
    4d10:	00003def 	andeq	r3, r0, pc, ror #27
    4d14:	00003de7 	andeq	r3, r0, r7, ror #27
    4d18:	0012241a 	andseq	r2, r2, sl, lsl r4
    4d1c:	07f90100 	ldrbeq	r0, [r9, r0, lsl #2]!
    4d20:	00065c15 	andeq	r5, r6, r5, lsl ip
    4d24:	003e4100 	eorseq	r4, lr, r0, lsl #2
    4d28:	003e2300 	eorseq	r2, lr, r0, lsl #6
    4d2c:	03782800 	cmneq	r8, #0, 16
    4d30:	10d70000 	sbcsne	r0, r7, r0
    4d34:	e31a0000 	tst	sl, #0
    4d38:	0100000c 	tsteq	r0, ip
    4d3c:	151b0815 	ldrne	r0, [fp, #-2069]	; 0xfffff7eb
    4d40:	09000001 	stmdbeq	r0, {r0}
    4d44:	0300003f 	movweq	r0, #63	; 0x3f
    4d48:	2900003f 	stmdbcs	r0, {r0, r1, r2, r3, r4, r5}
	...
    4d54:	0013a31a 	andseq	sl, r3, sl, lsl r3
    4d58:	081a0100 	ldmdaeq	sl, {r8}
    4d5c:	0000d11a 	andeq	sp, r0, sl, lsl r1
    4d60:	003f3a00 	eorseq	r3, pc, r0, lsl #20
    4d64:	003f3400 	eorseq	r3, pc, r0, lsl #8
    4d68:	00001c00 	andeq	r1, r0, r0, lsl #24
    4d6c:	00000000 	andeq	r0, r0, r0
    4d70:	10ab0000 	adcne	r0, fp, r0
    4d74:	121a0000 	andsne	r0, sl, #0
    4d78:	01000011 	tsteq	r0, r1, lsl r0
    4d7c:	15110844 	ldrne	r0, [r1, #-2116]	; 0xfffff7bc
    4d80:	69000001 	stmdbvs	r0, {r0}
    4d84:	6500003f 	strvs	r0, [r0, #-63]	; 0xffffffc1
    4d88:	1d00003f 	stcne	0, cr0, [r0, #-252]	; 0xffffff04
    4d8c:	00000000 	andeq	r0, r0, r0
    4d90:	00002370 	andeq	r2, r0, r0, ror r3
    4d94:	00001e00 	andeq	r1, r0, r0, lsl #28
    4d98:	0baf0000 	bleq	febc4da0 <__StackTop+0xc6ac4da0>
    4d9c:	10c50000 	sbcne	r0, r5, r0
    4da0:	011f0000 	tsteq	pc, r0
    4da4:	00740250 	rsbseq	r0, r4, r0, asr r2
    4da8:	0251011f 	subseq	r0, r1, #-1073741817	; 0xc0000007
    4dac:	20000077 	andcs	r0, r0, r7, ror r0
    4db0:	00000000 	andeq	r0, r0, r0
    4db4:	0000237f 	andeq	r2, r0, pc, ror r3
    4db8:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    4dbc:	00001074 	andeq	r1, r0, r4, ror r0
    4dc0:	00001d00 	andeq	r1, r0, r0, lsl #26
    4dc4:	23f20000 	mvnscs	r0, #0
    4dc8:	00200000 	eoreq	r0, r0, r0
    4dcc:	00000000 	andeq	r0, r0, r0
    4dd0:	1f000024 	svcne	0x00000024
    4dd4:	75025001 	strvc	r5, [r2, #-1]
    4dd8:	07000000 	streq	r0, [r0, -r0]
    4ddc:	0000f304 	andeq	pc, r0, r4, lsl #6
    4de0:	10f10600 	rscsne	r0, r1, r0, lsl #12
    4de4:	01210000 			; <UNDEFINED> instruction: 0x01210000
    4de8:	00000d34 	andeq	r0, r0, r4, lsr sp
    4dec:	0c075501 	cfstr32eq	mvfx5, [r7], {1}
    4df0:	0000f301 	andeq	pc, r0, r1, lsl #6
	...
    4dfc:	003f8700 	eorseq	r8, pc, r0, lsl #14
    4e00:	13060100 	movwne	r0, #24832	; 0x6100
    4e04:	25190000 	ldrcs	r0, [r9, #-0]
    4e08:	01000012 	tsteq	r0, r2, lsl r0
    4e0c:	d2260755 	eorle	r0, r6, #22282240	; 0x1540000
    4e10:	cf000003 	svcgt	0x00000003
    4e14:	cb00003f 	blgt	4f18 <__HEAP_SIZE+0x3f18>
    4e18:	1900003f 	stmdbne	r0, {r0, r1, r2, r3, r4, r5}
    4e1c:	00000cb5 			; <UNDEFINED> instruction: 0x00000cb5
    4e20:	25075601 	strcs	r5, [r7, #-1537]	; 0xfffff9ff
    4e24:	000000a8 	andeq	r0, r0, r8, lsr #1
    4e28:	00003ff1 	strdeq	r3, [r0], -r1
    4e2c:	00003fed 	andeq	r3, r0, sp, ror #31
    4e30:	0020e919 	eoreq	lr, r0, r9, lsl r9
    4e34:	07570100 	ldrbeq	r0, [r7, -r0, lsl #2]
    4e38:	00011a23 	andeq	r1, r1, r3, lsr #20
    4e3c:	00401100 	subeq	r1, r0, r0, lsl #2
    4e40:	00400f00 	subeq	r0, r0, r0, lsl #30
    4e44:	0d3f1a00 	vldmdbeq	pc!, {s2-s1}
    4e48:	59010000 	stmdbpl	r1, {}	; <UNPREDICTABLE>
    4e4c:	00f31007 	rscseq	r1, r3, r7
    4e50:	402e0000 	eormi	r0, lr, r0
    4e54:	40240000 	eormi	r0, r4, r0
    4e58:	6d220000 	stcvs	0, cr0, [r2, #-0]
    4e5c:	0100001c 	tsteq	r0, ip, lsl r0
    4e60:	c60f075a 			; <UNDEFINED> instruction: 0xc60f075a
    4e64:	02000003 	andeq	r0, r0, #3
    4e68:	521a6891 	andspl	r6, sl, #9502720	; 0x910000
    4e6c:	01000010 	tsteq	r0, r0, lsl r0
    4e70:	ed0e075b 	stc	7, cr0, [lr, #-364]	; 0xfffffe94
    4e74:	73000004 	movwvc	r0, #4
    4e78:	6f000040 	svcvs	0x00000040
    4e7c:	1a000040 	bne	4f84 <__HEAP_SIZE+0x3f84>
    4e80:	00001224 	andeq	r1, r0, r4, lsr #4
    4e84:	15075c01 	strne	r5, [r7, #-3073]	; 0xfffff3ff
    4e88:	0000065c 	andeq	r0, r0, ip, asr r6
    4e8c:	00004095 	muleq	r0, r5, r0
    4e90:	00004091 	muleq	r0, r1, r0
    4e94:	00035828 	andeq	r5, r3, r8, lsr #16
    4e98:	00122200 	andseq	r2, r2, r0, lsl #4
    4e9c:	0ce31a00 	vstmiaeq	r3!, {s3-s2}
    4ea0:	72010000 	andvc	r0, r1, #0
    4ea4:	01151f07 	tsteq	r5, r7, lsl #30
    4ea8:	40b70000 	adcsmi	r0, r7, r0
    4eac:	40b30000 	adcsmi	r0, r3, r0
    4eb0:	001e0000 	andseq	r0, lr, r0
    4eb4:	af000000 	svcge	0x00000000
    4eb8:	e200000b 	and	r0, r0, #11
    4ebc:	1f000011 	svcne	0x00000011
    4ec0:	74025001 	strvc	r5, [r2], #-1
    4ec4:	51011f00 	tstpl	r1, r0, lsl #30
    4ec8:	00007602 	andeq	r7, r0, r2, lsl #12
    4ecc:	0000001d 	andeq	r0, r0, sp, lsl r0
    4ed0:	00239c00 	eoreq	r9, r3, r0, lsl #24
    4ed4:	00001e00 	andeq	r1, r0, r0, lsl #28
    4ed8:	237f0000 	cmncs	pc, #0
    4edc:	11ff0000 	mvnsne	r0, r0
    4ee0:	011f0000 	tsteq	pc, r0
    4ee4:	2c740250 	lfmcs	f0, 2, [r4], #-320	; 0xfffffec0
    4ee8:	00001d00 	andeq	r1, r0, r0, lsl #26
    4eec:	240e0000 	strcs	r0, [lr], #-0
    4ef0:	001d0000 	andseq	r0, sp, r0
    4ef4:	9c000000 	stcls	0, cr0, [r0], {-0}
    4ef8:	20000023 	andcs	r0, r0, r3, lsr #32
    4efc:	00000000 	andeq	r0, r0, r0
    4f00:	0000241c 	andeq	r2, r0, ip, lsl r4
    4f04:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    4f08:	00006891 	muleq	r0, r1, r8
    4f0c:	0000001e 	andeq	r0, r0, lr, lsl r0
    4f10:	000abd00 	andeq	fp, sl, r0, lsl #26
    4f14:	00123600 	andseq	r3, r2, r0, lsl #12
    4f18:	50011f00 	andpl	r1, r1, r0, lsl #30
    4f1c:	00007402 	andeq	r7, r0, r2, lsl #8
    4f20:	0000001d 	andeq	r0, r0, sp, lsl r0
    4f24:	00242b00 	eoreq	r2, r4, r0, lsl #22
    4f28:	00001e00 	andeq	r1, r0, r0, lsl #28
    4f2c:	0abd0000 	beq	fef44f34 <__StackTop+0xc6e44f34>
    4f30:	12530000 	subsne	r0, r3, #0
    4f34:	011f0000 	tsteq	pc, r0
    4f38:	00740250 	rsbseq	r0, r4, r0, asr r2
    4f3c:	00001d00 	andeq	r1, r0, r0, lsl #26
    4f40:	242b0000 	strtcs	r0, [fp], #-0
    4f44:	001e0000 	andseq	r0, lr, r0
    4f48:	61000000 	mrsvs	r0, (UNDEF: 0)
    4f4c:	7000000a 	andvc	r0, r0, sl
    4f50:	1f000012 	svcne	0x00000012
    4f54:	74025001 	strvc	r5, [r2], #-1
    4f58:	001d0000 	andseq	r0, sp, r0
    4f5c:	8e000000 	cdphi	0, 0, cr0, cr0, cr0, {0}
    4f60:	1d000023 	stcne	0, cr0, [r0, #-140]	; 0xffffff74
    4f64:	00000000 	andeq	r0, r0, r0
    4f68:	0000239c 	muleq	r0, ip, r3
    4f6c:	0000001d 	andeq	r0, r0, sp, lsl r0
    4f70:	00243a00 	eoreq	r3, r4, r0, lsl #20
    4f74:	00001d00 	andeq	r1, r0, r0, lsl #26
    4f78:	238e0000 	orrcs	r0, lr, #0
    4f7c:	001d0000 	andseq	r0, sp, r0
    4f80:	9c000000 	stcls	0, cr0, [r0], {-0}
    4f84:	1e000023 	cdpne	0, 0, cr0, cr0, cr3, {1}
    4f88:	00000000 	andeq	r0, r0, r0
    4f8c:	00002449 	andeq	r2, r0, r9, asr #8
    4f90:	000012b7 			; <UNDEFINED> instruction: 0x000012b7
    4f94:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    4f98:	011f6891 			; <UNDEFINED> instruction: 0x011f6891
    4f9c:	64910251 	ldrvs	r0, [r1], #593	; 0x251
    4fa0:	00001e00 	andeq	r1, r0, r0, lsl #28
    4fa4:	0a610000 	beq	1844fac <__RAM_SIZE+0x1744fac>
    4fa8:	12cb0000 	sbcne	r0, fp, #0
    4fac:	011f0000 	tsteq	pc, r0
    4fb0:	00740250 	rsbseq	r0, r4, r0, asr r2
    4fb4:	00001e00 	andeq	r1, r0, r0, lsl #28
    4fb8:	24580000 	ldrbcs	r0, [r8], #-0
    4fbc:	12df0000 	sbcsne	r0, pc, #0
    4fc0:	011f0000 	tsteq	pc, r0
    4fc4:	2c740250 	lfmcs	f0, 2, [r4], #-320	; 0xfffffec0
    4fc8:	00001e00 	andeq	r1, r0, r0, lsl #28
    4fcc:	0abd0000 	beq	fef44fd4 <__StackTop+0xc6e44fd4>
    4fd0:	12f30000 	rscsne	r0, r3, #0
    4fd4:	011f0000 	tsteq	pc, r0
    4fd8:	00740250 	rsbseq	r0, r4, r0, asr r2
    4fdc:	00001d00 	andeq	r1, r0, r0, lsl #26
    4fe0:	242b0000 	strtcs	r0, [fp], #-0
    4fe4:	001d0000 	andseq	r0, sp, r0
    4fe8:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
    4fec:	00000024 	andeq	r0, r0, r4, lsr #32
    4ff0:	0d9d0121 	ldfeqs	f0, [sp, #132]	; 0x84
    4ff4:	74010000 	strvc	r0, [r1], #-0
    4ff8:	f3010c06 			; <UNDEFINED> instruction: 0xf3010c06
	...
    5004:	d5000000 	strle	r0, [r0, #-0]
    5008:	01000040 	tsteq	r0, r0, asr #32
    500c:	00001557 	andeq	r1, r0, r7, asr r5
    5010:	00122519 	andseq	r2, r2, r9, lsl r5
    5014:	06740100 	ldrbteq	r0, [r4], -r0, lsl #2
    5018:	0003d22f 	andeq	sp, r3, pc, lsr #4
    501c:	00411d00 	subeq	r1, r1, r0, lsl #26
    5020:	00411900 	subeq	r1, r1, r0, lsl #18
    5024:	20e91900 	rsccs	r1, r9, r0, lsl #18
    5028:	75010000 	strvc	r0, [r1, #-0]
    502c:	011a2c06 	tsteq	sl, r6, lsl #24
    5030:	413d0000 	teqmi	sp, r0
    5034:	413b0000 	teqmi	fp, r0
    5038:	3f1a0000 	svccc	0x001a0000
    503c:	0100000d 	tsteq	r0, sp
    5040:	f3100677 	vmin.u16	q0, q0, <illegal reg q11.5>
    5044:	58000000 	stmdapl	r0, {}	; <UNPREDICTABLE>
    5048:	50000041 	andpl	r0, r0, r1, asr #32
    504c:	22000041 	andcs	r0, r0, #65	; 0x41
    5050:	00001c6d 	andeq	r1, r0, sp, ror #24
    5054:	0f067801 	svceq	0x00067801
    5058:	000003c6 	andeq	r0, r0, r6, asr #7
    505c:	1a689102 	bne	1a2946c <__RAM_SIZE+0x192946c>
    5060:	00001224 	andeq	r1, r0, r4, lsr #4
    5064:	15067901 	strne	r7, [r6, #-2305]	; 0xfffff6ff
    5068:	0000065c 	andeq	r0, r0, ip, asr r6
    506c:	00004192 	muleq	r0, r2, r1
    5070:	0000418e 	andeq	r4, r0, lr, lsl #3
    5074:	0010eb1a 	andseq	lr, r0, sl, lsl fp
    5078:	067c0100 	ldrbteq	r0, [ip], -r0, lsl #2
    507c:	0000f314 	andeq	pc, r0, r4, lsl r3	; <UNPREDICTABLE>
    5080:	0041b800 	subeq	fp, r1, r0, lsl #16
    5084:	0041b000 	subeq	fp, r1, r0
    5088:	03382800 	teqeq	r8, #0, 16
    508c:	14060000 	strne	r0, [r6], #-0
    5090:	b91a0000 	ldmdblt	sl, {}	; <UNPREDICTABLE>
    5094:	01000010 	tsteq	r0, r0, lsl r0
    5098:	151f0695 	ldrne	r0, [pc, #-1685]	; 4a0b <__HEAP_SIZE+0x3a0b>
    509c:	f7000001 			; <UNDEFINED> instruction: 0xf7000001
    50a0:	ed000041 	stc	0, cr0, [r0, #-260]	; 0xfffffefc
    50a4:	1d000041 	stcne	0, cr0, [r0, #-260]	; 0xfffffefc
    50a8:	00000000 	andeq	r0, r0, r0
    50ac:	0000239c 	muleq	r0, ip, r3
    50b0:	0000001d 	andeq	r0, r0, sp, lsl r0
    50b4:	00246700 	eoreq	r6, r4, r0, lsl #14
    50b8:	00001e00 	andeq	r1, r0, r0, lsl #28
    50bc:	237f0000 	cmncs	pc, #0
    50c0:	13e30000 	mvnne	r0, #0
    50c4:	011f0000 	tsteq	pc, r0
    50c8:	10740250 	rsbsne	r0, r4, r0, asr r2
    50cc:	00001d00 	andeq	r1, r0, r0, lsl #26
    50d0:	240e0000 	strcs	r0, [lr], #-0
    50d4:	001d0000 	andseq	r0, sp, r0
    50d8:	9c000000 	stcls	0, cr0, [r0], {-0}
    50dc:	20000023 	andcs	r0, r0, r3, lsr #32
    50e0:	00000000 	andeq	r0, r0, r0
    50e4:	0000241c 	andeq	r2, r0, ip, lsl r4
    50e8:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    50ec:	00006891 	muleq	r0, r1, r8
    50f0:	0000001c 	andeq	r0, r0, ip, lsl r0
    50f4:	00000000 	andeq	r0, r0, r0
    50f8:	00144600 	andseq	r4, r4, r0, lsl #12
    50fc:	129f1a00 	addsne	r1, pc, #0, 20
    5100:	30010000 	andcc	r0, r1, r0
    5104:	01042907 	tsteq	r4, r7, lsl #18
    5108:	42480000 	submi	r0, r8, #0
    510c:	42440000 	submi	r0, r4, #0
    5110:	001e0000 	andseq	r0, lr, r0
    5114:	a2000000 	andge	r0, r0, #0
    5118:	3c00000c 	stccc	0, cr0, [r0], {12}
    511c:	1f000014 	svcne	0x00000014
    5120:	74025001 	strvc	r5, [r2], #-1
    5124:	001d0000 	andseq	r0, sp, r0
    5128:	76000000 	strvc	r0, [r0], -r0
    512c:	00000024 	andeq	r0, r0, r4, lsr #32
    5130:	0000001d 	andeq	r0, r0, sp, lsl r0
    5134:	00238e00 	eoreq	r8, r3, r0, lsl #28
    5138:	00001d00 	andeq	r1, r0, r0, lsl #26
    513c:	24850000 	strcs	r0, [r5], #0
    5140:	001d0000 	andseq	r0, sp, r0
    5144:	9c000000 	stcls	0, cr0, [r0], {-0}
    5148:	1e000023 	cdpne	0, 0, cr0, cr0, cr3, {1}
    514c:	00000000 	andeq	r0, r0, r0
    5150:	00000abd 			; <UNDEFINED> instruction: 0x00000abd
    5154:	00001475 	andeq	r1, r0, r5, ror r4
    5158:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    515c:	1d000074 	stcne	0, cr0, [r0, #-464]	; 0xfffffe30
    5160:	00000000 	andeq	r0, r0, r0
    5164:	0000242b 	andeq	r2, r0, fp, lsr #8
    5168:	0000001e 	andeq	r0, r0, lr, lsl r0
    516c:	000abd00 	andeq	fp, sl, r0, lsl #26
    5170:	00149200 	andseq	r9, r4, r0, lsl #4
    5174:	50011f00 	andpl	r1, r1, r0, lsl #30
    5178:	00007402 	andeq	r7, r0, r2, lsl #8
    517c:	0000001d 	andeq	r0, r0, sp, lsl r0
    5180:	00242b00 	eoreq	r2, r4, r0, lsl #22
    5184:	00001e00 	andeq	r1, r0, r0, lsl #28
    5188:	0a610000 	beq	1845190 <__RAM_SIZE+0x1745190>
    518c:	14af0000 	strtne	r0, [pc], #0	; 5194 <__HEAP_SIZE+0x4194>
    5190:	011f0000 	tsteq	pc, r0
    5194:	00740250 	rsbseq	r0, r4, r0, asr r2
    5198:	00001d00 	andeq	r1, r0, r0, lsl #26
    519c:	238e0000 	orrcs	r0, lr, #0
    51a0:	001d0000 	andseq	r0, sp, r0
    51a4:	9c000000 	stcls	0, cr0, [r0], {-0}
    51a8:	1d000023 	stcne	0, cr0, [r0, #-140]	; 0xffffff74
    51ac:	00000000 	andeq	r0, r0, r0
    51b0:	0000243a 	andeq	r2, r0, sl, lsr r4
    51b4:	0000001d 	andeq	r0, r0, sp, lsl r0
    51b8:	00238e00 	eoreq	r8, r3, r0, lsl #28
    51bc:	00001d00 	andeq	r1, r0, r0, lsl #26
    51c0:	239c0000 	orrscs	r0, ip, #0
    51c4:	001e0000 	andseq	r0, lr, r0
    51c8:	49000000 	stmdbmi	r0, {}	; <UNPREDICTABLE>
    51cc:	f6000024 			; <UNDEFINED> instruction: 0xf6000024
    51d0:	1f000014 	svcne	0x00000014
    51d4:	91025001 	tstls	r2, r1
    51d8:	51011f68 	tstpl	r1, r8, ror #30
    51dc:	00649102 	rsbeq	r9, r4, r2, lsl #2
    51e0:	0000001e 	andeq	r0, r0, lr, lsl r0
    51e4:	000a6100 	andeq	r6, sl, r0, lsl #2
    51e8:	00150a00 	andseq	r0, r5, r0, lsl #20
    51ec:	50011f00 	andpl	r1, r1, r0, lsl #30
    51f0:	00007402 	andeq	r7, r0, r2, lsl #8
    51f4:	0000001e 	andeq	r0, r0, lr, lsl r0
    51f8:	00245800 	eoreq	r5, r4, r0, lsl #16
    51fc:	00151e00 	andseq	r1, r5, r0, lsl #28
    5200:	50011f00 	andpl	r1, r1, r0, lsl #30
    5204:	002c7402 	eoreq	r7, ip, r2, lsl #8
    5208:	0000001e 	andeq	r0, r0, lr, lsl r0
    520c:	000abd00 	andeq	fp, sl, r0, lsl #26
    5210:	00153200 	andseq	r3, r5, r0, lsl #4
    5214:	50011f00 	andpl	r1, r1, r0, lsl #30
    5218:	00007402 	andeq	r7, r0, r2, lsl #8
    521c:	0000001d 	andeq	r0, r0, sp, lsl r0
    5220:	00242b00 	eoreq	r2, r4, r0, lsl #22
    5224:	00001d00 	andeq	r1, r0, r0, lsl #26
    5228:	240e0000 	strcs	r0, [lr], #-0
    522c:	001d0000 	andseq	r0, sp, r0
    5230:	8e000000 	cdphi	0, 0, cr0, cr0, cr0, {0}
    5234:	1d000023 	stcne	0, cr0, [r0, #-140]	; 0xffffff74
    5238:	00000000 	andeq	r0, r0, r0
    523c:	0000239c 	muleq	r0, ip, r3
    5240:	bf012100 	svclt	0x00012100
    5244:	0100000a 	tsteq	r0, sl
    5248:	010c05de 	ldrdeq	r0, [ip, -lr]
    524c:	000000f3 	strdeq	r0, [r0], -r3
    5250:	10002298 	mulne	r0, r8, r2
    5254:	10002388 	andne	r2, r0, r8, lsl #7
    5258:	00004266 	andeq	r4, r0, r6, ror #4
    525c:	00174c01 	andseq	r4, r7, r1, lsl #24
    5260:	12251900 	eorne	r1, r5, #0, 18
    5264:	de010000 	cdple	0, 0, cr0, cr1, cr0, {0}
    5268:	03d22905 	bicseq	r2, r2, #81920	; 0x14000
    526c:	42ae0000 	adcmi	r0, lr, #0
    5270:	42aa0000 	adcmi	r0, sl, #0
    5274:	b5190000 	ldrlt	r0, [r9, #-0]
    5278:	0100000c 	tsteq	r0, ip
    527c:	a82805df 	stmdage	r8!, {r0, r1, r2, r3, r4, r6, r7, r8, sl}
    5280:	d0000000 	andle	r0, r0, r0
    5284:	cc000042 	stcgt	0, cr0, [r0], {66}	; 0x42
    5288:	19000042 	stmdbne	r0, {r1, r6}
    528c:	000020e9 	andeq	r2, r0, r9, ror #1
    5290:	2605e001 	strcs	lr, [r5], -r1
    5294:	0000011a 	andeq	r0, r0, sl, lsl r1
    5298:	000042f0 	strdeq	r4, [r0], -r0
    529c:	000042ee 	andeq	r4, r0, lr, ror #5
    52a0:	000d3f1a 	andeq	r3, sp, sl, lsl pc
    52a4:	05e20100 	strbeq	r0, [r2, #256]!	; 0x100
    52a8:	0000f310 	andeq	pc, r0, r0, lsl r3	; <UNPREDICTABLE>
    52ac:	00430b00 	subeq	r0, r3, r0, lsl #22
    52b0:	00430300 	subeq	r0, r3, r0, lsl #6
    52b4:	1c6d2200 	sfmne	f2, 2, [sp], #-0
    52b8:	e3010000 	movw	r0, #4096	; 0x1000
    52bc:	03c60f05 	biceq	r0, r6, #5, 30
    52c0:	91020000 	mrsls	r0, (UNDEF: 2)
    52c4:	12241a60 	eorne	r1, r4, #96, 20	; 0x60000
    52c8:	e4010000 	str	r0, [r1], #-0
    52cc:	065c1505 	ldrbeq	r1, [ip], -r5, lsl #10
    52d0:	43450000 	movtmi	r0, #20480	; 0x5000
    52d4:	43410000 	movtmi	r0, #4096	; 0x1000
    52d8:	18280000 	stmdane	r8!, {}	; <UNPREDICTABLE>
    52dc:	68000003 	stmdavs	r0, {r0, r1}
    52e0:	1a000016 	bne	5340 <__HEAP_SIZE+0x4340>
    52e4:	00000ce3 	andeq	r0, r0, r3, ror #25
    52e8:	1f05fa01 	svcne	0x0005fa01
    52ec:	00000115 	andeq	r0, r0, r5, lsl r1
    52f0:	0000436d 	andeq	r4, r0, sp, ror #6
    52f4:	00004363 	andeq	r4, r0, r3, ror #6
    52f8:	0022ae1e 	eoreq	sl, r2, lr, lsl lr
    52fc:	000baf10 	andeq	sl, fp, r0, lsl pc
    5300:	00162800 	andseq	r2, r6, r0, lsl #16
    5304:	50011f00 	andpl	r1, r1, r0, lsl #30
    5308:	1f007402 	svcne	0x00007402
    530c:	77025101 	strvc	r5, [r2, -r1, lsl #2]
    5310:	ba1d0000 	blt	745318 <__RAM_SIZE+0x645318>
    5314:	9c100022 	ldcls	0, cr0, [r0], {34}	; 0x22
    5318:	1e000023 	cdpne	0, 0, cr0, cr0, cr3, {1}
    531c:	100022c8 	andne	r2, r0, r8, asr #5
    5320:	0000237f 	andeq	r2, r0, pc, ror r3
    5324:	00001645 	andeq	r1, r0, r5, asr #12
    5328:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    532c:	1d001074 	stcne	0, cr1, [r0, #-464]	; 0xfffffe30
    5330:	100022d0 	ldrdne	r2, [r0], -r0
    5334:	0000240e 	andeq	r2, r0, lr, lsl #8
    5338:	0022d61d 	eoreq	sp, r2, sp, lsl r6
    533c:	00239c10 	eoreq	r9, r3, r0, lsl ip
    5340:	22e02000 	rsccs	r2, r0, #0
    5344:	241c1000 	ldrcs	r1, [ip], #-0
    5348:	011f0000 	tsteq	pc, r0
    534c:	60910250 	addsvs	r0, r1, r0, asr r2
    5350:	fa1e0000 	blx	785358 <__RAM_SIZE+0x685358>
    5354:	bd100022 	ldclt	0, cr0, [r0, #-136]	; 0xffffff78
    5358:	7c00000a 	stcvc	0, cr0, [r0], {10}
    535c:	1f000016 	svcne	0x00000016
    5360:	74025001 	strvc	r5, [r2], #-1
    5364:	fe1d0000 	cdp2	0, 1, cr0, cr13, cr0, {0}
    5368:	2b100022 	blcs	4053f8 <__RAM_SIZE+0x3053f8>
    536c:	1e000024 	cdpne	0, 0, cr0, cr0, cr4, {1}
    5370:	10002306 	andne	r2, r0, r6, lsl #6
    5374:	00000abd 			; <UNDEFINED> instruction: 0x00000abd
    5378:	00001699 	muleq	r0, r9, r6
    537c:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    5380:	1d000074 	stcne	0, cr0, [r0, #-464]	; 0xfffffe30
    5384:	1000230a 	andne	r2, r0, sl, lsl #6
    5388:	0000242b 	andeq	r2, r0, fp, lsr #8
    538c:	0023101e 	eoreq	r1, r3, lr, lsl r0
    5390:	000a6110 	andeq	r6, sl, r0, lsl r1
    5394:	0016b600 	andseq	fp, r6, r0, lsl #12
    5398:	50011f00 	andpl	r1, r1, r0, lsl #30
    539c:	00007402 	andeq	r7, r0, r2, lsl #8
    53a0:	0023181d 	eoreq	r1, r3, sp, lsl r8
    53a4:	00238e10 	eoreq	r8, r3, r0, lsl lr
    53a8:	232c1d00 			; <UNDEFINED> instruction: 0x232c1d00
    53ac:	239c1000 	orrscs	r1, ip, #0
    53b0:	301d0000 	andscc	r0, sp, r0
    53b4:	3a100023 	bcc	405448 <__RAM_SIZE+0x305448>
    53b8:	1d000024 	stcne	0, cr0, [r0, #-144]	; 0xffffff70
    53bc:	10002334 	andne	r2, r0, r4, lsr r3
    53c0:	0000238e 	andeq	r2, r0, lr, lsl #7
    53c4:	0023501d 	eoreq	r5, r3, sp, lsl r0
    53c8:	00239c10 	eoreq	r9, r3, r0, lsl ip
    53cc:	23581e00 	cmpcs	r8, #0, 28
    53d0:	24491000 	strbcs	r1, [r9], #-0
    53d4:	16fd0000 	ldrbtne	r0, [sp], r0
    53d8:	011f0000 	tsteq	pc, r0
    53dc:	60910250 	addsvs	r0, r1, r0, asr r2
    53e0:	0251011f 	subseq	r0, r1, #-1073741817	; 0xc0000007
    53e4:	1e005c91 	mcrne	12, 0, r5, cr0, cr1, {4}
    53e8:	10002362 	andne	r2, r0, r2, ror #6
    53ec:	00000a61 	andeq	r0, r0, r1, ror #20
    53f0:	00001711 	andeq	r1, r0, r1, lsl r7
    53f4:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    53f8:	1e000074 	mcrne	0, 0, r0, cr0, cr4, {3}
    53fc:	10002370 	andne	r2, r0, r0, ror r3
    5400:	00002458 	andeq	r2, r0, r8, asr r4
    5404:	00001725 	andeq	r1, r0, r5, lsr #14
    5408:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    540c:	1e002c74 	mcrne	12, 0, r2, cr0, cr4, {3}
    5410:	10002376 	andne	r2, r0, r6, ror r3
    5414:	00000abd 			; <UNDEFINED> instruction: 0x00000abd
    5418:	00001739 	andeq	r1, r0, r9, lsr r7
    541c:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    5420:	1d000074 	stcne	0, cr0, [r0, #-464]	; 0xfffffe30
    5424:	1000237a 	andne	r2, r0, sl, ror r3
    5428:	0000242b 	andeq	r2, r0, fp, lsr #8
    542c:	0023821d 	eoreq	r8, r3, sp, lsl r2
    5430:	00240e10 	eoreq	r0, r4, r0, lsl lr
    5434:	01210000 			; <UNDEFINED> instruction: 0x01210000
    5438:	00000efe 	strdeq	r0, [r0], -lr
    543c:	0c053101 	stfeqs	f3, [r5], {1}
    5440:	0000f301 	andeq	pc, r0, r1, lsl #6
	...
    544c:	0043b000 	subeq	fp, r3, r0
    5450:	18790100 	ldmdane	r9!, {r8}^
    5454:	25190000 	ldrcs	r0, [r9, #-0]
    5458:	01000012 	tsteq	r0, r2, lsl r0
    545c:	d22d0531 	eorle	r0, sp, #205520896	; 0xc400000
    5460:	fa000003 	blx	5474 <__HEAP_SIZE+0x4474>
    5464:	d0000043 	andle	r0, r0, r3, asr #32
    5468:	19000043 	stmdbne	r0, {r0, r1, r6}
    546c:	00000af9 	strdeq	r0, [r0], -r9
    5470:	32053201 	andcc	r3, r5, #268435456	; 0x10000000
    5474:	000010f7 	strdeq	r1, [r0], -r7
    5478:	0000450b 	andeq	r4, r0, fp, lsl #10
    547c:	00004507 	andeq	r4, r0, r7, lsl #10
    5480:	001a211a 	andseq	r2, sl, sl, lsl r1
    5484:	05340100 	ldreq	r0, [r4, #-256]!	; 0xffffff00
    5488:	0000f310 	andeq	pc, r0, r0, lsl r3	; <UNPREDICTABLE>
    548c:	00452b00 	subeq	r2, r5, r0, lsl #22
    5490:	00452900 	subeq	r2, r5, r0, lsl #18
    5494:	0c2e1a00 			; <UNDEFINED> instruction: 0x0c2e1a00
    5498:	35010000 	strcc	r0, [r1, #-0]
    549c:	01041105 	tsteq	r4, r5, lsl #2
    54a0:	454e0000 	strbmi	r0, [lr, #-0]
    54a4:	453e0000 	ldrmi	r0, [lr, #-0]!
    54a8:	241a0000 	ldrcs	r0, [sl], #-0
    54ac:	01000012 	tsteq	r0, r2, lsl r0
    54b0:	5c150536 	cfldr32pl	mvfx0, [r5], {54}	; 0x36
    54b4:	d8000006 	stmdale	r0, {r1, r2}
    54b8:	ae000045 	cdpge	0, 0, cr0, cr0, cr5, {2}
    54bc:	28000045 	stmdacs	r0, {r0, r2, r6}
    54c0:	000002e8 	andeq	r0, r0, r8, ror #5
    54c4:	0000185f 	andeq	r1, r0, pc, asr r8
    54c8:	000ce31a 	andeq	lr, ip, sl, lsl r3
    54cc:	05600100 	strbeq	r0, [r0, #-256]!	; 0xffffff00
    54d0:	0001151b 	andeq	r1, r1, fp, lsl r5
    54d4:	0046f500 	subeq	pc, r6, r0, lsl #10
    54d8:	0046e500 	subeq	lr, r6, r0, lsl #10
    54dc:	03001b00 	movweq	r1, #2816	; 0xb00
    54e0:	c41a0000 	ldrgt	r0, [sl], #-0
    54e4:	0100000b 	tsteq	r0, fp
    54e8:	d11a0567 	tstle	sl, r7, ror #10
    54ec:	79000000 	stmdbvc	r0, {}	; <UNPREDICTABLE>
    54f0:	73000047 	movwvc	r0, #71	; 0x47
    54f4:	1c000047 	stcne	0, cr0, [r0], {71}	; 0x47
	...
    5500:	00001839 	andeq	r1, r0, r9, lsr r8
    5504:	0011121a 	andseq	r1, r1, sl, lsl r2
    5508:	05cb0100 	strbeq	r0, [fp, #256]	; 0x100
    550c:	00011511 	andeq	r1, r1, r1, lsl r5
    5510:	0047a800 	subeq	sl, r7, r0, lsl #16
    5514:	0047a400 	subeq	sl, r7, r0, lsl #8
    5518:	00001d00 	andeq	r1, r0, r0, lsl #26
    551c:	23700000 	cmncs	r0, #0
    5520:	1e000000 	cdpne	0, 0, cr0, cr0, cr0, {0}
    5524:	00000000 	andeq	r0, r0, r0
    5528:	00000576 	andeq	r0, r0, r6, ror r5
    552c:	0000184d 	andeq	r1, r0, sp, asr #16
    5530:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    5534:	20000074 	andcs	r0, r0, r4, ror r0
    5538:	00000000 	andeq	r0, r0, r0
    553c:	0000237f 	andeq	r2, r0, pc, ror r3
    5540:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    5544:	00002c74 	andeq	r2, r0, r4, ror ip
    5548:	00001d00 	andeq	r1, r0, r0, lsl #26
    554c:	23f20000 	mvnscs	r0, #0
    5550:	00200000 	eoreq	r0, r0, r0
    5554:	00000000 	andeq	r0, r0, r0
    5558:	1f000024 	svcne	0x00000024
    555c:	75025001 	strvc	r5, [r2, #-1]
    5560:	21000000 	mrscs	r0, (UNDEF: 0)
    5564:	000b5901 	andeq	r5, fp, r1, lsl #18
    5568:	04850100 	streq	r0, [r5], #256	; 0x100
    556c:	00f3010c 	rscseq	r0, r3, ip, lsl #2
	...
    5578:	47c60000 	strbmi	r0, [r6, r0]
    557c:	ee010000 	cdp	0, 0, cr0, cr1, cr0, {0}
    5580:	19000019 	stmdbne	r0, {r0, r3, r4}
    5584:	00001225 	andeq	r1, r0, r5, lsr #4
    5588:	34048501 	strcc	r8, [r4], #-1281	; 0xfffffaff
    558c:	000003d2 	ldrdeq	r0, [r0], -r2
    5590:	00004814 	andeq	r4, r0, r4, lsl r8
    5594:	000047e6 	andeq	r4, r0, r6, ror #15
    5598:	0011a619 	andseq	sl, r1, r9, lsl r6
    559c:	04860100 	streq	r0, [r6], #256	; 0x100
    55a0:	0000ba39 	andeq	fp, r0, r9, lsr sl
    55a4:	00493e00 	subeq	r3, r9, r0, lsl #28
    55a8:	00493a00 	subeq	r3, r9, r0, lsl #20
    55ac:	0af91900 	beq	ffe4b9b4 <__StackTop+0xc7d4b9b4>
    55b0:	87010000 	strhi	r0, [r1, -r0]
    55b4:	10f73904 	rscsne	r3, r7, r4, lsl #18
    55b8:	49600000 	stmdbmi	r0!, {}^	; <UNPREDICTABLE>
    55bc:	495c0000 	ldmdbmi	ip, {}^	; <UNPREDICTABLE>
    55c0:	ff190000 			; <UNDEFINED> instruction: 0xff190000
    55c4:	0100000b 	tsteq	r0, fp
    55c8:	ff370488 			; <UNDEFINED> instruction: 0xff370488
    55cc:	82000000 	andhi	r0, r0, #0
    55d0:	7e000049 	cdpvc	0, 0, cr0, cr0, cr9, {2}
    55d4:	1a000049 	bne	5700 <__HEAP_SIZE+0x4700>
    55d8:	00001a21 	andeq	r1, r0, r1, lsr #20
    55dc:	10048a01 	andne	r8, r4, r1, lsl #20
    55e0:	000000f3 	strdeq	r0, [r0], -r3
    55e4:	000049a2 	andeq	r4, r0, r2, lsr #19
    55e8:	000049a0 	andeq	r4, r0, r0, lsr #19
    55ec:	000c2e1a 	andeq	r2, ip, sl, lsl lr
    55f0:	048b0100 	streq	r0, [fp], #256	; 0x100
    55f4:	00010411 	andeq	r0, r1, r1, lsl r4
    55f8:	0049bd00 	subeq	fp, r9, r0, lsl #26
    55fc:	0049b500 	subeq	fp, r9, r0, lsl #10
    5600:	12241a00 	eorne	r1, r4, #0, 20
    5604:	8c010000 	stchi	0, cr0, [r1], {-0}
    5608:	065c1504 	ldrbeq	r1, [ip], -r4, lsl #10
    560c:	4a1f0000 	bmi	7c5614 <__RAM_SIZE+0x6c5614>
    5610:	49f10000 	ldmibmi	r1!, {}^	; <UNPREDICTABLE>
    5614:	001c0000 	andseq	r0, ip, r0
    5618:	00000000 	andeq	r0, r0, r0
    561c:	d4000000 	strle	r0, [r0], #-0
    5620:	1a000019 	bne	568c <__HEAP_SIZE+0x468c>
    5624:	00000bc4 	andeq	r0, r0, r4, asr #23
    5628:	1a04b001 	bne	131634 <__RAM_SIZE+0x31634>
    562c:	000000d1 	ldrdeq	r0, [r0], -r1
    5630:	00004b4b 	andeq	r4, r0, fp, asr #22
    5634:	00004b45 	andeq	r4, r0, r5, asr #22
    5638:	000ea11a 	andeq	sl, lr, sl, lsl r1
    563c:	04b10100 	ldrteq	r0, [r1], #256	; 0x100
    5640:	0001151f 	andeq	r1, r1, pc, lsl r5
    5644:	004b7800 	subeq	r7, fp, r0, lsl #16
    5648:	004b7600 	subeq	r7, fp, r0, lsl #12
    564c:	00001c00 	andeq	r1, r0, r0, lsl #24
    5650:	00000000 	andeq	r0, r0, r0
    5654:	198f0000 	stmibne	pc, {}	; <UNPREDICTABLE>
    5658:	121a0000 	andsne	r0, sl, #0
    565c:	01000011 	tsteq	r0, r1, lsl r0
    5660:	1511051e 	ldrne	r0, [r1, #-1310]	; 0xfffffae2
    5664:	8f000001 	svchi	0x00000001
    5668:	8b00004b 	blhi	579c <__HEAP_SIZE+0x479c>
    566c:	1d00004b 	stcne	0, cr0, [r0, #-300]	; 0xfffffed4
    5670:	00000000 	andeq	r0, r0, r0
    5674:	00002370 	andeq	r2, r0, r0, ror r3
    5678:	00001e00 	andeq	r1, r0, r0, lsl #28
    567c:	0bfe0000 	bleq	fff85684 <__StackTop+0xc7e85684>
    5680:	19af0000 	stmibne	pc!, {}	; <UNPREDICTABLE>
    5684:	011f0000 	tsteq	pc, r0
    5688:	00740250 	rsbseq	r0, r4, r0, asr r2
    568c:	0251011f 	subseq	r0, r1, #-1073741817	; 0xc0000007
    5690:	011f0077 	tsteq	pc, r7, ror r0	; <UNPREDICTABLE>
    5694:	00750252 	rsbseq	r0, r5, r2, asr r2
    5698:	00001e00 	andeq	r1, r0, r0, lsl #28
    569c:	05760000 	ldrbeq	r0, [r6, #-0]!
    56a0:	19c30000 	stmibne	r3, {}^	; <UNPREDICTABLE>
    56a4:	011f0000 	tsteq	pc, r0
    56a8:	00740250 	rsbseq	r0, r4, r0, asr r2
    56ac:	00002000 	andeq	r2, r0, r0
    56b0:	237f0000 	cmncs	pc, #0
    56b4:	011f0000 	tsteq	pc, r0
    56b8:	2c740250 	lfmcs	f0, 2, [r4], #-320	; 0xfffffec0
    56bc:	001d0000 	andseq	r0, sp, r0
    56c0:	f2000000 	vhadd.s8	d0, d0, d0
    56c4:	20000023 	andcs	r0, r0, r3, lsr #32
    56c8:	00000000 	andeq	r0, r0, r0
    56cc:	00002400 	andeq	r2, r0, r0, lsl #8
    56d0:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    56d4:	00000076 	andeq	r0, r0, r6, ror r0
    56d8:	0dfa0121 	ldfeqe	f0, [sl, #132]!	; 0x84
    56dc:	ab010000 	blge	456e4 <__HEAP_SIZE+0x446e4>
    56e0:	f3010c03 			; <UNDEFINED> instruction: 0xf3010c03
	...
    56ec:	ad000000 	stcge	0, cr0, [r0, #-0]
    56f0:	0100004b 	tsteq	r0, fp, asr #32
    56f4:	00001c29 	andeq	r1, r0, r9, lsr #24
    56f8:	00122519 	andseq	r2, r2, r9, lsl r5
    56fc:	03ab0100 			; <UNDEFINED> instruction: 0x03ab0100
    5700:	0003d22d 	andeq	sp, r3, sp, lsr #4
    5704:	004bf500 	subeq	pc, fp, r0, lsl #10
    5708:	004bf100 	subeq	pc, fp, r0, lsl #2
    570c:	11a61900 			; <UNDEFINED> instruction: 0x11a61900
    5710:	ac010000 	stcge	0, cr0, [r1], {-0}
    5714:	00ba3203 	adcseq	r3, sl, r3, lsl #4
    5718:	4c170000 	ldcmi	0, cr0, [r7], {-0}
    571c:	4c130000 	ldcmi	0, cr0, [r3], {-0}
    5720:	e9190000 	ldmdb	r9, {}	; <UNPREDICTABLE>
    5724:	01000020 	tsteq	r0, r0, lsr #32
    5728:	1a2a03ad 	bne	a865e4 <__RAM_SIZE+0x9865e4>
    572c:	37000001 	strcc	r0, [r0, -r1]
    5730:	3500004c 	strcc	r0, [r0, #-76]	; 0xffffffb4
    5734:	1900004c 	stmdbne	r0, {r2, r3, r6}
    5738:	00000bff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    573c:	3003ae01 	andcc	sl, r3, r1, lsl #28
    5740:	000000ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    5744:	00004c4e 	andeq	r4, r0, lr, asr #24
    5748:	00004c4a 	andeq	r4, r0, sl, asr #24
    574c:	000d3f1a 	andeq	r3, sp, sl, lsl pc
    5750:	03b00100 	movseq	r0, #0, 2
    5754:	0000f310 	andeq	pc, r0, r0, lsl r3	; <UNPREDICTABLE>
    5758:	004c7600 	subeq	r7, ip, r0, lsl #12
    575c:	004c6c00 	subeq	r6, ip, r0, lsl #24
    5760:	0c671a00 			; <UNDEFINED> instruction: 0x0c671a00
    5764:	b0010000 	andlt	r0, r1, r0
    5768:	00f32903 	rscseq	r2, r3, r3, lsl #18
    576c:	4cbd0000 	ldcmi	0, cr0, [sp]
    5770:	4cb70000 	ldcmi	0, cr0, [r7]
    5774:	6d220000 	stcvs	0, cr0, [r2, #-0]
    5778:	0100001c 	tsteq	r0, ip, lsl r0
    577c:	c60f03b1 			; <UNDEFINED> instruction: 0xc60f03b1
    5780:	02000003 	andeq	r0, r0, #3
    5784:	241a6091 	ldrcs	r6, [sl], #-145	; 0xffffff6f
    5788:	01000012 	tsteq	r0, r2, lsl r0
    578c:	5c1503b2 	ldcpl	3, cr0, [r5], {178}	; 0xb2
    5790:	ea000006 	b	57b0 <__HEAP_SIZE+0x47b0>
    5794:	e600004c 	str	r0, [r0], -ip, asr #32
    5798:	2800004c 	stmdacs	r0, {r2, r3, r6}
    579c:	000002d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    57a0:	00001b33 	andeq	r1, r0, r3, lsr fp
    57a4:	000ea11a 	andeq	sl, lr, sl, lsl r1
    57a8:	03cd0100 	biceq	r0, sp, #0, 2
    57ac:	00011527 	andeq	r1, r1, r7, lsr #10
    57b0:	004d0c00 	subeq	r0, sp, r0, lsl #24
    57b4:	004d0800 	subeq	r0, sp, r0, lsl #16
    57b8:	00001e00 	andeq	r1, r0, r0, lsl #28
    57bc:	0bfe0000 	bleq	fff857c4 <__StackTop+0xc7e857c4>
    57c0:	1aef0000 	bne	ffbc57c8 <__StackTop+0xc7ac57c8>
    57c4:	011f0000 	tsteq	pc, r0
    57c8:	00740250 	rsbseq	r0, r4, r0, asr r2
    57cc:	0251011f 	subseq	r0, r1, #-1073741817	; 0xc0000007
    57d0:	011f0077 	tsteq	pc, r7, ror r0	; <UNPREDICTABLE>
    57d4:	00750252 	rsbseq	r0, r5, r2, asr r2
    57d8:	00001e00 	andeq	r1, r0, r0, lsl #28
    57dc:	05760000 	ldrbeq	r0, [r6, #-0]!
    57e0:	1b030000 	blne	c57e8 <__HEAP_SIZE+0xc47e8>
    57e4:	011f0000 	tsteq	pc, r0
    57e8:	00740250 	rsbseq	r0, r4, r0, asr r2
    57ec:	00001d00 	andeq	r1, r0, r0, lsl #26
    57f0:	240e0000 	strcs	r0, [lr], #-0
    57f4:	001d0000 	andseq	r0, sp, r0
    57f8:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
    57fc:	1e000024 	cdpne	0, 0, cr0, cr0, cr4, {1}
    5800:	00000000 	andeq	r0, r0, r0
    5804:	0000237f 	andeq	r2, r0, pc, ror r3
    5808:	00001b29 	andeq	r1, r0, r9, lsr #22
    580c:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    5810:	1d002c74 	stcne	12, cr2, [r0, #-464]	; 0xfffffe30
    5814:	00000000 	andeq	r0, r0, r0
    5818:	0000240e 	andeq	r2, r0, lr, lsl #8
    581c:	00001d00 	andeq	r1, r0, r0, lsl #26
    5820:	239c0000 	orrscs	r0, ip, #0
    5824:	001d0000 	andseq	r0, sp, r0
    5828:	9c000000 	stcls	0, cr0, [r0], {-0}
    582c:	1e000023 	cdpne	0, 0, cr0, cr0, cr3, {1}
    5830:	00000000 	andeq	r0, r0, r0
    5834:	0000241c 	andeq	r2, r0, ip, lsl r4
    5838:	00001b59 	andeq	r1, r0, r9, asr fp
    583c:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    5840:	1e006091 	mcrne	0, 0, r6, cr0, cr1, {4}
    5844:	00000000 	andeq	r0, r0, r0
    5848:	00000abd 			; <UNDEFINED> instruction: 0x00000abd
    584c:	00001b6d 	andeq	r1, r0, sp, ror #22
    5850:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    5854:	1d000074 	stcne	0, cr0, [r0, #-464]	; 0xfffffe30
    5858:	00000000 	andeq	r0, r0, r0
    585c:	0000242b 	andeq	r2, r0, fp, lsr #8
    5860:	0000001d 	andeq	r0, r0, sp, lsl r0
    5864:	00238e00 	eoreq	r8, r3, r0, lsl #28
    5868:	00001d00 	andeq	r1, r0, r0, lsl #26
    586c:	239c0000 	orrscs	r0, ip, #0
    5870:	001d0000 	andseq	r0, sp, r0
    5874:	3a000000 	bcc	587c <__HEAP_SIZE+0x487c>
    5878:	1d000024 	stcne	0, cr0, [r0, #-144]	; 0xffffff70
    587c:	00000000 	andeq	r0, r0, r0
    5880:	0000238e 	andeq	r2, r0, lr, lsl #7
    5884:	0000001d 	andeq	r0, r0, sp, lsl r0
    5888:	00239c00 	eoreq	r9, r3, r0, lsl #24
    588c:	00001e00 	andeq	r1, r0, r0, lsl #28
    5890:	24490000 	strbcs	r0, [r9], #-0
    5894:	1bbd0000 	blne	fef4589c <__StackTop+0xc6e4589c>
    5898:	011f0000 	tsteq	pc, r0
    589c:	60910250 	addsvs	r0, r1, r0, asr r2
    58a0:	0251011f 	subseq	r0, r1, #-1073741817	; 0xc0000007
    58a4:	1e005c91 	mcrne	12, 0, r5, cr0, cr1, {4}
    58a8:	00000000 	andeq	r0, r0, r0
    58ac:	000009ad 	andeq	r0, r0, sp, lsr #19
    58b0:	00001bd1 	ldrdeq	r1, [r0], -r1	; <UNPREDICTABLE>
    58b4:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    58b8:	1e000074 	mcrne	0, 0, r0, cr0, cr4, {3}
    58bc:	00000000 	andeq	r0, r0, r0
    58c0:	00002458 	andeq	r2, r0, r8, asr r4
    58c4:	00001be5 	andeq	r1, r0, r5, ror #23
    58c8:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    58cc:	1e001074 	mcrne	0, 0, r1, cr0, cr4, {3}
    58d0:	00000000 	andeq	r0, r0, r0
    58d4:	00000abd 			; <UNDEFINED> instruction: 0x00000abd
    58d8:	00001bf9 	strdeq	r1, [r0], -r9
    58dc:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    58e0:	1d000074 	stcne	0, cr0, [r0, #-464]	; 0xfffffe30
    58e4:	00000000 	andeq	r0, r0, r0
    58e8:	0000242b 	andeq	r2, r0, fp, lsr #8
    58ec:	0000001d 	andeq	r0, r0, sp, lsl r0
    58f0:	00240e00 	eoreq	r0, r4, r0, lsl #28
    58f4:	00001e00 	andeq	r1, r0, r0, lsl #28
    58f8:	0abd0000 	beq	fef45900 <__StackTop+0xc6e45900>
    58fc:	1c1f0000 	ldcne	0, cr0, [pc], {-0}
    5900:	011f0000 	tsteq	pc, r0
    5904:	00740250 	rsbseq	r0, r4, r0, asr r2
    5908:	00001d00 	andeq	r1, r0, r0, lsl #26
    590c:	242b0000 	strtcs	r0, [fp], #-0
    5910:	21000000 	mrscs	r0, (UNDEF: 0)
    5914:	0013f201 	andseq	pc, r3, r1, lsl #4
    5918:	03860100 	orreq	r0, r6, #0, 2
    591c:	03d20113 	bicseq	r0, r2, #-1073741820	; 0xc0000004
	...
    5928:	4d2a0000 	stcmi	0, cr0, [sl, #-0]
    592c:	a4010000 	strge	r0, [r1], #-0
    5930:	1900001c 	stmdbne	r0, {r2, r3, r4}
    5934:	00001010 	andeq	r1, r0, r0, lsl r0
    5938:	44038601 	strmi	r8, [r3], #-1537	; 0xfffff9ff
    593c:	00000115 	andeq	r0, r0, r5, lsl r1
    5940:	00004d6e 	andeq	r4, r0, lr, ror #26
    5944:	00004d62 	andeq	r4, r0, r2, ror #26
    5948:	000d6c19 	andeq	r6, sp, r9, lsl ip
    594c:	03870100 	orreq	r0, r7, #0, 2
    5950:	00011544 	andeq	r1, r1, r4, asr #10
    5954:	004dc900 	subeq	ip, sp, r0, lsl #18
    5958:	004dc100 	subeq	ip, sp, r0, lsl #2
    595c:	0d4d1a00 	vstreq	s3, [sp, #-0]
    5960:	89010000 	stmdbhi	r1, {}	; <UNPREDICTABLE>
    5964:	03d21703 	bicseq	r1, r2, #786432	; 0xc0000
    5968:	4e030000 	cdpmi	0, 0, cr0, cr3, cr0, {0}
    596c:	4dfd0000 	ldclmi	0, cr0, [sp]
    5970:	00200000 	eoreq	r0, r0, r0
    5974:	7e000000 	cdpvc	0, 0, cr0, cr0, cr0, {0}
    5978:	1f000020 	svcne	0x00000020
    597c:	f3035001 	vhadd.u8	d5, d3, d1
    5980:	011f5001 	tsteq	pc, r1
    5984:	1f300151 	svcne	0x00300151
    5988:	32015201 	andcc	r5, r1, #268435456	; 0x10000000
    598c:	01210000 			; <UNDEFINED> instruction: 0x01210000
    5990:	00001069 	andeq	r1, r0, r9, rrx
    5994:	13035e01 	movwne	r5, #15873	; 0x3e01
    5998:	0003d201 	andeq	sp, r3, r1, lsl #4
	...
    59a4:	004e2e00 	subeq	r2, lr, r0, lsl #28
    59a8:	1d410100 	stfnee	f0, [r1, #-0]
    59ac:	10190000 	andsne	r0, r9, r0
    59b0:	01000010 	tsteq	r0, r0, lsl r0
    59b4:	154a035e 	strbne	r0, [sl, #-862]	; 0xfffffca2
    59b8:	8a000001 	bhi	59c4 <__HEAP_SIZE+0x49c4>
    59bc:	7e00004e 	cdpvc	0, 0, cr0, cr0, cr14, {2}
    59c0:	1900004e 	stmdbne	r0, {r1, r2, r3, r6}
    59c4:	00000d6c 	andeq	r0, r0, ip, ror #26
    59c8:	4a035f01 	bmi	dd5d4 <__HEAP_SIZE+0xdc5d4>
    59cc:	00000115 	andeq	r0, r0, r5, lsl r1
    59d0:	00004ee5 	andeq	r4, r0, r5, ror #29
    59d4:	00004edd 	ldrdeq	r4, [r0], -sp
    59d8:	000f5f19 	andeq	r5, pc, r9, lsl pc	; <UNPREDICTABLE>
    59dc:	03600100 	cmneq	r0, #0, 2
    59e0:	001d4148 	andseq	r4, sp, r8, asr #2
    59e4:	004f2300 	subeq	r2, pc, r0, lsl #6
    59e8:	004f1900 	subeq	r1, pc, r0, lsl #18
    59ec:	0d4d1a00 	vstreq	s3, [sp, #-0]
    59f0:	62010000 	andvs	r0, r1, #0
    59f4:	03d21703 	bicseq	r1, r2, #786432	; 0xc0000
    59f8:	4f6e0000 	svcmi	0x006e0000
    59fc:	4f680000 	svcmi	0x00680000
    5a00:	00200000 	eoreq	r0, r0, r0
    5a04:	e9000000 	stmdb	r0, {}	; <UNPREDICTABLE>
    5a08:	1f000021 	svcne	0x00000021
    5a0c:	f3035001 	vhadd.u8	d5, d3, d1
    5a10:	011f5001 	tsteq	pc, r1
    5a14:	1f300151 	svcne	0x00300151
    5a18:	30015201 	andcc	r5, r1, r1, lsl #4
    5a1c:	0353011f 	cmpeq	r3, #-1073741817	; 0xc0000007
    5a20:	1f5201f3 	svcne	0x005201f3
    5a24:	01007d02 	tsteq	r0, r2, lsl #26
    5a28:	07000032 	smladxeq	r0, r2, r0, r0
    5a2c:	0002ab04 	andeq	sl, r2, r4, lsl #22
    5a30:	25012100 	strcs	r2, [r1, #-256]	; 0xffffff00
    5a34:	0100000b 	tsteq	r0, fp
    5a38:	0110032f 	tsteq	r0, pc, lsr #6
    5a3c:	000000f3 	strdeq	r0, [r0], -r3
	...
    5a48:	00004f99 	muleq	r0, r9, pc	; <UNPREDICTABLE>
    5a4c:	001ddb01 	andseq	sp, sp, r1, lsl #22
    5a50:	0b141900 	bleq	50be58 <__RAM_SIZE+0x40be58>
    5a54:	2f010000 	svccs	0x00010000
    5a58:	03d23803 	bicseq	r3, r2, #196608	; 0x30000
    5a5c:	4fbd0000 	svcmi	0x00bd0000
    5a60:	4fb90000 	svcmi	0x00b90000
    5a64:	e9190000 	ldmdb	r9, {}	; <UNPREDICTABLE>
    5a68:	01000020 	tsteq	r0, r0, lsr #32
    5a6c:	1a350330 	bne	d46734 <__RAM_SIZE+0xc46734>
    5a70:	df000001 	svcle	0x00000001
    5a74:	db00004f 	blle	5bb8 <__HEAP_SIZE+0x4bb8>
    5a78:	1a00004f 	bne	5bbc <__HEAP_SIZE+0x4bbc>
    5a7c:	00001a21 	andeq	r1, r0, r1, lsr #20
    5a80:	14033201 	strne	r3, [r3], #-513	; 0xfffffdff
    5a84:	000000f3 	strdeq	r0, [r0], -r3
    5a88:	00005001 	andeq	r5, r0, r1
    5a8c:	00004ffd 	strdeq	r4, [r0], -sp
    5a90:	000b131a 	andeq	r1, fp, sl, lsl r3
    5a94:	03330100 	teqeq	r3, #0, 2
    5a98:	00065c19 	andeq	r5, r6, r9, lsl ip
    5a9c:	00502400 	subseq	r2, r0, r0, lsl #8
    5aa0:	00502000 	subseq	r2, r0, r0
    5aa4:	00001d00 	andeq	r1, r0, r0, lsl #26
    5aa8:	24940000 	ldrcs	r0, [r4], #0
    5aac:	00200000 	eoreq	r0, r0, r0
    5ab0:	06000000 	streq	r0, [r0], -r0
    5ab4:	1f000013 	svcne	0x00000013
    5ab8:	74025001 	strvc	r5, [r2], #-1
    5abc:	51011f00 	tstpl	r1, r0, lsl #30
    5ac0:	00007502 	andeq	r7, r0, r2, lsl #10
    5ac4:	1a012100 	bne	4decc <__HEAP_SIZE+0x4cecc>
    5ac8:	01000013 	tsteq	r0, r3, lsl r0
    5acc:	011002f4 			; <UNDEFINED> instruction: 0x011002f4
    5ad0:	000000f3 	strdeq	r0, [r0], -r3
	...
    5adc:	00005042 	andeq	r5, r0, r2, asr #32
    5ae0:	001e5401 	andseq	r5, lr, r1, lsl #8
    5ae4:	0b141900 	bleq	50beec <__RAM_SIZE+0x40beec>
    5ae8:	f4010000 	vst4.8	{d0-d3}, [r1], r0
    5aec:	03d23802 	bicseq	r3, r2, #131072	; 0x20000
    5af0:	50660000 	rsbpl	r0, r6, r0
    5af4:	50620000 	rsbpl	r0, r2, r0
    5af8:	211a0000 	tstcs	sl, r0
    5afc:	0100001a 	tsteq	r0, sl, lsl r0
    5b00:	f31402f6 	vqsub.u16	q0, q10, q11
    5b04:	86000000 	strhi	r0, [r0], -r0
    5b08:	84000050 	strhi	r0, [r0], #-80	; 0xffffffb0
    5b0c:	1a000050 	bne	5c54 <__HEAP_SIZE+0x4c54>
    5b10:	00000b13 	andeq	r0, r0, r3, lsl fp
    5b14:	1902f701 	stmdbne	r2, {r0, r8, r9, sl, ip, sp, lr, pc}
    5b18:	0000065c 	andeq	r0, r0, ip, asr r6
    5b1c:	0000509e 	muleq	r0, lr, r0
    5b20:	0000509a 	muleq	r0, sl, r0
    5b24:	0000001d 	andeq	r0, r0, sp, lsl r0
    5b28:	00249400 	eoreq	r9, r4, r0, lsl #8
    5b2c:	00002000 	andeq	r2, r0, r0
    5b30:	19ee0000 	stmibne	lr!, {}^	; <UNPREDICTABLE>
    5b34:	011f0000 	tsteq	pc, r0
    5b38:	00740250 	rsbseq	r0, r4, r0, asr r2
    5b3c:	01210000 			; <UNDEFINED> instruction: 0x01210000
    5b40:	00000f6d 	andeq	r0, r0, sp, ror #30
    5b44:	13029801 	movwne	r9, #10241	; 0x2801
    5b48:	0003d201 	andeq	sp, r3, r1, lsl #4
	...
    5b54:	0050bc00 	subseq	fp, r0, r0, lsl #24
    5b58:	1f040100 	svcne	0x00040100
    5b5c:	ad190000 	ldcge	0, cr0, [r9, #-0]
    5b60:	01000010 	tsteq	r0, r0, lsl r0
    5b64:	e23a0298 	eors	r0, sl, #152, 4	; 0x80000009
    5b68:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
    5b6c:	f4000050 	vst4.16	{d0-d3}, [r0 :64], r0
    5b70:	19000050 	stmdbne	r0, {r4, r6}
    5b74:	00000f5f 	andeq	r0, r0, pc, asr pc
    5b78:	3c029901 			; <UNDEFINED> instruction: 0x3c029901
    5b7c:	00001d41 	andeq	r1, r0, r1, asr #26
    5b80:	0000511f 	andeq	r5, r0, pc, lsl r1
    5b84:	00005119 	andeq	r5, r0, r9, lsl r1
    5b88:	000c771a 	andeq	r7, ip, sl, lsl r7
    5b8c:	029b0100 	addseq	r0, fp, #0, 2
    5b90:	0003d217 	andeq	sp, r3, r7, lsl r2
    5b94:	00514f00 	subseq	r4, r1, r0, lsl #30
    5b98:	00514b00 	subseq	r4, r1, r0, lsl #22
    5b9c:	0ed32500 	cdpeq	5, 13, cr2, cr3, cr0, {0}
    5ba0:	9c010000 	stcls	0, cr0, [r1], {-0}
    5ba4:	01151b02 	tsteq	r5, r2, lsl #22
    5ba8:	25010000 	strcs	r0, [r1, #-0]
    5bac:	00000c5b 	andeq	r0, r0, fp, asr ip
    5bb0:	3e029c01 	cdpcc	12, 0, cr9, cr2, cr1, {0}
    5bb4:	00000115 	andeq	r0, r0, r5, lsl r1
    5bb8:	00001e00 	andeq	r1, r0, r0, lsl #28
    5bbc:	21e90000 	mvncs	r0, r0
    5bc0:	1ef30000 	cdpne	0, 15, cr0, cr3, cr0, {0}
    5bc4:	011f0000 	tsteq	pc, r0
    5bc8:	1f310150 	svcne	0x00310150
    5bcc:	30015101 	andcc	r5, r1, r1, lsl #2
    5bd0:	0152011f 	cmpeq	r2, pc, lsl r1
    5bd4:	53011f30 	movwpl	r1, #7984	; 0x1f30
    5bd8:	5101f303 	tstpl	r1, r3, lsl #6	; <UNPREDICTABLE>
    5bdc:	00002000 	andeq	r2, r0, r0
    5be0:	1f930000 	svcne	0x00930000
    5be4:	011f0000 	tsteq	pc, r0
    5be8:	00740250 	rsbseq	r0, r4, r0, asr r2
    5bec:	01210000 			; <UNDEFINED> instruction: 0x01210000
    5bf0:	00000fac 	andeq	r0, r0, ip, lsr #31
    5bf4:	13028401 	movwne	r8, #9217	; 0x2401
    5bf8:	0003d201 	andeq	sp, r3, r1, lsl #4
	...
    5c04:	00516d00 	subseq	r6, r1, r0, lsl #26
    5c08:	1f930100 	svcne	0x00930100
    5c0c:	ad190000 	ldcge	0, cr0, [r9, #-0]
    5c10:	01000010 	tsteq	r0, r0, lsl r0
    5c14:	e2340284 	eors	r0, r4, #132, 4	; 0x40000008
    5c18:	91000000 	mrsls	r0, (UNDEF: 0)
    5c1c:	8d000051 	stchi	0, cr0, [r0, #-324]	; 0xfffffebc
    5c20:	1a000051 	bne	5d6c <__HEAP_SIZE+0x4d6c>
    5c24:	00000c77 	andeq	r0, r0, r7, ror ip
    5c28:	17028601 	strne	r8, [r2, -r1, lsl #12]
    5c2c:	000003d2 	ldrdeq	r0, [r0], -r2
    5c30:	000051b6 			; <UNDEFINED> instruction: 0x000051b6
    5c34:	000051b2 			; <UNDEFINED> instruction: 0x000051b2
    5c38:	000ed325 	andeq	sp, lr, r5, lsr #6
    5c3c:	02870100 	addeq	r0, r7, #0, 2
    5c40:	0001151b 	andeq	r1, r1, fp, lsl r5
    5c44:	5b250100 	blpl	94604c <__RAM_SIZE+0x84604c>
    5c48:	0100000c 	tsteq	r0, ip
    5c4c:	153e0287 	ldrne	r0, [lr, #-647]!	; 0xfffffd79
    5c50:	00000001 	andeq	r0, r0, r1
    5c54:	0000001e 	andeq	r0, r0, lr, lsl r0
    5c58:	00207e00 	eoreq	r7, r0, r0, lsl #28
    5c5c:	001f8200 	andseq	r8, pc, r0, lsl #4
    5c60:	50011f00 	andpl	r1, r1, r0, lsl #30
    5c64:	011f3101 	tsteq	pc, r1, lsl #2
    5c68:	00300151 	eorseq	r0, r0, r1, asr r1
    5c6c:	00000020 	andeq	r0, r0, r0, lsr #32
    5c70:	001f9300 	andseq	r9, pc, r0, lsl #6
    5c74:	50011f00 	andpl	r1, r1, r0, lsl #30
    5c78:	00007402 	andeq	r7, r0, r2, lsl #8
    5c7c:	0fcb2600 	svceq	0x00cb2600
    5c80:	66010000 	strvs	r0, [r1], -r0
    5c84:	00011102 	andeq	r1, r1, r2, lsl #2
    5c88:	00000000 	andeq	r0, r0, r0
    5c8c:	d4000000 	strle	r0, [r0], #-0
    5c90:	01000051 	qaddeq	r0, r1, r0
    5c94:	00001fe4 	andeq	r1, r0, r4, ror #31
    5c98:	000c7619 	andeq	r7, ip, r9, lsl r6
    5c9c:	02660100 	rsbeq	r0, r6, #0, 2
    5ca0:	0006562f 	andeq	r5, r6, pc, lsr #12
    5ca4:	00520600 	subseq	r0, r2, r0, lsl #12
    5ca8:	00520000 	subseq	r0, r2, r0
    5cac:	00002000 	andeq	r2, r0, r0
    5cb0:	19ee0000 	stmibne	lr!, {}^	; <UNPREDICTABLE>
    5cb4:	011f0000 	tsteq	pc, r0
    5cb8:	01f30350 	mvnseq	r0, r0, asr r3
    5cbc:	51011f50 	tstpl	r1, r0, asr pc
    5cc0:	011f3001 	tsteq	pc, r1
    5cc4:	1f300152 	svcne	0x00300152
    5cc8:	30015301 	andcc	r5, r1, r1, lsl #6
    5ccc:	45260000 	strmi	r0, [r6, #-0]!
    5cd0:	0100000c 	tsteq	r0, ip
    5cd4:	010d0236 	tsteq	sp, r6, lsr r2
    5cd8:	1000223a 	andne	r2, r0, sl, lsr r2
    5cdc:	1000225a 	andne	r2, r0, sl, asr r2
    5ce0:	00005232 	andeq	r5, r0, r2, lsr r2
    5ce4:	00207e01 	eoreq	r7, r0, r1, lsl #28
    5ce8:	10dd1900 	sbcsne	r1, sp, r0, lsl #18
    5cec:	36010000 	strcc	r0, [r1], -r0
    5cf0:	01153602 	tsteq	r5, r2, lsl #12
    5cf4:	525a0000 	subspl	r0, sl, #0
    5cf8:	52520000 	subspl	r0, r2, #0
    5cfc:	78190000 	ldmdavc	r9, {}	; <UNPREDICTABLE>
    5d00:	0100000e 	tsteq	r0, lr
    5d04:	15360237 	ldrne	r0, [r6, #-567]!	; 0xfffffdc9
    5d08:	9b000001 	blls	5d14 <__HEAP_SIZE+0x4d14>
    5d0c:	93000052 	movwls	r0, #82	; 0x52
    5d10:	19000052 	stmdbne	r0, {r1, r4, r6}
    5d14:	00000d7c 	andeq	r0, r0, ip, ror sp
    5d18:	2e023801 	cdpcs	8, 0, cr3, cr2, cr1, {0}
    5d1c:	0000012b 	andeq	r0, r0, fp, lsr #2
    5d20:	000052d8 	ldrdeq	r5, [r0], -r8
    5d24:	000052d2 	ldrdeq	r5, [r0], -r2
    5d28:	0010ad19 	andseq	sl, r0, r9, lsl sp
    5d2c:	02390100 	eorseq	r0, r9, #0, 2
    5d30:	0000e232 	andeq	lr, r0, r2, lsr r2
    5d34:	00530800 	subseq	r0, r3, r0, lsl #16
    5d38:	00530400 	subseq	r0, r3, r0, lsl #8
    5d3c:	0c761900 			; <UNDEFINED> instruction: 0x0c761900
    5d40:	3a010000 	bcc	45d48 <__HEAP_SIZE+0x44d48>
    5d44:	06562e02 	ldrbeq	r2, [r6], -r2, lsl #28
    5d48:	532d0000 			; <UNDEFINED> instruction: 0x532d0000
    5d4c:	53290000 			; <UNDEFINED> instruction: 0x53290000
    5d50:	50200000 	eorpl	r0, r0, r0
    5d54:	a8100022 	ldmdage	r0, {r1, r5}
    5d58:	1f000022 	svcne	0x00000022
    5d5c:	74025001 	strvc	r5, [r2], #-1
    5d60:	51011f00 	tstpl	r1, r0, lsl #30
    5d64:	00003101 	andeq	r3, r0, r1, lsl #2
    5d68:	0f980121 	svceq	0x00980121
    5d6c:	f6010000 			; <UNDEFINED> instruction: 0xf6010000
    5d70:	d2011301 	andle	r1, r1, #67108864	; 0x4000000
    5d74:	00000003 	andeq	r0, r0, r3
    5d78:	00000000 	andeq	r0, r0, r0
    5d7c:	4d000000 	stcmi	0, cr0, [r0, #-0]
    5d80:	01000053 	qaddeq	r0, r3, r0
    5d84:	00002160 	andeq	r2, r0, r0, ror #2
    5d88:	0010dd19 	andseq	sp, r0, r9, lsl sp
    5d8c:	01f60100 	mvnseq	r0, r0, lsl #2
    5d90:	0001153a 	andeq	r1, r1, sl, lsr r5
    5d94:	00539d00 	subseq	r9, r3, r0, lsl #26
    5d98:	00539100 	subseq	r9, r3, r0, lsl #2
    5d9c:	0e781900 	vaddeq.f16	s3, s16, s0	; <UNPREDICTABLE>
    5da0:	f7010000 			; <UNDEFINED> instruction: 0xf7010000
    5da4:	01153a01 	tsteq	r5, r1, lsl #20
    5da8:	53f40000 	mvnspl	r0, #0
    5dac:	53ea0000 	mvnpl	r0, #0
    5db0:	ad190000 	ldcge	0, cr0, [r9, #-0]
    5db4:	01000010 	tsteq	r0, r0, lsl r0
    5db8:	e23601f8 	eors	r0, r6, #248, 2	; 0x3e
    5dbc:	3e000000 	cdpcc	0, 0, cr0, cr0, cr0, {0}
    5dc0:	36000054 			; <UNDEFINED> instruction: 0x36000054
    5dc4:	1a000054 	bne	5f1c <__HEAP_SIZE+0x4f1c>
    5dc8:	00000c76 	andeq	r0, r0, r6, ror ip
    5dcc:	1301fa01 	movwne	pc, #6657	; 0x1a01	; <UNPREDICTABLE>
    5dd0:	00000656 	andeq	r0, r0, r6, asr r6
    5dd4:	00005482 	andeq	r5, r0, r2, lsl #9
    5dd8:	00005478 	andeq	r5, r0, r8, ror r4
    5ddc:	00116d1a 	andseq	r6, r1, sl, lsl sp
    5de0:	01fb0100 	mvnseq	r0, r0, lsl #2
    5de4:	00002910 	andeq	r2, r0, r0, lsl r9
    5de8:	0054ca00 	subseq	ip, r4, r0, lsl #20
    5dec:	0054c400 	subseq	ip, r4, r0, lsl #8
    5df0:	0d7c1a00 	vldmdbeq	ip!, {s3-s2}
    5df4:	fc010000 	stc2	0, cr0, [r1], {-0}
    5df8:	012b1301 			; <UNDEFINED> instruction: 0x012b1301
    5dfc:	55030000 	strpl	r0, [r3, #-0]
    5e00:	54fb0000 	ldrbtpl	r0, [fp], #0
    5e04:	001e0000 	andseq	r0, lr, r0
    5e08:	a3000000 	movwge	r0, #0
    5e0c:	35000024 	strcc	r0, [r0, #-36]	; 0xffffffdc
    5e10:	1f000021 	svcne	0x00000021
    5e14:	74075001 	strvc	r5, [r7], #-1
    5e18:	1e007600 	cfmadd32ne	mvax0, mvfx7, mvfx0, mvfx0
    5e1c:	20005c23 	andcs	r5, r0, r3, lsr #24
    5e20:	00000000 	andeq	r0, r0, r0
    5e24:	00001fe4 	andeq	r1, r0, r4, ror #31
    5e28:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    5e2c:	011f0076 	tsteq	pc, r6, ror r0	; <UNPREDICTABLE>
    5e30:	00740251 	rsbseq	r0, r4, r1, asr r2
    5e34:	0352011f 	cmpeq	r2, #-1073741817	; 0xc0000007
    5e38:	1f00dc75 	svcne	0x0000dc75
    5e3c:	77025301 	strvc	r5, [r2, -r1, lsl #6]
    5e40:	7d021f00 	stcvc	15, cr1, [r2, #-0]
    5e44:	00750200 	rsbseq	r0, r5, r0, lsl #4
    5e48:	01240000 			; <UNDEFINED> instruction: 0x01240000
    5e4c:	00000aa1 	andeq	r0, r0, r1, lsr #21
    5e50:	1001be01 	andne	fp, r1, r1, lsl #28
    5e54:	0000f301 	andeq	pc, r0, r1, lsl #6
	...
    5e60:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    5e64:	0021dd01 	eoreq	sp, r1, r1, lsl #26
    5e68:	12251900 	eorne	r1, r5, #0, 18
    5e6c:	be010000 	cdplt	0, 0, cr0, cr1, cr0, {0}
    5e70:	03d23d01 	bicseq	r3, r2, #1, 26	; 0x40
    5e74:	55450000 	strbpl	r0, [r5, #-0]
    5e78:	553d0000 	ldrpl	r0, [sp, #-0]!
    5e7c:	7b2a0000 	blvc	a85e84 <__RAM_SIZE+0x985e84>
    5e80:	0100000d 	tsteq	r0, sp
    5e84:	dd3a01bf 	ldfles	f0, [sl, #-764]!	; 0xfffffd04
    5e88:	01000021 	tsteq	r0, r1, lsr #32
    5e8c:	0f5e2a51 	svceq	0x005e2a51
    5e90:	c0010000 	andgt	r0, r1, r0
    5e94:	21e34001 	mvncs	r4, r1
    5e98:	52010000 	andpl	r0, r1, #0
    5e9c:	001a211a 	andseq	r2, sl, sl, lsl r1
    5ea0:	01c20100 	biceq	r0, r2, r0, lsl #2
    5ea4:	0000f314 	andeq	pc, r0, r4, lsl r3	; <UNPREDICTABLE>
    5ea8:	00558100 	subseq	r8, r5, r0, lsl #2
    5eac:	00557d00 	subseq	r7, r5, r0, lsl #26
    5eb0:	12241a00 	eorne	r1, r4, #0, 20
    5eb4:	c3010000 	movwgt	r0, #4096	; 0x1000
    5eb8:	065c1901 	ldrbeq	r1, [ip], -r1, lsl #18
    5ebc:	55a90000 	strpl	r0, [r9, #0]!
    5ec0:	55a10000 	strpl	r0, [r1, #0]!
    5ec4:	07000000 	streq	r0, [r0, -r0]
    5ec8:	00012b04 	andeq	r2, r1, r4, lsl #22
    5ecc:	41040700 	tstmi	r4, r0, lsl #14
    5ed0:	2100001d 	tstcs	r0, sp, lsl r0
    5ed4:	00120a01 	andseq	r0, r2, r1, lsl #20
    5ed8:	01780100 	cmneq	r8, r0, lsl #2
    5edc:	03d20113 	bicseq	r0, r2, #-1073741820	; 0xc0000004
    5ee0:	225a0000 	subscs	r0, sl, #0
    5ee4:	22981000 	addscs	r1, r8, #0
    5ee8:	55e11000 	strbpl	r1, [r1, #0]!
    5eec:	a8010000 	stmdage	r1, {}	; <UNPREDICTABLE>
    5ef0:	19000022 	stmdbne	r0, {r1, r5}
    5ef4:	000010dd 	ldrdeq	r1, [r0], -sp
    5ef8:	40017801 	andmi	r7, r1, r1, lsl #16
    5efc:	00000115 	andeq	r0, r0, r5, lsl r1
    5f00:	00005653 	andeq	r5, r0, r3, asr r6
    5f04:	0000563d 	andeq	r5, r0, sp, lsr r6
    5f08:	000e7819 	andeq	r7, lr, r9, lsl r8
    5f0c:	01790100 	cmneq	r9, r0, lsl #2
    5f10:	00011540 	andeq	r1, r1, r0, asr #10
    5f14:	0056e000 	subseq	lr, r6, r0
    5f18:	0056da00 	subseq	sp, r6, r0, lsl #20
    5f1c:	0d7c1900 			; <UNDEFINED> instruction: 0x0d7c1900
    5f20:	7a010000 	bvc	45f28 <__HEAP_SIZE+0x44f28>
    5f24:	012b3801 			; <UNDEFINED> instruction: 0x012b3801
    5f28:	57120000 	ldrpl	r0, [r2, -r0]
    5f2c:	570c0000 	strpl	r0, [ip, -r0]
    5f30:	5f190000 	svcpl	0x00190000
    5f34:	0100000f 	tsteq	r0, pc
    5f38:	413e017b 	teqmi	lr, fp, ror r1
    5f3c:	4400001d 	strmi	r0, [r0], #-29	; 0xffffffe3
    5f40:	3e000057 	mcrcc	0, 0, r0, cr0, cr7, {2}
    5f44:	19000057 	stmdbne	r0, {r0, r1, r2, r4, r6}
    5f48:	000010ad 	andeq	r1, r0, sp, lsr #1
    5f4c:	3c017c01 	stccc	12, cr7, [r1], {1}
    5f50:	000000e2 	andeq	r0, r0, r2, ror #1
    5f54:	00005771 	andeq	r5, r0, r1, ror r7
    5f58:	0000576d 	andeq	r5, r0, sp, ror #14
    5f5c:	000c761a 	andeq	r7, ip, sl, lsl r6
    5f60:	017e0100 	cmneq	lr, r0, lsl #2
    5f64:	00065613 	andeq	r5, r6, r3, lsl r6
    5f68:	00579d00 	subseq	r9, r7, r0, lsl #26
    5f6c:	00579100 	subseq	r9, r7, r0, lsl #2
    5f70:	227e2000 	rsbscs	r2, lr, #0
    5f74:	1fe41000 	svcne	0x00e41000
    5f78:	011f0000 	tsteq	pc, r0
    5f7c:	01f30350 	mvnseq	r0, r0, asr r3
    5f80:	53011f50 	movwpl	r1, #8016	; 0x1f50
    5f84:	94009104 	strls	r9, [r0], #-260	; 0xfffffefc
    5f88:	7d021f01 	stcvc	15, cr1, [r2, #-4]
    5f8c:	00740200 	rsbseq	r0, r4, r0, lsl #4
    5f90:	01210000 			; <UNDEFINED> instruction: 0x01210000
    5f94:	00001342 	andeq	r1, r0, r2, asr #6
    5f98:	0c012f01 	stceq	15, cr2, [r1], {1}
    5f9c:	0000f301 	andeq	pc, r0, r1, lsl #6
    5fa0:	0021b400 	eoreq	fp, r1, r0, lsl #8
    5fa4:	00223a10 	eoreq	r3, r2, r0, lsl sl
    5fa8:	0057ea10 	subseq	lr, r7, r0, lsl sl
    5fac:	23700100 	cmncs	r0, #0, 2
    5fb0:	25190000 	ldrcs	r0, [r9, #-0]
    5fb4:	01000012 	tsteq	r0, r2, lsl r0
    5fb8:	d22e012f 	eorle	r0, lr, #-1073741813	; 0xc000000b
    5fbc:	32000003 	andcc	r0, r0, #3
    5fc0:	22000058 	andcs	r0, r0, #88	; 0x58
    5fc4:	19000058 	stmdbne	r0, {r3, r4, r6}
    5fc8:	00000c77 	andeq	r0, r0, r7, ror ip
    5fcc:	2b013001 	blcs	51fd8 <__HEAP_SIZE+0x50fd8>
    5fd0:	000000f3 	strdeq	r0, [r0], -r3
    5fd4:	0000589d 	muleq	r0, sp, r8
    5fd8:	00005895 	muleq	r0, r5, r8
    5fdc:	001a211a 	andseq	r2, sl, sl, lsl r1
    5fe0:	01320100 	teqeq	r2, r0, lsl #2
    5fe4:	0000f310 	andeq	pc, r0, r0, lsl r3	; <UNPREDICTABLE>
    5fe8:	0058d700 	subseq	sp, r8, r0, lsl #14
    5fec:	0058d100 	subseq	sp, r8, r0, lsl #2
    5ff0:	12241a00 	eorne	r1, r4, #0, 20
    5ff4:	33010000 	movwcc	r0, #4096	; 0x1000
    5ff8:	065c1501 	ldrbeq	r1, [ip], -r1, lsl #10
    5ffc:	59130000 	ldmdbpl	r3, {}	; <UNPREDICTABLE>
    6000:	59030000 	stmdbpl	r3, {}	; <UNPREDICTABLE>
    6004:	dc1d0000 	ldcle	0, cr0, [sp], {-0}
    6008:	8e100021 	cdphi	0, 1, cr0, cr0, cr1, {1}
    600c:	1d000023 	stcne	0, cr0, [r0, #-140]	; 0xffffff74
    6010:	1000220a 	andne	r2, r0, sl, lsl #4
    6014:	0000239c 	muleq	r0, ip, r3
    6018:	0022161e 	eoreq	r1, r2, lr, lsl r6
    601c:	00237f10 	eoreq	r7, r3, r0, lsl pc
    6020:	00234200 	eoreq	r4, r3, r0, lsl #4
    6024:	50011f00 	andpl	r1, r1, r0, lsl #30
    6028:	00107402 	andseq	r7, r0, r2, lsl #8
    602c:	00221e1d 	eoreq	r1, r2, sp, lsl lr
    6030:	00240e10 	eoreq	r0, r4, r0, lsl lr
    6034:	22281e00 	eorcs	r1, r8, #0, 28
    6038:	24b11000 	ldrtcs	r1, [r1], #0
    603c:	235f0000 	cmpcs	pc, #0
    6040:	011f0000 	tsteq	pc, r0
    6044:	10740250 	rsbsne	r0, r4, r0, asr r2
    6048:	22302000 	eorscs	r2, r0, #0
    604c:	24b11000 	ldrtcs	r1, [r1], #0
    6050:	011f0000 	tsteq	pc, r0
    6054:	2c740250 	lfmcs	f0, 2, [r4], #-320	; 0xfffffec0
    6058:	012b0000 			; <UNDEFINED> instruction: 0x012b0000
    605c:	000d0d01 	andeq	r0, sp, r1, lsl #26
    6060:	000d0d00 	andeq	r0, sp, r0, lsl #26
    6064:	06c60800 	strbeq	r0, [r6], r0, lsl #16
    6068:	01012b0d 	tsteq	r1, sp, lsl #22
    606c:	000013cc 	andeq	r1, r0, ip, asr #7
    6070:	000013cc 	andeq	r1, r0, ip, asr #7
    6074:	0c0de808 	stceq	8, cr14, [sp], {8}
    6078:	db01012c 	blle	46530 <__HEAP_SIZE+0x45530>
    607c:	db00000b 	blle	60b0 <__HEAP_SIZE+0x50b0>
    6080:	0500000b 	streq	r0, [r0, #-11]
    6084:	012c0d71 			; <UNDEFINED> instruction: 0x012c0d71
    6088:	000a4b01 	andeq	r4, sl, r1, lsl #22
    608c:	000a4b00 	andeq	r4, sl, r0, lsl #22
    6090:	0d720500 	cfldr64eq	mvdx0, [r2, #-0]
    6094:	2801012b 	stmdacs	r1, {r0, r1, r3, r5, r8}
    6098:	2800000f 	stmdacs	r0, {r0, r1, r2, r3}
    609c:	0800000f 	stmdaeq	r0, {r0, r1, r2, r3}
    60a0:	2b060dcc 	blcs	1897d8 <__RAM_SIZE+0x897d8>
    60a4:	123e0101 	eorsne	r0, lr, #1073741824	; 0x40000000
    60a8:	123e0000 	eorsne	r0, lr, #0
    60ac:	0e080000 	cdpeq	0, 0, cr0, cr8, cr0, {0}
    60b0:	012d060e 			; <UNDEFINED> instruction: 0x012d060e
    60b4:	000bf801 	andeq	pc, fp, r1, lsl #16
    60b8:	000bee00 	andeq	lr, fp, r0, lsl #28
    60bc:	2b000b00 	blcs	8cc4 <__HEAP_SIZE+0x7cc4>
    60c0:	0ebb0101 	frdeqe	f0, f3, f1
    60c4:	0ebb0000 	cdpeq	0, 11, cr0, cr11, cr0, {0}
    60c8:	20080000 	andcs	r0, r8, r0
    60cc:	012c0c0e 			; <UNDEFINED> instruction: 0x012c0c0e
    60d0:	0011c901 	andseq	ip, r1, r1, lsl #18
    60d4:	0011c900 	andseq	ip, r1, r0, lsl #18
    60d8:	06b80a00 	ldrteq	r0, [r8], r0, lsl #20
    60dc:	8501012c 	strhi	r0, [r1, #-300]	; 0xfffffed4
    60e0:	8500000f 	strhi	r0, [r0, #-15]
    60e4:	0500000f 	streq	r0, [r0, #-15]
    60e8:	012c1174 			; <UNDEFINED> instruction: 0x012c1174
    60ec:	000c9101 	andeq	r9, ip, r1, lsl #2
    60f0:	000c9100 	andeq	r9, ip, r0, lsl #2
    60f4:	0d750500 	cfldr64eq	mvdx0, [r5, #-0]
    60f8:	8601012c 	strhi	r0, [r1], -ip, lsr #2
    60fc:	8600000a 	strhi	r0, [r0], -sl
    6100:	0500000a 	streq	r0, [r0, #-10]
    6104:	012b0d6f 			; <UNDEFINED> instruction: 0x012b0d6f
    6108:	00103501 	andseq	r3, r0, r1, lsl #10
    610c:	00103500 	andseq	r3, r0, r0, lsl #10
    6110:	0e650800 	cdpeq	8, 6, cr0, cr5, cr0, {0}
    6114:	01012b06 	tsteq	r1, r6, lsl #22
    6118:	0000117f 	andeq	r1, r0, pc, ror r1
    611c:	0000117f 	andeq	r1, r0, pc, ror r1
    6120:	0c069308 	stceq	3, cr9, [r6], {8}
    6124:	2401012b 	strcs	r0, [r1], #-299	; 0xfffffed5
    6128:	2400000d 	strcs	r0, [r0], #-13
    612c:	0800000d 	stmdaeq	r0, {r0, r2, r3}
    6130:	2b06065b 	blcs	187aa4 <__RAM_SIZE+0x87aa4>
    6134:	11b40101 			; <UNDEFINED> instruction: 0x11b40101
    6138:	11b40000 			; <UNDEFINED> instruction: 0x11b40000
    613c:	53080000 	movwpl	r0, #32768	; 0x8000
    6140:	012b0c0d 			; <UNDEFINED> instruction: 0x012b0c0d
    6144:	000e2201 	andeq	r2, lr, r1, lsl #4
    6148:	000e2200 	andeq	r2, lr, r0, lsl #4
    614c:	0dbb0800 	ldceq	8, cr0, [fp]
    6150:	01012b06 	tsteq	r1, r6, lsl #22
    6154:	00000e38 	andeq	r0, r0, r8, lsr lr
    6158:	00000e38 	andeq	r0, r0, r8, lsr lr
    615c:	0e0e5f08 	cdpeq	15, 0, cr5, cr14, cr8, {0}
    6160:	cd01012b 	stfgts	f0, [r1, #-172]	; 0xffffff54
    6164:	cd000012 	stcgt	0, cr0, [r0, #-72]	; 0xffffffb8
    6168:	08000012 	stmdaeq	r0, {r1, r4}
    616c:	2b060e2a 	blcs	189a1c <__RAM_SIZE+0x89a1c>
    6170:	124f0101 	subne	r0, pc, #1073741824	; 0x40000000
    6174:	124f0000 	subne	r0, pc, #0
    6178:	1a080000 	bne	206180 <__RAM_SIZE+0x106180>
    617c:	012b0c0e 			; <UNDEFINED> instruction: 0x012b0c0e
    6180:	0012f901 	andseq	pc, r2, r1, lsl #18
    6184:	0012f900 	andseq	pc, r2, r0, lsl #18
    6188:	0e030800 	cdpeq	8, 0, cr0, cr3, cr0, {0}
    618c:	01012c0e 	tsteq	r1, lr, lsl #24
    6190:	00000d00 	andeq	r0, r0, r0, lsl #26
    6194:	00000d00 	andeq	r0, r0, r0, lsl #26
    6198:	2b08b50a 	blcs	2335c8 <__RAM_SIZE+0x1335c8>
    619c:	09a30101 	stmibeq	r3!, {r0, r8}
    61a0:	09a30000 	stmibeq	r3!, {}	; <UNPREDICTABLE>
    61a4:	b9070000 	stmdblt	r7, {}	; <UNPREDICTABLE>
    61a8:	f0000601 			; <UNDEFINED> instruction: 0xf0000601
    61ac:	02000038 	andeq	r0, r0, #56	; 0x38
    61b0:	000f3d00 	andeq	r3, pc, r0, lsl #26
    61b4:	89010400 	stmdbhi	r1, {sl}
    61b8:	0c000001 	stceq	0, cr0, [r0], {1}
    61bc:	000020c6 	andeq	r2, r0, r6, asr #1
    61c0:	0000038d 	andeq	r0, r0, sp, lsl #7
    61c4:	00000790 	muleq	r0, r0, r7
	...
    61d0:	00003da2 	andeq	r3, r0, r2, lsr #27
    61d4:	00050c02 	andeq	r0, r5, r2, lsl #24
    61d8:	17d10200 	ldrbne	r0, [r1, r0, lsl #4]
    61dc:	0000003a 	andeq	r0, r0, sl, lsr r0
    61e0:	00002903 	andeq	r2, r0, r3, lsl #18
    61e4:	07040400 	streq	r0, [r4, -r0, lsl #8]
    61e8:	000002cf 	andeq	r0, r0, pc, asr #5
    61ec:	69050405 	stmdbvs	r5, {r0, r2, sl}
    61f0:	0400746e 	streq	r7, [r0], #-1134	; 0xfffffb92
    61f4:	01270508 			; <UNDEFINED> instruction: 0x01270508
    61f8:	08040000 	stmdaeq	r4, {}	; <UNPREDICTABLE>
    61fc:	00006304 	andeq	r6, r0, r4, lsl #6
    6200:	06010400 	streq	r0, [r1], -r0, lsl #8
    6204:	00000273 	andeq	r0, r0, r3, ror r2
    6208:	00017f02 	andeq	r7, r1, r2, lsl #30
    620c:	182b0300 	stmdane	fp!, {r8, r9}
    6210:	00000069 	andeq	r0, r0, r9, rrx
    6214:	71080104 	tstvc	r8, r4, lsl #2
    6218:	04000002 	streq	r0, [r0], #-2
    621c:	00320502 	eorseq	r0, r2, r2, lsl #10
    6220:	02040000 	andeq	r0, r4, #0
    6224:	00032207 	andeq	r2, r3, r7, lsl #4
    6228:	05040400 	streq	r0, [r4, #-1024]	; 0xfffffc00
    622c:	0000012c 	andeq	r0, r0, ip, lsr #2
    6230:	00006f02 	andeq	r6, r0, r2, lsl #30
    6234:	194f0300 	stmdbne	pc, {r8, r9}^	; <UNPREDICTABLE>
    6238:	00000091 	muleq	r0, r1, r0
    623c:	ca070404 	bgt	1c7254 <__RAM_SIZE+0xc7254>
    6240:	04000002 	streq	r0, [r0], #-2
    6244:	02c50708 	sbceq	r0, r5, #8, 14	; 0x200000
    6248:	04060000 	streq	r0, [r6], #-0
    624c:	00009f03 	andeq	r9, r0, r3, lsl #30
    6250:	ac040700 	stcge	7, cr0, [r4], {-0}
    6254:	04000000 	streq	r0, [r0], #-0
    6258:	027a0801 	rsbseq	r0, sl, #65536	; 0x10000
    625c:	ac030000 	stcge	0, cr0, [r3], {-0}
    6260:	07000000 	streq	r0, [r0, -r0]
    6264:	0000b304 	andeq	fp, r0, r4, lsl #6
    6268:	00b80300 	adcseq	r0, r8, r0, lsl #6
    626c:	81020000 	mrshi	r0, (UNDEF: 2)
    6270:	04000001 	streq	r0, [r0], #-1
    6274:	005d1318 	subseq	r1, sp, r8, lsl r3
    6278:	c3080000 	movwgt	r0, #32768	; 0x8000
    627c:	03000000 	movweq	r0, #0
    6280:	000000c3 	andeq	r0, r0, r3, asr #1
    6284:	00007102 	andeq	r7, r0, r2, lsl #2
    6288:	14300400 	ldrtne	r0, [r0], #-1024	; 0xfffffc00
    628c:	00000085 	andeq	r0, r0, r5, lsl #1
    6290:	0000d908 	andeq	sp, r0, r8, lsl #18
    6294:	1c400200 	sfmne	f0, 2, [r0], {-0}
    6298:	24050000 	strcs	r0, [r5], #-0
    629c:	0000f611 	andeq	pc, r0, r1, lsl r6	; <UNPREDICTABLE>
    62a0:	fc040700 	stc2	7, cr0, [r4], {-0}
    62a4:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    62a8:	00010801 	andeq	r0, r1, r1, lsl #16
    62ac:	009f0a00 	addseq	r0, pc, r0, lsl #20
    62b0:	02000000 	andeq	r0, r0, #0
    62b4:	00001567 	andeq	r1, r0, r7, ror #10
    62b8:	d91a4906 	ldmdble	sl, {r1, r2, r8, fp, lr}
    62bc:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    62c0:	00000108 	andeq	r0, r0, r8, lsl #2
    62c4:	0009cd02 	andeq	ip, r9, r2, lsl #26
    62c8:	1a4a0600 	bne	1287ad0 <__RAM_SIZE+0x1187ad0>
    62cc:	0000007e 	andeq	r0, r0, lr, ror r0
    62d0:	00011908 	andeq	r1, r1, r8, lsl #18
    62d4:	01190300 	tsteq	r9, r0, lsl #6
    62d8:	cc020000 	stcgt	0, cr0, [r2], {-0}
    62dc:	06000009 	streq	r0, [r0], -r9
    62e0:	00911a4b 	addseq	r1, r1, fp, asr #20
    62e4:	2f080000 	svccs	0x00080000
    62e8:	03000001 	movweq	r0, #1
    62ec:	0000013b 	andeq	r0, r0, fp, lsr r1
    62f0:	00012f03 	andeq	r2, r1, r3, lsl #30
    62f4:	09280200 	stmdbeq	r8!, {r9}
    62f8:	51060000 	mrspl	r0, (UNDEF: 6)
    62fc:	0000d91a 	andeq	sp, r0, sl, lsl r9
    6300:	014a0800 	cmpeq	sl, r0, lsl #16
    6304:	4a030000 	bmi	c630c <__HEAP_SIZE+0xc530c>
    6308:	07000001 	streq	r0, [r0, -r1]
    630c:	0000c304 	andeq	ip, r0, r4, lsl #6
    6310:	122c0b00 	eorne	r0, ip, #0, 22
    6314:	07140000 	ldreq	r0, [r4, -r0]
    6318:	95080c0c 	strls	r0, [r8, #-3084]	; 0xfffff3f4
    631c:	0c000001 	stceq	0, cr0, [r0], {1}
    6320:	00000dcd 	andeq	r0, r0, sp, asr #27
    6324:	100c1107 	andne	r1, ip, r7, lsl #2
    6328:	0000014a 	andeq	r0, r0, sl, asr #2
    632c:	0c002302 	stceq	3, cr2, [r0], {2}
    6330:	00000dc3 	andeq	r0, r0, r3, asr #27
    6334:	0c0c1207 	sfmeq	f1, 4, [ip], {7}
    6338:	00000195 	muleq	r0, r5, r1
    633c:	00042302 	andeq	r2, r4, r2, lsl #6
    6340:	00009f0d 	andeq	r9, r0, sp, lsl #30
    6344:	0001a500 	andeq	sl, r1, r0, lsl #10
    6348:	003a0e00 	eorseq	r0, sl, r0, lsl #28
    634c:	00030000 	andeq	r0, r3, r0
    6350:	00193f0f 	andseq	r3, r9, pc, lsl #30
    6354:	0c170700 	ldceq	7, cr0, [r7], {-0}
    6358:	00016622 	andeq	r6, r1, r2, lsr #12
    635c:	1f5b0b00 	svcne	0x005b0b00
    6360:	074c0000 	strbeq	r0, [ip, -r0]
    6364:	71100c43 	tstvc	r0, r3, asr #24
    6368:	0c000002 	stceq	0, cr0, [r0], {2}
    636c:	00001bae 	andeq	r1, r0, lr, lsr #23
    6370:	0c0c4507 	cfstr32eq	mvfx4, [ip], {7}
    6374:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    6378:	0c002302 	stceq	3, cr2, [r0], {2}
    637c:	000012f1 	strdeq	r1, [r0], -r1	; <UNPREDICTABLE>
    6380:	160c4c07 	strne	r4, [ip], -r7, lsl #24
    6384:	00000271 	andeq	r0, r0, r1, ror r2
    6388:	0c042302 	stceq	3, cr2, [r4], {2}
    638c:	000019c3 	andeq	r1, r0, r3, asr #19
    6390:	110c4d07 	tstne	ip, r7, lsl #26
    6394:	0000012f 	andeq	r0, r0, pc, lsr #2
    6398:	0c2c2302 	stceq	3, cr2, [ip], #-8
    639c:	00001bc1 	andeq	r1, r0, r1, asr #23
    63a0:	0c0c4e07 	stceq	14, cr4, [ip], {7}
    63a4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    63a8:	0c302302 	ldceq	3, cr2, [r0], #-8
    63ac:	00001db2 			; <UNDEFINED> instruction: 0x00001db2
    63b0:	0d0c5307 	stceq	3, cr5, [ip, #-28]	; 0xffffffe4
    63b4:	00000281 	andeq	r0, r0, r1, lsl #5
    63b8:	0c342302 	ldceq	3, cr2, [r4], #-8
    63bc:	000014c6 	andeq	r1, r0, r6, asr #9
    63c0:	150c6107 	strne	r6, [ip, #-263]	; 0xfffffef9
    63c4:	00000291 	muleq	r0, r1, r2
    63c8:	0c382302 	ldceq	3, cr2, [r8], #-8
    63cc:	00001d63 	andeq	r1, r0, r3, ror #26
    63d0:	100c6407 	andne	r6, ip, r7, lsl #8
    63d4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    63d8:	0c402302 	mcrreq	3, 0, r2, r0, cr2
    63dc:	00001f8a 	andeq	r1, r0, sl, lsl #31
    63e0:	120c7007 	andne	r7, ip, #7
    63e4:	000002a1 	andeq	r0, r0, r1, lsr #5
    63e8:	0c442302 	mcrreq	3, 0, r2, r4, cr2
    63ec:	00001bb7 			; <UNDEFINED> instruction: 0x00001bb7
    63f0:	110c7107 	tstne	ip, r7, lsl #2
    63f4:	000002b1 			; <UNDEFINED> instruction: 0x000002b1
    63f8:	0c482302 	mcrreq	3, 0, r2, r8, cr2
    63fc:	000015e5 	andeq	r1, r0, r5, ror #11
    6400:	110c7407 	tstne	ip, r7, lsl #8
    6404:	000000c3 	andeq	r0, r0, r3, asr #1
    6408:	0c492302 	mcrreq	3, 0, r2, r9, cr2
    640c:	00001c8f 	andeq	r1, r0, pc, lsl #25
    6410:	110c7807 	tstne	ip, r7, lsl #16
    6414:	000000c3 	andeq	r0, r0, r3, asr #1
    6418:	004a2302 	subeq	r2, sl, r2, lsl #6
    641c:	0001a50d 	andeq	sl, r1, sp, lsl #10
    6420:	00028100 	andeq	r8, r2, r0, lsl #2
    6424:	003a0e00 	eorseq	r0, sl, r0, lsl #28
    6428:	00010000 	andeq	r0, r1, r0
    642c:	0000c30d 	andeq	ip, r0, sp, lsl #6
    6430:	00029100 	andeq	r9, r2, r0, lsl #2
    6434:	003a0e00 	eorseq	r0, sl, r0, lsl #28
    6438:	00030000 	andeq	r0, r3, r0
    643c:	00012f0d 	andeq	r2, r1, sp, lsl #30
    6440:	0002a100 	andeq	sl, r2, r0, lsl #2
    6444:	003a0e00 	eorseq	r0, sl, r0, lsl #28
    6448:	00010000 	andeq	r0, r1, r0
    644c:	0000d90d 	andeq	sp, r0, sp, lsl #18
    6450:	0002b100 	andeq	fp, r2, r0, lsl #2
    6454:	003a0e00 	eorseq	r0, sl, r0, lsl #28
    6458:	00000000 	andeq	r0, r0, r0
    645c:	0000c30d 	andeq	ip, r0, sp, lsl #6
    6460:	0002c100 	andeq	ip, r2, r0, lsl #2
    6464:	003a0e00 	eorseq	r0, sl, r0, lsl #28
    6468:	00000000 	andeq	r0, r0, r0
    646c:	0014100f 	andseq	r1, r4, pc
    6470:	0c7d0700 	ldcleq	7, cr0, [sp], #-0
    6474:	0001b203 	andeq	fp, r1, r3, lsl #4
    6478:	094f1000 	stmdbeq	pc, {ip}^	; <UNPREDICTABLE>
    647c:	08140000 	ldmdaeq	r4, {}	; <UNPREDICTABLE>
    6480:	03270890 			; <UNDEFINED> instruction: 0x03270890
    6484:	33110000 	tstcc	r1, #0
    6488:	08000009 	stmdaeq	r0, {r0, r3}
    648c:	014a2493 			; <UNDEFINED> instruction: 0x014a2493
    6490:	23020000 	movwcs	r0, #8192	; 0x2000
    6494:	099c1100 	ldmibeq	ip, {r8, ip}
    6498:	94080000 	strls	r0, [r8], #-0
    649c:	0003272d 	andeq	r2, r3, sp, lsr #14
    64a0:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    64a4:	0009eb11 	andeq	lr, r9, r1, lsl fp
    64a8:	2d950800 	ldccs	8, cr0, [r5]
    64ac:	00000327 	andeq	r0, r0, r7, lsr #6
    64b0:	11082302 	tstne	r8, r2, lsl #6
    64b4:	00000947 	andeq	r0, r0, r7, asr #18
    64b8:	9f0c9608 	svcls	0x000c9608
    64bc:	02000000 	andeq	r0, r0, #0
    64c0:	1c110c23 	ldcne	12, cr0, [r1], {35}	; 0x23
    64c4:	08000009 	stmdaeq	r0, {r0, r3}
    64c8:	03682897 	cmneq	r8, #9895936	; 0x970000
    64cc:	23020000 	movwcs	r0, #8192	; 0x2000
    64d0:	04070010 	streq	r0, [r7], #-16
    64d4:	000002ce 	andeq	r0, r0, lr, asr #5
    64d8:	000a1e10 	andeq	r1, sl, r0, lsl lr
    64dc:	ac081c00 	stcge	12, cr1, [r8], {-0}
    64e0:	00036810 	andeq	r6, r3, r0, lsl r8
    64e4:	097d1100 	ldmdbeq	sp!, {r8, ip}^
    64e8:	af080000 	svcge	0x00080000
    64ec:	00012f25 	andeq	r2, r1, r5, lsr #30
    64f0:	00230200 	eoreq	r0, r3, r0, lsl #4
    64f4:	0009e311 	andeq	lr, r9, r1, lsl r3
    64f8:	26b00800 	ldrtcs	r0, [r0], r0, lsl #16
    64fc:	0000038b 	andeq	r0, r0, fp, lsl #7
    6500:	11042302 	tstne	r4, r2, lsl #6
    6504:	0000093e 	andeq	r0, r0, lr, lsr r9
    6508:	7f14b108 	svcvc	0x0014b108
    650c:	02000003 	andeq	r0, r0, #3
    6510:	07000823 	streq	r0, [r0, -r3, lsr #16]
    6514:	00032d04 	andeq	r2, r3, r4, lsl #26
    6518:	19450200 	stmdbne	r5, {r9}^
    651c:	9a080000 	bls	206524 <__RAM_SIZE+0x106524>
    6520:	0002ce1b 	andeq	ip, r2, fp, lsl lr
    6524:	036e0300 	cmneq	lr, #0, 6
    6528:	78020000 	stmdavc	r2, {}	; <UNPREDICTABLE>
    652c:	0800000b 	stmdaeq	r0, {r0, r1, r3}
    6530:	02ce24a6 	sbceq	r2, lr, #-1509949440	; 0xa6000000
    6534:	04070000 	streq	r0, [r7], #-0
    6538:	0000036e 	andeq	r0, r0, lr, ror #6
    653c:	00038b03 	andeq	r8, r3, r3, lsl #22
    6540:	13eb0200 	mvnne	r0, #0, 4
    6544:	b3080000 	movwlt	r0, #32768	; 0x8000
    6548:	00032d03 	andeq	r2, r3, r3, lsl #26
    654c:	03960300 	orrseq	r0, r6, #0, 6
    6550:	f2020000 	vhadd.s8	d0, d2, d0
    6554:	09000002 	stmdbeq	r0, {r1}
    6558:	03b82e5c 			; <UNDEFINED> instruction: 0x03b82e5c
    655c:	a7030000 	strge	r0, [r3, -r0]
    6560:	07000003 	streq	r0, [r0, -r3]
    6564:	0003be04 	andeq	fp, r3, r4, lsl #28
    6568:	016b0b00 	cmneq	fp, r0, lsl #22
    656c:	014c0000 	mrseq	r0, (UNDEF: 76)
    6570:	9d100166 	ldflss	f0, [r0, #-408]	; 0xfffffe68
    6574:	0c000004 	stceq	0, cr0, [r0], {4}
    6578:	0000231e 	andeq	r2, r0, lr, lsl r3
    657c:	1c016801 	stcne	8, cr6, [r1], {1}
    6580:	000005f3 	strdeq	r0, [r0], -r3
    6584:	0c002302 	stceq	3, cr2, [r0], {2}
    6588:	0000229d 	muleq	r0, sp, r2
    658c:	10017201 	andne	r7, r1, r1, lsl #4
    6590:	0000036e 	andeq	r0, r0, lr, ror #6
    6594:	0c042302 	stceq	3, cr2, [r4], {2}
    6598:	0000216c 	andeq	r2, r0, ip, ror #2
    659c:	10017301 	andne	r7, r1, r1, lsl #6
    65a0:	0000036e 	andeq	r0, r0, lr, ror #6
    65a4:	0c182302 	ldceq	3, cr2, [r8], {2}
    65a8:	0000147a 	andeq	r1, r0, sl, ror r4
    65ac:	11017401 	tstne	r1, r1, lsl #8
    65b0:	0000012f 	andeq	r0, r0, pc, lsr #2
    65b4:	0c2c2302 	stceq	3, cr2, [ip], #-8
    65b8:	00001ee0 	andeq	r1, r0, r0, ror #29
    65bc:	13017501 	movwne	r7, #5377	; 0x1501
    65c0:	000005bb 			; <UNDEFINED> instruction: 0x000005bb
    65c4:	0c302302 	ldceq	3, cr2, [r0], #-8
    65c8:	00001425 	andeq	r1, r0, r5, lsr #8
    65cc:	0a017a01 	beq	64dd8 <__HEAP_SIZE+0x63dd8>
    65d0:	000005f9 	strdeq	r0, [r0], -r9
    65d4:	0c342302 	ldceq	3, cr2, [r4], #-8
    65d8:	0000210d 	andeq	r2, r0, sp, lsl #2
    65dc:	15018e01 	strne	r8, [r1, #-3585]	; 0xfffff1ff
    65e0:	0000012f 	andeq	r0, r0, pc, lsr #2
    65e4:	0c382302 	ldceq	3, cr2, [r8], #-8
    65e8:	00001a4b 	andeq	r1, r0, fp, asr #20
    65ec:	15018f01 	strne	r8, [r1, #-3841]	; 0xfffff0ff
    65f0:	0000012f 	andeq	r0, r0, pc, lsr #2
    65f4:	0c3c2302 	ldceq	3, cr2, [ip], #-8
    65f8:	00001e6d 	andeq	r1, r0, sp, ror #28
    65fc:	1c019301 	stcne	3, cr9, [r1], {1}
    6600:	0000049d 	muleq	r0, sp, r4
    6604:	0c402302 	mcrreq	3, 0, r2, r0, cr2
    6608:	00001a10 	andeq	r1, r0, r0, lsl sl
    660c:	1b01a301 	blne	6f218 <__HEAP_SIZE+0x6e218>
    6610:	00000619 	andeq	r0, r0, r9, lsl r6
    6614:	0c442302 	mcrreq	3, 0, r2, r4, cr2
    6618:	00001766 	andeq	r1, r0, r6, ror #14
    661c:	1a01a401 	bne	6f628 <__HEAP_SIZE+0x6e628>
    6620:	0000062e 	andeq	r0, r0, lr, lsr #12
    6624:	0c482302 	mcrreq	3, 0, r2, r8, cr2
    6628:	00000e0c 	andeq	r0, r0, ip, lsl #28
    662c:	1101aa01 	tstne	r1, r1, lsl #20
    6630:	000000c3 	andeq	r0, r0, r3, asr #1
    6634:	0c492302 	mcrreq	3, 0, r2, r9, cr2
    6638:	00001930 	andeq	r1, r0, r0, lsr r9
    663c:	1101ae01 	tstne	r1, r1, lsl #28
    6640:	000000c3 	andeq	r0, r0, r3, asr #1
    6644:	004a2302 	subeq	r2, sl, r2, lsl #6
    6648:	001fb902 	andseq	fp, pc, r2, lsl #18
    664c:	17630900 	strbne	r0, [r3, -r0, lsl #18]!
    6650:	000004a9 	andeq	r0, r0, r9, lsr #9
    6654:	04af0407 	strteq	r0, [pc], #1031	; 665c <__HEAP_SIZE+0x565c>
    6658:	01120000 	tsteq	r2, r0
    665c:	00000119 	andeq	r0, r0, r9, lsl r1
    6660:	000004bf 			; <UNDEFINED> instruction: 0x000004bf
    6664:	00009f0a 	andeq	r9, r0, sl, lsl #30
    6668:	07130000 	ldreq	r0, [r3, -r0]
    666c:	00006901 	andeq	r6, r0, r1, lsl #18
    6670:	01670900 	cmneq	r7, r0, lsl #18
    6674:	000004f2 	strdeq	r0, [r0], -r2
    6678:	00204414 	eoreq	r4, r0, r4, lsl r4
    667c:	04140000 	ldreq	r0, [r4], #-0
    6680:	0100001b 	tsteq	r0, fp, lsl r0
    6684:	00214514 	eoreq	r4, r1, r4, lsl r5
    6688:	bb140200 	bllt	506e90 <__RAM_SIZE+0x406e90>
    668c:	03000014 	movweq	r0, #20
    6690:	001bca14 	andseq	ip, fp, r4, lsl sl
    6694:	f6140400 			; <UNDEFINED> instruction: 0xf6140400
    6698:	05000020 	streq	r0, [r0, #-32]	; 0xffffffe0
    669c:	1d150200 	lfmne	f0, 4, [r5, #-0]
    66a0:	6e090000 	cdpvs	0, 0, cr0, cr9, cr0, {0}
    66a4:	0004bf03 	andeq	fp, r4, r3, lsl #30
    66a8:	01071300 	mrseq	r1, SP_und
    66ac:	00000069 	andeq	r0, r0, r9, rrx
    66b0:	2b017209 	blcs	62edc <__HEAP_SIZE+0x61edc>
    66b4:	14000005 	strne	r0, [r0], #-5
    66b8:	0000151e 	andeq	r1, r0, lr, lsl r5
    66bc:	1d7a1400 	cfldrdne	mvd1, [sl, #-0]
    66c0:	14010000 	strne	r0, [r1], #-0
    66c4:	0000226f 	andeq	r2, r0, pc, ror #4
    66c8:	17ee1402 	strbne	r1, [lr, r2, lsl #8]!
    66cc:	14030000 	strne	r0, [r3], #-0
    66d0:	00001a59 	andeq	r1, r0, r9, asr sl
    66d4:	13020004 	movwne	r0, #8196	; 0x2004
    66d8:	09000019 	stmdbeq	r0, {r0, r3, r4}
    66dc:	04fe0378 	ldrbteq	r0, [lr], #888	; 0x378
    66e0:	1b100000 	blne	4066e8 <__RAM_SIZE+0x3066e8>
    66e4:	0800000b 	stmdaeq	r0, {r0, r1, r3}
    66e8:	63107d09 	tstvs	r0, #576	; 0x240
    66ec:	11000005 	tstne	r0, r5
    66f0:	00000bcc 	andeq	r0, r0, ip, asr #23
    66f4:	19107f09 	ldmdbne	r0, {r0, r3, r8, r9, sl, fp, ip, sp, lr}
    66f8:	02000001 	andeq	r0, r0, #1
    66fc:	de110023 	cdple	0, 1, cr0, cr1, cr3, {1}
    6700:	0900000f 	stmdbeq	r0, {r0, r1, r2, r3}
    6704:	014a1080 	smlalbbeq	r1, sl, r0, r0
    6708:	23020000 	movwcs	r0, #8192	; 0x2000
    670c:	2b020004 	blcs	86724 <__HEAP_SIZE+0x85724>
    6710:	09000010 	stmdbeq	r0, {r4}
    6714:	05370381 	ldreq	r0, [r7, #-897]!	; 0xfffffc7f
    6718:	83100000 	tsthi	r0, #0
    671c:	0c00001d 	stceq	0, cr0, [r0], {29}
    6720:	aa108609 	bge	427f4c <__RAM_SIZE+0x327f4c>
    6724:	11000005 	tstne	r0, r5
    6728:	0000205b 	andeq	r2, r0, fp, asr r0
    672c:	9f0c8809 	svcls	0x000c8809
    6730:	02000000 	andeq	r0, r0, #0
    6734:	f1110023 			; <UNDEFINED> instruction: 0xf1110023
    6738:	0900001b 	stmdbeq	r0, {r0, r1, r3, r4}
    673c:	00d90e89 	sbcseq	r0, r9, r9, lsl #29
    6740:	23020000 	movwcs	r0, #8192	; 0x2000
    6744:	16be1104 	ldrtne	r1, [lr], r4, lsl #2
    6748:	8a090000 	bhi	246750 <__RAM_SIZE+0x146750>
    674c:	0000d90e 	andeq	sp, r0, lr, lsl #18
    6750:	08230200 	stmdaeq	r3!, {r9}
    6754:	1b740200 	blne	1d06f5c <__RAM_SIZE+0x1c06f5c>
    6758:	8b090000 	blhi	246760 <__RAM_SIZE+0x146760>
    675c:	00056f03 	andeq	r6, r5, r3, lsl #30
    6760:	05aa0300 	streq	r0, [sl, #768]!	; 0x300
    6764:	04070000 	streq	r0, [r7], #-0
    6768:	00000108 	andeq	r0, r0, r8, lsl #2
    676c:	0005bb03 	andeq	fp, r5, r3, lsl #22
    6770:	01071300 	mrseq	r1, SP_und
    6774:	00000069 	andeq	r0, r0, r9, rrx
    6778:	e701b609 	str	fp, [r1, -r9, lsl #12]
    677c:	14000005 	strne	r0, [r0], #-5
    6780:	000017e2 	andeq	r1, r0, r2, ror #15
    6784:	1fcc1400 	svcne	0x00cc1400
    6788:	14010000 	strne	r0, [r1], #-0
    678c:	00001fe3 	andeq	r1, r0, r3, ror #31
    6790:	21020002 	tstcs	r2, r2
    6794:	09000017 	stmdbeq	r0, {r0, r1, r2, r4}
    6798:	05c603bd 	strbeq	r0, [r6, #957]	; 0x3bd
    679c:	04070000 	streq	r0, [r7], #-0
    67a0:	00000114 	andeq	r0, r0, r4, lsl r1
    67a4:	0000ac0d 	andeq	sl, r0, sp, lsl #24
    67a8:	00060900 	andeq	r0, r6, r0, lsl #18
    67ac:	003a0e00 	eorseq	r0, sl, r0, lsl #28
    67b0:	00030000 	andeq	r0, r3, r0
    67b4:	0000e50d 	andeq	lr, r0, sp, lsl #10
    67b8:	00061900 	andeq	r1, r6, r0, lsl #18
    67bc:	003a0e00 	eorseq	r0, sl, r0, lsl #28
    67c0:	00000000 	andeq	r0, r0, r0
    67c4:	00060908 	andeq	r0, r6, r8, lsl #18
    67c8:	00cf0d00 	sbceq	r0, pc, r0, lsl #26
    67cc:	062e0000 	strteq	r0, [lr], -r0
    67d0:	3a0e0000 	bcc	3867d8 <__RAM_SIZE+0x2867d8>
    67d4:	00000000 	andeq	r0, r0, r0
    67d8:	061e0800 	ldreq	r0, [lr], -r0, lsl #16
    67dc:	5f0f0000 	svcpl	0x000f0000
    67e0:	01000017 	tsteq	r0, r7, lsl r0
    67e4:	be0301b4 	mcrlt	1, 0, r0, cr3, cr4, {5}
    67e8:	0f000003 	svceq	0x00000003
    67ec:	00002132 	andeq	r2, r0, r2, lsr r1
    67f0:	1001b801 	andne	fp, r1, r1, lsl #16
    67f4:	00000633 	andeq	r0, r0, r3, lsr r6
    67f8:	00064003 	andeq	r4, r6, r3
    67fc:	1e2c1500 	cfsh64ne	mvdx1, mvdx12, #0
    6800:	be010000 	cdplt	0, 0, cr0, cr1, cr0, {0}
    6804:	066c3701 	strbteq	r3, [ip], -r1, lsl #14
    6808:	05010000 	streq	r0, [r1, #-0]
    680c:	0085b003 	addeq	fp, r5, r3
    6810:	40040738 	andmi	r0, r4, r8, lsr r7
    6814:	08000006 	stmdaeq	r0, {r1, r2}
    6818:	00000666 	andeq	r0, r0, r6, ror #12
    681c:	00066603 	andeq	r6, r6, r3, lsl #12
    6820:	03960d00 	orrseq	r0, r6, #0, 26
    6824:	06860000 	streq	r0, [r6], r0
    6828:	3a0e0000 	bcc	386830 <__RAM_SIZE+0x286830>
    682c:	04000000 	streq	r0, [r0], #-0
    6830:	15c11600 	strbne	r1, [r1, #1536]	; 0x600
    6834:	cb010000 	blgt	4683c <__HEAP_SIZE+0x4583c>
    6838:	06761f01 	ldrbteq	r1, [r6], -r1, lsl #30
    683c:	03050000 	movweq	r0, #20480	; 0x5000
    6840:	380085bc 	stmdacc	r0, {r2, r3, r4, r5, r7, r8, sl, pc}
    6844:	00165e16 	andseq	r5, r6, r6, lsl lr
    6848:	01cc0100 	biceq	r0, ip, r0, lsl #2
    684c:	0003961f 	andeq	r9, r3, pc, lsl r6
    6850:	5c030500 	cfstr32pl	mvfx0, [r3], {-0}
    6854:	1638008a 	ldrtne	r0, [r8], -sl, lsl #1
    6858:	00001670 	andeq	r1, r0, r0, ror r6
    685c:	1f01cd01 	svcne	0x0001cd01
    6860:	00000396 	muleq	r0, r6, r3
    6864:	8a780305 	bhi	1e07480 <__RAM_SIZE+0x1d07480>
    6868:	99163800 	ldmdbls	r6, {fp, ip, sp}
    686c:	0100001e 	tsteq	r0, lr, lsl r0
    6870:	d82a01ce 	stmdale	sl!, {r1, r2, r3, r6, r7, r8}
    6874:	05000006 	streq	r0, [r0, #-6]
    6878:	0085b403 	addeq	fp, r5, r3, lsl #8
    687c:	96040738 			; <UNDEFINED> instruction: 0x96040738
    6880:	08000003 	stmdaeq	r0, {r0, r1}
    6884:	000006d2 	ldrdeq	r0, [r0], -r2
    6888:	0006d203 	andeq	sp, r6, r3, lsl #4
    688c:	19a91600 	stmibne	r9!, {r9, sl, ip}
    6890:	cf010000 	svcgt	0x00010000
    6894:	06d82a01 	ldrbeq	r2, [r8], r1, lsl #20
    6898:	03050000 	movweq	r0, #20480	; 0x5000
    689c:	380085b8 	stmdacc	r0, {r3, r4, r5, r7, r8, sl, pc}
    68a0:	00184616 	andseq	r4, r8, r6, lsl r6
    68a4:	01d00100 	bicseq	r0, r0, r0, lsl #2
    68a8:	0003961f 	andeq	r9, r3, pc, lsl r6
    68ac:	f0030500 			; <UNDEFINED> instruction: 0xf0030500
    68b0:	1638008a 	ldrtne	r0, [r8], -sl, lsl #1
    68b4:	00001887 	andeq	r1, r0, r7, lsl #17
    68b8:	2301d401 	movwcs	sp, #5121	; 0x1401
    68bc:	00000396 	muleq	r0, r6, r3
    68c0:	8b2c0305 	blhi	b074dc <__RAM_SIZE+0xa074dc>
    68c4:	81163800 	tsthi	r6, r0, lsl #16
    68c8:	01000015 	tsteq	r0, r5, lsl r0
    68cc:	3b3101d5 	blcc	c47028 <__RAM_SIZE+0xb47028>
    68d0:	05000001 	streq	r0, [r0, #-1]
    68d4:	00864c03 	addeq	r4, r6, r3, lsl #24
    68d8:	198f1638 	stmibne	pc, {r3, r4, r5, r9, sl, ip}	; <UNPREDICTABLE>
    68dc:	db010000 	blle	468e4 <__HEAP_SIZE+0x458e4>
    68e0:	03962301 	orrseq	r2, r6, #67108864	; 0x4000000
    68e4:	03050000 	movweq	r0, #20480	; 0x5000
    68e8:	38008b10 	stmdacc	r0, {r4, r8, r9, fp, pc}
    68ec:	00225416 	eoreq	r5, r2, r6, lsl r4
    68f0:	01e60100 	mvneq	r0, r0, lsl #2
    68f4:	00013b2d 	andeq	r3, r1, sp, lsr #22
    68f8:	48030500 	stmdami	r3, {r8, sl}
    68fc:	16380086 	ldrtne	r0, [r8], -r6, lsl #1
    6900:	00001950 	andeq	r1, r0, r0, asr r9
    6904:	2c01e701 	stccs	7, cr14, [r1], {1}
    6908:	00000156 	andeq	r0, r0, r6, asr r1
    690c:	8b480305 	blhi	1207528 <__RAM_SIZE+0x1107528>
    6910:	28163800 	ldmdacs	r6, {fp, ip, sp}
    6914:	01000015 	tsteq	r0, r5, lsl r0
    6918:	3b2d01e8 	blcc	b470c0 <__RAM_SIZE+0xa470c0>
    691c:	05000001 	streq	r0, [r0, #-1]
    6920:	008a5803 	addeq	r5, sl, r3, lsl #16
    6924:	15551638 	ldrbne	r1, [r5, #-1592]	; 0xfffff9c8
    6928:	e9010000 	stmdb	r1, {}	; <UNPREDICTABLE>
    692c:	01252c01 			; <UNDEFINED> instruction: 0x01252c01
    6930:	03050000 	movweq	r0, #20480	; 0x5000
    6934:	38008b0c 	stmdacc	r0, {r2, r3, r8, r9, fp, pc}
    6938:	00218716 	eoreq	r8, r1, r6, lsl r7
    693c:	01ea0100 	mvneq	r0, r0, lsl #2
    6940:	0001562c 	andeq	r5, r1, ip, lsr #12
    6944:	ec030500 	cfstr32	mvfx0, [r3], {-0}
    6948:	0d38008a 	ldceq	0, cr0, [r8, #-552]!	; 0xfffffdd8
    694c:	00000125 	andeq	r0, r0, r5, lsr #2
    6950:	000007b0 			; <UNDEFINED> instruction: 0x000007b0
    6954:	00003a0e 	andeq	r3, r0, lr, lsl #20
    6958:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    695c:	000007a0 	andeq	r0, r0, r0, lsr #15
    6960:	00164216 	andseq	r4, r6, r6, lsl r2
    6964:	01eb0100 	mvneq	r0, r0, lsl #2
    6968:	0007b02c 	andeq	fp, r7, ip, lsr #32
    696c:	98030500 	stmdals	r3, {r8, sl}
    6970:	1638008b 	ldrtne	r0, [r8], -fp, lsl #1
    6974:	00001dfb 	strdeq	r1, [r0], -fp
    6978:	2c01ec01 	stccs	12, cr14, [r1], {1}
    697c:	00000125 	andeq	r0, r0, r5, lsr #2
    6980:	8ae80305 	bhi	ffa0759c <__StackTop+0xc790759c>
    6984:	b8163800 	ldmdalt	r6, {fp, ip, sp}
    6988:	0100001c 	tsteq	r0, ip, lsl r0
    698c:	2f2401ed 	svccs	0x002401ed
    6990:	05000001 	streq	r0, [r0, #-1]
    6994:	00885403 	addeq	r5, r8, r3, lsl #8
    6998:	1b831638 	blne	fe0cc280 <__StackTop+0xc5fcc280>
    699c:	ee010000 	cdp	0, 0, cr0, cr1, cr0, {0}
    69a0:	01562c01 	cmpeq	r6, r1, lsl #24
    69a4:	03050000 	movweq	r0, #20480	; 0x5000
    69a8:	38008ae4 	stmdacc	r0, {r2, r5, r6, r7, r9, fp, pc}
    69ac:	0003a70d 	andeq	sl, r3, sp, lsl #14
    69b0:	00081100 	andeq	r1, r8, r0, lsl #2
    69b4:	003a0e00 	eorseq	r0, sl, r0, lsl #28
    69b8:	00000000 	andeq	r0, r0, r0
    69bc:	0019e316 	andseq	lr, r9, r6, lsl r3
    69c0:	01ef0100 	mvneq	r0, r0, lsl #2
    69c4:	00080125 	andeq	r0, r8, r5, lsr #2
    69c8:	94030500 	strls	r0, [r3], #-1280	; 0xfffffb00
    69cc:	1638008a 	ldrtne	r0, [r8], -sl, lsl #1
    69d0:	000018b7 			; <UNDEFINED> instruction: 0x000018b7
    69d4:	2301f401 	movwcs	pc, #5121	; 0x1401	; <UNPREDICTABLE>
    69d8:	00000140 	andeq	r0, r0, r0, asr #2
    69dc:	00040305 	andeq	r0, r4, r5, lsl #6
    69e0:	09163800 	ldmdbeq	r6, {fp, ip, sp}
    69e4:	01000023 	tsteq	r0, r3, lsr #32
    69e8:	3b2d0202 	blcc	b471f8 <__RAM_SIZE+0xa471f8>
    69ec:	05000001 	streq	r0, [r0, #-1]
    69f0:	00885003 	addeq	r5, r8, r3
    69f4:	a0011738 	andge	r1, r1, r8, lsr r7
    69f8:	01000018 	tsteq	r0, r8, lsl r0
    69fc:	010621c5 	smlabteq	r6, r5, r1, r2
	...
    6a08:	01007d02 	tsteq	r0, r2, lsl #26
    6a0c:	0000087b 	andeq	r0, r0, fp, ror r8
    6a10:	00141d18 	andseq	r1, r4, r8, lsl sp
    6a14:	21c70100 	biccs	r0, r7, r0, lsl #2
    6a18:	00011910 	andeq	r1, r1, r0, lsl r9
    6a1c:	00597a00 	subseq	r7, r9, r0, lsl #20
    6a20:	00597600 	subseq	r7, r9, r0, lsl #12
    6a24:	01170000 	tsteq	r7, r0
    6a28:	00001774 	andeq	r1, r0, r4, ror r7
    6a2c:	0a21b101 	beq	872e38 <__RAM_SIZE+0x772e38>
    6a30:	002f5801 	eoreq	r5, pc, r1, lsl #16
    6a34:	002f7010 	eoreq	r7, pc, r0, lsl r0	; <UNPREDICTABLE>
    6a38:	007d0210 	rsbseq	r0, sp, r0, lsl r2
    6a3c:	0008ea01 	andeq	lr, r8, r1, lsl #20
    6a40:	1ee81900 	vfmane.f16	s3, s16, s0	; <UNPREDICTABLE>
    6a44:	b1010000 	mrslt	r0, (UNDEF: 1)
    6a48:	08ea3a21 	stmiaeq	sl!, {r0, r5, r9, fp, ip, sp}^
    6a4c:	50010000 	andpl	r0, r1, r0
    6a50:	001b4d19 	andseq	r4, fp, r9, lsl sp
    6a54:	21b20100 			; <UNDEFINED> instruction: 0x21b20100
    6a58:	0008fb39 	andeq	pc, r8, r9, lsr fp	; <UNPREDICTABLE>
    6a5c:	19510100 	ldmdbne	r1, {r8}^
    6a60:	000020b0 	strheq	r2, [r0], -r0
    6a64:	4321b301 			; <UNDEFINED> instruction: 0x4321b301
    6a68:	00000901 	andeq	r0, r0, r1, lsl #18
    6a6c:	ef165201 	svc	0x00165201
    6a70:	01000015 	tsteq	r0, r5, lsl r0
    6a74:	c11d21b5 			; <UNDEFINED> instruction: 0xc11d21b5
    6a78:	05000002 	streq	r0, [r0, #-2]
    6a7c:	008b4c03 	addeq	r4, fp, r3, lsl #24
    6a80:	22ed1638 	rsccs	r1, sp, #56, 12	; 0x3800000
    6a84:	b6010000 	strlt	r0, [r1], -r0
    6a88:	09071c21 	stmdbeq	r7, {r0, r5, sl, fp, ip}
    6a8c:	03050000 	movweq	r0, #20480	; 0x5000
    6a90:	38008858 	stmdacc	r0, {r3, r4, r6, fp, pc}
    6a94:	f0040700 			; <UNDEFINED> instruction: 0xf0040700
    6a98:	07000008 	streq	r0, [r0, -r8]
    6a9c:	0002c104 	andeq	ip, r2, r4, lsl #2
    6aa0:	08f00300 	ldmeq	r0!, {r8, r9}^
    6aa4:	04070000 	streq	r0, [r7], #-0
    6aa8:	000005bb 			; <UNDEFINED> instruction: 0x000005bb
    6aac:	00290407 	eoreq	r0, r9, r7, lsl #8
    6ab0:	080d0000 	stmdaeq	sp, {}	; <UNPREDICTABLE>
    6ab4:	17000001 	strne	r0, [r0, -r1]
    6ab8:	0e000009 	cdpeq	0, 0, cr0, cr0, cr9, {0}
    6abc:	0000003a 	andeq	r0, r0, sl, lsr r0
    6ac0:	0117007f 	tsteq	r7, pc, ror r0
    6ac4:	000022ac 	andeq	r2, r0, ip, lsr #5
    6ac8:	0a218801 	beq	868ad4 <__RAM_SIZE+0x768ad4>
    6acc:	002e8c01 	eoreq	r8, lr, r1, lsl #24
    6ad0:	002ea410 	eoreq	sl, lr, r0, lsl r4
    6ad4:	007d0210 	rsbseq	r0, sp, r0, lsl r2
    6ad8:	00098601 	andeq	r8, r9, r1, lsl #12
    6adc:	1c011900 			; <UNDEFINED> instruction: 0x1c011900
    6ae0:	88010000 	stmdahi	r1, {}	; <UNPREDICTABLE>
    6ae4:	08ea3921 	stmiaeq	sl!, {r0, r5, r8, fp, ip, sp}^
    6ae8:	50010000 	andpl	r0, r1, r0
    6aec:	00144f19 	andseq	r4, r4, r9, lsl pc
    6af0:	21890100 	orrcs	r0, r9, r0, lsl #2
    6af4:	0008fb38 	andeq	pc, r8, r8, lsr fp	; <UNPREDICTABLE>
    6af8:	19510100 	ldmdbne	r1, {r8}^
    6afc:	00001d3a 	andeq	r1, r0, sl, lsr sp
    6b00:	42218a01 	eormi	r8, r1, #4096	; 0x1000
    6b04:	00000901 	andeq	r0, r0, r1, lsl #18
    6b08:	6d165201 	lfmvs	f5, 4, [r6, #-4]
    6b0c:	01000023 	tsteq	r0, r3, lsr #32
    6b10:	c11d218c 	tstgt	sp, ip, lsl #3
    6b14:	05000002 	streq	r0, [r0, #-2]
    6b18:	008a9803 	addeq	r9, sl, r3, lsl #16
    6b1c:	1fa91638 	svcne	0x00a91638
    6b20:	8d010000 	stchi	0, cr0, [r1, #-0]
    6b24:	09071c21 	stmdbeq	r7, {r0, r5, sl, fp, ip}
    6b28:	03050000 	movweq	r0, #20480	; 0x5000
    6b2c:	38008650 	stmdacc	r0, {r4, r6, r9, sl, pc}
    6b30:	21de1a00 	bicscs	r1, lr, r0, lsl #20
    6b34:	df010000 	svcle	0x00010000
    6b38:	24010d20 	strcs	r0, [r1], #-3360	; 0xfffff2e0
    6b3c:	cc100027 	ldcgt	0, cr0, [r0], {39}	; 0x27
    6b40:	98100027 	ldmdals	r0, {r0, r1, r2, r5}
    6b44:	01000059 	qaddeq	r0, r9, r0
    6b48:	00000a70 	andeq	r0, r0, r0, ror sl
    6b4c:	0020e91b 	eoreq	lr, r0, fp, lsl r9
    6b50:	20df0100 	sbcscs	r0, pc, r0, lsl #2
    6b54:	00014a38 	andeq	r4, r1, r8, lsr sl
    6b58:	0059c200 	subseq	ip, r9, r0, lsl #4
    6b5c:	0059b800 	subseq	fp, r9, r0, lsl #16
    6b60:	202e1b00 	eorcs	r1, lr, r0, lsl #22
    6b64:	e0010000 	and	r0, r1, r0
    6b68:	012a3e20 			; <UNDEFINED> instruction: 0x012a3e20
    6b6c:	5a0b0000 	bpl	2c6b74 <__RAM_SIZE+0x1c6b74>
    6b70:	5a070000 	bpl	1c6b78 <__RAM_SIZE+0xc6b78>
    6b74:	91180000 	tstls	r8, r0
    6b78:	01000022 	tsteq	r0, r2, lsr #32
    6b7c:	4a1020e2 	bmi	40ef0c <__RAM_SIZE+0x30ef0c>
    6b80:	2d000001 	stccs	0, cr0, [r0, #-4]
    6b84:	2900005a 	stmdbcs	r0, {r1, r3, r4, r6}
    6b88:	1800005a 	stmdane	r0, {r1, r3, r4, r6}
    6b8c:	0000197f 	andeq	r1, r0, pc, ror r9
    6b90:	1620e301 	strtne	lr, [r0], -r1, lsl #6
    6b94:	0000015b 	andeq	r0, r0, fp, asr r1
    6b98:	00005a4d 	andeq	r5, r0, sp, asr #20
    6b9c:	00005a4b 	andeq	r5, r0, fp, asr #20
    6ba0:	00153b18 	andseq	r3, r5, r8, lsl fp
    6ba4:	20e40100 	rsccs	r0, r4, r0, lsl #2
    6ba8:	0006dd14 	andeq	sp, r6, r4, lsl sp
    6bac:	005a6200 	subseq	r6, sl, r0, lsl #4
    6bb0:	005a6000 	subseq	r6, sl, r0
    6bb4:	23da1800 	bicscs	r1, sl, #0, 16
    6bb8:	e5010000 	str	r0, [r1, #-0]
    6bbc:	06dd1420 	ldrbeq	r1, [sp], r0, lsr #8
    6bc0:	5a770000 	bpl	1dc6bc8 <__RAM_SIZE+0x1cc6bc8>
    6bc4:	5a750000 	bpl	1d46bcc <__RAM_SIZE+0x1c46bcc>
    6bc8:	721c0000 	andsvc	r0, ip, #0
    6bcc:	98100027 	ldmdals	r0, {r0, r1, r2, r5}
    6bd0:	42100027 	andsmi	r0, r0, #39	; 0x27
    6bd4:	1800000a 	stmdane	r0, {r1, r3}
    6bd8:	000009e3 	andeq	r0, r0, r3, ror #19
    6bdc:	0d210401 	cfstrseq	mvf0, [r1, #-4]!
    6be0:	00000391 	muleq	r0, r1, r3
    6be4:	00005a8c 	andeq	r5, r0, ip, lsl #21
    6be8:	00005a8a 	andeq	r5, r0, sl, lsl #21
    6bec:	274c1d00 	strbcs	r1, [ip, -r0, lsl #26]
    6bf0:	37d41000 	ldrbcc	r1, [r4, r0]
    6bf4:	6a1e0000 	bvs	786bfc <__RAM_SIZE+0x686bfc>
    6bf8:	e3100027 	tst	r0, #39	; 0x27
    6bfc:	5f000037 	svcpl	0x00000037
    6c00:	1f00000a 	svcne	0x0000000a
    6c04:	78025001 	stmdavc	r2, {r0, ip, lr}
    6c08:	a6200000 	strtge	r0, [r0], -r0
    6c0c:	e3100027 	tst	r0, #39	; 0x27
    6c10:	1f000037 	svcne	0x00000037
    6c14:	77025001 	strvc	r5, [r2, -r1]
    6c18:	21000000 	mrscs	r0, (UNDEF: 0)
    6c1c:	001bd301 	andseq	sp, fp, r1, lsl #6
    6c20:	20500100 	subscs	r0, r0, r0, lsl #2
    6c24:	00d9010e 	sbcseq	r0, r9, lr, lsl #2
	...
    6c30:	5a9f0000 	bpl	fe7c6c38 <__StackTop+0xc66c6c38>
    6c34:	0c010000 	stceq	0, cr0, [r1], {-0}
    6c38:	1b00000b 	blne	6c6c <__HEAP_SIZE+0x5c6c>
    6c3c:	00001d5d 	andeq	r1, r0, sp, asr sp
    6c40:	3a205001 	bcc	81ac4c <__RAM_SIZE+0x71ac4c>
    6c44:	000003a7 	andeq	r0, r0, r7, lsr #7
    6c48:	00005ac3 	andeq	r5, r0, r3, asr #21
    6c4c:	00005abf 			; <UNDEFINED> instruction: 0x00005abf
    6c50:	0016e11b 	andseq	lr, r6, fp, lsl r1
    6c54:	20510100 	subscs	r0, r1, r0, lsl #2
    6c58:	00012f39 	andeq	r2, r1, r9, lsr pc
    6c5c:	005ae700 	subseq	lr, sl, r0, lsl #14
    6c60:	005ae100 	subseq	lr, sl, r0, lsl #2
    6c64:	15731b00 	ldrbne	r1, [r3, #-2816]!	; 0xfffff500
    6c68:	52010000 	andpl	r0, r1, #0
    6c6c:	00d93620 	sbcseq	r3, r9, r0, lsr #12
    6c70:	5b160000 	blpl	586c78 <__RAM_SIZE+0x486c78>
    6c74:	5b100000 	blpl	406c7c <__RAM_SIZE+0x306c7c>
    6c78:	ca180000 	bgt	606c80 <__RAM_SIZE+0x506c80>
    6c7c:	01000022 	tsteq	r0, r2, lsr #32
    6c80:	66112054 			; <UNDEFINED> instruction: 0x66112054
    6c84:	41000006 	tstmi	r0, r6
    6c88:	3f00005b 	svccc	0x0000005b
    6c8c:	1800005b 	stmdane	r0, {r0, r1, r3, r4, r6}
    6c90:	000023f0 	strdeq	r2, [r0], -r0
    6c94:	12205501 	eorne	r5, r0, #4194304	; 0x400000
    6c98:	000000d9 	ldrdeq	r0, [r0], -r9
    6c9c:	00005b56 	andeq	r5, r0, r6, asr fp
    6ca0:	00005b54 	andeq	r5, r0, r4, asr fp
    6ca4:	0000001d 	andeq	r0, r0, sp, lsl r0
    6ca8:	0037f200 	eorseq	pc, r7, r0, lsl #4
    6cac:	00001d00 	andeq	r1, r0, r0, lsl #26
    6cb0:	38000000 	stmdacc	r0, {}	; <UNPREDICTABLE>
    6cb4:	21000000 	mrscs	r0, (UNDEF: 0)
    6cb8:	0022d001 	eoreq	sp, r2, r1
    6cbc:	202a0100 	eorcs	r0, sl, r0, lsl #2
    6cc0:	01190110 	tsteq	r9, r0, lsl r1
	...
    6ccc:	5b690000 	blpl	1a46cd4 <__RAM_SIZE+0x1946cd4>
    6cd0:	93010000 	movwls	r0, #4096	; 0x1000
    6cd4:	1b00000b 	blne	6d08 <__HEAP_SIZE+0x5d08>
    6cd8:	00001d5d 	andeq	r1, r0, sp, asr sp
    6cdc:	3b202a01 	blcc	8114e8 <__RAM_SIZE+0x7114e8>
    6ce0:	000003a7 	andeq	r0, r0, r7, lsr #7
    6ce4:	00005b8d 	andeq	r5, r0, sp, lsl #23
    6ce8:	00005b89 	andeq	r5, r0, r9, lsl #23
    6cec:	0016e11b 	andseq	lr, r6, fp, lsl r1
    6cf0:	202b0100 	eorcs	r0, fp, r0, lsl #2
    6cf4:	00012f3a 	andeq	r2, r1, sl, lsr pc
    6cf8:	005bb700 	subseq	fp, fp, r0, lsl #14
    6cfc:	005bab00 	subseq	sl, fp, r0, lsl #22
    6d00:	22ca1800 	sbccs	r1, sl, #0, 16
    6d04:	2d010000 	stccs	0, cr0, [r1, #-0]
    6d08:	06661120 	strbteq	r1, [r6], -r0, lsr #2
    6d0c:	5c0b0000 	stcpl	0, cr0, [fp], {-0}
    6d10:	5c070000 	stcpl	0, cr0, [r7], {-0}
    6d14:	21180000 	tstcs	r8, r0
    6d18:	0100001a 	tsteq	r0, sl, lsl r0
    6d1c:	1914202e 	ldmdbne	r4, {r1, r2, r3, r5, sp}
    6d20:	2d000001 	stccs	0, cr0, [r0, #-4]
    6d24:	2900005c 	stmdbcs	r0, {r2, r3, r4, r6}
    6d28:	1d00005c 	stcne	0, cr0, [r0, #-368]	; 0xfffffe90
    6d2c:	00000000 	andeq	r0, r0, r0
    6d30:	000037f2 	strdeq	r3, [r0], -r2
    6d34:	0000001d 	andeq	r0, r0, sp, lsl r0
    6d38:	00380000 	eorseq	r0, r8, r0
    6d3c:	01220000 			; <UNDEFINED> instruction: 0x01220000
    6d40:	00002077 	andeq	r2, r0, r7, ror r0
    6d44:	0a1fb601 	beq	7f4550 <__RAM_SIZE+0x6f4550>
    6d48:	00000001 	andeq	r0, r0, r1
    6d4c:	00000000 	andeq	r0, r0, r0
    6d50:	005c4c00 	subseq	r4, ip, r0, lsl #24
    6d54:	0ca50100 	stfeqs	f0, [r5]
    6d58:	4f1b0000 	svcmi	0x001b0000
    6d5c:	0100001d 	tsteq	r0, sp, lsl r0
    6d60:	a7361fb6 			; <UNDEFINED> instruction: 0xa7361fb6
    6d64:	70000003 	andvc	r0, r0, r3
    6d68:	6c00005c 	stcvs	0, cr0, [r0], {92}	; 0x5c
    6d6c:	1b00005c 	blne	6ee4 <__HEAP_SIZE+0x5ee4>
    6d70:	0000237a 	andeq	r2, r0, sl, ror r3
    6d74:	351fb701 	ldrcc	fp, [pc, #-1793]	; 667b <__HEAP_SIZE+0x567b>
    6d78:	0000012f 	andeq	r0, r0, pc, lsr #2
    6d7c:	00005c96 	muleq	r0, r6, ip
    6d80:	00005c8e 	andeq	r5, r0, lr, lsl #25
    6d84:	000af91b 	andeq	pc, sl, fp, lsl r9	; <UNPREDICTABLE>
    6d88:	1fb80100 	svcne	0x00b80100
    6d8c:	000ca536 	andeq	sl, ip, r6, lsr r5
    6d90:	005cd300 	subseq	sp, ip, r0, lsl #6
    6d94:	005ccf00 	subseq	ip, ip, r0, lsl #30
    6d98:	22ca1800 	sbccs	r1, sl, #0, 16
    6d9c:	ba010000 	blt	46da4 <__HEAP_SIZE+0x45da4>
    6da0:	0666111f 			; <UNDEFINED> instruction: 0x0666111f
    6da4:	5cf50000 	ldclpl	0, cr0, [r5]
    6da8:	5cf10000 	ldclpl	0, cr0, [r1]
    6dac:	fd180000 	ldc2	0, cr0, [r8, #-0]
    6db0:	01000015 	tsteq	r0, r5, lsl r0
    6db4:	c3111fbb 	tstgt	r1, #748	; 0x2ec
    6db8:	17000000 	strne	r0, [r0, -r0]
    6dbc:	1300005d 	movwne	r0, #93	; 0x5d
    6dc0:	1800005d 	stmdane	r0, {r0, r2, r3, r4, r6}
    6dc4:	00000c2e 	andeq	r0, r0, lr, lsr #24
    6dc8:	151fbc01 	ldrne	fp, [pc, #-3073]	; 61cf <__HEAP_SIZE+0x51cf>
    6dcc:	0000012f 	andeq	r0, r0, pc, lsr #2
    6dd0:	00005d39 	andeq	r5, r0, r9, lsr sp
    6dd4:	00005d35 	andeq	r5, r0, r5, lsr sp
    6dd8:	00075823 	andeq	r5, r7, r3, lsr #16
    6ddc:	000c4c00 	andeq	r4, ip, r0, lsl #24
    6de0:	0a171800 	beq	5ccde8 <__RAM_SIZE+0x4ccde8>
    6de4:	ee010000 	cdp	0, 0, cr0, cr1, cr0, {0}
    6de8:	06dd151f 			; <UNDEFINED> instruction: 0x06dd151f
    6dec:	5d5b0000 	ldclpl	0, cr0, [fp, #-0]
    6df0:	5d570000 	ldclpl	0, cr0, [r7, #-0]
    6df4:	1c000000 	stcne	0, cr0, [r0], {-0}
	...
    6e00:	00000c6f 	andeq	r0, r0, pc, ror #24
    6e04:	0009e318 	andeq	lr, r9, r8, lsl r3
    6e08:	1fef0100 	svcne	0x00ef0100
    6e0c:	00039115 	andeq	r9, r3, r5, lsl r1
    6e10:	005d7b00 	subseq	r7, sp, r0, lsl #22
    6e14:	005d7900 	subseq	r7, sp, r0, lsl #18
    6e18:	001c0000 	andseq	r0, ip, r0
    6e1c:	00000000 	andeq	r0, r0, r0
    6e20:	92000000 	andls	r0, r0, #0
    6e24:	1800000c 	stmdane	r0, {r2, r3}
    6e28:	000009e3 	andeq	r0, r0, r3, ror #19
    6e2c:	151ff501 	ldrne	pc, [pc, #-1281]	; 6933 <__HEAP_SIZE+0x5933>
    6e30:	00000391 	muleq	r0, r1, r3
    6e34:	00005d90 	muleq	r0, r0, sp
    6e38:	00005d8e 	andeq	r5, r0, lr, lsl #27
    6e3c:	00001d00 	andeq	r1, r0, r0, lsl #26
    6e40:	380e0000 	stmdacc	lr, {}	; <UNPREDICTABLE>
    6e44:	001d0000 	andseq	r0, sp, r0
    6e48:	1c000000 	stcne	0, cr0, [r0], {-0}
    6e4c:	00000038 	andeq	r0, r0, r8, lsr r0
    6e50:	01190407 	tsteq	r9, r7, lsl #8
    6e54:	01210000 			; <UNDEFINED> instruction: 0x01210000
    6e58:	00001628 	andeq	r1, r0, r8, lsr #12
    6e5c:	101f1001 	andsne	r1, pc, r1
    6e60:	00011901 	andeq	r1, r1, r1, lsl #18
	...
    6e6c:	005da300 	subseq	sl, sp, r0, lsl #6
    6e70:	0e150100 	mufeqs	f0, f5, f0
    6e74:	4f1b0000 	svcmi	0x001b0000
    6e78:	0100001d 	tsteq	r0, sp, lsl r0
    6e7c:	a7381f10 			; <UNDEFINED> instruction: 0xa7381f10
    6e80:	c7000003 	strgt	r0, [r0, -r3]
    6e84:	c300005d 	movwgt	r0, #93	; 0x5d
    6e88:	1b00005d 	blne	7004 <__HEAP_SIZE+0x6004>
    6e8c:	0000237a 	andeq	r2, r0, sl, ror r3
    6e90:	371f1101 	ldrcc	r1, [pc, -r1, lsl #2]
    6e94:	0000012f 	andeq	r0, r0, pc, lsr #2
    6e98:	00005e07 	andeq	r5, r0, r7, lsl #28
    6e9c:	00005de5 	andeq	r5, r0, r5, ror #27
    6ea0:	001f0c1b 	andseq	r0, pc, fp, lsl ip	; <UNPREDICTABLE>
    6ea4:	1f120100 	svcne	0x00120100
    6ea8:	0000d934 	andeq	sp, r0, r4, lsr r9
    6eac:	005eee00 	subseq	lr, lr, r0, lsl #28
    6eb0:	005ee400 	subseq	lr, lr, r0, lsl #8
    6eb4:	1cc51b00 	vstmiane	r5, {d17-d16}
    6eb8:	13010000 	movwne	r0, #4096	; 0x1000
    6ebc:	052b391f 	streq	r3, [fp, #-2335]!	; 0xfffff6e1
    6ec0:	5f370000 	svcpl	0x00370000
    6ec4:	5f330000 	svcpl	0x00330000
    6ec8:	4f1b0000 	svcmi	0x001b0000
    6ecc:	0100001c 	tsteq	r0, ip, lsl r0
    6ed0:	15361f14 	ldrne	r1, [r6, #-3860]!	; 0xfffff0ec
    6ed4:	5c00000e 	stcpl	0, cr0, [r0], {14}
    6ed8:	5800005f 	stmdapl	r0, {r0, r1, r2, r3, r4, r6}
    6edc:	1b00005f 	blne	7060 <__HEAP_SIZE+0x6060>
    6ee0:	00000af9 	strdeq	r0, [r0], -r9
    6ee4:	381f1501 	ldmdacc	pc, {r0, r8, sl, ip}	; <UNPREDICTABLE>
    6ee8:	00000ca5 	andeq	r0, r0, r5, lsr #25
    6eec:	00005f80 	andeq	r5, r0, r0, lsl #31
    6ef0:	00005f7c 	andeq	r5, r0, ip, ror pc
    6ef4:	0022ca18 	eoreq	ip, r2, r8, lsl sl
    6ef8:	1f170100 	svcne	0x00170100
    6efc:	00066611 	andeq	r6, r6, r1, lsl r6
    6f00:	005fa400 	subseq	sl, pc, r0, lsl #8
    6f04:	005fa000 	subseq	sl, pc, r0
    6f08:	15fd1800 	ldrbne	r1, [sp, #2048]!	; 0x800
    6f0c:	18010000 	stmdane	r1, {}	; <UNPREDICTABLE>
    6f10:	00c3111f 	sbceq	r1, r3, pc, lsl r1
    6f14:	5fc60000 	svcpl	0x00c60000
    6f18:	5fc20000 	svcpl	0x00c20000
    6f1c:	21180000 	tstcs	r8, r0
    6f20:	0100001a 	tsteq	r0, sl, lsl r0
    6f24:	19141f19 	ldmdbne	r4, {r0, r3, r4, r8, r9, sl, fp, ip}
    6f28:	ec000001 	stc	0, cr0, [r0], {1}
    6f2c:	e400005f 	str	r0, [r0], #-95	; 0xffffffa1
    6f30:	1800005f 	stmdane	r0, {r0, r1, r2, r3, r4, r6}
    6f34:	00000c2e 	andeq	r0, r0, lr, lsr #24
    6f38:	151f1a01 	ldrne	r1, [pc, #-2561]	; 653f <__HEAP_SIZE+0x553f>
    6f3c:	0000012f 	andeq	r0, r0, pc, lsr #2
    6f40:	00006026 	andeq	r6, r0, r6, lsr #32
    6f44:	00006022 	andeq	r6, r0, r2, lsr #32
    6f48:	00074023 	andeq	r4, r7, r3, lsr #32
    6f4c:	000dbc00 	andeq	fp, sp, r0, lsl #24
    6f50:	0a171800 	beq	5ccf58 <__RAM_SIZE+0x4ccf58>
    6f54:	78010000 	stmdavc	r1, {}	; <UNPREDICTABLE>
    6f58:	06dd151f 			; <UNDEFINED> instruction: 0x06dd151f
    6f5c:	60480000 	subvs	r0, r8, r0
    6f60:	60440000 	subvs	r0, r4, r0
    6f64:	1c000000 	stcne	0, cr0, [r0], {-0}
	...
    6f70:	00000ddf 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    6f74:	0009e318 	andeq	lr, r9, r8, lsl r3
    6f78:	1f790100 	svcne	0x00790100
    6f7c:	00039115 	andeq	r9, r3, r5, lsl r1
    6f80:	00606800 	rsbeq	r6, r0, r0, lsl #16
    6f84:	00606600 	rsbeq	r6, r0, r0, lsl #12
    6f88:	001c0000 	andseq	r0, ip, r0
    6f8c:	00000000 	andeq	r0, r0, r0
    6f90:	02000000 	andeq	r0, r0, #0
    6f94:	1800000e 	stmdane	r0, {r1, r2, r3}
    6f98:	000009e3 	andeq	r0, r0, r3, ror #19
    6f9c:	151f7f01 	ldrne	r7, [pc, #-3841]	; 60a3 <__HEAP_SIZE+0x50a3>
    6fa0:	00000391 	muleq	r0, r1, r3
    6fa4:	0000607d 	andeq	r6, r0, sp, ror r0
    6fa8:	0000607b 	andeq	r6, r0, fp, ror r0
    6fac:	00001d00 	andeq	r1, r0, r0, lsl #26
    6fb0:	380e0000 	stmdacc	lr, {}	; <UNPREDICTABLE>
    6fb4:	001d0000 	andseq	r0, sp, r0
    6fb8:	1c000000 	stcne	0, cr0, [r0], {-0}
    6fbc:	00000038 	andeq	r0, r0, r8, lsr r0
    6fc0:	00d90407 	sbcseq	r0, r9, r7, lsl #8
    6fc4:	01210000 			; <UNDEFINED> instruction: 0x01210000
    6fc8:	00001793 	muleq	r0, r3, r7
    6fcc:	101e9801 	andsne	r9, lr, r1, lsl #16
    6fd0:	00011901 	andeq	r1, r1, r1, lsl #18
	...
    6fdc:	00609000 	rsbeq	r9, r0, r0
    6fe0:	0f4a0100 	svceq	0x004a0100
    6fe4:	4f1b0000 	svcmi	0x001b0000
    6fe8:	0100001d 	tsteq	r0, sp, lsl r0
    6fec:	a7311e98 			; <UNDEFINED> instruction: 0xa7311e98
    6ff0:	b4000003 	strlt	r0, [r0], #-3
    6ff4:	b0000060 	andlt	r0, r0, r0, rrx
    6ff8:	1b000060 	blne	7180 <__HEAP_SIZE+0x6180>
    6ffc:	0000237a 	andeq	r2, r0, sl, ror r3
    7000:	301e9901 	andscc	r9, lr, r1, lsl #18
    7004:	0000012f 	andeq	r0, r0, pc, lsr #2
    7008:	000060f4 	strdeq	r6, [r0], -r4
    700c:	000060d2 	ldrdeq	r6, [r0], -r2
    7010:	001f0c1b 	andseq	r0, pc, fp, lsl ip	; <UNPREDICTABLE>
    7014:	1e9a0100 	fmlnee	f0, f2, f0
    7018:	0000d92d 	andeq	sp, r0, sp, lsr #18
    701c:	0061db00 	rsbeq	sp, r1, r0, lsl #22
    7020:	0061d100 	rsbeq	sp, r1, r0, lsl #2
    7024:	1cc51b00 	vstmiane	r5, {d17-d16}
    7028:	9b010000 	blls	47030 <__HEAP_SIZE+0x46030>
    702c:	052b321e 	streq	r3, [fp, #-542]!	; 0xfffffde2
    7030:	62240000 	eorvs	r0, r4, #0
    7034:	62200000 	eorvs	r0, r0, #0
    7038:	4f1b0000 	svcmi	0x001b0000
    703c:	0100001c 	tsteq	r0, ip, lsl r0
    7040:	152f1e9c 	strne	r1, [pc, #-3740]!	; 61ac <__HEAP_SIZE+0x51ac>
    7044:	4900000e 	stmdbmi	r0, {r1, r2, r3}
    7048:	45000062 	strmi	r0, [r0, #-98]	; 0xffffff9e
    704c:	18000062 	stmdane	r0, {r1, r5, r6}
    7050:	000022ca 	andeq	r2, r0, sl, asr #5
    7054:	111e9e01 	tstne	lr, r1, lsl #28
    7058:	00000666 	andeq	r0, r0, r6, ror #12
    705c:	0000626d 	andeq	r6, r0, sp, ror #4
    7060:	00006269 	andeq	r6, r0, r9, ror #4
    7064:	001a2118 	andseq	r2, sl, r8, lsl r1
    7068:	1e9f0100 	fmlnee	f0, f7, f0
    706c:	00011914 	andeq	r1, r1, r4, lsl r9
    7070:	00629300 	rsbeq	r9, r2, r0, lsl #6
    7074:	00628b00 	rsbeq	r8, r2, r0, lsl #22
    7078:	15fd1800 	ldrbne	r1, [sp, #2048]!	; 0x800
    707c:	a0010000 	andge	r0, r1, r0
    7080:	00c3111e 	sbceq	r1, r3, lr, lsl r1
    7084:	62cf0000 	sbcvs	r0, pc, #0
    7088:	62c90000 	sbcvs	r0, r9, #0
    708c:	28230000 	stmdacs	r3!, {}	; <UNPREDICTABLE>
    7090:	02000007 	andeq	r0, r0, #7
    7094:	1800000f 	stmdane	r0, {r0, r1, r2, r3}
    7098:	00000a17 	andeq	r0, r0, r7, lsl sl
    709c:	111ee501 	tstne	lr, r1, lsl #10
    70a0:	000006dd 	ldrdeq	r0, [r0], -sp
    70a4:	000062fc 	strdeq	r6, [r0], -ip
    70a8:	000062f8 	strdeq	r6, [r0], -r8
    70ac:	00001c00 	andeq	r1, r0, r0, lsl #24
    70b0:	00000000 	andeq	r0, r0, r0
    70b4:	0f250000 	svceq	0x00250000
    70b8:	e3180000 	tst	r8, #0
    70bc:	01000009 	tsteq	r0, r9
    70c0:	91111ee6 	tstls	r1, r6, ror #29
    70c4:	1c000003 	stcne	0, cr0, [r0], {3}
    70c8:	1a000063 	bne	725c <__HEAP_SIZE+0x625c>
    70cc:	00000063 	andeq	r0, r0, r3, rrx
    70d0:	0000001d 	andeq	r0, r0, sp, lsl r0
    70d4:	0037f200 	eorseq	pc, r7, r0, lsl #4
    70d8:	00001d00 	andeq	r1, r0, r0, lsl #26
    70dc:	38000000 	stmdacc	r0, {}	; <UNPREDICTABLE>
    70e0:	001d0000 	andseq	r0, sp, r0
    70e4:	91000000 	mrsls	r0, (UNDEF: 0)
    70e8:	1d000014 	stcne	0, cr0, [r0, #-80]	; 0xffffffb0
    70ec:	00000000 	andeq	r0, r0, r0
    70f0:	0000382a 	andeq	r3, r0, sl, lsr #16
    70f4:	73012100 	movwvc	r2, #4352	; 0x1100
    70f8:	0100001a 	tsteq	r0, sl, lsl r0
    70fc:	01101e25 	tsteq	r0, r5, lsr #28
    7100:	00000119 	andeq	r0, r0, r9, lsl r1
	...
    710c:	0000632f 	andeq	r6, r0, pc, lsr #6
    7110:	00107d01 	andseq	r7, r0, r1, lsl #26
    7114:	24121b00 	ldrcs	r1, [r2], #-2816	; 0xfffff500
    7118:	25010000 	strcs	r0, [r1, #-0]
    711c:	012f341e 			; <UNDEFINED> instruction: 0x012f341e
    7120:	63570000 	cmpvs	r7, #0
    7124:	634f0000 	movtvs	r0, #61440	; 0xf000
    7128:	1e1b0000 	cdpne	0, 1, cr0, cr11, cr0, {0}
    712c:	01000018 	tsteq	r0, r8, lsl r0
    7130:	d9311e26 	ldmdble	r1!, {r1, r2, r5, r9, sl, fp, ip}
    7134:	92000000 	andls	r0, r0, #0
    7138:	8e000063 	cdphi	0, 0, cr0, cr0, cr3, {3}
    713c:	1b000063 	blne	72d0 <__HEAP_SIZE+0x62d0>
    7140:	000014f3 	strdeq	r1, [r0], -r3
    7144:	311e2701 	tstcc	lr, r1, lsl #14
    7148:	000000d9 	ldrdeq	r0, [r0], -r9
    714c:	000063ba 			; <UNDEFINED> instruction: 0x000063ba
    7150:	000063b0 			; <UNDEFINED> instruction: 0x000063b0
    7154:	001f941b 	andseq	r9, pc, fp, lsl r4	; <UNPREDICTABLE>
    7158:	1e280100 	sufnee	f0, f0, f0
    715c:	000e1533 	andeq	r1, lr, r3, lsr r5
    7160:	00640900 	rsbeq	r0, r4, r0, lsl #18
    7164:	0063ff00 	rsbeq	pc, r3, r0, lsl #30
    7168:	20e91b00 	rsccs	r1, r9, r0, lsl #22
    716c:	29010000 	stmdbcs	r1, {}	; <UNPREDICTABLE>
    7170:	014a331e 	cmpeq	sl, lr, lsl r3
    7174:	64520000 	ldrbvs	r0, [r2], #-0
    7178:	644e0000 	strbvs	r0, [lr], #-0
    717c:	21180000 	tstcs	r8, r0
    7180:	0100001a 	tsteq	r0, sl, lsl r0
    7184:	19141e2b 	ldmdbne	r4, {r0, r1, r3, r5, r9, sl, fp, ip}
    7188:	76000001 	strvc	r0, [r0], -r1
    718c:	72000064 	andvc	r0, r0, #100	; 0x64
    7190:	18000064 	stmdane	r0, {r2, r5, r6}
    7194:	0000215b 	andeq	r2, r0, fp, asr r1
    7198:	1d1e2b01 	vldrne	d2, [lr, #-4]
    719c:	00000119 	andeq	r0, r0, r9, lsl r1
    71a0:	00006499 	muleq	r0, r9, r4
    71a4:	00006495 	muleq	r0, r5, r4
    71a8:	001e5618 	andseq	r5, lr, r8, lsl r6
    71ac:	1e2b0100 	sufnee	f0, f3, f0
    71b0:	0001192e 	andeq	r1, r1, lr, lsr #18
    71b4:	0064bd00 	rsbeq	fp, r4, r0, lsl #26
    71b8:	0064b700 	rsbeq	fp, r4, r0, lsl #14
    71bc:	00001d00 	andeq	r1, r0, r0, lsl #26
    71c0:	26280000 	strtcs	r0, [r8], -r0
    71c4:	001d0000 	andseq	r0, sp, r0
    71c8:	f2000000 	vhadd.s8	d0, d0, d0
    71cc:	1d000037 	stcne	0, cr0, [r0, #-220]	; 0xffffff24
    71d0:	00000000 	andeq	r0, r0, r0
    71d4:	00003800 	andeq	r3, r0, r0, lsl #16
    71d8:	0000001d 	andeq	r0, r0, sp, lsl r0
    71dc:	0024cf00 	eoreq	ip, r4, r0, lsl #30
    71e0:	00001d00 	andeq	r1, r0, r0, lsl #26
    71e4:	37f20000 	ldrbcc	r0, [r2, r0]!
    71e8:	001d0000 	andseq	r0, sp, r0
    71ec:	00000000 	andeq	r0, r0, r0
    71f0:	1d000038 	stcne	0, cr0, [r0, #-224]	; 0xffffff20
    71f4:	00000000 	andeq	r0, r0, r0
    71f8:	00003800 	andeq	r3, r0, r0, lsl #16
    71fc:	0000001d 	andeq	r0, r0, sp, lsl r0
    7200:	00380000 	eorseq	r0, r8, r0
    7204:	00001e00 	andeq	r1, r0, r0, lsl #28
    7208:	09860000 	stmibeq	r6, {}	; <UNPREDICTABLE>
    720c:	10730000 	rsbsne	r0, r3, r0
    7210:	011f0000 	tsteq	pc, r0
    7214:	00770250 	rsbseq	r0, r7, r0, asr r2
    7218:	0151011f 	cmpeq	r1, pc, lsl r1
    721c:	001d0031 	andseq	r0, sp, r1, lsr r0
    7220:	2a000000 	bcs	7228 <__HEAP_SIZE+0x6228>
    7224:	00000038 	andeq	r0, r0, r8, lsr r0
    7228:	1ac40121 	bne	ff1076b4 <__StackTop+0xc70076b4>
    722c:	be010000 	cdplt	0, 0, cr0, cr1, cr0, {0}
    7230:	d9010e1d 	stmdble	r1, {r0, r2, r3, r4, r9, sl, fp}
	...
    723c:	e9000000 	stmdb	r0, {}	; <UNPREDICTABLE>
    7240:	01000064 	tsteq	r0, r4, rrx
    7244:	00001186 	andeq	r1, r0, r6, lsl #3
    7248:	0024121b 	eoreq	r1, r4, fp, lsl r2
    724c:	1dbe0100 	ldfnes	f0, [lr]
    7250:	00012f33 	andeq	r2, r1, r3, lsr pc
    7254:	00651100 	rsbeq	r1, r5, r0, lsl #2
    7258:	00650900 	rsbeq	r0, r5, r0, lsl #18
    725c:	17b51b00 	ldrne	r1, [r5, r0, lsl #22]!
    7260:	bf010000 	svclt	0x00010000
    7264:	0119321d 	tsteq	r9, sp, lsl r2
    7268:	654c0000 	strbvs	r0, [ip, #-0]
    726c:	65480000 	strbvs	r0, [r8, #-0]
    7270:	e91b0000 	ldmdb	fp, {}	; <UNPREDICTABLE>
    7274:	01000020 	tsteq	r0, r0, lsr #32
    7278:	4a321dc0 	bmi	c8e980 <__RAM_SIZE+0xb8e980>
    727c:	78000001 	stmdavc	r0, {r0}
    7280:	6a000065 	bvs	741c <__HEAP_SIZE+0x641c>
    7284:	18000065 	stmdane	r0, {r0, r2, r5, r6}
    7288:	000023f0 	strdeq	r2, [r0], -r0
    728c:	121dc201 	andsne	ip, sp, #268435456	; 0x10000000
    7290:	000000d9 	ldrdeq	r0, [r0], -r9
    7294:	000065da 	ldrdeq	r6, [r0], -sl
    7298:	000065d6 	ldrdeq	r6, [r0], -r6	; <UNPREDICTABLE>
    729c:	00215b18 	eoreq	r5, r1, r8, lsl fp
    72a0:	1dc30100 	stfnee	f0, [r3]
    72a4:	00011914 	andeq	r1, r1, r4, lsl r9
    72a8:	0065fc00 	rsbeq	pc, r5, r0, lsl #24
    72ac:	0065f800 	rsbeq	pc, r5, r0, lsl #16
    72b0:	1e561800 	cdpne	8, 5, cr1, cr6, cr0, {0}
    72b4:	c3010000 	movwgt	r0, #4096	; 0x1000
    72b8:	0119251d 	tsteq	r9, sp, lsl r5
    72bc:	66200000 	strtvs	r0, [r0], -r0
    72c0:	661a0000 	ldrvs	r0, [sl], -r0
    72c4:	001d0000 	andseq	r0, sp, r0
    72c8:	28000000 	stmdacs	r0, {}	; <UNPREDICTABLE>
    72cc:	1d000026 	stcne	0, cr0, [r0, #-152]	; 0xffffff68
    72d0:	00000000 	andeq	r0, r0, r0
    72d4:	000037f2 	strdeq	r3, [r0], -r2
    72d8:	0000001d 	andeq	r0, r0, sp, lsl r0
    72dc:	00380000 	eorseq	r0, r8, r0
    72e0:	00001d00 	andeq	r1, r0, r0, lsl #26
    72e4:	24cf0000 	strbcs	r0, [pc], #0	; 72ec <__HEAP_SIZE+0x62ec>
    72e8:	001d0000 	andseq	r0, sp, r0
    72ec:	f2000000 	vhadd.s8	d0, d0, d0
    72f0:	1d000037 	stcne	0, cr0, [r0, #-220]	; 0xffffff24
    72f4:	00000000 	andeq	r0, r0, r0
    72f8:	00003800 	andeq	r3, r0, r0, lsl #16
    72fc:	0000001d 	andeq	r0, r0, sp, lsl r0
    7300:	00380000 	eorseq	r0, r8, r0
    7304:	00001d00 	andeq	r1, r0, r0, lsl #26
    7308:	38000000 	stmdacc	r0, {}	; <UNPREDICTABLE>
    730c:	001e0000 	andseq	r0, lr, r0
    7310:	86000000 	strhi	r0, [r0], -r0
    7314:	7c000009 	stcvc	0, cr0, [r0], {9}
    7318:	1f000011 	svcne	0x00000011
    731c:	75025001 	strvc	r5, [r2, #-1]
    7320:	51011f00 	tstpl	r1, r0, lsl #30
    7324:	1d003101 	stfnes	f3, [r0, #-4]
    7328:	00000000 	andeq	r0, r0, r0
    732c:	0000382a 	andeq	r3, r0, sl, lsr #16
    7330:	38012400 	stmdacc	r1, {sl, sp}
    7334:	0100000e 	tsteq	r0, lr
    7338:	01121da5 	tsteq	r2, r5, lsr #27
    733c:	000003a7 	andeq	r0, r0, r7, lsr #7
	...
    7348:	01007d02 	tsteq	r0, r2, lsl #26
    734c:	000011bb 			; <UNDEFINED> instruction: 0x000011bb
    7350:	0022ca18 	eoreq	ip, r2, r8, lsl sl
    7354:	1da70100 	stfnes	f0, [r7]
    7358:	00066611 	andeq	r6, r6, r1, lsl r6
    735c:	00664e00 	rsbeq	r4, r6, r0, lsl #28
    7360:	00664c00 	rsbeq	r4, r6, r0, lsl #24
    7364:	01240000 			; <UNDEFINED> instruction: 0x01240000
    7368:	00001ccd 	andeq	r1, r0, sp, asr #25
    736c:	0c1d9101 	ldfeqd	f1, [sp], {1}
    7370:	00014a01 	andeq	r4, r1, r1, lsl #20
	...
    737c:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    7380:	0011f001 	andseq	pc, r1, r1
    7384:	0c0d1800 	stceq	8, cr1, [sp], {-0}
    7388:	93010000 	movwls	r0, #4096	; 0x1000
    738c:	014a101d 	cmpeq	sl, sp, lsl r0
    7390:	66630000 	strbtvs	r0, [r3], -r0
    7394:	66610000 	strbtvs	r0, [r1], -r0
    7398:	22000000 	andcs	r0, r0, #0
    739c:	0012cd01 	andseq	ip, r2, r1, lsl #26
    73a0:	1a790100 	bne	1e477a8 <__RAM_SIZE+0x1d477a8>
    73a4:	0000010a 	andeq	r0, r0, sl, lsl #2
    73a8:	00000000 	andeq	r0, r0, r0
    73ac:	66760000 	ldrbtvs	r0, [r6], -r0
    73b0:	b7010000 	strlt	r0, [r1, -r0]
    73b4:	1b000012 	blne	7404 <__HEAP_SIZE+0x6404>
    73b8:	00001ed2 	ldrdeq	r1, [r0], -r2
    73bc:	421a7901 	andsmi	r7, sl, #16384	; 0x4000
    73c0:	000003b3 			; <UNDEFINED> instruction: 0x000003b3
    73c4:	000066ac 	andeq	r6, r0, ip, lsr #13
    73c8:	000066a2 	andeq	r6, r0, r2, lsr #13
    73cc:	001e391b 	andseq	r3, lr, fp, lsl r9
    73d0:	1a7a0100 	bne	1e877d8 <__RAM_SIZE+0x1d877d8>
    73d4:	00012f3b 	andeq	r2, r1, fp, lsr pc
    73d8:	0066f100 	rsbeq	pc, r6, r0, lsl #2
    73dc:	0066eb00 	rsbeq	lr, r6, r0, lsl #22
    73e0:	22ca1800 	sbccs	r1, sl, #0, 16
    73e4:	7c010000 	stcvc	0, cr0, [r1], {-0}
    73e8:	0671171a 			; <UNDEFINED> instruction: 0x0671171a
    73ec:	67270000 	strvs	r0, [r7, -r0]!
    73f0:	671d0000 	ldrvs	r0, [sp, -r0]
    73f4:	1c180000 	ldcne	0, cr0, [r8], {-0}
    73f8:	01000021 	tsteq	r0, r1, lsr #32
    73fc:	2f151a7d 	svccs	0x00151a7d
    7400:	68000001 	stmdavs	r0, {r0}
    7404:	66000067 	strvs	r0, [r0], -r7, rrx
    7408:	18000067 	stmdane	r0, {r0, r1, r2, r5, r6}
    740c:	00001dd8 	ldrdeq	r1, [r0], -r8
    7410:	2c1a7d01 	ldccs	13, cr7, [sl], {1}
    7414:	0000012f 	andeq	r0, r0, pc, lsr #2
    7418:	00006783 	andeq	r6, r0, r3, lsl #15
    741c:	0000677b 	andeq	r6, r0, fp, ror r7
    7420:	0014e025 	andseq	lr, r4, r5, lsr #32
    7424:	1a7e0100 	bne	1f8782c <__RAM_SIZE+0x1e8782c>
    7428:	0001451b 	andeq	r4, r1, fp, lsl r5
    742c:	001c0100 	andseq	r0, ip, r0, lsl #2
    7430:	00000000 	andeq	r0, r0, r0
    7434:	a6000000 	strge	r0, [r0], -r0
    7438:	18000012 	stmdane	r0, {r1, r4}
    743c:	000009e3 	andeq	r0, r0, r3, ror #19
    7440:	191ac901 	ldmdbne	sl, {r0, r8, fp, lr, pc}
    7444:	00000391 	muleq	r0, r1, r3
    7448:	000067bb 			; <UNDEFINED> instruction: 0x000067bb
    744c:	000067b9 			; <UNDEFINED> instruction: 0x000067b9
    7450:	00002000 	andeq	r2, r0, r0
    7454:	37d40000 	ldrbcc	r0, [r4, r0]
    7458:	011f0000 	tsteq	pc, r0
    745c:	00750250 	rsbseq	r0, r5, r0, asr r2
    7460:	01210000 			; <UNDEFINED> instruction: 0x01210000
    7464:	00000ebb 			; <UNDEFINED> instruction: 0x00000ebb
    7468:	101a1b01 	andsne	r1, sl, r1, lsl #22
    746c:	00011901 	andeq	r1, r1, r1, lsl #18
    7470:	002e0c00 	eoreq	r0, lr, r0, lsl #24
    7474:	002e8c10 	eoreq	r8, lr, r0, lsl ip
    7478:	0067ce10 	rsbeq	ip, r7, r0, lsl lr
    747c:	134a0100 	movtne	r0, #41216	; 0xa100
    7480:	d21b0000 	andsle	r0, fp, #0
    7484:	0100001e 	tsteq	r0, lr, lsl r0
    7488:	b33c1a1b 	teqlt	ip, #110592	; 0x1b000
    748c:	16000003 	strne	r0, [r0], -r3
    7490:	06000068 	streq	r0, [r0], -r8, rrx
    7494:	18000068 	stmdane	r0, {r3, r5, r6}
    7498:	000022ca 	andeq	r2, r0, sl, asr #5
    749c:	171a1d01 	ldrne	r1, [sl, -r1, lsl #26]
    74a0:	00000671 	andeq	r0, r0, r1, ror r6
    74a4:	00006889 	andeq	r6, r0, r9, lsl #17
    74a8:	00006879 	andeq	r6, r0, r9, ror r8
    74ac:	001a2118 	andseq	r2, sl, r8, lsl r1
    74b0:	1a1e0100 	bne	7878b8 <__RAM_SIZE+0x6878b8>
    74b4:	00011914 	andeq	r1, r1, r4, lsl r9
    74b8:	0068f400 	rsbeq	pc, r8, r0, lsl #8
    74bc:	0068ec00 	rsbeq	lr, r8, r0, lsl #24
    74c0:	2e461c00 	cdpcs	12, 4, cr1, cr6, cr0, {0}
    74c4:	2e761000 	cdpcs	0, 7, cr1, cr6, cr0, {0}
    74c8:	13391000 	teqne	r9, #0
    74cc:	e3180000 	tst	r8, #0
    74d0:	01000009 	tsteq	r0, r9
    74d4:	91151a4a 	tstls	r5, sl, asr #20
    74d8:	2e000003 	cdpcs	0, 0, cr0, cr0, cr3, {0}
    74dc:	2c000069 	stccs	0, cr0, [r0], {105}	; 0x69
    74e0:	00000069 	andeq	r0, r0, r9, rrx
    74e4:	002e3020 	eoreq	r3, lr, r0, lsr #32
    74e8:	0037d410 	eorseq	sp, r7, r0, lsl r4
    74ec:	50011f00 	andpl	r1, r1, r0, lsl #30
    74f0:	00007502 	andeq	r7, r0, r2, lsl #10
    74f4:	4f012100 	svcmi	0x00012100
    74f8:	01000012 	tsteq	r0, r2, lsl r0
    74fc:	011019b4 			; <UNDEFINED> instruction: 0x011019b4
    7500:	00000119 	andeq	r0, r0, r9, lsl r1
	...
    750c:	00006941 	andeq	r6, r0, r1, asr #18
    7510:	0013dd01 	andseq	sp, r3, r1, lsl #26
    7514:	1ed21b00 	vfnmsne.f64	d17, d2, d0
    7518:	b4010000 	strlt	r0, [r1], #-0
    751c:	03b33919 			; <UNDEFINED> instruction: 0x03b33919
    7520:	698d0000 	stmibvs	sp, {}	; <UNPREDICTABLE>
    7524:	69790000 	ldmdbvs	r9!, {}^	; <UNPREDICTABLE>
    7528:	08180000 	ldmdaeq	r8, {}	; <UNPREDICTABLE>
    752c:	01000020 	tsteq	r0, r0, lsr #32
    7530:	711719b6 			; <UNDEFINED> instruction: 0x711719b6
    7534:	1a000006 	bne	7554 <__HEAP_SIZE+0x6554>
    7538:	0600006a 	streq	r0, [r0], -sl, rrx
    753c:	1800006a 	stmdane	r0, {r1, r3, r5, r6}
    7540:	00001a21 	andeq	r1, r0, r1, lsr #20
    7544:	1419b701 	ldrne	fp, [r9], #-1793	; 0xfffff8ff
    7548:	00000119 	andeq	r0, r0, r9, lsl r1
    754c:	00006a99 	muleq	r0, r9, sl
    7550:	00006a93 	muleq	r0, r3, sl
    7554:	0000001c 	andeq	r0, r0, ip, lsl r0
    7558:	00000000 	andeq	r0, r0, r0
    755c:	0013cc00 	andseq	ip, r3, r0, lsl #24
    7560:	09e31800 	stmibeq	r3!, {fp, ip}^
    7564:	e2010000 	and	r0, r1, #0
    7568:	03911519 	orrseq	r1, r1, #104857600	; 0x6400000
    756c:	6ac70000 	bvs	ff1c7574 <__StackTop+0xc70c7574>
    7570:	6ac50000 	bvs	ff147578 <__StackTop+0xc7047578>
    7574:	20000000 	andcs	r0, r0, r0
    7578:	00000000 	andeq	r0, r0, r0
    757c:	000037d4 	ldrdeq	r3, [r0], -r4
    7580:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    7584:	00000075 	andeq	r0, r0, r5, ror r0
    7588:	15070124 	strne	r0, [r7, #-292]	; 0xfffffedc
    758c:	8c010000 	stchi	0, cr0, [r1], {-0}
    7590:	19011019 	stmdbne	r1, {r0, r3, r4, ip}
    7594:	00000001 	andeq	r0, r0, r1
    7598:	00000000 	andeq	r0, r0, r0
    759c:	02000000 	andeq	r0, r0, #0
    75a0:	1201007d 	andne	r0, r1, #125	; 0x7d
    75a4:	18000014 	stmdane	r0, {r2, r4}
    75a8:	00001a21 	andeq	r1, r0, r1, lsr #20
    75ac:	14198e01 	ldrne	r8, [r9], #-3585	; 0xfffff1ff
    75b0:	00000119 	andeq	r0, r0, r9, lsl r1
    75b4:	00006adc 	ldrdeq	r6, [r0], -ip
    75b8:	00006ada 	ldrdeq	r6, [r0], -sl
    75bc:	1d012400 	cfstrsne	mvf2, [r1, #-0]
    75c0:	01000022 	tsteq	r0, r2, lsr #32
    75c4:	01121973 	tsteq	r2, r3, ror r9
    75c8:	000003a7 	andeq	r0, r0, r7, lsr #7
	...
    75d4:	01007d02 	tsteq	r0, r2, lsl #26
    75d8:	0000145c 	andeq	r1, r0, ip, asr r4
    75dc:	00141d1b 	andseq	r1, r4, fp, lsl sp
    75e0:	19730100 	ldmdbne	r3!, {r8}^
    75e4:	0001193f 	andeq	r1, r1, pc, lsr r9
    75e8:	006af800 	rsbeq	pc, sl, r0, lsl #16
    75ec:	006af000 	rsbeq	pc, sl, r0
    75f0:	1a211800 	bne	84d5f8 <__RAM_SIZE+0x74d5f8>
    75f4:	75010000 	strvc	r0, [r1, #-0]
    75f8:	03a71619 			; <UNDEFINED> instruction: 0x03a71619
    75fc:	6b380000 	blvs	e07604 <__RAM_SIZE+0xd07604>
    7600:	6b320000 	blvs	c87608 <__RAM_SIZE+0xb87608>
    7604:	24000000 	strcs	r0, [r0], #-0
    7608:	0012f901 	andseq	pc, r2, r1, lsl #18
    760c:	19500100 	ldmdbne	r0, {r8}^
    7610:	03a70116 			; <UNDEFINED> instruction: 0x03a70116
	...
    761c:	7d020000 	stcvc	0, cr0, [r2, #-0]
    7620:	14910100 	ldrne	r0, [r1], #256	; 0x100
    7624:	21180000 	tstcs	r8, r0
    7628:	0100001a 	tsteq	r0, sl, lsl r0
    762c:	a71a1952 			; <UNDEFINED> instruction: 0xa71a1952
    7630:	65000003 	strvs	r0, [r0, #-3]
    7634:	6300006b 	movwvs	r0, #107	; 0x6b
    7638:	0000006b 	andeq	r0, r0, fp, rrx
    763c:	001c1626 	andseq	r1, ip, r6, lsr #12
    7640:	19380100 	ldmdbne	r8!, {r8}
    7644:	241c010d 	ldrcs	r0, [ip], #-269	; 0xfffffef3
    7648:	24441000 	strbcs	r1, [r4], #-0
    764c:	7d021000 	stcvc	0, cr1, [r2, #-0]
    7650:	381a0100 	ldmdacc	sl, {r8}
    7654:	01000021 	tsteq	r0, r1, lsr #32
    7658:	01111903 	tsteq	r1, r3, lsl #18
    765c:	100026b2 			; <UNDEFINED> instruction: 0x100026b2
    7660:	100026d6 	ldrdne	r2, [r0], -r6
    7664:	00006b78 	andeq	r6, r0, r8, ror fp
    7668:	0014fe01 	andseq	pc, r4, r1, lsl #28
    766c:	22ca1b00 	sbccs	r1, sl, #0, 22
    7670:	03010000 	movweq	r0, #4096	; 0x1000
    7674:	06662719 			; <UNDEFINED> instruction: 0x06662719
    7678:	6ba40000 	blvs	fe907680 <__StackTop+0xc6807680>
    767c:	6b980000 	blvs	fe607684 <__StackTop+0xc6507684>
    7680:	c81d0000 	ldmdagt	sp, {}	; <UNPREDICTABLE>
    7684:	38100026 	ldmdacc	r0, {r1, r2, r5}
    7688:	1e000038 	mcrne	0, 0, r0, cr0, cr8, {1}
    768c:	100026ce 	andne	r2, r0, lr, asr #13
    7690:	00003838 	andeq	r3, r0, r8, lsr r8
    7694:	000014f4 	strdeq	r1, [r0], -r4
    7698:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    769c:	1d000074 	stcne	0, cr0, [r0, #-464]	; 0xfffffe30
    76a0:	100026d4 	ldrdne	r2, [r0], -r4
    76a4:	00003838 	andeq	r3, r0, r8, lsr r8
    76a8:	c9012100 	stmdbgt	r1, {r8, sp}
    76ac:	01000018 	tsteq	r0, r8, lsl r0
    76b0:	011118e3 	tsteq	r1, r3, ror #17
    76b4:	0000012f 	andeq	r0, r0, pc, lsr #2
	...
    76c0:	00006bee 	andeq	r6, r0, lr, ror #23
    76c4:	00157c01 	andseq	r7, r5, r1, lsl #24
    76c8:	1d5d1b00 	vldrne	d17, [sp, #-0]
    76cc:	e3010000 	movw	r0, #4096	; 0x1000
    76d0:	03a73b18 			; <UNDEFINED> instruction: 0x03a73b18
    76d4:	6c120000 	ldcvs	0, cr0, [r2], {-0}
    76d8:	6c0e0000 	stcvs	0, cr0, [lr], {-0}
    76dc:	ca180000 	bgt	6076e4 <__RAM_SIZE+0x5076e4>
    76e0:	01000022 	tsteq	r0, r2, lsr #32
    76e4:	661118e5 	ldrvs	r1, [r1], -r5, ror #17
    76e8:	32000006 	andcc	r0, r0, #6
    76ec:	3000006c 	andcc	r0, r0, ip, rrx
    76f0:	1800006c 	stmdane	r0, {r2, r3, r5, r6}
    76f4:	00001ffa 	strdeq	r1, [r0], -sl
    76f8:	1318e601 	tstne	r8, #1048576	; 0x100000
    76fc:	00000160 	andeq	r0, r0, r0, ror #2
    7700:	00006c47 	andeq	r6, r0, r7, asr #24
    7704:	00006c45 	andeq	r6, r0, r5, asr #24
    7708:	000c0d18 	andeq	r0, ip, r8, lsl sp
    770c:	18e70100 	stmiane	r7!, {r8}^
    7710:	00012f15 	andeq	r2, r1, r5, lsl pc
    7714:	006c5d00 	rsbeq	r5, ip, r0, lsl #26
    7718:	006c5b00 	rsbeq	r5, ip, r0, lsl #22
    771c:	00001d00 	andeq	r1, r0, r0, lsl #26
    7720:	157c0000 	ldrbne	r0, [ip, #-0]!
    7724:	27000000 	strcs	r0, [r0, -r0]
    7728:	00002194 	muleq	r0, r4, r1
    772c:	2318a301 	tstcs	r8, #67108864	; 0x4000000
    7730:	00002901 	andeq	r2, r0, r1, lsl #18
	...
    773c:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    7740:	0015c501 	andseq	ip, r5, r1, lsl #10
    7744:	16511b00 	ldrbne	r1, [r1], -r0, lsl #22
    7748:	a3010000 	movwge	r0, #4096	; 0x1000
    774c:	15c54f18 	strbne	r4, [r5, #3864]	; 0xf18
    7750:	6c740000 	ldclvs	0, cr0, [r4], #-0
    7754:	6c700000 	ldclvs	0, cr0, [r0], #-0
    7758:	db180000 	blle	607760 <__RAM_SIZE+0x507760>
    775c:	0100001f 	tsteq	r0, pc, lsl r0
    7760:	292018a5 	stmdbcs	r0!, {r0, r2, r5, r7, fp, ip}
    7764:	9a000000 	bls	776c <__HEAP_SIZE+0x676c>
    7768:	9200006c 	andls	r0, r0, #108	; 0x6c
    776c:	0000006c 	andeq	r0, r0, ip, rrx
    7770:	00d40407 	sbcseq	r0, r4, r7, lsl #8
    7774:	ba1a0000 	blt	68777c <__RAM_SIZE+0x58777c>
    7778:	01000023 	tsteq	r0, r3, lsr #32
    777c:	010d179b 			; <UNDEFINED> instruction: 0x010d179b
    7780:	100026d8 	ldrdne	r2, [r0], -r8
    7784:	10002724 	andne	r2, r0, r4, lsr #14
    7788:	00006cd3 	ldrdeq	r6, [r0], -r3
    778c:	00163801 	andseq	r3, r6, r1, lsl #16
    7790:	04f82800 	ldrbteq	r2, [r8], #2048	; 0x800
    7794:	ca180000 	bgt	60779c <__RAM_SIZE+0x50779c>
    7798:	01000022 	tsteq	r0, r2, lsr #32
    779c:	661117a1 	ldrvs	r1, [r1], -r1, lsr #15
    77a0:	01000006 	tsteq	r0, r6
    77a4:	ff00006d 			; <UNDEFINED> instruction: 0xff00006d
    77a8:	1d00006c 	stcne	0, cr0, [r0, #-432]	; 0xfffffe50
    77ac:	100026e4 	andne	r2, r0, r4, ror #13
    77b0:	000037f2 	strdeq	r3, [r0], -r2
    77b4:	0026f01e 	eoreq	pc, r6, lr, lsl r0	; <UNPREDICTABLE>
    77b8:	0037d410 	eorseq	sp, r7, r0, lsl r4
    77bc:	00161d00 	andseq	r1, r6, r0, lsl #26
    77c0:	50011f00 	andpl	r1, r1, r0, lsl #30
    77c4:	00047402 	andeq	r7, r4, r2, lsl #8
    77c8:	0027041d 	eoreq	r0, r7, sp, lsl r4
    77cc:	00380010 	eorseq	r0, r8, r0, lsl r0
    77d0:	270a2000 	strcs	r2, [sl, -r0]
    77d4:	14a71000 	strtne	r1, [r7], #0
    77d8:	011f0000 	tsteq	pc, r0
    77dc:	00740250 	rsbseq	r0, r4, r0, asr r2
    77e0:	1a000000 	bne	77e8 <__HEAP_SIZE+0x67e8>
    77e4:	00002356 	andeq	r2, r0, r6, asr r3
    77e8:	0d177b01 	vldreq	d7, [r7, #-4]
    77ec:	00252c01 	eoreq	r2, r5, r1, lsl #24
    77f0:	00259410 	eoreq	r9, r5, r0, lsl r4
    77f4:	006d1410 	rsbeq	r1, sp, r0, lsl r4
    77f8:	16f30100 	ldrbtne	r0, [r3], r0, lsl #2
    77fc:	7a180000 	bvc	607804 <__RAM_SIZE+0x507804>
    7800:	01000014 	tsteq	r0, r4, lsl r0
    7804:	2f11177d 	svccs	0x0011177d
    7808:	38000001 	stmdacc	r0, {r0}
    780c:	3400006d 	strcc	r0, [r0], #-109	; 0xffffff93
    7810:	1e00006d 	cdpne	0, 0, cr0, cr0, cr13, {3}
    7814:	10002540 	andne	r2, r0, r0, asr #10
    7818:	00003846 	andeq	r3, r0, r6, asr #16
    781c:	00001689 	andeq	r1, r0, r9, lsl #13
    7820:	0f50011f 	svceq	0x0050011f
    7824:	24330074 	ldrtcs	r0, [r3], #-116	; 0xffffff8c
    7828:	321c0074 	andscc	r0, ip, #116	; 0x74
    782c:	85bc0324 	ldrhi	r0, [ip, #804]!	; 0x324
    7830:	00223800 	eoreq	r3, r2, r0, lsl #16
    7834:	00254e1e 	eoreq	r4, r5, lr, lsl lr
    7838:	00384610 	eorseq	r4, r8, r0, lsl r6
    783c:	00169d00 	andseq	r9, r6, r0, lsl #26
    7840:	50011f00 	andpl	r1, r1, r0, lsl #30
    7844:	00007502 	andeq	r7, r0, r2, lsl #10
    7848:	0025561e 	eoreq	r5, r5, lr, lsl r6
    784c:	00384610 	eorseq	r4, r8, r0, lsl r6
    7850:	0016b100 	andseq	fp, r6, r0, lsl #2
    7854:	50011f00 	andpl	r1, r1, r0, lsl #30
    7858:	00007402 	andeq	r7, r0, r2, lsl #8
    785c:	00255c1e 	eoreq	r5, r5, lr, lsl ip
    7860:	00384610 	eorseq	r4, r8, r0, lsl r6
    7864:	0016c800 	andseq	ip, r6, r0, lsl #16
    7868:	50011f00 	andpl	r1, r1, r0, lsl #30
    786c:	8af00305 	bhi	ffc08488 <__StackTop+0xc7b08488>
    7870:	1e003800 	cdpne	8, 0, cr3, cr0, cr0, {0}
    7874:	10002562 	andne	r2, r0, r2, ror #10
    7878:	00003846 	andeq	r3, r0, r6, asr #16
    787c:	000016df 	ldrdeq	r1, [r0], -pc	; <UNPREDICTABLE>
    7880:	0550011f 	ldrbeq	r0, [r0, #-287]	; 0xfffffee1
    7884:	008b2c03 	addeq	r2, fp, r3, lsl #24
    7888:	68200038 	stmdavs	r0!, {r3, r4, r5}
    788c:	46100025 	ldrmi	r0, [r0], -r5, lsr #32
    7890:	1f000038 	svcne	0x00000038
    7894:	03055001 	movweq	r5, #20481	; 0x5001
    7898:	38008b10 	stmdacc	r0, {r4, r8, r9, fp, pc}
    789c:	01240000 			; <UNDEFINED> instruction: 0x01240000
    78a0:	000019f4 	strdeq	r1, [r0], -r4
    78a4:	1616fc01 	ldrne	pc, [r6], -r1, lsl #24
    78a8:	0005e701 	andeq	lr, r5, r1, lsl #14
    78ac:	002dc400 	eoreq	ip, sp, r0, lsl #8
    78b0:	002e0c10 	eoreq	r0, lr, r0, lsl ip
    78b4:	007d0210 	rsbseq	r0, sp, r0, lsl r2
    78b8:	00173601 	andseq	r3, r7, r1, lsl #12
    78bc:	21fd2500 	mvnscs	r2, r0, lsl #10
    78c0:	00010000 	andeq	r0, r1, r0
    78c4:	01451f17 	cmpeq	r5, r7, lsl pc
    78c8:	18010000 	stmdane	r1, {}	; <UNPREDICTABLE>
    78cc:	000016cb 	andeq	r1, r0, fp, asr #13
    78d0:	1a170301 	bne	5c84dc <__RAM_SIZE+0x4c84dc>
    78d4:	000005e7 	andeq	r0, r0, r7, ror #11
    78d8:	00006d5b 	andeq	r6, r0, fp, asr sp
    78dc:	00006d57 	andeq	r6, r0, r7, asr sp
    78e0:	1a971a00 	bne	fe5ce0e8 <__StackTop+0xc64ce0e8>
    78e4:	74010000 	strvc	r0, [r1], #-0
    78e8:	2c010816 	stccs	8, cr0, [r1], {22}
    78ec:	6410002b 	ldrvs	r0, [r0], #-43	; 0xffffffd5
    78f0:	7a10002b 	bvc	4079a4 <__RAM_SIZE+0x3079a4>
    78f4:	0100006d 	tsteq	r0, sp, rrx
    78f8:	000017c5 	andeq	r1, r0, r5, asr #15
    78fc:	001e8c1b 	andseq	r8, lr, fp, lsl ip
    7900:	16740100 	ldrbtne	r0, [r4], -r0, lsl #2
    7904:	00009f08 	andeq	r9, r0, r8, lsl #30
    7908:	006d9e00 	rsbeq	r9, sp, r0, lsl #28
    790c:	006d9a00 	rsbeq	r9, sp, r0, lsl #20
    7910:	06382300 	ldrteq	r2, [r8], -r0, lsl #6
    7914:	17b20000 	ldrne	r0, [r2, r0]!
    7918:	d3180000 	tstle	r8, #0
    791c:	01000015 	tsteq	r0, r5, lsl r0
    7920:	4a1816bd 	bmi	60d41c <__RAM_SIZE+0x50d41c>
    7924:	c5000001 	strgt	r0, [r0, #-1]
    7928:	bf00006d 	svclt	0x0000006d
    792c:	1d00006d 	stcne	0, cr0, [r0, #-436]	; 0xfffffe4c
    7930:	10002b34 	andne	r2, r0, r4, lsr fp
    7934:	000025df 	ldrdeq	r2, [r0], -pc	; <UNPREDICTABLE>
    7938:	002b4e1d 	eoreq	r4, fp, sp, lsl lr
    793c:	00262810 	eoreq	r2, r6, r0, lsl r8
    7940:	2b521d00 	blcs	148ed48 <__RAM_SIZE+0x138ed48>
    7944:	25df1000 	ldrbcs	r1, [pc]	; 794c <__HEAP_SIZE+0x694c>
    7948:	5a1d0000 	bpl	747950 <__RAM_SIZE+0x647950>
    794c:	5510002b 	ldrpl	r0, [r0, #-43]	; 0xffffffd5
    7950:	1d000038 	stcne	0, cr0, [r0, #-224]	; 0xffffff20
    7954:	10002b5e 	andne	r2, r0, lr, asr fp
    7958:	000024cf 	andeq	r2, r0, pc, asr #9
    795c:	2b3c1d00 	blcs	f0ed64 <__RAM_SIZE+0xe0ed64>
    7960:	15cb1000 	strbne	r1, [fp]
    7964:	481d0000 	ldmdami	sp, {}	; <UNPREDICTABLE>
    7968:	2a10002b 	bcs	407a1c <__RAM_SIZE+0x307a1c>
    796c:	00000038 	andeq	r0, r0, r8, lsr r0
    7970:	123e0129 	eorsne	r0, lr, #1073741834	; 0x4000000a
    7974:	e3010000 	movw	r0, #4096	; 0x1000
    7978:	b8010615 	stmdalt	r1, {r0, r2, r4, r9, sl}
    797c:	c410002d 	ldrgt	r0, [r0], #-45	; 0xffffffd3
    7980:	0210002d 	andseq	r0, r0, #45	; 0x2d
    7984:	2101007d 	tstcs	r1, sp, ror r0
    7988:	0011b401 	andseq	fp, r1, r1, lsl #8
    798c:	159e0100 	ldrne	r0, [lr, #256]	; 0x100
    7990:	0119010c 	tsteq	r9, ip, lsl #2
    7994:	2d3c0000 	ldccs	0, cr0, [ip, #-0]
    7998:	2db81000 	ldccs	0, cr1, [r8]
    799c:	6dee1000 	stclvs	0, cr1, [lr]
    79a0:	92010000 	andls	r0, r1, #0
    79a4:	1b000018 	blne	7a0c <__HEAP_SIZE+0x6a0c>
    79a8:	00001c6c 	andeq	r1, r0, ip, ror #24
    79ac:	34159e01 	ldrcc	r9, [r5], #-3585	; 0xfffff1ff
    79b0:	00001898 	muleq	r0, r8, r8
    79b4:	00006e24 	andeq	r6, r0, r4, lsr #28
    79b8:	00006e0e 	andeq	r6, r0, lr, lsl #28
    79bc:	0020e81b 	eoreq	lr, r0, fp, lsl r8
    79c0:	159f0100 	ldrne	r0, [pc, #256]	; 7ac8 <__HEAP_SIZE+0x6ac8>
    79c4:	0018a335 	andseq	sl, r8, r5, lsr r3
    79c8:	006eb800 	rsbeq	fp, lr, r0, lsl #16
    79cc:	006eb400 	rsbeq	fp, lr, r0, lsl #8
    79d0:	1a211800 	bne	84d9d8 <__RAM_SIZE+0x74d9d8>
    79d4:	a1010000 	mrsge	r0, (UNDEF: 1)
    79d8:	01191015 	tsteq	r9, r5, lsl r0
    79dc:	6ee00000 	cdpvs	0, 14, cr0, cr0, cr0, {0}
    79e0:	6ed60000 	cdpvs	0, 13, cr0, cr6, cr0, {0}
    79e4:	10230000 	eorne	r0, r3, r0
    79e8:	7f000007 	svcvc	0x00000007
    79ec:	18000018 	stmdane	r0, {r3, r4}
    79f0:	0000197f 	andeq	r1, r0, pc, ror r9
    79f4:	1a15ab01 	bne	572600 <__RAM_SIZE+0x472600>
    79f8:	0000015b 	andeq	r0, r0, fp, asr r1
    79fc:	00006f29 	andeq	r6, r0, r9, lsr #30
    7a00:	00006f23 	andeq	r6, r0, r3, lsr #30
    7a04:	0017d518 	andseq	sp, r7, r8, lsl r5
    7a08:	15ac0100 	strne	r0, [ip, #256]!	; 0x100
    7a0c:	00015b1a 	andeq	r5, r1, sl, lsl fp
    7a10:	006f5800 	rsbeq	r5, pc, r0, lsl #16
    7a14:	006f5200 	rsbeq	r5, pc, r0, lsl #4
    7a18:	2da22000 	stccs	0, cr2, [r2]
    7a1c:	18a81000 	stmiane	r8!, {ip}
    7a20:	011f0000 	tsteq	pc, r0
    7a24:	00740250 	rsbseq	r0, r4, r0, asr r2
    7a28:	461d0000 	ldrmi	r0, [sp], -r0
    7a2c:	f210002d 	vhadd.s16	d0, d0, d29
    7a30:	1d000037 	stcne	0, cr0, [r0, #-220]	; 0xffffff24
    7a34:	10002d68 	andne	r2, r0, r8, ror #26
    7a38:	00003800 	andeq	r3, r0, r0, lsl #16
    7a3c:	63040700 	movwvs	r0, #18176	; 0x4700
    7a40:	03000005 	movweq	r0, #5
    7a44:	00001892 	muleq	r0, r2, r8
    7a48:	014a0407 	cmpeq	sl, r7, lsl #8
    7a4c:	9d030000 	stcls	0, cr0, [r3, #-0]
    7a50:	17000018 	smladne	r0, r8, r0, r0
    7a54:	00103501 	andseq	r3, r0, r1, lsl #10
    7a58:	15920100 	ldrne	r0, [r2, #256]	; 0x100
    7a5c:	2d240106 	stfcss	f0, [r4, #-24]!	; 0xffffffe8
    7a60:	2d3c1000 	ldccs	0, cr1, [ip, #-0]
    7a64:	7d021000 	stcvc	0, cr1, [r2, #-0]
    7a68:	18d30100 	ldmne	r3, {r8}^
    7a6c:	6c190000 	ldcvs	0, cr0, [r9], {-0}
    7a70:	0100001c 	tsteq	r0, ip, lsl r0
    7a74:	98361592 	ldmdals	r6!, {r1, r4, r7, r8, sl, ip}
    7a78:	01000018 	tsteq	r0, r8, lsl r0
    7a7c:	01220050 	qsubeq	r0, r0, r2
    7a80:	00001613 	andeq	r1, r0, r3, lsl r6
    7a84:	06158201 	ldreq	r8, [r5], -r1, lsl #4
    7a88:	00000001 	andeq	r0, r0, r1
    7a8c:	00000000 	andeq	r0, r0, r0
    7a90:	006f8100 	rsbeq	r8, pc, r0, lsl #2
    7a94:	19170100 	ldmdbne	r7, {r8}
    7a98:	6c1b0000 	ldcvs	0, cr0, [fp], {-0}
    7a9c:	0100001c 	tsteq	r0, ip, lsl r0
    7aa0:	982e1582 	stmdals	lr!, {r1, r7, r8, sl, ip}
    7aa4:	a7000018 	smladge	r0, r8, r0, r0
    7aa8:	a100006f 	tstge	r0, pc, rrx
    7aac:	1d00006f 	stcne	0, cr0, [r0, #-444]	; 0xfffffe44
    7ab0:	00000000 	andeq	r0, r0, r0
    7ab4:	000037f2 	strdeq	r3, [r0], -r2
    7ab8:	0000001d 	andeq	r0, r0, sp, lsl r0
    7abc:	00380000 	eorseq	r0, r8, r0
    7ac0:	01220000 			; <UNDEFINED> instruction: 0x01220000
    7ac4:	00001a29 	andeq	r1, r0, r9, lsr #20
    7ac8:	06153a01 	ldreq	r3, [r5], -r1, lsl #20
    7acc:	00000001 	andeq	r0, r0, r1
    7ad0:	00000000 	andeq	r0, r0, r0
    7ad4:	006fd300 	rsbeq	sp, pc, r0, lsl #6
    7ad8:	19dd0100 	ldmibne	sp, {r8}^
    7adc:	6b1b0000 	blvs	6c7ae4 <__RAM_SIZE+0x5c7ae4>
    7ae0:	01000021 	tsteq	r0, r1, lsr #32
    7ae4:	8b36153a 	blhi	d8cfd4 <__RAM_SIZE+0xc8cfd4>
    7ae8:	fb000003 	blx	7afe <__HEAP_SIZE+0x6afe>
    7aec:	f300006f 	vhadd.u8	q0, q0, <illegal reg q15.5>
    7af0:	1b00006f 	blne	7cb4 <__HEAP_SIZE+0x6cb4>
    7af4:	00000933 	andeq	r0, r0, r3, lsr r9
    7af8:	3a153b01 	bcc	556704 <__RAM_SIZE+0x456704>
    7afc:	0000015b 	andeq	r0, r0, fp, asr r1
    7b00:	00007039 	andeq	r7, r0, r9, lsr r0
    7b04:	00007035 	andeq	r7, r0, r5, lsr r0
    7b08:	0017a618 	andseq	sl, r7, r8, lsl r6
    7b0c:	153d0100 	ldrne	r0, [sp, #-256]!	; 0xffffff00
    7b10:	0006660d 	andeq	r6, r6, sp, lsl #12
    7b14:	00705c00 	rsbseq	r5, r0, r0, lsl #24
    7b18:	00705a00 	rsbseq	r5, r0, r0, lsl #20
    7b1c:	06e02300 	strbteq	r2, [r0], r0, lsl #6
    7b20:	19910000 	ldmibne	r1, {}	; <UNPREDICTABLE>
    7b24:	17180000 	ldrne	r0, [r8, -r0]
    7b28:	0100000a 	tsteq	r0, sl
    7b2c:	dd05154f 	cfstr32le	mvfx1, [r5, #-316]	; 0xfffffec4
    7b30:	73000006 	movwvc	r0, #6
    7b34:	6f000070 	svcvs	0x00000070
    7b38:	00000070 	andeq	r0, r0, r0, ror r0
    7b3c:	0006f823 	andeq	pc, r6, r3, lsr #16
    7b40:	0019b000 	andseq	fp, r9, r0
    7b44:	0a171800 	beq	5cdb4c <__RAM_SIZE+0x4cdb4c>
    7b48:	62010000 	andvs	r0, r1, #0
    7b4c:	06dd0515 			; <UNDEFINED> instruction: 0x06dd0515
    7b50:	70950000 	addsvc	r0, r5, r0
    7b54:	70910000 	addsvc	r0, r1, r0
    7b58:	1c000000 	stcne	0, cr0, [r0], {-0}
	...
    7b64:	000019d3 	ldrdeq	r1, [r0], -r3
    7b68:	0009e318 	andeq	lr, r9, r8, lsl r3
    7b6c:	15630100 	strbne	r0, [r3, #-256]!	; 0xffffff00
    7b70:	00039105 	andeq	r9, r3, r5, lsl #2
    7b74:	0070b500 	rsbseq	fp, r0, r0, lsl #10
    7b78:	0070b300 	rsbseq	fp, r0, r0, lsl #6
    7b7c:	001d0000 	andseq	r0, sp, r0
    7b80:	91000000 	mrsls	r0, (UNDEF: 0)
    7b84:	00000014 	andeq	r0, r0, r4, lsl r0
    7b88:	13cc0121 	bicne	r0, ip, #1073741832	; 0x40000008
    7b8c:	dd010000 	stcle	0, cr0, [r1, #-0]
    7b90:	19010c14 	stmdbne	r1, {r2, r4, sl, fp}
    7b94:	40000001 	andmi	r0, r0, r1
    7b98:	2410002c 	ldrcs	r0, [r0], #-44	; 0xffffffd4
    7b9c:	c810002d 	ldmdagt	r0, {r0, r2, r3, r5}
    7ba0:	01000070 	tsteq	r0, r0, ror r0
    7ba4:	00001aca 	andeq	r1, r0, sl, asr #21
    7ba8:	0015491b 	andseq	r4, r5, fp, lsl r9
    7bac:	14dd0100 	ldrbne	r0, [sp], #256	; 0x100
    7bb0:	001ad03b 	andseq	sp, sl, fp, lsr r0
    7bb4:	0070f000 	rsbseq	pc, r0, r0
    7bb8:	0070e800 	rsbseq	lr, r0, r0, lsl #16
    7bbc:	17a61800 	strne	r1, [r6, r0, lsl #16]!
    7bc0:	df010000 	svcle	0x00010000
    7bc4:	06660d14 			; <UNDEFINED> instruction: 0x06660d14
    7bc8:	712c0000 			; <UNDEFINED> instruction: 0x712c0000
    7bcc:	712a0000 			; <UNDEFINED> instruction: 0x712a0000
    7bd0:	21180000 	tstcs	r8, r0
    7bd4:	0100001a 	tsteq	r0, sl, lsl r0
    7bd8:	191014e0 	ldmdbne	r0, {r5, r6, r7, sl, ip}
    7bdc:	43000001 	movwmi	r0, #1
    7be0:	3f000071 	svccc	0x00000071
    7be4:	23000071 	movwcs	r0, #113	; 0x71
    7be8:	000006b0 			; <UNDEFINED> instruction: 0x000006b0
    7bec:	00001a5b 	andeq	r1, r0, fp, asr sl
    7bf0:	000a1718 	andeq	r1, sl, r8, lsl r7
    7bf4:	14f60100 	ldrbtne	r0, [r6], #256	; 0x100
    7bf8:	0006dd05 	andeq	sp, r6, r5, lsl #26
    7bfc:	00716700 	rsbseq	r6, r1, r0, lsl #14
    7c00:	00716300 	rsbseq	r6, r1, r0, lsl #6
    7c04:	c8230000 	stmdagt	r3!, {}	; <UNPREDICTABLE>
    7c08:	7a000006 	bvc	7c28 <__HEAP_SIZE+0x6c28>
    7c0c:	1800001a 	stmdane	r0, {r1, r3, r4}
    7c10:	00000a17 	andeq	r0, r0, r7, lsl sl
    7c14:	0914fa01 	ldmdbeq	r4, {r0, r9, fp, ip, sp, lr, pc}
    7c18:	000006dd 	ldrdeq	r0, [r0], -sp
    7c1c:	00007189 	andeq	r7, r0, r9, lsl #3
    7c20:	00007185 	andeq	r7, r0, r5, lsl #3
    7c24:	2c9a1c00 	ldccs	12, cr1, [sl], {0}
    7c28:	2cca1000 	stclcs	0, cr1, [sl], {0}
    7c2c:	1a9d1000 	bne	fe74bc34 <__StackTop+0xc664bc34>
    7c30:	e3180000 	tst	r8, #0
    7c34:	01000009 	tsteq	r0, r9
    7c38:	910914fb 	strdls	r1, [r9, -fp]
    7c3c:	a9000003 	stmdbge	r0, {r0, r1}
    7c40:	a7000071 	smlsdxge	r0, r1, r0, r0
    7c44:	00000071 	andeq	r0, r0, r1, ror r0
    7c48:	002cee1c 	eoreq	lr, ip, ip, lsl lr
    7c4c:	002d0610 	eoreq	r0, sp, r0, lsl r6
    7c50:	001ac010 	andseq	ip, sl, r0, lsl r0
    7c54:	09e31800 	stmibeq	r3!, {fp, ip}^
    7c58:	0f010000 	svceq	0x00010000
    7c5c:	03910915 	orrseq	r0, r1, #344064	; 0x54000
    7c60:	71be0000 			; <UNDEFINED> instruction: 0x71be0000
    7c64:	71bc0000 			; <UNDEFINED> instruction: 0x71bc0000
    7c68:	1d000000 	stcne	0, cr0, [r0, #-0]
    7c6c:	10002cce 	andne	r2, r0, lr, asr #25
    7c70:	00001491 	muleq	r0, r1, r4
    7c74:	a2040700 	andge	r0, r4, #0, 14
    7c78:	03000003 	movweq	r0, #3
    7c7c:	00001aca 	andeq	r1, r0, sl, asr #21
    7c80:	0f280122 	svceq	0x00280122
    7c84:	b8010000 	stmdalt	r1, {}	; <UNPREDICTABLE>
    7c88:	04010a14 	streq	r0, [r1], #-2580	; 0xfffff5ec
    7c8c:	4010002c 	andsmi	r0, r0, ip, lsr #32
    7c90:	d110002c 	tstle	r0, ip, lsr #32
    7c94:	01000071 	tsteq	r0, r1, ror r0
    7c98:	00001b5d 	andeq	r1, r0, sp, asr fp
    7c9c:	0015491b 	andseq	r4, r5, fp, lsl r9
    7ca0:	14b80100 	ldrtne	r0, [r8], #256	; 0x100
    7ca4:	0006dd3a 	andeq	sp, r6, sl, lsr sp
    7ca8:	0071f700 	rsbseq	pc, r1, r0, lsl #14
    7cac:	0071f100 	rsbseq	pc, r1, r0, lsl #2
    7cb0:	20e91b00 	rsccs	r1, r9, r0, lsl #22
    7cb4:	b9010000 	stmdblt	r1, {}	; <UNPREDICTABLE>
    7cb8:	014a3614 	cmpeq	sl, r4, lsl r6
    7cbc:	72270000 	eorvc	r0, r7, #0
    7cc0:	72230000 	eorvc	r0, r3, #0
    7cc4:	871b0000 	ldrhi	r0, [fp, -r0]
    7cc8:	0100000b 	tsteq	r0, fp
    7ccc:	2a3c14ba 	bcs	f0cfbc <__RAM_SIZE+0xe0cfbc>
    7cd0:	49000001 	stmdbmi	r0, {r0}
    7cd4:	45000072 	strmi	r0, [r0, #-114]	; 0xffffff8e
    7cd8:	1c000072 	stcne	0, cr0, [r0], {114}	; 0x72
    7cdc:	10002c0a 	andne	r2, r0, sl, lsl #24
    7ce0:	10002c2e 	andne	r2, r0, lr, lsr #24
    7ce4:	00001b53 	andeq	r1, r0, r3, asr fp
    7ce8:	0009e318 	andeq	lr, r9, r8, lsl r3
    7cec:	14ca0100 	strbne	r0, [sl], #256	; 0x100
    7cf0:	00039109 	andeq	r9, r3, r9, lsl #2
    7cf4:	00726c00 	rsbseq	r6, r2, r0, lsl #24
    7cf8:	00726a00 	rsbseq	r6, r2, r0, lsl #20
    7cfc:	3a1d0000 	bcc	747d04 <__RAM_SIZE+0x647d04>
    7d00:	8610002c 	ldrhi	r0, [r0], -ip, lsr #32
    7d04:	00000009 	andeq	r0, r0, r9
    7d08:	14300122 	ldrtne	r0, [r0], #-290	; 0xfffffede
    7d0c:	98010000 	stmdals	r1, {}	; <UNPREDICTABLE>
    7d10:	00010614 	andeq	r0, r1, r4, lsl r6
    7d14:	00000000 	andeq	r0, r0, r0
    7d18:	7f000000 	svcvc	0x00000000
    7d1c:	01000072 	tsteq	r0, r2, ror r0
    7d20:	00001bf2 	strdeq	r1, [r0], -r2
    7d24:	0015491b 	andseq	r4, r5, fp, lsl r9
    7d28:	14980100 	ldrne	r0, [r8], #256	; 0x100
    7d2c:	0006d22f 	andeq	sp, r6, pc, lsr #4
    7d30:	0072a500 	rsbseq	sl, r2, r0, lsl #10
    7d34:	00729f00 	rsbseq	r9, r2, r0, lsl #30
    7d38:	09331b00 	ldmdbeq	r3!, {r8, r9, fp, ip}
    7d3c:	99010000 	stmdbls	r1, {}	; <UNPREDICTABLE>
    7d40:	015b3714 	cmpeq	fp, r4, lsl r7
    7d44:	72d50000 	sbcsvc	r0, r5, #0
    7d48:	72d10000 	sbcsvc	r0, r1, #0
    7d4c:	e91b0000 	ldmdb	fp, {}	; <UNPREDICTABLE>
    7d50:	01000020 	tsteq	r0, r0, lsr #32
    7d54:	5b37149a 	blpl	dccfc4 <__RAM_SIZE+0xcccfc4>
    7d58:	fa000001 	blx	7d64 <__HEAP_SIZE+0x6d64>
    7d5c:	f6000072 			; <UNDEFINED> instruction: 0xf6000072
    7d60:	1c000072 	stcne	0, cr0, [r0], {114}	; 0x72
	...
    7d6c:	00001bdb 	ldrdeq	r1, [r0], -fp
    7d70:	0009e318 	andeq	lr, r9, r8, lsl r3
    7d74:	14ae0100 	strtne	r0, [lr], #256	; 0x100
    7d78:	00039105 	andeq	r9, r3, r5, lsl #2
    7d7c:	00731d00 	rsbseq	r1, r3, r0, lsl #26
    7d80:	00731b00 	rsbseq	r1, r3, r0, lsl #22
    7d84:	00200000 	eoreq	r0, r0, r0
    7d88:	86000000 	strhi	r0, [r0], -r0
    7d8c:	1f000009 	svcne	0x00000009
    7d90:	f3035001 	vhadd.u8	d5, d3, d1
    7d94:	011f5201 	tsteq	pc, r1, lsl #4
    7d98:	00310151 	eorseq	r0, r1, r1, asr r1
    7d9c:	22012200 	andcs	r2, r1, #0, 4
    7da0:	0100000e 	tsteq	r0, lr
    7da4:	0106147b 	tsteq	r6, fp, ror r4
    7da8:	10002be8 	andne	r2, r0, r8, ror #23
    7dac:	10002c04 	andne	r2, r0, r4, lsl #24
    7db0:	00007330 	andeq	r7, r0, r0, lsr r3
    7db4:	001c6301 	andseq	r6, ip, r1, lsl #6
    7db8:	15491b00 	strbne	r1, [r9, #-2816]	; 0xfffff500
    7dbc:	7b010000 	blvc	47dc4 <__HEAP_SIZE+0x46dc4>
    7dc0:	06dd2c14 			; <UNDEFINED> instruction: 0x06dd2c14
    7dc4:	73540000 	cmpvc	r4, #0
    7dc8:	73500000 	cmpvc	r0, #0
    7dcc:	e91b0000 	ldmdb	fp, {}	; <UNPREDICTABLE>
    7dd0:	01000020 	tsteq	r0, r0, lsr #32
    7dd4:	5b2e147c 	blpl	b8cfcc <__RAM_SIZE+0xa8cfcc>
    7dd8:	7b000001 	blvc	7de4 <__HEAP_SIZE+0x6de4>
    7ddc:	75000073 	strvc	r0, [r0, #-115]	; 0xffffff8d
    7de0:	1e000073 	mcrne	0, 0, r0, cr0, cr3, {3}
    7de4:	10002bf6 	strdne	r2, [r0], -r6
    7de8:	000037e3 	andeq	r3, r0, r3, ror #15
    7dec:	00001c4d 	andeq	r1, r0, sp, asr #24
    7df0:	0350011f 	cmpeq	r0, #-1073741817	; 0xc0000007
    7df4:	005001f3 	ldrsheq	r0, [r0], #-19	; 0xffffffed
    7df8:	002bfe20 	eoreq	pc, fp, r0, lsr #28
    7dfc:	00098610 	andeq	r8, r9, r0, lsl r6
    7e00:	50011f00 	andpl	r1, r1, r0, lsl #30
    7e04:	1f007402 	svcne	0x00007402
    7e08:	31015101 	tstcc	r1, r1, lsl #2
    7e0c:	01170000 	tsteq	r7, r0
    7e10:	00001de8 	andeq	r1, r0, r8, ror #27
    7e14:	0a13c001 	beq	4f7e20 <__RAM_SIZE+0x3f7e20>
    7e18:	002b6401 	eoreq	r6, fp, r1, lsl #8
    7e1c:	002be810 	eoreq	lr, fp, r0, lsl r8
    7e20:	007d0210 	rsbseq	r0, sp, r0, lsl r2
    7e24:	001cb501 	andseq	fp, ip, r1, lsl #10
    7e28:	06502800 	ldrbeq	r2, [r0], -r0, lsl #16
    7e2c:	ff180000 			; <UNDEFINED> instruction: 0xff180000
    7e30:	01000020 	tsteq	r0, r0, lsr #32
    7e34:	2f0d13fa 	svccs	0x000d13fa
    7e38:	ad000001 	stcge	0, cr0, [r0, #-4]
    7e3c:	a7000073 	smlsdxge	r0, r3, r0, r0
    7e40:	28000073 	stmdacs	r0, {r0, r1, r4, r5, r6}
    7e44:	00000668 	andeq	r0, r0, r8, ror #12
    7e48:	00148518 	andseq	r8, r4, r8, lsl r5
    7e4c:	13fa0100 	mvnsne	r0, #0, 2
    7e50:	0006dd0d 	andeq	sp, r6, sp, lsl #26
    7e54:	0073e000 	rsbseq	lr, r3, r0
    7e58:	0073da00 	rsbseq	sp, r3, r0, lsl #20
    7e5c:	00000000 	andeq	r0, r0, r0
    7e60:	1dbb0121 	ldfnes	f0, [fp, #132]!	; 0x84
    7e64:	9c010000 	stcls	0, cr0, [r1], {-0}
    7e68:	19011013 	stmdbne	r1, {r0, r1, r4, ip}
    7e6c:	00000001 	andeq	r0, r0, r1
    7e70:	00000000 	andeq	r0, r0, r0
    7e74:	2b000000 	blcs	7e7c <__HEAP_SIZE+0x6e7c>
    7e78:	01000074 	tsteq	r0, r4, ror r0
    7e7c:	00001d37 	andeq	r1, r0, r7, lsr sp
    7e80:	001d5d1b 	andseq	r5, sp, fp, lsl sp
    7e84:	139c0100 	orrsne	r0, ip, #0, 2
    7e88:	0003a73b 	andeq	sl, r3, fp, lsr r7
    7e8c:	00744f00 	rsbseq	r4, r4, r0, lsl #30
    7e90:	00744b00 	rsbseq	r4, r4, r0, lsl #22
    7e94:	217b1b00 	cmncs	fp, r0, lsl #22
    7e98:	9d010000 	stcls	0, cr0, [r1, #-0]
    7e9c:	009f3513 	addseq	r3, pc, r3, lsl r5	; <UNPREDICTABLE>
    7ea0:	74730000 	ldrbtvc	r0, [r3], #-0
    7ea4:	746d0000 	strbtvc	r0, [sp], #-0
    7ea8:	cb180000 	blgt	607eb0 <__RAM_SIZE+0x507eb0>
    7eac:	01000022 	tsteq	r0, r2, lsr #32
    7eb0:	6611139f 			; <UNDEFINED> instruction: 0x6611139f
    7eb4:	a3000006 	movwge	r0, #6
    7eb8:	9f000074 	svcls	0x00000074
    7ebc:	18000074 	stmdane	r0, {r2, r4, r5, r6}
    7ec0:	00001a21 	andeq	r1, r0, r1, lsr #20
    7ec4:	1413a001 	ldrne	sl, [r3], #-1
    7ec8:	00000119 	andeq	r0, r0, r9, lsl r1
    7ecc:	000074c3 	andeq	r7, r0, r3, asr #9
    7ed0:	000074c1 	andeq	r7, r0, r1, asr #9
    7ed4:	0000002a 	andeq	r0, r0, sl, lsr #32
    7ed8:	50011f00 	andpl	r1, r1, r0, lsl #30
    7edc:	5101f303 	tstpl	r1, r3, lsl #6	; <UNPREDICTABLE>
    7ee0:	01210000 			; <UNDEFINED> instruction: 0x01210000
    7ee4:	0000238a 	andeq	r2, r0, sl, lsl #7
    7ee8:	18137c01 	ldmdane	r3, {r0, sl, fp, ip, sp, lr}
    7eec:	00049d01 	andeq	r9, r4, r1, lsl #26
	...
    7ef8:	0074d700 	rsbseq	sp, r4, r0, lsl #14
    7efc:	1dbe0100 	ldfnes	f0, [lr]
    7f00:	5d1b0000 	ldcpl	0, cr0, [fp, #-0]
    7f04:	0100001d 	tsteq	r0, sp, lsl r0
    7f08:	a748137c 	smlsldxge	r1, r8, ip, r3
    7f0c:	fb000003 	blx	7f22 <__HEAP_SIZE+0x6f22>
    7f10:	f7000074 			; <UNDEFINED> instruction: 0xf7000074
    7f14:	18000074 	stmdane	r0, {r2, r4, r5, r6}
    7f18:	000022ca 	andeq	r2, r0, sl, asr #5
    7f1c:	11137e01 	tstne	r3, r1, lsl #28
    7f20:	00000666 	andeq	r0, r0, r6, ror #12
    7f24:	0000751b 	andeq	r7, r0, fp, lsl r5
    7f28:	00007519 	andeq	r7, r0, r9, lsl r5
    7f2c:	001a2118 	andseq	r2, sl, r8, lsl r1
    7f30:	137f0100 	cmnne	pc, #0, 2
    7f34:	00049d1c 	andeq	r9, r4, ip, lsl sp
    7f38:	00753000 	rsbseq	r3, r5, r0
    7f3c:	00752e00 	rsbseq	r2, r5, r0, lsl #28
    7f40:	0c2e1800 	stceq	8, cr1, [lr], #-0
    7f44:	80010000 	andhi	r0, r1, r0
    7f48:	012f1513 			; <UNDEFINED> instruction: 0x012f1513
    7f4c:	75450000 	strbvc	r0, [r5, #-0]
    7f50:	75430000 	strbvc	r0, [r3, #-0]
    7f54:	001d0000 	andseq	r0, sp, r0
    7f58:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
    7f5c:	1d000038 	stcne	0, cr0, [r0, #-224]	; 0xffffff20
    7f60:	00000000 	andeq	r0, r0, r0
    7f64:	0000381c 	andeq	r3, r0, ip, lsl r8
    7f68:	6c012100 	stfvss	f2, [r1], {-0}
    7f6c:	01000018 	tsteq	r0, r8, lsl r0
    7f70:	01181360 	tsteq	r8, r0, ror #6
    7f74:	0000049d 	muleq	r0, sp, r4
	...
    7f80:	00007558 	andeq	r7, r0, r8, asr r5
    7f84:	001e3001 	andseq	r3, lr, r1
    7f88:	1d5d1b00 	vldrne	d17, [sp, #-0]
    7f8c:	60010000 	andvs	r0, r1, r0
    7f90:	03a74113 			; <UNDEFINED> instruction: 0x03a74113
    7f94:	757c0000 	ldrbvc	r0, [ip, #-0]!
    7f98:	75780000 	ldrbvc	r0, [r8, #-0]!
    7f9c:	ca180000 	bgt	607fa4 <__RAM_SIZE+0x507fa4>
    7fa0:	01000022 	tsteq	r0, r2, lsr #32
    7fa4:	66111362 	ldrvs	r1, [r1], -r2, ror #6
    7fa8:	9c000006 	stcls	0, cr0, [r0], {6}
    7fac:	9a000075 	bls	8188 <__HEAP_SIZE+0x7188>
    7fb0:	18000075 	stmdane	r0, {r0, r2, r4, r5, r6}
    7fb4:	00001a21 	andeq	r1, r0, r1, lsr #20
    7fb8:	1c136301 	ldcne	3, cr6, [r3], {1}
    7fbc:	0000049d 	muleq	r0, sp, r4
    7fc0:	000075b1 			; <UNDEFINED> instruction: 0x000075b1
    7fc4:	000075af 	andeq	r7, r0, pc, lsr #11
    7fc8:	0000001d 	andeq	r0, r0, sp, lsl r0
    7fcc:	0037f200 	eorseq	pc, r7, r0, lsl #4
    7fd0:	00001d00 	andeq	r1, r0, r0, lsl #26
    7fd4:	38000000 	stmdacc	r0, {}	; <UNPREDICTABLE>
    7fd8:	22000000 	andcs	r0, r0, #0
    7fdc:	0016f001 	andseq	pc, r6, r1
    7fe0:	133e0100 	teqne	lr, #0, 2
    7fe4:	0000010a 	andeq	r0, r0, sl, lsl #2
    7fe8:	00000000 	andeq	r0, r0, r0
    7fec:	75c40000 	strbvc	r0, [r4]
    7ff0:	9e010000 	cdpls	0, 0, cr0, cr1, cr0, {0}
    7ff4:	1b00001e 	blne	8074 <__HEAP_SIZE+0x7074>
    7ff8:	00001d5d 	andeq	r1, r0, sp, asr sp
    7ffc:	33133e01 	tstcc	r3, #1, 28
    8000:	000003a7 	andeq	r0, r0, r7, lsr #7
    8004:	000075e8 	andeq	r7, r0, r8, ror #11
    8008:	000075e4 	andeq	r7, r0, r4, ror #11
    800c:	001af51b 	andseq	pc, sl, fp, lsl r5	; <UNPREDICTABLE>
    8010:	133f0100 	teqne	pc, #0, 2
    8014:	00049d39 	andeq	r9, r4, r9, lsr sp
    8018:	00760c00 	rsbseq	r0, r6, r0, lsl #24
    801c:	00760600 	rsbseq	r0, r6, r0, lsl #12
    8020:	22cb1800 	sbccs	r1, fp, #0, 16
    8024:	41010000 	mrsmi	r0, (UNDEF: 1)
    8028:	06661113 			; <UNDEFINED> instruction: 0x06661113
    802c:	76390000 	ldrtvc	r0, [r9], -r0
    8030:	76350000 	ldrtvc	r0, [r5], -r0
    8034:	001d0000 	andseq	r0, sp, r0
    8038:	f2000000 	vhadd.s8	d0, d0, d0
    803c:	1d000037 	stcne	0, cr0, [r0, #-220]	; 0xffffff24
    8040:	00000000 	andeq	r0, r0, r0
    8044:	00003800 	andeq	r3, r0, r0, lsl #16
    8048:	e5012100 	str	r2, [r1, #-256]	; 0xffffff00
    804c:	01000018 	tsteq	r0, r8, lsl r0
    8050:	010c123e 	tsteq	ip, lr, lsr r2
    8054:	00000119 	andeq	r0, r0, r9, lsl r1
    8058:	1000287c 	andne	r2, r0, ip, ror r8
    805c:	100029dc 	ldrdne	r2, [r0], -ip
    8060:	00007657 	andeq	r7, r0, r7, asr r6
    8064:	001fa201 	andseq	sl, pc, r1, lsl #4
    8068:	22ca1800 	sbccs	r1, sl, #0, 16
    806c:	40010000 	andmi	r0, r1, r0
    8070:	06660d12 			; <UNDEFINED> instruction: 0x06660d12
    8074:	76950000 	ldrvc	r0, [r5], r0
    8078:	768f0000 	strvc	r0, [pc], r0
    807c:	33180000 	tstcc	r8, #0
    8080:	01000009 	tsteq	r0, r9
    8084:	4a101241 	bmi	40c990 <__RAM_SIZE+0x30c990>
    8088:	c4000001 	strgt	r0, [r0], #-1
    808c:	be000076 	mcrlt	0, 0, r0, cr0, cr6, {3}
    8090:	18000076 	stmdane	r0, {r1, r2, r4, r5, r6}
    8094:	00001ec2 	andeq	r1, r0, r2, asr #29
    8098:	10124201 	andsne	r4, r2, r1, lsl #4
    809c:	00000119 	andeq	r0, r0, r9, lsl r1
    80a0:	000076fc 	strdeq	r7, [r0], -ip
    80a4:	000076ee 	andeq	r7, r0, lr, ror #13
    80a8:	00054028 	andeq	r4, r5, r8, lsr #32
    80ac:	197f1800 	ldmdbne	pc!, {fp, ip}^	; <UNPREDICTABLE>
    80b0:	57010000 	strpl	r0, [r1, -r0]
    80b4:	015b1a12 	cmpeq	fp, r2, lsl sl
    80b8:	77590000 	ldrbvc	r0, [r9, -r0]
    80bc:	77550000 	ldrbvc	r0, [r5, -r0]
    80c0:	bc1c0000 	ldclt	0, cr0, [ip], {-0}
    80c4:	d4100028 	ldrle	r0, [r0], #-40	; 0xffffffd8
    80c8:	43100028 	tstmi	r0, #40	; 0x28
    80cc:	1800001f 	stmdane	r0, {r0, r1, r2, r3, r4}
    80d0:	000018b0 			; <UNDEFINED> instruction: 0x000018b0
    80d4:	0d125f01 	ldceq	15, cr5, [r2, #-4]
    80d8:	000006d2 	ldrdeq	r0, [r0], -r2
    80dc:	00007779 	andeq	r7, r0, r9, ror r7
    80e0:	00007777 	andeq	r7, r0, r7, ror r7
    80e4:	0028d41d 	eoreq	sp, r8, sp, lsl r4
    80e8:	00149110 	andseq	r9, r4, r0, lsl r1
    80ec:	70230000 	eorvc	r0, r3, r0
    80f0:	62000005 	andvs	r0, r0, #5
    80f4:	1800001f 	stmdane	r0, {r0, r1, r2, r3, r4}
    80f8:	00000a17 	andeq	r0, r0, r7, lsl sl
    80fc:	15129401 	ldrne	r9, [r2, #-1025]	; 0xfffffbff
    8100:	000006dd 	ldrdeq	r0, [r0], -sp
    8104:	00007790 	muleq	r0, r0, r7
    8108:	0000778c 	andeq	r7, r0, ip, lsl #15
    810c:	05882300 	streq	r2, [r8, #768]	; 0x300
    8110:	1f810000 	svcne	0x00810000
    8114:	17180000 	ldrne	r0, [r8, -r0]
    8118:	0100000a 	tsteq	r0, sl
    811c:	dd19129a 	lfmle	f1, 4, [r9, #-616]	; 0xfffffd98
    8120:	b2000006 	andlt	r0, r0, #6
    8124:	ae000077 	mcrge	0, 0, r0, cr0, cr7, {3}
    8128:	00000077 	andeq	r0, r0, r7, ror r0
    812c:	0029082b 	eoreq	r0, r9, fp, lsr #16
    8130:	00293c10 	eoreq	r3, r9, r0, lsl ip
    8134:	09e31810 	stmibeq	r3!, {r4, fp, ip}^
    8138:	a3010000 	movwge	r0, #4096	; 0x1000
    813c:	03911512 	orrseq	r1, r1, #75497472	; 0x4800000
    8140:	77d20000 	ldrbvc	r0, [r2, r0]
    8144:	77d00000 	ldrbvc	r0, [r0, r0]
    8148:	00000000 	andeq	r0, r0, r0
    814c:	67012100 	strvs	r2, [r1, -r0, lsl #2]
    8150:	0100001f 	tsteq	r0, pc, lsl r0
    8154:	011011e0 	tsteq	r0, r0, ror #3
    8158:	00000119 	andeq	r0, r0, r9, lsl r1
	...
    8164:	000077e5 	andeq	r7, r0, r5, ror #15
    8168:	00208501 	eoreq	r8, r0, r1, lsl #10
    816c:	1d5d1b00 	vldrne	d17, [sp, #-0]
    8170:	e0010000 	and	r0, r1, r0
    8174:	03a72e11 			; <UNDEFINED> instruction: 0x03a72e11
    8178:	78130000 	ldmdavc	r3, {}	; <UNPREDICTABLE>
    817c:	78050000 	stmdavc	r5, {}	; <UNPREDICTABLE>
    8180:	ca180000 	bgt	608188 <__RAM_SIZE+0x508188>
    8184:	01000022 	tsteq	r0, r2, lsr #32
    8188:	661111e2 	ldrvs	r1, [r1], -r2, ror #3
    818c:	7d000006 	stcvc	0, cr0, [r0, #-24]	; 0xffffffe8
    8190:	6f000078 	svcvs	0x00000078
    8194:	18000078 	stmdane	r0, {r3, r4, r5, r6}
    8198:	00001a21 	andeq	r1, r0, r1, lsr #20
    819c:	1411e301 	ldrne	lr, [r1], #-769	; 0xfffffcff
    81a0:	00000119 	andeq	r0, r0, r9, lsl r1
    81a4:	000078dd 	ldrdeq	r7, [r0], -sp
    81a8:	000078d9 	ldrdeq	r7, [r0], -r9
    81ac:	0000001c 	andeq	r0, r0, ip, lsl r0
    81b0:	00000000 	andeq	r0, r0, r0
    81b4:	00202400 	eoreq	r2, r0, r0, lsl #8
    81b8:	09e31800 	stmibeq	r3!, {fp, ip}^
    81bc:	0d010000 	stceq	0, cr0, [r1, #-0]
    81c0:	03911112 	orrseq	r1, r1, #-2147483644	; 0x80000004
    81c4:	78fe0000 	ldmvc	lr!, {}^	; <UNPREDICTABLE>
    81c8:	78fc0000 	ldmvc	ip!, {}^	; <UNPREDICTABLE>
    81cc:	1d000000 	stcne	0, cr0, [r0, #-0]
    81d0:	00000000 	andeq	r0, r0, r0
    81d4:	00002628 	andeq	r2, r0, r8, lsr #12
    81d8:	0000001e 	andeq	r0, r0, lr, lsl r0
    81dc:	002e1600 	eoreq	r1, lr, r0, lsl #12
    81e0:	00204100 	eoreq	r4, r0, r0, lsl #2
    81e4:	50011f00 	andpl	r1, r1, r0, lsl #30
    81e8:	00007402 	andeq	r7, r0, r2, lsl #8
    81ec:	0000001d 	andeq	r0, r0, sp, lsl r0
    81f0:	0024cf00 	eoreq	ip, r4, r0, lsl #30
    81f4:	00001e00 	andeq	r1, r0, r0, lsl #28
    81f8:	37d40000 	ldrbcc	r0, [r4, r0]
    81fc:	205e0000 	subscs	r0, lr, r0
    8200:	011f0000 	tsteq	pc, r0
    8204:	00750250 	rsbseq	r0, r5, r0, asr r2
    8208:	00001d00 	andeq	r1, r0, r0, lsl #26
    820c:	37f20000 	ldrbcc	r0, [r2, r0]!
    8210:	001e0000 	andseq	r0, lr, r0
    8214:	d4000000 	strle	r0, [r0], #-0
    8218:	7b000037 	blvc	82fc <__HEAP_SIZE+0x72fc>
    821c:	1f000020 	svcne	0x00000020
    8220:	74025001 	strvc	r5, [r2], #-1
    8224:	001d0018 	andseq	r0, sp, r8, lsl r0
    8228:	00000000 	andeq	r0, r0, r0
    822c:	00000038 	andeq	r0, r0, r8, lsr r0
    8230:	16ac0121 	strtne	r0, [ip], r1, lsr #2
    8234:	c2010000 	andgt	r0, r1, #0
    8238:	19010c11 	stmdbne	r1, {r0, r4, sl, fp}
    823c:	00000001 	andeq	r0, r0, r1
    8240:	00000000 	andeq	r0, r0, r0
    8244:	11000000 	mrsne	r0, (UNDEF: 0)
    8248:	01000079 	tsteq	r0, r9, ror r0
    824c:	000020f4 	strdeq	r2, [r0], -r4
    8250:	0021c51b 	eoreq	ip, r1, fp, lsl r5
    8254:	11c20100 	bicne	r0, r2, r0, lsl #2
    8258:	00014a2a 	andeq	r4, r1, sl, lsr #20
    825c:	00793700 	rsbseq	r3, r9, r0, lsl #14
    8260:	00793100 	rsbseq	r3, r9, r0, lsl #2
    8264:	1b651800 	blne	194e26c <__RAM_SIZE+0x184e26c>
    8268:	c4010000 	strgt	r0, [r1], #-0
    826c:	01191011 	tsteq	r9, r1, lsl r0
    8270:	79650000 	stmdbvc	r5!, {}^	; <UNPREDICTABLE>
    8274:	79630000 	stmdbvc	r3!, {}^	; <UNPREDICTABLE>
    8278:	001d0000 	andseq	r0, sp, r0
    827c:	28000000 	stmdacs	r0, {}	; <UNPREDICTABLE>
    8280:	1d000026 	stcne	0, cr0, [r0, #-152]	; 0xffffff68
    8284:	00000000 	andeq	r0, r0, r0
    8288:	000037f2 	strdeq	r3, [r0], -r2
    828c:	0000001d 	andeq	r0, r0, sp, lsl r0
    8290:	00380000 	eorseq	r0, r8, r0
    8294:	00001d00 	andeq	r1, r0, r0, lsl #26
    8298:	24cf0000 	strbcs	r0, [pc], #0	; 82a0 <__HEAP_SIZE+0x72a0>
    829c:	22000000 	andcs	r0, r0, #0
    82a0:	0018f801 	andseq	pc, r8, r1, lsl #16
    82a4:	11980100 	orrsne	r0, r8, r0, lsl #2
    82a8:	2840010a 	stmdacs	r0, {r1, r3, r8}^
    82ac:	287c1000 	ldmdacs	ip!, {ip}^
    82b0:	79781000 	ldmdbvc	r8!, {ip}^
    82b4:	4d010000 	stcmi	0, cr0, [r1, #-0]
    82b8:	1b000021 	blne	8344 <__HEAP_SIZE+0x7344>
    82bc:	00001cab 	andeq	r1, r0, fp, lsr #25
    82c0:	24119801 	ldrcs	r9, [r1], #-2049	; 0xfffff7ff
    82c4:	0000014a 	andeq	r0, r0, sl, asr #2
    82c8:	000079a0 	andeq	r7, r0, r0, lsr #19
    82cc:	00007998 	muleq	r0, r8, r9
    82d0:	00169a18 	andseq	r9, r6, r8, lsl sl
    82d4:	119a0100 	orrsne	r0, sl, r0, lsl #2
    82d8:	00014a14 	andeq	r4, r1, r4, lsl sl
    82dc:	0079d800 	rsbseq	sp, r9, r0, lsl #16
    82e0:	0079d400 	rsbseq	sp, r9, r0, lsl #8
    82e4:	28601d00 	stmdacs	r0!, {r8, sl, fp, ip}^
    82e8:	37f21000 	ldrbcc	r1, [r2, r0]!
    82ec:	6c1d0000 	ldcvs	0, cr0, [sp], {-0}
    82f0:	00100028 	andseq	r0, r0, r8, lsr #32
    82f4:	00000038 	andeq	r0, r0, r8, lsr r0
    82f8:	14910124 	ldrne	r0, [r1], #292	; 0x124
    82fc:	7f010000 	svcvc	0x00010000
    8300:	a7011211 	smladge	r1, r1, r2, r1
    8304:	00000003 	andeq	r0, r0, r3
    8308:	00000000 	andeq	r0, r0, r0
    830c:	02000000 	andeq	r0, r0, #0
    8310:	8201007d 	andhi	r0, r1, #125	; 0x7d
    8314:	1b000021 	blne	83a0 <__HEAP_SIZE+0x73a0>
    8318:	0000141d 	andeq	r1, r0, sp, lsl r4
    831c:	3c117f01 	ldccc	15, cr7, [r1], {1}
    8320:	00000119 	andeq	r0, r0, r9, lsl r1
    8324:	000079fa 	strdeq	r7, [r0], -sl
    8328:	000079f6 	strdeq	r7, [r0], -r6
    832c:	7a012c00 	bvc	53334 <__HEAP_SIZE+0x52334>
    8330:	01000022 	tsteq	r0, r2, lsr #32
    8334:	01161171 	tsteq	r6, r1, ror r1
    8338:	000003a7 	andeq	r0, r0, r7, lsr #7
	...
    8344:	01007d02 	tsteq	r0, r2, lsl #26
    8348:	1e160124 	mufnesp	f0, f6, f4
    834c:	eb010000 	bl	48354 <__HEAP_SIZE+0x47354>
    8350:	19011010 	stmdbne	r1, {r4, ip}
    8354:	00000001 	andeq	r0, r0, r1
    8358:	00000000 	andeq	r0, r0, r0
    835c:	02000000 	andeq	r0, r0, #0
    8360:	1a01007d 	bne	4855c <__HEAP_SIZE+0x4755c>
    8364:	1b000022 	blne	83f4 <__HEAP_SIZE+0x73f4>
    8368:	00001d5d 	andeq	r1, r0, sp, asr sp
    836c:	3410eb01 	ldrcc	lr, [r0], #-2817	; 0xfffff4ff
    8370:	000003a7 	andeq	r0, r0, r7, lsr #7
    8374:	00007a1f 	andeq	r7, r0, pc, lsl sl
    8378:	00007a1b 	andeq	r7, r0, fp, lsl sl
    837c:	001b2c19 	andseq	r2, fp, r9, lsl ip
    8380:	10ec0100 	rscne	r0, ip, r0, lsl #2
    8384:	0008fb36 	andeq	pc, r8, r6, lsr fp	; <UNPREDICTABLE>
    8388:	19510100 	ldmdbne	r1, {r8}^
    838c:	00001d20 	andeq	r1, r0, r0, lsr #26
    8390:	3710ed01 	ldrcc	lr, [r0, -r1, lsl #26]
    8394:	000008ea 	andeq	r0, r0, sl, ror #17
    8398:	21185201 	tstcs	r8, r1, lsl #4
    839c:	0100001a 	tsteq	r0, sl, lsl r0
    83a0:	191410ef 	ldmdbne	r4, {r0, r1, r2, r3, r5, r6, r7, ip}
    83a4:	43000001 	movwmi	r0, #1
    83a8:	3d00007a 	stccc	0, cr0, [r0, #-488]	; 0xfffffe18
    83ac:	1800007a 	stmdane	r0, {r1, r3, r4, r5, r6}
    83b0:	000022ca 	andeq	r2, r0, sl, asr #5
    83b4:	1110f001 	tstne	r0, r1	; <UNPREDICTABLE>
    83b8:	00000666 	andeq	r0, r0, r6, ror #12
    83bc:	00007a73 	andeq	r7, r0, r3, ror sl
    83c0:	00007a6f 	andeq	r7, r0, pc, ror #20
    83c4:	21012100 	mrscs	r2, (UNDEF: 17)
    83c8:	01000019 	tsteq	r0, r9, lsl r0
    83cc:	011210a7 	tsteq	r2, r7, lsr #1
    83d0:	000003a7 	andeq	r0, r0, r7, lsr #7
	...
    83dc:	00007a91 	muleq	r0, r1, sl
    83e0:	00231101 	eoreq	r1, r3, r1, lsl #2
    83e4:	204d1b00 	subcs	r1, sp, r0, lsl #22
    83e8:	a7010000 	strge	r0, [r1, -r0]
    83ec:	00b82f10 	adcseq	r2, r8, r0, lsl pc
    83f0:	7ab50000 	bvc	fed483f8 <__StackTop+0xc6c483f8>
    83f4:	7ab10000 	bvc	fec483fc <__StackTop+0xc6b483fc>
    83f8:	45180000 	ldrmi	r0, [r8, #-0]
    83fc:	0100001b 	tsteq	r0, fp, lsl r0
    8400:	2f1510a9 	svccs	0x001510a9
    8404:	d7000001 	strle	r0, [r0, -r1]
    8408:	d300007a 	movwle	r0, #122	; 0x7a
    840c:	1800007a 	stmdane	r0, {r1, r3, r4, r5, r6}
    8410:	000022ca 	andeq	r2, r0, sl, asr #5
    8414:	1110aa01 	tstne	r0, r1, lsl #20
    8418:	00000666 	andeq	r0, r0, r6, ror #12
    841c:	00007b0c 	andeq	r7, r0, ip, lsl #22
    8420:	00007af6 	strdeq	r7, [r0], -r6
    8424:	0000001d 	andeq	r0, r0, sp, lsl r0
    8428:	00262800 	eoreq	r2, r6, r0, lsl #16
    842c:	00001e00 	andeq	r1, r0, r0, lsl #28
    8430:	23110000 	tstcs	r1, #0
    8434:	22a90000 	adccs	r0, r9, #0
    8438:	011f0000 	tsteq	pc, r0
    843c:	00740f50 	rsbseq	r0, r4, r0, asr pc
    8440:	00742433 	rsbseq	r2, r4, r3, lsr r4
    8444:	0324321c 			; <UNDEFINED> instruction: 0x0324321c
    8448:	380085bc 	stmdacc	r0, {r2, r3, r4, r5, r7, r8, sl, pc}
    844c:	51011f22 	tstpl	r1, r2, lsr #30
    8450:	00007602 	andeq	r7, r0, r2, lsl #12
    8454:	0000001d 	andeq	r0, r0, sp, lsl r0
    8458:	0024cf00 	eoreq	ip, r4, r0, lsl #30
    845c:	00001e00 	andeq	r1, r0, r0, lsl #28
    8460:	23110000 	tstcs	r1, #0
    8464:	22c60000 	sbccs	r0, r6, #0
    8468:	011f0000 	tsteq	pc, r0
    846c:	00760251 	rsbseq	r0, r6, r1, asr r2
    8470:	00001e00 	andeq	r1, r0, r0, lsl #28
    8474:	23110000 	tstcs	r1, #0
    8478:	22da0000 	sbcscs	r0, sl, #0
    847c:	011f0000 	tsteq	pc, r0
    8480:	00760251 	rsbseq	r0, r6, r1, asr r2
    8484:	00001e00 	andeq	r1, r0, r0, lsl #28
    8488:	23110000 	tstcs	r1, #0
    848c:	22f70000 	rscscs	r0, r7, #0
    8490:	011f0000 	tsteq	pc, r0
    8494:	10030550 	andne	r0, r3, r0, asr r5
    8498:	1f38008b 	svcne	0x0038008b
    849c:	76025101 	strvc	r5, [r2], -r1, lsl #2
    84a0:	00200000 	eoreq	r0, r0, r0
    84a4:	11000000 	mrsne	r0, (UNDEF: 0)
    84a8:	1f000023 	svcne	0x00000023
    84ac:	03055001 	movweq	r5, #20481	; 0x5001
    84b0:	38008b2c 	stmdacc	r0, {r2, r3, r5, r8, r9, fp, pc}
    84b4:	0251011f 	subseq	r0, r1, #-1073741817	; 0xc0000007
    84b8:	00000076 	andeq	r0, r0, r6, ror r0
    84bc:	001aa32d 	andseq	sl, sl, sp, lsr #6
    84c0:	105e0100 	subsne	r0, lr, r0, lsl #2
    84c4:	06660114 			; <UNDEFINED> instruction: 0x06660114
	...
    84d0:	7b8d0000 	blvc	fe3484d8 <__StackTop+0xc62484d8>
    84d4:	ec010000 	stc	0, cr0, [r1], {-0}
    84d8:	1b000023 	blne	856c <__HEAP_SIZE+0x756c>
    84dc:	00000a17 	andeq	r0, r0, r7, lsl sl
    84e0:	3f105e01 	svccc	0x00105e01
    84e4:	000006d2 	ldrdeq	r0, [r0], -r2
    84e8:	00007bb5 			; <UNDEFINED> instruction: 0x00007bb5
    84ec:	00007bad 	andeq	r7, r0, sp, lsr #23
    84f0:	00204d1b 	eoreq	r4, r0, fp, lsl sp
    84f4:	105f0100 	subsne	r0, pc, r0, lsl #2
    84f8:	0000b841 	andeq	fp, r0, r1, asr #16
    84fc:	007bf500 	rsbseq	pc, fp, r0, lsl #10
    8500:	007bed00 	rsbseq	lr, fp, r0, lsl #26
    8504:	1a201800 	bne	80e50c <__RAM_SIZE+0x70e50c>
    8508:	61010000 	mrsvs	r0, (UNDEF: 1)
    850c:	06661110 			; <UNDEFINED> instruction: 0x06661110
    8510:	7c320000 	ldcvc	0, cr0, [r2], #-0
    8514:	7c2c0000 	stcvc	0, cr0, [ip], #-0
    8518:	ca180000 	bgt	608520 <__RAM_SIZE+0x508520>
    851c:	01000022 	tsteq	r0, r2, lsr #32
    8520:	66111062 	ldrvs	r1, [r1], -r2, rrx
    8524:	65000006 	strvs	r0, [r0, #-6]
    8528:	5d00007c 	stcpl	0, cr0, [r0, #-496]	; 0xfffffe10
    852c:	2e00007c 	mcrcs	0, 0, r0, cr0, cr12, {3}
    8530:	63010078 	movwvs	r0, #4216	; 0x1078
    8534:	012f1510 			; <UNDEFINED> instruction: 0x012f1510
    8538:	7ca10000 	stcvc	0, cr0, [r1]
    853c:	7c9b0000 	ldcvc	0, cr0, [fp], {0}
    8540:	63180000 	tstvs	r8, #0
    8544:	0100001e 	tsteq	r0, lr, lsl r0
    8548:	ac0e1064 	stcge	0, cr1, [lr], {100}	; 0x64
    854c:	cf000000 	svcgt	0x00000000
    8550:	cb00007c 	blgt	8748 <__HEAP_SIZE+0x7748>
    8554:	1800007c 	stmdane	r0, {r2, r3, r4, r5, r6}
    8558:	00001e0b 	andeq	r1, r0, fp, lsl #28
    855c:	14106501 	ldrne	r6, [r0], #-1281	; 0xfffffaff
    8560:	00000119 	andeq	r0, r0, r9, lsl r1
    8564:	00007cf1 	strdeq	r7, [r0], -r1
    8568:	00007ced 	andeq	r7, r0, sp, ror #25
    856c:	001d2e18 	andseq	r2, sp, r8, lsl lr
    8570:	10660100 	rsbne	r0, r6, r0, lsl #2
    8574:	0023ec1c 	eoreq	lr, r3, ip, lsl ip
    8578:	007d1500 	rsbseq	r1, sp, r0, lsl #10
    857c:	007d1100 	rsbseq	r1, sp, r0, lsl #2
    8580:	09d81800 	ldmibeq	r8, {fp, ip}^
    8584:	67010000 	strvs	r0, [r1, -r0]
    8588:	038b1610 	orreq	r1, fp, #16, 12	; 0x1000000
    858c:	7d370000 	ldcvc	0, cr0, [r7, #-0]
    8590:	7d350000 	ldcvc	0, cr0, [r5, #-0]
    8594:	07000000 	streq	r0, [r0, -r0]
    8598:	00037a04 	andeq	r7, r3, r4, lsl #20
    859c:	19012400 	stmdbne	r1, {sl, sp}
    85a0:	01000020 	tsteq	r0, r0, lsr #32
    85a4:	0108104c 	tsteq	r8, ip, asr #32
    85a8:	000000a6 	andeq	r0, r0, r6, lsr #1
	...
    85b4:	01007d02 	tsteq	r0, r2, lsl #26
    85b8:	0000243c 	andeq	r2, r0, ip, lsr r4
    85bc:	001d6d1b 	andseq	r6, sp, fp, lsl sp
    85c0:	104c0100 	subne	r0, ip, r0, lsl #2
    85c4:	0003a724 	andeq	sl, r3, r4, lsr #14
    85c8:	007d4e00 	rsbseq	r4, sp, r0, lsl #28
    85cc:	007d4a00 	rsbseq	r4, sp, r0, lsl #20
    85d0:	22ca1800 	sbccs	r1, sl, #0, 16
    85d4:	4e010000 	cdpmi	0, 0, cr0, cr1, cr0, {0}
    85d8:	06660d10 			; <UNDEFINED> instruction: 0x06660d10
    85dc:	7d6e0000 	stclvc	0, cr0, [lr, #-0]
    85e0:	7d6c0000 	stclvc	0, cr0, [ip, #-0]
    85e4:	2c000000 	stccs	0, cr0, [r0], {-0}
    85e8:	000d0d01 	andeq	r0, sp, r1, lsl #26
    85ec:	10400100 	subne	r0, r0, r0, lsl #2
    85f0:	012f010d 			; <UNDEFINED> instruction: 0x012f010d
    85f4:	28340000 	ldmdacs	r4!, {}	; <UNPREDICTABLE>
    85f8:	28401000 	stmdacs	r0, {ip}^
    85fc:	7d021000 	stcvc	0, cr1, [r2, #-0]
    8600:	01240100 			; <UNDEFINED> instruction: 0x01240100
    8604:	00001805 	andeq	r1, r0, r5, lsl #16
    8608:	0c101d01 	ldceq	13, cr1, [r0], {1}
    860c:	00014a01 	andeq	r4, r1, r1, lsl #20
	...
    8618:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    861c:	00249a01 	eoreq	r9, r4, r1, lsl #20
    8620:	1a211800 	bne	84e628 <__RAM_SIZE+0x74e628>
    8624:	1f010000 	svcne	0x00010000
    8628:	014a1010 	cmpeq	sl, r0, lsl r0
    862c:	7d830000 	stcvc	0, cr0, [r3]
    8630:	7d810000 	stcvc	0, cr0, [r1]
    8634:	2e250000 	cdpcs	0, 2, cr0, cr5, cr0, {0}
    8638:	0100000c 	tsteq	r0, ip
    863c:	2f111020 	svccs	0x00111020
    8640:	00000001 	andeq	r0, r0, r1
    8644:	99012400 	stmdbls	r1, {sl, sp}
    8648:	0100001c 	tsteq	r0, ip, lsl r0
    864c:	010c100a 	tsteq	ip, sl
    8650:	0000014a 	andeq	r0, r0, sl, asr #2
    8654:	10002828 	andne	r2, r0, r8, lsr #16
    8658:	10002834 	andne	r2, r0, r4, lsr r8
    865c:	01007d02 	tsteq	r0, r2, lsl #26
    8660:	000024cf 	andeq	r2, r0, pc, asr #9
    8664:	00202718 	eoreq	r2, r0, r8, lsl r7
    8668:	100c0100 	andne	r0, ip, r0, lsl #2
    866c:	00014a10 	andeq	r4, r1, r0, lsl sl
    8670:	007d9800 	rsbseq	r9, sp, r0, lsl #16
    8674:	007d9600 	rsbseq	r9, sp, r0, lsl #12
    8678:	01210000 			; <UNDEFINED> instruction: 0x01210000
    867c:	0000117f 	andeq	r1, r0, pc, ror r1
    8680:	0c0f7401 	cfstrseq	mvf7, [pc], {1}
    8684:	00011901 	andeq	r1, r1, r1, lsl #18
    8688:	0029dc00 	eoreq	sp, r9, r0, lsl #24
    868c:	002b0c10 	eoreq	r0, fp, r0, lsl ip
    8690:	007dab10 	rsbseq	sl, sp, r0, lsl fp
    8694:	25df0100 	ldrbcs	r0, [pc, #256]	; 879c <__HEAP_SIZE+0x779c>
    8698:	ca180000 	bgt	6086a0 <__RAM_SIZE+0x5086a0>
    869c:	01000022 	tsteq	r0, r2, lsr #32
    86a0:	660d0f76 			; <UNDEFINED> instruction: 0x660d0f76
    86a4:	d7000006 	strle	r0, [r0, -r6]
    86a8:	cb00007d 	blgt	88a4 <__HEAP_SIZE+0x78a4>
    86ac:	1800007d 	stmdane	r0, {r0, r2, r3, r4, r5, r6}
    86b0:	0000215b 	andeq	r2, r0, fp, asr r1
    86b4:	100f7701 	andne	r7, pc, r1, lsl #14
    86b8:	00000119 	andeq	r0, r0, r9, lsl r1
    86bc:	00007e2e 	andeq	r7, r0, lr, lsr #28
    86c0:	00007e24 	andeq	r7, r0, r4, lsr #28
    86c4:	0005a023 	andeq	sl, r5, r3, lsr #32
    86c8:	0025cc00 	eoreq	ip, r5, r0, lsl #24
    86cc:	141d2500 	ldrne	r2, [sp], #-1280	; 0xfffffb00
    86d0:	86010000 	strhi	r0, [r1], -r0
    86d4:	0119180f 	tsteq	r9, pc, lsl #16
    86d8:	23000000 	movwcs	r0, #0
    86dc:	000005c8 	andeq	r0, r0, r8, asr #11
    86e0:	0000254f 	andeq	r2, r0, pc, asr #10
    86e4:	000a1718 	andeq	r1, sl, r8, lsl r7
    86e8:	0f9c0100 	svceq	0x009c0100
    86ec:	0006dd19 	andeq	sp, r6, r9, lsl sp
    86f0:	007e7400 	rsbseq	r7, lr, r0, lsl #8
    86f4:	007e7000 	rsbseq	r7, lr, r0
    86f8:	e0230000 	eor	r0, r3, r0
    86fc:	6e000005 	cdpvs	0, 0, cr0, cr0, cr5, {0}
    8700:	18000025 	stmdane	r0, {r0, r2, r5}
    8704:	00000a17 	andeq	r0, r0, r7, lsl sl
    8708:	190f9e01 	stmdbne	pc, {r0, r9, sl, fp, ip, pc}	; <UNPREDICTABLE>
    870c:	000006dd 	ldrdeq	r0, [r0], -sp
    8710:	00007e96 	muleq	r0, r6, lr
    8714:	00007e92 	muleq	r0, r2, lr
    8718:	2a621c00 	bcs	188f720 <__RAM_SIZE+0x178f720>
    871c:	2a921000 	bcs	fe48c724 <__StackTop+0xc638c724>
    8720:	25911000 	ldrcs	r1, [r1]
    8724:	e3180000 	tst	r8, #0
    8728:	01000009 	tsteq	r0, r9
    872c:	91190f9f 			; <UNDEFINED> instruction: 0x91190f9f
    8730:	b6000003 	strlt	r0, [r0], -r3
    8734:	b400007e 	strlt	r0, [r0], #-126	; 0xffffff82
    8738:	0000007e 	andeq	r0, r0, lr, ror r0
    873c:	0005f823 	andeq	pc, r5, r3, lsr #16
    8740:	0025b900 	eoreq	fp, r5, r0, lsl #18
    8744:	15b31800 	ldrne	r1, [r3, #2048]!	; 0x800
    8748:	cc010000 	stcgt	0, cr0, [r1], {-0}
    874c:	014a240f 	cmpeq	sl, pc, lsl #8
    8750:	7ed10000 	cdpvc	0, 13, cr0, cr1, cr0, {0}
    8754:	7ec90000 	cdpvc	0, 12, cr0, cr9, cr0, {0}
    8758:	cc1d0000 	ldcgt	0, cr0, [sp], {-0}
    875c:	9e10002a 	cdpls	0, 1, cr0, cr0, cr10, {1}
    8760:	0000001e 	andeq	r0, r0, lr, lsl r0
    8764:	002aac1d 	eoreq	sl, sl, sp, lsl ip
    8768:	00149110 	andseq	r9, r4, r0, lsl r1
    876c:	2ac01d00 	bcs	ff00fb74 <__StackTop+0xc6f0fb74>
    8770:	382a1000 	stmdacc	sl!, {ip}
    8774:	1d000000 	stcne	0, cr0, [r0, #-0]
    8778:	100029e2 	andne	r2, r0, r2, ror #19
    877c:	000037f2 	strdeq	r3, [r0], -r2
    8780:	002ae61d 	eoreq	lr, sl, sp, lsl r6
    8784:	00380010 	eorseq	r0, r8, r0, lsl r0
    8788:	cc270000 	stcgt	0, cr0, [r7], #-0
    878c:	01000019 	tsteq	r0, r9, lsl r0
    8790:	01170f36 	tsteq	r7, r6, lsr pc
    8794:	0000014a 	andeq	r0, r0, sl, asr #2
    8798:	100023dc 	ldrdne	r2, [r0], -ip
    879c:	1000241c 	andne	r2, r0, ip, lsl r4
    87a0:	01007d02 	tsteq	r0, r2, lsl #26
    87a4:	00002628 	andeq	r2, r0, r8, lsr #12
    87a8:	001a2118 	andseq	r2, sl, r8, lsl r1
    87ac:	0f380100 	svceq	0x00380100
    87b0:	00014a14 	andeq	r4, r1, r4, lsl sl
    87b4:	007f0b00 	rsbseq	r0, pc, r0, lsl #22
    87b8:	007f0700 	rsbseq	r0, pc, r0, lsl #14
    87bc:	17321800 	ldrne	r1, [r2, -r0, lsl #16]!
    87c0:	39010000 	stmdbcc	r1, {}	; <UNPREDICTABLE>
    87c4:	012f150f 			; <UNDEFINED> instruction: 0x012f150f
    87c8:	7f300000 	svcvc	0x00300000
    87cc:	7f2a0000 	svcvc	0x002a0000
    87d0:	29000000 	stmdbcs	r0, {}	; <UNPREDICTABLE>
    87d4:	000d2401 	andeq	r2, sp, r1, lsl #8
    87d8:	0ee30100 	cdpeq	1, 14, cr0, cr3, cr0, {0}
    87dc:	28180106 	ldmdacs	r8, {r1, r2, r8}
    87e0:	28281000 	stmdacs	r8!, {ip}
    87e4:	7d021000 	stcvc	0, cr1, [r2, #-0]
    87e8:	01220100 			; <UNDEFINED> instruction: 0x01220100
    87ec:	0000195b 	andeq	r1, r0, fp, asr r9
    87f0:	060eb801 	streq	fp, [lr], -r1, lsl #16
    87f4:	00000001 	andeq	r0, r0, r1
    87f8:	00000000 	andeq	r0, r0, r0
    87fc:	007f5a00 	rsbseq	r5, pc, r0, lsl #20
    8800:	26b10100 	ldrtcs	r0, [r1], r0, lsl #2
    8804:	28230000 	stmdacs	r3!, {}	; <UNPREDICTABLE>
    8808:	9e000005 	cdpls	0, 0, cr0, cr0, cr5, {0}
    880c:	18000026 	stmdane	r0, {r1, r2, r5}
    8810:	0000141d 	andeq	r1, r0, sp, lsl r4
    8814:	140ebe01 	strne	fp, [lr], #-3585	; 0xfffff1ff
    8818:	00000119 	andeq	r0, r0, r9, lsl r1
    881c:	00007f7e 	andeq	r7, r0, lr, ror pc
    8820:	00007f7a 	andeq	r7, r0, sl, ror pc
    8824:	0000001d 	andeq	r0, r0, sp, lsl r0
    8828:	00386400 	eorseq	r6, r8, r0, lsl #8
    882c:	00001d00 	andeq	r1, r0, r0, lsl #26
    8830:	30470000 	subcc	r0, r7, r0
    8834:	001d0000 	andseq	r0, sp, r0
    8838:	cb000000 	blgt	8840 <__HEAP_SIZE+0x7840>
    883c:	1d000015 	stcne	0, cr0, [r0, #-84]	; 0xffffffac
    8840:	00000000 	andeq	r0, r0, r0
    8844:	00003047 	andeq	r3, r0, r7, asr #32
    8848:	00001d00 	andeq	r1, r0, r0, lsl #26
    884c:	380e0000 	stmdacc	lr, {}	; <UNPREDICTABLE>
    8850:	001d0000 	andseq	r0, sp, r0
    8854:	73000000 	movwvc	r0, #0
    8858:	00000038 	andeq	r0, r0, r8, lsr r0
    885c:	013a0122 	teqeq	sl, r2, lsr #2
    8860:	51010000 	mrspl	r0, (UNDEF: 1)
    8864:	1001060e 	andne	r0, r1, lr, lsl #12
    8868:	5810002f 	ldmdapl	r0, {r0, r1, r2, r3, r5}
    886c:	9d10002f 	ldcls	0, cr0, [r0, #-188]	; 0xffffff44
    8870:	0100007f 	tsteq	r0, pc, ror r0
    8874:	00002707 	andeq	r2, r0, r7, lsl #14
    8878:	001a2118 	andseq	r2, sl, r8, lsl r1
    887c:	0e530100 	rdfeqs	f0, f3, f0
    8880:	00011910 	andeq	r1, r1, r0, lsl r9
    8884:	007fc300 	rsbseq	ip, pc, r0, lsl #6
    8888:	007fbd00 	rsbseq	fp, pc, r0, lsl #26
    888c:	2f161d00 	svccs	0x00161d00
    8890:	27071000 	strcs	r1, [r7, -r0]
    8894:	281d0000 	ldmdacs	sp, {}	; <UNPREDICTABLE>
    8898:	8110002f 	tsthi	r0, pc, lsr #32
    889c:	1d000038 	stcne	0, cr0, [r0, #-224]	; 0xffffff20
    88a0:	10002f2e 	andne	r2, r0, lr, lsr #30
    88a4:	0000380e 	andeq	r3, r0, lr, lsl #16
    88a8:	002f461d 	eoreq	r4, pc, sp, lsl r6	; <UNPREDICTABLE>
    88ac:	00389010 	eorseq	r9, r8, r0, lsl r0
    88b0:	0b2d0000 	bleq	b488b8 <__RAM_SIZE+0xa488b8>
    88b4:	0100001b 	tsteq	r0, fp, lsl r0
    88b8:	01130db7 			; <UNDEFINED> instruction: 0x01130db7
    88bc:	00000119 	andeq	r0, r0, r9, lsl r1
    88c0:	10002ea4 	andne	r2, r0, r4, lsr #29
    88c4:	10002f10 	andne	r2, r0, r0, lsl pc
    88c8:	00007fec 	andeq	r7, r0, ip, ror #31
    88cc:	00280701 	eoreq	r0, r8, r1, lsl #14
    88d0:	1a211800 	bne	84e8d8 <__RAM_SIZE+0x74e8d8>
    88d4:	b9010000 	stmdblt	r1, {}	; <UNPREDICTABLE>
    88d8:	0119100d 	tsteq	r9, sp
    88dc:	80360000 	eorshi	r0, r6, r0
    88e0:	80300000 	eorshi	r0, r0, r0
    88e4:	1d180000 	ldcne	0, cr0, [r8, #-0]
    88e8:	01000014 	tsteq	r0, r4, lsl r0
    88ec:	19100dba 	ldmdbne	r0, {r1, r3, r4, r5, r7, r8, sl, fp}
    88f0:	64000001 	strvs	r0, [r0], #-1
    88f4:	62000080 	andvs	r0, r0, #128	; 0x80
    88f8:	16000080 	strne	r0, [r0], -r0, lsl #1
    88fc:	00002213 	andeq	r2, r0, r3, lsl r2
    8900:	0a0dbb01 	beq	37750c <__RAM_SIZE+0x27750c>
    8904:	000005f9 	strdeq	r0, [r0], -r9
    8908:	186c9102 	stmdane	ip!, {r1, r8, ip, pc}^
    890c:	00001f35 	andeq	r1, r0, r5, lsr pc
    8910:	140dbc01 	strne	fp, [sp], #-3073	; 0xfffff3ff
    8914:	000000ea 	andeq	r0, r0, sl, ror #1
    8918:	00008079 	andeq	r8, r0, r9, ror r0
    891c:	00008077 	andeq	r8, r0, r7, ror r0
    8920:	00183318 	andseq	r3, r8, r8, lsl r3
    8924:	0dbd0100 	ldfeqs	f0, [sp]
    8928:	00011910 	andeq	r1, r1, r0, lsl r9
    892c:	00809100 	addeq	r9, r0, r0, lsl #2
    8930:	00808d00 	addeq	r8, r0, r0, lsl #26
    8934:	07702800 	ldrbeq	r2, [r0, -r0, lsl #16]!
    8938:	02160000 	andseq	r0, r6, #0
    893c:	0100001c 	tsteq	r0, ip, lsl r0
    8940:	f01c0e04 			; <UNDEFINED> instruction: 0xf01c0e04
    8944:	02000008 	andeq	r0, r0, #8
    8948:	50166091 	mulspl	r6, r1, r0
    894c:	01000014 	tsteq	r0, r4, lsl r0
    8950:	bb1b0e05 	bllt	6cc16c <__RAM_SIZE+0x5cc16c>
    8954:	02000005 	andeq	r0, r0, #5
    8958:	3b166491 	blcc	5a1ba4 <__RAM_SIZE+0x4a1ba4>
    895c:	0100001d 	tsteq	r0, sp, lsl r0
    8960:	29240e06 	stmdbcs	r4!, {r1, r2, r9, sl, fp}
    8964:	02000000 	andeq	r0, r0, #0
    8968:	de1e6891 	mrcle	8, 0, r6, cr14, cr1, {4}
    896c:	1710002e 	ldrne	r0, [r0, -lr, lsr #32]
    8970:	df000009 	svcle	0x00000009
    8974:	1f000027 	svcne	0x00000027
    8978:	91025001 	tstls	r2, r1
    897c:	51011f60 	tstpl	r1, r0, ror #30
    8980:	1f649102 	svcne	0x00649102
    8984:	91025201 	tstls	r2, r1, lsl #4
    8988:	f4200068 	vld4.16	{d0-d3}, [r0 :128], r8
    898c:	7e10002e 	cdpvc	0, 1, cr0, cr0, cr14, {1}
    8990:	1f000035 	svcne	0x00000035
    8994:	03055001 	movweq	r5, #20481	; 0x5001
    8998:	10002b2d 	andne	r2, r0, sp, lsr #22
    899c:	0251011f 	subseq	r0, r1, #-1073741817	; 0xc0000007
    89a0:	011f6c91 			; <UNDEFINED> instruction: 0x011f6c91
    89a4:	00750253 	rsbseq	r0, r5, r3, asr r2
    89a8:	007d021f 	rsbseq	r0, sp, pc, lsl r2
    89ac:	00007502 	andeq	r7, r0, r2, lsl #10
    89b0:	01210000 			; <UNDEFINED> instruction: 0x01210000
    89b4:	00001f77 	andeq	r1, r0, r7, ror pc
    89b8:	100d5601 	andne	r5, sp, r1, lsl #12
    89bc:	00011901 	andeq	r1, r1, r1, lsl #18
	...
    89c8:	0080b000 	addeq	fp, r0, r0
    89cc:	28fd0100 	ldmcs	sp!, {r8}^
    89d0:	d31b0000 	tstle	fp, #0
    89d4:	01000016 	tsteq	r0, r6, lsl r0
    89d8:	a7310d56 			; <UNDEFINED> instruction: 0xa7310d56
    89dc:	d4000003 	strle	r0, [r0], #-3
    89e0:	d0000080 	andle	r0, r0, r0, lsl #1
    89e4:	18000080 	stmdane	r0, {r7}
    89e8:	00000c67 	andeq	r0, r0, r7, ror #24
    89ec:	140d5801 	strne	r5, [sp], #-2049	; 0xfffff7ff
    89f0:	00000119 	andeq	r0, r0, r9, lsl r1
    89f4:	000080fa 	strdeq	r8, [r0], -sl
    89f8:	000080f2 	strdeq	r8, [r0], -r2
    89fc:	0022ca18 	eoreq	ip, r2, r8, lsl sl
    8a00:	0d590100 	ldfeqe	f0, [r9, #-0]
    8a04:	00067117 	andeq	r7, r6, r7, lsl r1
    8a08:	00813500 	addeq	r3, r1, r0, lsl #10
    8a0c:	00813100 	addeq	r3, r1, r0, lsl #2
    8a10:	0c2e1800 	stceq	8, cr1, [lr], #-0
    8a14:	5a010000 	bpl	48a1c <__HEAP_SIZE+0x47a1c>
    8a18:	012f150d 			; <UNDEFINED> instruction: 0x012f150d
    8a1c:	81570000 	cmphi	r7, r0
    8a20:	81530000 	cmphi	r3, r0
    8a24:	001c0000 	andseq	r0, ip, r0
    8a28:	00000000 	andeq	r0, r0, r0
    8a2c:	9e000000 	cdpls	0, 0, cr0, cr0, cr0, {0}
    8a30:	18000028 	stmdane	r0, {r3, r5}
    8a34:	000009e3 	andeq	r0, r0, r3, ror #19
    8a38:	150d9301 	strne	r9, [sp, #-769]	; 0xfffffcff
    8a3c:	00000391 	muleq	r0, r1, r3
    8a40:	00008177 	andeq	r8, r0, r7, ror r1
    8a44:	00008175 	andeq	r8, r0, r5, ror r1
    8a48:	00001d00 	andeq	r1, r0, r0, lsl #26
    8a4c:	380e0000 	stmdacc	lr, {}	; <UNPREDICTABLE>
    8a50:	001e0000 	andseq	r0, lr, r0
    8a54:	aa000000 	bge	8a5c <__HEAP_SIZE+0x7a5c>
    8a58:	bb000029 	bllt	8b04 <__HEAP_SIZE+0x7b04>
    8a5c:	1f000028 	svcne	0x00000028
    8a60:	74025001 	strvc	r5, [r2], #-1
    8a64:	001e0000 	andseq	r0, lr, r0
    8a68:	d4000000 	strle	r0, [r0], #-0
    8a6c:	cf000037 	svcgt	0x00000037
    8a70:	1f000028 	svcne	0x00000028
    8a74:	77025001 	strvc	r5, [r2, -r1]
    8a78:	001e0000 	andseq	r0, lr, r0
    8a7c:	1c000000 	stcne	0, cr0, [r0], {-0}
    8a80:	e3000038 	movw	r0, #56	; 0x38
    8a84:	1f000028 	svcne	0x00000028
    8a88:	75025001 	strvc	r5, [r2, #-1]
    8a8c:	00200000 	eoreq	r0, r0, r0
    8a90:	9e000000 	cdpls	0, 0, cr0, cr0, cr0, {0}
    8a94:	1f000038 	svcne	0x00000038
    8a98:	03055001 	movweq	r5, #20481	; 0x5001
    8a9c:	38008af0 	stmdacc	r0, {r4, r5, r6, r7, r9, fp, pc}
    8aa0:	0251011f 	subseq	r0, r1, #-1073741817	; 0xc0000007
    8aa4:	00001874 	andeq	r1, r0, r4, ror r8
    8aa8:	232b0122 			; <UNDEFINED> instruction: 0x232b0122
    8aac:	19010000 	stmdbne	r1, {}	; <UNPREDICTABLE>
    8ab0:	00010a0d 	andeq	r0, r1, sp, lsl #20
    8ab4:	00000000 	andeq	r0, r0, r0
    8ab8:	8a000000 	bhi	8ac0 <__HEAP_SIZE+0x7ac0>
    8abc:	01000081 	smlabbeq	r0, r1, r0, r0
    8ac0:	000029aa 	andeq	r2, r0, sl, lsr #19
    8ac4:	0016d31b 	andseq	sp, r6, fp, lsl r3
    8ac8:	0d190100 	ldfeqs	f0, [r9, #-0]
    8acc:	0003a724 	andeq	sl, r3, r4, lsr #14
    8ad0:	0081b200 	addeq	fp, r1, r0, lsl #4
    8ad4:	0081aa00 	addeq	sl, r1, r0, lsl #20
    8ad8:	22ca1800 	sbccs	r1, sl, #0, 16
    8adc:	1b010000 	blne	48ae4 <__HEAP_SIZE+0x47ae4>
    8ae0:	0671170d 	ldrbteq	r1, [r1], -sp, lsl #14
    8ae4:	81f10000 	mvnshi	r0, r0
    8ae8:	81e90000 	mvnhi	r0, r0
    8aec:	001c0000 	andseq	r0, ip, r0
    8af0:	00000000 	andeq	r0, r0, r0
    8af4:	66000000 	strvs	r0, [r0], -r0
    8af8:	18000029 	stmdane	r0, {r0, r3, r5}
    8afc:	000009e3 	andeq	r0, r0, r3, ror #19
    8b00:	150d3a01 	strne	r3, [sp, #-2561]	; 0xfffff5ff
    8b04:	00000391 	muleq	r0, r1, r3
    8b08:	0000822a 	andeq	r8, r0, sl, lsr #4
    8b0c:	00008228 	andeq	r8, r0, r8, lsr #4
    8b10:	00001d00 	andeq	r1, r0, r0, lsl #26
    8b14:	37f20000 	ldrbcc	r0, [r2, r0]!
    8b18:	001e0000 	andseq	r0, lr, r0
    8b1c:	aa000000 	bge	8b24 <__HEAP_SIZE+0x7b24>
    8b20:	83000029 	movwhi	r0, #41	; 0x29
    8b24:	1f000029 	svcne	0x00000029
    8b28:	74025001 	strvc	r5, [r2], #-1
    8b2c:	001d0000 	andseq	r0, sp, r0
    8b30:	00000000 	andeq	r0, r0, r0
    8b34:	1e000038 	mcrne	0, 0, r0, cr0, cr8, {1}
    8b38:	00000000 	andeq	r0, r0, r0
    8b3c:	000037d4 	ldrdeq	r3, [r0], -r4
    8b40:	000029a0 	andeq	r2, r0, r0, lsr #19
    8b44:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    8b48:	1d000075 	stcne	0, cr0, [r0, #-468]	; 0xfffffe2c
    8b4c:	00000000 	andeq	r0, r0, r0
    8b50:	0000382a 	andeq	r3, r0, sl, lsr #16
    8b54:	1eab2700 	cdpne	7, 10, cr2, cr11, cr0, {0}
    8b58:	d3010000 	movwle	r0, #4096	; 0x1000
    8b5c:	1901170c 	stmdbne	r1, {r2, r3, r8, r9, sl, ip}
    8b60:	00000001 	andeq	r0, r0, r1
    8b64:	00000000 	andeq	r0, r0, r0
    8b68:	02000000 	andeq	r0, r0, #0
    8b6c:	2501007d 	strcs	r0, [r1, #-125]	; 0xffffff83
    8b70:	1b00002a 	blne	8c20 <__HEAP_SIZE+0x7c20>
    8b74:	00001d5d 	andeq	r1, r0, sp, asr sp
    8b78:	420cd301 	andmi	sp, ip, #67108864	; 0x4000000
    8b7c:	000003b3 			; <UNDEFINED> instruction: 0x000003b3
    8b80:	00008251 	andeq	r8, r0, r1, asr r2
    8b84:	0000823d 	andeq	r8, r0, sp, lsr r2
    8b88:	001a2118 	andseq	r2, sl, r8, lsl r1
    8b8c:	0cd50100 	ldfeqe	f0, [r5], {0}
    8b90:	00011914 	andeq	r1, r1, r4, lsl r9
    8b94:	0082dc00 	addeq	sp, r2, r0, lsl #24
    8b98:	0082d600 	addeq	sp, r2, r0, lsl #12
    8b9c:	22ca1800 	sbccs	r1, sl, #0, 16
    8ba0:	d6010000 	strle	r0, [r1], -r0
    8ba4:	2a2b1d0c 	bcs	acffdc <__RAM_SIZE+0x9cffdc>
    8ba8:	831c0000 	tsthi	ip, #0
    8bac:	83080000 	movwhi	r0, #32768	; 0x8000
    8bb0:	002b0000 	eoreq	r0, fp, r0
    8bb4:	00000000 	andeq	r0, r0, r0
    8bb8:	2e000000 	cdpcs	0, 0, cr0, cr0, cr0, {0}
    8bbc:	ea010078 	b	48da4 <__HEAP_SIZE+0x47da4>
    8bc0:	0119240c 	tsteq	r9, ip, lsl #8
    8bc4:	83a50000 			; <UNDEFINED> instruction: 0x83a50000
    8bc8:	83a10000 			; <UNDEFINED> instruction: 0x83a10000
    8bcc:	00000000 	andeq	r0, r0, r0
    8bd0:	064d0407 	strbeq	r0, [sp], -r7, lsl #8
    8bd4:	25030000 	strcs	r0, [r3, #-0]
    8bd8:	2200002a 	andcs	r0, r0, #42	; 0x2a
    8bdc:	00214e01 	eoreq	r4, r1, r1, lsl #28
    8be0:	0c310100 	ldfeqs	f0, [r1], #-0
    8be4:	0000010a 	andeq	r0, r0, sl, lsl #2
    8be8:	00000000 	andeq	r0, r0, r0
    8bec:	83c30000 	bichi	r0, r3, #0
    8bf0:	37010000 	strcc	r0, [r1, -r0]
    8bf4:	1b00002b 	blne	8ca8 <__HEAP_SIZE+0x7ca8>
    8bf8:	00001f14 	andeq	r1, r0, r4, lsl pc
    8bfc:	250c3101 	strcs	r3, [ip, #-257]	; 0xfffffeff
    8c00:	000003a7 	andeq	r0, r0, r7, lsr #7
    8c04:	000083e9 	andeq	r8, r0, r9, ror #7
    8c08:	000083e3 	andeq	r8, r0, r3, ror #7
    8c0c:	0022ca18 	eoreq	ip, r2, r8, lsl sl
    8c10:	0c330100 	ldfeqs	f0, [r3], #-0
    8c14:	00066611 	andeq	r6, r6, r1, lsl r6
    8c18:	00841600 	addeq	r1, r4, r0, lsl #12
    8c1c:	00841200 	addeq	r1, r4, r0, lsl #4
    8c20:	06802300 	streq	r2, [r0], r0, lsl #6
    8c24:	2a930000 	bcs	fe4c8c2c <__StackTop+0xc63c8c2c>
    8c28:	782e0000 	stmdavc	lr!, {}	; <UNPREDICTABLE>
    8c2c:	0c580100 	ldfeqe	f0, [r8], {-0}
    8c30:	0001191c 	andeq	r1, r1, ip, lsl r9
    8c34:	00843a00 	addeq	r3, r4, r0, lsl #20
    8c38:	00843400 	addeq	r3, r4, r0, lsl #8
    8c3c:	98230000 	stmdals	r3!, {}	; <UNPREDICTABLE>
    8c40:	df000006 	svcle	0x00000006
    8c44:	1800002a 	stmdane	r0, {r1, r3, r5}
    8c48:	00001d92 	muleq	r0, r2, sp
    8c4c:	190c9201 	stmdbne	ip, {r0, r9, ip, pc}
    8c50:	0000012f 	andeq	r0, r0, pc, lsr #2
    8c54:	0000846a 	andeq	r8, r0, sl, ror #8
    8c58:	00008464 	andeq	r8, r0, r4, ror #8
    8c5c:	0000001d 	andeq	r0, r0, sp, lsl r0
    8c60:	0037f200 	eorseq	pc, r7, r0, lsl #4
    8c64:	00001d00 	andeq	r1, r0, r0, lsl #26
    8c68:	14910000 	ldrne	r0, [r1], #0
    8c6c:	001d0000 	andseq	r0, sp, r0
    8c70:	00000000 	andeq	r0, r0, r0
    8c74:	1d000038 	stcne	0, cr0, [r0, #-224]	; 0xffffff20
    8c78:	00000000 	andeq	r0, r0, r0
    8c7c:	0000382a 	andeq	r3, r0, sl, lsr #16
    8c80:	0000001d 	andeq	r0, r0, sp, lsl r0
    8c84:	001c6300 	andseq	r6, ip, r0, lsl #6
    8c88:	001d0000 	andseq	r0, sp, r0
    8c8c:	f2000000 	vhadd.s8	d0, d0, d0
    8c90:	1e000037 	mcrne	0, 0, r0, cr0, cr7, {1}
    8c94:	00000000 	andeq	r0, r0, r0
    8c98:	000037d4 	ldrdeq	r3, [r0], -r4
    8c9c:	00002afc 	strdeq	r2, [r0], -ip
    8ca0:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    8ca4:	1e000075 	mcrne	0, 0, r0, cr0, cr5, {3}
    8ca8:	00000000 	andeq	r0, r0, r0
    8cac:	000037d4 	ldrdeq	r3, [r0], -r4
    8cb0:	00002b10 	andeq	r2, r0, r0, lsl fp
    8cb4:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    8cb8:	1e001874 	mcrne	8, 0, r1, cr0, cr4, {3}
    8cbc:	00000000 	andeq	r0, r0, r0
    8cc0:	0000389e 	muleq	r0, lr, r8
    8cc4:	00002b2d 	andeq	r2, r0, sp, lsr #22
    8cc8:	0550011f 	ldrbeq	r0, [r0, #-287]	; 0xfffffee1
    8ccc:	008b1003 	addeq	r1, fp, r3
    8cd0:	51011f38 	tstpl	r1, r8, lsr pc
    8cd4:	00007502 	andeq	r7, r0, r2, lsl #10
    8cd8:	0000001d 	andeq	r0, r0, sp, lsl r0
    8cdc:	00380000 	eorseq	r0, r8, r0
    8ce0:	01220000 			; <UNDEFINED> instruction: 0x01220000
    8ce4:	00001ce7 	andeq	r1, r0, r7, ror #25
    8ce8:	0a0acd01 	beq	2bc0f4 <__RAM_SIZE+0x1bc0f4>
    8cec:	00000001 	andeq	r0, r0, r1
    8cf0:	00000000 	andeq	r0, r0, r0
    8cf4:	00849700 	addeq	r9, r4, r0, lsl #14
    8cf8:	2c240100 	stfcss	f0, [r4], #-0
    8cfc:	5d1b0000 	ldcpl	0, cr0, [fp, #-0]
    8d00:	0100001d 	tsteq	r0, sp, lsl r0
    8d04:	a7290acd 	strge	r0, [r9, -sp, asr #21]!
    8d08:	bd000003 	stclt	0, cr0, [r0, #-12]
    8d0c:	b7000084 	strlt	r0, [r0, -r4, lsl #1]
    8d10:	1b000084 	blne	8f28 <__HEAP_SIZE+0x7f28>
    8d14:	00001c32 	andeq	r1, r0, r2, lsr ip
    8d18:	280ace01 	stmdacs	sl, {r0, r9, sl, fp, lr, pc}
    8d1c:	0000012f 	andeq	r0, r0, pc, lsr #2
    8d20:	000084f0 	strdeq	r8, [r0], -r0
    8d24:	000084e6 	andeq	r8, r0, r6, ror #9
    8d28:	0022ca18 	eoreq	ip, r2, r8, lsl sl
    8d2c:	0ad00100 	beq	ff409134 <__StackTop+0xc7309134>
    8d30:	00066611 	andeq	r6, r6, r1, lsl r6
    8d34:	00853500 	addeq	r3, r5, r0, lsl #10
    8d38:	00853100 	addeq	r3, r5, r0, lsl #2
    8d3c:	21af1800 			; <UNDEFINED> instruction: 0x21af1800
    8d40:	d1010000 	mrsle	r0, (UNDEF: 1)
    8d44:	012f150a 			; <UNDEFINED> instruction: 0x012f150a
    8d48:	85590000 	ldrbhi	r0, [r9, #-0]
    8d4c:	85530000 	ldrbhi	r0, [r3, #-0]
    8d50:	1c180000 	ldcne	0, cr0, [r8], {-0}
    8d54:	01000021 	tsteq	r0, r1, lsr #32
    8d58:	2f2c0ad1 	svccs	0x002c0ad1
    8d5c:	84000001 	strhi	r0, [r0], #-1
    8d60:	82000085 	andhi	r0, r0, #133	; 0x85
    8d64:	18000085 	stmdane	r0, {r0, r2, r7}
    8d68:	00000c67 	andeq	r0, r0, r7, ror #24
    8d6c:	140ad201 	strne	sp, [sl], #-513	; 0xfffffdff
    8d70:	00000119 	andeq	r0, r0, r9, lsl r1
    8d74:	0000859f 	muleq	r0, pc, r5	; <UNPREDICTABLE>
    8d78:	00008597 	muleq	r0, r7, r5
    8d7c:	0000001c 	andeq	r0, r0, ip, lsl r0
    8d80:	00000000 	andeq	r0, r0, r0
    8d84:	002bf400 	eoreq	pc, fp, r0, lsl #8
    8d88:	09e31800 	stmibeq	r3!, {fp, ip}^
    8d8c:	6c010000 	stcvs	0, cr0, [r1], {-0}
    8d90:	0391150b 	orrseq	r1, r1, #46137344	; 0x2c00000
    8d94:	85d70000 	ldrbhi	r0, [r7]
    8d98:	85d50000 	ldrbhi	r0, [r5]
    8d9c:	1d000000 	stcne	0, cr0, [r0, #-0]
    8da0:	00000000 	andeq	r0, r0, r0
    8da4:	000037f2 	strdeq	r3, [r0], -r2
    8da8:	0000001d 	andeq	r0, r0, sp, lsl r0
    8dac:	00380000 	eorseq	r0, r8, r0
    8db0:	00001e00 	andeq	r1, r0, r0, lsl #28
    8db4:	37d40000 	ldrbcc	r0, [r4, r0]
    8db8:	2c1a0000 	ldccs	0, cr0, [sl], {-0}
    8dbc:	011f0000 	tsteq	pc, r0
    8dc0:	00750250 	rsbseq	r0, r5, r0, asr r2
    8dc4:	00001d00 	andeq	r1, r0, r0, lsl #26
    8dc8:	382a0000 	stmdacc	sl!, {}	; <UNPREDICTABLE>
    8dcc:	21000000 	mrscs	r0, (UNDEF: 0)
    8dd0:	001cf801 	andseq	pc, ip, r1, lsl #16
    8dd4:	0a9d0100 	beq	fe7491dc <__StackTop+0xc66491dc>
    8dd8:	012f0111 			; <UNDEFINED> instruction: 0x012f0111
	...
    8de4:	85ea0000 	strbhi	r0, [sl, #0]!
    8de8:	ab010000 	blge	48df0 <__HEAP_SIZE+0x47df0>
    8dec:	1b00002c 	blne	8ea4 <__HEAP_SIZE+0x7ea4>
    8df0:	00001d5d 	andeq	r1, r0, sp, asr sp
    8df4:	420a9d01 	andmi	r9, sl, #1, 26	; 0x40
    8df8:	000003b3 			; <UNDEFINED> instruction: 0x000003b3
    8dfc:	00008610 	andeq	r8, r0, r0, lsl r6
    8e00:	0000860a 	andeq	r8, r0, sl, lsl #12
    8e04:	0022ca18 	eoreq	ip, r2, r8, lsl sl
    8e08:	0a9f0100 	beq	fe7c9210 <__StackTop+0xc66c9210>
    8e0c:	002a2517 	eoreq	r2, sl, r7, lsl r5
    8e10:	00863b00 	addeq	r3, r6, r0, lsl #22
    8e14:	00863900 	addeq	r3, r6, r0, lsl #18
    8e18:	0c0d1800 	stceq	8, cr1, [sp], {-0}
    8e1c:	a0010000 	andge	r0, r1, r0
    8e20:	012f150a 			; <UNDEFINED> instruction: 0x012f150a
    8e24:	86500000 	ldrbhi	r0, [r0], -r0
    8e28:	864e0000 	strbhi	r0, [lr], -r0
    8e2c:	2e180000 	cdpcs	0, 1, cr0, cr8, cr0, {0}
    8e30:	0100000c 	tsteq	r0, ip
    8e34:	2f150aa1 	svccs	0x00150aa1
    8e38:	67000001 	strvs	r0, [r0, -r1]
    8e3c:	63000086 	movwvs	r0, #134	; 0x86
    8e40:	1d000086 	stcne	0, cr0, [r0, #-536]	; 0xfffffde8
    8e44:	00000000 	andeq	r0, r0, r0
    8e48:	0000380e 	andeq	r3, r0, lr, lsl #16
    8e4c:	0000001d 	andeq	r0, r0, sp, lsl r0
    8e50:	00381c00 	eorseq	r1, r8, r0, lsl #24
    8e54:	01210000 			; <UNDEFINED> instruction: 0x01210000
    8e58:	0000223e 	andeq	r2, r0, lr, lsr r2
    8e5c:	110a8301 	tstne	sl, r1, lsl #6
    8e60:	00012f01 	andeq	r2, r1, r1, lsl #30
	...
    8e6c:	00868500 	addeq	r8, r6, r0, lsl #10
    8e70:	2d1d0100 	ldfcss	f0, [sp, #-0]
    8e74:	5d1b0000 	ldcpl	0, cr0, [fp, #-0]
    8e78:	0100001d 	tsteq	r0, sp, lsl r0
    8e7c:	b33b0a83 	teqlt	fp, #536576	; 0x83000
    8e80:	ab000003 	blge	8e94 <__HEAP_SIZE+0x7e94>
    8e84:	a5000086 	strge	r0, [r0, #-134]	; 0xffffff7a
    8e88:	18000086 	stmdane	r0, {r1, r2, r7}
    8e8c:	000022ca 	andeq	r2, r0, sl, asr #5
    8e90:	170a8501 	strne	r8, [sl, -r1, lsl #10]
    8e94:	00002a25 	andeq	r2, r0, r5, lsr #20
    8e98:	000086d6 	ldrdeq	r8, [r0], -r6
    8e9c:	000086d4 	ldrdeq	r8, [r0], -r4
    8ea0:	000c0d18 	andeq	r0, ip, r8, lsl sp
    8ea4:	0a860100 	beq	fe1892ac <__StackTop+0xc60892ac>
    8ea8:	00012f15 	andeq	r2, r1, r5, lsl pc
    8eac:	0086eb00 	addeq	lr, r6, r0, lsl #22
    8eb0:	0086e900 	addeq	lr, r6, r0, lsl #18
    8eb4:	00001d00 	andeq	r1, r0, r0, lsl #26
    8eb8:	37f20000 	ldrbcc	r0, [r2, r0]!
    8ebc:	001d0000 	andseq	r0, sp, r0
    8ec0:	00000000 	andeq	r0, r0, r0
    8ec4:	00000038 	andeq	r0, r0, r8, lsr r0
    8ec8:	1c760121 	ldfnee	f0, [r6], #-132	; 0xffffff7c
    8ecc:	53010000 	movwpl	r0, #4096	; 0x1000
    8ed0:	2f01110a 	svccs	0x0001110a
    8ed4:	00000001 	andeq	r0, r0, r1
    8ed8:	00000000 	andeq	r0, r0, r0
    8edc:	fe000000 	cdp2	0, 0, cr0, cr0, cr0, {0}
    8ee0:	01000086 	smlabbeq	r0, r6, r0, r0
    8ee4:	00002da4 	andeq	r2, r0, r4, lsr #27
    8ee8:	001d5d1b 	andseq	r5, sp, fp, lsl sp
    8eec:	0a530100 	beq	14c92f4 <__RAM_SIZE+0x13c92f4>
    8ef0:	0003b33e 	andeq	fp, r3, lr, lsr r3
    8ef4:	00872400 	addeq	r2, r7, r0, lsl #8
    8ef8:	00871e00 	addeq	r1, r7, r0, lsl #28
    8efc:	22ca1800 	sbccs	r1, sl, #0, 16
    8f00:	55010000 	strpl	r0, [r1, #-0]
    8f04:	2a25170a 	bcs	94eb34 <__RAM_SIZE+0x84eb34>
    8f08:	874f0000 	strbhi	r0, [pc, -r0]
    8f0c:	874d0000 	strbhi	r0, [sp, -r0]
    8f10:	0d180000 	ldceq	0, cr0, [r8, #-0]
    8f14:	0100000c 	tsteq	r0, ip
    8f18:	2f150a56 	svccs	0x00150a56
    8f1c:	64000001 	strvs	r0, [r0], #-1
    8f20:	62000087 	andvs	r0, r0, #135	; 0x87
    8f24:	18000087 	stmdane	r0, {r0, r1, r2, r7}
    8f28:	00000c2e 	andeq	r0, r0, lr, lsr #24
    8f2c:	150a5701 	strne	r5, [sl, #-1793]	; 0xfffff8ff
    8f30:	0000012f 	andeq	r0, r0, pc, lsr #2
    8f34:	0000877b 	andeq	r8, r0, fp, ror r7
    8f38:	00008777 	andeq	r8, r0, r7, ror r7
    8f3c:	0000001d 	andeq	r0, r0, sp, lsl r0
    8f40:	00380e00 	eorseq	r0, r8, r0, lsl #28
    8f44:	00001d00 	andeq	r1, r0, r0, lsl #26
    8f48:	381c0000 	ldmdacc	ip, {}	; <UNPREDICTABLE>
    8f4c:	21000000 	mrscs	r0, (UNDEF: 0)
    8f50:	00196d01 	andseq	r6, r9, r1, lsl #26
    8f54:	0a390100 	beq	e4935c <__RAM_SIZE+0xd4935c>
    8f58:	012f0111 			; <UNDEFINED> instruction: 0x012f0111
	...
    8f64:	87990000 	ldrhi	r0, [r9, r0]
    8f68:	16010000 	strne	r0, [r1], -r0
    8f6c:	1b00002e 	blne	902c <__HEAP_SIZE+0x802c>
    8f70:	00001d5d 	andeq	r1, r0, sp, asr sp
    8f74:	370a3901 	strcc	r3, [sl, -r1, lsl #18]
    8f78:	000003b3 			; <UNDEFINED> instruction: 0x000003b3
    8f7c:	000087bf 			; <UNDEFINED> instruction: 0x000087bf
    8f80:	000087b9 			; <UNDEFINED> instruction: 0x000087b9
    8f84:	0022ca18 	eoreq	ip, r2, r8, lsl sl
    8f88:	0a3b0100 	beq	ec9390 <__RAM_SIZE+0xdc9390>
    8f8c:	002a2517 	eoreq	r2, sl, r7, lsl r5
    8f90:	0087ea00 	addeq	lr, r7, r0, lsl #20
    8f94:	0087e800 	addeq	lr, r7, r0, lsl #16
    8f98:	0c0d1800 	stceq	8, cr1, [sp], {-0}
    8f9c:	3c010000 	stccc	0, cr0, [r1], {-0}
    8fa0:	012f150a 			; <UNDEFINED> instruction: 0x012f150a
    8fa4:	87ff0000 	ldrbhi	r0, [pc, r0]!
    8fa8:	87fd0000 	ldrbhi	r0, [sp, r0]!
    8fac:	001d0000 	andseq	r0, sp, r0
    8fb0:	f2000000 	vhadd.s8	d0, d0, d0
    8fb4:	1d000037 	stcne	0, cr0, [r0, #-220]	; 0xffffff24
    8fb8:	00000000 	andeq	r0, r0, r0
    8fbc:	00003800 	andeq	r3, r0, r0, lsl #16
    8fc0:	1e012100 	adfnes	f2, f1, f0
    8fc4:	0100001b 	tsteq	r0, fp, lsl r0
    8fc8:	011009b5 			; <UNDEFINED> instruction: 0x011009b5
    8fcc:	000004f2 	strdeq	r0, [r0], -r2
	...
    8fd8:	00008812 	andeq	r8, r0, r2, lsl r8
    8fdc:	002ef901 	eoreq	pc, lr, r1, lsl #18
    8fe0:	1d5d1b00 	vldrne	d17, [sp, #-0]
    8fe4:	b5010000 	strlt	r0, [r1, #-0]
    8fe8:	03a72c09 			; <UNDEFINED> instruction: 0x03a72c09
    8fec:	88540000 	ldmdahi	r4, {}^	; <UNPREDICTABLE>
    8ff0:	884a0000 	stmdahi	sl, {}^	; <UNPREDICTABLE>
    8ff4:	cb180000 	blgt	608ffc <__RAM_SIZE+0x508ffc>
    8ff8:	01000016 	tsteq	r0, r6, lsl r0
    8ffc:	f21409b7 	vmul.i16	d0, d20, d23
    9000:	9a000004 	bls	9018 <__HEAP_SIZE+0x8018>
    9004:	96000088 	strls	r0, [r0], -r8, lsl #1
    9008:	18000088 	stmdane	r0, {r3, r7}
    900c:	000014af 	andeq	r1, r0, pc, lsr #9
    9010:	1809b801 	stmdane	r9, {r0, fp, ip, sp, pc}
    9014:	00001aca 	andeq	r1, r0, sl, asr #21
    9018:	000088bc 			; <UNDEFINED> instruction: 0x000088bc
    901c:	000088b8 			; <UNDEFINED> instruction: 0x000088b8
    9020:	00154918 	andseq	r4, r5, r8, lsl r9
    9024:	09b90100 	ldmibeq	r9!, {r8}
    9028:	001aca18 	andseq	ip, sl, r8, lsl sl
    902c:	0088de00 	addeq	sp, r8, r0, lsl #28
    9030:	0088da00 	addeq	sp, r8, r0, lsl #20
    9034:	153b1800 	ldrne	r1, [fp, #-2048]!	; 0xfffff800
    9038:	ba010000 	blt	49040 <__HEAP_SIZE+0x48040>
    903c:	1aca1809 	bne	ff28f068 <__StackTop+0xc718f068>
    9040:	89000000 	stmdbhi	r0, {}	; <UNPREDICTABLE>
    9044:	88fc0000 	ldmhi	ip!, {}^	; <UNPREDICTABLE>
    9048:	82180000 	andshi	r0, r8, #0
    904c:	01000016 	tsteq	r0, r6, lsl r0
    9050:	ca1809bb 	bgt	60b744 <__RAM_SIZE+0x50b744>
    9054:	2200001a 	andcs	r0, r0, #26
    9058:	1e000089 	cdpne	0, 0, cr0, cr0, cr9, {4}
    905c:	18000089 	stmdane	r0, {r0, r3, r7}
    9060:	000022ca 	andeq	r2, r0, sl, asr #5
    9064:	1d09bc01 	stcne	12, cr11, [r9, #-4]
    9068:	00002a2b 	andeq	r2, r0, fp, lsr #20
    906c:	0000894a 	andeq	r8, r0, sl, asr #18
    9070:	00008940 	andeq	r8, r0, r0, asr #18
    9074:	00051023 	andeq	r1, r5, r3, lsr #32
    9078:	002ee600 	eoreq	lr, lr, r0, lsl #12
    907c:	00782e00 	rsbseq	r2, r8, r0, lsl #28
    9080:	2809ec01 	stmdacs	r9, {r0, sl, fp, sp, lr, pc}
    9084:	00000119 	andeq	r0, r0, r9, lsl r1
    9088:	00008992 	muleq	r0, r2, r9
    908c:	0000898c 	andeq	r8, r0, ip, lsl #19
    9090:	00001d00 	andeq	r1, r0, r0, lsl #26
    9094:	37f20000 	ldrbcc	r0, [r2, r0]!
    9098:	001d0000 	andseq	r0, sp, r0
    909c:	00000000 	andeq	r0, r0, r0
    90a0:	00000038 	andeq	r0, r0, r8, lsr r0
    90a4:	00530122 	subseq	r0, r3, r2, lsr #2
    90a8:	83010000 	movwhi	r0, #4096	; 0x1000
    90ac:	0c010a09 			; <UNDEFINED> instruction: 0x0c010a09
    90b0:	2a10002b 	bcs	409164 <__RAM_SIZE+0x309164>
    90b4:	bb10002b 	bllt	409168 <__RAM_SIZE+0x309168>
    90b8:	01000089 	smlabbeq	r0, r9, r0, r0
    90bc:	00002f74 	andeq	r2, r0, r4, ror pc
    90c0:	0020691b 	eoreq	r6, r0, fp, lsl r9
    90c4:	09830100 	stmibeq	r3, {r8}
    90c8:	00015b27 	andeq	r5, r1, r7, lsr #22
    90cc:	0089e100 	addeq	lr, r9, r0, lsl #2
    90d0:	0089db00 	addeq	sp, r9, r0, lsl #22
    90d4:	215b1800 	cmpcs	fp, r0, lsl #16
    90d8:	85010000 	strhi	r0, [r1, #-0]
    90dc:	01191409 	tsteq	r9, r9, lsl #8
    90e0:	8a110000 	bhi	4490e8 <__RAM_SIZE+0x3490e8>
    90e4:	8a0d0000 	bhi	3490ec <__RAM_SIZE+0x2490ec>
    90e8:	161d0000 	ldrne	r0, [sp], -r0
    90ec:	2810002b 	ldmdacs	r0, {r0, r1, r3, r5}
    90f0:	1e000026 	cdpne	0, 0, cr0, cr0, cr6, {1}
    90f4:	10002b1e 	andne	r2, r0, lr, lsl fp
    90f8:	00000986 	andeq	r0, r0, r6, lsl #19
    90fc:	00002f61 	andeq	r2, r0, r1, ror #30
    9100:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    9104:	011f0074 	tsteq	pc, r4, ror r0	; <UNPREDICTABLE>
    9108:	00300151 	eorseq	r0, r0, r1, asr r1
    910c:	002b221d 	eoreq	r2, fp, sp, lsl r2
    9110:	0024cf10 	eoreq	ip, r4, r0, lsl pc
    9114:	2b281d00 	blcs	a1051c <__RAM_SIZE+0x91051c>
    9118:	382a1000 	stmdacc	sl!, {ip}
    911c:	21000000 	mrscs	r0, (UNDEF: 0)
    9120:	0014d001 	andseq	sp, r4, r1
    9124:	09270100 	stmdbeq	r7!, {r8}
    9128:	01190110 	tsteq	r9, r0, lsl r1
	...
    9134:	8a300000 	bhi	c0913c <__RAM_SIZE+0xb0913c>
    9138:	47010000 	strmi	r0, [r1, -r0]
    913c:	1b000030 	blne	9204 <__HEAP_SIZE+0x8204>
    9140:	00001f48 	andeq	r1, r0, r8, asr #30
    9144:	34092701 	strcc	r2, [r9], #-1793	; 0xfffff8ff
    9148:	000018a3 	andeq	r1, r0, r3, lsr #17
    914c:	00008a54 	andeq	r8, r0, r4, asr sl
    9150:	00008a50 	andeq	r8, r0, r0, asr sl
    9154:	00226b1b 	eoreq	r6, r2, fp, lsl fp
    9158:	09280100 	stmdbeq	r8!, {r8}
    915c:	00015b32 	andeq	r5, r1, r2, lsr fp
    9160:	008a7800 	addeq	r7, sl, r0, lsl #16
    9164:	008a7200 	addeq	r7, sl, r0, lsl #4
    9168:	22911800 	addscs	r1, r1, #0, 16
    916c:	2a010000 	bcs	49174 <__HEAP_SIZE+0x48174>
    9170:	014a1409 	cmpeq	sl, r9, lsl #8
    9174:	8ab20000 	bhi	fec8917c <__StackTop+0xc6b8917c>
    9178:	8aa40000 	bhi	fe909180 <__StackTop+0xc6809180>
    917c:	5b180000 	blpl	609184 <__RAM_SIZE+0x509184>
    9180:	01000021 	tsteq	r0, r1, lsr #32
    9184:	1914092b 	ldmdbne	r4, {r0, r1, r3, r5, r8, fp}
    9188:	0e000001 	cdpeq	0, 0, cr0, cr0, cr1, {0}
    918c:	0a00008b 	beq	93c0 <__HEAP_SIZE+0x83c0>
    9190:	1800008b 	stmdane	r0, {r0, r1, r3, r7}
    9194:	00001a8a 	andeq	r1, r0, sl, lsl #21
    9198:	25092b01 	strcs	r2, [r9, #-2817]	; 0xfffff4ff
    919c:	00000119 	andeq	r0, r0, r9, lsl r1
    91a0:	00008b36 	andeq	r8, r0, r6, lsr fp
    91a4:	00008b2c 	andeq	r8, r0, ip, lsr #22
    91a8:	00061023 	andeq	r1, r6, r3, lsr #32
    91ac:	00302b00 	eorseq	r2, r0, r0, lsl #22
    91b0:	197f1800 	ldmdbne	pc!, {fp, ip}^	; <UNPREDICTABLE>
    91b4:	36010000 	strcc	r0, [r1], -r0
    91b8:	015b1e09 	cmpeq	fp, r9, lsl #28
    91bc:	8b7e0000 	blhi	1f891c4 <__RAM_SIZE+0x1e891c4>
    91c0:	8b7a0000 	blhi	1e891c8 <__RAM_SIZE+0x1d891c8>
    91c4:	00200000 	eoreq	r0, r0, r0
    91c8:	86000000 	strhi	r0, [r0], -r0
    91cc:	1f000009 	svcne	0x00000009
    91d0:	30015101 	andcc	r5, r1, r1, lsl #2
    91d4:	001d0000 	andseq	r0, sp, r0
    91d8:	28000000 	stmdacs	r0, {}	; <UNPREDICTABLE>
    91dc:	1d000026 	stcne	0, cr0, [r0, #-152]	; 0xffffff68
    91e0:	00000000 	andeq	r0, r0, r0
    91e4:	000024cf 	andeq	r2, r0, pc, asr #9
    91e8:	0000001d 	andeq	r0, r0, sp, lsl r0
    91ec:	00382a00 	eorseq	r2, r8, r0, lsl #20
    91f0:	01220000 			; <UNDEFINED> instruction: 0x01220000
    91f4:	00001da6 	andeq	r1, r0, r6, lsr #27
    91f8:	0a088f01 	beq	22ce04 <__RAM_SIZE+0x12ce04>
    91fc:	00000001 	andeq	r0, r0, r1
    9200:	00000000 	andeq	r0, r0, r0
    9204:	008b9c00 	addeq	r9, fp, r0, lsl #24
    9208:	313e0100 	teqcc	lr, r0, lsl #2
    920c:	fe1b0000 	cdp2	0, 1, cr0, cr11, cr0, {0}
    9210:	0100001e 	tsteq	r0, lr, lsl r0
    9214:	a724088f 	strge	r0, [r4, -pc, lsl #17]!
    9218:	c2000003 	andgt	r0, r0, #3
    921c:	bc00008b 	stclt	0, cr0, [r0], {139}	; 0x8b
    9220:	1800008b 	stmdane	r0, {r0, r1, r3, r7}
    9224:	000022ca 	andeq	r2, r0, sl, asr #5
    9228:	11089101 	tstne	r8, r1, lsl #2
    922c:	00000666 	andeq	r0, r0, r6, ror #12
    9230:	00008bef 	andeq	r8, r0, pc, ror #23
    9234:	00008beb 	andeq	r8, r0, fp, ror #23
    9238:	00159e18 	andseq	r9, r5, r8, lsl lr
    923c:	08920100 	ldmeq	r2, {r8}
    9240:	00011914 	andeq	r1, r1, r4, lsl r9
    9244:	008c1300 	addeq	r1, ip, r0, lsl #6
    9248:	008c0d00 	addeq	r0, ip, r0, lsl #26
    924c:	23f91800 	mvnscs	r1, #0, 16
    9250:	93010000 	movwls	r0, #4096	; 0x1000
    9254:	01191408 	tsteq	r9, r8, lsl #8
    9258:	8c430000 	marhi	acc0, r0, r3
    925c:	8c3f0000 	ldchi	0, cr0, [pc], #-0	; 9264 <__HEAP_SIZE+0x8264>
    9260:	001d0000 	andseq	r0, sp, r0
    9264:	f2000000 	vhadd.s8	d0, d0, d0
    9268:	1e000037 	mcrne	0, 0, r0, cr0, cr7, {1}
    926c:	00000000 	andeq	r0, r0, r0
    9270:	000037d4 	ldrdeq	r3, [r0], -r4
    9274:	000030d4 	ldrdeq	r3, [r0], -r4
    9278:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    927c:	1e000075 	mcrne	0, 0, r0, cr0, cr5, {3}
    9280:	00000000 	andeq	r0, r0, r0
    9284:	000037d4 	ldrdeq	r3, [r0], -r4
    9288:	000030e8 	andeq	r3, r0, r8, ror #1
    928c:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    9290:	1d001874 	stcne	8, cr1, [r0, #-464]	; 0xfffffe30
    9294:	00000000 	andeq	r0, r0, r0
    9298:	00001491 	muleq	r0, r1, r4
    929c:	0000001d 	andeq	r0, r0, sp, lsl r0
    92a0:	00380000 	eorseq	r0, r8, r0
    92a4:	00001e00 	andeq	r1, r0, r0, lsl #28
    92a8:	14a70000 	strtne	r0, [r7], #0
    92ac:	310e0000 	mrscc	r0, (UNDEF: 14)
    92b0:	011f0000 	tsteq	pc, r0
    92b4:	00740250 	rsbseq	r0, r4, r0, asr r2
    92b8:	00001e00 	andeq	r1, r0, r0, lsl #28
    92bc:	389e0000 	ldmcc	lr, {}	; <UNPREDICTABLE>
    92c0:	312b0000 			; <UNDEFINED> instruction: 0x312b0000
    92c4:	011f0000 	tsteq	pc, r0
    92c8:	2c030550 	cfstr32cs	mvfx0, [r3], {80}	; 0x50
    92cc:	1f38008b 	svcne	0x0038008b
    92d0:	75025101 	strvc	r5, [r2, #-257]	; 0xfffffeff
    92d4:	001d0000 	andseq	r0, sp, r0
    92d8:	00000000 	andeq	r0, r0, r0
    92dc:	1d000038 	stcne	0, cr0, [r0, #-224]	; 0xffffff20
    92e0:	00000000 	andeq	r0, r0, r0
    92e4:	0000382a 	andeq	r3, r0, sl, lsr #16
    92e8:	1adc1a00 	bne	ff70faf0 <__StackTop+0xc760faf0>
    92ec:	e3010000 	movw	r0, #4096	; 0x1000
    92f0:	94011107 	strls	r1, [r1], #-263	; 0xfffffef9
    92f4:	50100025 	andspl	r0, r0, r5, lsr #32
    92f8:	61100026 	tstvs	r0, r6, lsr #32
    92fc:	0100008c 	smlabbeq	r0, ip, r0, r0
    9300:	000031b6 			; <UNDEFINED> instruction: 0x000031b6
    9304:	001b3c1b 	andseq	r3, fp, fp, lsl ip
    9308:	07e30100 	strbeq	r0, [r3, r0, lsl #2]!
    930c:	00066633 	andeq	r6, r6, r3, lsr r6
    9310:	008c8500 	addeq	r8, ip, r0, lsl #10
    9314:	008c8100 	addeq	r8, ip, r0, lsl #2
    9318:	25e21c00 	strbcs	r1, [r2, #3072]!	; 0xc00
    931c:	26141000 	ldrcs	r1, [r4], -r0
    9320:	31911000 	orrscc	r1, r1, r0
    9324:	e3180000 	tst	r8, #0
    9328:	01000009 	tsteq	r0, r9
    932c:	910d081d 	tstls	sp, sp, lsl r8
    9330:	a5000003 	strge	r0, [r0, #-3]
    9334:	a300008c 	movwge	r0, #140	; 0x8c
    9338:	0000008c 	andeq	r0, r0, ip, lsl #1
    933c:	00259c1d 	eoreq	r9, r5, sp, lsl ip
    9340:	0037f210 	eorseq	pc, r7, r0, lsl r2	; <UNPREDICTABLE>
    9344:	26181d00 	ldrcs	r1, [r8], -r0, lsl #26
    9348:	38001000 	stmdacc	r0, {ip}
    934c:	301d0000 	andscc	r0, sp, r0
    9350:	38100026 	ldmdacc	r0, {r1, r2, r5}
    9354:	1d000016 	stcne	0, cr0, [r0, #-88]	; 0xffffffa8
    9358:	10002636 	andne	r2, r0, r6, lsr r6
    935c:	0000382a 	andeq	r3, r0, sl, lsr #16
    9360:	1e771a00 	vaddne.f32	s3, s14, s0
    9364:	01010000 	mrseq	r0, (UNDEF: 1)
    9368:	44010d07 	strmi	r0, [r1], #-3335	; 0xfffff2f9
    936c:	da100024 	ble	409404 <__RAM_SIZE+0x309404>
    9370:	b8100024 	ldmdalt	r0, {r2, r5}
    9374:	0100008c 	smlabbeq	r0, ip, r0, r0
    9378:	000032f3 	strdeq	r3, [r0], -r3	; <UNPREDICTABLE>
    937c:	0022fe1b 	eoreq	pc, r2, fp, lsl lr	; <UNPREDICTABLE>
    9380:	07010100 	streq	r0, [r1, -r0, lsl #2]
    9384:	0000ea32 	andeq	lr, r0, r2, lsr sl
    9388:	008cdc00 	addeq	sp, ip, r0, lsl #24
    938c:	008cd800 	addeq	sp, ip, r0, lsl #16
    9390:	19a21b00 	stmibne	r2!, {r8, r9, fp, ip}
    9394:	02010000 	andeq	r0, r1, #0
    9398:	00be3607 	adcseq	r3, lr, r7, lsl #12
    939c:	8cfe0000 	ldclhi	0, cr0, [lr]
    93a0:	8cfa0000 	ldclhi	0, cr0, [sl]
    93a4:	061b0000 	ldreq	r0, [fp], -r0
    93a8:	01000019 	tsteq	r0, r9, lsl r0
    93ac:	35400703 	strbcc	r0, [r0, #-1795]	; 0xfffff8fd
    93b0:	24000000 	strcs	r0, [r0], #-0
    93b4:	1c00008d 	stcne	0, cr0, [r0], {141}	; 0x8d
    93b8:	1b00008d 	blne	95f4 <__HEAP_SIZE+0x85f4>
    93bc:	00001e8c 	andeq	r1, r0, ip, lsl #29
    93c0:	30070401 	andcc	r0, r7, r1, lsl #8
    93c4:	000000a1 	andeq	r0, r0, r1, lsr #1
    93c8:	00008d65 	andeq	r8, r0, r5, ror #26
    93cc:	00008d61 	andeq	r8, r0, r1, ror #26
    93d0:	00147a1b 	andseq	r7, r4, fp, lsl sl
    93d4:	07050100 	streq	r0, [r5, -r0, lsl #2]
    93d8:	00012f2f 	andeq	r2, r1, pc, lsr #30
    93dc:	008d8700 	addeq	r8, sp, r0, lsl #14
    93e0:	008d8300 	addeq	r8, sp, r0, lsl #6
    93e4:	23ac1900 			; <UNDEFINED> instruction: 0x23ac1900
    93e8:	06010000 	streq	r0, [r1], -r0
    93ec:	32f93807 	rscscc	r3, r9, #458752	; 0x70000
    93f0:	91020000 	mrsls	r0, (UNDEF: 2)
    93f4:	1b3c1904 	blne	f0f80c <__RAM_SIZE+0xe0f80c>
    93f8:	07010000 	streq	r0, [r1, -r0]
    93fc:	06662b07 	strbteq	r2, [r6], -r7, lsl #22
    9400:	91020000 	mrsls	r0, (UNDEF: 2)
    9404:	21d51908 	bicscs	r1, r5, r8, lsl #18
    9408:	08010000 	stmdaeq	r1, {}	; <UNPREDICTABLE>
    940c:	33044007 	movwcc	r4, #16391	; 0x4007
    9410:	91020000 	mrsls	r0, (UNDEF: 2)
    9414:	231e180c 	tstcs	lr, #12, 16	; 0xc0000
    9418:	0a010000 	beq	49420 <__HEAP_SIZE+0x48420>
    941c:	05bb1307 	ldreq	r1, [fp, #775]!	; 0x307
    9420:	8da80000 	stchi	0, cr0, [r8]
    9424:	8da60000 	stchi	0, cr0, [r6]
    9428:	782e0000 	stmdavc	lr!, {}	; <UNPREDICTABLE>
    942c:	070b0100 	streq	r0, [fp, -r0, lsl #2]
    9430:	00012f11 	andeq	r2, r1, r1, lsl pc
    9434:	008dbd00 	addeq	fp, sp, r0, lsl #26
    9438:	008dbb00 	addeq	fp, sp, r0, lsl #22
    943c:	24621e00 	strbtcs	r1, [r2], #-3584	; 0xfffff200
    9440:	38ad1000 	stmiacc	sp!, {ip}
    9444:	32ae0000 	adccc	r0, lr, #0
    9448:	011f0000 	tsteq	pc, r0
    944c:	a5080251 	strge	r0, [r8, #-593]	; 0xfffffdaf
    9450:	0452011f 	ldrbeq	r0, [r2], #-287	; 0xfffffee1
    9454:	24320077 	ldrtcs	r0, [r2], #-119	; 0xffffff89
    9458:	24ac1e00 	strtcs	r1, [ip], #3584	; 0xe00
    945c:	38bb1000 	ldmcc	fp!, {ip}
    9460:	32c20000 	sbccc	r0, r2, #0
    9464:	011f0000 	tsteq	pc, r0
    9468:	04740250 	ldrbteq	r0, [r4], #-592	; 0xfffffdb0
    946c:	24b41e00 	ldrtcs	r1, [r4], #3584	; 0xe00
    9470:	38bb1000 	ldmcc	fp!, {ip}
    9474:	32d60000 	sbcscc	r0, r6, #0
    9478:	011f0000 	tsteq	pc, r0
    947c:	18740250 	ldmdane	r4!, {r4, r6, r9}^
    9480:	24ca2000 	strbcs	r2, [sl], #0
    9484:	38ca1000 	stmiacc	sl, {ip}^
    9488:	011f0000 	tsteq	pc, r0
    948c:	00770250 	rsbseq	r0, r7, r0, asr r2
    9490:	0252011f 	subseq	r0, r2, #-1073741817	; 0xc0000007
    9494:	011f0078 	tsteq	pc, r8, ror r0	; <UNPREDICTABLE>
    9498:	00790253 	rsbseq	r0, r9, r3, asr r2
    949c:	04070000 	streq	r0, [r7], #-0
    94a0:	000003a7 	andeq	r0, r0, r7, lsr #7
    94a4:	0032f303 	eorseq	pc, r2, r3, lsl #6
    94a8:	b6040700 	strlt	r0, [r4], -r0, lsl #14
    94ac:	03000005 	movweq	r0, #5
    94b0:	000032fe 	strdeq	r3, [r0], -lr
    94b4:	03680121 	cmneq	r8, #1073741832	; 0x40000008
    94b8:	b6010000 	strlt	r0, [r1], -r0
    94bc:	19011006 	stmdbne	r1, {r1, r2, ip}
    94c0:	f4000001 	vst4.8	{d0-d3}, [r0], r1
    94c4:	16100027 	ldrne	r0, [r0], -r7, lsr #32
    94c8:	d0100028 	andsle	r0, r0, r8, lsr #32
    94cc:	0100008d 	smlabbeq	r0, sp, r0, r0
    94d0:	00003414 	andeq	r3, r0, r4, lsl r4
    94d4:	0022fe1b 	eoreq	pc, r2, fp, lsl lr	; <UNPREDICTABLE>
    94d8:	06b60100 	ldrteq	r0, [r6], r0, lsl #2
    94dc:	0000ea2c 	andeq	lr, r0, ip, lsr #20
    94e0:	008e1800 	addeq	r1, lr, r0, lsl #16
    94e4:	008e1400 	addeq	r1, lr, r0, lsl #8
    94e8:	19a21b00 	stmibne	r2!, {r8, r9, fp, ip}
    94ec:	b7010000 	strlt	r0, [r1, -r0]
    94f0:	00be3006 	adcseq	r3, lr, r6
    94f4:	8e3d0000 	cdphi	0, 3, cr0, cr13, cr0, {0}
    94f8:	8e390000 	cdphi	0, 3, cr0, cr9, cr0, {0}
    94fc:	061b0000 	ldreq	r0, [fp], -r0
    9500:	01000019 	tsteq	r0, r9, lsl r0
    9504:	353a06b8 	ldrcc	r0, [sl, #-1720]!	; 0xfffff948
    9508:	62000000 	andvs	r0, r0, #0
    950c:	5e00008e 	cdppl	0, 0, cr0, cr0, cr14, {4}
    9510:	1b00008e 	blne	9750 <__HEAP_SIZE+0x8750>
    9514:	00001e8c 	andeq	r1, r0, ip, lsl #29
    9518:	2a06b901 	bcs	1b7924 <__RAM_SIZE+0xb7924>
    951c:	000000a1 	andeq	r0, r0, r1, lsr #1
    9520:	00008e87 	andeq	r8, r0, r7, lsl #29
    9524:	00008e83 	andeq	r8, r0, r3, lsl #29
    9528:	00147a1b 	andseq	r7, r4, fp, lsl sl
    952c:	06ba0100 	ldrteq	r0, [sl], r0, lsl #2
    9530:	00012f29 	andeq	r2, r1, r9, lsr #30
    9534:	008eac00 	addeq	sl, lr, r0, lsl #24
    9538:	008ea800 	addeq	sl, lr, r0, lsl #16
    953c:	23ac1b00 			; <UNDEFINED> instruction: 0x23ac1b00
    9540:	bb010000 	bllt	49548 <__HEAP_SIZE+0x48548>
    9544:	32f93206 	rscscc	r3, r9, #1610612736	; 0x60000000
    9548:	8ed00000 	cdphi	0, 13, cr0, cr0, cr0, {0}
    954c:	8ecc0000 	cdphi	0, 12, cr0, cr12, cr0, {0}
    9550:	3c180000 	ldccc	0, cr0, [r8], {-0}
    9554:	0100001b 	tsteq	r0, fp, lsl r0
    9558:	661106bd 			; <UNDEFINED> instruction: 0x661106bd
    955c:	f4000006 	vst4.8	{d0-d3}, [r0], r6
    9560:	f000008e 			; <UNDEFINED> instruction: 0xf000008e
    9564:	1800008e 	stmdane	r0, {r1, r2, r3, r7}
    9568:	00001a21 	andeq	r1, r0, r1, lsr #20
    956c:	1406be01 	strne	fp, [r6], #-3585	; 0xfffff1ff
    9570:	00000119 	andeq	r0, r0, r9, lsl r1
    9574:	00008f16 	andeq	r8, r0, r6, lsl pc
    9578:	00008f12 	andeq	r8, r0, r2, lsl pc
    957c:	0028041e 	eoreq	r0, r8, lr, lsl r4
    9580:	00341410 	eorseq	r1, r4, r0, lsl r4
    9584:	00340a00 	eorseq	r0, r4, r0, lsl #20
    9588:	50011f00 	andpl	r1, r1, r0, lsl #30
    958c:	5001f303 	andpl	pc, r1, r3, lsl #6
    9590:	0351011f 	cmpeq	r1, #-1073741817	; 0xc0000007
    9594:	1f5101f3 	svcne	0x005101f3
    9598:	f3035201 	vhsub.u8	d5, d3, d1
    959c:	011f5201 	tsteq	pc, r1, lsl #4
    95a0:	01f30353 	mvnseq	r0, r3, asr r3
    95a4:	7d021f53 	stcvc	15, cr1, [r2, #-332]	; 0xfffffeb4
    95a8:	00740200 	rsbseq	r0, r4, r0, lsl #4
    95ac:	047d021f 	ldrbteq	r0, [sp], #-543	; 0xfffffde1
    95b0:	06049103 	streq	r9, [r4], -r3, lsl #2
    95b4:	280a1d00 	stmdacs	sl, {r8, sl, fp, ip}
    95b8:	313e1000 	teqcc	lr, r0
    95bc:	2d000000 	stccs	0, cr0, [r0, #-0]
    95c0:	000017c7 	andeq	r1, r0, r7, asr #15
    95c4:	14065401 	strne	r5, [r6], #-1025	; 0xfffffbff
    95c8:	00066601 	andeq	r6, r6, r1, lsl #12
    95cc:	00265000 	eoreq	r5, r6, r0
    95d0:	0026b210 	eoreq	fp, r6, r0, lsl r2
    95d4:	008f3710 	addeq	r3, pc, r0, lsl r7	; <UNPREDICTABLE>
    95d8:	357e0100 	ldrbcc	r0, [lr, #-256]!	; 0xffffff00
    95dc:	fe1b0000 	cdp2	0, 1, cr0, cr11, cr0, {0}
    95e0:	01000022 	tsteq	r0, r2, lsr #32
    95e4:	ea320654 	b	c8af3c <__RAM_SIZE+0xb8af3c>
    95e8:	7f000000 	svcvc	0x00000000
    95ec:	7b00008f 	blvc	9830 <__HEAP_SIZE+0x8830>
    95f0:	1b00008f 	blne	9834 <__HEAP_SIZE+0x8834>
    95f4:	000019a2 	andeq	r1, r0, r2, lsr #19
    95f8:	36065501 	strcc	r5, [r6], -r1, lsl #10
    95fc:	000000be 	strheq	r0, [r0], -lr
    9600:	00008fa1 	andeq	r8, r0, r1, lsr #31
    9604:	00008f9d 	muleq	r0, sp, pc	; <UNPREDICTABLE>
    9608:	0019061b 	andseq	r0, r9, fp, lsl r6
    960c:	06560100 	ldrbeq	r0, [r6], -r0, lsl #2
    9610:	00003540 	andeq	r3, r0, r0, asr #10
    9614:	008fc300 	addeq	ip, pc, r0, lsl #6
    9618:	008fbf00 	addeq	fp, pc, r0, lsl #30
    961c:	1e8c1b00 	vdivne.f64	d1, d12, d0
    9620:	57010000 	strpl	r0, [r1, -r0]
    9624:	00a13006 	adceq	r3, r1, r6
    9628:	8fe50000 	svchi	0x00e50000
    962c:	8fe10000 	svchi	0x00e10000
    9630:	7a1b0000 	bvc	6c9638 <__RAM_SIZE+0x5c9638>
    9634:	01000014 	tsteq	r0, r4, lsl r0
    9638:	2f2f0658 	svccs	0x002f0658
    963c:	07000001 	streq	r0, [r0, -r1]
    9640:	03000090 	movweq	r0, #144	; 0x90
    9644:	1b000090 	blne	988c <__HEAP_SIZE+0x888c>
    9648:	000023ac 	andeq	r2, r0, ip, lsr #7
    964c:	38065901 	stmdacc	r6, {r0, r8, fp, ip, lr}
    9650:	000032f9 	strdeq	r3, [r0], -r9
    9654:	0000902b 	andeq	r9, r0, fp, lsr #32
    9658:	00009027 	andeq	r9, r0, r7, lsr #32
    965c:	001b3c18 	andseq	r3, fp, r8, lsl ip
    9660:	065b0100 	ldrbeq	r0, [fp], -r0, lsl #2
    9664:	00066611 	andeq	r6, r6, r1, lsl r6
    9668:	00905300 	addseq	r5, r0, r0, lsl #6
    966c:	00904b00 	addseq	r4, r0, r0, lsl #22
    9670:	04e02300 	strbteq	r2, [r0], #768	; 0x300
    9674:	353e0000 	ldrcc	r0, [lr, #-0]!
    9678:	e0180000 	ands	r0, r8, r0
    967c:	0100001e 	tsteq	r0, lr, lsl r0
    9680:	bb1b0680 	bllt	6cb088 <__RAM_SIZE+0x5cb088>
    9684:	8d000005 	stchi	0, cr0, [r0, #-20]	; 0xffffffec
    9688:	87000090 			; <UNDEFINED> instruction: 0x87000090
    968c:	1e000090 	mcrne	0, 0, r0, cr0, cr0, {4}
    9690:	10002664 	andne	r2, r0, r4, ror #12
    9694:	000038d8 	ldrdeq	r3, [r0], -r8
    9698:	000034fa 	strdeq	r3, [r0], -sl
    969c:	0450011f 	ldrbeq	r0, [r0], #-287	; 0xfffffee1
    96a0:	24320075 	ldrtcs	r0, [r2], #-117	; 0xffffff8b
    96a4:	266e1e00 	strbtcs	r1, [lr], -r0, lsl #28
    96a8:	38d81000 	ldmcc	r8, {ip}^
    96ac:	350e0000 	strcc	r0, [lr, #-0]
    96b0:	011f0000 	tsteq	pc, r0
    96b4:	4c080250 	sfmmi	f0, 4, [r8], {80}	; 0x50
    96b8:	267a1e00 	ldrbtcs	r1, [sl], -r0, lsl #28
    96bc:	38e61000 	stmiacc	r6!, {ip}^
    96c0:	352d0000 	strcc	r0, [sp, #-0]!
    96c4:	011f0000 	tsteq	pc, r0
    96c8:	00740250 	rsbseq	r0, r4, r0, asr r2
    96cc:	0151011f 	cmpeq	r1, pc, lsl r1
    96d0:	52011f30 	andpl	r1, r1, #48, 30	; 0xc0
    96d4:	004c0802 	subeq	r0, ip, r2, lsl #16
    96d8:	0026ac20 	eoreq	sl, r6, r0, lsr #24
    96dc:	00383810 	eorseq	r3, r8, r0, lsl r8
    96e0:	50011f00 	andpl	r1, r1, r0, lsl #30
    96e4:	00007902 	andeq	r7, r0, r2, lsl #18
    96e8:	269e2000 	ldrcs	r2, [lr], r0
    96ec:	31b61000 			; <UNDEFINED> instruction: 0x31b61000
    96f0:	011f0000 	tsteq	pc, r0
    96f4:	00760250 	rsbseq	r0, r6, r0, asr r2
    96f8:	0251011f 	subseq	r0, r1, #-1073741817	; 0xc0000007
    96fc:	011f0077 	tsteq	pc, r7, ror r0	; <UNPREDICTABLE>
    9700:	00750252 	rsbseq	r0, r5, r2, asr r2
    9704:	0253011f 	subseq	r0, r3, #-1073741817	; 0xc0000007
    9708:	021f0078 	andseq	r0, pc, #120	; 0x78
    970c:	9103007d 	tstls	r3, sp, ror r0
    9710:	021f0600 	andseq	r0, pc, #0, 12
    9714:	9103047d 	tstls	r3, sp, ror r4
    9718:	021f0604 	andseq	r0, pc, #4, 12	; 0x400000
    971c:	7402087d 	strvc	r0, [r2], #-2173	; 0xfffff783
    9720:	7d021f00 	stcvc	15, cr1, [r2, #-0]
    9724:	0030010c 	eorseq	r0, r0, ip, lsl #2
    9728:	4d012100 	stfmis	f2, [r1, #-0]
    972c:	01000017 	tsteq	r0, r7, lsl r0
    9730:	0112051d 	tsteq	r2, sp, lsl r5
    9734:	000003a7 	andeq	r0, r0, r7, lsr #7
    9738:	100027cc 	andne	r2, r0, ip, asr #15
    973c:	100027f4 	strdne	r2, [r0], -r4
    9740:	000090b6 	strheq	r9, [r0], -r6
    9744:	00369901 	eorseq	r9, r6, r1, lsl #18
    9748:	22fe1b00 	rscscs	r1, lr, #0, 22
    974c:	1d010000 	stcne	0, cr0, [r1, #-0]
    9750:	00ea3405 	rsceq	r3, sl, r5, lsl #8
    9754:	90f20000 	rscsls	r0, r2, r0
    9758:	90ee0000 	rscls	r0, lr, r0
    975c:	a21b0000 	andsge	r0, fp, #0
    9760:	01000019 	tsteq	r0, r9, lsl r0
    9764:	be38051e 	mrclt	5, 1, r0, cr8, cr14, {0}
    9768:	17000000 	strne	r0, [r0, -r0]
    976c:	13000091 	movwne	r0, #145	; 0x91
    9770:	1b000091 	blne	99bc <__HEAP_SIZE+0x89bc>
    9774:	00001906 	andeq	r1, r0, r6, lsl #18
    9778:	42051f01 	andmi	r1, r5, #1, 30
    977c:	00000035 	andeq	r0, r0, r5, lsr r0
    9780:	0000913c 	andeq	r9, r0, ip, lsr r1
    9784:	00009138 	andeq	r9, r0, r8, lsr r1
    9788:	001e8c1b 	andseq	r8, lr, fp, lsl ip
    978c:	05200100 	streq	r0, [r0, #-256]!	; 0xffffff00
    9790:	0000a132 	andeq	sl, r0, r2, lsr r1
    9794:	00916100 	addseq	r6, r1, r0, lsl #2
    9798:	00915d00 	addseq	r5, r1, r0, lsl #26
    979c:	147a1900 	ldrbtne	r1, [sl], #-2304	; 0xfffff700
    97a0:	21010000 	mrscs	r0, (UNDEF: 1)
    97a4:	012f3105 			; <UNDEFINED> instruction: 0x012f3105
    97a8:	91020000 	mrsls	r0, (UNDEF: 2)
    97ac:	1b2d1900 	blne	b4fbb4 <__RAM_SIZE+0xa4fbb4>
    97b0:	22010000 	andcs	r0, r1, #0
    97b4:	05c13905 	strbeq	r3, [r1, #2309]	; 0x905
    97b8:	91020000 	mrsls	r0, (UNDEF: 2)
    97bc:	1d211904 			; <UNDEFINED> instruction: 0x1d211904
    97c0:	23010000 	movwcs	r0, #4096	; 0x1000
    97c4:	08f63a05 	ldmeq	r6!, {r0, r2, r9, fp, ip, sp}^
    97c8:	91020000 	mrsls	r0, (UNDEF: 2)
    97cc:	1a211608 	bne	84eff4 <__RAM_SIZE+0x74eff4>
    97d0:	25010000 	strcs	r0, [r1, #-0]
    97d4:	03a71605 			; <UNDEFINED> instruction: 0x03a71605
    97d8:	91020000 	mrsls	r0, (UNDEF: 2)
    97dc:	1b3c1874 	blne	f0f9b4 <__RAM_SIZE+0xe0f9b4>
    97e0:	26010000 	strcs	r0, [r1], -r0
    97e4:	06661105 	strbteq	r1, [r6], -r5, lsl #2
    97e8:	91840000 	orrls	r0, r4, r0
    97ec:	91820000 	orrls	r0, r2, r0
    97f0:	e81e0000 	ldmda	lr, {}	; <UNPREDICTABLE>
    97f4:	99100027 	ldmdbls	r0, {r0, r1, r2, r5}
    97f8:	8f000036 	svchi	0x00000036
    97fc:	1f000036 	svcne	0x00000036
    9800:	f3035001 	vhadd.u8	d5, d3, d1
    9804:	011f5001 	tsteq	pc, r1
    9808:	01f30351 	mvnseq	r0, r1, asr r3
    980c:	52011f51 	andpl	r1, r1, #324	; 0x144
    9810:	5201f303 	andpl	pc, r1, #201326592	; 0xc000000
    9814:	0353011f 	cmpeq	r3, #-1073741817	; 0xc0000007
    9818:	1f5301f3 	svcne	0x005301f3
    981c:	02007d02 	andeq	r7, r0, #2, 26	; 0x80
    9820:	021f0074 	andseq	r0, pc, #116	; 0x74
    9824:	9103047d 	tstls	r3, sp, ror r4
    9828:	021f0604 	andseq	r0, pc, #4, 12	; 0x400000
    982c:	9103087d 	tstls	r3, sp, ror r8
    9830:	021f0608 	andseq	r0, pc, #8, 12	; 0x800000
    9834:	91020c7d 	tstls	r2, sp, ror ip
    9838:	ee1d0074 	mrc	0, 0, r0, cr13, cr4, {3}
    983c:	3e100027 	cdpcc	0, 1, cr0, cr0, cr7, {1}
    9840:	00000031 	andeq	r0, r0, r1, lsr r0
    9844:	0018582d 	andseq	r5, r8, sp, lsr #16
    9848:	04e60100 	strbteq	r0, [r6], #256	; 0x100
    984c:	06660114 			; <UNDEFINED> instruction: 0x06660114
    9850:	24da0000 	ldrbcs	r0, [sl], #0
    9854:	252c1000 	strcs	r1, [ip, #-0]!
    9858:	91971000 	orrsls	r1, r7, r0
    985c:	d4010000 	strle	r0, [r1], #-0
    9860:	1b000037 	blne	9944 <__HEAP_SIZE+0x8944>
    9864:	000022fe 	strdeq	r2, [r0], -lr
    9868:	3804e601 	stmdacc	r4, {r0, r9, sl, sp, lr, pc}
    986c:	000000ea 	andeq	r0, r0, sl, ror #1
    9870:	000091e9 	andeq	r9, r0, r9, ror #3
    9874:	000091db 	ldrdeq	r9, [r0], -fp
    9878:	0019a21b 	andseq	sl, r9, fp, lsl r2
    987c:	04e70100 	strbteq	r0, [r7], #256	; 0x100
    9880:	0000be3c 	andeq	fp, r0, ip, lsr lr
    9884:	00924c00 	addseq	r4, r2, r0, lsl #24
    9888:	00924400 	addseq	r4, r2, r0, lsl #8
    988c:	19061b00 	stmdbne	r6, {r8, r9, fp, ip}
    9890:	e8010000 	stmda	r1, {}	; <UNPREDICTABLE>
    9894:	00354604 	eorseq	r4, r5, r4, lsl #12
    9898:	928b0000 	addls	r0, fp, #0
    989c:	92830000 	addls	r0, r3, #0
    98a0:	8c1b0000 	ldchi	0, cr0, [fp], {-0}
    98a4:	0100001e 	tsteq	r0, lr, lsl r0
    98a8:	a13604e9 	teqge	r6, r9, ror #9
    98ac:	ca000000 	bgt	98b4 <__HEAP_SIZE+0x88b4>
    98b0:	c2000092 	andgt	r0, r0, #146	; 0x92
    98b4:	1b000092 	blne	9b04 <__HEAP_SIZE+0x8b04>
    98b8:	0000147a 	andeq	r1, r0, sl, ror r4
    98bc:	3504ea01 	strcc	lr, [r4, #-2561]	; 0xfffff5ff
    98c0:	0000012f 	andeq	r0, r0, pc, lsr #2
    98c4:	00009305 	andeq	r9, r0, r5, lsl #6
    98c8:	00009301 	andeq	r9, r0, r1, lsl #6
    98cc:	001b2d1b 	andseq	r2, fp, fp, lsl sp
    98d0:	04eb0100 	strbteq	r0, [fp], #256	; 0x100
    98d4:	0005c13d 	andeq	ip, r5, sp, lsr r1
    98d8:	00932900 	addseq	r2, r3, r0, lsl #18
    98dc:	00932500 	addseq	r2, r3, r0, lsl #10
    98e0:	1d211b00 	vstmdbne	r1!, {d1-d0}
    98e4:	ec010000 	stc	0, cr0, [r1], {-0}
    98e8:	08f63e04 	ldmeq	r6!, {r2, r9, sl, fp, ip, sp}^
    98ec:	934d0000 	movtls	r0, #53248	; 0xd000
    98f0:	93490000 	movtls	r0, #36864	; 0x9000
    98f4:	ac1b0000 	ldcge	0, cr0, [fp], {-0}
    98f8:	01000023 	tsteq	r0, r3, lsr #32
    98fc:	f93e04ed 			; <UNDEFINED> instruction: 0xf93e04ed
    9900:	71000032 	tstvc	r0, r2, lsr r0
    9904:	6d000093 	stcvs	0, cr0, [r0, #-588]	; 0xfffffdb4
    9908:	18000093 	stmdane	r0, {r0, r1, r4, r7}
    990c:	00001b3c 	andeq	r1, r0, ip, lsr fp
    9910:	1104ef01 	tstne	r4, r1, lsl #30
    9914:	00000666 	andeq	r0, r0, r6, ror #12
    9918:	00009395 	muleq	r0, r5, r3
    991c:	00009391 	muleq	r0, r1, r3
    9920:	0024fa1e 	eoreq	pc, r4, lr, lsl sl	; <UNPREDICTABLE>
    9924:	0038e610 	eorseq	lr, r8, r0, lsl r6
    9928:	00379400 	eorseq	r9, r7, r0, lsl #8
    992c:	50011f00 	andpl	r1, r1, r0, lsl #30
    9930:	1f007402 	svcne	0x00007402
    9934:	30015101 	andcc	r5, r1, r1, lsl #2
    9938:	0252011f 	subseq	r0, r2, #-1073741817	; 0xc0000007
    993c:	20004c08 	andcs	r4, r0, r8, lsl #24
    9940:	1000251c 	andne	r2, r0, ip, lsl r5
    9944:	000031b6 			; <UNDEFINED> instruction: 0x000031b6
    9948:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    994c:	011f0075 	tsteq	pc, r5, ror r0	; <UNPREDICTABLE>
    9950:	00790251 	rsbseq	r0, r9, r1, asr r2
    9954:	0252011f 	subseq	r0, r2, #-1073741817	; 0xc0000007
    9958:	011f0078 	tsteq	pc, r8, ror r0	; <UNPREDICTABLE>
    995c:	00770253 	rsbseq	r0, r7, r3, asr r2
    9960:	007d021f 	rsbseq	r0, sp, pc, lsl r2
    9964:	06009103 	streq	r9, [r0], -r3, lsl #2
    9968:	047d021f 	ldrbteq	r0, [sp], #-543	; 0xfffffde1
    996c:	060c9103 	streq	r9, [ip], -r3, lsl #2
    9970:	087d021f 	ldmdaeq	sp!, {r0, r1, r2, r3, r4, r9}^
    9974:	1f007402 	svcne	0x00007402
    9978:	010c7d02 	tsteq	ip, r2, lsl #26
    997c:	2f000030 	svccs	0x00000030
    9980:	0a240101 	beq	909d8c <__RAM_SIZE+0x809d8c>
    9984:	0a240000 	beq	90998c <__RAM_SIZE+0x80998c>
    9988:	f7080000 			; <UNDEFINED> instruction: 0xf7080000
    998c:	012f0d01 			; <UNDEFINED> instruction: 0x012f0d01
    9990:	000a3f01 	andeq	r3, sl, r1, lsl #30
    9994:	000a3f00 	andeq	r3, sl, r0, lsl #30
    9998:	01d10800 	bicseq	r0, r1, r0, lsl #16
    999c:	01013006 	tsteq	r1, r6
    99a0:	00000bdb 	ldrdeq	r0, [r0], -fp
    99a4:	00000bdb 	ldrdeq	r0, [r0], -fp
    99a8:	300d7106 	andcc	r7, sp, r6, lsl #2
    99ac:	0a4b0101 	beq	12c9db8 <__RAM_SIZE+0x11c9db8>
    99b0:	0a4b0000 	beq	12c99b8 <__RAM_SIZE+0x11c99b8>
    99b4:	72060000 	andvc	r0, r6, #0
    99b8:	0101300d 	tsteq	r1, sp
    99bc:	00000f85 	andeq	r0, r0, r5, lsl #31
    99c0:	00000f85 	andeq	r0, r0, r5, lsl #31
    99c4:	30117406 	andscc	r7, r1, r6, lsl #8
    99c8:	0c910101 	ldfeqs	f0, [r1], {1}
    99cc:	0c910000 	ldceq	0, cr0, [r1], {0}
    99d0:	75060000 	strvc	r0, [r6, #-0]
    99d4:	0101300d 	tsteq	r1, sp
    99d8:	00000a86 	andeq	r0, r0, r6, lsl #21
    99dc:	00000a86 	andeq	r0, r0, r6, lsl #21
    99e0:	300d6f06 	andcc	r6, sp, r6, lsl #30
    99e4:	11c90101 	bicne	r0, r9, r1, lsl #2
    99e8:	11c90000 	bicne	r0, r9, r0
    99ec:	b80a0000 	stmdalt	sl, {}	; <UNPREDICTABLE>
    99f0:	01012f06 	tsteq	r1, r6, lsl #30
    99f4:	000009a3 	andeq	r0, r0, r3, lsr #19
    99f8:	000009a3 	andeq	r0, r0, r3, lsr #19
    99fc:	0601b908 	streq	fp, [r1], -r8, lsl #18
    9a00:	9501012f 	strls	r0, [r1, #-303]	; 0xfffffed1
    9a04:	95000020 	strls	r0, [r0, #-32]	; 0xffffffe0
    9a08:	06000020 	streq	r0, [r0], -r0, lsr #32
    9a0c:	2f110177 	svccs	0x00110177
    9a10:	23370101 	teqcs	r7, #1073741824	; 0x40000000
    9a14:	23370000 	teqcs	r7, #0
    9a18:	c70b0000 	strgt	r0, [fp, -r0]
    9a1c:	01300e01 	teqeq	r0, r1, lsl #28
    9a20:	001f2301 	andseq	r2, pc, r1, lsl #6
    9a24:	001f2300 	andseq	r2, pc, r0, lsl #6
    9a28:	06e30a00 	strbteq	r0, [r3], r0, lsl #20
    9a2c:	0b01012f 	bleq	49ef0 <__HEAP_SIZE+0x48ef0>
    9a30:	0b000017 	bleq	9a94 <__HEAP_SIZE+0x8a94>
    9a34:	0b000017 	bleq	9a98 <__HEAP_SIZE+0x8a98>
    9a38:	300c0548 	andcc	r0, ip, r8, asr #10
    9a3c:	14660101 	strbtne	r0, [r6], #-257	; 0xfffffeff
    9a40:	14660000 	strbtne	r0, [r6], #-0
    9a44:	dc0a0000 	stcle	0, cr0, [sl], {-0}
    9a48:	01012f0c 	tsteq	r1, ip, lsl #30
    9a4c:	0000098d 	andeq	r0, r0, sp, lsl #19
    9a50:	0000098d 	andeq	r0, r0, sp, lsl #19
    9a54:	0601e708 	streq	lr, [r1], -r8, lsl #14
    9a58:	ae010130 	fltgesp	f1, r0
    9a5c:	ae000000 	cdpge	0, 0, cr0, cr0, cr0, {0}
    9a60:	0c000000 	stceq	0, cr0, [r0], {-0}
    9a64:	012f0921 			; <UNDEFINED> instruction: 0x012f0921
    9a68:	00096901 	andeq	r6, r9, r1, lsl #18
    9a6c:	00096900 	andeq	r6, r9, r0, lsl #18
    9a70:	01c40800 	biceq	r0, r4, r0, lsl #16
    9a74:	01013006 	tsteq	r1, r6
    9a78:	00001b98 	muleq	r0, r8, fp
    9a7c:	00001b98 	muleq	r0, r8, fp
    9a80:	3017800a 	andscc	r8, r7, sl
    9a84:	0d000101 	stfeqs	f0, [r0, #-4]
    9a88:	0d000000 	stceq	0, cr0, [r0, #-0]
    9a8c:	b50a0000 	strlt	r0, [sl, #-0]
    9a90:	01013108 	tsteq	r1, r8, lsl #2
    9a94:	000000ae 	andeq	r0, r0, lr, lsr #1
    9a98:	000000a4 	andeq	r0, r0, r4, lsr #1
    9a9c:	8c00000d 	stchi	0, cr0, [r0], {13}
    9aa0:	02000019 	andeq	r0, r0, #25
    9aa4:	00125e00 	andseq	r5, r2, r0, lsl #28
    9aa8:	89010400 	stmdbhi	r1, {sl}
    9aac:	0c000001 	stceq	0, cr0, [r0], {1}
    9ab0:	00002570 	andeq	r2, r0, r0, ror r5
    9ab4:	0000038d 	andeq	r0, r0, sp, lsl #7
    9ab8:	00000a10 	andeq	r0, r0, r0, lsl sl
	...
    9ac4:	00006fca 	andeq	r6, r0, sl, asr #31
    9ac8:	00050c02 	andeq	r0, r5, r2, lsl #24
    9acc:	17d10200 	ldrbne	r0, [r1, r0, lsl #4]
    9ad0:	00000035 	andeq	r0, r0, r5, lsr r0
    9ad4:	cf070403 	svcgt	0x00070403
    9ad8:	04000002 	streq	r0, [r0], #-2
    9adc:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
    9ae0:	08030074 	stmdaeq	r3, {r2, r4, r5, r6}
    9ae4:	00012705 	andeq	r2, r1, r5, lsl #14
    9ae8:	04080300 	streq	r0, [r8], #-768	; 0xfffffd00
    9aec:	00000063 	andeq	r0, r0, r3, rrx
    9af0:	73060103 	movwvc	r0, #24835	; 0x6103
    9af4:	02000002 	andeq	r0, r0, #2
    9af8:	0000017f 	andeq	r0, r0, pc, ror r1
    9afc:	64182b03 	ldrvs	r2, [r8], #-2819	; 0xfffff4fd
    9b00:	03000000 	movweq	r0, #0
    9b04:	02710801 	rsbseq	r0, r1, #65536	; 0x10000
    9b08:	02030000 	andeq	r0, r3, #0
    9b0c:	00003205 	andeq	r3, r0, r5, lsl #4
    9b10:	07020300 	streq	r0, [r2, -r0, lsl #6]
    9b14:	00000322 	andeq	r0, r0, r2, lsr #6
    9b18:	2c050403 	cfstrscs	mvf0, [r5], {3}
    9b1c:	02000001 	andeq	r0, r0, #1
    9b20:	0000006f 	andeq	r0, r0, pc, rrx
    9b24:	8c194f03 	ldchi	15, cr4, [r9], {3}
    9b28:	03000000 	movweq	r0, #0
    9b2c:	02ca0704 	sbceq	r0, sl, #4, 14	; 0x100000
    9b30:	08030000 	stmdaeq	r3, {}	; <UNPREDICTABLE>
    9b34:	0002c507 	andeq	ip, r2, r7, lsl #10
    9b38:	06040500 	streq	r0, [r4], -r0, lsl #10
    9b3c:	0000009a 	muleq	r0, sl, r0
    9b40:	7a080103 	bvc	209f54 <__RAM_SIZE+0x109f54>
    9b44:	06000002 	streq	r0, [r0], -r2
    9b48:	000000a1 	andeq	r0, r0, r1, lsr #1
    9b4c:	00a80407 	adceq	r0, r8, r7, lsl #8
    9b50:	ad060000 	stcge	0, cr0, [r6, #-0]
    9b54:	02000000 	andeq	r0, r0, #0
    9b58:	00000181 	andeq	r0, r0, r1, lsl #3
    9b5c:	58131804 	ldmdapl	r3, {r2, fp, ip}
    9b60:	02000000 	andeq	r0, r0, #0
    9b64:	00000071 	andeq	r0, r0, r1, ror r0
    9b68:	80143004 	andshi	r3, r4, r4
    9b6c:	02000000 	andeq	r0, r0, #0
    9b70:	00001c40 	andeq	r1, r0, r0, asr #24
    9b74:	dc112405 	cfldrsle	mvf2, [r1], {5}
    9b78:	07000000 	streq	r0, [r0, -r0]
    9b7c:	0000e204 	andeq	lr, r0, r4, lsl #4
    9b80:	ee010800 	cdp	8, 0, cr0, cr1, cr0, {0}
    9b84:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    9b88:	0000009a 	muleq	r0, sl, r0
    9b8c:	15670200 	strbne	r0, [r7, #-512]!	; 0xfffffe00
    9b90:	49060000 	stmdbmi	r6, {}	; <UNPREDICTABLE>
    9b94:	0000c41a 	andeq	ip, r0, sl, lsl r4
    9b98:	09cd0200 	stmibeq	sp, {r9}^
    9b9c:	4a060000 	bmi	189ba4 <__RAM_SIZE+0x89ba4>
    9ba0:	0000791a 	andeq	r7, r0, sl, lsl r9
    9ba4:	00fa0600 	rscseq	r0, sl, r0, lsl #12
    9ba8:	cc020000 	stcgt	0, cr0, [r2], {-0}
    9bac:	06000009 	streq	r0, [r0], -r9
    9bb0:	008c1a4b 	addeq	r1, ip, fp, asr #20
    9bb4:	28020000 	stmdacs	r2, {}	; <UNPREDICTABLE>
    9bb8:	06000009 	streq	r0, [r0], -r9
    9bbc:	00c41a51 	sbceq	r1, r4, r1, asr sl
    9bc0:	17060000 	strne	r0, [r6, -r0]
    9bc4:	0a000001 	beq	9bd0 <__HEAP_SIZE+0x8bd0>
    9bc8:	0000122c 	andeq	r1, r0, ip, lsr #4
    9bcc:	0c0c0714 	stceq	7, cr0, [ip], {20}
    9bd0:	00015708 	andeq	r5, r1, r8, lsl #14
    9bd4:	0dcd0b00 	vstreq	d16, [sp]
    9bd8:	11070000 	mrsne	r0, (UNDEF: 7)
    9bdc:	0117100c 	tsteq	r7, ip
    9be0:	23020000 	movwcs	r0, #8192	; 0x2000
    9be4:	0dc30b00 	vstreq	d16, [r3]
    9be8:	12070000 	andne	r0, r7, #0
    9bec:	01570c0c 	cmpeq	r7, ip, lsl #24
    9bf0:	23020000 	movwcs	r0, #8192	; 0x2000
    9bf4:	9a0c0004 	bls	309c0c <__RAM_SIZE+0x209c0c>
    9bf8:	67000000 	strvs	r0, [r0, -r0]
    9bfc:	0d000001 	stceq	0, cr0, [r0, #-4]
    9c00:	00000035 	andeq	r0, r0, r5, lsr r0
    9c04:	3f0e0003 	svccc	0x000e0003
    9c08:	07000019 	smladeq	r0, r9, r0, r0
    9c0c:	28220c17 	stmdacs	r2!, {r0, r1, r2, r4, sl, fp}
    9c10:	0e000001 	cdpeq	0, 0, cr0, cr0, cr1, {0}
    9c14:	00000b72 	andeq	r0, r0, r2, ror fp
    9c18:	2b0c2507 	blcs	31303c <__RAM_SIZE+0x21303c>
    9c1c:	00000128 	andeq	r0, r0, r8, lsr #2
    9c20:	000fbe0a 	andeq	fp, pc, sl, lsl #28
    9c24:	29071c00 	stmdbcs	r7, {sl, fp, ip}
    9c28:	01c0100c 	biceq	r1, r0, ip
    9c2c:	cc0b0000 	stcgt	0, cr0, [fp], {-0}
    9c30:	0700000d 	streq	r0, [r0, -sp]
    9c34:	0b110c2e 	bleq	44ccf4 <__RAM_SIZE+0x34ccf4>
    9c38:	02000001 	andeq	r0, r0, #1
    9c3c:	c30b0023 	movwgt	r0, #45091	; 0xb023
    9c40:	0700000d 	streq	r0, [r0, -sp]
    9c44:	9a0c0c2f 	bls	30cd08 <__RAM_SIZE+0x20cd08>
    9c48:	02000000 	andeq	r0, r0, #0
    9c4c:	df0b0423 	svcle	0x000b0423
    9c50:	0700000d 	streq	r0, [r0, -sp]
    9c54:	741a0c30 	ldrvc	r0, [sl], #-3120	; 0xfffff3d0
    9c58:	02000001 	andeq	r0, r0, #1
    9c5c:	0e000823 	cdpeq	8, 0, cr0, cr0, cr3, {1}
    9c60:	000013e5 	andeq	r1, r0, r5, ror #7
    9c64:	030c3407 	movweq	r3, #50183	; 0xc407
    9c68:	00000181 	andeq	r0, r0, r1, lsl #3
    9c6c:	001f5b0a 	andseq	r5, pc, sl, lsl #22
    9c70:	43074c00 	movwmi	r4, #31744	; 0x7c00
    9c74:	028c100c 	addeq	r1, ip, #12
    9c78:	ae0b0000 	cdpge	0, 0, cr0, cr11, cr0, {0}
    9c7c:	0700001b 	smladeq	r0, fp, r0, r0
    9c80:	9a0c0c45 	bls	30cd9c <__RAM_SIZE+0x20cd9c>
    9c84:	02000000 	andeq	r0, r0, #0
    9c88:	f10b0023 			; <UNDEFINED> instruction: 0xf10b0023
    9c8c:	07000012 	smladeq	r0, r2, r0, r0
    9c90:	8c160c4c 	ldchi	12, cr0, [r6], {76}	; 0x4c
    9c94:	02000002 	andeq	r0, r0, #2
    9c98:	c30b0423 	movwgt	r0, #46115	; 0xb423
    9c9c:	07000019 	smladeq	r0, r9, r0, r0
    9ca0:	0b110c4d 	bleq	44cddc <__RAM_SIZE+0x34cddc>
    9ca4:	02000001 	andeq	r0, r0, #1
    9ca8:	c10b2c23 	tstgt	fp, r3, lsr #24
    9cac:	0700001b 	smladeq	r0, fp, r0, r0
    9cb0:	9a0c0c4e 	bls	30cdf0 <__RAM_SIZE+0x20cdf0>
    9cb4:	02000000 	andeq	r0, r0, #0
    9cb8:	b20b3023 	andlt	r3, fp, #35	; 0x23
    9cbc:	0700001d 	smladeq	r0, sp, r0, r0
    9cc0:	9c0d0c53 	stcls	12, cr0, [sp], {83}	; 0x53
    9cc4:	02000002 	andeq	r0, r0, #2
    9cc8:	c60b3423 	strgt	r3, [fp], -r3, lsr #8
    9ccc:	07000014 	smladeq	r0, r4, r0, r0
    9cd0:	ac150c61 	ldcge	12, cr0, [r5], {97}	; 0x61
    9cd4:	02000002 	andeq	r0, r0, #2
    9cd8:	630b3823 	movwvs	r3, #47139	; 0xb823
    9cdc:	0700001d 	smladeq	r0, sp, r0, r0
    9ce0:	9a100c64 	bls	40ce78 <__RAM_SIZE+0x30ce78>
    9ce4:	02000000 	andeq	r0, r0, #0
    9ce8:	8a0b4023 	bhi	2d9d7c <__RAM_SIZE+0x1d9d7c>
    9cec:	0700001f 	smladeq	r0, pc, r0, r0	; <UNPREDICTABLE>
    9cf0:	bc120c70 	ldclt	12, cr0, [r2], {112}	; 0x70
    9cf4:	02000002 	andeq	r0, r0, #2
    9cf8:	b70b4423 	strlt	r4, [fp, -r3, lsr #8]
    9cfc:	0700001b 	smladeq	r0, fp, r0, r0
    9d00:	cc110c71 	ldcgt	12, cr0, [r1], {113}	; 0x71
    9d04:	02000002 	andeq	r0, r0, #2
    9d08:	e50b4823 	str	r4, [fp, #-2083]	; 0xfffff7dd
    9d0c:	07000015 	smladeq	r0, r5, r0, r0
    9d10:	b8110c74 	ldmdalt	r1, {r2, r4, r5, r6, sl, fp}
    9d14:	02000000 	andeq	r0, r0, #0
    9d18:	8f0b4923 	svchi	0x000b4923
    9d1c:	0700001c 	smladeq	r0, ip, r0, r0
    9d20:	b8110c78 	ldmdalt	r1, {r3, r4, r5, r6, sl, fp}
    9d24:	02000000 	andeq	r0, r0, #0
    9d28:	0c004a23 			; <UNDEFINED> instruction: 0x0c004a23
    9d2c:	00000167 	andeq	r0, r0, r7, ror #2
    9d30:	0000029c 	muleq	r0, ip, r2
    9d34:	0000350d 	andeq	r3, r0, sp, lsl #10
    9d38:	0c000100 	stfeqs	f0, [r0], {-0}
    9d3c:	000000b8 	strheq	r0, [r0], -r8
    9d40:	000002ac 	andeq	r0, r0, ip, lsr #5
    9d44:	0000350d 	andeq	r3, r0, sp, lsl #10
    9d48:	0c000300 	stceq	3, cr0, [r0], {-0}
    9d4c:	0000010b 	andeq	r0, r0, fp, lsl #2
    9d50:	000002bc 			; <UNDEFINED> instruction: 0x000002bc
    9d54:	0000350d 	andeq	r3, r0, sp, lsl #10
    9d58:	0c000100 	stfeqs	f0, [r0], {-0}
    9d5c:	000000c4 	andeq	r0, r0, r4, asr #1
    9d60:	000002cc 	andeq	r0, r0, ip, asr #5
    9d64:	0000350d 	andeq	r3, r0, sp, lsl #10
    9d68:	0c000000 	stceq	0, cr0, [r0], {-0}
    9d6c:	000000b8 	strheq	r0, [r0], -r8
    9d70:	000002dc 	ldrdeq	r0, [r0], -ip
    9d74:	0000350d 	andeq	r3, r0, sp, lsl #10
    9d78:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
    9d7c:	00001410 	andeq	r1, r0, r0, lsl r4
    9d80:	030c7d07 	movweq	r7, #52487	; 0xcd07
    9d84:	000001cd 	andeq	r0, r0, sp, asr #3
    9d88:	9107040f 	tstls	r7, pc, lsl #8
    9d8c:	030e050c 	movweq	r0, #58636	; 0xe50c
    9d90:	ba100000 	blt	409d98 <__RAM_SIZE+0x309d98>
    9d94:	0700000d 	streq	r0, [r0, -sp]
    9d98:	9a100c93 	bls	40cfec <__RAM_SIZE+0x30cfec>
    9d9c:	10000000 	andne	r0, r0, r0
    9da0:	00000dcc 	andeq	r0, r0, ip, asr #27
    9da4:	150c9407 	strne	r9, [ip, #-1031]	; 0xfffffbf9
    9da8:	0000010b 	andeq	r0, r0, fp, lsl #2
    9dac:	13ab0a00 			; <UNDEFINED> instruction: 0x13ab0a00
    9db0:	075c0000 	ldrbeq	r0, [ip, -r0]
    9db4:	8b100c8d 	blhi	40cff0 <__RAM_SIZE+0x30cff0>
    9db8:	0b000003 	bleq	9dcc <__HEAP_SIZE+0x8dcc>
    9dbc:	00000db1 			; <UNDEFINED> instruction: 0x00000db1
    9dc0:	0c0c8f07 	stceq	15, cr8, [ip], {7}
    9dc4:	0000038b 	andeq	r0, r0, fp, lsl #7
    9dc8:	11002302 	tstne	r0, r2, lsl #6
    9dcc:	95070075 	strls	r0, [r7, #-117]	; 0xffffff8b
    9dd0:	02e9070c 	rsceq	r0, r9, #12, 14	; 0x300000
    9dd4:	23020000 	movwcs	r0, #8192	; 0x2000
    9dd8:	12f10b0c 	rscsne	r0, r1, #12, 22	; 0x3000
    9ddc:	97070000 	strls	r0, [r7, -r0]
    9de0:	039b120c 	orrseq	r1, fp, #12, 4	; 0xc0000000
    9de4:	23020000 	movwcs	r0, #8192	; 0x2000
    9de8:	0dde0b10 	vldreq	d16, [lr, #64]	; 0x40
    9dec:	98070000 	stmdals	r7, {}	; <UNPREDICTABLE>
    9df0:	03ab110c 			; <UNDEFINED> instruction: 0x03ab110c
    9df4:	23020000 	movwcs	r0, #8192	; 0x2000
    9df8:	11000b48 	tstne	r0, r8, asr #22
    9dfc:	99070000 	stmdbls	r7, {}	; <UNPREDICTABLE>
    9e00:	03bb0d0c 			; <UNDEFINED> instruction: 0x03bb0d0c
    9e04:	23020000 	movwcs	r0, #8192	; 0x2000
    9e08:	11090b54 	tstne	r9, r4, asr fp
    9e0c:	9c070000 	stcls	0, cr0, [r7], {-0}
    9e10:	00b8110c 	adcseq	r1, r8, ip, lsl #2
    9e14:	23020000 	movwcs	r0, #8192	; 0x2000
    9e18:	0dd50b56 	vldreq	d16, [r5, #344]	; 0x158
    9e1c:	a0070000 	andge	r0, r7, r0
    9e20:	009a100c 	addseq	r1, sl, ip
    9e24:	23020000 	movwcs	r0, #8192	; 0x2000
    9e28:	9a0c0058 	bls	309f90 <__RAM_SIZE+0x209f90>
    9e2c:	9b000000 	blls	9e34 <__HEAP_SIZE+0x8e34>
    9e30:	0d000003 	stceq	0, cr0, [r0, #-12]
    9e34:	00000035 	andeq	r0, r0, r5, lsr r0
    9e38:	c00c0002 	andgt	r0, ip, r2
    9e3c:	ab000001 	blge	9e48 <__HEAP_SIZE+0x8e48>
    9e40:	0d000003 	stceq	0, cr0, [r0, #-12]
    9e44:	00000035 	andeq	r0, r0, r5, lsr r0
    9e48:	0b0c0001 	bleq	309e54 <__RAM_SIZE+0x209e54>
    9e4c:	bb000001 	bllt	9e58 <__HEAP_SIZE+0x8e58>
    9e50:	0d000003 	stceq	0, cr0, [r0, #-12]
    9e54:	00000035 	andeq	r0, r0, r5, lsr r0
    9e58:	b80c0002 	stmdalt	ip, {r1}
    9e5c:	cb000000 	blgt	9e64 <__HEAP_SIZE+0x8e64>
    9e60:	0d000003 	stceq	0, cr0, [r0, #-12]
    9e64:	00000035 	andeq	r0, r0, r5, lsr r0
    9e68:	ee0e0001 	cdp	0, 0, cr0, cr14, cr1, {0}
    9e6c:	0700000f 	streq	r0, [r0, -pc]
    9e70:	0e030ca7 	cdpeq	12, 0, cr0, cr3, cr7, {5}
    9e74:	0a000003 	beq	9e88 <__HEAP_SIZE+0x8e88>
    9e78:	000024fb 	strdeq	r2, [r0], -fp
    9e7c:	0cd40728 	ldcleq	7, cr0, [r4], {40}	; 0x28
    9e80:	00044710 	andeq	r4, r4, r0, lsl r7
    9e84:	0db10b00 			; <UNDEFINED> instruction: 0x0db10b00
    9e88:	d6070000 	strle	r0, [r7], -r0
    9e8c:	009a0c0c 	addseq	r0, sl, ip, lsl #24
    9e90:	23020000 	movwcs	r0, #8192	; 0x2000
    9e94:	0dcd0b00 	vstreq	d16, [sp]
    9e98:	d7070000 	strle	r0, [r7, -r0]
    9e9c:	0167160c 	cmneq	r7, ip, lsl #12
    9ea0:	23020000 	movwcs	r0, #8192	; 0x2000
    9ea4:	12f10b04 	rscsne	r0, r1, #4, 22	; 0x1000
    9ea8:	d8070000 	stmdale	r7, {}	; <UNPREDICTABLE>
    9eac:	0117100c 	tsteq	r7, ip
    9eb0:	23020000 	movwcs	r0, #8192	; 0x2000
    9eb4:	26ac0b18 	ssatcs	r0, #13, r8, lsl #22
    9eb8:	d9070000 	stmdble	r7, {}	; <UNPREDICTABLE>
    9ebc:	009a0c0c 	addseq	r0, sl, ip, lsl #24
    9ec0:	23020000 	movwcs	r0, #8192	; 0x2000
    9ec4:	25f50b1c 	ldrbcs	r0, [r5, #2844]!	; 0xb1c
    9ec8:	da070000 	ble	1c9ed0 <__RAM_SIZE+0xc9ed0>
    9ecc:	00d0140c 	sbcseq	r1, r0, ip, lsl #8
    9ed0:	23020000 	movwcs	r0, #8192	; 0x2000
    9ed4:	27c90b20 	strbcs	r0, [r9, r0, lsr #22]
    9ed8:	de070000 	cdple	0, 0, cr0, cr7, cr0, {0}
    9edc:	00b80d0c 	adcseq	r0, r8, ip, lsl #26
    9ee0:	23020000 	movwcs	r0, #8192	; 0x2000
    9ee4:	ed0e0024 	stc	0, cr0, [lr, #-144]	; 0xffffff70
    9ee8:	07000024 	streq	r0, [r0, -r4, lsr #32]
    9eec:	d8030cdf 	stmdale	r3, {r0, r1, r2, r3, r4, r6, r7, sl, fp}
    9ef0:	12000003 	andne	r0, r0, #3
    9ef4:	0000094f 	andeq	r0, r0, pc, asr #18
    9ef8:	08900814 	ldmeq	r0, {r2, r4, fp}
    9efc:	000004ad 	andeq	r0, r0, sp, lsr #9
    9f00:	00093313 	andeq	r3, r9, r3, lsl r3
    9f04:	24930800 	ldrcs	r0, [r3], #2048	; 0x800
    9f08:	00000117 	andeq	r0, r0, r7, lsl r1
    9f0c:	13002302 	movwne	r2, #770	; 0x302
    9f10:	0000099c 	muleq	r0, ip, r9
    9f14:	ad2d9408 	cfstrsge	mvf9, [sp, #-32]!	; 0xffffffe0
    9f18:	02000004 	andeq	r0, r0, #4
    9f1c:	eb130423 	bl	4cafb0 <__RAM_SIZE+0x3cafb0>
    9f20:	08000009 	stmdaeq	r0, {r0, r3}
    9f24:	04ad2d95 	strteq	r2, [sp], #3477	; 0xd95
    9f28:	23020000 	movwcs	r0, #8192	; 0x2000
    9f2c:	09471308 	stmdbeq	r7, {r3, r8, r9, ip}^
    9f30:	96080000 	strls	r0, [r8], -r0
    9f34:	00009a0c 	andeq	r9, r0, ip, lsl #20
    9f38:	0c230200 	sfmeq	f0, 4, [r3], #-0
    9f3c:	00091c13 	andeq	r1, r9, r3, lsl ip
    9f40:	28970800 	ldmcs	r7, {fp}
    9f44:	000004ee 	andeq	r0, r0, lr, ror #9
    9f48:	00102302 	andseq	r2, r0, r2, lsl #6
    9f4c:	04540407 	ldrbeq	r0, [r4], #-1031	; 0xfffffbf9
    9f50:	1e120000 	cdpne	0, 1, cr0, cr2, cr0, {0}
    9f54:	1c00000a 	stcne	0, cr0, [r0], {10}
    9f58:	ee10ac08 	cdp	12, 1, cr10, cr0, cr8, {0}
    9f5c:	13000004 	movwne	r0, #4
    9f60:	0000097d 	andeq	r0, r0, sp, ror r9
    9f64:	0b25af08 	bleq	975b8c <__RAM_SIZE+0x875b8c>
    9f68:	02000001 	andeq	r0, r0, #1
    9f6c:	e3130023 	tst	r3, #35	; 0x23
    9f70:	08000009 	stmdaeq	r0, {r0, r3}
    9f74:	050c26b0 	streq	r2, [ip, #-1712]	; 0xfffff950
    9f78:	23020000 	movwcs	r0, #8192	; 0x2000
    9f7c:	093e1304 	ldmdbeq	lr!, {r2, r8, r9, ip}
    9f80:	b1080000 	mrslt	r0, (UNDEF: 8)
    9f84:	00050014 	andeq	r0, r5, r4, lsl r0
    9f88:	08230200 	stmdaeq	r3!, {r9}
    9f8c:	b3040700 	movwlt	r0, #18176	; 0x4700
    9f90:	02000004 	andeq	r0, r0, #4
    9f94:	00001945 	andeq	r1, r0, r5, asr #18
    9f98:	541b9a08 	ldrpl	r9, [fp], #-2568	; 0xfffff5f8
    9f9c:	02000004 	andeq	r0, r0, #4
    9fa0:	00000b78 	andeq	r0, r0, r8, ror fp
    9fa4:	5424a608 	strtpl	sl, [r4], #-1544	; 0xfffff9f8
    9fa8:	07000004 	streq	r0, [r0, -r4]
    9fac:	0004f404 	andeq	pc, r4, r4, lsl #8
    9fb0:	13eb0200 	mvnne	r0, #0, 4
    9fb4:	b3080000 	movwlt	r0, #32768	; 0x8000
    9fb8:	0004b303 	andeq	fp, r4, r3, lsl #6
    9fbc:	02f20200 	rscseq	r0, r2, #0, 4
    9fc0:	5c090000 	stcpl	0, cr0, [r9], {-0}
    9fc4:	00052a2e 	andeq	r2, r5, lr, lsr #20
    9fc8:	30040700 	andcc	r0, r4, r0, lsl #14
    9fcc:	14000005 	strne	r0, [r0], #-5
    9fd0:	0000016b 	andeq	r0, r0, fp, ror #2
    9fd4:	ee040701 	cdp	7, 0, cr0, cr4, cr1, {0}
    9fd8:	02000000 	andeq	r0, r0, #0
    9fdc:	00000f10 	andeq	r0, r0, r0, lsl pc
    9fe0:	4824330a 	stmdami	r4!, {r1, r3, r8, r9, ip, sp}
    9fe4:	07000005 	streq	r0, [r0, -r5]
    9fe8:	00054e04 	andeq	r4, r5, r4, lsl #28
    9fec:	0c811400 	cfstrseq	mvf1, [r1], {0}
    9ff0:	02010000 	andeq	r0, r1, #0
    9ff4:	000025a8 	andeq	r2, r0, r8, lsr #11
    9ff8:	65224e0b 	strvs	r4, [r2, #-3595]!	; 0xfffff1f5
    9ffc:	06000005 	streq	r0, [r0], -r5
    a000:	00000554 	andeq	r0, r0, r4, asr r5
    a004:	056b0407 	strbeq	r0, [fp, #-1031]!	; 0xfffffbf9
    a008:	cb120000 	blgt	48a010 <__RAM_SIZE+0x38a010>
    a00c:	28000028 	stmdacs	r0, {r3, r5}
    a010:	d3145301 	tstle	r4, #67108864	; 0x4000000
    a014:	13000005 	movwne	r0, #5
    a018:	000024a0 	andeq	r2, r0, r0, lsr #9
    a01c:	ad165501 	cfldr32ge	mvfx5, [r6, #-4]
    a020:	02000000 	andeq	r0, r0, #0
    a024:	68130023 	ldmdavs	r3, {r0, r1, r5}
    a028:	01000027 	tsteq	r0, r7, lsr #32
    a02c:	04f41456 	ldrbteq	r1, [r4], #1110	; 0x456
    a030:	23020000 	movwcs	r0, #8192	; 0x2000
    a034:	242f1304 	strtcs	r1, [pc], #-772	; a03c <__HEAP_SIZE+0x903c>
    a038:	57010000 	strpl	r0, [r1, -r0]
    a03c:	00011714 	andeq	r1, r1, r4, lsl r7
    a040:	18230200 	stmdane	r3!, {r9}
    a044:	00285b13 	eoreq	r5, r8, r3, lsl fp
    a048:	10580100 	subsne	r0, r8, r0, lsl #2
    a04c:	0000009a 	muleq	r0, sl, r0
    a050:	131c2302 	tstne	ip, #134217728	; 0x8000000
    a054:	00002443 	andeq	r2, r0, r3, asr #8
    a058:	d33e5901 	teqle	lr, #16384	; 0x4000
    a05c:	02000005 	andeq	r0, r0, #5
    a060:	00132023 	andseq	r2, r3, r3, lsr #32
    a064:	01000028 	tsteq	r0, r8, lsr #32
    a068:	00b8115d 	adcseq	r1, r8, sp, asr r1
    a06c:	23020000 	movwcs	r0, #8192	; 0x2000
    a070:	1f020024 	svcne	0x00020024
    a074:	0b000025 	bleq	a110 <__HEAP_SIZE+0x9110>
    a078:	05df1153 	ldrbeq	r1, [pc, #339]	; a1d3 <__HEAP_SIZE+0x91d3>
    a07c:	04070000 	streq	r0, [r7], #-0
    a080:	000005e5 	andeq	r0, r0, r5, ror #11
    a084:	05f10108 	ldrbeq	r0, [r1, #264]!	; 0x108
    a088:	54090000 	strpl	r0, [r9], #-0
    a08c:	00000005 	andeq	r0, r0, r5
    a090:	00282e02 	eoreq	r2, r8, r2, lsl #28
    a094:	11590b00 	cmpne	r9, r0, lsl #22
    a098:	000005fd 	strdeq	r0, [r0], -sp
    a09c:	06030407 	streq	r0, [r3], -r7, lsl #8
    a0a0:	01080000 	mrseq	r0, (UNDEF: 8)
    a0a4:	00000614 	andeq	r0, r0, r4, lsl r6
    a0a8:	00009a09 	andeq	r9, r0, r9, lsl #20
    a0ac:	00c40900 	sbceq	r0, r4, r0, lsl #18
    a0b0:	02000000 	andeq	r0, r0, #0
    a0b4:	000026b5 			; <UNDEFINED> instruction: 0x000026b5
    a0b8:	6b075e01 	blvs	1e18c4 <__RAM_SIZE+0xe18c4>
    a0bc:	02000005 	andeq	r0, r0, #5
    a0c0:	000024f3 	strdeq	r2, [r0], -r3
    a0c4:	14146201 	ldrne	r6, [r4], #-513	; 0xfffffdff
    a0c8:	12000006 	andne	r0, r0, #6
    a0cc:	00002964 	andeq	r2, r0, r4, ror #18
    a0d0:	14690108 	strbtne	r0, [r9], #-264	; 0xfffffef8
    a0d4:	00000658 	andeq	r0, r0, r8, asr r6
    a0d8:	0028ad13 	eoreq	sl, r8, r3, lsl sp
    a0dc:	146b0100 	strbtne	r0, [fp], #-256	; 0xffffff00
    a0e0:	00000117 	andeq	r0, r0, r7, lsl r1
    a0e4:	13002302 	movwne	r2, #770	; 0x302
    a0e8:	000028a5 	andeq	r2, r0, r5, lsr #17
    a0ec:	58136c01 	ldmdapl	r3, {r0, sl, fp, sp, lr}
    a0f0:	02000006 	andeq	r0, r0, #6
    a0f4:	07000423 	streq	r0, [r0, -r3, lsr #8]
    a0f8:	00062004 	andeq	r2, r6, r4
    a0fc:	06580600 	ldrbeq	r0, [r8], -r0, lsl #12
    a100:	d0020000 	andle	r0, r2, r0
    a104:	01000024 	tsteq	r0, r4, lsr #32
    a108:	062c076d 	strteq	r0, [ip], -sp, ror #14
    a10c:	0f120000 	svceq	0x00120000
    a110:	0c000027 	stceq	0, cr0, [r0], {39}	; 0x27
    a114:	aa147001 	bge	526120 <__RAM_SIZE+0x426120>
    a118:	13000006 	movwne	r0, #6
    a11c:	00002443 	andeq	r2, r0, r3, asr #8
    a120:	f11a7301 			; <UNDEFINED> instruction: 0xf11a7301
    a124:	02000005 	andeq	r0, r0, #5
    a128:	bc130023 	ldclt	0, cr0, [r3], {35}	; 0x23
    a12c:	01000027 	tsteq	r0, r7, lsr #32
    a130:	009a1074 	addseq	r1, sl, r4, ror r0
    a134:	23020000 	movwcs	r0, #8192	; 0x2000
    a138:	24ac1304 	strtcs	r1, [ip], #772	; 0x304
    a13c:	75010000 	strvc	r0, [r1, #-0]
    a140:	0000c412 	andeq	ip, r0, r2, lsl r4
    a144:	08230200 	stmdaeq	r3!, {r9}
    a148:	25e00200 	strbcs	r0, [r0, #512]!	; 0x200
    a14c:	76010000 	strvc	r0, [r1], -r0
    a150:	00066f07 	andeq	r6, r6, r7, lsl #30
    a154:	06aa0600 	strteq	r0, [sl], r0, lsl #12
    a158:	0c150000 	ldceq	0, cr0, [r5], {-0}
    a15c:	dd097d01 	stcle	13, cr7, [r9, #-4]
    a160:	16000006 	strne	r0, [r0], -r6
    a164:	00002480 	andeq	r2, r0, r0, lsl #9
    a168:	631e7f01 	tstvs	lr, #1, 30
    a16c:	16000006 	strne	r0, [r0], -r6
    a170:	00002743 	andeq	r2, r0, r3, asr #14
    a174:	aa268401 	bge	9ab180 <__RAM_SIZE+0x8ab180>
    a178:	00000006 	andeq	r0, r0, r6
    a17c:	00263312 	eoreq	r3, r6, r2, lsl r3
    a180:	7a011000 	bvc	4e188 <__HEAP_SIZE+0x4d188>
    a184:	00070714 	andeq	r0, r7, r4, lsl r7
    a188:	28651300 	stmdacs	r5!, {r8, r9, ip}^
    a18c:	7c010000 	stcvc	0, cr0, [r1], {-0}
    a190:	0000fa14 	andeq	pc, r0, r4, lsl sl	; <UNPREDICTABLE>
    a194:	00230200 	eoreq	r0, r3, r0, lsl #4
    a198:	01007517 	tsteq	r0, r7, lsl r5
    a19c:	06bb0b86 	ldrteq	r0, [fp], r6, lsl #23
    a1a0:	23020000 	movwcs	r0, #8192	; 0x2000
    a1a4:	70020004 	andvc	r0, r2, r4
    a1a8:	01000028 	tsteq	r0, r8, lsr #32
    a1ac:	06dd0787 	ldrbeq	r0, [sp], r7, lsl #15
    a1b0:	bc180000 	ldclt	0, cr0, [r8], {-0}
    a1b4:	01000026 	tsteq	r0, r6, lsr #32
    a1b8:	0512238f 	ldreq	r2, [r2, #-911]	; 0xfffffc71
    a1bc:	03050000 	movweq	r0, #20480	; 0x5000
    a1c0:	38008c44 	stmdacc	r0, {r2, r6, sl, fp, pc}
    a1c4:	0026ce18 	eoreq	ip, r6, r8, lsl lr
    a1c8:	23900100 	orrscs	r0, r0, #0, 2
    a1cc:	00000512 	andeq	r0, r0, r2, lsl r5
    a1d0:	8c600305 	stclhi	3, cr0, [r0], #-20	; 0xffffffec
    a1d4:	3f183800 	svccc	0x00183800
    a1d8:	01000028 	tsteq	r0, r8, lsr #32
    a1dc:	07492591 			; <UNDEFINED> instruction: 0x07492591
    a1e0:	03050000 	movweq	r0, #20480	; 0x5000
    a1e4:	38008b9c 	stmdacc	r0, {r2, r3, r4, r7, r8, r9, fp, pc}
    a1e8:	05120407 	ldreq	r0, [r2, #-1031]	; 0xfffffbf9
    a1ec:	82180000 	andshi	r0, r8, #0
    a1f0:	01000026 	tsteq	r0, r6, lsr #32
    a1f4:	07492592 			; <UNDEFINED> instruction: 0x07492592
    a1f8:	03050000 	movweq	r0, #20480	; 0x5000
    a1fc:	38008ba0 	stmdacc	r0, {r5, r7, r8, r9, fp, pc}
    a200:	0024e118 	eoreq	lr, r4, r8, lsl r1
    a204:	2a950100 	bcs	fe54a60c <__StackTop+0xc644a60c>
    a208:	0000053c 	andeq	r0, r0, ip, lsr r5
    a20c:	8cdc0305 	ldclhi	3, cr0, [ip], {5}
    a210:	d2183800 	andsle	r3, r8, #0, 16
    a214:	01000027 	tsteq	r0, r7, lsr #32
    a218:	051e2996 	ldreq	r2, [lr, #-2454]	; 0xfffff66a
    a21c:	03050000 	movweq	r0, #20480	; 0x5000
    a220:	38008ce0 	stmdacc	r0, {r5, r6, r7, sl, fp, pc}
    a224:	28840119 	stmcs	r4, {r0, r3, r4, r8}
    a228:	32010000 	andcc	r0, r1, #0
    a22c:	00010a05 	andeq	r0, r1, r5, lsl #20
    a230:	00000000 	andeq	r0, r0, r0
    a234:	02000000 	andeq	r0, r0, #0
    a238:	1a01007d 	bne	4a434 <__HEAP_SIZE+0x49434>
    a23c:	0024b901 	eoreq	fp, r4, r1, lsl #18
    a240:	04ef0100 	strbteq	r0, [pc], #256	; a248 <__HEAP_SIZE+0x9248>
    a244:	00fa0114 	rscseq	r0, sl, r4, lsl r1
	...
    a250:	93b30000 			; <UNDEFINED> instruction: 0x93b30000
    a254:	52010000 	andpl	r0, r1, #0
    a258:	1b000008 	blne	a280 <__HEAP_SIZE+0x9280>
    a25c:	000028bb 			; <UNDEFINED> instruction: 0x000028bb
    a260:	3d04ef01 	stccc	15, cr14, [r4, #-4]
    a264:	000005f1 	strdeq	r0, [r0], -r1
    a268:	000093f1 	strdeq	r9, [r0], -r1
    a26c:	000093eb 	andeq	r9, r0, fp, ror #7
    a270:	0027bc1b 	eoreq	fp, r7, fp, lsl ip
    a274:	04f00100 	ldrbteq	r0, [r0], #256	; 0x100
    a278:	00009a33 	andeq	r9, r0, r3, lsr sl
    a27c:	00942400 	addseq	r2, r4, r0, lsl #8
    a280:	00941e00 	addseq	r1, r4, r0, lsl #28
    a284:	24ac1b00 	strtcs	r1, [ip], #2816	; 0xb00
    a288:	f1010000 	setend	le
    a28c:	00c43504 	sbceq	r3, r4, r4, lsl #10
    a290:	94570000 	ldrbls	r0, [r7], #-0
    a294:	94510000 	ldrbls	r0, [r1], #-0
    a298:	e91b0000 	ldmdb	fp, {}	; <UNPREDICTABLE>
    a29c:	01000020 	tsteq	r0, r0, lsr #32
    a2a0:	173704f2 			; <UNDEFINED> instruction: 0x173704f2
    a2a4:	89000001 	stmdbhi	r0, {r0}
    a2a8:	83000094 	movwhi	r0, #148	; 0x94
    a2ac:	1c000094 	stcne	0, cr0, [r0], {148}	; 0x94
    a2b0:	00002852 	andeq	r2, r0, r2, asr r8
    a2b4:	2104f401 	tstcs	r4, r1, lsl #8	; <UNPREDICTABLE>
    a2b8:	00000707 	andeq	r0, r0, r7, lsl #14
    a2bc:	1d689102 	stfnep	f1, [r8, #-8]!
    a2c0:	00001a21 	andeq	r1, r0, r1, lsr #20
    a2c4:	1804f501 	stmdane	r4, {r0, r8, sl, ip, sp, lr, pc}
    a2c8:	000000fa 	strdeq	r0, [r0], -sl
    a2cc:	000094b7 			; <UNDEFINED> instruction: 0x000094b7
    a2d0:	000094b5 			; <UNDEFINED> instruction: 0x000094b5
    a2d4:	0000001e 	andeq	r0, r0, lr, lsl r0
    a2d8:	00186800 	andseq	r6, r8, r0, lsl #16
    a2dc:	51011f00 	tstpl	r1, r0, lsl #30
    a2e0:	1f007d02 	svcne	0x00007d02
    a2e4:	f3035201 	vhsub.u8	d5, d3, d1
    a2e8:	011f5301 	tsteq	pc, r1, lsl #6
    a2ec:	00300153 	eorseq	r0, r0, r3, asr r1
    a2f0:	ea011a00 	b	50af8 <__HEAP_SIZE+0x4faf8>
    a2f4:	01000028 	tsteq	r0, r8, lsr #32
    a2f8:	011404d1 			; <UNDEFINED> instruction: 0x011404d1
    a2fc:	000000fa 	strdeq	r0, [r0], -sl
	...
    a308:	000094ca 	andeq	r9, r0, sl, asr #9
    a30c:	00090801 	andeq	r0, r9, r1, lsl #16
    a310:	28bb1b00 	ldmcs	fp!, {r8, r9, fp, ip}
    a314:	d1010000 	mrsle	r0, (UNDEF: 1)
    a318:	05f14404 	ldrbeq	r4, [r1, #1028]!	; 0x404
    a31c:	95080000 	strls	r0, [r8, #-0]
    a320:	95020000 	strls	r0, [r2, #-0]
    a324:	bc1b0000 	ldclt	0, cr0, [fp], {-0}
    a328:	01000027 	tsteq	r0, r7, lsr #32
    a32c:	9a3a04d2 	bls	e8b67c <__RAM_SIZE+0xd8b67c>
    a330:	3b000000 	blcc	a338 <__HEAP_SIZE+0x9338>
    a334:	35000095 	strcc	r0, [r0, #-149]	; 0xffffff6b
    a338:	1b000095 	blne	a594 <__HEAP_SIZE+0x9594>
    a33c:	000024ac 	andeq	r2, r0, ip, lsr #9
    a340:	3c04d301 	stccc	3, cr13, [r4], {1}
    a344:	000000c4 	andeq	r0, r0, r4, asr #1
    a348:	0000956e 	andeq	r9, r0, lr, ror #10
    a34c:	00009568 	andeq	r9, r0, r8, ror #10
    a350:	000af91b 	andeq	pc, sl, fp, lsl r9	; <UNPREDICTABLE>
    a354:	04d40100 	ldrbeq	r0, [r4], #256	; 0x100
    a358:	00090840 	andeq	r0, r9, r0, asr #16
    a35c:	0095a000 	addseq	sl, r5, r0
    a360:	00959a00 	addseq	r9, r5, r0, lsl #20
    a364:	28521c00 	ldmdacs	r2, {sl, fp, ip}^
    a368:	d6010000 	strle	r0, [r1], -r0
    a36c:	07072104 	streq	r2, [r7, -r4, lsl #2]
    a370:	91020000 	mrsls	r0, (UNDEF: 2)
    a374:	1a211d68 	bne	85191c <__RAM_SIZE+0x75191c>
    a378:	d7010000 	strle	r0, [r1, -r0]
    a37c:	00fa1804 	rscseq	r1, sl, r4, lsl #16
    a380:	95ce0000 	strbls	r0, [lr]
    a384:	95cc0000 	strbls	r0, [ip]
    a388:	001e0000 	andseq	r0, lr, r0
    a38c:	77000000 	strvc	r0, [r0, -r0]
    a390:	1f000018 	svcne	0x00000018
    a394:	7d025101 	stfvcs	f5, [r2, #-4]
    a398:	52011f00 	andpl	r1, r1, #0, 30
    a39c:	5301f303 	movwpl	pc, #4867	; 0x1303	; <UNPREDICTABLE>
    a3a0:	0153011f 	cmpeq	r3, pc, lsl r1
    a3a4:	07000030 	smladxeq	r0, r0, r0, r0
    a3a8:	0000fa04 	andeq	pc, r0, r4, lsl #20
    a3ac:	09080600 	stmdbeq	r8, {r9, sl}
    a3b0:	01200000 			; <UNDEFINED> instruction: 0x01200000
    a3b4:	00002757 	andeq	r2, r0, r7, asr r7
    a3b8:	0a04bc01 	beq	1393c4 <__RAM_SIZE+0x393c4>
    a3bc:	00000001 	andeq	r0, r0, r1
    a3c0:	00000000 	andeq	r0, r0, r0
    a3c4:	0095e100 	addseq	lr, r5, r0, lsl #2
    a3c8:	09810100 	stmibeq	r1, {r8}
    a3cc:	a61b0000 	ldrge	r0, [fp], -r0
    a3d0:	01000028 	tsteq	r0, r8, lsr #32
    a3d4:	542a04bc 	strtpl	r0, [sl], #-1212	; 0xfffffb44
    a3d8:	05000005 	streq	r0, [r0, #-5]
    a3dc:	01000096 	swpeq	r0, r6, [r0]	; <UNPREDICTABLE>
    a3e0:	1b000096 	blne	a640 <__HEAP_SIZE+0x9640>
    a3e4:	00002777 	andeq	r2, r0, r7, ror r7
    a3e8:	2304bd01 	movwcs	fp, #19713	; 0x4d01
    a3ec:	0000009a 	muleq	r0, sl, r0
    a3f0:	00009627 	andeq	r9, r0, r7, lsr #12
    a3f4:	00009623 	andeq	r9, r0, r3, lsr #12
    a3f8:	0028a51d 	eoreq	sl, r8, sp, lsl r5
    a3fc:	04bf0100 	ldrteq	r0, [pc], #256	; a404 <__HEAP_SIZE+0x9404>
    a400:	00065e19 	andeq	r5, r6, r9, lsl lr
    a404:	00964900 	addseq	r4, r6, r0, lsl #18
    a408:	00964500 	addseq	r4, r6, r0, lsl #10
    a40c:	00002100 	andeq	r2, r0, r0, lsl #2
    a410:	18860000 	stmne	r6, {}	; <UNPREDICTABLE>
    a414:	00210000 	eoreq	r0, r1, r0
    a418:	94000000 	strls	r0, [r0], #-0
    a41c:	00000018 	andeq	r0, r0, r8, lsl r0
    a420:	2648011a 			; <UNDEFINED> instruction: 0x2648011a
    a424:	a7010000 	strge	r0, [r1, -r0]
    a428:	9a010c04 	bls	4d440 <__HEAP_SIZE+0x4c440>
	...
    a434:	67000000 	strvs	r0, [r0, -r0]
    a438:	01000096 	swpeq	r0, r6, [r0]	; <UNPREDICTABLE>
    a43c:	000009f3 	strdeq	r0, [r0], -r3
    a440:	0028a61b 	eoreq	sl, r8, fp, lsl r6
    a444:	04a70100 	strteq	r0, [r7], #256	; 0x100
    a448:	00056033 	andeq	r6, r5, r3, lsr r0
    a44c:	00968d00 	addseq	r8, r6, r0, lsl #26
    a450:	00968700 	addseq	r8, r6, r0, lsl #14
    a454:	28a51d00 	stmiacs	r5!, {r8, sl, fp, ip}
    a458:	a9010000 	stmdbge	r1, {}	; <UNPREDICTABLE>
    a45c:	065e1904 	ldrbeq	r1, [lr], -r4, lsl #18
    a460:	96bf0000 	ldrtls	r0, [pc], r0
    a464:	96b90000 	ldrtls	r0, [r9], r0
    a468:	091d0000 	ldmdbeq	sp, {}	; <UNPREDICTABLE>
    a46c:	01000026 	tsteq	r0, r6, lsr #32
    a470:	9a1004aa 	bls	40b720 <__RAM_SIZE+0x30b720>
    a474:	ed000000 	stc	0, cr0, [r0, #-0]
    a478:	eb000096 	bl	a6d8 <__HEAP_SIZE+0x96d8>
    a47c:	21000096 	swpcs	r0, r6, [r0]	; <UNPREDICTABLE>
    a480:	00000000 	andeq	r0, r0, r0
    a484:	00001886 	andeq	r1, r0, r6, lsl #17
    a488:	00000021 	andeq	r0, r0, r1, lsr #32
    a48c:	00189400 	andseq	r9, r8, r0, lsl #8
    a490:	011a0000 	tsteq	sl, r0
    a494:	00002612 	andeq	r2, r0, r2, lsl r6
    a498:	10048a01 	andne	r8, r4, r1, lsl #20
    a49c:	0000fa01 	andeq	pc, r0, r1, lsl #20
	...
    a4a8:	00970000 	addseq	r0, r7, r0
    a4ac:	0a650100 	beq	194a8b4 <__RAM_SIZE+0x184a8b4>
    a4b0:	a61b0000 	ldrge	r0, [fp], -r0
    a4b4:	01000028 	tsteq	r0, r8, lsr #32
    a4b8:	5433048a 	ldrtpl	r0, [r3], #-1162	; 0xfffffb76
    a4bc:	2a000005 	bcs	a4d8 <__HEAP_SIZE+0x94d8>
    a4c0:	20000097 	mulcs	r0, r7, r0
    a4c4:	1d000097 	stcne	0, cr0, [r0, #-604]	; 0xfffffda4
    a4c8:	00001a21 	andeq	r1, r0, r1, lsr #20
    a4cc:	14048c01 	strne	r8, [r4], #-3073	; 0xfffff3ff
    a4d0:	000000fa 	strdeq	r0, [r0], -sl
    a4d4:	00009771 	andeq	r9, r0, r1, ror r7
    a4d8:	0000976f 	andeq	r9, r0, pc, ror #14
    a4dc:	0028a51d 	eoreq	sl, r8, sp, lsl r5
    a4e0:	048d0100 	streq	r0, [sp], #256	; 0x100
    a4e4:	00065813 	andeq	r5, r6, r3, lsl r8
    a4e8:	00978e00 	addseq	r8, r7, r0, lsl #28
    a4ec:	00978400 	addseq	r8, r7, r0, lsl #8
    a4f0:	00002100 	andeq	r2, r0, r0, lsl #2
    a4f4:	18860000 	stmne	r6, {}	; <UNPREDICTABLE>
    a4f8:	00210000 	eoreq	r0, r1, r0
    a4fc:	94000000 	strls	r0, [r0], #-0
    a500:	00000018 	andeq	r0, r0, r8, lsl r0
    a504:	00255322 	eoreq	r5, r5, r2, lsr #6
    a508:	04570100 	ldrbeq	r0, [r7], #-256	; 0xffffff00
    a50c:	32140111 	andscc	r0, r4, #1073741828	; 0x40000004
    a510:	32741000 	rsbscc	r1, r4, #0
    a514:	97d31000 	ldrbls	r1, [r3, r0]
    a518:	17010000 	strne	r0, [r1, -r0]
    a51c:	2300000b 	movwcs	r0, #11
    a520:	10003242 	andne	r3, r0, r2, asr #4
    a524:	10003256 	andne	r3, r0, r6, asr r2
    a528:	00000ae0 	andeq	r0, r0, r0, ror #21
    a52c:	00246e1c 	eoreq	r6, r4, ip, lsl lr
    a530:	04690100 	strbteq	r0, [r9], #-256	; 0xffffff00
    a534:	0003cb3a 	andeq	ip, r3, sl, lsr fp
    a538:	80030500 	andhi	r0, r3, r0, lsl #10
    a53c:	1c38008c 	ldcne	0, cr0, [r8], #-560	; 0xfffffdd0
    a540:	000027a2 	andeq	r2, r0, r2, lsr #15
    a544:	34046a01 	strcc	r6, [r4], #-2561	; 0xfffff5ff
    a548:	00000b17 	andeq	r0, r0, r7, lsl fp
    a54c:	8ba40305 	blhi	fe90b168 <__StackTop+0xc680b168>
    a550:	521e3800 	andspl	r3, lr, #0, 16
    a554:	a2100032 	andsge	r0, r0, #50	; 0x32
    a558:	1f000018 	svcne	0x00000018
    a55c:	3a015001 	bcc	5e568 <__HEAP_SIZE+0x5d568>
    a560:	0151011f 	cmpeq	r1, pc, lsl r1
    a564:	52011f40 	andpl	r1, r1, #64, 30	; 0x100
    a568:	8ba40305 	blhi	fe90b184 <__StackTop+0xc680b184>
    a56c:	011f3800 	tsteq	pc, r0, lsl #16
    a570:	80030553 	andhi	r0, r3, r3, asr r5
    a574:	1f38008c 	svcne	0x0038008c
    a578:	01007d02 	tsteq	r0, r2, lsl #26
    a57c:	21000030 	tstcs	r0, r0, lsr r0
    a580:	1000321c 	andne	r3, r0, ip, lsl r2
    a584:	00001886 	andeq	r1, r0, r6, lsl #17
    a588:	00322621 	eorseq	r2, r2, r1, lsr #12
    a58c:	00189410 	andseq	r9, r8, r0, lsl r4
    a590:	32322400 	eorscc	r2, r2, #0, 8
    a594:	18b11000 	ldmne	r1!, {ip}
    a598:	0b060000 	bleq	18a5a0 <__RAM_SIZE+0x8a5a0>
    a59c:	011f0000 	tsteq	pc, r0
    a5a0:	00750250 	rsbseq	r0, r5, r0, asr r2
    a5a4:	323a1e00 	eorscc	r1, sl, #0, 28
    a5a8:	18b11000 	ldmne	r1!, {ip}
    a5ac:	011f0000 	tsteq	pc, r0
    a5b0:	00740250 	rsbseq	r0, r4, r0, asr r2
    a5b4:	b80c0000 	stmdalt	ip, {}	; <UNPREDICTABLE>
    a5b8:	27000000 	strcs	r0, [r0, -r0]
    a5bc:	0d00000b 	stceq	0, cr0, [r0, #-44]	; 0xffffffd4
    a5c0:	00000035 	andeq	r0, r0, r5, lsr r0
    a5c4:	7f22009f 	svcvc	0x0022009f
    a5c8:	01000027 	tsteq	r0, r7, lsr #32
    a5cc:	0111043e 	tsteq	r1, lr, lsr r4
    a5d0:	10003040 	andne	r3, r0, r0, asr #32
    a5d4:	10003070 	andne	r3, r0, r0, ror r0
    a5d8:	00009817 	andeq	r9, r0, r7, lsl r8
    a5dc:	000b7d01 	andeq	r7, fp, r1, lsl #26
    a5e0:	27f01d00 	ldrbcs	r1, [r0, r0, lsl #26]!
    a5e4:	40010000 	andmi	r0, r1, r0
    a5e8:	01171404 	tsteq	r7, r4, lsl #8
    a5ec:	98390000 	ldmdals	r9!, {}	; <UNPREDICTABLE>
    a5f0:	98370000 	ldmdals	r7!, {}	; <UNPREDICTABLE>
    a5f4:	b01d0000 	andslt	r0, sp, r0
    a5f8:	01000018 	tsteq	r0, r8, lsl r0
    a5fc:	49120441 	ldmdbmi	r2, {r0, r6, sl}
    a600:	51000007 	tstpl	r0, r7
    a604:	4d000098 	stcmi	0, cr0, [r0, #-608]	; 0xfffffda0
    a608:	1e000098 	mcrne	0, 0, r0, cr0, cr8, {4}
    a60c:	10003050 	andne	r3, r0, r0, asr r0
    a610:	00000f90 	muleq	r0, r0, pc	; <UNPREDICTABLE>
    a614:	0251011f 	subseq	r0, r1, #-1073741817	; 0xc0000007
    a618:	0000ff09 	andeq	pc, r0, r9, lsl #30
    a61c:	00280925 	eoreq	r0, r8, r5, lsr #18
    a620:	03aa0100 			; <UNDEFINED> instruction: 0x03aa0100
    a624:	31040111 	tstcc	r4, r1, lsl r1
    a628:	31fc1000 	mvnscc	r1, r0
    a62c:	98731000 	ldmdals	r3!, {ip}^
    a630:	bb010000 	bllt	4a638 <__HEAP_SIZE+0x49638>
    a634:	1c00000c 	stcne	0, cr0, [r0], {12}
    a638:	00002852 	andeq	r2, r0, r2, asr r8
    a63c:	1d03ac01 	stcne	12, cr10, [r3, #-4]
    a640:	00000707 	andeq	r0, r0, r7, lsl #14
    a644:	1d609102 	stfnep	f1, [r0, #-8]!
    a648:	000028a5 	andeq	r2, r0, r5, lsr #17
    a64c:	1303ad01 	movwne	sl, #15617	; 0x3d01
    a650:	00000658 	andeq	r0, r0, r8, asr r6
    a654:	000098ad 	andeq	r9, r0, sp, lsr #17
    a658:	000098ab 	andeq	r9, r0, fp, lsr #17
    a65c:	0029a71c 	eoreq	sl, r9, ip, lsl r7
    a660:	03ae0100 			; <UNDEFINED> instruction: 0x03ae0100
    a664:	0000fa14 	andeq	pc, r0, r4, lsl sl	; <UNPREDICTABLE>
    a668:	5c910200 	lfmpl	f0, 4, [r1], {0}
    a66c:	0024651d 	eoreq	r6, r4, sp, lsl r5
    a670:	03af0100 			; <UNDEFINED> instruction: 0x03af0100
    a674:	00011714 	andeq	r1, r1, r4, lsl r7
    a678:	0098cc00 	addseq	ip, r8, r0, lsl #24
    a67c:	0098c000 	addseq	ip, r8, r0
    a680:	31302300 	teqcc	r0, r0, lsl #6
    a684:	31381000 	teqcc	r8, r0
    a688:	0c051000 	stceq	0, cr1, [r5], {-0}
    a68c:	861d0000 	ldrhi	r0, [sp], -r0
    a690:	01000029 	tsteq	r0, r9, lsr #32
    a694:	c13803b9 	teqgt	r8, r9	; <illegal shifter operand>
    a698:	1800000c 	stmdane	r0, {r2, r3}
    a69c:	16000099 			; <UNDEFINED> instruction: 0x16000099
    a6a0:	00000099 	muleq	r0, r9, r0
    a6a4:	00312624 	eorseq	r2, r1, r4, lsr #12
    a6a8:	0018c010 	andseq	ip, r8, r0, lsl r0
    a6ac:	000c1e00 	andeq	r1, ip, r0, lsl #28
    a6b0:	51011f00 	tstpl	r1, r0, lsl #30
    a6b4:	1f609102 	svcne	0x00609102
    a6b8:	30015201 	andcc	r5, r1, r1, lsl #4
    a6bc:	31462400 	cmpcc	r6, r0, lsl #8
    a6c0:	18cf1000 	stmiane	pc, {ip}^	; <UNPREDICTABLE>
    a6c4:	0c320000 	ldceq	0, cr0, [r2], #-0
    a6c8:	011f0000 	tsteq	pc, r0
    a6cc:	04740250 	ldrbteq	r0, [r4], #-592	; 0xfffffdb0
    a6d0:	314c2400 	cmpcc	ip, r0, lsl #8
    a6d4:	0d791000 	ldcleq	0, cr1, [r9, #-0]
    a6d8:	0c460000 	mareq	acc0, r0, r6
    a6dc:	011f0000 	tsteq	pc, r0
    a6e0:	5c910250 	lfmpl	f0, 4, [r1], {80}	; 0x50
    a6e4:	317e2400 	cmncc	lr, r0, lsl #8
    a6e8:	0cc61000 	stcleq	0, cr1, [r6], {0}
    a6ec:	0c600000 	stcleq	0, cr0, [r0], #-0
    a6f0:	011f0000 	tsteq	pc, r0
    a6f4:	00740250 	rsbseq	r0, r4, r0, asr r2
    a6f8:	0252011f 	subseq	r0, r2, #-1073741817	; 0xc0000007
    a6fc:	26000075 			; <UNDEFINED> instruction: 0x26000075
    a700:	1000319a 	mulne	r0, sl, r1
    a704:	00000c70 	andeq	r0, r0, r0, ror ip
    a708:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    a70c:	24000074 	strcs	r0, [r0], #-116	; 0xffffff8c
    a710:	100031aa 	andne	r3, r0, sl, lsr #3
    a714:	0000102b 	andeq	r1, r0, fp, lsr #32
    a718:	00000c8a 	andeq	r0, r0, sl, lsl #25
    a71c:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    a720:	011f0074 	tsteq	pc, r4, ror r0	; <UNPREDICTABLE>
    a724:	00750252 	rsbseq	r0, r5, r2, asr r2
    a728:	31d62400 	bicscc	r2, r6, r0, lsl #8
    a72c:	0cc61000 	stcleq	0, cr1, [r6], {0}
    a730:	0caa0000 	stceq	0, cr0, [sl]
    a734:	011f0000 	tsteq	pc, r0
    a738:	00740250 	rsbseq	r0, r4, r0, asr r2
    a73c:	0252011f 	subseq	r0, r2, #-1073741817	; 0xc0000007
    a740:	011f0075 	tsteq	pc, r5, ror r0	; <UNPREDICTABLE>
    a744:	00750253 	rsbseq	r0, r5, r3, asr r2
    a748:	31f21e00 	mvnscc	r1, r0, lsl #28
    a74c:	18de1000 	ldmne	lr, {ip}^
    a750:	011f0000 	tsteq	pc, r0
    a754:	00740250 	rsbseq	r0, r4, r0, asr r2
    a758:	04070000 	streq	r0, [r7], #-0
    a75c:	000006b6 			; <UNDEFINED> instruction: 0x000006b6
    a760:	000cbb06 	andeq	fp, ip, r6, lsl #22
    a764:	26e02700 	strbtcs	r2, [r0], r0, lsl #14
    a768:	7e010000 	cdpvc	0, 0, cr0, cr1, cr0, {0}
    a76c:	fa011703 	blx	50380 <__HEAP_SIZE+0x4f380>
    a770:	90000000 	andls	r0, r0, r0
    a774:	d810002f 	ldmdale	r0, {r0, r1, r2, r3, r5}
    a778:	2d10002f 	ldccs	0, cr0, [r0, #-188]	; 0xffffff44
    a77c:	01000099 	swpeq	r0, r9, [r0]	; <UNPREDICTABLE>
    a780:	00000d79 	andeq	r0, r0, r9, ror sp
    a784:	0028a51b 	eoreq	sl, r8, fp, lsl r5
    a788:	037e0100 	cmneq	lr, #0, 2
    a78c:	00065e43 	andeq	r5, r6, r3, asr #28
    a790:	00996100 	addseq	r6, r9, r0, lsl #2
    a794:	00994d00 	addseq	r4, r9, r0, lsl #26
    a798:	29371b00 	ldmdbcs	r7!, {r8, r9, fp, ip}
    a79c:	7f010000 	svcvc	0x00010000
    a7a0:	01234403 			; <UNDEFINED> instruction: 0x01234403
    a7a4:	99fd0000 	ldmibls	sp!, {}^	; <UNPREDICTABLE>
    a7a8:	99e70000 	stmibls	r7!, {}^	; <UNPREDICTABLE>
    a7ac:	651b0000 	ldrvs	r0, [fp, #-0]
    a7b0:	01000024 	tsteq	r0, r4, lsr #32
    a7b4:	23440380 	movtcs	r0, #17280	; 0x4380
    a7b8:	95000001 	strls	r0, [r0, #-1]
    a7bc:	8b00009a 	blhi	aa2c <__HEAP_SIZE+0x9a2c>
    a7c0:	1b00009a 	blne	aa30 <__HEAP_SIZE+0x9a30>
    a7c4:	00002422 	andeq	r2, r0, r2, lsr #8
    a7c8:	44038101 	strmi	r8, [r3], #-257	; 0xfffffeff
    a7cc:	00000123 	andeq	r0, r0, r3, lsr #2
    a7d0:	00009ae4 	andeq	r9, r0, r4, ror #21
    a7d4:	00009ada 	ldrdeq	r9, [r0], -sl
    a7d8:	0025421d 	eoreq	r4, r5, sp, lsl r2
    a7dc:	03830100 	orreq	r0, r3, #0, 2
    a7e0:	0000fa14 	andeq	pc, r0, r4, lsl sl	; <UNPREDICTABLE>
    a7e4:	009b2f00 	addseq	r2, fp, r0, lsl #30
    a7e8:	009b2900 	addseq	r2, fp, r0, lsl #18
    a7ec:	2fb02400 	svccs	0x00b02400
    a7f0:	18ec1000 	stmiane	ip!, {ip}^
    a7f4:	0d650000 	stcleq	0, cr0, [r5, #-0]
    a7f8:	011f0000 	tsteq	pc, r0
    a7fc:	01f30551 	mvnseq	r0, r1, asr r5
    a800:	00042350 	andeq	r2, r4, r0, asr r3
    a804:	002fc61e 	eoreq	ip, pc, lr, lsl r6	; <UNPREDICTABLE>
    a808:	0018ec10 	andseq	lr, r8, r0, lsl ip
    a80c:	51011f00 	tstpl	r1, r0, lsl #30
    a810:	5001f305 	andpl	pc, r1, r5, lsl #6
    a814:	00000423 	andeq	r0, r0, r3, lsr #8
    a818:	00273227 	eoreq	r3, r7, r7, lsr #4
    a81c:	03670100 	cmneq	r7, #0, 2
    a820:	01170117 	tsteq	r7, r7, lsl r1
    a824:	30700000 	rsbscc	r0, r0, r0
    a828:	309c1000 	addscc	r1, ip, r0
    a82c:	9b5b1000 	blls	16ce834 <__RAM_SIZE+0x15ce834>
    a830:	e8010000 	stmda	r1, {}	; <UNPREDICTABLE>
    a834:	1b00000d 	blne	a870 <__HEAP_SIZE+0x9870>
    a838:	000029a6 	andeq	r2, r0, r6, lsr #19
    a83c:	3c036701 	stccc	7, cr6, [r3], {1}
    a840:	0000090e 	andeq	r0, r0, lr, lsl #18
    a844:	00009b7f 	andeq	r9, r0, pc, ror fp
    a848:	00009b7b 	andeq	r9, r0, fp, ror fp
    a84c:	0024651d 	eoreq	r6, r4, sp, lsl r5
    a850:	03690100 	cmneq	r9, #0, 2
    a854:	00011714 	andeq	r1, r1, r4, lsl r7
    a858:	009ba500 	addseq	sl, fp, r0, lsl #10
    a85c:	009b9d00 	addseq	r9, fp, r0, lsl #26
    a860:	28241c00 	stmdacs	r4!, {sl, fp, ip}
    a864:	6a010000 	bvs	4a86c <__HEAP_SIZE+0x4986c>
    a868:	01172b03 	tsteq	r7, r3, lsl #22
    a86c:	03050000 	movweq	r0, #20480	; 0x5000
    a870:	38008c7c 	stmdacc	r0, {r2, r3, r4, r5, r6, sl, fp, pc}
    a874:	00307821 	eorseq	r7, r0, r1, lsr #16
    a878:	0018fb10 	andseq	pc, r8, r0, lsl fp	; <UNPREDICTABLE>
    a87c:	30922100 	addscc	r2, r2, r0, lsl #2
    a880:	0b271000 	bleq	9ce888 <__RAM_SIZE+0x8ce888>
    a884:	28000000 	stmdacs	r0, {}	; <UNPREDICTABLE>
    a888:	00002991 	muleq	r0, r1, r9
    a88c:	17034c01 	strne	r4, [r3, -r1, lsl #24]
    a890:	00011701 	andeq	r1, r1, r1, lsl #14
    a894:	002f7000 	eoreq	r7, pc, r0
    a898:	002f9010 	eoreq	r9, pc, r0, lsl r0	; <UNPREDICTABLE>
    a89c:	007d0210 	rsbseq	r0, sp, r0, lsl r2
    a8a0:	000e3101 	andeq	r3, lr, r1, lsl #2
    a8a4:	24561b00 	ldrbcs	r1, [r6], #-2816	; 0xfffff500
    a8a8:	4c010000 	stcmi	0, cr0, [r1], {-0}
    a8ac:	090e4003 	stmdbeq	lr, {r0, r1, lr}
    a8b0:	9be10000 	blls	ff84a8b8 <__StackTop+0xc774a8b8>
    a8b4:	9bd90000 	blls	ff64a8bc <__StackTop+0xc754a8bc>
    a8b8:	f01d0000 			; <UNDEFINED> instruction: 0xf01d0000
    a8bc:	01000027 	tsteq	r0, r7, lsr #32
    a8c0:	1714034e 	ldrne	r0, [r4, -lr, asr #6]
    a8c4:	1f000001 	svcne	0x00000001
    a8c8:	1b00009c 	blne	ab40 <__HEAP_SIZE+0x9b40>
    a8cc:	0000009c 	muleq	r0, ip, r0
    a8d0:	00290822 	eoreq	r0, r9, r2, lsr #16
    a8d4:	030e0100 	movweq	r0, #57600	; 0xe100
    a8d8:	309c0111 	addscc	r0, ip, r1, lsl r1
    a8dc:	31041000 	mrscc	r1, (UNDEF: 4)
    a8e0:	9c3e1000 	ldcls	0, cr1, [lr], #-0
    a8e4:	14010000 	strne	r0, [r1], #-0
    a8e8:	1b00000f 	blne	a92c <__HEAP_SIZE+0x992c>
    a8ec:	000027f0 	strdeq	r2, [r0], -r0
    a8f0:	3e030e01 	cdpcc	14, 0, cr0, cr3, cr1, {0}
    a8f4:	00000123 	andeq	r0, r0, r3, lsr #2
    a8f8:	00009c86 	andeq	r9, r0, r6, lsl #25
    a8fc:	00009c82 	andeq	r9, r0, r2, lsl #25
    a900:	0024571b 	eoreq	r5, r4, fp, lsl r7
    a904:	030f0100 	movweq	r0, #61696	; 0xf100
    a908:	0000fa38 	andeq	pc, r0, r8, lsr sl	; <UNPREDICTABLE>
    a90c:	009cac00 	addseq	sl, ip, r0, lsl #24
    a910:	009ca400 	addseq	sl, ip, r0, lsl #8
    a914:	24651d00 	strbtcs	r1, [r5], #-3328	; 0xfffff300
    a918:	11010000 	mrsne	r0, (UNDEF: 1)
    a91c:	01171403 	tsteq	r7, r3, lsl #8
    a920:	9cf10000 	ldclls	0, cr0, [r1]
    a924:	9ce30000 	stclls	0, cr0, [r3]
    a928:	a71c0000 	ldrge	r0, [ip, -r0]
    a92c:	01000029 	tsteq	r0, r9, lsr #32
    a930:	fa140312 	blx	50b580 <__RAM_SIZE+0x40b580>
    a934:	02000000 	andeq	r0, r0, #0
    a938:	a8216c91 	stmdage	r1!, {r0, r4, r7, sl, fp, sp, lr}
    a93c:	0a100030 	beq	40aa04 <__RAM_SIZE+0x30aa04>
    a940:	24000019 	strcs	r0, [r0], #-25	; 0xffffffe7
    a944:	100030ae 	andne	r3, r0, lr, lsr #1
    a948:	00000d79 	andeq	r0, r0, r9, ror sp
    a94c:	00000eb8 			; <UNDEFINED> instruction: 0x00000eb8
    a950:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    a954:	24006c91 	strcs	r6, [r0], #-3217	; 0xfffff36f
    a958:	100030d2 	ldrdne	r3, [r0], -r2
    a95c:	00001919 	andeq	r1, r0, r9, lsl r9
    a960:	00000ed5 	ldrdeq	r0, [r0], -r5
    a964:	0551011f 	ldrbeq	r0, [r1, #-287]	; 0xfffffee1
    a968:	00750076 	rsbseq	r0, r5, r6, ror r0
    a96c:	52011f1c 	andpl	r1, r1, #28, 30	; 0x70
    a970:	00007402 	andeq	r7, r0, r2, lsl #8
    a974:	0030d621 	eorseq	sp, r0, r1, lsr #12
    a978:	00192810 	andseq	r2, r9, r0, lsl r8
    a97c:	30e02100 	rsccc	r2, r0, r0, lsl #2
    a980:	19281000 	stmdbne	r8!, {ip}
    a984:	e8240000 	stmda	r4!, {}	; <UNPREDICTABLE>
    a988:	90100030 	andsls	r0, r0, r0, lsr r0
    a98c:	0100000f 	tsteq	r0, pc
    a990:	1f00000f 	svcne	0x0000000f
    a994:	76025001 	strvc	r5, [r2], -r1
    a998:	51011f00 	tstpl	r1, r0, lsl #30
    a99c:	00007502 	andeq	r7, r0, r2, lsl #10
    a9a0:	0030f221 	eorseq	pc, r0, r1, lsr #4
    a9a4:	00193710 	andseq	r3, r9, r0, lsl r7
    a9a8:	30f82100 	rscscc	r2, r8, r0, lsl #2
    a9ac:	19281000 	stmdbne	r8!, {ip}
    a9b0:	22000000 	andcs	r0, r0, #0
    a9b4:	000027e3 	andeq	r2, r0, r3, ror #15
    a9b8:	0c02ec01 	stceq	12, cr14, [r2], {1}
    a9bc:	0031fc01 	eorseq	pc, r1, r1, lsl #24
    a9c0:	00321210 	eorseq	r1, r2, r0, lsl r2
    a9c4:	009d4610 	addseq	r4, sp, r0, lsl r6
    a9c8:	0f900100 	svceq	0x00900100
    a9cc:	8c1b0000 	ldchi	0, cr0, [fp], {-0}
    a9d0:	0100001e 	tsteq	r0, lr, lsl r0
    a9d4:	9a0c02ec 	bls	30b58c <__RAM_SIZE+0x20b58c>
    a9d8:	76000000 	strvc	r0, [r0], -r0
    a9dc:	7200009d 	andvc	r0, r0, #157	; 0x9d
    a9e0:	1d00009d 	stcne	0, cr0, [r0, #-628]	; 0xfffffd8c
    a9e4:	000027f0 	strdeq	r2, [r0], -r0
    a9e8:	1402ee01 	strne	lr, [r2], #-3585	; 0xfffff1ff
    a9ec:	00000117 	andeq	r0, r0, r7, lsl r1
    a9f0:	00009d99 	muleq	r0, r9, sp
    a9f4:	00009d97 	muleq	r0, r7, sp
    a9f8:	0024571c 	eoreq	r5, r4, ip, lsl r7
    a9fc:	02ef0100 	rsceq	r0, pc, #0, 2
    aa00:	0000fa14 	andeq	pc, r0, r4, lsl sl	; <UNPREDICTABLE>
    aa04:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    aa08:	00320624 	eorseq	r0, r2, r4, lsr #12
    aa0c:	000de810 	andeq	lr, sp, r0, lsl r8
    aa10:	000f7d00 	andeq	r7, pc, r0, lsl #26
    aa14:	50011f00 	andpl	r1, r1, r0, lsl #30
    aa18:	00749102 	rsbseq	r9, r4, r2, lsl #2
    aa1c:	00320c21 	eorseq	r0, r2, r1, lsr #24
    aa20:	000e3110 	andeq	r3, lr, r0, lsl r1
    aa24:	32102100 	andscc	r2, r0, #0, 2
    aa28:	0b7d1000 	bleq	1f4ea30 <__RAM_SIZE+0x1e4ea30>
    aa2c:	22000000 	andcs	r0, r0, #0
    aa30:	000025c9 	andeq	r2, r0, r9, asr #11
    aa34:	1102ce01 	tstne	r2, r1, lsl #28
    aa38:	00300001 	eorseq	r0, r0, r1
    aa3c:	00304010 	eorseq	r4, r0, r0, lsl r0
    aa40:	009dac10 	addseq	sl, sp, r0, lsl ip
    aa44:	102b0100 	eorne	r0, fp, r0, lsl #2
    aa48:	f01b0000 			; <UNDEFINED> instruction: 0xf01b0000
    aa4c:	01000027 	tsteq	r0, r7, lsr #32
    aa50:	233a02ce 	teqcs	sl, #-536870900	; 0xe000000c
    aa54:	d0000001 	andle	r0, r0, r1
    aa58:	cc00009d 	stcgt	0, cr0, [r0], {157}	; 0x9d
    aa5c:	1b00009d 	blne	acd8 <__HEAP_SIZE+0x9cd8>
    aa60:	00002465 	andeq	r2, r0, r5, ror #8
    aa64:	3a02cf01 	bcc	be670 <__HEAP_SIZE+0xbd670>
    aa68:	00000123 	andeq	r0, r0, r3, lsr #2
    aa6c:	00009df2 	strdeq	r9, [r0], -r2
    aa70:	00009dee 	andeq	r9, r0, lr, ror #27
    aa74:	0028a51d 	eoreq	sl, r8, sp, lsl r5
    aa78:	02d40100 	sbcseq	r0, r4, #0, 2
    aa7c:	00065e19 	andeq	r5, r6, r9, lsl lr
    aa80:	009e1200 	addseq	r1, lr, r0, lsl #4
    aa84:	009e1000 	addseq	r1, lr, r0
    aa88:	30142400 	andscc	r2, r4, r0, lsl #8
    aa8c:	18cf1000 	stmiane	pc, {ip}^	; <UNPREDICTABLE>
    aa90:	0ffe0000 	svceq	0x00fe0000
    aa94:	011f0000 	tsteq	pc, r0
    aa98:	04740250 	ldrbteq	r0, [r4], #-592	; 0xfffffdb0
    aa9c:	302c2600 	eorcc	r2, ip, r0, lsl #12
    aaa0:	100e1000 	andne	r1, lr, r0
    aaa4:	011f0000 	tsteq	pc, r0
    aaa8:	00740250 	rsbseq	r0, r4, r0, asr r2
    aaac:	30381e00 	eorscc	r1, r8, r0, lsl #28
    aab0:	102b1000 	eorne	r1, fp, r0
    aab4:	011f0000 	tsteq	pc, r0
    aab8:	00740250 	rsbseq	r0, r4, r0, asr r2
    aabc:	0251011f 	subseq	r0, r1, #-1073741817	; 0xc0000007
    aac0:	011f0075 	tsteq	pc, r5, ror r0	; <UNPREDICTABLE>
    aac4:	00760252 	rsbseq	r0, r6, r2, asr r2
    aac8:	93220000 			; <UNDEFINED> instruction: 0x93220000
    aacc:	01000027 	tsteq	r0, r7, lsr #32
    aad0:	011102bb 			; <UNDEFINED> instruction: 0x011102bb
    aad4:	10002fd8 	ldrdne	r2, [r0], -r8
    aad8:	10003000 	andne	r3, r0, r0
    aadc:	00009e25 	andeq	r9, r0, r5, lsr #28
    aae0:	0010b201 	andseq	fp, r0, r1, lsl #4
    aae4:	28a51b00 	stmiacs	r5!, {r8, r9, fp, ip}
    aae8:	bb010000 	bllt	4aaf0 <__HEAP_SIZE+0x49af0>
    aaec:	065e3102 	ldrbeq	r3, [lr], -r2, lsl #2
    aaf0:	9e490000 	cdpls	0, 4, cr0, cr9, cr0, {0}
    aaf4:	9e450000 	cdpls	0, 4, cr0, cr5, cr0, {0}
    aaf8:	261b0000 	ldrcs	r0, [fp], -r0
    aafc:	01000026 	tsteq	r0, r6, lsr #32
    ab00:	172c02bc 			; <UNDEFINED> instruction: 0x172c02bc
    ab04:	6b000001 	blvs	ab10 <__HEAP_SIZE+0x9b10>
    ab08:	6700009e 			; <UNDEFINED> instruction: 0x6700009e
    ab0c:	1b00009e 	blne	ad8c <__HEAP_SIZE+0x9d8c>
    ab10:	00002465 	andeq	r2, r0, r5, ror #8
    ab14:	3202bd01 	andcc	fp, r2, #1, 26	; 0x40
    ab18:	00000123 	andeq	r0, r0, r3, lsr #2
    ab1c:	00009e8d 	andeq	r9, r0, sp, lsl #29
    ab20:	00009e89 	andeq	r9, r0, r9, lsl #29
    ab24:	002fec26 	eoreq	lr, pc, r6, lsr #24
    ab28:	00109510 	andseq	r9, r0, r0, lsl r5
    ab2c:	50011f00 	andpl	r1, r1, r0, lsl #30
    ab30:	00007402 	andeq	r7, r0, r2, lsl #8
    ab34:	002ffa1e 	eoreq	pc, pc, lr, lsl sl	; <UNPREDICTABLE>
    ab38:	000cc610 	andeq	ip, ip, r0, lsl r6
    ab3c:	50011f00 	andpl	r1, r1, r0, lsl #30
    ab40:	1f007402 	svcne	0x00007402
    ab44:	76025201 	strvc	r5, [r2], -r1, lsl #4
    ab48:	53011f00 	movwpl	r1, #7936	; 0x1f00
    ab4c:	00007502 	andeq	r7, r0, r2, lsl #10
    ab50:	db012900 	blle	54f58 <__HEAP_SIZE+0x53f58>
    ab54:	01000028 	tsteq	r0, r8, lsr #32
    ab58:	011202ad 	tsteq	r2, sp, lsr #5
    ab5c:	000000ad 	andeq	r0, r0, sp, lsr #1
	...
    ab68:	01007d02 	tsteq	r0, r2, lsl #26
    ab6c:	000010fc 	strdeq	r1, [r0], -ip
    ab70:	0028a61b 	eoreq	sl, r8, fp, lsl r6
    ab74:	02ad0100 	adceq	r0, sp, #0, 2
    ab78:	00055430 	andeq	r5, r5, r0, lsr r4
    ab7c:	009eaf00 	addseq	sl, lr, r0, lsl #30
    ab80:	009eab00 	addseq	sl, lr, r0, lsl #22
    ab84:	28a51d00 	stmiacs	r5!, {r8, sl, fp, ip}
    ab88:	af010000 	svcge	0x00010000
    ab8c:	06581302 	ldrbeq	r1, [r8], -r2, lsl #6
    ab90:	9ed40000 	cdpls	0, 13, cr0, cr4, cr0, {0}
    ab94:	9ed00000 	cdpls	0, 13, cr0, cr0, cr0, {0}
    ab98:	29000000 	stmdbcs	r0, {}	; <UNPREDICTABLE>
    ab9c:	00250901 	eoreq	r0, r5, r1, lsl #18
    aba0:	028f0100 	addeq	r0, pc, #0, 2
    aba4:	00fa0114 	rscseq	r0, sl, r4, lsl r1
	...
    abb0:	7d020000 	stcvc	0, cr0, [r2, #-0]
    abb4:	116a0100 	cmnne	sl, r0, lsl #2
    abb8:	a61b0000 	ldrge	r0, [fp], -r0
    abbc:	01000028 	tsteq	r0, r8, lsr #32
    abc0:	5439028f 	ldrtpl	r0, [r9], #-655	; 0xfffffd71
    abc4:	fd000005 	stc2	0, cr0, [r0, #-20]	; 0xffffffec
    abc8:	f500009e 			; <UNDEFINED> instruction: 0xf500009e
    abcc:	2a00009e 	bcs	ae4c <__HEAP_SIZE+0x9e4c>
    abd0:	00002977 	andeq	r2, r0, r7, ror r9
    abd4:	3c029001 	stccc	0, cr9, [r2], {1}
    abd8:	0000116a 	andeq	r1, r0, sl, ror #2
    abdc:	211d5101 	tstcs	sp, r1, lsl #2
    abe0:	0100001a 	tsteq	r0, sl, lsl r0
    abe4:	fa180292 	blx	60b634 <__RAM_SIZE+0x50b634>
    abe8:	39000000 	stmdbcc	r0, {}	; <UNPREDICTABLE>
    abec:	3500009f 	strcc	r0, [r0, #-159]	; 0xffffff61
    abf0:	1d00009f 	stcne	0, cr0, [r0, #-636]	; 0xfffffd84
    abf4:	000028a5 	andeq	r2, r0, r5, lsr #17
    abf8:	17029301 	strne	r9, [r2, -r1, lsl #6]
    abfc:	00000658 	andeq	r0, r0, r8, asr r6
    ac00:	00009f61 	andeq	r9, r0, r1, ror #30
    ac04:	00009f59 	andeq	r9, r0, r9, asr pc
    ac08:	70040700 	andvc	r0, r4, r0, lsl #14
    ac0c:	07000011 	smladeq	r0, r1, r0, r0
    ac10:	00044704 	andeq	r4, r4, r4, lsl #14
    ac14:	fb012900 	blx	5501e <__HEAP_SIZE+0x5401e>
    ac18:	01000026 	tsteq	r0, r6, lsr #32
    ac1c:	0110027e 	tsteq	r0, lr, ror r2
    ac20:	00000117 	andeq	r0, r0, r7, lsl r1
	...
    ac2c:	01007d02 	tsteq	r0, r2, lsl #26
    ac30:	000011d5 	ldrdeq	r1, [r0], -r5
    ac34:	0028a61b 	eoreq	sl, r8, fp, lsl r6
    ac38:	027e0100 	rsbseq	r0, lr, #0, 2
    ac3c:	00055433 	andeq	r5, r5, r3, lsr r4
    ac40:	009f9d00 	addseq	r9, pc, r0, lsl #26
    ac44:	009f9900 	addseq	r9, pc, r0, lsl #18
    ac48:	28a51d00 	stmiacs	r5!, {r8, sl, fp, ip}
    ac4c:	80010000 	andhi	r0, r1, r0
    ac50:	06581302 	ldrbeq	r1, [r8], -r2, lsl #6
    ac54:	9fc20000 	svcls	0x00c20000
    ac58:	9fbe0000 	svcls	0x00be0000
    ac5c:	211d0000 	tstcs	sp, r0
    ac60:	0100001a 	tsteq	r0, sl, lsl r0
    ac64:	17140281 	ldrne	r0, [r4, -r1, lsl #5]
    ac68:	e7000001 	str	r0, [r0, -r1]
    ac6c:	e300009f 	movw	r0, #159	; 0x9f
    ac70:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    ac74:	2593011a 	ldrcs	r0, [r3, #282]	; 0x11a
    ac78:	70010000 	andvc	r0, r1, r0
    ac7c:	0b011102 	bleq	4f08c <__HEAP_SIZE+0x4e08c>
    ac80:	00000001 	andeq	r0, r0, r1
    ac84:	00000000 	andeq	r0, r0, r0
    ac88:	06000000 	streq	r0, [r0], -r0
    ac8c:	010000a0 	smlatbeq	r0, r0, r0, r0
    ac90:	00001231 	andeq	r1, r0, r1, lsr r2
    ac94:	0028a61b 	eoreq	sl, r8, fp, lsl r6
    ac98:	02700100 	rsbseq	r0, r0, #0, 2
    ac9c:	00055435 	andeq	r5, r5, r5, lsr r4
    aca0:	00a02a00 	adceq	r2, r0, r0, lsl #20
    aca4:	00a02600 	adceq	r2, r0, r0, lsl #12
    aca8:	0c0d1d00 	stceq	13, cr1, [sp], {-0}
    acac:	72010000 	andvc	r0, r1, #0
    acb0:	010b1502 	tsteq	fp, r2, lsl #10
    acb4:	a04d0000 	subge	r0, sp, r0
    acb8:	a04b0000 	subge	r0, fp, r0
    acbc:	001e0000 	andseq	r0, lr, r0
    acc0:	31000000 	mrscc	r0, (UNDEF: 0)
    acc4:	1f000012 	svcne	0x00000012
    acc8:	f3035001 	vhadd.u8	d5, d3, d1
    accc:	00005001 	andeq	r5, r0, r1
    acd0:	2594011a 	ldrcs	r0, [r4, #282]	; 0x11a
    acd4:	54010000 	strpl	r0, [r1], #-0
    acd8:	fa011002 	blx	4ece8 <__HEAP_SIZE+0x4dce8>
	...
    ace4:	60000000 	andvs	r0, r0, r0
    ace8:	010000a0 	smlatbeq	r0, r0, r0, r0
    acec:	000012a3 	andeq	r1, r0, r3, lsr #5
    acf0:	0028a61b 	eoreq	sl, r8, fp, lsl r6
    acf4:	02540100 	subseq	r0, r4, #0, 2
    acf8:	00055433 	andeq	r5, r5, r3, lsr r4
    acfc:	00a08a00 	adceq	r8, r0, r0, lsl #20
    ad00:	00a08000 	adceq	r8, r0, r0
    ad04:	28a51d00 	stmiacs	r5!, {r8, sl, fp, ip}
    ad08:	56010000 	strpl	r0, [r1], -r0
    ad0c:	06581302 	ldrbeq	r1, [r8], -r2, lsl #6
    ad10:	a0d90000 	sbcsge	r0, r9, r0
    ad14:	a0cf0000 	sbcge	r0, pc, r0
    ad18:	211d0000 	tstcs	sp, r0
    ad1c:	0100001a 	tsteq	r0, sl, lsl r0
    ad20:	fa140257 	blx	50b684 <__RAM_SIZE+0x40b684>
    ad24:	20000000 	andcs	r0, r0, r0
    ad28:	1e0000a1 	cdpne	0, 0, cr0, cr0, cr1, {5}
    ad2c:	210000a1 	smlatbcs	r0, r1, r0, r0
    ad30:	00000000 	andeq	r0, r0, r0
    ad34:	00001886 	andeq	r1, r0, r6, lsl #17
    ad38:	00000021 	andeq	r0, r0, r1, lsr #32
    ad3c:	00189400 	andseq	r9, r8, r0, lsl #8
    ad40:	01200000 			; <UNDEFINED> instruction: 0x01200000
    ad44:	00002923 	andeq	r2, r0, r3, lsr #18
    ad48:	0a023b01 	beq	99954 <__HEAP_SIZE+0x98954>
    ad4c:	00000001 	andeq	r0, r0, r1
    ad50:	00000000 	andeq	r0, r0, r0
    ad54:	00a13300 	adceq	r3, r1, r0, lsl #6
    ad58:	13110100 	tstne	r1, #0, 2
    ad5c:	a61b0000 	ldrge	r0, [fp], -r0
    ad60:	01000028 	tsteq	r0, r8, lsr #32
    ad64:	542d023b 	strtpl	r0, [sp], #-571	; 0xfffffdc5
    ad68:	57000005 	strpl	r0, [r0, -r5]
    ad6c:	530000a1 	movwpl	r0, #161	; 0xa1
    ad70:	1b0000a1 	blne	affc <__HEAP_SIZE+0x9ffc>
    ad74:	0000265a 	andeq	r2, r0, sl, asr r6
    ad78:	30023c01 	andcc	r3, r2, r1, lsl #24
    ad7c:	00000106 	andeq	r0, r0, r6, lsl #2
    ad80:	0000a179 	andeq	sl, r0, r9, ror r1
    ad84:	0000a175 	andeq	sl, r0, r5, ror r1
    ad88:	0028a51d 	eoreq	sl, r8, sp, lsl r5
    ad8c:	023e0100 	eorseq	r0, lr, #0, 2
    ad90:	00065813 	andeq	r5, r6, r3, lsl r8
    ad94:	00a19b00 	adceq	r9, r1, r0, lsl #22
    ad98:	00a19700 	adceq	r9, r1, r0, lsl #14
    ad9c:	00002100 	andeq	r2, r0, r0, lsl #2
    ada0:	18860000 	stmne	r6, {}	; <UNPREDICTABLE>
    ada4:	00210000 	eoreq	r0, r1, r0
    ada8:	94000000 	strls	r0, [r0], #-0
    adac:	00000018 	andeq	r0, r0, r8, lsl r0
    adb0:	28950129 	ldmcs	r5, {r0, r3, r5, r8}
    adb4:	2d010000 	stccs	0, cr0, [r1, #-0]
    adb8:	17011002 	strne	r1, [r1, -r2]
    adbc:	00000001 	andeq	r0, r0, r1
    adc0:	00000000 	andeq	r0, r0, r0
    adc4:	02000000 	andeq	r0, r0, #0
    adc8:	5b01007d 	blpl	4afc4 <__HEAP_SIZE+0x49fc4>
    adcc:	1b000013 	blne	ae20 <__HEAP_SIZE+0x9e20>
    add0:	000028a6 	andeq	r2, r0, r6, lsr #17
    add4:	2f022d01 	svccs	0x00022d01
    add8:	00000554 	andeq	r0, r0, r4, asr r5
    addc:	0000a1bd 			; <UNDEFINED> instruction: 0x0000a1bd
    ade0:	0000a1b9 			; <UNDEFINED> instruction: 0x0000a1b9
    ade4:	0028a51d 	eoreq	sl, r8, sp, lsl r5
    ade8:	022f0100 	eoreq	r0, pc, #0, 2
    adec:	00065813 	andeq	r5, r6, r3, lsl r8
    adf0:	00a1e200 	adceq	lr, r1, r0, lsl #4
    adf4:	00a1de00 	adceq	sp, r1, r0, lsl #28
    adf8:	012b0000 			; <UNDEFINED> instruction: 0x012b0000
    adfc:	00002337 	andeq	r2, r0, r7, lsr r3
    ae00:	12021f01 	andne	r1, r2, #1, 30
    ae04:	00051e01 	andeq	r1, r5, r1, lsl #28
	...
    ae10:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    ae14:	66011a01 	strvs	r1, [r1], -r1, lsl #20
    ae18:	01000026 	tsteq	r0, r6, lsr #32
    ae1c:	011001f3 			; <UNDEFINED> instruction: 0x011001f3
    ae20:	000000fa 	strdeq	r0, [r0], -sl
	...
    ae2c:	0000a203 	andeq	sl, r0, r3, lsl #4
    ae30:	00144701 	andseq	r4, r4, r1, lsl #14
    ae34:	28a61b00 	stmiacs	r6!, {r8, r9, fp, ip}
    ae38:	f3010000 	vhadd.u8	d0, d1, d0
    ae3c:	05543b01 	ldrbeq	r3, [r4, #-2817]	; 0xfffff4ff
    ae40:	a2570000 	subsge	r0, r7, #0
    ae44:	a2470000 	subge	r0, r7, #0
    ae48:	371b0000 	ldrcc	r0, [fp, -r0]
    ae4c:	01000025 	tsteq	r0, r5, lsr #32
    ae50:	063e01f4 			; <UNDEFINED> instruction: 0x063e01f4
    ae54:	ce000001 	cdpgt	0, 0, cr0, cr0, cr1, {0}
    ae58:	c20000a2 	andgt	r0, r0, #162	; 0xa2
    ae5c:	1b0000a2 	blne	b0ec <__HEAP_SIZE+0xa0ec>
    ae60:	00002491 	muleq	r0, r1, r4
    ae64:	3e01f501 	cfsh32cc	mvfx15, mvfx1, #1
    ae68:	00000123 	andeq	r0, r0, r3, lsr #2
    ae6c:	0000a32b 	andeq	sl, r0, fp, lsr #6
    ae70:	0000a31f 	andeq	sl, r0, pc, lsl r3
    ae74:	000af91b 	andeq	pc, sl, fp, lsl r9	; <UNPREDICTABLE>
    ae78:	01f60100 	mvnseq	r0, r0, lsl #2
    ae7c:	00090e40 	andeq	r0, r9, r0, asr #28
    ae80:	00a38800 	adceq	r8, r3, r0, lsl #16
    ae84:	00a37c00 	adceq	r7, r3, r0, lsl #24
    ae88:	20e91b00 	rsccs	r1, r9, r0, lsl #22
    ae8c:	f7010000 			; <UNDEFINED> instruction: 0xf7010000
    ae90:	01233e01 			; <UNDEFINED> instruction: 0x01233e01
    ae94:	a3dc0000 	bicsge	r0, ip, #0
    ae98:	a3d80000 	bicsge	r0, r8, #0
    ae9c:	211d0000 	tstcs	sp, r0
    aea0:	0100001a 	tsteq	r0, sl, lsl r0
    aea4:	fa1401f9 	blx	50b690 <__RAM_SIZE+0x40b690>
    aea8:	04000000 	streq	r0, [r0], #-0
    aeac:	fc0000a4 	stc2	0, cr0, [r0], {164}	; 0xa4
    aeb0:	1c0000a3 	stcne	0, cr0, [r0], {163}	; 0xa3
    aeb4:	00002852 	andeq	r2, r0, r2, asr r8
    aeb8:	1d01fa01 	vstrne	s30, [r1, #-4]
    aebc:	00000707 	andeq	r0, r0, r7, lsl #14
    aec0:	1e689102 	lgnnee	f1, f2
    aec4:	00000000 	andeq	r0, r0, r0
    aec8:	00001877 	andeq	r1, r0, r7, ror r8
    aecc:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    aed0:	011f0074 	tsteq	pc, r4, ror r0	; <UNPREDICTABLE>
    aed4:	007d0251 	rsbseq	r0, sp, r1, asr r2
    aed8:	0352011f 	cmpeq	r2, #-1073741817	; 0xc0000007
    aedc:	1f5301f3 	svcne	0x005301f3
    aee0:	30015301 	andcc	r5, r1, r1, lsl #6
    aee4:	011a0000 	tsteq	sl, r0
    aee8:	00002947 	andeq	r2, r0, r7, asr #18
    aeec:	1001c001 	andne	ip, r1, r1
    aef0:	0000fa01 	andeq	pc, r0, r1, lsl #20
	...
    aefc:	00a43b00 	adceq	r3, r4, r0, lsl #22
    af00:	15390100 	ldrne	r0, [r9, #-256]!	; 0xffffff00
    af04:	a61b0000 	ldrge	r0, [fp], -r0
    af08:	01000028 	tsteq	r0, r8, lsr #32
    af0c:	543c01c0 	ldrtpl	r0, [ip], #-448	; 0xfffffe40
    af10:	99000005 	stmdbls	r0, {r0, r2}
    af14:	8b0000a4 	blhi	b1ac <__HEAP_SIZE+0xa1ac>
    af18:	1b0000a4 	blne	b1b0 <__HEAP_SIZE+0xa1b0>
    af1c:	00002537 	andeq	r2, r0, r7, lsr r5
    af20:	3f01c101 	svccc	0x0001c101
    af24:	00000106 	andeq	r0, r0, r6, lsl #2
    af28:	0000a502 	andeq	sl, r0, r2, lsl #10
    af2c:	0000a4f8 	strdeq	sl, [r0], -r8
    af30:	0024911b 	eoreq	r9, r4, fp, lsl r1
    af34:	01c20100 	biceq	r0, r2, r0, lsl #2
    af38:	0001233f 	andeq	r2, r1, pc, lsr r3
    af3c:	00a55100 	adceq	r5, r5, r0, lsl #2
    af40:	00a54700 	adceq	r4, r5, r0, lsl #14
    af44:	0af91b00 	beq	ffe51b4c <__StackTop+0xc7d51b4c>
    af48:	c3010000 	movwgt	r0, #4096	; 0x1000
    af4c:	090e4101 	stmdbeq	lr, {r0, r8, lr}
    af50:	a59a0000 	ldrge	r0, [sl]
    af54:	a5960000 	ldrge	r0, [r6]
    af58:	e91b0000 	ldmdb	fp, {}	; <UNPREDICTABLE>
    af5c:	01000020 	tsteq	r0, r0, lsr #32
    af60:	233f01c4 	teqcs	pc, #196, 2	; 0x31
    af64:	bf000001 	svclt	0x00000001
    af68:	bb0000a5 	bllt	b204 <__HEAP_SIZE+0xa204>
    af6c:	1d0000a5 	stcne	0, cr0, [r0, #-660]	; 0xfffffd6c
    af70:	00001a21 	andeq	r1, r0, r1, lsr #20
    af74:	1401c601 	strne	ip, [r1], #-1537	; 0xfffff9ff
    af78:	000000fa 	strdeq	r0, [r0], -sl
    af7c:	0000a5eb 	andeq	sl, r0, fp, ror #11
    af80:	0000a5df 	ldrdeq	sl, [r0], -pc	; <UNPREDICTABLE>
    af84:	0028521c 	eoreq	r5, r8, ip, lsl r2
    af88:	01c70100 	biceq	r0, r7, r0, lsl #2
    af8c:	0007071d 	andeq	r0, r7, sp, lsl r7
    af90:	68910200 	ldmvs	r1, {r9}
    af94:	00000021 	andeq	r0, r0, r1, lsr #32
    af98:	00194500 	andseq	r4, r9, r0, lsl #10
    af9c:	00002400 	andeq	r2, r0, r0, lsl #8
    afa0:	18680000 	stmdane	r8!, {}^	; <UNPREDICTABLE>
    afa4:	151c0000 	ldrne	r0, [ip, #-0]
    afa8:	011f0000 	tsteq	pc, r0
    afac:	007d0251 	rsbseq	r0, sp, r1, asr r2
    afb0:	0152011f 	cmpeq	r2, pc, lsl r1
    afb4:	53011f30 	movwpl	r1, #7984	; 0x1f30
    afb8:	1e003001 	cdpne	0, 0, cr3, cr0, cr1, {0}
    afbc:	00000000 	andeq	r0, r0, r0
    afc0:	00001868 	andeq	r1, r0, r8, ror #16
    afc4:	0251011f 	subseq	r0, r1, #-1073741817	; 0xc0000007
    afc8:	011f007d 	tsteq	pc, sp, ror r0	; <UNPREDICTABLE>
    afcc:	00910352 	addseq	r0, r1, r2, asr r3
    afd0:	53011f06 	movwpl	r1, #7942	; 0x1f06
    afd4:	00003001 	andeq	r3, r0, r1
    afd8:	00269622 	eoreq	r9, r6, r2, lsr #12
    afdc:	01a10100 			; <UNDEFINED> instruction: 0x01a10100
    afe0:	00000111 	andeq	r0, r0, r1, lsl r1
    afe4:	00000000 	andeq	r0, r0, r0
    afe8:	a6390000 	ldrtge	r0, [r9], -r0
    afec:	e2010000 	and	r0, r1, #0
    aff0:	1b000015 	blne	b04c <__HEAP_SIZE+0xa04c>
    aff4:	000024a0 	andeq	r2, r0, r0, lsr #9
    aff8:	3b01a101 	blcc	73404 <__HEAP_SIZE+0x72404>
    affc:	000000b3 	strheq	r0, [r0], -r3
    b000:	0000a65d 	andeq	sl, r0, sp, asr r6
    b004:	0000a659 	andeq	sl, r0, r9, asr r6
    b008:	00242f1b 	eoreq	r2, r4, fp, lsl pc
    b00c:	01a20100 			; <UNDEFINED> instruction: 0x01a20100
    b010:	00012339 	andeq	r2, r1, r9, lsr r3
    b014:	00a67f00 	adceq	r7, r6, r0, lsl #30
    b018:	00a67b00 	adceq	r7, r6, r0, lsl #22
    b01c:	265a1b00 	ldrbcs	r1, [sl], -r0, lsl #22
    b020:	a3010000 	movwge	r0, #4096	; 0x1000
    b024:	01063901 	tsteq	r6, r1, lsl #18
    b028:	a6a10000 	strtge	r0, [r1], r0
    b02c:	a69d0000 	ldrge	r0, [sp], r0
    b030:	5b1b0000 	blpl	6cb038 <__RAM_SIZE+0x5cb038>
    b034:	01000028 	tsteq	r0, r8, lsr #32
    b038:	9c3501a4 	ldflss	f0, [r5], #-656	; 0xfffffd70
    b03c:	c3000000 	movwgt	r0, #0
    b040:	bf0000a6 	svclt	0x000000a6
    b044:	2a0000a6 	bcs	b2e4 <__HEAP_SIZE+0xa2e4>
    b048:	00002443 	andeq	r2, r0, r3, asr #8
    b04c:	4001a501 	andmi	sl, r1, r1, lsl #10
    b050:	000005d3 	ldrdeq	r0, [r0], -r3
    b054:	2a009102 	bcs	2f464 <__HEAP_SIZE+0x2e464>
    b058:	000025fe 	strdeq	r2, [r0], -lr
    b05c:	3201a601 	andcc	sl, r1, #1048576	; 0x100000
    b060:	00000658 	andeq	r0, r0, r8, asr r6
    b064:	21049102 	tstcs	r4, r2, lsl #2
    b068:	00000000 	andeq	r0, r0, r0
    b06c:	00000a65 	andeq	r0, r0, r5, ror #20
    b070:	0000001e 	andeq	r0, r0, lr, lsl r0
    b074:	00195400 	andseq	r5, r9, r0, lsl #8
    b078:	50011f00 	andpl	r1, r1, r0, lsl #30
    b07c:	00047402 	andeq	r7, r4, r2, lsl #8
    b080:	b6011a00 	strlt	r1, [r1], -r0, lsl #20
    b084:	01000025 	tsteq	r0, r5, lsr #32
    b088:	01170172 	tsteq	r7, r2, ror r1
    b08c:	00000554 	andeq	r0, r0, r4, asr r5
	...
    b098:	0000a6e1 	andeq	sl, r0, r1, ror #13
    b09c:	0016c001 	andseq	ip, r6, r1
    b0a0:	24a01b00 	strtcs	r1, [r0], #2816	; 0xb00
    b0a4:	72010000 	andvc	r0, r1, #0
    b0a8:	00b33e01 	adcseq	r3, r3, r1, lsl #28
    b0ac:	a71d0000 	ldrge	r0, [sp, -r0]
    b0b0:	a7190000 	ldrge	r0, [r9, -r0]
    b0b4:	2f1b0000 	svccs	0x001b0000
    b0b8:	01000024 	tsteq	r0, r4, lsr #32
    b0bc:	233c0173 	teqcs	ip, #-1073741796	; 0xc000001c
    b0c0:	42000001 	andmi	r0, r0, #1
    b0c4:	3e0000a7 	cdpcc	0, 0, cr0, cr0, cr7, {5}
    b0c8:	1b0000a7 	blne	b36c <__HEAP_SIZE+0xa36c>
    b0cc:	0000265a 	andeq	r2, r0, sl, asr r6
    b0d0:	3c017401 	cfstrscc	mvf7, [r1], {1}
    b0d4:	00000106 	andeq	r0, r0, r6, lsl #2
    b0d8:	0000a767 	andeq	sl, r0, r7, ror #14
    b0dc:	0000a763 	andeq	sl, r0, r3, ror #14
    b0e0:	00285b1b 	eoreq	r5, r8, fp, lsl fp
    b0e4:	01750100 	cmneq	r5, r0, lsl #2
    b0e8:	00009c38 	andeq	r9, r0, r8, lsr ip
    b0ec:	00a78c00 	adceq	r8, r7, r0, lsl #24
    b0f0:	00a78800 	adceq	r8, r7, r0, lsl #16
    b0f4:	24432a00 	strbcs	r2, [r3], #-2560	; 0xfffff600
    b0f8:	76010000 	strvc	r0, [r1], -r0
    b0fc:	05d34301 	ldrbeq	r4, [r3, #769]	; 0x301
    b100:	91020000 	mrsls	r0, (UNDEF: 2)
    b104:	29782a00 	ldmdbcs	r8!, {r9, fp, sp}^
    b108:	77010000 	strvc	r0, [r1, -r0]
    b10c:	11703b01 	cmnne	r0, r1, lsl #22
    b110:	91020000 	mrsls	r0, (UNDEF: 2)
    b114:	25fe1d04 	ldrbcs	r1, [lr, #3332]!	; 0xd04
    b118:	79010000 	stmdbvc	r1, {}	; <UNPREDICTABLE>
    b11c:	06581701 	ldrbeq	r1, [r8], -r1, lsl #14
    b120:	a7af0000 	strge	r0, [pc, r0]!
    b124:	a7ad0000 	strge	r0, [sp, r0]!
    b128:	001e0000 	andseq	r0, lr, r0
    b12c:	39000000 	stmdbcc	r0, {}	; <UNPREDICTABLE>
    b130:	1f000015 	svcne	0x00000015
    b134:	f3035001 	vhadd.u8	d5, d3, d1
    b138:	011f5001 	tsteq	pc, r1
    b13c:	01f30351 	mvnseq	r0, r1, asr r3
    b140:	52011f51 	andpl	r1, r1, #324	; 0x144
    b144:	5201f303 	andpl	pc, r1, #201326592	; 0xc000000
    b148:	0353011f 	cmpeq	r3, #-1073741817	; 0xc0000007
    b14c:	1f5301f3 	svcne	0x005301f3
    b150:	02007d02 	andeq	r7, r0, #2, 26	; 0x80
    b154:	021f0075 	andseq	r0, pc, #117	; 0x75
    b158:	7402047d 	strvc	r0, [r2], #-1149	; 0xfffffb83
    b15c:	1a000000 	bne	b164 <__HEAP_SIZE+0xa164>
    b160:	00272501 	eoreq	r2, r7, r1, lsl #10
    b164:	01500100 	cmpeq	r0, r0, lsl #2
    b168:	05540117 	ldrbeq	r0, [r4, #-279]	; 0xfffffee9
	...
    b174:	a7c20000 	strbge	r0, [r2, r0]
    b178:	9f010000 	svcls	0x00010000
    b17c:	1b000017 	blne	b1e0 <__HEAP_SIZE+0xa1e0>
    b180:	000024a0 	andeq	r2, r0, r0, lsr #9
    b184:	38015001 	stmdacc	r1, {r0, ip, lr}
    b188:	000000b3 	strheq	r0, [r0], -r3
    b18c:	0000a7fe 	strdeq	sl, [r0], -lr
    b190:	0000a7fa 	strdeq	sl, [r0], -sl	; <UNPREDICTABLE>
    b194:	00242f1b 	eoreq	r2, r4, fp, lsl pc
    b198:	01510100 	cmpeq	r1, r0, lsl #2
    b19c:	00012336 	andeq	r2, r1, r6, lsr r3
    b1a0:	00a82000 	adceq	r2, r8, r0
    b1a4:	00a81c00 	adceq	r1, r8, r0, lsl #24
    b1a8:	265a1b00 	ldrbcs	r1, [sl], -r0, lsl #22
    b1ac:	52010000 	andpl	r0, r1, #0
    b1b0:	01063601 	tsteq	r6, r1, lsl #12
    b1b4:	a8420000 	stmdage	r2, {}^	; <UNPREDICTABLE>
    b1b8:	a83e0000 	ldmdage	lr!, {}	; <UNPREDICTABLE>
    b1bc:	5b1b0000 	blpl	6cb1c4 <__RAM_SIZE+0x5cb1c4>
    b1c0:	01000028 	tsteq	r0, r8, lsr #32
    b1c4:	9c320153 	ldflss	f0, [r2], #-332	; 0xfffffeb4
    b1c8:	64000000 	strvs	r0, [r0], #-0
    b1cc:	600000a8 	andvs	r0, r0, r8, lsr #1
    b1d0:	2a0000a8 	bcs	b478 <__HEAP_SIZE+0xa478>
    b1d4:	00002443 	andeq	r2, r0, r3, asr #8
    b1d8:	3d015401 	cfstrscc	mvf5, [r1, #-4]
    b1dc:	000005d3 	ldrdeq	r0, [r0], -r3
    b1e0:	1d009102 	stfned	f1, [r0, #-8]
    b1e4:	000025fe 	strdeq	r2, [r0], -lr
    b1e8:	17015601 	strne	r5, [r1, -r1, lsl #12]
    b1ec:	00000658 	andeq	r0, r0, r8, asr r6
    b1f0:	0000a886 	andeq	sl, r0, r6, lsl #17
    b1f4:	0000a882 	andeq	sl, r0, r2, lsl #17
    b1f8:	00000024 	andeq	r0, r0, r4, lsr #32
    b1fc:	00196300 	andseq	r6, r9, r0, lsl #6
    b200:	00176d00 	andseq	r6, r7, r0, lsl #26
    b204:	50011f00 	andpl	r1, r1, r0, lsl #30
    b208:	00280802 	eoreq	r0, r8, r2, lsl #16
    b20c:	0000001e 	andeq	r0, r0, lr, lsl r0
    b210:	00153900 	andseq	r3, r5, r0, lsl #18
    b214:	50011f00 	andpl	r1, r1, r0, lsl #30
    b218:	1f007402 	svcne	0x00007402
    b21c:	78025101 	stmdavc	r2, {r0, r8, ip, lr}
    b220:	52011f00 	andpl	r1, r1, #0, 30
    b224:	1f007702 	svcne	0x00007702
    b228:	75025301 	strvc	r5, [r2, #-769]	; 0xfffffcff
    b22c:	7d021f00 	stcvc	15, cr1, [r2, #-0]
    b230:	00910300 	addseq	r0, r1, r0, lsl #6
    b234:	7d021f06 	stcvc	15, cr1, [r2, #-24]	; 0xffffffe8
    b238:	00760204 	rsbseq	r0, r6, r4, lsl #4
    b23c:	012c0000 			; <UNDEFINED> instruction: 0x012c0000
    b240:	0000170b 	andeq	r1, r0, fp, lsl #14
    b244:	0110ed01 	tsteq	r0, r1, lsl #26
    b248:	000000fa 	strdeq	r0, [r0], -sl
    b24c:	10003274 	andne	r3, r0, r4, ror r2
    b250:	100032d0 	ldrdne	r3, [r0], -r0
    b254:	0000a8a4 	andeq	sl, r0, r4, lsr #17
    b258:	00186201 	andseq	r6, r8, r1, lsl #4
    b25c:	1a212d00 	bne	856664 <__RAM_SIZE+0x756664>
    b260:	ef010000 	svc	0x00010000
    b264:	0000fa14 	andeq	pc, r0, r4, lsl sl	; <UNPREDICTABLE>
    b268:	00a8e200 	adceq	lr, r8, r0, lsl #4
    b26c:	00a8dc00 	adceq	sp, r8, r0, lsl #24
    b270:	32822300 	addcc	r2, r2, #0, 6
    b274:	32b41000 	adcscc	r1, r4, #0
    b278:	18581000 	ldmdane	r8, {ip}^
    b27c:	e91c0000 	ldmdb	ip, {}	; <UNPREDICTABLE>
    b280:	0100001e 	tsteq	r0, lr, lsl r0
    b284:	62240122 	eorvs	r0, r4, #-2147483640	; 0x80000008
    b288:	02000018 	andeq	r0, r0, #24
    b28c:	4e1c6c91 	mrcmi	12, 0, r6, cr12, cr1, {4}
    b290:	0100001b 	tsteq	r0, fp, lsl r0
    b294:	36230123 	strtcc	r0, [r3], -r3, lsr #2
    b298:	02000005 	andeq	r0, r0, #5
    b29c:	b11c7091 			; <UNDEFINED> instruction: 0xb11c7091
    b2a0:	01000020 	tsteq	r0, r0, lsr #32
    b2a4:	292c0124 	stmdbcs	ip!, {r2, r5, r8}
    b2a8:	02000000 	andeq	r0, r0, #0
    b2ac:	92247491 	eorls	r7, r4, #-1862270976	; 0x91000000
    b2b0:	71100032 	tstvc	r0, r2, lsr r0
    b2b4:	2f000019 	svccs	0x00000019
    b2b8:	1f000018 	svcne	0x00000018
    b2bc:	91025001 	tstls	r2, r1
    b2c0:	51011f6c 	tstpl	r1, ip, ror #30
    b2c4:	1f709102 	svcne	0x00709102
    b2c8:	91025201 	tstls	r2, r1, lsl #4
    b2cc:	aa1e0074 	bge	78b4a4 <__RAM_SIZE+0x68b4a4>
    b2d0:	80100032 	andshi	r0, r0, r2, lsr r0
    b2d4:	1f000019 	svcne	0x00000019
    b2d8:	03055001 	movweq	r5, #20481	; 0x5001
    b2dc:	100031fd 	strdne	r3, [r0], -sp
    b2e0:	0551011f 	ldrbeq	r0, [r1, #-287]	; 0xfffffee1
    b2e4:	005d9003 	subseq	r9, sp, r3
    b2e8:	53011f10 	movwpl	r1, #7952	; 0x1f10
    b2ec:	1f007402 	svcne	0x00007402
    b2f0:	01007d02 	tsteq	r0, r2, lsl #26
    b2f4:	21000034 	tstcs	r0, r4, lsr r0
    b2f8:	1000327c 	andne	r3, r0, ip, ror r2
    b2fc:	00000a65 	andeq	r0, r0, r5, ror #20
    b300:	dc040700 	stcle	7, cr0, [r4], {-0}
    b304:	2e000002 	cdpcs	0, 0, cr0, cr0, cr2, {0}
    b308:	0dfa0101 	ldfeqe	f0, [sl, #4]!
    b30c:	0dfa0000 	ldcleq	0, cr0, [sl]
    b310:	ae0a0000 	cdpge	0, 0, cr0, cr10, cr0, {0}
    b314:	012e0c02 			; <UNDEFINED> instruction: 0x012e0c02
    b318:	000b5901 	andeq	r5, fp, r1, lsl #18
    b31c:	000b5900 	andeq	r5, fp, r0, lsl #18
    b320:	05510a00 	ldrbeq	r0, [r1, #-2560]	; 0xfffff600
    b324:	01012f0c 	tsteq	r1, ip, lsl #30
    b328:	00000bdb 	ldrdeq	r0, [r0], -fp
    b32c:	00000bdb 	ldrdeq	r0, [r0], -fp
    b330:	2f0d7106 	svccs	0x000d7106
    b334:	0a4b0101 	beq	12cb740 <__RAM_SIZE+0x11cb740>
    b338:	0a4b0000 	beq	12cb340 <__RAM_SIZE+0x11cb340>
    b33c:	72060000 	andvc	r0, r6, #0
    b340:	01012e0d 	tsteq	r1, sp, lsl #28
    b344:	0000120a 	andeq	r1, r0, sl, lsl #4
    b348:	0000120a 	andeq	r1, r0, sl, lsl #4
    b34c:	13064f0a 	movwne	r4, #28426	; 0x6f0a
    b350:	a301012e 	movwge	r0, #4398	; 0x112e
    b354:	a3000009 	movwge	r0, #9
    b358:	08000009 	stmdaeq	r0, {r0, r3}
    b35c:	2e0601b9 	mcrcs	1, 0, r0, cr6, cr9, {5}
    b360:	0abf0101 	beq	fefcb76c <__StackTop+0xc6ecb76c>
    b364:	0abf0000 	beq	fefcb36c <__StackTop+0xc6ecb36c>
    b368:	910a0000 	mrsls	r0, (UNDEF: 10)
    b36c:	012e0c03 			; <UNDEFINED> instruction: 0x012e0c03
    b370:	000a2401 	andeq	r2, sl, r1, lsl #8
    b374:	000a2400 	andeq	r2, sl, r0, lsl #8
    b378:	01f70800 	mvnseq	r0, r0, lsl #16
    b37c:	01012f0d 	tsteq	r1, sp, lsl #30
    b380:	000011c9 	andeq	r1, r0, r9, asr #3
    b384:	000011c9 	andeq	r1, r0, r9, asr #3
    b388:	2e06b80c 	cdpcs	8, 0, cr11, cr6, cr12, {0}
    b38c:	0a3f0101 	beq	fcb798 <__RAM_SIZE+0xecb798>
    b390:	0a3f0000 	beq	fcb398 <__RAM_SIZE+0xecb398>
    b394:	d1080000 	mrsle	r0, (UNDEF: 8)
    b398:	012e0601 			; <UNDEFINED> instruction: 0x012e0601
    b39c:	001c9901 	andseq	r9, ip, r1, lsl #18
    b3a0:	001c9900 	andseq	r9, ip, r0, lsl #18
    b3a4:	06a40900 	strteq	r0, [r4], r0, lsl #18
    b3a8:	01012e0c 	tsteq	r1, ip, lsl #28
    b3ac:	00000d24 	andeq	r0, r0, r4, lsr #26
    b3b0:	00000d24 	andeq	r0, r0, r4, lsr #26
    b3b4:	06065b09 	streq	r5, [r6], -r9, lsl #22
    b3b8:	3b01012e 	blcc	4b878 <__HEAP_SIZE+0x4a878>
    b3bc:	3b000011 	blcc	b408 <__HEAP_SIZE+0xa408>
    b3c0:	0a000011 	beq	b40c <__HEAP_SIZE+0xa40c>
    b3c4:	2e0606f6 	mcrcs	6, 0, r0, cr6, cr6, {7}
    b3c8:	117f0101 	cmnne	pc, r1, lsl #2
    b3cc:	117f0000 	cmnne	pc, r0
    b3d0:	93090000 	movwls	r0, #36864	; 0x9000
    b3d4:	012f0c06 			; <UNDEFINED> instruction: 0x012f0c06
    b3d8:	000a8601 	andeq	r8, sl, r1, lsl #12
    b3dc:	000a8600 	andeq	r8, sl, r0, lsl #12
    b3e0:	0d6f0600 	stcleq	6, cr0, [pc, #-0]	; b3e8 <__HEAP_SIZE+0xa3e8>
    b3e4:	0701012e 	streq	r0, [r1, -lr, lsr #2]
    b3e8:	07000015 	smladeq	r0, r5, r0, r0
    b3ec:	09000015 	stmdbeq	r0, {r0, r2, r4}
    b3f0:	2e0c0e14 	mcrcs	14, 0, r0, cr12, cr4, {0}
    b3f4:	09690101 	stmdbeq	r9!, {r0, r8}^
    b3f8:	09690000 	stmdbeq	r9!, {}^	; <UNPREDICTABLE>
    b3fc:	c4080000 	strgt	r0, [r8], #-0
    b400:	012f0601 			; <UNDEFINED> instruction: 0x012f0601
    b404:	000d0001 	andeq	r0, sp, r1
    b408:	000d0000 	andeq	r0, sp, r0
    b40c:	08b50c00 	ldmeq	r5!, {sl, fp}
    b410:	7401012e 	strvc	r0, [r1], #-302	; 0xfffffed2
    b414:	74000017 	strvc	r0, [r0], #-23	; 0xffffffe9
    b418:	0b000017 	bleq	b47c <__HEAP_SIZE+0xa47c>
    b41c:	2e0a0575 	cfrshl64cs	mvdx10, mvdx5, r0
    b420:	174d0101 	strbne	r0, [sp, -r1, lsl #2]
    b424:	174d0000 	strbne	r0, [sp, -r0]
    b428:	fd090000 	stc2	0, cr0, [r9, #-0]
    b42c:	15001201 	strne	r1, [r0, #-513]	; 0xfffffdff
    b430:	02000006 	andeq	r0, r0, #6
    b434:	00158000 	andseq	r8, r5, r0
    b438:	89010400 	stmdbhi	r1, {sl}
    b43c:	0c000001 	stceq	0, cr0, [r0], {1}
    b440:	00002a98 	muleq	r0, r8, sl
    b444:	0000038d 	andeq	r0, r0, sp, lsl #7
    b448:	00000b08 	andeq	r0, r0, r8, lsl #22
	...
    b454:	00007ba2 	andeq	r7, r0, r2, lsr #23
    b458:	00050c02 	andeq	r0, r5, r2, lsl #24
    b45c:	17d10200 	ldrbne	r0, [r1, r0, lsl #4]
    b460:	0000003a 	andeq	r0, r0, sl, lsr r0
    b464:	00002903 	andeq	r2, r0, r3, lsl #18
    b468:	07040400 	streq	r0, [r4, -r0, lsl #8]
    b46c:	000002cf 	andeq	r0, r0, pc, asr #5
    b470:	69050405 	stmdbvs	r5, {r0, r2, sl}
    b474:	0400746e 	streq	r7, [r0], #-1134	; 0xfffffb92
    b478:	01270508 			; <UNDEFINED> instruction: 0x01270508
    b47c:	08040000 	stmdaeq	r4, {}	; <UNPREDICTABLE>
    b480:	00006304 	andeq	r6, r0, r4, lsl #6
    b484:	06010400 	streq	r0, [r1], -r0, lsl #8
    b488:	00000273 	andeq	r0, r0, r3, ror r2
    b48c:	00017f02 	andeq	r7, r1, r2, lsl #30
    b490:	182b0300 	stmdane	fp!, {r8, r9}
    b494:	00000069 	andeq	r0, r0, r9, rrx
    b498:	71080104 	tstvc	r8, r4, lsl #2
    b49c:	04000002 	streq	r0, [r0], #-2
    b4a0:	00320502 	eorseq	r0, r2, r2, lsl #10
    b4a4:	02040000 	andeq	r0, r4, #0
    b4a8:	00032207 	andeq	r2, r3, r7, lsl #4
    b4ac:	05040400 	streq	r0, [r4, #-1024]	; 0xfffffc00
    b4b0:	0000012c 	andeq	r0, r0, ip, lsr #2
    b4b4:	00006f02 	andeq	r6, r0, r2, lsl #30
    b4b8:	194f0300 	stmdbne	pc, {r8, r9}^	; <UNPREDICTABLE>
    b4bc:	00000091 	muleq	r0, r1, r0
    b4c0:	ca070404 	bgt	1cc4d8 <__RAM_SIZE+0xcc4d8>
    b4c4:	04000002 	streq	r0, [r0], #-2
    b4c8:	02c50708 	sbceq	r0, r5, #8, 14	; 0x200000
    b4cc:	04060000 	streq	r0, [r6], #-0
    b4d0:	7a080104 	bvc	20b8e8 <__RAM_SIZE+0x10b8e8>
    b4d4:	02000002 	andeq	r0, r0, #2
    b4d8:	00000181 	andeq	r0, r0, r1, lsl #3
    b4dc:	5d131804 	ldcpl	8, cr1, [r3, #-16]
    b4e0:	02000000 	andeq	r0, r0, #0
    b4e4:	00000071 	andeq	r0, r0, r1, ror r0
    b4e8:	85143004 	ldrhi	r3, [r4, #-4]
    b4ec:	02000000 	andeq	r0, r0, #0
    b4f0:	00000928 	andeq	r0, r0, r8, lsr #18
    b4f4:	b41a5105 	ldrlt	r5, [sl], #-261	; 0xfffffefb
    b4f8:	07000000 	streq	r0, [r0, -r0]
    b4fc:	0000a804 	andeq	sl, r0, r4, lsl #16
    b500:	29d00800 	ldmibcs	r0, {fp}^
    b504:	061c0000 	ldreq	r0, [ip], -r0
    b508:	01491094 	swpbeq	r1, r4, [r9]
    b50c:	7d090000 	stcvc	0, cr0, [r9, #-0]
    b510:	0600002b 	streq	r0, [r0], -fp, lsr #32
    b514:	00290c96 	mlaeq	r9, r6, ip, r0
    b518:	23020000 	movwcs	r0, #8192	; 0x2000
    b51c:	2bc90900 	blcs	ff24d924 <__StackTop+0xc714d924>
    b520:	97060000 	strls	r0, [r6, -r0]
    b524:	0000290c 	andeq	r2, r0, ip, lsl #18
    b528:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    b52c:	002a7809 	eoreq	r7, sl, r9, lsl #16
    b530:	0c980600 	ldceq	6, cr0, [r8], {0}
    b534:	00000029 	andeq	r0, r0, r9, lsr #32
    b538:	09082302 	stmdbeq	r8, {r1, r8, r9, sp}
    b53c:	00002a27 	andeq	r2, r0, r7, lsr #20
    b540:	290c9906 	stmdbcs	ip, {r1, r2, r8, fp, ip, pc}
    b544:	02000000 	andeq	r0, r0, #0
    b548:	db090c23 	blle	24e5dc <__RAM_SIZE+0x14e5dc>
    b54c:	06000029 	streq	r0, [r0], -r9, lsr #32
    b550:	00290c9a 	mlaeq	r9, sl, ip, r0
    b554:	23020000 	movwcs	r0, #8192	; 0x2000
    b558:	2b5e0910 	blcs	178d9a0 <__RAM_SIZE+0x168d9a0>
    b55c:	9b060000 	blls	18b564 <__RAM_SIZE+0x8b564>
    b560:	0000290c 	andeq	r2, r0, ip, lsl #18
    b564:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    b568:	002c1309 	eoreq	r1, ip, r9, lsl #6
    b56c:	0c9c0600 	ldceq	6, cr0, [ip], {0}
    b570:	00000029 	andeq	r0, r0, r9, lsr #32
    b574:	00182302 	andseq	r2, r8, r2, lsl #6
    b578:	0029fa02 	eoreq	pc, r9, r2, lsl #20
    b57c:	039d0600 	orrseq	r0, sp, #0, 12
    b580:	000000d2 	ldrdeq	r0, [r0], -r2
    b584:	0000a80a 	andeq	sl, r0, sl, lsl #16
    b588:	00016600 	andeq	r6, r1, r0, lsl #12
    b58c:	003a0b00 	eorseq	r0, sl, r0, lsl #22
    b590:	7fff0000 	svcvc	0x00ff0000
    b594:	00250c00 	eoreq	r0, r5, r0, lsl #24
    b598:	5d010000 	stcpl	0, cr0, [r1, #-0]
    b59c:	00015514 	andeq	r5, r1, r4, lsl r5
    b5a0:	08010100 	stmdaeq	r1, {r8}
    b5a4:	00002a5c 	andeq	r2, r0, ip, asr sl
    b5a8:	10640108 	rsbne	r0, r4, r8, lsl #2
    b5ac:	000001a0 	andeq	r0, r0, r0, lsr #3
    b5b0:	002a0609 	eoreq	r0, sl, r9, lsl #12
    b5b4:	1b660100 	blne	198b9bc <__RAM_SIZE+0x188b9bc>
    b5b8:	000001a0 	andeq	r0, r0, r0, lsr #3
    b5bc:	09002302 	stmdbeq	r0, {r1, r8, r9, sp}
    b5c0:	00002c2c 	andeq	r2, r0, ip, lsr #24
    b5c4:	290c6701 	stmdbcs	ip, {r0, r8, r9, sl, sp, lr}
    b5c8:	02000000 	andeq	r0, r0, #0
    b5cc:	07000423 	streq	r0, [r0, -r3, lsr #8]
    b5d0:	00017404 	andeq	r7, r1, r4, lsl #8
    b5d4:	2b520200 	blcs	148bddc <__RAM_SIZE+0x138bddc>
    b5d8:	68010000 	stmdavs	r1, {}	; <UNPREDICTABLE>
    b5dc:	00017403 	andeq	r7, r1, r3, lsl #8
    b5e0:	2b980d00 	blcs	fe60e9e8 <__StackTop+0xc650e9e8>
    b5e4:	9e010000 	cdpls	0, 0, cr0, cr1, cr0, {0}
    b5e8:	00003515 	andeq	r3, r0, r5, lsl r5
    b5ec:	370e0800 	strcc	r0, [lr, -r0, lsl #16]
    b5f0:	0100002c 	tsteq	r0, ip, lsr #32
    b5f4:	01a624a1 			; <UNDEFINED> instruction: 0x01a624a1
    b5f8:	03050000 	movweq	r0, #20480	; 0x5000
    b5fc:	38008cf8 	stmdacc	r0, {r3, r4, r5, r6, r7, sl, fp, pc}
    b600:	002a3b0e 	eoreq	r3, sl, lr, lsl #22
    b604:	26a20100 	strtcs	r0, [r2], r0, lsl #2
    b608:	000001e3 	andeq	r0, r0, r3, ror #3
    b60c:	8ce40305 	stclhi	3, cr0, [r4], #20
    b610:	04073800 	streq	r3, [r7], #-2048	; 0xfffff800
    b614:	000001a6 	andeq	r0, r0, r6, lsr #3
    b618:	002bb50e 	eoreq	fp, fp, lr, lsl #10
    b61c:	1fa60100 	svcne	0x00a60100
    b620:	00000029 	andeq	r0, r0, r9, lsr #32
    b624:	8ce80305 	stclhi	3, cr0, [r8], #20
    b628:	db0e3800 	blle	399630 <__RAM_SIZE+0x299630>
    b62c:	01000029 	tsteq	r0, r9, lsr #32
    b630:	00291fa7 	eoreq	r1, r9, r7, lsr #31
    b634:	03050000 	movweq	r0, #20480	; 0x5000
    b638:	38008cec 	stmdacc	r0, {r2, r3, r5, r6, r7, sl, fp, pc}
    b63c:	002b5e0e 	eoreq	r5, fp, lr, lsl #28
    b640:	1fa80100 	svcne	0x00a80100
    b644:	00000029 	andeq	r0, r0, r9, lsr #32
    b648:	8cf00305 	ldclhi	3, cr0, [r0], #20
    b64c:	130e3800 	movwne	r3, #59392	; 0xe800
    b650:	0100002c 	tsteq	r0, ip, lsr #32
    b654:	00291fa9 	eoreq	r1, r9, r9, lsr #31
    b658:	03050000 	movweq	r0, #20480	; 0x5000
    b65c:	38008cf4 	stmdacc	r0, {r2, r4, r5, r6, r7, sl, fp, pc}
    b660:	2b15010f 	blcs	54baa4 <__RAM_SIZE+0x44baa4>
    b664:	69010000 	stmdbvs	r1, {}	; <UNPREDICTABLE>
    b668:	00010602 	andeq	r0, r1, r2, lsl #12
    b66c:	00000000 	andeq	r0, r0, r0
    b670:	02000000 	andeq	r0, r0, #0
    b674:	1001007d 	andne	r0, r1, sp, ror r0
    b678:	002c7e01 	eoreq	r7, ip, r1, lsl #28
    b67c:	02300100 	eorseq	r0, r0, #0, 2
    b680:	00000106 	andeq	r0, r0, r6, lsl #2
    b684:	00000000 	andeq	r0, r0, r0
    b688:	a90e0000 	stmdbge	lr, {}	; <UNPREDICTABLE>
    b68c:	f2010000 	vhadd.s8	d0, d1, d0
    b690:	11000002 	tstne	r0, r2
    b694:	000029cf 	andeq	r2, r0, pc, asr #19
    b698:	27023001 	strcs	r3, [r2, -r1]
    b69c:	000002f2 	strdeq	r0, [r0], -r2
    b6a0:	0000a932 	andeq	sl, r0, r2, lsr r9
    b6a4:	0000a92e 	andeq	sl, r0, lr, lsr #18
    b6a8:	002a1612 	eoreq	r1, sl, r2, lsl r6
    b6ac:	02320100 	eorseq	r0, r2, #0, 2
    b6b0:	0001e313 	andeq	lr, r1, r3, lsl r3
    b6b4:	00a95400 	adceq	r5, r9, r0, lsl #8
    b6b8:	00a95000 	adceq	r5, r9, r0
    b6bc:	2c3e1200 	lfmcs	f1, 4, [lr], #-0
    b6c0:	33010000 	movwcc	r0, #4096	; 0x1000
    b6c4:	00290c02 	eoreq	r0, r9, r2, lsl #24
    b6c8:	a9760000 	ldmdbge	r6!, {}^	; <UNPREDICTABLE>
    b6cc:	a9720000 	ldmdbge	r2!, {}^	; <UNPREDICTABLE>
    b6d0:	29120000 	ldmdbcs	r2, {}	; <UNPREDICTABLE>
    b6d4:	0100002b 	tsteq	r0, fp, lsr #32
    b6d8:	29190233 	ldmdbcs	r9, {r0, r1, r4, r5, r9}
    b6dc:	99000000 	stmdbls	r0, {}	; <UNPREDICTABLE>
    b6e0:	950000a9 	strls	r0, [r0, #-169]	; 0xffffff57
    b6e4:	120000a9 	andne	r0, r0, #169	; 0xa9
    b6e8:	00002a1e 	andeq	r2, r0, lr, lsl sl
    b6ec:	27023301 	strcs	r3, [r2, -r1, lsl #6]
    b6f0:	00000029 	andeq	r0, r0, r9, lsr #32
    b6f4:	0000a9bc 			; <UNDEFINED> instruction: 0x0000a9bc
    b6f8:	0000a9b8 			; <UNDEFINED> instruction: 0x0000a9b8
    b6fc:	00000013 	andeq	r0, r0, r3, lsl r0
    b700:	0005d100 	andeq	sp, r5, r0, lsl #2
    b704:	00001300 	andeq	r1, r0, r0, lsl #6
    b708:	05e00000 	strbeq	r0, [r0, #0]!
    b70c:	00130000 	andseq	r0, r3, r0
    b710:	ef000000 	svc	0x00000000
    b714:	13000005 	movwne	r0, #5
    b718:	00000000 	andeq	r0, r0, r0
    b71c:	000005fd 	strdeq	r0, [r0], -sp
    b720:	49040700 	stmdbmi	r4, {r8, r9, sl}
    b724:	14000001 	strne	r0, [r0], #-1
    b728:	00002a41 	andeq	r2, r0, r1, asr #20
    b72c:	0d01ec01 	stceq	12, cr14, [r1, #-4]
    b730:	00332801 	eorseq	r2, r3, r1, lsl #16
    b734:	00338c10 	eorseq	r8, r3, r0, lsl ip
    b738:	00a9dc10 	adceq	sp, r9, r0, lsl ip
    b73c:	03530100 	cmpeq	r3, #0, 2
    b740:	f4110000 			; <UNDEFINED> instruction: 0xf4110000
    b744:	0100002b 	tsteq	r0, fp, lsr #32
    b748:	e33701ec 	teq	r7, #236, 2	; 0x3b
    b74c:	28000001 	stmdacs	r0, {r0}
    b750:	200000aa 	andcs	r0, r0, sl, lsr #1
    b754:	120000aa 	andne	r0, r0, #170	; 0xaa
    b758:	000009d8 	ldrdeq	r0, [r0], -r8
    b75c:	1301ee01 	movwne	lr, #7681	; 0x1e01
    b760:	000001e3 	andeq	r0, r0, r3, ror #3
    b764:	0000aa65 	andeq	sl, r0, r5, ror #20
    b768:	0000aa5f 	andeq	sl, r0, pc, asr sl
    b76c:	63757015 	cmnvs	r5, #21
    b770:	01ef0100 	mvneq	r0, r0, lsl #2
    b774:	0000cc0f 	andeq	ip, r0, pc, lsl #24
    b778:	00aa9b00 	adceq	r9, sl, r0, lsl #22
    b77c:	00aa9300 	adceq	r9, sl, r0, lsl #6
    b780:	e8160000 	ldmda	r6, {}	; <UNPREDICTABLE>
    b784:	0100002b 	tsteq	r0, fp, lsr #32
    b788:	010d01bc 			; <UNDEFINED> instruction: 0x010d01bc
    b78c:	100032d0 	ldrdne	r3, [r0], -r0
    b790:	10003328 	andne	r3, r0, r8, lsr #6
    b794:	01007d02 	tsteq	r0, r2, lsl #26
    b798:	000003c2 	andeq	r0, r0, r2, asr #7
    b79c:	002c4b12 	eoreq	r4, ip, r2, lsl fp
    b7a0:	01be0100 			; <UNDEFINED> instruction: 0x01be0100
    b7a4:	0001e313 	andeq	lr, r1, r3, lsl r3
    b7a8:	00aad100 	adceq	sp, sl, r0, lsl #2
    b7ac:	00aacf00 	adceq	ip, sl, r0, lsl #30
    b7b0:	2a691200 	bcs	1a4ffb8 <__RAM_SIZE+0x194ffb8>
    b7b4:	bf010000 	svclt	0x00010000
    b7b8:	00b41b01 	adcseq	r1, r4, r1, lsl #22
    b7bc:	aae80000 	bge	ffa0b7c4 <__StackTop+0xc790b7c4>
    b7c0:	aae40000 	bge	ff90b7c8 <__StackTop+0xc780b7c8>
    b7c4:	cc120000 	ldcgt	0, cr0, [r2], {-0}
    b7c8:	0100002a 	tsteq	r0, sl, lsr #32
    b7cc:	b42b01bf 	strtlt	r0, [fp], #-447	; 0xfffffe41
    b7d0:	0a000000 	beq	b7d8 <__HEAP_SIZE+0xa7d8>
    b7d4:	060000ab 	streq	r0, [r0], -fp, lsr #1
    b7d8:	120000ab 	andne	r0, r0, #171	; 0xab
    b7dc:	00002c04 	andeq	r2, r0, r4, lsl #24
    b7e0:	0c01c001 	stceq	0, cr12, [r1], {1}
    b7e4:	00000029 	andeq	r0, r0, r9, lsr #32
    b7e8:	0000ab2f 	andeq	sl, r0, pc, lsr #22
    b7ec:	0000ab29 	andeq	sl, r0, r9, lsr #22
    b7f0:	a8011700 	stmdage	r1, {r8, r9, sl, ip}
    b7f4:	0100002b 	tsteq	r0, fp, lsr #32
    b7f8:	010801a9 	smlatbeq	r8, r9, r1, r0
    b7fc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    b808:	0000ab5e 	andeq	sl, r0, lr, asr fp
    b80c:	00045001 	andeq	r5, r4, r1
    b810:	2c461100 	stfcse	f1, [r6], {-0}
    b814:	a9010000 	stmdbge	r1, {}	; <UNPREDICTABLE>
    b818:	00291d01 	eoreq	r1, r9, r1, lsl #26
    b81c:	ab860000 	blge	fe18b824 <__StackTop+0xc608b824>
    b820:	ab7e0000 	blge	1f8b828 <__RAM_SIZE+0x1e8b828>
    b824:	2c110000 	ldccs	0, cr0, [r1], {-0}
    b828:	0100002b 	tsteq	r0, fp, lsr #32
    b82c:	291d01aa 	ldmdbcs	sp, {r1, r3, r5, r7, r8}
    b830:	c3000000 	movwgt	r0, #0
    b834:	bd0000ab 	stclt	0, cr0, [r0, #-684]	; 0xfffffd54
    b838:	150000ab 	strne	r0, [r0, #-171]	; 0xffffff55
    b83c:	01007670 	tsteq	r0, r0, ror r6
    b840:	9f0c01ac 	svcls	0x000c01ac
    b844:	f7000000 			; <UNDEFINED> instruction: 0xf7000000
    b848:	ef0000ab 	svc	0x000000ab
    b84c:	180000ab 	stmdane	r0, {r0, r1, r3, r5, r7}
    b850:	00000000 	andeq	r0, r0, r0
    b854:	0000051e 	andeq	r0, r0, lr, lsl r5
    b858:	00000434 	andeq	r0, r0, r4, lsr r4
    b85c:	02500119 	subseq	r0, r0, #1073741830	; 0x40000006
    b860:	1a000074 	bne	ba38 <__HEAP_SIZE+0xaa38>
    b864:	00000000 	andeq	r0, r0, r0
    b868:	0000060b 	andeq	r0, r0, fp, lsl #12
    b86c:	02500119 	subseq	r0, r0, #1073741830	; 0x40000006
    b870:	01190075 	tsteq	r9, r5, ror r0
    b874:	19300151 	ldmdbne	r0!, {r0, r4, r6, r8}
    b878:	74025201 	strvc	r5, [r2], #-513	; 0xfffffdff
    b87c:	0f000000 	svceq	0x00000000
    b880:	002c6801 	eoreq	r6, ip, r1, lsl #16
    b884:	01a30100 			; <UNDEFINED> instruction: 0x01a30100
    b888:	00000106 	andeq	r0, r0, r6, lsl #2
    b88c:	00000000 	andeq	r0, r0, r0
    b890:	7d020000 	stcvc	0, cr0, [r2, #-0]
    b894:	011b0100 	tsteq	fp, r0, lsl #2
    b898:	00002b32 	andeq	r2, r0, r2, lsr fp
    b89c:	08019d01 	stmdaeq	r1, {r0, r8, sl, fp, ip, pc}
    b8a0:	00002901 	andeq	r2, r0, r1, lsl #18
	...
    b8ac:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    b8b0:	e8011b01 	stmda	r1, {r0, r8, r9, fp, ip}
    b8b4:	0100002a 	tsteq	r0, sl, lsr #32
    b8b8:	01080197 			; <UNDEFINED> instruction: 0x01080197
    b8bc:	00000029 	andeq	r0, r0, r9, lsr #32
	...
    b8c8:	01007d02 	tsteq	r0, r2, lsl #26
    b8cc:	11c90110 	bicne	r0, r9, r0, lsl r1
    b8d0:	5c010000 	stcpl	0, cr0, [r1], {-0}
    b8d4:	60010601 	andvs	r0, r1, r1, lsl #12
    b8d8:	b0100034 	andslt	r0, r0, r4, lsr r0
    b8dc:	2d100034 	ldccs	0, cr0, [r0, #-208]	; 0xffffff30
    b8e0:	010000ac 	smlatbeq	r0, ip, r0, r0
    b8e4:	0000051e 	andeq	r0, r0, lr, lsl r5
    b8e8:	0076701c 	rsbseq	r7, r6, ip, lsl r0
    b8ec:	18015c01 	stmdane	r1, {r0, sl, fp, ip, lr}
    b8f0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    b8f4:	0000ac63 	andeq	sl, r0, r3, ror #24
    b8f8:	0000ac59 	andeq	sl, r0, r9, asr ip
    b8fc:	63757015 	cmnvs	r5, #21
    b900:	015e0100 	cmpeq	lr, r0, lsl #2
    b904:	0000cc0f 	andeq	ip, r0, pc, lsl #24
    b908:	00aca800 	adceq	sl, ip, r0, lsl #16
    b90c:	00aca200 	adceq	sl, ip, r0, lsl #4
    b910:	2c901200 	lfmcs	f1, 4, [r0], {0}
    b914:	5f010000 	svcpl	0x00010000
    b918:	01e31301 	mvneq	r1, r1, lsl #6
    b91c:	acd30000 	ldclge	0, cr0, [r3], {0}
    b920:	acd10000 	ldclge	0, cr0, [r1], {0}
    b924:	86130000 	ldrhi	r0, [r3], -r0
    b928:	d1100034 	tstle	r0, r4, lsr r0
    b92c:	18000005 	stmdane	r0, {r0, r2}
    b930:	10003498 	mulne	r0, r8, r4
    b934:	000002f8 	strdeq	r0, [r0], -r8
    b938:	00000514 	andeq	r0, r0, r4, lsl r5
    b93c:	02500119 	subseq	r0, r0, #1073741830	; 0x40000006
    b940:	13000075 	movwne	r0, #117	; 0x75
    b944:	100034a4 	andne	r3, r0, r4, lsr #9
    b948:	000005e0 	andeq	r0, r0, r0, ror #11
    b94c:	00011d00 	andeq	r1, r1, r0, lsl #26
    b950:	0100000d 	tsteq	r0, sp
    b954:	9f0108ad 	svcls	0x000108ad
    b958:	8c000000 	stchi	0, cr0, [r0], {-0}
    b95c:	60100033 	andsvs	r0, r0, r3, lsr r0
    b960:	e6100034 			; <UNDEFINED> instruction: 0xe6100034
    b964:	010000ac 	smlatbeq	r0, ip, r0, r0
    b968:	000005d1 	ldrdeq	r0, [r0], -r1
    b96c:	002c5c1e 	eoreq	r5, ip, lr, lsl ip
    b970:	1dad0100 	stfnes	f0, [sp]
    b974:	00000029 	andeq	r0, r0, r9, lsr #32
    b978:	0000ad12 	andeq	sl, r0, r2, lsl sp
    b97c:	0000ad06 	andeq	sl, r0, r6, lsl #26
    b980:	002a161f 	eoreq	r1, sl, pc, lsl r6
    b984:	13af0100 			; <UNDEFINED> instruction: 0x13af0100
    b988:	000001e3 	andeq	r0, r0, r3, ror #3
    b98c:	0000ad64 	andeq	sl, r0, r4, ror #26
    b990:	0000ad5e 	andeq	sl, r0, lr, asr sp
    b994:	0029bf1f 	eoreq	fp, r9, pc, lsl pc
    b998:	13b00100 	movsne	r0, #0, 2
    b99c:	000001e3 	andeq	r0, r0, r3, ror #3
    b9a0:	0000ad95 	muleq	r0, r5, sp
    b9a4:	0000ad8d 	andeq	sl, r0, sp, lsl #27
    b9a8:	002ad91f 	eoreq	sp, sl, pc, lsl r9
    b9ac:	13b10100 			; <UNDEFINED> instruction: 0x13b10100
    b9b0:	000001e3 	andeq	r0, r0, r3, ror #3
    b9b4:	0000add0 	ldrdeq	sl, [r0], -r0
    b9b8:	0000adce 	andeq	sl, r0, lr, asr #27
    b9bc:	0026091f 	eoreq	r0, r6, pc, lsl r9
    b9c0:	0cb20100 	ldfeqs	f0, [r2]
    b9c4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    b9c8:	0000ade9 	andeq	sl, r0, r9, ror #27
    b9cc:	0000ade3 	andeq	sl, r0, r3, ror #27
    b9d0:	002afd1f 	eoreq	pc, sl, pc, lsl sp	; <UNPREDICTABLE>
    b9d4:	0cb30100 	ldfeqs	f0, [r3]
    b9d8:	00000029 	andeq	r0, r0, r9, lsr #32
    b9dc:	0000ae18 	andeq	sl, r0, r8, lsl lr
    b9e0:	0000ae14 	andeq	sl, r0, r4, lsl lr
    b9e4:	0033b413 	eorseq	fp, r3, r3, lsl r4
    b9e8:	0005d110 	andeq	sp, r5, r0, lsl r1
    b9ec:	33d81300 	bicscc	r1, r8, #0, 6
    b9f0:	03531000 	cmpeq	r3, #0
    b9f4:	38130000 	ldmdacc	r3, {}	; <UNPREDICTABLE>
    b9f8:	e0100034 	ands	r0, r0, r4, lsr r0
    b9fc:	00000005 	andeq	r0, r0, r5
    ba00:	24010120 	strcs	r0, [r1], #-288	; 0xfffffee0
    ba04:	2400000d 	strcs	r0, [r0], #-13
    ba08:	0700000d 	streq	r0, [r0, -sp]
    ba0c:	2006065b 	andcs	r0, r6, fp, asr r6
    ba10:	117f0101 	cmnne	pc, r1, lsl #2
    ba14:	117f0000 	cmnne	pc, r0
    ba18:	93070000 	movwls	r0, #28672	; 0x7000
    ba1c:	01210c06 			; <UNDEFINED> instruction: 0x01210c06
    ba20:	000bdb01 	andeq	sp, fp, r1, lsl #22
    ba24:	000bdb00 	andeq	sp, fp, r0, lsl #22
    ba28:	0d710500 	cfldr64eq	mvdx0, [r1, #-0]
    ba2c:	4b010121 	blmi	4beb8 <__HEAP_SIZE+0x4aeb8>
    ba30:	4b00000a 	blmi	ba60 <__HEAP_SIZE+0xaa60>
    ba34:	0500000a 	streq	r0, [r0, #-10]
    ba38:	01220d72 			; <UNDEFINED> instruction: 0x01220d72
    ba3c:	0000ae01 	andeq	sl, r0, r1, lsl #28
    ba40:	0000a400 	andeq	sl, r0, r0, lsl #8
    ba44:	00000800 	andeq	r0, r0, r0, lsl #16
    ba48:	00000563 	andeq	r0, r0, r3, ror #10
    ba4c:	17de0002 	ldrbne	r0, [lr, r2]
    ba50:	01040000 	mrseq	r0, (UNDEF: 4)
    ba54:	00000189 	andeq	r0, r0, r9, lsl #3
    ba58:	002d080c 	eoreq	r0, sp, ip, lsl #16
    ba5c:	00038d00 	andeq	r8, r3, r0, lsl #26
    ba60:	000b6000 	andeq	r6, fp, r0
	...
    ba6c:	0082f300 	addeq	pc, r2, r0, lsl #6
    ba70:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
    ba74:	00746e69 	rsbseq	r6, r4, r9, ror #28
    ba78:	cf070403 	svcgt	0x00070403
    ba7c:	03000002 	movweq	r0, #2
    ba80:	01270508 			; <UNDEFINED> instruction: 0x01270508
    ba84:	08030000 	stmdaeq	r3, {}	; <UNPREDICTABLE>
    ba88:	00006304 	andeq	r6, r0, r4, lsl #6
    ba8c:	06010300 	streq	r0, [r1], -r0, lsl #6
    ba90:	00000273 	andeq	r0, r0, r3, ror r2
    ba94:	00017f04 	andeq	r7, r1, r4, lsl #30
    ba98:	182b0200 	stmdane	fp!, {r9}
    ba9c:	00000058 	andeq	r0, r0, r8, asr r0
    baa0:	71080103 	tstvc	r8, r3, lsl #2
    baa4:	03000002 	movweq	r0, #2
    baa8:	00320502 	eorseq	r0, r2, r2, lsl #10
    baac:	02030000 	andeq	r0, r3, #0
    bab0:	00032207 	andeq	r2, r3, r7, lsl #4
    bab4:	05040300 	streq	r0, [r4, #-768]	; 0xfffffd00
    bab8:	0000012c 	andeq	r0, r0, ip, lsr #2
    babc:	00006f04 	andeq	r6, r0, r4, lsl #30
    bac0:	194f0200 	stmdbne	pc, {r9}^	; <UNPREDICTABLE>
    bac4:	00000080 	andeq	r0, r0, r0, lsl #1
    bac8:	ca070403 	bgt	1ccadc <__RAM_SIZE+0xccadc>
    bacc:	03000002 	movweq	r0, #2
    bad0:	02c50708 	sbceq	r0, r5, #8, 14	; 0x200000
    bad4:	81040000 	mrshi	r0, (UNDEF: 4)
    bad8:	03000001 	movweq	r0, #1
    badc:	004c1318 	subeq	r1, ip, r8, lsl r3
    bae0:	71040000 	mrsvc	r0, (UNDEF: 4)
    bae4:	03000000 	movweq	r0, #0
    bae8:	00741430 	rsbseq	r1, r4, r0, lsr r4
    baec:	9a050000 	bls	14baf4 <__RAM_SIZE+0x4baf4>
    baf0:	04000000 	streq	r0, [r0], #-0
    baf4:	00001c40 	andeq	r1, r0, r0, asr #24
    baf8:	b7112404 	ldrlt	r2, [r1, -r4, lsl #8]
    bafc:	06000000 	streq	r0, [r0], -r0
    bb00:	0000bd04 	andeq	fp, r0, r4, lsl #26
    bb04:	c9010700 	stmdbgt	r1, {r8, r9, sl}
    bb08:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    bb0c:	000000c9 	andeq	r0, r0, r9, asr #1
    bb10:	04040900 	streq	r0, [r4], #-2304	; 0xfffff700
    bb14:	00001567 	andeq	r1, r0, r7, ror #10
    bb18:	9a1a4905 	bls	69df34 <__RAM_SIZE+0x59df34>
    bb1c:	04000000 	streq	r0, [r0], #-0
    bb20:	000009cd 	andeq	r0, r0, sp, asr #19
    bb24:	6d1a4a05 	vldrvs	s8, [sl, #-20]	; 0xffffffec
    bb28:	04000000 	streq	r0, [r0], #-0
    bb2c:	00000928 	andeq	r0, r0, r8, lsr #18
    bb30:	9a1a5105 	bls	69ff4c <__RAM_SIZE+0x59ff4c>
    bb34:	03000000 	movweq	r0, #0
    bb38:	027a0801 	rsbseq	r0, sl, #65536	; 0x10000
    bb3c:	04060000 	streq	r0, [r6], #-0
    bb40:	000000cb 	andeq	r0, r0, fp, asr #1
    bb44:	5801070a 	stmdapl	r1, {r1, r3, r8, r9, sl}
    bb48:	07000000 	streq	r0, [r0, -r0]
    bb4c:	011d01b6 			; <UNDEFINED> instruction: 0x011d01b6
    bb50:	e20b0000 	and	r0, fp, #0
    bb54:	00000017 	andeq	r0, r0, r7, lsl r0
    bb58:	001fcc0b 	andseq	ip, pc, fp, lsl #24
    bb5c:	e30b0100 	movw	r0, #45312	; 0xb100
    bb60:	0200001f 	andeq	r0, r0, #31
    bb64:	2e810400 	cdpcs	4, 8, cr0, cr1, cr0, {0}
    bb68:	56010000 	strpl	r0, [r1], -r0
    bb6c:	00012e12 	andeq	r2, r1, r2, lsl lr
    bb70:	011d0c00 	tsteq	sp, r0, lsl #24
    bb74:	04060000 	streq	r0, [r6], #-0
    bb78:	00000134 	andeq	r0, r0, r4, lsr r1
    bb7c:	970e010d 	strls	r0, [lr, -sp, lsl #2]
    bb80:	0100002c 	tsteq	r0, ip, lsr #32
    bb84:	a62a0200 	strtge	r0, [sl], -r0, lsl #4
    bb88:	05000000 	streq	r0, [r0, #-0]
    bb8c:	00000803 	andeq	r0, r0, r3, lsl #16
    bb90:	2ea90e38 	mcrcs	14, 5, r0, cr9, cr8, {1}
    bb94:	1d010000 	stcne	0, cr0, [r1, #-0]
    bb98:	009a2502 	addseq	r2, sl, r2, lsl #10
    bb9c:	03050000 	movweq	r0, #20480	; 0x5000
    bba0:	38008d04 	stmdacc	r0, {r2, r8, sl, fp, pc}
    bba4:	002deb0e 	eoreq	lr, sp, lr, lsl #22
    bba8:	02230100 	eoreq	r0, r3, #0, 2
    bbac:	00009a25 	andeq	r9, r0, r5, lsr #20
    bbb0:	08030500 	stmdaeq	r3, {r8, sl}
    bbb4:	0e38008d 	cdpeq	0, 3, cr0, cr8, cr13, {4}
    bbb8:	00002d81 	andeq	r2, r0, r1, lsl #27
    bbbc:	25022901 	strcs	r2, [r2, #-2305]	; 0xfffff6ff
    bbc0:	0000009a 	muleq	r0, sl, r0
    bbc4:	8d000305 	stchi	3, cr0, [r0, #-20]	; 0xffffffec
    bbc8:	010f3800 	tsteq	pc, r0, lsl #16
    bbcc:	00002e3c 	andeq	r2, r0, ip, lsr lr
    bbd0:	0c07af01 	stceq	15, cr10, [r7], {1}
    bbd4:	0000d701 	andeq	sp, r0, r1, lsl #14
	...
    bbe0:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    bbe4:	0001c501 	andeq	ip, r1, r1, lsl #10
    bbe8:	2e531000 	cdpcs	0, 5, cr1, cr3, cr0, {0}
    bbec:	b1010000 	mrslt	r0, (UNDEF: 1)
    bbf0:	009a0e07 	addseq	r0, sl, r7, lsl #28
    bbf4:	ae380000 	cdpge	0, 3, cr0, cr8, cr0, {0}
    bbf8:	ae360000 	cdpge	0, 3, cr0, cr6, cr0, {0}
    bbfc:	21110000 	tstcs	r1, r0
    bc00:	0100001a 	tsteq	r0, sl, lsl r0
    bc04:	d71007b2 			; <UNDEFINED> instruction: 0xd71007b2
    bc08:	01000000 	mrseq	r0, (UNDEF: 0)
    bc0c:	23011200 	movwcs	r1, #4608	; 0x1200
    bc10:	0100001f 	tsteq	r0, pc, lsl r0
    bc14:	010606ee 	smlatteq	r6, lr, r6, r0
	...
    bc20:	01007d02 	tsteq	r0, r2, lsl #26
    bc24:	14660113 	strbtne	r0, [r6], #-275	; 0xfffffeed
    bc28:	55010000 	strpl	r0, [r1, #-0]
    bc2c:	d7010c06 	strle	r0, [r1, -r6, lsl #24]
    bc30:	30000000 	andcc	r0, r0, r0
    bc34:	70100037 	andsvc	r0, r0, r7, lsr r0
    bc38:	4b100037 	blmi	40bd1c <__RAM_SIZE+0x30bd1c>
    bc3c:	010000ae 	smlatbeq	r0, lr, r0, r0
    bc40:	00000234 	andeq	r0, r0, r4, lsr r2
    bc44:	00020f14 	andeq	r0, r2, r4, lsl pc
    bc48:	2cd21500 	cfldr64cs	mvdx1, [r2], {0}
    bc4c:	65010000 	strvs	r0, [r1, #-0]
    bc50:	023a2106 	eorseq	r2, sl, #-2147483647	; 0x80000001
    bc54:	16000000 	strne	r0, [r0], -r0
    bc58:	10003758 	andne	r3, r0, r8, asr r7
    bc5c:	0000040b 	andeq	r0, r0, fp, lsl #8
    bc60:	00376016 	eorseq	r6, r7, r6, lsl r0
    bc64:	0004f210 	andeq	pc, r4, r0, lsl r2	; <UNPREDICTABLE>
    bc68:	37641600 	strbcc	r1, [r4, -r0, lsl #12]!
    bc6c:	05001000 	streq	r1, [r0, #-0]
    bc70:	68160000 	ldmdavs	r6, {}	; <UNPREDICTABLE>
    bc74:	d6100037 			; <UNDEFINED> instruction: 0xd6100037
    bc78:	00000003 	andeq	r0, r0, r3
    bc7c:	01290406 			; <UNDEFINED> instruction: 0x01290406
    bc80:	340c0000 	strcc	r0, [ip], #-0
    bc84:	13000002 	movwne	r0, #2
    bc88:	001b9801 	andseq	r9, fp, r1, lsl #16
    bc8c:	06020100 	streq	r0, [r2], -r0, lsl #2
    bc90:	00f60113 	rscseq	r0, r6, r3, lsl r1
    bc94:	36a00000 	strtcc	r0, [r0], r0
    bc98:	37301000 	ldrcc	r1, [r0, -r0]!
    bc9c:	ae6b1000 	cdpge	0, 6, cr1, cr11, cr0, {0}
    bca0:	ae010000 	cdpge	0, 0, cr0, cr1, cr0, {0}
    bca4:	17000002 	strne	r0, [r0, -r2]
    bca8:	0000231e 	andeq	r2, r0, lr, lsl r3
    bcac:	38060201 	stmdacc	r6, {r0, r9}
    bcb0:	000000f6 	strdeq	r0, [r0], -r6
    bcb4:	0000aebf 			; <UNDEFINED> instruction: 0x0000aebf
    bcb8:	0000ae97 	muleq	r0, r7, lr
    bcbc:	002dde18 	eoreq	sp, sp, r8, lsl lr
    bcc0:	06030100 	streq	r0, [r3], -r0, lsl #2
    bcc4:	0000f638 	andeq	pc, r0, r8, lsr r6	; <UNPREDICTABLE>
    bcc8:	17510100 	ldrbne	r0, [r1, -r0, lsl #2]
    bccc:	00002e35 	andeq	r2, r0, r5, lsr lr
    bcd0:	39060401 	stmdbcc	r6, {r0, sl}
    bcd4:	000000ab 	andeq	r0, r0, fp, lsr #1
    bcd8:	0000afcf 	andeq	sl, r0, pc, asr #31
    bcdc:	0000afc9 	andeq	sl, r0, r9, asr #31
    bce0:	001e8c17 	andseq	r8, lr, r7, lsl ip
    bce4:	06050100 	streq	r0, [r5], -r0, lsl #2
    bce8:	0000c931 	andeq	ip, r0, r1, lsr r9
    bcec:	00b00100 	adcseq	r0, r0, r0, lsl #2
    bcf0:	00affb00 	adceq	pc, pc, r0, lsl #22
    bcf4:	01190000 	tsteq	r9, r0
    bcf8:	00002ce0 	andeq	r2, r0, r0, ror #25
    bcfc:	06040901 	streq	r0, [r4], -r1, lsl #18
    bd00:	00368a01 	eorseq	r8, r6, r1, lsl #20
    bd04:	00369e10 	eorseq	r9, r6, r0, lsl lr
    bd08:	00b02c10 	adcseq	r2, r0, r0, lsl ip
    bd0c:	03130100 	tsteq	r3, #0, 2
    bd10:	6b170000 	blvs	5cbd18 <__RAM_SIZE+0x4cbd18>
    bd14:	0100002d 	tsteq	r0, sp, lsr #32
    bd18:	13240409 			; <UNDEFINED> instruction: 0x13240409
    bd1c:	54000003 	strpl	r0, [r0], #-3
    bd20:	4c0000b0 	stcmi	0, cr0, [r0], {176}	; 0xb0
    bd24:	100000b0 	strhne	r0, [r0], -r0	; <UNPREDICTABLE>
    bd28:	00002cb1 			; <UNDEFINED> instruction: 0x00002cb1
    bd2c:	0e041901 	vmlaeq.f16	s2, s8, s2	; <UNPREDICTABLE>
    bd30:	0000009a 	muleq	r0, sl, r0
    bd34:	0000b094 	muleq	r0, r4, r0
    bd38:	0000b08e 	andeq	fp, r0, lr, lsl #1
    bd3c:	002cb610 	eoreq	fp, ip, r0, lsl r6
    bd40:	04220100 	strteq	r0, [r2], #-256	; 0xffffff00
    bd44:	00008e0d 	andeq	r8, r0, sp, lsl #28
    bd48:	00b0c300 	adcseq	ip, r0, r0, lsl #6
    bd4c:	00b0bf00 	adcseq	fp, r0, r0, lsl #30
    bd50:	369c1600 	ldrcc	r1, [ip], r0, lsl #12
    bd54:	050f1000 	streq	r1, [pc, #-0]	; bd5c <__HEAP_SIZE+0xad5c>
    bd58:	06000000 	streq	r0, [r0], -r0
    bd5c:	00009a04 	andeq	r9, r0, r4, lsl #20
    bd60:	8b011900 	blhi	52168 <__HEAP_SIZE+0x51168>
    bd64:	0100002e 	tsteq	r0, lr, lsr #32
    bd68:	010603f2 	strdeq	r0, [r6, -r2]
    bd6c:	10003668 	andne	r3, r0, r8, ror #12
    bd70:	1000368a 	andne	r3, r0, sl, lsl #13
    bd74:	0000b0e1 	andeq	fp, r0, r1, ror #1
    bd78:	00036d01 	andeq	r6, r3, r1, lsl #26
    bd7c:	2ec11000 	cdpcs	0, 12, cr1, cr1, cr0, {0}
    bd80:	f4010000 	vst4.8	{d0-d3}, [r1], r0
    bd84:	009a0e03 	addseq	r0, sl, r3, lsl #28
    bd88:	b1050000 	mrslt	r0, (UNDEF: 5)
    bd8c:	b1010000 	mrslt	r0, (UNDEF: 1)
    bd90:	6e160000 	cdpvs	0, 1, cr0, cr6, cr0, {0}
    bd94:	1d100036 	ldcne	0, cr0, [r0, #-216]	; 0xffffff28
    bd98:	16000005 	strne	r0, [r0], -r5
    bd9c:	10003674 	andne	r3, r0, r4, ror r6
    bda0:	0000052b 	andeq	r0, r0, fp, lsr #10
    bda4:	0036881a 	eorseq	r8, r6, sl, lsl r8
    bda8:	00053a10 	andeq	r3, r5, r0, lsl sl
    bdac:	50011b00 	andpl	r1, r1, r0, lsl #22
    bdb0:	00007402 	andeq	r7, r0, r2, lsl #8
    bdb4:	4b011900 	blmi	521bc <__HEAP_SIZE+0x511bc>
    bdb8:	0100000a 	tsteq	r0, sl
    bdbc:	010603e6 	smlatteq	r6, r6, r3, r0
    bdc0:	1000364c 	andne	r3, r0, ip, asr #12
    bdc4:	10003668 	andne	r3, r0, r8, ror #12
    bdc8:	0000b123 	andeq	fp, r0, r3, lsr #2
    bdcc:	00039901 	andeq	r9, r3, r1, lsl #18
    bdd0:	36621a00 	strbtcc	r1, [r2], -r0, lsl #20
    bdd4:	053a1000 	ldreq	r1, [sl, #-0]!
    bdd8:	011b0000 	tsteq	fp, r0
    bddc:	00300150 	eorseq	r0, r0, r0, asr r1
    bde0:	db011900 	blle	521e8 <__HEAP_SIZE+0x511e8>
    bde4:	0100000b 	tsteq	r0, fp
    bde8:	010603da 	ldrdeq	r0, [r6, -sl]
    bdec:	10003630 	andne	r3, r0, r0, lsr r6
    bdf0:	1000364c 	andne	r3, r0, ip, asr #12
    bdf4:	0000b143 	andeq	fp, r0, r3, asr #2
    bdf8:	0003bf01 	andeq	fp, r3, r1, lsl #30
    bdfc:	36361600 	ldrtcc	r1, [r6], -r0, lsl #12
    be00:	051d1000 	ldreq	r1, [sp, #-0]
    be04:	12000000 	andne	r0, r0, #0
    be08:	000a8601 	andeq	r8, sl, r1, lsl #12
    be0c:	03ce0100 	biceq	r0, lr, #0, 2
    be10:	36180106 	ldrcc	r0, [r8], -r6, lsl #2
    be14:	362e1000 	strtcc	r1, [lr], -r0
    be18:	7d021000 	stcvc	0, cr1, [r2, #-0]
    be1c:	0b1c0100 	bleq	70c224 <__RAM_SIZE+0x60c224>
    be20:	0100002e 	tsteq	r0, lr, lsr #32
    be24:	010d0326 	tsteq	sp, r6, lsr #6
    be28:	100034b0 			; <UNDEFINED> instruction: 0x100034b0
    be2c:	100034c8 	andne	r3, r0, r8, asr #9
    be30:	0000b163 	andeq	fp, r0, r3, ror #2
    be34:	00040b01 	andeq	r0, r4, r1, lsl #22
    be38:	2ca90e00 	stccs	14, cr0, [r9]
    be3c:	28010000 	stmdacs	r1, {}	; <UNPREDICTABLE>
    be40:	00a61703 	adceq	r1, r6, r3, lsl #14
    be44:	91020000 	mrsls	r0, (UNDEF: 2)
    be48:	34bc1674 	ldrtcc	r1, [ip], #1652	; 0x674
    be4c:	051d1000 	ldreq	r1, [sp, #-0]
    be50:	12000000 	andne	r0, r0, #0
    be54:	002e1c01 	eoreq	r1, lr, r1, lsl #24
    be58:	030a0100 	movweq	r0, #41216	; 0xa100
    be5c:	35dc0120 	ldrbcc	r0, [ip, #288]	; 0x120
    be60:	36181000 	ldrcc	r1, [r8], -r0
    be64:	7d021000 	stcvc	0, cr1, [r2, #-0]
    be68:	01190100 	tsteq	r9, r0, lsl #2
    be6c:	00002095 	muleq	r0, r5, r0
    be70:	24022f01 	strcs	r2, [r2], #-3841	; 0xfffff0ff
    be74:	0034c801 	eorseq	ip, r4, r1, lsl #16
    be78:	0035dc10 	eorseq	sp, r5, r0, lsl ip
    be7c:	00b19b10 	adcseq	r9, r1, r0, lsl fp
    be80:	04f20100 	ldrbteq	r0, [r2], #256	; 0x100
    be84:	d3170000 	tstle	r7, #0
    be88:	01000015 	tsteq	r0, r5, lsl r0
    be8c:	e34b022f 	movt	r0, #45615	; 0xb22f
    be90:	c5000000 	strgt	r0, [r0, #-0]
    be94:	bb0000b1 	bllt	c160 <__HEAP_SIZE+0xb160>
    be98:	100000b1 	strhne	r0, [r0], -r1
    be9c:	00002e9b 	muleq	r0, fp, lr
    bea0:	12023101 	andne	r3, r2, #1073741824	; 0x40000000
    bea4:	0000009a 	muleq	r0, sl, r0
    bea8:	0000b20a 	andeq	fp, r0, sl, lsl #4
    beac:	0000b206 	andeq	fp, r0, r6, lsl #4
    beb0:	002cf210 	eoreq	pc, ip, r0, lsl r2	; <UNPREDICTABLE>
    beb4:	02310100 	eorseq	r0, r1, #0, 2
    beb8:	00009a21 	andeq	r9, r0, r1, lsr #20
    bebc:	00b22c00 	adcseq	r2, r2, r0, lsl #24
    bec0:	00b22800 	adcseq	r2, r2, r0, lsl #16
    bec4:	2d4e1000 	stclcs	0, cr1, [lr, #-0]
    bec8:	31010000 	mrscc	r0, (UNDEF: 1)
    becc:	009a3802 	addseq	r3, sl, r2, lsl #16
    bed0:	b24e0000 	sublt	r0, lr, #0
    bed4:	b24a0000 	sublt	r0, sl, #0
    bed8:	9c100000 	ldcls	0, cr0, [r0], {-0}
    bedc:	0100002d 	tsteq	r0, sp, lsr #32
    bee0:	9a560231 	bls	158c7ac <__RAM_SIZE+0x148c7ac>
    bee4:	77000000 	strvc	r0, [r0, -r0]
    bee8:	710000b2 	strhvc	r0, [r0, -r2]
    beec:	100000b2 	strhne	r0, [r0], -r2
    bef0:	00002dca 	andeq	r2, r0, sl, asr #27
    bef4:	14023201 	strne	r3, [r2], #-513	; 0xfffffdff
    bef8:	000000e3 	andeq	r0, r0, r3, ror #1
    befc:	0000b2a6 	andeq	fp, r0, r6, lsr #5
    bf00:	0000b2a0 	andeq	fp, r0, r0, lsr #5
    bf04:	00356e1d 	eorseq	r6, r5, sp, lsl lr
    bf08:	00359210 	eorseq	r9, r5, r0, lsl r2
    bf0c:	0004df10 	andeq	sp, r4, r0, lsl pc
    bf10:	2db41000 	ldccs	0, cr1, [r4]
    bf14:	a5010000 	strge	r0, [r1, #-0]
    bf18:	009a1a02 	addseq	r1, sl, r2, lsl #20
    bf1c:	b2d30000 	sbcslt	r0, r3, #0
    bf20:	b2d10000 	sbcslt	r0, r1, #0
    bf24:	16000000 	strne	r0, [r0], -r0
    bf28:	100034e2 	andne	r3, r0, r2, ror #9
    bf2c:	00000548 	andeq	r0, r0, r8, asr #10
    bf30:	0035aa16 	eorseq	sl, r5, r6, lsl sl
    bf34:	00055710 	andeq	r5, r5, r0, lsl r7
    bf38:	011e0000 	tsteq	lr, r0
    bf3c:	002cc201 	eoreq	ip, ip, r1, lsl #4
    bf40:	002cc200 	eoreq	ip, ip, r0, lsl #4
    bf44:	064d0600 	strbeq	r0, [sp], -r0, lsl #12
    bf48:	e801011f 	stmda	r1, {r0, r1, r2, r3, r4, r8}
    bf4c:	e800001d 	stmda	r0, {r0, r2, r3, r4}
    bf50:	0700001d 	smladeq	r0, sp, r0, r0
    bf54:	1e1b0df5 	mrcne	13, 0, r0, cr11, cr5, {7}
    bf58:	2e660101 	powcss	f0, f6, f1
    bf5c:	2e660000 	cdpcs	0, 6, cr0, cr6, cr0, {0}
    bf60:	2a060000 	bcs	18bf68 <__RAM_SIZE+0x8bf68>
    bf64:	01011e06 	tsteq	r1, r6, lsl #28
    bf68:	00000f85 	andeq	r0, r0, r5, lsl #31
    bf6c:	00000f85 	andeq	r0, r0, r5, lsl #31
    bf70:	1f0a5206 	svcne	0x000a5206
    bf74:	18e50101 	stmiane	r5!, {r0, r8}^
    bf78:	18e50000 	stmiane	r5!, {}^	; <UNPREDICTABLE>
    bf7c:	9a070000 	bls	1cbf84 <__RAM_SIZE+0xcbf84>
    bf80:	011e0c0d 	tsteq	lr, sp, lsl #24
    bf84:	000c9101 	andeq	r9, ip, r1, lsl #2
    bf88:	000c9100 	andeq	r9, ip, r0, lsl #2
    bf8c:	06570600 	ldrbeq	r0, [r7], -r0, lsl #12
    bf90:	f401011f 	vst4.8	{d0,d2,d4,d6}, [r1 :64]
    bf94:	f4000019 	vst4.8	{d0-d3}, [r0 :64], r9
    bf98:	07000019 	smladeq	r0, r9, r0, r0
    bf9c:	1f160e58 	svcne	0x00160e58
    bfa0:	18f80101 	ldmne	r8!, {r0, r8}^
    bfa4:	18f80000 	ldmne	r8!, {}^	; <UNPREDICTABLE>
    bfa8:	46070000 	strmi	r0, [r7], -r0
    bfac:	7a000a0e 	bvc	e7ec <__HEAP_SIZE+0xd7ec>
    bfb0:	02000001 	andeq	r0, r0, #1
    bfb4:	0019bc00 	andseq	fp, r9, r0, lsl #24
    bfb8:	89010400 	stmdbhi	r1, {sl}
    bfbc:	0c000001 	stceq	0, cr0, [r0], {1}
    bfc0:	00002edf 	ldrdeq	r2, [r0], -pc	; <UNPREDICTABLE>
    bfc4:	0000038d 	andeq	r0, r0, sp, lsl #7
    bfc8:	00000bc8 	andeq	r0, r0, r8, asr #23
	...
    bfd4:	000088e9 	andeq	r8, r0, r9, ror #17
    bfd8:	73060102 	movwvc	r0, #24834	; 0x6102
    bfdc:	02000002 	andeq	r0, r0, #2
    bfe0:	02710801 	rsbseq	r0, r1, #65536	; 0x10000
    bfe4:	02020000 	andeq	r0, r2, #0
    bfe8:	00003205 	andeq	r3, r0, r5, lsl #4
    bfec:	07020200 	streq	r0, [r2, -r0, lsl #4]
    bff0:	00000322 	andeq	r0, r0, r2, lsr #6
    bff4:	2c050402 	cfstrscs	mvf0, [r5], {2}
    bff8:	03000001 	movweq	r0, #1
    bffc:	0000006f 	andeq	r0, r0, pc, rrx
    c000:	58194f02 	ldmdapl	r9, {r1, r8, r9, sl, fp, lr}
    c004:	02000000 	andeq	r0, r0, #0
    c008:	02ca0704 	sbceq	r0, sl, #4, 14	; 0x100000
    c00c:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    c010:	00012705 	andeq	r2, r1, r5, lsl #14
    c014:	07080200 	streq	r0, [r8, -r0, lsl #4]
    c018:	000002c5 	andeq	r0, r0, r5, asr #5
    c01c:	69050404 	stmdbvs	r5, {r2, sl}
    c020:	0200746e 	andeq	r7, r0, #1845493760	; 0x6e000000
    c024:	02cf0704 	sbceq	r0, pc, #4, 14	; 0x100000
    c028:	71030000 	mrsvc	r0, (UNDEF: 3)
    c02c:	03000000 	movweq	r0, #0
    c030:	004c1430 	subeq	r1, ip, r0, lsr r4
    c034:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    c038:	00006304 	andeq	r6, r0, r4, lsl #6
    c03c:	09cd0300 	stmibeq	sp, {r8, r9}^
    c040:	4a040000 	bmi	10c048 <__RAM_SIZE+0xc048>
    c044:	0000451a 	andeq	r4, r0, sl, lsl r5
    c048:	36010500 	strcc	r0, [r1], -r0, lsl #10
    c04c:	0100002f 	tsteq	r0, pc, lsr #32
    c050:	010a01c7 	smlabteq	sl, r7, r1, r0
    c054:	10003828 	andne	r3, r0, r8, lsr #16
    c058:	1000383a 	andne	r3, r0, sl, lsr r8
    c05c:	01007d02 	tsteq	r0, r2, lsl #26
    c060:	2ed00105 	cdpcs	1, 13, cr0, cr0, cr5, {0}
    c064:	6b010000 	blvs	4c06c <__HEAP_SIZE+0x4b06c>
    c068:	e0010a01 	and	r0, r1, r1, lsl #20
    c06c:	24100037 	ldrcs	r0, [r0], #-55	; 0xffffffc9
    c070:	02100038 	andseq	r0, r0, #56	; 0x38
    c074:	0601007d 			; <UNDEFINED> instruction: 0x0601007d
    c078:	000c9101 	andeq	r9, ip, r1, lsl #2
    c07c:	06e80100 	strbteq	r0, [r8], r0, lsl #2
    c080:	0037d201 	eorseq	sp, r7, r1, lsl #4
    c084:	0037e010 	eorseq	lr, r7, r0, lsl r0
    c088:	007d0210 	rsbseq	r0, sp, r0, lsl r2
    c08c:	0000f101 	andeq	pc, r0, r1, lsl #2
    c090:	2f520700 	svccs	0x00520700
    c094:	e8010000 	stmda	r1, {}	; <UNPREDICTABLE>
    c098:	00007b40 	andeq	r7, r0, r0, asr #22
    c09c:	00500100 	subseq	r0, r0, r0, lsl #2
    c0a0:	0f850108 	svceq	0x00850108
    c0a4:	d7010000 	strle	r0, [r1, -r0]
    c0a8:	007b010a 	rsbseq	r0, fp, sl, lsl #2
    c0ac:	37bc0000 	ldrcc	r0, [ip, r0]!
    c0b0:	37d21000 	ldrbcc	r1, [r2, r0]
    c0b4:	7d021000 	stcvc	0, cr1, [r2, #-0]
    c0b8:	01090100 	mrseq	r0, (UNDEF: 25)
    c0bc:	00002cc2 	andeq	r2, r0, r2, asr #25
    c0c0:	0106c201 	tsteq	r6, r1, lsl #4
    c0c4:	1000379c 	mulne	r0, ip, r7
    c0c8:	100037b6 			; <UNDEFINED> instruction: 0x100037b6
    c0cc:	01007d02 	tsteq	r0, r2, lsl #26
    c0d0:	2f420109 	svccs	0x00420109
    c0d4:	b3010000 	movwlt	r0, #4096	; 0x1000
    c0d8:	00000106 	andeq	r0, r0, r6, lsl #2
    c0dc:	00000000 	andeq	r0, r0, r0
    c0e0:	7d020000 	stcvc	0, cr0, [r2, #-0]
    c0e4:	01090100 	mrseq	r0, (UNDEF: 25)
    c0e8:	00002f59 	andeq	r2, r0, r9, asr pc
    c0ec:	0106a401 	tsteq	r6, r1, lsl #8
	...
    c0f8:	01007d02 	tsteq	r0, r2, lsl #26
    c0fc:	2f280108 	svccs	0x00280108
    c100:	93010000 	movwls	r0, #4096	; 0x1000
    c104:	008e010c 	addeq	r0, lr, ip, lsl #2
	...
    c110:	7d020000 	stcvc	0, cr0, [r2, #-0]
    c114:	01090100 	mrseq	r0, (UNDEF: 25)
    c118:	00002e66 	andeq	r2, r0, r6, ror #28
    c11c:	010a7901 	tsteq	sl, r1, lsl #18
    c120:	10003770 	andne	r3, r0, r0, ror r7
    c124:	10003796 	mulne	r0, r6, r7
    c128:	01007d02 	tsteq	r0, r2, lsl #26
    c12c:	00002200 	andeq	r2, r0, r0, lsl #4
    c130:	74000200 	strvc	r0, [r0], #-512	; 0xfffffe00
    c134:	0400001a 	streq	r0, [r0], #-26	; 0xffffffe6
    c138:	008b2801 	addeq	r2, fp, r1, lsl #16
    c13c:	00386000 	eorseq	r6, r8, r0
    c140:	0038d010 	eorseq	sp, r8, r0, lsl r0
    c144:	002f6910 	eoreq	r6, pc, r0, lsl r9	; <UNPREDICTABLE>
    c148:	00038d00 	andeq	r8, r3, r0, lsl #26
    c14c:	002f8900 	eoreq	r8, pc, r0, lsl #18
    c150:	22800100 	addcs	r0, r0, #0, 2
    c154:	02000000 	andeq	r0, r0, #0
    c158:	001a8800 	andseq	r8, sl, r0, lsl #16
    c15c:	ae010400 	cfcpysge	mvf0, mvf1
    c160:	d000008b 	andle	r0, r0, fp, lsl #1
    c164:	18100038 	ldmdane	r0, {r3, r4, r5}
    c168:	97100039 			; <UNDEFINED> instruction: 0x97100039
    c16c:	8d00002f 	stchi	0, cr0, [r0, #-188]	; 0xffffff44
    c170:	89000003 	stmdbhi	r0, {r0, r1}
    c174:	0100002f 	tsteq	r0, pc, lsr #32
    c178:	Address 0x0000c178 is out of bounds.


Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
    __asm volatile ( "mrs %0, ipsr" : "=r" ( ulCurrentInterrupt )::"memory" );
       0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
    if( ulCurrentInterrupt == 0 )
       4:	030b130e 	movweq	r1, #45838	; 0xb30e
        xReturn = pdFALSE;
       8:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
}
       c:	52011106 	andpl	r1, r1, #-2147483647	; 0x80000001
    ( pxList->uxNumberOfItems ) = ( UBaseType_t ) ( pxList->uxNumberOfItems + 1U );
      10:	00061001 	andeq	r1, r6, r1
}
      14:	00240200 	eoreq	r0, r4, r0, lsl #4
      18:	0b3e0b0b 	bleq	f82c4c <__RAM_SIZE+0xe82c4c>
      1c:	00000e03 	andeq	r0, r0, r3, lsl #28
      20:	03001603 	movweq	r1, #1539	; 0x603
      24:	3b0b3a0e 	blcc	2ce864 <__RAM_SIZE+0x1ce864>
      28:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
      2c:	04000013 	streq	r0, [r0], #-19	; 0xffffffed
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
      30:	0b0b0024 	bleq	2c00c8 <__RAM_SIZE+0x1c00c8>
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
      34:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
      38:	35050000 	strcc	r0, [r5, #-0]
      3c:	00134900 	andseq	r4, r3, r0, lsl #18
      40:	00260600 	eoreq	r0, r6, r0, lsl #12
        BaseType_t xReturn = pdFAIL;
      44:	00001349 	andeq	r1, r0, r9, asr #6
    }
      48:	0b000f07 	bleq	3c6c <__HEAP_SIZE+0x2c6c>
                pxBlock = heapPROTECT_BLOCK_POINTER( pxBlock->pxNextFreeBlock );
      4c:	0800000b 	stmdaeq	r0, {r0, r1, r3}
            while( pxBlock != pxEnd )
      50:	050b0113 	streq	r0, [fp, #-275]	; 0xfffffeed
      54:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
                if( pxBlock->xBlockSize > xMaxSize )
      58:	13010b39 	movwne	r0, #6969	; 0x1b39
      5c:	0d090000 	stceq	0, cr0, [r9, #-0]
                if( pxBlock->xBlockSize < xMinSize )
      60:	3a0e0300 	bcc	380c68 <__RAM_SIZE+0x280c68>
                    xMinSize = pxBlock->xBlockSize;
      64:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
      68:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
      6c:	0a00000a 	beq	9c <__STACKSEAL_SIZE+0x9c>
      70:	0803000d 	stmdaeq	r3, {r0, r2, r3}
      74:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
      78:	13490b39 	movtne	r0, #39737	; 0x9b39
      7c:	00000a38 	andeq	r0, r0, r8, lsr sl
            prvUnlockQueue( pxQueue );
      80:	4901010b 	stmdbmi	r1, {r0, r1, r3, r8}
            ( void ) xTaskResumeAll();
      84:	00130113 	andseq	r0, r3, r3, lsl r1
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
      88:	00210c00 	eoreq	r0, r1, r0, lsl #24
      8c:	0b2f1349 	bleq	bc4db8 <__RAM_SIZE+0xac4db8>
      90:	160d0000 	strne	r0, [sp], -r0
        taskENTER_CRITICAL();
      94:	3a0e0300 	bcc	380c9c <__RAM_SIZE+0x280c9c>
            if( uxSemaphoreCount > ( UBaseType_t ) 0 )
      98:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
                if( xTicksToWait == ( TickType_t ) 0 )
      9c:	0013490b 	andseq	r4, r3, fp, lsl #18
      a0:	000f0e00 	andeq	r0, pc, r0, lsl #28
                else if( xEntryTimeSet == pdFALSE )
      a4:	13490b0b 	movtne	r0, #39691	; 0x9b0b
        taskEXIT_CRITICAL();
      a8:	130f0000 	movwne	r0, #61440	; 0xf000
        vTaskSuspendAll();
      ac:	3c0e0300 	stccc	3, cr0, [lr], {-0}
        prvLockQueue( pxQueue );
      b0:	1000000c 	andne	r0, r0, ip
      b4:	13490021 	movtne	r0, #36897	; 0x9021
      b8:	0000052f 	andeq	r0, r0, pc, lsr #10
      bc:	03003411 	movweq	r3, #1041	; 0x411
      c0:	3b0b3a0e 	blcc	2ce900 <__RAM_SIZE+0x1ce900>
      c4:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
      c8:	020c3f13 	andeq	r3, ip, #19, 30	; 0x4c
      cc:	1200000a 	andne	r0, r0, #10
        if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
      d0:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 20 <__STACKSEAL_SIZE+0x20>
      d4:	0b3a0e03 	bleq	e838e8 <__RAM_SIZE+0xd838e8>
      d8:	0b390b3b 	bleq	e42dcc <__RAM_SIZE+0xd42dcc>
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
      dc:	13490c27 	movtne	r0, #39975	; 0x9c27
      e0:	01120111 	tsteq	r2, r1, lsl r1
                    if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
      e4:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
      e8:	0013010c 	andseq	r0, r3, ip, lsl #2
                vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
      ec:	00341300 	eorseq	r1, r4, r0, lsl #6
      f0:	0b3a0e03 	bleq	e83904 <__RAM_SIZE+0xd83904>
                prvUnlockQueue( pxQueue );
      f4:	0b390b3b 	bleq	e42de8 <__RAM_SIZE+0xd42de8>
      f8:	06021349 	streq	r1, [r2], -r9, asr #6
                if( xTaskResumeAll() == pdFALSE )
      fc:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
     100:	82891400 	addhi	r1, r9, #0, 8
                    taskYIELD_WITHIN_API();
     104:	01110001 	tsteq	r1, r1
                    if( xInheritanceOccurred != pdFALSE )
     108:	00001331 	andeq	r1, r0, r1, lsr r3
                return errQUEUE_EMPTY;
     10c:	01828915 	orreq	r8, r2, r5, lsl r9
                        taskENTER_CRITICAL();
     110:	31011101 	tstcc	r1, r1, lsl #2
                            uxHighestWaitingPriority = prvGetDisinheritPriorityAfterTimeout( pxQueue );
     114:	00130113 	andseq	r0, r3, r3, lsl r1
     118:	828a1600 	addhi	r1, sl, #0, 12
                            vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
     11c:	0a020001 	beq	80128 <__HEAP_SIZE+0x7f128>
                        taskEXIT_CRITICAL();
     120:	000a4291 	muleq	sl, r1, r2
     124:	82891700 	addhi	r1, r9, #0, 14
     128:	01110101 	tsteq	r1, r1, lsl #2
     12c:	00001331 	andeq	r1, r0, r1, lsr r3
     130:	03012e18 	movweq	r2, #7704	; 0x1e18
     134:	3b0b3a0e 	blcc	2ce974 <__RAM_SIZE+0x1ce974>
     138:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
     13c:	1201110c 	andne	r1, r1, #12, 2
     140:	97064001 	strls	r4, [r6, -r1]
     144:	13010c42 	movwne	r0, #7234	; 0x1c42
     148:	34190000 	ldrcc	r0, [r9], #-0
     14c:	3a0e0300 	bcc	380d54 <__RAM_SIZE+0x280d54>
     150:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     154:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     158:	1a00000a 	bne	188 <__STACKSEAL_SIZE+0x188>
     15c:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
     160:	0b3b0b3a 	bleq	ec2e50 <__RAM_SIZE+0xdc2e50>
     164:	13490b39 	movtne	r0, #39737	; 0x9b39
     168:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
     16c:	1b000006 	blne	18c <__STACKSEAL_SIZE+0x18c>
     170:	0c3f012e 	ldfeqs	f0, [pc], #-184	; c0 <__STACKSEAL_SIZE+0xc0>
     174:	0b3a0e03 	bleq	e83988 <__RAM_SIZE+0xd83988>
     178:	0b390b3b 	bleq	e42e6c <__RAM_SIZE+0xd42e6c>
     17c:	01110c27 	tsteq	r1, r7, lsr #24
     180:	06400112 			; <UNDEFINED> instruction: 0x06400112
     184:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
     188:	1c000013 	stcne	0, cr0, [r0], {19}
     18c:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     190:	0c341349 	ldceq	3, cr1, [r4], #-292	; 0xfffffedc
     194:	00000a02 	andeq	r0, r0, r2, lsl #20
     198:	55010b1d 	strpl	r0, [r1, #-2845]	; 0xfffff4e3
     19c:	00130106 	andseq	r0, r3, r6, lsl #2
     1a0:	00341e00 	eorseq	r1, r4, r0, lsl #28
     1a4:	0b3a0803 	bleq	e821b8 <__RAM_SIZE+0xd821b8>
     1a8:	0b390b3b 	bleq	e42e9c <__RAM_SIZE+0xd42e9c>
     1ac:	06021349 	streq	r1, [r2], -r9, asr #6
     1b0:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
     1b4:	00341f00 	eorseq	r1, r4, r0, lsl #30
     1b8:	0b3a0803 	bleq	e821cc <__RAM_SIZE+0xd821cc>
     1bc:	0b390b3b 	bleq	e42eb0 <__RAM_SIZE+0xd42eb0>
     1c0:	0b1c1349 	bleq	704eec <__RAM_SIZE+0x604eec>
     1c4:	2e200000 	cdpcs	0, 2, cr0, cr0, cr0, {0}
     1c8:	3c0c3f00 	stccc	15, cr3, [ip], {-0}
     1cc:	0e40870c 	cdpeq	7, 4, cr8, cr0, cr12, {0}
     1d0:	0b3a0e03 	bleq	e839e4 <__RAM_SIZE+0xd839e4>
     1d4:	0b390b3b 	bleq	e42ec8 <__RAM_SIZE+0xd42ec8>
     1d8:	2e210000 	cdpcs	0, 2, cr0, cr1, cr0, {0}
     1dc:	3c0c3f00 	stccc	15, cr3, [ip], {-0}
     1e0:	0e40870c 	cdpeq	7, 4, cr8, cr0, cr12, {0}
     1e4:	0b3a0e03 	bleq	e839f8 <__RAM_SIZE+0xd839f8>
     1e8:	00000b3b 	andeq	r0, r0, fp, lsr fp
     1ec:	3f002e22 	svccc	0x00002e22
     1f0:	870c3c0c 	strhi	r3, [ip, -ip, lsl #24]
     1f4:	0e030e40 	cdpeq	14, 0, cr0, cr3, cr0, {2}
     1f8:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     1fc:	00000b39 	andeq	r0, r0, r9, lsr fp
     200:	01110100 	tsteq	r1, r0, lsl #2
     204:	0b130e25 	bleq	4c3aa0 <__RAM_SIZE+0x3c3aa0>
     208:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
     20c:	01110655 	tsteq	r1, r5, asr r6
     210:	06100152 			; <UNDEFINED> instruction: 0x06100152
     214:	24020000 	strcs	r0, [r2], #-0
     218:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     21c:	000e030b 	andeq	r0, lr, fp, lsl #6
     220:	00160300 	andseq	r0, r6, r0, lsl #6
     224:	0b3a0e03 	bleq	e83a38 <__RAM_SIZE+0xd83a38>
     228:	0b390b3b 	bleq	e42f1c <__RAM_SIZE+0xd42f1c>
     22c:	00001349 	andeq	r1, r0, r9, asr #6
     230:	0b002404 	bleq	9248 <__HEAP_SIZE+0x8248>
     234:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
     238:	05000008 	streq	r0, [r0, #-8]
     23c:	13490035 	movtne	r0, #36917	; 0x9035
     240:	26060000 	strcs	r0, [r6], -r0
     244:	00134900 	andseq	r4, r3, r0, lsl #18
     248:	01130700 	tsteq	r3, r0, lsl #14
     24c:	0b3a050b 	bleq	e81680 <__RAM_SIZE+0xd81680>
     250:	0b39053b 	bleq	e41744 <__RAM_SIZE+0xd41744>
     254:	00001301 	andeq	r1, r0, r1, lsl #6
     258:	03000d08 	movweq	r0, #3336	; 0xd08
     25c:	3b0b3a0e 	blcc	2cea9c <__RAM_SIZE+0x1cea9c>
     260:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     264:	000a3813 	andeq	r3, sl, r3, lsl r8
     268:	000d0900 	andeq	r0, sp, r0, lsl #18
     26c:	0b3a0803 	bleq	e82280 <__RAM_SIZE+0xd82280>
     270:	0b39053b 	bleq	e41764 <__RAM_SIZE+0xd41764>
     274:	0a381349 	beq	e04fa0 <__RAM_SIZE+0xd04fa0>
     278:	010a0000 	mrseq	r0, (UNDEF: 10)
     27c:	01134901 	tsteq	r3, r1, lsl #18
     280:	0b000013 	bleq	2d4 <__STACKSEAL_SIZE+0x2d4>
     284:	13490021 	movtne	r0, #36897	; 0x9021
     288:	00000b2f 	andeq	r0, r0, pc, lsr #22
     28c:	0300160c 	movweq	r1, #1548	; 0x60c
     290:	3b0b3a0e 	blcc	2cead0 <__RAM_SIZE+0x1cead0>
     294:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     298:	0d000013 	stceq	0, cr0, [r0, #-76]	; 0xffffffb4
     29c:	0b0b000f 	bleq	2c02e0 <__RAM_SIZE+0x1c02e0>
     2a0:	00001349 	andeq	r1, r0, r9, asr #6
     2a4:	2700150e 	strcs	r1, [r0, -lr, lsl #10]
     2a8:	0f00000c 	svceq	0x0000000c
     2ac:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     2b0:	0b3b0b3a 	bleq	ec2fa0 <__RAM_SIZE+0xdc2fa0>
     2b4:	13490b39 	movtne	r0, #39737	; 0x9b39
     2b8:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
     2bc:	21100000 	tstcs	r0, r0
     2c0:	2f134900 	svccs	0x00134900
     2c4:	11000005 	tstne	r0, r5
     2c8:	13470034 	movtne	r0, #28724	; 0x7034
     2cc:	0b3b0b3a 	bleq	ec2fbc <__RAM_SIZE+0xdc2fbc>
     2d0:	0a020b39 	beq	82fbc <__HEAP_SIZE+0x81fbc>
     2d4:	2e120000 	cdpcs	0, 1, cr0, cr2, cr0, {0}
     2d8:	030c3f00 	movweq	r3, #52992	; 0xcf00
     2dc:	3b0b3a0e 	blcc	2ceb1c <__RAM_SIZE+0x1ceb1c>
     2e0:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
     2e4:	1201110c 	andne	r1, r1, #12, 2
     2e8:	970a4001 	strls	r4, [sl, -r1]
     2ec:	00000c42 	andeq	r0, r0, r2, asr #24
     2f0:	01110100 	tsteq	r1, r0, lsl #2
     2f4:	0b130e25 	bleq	4c3b90 <__RAM_SIZE+0x3c3b90>
     2f8:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
     2fc:	01110655 	tsteq	r1, r5, asr r6
     300:	06100152 			; <UNDEFINED> instruction: 0x06100152
     304:	24020000 	strcs	r0, [r2], #-0
     308:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     30c:	000e030b 	andeq	r0, lr, fp, lsl #6
     310:	00260300 	eoreq	r0, r6, r0, lsl #6
     314:	00001349 	andeq	r1, r0, r9, asr #6
     318:	03001604 	movweq	r1, #1540	; 0x604
     31c:	3b0b3a0e 	blcc	2ceb5c <__RAM_SIZE+0x1ceb5c>
     320:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     324:	05000013 	streq	r0, [r0, #-19]	; 0xffffffed
     328:	0b0b0024 	bleq	2c03c0 <__RAM_SIZE+0x1c03c0>
     32c:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
     330:	13060000 	movwne	r0, #24576	; 0x6000
     334:	0b0e0301 	bleq	380f40 <__RAM_SIZE+0x280f40>
     338:	3b0b3a0b 	blcc	2ceb6c <__RAM_SIZE+0x1ceb6c>
     33c:	0013010b 	andseq	r0, r3, fp, lsl #2
     340:	000d0700 	andeq	r0, sp, r0, lsl #14
     344:	13490e03 	movtne	r0, #40451	; 0x9e03
     348:	0c340a38 			; <UNDEFINED> instruction: 0x0c340a38
     34c:	0f080000 	svceq	0x00080000
     350:	000b0b00 	andeq	r0, fp, r0, lsl #22
     354:	000f0900 	andeq	r0, pc, r0, lsl #18
     358:	13490b0b 	movtne	r0, #39691	; 0x9b0b
     35c:	150a0000 	strne	r0, [sl, #-0]
     360:	010c2701 	tsteq	ip, r1, lsl #14
     364:	0b000013 	bleq	3b8 <__STACKSEAL_SIZE+0x3b8>
     368:	13490005 	movtne	r0, #36869	; 0x9005
     36c:	130c0000 	movwne	r0, #49152	; 0xc000
     370:	3a0b0b01 	bcc	2c2f7c <__RAM_SIZE+0x1c2f7c>
     374:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     378:	0013010b 	andseq	r0, r3, fp, lsl #2
     37c:	000d0d00 	andeq	r0, sp, r0, lsl #26
     380:	0b3a0803 	bleq	e82394 <__RAM_SIZE+0xd82394>
     384:	0b390b3b 	bleq	e43078 <__RAM_SIZE+0xd43078>
     388:	0a381349 	beq	e050b4 <__RAM_SIZE+0xd050b4>
     38c:	2e0e0000 	cdpcs	0, 0, cr0, cr14, cr0, {0}
     390:	030c3f01 	movweq	r3, #52993	; 0xcf01
     394:	3b0b3a0e 	blcc	2cebd4 <__RAM_SIZE+0x1cebd4>
     398:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
     39c:	1113490c 	tstne	r3, ip, lsl #18
     3a0:	40011201 	andmi	r1, r1, r1, lsl #4
     3a4:	0c429706 	mcrreq	7, 0, r9, r2, cr6
     3a8:	00001301 	andeq	r1, r0, r1, lsl #6
     3ac:	0300050f 	movweq	r0, #1295	; 0x50f
     3b0:	3b0b3a08 	blcc	2cebd8 <__RAM_SIZE+0x1cebd8>
     3b4:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     3b8:	b7060213 	smladlt	r6, r3, r2, r0
     3bc:	00000642 	andeq	r0, r0, r2, asr #12
     3c0:	03000510 	movweq	r0, #1296	; 0x510
     3c4:	3b0b3a0e 	blcc	2cec04 <__RAM_SIZE+0x1cec04>
     3c8:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     3cc:	000a0213 	andeq	r0, sl, r3, lsl r2
     3d0:	00181100 	andseq	r1, r8, r0, lsl #2
     3d4:	34120000 	ldrcc	r0, [r2], #-0
     3d8:	3a080300 	bcc	200fe0 <__RAM_SIZE+0x100fe0>
     3dc:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     3e0:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     3e4:	1300000a 	movwne	r0, #10
     3e8:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     3ec:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     3f0:	13490b39 	movtne	r0, #39737	; 0x9b39
     3f4:	00000a02 	andeq	r0, r0, r2, lsl #20
     3f8:	03003414 	movweq	r3, #1044	; 0x414
     3fc:	3b0b3a08 	blcc	2cec24 <__RAM_SIZE+0x1cec24>
     400:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     404:	b7060213 	smladlt	r6, r3, r2, r0
     408:	00000642 	andeq	r0, r0, r2, asr #12
     40c:	01828915 	orreq	r8, r2, r5, lsl r9
     410:	31011101 	tstcc	r1, r1, lsl #2
     414:	16000013 			; <UNDEFINED> instruction: 0x16000013
     418:	0001828a 	andeq	r8, r1, sl, lsl #5
     41c:	42910a02 	addsmi	r0, r1, #8192	; 0x2000
     420:	1700000a 	strne	r0, [r0, -sl]
     424:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
     428:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     42c:	13490b39 	movtne	r0, #39737	; 0x9b39
     430:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
     434:	18000006 	stmdane	r0, {r1, r2}
     438:	13490101 	movtne	r0, #37121	; 0x9101
     43c:	00001301 	andeq	r1, r0, r1, lsl #6
     440:	49002119 	stmdbmi	r0, {r0, r3, r4, r8, sp}
     444:	000b2f13 	andeq	r2, fp, r3, lsl pc
     448:	012e1a00 			; <UNDEFINED> instruction: 0x012e1a00
     44c:	0b3a0e03 	bleq	e83c60 <__RAM_SIZE+0xd83c60>
     450:	0b39053b 	bleq	e41944 <__RAM_SIZE+0xd41944>
     454:	13490c27 	movtne	r0, #39975	; 0x9c27
     458:	01120111 	tsteq	r2, r1, lsl r1
     45c:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
     460:	0013010c 	andseq	r0, r3, ip, lsl #2
     464:	00051b00 	andeq	r1, r5, r0, lsl #22
     468:	0b3a0803 	bleq	e8247c <__RAM_SIZE+0xd8247c>
     46c:	0b39053b 	bleq	e41960 <__RAM_SIZE+0xd41960>
     470:	0a021349 	beq	8519c <__HEAP_SIZE+0x8419c>
     474:	341c0000 	ldrcc	r0, [ip], #-0
     478:	3a0e0300 	bcc	381080 <__RAM_SIZE+0x281080>
     47c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     480:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     484:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
     488:	0b1d0000 	bleq	740490 <__RAM_SIZE+0x640490>
     48c:	12011101 	andne	r1, r1, #1073741824	; 0x40000000
     490:	00130101 	andseq	r0, r3, r1, lsl #2
     494:	010b1e00 	tsteq	fp, r0, lsl #28
     498:	13010655 	movwne	r0, #5717	; 0x1655
     49c:	341f0000 	ldrcc	r0, [pc], #-0	; 4a4 <__STACKSEAL_SIZE+0x4a4>
     4a0:	3a0e0300 	bcc	3810a8 <__RAM_SIZE+0x2810a8>
     4a4:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     4a8:	0013490b 	andseq	r4, r3, fp, lsl #18
     4ac:	82892000 	addhi	r2, r9, #0
     4b0:	01110101 	tsteq	r1, r1, lsl #2
     4b4:	13011331 	movwne	r1, #4913	; 0x1331
     4b8:	89210000 	stmdbhi	r1!, {}	; <UNPREDICTABLE>
     4bc:	11010182 	smlabbne	r1, r2, r1, r0
     4c0:	00130101 	andseq	r0, r3, r1, lsl #2
     4c4:	82892200 	addhi	r2, r9, #0, 4
     4c8:	01110101 	tsteq	r1, r1, lsl #2
     4cc:	1d230000 	stcne	0, cr0, [r3, #-0]
     4d0:	11133101 	tstne	r3, r1, lsl #2
     4d4:	58011201 	stmdapl	r1, {r0, r9, ip}
     4d8:	5705590b 	strpl	r5, [r5, -fp, lsl #18]
     4dc:	0013010b 	andseq	r0, r3, fp, lsl #2
     4e0:	00052400 	andeq	r2, r5, r0, lsl #8
     4e4:	06021331 			; <UNDEFINED> instruction: 0x06021331
     4e8:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
     4ec:	00052500 	andeq	r2, r5, r0, lsl #10
     4f0:	00001331 	andeq	r1, r0, r1, lsr r3
     4f4:	31003426 	tstcc	r0, r6, lsr #8
     4f8:	b7060213 	smladlt	r6, r3, r2, r0
     4fc:	00000642 	andeq	r0, r0, r2, asr #12
     500:	31011d27 	tstcc	r1, r7, lsr #26
     504:	b8015213 	stmdalt	r1, {r0, r1, r4, r9, ip, lr}
     508:	01110542 	tsteq	r1, r2, asr #10
     50c:	0b580112 	bleq	160095c <__RAM_SIZE+0x150095c>
     510:	0b570559 	bleq	15c1a7c <__RAM_SIZE+0x14c1a7c>
     514:	00001301 	andeq	r1, r0, r1, lsl #6
     518:	01828928 	orreq	r8, r2, r8, lsr #18
     51c:	93011101 	movwls	r1, #4353	; 0x1101
     520:	13010a42 	movwne	r0, #6722	; 0x1a42
     524:	17290000 	strne	r0, [r9, -r0]!
     528:	3a0b0b01 	bcc	2c3134 <__RAM_SIZE+0x1c3134>
     52c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     530:	0013010b 	andseq	r0, r3, fp, lsl #2
     534:	000d2a00 	andeq	r2, sp, r0, lsl #20
     538:	0b3a0803 	bleq	e8254c <__RAM_SIZE+0xd8254c>
     53c:	0b39053b 	bleq	e41a30 <__RAM_SIZE+0xd41a30>
     540:	00001349 	andeq	r1, r0, r9, asr #6
     544:	0182892b 	orreq	r8, r2, fp, lsr #18
     548:	31011100 	mrscc	r1, (UNDEF: 17)
     54c:	2c000013 	stccs	0, cr0, [r0], {19}
     550:	0e03012e 	adfeqsp	f0, f3, #0.5
     554:	0b3b0b3a 	bleq	ec3244 <__RAM_SIZE+0xdc3244>
     558:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     55c:	01111349 	tsteq	r1, r9, asr #6
     560:	06400112 			; <UNDEFINED> instruction: 0x06400112
     564:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
     568:	2d000013 	stccs	0, cr0, [r0, #-76]	; 0xffffffb4
     56c:	08030005 	stmdaeq	r3, {r0, r2}
     570:	0b3b0b3a 	bleq	ec3260 <__RAM_SIZE+0xdc3260>
     574:	13490b39 	movtne	r0, #39737	; 0x9b39
     578:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
     57c:	2e000006 	cdpcs	0, 0, cr0, cr0, cr6, {0}
     580:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
     584:	0b3b0b3a 	bleq	ec3274 <__RAM_SIZE+0xdc3274>
     588:	13490b39 	movtne	r0, #39737	; 0x9b39
     58c:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
     590:	2f000006 	svccs	0x00000006
     594:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     598:	0b3b0b3a 	bleq	ec3288 <__RAM_SIZE+0xdc3288>
     59c:	13490b39 	movtne	r0, #39737	; 0x9b39
     5a0:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
     5a4:	30000006 	andcc	r0, r0, r6
     5a8:	08030034 	stmdaeq	r3, {r2, r4, r5}
     5ac:	0b3b0b3a 	bleq	ec329c <__RAM_SIZE+0xdc329c>
     5b0:	13490b39 	movtne	r0, #39737	; 0x9b39
     5b4:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
     5b8:	31000006 	tstcc	r0, r6
     5bc:	0e03012e 	adfeqsp	f0, f3, #0.5
     5c0:	0b3b0b3a 	bleq	ec32b0 <__RAM_SIZE+0xdc32b0>
     5c4:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     5c8:	01111349 	tsteq	r1, r9, asr #6
     5cc:	0a400112 	beq	1000a1c <__RAM_SIZE+0xf00a1c>
     5d0:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
     5d4:	32000013 	andcc	r0, r0, #19
     5d8:	1331011d 	teqne	r1, #1073741831	; 0x40000007
     5dc:	42b80152 	adcsmi	r0, r8, #-2147483628	; 0x80000014
     5e0:	12011105 	andne	r1, r1, #1073741825	; 0x40000001
     5e4:	590b5801 	stmdbpl	fp, {r0, fp, ip, lr}
     5e8:	000b570b 	andeq	r5, fp, fp, lsl #14
     5ec:	012e3300 			; <UNDEFINED> instruction: 0x012e3300
     5f0:	0b3a0e03 	bleq	e83e04 <__RAM_SIZE+0xd83e04>
     5f4:	0b390b3b 	bleq	e432e8 <__RAM_SIZE+0xd432e8>
     5f8:	13490c27 	movtne	r0, #39975	; 0x9c27
     5fc:	13010b20 	movwne	r0, #6944	; 0x1b20
     600:	05340000 	ldreq	r0, [r4, #-0]!
     604:	3a080300 	bcc	20120c <__RAM_SIZE+0x10120c>
     608:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     60c:	0013490b 	andseq	r4, r3, fp, lsl #18
     610:	00053500 	andeq	r3, r5, r0, lsl #10
     614:	0b3a0e03 	bleq	e83e28 <__RAM_SIZE+0xd83e28>
     618:	0b390b3b 	bleq	e4330c <__RAM_SIZE+0xd4330c>
     61c:	00001349 	andeq	r1, r0, r9, asr #6
     620:	03003436 	movweq	r3, #1078	; 0x436
     624:	3b0b3a08 	blcc	2cee4c <__RAM_SIZE+0x1cee4c>
     628:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     62c:	37000013 	smladcc	r0, r3, r0, r0
     630:	0e03012e 	adfeqsp	f0, f3, #0.5
     634:	0b3b0b3a 	bleq	ec3324 <__RAM_SIZE+0xdc3324>
     638:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     63c:	01120111 	tsteq	r2, r1, lsl r1
     640:	42960640 	addsmi	r0, r6, #64, 12	; 0x4000000
     644:	0013010c 	andseq	r0, r3, ip, lsl #2
     648:	012e3800 			; <UNDEFINED> instruction: 0x012e3800
     64c:	0b3a0e03 	bleq	e83e60 <__RAM_SIZE+0xd83e60>
     650:	0b390b3b 	bleq	e43344 <__RAM_SIZE+0xd43344>
     654:	01110c27 	tsteq	r1, r7, lsr #24
     658:	06400112 			; <UNDEFINED> instruction: 0x06400112
     65c:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
     660:	39000013 	stmdbcc	r0, {r0, r1, r4}
     664:	0e03012e 	adfeqsp	f0, f3, #0.5
     668:	0b3b0b3a 	bleq	ec3358 <__RAM_SIZE+0xdc3358>
     66c:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     670:	01120111 	tsteq	r2, r1, lsl r1
     674:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
     678:	0013010c 	andseq	r0, r3, ip, lsl #2
     67c:	00053a00 	andeq	r3, r5, r0, lsl #20
     680:	0b3a0e03 	bleq	e83e94 <__RAM_SIZE+0xd83e94>
     684:	0b390b3b 	bleq	e43378 <__RAM_SIZE+0xd43378>
     688:	0a021349 	beq	853b4 <__HEAP_SIZE+0x843b4>
     68c:	053b0000 	ldreq	r0, [fp, #-0]!
     690:	3a080300 	bcc	201298 <__RAM_SIZE+0x101298>
     694:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     698:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     69c:	3c00000a 	stccc	0, cr0, [r0], {10}
     6a0:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 5f0 <__STACKSEAL_SIZE+0x5f0>
     6a4:	40870c3c 	addmi	r0, r7, ip, lsr ip
     6a8:	000e030e 	andeq	r0, lr, lr, lsl #6
     6ac:	002e3d00 	eoreq	r3, lr, r0, lsl #26
     6b0:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
     6b4:	030e4087 	movweq	r4, #57479	; 0xe087
     6b8:	3b0b3a0e 	blcc	2ceef8 <__RAM_SIZE+0x1ceef8>
     6bc:	000b390b 	andeq	r3, fp, fp, lsl #18
     6c0:	11010000 	mrsne	r0, (UNDEF: 1)
     6c4:	130e2501 	movwne	r2, #58625	; 0xe501
     6c8:	1b0e030b 	blne	3812fc <__RAM_SIZE+0x2812fc>
     6cc:	1106550e 	tstne	r6, lr, lsl #10
     6d0:	10015201 	andne	r5, r1, r1, lsl #4
     6d4:	02000006 	andeq	r0, r0, #6
     6d8:	0b0b0024 	bleq	2c0770 <__RAM_SIZE+0x1c0770>
     6dc:	0e030b3e 	vmoveq.16	d3[0], r0
     6e0:	16030000 	strne	r0, [r3], -r0
     6e4:	3a0e0300 	bcc	3812ec <__RAM_SIZE+0x2812ec>
     6e8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     6ec:	0013490b 	andseq	r4, r3, fp, lsl #18
     6f0:	00240400 	eoreq	r0, r4, r0, lsl #8
     6f4:	0b3e0b0b 	bleq	f83328 <__RAM_SIZE+0xe83328>
     6f8:	00000803 	andeq	r0, r0, r3, lsl #16
     6fc:	49002605 	stmdbmi	r0, {r0, r2, r9, sl, sp}
     700:	06000013 			; <UNDEFINED> instruction: 0x06000013
     704:	0b0b000f 	bleq	2c0748 <__RAM_SIZE+0x1c0748>
     708:	00001349 	andeq	r1, r0, r9, asr #6
     70c:	3f012e07 	svccc	0x00012e07
     710:	3a0e030c 	bcc	381348 <__RAM_SIZE+0x281348>
     714:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     718:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
     71c:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
     720:	97064001 	strls	r4, [r6, -r1]
     724:	13010c42 	movwne	r0, #7234	; 0x1c42
     728:	05080000 	streq	r0, [r8, #-0]
     72c:	3a0e0300 	bcc	381334 <__RAM_SIZE+0x281334>
     730:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     734:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     738:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
     73c:	34090000 	strcc	r0, [r9], #-0
     740:	3a080300 	bcc	201348 <__RAM_SIZE+0x101348>
     744:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     748:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     74c:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
     750:	890a0000 	stmdbhi	sl, {}	; <UNPREDICTABLE>
     754:	11000182 	smlabbne	r0, r2, r1, r0
     758:	00133101 	andseq	r3, r3, r1, lsl #2
     75c:	012e0b00 			; <UNDEFINED> instruction: 0x012e0b00
     760:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
     764:	0b3b0b3a 	bleq	ec3454 <__RAM_SIZE+0xdc3454>
     768:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     76c:	01120111 	tsteq	r2, r1, lsl r1
     770:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
     774:	0013010c 	andseq	r0, r3, ip, lsl #2
     778:	82890c00 	addhi	r0, r9, #0, 24
     77c:	01110101 	tsteq	r1, r1, lsl #2
     780:	00001331 	andeq	r1, r0, r1, lsr r3
     784:	01828a0d 	orreq	r8, r2, sp, lsl #20
     788:	910a0200 	mrsls	r0, R10_fiq
     78c:	00000a42 	andeq	r0, r0, r2, asr #20
     790:	3f002e0e 	svccc	0x00002e0e
     794:	3a0e030c 	bcc	3813cc <__RAM_SIZE+0x2813cc>
     798:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     79c:	110c270b 	tstne	ip, fp, lsl #14
     7a0:	40011201 	andmi	r1, r1, r1, lsl #4
     7a4:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
     7a8:	340f0000 	strcc	r0, [pc], #-0	; 7b0 <__STACKSEAL_SIZE+0x7b0>
     7ac:	3a0e0300 	bcc	3813b4 <__RAM_SIZE+0x2813b4>
     7b0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     7b4:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     7b8:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
     7bc:	2e100000 	cdpcs	0, 1, cr0, cr0, cr0, {0}
     7c0:	030c3f00 	movweq	r3, #52992	; 0xcf00
     7c4:	3b0b3a0e 	blcc	2cf004 <__RAM_SIZE+0x1cf004>
     7c8:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
     7cc:	1113490c 	tstne	r3, ip, lsl #18
     7d0:	40011201 	andmi	r1, r1, r1, lsl #4
     7d4:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
     7d8:	2e110000 	cdpcs	0, 1, cr0, cr1, cr0, {0}
     7dc:	030c3f01 	movweq	r3, #52993	; 0xcf01
     7e0:	3b0b3a0e 	blcc	2cf020 <__RAM_SIZE+0x1cf020>
     7e4:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
     7e8:	1113490c 	tstne	r3, ip, lsl #18
     7ec:	40011201 	andmi	r1, r1, r1, lsl #4
     7f0:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
     7f4:	00001301 	andeq	r1, r0, r1, lsl #6
     7f8:	03000512 	movweq	r0, #1298	; 0x512
     7fc:	3b0b3a08 	blcc	2cf024 <__RAM_SIZE+0x1cf024>
     800:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     804:	b7060213 	smladlt	r6, r3, r2, r0
     808:	00000642 	andeq	r0, r0, r2, asr #12
     80c:	3f002e13 	svccc	0x00002e13
     810:	870c3c0c 	strhi	r3, [ip, -ip, lsl #24]
     814:	0e030e40 	cdpeq	14, 0, cr0, cr3, cr0, {2}
     818:	0b3b0b3a 	bleq	ec3508 <__RAM_SIZE+0xdc3508>
     81c:	00000b39 	andeq	r0, r0, r9, lsr fp
     820:	01110100 	tsteq	r1, r0, lsl #2
     824:	0b130e25 	bleq	4c40c0 <__RAM_SIZE+0x3c40c0>
     828:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
     82c:	01110655 	tsteq	r1, r5, asr r6
     830:	06100152 			; <UNDEFINED> instruction: 0x06100152
     834:	24020000 	strcs	r0, [r2], #-0
     838:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     83c:	000e030b 	andeq	r0, lr, fp, lsl #6
     840:	00160300 	andseq	r0, r6, r0, lsl #6
     844:	0b3a0e03 	bleq	e84058 <__RAM_SIZE+0xd84058>
     848:	0b390b3b 	bleq	e4353c <__RAM_SIZE+0xd4353c>
     84c:	00001349 	andeq	r1, r0, r9, asr #6
     850:	0b002404 	bleq	9868 <__HEAP_SIZE+0x8868>
     854:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
     858:	05000008 	streq	r0, [r0, #-8]
     85c:	13490035 	movtne	r0, #36917	; 0x9035
     860:	13060000 	movwne	r0, #24576	; 0x6000
     864:	0b0e0301 	bleq	381470 <__RAM_SIZE+0x281470>
     868:	3b0b3a0b 	blcc	2cf09c <__RAM_SIZE+0x1cf09c>
     86c:	010b390b 	tsteq	fp, fp, lsl #18
     870:	07000013 	smladeq	r0, r3, r0, r0
     874:	0803000d 	stmdaeq	r3, {r0, r2, r3}
     878:	0b3b0b3a 	bleq	ec3568 <__RAM_SIZE+0xdc3568>
     87c:	13490b39 	movtne	r0, #39737	; 0x9b39
     880:	00000a38 	andeq	r0, r0, r8, lsr sl
     884:	03000d08 	movweq	r0, #3336	; 0xd08
     888:	3b0b3a0e 	blcc	2cf0c8 <__RAM_SIZE+0x1cf0c8>
     88c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     890:	000a3813 	andeq	r3, sl, r3, lsl r8
     894:	00340900 	eorseq	r0, r4, r0, lsl #18
     898:	0b3a0e03 	bleq	e840ac <__RAM_SIZE+0xd840ac>
     89c:	0b390b3b 	bleq	e43590 <__RAM_SIZE+0xd43590>
     8a0:	0c3f1349 	ldceq	3, cr1, [pc], #-292	; 784 <__STACKSEAL_SIZE+0x784>
     8a4:	00000c3c 	andeq	r0, r0, ip, lsr ip
     8a8:	0300340a 	movweq	r3, #1034	; 0x40a
     8ac:	3b0b3a0e 	blcc	2cf0ec <__RAM_SIZE+0x1cf0ec>
     8b0:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     8b4:	020c3f13 	andeq	r3, ip, #19, 30	; 0x4c
     8b8:	0b00000a 	bleq	8e8 <__Vectors_Size+0x128>
     8bc:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 80c <__Vectors_Size+0x4c>
     8c0:	0b3a0e03 	bleq	e840d4 <__RAM_SIZE+0xd840d4>
     8c4:	0b39053b 	bleq	e41db8 <__RAM_SIZE+0xd41db8>
     8c8:	13490c27 	movtne	r0, #39975	; 0x9c27
     8cc:	01120111 	tsteq	r2, r1, lsl r1
     8d0:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
     8d4:	0c00000c 	stceq	0, cr0, [r0], {12}
     8d8:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 828 <__Vectors_Size+0x68>
     8dc:	0b3a0e03 	bleq	e840f0 <__RAM_SIZE+0xd840f0>
     8e0:	0b39053b 	bleq	e41dd4 <__RAM_SIZE+0xd41dd4>
     8e4:	13490c27 	movtne	r0, #39975	; 0x9c27
     8e8:	01120111 	tsteq	r2, r1, lsl r1
     8ec:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
     8f0:	0013010c 	andseq	r0, r3, ip, lsl #2
     8f4:	011d0d00 	tsteq	sp, r0, lsl #26
     8f8:	01521331 	cmpeq	r2, r1, lsr r3
     8fc:	110b42b8 			; <UNDEFINED> instruction: 0x110b42b8
     900:	58011201 	stmdapl	r1, {r0, r9, ip}
     904:	5705590b 	strpl	r5, [r5, -fp, lsl #18]
     908:	0e00000b 	cdpeq	0, 0, cr0, cr0, cr11, {0}
     90c:	13310034 	teqne	r1, #52	; 0x34
     910:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
     914:	0f000006 	svceq	0x00000006
     918:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 868 <__Vectors_Size+0xa8>
     91c:	0b3a0e03 	bleq	e84130 <__RAM_SIZE+0xd84130>
     920:	0b390b3b 	bleq	e43614 <__RAM_SIZE+0xd43614>
     924:	13490c27 	movtne	r0, #39975	; 0x9c27
     928:	01120111 	tsteq	r2, r1, lsl r1
     92c:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
     930:	0013010c 	andseq	r0, r3, ip, lsl #2
     934:	00051000 	andeq	r1, r5, r0
     938:	0b3a0e03 	bleq	e8414c <__RAM_SIZE+0xd8414c>
     93c:	0b390b3b 	bleq	e43630 <__RAM_SIZE+0xd43630>
     940:	06021349 	streq	r1, [r2], -r9, asr #6
     944:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
     948:	00341100 	eorseq	r1, r4, r0, lsl #2
     94c:	0b3a0e03 	bleq	e84160 <__RAM_SIZE+0xd84160>
     950:	0b390b3b 	bleq	e43644 <__RAM_SIZE+0xd43644>
     954:	06021349 	streq	r1, [r2], -r9, asr #6
     958:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
     95c:	00341200 	eorseq	r1, r4, r0, lsl #4
     960:	0b3a0803 	bleq	e82974 <__RAM_SIZE+0xd82974>
     964:	0b390b3b 	bleq	e43658 <__RAM_SIZE+0xd43658>
     968:	06021349 	streq	r1, [r2], -r9, asr #6
     96c:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
     970:	82891300 	addhi	r1, r9, #0, 6
     974:	01110101 	tsteq	r1, r1, lsl #2
     978:	13011331 	movwne	r1, #4913	; 0x1331
     97c:	8a140000 	bhi	500984 <__RAM_SIZE+0x400984>
     980:	02000182 	andeq	r0, r0, #-2147483616	; 0x80000020
     984:	0a42910a 	beq	10a4db4 <__RAM_SIZE+0xfa4db4>
     988:	89150000 	ldmdbhi	r5, {}	; <UNPREDICTABLE>
     98c:	11000182 	smlabbne	r0, r2, r1, r0
     990:	00133101 	andseq	r3, r3, r1, lsl #2
     994:	000f1600 	andeq	r1, pc, r0, lsl #12
     998:	13490b0b 	movtne	r0, #39691	; 0x9b0b
     99c:	2e170000 	cdpcs	0, 1, cr0, cr7, cr0, {0}
     9a0:	030c3f01 	movweq	r3, #52993	; 0xcf01
     9a4:	3b0b3a0e 	blcc	2cf1e4 <__RAM_SIZE+0x1cf1e4>
     9a8:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
     9ac:	1201110c 	andne	r1, r1, #12, 2
     9b0:	97064001 	strls	r4, [r6, -r1]
     9b4:	13010c42 	movwne	r0, #7234	; 0x1c42
     9b8:	34180000 	ldrcc	r0, [r8], #-0
     9bc:	3a0e0300 	bcc	3815c4 <__RAM_SIZE+0x2815c4>
     9c0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     9c4:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     9c8:	1900000a 	stmdbne	r0, {r1, r3}
     9cc:	01018289 	smlabbeq	r1, r9, r2, r8
     9d0:	13310111 	teqne	r1, #1073741828	; 0x40000004
     9d4:	011a0000 	tsteq	sl, r0
     9d8:	01134901 	tsteq	r3, r1, lsl #18
     9dc:	1b000013 	blne	a30 <__Vectors_Size+0x270>
     9e0:	13490021 	movtne	r0, #36897	; 0x9021
     9e4:	00000b2f 	andeq	r0, r0, pc, lsr #22
     9e8:	03012e1c 	movweq	r2, #7708	; 0x1e1c
     9ec:	3b0b3a0e 	blcc	2cf22c <__RAM_SIZE+0x1cf22c>
     9f0:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
     9f4:	1201110c 	andne	r1, r1, #12, 2
     9f8:	97064001 	strls	r4, [r6, -r1]
     9fc:	13010c42 	movwne	r0, #7234	; 0x1c42
     a00:	2e1d0000 	cdpcs	0, 1, cr0, cr13, cr0, {0}
     a04:	030c3f01 	movweq	r3, #52993	; 0xcf01
     a08:	3b0b3a0e 	blcc	2cf248 <__RAM_SIZE+0x1cf248>
     a0c:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
     a10:	010c3c0c 	tsteq	ip, ip, lsl #24
     a14:	1e000013 	mcrne	0, 0, r0, cr0, cr3, {0}
     a18:	13490005 	movtne	r0, #36869	; 0x9005
     a1c:	2e1f0000 	cdpcs	0, 1, cr0, cr15, cr0, {0}
     a20:	3a0e0301 	bcc	38162c <__RAM_SIZE+0x28162c>
     a24:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     a28:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
     a2c:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
     a30:	970a4001 	strls	r4, [sl, -r1]
     a34:	13010c42 	movwne	r0, #7234	; 0x1c42
     a38:	05200000 	streq	r0, [r0, #-0]!
     a3c:	3a080300 	bcc	201644 <__RAM_SIZE+0x101644>
     a40:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     a44:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     a48:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
     a4c:	2e210000 	cdpcs	0, 2, cr0, cr1, cr0, {0}
     a50:	3a0e0301 	bcc	38165c <__RAM_SIZE+0x28165c>
     a54:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     a58:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
     a5c:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
     a60:	97064001 	strls	r4, [r6, -r1]
     a64:	13010c42 	movwne	r0, #7234	; 0x1c42
     a68:	0b220000 	bleq	880a70 <__RAM_SIZE+0x780a70>
     a6c:	12011101 	andne	r1, r1, #1073741824	; 0x40000000
     a70:	23000001 	movwcs	r0, #1
     a74:	0e03012e 	adfeqsp	f0, f3, #0.5
     a78:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     a7c:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     a80:	0b201349 	bleq	8057ac <__RAM_SIZE+0x7057ac>
     a84:	00001301 	andeq	r1, r0, r1, lsl #6
     a88:	03003424 	movweq	r3, #1060	; 0x424
     a8c:	3b0b3a0e 	blcc	2cf2cc <__RAM_SIZE+0x1cf2cc>
     a90:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     a94:	25000013 	strcs	r0, [r0, #-19]	; 0xffffffed
     a98:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 9e8 <__Vectors_Size+0x228>
     a9c:	40870c3c 	addmi	r0, r7, ip, lsr ip
     aa0:	3a0e030e 	bcc	3816e0 <__RAM_SIZE+0x2816e0>
     aa4:	000b3b0b 	andeq	r3, fp, fp, lsl #22
     aa8:	002e2600 	eoreq	r2, lr, r0, lsl #12
     aac:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
     ab0:	030e4087 	movweq	r4, #57479	; 0xe087
     ab4:	3b0b3a0e 	blcc	2cf2f4 <__RAM_SIZE+0x1cf2f4>
     ab8:	000b390b 	andeq	r3, fp, fp, lsl #18
     abc:	11010000 	mrsne	r0, (UNDEF: 1)
     ac0:	130e2501 	movwne	r2, #58625	; 0xe501
     ac4:	1b0e030b 	blne	3816f8 <__RAM_SIZE+0x2816f8>
     ac8:	1106550e 	tstne	r6, lr, lsl #10
     acc:	10015201 	andne	r5, r1, r1, lsl #4
     ad0:	02000006 	andeq	r0, r0, #6
     ad4:	0b0b0024 	bleq	2c0b6c <__RAM_SIZE+0x1c0b6c>
     ad8:	0e030b3e 	vmoveq.16	d3[0], r0
     adc:	24030000 	strcs	r0, [r3], #-0
     ae0:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     ae4:	0008030b 	andeq	r0, r8, fp, lsl #6
     ae8:	012e0400 			; <UNDEFINED> instruction: 0x012e0400
     aec:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
     af0:	0b3b0b3a 	bleq	ec37e0 <__RAM_SIZE+0xdc37e0>
     af4:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     af8:	01120111 	tsteq	r2, r1, lsl r1
     afc:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
     b00:	0013010c 	andseq	r0, r3, ip, lsl #2
     b04:	00050500 	andeq	r0, r5, r0, lsl #10
     b08:	0b3a0e03 	bleq	e8431c <__RAM_SIZE+0xd8431c>
     b0c:	0b390b3b 	bleq	e43800 <__RAM_SIZE+0xd43800>
     b10:	06021349 	streq	r1, [r2], -r9, asr #6
     b14:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
     b18:	82890600 	addhi	r0, r9, #0, 12
     b1c:	01110101 	tsteq	r1, r1, lsl #2
     b20:	13011331 	movwne	r1, #4913	; 0x1331
     b24:	8a070000 	bhi	1c0b2c <__RAM_SIZE+0xc0b2c>
     b28:	02000182 	andeq	r0, r0, #-2147483616	; 0x80000020
     b2c:	0a42910a 	beq	10a4f5c <__RAM_SIZE+0xfa4f5c>
     b30:	89080000 	stmdbhi	r8, {}	; <UNPREDICTABLE>
     b34:	11010182 	smlabbne	r1, r2, r1, r0
     b38:	00133101 	andseq	r3, r3, r1, lsl #2
     b3c:	002e0900 	eoreq	r0, lr, r0, lsl #18
     b40:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
     b44:	030e4087 	movweq	r4, #57479	; 0xe087
     b48:	3b0b3a0e 	blcc	2cf388 <__RAM_SIZE+0x1cf388>
     b4c:	0a00000b 	beq	b80 <__Vectors_Size+0x3c0>
     b50:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; aa0 <__Vectors_Size+0x2e0>
     b54:	40870c3c 	addmi	r0, r7, ip, lsr ip
     b58:	3a0e030e 	bcc	381798 <__RAM_SIZE+0x281798>
     b5c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     b60:	0000000b 	andeq	r0, r0, fp
     b64:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
     b68:	030b130e 	movweq	r1, #45838	; 0xb30e
     b6c:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
     b70:	52011106 	andpl	r1, r1, #-2147483647	; 0x80000001
     b74:	00061001 	andeq	r1, r6, r1
     b78:	00240200 	eoreq	r0, r4, r0, lsl #4
     b7c:	0b3e0b0b 	bleq	f837b0 <__RAM_SIZE+0xe837b0>
     b80:	00000e03 	andeq	r0, r0, r3, lsl #28
     b84:	0b002403 	bleq	9b98 <__HEAP_SIZE+0x8b98>
     b88:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
     b8c:	04000008 	streq	r0, [r0], #-8
     b90:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
     b94:	0b3b0b3a 	bleq	ec3884 <__RAM_SIZE+0xdc3884>
     b98:	13490b39 	movtne	r0, #39737	; 0x9b39
     b9c:	0f050000 	svceq	0x00050000
     ba0:	000b0b00 	andeq	r0, fp, r0, lsl #22
     ba4:	00260600 	eoreq	r0, r6, r0, lsl #12
     ba8:	00001349 	andeq	r1, r0, r9, asr #6
     bac:	03011307 	movweq	r1, #4871	; 0x1307
     bb0:	3a0b0b0e 	bcc	2c37f0 <__RAM_SIZE+0x1c37f0>
     bb4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     bb8:	0013010b 	andseq	r0, r3, fp, lsl #2
     bbc:	000d0800 	andeq	r0, sp, r0, lsl #16
     bc0:	0b3a0e03 	bleq	e843d4 <__RAM_SIZE+0xd843d4>
     bc4:	0b390b3b 	bleq	e438b8 <__RAM_SIZE+0xd438b8>
     bc8:	0a381349 	beq	e058f4 <__RAM_SIZE+0xd058f4>
     bcc:	0f090000 	svceq	0x00090000
     bd0:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
     bd4:	0a000013 	beq	c28 <__Vectors_Size+0x468>
     bd8:	0c3f012e 	ldfeqs	f0, [pc], #-184	; b28 <__Vectors_Size+0x368>
     bdc:	0b3a0e03 	bleq	e843f0 <__RAM_SIZE+0xd843f0>
     be0:	0b390b3b 	bleq	e438d4 <__RAM_SIZE+0xd438d4>
     be4:	13490c27 	movtne	r0, #39975	; 0x9c27
     be8:	01120111 	tsteq	r2, r1, lsl r1
     bec:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
     bf0:	0013010c 	andseq	r0, r3, ip, lsl #2
     bf4:	00050b00 	andeq	r0, r5, r0, lsl #22
     bf8:	0b3a0e03 	bleq	e8440c <__RAM_SIZE+0xd8440c>
     bfc:	0b390b3b 	bleq	e438f0 <__RAM_SIZE+0xd438f0>
     c00:	06021349 	streq	r1, [r2], -r9, asr #6
     c04:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
     c08:	00340c00 	eorseq	r0, r4, r0, lsl #24
     c0c:	0b3a0e03 	bleq	e84420 <__RAM_SIZE+0xd84420>
     c10:	0b390b3b 	bleq	e43904 <__RAM_SIZE+0xd43904>
     c14:	06021349 	streq	r1, [r2], -r9, asr #6
     c18:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
     c1c:	012e0d00 			; <UNDEFINED> instruction: 0x012e0d00
     c20:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
     c24:	0b3b0b3a 	bleq	ec3914 <__RAM_SIZE+0xdc3914>
     c28:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     c2c:	01120111 	tsteq	r2, r1, lsl r1
     c30:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
     c34:	0013010c 	andseq	r0, r3, ip, lsl #2
     c38:	00050e00 	andeq	r0, r5, r0, lsl #28
     c3c:	0b3a0e03 	bleq	e84450 <__RAM_SIZE+0xd84450>
     c40:	0b390b3b 	bleq	e43934 <__RAM_SIZE+0xd43934>
     c44:	0a021349 	beq	85970 <__HEAP_SIZE+0x84970>
     c48:	2e0f0000 	cdpcs	0, 0, cr0, cr15, cr0, {0}
     c4c:	030c3f01 	movweq	r3, #52993	; 0xcf01
     c50:	3b0b3a0e 	blcc	2cf490 <__RAM_SIZE+0x1cf490>
     c54:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
     c58:	1201110c 	andne	r1, r1, #12, 2
     c5c:	970a4001 	strls	r4, [sl, -r1]
     c60:	13010c42 	movwne	r0, #7234	; 0x1c42
     c64:	2e100000 	cdpcs	0, 1, cr0, cr0, cr0, {0}
     c68:	030c3f01 	movweq	r3, #52993	; 0xcf01
     c6c:	3b0b3a0e 	blcc	2cf4ac <__RAM_SIZE+0x1cf4ac>
     c70:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
     c74:	1201110c 	andne	r1, r1, #12, 2
     c78:	970a4001 	strls	r4, [sl, -r1]
     c7c:	00000c42 	andeq	r0, r0, r2, asr #24
     c80:	01110100 	tsteq	r1, r0, lsl #2
     c84:	0b130e25 	bleq	4c4520 <__RAM_SIZE+0x3c4520>
     c88:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
     c8c:	01110655 	tsteq	r1, r5, asr r6
     c90:	06100152 			; <UNDEFINED> instruction: 0x06100152
     c94:	16020000 	strne	r0, [r2], -r0
     c98:	3a0e0300 	bcc	3818a0 <__RAM_SIZE+0x2818a0>
     c9c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     ca0:	0013490b 	andseq	r4, r3, fp, lsl #18
     ca4:	00240300 	eoreq	r0, r4, r0, lsl #6
     ca8:	0b3e0b0b 	bleq	f838dc <__RAM_SIZE+0xe838dc>
     cac:	00000e03 	andeq	r0, r0, r3, lsl #28
     cb0:	0b002404 	bleq	9cc8 <__HEAP_SIZE+0x8cc8>
     cb4:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
     cb8:	05000008 	streq	r0, [r0, #-8]
     cbc:	0b0b000f 	bleq	2c0d00 <__RAM_SIZE+0x1c0d00>
     cc0:	26060000 	strcs	r0, [r6], -r0
     cc4:	00134900 	andseq	r4, r3, r0, lsl #18
     cc8:	000f0700 	andeq	r0, pc, r0, lsl #14
     ccc:	13490b0b 	movtne	r0, #39691	; 0x9b0b
     cd0:	26080000 	strcs	r0, [r8], -r0
     cd4:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
     cd8:	13490035 	movtne	r0, #36917	; 0x9035
     cdc:	130a0000 	movwne	r0, #40960	; 0xa000
     ce0:	0b0e0301 	bleq	3818ec <__RAM_SIZE+0x2818ec>
     ce4:	3b0b3a0b 	blcc	2cf518 <__RAM_SIZE+0x1cf518>
     ce8:	010b3905 	tsteq	fp, r5, lsl #18
     cec:	0b000013 	bleq	d40 <__Vectors_Size+0x580>
     cf0:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
     cf4:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     cf8:	13490b39 	movtne	r0, #39737	; 0x9b39
     cfc:	00000a38 	andeq	r0, r0, r8, lsr sl
     d00:	4901010c 	stmdbmi	r1, {r2, r3, r8}
     d04:	00130113 	andseq	r0, r3, r3, lsl r1
     d08:	00210d00 	eoreq	r0, r1, r0, lsl #26
     d0c:	0b2f1349 	bleq	bc5a38 <__RAM_SIZE+0xac5a38>
     d10:	160e0000 	strne	r0, [lr], -r0
     d14:	3a0e0300 	bcc	38191c <__RAM_SIZE+0x28191c>
     d18:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     d1c:	0013490b 	andseq	r4, r3, fp, lsl #18
     d20:	01170f00 	tsteq	r7, r0, lsl #30
     d24:	0b3a0b0b 	bleq	e83958 <__RAM_SIZE+0xd83958>
     d28:	0b39053b 	bleq	e4221c <__RAM_SIZE+0xd4221c>
     d2c:	00001301 	andeq	r1, r0, r1, lsl #6
     d30:	03000d10 	movweq	r0, #3344	; 0xd10
     d34:	3b0b3a0e 	blcc	2cf574 <__RAM_SIZE+0x1cf574>
     d38:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     d3c:	11000013 	tstne	r0, r3, lsl r0
     d40:	0803000d 	stmdaeq	r3, {r0, r2, r3}
     d44:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     d48:	13490b39 	movtne	r0, #39737	; 0x9b39
     d4c:	00000a38 	andeq	r0, r0, r8, lsr sl
     d50:	03011312 	movweq	r1, #4882	; 0x1312
     d54:	3a0b0b0e 	bcc	2c3994 <__RAM_SIZE+0x1c3994>
     d58:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     d5c:	0013010b 	andseq	r0, r3, fp, lsl #2
     d60:	000d1300 	andeq	r1, sp, r0, lsl #6
     d64:	0b3a0e03 	bleq	e84578 <__RAM_SIZE+0xd84578>
     d68:	0b390b3b 	bleq	e43a5c <__RAM_SIZE+0xd43a5c>
     d6c:	0a381349 	beq	e05a98 <__RAM_SIZE+0xd05a98>
     d70:	13140000 	tstne	r4, #0
     d74:	3c0e0300 	stccc	3, cr0, [lr], {-0}
     d78:	1500000c 	strne	r0, [r0, #-12]
     d7c:	0803000d 	stmdaeq	r3, {r0, r2, r3}
     d80:	0b3b0b3a 	bleq	ec3a70 <__RAM_SIZE+0xdc3a70>
     d84:	13490b39 	movtne	r0, #39737	; 0x9b39
     d88:	00000a38 	andeq	r0, r0, r8, lsr sl
     d8c:	0b011716 	bleq	469ec <__HEAP_SIZE+0x459ec>
     d90:	3b0b3a0b 	blcc	2cf5c4 <__RAM_SIZE+0x1cf5c4>
     d94:	010b390b 	tsteq	fp, fp, lsl #18
     d98:	17000013 	smladne	r0, r3, r0, r0
     d9c:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
     da0:	0b3b0b3a 	bleq	ec3a90 <__RAM_SIZE+0xdc3a90>
     da4:	13490b39 	movtne	r0, #39737	; 0x9b39
     da8:	2e180000 	cdpcs	0, 1, cr0, cr8, cr0, {0}
     dac:	3a0e0301 	bcc	3819b8 <__RAM_SIZE+0x2819b8>
     db0:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     db4:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
     db8:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
     dbc:	97064001 	strls	r4, [r6, -r1]
     dc0:	13010c42 	movwne	r0, #7234	; 0x1c42
     dc4:	05190000 	ldreq	r0, [r9, #-0]
     dc8:	3a0e0300 	bcc	3819d0 <__RAM_SIZE+0x2819d0>
     dcc:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     dd0:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     dd4:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
     dd8:	341a0000 	ldrcc	r0, [sl], #-0
     ddc:	3a0e0300 	bcc	3819e4 <__RAM_SIZE+0x2819e4>
     de0:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     de4:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     de8:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
     dec:	0b1b0000 	bleq	6c0df4 <__RAM_SIZE+0x5c0df4>
     df0:	00065501 	andeq	r5, r6, r1, lsl #10
     df4:	010b1c00 	tsteq	fp, r0, lsl #24
     df8:	01120111 	tsteq	r2, r1, lsl r1
     dfc:	00001301 	andeq	r1, r0, r1, lsl #6
     e00:	0182891d 	orreq	r8, r2, sp, lsl r9
     e04:	31011100 	mrscc	r1, (UNDEF: 17)
     e08:	1e000013 	mcrne	0, 0, r0, cr0, cr3, {0}
     e0c:	01018289 	smlabbeq	r1, r9, r2, r8
     e10:	13310111 	teqne	r1, #1073741828	; 0x40000004
     e14:	00001301 	andeq	r1, r0, r1, lsl #6
     e18:	01828a1f 	orreq	r8, r2, pc, lsl sl
     e1c:	910a0200 	mrsls	r0, R10_fiq
     e20:	00000a42 	andeq	r0, r0, r2, asr #20
     e24:	01828920 	orreq	r8, r2, r0, lsr #18
     e28:	31011101 	tstcc	r1, r1, lsl #2
     e2c:	21000013 	tstcs	r0, r3, lsl r0
     e30:	0c3f012e 	ldfeqs	f0, [pc], #-184	; d80 <__Vectors_Size+0x5c0>
     e34:	0b3a0e03 	bleq	e84648 <__RAM_SIZE+0xd84648>
     e38:	0b39053b 	bleq	e4232c <__RAM_SIZE+0xd4232c>
     e3c:	13490c27 	movtne	r0, #39975	; 0x9c27
     e40:	01120111 	tsteq	r2, r1, lsl r1
     e44:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
     e48:	0013010c 	andseq	r0, r3, ip, lsl #2
     e4c:	00342200 	eorseq	r2, r4, r0, lsl #4
     e50:	0b3a0e03 	bleq	e84664 <__RAM_SIZE+0xd84664>
     e54:	0b39053b 	bleq	e42348 <__RAM_SIZE+0xd42348>
     e58:	0a021349 	beq	85b84 <__HEAP_SIZE+0x84b84>
     e5c:	2e230000 	cdpcs	0, 2, cr0, cr3, cr0, {0}
     e60:	030c3f01 	movweq	r3, #52993	; 0xcf01
     e64:	3b0b3a0e 	blcc	2cf6a4 <__RAM_SIZE+0x1cf6a4>
     e68:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
     e6c:	1201110c 	andne	r1, r1, #12, 2
     e70:	97064001 	strls	r4, [r6, -r1]
     e74:	13010c42 	movwne	r0, #7234	; 0x1c42
     e78:	2e240000 	cdpcs	0, 2, cr0, cr4, cr0, {0}
     e7c:	030c3f01 	movweq	r3, #52993	; 0xcf01
     e80:	3b0b3a0e 	blcc	2cf6c0 <__RAM_SIZE+0x1cf6c0>
     e84:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
     e88:	1113490c 	tstne	r3, ip, lsl #18
     e8c:	40011201 	andmi	r1, r1, r1, lsl #4
     e90:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
     e94:	00001301 	andeq	r1, r0, r1, lsl #6
     e98:	03003425 	movweq	r3, #1061	; 0x425
     e9c:	3b0b3a0e 	blcc	2cf6dc <__RAM_SIZE+0x1cf6dc>
     ea0:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     ea4:	000b1c13 	andeq	r1, fp, r3, lsl ip
     ea8:	012e2600 			; <UNDEFINED> instruction: 0x012e2600
     eac:	0b3a0e03 	bleq	e846c0 <__RAM_SIZE+0xd846c0>
     eb0:	0b39053b 	bleq	e423a4 <__RAM_SIZE+0xd423a4>
     eb4:	01110c27 	tsteq	r1, r7, lsr #24
     eb8:	06400112 			; <UNDEFINED> instruction: 0x06400112
     ebc:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
     ec0:	27000013 	smladcs	r0, r3, r0, r0
     ec4:	0e03012e 	adfeqsp	f0, f3, #0.5
     ec8:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     ecc:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     ed0:	01111349 	tsteq	r1, r9, asr #6
     ed4:	0a400112 	beq	1001324 <__RAM_SIZE+0xf01324>
     ed8:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
     edc:	28000013 	stmdacs	r0, {r0, r1, r4}
     ee0:	0655010b 	ldrbeq	r0, [r5], -fp, lsl #2
     ee4:	00001301 	andeq	r1, r0, r1, lsl #6
     ee8:	11010b29 	tstne	r1, r9, lsr #22
     eec:	00011201 	andeq	r1, r1, r1, lsl #4
     ef0:	00052a00 	andeq	r2, r5, r0, lsl #20
     ef4:	0b3a0e03 	bleq	e84708 <__RAM_SIZE+0xd84708>
     ef8:	0b39053b 	bleq	e423ec <__RAM_SIZE+0xd423ec>
     efc:	0a021349 	beq	85c28 <__HEAP_SIZE+0x84c28>
     f00:	2e2b0000 	cdpcs	0, 2, cr0, cr11, cr0, {0}
     f04:	3c0c3f00 	stccc	15, cr3, [ip], {-0}
     f08:	0e40870c 	cdpeq	7, 4, cr8, cr0, cr12, {0}
     f0c:	0b3a0e03 	bleq	e84720 <__RAM_SIZE+0xd84720>
     f10:	0b39053b 	bleq	e42404 <__RAM_SIZE+0xd42404>
     f14:	2e2c0000 	cdpcs	0, 2, cr0, cr12, cr0, {0}
     f18:	3c0c3f00 	stccc	15, cr3, [ip], {-0}
     f1c:	0e40870c 	cdpeq	7, 4, cr8, cr0, cr12, {0}
     f20:	0b3a0e03 	bleq	e84734 <__RAM_SIZE+0xd84734>
     f24:	0b390b3b 	bleq	e43c18 <__RAM_SIZE+0xd43c18>
     f28:	2e2d0000 	cdpcs	0, 2, cr0, cr13, cr0, {0}
     f2c:	3c0c3f00 	stccc	15, cr3, [ip], {-0}
     f30:	0e40870c 	cdpeq	7, 4, cr8, cr0, cr12, {0}
     f34:	0b3a0e03 	bleq	e84748 <__RAM_SIZE+0xd84748>
     f38:	00000b3b 	andeq	r0, r0, fp, lsr fp
     f3c:	01110100 	tsteq	r1, r0, lsl #2
     f40:	0b130e25 	bleq	4c47dc <__RAM_SIZE+0x3c47dc>
     f44:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
     f48:	01110655 	tsteq	r1, r5, asr r6
     f4c:	06100152 			; <UNDEFINED> instruction: 0x06100152
     f50:	16020000 	strne	r0, [r2], -r0
     f54:	3a0e0300 	bcc	381b5c <__RAM_SIZE+0x281b5c>
     f58:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     f5c:	0013490b 	andseq	r4, r3, fp, lsl #18
     f60:	00260300 	eoreq	r0, r6, r0, lsl #6
     f64:	00001349 	andeq	r1, r0, r9, asr #6
     f68:	0b002404 	bleq	9f80 <__HEAP_SIZE+0x8f80>
     f6c:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
     f70:	0500000e 	streq	r0, [r0, #-14]
     f74:	0b0b0024 	bleq	2c100c <__RAM_SIZE+0x1c100c>
     f78:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
     f7c:	0f060000 	svceq	0x00060000
     f80:	000b0b00 	andeq	r0, fp, r0, lsl #22
     f84:	000f0700 	andeq	r0, pc, r0, lsl #14
     f88:	13490b0b 	movtne	r0, #39691	; 0x9b0b
     f8c:	35080000 	strcc	r0, [r8, #-0]
     f90:	00134900 	andseq	r4, r3, r0, lsl #18
     f94:	01150900 	tsteq	r5, r0, lsl #18
     f98:	13010c27 	movwne	r0, #7207	; 0x1c27
     f9c:	050a0000 	streq	r0, [sl, #-0]
     fa0:	00134900 	andseq	r4, r3, r0, lsl #18
     fa4:	01130b00 	tsteq	r3, r0, lsl #22
     fa8:	0b0b0e03 	bleq	2c47bc <__RAM_SIZE+0x1c47bc>
     fac:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     fb0:	13010b39 	movwne	r0, #6969	; 0x1b39
     fb4:	0d0c0000 	stceq	0, cr0, [ip, #-0]
     fb8:	3a0e0300 	bcc	381bc0 <__RAM_SIZE+0x281bc0>
     fbc:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     fc0:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
     fc4:	0d00000a 	stceq	0, cr0, [r0, #-40]	; 0xffffffd8
     fc8:	13490101 	movtne	r0, #37121	; 0x9101
     fcc:	00001301 	andeq	r1, r0, r1, lsl #6
     fd0:	4900210e 	stmdbmi	r0, {r1, r2, r3, r8, sp}
     fd4:	000b2f13 	andeq	r2, fp, r3, lsl pc
     fd8:	00160f00 	andseq	r0, r6, r0, lsl #30
     fdc:	0b3a0e03 	bleq	e847f0 <__RAM_SIZE+0xd847f0>
     fe0:	0b39053b 	bleq	e424d4 <__RAM_SIZE+0xd424d4>
     fe4:	00001349 	andeq	r1, r0, r9, asr #6
     fe8:	03011310 	movweq	r1, #4880	; 0x1310
     fec:	3a0b0b0e 	bcc	2c3c2c <__RAM_SIZE+0x1c3c2c>
     ff0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     ff4:	0013010b 	andseq	r0, r3, fp, lsl #2
     ff8:	000d1100 	andeq	r1, sp, r0, lsl #2
     ffc:	0b3a0e03 	bleq	e84810 <__RAM_SIZE+0xd84810>
    1000:	0b390b3b 	bleq	e43cf4 <__RAM_SIZE+0xd43cf4>
    1004:	0a381349 	beq	e05d30 <__RAM_SIZE+0xd05d30>
    1008:	15120000 	ldrne	r0, [r2, #-0]
    100c:	490c2701 	stmdbmi	ip, {r0, r8, r9, sl, sp}
    1010:	00130113 	andseq	r0, r3, r3, lsl r1
    1014:	01041300 	mrseq	r1, LR_abt
    1018:	0b0b0b3e 	bleq	2c3d18 <__RAM_SIZE+0x1c3d18>
    101c:	0b3a1349 	bleq	e85d48 <__RAM_SIZE+0xd85d48>
    1020:	0b390b3b 	bleq	e43d14 <__RAM_SIZE+0xd43d14>
    1024:	00001301 	andeq	r1, r0, r1, lsl #6
    1028:	03002814 	movweq	r2, #2068	; 0x814
    102c:	000b1c0e 	andeq	r1, fp, lr, lsl #24
    1030:	00341500 	eorseq	r1, r4, r0, lsl #10
    1034:	0b3a0e03 	bleq	e84848 <__RAM_SIZE+0xd84848>
    1038:	0b39053b 	bleq	e4252c <__RAM_SIZE+0xd4252c>
    103c:	0c3f1349 	ldceq	3, cr1, [pc], #-292	; f20 <__Vectors_Size+0x760>
    1040:	00000a02 	andeq	r0, r0, r2, lsl #20
    1044:	03003416 	movweq	r3, #1046	; 0x416
    1048:	3b0b3a0e 	blcc	2cf888 <__RAM_SIZE+0x1cf888>
    104c:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    1050:	000a0213 	andeq	r0, sl, r3, lsl r2
    1054:	012e1700 			; <UNDEFINED> instruction: 0x012e1700
    1058:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    105c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1060:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    1064:	01120111 	tsteq	r2, r1, lsl r1
    1068:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
    106c:	0013010c 	andseq	r0, r3, ip, lsl #2
    1070:	00341800 	eorseq	r1, r4, r0, lsl #16
    1074:	0b3a0e03 	bleq	e84888 <__RAM_SIZE+0xd84888>
    1078:	0b39053b 	bleq	e4256c <__RAM_SIZE+0xd4256c>
    107c:	06021349 	streq	r1, [r2], -r9, asr #6
    1080:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
    1084:	00051900 	andeq	r1, r5, r0, lsl #18
    1088:	0b3a0e03 	bleq	e8489c <__RAM_SIZE+0xd8489c>
    108c:	0b39053b 	bleq	e42580 <__RAM_SIZE+0xd42580>
    1090:	0a021349 	beq	85dbc <__HEAP_SIZE+0x84dbc>
    1094:	2e1a0000 	cdpcs	0, 1, cr0, cr10, cr0, {0}
    1098:	3a0e0301 	bcc	381ca4 <__RAM_SIZE+0x281ca4>
    109c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    10a0:	110c270b 	tstne	ip, fp, lsl #14
    10a4:	40011201 	andmi	r1, r1, r1, lsl #4
    10a8:	0c429706 	mcrreq	7, 0, r9, r2, cr6
    10ac:	00001301 	andeq	r1, r0, r1, lsl #6
    10b0:	0300051b 	movweq	r0, #1307	; 0x51b
    10b4:	3b0b3a0e 	blcc	2cf8f4 <__RAM_SIZE+0x1cf8f4>
    10b8:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    10bc:	b7060213 	smladlt	r6, r3, r2, r0
    10c0:	00000642 	andeq	r0, r0, r2, asr #12
    10c4:	11010b1c 	tstne	r1, ip, lsl fp
    10c8:	01011201 	tsteq	r1, r1, lsl #4
    10cc:	1d000013 	stcne	0, cr0, [r0, #-76]	; 0xffffffb4
    10d0:	00018289 	andeq	r8, r1, r9, lsl #5
    10d4:	13310111 	teqne	r1, #1073741828	; 0x40000004
    10d8:	891e0000 	ldmdbhi	lr, {}	; <UNPREDICTABLE>
    10dc:	11010182 	smlabbne	r1, r2, r1, r0
    10e0:	01133101 	tsteq	r3, r1, lsl #2
    10e4:	1f000013 	svcne	0x00000013
    10e8:	0001828a 	andeq	r8, r1, sl, lsl #5
    10ec:	42910a02 	addsmi	r0, r1, #8192	; 0x2000
    10f0:	2000000a 	andcs	r0, r0, sl
    10f4:	01018289 	smlabbeq	r1, r9, r2, r8
    10f8:	13310111 	teqne	r1, #1073741828	; 0x40000004
    10fc:	2e210000 	cdpcs	0, 2, cr0, cr1, cr0, {0}
    1100:	030c3f01 	movweq	r3, #52993	; 0xcf01
    1104:	3b0b3a0e 	blcc	2cf944 <__RAM_SIZE+0x1cf944>
    1108:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    110c:	1113490c 	tstne	r3, ip, lsl #18
    1110:	40011201 	andmi	r1, r1, r1, lsl #4
    1114:	0c429706 	mcrreq	7, 0, r9, r2, cr6
    1118:	00001301 	andeq	r1, r0, r1, lsl #6
    111c:	3f012e22 	svccc	0x00012e22
    1120:	3a0e030c 	bcc	381d58 <__RAM_SIZE+0x281d58>
    1124:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1128:	110c270b 	tstne	ip, fp, lsl #14
    112c:	40011201 	andmi	r1, r1, r1, lsl #4
    1130:	0c429706 	mcrreq	7, 0, r9, r2, cr6
    1134:	00001301 	andeq	r1, r0, r1, lsl #6
    1138:	55010b23 	strpl	r0, [r1, #-2851]	; 0xfffff4dd
    113c:	00130106 	andseq	r0, r3, r6, lsl #2
    1140:	012e2400 			; <UNDEFINED> instruction: 0x012e2400
    1144:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    1148:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    114c:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    1150:	01111349 	tsteq	r1, r9, asr #6
    1154:	0a400112 	beq	10015a4 <__RAM_SIZE+0xf015a4>
    1158:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
    115c:	25000013 	strcs	r0, [r0, #-19]	; 0xffffffed
    1160:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    1164:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1168:	13490b39 	movtne	r0, #39737	; 0x9b39
    116c:	00000b1c 	andeq	r0, r0, ip, lsl fp
    1170:	03002e26 	movweq	r2, #3622	; 0xe26
    1174:	3b0b3a0e 	blcc	2cf9b4 <__RAM_SIZE+0x1cf9b4>
    1178:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    117c:	1201110c 	andne	r1, r1, #12, 2
    1180:	970a4001 	strls	r4, [sl, -r1]
    1184:	00000c42 	andeq	r0, r0, r2, asr #24
    1188:	03012e27 	movweq	r2, #7719	; 0x1e27
    118c:	3b0b3a0e 	blcc	2cf9cc <__RAM_SIZE+0x1cf9cc>
    1190:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    1194:	1113490c 	tstne	r3, ip, lsl #18
    1198:	40011201 	andmi	r1, r1, r1, lsl #4
    119c:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
    11a0:	00001301 	andeq	r1, r0, r1, lsl #6
    11a4:	55010b28 	strpl	r0, [r1, #-2856]	; 0xfffff4d8
    11a8:	29000006 	stmdbcs	r0, {r1, r2}
    11ac:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 10fc <__HEAP_SIZE+0xfc>
    11b0:	0b3a0e03 	bleq	e849c4 <__RAM_SIZE+0xd849c4>
    11b4:	0b39053b 	bleq	e426a8 <__RAM_SIZE+0xd426a8>
    11b8:	01110c27 	tsteq	r1, r7, lsr #24
    11bc:	0a400112 	beq	100160c <__RAM_SIZE+0xf0160c>
    11c0:	000c4297 	muleq	ip, r7, r2
    11c4:	82892a00 	addhi	r2, r9, #0, 20
    11c8:	01110101 	tsteq	r1, r1, lsl #2
    11cc:	0b2b0000 	bleq	ac11d4 <__RAM_SIZE+0x9c11d4>
    11d0:	12011101 	andne	r1, r1, #1073741824	; 0x40000000
    11d4:	2c000001 	stccs	0, cr0, [r0], {1}
    11d8:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 1128 <__HEAP_SIZE+0x128>
    11dc:	0b3a0e03 	bleq	e849f0 <__RAM_SIZE+0xd849f0>
    11e0:	0b39053b 	bleq	e426d4 <__RAM_SIZE+0xd426d4>
    11e4:	13490c27 	movtne	r0, #39975	; 0x9c27
    11e8:	01120111 	tsteq	r2, r1, lsl r1
    11ec:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
    11f0:	2d00000c 	stccs	0, cr0, [r0, #-48]	; 0xffffffd0
    11f4:	0e03012e 	adfeqsp	f0, f3, #0.5
    11f8:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    11fc:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    1200:	01111349 	tsteq	r1, r9, asr #6
    1204:	06400112 			; <UNDEFINED> instruction: 0x06400112
    1208:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
    120c:	2e000013 	mcrcs	0, 0, r0, cr0, cr3, {0}
    1210:	08030034 	stmdaeq	r3, {r2, r4, r5}
    1214:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1218:	13490b39 	movtne	r0, #39737	; 0x9b39
    121c:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    1220:	2f000006 	svccs	0x00000006
    1224:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 1174 <__HEAP_SIZE+0x174>
    1228:	40870c3c 	addmi	r0, r7, ip, lsr ip
    122c:	3a0e030e 	bcc	381e6c <__RAM_SIZE+0x281e6c>
    1230:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1234:	3000000b 	andcc	r0, r0, fp
    1238:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 1188 <__HEAP_SIZE+0x188>
    123c:	40870c3c 	addmi	r0, r7, ip, lsr ip
    1240:	3a0e030e 	bcc	381e80 <__RAM_SIZE+0x281e80>
    1244:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1248:	3100000b 	tstcc	r0, fp
    124c:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 119c <__HEAP_SIZE+0x19c>
    1250:	40870c3c 	addmi	r0, r7, ip, lsr ip
    1254:	3a0e030e 	bcc	381e94 <__RAM_SIZE+0x281e94>
    1258:	000b3b0b 	andeq	r3, fp, fp, lsl #22
    125c:	11010000 	mrsne	r0, (UNDEF: 1)
    1260:	130e2501 	movwne	r2, #58625	; 0xe501
    1264:	1b0e030b 	blne	381e98 <__RAM_SIZE+0x281e98>
    1268:	1106550e 	tstne	r6, lr, lsl #10
    126c:	10015201 	andne	r5, r1, r1, lsl #4
    1270:	02000006 	andeq	r0, r0, #6
    1274:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
    1278:	0b3b0b3a 	bleq	ec3f68 <__RAM_SIZE+0xdc3f68>
    127c:	13490b39 	movtne	r0, #39737	; 0x9b39
    1280:	24030000 	strcs	r0, [r3], #-0
    1284:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    1288:	000e030b 	andeq	r0, lr, fp, lsl #6
    128c:	00240400 	eoreq	r0, r4, r0, lsl #8
    1290:	0b3e0b0b 	bleq	f83ec4 <__RAM_SIZE+0xe83ec4>
    1294:	00000803 	andeq	r0, r0, r3, lsl #16
    1298:	0b000f05 	bleq	4eb4 <__HEAP_SIZE+0x3eb4>
    129c:	0600000b 	streq	r0, [r0], -fp
    12a0:	13490026 	movtne	r0, #36902	; 0x9026
    12a4:	0f070000 	svceq	0x00070000
    12a8:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
    12ac:	08000013 	stmdaeq	r0, {r0, r1, r4}
    12b0:	0c270115 	stfeqs	f0, [r7], #-84	; 0xffffffac
    12b4:	00001301 	andeq	r1, r0, r1, lsl #6
    12b8:	49000509 	stmdbmi	r0, {r0, r3, r8, sl}
    12bc:	0a000013 	beq	1310 <__HEAP_SIZE+0x310>
    12c0:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
    12c4:	0b3a0b0b 	bleq	e83ef8 <__RAM_SIZE+0xd83ef8>
    12c8:	0b39053b 	bleq	e427bc <__RAM_SIZE+0xd427bc>
    12cc:	00001301 	andeq	r1, r0, r1, lsl #6
    12d0:	03000d0b 	movweq	r0, #3339	; 0xd0b
    12d4:	3b0b3a0e 	blcc	2cfb14 <__RAM_SIZE+0x1cfb14>
    12d8:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    12dc:	000a3813 	andeq	r3, sl, r3, lsl r8
    12e0:	01010c00 	tsteq	r1, r0, lsl #24
    12e4:	13011349 	movwne	r1, #4937	; 0x1349
    12e8:	210d0000 	mrscs	r0, (UNDEF: 13)
    12ec:	2f134900 	svccs	0x00134900
    12f0:	0e00000b 	cdpeq	0, 0, cr0, cr0, cr11, {0}
    12f4:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
    12f8:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    12fc:	13490b39 	movtne	r0, #39737	; 0x9b39
    1300:	170f0000 	strne	r0, [pc, -r0]
    1304:	3a0b0b01 	bcc	2c3f10 <__RAM_SIZE+0x1c3f10>
    1308:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    130c:	0013010b 	andseq	r0, r3, fp, lsl #2
    1310:	000d1000 	andeq	r1, sp, r0
    1314:	0b3a0e03 	bleq	e84b28 <__RAM_SIZE+0xd84b28>
    1318:	0b39053b 	bleq	e4280c <__RAM_SIZE+0xd4280c>
    131c:	00001349 	andeq	r1, r0, r9, asr #6
    1320:	03000d11 	movweq	r0, #3345	; 0xd11
    1324:	3b0b3a08 	blcc	2cfb4c <__RAM_SIZE+0x1cfb4c>
    1328:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    132c:	000a3813 	andeq	r3, sl, r3, lsl r8
    1330:	01131200 	tsteq	r3, r0, lsl #4
    1334:	0b0b0e03 	bleq	2c4b48 <__RAM_SIZE+0x1c4b48>
    1338:	0b3b0b3a 	bleq	ec4028 <__RAM_SIZE+0xdc4028>
    133c:	13010b39 	movwne	r0, #6969	; 0x1b39
    1340:	0d130000 	ldceq	0, cr0, [r3, #-0]
    1344:	3a0e0300 	bcc	381f4c <__RAM_SIZE+0x281f4c>
    1348:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    134c:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    1350:	1400000a 	strne	r0, [r0], #-10
    1354:	0e030013 	mcreq	0, 0, r0, cr3, cr3, {0}
    1358:	00000c3c 	andeq	r0, r0, ip, lsr ip
    135c:	0b011715 	bleq	46fb8 <__HEAP_SIZE+0x45fb8>
    1360:	3b0b3a0b 	blcc	2cfb94 <__RAM_SIZE+0x1cfb94>
    1364:	010b390b 	tsteq	fp, fp, lsl #18
    1368:	16000013 			; <UNDEFINED> instruction: 0x16000013
    136c:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
    1370:	0b3b0b3a 	bleq	ec4060 <__RAM_SIZE+0xdc4060>
    1374:	13490b39 	movtne	r0, #39737	; 0x9b39
    1378:	0d170000 	ldceq	0, cr0, [r7, #-0]
    137c:	3a080300 	bcc	201f84 <__RAM_SIZE+0x101f84>
    1380:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1384:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    1388:	1800000a 	stmdane	r0, {r1, r3}
    138c:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    1390:	0b3b0b3a 	bleq	ec4080 <__RAM_SIZE+0xdc4080>
    1394:	13490b39 	movtne	r0, #39737	; 0x9b39
    1398:	00000a02 	andeq	r0, r0, r2, lsl #20
    139c:	3f002e19 	svccc	0x00002e19
    13a0:	3a0e030c 	bcc	381fd8 <__RAM_SIZE+0x281fd8>
    13a4:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    13a8:	110c270b 	tstne	ip, fp, lsl #14
    13ac:	40011201 	andmi	r1, r1, r1, lsl #4
    13b0:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
    13b4:	2e1a0000 	cdpcs	0, 1, cr0, cr10, cr0, {0}
    13b8:	030c3f01 	movweq	r3, #52993	; 0xcf01
    13bc:	3b0b3a0e 	blcc	2cfbfc <__RAM_SIZE+0x1cfbfc>
    13c0:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    13c4:	1113490c 	tstne	r3, ip, lsl #18
    13c8:	40011201 	andmi	r1, r1, r1, lsl #4
    13cc:	0c429706 	mcrreq	7, 0, r9, r2, cr6
    13d0:	00001301 	andeq	r1, r0, r1, lsl #6
    13d4:	0300051b 	movweq	r0, #1307	; 0x51b
    13d8:	3b0b3a0e 	blcc	2cfc18 <__RAM_SIZE+0x1cfc18>
    13dc:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    13e0:	b7060213 	smladlt	r6, r3, r2, r0
    13e4:	00000642 	andeq	r0, r0, r2, asr #12
    13e8:	0300341c 	movweq	r3, #1052	; 0x41c
    13ec:	3b0b3a0e 	blcc	2cfc2c <__RAM_SIZE+0x1cfc2c>
    13f0:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    13f4:	000a0213 	andeq	r0, sl, r3, lsl r2
    13f8:	00341d00 	eorseq	r1, r4, r0, lsl #26
    13fc:	0b3a0e03 	bleq	e84c10 <__RAM_SIZE+0xd84c10>
    1400:	0b39053b 	bleq	e428f4 <__RAM_SIZE+0xd428f4>
    1404:	06021349 	streq	r1, [r2], -r9, asr #6
    1408:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
    140c:	82891e00 	addhi	r1, r9, #0, 28
    1410:	01110101 	tsteq	r1, r1, lsl #2
    1414:	00001331 	andeq	r1, r0, r1, lsr r3
    1418:	01828a1f 	orreq	r8, r2, pc, lsl sl
    141c:	910a0200 	mrsls	r0, R10_fiq
    1420:	00000a42 	andeq	r0, r0, r2, asr #20
    1424:	3f012e20 	svccc	0x00012e20
    1428:	3a0e030c 	bcc	382060 <__RAM_SIZE+0x282060>
    142c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1430:	110c270b 	tstne	ip, fp, lsl #14
    1434:	40011201 	andmi	r1, r1, r1, lsl #4
    1438:	0c429706 	mcrreq	7, 0, r9, r2, cr6
    143c:	00001301 	andeq	r1, r0, r1, lsl #6
    1440:	01828921 	orreq	r8, r2, r1, lsr #18
    1444:	31011100 	mrscc	r1, (UNDEF: 17)
    1448:	22000013 	andcs	r0, r0, #19
    144c:	0e03012e 	adfeqsp	f0, f3, #0.5
    1450:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1454:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    1458:	01120111 	tsteq	r2, r1, lsl r1
    145c:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
    1460:	0013010c 	andseq	r0, r3, ip, lsl #2
    1464:	010b2300 	mrseq	r2, (UNDEF: 59)
    1468:	01120111 	tsteq	r2, r1, lsl r1
    146c:	00001301 	andeq	r1, r0, r1, lsl #6
    1470:	01828924 	orreq	r8, r2, r4, lsr #18
    1474:	31011101 	tstcc	r1, r1, lsl #2
    1478:	00130113 	andseq	r0, r3, r3, lsl r1
    147c:	012e2500 			; <UNDEFINED> instruction: 0x012e2500
    1480:	0b3a0e03 	bleq	e84c94 <__RAM_SIZE+0xd84c94>
    1484:	0b39053b 	bleq	e42978 <__RAM_SIZE+0xd42978>
    1488:	01110c27 	tsteq	r1, r7, lsr #24
    148c:	06400112 			; <UNDEFINED> instruction: 0x06400112
    1490:	010c4296 			; <UNDEFINED> instruction: 0x010c4296
    1494:	26000013 			; <UNDEFINED> instruction: 0x26000013
    1498:	01018289 	smlabbeq	r1, r9, r2, r8
    149c:	13010111 	movwne	r0, #4369	; 0x1111
    14a0:	2e270000 	cdpcs	0, 2, cr0, cr7, cr0, {0}
    14a4:	3a0e0301 	bcc	3820b0 <__RAM_SIZE+0x2820b0>
    14a8:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    14ac:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
    14b0:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    14b4:	97064001 	strls	r4, [r6, -r1]
    14b8:	13010c42 	movwne	r0, #7234	; 0x1c42
    14bc:	2e280000 	cdpcs	0, 2, cr0, cr8, cr0, {0}
    14c0:	3a0e0301 	bcc	3820cc <__RAM_SIZE+0x2820cc>
    14c4:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    14c8:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
    14cc:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    14d0:	970a4001 	strls	r4, [sl, -r1]
    14d4:	13010c42 	movwne	r0, #7234	; 0x1c42
    14d8:	2e290000 	cdpcs	0, 2, cr0, cr9, cr0, {0}
    14dc:	030c3f01 	movweq	r3, #52993	; 0xcf01
    14e0:	3b0b3a0e 	blcc	2cfd20 <__RAM_SIZE+0x1cfd20>
    14e4:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    14e8:	1113490c 	tstne	r3, ip, lsl #18
    14ec:	40011201 	andmi	r1, r1, r1, lsl #4
    14f0:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
    14f4:	00001301 	andeq	r1, r0, r1, lsl #6
    14f8:	0300052a 	movweq	r0, #1322	; 0x52a
    14fc:	3b0b3a0e 	blcc	2cfd3c <__RAM_SIZE+0x1cfd3c>
    1500:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    1504:	000a0213 	andeq	r0, sl, r3, lsl r2
    1508:	002e2b00 	eoreq	r2, lr, r0, lsl #22
    150c:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    1510:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1514:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    1518:	01111349 	tsteq	r1, r9, asr #6
    151c:	0a400112 	beq	100196c <__RAM_SIZE+0xf0196c>
    1520:	000c4297 	muleq	ip, r7, r2
    1524:	012e2c00 			; <UNDEFINED> instruction: 0x012e2c00
    1528:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    152c:	0b3b0b3a 	bleq	ec421c <__RAM_SIZE+0xdc421c>
    1530:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    1534:	01111349 	tsteq	r1, r9, asr #6
    1538:	06400112 			; <UNDEFINED> instruction: 0x06400112
    153c:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
    1540:	2d000013 	stccs	0, cr0, [r0, #-76]	; 0xffffffb4
    1544:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    1548:	0b3b0b3a 	bleq	ec4238 <__RAM_SIZE+0xdc4238>
    154c:	13490b39 	movtne	r0, #39737	; 0x9b39
    1550:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    1554:	2e000006 	cdpcs	0, 0, cr0, cr0, cr6, {0}
    1558:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 14a8 <__HEAP_SIZE+0x4a8>
    155c:	40870c3c 	addmi	r0, r7, ip, lsr ip
    1560:	3a0e030e 	bcc	3821a0 <__RAM_SIZE+0x2821a0>
    1564:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1568:	2f00000b 	svccs	0x0000000b
    156c:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 14bc <__HEAP_SIZE+0x4bc>
    1570:	40870c3c 	addmi	r0, r7, ip, lsr ip
    1574:	3a0e030e 	bcc	3821b4 <__RAM_SIZE+0x2821b4>
    1578:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    157c:	0000000b 	andeq	r0, r0, fp
    1580:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
    1584:	030b130e 	movweq	r1, #45838	; 0xb30e
    1588:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
    158c:	52011106 	andpl	r1, r1, #-2147483647	; 0x80000001
    1590:	00061001 	andeq	r1, r6, r1
    1594:	00160200 	andseq	r0, r6, r0, lsl #4
    1598:	0b3a0e03 	bleq	e84dac <__RAM_SIZE+0xd84dac>
    159c:	0b390b3b 	bleq	e44290 <__RAM_SIZE+0xd44290>
    15a0:	00001349 	andeq	r1, r0, r9, asr #6
    15a4:	49002603 	stmdbmi	r0, {r0, r1, r9, sl, sp}
    15a8:	04000013 	streq	r0, [r0], #-19	; 0xffffffed
    15ac:	0b0b0024 	bleq	2c1644 <__RAM_SIZE+0x1c1644>
    15b0:	0e030b3e 	vmoveq.16	d3[0], r0
    15b4:	24050000 	strcs	r0, [r5], #-0
    15b8:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    15bc:	0008030b 	andeq	r0, r8, fp, lsl #6
    15c0:	000f0600 	andeq	r0, pc, r0, lsl #12
    15c4:	00000b0b 	andeq	r0, r0, fp, lsl #22
    15c8:	0b000f07 	bleq	51ec <__HEAP_SIZE+0x41ec>
    15cc:	0013490b 	andseq	r4, r3, fp, lsl #18
    15d0:	01130800 	tsteq	r3, r0, lsl #16
    15d4:	0b0b0e03 	bleq	2c4de8 <__RAM_SIZE+0x1c4de8>
    15d8:	0b3b0b3a 	bleq	ec42c8 <__RAM_SIZE+0xdc42c8>
    15dc:	13010b39 	movwne	r0, #6969	; 0x1b39
    15e0:	0d090000 	stceq	0, cr0, [r9, #-0]
    15e4:	3a0e0300 	bcc	3821ec <__RAM_SIZE+0x2821ec>
    15e8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    15ec:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    15f0:	0a00000a 	beq	1620 <__HEAP_SIZE+0x620>
    15f4:	13490101 	movtne	r0, #37121	; 0x9101
    15f8:	00001301 	andeq	r1, r0, r1, lsl #6
    15fc:	4900210b 	stmdbmi	r0, {r0, r1, r3, r8, sp}
    1600:	00052f13 	andeq	r2, r5, r3, lsl pc
    1604:	00340c00 	eorseq	r0, r4, r0, lsl #24
    1608:	0b3a0e03 	bleq	e84e1c <__RAM_SIZE+0xd84e1c>
    160c:	0b390b3b 	bleq	e44300 <__RAM_SIZE+0xd44300>
    1610:	0c3f1349 	ldceq	3, cr1, [pc], #-292	; 14f4 <__HEAP_SIZE+0x4f4>
    1614:	00000c3c 	andeq	r0, r0, ip, lsr ip
    1618:	0300340d 	movweq	r3, #1037	; 0x40d
    161c:	3b0b3a0e 	blcc	2cfe5c <__RAM_SIZE+0x1cfe5c>
    1620:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1624:	000b1c13 	andeq	r1, fp, r3, lsl ip
    1628:	00340e00 	eorseq	r0, r4, r0, lsl #28
    162c:	0b3a0e03 	bleq	e84e40 <__RAM_SIZE+0xd84e40>
    1630:	0b390b3b 	bleq	e44324 <__RAM_SIZE+0xd44324>
    1634:	0a021349 	beq	86360 <__HEAP_SIZE+0x85360>
    1638:	2e0f0000 	cdpcs	0, 0, cr0, cr15, cr0, {0}
    163c:	030c3f00 	movweq	r3, #52992	; 0xcf00
    1640:	3b0b3a0e 	blcc	2cfe80 <__RAM_SIZE+0x1cfe80>
    1644:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    1648:	1201110c 	andne	r1, r1, #12, 2
    164c:	970a4001 	strls	r4, [sl, -r1]
    1650:	00000c42 	andeq	r0, r0, r2, asr #24
    1654:	3f012e10 	svccc	0x00012e10
    1658:	3a0e030c 	bcc	382290 <__RAM_SIZE+0x282290>
    165c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1660:	110c270b 	tstne	ip, fp, lsl #14
    1664:	40011201 	andmi	r1, r1, r1, lsl #4
    1668:	0c429706 	mcrreq	7, 0, r9, r2, cr6
    166c:	00001301 	andeq	r1, r0, r1, lsl #6
    1670:	03000511 	movweq	r0, #1297	; 0x511
    1674:	3b0b3a0e 	blcc	2cfeb4 <__RAM_SIZE+0x1cfeb4>
    1678:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    167c:	b7060213 	smladlt	r6, r3, r2, r0
    1680:	00000642 	andeq	r0, r0, r2, asr #12
    1684:	03003412 	movweq	r3, #1042	; 0x412
    1688:	3b0b3a0e 	blcc	2cfec8 <__RAM_SIZE+0x1cfec8>
    168c:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    1690:	b7060213 	smladlt	r6, r3, r2, r0
    1694:	00000642 	andeq	r0, r0, r2, asr #12
    1698:	01828913 	orreq	r8, r2, r3, lsl r9
    169c:	31011100 	mrscc	r1, (UNDEF: 17)
    16a0:	14000013 	strne	r0, [r0], #-19	; 0xffffffed
    16a4:	0e03012e 	adfeqsp	f0, f3, #0.5
    16a8:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    16ac:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    16b0:	01120111 	tsteq	r2, r1, lsl r1
    16b4:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
    16b8:	0013010c 	andseq	r0, r3, ip, lsl #2
    16bc:	00341500 	eorseq	r1, r4, r0, lsl #10
    16c0:	0b3a0803 	bleq	e836d4 <__RAM_SIZE+0xd836d4>
    16c4:	0b39053b 	bleq	e42bb8 <__RAM_SIZE+0xd42bb8>
    16c8:	06021349 	streq	r1, [r2], -r9, asr #6
    16cc:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
    16d0:	012e1600 			; <UNDEFINED> instruction: 0x012e1600
    16d4:	0b3a0e03 	bleq	e84ee8 <__RAM_SIZE+0xd84ee8>
    16d8:	0b39053b 	bleq	e42bcc <__RAM_SIZE+0xd42bcc>
    16dc:	01110c27 	tsteq	r1, r7, lsr #24
    16e0:	0a400112 	beq	1001b30 <__RAM_SIZE+0xf01b30>
    16e4:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
    16e8:	17000013 	smladne	r0, r3, r0, r0
    16ec:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 163c <__HEAP_SIZE+0x63c>
    16f0:	0b3a0e03 	bleq	e84f04 <__RAM_SIZE+0xd84f04>
    16f4:	0b39053b 	bleq	e42be8 <__RAM_SIZE+0xd42be8>
    16f8:	13490c27 	movtne	r0, #39975	; 0x9c27
    16fc:	01120111 	tsteq	r2, r1, lsl r1
    1700:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
    1704:	0013010c 	andseq	r0, r3, ip, lsl #2
    1708:	82891800 	addhi	r1, r9, #0, 16
    170c:	01110101 	tsteq	r1, r1, lsl #2
    1710:	13011331 	movwne	r1, #4913	; 0x1331
    1714:	8a190000 	bhi	64171c <__RAM_SIZE+0x54171c>
    1718:	02000182 	andeq	r0, r0, #-2147483616	; 0x80000020
    171c:	0a42910a 	beq	10a5b4c <__RAM_SIZE+0xfa5b4c>
    1720:	891a0000 	ldmdbhi	sl, {}	; <UNPREDICTABLE>
    1724:	11010182 	smlabbne	r1, r2, r1, r0
    1728:	00133101 	andseq	r3, r3, r1, lsl #2
    172c:	002e1b00 	eoreq	r1, lr, r0, lsl #22
    1730:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    1734:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1738:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    173c:	01111349 	tsteq	r1, r9, asr #6
    1740:	0a400112 	beq	1001b90 <__RAM_SIZE+0xf01b90>
    1744:	000c4297 	muleq	ip, r7, r2
    1748:	00051c00 	andeq	r1, r5, r0, lsl #24
    174c:	0b3a0803 	bleq	e83760 <__RAM_SIZE+0xd83760>
    1750:	0b39053b 	bleq	e42c44 <__RAM_SIZE+0xd42c44>
    1754:	06021349 	streq	r1, [r2], -r9, asr #6
    1758:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
    175c:	012e1d00 			; <UNDEFINED> instruction: 0x012e1d00
    1760:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    1764:	0b3b0b3a 	bleq	ec4454 <__RAM_SIZE+0xdc4454>
    1768:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    176c:	01111349 	tsteq	r1, r9, asr #6
    1770:	06400112 			; <UNDEFINED> instruction: 0x06400112
    1774:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
    1778:	1e000013 	mcrne	0, 0, r0, cr0, cr3, {0}
    177c:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
    1780:	0b3b0b3a 	bleq	ec4470 <__RAM_SIZE+0xdc4470>
    1784:	13490b39 	movtne	r0, #39737	; 0x9b39
    1788:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    178c:	1f000006 	svcne	0x00000006
    1790:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    1794:	0b3b0b3a 	bleq	ec4484 <__RAM_SIZE+0xdc4484>
    1798:	13490b39 	movtne	r0, #39737	; 0x9b39
    179c:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    17a0:	20000006 	andcs	r0, r0, r6
    17a4:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 16f4 <__HEAP_SIZE+0x6f4>
    17a8:	40870c3c 	addmi	r0, r7, ip, lsr ip
    17ac:	3a0e030e 	bcc	3823ec <__RAM_SIZE+0x2823ec>
    17b0:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    17b4:	2100000b 	tstcs	r0, fp
    17b8:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 1708 <__HEAP_SIZE+0x708>
    17bc:	40870c3c 	addmi	r0, r7, ip, lsr ip
    17c0:	3a0e030e 	bcc	382400 <__RAM_SIZE+0x282400>
    17c4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    17c8:	2200000b 	andcs	r0, r0, #11
    17cc:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 171c <__HEAP_SIZE+0x71c>
    17d0:	40870c3c 	addmi	r0, r7, ip, lsr ip
    17d4:	3a0e030e 	bcc	382414 <__RAM_SIZE+0x282414>
    17d8:	000b3b0b 	andeq	r3, fp, fp, lsl #22
    17dc:	11010000 	mrsne	r0, (UNDEF: 1)
    17e0:	130e2501 	movwne	r2, #58625	; 0xe501
    17e4:	1b0e030b 	blne	382418 <__RAM_SIZE+0x282418>
    17e8:	1106550e 	tstne	r6, lr, lsl #10
    17ec:	10015201 	andne	r5, r1, r1, lsl #4
    17f0:	02000006 	andeq	r0, r0, #6
    17f4:	0b0b0024 	bleq	2c188c <__RAM_SIZE+0x1c188c>
    17f8:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
    17fc:	24030000 	strcs	r0, [r3], #-0
    1800:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    1804:	000e030b 	andeq	r0, lr, fp, lsl #6
    1808:	00160400 	andseq	r0, r6, r0, lsl #8
    180c:	0b3a0e03 	bleq	e85020 <__RAM_SIZE+0xd85020>
    1810:	0b390b3b 	bleq	e44504 <__RAM_SIZE+0xd44504>
    1814:	00001349 	andeq	r1, r0, r9, asr #6
    1818:	49003505 	stmdbmi	r0, {r0, r2, r8, sl, ip, sp}
    181c:	06000013 			; <UNDEFINED> instruction: 0x06000013
    1820:	0b0b000f 	bleq	2c1864 <__RAM_SIZE+0x1c1864>
    1824:	00001349 	andeq	r1, r0, r9, asr #6
    1828:	27011507 	strcs	r1, [r1, -r7, lsl #10]
    182c:	0013010c 	andseq	r0, r3, ip, lsl #2
    1830:	00050800 	andeq	r0, r5, r0, lsl #16
    1834:	00001349 	andeq	r1, r0, r9, asr #6
    1838:	0b000f09 	bleq	5464 <__HEAP_SIZE+0x4464>
    183c:	0a00000b 	beq	1870 <__HEAP_SIZE+0x870>
    1840:	0b3e0104 	bleq	f81c58 <__RAM_SIZE+0xe81c58>
    1844:	13490b0b 	movtne	r0, #39691	; 0x9b0b
    1848:	0b3b0b3a 	bleq	ec4538 <__RAM_SIZE+0xdc4538>
    184c:	13010b39 	movwne	r0, #6969	; 0x1b39
    1850:	280b0000 	stmdacs	fp, {}	; <UNPREDICTABLE>
    1854:	1c0e0300 	stcne	3, cr0, [lr], {-0}
    1858:	0c00000b 	stceq	0, cr0, [r0], {11}
    185c:	13490026 	movtne	r0, #36902	; 0x9026
    1860:	150d0000 	strne	r0, [sp, #-0]
    1864:	000c2700 	andeq	r2, ip, r0, lsl #14
    1868:	00340e00 	eorseq	r0, r4, r0, lsl #28
    186c:	0b3a0e03 	bleq	e85080 <__RAM_SIZE+0xd85080>
    1870:	0b39053b 	bleq	e42d64 <__RAM_SIZE+0xd42d64>
    1874:	0a021349 	beq	865a0 <__HEAP_SIZE+0x855a0>
    1878:	2e0f0000 	cdpcs	0, 0, cr0, cr15, cr0, {0}
    187c:	030c3f01 	movweq	r3, #52993	; 0xcf01
    1880:	3b0b3a0e 	blcc	2d00c0 <__RAM_SIZE+0x1d00c0>
    1884:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    1888:	1113490c 	tstne	r3, ip, lsl #18
    188c:	40011201 	andmi	r1, r1, r1, lsl #4
    1890:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
    1894:	00001301 	andeq	r1, r0, r1, lsl #6
    1898:	03003410 	movweq	r3, #1040	; 0x410
    189c:	3b0b3a0e 	blcc	2d00dc <__RAM_SIZE+0x1d00dc>
    18a0:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    18a4:	b7060213 	smladlt	r6, r3, r2, r0
    18a8:	00000642 	andeq	r0, r0, r2, asr #12
    18ac:	03003411 	movweq	r3, #1041	; 0x411
    18b0:	3b0b3a0e 	blcc	2d00f0 <__RAM_SIZE+0x1d00f0>
    18b4:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    18b8:	000b1c13 	andeq	r1, fp, r3, lsl ip
    18bc:	002e1200 	eoreq	r1, lr, r0, lsl #4
    18c0:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    18c4:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    18c8:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    18cc:	01120111 	tsteq	r2, r1, lsl r1
    18d0:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
    18d4:	1300000c 	movwne	r0, #12
    18d8:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 1828 <__HEAP_SIZE+0x828>
    18dc:	0b3a0e03 	bleq	e850f0 <__RAM_SIZE+0xd850f0>
    18e0:	0b39053b 	bleq	e42dd4 <__RAM_SIZE+0xd42dd4>
    18e4:	13490c27 	movtne	r0, #39975	; 0x9c27
    18e8:	01120111 	tsteq	r2, r1, lsl r1
    18ec:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
    18f0:	0013010c 	andseq	r0, r3, ip, lsl #2
    18f4:	010b1400 	tsteq	fp, r0, lsl #8
    18f8:	00001301 	andeq	r1, r0, r1, lsl #6
    18fc:	03003415 	movweq	r3, #1045	; 0x415
    1900:	3b0b3a0e 	blcc	2d0140 <__RAM_SIZE+0x1d0140>
    1904:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    1908:	16000013 			; <UNDEFINED> instruction: 0x16000013
    190c:	00018289 	andeq	r8, r1, r9, lsl #5
    1910:	13310111 	teqne	r1, #1073741828	; 0x40000004
    1914:	05170000 	ldreq	r0, [r7, #-0]
    1918:	3a0e0300 	bcc	382520 <__RAM_SIZE+0x282520>
    191c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1920:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    1924:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
    1928:	05180000 	ldreq	r0, [r8, #-0]
    192c:	3a0e0300 	bcc	382534 <__RAM_SIZE+0x282534>
    1930:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1934:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    1938:	1900000a 	stmdbne	r0, {r1, r3}
    193c:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 188c <__HEAP_SIZE+0x88c>
    1940:	0b3a0e03 	bleq	e85154 <__RAM_SIZE+0xd85154>
    1944:	0b39053b 	bleq	e42e38 <__RAM_SIZE+0xd42e38>
    1948:	01110c27 	tsteq	r1, r7, lsr #24
    194c:	06400112 			; <UNDEFINED> instruction: 0x06400112
    1950:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
    1954:	1a000013 	bne	19a8 <__HEAP_SIZE+0x9a8>
    1958:	01018289 	smlabbeq	r1, r9, r2, r8
    195c:	13310111 	teqne	r1, #1073741828	; 0x40000004
    1960:	8a1b0000 	bhi	6c1968 <__RAM_SIZE+0x5c1968>
    1964:	02000182 	andeq	r0, r0, #-2147483616	; 0x80000020
    1968:	0a42910a 	beq	10a5d98 <__RAM_SIZE+0xfa5d98>
    196c:	2e1c0000 	cdpcs	0, 1, cr0, cr12, cr0, {0}
    1970:	3a0e0301 	bcc	38257c <__RAM_SIZE+0x28257c>
    1974:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1978:	110c270b 	tstne	ip, fp, lsl #14
    197c:	40011201 	andmi	r1, r1, r1, lsl #4
    1980:	0c429706 	mcrreq	7, 0, r9, r2, cr6
    1984:	00001301 	andeq	r1, r0, r1, lsl #6
    1988:	11010b1d 	tstne	r1, sp, lsl fp
    198c:	01011201 	tsteq	r1, r1, lsl #4
    1990:	1e000013 	mcrne	0, 0, r0, cr0, cr3, {0}
    1994:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 18e4 <__HEAP_SIZE+0x8e4>
    1998:	40870c3c 	addmi	r0, r7, ip, lsr ip
    199c:	3a0e030e 	bcc	3825dc <__RAM_SIZE+0x2825dc>
    19a0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    19a4:	1f00000b 	svcne	0x0000000b
    19a8:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 18f8 <__HEAP_SIZE+0x8f8>
    19ac:	40870c3c 	addmi	r0, r7, ip, lsr ip
    19b0:	3a0e030e 	bcc	3825f0 <__RAM_SIZE+0x2825f0>
    19b4:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    19b8:	0000000b 	andeq	r0, r0, fp
    19bc:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
    19c0:	030b130e 	movweq	r1, #45838	; 0xb30e
    19c4:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
    19c8:	52011106 	andpl	r1, r1, #-2147483647	; 0x80000001
    19cc:	00061001 	andeq	r1, r6, r1
    19d0:	00240200 	eoreq	r0, r4, r0, lsl #4
    19d4:	0b3e0b0b 	bleq	f84608 <__RAM_SIZE+0xe84608>
    19d8:	00000e03 	andeq	r0, r0, r3, lsl #28
    19dc:	03001603 	movweq	r1, #1539	; 0x603
    19e0:	3b0b3a0e 	blcc	2d0220 <__RAM_SIZE+0x1d0220>
    19e4:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    19e8:	04000013 	streq	r0, [r0], #-19	; 0xffffffed
    19ec:	0b0b0024 	bleq	2c1a84 <__RAM_SIZE+0x1c1a84>
    19f0:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
    19f4:	2e050000 	cdpcs	0, 0, cr0, cr5, cr0, {0}
    19f8:	030c3f00 	movweq	r3, #52992	; 0xcf00
    19fc:	3b0b3a0e 	blcc	2d023c <__RAM_SIZE+0x1d023c>
    1a00:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    1a04:	1201110c 	andne	r1, r1, #12, 2
    1a08:	970a4001 	strls	r4, [sl, -r1]
    1a0c:	00000c42 	andeq	r0, r0, r2, asr #24
    1a10:	3f012e06 	svccc	0x00012e06
    1a14:	3a0e030c 	bcc	38264c <__RAM_SIZE+0x28264c>
    1a18:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1a1c:	110c270b 	tstne	ip, fp, lsl #14
    1a20:	40011201 	andmi	r1, r1, r1, lsl #4
    1a24:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
    1a28:	00001301 	andeq	r1, r0, r1, lsl #6
    1a2c:	03000507 	movweq	r0, #1287	; 0x507
    1a30:	3b0b3a0e 	blcc	2d0270 <__RAM_SIZE+0x1d0270>
    1a34:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1a38:	000a0213 	andeq	r0, sl, r3, lsl r2
    1a3c:	002e0800 	eoreq	r0, lr, r0, lsl #16
    1a40:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    1a44:	0b3b0b3a 	bleq	ec4734 <__RAM_SIZE+0xdc4734>
    1a48:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    1a4c:	01111349 	tsteq	r1, r9, asr #6
    1a50:	0a400112 	beq	1001ea0 <__RAM_SIZE+0xf01ea0>
    1a54:	000c4297 	muleq	ip, r7, r2
    1a58:	002e0900 	eoreq	r0, lr, r0, lsl #18
    1a5c:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    1a60:	0b3b0b3a 	bleq	ec4750 <__RAM_SIZE+0xdc4750>
    1a64:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    1a68:	01120111 	tsteq	r2, r1, lsl r1
    1a6c:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
    1a70:	0000000c 	andeq	r0, r0, ip
    1a74:	10001101 	andne	r1, r0, r1, lsl #2
    1a78:	12011106 	andne	r1, r1, #-2147483647	; 0x80000001
    1a7c:	1b0e0301 	blne	382688 <__RAM_SIZE+0x282688>
    1a80:	130e250e 	movwne	r2, #58638	; 0xe50e
    1a84:	00000005 	andeq	r0, r0, r5
    1a88:	10001101 	andne	r1, r0, r1, lsl #2
    1a8c:	12011106 	andne	r1, r1, #-2147483647	; 0x80000001
    1a90:	1b0e0301 	blne	38269c <__RAM_SIZE+0x28269c>
    1a94:	130e250e 	movwne	r2, #58638	; 0xe50e
    1a98:	00000005 	andeq	r0, r0, r5

Disassembly of section .debug_loc:

00000000 <.debug_loc>:
    __asm volatile ( "mrs %0, ipsr" : "=r" ( ulCurrentInterrupt )::"memory" );
       0:	100009b0 			; <UNDEFINED> instruction: 0x100009b0
    if( ulCurrentInterrupt == 0 )
       4:	100009b2 			; <UNDEFINED> instruction: 0x100009b2
        xReturn = pdFALSE;
       8:	007d0002 	rsbseq	r0, sp, r2
}
       c:	100009b2 			; <UNDEFINED> instruction: 0x100009b2
    ( pxList->uxNumberOfItems ) = ( UBaseType_t ) ( pxList->uxNumberOfItems + 1U );
      10:	100009dc 	ldrdne	r0, [r0], -ip
}
      14:	087d0002 	ldmdaeq	sp!, {r1}^
	...
      20:	00000001 	andeq	r0, r0, r1
      24:	09b20000 	ldmibeq	r2!, {}	; <UNPREDICTABLE>
      28:	09c61000 	stmibeq	r6, {ip}^
      2c:	00021000 	andeq	r1, r2, r0
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
      30:	09c69f30 	stmibeq	r6, {r4, r5, r8, r9, sl, fp, ip, pc}^
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
      34:	09ca1000 	stmibeq	sl, {ip}^
      38:	00011000 	andeq	r1, r1, r0
      3c:	0009ca51 	andeq	ip, r9, r1, asr sl
      40:	0009dc10 	andeq	sp, r9, r0, lsl ip
        BaseType_t xReturn = pdFAIL;
      44:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
	...
            while( pxBlock != pxEnd )
      50:	10000800 	andne	r0, r0, r0, lsl #16
      54:	10000802 	andne	r0, r0, r2, lsl #16
                if( pxBlock->xBlockSize > xMaxSize )
      58:	007d0002 	rsbseq	r0, sp, r2
      5c:	10000802 	andne	r0, r0, r2, lsl #16
                if( pxBlock->xBlockSize < xMinSize )
      60:	10000804 	andne	r0, r0, r4, lsl #16
                    xMinSize = pxBlock->xBlockSize;
      64:	047d0002 	ldrbteq	r0, [sp], #-2
      68:	10000804 	andne	r0, r0, r4, lsl #16
      6c:	10000828 	andne	r0, r0, r8, lsr #16
      70:	107d0002 	rsbsne	r0, sp, r2
      74:	10000828 	andne	r0, r0, r8, lsr #16
      78:	1000082c 	andne	r0, r0, ip, lsr #16
      7c:	047d0002 	ldrbteq	r0, [sp], #-2
            prvUnlockQueue( pxQueue );
      80:	1000082c 	andne	r0, r0, ip, lsr #16
            ( void ) xTaskResumeAll();
      84:	10000844 	andne	r0, r0, r4, asr #16
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
      88:	107d0002 	rsbsne	r0, sp, r2
	...
        taskENTER_CRITICAL();
      94:	00000002 	andeq	r0, r0, r2
            if( uxSemaphoreCount > ( UBaseType_t ) 0 )
      98:	00000000 	andeq	r0, r0, r0
                if( xTicksToWait == ( TickType_t ) 0 )
      9c:	10000804 	andne	r0, r0, r4, lsl #16
      a0:	1000081a 	andne	r0, r0, sl, lsl r8
                else if( xEntryTimeSet == pdFALSE )
      a4:	9f310002 	svcls	0x00310002
        taskEXIT_CRITICAL();
      a8:	1000081a 	andne	r0, r0, sl, lsl r8
        vTaskSuspendAll();
      ac:	10000822 	andne	r0, r0, r2, lsr #16
        prvLockQueue( pxQueue );
      b0:	22500001 	subscs	r0, r0, #1
      b4:	25100008 	ldrcs	r0, [r0, #-8]
      b8:	01100008 	tsteq	r0, r8
      bc:	082c5100 	stmdaeq	ip!, {r8, ip, lr}
      c0:	082f1000 	stmdaeq	pc!, {ip}	; <UNPREDICTABLE>
      c4:	00011000 	andeq	r1, r1, r0
      c8:	00000050 	andeq	r0, r0, r0, asr r0
      cc:	00000000 	andeq	r0, r0, r0
        if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
      d0:	00098c00 	andeq	r8, r9, r0, lsl #24
      d4:	00098e10 	andeq	r8, r9, r0, lsl lr
      d8:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
      dc:	00098e00 	andeq	r8, r9, r0, lsl #28
      e0:	0009b010 	andeq	fp, r9, r0, lsl r0
                    if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
      e4:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
      e8:	00000008 	andeq	r0, r0, r8
	...
                prvUnlockQueue( pxQueue );
      f4:	00098c00 	andeq	r8, r9, r0, lsl #24
      f8:	00099210 	andeq	r9, r9, r0, lsl r2
                if( xTaskResumeAll() == pdFALSE )
      fc:	50000110 	andpl	r0, r0, r0, lsl r1
     100:	10000992 	mulne	r0, r2, r9
                    taskYIELD_WITHIN_API();
     104:	100009b0 			; <UNDEFINED> instruction: 0x100009b0
                    if( xInheritanceOccurred != pdFALSE )
     108:	01f30004 	mvnseq	r0, r4
                return errQUEUE_EMPTY;
     10c:	00009f50 	andeq	r9, r0, r0, asr pc
                        taskENTER_CRITICAL();
     110:	00000000 	andeq	r0, r0, r0
                            uxHighestWaitingPriority = prvGetDisinheritPriorityAfterTimeout( pxQueue );
     114:	00010000 	andeq	r0, r1, r0
     118:	098e0000 	stmibeq	lr, {}	; <UNPREDICTABLE>
                            vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
     11c:	09921000 	ldmibeq	r2, {ip}
                        taskEXIT_CRITICAL();
     120:	00021000 	andeq	r1, r2, r0
     124:	09929f30 	ldmibeq	r2, {r4, r5, r8, r9, sl, fp, ip, pc}
     128:	09b01000 	ldmibeq	r0!, {ip}
     12c:	00011000 	andeq	r1, r1, r0
     130:	00000054 	andeq	r0, r0, r4, asr r0
     134:	00000000 	andeq	r0, r0, r0
     138:	00097400 	andeq	r7, r9, r0, lsl #8
     13c:	00097610 	andeq	r7, r9, r0, lsl r6
     140:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
     144:	00097600 	andeq	r7, r9, r0, lsl #12
     148:	00098c10 	andeq	r8, r9, r0, lsl ip
     14c:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
     150:	00000008 	andeq	r0, r0, r8
     154:	00000000 	andeq	r0, r0, r0
     158:	00095c00 	andeq	r5, r9, r0, lsl #24
     15c:	00095e10 	andeq	r5, r9, r0, lsl lr
     160:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
     164:	00095e00 	andeq	r5, r9, r0, lsl #28
     168:	00097410 	andeq	r7, r9, r0, lsl r4
     16c:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
     170:	00000008 	andeq	r0, r0, r8
     174:	00000000 	andeq	r0, r0, r0
     178:	00094400 	andeq	r4, r9, r0, lsl #8
     17c:	00094610 	andeq	r4, r9, r0, lsl r6
     180:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
     184:	00094600 	andeq	r4, r9, r0, lsl #12
     188:	00095c10 	andeq	r5, r9, r0, lsl ip
     18c:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
     190:	00000008 	andeq	r0, r0, r8
     194:	00000000 	andeq	r0, r0, r0
     198:	00092c00 	andeq	r2, r9, r0, lsl #24
     19c:	00092e10 	andeq	r2, r9, r0, lsl lr
     1a0:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
     1a4:	00092e00 	andeq	r2, r9, r0, lsl #28
     1a8:	00094410 	andeq	r4, r9, r0, lsl r4
     1ac:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
     1b0:	00000008 	andeq	r0, r0, r8
     1b4:	00000000 	andeq	r0, r0, r0
     1b8:	00091400 	andeq	r1, r9, r0, lsl #8
     1bc:	00091610 	andeq	r1, r9, r0, lsl r6
     1c0:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
     1c4:	00091600 	andeq	r1, r9, r0, lsl #12
     1c8:	00092c10 	andeq	r2, r9, r0, lsl ip
     1cc:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
     1d0:	00000008 	andeq	r0, r0, r8
     1d4:	00000000 	andeq	r0, r0, r0
     1d8:	0008f800 	andeq	pc, r8, r0, lsl #16
     1dc:	0008fa10 	andeq	pc, r8, r0, lsl sl	; <UNPREDICTABLE>
     1e0:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
     1e4:	0008fa00 	andeq	pc, r8, r0, lsl #20
     1e8:	00091410 	andeq	r1, r9, r0, lsl r4
     1ec:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
     1f0:	00000008 	andeq	r0, r0, r8
     1f4:	00000000 	andeq	r0, r0, r0
     1f8:	00089000 	andeq	r9, r8, r0
     1fc:	00089210 	andeq	r9, r8, r0, lsl r2
     200:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
     204:	00089200 	andeq	r9, r8, r0, lsl #4
     208:	00089410 	andeq	r9, r8, r0, lsl r4
     20c:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
     210:	0008940c 	andeq	r9, r8, ip, lsl #8
     214:	0008e610 	andeq	lr, r8, r0, lsl r6
     218:	7d000310 	stcvc	3, cr0, [r0, #-64]	; 0xffffffc0
     21c:	08e60290 	stmiaeq	r6!, {r4, r7, r9}^
     220:	08f81000 	ldmeq	r8!, {ip}^
     224:	00021000 	andeq	r1, r2, r0
     228:	00000c7d 	andeq	r0, r0, sp, ror ip
	...
     238:	100008a6 	andne	r0, r0, r6, lsr #17
     23c:	100008a9 	andne	r0, r0, r9, lsr #17
     240:	a9500001 	ldmdbge	r0, {r0}^
     244:	c2100008 	andsgt	r0, r0, #8
     248:	01100008 	tsteq	r0, r8
     24c:	08c45400 	stmiaeq	r4, {sl, ip, lr}^
     250:	08ce1000 	stmiaeq	lr, {ip}^
     254:	00011000 	andeq	r1, r1, r0
     258:	00000054 	andeq	r0, r0, r4, asr r0
	...
     264:	0008ac00 	andeq	sl, r8, r0, lsl #24
     268:	0008b210 	andeq	fp, r8, r0, lsl r2
     26c:	50000110 	andpl	r0, r0, r0, lsl r1
     270:	100008b2 			; <UNDEFINED> instruction: 0x100008b2
     274:	100008b5 			; <UNDEFINED> instruction: 0x100008b5
     278:	00530001 	subseq	r0, r3, r1
	...
     288:	b6000000 	strlt	r0, [r0], -r0
     28c:	bc100008 	ldclt	0, cr0, [r0], {8}
     290:	01100008 	tsteq	r0, r8
     294:	08bc5000 	ldmeq	ip!, {ip, lr}
     298:	08c41000 	stmiaeq	r4, {ip}^
     29c:	00011000 	andeq	r1, r1, r0
     2a0:	0008c455 	andeq	ip, r8, r5, asr r4
     2a4:	0008c810 	andeq	ip, r8, r0, lsl r8
     2a8:	50000110 	andpl	r0, r0, r0, lsl r1
     2ac:	100008c8 	andne	r0, r0, r8, asr #17
     2b0:	100008e8 	andne	r0, r0, r8, ror #17
     2b4:	00550001 	subseq	r0, r5, r1
     2b8:	00000000 	andeq	r0, r0, r0
     2bc:	02000000 	andeq	r0, r0, #0
     2c0:	c0000000 	andgt	r0, r0, r0
     2c4:	c4100008 	ldrgt	r0, [r0], #-8
     2c8:	02100008 	andseq	r0, r0, #8
     2cc:	ce9f3000 	cdpgt	0, 9, cr3, cr15, cr0, {0}
     2d0:	e4100008 	ldr	r0, [r0], #-8
     2d4:	01100008 	tsteq	r0, r8
     2d8:	00005400 	andeq	r5, r0, r0, lsl #8
     2dc:	00000000 	andeq	r0, r0, r0
     2e0:	08440000 	stmdaeq	r4, {}^	; <UNPREDICTABLE>
     2e4:	08461000 	stmdaeq	r6, {ip}^
     2e8:	00021000 	andeq	r1, r2, r0
     2ec:	0846007d 	stmdaeq	r6, {r0, r2, r3, r4, r5, r6}^
     2f0:	08481000 	stmdaeq	r8, {ip}^
     2f4:	00021000 	andeq	r1, r2, r0
     2f8:	08480c7d 	stmdaeq	r8, {r0, r2, r3, r4, r5, r6, sl, fp}^
     2fc:	08861000 	stmeq	r6, {ip}
     300:	00021000 	andeq	r1, r2, r0
     304:	0886187d 	stmeq	r6, {r0, r2, r3, r4, r5, r6, fp, ip}
     308:	08901000 	ldmeq	r0, {ip}
     30c:	00021000 	andeq	r1, r2, r0
     310:	00000c7d 	andeq	r0, r0, sp, ror ip
     314:	00000000 	andeq	r0, r0, r0
     318:	01010000 	mrseq	r0, (UNDEF: 1)
     31c:	00010101 	andeq	r0, r1, r1, lsl #2
     320:	10000848 	andne	r0, r0, r8, asr #16
     324:	10000866 	andne	r0, r0, r6, ror #16
     328:	9f300002 	svcls	0x00300002
     32c:	10000866 	andne	r0, r0, r6, ror #16
     330:	10000874 	andne	r0, r0, r4, ror r8
     334:	9f340002 	svcls	0x00340002
     338:	10000874 	andne	r0, r0, r4, ror r8
     33c:	10000890 	mulne	r0, r0, r8
     340:	9f330002 	svcls	0x00330002
	...
     354:	007d0002 	rsbseq	r0, sp, r2
	...
     360:	087d0002 	ldmdaeq	sp!, {r1}^
	...
     374:	007d0002 	rsbseq	r0, sp, r2
	...
     380:	087d0002 	ldmdaeq	sp!, {r1}^
	...
     394:	007d0002 	rsbseq	r0, sp, r2
	...
     3a0:	087d0002 	ldmdaeq	sp!, {r1}^
	...
     3b4:	007d0002 	rsbseq	r0, sp, r2
	...
     3c0:	087d0002 	ldmdaeq	sp!, {r1}^
	...
     3cc:	0c7d0002 	ldcleq	0, cr0, [sp], #-8
	...
     3d8:	287d0002 	ldmdacs	sp!, {r1}^
	...
     3e4:	0c7d0002 	ldcleq	0, cr0, [sp], #-8
	...
     3f0:	087d0002 	ldmdaeq	sp!, {r1}^
	...
     3fc:	007d0002 	rsbseq	r0, sp, r2
	...
     414:	00010000 	andeq	r0, r1, r0
     418:	00000050 	andeq	r0, r0, r0, asr r0
     41c:	00000000 	andeq	r0, r0, r0
     420:	91000200 	mrsls	r0, R8_usr
     424:	00000054 	andeq	r0, r0, r4, asr r0
     428:	00000000 	andeq	r0, r0, r0
     42c:	f3000400 	vshl.u8	d0, d0, d0
     430:	009f5001 	addseq	r5, pc, r1
	...
     444:	01000000 	mrseq	r0, (UNDEF: 0)
     448:	00005100 	andeq	r5, r0, r0, lsl #2
     44c:	00000000 	andeq	r0, r0, r0
     450:	00040000 	andeq	r0, r4, r0
     454:	9f5101f3 	svcls	0x005101f3
	...
     468:	00010000 	andeq	r0, r1, r0
     46c:	00000050 	andeq	r0, r0, r0, asr r0
	...
     47c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
     488:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     48c:	00000004 	andeq	r0, r0, r4
     490:	00000000 	andeq	r0, r0, r0
     494:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     498:	00000010 	andeq	r0, r0, r0, lsl r0
     49c:	00000000 	andeq	r0, r0, r0
     4a0:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     4a4:	00000004 	andeq	r0, r0, r4
	...
     4b8:	01000000 	mrseq	r0, (UNDEF: 0)
     4bc:	00005000 	andeq	r5, r0, r0
     4c0:	00000000 	andeq	r0, r0, r0
     4c4:	00010000 	andeq	r0, r1, r0
     4c8:	00000051 	andeq	r0, r0, r1, asr r0
     4cc:	00000000 	andeq	r0, r0, r0
     4d0:	f3000400 	vshl.u8	d0, d0, d0
     4d4:	009f5001 	addseq	r5, pc, r1
	...
     4ec:	51000100 	mrspl	r0, (UNDEF: 16)
	...
     4f8:	00520001 	subseq	r0, r2, r1
     4fc:	00000000 	andeq	r0, r0, r0
     500:	04000000 	streq	r0, [r0], #-0
     504:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
     508:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
     51c:	01000000 	mrseq	r0, (UNDEF: 0)
     520:	00005200 	andeq	r5, r0, r0, lsl #4
     524:	00000000 	andeq	r0, r0, r0
     528:	00010000 	andeq	r0, r1, r0
     52c:	00000053 	andeq	r0, r0, r3, asr r0
     530:	00000000 	andeq	r0, r0, r0
     534:	f3000400 	vshl.u8	d0, d0, d0
     538:	009f5201 	addseq	r5, pc, r1, lsl #4
	...
     54c:	53000100 	movwpl	r0, #256	; 0x100
	...
     560:	007d0002 	rsbseq	r0, sp, r2
	...
     56c:	047d0002 	ldrbteq	r0, [sp], #-2
	...
     578:	187d0002 	ldmdane	sp!, {r1}^
	...
     584:	047d0002 	ldrbteq	r0, [sp], #-2
	...
     59c:	00010000 	andeq	r0, r1, r0
     5a0:	00000050 	andeq	r0, r0, r0, asr r0
     5a4:	00000000 	andeq	r0, r0, r0
     5a8:	53000100 	movwpl	r0, #256	; 0x100
	...
     5b4:	01f30004 	mvnseq	r0, r4
     5b8:	00009f50 	andeq	r9, r0, r0, asr pc
	...
     5cc:	00510001 	subseq	r0, r1, r1
	...
     5dc:	02000000 	andeq	r0, r0, #0
     5e0:	00007d00 	andeq	r7, r0, r0, lsl #26
     5e4:	00000000 	andeq	r0, r0, r0
     5e8:	02000000 	andeq	r0, r0, #0
     5ec:	00087d00 	andeq	r7, r8, r0, lsl #26
     5f0:	00000000 	andeq	r0, r0, r0
     5f4:	02000000 	andeq	r0, r0, #0
     5f8:	00107d00 	andseq	r7, r0, r0, lsl #26
     5fc:	00000000 	andeq	r0, r0, r0
     600:	02000000 	andeq	r0, r0, #0
     604:	00207d00 	eoreq	r7, r0, r0, lsl #26
     608:	00000000 	andeq	r0, r0, r0
     60c:	02000000 	andeq	r0, r0, #0
     610:	00107d00 	andseq	r7, r0, r0, lsl #26
     614:	00000000 	andeq	r0, r0, r0
     618:	02000000 	andeq	r0, r0, #0
     61c:	00087d00 	andeq	r7, r8, r0, lsl #26
     620:	00000000 	andeq	r0, r0, r0
     624:	02000000 	andeq	r0, r0, #0
     628:	00007d00 	andeq	r7, r0, r0, lsl #26
	...
     640:	50000100 	andpl	r0, r0, r0, lsl #2
	...
     64c:	00510001 	subseq	r0, r1, r1
     650:	00000000 	andeq	r0, r0, r0
     654:	04000000 	streq	r0, [r0], #-0
     658:	5001f300 	andpl	pc, r1, r0, lsl #6
     65c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
     670:	01000000 	mrseq	r0, (UNDEF: 0)
     674:	00005100 	andeq	r5, r0, r0, lsl #2
     678:	00000000 	andeq	r0, r0, r0
     67c:	00010000 	andeq	r0, r1, r0
     680:	00000052 	andeq	r0, r0, r2, asr r0
     684:	00000000 	andeq	r0, r0, r0
     688:	f3000400 	vshl.u8	d0, d0, d0
     68c:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
     6a0:	50000100 	andpl	r0, r0, r0, lsl #2
	...
     6b4:	007d0002 	rsbseq	r0, sp, r2
	...
     6c0:	0c7d0002 	ldcleq	0, cr0, [sp], #-8
	...
     6cc:	107d0002 	rsbsne	r0, sp, r2
	...
     6d8:	207d0002 	rsbscs	r0, sp, r2
	...
     6e4:	107d0002 	rsbsne	r0, sp, r2
	...
     6f0:	0c7d0002 	ldcleq	0, cr0, [sp], #-8
	...
     6fc:	007d0002 	rsbseq	r0, sp, r2
	...
     714:	00010000 	andeq	r0, r1, r0
     718:	00000050 	andeq	r0, r0, r0, asr r0
     71c:	00000000 	andeq	r0, r0, r0
     720:	51000100 	mrspl	r0, (UNDEF: 16)
	...
     72c:	01f30004 	mvnseq	r0, r4
     730:	00009f50 	andeq	r9, r0, r0, asr pc
	...
     744:	00500001 	subseq	r0, r0, r1
     748:	00000000 	andeq	r0, r0, r0
     74c:	54000000 	strpl	r0, [r0], #-0
     750:	5610001b 			; <UNDEFINED> instruction: 0x5610001b
     754:	0210001b 	andseq	r0, r0, #27
     758:	56007d00 	strpl	r7, [r0], -r0, lsl #26
     75c:	5810001b 	ldmdapl	r0, {r0, r1, r3, r4}
     760:	0210001b 	andseq	r0, r0, #27
     764:	58107d00 	ldmdapl	r0, {r8, sl, fp, ip, sp, lr}
     768:	5a10001b 	bpl	4007dc <__RAM_SIZE+0x3007dc>
     76c:	0210001b 	andseq	r0, r0, #27
     770:	5a147d00 	bpl	51fb78 <__RAM_SIZE+0x41fb78>
     774:	7210001b 	andsvc	r0, r0, #27
     778:	0210001b 	andseq	r0, r0, #27
     77c:	72287d00 	eorvc	r7, r8, #0, 26
     780:	7610001b 			; <UNDEFINED> instruction: 0x7610001b
     784:	0210001b 	andseq	r0, r0, #27
     788:	76147d00 	ldrvc	r7, [r4], -r0, lsl #26
     78c:	7810001b 	ldmdavc	r0, {r0, r1, r3, r4}
     790:	0210001b 	andseq	r0, r0, #27
     794:	78107d00 	ldmdavc	r0, {r8, sl, fp, ip, sp, lr}
     798:	8010001b 	andshi	r0, r0, fp, lsl r0
     79c:	0210001b 	andseq	r0, r0, #27
     7a0:	00007d00 	andeq	r7, r0, r0, lsl #26
	...
     7ac:	001b7000 	andseq	r7, fp, r0
     7b0:	001b8010 	andseq	r8, fp, r0, lsl r0
     7b4:	50000110 	andpl	r0, r0, r0, lsl r1
	...
     7c0:	100014c8 	andne	r1, r0, r8, asr #9
     7c4:	100014cc 	andne	r1, r0, ip, asr #9
     7c8:	007d0002 	rsbseq	r0, sp, r2
     7cc:	100014cc 	andne	r1, r0, ip, asr #9
     7d0:	100014ce 	andne	r1, r0, lr, asr #9
     7d4:	247d0002 	ldrbtcs	r0, [sp], #-2
     7d8:	100014ce 	andne	r1, r0, lr, asr #9
     7dc:	10001b3e 	andne	r1, r0, lr, lsr fp
     7e0:	e07d0003 	rsbs	r0, sp, r3
     7e4:	001b3e00 	andseq	r3, fp, r0, lsl #28
     7e8:	001b4810 	andseq	r4, fp, r0, lsl r8
     7ec:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
     7f0:	00000024 	andeq	r0, r0, r4, lsr #32
	...
     800:	0014c800 	andseq	ip, r4, r0, lsl #16
     804:	0014dc10 	andseq	sp, r4, r0, lsl ip
     808:	50000110 	andpl	r0, r0, r0, lsl r1
     80c:	100014de 	ldrdne	r1, [r0], -lr
     810:	10001b24 	andne	r1, r0, r4, lsr #22
     814:	24570001 	ldrbcs	r0, [r7], #-1
     818:	2810001b 	ldmdacs	r0, {r0, r1, r3, r4}
     81c:	0110001b 	tsteq	r0, fp, lsl r0
     820:	1b285000 	blne	a14828 <__RAM_SIZE+0x914828>
     824:	1b421000 	blne	108482c <__RAM_SIZE+0xf8482c>
     828:	00011000 	andeq	r1, r1, r0
     82c:	00000057 	andeq	r0, r0, r7, asr r0
	...
     83c:	c8000000 	stmdagt	r0, {}	; <UNPREDICTABLE>
     840:	de100014 	mrcle	0, 0, r0, cr0, cr4, {0}
     844:	01100014 	tsteq	r0, r4, lsl r0
     848:	14de5100 	ldrbne	r5, [lr], #256	; 0x100
     84c:	1b241000 	blne	904854 <__RAM_SIZE+0x804854>
     850:	00011000 	andeq	r1, r1, r0
     854:	001b2458 	andseq	r2, fp, r8, asr r4
     858:	001b2810 	andseq	r2, fp, r0, lsl r8
     85c:	51000110 	tstpl	r0, r0, lsl r1
     860:	10001b28 	andne	r1, r0, r8, lsr #22
     864:	10001b42 	andne	r1, r0, r2, asr #22
     868:	42580001 	subsmi	r0, r8, #1
     86c:	4810001b 	ldmdami	r0, {r0, r1, r3, r4}
     870:	0410001b 	ldreq	r0, [r0], #-27	; 0xffffffe5
     874:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
     878:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
     890:	c8000000 	stmdagt	r0, {}	; <UNPREDICTABLE>
     894:	de100014 	mrcle	0, 0, r0, cr0, cr4, {0}
     898:	01100014 	tsteq	r0, r4, lsl r0
     89c:	14de5200 	ldrbne	r5, [lr], #512	; 0x200
     8a0:	1a461000 	bne	11848a8 <__RAM_SIZE+0x10848a8>
     8a4:	00011000 	andeq	r1, r1, r0
     8a8:	001a4656 	andseq	r4, sl, r6, asr r6
     8ac:	001a4810 	andseq	r4, sl, r0, lsl r8
     8b0:	5b000110 	blpl	cf8 <__Vectors_Size+0x538>
     8b4:	10001a48 	andne	r1, r0, r8, asr #20
     8b8:	10001a72 	andne	r1, r0, r2, ror sl
     8bc:	72560001 	subsvc	r0, r6, #1
     8c0:	9c10001a 	ldcls	0, cr0, [r0], {26}
     8c4:	0110001a 	tsteq	r0, sl, lsl r0
     8c8:	1a9c5b00 	bne	fe7174d0 <__StackTop+0xc66174d0>
     8cc:	1b241000 	blne	9048d4 <__RAM_SIZE+0x8048d4>
     8d0:	00011000 	andeq	r1, r1, r0
     8d4:	001b2456 	andseq	r2, fp, r6, asr r4
     8d8:	001b2810 	andseq	r2, fp, r0, lsl r8
     8dc:	52000110 	andpl	r0, r0, #16, 2
     8e0:	10001b28 	andne	r1, r0, r8, lsr #22
     8e4:	10001b42 	andne	r1, r0, r2, asr #22
     8e8:	42560001 	subsmi	r0, r6, #1
     8ec:	4810001b 	ldmdami	r0, {r0, r1, r3, r4}
     8f0:	0410001b 	ldreq	r0, [r0], #-27	; 0xffffffe5
     8f4:	5201f300 	andpl	pc, r1, #0, 6
     8f8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
     904:	0014c800 	andseq	ip, r4, r0, lsl #16
     908:	0014de10 	andseq	sp, r4, r0, lsl lr
     90c:	53000110 	movwpl	r0, #272	; 0x110
     910:	10001b24 	andne	r1, r0, r4, lsr #22
     914:	10001b28 	andne	r1, r0, r8, lsr #22
     918:	00530001 	subseq	r0, r3, r1
     91c:	00000000 	andeq	r0, r0, r0
     920:	01000000 	mrseq	r0, (UNDEF: 0)
	...
     938:	04000000 	streq	r0, [r0], #-0
     93c:	06100015 			; <UNDEFINED> instruction: 0x06100015
     940:	02100015 	andseq	r0, r0, #21
     944:	069f3000 	ldreq	r3, [pc], r0
     948:	04100015 	ldreq	r0, [r0], #-21	; 0xffffffeb
     94c:	01100016 	tsteq	r0, r6, lsl r0
     950:	16045500 	strne	r5, [r4], -r0, lsl #10
     954:	16161000 	ldrne	r1, [r6], -r0
     958:	00011000 	andeq	r1, r1, r0
     95c:	00161651 	andseq	r1, r6, r1, asr r6
     960:	00162010 	andseq	r2, r6, r0, lsl r0
     964:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
     968:	10001620 	andne	r1, r0, r0, lsr #12
     96c:	10001632 	andne	r1, r0, r2, lsr r6
     970:	32510001 	subscc	r0, r1, #1
     974:	e0100016 	ands	r0, r0, r6, lsl r0
     978:	01100017 	tsteq	r0, r7, lsl r0
     97c:	17e85500 	strbne	r5, [r8, r0, lsl #10]!
     980:	18041000 	stmdane	r4, {ip}
     984:	00011000 	andeq	r1, r1, r0
     988:	00180455 	andseq	r0, r8, r5, asr r4
     98c:	00182310 	andseq	r2, r8, r0, lsl r3
     990:	91000210 	tstls	r0, r0, lsl r2
     994:	00182840 	andseq	r2, r8, r0, asr #16
     998:	00198c10 	andseq	r8, r9, r0, lsl ip
     99c:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
     9a0:	100019fa 	strdne	r1, [r0], -sl
     9a4:	10001a54 	andne	r1, r0, r4, asr sl
     9a8:	c4550001 	ldrbgt	r0, [r5], #-1
     9ac:	fc10001a 	ldc2	0, cr0, [r0], {26}
     9b0:	0110001a 	tsteq	r0, sl, lsl r0
     9b4:	1b105500 	blne	415dbc <__RAM_SIZE+0x315dbc>
     9b8:	1b121000 	blne	4849c0 <__RAM_SIZE+0x3849c0>
     9bc:	00011000 	andeq	r1, r1, r0
     9c0:	00000055 	andeq	r0, r0, r5, asr r0
     9c4:	00000000 	andeq	r0, r0, r0
     9c8:	00000200 	andeq	r0, r0, r0, lsl #4
	...
     9d8:	02020000 	andeq	r0, r2, #0
     9dc:	28000000 	stmdacs	r0, {}	; <UNPREDICTABLE>
     9e0:	3a100015 	bcc	400a3c <__RAM_SIZE+0x300a3c>
     9e4:	02100015 	andseq	r0, r0, #21
     9e8:	3a9f3000 	bcc	fe7cc9f0 <__StackTop+0xc66cc9f0>
     9ec:	67100015 			; <UNDEFINED> instruction: 0x67100015
     9f0:	02100015 	andseq	r0, r0, #21
     9f4:	9a489100 	bls	1224dfc <__RAM_SIZE+0x1124dfc>
     9f8:	a2100015 	andsge	r0, r0, #21
     9fc:	02100015 	andseq	r0, r0, #21
     a00:	a29f3000 	addsge	r3, pc, #0
     a04:	a4100015 	ldrge	r0, [r0], #-21	; 0xffffffeb
     a08:	01100015 	tsteq	r0, r5, lsl r0
     a0c:	15a45000 	strne	r5, [r4, #0]!
     a10:	15b21000 	ldrne	r1, [r2, #0]!
     a14:	00021000 	andeq	r1, r2, r0
     a18:	15b29f30 	ldrne	r9, [r2, #3888]!	; 0xf30
     a1c:	15ba1000 	ldrne	r1, [sl, #0]!
     a20:	00021000 	andeq	r1, r2, r0
     a24:	15ba4891 	ldrne	r4, [sl, #2193]!	; 0x891
     a28:	15c21000 	strbne	r1, [r2]
     a2c:	00021000 	andeq	r1, r2, r0
     a30:	15c29f30 	strbne	r9, [r2, #3888]	; 0xf30
     a34:	15c41000 	strbne	r1, [r4]
     a38:	00011000 	andeq	r1, r1, r0
     a3c:	0015c453 	andseq	ip, r5, r3, asr r4
     a40:	001ac410 	andseq	ip, sl, r0, lsl r4
     a44:	91000210 	tstls	r0, r0, lsl r2
     a48:	001ac448 	andseq	ip, sl, r8, asr #8
     a4c:	001afa10 	andseq	pc, sl, r0, lsl sl	; <UNPREDICTABLE>
     a50:	38000210 	stmdacc	r0, {r4, r9}
     a54:	001afa9f 	mulseq	sl, pc, sl	; <UNPREDICTABLE>
     a58:	001b2410 	andseq	r2, fp, r0, lsl r4
     a5c:	91000210 	tstls	r0, r0, lsl r2
     a60:	00000048 	andeq	r0, r0, r8, asr #32
     a64:	00000000 	andeq	r0, r0, r0
     a68:	00000100 	andeq	r0, r0, r0, lsl #2
	...
     a84:	3a000000 	bcc	a8c <__Vectors_Size+0x2cc>
     a88:	46100015 			; <UNDEFINED> instruction: 0x46100015
     a8c:	02100015 	andseq	r0, r0, #21
     a90:	469f3000 	ldrmi	r3, [pc], r0
     a94:	67100015 			; <UNDEFINED> instruction: 0x67100015
     a98:	01100015 	tsteq	r0, r5, lsl r0
     a9c:	15c45b00 	strbne	r5, [r4, #2816]	; 0xb00
     aa0:	15ea1000 	strbne	r1, [sl, #0]!
     aa4:	00021000 	andeq	r1, r2, r0
     aa8:	15ea9f30 	strbne	r9, [sl, #3888]!	; 0xf30
     aac:	15ec1000 	strbne	r1, [ip, #0]!
     ab0:	00011000 	andeq	r1, r1, r0
     ab4:	0015ec50 	andseq	lr, r5, r0, asr ip
     ab8:	0015f810 	andseq	pc, r5, r0, lsl r8	; <UNPREDICTABLE>
     abc:	30000210 	andcc	r0, r0, r0, lsl r2
     ac0:	0015f89f 	mulseq	r5, pc, r8	; <UNPREDICTABLE>
     ac4:	00199210 	andseq	r9, r9, r0, lsl r2
     ac8:	5b000110 	blpl	f10 <__Vectors_Size+0x750>
     acc:	100019ce 	andne	r1, r0, lr, asr #19
     ad0:	100019d4 	ldrdne	r1, [r0], -r4
     ad4:	fa5b0001 	blx	16c0ae0 <__RAM_SIZE+0x15c0ae0>
     ad8:	44100019 	ldrmi	r0, [r0], #-25	; 0xffffffe7
     adc:	0110001a 	tsteq	r0, sl, lsl r0
     ae0:	1a445b00 	bne	11176e8 <__RAM_SIZE+0x10176e8>
     ae4:	1a481000 	bne	1204aec <__RAM_SIZE+0x1104aec>
     ae8:	00011000 	andeq	r1, r1, r0
     aec:	001a4854 	andseq	r4, sl, r4, asr r8
     af0:	001a7010 	andseq	r7, sl, r0, lsl r0
     af4:	5b000110 	blpl	f3c <__Vectors_Size+0x77c>
     af8:	10001a70 	andne	r1, r0, r0, ror sl
     afc:	10001a74 	andne	r1, r0, r4, ror sl
     b00:	74540001 	ldrbvc	r0, [r4], #-1
     b04:	7610001a 			; <UNDEFINED> instruction: 0x7610001a
     b08:	0110001a 	tsteq	r0, sl, lsl r0
     b0c:	1a765300 	bne	1d95714 <__RAM_SIZE+0x1c95714>
     b10:	1a901000 	bne	fe404b18 <__StackTop+0xc6304b18>
     b14:	00011000 	andeq	r1, r1, r0
     b18:	001a9054 	andseq	r9, sl, r4, asr r0
     b1c:	001a9410 	andseq	r9, sl, r0, lsl r4
     b20:	53000110 	movwpl	r0, #272	; 0x110
     b24:	10001ac4 	andne	r1, r0, r4, asr #21
     b28:	10001b24 	andne	r1, r0, r4, lsr #22
     b2c:	005b0001 	subseq	r0, fp, r1
	...
     b38:	01000100 	mrseq	r0, (UNDEF: 16)
     b3c:	01000100 	mrseq	r0, (UNDEF: 16)
     b40:	00000100 	andeq	r0, r0, r0, lsl #2
     b44:	00152800 	andseq	r2, r5, r0, lsl #16
     b48:	00156710 	andseq	r6, r5, r0, lsl r7
     b4c:	30000210 	andcc	r0, r0, r0, lsl r2
     b50:	0015709f 	mulseq	r5, pc, r0	; <UNPREDICTABLE>
     b54:	00157210 	andseq	r7, r5, r0, lsl r2
     b58:	31000210 	tstcc	r0, r0, lsl r2
     b5c:	00157a9f 	mulseq	r5, pc, sl	; <UNPREDICTABLE>
     b60:	00157c10 	andseq	r7, r5, r0, lsl ip
     b64:	31000210 	tstcc	r0, r0, lsl r2
     b68:	0015849f 	mulseq	r5, pc, r4	; <UNPREDICTABLE>
     b6c:	00158610 	andseq	r8, r5, r0, lsl r6
     b70:	31000210 	tstcc	r0, r0, lsl r2
     b74:	00158e9f 	mulseq	r5, pc, lr	; <UNPREDICTABLE>
     b78:	00159010 	andseq	r9, r5, r0, lsl r0
     b7c:	31000210 	tstcc	r0, r0, lsl r2
     b80:	0015989f 	mulseq	r5, pc, r8	; <UNPREDICTABLE>
     b84:	00159a10 	andseq	r9, r5, r0, lsl sl
     b88:	31000210 	tstcc	r0, r0, lsl r2
     b8c:	00159a9f 	mulseq	r5, pc, sl	; <UNPREDICTABLE>
     b90:	001b2410 	andseq	r2, fp, r0, lsl r4
     b94:	30000210 	andcc	r0, r0, r0, lsl r2
     b98:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     b9c:	00000000 	andeq	r0, r0, r0
     ba0:	00000200 	andeq	r0, r0, r0, lsl #4
	...
     c00:	0014d400 	andseq	sp, r4, r0, lsl #8
     c04:	0014de10 	andseq	sp, r4, r0, lsl lr
     c08:	30000210 	andcc	r0, r0, r0, lsl r2
     c0c:	0014de9f 	mulseq	r4, pc, lr	; <UNPREDICTABLE>
     c10:	0014ee10 	andseq	lr, r4, r0, lsl lr
     c14:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
     c18:	100014ee 	andne	r1, r0, lr, ror #9
     c1c:	10001500 	andne	r1, r0, r0, lsl #10
     c20:	00550001 	subseq	r0, r5, r1
     c24:	8a100015 	bhi	400c80 <__RAM_SIZE+0x300c80>
     c28:	01100017 	tsteq	r0, r7, lsl r0
     c2c:	178a5400 	strne	r5, [sl, r0, lsl #8]
     c30:	178c1000 	strne	r1, [ip, r0]
     c34:	00011000 	andeq	r1, r1, r0
     c38:	00178c50 	andseq	r8, r7, r0, asr ip
     c3c:	0017e010 	andseq	lr, r7, r0, lsl r0
     c40:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
     c44:	100017e0 	andne	r1, r0, r0, ror #15
     c48:	100017e8 	andne	r1, r0, r8, ror #15
     c4c:	e8500001 	ldmda	r0, {r0}^
     c50:	26100017 			; <UNDEFINED> instruction: 0x26100017
     c54:	01100018 	tsteq	r0, r8, lsl r0
     c58:	18265400 	stmdane	r6!, {sl, ip, lr}
     c5c:	18281000 	stmdane	r8!, {ip}
     c60:	00011000 	andeq	r1, r1, r0
     c64:	00182850 	andseq	r2, r8, r0, asr r8
     c68:	00186010 	andseq	r6, r8, r0, lsl r0
     c6c:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
     c70:	10001860 	andne	r1, r0, r0, ror #16
     c74:	10001862 	andne	r1, r0, r2, ror #16
     c78:	62500001 	subsvs	r0, r0, #1
     c7c:	b4100018 	ldrlt	r0, [r0], #-24	; 0xffffffe8
     c80:	01100018 	tsteq	r0, r8, lsl r0
     c84:	18b45400 	ldmne	r4!, {sl, ip, lr}
     c88:	18b61000 	ldmne	r6!, {ip}
     c8c:	00011000 	andeq	r1, r1, r0
     c90:	0018b650 	andseq	fp, r8, r0, asr r6
     c94:	0018de10 	andseq	sp, r8, r0, lsl lr
     c98:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
     c9c:	100018de 	ldrdne	r1, [r0], -lr
     ca0:	100018e0 	andne	r1, r0, r0, ror #17
     ca4:	e0500001 	subs	r0, r0, r1
     ca8:	2c100018 	ldccs	0, cr0, [r0], {24}
     cac:	01100019 	tsteq	r0, r9, lsl r0
     cb0:	192c5400 	stmdbne	ip!, {sl, ip, lr}
     cb4:	19341000 	ldmdbne	r4!, {ip}
     cb8:	00011000 	andeq	r1, r1, r0
     cbc:	00193450 	andseq	r3, r9, r0, asr r4
     cc0:	00198010 	andseq	r8, r9, r0, lsl r0
     cc4:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
     cc8:	10001980 	andne	r1, r0, r0, lsl #19
     ccc:	10001988 	andne	r1, r0, r8, lsl #19
     cd0:	88500001 	ldmdahi	r0, {r0}^
     cd4:	9c100019 	ldcls	0, cr0, [r0], {25}
     cd8:	01100019 	tsteq	r0, r9, lsl r0
     cdc:	199c5400 	ldmibne	ip, {sl, ip, lr}
     ce0:	19b21000 	ldmibne	r2!, {ip}
     ce4:	00011000 	andeq	r1, r1, r0
     ce8:	0019b25a 	andseq	fp, r9, sl, asr r2
     cec:	0019b610 	andseq	fp, r9, r0, lsl r6
     cf0:	52000110 	andpl	r0, r0, #16, 2
     cf4:	100019b6 			; <UNDEFINED> instruction: 0x100019b6
     cf8:	100019c2 	andne	r1, r0, r2, asr #19
     cfc:	c25a0001 	subsgt	r0, sl, #1
     d00:	ce100019 	mrcgt	0, 0, r0, cr0, cr9, {0}
     d04:	01100019 	tsteq	r0, r9, lsl r0
     d08:	19ce5200 	stmibne	lr, {r9, ip, lr}^
     d0c:	19d81000 	ldmibne	r8, {ip}^
     d10:	00011000 	andeq	r1, r1, r0
     d14:	0019d854 	andseq	sp, r9, r4, asr r8
     d18:	0019de10 	andseq	sp, r9, r0, lsl lr
     d1c:	5a000110 	bpl	1164 <__HEAP_SIZE+0x164>
     d20:	100019de 	ldrdne	r1, [r0], -lr
     d24:	100019e2 	andne	r1, r0, r2, ror #19
     d28:	e2520001 	subs	r0, r2, #1
     d2c:	ee100019 	mrc	0, 0, r0, cr0, cr9, {0}
     d30:	01100019 	tsteq	r0, r9, lsl r0
     d34:	19ee5500 	stmibne	lr!, {r8, sl, ip, lr}^
     d38:	19fa1000 	ldmibne	sl!, {ip}^
     d3c:	00011000 	andeq	r1, r1, r0
     d40:	0019fa52 	andseq	pc, r9, r2, asr sl	; <UNPREDICTABLE>
     d44:	001a4210 	andseq	r4, sl, r0, lsl r2
     d48:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
     d4c:	10001a42 	andne	r1, r0, r2, asr #20
     d50:	10001a48 	andne	r1, r0, r8, asr #20
     d54:	48520001 	ldmdami	r2, {r0}^
     d58:	5010001a 	andspl	r0, r0, sl, lsl r0
     d5c:	0110001a 	tsteq	r0, sl, lsl r0
     d60:	1a505400 	bne	1415d68 <__RAM_SIZE+0x1315d68>
     d64:	1a581000 	bne	1604d6c <__RAM_SIZE+0x1504d6c>
     d68:	00011000 	andeq	r1, r1, r0
     d6c:	001a5852 	andseq	r5, sl, r2, asr r8
     d70:	001a6410 	andseq	r6, sl, r0, lsl r4
     d74:	59000110 	stmdbpl	r0, {r4, r8}
     d78:	10001a64 	andne	r1, r0, r4, ror #20
     d7c:	10001a7c 	andne	r1, r0, ip, ror sl
     d80:	7c520001 	mrrcvc	0, 0, r0, r2, cr1
     d84:	8410001a 	ldrhi	r0, [r0], #-26	; 0xffffffe6
     d88:	0110001a 	tsteq	r0, sl, lsl r0
     d8c:	1a845500 	bne	fe116194 <__StackTop+0xc6016194>
     d90:	1aac1000 	bne	feb04d98 <__StackTop+0xc6a04d98>
     d94:	00011000 	andeq	r1, r1, r0
     d98:	001aac52 	andseq	sl, sl, r2, asr ip
     d9c:	001ab810 	andseq	fp, sl, r0, lsl r8
     da0:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
     da4:	10001ab8 			; <UNDEFINED> instruction: 0x10001ab8
     da8:	10001ac4 	andne	r1, r0, r4, asr #21
     dac:	c4520001 	ldrbgt	r0, [r2], #-1
     db0:	f210001a 	vqadd.s16	d0, d0, d10
     db4:	0110001a 	tsteq	r0, sl, lsl r0
     db8:	1af25400 	bne	ffc95dc0 <__StackTop+0xc7b95dc0>
     dbc:	1afa1000 	bne	ffe84dc4 <__StackTop+0xc7d84dc4>
     dc0:	00011000 	andeq	r1, r1, r0
     dc4:	001afa50 	andseq	pc, sl, r0, asr sl	; <UNPREDICTABLE>
     dc8:	001afc10 	andseq	pc, sl, r0, lsl ip	; <UNPREDICTABLE>
     dcc:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
     dd0:	10001afc 	strdne	r1, [r0], -ip
     dd4:	10001b10 	andne	r1, r0, r0, lsl fp
     dd8:	10550001 	subsne	r0, r5, r1
     ddc:	1210001b 	andsne	r0, r0, #27
     de0:	0110001b 	tsteq	r0, fp, lsl r0
     de4:	1b125400 	blne	495dec <__RAM_SIZE+0x395dec>
     de8:	1b241000 	blne	904df0 <__RAM_SIZE+0x804df0>
     dec:	00011000 	andeq	r1, r1, r0
     df0:	001b2455 	andseq	r2, fp, r5, asr r4
     df4:	001b2810 	andseq	r2, fp, r0, lsl r8
     df8:	30000210 	andcc	r0, r0, r0, lsl r2
     dfc:	001b289f 	mulseq	fp, pc, r8	; <UNPREDICTABLE>
     e00:	001b4210 	andseq	r4, fp, r0, lsl r2
     e04:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
     e08:	10001b42 	andne	r1, r0, r2, asr #22
     e0c:	10001b48 	andne	r1, r0, r8, asr #22
     e10:	00500001 	subseq	r0, r0, r1
     e14:	00000000 	andeq	r0, r0, r0
     e18:	01000000 	mrseq	r0, (UNDEF: 0)
	...
     e34:	1e000000 	cdpne	0, 0, cr0, cr0, cr0, {0}
     e38:	26100017 			; <UNDEFINED> instruction: 0x26100017
     e3c:	02100017 	andseq	r0, r0, #23
     e40:	289f3a00 	ldmcs	pc, {r9, fp, ip, sp}	; <UNPREDICTABLE>
     e44:	78100017 	ldmdavc	r0, {r0, r1, r2, r4}
     e48:	01100017 	tsteq	r0, r7, lsl r0
     e4c:	17785300 	ldrbne	r5, [r8, -r0, lsl #6]!
     e50:	17871000 	strne	r1, [r7, r0]
     e54:	00031000 	andeq	r1, r3, r0
     e58:	987fa891 	ldmdals	pc!, {r0, r4, r7, fp, sp, pc}^	; <UNPREDICTABLE>
     e5c:	d4100017 	ldrle	r0, [r0], #-23	; 0xffffffe9
     e60:	01100017 	tsteq	r0, r7, lsl r0
     e64:	17d45300 	ldrbne	r5, [r4, r0, lsl #6]
     e68:	17dd1000 	ldrbne	r1, [sp, r0]
     e6c:	00031000 	andeq	r1, r3, r0
     e70:	e87fa891 	ldmda	pc!, {r0, r4, r7, fp, sp, pc}^	; <UNPREDICTABLE>
     e74:	0e100017 	mrceq	0, 0, r0, cr0, cr7, {0}
     e78:	01100018 	tsteq	r0, r8, lsl r0
     e7c:	180e5300 	stmdane	lr, {r8, r9, ip, lr}
     e80:	18231000 	stmdane	r3!, {ip}
     e84:	00031000 	andeq	r1, r3, r0
     e88:	287fb091 	ldmdacs	pc!, {r0, r4, r7, ip, sp, pc}^	; <UNPREDICTABLE>
     e8c:	54100018 	ldrpl	r0, [r0], #-24	; 0xffffffe8
     e90:	01100018 	tsteq	r0, r8, lsl r0
     e94:	18545300 	ldmdane	r4, {r8, r9, ip, lr}^
     e98:	185d1000 	ldmdane	sp, {ip}^
     e9c:	00031000 	andeq	r1, r3, r0
     ea0:	627fa891 	rsbsvs	sl, pc, #9502720	; 0x910000
     ea4:	a8100018 	ldmdage	r0, {r3, r4}
     ea8:	01100018 	tsteq	r0, r8, lsl r0
     eac:	18a85300 	stmiane	r8!, {r8, r9, ip, lr}
     eb0:	18b11000 	ldmne	r1!, {ip}
     eb4:	00031000 	andeq	r1, r3, r0
     eb8:	b67fb091 			; <UNDEFINED> instruction: 0xb67fb091
     ebc:	ca100018 	bgt	400f24 <__RAM_SIZE+0x300f24>
     ec0:	01100018 	tsteq	r0, r8, lsl r0
     ec4:	18ca5300 	stmiane	sl, {r8, r9, ip, lr}^
     ec8:	18db1000 	ldmne	fp, {ip}^
     ecc:	00031000 	andeq	r1, r3, r0
     ed0:	e07fa891 			; <UNDEFINED> instruction: 0xe07fa891
     ed4:	fa100018 	blx	400f3c <__RAM_SIZE+0x300f3c>
     ed8:	01100018 	tsteq	r0, r8, lsl r0
     edc:	00005300 	andeq	r5, r0, r0, lsl #6
	...
     ee8:	100017b8 			; <UNDEFINED> instruction: 0x100017b8
     eec:	100017ce 	andne	r1, r0, lr, asr #15
     ef0:	00520001 	subseq	r0, r2, r1
	...
     efc:	6a000000 	bvs	f04 <__Vectors_Size+0x744>
     f00:	80100017 	andshi	r0, r0, r7, lsl r0
     f04:	01100017 	tsteq	r0, r7, lsl r0
     f08:	17805200 	strne	r5, [r0, r0, lsl #4]
     f0c:	17871000 	strne	r1, [r7, r0]
     f10:	00021000 	andeq	r1, r2, r0
     f14:	0000007d 	andeq	r0, r0, sp, ror r0
     f18:	00000000 	andeq	r0, r0, r0
     f1c:	00010000 	andeq	r0, r1, r0
	...
     f30:	19880000 	stmibne	r8, {}	; <UNPREDICTABLE>
     f34:	19921000 	ldmibne	r2, {ip}
     f38:	00021000 	andeq	r1, r2, r0
     f3c:	19929f31 	ldmibne	r2, {r0, r4, r5, r8, r9, sl, fp, ip, pc}
     f40:	19a81000 	stmibne	r8!, {ip}
     f44:	00011000 	andeq	r1, r1, r0
     f48:	0019b259 	andseq	fp, r9, r9, asr r2
     f4c:	0019c210 	andseq	ip, r9, r0, lsl r2
     f50:	59000110 	stmdbpl	r0, {r4, r8}
     f54:	100019c2 	andne	r1, r0, r2, asr #19
     f58:	100019c6 	andne	r1, r0, r6, asr #19
     f5c:	c6530001 	ldrbgt	r0, [r3], -r1
     f60:	ce100019 	mrcgt	0, 0, r0, cr0, cr9, {0}
     f64:	01100019 	tsteq	r0, r9, lsl r0
     f68:	19ce5900 	stmibne	lr, {r8, fp, ip, lr}^
     f6c:	19d81000 	ldmibne	r8, {ip}^
     f70:	00021000 	andeq	r1, r2, r0
     f74:	19d89f31 	ldmibne	r8, {r0, r4, r5, r8, r9, sl, fp, ip, pc}^
     f78:	19e01000 	stmibne	r0!, {ip}^
     f7c:	00011000 	andeq	r1, r1, r0
     f80:	0019e059 	andseq	lr, r9, r9, asr r0
     f84:	0019ee10 	andseq	lr, r9, r0, lsl lr
     f88:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
     f8c:	100019ee 	andne	r1, r0, lr, ror #19
     f90:	100019f2 	strdne	r1, [r0], -r2
     f94:	f2590001 	vhadd.s16	d16, d9, d1
     f98:	fa100019 	blx	401004 <__RAM_SIZE+0x301004>
     f9c:	01100019 	tsteq	r0, r9, lsl r0
     fa0:	00005400 	andeq	r5, r0, r0, lsl #8
	...
     fac:	1a740000 	bne	1d00fb4 <__RAM_SIZE+0x1c00fb4>
     fb0:	1a9c1000 	bne	fe704fb8 <__StackTop+0xc6604fb8>
     fb4:	00011000 	andeq	r1, r1, r0
     fb8:	001aa45a 	andseq	sl, sl, sl, asr r4
     fbc:	001aa810 	andseq	sl, sl, r0, lsl r8
     fc0:	5a000110 	bpl	1408 <__HEAP_SIZE+0x408>
	...
     fe0:	1a280000 	bne	a00fe8 <__RAM_SIZE+0x900fe8>
     fe4:	1a481000 	bne	1204fec <__RAM_SIZE+0x1104fec>
     fe8:	00011000 	andeq	r1, r1, r0
     fec:	001a4c59 	andseq	r4, sl, r9, asr ip
     ff0:	001a5410 	andseq	r5, sl, r0, lsl r4
     ff4:	59000110 	stmdbpl	r0, {r4, r8}
     ff8:	10001a54 	andne	r1, r0, r4, asr sl
     ffc:	10001a64 	andne	r1, r0, r4, ror #20
    1000:	64550001 	ldrbvs	r0, [r5], #-1
    1004:	6610001a 			; <UNDEFINED> instruction: 0x6610001a
    1008:	0110001a 	tsteq	r0, sl, lsl r0
    100c:	1a665300 	bne	1995c14 <__RAM_SIZE+0x1895c14>
    1010:	1a741000 	bne	1d05018 <__RAM_SIZE+0x1c05018>
    1014:	00011000 	andeq	r1, r1, r0
    1018:	001a7455 	andseq	r7, sl, r5, asr r4
    101c:	001a9c10 	andseq	r9, sl, r0, lsl ip
    1020:	59000110 	stmdbpl	r0, {r4, r8}
    1024:	10001aa4 	andne	r1, r0, r4, lsr #21
    1028:	10001aaa 	andne	r1, r0, sl, lsr #21
    102c:	aa590001 	bge	1641038 <__RAM_SIZE+0x1541038>
    1030:	b810001a 	ldmdalt	r0, {r1, r3, r4}
    1034:	0110001a 	tsteq	r0, sl, lsl r0
    1038:	1ab85400 	bne	fee16040 <__StackTop+0xc6d16040>
    103c:	1abc1000 	bne	fef05044 <__StackTop+0xc6e05044>
    1040:	00011000 	andeq	r1, r1, r0
    1044:	001abc59 	andseq	fp, sl, r9, asr ip
    1048:	001ac210 	andseq	ip, sl, r0, lsl r2
    104c:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    1050:	10001ac2 	andne	r1, r0, r2, asr #21
    1054:	10001ac4 	andne	r1, r0, r4, asr #21
    1058:	01790003 	cmneq	r9, r3
    105c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    1068:	12000000 	andne	r0, r0, #0
    106c:	1810001a 	ldmdane	r0, {r1, r3, r4}
    1070:	0110001a 	tsteq	r0, sl, lsl r0
    1074:	1a185200 	bne	61587c <__RAM_SIZE+0x51587c>
    1078:	1a201000 	bne	805080 <__RAM_SIZE+0x705080>
    107c:	00011000 	andeq	r1, r1, r0
    1080:	001a2053 	andseq	r2, sl, r3, asr r0
    1084:	001a2410 	andseq	r2, sl, r0, lsl r4
    1088:	52000110 	andpl	r0, r0, #16, 2
	...
    1094:	1a120000 	bne	48109c <__RAM_SIZE+0x38109c>
    1098:	1a281000 	bne	a050a0 <__RAM_SIZE+0x9050a0>
    109c:	00011000 	andeq	r1, r1, r0
    10a0:	00000059 	andeq	r0, r0, r9, asr r0
    10a4:	00000000 	andeq	r0, r0, r0
    10a8:	c8000100 	stmdagt	r0, {r8}
    10ac:	fa10001a 	blx	40111c <__RAM_SIZE+0x30111c>
    10b0:	0210001a 	andseq	r0, r0, #26
    10b4:	009f3000 	addseq	r3, pc, r0
    10b8:	00000000 	andeq	r0, r0, r0
    10bc:	03000000 	movweq	r0, #0
    10c0:	00152800 	andseq	r2, r5, r0, lsl #16
    10c4:	00152e10 	andseq	r2, r5, r0, lsl lr
    10c8:	51000110 	tstpl	r0, r0, lsl r1
	...
    10d4:	15ce0000 	strbne	r0, [lr]
    10d8:	15d41000 	ldrbne	r1, [r4]
    10dc:	00011000 	andeq	r1, r1, r0
    10e0:	00000052 	andeq	r0, r0, r2, asr r0
    10e4:	00000000 	andeq	r0, r0, r0
    10e8:	000d4000 	andeq	r4, sp, r0
    10ec:	000d4410 	andeq	r4, sp, r0, lsl r4
    10f0:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    10f4:	000d4400 	andeq	r4, sp, r0, lsl #8
    10f8:	000d4810 	andeq	r4, sp, r0, lsl r8
    10fc:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    1100:	000d4824 	andeq	r4, sp, r4, lsr #16
    1104:	000d4a10 	andeq	r4, sp, r0, lsl sl
    1108:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    110c:	000d4a2c 	andeq	r4, sp, ip, lsr #20
    1110:	000f9410 	andeq	r9, pc, r0, lsl r4	; <UNPREDICTABLE>
    1114:	7d000310 	stcvc	3, cr0, [r0, #-64]	; 0xffffffc0
    1118:	0f9400f0 	svceq	0x009400f0
    111c:	0f981000 	svceq	0x00981000
    1120:	00021000 	andeq	r1, r2, r0
    1124:	0f982c7d 	svceq	0x00982c7d
    1128:	0f9c1000 	svceq	0x009c1000
    112c:	00021000 	andeq	r1, r2, r0
    1130:	0f9c247d 	svceq	0x009c247d
    1134:	112a1000 			; <UNDEFINED> instruction: 0x112a1000
    1138:	00031000 	andeq	r1, r3, r0
    113c:	0000f07d 	andeq	pc, r0, sp, ror r0	; <UNPREDICTABLE>
	...
    1148:	40000000 	andmi	r0, r0, r0
    114c:	5810000d 	ldmdapl	r0, {r0, r2, r3}
    1150:	0110000d 	tsteq	r0, sp
    1154:	0d585000 	ldcleq	0, cr5, [r8, #-0]
    1158:	112a1000 			; <UNDEFINED> instruction: 0x112a1000
    115c:	00011000 	andeq	r1, r1, r0
    1160:	0000005a 	andeq	r0, r0, sl, asr r0
	...
    116c:	000d4000 	andeq	r4, sp, r0
    1170:	000d5a10 	andeq	r5, sp, r0, lsl sl
    1174:	51000110 	tstpl	r0, r0, lsl r1
    1178:	10000d5a 	andne	r0, r0, sl, asr sp
    117c:	1000112a 	andne	r1, r0, sl, lsr #2
    1180:	00540001 	subseq	r0, r4, r1
	...
    11a0:	000d4000 	andeq	r4, sp, r0
    11a4:	000d5610 	andeq	r5, sp, r0, lsl r6
    11a8:	52000110 	andpl	r0, r0, #16, 2
    11ac:	10000d56 	andne	r0, r0, r6, asr sp
    11b0:	10000f92 	mulne	r0, r2, pc	; <UNPREDICTABLE>
    11b4:	9c5b0001 	mrrcls	0, 0, r0, fp, cr1
    11b8:	a410000f 	ldrge	r0, [r0], #-15
    11bc:	01100010 	tsteq	r0, r0, lsl r0
    11c0:	10a45b00 	adcne	r5, r4, r0, lsl #22
    11c4:	10ba1000 	adcsne	r1, sl, r0
    11c8:	00011000 	andeq	r1, r1, r0
    11cc:	0010ba50 	andseq	fp, r0, r0, asr sl
    11d0:	0010ee10 	andseq	lr, r0, r0, lsl lr
    11d4:	58000110 	stmdapl	r0, {r4, r8}
    11d8:	100010ee 	andne	r1, r0, lr, ror #1
    11dc:	100010fc 	strdne	r1, [r0], -ip
    11e0:	fc500001 	mrrc2	0, 0, r0, r0, cr1	; <UNPREDICTABLE>
    11e4:	0c100010 	ldceq	0, cr0, [r0], {16}
    11e8:	01100011 	tsteq	r0, r1, lsl r0
    11ec:	110c5b00 	tstne	ip, r0, lsl #22
    11f0:	11121000 	tstne	r2, r0
    11f4:	00011000 	andeq	r1, r1, r0
    11f8:	00111250 	andseq	r1, r1, r0, asr r2
    11fc:	00111410 	andseq	r1, r1, r0, lsl r4
    1200:	52000110 	andpl	r0, r0, #16, 2
    1204:	10001114 	andne	r1, r0, r4, lsl r1
    1208:	1000111e 	andne	r1, r0, lr, lsl r1
    120c:	1e560001 	cdpne	0, 5, cr0, cr6, cr1, {0}
    1210:	2a100011 	bcs	40125c <__RAM_SIZE+0x30125c>
    1214:	01100011 	tsteq	r0, r1, lsl r0
    1218:	00005200 	andeq	r5, r0, r0, lsl #4
	...
    1224:	0d400000 	stcleq	0, cr0, [r0, #-0]
    1228:	0d5d1000 	ldcleq	0, cr1, [sp, #-0]
    122c:	00011000 	andeq	r1, r1, r0
    1230:	000d5d53 	andeq	r5, sp, r3, asr sp
    1234:	00112a10 	andseq	r2, r1, r0, lsl sl
    1238:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
	...
    1250:	10000d40 	andne	r0, r0, r0, asr #26
    1254:	10000da8 	andne	r0, r0, r8, lsr #27
    1258:	00910002 	addseq	r0, r1, r2
    125c:	10000da8 	andne	r0, r0, r8, lsr #27
    1260:	10000f72 	andne	r0, r0, r2, ror pc
    1264:	a8910003 	ldmge	r1, {r0, r1}
    1268:	000f727f 	andeq	r7, pc, pc, ror r2	; <UNPREDICTABLE>
    126c:	000f9210 	andeq	r9, pc, r0, lsl r2	; <UNPREDICTABLE>
    1270:	91000210 	tstls	r0, r0, lsl r2
    1274:	000f9c00 	andeq	r9, pc, r0, lsl #24
    1278:	000fb010 	andeq	fp, pc, r0, lsl r0	; <UNPREDICTABLE>
    127c:	91000210 	tstls	r0, r0, lsl r2
    1280:	000fb000 	andeq	fp, pc, r0
    1284:	00108010 	andseq	r8, r0, r0, lsl r0
    1288:	91000310 	tstls	r0, r0, lsl r3
    128c:	10fc7fa8 	rscsne	r7, ip, r8, lsr #31
    1290:	110a1000 	mrsne	r1, (UNDEF: 10)
    1294:	00031000 	andeq	r1, r3, r0
    1298:	007fa891 			; <UNDEFINED> instruction: 0x007fa891
	...
    12ac:	40000000 	andmi	r0, r0, r0
    12b0:	b610000d 	ldrlt	r0, [r0], -sp
    12b4:	0210000d 	andseq	r0, r0, #13
    12b8:	b6089100 	strlt	r9, [r8], -r0, lsl #2
    12bc:	7010000d 	andsvc	r0, r0, sp
    12c0:	0210000f 	andseq	r0, r0, #15
    12c4:	70089100 	andvc	r9, r8, r0, lsl #2
    12c8:	7210000f 	andsvc	r0, r0, #15
    12cc:	0110000f 	tsteq	r0, pc
    12d0:	0f725300 	svceq	0x00725300
    12d4:	0fe41000 	svceq	0x00e41000
    12d8:	00021000 	andeq	r1, r2, r0
    12dc:	0fe40891 	svceq	0x00e40891
    12e0:	104c1000 	subne	r1, ip, r0
    12e4:	00011000 	andeq	r1, r1, r0
    12e8:	00104c53 	andseq	r4, r0, r3, asr ip
    12ec:	00112a10 	andseq	r2, r1, r0, lsl sl
    12f0:	91000210 	tstls	r0, r0, lsl r2
    12f4:	00000008 	andeq	r0, r0, r8
	...
    1300:	000d4000 	andeq	r4, sp, r0
    1304:	000f9c10 	andeq	r9, pc, r0, lsl ip	; <UNPREDICTABLE>
    1308:	91000210 	tstls	r0, r0, lsl r2
    130c:	000f9c0c 	andeq	r9, pc, ip, lsl #24
    1310:	00112a10 	andseq	r2, r1, r0, lsl sl
    1314:	91000210 	tstls	r0, r0, lsl r2
    1318:	0000000c 	andeq	r0, r0, ip
	...
    1328:	000d4000 	andeq	r4, sp, r0
    132c:	000f9c10 	andeq	r9, pc, r0, lsl ip	; <UNPREDICTABLE>
    1330:	91000210 	tstls	r0, r0, lsl r2
    1334:	000f9c10 	andeq	r9, pc, r0, lsl ip	; <UNPREDICTABLE>
    1338:	000fc210 	andeq	ip, pc, r0, lsl r2	; <UNPREDICTABLE>
    133c:	91000210 	tstls	r0, r0, lsl r2
    1340:	000fc210 	andeq	ip, pc, r0, lsl r2	; <UNPREDICTABLE>
    1344:	000fc610 	andeq	ip, pc, r0, lsl r6	; <UNPREDICTABLE>
    1348:	53000110 	movwpl	r0, #272	; 0x110
    134c:	10000fc6 	andne	r0, r0, r6, asr #31
    1350:	1000112a 	andne	r1, r0, sl, lsr #2
    1354:	10910002 	addsne	r0, r1, r2
	...
    1360:	00000001 	andeq	r0, r0, r1
    1364:	10000d8e 	andne	r0, r0, lr, lsl #27
    1368:	10000f72 	andne	r0, r0, r2, ror pc
    136c:	00910012 	addseq	r0, r1, r2, lsl r0
    1370:	f42908f6 	vld2.<illegal width 64>	{d0-d1}, [r9 :256], r6
    1374:	00000829 	andeq	r0, r0, r9, lsr #16
    1378:	00000000 	andeq	r0, r0, r0
    137c:	9f2d0000 	svcls	0x002d0000
    1380:	10000f9c 	mulne	r0, ip, pc	; <UNPREDICTABLE>
    1384:	1000112a 	andne	r1, r0, sl, lsr #2
    1388:	00910012 	addseq	r0, r1, r2, lsl r0
    138c:	f42908f6 	vld2.<illegal width 64>	{d0-d1}, [r9 :256], r6
    1390:	00000829 	andeq	r0, r0, r9, lsr #16
    1394:	00000000 	andeq	r0, r0, r0
    1398:	9f2d0000 	svcls	0x002d0000
	...
    13a4:	00010000 	andeq	r0, r1, r0
    13a8:	10000f92 	mulne	r0, r2, pc	; <UNPREDICTABLE>
    13ac:	10000f98 	mulne	r0, r8, pc	; <UNPREDICTABLE>
    13b0:	50900008 	addspl	r0, r0, r8
    13b4:	51900493 			; <UNDEFINED> instruction: 0x51900493
    13b8:	10600493 	mlsne	r0, r3, r4, r0
    13bc:	112a1000 			; <UNDEFINED> instruction: 0x112a1000
    13c0:	00081000 	andeq	r1, r8, r0
    13c4:	04935090 	ldreq	r5, [r3], #144	; 0x90
    13c8:	04935190 	ldreq	r5, [r3], #400	; 0x190
	...
    13e0:	10000dc0 	andne	r0, r0, r0, asr #27
    13e4:	10000dd2 	ldrdne	r0, [r0], -r2
    13e8:	81700004 	cmnhi	r0, r4
    13ec:	0dd29f78 	ldcleq	15, cr9, [r2, #480]	; 0x1e0
    13f0:	0dd51000 	ldcleq	0, cr1, [r5]
    13f4:	00011000 	andeq	r1, r1, r0
    13f8:	000e3650 	andeq	r3, lr, r0, asr r6
    13fc:	000e3e10 	andeq	r3, lr, r0, lsl lr
    1400:	50000110 	andpl	r0, r0, r0, lsl r1
    1404:	10000e3e 	andne	r0, r0, lr, lsr lr
    1408:	10000e78 	andne	r0, r0, r8, ror lr
    140c:	78570001 	ldmdavc	r7, {r0}^
    1410:	3410000e 	ldrcc	r0, [r0], #-14
    1414:	0410000f 	ldreq	r0, [r0], #-15
    1418:	78817700 	stmvc	r1, {r8, r9, sl, ip, sp, lr}
    141c:	000fb29f 	muleq	pc, pc, r2	; <UNPREDICTABLE>
    1420:	000fb410 	andeq	fp, pc, r0, lsl r4	; <UNPREDICTABLE>
    1424:	77000410 	smladvc	r0, r0, r4, r0
    1428:	009f7881 	addseq	r7, pc, r1, lsl #17
	...
    1438:	00000200 	andeq	r0, r0, r0, lsl #4
    143c:	000e1600 	andeq	r1, lr, r0, lsl #12
    1440:	000e1910 	andeq	r1, lr, r0, lsl r9
    1444:	50000110 	andpl	r0, r0, r0, lsl r1
    1448:	10000e19 	andne	r0, r0, r9, lsl lr
    144c:	10000f6c 	andne	r0, r0, ip, ror #30
    1450:	b2560001 	subslt	r0, r6, #1
    1454:	ba10000f 	blt	401498 <__RAM_SIZE+0x301498>
    1458:	0110000f 	tsteq	r0, pc
    145c:	0fc25600 	svceq	0x00c25600
    1460:	0fc61000 	svceq	0x00c61000
    1464:	00021000 	andeq	r1, r2, r0
    1468:	0fc69f30 	svceq	0x00c69f30
    146c:	11121000 	tstne	r2, r0
    1470:	00011000 	andeq	r1, r1, r0
    1474:	00000056 	andeq	r0, r0, r6, asr r0
    1478:	00000000 	andeq	r0, r0, r0
    147c:	68000000 	stmdavs	r0, {}	; <UNPREDICTABLE>
    1480:	a810000e 	ldmdage	r0, {r1, r2, r3}
    1484:	0610000e 	ldreq	r0, [r0], -lr
    1488:	04935800 	ldreq	r5, [r3], #2048	; 0x800
    148c:	00049359 	andeq	r9, r4, r9, asr r3
	...
    149c:	000e7400 	andeq	r7, lr, r0, lsl #8
    14a0:	000e8e10 	andeq	r8, lr, r0, lsl lr
    14a4:	50000610 	andpl	r0, r0, r0, lsl r6
    14a8:	93510493 	cmpls	r1, #-1828716544	; 0x93000000
    14ac:	000e8e04 	andeq	r8, lr, r4, lsl #28
    14b0:	000f7210 	andeq	r7, pc, r0, lsl r2	; <UNPREDICTABLE>
    14b4:	91000310 	tstls	r0, r0, lsl r3
    14b8:	0fb27fb8 	svceq	0x00b27fb8
    14bc:	112a1000 			; <UNDEFINED> instruction: 0x112a1000
    14c0:	00031000 	andeq	r1, r3, r0
    14c4:	007fb891 			; <UNDEFINED> instruction: 0x007fb891
	...
    14d0:	01010000 	mrseq	r0, (UNDEF: 1)
    14d4:	00000000 	andeq	r0, r0, r0
    14d8:	34000000 	strcc	r0, [r0], #-0
    14dc:	7210000f 	andsvc	r0, r0, #15
    14e0:	0110000f 	tsteq	r0, pc
    14e4:	0fb65700 	svceq	0x00b65700
    14e8:	0fc21000 	svceq	0x00c21000
    14ec:	00011000 	andeq	r1, r1, r0
    14f0:	000fc257 	andeq	ip, pc, r7, asr r2	; <UNPREDICTABLE>
    14f4:	000fc610 	andeq	ip, pc, r0, lsl r6	; <UNPREDICTABLE>
    14f8:	30000210 	andcc	r0, r0, r0, lsl r2
    14fc:	000fc69f 	muleq	pc, pc, r6	; <UNPREDICTABLE>
    1500:	0010d210 	andseq	sp, r0, r0, lsl r2
    1504:	57000110 	smladpl	r0, r0, r1, r0
    1508:	100010d2 	ldrdne	r1, [r0], -r2
    150c:	100010fa 	strdne	r1, [r0], -sl
    1510:	01770003 	cmneq	r7, r3
    1514:	0010fc9f 	mulseq	r0, pc, ip	; <UNPREDICTABLE>
    1518:	00111210 	andseq	r1, r1, r0, lsl r2
    151c:	57000110 	smladpl	r0, r0, r1, r0
	...
    1528:	00000001 	andeq	r0, r0, r1
    152c:	00000000 	andeq	r0, r0, r0
    1530:	0fc60000 	svceq	0x00c60000
    1534:	0fd01000 	svceq	0x00d01000
    1538:	00021000 	andeq	r1, r2, r0
    153c:	0fd00c91 	svceq	0x00d00c91
    1540:	0fd21000 	svceq	0x00d21000
    1544:	00011000 	andeq	r1, r1, r0
    1548:	00104c58 	andseq	r4, r0, r8, asr ip
    154c:	00105010 	andseq	r5, r0, r0, lsl r0
    1550:	53000110 	movwpl	r0, #272	; 0x110
    1554:	10001050 	andne	r1, r0, r0, asr r0
    1558:	100010ba 	strhne	r1, [r0], -sl
    155c:	fc580001 	mrrc2	0, 0, r0, r8, cr1
    1560:	12100010 	andsne	r0, r0, #16
    1564:	01100011 	tsteq	r0, r1, lsl r0
    1568:	00005800 	andeq	r5, r0, r0, lsl #16
    156c:	00000000 	andeq	r0, r0, r0
    1570:	00010000 	andeq	r0, r1, r0
    1574:	10001070 	andne	r1, r0, r0, ror r0
    1578:	1000112a 	andne	r1, r0, sl, lsr #2
    157c:	005b0001 	subseq	r0, fp, r1
    1580:	00000000 	andeq	r0, r0, r0
    1584:	30000000 	andcc	r0, r0, r0
    1588:	34100011 	ldrcc	r0, [r0], #-17	; 0xffffffef
    158c:	02100011 	andseq	r0, r0, #17
    1590:	34007d00 	strcc	r7, [r0], #-3328	; 0xfffff300
    1594:	38100011 	ldmdacc	r0, {r0, r4}
    1598:	02100011 	andseq	r0, r0, #17
    159c:	38247d00 	stmdacc	r4!, {r8, sl, fp, ip, sp, lr}
    15a0:	3a100011 	bcc	4015ec <__RAM_SIZE+0x3015ec>
    15a4:	02100011 	andseq	r0, r0, #17
    15a8:	3a2c7d00 	bcc	b209b0 <__RAM_SIZE+0xa209b0>
    15ac:	54100011 	ldrpl	r0, [r0], #-17	; 0xffffffef
    15b0:	03100014 	tsteq	r0, #20
    15b4:	01807d00 	orreq	r7, r0, r0, lsl #26
    15b8:	10001454 	andne	r1, r0, r4, asr r4
    15bc:	10001458 	andne	r1, r0, r8, asr r4
    15c0:	2c7d0002 	ldclcs	0, cr0, [sp], #-8
    15c4:	10001458 	andne	r1, r0, r8, asr r4
    15c8:	1000145c 	andne	r1, r0, ip, asr r4
    15cc:	247d0002 	ldrbtcs	r0, [sp], #-2
    15d0:	1000145c 	andne	r1, r0, ip, asr r4
    15d4:	100014c6 	andne	r1, r0, r6, asr #9
    15d8:	807d0003 	rsbshi	r0, sp, r3
    15dc:	00000001 	andeq	r0, r0, r1
	...
    15e8:	00113000 	andseq	r3, r1, r0
    15ec:	00114e10 	andseq	r4, r1, r0, lsl lr
    15f0:	50000110 	andpl	r0, r0, r0, lsl r1
    15f4:	1000114e 	andne	r1, r0, lr, asr #2
    15f8:	100014c6 	andne	r1, r0, r6, asr #9
    15fc:	9c910003 	ldcls	0, cr0, [r1], {3}
    1600:	0000007f 	andeq	r0, r0, pc, ror r0
	...
    160c:	00113000 	andseq	r3, r1, r0
    1610:	00115010 	andseq	r5, r1, r0, lsl r0
    1614:	51000110 	tstpl	r0, r0, lsl r1
    1618:	10001150 	andne	r1, r0, r0, asr r1
    161c:	100014c6 	andne	r1, r0, r6, asr #9
    1620:	a8910003 	ldmge	r1, {r0, r1}
    1624:	0000007f 	andeq	r0, r0, pc, ror r0
	...
    1630:	00113000 	andseq	r3, r1, r0
    1634:	00114a10 	andseq	r4, r1, r0, lsl sl
    1638:	52000110 	andpl	r0, r0, #16, 2
    163c:	1000114a 	andne	r1, r0, sl, asr #2
    1640:	100014c6 	andne	r1, r0, r6, asr #9
    1644:	005a0001 	subseq	r0, sl, r1
	...
    1650:	30000000 	andcc	r0, r0, r0
    1654:	4c100011 	ldcmi	0, cr0, [r0], {17}
    1658:	01100011 	tsteq	r0, r1, lsl r0
    165c:	114c5300 	mrsne	r5, SPSR_mon
    1660:	14c61000 	strbne	r1, [r6], #0
    1664:	00011000 	andeq	r1, r1, r0
    1668:	0000005b 	andeq	r0, r0, fp, asr r0
	...
    1678:	30000000 	andcc	r0, r0, r0
    167c:	b6100011 			; <UNDEFINED> instruction: 0xb6100011
    1680:	02100011 	andseq	r0, r0, #17
    1684:	b6009100 	strlt	r9, [r0], -r0, lsl #2
    1688:	da100011 	ble	4016d4 <__RAM_SIZE+0x3016d4>
    168c:	06100011 			; <UNDEFINED> instruction: 0x06100011
    1690:	04935800 	ldreq	r5, [r3], #2048	; 0x800
    1694:	da049359 	ble	126400 <__RAM_SIZE+0x26400>
    1698:	72100011 	andsvc	r0, r0, #17
    169c:	02100012 	andseq	r0, r0, #18
    16a0:	72009100 	andvc	r9, r0, #0, 2
    16a4:	0a100012 	beq	4016f4 <__RAM_SIZE+0x3016f4>
    16a8:	06100013 			; <UNDEFINED> instruction: 0x06100013
    16ac:	04935800 	ldreq	r5, [r3], #2048	; 0x800
    16b0:	2e049359 	mcrcs	3, 0, r9, cr4, cr9, {2}
    16b4:	aa100013 	bge	401708 <__RAM_SIZE+0x301708>
    16b8:	06100013 			; <UNDEFINED> instruction: 0x06100013
    16bc:	04935800 	ldreq	r5, [r3], #2048	; 0x800
    16c0:	00049359 	andeq	r9, r4, r9, asr r3
	...
    16d0:	30000000 	andcc	r0, r0, r0
    16d4:	be100011 	mrclt	0, 0, r0, cr0, cr1, {0}
    16d8:	02100011 	andseq	r0, r0, #17
    16dc:	c0089100 	andgt	r9, r8, r0, lsl #2
    16e0:	da100011 	ble	40172c <__RAM_SIZE+0x30172c>
    16e4:	01100011 	tsteq	r0, r1, lsl r0
    16e8:	11da5500 	bicsne	r5, sl, r0, lsl #10
    16ec:	127c1000 	rsbsne	r1, ip, #0
    16f0:	00021000 	andeq	r1, r2, r0
    16f4:	127c0891 	rsbsne	r0, ip, #9502720	; 0x910000
    16f8:	134a1000 	movtne	r1, #40960	; 0xa000
    16fc:	00011000 	andeq	r1, r1, r0
    1700:	00000055 	andeq	r0, r0, r5, asr r0
	...
    1710:	30000000 	andcc	r0, r0, r0
    1714:	20100011 	andscs	r0, r0, r1, lsl r0
    1718:	02100014 	andseq	r0, r0, #20
    171c:	200c9100 	andcs	r9, ip, r0, lsl #2
    1720:	72100014 	andsvc	r0, r0, #20
    1724:	02100014 	andseq	r0, r0, #20
    1728:	720c9100 	andvc	r9, ip, #0, 2
    172c:	76100014 			; <UNDEFINED> instruction: 0x76100014
    1730:	01100014 	tsteq	r0, r4, lsl r0
    1734:	14765300 	ldrbtne	r5, [r6], #-768	; 0xfffffd00
    1738:	148e1000 	strne	r1, [lr], #0
    173c:	00011000 	andeq	r1, r1, r0
    1740:	00148e51 	andseq	r8, r4, r1, asr lr
    1744:	0014c610 	andseq	ip, r4, r0, lsl r6
    1748:	91000210 	tstls	r0, r0, lsl r2
    174c:	0000000c 	andeq	r0, r0, ip
	...
    1758:	00113000 	andseq	r3, r1, r0
    175c:	00145c10 	andseq	r5, r4, r0, lsl ip
    1760:	91000210 	tstls	r0, r0, lsl r2
    1764:	00145c10 	andseq	r5, r4, r0, lsl ip
    1768:	0014c610 	andseq	ip, r4, r0, lsl r6
    176c:	91000210 	tstls	r0, r0, lsl r2
    1770:	00000010 	andeq	r0, r0, r0, lsl r0
    1774:	00000000 	andeq	r0, r0, r0
    1778:	00000200 	andeq	r0, r0, r0, lsl #4
    177c:	00000101 	andeq	r0, r0, r1, lsl #2
	...
    1788:	00000101 	andeq	r0, r0, r1, lsl #2
    178c:	00000101 	andeq	r0, r0, r1, lsl #2
    1790:	00000000 	andeq	r0, r0, r0
    1794:	00000101 	andeq	r0, r0, r1, lsl #2
    1798:	01010000 	mrseq	r0, (UNDEF: 1)
    179c:	01010000 	mrseq	r0, (UNDEF: 1)
    17a0:	01010000 	mrseq	r0, (UNDEF: 1)
    17a4:	48000000 	stmdami	r0, {}	; <UNPREDICTABLE>
    17a8:	c0100011 	andsgt	r0, r0, r1, lsl r0
    17ac:	02100011 	andseq	r0, r0, #17
    17b0:	c09f3000 	addsgt	r3, pc, r0
    17b4:	c8100011 	ldmdagt	r0, {r0, r4}
    17b8:	01100011 	tsteq	r0, r1, lsl r0
    17bc:	11c85400 	bicne	r5, r8, r0, lsl #8
    17c0:	11d81000 	bicsne	r1, r8, r0
    17c4:	00031000 	andeq	r1, r3, r0
    17c8:	d89f0174 	ldmle	pc, {r2, r4, r5, r6, r8}	; <UNPREDICTABLE>
    17cc:	da100011 	ble	401818 <__RAM_SIZE+0x301818>
    17d0:	01100011 	tsteq	r0, r1, lsl r0
    17d4:	11da5400 	bicsne	r5, sl, r0, lsl #8
    17d8:	127c1000 	rsbsne	r1, ip, #0
    17dc:	00021000 	andeq	r1, r2, r0
    17e0:	127c9f30 	rsbsne	r9, ip, #48, 30	; 0xc0
    17e4:	13641000 	cmnne	r4, #0
    17e8:	00011000 	andeq	r1, r1, r0
    17ec:	00136454 	andseq	r6, r3, r4, asr r4
    17f0:	00137e10 	andseq	r7, r3, r0, lsl lr
    17f4:	52000110 	andpl	r0, r0, #16, 2
    17f8:	1000137e 	andne	r1, r0, lr, ror r3
    17fc:	10001386 	andne	r1, r0, r6, lsl #7
    1800:	86540001 	ldrbhi	r0, [r4], -r1
    1804:	96100013 			; <UNDEFINED> instruction: 0x96100013
    1808:	03100013 	tsteq	r0, #19
    180c:	9f017400 	svcls	0x00017400
    1810:	10001396 	mulne	r0, r6, r3
    1814:	1000139c 	mulne	r0, ip, r3
    1818:	9c540001 	mrrcls	0, 0, r0, r4, cr1
    181c:	aa100013 	bge	401870 <__RAM_SIZE+0x301870>
    1820:	03100013 	tsteq	r0, #19
    1824:	9f017400 	svcls	0x00017400
    1828:	100013aa 	andne	r1, r0, sl, lsr #7
    182c:	100013c6 	andne	r1, r0, r6, asr #7
    1830:	c6540001 	ldrbgt	r0, [r4], -r1
    1834:	16100013 			; <UNDEFINED> instruction: 0x16100013
    1838:	01100014 	tsteq	r0, r4, lsl r0
    183c:	14165100 	ldrne	r5, [r6], #-256	; 0xffffff00
    1840:	142a1000 	strtne	r1, [sl], #-0
    1844:	00011000 	andeq	r1, r1, r0
    1848:	00142a54 	andseq	r2, r4, r4, asr sl
    184c:	00143810 	andseq	r3, r4, r0, lsl r8
    1850:	74000310 	strvc	r0, [r0], #-784	; 0xfffffcf0
    1854:	14389f01 	ldrtne	r9, [r8], #-3841	; 0xfffff0ff
    1858:	14521000 	ldrbne	r1, [r2], #-0
    185c:	00011000 	andeq	r1, r1, r0
    1860:	00145c54 	andseq	r5, r4, r4, asr ip
    1864:	00147610 	andseq	r7, r4, r0, lsl r6
    1868:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    186c:	10001476 	andne	r1, r0, r6, ror r4
    1870:	10001484 	andne	r1, r0, r4, lsl #9
    1874:	01740003 	cmneq	r4, r3
    1878:	0014849f 	mulseq	r4, pc, r4	; <UNPREDICTABLE>
    187c:	00149e10 	andseq	r9, r4, r0, lsl lr
    1880:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    1884:	1000149e 	mulne	r0, lr, r4
    1888:	100014ac 	andne	r1, r0, ip, lsr #9
    188c:	01740003 	cmneq	r4, r3
    1890:	0014ac9f 	mulseq	r4, pc, ip	; <UNPREDICTABLE>
    1894:	0014b610 	andseq	fp, r4, r0, lsl r6
    1898:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    189c:	100014b6 			; <UNDEFINED> instruction: 0x100014b6
    18a0:	100014c4 	andne	r1, r0, r4, asr #9
    18a4:	01740003 	cmneq	r4, r3
    18a8:	0014c49f 	mulseq	r4, pc, r4	; <UNPREDICTABLE>
    18ac:	0014c610 	andseq	ip, r4, r0, lsl r6
    18b0:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
	...
    18bc:	00000003 	andeq	r0, r0, r3
    18c0:	00000000 	andeq	r0, r0, r0
    18c4:	11480000 	mrsne	r0, (UNDEF: 72)
    18c8:	12ce1000 	sbcne	r1, lr, #0
    18cc:	000a1000 	andeq	r1, sl, r0
    18d0:	0000089e 	muleq	r0, lr, r8
    18d4:	00000000 	andeq	r0, r0, r0
    18d8:	12ce0000 	sbcne	r0, lr, #0
    18dc:	12d01000 	sbcsne	r1, r0, #0
    18e0:	00061000 	andeq	r1, r6, r0
    18e4:	53049352 	movwpl	r9, #17234	; 0x4352
    18e8:	12d00493 	sbcsne	r0, r0, #-1828716544	; 0x93000000
    18ec:	130a1000 	movwne	r1, #40960	; 0xa000
    18f0:	00031000 	andeq	r1, r3, r0
    18f4:	0a7fa091 	beq	1fe9b40 <__RAM_SIZE+0x1ee9b40>
    18f8:	2e100013 	mrccs	0, 0, r0, cr0, cr3, {0}
    18fc:	06100013 			; <UNDEFINED> instruction: 0x06100013
    1900:	04935700 	ldreq	r5, [r3], #1792	; 0x700
    1904:	2e049358 	mcrcs	3, 0, r9, cr4, cr8, {2}
    1908:	aa100013 	bge	40195c <__RAM_SIZE+0x30195c>
    190c:	03100013 	tsteq	r0, #19
    1910:	7fa09100 	svcvc	0x00a09100
	...
    191c:	00000001 	andeq	r0, r0, r1
    1920:	00010100 	andeq	r0, r1, r0, lsl #2
    1924:	00000000 	andeq	r0, r0, r0
    1928:	100011a2 	andne	r1, r0, r2, lsr #3
    192c:	100011b6 			; <UNDEFINED> instruction: 0x100011b6
    1930:	9f300002 	svcls	0x00300002
    1934:	100011b6 			; <UNDEFINED> instruction: 0x100011b6
    1938:	100011da 	ldrdne	r1, [r0], -sl
    193c:	ac910003 	ldcge	0, cr0, [r1], {3}
    1940:	0012627f 	andseq	r6, r2, pc, ror r2
    1944:	00126210 	andseq	r6, r2, r0, lsl r2
    1948:	30000210 	andcc	r0, r0, r0, lsl r2
    194c:	0012629f 	mulseq	r2, pc, r2	; <UNPREDICTABLE>
    1950:	00127810 	andseq	r7, r2, r0, lsl r8
    1954:	31000210 	tstcc	r0, r0, lsl r2
    1958:	0012789f 	mulseq	r2, pc, r8	; <UNPREDICTABLE>
    195c:	00145210 	andseq	r5, r4, r0, lsl r2
    1960:	91000310 	tstls	r0, r0, lsl r3
    1964:	145c7fac 	ldrbne	r7, [ip], #-4012	; 0xfffff054
    1968:	14c61000 	strbne	r1, [r6], #0
    196c:	00031000 	andeq	r1, r3, r0
    1970:	007fac91 			; <UNDEFINED> instruction: 0x007fac91
	...
    1984:	00128600 	andseq	r8, r2, r0, lsl #12
    1988:	00128910 	andseq	r8, r2, r0, lsl r9
    198c:	50000110 	andpl	r0, r0, r0, lsl r1
    1990:	10001289 	andne	r1, r0, r9, lsl #5
    1994:	100013d6 	ldrdne	r1, [r0], -r6
    1998:	d6560001 	ldrble	r0, [r6], -r1
    199c:	16100013 			; <UNDEFINED> instruction: 0x16100013
    19a0:	01100014 	tsteq	r0, r4, lsl r0
    19a4:	14165200 	ldrne	r5, [r6], #-512	; 0xfffffe00
    19a8:	14521000 	ldrbne	r1, [r2], #-0
    19ac:	00011000 	andeq	r1, r1, r0
    19b0:	00145c56 	andseq	r5, r4, r6, asr ip
    19b4:	0014c610 	andseq	ip, r4, r0, lsl r6
    19b8:	56000110 			; <UNDEFINED> instruction: 0x56000110
	...
    19c8:	100012b0 			; <UNDEFINED> instruction: 0x100012b0
    19cc:	100012b3 			; <UNDEFINED> instruction: 0x100012b3
    19d0:	93520006 	cmpls	r2, #6
    19d4:	04935304 	ldreq	r5, [r3], #772	; 0x304
    19d8:	100012b3 			; <UNDEFINED> instruction: 0x100012b3
    19dc:	100012ce 	andne	r1, r0, lr, asr #5
    19e0:	a0910003 	addsge	r0, r1, r3
    19e4:	0000007f 	andeq	r0, r0, pc, ror r0
	...
    19f0:	00000101 	andeq	r0, r0, r1, lsl #2
    19f4:	01010000 	mrseq	r0, (UNDEF: 1)
    19f8:	0012b600 	andseq	fp, r2, r0, lsl #12
    19fc:	0012b910 	andseq	fp, r2, r0, lsl r9
    1a00:	50000110 	andpl	r0, r0, r0, lsl r1
    1a04:	100012b9 			; <UNDEFINED> instruction: 0x100012b9
    1a08:	100012ee 	andne	r1, r0, lr, ror #5
    1a0c:	ee570001 	cdp	0, 5, cr0, cr7, cr1, {0}
    1a10:	f2100012 	vqadd.s16	d0, d0, d2
    1a14:	02100012 	andseq	r0, r0, #18
    1a18:	f29f3000 	vaddl.s16	<illegal reg q1.5>, d15, d0
    1a1c:	08100012 	ldmdaeq	r0, {r1, r4}
    1a20:	01100013 	tsteq	r0, r3, lsl r0
    1a24:	132e5700 			; <UNDEFINED> instruction: 0x132e5700
    1a28:	13721000 	cmnne	r2, #0
    1a2c:	00011000 	andeq	r1, r1, r0
    1a30:	00137257 	andseq	r7, r3, r7, asr r2
    1a34:	00137e10 	andseq	r7, r3, r0, lsl lr
    1a38:	51000110 	tstpl	r0, r0, lsl r1
	...
    1a48:	1000134a 	andne	r1, r0, sl, asr #6
    1a4c:	10001384 	andne	r1, r0, r4, lsl #7
    1a50:	84550001 	ldrbhi	r0, [r5], #-1
    1a54:	98100013 	ldmdals	r0, {r0, r1, r4}
    1a58:	01100013 	tsteq	r0, r3, lsl r0
    1a5c:	00005300 	andeq	r5, r0, r0, lsl #6
    1a60:	00000000 	andeq	r0, r0, r0
    1a64:	0c780000 	ldcleq	0, cr0, [r8], #-0
    1a68:	0c7c1000 	ldcleq	0, cr1, [ip], #-0
    1a6c:	00021000 	andeq	r1, r2, r0
    1a70:	0c7c007d 	ldcleq	0, cr0, [ip], #-500	; 0xfffffe0c
    1a74:	0c7e1000 	ldcleq	0, cr1, [lr], #-0
    1a78:	00021000 	andeq	r1, r2, r0
    1a7c:	0c7e247d 	cfldrdeq	mvd2, [lr], #-500	; 0xfffffe0c
    1a80:	0d3a1000 	ldceq	0, cr1, [sl, #-0]
    1a84:	00031000 	andeq	r1, r3, r0
    1a88:	3a00f87d 	bcc	3fc84 <__HEAP_SIZE+0x3ec84>
    1a8c:	3e10000d 	cdpcc	0, 1, cr0, cr0, cr13, {0}
    1a90:	0210000d 	andseq	r0, r0, #13
    1a94:	00247d00 	eoreq	r7, r4, r0, lsl #26
	...
    1aa4:	78000000 	stmdavc	r0, {}	; <UNPREDICTABLE>
    1aa8:	ae10000c 	cdpge	0, 1, cr0, cr0, cr12, {0}
    1aac:	0110000c 	tsteq	r0, ip
    1ab0:	0cae5000 	stceq	0, cr5, [lr]
    1ab4:	0d0c1000 	stceq	0, cr1, [ip, #-0]
    1ab8:	00031000 	andeq	r1, r3, r0
    1abc:	0c7fac91 	ldcleq	12, cr10, [pc], #-580	; 1880 <__HEAP_SIZE+0x880>
    1ac0:	1010000d 	andsne	r0, r0, sp
    1ac4:	0110000d 	tsteq	r0, sp
    1ac8:	0d105000 	ldceq	0, cr5, [r0, #-0]
    1acc:	0d3e1000 	ldceq	0, cr1, [lr, #-0]
    1ad0:	00031000 	andeq	r1, r3, r0
    1ad4:	007fac91 			; <UNDEFINED> instruction: 0x007fac91
	...
    1ae4:	78000000 	stmdavc	r0, {}	; <UNPREDICTABLE>
    1ae8:	ae10000c 	cdpge	0, 1, cr0, cr0, cr12, {0}
    1aec:	0110000c 	tsteq	r0, ip
    1af0:	0cae5100 	stfeqs	f5, [lr]
    1af4:	0d0c1000 	stceq	0, cr1, [ip, #-0]
    1af8:	00031000 	andeq	r1, r3, r0
    1afc:	0c7fb091 	ldcleq	0, cr11, [pc], #-580	; 18c0 <__HEAP_SIZE+0x8c0>
    1b00:	1010000d 	andsne	r0, r0, sp
    1b04:	0110000d 	tsteq	r0, sp
    1b08:	0d105100 	ldfeqs	f5, [r0, #-0]
    1b0c:	0d3e1000 	ldceq	0, cr1, [lr, #-0]
    1b10:	00031000 	andeq	r1, r3, r0
    1b14:	007fb091 			; <UNDEFINED> instruction: 0x007fb091
	...
    1b24:	78000000 	stmdavc	r0, {}	; <UNPREDICTABLE>
    1b28:	ae10000c 	cdpge	0, 1, cr0, cr0, cr12, {0}
    1b2c:	0110000c 	tsteq	r0, ip
    1b30:	0cae5200 	sfmeq	f5, 4, [lr]
    1b34:	0d0c1000 	stceq	0, cr1, [ip, #-0]
    1b38:	00031000 	andeq	r1, r3, r0
    1b3c:	0c7fb491 	cfldrdeq	mvd11, [pc], #-580	; 1900 <__HEAP_SIZE+0x900>
    1b40:	1010000d 	andsne	r0, r0, sp
    1b44:	0110000d 	tsteq	r0, sp
    1b48:	0d105200 	lfmeq	f5, 4, [r0, #-0]
    1b4c:	0d3e1000 	ldceq	0, cr1, [lr, #-0]
    1b50:	00031000 	andeq	r1, r3, r0
    1b54:	007fb491 			; <UNDEFINED> instruction: 0x007fb491
	...
    1b60:	78000000 	stmdavc	r0, {}	; <UNPREDICTABLE>
    1b64:	9810000c 	ldmdals	r0, {r2, r3}
    1b68:	0110000c 	tsteq	r0, ip
    1b6c:	0c985300 	ldceq	3, cr5, [r8], {0}
    1b70:	0d3e1000 	ldceq	0, cr1, [lr, #-0]
    1b74:	00011000 	andeq	r1, r1, r0
    1b78:	0000005b 	andeq	r0, r0, fp, asr r0
	...
    1b88:	78000000 	stmdavc	r0, {}	; <UNPREDICTABLE>
    1b8c:	ae10000c 	cdpge	0, 1, cr0, cr0, cr12, {0}
    1b90:	0210000c 	andseq	r0, r0, #12
    1b94:	ae009100 	mvfges	f1, f0
    1b98:	d010000c 	andsle	r0, r0, ip
    1b9c:	0610000c 	ldreq	r0, [r0], -ip
    1ba0:	04935500 	ldreq	r5, [r3], #1280	; 0x500
    1ba4:	d0049356 	andle	r9, r4, r6, asr r3
    1ba8:	e410000c 	ldr	r0, [r0], #-12
    1bac:	0610000c 	ldreq	r0, [r0], -ip
    1bb0:	04935000 	ldreq	r5, [r3], #0
    1bb4:	e4049351 	str	r9, [r4], #-849	; 0xfffffcaf
    1bb8:	0c10000c 	ldceq	0, cr0, [r0], {12}
    1bbc:	0610000d 	ldreq	r0, [r0], -sp
    1bc0:	04935500 	ldreq	r5, [r3], #1280	; 0x500
    1bc4:	0c049356 	stceq	3, cr9, [r4], {86}	; 0x56
    1bc8:	1010000d 	andsne	r0, r0, sp
    1bcc:	0210000d 	andseq	r0, r0, #13
    1bd0:	00009100 	andeq	r9, r0, r0, lsl #2
	...
    1bdc:	78000000 	stmdavc	r0, {}	; <UNPREDICTABLE>
    1be0:	9e10000c 	cdpls	0, 1, cr0, cr0, cr12, {0}
    1be4:	0210000c 	andseq	r0, r0, #12
    1be8:	9e209100 	abslss	f1, f0
    1bec:	3e10000c 	cdpcc	0, 1, cr0, cr0, cr12, {0}
    1bf0:	0110000d 	tsteq	r0, sp
    1bf4:	00005a00 	andeq	r5, r0, r0, lsl #20
    1bf8:	00000000 	andeq	r0, r0, r0
    1bfc:	00020000 	andeq	r0, r2, r0
	...
    1c08:	0c940000 	ldceq	0, cr0, [r4], {0}
    1c0c:	0cae1000 	stceq	0, cr1, [lr]
    1c10:	00021000 	andeq	r1, r2, r0
    1c14:	0cae9f30 	stceq	15, cr9, [lr], #192	; 0xc0
    1c18:	0cb81000 	ldceq	0, cr1, [r8]
    1c1c:	00011000 	andeq	r1, r1, r0
    1c20:	000cb854 	andeq	fp, ip, r4, asr r8
    1c24:	000ce410 	andeq	lr, ip, r0, lsl r4
    1c28:	59000110 	stmdbpl	r0, {r4, r8}
    1c2c:	10000ce4 	andne	r0, r0, r4, ror #25
    1c30:	10000d0c 	andne	r0, r0, ip, lsl #26
    1c34:	0c540001 	mrrceq	0, 0, r0, r4, cr1
    1c38:	1010000d 	andsne	r0, r0, sp
    1c3c:	0210000d 	andseq	r0, r0, #13
    1c40:	109f3000 	addsne	r3, pc, r0
    1c44:	3e10000d 	cdpcc	0, 1, cr0, cr0, cr13, {0}
    1c48:	0110000d 	tsteq	r0, sp
    1c4c:	00005900 	andeq	r5, r0, r0, lsl #18
	...
    1c58:	0cae0000 	stceq	0, cr0, [lr]
    1c5c:	0cbc1000 	ldceq	0, cr1, [ip]
    1c60:	00011000 	andeq	r1, r1, r0
    1c64:	000cf253 	andeq	pc, ip, r3, asr r2	; <UNPREDICTABLE>
    1c68:	000d0c10 	andeq	r0, sp, r0, lsl ip
    1c6c:	53000110 	movwpl	r0, #272	; 0x110
	...
    1c78:	10000be4 	andne	r0, r0, r4, ror #23
    1c7c:	10000be6 	andne	r0, r0, r6, ror #23
    1c80:	007d0002 	rsbseq	r0, sp, r2
    1c84:	10000be6 	andne	r0, r0, r6, ror #23
    1c88:	10000be8 	andne	r0, r0, r8, ror #23
    1c8c:	147d0002 	ldrbtne	r0, [sp], #-2
    1c90:	10000be8 	andne	r0, r0, r8, ror #23
    1c94:	10000c76 	andne	r0, r0, r6, ror ip
    1c98:	d87d0003 	ldmdale	sp!, {r0, r1}^
    1c9c:	000c7600 	andeq	r7, ip, r0, lsl #12
    1ca0:	000c7810 	andeq	r7, ip, r0, lsl r8
    1ca4:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    1ca8:	00000014 	andeq	r0, r0, r4, lsl r0
	...
    1cb4:	000be400 	andeq	lr, fp, r0, lsl #8
    1cb8:	000c7310 	andeq	r7, ip, r0, lsl r3
    1cbc:	50000110 	andpl	r0, r0, r0, lsl r1
    1cc0:	10000c73 	andne	r0, r0, r3, ror ip
    1cc4:	10000c78 	andne	r0, r0, r8, ror ip
    1cc8:	01f30004 	mvnseq	r0, r4
    1ccc:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    1cd8:	0be40000 	bleq	ff901ce0 <__StackTop+0xc7801ce0>
    1cdc:	0c731000 	ldcleq	0, cr1, [r3], #-0
    1ce0:	00011000 	andeq	r1, r1, r0
    1ce4:	000c7351 	andeq	r7, ip, r1, asr r3
    1ce8:	000c7810 	andeq	r7, ip, r0, lsl r8
    1cec:	f3000410 	vqshl.u8	d0, d0, d0
    1cf0:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
    1cfc:	e4000000 	str	r0, [r0], #-0
    1d00:	7310000b 	tstvc	r0, #11
    1d04:	0110000c 	tsteq	r0, ip
    1d08:	0c735200 	lfmeq	f5, 2, [r3], #-0
    1d0c:	0c781000 	ldcleq	0, cr1, [r8], #-0
    1d10:	00041000 	andeq	r1, r4, r0
    1d14:	9f5201f3 	svcls	0x005201f3
	...
    1d24:	10000be4 	andne	r0, r0, r4, ror #23
    1d28:	10000c73 	andne	r0, r0, r3, ror ip
    1d2c:	73530001 	cmpvc	r3, #1
    1d30:	7810000c 	ldmdavc	r0, {r2, r3}
    1d34:	0410000c 	ldreq	r0, [r0], #-12
    1d38:	5301f300 	movwpl	pc, #4864	; 0x1300	; <UNPREDICTABLE>
    1d3c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    1d4c:	e4000000 	str	r0, [r0], #-0
    1d50:	0210000b 	andseq	r0, r0, #11
    1d54:	0210000c 	andseq	r0, r0, #12
    1d58:	02009100 	andeq	r9, r0, #0, 2
    1d5c:	1c10000c 	ldcne	0, cr0, [r0], {12}
    1d60:	0110000c 	tsteq	r0, ip
    1d64:	0c1c5400 	cfldrseq	mvf5, [ip], {-0}
    1d68:	0c281000 	stceq	0, cr1, [r8], #-0
    1d6c:	00011000 	andeq	r1, r1, r0
    1d70:	000c285c 	andeq	r2, ip, ip, asr r8
    1d74:	000c5610 	andeq	r5, ip, r0, lsl r6
    1d78:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    1d7c:	10000c56 	andne	r0, r0, r6, asr ip
    1d80:	10000c58 	andne	r0, r0, r8, asr ip
    1d84:	00910002 	addseq	r0, r1, r2
	...
    1d94:	10000be4 	andne	r0, r0, r4, ror #23
    1d98:	10000bf4 	strdne	r0, [r0], -r4
    1d9c:	14910002 	ldrne	r0, [r1], #2
    1da0:	10000bf4 	strdne	r0, [r0], -r4
    1da4:	10000c78 	andne	r0, r0, r8, ror ip
    1da8:	00560001 	subseq	r0, r6, r1
    1dac:	00000000 	andeq	r0, r0, r0
    1db0:	02000000 	andeq	r0, r0, #0
	...
    1dbc:	ee000000 	cdp	0, 0, cr0, cr0, cr0, {0}
    1dc0:	0210000b 	andseq	r0, r0, #11
    1dc4:	0210000c 	andseq	r0, r0, #12
    1dc8:	029f3000 	addseq	r3, pc, #0
    1dcc:	0e10000c 	cdpeq	0, 1, cr0, cr0, cr12, {0}
    1dd0:	0110000c 	tsteq	r0, ip
    1dd4:	0c0e5e00 	stceq	14, cr5, [lr], {-0}
    1dd8:	0c281000 	stceq	0, cr1, [r8], #-0
    1ddc:	00011000 	andeq	r1, r1, r0
    1de0:	000c2857 	andeq	r2, ip, r7, asr r8
    1de4:	000c5610 	andeq	r5, ip, r0, lsl r6
    1de8:	5e000110 	fltpls	f0, r0
    1dec:	10000c56 	andne	r0, r0, r6, asr ip
    1df0:	10000c58 	andne	r0, r0, r8, asr ip
    1df4:	9f300002 	svcls	0x00300002
    1df8:	10000c58 	andne	r0, r0, r8, asr ip
    1dfc:	10000c78 	andne	r0, r0, r8, ror ip
    1e00:	00570001 	subseq	r0, r7, r1
	...
    1e14:	02000000 	andeq	r0, r0, #0
    1e18:	0610000c 	ldreq	r0, [r0], -ip
    1e1c:	0110000c 	tsteq	r0, ip
    1e20:	0c065c00 	stceq	12, cr5, [r6], {-0}
    1e24:	0c0a1000 	stceq	0, cr1, [sl], {-0}
    1e28:	00031000 	andeq	r1, r3, r0
    1e2c:	0a9f507c 	beq	fe7d6024 <__StackTop+0xc66d6024>
    1e30:	2810000c 	ldmdacs	r0, {r2, r3}
    1e34:	1210000c 	andsne	r0, r0, #12
    1e38:	74007400 	strvc	r7, [r0], #-1024	; 0xfffffc00
    1e3c:	7530f700 	ldrvc	pc, [r0, #-1792]!	; 0xfffff900
    1e40:	1b30f700 	blne	c3fa48 <__RAM_SIZE+0xb3fa48>
    1e44:	007500f7 	ldrshteq	r0, [r5], #-7
    1e48:	349f1c1e 	ldrcc	r1, [pc], #3102	; 1e50 <__HEAP_SIZE+0xe50>
    1e4c:	4410000c 	ldrmi	r0, [r0], #-12
    1e50:	0110000c 	tsteq	r0, ip
    1e54:	0c445c00 	mcrreq	12, 0, r5, r4, cr0
    1e58:	0c521000 	mraeq	r1, r2, acc0
    1e5c:	00121000 	andseq	r1, r2, r0
    1e60:	00740074 	rsbseq	r0, r4, r4, ror r0
    1e64:	007530f7 	ldrshteq	r3, [r5], #-7
    1e68:	f71b30f7 			; <UNDEFINED> instruction: 0xf71b30f7
    1e6c:	1e007500 	cfsh32ne	mvfx7, mvfx0, #0
    1e70:	0c529f1c 	mrrceq	15, 1, r9, r2, cr12
    1e74:	0c561000 	mraeq	r1, r6, acc0
    1e78:	00011000 	andeq	r1, r1, r0
    1e7c:	0000005c 	andeq	r0, r0, ip, asr r0
    1e80:	00000000 	andeq	r0, r0, r0
    1e84:	000aac00 	andeq	sl, sl, r0, lsl #24
    1e88:	000ab010 	andeq	fp, sl, r0, lsl r0
    1e8c:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    1e90:	000ab000 	andeq	fp, sl, r0
    1e94:	000ab210 	andeq	fp, sl, r0, lsl r2
    1e98:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    1e9c:	000ab21c 	andeq	fp, sl, ip, lsl r2
    1ea0:	000b6810 	andeq	r6, fp, r0, lsl r8
    1ea4:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    1ea8:	000b6830 	andeq	r6, fp, r0, lsr r8
    1eac:	000b6c10 	andeq	r6, fp, r0, lsl ip
    1eb0:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    1eb4:	000b6c1c 	andeq	r6, fp, ip, lsl ip
    1eb8:	000be410 	andeq	lr, fp, r0, lsl r4
    1ebc:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    1ec0:	00000030 	andeq	r0, r0, r0, lsr r0
	...
    1ecc:	ac000000 	stcge	0, cr0, [r0], {-0}
    1ed0:	6510000a 	ldrvs	r0, [r0, #-10]
    1ed4:	0110000b 	tsteq	r0, fp
    1ed8:	0b655000 	bleq	1955ee0 <__RAM_SIZE+0x1855ee0>
    1edc:	0b6c1000 	bleq	1b05ee4 <__RAM_SIZE+0x1a05ee4>
    1ee0:	00041000 	andeq	r1, r4, r0
    1ee4:	9f5001f3 	svcls	0x005001f3
    1ee8:	10000b6c 	andne	r0, r0, ip, ror #22
    1eec:	10000be4 	andne	r0, r0, r4, ror #23
    1ef0:	00500001 	subseq	r0, r0, r1
	...
    1f00:	000aac00 	andeq	sl, sl, r0, lsl #24
    1f04:	000b6510 	andeq	r6, fp, r0, lsl r5
    1f08:	51000110 	tstpl	r0, r0, lsl r1
    1f0c:	10000b65 	andne	r0, r0, r5, ror #22
    1f10:	10000b6c 	andne	r0, r0, ip, ror #22
    1f14:	01f30004 	mvnseq	r0, r4
    1f18:	0b6c9f51 	bleq	1b29c64 <__RAM_SIZE+0x1a29c64>
    1f1c:	0be41000 	bleq	ff905f24 <__StackTop+0xc7805f24>
    1f20:	00011000 	andeq	r1, r1, r0
    1f24:	00000051 	andeq	r0, r0, r1, asr r0
	...
    1f30:	ac000000 	stcge	0, cr0, [r0], {-0}
    1f34:	6510000a 	ldrvs	r0, [r0, #-10]
    1f38:	0110000b 	tsteq	r0, fp
    1f3c:	0b655200 	bleq	1956744 <__RAM_SIZE+0x1856744>
    1f40:	0b6c1000 	bleq	1b05f48 <__RAM_SIZE+0x1a05f48>
    1f44:	00041000 	andeq	r1, r4, r0
    1f48:	9f5201f3 	svcls	0x005201f3
    1f4c:	10000b6c 	andne	r0, r0, ip, ror #22
    1f50:	10000be4 	andne	r0, r0, r4, ror #23
    1f54:	00520001 	subseq	r0, r2, r1
	...
    1f64:	000aac00 	andeq	sl, sl, r0, lsl #24
    1f68:	000b6510 	andeq	r6, fp, r0, lsl r5
    1f6c:	53000110 	movwpl	r0, #272	; 0x110
    1f70:	10000b65 	andne	r0, r0, r5, ror #22
    1f74:	10000b6c 	andne	r0, r0, ip, ror #22
    1f78:	01f30004 	mvnseq	r0, r4
    1f7c:	0b6c9f53 	bleq	1b29cd0 <__RAM_SIZE+0x1a29cd0>
    1f80:	0be41000 	bleq	ff905f88 <__StackTop+0xc7805f88>
    1f84:	00011000 	andeq	r1, r1, r0
    1f88:	00000053 	andeq	r0, r0, r3, asr r0
	...
    1f94:	000aac00 	andeq	sl, sl, r0, lsl #24
    1f98:	000b6c10 	andeq	r6, fp, r0, lsl ip
    1f9c:	91000210 	tstls	r0, r0, lsl r2
    1fa0:	000b6c00 	andeq	r6, fp, r0, lsl #24
    1fa4:	000be410 	andeq	lr, fp, r0, lsl r4
    1fa8:	91000210 	tstls	r0, r0, lsl r2
	...
    1fb8:	00000101 	andeq	r0, r0, r1, lsl #2
    1fbc:	00000101 	andeq	r0, r0, r1, lsl #2
    1fc0:	00000101 	andeq	r0, r0, r1, lsl #2
    1fc4:	00000101 	andeq	r0, r0, r1, lsl #2
    1fc8:	00000101 	andeq	r0, r0, r1, lsl #2
    1fcc:	00000000 	andeq	r0, r0, r0
    1fd0:	01010000 	mrseq	r0, (UNDEF: 1)
    1fd4:	01010000 	mrseq	r0, (UNDEF: 1)
    1fd8:	01010000 	mrseq	r0, (UNDEF: 1)
    1fdc:	01010000 	mrseq	r0, (UNDEF: 1)
    1fe0:	01010000 	mrseq	r0, (UNDEF: 1)
    1fe4:	ac000000 	stcge	0, cr0, [r0], {-0}
    1fe8:	e410000a 	ldr	r0, [r0], #-10
    1fec:	0210000a 	andseq	r0, r0, #10
    1ff0:	e4049100 	str	r9, [r4], #-256	; 0xffffff00
    1ff4:	e410000a 	ldr	r0, [r0], #-10
    1ff8:	0110000a 	tsteq	r0, sl
    1ffc:	0ae45400 	beq	ff917004 <__StackTop+0xc7817004>
    2000:	0aee1000 	beq	ffb86008 <__StackTop+0xc7a86008>
    2004:	00031000 	andeq	r1, r3, r0
    2008:	ee9f0174 	mrc	1, 4, r0, cr15, cr4, {3}
    200c:	0410000a 	ldreq	r0, [r0], #-10
    2010:	0110000b 	tsteq	r0, fp
    2014:	0b045400 	bleq	11701c <__RAM_SIZE+0x1701c>
    2018:	0b0e1000 	bleq	386020 <__RAM_SIZE+0x286020>
    201c:	00031000 	andeq	r1, r3, r0
    2020:	0e9f0174 	mrceq	1, 4, r0, cr15, cr4, {3}
    2024:	3c10000b 	ldccc	0, cr0, [r0], {11}
    2028:	0110000b 	tsteq	r0, fp
    202c:	0b3c5400 	bleq	f17034 <__RAM_SIZE+0xe17034>
    2030:	0b461000 	bleq	1186038 <__RAM_SIZE+0x1086038>
    2034:	00031000 	andeq	r1, r3, r0
    2038:	469f0174 			; <UNDEFINED> instruction: 0x469f0174
    203c:	5010000b 	andspl	r0, r0, fp
    2040:	0110000b 	tsteq	r0, fp
    2044:	0b505400 	bleq	141704c <__RAM_SIZE+0x131704c>
    2048:	0b5a1000 	bleq	1686050 <__RAM_SIZE+0x1586050>
    204c:	00031000 	andeq	r1, r3, r0
    2050:	5a9f0174 	bpl	fe7c2628 <__StackTop+0xc66c2628>
    2054:	6c10000b 	ldcvs	0, cr0, [r0], {11}
    2058:	0110000b 	tsteq	r0, fp
    205c:	0b6c5400 	bleq	1b17064 <__RAM_SIZE+0x1a17064>
    2060:	0b701000 	bleq	1c06068 <__RAM_SIZE+0x1b06068>
    2064:	00031000 	andeq	r1, r3, r0
    2068:	709f7f74 	addsvc	r7, pc, r4, ror pc	; <UNPREDICTABLE>
    206c:	7e10000b 	cdpvc	0, 1, cr0, cr0, cr11, {0}
    2070:	0110000b 	tsteq	r0, fp
    2074:	0b7e5c00 	bleq	1f9907c <__RAM_SIZE+0x1e9907c>
    2078:	0b801000 	bleq	fe006080 <__StackTop+0xc5f06080>
    207c:	00011000 	andeq	r1, r1, r0
    2080:	000b8054 	andeq	r8, fp, r4, asr r0
    2084:	000b8410 	andeq	r8, fp, r0, lsl r4
    2088:	5c000110 	stfpls	f0, [r0], {16}
    208c:	10000b84 	andne	r0, r0, r4, lsl #23
    2090:	10000b8e 	andne	r0, r0, lr, lsl #23
    2094:	8e540001 	cdphi	0, 5, cr0, cr4, cr1, {0}
    2098:	9810000b 	ldmdals	r0, {r0, r1, r3}
    209c:	0310000b 	tsteq	r0, #11
    20a0:	9f017400 	svcls	0x00017400
    20a4:	10000b98 	mulne	r0, r8, fp
    20a8:	10000ba4 	andne	r0, r0, r4, lsr #23
    20ac:	a4540001 	ldrbge	r0, [r4], #-1
    20b0:	ae10000b 	cdpge	0, 1, cr0, cr0, cr11, {0}
    20b4:	0310000b 	tsteq	r0, #11
    20b8:	9f017400 	svcls	0x00017400
    20bc:	10000bae 	andne	r0, r0, lr, lsr #23
    20c0:	10000bb4 			; <UNDEFINED> instruction: 0x10000bb4
    20c4:	b4540001 	ldrblt	r0, [r4], #-1
    20c8:	be10000b 	cdplt	0, 1, cr0, cr0, cr11, {0}
    20cc:	0310000b 	tsteq	r0, #11
    20d0:	9f017400 	svcls	0x00017400
    20d4:	10000bbe 			; <UNDEFINED> instruction: 0x10000bbe
    20d8:	10000bc6 	andne	r0, r0, r6, asr #23
    20dc:	c6540001 	ldrbgt	r0, [r4], -r1
    20e0:	d010000b 	andsle	r0, r0, fp
    20e4:	0310000b 	tsteq	r0, #11
    20e8:	9f017400 	svcls	0x00017400
    20ec:	10000bd0 	ldrdne	r0, [r0], -r0	; <UNPREDICTABLE>
    20f0:	10000bd8 	ldrdne	r0, [r0], -r8
    20f4:	d8540001 	ldmdale	r4, {r0}^
    20f8:	e210000b 	ands	r0, r0, #11
    20fc:	0310000b 	tsteq	r0, #11
    2100:	9f017400 	svcls	0x00017400
    2104:	10000be2 	andne	r0, r0, r2, ror #23
    2108:	10000be4 	andne	r0, r0, r4, ror #23
    210c:	00540001 	subseq	r0, r4, r1
	...
    2118:	ac000000 	stcge	0, cr0, [r0], {-0}
    211c:	6c10000a 	ldcvs	0, cr0, [r0], {10}
    2120:	0210000b 	andseq	r0, r0, #11
    2124:	6c089100 	stfvsd	f1, [r8], {-0}
    2128:	e410000b 	ldr	r0, [r0], #-11
    212c:	0210000b 	andseq	r0, r0, #11
    2130:	00089100 	andeq	r9, r8, r0, lsl #2
	...
    213c:	ac000000 	stcge	0, cr0, [r0], {-0}
    2140:	6c10000a 	ldcvs	0, cr0, [r0], {10}
    2144:	0210000b 	andseq	r0, r0, #11
    2148:	6c0c9100 	stfvsd	f1, [ip], {-0}
    214c:	e410000b 	ldr	r0, [r0], #-11
    2150:	0210000b 	andseq	r0, r0, #11
    2154:	000c9100 	andeq	r9, ip, r0, lsl #2
	...
    2160:	ac000000 	stcge	0, cr0, [r0], {-0}
    2164:	6c10000a 	ldcvs	0, cr0, [r0], {10}
    2168:	0210000b 	andseq	r0, r0, #11
    216c:	6c109100 	ldfvsd	f1, [r0], {-0}
    2170:	e410000b 	ldr	r0, [r0], #-11
    2174:	0210000b 	andseq	r0, r0, #11
    2178:	00109100 	andseq	r9, r0, r0, lsl #2
	...
    2184:	ac000000 	stcge	0, cr0, [r0], {-0}
    2188:	e210000a 	ands	r0, r0, #10
    218c:	0210000a 	andseq	r0, r0, #10
    2190:	e2149100 	ands	r9, r4, #0, 2
    2194:	e410000a 	ldr	r0, [r0], #-10
    2198:	0110000b 	tsteq	r0, fp
    219c:	00005700 	andeq	r5, r0, r0, lsl #14
	...
    21a8:	0aac0000 	beq	feb021b0 <__StackTop+0xc6a021b0>
    21ac:	0b6c1000 	bleq	1b061b4 <__RAM_SIZE+0x1a061b4>
    21b0:	00021000 	andeq	r1, r2, r0
    21b4:	0b6c1891 	bleq	1b08400 <__RAM_SIZE+0x1a08400>
    21b8:	0be41000 	bleq	ff9061c0 <__StackTop+0xc78061c0>
    21bc:	00021000 	andeq	r1, r2, r0
    21c0:	00001891 	muleq	r0, r1, r8
    21c4:	00000000 	andeq	r0, r0, r0
    21c8:	0a2e0000 	beq	b821d0 <__RAM_SIZE+0xa821d0>
    21cc:	0a321000 	beq	c861d4 <__RAM_SIZE+0xb861d4>
    21d0:	00021000 	andeq	r1, r2, r0
    21d4:	0a32007d 	beq	c823d0 <__RAM_SIZE+0xb823d0>
    21d8:	0a341000 	beq	d061e0 <__RAM_SIZE+0xc061e0>
    21dc:	00021000 	andeq	r1, r2, r0
    21e0:	0a34247d 	beq	d0b3dc <__RAM_SIZE+0xc0b3dc>
    21e4:	0a921000 	beq	fe4861ec <__StackTop+0xc63861ec>
    21e8:	00021000 	andeq	r1, r2, r0
    21ec:	0a92307d 	beq	fe48e3e8 <__StackTop+0xc638e3e8>
    21f0:	0a961000 	beq	fe5861f8 <__StackTop+0xc64861f8>
    21f4:	00021000 	andeq	r1, r2, r0
    21f8:	0a96247d 	beq	fe58b3f4 <__StackTop+0xc648b3f4>
    21fc:	0aac1000 	beq	feb06204 <__StackTop+0xc6a06204>
    2200:	00021000 	andeq	r1, r2, r0
    2204:	0000307d 	andeq	r3, r0, sp, ror r0
	...
    2210:	0a2e0000 	beq	b82218 <__RAM_SIZE+0xa82218>
    2214:	0a521000 	beq	148621c <__RAM_SIZE+0x138621c>
    2218:	00011000 	andeq	r1, r1, r0
    221c:	000a5250 	andeq	r5, sl, r0, asr r2
    2220:	000aac10 	andeq	sl, sl, r0, lsl ip
    2224:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
	...
    2234:	10000a2e 	andne	r0, r0, lr, lsr #20
    2238:	10000a52 	andne	r0, r0, r2, asr sl
    223c:	52510001 	subspl	r0, r1, #1
    2240:	ac10000a 	ldcge	0, cr0, [r0], {10}
    2244:	0110000a 	tsteq	r0, sl
    2248:	00005600 	andeq	r5, r0, r0, lsl #12
	...
    225c:	0a2e0000 	beq	b82264 <__RAM_SIZE+0xa82264>
    2260:	0a5a1000 	beq	1686268 <__RAM_SIZE+0x1586268>
    2264:	00011000 	andeq	r1, r1, r0
    2268:	000a5a52 	andeq	r5, sl, r2, asr sl
    226c:	000a6a10 	andeq	r6, sl, r0, lsl sl
    2270:	5b000110 	blpl	26b8 <__HEAP_SIZE+0x16b8>
    2274:	10000a6a 	andne	r0, r0, sl, ror #20
    2278:	10000a76 	andne	r0, r0, r6, ror sl
    227c:	76520001 	ldrbvc	r0, [r2], -r1
    2280:	8210000a 	andshi	r0, r0, #10
    2284:	0110000a 	tsteq	r0, sl
    2288:	0a825800 	beq	fe098290 <__StackTop+0xc5f98290>
    228c:	0aa01000 	beq	fe806294 <__StackTop+0xc6706294>
    2290:	00011000 	andeq	r1, r1, r0
    2294:	000aa052 	andeq	sl, sl, r2, asr r0
    2298:	000aac10 	andeq	sl, sl, r0, lsl ip
    229c:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
	...
    22ac:	10000a2e 	andne	r0, r0, lr, lsr #20
    22b0:	10000a48 	andne	r0, r0, r8, asr #20
    22b4:	48530001 	ldmdami	r3, {r0}^
    22b8:	ac10000a 	ldcge	0, cr0, [r0], {10}
    22bc:	0110000a 	tsteq	r0, sl
    22c0:	00005700 	andeq	r5, r0, r0, lsl #14
	...
    22cc:	0a2e0000 	beq	b822d4 <__RAM_SIZE+0xa822d4>
    22d0:	0a961000 	beq	fe5862d8 <__StackTop+0xc64862d8>
    22d4:	00021000 	andeq	r1, r2, r0
    22d8:	0a960091 	beq	fe582524 <__StackTop+0xc6482524>
    22dc:	0aac1000 	beq	feb062e4 <__StackTop+0xc6a062e4>
    22e0:	00021000 	andeq	r1, r2, r0
    22e4:	00000091 	muleq	r0, r1, r0
	...
    22f0:	0a2e0000 	beq	b822f8 <__RAM_SIZE+0xa822f8>
    22f4:	0a701000 	beq	1c062fc <__RAM_SIZE+0x1b062fc>
    22f8:	00021000 	andeq	r1, r2, r0
    22fc:	0a700491 	beq	1c03548 <__RAM_SIZE+0x1b03548>
    2300:	0a8e1000 	beq	fe386308 <__StackTop+0xc6286308>
    2304:	00011000 	andeq	r1, r1, r0
    2308:	00000054 	andeq	r0, r0, r4, asr r0
	...
    2314:	000a2e00 	andeq	r2, sl, r0, lsl #28
    2318:	000a9610 	andeq	r9, sl, r0, lsl r6
    231c:	91000210 	tstls	r0, r0, lsl r2
    2320:	000a9608 	andeq	r9, sl, r8, lsl #12
    2324:	000aac10 	andeq	sl, sl, r0, lsl ip
    2328:	91000210 	tstls	r0, r0, lsl r2
    232c:	00000008 	andeq	r0, r0, r8
	...
    2338:	000a2e00 	andeq	r2, sl, r0, lsl #28
    233c:	000a9610 	andeq	r9, sl, r0, lsl r6
    2340:	91000210 	tstls	r0, r0, lsl r2
    2344:	000a960c 	andeq	r9, sl, ip, lsl #12
    2348:	000aac10 	andeq	sl, sl, r0, lsl ip
    234c:	91000210 	tstls	r0, r0, lsl r2
    2350:	0000000c 	andeq	r0, r0, ip
    2354:	00000000 	andeq	r0, r0, r0
    2358:	00000100 	andeq	r0, r0, r0, lsl #2
    235c:	46000000 	strmi	r0, [r0], -r0
    2360:	5210000a 	andspl	r0, r0, #10
    2364:	0110000a 	tsteq	r0, sl
    2368:	0a525200 	beq	1496b70 <__RAM_SIZE+0x1396b70>
    236c:	0a701000 	beq	1c06374 <__RAM_SIZE+0x1b06374>
    2370:	00021000 	andeq	r1, r2, r0
    2374:	0a705491 	beq	1c175c0 <__RAM_SIZE+0x1b175c0>
    2378:	0aac1000 	beq	feb06380 <__StackTop+0xc6a06380>
    237c:	00041000 	andeq	r1, r4, r0
    2380:	9f5201f3 	svcls	0x005201f3
	...
    238c:	0a520000 	beq	1482394 <__RAM_SIZE+0x1382394>
    2390:	0a701000 	beq	1c06398 <__RAM_SIZE+0x1b06398>
    2394:	00011000 	andeq	r1, r1, r0
    2398:	00000058 	andeq	r0, r0, r8, asr r0
	...
    23a4:	000a0a00 	andeq	r0, sl, r0, lsl #20
    23a8:	000a0e10 	andeq	r0, sl, r0, lsl lr
    23ac:	50000110 	andpl	r0, r0, r0, lsl r1
    23b0:	10000a0e 	andne	r0, r0, lr, lsl #20
    23b4:	10000a2e 	andne	r0, r0, lr, lsr #20
    23b8:	00510001 	subseq	r0, r1, r1
    23bc:	00000000 	andeq	r0, r0, r0
    23c0:	01000000 	mrseq	r0, (UNDEF: 0)
    23c4:	00000000 	andeq	r0, r0, r0
    23c8:	000a0c00 	andeq	r0, sl, r0, lsl #24
    23cc:	000a1010 	andeq	r1, sl, r0, lsl r0
    23d0:	30000210 	andcc	r0, r0, r0, lsl r2
    23d4:	000a109f 	muleq	sl, pc, r0	; <UNPREDICTABLE>
    23d8:	000a1410 	andeq	r1, sl, r0, lsl r4
    23dc:	50000110 	andpl	r0, r0, r0, lsl r1
    23e0:	10000a20 	andne	r0, r0, r0, lsr #20
    23e4:	10000a2e 	andne	r0, r0, lr, lsr #20
    23e8:	00500001 	subseq	r0, r0, r1
	...
    23f4:	24000000 	strcs	r0, [r0], #-0
    23f8:	2610000a 	ldrcs	r0, [r0], -sl
    23fc:	0110000a 	tsteq	r0, sl
    2400:	0a265300 	beq	997008 <__RAM_SIZE+0x897008>
    2404:	0a281000 	beq	a0640c <__RAM_SIZE+0x90640c>
    2408:	00031000 	andeq	r1, r3, r0
    240c:	009f3073 	addseq	r3, pc, r3, ror r0	; <UNPREDICTABLE>
	...
    241c:	02000000 	andeq	r0, r0, #0
    2420:	00007d00 	andeq	r7, r0, r0, lsl #26
    2424:	00000000 	andeq	r0, r0, r0
    2428:	02000000 	andeq	r0, r0, #0
    242c:	00087d00 	andeq	r7, r8, r0, lsl #26
    2430:	00000000 	andeq	r0, r0, r0
    2434:	02000000 	andeq	r0, r0, #0
    2438:	00007d00 	andeq	r7, r0, r0, lsl #26
	...
    2450:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    245c:	01f30004 	mvnseq	r0, r4
    2460:	00009f50 	andeq	r9, r0, r0, asr pc
    2464:	00000000 	andeq	r0, r0, r0
    2468:	00010000 	andeq	r0, r1, r0
    246c:	00000050 	andeq	r0, r0, r0, asr r0
	...
    2480:	01000000 	mrseq	r0, (UNDEF: 0)
    2484:	00005100 	andeq	r5, r0, r0, lsl #2
    2488:	00000000 	andeq	r0, r0, r0
    248c:	00040000 	andeq	r0, r4, r0
    2490:	9f5101f3 	svcls	0x005101f3
	...
    249c:	00510001 	subseq	r0, r1, r1
	...
    24b4:	52000100 	andpl	r0, r0, #0, 2
	...
    24c0:	01f30004 	mvnseq	r0, r4
    24c4:	00009f52 	andeq	r9, r0, r2, asr pc
    24c8:	00000000 	andeq	r0, r0, r0
    24cc:	00010000 	andeq	r0, r1, r0
    24d0:	00000052 	andeq	r0, r0, r2, asr r0
	...
    24e4:	01000000 	mrseq	r0, (UNDEF: 0)
    24e8:	00005300 	andeq	r5, r0, r0, lsl #6
    24ec:	00000000 	andeq	r0, r0, r0
    24f0:	00040000 	andeq	r0, r4, r0
    24f4:	9f5301f3 	svcls	0x005301f3
	...
    2500:	00530001 	subseq	r0, r3, r1
    2504:	00000000 	andeq	r0, r0, r0
    2508:	48000000 	stmdami	r0, {}	; <UNPREDICTABLE>
    250c:	4e10001b 	mrcmi	0, 0, r0, cr0, cr11, {0}
    2510:	0210001b 	andseq	r0, r0, #27
    2514:	4e007d00 	cdpmi	13, 0, cr7, cr0, cr0, {0}
    2518:	5410001b 	ldrpl	r0, [r0], #-27	; 0xffffffe5
    251c:	0210001b 	andseq	r0, r0, #27
    2520:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    252c:	48000000 	stmdami	r0, {}	; <UNPREDICTABLE>
    2530:	5110001b 	tstpl	r0, fp, lsl r0
    2534:	0110001b 	tsteq	r0, fp, lsl r0
    2538:	1b515000 	blne	1456540 <__RAM_SIZE+0x1356540>
    253c:	1b541000 	blne	1506544 <__RAM_SIZE+0x1406544>
    2540:	00041000 	andeq	r1, r4, r0
    2544:	9f5001f3 	svcls	0x005001f3
	...
    2554:	10001b48 	andne	r1, r0, r8, asr #22
    2558:	10001b51 	andne	r1, r0, r1, asr fp
    255c:	51510001 	cmppl	r1, r1
    2560:	5410001b 	ldrpl	r0, [r0], #-27	; 0xffffffe5
    2564:	0410001b 	ldreq	r0, [r0], #-27	; 0xffffffe5
    2568:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    256c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    2578:	001b4800 	andseq	r4, fp, r0, lsl #16
    257c:	001b5110 	andseq	r5, fp, r0, lsl r1
    2580:	52000110 	andpl	r0, r0, #16, 2
    2584:	10001b51 	andne	r1, r0, r1, asr fp
    2588:	10001b54 	andne	r1, r0, r4, asr fp
    258c:	01f30004 	mvnseq	r0, r4
    2590:	00009f52 	andeq	r9, r0, r2, asr pc
	...
    259c:	1b480000 	blne	12025a4 <__RAM_SIZE+0x11025a4>
    25a0:	1b511000 	blne	14465a8 <__RAM_SIZE+0x13465a8>
    25a4:	00011000 	andeq	r1, r1, r0
    25a8:	001b5153 	andseq	r5, fp, r3, asr r1
    25ac:	001b5410 	andseq	r5, fp, r0, lsl r4
    25b0:	f3000410 	vqshl.u8	d0, d0, d0
    25b4:	009f5301 	addseq	r5, pc, r1, lsl #6
	...
    25c4:	02000000 	andeq	r0, r0, #0
    25c8:	00007d00 	andeq	r7, r0, r0, lsl #26
    25cc:	00000000 	andeq	r0, r0, r0
    25d0:	02000000 	andeq	r0, r0, #0
    25d4:	00107d00 	andseq	r7, r0, r0, lsl #26
	...
    25e8:	01000000 	mrseq	r0, (UNDEF: 0)
    25ec:	00005000 	andeq	r5, r0, r0
    25f0:	00000000 	andeq	r0, r0, r0
    25f4:	00010000 	andeq	r0, r1, r0
    25f8:	00000056 	andeq	r0, r0, r6, asr r0
	...
    260c:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    2618:	00550001 	subseq	r0, r5, r1
    261c:	00000000 	andeq	r0, r0, r0
    2620:	01000000 	mrseq	r0, (UNDEF: 0)
    2624:	00010000 	andeq	r0, r1, r0
	...
    2630:	30000200 	andcc	r0, r0, r0, lsl #4
    2634:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    2638:	00000000 	andeq	r0, r0, r0
    263c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    2648:	00500001 	subseq	r0, r0, r1
    264c:	00000000 	andeq	r0, r0, r0
    2650:	02000000 	andeq	r0, r0, #0
	...
    265c:	02000000 	andeq	r0, r0, #0
    2660:	009f3000 	addseq	r3, pc, r0
    2664:	00000000 	andeq	r0, r0, r0
    2668:	01000000 	mrseq	r0, (UNDEF: 0)
    266c:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    267c:	00020000 	andeq	r0, r2, r0
    2680:	0000007d 	andeq	r0, r0, sp, ror r0
    2684:	00000000 	andeq	r0, r0, r0
    2688:	00020000 	andeq	r0, r2, r0
    268c:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    26a0:	00010000 	andeq	r0, r1, r0
    26a4:	00000050 	andeq	r0, r0, r0, asr r0
    26a8:	00000000 	andeq	r0, r0, r0
    26ac:	f3000400 	vshl.u8	d0, d0, d0
    26b0:	009f5001 	addseq	r5, pc, r1
    26b4:	00000000 	andeq	r0, r0, r0
    26b8:	94000000 	strls	r0, [r0], #-0
    26bc:	9610001b 			; <UNDEFINED> instruction: 0x9610001b
    26c0:	0210001b 	andseq	r0, r0, #27
    26c4:	96007d00 	strls	r7, [r0], -r0, lsl #26
    26c8:	b210001b 	andslt	r0, r0, #27
    26cc:	0210001b 	andseq	r0, r0, #27
    26d0:	00107d00 	andseq	r7, r0, r0, lsl #26
	...
    26dc:	94000000 	strls	r0, [r0], #-0
    26e0:	9c10001b 	ldcls	0, cr0, [r0], {27}
    26e4:	0110001b 	tsteq	r0, fp, lsl r0
    26e8:	1b9c5000 	blne	fe7166f0 <__StackTop+0xc66166f0>
    26ec:	1bb21000 	blne	fec866f4 <__StackTop+0xc6b866f4>
    26f0:	00011000 	andeq	r1, r1, r0
    26f4:	00000055 	andeq	r0, r0, r5, asr r0
    26f8:	00000000 	andeq	r0, r0, r0
    26fc:	00000100 	andeq	r0, r0, r0, lsl #2
    2700:	001b9800 	andseq	r9, fp, r0, lsl #16
    2704:	001b9c10 	andseq	r9, fp, r0, lsl ip
    2708:	30000210 	andcc	r0, r0, r0, lsl r2
    270c:	001b9c9f 	mulseq	fp, pc, ip	; <UNPREDICTABLE>
    2710:	001bb210 	andseq	fp, fp, r0, lsl r2
    2714:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
	...
    2720:	1b800001 	blne	fe00272c <__StackTop+0xc5f0272c>
    2724:	1b941000 	blne	fe50672c <__StackTop+0xc640672c>
    2728:	00011000 	andeq	r1, r1, r0
    272c:	00000050 	andeq	r0, r0, r0, asr r0
    2730:	00000000 	andeq	r0, r0, r0
    2734:	a8010000 	stmdage	r1, {}	; <UNPREDICTABLE>
    2738:	a810001e 	ldmdage	r0, {r1, r2, r3, r4}
    273c:	0110001e 	tsteq	r0, lr, lsl r0
    2740:	00005000 	andeq	r5, r0, r0
    2744:	00000000 	andeq	r0, r0, r0
    2748:	1ca40000 	stcne	0, cr0, [r4]
    274c:	1ca81000 	stcne	0, cr1, [r8]
    2750:	00021000 	andeq	r1, r2, r0
    2754:	1ca8007d 	stcne	0, cr0, [r8], #500	; 0x1f4
    2758:	1d201000 	stcne	0, cr1, [r0, #-0]
    275c:	00021000 	andeq	r1, r2, r0
    2760:	0000207d 	andeq	r2, r0, sp, ror r0
	...
    2770:	1ca40000 	stcne	0, cr0, [r4]
    2774:	1cbe1000 	ldcne	0, cr1, [lr]
    2778:	00011000 	andeq	r1, r1, r0
    277c:	001cbe50 	andseq	fp, ip, r0, asr lr
    2780:	001cf810 	andseq	pc, ip, r0, lsl r8	; <UNPREDICTABLE>
    2784:	58000110 	stmdapl	r0, {r4, r8}
    2788:	10001cf8 	strdne	r1, [r0], -r8
    278c:	10001cfe 	strdne	r1, [r0], -lr
    2790:	01f30004 	mvnseq	r0, r4
    2794:	1cfe9f50 	ldclne	15, cr9, [lr], #320	; 0x140
    2798:	1d201000 	stcne	0, cr1, [r0, #-0]
    279c:	00011000 	andeq	r1, r1, r0
    27a0:	00000050 	andeq	r0, r0, r0, asr r0
	...
    27b0:	001ca400 	andseq	sl, ip, r0, lsl #8
    27b4:	001cbe10 	andseq	fp, ip, r0, lsl lr
    27b8:	51000110 	tstpl	r0, r0, lsl r1
    27bc:	10001cbe 			; <UNDEFINED> instruction: 0x10001cbe
    27c0:	10001cf8 	strdne	r1, [r0], -r8
    27c4:	f8570001 			; <UNDEFINED> instruction: 0xf8570001
    27c8:	fe10001c 	mrc2	0, 0, r0, cr0, cr12, {0}
    27cc:	0410001c 	ldreq	r0, [r0], #-28	; 0xffffffe4
    27d0:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    27d4:	001cfe9f 	mulseq	ip, pc, lr	; <UNPREDICTABLE>
    27d8:	001d2010 	andseq	r2, sp, r0, lsl r0
    27dc:	51000110 	tstpl	r0, r0, lsl r1
	...
    27ec:	1ca40000 	stcne	0, cr0, [r4]
    27f0:	1cbe1000 	ldcne	0, cr1, [lr]
    27f4:	00011000 	andeq	r1, r1, r0
    27f8:	001cbe52 	andseq	fp, ip, r2, asr lr
    27fc:	001cfe10 	andseq	pc, ip, r0, lsl lr	; <UNPREDICTABLE>
    2800:	f3000410 	vqshl.u8	d0, d0, d0
    2804:	fe9f5201 	cdp2	2, 9, cr5, cr15, cr1, {0}
    2808:	2010001c 	andscs	r0, r0, ip, lsl r0
    280c:	0110001d 	tsteq	r0, sp, lsl r0
    2810:	00005200 	andeq	r5, r0, r0, lsl #4
	...
    2820:	1ca40000 	stcne	0, cr0, [r4]
    2824:	1cbe1000 	ldcne	0, cr1, [lr]
    2828:	00011000 	andeq	r1, r1, r0
    282c:	001cbe53 	andseq	fp, ip, r3, asr lr
    2830:	001cf810 	andseq	pc, ip, r0, lsl r8	; <UNPREDICTABLE>
    2834:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
    2838:	10001cf8 	strdne	r1, [r0], -r8
    283c:	10001cfe 	strdne	r1, [r0], -lr
    2840:	01f30004 	mvnseq	r0, r4
    2844:	1cfe9f53 	ldclne	15, cr9, [lr], #332	; 0x14c
    2848:	1d201000 	stcne	0, cr1, [r0, #-0]
    284c:	00011000 	andeq	r1, r1, r0
    2850:	00000053 	andeq	r0, r0, r3, asr r0
    2854:	00000000 	andeq	r0, r0, r0
    2858:	00000100 	andeq	r0, r0, r0, lsl #2
    285c:	a8000000 	stmdage	r0, {}	; <UNPREDICTABLE>
    2860:	be10001c 	mrclt	0, 0, r0, cr0, cr12, {0}
    2864:	0210001c 	andseq	r0, r0, #28
    2868:	be9f3000 	cdplt	0, 9, cr3, cr15, cr0, {0}
    286c:	f810001c 			; <UNDEFINED> instruction: 0xf810001c
    2870:	0110001c 	tsteq	r0, ip, lsl r0
    2874:	1cfe5600 	ldclne	6, cr5, [lr]
    2878:	1d141000 	ldcne	0, cr1, [r4, #-0]
    287c:	00021000 	andeq	r1, r2, r0
    2880:	00009f30 	andeq	r9, r0, r0, lsr pc
    2884:	00000000 	andeq	r0, r0, r0
    2888:	00020000 	andeq	r0, r2, r0
    288c:	00010100 	andeq	r0, r1, r0, lsl #2
    2890:	00000000 	andeq	r0, r0, r0
    2894:	10001ca8 	andne	r1, r0, r8, lsr #25
    2898:	10001cbe 			; <UNDEFINED> instruction: 0x10001cbe
    289c:	9f300002 	svcls	0x00300002
    28a0:	10001cc8 	andne	r1, r0, r8, asr #25
    28a4:	10001cda 	ldrdne	r1, [r0], -sl
    28a8:	da520001 	ble	14828b4 <__RAM_SIZE+0x13828b4>
    28ac:	de10001c 	mrcle	0, 0, r0, cr0, cr12, {0}
    28b0:	0310001c 	tsteq	r0, #28
    28b4:	9f7f7200 	svcls	0x007f7200
    28b8:	10001cde 	ldrdne	r1, [r0], -lr
    28bc:	10001cf8 	strdne	r1, [r0], -r8
    28c0:	fe590001 	cdp2	0, 5, cr0, cr9, cr1, {0}
    28c4:	2010001c 	andscs	r0, r0, ip, lsl r0
    28c8:	0210001d 	andseq	r0, r0, #29
    28cc:	009f3000 	addseq	r3, pc, r0
    28d0:	00000000 	andeq	r0, r0, r0
    28d4:	02000000 	andeq	r0, r0, #0
    28d8:	00000000 	andeq	r0, r0, r0
    28dc:	001ca800 	andseq	sl, ip, r0, lsl #16
    28e0:	001cbe10 	andseq	fp, ip, r0, lsl lr
    28e4:	30000210 	andcc	r0, r0, r0, lsl r2
    28e8:	001ce69f 	mulseq	ip, pc, r6	; <UNPREDICTABLE>
    28ec:	001ce910 	andseq	lr, ip, r0, lsl r9
    28f0:	50000110 	andpl	r0, r0, r0, lsl r1
    28f4:	10001cfe 	strdne	r1, [r0], -lr
    28f8:	10001d20 	andne	r1, r0, r0, lsr #26
    28fc:	9f300002 	svcls	0x00300002
	...
    2908:	00000002 	andeq	r0, r0, r2
    290c:	1ca80000 	stcne	0, cr0, [r8]
    2910:	1cbe1000 	ldcne	0, cr1, [lr]
    2914:	00021000 	andeq	r1, r2, r0
    2918:	1cbe9f30 	ldcne	15, cr9, [lr], #192	; 0xc0
    291c:	1cf81000 	ldclne	0, cr1, [r8]
    2920:	00011000 	andeq	r1, r1, r0
    2924:	001cfe54 	andseq	pc, ip, r4, asr lr	; <UNPREDICTABLE>
    2928:	001d2010 	andseq	r2, sp, r0, lsl r0
    292c:	30000210 	andcc	r0, r0, r0, lsl r2
    2930:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    2934:	00000000 	andeq	r0, r0, r0
    2938:	001d2000 	andseq	r2, sp, r0
    293c:	001d2210 	andseq	r2, sp, r0, lsl r2
    2940:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    2944:	001d2200 	andseq	r2, sp, r0, lsl #4
    2948:	001ea410 	andseq	sl, lr, r0, lsl r4
    294c:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    2950:	00000018 	andeq	r0, r0, r8, lsl r0
	...
    295c:	20000000 	andcs	r0, r0, r0
    2960:	6c10001d 	ldcvs	0, cr0, [r0], {29}
    2964:	0110001d 	tsteq	r0, sp, lsl r0
    2968:	1d6c5000 	stclne	0, cr5, [ip, #-0]
    296c:	1e181000 	cdpne	0, 1, cr1, cr8, cr0, {0}
    2970:	00011000 	andeq	r1, r1, r0
    2974:	001e1855 	andseq	r1, lr, r5, asr r8
    2978:	001ea410 	andseq	sl, lr, r0, lsl r4
    297c:	f3000410 	vqshl.u8	d0, d0, d0
    2980:	009f5001 	addseq	r5, pc, r1
	...
    298c:	20000000 	andcs	r0, r0, r0
    2990:	6f10001d 	svcvs	0x0010001d
    2994:	0110001d 	tsteq	r0, sp, lsl r0
    2998:	1d6f5100 	stfnee	f5, [pc, #-0]	; 29a0 <__HEAP_SIZE+0x19a0>
    299c:	1ea41000 	cdpne	0, 10, cr1, cr4, cr0, {0}
    29a0:	00011000 	andeq	r1, r1, r0
    29a4:	00000056 	andeq	r0, r0, r6, asr r0
    29a8:	00000000 	andeq	r0, r0, r0
    29ac:	00000100 	andeq	r0, r0, r0, lsl #2
    29b0:	26000000 	strcs	r0, [r0], -r0
    29b4:	1810001d 	ldmdane	r0, {r0, r2, r3, r4}
    29b8:	0210001e 	andseq	r0, r0, #30
    29bc:	189f3000 	ldmne	pc, {ip, sp}	; <UNPREDICTABLE>
    29c0:	1a10001e 	bne	402a40 <__RAM_SIZE+0x302a40>
    29c4:	0110001e 	tsteq	r0, lr, lsl r0
    29c8:	1e1a5000 	cdpne	0, 1, cr5, cr10, cr0, {0}
    29cc:	1ea41000 	cdpne	0, 10, cr1, cr4, cr0, {0}
    29d0:	00011000 	andeq	r1, r1, r0
    29d4:	00000055 	andeq	r0, r0, r5, asr r0
    29d8:	00000000 	andeq	r0, r0, r0
    29dc:	01010100 	mrseq	r0, (UNDEF: 17)
    29e0:	00000101 	andeq	r0, r0, r1, lsl #2
    29e4:	001d2600 	andseq	r2, sp, r0, lsl #12
    29e8:	001e0810 	andseq	r0, lr, r0, lsl r8
    29ec:	30000210 	andcc	r0, r0, r0, lsl r2
    29f0:	001e089f 	mulseq	lr, pc, r8	; <UNPREDICTABLE>
    29f4:	001e2610 	andseq	r2, lr, r0, lsl r6
    29f8:	40000210 	andmi	r0, r0, r0, lsl r2
    29fc:	001e269f 	mulseq	lr, pc, r6	; <UNPREDICTABLE>
    2a00:	001e2a10 	andseq	r2, lr, r0, lsl sl
    2a04:	30000210 	andcc	r0, r0, r0, lsl r2
    2a08:	001e2a9f 	mulseq	lr, pc, sl	; <UNPREDICTABLE>
    2a0c:	001ea410 	andseq	sl, lr, r0, lsl r4
    2a10:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
	...
    2a1c:	01050502 	tsteq	r5, r2, lsl #10
    2a20:	01010101 	tsteq	r1, r1, lsl #2
    2a24:	01010101 	tsteq	r1, r1, lsl #2
    2a28:	01010101 	tsteq	r1, r1, lsl #2
    2a2c:	01010101 	tsteq	r1, r1, lsl #2
    2a30:	01010101 	tsteq	r1, r1, lsl #2
    2a34:	01010101 	tsteq	r1, r1, lsl #2
    2a38:	01010101 	tsteq	r1, r1, lsl #2
    2a3c:	00000001 	andeq	r0, r0, r1
    2a40:	1d260000 	stcne	0, cr0, [r6, #-0]
    2a44:	1d261000 	stcne	0, cr1, [r6, #-0]
    2a48:	00011000 	andeq	r1, r1, r0
    2a4c:	001d2650 	andseq	r2, sp, r0, asr r6
    2a50:	001d2c10 	andseq	r2, sp, r0, lsl ip
    2a54:	70000310 	andvc	r0, r0, r0, lsl r3
    2a58:	1d2c9f04 	stcne	15, cr9, [ip, #-16]!
    2a5c:	1d301000 	ldcne	0, cr1, [r0, #-0]
    2a60:	00031000 	andeq	r1, r3, r0
    2a64:	309f0870 	addscc	r0, pc, r0, ror r8	; <UNPREDICTABLE>
    2a68:	3410001d 	ldrcc	r0, [r0], #-29	; 0xffffffe3
    2a6c:	0310001d 	tsteq	r0, #29
    2a70:	9f0c7000 	svcls	0x000c7000
    2a74:	10001d34 	andne	r1, r0, r4, lsr sp
    2a78:	10001d38 	andne	r1, r0, r8, lsr sp
    2a7c:	10700003 	rsbsne	r0, r0, r3
    2a80:	001d389f 	mulseq	sp, pc, r8	; <UNPREDICTABLE>
    2a84:	001d3c10 	andseq	r3, sp, r0, lsl ip
    2a88:	70000310 	andvc	r0, r0, r0, lsl r3
    2a8c:	1d3c9f14 	ldcne	15, cr9, [ip, #-80]!	; 0xffffffb0
    2a90:	1d401000 	stclne	0, cr1, [r0, #-0]
    2a94:	00031000 	andeq	r1, r3, r0
    2a98:	409f1870 	addsmi	r1, pc, r0, ror r8	; <UNPREDICTABLE>
    2a9c:	4410001d 	ldrmi	r0, [r0], #-29	; 0xffffffe3
    2aa0:	0310001d 	tsteq	r0, #29
    2aa4:	9f1c7000 	svcls	0x001c7000
    2aa8:	10001d44 	andne	r1, r0, r4, asr #26
    2aac:	10001d48 	andne	r1, r0, r8, asr #26
    2ab0:	20700003 	rsbscs	r0, r0, r3
    2ab4:	001d489f 	mulseq	sp, pc, r8	; <UNPREDICTABLE>
    2ab8:	001d4c10 	andseq	r4, sp, r0, lsl ip
    2abc:	70000310 	andvc	r0, r0, r0, lsl r3
    2ac0:	1d4c9f24 	stclne	15, cr9, [ip, #-144]	; 0xffffff70
    2ac4:	1d501000 	ldclne	0, cr1, [r0, #-0]
    2ac8:	00031000 	andeq	r1, r3, r0
    2acc:	509f2870 	addspl	r2, pc, r0, ror r8	; <UNPREDICTABLE>
    2ad0:	5410001d 	ldrpl	r0, [r0], #-29	; 0xffffffe3
    2ad4:	0310001d 	tsteq	r0, #29
    2ad8:	9f2c7000 	svcls	0x002c7000
    2adc:	10001d54 	andne	r1, r0, r4, asr sp
    2ae0:	10001d58 	andne	r1, r0, r8, asr sp
    2ae4:	30700003 	rsbscc	r0, r0, r3
    2ae8:	001d589f 	mulseq	sp, pc, r8	; <UNPREDICTABLE>
    2aec:	001d5c10 	andseq	r5, sp, r0, lsl ip
    2af0:	70000310 	andvc	r0, r0, r0, lsl r3
    2af4:	1d5c9f34 	ldclne	15, cr9, [ip, #-208]	; 0xffffff30
    2af8:	1d601000 	stclne	0, cr1, [r0, #-0]
    2afc:	00031000 	andeq	r1, r3, r0
    2b00:	609f3870 	addsvs	r3, pc, r0, ror r8	; <UNPREDICTABLE>
    2b04:	6410001d 	ldrvs	r0, [r0], #-29	; 0xffffffe3
    2b08:	0310001d 	tsteq	r0, #29
    2b0c:	9f3c7000 	svcls	0x003c7000
    2b10:	10001d64 	andne	r1, r0, r4, ror #26
    2b14:	10001d6c 	andne	r1, r0, ip, ror #26
    2b18:	c0700004 	rsbsgt	r0, r0, r4
    2b1c:	1d6c9f00 	stclne	15, cr9, [ip, #-0]
    2b20:	1e181000 	cdpne	0, 1, cr1, cr8, cr0, {0}
    2b24:	00041000 	andeq	r1, r4, r0
    2b28:	9f00c075 	svcls	0x0000c075
    2b2c:	10001e18 	andne	r1, r0, r8, lsl lr
    2b30:	10001ea4 	andne	r1, r0, r4, lsr #29
    2b34:	01f30006 	mvnseq	r0, r6
    2b38:	9f402350 	svcls	0x00402350
	...
    2b44:	10001c3c 	andne	r1, r0, ip, lsr ip
    2b48:	10001c3e 	andne	r1, r0, lr, lsr ip
    2b4c:	007d0002 	rsbseq	r0, sp, r2
    2b50:	10001c3e 	andne	r1, r0, lr, lsr ip
    2b54:	10001c54 	andne	r1, r0, r4, asr ip
    2b58:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    2b6c:	10001c3c 	andne	r1, r0, ip, lsr ip
    2b70:	10001c44 	andne	r1, r0, r4, asr #24
    2b74:	44500001 	ldrbmi	r0, [r0], #-1
    2b78:	4710001c 			; <UNDEFINED> instruction: 0x4710001c
    2b7c:	0110001c 	tsteq	r0, ip, lsl r0
    2b80:	1c475100 	stfnee	f5, [r7], {-0}
    2b84:	1c501000 	mrane	r1, r0, acc0
    2b88:	00011000 	andeq	r1, r1, r0
    2b8c:	001c5054 	andseq	r5, ip, r4, asr r0
    2b90:	001c5410 	andseq	r5, ip, r0, lsl r4
    2b94:	f3000410 	vqshl.u8	d0, d0, d0
    2b98:	009f5001 	addseq	r5, pc, r1
	...
    2ba4:	04000000 	streq	r0, [r0], #-0
    2ba8:	0a10001c 	beq	402c20 <__RAM_SIZE+0x302c20>
    2bac:	0110001c 	tsteq	r0, ip, lsl r0
    2bb0:	1c0a5000 	stcne	0, cr5, [sl], {-0}
    2bb4:	1c3a1000 	ldcne	0, cr1, [sl], #-0
    2bb8:	00041000 	andeq	r1, r4, r0
    2bbc:	9f5001f3 	svcls	0x005001f3
	...
    2bc8:	1c080000 	stcne	0, cr0, [r8], {-0}
    2bcc:	1c3a1000 	ldcne	0, cr1, [sl], #-0
    2bd0:	00011000 	andeq	r1, r1, r0
    2bd4:	00000053 	andeq	r0, r0, r3, asr r0
	...
    2bf0:	001c0e00 	andseq	r0, ip, r0, lsl #28
    2bf4:	001c2810 	andseq	r2, ip, r0, lsl r8
    2bf8:	50000110 	andpl	r0, r0, r0, lsl r1
    2bfc:	10001c28 	andne	r1, r0, r8, lsr #24
    2c00:	10001c2a 	andne	r1, r0, sl, lsr #24
    2c04:	01f3000a 	mvnseq	r0, sl
    2c08:	0a254050 	beq	952d50 <__RAM_SIZE+0x852d50>
    2c0c:	9f1af800 	svcls	0x001af800
    2c10:	10001c2a 	andne	r1, r0, sl, lsr #24
    2c14:	10001c2c 	andne	r1, r0, ip, lsr #24
    2c18:	2c500001 	mrrccs	0, 0, r0, r0, cr1	; <UNPREDICTABLE>
    2c1c:	2e10001c 	mrccs	0, 0, r0, cr0, cr12, {0}
    2c20:	0a10001c 	beq	402c98 <__RAM_SIZE+0x302c98>
    2c24:	5001f300 	andpl	pc, r1, r0, lsl #6
    2c28:	000a2540 	andeq	r2, sl, r0, asr #10
    2c2c:	2e9f1af8 			; <UNDEFINED> instruction: 0x2e9f1af8
    2c30:	3010001c 	andscc	r0, r0, ip, lsl r0
    2c34:	0110001c 	tsteq	r0, ip, lsl r0
    2c38:	1c305000 	ldcne	0, cr5, [r0], #-0
    2c3c:	1c321000 	ldcne	0, cr1, [r2], #-0
    2c40:	000a1000 	andeq	r1, sl, r0
    2c44:	405001f3 	ldrshmi	r0, [r0], #-19	; 0xffffffed
    2c48:	f8000a25 			; <UNDEFINED> instruction: 0xf8000a25
    2c4c:	1c329f1a 	ldcne	15, cr9, [r2], #-104	; 0xffffff98
    2c50:	1c341000 	ldcne	0, cr1, [r4], #-0
    2c54:	00011000 	andeq	r1, r1, r0
    2c58:	001c3450 	andseq	r3, ip, r0, asr r4
    2c5c:	001c3610 	andseq	r3, ip, r0, lsl r6
    2c60:	f3000a10 	vpmin.u8	d0, d0, d0
    2c64:	25405001 	strbcs	r5, [r0, #-1]
    2c68:	1af8000a 	bne	ffe02c98 <__StackTop+0xc7d02c98>
    2c6c:	001c369f 	mulseq	ip, pc, r6	; <UNPREDICTABLE>
    2c70:	001c3810 	andseq	r3, ip, r0, lsl r8
    2c74:	50000110 	andpl	r0, r0, r0, lsl r1
    2c78:	10001c38 	andne	r1, r0, r8, lsr ip
    2c7c:	10001c3a 	andne	r1, r0, sl, lsr ip
    2c80:	01f3000a 	mvnseq	r0, sl
    2c84:	0a254050 	beq	952dcc <__RAM_SIZE+0x852dcc>
    2c88:	9f1af800 	svcls	0x001af800
	...
    2c94:	10001bd8 	ldrdne	r1, [r0], -r8
    2c98:	10001bda 	ldrdne	r1, [r0], -sl
    2c9c:	007d0002 	rsbseq	r0, sp, r2
    2ca0:	10001bda 	ldrdne	r1, [r0], -sl
    2ca4:	10001c02 	andne	r1, r0, r2, lsl #24
    2ca8:	087d0002 	ldmdaeq	sp!, {r1}^
    2cac:	10001c02 	andne	r1, r0, r2, lsl #24
    2cb0:	10001c04 	andne	r1, r0, r4, lsl #24
    2cb4:	007d0002 	rsbseq	r0, sp, r2
	...
    2cc4:	10001bd8 	ldrdne	r1, [r0], -r8
    2cc8:	10001bf8 	strdne	r1, [r0], -r8
    2ccc:	f8500001 			; <UNDEFINED> instruction: 0xf8500001
    2cd0:	0410001b 	ldreq	r0, [r0], #-27	; 0xffffffe5
    2cd4:	0410001c 	ldreq	r0, [r0], #-28	; 0xffffffe4
    2cd8:	5001f300 	andpl	pc, r1, r0, lsl #6
    2cdc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    2ce0:	00000000 	andeq	r0, r0, r0
    2ce4:	00000100 	andeq	r0, r0, r0, lsl #2
    2ce8:	de000000 	cdple	0, 0, cr0, cr0, cr0, {0}
    2cec:	fc10001b 	ldc2	0, cr0, [r0], {27}
    2cf0:	0210001b 	andseq	r0, r0, #27
    2cf4:	fc9f3000 	ldc2	0, cr3, [pc], {0}
    2cf8:	0010001b 	andseq	r0, r0, fp, lsl r0
    2cfc:	0810001c 	ldmdaeq	r0, {r2, r3, r4}
    2d00:	40007000 	andmi	r7, r0, r0
    2d04:	21007324 	tstcs	r0, r4, lsr #6
    2d08:	001c009f 	mulseq	ip, pc, r0	; <UNPREDICTABLE>
    2d0c:	001c0410 	andseq	r0, ip, r0, lsl r4
    2d10:	50000110 	andpl	r0, r0, r0, lsl r1
	...
    2d1c:	00000003 	andeq	r0, r0, r3
    2d20:	10001bde 	ldrdne	r1, [r0], -lr
    2d24:	10001be0 	andne	r1, r0, r0, ror #23
    2d28:	9f300002 	svcls	0x00300002
    2d2c:	10001be0 	andne	r1, r0, r0, ror #23
    2d30:	10001bfc 	strdne	r1, [r0], -ip
    2d34:	00530001 	subseq	r0, r3, r1
    2d38:	00000000 	andeq	r0, r0, r0
    2d3c:	54000000 	strpl	r0, [r0], #-0
    2d40:	5610001c 			; <UNDEFINED> instruction: 0x5610001c
    2d44:	0210001c 	andseq	r0, r0, #28
    2d48:	56007d00 	strpl	r7, [r0], -r0, lsl #26
    2d4c:	a410001c 	ldrge	r0, [r0], #-28	; 0xffffffe4
    2d50:	0210001c 	andseq	r0, r0, #28
    2d54:	00087d00 	andeq	r7, r8, r0, lsl #26
    2d58:	00000000 	andeq	r0, r0, r0
    2d5c:	b4000000 	strlt	r0, [r0], #-0
    2d60:	b610001e 			; <UNDEFINED> instruction: 0xb610001e
    2d64:	0210001e 	andseq	r0, r0, #30
    2d68:	b6007d00 	strlt	r7, [r0], -r0, lsl #26
    2d6c:	b010001e 	andslt	r0, r0, lr, lsl r0
    2d70:	0210001f 	andseq	r0, r0, #31
    2d74:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    2d80:	b4000000 	strlt	r0, [r0], #-0
    2d84:	ba10001e 	blt	402e04 <__RAM_SIZE+0x302e04>
    2d88:	0110001e 	tsteq	r0, lr, lsl r0
    2d8c:	1eba5000 	cdpne	0, 11, cr5, cr10, cr0, {0}
    2d90:	1fb01000 	svcne	0x00b01000
    2d94:	00011000 	andeq	r1, r1, r0
    2d98:	00000054 	andeq	r0, r0, r4, asr r0
	...
    2da4:	02000000 	andeq	r0, r0, #0
    2da8:	1a100020 	bne	402e30 <__RAM_SIZE+0x302e30>
    2dac:	01100020 	tsteq	r0, r0, lsr #32
    2db0:	201a5000 	andscs	r5, sl, r0
    2db4:	20201000 	eorcs	r1, r0, r0
    2db8:	00041000 	andeq	r1, r4, r0
    2dbc:	9f5001f3 	svcls	0x005001f3
    2dc0:	10002020 	andne	r2, r0, r0, lsr #32
    2dc4:	10002026 	andne	r2, r0, r6, lsr #32
    2dc8:	00500001 	subseq	r0, r0, r1
	...
    2dd4:	00200400 	eoreq	r0, r0, r0, lsl #8
    2dd8:	00202610 	eoreq	r2, r0, r0, lsl r6
    2ddc:	53000110 	movwpl	r0, #272	; 0x110
	...
    2de8:	10001fd0 	ldrdne	r1, [r0], -r0
    2dec:	10001fd2 	ldrdne	r1, [r0], -r2
    2df0:	007d0002 	rsbseq	r0, sp, r2
    2df4:	10001fd2 	ldrdne	r1, [r0], -r2
    2df8:	10001ffc 	strdne	r1, [r0], -ip
    2dfc:	087d0002 	ldmdaeq	sp!, {r1}^
    2e00:	10001ffc 	strdne	r1, [r0], -ip
    2e04:	10001ffe 	strdne	r1, [r0], -lr
    2e08:	007d0002 	rsbseq	r0, sp, r2
    2e0c:	10001ffe 	strdne	r1, [r0], -lr
    2e10:	10002002 	andne	r2, r0, r2
    2e14:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    2e24:	1fde0000 	svcne	0x00de0000
    2e28:	1fe21000 	svcne	0x00e21000
    2e2c:	00011000 	andeq	r1, r1, r0
    2e30:	001fe253 	andseq	lr, pc, r3, asr r2	; <UNPREDICTABLE>
    2e34:	001ffc10 	andseq	pc, pc, r0, lsl ip	; <UNPREDICTABLE>
    2e38:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    2e3c:	10002000 	andne	r2, r0, r0
    2e40:	10002002 	andne	r2, r0, r2
    2e44:	00540001 	subseq	r0, r4, r1
	...
    2e50:	d4000000 	strle	r0, [r0], #-0
    2e54:	fc10001f 	ldc2	0, cr0, [r0], {31}
    2e58:	0110001f 	tsteq	r0, pc, lsl r0
    2e5c:	1ffe5500 	svcne	0x00fe5500
    2e60:	20021000 	andcs	r1, r2, r0
    2e64:	00011000 	andeq	r1, r1, r0
    2e68:	00000055 	andeq	r0, r0, r5, asr r0
	...
    2e78:	01000000 	mrseq	r0, (UNDEF: 0)
    2e7c:	00005300 	andeq	r5, r0, r0, lsl #6
    2e80:	00000000 	andeq	r0, r0, r0
    2e84:	20da0000 	sbcscs	r0, sl, r0
    2e88:	20dc1000 	sbcscs	r1, ip, r0
    2e8c:	00021000 	andeq	r1, r2, r0
    2e90:	20dc007d 	sbcscs	r0, ip, sp, ror r0
    2e94:	20de1000 	sbcscs	r1, lr, r0
    2e98:	00021000 	andeq	r1, r2, r0
    2e9c:	20de107d 	sbcscs	r1, lr, sp, ror r0
    2ea0:	20f01000 	rscscs	r1, r0, r0
    2ea4:	00021000 	andeq	r1, r2, r0
    2ea8:	20f0187d 	rscscs	r1, r0, sp, ror r8
    2eac:	20f21000 	rscscs	r1, r2, r0
    2eb0:	00021000 	andeq	r1, r2, r0
    2eb4:	20f2107d 	rscscs	r1, r2, sp, ror r0
    2eb8:	21321000 	teqcs	r2, r0
    2ebc:	00021000 	andeq	r1, r2, r0
    2ec0:	0000187d 	andeq	r1, r0, sp, ror r8
	...
    2ed0:	100020da 	ldrdne	r2, [r0], -sl
    2ed4:	100020ec 	andne	r2, r0, ip, ror #1
    2ed8:	f2500001 	vhadd.s16	d16, d0, d1
    2edc:	fe100020 	cdp2	0, 1, cr0, cr0, cr0, {1}
    2ee0:	01100020 	tsteq	r0, r0, lsr #32
    2ee4:	20fe5000 	rscscs	r5, lr, r0
    2ee8:	21011000 	mrscs	r1, (UNDEF: 1)
    2eec:	00021000 	andeq	r1, r2, r0
    2ef0:	00000071 	andeq	r0, r0, r1, ror r0
	...
    2efc:	100020e2 	andne	r2, r0, r2, ror #1
    2f00:	10002132 	andne	r2, r0, r2, lsr r1
    2f04:	00540001 	subseq	r0, r4, r1
    2f08:	00000000 	andeq	r0, r0, r0
    2f0c:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    2f1c:	0020e200 	eoreq	lr, r0, r0, lsl #4
    2f20:	0020ec10 	eoreq	lr, r0, r0, lsl ip
    2f24:	30000210 	andcc	r0, r0, r0, lsl r2
    2f28:	0020f29f 	mlaeq	r0, pc, r2, pc	; <UNPREDICTABLE>
    2f2c:	00210410 	eoreq	r0, r1, r0, lsl r4
    2f30:	30000210 	andcc	r0, r0, r0, lsl r2
    2f34:	0021049f 	mlaeq	r1, pc, r4, r0	; <UNPREDICTABLE>
    2f38:	00211410 	eoreq	r1, r1, r0, lsl r4
    2f3c:	50000110 	andpl	r0, r0, r0, lsl r1
    2f40:	10002114 	andne	r2, r0, r4, lsl r1
    2f44:	1000211e 	andne	r2, r0, lr, lsl r1
    2f48:	1e550001 	cdpne	0, 5, cr0, cr5, cr1, {0}
    2f4c:	20100021 	andscs	r0, r0, r1, lsr #32
    2f50:	02100021 	andseq	r0, r0, #33	; 0x21
    2f54:	209f3100 	addscs	r3, pc, r0, lsl #2
    2f58:	23100021 	tstcs	r0, #33	; 0x21
    2f5c:	01100021 	tsteq	r0, r1, lsr #32
    2f60:	21235000 			; <UNDEFINED> instruction: 0x21235000
    2f64:	21321000 	teqcs	r2, r0
    2f68:	00011000 	andeq	r1, r1, r0
    2f6c:	00000055 	andeq	r0, r0, r5, asr r0
	...
    2f78:	0020f800 	eoreq	pc, r0, r0, lsl #16
    2f7c:	00212a10 	eoreq	r2, r1, r0, lsl sl
    2f80:	56000110 			; <UNDEFINED> instruction: 0x56000110
    2f84:	1000212a 	andne	r2, r0, sl, lsr #2
    2f88:	1000212c 	andne	r2, r0, ip, lsr #2
    2f8c:	7f760003 	svcvc	0x00760003
    2f90:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    2f94:	00000000 	andeq	r0, r0, r0
    2f98:	24000000 	strcs	r0, [r0], #-0
    2f9c:	32100021 	andscc	r0, r0, #33	; 0x21
    2fa0:	01100021 	tsteq	r0, r1, lsr #32
    2fa4:	00005000 	andeq	r5, r0, r0
	...
    2fb4:	00020000 	andeq	r0, r2, r0
    2fb8:	0000007d 	andeq	r0, r0, sp, ror r0
    2fbc:	00000000 	andeq	r0, r0, r0
    2fc0:	00020000 	andeq	r0, r2, r0
    2fc4:	0000047d 	andeq	r0, r0, sp, ror r4
    2fc8:	00000000 	andeq	r0, r0, r0
    2fcc:	00020000 	andeq	r0, r2, r0
    2fd0:	0000107d 	andeq	r1, r0, sp, ror r0
    2fd4:	00000000 	andeq	r0, r0, r0
    2fd8:	00020000 	andeq	r0, r2, r0
    2fdc:	0000047d 	andeq	r0, r0, sp, ror r4
	...
    2ff0:	00010000 	andeq	r0, r1, r0
    2ff4:	00000050 	andeq	r0, r0, r0, asr r0
    2ff8:	00000000 	andeq	r0, r0, r0
    2ffc:	f3000400 	vshl.u8	d0, d0, d0
    3000:	009f5001 	addseq	r5, pc, r1
	...
    3010:	02000000 	andeq	r0, r0, #0
    3014:	00007d00 	andeq	r7, r0, r0, lsl #26
    3018:	00000000 	andeq	r0, r0, r0
    301c:	02000000 	andeq	r0, r0, #0
    3020:	00047d00 	andeq	r7, r4, r0, lsl #26
    3024:	00000000 	andeq	r0, r0, r0
    3028:	02000000 	andeq	r0, r0, #0
    302c:	00107d00 	andseq	r7, r0, r0, lsl #26
    3030:	00000000 	andeq	r0, r0, r0
    3034:	02000000 	andeq	r0, r0, #0
    3038:	00047d00 	andeq	r7, r4, r0, lsl #26
	...
    304c:	01000000 	mrseq	r0, (UNDEF: 0)
    3050:	00005000 	andeq	r5, r0, r0
    3054:	00000000 	andeq	r0, r0, r0
    3058:	00040000 	andeq	r0, r4, r0
    305c:	9f5001f3 	svcls	0x005001f3
	...
    3074:	00010000 	andeq	r0, r1, r0
    3078:	00000051 	andeq	r0, r0, r1, asr r0
    307c:	00000000 	andeq	r0, r0, r0
    3080:	52000100 	andpl	r0, r0, #0, 2
	...
    308c:	01f30004 	mvnseq	r0, r4
    3090:	00009f51 	andeq	r9, r0, r1, asr pc
	...
    30a0:	00020000 	andeq	r0, r2, r0
    30a4:	0000007d 	andeq	r0, r0, sp, ror r0
    30a8:	00000000 	andeq	r0, r0, r0
    30ac:	00020000 	andeq	r0, r2, r0
    30b0:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    30cc:	00010000 	andeq	r0, r1, r0
    30d0:	00000050 	andeq	r0, r0, r0, asr r0
    30d4:	00000000 	andeq	r0, r0, r0
    30d8:	f3000400 	vshl.u8	d0, d0, d0
    30dc:	009f5001 	addseq	r5, pc, r1
    30e0:	00000000 	andeq	r0, r0, r0
    30e4:	01000000 	mrseq	r0, (UNDEF: 0)
    30e8:	00005000 	andeq	r5, r0, r0
    30ec:	00000000 	andeq	r0, r0, r0
    30f0:	00010000 	andeq	r0, r1, r0
    30f4:	00000054 	andeq	r0, r0, r4, asr r0
    30f8:	00000000 	andeq	r0, r0, r0
    30fc:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    3108:	00540001 	subseq	r0, r4, r1
	...
    3114:	00000202 	andeq	r0, r0, r2, lsl #4
	...
    3120:	01000000 	mrseq	r0, (UNDEF: 0)
    3124:	00005100 	andeq	r5, r0, r0, lsl #2
    3128:	00000000 	andeq	r0, r0, r0
    312c:	00040000 	andeq	r0, r4, r0
    3130:	9f5101f3 	svcls	0x005101f3
	...
    313c:	00510001 	subseq	r0, r1, r1
    3140:	00000000 	andeq	r0, r0, r0
    3144:	04000000 	streq	r0, [r0], #-0
    3148:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    314c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3150:	00000000 	andeq	r0, r0, r0
    3154:	01020000 	mrseq	r0, (UNDEF: 2)
	...
    3160:	30000200 	andcc	r0, r0, r0, lsl #4
    3164:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3168:	00000000 	andeq	r0, r0, r0
    316c:	31000200 	mrscc	r0, R8_usr
    3170:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3174:	00000000 	andeq	r0, r0, r0
    3178:	00000300 	andeq	r0, r0, r0, lsl #6
	...
    318c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    3198:	01f30004 	mvnseq	r0, r4
    319c:	00009f50 	andeq	r9, r0, r0, asr pc
    31a0:	00000000 	andeq	r0, r0, r0
    31a4:	00010000 	andeq	r0, r1, r0
    31a8:	00000050 	andeq	r0, r0, r0, asr r0
    31ac:	00000000 	andeq	r0, r0, r0
    31b0:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    31bc:	00500001 	subseq	r0, r0, r1
    31c0:	00000000 	andeq	r0, r0, r0
    31c4:	01000000 	mrseq	r0, (UNDEF: 0)
    31c8:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    31d8:	00020000 	andeq	r0, r2, r0
    31dc:	0000007d 	andeq	r0, r0, sp, ror r0
    31e0:	00000000 	andeq	r0, r0, r0
    31e4:	00020000 	andeq	r0, r2, r0
    31e8:	0000107d 	andeq	r1, r0, sp, ror r0
	...
    3208:	00500001 	subseq	r0, r0, r1
    320c:	00000000 	andeq	r0, r0, r0
    3210:	01000000 	mrseq	r0, (UNDEF: 0)
    3214:	00005400 	andeq	r5, r0, r0, lsl #8
    3218:	00000000 	andeq	r0, r0, r0
    321c:	00040000 	andeq	r0, r4, r0
    3220:	9f5001f3 	svcls	0x005001f3
	...
    322c:	00540001 	subseq	r0, r4, r1
    3230:	00000000 	andeq	r0, r0, r0
    3234:	04000000 	streq	r0, [r0], #-0
    3238:	5001f300 	andpl	pc, r1, r0, lsl #6
    323c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3240:	00000000 	andeq	r0, r0, r0
    3244:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    3250:	01f30004 	mvnseq	r0, r4
    3254:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    3268:	00010000 	andeq	r0, r1, r0
    326c:	00000051 	andeq	r0, r0, r1, asr r0
    3270:	00000000 	andeq	r0, r0, r0
    3274:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    3280:	00010000 	andeq	r0, r1, r0
	...
    328c:	00540001 	subseq	r0, r4, r1
    3290:	00000000 	andeq	r0, r0, r0
    3294:	02000000 	andeq	r0, r0, #0
    3298:	009f3100 	addseq	r3, pc, r0, lsl #2
	...
    32a8:	02000000 	andeq	r0, r0, #0
    32ac:	00007d00 	andeq	r7, r0, r0, lsl #26
    32b0:	00000000 	andeq	r0, r0, r0
    32b4:	02000000 	andeq	r0, r0, #0
    32b8:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    32cc:	01000000 	mrseq	r0, (UNDEF: 0)
    32d0:	00005000 	andeq	r5, r0, r0
    32d4:	00000000 	andeq	r0, r0, r0
    32d8:	00040000 	andeq	r0, r4, r0
    32dc:	9f5001f3 	svcls	0x005001f3
	...
    32f0:	00010000 	andeq	r0, r1, r0
    32f4:	00000050 	andeq	r0, r0, r0, asr r0
    32f8:	00000000 	andeq	r0, r0, r0
    32fc:	00238800 	eoreq	r8, r3, r0, lsl #16
    3300:	00238a10 	eoreq	r8, r3, r0, lsl sl
    3304:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    3308:	00238a00 	eoreq	r8, r3, r0, lsl #20
    330c:	0023da10 	eoreq	sp, r3, r0, lsl sl
    3310:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    3314:	00000010 	andeq	r0, r0, r0, lsl r0
	...
    3320:	00238800 	eoreq	r8, r3, r0, lsl #16
    3324:	00239310 	eoreq	r9, r3, r0, lsl r3
    3328:	50000110 	andpl	r0, r0, r0, lsl r1
    332c:	10002393 	mulne	r0, r3, r3
    3330:	100023da 	ldrdne	r2, [r0], -sl
    3334:	00540001 	subseq	r0, r4, r1
	...
    3340:	88000000 	stmdahi	r0, {}	; <UNPREDICTABLE>
    3344:	93100023 	tstls	r0, #35	; 0x23
    3348:	01100023 	tsteq	r0, r3, lsr #32
    334c:	23935100 	orrscs	r5, r3, #0, 2
    3350:	23da1000 	bicscs	r1, sl, #0
    3354:	00011000 	andeq	r1, r1, r0
    3358:	00000055 	andeq	r0, r0, r5, asr r0
	...
    3364:	00238800 	eoreq	r8, r3, r0, lsl #16
    3368:	00239310 	eoreq	r9, r3, r0, lsl r3
    336c:	52000110 	andpl	r0, r0, #16, 2
    3370:	10002393 	mulne	r0, r3, r3
    3374:	100023da 	ldrdne	r2, [r0], -sl
    3378:	00560001 	subseq	r0, r6, r1
    337c:	00000000 	andeq	r0, r0, r0
    3380:	01000000 	mrseq	r0, (UNDEF: 0)
    3384:	90000000 	andls	r0, r0, r0
    3388:	93100023 	tstls	r0, #35	; 0x23
    338c:	01100023 	tsteq	r0, r3, lsr #32
    3390:	23935000 	orrscs	r5, r3, #0
    3394:	23da1000 	bicscs	r1, sl, #0
    3398:	00011000 	andeq	r1, r1, r0
    339c:	00000054 	andeq	r0, r0, r4, asr r0
	...
    33b4:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    33c0:	01f30004 	mvnseq	r0, r4
    33c4:	00009f50 	andeq	r9, r0, r0, asr pc
    33c8:	00000000 	andeq	r0, r0, r0
    33cc:	00010000 	andeq	r0, r1, r0
    33d0:	00000050 	andeq	r0, r0, r0, asr r0
    33d4:	00000000 	andeq	r0, r0, r0
    33d8:	f3000400 	vshl.u8	d0, d0, d0
    33dc:	009f5001 	addseq	r5, pc, r1
	...
    33f0:	30000200 	andcc	r0, r0, r0, lsl #4
    33f4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    33f8:	00000000 	andeq	r0, r0, r0
    33fc:	00000300 	andeq	r0, r0, r0, lsl #6
	...
    340c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    3418:	01f30004 	mvnseq	r0, r4
    341c:	00009f50 	andeq	r9, r0, r0, asr pc
    3420:	00000000 	andeq	r0, r0, r0
    3424:	00010000 	andeq	r0, r1, r0
    3428:	00000050 	andeq	r0, r0, r0, asr r0
    342c:	00000000 	andeq	r0, r0, r0
    3430:	f3000400 	vshl.u8	d0, d0, d0
    3434:	009f5001 	addseq	r5, pc, r1
	...
    3444:	02000000 	andeq	r0, r0, #0
    3448:	00007d00 	andeq	r7, r0, r0, lsl #26
    344c:	00000000 	andeq	r0, r0, r0
    3450:	02000000 	andeq	r0, r0, #0
    3454:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    3470:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    347c:	00540001 	subseq	r0, r4, r1
    3480:	00000000 	andeq	r0, r0, r0
    3484:	04000000 	streq	r0, [r0], #-0
    3488:	5001f300 	andpl	pc, r1, r0, lsl #6
    348c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3490:	00000000 	andeq	r0, r0, r0
    3494:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    34a0:	01f30004 	mvnseq	r0, r4
    34a4:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    34b8:	00540001 	subseq	r0, r4, r1
	...
    34d0:	01000000 	mrseq	r0, (UNDEF: 0)
    34d4:	00005000 	andeq	r5, r0, r0
    34d8:	00000000 	andeq	r0, r0, r0
    34dc:	00040000 	andeq	r0, r4, r0
    34e0:	9f5001f3 	svcls	0x005001f3
	...
    34ec:	00500001 	subseq	r0, r0, r1
    34f0:	00000000 	andeq	r0, r0, r0
    34f4:	04000000 	streq	r0, [r0], #-0
    34f8:	5001f300 	andpl	pc, r1, r0, lsl #6
    34fc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3500:	00000000 	andeq	r0, r0, r0
    3504:	00000300 	andeq	r0, r0, r0, lsl #6
	...
    3514:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    3520:	01f30004 	mvnseq	r0, r4
    3524:	00009f50 	andeq	r9, r0, r0, asr pc
    3528:	00000000 	andeq	r0, r0, r0
    352c:	00010000 	andeq	r0, r1, r0
    3530:	00000050 	andeq	r0, r0, r0, asr r0
    3534:	00000000 	andeq	r0, r0, r0
    3538:	f3000400 	vshl.u8	d0, d0, d0
    353c:	009f5001 	addseq	r5, pc, r1
    3540:	00000000 	andeq	r0, r0, r0
    3544:	26000000 	strcs	r0, [r0], -r0
    3548:	28100020 	ldmdacs	r0, {r5}
    354c:	02100020 	andseq	r0, r0, #32
    3550:	28007d00 	stmdacs	r0, {r8, sl, fp, ip, sp, lr}
    3554:	40100020 	andsmi	r0, r0, r0, lsr #32
    3558:	02100020 	andseq	r0, r0, #32
    355c:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    3570:	00202600 	eoreq	r2, r0, r0, lsl #12
    3574:	00202d10 	eoreq	r2, r0, r0, lsl sp
    3578:	50000110 	andpl	r0, r0, r0, lsl r1
    357c:	1000202d 	andne	r2, r0, sp, lsr #32
    3580:	10002034 	andne	r2, r0, r4, lsr r0
    3584:	34540001 	ldrbcc	r0, [r4], #-1
    3588:	3c100020 	ldccc	0, cr0, [r0], {32}
    358c:	04100020 	ldreq	r0, [r0], #-32	; 0xffffffe0
    3590:	5001f300 	andpl	pc, r1, r0, lsl #6
    3594:	00203c9f 	mlaeq	r0, pc, ip, r3	; <UNPREDICTABLE>
    3598:	00203e10 	eoreq	r3, r0, r0, lsl lr
    359c:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    35a0:	1000203e 	andne	r2, r0, lr, lsr r0
    35a4:	10002040 	andne	r2, r0, r0, asr #32
    35a8:	01f30004 	mvnseq	r0, r4
    35ac:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    35b8:	10002034 	andne	r2, r0, r4, lsr r0
    35bc:	1000203c 	andne	r2, r0, ip, lsr r0
    35c0:	00540001 	subseq	r0, r4, r1
    35c4:	00000000 	andeq	r0, r0, r0
    35c8:	32000000 	andcc	r0, r0, #0
    35cc:	34100021 	ldrcc	r0, [r0], #-33	; 0xffffffdf
    35d0:	02100021 	andseq	r0, r0, #33	; 0x21
    35d4:	34007d00 	strcc	r7, [r0], #-3328	; 0xfffff300
    35d8:	b4100021 	ldrlt	r0, [r0], #-33	; 0xffffffdf
    35dc:	02100021 	andseq	r0, r0, #33	; 0x21
    35e0:	00107d00 	andseq	r7, r0, r0, lsl #26
	...
    35ec:	32000000 	andcc	r0, r0, #0
    35f0:	39100021 	ldmdbcc	r0, {r0, r5}
    35f4:	01100021 	tsteq	r0, r1, lsr #32
    35f8:	21395000 	teqcs	r9, r0
    35fc:	21b41000 			; <UNDEFINED> instruction: 0x21b41000
    3600:	00011000 	andeq	r1, r1, r0
    3604:	00000055 	andeq	r0, r0, r5, asr r0
	...
    3610:	00214000 	eoreq	r4, r1, r0
    3614:	00215210 	eoreq	r5, r1, r0, lsl r2
    3618:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    361c:	10002154 	andne	r2, r0, r4, asr r1
    3620:	10002186 	andne	r2, r0, r6, lsl #3
    3624:	00540001 	subseq	r0, r4, r1
	...
    3630:	88000000 	stmdahi	r0, {}	; <UNPREDICTABLE>
    3634:	8c100021 	ldchi	0, cr0, [r0], {33}	; 0x21
    3638:	01100021 	tsteq	r0, r1, lsr #32
    363c:	218e5400 	orrcs	r5, lr, r0, lsl #8
    3640:	21b41000 			; <UNDEFINED> instruction: 0x21b41000
    3644:	00011000 	andeq	r1, r1, r0
    3648:	00000054 	andeq	r0, r0, r4, asr r0
    364c:	00000000 	andeq	r0, r0, r0
    3650:	0020b600 	eoreq	fp, r0, r0, lsl #12
    3654:	0020be10 	eoreq	fp, r0, r0, lsl lr
    3658:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    365c:	0020be00 	eoreq	fp, r0, r0, lsl #28
    3660:	0020d810 	eoreq	sp, r0, r0, lsl r8
    3664:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    3668:	0020d808 	eoreq	sp, r0, r8, lsl #16
    366c:	0020da10 	eoreq	sp, r0, r0, lsl sl
    3670:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
	...
    3684:	0020b600 	eoreq	fp, r0, r0, lsl #12
    3688:	0020c010 	eoreq	ip, r0, r0, lsl r0
    368c:	50000110 	andpl	r0, r0, r0, lsl r1
    3690:	100020c0 	andne	r2, r0, r0, asr #1
    3694:	100020d5 	ldrdne	r2, [r0], -r5
    3698:	d5530001 	ldrble	r0, [r3, #-1]
    369c:	d8100020 	ldmdale	r0, {r5}
    36a0:	04100020 	ldreq	r0, [r0], #-32	; 0xffffffe0
    36a4:	5001f300 	andpl	pc, r1, r0, lsl #6
    36a8:	0020d89f 	mlaeq	r0, pc, r8, sp	; <UNPREDICTABLE>
    36ac:	0020da10 	eoreq	sp, r0, r0, lsl sl
    36b0:	50000110 	andpl	r0, r0, r0, lsl r1
	...
    36c4:	100020b6 	strhne	r2, [r0], -r6
    36c8:	100020c2 	andne	r2, r0, r2, asr #1
    36cc:	c2510001 	subsgt	r0, r1, #1
    36d0:	d5100020 	ldrle	r0, [r0, #-32]	; 0xffffffe0
    36d4:	01100020 	tsteq	r0, r0, lsr #32
    36d8:	20d55000 	sbcscs	r5, r5, r0
    36dc:	20d81000 	sbcscs	r1, r8, r0
    36e0:	00041000 	andeq	r1, r4, r0
    36e4:	9f5101f3 	svcls	0x005101f3
    36e8:	100020d8 	ldrdne	r2, [r0], -r8
    36ec:	100020da 	ldrdne	r2, [r0], -sl
    36f0:	00510001 	subseq	r0, r1, r1
    36f4:	00000000 	andeq	r0, r0, r0
    36f8:	40000000 	andmi	r0, r0, r0
    36fc:	42100020 	andsmi	r0, r0, #32
    3700:	02100020 	andseq	r0, r0, #32
    3704:	42007d00 	andmi	r7, r0, #0, 26
    3708:	b6100020 	ldrlt	r0, [r0], -r0, lsr #32
    370c:	02100020 	andseq	r0, r0, #32
    3710:	00107d00 	andseq	r7, r0, r0, lsl #26
	...
    3728:	40000000 	andmi	r0, r0, r0
    372c:	52100020 	andspl	r0, r0, #32
    3730:	01100020 	tsteq	r0, r0, lsr #32
    3734:	20525000 	subscs	r5, r2, r0
    3738:	20581000 	subscs	r1, r8, r0
    373c:	00011000 	andeq	r1, r1, r0
    3740:	00205854 	eoreq	r5, r0, r4, asr r8
    3744:	00205a10 	eoreq	r5, r0, r0, lsl sl
    3748:	50000110 	andpl	r0, r0, r0, lsl r1
    374c:	1000205a 	andne	r2, r0, sl, asr r0
    3750:	10002064 	andne	r2, r0, r4, rrx
    3754:	64540001 	ldrbvs	r0, [r4], #-1
    3758:	68100020 	ldmdavs	r0, {r5}
    375c:	01100020 	tsteq	r0, r0, lsr #32
    3760:	20685000 	rsbcs	r5, r8, r0
    3764:	20821000 	addcs	r1, r2, r0
    3768:	00011000 	andeq	r1, r1, r0
    376c:	00208254 	eoreq	r8, r0, r4, asr r2
    3770:	00208410 	eoreq	r8, r0, r0, lsl r4
    3774:	50000110 	andpl	r0, r0, r0, lsl r1
    3778:	10002084 	andne	r2, r0, r4, lsl #1
    377c:	100020b6 	strhne	r2, [r0], -r6
    3780:	00540001 	subseq	r0, r4, r1
	...
    3798:	40000000 	andmi	r0, r0, r0
    379c:	52100020 	andspl	r0, r0, #32
    37a0:	01100020 	tsteq	r0, r0, lsr #32
    37a4:	20525100 	subscs	r5, r2, r0, lsl #2
    37a8:	20581000 	subscs	r1, r8, r0
    37ac:	00041000 	andeq	r1, r4, r0
    37b0:	9f5101f3 	svcls	0x005101f3
    37b4:	10002058 	andne	r2, r0, r8, asr r0
    37b8:	1000205d 	andne	r2, r0, sp, asr r0
    37bc:	5d510001 	ldclpl	0, cr0, [r1, #-4]
    37c0:	64100020 	ldrvs	r0, [r0], #-32	; 0xffffffe0
    37c4:	04100020 	ldreq	r0, [r0], #-32	; 0xffffffe0
    37c8:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    37cc:	0020649f 	mlaeq	r0, pc, r4, r6	; <UNPREDICTABLE>
    37d0:	00206b10 	eoreq	r6, r0, r0, lsl fp
    37d4:	51000110 	tstpl	r0, r0, lsl r1
    37d8:	1000206b 	andne	r2, r0, fp, rrx
    37dc:	10002082 	andne	r2, r0, r2, lsl #1
    37e0:	01f30004 	mvnseq	r0, r4
    37e4:	20829f51 	addcs	r9, r2, r1, asr pc
    37e8:	20871000 	addcs	r1, r7, r0
    37ec:	00011000 	andeq	r1, r1, r0
    37f0:	00208751 	eoreq	r8, r0, r1, asr r7
    37f4:	0020b610 	eoreq	fp, r0, r0, lsl r6
    37f8:	f3000410 	vqshl.u8	d0, d0, d0
    37fc:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
    3808:	40000000 	andmi	r0, r0, r0
    380c:	4a100020 	bmi	403894 <__RAM_SIZE+0x303894>
    3810:	01100020 	tsteq	r0, r0, lsr #32
    3814:	204a5200 	subcs	r5, sl, r0, lsl #4
    3818:	20b61000 	adcscs	r1, r6, r0
    381c:	00011000 	andeq	r1, r1, r0
    3820:	00000055 	andeq	r0, r0, r5, asr r0
    3824:	00000000 	andeq	r0, r0, r0
    3828:	00000100 	andeq	r0, r0, r0, lsl #2
    382c:	00000000 	andeq	r0, r0, r0
    3830:	46000000 	strmi	r0, [r0], -r0
    3834:	52100020 	andspl	r0, r0, #32
    3838:	02100020 	andseq	r0, r0, #32
    383c:	529f3000 	addspl	r3, pc, #0
    3840:	58100020 	ldmdapl	r0, {r5}
    3844:	01100020 	tsteq	r0, r0, lsr #32
    3848:	20585000 	subscs	r5, r8, r0
    384c:	205e1000 	subscs	r1, lr, r0
    3850:	00021000 	andeq	r1, r2, r0
    3854:	205e9f30 	subscs	r9, lr, r0, lsr pc
    3858:	20641000 	rsbcs	r1, r4, r0
    385c:	00011000 	andeq	r1, r1, r0
    3860:	00206450 	eoreq	r6, r0, r0, asr r4
    3864:	0020b610 	eoreq	fp, r0, r0, lsl r6
    3868:	30000210 	andcc	r0, r0, r0, lsl r2
    386c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    3878:	48000000 	stmdami	r0, {}	; <UNPREDICTABLE>
    387c:	54100020 	ldrpl	r0, [r0], #-32	; 0xffffffe0
    3880:	01100020 	tsteq	r0, r0, lsr #32
    3884:	20545600 	subscs	r5, r4, r0, lsl #12
    3888:	20581000 	subscs	r1, r8, r0
    388c:	00031000 	andeq	r1, r3, r0
    3890:	589f7f76 	ldmpl	pc, {r1, r2, r4, r5, r6, r8, r9, sl, fp, ip, sp, lr}	; <UNPREDICTABLE>
    3894:	b6100020 	ldrlt	r0, [r0], -r0, lsr #32
    3898:	01100020 	tsteq	r0, r0, lsr #32
    389c:	00005600 	andeq	r5, r0, r0, lsl #12
	...
    38b4:	00500001 	subseq	r0, r0, r1
    38b8:	00000000 	andeq	r0, r0, r0
    38bc:	01000000 	mrseq	r0, (UNDEF: 0)
    38c0:	00005300 	andeq	r5, r0, r0, lsl #6
    38c4:	00000000 	andeq	r0, r0, r0
    38c8:	00040000 	andeq	r0, r4, r0
    38cc:	9f5001f3 	svcls	0x005001f3
	...
    38d8:	00000100 	andeq	r0, r0, r0, lsl #2
    38dc:	00000000 	andeq	r0, r0, r0
    38e0:	00010000 	andeq	r0, r1, r0
    38e4:	00000050 	andeq	r0, r0, r0, asr r0
	...
    38f8:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    3904:	01f30004 	mvnseq	r0, r4
    3908:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    391c:	00010000 	andeq	r0, r1, r0
    3920:	00000050 	andeq	r0, r0, r0, asr r0
    3924:	00000000 	andeq	r0, r0, r0
    3928:	f3000400 	vshl.u8	d0, d0, d0
    392c:	009f5001 	addseq	r5, pc, r1
	...
    393c:	02000000 	andeq	r0, r0, #0
    3940:	00007d00 	andeq	r7, r0, r0, lsl #26
    3944:	00000000 	andeq	r0, r0, r0
    3948:	02000000 	andeq	r0, r0, #0
    394c:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    3964:	01000000 	mrseq	r0, (UNDEF: 0)
    3968:	00005000 	andeq	r5, r0, r0
    396c:	00000000 	andeq	r0, r0, r0
    3970:	00040000 	andeq	r0, r4, r0
    3974:	9f5001f3 	svcls	0x005001f3
	...
    3980:	00500001 	subseq	r0, r0, r1
    3984:	00000000 	andeq	r0, r0, r0
    3988:	04000000 	streq	r0, [r0], #-0
    398c:	5001f300 	andpl	pc, r1, r0, lsl #6
    3990:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3994:	00000000 	andeq	r0, r0, r0
    3998:	00000100 	andeq	r0, r0, r0, lsl #2
	...
    39a8:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    39b4:	01f30004 	mvnseq	r0, r4
    39b8:	00009f50 	andeq	r9, r0, r0, asr pc
    39bc:	00000000 	andeq	r0, r0, r0
    39c0:	00010000 	andeq	r0, r1, r0
    39c4:	00000050 	andeq	r0, r0, r0, asr r0
    39c8:	00000000 	andeq	r0, r0, r0
    39cc:	f3000400 	vshl.u8	d0, d0, d0
    39d0:	009f5001 	addseq	r5, pc, r1
	...
    39e4:	01000000 	mrseq	r0, (UNDEF: 0)
    39e8:	00005000 	andeq	r5, r0, r0
    39ec:	00000000 	andeq	r0, r0, r0
    39f0:	00040000 	andeq	r0, r4, r0
    39f4:	9f5001f3 	svcls	0x005001f3
	...
    3a08:	00010000 	andeq	r0, r1, r0
    3a0c:	00000050 	andeq	r0, r0, r0, asr r0
    3a10:	00000000 	andeq	r0, r0, r0
    3a14:	00000300 	andeq	r0, r0, r0, lsl #6
	...
    3a20:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    3a2c:	01f30004 	mvnseq	r0, r4
    3a30:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    3a40:	00020000 	andeq	r0, r2, r0
    3a44:	0000007d 	andeq	r0, r0, sp, ror r0
    3a48:	00000000 	andeq	r0, r0, r0
    3a4c:	00020000 	andeq	r0, r2, r0
    3a50:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    3a68:	00500001 	subseq	r0, r0, r1
    3a6c:	00000000 	andeq	r0, r0, r0
    3a70:	01000000 	mrseq	r0, (UNDEF: 0)
    3a74:	00005400 	andeq	r5, r0, r0, lsl #8
    3a78:	00000000 	andeq	r0, r0, r0
    3a7c:	00040000 	andeq	r0, r4, r0
    3a80:	9f5001f3 	svcls	0x005001f3
	...
    3a94:	00010000 	andeq	r0, r1, r0
    3a98:	00000054 	andeq	r0, r0, r4, asr r0
    3a9c:	00000000 	andeq	r0, r0, r0
    3aa0:	00000200 	andeq	r0, r0, r0, lsl #4
	...
    3aac:	01000000 	mrseq	r0, (UNDEF: 0)
    3ab0:	00005000 	andeq	r5, r0, r0
    3ab4:	00000000 	andeq	r0, r0, r0
    3ab8:	00010000 	andeq	r0, r1, r0
    3abc:	00000054 	andeq	r0, r0, r4, asr r0
    3ac0:	00000000 	andeq	r0, r0, r0
    3ac4:	f3000400 	vshl.u8	d0, d0, d0
    3ac8:	009f5001 	addseq	r5, pc, r1
	...
    3ad8:	02000000 	andeq	r0, r0, #0
    3adc:	00007d00 	andeq	r7, r0, r0, lsl #26
    3ae0:	00000000 	andeq	r0, r0, r0
    3ae4:	02000000 	andeq	r0, r0, #0
    3ae8:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    3b00:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    3b0c:	00540001 	subseq	r0, r4, r1
    3b10:	00000000 	andeq	r0, r0, r0
    3b14:	04000000 	streq	r0, [r0], #-0
    3b18:	5001f300 	andpl	pc, r1, r0, lsl #6
    3b1c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    3b2c:	01000000 	mrseq	r0, (UNDEF: 0)
    3b30:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    3b40:	00020000 	andeq	r0, r2, r0
    3b44:	0000007d 	andeq	r0, r0, sp, ror r0
    3b48:	00000000 	andeq	r0, r0, r0
    3b4c:	00020000 	andeq	r0, r2, r0
    3b50:	0000187d 	andeq	r1, r0, sp, ror r8
	...
    3b6c:	00500001 	subseq	r0, r0, r1
    3b70:	00000000 	andeq	r0, r0, r0
    3b74:	01000000 	mrseq	r0, (UNDEF: 0)
    3b78:	00005400 	andeq	r5, r0, r0, lsl #8
    3b7c:	00000000 	andeq	r0, r0, r0
    3b80:	00040000 	andeq	r0, r4, r0
    3b84:	9f5001f3 	svcls	0x005001f3
	...
    3b90:	00540001 	subseq	r0, r4, r1
    3b94:	00000000 	andeq	r0, r0, r0
    3b98:	04000000 	streq	r0, [r0], #-0
    3b9c:	5001f300 	andpl	pc, r1, r0, lsl #6
    3ba0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    3bb4:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    3bc0:	00560001 	subseq	r0, r6, r1
	...
    3bcc:	00000100 	andeq	r0, r0, r0, lsl #2
    3bd0:	00000000 	andeq	r0, r0, r0
    3bd4:	01000000 	mrseq	r0, (UNDEF: 0)
    3bd8:	00005400 	andeq	r5, r0, r0, lsl #8
    3bdc:	00000000 	andeq	r0, r0, r0
    3be0:	00020000 	andeq	r0, r2, r0
    3be4:	00009f31 	andeq	r9, r0, r1, lsr pc
	...
    3bfc:	00010000 	andeq	r0, r1, r0
    3c00:	00000050 	andeq	r0, r0, r0, asr r0
    3c04:	00000000 	andeq	r0, r0, r0
    3c08:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    3c14:	00500001 	subseq	r0, r0, r1
    3c18:	00000000 	andeq	r0, r0, r0
    3c1c:	01000000 	mrseq	r0, (UNDEF: 0)
    3c20:	00005500 	andeq	r5, r0, r0, lsl #10
	...
    3c34:	00570001 	subseq	r0, r7, r1
    3c38:	00000000 	andeq	r0, r0, r0
    3c3c:	04000000 	streq	r0, [r0], #-0
	...
    3c50:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    3c5c:	00540001 	subseq	r0, r4, r1
    3c60:	00000000 	andeq	r0, r0, r0
    3c64:	04000000 	streq	r0, [r0], #-0
    3c68:	5001f300 	andpl	pc, r1, r0, lsl #6
    3c6c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3c70:	00000000 	andeq	r0, r0, r0
    3c74:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    3c80:	01f30004 	mvnseq	r0, r4
    3c84:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    3c94:	00020000 	andeq	r0, r2, r0
    3c98:	0000007d 	andeq	r0, r0, sp, ror r0
    3c9c:	00000000 	andeq	r0, r0, r0
    3ca0:	00020000 	andeq	r0, r2, r0
    3ca4:	0000207d 	andeq	r2, r0, sp, ror r0
	...
    3cd4:	00500001 	subseq	r0, r0, r1
    3cd8:	00000000 	andeq	r0, r0, r0
    3cdc:	01000000 	mrseq	r0, (UNDEF: 0)
    3ce0:	00005400 	andeq	r5, r0, r0, lsl #8
    3ce4:	00000000 	andeq	r0, r0, r0
    3ce8:	00040000 	andeq	r0, r4, r0
    3cec:	9f5001f3 	svcls	0x005001f3
	...
    3cf8:	00540001 	subseq	r0, r4, r1
    3cfc:	00000000 	andeq	r0, r0, r0
    3d00:	04000000 	streq	r0, [r0], #-0
    3d04:	5001f300 	andpl	pc, r1, r0, lsl #6
    3d08:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3d0c:	00000000 	andeq	r0, r0, r0
    3d10:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    3d1c:	01f30004 	mvnseq	r0, r4
    3d20:	00009f50 	andeq	r9, r0, r0, asr pc
    3d24:	00000000 	andeq	r0, r0, r0
    3d28:	00010000 	andeq	r0, r1, r0
    3d2c:	00000054 	andeq	r0, r0, r4, asr r0
    3d30:	00000000 	andeq	r0, r0, r0
    3d34:	f3000400 	vshl.u8	d0, d0, d0
    3d38:	009f5001 	addseq	r5, pc, r1
    3d3c:	00000000 	andeq	r0, r0, r0
    3d40:	01000000 	mrseq	r0, (UNDEF: 0)
    3d44:	00005400 	andeq	r5, r0, r0, lsl #8
    3d48:	00000000 	andeq	r0, r0, r0
    3d4c:	00040000 	andeq	r0, r4, r0
    3d50:	9f5001f3 	svcls	0x005001f3
	...
    3d5c:	00540001 	subseq	r0, r4, r1
    3d60:	00000000 	andeq	r0, r0, r0
    3d64:	04000000 	streq	r0, [r0], #-0
    3d68:	5001f300 	andpl	pc, r1, r0, lsl #6
    3d6c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3d70:	00000000 	andeq	r0, r0, r0
    3d74:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    3d80:	01f30004 	mvnseq	r0, r4
    3d84:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    3d98:	00010000 	andeq	r0, r1, r0
    3d9c:	00000051 	andeq	r0, r0, r1, asr r0
    3da0:	00000000 	andeq	r0, r0, r0
    3da4:	57000100 	strpl	r0, [r0, -r0, lsl #2]
	...
    3dbc:	00520001 	subseq	r0, r2, r1
    3dc0:	00000000 	andeq	r0, r0, r0
    3dc4:	01000000 	mrseq	r0, (UNDEF: 0)
    3dc8:	00005800 	andeq	r5, r0, r0, lsl #16
	...
    3ddc:	00540001 	subseq	r0, r4, r1
	...
    3df4:	01000000 	mrseq	r0, (UNDEF: 0)
    3df8:	00005000 	andeq	r5, r0, r0
    3dfc:	00000000 	andeq	r0, r0, r0
    3e00:	00010000 	andeq	r0, r1, r0
    3e04:	00000055 	andeq	r0, r0, r5, asr r0
    3e08:	00000000 	andeq	r0, r0, r0
    3e0c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    3e18:	00550001 	subseq	r0, r5, r1
    3e1c:	00000000 	andeq	r0, r0, r0
    3e20:	03000000 	movweq	r0, #0
	...
    3e48:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    3e54:	00540001 	subseq	r0, r4, r1
    3e58:	00000000 	andeq	r0, r0, r0
    3e5c:	04000000 	streq	r0, [r0], #-0
    3e60:	5001f300 	andpl	pc, r1, r0, lsl #6
    3e64:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3e68:	00000000 	andeq	r0, r0, r0
    3e6c:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    3e78:	01f30004 	mvnseq	r0, r4
    3e7c:	00009f50 	andeq	r9, r0, r0, asr pc
    3e80:	00000000 	andeq	r0, r0, r0
    3e84:	00010000 	andeq	r0, r1, r0
    3e88:	00000054 	andeq	r0, r0, r4, asr r0
    3e8c:	00000000 	andeq	r0, r0, r0
    3e90:	f3000400 	vshl.u8	d0, d0, d0
    3e94:	009f5001 	addseq	r5, pc, r1
    3e98:	00000000 	andeq	r0, r0, r0
    3e9c:	01000000 	mrseq	r0, (UNDEF: 0)
    3ea0:	00005400 	andeq	r5, r0, r0, lsl #8
    3ea4:	00000000 	andeq	r0, r0, r0
    3ea8:	00040000 	andeq	r0, r4, r0
    3eac:	9f5001f3 	svcls	0x005001f3
	...
    3eb8:	00540001 	subseq	r0, r4, r1
    3ebc:	00000000 	andeq	r0, r0, r0
    3ec0:	04000000 	streq	r0, [r0], #-0
    3ec4:	5001f300 	andpl	pc, r1, r0, lsl #6
    3ec8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3ecc:	00000000 	andeq	r0, r0, r0
    3ed0:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    3edc:	01f30004 	mvnseq	r0, r4
    3ee0:	00009f50 	andeq	r9, r0, r0, asr pc
    3ee4:	00000000 	andeq	r0, r0, r0
    3ee8:	00010000 	andeq	r0, r1, r0
    3eec:	00000054 	andeq	r0, r0, r4, asr r0
    3ef0:	00000000 	andeq	r0, r0, r0
    3ef4:	f3000400 	vshl.u8	d0, d0, d0
    3ef8:	009f5001 	addseq	r5, pc, r1
	...
    3f10:	56000100 	strpl	r0, [r0], -r0, lsl #2
	...
    3f1c:	00560001 	subseq	r0, r6, r1
    3f20:	00000000 	andeq	r0, r0, r0
    3f24:	03000000 	movweq	r0, #0
    3f28:	9f017600 	svcls	0x00017600
	...
    3f40:	00010000 	andeq	r0, r1, r0
    3f44:	00000059 	andeq	r0, r0, r9, asr r0
    3f48:	00000000 	andeq	r0, r0, r0
    3f4c:	79000300 	stmdbvc	r0, {r8, r9}
    3f50:	00009f7f 	andeq	r9, r0, pc, ror pc
    3f54:	00000000 	andeq	r0, r0, r0
    3f58:	00010000 	andeq	r0, r1, r0
    3f5c:	00000059 	andeq	r0, r0, r9, asr r0
	...
    3f70:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    3f7c:	00500001 	subseq	r0, r0, r1
	...
    3f8c:	02000000 	andeq	r0, r0, #0
    3f90:	00007d00 	andeq	r7, r0, r0, lsl #26
    3f94:	00000000 	andeq	r0, r0, r0
    3f98:	02000000 	andeq	r0, r0, #0
    3f9c:	00107d00 	andseq	r7, r0, r0, lsl #26
    3fa0:	00000000 	andeq	r0, r0, r0
    3fa4:	02000000 	andeq	r0, r0, #0
    3fa8:	00207d00 	eoreq	r7, r0, r0, lsl #26
    3fac:	00000000 	andeq	r0, r0, r0
    3fb0:	02000000 	andeq	r0, r0, #0
    3fb4:	00107d00 	andseq	r7, r0, r0, lsl #26
    3fb8:	00000000 	andeq	r0, r0, r0
    3fbc:	02000000 	andeq	r0, r0, #0
    3fc0:	00207d00 	eoreq	r7, r0, r0, lsl #26
	...
    3fd4:	01000000 	mrseq	r0, (UNDEF: 0)
    3fd8:	00005000 	andeq	r5, r0, r0
    3fdc:	00000000 	andeq	r0, r0, r0
    3fe0:	00010000 	andeq	r0, r1, r0
    3fe4:	00000054 	andeq	r0, r0, r4, asr r0
	...
    3ff8:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    4004:	00560001 	subseq	r0, r6, r1
	...
    4018:	52000100 	andpl	r0, r0, #0, 2
	...
    4024:	00000001 	andeq	r0, r0, r1
    4028:	00010100 	andeq	r0, r1, r0, lsl #2
	...
    4034:	00020000 	andeq	r0, r2, r0
    4038:	00009f30 	andeq	r9, r0, r0, lsr pc
    403c:	00000000 	andeq	r0, r0, r0
    4040:	00010000 	andeq	r0, r1, r0
    4044:	00000055 	andeq	r0, r0, r5, asr r0
    4048:	00000000 	andeq	r0, r0, r0
    404c:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    4058:	9f310002 	svcls	0x00310002
	...
    4064:	00550001 	subseq	r0, r5, r1
	...
    4078:	01000000 	mrseq	r0, (UNDEF: 0)
    407c:	00005500 	andeq	r5, r0, r0, lsl #10
    4080:	00000000 	andeq	r0, r0, r0
    4084:	00010000 	andeq	r0, r1, r0
    4088:	00000055 	andeq	r0, r0, r5, asr r0
    408c:	00000000 	andeq	r0, r0, r0
    4090:	00000400 	andeq	r0, r0, r0, lsl #8
	...
    409c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    40a8:	00540001 	subseq	r0, r4, r1
	...
    40bc:	01000000 	mrseq	r0, (UNDEF: 0)
    40c0:	00005300 	andeq	r5, r0, r0, lsl #6
    40c4:	00000000 	andeq	r0, r0, r0
    40c8:	00010000 	andeq	r0, r1, r0
    40cc:	00000053 	andeq	r0, r0, r3, asr r0
	...
    40dc:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    40e8:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    40ec:	00000010 	andeq	r0, r0, r0, lsl r0
    40f0:	00000000 	andeq	r0, r0, r0
    40f4:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    40f8:	00000020 	andeq	r0, r0, r0, lsr #32
    40fc:	00000000 	andeq	r0, r0, r0
    4100:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    4104:	00000010 	andeq	r0, r0, r0, lsl r0
    4108:	00000000 	andeq	r0, r0, r0
    410c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    4110:	00000020 	andeq	r0, r0, r0, lsr #32
	...
    4124:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    4130:	00540001 	subseq	r0, r4, r1
	...
    4144:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    4150:	01000001 	tsteq	r0, r1
    4154:	00000001 	andeq	r0, r0, r1
	...
    4160:	9f300002 	svcls	0x00300002
	...
    416c:	00550001 	subseq	r0, r5, r1
    4170:	00000000 	andeq	r0, r0, r0
    4174:	02000000 	andeq	r0, r0, #0
    4178:	009f3100 	addseq	r3, pc, r0, lsl #2
    417c:	00000000 	andeq	r0, r0, r0
    4180:	01000000 	mrseq	r0, (UNDEF: 0)
    4184:	00005500 	andeq	r5, r0, r0, lsl #10
    4188:	00000000 	andeq	r0, r0, r0
    418c:	00030000 	andeq	r0, r3, r0
	...
    4198:	00010000 	andeq	r0, r1, r0
    419c:	00000050 	andeq	r0, r0, r0, asr r0
    41a0:	00000000 	andeq	r0, r0, r0
    41a4:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    41b0:	00000004 	andeq	r0, r0, r4
	...
    41c0:	9f300002 	svcls	0x00300002
	...
    41cc:	00560001 	subseq	r0, r6, r1
    41d0:	00000000 	andeq	r0, r0, r0
    41d4:	01000000 	mrseq	r0, (UNDEF: 0)
    41d8:	00005000 	andeq	r5, r0, r0
    41dc:	00000000 	andeq	r0, r0, r0
    41e0:	00010000 	andeq	r0, r1, r0
    41e4:	00000056 	andeq	r0, r0, r6, asr r0
	...
    41fc:	01000000 	mrseq	r0, (UNDEF: 0)
    4200:	00005300 	andeq	r5, r0, r0, lsl #6
    4204:	00000000 	andeq	r0, r0, r0
    4208:	00030000 	andeq	r0, r3, r0
    420c:	009f0173 	addseq	r0, pc, r3, ror r1	; <UNPREDICTABLE>
    4210:	00000000 	andeq	r0, r0, r0
    4214:	07000000 	streq	r0, [r0, -r0]
    4218:	00c87400 	sbceq	r7, r8, r0, lsl #8
    421c:	9f012306 	svcls	0x00012306
	...
    4228:	c8740007 	ldmdagt	r4!, {r0, r1, r2}^
    422c:	01230600 			; <UNDEFINED> instruction: 0x01230600
    4230:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4234:	00000000 	andeq	r0, r0, r0
    4238:	53000100 	movwpl	r0, #256	; 0x100
	...
    4250:	00500001 	subseq	r0, r0, r1
    4254:	00000000 	andeq	r0, r0, r0
    4258:	01000000 	mrseq	r0, (UNDEF: 0)
    425c:	00005100 	andeq	r5, r0, r0, lsl #2
    4260:	00000000 	andeq	r0, r0, r0
    4264:	22980000 	addscs	r0, r8, #0
    4268:	229a1000 	addscs	r1, sl, #0
    426c:	00021000 	andeq	r1, r2, r0
    4270:	229a007d 	addscs	r0, sl, #125	; 0x7d
    4274:	229c1000 	addscs	r1, ip, #0
    4278:	00021000 	andeq	r1, r2, r0
    427c:	229c147d 	addscs	r1, ip, #2097152000	; 0x7d000000
    4280:	22be1000 	adcscs	r1, lr, #0
    4284:	00021000 	andeq	r1, r2, r0
    4288:	22be287d 	adcscs	r2, lr, #8192000	; 0x7d0000
    428c:	22c01000 	sbccs	r1, r0, #0
    4290:	00021000 	andeq	r1, r2, r0
    4294:	22c0147d 	sbccs	r1, r0, #2097152000	; 0x7d000000
    4298:	23881000 	orrcs	r1, r8, #0
    429c:	00021000 	andeq	r1, r2, r0
    42a0:	0000287d 	andeq	r2, r0, sp, ror r8
	...
    42ac:	22980000 	addscs	r0, r8, #0
    42b0:	22a61000 	adccs	r1, r6, #0
    42b4:	00011000 	andeq	r1, r1, r0
    42b8:	0022a650 	eoreq	sl, r2, r0, asr r6
    42bc:	00238810 	eoreq	r8, r3, r0, lsl r8
    42c0:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
	...
    42d0:	10002298 	mulne	r0, r8, r2
    42d4:	100022a6 	andne	r2, r0, r6, lsr #5
    42d8:	a6510001 	ldrbge	r0, [r1], -r1
    42dc:	88100022 	ldmdahi	r0, {r1, r5}
    42e0:	01100023 	tsteq	r0, r3, lsr #32
    42e4:	00005700 	andeq	r5, r0, r0, lsl #14
	...
    42f0:	10002298 	mulne	r0, r8, r2
    42f4:	100022a6 	andne	r2, r0, r6, lsr #5
    42f8:	00520001 	subseq	r0, r2, r1
    42fc:	00000000 	andeq	r0, r0, r0
    4300:	01000000 	mrseq	r0, (UNDEF: 0)
    4304:	01010000 	mrseq	r0, (UNDEF: 1)
    4308:	a2000000 	andge	r0, r0, #0
    430c:	a6100022 	ldrge	r0, [r0], -r2, lsr #32
    4310:	02100022 	andseq	r0, r0, #34	; 0x22
    4314:	a69f3000 	ldrge	r3, [pc], r0
    4318:	e0100022 	ands	r0, r0, r2, lsr #32
    431c:	01100022 	tsteq	r0, r2, lsr #32
    4320:	22e05600 	rsccs	r5, r0, #0, 12
    4324:	22e41000 	rsccs	r1, r4, #0
    4328:	00021000 	andeq	r1, r2, r0
    432c:	22e49f31 	rsccs	r9, r4, #49, 30	; 0xc4
    4330:	23881000 	orrcs	r1, r8, #0
    4334:	00011000 	andeq	r1, r1, r0
    4338:	00000056 	andeq	r0, r0, r6, asr r0
    433c:	00000000 	andeq	r0, r0, r0
    4340:	00000300 	andeq	r0, r0, r0, lsl #6
    4344:	0022a200 	eoreq	sl, r2, r0, lsl #4
    4348:	0022a610 	eoreq	sl, r2, r0, lsl r6
    434c:	50000110 	andpl	r0, r0, r0, lsl r1
    4350:	100022a6 	andne	r2, r0, r6, lsr #5
    4354:	10002388 	andne	r2, r0, r8, lsl #7
    4358:	00540001 	subseq	r0, r4, r1
	...
    436c:	0022a600 	eoreq	sl, r2, r0, lsl #12
    4370:	0022b010 	eoreq	fp, r2, r0, lsl r0
    4374:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
    4378:	100022b0 			; <UNDEFINED> instruction: 0x100022b0
    437c:	100022bc 			; <UNDEFINED> instruction: 0x100022bc
    4380:	01750003 	cmneq	r5, r3
    4384:	0022c09f 	mlaeq	r2, pc, r0, ip	; <UNPREDICTABLE>
    4388:	0022d210 	eoreq	sp, r2, r0, lsl r2
    438c:	75000310 	strvc	r0, [r0, #-784]	; 0xfffffcf0
    4390:	22d29f01 	sbcscs	r9, r2, #1, 30
    4394:	23141000 	tstcs	r4, #0
    4398:	00011000 	andeq	r1, r1, r0
    439c:	00231a55 	eoreq	r1, r3, r5, asr sl
    43a0:	00238810 	eoreq	r8, r3, r0, lsl r8
    43a4:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
	...
    43b8:	007d0002 	rsbseq	r0, sp, r2
	...
    43c4:	187d0002 	ldmdane	sp!, {r1}^
	...
    4400:	00010000 	andeq	r0, r1, r0
    4404:	00000050 	andeq	r0, r0, r0, asr r0
    4408:	00000000 	andeq	r0, r0, r0
    440c:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    4418:	01f30004 	mvnseq	r0, r4
    441c:	00009f50 	andeq	r9, r0, r0, asr pc
    4420:	00000000 	andeq	r0, r0, r0
    4424:	00010000 	andeq	r0, r1, r0
    4428:	00000054 	andeq	r0, r0, r4, asr r0
    442c:	00000000 	andeq	r0, r0, r0
    4430:	f3000400 	vshl.u8	d0, d0, d0
    4434:	009f5001 	addseq	r5, pc, r1
    4438:	00000000 	andeq	r0, r0, r0
    443c:	01000000 	mrseq	r0, (UNDEF: 0)
    4440:	00005400 	andeq	r5, r0, r0, lsl #8
    4444:	00000000 	andeq	r0, r0, r0
    4448:	00040000 	andeq	r0, r4, r0
    444c:	9f5001f3 	svcls	0x005001f3
	...
    4458:	00540001 	subseq	r0, r4, r1
    445c:	00000000 	andeq	r0, r0, r0
    4460:	04000000 	streq	r0, [r0], #-0
    4464:	5001f300 	andpl	pc, r1, r0, lsl #6
    4468:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    446c:	00000000 	andeq	r0, r0, r0
    4470:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    447c:	01f30004 	mvnseq	r0, r4
    4480:	00009f50 	andeq	r9, r0, r0, asr pc
    4484:	00000000 	andeq	r0, r0, r0
    4488:	00010000 	andeq	r0, r1, r0
    448c:	00000054 	andeq	r0, r0, r4, asr r0
    4490:	00000000 	andeq	r0, r0, r0
    4494:	f3000400 	vshl.u8	d0, d0, d0
    4498:	009f5001 	addseq	r5, pc, r1
    449c:	00000000 	andeq	r0, r0, r0
    44a0:	01000000 	mrseq	r0, (UNDEF: 0)
    44a4:	00005400 	andeq	r5, r0, r0, lsl #8
    44a8:	00000000 	andeq	r0, r0, r0
    44ac:	00040000 	andeq	r0, r4, r0
    44b0:	9f5001f3 	svcls	0x005001f3
	...
    44bc:	00540001 	subseq	r0, r4, r1
    44c0:	00000000 	andeq	r0, r0, r0
    44c4:	04000000 	streq	r0, [r0], #-0
    44c8:	5001f300 	andpl	pc, r1, r0, lsl #6
    44cc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    44d0:	00000000 	andeq	r0, r0, r0
    44d4:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    44e0:	01f30004 	mvnseq	r0, r4
    44e4:	00009f50 	andeq	r9, r0, r0, asr pc
    44e8:	00000000 	andeq	r0, r0, r0
    44ec:	00010000 	andeq	r0, r1, r0
    44f0:	00000054 	andeq	r0, r0, r4, asr r0
    44f4:	00000000 	andeq	r0, r0, r0
    44f8:	f3000400 	vshl.u8	d0, d0, d0
    44fc:	009f5001 	addseq	r5, pc, r1
	...
    4510:	01000000 	mrseq	r0, (UNDEF: 0)
    4514:	00005100 	andeq	r5, r0, r0, lsl #2
    4518:	00000000 	andeq	r0, r0, r0
    451c:	00010000 	andeq	r0, r1, r0
    4520:	00000056 	andeq	r0, r0, r6, asr r0
	...
    4530:	01000000 	mrseq	r0, (UNDEF: 0)
    4534:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    4554:	00010000 	andeq	r0, r1, r0
    4558:	00000050 	andeq	r0, r0, r0, asr r0
    455c:	00000000 	andeq	r0, r0, r0
    4560:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    456c:	00500001 	subseq	r0, r0, r1
    4570:	00000000 	andeq	r0, r0, r0
    4574:	01000000 	mrseq	r0, (UNDEF: 0)
    4578:	00005500 	andeq	r5, r0, r0, lsl #10
    457c:	00000000 	andeq	r0, r0, r0
    4580:	00010000 	andeq	r0, r1, r0
    4584:	00000050 	andeq	r0, r0, r0, asr r0
    4588:	00000000 	andeq	r0, r0, r0
    458c:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    4598:	00500001 	subseq	r0, r0, r1
    459c:	00000000 	andeq	r0, r0, r0
    45a0:	01000000 	mrseq	r0, (UNDEF: 0)
    45a4:	00005500 	andeq	r5, r0, r0, lsl #10
    45a8:	00000000 	andeq	r0, r0, r0
    45ac:	00030000 	andeq	r0, r3, r0
	...
    45e0:	00500001 	subseq	r0, r0, r1
    45e4:	00000000 	andeq	r0, r0, r0
    45e8:	01000000 	mrseq	r0, (UNDEF: 0)
    45ec:	00005400 	andeq	r5, r0, r0, lsl #8
    45f0:	00000000 	andeq	r0, r0, r0
    45f4:	00040000 	andeq	r0, r4, r0
    45f8:	9f5001f3 	svcls	0x005001f3
	...
    4604:	00540001 	subseq	r0, r4, r1
    4608:	00000000 	andeq	r0, r0, r0
    460c:	04000000 	streq	r0, [r0], #-0
    4610:	5001f300 	andpl	pc, r1, r0, lsl #6
    4614:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4618:	00000000 	andeq	r0, r0, r0
    461c:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    4628:	01f30004 	mvnseq	r0, r4
    462c:	00009f50 	andeq	r9, r0, r0, asr pc
    4630:	00000000 	andeq	r0, r0, r0
    4634:	00010000 	andeq	r0, r1, r0
    4638:	00000054 	andeq	r0, r0, r4, asr r0
    463c:	00000000 	andeq	r0, r0, r0
    4640:	f3000400 	vshl.u8	d0, d0, d0
    4644:	009f5001 	addseq	r5, pc, r1
    4648:	00000000 	andeq	r0, r0, r0
    464c:	01000000 	mrseq	r0, (UNDEF: 0)
    4650:	00005400 	andeq	r5, r0, r0, lsl #8
    4654:	00000000 	andeq	r0, r0, r0
    4658:	00040000 	andeq	r0, r4, r0
    465c:	9f5001f3 	svcls	0x005001f3
	...
    4668:	00540001 	subseq	r0, r4, r1
    466c:	00000000 	andeq	r0, r0, r0
    4670:	04000000 	streq	r0, [r0], #-0
    4674:	5001f300 	andpl	pc, r1, r0, lsl #6
    4678:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    467c:	00000000 	andeq	r0, r0, r0
    4680:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    468c:	01f30004 	mvnseq	r0, r4
    4690:	00009f50 	andeq	r9, r0, r0, asr pc
    4694:	00000000 	andeq	r0, r0, r0
    4698:	00010000 	andeq	r0, r1, r0
    469c:	00000054 	andeq	r0, r0, r4, asr r0
    46a0:	00000000 	andeq	r0, r0, r0
    46a4:	f3000400 	vshl.u8	d0, d0, d0
    46a8:	009f5001 	addseq	r5, pc, r1
    46ac:	00000000 	andeq	r0, r0, r0
    46b0:	01000000 	mrseq	r0, (UNDEF: 0)
    46b4:	00005400 	andeq	r5, r0, r0, lsl #8
    46b8:	00000000 	andeq	r0, r0, r0
    46bc:	00040000 	andeq	r0, r4, r0
    46c0:	9f5001f3 	svcls	0x005001f3
	...
    46cc:	00540001 	subseq	r0, r4, r1
    46d0:	00000000 	andeq	r0, r0, r0
    46d4:	04000000 	streq	r0, [r0], #-0
    46d8:	5001f300 	andpl	pc, r1, r0, lsl #6
    46dc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    46fc:	53000100 	movwpl	r0, #256	; 0x100
	...
    4708:	7f730003 	svcvc	0x00730003
    470c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4710:	00000000 	andeq	r0, r0, r0
    4714:	74000700 	strvc	r0, [r0], #-1792	; 0xfffff900
    4718:	310600c8 	smlabtcc	r6, r8, r0, r0
    471c:	00009f1c 	andeq	r9, r0, ip, lsl pc
    4720:	00000000 	andeq	r0, r0, r0
    4724:	00070000 	andeq	r0, r7, r0
    4728:	0600c874 			; <UNDEFINED> instruction: 0x0600c874
    472c:	009f1c31 	addseq	r1, pc, r1, lsr ip	; <UNPREDICTABLE>
    4730:	00000000 	andeq	r0, r0, r0
    4734:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    4738:	5001f300 	andpl	pc, r1, r0, lsl #6
    473c:	31064823 	tstcc	r6, r3, lsr #16
    4740:	00009f1c 	andeq	r9, r0, ip, lsl pc
    4744:	00000000 	andeq	r0, r0, r0
    4748:	00070000 	andeq	r0, r7, r0
    474c:	0600c874 			; <UNDEFINED> instruction: 0x0600c874
    4750:	009f1c31 	addseq	r1, pc, r1, lsr ip	; <UNPREDICTABLE>
    4754:	00000000 	andeq	r0, r0, r0
    4758:	03000000 	movweq	r0, #0
    475c:	9f7f7300 	svcls	0x007f7300
	...
    4768:	00530001 	subseq	r0, r3, r1
	...
    4780:	57000100 	strpl	r0, [r0, -r0, lsl #2]
	...
    478c:	7f770003 	svcvc	0x00770003
    4790:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4794:	00000000 	andeq	r0, r0, r0
    4798:	57000100 	strpl	r0, [r0, -r0, lsl #2]
	...
    47b0:	00500001 	subseq	r0, r0, r1
    47b4:	00000000 	andeq	r0, r0, r0
    47b8:	01000000 	mrseq	r0, (UNDEF: 0)
    47bc:	00005000 	andeq	r5, r0, r0
	...
    47cc:	00020000 	andeq	r0, r2, r0
    47d0:	0000007d 	andeq	r0, r0, sp, ror r0
    47d4:	00000000 	andeq	r0, r0, r0
    47d8:	00020000 	andeq	r0, r2, r0
    47dc:	0000207d 	andeq	r2, r0, sp, ror r0
	...
    481c:	00500001 	subseq	r0, r0, r1
    4820:	00000000 	andeq	r0, r0, r0
    4824:	01000000 	mrseq	r0, (UNDEF: 0)
    4828:	00005400 	andeq	r5, r0, r0, lsl #8
    482c:	00000000 	andeq	r0, r0, r0
    4830:	00040000 	andeq	r0, r4, r0
    4834:	9f5001f3 	svcls	0x005001f3
	...
    4840:	00540001 	subseq	r0, r4, r1
    4844:	00000000 	andeq	r0, r0, r0
    4848:	04000000 	streq	r0, [r0], #-0
    484c:	5001f300 	andpl	pc, r1, r0, lsl #6
    4850:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4854:	00000000 	andeq	r0, r0, r0
    4858:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    4864:	01f30004 	mvnseq	r0, r4
    4868:	00009f50 	andeq	r9, r0, r0, asr pc
    486c:	00000000 	andeq	r0, r0, r0
    4870:	00010000 	andeq	r0, r1, r0
    4874:	00000054 	andeq	r0, r0, r4, asr r0
    4878:	00000000 	andeq	r0, r0, r0
    487c:	f3000400 	vshl.u8	d0, d0, d0
    4880:	009f5001 	addseq	r5, pc, r1
    4884:	00000000 	andeq	r0, r0, r0
    4888:	01000000 	mrseq	r0, (UNDEF: 0)
    488c:	00005400 	andeq	r5, r0, r0, lsl #8
    4890:	00000000 	andeq	r0, r0, r0
    4894:	00040000 	andeq	r0, r4, r0
    4898:	9f5001f3 	svcls	0x005001f3
	...
    48a4:	00540001 	subseq	r0, r4, r1
    48a8:	00000000 	andeq	r0, r0, r0
    48ac:	04000000 	streq	r0, [r0], #-0
    48b0:	5001f300 	andpl	pc, r1, r0, lsl #6
    48b4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    48b8:	00000000 	andeq	r0, r0, r0
    48bc:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    48c8:	01f30004 	mvnseq	r0, r4
    48cc:	00009f50 	andeq	r9, r0, r0, asr pc
    48d0:	00000000 	andeq	r0, r0, r0
    48d4:	00010000 	andeq	r0, r1, r0
    48d8:	00000054 	andeq	r0, r0, r4, asr r0
    48dc:	00000000 	andeq	r0, r0, r0
    48e0:	f3000400 	vshl.u8	d0, d0, d0
    48e4:	009f5001 	addseq	r5, pc, r1
    48e8:	00000000 	andeq	r0, r0, r0
    48ec:	01000000 	mrseq	r0, (UNDEF: 0)
    48f0:	00005400 	andeq	r5, r0, r0, lsl #8
    48f4:	00000000 	andeq	r0, r0, r0
    48f8:	00040000 	andeq	r0, r4, r0
    48fc:	9f5001f3 	svcls	0x005001f3
	...
    4908:	00540001 	subseq	r0, r4, r1
    490c:	00000000 	andeq	r0, r0, r0
    4910:	04000000 	streq	r0, [r0], #-0
    4914:	5001f300 	andpl	pc, r1, r0, lsl #6
    4918:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    491c:	00000000 	andeq	r0, r0, r0
    4920:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    492c:	01f30004 	mvnseq	r0, r4
    4930:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    4944:	00010000 	andeq	r0, r1, r0
    4948:	00000051 	andeq	r0, r0, r1, asr r0
    494c:	00000000 	andeq	r0, r0, r0
    4950:	57000100 	strpl	r0, [r0, -r0, lsl #2]
	...
    4968:	00520001 	subseq	r0, r2, r1
    496c:	00000000 	andeq	r0, r0, r0
    4970:	01000000 	mrseq	r0, (UNDEF: 0)
    4974:	00005900 	andeq	r5, r0, r0, lsl #18
	...
    4988:	00010000 	andeq	r0, r1, r0
    498c:	00000053 	andeq	r0, r0, r3, asr r0
    4990:	00000000 	andeq	r0, r0, r0
    4994:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    49a8:	00010000 	andeq	r0, r1, r0
    49ac:	00000054 	andeq	r0, r0, r4, asr r0
	...
    49c4:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    49d0:	00560001 	subseq	r0, r6, r1
    49d4:	00000000 	andeq	r0, r0, r0
    49d8:	01000000 	mrseq	r0, (UNDEF: 0)
    49dc:	00005000 	andeq	r5, r0, r0
    49e0:	00000000 	andeq	r0, r0, r0
    49e4:	00010000 	andeq	r0, r1, r0
    49e8:	00000056 	andeq	r0, r0, r6, asr r0
    49ec:	00000000 	andeq	r0, r0, r0
    49f0:	00000300 	andeq	r0, r0, r0, lsl #6
	...
    4a24:	01000000 	mrseq	r0, (UNDEF: 0)
    4a28:	00005000 	andeq	r5, r0, r0
    4a2c:	00000000 	andeq	r0, r0, r0
    4a30:	00010000 	andeq	r0, r1, r0
    4a34:	00000054 	andeq	r0, r0, r4, asr r0
    4a38:	00000000 	andeq	r0, r0, r0
    4a3c:	f3000400 	vshl.u8	d0, d0, d0
    4a40:	009f5001 	addseq	r5, pc, r1
    4a44:	00000000 	andeq	r0, r0, r0
    4a48:	01000000 	mrseq	r0, (UNDEF: 0)
    4a4c:	00005400 	andeq	r5, r0, r0, lsl #8
    4a50:	00000000 	andeq	r0, r0, r0
    4a54:	00040000 	andeq	r0, r4, r0
    4a58:	9f5001f3 	svcls	0x005001f3
	...
    4a64:	00540001 	subseq	r0, r4, r1
    4a68:	00000000 	andeq	r0, r0, r0
    4a6c:	04000000 	streq	r0, [r0], #-0
    4a70:	5001f300 	andpl	pc, r1, r0, lsl #6
    4a74:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4a78:	00000000 	andeq	r0, r0, r0
    4a7c:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    4a88:	01f30004 	mvnseq	r0, r4
    4a8c:	00009f50 	andeq	r9, r0, r0, asr pc
    4a90:	00000000 	andeq	r0, r0, r0
    4a94:	00010000 	andeq	r0, r1, r0
    4a98:	00000054 	andeq	r0, r0, r4, asr r0
    4a9c:	00000000 	andeq	r0, r0, r0
    4aa0:	f3000400 	vshl.u8	d0, d0, d0
    4aa4:	009f5001 	addseq	r5, pc, r1
    4aa8:	00000000 	andeq	r0, r0, r0
    4aac:	01000000 	mrseq	r0, (UNDEF: 0)
    4ab0:	00005400 	andeq	r5, r0, r0, lsl #8
    4ab4:	00000000 	andeq	r0, r0, r0
    4ab8:	00040000 	andeq	r0, r4, r0
    4abc:	9f5001f3 	svcls	0x005001f3
	...
    4ac8:	00540001 	subseq	r0, r4, r1
    4acc:	00000000 	andeq	r0, r0, r0
    4ad0:	04000000 	streq	r0, [r0], #-0
    4ad4:	5001f300 	andpl	pc, r1, r0, lsl #6
    4ad8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4adc:	00000000 	andeq	r0, r0, r0
    4ae0:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    4aec:	01f30004 	mvnseq	r0, r4
    4af0:	00009f50 	andeq	r9, r0, r0, asr pc
    4af4:	00000000 	andeq	r0, r0, r0
    4af8:	00010000 	andeq	r0, r1, r0
    4afc:	00000054 	andeq	r0, r0, r4, asr r0
    4b00:	00000000 	andeq	r0, r0, r0
    4b04:	f3000400 	vshl.u8	d0, d0, d0
    4b08:	009f5001 	addseq	r5, pc, r1
    4b0c:	00000000 	andeq	r0, r0, r0
    4b10:	01000000 	mrseq	r0, (UNDEF: 0)
    4b14:	00005400 	andeq	r5, r0, r0, lsl #8
    4b18:	00000000 	andeq	r0, r0, r0
    4b1c:	00040000 	andeq	r0, r4, r0
    4b20:	9f5001f3 	svcls	0x005001f3
	...
    4b2c:	00540001 	subseq	r0, r4, r1
    4b30:	00000000 	andeq	r0, r0, r0
    4b34:	04000000 	streq	r0, [r0], #-0
    4b38:	5001f300 	andpl	pc, r1, r0, lsl #6
    4b3c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    4b50:	01000000 	mrseq	r0, (UNDEF: 0)
    4b54:	00005800 	andeq	r5, r0, r0, lsl #16
    4b58:	00000000 	andeq	r0, r0, r0
    4b5c:	00030000 	andeq	r0, r3, r0
    4b60:	009f7f78 	addseq	r7, pc, r8, ror pc	; <UNPREDICTABLE>
    4b64:	00000000 	andeq	r0, r0, r0
    4b68:	01000000 	mrseq	r0, (UNDEF: 0)
    4b6c:	00005800 	andeq	r5, r0, r0, lsl #16
	...
    4b80:	005a0001 	subseq	r0, sl, r1
	...
    4b94:	01000000 	mrseq	r0, (UNDEF: 0)
    4b98:	00005000 	andeq	r5, r0, r0
    4b9c:	00000000 	andeq	r0, r0, r0
    4ba0:	00010000 	andeq	r0, r1, r0
    4ba4:	00000050 	andeq	r0, r0, r0, asr r0
	...
    4bb4:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    4bc0:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    4bc4:	00000014 	andeq	r0, r0, r4, lsl r0
    4bc8:	00000000 	andeq	r0, r0, r0
    4bcc:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    4bd0:	00000028 	andeq	r0, r0, r8, lsr #32
    4bd4:	00000000 	andeq	r0, r0, r0
    4bd8:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    4bdc:	00000014 	andeq	r0, r0, r4, lsl r0
    4be0:	00000000 	andeq	r0, r0, r0
    4be4:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    4be8:	00000028 	andeq	r0, r0, r8, lsr #32
	...
    4bfc:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    4c08:	00540001 	subseq	r0, r4, r1
	...
    4c1c:	01000000 	mrseq	r0, (UNDEF: 0)
    4c20:	00005100 	andeq	r5, r0, r0, lsl #2
    4c24:	00000000 	andeq	r0, r0, r0
    4c28:	00010000 	andeq	r0, r1, r0
    4c2c:	00000057 	andeq	r0, r0, r7, asr r0
	...
    4c3c:	01000000 	mrseq	r0, (UNDEF: 0)
    4c40:	00005200 	andeq	r5, r0, r0, lsl #4
	...
    4c54:	00010000 	andeq	r0, r1, r0
    4c58:	00000053 	andeq	r0, r0, r3, asr r0
    4c5c:	00000000 	andeq	r0, r0, r0
    4c60:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    4c6c:	00000001 	andeq	r0, r0, r1
    4c70:	00010100 	andeq	r0, r1, r0, lsl #2
	...
    4c7c:	00020000 	andeq	r0, r2, r0
    4c80:	00009f30 	andeq	r9, r0, r0, lsr pc
    4c84:	00000000 	andeq	r0, r0, r0
    4c88:	00010000 	andeq	r0, r1, r0
    4c8c:	00000056 	andeq	r0, r0, r6, asr r0
    4c90:	00000000 	andeq	r0, r0, r0
    4c94:	56000100 	strpl	r0, [r0], -r0, lsl #2
	...
    4ca0:	9f310002 	svcls	0x00310002
	...
    4cac:	00560001 	subseq	r0, r6, r1
	...
    4cc4:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    4cd0:	00500001 	subseq	r0, r0, r1
    4cd4:	00000000 	andeq	r0, r0, r0
    4cd8:	01000000 	mrseq	r0, (UNDEF: 0)
    4cdc:	00005000 	andeq	r5, r0, r0
    4ce0:	00000000 	andeq	r0, r0, r0
    4ce4:	00030000 	andeq	r0, r3, r0
	...
    4cf0:	00010000 	andeq	r0, r1, r0
    4cf4:	00000050 	andeq	r0, r0, r0, asr r0
    4cf8:	00000000 	andeq	r0, r0, r0
    4cfc:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    4d14:	00560001 	subseq	r0, r6, r1
    4d18:	00000000 	andeq	r0, r0, r0
    4d1c:	01000000 	mrseq	r0, (UNDEF: 0)
    4d20:	00005600 	andeq	r5, r0, r0, lsl #12
	...
    4d30:	00020000 	andeq	r0, r2, r0
    4d34:	0000007d 	andeq	r0, r0, sp, ror r0
    4d38:	00000000 	andeq	r0, r0, r0
    4d3c:	00020000 	andeq	r0, r2, r0
    4d40:	0000087d 	andeq	r0, r0, sp, ror r8
    4d44:	00000000 	andeq	r0, r0, r0
    4d48:	00020000 	andeq	r0, r2, r0
    4d4c:	0000007d 	andeq	r0, r0, sp, ror r0
    4d50:	00000000 	andeq	r0, r0, r0
    4d54:	00020000 	andeq	r0, r2, r0
    4d58:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    4d74:	00010000 	andeq	r0, r1, r0
    4d78:	00000050 	andeq	r0, r0, r0, asr r0
    4d7c:	00000000 	andeq	r0, r0, r0
    4d80:	f3000400 	vshl.u8	d0, d0, d0
    4d84:	009f5001 	addseq	r5, pc, r1
    4d88:	00000000 	andeq	r0, r0, r0
    4d8c:	01000000 	mrseq	r0, (UNDEF: 0)
    4d90:	00005000 	andeq	r5, r0, r0
    4d94:	00000000 	andeq	r0, r0, r0
    4d98:	00040000 	andeq	r0, r4, r0
    4d9c:	9f5001f3 	svcls	0x005001f3
	...
    4da8:	00500001 	subseq	r0, r0, r1
    4dac:	00000000 	andeq	r0, r0, r0
    4db0:	04000000 	streq	r0, [r0], #-0
    4db4:	5001f300 	andpl	pc, r1, r0, lsl #6
    4db8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    4dc4:	04040000 	streq	r0, [r4], #-0
	...
    4dd0:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    4ddc:	00540001 	subseq	r0, r4, r1
    4de0:	00000000 	andeq	r0, r0, r0
    4de4:	01000000 	mrseq	r0, (UNDEF: 0)
    4de8:	00005100 	andeq	r5, r0, r0, lsl #2
    4dec:	00000000 	andeq	r0, r0, r0
    4df0:	00010000 	andeq	r0, r1, r0
    4df4:	00000054 	andeq	r0, r0, r4, asr r0
    4df8:	00000000 	andeq	r0, r0, r0
    4dfc:	00000200 	andeq	r0, r0, r0, lsl #4
    4e00:	00040000 	andeq	r0, r4, r0
    4e04:	00000000 	andeq	r0, r0, r0
    4e08:	02000000 	andeq	r0, r0, #0
    4e0c:	009f3000 	addseq	r3, pc, r0
    4e10:	00000000 	andeq	r0, r0, r0
    4e14:	01000000 	mrseq	r0, (UNDEF: 0)
    4e18:	00005000 	andeq	r5, r0, r0
    4e1c:	00000000 	andeq	r0, r0, r0
    4e20:	00020000 	andeq	r0, r2, r0
    4e24:	00009f30 	andeq	r9, r0, r0, lsr pc
	...
    4e34:	00020000 	andeq	r0, r2, r0
    4e38:	0000007d 	andeq	r0, r0, sp, ror r0
    4e3c:	00000000 	andeq	r0, r0, r0
    4e40:	00020000 	andeq	r0, r2, r0
    4e44:	0000087d 	andeq	r0, r0, sp, ror r8
    4e48:	00000000 	andeq	r0, r0, r0
    4e4c:	00020000 	andeq	r0, r2, r0
    4e50:	0000107d 	andeq	r1, r0, sp, ror r0
    4e54:	00000000 	andeq	r0, r0, r0
    4e58:	00020000 	andeq	r0, r2, r0
    4e5c:	0000007d 	andeq	r0, r0, sp, ror r0
    4e60:	00000000 	andeq	r0, r0, r0
    4e64:	00020000 	andeq	r0, r2, r0
    4e68:	0000107d 	andeq	r1, r0, sp, ror r0
    4e6c:	00000000 	andeq	r0, r0, r0
    4e70:	00020000 	andeq	r0, r2, r0
    4e74:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    4e90:	00010000 	andeq	r0, r1, r0
    4e94:	00000050 	andeq	r0, r0, r0, asr r0
    4e98:	00000000 	andeq	r0, r0, r0
    4e9c:	f3000400 	vshl.u8	d0, d0, d0
    4ea0:	009f5001 	addseq	r5, pc, r1
    4ea4:	00000000 	andeq	r0, r0, r0
    4ea8:	01000000 	mrseq	r0, (UNDEF: 0)
    4eac:	00005000 	andeq	r5, r0, r0
    4eb0:	00000000 	andeq	r0, r0, r0
    4eb4:	00040000 	andeq	r0, r4, r0
    4eb8:	9f5001f3 	svcls	0x005001f3
	...
    4ec4:	00500001 	subseq	r0, r0, r1
    4ec8:	00000000 	andeq	r0, r0, r0
    4ecc:	04000000 	streq	r0, [r0], #-0
    4ed0:	5001f300 	andpl	pc, r1, r0, lsl #6
    4ed4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    4ee0:	04040000 	streq	r0, [r4], #-0
	...
    4eec:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    4ef8:	00540001 	subseq	r0, r4, r1
    4efc:	00000000 	andeq	r0, r0, r0
    4f00:	01000000 	mrseq	r0, (UNDEF: 0)
    4f04:	00005100 	andeq	r5, r0, r0, lsl #2
    4f08:	00000000 	andeq	r0, r0, r0
    4f0c:	00010000 	andeq	r0, r1, r0
    4f10:	00000054 	andeq	r0, r0, r4, asr r0
	...
    4f20:	00000404 	andeq	r0, r0, r4, lsl #8
    4f24:	00000000 	andeq	r0, r0, r0
    4f28:	01000000 	mrseq	r0, (UNDEF: 0)
    4f2c:	00005200 	andeq	r5, r0, r0, lsl #4
    4f30:	00000000 	andeq	r0, r0, r0
    4f34:	00010000 	andeq	r0, r1, r0
    4f38:	00000053 	andeq	r0, r0, r3, asr r0
    4f3c:	00000000 	andeq	r0, r0, r0
    4f40:	f3000400 	vshl.u8	d0, d0, d0
    4f44:	009f5201 	addseq	r5, pc, r1, lsl #4
    4f48:	00000000 	andeq	r0, r0, r0
    4f4c:	01000000 	mrseq	r0, (UNDEF: 0)
    4f50:	00005200 	andeq	r5, r0, r0, lsl #4
    4f54:	00000000 	andeq	r0, r0, r0
    4f58:	00040000 	andeq	r0, r4, r0
    4f5c:	9f5201f3 	svcls	0x005201f3
	...
    4f68:	00000002 	andeq	r0, r0, r2
    4f6c:	00000400 	andeq	r0, r0, r0, lsl #8
    4f70:	00000000 	andeq	r0, r0, r0
    4f74:	00020000 	andeq	r0, r2, r0
    4f78:	00009f30 	andeq	r9, r0, r0, lsr pc
    4f7c:	00000000 	andeq	r0, r0, r0
    4f80:	00010000 	andeq	r0, r1, r0
    4f84:	00000050 	andeq	r0, r0, r0, asr r0
    4f88:	00000000 	andeq	r0, r0, r0
    4f8c:	30000200 	andcc	r0, r0, r0, lsl #4
    4f90:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    4fa0:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    4fac:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    4fb0:	00000010 	andeq	r0, r0, r0, lsl r0
	...
    4fc4:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    4fd0:	00540001 	subseq	r0, r4, r1
	...
    4fe4:	01000000 	mrseq	r0, (UNDEF: 0)
    4fe8:	00005100 	andeq	r5, r0, r0, lsl #2
    4fec:	00000000 	andeq	r0, r0, r0
    4ff0:	00010000 	andeq	r0, r1, r0
    4ff4:	00000055 	andeq	r0, r0, r5, asr r0
    4ff8:	00000000 	andeq	r0, r0, r0
    4ffc:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    5008:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    5014:	9f310002 	svcls	0x00310002
	...
    5020:	00000002 	andeq	r0, r0, r2
	...
    502c:	00500001 	subseq	r0, r0, r1
    5030:	00000000 	andeq	r0, r0, r0
    5034:	01000000 	mrseq	r0, (UNDEF: 0)
    5038:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    5048:	00020000 	andeq	r0, r2, r0
    504c:	0000007d 	andeq	r0, r0, sp, ror r0
    5050:	00000000 	andeq	r0, r0, r0
    5054:	00020000 	andeq	r0, r2, r0
    5058:	0000107d 	andeq	r1, r0, sp, ror r0
	...
    506c:	00010000 	andeq	r0, r1, r0
    5070:	00000050 	andeq	r0, r0, r0, asr r0
    5074:	00000000 	andeq	r0, r0, r0
    5078:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    508c:	00020000 	andeq	r0, r2, r0
    5090:	00009f31 	andeq	r9, r0, r1, lsr pc
    5094:	00000000 	andeq	r0, r0, r0
    5098:	00020000 	andeq	r0, r2, r0
	...
    50a4:	00010000 	andeq	r0, r1, r0
    50a8:	00000050 	andeq	r0, r0, r0, asr r0
    50ac:	00000000 	andeq	r0, r0, r0
    50b0:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    50c4:	007d0002 	rsbseq	r0, sp, r2
	...
    50d0:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    50dc:	107d0002 	rsbsne	r0, sp, r2
	...
    50e8:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    5100:	00500001 	subseq	r0, r0, r1
    5104:	00000000 	andeq	r0, r0, r0
    5108:	04000000 	streq	r0, [r0], #-0
    510c:	5001f300 	andpl	pc, r1, r0, lsl #6
    5110:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    5124:	01000000 	mrseq	r0, (UNDEF: 0)
    5128:	00005100 	andeq	r5, r0, r0, lsl #2
    512c:	00000000 	andeq	r0, r0, r0
    5130:	00010000 	andeq	r0, r1, r0
    5134:	00000053 	andeq	r0, r0, r3, asr r0
    5138:	00000000 	andeq	r0, r0, r0
    513c:	f3000400 	vshl.u8	d0, d0, d0
    5140:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
    5154:	01000000 	mrseq	r0, (UNDEF: 0)
    5158:	00005000 	andeq	r5, r0, r0
    515c:	00000000 	andeq	r0, r0, r0
    5160:	00010000 	andeq	r0, r1, r0
    5164:	00000054 	andeq	r0, r0, r4, asr r0
	...
    5174:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    5180:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    5184:	00000008 	andeq	r0, r0, r8
	...
    5198:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    51a4:	01f30004 	mvnseq	r0, r4
    51a8:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    51bc:	00010000 	andeq	r0, r1, r0
    51c0:	00000050 	andeq	r0, r0, r0, asr r0
    51c4:	00000000 	andeq	r0, r0, r0
    51c8:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    51dc:	007d0002 	rsbseq	r0, sp, r2
	...
    51e8:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    51f4:	007d0002 	rsbseq	r0, sp, r2
	...
    520c:	00010000 	andeq	r0, r1, r0
    5210:	00000050 	andeq	r0, r0, r0, asr r0
    5214:	00000000 	andeq	r0, r0, r0
    5218:	f3000400 	vshl.u8	d0, d0, d0
    521c:	009f5001 	addseq	r5, pc, r1
    5220:	00000000 	andeq	r0, r0, r0
    5224:	01000000 	mrseq	r0, (UNDEF: 0)
    5228:	00005000 	andeq	r5, r0, r0
    522c:	00000000 	andeq	r0, r0, r0
    5230:	223a0000 	eorscs	r0, sl, #0
    5234:	223c1000 	eorscs	r1, ip, #0
    5238:	00021000 	andeq	r1, r2, r0
    523c:	223c007d 	eorscs	r0, ip, #125	; 0x7d
    5240:	225a1000 	subscs	r1, sl, #0
    5244:	00021000 	andeq	r1, r2, r0
    5248:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    5258:	223a0000 	eorscs	r0, sl, #0
    525c:	224c1000 	subcs	r1, ip, #0
    5260:	00011000 	andeq	r1, r1, r0
    5264:	00224c50 	eoreq	r4, r2, r0, asr ip
    5268:	00224f10 	eoreq	r4, r2, r0, lsl pc
    526c:	70000310 	andvc	r0, r0, r0, lsl r3
    5270:	224f00cc 	subcs	r0, pc, #204	; 0xcc
    5274:	22561000 	subscs	r1, r6, #0
    5278:	00041000 	andeq	r1, r4, r0
    527c:	9f5001f3 	svcls	0x005001f3
    5280:	10002256 	andne	r2, r0, r6, asr r2
    5284:	1000225a 	andne	r2, r0, sl, asr r2
    5288:	00500001 	subseq	r0, r0, r1
	...
    5298:	3a000000 	bcc	52a0 <__HEAP_SIZE+0x42a0>
    529c:	4a100022 	bmi	40532c <__RAM_SIZE+0x30532c>
    52a0:	01100022 	tsteq	r0, r2, lsr #32
    52a4:	224a5100 	subcs	r5, sl, #0, 2
    52a8:	224f1000 	subcs	r1, pc, #0
    52ac:	00011000 	andeq	r1, r1, r0
    52b0:	00224f53 	eoreq	r4, r2, r3, asr pc
    52b4:	00225610 	eoreq	r5, r2, r0, lsl r6
    52b8:	f3000410 	vqshl.u8	d0, d0, d0
    52bc:	569f5101 	ldrpl	r5, [pc], r1, lsl #2
    52c0:	5a100022 	bpl	405350 <__RAM_SIZE+0x305350>
    52c4:	01100022 	tsteq	r0, r2, lsr #32
    52c8:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    52d8:	1000223a 	andne	r2, r0, sl, lsr r2
    52dc:	1000224f 	andne	r2, r0, pc, asr #4
    52e0:	4f520001 	svcmi	0x00520001
    52e4:	56100022 	ldrpl	r0, [r0], -r2, lsr #32
    52e8:	04100022 	ldreq	r0, [r0], #-34	; 0xffffffde
    52ec:	5201f300 	andpl	pc, r1, #0, 6
    52f0:	0022569f 	mlaeq	r2, pc, r6, r5	; <UNPREDICTABLE>
    52f4:	00225a10 	eoreq	r5, r2, r0, lsl sl
    52f8:	52000110 	andpl	r0, r0, #16, 2
	...
    5308:	1000223a 	andne	r2, r0, sl, lsr r2
    530c:	10002240 	andne	r2, r0, r0, asr #4
    5310:	40530001 	subsmi	r0, r3, r1
    5314:	5a100022 	bpl	4053a4 <__RAM_SIZE+0x3053a4>
    5318:	04100022 	ldreq	r0, [r0], #-34	; 0xffffffde
    531c:	5301f300 	movwpl	pc, #4864	; 0x1300	; <UNPREDICTABLE>
    5320:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    532c:	00223a00 	eoreq	r3, r2, r0, lsl #20
    5330:	00225610 	eoreq	r5, r2, r0, lsl r6
    5334:	91000210 	tstls	r0, r0, lsl r2
    5338:	00225600 	eoreq	r5, r2, r0, lsl #12
    533c:	00225a10 	eoreq	r5, r2, r0, lsl sl
    5340:	91000210 	tstls	r0, r0, lsl r2
	...
    5354:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    5360:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    5364:	00000014 	andeq	r0, r0, r4, lsl r0
    5368:	00000000 	andeq	r0, r0, r0
    536c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    5370:	00000020 	andeq	r0, r0, r0, lsr #32
    5374:	00000000 	andeq	r0, r0, r0
    5378:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    537c:	00000014 	andeq	r0, r0, r4, lsl r0
    5380:	00000000 	andeq	r0, r0, r0
    5384:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    5388:	00000020 	andeq	r0, r0, r0, lsr #32
	...
    53a4:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    53b0:	00560001 	subseq	r0, r6, r1
    53b4:	00000000 	andeq	r0, r0, r0
    53b8:	01000000 	mrseq	r0, (UNDEF: 0)
    53bc:	00005000 	andeq	r5, r0, r0
    53c0:	00000000 	andeq	r0, r0, r0
    53c4:	00040000 	andeq	r0, r4, r0
    53c8:	9f5001f3 	svcls	0x005001f3
	...
    53d4:	00500001 	subseq	r0, r0, r1
    53d8:	00000000 	andeq	r0, r0, r0
    53dc:	01000000 	mrseq	r0, (UNDEF: 0)
    53e0:	00005600 	andeq	r5, r0, r0, lsl #12
	...
    53fc:	00510001 	subseq	r0, r1, r1
    5400:	00000000 	andeq	r0, r0, r0
    5404:	01000000 	mrseq	r0, (UNDEF: 0)
    5408:	00005400 	andeq	r5, r0, r0, lsl #8
    540c:	00000000 	andeq	r0, r0, r0
    5410:	00010000 	andeq	r0, r1, r0
    5414:	00000051 	andeq	r0, r0, r1, asr r0
    5418:	00000000 	andeq	r0, r0, r0
    541c:	f3000400 	vshl.u8	d0, d0, d0
    5420:	009f5101 	addseq	r5, pc, r1, lsl #2
    5424:	00000000 	andeq	r0, r0, r0
    5428:	01000000 	mrseq	r0, (UNDEF: 0)
    542c:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    5444:	00010000 	andeq	r0, r1, r0
    5448:	00000052 	andeq	r0, r0, r2, asr r0
    544c:	00000000 	andeq	r0, r0, r0
    5450:	f3000400 	vshl.u8	d0, d0, d0
    5454:	009f5201 	addseq	r5, pc, r1, lsl #4
    5458:	00000000 	andeq	r0, r0, r0
    545c:	01000000 	mrseq	r0, (UNDEF: 0)
    5460:	00005200 	andeq	r5, r0, r0, lsl #4
    5464:	00000000 	andeq	r0, r0, r0
    5468:	00040000 	andeq	r0, r4, r0
    546c:	9f5201f3 	svcls	0x005201f3
	...
    5478:	00000001 	andeq	r0, r0, r1
	...
    5488:	00020000 	andeq	r0, r2, r0
    548c:	00009f30 	andeq	r9, r0, r0, lsr pc
    5490:	00000000 	andeq	r0, r0, r0
    5494:	00010000 	andeq	r0, r1, r0
    5498:	00000050 	andeq	r0, r0, r0, asr r0
    549c:	00000000 	andeq	r0, r0, r0
    54a0:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    54ac:	9f300002 	svcls	0x00300002
	...
    54b8:	9f300002 	svcls	0x00300002
	...
    54c4:	00000001 	andeq	r0, r0, r1
	...
    54d0:	00010000 	andeq	r0, r1, r0
    54d4:	00000050 	andeq	r0, r0, r0, asr r0
    54d8:	00000000 	andeq	r0, r0, r0
    54dc:	70000400 	andvc	r0, r0, r0, lsl #8
    54e0:	009f7fa4 	addseq	r7, pc, r4, lsr #31
    54e4:	00000000 	andeq	r0, r0, r0
    54e8:	06000000 	streq	r0, [r0], -r0
    54ec:	76007400 	strvc	r7, [r0], -r0, lsl #8
    54f0:	009f1e00 	addseq	r1, pc, r0, lsl #28
    54f4:	00000000 	andeq	r0, r0, r0
    54f8:	01000000 	mrseq	r0, (UNDEF: 0)
    54fc:	00000202 	andeq	r0, r0, r2, lsl #4
	...
    5508:	01000000 	mrseq	r0, (UNDEF: 0)
    550c:	00005000 	andeq	r5, r0, r0
    5510:	00000000 	andeq	r0, r0, r0
    5514:	00040000 	andeq	r0, r4, r0
    5518:	9f00dc70 	svcls	0x0000dc70
	...
    5524:	00520001 	subseq	r0, r2, r1
    5528:	00000000 	andeq	r0, r0, r0
    552c:	04000000 	streq	r0, [r0], #-0
    5530:	00dc7500 	sbcseq	r7, ip, r0, lsl #10
    5534:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    554c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    5558:	01f30004 	mvnseq	r0, r4
    555c:	00009f50 	andeq	r9, r0, r0, asr pc
    5560:	00000000 	andeq	r0, r0, r0
    5564:	00010000 	andeq	r0, r1, r0
    5568:	00000050 	andeq	r0, r0, r0, asr r0
    556c:	00000000 	andeq	r0, r0, r0
    5570:	72000200 	andvc	r0, r0, #0, 4
	...
    557c:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    5588:	30000200 	andcc	r0, r0, r0, lsl #4
    558c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    5590:	00000000 	andeq	r0, r0, r0
    5594:	31000200 	mrscc	r0, R8_usr
    5598:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    559c:	00000000 	andeq	r0, r0, r0
    55a0:	00000300 	andeq	r0, r0, r0, lsl #6
	...
    55b0:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    55bc:	01f30004 	mvnseq	r0, r4
    55c0:	00009f50 	andeq	r9, r0, r0, asr pc
    55c4:	00000000 	andeq	r0, r0, r0
    55c8:	00010000 	andeq	r0, r1, r0
    55cc:	00000050 	andeq	r0, r0, r0, asr r0
    55d0:	00000000 	andeq	r0, r0, r0
    55d4:	72000200 	andvc	r0, r0, #0, 4
	...
    55e0:	00225a00 	eoreq	r5, r2, r0, lsl #20
    55e4:	00225e10 	eoreq	r5, r2, r0, lsl lr
    55e8:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    55ec:	00225e00 	eoreq	r5, r2, r0, lsl #28
    55f0:	00226010 	eoreq	r6, r2, r0, lsl r0
    55f4:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    55f8:	00226008 	eoreq	r6, r2, r8
    55fc:	00228210 	eoreq	r8, r2, r0, lsl r2
    5600:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    5604:	00228210 	eoreq	r8, r2, r0, lsl r2
    5608:	00228410 	eoreq	r8, r2, r0, lsl r4
    560c:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    5610:	00228408 	eoreq	r8, r2, r8, lsl #8
    5614:	00228c10 	eoreq	r8, r2, r0, lsl ip
    5618:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    561c:	00228c10 	eoreq	r8, r2, r0, lsl ip
    5620:	00229010 	eoreq	r9, r2, r0, lsl r0
    5624:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    5628:	00229000 	eoreq	r9, r2, r0
    562c:	00229810 	eoreq	r9, r2, r0, lsl r8
    5630:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    5634:	00000010 	andeq	r0, r0, r0, lsl r0
	...
    5650:	5a000000 	bpl	5658 <__HEAP_SIZE+0x4658>
    5654:	7a100022 	bvc	4056e4 <__RAM_SIZE+0x3056e4>
    5658:	01100022 	tsteq	r0, r2, lsr #32
    565c:	227a5000 	rsbscs	r5, sl, #0
    5660:	227d1000 	rsbscs	r1, sp, #0
    5664:	00011000 	andeq	r1, r1, r0
    5668:	00227d5c 	eoreq	r7, r2, ip, asr sp
    566c:	00228410 	eoreq	r8, r2, r0, lsl r4
    5670:	f3000410 	vqshl.u8	d0, d0, d0
    5674:	849f5001 	ldrhi	r5, [pc], #1	; 567c <__HEAP_SIZE+0x467c>
    5678:	8a100022 	bhi	405708 <__RAM_SIZE+0x305708>
    567c:	01100022 	tsteq	r0, r2, lsr #32
    5680:	228a5000 	addcs	r5, sl, #0
    5684:	228c1000 	addcs	r1, ip, #0
    5688:	00011000 	andeq	r1, r1, r0
    568c:	00228c5c 	eoreq	r8, r2, ip, asr ip
    5690:	00228e10 	eoreq	r8, r2, r0, lsl lr
    5694:	50000110 	andpl	r0, r0, r0, lsl r1
    5698:	1000228e 	andne	r2, r0, lr, lsl #5
    569c:	10002290 	mulne	r0, r0, r2
    56a0:	01f30004 	mvnseq	r0, r4
    56a4:	22909f50 	addscs	r9, r0, #80, 30	; 0x140
    56a8:	22921000 	addscs	r1, r2, #0
    56ac:	00011000 	andeq	r1, r1, r0
    56b0:	00229250 	eoreq	r9, r2, r0, asr r2
    56b4:	00229410 	eoreq	r9, r2, r0, lsl r4
    56b8:	5c000110 	stfpls	f0, [r0], {16}
    56bc:	10002294 	mulne	r0, r4, r2
    56c0:	10002296 	mulne	r0, r6, r2
    56c4:	96500001 	ldrbls	r0, [r0], -r1
    56c8:	98100022 	ldmdals	r0, {r1, r5}
    56cc:	01100022 	tsteq	r0, r2, lsr #32
    56d0:	00005c00 	andeq	r5, r0, r0, lsl #24
	...
    56e0:	1000225a 	andne	r2, r0, sl, asr r2
    56e4:	1000227d 	andne	r2, r0, sp, ror r2
    56e8:	7d510001 	ldclvc	0, cr0, [r1, #-4]
    56ec:	84100022 	ldrhi	r0, [r0], #-34	; 0xffffffde
    56f0:	04100022 	ldreq	r0, [r0], #-34	; 0xffffffde
    56f4:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    56f8:	0022849f 	mlaeq	r2, pc, r4, r8	; <UNPREDICTABLE>
    56fc:	00229810 	eoreq	r9, r2, r0, lsl r8
    5700:	51000110 	tstpl	r0, r0, lsl r1
	...
    5710:	225a0000 	subscs	r0, sl, #0
    5714:	227d1000 	rsbscs	r1, sp, #0
    5718:	00011000 	andeq	r1, r1, r0
    571c:	00227d52 	eoreq	r7, r2, r2, asr sp
    5720:	00228410 	eoreq	r8, r2, r0, lsl r4
    5724:	f3000410 	vqshl.u8	d0, d0, d0
    5728:	849f5201 	ldrhi	r5, [pc], #513	; 5730 <__HEAP_SIZE+0x4730>
    572c:	98100022 	ldmdals	r0, {r1, r5}
    5730:	01100022 	tsteq	r0, r2, lsr #32
    5734:	00005200 	andeq	r5, r0, r0, lsl #4
	...
    5744:	1000225a 	andne	r2, r0, sl, asr r2
    5748:	1000226e 	andne	r2, r0, lr, ror #4
    574c:	6e530001 	cdpvs	0, 5, cr0, cr3, cr1, {0}
    5750:	84100022 	ldrhi	r0, [r0], #-34	; 0xffffffde
    5754:	01100022 	tsteq	r0, r2, lsr #32
    5758:	22845400 	addcs	r5, r4, #0, 8
    575c:	22981000 	addscs	r1, r8, #0
    5760:	00011000 	andeq	r1, r1, r0
    5764:	00000053 	andeq	r0, r0, r3, asr r0
	...
    5770:	00225a00 	eoreq	r5, r2, r0, lsl #20
    5774:	00228410 	eoreq	r8, r2, r0, lsl r4
    5778:	91000210 	tstls	r0, r0, lsl r2
    577c:	00228400 	eoreq	r8, r2, r0, lsl #8
    5780:	00229810 	eoreq	r9, r2, r0, lsl r8
    5784:	91000210 	tstls	r0, r0, lsl r2
	...
    5790:	01010200 	mrseq	r0, R9_usr
	...
    579c:	00225a00 	eoreq	r5, r2, r0, lsl #20
    57a0:	00226c10 	eoreq	r6, r2, r0, lsl ip
    57a4:	30000210 	andcc	r0, r0, r0, lsl r2
    57a8:	00226c9f 	mlaeq	r2, pc, ip, r6	; <UNPREDICTABLE>
    57ac:	00226e10 	eoreq	r6, r2, r0, lsl lr
    57b0:	53000110 	movwpl	r0, #272	; 0x110
    57b4:	1000226e 	andne	r2, r0, lr, ror #4
    57b8:	10002280 	andne	r2, r0, r0, lsl #5
    57bc:	84540001 	ldrbhi	r0, [r4], #-1
    57c0:	8a100022 	bhi	405850 <__RAM_SIZE+0x305850>
    57c4:	02100022 	andseq	r0, r0, #34	; 0x22
    57c8:	8a9f3000 	bhi	fe7d17d0 <__StackTop+0xc66d17d0>
    57cc:	8c100022 	ldchi	0, cr0, [r0], {34}	; 0x22
    57d0:	01100022 	tsteq	r0, r2, lsr #32
    57d4:	228c5000 	addcs	r5, ip, #0
    57d8:	22981000 	addscs	r1, r8, #0
    57dc:	00021000 	andeq	r1, r2, r0
    57e0:	00009f30 	andeq	r9, r0, r0, lsr pc
    57e4:	00000000 	andeq	r0, r0, r0
    57e8:	21b40000 			; <UNDEFINED> instruction: 0x21b40000
    57ec:	21ba1000 			; <UNDEFINED> instruction: 0x21ba1000
    57f0:	00021000 	andeq	r1, r2, r0
    57f4:	21ba007d 			; <UNDEFINED> instruction: 0x21ba007d
    57f8:	22321000 	eorscs	r1, r2, #0
    57fc:	00021000 	andeq	r1, r2, r0
    5800:	2232107d 	eorscs	r1, r2, #125	; 0x7d
    5804:	22361000 	eorscs	r1, r6, #0
    5808:	00021000 	andeq	r1, r2, r0
    580c:	2236007d 	eorscs	r0, r6, #125	; 0x7d
    5810:	223a1000 	eorscs	r1, sl, #0
    5814:	00021000 	andeq	r1, r2, r0
    5818:	0000107d 	andeq	r1, r0, sp, ror r0
	...
    5830:	21b40000 			; <UNDEFINED> instruction: 0x21b40000
    5834:	21d21000 	bicscs	r1, r2, r0
    5838:	00011000 	andeq	r1, r1, r0
    583c:	0021d250 	eoreq	sp, r1, r0, asr r2
    5840:	0021d410 	eoreq	sp, r1, r0, lsl r4
    5844:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    5848:	100021d4 	ldrdne	r2, [r0], -r4
    584c:	100021db 	ldrdne	r2, [r0], -fp
    5850:	db500001 	blle	140585c <__RAM_SIZE+0x130585c>
    5854:	32100021 	andscc	r0, r0, #33	; 0x21
    5858:	01100022 	tsteq	r0, r2, lsr #32
    585c:	22325400 	eorscs	r5, r2, #0, 8
    5860:	22341000 	eorscs	r1, r4, #0
    5864:	00011000 	andeq	r1, r1, r0
    5868:	00223450 	eoreq	r3, r2, r0, asr r4
    586c:	00223610 	eoreq	r3, r2, r0, lsl r6
    5870:	f3000410 	vqshl.u8	d0, d0, d0
    5874:	369f5001 	ldrcc	r5, [pc], r1
    5878:	38100022 	ldmdacc	r0, {r1, r5}
    587c:	01100022 	tsteq	r0, r2, lsr #32
    5880:	22385000 	eorscs	r5, r8, #0
    5884:	223a1000 	eorscs	r1, sl, #0
    5888:	00011000 	andeq	r1, r1, r0
    588c:	00000054 	andeq	r0, r0, r4, asr r0
	...
    589c:	0021b400 	eoreq	fp, r1, r0, lsl #8
    58a0:	0021c810 	eoreq	ip, r1, r0, lsl r8
    58a4:	51000110 	tstpl	r0, r0, lsl r1
    58a8:	100021c8 	andne	r2, r0, r8, asr #3
    58ac:	10002232 	andne	r2, r0, r2, lsr r2
    58b0:	32550001 	subscc	r0, r5, #1
    58b4:	38100022 	ldmdacc	r0, {r1, r5}
    58b8:	01100022 	tsteq	r0, r2, lsr #32
    58bc:	22385100 	eorscs	r5, r8, #0, 2
    58c0:	223a1000 	eorscs	r1, sl, #0
    58c4:	00011000 	andeq	r1, r1, r0
    58c8:	00000055 	andeq	r0, r0, r5, asr r0
    58cc:	00000000 	andeq	r0, r0, r0
    58d0:	00000200 	andeq	r0, r0, r0, lsl #4
    58d4:	b4000000 	strlt	r0, [r0], #-0
    58d8:	d2100021 	andsle	r0, r0, #33	; 0x21
    58dc:	02100021 	andseq	r0, r0, #33	; 0x21
    58e0:	d29f3100 	addsle	r3, pc, #0, 2
    58e4:	d4100021 	ldrle	r0, [r0], #-33	; 0xffffffdf
    58e8:	02100021 	andseq	r0, r0, #33	; 0x21
    58ec:	d49f3000 	ldrle	r3, [pc], #0	; 58f4 <__HEAP_SIZE+0x48f4>
    58f0:	38100021 	ldmdacc	r0, {r0, r5}
    58f4:	02100022 	andseq	r0, r0, #34	; 0x22
    58f8:	009f3100 	addseq	r3, pc, r0, lsl #2
    58fc:	00000000 	andeq	r0, r0, r0
    5900:	03000000 	movweq	r0, #0
	...
    5910:	b4000000 	strlt	r0, [r0], #-0
    5914:	d2100021 	andsle	r0, r0, #33	; 0x21
    5918:	01100021 	tsteq	r0, r1, lsr #32
    591c:	21d25000 	bicscs	r5, r2, r0
    5920:	21d41000 	bicscs	r1, r4, r0
    5924:	00011000 	andeq	r1, r1, r0
    5928:	0021d454 	eoreq	sp, r1, r4, asr r4
    592c:	0021db10 	eoreq	sp, r1, r0, lsl fp
    5930:	50000110 	andpl	r0, r0, r0, lsl r1
    5934:	100021db 	ldrdne	r2, [r0], -fp
    5938:	10002232 	andne	r2, r0, r2, lsr r2
    593c:	32540001 	subscc	r0, r4, #1
    5940:	34100022 	ldrcc	r0, [r0], #-34	; 0xffffffde
    5944:	01100022 	tsteq	r0, r2, lsr #32
    5948:	22345000 	eorscs	r5, r4, #0
    594c:	22361000 	eorscs	r1, r6, #0
    5950:	00041000 	andeq	r1, r4, r0
    5954:	9f5001f3 	svcls	0x005001f3
    5958:	10002236 	andne	r2, r0, r6, lsr r2
    595c:	10002238 	andne	r2, r0, r8, lsr r2
    5960:	38500001 	ldmdacc	r0, {r0}^
    5964:	3a100022 	bcc	4059f4 <__RAM_SIZE+0x3059f4>
    5968:	01100022 	tsteq	r0, r2, lsr #32
    596c:	00005400 	andeq	r5, r0, r0, lsl #8
    5970:	00000000 	andeq	r0, r0, r0
    5974:	00010000 	andeq	r0, r1, r0
	...
    5980:	00010000 	andeq	r0, r1, r0
    5984:	00000053 	andeq	r0, r0, r3, asr r0
    5988:	00000000 	andeq	r0, r0, r0
    598c:	53000100 	movwpl	r0, #256	; 0x100
	...
    5998:	10002724 	andne	r2, r0, r4, lsr #14
    599c:	10002728 	andne	r2, r0, r8, lsr #14
    59a0:	007d0002 	rsbseq	r0, sp, r2
    59a4:	10002728 	andne	r2, r0, r8, lsr #14
    59a8:	100027cc 	andne	r2, r0, ip, asr #15
    59ac:	187d0002 	ldmdane	sp!, {r1}^
	...
    59c0:	27240000 	strcs	r0, [r4, -r0]!
    59c4:	27461000 	strbcs	r1, [r6, -r0]
    59c8:	00011000 	andeq	r1, r1, r0
    59cc:	00274650 	eoreq	r4, r7, r0, asr r6
    59d0:	00275410 	eoreq	r5, r7, r0, lsl r4
    59d4:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    59d8:	10002754 	andne	r2, r0, r4, asr r7
    59dc:	1000276e 	andne	r2, r0, lr, ror #14
    59e0:	01f30004 	mvnseq	r0, r4
    59e4:	276e9f50 			; <UNDEFINED> instruction: 0x276e9f50
    59e8:	27801000 	strcs	r1, [r0, r0]
    59ec:	00011000 	andeq	r1, r1, r0
    59f0:	00278054 	eoreq	r8, r7, r4, asr r0
    59f4:	0027cc10 	eoreq	ip, r7, r0, lsl ip
    59f8:	f3000410 	vqshl.u8	d0, d0, d0
    59fc:	009f5001 	addseq	r5, pc, r1
	...
    5a08:	24000000 	strcs	r0, [r0], #-0
    5a0c:	40100027 	andsmi	r0, r0, r7, lsr #32
    5a10:	01100027 	tsteq	r0, r7, lsr #32
    5a14:	27405100 	strbcs	r5, [r0, -r0, lsl #2]
    5a18:	27cc1000 	strbcs	r1, [ip, r0]
    5a1c:	00011000 	andeq	r1, r1, r0
    5a20:	00000055 	andeq	r0, r0, r5, asr r0
	...
    5a2c:	00275400 	eoreq	r5, r7, r0, lsl #8
    5a30:	00276a10 	eoreq	r6, r7, r0, lsl sl
    5a34:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    5a38:	1000279a 	mulne	r0, sl, r7
    5a3c:	100027cc 	andne	r2, r0, ip, asr #15
    5a40:	00540001 	subseq	r0, r4, r1
	...
    5a4c:	00273000 	eoreq	r3, r7, r0
    5a50:	0027cc10 	eoreq	ip, r7, r0, lsl ip
    5a54:	56000110 			; <UNDEFINED> instruction: 0x56000110
	...
    5a60:	27340000 	ldrcs	r0, [r4, -r0]!
    5a64:	27cc1000 	strbcs	r1, [ip, r0]
    5a68:	00011000 	andeq	r1, r1, r0
    5a6c:	00000057 	andeq	r0, r0, r7, asr r0
    5a70:	00000000 	andeq	r0, r0, r0
    5a74:	3a000000 	bcc	5a7c <__HEAP_SIZE+0x4a7c>
    5a78:	cc100027 	ldcgt	0, cr0, [r0], {39}	; 0x27
    5a7c:	01100027 	tsteq	r0, r7, lsr #32
    5a80:	00005800 	andeq	r5, r0, r0, lsl #16
	...
    5a8c:	10002776 	andne	r2, r0, r6, ror r7
    5a90:	1000279a 	mulne	r0, sl, r7
    5a94:	00510001 	subseq	r0, r1, r1
	...
    5aa4:	02000000 	andeq	r0, r0, #0
    5aa8:	00007d00 	andeq	r7, r0, r0, lsl #26
    5aac:	00000000 	andeq	r0, r0, r0
    5ab0:	02000000 	andeq	r0, r0, #0
    5ab4:	00107d00 	andseq	r7, r0, r0, lsl #26
	...
    5ac8:	01000000 	mrseq	r0, (UNDEF: 0)
    5acc:	00005000 	andeq	r5, r0, r0
    5ad0:	00000000 	andeq	r0, r0, r0
    5ad4:	00010000 	andeq	r0, r1, r0
    5ad8:	00000050 	andeq	r0, r0, r0, asr r0
	...
    5aec:	01000000 	mrseq	r0, (UNDEF: 0)
    5af0:	00005100 	andeq	r5, r0, r0, lsl #2
    5af4:	00000000 	andeq	r0, r0, r0
    5af8:	00010000 	andeq	r0, r1, r0
    5afc:	00000055 	andeq	r0, r0, r5, asr r0
    5b00:	00000000 	andeq	r0, r0, r0
    5b04:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    5b1c:	00010000 	andeq	r0, r1, r0
    5b20:	00000052 	andeq	r0, r0, r2, asr r0
    5b24:	00000000 	andeq	r0, r0, r0
    5b28:	56000100 	strpl	r0, [r0], -r0, lsl #2
	...
    5b34:	00520001 	subseq	r0, r2, r1
	...
    5b48:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    5b5c:	00010000 	andeq	r0, r1, r0
    5b60:	00000054 	andeq	r0, r0, r4, asr r0
	...
    5b70:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    5b7c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    5b80:	00000010 	andeq	r0, r0, r0, lsl r0
	...
    5b94:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    5ba0:	00500001 	subseq	r0, r0, r1
	...
    5bbc:	01000000 	mrseq	r0, (UNDEF: 0)
    5bc0:	00005100 	andeq	r5, r0, r0, lsl #2
    5bc4:	00000000 	andeq	r0, r0, r0
    5bc8:	00010000 	andeq	r0, r1, r0
    5bcc:	00000054 	andeq	r0, r0, r4, asr r0
    5bd0:	00000000 	andeq	r0, r0, r0
    5bd4:	f3000400 	vshl.u8	d0, d0, d0
    5bd8:	009f5101 	addseq	r5, pc, r1, lsl #2
    5bdc:	00000000 	andeq	r0, r0, r0
    5be0:	01000000 	mrseq	r0, (UNDEF: 0)
    5be4:	00005100 	andeq	r5, r0, r0, lsl #2
    5be8:	00000000 	andeq	r0, r0, r0
    5bec:	00010000 	andeq	r0, r1, r0
    5bf0:	00000054 	andeq	r0, r0, r4, asr r0
    5bf4:	00000000 	andeq	r0, r0, r0
    5bf8:	f3000400 	vshl.u8	d0, d0, d0
    5bfc:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
    5c10:	01000000 	mrseq	r0, (UNDEF: 0)
    5c14:	00005500 	andeq	r5, r0, r0, lsl #10
    5c18:	00000000 	andeq	r0, r0, r0
    5c1c:	00010000 	andeq	r0, r1, r0
    5c20:	00000055 	andeq	r0, r0, r5, asr r0
    5c24:	00000000 	andeq	r0, r0, r0
    5c28:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    5c34:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    5c40:	9f310002 	svcls	0x00310002
	...
    5c54:	007d0002 	rsbseq	r0, sp, r2
	...
    5c60:	107d0002 	rsbsne	r0, sp, r2
	...
    5c78:	00500001 	subseq	r0, r0, r1
    5c7c:	00000000 	andeq	r0, r0, r0
    5c80:	01000000 	mrseq	r0, (UNDEF: 0)
    5c84:	00005500 	andeq	r5, r0, r0, lsl #10
	...
    5c9c:	00010000 	andeq	r0, r1, r0
    5ca0:	00000051 	andeq	r0, r0, r1, asr r0
    5ca4:	00000000 	andeq	r0, r0, r0
    5ca8:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    5cb4:	70740003 	rsbsvc	r0, r4, r3
    5cb8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    5cbc:	00000000 	andeq	r0, r0, r0
    5cc0:	f3000400 	vshl.u8	d0, d0, d0
    5cc4:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
    5cd8:	01000000 	mrseq	r0, (UNDEF: 0)
    5cdc:	00005200 	andeq	r5, r0, r0, lsl #4
    5ce0:	00000000 	andeq	r0, r0, r0
    5ce4:	00010000 	andeq	r0, r1, r0
    5ce8:	00000056 	andeq	r0, r0, r6, asr r0
    5cec:	00000000 	andeq	r0, r0, r0
    5cf0:	00000800 	andeq	r0, r0, r0, lsl #16
	...
    5cfc:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    5d08:	00550001 	subseq	r0, r5, r1
	...
    5d1c:	01000000 	mrseq	r0, (UNDEF: 0)
    5d20:	00005300 	andeq	r5, r0, r0, lsl #6
    5d24:	00000000 	andeq	r0, r0, r0
    5d28:	00010000 	andeq	r0, r1, r0
    5d2c:	00000053 	andeq	r0, r0, r3, asr r0
	...
    5d40:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    5d4c:	00500001 	subseq	r0, r0, r1
	...
    5d60:	01000000 	mrseq	r0, (UNDEF: 0)
    5d64:	00005300 	andeq	r5, r0, r0, lsl #6
    5d68:	00000000 	andeq	r0, r0, r0
    5d6c:	00010000 	andeq	r0, r1, r0
    5d70:	00000053 	andeq	r0, r0, r3, asr r0
	...
    5d80:	01000000 	mrseq	r0, (UNDEF: 0)
    5d84:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    5d98:	00520001 	subseq	r0, r2, r1
	...
    5da8:	02000000 	andeq	r0, r0, #0
    5dac:	00007d00 	andeq	r7, r0, r0, lsl #26
    5db0:	00000000 	andeq	r0, r0, r0
    5db4:	02000000 	andeq	r0, r0, #0
    5db8:	00187d00 	andseq	r7, r8, r0, lsl #26
	...
    5dcc:	01000000 	mrseq	r0, (UNDEF: 0)
    5dd0:	00005000 	andeq	r5, r0, r0
    5dd4:	00000000 	andeq	r0, r0, r0
    5dd8:	00010000 	andeq	r0, r1, r0
    5ddc:	00000056 	andeq	r0, r0, r6, asr r0
	...
    5e0c:	01000000 	mrseq	r0, (UNDEF: 0)
    5e10:	00005100 	andeq	r5, r0, r0, lsl #2
    5e14:	00000000 	andeq	r0, r0, r0
    5e18:	00010000 	andeq	r0, r1, r0
    5e1c:	00000054 	andeq	r0, r0, r4, asr r0
    5e20:	00000000 	andeq	r0, r0, r0
    5e24:	74000300 	strvc	r0, [r0], #-768	; 0xfffffd00
    5e28:	00009f70 	andeq	r9, r0, r0, ror pc
    5e2c:	00000000 	andeq	r0, r0, r0
    5e30:	00040000 	andeq	r0, r4, r0
    5e34:	9f5101f3 	svcls	0x005101f3
	...
    5e40:	00540001 	subseq	r0, r4, r1
    5e44:	00000000 	andeq	r0, r0, r0
    5e48:	03000000 	movweq	r0, #0
    5e4c:	9f707400 	svcls	0x00707400
	...
    5e58:	01f30004 	mvnseq	r0, r4
    5e5c:	00009f51 	andeq	r9, r0, r1, asr pc
    5e60:	00000000 	andeq	r0, r0, r0
    5e64:	00010000 	andeq	r0, r1, r0
    5e68:	00000054 	andeq	r0, r0, r4, asr r0
    5e6c:	00000000 	andeq	r0, r0, r0
    5e70:	74000300 	strvc	r0, [r0], #-768	; 0xfffffd00
    5e74:	00009f70 	andeq	r9, r0, r0, ror pc
    5e78:	00000000 	andeq	r0, r0, r0
    5e7c:	00040000 	andeq	r0, r4, r0
    5e80:	9f5101f3 	svcls	0x005101f3
	...
    5e8c:	00540001 	subseq	r0, r4, r1
    5e90:	00000000 	andeq	r0, r0, r0
    5e94:	03000000 	movweq	r0, #0
    5e98:	9f707400 	svcls	0x00707400
	...
    5ea4:	01f30004 	mvnseq	r0, r4
    5ea8:	00009f51 	andeq	r9, r0, r1, asr pc
    5eac:	00000000 	andeq	r0, r0, r0
    5eb0:	00010000 	andeq	r0, r1, r0
    5eb4:	00000054 	andeq	r0, r0, r4, asr r0
    5eb8:	00000000 	andeq	r0, r0, r0
    5ebc:	f3000400 	vshl.u8	d0, d0, d0
    5ec0:	009f5101 	addseq	r5, pc, r1, lsl #2
    5ec4:	00000000 	andeq	r0, r0, r0
    5ec8:	01000000 	mrseq	r0, (UNDEF: 0)
    5ecc:	00005400 	andeq	r5, r0, r0, lsl #8
    5ed0:	00000000 	andeq	r0, r0, r0
    5ed4:	00040000 	andeq	r0, r4, r0
    5ed8:	9f5101f3 	svcls	0x005101f3
	...
    5ef4:	00010000 	andeq	r0, r1, r0
    5ef8:	00000052 	andeq	r0, r0, r2, asr r0
    5efc:	00000000 	andeq	r0, r0, r0
    5f00:	57000100 	strpl	r0, [r0, -r0, lsl #2]
	...
    5f0c:	01f30004 	mvnseq	r0, r4
    5f10:	00009f52 	andeq	r9, r0, r2, asr pc
    5f14:	00000000 	andeq	r0, r0, r0
    5f18:	00010000 	andeq	r0, r1, r0
    5f1c:	00000057 	andeq	r0, r0, r7, asr r0
    5f20:	00000000 	andeq	r0, r0, r0
    5f24:	f3000400 	vshl.u8	d0, d0, d0
    5f28:	009f5201 	addseq	r5, pc, r1, lsl #4
	...
    5f3c:	01000000 	mrseq	r0, (UNDEF: 0)
    5f40:	00005300 	andeq	r5, r0, r0, lsl #6
    5f44:	00000000 	andeq	r0, r0, r0
    5f48:	00040000 	andeq	r0, r4, r0
    5f4c:	9f5301f3 	svcls	0x005301f3
	...
    5f64:	00910002 	addseq	r0, r1, r2
	...
    5f70:	00910002 	addseq	r0, r1, r2
	...
    5f88:	04910002 	ldreq	r0, [r1], #2
	...
    5f94:	04910002 	ldreq	r0, [r1], #2
	...
    5fa0:	00000009 	andeq	r0, r0, r9
	...
    5fac:	00500001 	subseq	r0, r0, r1
    5fb0:	00000000 	andeq	r0, r0, r0
    5fb4:	01000000 	mrseq	r0, (UNDEF: 0)
    5fb8:	00005600 	andeq	r5, r0, r0, lsl #12
	...
    5fcc:	00010000 	andeq	r0, r1, r0
    5fd0:	0000005c 	andeq	r0, r0, ip, asr r0
    5fd4:	00000000 	andeq	r0, r0, r0
    5fd8:	5c000100 	stfpls	f0, [r0], {-0}
	...
    5fe4:	00000003 	andeq	r0, r0, r3
	...
    5ff4:	9f310002 	svcls	0x00310002
	...
    6000:	00540001 	subseq	r0, r4, r1
    6004:	00000000 	andeq	r0, r0, r0
    6008:	02000000 	andeq	r0, r0, #0
    600c:	009f3100 	addseq	r3, pc, r0, lsl #2
    6010:	00000000 	andeq	r0, r0, r0
    6014:	01000000 	mrseq	r0, (UNDEF: 0)
    6018:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    602c:	00010000 	andeq	r0, r1, r0
    6030:	00000050 	andeq	r0, r0, r0, asr r0
    6034:	00000000 	andeq	r0, r0, r0
    6038:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    6050:	00530001 	subseq	r0, r3, r1
    6054:	00000000 	andeq	r0, r0, r0
    6058:	01000000 	mrseq	r0, (UNDEF: 0)
    605c:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    6070:	00530001 	subseq	r0, r3, r1
	...
    6084:	52000100 	andpl	r0, r0, #0, 2
	...
    6098:	007d0002 	rsbseq	r0, sp, r2
	...
    60a4:	187d0002 	ldmdane	sp!, {r1}^
	...
    60bc:	00500001 	subseq	r0, r0, r1
    60c0:	00000000 	andeq	r0, r0, r0
    60c4:	01000000 	mrseq	r0, (UNDEF: 0)
    60c8:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    60fc:	00510001 	subseq	r0, r1, r1
    6100:	00000000 	andeq	r0, r0, r0
    6104:	01000000 	mrseq	r0, (UNDEF: 0)
    6108:	00005500 	andeq	r5, r0, r0, lsl #10
    610c:	00000000 	andeq	r0, r0, r0
    6110:	00030000 	andeq	r0, r3, r0
    6114:	009f7075 	addseq	r7, pc, r5, ror r0	; <UNPREDICTABLE>
    6118:	00000000 	andeq	r0, r0, r0
    611c:	04000000 	streq	r0, [r0], #-0
    6120:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    6124:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    6128:	00000000 	andeq	r0, r0, r0
    612c:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    6138:	70750003 	rsbsvc	r0, r5, r3
    613c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    6140:	00000000 	andeq	r0, r0, r0
    6144:	f3000400 	vshl.u8	d0, d0, d0
    6148:	009f5101 	addseq	r5, pc, r1, lsl #2
    614c:	00000000 	andeq	r0, r0, r0
    6150:	01000000 	mrseq	r0, (UNDEF: 0)
    6154:	00005500 	andeq	r5, r0, r0, lsl #10
    6158:	00000000 	andeq	r0, r0, r0
    615c:	00030000 	andeq	r0, r3, r0
    6160:	009f7075 	addseq	r7, pc, r5, ror r0	; <UNPREDICTABLE>
    6164:	00000000 	andeq	r0, r0, r0
    6168:	04000000 	streq	r0, [r0], #-0
    616c:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    6170:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    6174:	00000000 	andeq	r0, r0, r0
    6178:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    6184:	70750003 	rsbsvc	r0, r5, r3
    6188:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    618c:	00000000 	andeq	r0, r0, r0
    6190:	f3000400 	vshl.u8	d0, d0, d0
    6194:	009f5101 	addseq	r5, pc, r1, lsl #2
    6198:	00000000 	andeq	r0, r0, r0
    619c:	01000000 	mrseq	r0, (UNDEF: 0)
    61a0:	00005500 	andeq	r5, r0, r0, lsl #10
    61a4:	00000000 	andeq	r0, r0, r0
    61a8:	00040000 	andeq	r0, r4, r0
    61ac:	9f5101f3 	svcls	0x005101f3
	...
    61b8:	00550001 	subseq	r0, r5, r1
    61bc:	00000000 	andeq	r0, r0, r0
    61c0:	04000000 	streq	r0, [r0], #-0
    61c4:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    61c8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    61e0:	01000000 	mrseq	r0, (UNDEF: 0)
    61e4:	00005200 	andeq	r5, r0, r0, lsl #4
    61e8:	00000000 	andeq	r0, r0, r0
    61ec:	00010000 	andeq	r0, r1, r0
    61f0:	00000057 	andeq	r0, r0, r7, asr r0
    61f4:	00000000 	andeq	r0, r0, r0
    61f8:	f3000400 	vshl.u8	d0, d0, d0
    61fc:	009f5201 	addseq	r5, pc, r1, lsl #4
    6200:	00000000 	andeq	r0, r0, r0
    6204:	01000000 	mrseq	r0, (UNDEF: 0)
    6208:	00005700 	andeq	r5, r0, r0, lsl #14
    620c:	00000000 	andeq	r0, r0, r0
    6210:	00040000 	andeq	r0, r4, r0
    6214:	9f5201f3 	svcls	0x005201f3
	...
    622c:	00530001 	subseq	r0, r3, r1
    6230:	00000000 	andeq	r0, r0, r0
    6234:	04000000 	streq	r0, [r0], #-0
    6238:	5301f300 	movwpl	pc, #4864	; 0x1300	; <UNPREDICTABLE>
    623c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    6250:	91000200 	mrsls	r0, R8_usr
	...
    625c:	91000200 	mrsls	r0, R8_usr
	...
    6268:	00000700 	andeq	r0, r0, r0, lsl #14
	...
    6274:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    6280:	00540001 	subseq	r0, r4, r1
    6284:	00000000 	andeq	r0, r0, r0
    6288:	02000000 	andeq	r0, r0, #0
	...
    6298:	02000000 	andeq	r0, r0, #0
    629c:	009f3100 	addseq	r3, pc, r0, lsl #2
    62a0:	00000000 	andeq	r0, r0, r0
    62a4:	01000000 	mrseq	r0, (UNDEF: 0)
    62a8:	00005500 	andeq	r5, r0, r0, lsl #10
    62ac:	00000000 	andeq	r0, r0, r0
    62b0:	00020000 	andeq	r0, r2, r0
    62b4:	00009f31 	andeq	r9, r0, r1, lsr pc
    62b8:	00000000 	andeq	r0, r0, r0
    62bc:	00010000 	andeq	r0, r1, r0
    62c0:	00000055 	andeq	r0, r0, r5, asr r0
	...
    62d4:	01000000 	mrseq	r0, (UNDEF: 0)
    62d8:	00005000 	andeq	r5, r0, r0
    62dc:	00000000 	andeq	r0, r0, r0
    62e0:	00010000 	andeq	r0, r1, r0
    62e4:	00000050 	andeq	r0, r0, r0, asr r0
    62e8:	00000000 	andeq	r0, r0, r0
    62ec:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    6304:	00530001 	subseq	r0, r3, r1
    6308:	00000000 	andeq	r0, r0, r0
    630c:	01000000 	mrseq	r0, (UNDEF: 0)
    6310:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    6324:	00530001 	subseq	r0, r3, r1
	...
    6334:	02000000 	andeq	r0, r0, #0
    6338:	00007d00 	andeq	r7, r0, r0, lsl #26
    633c:	00000000 	andeq	r0, r0, r0
    6340:	02000000 	andeq	r0, r0, #0
    6344:	00187d00 	andseq	r7, r8, r0, lsl #26
	...
    635c:	01000000 	mrseq	r0, (UNDEF: 0)
    6360:	00005000 	andeq	r5, r0, r0
    6364:	00000000 	andeq	r0, r0, r0
    6368:	00010000 	andeq	r0, r1, r0
    636c:	00000054 	andeq	r0, r0, r4, asr r0
    6370:	00000000 	andeq	r0, r0, r0
    6374:	f3000400 	vshl.u8	d0, d0, d0
    6378:	009f5001 	addseq	r5, pc, r1
    637c:	00000000 	andeq	r0, r0, r0
    6380:	01000000 	mrseq	r0, (UNDEF: 0)
    6384:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    6398:	00010000 	andeq	r0, r1, r0
    639c:	00000051 	andeq	r0, r0, r1, asr r0
    63a0:	00000000 	andeq	r0, r0, r0
    63a4:	58000100 	stmdapl	r0, {r8}
	...
    63c0:	00010000 	andeq	r0, r1, r0
    63c4:	00000052 	andeq	r0, r0, r2, asr r0
    63c8:	00000000 	andeq	r0, r0, r0
    63cc:	56000100 	strpl	r0, [r0], -r0, lsl #2
	...
    63d8:	01f30004 	mvnseq	r0, r4
    63dc:	00009f52 	andeq	r9, r0, r2, asr pc
    63e0:	00000000 	andeq	r0, r0, r0
    63e4:	00010000 	andeq	r0, r1, r0
    63e8:	00000056 	andeq	r0, r0, r6, asr r0
    63ec:	00000000 	andeq	r0, r0, r0
    63f0:	f3000400 	vshl.u8	d0, d0, d0
    63f4:	009f5201 	addseq	r5, pc, r1, lsl #4
	...
    6410:	53000100 	movwpl	r0, #256	; 0x100
	...
    641c:	00550001 	subseq	r0, r5, r1
    6420:	00000000 	andeq	r0, r0, r0
    6424:	04000000 	streq	r0, [r0], #-0
    6428:	5301f300 	movwpl	pc, #4864	; 0x1300	; <UNPREDICTABLE>
    642c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    6430:	00000000 	andeq	r0, r0, r0
    6434:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    6440:	01f30004 	mvnseq	r0, r4
    6444:	00009f53 	andeq	r9, r0, r3, asr pc
	...
    6458:	00020000 	andeq	r0, r2, r0
    645c:	00000091 	muleq	r0, r1, r0
    6460:	00000000 	andeq	r0, r0, r0
    6464:	00020000 	andeq	r0, r2, r0
    6468:	00000091 	muleq	r0, r1, r0
	...
    6474:	00000001 	andeq	r0, r0, r1
    6478:	00000000 	andeq	r0, r0, r0
    647c:	00010000 	andeq	r0, r1, r0
    6480:	00000055 	andeq	r0, r0, r5, asr r0
    6484:	00000000 	andeq	r0, r0, r0
    6488:	31000200 	mrscc	r0, R8_usr
    648c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    64a0:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    64ac:	00500001 	subseq	r0, r0, r1
    64b0:	00000000 	andeq	r0, r0, r0
    64b4:	01000000 	mrseq	r0, (UNDEF: 0)
    64b8:	01010001 	tsteq	r1, r1
	...
    64c4:	30000200 	andcc	r0, r0, r0, lsl #4
    64c8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    64cc:	00000000 	andeq	r0, r0, r0
    64d0:	30000200 	andcc	r0, r0, r0, lsl #4
    64d4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    64d8:	00000000 	andeq	r0, r0, r0
    64dc:	31000200 	mrscc	r0, R8_usr
    64e0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    64f0:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    64fc:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    6500:	00000010 	andeq	r0, r0, r0, lsl r0
	...
    6518:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    6524:	00540001 	subseq	r0, r4, r1
    6528:	00000000 	andeq	r0, r0, r0
    652c:	04000000 	streq	r0, [r0], #-0
    6530:	5001f300 	andpl	pc, r1, r0, lsl #6
    6534:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    6538:	00000000 	andeq	r0, r0, r0
    653c:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    6554:	00510001 	subseq	r0, r1, r1
    6558:	00000000 	andeq	r0, r0, r0
    655c:	01000000 	mrseq	r0, (UNDEF: 0)
    6560:	00005600 	andeq	r5, r0, r0, lsl #12
	...
    656c:	00010100 	andeq	r0, r1, r0, lsl #2
	...
    6580:	00520001 	subseq	r0, r2, r1
    6584:	00000000 	andeq	r0, r0, r0
    6588:	01000000 	mrseq	r0, (UNDEF: 0)
    658c:	00005500 	andeq	r5, r0, r0, lsl #10
    6590:	00000000 	andeq	r0, r0, r0
    6594:	00040000 	andeq	r0, r4, r0
    6598:	9f5201f3 	svcls	0x005201f3
	...
    65a4:	00550001 	subseq	r0, r5, r1
    65a8:	00000000 	andeq	r0, r0, r0
    65ac:	04000000 	streq	r0, [r0], #-0
    65b0:	5201f300 	andpl	pc, r1, #0, 6
    65b4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    65b8:	00000000 	andeq	r0, r0, r0
    65bc:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    65c8:	01f30004 	mvnseq	r0, r4
    65cc:	00009f52 	andeq	r9, r0, r2, asr pc
	...
    65e0:	00010000 	andeq	r0, r1, r0
    65e4:	00000055 	andeq	r0, r0, r5, asr r0
    65e8:	00000000 	andeq	r0, r0, r0
    65ec:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    6604:	00500001 	subseq	r0, r0, r1
    6608:	00000000 	andeq	r0, r0, r0
    660c:	01000000 	mrseq	r0, (UNDEF: 0)
    6610:	00005000 	andeq	r5, r0, r0
    6614:	00000000 	andeq	r0, r0, r0
    6618:	01020000 	mrseq	r0, (UNDEF: 2)
    661c:	00010100 	andeq	r0, r1, r0, lsl #2
	...
    6628:	9f300002 	svcls	0x00300002
	...
    6634:	9f300002 	svcls	0x00300002
	...
    6640:	9f310002 	svcls	0x00310002
	...
    6654:	00010000 	andeq	r0, r1, r0
    6658:	00000050 	andeq	r0, r0, r0, asr r0
	...
    6668:	01000000 	mrseq	r0, (UNDEF: 0)
    666c:	00005000 	andeq	r5, r0, r0
	...
    667c:	00020000 	andeq	r0, r2, r0
    6680:	0000007d 	andeq	r0, r0, sp, ror r0
    6684:	00000000 	andeq	r0, r0, r0
    6688:	00020000 	andeq	r0, r2, r0
    668c:	0000107d 	andeq	r1, r0, sp, ror r0
    6690:	00000000 	andeq	r0, r0, r0
    6694:	00020000 	andeq	r0, r2, r0
    6698:	0000007d 	andeq	r0, r0, sp, ror r0
	...
    66b4:	00500001 	subseq	r0, r0, r1
    66b8:	00000000 	andeq	r0, r0, r0
    66bc:	01000000 	mrseq	r0, (UNDEF: 0)
    66c0:	00005400 	andeq	r5, r0, r0, lsl #8
    66c4:	00000000 	andeq	r0, r0, r0
    66c8:	00010000 	andeq	r0, r1, r0
    66cc:	00000050 	andeq	r0, r0, r0, asr r0
    66d0:	00000000 	andeq	r0, r0, r0
    66d4:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    66e0:	00500001 	subseq	r0, r0, r1
	...
    66f8:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    6704:	01f30004 	mvnseq	r0, r4
    6708:	00009f51 	andeq	r9, r0, r1, asr pc
    670c:	00000000 	andeq	r0, r0, r0
    6710:	00010000 	andeq	r0, r1, r0
    6714:	00000051 	andeq	r0, r0, r1, asr r0
    6718:	00000000 	andeq	r0, r0, r0
    671c:	00000200 	andeq	r0, r0, r0, lsl #4
	...
    672c:	01000000 	mrseq	r0, (UNDEF: 0)
    6730:	00005000 	andeq	r5, r0, r0
    6734:	00000000 	andeq	r0, r0, r0
    6738:	00010000 	andeq	r0, r1, r0
    673c:	00000054 	andeq	r0, r0, r4, asr r0
    6740:	00000000 	andeq	r0, r0, r0
    6744:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    6750:	00540001 	subseq	r0, r4, r1
    6754:	00000000 	andeq	r0, r0, r0
    6758:	01000000 	mrseq	r0, (UNDEF: 0)
    675c:	00005000 	andeq	r5, r0, r0
    6760:	00000000 	andeq	r0, r0, r0
    6764:	00030000 	andeq	r0, r3, r0
	...
    6770:	00520001 	subseq	r0, r2, r1
	...
    6788:	01000000 	mrseq	r0, (UNDEF: 0)
    678c:	00005300 	andeq	r5, r0, r0, lsl #6
    6790:	00000000 	andeq	r0, r0, r0
    6794:	00010000 	andeq	r0, r1, r0
    6798:	00000053 	andeq	r0, r0, r3, asr r0
    679c:	00000000 	andeq	r0, r0, r0
    67a0:	70000200 	andvc	r0, r0, r0, lsl #4
    67a4:	0000002c 	andeq	r0, r0, ip, lsr #32
    67a8:	00000000 	andeq	r0, r0, r0
    67ac:	74000200 	strvc	r0, [r0], #-512	; 0xfffffe00
    67b0:	0000002c 	andeq	r0, r0, ip, lsr #32
	...
    67c0:	01000000 	mrseq	r0, (UNDEF: 0)
    67c4:	00005300 	andeq	r5, r0, r0, lsl #6
    67c8:	00000000 	andeq	r0, r0, r0
    67cc:	2e0c0000 	cdpcs	0, 0, cr0, cr12, cr0, {0}
    67d0:	2e121000 	cdpcs	0, 1, cr1, cr2, cr0, {0}
    67d4:	00021000 	andeq	r1, r2, r0
    67d8:	2e12007d 	mrccs	0, 0, r0, cr2, cr13, {3}
    67dc:	2e7a1000 	cdpcs	0, 7, cr1, cr10, cr0, {0}
    67e0:	00021000 	andeq	r1, r2, r0
    67e4:	2e7a107d 	mrccs	0, 3, r1, cr10, cr13, {3}
    67e8:	2e7e1000 	cdpcs	0, 7, cr1, cr14, cr0, {0}
    67ec:	00021000 	andeq	r1, r2, r0
    67f0:	2e7e007d 	mrccs	0, 3, r0, cr14, cr13, {3}
    67f4:	2e8c1000 	cdpcs	0, 8, cr1, cr12, cr0, {0}
    67f8:	00021000 	andeq	r1, r2, r0
    67fc:	0000107d 	andeq	r1, r0, sp, ror r0
	...
    6814:	2e0c0000 	cdpcs	0, 0, cr0, cr12, cr0, {0}
    6818:	2e261000 	cdpcs	0, 2, cr1, cr6, cr0, {0}
    681c:	00011000 	andeq	r1, r1, r0
    6820:	002e2650 	eoreq	r2, lr, r0, asr r6
    6824:	002e2810 	eoreq	r2, lr, r0, lsl r8
    6828:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    682c:	10002e28 	andne	r2, r0, r8, lsr #28
    6830:	10002e2c 	andne	r2, r0, ip, lsr #28
    6834:	2c500001 	mrrccs	0, 0, r0, r0, cr1	; <UNPREDICTABLE>
    6838:	7a10002e 	bvc	4068f8 <__RAM_SIZE+0x3068f8>
    683c:	0110002e 	tsteq	r0, lr, lsr #32
    6840:	2e7a5400 	cdpcs	4, 7, cr5, cr10, cr0, {0}
    6844:	2e7c1000 	cdpcs	0, 7, cr1, cr12, cr0, {0}
    6848:	00011000 	andeq	r1, r1, r0
    684c:	002e7c50 	eoreq	r7, lr, r0, asr ip
    6850:	002e7e10 	eoreq	r7, lr, r0, lsl lr
    6854:	f3000410 	vqshl.u8	d0, d0, d0
    6858:	7e9f5001 	cdpvc	0, 9, cr5, cr15, cr1, {0}
    685c:	8010002e 	andshi	r0, r0, lr, lsr #32
    6860:	0110002e 	tsteq	r0, lr, lsr #32
    6864:	2e805000 	cdpcs	0, 8, cr5, cr0, cr0, {0}
    6868:	2e8c1000 	cdpcs	0, 8, cr1, cr12, cr0, {0}
    686c:	00011000 	andeq	r1, r1, r0
    6870:	00000054 	andeq	r0, r0, r4, asr r0
    6874:	00000000 	andeq	r0, r0, r0
    6878:	00000200 	andeq	r0, r0, r0, lsl #4
	...
    6888:	002e0c00 	eoreq	r0, lr, r0, lsl #24
    688c:	002e2610 	eoreq	r2, lr, r0, lsl r6
    6890:	50000110 	andpl	r0, r0, r0, lsl r1
    6894:	10002e26 	andne	r2, r0, r6, lsr #28
    6898:	10002e28 	andne	r2, r0, r8, lsr #28
    689c:	28540001 	ldmdacs	r4, {r0}^
    68a0:	2c10002e 	ldccs	0, cr0, [r0], {46}	; 0x2e
    68a4:	0110002e 	tsteq	r0, lr, lsr #32
    68a8:	2e2c5000 	cdpcs	0, 2, cr5, cr12, cr0, {0}
    68ac:	2e7a1000 	cdpcs	0, 7, cr1, cr10, cr0, {0}
    68b0:	00011000 	andeq	r1, r1, r0
    68b4:	002e7a54 	eoreq	r7, lr, r4, asr sl
    68b8:	002e7c10 	eoreq	r7, lr, r0, lsl ip
    68bc:	50000110 	andpl	r0, r0, r0, lsl r1
    68c0:	10002e7c 	andne	r2, r0, ip, ror lr
    68c4:	10002e7e 	andne	r2, r0, lr, ror lr
    68c8:	01f30004 	mvnseq	r0, r4
    68cc:	2e7e9f50 	mrccs	15, 3, r9, cr14, cr0, {2}
    68d0:	2e801000 	cdpcs	0, 8, cr1, cr0, cr0, {0}
    68d4:	00011000 	andeq	r1, r1, r0
    68d8:	002e8050 	eoreq	r8, lr, r0, asr r0
    68dc:	002e8c10 	eoreq	r8, lr, r0, lsl ip
    68e0:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
	...
    68ec:	04000303 	streq	r0, [r0], #-771	; 0xfffffcfd
    68f0:	00000004 	andeq	r0, r0, r4
    68f4:	10002e0c 	andne	r2, r0, ip, lsl #28
    68f8:	10002e26 	andne	r2, r0, r6, lsr #28
    68fc:	9f300002 	svcls	0x00300002
    6900:	10002e28 	andne	r2, r0, r8, lsr #28
    6904:	10002e76 	andne	r2, r0, r6, ror lr
    6908:	9f300002 	svcls	0x00300002
    690c:	10002e76 	andne	r2, r0, r6, ror lr
    6910:	10002e7a 	andne	r2, r0, sl, ror lr
    6914:	9f310002 	svcls	0x00310002
    6918:	10002e7a 	andne	r2, r0, sl, ror lr
    691c:	10002e8c 	andne	r2, r0, ip, lsl #29
    6920:	9f300002 	svcls	0x00300002
	...
    692c:	2e520000 	cdpcs	0, 5, cr0, cr2, cr0, {0}
    6930:	2e5e1000 	cdpcs	0, 5, cr1, cr14, cr0, {0}
    6934:	00011000 	andeq	r1, r1, r0
    6938:	00000053 	andeq	r0, r0, r3, asr r0
	...
    6948:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    6954:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    6958:	00000010 	andeq	r0, r0, r0, lsl r0
    695c:	00000000 	andeq	r0, r0, r0
    6960:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    696c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    6970:	00000010 	andeq	r0, r0, r0, lsl r0
	...
    6994:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    69a0:	00540001 	subseq	r0, r4, r1
    69a4:	00000000 	andeq	r0, r0, r0
    69a8:	01000000 	mrseq	r0, (UNDEF: 0)
    69ac:	00005000 	andeq	r5, r0, r0
    69b0:	00000000 	andeq	r0, r0, r0
    69b4:	00010000 	andeq	r0, r1, r0
    69b8:	00000054 	andeq	r0, r0, r4, asr r0
    69bc:	00000000 	andeq	r0, r0, r0
    69c0:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    69cc:	00540001 	subseq	r0, r4, r1
    69d0:	00000000 	andeq	r0, r0, r0
    69d4:	01000000 	mrseq	r0, (UNDEF: 0)
    69d8:	00005000 	andeq	r5, r0, r0
    69dc:	00000000 	andeq	r0, r0, r0
    69e0:	00040000 	andeq	r0, r4, r0
    69e4:	9f5001f3 	svcls	0x005001f3
	...
    69f0:	00500001 	subseq	r0, r0, r1
    69f4:	00000000 	andeq	r0, r0, r0
    69f8:	01000000 	mrseq	r0, (UNDEF: 0)
    69fc:	00005400 	andeq	r5, r0, r0, lsl #8
    6a00:	00000000 	andeq	r0, r0, r0
    6a04:	00020000 	andeq	r0, r2, r0
	...
    6a20:	00010000 	andeq	r0, r1, r0
    6a24:	00000050 	andeq	r0, r0, r0, asr r0
    6a28:	00000000 	andeq	r0, r0, r0
    6a2c:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    6a38:	00500001 	subseq	r0, r0, r1
    6a3c:	00000000 	andeq	r0, r0, r0
    6a40:	01000000 	mrseq	r0, (UNDEF: 0)
    6a44:	00005400 	andeq	r5, r0, r0, lsl #8
    6a48:	00000000 	andeq	r0, r0, r0
    6a4c:	00010000 	andeq	r0, r1, r0
    6a50:	00000050 	andeq	r0, r0, r0, asr r0
    6a54:	00000000 	andeq	r0, r0, r0
    6a58:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    6a64:	00500001 	subseq	r0, r0, r1
    6a68:	00000000 	andeq	r0, r0, r0
    6a6c:	04000000 	streq	r0, [r0], #-0
    6a70:	5001f300 	andpl	pc, r1, r0, lsl #6
    6a74:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    6a78:	00000000 	andeq	r0, r0, r0
    6a7c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    6a88:	00540001 	subseq	r0, r4, r1
    6a8c:	00000000 	andeq	r0, r0, r0
    6a90:	03000000 	movweq	r0, #0
	...
    6aa0:	30000200 	andcc	r0, r0, r0, lsl #4
    6aa4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    6aa8:	00000000 	andeq	r0, r0, r0
    6aac:	30000200 	andcc	r0, r0, r0, lsl #4
    6ab0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    6ab4:	00000000 	andeq	r0, r0, r0
    6ab8:	31000200 	mrscc	r0, R8_usr
    6abc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    6acc:	01000000 	mrseq	r0, (UNDEF: 0)
    6ad0:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    6ae4:	9f300002 	svcls	0x00300002
	...
    6b00:	00500001 	subseq	r0, r0, r1
    6b04:	00000000 	andeq	r0, r0, r0
    6b08:	04000000 	streq	r0, [r0], #-0
    6b0c:	5001f300 	andpl	pc, r1, r0, lsl #6
    6b10:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    6b14:	00000000 	andeq	r0, r0, r0
    6b18:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    6b24:	01f30004 	mvnseq	r0, r4
    6b28:	00009f50 	andeq	r9, r0, r0, asr pc
    6b2c:	00000000 	andeq	r0, r0, r0
    6b30:	00020000 	andeq	r0, r2, r0
	...
    6b40:	9f300002 	svcls	0x00300002
	...
    6b4c:	00500001 	subseq	r0, r0, r1
    6b50:	00000000 	andeq	r0, r0, r0
    6b54:	02000000 	andeq	r0, r0, #0
    6b58:	009f3000 	addseq	r3, pc, r0
	...
    6b6c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    6b78:	100026b2 			; <UNDEFINED> instruction: 0x100026b2
    6b7c:	100026b4 			; <UNDEFINED> instruction: 0x100026b4
    6b80:	007d0002 	rsbseq	r0, sp, r2
    6b84:	100026b4 			; <UNDEFINED> instruction: 0x100026b4
    6b88:	100026d6 	ldrdne	r2, [r0], -r6
    6b8c:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    6ba4:	100026b2 			; <UNDEFINED> instruction: 0x100026b2
    6ba8:	100026c0 	andne	r2, r0, r0, asr #13
    6bac:	c0500001 	subsgt	r0, r0, r1
    6bb0:	c2100026 	andsgt	r0, r0, #38	; 0x26
    6bb4:	01100026 	tsteq	r0, r6, lsr #32
    6bb8:	26c25400 	strbcs	r5, [r2], r0, lsl #8
    6bbc:	26c41000 	strbcs	r1, [r4], r0
    6bc0:	00011000 	andeq	r1, r1, r0
    6bc4:	0026c450 	eoreq	ip, r6, r0, asr r4
    6bc8:	0026d010 	eoreq	sp, r6, r0, lsl r0
    6bcc:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    6bd0:	100026d0 	ldrdne	r2, [r0], -r0
    6bd4:	100026d3 	ldrdne	r2, [r0], -r3
    6bd8:	d3500001 	cmple	r0, #1
    6bdc:	d6100026 	ldrle	r0, [r0], -r6, lsr #32
    6be0:	01100026 	tsteq	r0, r6, lsr #32
    6be4:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    6bf4:	00020000 	andeq	r0, r2, r0
    6bf8:	0000007d 	andeq	r0, r0, sp, ror r0
    6bfc:	00000000 	andeq	r0, r0, r0
    6c00:	00020000 	andeq	r0, r2, r0
    6c04:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    6c18:	00010000 	andeq	r0, r1, r0
    6c1c:	00000050 	andeq	r0, r0, r0, asr r0
    6c20:	00000000 	andeq	r0, r0, r0
    6c24:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    6c38:	00010000 	andeq	r0, r1, r0
    6c3c:	00000053 	andeq	r0, r0, r3, asr r0
    6c40:	00000000 	andeq	r0, r0, r0
    6c44:	00000100 	andeq	r0, r0, r0, lsl #2
    6c48:	00000000 	andeq	r0, r0, r0
    6c4c:	02000000 	andeq	r0, r0, #0
    6c50:	00307300 	eorseq	r7, r0, r0, lsl #6
	...
    6c64:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    6c7c:	00500001 	subseq	r0, r0, r1
    6c80:	00000000 	andeq	r0, r0, r0
    6c84:	01000000 	mrseq	r0, (UNDEF: 0)
    6c88:	00005000 	andeq	r5, r0, r0
    6c8c:	00000000 	andeq	r0, r0, r0
    6c90:	00020000 	andeq	r0, r2, r0
    6c94:	00010100 	andeq	r0, r1, r0, lsl #2
	...
    6ca0:	00020000 	andeq	r0, r2, r0
    6ca4:	00009f30 	andeq	r9, r0, r0, lsr pc
    6ca8:	00000000 	andeq	r0, r0, r0
    6cac:	00010000 	andeq	r0, r1, r0
    6cb0:	00000053 	andeq	r0, r0, r3, asr r0
    6cb4:	00000000 	andeq	r0, r0, r0
    6cb8:	73000500 	movwvc	r0, #1280	; 0x500
    6cbc:	9f253200 	svcls	0x00253200
	...
    6cc8:	00500001 	subseq	r0, r0, r1
    6ccc:	00000000 	andeq	r0, r0, r0
    6cd0:	d8000000 	stmdale	r0, {}	; <UNPREDICTABLE>
    6cd4:	e0100026 	ands	r0, r0, r6, lsr #32
    6cd8:	02100026 	andseq	r0, r0, #38	; 0x26
    6cdc:	e0007d00 	and	r7, r0, r0, lsl #26
    6ce0:	14100026 	ldrne	r0, [r0], #-38	; 0xffffffda
    6ce4:	02100027 	andseq	r0, r0, #39	; 0x27
    6ce8:	14087d00 	strne	r7, [r8], #-3328	; 0xfffff300
    6cec:	24100027 	ldrcs	r0, [r0], #-39	; 0xffffffd9
    6cf0:	02100027 	andseq	r0, r0, #39	; 0x27
    6cf4:	00007d00 	andeq	r7, r0, r0, lsl #26
	...
    6d00:	0026ea00 	eoreq	lr, r6, r0, lsl #20
    6d04:	00271410 	eoreq	r1, r7, r0, lsl r4
    6d08:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
	...
    6d14:	1000252c 	andne	r2, r0, ip, lsr #10
    6d18:	1000252e 	andne	r2, r0, lr, lsr #10
    6d1c:	007d0002 	rsbseq	r0, sp, r2
    6d20:	1000252e 	andne	r2, r0, lr, lsr #10
    6d24:	10002594 	mulne	r0, r4, r5
    6d28:	107d0002 	rsbsne	r0, sp, r2
	...
    6d34:	00000002 	andeq	r0, r0, r2
    6d38:	1000252e 	andne	r2, r0, lr, lsr #10
    6d3c:	10002532 	andne	r2, r0, r2, lsr r5
    6d40:	9f300002 	svcls	0x00300002
    6d44:	10002532 	andne	r2, r0, r2, lsr r5
    6d48:	10002550 	andne	r2, r0, r0, asr r5
    6d4c:	00540001 	subseq	r0, r4, r1
    6d50:	00000000 	andeq	r0, r0, r0
    6d54:	03000000 	movweq	r0, #0
    6d58:	c4000000 	strgt	r0, [r0], #-0
    6d5c:	f610002d 			; <UNDEFINED> instruction: 0xf610002d
    6d60:	0210002d 	andseq	r0, r0, #45	; 0x2d
    6d64:	f69f3100 			; <UNDEFINED> instruction: 0xf69f3100
    6d68:	0c10002d 	ldceq	0, cr0, [r0], {45}	; 0x2d
    6d6c:	0110002e 	tsteq	r0, lr, lsr #32
    6d70:	00005000 	andeq	r5, r0, r0
    6d74:	00000000 	andeq	r0, r0, r0
    6d78:	2b2c0000 	blcs	b06d80 <__RAM_SIZE+0xa06d80>
    6d7c:	2b2e1000 	blcs	b8ad84 <__RAM_SIZE+0xa8ad84>
    6d80:	00021000 	andeq	r1, r2, r0
    6d84:	2b2e007d 	blcs	b86f80 <__RAM_SIZE+0xa86f80>
    6d88:	2b641000 	blcs	190ad90 <__RAM_SIZE+0x180ad90>
    6d8c:	00021000 	andeq	r1, r2, r0
    6d90:	0000087d 	andeq	r0, r0, sp, ror r8
    6d94:	00000000 	andeq	r0, r0, r0
    6d98:	00010000 	andeq	r0, r1, r0
    6d9c:	2b2c0000 	blcs	b06da4 <__RAM_SIZE+0xa06da4>
    6da0:	2b301000 	blcs	c0ada8 <__RAM_SIZE+0xb0ada8>
    6da4:	00011000 	andeq	r1, r1, r0
    6da8:	002b3050 	eoreq	r3, fp, r0, asr r0
    6dac:	002b6410 	eoreq	r6, fp, r0, lsl r4
    6db0:	f3000410 	vqshl.u8	d0, d0, d0
    6db4:	009f5001 	addseq	r5, pc, r1
	...
    6dc4:	002b3400 	eoreq	r3, fp, r0, lsl #8
    6dc8:	002b3810 	eoreq	r3, fp, r0, lsl r8
    6dcc:	50000110 	andpl	r0, r0, r0, lsl r1
    6dd0:	10002b4a 	andne	r2, r0, sl, asr #22
    6dd4:	10002b4d 	andne	r2, r0, sp, asr #22
    6dd8:	52500001 	subspl	r0, r0, #1
    6ddc:	5910002b 	ldmdbpl	r0, {r0, r1, r3, r5}
    6de0:	0110002b 	tsteq	r0, fp, lsr #32
    6de4:	00005000 	andeq	r5, r0, r0
    6de8:	00000000 	andeq	r0, r0, r0
    6dec:	2d3c0000 	ldccs	0, cr0, [ip, #-0]
    6df0:	2d3e1000 	ldccs	0, cr1, [lr, #-0]
    6df4:	00021000 	andeq	r1, r2, r0
    6df8:	2d3e007d 	ldccs	0, cr0, [lr, #-500]!	; 0xfffffe0c
    6dfc:	2db81000 	ldccs	0, cr1, [r8]
    6e00:	00021000 	andeq	r1, r2, r0
    6e04:	0000187d 	andeq	r1, r0, sp, ror r8
	...
    6e24:	10002d3c 	andne	r2, r0, ip, lsr sp
    6e28:	10002d45 	andne	r2, r0, r5, asr #26
    6e2c:	45500001 	ldrbmi	r0, [r0, #-1]
    6e30:	6410002d 	ldrvs	r0, [r0], #-45	; 0xffffffd3
    6e34:	0110002d 	tsteq	r0, sp, lsr #32
    6e38:	2d645400 	cfstrdcs	mvd5, [r4, #-0]
    6e3c:	2d6c1000 	stclcs	0, cr1, [ip, #-0]
    6e40:	00041000 	andeq	r1, r4, r0
    6e44:	9f5001f3 	svcls	0x005001f3
    6e48:	10002d6c 	andne	r2, r0, ip, ror #26
    6e4c:	10002d88 	andne	r2, r0, r8, lsl #27
    6e50:	88540001 	ldmdahi	r4, {r0}^
    6e54:	8a10002d 	bhi	406f10 <__RAM_SIZE+0x306f10>
    6e58:	0410002d 	ldreq	r0, [r0], #-45	; 0xffffffd3
    6e5c:	5001f300 	andpl	pc, r1, r0, lsl #6
    6e60:	002d8a9f 	mlaeq	sp, pc, sl, r8	; <UNPREDICTABLE>
    6e64:	002d9410 	eoreq	r9, sp, r0, lsl r4
    6e68:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    6e6c:	10002d94 	mulne	r0, r4, sp
    6e70:	10002d96 	mulne	r0, r6, sp
    6e74:	01f30004 	mvnseq	r0, r4
    6e78:	2d969f50 	ldccs	15, cr9, [r6, #320]	; 0x140
    6e7c:	2da41000 	stccs	0, cr1, [r4]
    6e80:	00011000 	andeq	r1, r1, r0
    6e84:	002da454 	eoreq	sl, sp, r4, asr r4
    6e88:	002da610 	eoreq	sl, sp, r0, lsl r6
    6e8c:	f3000410 	vqshl.u8	d0, d0, d0
    6e90:	a69f5001 	ldrge	r5, [pc], r1
    6e94:	a810002d 	ldmdage	r0, {r0, r2, r3, r5}
    6e98:	0110002d 	tsteq	r0, sp, lsr #32
    6e9c:	2da85400 	cfstrscs	mvf5, [r8]
    6ea0:	2db81000 	ldccs	0, cr1, [r8]
    6ea4:	00041000 	andeq	r1, r4, r0
    6ea8:	9f5001f3 	svcls	0x005001f3
	...
    6eb8:	10002d3c 	andne	r2, r0, ip, lsr sp
    6ebc:	10002d45 	andne	r2, r0, r5, asr #26
    6ec0:	45510001 	ldrbmi	r0, [r1, #-1]
    6ec4:	b810002d 	ldmdalt	r0, {r0, r2, r3, r5}
    6ec8:	0110002d 	tsteq	r0, sp, lsr #32
    6ecc:	00005500 	andeq	r5, r0, r0, lsl #10
    6ed0:	00000000 	andeq	r0, r0, r0
    6ed4:	00010000 	andeq	r0, r1, r0
    6ed8:	00010000 	andeq	r0, r1, r0
    6edc:	00010001 	andeq	r0, r1, r1
    6ee0:	10002d62 	andne	r2, r0, r2, ror #26
    6ee4:	10002d64 	andne	r2, r0, r4, ror #26
    6ee8:	9f310002 	svcls	0x00310002
    6eec:	10002d64 	andne	r2, r0, r4, ror #26
    6ef0:	10002d6c 	andne	r2, r0, ip, ror #26
    6ef4:	82540001 	subshi	r0, r4, #1
    6ef8:	8a10002d 	bhi	406fb4 <__RAM_SIZE+0x306fb4>
    6efc:	0210002d 	andseq	r0, r0, #45	; 0x2d
    6f00:	929f3100 	addsls	r3, pc, #0, 2
    6f04:	9610002d 	ldrls	r0, [r0], -sp, lsr #32
    6f08:	0210002d 	andseq	r0, r0, #45	; 0x2d
    6f0c:	a29f3100 	addsge	r3, pc, #0, 2
    6f10:	a610002d 	ldrge	r0, [r0], -sp, lsr #32
    6f14:	0210002d 	andseq	r0, r0, #45	; 0x2d
    6f18:	009f3000 	addseq	r3, pc, r0
	...
    6f28:	002d4a00 	eoreq	r4, sp, r0, lsl #20
    6f2c:	002d5e10 	eoreq	r5, sp, r0, lsl lr
    6f30:	52000110 	andpl	r0, r0, #16, 2
    6f34:	10002d6c 	andne	r2, r0, ip, ror #26
    6f38:	10002da1 	andne	r2, r0, r1, lsr #27
    6f3c:	a6520001 	ldrbge	r0, [r2], -r1
    6f40:	b810002d 	ldmdalt	r0, {r0, r2, r3, r5}
    6f44:	0110002d 	tsteq	r0, sp, lsr #32
    6f48:	00005200 	andeq	r5, r0, r0, lsl #4
	...
    6f58:	10002d4e 	andne	r2, r0, lr, asr #26
    6f5c:	10002d64 	andne	r2, r0, r4, ror #26
    6f60:	6c500001 	mrrcvs	0, 0, r0, r0, cr1	; <UNPREDICTABLE>
    6f64:	9e10002d 	cdpls	0, 1, cr0, cr0, cr13, {1}
    6f68:	0110002d 	tsteq	r0, sp, lsr #32
    6f6c:	2da65000 	stccs	0, cr5, [r6]
    6f70:	2db81000 	ldccs	0, cr1, [r8]
    6f74:	00011000 	andeq	r1, r1, r0
    6f78:	00000050 	andeq	r0, r0, r0, asr r0
	...
    6f88:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    6f94:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    6f98:	00000008 	andeq	r0, r0, r8
	...
    6fac:	01000000 	mrseq	r0, (UNDEF: 0)
    6fb0:	00005000 	andeq	r5, r0, r0
    6fb4:	00000000 	andeq	r0, r0, r0
    6fb8:	00010000 	andeq	r0, r1, r0
    6fbc:	00000054 	andeq	r0, r0, r4, asr r0
    6fc0:	00000000 	andeq	r0, r0, r0
    6fc4:	f3000400 	vshl.u8	d0, d0, d0
    6fc8:	009f5001 	addseq	r5, pc, r1
	...
    6fd8:	02000000 	andeq	r0, r0, #0
    6fdc:	00007d00 	andeq	r7, r0, r0, lsl #26
    6fe0:	00000000 	andeq	r0, r0, r0
    6fe4:	02000000 	andeq	r0, r0, #0
    6fe8:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    7000:	01000000 	mrseq	r0, (UNDEF: 0)
    7004:	00005000 	andeq	r5, r0, r0
    7008:	00000000 	andeq	r0, r0, r0
    700c:	00040000 	andeq	r0, r4, r0
    7010:	9f5001f3 	svcls	0x005001f3
	...
    701c:	00500001 	subseq	r0, r0, r1
    7020:	00000000 	andeq	r0, r0, r0
    7024:	04000000 	streq	r0, [r0], #-0
    7028:	5001f300 	andpl	pc, r1, r0, lsl #6
    702c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    7040:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    704c:	01f30004 	mvnseq	r0, r4
    7050:	00009f51 	andeq	r9, r0, r1, asr pc
	...
    7064:	00540001 	subseq	r0, r4, r1
	...
    7078:	01000000 	mrseq	r0, (UNDEF: 0)
    707c:	00005300 	andeq	r5, r0, r0, lsl #6
    7080:	00000000 	andeq	r0, r0, r0
    7084:	00010000 	andeq	r0, r1, r0
    7088:	00000053 	andeq	r0, r0, r3, asr r0
	...
    709c:	53000100 	movwpl	r0, #256	; 0x100
	...
    70a8:	00530001 	subseq	r0, r3, r1
	...
    70bc:	53000100 	movwpl	r0, #256	; 0x100
	...
    70c8:	10002c40 	andne	r2, r0, r0, asr #24
    70cc:	10002c42 	andne	r2, r0, r2, asr #24
    70d0:	007d0002 	rsbseq	r0, sp, r2
    70d4:	10002c42 	andne	r2, r0, r2, asr #24
    70d8:	10002d24 	andne	r2, r0, r4, lsr #26
    70dc:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    70f0:	10002c40 	andne	r2, r0, r0, asr #24
    70f4:	10002caa 	andne	r2, r0, sl, lsr #25
    70f8:	aa500001 	bge	1407104 <__RAM_SIZE+0x1307104>
    70fc:	e210002c 	ands	r0, r0, #44	; 0x2c
    7100:	0410002c 	ldreq	r0, [r0], #-44	; 0xffffffd4
    7104:	5001f300 	andpl	pc, r1, r0, lsl #6
    7108:	002ce29f 	mlaeq	ip, pc, r2, lr	; <UNPREDICTABLE>
    710c:	002cf610 	eoreq	pc, ip, r0, lsl r6	; <UNPREDICTABLE>
    7110:	50000110 	andpl	r0, r0, r0, lsl r1
    7114:	10002cf6 	strdne	r2, [r0], -r6
    7118:	10002d24 	andne	r2, r0, r4, lsr #26
    711c:	01f30004 	mvnseq	r0, r4
    7120:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    712c:	10002c46 	andne	r2, r0, r6, asr #24
    7130:	10002d24 	andne	r2, r0, r4, lsr #26
    7134:	00540001 	subseq	r0, r4, r1
    7138:	00000000 	andeq	r0, r0, r0
    713c:	01000000 	mrseq	r0, (UNDEF: 0)
    7140:	da000000 	ble	7148 <__HEAP_SIZE+0x6148>
    7144:	e010002c 	ands	r0, r0, ip, lsr #32
    7148:	0210002c 	andseq	r0, r0, #44	; 0x2c
    714c:	089f3100 	ldmeq	pc, {r8, ip, sp}	; <UNPREDICTABLE>
    7150:	2410002d 	ldrcs	r0, [r0], #-45	; 0xffffffd3
    7154:	0210002d 	andseq	r0, r0, #45	; 0x2d
    7158:	009f3000 	addseq	r3, pc, r0
	...
    7164:	48000000 	stmdami	r0, {}	; <UNPREDICTABLE>
    7168:	6810002c 	ldmdavs	r0, {r2, r3, r5}
    716c:	0110002c 	tsteq	r0, ip, lsr #32
    7170:	2ce25300 	stclcs	3, cr5, [r2]
    7174:	2ce81000 	stclcs	0, cr1, [r8]
    7178:	00011000 	andeq	r1, r1, r0
    717c:	00000053 	andeq	r0, r0, r3, asr r0
	...
    7188:	002c7000 	eoreq	r7, ip, r0
    718c:	002c8e10 	eoreq	r8, ip, r0, lsl lr
    7190:	53000110 	movwpl	r0, #272	; 0x110
    7194:	10002ce8 	andne	r2, r0, r8, ror #25
    7198:	10002cee 	andne	r2, r0, lr, ror #25
    719c:	00530001 	subseq	r0, r3, r1
	...
    71a8:	002ca600 	eoreq	sl, ip, r0, lsl #12
    71ac:	002cb210 	eoreq	fp, ip, r0, lsl r2
    71b0:	53000110 	movwpl	r0, #272	; 0x110
	...
    71bc:	2cf20000 	ldclcs	0, cr0, [r2]
    71c0:	2d001000 	stccs	0, cr1, [r0, #-0]
    71c4:	00011000 	andeq	r1, r1, r0
    71c8:	00000052 	andeq	r0, r0, r2, asr r0
    71cc:	00000000 	andeq	r0, r0, r0
    71d0:	002c0400 	eoreq	r0, ip, r0, lsl #8
    71d4:	002c0610 	eoreq	r0, ip, r0, lsl r6
    71d8:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    71dc:	002c0600 	eoreq	r0, ip, r0, lsl #12
    71e0:	002c4010 	eoreq	r4, ip, r0, lsl r0
    71e4:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    71e8:	00000010 	andeq	r0, r0, r0, lsl r0
	...
    71f4:	04000000 	streq	r0, [r0], #-0
    71f8:	0a10002c 	beq	4072b0 <__RAM_SIZE+0x3072b0>
    71fc:	0110002c 	tsteq	r0, ip, lsr #32
    7200:	2c0a5000 	stccs	0, cr5, [sl], {-0}
    7204:	2c391000 	ldccs	0, cr1, [r9], #-0
    7208:	00011000 	andeq	r1, r1, r0
    720c:	002c3953 	eoreq	r3, ip, r3, asr r9
    7210:	002c4010 	eoreq	r4, ip, r0, lsl r0
    7214:	f3000410 	vqshl.u8	d0, d0, d0
    7218:	009f5001 	addseq	r5, pc, r1
	...
    7224:	04000000 	streq	r0, [r0], #-0
    7228:	0c10002c 	ldceq	0, cr0, [r0], {44}	; 0x2c
    722c:	0110002c 	tsteq	r0, ip, lsr #32
    7230:	2c0c5100 	stfcss	f5, [ip], {-0}
    7234:	2c391000 	ldccs	0, cr1, [r9], #-0
    7238:	00011000 	andeq	r1, r1, r0
    723c:	00000050 	andeq	r0, r0, r0, asr r0
	...
    7248:	002c0400 	eoreq	r0, ip, r0, lsl #8
    724c:	002c3910 	eoreq	r3, ip, r0, lsl r9
    7250:	52000110 	andpl	r0, r0, #16, 2
    7254:	10002c39 	andne	r2, r0, r9, lsr ip
    7258:	10002c40 	andne	r2, r0, r0, asr #24
    725c:	01f30004 	mvnseq	r0, r4
    7260:	00009f52 	andeq	r9, r0, r2, asr pc
	...
    726c:	10002c0c 	andne	r2, r0, ip, lsl #24
    7270:	10002c26 	andne	r2, r0, r6, lsr #24
    7274:	00510001 	subseq	r0, r1, r1
	...
    7284:	02000000 	andeq	r0, r0, #0
    7288:	00007d00 	andeq	r7, r0, r0, lsl #26
    728c:	00000000 	andeq	r0, r0, r0
    7290:	02000000 	andeq	r0, r0, #0
    7294:	00107d00 	andseq	r7, r0, r0, lsl #26
	...
    72ac:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    72b8:	00530001 	subseq	r0, r3, r1
    72bc:	00000000 	andeq	r0, r0, r0
    72c0:	04000000 	streq	r0, [r0], #-0
    72c4:	5001f300 	andpl	pc, r1, r0, lsl #6
    72c8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    72dc:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    72e8:	01f30004 	mvnseq	r0, r4
    72ec:	00009f51 	andeq	r9, r0, r1, asr pc
	...
    7300:	00010000 	andeq	r0, r1, r0
    7304:	00000052 	andeq	r0, r0, r2, asr r0
    7308:	00000000 	andeq	r0, r0, r0
    730c:	f3000400 	vshl.u8	d0, d0, d0
    7310:	009f5201 	addseq	r5, pc, r1, lsl #4
	...
    7324:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    7330:	10002be8 	andne	r2, r0, r8, ror #23
    7334:	10002bea 	andne	r2, r0, sl, ror #23
    7338:	007d0002 	rsbseq	r0, sp, r2
    733c:	10002bea 	andne	r2, r0, sl, ror #23
    7340:	10002c04 	andne	r2, r0, r4, lsl #24
    7344:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    7354:	10002be8 	andne	r2, r0, r8, ror #23
    7358:	10002bf5 	strdne	r2, [r0], -r5
    735c:	f5500001 			; <UNDEFINED> instruction: 0xf5500001
    7360:	0410002b 	ldreq	r0, [r0], #-43	; 0xffffffd5
    7364:	0410002c 	ldreq	r0, [r0], #-44	; 0xffffffd4
    7368:	5001f300 	andpl	pc, r1, r0, lsl #6
    736c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    7378:	e8000000 	stmda	r0, {}	; <UNPREDICTABLE>
    737c:	f010002b 			; <UNDEFINED> instruction: 0xf010002b
    7380:	0110002b 	tsteq	r0, fp, lsr #32
    7384:	2bf05100 	blcs	ffc1b78c <__StackTop+0xc7b1b78c>
    7388:	2c001000 	stccs	0, cr1, [r0], {-0}
    738c:	00011000 	andeq	r1, r1, r0
    7390:	002c0054 	eoreq	r0, ip, r4, asr r0
    7394:	002c0410 	eoreq	r0, ip, r0, lsl r4
    7398:	f3000410 	vqshl.u8	d0, d0, d0
    739c:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
    73ac:	002b7c00 	eoreq	r7, fp, r0, lsl #24
    73b0:	002bc410 	eoreq	ip, fp, r0, lsl r4
    73b4:	53000110 	movwpl	r0, #272	; 0x110
    73b8:	10002bc4 	andne	r2, r0, r4, asr #23
    73bc:	10002bc6 	andne	r2, r0, r6, asr #23
    73c0:	58030005 	stmdapl	r3, {r0, r2}
    73c4:	c638008a 	ldrtgt	r0, [r8], -sl, lsl #1
    73c8:	e810002b 	ldmda	r0, {r0, r1, r3, r5}
    73cc:	0110002b 	tsteq	r0, fp, lsr #32
    73d0:	00005300 	andeq	r5, r0, r0, lsl #6
    73d4:	00000000 	andeq	r0, r0, r0
    73d8:	00020000 	andeq	r0, r2, r0
    73dc:	00000000 	andeq	r0, r0, r0
    73e0:	10002b8e 	andne	r2, r0, lr, lsl #23
    73e4:	10002bc4 	andne	r2, r0, r4, asr #23
    73e8:	0073000b 	rsbseq	r0, r3, fp
    73ec:	bc031e4c 	stclt	14, cr1, [r3], {76}	; 0x4c
    73f0:	22380085 	eorscs	r0, r8, #133	; 0x85
    73f4:	002bc49f 	mlaeq	fp, pc, r4, ip	; <UNPREDICTABLE>
    73f8:	002bc610 	eoreq	ip, fp, r0, lsl r6
    73fc:	03000f10 	movweq	r0, #3856	; 0xf10
    7400:	38008a58 	stmdacc	r0, {r3, r4, r6, r9, fp, pc}
    7404:	031e4c06 	tsteq	lr, #1536	; 0x600
    7408:	380085bc 	stmdacc	r0, {r2, r3, r4, r5, r7, r8, sl, pc}
    740c:	2bc69f22 	blcs	ff1af09c <__StackTop+0xc70af09c>
    7410:	2be81000 	blcs	ffa0b418 <__StackTop+0xc790b418>
    7414:	000b1000 	andeq	r1, fp, r0
    7418:	1e4c0073 	mcrne	0, 2, r0, cr12, cr3, {3}
    741c:	0085bc03 	addeq	fp, r5, r3, lsl #24
    7420:	009f2238 	addseq	r2, pc, r8, lsr r2	; <UNPREDICTABLE>
	...
    7430:	02000000 	andeq	r0, r0, #0
    7434:	00007d00 	andeq	r7, r0, r0, lsl #26
    7438:	00000000 	andeq	r0, r0, r0
    743c:	02000000 	andeq	r0, r0, #0
    7440:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    7454:	01000000 	mrseq	r0, (UNDEF: 0)
    7458:	00005000 	andeq	r5, r0, r0
    745c:	00000000 	andeq	r0, r0, r0
    7460:	00010000 	andeq	r0, r1, r0
    7464:	00000050 	andeq	r0, r0, r0, asr r0
	...
    7478:	01000000 	mrseq	r0, (UNDEF: 0)
    747c:	00005100 	andeq	r5, r0, r0, lsl #2
    7480:	00000000 	andeq	r0, r0, r0
    7484:	00040000 	andeq	r0, r4, r0
    7488:	9f5101f3 	svcls	0x005101f3
	...
    7494:	00510001 	subseq	r0, r1, r1
	...
    74a8:	01000000 	mrseq	r0, (UNDEF: 0)
    74ac:	00005300 	andeq	r5, r0, r0, lsl #6
    74b0:	00000000 	andeq	r0, r0, r0
    74b4:	00010000 	andeq	r0, r1, r0
    74b8:	00000053 	andeq	r0, r0, r3, asr r0
	...
    74c8:	02000000 	andeq	r0, r0, #0
    74cc:	009f3000 	addseq	r3, pc, r0
	...
    74dc:	02000000 	andeq	r0, r0, #0
    74e0:	00007d00 	andeq	r7, r0, r0, lsl #26
    74e4:	00000000 	andeq	r0, r0, r0
    74e8:	02000000 	andeq	r0, r0, #0
    74ec:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    7500:	01000000 	mrseq	r0, (UNDEF: 0)
    7504:	00005000 	andeq	r5, r0, r0
    7508:	00000000 	andeq	r0, r0, r0
    750c:	00010000 	andeq	r0, r1, r0
    7510:	00000050 	andeq	r0, r0, r0, asr r0
	...
    7520:	01000000 	mrseq	r0, (UNDEF: 0)
    7524:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    7538:	00540001 	subseq	r0, r4, r1
	...
    754c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    7560:	007d0002 	rsbseq	r0, sp, r2
	...
    756c:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    7584:	00500001 	subseq	r0, r0, r1
    7588:	00000000 	andeq	r0, r0, r0
    758c:	01000000 	mrseq	r0, (UNDEF: 0)
    7590:	00005000 	andeq	r5, r0, r0
	...
    75a4:	00540001 	subseq	r0, r4, r1
	...
    75b8:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    75cc:	007d0002 	rsbseq	r0, sp, r2
	...
    75d8:	107d0002 	rsbsne	r0, sp, r2
	...
    75f0:	00500001 	subseq	r0, r0, r1
    75f4:	00000000 	andeq	r0, r0, r0
    75f8:	01000000 	mrseq	r0, (UNDEF: 0)
    75fc:	00005000 	andeq	r5, r0, r0
	...
    7614:	00510001 	subseq	r0, r1, r1
    7618:	00000000 	andeq	r0, r0, r0
    761c:	01000000 	mrseq	r0, (UNDEF: 0)
    7620:	00005400 	andeq	r5, r0, r0, lsl #8
    7624:	00000000 	andeq	r0, r0, r0
    7628:	00010000 	andeq	r0, r1, r0
    762c:	00000051 	andeq	r0, r0, r1, asr r0
	...
    7640:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    764c:	00550001 	subseq	r0, r5, r1
    7650:	00000000 	andeq	r0, r0, r0
    7654:	7c000000 	stcvc	0, cr0, [r0], {-0}
    7658:	88100028 	ldmdahi	r0, {r3, r5}
    765c:	02100028 	andseq	r0, r0, #40	; 0x28
    7660:	88007d00 	stmdahi	r0, {r8, sl, fp, ip, sp, lr}
    7664:	a0100028 	andsge	r0, r0, r8, lsr #32
    7668:	02100029 	andseq	r0, r0, #41	; 0x29
    766c:	a0107d00 	andsge	r7, r0, r0, lsl #26
    7670:	ac100029 	ldcge	0, cr0, [r0], {41}	; 0x29
    7674:	02100029 	andseq	r0, r0, #41	; 0x29
    7678:	ac007d00 	stcge	13, cr7, [r0], {-0}
    767c:	dc100029 	ldcle	0, cr0, [r0], {41}	; 0x29
    7680:	02100029 	andseq	r0, r0, #41	; 0x29
    7684:	00107d00 	andseq	r7, r0, r0, lsl #26
	...
    7694:	0028e400 	eoreq	lr, r8, r0, lsl #8
    7698:	0028e610 	eoreq	lr, r8, r0, lsl r6
    769c:	53000110 	movwpl	r0, #272	; 0x110
    76a0:	100028ea 	andne	r2, r0, sl, ror #17
    76a4:	10002940 	andne	r2, r0, r0, asr #18
    76a8:	5c530001 	mrrcpl	0, 0, r0, r3, cr1
    76ac:	a0100029 	andsge	r0, r0, r9, lsr #32
    76b0:	01100029 	tsteq	r0, r9, lsr #32
    76b4:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    76c4:	100028e4 	andne	r2, r0, r4, ror #17
    76c8:	100028ea 	andne	r2, r0, sl, ror #17
    76cc:	5e520001 	cdppl	0, 5, cr0, cr2, cr1, {0}
    76d0:	64100029 	ldrvs	r0, [r0], #-41	; 0xffffffd7
    76d4:	01100029 	tsteq	r0, r9, lsr #32
    76d8:	29645200 	stmdbcs	r4!, {r9, ip, lr}^
    76dc:	296a1000 	stmdbcs	sl!, {ip}^
    76e0:	00021000 	andeq	r1, r2, r0
    76e4:	00000473 	andeq	r0, r0, r3, ror r4
    76e8:	00000000 	andeq	r0, r0, r0
    76ec:	00040000 	andeq	r0, r4, r0
	...
    76fc:	1000287c 	andne	r2, r0, ip, ror r8
    7700:	1000289c 	mulne	r0, ip, r8
    7704:	9f300002 	svcls	0x00300002
    7708:	1000289c 	mulne	r0, ip, r8
    770c:	100028ba 			; <UNDEFINED> instruction: 0x100028ba
    7710:	bc500001 	mrrclt	0, 0, r0, r0, cr1	; <UNPREDICTABLE>
    7714:	da100028 	ble	4077bc <__RAM_SIZE+0x3077bc>
    7718:	02100028 	andseq	r0, r0, #40	; 0x28
    771c:	da9f3000 	ble	fe7d3724 <__StackTop+0xc66d3724>
    7720:	a0100028 	andsge	r0, r0, r8, lsr #32
    7724:	01100029 	tsteq	r0, r9, lsr #32
    7728:	29a05000 	stmibcs	r0!, {ip, lr}
    772c:	29ac1000 	stmibcs	ip!, {ip}
    7730:	00021000 	andeq	r1, r2, r0
    7734:	29ac9f30 	stmibcs	ip!, {r4, r5, r8, r9, sl, fp, ip, pc}
    7738:	29ae1000 	stmibcs	lr!, {ip}
    773c:	00011000 	andeq	r1, r1, r0
    7740:	0029ae50 	eoreq	sl, r9, r0, asr lr
    7744:	0029dc10 	eoreq	sp, r9, r0, lsl ip
    7748:	31000210 	tstcc	r0, r0, lsl r2
    774c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    7758:	00288e00 	eoreq	r8, r8, r0, lsl #28
    775c:	0029a010 	eoreq	sl, r9, r0, lsl r0
    7760:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    7764:	100029ac 	andne	r2, r0, ip, lsr #19
    7768:	100029dc 	ldrdne	r2, [r0], -ip
    776c:	00540001 	subseq	r0, r4, r1
	...
    7778:	0028c000 	eoreq	ip, r8, r0
    777c:	0028d310 	eoreq	sp, r8, r0, lsl r3
    7780:	51000110 	tstpl	r0, r0, lsl r1
	...
    7790:	100028ea 	andne	r2, r0, sl, ror #17
    7794:	100028f0 	strdne	r2, [r0], -r0
    7798:	64520001 	ldrbvs	r0, [r2], #-1
    779c:	82100029 	andshi	r0, r0, #41	; 0x29
    77a0:	01100029 	tsteq	r0, r9, lsr #32
    77a4:	00005200 	andeq	r5, r0, r0, lsl #4
    77a8:	00000000 	andeq	r0, r0, r0
    77ac:	01000000 	mrseq	r0, (UNDEF: 0)
    77b0:	28f00002 	ldmcs	r0!, {r1}^
    77b4:	28fa1000 	ldmcs	sl!, {ip}^
    77b8:	00011000 	andeq	r1, r1, r0
    77bc:	00298652 	eoreq	r8, r9, r2, asr r6
    77c0:	0029a010 	eoreq	sl, r9, r0, lsl r0
    77c4:	52000110 	andpl	r0, r0, #16, 2
	...
    77d0:	29180000 	ldmdbcs	r8, {}	; <UNPREDICTABLE>
    77d4:	29241000 	stmdbcs	r4!, {ip}
    77d8:	00011000 	andeq	r1, r1, r0
    77dc:	00000052 	andeq	r0, r0, r2, asr r0
	...
    77ec:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    77f8:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    77fc:	00000010 	andeq	r0, r0, r0, lsl r0
	...
    7818:	01000000 	mrseq	r0, (UNDEF: 0)
    781c:	00005000 	andeq	r5, r0, r0
    7820:	00000000 	andeq	r0, r0, r0
    7824:	00010000 	andeq	r0, r1, r0
    7828:	00000054 	andeq	r0, r0, r4, asr r0
    782c:	00000000 	andeq	r0, r0, r0
    7830:	f3000400 	vshl.u8	d0, d0, d0
    7834:	009f5001 	addseq	r5, pc, r1
    7838:	00000000 	andeq	r0, r0, r0
    783c:	01000000 	mrseq	r0, (UNDEF: 0)
    7840:	00005400 	andeq	r5, r0, r0, lsl #8
    7844:	00000000 	andeq	r0, r0, r0
    7848:	00030000 	andeq	r0, r3, r0
    784c:	009f7c75 	addseq	r7, pc, r5, ror ip	; <UNPREDICTABLE>
    7850:	00000000 	andeq	r0, r0, r0
    7854:	01000000 	mrseq	r0, (UNDEF: 0)
    7858:	00005400 	andeq	r5, r0, r0, lsl #8
    785c:	00000000 	andeq	r0, r0, r0
    7860:	00030000 	andeq	r0, r3, r0
    7864:	009f7c75 	addseq	r7, pc, r5, ror ip	; <UNPREDICTABLE>
    7868:	00000000 	andeq	r0, r0, r0
    786c:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    7884:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    7890:	00540001 	subseq	r0, r4, r1
    7894:	00000000 	andeq	r0, r0, r0
    7898:	04000000 	streq	r0, [r0], #-0
    789c:	5001f300 	andpl	pc, r1, r0, lsl #6
    78a0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    78a4:	00000000 	andeq	r0, r0, r0
    78a8:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    78b4:	7c750003 	ldclvc	0, cr0, [r5], #-12
    78b8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    78bc:	00000000 	andeq	r0, r0, r0
    78c0:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    78cc:	7c750003 	ldclvc	0, cr0, [r5], #-12
    78d0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    78d4:	00000000 	andeq	r0, r0, r0
    78d8:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    78e4:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    78f0:	9f310002 	svcls	0x00310002
	...
    7904:	00010000 	andeq	r0, r1, r0
    7908:	00000053 	andeq	r0, r0, r3, asr r0
	...
    7918:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    7924:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    7928:	00000008 	andeq	r0, r0, r8
	...
    793c:	01000000 	mrseq	r0, (UNDEF: 0)
    7940:	00005000 	andeq	r5, r0, r0
    7944:	00000000 	andeq	r0, r0, r0
    7948:	00010000 	andeq	r0, r1, r0
    794c:	00000054 	andeq	r0, r0, r4, asr r0
    7950:	00000000 	andeq	r0, r0, r0
    7954:	f3000400 	vshl.u8	d0, d0, d0
    7958:	009f5001 	addseq	r5, pc, r1
	...
    796c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    7978:	10002840 	andne	r2, r0, r0, asr #16
    797c:	10002842 	andne	r2, r0, r2, asr #16
    7980:	007d0002 	rsbseq	r0, sp, r2
    7984:	10002842 	andne	r2, r0, r2, asr #16
    7988:	1000287c 	andne	r2, r0, ip, ror r8
    798c:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    79a0:	10002840 	andne	r2, r0, r0, asr #16
    79a4:	10002852 	andne	r2, r0, r2, asr r8
    79a8:	52500001 	subspl	r0, r0, #1
    79ac:	58100028 	ldmdapl	r0, {r3, r5}
    79b0:	01100028 	tsteq	r0, r8, lsr #32
    79b4:	285c5400 	ldmdacs	ip, {sl, ip, lr}^
    79b8:	285f1000 	ldmdacs	pc, {ip}^	; <UNPREDICTABLE>
    79bc:	00011000 	andeq	r1, r1, r0
    79c0:	00285f50 	eoreq	r5, r8, r0, asr pc
    79c4:	00287c10 	eoreq	r7, r8, r0, lsl ip
    79c8:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
	...
    79d8:	1000284a 	andne	r2, r0, sl, asr #16
    79dc:	10002852 	andne	r2, r0, r2, asr r8
    79e0:	5c530001 	mrrcpl	0, 0, r0, r3, cr1
    79e4:	5f100028 	svcpl	0x00100028
    79e8:	01100028 	tsteq	r0, r8, lsr #32
    79ec:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    7a00:	00010000 	andeq	r0, r1, r0
    7a04:	00000050 	andeq	r0, r0, r0, asr r0
    7a08:	00000000 	andeq	r0, r0, r0
    7a0c:	f3000400 	vshl.u8	d0, d0, d0
    7a10:	009f5001 	addseq	r5, pc, r1
	...
    7a24:	01000000 	mrseq	r0, (UNDEF: 0)
    7a28:	00005000 	andeq	r5, r0, r0
    7a2c:	00000000 	andeq	r0, r0, r0
    7a30:	00010000 	andeq	r0, r1, r0
    7a34:	00000050 	andeq	r0, r0, r0, asr r0
    7a38:	00000000 	andeq	r0, r0, r0
    7a3c:	01000000 	mrseq	r0, (UNDEF: 0)
    7a40:	00000100 	andeq	r0, r0, r0, lsl #2
    7a44:	00000000 	andeq	r0, r0, r0
    7a48:	02000000 	andeq	r0, r0, #0
    7a4c:	009f3000 	addseq	r3, pc, r0
    7a50:	00000000 	andeq	r0, r0, r0
    7a54:	02000000 	andeq	r0, r0, #0
    7a58:	009f3100 	addseq	r3, pc, r0, lsl #2
    7a5c:	00000000 	andeq	r0, r0, r0
    7a60:	02000000 	andeq	r0, r0, #0
    7a64:	009f3100 	addseq	r3, pc, r0, lsl #2
	...
    7a78:	01000000 	mrseq	r0, (UNDEF: 0)
    7a7c:	00005300 	andeq	r5, r0, r0, lsl #6
    7a80:	00000000 	andeq	r0, r0, r0
    7a84:	00010000 	andeq	r0, r1, r0
    7a88:	00000053 	andeq	r0, r0, r3, asr r0
	...
    7a98:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    7aa4:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    7aa8:	00000010 	andeq	r0, r0, r0, lsl r0
	...
    7abc:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    7ac8:	00560001 	subseq	r0, r6, r1
    7acc:	00000000 	andeq	r0, r0, r0
    7ad0:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    7adc:	02000000 	andeq	r0, r0, #0
    7ae0:	009f3500 	addseq	r3, pc, r0, lsl #10
    7ae4:	00000000 	andeq	r0, r0, r0
    7ae8:	01000000 	mrseq	r0, (UNDEF: 0)
    7aec:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    7b14:	00500001 	subseq	r0, r0, r1
    7b18:	00000000 	andeq	r0, r0, r0
    7b1c:	01000000 	mrseq	r0, (UNDEF: 0)
    7b20:	00005500 	andeq	r5, r0, r0, lsl #10
    7b24:	00000000 	andeq	r0, r0, r0
    7b28:	00010000 	andeq	r0, r1, r0
    7b2c:	00000050 	andeq	r0, r0, r0, asr r0
    7b30:	00000000 	andeq	r0, r0, r0
    7b34:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    7b40:	00500001 	subseq	r0, r0, r1
    7b44:	00000000 	andeq	r0, r0, r0
    7b48:	01000000 	mrseq	r0, (UNDEF: 0)
    7b4c:	00005500 	andeq	r5, r0, r0, lsl #10
    7b50:	00000000 	andeq	r0, r0, r0
    7b54:	00010000 	andeq	r0, r1, r0
    7b58:	00000050 	andeq	r0, r0, r0, asr r0
    7b5c:	00000000 	andeq	r0, r0, r0
    7b60:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    7b6c:	00500001 	subseq	r0, r0, r1
    7b70:	00000000 	andeq	r0, r0, r0
    7b74:	01000000 	mrseq	r0, (UNDEF: 0)
    7b78:	00005500 	andeq	r5, r0, r0, lsl #10
    7b7c:	00000000 	andeq	r0, r0, r0
    7b80:	00010000 	andeq	r0, r1, r0
    7b84:	00000050 	andeq	r0, r0, r0, asr r0
	...
    7b94:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    7ba0:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    7ba4:	0000000c 	andeq	r0, r0, ip
	...
    7bbc:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    7bc8:	78750003 	ldmdavc	r5!, {r0, r1}^
    7bcc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    7bd0:	00000000 	andeq	r0, r0, r0
    7bd4:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    7be0:	78750003 	ldmdavc	r5!, {r0, r1}^
    7be4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    7bf0:	02020000 	andeq	r0, r2, #0
	...
    7bfc:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    7c08:	005e0001 	subseq	r0, lr, r1
    7c0c:	00000000 	andeq	r0, r0, r0
    7c10:	01000000 	mrseq	r0, (UNDEF: 0)
    7c14:	00005100 	andeq	r5, r0, r0, lsl #2
    7c18:	00000000 	andeq	r0, r0, r0
    7c1c:	00040000 	andeq	r0, r4, r0
    7c20:	9f5101f3 	svcls	0x005101f3
	...
    7c2c:	00000001 	andeq	r0, r0, r1
    7c30:	00000200 	andeq	r0, r0, r0, lsl #4
    7c34:	00000000 	andeq	r0, r0, r0
    7c38:	00020000 	andeq	r0, r2, r0
    7c3c:	00009f30 	andeq	r9, r0, r0, lsr pc
    7c40:	00000000 	andeq	r0, r0, r0
    7c44:	00010000 	andeq	r0, r1, r0
    7c48:	00000050 	andeq	r0, r0, r0, asr r0
    7c4c:	00000000 	andeq	r0, r0, r0
    7c50:	30000200 	andcc	r0, r0, r0, lsl #4
    7c54:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    7c58:	00000000 	andeq	r0, r0, r0
    7c5c:	00000200 	andeq	r0, r0, r0, lsl #4
    7c60:	00000000 	andeq	r0, r0, r0
    7c64:	00000002 	andeq	r0, r0, r2
    7c68:	00000000 	andeq	r0, r0, r0
    7c6c:	30000200 	andcc	r0, r0, r0, lsl #4
    7c70:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    7c74:	00000000 	andeq	r0, r0, r0
    7c78:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    7c84:	00510001 	subseq	r0, r1, r1
    7c88:	00000000 	andeq	r0, r0, r0
    7c8c:	02000000 	andeq	r0, r0, #0
    7c90:	009f3000 	addseq	r3, pc, r0
	...
    7c9c:	00000200 	andeq	r0, r0, r0, lsl #4
	...
    7ca8:	53000100 	movwpl	r0, #256	; 0x100
	...
    7cb4:	9f300002 	svcls	0x00300002
	...
    7cc0:	00530001 	subseq	r0, r3, r1
	...
    7cd4:	01000000 	mrseq	r0, (UNDEF: 0)
    7cd8:	00005200 	andeq	r5, r0, r0, lsl #4
    7cdc:	00000000 	andeq	r0, r0, r0
    7ce0:	00010000 	andeq	r0, r1, r0
    7ce4:	00000052 	andeq	r0, r0, r2, asr r0
    7ce8:	00000000 	andeq	r0, r0, r0
    7cec:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    7cf8:	30000200 	andcc	r0, r0, r0, lsl #4
    7cfc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    7d00:	00000000 	andeq	r0, r0, r0
    7d04:	30000200 	andcc	r0, r0, r0, lsl #4
    7d08:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    7d1c:	70000300 	andvc	r0, r0, r0, lsl #6
    7d20:	00009f08 	andeq	r9, r0, r8, lsl #30
    7d24:	00000000 	andeq	r0, r0, r0
    7d28:	00010000 	andeq	r0, r1, r0
    7d2c:	00000055 	andeq	r0, r0, r5, asr r0
	...
    7d3c:	01000000 	mrseq	r0, (UNDEF: 0)
    7d40:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    7d54:	00010000 	andeq	r0, r1, r0
    7d58:	00000050 	andeq	r0, r0, r0, asr r0
    7d5c:	00000000 	andeq	r0, r0, r0
    7d60:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    7d74:	00010000 	andeq	r0, r1, r0
    7d78:	00000053 	andeq	r0, r0, r3, asr r0
	...
    7d88:	01000000 	mrseq	r0, (UNDEF: 0)
    7d8c:	00005000 	andeq	r5, r0, r0
	...
    7d98:	1000282c 	andne	r2, r0, ip, lsr #16
    7d9c:	10002834 	andne	r2, r0, r4, lsr r8
    7da0:	00500001 	subseq	r0, r0, r1
    7da4:	00000000 	andeq	r0, r0, r0
    7da8:	dc000000 	stcle	0, cr0, [r0], {-0}
    7dac:	de100029 	cdple	0, 1, cr0, cr0, cr9, {1}
    7db0:	02100029 	andseq	r0, r0, #41	; 0x29
    7db4:	de007d00 	cdple	13, 0, cr7, cr0, cr0, {0}
    7db8:	0c100029 	ldceq	0, cr0, [r0], {41}	; 0x29
    7dbc:	0210002b 	andseq	r0, r0, #43	; 0x2b
    7dc0:	00087d00 	andeq	r7, r8, r0, lsl #26
    7dc4:	00000000 	andeq	r0, r0, r0
    7dc8:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    7dd4:	de000000 	cdple	0, 0, cr0, cr0, cr0, {0}
    7dd8:	fa100029 	blx	407e84 <__RAM_SIZE+0x307e84>
    7ddc:	02100029 	andseq	r0, r0, #41	; 0x29
    7de0:	fa9f3000 	blx	fe7d3de8 <__StackTop+0xc66d3de8>
    7de4:	06100029 	ldreq	r0, [r0], -r9, lsr #32
    7de8:	0110002a 	tsteq	r0, sl, lsr #32
    7dec:	2a065300 	bcs	19c9f4 <__RAM_SIZE+0x9c9f4>
    7df0:	2a081000 	bcs	20bdf8 <__RAM_SIZE+0x10bdf8>
    7df4:	00021000 	andeq	r1, r2, r0
    7df8:	2a089f30 	bcs	22fac0 <__RAM_SIZE+0x12fac0>
    7dfc:	2a121000 	bcs	48be04 <__RAM_SIZE+0x38be04>
    7e00:	00011000 	andeq	r1, r1, r0
    7e04:	002a1653 	eoreq	r1, sl, r3, asr r6
    7e08:	002aab10 	eoreq	sl, sl, r0, lsl fp
    7e0c:	53000110 	movwpl	r0, #272	; 0x110
    7e10:	10002ae0 	andne	r2, r0, r0, ror #21
    7e14:	10002ae2 	andne	r2, r0, r2, ror #21
    7e18:	9f300002 	svcls	0x00300002
	...
    7e24:	00010102 	andeq	r0, r1, r2, lsl #2
    7e28:	00000000 	andeq	r0, r0, r0
    7e2c:	29de0000 	ldmibcs	lr, {}^	; <UNPREDICTABLE>
    7e30:	2ab81000 	bcs	fee0be38 <__StackTop+0xc6d0be38>
    7e34:	00021000 	andeq	r1, r2, r0
    7e38:	2ab89f30 	bcs	fee2fb00 <__StackTop+0xc6d2fb00>
    7e3c:	2ac41000 	bcs	ff10be44 <__StackTop+0xc700be44>
    7e40:	00021000 	andeq	r1, r2, r0
    7e44:	2ac49f31 	bcs	ff12fb10 <__StackTop+0xc702fb10>
    7e48:	2ae21000 	bcs	ff88be50 <__StackTop+0xc778be50>
    7e4c:	00021000 	andeq	r1, r2, r0
    7e50:	2ae29f30 	bcs	ff8afb18 <__StackTop+0xc77afb18>
    7e54:	2aea1000 	bcs	ffa8be5c <__StackTop+0xc798be5c>
    7e58:	00011000 	andeq	r1, r1, r0
    7e5c:	002aea54 	eoreq	lr, sl, r4, asr sl
    7e60:	002b0c10 	eoreq	r0, fp, r0, lsl ip
    7e64:	50000110 	andpl	r0, r0, r0, lsl r1
	...
    7e74:	100029fa 	strdne	r2, [r0], -sl
    7e78:	10002a00 	andne	r2, r0, r0, lsl #20
    7e7c:	18520001 	ldmdane	r2, {r0}^
    7e80:	3810002a 	ldmdacc	r0, {r1, r3, r5}
    7e84:	0110002a 	tsteq	r0, sl, lsr #32
    7e88:	00005200 	andeq	r5, r0, r0, lsl #4
	...
    7e94:	2a000000 	bcs	7e9c <__HEAP_SIZE+0x6e9c>
    7e98:	2a061000 	bcs	18bea0 <__RAM_SIZE+0x8bea0>
    7e9c:	00011000 	andeq	r1, r1, r0
    7ea0:	002a3852 	eoreq	r3, sl, r2, asr r8
    7ea4:	002a5610 	eoreq	r5, sl, r0, lsl r6
    7ea8:	52000110 	andpl	r0, r0, #16, 2
	...
    7eb4:	2a6e0000 	bcs	1b87ebc <__RAM_SIZE+0x1a87ebc>
    7eb8:	2a7a1000 	bcs	1e8bec0 <__RAM_SIZE+0x1d8bec0>
    7ebc:	00011000 	andeq	r1, r1, r0
    7ec0:	00000052 	andeq	r0, r0, r2, asr r0
	...
    7ecc:	00000202 	andeq	r0, r0, r2, lsl #4
    7ed0:	002ab000 	eoreq	fp, sl, r0
    7ed4:	002ab610 	eoreq	fp, sl, r0, lsl r6
    7ed8:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    7edc:	10002ac4 	andne	r2, r0, r4, asr #21
    7ee0:	10002ac4 	andne	r2, r0, r4, asr #21
    7ee4:	c4540001 	ldrbgt	r0, [r4], #-1
    7ee8:	c610002a 	ldrgt	r0, [r0], -sl, lsr #32
    7eec:	0310002a 	tsteq	r0, #42	; 0x2a
    7ef0:	9f7f7400 	svcls	0x007f7400
    7ef4:	10002ac6 	andne	r2, r0, r6, asr #21
    7ef8:	10002ae0 	andne	r2, r0, r0, ror #21
    7efc:	00540001 	subseq	r0, r4, r1
	...
    7f08:	fa010000 	blx	47f10 <__HEAP_SIZE+0x46f10>
    7f0c:	02100023 	andseq	r0, r0, #35	; 0x23
    7f10:	01100024 	tsteq	r0, r4, lsr #32
    7f14:	24045000 	strcs	r5, [r4], #-0
    7f18:	24041000 	strcs	r1, [r4], #-0
    7f1c:	00021000 	andeq	r1, r2, r0
    7f20:	00009f30 	andeq	r9, r0, r0, lsr pc
    7f24:	00000000 	andeq	r0, r0, r0
    7f28:	00030000 	andeq	r0, r3, r0
    7f2c:	00000000 	andeq	r0, r0, r0
    7f30:	100023dc 	ldrdne	r2, [r0], -ip
    7f34:	100023e0 	andne	r2, r0, r0, ror #7
    7f38:	9f300002 	svcls	0x00300002
    7f3c:	100023e4 	andne	r2, r0, r4, ror #7
    7f40:	100023f8 	strdne	r2, [r0], -r8
    7f44:	02530001 	subseq	r0, r3, #1
    7f48:	1c100024 	ldcne	0, cr0, [r0], {36}	; 0x24
    7f4c:	01100024 	tsteq	r0, r4, lsr #32
    7f50:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    7f60:	00020000 	andeq	r0, r2, r0
    7f64:	0000007d 	andeq	r0, r0, sp, ror r0
    7f68:	00000000 	andeq	r0, r0, r0
    7f6c:	00020000 	andeq	r0, r2, r0
    7f70:	0000087d 	andeq	r0, r0, sp, ror r8
    7f74:	00000000 	andeq	r0, r0, r0
    7f78:	00010000 	andeq	r0, r1, r0
	...
    7f84:	00020000 	andeq	r0, r2, r0
    7f88:	00009f30 	andeq	r9, r0, r0, lsr pc
    7f8c:	00000000 	andeq	r0, r0, r0
    7f90:	00010000 	andeq	r0, r1, r0
    7f94:	00000054 	andeq	r0, r0, r4, asr r0
    7f98:	00000000 	andeq	r0, r0, r0
    7f9c:	002f1000 	eoreq	r1, pc, r0
    7fa0:	002f1210 	eoreq	r1, pc, r0, lsl r2	; <UNPREDICTABLE>
    7fa4:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    7fa8:	002f1200 	eoreq	r1, pc, r0, lsl #4
    7fac:	002f5810 	eoreq	r5, pc, r0, lsl r8	; <UNPREDICTABLE>
    7fb0:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    7fb4:	00000008 	andeq	r0, r0, r8
	...
    7fc0:	16000000 	strne	r0, [r0], -r0
    7fc4:	1e10002f 	cdpne	0, 1, cr0, cr0, cr15, {1}
    7fc8:	0110002f 	tsteq	r0, pc, lsr #32
    7fcc:	2f245000 	svccs	0x00245000
    7fd0:	2f271000 	svccs	0x00271000
    7fd4:	00011000 	andeq	r1, r1, r0
    7fd8:	002f2850 	eoreq	r2, pc, r0, asr r8	; <UNPREDICTABLE>
    7fdc:	002f2d10 	eoreq	r2, pc, r0, lsl sp	; <UNPREDICTABLE>
    7fe0:	50000110 	andpl	r0, r0, r0, lsl r1
	...
    7fec:	10002ea4 	andne	r2, r0, r4, lsr #29
    7ff0:	10002ea6 	andne	r2, r0, r6, lsr #29
    7ff4:	007d0002 	rsbseq	r0, sp, r2
    7ff8:	10002ea6 	andne	r2, r0, r6, lsr #29
    7ffc:	10002ea8 	andne	r2, r0, r8, lsr #29
    8000:	0c7d0002 	ldcleq	0, cr0, [sp], #-8
    8004:	10002ea8 	andne	r2, r0, r8, lsr #29
    8008:	10002ecc 	andne	r2, r0, ip, asr #29
    800c:	307d0002 	rsbscc	r0, sp, r2
    8010:	10002ecc 	andne	r2, r0, ip, asr #29
    8014:	10002ece 	andne	r2, r0, lr, asr #29
    8018:	0c7d0002 	ldcleq	0, cr0, [sp], #-8
    801c:	10002ece 	andne	r2, r0, lr, asr #29
    8020:	10002f10 	andne	r2, r0, r0, lsl pc
    8024:	307d0002 	rsbscc	r0, sp, r2
	...
    8030:	01000101 	tsteq	r0, r1, lsl #2
    8034:	2ea80001 	cdpcs	0, 10, cr0, cr8, cr1, {0}
    8038:	2eca1000 	cdpcs	0, 12, cr1, cr10, cr0, {0}
    803c:	00021000 	andeq	r1, r2, r0
    8040:	2ece9f31 	mcrcs	15, 6, r9, cr14, cr1, {1}
    8044:	2f001000 	svccs	0x00001000
    8048:	00021000 	andeq	r1, r2, r0
    804c:	2f009f31 	svccs	0x00009f31
    8050:	2f101000 	svccs	0x00101000
    8054:	00021000 	andeq	r1, r2, r0
    8058:	00009f30 	andeq	r9, r0, r0, lsr pc
	...
    8064:	10002ec4 	andne	r2, r0, r4, asr #29
    8068:	10002f10 	andne	r2, r0, r0, lsl pc
    806c:	00540001 	subseq	r0, r4, r1
    8070:	00000000 	andeq	r0, r0, r0
    8074:	04000000 	streq	r0, [r0], #-0
    8078:	002ea800 	eoreq	sl, lr, r0, lsl #16
    807c:	002ec410 	eoreq	ip, lr, r0, lsl r4
    8080:	30000210 	andcc	r0, r0, r0, lsl r2
    8084:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    8088:	00000000 	andeq	r0, r0, r0
    808c:	00000600 	andeq	r0, r0, r0, lsl #12
    8090:	002ea800 	eoreq	sl, lr, r0, lsl #16
    8094:	002eaa10 	eoreq	sl, lr, r0, lsl sl
    8098:	30000210 	andcc	r0, r0, r0, lsl r2
    809c:	002eaa9f 	mlaeq	lr, pc, sl, sl	; <UNPREDICTABLE>
    80a0:	002ec410 	eoreq	ip, lr, r0, lsl r4
    80a4:	53000110 	movwpl	r0, #272	; 0x110
	...
    80b8:	007d0002 	rsbseq	r0, sp, r2
	...
    80c4:	187d0002 	ldmdane	sp!, {r1}^
	...
    80dc:	00500001 	subseq	r0, r0, r1
    80e0:	00000000 	andeq	r0, r0, r0
    80e4:	01000000 	mrseq	r0, (UNDEF: 0)
    80e8:	00005400 	andeq	r5, r0, r0, lsl #8
    80ec:	00000000 	andeq	r0, r0, r0
    80f0:	01010000 	mrseq	r0, (UNDEF: 1)
    80f4:	00000001 	andeq	r0, r0, r1
	...
    8100:	00020000 	andeq	r0, r2, r0
    8104:	00009f30 	andeq	r9, r0, r0, lsr pc
    8108:	00000000 	andeq	r0, r0, r0
    810c:	00020000 	andeq	r0, r2, r0
    8110:	00009f31 	andeq	r9, r0, r1, lsr pc
    8114:	00000000 	andeq	r0, r0, r0
    8118:	00010000 	andeq	r0, r1, r0
    811c:	00000056 	andeq	r0, r0, r6, asr r0
    8120:	00000000 	andeq	r0, r0, r0
    8124:	30000200 	andcc	r0, r0, r0, lsl #4
    8128:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    812c:	00000000 	andeq	r0, r0, r0
    8130:	00000200 	andeq	r0, r0, r0, lsl #4
	...
    813c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    8148:	00540001 	subseq	r0, r4, r1
	...
    815c:	01000000 	mrseq	r0, (UNDEF: 0)
    8160:	00005000 	andeq	r5, r0, r0
    8164:	00000000 	andeq	r0, r0, r0
    8168:	00010000 	andeq	r0, r1, r0
    816c:	00000055 	andeq	r0, r0, r5, asr r0
	...
    817c:	01000000 	mrseq	r0, (UNDEF: 0)
    8180:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    8190:	00020000 	andeq	r0, r2, r0
    8194:	0000007d 	andeq	r0, r0, sp, ror r0
    8198:	00000000 	andeq	r0, r0, r0
    819c:	00020000 	andeq	r0, r2, r0
    81a0:	0000107d 	andeq	r1, r0, sp, ror r0
	...
    81ac:	00020200 	andeq	r0, r2, r0, lsl #4
	...
    81b8:	00010000 	andeq	r0, r1, r0
    81bc:	00000050 	andeq	r0, r0, r0, asr r0
    81c0:	00000000 	andeq	r0, r0, r0
    81c4:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    81d0:	01f30004 	mvnseq	r0, r4
    81d4:	00009f50 	andeq	r9, r0, r0, asr pc
    81d8:	00000000 	andeq	r0, r0, r0
    81dc:	00010000 	andeq	r0, r1, r0
    81e0:	00000054 	andeq	r0, r0, r4, asr r0
    81e4:	00000000 	andeq	r0, r0, r0
    81e8:	00000100 	andeq	r0, r0, r0, lsl #2
    81ec:	00000202 	andeq	r0, r0, r2, lsl #4
	...
    81f8:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    8204:	00540001 	subseq	r0, r4, r1
    8208:	00000000 	andeq	r0, r0, r0
    820c:	04000000 	streq	r0, [r0], #-0
    8210:	5001f300 	andpl	pc, r1, r0, lsl #6
    8214:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    8218:	00000000 	andeq	r0, r0, r0
    821c:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    8230:	00010000 	andeq	r0, r1, r0
    8234:	00000053 	andeq	r0, r0, r3, asr r0
	...
    8258:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    8264:	01f30004 	mvnseq	r0, r4
    8268:	00009f50 	andeq	r9, r0, r0, asr pc
    826c:	00000000 	andeq	r0, r0, r0
    8270:	00010000 	andeq	r0, r1, r0
    8274:	00000050 	andeq	r0, r0, r0, asr r0
    8278:	00000000 	andeq	r0, r0, r0
    827c:	f3000400 	vshl.u8	d0, d0, d0
    8280:	009f5001 	addseq	r5, pc, r1
    8284:	00000000 	andeq	r0, r0, r0
    8288:	01000000 	mrseq	r0, (UNDEF: 0)
    828c:	00005000 	andeq	r5, r0, r0
    8290:	00000000 	andeq	r0, r0, r0
    8294:	00040000 	andeq	r0, r4, r0
    8298:	9f5001f3 	svcls	0x005001f3
	...
    82a4:	00500001 	subseq	r0, r0, r1
    82a8:	00000000 	andeq	r0, r0, r0
    82ac:	04000000 	streq	r0, [r0], #-0
    82b0:	5001f300 	andpl	pc, r1, r0, lsl #6
    82b4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    82b8:	00000000 	andeq	r0, r0, r0
    82bc:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    82c8:	01f30004 	mvnseq	r0, r4
    82cc:	00009f50 	andeq	r9, r0, r0, asr pc
    82d0:	00000000 	andeq	r0, r0, r0
    82d4:	00020000 	andeq	r0, r2, r0
	...
    82e4:	9f300002 	svcls	0x00300002
	...
    82f0:	9f300002 	svcls	0x00300002
	...
    82fc:	9f300002 	svcls	0x00300002
	...
    8308:	00000003 	andeq	r0, r0, r3
	...
    8324:	00500001 	subseq	r0, r0, r1
    8328:	00000000 	andeq	r0, r0, r0
    832c:	04000000 	streq	r0, [r0], #-0
    8330:	5001f300 	andpl	pc, r1, r0, lsl #6
    8334:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    8338:	00000000 	andeq	r0, r0, r0
    833c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    8348:	01f30004 	mvnseq	r0, r4
    834c:	00009f50 	andeq	r9, r0, r0, asr pc
    8350:	00000000 	andeq	r0, r0, r0
    8354:	00010000 	andeq	r0, r1, r0
    8358:	00000050 	andeq	r0, r0, r0, asr r0
    835c:	00000000 	andeq	r0, r0, r0
    8360:	f3000400 	vshl.u8	d0, d0, d0
    8364:	009f5001 	addseq	r5, pc, r1
    8368:	00000000 	andeq	r0, r0, r0
    836c:	01000000 	mrseq	r0, (UNDEF: 0)
    8370:	00005000 	andeq	r5, r0, r0
    8374:	00000000 	andeq	r0, r0, r0
    8378:	00040000 	andeq	r0, r4, r0
    837c:	9f5001f3 	svcls	0x005001f3
	...
    8388:	00500001 	subseq	r0, r0, r1
    838c:	00000000 	andeq	r0, r0, r0
    8390:	04000000 	streq	r0, [r0], #-0
    8394:	5001f300 	andpl	pc, r1, r0, lsl #6
    8398:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    83ac:	53000100 	movwpl	r0, #256	; 0x100
	...
    83b8:	00530001 	subseq	r0, r3, r1
	...
    83c8:	02000000 	andeq	r0, r0, #0
    83cc:	00007d00 	andeq	r7, r0, r0, lsl #26
    83d0:	00000000 	andeq	r0, r0, r0
    83d4:	02000000 	andeq	r0, r0, #0
    83d8:	00107d00 	andseq	r7, r0, r0, lsl #26
	...
    83f0:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    83fc:	00540001 	subseq	r0, r4, r1
    8400:	00000000 	andeq	r0, r0, r0
    8404:	01000000 	mrseq	r0, (UNDEF: 0)
    8408:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    841c:	00010000 	andeq	r0, r1, r0
    8420:	00000054 	andeq	r0, r0, r4, asr r0
    8424:	00000000 	andeq	r0, r0, r0
    8428:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    8434:	00000002 	andeq	r0, r0, r2
	...
    8440:	00020000 	andeq	r0, r2, r0
    8444:	00009f30 	andeq	r9, r0, r0, lsr pc
    8448:	00000000 	andeq	r0, r0, r0
    844c:	00010000 	andeq	r0, r1, r0
    8450:	00000053 	andeq	r0, r0, r3, asr r0
    8454:	00000000 	andeq	r0, r0, r0
    8458:	53000100 	movwpl	r0, #256	; 0x100
	...
    8470:	00010000 	andeq	r0, r1, r0
    8474:	00000053 	andeq	r0, r0, r3, asr r0
    8478:	00000000 	andeq	r0, r0, r0
    847c:	03000500 	movweq	r0, #1280	; 0x500
    8480:	38008b10 	stmdacc	r0, {r4, r8, r9, fp, pc}
	...
    848c:	00530001 	subseq	r0, r3, r1
	...
    849c:	02000000 	andeq	r0, r0, #0
    84a0:	00007d00 	andeq	r7, r0, r0, lsl #26
    84a4:	00000000 	andeq	r0, r0, r0
    84a8:	02000000 	andeq	r0, r0, #0
    84ac:	00107d00 	andseq	r7, r0, r0, lsl #26
	...
    84c4:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    84d0:	00540001 	subseq	r0, r4, r1
    84d4:	00000000 	andeq	r0, r0, r0
    84d8:	01000000 	mrseq	r0, (UNDEF: 0)
    84dc:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    84f8:	00510001 	subseq	r0, r1, r1
    84fc:	00000000 	andeq	r0, r0, r0
    8500:	01000000 	mrseq	r0, (UNDEF: 0)
    8504:	00005500 	andeq	r5, r0, r0, lsl #10
    8508:	00000000 	andeq	r0, r0, r0
    850c:	00020000 	andeq	r0, r2, r0
    8510:	00003874 	andeq	r3, r0, r4, ror r8
    8514:	00000000 	andeq	r0, r0, r0
    8518:	00010000 	andeq	r0, r1, r0
    851c:	00000055 	andeq	r0, r0, r5, asr r0
    8520:	00000000 	andeq	r0, r0, r0
    8524:	74000200 	strvc	r0, [r0], #-512	; 0xfffffe00
    8528:	00000038 	andeq	r0, r0, r8, lsr r0
	...
    853c:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    8548:	00540001 	subseq	r0, r4, r1
	...
    8560:	52000100 	andpl	r0, r0, #0, 2
	...
    856c:	00520001 	subseq	r0, r2, r1
    8570:	00000000 	andeq	r0, r0, r0
    8574:	01000000 	mrseq	r0, (UNDEF: 0)
    8578:	00005200 	andeq	r5, r0, r0, lsl #4
	...
    858c:	00530001 	subseq	r0, r3, r1
    8590:	00000000 	andeq	r0, r0, r0
    8594:	03000000 	movweq	r0, #0
	...
    85a4:	02000000 	andeq	r0, r0, #0
    85a8:	009f3000 	addseq	r3, pc, r0
    85ac:	00000000 	andeq	r0, r0, r0
    85b0:	01000000 	mrseq	r0, (UNDEF: 0)
    85b4:	00005600 	andeq	r5, r0, r0, lsl #12
    85b8:	00000000 	andeq	r0, r0, r0
    85bc:	00020000 	andeq	r0, r2, r0
    85c0:	00009f30 	andeq	r9, r0, r0, lsr pc
    85c4:	00000000 	andeq	r0, r0, r0
    85c8:	00010000 	andeq	r0, r1, r0
    85cc:	00000056 	andeq	r0, r0, r6, asr r0
	...
    85dc:	01000000 	mrseq	r0, (UNDEF: 0)
    85e0:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    85f0:	00020000 	andeq	r0, r2, r0
    85f4:	0000007d 	andeq	r0, r0, sp, ror r0
    85f8:	00000000 	andeq	r0, r0, r0
    85fc:	00020000 	andeq	r0, r2, r0
    8600:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    8618:	00500001 	subseq	r0, r0, r1
    861c:	00000000 	andeq	r0, r0, r0
    8620:	01000000 	mrseq	r0, (UNDEF: 0)
    8624:	00005400 	andeq	r5, r0, r0, lsl #8
    8628:	00000000 	andeq	r0, r0, r0
    862c:	00010000 	andeq	r0, r1, r0
    8630:	00000054 	andeq	r0, r0, r4, asr r0
	...
    8640:	01000000 	mrseq	r0, (UNDEF: 0)
    8644:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    8658:	00540001 	subseq	r0, r4, r1
	...
    866c:	01000000 	mrseq	r0, (UNDEF: 0)
    8670:	00005000 	andeq	r5, r0, r0
    8674:	00000000 	andeq	r0, r0, r0
    8678:	00010000 	andeq	r0, r1, r0
    867c:	00000050 	andeq	r0, r0, r0, asr r0
	...
    868c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    8698:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    869c:	00000008 	andeq	r0, r0, r8
	...
    86b0:	01000000 	mrseq	r0, (UNDEF: 0)
    86b4:	00005000 	andeq	r5, r0, r0
    86b8:	00000000 	andeq	r0, r0, r0
    86bc:	00010000 	andeq	r0, r1, r0
    86c0:	00000054 	andeq	r0, r0, r4, asr r0
    86c4:	00000000 	andeq	r0, r0, r0
    86c8:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    86dc:	00010000 	andeq	r0, r1, r0
    86e0:	00000054 	andeq	r0, r0, r4, asr r0
	...
    86f0:	01000000 	mrseq	r0, (UNDEF: 0)
    86f4:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    8704:	00020000 	andeq	r0, r2, r0
    8708:	0000007d 	andeq	r0, r0, sp, ror r0
    870c:	00000000 	andeq	r0, r0, r0
    8710:	00020000 	andeq	r0, r2, r0
    8714:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    872c:	00500001 	subseq	r0, r0, r1
    8730:	00000000 	andeq	r0, r0, r0
    8734:	01000000 	mrseq	r0, (UNDEF: 0)
    8738:	00005400 	andeq	r5, r0, r0, lsl #8
    873c:	00000000 	andeq	r0, r0, r0
    8740:	00010000 	andeq	r0, r1, r0
    8744:	00000054 	andeq	r0, r0, r4, asr r0
	...
    8754:	01000000 	mrseq	r0, (UNDEF: 0)
    8758:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    876c:	00540001 	subseq	r0, r4, r1
	...
    8780:	01000000 	mrseq	r0, (UNDEF: 0)
    8784:	00005000 	andeq	r5, r0, r0
    8788:	00000000 	andeq	r0, r0, r0
    878c:	00010000 	andeq	r0, r1, r0
    8790:	00000050 	andeq	r0, r0, r0, asr r0
	...
    87a0:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    87ac:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    87b0:	00000008 	andeq	r0, r0, r8
	...
    87c4:	01000000 	mrseq	r0, (UNDEF: 0)
    87c8:	00005000 	andeq	r5, r0, r0
    87cc:	00000000 	andeq	r0, r0, r0
    87d0:	00010000 	andeq	r0, r1, r0
    87d4:	00000054 	andeq	r0, r0, r4, asr r0
    87d8:	00000000 	andeq	r0, r0, r0
    87dc:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    87f0:	00010000 	andeq	r0, r1, r0
    87f4:	00000054 	andeq	r0, r0, r4, asr r0
	...
    8804:	01000000 	mrseq	r0, (UNDEF: 0)
    8808:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    8818:	00020000 	andeq	r0, r2, r0
    881c:	0000007d 	andeq	r0, r0, sp, ror r0
    8820:	00000000 	andeq	r0, r0, r0
    8824:	00020000 	andeq	r0, r2, r0
    8828:	0000187d 	andeq	r1, r0, sp, ror r8
    882c:	00000000 	andeq	r0, r0, r0
    8830:	00020000 	andeq	r0, r2, r0
    8834:	0000007d 	andeq	r0, r0, sp, ror r0
    8838:	00000000 	andeq	r0, r0, r0
    883c:	00020000 	andeq	r0, r2, r0
    8840:	0000187d 	andeq	r1, r0, sp, ror r8
	...
    885c:	00500001 	subseq	r0, r0, r1
    8860:	00000000 	andeq	r0, r0, r0
    8864:	01000000 	mrseq	r0, (UNDEF: 0)
    8868:	00005400 	andeq	r5, r0, r0, lsl #8
    886c:	00000000 	andeq	r0, r0, r0
    8870:	00010000 	andeq	r0, r1, r0
    8874:	00000050 	andeq	r0, r0, r0, asr r0
    8878:	00000000 	andeq	r0, r0, r0
    887c:	f3000400 	vshl.u8	d0, d0, d0
    8880:	009f5001 	addseq	r5, pc, r1
    8884:	00000000 	andeq	r0, r0, r0
    8888:	01000000 	mrseq	r0, (UNDEF: 0)
    888c:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    88a0:	00010000 	andeq	r0, r1, r0
    88a4:	00000050 	andeq	r0, r0, r0, asr r0
    88a8:	00000000 	andeq	r0, r0, r0
    88ac:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    88c4:	00550001 	subseq	r0, r5, r1
    88c8:	00000000 	andeq	r0, r0, r0
    88cc:	01000000 	mrseq	r0, (UNDEF: 0)
    88d0:	00005500 	andeq	r5, r0, r0, lsl #10
	...
    88e4:	00010000 	andeq	r0, r1, r0
    88e8:	00000056 	andeq	r0, r0, r6, asr r0
    88ec:	00000000 	andeq	r0, r0, r0
    88f0:	56000100 	strpl	r0, [r0], -r0, lsl #2
	...
    8908:	00570001 	subseq	r0, r7, r1
    890c:	00000000 	andeq	r0, r0, r0
    8910:	01000000 	mrseq	r0, (UNDEF: 0)
    8914:	00005700 	andeq	r5, r0, r0, lsl #14
	...
    8928:	00010000 	andeq	r0, r1, r0
    892c:	00000058 	andeq	r0, r0, r8, asr r0
    8930:	00000000 	andeq	r0, r0, r0
    8934:	58000100 	stmdapl	r0, {r8}
	...
    8940:	00000007 	andeq	r0, r0, r7
	...
    8950:	00010000 	andeq	r0, r1, r0
    8954:	00000050 	andeq	r0, r0, r0, asr r0
    8958:	00000000 	andeq	r0, r0, r0
    895c:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    8968:	00500001 	subseq	r0, r0, r1
    896c:	00000000 	andeq	r0, r0, r0
    8970:	04000000 	streq	r0, [r0], #-0
    8974:	5001f300 	andpl	pc, r1, r0, lsl #6
    8978:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    897c:	00000000 	andeq	r0, r0, r0
    8980:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    8998:	00010000 	andeq	r0, r1, r0
    899c:	00000053 	andeq	r0, r0, r3, asr r0
    89a0:	00000000 	andeq	r0, r0, r0
    89a4:	53000100 	movwpl	r0, #256	; 0x100
	...
    89b0:	00530001 	subseq	r0, r3, r1
    89b4:	00000000 	andeq	r0, r0, r0
    89b8:	0c000000 	stceq	0, cr0, [r0], {-0}
    89bc:	0e10002b 	cdpeq	0, 1, cr0, cr0, cr11, {1}
    89c0:	0210002b 	andseq	r0, r0, #43	; 0x2b
    89c4:	0e007d00 	cdpeq	13, 0, cr7, cr0, cr0, {0}
    89c8:	2a10002b 	bcs	408a7c <__RAM_SIZE+0x308a7c>
    89cc:	0210002b 	andseq	r0, r0, #43	; 0x2b
    89d0:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    89e0:	002b0c00 	eoreq	r0, fp, r0, lsl #24
    89e4:	002b1510 	eoreq	r1, fp, r0, lsl r5
    89e8:	50000110 	andpl	r0, r0, r0, lsl r1
    89ec:	10002b15 	andne	r2, r0, r5, lsl fp
    89f0:	10002b24 	andne	r2, r0, r4, lsr #22
    89f4:	24540001 	ldrbcs	r0, [r4], #-1
    89f8:	2a10002b 	bcs	408aac <__RAM_SIZE+0x308aac>
    89fc:	0410002b 	ldreq	r0, [r0], #-43	; 0xffffffd5
    8a00:	5001f300 	andpl	pc, r1, r0, lsl #6
    8a04:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    8a08:	00000000 	andeq	r0, r0, r0
    8a0c:	00000100 	andeq	r0, r0, r0, lsl #2
    8a10:	002b0e00 	eoreq	r0, fp, r0, lsl #28
    8a14:	002b2210 	eoreq	r2, fp, r0, lsl r2
    8a18:	30000210 	andcc	r0, r0, r0, lsl r2
    8a1c:	002b229f 	mlaeq	fp, pc, r2, r2	; <UNPREDICTABLE>
    8a20:	002b2410 	eoreq	r2, fp, r0, lsl r4
    8a24:	50000110 	andpl	r0, r0, r0, lsl r1
	...
    8a38:	007d0002 	rsbseq	r0, sp, r2
	...
    8a44:	107d0002 	rsbsne	r0, sp, r2
	...
    8a5c:	00500001 	subseq	r0, r0, r1
    8a60:	00000000 	andeq	r0, r0, r0
    8a64:	01000000 	mrseq	r0, (UNDEF: 0)
    8a68:	00005500 	andeq	r5, r0, r0, lsl #10
	...
    8a80:	00510001 	subseq	r0, r1, r1
    8a84:	00000000 	andeq	r0, r0, r0
    8a88:	01000000 	mrseq	r0, (UNDEF: 0)
    8a8c:	00005400 	andeq	r5, r0, r0, lsl #8
    8a90:	00000000 	andeq	r0, r0, r0
    8a94:	00040000 	andeq	r0, r4, r0
    8a98:	9f5101f3 	svcls	0x005101f3
	...
    8ab8:	00010000 	andeq	r0, r1, r0
    8abc:	00000054 	andeq	r0, r0, r4, asr r0
    8ac0:	00000000 	andeq	r0, r0, r0
    8ac4:	75000200 	strvc	r0, [r0, #-512]	; 0xfffffe00
	...
    8ad0:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    8adc:	00750002 	rsbseq	r0, r5, r2
	...
    8ae8:	00540001 	subseq	r0, r4, r1
    8aec:	00000000 	andeq	r0, r0, r0
    8af0:	01000000 	mrseq	r0, (UNDEF: 0)
    8af4:	00005400 	andeq	r5, r0, r0, lsl #8
    8af8:	00000000 	andeq	r0, r0, r0
    8afc:	00020000 	andeq	r0, r2, r0
    8b00:	00000075 	andeq	r0, r0, r5, ror r0
	...
    8b14:	00010000 	andeq	r0, r1, r0
    8b18:	00000050 	andeq	r0, r0, r0, asr r0
    8b1c:	00000000 	andeq	r0, r0, r0
    8b20:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    8b2c:	00010102 	andeq	r0, r1, r2, lsl #2
    8b30:	00010100 	andeq	r0, r1, r0, lsl #2
	...
    8b3c:	00020000 	andeq	r0, r2, r0
    8b40:	00009f30 	andeq	r9, r0, r0, lsr pc
    8b44:	00000000 	andeq	r0, r0, r0
    8b48:	00020000 	andeq	r0, r2, r0
    8b4c:	00009f31 	andeq	r9, r0, r1, lsr pc
    8b50:	00000000 	andeq	r0, r0, r0
    8b54:	00020000 	andeq	r0, r2, r0
    8b58:	00009f30 	andeq	r9, r0, r0, lsr pc
    8b5c:	00000000 	andeq	r0, r0, r0
    8b60:	00020000 	andeq	r0, r2, r0
    8b64:	00009f31 	andeq	r9, r0, r1, lsr pc
    8b68:	00000000 	andeq	r0, r0, r0
    8b6c:	00020000 	andeq	r0, r2, r0
    8b70:	00009f30 	andeq	r9, r0, r0, lsr pc
	...
    8b84:	00010000 	andeq	r0, r1, r0
    8b88:	00000050 	andeq	r0, r0, r0, asr r0
    8b8c:	00000000 	andeq	r0, r0, r0
    8b90:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    8ba4:	007d0002 	rsbseq	r0, sp, r2
	...
    8bb0:	107d0002 	rsbsne	r0, sp, r2
	...
    8bc8:	00010000 	andeq	r0, r1, r0
    8bcc:	00000050 	andeq	r0, r0, r0, asr r0
    8bd0:	00000000 	andeq	r0, r0, r0
    8bd4:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    8be0:	00540001 	subseq	r0, r4, r1
	...
    8bf4:	01000000 	mrseq	r0, (UNDEF: 0)
    8bf8:	00005400 	andeq	r5, r0, r0, lsl #8
    8bfc:	00000000 	andeq	r0, r0, r0
    8c00:	00010000 	andeq	r0, r1, r0
    8c04:	00000054 	andeq	r0, r0, r4, asr r0
    8c08:	00000000 	andeq	r0, r0, r0
    8c0c:	00000200 	andeq	r0, r0, r0, lsl #4
    8c10:	00000202 	andeq	r0, r0, r2, lsl #4
    8c14:	00000000 	andeq	r0, r0, r0
    8c18:	02000000 	andeq	r0, r0, #0
    8c1c:	009f3000 	addseq	r3, pc, r0
    8c20:	00000000 	andeq	r0, r0, r0
    8c24:	02000000 	andeq	r0, r0, #0
    8c28:	009f3000 	addseq	r3, pc, r0
    8c2c:	00000000 	andeq	r0, r0, r0
    8c30:	02000000 	andeq	r0, r0, #0
    8c34:	009f3100 	addseq	r3, pc, r0, lsl #2
	...
    8c48:	01000000 	mrseq	r0, (UNDEF: 0)
    8c4c:	00005200 	andeq	r5, r0, r0, lsl #4
    8c50:	00000000 	andeq	r0, r0, r0
    8c54:	00010000 	andeq	r0, r1, r0
    8c58:	00000052 	andeq	r0, r0, r2, asr r0
    8c5c:	00000000 	andeq	r0, r0, r0
    8c60:	00259400 	eoreq	r9, r5, r0, lsl #8
    8c64:	00259610 	eoreq	r9, r5, r0, lsl r6
    8c68:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    8c6c:	00259600 	eoreq	r9, r5, r0, lsl #12
    8c70:	00265010 	eoreq	r5, r6, r0, lsl r0
    8c74:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    8c78:	00000008 	andeq	r0, r0, r8
	...
    8c84:	00259400 	eoreq	r9, r5, r0, lsl #8
    8c88:	00259b10 	eoreq	r9, r5, r0, lsl fp
    8c8c:	50000110 	andpl	r0, r0, r0, lsl r1
    8c90:	1000259b 	mulne	r0, fp, r5
    8c94:	10002650 	andne	r2, r0, r0, asr r6
    8c98:	00540001 	subseq	r0, r4, r1
	...
    8ca4:	0025ee00 	eoreq	lr, r5, r0, lsl #28
    8ca8:	0025fc10 	eoreq	pc, r5, r0, lsl ip	; <UNPREDICTABLE>
    8cac:	53000110 	movwpl	r0, #272	; 0x110
	...
    8cb8:	10002444 	andne	r2, r0, r4, asr #8
    8cbc:	10002448 	andne	r2, r0, r8, asr #8
    8cc0:	007d0002 	rsbseq	r0, sp, r2
    8cc4:	10002448 	andne	r2, r0, r8, asr #8
    8cc8:	100024da 	ldrdne	r2, [r0], -sl
    8ccc:	207d0002 	rsbscs	r0, sp, r2
	...
    8cdc:	10002444 	andne	r2, r0, r4, asr #8
    8ce0:	1000245e 	andne	r2, r0, lr, asr r4
    8ce4:	5e500001 	cdppl	0, 5, cr0, cr0, cr1, {0}
    8ce8:	da100024 	ble	408d80 <__RAM_SIZE+0x308d80>
    8cec:	01100024 	tsteq	r0, r4, lsr #32
    8cf0:	00005800 	andeq	r5, r0, r0, lsl #16
	...
    8cfc:	24440000 	strbcs	r0, [r4], #-0
    8d00:	245c1000 	ldrbcs	r1, [ip], #-0
    8d04:	00011000 	andeq	r1, r1, r0
    8d08:	00245c51 	eoreq	r5, r4, r1, asr ip
    8d0c:	0024da10 	eoreq	sp, r4, r0, lsl sl
    8d10:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
	...
    8d24:	10002444 	andne	r2, r0, r4, asr #8
    8d28:	1000245a 	andne	r2, r0, sl, asr r4
    8d2c:	5a520001 	bpl	1488d38 <__RAM_SIZE+0x1388d38>
    8d30:	6e100024 	cdpvs	0, 1, cr0, cr0, cr4, {1}
    8d34:	01100024 	tsteq	r0, r4, lsr #32
    8d38:	246e5700 	strbtcs	r5, [lr], #-1792	; 0xfffff900
    8d3c:	24781000 	ldrbtcs	r1, [r8], #-0
    8d40:	00071000 	andeq	r1, r7, r0
    8d44:	80808172 	addhi	r8, r0, r2, ror r1
    8d48:	789f7c80 	ldmvc	pc, {r7, sl, fp, ip, sp, lr}	; <UNPREDICTABLE>
    8d4c:	da100024 	ble	408de4 <__RAM_SIZE+0x308de4>
    8d50:	04100024 	ldreq	r0, [r0], #-36	; 0xffffffdc
    8d54:	5201f300 	andpl	pc, r1, #0, 6
    8d58:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    8d64:	00244400 	eoreq	r4, r4, r0, lsl #8
    8d68:	00246110 	eoreq	r6, r4, r0, lsl r1
    8d6c:	53000110 	movwpl	r0, #272	; 0x110
    8d70:	10002461 	andne	r2, r0, r1, ror #8
    8d74:	100024da 	ldrdne	r2, [r0], -sl
    8d78:	00590001 	subseq	r0, r9, r1
	...
    8d84:	44000000 	strmi	r0, [r0], #-0
    8d88:	a2100024 	andsge	r0, r0, #36	; 0x24
    8d8c:	02100024 	andseq	r0, r0, #36	; 0x24
    8d90:	a2009100 	andge	r9, r0, #0, 2
    8d94:	ba100024 	blt	408e2c <__RAM_SIZE+0x308e2c>
    8d98:	01100024 	tsteq	r0, r4, lsr #32
    8d9c:	00005600 	andeq	r5, r0, r0, lsl #12
	...
    8da8:	1000246e 	andne	r2, r0, lr, ror #8
    8dac:	100024da 	ldrdne	r2, [r0], -sl
    8db0:	00570001 	subseq	r0, r7, r1
	...
    8dbc:	00247800 	eoreq	r7, r4, r0, lsl #16
    8dc0:	00249c10 	eoreq	r9, r4, r0, lsl ip
    8dc4:	5c000110 	stfpls	f0, [r0], {16}
	...
    8dd0:	100027f4 	strdne	r2, [r0], -r4
    8dd4:	100027f6 	strdne	r2, [r0], -r6
    8dd8:	007d0002 	rsbseq	r0, sp, r2
    8ddc:	100027f6 	strdne	r2, [r0], -r6
    8de0:	100027f8 	strdne	r2, [r0], -r8
    8de4:	087d0002 	ldmdaeq	sp!, {r1}^
    8de8:	100027f8 	strdne	r2, [r0], -r8
    8dec:	1000280e 	andne	r2, r0, lr, lsl #16
    8df0:	107d0002 	rsbsne	r0, sp, r2
    8df4:	1000280e 	andne	r2, r0, lr, lsl #16
    8df8:	10002810 	andne	r2, r0, r0, lsl r8
    8dfc:	087d0002 	ldmdaeq	sp!, {r1}^
    8e00:	10002810 	andne	r2, r0, r0, lsl r8
    8e04:	10002816 	andne	r2, r0, r6, lsl r8
    8e08:	107d0002 	rsbsne	r0, sp, r2
	...
    8e18:	100027f4 	strdne	r2, [r0], -r4
    8e1c:	10002803 	andne	r2, r0, r3, lsl #16
    8e20:	03500001 	cmpeq	r0, #1
    8e24:	16100028 	ldrne	r0, [r0], -r8, lsr #32
    8e28:	04100028 	ldreq	r0, [r0], #-40	; 0xffffffd8
    8e2c:	5001f300 	andpl	pc, r1, r0, lsl #6
    8e30:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    8e3c:	0027f400 	eoreq	pc, r7, r0, lsl #8
    8e40:	00280310 	eoreq	r0, r8, r0, lsl r3
    8e44:	51000110 	tstpl	r0, r0, lsl r1
    8e48:	10002803 	andne	r2, r0, r3, lsl #16
    8e4c:	10002816 	andne	r2, r0, r6, lsl r8
    8e50:	01f30004 	mvnseq	r0, r4
    8e54:	00009f51 	andeq	r9, r0, r1, asr pc
	...
    8e60:	27f40000 	ldrbcs	r0, [r4, r0]!
    8e64:	28031000 	stmdacs	r3, {ip}
    8e68:	00011000 	andeq	r1, r1, r0
    8e6c:	00280352 	eoreq	r0, r8, r2, asr r3
    8e70:	00281610 	eoreq	r1, r8, r0, lsl r6
    8e74:	f3000410 	vqshl.u8	d0, d0, d0
    8e78:	009f5201 	addseq	r5, pc, r1, lsl #4
	...
    8e84:	f4000000 	vst4.8	{d0-d3}, [r0], r0
    8e88:	03100027 	tsteq	r0, #39	; 0x27
    8e8c:	01100028 	tsteq	r0, r8, lsr #32
    8e90:	28035300 	stmdacs	r3, {r8, r9, ip, lr}
    8e94:	28161000 	ldmdacs	r6, {ip}
    8e98:	00041000 	andeq	r1, r4, r0
    8e9c:	9f5301f3 	svcls	0x005301f3
	...
    8eac:	100027f4 	strdne	r2, [r0], -r4
    8eb0:	10002810 	andne	r2, r0, r0, lsl r8
    8eb4:	00910002 	addseq	r0, r1, r2
    8eb8:	10002810 	andne	r2, r0, r0, lsl r8
    8ebc:	10002816 	andne	r2, r0, r6, lsl r8
    8ec0:	00910002 	addseq	r0, r1, r2
	...
    8ed0:	100027f4 	strdne	r2, [r0], -r4
    8ed4:	10002810 	andne	r2, r0, r0, lsl r8
    8ed8:	04910002 	ldreq	r0, [r1], #2
    8edc:	10002810 	andne	r2, r0, r0, lsl r8
    8ee0:	10002816 	andne	r2, r0, r6, lsl r8
    8ee4:	04910002 	ldreq	r0, [r1], #2
	...
    8ef4:	10002804 	andne	r2, r0, r4, lsl #16
    8ef8:	10002809 	andne	r2, r0, r9, lsl #16
    8efc:	10500001 	subsne	r0, r0, r1
    8f00:	14100028 	ldrne	r0, [r0], #-40	; 0xffffffd8
    8f04:	01100028 	tsteq	r0, r8, lsr #32
    8f08:	00005000 	andeq	r5, r0, r0
    8f0c:	00000000 	andeq	r0, r0, r0
    8f10:	00010000 	andeq	r0, r1, r0
    8f14:	280a0000 	stmdacs	sl, {}	; <UNPREDICTABLE>
    8f18:	280c1000 	stmdacs	ip, {ip}
    8f1c:	00021000 	andeq	r1, r2, r0
    8f20:	28149f31 	ldmdacs	r4, {r0, r4, r5, r8, r9, sl, fp, ip, pc}
    8f24:	28161000 	ldmdacs	r6, {ip}
    8f28:	00031000 	andeq	r1, r3, r0
    8f2c:	009fff09 	addseq	pc, pc, r9, lsl #30
    8f30:	00000000 	andeq	r0, r0, r0
    8f34:	50000000 	andpl	r0, r0, r0
    8f38:	54100026 	ldrpl	r0, [r0], #-38	; 0xffffffda
    8f3c:	02100026 	andseq	r0, r0, #38	; 0x26
    8f40:	54007d00 	strpl	r7, [r0], #-3328	; 0xfffff300
    8f44:	56100026 	ldrpl	r0, [r0], -r6, lsr #32
    8f48:	02100026 	andseq	r0, r0, #38	; 0x26
    8f4c:	561c7d00 	ldrpl	r7, [ip], -r0, lsl #26
    8f50:	a2100026 	andsge	r0, r0, #38	; 0x26
    8f54:	02100026 	andseq	r0, r0, #38	; 0x26
    8f58:	a2307d00 	eorsge	r7, r0, #0, 26
    8f5c:	a6100026 	ldrge	r0, [r0], -r6, lsr #32
    8f60:	02100026 	andseq	r0, r0, #38	; 0x26
    8f64:	a61c7d00 	ldrge	r7, [ip], -r0, lsl #26
    8f68:	b2100026 	andslt	r0, r0, #38	; 0x26
    8f6c:	02100026 	andseq	r0, r0, #38	; 0x26
    8f70:	00307d00 	eorseq	r7, r0, r0, lsl #26
	...
    8f7c:	50000000 	andpl	r0, r0, r0
    8f80:	60100026 	andsvs	r0, r0, r6, lsr #32
    8f84:	01100026 	tsteq	r0, r6, lsr #32
    8f88:	26605000 	strbtcs	r5, [r0], -r0
    8f8c:	26b21000 	ldrtcs	r1, [r2], r0
    8f90:	00011000 	andeq	r1, r1, r0
    8f94:	00000056 	andeq	r0, r0, r6, asr r0
	...
    8fa0:	00265000 	eoreq	r5, r6, r0
    8fa4:	00266310 	eoreq	r6, r6, r0, lsl r3
    8fa8:	51000110 	tstpl	r0, r0, lsl r1
    8fac:	10002663 	andne	r2, r0, r3, ror #12
    8fb0:	100026b2 			; <UNDEFINED> instruction: 0x100026b2
    8fb4:	00570001 	subseq	r0, r7, r1
	...
    8fc0:	50000000 	andpl	r0, r0, r0
    8fc4:	63100026 	tstvs	r0, #38	; 0x26
    8fc8:	01100026 	tsteq	r0, r6, lsr #32
    8fcc:	26635200 	strbtcs	r5, [r3], -r0, lsl #4
    8fd0:	26b21000 	ldrtcs	r1, [r2], r0
    8fd4:	00011000 	andeq	r1, r1, r0
    8fd8:	00000055 	andeq	r0, r0, r5, asr r0
	...
    8fe4:	00265000 	eoreq	r5, r6, r0
    8fe8:	00266310 	eoreq	r6, r6, r0, lsl r3
    8fec:	53000110 	movwpl	r0, #272	; 0x110
    8ff0:	10002663 	andne	r2, r0, r3, ror #12
    8ff4:	100026b2 			; <UNDEFINED> instruction: 0x100026b2
    8ff8:	00580001 	subseq	r0, r8, r1
	...
    9004:	50000000 	andpl	r0, r0, r0
    9008:	a6100026 	ldrge	r0, [r0], -r6, lsr #32
    900c:	02100026 	andseq	r0, r0, #38	; 0x26
    9010:	a6009100 	strge	r9, [r0], -r0, lsl #2
    9014:	b2100026 	andslt	r0, r0, #38	; 0x26
    9018:	02100026 	andseq	r0, r0, #38	; 0x26
    901c:	00009100 	andeq	r9, r0, r0, lsl #2
	...
    9028:	50000000 	andpl	r0, r0, r0
    902c:	a6100026 	ldrge	r0, [r0], -r6, lsr #32
    9030:	02100026 	andseq	r0, r0, #38	; 0x26
    9034:	a6049100 	strge	r9, [r4], -r0, lsl #2
    9038:	b2100026 	andslt	r0, r0, #38	; 0x26
    903c:	02100026 	andseq	r0, r0, #38	; 0x26
    9040:	00049100 	andeq	r9, r4, r0, lsl #2
	...
    9050:	6e000000 	cdpvs	0, 0, cr0, cr0, cr0, {0}
    9054:	79100026 	ldmdbvc	r0, {r1, r2, r5}
    9058:	01100026 	tsteq	r0, r6, lsr #32
    905c:	26795000 	ldrbtcs	r5, [r9], -r0
    9060:	269e1000 	ldrcs	r1, [lr], r0
    9064:	00011000 	andeq	r1, r1, r0
    9068:	0026a654 	eoreq	sl, r6, r4, asr r6
    906c:	0026a810 	eoreq	sl, r6, r0, lsl r8
    9070:	50000110 	andpl	r0, r0, r0, lsl r1
    9074:	100026a8 	andne	r2, r0, r8, lsr #13
    9078:	100026ae 	andne	r2, r0, lr, lsr #13
    907c:	00540001 	subseq	r0, r4, r1
	...
    908c:	00266400 	eoreq	r6, r6, r0, lsl #8
    9090:	00266a10 	eoreq	r6, r6, r0, lsl sl
    9094:	50000110 	andpl	r0, r0, r0, lsl r1
    9098:	1000266a 	andne	r2, r0, sl, ror #12
    909c:	100026ae 	andne	r2, r0, lr, lsr #13
    90a0:	ae590001 	cdpge	0, 5, cr0, cr9, cr1, {0}
    90a4:	b2100026 	andslt	r0, r0, #38	; 0x26
    90a8:	01100026 	tsteq	r0, r6, lsr #32
    90ac:	00005000 	andeq	r5, r0, r0
    90b0:	00000000 	andeq	r0, r0, r0
    90b4:	27cc0000 	strbcs	r0, [ip, r0]
    90b8:	27ce1000 	strbcs	r1, [lr, r0]
    90bc:	00021000 	andeq	r1, r2, r0
    90c0:	27ce007d 			; <UNDEFINED> instruction: 0x27ce007d
    90c4:	27d01000 	ldrbcs	r1, [r0, r0]
    90c8:	00021000 	andeq	r1, r2, r0
    90cc:	27d0087d 			; <UNDEFINED> instruction: 0x27d0087d
    90d0:	27f21000 	ldrbcs	r1, [r2, r0]!
    90d4:	00021000 	andeq	r1, r2, r0
    90d8:	27f2207d 			; <UNDEFINED> instruction: 0x27f2207d
    90dc:	27f41000 	ldrbcs	r1, [r4, r0]!
    90e0:	00021000 	andeq	r1, r2, r0
    90e4:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    90f0:	27cc0000 	strbcs	r0, [ip, r0]
    90f4:	27e71000 	strbcs	r1, [r7, r0]!
    90f8:	00011000 	andeq	r1, r1, r0
    90fc:	0027e750 	eoreq	lr, r7, r0, asr r7
    9100:	0027f410 	eoreq	pc, r7, r0, lsl r4	; <UNPREDICTABLE>
    9104:	f3000410 	vqshl.u8	d0, d0, d0
    9108:	009f5001 	addseq	r5, pc, r1
	...
    9114:	cc000000 	stcgt	0, cr0, [r0], {-0}
    9118:	e7100027 	ldr	r0, [r0, -r7, lsr #32]
    911c:	01100027 	tsteq	r0, r7, lsr #32
    9120:	27e75100 	strbcs	r5, [r7, r0, lsl #2]!
    9124:	27f41000 	ldrbcs	r1, [r4, r0]!
    9128:	00041000 	andeq	r1, r4, r0
    912c:	9f5101f3 	svcls	0x005101f3
	...
    913c:	100027cc 	andne	r2, r0, ip, asr #15
    9140:	100027e7 	andne	r2, r0, r7, ror #15
    9144:	e7520001 	ldrb	r0, [r2, -r1]
    9148:	f4100027 			; <UNDEFINED> instruction: 0xf4100027
    914c:	04100027 	ldreq	r0, [r0], #-39	; 0xffffffd9
    9150:	5201f300 	andpl	pc, r1, #0, 6
    9154:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    9160:	0027cc00 	eoreq	ip, r7, r0, lsl #24
    9164:	0027e710 	eoreq	lr, r7, r0, lsl r7
    9168:	53000110 	movwpl	r0, #272	; 0x110
    916c:	100027e7 	andne	r2, r0, r7, ror #15
    9170:	100027f4 	strdne	r2, [r0], -r4
    9174:	01f30004 	mvnseq	r0, r4
    9178:	00009f53 	andeq	r9, r0, r3, asr pc
	...
    9184:	100027e8 	andne	r2, r0, r8, ror #15
    9188:	100027ed 	andne	r2, r0, sp, ror #15
    918c:	00500001 	subseq	r0, r0, r1
    9190:	00000000 	andeq	r0, r0, r0
    9194:	da000000 	ble	919c <__HEAP_SIZE+0x819c>
    9198:	de100024 	cdple	0, 1, cr0, cr0, cr4, {1}
    919c:	02100024 	andseq	r0, r0, #36	; 0x24
    91a0:	de007d00 	cdple	13, 0, cr7, cr0, cr0, {0}
    91a4:	e0100024 	ands	r0, r0, r4, lsr #32
    91a8:	02100024 	andseq	r0, r0, #36	; 0x24
    91ac:	e01c7d00 	ands	r7, ip, r0, lsl #26
    91b0:	20100024 	andscs	r0, r0, r4, lsr #32
    91b4:	02100025 	andseq	r0, r0, #37	; 0x25
    91b8:	20307d00 	eorscs	r7, r0, r0, lsl #26
    91bc:	24100025 	ldrcs	r0, [r0], #-37	; 0xffffffdb
    91c0:	02100025 	andseq	r0, r0, #37	; 0x25
    91c4:	241c7d00 	ldrcs	r7, [ip], #-3328	; 0xfffff300
    91c8:	2c100025 	ldccs	0, cr0, [r0], {37}	; 0x25
    91cc:	02100025 	andseq	r0, r0, #37	; 0x25
    91d0:	00307d00 	eorseq	r7, r0, r0, lsl #26
	...
    91e8:	0024da00 	eoreq	sp, r4, r0, lsl #20
    91ec:	0024f610 	eoreq	pc, r4, r0, lsl r6	; <UNPREDICTABLE>
    91f0:	50000110 	andpl	r0, r0, r0, lsl r1
    91f4:	100024f6 	strdne	r2, [r0], -r6
    91f8:	1000251e 	andne	r2, r0, lr, lsl r5
    91fc:	1e550001 	cdpne	0, 5, cr0, cr5, cr1, {0}
    9200:	24100025 	ldrcs	r0, [r0], #-37	; 0xffffffdb
    9204:	04100025 	ldreq	r0, [r0], #-37	; 0xffffffdb
    9208:	5001f300 	andpl	pc, r1, r0, lsl #6
    920c:	0025249f 	mlaeq	r5, pc, r4, r2	; <UNPREDICTABLE>
    9210:	00252610 	eoreq	r2, r5, r0, lsl r6
    9214:	50000110 	andpl	r0, r0, r0, lsl r1
    9218:	10002526 	andne	r2, r0, r6, lsr #10
    921c:	10002528 	andne	r2, r0, r8, lsr #10
    9220:	01f30004 	mvnseq	r0, r4
    9224:	25289f50 	strcs	r9, [r8, #-3920]!	; 0xfffff0b0
    9228:	252a1000 	strcs	r1, [sl, #-0]!
    922c:	00011000 	andeq	r1, r1, r0
    9230:	00252a50 	eoreq	r2, r5, r0, asr sl
    9234:	00252c10 	eoreq	r2, r5, r0, lsl ip
    9238:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
	...
    924c:	100024da 	ldrdne	r2, [r0], -sl
    9250:	100024f4 	strdne	r2, [r0], -r4
    9254:	f4510001 			; <UNDEFINED> instruction: 0xf4510001
    9258:	1e100024 	cdpne	0, 1, cr0, cr0, cr4, {1}
    925c:	01100025 	tsteq	r0, r5, lsr #32
    9260:	251e5900 	ldrcs	r5, [lr, #-2304]	; 0xfffff700
    9264:	25241000 	strcs	r1, [r4, #-0]!
    9268:	00041000 	andeq	r1, r4, r0
    926c:	9f5101f3 	svcls	0x005101f3
    9270:	10002524 	andne	r2, r0, r4, lsr #10
    9274:	1000252c 	andne	r2, r0, ip, lsr #10
    9278:	00510001 	subseq	r0, r1, r1
	...
    9288:	da000000 	ble	9290 <__HEAP_SIZE+0x8290>
    928c:	f2100024 	vhadd.s16	d0, d0, d20
    9290:	01100024 	tsteq	r0, r4, lsr #32
    9294:	24f25200 	ldrbtcs	r5, [r2], #512	; 0x200
    9298:	251e1000 	ldrcs	r1, [lr, #-0]
    929c:	00011000 	andeq	r1, r1, r0
    92a0:	00251e58 	eoreq	r1, r5, r8, asr lr
    92a4:	00252410 	eoreq	r2, r5, r0, lsl r4
    92a8:	f3000410 	vqshl.u8	d0, d0, d0
    92ac:	249f5201 	ldrcs	r5, [pc], #513	; 92b4 <__HEAP_SIZE+0x82b4>
    92b0:	2c100025 	ldccs	0, cr0, [r0], {37}	; 0x25
    92b4:	01100025 	tsteq	r0, r5, lsr #32
    92b8:	00005200 	andeq	r5, r0, r0, lsl #4
	...
    92c8:	24da0000 	ldrbcs	r0, [sl], #0
    92cc:	24f91000 	ldrbtcs	r1, [r9], #0
    92d0:	00011000 	andeq	r1, r1, r0
    92d4:	0024f953 	eoreq	pc, r4, r3, asr r9	; <UNPREDICTABLE>
    92d8:	00251e10 	eoreq	r1, r5, r0, lsl lr
    92dc:	57000110 	smladpl	r0, r0, r1, r0
    92e0:	1000251e 	andne	r2, r0, lr, lsl r5
    92e4:	10002524 	andne	r2, r0, r4, lsr #10
    92e8:	01f30004 	mvnseq	r0, r4
    92ec:	25249f53 	strcs	r9, [r4, #-3923]!	; 0xfffff0ad
    92f0:	252c1000 	strcs	r1, [ip, #-0]!
    92f4:	00011000 	andeq	r1, r1, r0
    92f8:	00000053 	andeq	r0, r0, r3, asr r0
	...
    9304:	0024da00 	eoreq	sp, r4, r0, lsl #20
    9308:	00252410 	eoreq	r2, r5, r0, lsl r4
    930c:	91000210 	tstls	r0, r0, lsl r2
    9310:	00252400 	eoreq	r2, r5, r0, lsl #8
    9314:	00252c10 	eoreq	r2, r5, r0, lsl ip
    9318:	91000210 	tstls	r0, r0, lsl r2
	...
    9328:	0024da00 	eoreq	sp, r4, r0, lsl #20
    932c:	00252410 	eoreq	r2, r5, r0, lsl r4
    9330:	91000210 	tstls	r0, r0, lsl r2
    9334:	00252404 	eoreq	r2, r5, r4, lsl #8
    9338:	00252c10 	eoreq	r2, r5, r0, lsl ip
    933c:	91000210 	tstls	r0, r0, lsl r2
    9340:	00000004 	andeq	r0, r0, r4
	...
    934c:	0024da00 	eoreq	sp, r4, r0, lsl #20
    9350:	00252410 	eoreq	r2, r5, r0, lsl r4
    9354:	91000210 	tstls	r0, r0, lsl r2
    9358:	00252408 	eoreq	r2, r5, r8, lsl #8
    935c:	00252c10 	eoreq	r2, r5, r0, lsl ip
    9360:	91000210 	tstls	r0, r0, lsl r2
    9364:	00000008 	andeq	r0, r0, r8
	...
    9370:	0024da00 	eoreq	sp, r4, r0, lsl #20
    9374:	00252410 	eoreq	r2, r5, r0, lsl r4
    9378:	91000210 	tstls	r0, r0, lsl r2
    937c:	0025240c 	eoreq	r2, r5, ip, lsl #8
    9380:	00252c10 	eoreq	r2, r5, r0, lsl ip
    9384:	91000210 	tstls	r0, r0, lsl r2
    9388:	0000000c 	andeq	r0, r0, ip
    938c:	00000000 	andeq	r0, r0, r0
    9390:	00000100 	andeq	r0, r0, r0, lsl #2
    9394:	0024f000 	eoreq	pc, r4, r0
    9398:	00251e10 	eoreq	r1, r5, r0, lsl lr
    939c:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    93a0:	1000252a 	andne	r2, r0, sl, lsr #10
    93a4:	1000252c 	andne	r2, r0, ip, lsr #10
    93a8:	00500001 	subseq	r0, r0, r1
	...
    93b8:	02000000 	andeq	r0, r0, #0
    93bc:	00007d00 	andeq	r7, r0, r0, lsl #26
    93c0:	00000000 	andeq	r0, r0, r0
    93c4:	02000000 	andeq	r0, r0, #0
    93c8:	00087d00 	andeq	r7, r8, r0, lsl #26
    93cc:	00000000 	andeq	r0, r0, r0
    93d0:	02000000 	andeq	r0, r0, #0
    93d4:	00187d00 	andseq	r7, r8, r0, lsl #26
    93d8:	00000000 	andeq	r0, r0, r0
    93dc:	02000000 	andeq	r0, r0, #0
    93e0:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    93f8:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    9404:	6c910002 	ldcvs	0, cr0, [r1], {2}
	...
    9410:	01f30004 	mvnseq	r0, r4
    9414:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    942c:	00510001 	subseq	r0, r1, r1
    9430:	00000000 	andeq	r0, r0, r0
    9434:	02000000 	andeq	r0, r0, #0
    9438:	00709100 	rsbseq	r9, r0, r0, lsl #2
    943c:	00000000 	andeq	r0, r0, r0
    9440:	04000000 	streq	r0, [r0], #-0
    9444:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    9448:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    945c:	01000000 	mrseq	r0, (UNDEF: 0)
    9460:	00005200 	andeq	r5, r0, r0, lsl #4
    9464:	00000000 	andeq	r0, r0, r0
    9468:	00010000 	andeq	r0, r1, r0
    946c:	00000054 	andeq	r0, r0, r4, asr r0
    9470:	00000000 	andeq	r0, r0, r0
    9474:	f3000400 	vshl.u8	d0, d0, d0
    9478:	009f5201 	addseq	r5, pc, r1, lsl #4
	...
    9490:	53000100 	movwpl	r0, #256	; 0x100
	...
    949c:	00520001 	subseq	r0, r2, r1
    94a0:	00000000 	andeq	r0, r0, r0
    94a4:	04000000 	streq	r0, [r0], #-0
    94a8:	5301f300 	movwpl	pc, #4864	; 0x1300	; <UNPREDICTABLE>
    94ac:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    94bc:	01000000 	mrseq	r0, (UNDEF: 0)
    94c0:	00005000 	andeq	r5, r0, r0
	...
    94d0:	00020000 	andeq	r0, r2, r0
    94d4:	0000007d 	andeq	r0, r0, sp, ror r0
    94d8:	00000000 	andeq	r0, r0, r0
    94dc:	00020000 	andeq	r0, r2, r0
    94e0:	0000087d 	andeq	r0, r0, sp, ror r8
    94e4:	00000000 	andeq	r0, r0, r0
    94e8:	00020000 	andeq	r0, r2, r0
    94ec:	0000187d 	andeq	r1, r0, sp, ror r8
    94f0:	00000000 	andeq	r0, r0, r0
    94f4:	00020000 	andeq	r0, r2, r0
    94f8:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    9510:	00500001 	subseq	r0, r0, r1
    9514:	00000000 	andeq	r0, r0, r0
    9518:	02000000 	andeq	r0, r0, #0
    951c:	006c9100 	rsbeq	r9, ip, r0, lsl #2
    9520:	00000000 	andeq	r0, r0, r0
    9524:	04000000 	streq	r0, [r0], #-0
    9528:	5001f300 	andpl	pc, r1, r0, lsl #6
    952c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    9540:	01000000 	mrseq	r0, (UNDEF: 0)
    9544:	00005100 	andeq	r5, r0, r0, lsl #2
    9548:	00000000 	andeq	r0, r0, r0
    954c:	00020000 	andeq	r0, r2, r0
    9550:	00007091 	muleq	r0, r1, r0
    9554:	00000000 	andeq	r0, r0, r0
    9558:	00040000 	andeq	r0, r4, r0
    955c:	9f5101f3 	svcls	0x005101f3
	...
    9574:	00010000 	andeq	r0, r1, r0
    9578:	00000052 	andeq	r0, r0, r2, asr r0
    957c:	00000000 	andeq	r0, r0, r0
    9580:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    958c:	01f30004 	mvnseq	r0, r4
    9590:	00009f52 	andeq	r9, r0, r2, asr pc
	...
    95a8:	00530001 	subseq	r0, r3, r1
    95ac:	00000000 	andeq	r0, r0, r0
    95b0:	01000000 	mrseq	r0, (UNDEF: 0)
    95b4:	00005200 	andeq	r5, r0, r0, lsl #4
    95b8:	00000000 	andeq	r0, r0, r0
    95bc:	00040000 	andeq	r0, r4, r0
    95c0:	9f5301f3 	svcls	0x005301f3
	...
    95d4:	00010000 	andeq	r0, r1, r0
    95d8:	00000050 	andeq	r0, r0, r0, asr r0
	...
    95e8:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    95f4:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    95f8:	00000010 	andeq	r0, r0, r0, lsl r0
	...
    960c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    9618:	00540001 	subseq	r0, r4, r1
	...
    962c:	01000000 	mrseq	r0, (UNDEF: 0)
    9630:	00005100 	andeq	r5, r0, r0, lsl #2
    9634:	00000000 	andeq	r0, r0, r0
    9638:	00010000 	andeq	r0, r1, r0
    963c:	00000055 	andeq	r0, r0, r5, asr r0
    9640:	00000000 	andeq	r0, r0, r0
    9644:	00000100 	andeq	r0, r0, r0, lsl #2
	...
    9650:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    965c:	00540001 	subseq	r0, r4, r1
	...
    966c:	02000000 	andeq	r0, r0, #0
    9670:	00007d00 	andeq	r7, r0, r0, lsl #26
    9674:	00000000 	andeq	r0, r0, r0
    9678:	02000000 	andeq	r0, r0, #0
    967c:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    9694:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    96a0:	00540001 	subseq	r0, r4, r1
    96a4:	00000000 	andeq	r0, r0, r0
    96a8:	04000000 	streq	r0, [r0], #-0
    96ac:	5001f300 	andpl	pc, r1, r0, lsl #6
    96b0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    96b4:	00000000 	andeq	r0, r0, r0
    96b8:	00000100 	andeq	r0, r0, r0, lsl #2
	...
    96c4:	01000000 	mrseq	r0, (UNDEF: 0)
    96c8:	00005000 	andeq	r5, r0, r0
    96cc:	00000000 	andeq	r0, r0, r0
    96d0:	00010000 	andeq	r0, r1, r0
    96d4:	00000054 	andeq	r0, r0, r4, asr r0
    96d8:	00000000 	andeq	r0, r0, r0
    96dc:	f3000400 	vshl.u8	d0, d0, d0
    96e0:	009f5001 	addseq	r5, pc, r1
	...
    96f4:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    9708:	007d0002 	rsbseq	r0, sp, r2
	...
    9714:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    9730:	00010000 	andeq	r0, r1, r0
    9734:	00000050 	andeq	r0, r0, r0, asr r0
    9738:	00000000 	andeq	r0, r0, r0
    973c:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    9748:	01f30004 	mvnseq	r0, r4
    974c:	00009f50 	andeq	r9, r0, r0, asr pc
    9750:	00000000 	andeq	r0, r0, r0
    9754:	00010000 	andeq	r0, r1, r0
    9758:	00000054 	andeq	r0, r0, r4, asr r0
    975c:	00000000 	andeq	r0, r0, r0
    9760:	f3000400 	vshl.u8	d0, d0, d0
    9764:	009f5001 	addseq	r5, pc, r1
	...
    9778:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    9784:	00000002 	andeq	r0, r0, r2
	...
    9794:	00010000 	andeq	r0, r1, r0
    9798:	00000050 	andeq	r0, r0, r0, asr r0
    979c:	00000000 	andeq	r0, r0, r0
    97a0:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    97ac:	01f30004 	mvnseq	r0, r4
    97b0:	00009f50 	andeq	r9, r0, r0, asr pc
    97b4:	00000000 	andeq	r0, r0, r0
    97b8:	00010000 	andeq	r0, r1, r0
    97bc:	00000054 	andeq	r0, r0, r4, asr r0
    97c0:	00000000 	andeq	r0, r0, r0
    97c4:	f3000400 	vshl.u8	d0, d0, d0
    97c8:	009f5001 	addseq	r5, pc, r1
    97cc:	00000000 	andeq	r0, r0, r0
    97d0:	14000000 	strne	r0, [r0], #-0
    97d4:	16100032 			; <UNDEFINED> instruction: 0x16100032
    97d8:	02100032 	andseq	r0, r0, #50	; 0x32
    97dc:	16007d00 	strne	r7, [r0], -r0, lsl #26
    97e0:	18100032 	ldmdane	r0, {r1, r4, r5}
    97e4:	02100032 	andseq	r0, r0, #50	; 0x32
    97e8:	180c7d00 	stmdane	ip, {r8, sl, fp, ip, sp, lr}
    97ec:	28100032 	ldmdacs	r0, {r1, r4, r5}
    97f0:	02100032 	andseq	r0, r0, #50	; 0x32
    97f4:	28187d00 	ldmdacs	r8, {r8, sl, fp, ip, sp, lr}
    97f8:	2a100032 	bcs	4098c8 <__RAM_SIZE+0x3098c8>
    97fc:	02100032 	andseq	r0, r0, #50	; 0x32
    9800:	2a0c7d00 	bcs	328c08 <__RAM_SIZE+0x228c08>
    9804:	74100032 	ldrvc	r0, [r0], #-50	; 0xffffffce
    9808:	02100032 	andseq	r0, r0, #50	; 0x32
    980c:	00187d00 	andseq	r7, r8, r0, lsl #26
    9810:	00000000 	andeq	r0, r0, r0
    9814:	40000000 	andmi	r0, r0, r0
    9818:	42100030 	andsmi	r0, r0, #48	; 0x30
    981c:	02100030 	andseq	r0, r0, #48	; 0x30
    9820:	42007d00 	andmi	r7, r0, #0, 26
    9824:	70100030 	andsvc	r0, r0, r0, lsr r0
    9828:	02100030 	andseq	r0, r0, #48	; 0x30
    982c:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    9838:	00304600 	eorseq	r4, r0, r0, lsl #12
    983c:	00304f10 	eorseq	r4, r0, r0, lsl pc
    9840:	73000210 	movwvc	r0, #528	; 0x210
	...
    984c:	00000100 	andeq	r0, r0, r0, lsl #2
    9850:	00305a00 	eorseq	r5, r0, r0, lsl #20
    9854:	00306610 	eorseq	r6, r0, r0, lsl r6
    9858:	53000110 	movwpl	r0, #272	; 0x110
    985c:	10003066 	andne	r3, r0, r6, rrx
    9860:	10003070 	andne	r3, r0, r0, ror r0
    9864:	a0030005 	andge	r0, r3, r5
    9868:	0038008b 	eorseq	r0, r8, fp, lsl #1
    986c:	00000000 	andeq	r0, r0, r0
    9870:	04000000 	streq	r0, [r0], #-0
    9874:	06100031 			; <UNDEFINED> instruction: 0x06100031
    9878:	02100031 	andseq	r0, r0, #49	; 0x31
    987c:	06007d00 	streq	r7, [r0], -r0, lsl #26
    9880:	08100031 	ldmdaeq	r0, {r0, r4, r5}
    9884:	02100031 	andseq	r0, r0, #49	; 0x31
    9888:	080c7d00 	stmdaeq	ip, {r8, sl, fp, ip, sp, lr}
    988c:	f6100031 			; <UNDEFINED> instruction: 0xf6100031
    9890:	02100031 	andseq	r0, r0, #49	; 0x31
    9894:	f6287d00 			; <UNDEFINED> instruction: 0xf6287d00
    9898:	fc100031 	ldc2	0, cr0, [r0], {49}	; 0x31
    989c:	02100031 	andseq	r0, r0, #49	; 0x31
    98a0:	000c7d00 	andeq	r7, ip, r0, lsl #26
	...
    98ac:	00313c00 	eorseq	r3, r1, r0, lsl #24
    98b0:	0031f410 	eorseq	pc, r1, r0, lsl r4	; <UNPREDICTABLE>
    98b4:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
	...
    98cc:	1000314e 	andne	r3, r0, lr, asr #2
    98d0:	1000317a 	andne	r3, r0, sl, ror r1
    98d4:	7a500001 	bvc	14098e0 <__RAM_SIZE+0x13098e0>
    98d8:	ac100031 	ldcge	0, cr0, [r0], {49}	; 0x31
    98dc:	01100031 	tsteq	r0, r1, lsr r0
    98e0:	31ac5500 			; <UNDEFINED> instruction: 0x31ac5500
    98e4:	31d21000 	bicscc	r1, r2, r0
    98e8:	00011000 	andeq	r1, r1, r0
    98ec:	0031d250 	eorseq	sp, r1, r0, asr r2
    98f0:	0031d810 	eorseq	sp, r1, r0, lsl r8
    98f4:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
    98f8:	100031d8 	ldrdne	r3, [r0], -r8
    98fc:	100031ee 	andne	r3, r0, lr, ror #3
    9900:	ee500001 	cdp	0, 5, cr0, cr0, cr1, {0}
    9904:	f4100031 			; <UNDEFINED> instruction: 0xf4100031
    9908:	01100031 	tsteq	r0, r1, lsr r0
    990c:	00005500 	andeq	r5, r0, r0, lsl #10
    9910:	00000000 	andeq	r0, r0, r0
    9914:	00010000 	andeq	r0, r1, r0
    9918:	10003130 	andne	r3, r0, r0, lsr r1
    991c:	1000313a 	andne	r3, r0, sl, lsr r1
    9920:	64910003 	ldrvs	r0, [r1], #3
    9924:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    9928:	00000000 	andeq	r0, r0, r0
    992c:	002f9000 	eoreq	r9, pc, r0
    9930:	002f9210 	eoreq	r9, pc, r0, lsl r2	; <UNPREDICTABLE>
    9934:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    9938:	002f9200 	eoreq	r9, pc, r0, lsl #4
    993c:	002fd810 	eoreq	sp, pc, r0, lsl r8	; <UNPREDICTABLE>
    9940:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    9944:	00000008 	andeq	r0, r0, r8
	...
    9960:	002f9000 	eoreq	r9, pc, r0
    9964:	002fa410 	eoreq	sl, pc, r0, lsl r4	; <UNPREDICTABLE>
    9968:	50000110 	andpl	r0, r0, r0, lsl r1
    996c:	10002fa4 	andne	r2, r0, r4, lsr #31
    9970:	10002fa6 	andne	r2, r0, r6, lsr #31
    9974:	01f30004 	mvnseq	r0, r4
    9978:	2fa69f50 	svccs	0x00a69f50
    997c:	2fac1000 	svccs	0x00ac1000
    9980:	00011000 	andeq	r1, r1, r0
    9984:	002fac50 	eoreq	sl, pc, r0, asr ip	; <UNPREDICTABLE>
    9988:	002faf10 	eoreq	sl, pc, r0, lsl pc	; <UNPREDICTABLE>
    998c:	71000310 	tstvc	r0, r0, lsl r3
    9990:	2faf9f7c 	svccs	0x00af9f7c
    9994:	2fb41000 	svccs	0x00b41000
    9998:	00041000 	andeq	r1, r4, r0
    999c:	9f5001f3 	svcls	0x005001f3
    99a0:	10002fb4 			; <UNDEFINED> instruction: 0x10002fb4
    99a4:	10002fc2 	andne	r2, r0, r2, asr #31
    99a8:	c2500001 	subsgt	r0, r0, #1
    99ac:	c510002f 	ldrgt	r0, [r0, #-47]	; 0xffffffd1
    99b0:	0310002f 	tsteq	r0, #47	; 0x2f
    99b4:	9f7c7100 	svcls	0x007c7100
    99b8:	10002fc5 	andne	r2, r0, r5, asr #31
    99bc:	10002fca 	andne	r2, r0, sl, asr #31
    99c0:	01f30004 	mvnseq	r0, r4
    99c4:	2fca9f50 	svccs	0x00ca9f50
    99c8:	2fcc1000 	svccs	0x00cc1000
    99cc:	00011000 	andeq	r1, r1, r0
    99d0:	002fcc50 	eoreq	ip, pc, r0, asr ip	; <UNPREDICTABLE>
    99d4:	002fd810 	eoreq	sp, pc, r0, lsl r8	; <UNPREDICTABLE>
    99d8:	f3000410 	vqshl.u8	d0, d0, d0
    99dc:	009f5001 	addseq	r5, pc, r1
	...
    99fc:	002f9000 	eoreq	r9, pc, r0
    9a00:	002fa410 	eoreq	sl, pc, r0, lsl r4	; <UNPREDICTABLE>
    9a04:	51000110 	tstpl	r0, r0, lsl r1
    9a08:	10002fa4 	andne	r2, r0, r4, lsr #31
    9a0c:	10002fa6 	andne	r2, r0, r6, lsr #31
    9a10:	01f30004 	mvnseq	r0, r4
    9a14:	2fa69f51 	svccs	0x00a69f51
    9a18:	2fa81000 	svccs	0x00a81000
    9a1c:	00011000 	andeq	r1, r1, r0
    9a20:	002fa851 	eoreq	sl, pc, r1, asr r8	; <UNPREDICTABLE>
    9a24:	002fac10 	eoreq	sl, pc, r0, lsl ip	; <UNPREDICTABLE>
    9a28:	70000210 	andvc	r0, r0, r0, lsl r2
    9a2c:	002fac04 	eoreq	sl, pc, r4, lsl #24
    9a30:	002faf10 	eoreq	sl, pc, r0, lsl pc	; <UNPREDICTABLE>
    9a34:	71000210 	tstvc	r0, r0, lsl r2
    9a38:	002faf00 	eoreq	sl, pc, r0, lsl #30
    9a3c:	002fb410 	eoreq	fp, pc, r0, lsl r4	; <UNPREDICTABLE>
    9a40:	f3000410 	vqshl.u8	d0, d0, d0
    9a44:	b49f5101 	ldrlt	r5, [pc], #257	; 9a4c <__HEAP_SIZE+0x8a4c>
    9a48:	be10002f 	cdplt	0, 1, cr0, cr0, cr15, {1}
    9a4c:	0110002f 	tsteq	r0, pc, lsr #32
    9a50:	2fbe5100 	svccs	0x00be5100
    9a54:	2fc21000 	svccs	0x00c21000
    9a58:	00021000 	andeq	r1, r2, r0
    9a5c:	2fc20470 	svccs	0x00c20470
    9a60:	2fc51000 	svccs	0x00c51000
    9a64:	00021000 	andeq	r1, r2, r0
    9a68:	2fc50071 	svccs	0x00c50071
    9a6c:	2fca1000 	svccs	0x00ca1000
    9a70:	00041000 	andeq	r1, r4, r0
    9a74:	9f5101f3 	svcls	0x005101f3
    9a78:	10002fca 	andne	r2, r0, sl, asr #31
    9a7c:	10002fd8 	ldrdne	r2, [r0], -r8
    9a80:	00510001 	subseq	r0, r1, r1
	...
    9a94:	002f9000 	eoreq	r9, pc, r0
    9a98:	002f9c10 	eoreq	r9, pc, r0, lsl ip	; <UNPREDICTABLE>
    9a9c:	52000110 	andpl	r0, r0, #16, 2
    9aa0:	10002f9c 	mulne	r0, ip, pc	; <UNPREDICTABLE>
    9aa4:	10002fb4 			; <UNDEFINED> instruction: 0x10002fb4
    9aa8:	01f30004 	mvnseq	r0, r4
    9aac:	2fb49f52 	svccs	0x00b49f52
    9ab0:	2fc51000 	svccs	0x00c51000
    9ab4:	00011000 	andeq	r1, r1, r0
    9ab8:	002fc552 	eoreq	ip, pc, r2, asr r5	; <UNPREDICTABLE>
    9abc:	002fca10 	eoreq	ip, pc, r0, lsl sl	; <UNPREDICTABLE>
    9ac0:	f3000410 	vqshl.u8	d0, d0, d0
    9ac4:	ca9f5201 	bgt	fe7de2d0 <__StackTop+0xc66de2d0>
    9ac8:	d810002f 	ldmdale	r0, {r0, r1, r2, r3, r5}
    9acc:	0110002f 	tsteq	r0, pc, lsr #32
    9ad0:	00005200 	andeq	r5, r0, r0, lsl #4
	...
    9ae4:	10002f90 	mulne	r0, r0, pc	; <UNPREDICTABLE>
    9ae8:	10002f9e 	mulne	r0, lr, pc	; <UNPREDICTABLE>
    9aec:	9e530001 	cdpls	0, 5, cr0, cr3, cr1, {0}
    9af0:	b410002f 	ldrlt	r0, [r0], #-47	; 0xffffffd1
    9af4:	0410002f 	ldreq	r0, [r0], #-47	; 0xffffffd1
    9af8:	5301f300 	movwpl	pc, #4864	; 0x1300	; <UNPREDICTABLE>
    9afc:	002fb49f 	mlaeq	pc, pc, r4, fp	; <UNPREDICTABLE>
    9b00:	002fc010 	eoreq	ip, pc, r0, lsl r0	; <UNPREDICTABLE>
    9b04:	53000110 	movwpl	r0, #272	; 0x110
    9b08:	10002fc0 	andne	r2, r0, r0, asr #31
    9b0c:	10002fca 	andne	r2, r0, sl, asr #31
    9b10:	01f30004 	mvnseq	r0, r4
    9b14:	2fca9f53 	svccs	0x00ca9f53
    9b18:	2fd81000 	svccs	0x00d81000
    9b1c:	00011000 	andeq	r1, r1, r0
    9b20:	00000053 	andeq	r0, r0, r3, asr r0
    9b24:	00000000 	andeq	r0, r0, r0
    9b28:	00000100 	andeq	r0, r0, r0, lsl #2
    9b2c:	92000000 	andls	r0, r0, #0
    9b30:	a410002f 	ldrge	r0, [r0], #-47	; 0xffffffd1
    9b34:	0210002f 	andseq	r0, r0, #47	; 0x2f
    9b38:	a69f3000 	ldrge	r3, [pc], r0
    9b3c:	cc10002f 	ldcgt	0, cr0, [r0], {47}	; 0x2f
    9b40:	0210002f 	andseq	r0, r0, #47	; 0x2f
    9b44:	cc9f3000 	ldcgt	0, cr3, [pc], {0}
    9b48:	d810002f 	ldmdale	r0, {r0, r1, r2, r3, r5}
    9b4c:	0210002f 	andseq	r0, r0, #47	; 0x2f
    9b50:	009f3100 	addseq	r3, pc, r0, lsl #2
    9b54:	00000000 	andeq	r0, r0, r0
    9b58:	70000000 	andvc	r0, r0, r0
    9b5c:	72100030 	andsvc	r0, r0, #48	; 0x30
    9b60:	02100030 	andseq	r0, r0, #48	; 0x30
    9b64:	72007d00 	andvc	r7, r0, #0, 26
    9b68:	9c100030 	ldcls	0, cr0, [r0], {48}	; 0x30
    9b6c:	02100030 	andseq	r0, r0, #48	; 0x30
    9b70:	00107d00 	andseq	r7, r0, r0, lsl #26
	...
    9b7c:	70000000 	andvc	r0, r0, r0
    9b80:	77100030 			; <UNDEFINED> instruction: 0x77100030
    9b84:	01100030 	tsteq	r0, r0, lsr r0
    9b88:	30775000 	rsbscc	r5, r7, r0
    9b8c:	309c1000 	addscc	r1, ip, r0
    9b90:	00011000 	andeq	r1, r1, r0
    9b94:	00000055 	andeq	r0, r0, r5, asr r0
	...
    9ba4:	00307a00 	eorseq	r7, r0, r0, lsl #20
    9ba8:	00308610 	eorseq	r8, r0, r0, lsl r6
    9bac:	50000110 	andpl	r0, r0, r0, lsl r1
    9bb0:	10003086 	andne	r3, r0, r6, lsl #1
    9bb4:	1000308e 	andne	r3, r0, lr, lsl #1
    9bb8:	8e540001 	cdphi	0, 5, cr0, cr4, cr1, {0}
    9bbc:	91100030 	tstls	r0, r0, lsr r0
    9bc0:	01100030 	tsteq	r0, r0, lsr r0
    9bc4:	30915000 	addscc	r5, r1, r0
    9bc8:	309c1000 	addscc	r1, ip, r0
    9bcc:	00011000 	andeq	r1, r1, r0
    9bd0:	00000054 	andeq	r0, r0, r4, asr r0
	...
    9be0:	002f7000 	eoreq	r7, pc, r0
    9be4:	002f8210 	eoreq	r8, pc, r0, lsl r2	; <UNPREDICTABLE>
    9be8:	50000110 	andpl	r0, r0, r0, lsl r1
    9bec:	10002f82 	andne	r2, r0, r2, lsl #31
    9bf0:	10002f84 	andne	r2, r0, r4, lsl #31
    9bf4:	01f30004 	mvnseq	r0, r4
    9bf8:	2f849f50 	svccs	0x00849f50
    9bfc:	2f8a1000 	svccs	0x008a1000
    9c00:	00011000 	andeq	r1, r1, r0
    9c04:	002f8a50 	eoreq	r8, pc, r0, asr sl	; <UNPREDICTABLE>
    9c08:	002f9010 	eoreq	r9, pc, r0, lsl r0	; <UNPREDICTABLE>
    9c0c:	f3000410 	vqshl.u8	d0, d0, d0
    9c10:	009f5001 	addseq	r5, pc, r1
	...
    9c1c:	82000000 	andhi	r0, r0, #0
    9c20:	8410002f 	ldrhi	r0, [r0], #-47	; 0xffffffd1
    9c24:	0110002f 	tsteq	r0, pc, lsr #32
    9c28:	2f8a5000 	svccs	0x008a5000
    9c2c:	2f901000 	svccs	0x00901000
    9c30:	00021000 	andeq	r1, r2, r0
    9c34:	00009f30 	andeq	r9, r0, r0, lsr pc
    9c38:	00000000 	andeq	r0, r0, r0
    9c3c:	309c0000 	addscc	r0, ip, r0
    9c40:	309e1000 	addscc	r1, lr, r0
    9c44:	00021000 	andeq	r1, r2, r0
    9c48:	309e007d 	addscc	r0, lr, sp, ror r0
    9c4c:	30a01000 	adccc	r1, r0, r0
    9c50:	00021000 	andeq	r1, r2, r0
    9c54:	30a0107d 	adccc	r1, r0, sp, ror r0
    9c58:	30da1000 	sbcscc	r1, sl, r0
    9c5c:	00021000 	andeq	r1, r2, r0
    9c60:	30da187d 	sbcscc	r1, sl, sp, ror r8
    9c64:	30dc1000 	sbcscc	r1, ip, r0
    9c68:	00021000 	andeq	r1, r2, r0
    9c6c:	30dc107d 	sbcscc	r1, ip, sp, ror r0
    9c70:	31041000 	mrscc	r1, (UNDEF: 4)
    9c74:	00021000 	andeq	r1, r2, r0
    9c78:	0000187d 	andeq	r1, r0, sp, ror r8
	...
    9c84:	309c0000 	addscc	r0, ip, r0
    9c88:	30a71000 	adccc	r1, r7, r0
    9c8c:	00011000 	andeq	r1, r1, r0
    9c90:	0030a750 	eorseq	sl, r0, r0, asr r7
    9c94:	00310410 	eorseq	r0, r1, r0, lsl r4
    9c98:	56000110 			; <UNDEFINED> instruction: 0x56000110
	...
    9cac:	1000309c 	mulne	r0, ip, r0
    9cb0:	100030a7 	andne	r3, r0, r7, lsr #1
    9cb4:	a7510001 	ldrbge	r0, [r1, -r1]
    9cb8:	ec100030 	ldc	0, cr0, [r0], {48}	; 0x30
    9cbc:	01100030 	tsteq	r0, r0, lsr r0
    9cc0:	30ec5400 	rsccc	r5, ip, r0, lsl #8
    9cc4:	30ee1000 	rsccc	r1, lr, r0
    9cc8:	00041000 	andeq	r1, r4, r0
    9ccc:	9f5101f3 	svcls	0x005101f3
    9cd0:	100030ee 	andne	r3, r0, lr, ror #1
    9cd4:	10003104 	andne	r3, r0, r4, lsl #2
    9cd8:	00540001 	subseq	r0, r4, r1
	...
    9cf0:	0030ae00 	eorseq	sl, r0, r0, lsl #28
    9cf4:	0030ce10 	eorseq	ip, r0, r0, lsl lr
    9cf8:	50000110 	andpl	r0, r0, r0, lsl r1
    9cfc:	100030ce 	andne	r3, r0, lr, asr #1
    9d00:	100030d8 	ldrdne	r3, [r0], -r8
    9d04:	dc550001 	mrrcle	0, 0, r0, r5, cr1
    9d08:	df100030 	svcle	0x00100030
    9d0c:	01100030 	tsteq	r0, r0, lsr r0
    9d10:	30df5000 	sbcscc	r5, pc, r0
    9d14:	30ea1000 	rsccc	r1, sl, r0
    9d18:	00011000 	andeq	r1, r1, r0
    9d1c:	0030ea55 	eorseq	lr, r0, r5, asr sl
    9d20:	0030ee10 	eorseq	lr, r0, r0, lsl lr
    9d24:	50000110 	andpl	r0, r0, r0, lsl r1
    9d28:	100030ee 	andne	r3, r0, lr, ror #1
    9d2c:	100030f4 	strdne	r3, [r0], -r4
    9d30:	f4550001 			; <UNDEFINED> instruction: 0xf4550001
    9d34:	f7100030 			; <UNDEFINED> instruction: 0xf7100030
    9d38:	01100030 	tsteq	r0, r0, lsr r0
    9d3c:	00005000 	andeq	r5, r0, r0
    9d40:	00000000 	andeq	r0, r0, r0
    9d44:	31fc0000 	mvnscc	r0, r0
    9d48:	31fe1000 	mvnscc	r1, r0
    9d4c:	00021000 	andeq	r1, r2, r0
    9d50:	31fe007d 	mvnscc	r0, sp, ror r0
    9d54:	32001000 	andcc	r1, r0, #0
    9d58:	00021000 	andeq	r1, r2, r0
    9d5c:	3200047d 	andcc	r0, r0, #2097152000	; 0x7d000000
    9d60:	32121000 	andscc	r1, r2, #0
    9d64:	00021000 	andeq	r1, r2, r0
    9d68:	0000107d 	andeq	r1, r0, sp, ror r0
    9d6c:	00000000 	andeq	r0, r0, r0
    9d70:	00010000 	andeq	r0, r1, r0
    9d74:	31fc0000 	mvnscc	r0, r0
    9d78:	32001000 	andcc	r1, r0, #0
    9d7c:	00011000 	andeq	r1, r1, r0
    9d80:	00320050 	eorseq	r0, r2, r0, asr r0
    9d84:	00321210 	eorseq	r1, r2, r0, lsl r2
    9d88:	f3000410 	vqshl.u8	d0, d0, d0
    9d8c:	009f5001 	addseq	r5, pc, r1
	...
    9d98:	00320600 	eorseq	r0, r2, r0, lsl #12
    9d9c:	00320b10 	eorseq	r0, r2, r0, lsl fp
    9da0:	50000110 	andpl	r0, r0, r0, lsl r1
	...
    9dac:	10003000 	andne	r3, r0, r0
    9db0:	10003002 	andne	r3, r0, r2
    9db4:	007d0002 	rsbseq	r0, sp, r2
    9db8:	10003002 	andne	r3, r0, r2
    9dbc:	10003040 	andne	r3, r0, r0, asr #32
    9dc0:	107d0002 	rsbsne	r0, sp, r2
	...
    9dd0:	10003000 	andne	r3, r0, r0
    9dd4:	10003010 	andne	r3, r0, r0, lsl r0
    9dd8:	10500001 	subsne	r0, r0, r1
    9ddc:	40100030 	andsmi	r0, r0, r0, lsr r0
    9de0:	01100030 	tsteq	r0, r0, lsr r0
    9de4:	00005500 	andeq	r5, r0, r0, lsl #10
	...
    9df0:	30000000 	andcc	r0, r0, r0
    9df4:	30131000 	andscc	r1, r3, r0
    9df8:	00011000 	andeq	r1, r1, r0
    9dfc:	00301351 	eorseq	r1, r0, r1, asr r3
    9e00:	00304010 	eorseq	r4, r0, r0, lsl r0
    9e04:	56000110 			; <UNDEFINED> instruction: 0x56000110
	...
    9e10:	300e0000 	andcc	r0, lr, r0
    9e14:	30401000 	subcc	r1, r0, r0
    9e18:	00011000 	andeq	r1, r1, r0
    9e1c:	00000054 	andeq	r0, r0, r4, asr r0
    9e20:	00000000 	andeq	r0, r0, r0
    9e24:	002fd800 	eoreq	sp, pc, r0, lsl #16
    9e28:	002fda10 	eoreq	sp, pc, r0, lsl sl	; <UNPREDICTABLE>
    9e2c:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    9e30:	002fda00 	eoreq	sp, pc, r0, lsl #20
    9e34:	00300010 	eorseq	r0, r0, r0, lsl r0
    9e38:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    9e3c:	00000010 	andeq	r0, r0, r0, lsl r0
	...
    9e48:	002fd800 	eoreq	sp, pc, r0, lsl #16
    9e4c:	002fe210 	eoreq	lr, pc, r0, lsl r2	; <UNPREDICTABLE>
    9e50:	50000110 	andpl	r0, r0, r0, lsl r1
    9e54:	10002fe2 	andne	r2, r0, r2, ror #31
    9e58:	10003000 	andne	r3, r0, r0
    9e5c:	00540001 	subseq	r0, r4, r1
	...
    9e68:	d8000000 	stmdale	r0, {}	; <UNPREDICTABLE>
    9e6c:	e210002f 	ands	r0, r0, #47	; 0x2f
    9e70:	0110002f 	tsteq	r0, pc, lsr #32
    9e74:	2fe25100 	svccs	0x00e25100
    9e78:	30001000 	andcc	r1, r0, r0
    9e7c:	00011000 	andeq	r1, r1, r0
    9e80:	00000055 	andeq	r0, r0, r5, asr r0
	...
    9e8c:	002fd800 	eoreq	sp, pc, r0, lsl #16
    9e90:	002fe210 	eoreq	lr, pc, r0, lsl r2	; <UNPREDICTABLE>
    9e94:	52000110 	andpl	r0, r0, #16, 2
    9e98:	10002fe2 	andne	r2, r0, r2, ror #31
    9e9c:	10003000 	andne	r3, r0, r0
    9ea0:	00560001 	subseq	r0, r6, r1
	...
    9eb4:	01000000 	mrseq	r0, (UNDEF: 0)
    9eb8:	00005000 	andeq	r5, r0, r0
    9ebc:	00000000 	andeq	r0, r0, r0
    9ec0:	00040000 	andeq	r0, r4, r0
    9ec4:	9f5001f3 	svcls	0x005001f3
	...
    9ed0:	00000002 	andeq	r0, r0, r2
	...
    9edc:	00500001 	subseq	r0, r0, r1
    9ee0:	00000000 	andeq	r0, r0, r0
    9ee4:	04000000 	streq	r0, [r0], #-0
    9ee8:	5001f300 	andpl	pc, r1, r0, lsl #6
    9eec:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    9f04:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    9f10:	00710002 	rsbseq	r0, r1, r2
	...
    9f1c:	00500001 	subseq	r0, r0, r1
    9f20:	00000000 	andeq	r0, r0, r0
    9f24:	04000000 	streq	r0, [r0], #-0
    9f28:	5001f300 	andpl	pc, r1, r0, lsl #6
    9f2c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    9f30:	00000000 	andeq	r0, r0, r0
    9f34:	00000100 	andeq	r0, r0, r0, lsl #2
	...
    9f40:	31000200 	mrscc	r0, R8_usr
    9f44:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    9f48:	00000000 	andeq	r0, r0, r0
    9f4c:	30000200 	andcc	r0, r0, r0, lsl #4
    9f50:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    9f54:	00000000 	andeq	r0, r0, r0
    9f58:	00000300 	andeq	r0, r0, r0, lsl #6
	...
    9f68:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    9f74:	00710002 	rsbseq	r0, r1, r2
	...
    9f80:	00500001 	subseq	r0, r0, r1
    9f84:	00000000 	andeq	r0, r0, r0
    9f88:	04000000 	streq	r0, [r0], #-0
    9f8c:	5001f300 	andpl	pc, r1, r0, lsl #6
    9f90:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    9fa4:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    9fb0:	01f30004 	mvnseq	r0, r4
    9fb4:	00009f50 	andeq	r9, r0, r0, asr pc
    9fb8:	00000000 	andeq	r0, r0, r0
    9fbc:	00020000 	andeq	r0, r2, r0
	...
    9fc8:	00010000 	andeq	r0, r1, r0
    9fcc:	00000050 	andeq	r0, r0, r0, asr r0
    9fd0:	00000000 	andeq	r0, r0, r0
    9fd4:	f3000400 	vshl.u8	d0, d0, d0
    9fd8:	009f5001 	addseq	r5, pc, r1
    9fdc:	00000000 	andeq	r0, r0, r0
    9fe0:	06000000 	streq	r0, [r0], -r0
	...
    9fec:	02000000 	andeq	r0, r0, #0
    9ff0:	00047000 	andeq	r7, r4, r0
    9ff4:	00000000 	andeq	r0, r0, r0
    9ff8:	01000000 	mrseq	r0, (UNDEF: 0)
    9ffc:	00005000 	andeq	r5, r0, r0
	...
    a00c:	00020000 	andeq	r0, r2, r0
    a010:	0000007d 	andeq	r0, r0, sp, ror r0
    a014:	00000000 	andeq	r0, r0, r0
    a018:	00020000 	andeq	r0, r2, r0
    a01c:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    a030:	00010000 	andeq	r0, r1, r0
    a034:	00000050 	andeq	r0, r0, r0, asr r0
    a038:	00000000 	andeq	r0, r0, r0
    a03c:	f3000400 	vshl.u8	d0, d0, d0
    a040:	009f5001 	addseq	r5, pc, r1
	...
    a054:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    a068:	007d0002 	rsbseq	r0, sp, r2
	...
    a074:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    a090:	00010000 	andeq	r0, r1, r0
    a094:	00000050 	andeq	r0, r0, r0, asr r0
    a098:	00000000 	andeq	r0, r0, r0
    a09c:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    a0a8:	01f30004 	mvnseq	r0, r4
    a0ac:	00009f50 	andeq	r9, r0, r0, asr pc
    a0b0:	00000000 	andeq	r0, r0, r0
    a0b4:	00010000 	andeq	r0, r1, r0
    a0b8:	00000054 	andeq	r0, r0, r4, asr r0
    a0bc:	00000000 	andeq	r0, r0, r0
    a0c0:	f3000400 	vshl.u8	d0, d0, d0
    a0c4:	009f5001 	addseq	r5, pc, r1
    a0c8:	00000000 	andeq	r0, r0, r0
    a0cc:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    a0e0:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    a0ec:	00540001 	subseq	r0, r4, r1
    a0f0:	00000000 	andeq	r0, r0, r0
    a0f4:	04000000 	streq	r0, [r0], #-0
    a0f8:	5001f300 	andpl	pc, r1, r0, lsl #6
    a0fc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    a100:	00000000 	andeq	r0, r0, r0
    a104:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    a110:	01f30004 	mvnseq	r0, r4
    a114:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    a128:	00540001 	subseq	r0, r4, r1
	...
    a138:	02000000 	andeq	r0, r0, #0
    a13c:	00007d00 	andeq	r7, r0, r0, lsl #26
    a140:	00000000 	andeq	r0, r0, r0
    a144:	02000000 	andeq	r0, r0, #0
    a148:	00107d00 	andseq	r7, r0, r0, lsl #26
	...
    a15c:	01000000 	mrseq	r0, (UNDEF: 0)
    a160:	00005000 	andeq	r5, r0, r0
    a164:	00000000 	andeq	r0, r0, r0
    a168:	00010000 	andeq	r0, r1, r0
    a16c:	00000054 	andeq	r0, r0, r4, asr r0
	...
    a180:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    a18c:	00550001 	subseq	r0, r5, r1
    a190:	00000000 	andeq	r0, r0, r0
    a194:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    a1a0:	01000000 	mrseq	r0, (UNDEF: 0)
    a1a4:	00005000 	andeq	r5, r0, r0
    a1a8:	00000000 	andeq	r0, r0, r0
    a1ac:	00010000 	andeq	r0, r1, r0
    a1b0:	00000054 	andeq	r0, r0, r4, asr r0
	...
    a1c4:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    a1d0:	01f30004 	mvnseq	r0, r4
    a1d4:	00009f50 	andeq	r9, r0, r0, asr pc
    a1d8:	00000000 	andeq	r0, r0, r0
    a1dc:	00020000 	andeq	r0, r2, r0
	...
    a1e8:	00010000 	andeq	r0, r1, r0
    a1ec:	00000050 	andeq	r0, r0, r0, asr r0
    a1f0:	00000000 	andeq	r0, r0, r0
    a1f4:	f3000400 	vshl.u8	d0, d0, d0
    a1f8:	009f5001 	addseq	r5, pc, r1
	...
    a208:	02000000 	andeq	r0, r0, #0
    a20c:	00007d00 	andeq	r7, r0, r0, lsl #26
    a210:	00000000 	andeq	r0, r0, r0
    a214:	02000000 	andeq	r0, r0, #0
    a218:	00087d00 	andeq	r7, r8, r0, lsl #26
    a21c:	00000000 	andeq	r0, r0, r0
    a220:	02000000 	andeq	r0, r0, #0
    a224:	00187d00 	andseq	r7, r8, r0, lsl #26
    a228:	00000000 	andeq	r0, r0, r0
    a22c:	02000000 	andeq	r0, r0, #0
    a230:	00087d00 	andeq	r7, r8, r0, lsl #26
    a234:	00000000 	andeq	r0, r0, r0
    a238:	02000000 	andeq	r0, r0, #0
    a23c:	00187d00 	andseq	r7, r8, r0, lsl #26
	...
    a248:	03030000 	movweq	r0, #12288	; 0x3000
	...
    a25c:	01000000 	mrseq	r0, (UNDEF: 0)
    a260:	00005000 	andeq	r5, r0, r0
    a264:	00000000 	andeq	r0, r0, r0
    a268:	00020000 	andeq	r0, r2, r0
    a26c:	00007091 	muleq	r0, r1, r0
    a270:	00000000 	andeq	r0, r0, r0
    a274:	00040000 	andeq	r0, r4, r0
    a278:	9f5001f3 	svcls	0x005001f3
	...
    a284:	00500001 	subseq	r0, r0, r1
    a288:	00000000 	andeq	r0, r0, r0
    a28c:	02000000 	andeq	r0, r0, #0
    a290:	00709100 	rsbseq	r9, r0, r0, lsl #2
    a294:	00000000 	andeq	r0, r0, r0
    a298:	04000000 	streq	r0, [r0], #-0
    a29c:	5001f300 	andpl	pc, r1, r0, lsl #6
    a2a0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    a2a4:	00000000 	andeq	r0, r0, r0
    a2a8:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    a2b4:	01f30004 	mvnseq	r0, r4
    a2b8:	00009f50 	andeq	r9, r0, r0, asr pc
    a2bc:	00000000 	andeq	r0, r0, r0
    a2c0:	03000000 	movweq	r0, #0
    a2c4:	00000003 	andeq	r0, r0, r3
	...
    a2d4:	00010000 	andeq	r0, r1, r0
    a2d8:	00000051 	andeq	r0, r0, r1, asr r0
    a2dc:	00000000 	andeq	r0, r0, r0
    a2e0:	f3000400 	vshl.u8	d0, d0, d0
    a2e4:	009f5101 	addseq	r5, pc, r1, lsl #2
    a2e8:	00000000 	andeq	r0, r0, r0
    a2ec:	01000000 	mrseq	r0, (UNDEF: 0)
    a2f0:	00005100 	andeq	r5, r0, r0, lsl #2
    a2f4:	00000000 	andeq	r0, r0, r0
    a2f8:	00020000 	andeq	r0, r2, r0
    a2fc:	00000071 	andeq	r0, r0, r1, ror r0
    a300:	00000000 	andeq	r0, r0, r0
    a304:	00040000 	andeq	r0, r4, r0
    a308:	9f5101f3 	svcls	0x005101f3
	...
    a314:	00510001 	subseq	r0, r1, r1
	...
    a320:	00000303 	andeq	r0, r0, r3, lsl #6
	...
    a330:	01000000 	mrseq	r0, (UNDEF: 0)
    a334:	00005200 	andeq	r5, r0, r0, lsl #4
    a338:	00000000 	andeq	r0, r0, r0
    a33c:	00040000 	andeq	r0, r4, r0
    a340:	9f5201f3 	svcls	0x005201f3
	...
    a34c:	00520001 	subseq	r0, r2, r1
    a350:	00000000 	andeq	r0, r0, r0
    a354:	02000000 	andeq	r0, r0, #0
    a358:	006c9100 	rsbeq	r9, ip, r0, lsl #2
    a35c:	00000000 	andeq	r0, r0, r0
    a360:	04000000 	streq	r0, [r0], #-0
    a364:	5201f300 	andpl	pc, r1, #0, 6
    a368:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    a36c:	00000000 	andeq	r0, r0, r0
    a370:	52000100 	andpl	r0, r0, #0, 2
	...
    a37c:	03000000 	movweq	r0, #0
    a380:	00000003 	andeq	r0, r0, r3
	...
    a390:	00530001 	subseq	r0, r3, r1
    a394:	00000000 	andeq	r0, r0, r0
    a398:	01000000 	mrseq	r0, (UNDEF: 0)
    a39c:	00005c00 	andeq	r5, r0, r0, lsl #24
    a3a0:	00000000 	andeq	r0, r0, r0
    a3a4:	00040000 	andeq	r0, r4, r0
    a3a8:	9f5301f3 	svcls	0x005301f3
	...
    a3b4:	005c0001 	subseq	r0, ip, r1
    a3b8:	00000000 	andeq	r0, r0, r0
    a3bc:	04000000 	streq	r0, [r0], #-0
    a3c0:	5301f300 	movwpl	pc, #4864	; 0x1300	; <UNPREDICTABLE>
    a3c4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    a3c8:	00000000 	andeq	r0, r0, r0
    a3cc:	5c000100 	stfpls	f0, [r0], {-0}
	...
    a3e4:	00910002 	addseq	r0, r1, r2
	...
    a3f0:	00910002 	addseq	r0, r1, r2
	...
    a3fc:	00000301 	andeq	r0, r0, r1, lsl #6
	...
    a40c:	9f300002 	svcls	0x00300002
	...
    a418:	9f300002 	svcls	0x00300002
	...
    a424:	00500001 	subseq	r0, r0, r1
    a428:	00000000 	andeq	r0, r0, r0
    a42c:	02000000 	andeq	r0, r0, #0
    a430:	009f3000 	addseq	r3, pc, r0
	...
    a440:	02000000 	andeq	r0, r0, #0
    a444:	00007d00 	andeq	r7, r0, r0, lsl #26
    a448:	00000000 	andeq	r0, r0, r0
    a44c:	02000000 	andeq	r0, r0, #0
    a450:	00047d00 	andeq	r7, r4, r0, lsl #26
    a454:	00000000 	andeq	r0, r0, r0
    a458:	02000000 	andeq	r0, r0, #0
    a45c:	00187d00 	andseq	r7, r8, r0, lsl #26
    a460:	00000000 	andeq	r0, r0, r0
    a464:	02000000 	andeq	r0, r0, #0
    a468:	00047d00 	andeq	r7, r4, r0, lsl #26
    a46c:	00000000 	andeq	r0, r0, r0
    a470:	02000000 	andeq	r0, r0, #0
    a474:	00187d00 	andseq	r7, r8, r0, lsl #26
    a478:	00000000 	andeq	r0, r0, r0
    a47c:	02000000 	andeq	r0, r0, #0
    a480:	00007d00 	andeq	r7, r0, r0, lsl #26
	...
    a48c:	03030000 	movweq	r0, #12288	; 0x3000
	...
    a4a0:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    a4ac:	70910002 	addsvc	r0, r1, r2
	...
    a4b8:	01f30004 	mvnseq	r0, r4
    a4bc:	00009f50 	andeq	r9, r0, r0, asr pc
    a4c0:	00000000 	andeq	r0, r0, r0
    a4c4:	00010000 	andeq	r0, r1, r0
    a4c8:	00000050 	andeq	r0, r0, r0, asr r0
    a4cc:	00000000 	andeq	r0, r0, r0
    a4d0:	f3000400 	vshl.u8	d0, d0, d0
    a4d4:	009f5001 	addseq	r5, pc, r1
    a4d8:	00000000 	andeq	r0, r0, r0
    a4dc:	01000000 	mrseq	r0, (UNDEF: 0)
    a4e0:	00005000 	andeq	r5, r0, r0
    a4e4:	00000000 	andeq	r0, r0, r0
    a4e8:	00040000 	andeq	r0, r4, r0
    a4ec:	9f5001f3 	svcls	0x005001f3
	...
    a4f8:	00030300 	andeq	r0, r3, r0, lsl #6
	...
    a508:	00010000 	andeq	r0, r1, r0
    a50c:	00000051 	andeq	r0, r0, r1, asr r0
    a510:	00000000 	andeq	r0, r0, r0
    a514:	f3000400 	vshl.u8	d0, d0, d0
    a518:	009f5101 	addseq	r5, pc, r1, lsl #2
    a51c:	00000000 	andeq	r0, r0, r0
    a520:	01000000 	mrseq	r0, (UNDEF: 0)
    a524:	00005100 	andeq	r5, r0, r0, lsl #2
    a528:	00000000 	andeq	r0, r0, r0
    a52c:	00040000 	andeq	r0, r4, r0
    a530:	9f5101f3 	svcls	0x005101f3
	...
    a53c:	00510001 	subseq	r0, r1, r1
	...
    a548:	00000303 	andeq	r0, r0, r3, lsl #6
	...
    a558:	52000100 	andpl	r0, r0, #0, 2
	...
    a564:	01f30004 	mvnseq	r0, r4
    a568:	00009f52 	andeq	r9, r0, r2, asr pc
    a56c:	00000000 	andeq	r0, r0, r0
    a570:	00010000 	andeq	r0, r1, r0
    a574:	00000052 	andeq	r0, r0, r2, asr r0
    a578:	00000000 	andeq	r0, r0, r0
    a57c:	f3000400 	vshl.u8	d0, d0, d0
    a580:	009f5201 	addseq	r5, pc, r1, lsl #4
    a584:	00000000 	andeq	r0, r0, r0
    a588:	01000000 	mrseq	r0, (UNDEF: 0)
    a58c:	00005200 	andeq	r5, r0, r0, lsl #4
	...
    a5a0:	00010000 	andeq	r0, r1, r0
    a5a4:	00000053 	andeq	r0, r0, r3, asr r0
    a5a8:	00000000 	andeq	r0, r0, r0
    a5ac:	f3000400 	vshl.u8	d0, d0, d0
    a5b0:	009f5301 	addseq	r5, pc, r1, lsl #6
	...
    a5c4:	02000000 	andeq	r0, r0, #0
    a5c8:	00009100 	andeq	r9, r0, r0, lsl #2
    a5cc:	00000000 	andeq	r0, r0, r0
    a5d0:	02000000 	andeq	r0, r0, #0
    a5d4:	00009100 	andeq	r9, r0, r0, lsl #2
    a5d8:	00000000 	andeq	r0, r0, r0
    a5dc:	02000000 	andeq	r0, r0, #0
    a5e0:	00000003 	andeq	r0, r0, r3
	...
    a5f0:	02000000 	andeq	r0, r0, #0
    a5f4:	009f3000 	addseq	r3, pc, r0
    a5f8:	00000000 	andeq	r0, r0, r0
    a5fc:	02000000 	andeq	r0, r0, #0
    a600:	009f3000 	addseq	r3, pc, r0
    a604:	00000000 	andeq	r0, r0, r0
    a608:	01000000 	mrseq	r0, (UNDEF: 0)
    a60c:	00005000 	andeq	r5, r0, r0
    a610:	00000000 	andeq	r0, r0, r0
    a614:	00020000 	andeq	r0, r2, r0
    a618:	00009f30 	andeq	r9, r0, r0, lsr pc
    a61c:	00000000 	andeq	r0, r0, r0
    a620:	00010000 	andeq	r0, r1, r0
    a624:	00000050 	andeq	r0, r0, r0, asr r0
    a628:	00000000 	andeq	r0, r0, r0
    a62c:	30000200 	andcc	r0, r0, r0, lsl #4
    a630:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    a640:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    a64c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    a650:	00000018 	andeq	r0, r0, r8, lsl r0
	...
    a664:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    a670:	00580001 	subseq	r0, r8, r1
	...
    a684:	01000000 	mrseq	r0, (UNDEF: 0)
    a688:	00005100 	andeq	r5, r0, r0, lsl #2
    a68c:	00000000 	andeq	r0, r0, r0
    a690:	00010000 	andeq	r0, r1, r0
    a694:	00000057 	andeq	r0, r0, r7, asr r0
	...
    a6a8:	52000100 	andpl	r0, r0, #0, 2
	...
    a6b4:	00550001 	subseq	r0, r5, r1
	...
    a6c8:	01000000 	mrseq	r0, (UNDEF: 0)
    a6cc:	00005300 	andeq	r5, r0, r0, lsl #6
    a6d0:	00000000 	andeq	r0, r0, r0
    a6d4:	00010000 	andeq	r0, r1, r0
    a6d8:	00000056 	andeq	r0, r0, r6, asr r0
	...
    a6e8:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    a6f4:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    a6f8:	0000000c 	andeq	r0, r0, ip
    a6fc:	00000000 	andeq	r0, r0, r0
    a700:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    a704:	00000018 	andeq	r0, r0, r8, lsl r0
    a708:	00000000 	andeq	r0, r0, r0
    a70c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    a710:	0000000c 	andeq	r0, r0, ip
	...
    a724:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    a730:	01f30004 	mvnseq	r0, r4
    a734:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    a748:	00010000 	andeq	r0, r1, r0
    a74c:	00000051 	andeq	r0, r0, r1, asr r0
    a750:	00000000 	andeq	r0, r0, r0
    a754:	f3000400 	vshl.u8	d0, d0, d0
    a758:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
    a76c:	01000000 	mrseq	r0, (UNDEF: 0)
    a770:	00005200 	andeq	r5, r0, r0, lsl #4
    a774:	00000000 	andeq	r0, r0, r0
    a778:	00040000 	andeq	r0, r4, r0
    a77c:	9f5201f3 	svcls	0x005201f3
	...
    a794:	00530001 	subseq	r0, r3, r1
    a798:	00000000 	andeq	r0, r0, r0
    a79c:	04000000 	streq	r0, [r0], #-0
    a7a0:	5301f300 	movwpl	pc, #4864	; 0x1300	; <UNPREDICTABLE>
    a7a4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    a7a8:	00000000 	andeq	r0, r0, r0
    a7ac:	00000400 	andeq	r0, r0, r0, lsl #8
    a7b0:	00000000 	andeq	r0, r0, r0
    a7b4:	01000000 	mrseq	r0, (UNDEF: 0)
    a7b8:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    a7c8:	00020000 	andeq	r0, r2, r0
    a7cc:	0000007d 	andeq	r0, r0, sp, ror r0
    a7d0:	00000000 	andeq	r0, r0, r0
    a7d4:	00020000 	andeq	r0, r2, r0
    a7d8:	0000187d 	andeq	r1, r0, sp, ror r8
    a7dc:	00000000 	andeq	r0, r0, r0
    a7e0:	00020000 	andeq	r0, r2, r0
    a7e4:	0000207d 	andeq	r2, r0, sp, ror r0
    a7e8:	00000000 	andeq	r0, r0, r0
    a7ec:	00020000 	andeq	r0, r2, r0
    a7f0:	0000187d 	andeq	r1, r0, sp, ror r8
	...
    a804:	00010000 	andeq	r0, r1, r0
    a808:	00000050 	andeq	r0, r0, r0, asr r0
    a80c:	00000000 	andeq	r0, r0, r0
    a810:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    a828:	00510001 	subseq	r0, r1, r1
    a82c:	00000000 	andeq	r0, r0, r0
    a830:	01000000 	mrseq	r0, (UNDEF: 0)
    a834:	00005800 	andeq	r5, r0, r0, lsl #16
	...
    a848:	00010000 	andeq	r0, r1, r0
    a84c:	00000052 	andeq	r0, r0, r2, asr r0
    a850:	00000000 	andeq	r0, r0, r0
    a854:	57000100 	strpl	r0, [r0, -r0, lsl #2]
	...
    a86c:	00530001 	subseq	r0, r3, r1
    a870:	00000000 	andeq	r0, r0, r0
    a874:	01000000 	mrseq	r0, (UNDEF: 0)
    a878:	00005500 	andeq	r5, r0, r0, lsl #10
	...
    a88c:	00010000 	andeq	r0, r1, r0
    a890:	00000050 	andeq	r0, r0, r0, asr r0
    a894:	00000000 	andeq	r0, r0, r0
    a898:	56000100 	strpl	r0, [r0], -r0, lsl #2
	...
    a8a4:	10003274 	andne	r3, r0, r4, ror r2
    a8a8:	10003276 	andne	r3, r0, r6, ror r2
    a8ac:	007d0002 	rsbseq	r0, sp, r2
    a8b0:	10003276 	andne	r3, r0, r6, ror r2
    a8b4:	10003278 	andne	r3, r0, r8, ror r2
    a8b8:	087d0002 	ldmdaeq	sp!, {r1}^
    a8bc:	10003278 	andne	r3, r0, r8, ror r2
    a8c0:	100032bc 			; <UNDEFINED> instruction: 0x100032bc
    a8c4:	287d0002 	ldmdacs	sp!, {r1}^
    a8c8:	100032bc 			; <UNDEFINED> instruction: 0x100032bc
    a8cc:	100032d0 	ldrdne	r3, [r0], -r0
    a8d0:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    a8dc:	00000001 	andeq	r0, r0, r1
    a8e0:	32780400 	rsbscc	r0, r8, #0, 8
    a8e4:	32b21000 	adcscc	r1, r2, #0
    a8e8:	00021000 	andeq	r1, r2, r0
    a8ec:	32b29f30 	adcscc	r9, r2, #48, 30	; 0xc0
    a8f0:	32b41000 	adcscc	r1, r4, #0
    a8f4:	00021000 	andeq	r1, r2, r0
    a8f8:	32b49f31 	adcscc	r9, r4, #49, 30	; 0xc4
    a8fc:	32ba1000 	adcscc	r1, sl, #0
    a900:	00021000 	andeq	r1, r2, r0
    a904:	00009f30 	andeq	r9, r0, r0, lsr pc
	...
    a914:	00020000 	andeq	r0, r2, r0
    a918:	0000007d 	andeq	r0, r0, sp, ror r0
    a91c:	00000000 	andeq	r0, r0, r0
    a920:	00020000 	andeq	r0, r2, r0
    a924:	0000187d 	andeq	r1, r0, sp, ror r8
	...
    a938:	00010000 	andeq	r0, r1, r0
    a93c:	00000050 	andeq	r0, r0, r0, asr r0
    a940:	00000000 	andeq	r0, r0, r0
    a944:	57000100 	strpl	r0, [r0, -r0, lsl #2]
	...
    a95c:	00530001 	subseq	r0, r3, r1
    a960:	00000000 	andeq	r0, r0, r0
    a964:	01000000 	mrseq	r0, (UNDEF: 0)
    a968:	00005300 	andeq	r5, r0, r0, lsl #6
    a96c:	00000000 	andeq	r0, r0, r0
    a970:	00020000 	andeq	r0, r2, r0
	...
    a97c:	00020000 	andeq	r0, r2, r0
    a980:	00009f30 	andeq	r9, r0, r0, lsr pc
    a984:	00000000 	andeq	r0, r0, r0
    a988:	00010000 	andeq	r0, r1, r0
    a98c:	00000054 	andeq	r0, r0, r4, asr r0
    a990:	00000000 	andeq	r0, r0, r0
    a994:	00000200 	andeq	r0, r0, r0, lsl #4
	...
    a9a0:	30000200 	andcc	r0, r0, r0, lsl #4
    a9a4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    a9a8:	00000000 	andeq	r0, r0, r0
    a9ac:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    a9b8:	00000002 	andeq	r0, r0, r2
	...
    a9c4:	ff090003 			; <UNDEFINED> instruction: 0xff090003
    a9c8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    a9cc:	00000000 	andeq	r0, r0, r0
    a9d0:	56000100 	strpl	r0, [r0], -r0, lsl #2
	...
    a9dc:	10003328 	andne	r3, r0, r8, lsr #6
    a9e0:	1000335c 	andne	r3, r0, ip, asr r3
    a9e4:	007d0002 	rsbseq	r0, sp, r2
    a9e8:	1000335c 	andne	r3, r0, ip, asr r3
    a9ec:	1000337a 	andne	r3, r0, sl, ror r3
    a9f0:	047d0002 	ldrbteq	r0, [sp], #-2
    a9f4:	1000337a 	andne	r3, r0, sl, ror r3
    a9f8:	1000337c 	andne	r3, r0, ip, ror r3
    a9fc:	007d0002 	rsbseq	r0, sp, r2
    aa00:	1000337c 	andne	r3, r0, ip, ror r3
    aa04:	10003380 	andne	r3, r0, r0, lsl #7
    aa08:	047d0002 	ldrbteq	r0, [sp], #-2
    aa0c:	10003380 	andne	r3, r0, r0, lsl #7
    aa10:	1000338c 	andne	r3, r0, ip, lsl #7
    aa14:	007d0002 	rsbseq	r0, sp, r2
	...
    aa20:	01000000 	mrseq	r0, (UNDEF: 0)
    aa24:	00000001 	andeq	r0, r0, r1
    aa28:	10003328 	andne	r3, r0, r8, lsr #6
    aa2c:	10003352 	andne	r3, r0, r2, asr r3
    aa30:	52500001 	subspl	r0, r0, #1
    aa34:	56100033 			; <UNDEFINED> instruction: 0x56100033
    aa38:	04100033 	ldreq	r0, [r0], #-51	; 0xffffffcd
    aa3c:	5001f300 	andpl	pc, r1, r0, lsl #6
    aa40:	0033569f 	mlaseq	r3, pc, r6, r5	; <UNPREDICTABLE>
    aa44:	00335a10 	eorseq	r5, r3, r0, lsl sl
    aa48:	52000110 	andpl	r0, r0, #16, 2
    aa4c:	1000335a 	andne	r3, r0, sl, asr r3
    aa50:	1000338c 	andne	r3, r0, ip, lsl #7
    aa54:	00500001 	subseq	r0, r0, r1
    aa58:	00000000 	andeq	r0, r0, r0
    aa5c:	04000000 	streq	r0, [r0], #-0
    aa60:	00000000 	andeq	r0, r0, r0
    aa64:	00332800 	eorseq	r2, r3, r0, lsl #16
    aa68:	00332a10 	eorseq	r2, r3, r0, lsl sl
    aa6c:	03000610 	movweq	r0, #1552	; 0x610
    aa70:	38008cf8 	stmdacc	r0, {r3, r4, r5, r6, r7, sl, fp, pc}
    aa74:	00332a9f 	mlaseq	r3, pc, sl, r2	; <UNPREDICTABLE>
    aa78:	00332e10 	eorseq	r2, r3, r0, lsl lr
    aa7c:	53000110 	movwpl	r0, #272	; 0x110
    aa80:	1000332e 	andne	r3, r0, lr, lsr #6
    aa84:	1000338c 	andne	r3, r0, ip, lsl #7
    aa88:	00520001 	subseq	r0, r2, r1
    aa8c:	00000000 	andeq	r0, r0, r0
    aa90:	03000000 	movweq	r0, #0
    aa94:	00000202 	andeq	r0, r0, r2, lsl #4
    aa98:	32000000 	andcc	r0, r0, #0
    aa9c:	3c100033 	ldccc	0, cr0, [r0], {51}	; 0x33
    aaa0:	01100033 	tsteq	r0, r3, lsr r0
    aaa4:	333c5200 	teqcc	ip, #0, 4
    aaa8:	33501000 	cmpcc	r0, #0
    aaac:	00011000 	andeq	r1, r1, r0
    aab0:	00335050 	eorseq	r5, r3, r0, asr r0
    aab4:	00335a10 	eorseq	r5, r3, r0, lsl sl
    aab8:	52000110 	andpl	r0, r0, #16, 2
    aabc:	1000335a 	andne	r3, r0, sl, asr r3
    aac0:	1000338c 	andne	r3, r0, ip, lsl #7
    aac4:	00500001 	subseq	r0, r0, r1
    aac8:	00000000 	andeq	r0, r0, r0
    aacc:	01000000 	mrseq	r0, (UNDEF: 0)
    aad0:	0032fe00 	eorseq	pc, r2, r0, lsl #28
    aad4:	00330e10 	eorseq	r0, r3, r0, lsl lr
    aad8:	52000110 	andpl	r0, r0, #16, 2
	...
    aae8:	100032da 	ldrdne	r3, [r0], -sl
    aaec:	100032e6 	andne	r3, r0, r6, ror #5
    aaf0:	e6510001 	ldrb	r0, [r1], -r1
    aaf4:	0e100032 	mrceq	0, 0, r0, cr0, cr2, {1}
    aaf8:	01100033 	tsteq	r0, r3, lsr r0
    aafc:	00005200 	andeq	r5, r0, r0, lsl #4
	...
    ab08:	32f00000 	rscscc	r0, r0, #0
    ab0c:	33061000 	movwcc	r1, #24576	; 0x6000
    ab10:	00011000 	andeq	r1, r1, r0
    ab14:	00330653 	eorseq	r0, r3, r3, asr r6
    ab18:	00330e10 	eorseq	r0, r3, r0, lsl lr
    ab1c:	72000210 	andvc	r0, r0, #16, 4
	...
    ab28:	00000400 	andeq	r0, r0, r0, lsl #8
    ab2c:	d0000000 	andle	r0, r0, r0
    ab30:	e4100032 	ldr	r0, [r0], #-50	; 0xffffffce
    ab34:	04100032 	ldreq	r0, [r0], #-50	; 0xffffffce
    ab38:	80000a00 	andhi	r0, r0, r0, lsl #20
    ab3c:	0032e49f 	mlaseq	r2, pc, r4, lr	; <UNPREDICTABLE>
    ab40:	0032f010 	eorseq	pc, r2, r0, lsl r0	; <UNPREDICTABLE>
    ab44:	53000110 	movwpl	r0, #272	; 0x110
    ab48:	1000330e 	andne	r3, r0, lr, lsl #6
    ab4c:	10003328 	andne	r3, r0, r8, lsr #6
    ab50:	000a0004 	andeq	r0, sl, r4
    ab54:	00009f80 	andeq	r9, r0, r0, lsl #31
	...
    ab64:	00020000 	andeq	r0, r2, r0
    ab68:	0000007d 	andeq	r0, r0, sp, ror r0
    ab6c:	00000000 	andeq	r0, r0, r0
    ab70:	00020000 	andeq	r0, r2, r0
    ab74:	0000107d 	andeq	r1, r0, sp, ror r0
	...
    ab8c:	00010000 	andeq	r0, r1, r0
    ab90:	00000050 	andeq	r0, r0, r0, asr r0
    ab94:	00000000 	andeq	r0, r0, r0
    ab98:	53000100 	movwpl	r0, #256	; 0x100
	...
    aba4:	01f30004 	mvnseq	r0, r4
    aba8:	00009f50 	andeq	r9, r0, r0, asr pc
    abac:	00000000 	andeq	r0, r0, r0
    abb0:	00010000 	andeq	r0, r1, r0
    abb4:	00000053 	andeq	r0, r0, r3, asr r0
	...
    abc8:	01000000 	mrseq	r0, (UNDEF: 0)
    abcc:	00005100 	andeq	r5, r0, r0, lsl #2
    abd0:	00000000 	andeq	r0, r0, r0
    abd4:	00040000 	andeq	r0, r4, r0
    abd8:	9f5101f3 	svcls	0x005101f3
	...
    abe4:	00510001 	subseq	r0, r1, r1
    abe8:	00000000 	andeq	r0, r0, r0
    abec:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    abfc:	02000000 	andeq	r0, r0, #0
    ac00:	009f3000 	addseq	r3, pc, r0
    ac04:	00000000 	andeq	r0, r0, r0
    ac08:	01000000 	mrseq	r0, (UNDEF: 0)
    ac0c:	00005000 	andeq	r5, r0, r0
    ac10:	00000000 	andeq	r0, r0, r0
    ac14:	00010000 	andeq	r0, r1, r0
    ac18:	00000055 	andeq	r0, r0, r5, asr r0
    ac1c:	00000000 	andeq	r0, r0, r0
    ac20:	30000200 	andcc	r0, r0, r0, lsl #4
    ac24:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    ac28:	00000000 	andeq	r0, r0, r0
    ac2c:	00346000 	eorseq	r6, r4, r0
    ac30:	00346410 	eorseq	r6, r4, r0, lsl r4
    ac34:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    ac38:	00346400 	eorseq	r6, r4, r0, lsl #8
    ac3c:	0034a610 	eorseq	sl, r4, r0, lsl r6
    ac40:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    ac44:	0034a610 	eorseq	sl, r4, r0, lsl r6
    ac48:	0034b010 	eorseq	fp, r4, r0, lsl r0
    ac4c:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
	...
    ac60:	60000000 	andvs	r0, r0, r0
    ac64:	78100034 	ldmdavc	r0, {r2, r4, r5}
    ac68:	01100034 	tsteq	r0, r4, lsr r0
    ac6c:	34785000 	ldrbtcc	r5, [r8], #-0
    ac70:	347a1000 	ldrbtcc	r1, [sl], #-0
    ac74:	00011000 	andeq	r1, r1, r0
    ac78:	00347a54 	eorseq	r7, r4, r4, asr sl
    ac7c:	00348510 	eorseq	r8, r4, r0, lsl r5
    ac80:	50000110 	andpl	r0, r0, r0, lsl r1
    ac84:	10003485 	andne	r3, r0, r5, lsl #9
    ac88:	100034a6 	andne	r3, r0, r6, lsr #9
    ac8c:	a6540001 	ldrbge	r0, [r4], -r1
    ac90:	b0100034 	andslt	r0, r0, r4, lsr r0
    ac94:	01100034 	tsteq	r0, r4, lsr r0
    ac98:	00005000 	andeq	r5, r0, r0
    ac9c:	00000000 	andeq	r0, r0, r0
    aca0:	00020000 	andeq	r0, r2, r0
    aca4:	00000000 	andeq	r0, r0, r0
    aca8:	10003460 	andne	r3, r0, r0, ror #8
    acac:	1000346a 	andne	r3, r0, sl, ror #8
    acb0:	6a500001 	bvs	140acbc <__RAM_SIZE+0x130acbc>
    acb4:	a6100034 			; <UNDEFINED> instruction: 0xa6100034
    acb8:	01100034 	tsteq	r0, r4, lsr r0
    acbc:	34a65500 	strtcc	r5, [r6], #1280	; 0x500
    acc0:	34b01000 	ldrtcc	r1, [r0], #0
    acc4:	00011000 	andeq	r1, r1, r0
    acc8:	00000050 	andeq	r0, r0, r0, asr r0
    accc:	00000000 	andeq	r0, r0, r0
    acd0:	6a000100 	bvs	b0d8 <__HEAP_SIZE+0xa0d8>
    acd4:	a6100034 			; <UNDEFINED> instruction: 0xa6100034
    acd8:	01100034 	tsteq	r0, r4, lsr r0
    acdc:	00005500 	andeq	r5, r0, r0, lsl #10
    ace0:	00000000 	andeq	r0, r0, r0
    ace4:	338c0000 	orrcc	r0, ip, #0
    ace8:	338e1000 	orrcc	r1, lr, #0
    acec:	00021000 	andeq	r1, r2, r0
    acf0:	338e007d 	orrcc	r0, lr, #125	; 0x7d
    acf4:	34601000 	strbtcc	r1, [r0], #-0
    acf8:	00021000 	andeq	r1, r2, r0
    acfc:	0000107d 	andeq	r1, r0, sp, ror r0
	...
    ad10:	338c0000 	orrcc	r0, ip, #0
    ad14:	339a1000 	orrscc	r1, sl, #0
    ad18:	00011000 	andeq	r1, r1, r0
    ad1c:	00339a50 	eorseq	r9, r3, r0, asr sl
    ad20:	0033ae10 	eorseq	sl, r3, r0, lsl lr
    ad24:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    ad28:	100033ae 	andne	r3, r0, lr, lsr #7
    ad2c:	100033b0 			; <UNDEFINED> instruction: 0x100033b0
    ad30:	b0500001 	subslt	r0, r0, r1
    ad34:	d2100033 	andsle	r0, r0, #51	; 0x33
    ad38:	01100033 	tsteq	r0, r3, lsr r0
    ad3c:	33d25400 	bicscc	r5, r2, #0, 8
    ad40:	33d41000 	bicscc	r1, r4, #0
    ad44:	00031000 	andeq	r1, r3, r0
    ad48:	d49f0870 	ldrle	r0, [pc], #2160	; ad50 <__HEAP_SIZE+0x9d50>
    ad4c:	60100033 	andsvs	r0, r0, r3, lsr r0
    ad50:	01100034 	tsteq	r0, r4, lsr r0
    ad54:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    ad64:	100033ce 	andne	r3, r0, lr, asr #7
    ad68:	100033d0 	ldrdne	r3, [r0], -r0
    ad6c:	da530001 	ble	14cad78 <__RAM_SIZE+0x13cad78>
    ad70:	30100033 	andscc	r0, r0, r3, lsr r0
    ad74:	01100034 	tsteq	r0, r4, lsr r0
    ad78:	34485300 	strbcc	r5, [r8], #-768	; 0xfffffd00
    ad7c:	34601000 	strbtcc	r1, [r0], #-0
    ad80:	00011000 	andeq	r1, r1, r0
    ad84:	00000053 	andeq	r0, r0, r3, asr r0
    ad88:	00000000 	andeq	r0, r0, r0
    ad8c:	00000100 	andeq	r0, r0, r0, lsl #2
    ad90:	00000000 	andeq	r0, r0, r0
    ad94:	0033ca00 	eorseq	ip, r3, r0, lsl #20
    ad98:	0033d010 	eorseq	sp, r3, r0, lsl r0
    ad9c:	03000610 	movweq	r0, #1552	; 0x610
    ada0:	38008cf8 	stmdacc	r0, {r3, r4, r5, r6, r7, sl, fp, pc}
    ada4:	0033da9f 	mlaseq	r3, pc, sl, sp	; <UNPREDICTABLE>
    ada8:	0033dc10 	eorseq	sp, r3, r0, lsl ip
    adac:	51000110 	tstpl	r0, r0, lsl r1
    adb0:	100033de 	ldrdne	r3, [r0], -lr
    adb4:	10003410 	andne	r3, r0, r0, lsl r4
    adb8:	48510001 	ldmdami	r1, {r0}^
    adbc:	60100034 	andsvs	r0, r0, r4, lsr r0
    adc0:	01100034 	tsteq	r0, r4, lsr r0
    adc4:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    add0:	10003404 	andne	r3, r0, r4, lsl #8
    add4:	1000340e 	andne	r3, r0, lr, lsl #8
    add8:	00520001 	subseq	r0, r2, r1
    addc:	00000000 	andeq	r0, r0, r0
    ade0:	04000000 	streq	r0, [r0], #-0
    ade4:	00000000 	andeq	r0, r0, r0
    ade8:	00338e00 	eorseq	r8, r3, r0, lsl #28
    adec:	0033f610 	eorseq	pc, r3, r0, lsl r6	; <UNPREDICTABLE>
    adf0:	30000210 	andcc	r0, r0, r0, lsl r2
    adf4:	0033f69f 	mlaseq	r3, pc, r6, pc	; <UNPREDICTABLE>
    adf8:	00343c10 	eorseq	r3, r4, r0, lsl ip
    adfc:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
    ae00:	1000343c 	andne	r3, r0, ip, lsr r4
    ae04:	10003460 	andne	r3, r0, r0, ror #8
    ae08:	9f300002 	svcls	0x00300002
	...
    ae18:	100033a4 	andne	r3, r0, r4, lsr #7
    ae1c:	100033ae 	andne	r3, r0, lr, lsr #7
    ae20:	d0530001 	subsle	r0, r3, r1
    ae24:	d4100033 	ldrle	r0, [r0], #-51	; 0xffffffcd
    ae28:	01100033 	tsteq	r0, r3, lsr r0
    ae2c:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    ae40:	00530001 	subseq	r0, r3, r1
    ae44:	00000000 	andeq	r0, r0, r0
    ae48:	30000000 	andcc	r0, r0, r0
    ae4c:	32100037 	andscc	r0, r0, #55	; 0x37
    ae50:	02100037 	andseq	r0, r0, #55	; 0x37
    ae54:	32007d00 	andcc	r7, r0, #0, 26
    ae58:	70100037 	andsvc	r0, r0, r7, lsr r0
    ae5c:	02100037 	andseq	r0, r0, #55	; 0x37
    ae60:	00087d00 	andeq	r7, r8, r0, lsl #26
    ae64:	00000000 	andeq	r0, r0, r0
    ae68:	a0000000 	andge	r0, r0, r0
    ae6c:	a2100036 	andsge	r0, r0, #54	; 0x36
    ae70:	02100036 	andseq	r0, r0, #54	; 0x36
    ae74:	a2007d00 	andge	r7, r0, #0, 26
    ae78:	2a100036 	bcs	40af58 <__RAM_SIZE+0x30af58>
    ae7c:	02100037 	andseq	r0, r0, #55	; 0x37
    ae80:	2a047d00 	bcs	12a288 <__RAM_SIZE+0x2a288>
    ae84:	30100037 	andscc	r0, r0, r7, lsr r0
    ae88:	02100037 	andseq	r0, r0, #55	; 0x37
    ae8c:	00007d00 	andeq	r7, r0, r0, lsl #26
	...
    ae98:	01010101 	tsteq	r1, r1, lsl #2
    ae9c:	01010101 	tsteq	r1, r1, lsl #2
    aea0:	01010101 	tsteq	r1, r1, lsl #2
    aea4:	01010101 	tsteq	r1, r1, lsl #2
    aea8:	01010101 	tsteq	r1, r1, lsl #2
    aeac:	01010101 	tsteq	r1, r1, lsl #2
    aeb0:	01010101 	tsteq	r1, r1, lsl #2
    aeb4:	01010101 	tsteq	r1, r1, lsl #2
    aeb8:	01010101 	tsteq	r1, r1, lsl #2
    aebc:	a0000000 	andge	r0, r0, r0
    aec0:	a2100036 	andsge	r0, r0, #54	; 0x36
    aec4:	01100036 	tsteq	r0, r6, lsr r0
    aec8:	36a25000 	strtcc	r5, [r2], r0
    aecc:	36aa1000 	strtcc	r1, [sl], r0
    aed0:	00031000 	andeq	r1, r3, r0
    aed4:	aa9f7c70 	bge	fe7ea09c <__StackTop+0xc66ea09c>
    aed8:	ae100036 	mrcge	0, 0, r0, cr0, cr6, {1}
    aedc:	03100036 	tsteq	r0, #54	; 0x36
    aee0:	9f787000 	svcls	0x00787000
    aee4:	100036ae 	andne	r3, r0, lr, lsr #13
    aee8:	100036b4 			; <UNDEFINED> instruction: 0x100036b4
    aeec:	74700003 	ldrbtvc	r0, [r0], #-3
    aef0:	0036b49f 	mlaseq	r6, pc, r4, fp	; <UNPREDICTABLE>
    aef4:	0036bc10 	eorseq	fp, r6, r0, lsl ip
    aef8:	70000310 	andvc	r0, r0, r0, lsl r3
    aefc:	36bc9f70 			; <UNDEFINED> instruction: 0x36bc9f70
    af00:	36c41000 	strbcc	r1, [r4], r0
    af04:	00031000 	andeq	r1, r3, r0
    af08:	c49f6c70 	ldrgt	r6, [pc], #3184	; af10 <__HEAP_SIZE+0x9f10>
    af0c:	cc100036 	ldcgt	0, cr0, [r0], {54}	; 0x36
    af10:	03100036 	tsteq	r0, #54	; 0x36
    af14:	9f687000 	svcls	0x00687000
    af18:	100036cc 	andne	r3, r0, ip, asr #13
    af1c:	100036d4 	ldrdne	r3, [r0], -r4
    af20:	64700003 	ldrbtvs	r0, [r0], #-3
    af24:	0036d49f 	mlaseq	r6, pc, r4, sp	; <UNPREDICTABLE>
    af28:	0036d810 	eorseq	sp, r6, r0, lsl r8
    af2c:	70000310 	andvc	r0, r0, r0, lsl r3
    af30:	36d89f60 	ldrbcc	r9, [r8], r0, ror #30
    af34:	36e01000 	strbtcc	r1, [r0], r0
    af38:	00031000 	andeq	r1, r3, r0
    af3c:	e09f5c70 	adds	r5, pc, r0, ror ip	; <UNPREDICTABLE>
    af40:	e8100036 	ldmda	r0, {r1, r2, r4, r5}
    af44:	03100036 	tsteq	r0, #54	; 0x36
    af48:	9f587000 	svcls	0x00587000
    af4c:	100036e8 	andne	r3, r0, r8, ror #13
    af50:	100036f0 	strdne	r3, [r0], -r0
    af54:	54700003 	ldrbtpl	r0, [r0], #-3
    af58:	0036f09f 	mlaseq	r6, pc, r0, pc	; <UNPREDICTABLE>
    af5c:	0036f810 	eorseq	pc, r6, r0, lsl r8	; <UNPREDICTABLE>
    af60:	70000310 	andvc	r0, r0, r0, lsl r3
    af64:	36f89f50 	usatcc	r9, #24, r0, asr #30
    af68:	37001000 	strcc	r1, [r0, -r0]
    af6c:	00031000 	andeq	r1, r3, r0
    af70:	009f4c70 	addseq	r4, pc, r0, ror ip	; <UNPREDICTABLE>
    af74:	08100037 	ldmdaeq	r0, {r0, r1, r2, r4, r5}
    af78:	03100037 	tsteq	r0, #55	; 0x37
    af7c:	9f487000 	svcls	0x00487000
    af80:	10003708 	andne	r3, r0, r8, lsl #14
    af84:	10003710 	andne	r3, r0, r0, lsl r7
    af88:	44700003 	ldrbtmi	r0, [r0], #-3
    af8c:	0037109f 	mlaseq	r7, pc, r0, r1	; <UNPREDICTABLE>
    af90:	00371810 	eorseq	r1, r7, r0, lsl r8
    af94:	70000310 	andvc	r0, r0, r0, lsl r3
    af98:	37189f40 	ldrcc	r9, [r8, -r0, asr #30]
    af9c:	37201000 	strcc	r1, [r0, -r0]!
    afa0:	00041000 	andeq	r1, r4, r0
    afa4:	9f7fbc70 	svcls	0x007fbc70
    afa8:	10003720 	andne	r3, r0, r0, lsr #14
    afac:	10003726 	andne	r3, r0, r6, lsr #14
    afb0:	b8700004 	ldmdalt	r0!, {r2}^
    afb4:	37269f7f 			; <UNDEFINED> instruction: 0x37269f7f
    afb8:	37301000 	ldrcc	r1, [r0, -r0]!
    afbc:	00011000 	andeq	r1, r1, r0
    afc0:	00000050 	andeq	r0, r0, r0, asr r0
	...
    afcc:	a0000000 	andge	r0, r0, r0
    afd0:	b0100036 	andslt	r0, r0, r6, lsr r0
    afd4:	01100036 	tsteq	r0, r6, lsr r0
    afd8:	36b05200 	ldrtcc	r5, [r0], r0, lsl #4
    afdc:	37261000 	strcc	r1, [r6, -r0]!
    afe0:	00021000 	andeq	r1, r2, r0
    afe4:	37267870 			; <UNDEFINED> instruction: 0x37267870
    afe8:	37301000 	ldrcc	r1, [r0, -r0]!
    afec:	00031000 	andeq	r1, r3, r0
    aff0:	0000c070 	andeq	ip, r0, r0, ror r0
	...
    b000:	0036a000 	eorseq	sl, r6, r0
    b004:	0036dc10 	eorseq	sp, r6, r0, lsl ip
    b008:	53000110 	movwpl	r0, #272	; 0x110
    b00c:	100036dc 	ldrdne	r3, [r0], -ip
    b010:	10003726 	andne	r3, r0, r6, lsr #14
    b014:	60700002 	rsbsvs	r0, r0, r2
    b018:	10003726 	andne	r3, r0, r6, lsr #14
    b01c:	10003730 	andne	r3, r0, r0, lsr r7
    b020:	28700002 	ldmdacs	r0!, {r1}^
	...
    b02c:	1000368a 	andne	r3, r0, sl, lsl #13
    b030:	1000368c 	andne	r3, r0, ip, lsl #13
    b034:	007d0002 	rsbseq	r0, sp, r2
    b038:	1000368c 	andne	r3, r0, ip, lsl #13
    b03c:	1000369e 	mulne	r0, lr, r6
    b040:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    b054:	1000368a 	andne	r3, r0, sl, lsl #13
    b058:	10003696 	mulne	r0, r6, r6
    b05c:	96500001 	ldrbls	r0, [r0], -r1
    b060:	98100036 	ldmdals	r0, {r1, r2, r4, r5}
    b064:	04100036 	ldreq	r0, [r0], #-54	; 0xffffffca
    b068:	5001f300 	andpl	pc, r1, r0, lsl #6
    b06c:	0036989f 	mlaseq	r6, pc, r8, r9	; <UNPREDICTABLE>
    b070:	00369b10 	eorseq	r9, r6, r0, lsl fp
    b074:	50000110 	andpl	r0, r0, r0, lsl r1
    b078:	1000369b 	mulne	r0, fp, r6
    b07c:	1000369e 	mulne	r0, lr, r6
    b080:	01f30004 	mvnseq	r0, r4
    b084:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    b094:	1000368e 	andne	r3, r0, lr, lsl #13
    b098:	10003692 	mulne	r0, r2, r6
    b09c:	92530001 	subsls	r0, r3, #1
    b0a0:	96100036 			; <UNDEFINED> instruction: 0x96100036
    b0a4:	02100036 	andseq	r0, r0, #54	; 0x36
    b0a8:	98187000 	ldmdals	r8, {ip, sp, lr}
    b0ac:	9b100036 	blls	40b18c <__RAM_SIZE+0x30b18c>
    b0b0:	02100036 	andseq	r0, r0, #54	; 0x36
    b0b4:	00187000 	andseq	r7, r8, r0
	...
    b0c0:	92000000 	andls	r0, r0, #0
    b0c4:	96100036 			; <UNDEFINED> instruction: 0x96100036
    b0c8:	01100036 	tsteq	r0, r6, lsr r0
    b0cc:	36985300 	ldrcc	r5, [r8], r0, lsl #6
    b0d0:	369b1000 	ldrcc	r1, [fp], r0
    b0d4:	00011000 	andeq	r1, r1, r0
    b0d8:	00000053 	andeq	r0, r0, r3, asr r0
    b0dc:	00000000 	andeq	r0, r0, r0
    b0e0:	00366800 	eorseq	r6, r6, r0, lsl #16
    b0e4:	00366a10 	eorseq	r6, r6, r0, lsl sl
    b0e8:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    b0ec:	00366a00 	eorseq	r6, r6, r0, lsl #20
    b0f0:	00368a10 	eorseq	r8, r6, r0, lsl sl
    b0f4:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    b0f8:	00000008 	andeq	r0, r0, r8
	...
    b104:	00367000 	eorseq	r7, r6, r0
    b108:	00367310 	eorseq	r7, r6, r0, lsl r3
    b10c:	50000110 	andpl	r0, r0, r0, lsl r1
    b110:	10003673 	andne	r3, r0, r3, ror r6
    b114:	1000368a 	andne	r3, r0, sl, lsl #13
    b118:	00540001 	subseq	r0, r4, r1
    b11c:	00000000 	andeq	r0, r0, r0
    b120:	4c000000 	stcmi	0, cr0, [r0], {-0}
    b124:	4e100036 	mrcmi	0, 0, r0, cr0, cr6, {1}
    b128:	02100036 	andseq	r0, r0, #54	; 0x36
    b12c:	4e007d00 	cdpmi	13, 0, cr7, cr0, cr0, {0}
    b130:	68100036 	ldmdavs	r0, {r1, r2, r4, r5}
    b134:	02100036 	andseq	r0, r0, #54	; 0x36
    b138:	00087d00 	andeq	r7, r8, r0, lsl #26
    b13c:	00000000 	andeq	r0, r0, r0
    b140:	30000000 	andcc	r0, r0, r0
    b144:	32100036 	andscc	r0, r0, #54	; 0x36
    b148:	02100036 	andseq	r0, r0, #54	; 0x36
    b14c:	32007d00 	andcc	r7, r0, #0, 26
    b150:	4c100036 	ldcmi	0, cr0, [r0], {54}	; 0x36
    b154:	02100036 	andseq	r0, r0, #54	; 0x36
    b158:	00087d00 	andeq	r7, r8, r0, lsl #26
    b15c:	00000000 	andeq	r0, r0, r0
    b160:	b0000000 	andlt	r0, r0, r0
    b164:	b2100034 	andslt	r0, r0, #52	; 0x34
    b168:	02100034 	andseq	r0, r0, #52	; 0x34
    b16c:	b2007d00 	andlt	r7, r0, #0, 26
    b170:	b4100034 	ldrlt	r0, [r0], #-52	; 0xffffffcc
    b174:	02100034 	andseq	r0, r0, #52	; 0x34
    b178:	b4047d00 	strlt	r7, [r4], #-3328	; 0xfffff300
    b17c:	c4100034 	ldrgt	r0, [r0], #-52	; 0xffffffcc
    b180:	02100034 	andseq	r0, r0, #52	; 0x34
    b184:	c4107d00 	ldrgt	r7, [r0], #-3328	; 0xfffff300
    b188:	c8100034 	ldmdagt	r0, {r2, r4, r5}
    b18c:	02100034 	andseq	r0, r0, #52	; 0x34
    b190:	00047d00 	andeq	r7, r4, r0, lsl #26
    b194:	00000000 	andeq	r0, r0, r0
    b198:	c8000000 	stmdagt	r0, {}	; <UNPREDICTABLE>
    b19c:	ca100034 	bgt	40b274 <__RAM_SIZE+0x30b274>
    b1a0:	02100034 	andseq	r0, r0, #52	; 0x34
    b1a4:	ca007d00 	bgt	2a5ac <__HEAP_SIZE+0x295ac>
    b1a8:	dc100034 	ldcle	0, cr0, [r0], {52}	; 0x34
    b1ac:	02100035 	andseq	r0, r0, #53	; 0x35
    b1b0:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    b1c0:	00000001 	andeq	r0, r0, r1
    b1c4:	0034c800 	eorseq	ip, r4, r0, lsl #16
    b1c8:	0034d410 	eorseq	sp, r4, r0, lsl r4
    b1cc:	50000110 	andpl	r0, r0, r0, lsl r1
    b1d0:	100034d4 	ldrdne	r3, [r0], -r4
    b1d4:	100034e6 	andne	r3, r0, r6, ror #9
    b1d8:	e8540001 	ldmda	r4, {r0}^
    b1dc:	92100034 	andsls	r0, r0, #52	; 0x34
    b1e0:	01100035 	tsteq	r0, r5, lsr r0
    b1e4:	35ae5400 	strcc	r5, [lr, #1024]!	; 0x400
    b1e8:	35bc1000 	ldrcc	r1, [ip, #0]!
    b1ec:	00011000 	andeq	r1, r1, r0
    b1f0:	0035bc54 	eorseq	fp, r5, r4, asr ip
    b1f4:	0035be10 	eorseq	fp, r5, r0, lsl lr
    b1f8:	70000310 	andvc	r0, r0, r0, lsl r3
    b1fc:	00009f01 	andeq	r9, r0, r1, lsl #30
	...
    b208:	35020000 	strcc	r0, [r2, #-0]
    b20c:	357a1000 	ldrbcc	r1, [sl, #-0]!
    b210:	00011000 	andeq	r1, r1, r0
    b214:	0035ae53 	eorseq	sl, r5, r3, asr lr
    b218:	0035b410 	eorseq	fp, r5, r0, lsl r4
    b21c:	53000110 	movwpl	r0, #272	; 0x110
	...
    b228:	00000001 	andeq	r0, r0, r1
    b22c:	10003592 	mulne	r0, r2, r5
    b230:	100035a9 	andne	r3, r0, r9, lsr #11
    b234:	c2500001 	subsgt	r0, r0, #1
    b238:	dc100035 	ldcle	0, cr0, [r0], {53}	; 0x35
    b23c:	01100035 	tsteq	r0, r5, lsr r0
    b240:	00005000 	andeq	r5, r0, r0
	...
    b24c:	35be0000 	ldrcc	r0, [lr, #0]!
    b250:	35c21000 	strbcc	r1, [r2]
    b254:	00011000 	andeq	r1, r1, r0
    b258:	0035c250 	eorseq	ip, r5, r0, asr r2
    b25c:	0035c810 	eorseq	ip, r5, r0, lsl r8
    b260:	74000610 	strvc	r0, [r0], #-1552	; 0xfffff9f0
    b264:	1c007300 	stcne	3, cr7, [r0], {-0}
    b268:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    b274:	f2000000 	vhadd.s8	d0, d0, d0
    b278:	f6100034 			; <UNDEFINED> instruction: 0xf6100034
    b27c:	01100034 	tsteq	r0, r4, lsr r0
    b280:	34f85300 	ldrbtcc	r5, [r8], #768	; 0x300
    b284:	35021000 	strcc	r1, [r2, #-0]
    b288:	00011000 	andeq	r1, r1, r0
    b28c:	0035b453 	eorseq	fp, r5, r3, asr r4
    b290:	0035dc10 	eorseq	sp, r5, r0, lsl ip
    b294:	53000110 	movwpl	r0, #272	; 0x110
	...
    b2a0:	00000101 	andeq	r0, r0, r1, lsl #2
    b2a4:	353e0000 	ldrcc	r0, [lr, #-0]!
    b2a8:	35921000 	ldrcc	r1, [r2]
    b2ac:	00011000 	andeq	r1, r1, r0
    b2b0:	0035ae54 	eorseq	sl, r5, r4, asr lr
    b2b4:	0035bc10 	eorseq	fp, r5, r0, lsl ip
    b2b8:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    b2bc:	100035bc 			; <UNDEFINED> instruction: 0x100035bc
    b2c0:	100035be 			; <UNDEFINED> instruction: 0x100035be
    b2c4:	01700003 	cmneq	r0, r3
    b2c8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    b2cc:	00000000 	andeq	r0, r0, r0
    b2d0:	7e010000 	cdpvc	0, 0, cr0, cr1, cr0, {0}
    b2d4:	92100035 	andsls	r0, r0, #53	; 0x35
    b2d8:	01100035 	tsteq	r0, r5, lsr r0
    b2dc:	00005300 	andeq	r5, r0, r0, lsl #6
    b2e0:	00000000 	andeq	r0, r0, r0
	...

Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
    __asm volatile ( "mrs %0, ipsr" : "=r" ( ulCurrentInterrupt )::"memory" );
   0:	00000084 	andeq	r0, r0, r4, lsl #1
    if( ulCurrentInterrupt == 0 )
   4:	00000002 	andeq	r0, r0, r2
        xReturn = pdFALSE;
   8:	00040000 	andeq	r0, r4, r0
}
   c:	00000000 	andeq	r0, r0, r0
    ( pxList->uxNumberOfItems ) = ( UBaseType_t ) ( pxList->uxNumberOfItems + 1U );
  10:	10000800 	andne	r0, r0, r0, lsl #16
}
  14:	00000044 	andeq	r0, r0, r4, asr #32
  18:	00000000 	andeq	r0, r0, r0
  1c:	00000010 	andeq	r0, r0, r0, lsl r0
  20:	00000000 	andeq	r0, r0, r0
  24:	00000010 	andeq	r0, r0, r0, lsl r0
  28:	00000000 	andeq	r0, r0, r0
  2c:	00000020 	andeq	r0, r0, r0, lsr #32
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
  30:	10000844 	andne	r0, r0, r4, asr #16
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
  34:	0000004c 	andeq	r0, r0, ip, asr #32
  38:	10000890 	mulne	r0, r0, r8
  3c:	00000068 	andeq	r0, r0, r8, rrx
  40:	100008f8 	strdne	r0, [r0], -r8
        BaseType_t xReturn = pdFAIL;
  44:	0000001c 	andeq	r0, r0, ip, lsl r0
    }
  48:	10000914 	andne	r0, r0, r4, lsl r9
                pxBlock = heapPROTECT_BLOCK_POINTER( pxBlock->pxNextFreeBlock );
  4c:	00000018 	andeq	r0, r0, r8, lsl r0
            while( pxBlock != pxEnd )
  50:	1000092c 	andne	r0, r0, ip, lsr #18
  54:	00000018 	andeq	r0, r0, r8, lsl r0
                if( pxBlock->xBlockSize > xMaxSize )
  58:	10000944 	andne	r0, r0, r4, asr #18
  5c:	00000018 	andeq	r0, r0, r8, lsl r0
                if( pxBlock->xBlockSize < xMinSize )
  60:	1000095c 	andne	r0, r0, ip, asr r9
                    xMinSize = pxBlock->xBlockSize;
  64:	00000018 	andeq	r0, r0, r8, lsl r0
  68:	10000974 	andne	r0, r0, r4, ror r9
  6c:	00000018 	andeq	r0, r0, r8, lsl r0
  70:	1000098c 	andne	r0, r0, ip, lsl #19
  74:	00000024 	andeq	r0, r0, r4, lsr #32
  78:	100009b0 			; <UNDEFINED> instruction: 0x100009b0
  7c:	0000002c 	andeq	r0, r0, ip, lsr #32
	...
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
  88:	00000024 	andeq	r0, r0, r4, lsr #32
  8c:	0bd70002 	bleq	ff5c009c <__StackTop+0xc74c009c>
  90:	00040000 	andeq	r0, r4, r0
	...
                if( xTicksToWait == ( TickType_t ) 0 )
  9c:	00000010 	andeq	r0, r0, r0, lsl r0
  a0:	100009dc 	ldrdne	r0, [r0], -ip
                else if( xEntryTimeSet == pdFALSE )
  a4:	0000002c 	andeq	r0, r0, ip, lsr #32
	...
        prvLockQueue( pxQueue );
  b0:	000000a4 	andeq	r0, r0, r4, lsr #1
  b4:	10c00002 	sbcne	r0, r0, r2
  b8:	00040000 	andeq	r0, r4, r0
	...
  c4:	00000008 	andeq	r0, r0, r8
  c8:	10000a08 	andne	r0, r0, r8, lsl #20
  cc:	00000002 	andeq	r0, r0, r2
        if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
  d0:	00000000 	andeq	r0, r0, r0
  d4:	0000000e 	andeq	r0, r0, lr
  d8:	10000a0a 	andne	r0, r0, sl, lsl #20
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
  dc:	00000024 	andeq	r0, r0, r4, lsr #32
  e0:	10000a2e 	andne	r0, r0, lr, lsr #20
                    if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
  e4:	0000007e 	andeq	r0, r0, lr, ror r0
  e8:	10000aac 	andne	r0, r0, ip, lsr #21
                vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
  ec:	00000138 	andeq	r0, r0, r8, lsr r1
  f0:	10000be4 	andne	r0, r0, r4, ror #23
                prvUnlockQueue( pxQueue );
  f4:	00000094 	muleq	r0, r4, r0
  f8:	10000c78 	andne	r0, r0, r8, ror ip
                if( xTaskResumeAll() == pdFALSE )
  fc:	000000c6 	andeq	r0, r0, r6, asr #1
 100:	10000d40 	andne	r0, r0, r0, asr #26
                    taskYIELD_WITHIN_API();
 104:	000003ea 	andeq	r0, r0, sl, ror #7
                    if( xInheritanceOccurred != pdFALSE )
 108:	10001130 	andne	r1, r0, r0, lsr r1
                return errQUEUE_EMPTY;
 10c:	00000396 	muleq	r0, r6, r3
                        taskENTER_CRITICAL();
 110:	100014c8 	andne	r1, r0, r8, asr #9
                            uxHighestWaitingPriority = prvGetDisinheritPriorityAfterTimeout( pxQueue );
 114:	00000680 	andeq	r0, r0, r0, lsl #13
 118:	10001b48 	andne	r1, r0, r8, asr #22
                            vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 11c:	0000000c 	andeq	r0, r0, ip
                        taskEXIT_CRITICAL();
 120:	10001b54 	andne	r1, r0, r4, asr fp
 124:	0000002c 	andeq	r0, r0, ip, lsr #32
 128:	00000000 	andeq	r0, r0, r0
 12c:	0000002c 	andeq	r0, r0, ip, lsr #32
 130:	00000000 	andeq	r0, r0, r0
 134:	00000028 	andeq	r0, r0, r8, lsr #32
 138:	00000000 	andeq	r0, r0, r0
 13c:	00000020 	andeq	r0, r0, r0, lsr #32
 140:	00000000 	andeq	r0, r0, r0
 144:	0000001c 	andeq	r0, r0, ip, lsl r0
 148:	00000000 	andeq	r0, r0, r0
 14c:	00000030 	andeq	r0, r0, r0, lsr r0
	...
 158:	00000044 	andeq	r0, r0, r4, asr #32
 15c:	2c850002 	stccs	0, cr0, [r5], {2}
 160:	00040000 	andeq	r0, r4, r0
 164:	00000000 	andeq	r0, r0, r0
 168:	10001b80 	andne	r1, r0, r0, lsl #23
 16c:	00000014 	andeq	r0, r0, r4, lsl r0
 170:	00000000 	andeq	r0, r0, r0
 174:	00000014 	andeq	r0, r0, r4, lsl r0
 178:	10001b94 	mulne	r0, r4, fp
 17c:	0000001e 	andeq	r0, r0, lr, lsl r0
 180:	10001bb4 			; <UNDEFINED> instruction: 0x10001bb4
 184:	00000024 	andeq	r0, r0, r4, lsr #32
 188:	00000000 	andeq	r0, r0, r0
 18c:	00000008 	andeq	r0, r0, r8
 190:	00000000 	andeq	r0, r0, r0
 194:	00000020 	andeq	r0, r0, r0, lsr #32
	...
 1a0:	00000054 	andeq	r0, r0, r4, asr r0
 1a4:	2ed80002 	cdpcs	0, 13, cr0, cr8, cr2, {0}
 1a8:	00040000 	andeq	r0, r4, r0
 1ac:	00000000 	andeq	r0, r0, r0
 1b0:	10001bd8 	ldrdne	r1, [r0], -r8
 1b4:	0000002c 	andeq	r0, r0, ip, lsr #32
 1b8:	10001c04 	andne	r1, r0, r4, lsl #24
 1bc:	00000036 	andeq	r0, r0, r6, lsr r0
 1c0:	10001c3c 	andne	r1, r0, ip, lsr ip
 1c4:	00000018 	andeq	r0, r0, r8, lsl r0
 1c8:	10001c54 	andne	r1, r0, r4, asr ip
 1cc:	00000050 	andeq	r0, r0, r0, asr r0
 1d0:	10001ca4 	andne	r1, r0, r4, lsr #25
 1d4:	0000007c 	andeq	r0, r0, ip, ror r0
 1d8:	10001d20 	andne	r1, r0, r0, lsr #26
 1dc:	00000184 	andeq	r0, r0, r4, lsl #3
 1e0:	10001ea4 	andne	r1, r0, r4, lsr #29
 1e4:	00000006 	andeq	r0, r0, r6
 1e8:	10001eac 	andne	r1, r0, ip, lsr #29
 1ec:	00000008 	andeq	r0, r0, r8
	...
 1f8:	0000001c 	andeq	r0, r0, ip, lsl r0
 1fc:	378a0002 	strcc	r0, [sl, r2]
 200:	00040000 	andeq	r0, r4, r0
 204:	00000000 	andeq	r0, r0, r0
 208:	10001eb4 			; <UNDEFINED> instruction: 0x10001eb4
 20c:	000000fc 	strdeq	r0, [r0], -ip
	...
 218:	0000003c 	andeq	r0, r0, ip, lsr r0
 21c:	3a1b0002 	bcc	6c022c <__RAM_SIZE+0x5c022c>
 220:	00040000 	andeq	r0, r4, r0
 224:	00000000 	andeq	r0, r0, r0
 228:	10001fb0 			; <UNDEFINED> instruction: 0x10001fb0
 22c:	0000001a 	andeq	r0, r0, sl, lsl r0
 230:	10001fca 	andne	r1, r0, sl, asr #31
 234:	00000006 	andeq	r0, r0, r6
 238:	00000000 	andeq	r0, r0, r0
 23c:	00000016 	andeq	r0, r0, r6, lsl r0
 240:	10001fd0 	ldrdne	r1, [r0], -r0
 244:	00000032 	andeq	r0, r0, r2, lsr r0
 248:	10002002 	andne	r2, r0, r2
 24c:	00000024 	andeq	r0, r0, r4, lsr #32
	...
 258:	0000015c 	andeq	r0, r0, ip, asr r1
 25c:	3cea0002 	stclcc	0, cr0, [sl], #8
 260:	00040000 	andeq	r0, r4, r0
	...
 26c:	00000010 	andeq	r0, r0, r0, lsl r0
 270:	00000000 	andeq	r0, r0, r0
 274:	0000001e 	andeq	r0, r0, lr, lsl r0
 278:	10002026 	andne	r2, r0, r6, lsr #32
 27c:	0000001a 	andeq	r0, r0, sl, lsl r0
 280:	10002040 	andne	r2, r0, r0, asr #32
 284:	00000076 	andeq	r0, r0, r6, ror r0
 288:	100020b6 	strhne	r2, [r0], -r6
 28c:	00000024 	andeq	r0, r0, r4, lsr #32
 290:	100020da 	ldrdne	r2, [r0], -sl
 294:	00000058 	andeq	r0, r0, r8, asr r0
 298:	10002132 	andne	r2, r0, r2, lsr r1
 29c:	00000082 	andeq	r0, r0, r2, lsl #1
 2a0:	100021b4 			; <UNDEFINED> instruction: 0x100021b4
 2a4:	00000086 	andeq	r0, r0, r6, lsl #1
 2a8:	1000223a 	andne	r2, r0, sl, lsr r2
 2ac:	00000020 	andeq	r0, r0, r0, lsr #32
 2b0:	1000225a 	andne	r2, r0, sl, asr r2
 2b4:	0000003e 	andeq	r0, r0, lr, lsr r0
 2b8:	00000000 	andeq	r0, r0, r0
 2bc:	00000018 	andeq	r0, r0, r8, lsl r0
 2c0:	00000000 	andeq	r0, r0, r0
 2c4:	00000056 	andeq	r0, r0, r6, asr r0
 2c8:	00000000 	andeq	r0, r0, r0
 2cc:	0000002a 	andeq	r0, r0, sl, lsr #32
 2d0:	00000000 	andeq	r0, r0, r0
 2d4:	00000020 	andeq	r0, r0, r0, lsr #32
 2d8:	00000000 	andeq	r0, r0, r0
 2dc:	0000010c 	andeq	r0, r0, ip, lsl #2
 2e0:	00000000 	andeq	r0, r0, r0
 2e4:	00000018 	andeq	r0, r0, r8, lsl r0
 2e8:	00000000 	andeq	r0, r0, r0
 2ec:	00000016 	andeq	r0, r0, r6, lsl r0
 2f0:	00000000 	andeq	r0, r0, r0
 2f4:	0000001e 	andeq	r0, r0, lr, lsl r0
 2f8:	00000000 	andeq	r0, r0, r0
 2fc:	0000002c 	andeq	r0, r0, ip, lsr #32
 300:	00000000 	andeq	r0, r0, r0
 304:	000000bc 	strheq	r0, [r0], -ip
 308:	00000000 	andeq	r0, r0, r0
 30c:	00000086 	andeq	r0, r0, r6, lsl #1
 310:	10002298 	mulne	r0, r8, r2
 314:	000000f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
 318:	00000000 	andeq	r0, r0, r0
 31c:	00000126 	andeq	r0, r0, r6, lsr #2
 320:	00000000 	andeq	r0, r0, r0
 324:	0000002c 	andeq	r0, r0, ip, lsr #32
 328:	00000000 	andeq	r0, r0, r0
 32c:	000000f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
 330:	00000000 	andeq	r0, r0, r0
 334:	00000080 	andeq	r0, r0, r0, lsl #1
 338:	00000000 	andeq	r0, r0, r0
 33c:	0000002c 	andeq	r0, r0, ip, lsr #32
 340:	00000000 	andeq	r0, r0, r0
 344:	00000012 	andeq	r0, r0, r2, lsl r0
 348:	00000000 	andeq	r0, r0, r0
 34c:	00000016 	andeq	r0, r0, r6, lsl r0
 350:	00000000 	andeq	r0, r0, r0
 354:	00000004 	andeq	r0, r0, r4
 358:	00000000 	andeq	r0, r0, r0
 35c:	00000010 	andeq	r0, r0, r0, lsl r0
 360:	00000000 	andeq	r0, r0, r0
 364:	00000004 	andeq	r0, r0, r4
 368:	00000000 	andeq	r0, r0, r0
 36c:	00000004 	andeq	r0, r0, r4
 370:	00000000 	andeq	r0, r0, r0
 374:	0000000c 	andeq	r0, r0, ip
 378:	00000000 	andeq	r0, r0, r0
 37c:	00000010 	andeq	r0, r0, r0, lsl r0
 380:	10002388 	andne	r2, r0, r8, lsl #7
 384:	00000052 	andeq	r0, r0, r2, asr r0
 388:	00000000 	andeq	r0, r0, r0
 38c:	0000000c 	andeq	r0, r0, ip
 390:	00000000 	andeq	r0, r0, r0
 394:	00000026 	andeq	r0, r0, r6, lsr #32
 398:	00000000 	andeq	r0, r0, r0
 39c:	00000026 	andeq	r0, r0, r6, lsr #32
 3a0:	00000000 	andeq	r0, r0, r0
 3a4:	00000018 	andeq	r0, r0, r8, lsl r0
 3a8:	00000000 	andeq	r0, r0, r0
 3ac:	00000016 	andeq	r0, r0, r6, lsl r0
	...
 3b8:	0000028c 	andeq	r0, r0, ip, lsl #5
 3bc:	61ab0002 			; <UNDEFINED> instruction: 0x61ab0002
 3c0:	00040000 	andeq	r0, r4, r0
	...
 3cc:	00000044 	andeq	r0, r0, r4, asr #32
 3d0:	100023dc 	ldrdne	r2, [r0], -ip
 3d4:	00000040 	andeq	r0, r0, r0, asr #32
 3d8:	00000000 	andeq	r0, r0, r0
 3dc:	0000003e 	andeq	r0, r0, lr, lsr r0
 3e0:	00000000 	andeq	r0, r0, r0
 3e4:	00000012 	andeq	r0, r0, r2, lsl r0
 3e8:	1000241c 	andne	r2, r0, ip, lsl r4
 3ec:	00000028 	andeq	r0, r0, r8, lsr #32
 3f0:	10002444 	andne	r2, r0, r4, asr #8
 3f4:	00000096 	muleq	r0, r6, r0
 3f8:	100024da 	ldrdne	r2, [r0], -sl
 3fc:	00000052 	andeq	r0, r0, r2, asr r0
 400:	1000252c 	andne	r2, r0, ip, lsr #10
 404:	00000068 	andeq	r0, r0, r8, rrx
 408:	10002594 	mulne	r0, r4, r5
 40c:	000000bc 	strheq	r0, [r0], -ip
 410:	10002650 	andne	r2, r0, r0, asr r6
 414:	00000062 	andeq	r0, r0, r2, rrx
 418:	100026b2 			; <UNDEFINED> instruction: 0x100026b2
 41c:	00000024 	andeq	r0, r0, r4, lsr #32
 420:	100026d8 	ldrdne	r2, [r0], -r8
 424:	0000004c 	andeq	r0, r0, ip, asr #32
 428:	10002724 	andne	r2, r0, r4, lsr #14
 42c:	000000a8 	andeq	r0, r0, r8, lsr #1
 430:	100027cc 	andne	r2, r0, ip, asr #15
 434:	00000028 	andeq	r0, r0, r8, lsr #32
 438:	100027f4 	strdne	r2, [r0], -r4
 43c:	00000022 	andeq	r0, r0, r2, lsr #32
 440:	00000000 	andeq	r0, r0, r0
 444:	0000009c 	muleq	r0, ip, r0
 448:	00000000 	andeq	r0, r0, r0
 44c:	0000009c 	muleq	r0, ip, r0
 450:	00000000 	andeq	r0, r0, r0
 454:	00000020 	andeq	r0, r0, r0, lsr #32
 458:	00000000 	andeq	r0, r0, r0
 45c:	00000020 	andeq	r0, r0, r0, lsr #32
 460:	00000000 	andeq	r0, r0, r0
 464:	00000020 	andeq	r0, r0, r0, lsr #32
 468:	00000000 	andeq	r0, r0, r0
 46c:	00000020 	andeq	r0, r0, r0, lsr #32
 470:	00000000 	andeq	r0, r0, r0
 474:	000000d8 	ldrdeq	r0, [r0], -r8
 478:	00000000 	andeq	r0, r0, r0
 47c:	00000084 	andeq	r0, r0, r4, lsl #1
 480:	00000000 	andeq	r0, r0, r0
 484:	000000ac 	andeq	r0, r0, ip, lsr #1
 488:	00000000 	andeq	r0, r0, r0
 48c:	0000003c 	andeq	r0, r0, ip, lsr r0
 490:	10002818 	andne	r2, r0, r8, lsl r8
 494:	00000010 	andeq	r0, r0, r0, lsl r0
 498:	10002828 	andne	r2, r0, r8, lsr #16
 49c:	0000000c 	andeq	r0, r0, ip
 4a0:	00000000 	andeq	r0, r0, r0
 4a4:	0000000c 	andeq	r0, r0, ip
 4a8:	10002834 	andne	r2, r0, r4, lsr r8
 4ac:	0000000c 	andeq	r0, r0, ip
 4b0:	00000000 	andeq	r0, r0, r0
 4b4:	00000014 	andeq	r0, r0, r4, lsl r0
 4b8:	00000000 	andeq	r0, r0, r0
 4bc:	00000034 	andeq	r0, r0, r4, lsr r0
 4c0:	00000000 	andeq	r0, r0, r0
 4c4:	0000000c 	andeq	r0, r0, ip
 4c8:	00000000 	andeq	r0, r0, r0
 4cc:	0000000c 	andeq	r0, r0, ip
 4d0:	10002840 	andne	r2, r0, r0, asr #16
 4d4:	0000003c 	andeq	r0, r0, ip, lsr r0
 4d8:	1000287c 	andne	r2, r0, ip, ror r8
 4dc:	00000160 	andeq	r0, r0, r0, ror #2
 4e0:	100029dc 	ldrdne	r2, [r0], -ip
 4e4:	00000130 	andeq	r0, r0, r0, lsr r1
 4e8:	00000000 	andeq	r0, r0, r0
 4ec:	0000005c 	andeq	r0, r0, ip, asr r0
 4f0:	10002b0c 	andne	r2, r0, ip, lsl #22
 4f4:	0000001e 	andeq	r0, r0, lr, lsl r0
 4f8:	10002b2c 	andne	r2, r0, ip, lsr #22
 4fc:	00000038 	andeq	r0, r0, r8, lsr r0
 500:	00000000 	andeq	r0, r0, r0
 504:	0000007c 	andeq	r0, r0, ip, ror r0
 508:	00000000 	andeq	r0, r0, r0
 50c:	00000024 	andeq	r0, r0, r4, lsr #32
 510:	00000000 	andeq	r0, r0, r0
 514:	000000a4 	andeq	r0, r0, r4, lsr #1
 518:	00000000 	andeq	r0, r0, r0
 51c:	00000020 	andeq	r0, r0, r0, lsr #32
 520:	00000000 	andeq	r0, r0, r0
 524:	00000020 	andeq	r0, r0, r0, lsr #32
 528:	00000000 	andeq	r0, r0, r0
 52c:	00000020 	andeq	r0, r0, r0, lsr #32
 530:	00000000 	andeq	r0, r0, r0
 534:	00000020 	andeq	r0, r0, r0, lsr #32
 538:	10002b64 	andne	r2, r0, r4, ror #22
 53c:	00000084 	andeq	r0, r0, r4, lsl #1
 540:	00000000 	andeq	r0, r0, r0
 544:	000000a4 	andeq	r0, r0, r4, lsr #1
 548:	10002be8 	andne	r2, r0, r8, ror #23
 54c:	0000001c 	andeq	r0, r0, ip, lsl r0
 550:	00000000 	andeq	r0, r0, r0
 554:	00000040 	andeq	r0, r0, r0, asr #32
 558:	10002c04 	andne	r2, r0, r4, lsl #24
 55c:	0000003c 	andeq	r0, r0, ip, lsr r0
 560:	10002c40 	andne	r2, r0, r0, asr #24
 564:	000000e4 	andeq	r0, r0, r4, ror #1
 568:	00000000 	andeq	r0, r0, r0
 56c:	000000b8 	strheq	r0, [r0], -r8
 570:	00000000 	andeq	r0, r0, r0
 574:	00000024 	andeq	r0, r0, r4, lsr #32
 578:	10002d24 	andne	r2, r0, r4, lsr #26
 57c:	00000018 	andeq	r0, r0, r8, lsl r0
 580:	10002d3c 	andne	r2, r0, ip, lsr sp
 584:	0000007c 	andeq	r0, r0, ip, ror r0
 588:	10002db8 			; <UNDEFINED> instruction: 0x10002db8
 58c:	0000000c 	andeq	r0, r0, ip
 590:	10002dc4 	andne	r2, r0, r4, asr #27
 594:	00000048 	andeq	r0, r0, r8, asr #32
 598:	00000000 	andeq	r0, r0, r0
 59c:	00000018 	andeq	r0, r0, r8, lsl r0
 5a0:	00000000 	andeq	r0, r0, r0
 5a4:	0000000c 	andeq	r0, r0, ip
 5a8:	00000000 	andeq	r0, r0, r0
 5ac:	00000010 	andeq	r0, r0, r0, lsl r0
 5b0:	00000000 	andeq	r0, r0, r0
 5b4:	00000020 	andeq	r0, r0, r0, lsr #32
 5b8:	00000000 	andeq	r0, r0, r0
 5bc:	000000b8 	strheq	r0, [r0], -r8
 5c0:	10002e0c 	andne	r2, r0, ip, lsl #28
 5c4:	00000080 	andeq	r0, r0, r0, lsl #1
 5c8:	00000000 	andeq	r0, r0, r0
 5cc:	00000090 	muleq	r0, r0, r0
 5d0:	00000000 	andeq	r0, r0, r0
 5d4:	00000018 	andeq	r0, r0, r8, lsl r0
 5d8:	00000000 	andeq	r0, r0, r0
 5dc:	00000014 	andeq	r0, r0, r4, lsl r0
 5e0:	00000000 	andeq	r0, r0, r0
 5e4:	000000a8 	andeq	r0, r0, r8, lsr #1
 5e8:	00000000 	andeq	r0, r0, r0
 5ec:	000000cc 	andeq	r0, r0, ip, asr #1
 5f0:	00000000 	andeq	r0, r0, r0
 5f4:	0000011c 	andeq	r0, r0, ip, lsl r1
 5f8:	00000000 	andeq	r0, r0, r0
 5fc:	00000158 	andeq	r0, r0, r8, asr r1
 600:	00000000 	andeq	r0, r0, r0
 604:	000000ec 	andeq	r0, r0, ip, ror #1
 608:	00000000 	andeq	r0, r0, r0
 60c:	00000038 	andeq	r0, r0, r8, lsr r0
 610:	00000000 	andeq	r0, r0, r0
 614:	00000034 	andeq	r0, r0, r4, lsr r0
 618:	10002e8c 	andne	r2, r0, ip, lsl #29
 61c:	00000018 	andeq	r0, r0, r8, lsl r0
 620:	10002ea4 	andne	r2, r0, r4, lsr #29
 624:	0000006c 	andeq	r0, r0, ip, rrx
 628:	10002f10 	andne	r2, r0, r0, lsl pc
 62c:	00000048 	andeq	r0, r0, r8, asr #32
 630:	10002f58 	andne	r2, r0, r8, asr pc
 634:	00000018 	andeq	r0, r0, r8, lsl r0
 638:	00000000 	andeq	r0, r0, r0
 63c:	00000074 	andeq	r0, r0, r4, ror r0
	...
 648:	00000104 	andeq	r0, r0, r4, lsl #2
 64c:	9a9f0002 	bls	fe7c065c <__StackTop+0xc66c065c>
 650:	00040000 	andeq	r0, r4, r0
 654:	00000000 	andeq	r0, r0, r0
 658:	10002f70 	andne	r2, r0, r0, ror pc
 65c:	00000020 	andeq	r0, r0, r0, lsr #32
 660:	10002f90 	mulne	r0, r0, pc	; <UNPREDICTABLE>
 664:	00000048 	andeq	r0, r0, r8, asr #32
 668:	10002fd8 	ldrdne	r2, [r0], -r8
 66c:	00000028 	andeq	r0, r0, r8, lsr #32
 670:	10003000 	andne	r3, r0, r0
 674:	00000040 	andeq	r0, r0, r0, asr #32
 678:	10003040 	andne	r3, r0, r0, asr #32
 67c:	00000030 	andeq	r0, r0, r0, lsr r0
 680:	10003070 	andne	r3, r0, r0, ror r0
 684:	0000002c 	andeq	r0, r0, ip, lsr #32
 688:	1000309c 	mulne	r0, ip, r0
 68c:	00000068 	andeq	r0, r0, r8, rrx
 690:	10003104 	andne	r3, r0, r4, lsl #2
 694:	000000f8 	strdeq	r0, [r0], -r8
 698:	100031fc 	strdne	r3, [r0], -ip
 69c:	00000016 	andeq	r0, r0, r6, lsl r0
 6a0:	10003214 	andne	r3, r0, r4, lsl r2
 6a4:	00000060 	andeq	r0, r0, r0, rrx
 6a8:	00000000 	andeq	r0, r0, r0
 6ac:	00000036 	andeq	r0, r0, r6, lsr r0
 6b0:	10003274 	andne	r3, r0, r4, ror r2
 6b4:	0000005c 	andeq	r0, r0, ip, asr r0
 6b8:	00000000 	andeq	r0, r0, r0
 6bc:	00000038 	andeq	r0, r0, r8, lsr r0
 6c0:	00000000 	andeq	r0, r0, r0
 6c4:	00000020 	andeq	r0, r0, r0, lsr #32
 6c8:	00000000 	andeq	r0, r0, r0
 6cc:	0000004c 	andeq	r0, r0, ip, asr #32
 6d0:	00000000 	andeq	r0, r0, r0
 6d4:	00000034 	andeq	r0, r0, r4, lsr r0
 6d8:	00000000 	andeq	r0, r0, r0
 6dc:	0000000c 	andeq	r0, r0, ip
 6e0:	00000000 	andeq	r0, r0, r0
 6e4:	00000004 	andeq	r0, r0, r4
 6e8:	00000000 	andeq	r0, r0, r0
 6ec:	0000002c 	andeq	r0, r0, ip, lsr #32
 6f0:	00000000 	andeq	r0, r0, r0
 6f4:	00000020 	andeq	r0, r0, r0, lsr #32
 6f8:	00000000 	andeq	r0, r0, r0
 6fc:	00000008 	andeq	r0, r0, r8
 700:	00000000 	andeq	r0, r0, r0
 704:	00000004 	andeq	r0, r0, r4
 708:	00000000 	andeq	r0, r0, r0
 70c:	00000014 	andeq	r0, r0, r4, lsl r0
 710:	00000000 	andeq	r0, r0, r0
 714:	00000004 	andeq	r0, r0, r4
 718:	00000000 	andeq	r0, r0, r0
 71c:	00000020 	andeq	r0, r0, r0, lsr #32
 720:	00000000 	andeq	r0, r0, r0
 724:	00000012 	andeq	r0, r0, r2, lsl r0
 728:	00000000 	andeq	r0, r0, r0
 72c:	00000012 	andeq	r0, r0, r2, lsl r0
 730:	00000000 	andeq	r0, r0, r0
 734:	00000028 	andeq	r0, r0, r8, lsr #32
 738:	00000000 	andeq	r0, r0, r0
 73c:	00000028 	andeq	r0, r0, r8, lsr #32
 740:	00000000 	andeq	r0, r0, r0
 744:	00000014 	andeq	r0, r0, r4, lsl r0
	...
 750:	00000064 	andeq	r0, r0, r4, rrx
 754:	b42f0002 	strtlt	r0, [pc], #-2	; 75c <__STACKSEAL_SIZE+0x75c>
 758:	00040000 	andeq	r0, r4, r0
 75c:	00000000 	andeq	r0, r0, r0
 760:	100032d0 	ldrdne	r3, [r0], -r0
 764:	00000058 	andeq	r0, r0, r8, asr r0
 768:	10003328 	andne	r3, r0, r8, lsr #6
 76c:	00000064 	andeq	r0, r0, r4, rrx
 770:	1000338c 	andne	r3, r0, ip, lsl #7
 774:	000000d4 	ldrdeq	r0, [r0], -r4
 778:	10003460 	andne	r3, r0, r0, ror #8
 77c:	00000050 	andeq	r0, r0, r0, asr r0
 780:	00000000 	andeq	r0, r0, r0
 784:	0000000c 	andeq	r0, r0, ip
 788:	00000000 	andeq	r0, r0, r0
 78c:	0000000c 	andeq	r0, r0, ip
 790:	00000000 	andeq	r0, r0, r0
 794:	00000002 	andeq	r0, r0, r2
 798:	00000000 	andeq	r0, r0, r0
 79c:	00000032 	andeq	r0, r0, r2, lsr r0
 7a0:	00000000 	andeq	r0, r0, r0
 7a4:	00000080 	andeq	r0, r0, r0, lsl #1
 7a8:	00000000 	andeq	r0, r0, r0
 7ac:	0000002c 	andeq	r0, r0, ip, lsr #32
	...
 7b8:	00000074 	andeq	r0, r0, r4, ror r0
 7bc:	ba480002 	blt	12007cc <__RAM_SIZE+0x11007cc>
 7c0:	00040000 	andeq	r0, r4, r0
 7c4:	00000000 	andeq	r0, r0, r0
 7c8:	100034b0 			; <UNDEFINED> instruction: 0x100034b0
 7cc:	00000018 	andeq	r0, r0, r8, lsl r0
 7d0:	100034c8 	andne	r3, r0, r8, asr #9
 7d4:	00000114 	andeq	r0, r0, r4, lsl r1
 7d8:	100035dc 	ldrdne	r3, [r0], -ip
 7dc:	0000003c 	andeq	r0, r0, ip, lsr r0
 7e0:	10003618 	andne	r3, r0, r8, lsl r6
 7e4:	00000016 	andeq	r0, r0, r6, lsl r0
 7e8:	10003630 	andne	r3, r0, r0, lsr r6
 7ec:	0000001c 	andeq	r0, r0, ip, lsl r0
 7f0:	1000364c 	andne	r3, r0, ip, asr #12
 7f4:	0000001c 	andeq	r0, r0, ip, lsl r0
 7f8:	10003668 	andne	r3, r0, r8, ror #12
 7fc:	00000022 	andeq	r0, r0, r2, lsr #32
 800:	1000368a 	andne	r3, r0, sl, lsl #13
 804:	00000014 	andeq	r0, r0, r4, lsl r0
 808:	100036a0 	andne	r3, r0, r0, lsr #13
 80c:	00000090 	muleq	r0, r0, r0
 810:	10003730 	andne	r3, r0, r0, lsr r7
 814:	00000040 	andeq	r0, r0, r0, asr #32
 818:	00000000 	andeq	r0, r0, r0
 81c:	00000002 	andeq	r0, r0, r2
 820:	00000000 	andeq	r0, r0, r0
 824:	0000000e 	andeq	r0, r0, lr
	...
 830:	0000005c 	andeq	r0, r0, ip, asr r0
 834:	bfaf0002 	svclt	0x00af0002
 838:	00040000 	andeq	r0, r4, r0
 83c:	00000000 	andeq	r0, r0, r0
 840:	10003770 	andne	r3, r0, r0, ror r7
 844:	00000026 	andeq	r0, r0, r6, lsr #32
 848:	00000000 	andeq	r0, r0, r0
 84c:	00000010 	andeq	r0, r0, r0, lsl r0
 850:	00000000 	andeq	r0, r0, r0
 854:	0000000e 	andeq	r0, r0, lr
 858:	00000000 	andeq	r0, r0, r0
 85c:	0000000e 	andeq	r0, r0, lr
 860:	1000379c 	mulne	r0, ip, r7
 864:	0000001a 	andeq	r0, r0, sl, lsl r0
 868:	100037bc 			; <UNDEFINED> instruction: 0x100037bc
 86c:	00000016 	andeq	r0, r0, r6, lsl r0
 870:	100037d2 	ldrdne	r3, [r0], -r2
 874:	0000000e 	andeq	r0, r0, lr
 878:	100037e0 	andne	r3, r0, r0, ror #15
 87c:	00000044 	andeq	r0, r0, r4, asr #32
 880:	10003828 	andne	r3, r0, r8, lsr #16
 884:	00000012 	andeq	r0, r0, r2, lsl r0
	...
 890:	0000001c 	andeq	r0, r0, ip, lsl r0
 894:	c12d0002 			; <UNDEFINED> instruction: 0xc12d0002
 898:	00040000 	andeq	r0, r4, r0
 89c:	00000000 	andeq	r0, r0, r0
 8a0:	10003860 	andne	r3, r0, r0, ror #16
 8a4:	00000070 	andeq	r0, r0, r0, ror r0
	...
 8b0:	0000001c 	andeq	r0, r0, ip, lsl r0
 8b4:	c1530002 	cmpgt	r3, r2
 8b8:	00040000 	andeq	r0, r4, r0
 8bc:	00000000 	andeq	r0, r0, r0
 8c0:	100038d0 	ldrdne	r3, [r0], -r0
 8c4:	00000048 	andeq	r0, r0, r8, asr #32
	...

Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
    __asm volatile ( "mrs %0, ipsr" : "=r" ( ulCurrentInterrupt )::"memory" );
   0:	100008c0 	andne	r0, r0, r0, asr #17
    if( ulCurrentInterrupt == 0 )
   4:	100008c4 	andne	r0, r0, r4, asr #17
        xReturn = pdFALSE;
   8:	100008ce 	andne	r0, r0, lr, asr #17
}
   c:	100008de 	ldrdne	r0, [r0], -lr
	...
  18:	10000800 	andne	r0, r0, r0, lsl #16
  1c:	10000844 	andne	r0, r0, r4, asr #16
  20:	00000001 	andeq	r0, r0, r1
  24:	00000001 	andeq	r0, r0, r1
  28:	00000001 	andeq	r0, r0, r1
  2c:	00000001 	andeq	r0, r0, r1
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
  30:	00000001 	andeq	r0, r0, r1
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
  34:	00000001 	andeq	r0, r0, r1
  38:	10000844 	andne	r0, r0, r4, asr #16
  3c:	10000890 	mulne	r0, r0, r8
  40:	10000890 	mulne	r0, r0, r8
        BaseType_t xReturn = pdFAIL;
  44:	100008f8 	strdne	r0, [r0], -r8
    }
  48:	100008f8 	strdne	r0, [r0], -r8
                pxBlock = heapPROTECT_BLOCK_POINTER( pxBlock->pxNextFreeBlock );
  4c:	10000914 	andne	r0, r0, r4, lsl r9
            while( pxBlock != pxEnd )
  50:	10000914 	andne	r0, r0, r4, lsl r9
  54:	1000092c 	andne	r0, r0, ip, lsr #18
                if( pxBlock->xBlockSize > xMaxSize )
  58:	1000092c 	andne	r0, r0, ip, lsr #18
  5c:	10000944 	andne	r0, r0, r4, asr #18
                if( pxBlock->xBlockSize < xMinSize )
  60:	10000944 	andne	r0, r0, r4, asr #18
                    xMinSize = pxBlock->xBlockSize;
  64:	1000095c 	andne	r0, r0, ip, asr r9
  68:	1000095c 	andne	r0, r0, ip, asr r9
  6c:	10000974 	andne	r0, r0, r4, ror r9
  70:	10000974 	andne	r0, r0, r4, ror r9
  74:	1000098c 	andne	r0, r0, ip, lsl #19
  78:	1000098c 	andne	r0, r0, ip, lsl #19
  7c:	100009b0 			; <UNDEFINED> instruction: 0x100009b0
            prvUnlockQueue( pxQueue );
  80:	100009b0 			; <UNDEFINED> instruction: 0x100009b0
            ( void ) xTaskResumeAll();
  84:	100009dc 	ldrdne	r0, [r0], -ip
	...
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
  90:	00000001 	andeq	r0, r0, r1
        taskENTER_CRITICAL();
  94:	00000001 	andeq	r0, r0, r1
            if( uxSemaphoreCount > ( UBaseType_t ) 0 )
  98:	100009dc 	ldrdne	r0, [r0], -ip
                if( xTicksToWait == ( TickType_t ) 0 )
  9c:	10000a08 	andne	r0, r0, r8, lsl #20
	...
        taskEXIT_CRITICAL();
  a8:	10000a4e 	andne	r0, r0, lr, asr #20
        vTaskSuspendAll();
  ac:	10000a50 	andne	r0, r0, r0, asr sl
        prvLockQueue( pxQueue );
  b0:	10000a52 	andne	r0, r0, r2, asr sl
  b4:	10000a70 	andne	r0, r0, r0, ror sl
	...
  c0:	10000c02 	andne	r0, r0, r2, lsl #24
  c4:	10000c1c 	andne	r0, r0, ip, lsl ip
  c8:	10000c24 	andne	r0, r0, r4, lsr #24
  cc:	10000c28 	andne	r0, r0, r8, lsr #24
        if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
  d0:	10000c28 	andne	r0, r0, r8, lsr #24
  d4:	10000c56 	andne	r0, r0, r6, asr ip
	...
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
  e0:	10000cae 	andne	r0, r0, lr, lsr #25
                    if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
  e4:	10000cd0 	ldrdne	r0, [r0], -r0	; <UNPREDICTABLE>
  e8:	10000cde 	ldrdne	r0, [r0], -lr
                vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
  ec:	10000ce4 	andne	r0, r0, r4, ror #25
  f0:	10000ce4 	andne	r0, r0, r4, ror #25
                prvUnlockQueue( pxQueue );
  f4:	10000d0c 	andne	r0, r0, ip, lsl #26
	...
                if( xTaskResumeAll() == pdFALSE )
 100:	100014dc 	ldrdne	r1, [r0], -ip
                    taskYIELD_WITHIN_API();
 104:	100014de 	ldrdne	r1, [r0], -lr
                    if( xInheritanceOccurred != pdFALSE )
 108:	10001988 	andne	r1, r0, r8, lsl #19
                return errQUEUE_EMPTY;
 10c:	100019fa 	strdne	r1, [r0], -sl
	...
                            uxHighestWaitingPriority = prvGetDisinheritPriorityAfterTimeout( pxQueue );
 118:	1000175a 	andne	r1, r0, sl, asr r7
                            vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 11c:	1000178c 	andne	r1, r0, ip, lsl #15
                        taskEXIT_CRITICAL();
 120:	100018e0 	andne	r1, r0, r0, ror #17
 124:	100018fa 	strdne	r1, [r0], -sl
	...
 130:	100017aa 	andne	r1, r0, sl, lsr #15
 134:	100017e0 	andne	r1, r0, r0, ror #15
 138:	10001862 	andne	r1, r0, r2, ror #16
 13c:	1000187e 	andne	r1, r0, lr, ror r8
	...
 148:	100017e8 	andne	r1, r0, r8, ror #15
 14c:	10001826 	andne	r1, r0, r6, lsr #16
 150:	10001828 	andne	r1, r0, r8, lsr #16
 154:	10001830 	andne	r1, r0, r0, lsr r8
	...
 160:	00000001 	andeq	r0, r0, r1
 164:	00000001 	andeq	r0, r0, r1
 168:	10000a08 	andne	r0, r0, r8, lsl #20
 16c:	10000a0a 	andne	r0, r0, sl, lsl #20
 170:	00000001 	andeq	r0, r0, r1
 174:	00000001 	andeq	r0, r0, r1
 178:	10000a0a 	andne	r0, r0, sl, lsl #20
 17c:	10000a2e 	andne	r0, r0, lr, lsr #20
 180:	10000a2e 	andne	r0, r0, lr, lsr #20
 184:	10000aac 	andne	r0, r0, ip, lsr #21
 188:	10000aac 	andne	r0, r0, ip, lsr #21
 18c:	10000be4 	andne	r0, r0, r4, ror #23
 190:	10000be4 	andne	r0, r0, r4, ror #23
 194:	10000c78 	andne	r0, r0, r8, ror ip
 198:	10000c78 	andne	r0, r0, r8, ror ip
 19c:	10000d3e 	andne	r0, r0, lr, lsr sp
 1a0:	10000d40 	andne	r0, r0, r0, asr #26
 1a4:	1000112a 	andne	r1, r0, sl, lsr #2
 1a8:	10001130 	andne	r1, r0, r0, lsr r1
 1ac:	100014c6 	andne	r1, r0, r6, asr #9
 1b0:	100014c8 	andne	r1, r0, r8, asr #9
 1b4:	10001b48 	andne	r1, r0, r8, asr #22
 1b8:	10001b48 	andne	r1, r0, r8, asr #22
 1bc:	10001b54 	andne	r1, r0, r4, asr fp
 1c0:	10001b54 	andne	r1, r0, r4, asr fp
 1c4:	10001b80 	andne	r1, r0, r0, lsl #23
 1c8:	00000001 	andeq	r0, r0, r1
 1cc:	00000001 	andeq	r0, r0, r1
 1d0:	00000001 	andeq	r0, r0, r1
 1d4:	00000001 	andeq	r0, r0, r1
 1d8:	00000001 	andeq	r0, r0, r1
 1dc:	00000001 	andeq	r0, r0, r1
 1e0:	00000001 	andeq	r0, r0, r1
 1e4:	00000001 	andeq	r0, r0, r1
 1e8:	00000001 	andeq	r0, r0, r1
 1ec:	00000001 	andeq	r0, r0, r1
	...
 1f8:	10001b80 	andne	r1, r0, r0, lsl #23
 1fc:	10001b94 	mulne	r0, r4, fp
 200:	00000001 	andeq	r0, r0, r1
 204:	00000001 	andeq	r0, r0, r1
 208:	10001b94 	mulne	r0, r4, fp
 20c:	10001bb2 			; <UNDEFINED> instruction: 0x10001bb2
 210:	10001bb4 			; <UNDEFINED> instruction: 0x10001bb4
 214:	10001bd8 	ldrdne	r1, [r0], -r8
 218:	00000001 	andeq	r0, r0, r1
 21c:	00000001 	andeq	r0, r0, r1
 220:	00000001 	andeq	r0, r0, r1
 224:	00000001 	andeq	r0, r0, r1
	...
 230:	10001bd8 	ldrdne	r1, [r0], -r8
 234:	10001c04 	andne	r1, r0, r4, lsl #24
 238:	10001c04 	andne	r1, r0, r4, lsl #24
 23c:	10001c3a 	andne	r1, r0, sl, lsr ip
 240:	10001c3c 	andne	r1, r0, ip, lsr ip
 244:	10001c54 	andne	r1, r0, r4, asr ip
 248:	10001c54 	andne	r1, r0, r4, asr ip
 24c:	10001ca4 	andne	r1, r0, r4, lsr #25
 250:	10001ca4 	andne	r1, r0, r4, lsr #25
 254:	10001d20 	andne	r1, r0, r0, lsr #26
 258:	10001d20 	andne	r1, r0, r0, lsr #26
 25c:	10001ea4 	andne	r1, r0, r4, lsr #29
 260:	10001ea4 	andne	r1, r0, r4, lsr #29
 264:	10001eaa 	andne	r1, r0, sl, lsr #29
 268:	10001eac 	andne	r1, r0, ip, lsr #29
 26c:	10001eb4 			; <UNDEFINED> instruction: 0x10001eb4
	...
 278:	10001eb4 			; <UNDEFINED> instruction: 0x10001eb4
 27c:	10001fb0 			; <UNDEFINED> instruction: 0x10001fb0
	...
 288:	10001fb0 			; <UNDEFINED> instruction: 0x10001fb0
 28c:	10001fca 	andne	r1, r0, sl, asr #31
 290:	10001fca 	andne	r1, r0, sl, asr #31
 294:	10001fd0 	ldrdne	r1, [r0], -r0
 298:	00000001 	andeq	r0, r0, r1
 29c:	00000001 	andeq	r0, r0, r1
 2a0:	10001fd0 	ldrdne	r1, [r0], -r0
 2a4:	10002002 	andne	r2, r0, r2
 2a8:	10002002 	andne	r2, r0, r2
 2ac:	10002026 	andne	r2, r0, r6, lsr #32
	...
 2b8:	100020f2 	strdne	r2, [r0], -r2	; <UNPREDICTABLE>
 2bc:	1000211e 	andne	r2, r0, lr, lsl r1
 2c0:	10002120 	andne	r2, r0, r0, lsr #2
 2c4:	10002132 	andne	r2, r0, r2, lsr r1
	...
 2d0:	00000001 	andeq	r0, r0, r1
 2d4:	00000001 	andeq	r0, r0, r1
 2d8:	00000001 	andeq	r0, r0, r1
 2dc:	00000001 	andeq	r0, r0, r1
	...
 2e8:	00000001 	andeq	r0, r0, r1
 2ec:	00000001 	andeq	r0, r0, r1
 2f0:	00000001 	andeq	r0, r0, r1
 2f4:	00000001 	andeq	r0, r0, r1
	...
 300:	00000001 	andeq	r0, r0, r1
 304:	00000001 	andeq	r0, r0, r1
 308:	00000001 	andeq	r0, r0, r1
 30c:	00000001 	andeq	r0, r0, r1
	...
 318:	100022a6 	andne	r2, r0, r6, lsr #5
 31c:	100022bc 			; <UNDEFINED> instruction: 0x100022bc
 320:	100022c0 	andne	r2, r0, r0, asr #5
 324:	100022e4 	andne	r2, r0, r4, ror #5
 328:	10002318 	andne	r2, r0, r8, lsl r3
 32c:	10002328 	andne	r2, r0, r8, lsr #6
	...
 338:	00000001 	andeq	r0, r0, r1
 33c:	00000001 	andeq	r0, r0, r1
 340:	00000001 	andeq	r0, r0, r1
 344:	00000001 	andeq	r0, r0, r1
 348:	00000001 	andeq	r0, r0, r1
 34c:	00000001 	andeq	r0, r0, r1
	...
 358:	00000001 	andeq	r0, r0, r1
 35c:	00000001 	andeq	r0, r0, r1
 360:	00000001 	andeq	r0, r0, r1
 364:	00000001 	andeq	r0, r0, r1
 368:	00000001 	andeq	r0, r0, r1
 36c:	00000001 	andeq	r0, r0, r1
	...
 378:	00000001 	andeq	r0, r0, r1
 37c:	00000001 	andeq	r0, r0, r1
 380:	00000001 	andeq	r0, r0, r1
 384:	00000001 	andeq	r0, r0, r1
	...
 390:	00000001 	andeq	r0, r0, r1
 394:	00000001 	andeq	r0, r0, r1
 398:	00000001 	andeq	r0, r0, r1
 39c:	00000001 	andeq	r0, r0, r1
 3a0:	10002026 	andne	r2, r0, r6, lsr #32
 3a4:	10002040 	andne	r2, r0, r0, asr #32
 3a8:	10002040 	andne	r2, r0, r0, asr #32
 3ac:	100020b6 	strhne	r2, [r0], -r6
 3b0:	100020b6 	strhne	r2, [r0], -r6
 3b4:	100020da 	ldrdne	r2, [r0], -sl
 3b8:	100020da 	ldrdne	r2, [r0], -sl
 3bc:	10002132 	andne	r2, r0, r2, lsr r1
 3c0:	10002132 	andne	r2, r0, r2, lsr r1
 3c4:	100021b4 			; <UNDEFINED> instruction: 0x100021b4
 3c8:	100021b4 			; <UNDEFINED> instruction: 0x100021b4
 3cc:	1000223a 	andne	r2, r0, sl, lsr r2
 3d0:	1000223a 	andne	r2, r0, sl, lsr r2
 3d4:	1000225a 	andne	r2, r0, sl, asr r2
 3d8:	1000225a 	andne	r2, r0, sl, asr r2
 3dc:	10002298 	mulne	r0, r8, r2
 3e0:	00000001 	andeq	r0, r0, r1
 3e4:	00000001 	andeq	r0, r0, r1
 3e8:	00000001 	andeq	r0, r0, r1
 3ec:	00000001 	andeq	r0, r0, r1
 3f0:	00000001 	andeq	r0, r0, r1
 3f4:	00000001 	andeq	r0, r0, r1
 3f8:	00000001 	andeq	r0, r0, r1
 3fc:	00000001 	andeq	r0, r0, r1
 400:	00000001 	andeq	r0, r0, r1
 404:	00000001 	andeq	r0, r0, r1
 408:	00000001 	andeq	r0, r0, r1
 40c:	00000001 	andeq	r0, r0, r1
 410:	00000001 	andeq	r0, r0, r1
 414:	00000001 	andeq	r0, r0, r1
 418:	00000001 	andeq	r0, r0, r1
 41c:	00000001 	andeq	r0, r0, r1
 420:	00000001 	andeq	r0, r0, r1
 424:	00000001 	andeq	r0, r0, r1
 428:	00000001 	andeq	r0, r0, r1
 42c:	00000001 	andeq	r0, r0, r1
 430:	00000001 	andeq	r0, r0, r1
 434:	00000001 	andeq	r0, r0, r1
 438:	10002298 	mulne	r0, r8, r2
 43c:	10002388 	andne	r2, r0, r8, lsl #7
 440:	00000001 	andeq	r0, r0, r1
 444:	00000001 	andeq	r0, r0, r1
 448:	00000001 	andeq	r0, r0, r1
 44c:	00000001 	andeq	r0, r0, r1
 450:	00000001 	andeq	r0, r0, r1
 454:	00000001 	andeq	r0, r0, r1
 458:	00000001 	andeq	r0, r0, r1
 45c:	00000001 	andeq	r0, r0, r1
 460:	00000001 	andeq	r0, r0, r1
 464:	00000001 	andeq	r0, r0, r1
 468:	00000001 	andeq	r0, r0, r1
 46c:	00000001 	andeq	r0, r0, r1
 470:	00000001 	andeq	r0, r0, r1
 474:	00000001 	andeq	r0, r0, r1
 478:	00000001 	andeq	r0, r0, r1
 47c:	00000001 	andeq	r0, r0, r1
 480:	00000001 	andeq	r0, r0, r1
 484:	00000001 	andeq	r0, r0, r1
 488:	00000001 	andeq	r0, r0, r1
 48c:	00000001 	andeq	r0, r0, r1
 490:	00000001 	andeq	r0, r0, r1
 494:	00000001 	andeq	r0, r0, r1
 498:	00000001 	andeq	r0, r0, r1
 49c:	00000001 	andeq	r0, r0, r1
 4a0:	00000001 	andeq	r0, r0, r1
 4a4:	00000001 	andeq	r0, r0, r1
 4a8:	10002388 	andne	r2, r0, r8, lsl #7
 4ac:	100023da 	ldrdne	r2, [r0], -sl
 4b0:	00000001 	andeq	r0, r0, r1
 4b4:	00000001 	andeq	r0, r0, r1
 4b8:	00000001 	andeq	r0, r0, r1
 4bc:	00000001 	andeq	r0, r0, r1
 4c0:	00000001 	andeq	r0, r0, r1
 4c4:	00000001 	andeq	r0, r0, r1
 4c8:	00000001 	andeq	r0, r0, r1
 4cc:	00000001 	andeq	r0, r0, r1
 4d0:	00000001 	andeq	r0, r0, r1
 4d4:	00000001 	andeq	r0, r0, r1
	...
 4e0:	1000265e 	andne	r2, r0, lr, asr r6
 4e4:	1000267e 	andne	r2, r0, lr, ror r6
 4e8:	100026a6 	andne	r2, r0, r6, lsr #13
 4ec:	100026b0 			; <UNDEFINED> instruction: 0x100026b0
	...
 4f8:	100026d8 	ldrdne	r2, [r0], -r8
 4fc:	100026de 	ldrdne	r2, [r0], -lr
 500:	100026e0 	andne	r2, r0, r0, ror #13
 504:	10002712 	andne	r2, r0, r2, lsl r7
	...
 510:	00000001 	andeq	r0, r0, r1
 514:	00000001 	andeq	r0, r0, r1
 518:	00000001 	andeq	r0, r0, r1
 51c:	00000001 	andeq	r0, r0, r1
	...
 528:	00000001 	andeq	r0, r0, r1
 52c:	00000001 	andeq	r0, r0, r1
 530:	00000001 	andeq	r0, r0, r1
 534:	00000001 	andeq	r0, r0, r1
	...
 540:	10002888 	andne	r2, r0, r8, lsl #17
 544:	1000289a 	mulne	r0, sl, r8
 548:	1000289c 	mulne	r0, ip, r8
 54c:	100028ba 			; <UNDEFINED> instruction: 0x100028ba
 550:	100028bc 			; <UNDEFINED> instruction: 0x100028bc
 554:	100028d6 	ldrdne	r2, [r0], -r6
 558:	100028da 	ldrdne	r2, [r0], -sl
 55c:	100029a0 	andne	r2, r0, r0, lsr #19
 560:	100029ac 	andne	r2, r0, ip, lsr #19
 564:	100029ae 	andne	r2, r0, lr, lsr #19
	...
 570:	100028ea 	andne	r2, r0, sl, ror #17
 574:	100028f0 	strdne	r2, [r0], -r0
 578:	10002962 	andne	r2, r0, r2, ror #18
 57c:	10002980 	andne	r2, r0, r0, lsl #19
	...
 588:	100028f0 	strdne	r2, [r0], -r0
 58c:	100028fa 	strdne	r2, [r0], -sl
 590:	10002986 	andne	r2, r0, r6, lsl #19
 594:	100029a0 	andne	r2, r0, r0, lsr #19
	...
 5a0:	100029e2 	andne	r2, r0, r2, ror #19
 5a4:	100029f6 	strdne	r2, [r0], -r6
 5a8:	100029fa 	strdne	r2, [r0], -sl
 5ac:	10002a06 	andne	r2, r0, r6, lsl #20
 5b0:	10002a08 	andne	r2, r0, r8, lsl #20
 5b4:	10002ae0 	andne	r2, r0, r0, ror #21
 5b8:	10002ae2 	andne	r2, r0, r2, ror #21
 5bc:	10002ae2 	andne	r2, r0, r2, ror #21
	...
 5c8:	100029fa 	strdne	r2, [r0], -sl
 5cc:	10002a00 	andne	r2, r0, r0, lsl #20
 5d0:	10002a16 	andne	r2, r0, r6, lsl sl
 5d4:	10002a36 	andne	r2, r0, r6, lsr sl
	...
 5e0:	10002a00 	andne	r2, r0, r0, lsl #20
 5e4:	10002a06 	andne	r2, r0, r6, lsl #20
 5e8:	10002a36 	andne	r2, r0, r6, lsr sl
 5ec:	10002a54 	andne	r2, r0, r4, asr sl
	...
 5f8:	10002aac 	andne	r2, r0, ip, lsr #21
 5fc:	10002ab2 			; <UNDEFINED> instruction: 0x10002ab2
 600:	10002ac4 	andne	r2, r0, r4, asr #21
 604:	10002ae0 	andne	r2, r0, r0, ror #21
	...
 610:	00000001 	andeq	r0, r0, r1
 614:	00000001 	andeq	r0, r0, r1
 618:	00000001 	andeq	r0, r0, r1
 61c:	00000001 	andeq	r0, r0, r1
 620:	00000001 	andeq	r0, r0, r1
 624:	00000001 	andeq	r0, r0, r1
 628:	00000001 	andeq	r0, r0, r1
 62c:	00000001 	andeq	r0, r0, r1
	...
 638:	10002b30 	andne	r2, r0, r0, lsr fp
 63c:	10002b38 	andne	r2, r0, r8, lsr fp
 640:	10002b4a 	andne	r2, r0, sl, asr #22
 644:	10002b64 	andne	r2, r0, r4, ror #22
	...
 650:	10002b78 	andne	r2, r0, r8, ror fp
 654:	10002bc2 	andne	r2, r0, r2, asr #23
 658:	10002bc6 	andne	r2, r0, r6, asr #23
 65c:	10002be8 	andne	r2, r0, r8, ror #23
	...
 668:	10002b8e 	andne	r2, r0, lr, lsl #23
 66c:	10002bbe 			; <UNDEFINED> instruction: 0x10002bbe
 670:	10002bc6 	andne	r2, r0, r6, asr #23
 674:	10002be8 	andne	r2, r0, r8, ror #23
	...
 680:	00000001 	andeq	r0, r0, r1
 684:	00000001 	andeq	r0, r0, r1
 688:	00000001 	andeq	r0, r0, r1
 68c:	00000001 	andeq	r0, r0, r1
	...
 698:	00000001 	andeq	r0, r0, r1
 69c:	00000001 	andeq	r0, r0, r1
 6a0:	00000001 	andeq	r0, r0, r1
 6a4:	00000001 	andeq	r0, r0, r1
	...
 6b0:	10002c46 	andne	r2, r0, r6, asr #24
 6b4:	10002c66 	andne	r2, r0, r6, ror #24
 6b8:	10002ce2 	andne	r2, r0, r2, ror #25
 6bc:	10002ce8 	andne	r2, r0, r8, ror #25
	...
 6c8:	10002c6e 	andne	r2, r0, lr, ror #24
 6cc:	10002c8c 	andne	r2, r0, ip, lsl #25
 6d0:	10002ce8 	andne	r2, r0, r8, ror #25
 6d4:	10002cee 	andne	r2, r0, lr, ror #25
	...
 6e0:	00000001 	andeq	r0, r0, r1
 6e4:	00000001 	andeq	r0, r0, r1
 6e8:	00000001 	andeq	r0, r0, r1
 6ec:	00000001 	andeq	r0, r0, r1
	...
 6f8:	00000001 	andeq	r0, r0, r1
 6fc:	00000001 	andeq	r0, r0, r1
 700:	00000001 	andeq	r0, r0, r1
 704:	00000001 	andeq	r0, r0, r1
	...
 710:	10002d46 	andne	r2, r0, r6, asr #26
 714:	10002d64 	andne	r2, r0, r4, ror #26
 718:	10002d6c 	andne	r2, r0, ip, ror #26
 71c:	10002db8 			; <UNDEFINED> instruction: 0x10002db8
	...
 728:	00000001 	andeq	r0, r0, r1
 72c:	00000001 	andeq	r0, r0, r1
 730:	00000001 	andeq	r0, r0, r1
 734:	00000001 	andeq	r0, r0, r1
	...
 740:	00000001 	andeq	r0, r0, r1
 744:	00000001 	andeq	r0, r0, r1
 748:	00000001 	andeq	r0, r0, r1
 74c:	00000001 	andeq	r0, r0, r1
	...
 758:	00000001 	andeq	r0, r0, r1
 75c:	00000001 	andeq	r0, r0, r1
 760:	00000001 	andeq	r0, r0, r1
 764:	00000001 	andeq	r0, r0, r1
	...
 770:	10002ece 	andne	r2, r0, lr, asr #29
 774:	10002efc 	strdne	r2, [r0], -ip
 778:	10002f00 	andne	r2, r0, r0, lsl #30
 77c:	10002f00 	andne	r2, r0, r0, lsl #30
 780:	10002f00 	andne	r2, r0, r0, lsl #30
 784:	10002f10 	andne	r2, r0, r0, lsl pc
	...
 790:	00000001 	andeq	r0, r0, r1
 794:	00000001 	andeq	r0, r0, r1
 798:	100023dc 	ldrdne	r2, [r0], -ip
 79c:	1000241c 	andne	r2, r0, ip, lsl r4
 7a0:	00000001 	andeq	r0, r0, r1
 7a4:	00000001 	andeq	r0, r0, r1
 7a8:	00000001 	andeq	r0, r0, r1
 7ac:	00000001 	andeq	r0, r0, r1
 7b0:	1000241c 	andne	r2, r0, ip, lsl r4
 7b4:	10002444 	andne	r2, r0, r4, asr #8
 7b8:	10002444 	andne	r2, r0, r4, asr #8
 7bc:	100024da 	ldrdne	r2, [r0], -sl
 7c0:	100024da 	ldrdne	r2, [r0], -sl
 7c4:	1000252c 	andne	r2, r0, ip, lsr #10
 7c8:	1000252c 	andne	r2, r0, ip, lsr #10
 7cc:	10002594 	mulne	r0, r4, r5
 7d0:	10002594 	mulne	r0, r4, r5
 7d4:	10002650 	andne	r2, r0, r0, asr r6
 7d8:	10002650 	andne	r2, r0, r0, asr r6
 7dc:	100026b2 			; <UNDEFINED> instruction: 0x100026b2
 7e0:	100026b2 			; <UNDEFINED> instruction: 0x100026b2
 7e4:	100026d6 	ldrdne	r2, [r0], -r6
 7e8:	100026d8 	ldrdne	r2, [r0], -r8
 7ec:	10002724 	andne	r2, r0, r4, lsr #14
 7f0:	10002724 	andne	r2, r0, r4, lsr #14
 7f4:	100027cc 	andne	r2, r0, ip, asr #15
 7f8:	100027cc 	andne	r2, r0, ip, asr #15
 7fc:	100027f4 	strdne	r2, [r0], -r4
 800:	100027f4 	strdne	r2, [r0], -r4
 804:	10002816 	andne	r2, r0, r6, lsl r8
 808:	00000001 	andeq	r0, r0, r1
 80c:	00000001 	andeq	r0, r0, r1
 810:	00000001 	andeq	r0, r0, r1
 814:	00000001 	andeq	r0, r0, r1
 818:	00000001 	andeq	r0, r0, r1
 81c:	00000001 	andeq	r0, r0, r1
 820:	00000001 	andeq	r0, r0, r1
 824:	00000001 	andeq	r0, r0, r1
 828:	00000001 	andeq	r0, r0, r1
 82c:	00000001 	andeq	r0, r0, r1
 830:	00000001 	andeq	r0, r0, r1
 834:	00000001 	andeq	r0, r0, r1
 838:	00000001 	andeq	r0, r0, r1
 83c:	00000001 	andeq	r0, r0, r1
 840:	00000001 	andeq	r0, r0, r1
 844:	00000001 	andeq	r0, r0, r1
 848:	00000001 	andeq	r0, r0, r1
 84c:	00000001 	andeq	r0, r0, r1
 850:	00000001 	andeq	r0, r0, r1
 854:	00000001 	andeq	r0, r0, r1
 858:	10002818 	andne	r2, r0, r8, lsl r8
 85c:	10002828 	andne	r2, r0, r8, lsr #16
 860:	10002828 	andne	r2, r0, r8, lsr #16
 864:	10002834 	andne	r2, r0, r4, lsr r8
 868:	00000001 	andeq	r0, r0, r1
 86c:	00000001 	andeq	r0, r0, r1
 870:	10002834 	andne	r2, r0, r4, lsr r8
 874:	10002840 	andne	r2, r0, r0, asr #16
 878:	00000001 	andeq	r0, r0, r1
 87c:	00000001 	andeq	r0, r0, r1
 880:	00000001 	andeq	r0, r0, r1
 884:	00000001 	andeq	r0, r0, r1
 888:	00000001 	andeq	r0, r0, r1
 88c:	00000001 	andeq	r0, r0, r1
 890:	00000001 	andeq	r0, r0, r1
 894:	00000001 	andeq	r0, r0, r1
 898:	10002840 	andne	r2, r0, r0, asr #16
 89c:	1000287c 	andne	r2, r0, ip, ror r8
 8a0:	1000287c 	andne	r2, r0, ip, ror r8
 8a4:	100029dc 	ldrdne	r2, [r0], -ip
 8a8:	100029dc 	ldrdne	r2, [r0], -ip
 8ac:	10002b0c 	andne	r2, r0, ip, lsl #22
 8b0:	00000001 	andeq	r0, r0, r1
 8b4:	00000001 	andeq	r0, r0, r1
 8b8:	10002b0c 	andne	r2, r0, ip, lsl #22
 8bc:	10002b2a 	andne	r2, r0, sl, lsr #22
 8c0:	10002b2c 	andne	r2, r0, ip, lsr #22
 8c4:	10002b64 	andne	r2, r0, r4, ror #22
 8c8:	00000001 	andeq	r0, r0, r1
 8cc:	00000001 	andeq	r0, r0, r1
 8d0:	00000001 	andeq	r0, r0, r1
 8d4:	00000001 	andeq	r0, r0, r1
 8d8:	00000001 	andeq	r0, r0, r1
 8dc:	00000001 	andeq	r0, r0, r1
 8e0:	00000001 	andeq	r0, r0, r1
 8e4:	00000001 	andeq	r0, r0, r1
 8e8:	00000001 	andeq	r0, r0, r1
 8ec:	00000001 	andeq	r0, r0, r1
 8f0:	00000001 	andeq	r0, r0, r1
 8f4:	00000001 	andeq	r0, r0, r1
 8f8:	00000001 	andeq	r0, r0, r1
 8fc:	00000001 	andeq	r0, r0, r1
 900:	10002b64 	andne	r2, r0, r4, ror #22
 904:	10002be8 	andne	r2, r0, r8, ror #23
 908:	00000001 	andeq	r0, r0, r1
 90c:	00000001 	andeq	r0, r0, r1
 910:	10002be8 	andne	r2, r0, r8, ror #23
 914:	10002c04 	andne	r2, r0, r4, lsl #24
 918:	00000001 	andeq	r0, r0, r1
 91c:	00000001 	andeq	r0, r0, r1
 920:	10002c04 	andne	r2, r0, r4, lsl #24
 924:	10002c40 	andne	r2, r0, r0, asr #24
 928:	10002c40 	andne	r2, r0, r0, asr #24
 92c:	10002d24 	andne	r2, r0, r4, lsr #26
 930:	00000001 	andeq	r0, r0, r1
 934:	00000001 	andeq	r0, r0, r1
 938:	00000001 	andeq	r0, r0, r1
 93c:	00000001 	andeq	r0, r0, r1
 940:	10002d24 	andne	r2, r0, r4, lsr #26
 944:	10002d3c 	andne	r2, r0, ip, lsr sp
 948:	10002d3c 	andne	r2, r0, ip, lsr sp
 94c:	10002db8 			; <UNDEFINED> instruction: 0x10002db8
 950:	10002db8 			; <UNDEFINED> instruction: 0x10002db8
 954:	10002dc4 	andne	r2, r0, r4, asr #27
 958:	10002dc4 	andne	r2, r0, r4, asr #27
 95c:	10002e0c 	andne	r2, r0, ip, lsl #28
 960:	00000001 	andeq	r0, r0, r1
 964:	00000001 	andeq	r0, r0, r1
 968:	00000001 	andeq	r0, r0, r1
 96c:	00000001 	andeq	r0, r0, r1
 970:	00000001 	andeq	r0, r0, r1
 974:	00000001 	andeq	r0, r0, r1
 978:	00000001 	andeq	r0, r0, r1
 97c:	00000001 	andeq	r0, r0, r1
 980:	00000001 	andeq	r0, r0, r1
 984:	00000001 	andeq	r0, r0, r1
 988:	10002e0c 	andne	r2, r0, ip, lsl #28
 98c:	10002e8c 	andne	r2, r0, ip, lsl #29
 990:	00000001 	andeq	r0, r0, r1
 994:	00000001 	andeq	r0, r0, r1
 998:	00000001 	andeq	r0, r0, r1
 99c:	00000001 	andeq	r0, r0, r1
 9a0:	00000001 	andeq	r0, r0, r1
 9a4:	00000001 	andeq	r0, r0, r1
 9a8:	00000001 	andeq	r0, r0, r1
 9ac:	00000001 	andeq	r0, r0, r1
 9b0:	00000001 	andeq	r0, r0, r1
 9b4:	00000001 	andeq	r0, r0, r1
 9b8:	00000001 	andeq	r0, r0, r1
 9bc:	00000001 	andeq	r0, r0, r1
 9c0:	00000001 	andeq	r0, r0, r1
 9c4:	00000001 	andeq	r0, r0, r1
 9c8:	00000001 	andeq	r0, r0, r1
 9cc:	00000001 	andeq	r0, r0, r1
 9d0:	00000001 	andeq	r0, r0, r1
 9d4:	00000001 	andeq	r0, r0, r1
 9d8:	00000001 	andeq	r0, r0, r1
 9dc:	00000001 	andeq	r0, r0, r1
 9e0:	10002e8c 	andne	r2, r0, ip, lsl #29
 9e4:	10002ea4 	andne	r2, r0, r4, lsr #29
 9e8:	10002ea4 	andne	r2, r0, r4, lsr #29
 9ec:	10002f10 	andne	r2, r0, r0, lsl pc
 9f0:	10002f10 	andne	r2, r0, r0, lsl pc
 9f4:	10002f58 	andne	r2, r0, r8, asr pc
 9f8:	10002f58 	andne	r2, r0, r8, asr pc
 9fc:	10002f70 	andne	r2, r0, r0, ror pc
 a00:	00000001 	andeq	r0, r0, r1
 a04:	00000001 	andeq	r0, r0, r1
	...
 a10:	10002f70 	andne	r2, r0, r0, ror pc
 a14:	10002f90 	mulne	r0, r0, pc	; <UNPREDICTABLE>
 a18:	10002f90 	mulne	r0, r0, pc	; <UNPREDICTABLE>
 a1c:	10002fd8 	ldrdne	r2, [r0], -r8
 a20:	10002fd8 	ldrdne	r2, [r0], -r8
 a24:	10003000 	andne	r3, r0, r0
 a28:	10003000 	andne	r3, r0, r0
 a2c:	10003040 	andne	r3, r0, r0, asr #32
 a30:	10003040 	andne	r3, r0, r0, asr #32
 a34:	10003070 	andne	r3, r0, r0, ror r0
 a38:	10003070 	andne	r3, r0, r0, ror r0
 a3c:	1000309c 	mulne	r0, ip, r0
 a40:	1000309c 	mulne	r0, ip, r0
 a44:	10003104 	andne	r3, r0, r4, lsl #2
 a48:	10003104 	andne	r3, r0, r4, lsl #2
 a4c:	100031fc 	strdne	r3, [r0], -ip
 a50:	100031fc 	strdne	r3, [r0], -ip
 a54:	10003212 	andne	r3, r0, r2, lsl r2
 a58:	10003214 	andne	r3, r0, r4, lsl r2
 a5c:	10003274 	andne	r3, r0, r4, ror r2
 a60:	00000001 	andeq	r0, r0, r1
 a64:	00000001 	andeq	r0, r0, r1
 a68:	10003274 	andne	r3, r0, r4, ror r2
 a6c:	100032d0 	ldrdne	r3, [r0], -r0
 a70:	00000001 	andeq	r0, r0, r1
 a74:	00000001 	andeq	r0, r0, r1
 a78:	00000001 	andeq	r0, r0, r1
 a7c:	00000001 	andeq	r0, r0, r1
 a80:	00000001 	andeq	r0, r0, r1
 a84:	00000001 	andeq	r0, r0, r1
 a88:	00000001 	andeq	r0, r0, r1
 a8c:	00000001 	andeq	r0, r0, r1
 a90:	00000001 	andeq	r0, r0, r1
 a94:	00000001 	andeq	r0, r0, r1
 a98:	00000001 	andeq	r0, r0, r1
 a9c:	00000001 	andeq	r0, r0, r1
 aa0:	00000001 	andeq	r0, r0, r1
 aa4:	00000001 	andeq	r0, r0, r1
 aa8:	00000001 	andeq	r0, r0, r1
 aac:	00000001 	andeq	r0, r0, r1
 ab0:	00000001 	andeq	r0, r0, r1
 ab4:	00000001 	andeq	r0, r0, r1
 ab8:	00000001 	andeq	r0, r0, r1
 abc:	00000001 	andeq	r0, r0, r1
 ac0:	00000001 	andeq	r0, r0, r1
 ac4:	00000001 	andeq	r0, r0, r1
 ac8:	00000001 	andeq	r0, r0, r1
 acc:	00000001 	andeq	r0, r0, r1
 ad0:	00000001 	andeq	r0, r0, r1
 ad4:	00000001 	andeq	r0, r0, r1
 ad8:	00000001 	andeq	r0, r0, r1
 adc:	00000001 	andeq	r0, r0, r1
 ae0:	00000001 	andeq	r0, r0, r1
 ae4:	00000001 	andeq	r0, r0, r1
 ae8:	00000001 	andeq	r0, r0, r1
 aec:	00000001 	andeq	r0, r0, r1
 af0:	00000001 	andeq	r0, r0, r1
 af4:	00000001 	andeq	r0, r0, r1
 af8:	00000001 	andeq	r0, r0, r1
 afc:	00000001 	andeq	r0, r0, r1
	...
 b08:	100032d0 	ldrdne	r3, [r0], -r0
 b0c:	10003328 	andne	r3, r0, r8, lsr #6
 b10:	10003328 	andne	r3, r0, r8, lsr #6
 b14:	1000338c 	andne	r3, r0, ip, lsl #7
 b18:	1000338c 	andne	r3, r0, ip, lsl #7
 b1c:	10003460 	andne	r3, r0, r0, ror #8
 b20:	10003460 	andne	r3, r0, r0, ror #8
 b24:	100034b0 			; <UNDEFINED> instruction: 0x100034b0
 b28:	00000001 	andeq	r0, r0, r1
 b2c:	00000001 	andeq	r0, r0, r1
 b30:	00000001 	andeq	r0, r0, r1
 b34:	00000001 	andeq	r0, r0, r1
 b38:	00000001 	andeq	r0, r0, r1
 b3c:	00000001 	andeq	r0, r0, r1
 b40:	00000001 	andeq	r0, r0, r1
 b44:	00000001 	andeq	r0, r0, r1
 b48:	00000001 	andeq	r0, r0, r1
 b4c:	00000001 	andeq	r0, r0, r1
 b50:	00000001 	andeq	r0, r0, r1
 b54:	00000001 	andeq	r0, r0, r1
	...
 b60:	100034b0 			; <UNDEFINED> instruction: 0x100034b0
 b64:	100034c8 	andne	r3, r0, r8, asr #9
 b68:	100034c8 	andne	r3, r0, r8, asr #9
 b6c:	100035dc 	ldrdne	r3, [r0], -ip
 b70:	100035dc 	ldrdne	r3, [r0], -ip
 b74:	10003618 	andne	r3, r0, r8, lsl r6
 b78:	10003618 	andne	r3, r0, r8, lsl r6
 b7c:	1000362e 	andne	r3, r0, lr, lsr #12
 b80:	10003630 	andne	r3, r0, r0, lsr r6
 b84:	1000364c 	andne	r3, r0, ip, asr #12
 b88:	1000364c 	andne	r3, r0, ip, asr #12
 b8c:	10003668 	andne	r3, r0, r8, ror #12
 b90:	10003668 	andne	r3, r0, r8, ror #12
 b94:	1000368a 	andne	r3, r0, sl, lsl #13
 b98:	1000368a 	andne	r3, r0, sl, lsl #13
 b9c:	1000369e 	mulne	r0, lr, r6
 ba0:	100036a0 	andne	r3, r0, r0, lsr #13
 ba4:	10003730 	andne	r3, r0, r0, lsr r7
 ba8:	10003730 	andne	r3, r0, r0, lsr r7
 bac:	10003770 	andne	r3, r0, r0, ror r7
 bb0:	00000001 	andeq	r0, r0, r1
 bb4:	00000001 	andeq	r0, r0, r1
 bb8:	00000001 	andeq	r0, r0, r1
 bbc:	00000001 	andeq	r0, r0, r1
	...
 bc8:	10003770 	andne	r3, r0, r0, ror r7
 bcc:	10003796 	mulne	r0, r6, r7
 bd0:	00000001 	andeq	r0, r0, r1
 bd4:	00000001 	andeq	r0, r0, r1
 bd8:	00000001 	andeq	r0, r0, r1
 bdc:	00000001 	andeq	r0, r0, r1
 be0:	00000001 	andeq	r0, r0, r1
 be4:	00000001 	andeq	r0, r0, r1
 be8:	1000379c 	mulne	r0, ip, r7
 bec:	100037b6 			; <UNDEFINED> instruction: 0x100037b6
 bf0:	100037bc 			; <UNDEFINED> instruction: 0x100037bc
 bf4:	100037d2 	ldrdne	r3, [r0], -r2
 bf8:	100037d2 	ldrdne	r3, [r0], -r2
 bfc:	100037e0 	andne	r3, r0, r0, ror #15
 c00:	100037e0 	andne	r3, r0, r0, ror #15
 c04:	10003824 	andne	r3, r0, r4, lsr #16
 c08:	10003828 	andne	r3, r0, r8, lsr #16
 c0c:	1000383a 	andne	r3, r0, sl, lsr r8
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
    __asm volatile ( "mrs %0, ipsr" : "=r" ( ulCurrentInterrupt )::"memory" );
       0:	000004d9 	ldrdeq	r0, [r0], -r9
    if( ulCurrentInterrupt == 0 )
       4:	02690003 	rsbeq	r0, r9, #3
        xReturn = pdFALSE;
       8:	01020000 	mrseq	r0, (UNDEF: 2)
}
       c:	000d0efb 	strdeq	r0, [sp], -fp
    ( pxList->uxNumberOfItems ) = ( UBaseType_t ) ( pxList->uxNumberOfItems + 1U );
      10:	01010101 	tsteq	r1, r1, lsl #2
}
      14:	01000000 	mrseq	r0, (UNDEF: 0)
      18:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
      1c:	7070612f 	rsbsvc	r6, r0, pc, lsr #2
      20:	6163696c 	cmnvs	r3, ip, ror #18
      24:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
      28:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
      2c:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
      30:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
      34:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
      38:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
      3c:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
      40:	5f6d7261 	svcpl	0x006d7261
        BaseType_t xReturn = pdFAIL;
      44:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
    }
      48:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
                pxBlock = heapPROTECT_BLOCK_POINTER( pxBlock->pxNextFreeBlock );
      4c:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
            while( pxBlock != pxEnd )
      50:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
      54:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
                if( pxBlock->xBlockSize > xMaxSize )
      58:	30312d69 	eorscc	r2, r1, r9, ror #26
      5c:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
                if( pxBlock->xBlockSize < xMinSize )
      60:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
                    xMinSize = pxBlock->xBlockSize;
      64:	615c3031 	cmpvs	ip, r1, lsr r0
      68:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
      6c:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
      70:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
      74:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
      78:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
      7c:	63616d5c 	cmnvs	r1, #92, 26	; 0x1700
            prvUnlockQueue( pxQueue );
      80:	656e6968 	strbvs	r6, [lr, #-2408]!	; 0xfffff698
            ( void ) xTaskResumeAll();
      84:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
      88:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
      8c:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
      90:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
        taskENTER_CRITICAL();
      94:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
            if( uxSemaphoreCount > ( UBaseType_t ) 0 )
      98:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
                if( xTicksToWait == ( TickType_t ) 0 )
      9c:	5f6d7261 	svcpl	0x006d7261
      a0:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
                else if( xEntryTimeSet == pdFALSE )
      a4:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
        taskEXIT_CRITICAL();
      a8:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
        vTaskSuspendAll();
      ac:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
        prvLockQueue( pxQueue );
      b0:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
      b4:	30312d69 	eorscc	r2, r1, r9, ror #26
      b8:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
      bc:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
      c0:	615c3031 	cmpvs	ip, r1, lsr r0
      c4:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
      c8:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
      cc:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
        if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
      d0:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
      d4:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
      d8:	7379735c 	cmnvc	r9, #92, 6	; 0x70000001
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
      dc:	2f2e2e00 	svccs	0x002e2e00
      e0:	76697244 	strbtvc	r7, [r9], -r4, asr #4
                    if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
      e4:	2f737265 	svccs	0x00737265
      e8:	49534d43 	ldmdbmi	r3, {r0, r1, r6, r8, sl, fp, lr}^
                vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
      ec:	2f355f53 	svccs	0x00355f53
      f0:	49534d43 	ldmdbmi	r3, {r0, r1, r6, r8, sl, fp, lr}^
                prvUnlockQueue( pxQueue );
      f4:	6f432f53 	svcvs	0x00432f53
      f8:	492f6572 	stmdbmi	pc!, {r1, r4, r5, r6, r8, sl, sp, lr}	; <UNPREDICTABLE>
                if( xTaskResumeAll() == pdFALSE )
      fc:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
     100:	2e006564 	cfsh32cs	mvfx6, mvfx0, #52
                    taskYIELD_WITHIN_API();
     104:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
                    if( xInheritanceOccurred != pdFALSE )
     108:	2f2e2e2f 	svccs	0x002e2e2f
                return errQUEUE_EMPTY;
     10c:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
                        taskENTER_CRITICAL();
     110:	2f736f74 	svccs	0x00736f74
                            uxHighestWaitingPriority = prvGetDisinheritPriorityAfterTimeout( pxQueue );
     114:	65657246 	strbvs	r7, [r5, #-582]!	; 0xfffffdba
     118:	534f5452 	movtpl	r5, #62546	; 0xf452
                            vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
     11c:	726f702f 	rsbvc	r7, pc, #47	; 0x2f
                        taskEXIT_CRITICAL();
     120:	6c626174 	stfvse	f6, [r2], #-464	; 0xfffffe30
     124:	43472f65 	movtmi	r2, #32613	; 0x7f65
     128:	52412f43 	subpl	r2, r1, #268	; 0x10c
     12c:	4d435f4d 	stclmi	15, cr5, [r3, #-308]	; 0xfffffecc
     130:	4e5f3333 	mrcmi	3, 2, r3, cr15, cr3, {1}
     134:	6e2f5a54 			; <UNDEFINED> instruction: 0x6e2f5a54
     138:	735f6e6f 	cmpvc	pc, #1776	; 0x6f0
     13c:	72756365 	rsbsvc	r6, r5, #-1811939327	; 0x94000001
     140:	2e2e0065 	cdpcs	0, 2, cr0, cr14, cr5, {3}
     144:	2f2e2e2f 	svccs	0x002e2e2f
     148:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 98 <__STACKSEAL_SIZE+0x98>
     14c:	74726269 	ldrbtvc	r6, [r2], #-617	; 0xfffffd97
     150:	462f736f 	strtmi	r7, [pc], -pc, ror #6
     154:	52656572 	rsbpl	r6, r5, #478150656	; 0x1c800000
     158:	2f534f54 	svccs	0x00534f54
     15c:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
     160:	00656475 	rsbeq	r6, r5, r5, ror r4
     164:	432f2e2e 			; <UNDEFINED> instruction: 0x432f2e2e
     168:	2f65726f 	svccs	0x0065726f
     16c:	00636e49 	rsbeq	r6, r3, r9, asr #28
     170:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
     174:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
     178:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
     17c:	6c697475 	cfstrdvs	mvd7, [r9], #-468	; 0xfffffe2c
     180:	61662f73 	smcvs	25331	; 0x62f3
     184:	2d746c75 	ldclcs	12, cr6, [r4, #-468]!	; 0xfffffe2c
     188:	706d7564 	rsbvc	r7, sp, r4, ror #10
     18c:	636e692f 	cmnvs	lr, #770048	; 0xbc000
     190:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
     194:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
     198:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
     19c:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
     1a0:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
     1a4:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
     1a8:	5f6d7261 	svcpl	0x006d7261
     1ac:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
     1b0:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
     1b4:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
     1b8:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
     1bc:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
     1c0:	30312d69 	eorscc	r2, r1, r9, ror #26
     1c4:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
     1c8:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
     1cc:	615c3031 	cmpvs	ip, r1, lsr r0
     1d0:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
     1d4:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
     1d8:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     1dc:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
     1e0:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
     1e4:	616d0000 	cmnvs	sp, r0
     1e8:	632e6e69 			; <UNDEFINED> instruction: 0x632e6e69
     1ec:	00000100 	andeq	r0, r0, r0, lsl #2
     1f0:	6665645f 			; <UNDEFINED> instruction: 0x6665645f
     1f4:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
     1f8:	7079745f 	rsbsvc	r7, r9, pc, asr r4
     1fc:	682e7365 	stmdavs	lr!, {r0, r2, r5, r6, r8, r9, ip, sp, lr}
     200:	00000200 	andeq	r0, r0, r0, lsl #4
     204:	6474735f 	ldrbtvs	r7, [r4], #-863	; 0xfffffca1
     208:	2e746e69 	cdpcs	14, 7, cr6, cr4, cr9, {3}
     20c:	00030068 	andeq	r0, r3, r8, rrx
     210:	726f6300 	rsbvc	r6, pc, #0, 6
     214:	6d635f65 	stclvs	15, cr5, [r3, #-404]!	; 0xfffffe6c
     218:	682e3333 	stmdavs	lr!, {r0, r1, r4, r5, r8, r9, ip, sp}
     21c:	00000400 	andeq	r0, r0, r0, lsl #8
     220:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
     224:	7263616d 	rsbvc	r6, r3, #1073741851	; 0x4000001b
     228:	6d6f636f 	stclvs	3, cr6, [pc, #-444]!	; 74 <__STACKSEAL_SIZE+0x74>
     22c:	2e6e6f6d 	cdpcs	15, 6, cr6, cr14, cr13, {3}
     230:	00050068 	andeq	r0, r5, r8, rrx
     234:	73617400 	cmnvc	r1, #0, 8
     238:	00682e6b 	rsbeq	r2, r8, fp, ror #28
     23c:	75000006 	strvc	r0, [r0, #-6]
     240:	2e747261 	cdpcs	2, 7, cr7, cr4, cr1, {3}
     244:	00070068 	andeq	r0, r7, r8, rrx
     248:	75616600 	strbvc	r6, [r1, #-1536]!	; 0xfffffa00
     24c:	642d746c 	strtvs	r7, [sp], #-1132	; 0xfffffb94
     250:	2e706d75 	mrccs	13, 3, r6, cr0, cr5, {3}
     254:	00080068 	andeq	r0, r8, r8, rrx
     258:	64747300 	ldrbtvs	r7, [r4], #-768	; 0xfffffd00
     25c:	682e6f69 	stmdavs	lr!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}
     260:	00000900 	andeq	r0, r0, r0, lsl #18
     264:	6975623c 	ldmdbvs	r5!, {r2, r3, r4, r5, r9, sp, lr}^
     268:	692d746c 	pushvs	{r2, r3, r5, r6, sl, ip, sp, lr}
     26c:	00003e6e 	andeq	r3, r0, lr, ror #28
     270:	05000000 	streq	r0, [r0, #-0]
     274:	02050022 	andeq	r0, r5, #34	; 0x22
     278:	10000800 	andne	r0, r0, r0, lsl #16
     27c:	0100eb03 	tsteq	r0, r3, lsl #22
     280:	132f0505 			; <UNDEFINED> instruction: 0x132f0505
     284:	060f0513 			; <UNDEFINED> instruction: 0x060f0513
     288:	06050501 	streq	r0, [r5], -r1, lsl #10
     28c:	060805ad 	streq	r0, [r8], -sp, lsr #11
     290:	06090501 	streq	r0, [r9], -r1, lsl #10
     294:	0520063f 	streq	r0, [r0, #-1599]!	; 0xfffff9c1
     298:	09053001 	stmdbeq	r5, {r0, ip, sp}
     29c:	2e063806 	cdpcs	8, 0, cr3, cr6, cr6, {0}
     2a0:	01000a02 	tsteq	r0, r2, lsl #20
     2a4:	00260501 	eoreq	r0, r6, r1, lsl #10
     2a8:	00000205 	andeq	r0, r0, r5, lsl #4
     2ac:	0e030000 	cdpeq	0, 0, cr0, cr3, cr0, {0}
     2b0:	21050501 	tstcs	r5, r1, lsl #10
     2b4:	3d060105 	stfccs	f0, [r6, #-20]	; 0xffffffec
     2b8:	01000402 	tsteq	r0, r2, lsl #8
     2bc:	001c0501 	andseq	r0, ip, r1, lsl #10
     2c0:	00000205 	andeq	r0, r0, r5, lsl #4
     2c4:	12030000 	andne	r0, r3, #0
     2c8:	21050501 	tstcs	r5, r1, lsl #10
     2cc:	3d060105 	stfccs	f0, [r6, #-20]	; 0xffffffec
     2d0:	01000402 	tsteq	r0, r2, lsl #8
     2d4:	00230501 	eoreq	r0, r3, r1, lsl #10
     2d8:	00000205 	andeq	r0, r0, r5, lsl #4
     2dc:	16030000 	strne	r0, [r3], -r0
     2e0:	21050501 	tstcs	r5, r1, lsl #10
     2e4:	060e0514 			; <UNDEFINED> instruction: 0x060e0514
     2e8:	06050501 	streq	r0, [r5], -r1, lsl #10
     2ec:	01051359 	tsteq	r5, r9, asr r3
     2f0:	06024b06 	streq	r4, [r2], -r6, lsl #22
     2f4:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
     2f8:	02050022 	andeq	r0, r5, #34	; 0x22
     2fc:	10000844 	andne	r0, r0, r4, asr #16
     300:	05011e03 	streq	r1, [r1, #-3587]	; 0xfffff1fd
     304:	05132f05 	ldreq	r2, [r3, #-3845]	; 0xfffff0fb
     308:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
     30c:	052f0605 	streq	r0, [pc, #-1541]!	; fffffd0f <__StackTop+0xc7effd0f>
     310:	0501060e 	streq	r0, [r1, #-1550]	; 0xfffff9f2
     314:	135a0605 	cmpne	sl, #5242880	; 0x500000
     318:	01060d05 	tsteq	r6, r5, lsl #26
     31c:	05200b05 	streq	r0, [r0, #-2821]!	; 0xfffff4fb
     320:	67210605 	strvs	r0, [r1, -r5, lsl #12]!
     324:	060d0513 			; <UNDEFINED> instruction: 0x060d0513
     328:	200b0501 	andcs	r0, fp, r1, lsl #10
     32c:	21060505 	tstcs	r6, r5, lsl #10
     330:	0d051359 	stceq	3, cr1, [r5, #-356]	; 0xfffffe9c
     334:	0b050106 	bleq	140754 <__RAM_SIZE+0x40754>
     338:	0605052e 	streq	r0, [r5], -lr, lsr #10
     33c:	06010521 	streq	r0, [r1], -r1, lsr #10
     340:	00060259 	andeq	r0, r6, r9, asr r2
     344:	1b050101 	blne	140750 <__RAM_SIZE+0x40750>
     348:	90020500 	andls	r0, r2, r0, lsl #10
     34c:	03100008 	tsteq	r0, #8
     350:	0505012e 	streq	r0, [r5, #-302]	; 0xfffffed2
     354:	0612052f 	ldreq	r0, [r2], -pc, lsr #10
     358:	06050501 	streq	r0, [r5], -r1, lsl #10
     35c:	061a0567 	ldreq	r0, [sl], -r7, ror #10
     360:	06050501 	streq	r0, [r5], -r1, lsl #10
     364:	061a053d 			; <UNDEFINED> instruction: 0x061a053d
     368:	05052e01 	streq	r2, [r5, #-3585]	; 0xfffff1ff
     36c:	11052106 	tstne	r5, r6, lsl #2
     370:	053c0106 	ldreq	r0, [ip, #-262]!	; 0xfffffefa
     374:	052f0605 	streq	r0, [pc, #-1541]!	; fffffd77 <__StackTop+0xc7effd77>
     378:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
     37c:	06310609 	ldrteq	r0, [r1], -r9, lsl #12
     380:	052f0620 	streq	r0, [pc, #-1568]!	; fffffd68 <__StackTop+0xc7effd68>
     384:	1205010e 	andne	r0, r5, #-2147483645	; 0x80000003
     388:	09050106 	stmdbeq	r5, {r1, r2, r8}
     38c:	0f062020 	svceq	0x00062020
     390:	0d052e06 	stceq	14, cr2, [r5, #-24]	; 0xffffffe8
     394:	03040200 	movweq	r0, #16896	; 0x4200
     398:	24054006 	strcs	r4, [r5], #-6
     39c:	03040200 	movweq	r0, #16896	; 0x4200
     3a0:	00250557 	eoreq	r0, r5, r7, asr r5
     3a4:	06030402 	streq	r0, [r3], -r2, lsl #8
     3a8:	00190501 	andseq	r0, r9, r1, lsl #10
     3ac:	06010402 	streq	r0, [r1], -r2, lsl #8
     3b0:	00090520 	andeq	r0, r9, r0, lsr #10
     3b4:	06010402 	streq	r0, [r1], -r2, lsl #8
     3b8:	05310601 	ldreq	r0, [r1, #-1537]!	; 0xfffff9ff
     3bc:	2e3e0601 	cfmsuba32cs	mvax0, mvax0, mvfx14, mvfx1
     3c0:	01000802 	tsteq	r0, r2, lsl #16
     3c4:	00120501 	andseq	r0, r2, r1, lsl #10
     3c8:	08f80205 	ldmeq	r8!, {r0, r2, r9}^
     3cc:	3e031000 	cdpcc	0, 0, cr1, cr3, cr0, {0}
     3d0:	21050501 	tstcs	r5, r1, lsl #10
     3d4:	0105304b 	tsteq	r5, fp, asr #32
     3d8:	05022f06 	streq	r2, [r2, #-3846]	; 0xfffff0fa
     3dc:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
     3e0:	02050012 	andeq	r0, r5, #18
     3e4:	10000914 	andne	r0, r0, r4, lsl r9
     3e8:	0100c503 	tsteq	r0, r3, lsl #10
     3ec:	4b210505 	blmi	841808 <__RAM_SIZE+0x741808>
     3f0:	2f060105 	svccs	0x00060105
     3f4:	01000502 	tsteq	r0, r2, lsl #10
     3f8:	00120501 	andseq	r0, r2, r1, lsl #10
     3fc:	092c0205 	stmdbeq	ip!, {r0, r2, r9}
     400:	ca031000 	bgt	c4408 <__HEAP_SIZE+0xc3408>
     404:	05050100 	streq	r0, [r5, #-256]	; 0xffffff00
     408:	01054b21 	tsteq	r5, r1, lsr #22
     40c:	05022f06 	streq	r2, [r2, #-3846]	; 0xfffff0fa
     410:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
     414:	02050012 	andeq	r0, r5, #18
     418:	10000944 	andne	r0, r0, r4, asr #18
     41c:	0100cf03 	tsteq	r0, r3, lsl #30
     420:	4b210505 	blmi	84183c <__RAM_SIZE+0x74183c>
     424:	2f060105 	svccs	0x00060105
     428:	01000502 	tsteq	r0, r2, lsl #10
     42c:	00120501 	andseq	r0, r2, r1, lsl #10
     430:	095c0205 	ldmdbeq	ip, {r0, r2, r9}^
     434:	d4031000 	strle	r1, [r3], #-0
     438:	05050100 	streq	r0, [r5, #-256]	; 0xffffff00
     43c:	01054b21 	tsteq	r5, r1, lsr #22
     440:	05022f06 	streq	r2, [r2, #-3846]	; 0xfffff0fa
     444:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
     448:	02050012 	andeq	r0, r5, #18
     44c:	10000974 	andne	r0, r0, r4, ror r9
     450:	0100d903 	tsteq	r0, r3, lsl #18
     454:	4b210505 	blmi	841870 <__RAM_SIZE+0x741870>
     458:	2f060105 	svccs	0x00060105
     45c:	01000502 	tsteq	r0, r2, lsl #10
     460:	002f0501 	eoreq	r0, pc, r1, lsl #10
     464:	098c0205 	stmibeq	ip, {r0, r2, r9}
     468:	de031000 	cdple	0, 0, cr1, cr3, cr0, {0}
     46c:	01060100 	mrseq	r0, (UNDEF: 22)
     470:	21060505 	tstcs	r6, r5, lsl #10
     474:	01060905 	tsteq	r6, r5, lsl #18
     478:	33060d05 	movwcc	r0, #27909	; 0x6d05
     47c:	052a0505 	streq	r0, [sl, #-1285]!	; 0xfffffafb
     480:	3d4b1309 	stclcc	3, cr1, [fp, #-36]	; 0xffffffdc
     484:	01060c05 	tsteq	r6, r5, lsl #24
     488:	31060d05 	tstcc	r6, r5, lsl #26
     48c:	01061405 	tsteq	r6, r5, lsl #8
     490:	00030220 	andeq	r0, r3, r0, lsr #4
     494:	10050101 	andne	r0, r5, r1, lsl #2
     498:	b0020500 	andlt	r0, r2, r0, lsl #10
     49c:	03100009 	tsteq	r0, #9
     4a0:	050100f6 	streq	r0, [r1, #-246]	; 0xffffff0a
     4a4:	30132105 	andscc	r2, r3, r5, lsl #2
     4a8:	09052f3d 	stmdbeq	r5, {r0, r2, r3, r4, r5, r8, r9, sl, fp, sp}
     4ac:	05052906 	streq	r2, [r5, #-2310]	; 0xfffff6fa
     4b0:	01040200 	mrseq	r0, R12_usr
     4b4:	09052706 	stmdbeq	r5, {r1, r2, r8, r9, sl, sp}
     4b8:	01040200 	mrseq	r0, R12_usr
     4bc:	04020013 	streq	r0, [r2], #-19	; 0xffffffed
     4c0:	02002101 	andeq	r2, r0, #1073741824	; 0x40000000
     4c4:	20060104 	andcs	r0, r6, r4, lsl #2
     4c8:	02000b05 	andeq	r0, r0, #5120	; 0x1400
     4cc:	3a060104 	bcc	1808e4 <__RAM_SIZE+0x808e4>
     4d0:	02000905 	andeq	r0, r0, #81920	; 0x14000
     4d4:	14060104 	strne	r0, [r6], #-260	; 0xfffffefc
     4d8:	01000602 	tsteq	r0, r2, lsl #12
     4dc:	0001d101 	andeq	sp, r1, r1, lsl #2
     4e0:	81000300 	mrshi	r0, LR_irq
     4e4:	02000001 	andeq	r0, r0, #1
     4e8:	0d0efb01 	vstreq	d15, [lr, #-4]
     4ec:	01010100 	mrseq	r0, (UNDEF: 17)
     4f0:	00000001 	andeq	r0, r0, r1
     4f4:	01000001 	tsteq	r0, r1
     4f8:	70612f2e 	rsbvc	r2, r1, lr, lsr #30
     4fc:	63696c70 	cmnvs	r9, #112, 24	; 0x7000
     500:	6f697461 	svcvs	0x00697461
     504:	3a63006e 	bcc	18c06c4 <__RAM_SIZE+0x17c06c4>
     508:	6573755c 	ldrbvs	r7, [r3, #-1372]!	; 0xfffffaa4
     50c:	785c7372 	ldmdavc	ip, {r1, r4, r5, r6, r8, r9, ip, sp, lr}^
     510:	6e6f6469 	cdpvs	4, 6, cr6, cr15, cr9, {3}
     514:	6f72705c 	svcvs	0x0072705c
     518:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
     51c:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
     520:	6363675f 	cmnvs	r3, #24903680	; 0x17c0000
     524:	6363675c 	cmnvs	r3, #92, 14	; 0x1700000
     528:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
     52c:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
     530:	61652d65 	cmnvs	r5, r5, ror #26
     534:	312d6962 			; <UNDEFINED> instruction: 0x312d6962
     538:	2d332e30 	ldccs	14, cr2, [r3, #-192]!	; 0xffffff40
     53c:	31323032 	teqcc	r2, r2, lsr r0
     540:	5c30312e 	ldfpls	f3, [r0], #-184	; 0xffffff48
     544:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
     548:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
     54c:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
     550:	6e695c69 	cdpvs	12, 6, cr5, cr9, cr9, {3}
     554:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
     558:	616d5c65 	cmnvs	sp, r5, ror #24
     55c:	6e696863 	cdpvs	8, 6, cr6, cr9, cr3, {3}
     560:	3a630065 	bcc	18c06fc <__RAM_SIZE+0x17c06fc>
     564:	6573755c 	ldrbvs	r7, [r3, #-1372]!	; 0xfffffaa4
     568:	785c7372 	ldmdavc	ip, {r1, r4, r5, r6, r8, r9, ip, sp, lr}^
     56c:	6e6f6469 	cdpvs	4, 6, cr6, cr15, cr9, {3}
     570:	6f72705c 	svcvs	0x0072705c
     574:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
     578:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
     57c:	6363675f 	cmnvs	r3, #24903680	; 0x17c0000
     580:	6363675c 	cmnvs	r3, #92, 14	; 0x1700000
     584:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
     588:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
     58c:	61652d65 	cmnvs	r5, r5, ror #26
     590:	312d6962 			; <UNDEFINED> instruction: 0x312d6962
     594:	2d332e30 	ldccs	14, cr2, [r3, #-192]!	; 0xffffff40
     598:	31323032 	teqcc	r2, r2, lsr r0
     59c:	5c30312e 	ldfpls	f3, [r0], #-184	; 0xffffff48
     5a0:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
     5a4:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
     5a8:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
     5ac:	6e695c69 	cdpvs	12, 6, cr5, cr9, cr9, {3}
     5b0:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
     5b4:	79735c65 	ldmdbvc	r3!, {r0, r2, r5, r6, sl, fp, ip, lr}^
     5b8:	2e2e0073 	mcrcs	0, 1, r0, cr14, cr3, {3}
     5bc:	6972442f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, sl, lr}^
     5c0:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
     5c4:	534d432f 	movtpl	r4, #54063	; 0xd32f
     5c8:	355f5349 	ldrbcc	r5, [pc, #-841]	; 287 <__STACKSEAL_SIZE+0x287>
     5cc:	534d432f 	movtpl	r4, #54063	; 0xd32f
     5d0:	432f5349 			; <UNDEFINED> instruction: 0x432f5349
     5d4:	2f65726f 	svccs	0x0065726f
     5d8:	6c636e49 	stclvs	14, cr6, [r3], #-292	; 0xfffffedc
     5dc:	00656475 	rsbeq	r6, r5, r5, ror r4
     5e0:	442f2e2e 	strtmi	r2, [pc], #-3630	; 5e8 <__STACKSEAL_SIZE+0x5e8>
     5e4:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
     5e8:	432f7372 			; <UNDEFINED> instruction: 0x432f7372
     5ec:	5349534d 	movtpl	r5, #37709	; 0x934d
     5f0:	442f355f 	strtmi	r3, [pc], #-1375	; 5f8 <__STACKSEAL_SIZE+0x5f8>
     5f4:	63697665 	cmnvs	r9, #105906176	; 0x6500000
     5f8:	52412f65 	subpl	r2, r1, #404	; 0x194
     5fc:	52412f4d 	subpl	r2, r1, #308	; 0x134
     600:	334d434d 	movtcc	r4, #54093	; 0xd34d
     604:	6e492f33 	mcrvs	15, 2, r2, cr9, cr3, {1}
     608:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
     60c:	73000065 	movwvc	r0, #101	; 0x65
     610:	65747379 	ldrbvs	r7, [r4, #-889]!	; 0xfffffc87
     614:	52415f6d 	subpl	r5, r1, #436	; 0x1b4
     618:	334d434d 	movtcc	r4, #54093	; 0xd34d
     61c:	00632e33 	rsbeq	r2, r3, r3, lsr lr
     620:	5f000001 	svcpl	0x00000001
     624:	61666564 	cmnvs	r6, r4, ror #10
     628:	5f746c75 	svcpl	0x00746c75
     62c:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
     630:	00682e73 	rsbeq	r2, r8, r3, ror lr
     634:	5f000002 	svcpl	0x00000002
     638:	69647473 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
     63c:	682e746e 	stmdavs	lr!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
     640:	00000300 	andeq	r0, r0, r0, lsl #6
     644:	65726f63 	ldrbvs	r6, [r2, #-3939]!	; 0xfffff09d
     648:	336d635f 	cmncc	sp, #2080374785	; 0x7c000001
     64c:	00682e33 	rsbeq	r2, r8, r3, lsr lr
     650:	73000004 	movwvc	r0, #4
     654:	65747379 	ldrbvs	r7, [r4, #-889]!	; 0xfffffc87
     658:	52415f6d 	subpl	r5, r1, #436	; 0x1b4
     65c:	334d434d 	movtcc	r4, #54093	; 0xd34d
     660:	00682e33 	rsbeq	r2, r8, r3, lsr lr
     664:	00000005 	andeq	r0, r0, r5
     668:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
     66c:	00000002 	andeq	r0, r0, r2
     670:	00c40300 	sbceq	r0, r4, r0, lsl #6
     674:	13030501 	movwne	r0, #13569	; 0x3501
     678:	01061305 	tsteq	r6, r5, lsl #6
     67c:	023d0105 	eorseq	r0, sp, #1073741825	; 0x40000001
     680:	01010005 	tsteq	r1, r5
     684:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
     688:	0009dc02 	andeq	sp, r9, r2, lsl #24
     68c:	00cc0310 	sbceq	r0, ip, r0, lsl r3
     690:	15030501 	strne	r0, [r3, #-1281]	; 0xfffffaff
     694:	01060d05 	tsteq	r6, r5, lsl #26
     698:	40060305 	andmi	r0, r6, r5, lsl #6
     69c:	01060e05 	tsteq	r6, r5, lsl #28
     6a0:	03060305 	movweq	r0, #25349	; 0x6305
     6a4:	1305660c 	movwne	r6, #22028	; 0x560c
     6a8:	01050106 	tsteq	r5, r6, lsl #2
     6ac:	000a023d 	andeq	r0, sl, sp, lsr r2
     6b0:	120d0101 	andne	r0, sp, #1073741824	; 0x40000000
     6b4:	00030000 	andeq	r0, r3, r0
     6b8:	000001a1 	andeq	r0, r0, r1, lsr #3
     6bc:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
     6c0:	0101000d 	tsteq	r1, sp
     6c4:	00000101 	andeq	r0, r0, r1, lsl #2
     6c8:	00000100 	andeq	r0, r0, r0, lsl #2
     6cc:	2f2e2e01 	svccs	0x002e2e01
     6d0:	65726f43 	ldrbvs	r6, [r2, #-3907]!	; 0xfffff0bd
     6d4:	6372532f 	cmnvs	r2, #-1140850688	; 0xbc000000
     6d8:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
     6dc:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
     6e0:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
     6e4:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
     6e8:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
     6ec:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
     6f0:	5f6d7261 	svcpl	0x006d7261
     6f4:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
     6f8:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
     6fc:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
     700:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
     704:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
     708:	30312d69 	eorscc	r2, r1, r9, ror #26
     70c:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
     710:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
     714:	615c3031 	cmpvs	ip, r1, lsr r0
     718:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
     71c:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
     720:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     724:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
     728:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
     72c:	63616d5c 	cmnvs	r1, #92, 26	; 0x1700
     730:	656e6968 	strbvs	r6, [lr, #-2408]!	; 0xfffff698
     734:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
     738:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
     73c:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
     740:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
     744:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
     748:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
     74c:	5f6d7261 	svcpl	0x006d7261
     750:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
     754:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
     758:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
     75c:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
     760:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
     764:	30312d69 	eorscc	r2, r1, r9, ror #26
     768:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
     76c:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
     770:	615c3031 	cmpvs	ip, r1, lsr r0
     774:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
     778:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
     77c:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     780:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
     784:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
     788:	7379735c 	cmnvc	r9, #92, 6	; 0x70000001
     78c:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
     790:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
     794:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
     798:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
     79c:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
     7a0:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
     7a4:	5f6d7261 	svcpl	0x006d7261
     7a8:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
     7ac:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
     7b0:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
     7b4:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
     7b8:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
     7bc:	30312d69 	eorscc	r2, r1, r9, ror #26
     7c0:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
     7c4:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
     7c8:	6c5c3031 	mrrcvs	0, 3, r3, ip, cr1
     7cc:	675c6269 	ldrbvs	r6, [ip, -r9, ror #4]
     7d0:	615c6363 	cmpvs	ip, r3, ror #6
     7d4:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
     7d8:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
     7dc:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     7e0:	2e30315c 	mrccs	1, 1, r3, cr0, cr12, {2}
     7e4:	5c312e33 	ldcpl	14, cr2, [r1], #-204	; 0xffffff34
     7e8:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
     7ec:	00656475 	rsbeq	r6, r5, r5, ror r4
     7f0:	432f2e2e 			; <UNDEFINED> instruction: 0x432f2e2e
     7f4:	2f65726f 	svccs	0x0065726f
     7f8:	00636e49 	rsbeq	r6, r3, r9, asr #28
     7fc:	69727000 	ldmdbvs	r2!, {ip, sp, lr}^
     800:	2e66746e 	cdpcs	4, 6, cr7, cr6, cr14, {3}
     804:	00010063 	andeq	r0, r1, r3, rrx
     808:	65645f00 	strbvs	r5, [r4, #-3840]!	; 0xfffff100
     80c:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
     810:	79745f74 	ldmdbvc	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     814:	2e736570 	mrccs	5, 3, r6, cr3, cr0, {3}
     818:	00020068 	andeq	r0, r2, r8, rrx
     81c:	74735f00 	ldrbtvc	r5, [r3], #-3840	; 0xfffff100
     820:	746e6964 	strbtvc	r6, [lr], #-2404	; 0xfffff69c
     824:	0300682e 	movweq	r6, #2094	; 0x82e
     828:	74730000 	ldrbtvc	r0, [r3], #-0
     82c:	67726164 	ldrbvs	r6, [r2, -r4, ror #2]!
     830:	0400682e 	streq	r6, [r0], #-2094	; 0xfffff7d2
     834:	74730000 	ldrbtvc	r0, [r3], #-0
     838:	66656464 	strbtvs	r6, [r5], -r4, ror #8
     83c:	0400682e 	streq	r6, [r0], #-2094	; 0xfffff7d2
     840:	623c0000 	eorsvs	r0, ip, #0
     844:	746c6975 	strbtvc	r6, [ip], #-2421	; 0xfffff68b
     848:	3e6e692d 	vmulcc.f16	s13, s28, s27	; <UNPREDICTABLE>
     84c:	00000000 	andeq	r0, r0, r0
     850:	6e697270 	mcrvs	2, 3, r7, cr9, cr0, {3}
     854:	682e6674 	stmdavs	lr!, {r2, r4, r5, r6, r9, sl, sp, lr}
     858:	00000500 	andeq	r0, r0, r0, lsl #10
     85c:	00010500 	andeq	r0, r1, r0, lsl #10
     860:	00000205 	andeq	r0, r0, r5, lsl #4
     864:	85030000 	strhi	r0, [r3, #-0]
     868:	03050101 	movweq	r0, #20737	; 0x5101
     86c:	06060513 			; <UNDEFINED> instruction: 0x06060513
     870:	06050501 	streq	r0, [r5], -r1, lsl #10
     874:	061a052f 	ldreq	r0, [sl], -pc, lsr #10
     878:	22010501 	andcs	r0, r1, #4194304	; 0x400000
     87c:	01000102 	tsteq	r0, r2, lsl #2
     880:	00010501 	andeq	r0, r1, r1, lsl #10
     884:	0a080205 	beq	2010a0 <__RAM_SIZE+0x1010a0>
     888:	8e031000 	cdphi	0, 0, cr1, cr3, cr0, {0}
     88c:	03050101 	movweq	r0, #20737	; 0x5101
     890:	01140513 	tsteq	r4, r3, lsl r5
     894:	05012205 	streq	r2, [r1, #-517]	; 0xfffffdfb
     898:	0105012d 	tsteq	r5, sp, lsr #2
     89c:	01021306 	tsteq	r2, r6, lsl #6
     8a0:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
     8a4:	02050001 	andeq	r0, r5, #1
     8a8:	00000000 	andeq	r0, r0, r0
     8ac:	01019f03 	tsteq	r1, r3, lsl #30
     8b0:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
     8b4:	0305010e 	movweq	r0, #20750	; 0x510e
     8b8:	06060513 			; <UNDEFINED> instruction: 0x06060513
     8bc:	1e010501 	cfsh32ne	mvfx0, mvfx1, #1
     8c0:	24060505 	strcs	r0, [r6], #-1285	; 0xfffffafb
     8c4:	01062105 	tsteq	r6, r5, lsl #2
     8c8:	20200605 	eorcs	r0, r0, r5, lsl #12
     8cc:	20220105 	eorcs	r0, r2, r5, lsl #2
     8d0:	01000102 	tsteq	r0, r2, lsl #2
     8d4:	00010501 	andeq	r0, r1, r1, lsl #10
     8d8:	0a0a0205 	beq	2810f4 <__RAM_SIZE+0x1810f4>
     8dc:	bc031000 	stclt	0, cr1, [r3], {-0}
     8e0:	01060101 	tsteq	r6, r1, lsl #2
     8e4:	21060305 	tstcs	r6, r5, lsl #6
     8e8:	06100513 			; <UNDEFINED> instruction: 0x06100513
     8ec:	21090511 	tstcs	r9, r1, lsl r5
     8f0:	21060505 	tstcs	r6, r5, lsl #10
     8f4:	01060b05 	tsteq	r6, r5, lsl #22
     8f8:	052e2a05 	streq	r2, [lr, #-2565]!	; 0xfffff5fb
     8fc:	11052e22 	tstne	r5, r2, lsr #28
     900:	2e070520 	cfsh32cs	mvfx0, mvfx7, #16
     904:	1f060905 	svcne	0x00060905
     908:	01061505 	tsteq	r6, r5, lsl #10
     90c:	05200a05 	streq	r0, [r0, #-2565]!	; 0xfffff5fb
     910:	76030614 			; <UNDEFINED> instruction: 0x76030614
     914:	14030520 	strne	r0, [r3], #-1312	; 0xfffffae0
     918:	01061605 	tsteq	r6, r5, lsl #12
     91c:	09052020 	stmdbeq	r5, {r5, sp}
     920:	0603051a 			; <UNDEFINED> instruction: 0x0603051a
     924:	06010531 			; <UNDEFINED> instruction: 0x06010531
     928:	00010213 	andeq	r0, r1, r3, lsl r2
     92c:	01050101 	tsteq	r5, r1, lsl #2
     930:	2e020500 	cfsh32cs	mvfx0, mvfx2, #0
     934:	0310000a 	tsteq	r0, #10
     938:	060101c7 	streq	r0, [r1], -r7, asr #3
     93c:	06030501 	streq	r0, [r3], -r1, lsl #10
     940:	060515bb 			; <UNDEFINED> instruction: 0x060515bb
     944:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
     948:	1a053d11 	bne	14fd94 <__RAM_SIZE+0x4fd94>
     94c:	01040200 	mrseq	r0, R12_usr
     950:	05052e06 	streq	r2, [r5, #-3590]	; 0xfffff1fa
     954:	01040200 	mrseq	r0, R12_usr
     958:	07050106 	streq	r0, [r5, -r6, lsl #2]
     95c:	03040200 	movweq	r0, #16896	; 0x4200
     960:	02002f06 	andeq	r2, r0, #6, 30
     964:	2e060304 	cdpcs	3, 0, cr0, cr6, cr4, {0}
     968:	02002505 	andeq	r2, r0, #20971520	; 0x1400000
     96c:	49060304 	stmdbmi	r6, {r2, r8, r9}
     970:	02002605 	andeq	r2, r0, #5242880	; 0x500000
     974:	01060304 	tsteq	r6, r4, lsl #6
     978:	02000705 	andeq	r0, r0, #1310720	; 0x140000
     97c:	002f0304 	eoreq	r0, pc, r4, lsl #6
     980:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
     984:	03040200 	movweq	r0, #16896	; 0x4200
     988:	0605053c 			; <UNDEFINED> instruction: 0x0605053c
     98c:	2e200618 	mcrcs	6, 1, r0, cr0, cr8, {0}
     990:	65060905 	strvs	r0, [r6, #-2309]	; 0xfffff6fb
     994:	05330305 	ldreq	r0, [r3, #-773]!	; 0xfffffcfb
     998:	05010606 	streq	r0, [r1, #-1542]	; 0xfffff9fa
     99c:	0b055101 	bleq	154da8 <__RAM_SIZE+0x54da8>
     9a0:	4a7a0306 	bmi	1e815c0 <__RAM_SIZE+0x1d815c0>
     9a4:	01061005 	tsteq	r6, r5
     9a8:	052e0b05 	streq	r0, [lr, #-2821]!	; 0xfffff4fb
     9ac:	062f0607 	strteq	r0, [pc], -r7, lsl #12
     9b0:	00060220 	andeq	r0, r6, r0, lsr #4
     9b4:	01050101 	tsteq	r5, r1, lsl #2
     9b8:	ac020500 	cfstr32ge	mvfx0, [r2], {-0}
     9bc:	0310000a 	tsteq	r0, #10
     9c0:	060101e3 	streq	r0, [r1], -r3, ror #3
     9c4:	06030501 	streq	r0, [r3], -r1, lsl #10
     9c8:	060605ca 	streq	r0, [r6], -sl, asr #11
     9cc:	06050501 	streq	r0, [r5], -r1, lsl #10
     9d0:	0608053d 			; <UNDEFINED> instruction: 0x0608053d
     9d4:	000f0501 	andeq	r0, pc, r1, lsl #10
     9d8:	20010402 	andcs	r0, r1, r2, lsl #8
     9dc:	02002a05 	andeq	r2, r0, #20480	; 0x5000
     9e0:	053c0204 	ldreq	r0, [ip, #-516]!	; 0xfffffdfc
     9e4:	04020037 	streq	r0, [r2], #-55	; 0xffffffc9
     9e8:	07053c03 	streq	r3, [r5, -r3, lsl #24]
     9ec:	0c053d06 	stceq	13, cr3, [r5], {6}
     9f0:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
     9f4:	05230607 	streq	r0, [r3, #-1543]!	; 0xfffff9f9
     9f8:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
     9fc:	0b054a0e 	bleq	15323c <__RAM_SIZE+0x5323c>
     a00:	19051f06 	stmdbne	r5, {r1, r2, r8, r9, sl, fp, ip}
     a04:	01040200 	mrseq	r0, R12_usr
     a08:	0b052e06 	bleq	14c228 <__RAM_SIZE+0x4c228>
     a0c:	24053106 	strcs	r3, [r5], #-262	; 0xfffffefa
     a10:	01040200 	mrseq	r0, R12_usr
     a14:	35053c06 	strcc	r3, [r5, #-3078]	; 0xfffff3fa
     a18:	02040200 	andeq	r0, r4, #0, 4
     a1c:	0607052e 	streq	r0, [r7], -lr, lsr #10
     a20:	0612052f 	ldreq	r0, [r2], -pc, lsr #10
     a24:	4a0e0501 	bmi	381e30 <__RAM_SIZE+0x281e30>
     a28:	06030520 	streq	r0, [r3], -r0, lsr #10
     a2c:	06060525 	streq	r0, [r6], -r5, lsr #10
     a30:	06050501 	streq	r0, [r5], -r1, lsl #10
     a34:	0608053d 			; <UNDEFINED> instruction: 0x0608053d
     a38:	00240501 	eoreq	r0, r4, r1, lsl #10
     a3c:	3c010402 	cfstrscc	mvf0, [r1], {2}
     a40:	02002b05 	andeq	r2, r0, #5120	; 0x1400
     a44:	05200204 	streq	r0, [r0, #-516]!	; 0xfffffdfc
     a48:	0402003d 	streq	r0, [r2], #-61	; 0xffffffc3
     a4c:	05052e03 	streq	r2, [r5, #-3587]	; 0xfffff1fd
     a50:	08053406 	stmdaeq	r5, {r1, r2, sl, ip, sp}
     a54:	0a050106 	beq	140e74 <__RAM_SIZE+0x40e74>
     a58:	0d053f06 	stceq	15, cr3, [r5, #-24]	; 0xffffffe8
     a5c:	0a050106 	beq	140e7c <__RAM_SIZE+0x40e7c>
     a60:	0d053f06 	stceq	15, cr3, [r5, #-24]	; 0xffffffe8
     a64:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     a68:	08053f06 	stmdaeq	r5, {r1, r2, r8, r9, sl, fp, ip, sp}
     a6c:	07050106 	streq	r0, [r5, -r6, lsl #2]
     a70:	12052f06 	andne	r2, r5, #6, 30
     a74:	0e050106 	adfeqs	f0, f5, f6
     a78:	0603054a 	streq	r0, [r3], -sl, asr #10
     a7c:	06060524 	streq	r0, [r6], -r4, lsr #10
     a80:	06050501 	streq	r0, [r5], -r1, lsl #10
     a84:	0608052f 	streq	r0, [r8], -pc, lsr #10
     a88:	06070501 	streq	r0, [r7], -r1, lsl #10
     a8c:	0612053d 			; <UNDEFINED> instruction: 0x0612053d
     a90:	4a0e0501 	bmi	381e9c <__RAM_SIZE+0x281e9c>
     a94:	03060305 	movweq	r0, #25349	; 0x6305
     a98:	0a05200a 	beq	148ac8 <__RAM_SIZE+0x48ac8>
     a9c:	01050106 	tsteq	r5, r6, lsl #2
     aa0:	06070567 	streq	r0, [r7], -r7, ror #10
     aa4:	133c6003 	teqne	ip, #3
     aa8:	01060a05 	tsteq	r6, r5, lsl #20
     aac:	000f052e 	andeq	r0, pc, lr, lsr #10
     ab0:	20010402 	andcs	r0, r1, r2, lsl #8
     ab4:	053b0a05 	ldreq	r0, [fp, #-2565]!	; 0xfffff5fb
     ab8:	05300609 	ldreq	r0, [r0, #-1545]!	; 0xfffff9f7
     abc:	2001060c 	andcs	r0, r1, ip, lsl #12
     ac0:	051e0a05 	ldreq	r0, [lr, #-2565]	; 0xfffff5fb
     ac4:	04020017 	streq	r0, [r2], #-23	; 0xffffffe9
     ac8:	35053301 	strcc	r3, [r5, #-769]	; 0xfffffcff
     acc:	02040200 	andeq	r0, r4, #0, 4
     ad0:	0607053c 			; <UNDEFINED> instruction: 0x0607053c
     ad4:	0612052f 	ldreq	r0, [r2], -pc, lsr #10
     ad8:	4a0e0501 	bmi	381ee4 <__RAM_SIZE+0x281ee4>
     adc:	05201205 	streq	r1, [r0, #-517]!	; 0xfffffdfb
     ae0:	0402001c 	streq	r0, [r2], #-28	; 0xffffffe4
     ae4:	39052201 	stmdbcc	r5, {r0, r9, sp}
     ae8:	02040200 	andeq	r0, r4, #0, 4
     aec:	0607053c 			; <UNDEFINED> instruction: 0x0607053c
     af0:	0612052f 	ldreq	r0, [r2], -pc, lsr #10
     af4:	4a0e0501 	bmi	381f00 <__RAM_SIZE+0x281f00>
     af8:	05201205 	streq	r1, [r0, #-517]!	; 0xfffffdfb
     afc:	0402001b 	streq	r0, [r2], #-27	; 0xffffffe5
     b00:	07052201 	streq	r2, [r5, -r1, lsl #4]
     b04:	12052f06 	andne	r2, r5, #6, 30
     b08:	0e050106 	adfeqs	f0, f5, f6
     b0c:	0a05204a 	beq	148c3c <__RAM_SIZE+0x48c3c>
     b10:	200b0306 	andcs	r0, fp, r6, lsl #6
     b14:	01060d05 	tsteq	r6, r5, lsl #26
     b18:	3d060705 	stccc	7, cr0, [r6, #-20]	; 0xffffffec
     b1c:	01061205 	tsteq	r6, r5, lsl #4
     b20:	204a0e05 	subcs	r0, sl, r5, lsl #28
     b24:	22060a05 	andcs	r0, r6, #20480	; 0x5000
     b28:	01060d05 	tsteq	r6, r5, lsl #26
     b2c:	3d060705 	stccc	7, cr0, [r6, #-20]	; 0xffffffec
     b30:	01061205 	tsteq	r6, r5, lsl #4
     b34:	204a0e05 	subcs	r0, sl, r5, lsl #28
     b38:	01000102 	tsteq	r0, r2, lsl #2
     b3c:	00010501 	andeq	r0, r1, r1, lsl #10
     b40:	0be40205 	bleq	ff90135c <__StackTop+0xc780135c>
     b44:	99031000 	stmdbls	r3, {ip}
     b48:	01060102 	tsteq	r6, r2, lsl #2
     b4c:	59060305 	stmdbpl	r6, {r0, r2, r8, r9}
     b50:	06051513 			; <UNDEFINED> instruction: 0x06051513
     b54:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     b58:	0b052106 	bleq	148f78 <__RAM_SIZE+0x48f78>
     b5c:	03050106 	movweq	r0, #20742	; 0x5106
     b60:	06053206 	streq	r3, [r5], -r6, lsl #4
     b64:	22050106 	andcs	r0, r5, #-2147483647	; 0x80000001
     b68:	01040200 	mrseq	r0, R12_usr
     b6c:	0012053c 	andseq	r0, r2, ip, lsr r5
     b70:	4d010402 	cfstrsmi	mvf0, [r1, #-8]
     b74:	01040200 	mrseq	r0, R12_usr
     b78:	000e052e 	andeq	r0, lr, lr, lsr #10
     b7c:	2e080402 	cdpcs	4, 0, cr0, cr8, cr2, {0}
     b80:	02001205 	andeq	r1, r0, #1342177280	; 0x50000000
     b84:	052e0804 	streq	r0, [lr, #-2052]!	; 0xfffff7fc
     b88:	04020007 	streq	r0, [r2], #-7
     b8c:	05590608 	ldrbeq	r0, [r9, #-1544]	; 0xfffff9f8
     b90:	0402000d 	streq	r0, [r2], #-13
     b94:	00010608 	andeq	r0, r1, r8, lsl #12
     b98:	2e080402 	cdpcs	4, 0, cr0, cr8, cr2, {0}
     b9c:	08040200 	stmdaeq	r4, {r9}
     ba0:	05051306 	streq	r1, [r5, #-774]	; 0xfffffcfa
     ba4:	08040200 	stmdaeq	r4, {r9}
     ba8:	14050106 	strne	r0, [r5], #-262	; 0xfffffefa
     bac:	01040200 	mrseq	r0, R12_usr
     bb0:	2c0e052e 	cfstr32cs	mvfx0, [lr], {46}	; 0x2e
     bb4:	20210d05 	eorcs	r0, r1, r5, lsl #26
     bb8:	0f060505 	svceq	0x00060505
     bbc:	05130705 	ldreq	r0, [r3, #-1797]	; 0xfffff8fb
     bc0:	05010627 	streq	r0, [r1, #-1575]	; 0xfffff9d9
     bc4:	07054a12 	smladeq	r5, r2, sl, r4
     bc8:	12052f06 	andne	r2, r5, #6, 30
     bcc:	55050106 	strpl	r0, [r5, #-262]	; 0xfffffefa
     bd0:	02040200 	andeq	r0, r4, #0, 4
     bd4:	02003c3c 	andeq	r3, r0, #60, 24	; 0x3c00
     bd8:	00200704 	eoreq	r0, r0, r4, lsl #14
     bdc:	20070402 	andcs	r0, r7, r2, lsl #8
     be0:	02001205 	andeq	r1, r0, #1342177280	; 0x50000000
     be4:	052e0704 	streq	r0, [lr, #-1796]!	; 0xfffff8fc
     be8:	052e5855 	streq	r5, [lr, #-2133]!	; 0xfffff7ab
     bec:	0175030a 	cmneq	r5, sl, lsl #6
     bf0:	03060305 	movweq	r0, #25349	; 0x6305
     bf4:	0a052010 	beq	148c3c <__RAM_SIZE+0x48c3c>
     bf8:	01050106 	tsteq	r5, r6, lsl #2
     bfc:	01002ed7 	ldrdeq	r2, [r0, -r7]
     c00:	00010501 	andeq	r0, r1, r1, lsl #10
     c04:	0c780205 	lfmeq	f0, 2, [r8], #-20	; 0xffffffec
     c08:	b2031000 	andlt	r1, r3, #0
     c0c:	01060102 	tsteq	r6, r2, lsl #2
     c10:	d7060305 	strle	r0, [r6, -r5, lsl #6]
     c14:	06051513 			; <UNDEFINED> instruction: 0x06051513
     c18:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
     c1c:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
     c20:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
     c24:	05320603 	ldreq	r0, [r2, #-1539]!	; 0xfffff9fd
     c28:	05010606 	streq	r0, [r1, #-1542]	; 0xfffff9fa
     c2c:	04020022 	streq	r0, [r2], #-34	; 0xffffffde
     c30:	12053c01 	andne	r3, r5, #256	; 0x100
     c34:	01040200 	mrseq	r0, R12_usr
     c38:	000e055b 	andeq	r0, lr, fp, asr r5
     c3c:	3c080402 	cfstrscc	mvf0, [r8], {2}
     c40:	02001205 	andeq	r1, r0, #1342177280	; 0x50000000
     c44:	002e0804 	eoreq	r0, lr, r4, lsl #16
     c48:	2e080402 	cdpcs	4, 0, cr0, cr8, cr2, {0}
     c4c:	02000705 	andeq	r0, r0, #1310720	; 0x140000
     c50:	4b060804 	blmi	182c68 <__RAM_SIZE+0x82c68>
     c54:	02000d05 	andeq	r0, r0, #320	; 0x140
     c58:	01060804 	tsteq	r6, r4, lsl #16
     c5c:	08040200 	stmdaeq	r4, {r9}
     c60:	04020066 	streq	r0, [r2], #-102	; 0xffffff9a
     c64:	05130608 	ldreq	r0, [r3, #-1544]	; 0xfffff9f8
     c68:	04020005 	streq	r0, [r2], #-5
     c6c:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
     c70:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
     c74:	0e054a01 	vmlaeq.f32	s8, s10, s2
     c78:	210d053a 	tstcs	sp, sl, lsr r5
     c7c:	0605052e 	streq	r0, [r5], -lr, lsr #10
     c80:	1307050f 	movwne	r0, #29967	; 0x750f
     c84:	01062705 	tsteq	r6, r5, lsl #14
     c88:	05661205 	strbeq	r1, [r6, #-517]!	; 0xfffffdfb
     c8c:	05210607 	streq	r0, [r1, #-1543]!	; 0xfffff9f9
     c90:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
     c94:	04020055 	streq	r0, [r2], #-85	; 0xffffffab
     c98:	003c2e02 	eorseq	r2, ip, r2, lsl #28
     c9c:	20070402 	andcs	r0, r7, r2, lsl #8
     ca0:	02001205 	andeq	r1, r0, #1342177280	; 0x50000000
     ca4:	052e0704 	streq	r0, [lr, #-1796]!	; 0xfffff8fc
     ca8:	052e3c55 	streq	r3, [lr, #-3157]!	; 0xfffff3ab
     cac:	0175030a 	cmneq	r5, sl, lsl #6
     cb0:	03060305 	movweq	r0, #25349	; 0x6305
     cb4:	0a052e10 	beq	14c4fc <__RAM_SIZE+0x4c4fc>
     cb8:	01050106 	tsteq	r5, r6, lsl #2
     cbc:	003c3d08 	eorseq	r3, ip, r8, lsl #26
     cc0:	01050101 	tsteq	r5, r1, lsl #2
     cc4:	40020500 	andmi	r0, r2, r0, lsl #10
     cc8:	0310000d 	tsteq	r0, #13
     ccc:	060103d3 			; <UNDEFINED> instruction: 0x060103d3
     cd0:	06030501 	streq	r0, [r3], -r1, lsl #10
     cd4:	06060592 			; <UNDEFINED> instruction: 0x06060592
     cd8:	20202e01 	eorcs	r2, r0, r1, lsl #28
     cdc:	0018052e 	andseq	r0, r8, lr, lsr #10
     ce0:	3c010402 	cfstrscc	mvf0, [r1], {2}
     ce4:	02002d05 	andeq	r2, r0, #320	; 0x140
     ce8:	059e0204 	ldreq	r0, [lr, #516]	; 0x204
     cec:	13b10603 			; <UNDEFINED> instruction: 0x13b10603
     cf0:	01060605 	tsteq	r6, r5, lsl #12
     cf4:	cd060305 	stcgt	3, cr0, [r6, #-20]	; 0xffffffec
     cf8:	01060605 	tsteq	r6, r5, lsl #12
     cfc:	05590a05 	ldrbeq	r0, [r9, #-2565]	; 0xfffff5fb
     d00:	17330603 	ldrne	r0, [r3, -r3, lsl #12]!
     d04:	060e0513 			; <UNDEFINED> instruction: 0x060e0513
     d08:	0603053c 			; <UNDEFINED> instruction: 0x0603053c
     d0c:	0614052f 	ldreq	r0, [r4], -pc, lsr #10
     d10:	2e2c0501 	cfsh64cs	mvdx0, mvdx12, #1
     d14:	5a060305 	bpl	181930 <__RAM_SIZE+0x81930>
     d18:	01062d05 	tsteq	r6, r5, lsl #26
     d1c:	26052e2e 	strcs	r2, [r5], -lr, lsr #28
     d20:	744b0558 	strbvc	r0, [fp], #-1368	; 0xfffffaa8
     d24:	05665205 	strbeq	r5, [r6, #-517]!	; 0xfffffdfb
     d28:	07057441 	streq	r7, [r5, -r1, asr #8]
     d2c:	0603054a 	streq	r0, [r3], -sl, asr #10
     d30:	0617053e 			; <UNDEFINED> instruction: 0x0617053e
     d34:	2b052e01 	blcs	14c540 <__RAM_SIZE+0x4c540>
     d38:	4a080574 	bmi	202310 <__RAM_SIZE+0x102310>
     d3c:	3d060305 	stccc	3, cr0, [r6, #-20]	; 0xffffffec
     d40:	01061c05 	tsteq	r6, r5, lsl #24
     d44:	5837054a 	ldmdapl	r7!, {r1, r3, r6, r8, sl}
     d48:	059e1005 	ldreq	r1, [lr, #5]
     d4c:	05670603 	strbeq	r0, [r7, #-1539]!	; 0xfffff9fd
     d50:	05010610 	streq	r0, [r1, #-1552]	; 0xfffff9f0
     d54:	05670603 	strbeq	r0, [r7, #-1539]!	; 0xfffff9fd
     d58:	0501061c 	streq	r0, [r1, #-1564]	; 0xfffff9e4
     d5c:	03052e24 	movweq	r2, #24100	; 0x5e24
     d60:	13058406 	movwne	r8, #21510	; 0x5406
     d64:	053c0106 	ldreq	r0, [ip, #-262]!	; 0xfffffefa
     d68:	0582581c 	streq	r5, [r2, #2076]	; 0x81c
     d6c:	3705203c 	smladxcc	r5, ip, r0, r2
     d70:	66310566 	ldrtvs	r0, [r1], -r6, ror #10
     d74:	054a2b05 	strbeq	r2, [sl, #-2821]	; 0xfffff4fb
     d78:	20056626 	andcs	r6, r5, r6, lsr #12
     d7c:	66170566 	ldrvs	r0, [r7], -r6, ror #10
     d80:	054a0f05 	strbeq	r0, [sl, #-3845]	; 0xfffff0fb
     d84:	03054a0a 	movweq	r4, #23050	; 0x5a0a
     d88:	06058406 	streq	r8, [r5], -r6, lsl #8
     d8c:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     d90:	0b055906 	bleq	1571b0 <__RAM_SIZE+0x571b0>
     d94:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     d98:	0c052106 	stfeqs	f2, [r5], {6}
     d9c:	03050106 	movweq	r0, #20742	; 0x5106
     da0:	2b058606 	blcs	1625c0 <__RAM_SIZE+0x625c0>
     da4:	44050106 	strmi	r0, [r5], #-262	; 0xfffffefa
     da8:	03052e2e 	movweq	r2, #24110	; 0x5e2e
     dac:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
     db0:	06052306 	streq	r2, [r5], -r6, lsl #6
     db4:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
     db8:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     dbc:	08054c06 	stmdaeq	r5, {r1, r2, sl, fp, lr}
     dc0:	19050106 	stmdbne	r5, {r1, r2, r8}
     dc4:	01040200 	mrseq	r0, R12_usr
     dc8:	060705ac 	streq	r0, [r7], -ip, lsr #11
     dcc:	060a0591 			; <UNDEFINED> instruction: 0x060a0591
     dd0:	06090501 	streq	r0, [r9], -r1, lsl #10
     dd4:	0625053d 			; <UNDEFINED> instruction: 0x0625053d
     dd8:	202e0501 	eorcs	r0, lr, r1, lsl #10
     ddc:	0605052e 	streq	r0, [r5], -lr, lsr #10
     de0:	05205103 	streq	r5, [r0, #-259]!	; 0xfffffefd
     de4:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
     de8:	00e40301 	rsceq	r0, r4, r1, lsl #6
     dec:	05053cf2 	streq	r3, [r5, #-3314]	; 0xfffff30e
     df0:	7fa20306 	svcvc	0x00a20306
     df4:	060b052e 	streq	r0, [fp], -lr, lsr #10
     df8:	44059e01 	strmi	r9, [r5], #-3585	; 0xfffff1ff
     dfc:	20202203 	eorcs	r2, r0, r3, lsl #4
     e00:	0a030e05 	beq	c461c <__HEAP_SIZE+0xc361c>
     e04:	06070520 	streq	r0, [r7], -r0, lsr #10
     e08:	060d0530 			; <UNDEFINED> instruction: 0x060d0530
     e0c:	06070501 	streq	r0, [r7], -r1, lsl #10
     e10:	1005134c 	andne	r1, r5, ip, asr #6
     e14:	05211106 	streq	r1, [r1, #-262]!	; 0xfffffefa
     e18:	0b030603 	bleq	c262c <__HEAP_SIZE+0xc162c>
     e1c:	06051320 	streq	r1, [r5], -r0, lsr #6
     e20:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     e24:	0c053e06 	stceq	14, cr3, [r5], {6}
     e28:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
     e2c:	76030607 	strvc	r0, [r3], -r7, lsl #12
     e30:	060a0520 	streq	r0, [sl], -r0, lsr #10
     e34:	00160501 	andseq	r0, r6, r1, lsl #10
     e38:	3c010402 	cfstrscc	mvf0, [r1], {2}
     e3c:	3d060905 	vstrcc.16	s0, [r6, #-10]	; <UNPREDICTABLE>
     e40:	0c053c06 	stceq	12, cr3, [r5], {6}
     e44:	34020c03 	strcc	r0, [r2], #-3075	; 0xfffff3fd
     e48:	06030501 	streq	r0, [r3], -r1, lsl #10
     e4c:	06060530 			; <UNDEFINED> instruction: 0x06060530
     e50:	001c0501 	andseq	r0, ip, r1, lsl #10
     e54:	4a010402 	bmi	41e64 <__HEAP_SIZE+0x40e64>
     e58:	05220c05 	streq	r0, [r2, #-3077]!	; 0xfffff3fb
     e5c:	05320603 	ldreq	r0, [r2, #-1539]!	; 0xfffff9fd
     e60:	05010606 	streq	r0, [r1, #-1542]	; 0xfffff9fa
     e64:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
     e68:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
     e6c:	03052e0b 	movweq	r2, #24075	; 0x5e0b
     e70:	05136a06 	ldreq	r6, [r3, #-2566]	; 0xfffff5fa
     e74:	00010609 	andeq	r0, r1, r9, lsl #12
     e78:	82040402 	andhi	r0, r4, #33554432	; 0x2000000
     e7c:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
     e80:	08060404 	stmdaeq	r6, {r2, sl}
     e84:	00060523 	andeq	r0, r6, r3, lsr #10
     e88:	06040402 	streq	r0, [r4], -r2, lsl #8
     e8c:	06050501 	streq	r0, [r5], -r1, lsl #10
     e90:	0402003e 	streq	r0, [r2], #-62	; 0xffffffc2
     e94:	00660604 	rsbeq	r0, r6, r4, lsl #12
     e98:	2e040402 	cdpcs	4, 0, cr0, cr4, cr2, {0}
     e9c:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
     ea0:	47055a06 	strmi	r5, [r5, -r6, lsl #20]
     ea4:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
     ea8:	0b050106 	bleq	1412c8 <__RAM_SIZE+0x412c8>
     eac:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
     eb0:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
     eb4:	05053c04 	streq	r3, [r5, #-3076]	; 0xfffff3fc
     eb8:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
     ebc:	0805d806 	stmdaeq	r5, {r1, r2, fp, ip, lr, pc}
     ec0:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
     ec4:	02000106 	andeq	r0, r0, #-2147483647	; 0x80000001
     ec8:	05660404 	strbeq	r0, [r6, #-1028]!	; 0xfffffbfc
     ecc:	04020009 	streq	r0, [r2], #-9
     ed0:	20770301 	rsbscs	r0, r7, r1, lsl #6
     ed4:	01040200 	mrseq	r0, R12_usr
     ed8:	25050574 	strcs	r0, [r5, #-1396]	; 0xfffffa8c
     edc:	02002705 	andeq	r2, r0, #1310720	; 0x140000
     ee0:	41060204 	tstmi	r6, r4, lsl #4
     ee4:	02040200 	andeq	r0, r4, #0, 4
     ee8:	0d052006 	stceq	0, cr2, [r5, #-24]	; 0xffffffe8
     eec:	01040200 	mrseq	r0, R12_usr
     ef0:	12055806 	andne	r5, r5, #393216	; 0x60000
     ef4:	01040200 	mrseq	r0, R12_usr
     ef8:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
     efc:	01040200 	mrseq	r0, R12_usr
     f00:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
     f04:	02022e01 	andeq	r2, r2, #1, 28
     f08:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
     f0c:	02050001 	andeq	r0, r5, #1
     f10:	10001130 	andne	r1, r0, r0, lsr r1
     f14:	0102d303 	tsteq	r2, r3, lsl #6
     f18:	03050106 	movweq	r0, #20742	; 0x5106
     f1c:	1313bb06 	tstne	r3, #6144	; 0x1800
     f20:	06051515 			; <UNDEFINED> instruction: 0x06051515
     f24:	20200106 	eorcs	r0, r0, r6, lsl #2
     f28:	03052020 	movweq	r2, #20512	; 0x5020
     f2c:	06054c06 	streq	r4, [r5], -r6, lsl #24
     f30:	03050106 	movweq	r0, #20742	; 0x5106
     f34:	0605a006 	streq	sl, [r5], -r6
     f38:	03050106 	movweq	r0, #20742	; 0x5106
     f3c:	06059506 	streq	r9, [r5], -r6, lsl #10
     f40:	22050106 	andcs	r0, r5, #-2147483647	; 0x80000001
     f44:	01040200 	mrseq	r0, R12_usr
     f48:	06030590 			; <UNDEFINED> instruction: 0x06030590
     f4c:	13900903 	orrsne	r0, r0, #49152	; 0xc000
     f50:	01060605 	tsteq	r6, r5, lsl #12
     f54:	05810805 	streq	r0, [r1, #2053]	; 0x805
     f58:	05350603 	ldreq	r0, [r5, #-1539]!	; 0xfffff9fd
     f5c:	05010606 	streq	r0, [r1, #-1542]	; 0xfffff9fa
     f60:	09054b0a 	stmdbeq	r5, {r1, r3, r8, r9, fp, lr}
     f64:	2a052306 	bcs	149b84 <__RAM_SIZE+0x49b84>
     f68:	01040200 	mrseq	r0, R12_usr
     f6c:	05052e06 	streq	r2, [r5, #-3590]	; 0xfffff1fa
     f70:	10052f06 	andne	r2, r5, r6, lsl #30
     f74:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     f78:	09056706 	stmdbeq	r5, {r1, r2, r8, r9, sl, sp, lr}
     f7c:	0c050106 	stfeqs	f0, [r5], {6}
     f80:	0505201f 	streq	r2, [r5, #-31]	; 0xffffffe1
     f84:	20630306 	rsbcs	r0, r3, r6, lsl #6
     f88:	01060c05 	tsteq	r6, r5, lsl #24
     f8c:	e6060505 	str	r0, [r6], -r5, lsl #10
     f90:	01060c05 	tsteq	r6, r5, lsl #24
     f94:	e6060505 	str	r0, [r6], -r5, lsl #10
     f98:	01060c05 	tsteq	r6, r5, lsl #24
     f9c:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
     fa0:	02002058 	andeq	r2, r0, #88	; 0x58
     fa4:	c8200804 	stmdagt	r0!, {r2, fp}
     fa8:	50060505 	andpl	r0, r6, r5, lsl #10
     fac:	01060c05 	tsteq	r6, r5, lsl #24
     fb0:	03060505 	movweq	r0, #25861	; 0x6505
     fb4:	0513d609 	ldreq	sp, [r3, #-1545]	; 0xfffff9f7
     fb8:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
     fbc:	0a05810e 	beq	1613fc <__RAM_SIZE+0x613fc>
     fc0:	06030542 	streq	r0, [r3], -r2, asr #10
     fc4:	06070536 			; <UNDEFINED> instruction: 0x06070536
     fc8:	06030501 	streq	r0, [r3], -r1, lsl #10
     fcc:	06170559 			; <UNDEFINED> instruction: 0x06170559
     fd0:	27052e01 	strcs	r2, [r5, -r1, lsl #28]
     fd4:	580a0566 	stmdapl	sl, {r1, r2, r5, r6, r8, sl}
     fd8:	83060305 	movwhi	r0, #25349	; 0x6305
     fdc:	01061105 	tsteq	r6, r5, lsl #2
     fe0:	0603052e 	streq	r0, [r3], -lr, lsr #10
     fe4:	060e0521 	streq	r0, [lr], -r1, lsr #10
     fe8:	08052e01 	stmdaeq	r5, {r0, r9, sl, fp, sp}
     fec:	0603052e 	streq	r0, [r3], -lr, lsr #10
     ff0:	06060584 	streq	r0, [r6], -r4, lsl #11
     ff4:	05052001 	streq	r2, [r5, #-1]
     ff8:	05224b06 	streq	r4, [r2, #-2822]!	; 0xfffff4fa
     ffc:	0501060e 	streq	r0, [r1, #-1550]	; 0xfffff9f2
    1000:	07055808 	streq	r5, [r5, -r8, lsl #16]
    1004:	05135906 	ldreq	r5, [r3, #-2310]	; 0xfffff6fa
    1008:	051f060c 	ldreq	r0, [pc, #-1548]	; a04 <__Vectors_Size+0x244>
    100c:	0b030603 	bleq	c2820 <__HEAP_SIZE+0xc1820>
    1010:	06060520 	streq	r0, [r6], -r0, lsr #10
    1014:	06050501 	streq	r0, [r5], -r1, lsl #10
    1018:	06140521 	ldreq	r0, [r4], -r1, lsr #10
    101c:	580a0501 	stmdapl	sl, {r0, r8, sl}
    1020:	06050558 			; <UNDEFINED> instruction: 0x06050558
    1024:	06080521 	streq	r0, [r8], -r1, lsr #10
    1028:	00180501 	andseq	r0, r8, r1, lsl #10
    102c:	58020402 	stmdapl	r2, {r1, sl}
    1030:	02002905 	andeq	r2, r0, #81920	; 0x14000
    1034:	05820304 	streq	r0, [r2, #772]	; 0x304
    1038:	063f0607 	ldrteq	r0, [pc], -r7, lsl #12
    103c:	06080520 	streq	r0, [r8], -r0, lsr #10
    1040:	05207403 	streq	r7, [r0, #-1027]!	; 0xfffffbfd
    1044:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
    1048:	05840608 	streq	r0, [r4, #1544]	; 0x608
    104c:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
    1050:	04020019 	streq	r0, [r2], #-25	; 0xffffffe7
    1054:	05052001 	streq	r2, [r5, #-1]
    1058:	20063e06 	andcs	r3, r6, r6, lsl #28
    105c:	03060b05 	movweq	r0, #27397	; 0x6b05
    1060:	0705200e 	streq	r2, [r5, -lr]
    1064:	2705212f 	strcs	r2, [r5, -pc, lsr #2]
    1068:	0e050106 	adfeqs	f0, f5, f6
    106c:	20140590 	mulscs	r4, r0, r5
    1070:	05201205 	streq	r1, [r0, #-517]!	; 0xfffffdfb
    1074:	05670607 	strbeq	r0, [r7, #-1543]!	; 0xfffff9f9
    1078:	0501060a 	streq	r0, [r1, #-1546]	; 0xfffff9f6
    107c:	0e052e12 	mcreq	14, 0, r2, cr5, cr2, {0}
    1080:	0b052e1f 	bleq	14c904 <__RAM_SIZE+0x4c904>
    1084:	35052606 	strcc	r2, [r5, #-1542]	; 0xfffff9fa
    1088:	01040200 	mrseq	r0, R12_usr
    108c:	2c052e06 	stccs	14, cr2, [r5], {6}
    1090:	01040200 	mrseq	r0, R12_usr
    1094:	06070520 	streq	r0, [r7], -r0, lsr #10
    1098:	06120521 	ldreq	r0, [r2], -r1, lsr #10
    109c:	65350501 	ldrvs	r0, [r5, #-1281]!	; 0xfffffaff
    10a0:	20210e05 	eorcs	r0, r1, r5, lsl #28
    10a4:	22060505 	andcs	r0, r6, #20971520	; 0x1400000
    10a8:	01060805 	tsteq	r6, r5, lsl #16
    10ac:	30060705 	andcc	r0, r6, r5, lsl #14
    10b0:	01061205 	tsteq	r6, r5, lsl #4
    10b4:	20660e05 	rsbcs	r0, r6, r5, lsl #28
    10b8:	17060905 	strne	r0, [r6, -r5, lsl #18]
    10bc:	052f0505 	streq	r0, [pc, #-1285]!	; bbf <__Vectors_Size+0x3ff>
    10c0:	05010625 	streq	r0, [r1, #-1573]	; 0xfffff9db
    10c4:	1205ac0c 	andne	sl, r5, #12, 24	; 0xc00
    10c8:	20100520 	andscs	r0, r0, r0, lsr #10
    10cc:	67060505 	strvs	r0, [r6, -r5, lsl #10]
    10d0:	01061105 	tsteq	r6, r5, lsl #2
    10d4:	05200805 	streq	r0, [r0, #-2053]!	; 0xfffff7fb
    10d8:	c8081f0c 	stmdagt	r8, {r2, r3, r8, r9, sl, fp, ip}
    10dc:	27060305 	strcs	r0, [r6, -r5, lsl #6]
    10e0:	01061d05 	tsteq	r6, r5, lsl #26
    10e4:	053c0605 	ldreq	r0, [ip, #-1541]!	; 0xfffff9fb
    10e8:	09030603 	stmdbeq	r3, {r0, r1, r9, sl}
    10ec:	0606052e 	streq	r0, [r6], -lr, lsr #10
    10f0:	06050501 	streq	r0, [r5], -r1, lsl #10
    10f4:	0608052f 	streq	r0, [r8], -pc, lsr #10
    10f8:	06070501 	streq	r0, [r7], -r1, lsl #10
    10fc:	0612053d 			; <UNDEFINED> instruction: 0x0612053d
    1100:	660e0501 	strvs	r0, [lr], -r1, lsl #10
    1104:	03060305 	movweq	r0, #25349	; 0x6305
    1108:	0a05200a 	beq	149138 <__RAM_SIZE+0x49138>
    110c:	01050106 	tsteq	r5, r6, lsl #2
    1110:	060505c9 	streq	r0, [r5], -r9, asr #11
    1114:	05586b03 	ldrbeq	r6, [r8, #-2819]	; 0xfffff4fd
    1118:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
    111c:	0402000f 	streq	r0, [r2], #-15
    1120:	1c052e01 	stcne	14, cr2, [r5], {1}
    1124:	02040200 	andeq	r0, r4, #0, 4
    1128:	0607052e 	streq	r0, [r7], -lr, lsr #10
    112c:	060c054b 	streq	r0, [ip], -fp, asr #10
    1130:	07053c01 	streq	r3, [r5, -r1, lsl #24]
    1134:	12053106 	andne	r3, r5, #-2147483647	; 0x80000001
    1138:	0e050106 	adfeqs	f0, f5, f6
    113c:	060b0566 	streq	r0, [fp], -r6, ror #10
    1140:	001a051f 	andseq	r0, sl, pc, lsl r5
    1144:	06010402 	streq	r0, [r1], -r2, lsl #8
    1148:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    114c:	0a053c01 	beq	150158 <__RAM_SIZE+0x50158>
    1150:	4a090306 	bmi	241d70 <__RAM_SIZE+0x141d70>
    1154:	01060d05 	tsteq	r6, r5, lsl #26
    1158:	4b060705 	blmi	182d74 <__RAM_SIZE+0x82d74>
    115c:	01061205 	tsteq	r6, r5, lsl #4
    1160:	20660e05 	rsbcs	r0, r6, r5, lsl #28
    1164:	22060a05 	andcs	r0, r6, #20480	; 0x5000
    1168:	01060d05 	tsteq	r6, r5, lsl #26
    116c:	4b060705 	blmi	182d88 <__RAM_SIZE+0x82d88>
    1170:	01061205 	tsteq	r6, r5, lsl #4
    1174:	20660e05 	rsbcs	r0, r6, r5, lsl #28
    1178:	01000102 	tsteq	r0, r2, lsl #2
    117c:	00010501 	andeq	r0, r1, r1, lsl #10
    1180:	14c80205 	strbne	r0, [r8], #517	; 0x205
    1184:	c1031000 	mrsgt	r1, (UNDEF: 3)
    1188:	01060104 	tsteq	r6, r4, lsl #2
    118c:	67060305 	strvs	r0, [r6, -r5, lsl #6]
    1190:	06051413 			; <UNDEFINED> instruction: 0x06051413
    1194:	09050106 	stmdbeq	r5, {r1, r2, r8}
    1198:	4a01d303 	bmi	75dac <__HEAP_SIZE+0x74dac>
    119c:	b2030620 	andlt	r0, r3, #32, 12	; 0x2000000
    11a0:	0a05017e 	beq	1417a0 <__RAM_SIZE+0x417a0>
    11a4:	09050106 	stmdbeq	r5, {r1, r2, r8}
    11a8:	0605052e 	streq	r0, [r5], -lr, lsr #10
    11ac:	0608053f 			; <UNDEFINED> instruction: 0x0608053f
    11b0:	06070501 	streq	r0, [r7], -r1, lsl #10
    11b4:	06200630 			; <UNDEFINED> instruction: 0x06200630
    11b8:	060d054b 	streq	r0, [sp], -fp, asr #10
    11bc:	06070501 	streq	r0, [r7], -r1, lsl #10
    11c0:	2210063d 	andscs	r0, r0, #63963136	; 0x3d00000
    11c4:	0d052406 	cfstrseq	mvf2, [r5, #-24]	; 0xffffffe8
    11c8:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    11cc:	0b053206 	bleq	14d9ec <__RAM_SIZE+0x4d9ec>
    11d0:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    11d4:	07052106 	streq	r2, [r5, -r6, lsl #2]
    11d8:	060f0513 			; <UNDEFINED> instruction: 0x060f0513
    11dc:	2e070501 	cfsh32cs	mvfx0, mvfx7, #1
    11e0:	ec060d05 	stc	13, cr0, [r6], {5}
    11e4:	13150505 	tstne	r5, #20971520	; 0x1400000
    11e8:	cd031405 	cfstrsgt	mvf1, [r3, #-20]	; 0xffffffec
    11ec:	0305017c 	movweq	r0, #20860	; 0x517c
    11f0:	06160514 			; <UNDEFINED> instruction: 0x06160514
    11f4:	08053c01 	stmdaeq	r5, {r0, sl, fp, ip, sp}
    11f8:	0103b103 	tsteq	r3, r3, lsl #2
    11fc:	31060a05 	tstcc	r6, r5, lsl #20
    1200:	01060d05 	tsteq	r6, r5, lsl #26
    1204:	052a0b05 	streq	r0, [sl, #-2821]!	; 0xfffff4fb
    1208:	11030605 	tstne	r3, r5, lsl #12
    120c:	0905132e 	stmdbeq	r5, {r1, r2, r3, r5, r8, r9, ip}
    1210:	08050106 	stmdaeq	r5, {r1, r2, r8}
    1214:	2d0f052e 	cfstr32cs	mvfx0, [pc, #-184]	; 1164 <__HEAP_SIZE+0x164>
    1218:	03060505 	movweq	r0, #25861	; 0x6505
    121c:	0d052e0f 	stceq	14, cr2, [r5, #-60]	; 0xffffffc4
    1220:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    1224:	0613052e 	ldreq	r0, [r3], -lr, lsr #10
    1228:	05e45603 	strbeq	r5, [r4, #1539]!	; 0x603
    122c:	05010619 	streq	r0, [r1, #-1561]	; 0xfffff9e7
    1230:	052e062b 	streq	r0, [lr, #-1579]!	; 0xfffff9d5
    1234:	05010631 	streq	r0, [r1, #-1585]	; 0xfffff9cf
    1238:	052e0635 	streq	r0, [lr, #-1589]!	; 0xfffff9cb
    123c:	0d05013d 	stfeqs	f0, [r5, #-244]	; 0xffffff0c
    1240:	03130519 	tsteq	r3, #104857600	; 0x6400000
    1244:	1905207a 	stmdbne	r5, {r1, r3, r4, r5, r6, sp}
    1248:	2b050106 	blcs	141668 <__RAM_SIZE+0x41668>
    124c:	31052e06 	tstcc	r5, r6, lsl #28
    1250:	35050106 	strcc	r0, [r5, #-262]	; 0xfffffefa
    1254:	3d052e06 	stccc	14, cr2, [r5, #-24]	; 0xffffffe8
    1258:	180d0501 	stmdane	sp, {r0, r8, sl}
    125c:	051b1305 	ldreq	r1, [fp, #-773]	; 0xfffffcfb
    1260:	05010619 	streq	r0, [r1, #-1561]	; 0xfffff9e7
    1264:	052e062b 	streq	r0, [lr, #-1579]!	; 0xfffff9d5
    1268:	05010631 	streq	r0, [r1, #-1585]	; 0xfffff9cf
    126c:	052e0635 	streq	r0, [lr, #-1589]!	; 0xfffff9cb
    1270:	0d05013d 	stfeqs	f0, [r5, #-244]	; 0xffffff0c
    1274:	1c130517 	cfldr32ne	mvfx0, [r3], {23}
    1278:	01061905 	tsteq	r6, r5, lsl #18
    127c:	2e062b05 	vmlacs.f64	d2, d6, d5
    1280:	01063105 	tsteq	r6, r5, lsl #2
    1284:	2e063505 	cfsh32cs	mvfx3, mvfx6, #5
    1288:	05013d05 	streq	r3, [r1, #-3333]	; 0xfffff2fb
    128c:	1305160d 	movwne	r1, #22029	; 0x560d
    1290:	0619051d 			; <UNDEFINED> instruction: 0x0619051d
    1294:	062b0501 	strteq	r0, [fp], -r1, lsl #10
    1298:	0631052e 	ldrteq	r0, [r1], -lr, lsr #10
    129c:	06350501 	ldrteq	r0, [r5], -r1, lsl #10
    12a0:	013d052e 	teqeq	sp, lr, lsr #10
    12a4:	05150d05 	ldreq	r0, [r5, #-3333]	; 0xfffff2fb
    12a8:	0f052507 	svceq	0x00052507
    12ac:	054a0106 	strbeq	r0, [sl, #-262]	; 0xfffffefa
    12b0:	05230607 	streq	r0, [r3, #-1543]!	; 0xfffff9f9
    12b4:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    12b8:	054b0607 	strbeq	r0, [fp, #-1543]	; 0xfffff9f9
    12bc:	0501060a 	streq	r0, [r1, #-1546]	; 0xfffff9f6
    12c0:	05330609 	ldreq	r0, [r3, #-1545]!	; 0xfffff9f7
    12c4:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    12c8:	05220607 	streq	r0, [r2, #-1543]!	; 0xfffff9f9
    12cc:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
    12d0:	7a030609 	bvc	c2afc <__HEAP_SIZE+0xc1afc>
    12d4:	060f054a 	streq	r0, [pc], -sl, asr #10
    12d8:	06090501 	streq	r0, [r9], -r1, lsl #10
    12dc:	061f052f 	ldreq	r0, [pc], -pc, lsr #10
    12e0:	05202e01 	streq	r2, [r0, #-3585]!	; 0xfffff1ff
    12e4:	0b030607 	bleq	c2b08 <__HEAP_SIZE+0xc1b08>
    12e8:	060d0501 	streq	r0, [sp], -r1, lsl #10
    12ec:	06070501 	streq	r0, [r7], -r1, lsl #10
    12f0:	060d052f 	streq	r0, [sp], -pc, lsr #10
    12f4:	06070501 	streq	r0, [r7], -r1, lsl #10
    12f8:	060b052f 	streq	r0, [fp], -pc, lsr #10
    12fc:	06140501 	ldreq	r0, [r4], -r1, lsl #10
    1300:	207cb903 	rsbscs	fp, ip, r3, lsl #18
    1304:	05140305 	ldreq	r0, [r4, #-773]	; 0xfffffcfb
    1308:	3c010616 	stccc	6, cr0, [r1], {22}
    130c:	c5030a05 	strgt	r0, [r3, #-2565]	; 0xfffff5fb
    1310:	0c050103 	stfeqs	f0, [r5], {3}
    1314:	0f053106 	svceq	0x00053106
    1318:	79030106 	stmdbvc	r3, {r1, r2, r8}
    131c:	0609052e 	streq	r0, [r9], -lr, lsr #10
    1320:	06150541 	ldreq	r0, [r5], -r1, asr #10
    1324:	09054a01 	stmdbeq	r5, {r0, r9, fp, lr}
    1328:	13052306 	movwne	r2, #21254	; 0x5306
    132c:	09050106 	stmdbeq	r5, {r1, r2, r8}
    1330:	33054b06 	movwcc	r4, #23302	; 0x5b06
    1334:	09050106 	stmdbeq	r5, {r1, r2, r8}
    1338:	0f052f06 	svceq	0x00052f06
    133c:	054a0106 	strbeq	r0, [sl, #-262]	; 0xfffffefa
    1340:	05190609 	ldreq	r0, [r9, #-1545]	; 0xfffff9f7
    1344:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    1348:	052f0609 	streq	r0, [pc, #-1545]!	; d47 <__Vectors_Size+0x587>
    134c:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    1350:	052f0609 	streq	r0, [pc, #-1545]!	; d4f <__Vectors_Size+0x58f>
    1354:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
    1358:	0f05200c 	svceq	0x0005200c
    135c:	060b052c 	streq	r0, [fp], -ip, lsr #10
    1360:	06110531 			; <UNDEFINED> instruction: 0x06110531
    1364:	060b0501 	streq	r0, [fp], -r1, lsl #10
    1368:	0611052f 	ldreq	r0, [r1], -pc, lsr #10
    136c:	06090501 	streq	r0, [r9], -r1, lsl #10
    1370:	060f0540 	streq	r0, [pc], -r0, asr #10
    1374:	06090501 	streq	r0, [r9], -r1, lsl #10
    1378:	060f052f 	streq	r0, [pc], -pc, lsr #10
    137c:	06090501 	streq	r0, [r9], -r1, lsl #10
    1380:	060d052f 	streq	r0, [sp], -pc, lsr #10
    1384:	200c0501 	andcs	r0, ip, r1, lsl #10
    1388:	052c0f05 	streq	r0, [ip, #-3845]!	; 0xfffff0fb
    138c:	0531060b 	ldreq	r0, [r1, #-1547]!	; 0xfffff9f5
    1390:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    1394:	052f060b 	streq	r0, [pc, #-1547]!	; d91 <__Vectors_Size+0x5d1>
    1398:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    139c:	05410609 	strbeq	r0, [r1, #-1545]	; 0xfffff9f7
    13a0:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    13a4:	052f0609 	streq	r0, [pc, #-1545]!	; da3 <__Vectors_Size+0x5e3>
    13a8:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    13ac:	052f0609 	streq	r0, [pc, #-1545]!	; dab <__Vectors_Size+0x5eb>
    13b0:	010f0305 	tsteq	pc, r5, lsl #6
    13b4:	01060d05 	tsteq	r6, r5, lsl #26
    13b8:	052e0505 	streq	r0, [lr, #-1285]!	; 0xfffffafb
    13bc:	74030609 	strvc	r0, [r3], #-1545	; 0xfffff9f7
    13c0:	05015b02 	streq	r5, [r1, #-2818]	; 0xfffff4fe
    13c4:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    13c8:	052f0609 	streq	r0, [pc, #-1545]!	; dc7 <__Vectors_Size+0x607>
    13cc:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    13d0:	222f0609 	eorcs	r0, pc, #9437184	; 0x900000
    13d4:	01060f05 	tsteq	r6, r5, lsl #30
    13d8:	2f060905 	svccs	0x00060905
    13dc:	01060f05 	tsteq	r6, r5, lsl #30
    13e0:	2f060905 	svccs	0x00060905
    13e4:	13200f03 			; <UNDEFINED> instruction: 0x13200f03
    13e8:	01060c05 	tsteq	r6, r5, lsl #24
    13ec:	02001c05 	andeq	r1, r0, #1280	; 0x500
    13f0:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
    13f4:	0531060e 	ldreq	r0, [r1, #-1550]!	; 0xfffff9f2
    13f8:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    13fc:	0531060e 	ldreq	r0, [r1, #-1550]!	; 0xfffff9f2
    1400:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    1404:	1332060b 	teqne	r2, #11534336	; 0xb00000
    1408:	01061105 	tsteq	r6, r5, lsl #2
    140c:	032d1005 			; <UNDEFINED> instruction: 0x032d1005
    1410:	09052e77 	stmdbeq	r5, {r0, r1, r2, r4, r5, r6, r9, sl, fp, sp}
    1414:	200d0306 	andcs	r0, sp, r6, lsl #6
    1418:	01060c05 	tsteq	r6, r5, lsl #24
    141c:	33060905 	movwcc	r0, #26885	; 0x6905
    1420:	01060c05 	tsteq	r6, r5, lsl #24
    1424:	02001e05 	andeq	r1, r0, #5, 28	; 0x50
    1428:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
    142c:	052f060b 	streq	r0, [pc, #-1547]!	; e29 <__Vectors_Size+0x669>
    1430:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    1434:	05320609 	ldreq	r0, [r2, #-1545]!	; 0xfffff9f7
    1438:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    143c:	053d060b 	ldreq	r0, [sp, #-1547]!	; 0xfffff9f5
    1440:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    1444:	05320609 	ldreq	r0, [r2, #-1545]!	; 0xfffff9f7
    1448:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    144c:	0402001e 	streq	r0, [r2], #-30	; 0xffffffe2
    1450:	0b052e01 	bleq	14cc5c <__RAM_SIZE+0x4cc5c>
    1454:	2e130306 	cdpcs	3, 1, cr0, cr3, cr6, {0}
    1458:	01060e05 	tsteq	r6, r5, lsl #28
    145c:	4f061005 	svcmi	0x00061005
    1460:	01061305 	tsteq	r6, r5, lsl #6
    1464:	4e060d05 	cdpmi	13, 0, cr0, cr6, cr5, {0}
    1468:	01066705 	tsteq	r6, r5, lsl #14
    146c:	054a4e05 	strbeq	r4, [sl, #-3589]	; 0xfffff1fb
    1470:	0402000d 	streq	r0, [r2], #-13
    1474:	054b0608 	strbeq	r0, [fp, #-1544]	; 0xfffff9f8
    1478:	04020013 	streq	r0, [r2], #-19	; 0xffffffed
    147c:	00010608 	andeq	r0, r1, r8, lsl #12
    1480:	74080402 	strvc	r0, [r8], #-1026	; 0xfffffbfe
    1484:	08040200 	stmdaeq	r4, {r9}
    1488:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    148c:	02004a08 	andeq	r4, r0, #8, 20	; 0x8000
    1490:	00200804 	eoreq	r0, r0, r4, lsl #16
    1494:	20080402 	andcs	r0, r8, r2, lsl #8
    1498:	47031005 	strmi	r1, [r3, -r5]
    149c:	05313101 	ldreq	r3, [r1, #-257]!	; 0xfffffeff
    14a0:	0536060b 	ldreq	r0, [r6, #-1547]!	; 0xfffff9f5
    14a4:	2e010611 	mcrcs	6, 0, r0, cr1, cr1, {0}
    14a8:	03060b05 	movweq	r0, #27397	; 0x6b05
    14ac:	0e052010 	mcreq	0, 0, r2, cr5, cr0, {0}
    14b0:	10050106 	andne	r0, r5, r6, lsl #2
    14b4:	13054206 	movwne	r4, #20998	; 0x5206
    14b8:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    14bc:	4c054106 	stfmis	f4, [r5], {6}
    14c0:	3c050106 	stfccs	f0, [r5], {6}
    14c4:	000d053c 	andeq	r0, sp, ip, lsr r5
    14c8:	06080402 	streq	r0, [r8], -r2, lsl #8
    14cc:	0038054b 	eorseq	r0, r8, fp, asr #10
    14d0:	06080402 	streq	r0, [r8], -r2, lsl #8
    14d4:	00130501 	andseq	r0, r3, r1, lsl #10
    14d8:	4a080402 	bmi	2024e8 <__RAM_SIZE+0x1024e8>
    14dc:	08040200 	stmdaeq	r4, {r9}
    14e0:	04020074 	streq	r0, [r2], #-116	; 0xffffff8c
    14e4:	02003c08 	andeq	r3, r0, #8, 24	; 0x800
    14e8:	00580804 	subseq	r0, r8, r4, lsl #16
    14ec:	20080402 	andcs	r0, r8, r2, lsl #8
    14f0:	03060905 	movweq	r0, #26885	; 0x6905
    14f4:	0f050112 	svceq	0x00050112
    14f8:	09050106 	stmdbeq	r5, {r1, r2, r8}
    14fc:	0d053d06 	stceq	13, cr3, [r5, #-24]	; 0xffffffe8
    1500:	05206303 	streq	r6, [r0, #-771]!	; 0xfffffcfd
    1504:	0501061d 	streq	r0, [r1, #-1565]	; 0xfffff9e3
    1508:	0583060d 	streq	r0, [r3, #1549]	; 0x60d
    150c:	0501063d 	streq	r0, [r1, #-1597]	; 0xfffff9c3
    1510:	582e4a13 	stmdapl	lr!, {r0, r1, r4, r9, fp, lr}
    1514:	3d0520ac 	stccc	0, cr2, [r5, #-688]	; 0xfffffd50
    1518:	060d0520 	streq	r0, [sp], -r0, lsr #10
    151c:	0618054e 	ldreq	r0, [r8], -lr, asr #10
    1520:	060d0501 	streq	r0, [sp], -r1, lsl #10
    1524:	0638054b 	ldrteq	r0, [r8], -fp, asr #10
    1528:	4a130501 	bmi	4c2934 <__RAM_SIZE+0x3c2934>
    152c:	0520589e 	streq	r5, [r0, #-2206]!	; 0xfffff762
    1530:	02000181 	andeq	r0, r0, #1073741856	; 0x40000020
    1534:	05230204 	streq	r0, [r3, #-516]!	; 0xfffffdfc
    1538:	66053c71 			; <UNDEFINED> instruction: 0x66053c71
    153c:	0181053c 	orreq	r0, r1, ip, lsr r5
    1540:	0d05583c 	stceq	8, cr5, [r5, #-240]	; 0xffffff10
    1544:	13051a06 	movwne	r1, #23046	; 0x5a06
    1548:	4a080106 	bmi	201968 <__RAM_SIZE+0x101968>
    154c:	0d052058 	stceq	0, cr2, [r5, #-352]	; 0xfffffea0
    1550:	13052406 	movwne	r2, #21510	; 0x5406
    1554:	909e0106 	addsls	r0, lr, r6, lsl #2
    1558:	01ae0520 			; <UNDEFINED> instruction: 0x01ae0520
    155c:	02040200 	andeq	r0, r4, #0, 4
    1560:	01950523 	orrseq	r0, r5, r3, lsr #10
    1564:	01ae053c 			; <UNDEFINED> instruction: 0x01ae053c
    1568:	09055858 	stmdbeq	r5, {r3, r4, r6, fp, ip, lr}
    156c:	010a0306 	tsteq	sl, r6, lsl #6
    1570:	01060c05 	tsteq	r6, r5, lsl #24
    1574:	2f060905 	svccs	0x00060905
    1578:	01060f05 	tsteq	r6, r5, lsl #30
    157c:	08060905 	stmdaeq	r6, {r0, r2, r8, fp}
    1580:	060f0567 	streq	r0, [pc], -r7, ror #10
    1584:	06090501 	streq	r0, [r9], -r1, lsl #10
    1588:	001d053d 	andseq	r0, sp, sp, lsr r5
    158c:	1d010402 	cfstrsne	mvf0, [r1, #-8]
    1590:	02002305 	andeq	r2, r0, #335544320	; 0x14000000
    1594:	01060104 	tsteq	r6, r4, lsl #2
    1598:	01040200 	mrseq	r0, R12_usr
    159c:	0609052e 	streq	r0, [r9], -lr, lsr #10
    15a0:	05200903 	streq	r0, [r0, #-2307]!	; 0xfffff6fd
    15a4:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    15a8:	0402001d 	streq	r0, [r2], #-29	; 0xffffffe3
    15ac:	31052e02 	tstcc	r5, r2, lsl #28
    15b0:	03040200 	movweq	r0, #16896	; 0x4200
    15b4:	37052e06 	strcc	r2, [r5, -r6, lsl #28]
    15b8:	03040200 	movweq	r0, #16896	; 0x4200
    15bc:	09050106 	stmdbeq	r5, {r1, r2, r8}
    15c0:	0c052f06 	stceq	15, cr2, [r5], {6}
    15c4:	1d050106 	stfnes	f0, [r5, #-24]	; 0xffffffe8
    15c8:	02040200 	andeq	r0, r4, #0, 4
    15cc:	0031052e 	eorseq	r0, r1, lr, lsr #10
    15d0:	06030402 	streq	r0, [r3], -r2, lsl #8
    15d4:	0037052e 	eorseq	r0, r7, lr, lsr #10
    15d8:	06030402 	streq	r0, [r3], -r2, lsl #8
    15dc:	06090501 	streq	r0, [r9], -r1, lsl #10
    15e0:	060f052f 	streq	r0, [pc], -pc, lsr #10
    15e4:	06090501 	streq	r0, [r9], -r1, lsl #10
    15e8:	0f056708 	svceq	0x00056708
    15ec:	09050106 	stmdbeq	r5, {r1, r2, r8}
    15f0:	14243d06 	strtne	r3, [r4], #-3334	; 0xfffff2fa
    15f4:	01060c05 	tsteq	r6, r5, lsl #24
    15f8:	1e16052e 	cfmul64ne	mvdx0, mvdx6, mvdx14
    15fc:	36060905 	strcc	r0, [r6], -r5, lsl #18
    1600:	01061305 	tsteq	r6, r5, lsl #6
    1604:	2e3c0905 	vaddcs.f16	s0, s24, s10	; <UNPREDICTABLE>
    1608:	0c055a06 			; <UNDEFINED> instruction: 0x0c055a06
    160c:	09050106 	stmdbeq	r5, {r1, r2, r8}
    1610:	0f052506 	svceq	0x00052506
    1614:	09050106 	stmdbeq	r5, {r1, r2, r8}
    1618:	0d053d06 	stceq	13, cr3, [r5, #-24]	; 0xffffffe8
    161c:	062e7403 	strteq	r7, [lr], -r3, lsl #8
    1620:	4913052e 	ldmdbmi	r3, {r1, r2, r3, r5, r8, sl}
    1624:	05210d05 	streq	r0, [r1, #-3333]!	; 0xfffff2fb
    1628:	051f0611 	ldreq	r0, [pc, #-1553]	; 101f <__HEAP_SIZE+0x1f>
    162c:	05010613 	streq	r0, [r1, #-1555]	; 0xfffff9ed
    1630:	052e2e11 	streq	r2, [lr, #-3601]!	; 0xfffff1ef
    1634:	2e3c2b16 	vmovcs.32	r2, d12[1]
    1638:	060d053c 			; <UNDEFINED> instruction: 0x060d053c
    163c:	06200c03 	strteq	r0, [r0], -r3, lsl #24
    1640:	49130520 	ldmdbmi	r3, {r5, r8, sl}
    1644:	05210d05 	streq	r0, [r1, #-3333]!	; 0xfffff2fb
    1648:	051f0611 	ldreq	r0, [pc, #-1553]	; 103f <__HEAP_SIZE+0x3f>
    164c:	05010613 	streq	r0, [r1, #-1555]	; 0xfffff9ed
    1650:	2e2e2e11 	mcrcs	14, 1, r2, cr14, cr1, {0}
    1654:	03060905 	movweq	r0, #26885	; 0x6905
    1658:	15050109 	strne	r0, [r5, #-265]	; 0xfffffef7
    165c:	09050106 	stmdbeq	r5, {r1, r2, r8}
    1660:	1a055906 	bne	157a80 <__RAM_SIZE+0x57a80>
    1664:	26050106 	strcs	r0, [r5], -r6, lsl #2
    1668:	7b900306 	blvc	fe402288 <__StackTop+0xc6302288>
    166c:	01220574 			; <UNDEFINED> instruction: 0x01220574
    1670:	2e061e05 	cdpcs	14, 0, cr1, cr6, cr5, {0}
    1674:	20061105 	andcs	r1, r6, r5, lsl #2
    1678:	2e060305 	cdpcs	3, 0, cr0, cr6, cr5, {0}
    167c:	05201e05 	streq	r1, [r0, #-3589]!	; 0xfffff1fb
    1680:	03052014 	movweq	r2, #20500	; 0x5014
    1684:	1b052f06 	blne	14d2a4 <__RAM_SIZE+0x4d2a4>
    1688:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
    168c:	f1030609 			; <UNDEFINED> instruction: 0xf1030609
    1690:	0c050104 	stfeqs	f0, [r5], {4}
    1694:	0b050106 	bleq	141ab4 <__RAM_SIZE+0x41ab4>
    1698:	0d054b06 	vstreq	d4, [r5, #-24]	; 0xffffffe8
    169c:	09050106 	stmdbeq	r5, {r1, r2, r8}
    16a0:	0c053e06 	stceq	14, cr3, [r5], {6}
    16a4:	2e4a0106 	dvfcse	f0, f2, f6
    16a8:	1a052020 	bne	149730 <__RAM_SIZE+0x49730>
    16ac:	052e2e1b 	streq	r2, [lr, #-3611]!	; 0xfffff1e5
    16b0:	0635060d 	ldrteq	r0, [r5], -sp, lsl #12
    16b4:	4913052e 	ldmdbmi	r3, {r1, r2, r3, r5, r8, sl}
    16b8:	05210d05 	streq	r0, [r1, #-3333]!	; 0xfffff2fb
    16bc:	051f0611 	ldreq	r0, [pc, #-1553]	; 10b3 <__HEAP_SIZE+0xb3>
    16c0:	05010613 	streq	r0, [r1, #-1555]	; 0xfffff9ed
    16c4:	13052011 	movwne	r2, #20497	; 0x5011
    16c8:	05203c2e 	streq	r3, [r0, #-3118]!	; 0xfffff3d2
    16cc:	0b052545 	bleq	14abe8 <__RAM_SIZE+0x4abe8>
    16d0:	12052106 	andne	r2, r5, #-2147483647	; 0x80000001
    16d4:	0b050106 	bleq	141af4 <__RAM_SIZE+0x41af4>
    16d8:	0f05202e 	svceq	0x0005202e
    16dc:	11054906 	tstne	r5, r6, lsl #18
    16e0:	0f050106 	svceq	0x00050106
    16e4:	001a052e 	andseq	r0, sl, lr, lsr #10
    16e8:	20010402 	andcs	r0, r1, r2, lsl #8
    16ec:	02004505 	andeq	r4, r0, #20971520	; 0x1400000
    16f0:	052e0204 	streq	r0, [lr, #-516]!	; 0xfffffdfc
    16f4:	04020039 	streq	r0, [r2], #-57	; 0xffffffc7
    16f8:	0c052002 	stceq	0, cr2, [r5], {2}
    16fc:	06090532 			; <UNDEFINED> instruction: 0x06090532
    1700:	060c052e 	streq	r0, [ip], -lr, lsr #10
    1704:	06090501 	streq	r0, [r9], -r1, lsl #10
    1708:	060f0533 			; <UNDEFINED> instruction: 0x060f0533
    170c:	06090501 	streq	r0, [r9], -r1, lsl #10
    1710:	2e20063d 	mcrcs	6, 1, r0, cr0, cr13, {1}
    1714:	1c060d05 	stcne	13, cr0, [r6], {5}
    1718:	13052006 	movwne	r2, #20486	; 0x5006
    171c:	210d0549 	tstcs	sp, r9, asr #10
    1720:	1f061105 	svcne	0x00061105
    1724:	01061305 	tsteq	r6, r5, lsl #6
    1728:	2e2e1105 	sufcse	f1, f6, f5
    172c:	09052020 	stmdbeq	r5, {r5, sp}
    1730:	01090306 	tsteq	r9, r6, lsl #6
    1734:	060f0513 			; <UNDEFINED> instruction: 0x060f0513
    1738:	06090501 	streq	r0, [r9], -r1, lsl #10
    173c:	0b051330 	bleq	146404 <__RAM_SIZE+0x46404>
    1740:	06510517 			; <UNDEFINED> instruction: 0x06510517
    1744:	4a110501 	bmi	442b50 <__RAM_SIZE+0x342b50>
    1748:	08060905 	stmdaeq	r6, {r0, r2, r8, fp}
    174c:	060f0516 			; <UNDEFINED> instruction: 0x060f0516
    1750:	06090501 	streq	r0, [r9], -r1, lsl #10
    1754:	0620063d 			; <UNDEFINED> instruction: 0x0620063d
    1758:	06200616 			; <UNDEFINED> instruction: 0x06200616
    175c:	060f0559 			; <UNDEFINED> instruction: 0x060f0559
    1760:	06090501 	streq	r0, [r9], -r1, lsl #10
    1764:	2210063d 	andscs	r0, r0, #63963136	; 0x3d00000
    1768:	20062306 	andcs	r2, r6, r6, lsl #6
    176c:	0f054b06 	svceq	0x00054b06
    1770:	09050106 	stmdbeq	r5, {r1, r2, r8}
    1774:	10063d06 	andne	r3, r6, r6, lsl #26
    1778:	7df80322 	ldclvc	3, cr0, [r8, #136]!	; 0x88
    177c:	06030520 	streq	r0, [r3], -r0, lsr #10
    1780:	2e028d03 	cdpcs	13, 0, cr8, cr2, cr3, {0}
    1784:	01040200 	mrseq	r0, R12_usr
    1788:	002e2e06 	eoreq	r2, lr, r6, lsl #28
    178c:	20040402 	andcs	r0, r4, r2, lsl #8
    1790:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    1794:	01054d06 	tsteq	r5, r6, lsl #26
    1798:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    179c:	02001306 	andeq	r1, r0, #402653184	; 0x18000000
    17a0:	024a0404 	subeq	r0, sl, #4, 8	; 0x4000000
    17a4:	01010003 	tsteq	r1, r3
    17a8:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    17ac:	001b4802 	andseq	r4, fp, r2, lsl #16
    17b0:	01950310 	orrseq	r0, r5, r0, lsl r3
    17b4:	13030501 	movwne	r0, #13569	; 0x3501
    17b8:	05011105 	streq	r1, [r1, #-261]	; 0xfffffefb
    17bc:	0305011c 	movweq	r0, #20764	; 0x511c
    17c0:	06060513 			; <UNDEFINED> instruction: 0x06060513
    17c4:	2c010501 	cfstr32cs	mvfx0, [r1], {1}
    17c8:	23060505 	movwcs	r0, #25861	; 0x6505
    17cc:	30060105 	andcc	r0, r6, r5, lsl #2
    17d0:	01000102 	tsteq	r0, r2, lsl #2
    17d4:	00010501 	andeq	r0, r1, r1, lsl #10
    17d8:	1b540205 	blne	1501ff4 <__RAM_SIZE+0x1401ff4>
    17dc:	de031000 	cdple	0, 0, cr1, cr3, cr0, {0}
    17e0:	01060106 	tsteq	r6, r6, lsl #2
    17e4:	67060305 	strvs	r0, [r6, -r5, lsl #6]
    17e8:	05132113 	ldreq	r2, [r3, #-275]	; 0xfffffeed
    17ec:	05010613 	streq	r0, [r1, #-1555]	; 0xfffff9ed
    17f0:	13750603 	cmnne	r5, #3145728	; 0x300000
    17f4:	13060105 	movwne	r0, #24837	; 0x6105
    17f8:	01000802 	tsteq	r0, r2, lsl #16
    17fc:	00010501 	andeq	r0, r1, r1, lsl #10
    1800:	00000205 	andeq	r0, r0, r5, lsl #4
    1804:	e9030000 	stmdb	r3, {}	; <UNPREDICTABLE>
    1808:	01060106 	tsteq	r6, r6, lsl #2
    180c:	75060305 	strvc	r0, [r6, #-773]	; 0xfffffcfb
    1810:	13052113 	movwne	r2, #20755	; 0x5113
    1814:	054a0106 	strbeq	r0, [sl, #-262]	; 0xfffffefa
    1818:	132f0603 			; <UNDEFINED> instruction: 0x132f0603
    181c:	13060105 	movwne	r0, #24837	; 0x6105
    1820:	01000802 	tsteq	r0, r2, lsl #16
    1824:	00010501 	andeq	r0, r1, r1, lsl #10
    1828:	00000205 	andeq	r0, r0, r5, lsl #4
    182c:	f3030000 	vhadd.u8	d0, d3, d0
    1830:	01060106 	tsteq	r6, r6, lsl #2
    1834:	75060305 	strvc	r0, [r6, #-773]	; 0xfffffcfb
    1838:	13052113 	movwne	r2, #20755	; 0x5113
    183c:	202e0106 	eorcs	r0, lr, r6, lsl #2
    1840:	2f060305 	svccs	0x00060305
    1844:	06010513 			; <UNDEFINED> instruction: 0x06010513
    1848:	00070213 	andeq	r0, r7, r3, lsl r2
    184c:	01050101 	tsteq	r5, r1, lsl #2
    1850:	00020500 	andeq	r0, r2, r0, lsl #10
    1854:	03000000 	movweq	r0, #0
    1858:	060106fd 			; <UNDEFINED> instruction: 0x060106fd
    185c:	06030501 	streq	r0, [r3], -r1, lsl #10
    1860:	0a05133d 	beq	14655c <__RAM_SIZE+0x4655c>
    1864:	204a0106 	subcs	r0, sl, r6, lsl #2
    1868:	022f0105 	eoreq	r0, pc, #1073741825	; 0x40000001
    186c:	01010006 	tsteq	r1, r6
    1870:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    1874:	00000002 	andeq	r0, r0, r2
    1878:	07840300 	streq	r0, [r4, r0, lsl #6]
    187c:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    1880:	052f0603 	streq	r0, [pc, #-1539]!	; 1285 <__HEAP_SIZE+0x285>
    1884:	2e01060a 	cfmadd32cs	mvax0, mvfx0, mvfx1, mvfx10
    1888:	05202020 	streq	r2, [r0, #-32]!	; 0xffffffe0
    188c:	05022f01 	streq	r2, [r2, #-3841]	; 0xfffff0ff
    1890:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    1894:	02050001 	andeq	r0, r5, #1
    1898:	00000000 	andeq	r0, r0, r0
    189c:	01078a03 	tsteq	r7, r3, lsl #20
    18a0:	03050106 	movweq	r0, #20742	; 0x5106
    18a4:	21136706 	tstcs	r3, r6, lsl #14
    18a8:	01061b05 	tsteq	r6, r5, lsl #22
    18ac:	2f060305 	svccs	0x00060305
    18b0:	01061305 	tsteq	r6, r5, lsl #6
    18b4:	06030558 			; <UNDEFINED> instruction: 0x06030558
    18b8:	0105132f 	tsteq	r5, pc, lsr #6
    18bc:	08021306 	stmdaeq	r2, {r1, r2, r8, r9, ip}
    18c0:	38010100 	stmdacc	r1, {r8}
    18c4:	03000003 	movweq	r0, #3
    18c8:	0001cc00 	andeq	ip, r1, r0, lsl #24
    18cc:	fb010200 	blx	420d6 <__HEAP_SIZE+0x410d6>
    18d0:	01000d0e 	tsteq	r0, lr, lsl #26
    18d4:	00010101 	andeq	r0, r1, r1, lsl #2
    18d8:	00010000 	andeq	r0, r1, r0
    18dc:	2e2e0100 	sufcse	f0, f6, f0
    18e0:	726f432f 	rsbvc	r4, pc, #-1140850688	; 0xbc000000
    18e4:	72532f65 	subsvc	r2, r3, #404	; 0x194
    18e8:	3a630063 	bcc	18c1a7c <__RAM_SIZE+0x17c1a7c>
    18ec:	6573755c 	ldrbvs	r7, [r3, #-1372]!	; 0xfffffaa4
    18f0:	785c7372 	ldmdavc	ip, {r1, r4, r5, r6, r8, r9, ip, sp, lr}^
    18f4:	6e6f6469 	cdpvs	4, 6, cr6, cr15, cr9, {3}
    18f8:	6f72705c 	svcvs	0x0072705c
    18fc:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
    1900:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    1904:	6363675f 	cmnvs	r3, #24903680	; 0x17c0000
    1908:	6363675c 	cmnvs	r3, #92, 14	; 0x1700000
    190c:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
    1910:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    1914:	61652d65 	cmnvs	r5, r5, ror #26
    1918:	312d6962 			; <UNDEFINED> instruction: 0x312d6962
    191c:	2d332e30 	ldccs	14, cr2, [r3, #-192]!	; 0xffffff40
    1920:	31323032 	teqcc	r2, r2, lsr r0
    1924:	5c30312e 	ldfpls	f3, [r0], #-184	; 0xffffff48
    1928:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    192c:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    1930:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    1934:	6e695c69 	cdpvs	12, 6, cr5, cr9, cr9, {3}
    1938:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    193c:	616d5c65 	cmnvs	sp, r5, ror #24
    1940:	6e696863 	cdpvs	8, 6, cr6, cr9, cr3, {3}
    1944:	3a630065 	bcc	18c1ae0 <__RAM_SIZE+0x17c1ae0>
    1948:	6573755c 	ldrbvs	r7, [r3, #-1372]!	; 0xfffffaa4
    194c:	785c7372 	ldmdavc	ip, {r1, r4, r5, r6, r8, r9, ip, sp, lr}^
    1950:	6e6f6469 	cdpvs	4, 6, cr6, cr15, cr9, {3}
    1954:	6f72705c 	svcvs	0x0072705c
    1958:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
    195c:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    1960:	6363675f 	cmnvs	r3, #24903680	; 0x17c0000
    1964:	6363675c 	cmnvs	r3, #92, 14	; 0x1700000
    1968:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
    196c:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    1970:	61652d65 	cmnvs	r5, r5, ror #26
    1974:	312d6962 			; <UNDEFINED> instruction: 0x312d6962
    1978:	2d332e30 	ldccs	14, cr2, [r3, #-192]!	; 0xffffff40
    197c:	31323032 	teqcc	r2, r2, lsr r0
    1980:	5c30312e 	ldfpls	f3, [r0], #-184	; 0xffffff48
    1984:	5c62696c 			; <UNDEFINED> instruction: 0x5c62696c
    1988:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
    198c:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    1990:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    1994:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    1998:	30315c69 	eorscc	r5, r1, r9, ror #24
    199c:	312e332e 			; <UNDEFINED> instruction: 0x312e332e
    19a0:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
    19a4:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    19a8:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
    19ac:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
    19b0:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
    19b4:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
    19b8:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
    19bc:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
    19c0:	5f6d7261 	svcpl	0x006d7261
    19c4:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
    19c8:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
    19cc:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    19d0:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    19d4:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    19d8:	30312d69 	eorscc	r2, r1, r9, ror #26
    19dc:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
    19e0:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
    19e4:	615c3031 	cmpvs	ip, r1, lsr r0
    19e8:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    19ec:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    19f0:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    19f4:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
    19f8:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    19fc:	7379735c 	cmnvc	r9, #92, 6	; 0x70000001
    1a00:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
    1a04:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
    1a08:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
    1a0c:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
    1a10:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
    1a14:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
    1a18:	5f6d7261 	svcpl	0x006d7261
    1a1c:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
    1a20:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
    1a24:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    1a28:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    1a2c:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    1a30:	30312d69 	eorscc	r2, r1, r9, ror #26
    1a34:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
    1a38:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
    1a3c:	615c3031 	cmpvs	ip, r1, lsr r0
    1a40:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    1a44:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    1a48:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    1a4c:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
    1a50:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    1a54:	61750000 	cmnvs	r5, r0
    1a58:	632e7472 			; <UNDEFINED> instruction: 0x632e7472
    1a5c:	00000100 	andeq	r0, r0, r0, lsl #2
    1a60:	6665645f 			; <UNDEFINED> instruction: 0x6665645f
    1a64:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
    1a68:	7079745f 	rsbsvc	r7, r9, pc, asr r4
    1a6c:	682e7365 	stmdavs	lr!, {r0, r2, r5, r6, r8, r9, ip, sp, lr}
    1a70:	00000200 	andeq	r0, r0, r0, lsl #4
    1a74:	64647473 	strbtvs	r7, [r4], #-1139	; 0xfffffb8d
    1a78:	682e6665 	stmdavs	lr!, {r0, r2, r5, r6, r9, sl, sp, lr}
    1a7c:	00000300 	andeq	r0, r0, r0, lsl #6
    1a80:	6474735f 	ldrbtvs	r7, [r4], #-863	; 0xfffffca1
    1a84:	2e746e69 	cdpcs	14, 7, cr6, cr4, cr9, {3}
    1a88:	00040068 	andeq	r0, r4, r8, rrx
    1a8c:	64747300 	ldrbtvs	r7, [r4], #-768	; 0xfffffd00
    1a90:	682e6f69 	stmdavs	lr!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}
    1a94:	00000500 	andeq	r0, r0, r0, lsl #10
    1a98:	00160500 	andseq	r0, r6, r0, lsl #10
    1a9c:	1b800205 	blne	fe0022b8 <__StackTop+0xc5f022b8>
    1aa0:	1c031000 	stcne	0, cr1, [r3], {-0}
    1aa4:	00240501 	eoreq	r0, r4, r1, lsl #10
    1aa8:	13010402 	movwne	r0, #5122	; 0x1402
    1aac:	02000b05 	andeq	r0, r0, #5120	; 0x1400
    1ab0:	05010104 	streq	r0, [r1, #-260]	; 0xfffffefc
    1ab4:	0402000c 	streq	r0, [r2], #-12
    1ab8:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    1abc:	0402000b 	streq	r0, [r2], #-11
    1ac0:	05052e01 	streq	r2, [r5, #-3585]	; 0xfffff1ff
    1ac4:	16053d06 	strne	r3, [r5], -r6, lsl #26
    1ac8:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    1acc:	01052f06 	tsteq	r5, r6, lsl #30
    1ad0:	03021306 	movweq	r1, #8966	; 0x2306
    1ad4:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    1ad8:	02050014 	andeq	r0, r5, #20
    1adc:	00000000 	andeq	r0, r0, r0
    1ae0:	05012203 	streq	r2, [r1, #-515]	; 0xfffffdfd
    1ae4:	0402002b 	streq	r0, [r2], #-43	; 0xffffffd5
    1ae8:	0b051301 	bleq	1466f4 <__RAM_SIZE+0x466f4>
    1aec:	01040200 	mrseq	r0, R12_usr
    1af0:	000d0501 	andeq	r0, sp, r1, lsl #10
    1af4:	06010402 	streq	r0, [r1], -r2, lsl #8
    1af8:	000b0501 	andeq	r0, fp, r1, lsl #10
    1afc:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    1b00:	3d060505 	cfstr32cc	mvfx0, [r6, #-20]	; 0xffffffec
    1b04:	01060c05 	tsteq	r6, r5, lsl #24
    1b08:	022f0105 	eoreq	r0, pc, #1073741825	; 0x40000001
    1b0c:	01010003 	tsteq	r1, r3
    1b10:	05001e05 	streq	r1, [r0, #-3589]	; 0xfffff1fb
    1b14:	001b9402 	andseq	r9, fp, r2, lsl #8
    1b18:	01270310 			; <UNDEFINED> instruction: 0x01270310
    1b1c:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    1b20:	05132f06 	ldreq	r2, [r3, #-3846]	; 0xfffff0fa
    1b24:	05110609 	ldreq	r0, [r1, #-1545]	; 0xfffff9f7
    1b28:	0905210b 	stmdbeq	r5, {r0, r1, r3, r8, sp}
    1b2c:	052f2106 	streq	r2, [pc, #-262]!	; 1a2e <__HEAP_SIZE+0xa2e>
    1b30:	0501060e 	streq	r0, [r1, #-1550]	; 0xfffff9f2
    1b34:	051e060b 	ldreq	r0, [lr, #-1547]	; 0xfffff9f5
    1b38:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
    1b3c:	0505200b 	streq	r2, [r5, #-11]
    1b40:	053d3206 	ldreq	r3, [sp, #-518]!	; 0xfffffdfa
    1b44:	2e130601 	cfmsub32cs	mvax0, mvfx0, mvfx3, mvfx1
    1b48:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    1b4c:	02050016 	andeq	r0, r5, #22
    1b50:	10001bb4 			; <UNDEFINED> instruction: 0x10001bb4
    1b54:	05013103 	streq	r3, [r1, #-259]	; 0xfffffefd
    1b58:	16051305 	strne	r1, [r5], -r5, lsl #6
    1b5c:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    1b60:	16053d06 	strne	r3, [r5], -r6, lsl #26
    1b64:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    1b68:	16052f06 	strne	r2, [r5], -r6, lsl #30
    1b6c:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    1b70:	16052f06 	strne	r2, [r5], -r6, lsl #30
    1b74:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    1b78:	16053d06 	strne	r3, [r5], -r6, lsl #26
    1b7c:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    1b80:	16052f06 	strne	r2, [r5], -r6, lsl #30
    1b84:	01050106 	tsteq	r5, r6, lsl #2
    1b88:	0004022f 	andeq	r0, r4, pc, lsr #4
    1b8c:	24050101 	strcs	r0, [r5], #-257	; 0xfffffeff
    1b90:	00020500 	andeq	r0, r2, r0, lsl #10
    1b94:	03000000 	movweq	r0, #0
    1b98:	0106013a 	tsteq	r6, sl, lsr r1
    1b9c:	21060505 	tstcs	r6, r5, lsl #10
    1ba0:	2f060105 	svccs	0x00060105
    1ba4:	01000102 	tsteq	r0, r2, lsl #2
    1ba8:	00300501 	eorseq	r0, r0, r1, lsl #10
    1bac:	00000205 	andeq	r0, r0, r5, lsl #4
    1bb0:	3e030000 	cdpcc	0, 0, cr0, cr3, cr0, {0}
    1bb4:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    1bb8:	133d0605 	teqne	sp, #5242880	; 0x500000
    1bbc:	01060c05 	tsteq	r6, r5, lsl #24
    1bc0:	34060905 	strcc	r0, [r6], #-2309	; 0xfffff6fb
    1bc4:	01061405 	tsteq	r6, r5, lsl #8
    1bc8:	21060905 	tstcs	r6, r5, lsl #18
    1bcc:	01060c05 	tsteq	r6, r5, lsl #24
    1bd0:	03060b05 	movweq	r0, #27397	; 0x6b05
    1bd4:	0505207a 	streq	r2, [r5, #-122]	; 0xffffff86
    1bd8:	13090501 	movwne	r0, #38145	; 0x9501
    1bdc:	01060e05 	tsteq	r6, r5, lsl #28
    1be0:	052e0c05 	streq	r0, [lr, #-3077]!	; 0xfffff3fb
    1be4:	05210609 	streq	r0, [r1, #-1545]!	; 0xfffff9f7
    1be8:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
    1bec:	04020017 	streq	r0, [r2], #-23	; 0xffffffe9
    1bf0:	05052e01 	streq	r2, [r5, #-3585]	; 0xfffff1ff
    1bf4:	01053406 	tsteq	r5, r6, lsl #8
    1bf8:	20201306 	eorcs	r1, r0, r6, lsl #6
    1bfc:	a4010100 	strge	r0, [r1], #-256	; 0xffffff00
    1c00:	03000005 	movweq	r0, #5
    1c04:	00025b00 	andeq	r5, r2, r0, lsl #22
    1c08:	fb010200 	blx	42412 <__HEAP_SIZE+0x41412>
    1c0c:	01000d0e 	tsteq	r0, lr, lsl #26
    1c10:	00010101 	andeq	r0, r1, r1, lsl #2
    1c14:	00010000 	andeq	r0, r1, r0
    1c18:	2e2e0100 	sufcse	f0, f6, f0
    1c1c:	2f2e2e2f 	svccs	0x002e2e2f
    1c20:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 1b70 <__HEAP_SIZE+0xb70>
    1c24:	74756269 	ldrbtvc	r6, [r5], #-617	; 0xfffffd97
    1c28:	2f736c69 	svccs	0x00736c69
    1c2c:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
    1c30:	75642d74 	strbvc	r2, [r4, #-3444]!	; 0xfffff28c
    1c34:	732f706d 			; <UNDEFINED> instruction: 0x732f706d
    1c38:	2e006372 	mcrcs	3, 0, r6, cr0, cr2, {3}
    1c3c:	72442f2e 	subvc	r2, r4, #46, 30	; 0xb8
    1c40:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    1c44:	4d432f73 	stclmi	15, cr2, [r3, #-460]	; 0xfffffe34
    1c48:	5f534953 	svcpl	0x00534953
    1c4c:	4d432f35 	stclmi	15, cr2, [r3, #-212]	; 0xffffff2c
    1c50:	2f534953 	svccs	0x00534953
    1c54:	65726f43 	ldrbvs	r6, [r2, #-3907]!	; 0xfffff0bd
    1c58:	636e492f 	cmnvs	lr, #770048	; 0xbc000
    1c5c:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    1c60:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
    1c64:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
    1c68:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
    1c6c:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
    1c70:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
    1c74:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
    1c78:	5f6d7261 	svcpl	0x006d7261
    1c7c:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
    1c80:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
    1c84:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    1c88:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    1c8c:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    1c90:	30312d69 	eorscc	r2, r1, r9, ror #26
    1c94:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
    1c98:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
    1c9c:	615c3031 	cmpvs	ip, r1, lsr r0
    1ca0:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    1ca4:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    1ca8:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    1cac:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
    1cb0:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    1cb4:	63616d5c 	cmnvs	r1, #92, 26	; 0x1700
    1cb8:	656e6968 	strbvs	r6, [lr, #-2408]!	; 0xfffff698
    1cbc:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
    1cc0:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
    1cc4:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
    1cc8:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
    1ccc:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
    1cd0:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
    1cd4:	5f6d7261 	svcpl	0x006d7261
    1cd8:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
    1cdc:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
    1ce0:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    1ce4:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    1ce8:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    1cec:	30312d69 	eorscc	r2, r1, r9, ror #26
    1cf0:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
    1cf4:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
    1cf8:	6c5c3031 	mrrcvs	0, 3, r3, ip, cr1
    1cfc:	675c6269 	ldrbvs	r6, [ip, -r9, ror #4]
    1d00:	615c6363 	cmpvs	ip, r3, ror #6
    1d04:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    1d08:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    1d0c:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    1d10:	2e30315c 	mrccs	1, 1, r3, cr0, cr12, {2}
    1d14:	5c312e33 	ldcpl	14, cr2, [r1], #-204	; 0xffffff34
    1d18:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    1d1c:	00656475 	rsbeq	r6, r5, r5, ror r4
    1d20:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
    1d24:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    1d28:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
    1d2c:	705c6e6f 	subsvc	r6, ip, pc, ror #28
    1d30:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
    1d34:	615c6d61 	cmpvs	ip, r1, ror #26
    1d38:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
    1d3c:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
    1d40:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
    1d44:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    1d48:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    1d4c:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    1d50:	2e30312d 	rsfcssp	f3, f0, #5.0
    1d54:	30322d33 	eorscc	r2, r2, r3, lsr sp
    1d58:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
    1d5c:	72615c30 	rsbvc	r5, r1, #48, 24	; 0x3000
    1d60:	6f6e2d6d 	svcvs	0x006e2d6d
    1d64:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    1d68:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
    1d6c:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    1d70:	5c656475 	cfstrdpl	mvd6, [r5], #-468	; 0xfffffe2c
    1d74:	00737973 	rsbseq	r7, r3, r3, ror r9
    1d78:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    1d7c:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    1d80:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    1d84:	6c697475 	cfstrdvs	mvd7, [r9], #-468	; 0xfffffe2c
    1d88:	61662f73 	smcvs	25331	; 0x62f3
    1d8c:	2d746c75 	ldclcs	12, cr6, [r4, #-468]!	; 0xfffffe2c
    1d90:	706d7564 	rsbvc	r7, sp, r4, ror #10
    1d94:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    1d98:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
    1d9c:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
    1da0:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
    1da4:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
    1da8:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
    1dac:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
    1db0:	5f6d7261 	svcpl	0x006d7261
    1db4:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
    1db8:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
    1dbc:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    1dc0:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    1dc4:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    1dc8:	30312d69 	eorscc	r2, r1, r9, ror #26
    1dcc:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
    1dd0:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
    1dd4:	615c3031 	cmpvs	ip, r1, lsr r0
    1dd8:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    1ddc:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    1de0:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    1de4:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
    1de8:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    1dec:	61660000 	cmnvs	r6, r0
    1df0:	2d746c75 	ldclcs	12, cr6, [r4, #-468]!	; 0xfffffe2c
    1df4:	706d7564 	rsbvc	r7, sp, r4, ror #10
    1df8:	0100632e 	tsteq	r0, lr, lsr #6
    1dfc:	6d630000 	stclvs	0, cr0, [r3, #-0]
    1e00:	5f736973 	svcpl	0x00736973
    1e04:	2e636367 	cdpcs	3, 6, cr6, cr3, cr7, {3}
    1e08:	00020068 	andeq	r0, r2, r8, rrx
    1e0c:	65645f00 	strbvs	r5, [r4, #-3840]!	; 0xfffff100
    1e10:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
    1e14:	79745f74 	ldmdbvc	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    1e18:	2e736570 	mrccs	5, 3, r6, cr3, cr0, {3}
    1e1c:	00030068 	andeq	r0, r3, r8, rrx
    1e20:	64747300 	ldrbtvs	r7, [r4], #-768	; 0xfffffd00
    1e24:	2e666564 	cdpcs	5, 6, cr6, cr6, cr4, {3}
    1e28:	00040068 	andeq	r0, r4, r8, rrx
    1e2c:	74735f00 	ldrbtvc	r5, [r3], #-3840	; 0xfffff100
    1e30:	746e6964 	strbtvc	r6, [lr], #-2404	; 0xfffff69c
    1e34:	0500682e 	streq	r6, [r0, #-2094]	; 0xfffff7d2
    1e38:	61660000 	cmnvs	r6, r0
    1e3c:	2d746c75 	ldclcs	12, cr6, [r4, #-468]!	; 0xfffffe2c
    1e40:	706d7564 	rsbvc	r7, sp, r4, ror #10
    1e44:	0600682e 	streq	r6, [r0], -lr, lsr #16
    1e48:	74730000 	ldrbtvc	r0, [r3], #-0
    1e4c:	2e6f6964 	vnmulcs.f16	s13, s30, s9	; <UNPREDICTABLE>
    1e50:	00070068 	andeq	r0, r7, r8, rrx
    1e54:	75623c00 	strbvc	r3, [r2, #-3072]!	; 0xfffff400
    1e58:	2d746c69 	ldclcs	12, cr6, [r4, #-420]!	; 0xfffffe5c
    1e5c:	003e6e69 	eorseq	r6, lr, r9, ror #28
    1e60:	00000000 	andeq	r0, r0, r0
    1e64:	05003805 	streq	r3, [r0, #-2053]	; 0xfffff7fb
    1e68:	001bd802 	andseq	sp, fp, r2, lsl #16
    1e6c:	00fe0310 	rscseq	r0, lr, r0, lsl r3
    1e70:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    1e74:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
    1e78:	0501060e 	streq	r0, [r1, #-1550]	; 0xfffff9f2
    1e7c:	132f0605 			; <UNDEFINED> instruction: 0x132f0605
    1e80:	05010a05 	streq	r0, [r1, #-2565]	; 0xfffff5fb
    1e84:	05010605 	streq	r0, [r1, #-1541]	; 0xfffff9fb
    1e88:	04020009 	streq	r0, [r2], #-9
    1e8c:	05210603 	streq	r0, [r1, #-1539]!	; 0xfffff9fd
    1e90:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    1e94:	05010603 	streq	r0, [r1, #-1539]	; 0xfffff9fd
    1e98:	04020012 	streq	r0, [r2], #-18	; 0xffffffee
    1e9c:	3d052e03 	stccc	14, cr2, [r5, #-12]
    1ea0:	03040200 	movweq	r0, #16896	; 0x4200
    1ea4:	3e055706 	cdpcc	7, 0, cr5, cr5, cr6, {0}
    1ea8:	03040200 	movweq	r0, #16896	; 0x4200
    1eac:	15050106 	strne	r0, [r5, #-262]	; 0xfffffefa
    1eb0:	01040200 	mrseq	r0, R12_usr
    1eb4:	05052006 	streq	r2, [r5, #-6]
    1eb8:	01040200 	mrseq	r0, R12_usr
    1ebc:	31060106 	tstcc	r6, r6, lsl #2
    1ec0:	01062205 	tsteq	r6, r5, lsl #4
    1ec4:	0605052f 	streq	r0, [r5], -pc, lsr #10
    1ec8:	0601052f 	streq	r0, [r1], -pc, lsr #10
    1ecc:	02022e13 	andeq	r2, r2, #304	; 0x130
    1ed0:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    1ed4:	02050033 	andeq	r0, r5, #51	; 0x33
    1ed8:	10001c04 	andne	r1, r0, r4, lsl #24
    1edc:	01018903 	tsteq	r1, r3, lsl #18
    1ee0:	05160505 	ldreq	r0, [r6, #-1285]	; 0xfffffafb
    1ee4:	0501060e 	streq	r0, [r1, #-1550]	; 0xfffff9f2
    1ee8:	052f0605 	streq	r0, [pc, #-1541]!	; 18eb <__HEAP_SIZE+0x8eb>
    1eec:	05010632 	streq	r0, [r1, #-1586]	; 0xfffff9ce
    1ef0:	0505200e 	streq	r2, [r5, #-14]
    1ef4:	08052f06 	stmdaeq	r5, {r1, r2, r8, r9, sl, fp, sp}
    1ef8:	26050106 	strcs	r0, [r5], -r6, lsl #2
    1efc:	01040200 	mrseq	r0, R12_usr
    1f00:	0605053c 			; <UNDEFINED> instruction: 0x0605053c
    1f04:	0608053f 			; <UNDEFINED> instruction: 0x0608053f
    1f08:	00260501 	eoreq	r0, r6, r1, lsl #10
    1f0c:	3c010402 	cfstrscc	mvf0, [r1], {2}
    1f10:	203f0c05 	eorscs	r0, pc, r5, lsl #24
    1f14:	201b1005 	andscs	r1, fp, r5
    1f18:	20232020 	eorcs	r2, r3, r0, lsr #32
    1f1c:	23010520 	movwcs	r0, #5408	; 0x1520
    1f20:	01000102 	tsteq	r0, r2, lsl #2
    1f24:	00360501 	eorseq	r0, r6, r1, lsl #10
    1f28:	1c3c0205 	lfmne	f0, 4, [ip], #-20	; 0xffffffec
    1f2c:	98031000 	stmdals	r3, {ip}
    1f30:	01060101 	tsteq	r6, r1, lsl #2
    1f34:	2f060505 	svccs	0x00060505
    1f38:	30062e06 	andcc	r2, r6, r6, lsl #28
    1f3c:	06010513 			; <UNDEFINED> instruction: 0x06010513
    1f40:	0202203e 	andeq	r2, r2, #62	; 0x3e
    1f44:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    1f48:	0205001c 	andeq	r0, r5, #28
    1f4c:	10001c54 	andne	r1, r0, r4, asr ip
    1f50:	0100f303 	tsteq	r0, r3, lsl #6	; <UNPREDICTABLE>
    1f54:	05210505 	streq	r0, [r1, #-1285]!	; 0xfffffafb
    1f58:	0501061a 	streq	r0, [r1, #-1562]	; 0xfffff9e6
    1f5c:	05052018 	streq	r2, [r5, #-24]	; 0xffffffe8
    1f60:	1a052f06 	bne	14db80 <__RAM_SIZE+0x4db80>
    1f64:	18050106 	stmdane	r5, {r1, r2, r8}
    1f68:	06050520 	streq	r0, [r5], -r0, lsr #10
    1f6c:	05684c2f 	strbeq	r4, [r8, #-3119]!	; 0xfffff3d1
    1f70:	024c0601 	subeq	r0, ip, #1048576	; 0x100000
    1f74:	01010013 	tsteq	r1, r3, lsl r0
    1f78:	05007305 	streq	r7, [r0, #-773]	; 0xfffffcfb
    1f7c:	001ca402 	andseq	sl, ip, r2, lsl #8
    1f80:	01db0310 	bicseq	r0, fp, r0, lsl r3
    1f84:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    1f88:	132f0605 			; <UNDEFINED> instruction: 0x132f0605
    1f8c:	06080513 			; <UNDEFINED> instruction: 0x06080513
    1f90:	001a0501 	andseq	r0, sl, r1, lsl #10
    1f94:	58010402 	stmdapl	r1, {r1, sl}
    1f98:	23060505 	movwcs	r0, #25861	; 0x6505
    1f9c:	01040200 	mrseq	r0, R12_usr
    1fa0:	09052006 	stmdbeq	r5, {r1, r2, sp}
    1fa4:	00050529 	andeq	r0, r5, r9, lsr #10
    1fa8:	06020402 	streq	r0, [r2], -r2, lsl #8
    1fac:	04020036 	streq	r0, [r2], #-54	; 0xffffffca
    1fb0:	02002001 	andeq	r2, r0, #1
    1fb4:	20060304 	andcs	r0, r6, r4, lsl #6
    1fb8:	30060905 	andcc	r0, r6, r5, lsl #18
    1fbc:	01060c05 	tsteq	r6, r5, lsl #24
    1fc0:	22060905 	andcs	r0, r6, #81920	; 0x14000
    1fc4:	01061305 	tsteq	r6, r5, lsl #6
    1fc8:	05200c05 	streq	r0, [r0, #-3077]!	; 0xfffff3fb
    1fcc:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    1fd0:	26052e01 	strcs	r2, [r5], -r1, lsl #28
    1fd4:	01040200 	mrseq	r0, R12_usr
    1fd8:	06090520 	streq	r0, [r9], -r0, lsr #10
    1fdc:	060c0532 			; <UNDEFINED> instruction: 0x060c0532
    1fe0:	06090501 	streq	r0, [r9], -r1, lsl #10
    1fe4:	0c051440 	cfstrseq	mvf1, [r5], {64}	; 0x40
    1fe8:	09050106 	stmdbeq	r5, {r1, r2, r8}
    1fec:	0c053006 	stceq	0, cr3, [r5], {6}
    1ff0:	09050106 	stmdbeq	r5, {r1, r2, r8}
    1ff4:	0e052406 	cdpeq	4, 0, cr2, cr5, cr6, {0}
    1ff8:	09050106 	stmdbeq	r5, {r1, r2, r8}
    1ffc:	0e053e06 	cdpeq	14, 0, cr3, cr5, cr6, {0}
    2000:	0c050106 	stfeqs	f0, [r5], {6}
    2004:	0609052e 	streq	r0, [r9], -lr, lsr #10
    2008:	06170532 			; <UNDEFINED> instruction: 0x06170532
    200c:	06090501 	streq	r0, [r9], -r1, lsl #10
    2010:	060f052f 	streq	r0, [pc], -pc, lsr #10
    2014:	06090501 	streq	r0, [r9], -r1, lsl #10
    2018:	060c0521 	streq	r0, [ip], -r1, lsr #10
    201c:	33010501 	movwcc	r0, #5377	; 0x1501
    2020:	5a031005 	bpl	c603c <__HEAP_SIZE+0xc503c>
    2024:	583f3c3c 	ldmdapl	pc!, {r2, r3, r4, r5, sl, fp, ip, sp}	; <UNPREDICTABLE>
    2028:	01000602 	tsteq	r0, r2, lsl #12
    202c:	00430501 	subeq	r0, r3, r1, lsl #10
    2030:	1d200205 	sfmne	f0, 4, [r0, #-20]!	; 0xffffffec
    2034:	a0031000 	andge	r1, r3, r0
    2038:	01060101 	tsteq	r6, r1, lsl #2
    203c:	3d060505 	cfstr32cc	mvfx0, [r6, #-20]	; 0xffffffec
    2040:	14131313 	ldrne	r1, [r3], #-787	; 0xfffffced
    2044:	01061805 	tsteq	r6, r5, lsl #16
    2048:	05201605 	streq	r1, [r0, #-1541]!	; 0xfffff9fb
    204c:	052f0605 	streq	r0, [pc, #-1541]!	; 1a4f <__HEAP_SIZE+0xa4f>
    2050:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    2054:	05052016 	streq	r2, [r5, #-22]	; 0xffffffea
    2058:	18052106 	stmdane	r5, {r1, r2, r8, sp}
    205c:	16050106 	strne	r0, [r5], -r6, lsl #2
    2060:	06050520 	streq	r0, [r5], -r0, lsr #10
    2064:	06180521 	ldreq	r0, [r8], -r1, lsr #10
    2068:	20160501 	andscs	r0, r6, r1, lsl #10
    206c:	21060505 	tstcs	r6, r5, lsl #10
    2070:	01061805 	tsteq	r6, r5, lsl #16
    2074:	05201605 	streq	r1, [r0, #-1541]!	; 0xfffff9fb
    2078:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
    207c:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    2080:	05052016 	streq	r2, [r5, #-22]	; 0xffffffea
    2084:	18052106 	stmdane	r5, {r1, r2, r8, sp}
    2088:	16050106 	strne	r0, [r5], -r6, lsl #2
    208c:	06050520 	streq	r0, [r5], -r0, lsr #10
    2090:	06180521 	ldreq	r0, [r8], -r1, lsr #10
    2094:	20160501 	andscs	r0, r6, r1, lsl #10
    2098:	21060505 	tstcs	r6, r5, lsl #10
    209c:	01061805 	tsteq	r6, r5, lsl #16
    20a0:	05201605 	streq	r1, [r0, #-1541]!	; 0xfffff9fb
    20a4:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
    20a8:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    20ac:	05052016 	streq	r2, [r5, #-22]	; 0xffffffea
    20b0:	18052106 	stmdane	r5, {r1, r2, r8, sp}
    20b4:	16050106 	strne	r0, [r5], -r6, lsl #2
    20b8:	06050520 	streq	r0, [r5], -r0, lsr #10
    20bc:	06180521 	ldreq	r0, [r8], -r1, lsr #10
    20c0:	20160501 	andscs	r0, r6, r1, lsl #10
    20c4:	21060505 	tstcs	r6, r5, lsl #10
    20c8:	01061805 	tsteq	r6, r5, lsl #16
    20cc:	05201605 	streq	r1, [r0, #-1541]!	; 0xfffff9fb
    20d0:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
    20d4:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    20d8:	05052016 	streq	r2, [r5, #-22]	; 0xffffffea
    20dc:	18052106 	stmdane	r5, {r1, r2, r8, sp}
    20e0:	16050106 	strne	r0, [r5], -r6, lsl #2
    20e4:	06050520 	streq	r0, [r5], -r0, lsr #10
    20e8:	06180521 	ldreq	r0, [r8], -r1, lsr #10
    20ec:	20160501 	andscs	r0, r6, r1, lsl #10
    20f0:	22060505 	andcs	r0, r6, #20971520	; 0x1400000
    20f4:	2f062e06 	svccs	0x00062e06
    20f8:	4b4b3d3d 	blmi	12d15f4 <__RAM_SIZE+0x11d15f4>
    20fc:	4b4b4b4b 	blmi	12d4e30 <__RAM_SIZE+0x11d4e30>
    2100:	4b4b4b4b 	blmi	12d4e34 <__RAM_SIZE+0x11d4e34>
    2104:	4b4b4b4b 	blmi	12d4e38 <__RAM_SIZE+0x11d4e38>
    2108:	3e3d4b4b 	vsubcc.f64	d4, d13, d11
    210c:	060d0513 			; <UNDEFINED> instruction: 0x060d0513
    2110:	06050501 	streq	r0, [r5], -r1, lsl #10
    2114:	06200686 	strteq	r0, [r0], -r6, lsl #13
    2118:	10054b2f 	andne	r4, r5, pc, lsr #22
    211c:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    2120:	00090520 	andeq	r0, r9, r0, lsr #10
    2124:	06030402 	streq	r0, [r3], -r2, lsl #8
    2128:	00240521 	eoreq	r0, r4, r1, lsr #10
    212c:	65030402 	strvs	r0, [r3, #-1026]	; 0xfffffbfe
    2130:	02002905 	andeq	r2, r0, #81920	; 0x14000
    2134:	01060304 	tsteq	r6, r4, lsl #6
    2138:	02001505 	andeq	r1, r0, #20971520	; 0x1400000
    213c:	20060104 	andcs	r0, r6, r4, lsl #2
    2140:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    2144:	01060104 	tsteq	r6, r4, lsl #2
    2148:	02003106 	andeq	r3, r0, #-2147483647	; 0x80000001
    214c:	053d0104 	ldreq	r0, [sp, #-260]!	; 0xfffffefc
    2150:	0402000e 	streq	r0, [r2], #-14
    2154:	0b050101 	bleq	142560 <__RAM_SIZE+0x42560>
    2158:	01040200 	mrseq	r0, R12_usr
    215c:	00310201 	eorseq	r0, r1, r1, lsl #4
    2160:	2e050101 	adfcss	f0, f5, f1
    2164:	a4020500 	strge	r0, [r2], #-1280	; 0xfffffb00
    2168:	0310001e 	tsteq	r0, #30
    216c:	05010287 	streq	r0, [r1, #-647]	; 0xfffffd79
    2170:	02041305 	andeq	r1, r4, #335544320	; 0x14000000
    2174:	da031f05 	ble	c9d90 <__HEAP_SIZE+0xc8d90>
    2178:	03050106 	movweq	r0, #20742	; 0x5106
    217c:	062f1414 			; <UNDEFINED> instruction: 0x062f1414
    2180:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    2184:	79a20301 	stmibvc	r2!, {r0, r8, r9}
    2188:	00010201 	andeq	r0, r1, r1, lsl #4
    218c:	2e050101 	adfcss	f0, f5, f1
    2190:	ac020500 	cfstr32ge	mvfx0, [r2], {-0}
    2194:	0310001e 	tsteq	r0, #30
    2198:	0501028b 	streq	r0, [r1, #-651]	; 0xfffffd75
    219c:	01051305 	tsteq	r5, r5, lsl #6
    21a0:	04021306 	streq	r1, [r2], #-774	; 0xfffffcfa
    21a4:	33010100 	movwcc	r0, #4352	; 0x1100
    21a8:	03000001 	movweq	r0, #1
    21ac:	0000bb00 	andeq	fp, r0, r0, lsl #22
    21b0:	fb010200 	blx	429ba <__HEAP_SIZE+0x419ba>
    21b4:	01000d0e 	tsteq	r0, lr, lsl #26
    21b8:	00010101 	andeq	r0, r1, r1, lsl #2
    21bc:	00010000 	andeq	r0, r1, r0
    21c0:	2e2e0100 	sufcse	f0, f6, f0
    21c4:	2f2e2e2f 	svccs	0x002e2e2f
    21c8:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 2118 <__HEAP_SIZE+0x1118>
    21cc:	74756269 	ldrbtvc	r6, [r5], #-617	; 0xfffffd97
    21d0:	2f736c69 	svccs	0x00736c69
    21d4:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
    21d8:	75642d74 	strbvc	r2, [r4, #-3444]!	; 0xfffff28c
    21dc:	632f706d 			; <UNDEFINED> instruction: 0x632f706d
    21e0:	632f7570 			; <UNDEFINED> instruction: 0x632f7570
    21e4:	6574726f 	ldrbvs	r7, [r4, #-623]!	; 0xfffffd91
    21e8:	336d2d78 	cmncc	sp, #120, 26	; 0x1e00
    21ec:	3a630033 	bcc	18c22c0 <__RAM_SIZE+0x17c22c0>
    21f0:	6573755c 	ldrbvs	r7, [r3, #-1372]!	; 0xfffffaa4
    21f4:	785c7372 	ldmdavc	ip, {r1, r4, r5, r6, r8, r9, ip, sp, lr}^
    21f8:	6e6f6469 	cdpvs	4, 6, cr6, cr15, cr9, {3}
    21fc:	6f72705c 	svcvs	0x0072705c
    2200:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
    2204:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    2208:	6363675f 	cmnvs	r3, #24903680	; 0x17c0000
    220c:	6363675c 	cmnvs	r3, #92, 14	; 0x1700000
    2210:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
    2214:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    2218:	61652d65 	cmnvs	r5, r5, ror #26
    221c:	312d6962 			; <UNDEFINED> instruction: 0x312d6962
    2220:	2d332e30 	ldccs	14, cr2, [r3, #-192]!	; 0xffffff40
    2224:	31323032 	teqcc	r2, r2, lsr r0
    2228:	5c30312e 	ldfpls	f3, [r0], #-184	; 0xffffff48
    222c:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    2230:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    2234:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    2238:	6e695c69 	cdpvs	12, 6, cr5, cr9, cr9, {3}
    223c:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    2240:	66000065 	strvs	r0, [r0], -r5, rrx
    2244:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
    2248:	6c61682d 	stclvs	8, cr6, [r1], #-180	; 0xffffff4c
    224c:	0100632e 	tsteq	r0, lr, lsr #6
    2250:	623c0000 	eorsvs	r0, ip, #0
    2254:	746c6975 	strbtvc	r6, [ip], #-2421	; 0xfffff68b
    2258:	3e6e692d 	vmulcc.f16	s13, s28, s27	; <UNPREDICTABLE>
    225c:	00000000 	andeq	r0, r0, r0
    2260:	69647473 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
    2264:	00682e6f 	rsbeq	r2, r8, pc, ror #28
    2268:	00000002 	andeq	r0, r0, r2
    226c:	05003505 	streq	r3, [r0, #-1285]	; 0xfffffafb
    2270:	001eb402 	andseq	fp, lr, r2, lsl #8
    2274:	010e0310 	tsteq	lr, r0, lsl r3
    2278:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    227c:	20062f06 	andcs	r2, r6, r6, lsl #30
    2280:	053d2f06 	ldreq	r2, [sp, #-3846]!	; 0xfffff0fa
    2284:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
    2288:	053d0609 	ldreq	r0, [sp, #-1545]!	; 0xfffff9f7
    228c:	053d4005 	ldreq	r4, [sp, #-5]!
    2290:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
    2294:	053d0609 	ldreq	r0, [sp, #-1545]!	; 0xfffff9f7
    2298:	053d4005 	ldreq	r4, [sp, #-5]!
    229c:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
    22a0:	053d0609 	ldreq	r0, [sp, #-1545]!	; 0xfffff9f7
    22a4:	053d4005 	ldreq	r4, [sp, #-5]!
    22a8:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
    22ac:	053d0609 	ldreq	r0, [sp, #-1545]!	; 0xfffff9f7
    22b0:	053d4005 	ldreq	r4, [sp, #-5]!
    22b4:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
    22b8:	053d0609 	ldreq	r0, [sp, #-1545]!	; 0xfffff9f7
    22bc:	053d4005 	ldreq	r4, [sp, #-5]!
    22c0:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
    22c4:	053d0609 	ldreq	r0, [sp, #-1545]!	; 0xfffff9f7
    22c8:	01054005 	tsteq	r5, r5
    22cc:	09053d06 	stmdbeq	r5, {r1, r2, r8, sl, fp, ip, sp}
    22d0:	205f0306 	subscs	r0, pc, r6, lsl #6
    22d4:	50505050 	subspl	r5, r0, r0, asr r0
    22d8:	002b0250 	eoreq	r0, fp, r0, asr r2
    22dc:	03990101 	orrseq	r0, r9, #1073741824	; 0x40000000
    22e0:	00030000 	andeq	r0, r3, r0
    22e4:	0000018c 	andeq	r0, r0, ip, lsl #3
    22e8:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
    22ec:	0101000d 	tsteq	r1, sp
    22f0:	00000101 	andeq	r0, r0, r1, lsl #2
    22f4:	00000100 	andeq	r0, r0, r0, lsl #2
    22f8:	2f2e2e01 	svccs	0x002e2e01
    22fc:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    2300:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    2304:	6f747262 	svcvs	0x00747262
    2308:	72462f73 	subvc	r2, r6, #460	; 0x1cc
    230c:	54526565 	ldrbpl	r6, [r2], #-1381	; 0xfffffa9b
    2310:	6300534f 	movwvs	r5, #847	; 0x34f
    2314:	73755c3a 	cmnvc	r5, #14848	; 0x3a00
    2318:	5c737265 	lfmpl	f7, 2, [r3], #-404	; 0xfffffe6c
    231c:	6f646978 	svcvs	0x00646978
    2320:	72705c6e 	rsbsvc	r5, r0, #28160	; 0x6e00
    2324:	6172676f 	cmnvs	r2, pc, ror #14
    2328:	72615c6d 	rsbvc	r5, r1, #27904	; 0x6d00
    232c:	63675f6d 	cmnvs	r7, #436	; 0x1b4
    2330:	63675c63 	cmnvs	r7, #25344	; 0x6300
    2334:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
    2338:	6f6e2d6d 	svcvs	0x006e2d6d
    233c:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    2340:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
    2344:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
    2348:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
    234c:	30312e31 	eorscc	r2, r1, r1, lsr lr
    2350:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    2354:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    2358:	61652d65 	cmnvs	r5, r5, ror #26
    235c:	695c6962 	ldmdbvs	ip, {r1, r5, r6, r8, fp, sp, lr}^
    2360:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    2364:	6d5c6564 	cfldr64vs	mvdx6, [ip, #-400]	; 0xfffffe70
    2368:	69686361 	stmdbvs	r8!, {r0, r5, r6, r8, r9, sp, lr}^
    236c:	6300656e 	movwvs	r6, #1390	; 0x56e
    2370:	73755c3a 	cmnvc	r5, #14848	; 0x3a00
    2374:	5c737265 	lfmpl	f7, 2, [r3], #-404	; 0xfffffe6c
    2378:	6f646978 	svcvs	0x00646978
    237c:	72705c6e 	rsbsvc	r5, r0, #28160	; 0x6e00
    2380:	6172676f 	cmnvs	r2, pc, ror #14
    2384:	72615c6d 	rsbvc	r5, r1, #27904	; 0x6d00
    2388:	63675f6d 	cmnvs	r7, #436	; 0x1b4
    238c:	63675c63 	cmnvs	r7, #25344	; 0x6300
    2390:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
    2394:	6f6e2d6d 	svcvs	0x006e2d6d
    2398:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    239c:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
    23a0:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
    23a4:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
    23a8:	30312e31 	eorscc	r2, r1, r1, lsr lr
    23ac:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    23b0:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    23b4:	61652d65 	cmnvs	r5, r5, ror #26
    23b8:	695c6962 	ldmdbvs	ip, {r1, r5, r6, r8, fp, sp, lr}^
    23bc:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    23c0:	735c6564 	cmpvc	ip, #100, 10	; 0x19000000
    23c4:	2e007379 	mcrcs	3, 0, r7, cr0, cr9, {3}
    23c8:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    23cc:	2f2e2e2f 	svccs	0x002e2e2f
    23d0:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
    23d4:	2f736f74 	svccs	0x00736f74
    23d8:	65657246 	strbvs	r7, [r5, #-582]!	; 0xfffffdba
    23dc:	534f5452 	movtpl	r5, #62546	; 0xf452
    23e0:	726f702f 	rsbvc	r7, pc, #47	; 0x2f
    23e4:	6c626174 	stfvse	f6, [r2], #-464	; 0xfffffe30
    23e8:	43472f65 	movtmi	r2, #32613	; 0x7f65
    23ec:	52412f43 	subpl	r2, r1, #268	; 0x10c
    23f0:	4d435f4d 	stclmi	15, cr5, [r3, #-308]	; 0xfffffecc
    23f4:	4e5f3333 	mrcmi	3, 2, r3, cr15, cr3, {1}
    23f8:	6e2f5a54 			; <UNDEFINED> instruction: 0x6e2f5a54
    23fc:	735f6e6f 	cmpvc	pc, #1776	; 0x6f0
    2400:	72756365 	rsbsvc	r6, r5, #-1811939327	; 0x94000001
    2404:	2e2e0065 	cdpcs	0, 2, cr0, cr14, cr5, {3}
    2408:	2f2e2e2f 	svccs	0x002e2e2f
    240c:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 235c <__HEAP_SIZE+0x135c>
    2410:	74726269 	ldrbtvc	r6, [r2], #-617	; 0xfffffd97
    2414:	462f736f 	strtmi	r7, [pc], -pc, ror #6
    2418:	52656572 	rsbpl	r6, r5, #478150656	; 0x1c800000
    241c:	2f534f54 	svccs	0x00534f54
    2420:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    2424:	00656475 	rsbeq	r6, r5, r5, ror r4
    2428:	73696c00 	cmnvc	r9, #0, 24
    242c:	00632e74 	rsbeq	r2, r3, r4, ror lr
    2430:	5f000001 	svcpl	0x00000001
    2434:	61666564 	cmnvs	r6, r4, ror #10
    2438:	5f746c75 	svcpl	0x00746c75
    243c:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
    2440:	00682e73 	rsbeq	r2, r8, r3, ror lr
    2444:	5f000002 	svcpl	0x00000002
    2448:	69647473 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
    244c:	682e746e 	stmdavs	lr!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
    2450:	00000300 	andeq	r0, r0, r0, lsl #6
    2454:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
    2458:	7263616d 	rsbvc	r6, r3, #1073741851	; 0x4000001b
    245c:	6d6f636f 	stclvs	3, cr6, [pc, #-444]!	; 22a8 <__HEAP_SIZE+0x12a8>
    2460:	2e6e6f6d 	cdpcs	15, 6, cr6, cr14, cr13, {3}
    2464:	00040068 	andeq	r0, r4, r8, rrx
    2468:	73696c00 	cmnvc	r9, #0, 24
    246c:	00682e74 	rsbeq	r2, r8, r4, ror lr
    2470:	00000005 	andeq	r0, r0, r5
    2474:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    2478:	001fb002 	andseq	fp, pc, r2
    247c:	01310310 	teqeq	r1, r0, lsl r3
    2480:	05132905 	ldreq	r2, [r3, #-2309]	; 0xfffff6fb
    2484:	28051705 	stmdacs	r5, {r0, r2, r8, r9, sl, ip}
    2488:	15050106 	strne	r0, [r5, #-262]	; 0xfffffefa
    248c:	064b052e 	strbeq	r0, [fp], -lr, lsr #10
    2490:	16050522 	strne	r0, [r5], -r2, lsr #10
    2494:	01062105 	tsteq	r6, r5, lsl #2
    2498:	40060505 	andmi	r0, r6, r5, lsl #10
    249c:	01061d05 	tsteq	r6, r5, lsl #26
    24a0:	21060505 	tstcs	r6, r5, lsl #10
    24a4:	01062105 	tsteq	r6, r5, lsl #2
    24a8:	25060905 	strcs	r0, [r6, #-2309]	; 0xfffff6fb
    24ac:	01062205 	tsteq	r6, r5, lsl #4
    24b0:	2f060905 	svccs	0x00060905
    24b4:	01062605 	tsteq	r6, r5, lsl #12
    24b8:	21065005 	tstcs	r6, r5
    24bc:	05160505 	ldreq	r0, [r6, #-1285]	; 0xfffffafb
    24c0:	0501061d 	streq	r0, [r1, #-1565]	; 0xfffff9e3
    24c4:	13240633 			; <UNDEFINED> instruction: 0x13240633
    24c8:	05142205 	ldreq	r2, [r4, #-517]	; 0xfffffdfb
    24cc:	02130601 	andseq	r0, r3, #1048576	; 0x100000
    24d0:	01010001 	tsteq	r1, r1
    24d4:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    24d8:	001fca02 	andseq	ip, pc, r2, lsl #20
    24dc:	00d90310 	sbcseq	r0, r9, r0, lsl r3
    24e0:	132d0501 			; <UNDEFINED> instruction: 0x132d0501
    24e4:	05150505 	ldreq	r0, [r5, #-1285]	; 0xfffffafb
    24e8:	05010619 	streq	r0, [r1, #-1561]	; 0xfffff9e7
    24ec:	0532063c 	ldreq	r0, [r2, #-1596]!	; 0xfffff9c4
    24f0:	2605133d 			; <UNDEFINED> instruction: 0x2605133d
    24f4:	06010514 			; <UNDEFINED> instruction: 0x06010514
    24f8:	00010213 	andeq	r0, r1, r3, lsl r2
    24fc:	01050101 	tsteq	r5, r1, lsl #2
    2500:	00020500 	andeq	r0, r2, r0, lsl #10
    2504:	03000000 	movweq	r0, #0
    2508:	050100ea 	streq	r0, [r1, #-234]	; 0xffffff16
    250c:	18051305 	stmdane	r5, {r0, r2, r8, r9, ip}
    2510:	37050106 	strcc	r0, [r5, -r6, lsl #2]
    2514:	26052206 	strcs	r2, [r5], -r6, lsl #4
    2518:	13320517 	teqne	r2, #96468992	; 0x5c00000
    251c:	05170505 	ldreq	r0, [r7, #-1285]	; 0xfffffafb
    2520:	0501061b 	streq	r0, [r1, #-1563]	; 0xfffff9e5
    2524:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
    2528:	05010628 	streq	r0, [r1, #-1576]	; 0xfffff9d8
    252c:	1c05201f 	stcne	0, cr2, [r5], {31}
    2530:	05052306 	streq	r2, [r5, #-774]	; 0xfffffcfa
    2534:	06210514 			; <UNDEFINED> instruction: 0x06210514
    2538:	06050501 	streq	r0, [r5], -r1, lsl #10
    253c:	06190521 	ldreq	r0, [r9], -r1, lsr #10
    2540:	06050501 	streq	r0, [r5], -r1, lsl #10
    2544:	06200523 	strteq	r0, [r0], -r3, lsr #10
    2548:	06050501 	streq	r0, [r5], -r1, lsl #10
    254c:	063b0522 	ldrteq	r0, [fp], -r2, lsr #10
    2550:	20230501 	eorcs	r0, r3, r1, lsl #10
    2554:	06202105 	strteq	r2, [r0], -r5, lsl #2
    2558:	06010522 	streq	r0, [r1], -r2, lsr #10
    255c:	00010213 	andeq	r0, r1, r3, lsl r2
    2560:	01050101 	tsteq	r5, r1, lsl #2
    2564:	d0020500 	andle	r0, r2, r0, lsl #10
    2568:	0310001f 	tsteq	r0, #31
    256c:	0601018c 	streq	r0, [r1], -ip, lsl #3
    2570:	06050501 	streq	r0, [r5], -r1, lsl #10
    2574:	16051321 	strne	r1, [r5], -r1, lsr #6
    2578:	34050106 	strcc	r0, [r5], #-262	; 0xfffffefa
    257c:	26052206 	strcs	r2, [r5], -r6, lsl #4
    2580:	13320517 	teqne	r2, #96468992	; 0x5c00000
    2584:	0a030505 	beq	c39a0 <__HEAP_SIZE+0xc29a0>
    2588:	06070501 	streq	r0, [r7], -r1, lsl #10
    258c:	06090501 	streq	r0, [r9], -r1, lsl #10
    2590:	053c1f03 	ldreq	r1, [ip, #-3843]!	; 0xfffff0fd
    2594:	05010619 	streq	r0, [r1, #-1561]	; 0xfffff9e7
    2598:	04020043 	streq	r0, [r2], #-67	; 0xffffffbd
    259c:	052e0601 	streq	r0, [lr, #-1537]!	; 0xfffff9ff
    25a0:	0402004d 	streq	r0, [r2], #-77	; 0xffffffb3
    25a4:	05200601 	streq	r0, [r0, #-1537]!	; 0xfffff9ff
    25a8:	04020055 	streq	r0, [r2], #-85	; 0xffffffab
    25ac:	09052001 	stmdbeq	r5, {r0, sp}
    25b0:	01040200 	mrseq	r0, R12_usr
    25b4:	06050520 	streq	r0, [r5], -r0, lsr #10
    25b8:	06270535 			; <UNDEFINED> instruction: 0x06270535
    25bc:	201b0501 	andscs	r0, fp, r1, lsl #10
    25c0:	21060505 	tstcs	r6, r5, lsl #10
    25c4:	01062705 	tsteq	r6, r5, lsl #14
    25c8:	21060505 	tstcs	r6, r5, lsl #10
    25cc:	01061f05 	tsteq	r6, r5, lsl #30
    25d0:	21060505 	tstcs	r6, r5, lsl #10
    25d4:	01061805 	tsteq	r6, r5, lsl #16
    25d8:	24060505 	strcs	r0, [r6], #-1285	; 0xfffffafb
    25dc:	01062005 	tsteq	r6, r5
    25e0:	22060505 	andcs	r0, r6, #20971520	; 0x1400000
    25e4:	01063b05 	tsteq	r6, r5, lsl #22
    25e8:	05202305 	streq	r2, [r0, #-773]!	; 0xfffffcfb
    25ec:	1e052021 	cdpne	0, 0, cr2, cr5, cr1, {1}
    25f0:	01052206 	tsteq	r5, r6, lsl #4
    25f4:	05201306 	streq	r1, [r0, #-774]!	; 0xfffffcfa
    25f8:	50030609 	andpl	r0, r3, r9, lsl #12
    25fc:	06140520 	ldreq	r0, [r4], -r0, lsr #10
    2600:	01022001 	tsteq	r2, r1
    2604:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    2608:	02050001 	andeq	r0, r5, #1
    260c:	10002002 	andne	r2, r0, r2
    2610:	0101d703 	tsteq	r1, r3, lsl #14
    2614:	05150505 	ldreq	r0, [r5, #-1285]	; 0xfffffafb
    2618:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
    261c:	0522062e 	streq	r0, [r2, #-1582]!	; 0xfffff9d2
    2620:	13051405 	movwne	r1, #21509	; 0x5405
    2624:	38050106 	stmdacc	r5, {r1, r2, r8}
    2628:	20280520 	eorcs	r0, r8, r0, lsr #10
    262c:	21060505 	tstcs	r6, r5, lsl #10
    2630:	01063805 	tsteq	r6, r5, lsl #16
    2634:	05202805 	streq	r2, [r0, #-2053]!	; 0xfffff7fb
    2638:	0523061c 	streq	r0, [r3, #-1564]!	; 0xfffff9e4
    263c:	0f051505 	svceq	0x00051505
    2640:	07050106 	streq	r0, [r5, -r6, lsl #2]
    2644:	06210520 	strteq	r0, [r1], -r0, lsr #10
    2648:	15050534 	strne	r0, [r5, #-1332]	; 0xfffffacc
    264c:	01062105 	tsteq	r6, r5, lsl #2
    2650:	2f060505 	svccs	0x00060505
    2654:	01063b05 	tsteq	r6, r5, lsl #22
    2658:	05202305 	streq	r2, [r0, #-773]!	; 0xfffffcfb
    265c:	38052021 	stmdacc	r5, {r0, r5, sp}
    2660:	05052206 	streq	r2, [r5, #-518]	; 0xfffffdfa
    2664:	06010514 			; <UNDEFINED> instruction: 0x06010514
    2668:	06090513 			; <UNDEFINED> instruction: 0x06090513
    266c:	05207303 	streq	r7, [r0, #-771]!	; 0xfffffcfd
    2670:	05010629 	streq	r0, [r1, #-1577]	; 0xfffff9d7
    2674:	02022019 	andeq	r2, r2, #25
    2678:	23010100 	movwcs	r0, #4352	; 0x1100
    267c:	03000017 	movweq	r0, #23
    2680:	00023b00 	andeq	r3, r2, r0, lsl #22
    2684:	fb010200 	blx	42e8e <__HEAP_SIZE+0x41e8e>
    2688:	01000d0e 	tsteq	r0, lr, lsl #26
    268c:	00010101 	andeq	r0, r1, r1, lsl #2
    2690:	00010000 	andeq	r0, r1, r0
    2694:	2e2e0100 	sufcse	f0, f6, f0
    2698:	2f2e2e2f 	svccs	0x002e2e2f
    269c:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 25ec <__HEAP_SIZE+0x15ec>
    26a0:	74726269 	ldrbtvc	r6, [r2], #-617	; 0xfffffd97
    26a4:	462f736f 	strtmi	r7, [pc], -pc, ror #6
    26a8:	52656572 	rsbpl	r6, r5, #478150656	; 0x1c800000
    26ac:	00534f54 	subseq	r4, r3, r4, asr pc
    26b0:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
    26b4:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    26b8:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
    26bc:	705c6e6f 	subsvc	r6, ip, pc, ror #28
    26c0:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
    26c4:	615c6d61 	cmpvs	ip, r1, ror #26
    26c8:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
    26cc:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
    26d0:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
    26d4:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    26d8:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    26dc:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    26e0:	2e30312d 	rsfcssp	f3, f0, #5.0
    26e4:	30322d33 	eorscc	r2, r2, r3, lsr sp
    26e8:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
    26ec:	696c5c30 	stmdbvs	ip!, {r4, r5, sl, fp, ip, lr}^
    26f0:	63675c62 	cmnvs	r7, #25088	; 0x6200
    26f4:	72615c63 	rsbvc	r5, r1, #25344	; 0x6300
    26f8:	6f6e2d6d 	svcvs	0x006e2d6d
    26fc:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    2700:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
    2704:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
    2708:	695c312e 	ldmdbvs	ip, {r1, r2, r3, r5, r8, ip, sp}^
    270c:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    2710:	63006564 	movwvs	r6, #1380	; 0x564
    2714:	73755c3a 	cmnvc	r5, #14848	; 0x3a00
    2718:	5c737265 	lfmpl	f7, 2, [r3], #-404	; 0xfffffe6c
    271c:	6f646978 	svcvs	0x00646978
    2720:	72705c6e 	rsbsvc	r5, r0, #28160	; 0x6e00
    2724:	6172676f 	cmnvs	r2, pc, ror #14
    2728:	72615c6d 	rsbvc	r5, r1, #27904	; 0x6d00
    272c:	63675f6d 	cmnvs	r7, #436	; 0x1b4
    2730:	63675c63 	cmnvs	r7, #25344	; 0x6300
    2734:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
    2738:	6f6e2d6d 	svcvs	0x006e2d6d
    273c:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    2740:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
    2744:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
    2748:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
    274c:	30312e31 	eorscc	r2, r1, r1, lsr lr
    2750:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    2754:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    2758:	61652d65 	cmnvs	r5, r5, ror #26
    275c:	695c6962 	ldmdbvs	ip, {r1, r5, r6, r8, fp, sp, lr}^
    2760:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    2764:	6d5c6564 	cfldr64vs	mvdx6, [ip, #-400]	; 0xfffffe70
    2768:	69686361 	stmdbvs	r8!, {r0, r5, r6, r8, r9, sp, lr}^
    276c:	6300656e 	movwvs	r6, #1390	; 0x56e
    2770:	73755c3a 	cmnvc	r5, #14848	; 0x3a00
    2774:	5c737265 	lfmpl	f7, 2, [r3], #-404	; 0xfffffe6c
    2778:	6f646978 	svcvs	0x00646978
    277c:	72705c6e 	rsbsvc	r5, r0, #28160	; 0x6e00
    2780:	6172676f 	cmnvs	r2, pc, ror #14
    2784:	72615c6d 	rsbvc	r5, r1, #27904	; 0x6d00
    2788:	63675f6d 	cmnvs	r7, #436	; 0x1b4
    278c:	63675c63 	cmnvs	r7, #25344	; 0x6300
    2790:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
    2794:	6f6e2d6d 	svcvs	0x006e2d6d
    2798:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    279c:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
    27a0:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
    27a4:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
    27a8:	30312e31 	eorscc	r2, r1, r1, lsr lr
    27ac:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    27b0:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    27b4:	61652d65 	cmnvs	r5, r5, ror #26
    27b8:	695c6962 	ldmdbvs	ip, {r1, r5, r6, r8, fp, sp, lr}^
    27bc:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    27c0:	735c6564 	cmpvc	ip, #100, 10	; 0x19000000
    27c4:	2e007379 	mcrcs	3, 0, r7, cr0, cr9, {3}
    27c8:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    27cc:	2f2e2e2f 	svccs	0x002e2e2f
    27d0:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
    27d4:	2f736f74 	svccs	0x00736f74
    27d8:	65657246 	strbvs	r7, [r5, #-582]!	; 0xfffffdba
    27dc:	534f5452 	movtpl	r5, #62546	; 0xf452
    27e0:	726f702f 	rsbvc	r7, pc, #47	; 0x2f
    27e4:	6c626174 	stfvse	f6, [r2], #-464	; 0xfffffe30
    27e8:	43472f65 	movtmi	r2, #32613	; 0x7f65
    27ec:	52412f43 	subpl	r2, r1, #268	; 0x10c
    27f0:	4d435f4d 	stclmi	15, cr5, [r3, #-308]	; 0xfffffecc
    27f4:	4e5f3333 	mrcmi	3, 2, r3, cr15, cr3, {1}
    27f8:	6e2f5a54 			; <UNDEFINED> instruction: 0x6e2f5a54
    27fc:	735f6e6f 	cmpvc	pc, #1776	; 0x6f0
    2800:	72756365 	rsbsvc	r6, r5, #-1811939327	; 0x94000001
    2804:	2e2e0065 	cdpcs	0, 2, cr0, cr14, cr5, {3}
    2808:	2f2e2e2f 	svccs	0x002e2e2f
    280c:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 275c <__HEAP_SIZE+0x175c>
    2810:	74726269 	ldrbtvc	r6, [r2], #-617	; 0xfffffd97
    2814:	462f736f 	strtmi	r7, [pc], -pc, ror #6
    2818:	52656572 	rsbpl	r6, r5, #478150656	; 0x1c800000
    281c:	2f534f54 	svccs	0x00534f54
    2820:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    2824:	00656475 	rsbeq	r6, r5, r5, ror r4
    2828:	65757100 	ldrbvs	r7, [r5, #-256]!	; 0xffffff00
    282c:	632e6575 			; <UNDEFINED> instruction: 0x632e6575
    2830:	00000100 	andeq	r0, r0, r0, lsl #2
    2834:	64647473 	strbtvs	r7, [r4], #-1139	; 0xfffffb8d
    2838:	682e6665 	stmdavs	lr!, {r0, r2, r5, r6, r9, sl, sp, lr}
    283c:	00000200 	andeq	r0, r0, r0, lsl #4
    2840:	6665645f 			; <UNDEFINED> instruction: 0x6665645f
    2844:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
    2848:	7079745f 	rsbsvc	r7, r9, pc, asr r4
    284c:	682e7365 	stmdavs	lr!, {r0, r2, r5, r6, r8, r9, ip, sp, lr}
    2850:	00000300 	andeq	r0, r0, r0, lsl #6
    2854:	6474735f 	ldrbtvs	r7, [r4], #-863	; 0xfffffca1
    2858:	2e746e69 	cdpcs	14, 7, cr6, cr4, cr9, {3}
    285c:	00040068 	andeq	r0, r4, r8, rrx
    2860:	726f7000 	rsbvc	r7, pc, #0
    2864:	63616d74 	cmnvs	r1, #116, 26	; 0x1d00
    2868:	6f636f72 	svcvs	0x00636f72
    286c:	6e6f6d6d 	cdpvs	13, 6, cr6, cr15, cr13, {3}
    2870:	0500682e 	streq	r6, [r0, #-2094]	; 0xfffff7d2
    2874:	72460000 	subvc	r0, r6, #0
    2878:	54526565 	ldrbpl	r6, [r2], #-1381	; 0xfffffa9b
    287c:	682e534f 	stmdavs	lr!, {r0, r1, r2, r3, r6, r8, r9, ip, lr}
    2880:	00000600 	andeq	r0, r0, r0, lsl #12
    2884:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
    2888:	0600682e 	streq	r6, [r0], -lr, lsr #16
    288c:	61740000 	cmnvs	r4, r0
    2890:	682e6b73 	stmdavs	lr!, {r0, r1, r4, r5, r6, r8, r9, fp, sp, lr}
    2894:	00000600 	andeq	r0, r0, r0, lsl #12
    2898:	75657571 	strbvc	r7, [r5, #-1393]!	; 0xfffffa8f
    289c:	00682e65 	rsbeq	r2, r8, r5, ror #28
    28a0:	70000006 	andvc	r0, r0, r6
    28a4:	6174726f 	cmnvs	r4, pc, ror #4
    28a8:	2e656c62 	cdpcs	12, 6, cr6, cr5, cr2, {3}
    28ac:	00060068 	andeq	r0, r6, r8, rrx
    28b0:	75623c00 	strbvc	r3, [r2, #-3072]!	; 0xfffff400
    28b4:	2d746c69 	ldclcs	12, cr6, [r4, #-420]!	; 0xfffffe5c
    28b8:	003e6e69 	eorseq	r6, lr, r9, ror #28
    28bc:	00000000 	andeq	r0, r0, r0
    28c0:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    28c4:	00000002 	andeq	r0, r0, r2
    28c8:	12bd0300 	adcsne	r0, sp, #0, 6
    28cc:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    28d0:	1a210609 	bne	8440fc <__RAM_SIZE+0x7440fc>
    28d4:	01060d05 	tsteq	r6, r5, lsl #26
    28d8:	05200b05 	streq	r0, [r0, #-2821]!	; 0xfffff4fb
    28dc:	0522060d 	streq	r0, [r2, #-1549]!	; 0xfffff9f3
    28e0:	20010678 	andcs	r0, r1, r8, ror r6
    28e4:	05202d05 	streq	r2, [r0, #-3333]!	; 0xfffff2fb
    28e8:	05350609 	ldreq	r0, [r5, #-1545]!	; 0xfffff9f7
    28ec:	02130605 	andseq	r0, r3, #5242880	; 0x500000
    28f0:	01010001 	tsteq	r1, r1
    28f4:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    28f8:	00000002 	andeq	r0, r0, r2
    28fc:	14e30300 	strbtne	r0, [r3], #768	; 0x300
    2900:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    2904:	142f0605 	strtne	r0, [pc], #-1541	; 290c <__HEAP_SIZE+0x190c>
    2908:	05300905 	ldreq	r0, [r0, #-2309]!	; 0xfffff6fb
    290c:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
    2910:	0b052032 	bleq	14a9e0 <__RAM_SIZE+0x4a9e0>
    2914:	34150520 	ldrcc	r0, [r5], #-1312	; 0xfffffae0
    2918:	23060505 	movwcs	r0, #25861	; 0x6505
    291c:	06010530 			; <UNDEFINED> instruction: 0x06010530
    2920:	03150513 	tsteq	r5, #79691776	; 0x4c00000
    2924:	02202e76 	eoreq	r2, r0, #1888	; 0x760
    2928:	01010001 	tsteq	r1, r1
    292c:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    2930:	00202602 	eoreq	r2, r0, r2, lsl #12
    2934:	14b60310 	ldrtne	r0, [r6], #784	; 0x310
    2938:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    293c:	142f0605 	strtne	r0, [pc], #-1541	; 2944 <__HEAP_SIZE+0x1944>
    2940:	05300905 	ldreq	r0, [r0, #-2309]!	; 0xfffff6fb
    2944:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
    2948:	1505200b 	strne	r2, [r5, #-11]
    294c:	06050522 	streq	r0, [r5], -r2, lsr #10
    2950:	01053027 	tsteq	r5, r7, lsr #32
    2954:	15051306 	strne	r1, [r5, #-774]	; 0xfffffcfa
    2958:	202e7a03 	eorcs	r7, lr, r3, lsl #20
    295c:	01000102 	tsteq	r0, r2, lsl #2
    2960:	00010501 	andeq	r0, r1, r1, lsl #10
    2964:	20400205 	subcs	r0, r0, r5, lsl #4
    2968:	d8031000 	stmdale	r3, {ip}
    296c:	01060112 	tsteq	r6, r2, lsl r1
    2970:	3d060505 	cfstr32cc	mvfx0, [r6, #-20]	; 0xffffffec
    2974:	17051613 	smladne	r5, r3, r6, r1
    2978:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    297c:	10052206 	andne	r2, r5, r6, lsl #4
    2980:	07050106 	streq	r0, [r5, -r6, lsl #2]
    2984:	060d0520 	streq	r0, [sp], -r0, lsr #10
    2988:	06180524 	ldreq	r0, [r8], -r4, lsr #10
    298c:	200f0501 	andcs	r0, pc, r1, lsl #10
    2990:	75031005 	strvc	r1, [r3, #-5]
    2994:	06250520 	strteq	r0, [r5], -r0, lsr #10
    2998:	2000c503 	andcs	ip, r0, r3, lsl #10
    299c:	05160505 	ldreq	r0, [r6, #-1285]	; 0xfffffafb
    29a0:	05010622 	streq	r0, [r1, #-1570]	; 0xfffff9de
    29a4:	05052020 	streq	r2, [r5, #-32]	; 0xffffffe0
    29a8:	01052206 	tsteq	r5, r6, lsl #4
    29ac:	11051306 	tstne	r5, r6, lsl #6
    29b0:	20420306 	subcs	r0, r2, r6, lsl #6
    29b4:	01061b05 	tsteq	r6, r5, lsl #22
    29b8:	06110520 	ldreq	r0, [r1], -r0, lsr #10
    29bc:	0634052f 	ldrteq	r0, [r4], -pc, lsr #10
    29c0:	060a0501 	streq	r0, [sl], -r1, lsl #10
    29c4:	053c0903 	ldreq	r0, [ip, #-2307]!	; 0xfffff6fd
    29c8:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    29cc:	05220609 	streq	r0, [r2, #-1545]!	; 0xfffff9f7
    29d0:	20010612 	andcs	r0, r1, r2, lsl r6
    29d4:	2f060905 	svccs	0x00060905
    29d8:	01062605 	tsteq	r6, r5, lsl #12
    29dc:	05201c05 	streq	r1, [r0, #-3077]!	; 0xfffff3fb
    29e0:	053e0609 	ldreq	r0, [lr, #-1545]!	; 0xfffff9f7
    29e4:	05010634 	streq	r0, [r1, #-1588]	; 0xfffff9cc
    29e8:	0d05200b 	stceq	0, cr2, [r5, #-44]	; 0xffffffd4
    29ec:	29053006 	stmdbcs	r5, {r1, r2, ip, sp}
    29f0:	20050106 	andcs	r0, r5, r6, lsl #2
    29f4:	03100520 	tsteq	r0, #32, 10	; 0x8000000
    29f8:	09052061 	stmdbeq	r5, {r0, r5, r6, sp}
    29fc:	2e280306 	cdpcs	3, 2, cr0, cr8, cr6, {0}
    2a00:	01061205 	tsteq	r6, r5, lsl #4
    2a04:	06090520 	streq	r0, [r9], -r0, lsr #10
    2a08:	0630052f 	ldrteq	r0, [r0], -pc, lsr #10
    2a0c:	20260501 	eorcs	r0, r6, r1, lsl #10
    2a10:	4c060905 			; <UNDEFINED> instruction: 0x4c060905
    2a14:	01063305 	tsteq	r6, r5, lsl #6
    2a18:	05200b05 	streq	r0, [r0, #-2821]!	; 0xfffff4fb
    2a1c:	0530060d 	ldreq	r0, [r0, #-1549]!	; 0xfffff9f3
    2a20:	0501063f 	streq	r0, [r1, #-1599]	; 0xfffff9c1
    2a24:	2a052047 	bcs	14ab48 <__RAM_SIZE+0x4ab48>
    2a28:	06250520 	strteq	r0, [r5], -r0, lsr #10
    2a2c:	15090524 	strne	r0, [r9, #-1316]	; 0xfffffadc
    2a30:	01060b05 	tsteq	r6, r5, lsl #22
    2a34:	4c031005 	stcmi	0, cr1, [r3], {5}
    2a38:	060d052e 	streq	r0, [sp], -lr, lsr #10
    2a3c:	052e3603 	streq	r3, [lr, #-1539]!	; 0xfffff9fd
    2a40:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    2a44:	05260611 	streq	r0, [r6, #-1553]!	; 0xfffff9ef
    2a48:	44030610 	strmi	r0, [r3], #-1552	; 0xfffff9f0
    2a4c:	022e2e20 	eoreq	r2, lr, #32, 28	; 0x200
    2a50:	01010002 	tsteq	r1, r2
    2a54:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    2a58:	0020b602 	eoreq	fp, r0, r2, lsl #12
    2a5c:	13aa0310 			; <UNDEFINED> instruction: 0x13aa0310
    2a60:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    2a64:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
    2a68:	05010610 	streq	r0, [r1, #-1552]	; 0xfffff9f0
    2a6c:	01052007 	tsteq	r5, r7
    2a70:	0609051f 			; <UNDEFINED> instruction: 0x0609051f
    2a74:	06260531 			; <UNDEFINED> instruction: 0x06260531
    2a78:	09052001 	stmdbeq	r5, {r0, sp}
    2a7c:	0b053006 	bleq	14ea9c <__RAM_SIZE+0x4ea9c>
    2a80:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    2a84:	33053e06 	movwcc	r3, #24070	; 0x5e06
    2a88:	2a050106 	bcs	142ea8 <__RAM_SIZE+0x42ea8>
    2a8c:	06250520 	strteq	r0, [r5], -r0, lsr #10
    2a90:	15090524 	strne	r0, [r9, #-1316]	; 0xfffffadc
    2a94:	01061205 	tsteq	r6, r5, lsl #4
    2a98:	203e0105 	eorscs	r0, lr, r5, lsl #2
    2a9c:	01000102 	tsteq	r0, r2, lsl #2
    2aa0:	00050501 	andeq	r0, r5, r1, lsl #10
    2aa4:	20da0205 	sbcscs	r0, sl, r5, lsl #4
    2aa8:	ee031000 	cdp	0, 0, cr1, cr3, cr0, {0}
    2aac:	01060119 	tsteq	r6, r9, lsl r1
    2ab0:	3d060905 	vstrcc.16	s0, [r6, #-10]	; <UNPREDICTABLE>
    2ab4:	01061305 	tsteq	r6, r5, lsl #6
    2ab8:	21060905 	tstcs	r6, r5, lsl #18
    2abc:	05192c05 	ldreq	r2, [r9, #-3077]	; 0xfffff3fb
    2ac0:	0905135f 	stmdbeq	r5, {r0, r1, r2, r3, r4, r6, r8, r9, ip}
    2ac4:	06200514 			; <UNDEFINED> instruction: 0x06200514
    2ac8:	20490501 	subcs	r0, r9, r1, lsl #10
    2acc:	05200b05 	streq	r0, [r0, #-2821]!	; 0xfffff4fb
    2ad0:	2e760314 	mrccs	3, 3, r0, cr6, cr4, {0}
    2ad4:	31030505 	tstcc	r3, r5, lsl #10
    2ad8:	060d0520 	streq	r0, [sp], -r0, lsr #10
    2adc:	053c5b03 	ldreq	r5, [ip, #-2819]!	; 0xfffff4fd
    2ae0:	0501061a 	streq	r0, [r1, #-1562]	; 0xfffff9e6
    2ae4:	053e0637 	ldreq	r0, [lr, #-1591]!	; 0xfffff9c9
    2ae8:	1705150d 	strne	r1, [r5, -sp, lsl #10]
    2aec:	2e3c0106 	rsfcse	f0, f4, f6
    2af0:	22060d05 	andcs	r0, r6, #320	; 0x140
    2af4:	01060f05 	tsteq	r6, r5, lsl #30
    2af8:	3e061105 	adfccs	f1, f6, f5
    2afc:	01061505 	tsteq	r6, r5, lsl #10
    2b00:	05201305 	streq	r1, [r0, #-773]!	; 0xfffffcfb
    2b04:	05300615 	ldreq	r0, [r0, #-1557]!	; 0xfffff9eb
    2b08:	2e010619 	mcrcs	6, 0, r0, cr1, cr9, {0}
    2b0c:	052e1705 	streq	r1, [lr, #-1797]!	; 0xfffff8fb
    2b10:	05203121 	streq	r3, [r0, #-289]!	; 0xfffffedf
    2b14:	13030625 	movwne	r0, #13861	; 0x3625
    2b18:	15090501 	strne	r0, [r9, #-1281]	; 0xfffffaff
    2b1c:	01061005 	tsteq	r6, r5
    2b20:	02001105 	andeq	r1, r0, #1073741825	; 0x40000001
    2b24:	03060204 	movweq	r0, #25092	; 0x6204
    2b28:	02002078 	andeq	r2, r0, #120	; 0x78
    2b2c:	00010204 	andeq	r0, r1, r4, lsl #4
    2b30:	2e020402 	cdpcs	4, 0, cr0, cr2, cr2, {0}
    2b34:	01040200 	mrseq	r0, R12_usr
    2b38:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    2b3c:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    2b40:	20060104 	andcs	r0, r6, r4, lsl #2
    2b44:	01040200 	mrseq	r0, R12_usr
    2b48:	00030220 	andeq	r0, r3, r0, lsr #4
    2b4c:	01050101 	tsteq	r5, r1, lsl #2
    2b50:	32020500 	andcc	r0, r2, #0, 10
    2b54:	03100021 	tsteq	r0, #33	; 0x21
    2b58:	060113be 			; <UNDEFINED> instruction: 0x060113be
    2b5c:	06050501 	streq	r0, [r5], -r1, lsl #10
    2b60:	30090535 	andcc	r0, r9, r5, lsr r5
    2b64:	01061005 	tsteq	r6, r5
    2b68:	3f060905 	svccc	0x00060905
    2b6c:	01060e05 	tsteq	r6, r5, lsl #28
    2b70:	03061505 	movweq	r1, #25861	; 0x6505
    2b74:	19052019 	stmdbne	r5, {r0, r3, r4, sp}
    2b78:	17050106 	strne	r0, [r5, -r6, lsl #2]
    2b7c:	06190520 	ldreq	r0, [r9], -r0, lsr #10
    2b80:	061d0522 	ldreq	r0, [sp], -r2, lsr #10
    2b84:	4a1b0501 	bmi	6c3f90 <__RAM_SIZE+0x5c3f90>
    2b88:	28063505 	stmdacs	r6, {r0, r2, r8, sl, ip, sp}
    2b8c:	21030d05 	tstcs	r3, r5, lsl #26
    2b90:	05200601 	streq	r0, [r0, #-1537]!	; 0xfffff9ff
    2b94:	bc03060e 	stclt	6, cr0, [r3], {14}
    2b98:	1105207f 	tstne	r5, pc, ror r0
    2b9c:	061c0534 			; <UNDEFINED> instruction: 0x061c0534
    2ba0:	20130501 	andscs	r0, r3, r1, lsl #10
    2ba4:	30061505 	andcc	r1, r6, r5, lsl #10
    2ba8:	01061905 	tsteq	r6, r5, lsl #18
    2bac:	053c1705 	ldreq	r1, [ip, #-1797]!	; 0xfffff8fb
    2bb0:	05330619 	ldreq	r0, [r3, #-1561]!	; 0xfffff9e7
    2bb4:	3c12031d 	ldccc	3, cr0, [r2], {29}
    2bb8:	28030905 	stmdacs	r3, {r0, r2, r8, fp}
    2bbc:	061a053c 			; <UNDEFINED> instruction: 0x061a053c
    2bc0:	06050501 	streq	r0, [r5], -r1, lsl #10
    2bc4:	0905313e 	stmdbeq	r5, {r1, r2, r3, r4, r5, r8, ip, sp}
    2bc8:	06100530 			; <UNDEFINED> instruction: 0x06100530
    2bcc:	09052e01 	stmdbeq	r5, {r0, r9, sl, fp, sp}
    2bd0:	0e052206 	cdpeq	2, 0, cr2, cr5, cr6, {0}
    2bd4:	2d050106 	stfcss	f0, [r5, #-24]	; 0xffffffe8
    2bd8:	200a0306 	andcs	r0, sl, r6, lsl #6
    2bdc:	06151105 	ldreq	r1, [r5], -r5, lsl #2
    2be0:	060e0520 	streq	r0, [lr], -r0, lsr #10
    2be4:	05207303 	streq	r7, [r0, #-771]!	; 0xfffffcfd
    2be8:	1105300d 	tstne	r5, sp
    2bec:	0f050106 	svceq	0x00050106
    2bf0:	06110520 	ldreq	r0, [r1], -r0, lsr #10
    2bf4:	06150522 	ldreq	r0, [r5], -r2, lsr #10
    2bf8:	4a130501 	bmi	4c4004 <__RAM_SIZE+0x3c4004>
    2bfc:	30061505 	andcc	r1, r6, r5, lsl #10
    2c00:	0f030905 	svceq	0x00030905
    2c04:	061a053c 			; <UNDEFINED> instruction: 0x061a053c
    2c08:	06050501 	streq	r0, [r5], -r1, lsl #10
    2c0c:	0601053e 			; <UNDEFINED> instruction: 0x0601053e
    2c10:	0100202f 	tsteq	r0, pc, lsr #32
    2c14:	00010501 	andeq	r0, r1, r1, lsl #10
    2c18:	21b40205 			; <UNDEFINED> instruction: 0x21b40205
    2c1c:	b0031000 	andlt	r1, r3, r0
    2c20:	05050102 	streq	r0, [r5, #-258]	; 0xfffffefe
    2c24:	37051313 	smladcc	r5, r3, r3, r1
    2c28:	141c0514 	ldrne	r0, [ip], #-1300	; 0xfffffaec
    2c2c:	05140505 	ldreq	r0, [r4, #-1285]	; 0xfffffafb
    2c30:	05010607 	streq	r0, [r1, #-1543]	; 0xfffff9f9
    2c34:	04020001 	streq	r0, [r2], #-1
    2c38:	2e780301 	cdpcs	3, 7, cr0, cr8, cr1, {0}
    2c3c:	02001205 	andeq	r1, r0, #1342177280	; 0x50000000
    2c40:	09030104 	stmdbeq	r3, {r2, r8}
    2c44:	001d053c 	andseq	r0, sp, ip, lsr r5
    2c48:	1f010402 	svcne	0x00010402
    2c4c:	05313605 	ldreq	r3, [r1, #-1541]!	; 0xfffff9fb
    2c50:	0520202c 	streq	r2, [r0, #-44]!	; 0xffffffd4
    2c54:	11053a25 	tstne	r5, r5, lsr #20
    2c58:	05202f03 	streq	r2, [r0, #-3843]!	; 0xfffff0fd
    2c5c:	05230626 	streq	r0, [r3, #-1574]!	; 0xfffff9da
    2c60:	0505162e 	streq	r1, [r5, #-1582]	; 0xfffff9d2
    2c64:	060c0514 			; <UNDEFINED> instruction: 0x060c0514
    2c68:	032c0501 			; <UNDEFINED> instruction: 0x032c0501
    2c6c:	0905204a 	stmdbeq	r5, {r1, r3, r6, sp}
    2c70:	0d053006 	stceq	0, cr3, [r5, #-24]	; 0xffffffe8
    2c74:	062f0530 			; <UNDEFINED> instruction: 0x062f0530
    2c78:	20430501 	subcs	r0, r3, r1, lsl #10
    2c7c:	05205705 	streq	r5, [r0, #-1797]!	; 0xfffff8fb
    2c80:	26052038 			; <UNDEFINED> instruction: 0x26052038
    2c84:	060d052e 	streq	r0, [sp], -lr, lsr #10
    2c88:	06280521 	strteq	r0, [r8], -r1, lsr #10
    2c8c:	060d0501 	streq	r0, [sp], -r1, lsl #10
    2c90:	0620052f 	strteq	r0, [r0], -pc, lsr #10
    2c94:	060d0501 	streq	r0, [sp], -r1, lsl #10
    2c98:	06540521 	ldrbeq	r0, [r4], -r1, lsr #10
    2c9c:	203c0501 	eorscs	r0, ip, r1, lsl #10
    2ca0:	052e2a05 	streq	r2, [lr, #-2565]!	; 0xfffff5fb
    2ca4:	0521060d 	streq	r0, [r1, #-1549]!	; 0xfffff9f3
    2ca8:	0501061e 	streq	r0, [r1, #-1566]	; 0xfffff9e2
    2cac:	053d060d 	ldreq	r0, [sp, #-1549]!	; 0xfffff9f3
    2cb0:	0501061e 	streq	r0, [r1, #-1566]	; 0xfffff9e2
    2cb4:	0530060d 	ldreq	r0, [r0, #-1549]!	; 0xfffff9f3
    2cb8:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    2cbc:	05270611 	streq	r0, [r7, #-1553]!	; 0xfffff9ef
    2cc0:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    2cc4:	09052013 	stmdbeq	r5, {r0, r1, r4, sp}
    2cc8:	20170306 	andscs	r0, r7, r6, lsl #6
    2ccc:	03061005 	movweq	r1, #24581	; 0x6005
    2cd0:	09052e4d 	stmdbeq	r5, {r0, r2, r3, r6, r9, sl, fp, sp}
    2cd4:	05203303 	streq	r3, [r0, #-771]!	; 0xfffffcfd
    2cd8:	6b030615 	blvs	c4534 <__HEAP_SIZE+0xc3534>
    2cdc:	06190520 	ldreq	r0, [r9], -r0, lsr #10
    2ce0:	4a170501 	bmi	5c40ec <__RAM_SIZE+0x4c40ec>
    2ce4:	30061905 	andcc	r1, r6, r5, lsl #18
    2ce8:	0f031105 	svceq	0x00031105
    2cec:	5f064b3c 	svcpl	0x00064b3c
    2cf0:	0a030105 	beq	c310c <__HEAP_SIZE+0xc210c>
    2cf4:	03110520 	tsteq	r1, #32, 10	; 0x8000000
    2cf8:	01052076 	tsteq	r5, r6, ror r0
    2cfc:	20200a03 	eorcs	r0, r0, r3, lsl #20
    2d00:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    2d04:	02050001 	andeq	r0, r5, #1
    2d08:	1000223a 	andne	r2, r0, sl, lsr r2
    2d0c:	0104ba03 	tsteq	r4, r3, lsl #20
    2d10:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    2d14:	05143106 	ldreq	r3, [r4, #-262]	; 0xfffffefa
    2d18:	20010607 	andcs	r0, r1, r7, lsl #12
    2d1c:	26060905 	strcs	r0, [r6], -r5, lsl #18
    2d20:	01061c05 	tsteq	r6, r5, lsl #24
    2d24:	03060505 	movweq	r0, #25861	; 0x6505
    2d28:	1a05200a 	bne	14ad58 <__RAM_SIZE+0x4ad58>
    2d2c:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    2d30:	1c052106 	stfnes	f2, [r5], {6}
    2d34:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    2d38:	0e052106 	adfeqs	f2, f5, f6
    2d3c:	20200106 	eorcs	r0, r0, r6, lsl #2
    2d40:	03060905 	movweq	r0, #26885	; 0x6905
    2d44:	29052e0a 	stmdbcs	r5, {r1, r3, r9, sl, fp, sp}
    2d48:	24050106 	strcs	r0, [r5], #-262	; 0xfffffefa
    2d4c:	01053206 	tsteq	r5, r6, lsl #4
    2d50:	09051306 	stmdbeq	r5, {r1, r2, r8, r9, ip}
    2d54:	206a0306 	rsbcs	r0, sl, r6, lsl #6
    2d58:	01061c05 	tsteq	r6, r5, lsl #24
    2d5c:	01000202 	tsteq	r0, r2, lsl #4
    2d60:	00050501 	andeq	r0, r5, r1, lsl #10
    2d64:	225a0205 	subscs	r0, sl, #1342177280	; 0x50000000
    2d68:	fc031000 	stc2	0, cr1, [r3], {-0}
    2d6c:	09050102 	stmdbeq	r5, {r1, r8}
    2d70:	14770513 	ldrbtne	r0, [r7], #-1299	; 0xfffffaed
    2d74:	05162605 	ldreq	r2, [r6, #-1541]	; 0xfffff9fb
    2d78:	0b051409 	bleq	147da4 <__RAM_SIZE+0x47da4>
    2d7c:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    2d80:	01040200 	mrseq	r0, R12_usr
    2d84:	05207703 	streq	r7, [r0, #-1795]!	; 0xfffff8fd
    2d88:	04020033 	streq	r0, [r2], #-51	; 0xffffffcd
    2d8c:	4a090301 	bmi	243998 <__RAM_SIZE+0x143998>
    2d90:	05212705 	streq	r2, [r1, #-1797]!	; 0xfffff8fb
    2d94:	4a05240f 	bmi	14bdd8 <__RAM_SIZE+0x4bdd8>
    2d98:	01040200 	mrseq	r0, R12_usr
    2d9c:	060d0520 	streq	r0, [sp], -r0, lsr #10
    2da0:	05201603 	streq	r1, [r0, #-1539]!	; 0xfffff9fd
    2da4:	33051911 	movwcc	r1, #22801	; 0x5911
    2da8:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    2dac:	0632060d 	ldrteq	r0, [r2], -sp, lsl #12
    2db0:	0318054a 	tsteq	r8, #310378496	; 0x12800000
    2db4:	05052e75 	streq	r2, [r5, #-3701]	; 0xfffff18b
    2db8:	05201603 	streq	r1, [r0, #-1539]!	; 0xfffff9fd
    2dbc:	2e55030f 	cdpcs	3, 5, cr0, cr5, cr15, {0}
    2dc0:	72031305 	andvc	r1, r3, #335544320	; 0x14000000
    2dc4:	063c052e 	ldrteq	r0, [ip], -lr, lsr #10
    2dc8:	05203603 	streq	r3, [r0, #-1539]!	; 0xfffff9fd
    2dcc:	10051409 	andne	r1, r5, r9, lsl #8
    2dd0:	13050106 	movwne	r0, #20742	; 0x5106
    2dd4:	05204803 	streq	r4, [r0, #-2051]!	; 0xfffff7fd
    2dd8:	20390305 	eorscs	r0, r9, r5, lsl #6
    2ddc:	47031305 	strmi	r1, [r3, -r5, lsl #6]
    2de0:	20202020 	eorcs	r2, r0, r0, lsr #32
    2de4:	01000102 	tsteq	r0, r2, lsl #2
    2de8:	00050501 	andeq	r0, r5, r1, lsl #10
    2dec:	00000205 	andeq	r0, r0, r5, lsl #4
    2df0:	c0030000 	andgt	r0, r3, r0
    2df4:	09050103 	stmdbeq	r5, {r0, r1, r8}
    2df8:	5d051313 	stcpl	3, cr1, [r5, #-76]	; 0xffffffb4
    2dfc:	14200514 	strtne	r0, [r0], #-1300	; 0xfffffaec
    2e00:	05132705 	ldreq	r2, [r3, #-1797]	; 0xfffff8fb
    2e04:	1805170d 	stmdane	r5, {r0, r2, r3, r8, r9, sl, ip}
    2e08:	0f050106 	svceq	0x00050106
    2e0c:	0319052e 	tsteq	r9, #192937984	; 0xb800000
    2e10:	3d052e0f 	stccc	14, cr2, [r5, #-60]	; 0xffffffc4
    2e14:	20100306 	andscs	r0, r0, r6, lsl #6
    2e18:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    2e1c:	05130605 	ldreq	r0, [r3, #-1541]	; 0xfffff9fb
    2e20:	60030611 	andvs	r0, r3, r1, lsl r6
    2e24:	06130520 	ldreq	r0, [r3], -r0, lsr #10
    2e28:	06150501 	ldreq	r0, [r5], -r1, lsl #10
    2e2c:	063e0522 	ldrteq	r0, [lr], -r2, lsr #10
    2e30:	20270501 	eorcs	r0, r7, r1, lsl #10
    2e34:	26061105 	strcs	r1, [r6], -r5, lsl #2
    2e38:	01062105 	tsteq	r6, r5, lsl #2
    2e3c:	21061105 	tstcs	r6, r5, lsl #2
    2e40:	01061905 	tsteq	r6, r5, lsl #18
    2e44:	00010220 	andeq	r0, r1, r0, lsr #4
    2e48:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    2e4c:	00020500 	andeq	r0, r2, r0, lsl #10
    2e50:	03000000 	movweq	r0, #0
    2e54:	060103f8 			; <UNDEFINED> instruction: 0x060103f8
    2e58:	06090501 	streq	r0, [r9], -r1, lsl #10
    2e5c:	0513132f 	ldreq	r1, [r3, #-815]	; 0xfffffcd1
    2e60:	09051451 	stmdbeq	r5, {r0, r4, r6, sl, ip}
    2e64:	060b0514 			; <UNDEFINED> instruction: 0x060b0514
    2e68:	002c0501 	eoreq	r0, ip, r1, lsl #10
    2e6c:	4c010402 	cfstrsmi	mvf0, [r1], {2}
    2e70:	01040200 	mrseq	r0, R12_usr
    2e74:	0033053c 	eorseq	r0, r3, ip, lsr r5
    2e78:	1e010402 	cdpne	4, 0, cr0, cr1, cr2, {0}
    2e7c:	05245305 	streq	r5, [r4, #-773]!	; 0xfffffcfb
    2e80:	0d052c3c 	stceq	12, cr2, [r5, #-240]	; 0xffffff10
    2e84:	05174306 	ldreq	r4, [r7, #-774]	; 0xfffffcfa
    2e88:	20010628 	andcs	r0, r1, r8, lsr #12
    2e8c:	30060d05 	andcc	r0, r6, r5, lsl #26
    2e90:	01060f05 	tsteq	r6, r5, lsl #30
    2e94:	32061105 	andcc	r1, r6, #1073741825	; 0x40000001
    2e98:	19150513 	ldmdbne	r5, {r0, r1, r4, r8, sl}
    2e9c:	01063705 	tsteq	r6, r5, lsl #14
    2ea0:	40061105 	andmi	r1, r6, r5, lsl #2
    2ea4:	2e2e4a06 	vmulcs.f32	s8, s28, s12
    2ea8:	02002c05 	andeq	r2, r0, #1280	; 0x500
    2eac:	62030104 	andvs	r0, r3, #4, 2
    2eb0:	03130520 	tsteq	r3, #32, 10	; 0x8000000
    2eb4:	05052e78 	streq	r2, [r5, #-3704]	; 0xfffff188
    2eb8:	05203703 	streq	r3, [r0, #-1795]!	; 0xfffff8fd
    2ebc:	3c490313 	mcrrcc	3, 1, r0, r9, cr3
    2ec0:	0627052e 	strteq	r0, [r7], -lr, lsr #10
    2ec4:	05203003 	streq	r3, [r0, #-3]!
    2ec8:	36051325 	strcc	r1, [r5], -r5, lsr #6
    2ecc:	14090515 	strne	r0, [r9], #-1301	; 0xfffffaeb
    2ed0:	01061005 	tsteq	r6, r5
    2ed4:	01000102 	tsteq	r0, r2, lsl #2
    2ed8:	00050501 	andeq	r0, r5, r1, lsl #10
    2edc:	00000205 	andeq	r0, r0, r5, lsl #4
    2ee0:	e0030000 	and	r0, r3, r0
    2ee4:	09050106 	stmdbeq	r5, {r1, r2, r8}
    2ee8:	14640513 	strbtne	r0, [r4], #-1299	; 0xfffffaed
    2eec:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    2ef0:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
    2ef4:	04020005 	streq	r0, [r2], #-5
    2ef8:	22051b01 	andcs	r1, r5, #1024	; 0x400
    2efc:	01040200 	mrseq	r0, R12_usr
    2f00:	060d0541 	streq	r0, [sp], -r1, asr #10
    2f04:	06170531 			; <UNDEFINED> instruction: 0x06170531
    2f08:	05204a01 	streq	r4, [r0, #-2561]!	; 0xfffff5ff
    2f0c:	0530060d 	ldreq	r0, [r0, #-1549]!	; 0xfffff9f3
    2f10:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    2f14:	05220611 	streq	r0, [r2, #-1553]!	; 0xfffff9ef
    2f18:	0501063e 	streq	r0, [r1, #-1598]	; 0xfffff9c2
    2f1c:	05220631 	streq	r0, [r2, #-1585]!	; 0xfffff9cf
    2f20:	73030617 	movwvc	r0, #13847	; 0x3617
    2f24:	03050520 	movweq	r0, #21792	; 0x5520
    2f28:	1705201d 	smladne	r5, sp, r0, r2
    2f2c:	05206303 	streq	r6, [r0, #-771]!	; 0xfffffcfd
    2f30:	16030624 	strne	r0, [r3], -r4, lsr #12
    2f34:	13250520 			; <UNDEFINED> instruction: 0x13250520
    2f38:	05154305 	ldreq	r4, [r5, #-773]	; 0xfffffcfb
    2f3c:	05051409 	streq	r1, [r5, #-1033]	; 0xfffffbf7
    2f40:	002e1306 	eoreq	r1, lr, r6, lsl #6
    2f44:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    2f48:	00020500 	andeq	r0, r2, r0, lsl #10
    2f4c:	03000000 	movweq	r0, #0
    2f50:	05010787 	streq	r0, [r1, #-1927]	; 0xfffff879
    2f54:	4f051309 	svcmi	0x00051309
    2f58:	14090514 	strne	r0, [r9], #-1300	; 0xfffffaec
    2f5c:	01060b05 	tsteq	r6, r5, lsl #22
    2f60:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    2f64:	051b0104 	ldreq	r0, [fp, #-260]	; 0xfffffefc
    2f68:	04020022 	streq	r0, [r2], #-34	; 0xffffffde
    2f6c:	0d053301 	stceq	3, cr3, [r5, #-4]
    2f70:	17053106 	strne	r3, [r5, -r6, lsl #2]
    2f74:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
    2f78:	0530060d 	ldreq	r0, [r0, #-1549]!	; 0xfffff9f3
    2f7c:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    2f80:	05220611 	streq	r0, [r2, #-1553]!	; 0xfffff9ef
    2f84:	0501063e 	streq	r0, [r1, #-1598]	; 0xfffff9c2
    2f88:	05220631 	streq	r0, [r2, #-1585]!	; 0xfffff9cf
    2f8c:	73030617 	movwvc	r0, #13847	; 0x3617
    2f90:	03050520 	movweq	r0, #21792	; 0x5520
    2f94:	1705201d 	smladne	r5, sp, r0, r2
    2f98:	05206303 	streq	r6, [r0, #-771]!	; 0xfffffcfd
    2f9c:	16030624 	strne	r0, [r3], -r4, lsr #12
    2fa0:	13250520 			; <UNDEFINED> instruction: 0x13250520
    2fa4:	05153d05 	ldreq	r3, [r5, #-3333]	; 0xfffff2fb
    2fa8:	05051409 	streq	r1, [r5, #-1033]	; 0xfffffbf7
    2fac:	00201306 	eoreq	r1, r0, r6, lsl #6
    2fb0:	01050101 	tsteq	r5, r1, lsl #2
    2fb4:	00020500 	andeq	r0, r2, r0, lsl #10
    2fb8:	03000000 	movweq	r0, #0
    2fbc:	060107ae 	streq	r0, [r1], -lr, lsr #15
    2fc0:	06050501 	streq	r0, [r5], -r1, lsl #10
    2fc4:	05131367 	ldreq	r1, [r3, #-871]	; 0xfffffc99
    2fc8:	05100610 	ldreq	r0, [r0, #-1552]	; 0xfffff9f0
    2fcc:	1903062b 	stmdbne	r3, {r0, r1, r3, r5, r9, sl}
    2fd0:	1615052e 	ldrne	r0, [r5], -lr, lsr #10
    2fd4:	01062705 	tsteq	r6, r5, lsl #14
    2fd8:	22061505 	andcs	r1, r6, #20971520	; 0x1400000
    2fdc:	01062605 	tsteq	r6, r5, lsl #12
    2fe0:	5a061505 	bpl	1883fc <__RAM_SIZE+0x883fc>
    2fe4:	01062005 	tsteq	r6, r5
    2fe8:	05201705 	streq	r1, [r0, #-1797]!	; 0xfffff8fb
    2fec:	05220619 	streq	r0, [r2, #-1561]!	; 0xfffff9e7
    2ff0:	0501061b 	streq	r0, [r1, #-1563]	; 0xfffff9e5
    2ff4:	04020041 	streq	r0, [r2], #-65	; 0xffffffbf
    2ff8:	1e052e01 	cdpne	14, 0, cr2, cr5, cr1, {0}
    2ffc:	22052706 	andcs	r2, r5, #1572864	; 0x180000
    3000:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    3004:	35052e20 	strcc	r2, [r5, #-3616]	; 0xfffff1e0
    3008:	20290306 	eorcs	r0, r9, r6, lsl #6
    300c:	28031105 	stmdacs	r3, {r0, r2, r8, ip}
    3010:	30380501 	eorscc	r0, r8, r1, lsl #10
    3014:	05141105 	ldreq	r1, [r4, #-261]	; 0xfffffefb
    3018:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    301c:	00d30301 	sbcseq	r0, r3, r1, lsl #6
    3020:	061d0520 	ldreq	r0, [sp], -r0, lsr #10
    3024:	2e7edd03 	cdpcs	13, 7, cr13, cr14, cr3, {0}
    3028:	0b031905 	bleq	c9444 <__HEAP_SIZE+0xc8444>
    302c:	061d053c 			; <UNDEFINED> instruction: 0x061d053c
    3030:	201b0501 	andscs	r0, fp, r1, lsl #10
    3034:	03061e05 	movweq	r1, #28165	; 0x6e05
    3038:	2005200f 	andcs	r2, r5, pc
    303c:	1d050106 	stfnes	f0, [r5, #-24]	; 0xffffffe8
    3040:	2e063406 	cdpcs	4, 0, cr3, cr6, cr6, {0}
    3044:	206d0306 	rsbcs	r0, sp, r6, lsl #6
    3048:	01062105 	tsteq	r6, r5, lsl #2
    304c:	2e1f052e 	cfmul64cs	mvdx0, mvdx15, mvdx14
    3050:	34062105 	strcc	r2, [r6], #-261	; 0xfffffefb
    3054:	15053c06 	strne	r3, [r5, #-3078]	; 0xfffff3fa
    3058:	00c50306 	sbceq	r0, r5, r6, lsl #6
    305c:	32360501 	eorscc	r0, r6, #4194304	; 0x400000
    3060:	05134305 	ldreq	r4, [r3, #-773]	; 0xfffffcfb
    3064:	1c051415 	cfstrsne	mvf1, [r5], {21}
    3068:	15050106 	strne	r0, [r5, #-262]	; 0xfffffefa
    306c:	053d3406 	ldreq	r3, [sp, #-1030]!	; 0xfffffbfa
    3070:	05010623 	streq	r0, [r1, #-1571]	; 0xfffff9dd
    3074:	04020009 	streq	r0, [r2], #-9
    3078:	0f030601 	svceq	0x00030601
    307c:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    3080:	11054a04 	tstne	r5, r4, lsl #20
    3084:	3d4a1e03 	stclcc	14, cr1, [sl, #-12]
    3088:	01061a05 	tsteq	r6, r5, lsl #20
    308c:	03065705 	movweq	r5, #26373	; 0x6705
    3090:	052e7ec1 	streq	r7, [lr, #-3777]!	; 0xfffff13f
    3094:	6405141c 	strvs	r1, [r5], #-1052	; 0xfffffbe4
    3098:	135b0513 	cmpne	fp, #79691776	; 0x4c00000
    309c:	05156e05 	ldreq	r6, [r5, #-3589]	; 0xfffff1fb
    30a0:	09051605 	stmdbeq	r5, {r0, r2, r9, sl, ip}
    30a4:	340d0514 	strcc	r0, [sp], #-1300	; 0xfffffaec
    30a8:	01061a05 	tsteq	r6, r5, lsl #20
    30ac:	05203705 	streq	r3, [r0, #-1797]!	; 0xfffff8fb
    30b0:	4405200f 	strmi	r2, [r5], #-15
    30b4:	01040200 	mrseq	r0, R12_usr
    30b8:	0611052e 	ldreq	r0, [r1], -lr, lsr #10
    30bc:	2e00ec03 	cdpcs	12, 0, cr14, cr0, cr3, {0}
    30c0:	01062205 	tsteq	r6, r5, lsl #4
    30c4:	05201305 	streq	r1, [r0, #-773]!	; 0xfffffcfb
    30c8:	0d030616 	stceq	6, cr0, [r3, #-88]	; 0xffffffa8
    30cc:	0618052e 	ldreq	r0, [r8], -lr, lsr #10
    30d0:	062d0501 	strteq	r0, [sp], -r1, lsl #10
    30d4:	052e0a03 	streq	r0, [lr, #-2563]!	; 0xfffff5fd
    30d8:	2f331609 	svccs	0x00331609
    30dc:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    30e0:	02006603 	andeq	r6, r0, #3145728	; 0x300000
    30e4:	00660604 	rsbeq	r0, r6, r4, lsl #12
    30e8:	31060402 	tstcc	r6, r2, lsl #8
    30ec:	02000d05 	andeq	r0, r0, #320	; 0x140
    30f0:	01060604 	tsteq	r6, r4, lsl #12
    30f4:	02000b05 	andeq	r0, r0, #5120	; 0x1400
    30f8:	054a0604 	strbeq	r0, [sl, #-1540]	; 0xfffff9fc
    30fc:	0522060d 	streq	r0, [r2, #-1549]!	; 0xfffff9f3
    3100:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    3104:	37053c0f 	strcc	r3, [r5, -pc, lsl #24]
    3108:	11053006 	tstne	r5, r6
    310c:	05435f13 	strbeq	r5, [r3, #-3859]	; 0xfffff0ed
    3110:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    3114:	15052e13 	strne	r2, [r5, #-3603]	; 0xfffff1ed
    3118:	0d053006 	stceq	0, cr3, [r5, #-24]	; 0xffffffe8
    311c:	3d3c0d03 	ldccc	13, cr0, [ip, #-12]!
    3120:	01061605 	tsteq	r6, r5, lsl #12
    3124:	30062e05 	andcc	r2, r6, r5, lsl #28
    3128:	05133b05 	ldreq	r3, [r3, #-2821]	; 0xfffff4fb
    312c:	1405140d 	strne	r1, [r5], #-1037	; 0xfffffbf3
    3130:	02020106 	andeq	r0, r2, #-2147483647	; 0x80000001
    3134:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    3138:	02050005 	andeq	r0, r5, #5
    313c:	00000000 	andeq	r0, r0, r0
    3140:	0104e603 	tsteq	r4, r3, lsl #12
    3144:	05130905 	ldreq	r0, [r3, #-2309]	; 0xfffff6fb
    3148:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
    314c:	0d051f05 	stceq	15, cr1, [r5, #-20]	; 0xffffffec
    3150:	33052706 	movwcc	r2, #22278	; 0x5706
    3154:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    3158:	25052f06 	strcs	r2, [r5, #-3846]	; 0xfffff0fa
    315c:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    3160:	3b052306 	blcc	14bd80 <__RAM_SIZE+0x4bd80>
    3164:	2c050106 	stfcss	f0, [r5], {6}
    3168:	0d052206 	sfmeq	f2, 4, [r5, #-24]	; 0xffffffe8
    316c:	06160515 			; <UNDEFINED> instruction: 0x06160515
    3170:	06270501 	strteq	r0, [r7], -r1, lsl #10
    3174:	0605054e 	streq	r0, [r5], -lr, asr #10
    3178:	01022014 	tsteq	r2, r4, lsl r0
    317c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    3180:	02050005 	andeq	r0, r5, #5
    3184:	00000000 	andeq	r0, r0, r0
    3188:	01058403 	tsteq	r5, r3, lsl #8
    318c:	09050106 	stmdbeq	r5, {r1, r2, r8}
    3190:	05132f06 	ldreq	r2, [r3, #-3846]	; 0xfffff0fa
    3194:	09051434 	stmdbeq	r5, {r2, r4, r5, sl, ip}
    3198:	06150514 			; <UNDEFINED> instruction: 0x06150514
    319c:	09052e01 	stmdbeq	r5, {r0, r9, sl, fp, sp}
    31a0:	33053d06 	movwcc	r3, #23814	; 0x5d06
    31a4:	14090530 	strne	r0, [r9], #-1328	; 0xfffffad0
    31a8:	13060505 	movwne	r0, #25861	; 0x6505
    31ac:	0101002e 	tsteq	r1, lr, lsr #32
    31b0:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    31b4:	00000002 	andeq	r0, r0, r2
    31b8:	05990300 	ldreq	r0, [r9, #768]	; 0x300
    31bc:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    31c0:	133d0609 	teqne	sp, #9437184	; 0x900000
    31c4:	05144905 	ldreq	r4, [r4, #-2309]	; 0xfffff6fb
    31c8:	05141609 	ldreq	r1, [r4, #-1545]	; 0xfffff9f7
    31cc:	3c010615 	stccc	6, cr0, [r1], {21}
    31d0:	09052e20 	stmdbeq	r5, {r5, r9, sl, fp, sp}
    31d4:	39052106 	stmdbcc	r5, {r1, r2, r8, sp}
    31d8:	14090530 	strne	r0, [r9], #-1328	; 0xfffffad0
    31dc:	13060505 	movwne	r0, #25861	; 0x6505
    31e0:	0101003c 	tsteq	r1, ip, lsr r0
    31e4:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    31e8:	00000002 	andeq	r0, r0, r2
    31ec:	05f40300 	ldrbeq	r0, [r4, #768]!	; 0x300
    31f0:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    31f4:	132f0609 			; <UNDEFINED> instruction: 0x132f0609
    31f8:	05143605 	ldreq	r3, [r4, #-1541]	; 0xfffff9fb
    31fc:	09051420 	stmdbeq	r5, {r5, sl, ip}
    3200:	0622051a 			; <UNDEFINED> instruction: 0x0622051a
    3204:	20330501 	eorscs	r0, r3, r1, lsl #10
    3208:	052e0b05 	streq	r0, [lr, #-2821]!	; 0xfffff4fb
    320c:	2e1d0315 	mrccs	3, 0, r0, cr13, cr5, {0}
    3210:	05280505 	streq	r0, [r8, #-1285]!	; 0xfffffafb
    3214:	5d030631 	stcpl	6, cr0, [r3, #-196]	; 0xffffff3c
    3218:	190d0520 	stmdbne	sp, {r5, r8, sl}
    321c:	01062405 	tsteq	r6, r5, lsl #8
    3220:	05203b05 	streq	r3, [r0, #-2821]!	; 0xfffff4fb
    3224:	0531060d 	ldreq	r0, [r1, #-1549]!	; 0xfffff9f3
    3228:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    322c:	200b0315 	andcs	r0, fp, r5, lsl r3
    3230:	28063805 	stmdacs	r6, {r0, r2, fp, ip, sp}
    3234:	14090515 	strne	r0, [r9], #-1301	; 0xfffffaeb
    3238:	01061005 	tsteq	r6, r5
    323c:	03061105 	movweq	r1, #24837	; 0x6105
    3240:	1a05206c 	bne	14b3f8 <__RAM_SIZE+0x4b3f8>
    3244:	15050106 	strne	r0, [r5, #-262]	; 0xfffffefa
    3248:	0002025f 	andeq	r0, r2, pc, asr r2
    324c:	01050101 	tsteq	r5, r1, lsl #2
    3250:	00020500 	andeq	r0, r2, r0, lsl #10
    3254:	03000000 	movweq	r0, #0
    3258:	06010988 	streq	r0, [r1], -r8, lsl #19
    325c:	06050501 	streq	r0, [r5], -r1, lsl #10
    3260:	05131367 	ldreq	r1, [r3, #-871]	; 0xfffffc99
    3264:	1c05146b 	cfstrsne	mvf1, [r5], {107}	; 0x6b
    3268:	13640514 	cmnne	r4, #20, 10	; 0x5000000
    326c:	05135b05 	ldreq	r5, [r3, #-2821]	; 0xfffff4fb
    3270:	0110032f 	tsteq	r0, pc, lsr #6
    3274:	0a030505 	beq	c4690 <__HEAP_SIZE+0xc3690>
    3278:	062e0501 	strteq	r0, [lr], -r1, lsl #10
    327c:	09052e01 	stmdbeq	r5, {r0, r9, sl, fp, sp}
    3280:	16052206 	strne	r2, [r5], -r6, lsl #4
    3284:	33050106 	movwcc	r0, #20742	; 0x5106
    3288:	200b0520 	andcs	r0, fp, r0, lsr #10
    328c:	02004005 	andeq	r4, r0, #5
    3290:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
    3294:	00f80315 	rscseq	r0, r8, r5, lsl r3
    3298:	0605052e 	streq	r0, [r5], -lr, lsr #10
    329c:	3e340523 	cdpcc	5, 3, cr0, cr4, cr3, {1}
    32a0:	05140505 	ldreq	r0, [r4, #-1285]	; 0xfffffafb
    32a4:	05130601 	ldreq	r0, [r3, #-1537]	; 0xfffff9ff
    32a8:	8203060d 	andhi	r0, r3, #13631488	; 0xd00000
    32ac:	1a053c7f 	bne	1524b0 <__RAM_SIZE+0x524b0>
    32b0:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    32b4:	1f054b06 	svcne	0x00054b06
    32b8:	30050106 	andcc	r0, r5, r6, lsl #2
    32bc:	0d053006 	stceq	0, cr3, [r5, #-24]	; 0xffffffe8
    32c0:	06160519 			; <UNDEFINED> instruction: 0x06160519
    32c4:	0d053c01 	stceq	12, cr3, [r5, #-4]
    32c8:	0f053206 	svceq	0x00053206
    32cc:	15050106 	strne	r0, [r5, #-262]	; 0xfffffefa
    32d0:	20054006 	andcs	r4, r5, r6
    32d4:	17050106 	strne	r0, [r5, -r6, lsl #2]
    32d8:	06190520 	ldreq	r0, [r9], -r0, lsr #10
    32dc:	061b0522 	ldreq	r0, [fp], -r2, lsr #10
    32e0:	00410501 	subeq	r0, r1, r1, lsl #10
    32e4:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    32e8:	43061e05 	movwmi	r1, #28165	; 0x6e05
    32ec:	01062205 	tsteq	r6, r5, lsl #4
    32f0:	053c2005 	ldreq	r2, [ip, #-5]!
    32f4:	0525061d 	streq	r0, [r5, #-1565]!	; 0xfffff9e3
    32f8:	0501061f 	streq	r0, [r1, #-1567]	; 0xfffff9e1
    32fc:	053e0621 	ldreq	r0, [lr, #-1569]!	; 0xfffff9df
    3300:	2001063c 	andcs	r0, r1, ip, lsr r6
    3304:	03061905 	movweq	r1, #26885	; 0x6905
    3308:	1d053c0e 	stcne	12, cr3, [r5, #-56]	; 0xffffffc8
    330c:	1b050106 	blne	14372c <__RAM_SIZE+0x4372c>
    3310:	03150520 	tsteq	r5, #32, 10	; 0x8000000
    3314:	202000c1 	eorcs	r0, r0, r1, asr #1
    3318:	03061d05 	movweq	r1, #27909	; 0x6d05
    331c:	21052041 	tstcs	r5, r1, asr #32
    3320:	1f050106 	svcne	0x00050106
    3324:	0621054a 	strteq	r0, [r1], -sl, asr #10
    3328:	06230524 	strteq	r0, [r3], -r4, lsr #10
    332c:	06250501 	strteq	r0, [r5], -r1, lsl #10
    3330:	0640053e 			; <UNDEFINED> instruction: 0x0640053e
    3334:	11052001 	tstne	r5, r1
    3338:	3c360306 	ldccc	3, cr0, [r6], #-24	; 0xffffffe8
    333c:	02002e01 	andeq	r2, r0, #1, 28
    3340:	002e0104 	eoreq	r0, lr, r4, lsl #2
    3344:	01010402 	tsteq	r1, r2, lsl #8
    3348:	01040200 	mrseq	r0, R12_usr
    334c:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    3350:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
    3354:	04020015 	streq	r0, [r2], #-21	; 0xffffffeb
    3358:	02003101 	andeq	r3, r0, #1073741824	; 0x40000000
    335c:	20200104 	eorcs	r0, r0, r4, lsl #2
    3360:	20202020 	eorcs	r2, r0, r0, lsr #32
    3364:	20202020 	eorcs	r2, r0, r0, lsr #32
    3368:	02202020 	eoreq	r2, r0, #32
    336c:	01010001 	tsteq	r1, r1
    3370:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    3374:	00000002 	andeq	r0, r0, r2
    3378:	0ab20300 	beq	fec83f80 <__StackTop+0xc6b83f80>
    337c:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    3380:	133d0605 	teqne	sp, #5242880	; 0x500000
    3384:	14460513 	strbne	r0, [r6], #-1299	; 0xfffffaed
    3388:	051a1c05 	ldreq	r1, [sl, #-3077]	; 0xfffff3fb
    338c:	7b05162d 	blvc	148c48 <__RAM_SIZE+0x48c48>
    3390:	032f0517 			; <UNDEFINED> instruction: 0x032f0517
    3394:	05050110 	streq	r0, [r5, #-272]	; 0xfffffef0
    3398:	062e0517 			; <UNDEFINED> instruction: 0x062e0517
    339c:	09052e01 	stmdbeq	r5, {r0, r9, sl, fp, sp}
    33a0:	1b052206 	blne	14bbc0 <__RAM_SIZE+0x4bbc0>
    33a4:	09050106 	stmdbeq	r5, {r1, r2, r8}
    33a8:	28052506 	stmdacs	r5, {r1, r2, r8, sl, sp}
    33ac:	0b050106 	bleq	1437cc <__RAM_SIZE+0x437cc>
    33b0:	060d0520 	streq	r0, [sp], -r0, lsr #10
    33b4:	061a0530 			; <UNDEFINED> instruction: 0x061a0530
    33b8:	06300501 	ldrteq	r0, [r0], -r1, lsl #10
    33bc:	1a0d053e 	bne	3448bc <__RAM_SIZE+0x2448bc>
    33c0:	01062a05 	tsteq	r6, r5, lsl #20
    33c4:	05202805 	streq	r2, [r0, #-2053]!	; 0xfffff7fb
    33c8:	0524060d 	streq	r0, [r4, #-1549]!	; 0xfffff9f3
    33cc:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    33d0:	05400615 	strbeq	r0, [r0, #-1557]	; 0xfffff9eb
    33d4:	05010620 	streq	r0, [r1, #-1568]	; 0xfffff9e0
    33d8:	19052017 	stmdbne	r5, {r0, r1, r2, r4, sp}
    33dc:	1d052206 	sfmne	f2, 4, [r5, #-24]	; 0xffffffe8
    33e0:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    33e4:	1d052e1b 	stcne	14, cr2, [r5, #-108]	; 0xffffff94
    33e8:	1f052506 	svcne	0x00052506
    33ec:	21050106 	tstcs	r5, r6, lsl #2
    33f0:	3c052206 	sfmcc	f2, 4, [r5], {6}
    33f4:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    33f8:	0e030619 	mcreq	6, 0, r0, cr3, cr9, {0}
    33fc:	061d052e 	ldreq	r0, [sp], -lr, lsr #10
    3400:	201b0501 	andscs	r0, fp, r1, lsl #10
    3404:	3e031505 	cfsh32cc	mvfx1, mvfx3, #5
    3408:	1d052020 	stcne	0, cr2, [r5, #-128]	; 0xffffff80
    340c:	20440306 	subcs	r0, r4, r6, lsl #6
    3410:	01062105 	tsteq	r6, r5, lsl #2
    3414:	2e1f052e 	cfmul64cs	mvdx0, mvdx15, mvdx14
    3418:	24062105 	strcs	r2, [r6], #-261	; 0xfffffefb
    341c:	01062305 	tsteq	r6, r5, lsl #6
    3420:	22062505 	andcs	r2, r6, #20971520	; 0x1400000
    3424:	01064005 	tsteq	r6, r5
    3428:	06110520 	ldreq	r0, [r1], -r0, lsr #10
    342c:	012e3303 			; <UNDEFINED> instruction: 0x012e3303
    3430:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    3434:	02002e01 	andeq	r2, r0, #1, 28
    3438:	00010104 	andeq	r0, r1, r4, lsl #2
    343c:	06010402 	streq	r0, [r1], -r2, lsl #8
    3440:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    3444:	15052001 	strne	r2, [r5, #-1]
    3448:	01040200 	mrseq	r0, R12_usr
    344c:	04020031 	streq	r0, [r2], #-49	; 0xffffffcf
    3450:	02002001 	andeq	r2, r0, #1
    3454:	17200104 	strne	r0, [r0, -r4, lsl #2]!
    3458:	06050520 	streq	r0, [r5], -r0, lsr #10
    345c:	3e2d0515 	mcrcc	5, 1, r0, cr13, cr5, {0}
    3460:	05140505 	ldreq	r0, [r4, #-1285]	; 0xfffffafb
    3464:	05130601 	ldreq	r0, [r3, #-1537]	; 0xfffff9ff
    3468:	2e730315 	mrccs	3, 3, r0, cr3, cr5, {0}
    346c:	20202020 	eorcs	r2, r0, r0, lsr #32
    3470:	20202020 	eorcs	r2, r0, r0, lsr #32
    3474:	00010220 	andeq	r0, r1, r0, lsr #4
    3478:	01050101 	tsteq	r5, r1, lsl #2
    347c:	98020500 	stmdals	r2, {r8, sl}
    3480:	03100022 	tsteq	r0, #34	; 0x22
    3484:	06010be0 	streq	r0, [r1], -r0, ror #23
    3488:	06050501 	streq	r0, [r5], -r1, lsl #10
    348c:	05131359 	ldreq	r1, [r3, #-857]	; 0xfffffca7
    3490:	05100610 	ldreq	r0, [r0, #-1552]	; 0xfffff9f0
    3494:	1f030611 	svcne	0x00030611
    3498:	4b2e052e 	blmi	b84958 <__RAM_SIZE+0xa84958>
    349c:	05131105 	ldreq	r1, [r3, #-261]	; 0xfffffefb
    34a0:	0501062e 	streq	r0, [r1, #-1582]	; 0xfffff9d2
    34a4:	1105202c 	tstne	r5, ip, lsr #32
    34a8:	15052506 	strne	r2, [r5, #-1286]	; 0xfffffafa
    34ac:	13050106 	movwne	r0, #20742	; 0x5106
    34b0:	062d0520 	strteq	r0, [sp], -r0, lsr #10
    34b4:	05200d03 	streq	r0, [r0, #-3331]!	; 0xfffff2fd
    34b8:	34051511 	strcc	r1, [r5], #-1297	; 0xfffffaef
    34bc:	14110530 	ldrne	r0, [r1], #-1328	; 0xfffffad0
    34c0:	01061805 	tsteq	r6, r5, lsl #16
    34c4:	03010520 	movweq	r0, #5408	; 0x1520
    34c8:	050100d5 	streq	r0, [r1, #-213]	; 0xffffff2b
    34cc:	99030615 	stmdbls	r3, {r0, r2, r4, r9, sl}
    34d0:	19052e7f 	stmdbne	r5, {r0, r1, r2, r3, r4, r5, r6, r9, sl, fp, sp}
    34d4:	17050106 	strne	r0, [r5, -r6, lsl #2]
    34d8:	0619054a 	ldreq	r0, [r9], -sl, asr #10
    34dc:	03150530 	tsteq	r5, #48, 10	; 0xc000000
    34e0:	39053c18 	stmdbcc	r5, {r3, r4, sl, fp, ip, sp}
    34e4:	13400530 	movtne	r0, #1328	; 0x530
    34e8:	05141505 	ldreq	r1, [r4, #-1285]	; 0xfffffafb
    34ec:	0501061c 	streq	r0, [r1, #-1564]	; 0xfffff9e4
    34f0:	3d340615 	ldccc	6, cr0, [r4, #-84]!	; 0xffffffac
    34f4:	01062305 	tsteq	r6, r5, lsl #6
    34f8:	0009052e 	andeq	r0, r9, lr, lsr #10
    34fc:	06010402 	streq	r0, [r1], -r2, lsl #8
    3500:	00010f03 	andeq	r0, r1, r3, lsl #30
    3504:	4a040402 	bmi	104514 <__RAM_SIZE+0x4514>
    3508:	1a031105 	bne	c7924 <__HEAP_SIZE+0xc6924>
    350c:	1a053d4a 	bne	152a3c <__RAM_SIZE+0x52a3c>
    3510:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    3514:	053d4306 	ldreq	r4, [sp, #-774]!	; 0xfffffcfa
    3518:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    351c:	0530060d 	ldreq	r0, [r0, #-1549]!	; 0xfffff9f3
    3520:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    3524:	3f053c0f 	svccc	0x00053c0f
    3528:	7f820306 	svcvc	0x00820306
    352c:	1520052e 	strne	r0, [r0, #-1326]!	; 0xfffffad2
    3530:	05166705 	ldreq	r6, [r6, #-1797]	; 0xfffff8fb
    3534:	0505176e 	streq	r1, [r5, #-1902]	; 0xfffff892
    3538:	14090516 	strne	r0, [r9], #-1302	; 0xfffffaea
    353c:	05300d05 	ldreq	r0, [r0, #-3333]!	; 0xfffff2fb
    3540:	0501061f 	streq	r0, [r1, #-1567]	; 0xfffff9e1
    3544:	0524060d 	streq	r0, [r4, #-1549]!	; 0xfffff9f3
    3548:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    354c:	22030611 	andcs	r0, r3, #17825792	; 0x1100000
    3550:	0622052e 	strteq	r0, [r2], -lr, lsr #10
    3554:	20130501 	andscs	r0, r3, r1, lsl #10
    3558:	03061605 	movweq	r1, #26117	; 0x6605
    355c:	18052e0b 	stmdane	r5, {r0, r1, r3, r9, sl, fp, sp}
    3560:	2d050106 	stfcss	f0, [r5, #-24]	; 0xffffffe8
    3564:	2e0a0306 	cdpcs	3, 0, cr0, cr10, cr6, {0}
    3568:	33160905 	tstcc	r6, #81920	; 0x14000
    356c:	02002e2f 	andeq	r2, r0, #752	; 0x2f0
    3570:	00660304 	rsbeq	r0, r6, r4, lsl #6
    3574:	66060402 	strvs	r0, [r6], -r2, lsl #8
    3578:	06040200 	streq	r0, [r4], -r0, lsl #4
    357c:	000d0531 	andeq	r0, sp, r1, lsr r5
    3580:	06060402 	streq	r0, [r6], -r2, lsl #8
    3584:	000b0501 	andeq	r0, fp, r1, lsl #10
    3588:	4a060402 	bmi	184598 <__RAM_SIZE+0x84598>
    358c:	32060d05 	andcc	r0, r6, #320	; 0x140
    3590:	01061105 	tsteq	r6, r5, lsl #2
    3594:	053c0f05 	ldreq	r0, [ip, #-3845]!	; 0xfffff0fb
    3598:	0530063a 	ldreq	r0, [r0, #-1594]!	; 0xfffff9c6
    359c:	3e591311 	mrccc	3, 2, r1, cr9, cr1, {0}
    35a0:	01061505 	tsteq	r6, r5, lsl #10
    35a4:	052e1305 	streq	r1, [lr, #-773]!	; 0xfffffcfb
    35a8:	05300615 	ldreq	r0, [r0, #-1557]!	; 0xfffff9eb
    35ac:	1b030618 	blne	c4e14 <__HEAP_SIZE+0xc3e14>
    35b0:	0002023c 	andeq	r0, r2, ip, lsr r2
    35b4:	01050101 	tsteq	r5, r1, lsl #2
    35b8:	00020500 	andeq	r0, r2, r0, lsl #10
    35bc:	03000000 	movweq	r0, #0
    35c0:	06010cf5 			; <UNDEFINED> instruction: 0x06010cf5
    35c4:	06050501 	streq	r0, [r5], -r1, lsl #10
    35c8:	0513134b 	ldreq	r1, [r3, #-843]	; 0xfffffcb5
    35cc:	14051509 	strne	r1, [r5], #-1289	; 0xfffffaf7
    35d0:	10050106 	andne	r0, r5, r6, lsl #2
    35d4:	062e051b 			; <UNDEFINED> instruction: 0x062e051b
    35d8:	052e2403 	streq	r2, [lr, #-1027]!	; 0xfffffbfd
    35dc:	2e051611 	mcrcs	6, 0, r1, cr5, cr1, {0}
    35e0:	2c050106 	stfcss	f0, [r5], {6}
    35e4:	06150520 	ldreq	r0, [r5], -r0, lsr #10
    35e8:	06200524 	strteq	r0, [r0], -r4, lsr #10
    35ec:	20170501 	andscs	r0, r7, r1, lsl #10
    35f0:	28063105 	stmdacs	r6, {r0, r2, r8, ip, sp}
    35f4:	05191105 	ldreq	r1, [r9, #-261]	; 0xfffffefb
    35f8:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    35fc:	2d052013 	stccs	0, cr2, [r5, #-76]	; 0xffffffb4
    3600:	200d0306 	andcs	r0, sp, r6, lsl #6
    3604:	05151105 	ldreq	r1, [r5, #-261]	; 0xfffffefb
    3608:	1105303a 	tstne	r5, sl, lsr r0
    360c:	06180514 			; <UNDEFINED> instruction: 0x06180514
    3610:	01052001 	tsteq	r5, r1
    3614:	01018c03 	tsteq	r1, r3, lsl #24
    3618:	03061905 	movweq	r1, #26885	; 0x6905
    361c:	052e7ed5 	streq	r7, [lr, #-3797]!	; 0xfffff12b
    3620:	0501063e 	streq	r0, [r1, #-1598]	; 0xfffff9c2
    3624:	15052e3c 	strne	r2, [r5, #-3644]	; 0xfffff1c4
    3628:	2e0d0306 	cdpcs	3, 0, cr0, cr13, cr6, {0}
    362c:	01061905 	tsteq	r6, r5, lsl #18
    3630:	054a1705 	strbeq	r1, [sl, #-1797]	; 0xfffff8fb
    3634:	05300619 	ldreq	r0, [r0, #-1561]!	; 0xfffff9e7
    3638:	3c180315 	ldccc	3, cr0, [r8], {21}
    363c:	05303905 	ldreq	r3, [r0, #-2309]!	; 0xfffff6fb
    3640:	15051346 	strne	r1, [r5, #-838]	; 0xfffffcba
    3644:	061c0514 			; <UNDEFINED> instruction: 0x061c0514
    3648:	06150501 	ldreq	r0, [r5], -r1, lsl #10
    364c:	23053d34 	movwcs	r3, #23860	; 0x5d34
    3650:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
    3654:	04020009 	streq	r0, [r2], #-9
    3658:	0f030601 	svceq	0x00030601
    365c:	04020001 	streq	r0, [r2], #-1
    3660:	19054a04 	stmdbne	r5, {r2, r9, fp, lr}
    3664:	054a1103 	strbeq	r1, [sl, #-259]	; 0xfffffefd
    3668:	3405301d 	strcc	r3, [r5], #-29	; 0xffffffe3
    366c:	19050106 	stmdbne	r5, {r1, r2, r8}
    3670:	2e064c06 	cdpcs	12, 0, cr4, cr6, cr6, {0}
    3674:	03061105 	movweq	r1, #24837	; 0x6105
    3678:	053d2019 	ldreq	r2, [sp, #-25]!	; 0xffffffe7
    367c:	0501061a 	streq	r0, [r1, #-1562]	; 0xfffff9e6
    3680:	3d42060d 	stclcc	6, cr0, [r2, #-52]	; 0xffffffcc
    3684:	01061605 	tsteq	r6, r5, lsl #12
    3688:	34060d05 	strcc	r0, [r6], #-3333	; 0xfffff2fb
    368c:	01061105 	tsteq	r6, r5, lsl #2
    3690:	053c0f05 	ldreq	r0, [ip, #-3845]!	; 0xfffff0fb
    3694:	da03063b 	ble	c4f88 <__HEAP_SIZE+0xc3f88>
    3698:	20052e7e 	andcs	r2, r5, lr, ror lr
    369c:	162d0515 			; <UNDEFINED> instruction: 0x162d0515
    36a0:	05176e05 	ldreq	r6, [r7, #-3589]	; 0xfffff1fb
    36a4:	09051605 	stmdbeq	r5, {r0, r2, r9, sl, ip}
    36a8:	320d0514 	andcc	r0, sp, #20, 10	; 0x5000000
    36ac:	01061f05 	tsteq	r6, r5, lsl #30
    36b0:	24060d05 	strcs	r0, [r6], #-3333	; 0xfffff2fb
    36b4:	01060f05 	tsteq	r6, r5, lsl #30
    36b8:	03061105 	movweq	r1, #24837	; 0x6105
    36bc:	22052e31 	andcs	r2, r5, #784	; 0x310
    36c0:	13050106 	movwne	r0, #20742	; 0x5106
    36c4:	06160520 	ldreq	r0, [r6], -r0, lsr #10
    36c8:	052e0b03 	streq	r0, [lr, #-2819]!	; 0xfffff4fd
    36cc:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    36d0:	0a03062d 	beq	c4f8c <__HEAP_SIZE+0xc3f8c>
    36d4:	1609052e 	strne	r0, [r9], -lr, lsr #10
    36d8:	002e2f33 	eoreq	r2, lr, r3, lsr pc
    36dc:	66030402 	strvs	r0, [r3], -r2, lsl #8
    36e0:	06040200 	streq	r0, [r4], -r0, lsl #4
    36e4:	04020066 	streq	r0, [r2], #-102	; 0xffffff9a
    36e8:	0d053106 	stfeqs	f3, [r5, #-24]	; 0xffffffe8
    36ec:	06040200 	streq	r0, [r4], -r0, lsl #4
    36f0:	0b050106 	bleq	143b10 <__RAM_SIZE+0x43b10>
    36f4:	06040200 	streq	r0, [r4], -r0, lsl #4
    36f8:	060d054a 	streq	r0, [sp], -sl, asr #10
    36fc:	06110534 			; <UNDEFINED> instruction: 0x06110534
    3700:	3c0f0501 	cfstr32cc	mvfx0, [pc], {1}
    3704:	30063a05 	andcc	r3, r6, r5, lsl #20
    3708:	05161505 	ldreq	r1, [r6, #-1285]	; 0xfffffafb
    370c:	05010620 	streq	r0, [r1, #-1568]	; 0xfffff9e0
    3710:	31052017 	tstcc	r5, r7, lsl r0
    3714:	2e0a0306 	cdpcs	3, 0, cr0, cr10, cr6, {0}
    3718:	59171105 	ldmdbpl	r7, {r0, r2, r8, ip}
    371c:	0615053e 			; <UNDEFINED> instruction: 0x0615053e
    3720:	2e130501 	cfmul32cs	mvfx0, mvfx3, mvfx1
    3724:	30061505 	andcc	r1, r6, r5, lsl #10
    3728:	053c2003 	ldreq	r2, [ip, #-3]!
    372c:	05010617 	streq	r0, [r1, #-1559]	; 0xfffff9e9
    3730:	1b030635 	blne	c500c <__HEAP_SIZE+0xc400c>
    3734:	13420520 	movtne	r0, #9504	; 0x2520
    3738:	05141105 	ldreq	r1, [r4, #-261]	; 0xfffffefb
    373c:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    3740:	64030619 	strvs	r0, [r3], #-1561	; 0xfffff9e7
    3744:	301d052e 	andscc	r0, sp, lr, lsr #10
    3748:	06380519 			; <UNDEFINED> instruction: 0x06380519
    374c:	061d0501 	ldreq	r0, [sp], -r1, lsl #10
    3750:	064a0903 	strbeq	r0, [sl], -r3, lsl #18
    3754:	19052e20 	stmdbne	r5, {r5, r9, sl, fp, sp}
    3758:	03021406 	movweq	r1, #9222	; 0x2406
    375c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    3760:	02050005 	andeq	r0, r5, #5
    3764:	00000000 	andeq	r0, r0, r0
    3768:	0106b003 	tsteq	r6, r3
    376c:	09050106 	stmdbeq	r5, {r1, r2, r8}
    3770:	05133d06 	ldreq	r3, [r3, #-3334]	; 0xfffff2fa
    3774:	20051444 	andcs	r1, r5, r4, asr #8
    3778:	172d0514 			; <UNDEFINED> instruction: 0x172d0514
    377c:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    3780:	05010622 	streq	r0, [r1, #-1570]	; 0xfffff9de
    3784:	0b052033 	bleq	14b858 <__RAM_SIZE+0x4b858>
    3788:	060d052e 	streq	r0, [sp], -lr, lsr #10
    378c:	06170535 			; <UNDEFINED> instruction: 0x06170535
    3790:	060d0501 	streq	r0, [sp], -r1, lsl #10
    3794:	060f054f 	streq	r0, [pc], -pc, asr #10
    3798:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    379c:	06280522 	strteq	r0, [r8], -r2, lsr #10
    37a0:	203f0501 	eorscs	r0, pc, r1, lsl #10
    37a4:	32063c05 	andcc	r3, r6, #1280	; 0x500
    37a8:	05163805 	ldreq	r3, [r6, #-2053]	; 0xfffff7fb
    37ac:	10051409 	andne	r1, r5, r9, lsl #8
    37b0:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    37b4:	206a0306 	rsbcs	r0, sl, r6, lsl #6
    37b8:	01062405 	tsteq	r6, r5, lsl #8
    37bc:	05203b05 	streq	r3, [r0, #-2821]!	; 0xfffff4fb
    37c0:	052f060d 	streq	r0, [pc, #-1549]!	; 31bb <__HEAP_SIZE+0x21bb>
    37c4:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    37c8:	20160305 	andscs	r0, r6, r5, lsl #6
    37cc:	01010020 	tsteq	r1, r0, lsr #32
    37d0:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    37d4:	00000002 	andeq	r0, r0, r2
    37d8:	0ed70300 	cdpeq	3, 13, cr0, cr7, cr0, {0}
    37dc:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    37e0:	13590605 	cmpne	r9, #5242880	; 0x500000
    37e4:	10051313 	andne	r1, r5, r3, lsl r3
    37e8:	11050f06 	tstne	r5, r6, lsl #30
    37ec:	2e220306 	cdpcs	3, 2, cr0, cr2, cr6, {0}
    37f0:	01062805 	tsteq	r6, r5, lsl #16
    37f4:	22061105 	andcs	r1, r6, #1073741825	; 0x40000001
    37f8:	054b2b05 	strbeq	r2, [fp, #-2821]	; 0xfffff4fb
    37fc:	2e051511 	mcrcs	5, 0, r1, cr5, cr1, {0}
    3800:	11050106 	tstne	r5, r6, lsl #2
    3804:	15052406 	strne	r2, [r5, #-1030]	; 0xfffffbfa
    3808:	13050106 	movwne	r0, #20742	; 0x5106
    380c:	062d0520 	strteq	r0, [sp], -r0, lsr #10
    3810:	05200e03 	streq	r0, [r0, #-3587]!	; 0xfffff1fd
    3814:	31051511 	tstcc	r5, r1, lsl r5
    3818:	14110530 	ldrne	r0, [r1], #-1328	; 0xfffffad0
    381c:	01061805 	tsteq	r6, r5, lsl #16
    3820:	03010520 	movweq	r0, #5408	; 0x1520
    3824:	050100d6 	streq	r0, [r1, #-214]	; 0xffffff2a
    3828:	97030615 	smladls	r3, r5, r6, r0
    382c:	19052e7f 	stmdbne	r5, {r0, r1, r2, r3, r4, r5, r6, r9, sl, fp, sp}
    3830:	17050106 	strne	r0, [r5, -r6, lsl #2]
    3834:	0619054a 	ldreq	r0, [r9], -sl, asr #10
    3838:	03150531 	tsteq	r5, #205520896	; 0xc400000
    383c:	36053c18 			; <UNDEFINED> instruction: 0x36053c18
    3840:	133d0530 	teqne	sp, #48, 10	; 0xc000000
    3844:	05141505 	ldreq	r1, [r4, #-1285]	; 0xfffffafb
    3848:	0501061c 	streq	r0, [r1, #-1564]	; 0xfffff9e4
    384c:	3d350615 	ldccc	6, cr0, [r5, #-84]!	; 0xffffffac
    3850:	01062305 	tsteq	r6, r5, lsl #6
    3854:	0009052e 	andeq	r0, r9, lr, lsr #10
    3858:	06010402 	streq	r0, [r1], -r2, lsl #8
    385c:	00010f03 	andeq	r0, r1, r3, lsl #30
    3860:	4a040402 	bmi	104870 <__RAM_SIZE+0x4870>
    3864:	1a031105 	bne	c7c80 <__HEAP_SIZE+0xc6c80>
    3868:	1a053d4a 	bne	152d98 <__RAM_SIZE+0x52d98>
    386c:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    3870:	053d4306 	ldreq	r4, [sp, #-774]!	; 0xfffffcfa
    3874:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    3878:	0530060d 	ldreq	r0, [r0, #-1549]!	; 0xfffff9f3
    387c:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    3880:	3c053c0f 	stccc	12, cr3, [r5], {15}
    3884:	7efb0306 	cdpvc	3, 15, cr0, cr11, cr6, {0}
    3888:	1520052e 	strne	r0, [r0, #-1326]!	; 0xfffffad2
    388c:	05166705 	ldreq	r6, [r6, #-1797]	; 0xfffff8fb
    3890:	0505176e 	streq	r1, [r5, #-1902]	; 0xfffff892
    3894:	14090516 	strne	r0, [r9], #-1302	; 0xfffffaea
    3898:	05300d05 	ldreq	r0, [r0, #-3333]!	; 0xfffff2fb
    389c:	0501061f 	streq	r0, [r1, #-1567]	; 0xfffff9e1
    38a0:	0524060d 	streq	r0, [r4, #-1549]!	; 0xfffff9f3
    38a4:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    38a8:	28030611 	stmdacs	r3, {r0, r4, r9, sl}
    38ac:	0622052e 	strteq	r0, [r2], -lr, lsr #10
    38b0:	20130501 	andscs	r0, r3, r1, lsl #10
    38b4:	03061605 	movweq	r1, #26117	; 0x6605
    38b8:	18052e0b 	stmdane	r5, {r0, r1, r3, r9, sl, fp, sp}
    38bc:	2d050106 	stfcss	f0, [r5, #-24]	; 0xffffffe8
    38c0:	2e0b0306 	cdpcs	3, 0, cr0, cr11, cr6, {0}
    38c4:	33160905 	tstcc	r6, #81920	; 0x14000
    38c8:	02002e2f 	andeq	r2, r0, #752	; 0x2f0
    38cc:	00660304 	rsbeq	r0, r6, r4, lsl #6
    38d0:	66060402 	strvs	r0, [r6], -r2, lsl #8
    38d4:	06040200 	streq	r0, [r4], -r0, lsl #4
    38d8:	000d0531 	andeq	r0, sp, r1, lsr r5
    38dc:	06060402 	streq	r0, [r6], -r2, lsl #8
    38e0:	000b0501 	andeq	r0, fp, r1, lsl #10
    38e4:	4a060402 	bmi	1848f4 <__RAM_SIZE+0x848f4>
    38e8:	32060d05 	andcc	r0, r6, #320	; 0x140
    38ec:	01061105 	tsteq	r6, r5, lsl #2
    38f0:	053c0f05 	ldreq	r0, [ip, #-3845]!	; 0xfffff0fb
    38f4:	05300637 	ldreq	r0, [r0, #-1591]!	; 0xfffff9c9
    38f8:	3e591311 	mrccc	3, 2, r1, cr9, cr1, {0}
    38fc:	01061505 	tsteq	r6, r5, lsl #10
    3900:	052e1305 	streq	r1, [lr, #-773]!	; 0xfffffcfb
    3904:	05300615 	ldreq	r0, [r0, #-1557]!	; 0xfffff9eb
    3908:	1b030618 	blne	c5170 <__HEAP_SIZE+0xc4170>
    390c:	0002023c 	andeq	r0, r2, ip, lsr r2
    3910:	01050101 	tsteq	r5, r1, lsl #2
    3914:	00020500 	andeq	r0, r2, r0, lsl #10
    3918:	03000000 	movweq	r0, #0
    391c:	06010ff5 			; <UNDEFINED> instruction: 0x06010ff5
    3920:	06050501 	streq	r0, [r5], -r1, lsl #10
    3924:	05131359 	ldreq	r1, [r3, #-857]	; 0xfffffca7
    3928:	1c051453 	cfstrsne	mvf1, [r5], {83}	; 0x53
    392c:	135f0514 	cmpne	pc, #20, 10	; 0x5000000
    3930:	10032f05 	andne	r2, r3, r5, lsl #30
    3934:	17050501 	strne	r0, [r5, -r1, lsl #10]
    3938:	01062e05 	tsteq	r6, r5, lsl #28
    393c:	0609052e 	streq	r0, [r9], -lr, lsr #10
    3940:	061b0522 	ldreq	r0, [fp], -r2, lsr #10
    3944:	06090501 	streq	r0, [r9], -r1, lsl #10
    3948:	060b0523 	streq	r0, [fp], -r3, lsr #10
    394c:	03150501 	tsteq	r5, #4194304	; 0x400000
    3950:	3a052033 	bcc	14ba24 <__RAM_SIZE+0x4ba24>
    3954:	05052106 	streq	r2, [r5, #-262]	; 0xfffffefa
    3958:	3e300515 	mrccc	5, 1, r0, cr0, cr5, {0}
    395c:	05140505 	ldreq	r0, [r4, #-1285]	; 0xfffffafb
    3960:	05130601 	ldreq	r0, [r3, #-1537]	; 0xfffff9ff
    3964:	4603060d 	strmi	r0, [r3], -sp, lsl #12
    3968:	061a053c 			; <UNDEFINED> instruction: 0x061a053c
    396c:	06330501 	ldrteq	r0, [r3], -r1, lsl #10
    3970:	140d054c 	strne	r0, [sp], #-1356	; 0xfffffab4
    3974:	2f062e06 	svccs	0x00062e06
    3978:	01062a05 	tsteq	r6, r5, lsl #20
    397c:	05202805 	streq	r2, [r0, #-2053]!	; 0xfffff7fb
    3980:	0526060d 	streq	r0, [r6, #-1549]!	; 0xfffff9f3
    3984:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    3988:	053e0611 	ldreq	r0, [lr, #-1553]!	; 0xfffff9ef
    398c:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    3990:	15052013 	strne	r2, [r5, #-19]	; 0xffffffed
    3994:	20202003 	eorcs	r2, r0, r3
    3998:	20620306 	rsbcs	r0, r2, r6, lsl #6
    399c:	01061905 	tsteq	r6, r5, lsl #18
    39a0:	054a1705 	strbeq	r1, [sl, #-1797]	; 0xfffff8fb
    39a4:	05240619 	streq	r0, [r4, #-1561]!	; 0xfffff9e7
    39a8:	0501061b 	streq	r0, [r1, #-1563]	; 0xfffff9e5
    39ac:	053e061d 	ldreq	r0, [lr, #-1565]!	; 0xfffff9e3
    39b0:	20010638 	andcs	r0, r1, r8, lsr r6
    39b4:	03061105 	movweq	r1, #24837	; 0x6105
    39b8:	2e013c15 	mcrcs	12, 0, r3, cr1, cr5, {0}
    39bc:	01040200 	mrseq	r0, R12_usr
    39c0:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    39c4:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    39c8:	2e060104 	adfcss	f0, f6, f4
    39cc:	01040200 	mrseq	r0, R12_usr
    39d0:	0015052e 	andseq	r0, r5, lr, lsr #10
    39d4:	31010402 	tstcc	r1, r2, lsl #8
    39d8:	01040200 	mrseq	r0, R12_usr
    39dc:	20202020 	eorcs	r2, r0, r0, lsr #32
    39e0:	02202020 	eoreq	r2, r0, #32
    39e4:	01010001 	tsteq	r1, r1
    39e8:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    39ec:	00000002 	andeq	r0, r0, r2
    39f0:	10d80300 	sbcsne	r0, r8, r0, lsl #6
    39f4:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    39f8:	133d0605 	teqne	sp, #5242880	; 0x500000
    39fc:	35051313 	strcc	r1, [r5, #-787]	; 0xfffffced
    3a00:	141c0514 	ldrne	r0, [ip], #-1300	; 0xfffffaec
    3a04:	05135f05 	ldreq	r5, [r3, #-3845]	; 0xfffff0fb
    3a08:	2f05132d 	svccs	0x0005132d
    3a0c:	05011003 	streq	r1, [r1, #-3]
    3a10:	2e051705 	cdpcs	7, 0, cr1, cr5, cr5, {0}
    3a14:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
    3a18:	05230609 	streq	r0, [r3, #-1545]!	; 0xfffff9f7
    3a1c:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
    3a20:	1505200b 	strne	r2, [r5, #-11]
    3a24:	05200e03 	streq	r0, [r0, #-3587]!	; 0xfffff1fd
    3a28:	05210637 	streq	r0, [r1, #-1591]!	; 0xfffff9c9
    3a2c:	2d051505 	cfstr32cs	mvfx1, [r5, #-20]	; 0xffffffec
    3a30:	1405053e 	strne	r0, [r5], #-1342	; 0xfffffac2
    3a34:	13060105 	movwne	r0, #24837	; 0x6105
    3a38:	03063005 	movweq	r3, #24581	; 0x6005
    3a3c:	0d052e6b 	stceq	14, cr2, [r5, #-428]	; 0xfffffe54
    3a40:	06240516 			; <UNDEFINED> instruction: 0x06240516
    3a44:	060d0501 	streq	r0, [sp], -r1, lsl #10
    3a48:	062e0621 	strteq	r0, [lr], -r1, lsr #12
    3a4c:	062a052f 	strteq	r0, [sl], -pc, lsr #10
    3a50:	060d0501 	streq	r0, [sp], -r1, lsl #10
    3a54:	06150522 	ldreq	r0, [r5], -r2, lsr #10
    3a58:	01022001 	tsteq	r2, r1
    3a5c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    3a60:	02050001 	andeq	r0, r5, #1
    3a64:	00000000 	andeq	r0, r0, r0
    3a68:	01119503 	tsteq	r1, r3, lsl #10
    3a6c:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    3a70:	30052f06 	andcc	r2, r5, r6, lsl #30
    3a74:	141b0514 	ldrne	r0, [fp], #-1300	; 0xfffffaec
    3a78:	05140505 	ldreq	r0, [r4, #-1285]	; 0xfffffafb
    3a7c:	12053009 	andne	r3, r5, #9
    3a80:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    3a84:	33052206 	movwcc	r2, #20998	; 0x5206
    3a88:	14050530 	strne	r0, [r5], #-1328	; 0xfffffad0
    3a8c:	13060105 	movwne	r0, #24837	; 0x6105
    3a90:	0101002e 	tsteq	r1, lr, lsr #32
    3a94:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    3a98:	00000002 	andeq	r0, r0, r2
    3a9c:	11a90300 			; <UNDEFINED> instruction: 0x11a90300
    3aa0:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    3aa4:	132f0605 			; <UNDEFINED> instruction: 0x132f0605
    3aa8:	05143005 	ldreq	r3, [r4, #-5]
    3aac:	0505141c 	streq	r1, [r5, #-1052]	; 0xfffffbe4
    3ab0:	30090514 	andcc	r0, r9, r4, lsl r5
    3ab4:	01062d05 	tsteq	r6, r5, lsl #26
    3ab8:	05204105 	streq	r4, [r0, #-261]!	; 0xfffffefb
    3abc:	05052012 	streq	r2, [r5, #-18]	; 0xffffffee
    3ac0:	33052206 	movwcc	r2, #20998	; 0x5206
    3ac4:	14050530 	strne	r0, [r5], #-1328	; 0xfffffad0
    3ac8:	13060105 	movwne	r0, #24837	; 0x6105
    3acc:	0101002e 	tsteq	r1, lr, lsr #32
    3ad0:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    3ad4:	00000002 	andeq	r0, r0, r2
    3ad8:	11be0300 			; <UNDEFINED> instruction: 0x11be0300
    3adc:	13050501 	movwne	r0, #21761	; 0x5501
    3ae0:	14370513 	ldrtne	r0, [r7], #-1299	; 0xfffffaed
    3ae4:	05141c05 	ldreq	r1, [r4, #-3077]	; 0xfffff3fb
    3ae8:	0e051305 	cdpeq	3, 0, cr1, cr5, cr5, {0}
    3aec:	3a050106 	bcc	143f0c <__RAM_SIZE+0x43f0c>
    3af0:	05052206 	streq	r2, [r5, #-518]	; 0xfffffdfa
    3af4:	06010514 			; <UNDEFINED> instruction: 0x06010514
    3af8:	00010213 	andeq	r0, r1, r3, lsl r2
    3afc:	01050101 	tsteq	r5, r1, lsl #2
    3b00:	00020500 	andeq	r0, r2, r0, lsl #10
    3b04:	03000000 	movweq	r0, #0
    3b08:	060111ce 	streq	r1, [r1], -lr, asr #3
    3b0c:	06050501 	streq	r0, [r5], -r1, lsl #10
    3b10:	14260521 	strtne	r0, [r6], #-1313	; 0xfffffadf
    3b14:	05141c05 	ldreq	r1, [r4, #-3077]	; 0xfffff3fb
    3b18:	09051321 	stmdbeq	r5, {r0, r5, r8, r9, ip}
    3b1c:	05011203 	streq	r1, [r1, #-515]	; 0xfffffdfd
    3b20:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
    3b24:	01052e0b 	tsteq	r5, fp, lsl #28
    3b28:	05201203 	streq	r1, [r0, #-515]!	; 0xfffffdfd
    3b2c:	7003060d 	andvc	r0, r3, sp, lsl #12
    3b30:	32250520 	eorcc	r0, r5, #32, 10	; 0x8000000
    3b34:	0b031f05 	bleq	cb750 <__HEAP_SIZE+0xca750>
    3b38:	06010501 	streq	r0, [r1], -r1, lsl #10
    3b3c:	00010213 	andeq	r0, r1, r3, lsl r2
    3b40:	01050101 	tsteq	r5, r1, lsl #2
    3b44:	00020500 	andeq	r0, r2, r0, lsl #10
    3b48:	03000000 	movweq	r0, #0
    3b4c:	050112a7 	streq	r1, [r1, #-679]	; 0xfffffd59
    3b50:	50051331 	andpl	r1, r5, r1, lsr r3
    3b54:	14050514 	strne	r0, [r5], #-1300	; 0xfffffaec
    3b58:	13060105 	movwne	r0, #24837	; 0x6105
    3b5c:	00010220 	andeq	r0, r1, r0, lsr #4
    3b60:	01050101 	tsteq	r5, r1, lsl #2
    3b64:	00020500 	andeq	r0, r2, r0, lsl #10
    3b68:	03000000 	movweq	r0, #0
    3b6c:	050112b1 	streq	r1, [r1, #-689]	; 0xfffffd4f
    3b70:	4c05132f 	stcmi	3, cr1, [r5], {47}	; 0x2f
    3b74:	14050514 	strne	r0, [r5], #-1300	; 0xfffffaec
    3b78:	13060105 	movwne	r0, #24837	; 0x6105
    3b7c:	00010220 	andeq	r0, r1, r0, lsr #4
    3b80:	01050101 	tsteq	r5, r1, lsl #2
    3b84:	00020500 	andeq	r0, r2, r0, lsl #10
    3b88:	03000000 	movweq	r0, #0
    3b8c:	050114cb 	streq	r1, [r1, #-1227]	; 0xfffffb35
    3b90:	05131305 	ldreq	r1, [r3, #-773]	; 0xfffffcfb
    3b94:	1c051433 	cfstrsne	mvf1, [r5], {51}	; 0x33
    3b98:	14050514 	strne	r0, [r5], #-1300	; 0xfffffaec
    3b9c:	01061005 	tsteq	r6, r5
    3ba0:	05200705 	streq	r0, [r0, #-1797]!	; 0xfffff8fb
    3ba4:	24202211 	strtcs	r2, [r0], #-529	; 0xfffffdef
    3ba8:	23063505 	movwcs	r3, #25861	; 0x6505
    3bac:	05140505 	ldreq	r0, [r4, #-1285]	; 0xfffffafb
    3bb0:	02130601 	andseq	r0, r3, #1048576	; 0x100000
    3bb4:	01010001 	tsteq	r1, r1
    3bb8:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    3bbc:	00000002 	andeq	r0, r0, r2
    3bc0:	14f80300 	ldrbtne	r0, [r8], #768	; 0x300
    3bc4:	13050501 	movwne	r0, #21761	; 0x5501
    3bc8:	14320513 	ldrtne	r0, [r2], #-1299	; 0xfffffaed
    3bcc:	05141c05 	ldreq	r1, [r4, #-3077]	; 0xfffff3fb
    3bd0:	10051405 	andne	r1, r5, r5, lsl #8
    3bd4:	2e050106 	adfcss	f0, f5, f6
    3bd8:	20070520 	andcs	r0, r7, r0, lsr #10
    3bdc:	05341105 	ldreq	r1, [r4, #-261]!	; 0xfffffefb
    3be0:	05230634 	streq	r0, [r3, #-1588]!	; 0xfffff9cc
    3be4:	01051405 	tsteq	r5, r5, lsl #8
    3be8:	11051306 	tstne	r5, r6, lsl #6
    3bec:	20207603 	eorcs	r7, r0, r3, lsl #12
    3bf0:	01000102 	tsteq	r0, r2, lsl #2
    3bf4:	00050501 	andeq	r0, r5, r1, lsl #10
    3bf8:	23880205 	orrcs	r0, r8, #1342177280	; 0x50000000
    3bfc:	be031000 	cdplt	0, 0, cr1, cr3, cr0, {0}
    3c00:	01060118 	tsteq	r6, r8, lsl r1
    3c04:	4b060905 	blmi	186020 <__RAM_SIZE+0x86020>
    3c08:	05145d05 	ldreq	r5, [r4, #-3333]	; 0xfffff2fb
    3c0c:	01100309 	tsteq	r0, r9, lsl #6
    3c10:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    3c14:	02006603 	andeq	r6, r0, #3145728	; 0x300000
    3c18:	00660604 	rsbeq	r0, r6, r4, lsl #12
    3c1c:	30060402 	andcc	r0, r6, r2, lsl #8
    3c20:	02001405 	andeq	r1, r0, #83886080	; 0x5000000
    3c24:	01060604 	tsteq	r6, r4, lsl #12
    3c28:	02000b05 	andeq	r0, r0, #5120	; 0x1400
    3c2c:	05200604 	streq	r0, [r0, #-1540]!	; 0xfffff9fc
    3c30:	05270625 	streq	r0, [r7, #-1573]!	; 0xfffff9db
    3c34:	35051509 	strcc	r1, [r5, #-1289]	; 0xfffffaf7
    3c38:	0605053e 			; <UNDEFINED> instruction: 0x0605053e
    3c3c:	00090513 	andeq	r0, r9, r3, lsl r5
    3c40:	06010402 	streq	r0, [r1], -r2, lsl #8
    3c44:	00207103 	eoreq	r7, r0, r3, lsl #2
    3c48:	4a040402 	bmi	104c58 <__RAM_SIZE+0x4c58>
    3c4c:	024f0d05 	subeq	r0, pc, #320	; 0x140
    3c50:	01010007 	tsteq	r1, r7
    3c54:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    3c58:	00000002 	andeq	r0, r0, r2
    3c5c:	18e80300 	stmiane	r8!, {r8, r9}^
    3c60:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    3c64:	05210609 	streq	r0, [r1, #-1545]!	; 0xfffff9f7
    3c68:	09051439 	stmdbeq	r5, {r0, r3, r4, r5, sl, ip}
    3c6c:	06130514 			; <UNDEFINED> instruction: 0x06130514
    3c70:	062f0501 	strteq	r0, [pc], -r1, lsl #10
    3c74:	1409054c 	strne	r0, [r9], #-1356	; 0xfffffab4
    3c78:	13060505 	movwne	r0, #25861	; 0x6505
    3c7c:	01000102 	tsteq	r0, r2, lsl #2
    3c80:	00050501 	andeq	r0, r5, r1, lsl #10
    3c84:	00000205 	andeq	r0, r0, r5, lsl #4
    3c88:	fb030000 	blx	c3c92 <__HEAP_SIZE+0xc2c92>
    3c8c:	01060118 	tsteq	r6, r8, lsl r1
    3c90:	3d060905 	vstrcc.16	s0, [r6, #-10]	; <UNPREDICTABLE>
    3c94:	05144205 	ldreq	r4, [r4, #-517]	; 0xfffffdfb
    3c98:	0d051409 	cfstrseq	mvf1, [r5, #-36]	; 0xffffffdc
    3c9c:	06340530 			; <UNDEFINED> instruction: 0x06340530
    3ca0:	200f0501 	andcs	r0, pc, r1, lsl #10
    3ca4:	05231905 	streq	r1, [r3, #-2309]!	; 0xfffff6fb
    3ca8:	0e030609 	cfmadd32eq	mvax0, mvfx0, mvfx3, mvfx9
    3cac:	302e0520 	eorcc	r0, lr, r0, lsr #10
    3cb0:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    3cb4:	05130605 	ldreq	r0, [r3, #-1541]	; 0xfffff9fb
    3cb8:	6f030612 	svcvs	0x00030612
    3cbc:	0639052e 	ldrteq	r0, [r9], -lr, lsr #10
    3cc0:	20140501 	andscs	r0, r4, r1, lsl #10
    3cc4:	28061105 	stmdacs	r6, {r0, r2, r8, ip}
    3cc8:	01064a05 	tsteq	r6, r5, lsl #20
    3ccc:	21061105 	tstcs	r6, r5, lsl #2
    3cd0:	01061905 	tsteq	r6, r5, lsl #18
    3cd4:	02201b20 	eoreq	r1, r0, #32, 22	; 0x8000
    3cd8:	01010001 	tsteq	r1, r1
    3cdc:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    3ce0:	00000002 	andeq	r0, r0, r2
    3ce4:	19a10300 	stmibne	r1!, {r8, r9}
    3ce8:	13090501 	movwne	r0, #38145	; 0x9501
    3cec:	14470513 	strbne	r0, [r7], #-1299	; 0xfffffaed
    3cf0:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    3cf4:	0501061f 	streq	r0, [r1, #-1567]	; 0xfffff9e1
    3cf8:	1505200b 	strne	r2, [r5, #-11]
    3cfc:	03050531 	movweq	r0, #21809	; 0x5531
    3d00:	60032017 	andvs	r2, r3, r7, lsl r0
    3d04:	060e0520 	streq	r0, [lr], -r0, lsr #10
    3d08:	052e0b03 	streq	r0, [lr, #-2819]!	; 0xfffff4fd
    3d0c:	05010624 	streq	r0, [r1, #-1572]	; 0xfffff9dc
    3d10:	15052010 	strne	r2, [r5, #-16]
    3d14:	06330525 	ldrteq	r0, [r3], -r5, lsr #10
    3d18:	05200d03 	streq	r0, [r0, #-3331]!	; 0xfffff2fd
    3d1c:	05051409 	streq	r1, [r5, #-1033]	; 0xfffffbf7
    3d20:	0d051306 	stceq	3, cr1, [r5, #-24]	; 0xffffffe8
    3d24:	20740306 	rsbscs	r0, r4, r6, lsl #6
    3d28:	05311105 	ldreq	r1, [r1, #-261]!	; 0xfffffefb
    3d2c:	05010639 	streq	r0, [r1, #-1593]	; 0xfffff9c7
    3d30:	2f30060d 	svccs	0x0030060d
    3d34:	01061505 	tsteq	r6, r5, lsl #10
    3d38:	01000202 	tsteq	r0, r2, lsl #4
    3d3c:	00050501 	andeq	r0, r5, r1, lsl #10
    3d40:	00000205 	andeq	r0, r0, r5, lsl #4
    3d44:	ca030000 	bgt	c3d4c <__HEAP_SIZE+0xc2d4c>
    3d48:	01060119 	tsteq	r6, r9, lsl r1
    3d4c:	3d060905 	vstrcc.16	s0, [r6, #-10]	; <UNPREDICTABLE>
    3d50:	01062005 	tsteq	r6, r5
    3d54:	30064205 	andcc	r4, r6, r5, lsl #4
    3d58:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    3d5c:	20010612 	andcs	r0, r1, r2, lsl r6
    3d60:	30063305 	andcc	r3, r6, r5, lsl #6
    3d64:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    3d68:	02130605 	andseq	r0, r3, #5242880	; 0x500000
    3d6c:	01010004 	tsteq	r1, r4
    3d70:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    3d74:	00000002 	andeq	r0, r0, r2
    3d78:	19dc0300 	ldmibne	ip, {r8, r9}^
    3d7c:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    3d80:	052f0609 	streq	r0, [pc, #-1545]!	; 377f <__HEAP_SIZE+0x277f>
    3d84:	05010620 	streq	r0, [r1, #-1568]	; 0xfffff9e0
    3d88:	0530063b 	ldreq	r0, [r0, #-1595]!	; 0xfffff9c5
    3d8c:	12051409 	andne	r1, r5, #150994944	; 0x9000000
    3d90:	3a050106 	bcc	1441b0 <__RAM_SIZE+0x441b0>
    3d94:	09053e06 	stmdbeq	r5, {r1, r2, r9, sl, fp, ip, sp}
    3d98:	06050514 			; <UNDEFINED> instruction: 0x06050514
    3d9c:	00040213 	andeq	r0, r4, r3, lsl r2
    3da0:	32240101 	eorcc	r0, r4, #1073741824	; 0x40000000
    3da4:	00030000 	andeq	r0, r3, r0
    3da8:	000002aa 	andeq	r0, r0, sl, lsr #5
    3dac:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
    3db0:	0101000d 	tsteq	r1, sp
    3db4:	00000101 	andeq	r0, r0, r1, lsl #2
    3db8:	00000100 	andeq	r0, r0, r0, lsl #2
    3dbc:	2f2e2e01 	svccs	0x002e2e01
    3dc0:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    3dc4:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    3dc8:	6f747262 	svcvs	0x00747262
    3dcc:	72462f73 	subvc	r2, r6, #460	; 0x1cc
    3dd0:	54526565 	ldrbpl	r6, [r2], #-1381	; 0xfffffa9b
    3dd4:	6300534f 	movwvs	r5, #847	; 0x34f
    3dd8:	73755c3a 	cmnvc	r5, #14848	; 0x3a00
    3ddc:	5c737265 	lfmpl	f7, 2, [r3], #-404	; 0xfffffe6c
    3de0:	6f646978 	svcvs	0x00646978
    3de4:	72705c6e 	rsbsvc	r5, r0, #28160	; 0x6e00
    3de8:	6172676f 	cmnvs	r2, pc, ror #14
    3dec:	72615c6d 	rsbvc	r5, r1, #27904	; 0x6d00
    3df0:	63675f6d 	cmnvs	r7, #436	; 0x1b4
    3df4:	63675c63 	cmnvs	r7, #25344	; 0x6300
    3df8:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
    3dfc:	6f6e2d6d 	svcvs	0x006e2d6d
    3e00:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    3e04:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
    3e08:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
    3e0c:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
    3e10:	30312e31 	eorscc	r2, r1, r1, lsr lr
    3e14:	62696c5c 	rsbvs	r6, r9, #92, 24	; 0x5c00
    3e18:	6363675c 	cmnvs	r3, #92, 14	; 0x1700000
    3e1c:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    3e20:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    3e24:	61652d65 	cmnvs	r5, r5, ror #26
    3e28:	315c6962 	cmpcc	ip, r2, ror #18
    3e2c:	2e332e30 	mrccs	14, 1, r2, cr3, cr0, {1}
    3e30:	6e695c31 	mcrvs	12, 3, r5, cr9, cr1, {1}
    3e34:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    3e38:	3a630065 	bcc	18c3fd4 <__RAM_SIZE+0x17c3fd4>
    3e3c:	6573755c 	ldrbvs	r7, [r3, #-1372]!	; 0xfffffaa4
    3e40:	785c7372 	ldmdavc	ip, {r1, r4, r5, r6, r8, r9, ip, sp, lr}^
    3e44:	6e6f6469 	cdpvs	4, 6, cr6, cr15, cr9, {3}
    3e48:	6f72705c 	svcvs	0x0072705c
    3e4c:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
    3e50:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    3e54:	6363675f 	cmnvs	r3, #24903680	; 0x17c0000
    3e58:	6363675c 	cmnvs	r3, #92, 14	; 0x1700000
    3e5c:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
    3e60:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    3e64:	61652d65 	cmnvs	r5, r5, ror #26
    3e68:	312d6962 			; <UNDEFINED> instruction: 0x312d6962
    3e6c:	2d332e30 	ldccs	14, cr2, [r3, #-192]!	; 0xffffff40
    3e70:	31323032 	teqcc	r2, r2, lsr r0
    3e74:	5c30312e 	ldfpls	f3, [r0], #-184	; 0xffffff48
    3e78:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    3e7c:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    3e80:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    3e84:	6e695c69 	cdpvs	12, 6, cr5, cr9, cr9, {3}
    3e88:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    3e8c:	616d5c65 	cmnvs	sp, r5, ror #24
    3e90:	6e696863 	cdpvs	8, 6, cr6, cr9, cr3, {3}
    3e94:	3a630065 	bcc	18c4030 <__RAM_SIZE+0x17c4030>
    3e98:	6573755c 	ldrbvs	r7, [r3, #-1372]!	; 0xfffffaa4
    3e9c:	785c7372 	ldmdavc	ip, {r1, r4, r5, r6, r8, r9, ip, sp, lr}^
    3ea0:	6e6f6469 	cdpvs	4, 6, cr6, cr15, cr9, {3}
    3ea4:	6f72705c 	svcvs	0x0072705c
    3ea8:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
    3eac:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    3eb0:	6363675f 	cmnvs	r3, #24903680	; 0x17c0000
    3eb4:	6363675c 	cmnvs	r3, #92, 14	; 0x1700000
    3eb8:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
    3ebc:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    3ec0:	61652d65 	cmnvs	r5, r5, ror #26
    3ec4:	312d6962 			; <UNDEFINED> instruction: 0x312d6962
    3ec8:	2d332e30 	ldccs	14, cr2, [r3, #-192]!	; 0xffffff40
    3ecc:	31323032 	teqcc	r2, r2, lsr r0
    3ed0:	5c30312e 	ldfpls	f3, [r0], #-184	; 0xffffff48
    3ed4:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    3ed8:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    3edc:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    3ee0:	6e695c69 	cdpvs	12, 6, cr5, cr9, cr9, {3}
    3ee4:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    3ee8:	79735c65 	ldmdbvc	r3!, {r0, r2, r5, r6, sl, fp, ip, lr}^
    3eec:	2e2e0073 	mcrcs	0, 1, r0, cr14, cr3, {3}
    3ef0:	2f2e2e2f 	svccs	0x002e2e2f
    3ef4:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 3e44 <__HEAP_SIZE+0x2e44>
    3ef8:	74726269 	ldrbtvc	r6, [r2], #-617	; 0xfffffd97
    3efc:	462f736f 	strtmi	r7, [pc], -pc, ror #6
    3f00:	52656572 	rsbpl	r6, r5, #478150656	; 0x1c800000
    3f04:	2f534f54 	svccs	0x00534f54
    3f08:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    3f0c:	00656475 	rsbeq	r6, r5, r5, ror r4
    3f10:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    3f14:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    3f18:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    3f1c:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    3f20:	6572462f 	ldrbvs	r4, [r2, #-1583]!	; 0xfffff9d1
    3f24:	4f545265 	svcmi	0x00545265
    3f28:	6f702f53 	svcvs	0x00702f53
    3f2c:	62617472 	rsbvs	r7, r1, #1912602624	; 0x72000000
    3f30:	472f656c 	strmi	r6, [pc, -ip, ror #10]!
    3f34:	412f4343 			; <UNDEFINED> instruction: 0x412f4343
    3f38:	435f4d52 	cmpmi	pc, #5248	; 0x1480
    3f3c:	5f33334d 	svcpl	0x0033334d
    3f40:	2f5a544e 	svccs	0x005a544e
    3f44:	5f6e6f6e 	svcpl	0x006e6f6e
    3f48:	75636573 	strbvc	r6, [r3, #-1395]!	; 0xfffffa8d
    3f4c:	63006572 	movwvs	r6, #1394	; 0x572
    3f50:	73755c3a 	cmnvc	r5, #14848	; 0x3a00
    3f54:	5c737265 	lfmpl	f7, 2, [r3], #-404	; 0xfffffe6c
    3f58:	6f646978 	svcvs	0x00646978
    3f5c:	72705c6e 	rsbsvc	r5, r0, #28160	; 0x6e00
    3f60:	6172676f 	cmnvs	r2, pc, ror #14
    3f64:	72615c6d 	rsbvc	r5, r1, #27904	; 0x6d00
    3f68:	63675f6d 	cmnvs	r7, #436	; 0x1b4
    3f6c:	63675c63 	cmnvs	r7, #25344	; 0x6300
    3f70:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
    3f74:	6f6e2d6d 	svcvs	0x006e2d6d
    3f78:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    3f7c:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
    3f80:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
    3f84:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
    3f88:	30312e31 	eorscc	r2, r1, r1, lsr lr
    3f8c:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    3f90:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    3f94:	61652d65 	cmnvs	r5, r5, ror #26
    3f98:	695c6962 	ldmdbvs	ip, {r1, r5, r6, r8, fp, sp, lr}^
    3f9c:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    3fa0:	00006564 	andeq	r6, r0, r4, ror #10
    3fa4:	6b736174 	blvs	1cdc57c <__RAM_SIZE+0x1bdc57c>
    3fa8:	00632e73 	rsbeq	r2, r3, r3, ror lr
    3fac:	73000001 	movwvc	r0, #1
    3fb0:	65646474 	strbvs	r6, [r4, #-1140]!	; 0xfffffb8c
    3fb4:	00682e66 	rsbeq	r2, r8, r6, ror #28
    3fb8:	5f000002 	svcpl	0x00000002
    3fbc:	61666564 	cmnvs	r6, r4, ror #10
    3fc0:	5f746c75 	svcpl	0x00746c75
    3fc4:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
    3fc8:	00682e73 	rsbeq	r2, r8, r3, ror lr
    3fcc:	5f000003 	svcpl	0x00000003
    3fd0:	69647473 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
    3fd4:	682e746e 	stmdavs	lr!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
    3fd8:	00000400 	andeq	r0, r0, r0, lsl #8
    3fdc:	6a6f7270 	bvs	1be09a4 <__RAM_SIZE+0x1ae09a4>
    3fe0:	73666564 	cmnvc	r6, #100, 10	; 0x19000000
    3fe4:	0500682e 	streq	r6, [r0, #-2094]	; 0xfffff7d2
    3fe8:	6f700000 	svcvs	0x00700000
    3fec:	616d7472 	smcvs	55106	; 0xd742
    3ff0:	636f7263 	cmnvs	pc, #805306374	; 0x30000006
    3ff4:	6f6d6d6f 	svcvs	0x006d6d6f
    3ff8:	00682e6e 	rsbeq	r2, r8, lr, ror #28
    3ffc:	46000006 	strmi	r0, [r0], -r6
    4000:	52656572 	rsbpl	r6, r5, #478150656	; 0x1c800000
    4004:	2e534f54 	mrccs	15, 2, r4, cr3, cr4, {2}
    4008:	00050068 	andeq	r0, r5, r8, rrx
    400c:	73696c00 	cmnvc	r9, #0, 24
    4010:	00682e74 	rsbeq	r2, r8, r4, ror lr
    4014:	74000005 	strvc	r0, [r0], #-5
    4018:	2e6b7361 	cdpcs	3, 6, cr7, cr11, cr1, {3}
    401c:	00050068 	andeq	r0, r5, r8, rrx
    4020:	726f7000 	rsbvc	r7, pc, #0
    4024:	6c626174 	stfvse	f6, [r2], #-464	; 0xfffffe30
    4028:	00682e65 	rsbeq	r2, r8, r5, ror #28
    402c:	74000005 	strvc	r0, [r0], #-5
    4030:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    4034:	00682e73 	rsbeq	r2, r8, r3, ror lr
    4038:	73000005 	movwvc	r0, #5
    403c:	6e697274 	mcrvs	2, 3, r7, cr9, cr4, {3}
    4040:	00682e67 	rsbeq	r2, r8, r7, ror #28
    4044:	3c000007 	stccc	0, cr0, [r0], {7}
    4048:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	; 0xfffffe78
    404c:	6e692d74 	mcrvs	13, 3, r2, cr9, cr4, {3}
    4050:	0000003e 	andeq	r0, r0, lr, lsr r0
    4054:	05050000 	streq	r0, [r5, #-0]
    4058:	00020500 	andeq	r0, r2, r0, lsl #10
    405c:	03000000 	movweq	r0, #0
    4060:	050119d3 	streq	r1, [r1, #-2515]	; 0xfffff62d
    4064:	05131309 	ldreq	r1, [r3, #-777]	; 0xfffffcf7
    4068:	0905181e 	stmdbeq	r5, {r1, r2, r3, r4, fp, ip}
    406c:	060d0515 			; <UNDEFINED> instruction: 0x060d0515
    4070:	200b0501 	andcs	r0, fp, r1, lsl #10
    4074:	76031405 	strvc	r1, [r3], -r5, lsl #8
    4078:	0d05203c 	stceq	0, cr2, [r5, #-240]	; 0xffffff10
    407c:	200d0306 	andcs	r0, sp, r6, lsl #6
    4080:	01061105 	tsteq	r6, r5, lsl #2
    4084:	05200f05 	streq	r0, [r0, #-3845]!	; 0xfffff0fb
    4088:	3c730314 	ldclcc	3, cr0, [r3], #-80	; 0xffffffb0
    408c:	06110520 	ldreq	r0, [r1], -r0, lsr #10
    4090:	05201103 	streq	r1, [r0, #-259]!	; 0xfffffefd
    4094:	05010613 	streq	r0, [r1, #-1555]	; 0xfffff9ed
    4098:	206f0314 	rsbcs	r0, pc, r4, lsl r3	; <UNPREDICTABLE>
    409c:	061d0520 	ldreq	r0, [sp], -r0, lsr #10
    40a0:	05202003 	streq	r2, [r0, #-3]!
    40a4:	05010635 	streq	r0, [r1, #-1589]	; 0xfffff9cb
    40a8:	6e054a1f 			; <UNDEFINED> instruction: 0x6e054a1f
    40ac:	02040200 	andeq	r0, r4, #0, 4
    40b0:	6f052c06 	svcvs	0x00052c06
    40b4:	02040200 	andeq	r0, r4, #0, 4
    40b8:	02000106 	andeq	r0, r0, #-2147483647	; 0x80000001
    40bc:	05200204 	streq	r0, [r0, #-516]!	; 0xfffffdfc
    40c0:	34052020 	strcc	r2, [r5], #-32	; 0xffffffe0
    40c4:	01040200 	mrseq	r0, R12_usr
    40c8:	19052006 	stmdbne	r5, {r1, r2, sp}
    40cc:	01040200 	mrseq	r0, R12_usr
    40d0:	21050106 	tstcs	r5, r6, lsl #2
    40d4:	2905202c 	stmdbcs	r5, {r2, r3, r5, sp}
    40d8:	25052026 	strcs	r2, [r5, #-38]	; 0xffffffda
    40dc:	01170306 	tsteq	r7, r6, lsl #6
    40e0:	05150905 	ldreq	r0, [r5, #-2309]	; 0xfffff6fb
    40e4:	02130605 	andseq	r0, r3, #5242880	; 0x500000
    40e8:	01010005 	tsteq	r1, r5
    40ec:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    40f0:	0023dc02 	eoreq	sp, r3, r2, lsl #24
    40f4:	1eb60310 	mrcne	3, 5, r0, cr6, cr0, {0}
    40f8:	13090501 	movwne	r0, #38145	; 0x9501
    40fc:	1a0d0513 	bne	345550 <__RAM_SIZE+0x245550>
    4100:	01062405 	tsteq	r6, r5, lsl #8
    4104:	052e0f05 	streq	r0, [lr, #-3845]!	; 0xfffff0fb
    4108:	0905222c 	stmdbeq	r5, {r2, r3, r5, r9, sp}
    410c:	20130306 	andscs	r0, r3, r6, lsl #6
    4110:	01061905 	tsteq	r6, r5, lsl #18
    4114:	053c0b05 	ldreq	r0, [ip, #-2821]!	; 0xfffff4fb
    4118:	0524060e 	streq	r0, [r4, #-1550]!	; 0xfffff9f2
    411c:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
    4120:	0e052e10 	mcreq	14, 0, r2, cr5, cr0, {0}
    4124:	10053506 	andne	r3, r5, r6, lsl #10
    4128:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    412c:	20090306 	andcs	r0, r9, r6, lsl #6
    4130:	01061505 	tsteq	r6, r5, lsl #10
    4134:	060d0520 	streq	r0, [sp], -r0, lsr #10
    4138:	06150521 	ldreq	r0, [r5], -r1, lsr #10
    413c:	6d03202e 	stcvs	0, cr2, [r3, #-184]	; 0xffffff48
    4140:	06090520 	streq	r0, [r9], -r0, lsr #10
    4144:	05201603 	streq	r1, [r0, #-1539]!	; 0xfffff9fd
    4148:	02130605 	andseq	r0, r3, #5242880	; 0x500000
    414c:	0101000c 	tsteq	r1, ip
    4150:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    4154:	00000002 	andeq	r0, r0, r2
    4158:	20df0300 	sbcscs	r0, pc, r0, lsl #6
    415c:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    4160:	13210609 			; <UNDEFINED> instruction: 0x13210609
    4164:	13131313 	tstne	r3, #1275068416	; 0x4c000000
    4168:	01061c05 	tsteq	r6, r5, lsl #24
    416c:	21060905 	tstcs	r6, r5, lsl #18
    4170:	060d0516 			; <UNDEFINED> instruction: 0x060d0516
    4174:	2e0b0501 	cfsh32cs	mvfx0, mvfx11, #1
    4178:	30060d05 	andcc	r0, r6, r5, lsl #26
    417c:	01061d05 	tsteq	r6, r5, lsl #26
    4180:	74031105 	strvc	r1, [r3], #-261	; 0xfffffefb
    4184:	030d0520 	movweq	r0, #54560	; 0xd520
    4188:	2205200c 	andcs	r2, r5, #12
    418c:	05201803 	streq	r1, [r0, #-2051]!	; 0xfffff7fd
    4190:	0e030611 	mcreq	6, 0, r0, cr3, cr1, {0}
    4194:	06130520 	ldreq	r0, [r3], -r0, lsr #10
    4198:	00580501 	subseq	r0, r8, r1, lsl #10
    419c:	06020402 	streq	r0, [r2], -r2, lsl #8
    41a0:	05205a03 	streq	r5, [r0, #-2563]!	; 0xfffff5fd
    41a4:	04020063 	streq	r0, [r2], #-99	; 0xffffff9d
    41a8:	05010602 	streq	r0, [r1, #-1538]	; 0xfffff9fe
    41ac:	0402003d 	streq	r0, [r2], #-61	; 0xffffffc3
    41b0:	05200601 	streq	r0, [r0, #-1537]!	; 0xfffff9ff
    41b4:	0402000d 	streq	r0, [r2], #-13
    41b8:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    41bc:	05330611 	ldreq	r0, [r3, #-1553]!	; 0xfffff9ef
    41c0:	05010617 	streq	r0, [r1, #-1559]	; 0xfffff9e9
    41c4:	14240611 	strtne	r0, [r4], #-1553	; 0xfffff9ef
    41c8:	01061805 	tsteq	r6, r5, lsl #16
    41cc:	02002d05 	andeq	r2, r0, #320	; 0x140
    41d0:	20060104 	andcs	r0, r6, r4, lsl #2
    41d4:	02001105 	andeq	r1, r0, #1073741825	; 0x40000001
    41d8:	01060104 	tsteq	r6, r4, lsl #2
    41dc:	30061505 	andcc	r1, r6, r5, lsl #10
    41e0:	01061f05 	tsteq	r6, r5, lsl #30
    41e4:	3e061505 	cfsh32cc	mvfx1, mvfx6, #5
    41e8:	01063305 	tsteq	r6, r5, lsl #6
    41ec:	052e1705 	streq	r1, [lr, #-1797]!	; 0xfffff8fb
    41f0:	0533061a 	ldreq	r0, [r3, #-1562]!	; 0xfffff9e6
    41f4:	0501061c 	streq	r0, [r1, #-1564]	; 0xfffff9e4
    41f8:	04020031 	streq	r0, [r2], #-49	; 0xffffffcf
    41fc:	09030602 	stmdbeq	r3, {r1, r9, sl}
    4200:	0015052e 	andseq	r0, r5, lr, lsr #10
    4204:	15020402 	strne	r0, [r2, #-1026]	; 0xfffffbfe
    4208:	02005a05 	andeq	r5, r0, #20480	; 0x5000
    420c:	6b030204 	blvs	c4a24 <__HEAP_SIZE+0xc3a24>
    4210:	005b0501 	subseq	r0, fp, r1, lsl #10
    4214:	06020402 	streq	r0, [r2], -r2, lsl #8
    4218:	04020001 	streq	r0, [r2], #-1
    421c:	11052002 	tstne	r5, r2
    4220:	05206903 	streq	r6, [r0, #-2307]!	; 0xfffff6fd
    4224:	3b030625 	blcc	c5ac0 <__HEAP_SIZE+0xc4ac0>
    4228:	15090520 	strne	r0, [r9, #-1312]	; 0xfffffae0
    422c:	13060505 	movwne	r0, #25861	; 0x6505
    4230:	01010020 	tsteq	r1, r0, lsr #32
    4234:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    4238:	00000002 	andeq	r0, r0, r2
    423c:	31a30300 			; <UNDEFINED> instruction: 0x31a30300
    4240:	13090501 	movwne	r0, #38145	; 0x9501
    4244:	06200514 			; <UNDEFINED> instruction: 0x06200514
    4248:	220e0510 	andcs	r0, lr, #16, 10	; 0x4000000
    424c:	22060d05 	andcs	r0, r6, #320	; 0x140
    4250:	01061a05 	tsteq	r6, r5, lsl #20
    4254:	21060d05 	tstcs	r6, r5, lsl #26
    4258:	01061405 	tsteq	r6, r5, lsl #8
    425c:	1d060e05 	stcne	14, cr0, [r6, #-20]	; 0xffffffec
    4260:	01061005 	tsteq	r6, r5
    4264:	05200e05 	streq	r0, [r0, #-3589]!	; 0xfffff1fb
    4268:	14340609 	ldrtne	r0, [r4], #-1545	; 0xfffff9f7
    426c:	13060505 	movwne	r0, #25861	; 0x6505
    4270:	00010220 	andeq	r0, r1, r0, lsr #4
    4274:	01050101 	tsteq	r5, r1, lsl #2
    4278:	1c020500 	cfstr32ne	mvfx0, [r2], {-0}
    427c:	03100024 	tsteq	r0, #36	; 0x24
    4280:	050132b8 	streq	r3, [r1, #-696]	; 0xfffffd48
    4284:	09051305 	stmdbeq	r5, {r0, r2, r8, r9, ip}
    4288:	07050106 	streq	r0, [r5, -r6, lsl #2]
    428c:	0609053c 			; <UNDEFINED> instruction: 0x0609053c
    4290:	061e0526 	ldreq	r0, [lr], -r6, lsr #10
    4294:	06090501 	streq	r0, [r9], -r1, lsl #10
    4298:	06200560 	strteq	r0, [r0], -r0, ror #10
    429c:	4a1e0501 	bmi	7856a8 <__RAM_SIZE+0x6856a8>
    42a0:	02300105 	eorseq	r0, r0, #1073741825	; 0x40000001
    42a4:	01010005 	tsteq	r1, r5
    42a8:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    42ac:	00244402 	eoreq	r4, r4, r2, lsl #8
    42b0:	0e880310 	mcreq	3, 4, r0, cr8, cr0, {0}
    42b4:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    42b8:	139f0605 	orrsne	r0, pc, #5242880	; 0x500000
    42bc:	15030905 	strne	r0, [r3, #-2309]	; 0xfffff6fb
    42c0:	06120501 	ldreq	r0, [r2], -r1, lsl #10
    42c4:	20202001 	eorcs	r2, r0, r1
    42c8:	03060905 	movweq	r0, #26885	; 0x6905
    42cc:	23052e0a 	movwcs	r2, #24074	; 0x5e0a
    42d0:	2c050106 	stfcss	f0, [r5], {6}
    42d4:	3c160520 	cfldr32cc	mvfx0, [r6], {32}
    42d8:	2f060905 	svccs	0x00060905
    42dc:	01065705 	tsteq	r6, r5, lsl #14
    42e0:	06018105 	streq	r8, [r1], -r5, lsl #2
    42e4:	03050531 	movweq	r0, #21809	; 0x5531
    42e8:	07050119 	smladeq	r5, r9, r1, r0
    42ec:	10050106 	andne	r0, r5, r6, lsl #2
    42f0:	00250522 	eoreq	r0, r5, r2, lsr #10
    42f4:	06010402 	streq	r0, [r1], -r2, lsl #8
    42f8:	0009052e 	andeq	r0, r9, lr, lsr #10
    42fc:	06010402 	streq	r0, [r1], -r2, lsl #8
    4300:	060d0501 	streq	r0, [sp], -r1, lsl #10
    4304:	062f053e 			; <UNDEFINED> instruction: 0x062f053e
    4308:	2e270501 	cfsh64cs	mvdx0, mvdx7, #1
    430c:	4f060d05 	svcmi	0x00060d05
    4310:	01061705 	tsteq	r6, r5, lsl #14
    4314:	052e0f05 	streq	r0, [lr, #-3845]!	; 0xfffff0fb
    4318:	04020029 	streq	r0, [r2], #-41	; 0xffffffd7
    431c:	05260602 	streq	r0, [r6, #-1538]!	; 0xfffff9fe
    4320:	04020052 	streq	r0, [r2], #-82	; 0xffffffae
    4324:	01730302 	cmneq	r3, r2, lsl #6
    4328:	02005305 	andeq	r5, r0, #335544320	; 0x14000000
    432c:	01060204 	tsteq	r6, r4, lsl #4
    4330:	02040200 	andeq	r0, r4, #0, 4
    4334:	0609052e 	streq	r0, [r9], -lr, lsr #10
    4338:	05201303 	streq	r1, [r0, #-771]!	; 0xfffffcfd
    433c:	0501063e 	streq	r0, [r1, #-1598]	; 0xfffff9c2
    4340:	05400621 	strbeq	r0, [r0, #-1569]	; 0xfffff9df
    4344:	05051636 	streq	r1, [r5, #-1590]	; 0xfffff9ca
    4348:	06070514 			; <UNDEFINED> instruction: 0x06070514
    434c:	30140501 	andscc	r0, r4, r1, lsl #10
    4350:	24062105 	strcs	r2, [r6], #-261	; 0xfffffefb
    4354:	05150505 	ldreq	r0, [r5, #-1285]	; 0xfffffafb
    4358:	0501061a 	streq	r0, [r1, #-1562]	; 0xfffff9e6
    435c:	05230609 	streq	r0, [r3, #-1545]!	; 0xfffff9f7
    4360:	05010622 	streq	r0, [r1, #-1570]	; 0xfffff9de
    4364:	3d240605 	stccc	6, cr0, [r4, #-20]!	; 0xffffffec
    4368:	2e06234e 	cdpcs	3, 0, cr2, cr6, cr14, {2}
    436c:	09052106 	stmdbeq	r5, {r1, r2, r8, sp}
    4370:	05200903 	streq	r0, [r0, #-2307]!	; 0xfffff6fd
    4374:	012f0311 			; <UNDEFINED> instruction: 0x012f0311
    4378:	01062a05 	tsteq	r6, r5, lsl #20
    437c:	05662805 	strbeq	r2, [r6, #-2053]!	; 0xfffff7fb
    4380:	1d030605 	stcne	6, cr0, [r3, #-20]	; 0xffffffec
    4384:	06070520 	streq	r0, [r7], -r0, lsr #10
    4388:	06090501 	streq	r0, [r9], -r1, lsl #10
    438c:	06180540 	ldreq	r0, [r8], -r0, asr #10
    4390:	06210501 	strteq	r0, [r1], -r1, lsl #10
    4394:	06010532 			; <UNDEFINED> instruction: 0x06010532
    4398:	01002e14 	tsteq	r0, r4, lsl lr
    439c:	00050501 	andeq	r0, r5, r1, lsl #10
    43a0:	24da0205 	ldrbcs	r0, [sl], #517	; 0x205
    43a4:	ed031000 	stc	0, cr1, [r3, #-0]
    43a8:	01060109 	tsteq	r6, r9, lsl #2
    43ac:	59060905 	stmdbpl	r6, {r0, r2, r8, fp}
    43b0:	05142f05 	ldreq	r2, [r4, #-3845]	; 0xfffff0fb
    43b4:	0905132d 	stmdbeq	r5, {r0, r2, r3, r5, r8, r9, ip}
    43b8:	05010d03 	streq	r0, [r1, #-3331]	; 0xfffff2fd
    43bc:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
    43c0:	04020026 	streq	r0, [r2], #-38	; 0xffffffda
    43c4:	0d055801 	stceq	8, cr5, [r5, #-4]
    43c8:	05132706 	ldreq	r2, [r3, #-1798]	; 0xfffff8fa
    43cc:	20010616 	andcs	r0, r1, r6, lsl r6
    43d0:	0d052020 	stceq	0, cr2, [r5, #-128]	; 0xffffff80
    43d4:	1f052f06 	svcne	0x00052f06
    43d8:	11050106 	tstne	r5, r6, lsl #2
    43dc:	31052606 	tstcc	r5, r6, lsl #12
    43e0:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    43e4:	16054006 	strne	r4, [r5], -r6
    43e8:	c8740306 	ldmdagt	r4!, {r1, r2, r8, r9}^
    43ec:	14030505 	strne	r0, [r3], #-1285	; 0xfffffafb
    43f0:	38160520 	ldmdacc	r6, {r5, r8, sl}
    43f4:	09052020 	stmdbeq	r5, {r5, sp}
    43f8:	10052306 	andne	r2, r5, r6, lsl #6
    43fc:	01020106 	tsteq	r2, r6, lsl #2
    4400:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    4404:	02050001 	andeq	r0, r5, #1
    4408:	1000252c 	andne	r2, r0, ip, lsr #10
    440c:	012efb03 	msreq	ELR_hyp, r3
    4410:	14210505 	strtne	r0, [r1], #-1285	; 0xfffffafb
    4414:	01061505 	tsteq	r6, r5, lsl #10
    4418:	05200505 	streq	r0, [r0, #-1285]!	; 0xfffffafb
    441c:	04020009 	streq	r0, [r2], #-9
    4420:	05220603 	streq	r0, [r2, #-1539]!	; 0xfffff9fd
    4424:	0402005e 	streq	r0, [r2], #-94	; 0xffffffa2
    4428:	68057203 	stmdavs	r5, {r0, r1, r9, ip, sp, lr}
    442c:	03040200 	movweq	r0, #16896	; 0x4200
    4430:	2b050106 	blcs	144850 <__RAM_SIZE+0x44850>
    4434:	01040200 	mrseq	r0, R12_usr
    4438:	05052006 	streq	r2, [r5, #-6]
    443c:	01040200 	mrseq	r0, R12_usr
    4440:	33060106 	movwcc	r0, #24838	; 0x6106
    4444:	0620064b 	strteq	r0, [r0], -fp, asr #12
    4448:	4009053d 	andmi	r0, r9, sp, lsr r5
    444c:	42050542 	andmi	r0, r5, #276824064	; 0x10800000
    4450:	01061705 	tsteq	r6, r5, lsl #14
    4454:	2f060505 	svccs	0x00060505
    4458:	01061f05 	tsteq	r6, r5, lsl #30
    445c:	022f0105 	eoreq	r0, pc, #1073741825	; 0x40000001
    4460:	01010012 	tsteq	r1, r2, lsl r0
    4464:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    4468:	00259402 	eoreq	r9, r5, r2, lsl #8
    446c:	0fe30310 	svceq	0x00e30310
    4470:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    4474:	05310609 	ldreq	r0, [r1, #-1545]!	; 0xfffff9f7
    4478:	2605300d 	strcs	r3, [r5], -sp
    447c:	24050106 	strcs	r0, [r5], #-262	; 0xfffffefa
    4480:	060d053c 			; <UNDEFINED> instruction: 0x060d053c
    4484:	061e0522 	ldreq	r0, [lr], -r2, lsr #10
    4488:	2e0f0501 	cfsh32cs	mvfx0, mvfx15, #1
    448c:	03061105 	movweq	r1, #24837	; 0x6105
    4490:	27052017 	smladcs	r5, r7, r0, r2
    4494:	13050106 	movwne	r0, #20742	; 0x5106
    4498:	0615052e 	ldreq	r0, [r5], -lr, lsr #10
    449c:	06250522 	strteq	r0, [r5], -r2, lsr #10
    44a0:	3c3d0501 	cfldr32cc	mvfx0, [sp], #-4
    44a4:	05201705 	streq	r1, [r0, #-1797]!	; 0xfffff8fb
    44a8:	05300619 	ldreq	r0, [r0, #-1561]!	; 0xfffff9e7
    44ac:	05010626 	streq	r0, [r1, #-1574]	; 0xfffff9da
    44b0:	69030611 	stmdbvs	r3, {r0, r4, r9, sl}
    44b4:	061e053c 			; <UNDEFINED> instruction: 0x061e053c
    44b8:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    44bc:	062c0530 			; <UNDEFINED> instruction: 0x062c0530
    44c0:	20130501 	andscs	r0, r3, r1, lsl #10
    44c4:	03062d05 	movweq	r2, #27909	; 0x6d05
    44c8:	0d052e1e 	stceq	14, cr2, [r5, #-120]	; 0xffffff88
    44cc:	06190516 			; <UNDEFINED> instruction: 0x06190516
    44d0:	06290501 	strteq	r0, [r9], -r1, lsl #10
    44d4:	140d0552 	strne	r0, [sp], #-1362	; 0xfffffaae
    44d8:	00010101 	andeq	r0, r1, r1, lsl #2
    44dc:	58010402 	stmdapl	r1, {r1, sl}
    44e0:	03040200 	movweq	r0, #16896	; 0x4200
    44e4:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    44e8:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    44ec:	00010304 	andeq	r0, r1, r4, lsl #6
    44f0:	66030402 	strvs	r0, [r3], -r2, lsl #8
    44f4:	03040200 	movweq	r0, #16896	; 0x4200
    44f8:	04020001 	streq	r0, [r2], #-1
    44fc:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    4500:	00200304 	eoreq	r0, r0, r4, lsl #6
    4504:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
    4508:	03040200 	movweq	r0, #16896	; 0x4200
    450c:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    4510:	02002003 	andeq	r2, r0, #3
    4514:	20060304 	andcs	r0, r6, r4, lsl #6
    4518:	03040200 	movweq	r0, #16896	; 0x4200
    451c:	02005806 	andeq	r5, r0, #393216	; 0x60000
    4520:	00740304 	rsbseq	r0, r4, r4, lsl #6
    4524:	01030402 	tsteq	r3, r2, lsl #8
    4528:	03040200 	movweq	r0, #16896	; 0x4200
    452c:	04020001 	streq	r0, [r2], #-1
    4530:	09051403 	stmdbeq	r5, {r0, r1, sl, ip}
    4534:	03040200 	movweq	r0, #16896	; 0x4200
    4538:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    453c:	1f053003 	svcne	0x00053003
    4540:	03040200 	movweq	r0, #16896	; 0x4200
    4544:	0b050106 	bleq	144964 <__RAM_SIZE+0x44964>
    4548:	03040200 	movweq	r0, #16896	; 0x4200
    454c:	060d052e 	streq	r0, [sp], -lr, lsr #10
    4550:	05050124 	streq	r0, [r5, #-292]	; 0xfffffedc
    4554:	15056c06 	strne	r6, [r5, #-3078]	; 0xfffff3fa
    4558:	20490306 	subcs	r0, r9, r6, lsl #6
    455c:	02000d05 	andeq	r0, r0, #320	; 0x140
    4560:	31030104 	tstcc	r3, r4, lsl #2
    4564:	0025053c 	eoreq	r0, r5, ip, lsr r5
    4568:	32010402 	andcc	r0, r1, #33554432	; 0x2000000
    456c:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    4570:	14060104 	strne	r0, [r6], #-260	; 0xfffffefc
    4574:	01000d02 	tsteq	r0, r2, lsl #26
    4578:	00050501 	andeq	r0, r5, r1, lsl #10
    457c:	26500205 	ldrbcs	r0, [r0], -r5, lsl #4
    4580:	d9031000 	stmdble	r3, {ip}
    4584:	0106010c 	tsteq	r6, ip, lsl #2
    4588:	75060905 	strvc	r0, [r6, #-2309]	; 0xfffff6fb
    458c:	25030d05 	strcs	r0, [r3, #-3333]	; 0xfffff2fb
    4590:	17051801 	strne	r1, [r5, -r1, lsl #16]
    4594:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    4598:	0530060d 	ldreq	r0, [r0, #-1549]!	; 0xfffff9f3
    459c:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    45a0:	05340611 	ldreq	r0, [r4, #-1553]!	; 0xfffff9ef
    45a4:	20010628 	andcs	r0, r1, r8, lsr #12
    45a8:	30061105 	andcc	r1, r6, r5, lsl #2
    45ac:	01061305 	tsteq	r6, r5, lsl #6
    45b0:	30061505 	andcc	r1, r6, r5, lsl #10
    45b4:	01061e05 	tsteq	r6, r5, lsl #28
    45b8:	4d061505 	cfstr32mi	mvfx1, [r6, #-20]	; 0xffffffec
    45bc:	01062705 	tsteq	r6, r5, lsl #14
    45c0:	0609052e 	streq	r0, [r9], -lr, lsr #10
    45c4:	05011003 	streq	r1, [r1, #-3]
    45c8:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
    45cc:	05260611 	streq	r0, [r6, #-1553]!	; 0xfffff9ef
    45d0:	05010631 	streq	r0, [r1, #-1585]	; 0xfffff9cf
    45d4:	0540060d 	strbeq	r0, [r0, #-1549]	; 0xfffff9f3
    45d8:	05be0605 	ldreq	r0, [lr, #1541]!	; 0x605
    45dc:	68030615 	stmdavs	r3, {r0, r2, r4, r9, sl}
    45e0:	0520064a 	streq	r0, [r0, #-1610]!	; 0xfffff9b6
    45e4:	0905411a 	stmdbeq	r5, {r1, r3, r4, r8, lr}
    45e8:	20120306 	andscs	r0, r2, r6, lsl #6
    45ec:	01061005 	tsteq	r6, r5
    45f0:	01000102 	tsteq	r0, r2, lsl #2
    45f4:	00050501 	andeq	r0, r5, r1, lsl #10
    45f8:	26b20205 	ldrtcs	r0, [r2], r5, lsl #4
    45fc:	83031000 	movwhi	r1, #12288	; 0x3000
    4600:	01060132 	tsteq	r6, r2, lsr r1
    4604:	32060905 	andcc	r0, r6, #81920	; 0x14000
    4608:	15030d05 	strne	r0, [r3, #-3333]	; 0xfffff2fb
    460c:	06160501 	ldreq	r0, [r6], -r1, lsl #10
    4610:	2e0f0501 	cfsh32cs	mvfx0, mvfx15, #1
    4614:	27061205 	strcs	r1, [r6, -r5, lsl #4]
    4618:	01061405 	tsteq	r6, r5, lsl #8
    461c:	0f030505 	svceq	0x00030505
    4620:	0611052e 	ldreq	r0, [r1], -lr, lsr #10
    4624:	06206e03 	strteq	r6, [r0], -r3, lsl #28
    4628:	502f0620 	eorpl	r0, pc, r0, lsr #12
    462c:	05346605 	ldreq	r6, [r4, #-1541]!	; 0xfffff9fb
    4630:	05051329 	streq	r1, [r5, #-809]	; 0xfffffcd7
    4634:	01021606 	tsteq	r2, r6, lsl #12
    4638:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    463c:	02050001 	andeq	r0, r5, #1
    4640:	100026d8 	ldrdne	r2, [r0], -r8
    4644:	012f9b03 			; <UNDEFINED> instruction: 0x012f9b03
    4648:	16170905 	ldrne	r0, [r7], -r5, lsl #18
    464c:	05010e05 	streq	r0, [r1, #-3589]	; 0xfffff1fb
    4650:	0501062d 	streq	r0, [r1, #-1581]	; 0xfffff9d3
    4654:	01052e0e 	tsteq	r5, lr, lsl #28
    4658:	05207703 	streq	r7, [r0, #-1795]!	; 0xfffff8fd
    465c:	0d030611 	stceq	6, cr0, [r3, #-68]	; 0xffffffbc
    4660:	34190520 	ldrcc	r0, [r9], #-1312	; 0xfffffae0
    4664:	01062105 	tsteq	r6, r5, lsl #2
    4668:	052e1f05 	streq	r1, [lr, #-3845]!	; 0xfffff0fb
    466c:	05210619 	streq	r0, [r1, #-1561]!	; 0xfffff9e7
    4670:	05010622 	streq	r0, [r1, #-1570]	; 0xfffff9de
    4674:	4b3d0619 	blmi	f45ee0 <__RAM_SIZE+0xe45ee0>
    4678:	304d1105 	subcc	r1, sp, r5, lsl #2
    467c:	6e030e05 	cdpvs	14, 0, cr0, cr3, cr5, {0}
    4680:	062d053c 			; <UNDEFINED> instruction: 0x062d053c
    4684:	2e0e0501 	cfsh32cs	mvfx0, mvfx14, #1
    4688:	3f030105 	svccc	0x00030105
    468c:	0802202e 	stmdaeq	r2, {r1, r2, r3, r5, sp}
    4690:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    4694:	02050001 	andeq	r0, r5, #1
    4698:	10002724 	andne	r2, r0, r4, lsr #14
    469c:	00c1e003 	sbceq	lr, r1, r3
    46a0:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    46a4:	134b0605 	movtne	r0, #46597	; 0xb605
    46a8:	01061605 	tsteq	r6, r5, lsl #12
    46ac:	2f060505 	svccs	0x00060505
    46b0:	01061405 	tsteq	r6, r5, lsl #8
    46b4:	2f060505 	svccs	0x00060505
    46b8:	01061405 	tsteq	r6, r5, lsl #8
    46bc:	43060905 	movwmi	r0, #26885	; 0x6905
    46c0:	01061505 	tsteq	r6, r5, lsl #10
    46c4:	202e2605 	eorcs	r2, lr, r5, lsl #12
    46c8:	34060505 	strcc	r0, [r6], #-1285	; 0xfffffafb
    46cc:	01062605 	tsteq	r6, r5, lsl #12
    46d0:	05200905 	streq	r0, [r0, #-2309]!	; 0xfffff6fb
    46d4:	05440621 	strbeq	r0, [r4, #-1569]	; 0xfffff9df
    46d8:	0b051709 	bleq	14a304 <__RAM_SIZE+0x4a304>
    46dc:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    46e0:	3c0c0306 	stccc	3, cr0, [ip], {6}
    46e4:	01061905 	tsteq	r6, r5, lsl #18
    46e8:	23060d05 	movwcs	r0, #27909	; 0x6d05
    46ec:	060f053e 			; <UNDEFINED> instruction: 0x060f053e
    46f0:	063b0501 	ldrteq	r0, [fp], -r1, lsl #10
    46f4:	13110532 	tstne	r1, #209715200	; 0xc800000
    46f8:	01064405 	tsteq	r6, r5, lsl #8
    46fc:	052e1105 	streq	r1, [lr, #-261]!	; 0xfffffefb
    4700:	4a3e0301 	bmi	f8530c <__RAM_SIZE+0xe8530c>
    4704:	02002f05 	andeq	r2, r0, #5, 30
    4708:	ac030104 	stfges	f0, [r3], {4}
    470c:	0d052e7f 	stceq	14, cr2, [r5, #-508]	; 0xfffffe04
    4710:	2e013306 	cdpcs	3, 0, cr3, cr1, cr6, {0}
    4714:	063c0101 	ldrteq	r0, [ip], -r1, lsl #2
    4718:	3c20062e 	stccc	6, cr0, [r0], #-184	; 0xffffff48
    471c:	053c2e3c 	ldreq	r2, [ip, #-3644]!	; 0xfffff1c4
    4720:	20170332 	andscs	r0, r7, r2, lsr r3
    4724:	05131105 	ldreq	r1, [r3, #-261]	; 0xfffffefb
    4728:	0501063c 	streq	r0, [r1, #-1596]	; 0xfffff9c4
    472c:	4f062e11 	svcmi	0x00062e11
    4730:	01062105 	tsteq	r6, r5, lsl #2
    4734:	052e1305 	streq	r1, [lr, #-773]!	; 0xfffffcfb
    4738:	05300615 	ldreq	r0, [r0, #-1557]!	; 0xfffff9eb
    473c:	0501062a 	streq	r0, [r1, #-1578]	; 0xfffff9d6
    4740:	0532062d 	ldreq	r0, [r2, #-1581]!	; 0xfffff9d3
    4744:	2c030601 	stccs	6, cr0, [r3], {1}
    4748:	000d0201 	andeq	r0, sp, r1, lsl #4
    474c:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    4750:	cc020500 	cfstr32gt	mvfx0, [r2], {-0}
    4754:	03100027 	tsteq	r0, #39	; 0x27
    4758:	06010aa3 	streq	r0, [r1], -r3, lsr #21
    475c:	06090501 	streq	r0, [r9], -r1, lsl #10
    4760:	0616052f 	ldreq	r0, [r6], -pc, lsr #10
    4764:	06090501 	streq	r0, [r9], -r1, lsl #10
    4768:	0181052f 	orreq	r0, r1, pc, lsr #10
    476c:	14090514 	strne	r0, [r9], #-1300	; 0xfffffaec
    4770:	01061405 	tsteq	r6, r5, lsl #8
    4774:	a0060905 	andge	r0, r6, r5, lsl #18
    4778:	01060b05 	tsteq	r6, r5, lsl #22
    477c:	03060d05 	movweq	r0, #27909	; 0x6d05
    4780:	25052009 	strcs	r2, [r5, #-9]
    4784:	15310532 	ldrne	r0, [r1, #-1330]!	; 0xffffface
    4788:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    478c:	3c130605 	ldccc	6, cr0, [r3], {5}
    4790:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    4794:	02050005 	andeq	r0, r5, #5
    4798:	100027f4 	strdne	r2, [r0], -r4
    479c:	010dbb03 	tsteq	sp, r3, lsl #22
    47a0:	09050106 	stmdbeq	r5, {r1, r2, r8}
    47a4:	05132f06 	ldreq	r2, [r3, #-3846]	; 0xfffff0fa
    47a8:	0905146c 	stmdbeq	r5, {r2, r3, r5, r6, sl, ip}
    47ac:	06140514 			; <UNDEFINED> instruction: 0x06140514
    47b0:	06090501 	streq	r0, [r9], -r1, lsl #10
    47b4:	060b0568 	streq	r0, [fp], -r8, ror #10
    47b8:	060d0501 	streq	r0, [sp], -r1, lsl #10
    47bc:	2f200903 	svccs	0x00200903
    47c0:	01061505 	tsteq	r6, r5, lsl #10
    47c4:	0a030505 	beq	c5be0 <__HEAP_SIZE+0xc4be0>
    47c8:	03150520 	tsteq	r5, #32, 10	; 0x8000000
    47cc:	2b052e7a 	blcs	1501bc <__RAM_SIZE+0x501bc>
    47d0:	09053106 	stmdbeq	r5, {r1, r2, r8, ip, sp}
    47d4:	06100514 			; <UNDEFINED> instruction: 0x06100514
    47d8:	00010201 	andeq	r0, r1, r1, lsl #4
    47dc:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    47e0:	00020500 	andeq	r0, r2, r0, lsl #10
    47e4:	03000000 	movweq	r0, #0
    47e8:	0601118f 	streq	r1, [r1], -pc, lsl #3
    47ec:	06090501 	streq	r0, [r9], -r1, lsl #10
    47f0:	0513132f 	ldreq	r1, [r3, #-815]	; 0xfffffcd1
    47f4:	09051430 	stmdbeq	r5, {r4, r5, sl, ip}
    47f8:	320d0514 	andcc	r0, sp, #20, 10	; 0x5000000
    47fc:	01061505 	tsteq	r6, r5, lsl #10
    4800:	02000d05 	andeq	r0, r0, #320	; 0x140
    4804:	23060404 	movwcs	r0, #25604	; 0x6404
    4808:	02001105 	andeq	r1, r0, #1073741825	; 0x40000001
    480c:	01060404 	tsteq	r6, r4, lsl #8
    4810:	02002905 	andeq	r2, r0, #81920	; 0x14000
    4814:	50060404 	andpl	r0, r6, r4, lsl #8
    4818:	02000d05 	andeq	r0, r0, #320	; 0x140
    481c:	05160404 	ldreq	r0, [r6, #-1028]	; 0xfffffbfc
    4820:	04020011 	streq	r0, [r2], #-17	; 0xffffffef
    4824:	05010604 	streq	r0, [r1, #-1540]	; 0xfffff9fc
    4828:	0402000f 	streq	r0, [r2], #-15
    482c:	11052004 	tstne	r5, r4
    4830:	1a052206 	bne	14d050 <__RAM_SIZE+0x4d050>
    4834:	29050106 	stmdbcs	r5, {r1, r2, r8}
    4838:	0d054e06 	stceq	14, cr4, [r5, #-24]	; 0xffffffe8
    483c:	06190519 			; <UNDEFINED> instruction: 0x06190519
    4840:	060d0501 	streq	r0, [sp], -r1, lsl #10
    4844:	0628054f 	strteq	r0, [r8], -pc, asr #10
    4848:	000d0501 	andeq	r0, sp, r1, lsl #10
    484c:	06040402 	streq	r0, [r4], -r2, lsl #8
    4850:	0025055d 	eoreq	r0, r5, sp, asr r5
    4854:	06040402 	streq	r0, [r4], -r2, lsl #8
    4858:	000f0501 	andeq	r0, pc, r1, lsl #10
    485c:	2e040402 	cdpcs	4, 0, cr0, cr4, cr2, {0}
    4860:	02003205 	andeq	r3, r0, #1342177280	; 0x50000000
    4864:	05200104 	streq	r0, [r0, #-260]!	; 0xfffffefc
    4868:	3b030611 	blcc	c60b4 <__HEAP_SIZE+0xc50b4>
    486c:	05200620 	streq	r0, [r0, #-1568]!	; 0xfffff9e0
    4870:	053d062a 	ldreq	r0, [sp, #-1578]!	; 0xfffff9d6
    4874:	09051611 	stmdbeq	r5, {r0, r4, r9, sl, ip}
    4878:	0d053331 	stceq	3, cr3, [r5, #-196]	; 0xffffff3c
    487c:	23054314 	movwcs	r4, #21268	; 0x5314
    4880:	0f050106 	svceq	0x00050106
    4884:	0611052e 	ldreq	r0, [r1], -lr, lsr #10
    4888:	061b0522 	ldreq	r0, [fp], -r2, lsr #10
    488c:	2e130501 	cfmul32cs	mvfx0, mvfx3, mvfx1
    4890:	0e030505 	cfsh32eq	mvfx0, mvfx3, #5
    4894:	0015052e 	andseq	r0, r5, lr, lsr #10
    4898:	03010402 	movweq	r0, #5122	; 0x1402
    489c:	00207efb 	strdeq	r7, [r0], -fp	; <UNPREDICTABLE>
    48a0:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    48a4:	1f032805 	svcne	0x00032805
    48a8:	06110520 	ldreq	r0, [r1], -r0, lsr #10
    48ac:	4f2e0d03 	svcmi	0x002e0d03
    48b0:	054e2a05 	strbeq	r2, [lr, #-2565]	; 0xfffff5fb
    48b4:	50051511 	andpl	r1, r5, r1, lsl r5
    48b8:	0309051a 	movweq	r0, #38170	; 0x951a
    48bc:	05330127 	ldreq	r0, [r3, #-295]!	; 0xfffffed9
    48c0:	200d033e 	andcs	r0, sp, lr, lsr r3
    48c4:	05131505 	ldreq	r1, [r3, #-1285]	; 0xfffffafb
    48c8:	2205322d 	andcs	r3, r5, #-805306366	; 0xd0000002
    48cc:	06050518 			; <UNDEFINED> instruction: 0x06050518
    48d0:	000d0213 	andeq	r0, sp, r3, lsl r2
    48d4:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    48d8:	00020500 	andeq	r0, r2, r0, lsl #10
    48dc:	03000000 	movweq	r0, #0
    48e0:	050113b5 	streq	r1, [r1, #-949]	; 0xfffffc4b
    48e4:	13131309 	tstne	r3, #603979776	; 0x24000000
    48e8:	05131313 	ldreq	r1, [r3, #-787]	; 0xfffffced
    48ec:	1e05142a 	cdpne	4, 0, cr1, cr5, cr10, {1}
    48f0:	150d0514 	strne	r0, [sp, #-1300]	; 0xfffffaec
    48f4:	01061705 	tsteq	r6, r5, lsl #14
    48f8:	052e0f05 	streq	r0, [lr, #-3845]!	; 0xfffff0fb
    48fc:	2e730305 	cdpcs	3, 7, cr0, cr3, cr5, {0}
    4900:	03060d05 	movweq	r0, #27909	; 0x6d05
    4904:	11053c15 	tstne	r5, r5, lsl ip
    4908:	061d0530 			; <UNDEFINED> instruction: 0x061d0530
    490c:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    4910:	061d0521 	ldreq	r0, [sp], -r1, lsr #10
    4914:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    4918:	061f0521 	ldreq	r0, [pc], -r1, lsr #10
    491c:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    4920:	0629052f 	strteq	r0, [r9], -pc, lsr #10
    4924:	060d0501 	streq	r0, [sp], -r1, lsl #10
    4928:	0f05303e 	svceq	0x0005303e
    492c:	12050106 	andne	r0, r5, #-2147483647	; 0x80000001
    4930:	14054306 	strne	r4, [r5], #-774	; 0xfffffcfa
    4934:	37050106 	strcc	r0, [r5, -r6, lsl #2]
    4938:	01040200 	mrseq	r0, R12_usr
    493c:	0616052e 	ldreq	r0, [r6], -lr, lsr #10
    4940:	06180536 			; <UNDEFINED> instruction: 0x06180536
    4944:	06160501 	ldreq	r0, [r6], -r1, lsl #10
    4948:	053c2903 	ldreq	r2, [ip, #-2307]!	; 0xfffff6fd
    494c:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    4950:	04020047 	streq	r0, [r2], #-71	; 0xffffffb9
    4954:	1d053c01 	stcne	12, cr3, [r5, #-4]
    4958:	05200f03 	streq	r0, [r0, #-3843]!	; 0xfffff0fd
    495c:	4d030615 	stcmi	6, cr0, [r3, #-84]	; 0xffffffac
    4960:	0619052e 	ldreq	r0, [r9], -lr, lsr #10
    4964:	20170501 	andscs	r0, r7, r1, lsl #10
    4968:	1e032105 	adfnes	f2, f3, f5
    496c:	71030620 	tstvc	r3, r0, lsr #12
    4970:	0639052e 	ldrteq	r0, [r9], -lr, lsr #10
    4974:	4a230501 	bmi	8c5d80 <__RAM_SIZE+0x7c5d80>
    4978:	02007205 	andeq	r7, r0, #1342177280	; 0x50000000
    497c:	2c060204 	sfmcs	f0, 4, [r6], {4}
    4980:	02007305 	andeq	r7, r0, #335544320	; 0x14000000
    4984:	01060204 	tsteq	r6, r4, lsl #4
    4988:	02040200 	andeq	r0, r4, #0, 4
    498c:	20240520 	eorcs	r0, r4, r0, lsr #10
    4990:	02003805 	andeq	r3, r0, #327680	; 0x50000
    4994:	20060104 	andcs	r0, r6, r4, lsl #2
    4998:	02001d05 	andeq	r1, r0, #320	; 0x140
    499c:	01060104 	tsteq	r6, r4, lsl #2
    49a0:	2e2c2505 	cfsh64cs	mvdx2, mvdx12, #5
    49a4:	1e031d05 	cdpne	13, 0, cr1, cr3, cr5, {0}
    49a8:	03190501 	tsteq	r9, #4194304	; 0x400000
    49ac:	052e7fb5 	streq	r7, [lr, #-4021]!	; 0xfffff04b
    49b0:	e903062d 	stmdb	r3, {r0, r2, r3, r5, r9, sl}
    49b4:	09052000 	stmdbeq	r5, {sp}
    49b8:	06050514 			; <UNDEFINED> instruction: 0x06050514
    49bc:	03190513 	tsteq	r9, #79691776	; 0x4c00000
    49c0:	05207fa7 	streq	r7, [r0, #-4007]!	; 0xfffff059
    49c4:	d603062d 	strle	r0, [r3], -sp, lsr #12
    49c8:	09052000 	stmdbeq	r5, {sp}
    49cc:	06050514 			; <UNDEFINED> instruction: 0x06050514
    49d0:	03190513 	tsteq	r9, #79691776	; 0x4c00000
    49d4:	052e7fad 	streq	r7, [lr, #-4013]!	; 0xfffff053
    49d8:	4a1a032d 	bmi	685694 <__RAM_SIZE+0x585694>
    49dc:	031d052e 	tsteq	sp, #192937984	; 0xb800000
    49e0:	0e020118 	mcreq	1, 0, r0, cr2, cr8, {0}
    49e4:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    49e8:	02050005 	andeq	r0, r5, #5
    49ec:	00000000 	andeq	r0, r0, r0
    49f0:	0114b903 	tsteq	r4, r3, lsl #18
    49f4:	09050106 	stmdbeq	r5, {r1, r2, r8}
    49f8:	05132f06 	ldreq	r2, [r3, #-3846]	; 0xfffff0fa
    49fc:	0905142e 	stmdbeq	r5, {r1, r2, r3, r5, sl, ip}
    4a00:	320d0514 	andcc	r0, sp, #20, 10	; 0x5000000
    4a04:	01061505 	tsteq	r6, r5, lsl #10
    4a08:	02000d05 	andeq	r0, r0, #320	; 0x140
    4a0c:	21060404 	tstcs	r6, r4, lsl #8
    4a10:	02001605 	andeq	r1, r0, #5242880	; 0x500000
    4a14:	01060404 	tsteq	r6, r4, lsl #8
    4a18:	02000905 	andeq	r0, r0, #81920	; 0x14000
    4a1c:	22060404 	andcs	r0, r6, #4, 8	; 0x4000000
    4a20:	02003205 	andeq	r3, r0, #1342177280	; 0x50000000
    4a24:	05300404 	ldreq	r0, [r0, #-1028]!	; 0xfffffbfc
    4a28:	04020009 	streq	r0, [r2], #-9
    4a2c:	05051404 	streq	r1, [r5, #-1028]	; 0xfffffbfc
    4a30:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    4a34:	15051306 	strne	r1, [r5, #-774]	; 0xfffffcfa
    4a38:	01040200 	mrseq	r0, R12_usr
    4a3c:	002e7803 	eoreq	r7, lr, r3, lsl #16
    4a40:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    4a44:	01000402 	tsteq	r0, r2, lsl #8
    4a48:	00050501 	andeq	r0, r5, r1, lsl #10
    4a4c:	00000205 	andeq	r0, r0, r5, lsl #4
    4a50:	d3030000 	movwle	r0, #12288	; 0x3000
    4a54:	01060114 	tsteq	r6, r4, lsl r1
    4a58:	2f060905 	svccs	0x00060905
    4a5c:	35051313 	strcc	r1, [r5, #-787]	; 0xfffffced
    4a60:	03330514 	teqeq	r3, #20, 10	; 0x5000000
    4a64:	09050112 	stmdbeq	r5, {r1, r4, r8}
    4a68:	06320517 			; <UNDEFINED> instruction: 0x06320517
    4a6c:	060d0501 	streq	r0, [sp], -r1, lsl #10
    4a70:	06150532 			; <UNDEFINED> instruction: 0x06150532
    4a74:	000d0501 	andeq	r0, sp, r1, lsl #10
    4a78:	06040402 	streq	r0, [r4], -r2, lsl #8
    4a7c:	00160521 	andseq	r0, r6, r1, lsr #10
    4a80:	06040402 	streq	r0, [r4], -r2, lsl #8
    4a84:	00090501 	andeq	r0, r9, r1, lsl #10
    4a88:	06040402 	streq	r0, [r4], -r2, lsl #8
    4a8c:	00390522 	eorseq	r0, r9, r2, lsr #10
    4a90:	30040402 	andcc	r0, r4, r2, lsl #8
    4a94:	02000905 	andeq	r0, r0, #81920	; 0x14000
    4a98:	05140404 	ldreq	r0, [r4, #-1028]	; 0xfffffbfc
    4a9c:	04020005 	streq	r0, [r2], #-5
    4aa0:	05130604 	ldreq	r0, [r3, #-1540]	; 0xfffff9fc
    4aa4:	04020015 	streq	r0, [r2], #-21	; 0xffffffeb
    4aa8:	2e780301 	cdpcs	3, 7, cr0, cr8, cr1, {0}
    4aac:	01040200 	mrseq	r0, R12_usr
    4ab0:	0004022e 	andeq	r0, r4, lr, lsr #4
    4ab4:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    4ab8:	00020500 	andeq	r0, r2, r0, lsl #10
    4abc:	03000000 	movweq	r0, #0
    4ac0:	06011583 	streq	r1, [r1], -r3, lsl #11
    4ac4:	06090501 	streq	r0, [r9], -r1, lsl #10
    4ac8:	3205132f 	andcc	r1, r5, #-1140850688	; 0xbc000000
    4acc:	14090514 	strne	r0, [r9], #-1300	; 0xfffffaec
    4ad0:	05320d05 	ldreq	r0, [r2, #-3333]!	; 0xfffff2fb
    4ad4:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    4ad8:	0402000d 	streq	r0, [r2], #-13
    4adc:	05210604 	streq	r0, [r1, #-1540]!	; 0xfffff9fc
    4ae0:	04020016 	streq	r0, [r2], #-22	; 0xffffffea
    4ae4:	05010604 	streq	r0, [r1, #-1540]	; 0xfffff9fc
    4ae8:	04020009 	streq	r0, [r2], #-9
    4aec:	05220604 	streq	r0, [r2, #-1540]!	; 0xfffff9fc
    4af0:	04020036 	streq	r0, [r2], #-54	; 0xffffffca
    4af4:	09053004 	stmdbeq	r5, {r2, ip, sp}
    4af8:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    4afc:	00050514 	andeq	r0, r5, r4, lsl r5
    4b00:	06040402 	streq	r0, [r4], -r2, lsl #8
    4b04:	00150513 	andseq	r0, r5, r3, lsl r5
    4b08:	03010402 	movweq	r0, #5122	; 0x1402
    4b0c:	02002e78 	andeq	r2, r0, #120, 28	; 0x780
    4b10:	022e0104 	eoreq	r0, lr, #4, 2
    4b14:	01010004 	tsteq	r1, r4
    4b18:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    4b1c:	00000002 	andeq	r0, r0, r2
    4b20:	159d0300 	ldrne	r0, [sp, #768]	; 0x300
    4b24:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    4b28:	132f0609 			; <UNDEFINED> instruction: 0x132f0609
    4b2c:	14390513 	ldrtne	r0, [r9], #-1299	; 0xfffffaed
    4b30:	12033305 	andne	r3, r3, #335544320	; 0x14000000
    4b34:	17090501 	strne	r0, [r9, -r1, lsl #10]
    4b38:	01063205 	tsteq	r6, r5, lsl #4
    4b3c:	32060d05 	andcc	r0, r6, #320	; 0x140
    4b40:	01061505 	tsteq	r6, r5, lsl #10
    4b44:	02000d05 	andeq	r0, r0, #320	; 0x140
    4b48:	21060404 	tstcs	r6, r4, lsl #8
    4b4c:	02001605 	andeq	r1, r0, #5242880	; 0x500000
    4b50:	01060404 	tsteq	r6, r4, lsl #8
    4b54:	02000905 	andeq	r0, r0, #81920	; 0x14000
    4b58:	22060404 	andcs	r0, r6, #4, 8	; 0x4000000
    4b5c:	02003d05 	andeq	r3, r0, #320	; 0x140
    4b60:	05300404 	ldreq	r0, [r0, #-1028]!	; 0xfffffbfc
    4b64:	04020009 	streq	r0, [r2], #-9
    4b68:	05051404 	streq	r1, [r5, #-1028]	; 0xfffffbfc
    4b6c:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    4b70:	15051306 	strne	r1, [r5, #-774]	; 0xfffffcfa
    4b74:	01040200 	mrseq	r0, R12_usr
    4b78:	002e7803 	eoreq	r7, lr, r3, lsl #16
    4b7c:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    4b80:	01000402 	tsteq	r0, r2, lsl #8
    4b84:	00050501 	andeq	r0, r5, r1, lsl #10
    4b88:	00000205 	andeq	r0, r0, r5, lsl #4
    4b8c:	ce030000 	cdpgt	0, 0, cr0, cr3, cr0, {0}
    4b90:	01060115 	tsteq	r6, r5, lsl r1
    4b94:	3d060905 	vstrcc.16	s0, [r6, #-10]	; <UNPREDICTABLE>
    4b98:	3c051313 	stccc	3, cr1, [r5], {19}
    4b9c:	143d0518 	ldrtne	r0, [sp], #-1304	; 0xfffffae8
    4ba0:	05150905 	ldreq	r0, [r5, #-2309]	; 0xfffff6fb
    4ba4:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
    4ba8:	2505301b 	strcs	r3, [r5, #-27]	; 0xffffffe5
    4bac:	09052406 	stmdbeq	r5, {r1, r2, sl, sp}
    4bb0:	320d0515 	andcc	r0, sp, #88080384	; 0x5400000
    4bb4:	01061505 	tsteq	r6, r5, lsl #10
    4bb8:	02003b05 	andeq	r3, r0, #5120	; 0x1400
    4bbc:	22060404 	andcs	r0, r6, #4, 8	; 0x4000000
    4bc0:	02001105 	andeq	r1, r0, #1073741825	; 0x40000001
    4bc4:	05160404 	ldreq	r0, [r6, #-1028]	; 0xfffffbfc
    4bc8:	04020027 	streq	r0, [r2], #-39	; 0xffffffd9
    4bcc:	05010604 	streq	r0, [r1, #-1540]	; 0xfffff9fc
    4bd0:	0402000d 	streq	r0, [r2], #-13
    4bd4:	05280604 	streq	r0, [r8, #-1540]!	; 0xfffff9fc
    4bd8:	0402000f 	streq	r0, [r2], #-15
    4bdc:	05010604 	streq	r0, [r1, #-1540]	; 0xfffff9fc
    4be0:	05320611 	ldreq	r0, [r2, #-1553]!	; 0xfffff9ef
    4be4:	05010613 	streq	r0, [r1, #-1555]	; 0xfffff9ed
    4be8:	05240619 	streq	r0, [r4, #-1561]!	; 0xfffff9e7
    4bec:	05010623 	streq	r0, [r1, #-1571]	; 0xfffff9dd
    4bf0:	1d052e1b 	stcne	14, cr2, [r5, #-108]	; 0xffffff94
    4bf4:	3d053306 	stccc	3, cr3, [r5, #-24]	; 0xffffffe8
    4bf8:	1f050106 	svcne	0x00050106
    4bfc:	0314053c 	tsteq	r4, #60, 10	; 0xf000000
    4c00:	15052e4d 	strne	r2, [r5, #-3661]	; 0xfffff1b3
    4c04:	01040200 	mrseq	r0, R12_usr
    4c08:	002e1803 	eoreq	r1, lr, r3, lsl #16
    4c0c:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    4c10:	03061605 	movweq	r1, #26117	; 0x6605
    4c14:	37052033 	smladxcc	r5, r3, r0, r2
    4c18:	18050106 	stmdane	r5, {r1, r2, r8}
    4c1c:	0314052e 	tsteq	r4, #192937984	; 0xb800000
    4c20:	052e7fb5 	streq	r7, [lr, #-4021]!	; 0xfffff04b
    4c24:	dc030611 	stcle	6, cr0, [r3], {17}
    4c28:	05172000 	ldreq	r2, [r7, #-0]
    4c2c:	05010627 	streq	r0, [r1, #-1575]	; 0xfffff9d9
    4c30:	05270615 	streq	r0, [r7, #-1557]!	; 0xfffff9eb
    4c34:	05010617 	streq	r0, [r1, #-1559]	; 0xfffff9e9
    4c38:	04020048 	streq	r0, [r2], #-72	; 0xffffffb8
    4c3c:	19052e01 	stmdbne	r5, {r0, r9, sl, fp, sp}
    4c40:	2b053006 	blcs	150c60 <__RAM_SIZE+0x50c60>
    4c44:	15050106 	strne	r0, [r5, #-262]	; 0xfffffefa
    4c48:	2b052806 	blcs	14ec68 <__RAM_SIZE+0x4ec68>
    4c4c:	11050106 	tstne	r5, r6, lsl #2
    4c50:	200a0306 	andcs	r0, sl, r6, lsl #6
    4c54:	01061705 	tsteq	r6, r5, lsl #14
    4c58:	05201305 	streq	r1, [r0, #-773]!	; 0xfffffcfb
    4c5c:	06300615 			; <UNDEFINED> instruction: 0x06300615
    4c60:	062d052e 	strteq	r0, [sp], -lr, lsr #10
    4c64:	19110524 	ldmdbne	r1, {r2, r5, r8, sl}
    4c68:	01061505 	tsteq	r6, r5, lsl #10
    4c6c:	3c13053c 	cfldr32cc	mvfx0, [r3], {60}	; 0x3c
    4c70:	03063105 	movweq	r3, #24837	; 0x6105
    4c74:	11052e17 	tstne	r5, r7, lsl lr
    4c78:	05010c03 	streq	r0, [r1, #-3075]	; 0xfffff3fd
    4c7c:	05010613 	streq	r0, [r1, #-1555]	; 0xfffff9ed
    4c80:	12030631 	andne	r0, r3, #51380224	; 0x3100000
    4c84:	18110520 	ldmdane	r1, {r5, r8, sl}
    4c88:	05150905 	ldreq	r0, [r5, #-2309]	; 0xfffff6fb
    4c8c:	05053027 	streq	r3, [r5, #-39]	; 0xffffffd9
    4c90:	14051306 	strne	r1, [r5], #-774	; 0xfffffcfa
    4c94:	207eb603 	rsbscs	fp, lr, r3, lsl #12
    4c98:	35033005 	strcc	r3, [r3, #-5]
    4c9c:	0328052e 			; <UNDEFINED> instruction: 0x0328052e
    4ca0:	15052e1f 	strne	r2, [r5, #-3615]	; 0xfffff1e1
    4ca4:	2e3a0306 	cdpcs	3, 3, cr0, cr10, cr6, {0}
    4ca8:	01061905 	tsteq	r6, r5, lsl #18
    4cac:	03063105 	movweq	r3, #24837	; 0x6105
    4cb0:	15054a09 	strne	r4, [r5, #-2569]	; 0xfffff5f7
    4cb4:	01010115 	tsteq	r1, r5, lsl r1
    4cb8:	01040200 	mrseq	r0, R12_usr
    4cbc:	04020058 	streq	r0, [r2], #-88	; 0xffffffa8
    4cc0:	02002e03 	andeq	r2, r0, #3, 28	; 0x30
    4cc4:	00010304 	andeq	r0, r1, r4, lsl #6
    4cc8:	01030402 	tsteq	r3, r2, lsl #8
    4ccc:	03040200 	movweq	r0, #16896	; 0x4200
    4cd0:	04020066 	streq	r0, [r2], #-102	; 0xffffff9a
    4cd4:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    4cd8:	00010304 	andeq	r0, r1, r4, lsl #6
    4cdc:	20030402 	andcs	r0, r3, r2, lsl #8
    4ce0:	03040200 	movweq	r0, #16896	; 0x4200
    4ce4:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    4ce8:	02002003 	andeq	r2, r0, #3
    4cec:	00200304 	eoreq	r0, r0, r4, lsl #6
    4cf0:	06030402 	streq	r0, [r3], -r2, lsl #8
    4cf4:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    4cf8:	00580603 	subseq	r0, r8, r3, lsl #12
    4cfc:	74030402 	strvc	r0, [r3], #-1026	; 0xfffffbfe
    4d00:	03040200 	movweq	r0, #16896	; 0x4200
    4d04:	04020001 	streq	r0, [r2], #-1
    4d08:	15030103 	strne	r0, [r3, #-259]	; 0xfffffefd
    4d0c:	2e010120 	adfcssp	f0, f1, f0
    4d10:	01000702 	tsteq	r0, r2, lsl #14
    4d14:	00050501 	andeq	r0, r5, r1, lsl #10
    4d18:	00000205 	andeq	r0, r0, r5, lsl #4
    4d1c:	99030000 	stmdbls	r3, {}	; <UNPREDICTABLE>
    4d20:	0106011a 	tsteq	r6, sl, lsl r1
    4d24:	21060905 	tstcs	r6, r5, lsl #18
    4d28:	05143005 	ldreq	r3, [r4, #-5]
    4d2c:	0d051526 	cfstr32eq	mvfx1, [r5, #-152]	; 0xffffff68
    4d30:	06190518 			; <UNDEFINED> instruction: 0x06190518
    4d34:	2e0f0501 	cfsh32cs	mvfx0, mvfx15, #1
    4d38:	02002b05 	andeq	r2, r0, #5120	; 0x1400
    4d3c:	053c0104 	ldreq	r0, [ip, #-260]!	; 0xfffffefc
    4d40:	0b03060d 	bleq	c657c <__HEAP_SIZE+0xc557c>
    4d44:	30110520 	andscc	r0, r1, r0, lsr #10
    4d48:	01061505 	tsteq	r6, r5, lsl #10
    4d4c:	053c1305 	ldreq	r1, [ip, #-773]!	; 0xfffffcfb
    4d50:	1003062d 	andne	r0, r3, sp, lsr #12
    4d54:	150d0520 	strne	r0, [sp, #-1312]	; 0xfffffae0
    4d58:	05322505 	ldreq	r2, [r2, #-1285]!	; 0xfffffafb
    4d5c:	05051522 	streq	r1, [r5, #-1314]	; 0xfffffade
    4d60:	2e051306 	cdpcs	3, 0, cr1, cr5, cr6, {0}
    4d64:	20670306 	rsbcs	r0, r7, r6, lsl #6
    4d68:	05161505 	ldreq	r1, [r6, #-1285]	; 0xfffffafb
    4d6c:	0501061e 	streq	r0, [r1, #-1566]	; 0xfffff9e2
    4d70:	014b0615 	cmpeq	fp, r5, lsl r6
    4d74:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    4d78:	00580104 	subseq	r0, r8, r4, lsl #2
    4d7c:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
    4d80:	03040200 	movweq	r0, #16896	; 0x4200
    4d84:	04020001 	streq	r0, [r2], #-1
    4d88:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    4d8c:	00660304 	rsbeq	r0, r6, r4, lsl #6
    4d90:	01030402 	tsteq	r3, r2, lsl #8
    4d94:	03040200 	movweq	r0, #16896	; 0x4200
    4d98:	04020001 	streq	r0, [r2], #-1
    4d9c:	02002003 	andeq	r2, r0, #3
    4da0:	002e0304 	eoreq	r0, lr, r4, lsl #6
    4da4:	20030402 	andcs	r0, r3, r2, lsl #8
    4da8:	03040200 	movweq	r0, #16896	; 0x4200
    4dac:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    4db0:	00200603 	eoreq	r0, r0, r3, lsl #12
    4db4:	06030402 	streq	r0, [r3], -r2, lsl #8
    4db8:	04020058 	streq	r0, [r2], #-88	; 0xffffffa8
    4dbc:	02007403 	andeq	r7, r0, #50331648	; 0x3000000
    4dc0:	00010304 	andeq	r0, r1, r4, lsl #6
    4dc4:	01030402 	tsteq	r3, r2, lsl #8
    4dc8:	03040200 	movweq	r0, #16896	; 0x4200
    4dcc:	04020017 	streq	r0, [r2], #-23	; 0xffffffe9
    4dd0:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    4dd4:	02660104 	rsbeq	r0, r6, #4, 2
    4dd8:	01010009 	tsteq	r1, r9
    4ddc:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    4de0:	00000002 	andeq	r0, r0, r2
    4de4:	1ad60300 	bne	ff5859ec <__StackTop+0xc74859ec>
    4de8:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    4dec:	132f0609 			; <UNDEFINED> instruction: 0x132f0609
    4df0:	14370513 	ldrtne	r0, [r7], #-1299	; 0xfffffaed
    4df4:	05142605 	ldreq	r2, [r4, #-1541]	; 0xfffff9fb
    4df8:	01120333 	tsteq	r2, r3, lsr r3
    4dfc:	05170905 	ldreq	r0, [r7, #-2309]	; 0xfffff6fb
    4e00:	2e010622 	cfmadd32cs	mvax1, mvfx0, mvfx1, mvfx2
    4e04:	22060d05 	andcs	r0, r6, #320	; 0x140
    4e08:	01061105 	tsteq	r6, r5, lsl #2
    4e0c:	2e0f0520 	cfsh32cs	mvfx0, mvfx15, #16
    4e10:	3e063305 	cdpcc	3, 0, cr3, cr6, cr5, {0}
    4e14:	05151105 	ldreq	r1, [r5, #-261]	; 0xfffffefb
    4e18:	0501062a 	streq	r0, [r1, #-1578]	; 0xfffff9d6
    4e1c:	19052e13 	stmdbne	r5, {r0, r1, r4, r9, sl, fp, sp}
    4e20:	22053406 	andcs	r3, r5, #100663296	; 0x6000000
    4e24:	3d050106 	stfccs	f0, [r5, #-24]	; 0xffffffe8
    4e28:	3c1b0520 	cfldr32cc	mvfx0, [fp], {32}
    4e2c:	30061d05 	andcc	r1, r6, r5, lsl #26
    4e30:	06310517 			; <UNDEFINED> instruction: 0x06310517
    4e34:	06350501 	ldrteq	r0, [r5], -r1, lsl #10
    4e38:	17150540 	ldrne	r0, [r5, -r0, asr #10]
    4e3c:	01061e05 	tsteq	r6, r5, lsl #28
    4e40:	4b061505 	blmi	18a25c <__RAM_SIZE+0x8a25c>
    4e44:	00010101 	andeq	r0, r1, r1, lsl #2
    4e48:	58010402 	stmdapl	r1, {r1, sl}
    4e4c:	03040200 	movweq	r0, #16896	; 0x4200
    4e50:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    4e54:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    4e58:	00010304 	andeq	r0, r1, r4, lsl #6
    4e5c:	66030402 	strvs	r0, [r3], -r2, lsl #8
    4e60:	03040200 	movweq	r0, #16896	; 0x4200
    4e64:	04020001 	streq	r0, [r2], #-1
    4e68:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    4e6c:	00200304 	eoreq	r0, r0, r4, lsl #6
    4e70:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
    4e74:	03040200 	movweq	r0, #16896	; 0x4200
    4e78:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    4e7c:	02002003 	andeq	r2, r0, #3
    4e80:	20060304 	andcs	r0, r6, r4, lsl #6
    4e84:	03040200 	movweq	r0, #16896	; 0x4200
    4e88:	02005806 	andeq	r5, r0, #393216	; 0x60000
    4e8c:	00740304 	rsbseq	r0, r4, r4, lsl #6
    4e90:	01030402 	tsteq	r3, r2, lsl #8
    4e94:	03040200 	movweq	r0, #16896	; 0x4200
    4e98:	03290501 			; <UNDEFINED> instruction: 0x03290501
    4e9c:	09050117 	stmdbeq	r5, {r0, r1, r2, r4, r8}
    4ea0:	3e390515 	mrccc	5, 1, r0, cr9, cr5, {0}
    4ea4:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    4ea8:	05130605 	ldreq	r0, [r3, #-1541]	; 0xfffff9fb
    4eac:	7fa60314 	svcvc	0x00a60314
    4eb0:	0615052e 	ldreq	r0, [r5], -lr, lsr #10
    4eb4:	2e00c203 	cdpcs	2, 0, cr12, cr0, cr3, {0}
    4eb8:	03061405 	movweq	r1, #25605	; 0x6405
    4ebc:	02587fbe 	subseq	r7, r8, #760	; 0x2f8
    4ec0:	0101000f 	tsteq	r1, pc
    4ec4:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    4ec8:	00000002 	andeq	r0, r0, r2
    4ecc:	1db80300 	ldcne	3, cr0, [r8]
    4ed0:	21230501 			; <UNDEFINED> instruction: 0x21230501
    4ed4:	05160905 	ldreq	r0, [r6, #-2309]	; 0xfffff6fb
    4ed8:	0905170d 	stmdbeq	r5, {r0, r2, r3, r8, r9, sl, ip}
    4edc:	0616054f 	ldreq	r0, [r6], -pc, asr #10
    4ee0:	001b0501 	andseq	r0, fp, r1, lsl #10
    4ee4:	06010402 	streq	r0, [r1], -r2, lsl #8
    4ee8:	00090520 	andeq	r0, r9, r0, lsr #10
    4eec:	06010402 	streq	r0, [r1], -r2, lsl #8
    4ef0:	09030601 	stmdbeq	r3, {r0, r9, sl}
    4ef4:	3505052e 	strcc	r0, [r5, #-1326]	; 0xfffffad2
    4ef8:	0617052f 	ldreq	r0, [r7], -pc, lsr #10
    4efc:	06050501 	streq	r0, [r5], -r1, lsl #10
    4f00:	30240540 	eorcc	r0, r4, r0, asr #10
    4f04:	13060105 	movwne	r0, #24837	; 0x6105
    4f08:	02000d05 	andeq	r0, r0, #320	; 0x140
    4f0c:	03060304 	movweq	r0, #25348	; 0x6304
    4f10:	4b05206a 	blmi	14d0c0 <__RAM_SIZE+0x4d0c0>
    4f14:	03040200 	movweq	r0, #16896	; 0x4200
    4f18:	00520556 	subseq	r0, r2, r6, asr r5
    4f1c:	06030402 	streq	r0, [r3], -r2, lsl #8
    4f20:	04020001 	streq	r0, [r2], #-1
    4f24:	06022003 	streq	r2, [r2], -r3
    4f28:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    4f2c:	02050001 	andeq	r0, r5, #1
    4f30:	10002818 	andne	r2, r0, r8, lsl r8
    4f34:	011de303 	tsteq	sp, r3, lsl #6
    4f38:	05132105 	ldreq	r2, [r3, #-261]	; 0xfffffefb
    4f3c:	010b031f 	tsteq	fp, pc, lsl r3
    4f40:	05160905 	ldreq	r0, [r6, #-2309]	; 0xfffff6fb
    4f44:	05010620 	streq	r0, [r1, #-1568]	; 0xfffff9e0
    4f48:	09053c1e 	stmdbeq	r5, {r1, r2, r3, r4, sl, fp, ip, sp}
    4f4c:	22052406 	andcs	r2, r5, #100663296	; 0x6000000
    4f50:	05013703 	streq	r3, [r1, #-1795]	; 0xfffff8fd
    4f54:	02130601 	andseq	r0, r3, #1048576	; 0x100000
    4f58:	01010004 	tsteq	r1, r4
    4f5c:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    4f60:	00282802 	eoreq	r2, r8, r2, lsl #16
    4f64:	208a0310 	addcs	r0, sl, r0, lsl r3
    4f68:	13050501 	movwne	r0, #21761	; 0x5501
    4f6c:	15142305 	ldrne	r2, [r4, #-773]	; 0xfffffcfb
    4f70:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    4f74:	05010610 	streq	r0, [r1, #-1552]	; 0xfffff9f0
    4f78:	05300622 	ldreq	r0, [r0, #-1570]!	; 0xfffff9de
    4f7c:	0505142c 	streq	r1, [r5, #-1068]	; 0xfffffbd4
    4f80:	06010514 			; <UNDEFINED> instruction: 0x06010514
    4f84:	00040213 	andeq	r0, r4, r3, lsl r2
    4f88:	01050101 	tsteq	r5, r1, lsl #2
    4f8c:	00020500 	andeq	r0, r2, r0, lsl #10
    4f90:	03000000 	movweq	r0, #0
    4f94:	0501209d 	streq	r2, [r1, #-157]	; 0xffffff63
    4f98:	05131305 	ldreq	r1, [r3, #-773]	; 0xfffffcfb
    4f9c:	2f05142a 	svccs	0x0005142a
    4fa0:	05011003 	streq	r1, [r1, #-3]
    4fa4:	09051405 	stmdbeq	r5, {r0, r2, sl, ip}
    4fa8:	06110514 			; <UNDEFINED> instruction: 0x06110514
    4fac:	06050501 	streq	r0, [r5], -r1, lsl #10
    4fb0:	14340530 	ldrtne	r0, [r4], #-1328	; 0xfffffad0
    4fb4:	05140505 	ldreq	r0, [r4, #-1285]	; 0xfffffafb
    4fb8:	02130601 	andseq	r0, r3, #1048576	; 0x100000
    4fbc:	01010004 	tsteq	r1, r4
    4fc0:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    4fc4:	00283402 	eoreq	r3, r8, r2, lsl #8
    4fc8:	20c00310 	sbccs	r0, r0, r0, lsl r3
    4fcc:	13280501 			; <UNDEFINED> instruction: 0x13280501
    4fd0:	05164105 	ldreq	r4, [r6, #-261]	; 0xfffffefb
    4fd4:	0c051405 	cfstrseq	mvf1, [r5], {5}
    4fd8:	01050106 	tsteq	r5, r6, lsl #2
    4fdc:	0004022f 	andeq	r0, r4, pc, lsr #4
    4fe0:	01050101 	tsteq	r5, r1, lsl #2
    4fe4:	00020500 	andeq	r0, r2, r0, lsl #10
    4fe8:	03000000 	movweq	r0, #0
    4fec:	050120cc 	streq	r2, [r1, #-204]	; 0xffffff34
    4ff0:	2d051305 	stccs	3, cr1, [r5, #-20]	; 0xffffffec
    4ff4:	16050514 			; <UNDEFINED> instruction: 0x16050514
    4ff8:	01060d05 	tsteq	r6, r5, lsl #26
    4ffc:	02001a05 	andeq	r1, r0, #20480	; 0x5000
    5000:	2f060404 	svccs	0x00060404
    5004:	02003d05 	andeq	r3, r0, #320	; 0x140
    5008:	05140404 	ldreq	r0, [r4, #-1028]	; 0xfffffbfc
    500c:	04020005 	streq	r0, [r2], #-5
    5010:	01051404 	tsteq	r5, r4, lsl #8
    5014:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    5018:	0d051306 	stceq	3, cr1, [r5, #-24]	; 0xffffffe8
    501c:	01040200 	mrseq	r0, R12_usr
    5020:	003c7a03 	eorseq	r7, ip, r3, lsl #20
    5024:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    5028:	01000302 	tsteq	r0, r2, lsl #6
    502c:	00050501 	andeq	r0, r5, r1, lsl #10
    5030:	00000205 	andeq	r0, r0, r5, lsl #4
    5034:	ed030000 	stc	0, cr0, [r3, #-0]
    5038:	09050121 	stmdbeq	r5, {r0, r5, r8}
    503c:	52051313 	andpl	r1, r5, #1275068416	; 0x4c000000
    5040:	14300514 	ldrtne	r0, [r0], #-1300	; 0xfffffaec
    5044:	05132e05 	ldreq	r2, [r3, #-3589]	; 0xfffff1fb
    5048:	11051409 	tstne	r5, r9, lsl #8
    504c:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    5050:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    5054:	16053206 	strne	r3, [r5], -r6, lsl #4
    5058:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    505c:	0f050106 	svceq	0x00050106
    5060:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    5064:	0612052e 	ldreq	r0, [r2], -lr, lsr #10
    5068:	052e0903 	streq	r0, [lr, #-2307]!	; 0xfffff6fd
    506c:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
    5070:	35053619 	strcc	r3, [r5, #-1561]	; 0xfffff9e7
    5074:	200b0306 	andcs	r0, fp, r6, lsl #6
    5078:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    507c:	05130605 	ldreq	r0, [r3, #-1541]	; 0xfffff9fb
    5080:	04020011 	streq	r0, [r2], #-17	; 0xffffffef
    5084:	205d0301 	subscs	r0, sp, r1, lsl #6
    5088:	01040200 	mrseq	r0, R12_usr
    508c:	0526062e 	streq	r0, [r6, #-1582]!	; 0xfffff9d2
    5090:	05010629 	streq	r0, [r1, #-1577]	; 0xfffff9d7
    5094:	11052022 	tstne	r5, r2, lsr #32
    5098:	20052406 	andcs	r2, r5, r6, lsl #8
    509c:	11050106 	tstne	r5, r6, lsl #2
    50a0:	19052106 	stmdbne	r5, {r1, r2, r8, sp}
    50a4:	11050106 	tstne	r5, r6, lsl #2
    50a8:	29053206 	stmdbcs	r5, {r1, r2, r9, ip, sp}
    50ac:	22050106 	andcs	r0, r5, #-2147483647	; 0x80000001
    50b0:	06110520 	ldreq	r0, [r1], -r0, lsr #10
    50b4:	06200521 	strteq	r0, [r0], -r1, lsr #10
    50b8:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    50bc:	0201062f 	andeq	r0, r1, #49283072	; 0x2f00000
    50c0:	01010004 	tsteq	r1, r4
    50c4:	05000905 	streq	r0, [r0, #-2309]	; 0xfffff6fb
    50c8:	00000002 	andeq	r0, r0, r2
    50cc:	22f10300 	rscscs	r0, r1, #0, 6
    50d0:	13300501 	teqne	r0, #4194304	; 0x400000
    50d4:	05163e05 	ldreq	r3, [r6, #-3589]	; 0xfffff1fb
    50d8:	0d051448 	cfstrseq	mvf1, [r5, #-288]	; 0xfffffee0
    50dc:	06090514 			; <UNDEFINED> instruction: 0x06090514
    50e0:	00060213 	andeq	r0, r6, r3, lsl r2
    50e4:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    50e8:	00020500 	andeq	r0, r2, r0, lsl #10
    50ec:	03000000 	movweq	r0, #0
    50f0:	050122ff 	streq	r2, [r1, #-767]	; 0xfffffd01
    50f4:	3f05133c 	svccc	0x0005133c
    50f8:	16400515 			; <UNDEFINED> instruction: 0x16400515
    50fc:	05145105 	ldreq	r5, [r4, #-261]	; 0xfffffefb
    5100:	05051409 	streq	r1, [r5, #-1033]	; 0xfffffbf7
    5104:	023c1306 	eorseq	r1, ip, #402653184	; 0x18000000
    5108:	01010003 	tsteq	r1, r3
    510c:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    5110:	00284002 	eoreq	r4, r8, r2
    5114:	23980310 	orrscs	r0, r8, #16, 6	; 0x40000000
    5118:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    511c:	052f0609 	streq	r0, [pc, #-1545]!	; 4b1b <__HEAP_SIZE+0x3b1b>
    5120:	09051431 	stmdbeq	r5, {r0, r4, r5, sl, ip}
    5124:	06280517 			; <UNDEFINED> instruction: 0x06280517
    5128:	2e1b0501 	cfmul32cs	mvfx0, mvfx11, mvfx1
    512c:	21064205 	tstcs	r6, r5, lsl #4
    5130:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    5134:	0501061f 	streq	r0, [r1, #-1567]	; 0xfffff9e1
    5138:	25052e0b 	strcs	r2, [r5, #-3595]	; 0xfffff1f5
    513c:	2e120306 	cdpcs	3, 1, cr0, cr2, cr6, {0}
    5140:	05150905 	ldreq	r0, [r5, #-2309]	; 0xfffff6fb
    5144:	3c010614 	stccc	6, cr0, [r1], {20}
    5148:	22063105 	andcs	r3, r6, #1073741825	; 0x40000001
    514c:	05132405 	ldreq	r2, [r3, #-1029]	; 0xfffffbfb
    5150:	05130605 	ldreq	r0, [r3, #-1541]	; 0xfffff9fb
    5154:	6c030647 	stcvs	6, cr0, [r3], {71}	; 0x47
    5158:	133d0520 	teqne	sp, #32, 10	; 0x8000000
    515c:	05150d05 	ldreq	r0, [r5, #-3333]	; 0xfffff2fb
    5160:	1d053011 	stcne	0, cr3, [r5, #-68]	; 0xffffffbc
    5164:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    5168:	052f4c06 	streq	r4, [pc, #-3078]!	; 456a <__HEAP_SIZE+0x356a>
    516c:	20010619 	andcs	r0, r1, r9, lsl r6
    5170:	01000702 	tsteq	r0, r2, lsl #14
    5174:	00010501 	andeq	r0, r1, r1, lsl #10
    5178:	287c0205 	ldmdacs	ip!, {r0, r2, r9}^
    517c:	be031000 	cdplt	0, 0, cr1, cr3, cr0, {0}
    5180:	05050124 	streq	r0, [r5, #-292]	; 0xfffffedc
    5184:	05131313 	ldreq	r1, [r3, #-787]	; 0xfffffced
    5188:	2b051824 	blcs	14b220 <__RAM_SIZE+0x4b220>
    518c:	18050517 	stmdane	r5, {r0, r1, r2, r4, r8, sl}
    5190:	01061e05 	tsteq	r6, r5, lsl #28
    5194:	052e0705 	streq	r0, [lr, #-1797]!	; 0xfffff8fb
    5198:	3c6c0301 	stclcc	3, cr0, [ip], #-4
    519c:	03060905 	movweq	r0, #26885	; 0x6905
    51a0:	37052018 	smladcc	r5, r8, r0, r2
    51a4:	1a050106 	bne	1455c4 <__RAM_SIZE+0x455c4>
    51a8:	0609052e 	streq	r0, [r9], -lr, lsr #10
    51ac:	06140524 	ldreq	r0, [r4], -r4, lsr #10
    51b0:	06090501 	streq	r0, [r9], -r1, lsl #10
    51b4:	060b0522 	streq	r0, [fp], -r2, lsr #10
    51b8:	06250501 	strteq	r0, [r5], -r1, lsl #10
    51bc:	19090526 	stmdbne	r9, {r1, r2, r5, r8, sl}
    51c0:	01061d05 	tsteq	r6, r5, lsl #26
    51c4:	052e0b05 	streq	r0, [lr, #-2821]!	; 0xfffff4fb
    51c8:	2e580310 	mrccs	3, 2, r0, cr8, cr0, {0}
    51cc:	03061105 	movweq	r1, #24837	; 0x6105
    51d0:	0520018c 	streq	r0, [r0, #-396]!	; 0xfffffe74
    51d4:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    51d8:	25058213 	strcs	r8, [r5, #-531]	; 0xfffffded
    51dc:	062d0530 			; <UNDEFINED> instruction: 0x062d0530
    51e0:	03110524 	tsteq	r1, #36, 10	; 0x9000000
    51e4:	2305012b 	movwcs	r0, #20779	; 0x512b
    51e8:	13050106 	movwne	r0, #20742	; 0x5106
    51ec:	01052e2e 	tsteq	r5, lr, lsr #28
    51f0:	05013a03 	streq	r3, [r1, #-2563]	; 0xfffff5fd
    51f4:	a603060d 	strge	r0, [r3], -sp, lsl #12
    51f8:	0101207e 	tsteq	r1, lr, ror r0
    51fc:	203c2e01 	eorscs	r2, ip, r1, lsl #28
    5200:	062e064a 	strteq	r0, [lr], -sl, asr #12
    5204:	05200601 	streq	r0, [r0, #-1537]!	; 0xfffff9ff
    5208:	01630310 	cmneq	r3, r0, lsl r3
    520c:	03061505 	movweq	r1, #25861	; 0x6505
    5210:	2a052e33 	bcs	150ae4 <__RAM_SIZE+0x50ae4>
    5214:	15050106 	strne	r0, [r5, #-262]	; 0xfffffefa
    5218:	19054b06 	stmdbne	r5, {r1, r2, r8, r9, fp, lr}
    521c:	05201503 	streq	r1, [r0, #-1283]!	; 0xfffffafd
    5220:	2001062e 	andcs	r0, r1, lr, lsr #12
    5224:	21061905 	tstcs	r6, r5, lsl #18
    5228:	02001505 	andeq	r1, r0, #20971520	; 0x1400000
    522c:	00280104 	eoreq	r0, r8, r4, lsl #2
    5230:	06010402 	streq	r0, [r1], -r2, lsl #8
    5234:	0019053c 	andseq	r0, r9, ip, lsr r5
    5238:	06030402 	streq	r0, [r3], -r2, lsl #8
    523c:	04020018 	streq	r0, [r2], #-24	; 0xffffffe8
    5240:	02002e03 	andeq	r2, r0, #3, 28	; 0x30
    5244:	053c0304 	ldreq	r0, [ip, #-772]!	; 0xfffffcfc
    5248:	15051631 	strne	r1, [r5, #-1585]	; 0xfffff9cf
    524c:	01010117 	tsteq	r1, r7, lsl r1
    5250:	01040200 	mrseq	r0, R12_usr
    5254:	04020058 	streq	r0, [r2], #-88	; 0xffffffa8
    5258:	02002e03 	andeq	r2, r0, #3, 28	; 0x30
    525c:	00010304 	andeq	r0, r1, r4, lsl #6
    5260:	01030402 	tsteq	r3, r2, lsl #8
    5264:	03040200 	movweq	r0, #16896	; 0x4200
    5268:	04020082 	streq	r0, [r2], #-130	; 0xffffff7e
    526c:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    5270:	00010304 	andeq	r0, r1, r4, lsl #6
    5274:	20030402 	andcs	r0, r3, r2, lsl #8
    5278:	03040200 	movweq	r0, #16896	; 0x4200
    527c:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    5280:	02002003 	andeq	r2, r0, #3
    5284:	00200304 	eoreq	r0, r0, r4, lsl #6
    5288:	06030402 	streq	r0, [r3], -r2, lsl #8
    528c:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    5290:	00660603 	rsbeq	r0, r6, r3, lsl #12
    5294:	66030402 	strvs	r0, [r3], -r2, lsl #8
    5298:	03040200 	movweq	r0, #16896	; 0x4200
    529c:	04020001 	streq	r0, [r2], #-1
    52a0:	1d050103 	stfnes	f0, [r5, #-12]
    52a4:	03040200 	movweq	r0, #16896	; 0x4200
    52a8:	05011003 	streq	r1, [r1, #-3]
    52ac:	04020026 	streq	r0, [r2], #-38	; 0xffffffda
    52b0:	05010603 	streq	r0, [r1, #-1539]	; 0xfffff9fd
    52b4:	04020041 	streq	r0, [r2], #-65	; 0xffffffbf
    52b8:	02002003 	andeq	r2, r0, #3
    52bc:	05200304 	streq	r0, [r0, #-772]!	; 0xfffffcfc
    52c0:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    52c4:	31052e03 	tstcc	r5, r3, lsl #28
    52c8:	060d0530 			; <UNDEFINED> instruction: 0x060d0530
    52cc:	207fb703 	rsbscs	fp, pc, r3, lsl #14
    52d0:	05141105 	ldreq	r1, [r4, #-261]	; 0xfffffefb
    52d4:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    52d8:	15053c13 	strne	r3, [r5, #-3091]	; 0xfffff3ed
    52dc:	2e130306 	cdpcs	3, 1, cr0, cr3, cr6, {0}
    52e0:	01061d05 	tsteq	r6, r5, lsl #26
    52e4:	053c1b05 	ldreq	r1, [ip, #-2821]!	; 0xfffff4fb
    52e8:	05210615 	streq	r0, [r1, #-1557]!	; 0xfffff9eb
    52ec:	05010620 	streq	r0, [r1, #-1568]	; 0xfffff9e0
    52f0:	05220615 	streq	r0, [r2, #-1557]!	; 0xfffff9eb
    52f4:	05010617 	streq	r0, [r1, #-1559]	; 0xfffff9e9
    52f8:	0c030631 	stceq	6, cr0, [r3], {49}	; 0x31
    52fc:	1615052e 	ldrne	r0, [r5], -lr, lsr #10
    5300:	2e3c2001 	cdpcs	0, 3, cr2, cr12, cr1, {0}
    5304:	03040200 	movweq	r0, #16896	; 0x4200
    5308:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    530c:	02002e03 	andeq	r2, r0, #3, 28	; 0x30
    5310:	003c0304 	eorseq	r0, ip, r4, lsl #6
    5314:	16030402 	strne	r0, [r3], -r2, lsl #8
    5318:	02001905 	andeq	r1, r0, #81920	; 0x14000
    531c:	01060304 	tsteq	r6, r4, lsl #6
    5320:	02001705 	andeq	r1, r0, #1310720	; 0x140000
    5324:	05200304 	streq	r0, [r0, #-772]!	; 0xfffffcfc
    5328:	01300619 	teqeq	r0, r9, lsl r6
    532c:	002e3c01 	eoreq	r3, lr, r1, lsl #24
    5330:	58010402 	stmdapl	r1, {r1, sl}
    5334:	01040200 	mrseq	r0, R12_usr
    5338:	09053c06 	stmdbeq	r5, {r1, r2, sl, fp, ip, sp}
    533c:	01910306 	orrseq	r0, r1, r6, lsl #6
    5340:	06160501 	ldreq	r0, [r6], -r1, lsl #10
    5344:	03100501 	tsteq	r0, #4194304	; 0x400000
    5348:	054a7e97 	strbeq	r7, [sl, #-3735]	; 0xfffff169
    534c:	01f70301 	mvnseq	r0, r1, lsl #6
    5350:	03250520 			; <UNDEFINED> instruction: 0x03250520
    5354:	05202048 	streq	r2, [r0, #-72]!	; 0xffffffb8
    5358:	35030636 	strcc	r0, [r3, #-1590]	; 0xfffff9ca
    535c:	14050501 	strne	r0, [r5], #-1281	; 0xfffffaff
    5360:	01060c05 	tsteq	r6, r5, lsl #24
    5364:	01001702 	tsteq	r0, r2, lsl #14
    5368:	00010501 	andeq	r0, r1, r1, lsl #10
    536c:	29dc0205 	ldmibcs	ip, {r0, r2, r9}^
    5370:	f4031000 	vst4.8	{d1-d4}, [r3], r0
    5374:	0505011e 	streq	r0, [r5, #-286]	; 0xfffffee2
    5378:	20051321 	andcs	r1, r5, r1, lsr #6
    537c:	03090514 	movweq	r0, #38164	; 0x9514
    5380:	0d05010b 	stfeqs	f0, [r5, #-44]	; 0xffffffd4
    5384:	37051330 	smladxcc	r5, r0, r3, r1
    5388:	140d0516 	strne	r0, [sp], #-1302	; 0xfffffaea
    538c:	01062405 	tsteq	r6, r5, lsl #8
    5390:	053c2205 	ldreq	r2, [ip, #-517]!	; 0xfffffdfb
    5394:	05210624 	streq	r0, [r1, #-1572]!	; 0xfffff9dc
    5398:	2605140d 	strcs	r1, [r5], -sp, lsl #8
    539c:	0f050106 	svceq	0x00050106
    53a0:	06110520 	ldreq	r0, [r1], -r0, lsr #10
    53a4:	062c0530 			; <UNDEFINED> instruction: 0x062c0530
    53a8:	2e130501 	cfmul32cs	mvfx0, mvfx3, mvfx1
    53ac:	65031005 	strvs	r1, [r3, #-5]
    53b0:	00190520 	andseq	r0, r9, r0, lsr #10
    53b4:	06010402 	streq	r0, [r1], -r2, lsl #8
    53b8:	002e2503 	eoreq	r2, lr, r3, lsl #10
    53bc:	06010402 	streq	r0, [r1], -r2, lsl #8
    53c0:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    53c4:	00140601 	andseq	r0, r4, r1, lsl #12
    53c8:	06010402 	streq	r0, [r1], -r2, lsl #8
    53cc:	030d053c 	movweq	r0, #54588	; 0xd53c
    53d0:	39050158 	stmdbcc	r5, {r3, r4, r6, r8}
    53d4:	20350306 	eorscs	r0, r5, r6, lsl #6
    53d8:	6b031a05 	blvs	cbbf4 <__HEAP_SIZE+0xcabf4>
    53dc:	061c0501 	ldreq	r0, [ip], -r1, lsl #10
    53e0:	2e1a0501 	cfmul32cs	mvfx0, mvfx10, mvfx1
    53e4:	33061905 	movwcc	r1, #26885	; 0x6905
    53e8:	01062105 	tsteq	r6, r5, lsl #2
    53ec:	201f0520 	andscs	r0, pc, r0, lsr #10
    53f0:	21061905 	tstcs	r6, r5, lsl #18
    53f4:	2e3c2001 	cdpcs	0, 3, cr2, cr12, cr1, {0}
    53f8:	03040200 	movweq	r0, #16896	; 0x4200
    53fc:	04020058 	streq	r0, [r2], #-88	; 0xffffffa8
    5400:	02002e03 	andeq	r2, r0, #3, 28	; 0x30
    5404:	003c0304 	eorseq	r0, ip, r4, lsl #6
    5408:	13030402 	movwne	r0, #13314	; 0x3402
    540c:	03040200 	movweq	r0, #16896	; 0x4200
    5410:	04020013 	streq	r0, [r2], #-19	; 0xffffffed
    5414:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    5418:	00200304 	eoreq	r0, r0, r4, lsl #6
    541c:	3c030402 	cfstrscc	mvf0, [r3], {2}
    5420:	03040200 	movweq	r0, #16896	; 0x4200
    5424:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    5428:	02004a03 	andeq	r4, r0, #12288	; 0x3000
    542c:	002e0304 	eoreq	r0, lr, r4, lsl #6
    5430:	3c030402 	cfstrscc	mvf0, [r3], {2}
    5434:	03040200 	movweq	r0, #16896	; 0x4200
    5438:	04020013 	streq	r0, [r2], #-19	; 0xffffffed
    543c:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    5440:	00010304 	andeq	r0, r1, r4, lsl #6
    5444:	01030402 	tsteq	r3, r2, lsl #8
    5448:	03040200 	movweq	r0, #16896	; 0x4200
    544c:	02002006 	andeq	r2, r0, #6
    5450:	4a060104 	bmi	185868 <__RAM_SIZE+0x85868>
    5454:	03040200 	movweq	r0, #16896	; 0x4200
    5458:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    545c:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    5460:	00010304 	andeq	r0, r1, r4, lsl #6
    5464:	66030402 	strvs	r0, [r3], -r2, lsl #8
    5468:	03040200 	movweq	r0, #16896	; 0x4200
    546c:	04020001 	streq	r0, [r2], #-1
    5470:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    5474:	00200304 	eoreq	r0, r0, r4, lsl #6
    5478:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
    547c:	03040200 	movweq	r0, #16896	; 0x4200
    5480:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    5484:	02002003 	andeq	r2, r0, #3
    5488:	20060304 	andcs	r0, r6, r4, lsl #6
    548c:	03040200 	movweq	r0, #16896	; 0x4200
    5490:	02005806 	andeq	r5, r0, #393216	; 0x60000
    5494:	00740304 	rsbseq	r0, r4, r4, lsl #6
    5498:	01030402 	tsteq	r3, r2, lsl #8
    549c:	03040200 	movweq	r0, #16896	; 0x4200
    54a0:	001d0501 	andseq	r0, sp, r1, lsl #10
    54a4:	18030402 	stmdane	r3, {r1, sl}
    54a8:	02002605 	andeq	r2, r0, #5242880	; 0x500000
    54ac:	01060304 	tsteq	r6, r4, lsl #6
    54b0:	02004105 	andeq	r4, r0, #1073741825	; 0x40000001
    54b4:	05200304 	streq	r0, [r0, #-772]!	; 0xfffffcfc
    54b8:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    54bc:	21053c03 	tstcs	r5, r3, lsl #24
    54c0:	3b053006 	blcc	1514e0 <__RAM_SIZE+0x514e0>
    54c4:	15050106 	strne	r0, [r5, #-262]	; 0xfffffefa
    54c8:	4a100306 	bmi	4060e8 <__RAM_SIZE+0x3060e8>
    54cc:	01061705 	tsteq	r6, r5, lsl #14
    54d0:	28061905 	stmdacs	r6, {r0, r2, r8, fp, ip}
    54d4:	052e0d03 	streq	r0, [lr, #-3331]!	; 0xfffff2fd
    54d8:	05010624 	streq	r0, [r1, #-1572]	; 0xfffff9dc
    54dc:	05300619 	ldreq	r0, [r0, #-1561]!	; 0xfffff9e7
    54e0:	0501061b 	streq	r0, [r1, #-1563]	; 0xfffff9e5
    54e4:	16030635 			; <UNDEFINED> instruction: 0x16030635
    54e8:	16150520 	ldrne	r0, [r5], -r0, lsr #10
    54ec:	01062705 	tsteq	r6, r5, lsl #14
    54f0:	052e1705 	streq	r1, [lr, #-1797]!	; 0xfffff8fb
    54f4:	1824061d 	stmdane	r4!, {r0, r2, r3, r4, r9, sl}
    54f8:	052e2e01 	streq	r2, [lr, #-3585]!	; 0xfffff1ff
    54fc:	7a03062d 	bvc	c6db8 <__HEAP_SIZE+0xc5db8>
    5500:	063d0501 	ldrteq	r0, [sp], -r1, lsl #10
    5504:	052e6e03 	streq	r6, [lr, #-3587]!	; 0xfffff1fd
    5508:	24051521 	strcs	r1, [r5], #-1313	; 0xfffffadf
    550c:	061d0513 			; <UNDEFINED> instruction: 0x061d0513
    5510:	03062001 	movweq	r2, #24577	; 0x6001
    5514:	21052072 	tstcs	r5, r2, ror r0
    5518:	06250514 			; <UNDEFINED> instruction: 0x06250514
    551c:	2e230501 	cfsh64cs	mvdx0, mvdx3, #1
    5520:	32062505 	andcc	r2, r6, #20971520	; 0x1400000
    5524:	01063f05 	tsteq	r6, r5, lsl #30
    5528:	03061d05 	movweq	r1, #27909	; 0x6d05
    552c:	2a054a0a 	bcs	157d5c <__RAM_SIZE+0x57d5c>
    5530:	054a0106 	strbeq	r0, [sl, #-262]	; 0xfffffefa
    5534:	7f970310 	svcvc	0x00970310
    5538:	06290501 	strteq	r0, [r9], -r1, lsl #10
    553c:	20018703 	andcs	r8, r1, r3, lsl #14
    5540:	05150905 	ldreq	r0, [r5, #-2309]	; 0xfffff6fb
    5544:	05053132 	streq	r3, [r5, #-306]	; 0xfffffece
    5548:	06010514 			; <UNDEFINED> instruction: 0x06010514
    554c:	00082e13 	andeq	r2, r8, r3, lsl lr
    5550:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    5554:	00020500 	andeq	r0, r2, r0, lsl #10
    5558:	03000000 	movweq	r0, #0
    555c:	060112a8 	streq	r1, [r1], -r8, lsr #5
    5560:	06090501 	streq	r0, [r9], -r1, lsl #10
    5564:	4905133d 	stmdbmi	r5, {r0, r2, r3, r4, r5, r8, r9, ip}
    5568:	142b0514 	strtne	r0, [fp], #-1300	; 0xfffffaec
    556c:	05133005 	ldreq	r3, [r3, #-5]
    5570:	0d051409 	cfstrseq	mvf1, [r5, #-36]	; 0xffffffdc
    5574:	061e0532 			; <UNDEFINED> instruction: 0x061e0532
    5578:	06370501 	ldrteq	r0, [r7], -r1, lsl #10
    557c:	150d0530 	strne	r0, [sp, #-1328]	; 0xfffffad0
    5580:	01061b05 	tsteq	r6, r5, lsl #22
    5584:	05201905 	streq	r1, [r0, #-2309]!	; 0xfffff6fb
    5588:	0522060d 	streq	r0, [r2, #-1549]!	; 0xfffff9f3
    558c:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    5590:	05350611 	ldreq	r0, [r5, #-1553]!	; 0xfffff9ef
    5594:	05010613 	streq	r0, [r1, #-1555]	; 0xfffff9ed
    5598:	1903060d 	stmdbne	r3, {r0, r2, r3, r9, sl}
    559c:	0621052e 	strteq	r0, [r1], -lr, lsr #10
    55a0:	060d0501 	streq	r0, [sp], -r1, lsl #10
    55a4:	06250522 	strteq	r0, [r5], -r2, lsr #10
    55a8:	20014c03 	andcs	r4, r1, r3, lsl #24
    55ac:	02003b05 	andeq	r3, r0, #5120	; 0x1400
    55b0:	19030104 	stmdbne	r3, {r2, r8}
    55b4:	060d0520 	streq	r0, [sp], -r0, lsr #10
    55b8:	052e1903 	streq	r1, [lr, #-2307]!	; 0xfffff6fd
    55bc:	05010621 	streq	r0, [r1, #-1569]	; 0xfffff9df
    55c0:	0522060d 	streq	r0, [r2, #-1549]!	; 0xfffff9f3
    55c4:	4c030625 	stcmi	6, cr0, [r3], {37}	; 0x25
    55c8:	15052001 	strne	r2, [r5, #-1]
    55cc:	201b0306 	andscs	r0, fp, r6, lsl #6
    55d0:	17030d05 	strne	r0, [r3, -r5, lsl #26]
    55d4:	06210501 	strteq	r0, [r1], -r1, lsl #10
    55d8:	060d0501 	streq	r0, [sp], -r1, lsl #10
    55dc:	03110522 	tsteq	r1, #142606336	; 0x8800000
    55e0:	13052073 	movwne	r2, #20595	; 0x5073
    55e4:	3b050106 	blcc	145a04 <__RAM_SIZE+0x45a04>
    55e8:	01040200 	mrseq	r0, R12_usr
    55ec:	0615052e 	ldreq	r0, [r5], -lr, lsr #10
    55f0:	030d0530 	movweq	r0, #54576	; 0xd530
    55f4:	21050109 	tstcs	r5, r9, lsl #2
    55f8:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    55fc:	35052206 	strcc	r2, [r5, #-518]	; 0xfffffdfa
    5600:	16110514 			; <UNDEFINED> instruction: 0x16110514
    5604:	29052e06 	stmdbcs	r5, {r1, r2, r9, sl, fp, sp}
    5608:	09054006 	stmdbeq	r5, {r1, r2, lr}
    560c:	061b0515 			; <UNDEFINED> instruction: 0x061b0515
    5610:	06090501 	streq	r0, [r9], -r1, lsl #10
    5614:	060b0532 			; <UNDEFINED> instruction: 0x060b0532
    5618:	03050501 	movweq	r0, #21761	; 0x5501
    561c:	0d05200c 	stceq	0, cr2, [r5, #-48]	; 0xffffffd0
    5620:	2e610306 	cdpcs	3, 6, cr0, cr1, cr6, {0}
    5624:	01062105 	tsteq	r6, r5, lsl #2
    5628:	22060d05 	andcs	r0, r6, #320	; 0x140
    562c:	03062505 	movweq	r2, #25861	; 0x6505
    5630:	0520014c 	streq	r0, [r0, #-332]!	; 0xfffffeb4
    5634:	c703060d 	strgt	r0, [r3, -sp, lsl #12]
    5638:	25052000 	strcs	r2, [r5, #-0]
    563c:	15340532 	ldrne	r0, [r4, #-1330]!	; 0xffffface
    5640:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    5644:	02010610 	andeq	r0, r1, #16, 12	; 0x1000000
    5648:	01010003 	tsteq	r1, r3
    564c:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    5650:	002b0c02 	eoreq	r0, fp, r2, lsl #24
    5654:	13830310 	orrne	r0, r3, #16, 6	; 0x40000000
    5658:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    565c:	05210609 	streq	r0, [r1, #-1545]!	; 0xfffff9f7
    5660:	0905142f 	stmdbeq	r5, {r0, r1, r2, r3, r5, sl, ip}
    5664:	060b0515 			; <UNDEFINED> instruction: 0x060b0515
    5668:	060d0501 	streq	r0, [sp], -r1, lsl #10
    566c:	303b0530 	eorscc	r0, fp, r0, lsr r5
    5670:	05142205 	ldreq	r2, [r4, #-517]	; 0xfffffdfb
    5674:	01090311 	tsteq	r9, r1, lsl r3
    5678:	054c0d05 	strbeq	r0, [ip, #-3333]	; 0xfffff2fb
    567c:	0501061f 	streq	r0, [r1, #-1567]	; 0xfffff9e1
    5680:	05320625 	ldreq	r0, [r2, #-1573]!	; 0xfffff9db
    5684:	0b051709 	bleq	14b2b0 <__RAM_SIZE+0x4b2b0>
    5688:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    568c:	25052206 	strcs	r2, [r5, #-518]	; 0xfffffdfa
    5690:	15210532 	strne	r0, [r1, #-1330]!	; 0xffffface
    5694:	13060505 	movwne	r0, #25861	; 0x6505
    5698:	01000102 	tsteq	r0, r2, lsl #2
    569c:	00010501 	andeq	r0, r1, r1, lsl #10
    56a0:	2b2c0205 	blcs	b05ebc <__RAM_SIZE+0xa05ebc>
    56a4:	f4031000 	vst4.8	{d1-d4}, [r3], r0
    56a8:	0106012c 	tsteq	r6, ip, lsr #2
    56ac:	03062905 	movweq	r2, #26885	; 0x6905
    56b0:	0d052e36 	stceq	14, cr2, [r5, #-216]	; 0xffffff28
    56b4:	19011203 	stmdbne	r1, {r0, r1, r9, ip}
    56b8:	01062105 	tsteq	r6, r5, lsl #2
    56bc:	30060d05 	andcc	r0, r6, r5, lsl #26
    56c0:	01060f05 	tsteq	r6, r5, lsl #30
    56c4:	0605052e 	streq	r0, [r5], -lr, lsr #10
    56c8:	017fb103 	cmneq	pc, r3, lsl #2
    56cc:	051a4305 	ldreq	r4, [sl, #-773]	; 0xfffffcfb
    56d0:	010a0305 	tsteq	sl, r5, lsl #6
    56d4:	05160905 	ldreq	r0, [r6, #-2309]	; 0xfffff6fb
    56d8:	2e18030d 	cdpcs	3, 1, cr0, cr8, cr13, {0}
    56dc:	01061105 	tsteq	r6, r5, lsl #2
    56e0:	052e0f05 	streq	r0, [lr, #-3845]!	; 0xfffff0fb
    56e4:	03300611 	teqeq	r0, #17825792	; 0x1100000
    56e8:	47053c21 	strmi	r3, [r5, -r1, lsr #24]
    56ec:	13150533 	tstne	r5, #213909504	; 0xcc00000
    56f0:	01062905 	tsteq	r6, r5, lsl #18
    56f4:	33065705 	movwcc	r5, #26373	; 0x6705
    56f8:	05141505 	ldreq	r1, [r4, #-1285]	; 0xfffffafb
    56fc:	05010617 	streq	r0, [r1, #-1559]	; 0xfffff9e9
    5700:	05300634 	ldreq	r0, [r0, #-1588]!	; 0xfffff9cc
    5704:	32051319 	andcc	r1, r5, #1677721600	; 0x64000000
    5708:	1631052f 	ldrtne	r0, [r1], -pc, lsr #10
    570c:	05151105 	ldreq	r1, [r5, #-261]	; 0xfffffefb
    5710:	0201061a 	andeq	r0, r1, #27262976	; 0x1a00000
    5714:	01010005 	tsteq	r1, r5
    5718:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    571c:	00000002 	andeq	r0, r0, r2
    5720:	21a70300 			; <UNDEFINED> instruction: 0x21a70300
    5724:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    5728:	132f0609 			; <UNDEFINED> instruction: 0x132f0609
    572c:	05143305 	ldreq	r3, [r4, #-773]	; 0xfffffcfb
    5730:	0905154a 	stmdbeq	r5, {r1, r3, r6, r8, sl, ip}
    5734:	06150514 			; <UNDEFINED> instruction: 0x06150514
    5738:	052e7803 	streq	r7, [lr, #-2051]!	; 0xfffff7fd
    573c:	0b03060d 	bleq	c6f78 <__HEAP_SIZE+0xc5f78>
    5740:	14110520 	ldrne	r0, [r1], #-1312	; 0xfffffae0
    5744:	01061805 	tsteq	r6, r5, lsl #16
    5748:	21061105 	tstcs	r6, r5, lsl #2
    574c:	01061905 	tsteq	r6, r5, lsl #18
    5750:	84061105 	strhi	r1, [r6], #-261	; 0xfffffefb
    5754:	01061305 	tsteq	r6, r5, lsl #6
    5758:	33061405 	movwcc	r1, #25605	; 0x6405
    575c:	01060d05 	tsteq	r6, r5, lsl #26
    5760:	0f053106 	svceq	0x00053106
    5764:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    5768:	0f052506 	svceq	0x00052506
    576c:	11050106 	tstne	r5, r6, lsl #2
    5770:	13052706 	movwne	r2, #22278	; 0x5706
    5774:	11050106 	tstne	r5, r6, lsl #2
    5778:	200a0306 	andcs	r0, sl, r6, lsl #6
    577c:	01061305 	tsteq	r6, r5, lsl #6
    5780:	28060905 	stmdacs	r6, {r0, r2, r8, fp}
    5784:	01061205 	tsteq	r6, r5, lsl #4
    5788:	30062c05 	andcc	r2, r6, r5, lsl #24
    578c:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    5790:	05130605 	ldreq	r0, [r3, #-1541]	; 0xfffff9fb
    5794:	5f030611 	svcpl	0x00030611
    5798:	0619052e 	ldreq	r0, [r9], -lr, lsr #10
    579c:	054a2e01 	strbeq	r2, [sl, #-3585]	; 0xfffff1ff
    57a0:	05250611 	streq	r0, [r5, #-1553]!	; 0xfffff9ef
    57a4:	2e010619 	mcrcs	6, 0, r0, cr1, cr9, {0}
    57a8:	0615054a 	ldreq	r0, [r5], -sl, asr #10
    57ac:	061d0528 	ldreq	r0, [sp], -r8, lsr #10
    57b0:	053c2e01 	ldreq	r2, [ip, #-3585]!	; 0xfffff1ff
    57b4:	0a030615 	beq	c7010 <__HEAP_SIZE+0xc6010>
    57b8:	061d0520 	ldreq	r0, [sp], -r0, lsr #10
    57bc:	023c2e01 	eorseq	r2, ip, #1, 28
    57c0:	0101000b 	tsteq	r1, fp
    57c4:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    57c8:	00000002 	andeq	r0, r0, r2
    57cc:	23c20300 	biccs	r0, r2, #0, 6
    57d0:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    57d4:	052f0605 	streq	r0, [pc, #-1541]!	; 51d7 <__HEAP_SIZE+0x41d7>
    57d8:	3f051434 	svccc	0x00051434
    57dc:	16050516 			; <UNDEFINED> instruction: 0x16050516
    57e0:	30090531 	andcc	r0, r9, r1, lsr r5
    57e4:	01061605 	tsteq	r6, r5, lsl #12
    57e8:	4c060505 	cfstr32mi	mvfx0, [r6], {5}
    57ec:	0616052f 	ldreq	r0, [r6], -pc, lsr #10
    57f0:	06340501 	ldrteq	r0, [r4], -r1, lsl #10
    57f4:	14050530 	strne	r0, [r5], #-1328	; 0xfffffad0
    57f8:	13060105 	movwne	r0, #24837	; 0x6105
    57fc:	00030220 	andeq	r0, r3, r0, lsr #4
    5800:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    5804:	00020500 	andeq	r0, r2, r0, lsl #10
    5808:	03000000 	movweq	r0, #0
    580c:	060123e0 	streq	r2, [r1], -r0, ror #7
    5810:	06090501 	streq	r0, [r9], -r1, lsl #10
    5814:	2c05132f 	stccs	3, cr1, [r5], {47}	; 0x2f
    5818:	141e0514 	ldrne	r0, [lr], #-1300	; 0xfffffaec
    581c:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    5820:	1105320d 	tstne	r5, sp, lsl #4
    5824:	0f050106 	svceq	0x00050106
    5828:	0319053c 	tsteq	r9, #60, 10	; 0xf000000
    582c:	052e00c4 	streq	r0, [lr, #-196]!	; 0xffffff3c
    5830:	05230609 	streq	r0, [r3, #-1545]!	; 0xfffff9f7
    5834:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
    5838:	0530062f 	ldreq	r0, [r0, #-1583]!	; 0xfffff9d1
    583c:	05051409 	streq	r1, [r5, #-1033]	; 0xfffffbf7
    5840:	11051306 	tstne	r5, r6, lsl #6
    5844:	7fb60306 	svcvc	0x00b60306
    5848:	1a05172e 	bne	14b508 <__RAM_SIZE+0x4b508>
    584c:	11050106 	tstne	r5, r6, lsl #2
    5850:	15055006 	strne	r5, [r5, #-6]
    5854:	06190530 			; <UNDEFINED> instruction: 0x06190530
    5858:	20170501 	andscs	r0, r7, r1, lsl #10
    585c:	22061905 	andcs	r1, r6, #81920	; 0x14000
    5860:	01062205 	tsteq	r6, r5, lsl #4
    5864:	4f061905 	svcmi	0x00061905
    5868:	01062f05 	tsteq	r6, r5, lsl #30
    586c:	40063105 	andmi	r3, r6, r5, lsl #2
    5870:	31151105 	tstcc	r5, r5, lsl #2
    5874:	00010101 	andeq	r0, r1, r1, lsl #2
    5878:	58010402 	stmdapl	r1, {r1, sl}
    587c:	03040200 	movweq	r0, #16896	; 0x4200
    5880:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    5884:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    5888:	00010304 	andeq	r0, r1, r4, lsl #6
    588c:	66030402 	strvs	r0, [r3], -r2, lsl #8
    5890:	03040200 	movweq	r0, #16896	; 0x4200
    5894:	04020001 	streq	r0, [r2], #-1
    5898:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    589c:	00200304 	eoreq	r0, r0, r4, lsl #6
    58a0:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
    58a4:	03040200 	movweq	r0, #16896	; 0x4200
    58a8:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    58ac:	02002003 	andeq	r2, r0, #3
    58b0:	20060304 	andcs	r0, r6, r4, lsl #6
    58b4:	03040200 	movweq	r0, #16896	; 0x4200
    58b8:	02005806 	andeq	r5, r0, #393216	; 0x60000
    58bc:	00740304 	rsbseq	r0, r4, r4, lsl #6
    58c0:	01030402 	tsteq	r3, r2, lsl #8
    58c4:	03040200 	movweq	r0, #16896	; 0x4200
    58c8:	00190501 	andseq	r0, r9, r1, lsl #10
    58cc:	03030402 	movweq	r0, #13314	; 0x3402
    58d0:	2205010b 	andcs	r0, r5, #-1073741822	; 0xc0000002
    58d4:	03040200 	movweq	r0, #16896	; 0x4200
    58d8:	3d050106 	stfccs	f0, [r5, #-24]	; 0xffffffe8
    58dc:	03040200 	movweq	r0, #16896	; 0x4200
    58e0:	001b0520 	andseq	r0, fp, r0, lsr #10
    58e4:	3c030402 	cfstrscc	mvf0, [r3], {2}
    58e8:	32061d05 	andcc	r1, r6, #320	; 0x140
    58ec:	01063105 	tsteq	r6, r5, lsl #2
    58f0:	03190520 	tsteq	r9, #32, 10	; 0x8000000
    58f4:	02203c53 	eoreq	r3, r0, #21248	; 0x5300
    58f8:	01010009 	tsteq	r1, r9
    58fc:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    5900:	00000002 	andeq	r0, r0, r2
    5904:	26bf0300 	ldrtcs	r0, [pc], r0, lsl #6
    5908:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    590c:	052f0609 	streq	r0, [pc, #-1545]!	; 530b <__HEAP_SIZE+0x430b>
    5910:	09051447 	stmdbeq	r5, {r0, r1, r2, r6, sl, ip}
    5914:	060b0516 			; <UNDEFINED> instruction: 0x060b0516
    5918:	06090501 	streq	r0, [r9], -r1, lsl #10
    591c:	052e0b03 	streq	r0, [lr, #-2819]!	; 0xfffff4fd
    5920:	1d05300d 	stcne	0, cr3, [r5, #-52]	; 0xffffffcc
    5924:	09050106 	stmdbeq	r5, {r1, r2, r8}
    5928:	31052206 	tstcc	r5, r6, lsl #4
    592c:	06050530 			; <UNDEFINED> instruction: 0x06050530
    5930:	060d0513 			; <UNDEFINED> instruction: 0x060d0513
    5934:	05207003 	streq	r7, [r0, #-3]!
    5938:	2e010612 	mcrcs	6, 0, r0, cr1, cr2, {0}
    593c:	01000402 	tsteq	r0, r2, lsl #8
    5940:	00050501 	andeq	r0, r5, r1, lsl #10
    5944:	00000205 	andeq	r0, r0, r5, lsl #4
    5948:	e0030000 	and	r0, r3, r0
    594c:	01060126 	tsteq	r6, r6, lsr #2
    5950:	21060905 	tstcs	r6, r5, lsl #18
    5954:	14370513 	ldrtne	r0, [r7], #-1299	; 0xfffffaed
    5958:	05150905 	ldreq	r0, [r5, #-2309]	; 0xfffff6fb
    595c:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    5960:	04020009 	streq	r0, [r2], #-9
    5964:	05320604 	ldreq	r0, [r2, #-1540]!	; 0xfffff9fc
    5968:	0402000d 	streq	r0, [r2], #-13
    596c:	15053004 	strne	r3, [r5, #-4]
    5970:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    5974:	09050106 	stmdbeq	r5, {r1, r2, r8}
    5978:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    597c:	3a052206 	bcc	14e19c <__RAM_SIZE+0x4e19c>
    5980:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    5984:	00090530 	andeq	r0, r9, r0, lsr r5
    5988:	14040402 	strne	r0, [r4], #-1026	; 0xfffffbfe
    598c:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    5990:	13060404 	movwne	r0, #25604	; 0x6404
    5994:	02001105 	andeq	r1, r0, #1073741825	; 0x40000001
    5998:	73030104 	movwvc	r0, #12548	; 0x3104
    599c:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    59a0:	04022e01 	streq	r2, [r2], #-3585	; 0xfffff1ff
    59a4:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    59a8:	02050005 	andeq	r0, r5, #5
    59ac:	00000000 	andeq	r0, r0, r0
    59b0:	0126fc03 	msreq	CPSR_sx, r3, lsl #24
    59b4:	09050106 	stmdbeq	r5, {r1, r2, r8}
    59b8:	13132106 	tstne	r3, #-2147483647	; 0x80000001
    59bc:	05143e05 	ldreq	r3, [r4, #-3589]	; 0xfffff1fb
    59c0:	11051509 	tstne	r5, r9, lsl #10
    59c4:	09050106 	stmdbeq	r5, {r1, r2, r8}
    59c8:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    59cc:	22053506 	andcs	r3, r5, #25165824	; 0x1800000
    59d0:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    59d4:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    59d8:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    59dc:	15053006 	strne	r3, [r5, #-6]
    59e0:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    59e4:	09050106 	stmdbeq	r5, {r1, r2, r8}
    59e8:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    59ec:	41052206 	tstmi	r5, r6, lsl #4
    59f0:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    59f4:	00090530 	andeq	r0, r9, r0, lsr r5
    59f8:	14040402 	strne	r0, [r4], #-1026	; 0xfffffbfe
    59fc:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    5a00:	13060404 	movwne	r0, #25604	; 0x6404
    5a04:	02001105 	andeq	r1, r0, #1073741825	; 0x40000001
    5a08:	70030104 	andvc	r0, r3, r4, lsl #2
    5a0c:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    5a10:	04022e01 	streq	r2, [r2], #-3585	; 0xfffff1ff
    5a14:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    5a18:	02050005 	andeq	r0, r5, #5
    5a1c:	00000000 	andeq	r0, r0, r0
    5a20:	01279d03 			; <UNDEFINED> instruction: 0x01279d03
    5a24:	09050106 	stmdbeq	r5, {r1, r2, r8}
    5a28:	05132106 	ldreq	r2, [r3, #-262]	; 0xfffffefa
    5a2c:	09051446 	stmdbeq	r5, {r1, r2, r6, sl, ip}
    5a30:	060b0515 			; <UNDEFINED> instruction: 0x060b0515
    5a34:	06090501 	streq	r0, [r9], -r1, lsl #10
    5a38:	052e0903 	streq	r0, [lr, #-2307]!	; 0xfffff6fd
    5a3c:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    5a40:	0d05200b 	stceq	0, cr2, [r5, #-44]	; 0xffffffd4
    5a44:	17052206 	strne	r2, [r5, -r6, lsl #4]
    5a48:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    5a4c:	052e0a03 	streq	r0, [lr, #-2563]!	; 0xfffff5fd
    5a50:	6d03060d 	stcvs	6, cr0, [r3, #-52]	; 0xffffffcc
    5a54:	06120520 	ldreq	r0, [r2], -r0, lsr #10
    5a58:	15052e01 	strne	r2, [r5, #-3585]	; 0xfffff1ff
    5a5c:	05200d03 	streq	r0, [r0, #-3331]!	; 0xfffff2fd
    5a60:	0523063c 	streq	r0, [r3, #-1596]!	; 0xfffff9c4
    5a64:	10051409 	andne	r1, r5, r9, lsl #8
    5a68:	04020106 	streq	r0, [r2], #-262	; 0xfffffefa
    5a6c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    5a70:	02050005 	andeq	r0, r5, #5
    5a74:	10002b64 	andne	r2, r0, r4, ror #22
    5a78:	0127c003 			; <UNDEFINED> instruction: 0x0127c003
    5a7c:	05132805 	ldreq	r2, [r3, #-2053]	; 0xfffff7fb
    5a80:	22051409 	andcs	r1, r5, #150994944	; 0x9000000
    5a84:	0b050106 	bleq	145ea4 <__RAM_SIZE+0x45ea4>
    5a88:	060d052e 	streq	r0, [sp], -lr, lsr #10
    5a8c:	06210524 	strteq	r0, [r1], -r4, lsr #10
    5a90:	060d0501 	streq	r0, [sp], -r1, lsl #10
    5a94:	0621054e 	strteq	r0, [r1], -lr, asr #10
    5a98:	06250501 	strteq	r0, [r5], -r1, lsl #10
    5a9c:	032b053d 			; <UNDEFINED> instruction: 0x032b053d
    5aa0:	0d05011f 	stfeqs	f0, [r5, #-124]	; 0xffffff84
    5aa4:	01010e03 	tsteq	r1, r3, lsl #28
    5aa8:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    5aac:	02002003 	andeq	r2, r0, #3
    5ab0:	00010304 	andeq	r0, r1, r4, lsl #6
    5ab4:	20010402 	andcs	r0, r1, r2, lsl #8
    5ab8:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    5abc:	04020074 	streq	r0, [r2], #-116	; 0xffffff8c
    5ac0:	02000104 	andeq	r0, r0, #4, 2
    5ac4:	00010404 	andeq	r0, r1, r4, lsl #8
    5ac8:	74040402 	strvc	r0, [r4], #-1026	; 0xfffffbfe
    5acc:	07040200 	streq	r0, [r4, -r0, lsl #4]
    5ad0:	04020082 	streq	r0, [r2], #-130	; 0xffffff7e
    5ad4:	02009007 	andeq	r9, r0, #7
    5ad8:	00010704 	andeq	r0, r1, r4, lsl #14
    5adc:	2e070402 	cdpcs	4, 0, cr0, cr7, cr2, {0}
    5ae0:	02002405 	andeq	r2, r0, #83886080	; 0x5000000
    5ae4:	05130704 	ldreq	r0, [r3, #-1796]	; 0xfffff8fc
    5ae8:	0402000d 	streq	r0, [r2], #-13
    5aec:	29051707 	stmdbcs	r5, {r0, r1, r2, r8, r9, sl, ip}
    5af0:	07040200 	streq	r0, [r4, -r0, lsl #4]
    5af4:	05201203 	streq	r1, [r0, #-515]!	; 0xfffffdfd
    5af8:	04020005 	streq	r0, [r2], #-5
    5afc:	05130607 	ldreq	r0, [r3, #-1543]	; 0xfffff9f9
    5b00:	0402000d 	streq	r0, [r2], #-13
    5b04:	67030605 	strvs	r0, [r3, -r5, lsl #12]
    5b08:	01000820 	tsteq	r0, r0, lsr #16
    5b0c:	00050501 	andeq	r0, r5, r1, lsl #10
    5b10:	00000205 	andeq	r0, r0, r5, lsl #4
    5b14:	b1030000 	mrslt	r0, (UNDEF: 3)
    5b18:	01060118 	tsteq	r6, r8, lsl r1
    5b1c:	2f060905 	svccs	0x00060905
    5b20:	05143205 	ldreq	r3, [r4, #-517]	; 0xfffffdfb
    5b24:	0d051409 	cfstrseq	mvf1, [r5, #-36]	; 0xffffffdc
    5b28:	06150532 			; <UNDEFINED> instruction: 0x06150532
    5b2c:	00270501 	eoreq	r0, r7, r1, lsl #10
    5b30:	06040402 	streq	r0, [r4], -r2, lsl #8
    5b34:	000d0522 	andeq	r0, sp, r2, lsr #10
    5b38:	16040402 	strne	r0, [r4], -r2, lsl #8
    5b3c:	02001105 	andeq	r1, r0, #1073741825	; 0x40000001
    5b40:	01060404 	tsteq	r6, r4, lsl #8
    5b44:	02002905 	andeq	r2, r0, #81920	; 0x14000
    5b48:	50060404 	andpl	r0, r6, r4, lsl #8
    5b4c:	02000d05 	andeq	r0, r0, #320	; 0x140
    5b50:	05160404 	ldreq	r0, [r6, #-1028]	; 0xfffffbfc
    5b54:	04020011 	streq	r0, [r2], #-17	; 0xffffffef
    5b58:	05010604 	streq	r0, [r1, #-1540]	; 0xfffff9fc
    5b5c:	0402000f 	streq	r0, [r2], #-15
    5b60:	11052004 	tstne	r5, r4
    5b64:	1a052206 	bne	14e384 <__RAM_SIZE+0x4e384>
    5b68:	29050106 	stmdbcs	r5, {r1, r2, r8}
    5b6c:	0d054e06 	stceq	14, cr4, [r5, #-24]	; 0xffffffe8
    5b70:	4e110515 	mrcmi	5, 0, r0, cr1, cr5, {0}
    5b74:	06180514 			; <UNDEFINED> instruction: 0x06180514
    5b78:	002c0501 	eoreq	r0, ip, r1, lsl #10
    5b7c:	06010402 	streq	r0, [r1], -r2, lsl #8
    5b80:	00110520 	andseq	r0, r1, r0, lsr #10
    5b84:	06010402 	streq	r0, [r1], -r2, lsl #8
    5b88:	06090501 	streq	r0, [r9], -r1, lsl #10
    5b8c:	052e3403 	streq	r3, [lr, #-1027]!	; 0xfffffbfd
    5b90:	0514320d 	ldreq	r3, [r4, #-525]	; 0xfffffdf3
    5b94:	05010623 	streq	r0, [r1, #-1571]	; 0xfffff9dd
    5b98:	29052e0f 	stmdbcs	r5, {r0, r1, r2, r3, r9, sl, fp, sp}
    5b9c:	200c0306 	andcs	r0, ip, r6, lsl #6
    5ba0:	05150d05 	ldreq	r0, [r5, #-3333]	; 0xfffff2fb
    5ba4:	05010617 	streq	r0, [r1, #-1559]	; 0xfffff9e9
    5ba8:	05052e0f 	streq	r2, [r5, #-3599]	; 0xfffff1f1
    5bac:	052e2903 	streq	r2, [lr, #-2307]!	; 0xfffff6fd
    5bb0:	04020015 	streq	r0, [r2], #-21	; 0xffffffeb
    5bb4:	7eef0301 	cdpvc	3, 14, cr0, cr15, cr1, {0}
    5bb8:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    5bbc:	03062e01 	movweq	r2, #28161	; 0x6e01
    5bc0:	2d052021 	stccs	0, cr2, [r5, #-132]	; 0xffffff7c
    5bc4:	17050106 	strne	r0, [r5, -r6, lsl #2]
    5bc8:	0066054a 	rsbeq	r0, r6, sl, asr #10
    5bcc:	06020402 	streq	r0, [r2], -r2, lsl #8
    5bd0:	0067052c 	rsbeq	r0, r7, ip, lsr #10
    5bd4:	06020402 	streq	r0, [r2], -r2, lsl #8
    5bd8:	04020001 	streq	r0, [r2], #-1
    5bdc:	19052002 	stmdbne	r5, {r1, sp}
    5be0:	33052606 	movwcc	r2, #22022	; 0x5606
    5be4:	05580106 	ldrbeq	r0, [r8, #-262]	; 0xfffffefa
    5be8:	38030611 	stmdacc	r3, {r0, r4, r9, sl}
    5bec:	30150501 	andscc	r0, r5, r1, lsl #10
    5bf0:	03301105 	teqeq	r0, #1073741825	; 0x40000001
    5bf4:	27053c09 	strcs	r3, [r5, -r9, lsl #24]
    5bf8:	13050106 	movwne	r0, #20742	; 0x5106
    5bfc:	0615052e 	ldreq	r0, [r5], -lr, lsr #10
    5c00:	05200f03 	streq	r0, [r0, #-3843]!	; 0xfffff0fd
    5c04:	05010629 	streq	r0, [r1, #-1577]	; 0xfffff9d7
    5c08:	05300615 	ldreq	r0, [r0, #-1557]!	; 0xfffff9eb
    5c0c:	0501062d 	streq	r0, [r1, #-1581]	; 0xfffff9d3
    5c10:	19052e17 	stmdbne	r5, {r0, r1, r2, r4, r9, sl, fp, sp}
    5c14:	26053406 	strcs	r3, [r5], -r6, lsl #8
    5c18:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    5c1c:	6c03063e 	stcvs	6, cr0, [r3], {62}	; 0x3e
    5c20:	1315053c 	tstne	r5, #60, 10	; 0xf000000
    5c24:	17031905 	strne	r1, [r3, -r5, lsl #18]
    5c28:	3429053c 	strtcc	r0, [r9], #-1340	; 0xfffffac4
    5c2c:	05172305 	ldreq	r2, [r7, #-773]	; 0xfffffcfb
    5c30:	02130605 	andseq	r0, r3, #5242880	; 0x500000
    5c34:	01010009 	tsteq	r1, r9
    5c38:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    5c3c:	002be802 	eoreq	lr, fp, r2, lsl #16
    5c40:	28fc0310 	ldmcs	ip!, {r4, r8, r9}^
    5c44:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    5c48:	052f0642 	streq	r0, [pc, #-1602]!	; 560e <__HEAP_SIZE+0x460e>
    5c4c:	05051420 	streq	r1, [r5, #-1056]	; 0xfffffbe0
    5c50:	05011003 	streq	r1, [r1, #-3]
    5c54:	0501062e 	streq	r0, [r1, #-1582]	; 0xfffff9d2
    5c58:	3e062e05 	cdpcc	14, 0, cr2, cr6, cr5, {0}
    5c5c:	054c2805 	strbeq	r2, [ip, #-2053]	; 0xfffff7fb
    5c60:	20130601 	andscs	r0, r3, r1, lsl #12
    5c64:	01000202 	tsteq	r0, r2, lsl #4
    5c68:	00010501 	andeq	r0, r1, r1, lsl #10
    5c6c:	00000205 	andeq	r0, r0, r5, lsl #4
    5c70:	9a030000 	bls	c5c78 <__HEAP_SIZE+0xc4c78>
    5c74:	01060129 	tsteq	r6, r9, lsr #2
    5c78:	2f065705 	svccs	0x00065705
    5c7c:	05142005 	ldreq	r2, [r4, #-5]
    5c80:	0505163f 	streq	r1, [r5, #-1599]	; 0xfffff9c1
    5c84:	2e2e0617 	mcrcs	6, 1, r0, cr14, cr7, {0}
    5c88:	20012706 	andcs	r2, r1, r6, lsl #14
    5c8c:	3c2e0101 	stfccs	f0, [lr], #-4
    5c90:	20063c3c 	andcs	r3, r6, ip, lsr ip
    5c94:	143c2006 	ldrtne	r2, [ip], #-6
    5c98:	054c3105 	strbeq	r3, [ip, #-261]	; 0xfffffefb
    5c9c:	02130601 	andseq	r0, r3, #1048576	; 0x100000
    5ca0:	01010004 	tsteq	r1, r4
    5ca4:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    5ca8:	002c0402 	eoreq	r0, ip, r2, lsl #8
    5cac:	29ba0310 	ldmibcs	sl!, {r4, r8, r9}
    5cb0:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    5cb4:	053d0663 	ldreq	r0, [sp, #-1635]!	; 0xfffff99d
    5cb8:	09051424 	stmdbeq	r5, {r2, r5, sl, ip}
    5cbc:	01010c03 	tsteq	r1, r3, lsl #24
    5cc0:	3c010120 	stfccs	f0, [r1], {32}
    5cc4:	063c3c3c 			; <UNDEFINED> instruction: 0x063c3c3c
    5cc8:	3c200620 	stccc	6, cr0, [r0], #-128	; 0xffffff80
    5ccc:	060b0517 			; <UNDEFINED> instruction: 0x060b0517
    5cd0:	301a0501 	andscc	r0, sl, r1, lsl #10
    5cd4:	31063f05 	tstcc	r6, r5, lsl #30
    5cd8:	05130905 	ldreq	r0, [r3, #-2309]	; 0xfffff6fb
    5cdc:	05053036 	streq	r3, [r5, #-54]	; 0xffffffca
    5ce0:	03021306 	movweq	r1, #8966	; 0x2306
    5ce4:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    5ce8:	02050001 	andeq	r0, r5, #1
    5cec:	10002c40 	andne	r2, r0, r0, asr #24
    5cf0:	0129dd03 			; <UNDEFINED> instruction: 0x0129dd03
    5cf4:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    5cf8:	05132106 	ldreq	r2, [r3, #-262]	; 0xfffffefa
    5cfc:	05051437 	streq	r1, [r5, #-1079]	; 0xfffffbc9
    5d00:	05011203 	streq	r1, [r1, #-515]	; 0xfffffdfd
    5d04:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    5d08:	23052014 	movwcs	r2, #20500	; 0x5014
    5d0c:	05052106 	streq	r2, [r5, #-262]	; 0xfffffefa
    5d10:	3c200113 	stfccs	f0, [r0], #-76	; 0xffffffb4
    5d14:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    5d18:	02005803 	andeq	r5, r0, #196608	; 0x30000
    5d1c:	002e0304 	eoreq	r0, lr, r4, lsl #6
    5d20:	3c030402 	cfstrscc	mvf0, [r3], {2}
    5d24:	03040200 	movweq	r0, #16896	; 0x4200
    5d28:	001e0514 	andseq	r0, lr, r4, lsl r5
    5d2c:	06030402 	streq	r0, [r3], -r2, lsl #8
    5d30:	04020001 	streq	r0, [r2], #-1
    5d34:	07052003 	streq	r2, [r5, -r3]
    5d38:	03040200 	movweq	r0, #16896	; 0x4200
    5d3c:	06090520 	streq	r0, [r9], -r0, lsr #10
    5d40:	3c200130 	stfccs	f0, [r0], #-192	; 0xffffff40
    5d44:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    5d48:	02004a03 	andeq	r4, r0, #12288	; 0x3000
    5d4c:	002e0304 	eoreq	r0, lr, r4, lsl #6
    5d50:	3c030402 	cfstrscc	mvf0, [r3], {2}
    5d54:	03040200 	movweq	r0, #16896	; 0x4200
    5d58:	04020013 	streq	r0, [r2], #-19	; 0xffffffed
    5d5c:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    5d60:	00010304 	andeq	r0, r1, r4, lsl #6
    5d64:	01030402 	tsteq	r3, r2, lsl #8
    5d68:	03040200 	movweq	r0, #16896	; 0x4200
    5d6c:	02002006 	andeq	r2, r0, #6
    5d70:	4a060104 	bmi	186188 <__RAM_SIZE+0x86188>
    5d74:	03040200 	movweq	r0, #16896	; 0x4200
    5d78:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    5d7c:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    5d80:	00010304 	andeq	r0, r1, r4, lsl #6
    5d84:	66030402 	strvs	r0, [r3], -r2, lsl #8
    5d88:	03040200 	movweq	r0, #16896	; 0x4200
    5d8c:	04020001 	streq	r0, [r2], #-1
    5d90:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    5d94:	00200304 	eoreq	r0, r0, r4, lsl #6
    5d98:	06030402 	streq	r0, [r3], -r2, lsl #8
    5d9c:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    5da0:	00200603 	eoreq	r0, r0, r3, lsl #12
    5da4:	20030402 	andcs	r0, r3, r2, lsl #8
    5da8:	03040200 	movweq	r0, #16896	; 0x4200
    5dac:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    5db0:	00200603 	eoreq	r0, r0, r3, lsl #12
    5db4:	06030402 	streq	r0, [r3], -r2, lsl #8
    5db8:	04020058 	streq	r0, [r2], #-88	; 0xffffffa8
    5dbc:	02007403 	andeq	r7, r0, #50331648	; 0x3000000
    5dc0:	00010304 	andeq	r0, r1, r4, lsl #6
    5dc4:	01030402 	tsteq	r3, r2, lsl #8
    5dc8:	02000d05 	andeq	r0, r0, #320	; 0x140
    5dcc:	0c030304 	stceq	3, cr0, [r3], {4}
    5dd0:	00090501 	andeq	r0, r9, r1, lsl #10
    5dd4:	36010402 	strcc	r0, [r1], -r2, lsl #8
    5dd8:	01040200 	mrseq	r0, R12_usr
    5ddc:	001b0517 	andseq	r0, fp, r7, lsl r5
    5de0:	06010402 	streq	r0, [r1], -r2, lsl #8
    5de4:	00360501 	eorseq	r0, r6, r1, lsl #10
    5de8:	20010402 	andcs	r0, r1, r2, lsl #8
    5dec:	02000b05 	andeq	r0, r0, #5120	; 0x1400
    5df0:	053c0104 	ldreq	r0, [ip, #-260]!	; 0xfffffefc
    5df4:	1633060d 	ldrtne	r0, [r3], -sp, lsl #12
    5df8:	01062105 	tsteq	r6, r5, lsl #2
    5dfc:	1a030105 	bne	c6218 <__HEAP_SIZE+0xc5218>
    5e00:	0005053c 	andeq	r0, r5, ip, lsr r5
    5e04:	06010402 	streq	r0, [r1], -r2, lsl #8
    5e08:	207fbf03 	rsbscs	fp, pc, r3, lsl #30
    5e0c:	01040200 	mrseq	r0, R12_usr
    5e10:	09053c06 	stmdbeq	r5, {r1, r2, sl, fp, ip, sp}
    5e14:	01040200 	mrseq	r0, R12_usr
    5e18:	02001606 	andeq	r1, r0, #6291456	; 0x600000
    5e1c:	3c060104 	stfccs	f0, [r6], {4}
    5e20:	01150306 	tsteq	r5, r6, lsl #6
    5e24:	01012e01 	tsteq	r1, r1, lsl #28
    5e28:	06200620 	strteq	r0, [r0], -r0, lsr #12
    5e2c:	20202020 	eorcs	r2, r0, r0, lsr #32
    5e30:	053c2006 	ldreq	r2, [ip, #-6]!
    5e34:	01120315 	tsteq	r2, r5, lsl r3
    5e38:	03063405 	movweq	r3, #25605	; 0x6405
    5e3c:	05052014 	streq	r2, [r5, #-20]	; 0xffffffec
    5e40:	060c0513 			; <UNDEFINED> instruction: 0x060c0513
    5e44:	000e0201 	andeq	r0, lr, r1, lsl #4
    5e48:	01050101 	tsteq	r5, r1, lsl #2
    5e4c:	00020500 	andeq	r0, r2, r0, lsl #10
    5e50:	03000000 	movweq	r0, #0
    5e54:	06012abb 			; <UNDEFINED> instruction: 0x06012abb
    5e58:	06050501 	streq	r0, [r5], -r1, lsl #10
    5e5c:	14500521 	ldrbne	r0, [r0], #-1313	; 0xfffffadf
    5e60:	05163f05 	ldreq	r3, [r6, #-3845]	; 0xfffff0fb
    5e64:	2e061505 	cfsh32cs	mvfx1, mvfx6, #5
    5e68:	14052706 	strne	r2, [r5], #-1798	; 0xfffff8fa
    5e6c:	23050106 	movwcs	r0, #20742	; 0x5106
    5e70:	05052106 	streq	r2, [r5, #-262]	; 0xfffffefa
    5e74:	3c200113 	stfccs	f0, [r0], #-76	; 0xffffffb4
    5e78:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    5e7c:	02003c03 	andeq	r3, r0, #768	; 0x300
    5e80:	002e0304 	eoreq	r0, lr, r4, lsl #6
    5e84:	3c030402 	cfstrscc	mvf0, [r3], {2}
    5e88:	02000905 	andeq	r0, r0, #81920	; 0x14000
    5e8c:	0c030304 	stceq	3, cr0, [r3], {4}
    5e90:	00050501 	andeq	r0, r5, r1, lsl #10
    5e94:	35030402 	strcc	r0, [r3, #-1026]	; 0xfffffbfe
    5e98:	03040200 	movweq	r0, #16896	; 0x4200
    5e9c:	04020001 	streq	r0, [r2], #-1
    5ea0:	02002003 	andeq	r2, r0, #3
    5ea4:	003c0304 	eorseq	r0, ip, r4, lsl #6
    5ea8:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
    5eac:	03040200 	movweq	r0, #16896	; 0x4200
    5eb0:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    5eb4:	02002e03 	andeq	r2, r0, #3, 28	; 0x30
    5eb8:	003c0304 	eorseq	r0, ip, r4, lsl #6
    5ebc:	13030402 	movwne	r0, #13314	; 0x3402
    5ec0:	03040200 	movweq	r0, #16896	; 0x4200
    5ec4:	04020001 	streq	r0, [r2], #-1
    5ec8:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    5ecc:	00010304 	andeq	r0, r1, r4, lsl #6
    5ed0:	06030402 	streq	r0, [r3], -r2, lsl #8
    5ed4:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    5ed8:	004a0601 	subeq	r0, sl, r1, lsl #12
    5edc:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
    5ee0:	03040200 	movweq	r0, #16896	; 0x4200
    5ee4:	04020001 	streq	r0, [r2], #-1
    5ee8:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    5eec:	00660304 	rsbeq	r0, r6, r4, lsl #6
    5ef0:	01030402 	tsteq	r3, r2, lsl #8
    5ef4:	03040200 	movweq	r0, #16896	; 0x4200
    5ef8:	04020001 	streq	r0, [r2], #-1
    5efc:	02002003 	andeq	r2, r0, #3
    5f00:	002e0304 	eoreq	r0, lr, r4, lsl #6
    5f04:	20030402 	andcs	r0, r3, r2, lsl #8
    5f08:	03040200 	movweq	r0, #16896	; 0x4200
    5f0c:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    5f10:	00200603 	eoreq	r0, r0, r3, lsl #12
    5f14:	06030402 	streq	r0, [r3], -r2, lsl #8
    5f18:	04020058 	streq	r0, [r2], #-88	; 0xffffffa8
    5f1c:	02007403 	andeq	r7, r0, #50331648	; 0x3000000
    5f20:	00010304 	andeq	r0, r1, r4, lsl #6
    5f24:	01030402 	tsteq	r3, r2, lsl #8
    5f28:	02000905 	andeq	r0, r0, #81920	; 0x14000
    5f2c:	05160304 	ldreq	r0, [r6, #-772]	; 0xfffffcfc
    5f30:	0402001b 	streq	r0, [r2], #-27	; 0xffffffe5
    5f34:	05010603 	streq	r0, [r1, #-1539]	; 0xfffff9fd
    5f38:	04020036 	streq	r0, [r2], #-54	; 0xffffffca
    5f3c:	0b052003 	bleq	14df50 <__RAM_SIZE+0x4df50>
    5f40:	03040200 	movweq	r0, #16896	; 0x4200
    5f44:	060d053c 			; <UNDEFINED> instruction: 0x060d053c
    5f48:	06210534 			; <UNDEFINED> instruction: 0x06210534
    5f4c:	06340501 	ldrteq	r0, [r4], -r1, lsl #10
    5f50:	053c1103 	ldreq	r1, [ip, #-259]!	; 0xfffffefd
    5f54:	05130601 	ldreq	r0, [r3, #-1537]	; 0xfffff9ff
    5f58:	04020005 	streq	r0, [r2], #-5
    5f5c:	50030601 	andpl	r0, r3, r1, lsl #12
    5f60:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    5f64:	003c0601 	eorseq	r0, ip, r1, lsl #12
    5f68:	06010402 	streq	r0, [r1], -r2, lsl #8
    5f6c:	02011303 	andeq	r1, r1, #201326592	; 0xc000000
    5f70:	0101000b 	tsteq	r1, fp
    5f74:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    5f78:	00000002 	andeq	r0, r0, r2
    5f7c:	2b820300 	blcs	fe086b84 <__StackTop+0xc5f86b84>
    5f80:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    5f84:	052f0631 	streq	r0, [pc, #-1585]!	; 595b <__HEAP_SIZE+0x495b>
    5f88:	0505141e 	streq	r1, [r5, #-1054]	; 0xfffffbe2
    5f8c:	30090513 	andcc	r0, r9, r3, lsl r5
    5f90:	01062305 	tsteq	r6, r5, lsl #6
    5f94:	3d060905 	vstrcc.16	s0, [r6, #-10]	; <UNPREDICTABLE>
    5f98:	01062405 	tsteq	r6, r5, lsl #8
    5f9c:	3e060505 	cfsh32cc	mvfx0, mvfx6, #5
    5fa0:	05302705 	ldreq	r2, [r0, #-1797]!	; 0xfffff8fb
    5fa4:	20130601 	andscs	r0, r3, r1, lsl #12
    5fa8:	01000502 	tsteq	r0, r2, lsl #10
    5fac:	00010501 	andeq	r0, r1, r1, lsl #10
    5fb0:	2d240205 	sfmcs	f0, 4, [r4, #-20]!	; 0xffffffec
    5fb4:	92031000 	andls	r1, r3, #0
    5fb8:	3905012b 	stmdbcc	r5, {r0, r1, r3, r5, r8}
    5fbc:	15050513 	strne	r0, [r5, #-1299]	; 0xfffffaed
    5fc0:	01061f05 	tsteq	r6, r5, lsl #30
    5fc4:	3d060505 	cfstr32cc	mvfx0, [r6, #-20]	; 0xffffffec
    5fc8:	01062005 	tsteq	r6, r5
    5fcc:	3e062f05 	cdpcc	15, 0, cr2, cr6, cr5, {0}
    5fd0:	13060105 	movwne	r0, #24837	; 0x6105
    5fd4:	01000602 	tsteq	r0, r2, lsl #12
    5fd8:	00010501 	andeq	r0, r1, r1, lsl #10
    5fdc:	2d3c0205 	lfmcs	f0, 4, [ip, #-20]!	; 0xffffffec
    5fe0:	9f031000 	svcls	0x00031000
    5fe4:	0106012b 	tsteq	r6, fp, lsr #2
    5fe8:	3d060505 	cfstr32cc	mvfx0, [r6, #-20]	; 0xffffffec
    5fec:	05144005 	ldreq	r4, [r4, #-5]
    5ff0:	2205141e 	andcs	r1, r5, #503316480	; 0x1e000000
    5ff4:	14050513 	strne	r0, [r5], #-1299	; 0xfffffaed
    5ff8:	05310905 	ldreq	r0, [r1, #-2309]!	; 0xfffff6fb
    5ffc:	0501061a 	streq	r0, [r1, #-1562]	; 0xfffff9e6
    6000:	052f0609 	streq	r0, [pc, #-1545]!	; 59ff <__HEAP_SIZE+0x49ff>
    6004:	05010644 	streq	r0, [r1, #-1604]	; 0xfffff9bc
    6008:	0d05201a 	stceq	0, cr2, [r5, #-104]	; 0xffffff98
    600c:	1d052306 	stcne	3, cr2, [r5, #-24]	; 0xffffffe8
    6010:	0f050106 	svceq	0x00050106
    6014:	0611054a 	ldreq	r0, [r1], -sl, asr #10
    6018:	061d0524 	ldreq	r0, [sp], -r4, lsr #10
    601c:	2e2e0501 	cfsh64cs	mvdx0, mvdx14, #1
    6020:	06110520 	ldreq	r0, [r1], -r0, lsr #10
    6024:	0619052f 	ldreq	r0, [r9], -pc, lsr #10
    6028:	05052001 	streq	r2, [r5, #-1]
    602c:	01270306 			; <UNDEFINED> instruction: 0x01270306
    6030:	05303005 	ldreq	r3, [r0, #-5]!
    6034:	01051405 	tsteq	r5, r5, lsl #8
    6038:	0d051306 	stceq	3, cr1, [r5, #-24]	; 0xffffffe8
    603c:	2e5a0306 	cdpcs	3, 5, cr0, cr10, cr6, {0}
    6040:	01061105 	tsteq	r6, r5, lsl #2
    6044:	05200f05 	streq	r0, [r0, #-3845]!	; 0xfffff0fb
    6048:	0a030609 	beq	c7874 <__HEAP_SIZE+0xc6874>
    604c:	061f053c 			; <UNDEFINED> instruction: 0x061f053c
    6050:	2e0b0501 	cfsh32cs	mvfx0, mvfx11, #1
    6054:	02003e05 	andeq	r3, r0, #5, 28	; 0x50
    6058:	053c0104 	ldreq	r0, [ip, #-260]!	; 0xfffffefc
    605c:	1335060d 	teqne	r5, #13631488	; 0xd00000
    6060:	01061c05 	tsteq	r6, r5, lsl #24
    6064:	052d1505 	streq	r1, [sp, #-1285]!	; 0xfffffafb
    6068:	0e05211c 	mcreq	1, 0, r2, cr5, cr12, {0}
    606c:	10052206 	andne	r2, r5, r6, lsl #4
    6070:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    6074:	2e090306 	cdpcs	3, 0, cr0, cr9, cr6, {0}
    6078:	01061c05 	tsteq	r6, r5, lsl #24
    607c:	2f060d05 	svccs	0x00060d05
    6080:	01061505 	tsteq	r6, r5, lsl #10
    6084:	060d0520 	streq	r0, [sp], -r0, lsr #10
    6088:	05207903 	streq	r7, [r0, #-2307]!	; 0xfffff6fd
    608c:	0501061c 	streq	r0, [r1, #-1564]	; 0xfffff9e4
    6090:	063d060d 	ldrteq	r0, [sp], -sp, lsl #12
    6094:	052f0620 	streq	r0, [pc, #-1568]!	; 5a7c <__HEAP_SIZE+0x4a7c>
    6098:	20010615 	andcs	r0, r1, r5, lsl r6
    609c:	6c031905 			; <UNDEFINED> instruction: 0x6c031905
    60a0:	08022020 	stmdaeq	r2, {r5, sp}
    60a4:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    60a8:	02050001 	andeq	r0, r5, #1
    60ac:	10002db8 			; <UNDEFINED> instruction: 0x10002db8
    60b0:	012be303 			; <UNDEFINED> instruction: 0x012be303
    60b4:	05132205 	ldreq	r2, [r3, #-517]	; 0xfffffdfb
    60b8:	29051505 	stmdbcs	r5, {r0, r2, r8, sl, ip}
    60bc:	23050106 	movwcs	r0, #20742	; 0x5106
    60c0:	01053e06 	tsteq	r5, r6, lsl #28
    60c4:	03021306 	movweq	r1, #8966	; 0x2306
    60c8:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    60cc:	02050005 	andeq	r0, r5, #5
    60d0:	10002dc4 	andne	r2, r0, r4, asr #27
    60d4:	012dfc03 	msreq	CPSR_fsc, r3, lsl #24
    60d8:	05150d05 	ldreq	r0, [r5, #-3333]	; 0xfffff2fb
    60dc:	31051509 	tstcc	r5, r9, lsl #10
    60e0:	16090514 			; <UNDEFINED> instruction: 0x16090514
    60e4:	01060d05 	tsteq	r6, r5, lsl #26
    60e8:	052e0b05 	streq	r0, [lr, #-2821]!	; 0xfffff4fb
    60ec:	0525060e 	streq	r0, [r5, #-1550]!	; 0xfffff9f2
    60f0:	05010620 	streq	r0, [r1, #-1568]	; 0xfffff9e0
    60f4:	0e052e10 	mcreq	14, 0, r2, cr5, cr0, {0}
    60f8:	1f052506 	svcne	0x00052506
    60fc:	10050106 	andne	r0, r5, r6, lsl #2
    6100:	0612052e 	ldreq	r0, [r2], -lr, lsr #10
    6104:	06160528 	ldreq	r0, [r6], -r8, lsr #10
    6108:	2e610501 	cdpcs	5, 6, cr0, cr1, cr1, {0}
    610c:	053c1405 	ldreq	r1, [ip, #-1029]!	; 0xfffffbfb
    6110:	2e68031a 	mcrcs	3, 3, r0, cr8, cr10, {0}
    6114:	09031505 	stmdbeq	r3, {r0, r2, r8, sl, ip}
    6118:	0534332e 	ldreq	r3, [r4, #-814]!	; 0xfffffcd2
    611c:	2e0a0319 	mcrcs	3, 0, r0, cr10, cr9, {0}
    6120:	25062505 	strcs	r2, [r6, #-1285]	; 0xfffffafb
    6124:	05153b05 	ldreq	r3, [r5, #-2821]	; 0xfffff4fb
    6128:	05051409 	streq	r1, [r5, #-1033]	; 0xfffffbf7
    612c:	0b021306 	bleq	8ad4c <__HEAP_SIZE+0x89d4c>
    6130:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    6134:	02050005 	andeq	r0, r5, #5
    6138:	00000000 	andeq	r0, r0, r0
    613c:	0131e303 	teqeq	r1, r3, lsl #6
    6140:	09050106 	stmdbeq	r5, {r1, r2, r8}
    6144:	13132106 	tstne	r3, #-2147483647	; 0x80000001
    6148:	05143805 	ldreq	r3, [r4, #-2053]	; 0xfffff7fb
    614c:	11051409 	tstne	r5, r9, lsl #8
    6150:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    6154:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    6158:	09053206 	stmdbeq	r5, {r1, r2, r9, ip, sp}
    615c:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    6160:	0024051a 	eoreq	r0, r4, sl, lsl r5
    6164:	06040402 	streq	r0, [r4], -r2, lsl #8
    6168:	003c0501 	eorseq	r0, ip, r1, lsl #10
    616c:	06040402 	streq	r0, [r4], -r2, lsl #8
    6170:	0009053e 	andeq	r0, r9, lr, lsr r5
    6174:	14040402 	strne	r0, [r4], #-1026	; 0xfffffbfe
    6178:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    617c:	13060404 	movwne	r0, #25604	; 0x6404
    6180:	02001105 	andeq	r1, r0, #1073741825	; 0x40000001
    6184:	6f030104 	svcvs	0x00030104
    6188:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    618c:	03022e01 	movweq	r2, #11777	; 0x2e01
    6190:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    6194:	02050009 	andeq	r0, r5, #9
    6198:	00000000 	andeq	r0, r0, r0
    619c:	0132d003 	teqeq	r2, r3
    61a0:	05130d05 	ldreq	r0, [r3, #-3333]	; 0xfffff2fb
    61a4:	0d051433 	cfstrseq	mvf1, [r5, #-204]	; 0xffffff34
    61a8:	06150517 			; <UNDEFINED> instruction: 0x06150517
    61ac:	063d0501 	ldrteq	r0, [sp], -r1, lsl #10
    61b0:	140d0530 	strne	r0, [sp], #-1328	; 0xfffffad0
    61b4:	13060905 	movwne	r0, #26885	; 0x6905
    61b8:	01000402 	tsteq	r0, r2, lsl #8
    61bc:	00050501 	andeq	r0, r5, r1, lsl #10
    61c0:	00000205 	andeq	r0, r0, r5, lsl #4
    61c4:	f3030000 	vhadd.u8	d0, d3, d0
    61c8:	09050132 	stmdbeq	r5, {r1, r4, r5, r8}
    61cc:	143f0513 	ldrtne	r0, [pc], #-1299	; 61d4 <__HEAP_SIZE+0x51d4>
    61d0:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    61d4:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
    61d8:	05230611 	streq	r0, [r3, #-1553]!	; 0xfffff9ef
    61dc:	2e010619 	mcrcs	6, 0, r0, cr1, cr9, {0}
    61e0:	79031605 	stmdbvc	r3, {r0, r2, r9, sl, ip}
    61e4:	06400520 	strbeq	r0, [r0], -r0, lsr #10
    61e8:	05200d03 	streq	r0, [r0, #-3331]!	; 0xfffff2fd
    61ec:	05051409 	streq	r1, [r5, #-1033]	; 0xfffffbf7
    61f0:	03021306 	movweq	r1, #8966	; 0x2306
    61f4:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    61f8:	02050005 	andeq	r0, r5, #5
    61fc:	00000000 	andeq	r0, r0, r0
    6200:	01338c03 	teqeq	r3, r3, lsl #24
    6204:	05130905 	ldreq	r0, [r3, #-2309]	; 0xfffff6fb
    6208:	0905142c 	stmdbeq	r5, {r2, r3, r5, sl, ip}
    620c:	061f0514 			; <UNDEFINED> instruction: 0x061f0514
    6210:	2e0b0501 	cfsh32cs	mvfx0, mvfx11, #1
    6214:	03061105 	movweq	r1, #24837	; 0x6105
    6218:	2a05200a 	bcs	14e248 <__RAM_SIZE+0x4e248>
    621c:	13050106 	movwne	r0, #20742	; 0x5106
    6220:	261d052e 	ldrcs	r0, [sp], -lr, lsr #10
    6224:	28063605 	stmdacs	r6, {r0, r2, r9, sl, ip, sp}
    6228:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    622c:	05130605 	ldreq	r0, [r3, #-1541]	; 0xfffff9fb
    6230:	2071031d 	rsbscs	r0, r1, sp, lsl r3
    6234:	76031505 	strvc	r1, [r3], -r5, lsl #10
    6238:	0006022e 	andeq	r0, r6, lr, lsr #4
    623c:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    6240:	00020500 	andeq	r0, r2, r0, lsl #10
    6244:	03000000 	movweq	r0, #0
    6248:	050133b4 	streq	r3, [r1, #-948]	; 0xfffffc4c
    624c:	05131309 	ldreq	r1, [r3, #-777]	; 0xfffffcf7
    6250:	09051439 	stmdbeq	r5, {r0, r3, r4, r5, sl, ip}
    6254:	060b0516 			; <UNDEFINED> instruction: 0x060b0516
    6258:	03050501 	movweq	r0, #21761	; 0x5501
    625c:	0d052e78 	stceq	14, cr2, [r5, #-480]	; 0xfffffe20
    6260:	2e0d0306 	cdpcs	3, 0, cr0, cr13, cr6, {0}
    6264:	01062105 	tsteq	r6, r5, lsl #2
    6268:	05203c05 	streq	r3, [r0, #-3077]!	; 0xfffff3fb
    626c:	11053c0f 	tstne	r5, pc, lsl #24
    6270:	17053306 	strne	r3, [r5, -r6, lsl #6]
    6274:	13050106 	movwne	r0, #20742	; 0x5106
    6278:	06150520 	ldreq	r0, [r5], -r0, lsr #10
    627c:	6a2d0530 	bvs	b47744 <__RAM_SIZE+0xa47744>
    6280:	05171105 	ldreq	r1, [r7, #-261]	; 0xfffffefb
    6284:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    6288:	15056613 	strne	r6, [r5, #-1555]	; 0xfffff9ed
    628c:	2e1f0306 	cdpcs	3, 1, cr0, cr15, cr6, {0}
    6290:	01064005 	tsteq	r6, r5
    6294:	053c3205 	ldreq	r3, [ip, #-517]!	; 0xfffffdfb
    6298:	05052619 	streq	r2, [r5, #-1561]	; 0xfffff9e7
    629c:	05201d03 	streq	r1, [r0, #-3331]!	; 0xfffff2fd
    62a0:	40030615 	andmi	r0, r3, r5, lsl r6
    62a4:	06190520 	ldreq	r0, [r9], -r0, lsr #10
    62a8:	31052e01 	tstcc	r5, r1, lsl #28
    62ac:	2e090306 	cdpcs	3, 0, cr0, cr9, cr6, {0}
    62b0:	05161505 	ldreq	r1, [r6, #-1285]	; 0xfffffafb
    62b4:	05010640 	streq	r0, [r1, #-1600]	; 0xfffff9c0
    62b8:	15053c32 	strne	r3, [r5, #-3122]	; 0xfffff3ce
    62bc:	01012106 	tsteq	r1, r6, lsl #2
    62c0:	04020001 	streq	r0, [r2], #-1
    62c4:	02004a01 	andeq	r4, r0, #4096	; 0x1000
    62c8:	002e0304 	eoreq	r0, lr, r4, lsl #6
    62cc:	01030402 	tsteq	r3, r2, lsl #8
    62d0:	03040200 	movweq	r0, #16896	; 0x4200
    62d4:	04020001 	streq	r0, [r2], #-1
    62d8:	02006603 	andeq	r6, r0, #3145728	; 0x300000
    62dc:	00010304 	andeq	r0, r1, r4, lsl #6
    62e0:	01030402 	tsteq	r3, r2, lsl #8
    62e4:	03040200 	movweq	r0, #16896	; 0x4200
    62e8:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    62ec:	02002e03 	andeq	r2, r0, #3, 28	; 0x30
    62f0:	00200304 	eoreq	r0, r0, r4, lsl #6
    62f4:	20030402 	andcs	r0, r3, r2, lsl #8
    62f8:	03040200 	movweq	r0, #16896	; 0x4200
    62fc:	02002006 	andeq	r2, r0, #6
    6300:	58060304 	stmdapl	r6, {r2, r8, r9}
    6304:	03040200 	movweq	r0, #16896	; 0x4200
    6308:	04020074 	streq	r0, [r2], #-116	; 0xffffff8c
    630c:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    6310:	05010304 	streq	r0, [r1, #-772]	; 0xfffffcfc
    6314:	04020019 	streq	r0, [r2], #-25	; 0xffffffe7
    6318:	15030603 	strne	r0, [r3, #-1539]	; 0xfffff9fd
    631c:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    6320:	06250532 			; <UNDEFINED> instruction: 0x06250532
    6324:	20440501 	subcs	r0, r4, r1, lsl #10
    6328:	053c1305 	ldreq	r1, [ip, #-773]!	; 0xfffffcfb
    632c:	7fbc0314 	svcvc	0x00bc0314
    6330:	0520202e 	streq	r2, [r0, #-46]!	; 0xffffffd2
    6334:	00dd0305 	sbcseq	r0, sp, r5, lsl #6
    6338:	031d0520 	tsteq	sp, #32, 10	; 0x8000000
    633c:	25052070 	strcs	r2, [r5, #-112]	; 0xffffff90
    6340:	200a0306 	andcs	r0, sl, r6, lsl #6
    6344:	05153405 	ldreq	r3, [r5, #-1029]	; 0xfffffbfb
    6348:	10051409 	andne	r1, r5, r9, lsl #8
    634c:	08020106 	stmdaeq	r2, {r1, r2, r8}
    6350:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    6354:	02050005 	andeq	r0, r5, #5
    6358:	10002e0c 	andne	r2, r0, ip, lsl #28
    635c:	01349b03 	teqeq	r4, r3, lsl #22
    6360:	13130905 	tstne	r3, #81920	; 0x14000
    6364:	05143c05 	ldreq	r3, [r4, #-3077]	; 0xfffff3fb
    6368:	0b051409 	bleq	14b394 <__RAM_SIZE+0x4b394>
    636c:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    6370:	052e7a03 	streq	r7, [lr, #-2563]!	; 0xfffff5fd
    6374:	0c030632 	stceq	6, cr0, [r3], {50}	; 0x32
    6378:	1331052e 	teqne	r1, #192937984	; 0xb800000
    637c:	05130d05 	ldreq	r0, [r3, #-3333]	; 0xfffff2fb
    6380:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
    6384:	0d052025 	stceq	0, cr2, [r5, #-148]	; 0xffffff6c
    6388:	16053206 	strne	r3, [r5], -r6, lsl #4
    638c:	2b050106 	blcs	1467ac <__RAM_SIZE+0x467ac>
    6390:	200f0520 	andcs	r0, pc, r0, lsr #10
    6394:	31061105 	tstcc	r6, r5, lsl #2
    6398:	01061305 	tsteq	r6, r5, lsl #6
    639c:	6d031405 	cfstrsvs	mvf1, [r3, #-20]	; 0xffffffec
    63a0:	06250520 	strteq	r0, [r5], -r0, lsr #10
    63a4:	2000ce03 	andcs	ip, r0, r3, lsl #28
    63a8:	05153705 	ldreq	r3, [r5, #-1797]	; 0xfffff8fb
    63ac:	05051409 	streq	r1, [r5, #-1033]	; 0xfffffbf7
    63b0:	15051306 	strne	r1, [r5, #-774]	; 0xfffffcfa
    63b4:	20460306 	subcs	r0, r6, r6, lsl #6
    63b8:	01061905 	tsteq	r6, r5, lsl #18
    63bc:	0631052e 	ldrteq	r0, [r1], -lr, lsr #10
    63c0:	17520534 	smmlarne	r2, r4, r5, r0
    63c4:	05131505 	ldreq	r1, [r3, #-1285]	; 0xfffffafb
    63c8:	0501062e 	streq	r0, [r1, #-1582]	; 0xfffff9d2
    63cc:	15052027 	strne	r2, [r5, #-39]	; 0xffffffd9
    63d0:	013d2506 	teqeq	sp, r6, lsl #10
    63d4:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    63d8:	004a0104 	subeq	r0, sl, r4, lsl #2
    63dc:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
    63e0:	03040200 	movweq	r0, #16896	; 0x4200
    63e4:	04020001 	streq	r0, [r2], #-1
    63e8:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    63ec:	00660304 	rsbeq	r0, r6, r4, lsl #6
    63f0:	01030402 	tsteq	r3, r2, lsl #8
    63f4:	03040200 	movweq	r0, #16896	; 0x4200
    63f8:	04020001 	streq	r0, [r2], #-1
    63fc:	02002003 	andeq	r2, r0, #3
    6400:	002e0304 	eoreq	r0, lr, r4, lsl #6
    6404:	20030402 	andcs	r0, r3, r2, lsl #8
    6408:	03040200 	movweq	r0, #16896	; 0x4200
    640c:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    6410:	00200603 	eoreq	r0, r0, r3, lsl #12
    6414:	06030402 	streq	r0, [r3], -r2, lsl #8
    6418:	04020058 	streq	r0, [r2], #-88	; 0xffffffa8
    641c:	02007403 	andeq	r7, r0, #50331648	; 0x3000000
    6420:	00010304 	andeq	r0, r1, r4, lsl #6
    6424:	01030402 	tsteq	r3, r2, lsl #8
    6428:	03040200 	movweq	r0, #16896	; 0x4200
    642c:	05011403 	streq	r1, [r1, #-1027]	; 0xfffffbfd
    6430:	0402001d 	streq	r0, [r2], #-29	; 0xffffffe3
    6434:	05010603 	streq	r0, [r1, #-1539]	; 0xfffff9fd
    6438:	2e400314 	mcrcs	3, 2, r0, cr0, cr4, {0}
    643c:	d4030505 	strle	r0, [r3], #-1285	; 0xfffffafb
    6440:	14052000 	strne	r2, [r5], #-0
    6444:	207fac03 	rsbscs	sl, pc, r3, lsl #24
    6448:	00060220 	andeq	r0, r6, r0, lsr #4
    644c:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    6450:	00020500 	andeq	r0, r2, r0, lsl #10
    6454:	03000000 	movweq	r0, #0
    6458:	050134fa 	streq	r3, [r1, #-1274]	; 0xfffffb06
    645c:	13131309 	tstne	r3, #603979776	; 0x24000000
    6460:	05146605 	ldreq	r6, [r4, #-1541]	; 0xfffff9fb
    6464:	0b051409 	bleq	14b490 <__RAM_SIZE+0x4b490>
    6468:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    646c:	052e7903 	streq	r7, [lr, #-2307]!	; 0xfffff6fd
    6470:	0b030631 	bleq	c7d3c <__HEAP_SIZE+0xc6d3c>
    6474:	180d052e 	stmdane	sp, {r1, r2, r3, r5, r8, sl}
    6478:	01061605 	tsteq	r6, r5, lsl #12
    647c:	05200f05 	streq	r0, [r0, #-3845]!	; 0xfffff0fb
    6480:	0d053021 	stceq	0, cr3, [r5, #-132]	; 0xffffff7c
    6484:	16052806 	strne	r2, [r5], -r6, lsl #16
    6488:	0f050106 	svceq	0x00050106
    648c:	06110520 	ldreq	r0, [r1], -r0, lsr #10
    6490:	061a0534 			; <UNDEFINED> instruction: 0x061a0534
    6494:	20130501 	andscs	r0, r3, r1, lsl #10
    6498:	ce030505 	cfsh32gt	mvfx0, mvfx3, #5
    649c:	3a052e00 	bcc	151ca4 <__RAM_SIZE+0x51ca4>
    64a0:	7fb70306 	svcvc	0x00b70306
    64a4:	174c0520 	strbne	r0, [ip, -r0, lsr #10]
    64a8:	13131505 	tstne	r3, #20971520	; 0x1400000
    64ac:	01062705 	tsteq	r6, r5, lsl #14
    64b0:	24061505 	strcs	r1, [r6], #-1285	; 0xfffffafb
    64b4:	01061b05 	tsteq	r6, r5, lsl #22
    64b8:	05201705 	streq	r1, [r0, #-1797]!	; 0xfffff8fb
    64bc:	06300619 			; <UNDEFINED> instruction: 0x06300619
    64c0:	0631052e 	ldrteq	r0, [r1], -lr, lsr #10
    64c4:	03150524 	tsteq	r5, #36, 10	; 0x9000000
    64c8:	19050109 	stmdbne	r5, {r0, r3, r8}
    64cc:	053c0106 	ldreq	r0, [ip, #-262]!	; 0xfffffefa
    64d0:	19053c17 	stmdbne	r5, {r0, r1, r2, r4, sl, fp, ip, sp}
    64d4:	1d053006 	stcne	0, cr3, [r5, #-24]	; 0xffffffe8
    64d8:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
    64dc:	09030635 	stmdbeq	r3, {r0, r2, r4, r5, r9, sl}
    64e0:	1519052e 	ldrne	r0, [r9, #-1326]	; 0xfffffad2
    64e4:	00010101 	andeq	r0, r1, r1, lsl #2
    64e8:	58010402 	stmdapl	r1, {r1, sl}
    64ec:	03040200 	movweq	r0, #16896	; 0x4200
    64f0:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    64f4:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    64f8:	00010304 	andeq	r0, r1, r4, lsl #6
    64fc:	66030402 	strvs	r0, [r3], -r2, lsl #8
    6500:	03040200 	movweq	r0, #16896	; 0x4200
    6504:	04020001 	streq	r0, [r2], #-1
    6508:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    650c:	00200304 	eoreq	r0, r0, r4, lsl #6
    6510:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
    6514:	03040200 	movweq	r0, #16896	; 0x4200
    6518:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    651c:	02002003 	andeq	r2, r0, #3
    6520:	20060304 	andcs	r0, r6, r4, lsl #6
    6524:	03040200 	movweq	r0, #16896	; 0x4200
    6528:	02005806 	andeq	r5, r0, #393216	; 0x60000
    652c:	00740304 	rsbseq	r0, r4, r4, lsl #6
    6530:	01030402 	tsteq	r3, r2, lsl #8
    6534:	03040200 	movweq	r0, #16896	; 0x4200
    6538:	00250501 	eoreq	r0, r5, r1, lsl #10
    653c:	03030402 	movweq	r0, #13314	; 0x3402
    6540:	3a05011d 	bcc	1469bc <__RAM_SIZE+0x469bc>
    6544:	03040200 	movweq	r0, #16896	; 0x4200
    6548:	00050515 	andeq	r0, r5, r5, lsl r5
    654c:	06030402 	streq	r0, [r3], -r2, lsl #8
    6550:	04020013 	streq	r0, [r2], #-19	; 0xffffffed
    6554:	06022003 	streq	r2, [r2], -r3
    6558:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    655c:	02050001 	andeq	r0, r5, #1
    6560:	00000000 	andeq	r0, r0, r0
    6564:	013b9103 	teqeq	fp, r3, lsl #2
    6568:	05130505 	ldreq	r0, [r3, #-1285]	; 0xfffffafb
    656c:	0505142b 	streq	r1, [r5, #-1067]	; 0xfffffbd5
    6570:	06100514 			; <UNDEFINED> instruction: 0x06100514
    6574:	2e0e0501 	cfsh32cs	mvfx0, mvfx14, #1
    6578:	24060505 	strcs	r0, [r6], #-1285	; 0xfffffafb
    657c:	05683605 	strbeq	r3, [r8, #-1541]!	; 0xfffff9fb
    6580:	01051405 	tsteq	r5, r5, lsl #8
    6584:	03021306 	movweq	r1, #8966	; 0x2306
    6588:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    658c:	02050005 	andeq	r0, r5, #5
    6590:	00000000 	andeq	r0, r0, r0
    6594:	013ba503 	teqeq	fp, r3, lsl #10
    6598:	05130905 	ldreq	r0, [r3, #-2309]	; 0xfffff6fb
    659c:	09051433 	stmdbeq	r5, {r0, r1, r4, r5, sl, ip}
    65a0:	060f0514 			; <UNDEFINED> instruction: 0x060f0514
    65a4:	06090501 	streq	r0, [r9], -r1, lsl #10
    65a8:	060b0532 			; <UNDEFINED> instruction: 0x060b0532
    65ac:	060d0501 	streq	r0, [sp], -r1, lsl #10
    65b0:	06140522 	ldreq	r0, [r4], -r2, lsr #10
    65b4:	20250501 	eorcs	r0, r5, r1, lsl #10
    65b8:	31063b05 	tstcc	r6, r5, lsl #22
    65bc:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    65c0:	02130605 	andseq	r0, r3, #5242880	; 0x500000
    65c4:	01010004 	tsteq	r1, r4
    65c8:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    65cc:	00000002 	andeq	r0, r0, r2
    65d0:	3bc00300 	blcc	ff0071d8 <__StackTop+0xc6f071d8>
    65d4:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    65d8:	134b0609 	movtne	r0, #46601	; 0xb609
    65dc:	05145f05 	ldreq	r5, [r4, #-3845]	; 0xfffff0fb
    65e0:	09051450 	stmdbeq	r5, {r4, r6, sl, ip}
    65e4:	340d0516 	strcc	r0, [sp], #-1302	; 0xfffffaea
    65e8:	05311105 	ldreq	r1, [r1, #-261]!	; 0xfffffefb
    65ec:	05010621 	streq	r0, [r1, #-1569]	; 0xfffff9df
    65f0:	13052e32 	movwne	r2, #24114	; 0x5e32
    65f4:	06150558 			; <UNDEFINED> instruction: 0x06150558
    65f8:	06210523 	strteq	r0, [r1], -r3, lsr #10
    65fc:	2e440501 	cdpcs	5, 4, cr0, cr4, cr1, {0}
    6600:	4c061505 	cfstr32mi	mvfx1, [r6], {5}
    6604:	01061705 	tsteq	r6, r5, lsl #14
    6608:	03062d05 	movweq	r2, #27909	; 0x6d05
    660c:	0d05200b 	stceq	0, cr2, [r5, #-44]	; 0xffffffd4
    6610:	29053315 	stmdbcs	r5, {r0, r2, r4, r8, r9, ip, sp}
    6614:	15090519 	strne	r0, [r9, #-1305]	; 0xfffffae7
    6618:	01061b05 	tsteq	r6, r5, lsl #22
    661c:	31060905 	tstcc	r6, r5, lsl #18
    6620:	01060b05 	tsteq	r6, r5, lsl #22
    6624:	26062505 	strcs	r2, [r6], -r5, lsl #10
    6628:	05150905 	ldreq	r0, [r5, #-2309]	; 0xfffff6fb
    662c:	0d053035 	stceq	0, cr3, [r5, #-212]	; 0xffffff2c
    6630:	06240513 			; <UNDEFINED> instruction: 0x06240513
    6634:	2e160501 	cfmul32cs	mvfx0, mvfx6, mvfx1
    6638:	5a060d05 	bpl	189a54 <__RAM_SIZE+0x89a54>
    663c:	01060f05 	tsteq	r6, r5, lsl #30
    6640:	22061105 	andcs	r1, r6, #1073741825	; 0x40000001
    6644:	01061305 	tsteq	r6, r5, lsl #6
    6648:	22061505 	andcs	r1, r6, #20971520	; 0x1400000
    664c:	01062105 	tsteq	r6, r5, lsl #2
    6650:	052e4605 	streq	r4, [lr, #-1541]!	; 0xfffff9fb
    6654:	09030629 	stmdbeq	r3, {r0, r3, r5, r9, sl}
    6658:	150d054a 	strne	r0, [sp, #-1354]	; 0xfffffab6
    665c:	01061905 	tsteq	r6, r5, lsl #18
    6660:	202e3c05 	eorcs	r3, lr, r5, lsl #24
    6664:	3e060905 	vmlacc.f16	s0, s12, s10	; <UNPREDICTABLE>
    6668:	05303805 	ldreq	r3, [r0, #-2053]!	; 0xfffff7fb
    666c:	05051409 	streq	r1, [r5, #-1033]	; 0xfffffbf7
    6670:	2d051306 	stccs	3, cr1, [r5, #-24]	; 0xffffffe8
    6674:	2e460306 	cdpcs	3, 4, cr0, cr6, cr6, {0}
    6678:	33150d05 	tstcc	r5, #320	; 0x140
    667c:	03062505 	movweq	r2, #25861	; 0x6505
    6680:	05200157 	streq	r0, [r0, #-343]!	; 0xfffffea9
    6684:	18030619 	stmdane	r3, {r0, r3, r4, r9, sl}
    6688:	032d0520 			; <UNDEFINED> instruction: 0x032d0520
    668c:	0d050109 	stfeqs	f0, [r5, #-36]	; 0xffffffdc
    6690:	3f053315 	svccc	0x00053315
    6694:	13110514 	tstne	r1, #20, 10	; 0x5000000
    6698:	03062605 	movweq	r2, #26117	; 0x6605
    669c:	05204a6c 	streq	r4, [r0, #-2668]!	; 0xfffff594
    66a0:	04020028 	streq	r0, [r2], #-40	; 0xffffffd8
    66a4:	201e0301 	andscs	r0, lr, r1, lsl #6
    66a8:	30060d05 	andcc	r0, r6, r5, lsl #26
    66ac:	15052e06 	strne	r2, [r5, #-3590]	; 0xfffff1fa
    66b0:	20140306 	andscs	r0, r4, r6, lsl #6
    66b4:	01062105 	tsteq	r6, r5, lsl #2
    66b8:	052e5105 	streq	r5, [lr, #-261]!	; 0xfffffefb
    66bc:	09022046 	stmdbeq	r2, {r1, r2, r6, sp}
    66c0:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    66c4:	02050005 	andeq	r0, r5, #5
    66c8:	00000000 	andeq	r0, r0, r0
    66cc:	013ca903 	teqeq	ip, r3, lsl #18
    66d0:	09050106 	stmdbeq	r5, {r1, r2, r8}
    66d4:	8c057506 	cfstr32hi	mvfx7, [r5], {6}
    66d8:	50051401 	andpl	r1, r5, r1, lsl #8
    66dc:	16090514 			; <UNDEFINED> instruction: 0x16090514
    66e0:	05330d05 	ldreq	r0, [r3, #-3333]!	; 0xfffff2fb
    66e4:	21053111 	tstcs	r5, r1, lsl r1
    66e8:	30050106 	andcc	r0, r5, r6, lsl #2
    66ec:	4a13052e 	bmi	4c7bac <__RAM_SIZE+0x3c7bac>
    66f0:	33061505 	movwcc	r1, #25861	; 0x6505
    66f4:	01064605 	tsteq	r6, r5, lsl #12
    66f8:	a1061505 	tstge	r6, r5, lsl #10
    66fc:	01062105 	tsteq	r6, r5, lsl #2
    6700:	05204405 	streq	r4, [r0, #-1029]!	; 0xfffffbfb
    6704:	054c0615 	strbeq	r0, [ip, #-1557]	; 0xfffff9eb
    6708:	05010617 	streq	r0, [r1, #-1559]	; 0xfffff9e9
    670c:	0b03062d 	bleq	c7fc8 <__HEAP_SIZE+0xc6fc8>
    6710:	150d0520 	strne	r0, [sp, #-1312]	; 0xfffffae0
    6714:	19290533 	stmdbne	r9!, {r0, r1, r4, r5, r8, sl}
    6718:	05150905 	ldreq	r0, [r5, #-2309]	; 0xfffff6fb
    671c:	0501061b 	streq	r0, [r1, #-1563]	; 0xfffff9e5
    6720:	05310609 	ldreq	r0, [r1, #-1545]!	; 0xfffff9f7
    6724:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
    6728:	05260625 	streq	r0, [r6, #-1573]!	; 0xfffff9db
    672c:	35051509 	strcc	r1, [r5, #-1289]	; 0xfffffaf7
    6730:	140d0530 	strne	r0, [sp], #-1328	; 0xfffffad0
    6734:	01060f05 	tsteq	r6, r5, lsl #30
    6738:	24061105 	strcs	r1, [r6], #-261	; 0xfffffefb
    673c:	01063505 	tsteq	r6, r5, lsl #10
    6740:	052e4605 	streq	r4, [lr, #-1541]!	; 0xfffff9fb
    6744:	0d055827 	stceq	8, cr5, [r5, #-156]	; 0xffffff64
    6748:	1d052706 	stcne	7, cr2, [r5, #-24]	; 0xffffffe8
    674c:	2c050106 	stfcss	f0, [r5], {6}
    6750:	4a0f052e 	bmi	3c7c10 <__RAM_SIZE+0x2c7c10>
    6754:	05311905 	ldreq	r1, [r1, #-2309]!	; 0xfffff6fb
    6758:	0a03060d 	beq	c7f94 <__HEAP_SIZE+0xc6f94>
    675c:	06190520 	ldreq	r0, [r9], -r0, lsr #10
    6760:	2e3c0501 	cdpcs	5, 3, cr0, cr12, cr1, {0}
    6764:	06090520 	streq	r0, [r9], -r0, lsr #10
    6768:	3036053e 	eorscc	r0, r6, lr, lsr r5
    676c:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    6770:	05130605 	ldreq	r0, [r3, #-1541]	; 0xfffff9fb
    6774:	bf03062d 	svclt	0x0003062d
    6778:	0d053c7f 	stceq	12, cr3, [r5, #-508]	; 0xfffffe04
    677c:	2e053315 	mcrcs	3, 0, r3, cr5, cr5, {0}
    6780:	01530306 	cmpeq	r3, r6, lsl #6
    6784:	03061905 	movweq	r1, #26885	; 0x6905
    6788:	2d052e1c 	stccs	14, cr2, [r5, #-112]	; 0xffffff90
    678c:	05010903 	streq	r0, [r1, #-2307]	; 0xfffff6fd
    6790:	0533150d 	ldreq	r1, [r3, #-1293]!	; 0xfffffaf3
    6794:	1105143f 	tstne	r5, pc, lsr r4
    6798:	06260513 			; <UNDEFINED> instruction: 0x06260513
    679c:	054a6c03 	strbeq	r6, [sl, #-3075]	; 0xfffff3fd
    67a0:	04020028 	streq	r0, [r2], #-40	; 0xffffffd8
    67a4:	2e1e0301 	cdpcs	3, 1, cr0, cr14, cr1, {0}
    67a8:	30060d05 	andcc	r0, r6, r5, lsl #26
    67ac:	11052e06 	tstne	r5, r6, lsl #28
    67b0:	201f0306 	andscs	r0, pc, r6, lsl #6
    67b4:	01064205 	tsteq	r6, r5, lsl #4
    67b8:	06110590 			; <UNDEFINED> instruction: 0x06110590
    67bc:	06190521 	ldreq	r0, [r9], -r1, lsr #10
    67c0:	03022001 	movweq	r2, #8193	; 0x2001
    67c4:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    67c8:	02050005 	andeq	r0, r5, #5
    67cc:	00000000 	andeq	r0, r0, r0
    67d0:	013d9c03 	teqeq	sp, r3, lsl #24
    67d4:	09050106 	stmdbeq	r5, {r1, r2, r8}
    67d8:	13138306 	tstne	r3, #402653184	; 0x18000000
    67dc:	05147805 	ldreq	r7, [r4, #-2053]	; 0xfffff7fb
    67e0:	26051450 			; <UNDEFINED> instruction: 0x26051450
    67e4:	13090513 	movwne	r0, #38163	; 0x9513
    67e8:	300d0514 	andcc	r0, sp, r4, lsl r5
    67ec:	01060f05 	tsteq	r6, r5, lsl #30
    67f0:	3e061105 	adfccs	f1, f6, f5
    67f4:	01064705 	tsteq	r6, r5, lsl #14
    67f8:	05582f05 	ldrbeq	r2, [r8, #-3845]	; 0xfffff0fb
    67fc:	0531060d 	ldreq	r0, [r1, #-1549]!	; 0xfffff9f3
    6800:	05010623 	streq	r0, [r1, #-1571]	; 0xfffff9dd
    6804:	054c060d 	strbeq	r0, [ip, #-1549]	; 0xfffff9f3
    6808:	05010635 	streq	r0, [r1, #-1589]	; 0xfffff9cb
    680c:	053e060d 	ldreq	r0, [lr, #-1549]!	; 0xfffff9f3
    6810:	3f057715 	svccc	0x00057715
    6814:	2e200106 	sufcss	f0, f0, f6
    6818:	0615052e 	ldreq	r0, [r5], -lr, lsr #10
    681c:	06140521 	ldreq	r0, [r4], -r1, lsr #10
    6820:	05016803 	streq	r6, [r1, #-2051]	; 0xfffff7fd
    6824:	c0030630 	andgt	r0, r3, r0, lsr r6
    6828:	0d052000 	stceq	0, cr2, [r5, #-0]
    682c:	060f0516 			; <UNDEFINED> instruction: 0x060f0516
    6830:	06290501 	strteq	r0, [r9], -r1, lsl #10
    6834:	052e1e03 	streq	r1, [lr, #-3587]!	; 0xfffff1fd
    6838:	32051509 	andcc	r1, r5, #37748736	; 0x2400000
    683c:	14090530 	strne	r0, [r9], #-1328	; 0xfffffad0
    6840:	13060505 	movwne	r0, #25861	; 0x6505
    6844:	03061505 	movweq	r1, #25861	; 0x6505
    6848:	053c7fb1 	ldreq	r7, [ip, #-4017]!	; 0xfffff04f
    684c:	2001062d 	andcs	r0, r1, sp, lsr #12
    6850:	2042052e 	subcs	r0, r2, lr, lsr #10
    6854:	2f061505 	svccs	0x00061505
    6858:	03061405 	movweq	r1, #25605	; 0x6405
    685c:	15050164 	strne	r0, [r5, #-356]	; 0xfffffe9c
    6860:	06201c03 	strteq	r1, [r0], -r3, lsl #24
    6864:	063f0523 	ldrteq	r0, [pc], -r3, lsr #10
    6868:	052e2001 	streq	r2, [lr, #-1]!
    686c:	05210615 	streq	r0, [r1, #-1557]!	; 0xfffff9eb
    6870:	60030614 	andvs	r0, r3, r4, lsl r6
    6874:	03150501 	tsteq	r5, #4194304	; 0x400000
    6878:	24062020 	strcs	r2, [r6], #-32	; 0xffffffe0
    687c:	01061705 	tsteq	r6, r5, lsl #14
    6880:	30061905 	andcc	r1, r6, r5, lsl #18
    6884:	01064305 	tsteq	r6, r5, lsl #6
    6888:	14052e20 	strne	r2, [r5], #-3616	; 0xfffff1e0
    688c:	05205a03 	streq	r5, [r0, #-2563]!	; 0xfffff5fd
    6890:	2e14030d 	cdpcs	3, 1, cr0, cr4, cr13, {0}
    6894:	03210520 			; <UNDEFINED> instruction: 0x03210520
    6898:	05202017 	streq	r2, [r0, #-23]!	; 0xffffffe9
    689c:	1b030611 	blne	c80e8 <__HEAP_SIZE+0xc70e8>
    68a0:	3c200120 	stfccs	f0, [r0], #-128	; 0xffffff80
    68a4:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    68a8:	02004a03 	andeq	r4, r0, #12288	; 0x3000
    68ac:	002e0304 	eoreq	r0, lr, r4, lsl #6
    68b0:	3c030402 	cfstrscc	mvf0, [r3], {2}
    68b4:	03040200 	movweq	r0, #16896	; 0x4200
    68b8:	04020013 	streq	r0, [r2], #-19	; 0xffffffed
    68bc:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    68c0:	00010304 	andeq	r0, r1, r4, lsl #6
    68c4:	01030402 	tsteq	r3, r2, lsl #8
    68c8:	03040200 	movweq	r0, #16896	; 0x4200
    68cc:	02002006 	andeq	r2, r0, #6
    68d0:	4a060104 	bmi	186ce8 <__RAM_SIZE+0x86ce8>
    68d4:	03040200 	movweq	r0, #16896	; 0x4200
    68d8:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    68dc:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    68e0:	00010304 	andeq	r0, r1, r4, lsl #6
    68e4:	66030402 	strvs	r0, [r3], -r2, lsl #8
    68e8:	03040200 	movweq	r0, #16896	; 0x4200
    68ec:	04020001 	streq	r0, [r2], #-1
    68f0:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    68f4:	00200304 	eoreq	r0, r0, r4, lsl #6
    68f8:	06030402 	streq	r0, [r3], -r2, lsl #8
    68fc:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    6900:	00200603 	eoreq	r0, r0, r3, lsl #12
    6904:	20030402 	andcs	r0, r3, r2, lsl #8
    6908:	03040200 	movweq	r0, #16896	; 0x4200
    690c:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    6910:	00200603 	eoreq	r0, r0, r3, lsl #12
    6914:	06030402 	streq	r0, [r3], -r2, lsl #8
    6918:	04020058 	streq	r0, [r2], #-88	; 0xffffffa8
    691c:	02007403 	andeq	r7, r0, #50331648	; 0x3000000
    6920:	00010304 	andeq	r0, r1, r4, lsl #6
    6924:	01030402 	tsteq	r3, r2, lsl #8
    6928:	02005e05 	andeq	r5, r0, #5, 28	; 0x50
    692c:	05150304 	ldreq	r0, [r5, #-772]	; 0xfffffcfc
    6930:	04020015 	streq	r0, [r2], #-21	; 0xffffffeb
    6934:	010e0303 	tsteq	lr, r3, lsl #6
    6938:	02001105 	andeq	r1, r0, #1073741825	; 0x40000001
    693c:	00340304 	eorseq	r0, r4, r4, lsl #6
    6940:	01030402 	tsteq	r3, r2, lsl #8
    6944:	01040200 	mrseq	r0, R12_usr
    6948:	04020066 	streq	r0, [r2], #-102	; 0xffffff9a
    694c:	3c680301 	stclcc	3, cr0, [r8], #-4
    6950:	01000a02 	tsteq	r0, r2, lsl #20
    6954:	00050501 	andeq	r0, r5, r1, lsl #10
    6958:	00000205 	andeq	r0, r0, r5, lsl #4
    695c:	95030000 	strls	r0, [r3, #-0]
    6960:	0106013e 	tsteq	r6, lr, lsr r1
    6964:	83060905 	movwhi	r0, #26885	; 0x6905
    6968:	05131313 	ldreq	r1, [r3, #-787]	; 0xfffffced
    696c:	0514019a 	ldreq	r0, [r4, #-410]	; 0xfffffe66
    6970:	50051426 	andpl	r1, r5, r6, lsr #8
    6974:	03330513 	teqeq	r3, #79691776	; 0x4c00000
    6978:	09050112 	stmdbeq	r5, {r1, r4, r8}
    697c:	32051714 	andcc	r1, r5, #20, 14	; 0x500000
    6980:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    6984:	0f053006 	svceq	0x00053006
    6988:	11050106 	tstne	r5, r6, lsl #2
    698c:	47053e06 	strmi	r3, [r5, -r6, lsl #28]
    6990:	2f050106 	svccs	0x00050106
    6994:	060d0558 			; <UNDEFINED> instruction: 0x060d0558
    6998:	06230531 			; <UNDEFINED> instruction: 0x06230531
    699c:	060d0501 	streq	r0, [sp], -r1, lsl #10
    69a0:	06350559 			; <UNDEFINED> instruction: 0x06350559
    69a4:	060d0501 	streq	r0, [sp], -r1, lsl #10
    69a8:	7715053e 			; <UNDEFINED> instruction: 0x7715053e
    69ac:	01063f05 	tsteq	r6, r5, lsl #30
    69b0:	052e2e20 	streq	r2, [lr, #-3616]!	; 0xfffff1e0
    69b4:	05210615 	streq	r0, [r1, #-1557]!	; 0xfffff9eb
    69b8:	53030614 	movwpl	r0, #13844	; 0x3614
    69bc:	06390501 	ldrteq	r0, [r9], -r1, lsl #10
    69c0:	2000d403 	andcs	sp, r0, r3, lsl #8
    69c4:	05160d05 	ldreq	r0, [r6, #-3333]	; 0xfffff2fb
    69c8:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    69cc:	23030631 	movwcs	r0, #13873	; 0x3631
    69d0:	0309053c 	movweq	r0, #38204	; 0x953c
    69d4:	39050116 	stmdbcc	r5, {r1, r2, r4, r8}
    69d8:	14090530 	strne	r0, [r9], #-1328	; 0xfffffad0
    69dc:	13060505 	movwne	r0, #25861	; 0x6505
    69e0:	03061505 	movweq	r1, #25861	; 0x6505
    69e4:	053c7f9a 	ldreq	r7, [ip, #-3994]!	; 0xfffff066
    69e8:	2001062d 	andcs	r0, r1, sp, lsr #12
    69ec:	2042052e 	subcs	r0, r2, lr, lsr #10
    69f0:	2f061505 	svccs	0x00061505
    69f4:	03061405 	movweq	r1, #25605	; 0x6405
    69f8:	1505014f 	strne	r0, [r5, #-335]	; 0xfffffeb1
    69fc:	06203103 	strteq	r3, [r0], -r3, lsl #2
    6a00:	063f0523 	ldrteq	r0, [pc], -r3, lsr #10
    6a04:	052e2001 	streq	r2, [lr, #-1]!
    6a08:	05210615 	streq	r0, [r1, #-1557]!	; 0xfffff9eb
    6a0c:	4b030614 	blmi	c8264 <__HEAP_SIZE+0xc7264>
    6a10:	03150501 	tsteq	r5, #4194304	; 0x400000
    6a14:	24062035 	strcs	r2, [r6], #-53	; 0xffffffcb
    6a18:	01061705 	tsteq	r6, r5, lsl #14
    6a1c:	3e061905 	vmlacc.f16	s2, s12, s10	; <UNPREDICTABLE>
    6a20:	01064305 	tsteq	r6, r5, lsl #6
    6a24:	14052e20 	strne	r2, [r5], #-3616	; 0xfffff1e0
    6a28:	05204503 	streq	r4, [r0, #-1283]!	; 0xfffffafd
    6a2c:	2e29030d 	cdpcs	3, 2, cr0, cr9, cr13, {0}
    6a30:	03210520 			; <UNDEFINED> instruction: 0x03210520
    6a34:	05202017 	streq	r2, [r0, #-23]!	; 0xffffffe9
    6a38:	1b03065e 	blne	c83b8 <__HEAP_SIZE+0xc73b8>
    6a3c:	14110520 	ldrne	r0, [r1], #-1312	; 0xfffffae0
    6a40:	01062a05 	tsteq	r6, r5, lsl #20
    6a44:	052e1305 	streq	r1, [lr, #-773]!	; 0xfffffcfb
    6a48:	01300615 	teqeq	r0, r5, lsl r6
    6a4c:	003c3c20 	eorseq	r3, ip, r0, lsr #24
    6a50:	4a030402 	bmi	c7a60 <__HEAP_SIZE+0xc6a60>
    6a54:	03040200 	movweq	r0, #16896	; 0x4200
    6a58:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    6a5c:	02003c03 	andeq	r3, r0, #768	; 0x300
    6a60:	00130304 	andseq	r0, r3, r4, lsl #6
    6a64:	01030402 	tsteq	r3, r2, lsl #8
    6a68:	03040200 	movweq	r0, #16896	; 0x4200
    6a6c:	04020001 	streq	r0, [r2], #-1
    6a70:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    6a74:	20060304 	andcs	r0, r6, r4, lsl #6
    6a78:	01040200 	mrseq	r0, R12_usr
    6a7c:	02004a06 	andeq	r4, r0, #24576	; 0x6000
    6a80:	002e0304 	eoreq	r0, lr, r4, lsl #6
    6a84:	01030402 	tsteq	r3, r2, lsl #8
    6a88:	03040200 	movweq	r0, #16896	; 0x4200
    6a8c:	04020001 	streq	r0, [r2], #-1
    6a90:	02006603 	andeq	r6, r0, #3145728	; 0x300000
    6a94:	00010304 	andeq	r0, r1, r4, lsl #6
    6a98:	01030402 	tsteq	r3, r2, lsl #8
    6a9c:	03040200 	movweq	r0, #16896	; 0x4200
    6aa0:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    6aa4:	02002e03 	andeq	r2, r0, #3, 28	; 0x30
    6aa8:	00200304 	eoreq	r0, r0, r4, lsl #6
    6aac:	20030402 	andcs	r0, r3, r2, lsl #8
    6ab0:	03040200 	movweq	r0, #16896	; 0x4200
    6ab4:	02002006 	andeq	r2, r0, #6
    6ab8:	58060304 	stmdapl	r6, {r2, r8, r9}
    6abc:	03040200 	movweq	r0, #16896	; 0x4200
    6ac0:	04020074 	streq	r0, [r2], #-116	; 0xffffff8c
    6ac4:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    6ac8:	00010304 	andeq	r0, r1, r4, lsl #6
    6acc:	18010402 	stmdane	r1, {r1, sl}
    6ad0:	01040200 	mrseq	r0, R12_usr
    6ad4:	001e0517 	andseq	r0, lr, r7, lsl r5
    6ad8:	06010402 	streq	r0, [r1], -r2, lsl #8
    6adc:	00390501 	eorseq	r0, r9, r1, lsl #10
    6ae0:	20010402 	andcs	r0, r1, r2, lsl #8
    6ae4:	02001705 	andeq	r1, r0, #1310720	; 0x140000
    6ae8:	053c0104 	ldreq	r0, [ip, #-260]!	; 0xfffffefc
    6aec:	05320619 	ldreq	r0, [r2, #-1561]!	; 0xfffff9e7
    6af0:	0501061b 	streq	r0, [r1, #-1563]	; 0xfffff9e5
    6af4:	0530061d 	ldreq	r0, [r0, #-1565]!	; 0xfffff9e3
    6af8:	05010638 	streq	r0, [r1, #-1592]	; 0xfffff9c8
    6afc:	05420619 	strbeq	r0, [r2, #-1561]	; 0xfffff9e7
    6b00:	0501062d 	streq	r0, [r1, #-1581]	; 0xfffff9d3
    6b04:	04020015 	streq	r0, [r2], #-21	; 0xffffffeb
    6b08:	68030601 	stmdavs	r3, {r0, r9, sl}
    6b0c:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    6b10:	063c0601 	ldrteq	r0, [ip], -r1, lsl #12
    6b14:	012e0119 			; <UNDEFINED> instruction: 0x012e0119
    6b18:	3c2e2001 	stccc	0, cr2, [lr], #-4
    6b1c:	20062020 	andcs	r2, r6, r0, lsr #32
    6b20:	01000f02 	tsteq	r0, r2, lsl #30
    6b24:	00050501 	andeq	r0, r5, r1, lsl #10
    6b28:	00000205 	andeq	r0, r0, r5, lsl #4
    6b2c:	b8030000 	stmdalt	r3, {}	; <UNPREDICTABLE>
    6b30:	0106013f 	tsteq	r6, pc, lsr r1
    6b34:	4b060905 	blmi	188f50 <__RAM_SIZE+0x88f50>
    6b38:	6e051313 	mcrvs	3, 0, r1, cr5, cr3, {0}
    6b3c:	14260514 	strtne	r0, [r6], #-1300	; 0xfffffaec
    6b40:	05135005 	ldreq	r5, [r3, #-5]
    6b44:	01120333 	tsteq	r2, r3, lsr r3
    6b48:	17140905 	ldrne	r0, [r4, -r5, lsl #18]
    6b4c:	01063205 	tsteq	r6, r5, lsl #4
    6b50:	30060d05 	andcc	r0, r6, r5, lsl #26
    6b54:	01062305 	tsteq	r6, r5, lsl #6
    6b58:	4b060d05 	blmi	189f74 <__RAM_SIZE+0x89f74>
    6b5c:	01063505 	tsteq	r6, r5, lsl #10
    6b60:	40060d05 	andmi	r0, r6, r5, lsl #26
    6b64:	01062505 	tsteq	r6, r5, lsl #10
    6b68:	3a052e20 	bcc	1523f0 <__RAM_SIZE+0x523f0>
    6b6c:	063e0520 	ldrteq	r0, [lr], -r0, lsr #10
    6b70:	160d0530 			; <UNDEFINED> instruction: 0x160d0530
    6b74:	01060f05 	tsteq	r6, r5, lsl #30
    6b78:	03063105 	movweq	r3, #24837	; 0x6105
    6b7c:	09052e23 	stmdbeq	r5, {r0, r1, r5, r9, sl, fp, sp}
    6b80:	05011603 	streq	r1, [r1, #-1539]	; 0xfffff9fd
    6b84:	05053034 	streq	r3, [r5, #-52]	; 0xffffffcc
    6b88:	5e051306 	cdppl	3, 0, cr1, cr5, cr6, {0}
    6b8c:	20470306 	subcs	r0, r7, r6, lsl #6
    6b90:	05141105 	ldreq	r1, [r4, #-261]	; 0xfffffefb
    6b94:	2001062a 	andcs	r0, r1, sl, lsr #12
    6b98:	05201305 	streq	r1, [r0, #-773]!	; 0xfffffcfb
    6b9c:	01300615 	teqeq	r0, r5, lsl r6
    6ba0:	003c3c20 	eorseq	r3, ip, r0, lsr #24
    6ba4:	4a030402 	bmi	c7bb4 <__HEAP_SIZE+0xc6bb4>
    6ba8:	03040200 	movweq	r0, #16896	; 0x4200
    6bac:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    6bb0:	02003c03 	andeq	r3, r0, #768	; 0x300
    6bb4:	00130304 	andseq	r0, r3, r4, lsl #6
    6bb8:	01030402 	tsteq	r3, r2, lsl #8
    6bbc:	03040200 	movweq	r0, #16896	; 0x4200
    6bc0:	04020001 	streq	r0, [r2], #-1
    6bc4:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    6bc8:	20060304 	andcs	r0, r6, r4, lsl #6
    6bcc:	01040200 	mrseq	r0, R12_usr
    6bd0:	02004a06 	andeq	r4, r0, #24576	; 0x6000
    6bd4:	002e0304 	eoreq	r0, lr, r4, lsl #6
    6bd8:	01030402 	tsteq	r3, r2, lsl #8
    6bdc:	03040200 	movweq	r0, #16896	; 0x4200
    6be0:	04020001 	streq	r0, [r2], #-1
    6be4:	02006603 	andeq	r6, r0, #3145728	; 0x300000
    6be8:	00010304 	andeq	r0, r1, r4, lsl #6
    6bec:	01030402 	tsteq	r3, r2, lsl #8
    6bf0:	03040200 	movweq	r0, #16896	; 0x4200
    6bf4:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    6bf8:	02002e03 	andeq	r2, r0, #3, 28	; 0x30
    6bfc:	00200304 	eoreq	r0, r0, r4, lsl #6
    6c00:	20030402 	andcs	r0, r3, r2, lsl #8
    6c04:	03040200 	movweq	r0, #16896	; 0x4200
    6c08:	02002006 	andeq	r2, r0, #6
    6c0c:	58060304 	stmdapl	r6, {r2, r8, r9}
    6c10:	03040200 	movweq	r0, #16896	; 0x4200
    6c14:	04020074 	streq	r0, [r2], #-116	; 0xffffff8c
    6c18:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    6c1c:	00010304 	andeq	r0, r1, r4, lsl #6
    6c20:	18010402 	stmdane	r1, {r1, sl}
    6c24:	01040200 	mrseq	r0, R12_usr
    6c28:	001e0517 	andseq	r0, lr, r7, lsl r5
    6c2c:	06010402 	streq	r0, [r1], -r2, lsl #8
    6c30:	00390501 	eorseq	r0, r9, r1, lsl #10
    6c34:	20010402 	andcs	r0, r1, r2, lsl #8
    6c38:	02001705 	andeq	r1, r0, #1310720	; 0x140000
    6c3c:	053c0104 	ldreq	r0, [ip, #-260]!	; 0xfffffefc
    6c40:	05320619 	ldreq	r0, [r2, #-1561]!	; 0xfffff9e7
    6c44:	0501061b 	streq	r0, [r1, #-1563]	; 0xfffff9e5
    6c48:	0522061d 	streq	r0, [r2, #-1565]!	; 0xfffff9e3
    6c4c:	05010638 	streq	r0, [r1, #-1592]	; 0xfffff9c8
    6c50:	05340619 	ldreq	r0, [r4, #-1561]!	; 0xfffff9e7
    6c54:	0501062d 	streq	r0, [r1, #-1581]	; 0xfffff9d3
    6c58:	04020015 	streq	r0, [r2], #-21	; 0xffffffeb
    6c5c:	68030601 	stmdavs	r3, {r0, r9, sl}
    6c60:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    6c64:	063c0601 	ldrteq	r0, [ip], -r1, lsl #12
    6c68:	012e0119 			; <UNDEFINED> instruction: 0x012e0119
    6c6c:	3c2e2001 	stccc	0, cr2, [lr], #-4
    6c70:	20062020 	andcs	r2, r6, r0, lsr #32
    6c74:	01001002 	tsteq	r0, r2
    6c78:	00050501 	andeq	r0, r5, r1, lsl #10
    6c7c:	00000205 	andeq	r0, r0, r5, lsl #4
    6c80:	ab030000 	blge	c6c88 <__HEAP_SIZE+0xc5c88>
    6c84:	060100c0 	streq	r0, [r1], -r0, asr #1
    6c88:	06090501 	streq	r0, [r9], -r1, lsl #10
    6c8c:	4905132f 	stmdbmi	r5, {r0, r1, r2, r3, r5, r8, r9, ip}
    6c90:	144f0514 	strbne	r0, [pc], #-1300	; 6c98 <__HEAP_SIZE+0x5c98>
    6c94:	05160905 	ldreq	r0, [r6, #-2309]	; 0xfffff6fb
    6c98:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    6c9c:	04020009 	streq	r0, [r2], #-9
    6ca0:	05300604 	ldreq	r0, [r0, #-1540]!	; 0xfffff9fc
    6ca4:	0402000d 	streq	r0, [r2], #-13
    6ca8:	25053004 	strcs	r3, [r5, #-4]
    6cac:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    6cb0:	0f050106 	svceq	0x00050106
    6cb4:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    6cb8:	3519054a 	ldrcc	r0, [r9, #-1354]	; 0xfffffab6
    6cbc:	23060905 	movwcs	r0, #26885	; 0x6905
    6cc0:	05303c05 	ldreq	r3, [r0, #-3077]!	; 0xfffff3fb
    6cc4:	05051409 	streq	r1, [r5, #-1033]	; 0xfffffbf7
    6cc8:	11051306 	tstne	r5, r6, lsl #6
    6ccc:	01040200 	mrseq	r0, R12_usr
    6cd0:	002e6d03 	eoreq	r6, lr, r3, lsl #26
    6cd4:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    6cd8:	38052606 	stmdacc	r5, {r1, r2, r9, sl, sp}
    6cdc:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    6ce0:	053d0611 	ldreq	r0, [sp, #-1553]!	; 0xfffff9ef
    6ce4:	02010619 	andeq	r0, r1, #26214400	; 0x1900000
    6ce8:	01010004 	tsteq	r1, r4
    6cec:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    6cf0:	00000002 	andeq	r0, r0, r2
    6cf4:	c0d20300 	sbcsgt	r0, r2, r0, lsl #6
    6cf8:	01060100 	mrseq	r0, (UNDEF: 22)
    6cfc:	3d060905 	vstrcc.16	s0, [r6, #-10]	; <UNPREDICTABLE>
    6d00:	14590513 	ldrbne	r0, [r9], #-1299	; 0xfffffaed
    6d04:	05144f05 	ldreq	r4, [r4, #-3845]	; 0xfffff0fb
    6d08:	11051609 	tstne	r5, r9, lsl #12
    6d0c:	09050106 	stmdbeq	r5, {r1, r2, r8}
    6d10:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    6d14:	0d053006 	stceq	0, cr3, [r5, #-24]	; 0xffffffe8
    6d18:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    6d1c:	00160532 	andseq	r0, r6, r2, lsr r5
    6d20:	06040402 	streq	r0, [r4], -r2, lsl #8
    6d24:	000d0501 	andeq	r0, sp, r1, lsl #10
    6d28:	06040402 	streq	r0, [r4], -r2, lsl #8
    6d2c:	00360559 	eorseq	r0, r6, r9, asr r5
    6d30:	06040402 	streq	r0, [r4], -r2, lsl #8
    6d34:	00090501 	andeq	r0, r9, r1, lsl #10
    6d38:	06040402 	streq	r0, [r4], -r2, lsl #8
    6d3c:	003e054c 	eorseq	r0, lr, ip, asr #10
    6d40:	30040402 	andcc	r0, r4, r2, lsl #8
    6d44:	02000905 	andeq	r0, r0, #81920	; 0x14000
    6d48:	05140404 	ldreq	r0, [r4, #-1028]	; 0xfffffbfc
    6d4c:	04020005 	streq	r0, [r2], #-5
    6d50:	05130604 	ldreq	r0, [r3, #-1540]	; 0xfffff9fc
    6d54:	04020011 	streq	r0, [r2], #-17	; 0xffffffef
    6d58:	2e720301 	cdpcs	3, 7, cr0, cr2, cr1, {0}
    6d5c:	01040200 	mrseq	r0, R12_usr
    6d60:	0004022e 	andeq	r0, r4, lr, lsr #4
    6d64:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    6d68:	8c020500 	cfstr32hi	mvfx0, [r2], {-0}
    6d6c:	0310002e 	tsteq	r0, #46	; 0x2e
    6d70:	0100c38a 	smlabbeq	r0, sl, r3, ip
    6d74:	13130905 	tstne	r3, #81920	; 0x14000
    6d78:	061f0514 			; <UNDEFINED> instruction: 0x061f0514
    6d7c:	06090501 	streq	r0, [r9], -r1, lsl #10
    6d80:	0621052f 	strteq	r0, [r1], -pc, lsr #10
    6d84:	06090501 	streq	r0, [r9], -r1, lsl #10
    6d88:	061f052f 	ldreq	r0, [pc], -pc, lsr #10
    6d8c:	2f050501 	svccs	0x00050501
    6d90:	01000602 	tsteq	r0, r2, lsl #12
    6d94:	00010501 	andeq	r0, r1, r1, lsl #10
    6d98:	2ea40205 	cdpcs	2, 10, cr0, cr4, cr5, {0}
    6d9c:	b7031000 	strlt	r1, [r3, -r0]
    6da0:	0505011b 	streq	r0, [r5, #-283]	; 0xfffffee5
    6da4:	1313132f 	tstne	r3, #-1140850688	; 0xbc000000
    6da8:	1d051413 	cfstrsne	mvf1, [r5, #-76]	; 0xffffffb4
    6dac:	31050106 	tstcc	r5, r6, lsl #2
    6db0:	01040200 	mrseq	r0, R12_usr
    6db4:	05052006 	streq	r2, [r5, #-6]
    6db8:	01040200 	mrseq	r0, R12_usr
    6dbc:	09050106 	stmdbeq	r5, {r1, r2, r8}
    6dc0:	3f053006 	svccc	0x00053006
    6dc4:	29050106 	stmdbcs	r5, {r1, r2, r8}
    6dc8:	0609052e 	streq	r0, [r9], -lr, lsr #10
    6dcc:	060b055d 			; <UNDEFINED> instruction: 0x060b055d
    6dd0:	00250501 	eoreq	r0, r5, r1, lsl #10
    6dd4:	06020402 	streq	r0, [r2], -r2, lsl #8
    6dd8:	006e0526 	rsbeq	r0, lr, r6, lsr #10
    6ddc:	03020402 	movweq	r0, #9218	; 0x2402
    6de0:	80050173 	andhi	r0, r5, r3, ror r1
    6de4:	04020001 	streq	r0, [r2], #-1
    6de8:	00010602 	andeq	r0, r1, r2, lsl #12
    6dec:	20020402 	andcs	r0, r2, r2, lsl #8
    6df0:	02001d05 	andeq	r1, r0, #320	; 0x140
    6df4:	05200104 	streq	r0, [r0, #-260]!	; 0xfffffefc
    6df8:	04020026 	streq	r0, [r2], #-38	; 0xffffffda
    6dfc:	12030601 	andne	r0, r3, #1048576	; 0x100000
    6e00:	00050520 	andeq	r0, r5, r0, lsr #10
    6e04:	06010402 	streq	r0, [r1], -r2, lsl #8
    6e08:	fb030601 	blx	c8616 <__HEAP_SIZE+0xc7616>
    6e0c:	01053c00 	tsteq	r5, r0, lsl #24
    6e10:	0d051306 	stceq	3, cr1, [r5, #-24]	; 0xffffffe8
    6e14:	7f880306 	svcvc	0x00880306
    6e18:	012f032e 			; <UNDEFINED> instruction: 0x012f032e
    6e1c:	01061c05 	tsteq	r6, r5, lsl #24
    6e20:	2f060d05 	svccs	0x00060d05
    6e24:	01061b05 	tsteq	r6, r5, lsl #22
    6e28:	21060d05 	tstcs	r6, r5, lsl #26
    6e2c:	05181105 	ldreq	r1, [r8, #-261]	; 0xfffffefb
    6e30:	580e030d 	stmdapl	lr, {r0, r2, r3, r8, r9}
    6e34:	01062b05 	tsteq	r6, r5, lsl #22
    6e38:	05ac2905 	streq	r2, [ip, #2309]!	; 0x905
    6e3c:	0544060d 	strbeq	r0, [r4, #-1549]	; 0xfffff9f3
    6e40:	2001060f 	andcs	r0, r1, pc, lsl #12
    6e44:	03060905 	movweq	r0, #26885	; 0x6905
    6e48:	29050116 	stmdbcs	r5, {r1, r2, r4, r8}
    6e4c:	0356051a 	cmpeq	r6, #109051904	; 0x6800000
    6e50:	05017f91 	streq	r7, [r1, #-3985]	; 0xfffff06f
    6e54:	2001065d 	andcs	r0, r1, sp, asr r6
    6e58:	03061105 	movweq	r1, #24837	; 0x6105
    6e5c:	062000d7 			; <UNDEFINED> instruction: 0x062000d7
    6e60:	06090501 	streq	r0, [r9], -r1, lsl #10
    6e64:	05011003 	streq	r1, [r1, #-3]
    6e68:	70030619 	andvc	r0, r3, r9, lsl r6
    6e6c:	00080201 	andeq	r0, r8, r1, lsl #4
    6e70:	01050101 	tsteq	r5, r1, lsl #2
    6e74:	10020500 	andne	r0, r2, r0, lsl #10
    6e78:	0310002f 	tsteq	r0, #47	; 0x2f
    6e7c:	05011cd1 	streq	r1, [r1, #-3281]	; 0xfffff32f
    6e80:	25052105 	strcs	r2, [r5, #-261]	; 0xfffffefb
    6e84:	03050514 	movweq	r0, #21780	; 0x5514
    6e88:	0f05010a 	svceq	0x0005010a
    6e8c:	09050106 	stmdbeq	r5, {r1, r2, r8}
    6e90:	0b053206 	bleq	1536b0 <__RAM_SIZE+0x536b0>
    6e94:	25050106 	strcs	r0, [r5, #-262]	; 0xfffffefa
    6e98:	05053406 	streq	r3, [r5, #-1030]	; 0xfffffbfa
    6e9c:	06070517 			; <UNDEFINED> instruction: 0x06070517
    6ea0:	06490501 	strbeq	r0, [r9], -r1, lsl #10
    6ea4:	052e3b03 	streq	r3, [lr, #-2819]!	; 0xfffff4fd
    6ea8:	05161705 	ldreq	r1, [r6, #-1797]	; 0xfffff8fb
    6eac:	01053026 	tsteq	r5, r6, lsr #32
    6eb0:	0d051306 	stceq	3, cr1, [r5, #-24]	; 0xffffffe8
    6eb4:	7fb00306 	svcvc	0x00b00306
    6eb8:	06170520 	ldreq	r0, [r7], -r0, lsr #10
    6ebc:	09052e01 	stmdbeq	r5, {r0, r9, sl, fp, sp}
    6ec0:	20190306 	andscs	r0, r9, r6, lsl #6
    6ec4:	052e0a03 	streq	r0, [lr, #-2563]!	; 0xfffff5fd
    6ec8:	0501061e 	streq	r0, [r1, #-1566]	; 0xfffff9e2
    6ecc:	054b0609 	strbeq	r0, [fp, #-1545]	; 0xfffff9f7
    6ed0:	0501061b 	streq	r0, [r1, #-1563]	; 0xfffff9e5
    6ed4:	053d0609 	ldreq	r0, [sp, #-1545]!	; 0xfffff9f7
    6ed8:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
    6edc:	05440631 	strbeq	r0, [r4, #-1585]	; 0xfffff9cf
    6ee0:	09051420 	stmdbeq	r5, {r5, sl, ip}
    6ee4:	06120519 			; <UNDEFINED> instruction: 0x06120519
    6ee8:	000b0201 	andeq	r0, fp, r1, lsl #4
    6eec:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    6ef0:	58020500 	stmdapl	r2, {r8, sl}
    6ef4:	0310002f 	tsteq	r0, #47	; 0x2f
    6ef8:	0100c3b3 			; <UNDEFINED> instruction: 0x0100c3b3
    6efc:	13130905 	tstne	r3, #81920	; 0x14000
    6f00:	06200514 			; <UNDEFINED> instruction: 0x06200514
    6f04:	06090501 	streq	r0, [r9], -r1, lsl #10
    6f08:	0622052f 	strteq	r0, [r2], -pc, lsr #10
    6f0c:	06090501 	streq	r0, [r9], -r1, lsl #10
    6f10:	0620052f 	strteq	r0, [r0], -pc, lsr #10
    6f14:	2f050501 	svccs	0x00050501
    6f18:	01000602 	tsteq	r0, r2, lsl #12
    6f1c:	00010501 	andeq	r0, r1, r1, lsl #10
    6f20:	00000205 	andeq	r0, r0, r5, lsl #4
    6f24:	c5030000 	strgt	r0, [r3, #-0]
    6f28:	050100c3 	streq	r0, [r1, #-195]	; 0xffffff3d
    6f2c:	09051305 	stmdbeq	r5, {r0, r2, r8, r9, ip}
    6f30:	06160517 			; <UNDEFINED> instruction: 0x06160517
    6f34:	06090501 	streq	r0, [r9], -r1, lsl #10
    6f38:	06260542 	strteq	r0, [r6], -r2, asr #10
    6f3c:	06050501 	streq	r0, [r5], -r1, lsl #10
    6f40:	052e0b03 	streq	r0, [lr, #-2819]!	; 0xfffff4fd
    6f44:	0501061c 	streq	r0, [r1, #-1564]	; 0xfffff9e4
    6f48:	052f0605 	streq	r0, [pc, #-1541]!	; 694b <__HEAP_SIZE+0x594b>
    6f4c:	05010610 	streq	r0, [r1, #-1552]	; 0xfffff9f0
    6f50:	052f0605 	streq	r0, [pc, #-1541]!	; 6953 <__HEAP_SIZE+0x5953>
    6f54:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    6f58:	052f0605 	streq	r0, [pc, #-1541]!	; 695b <__HEAP_SIZE+0x595b>
    6f5c:	05010617 	streq	r0, [r1, #-1559]	; 0xfffff9e9
    6f60:	052f0605 	streq	r0, [pc, #-1541]!	; 6963 <__HEAP_SIZE+0x5963>
    6f64:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
    6f68:	05300605 	ldreq	r0, [r0, #-1541]!	; 0xfffff9fb
    6f6c:	04020017 	streq	r0, [r2], #-23	; 0xffffffe9
    6f70:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    6f74:	01040200 	mrseq	r0, R12_usr
    6f78:	33060106 	movwcc	r0, #24838	; 0x6106
    6f7c:	01061505 	tsteq	r6, r5, lsl #10
    6f80:	06050520 	streq	r0, [r5], -r0, lsr #10
    6f84:	0612052f 	ldreq	r0, [r2], -pc, lsr #10
    6f88:	06050501 	streq	r0, [r5], -r1, lsl #10
    6f8c:	061a052f 	ldreq	r0, [sl], -pc, lsr #10
    6f90:	06050501 	streq	r0, [r5], -r1, lsl #10
    6f94:	061a0530 			; <UNDEFINED> instruction: 0x061a0530
    6f98:	03010501 	movweq	r0, #5377	; 0x1501
    6f9c:	09052e0b 	stmdbeq	r5, {r0, r1, r3, r9, sl, fp, sp}
    6fa0:	03040200 	movweq	r0, #16896	; 0x4200
    6fa4:	206e0306 	rsbcs	r0, lr, r6, lsl #6
    6fa8:	02002305 	andeq	r2, r0, #335544320	; 0x14000000
    6fac:	01060304 	tsteq	r6, r4, lsl #6
    6fb0:	02003805 	andeq	r3, r0, #327680	; 0x50000
    6fb4:	48060304 	stmdami	r6, {r2, r8, r9}
    6fb8:	02003f05 	andeq	r3, r0, #5, 30
    6fbc:	01060304 	tsteq	r6, r4, lsl #6
    6fc0:	03040200 	movweq	r0, #16896	; 0x4200
    6fc4:	001a0220 	andseq	r0, sl, r0, lsr #4
    6fc8:	0bd40101 	bleq	ff5073d4 <__StackTop+0xc74073d4>
    6fcc:	00030000 	andeq	r0, r3, r0
    6fd0:	00000248 	andeq	r0, r0, r8, asr #4
    6fd4:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
    6fd8:	0101000d 	tsteq	r1, sp
    6fdc:	00000101 	andeq	r0, r0, r1, lsl #2
    6fe0:	00000100 	andeq	r0, r0, r0, lsl #2
    6fe4:	2f2e2e01 	svccs	0x002e2e01
    6fe8:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    6fec:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    6ff0:	6f747262 	svcvs	0x00747262
    6ff4:	72462f73 	subvc	r2, r6, #460	; 0x1cc
    6ff8:	54526565 	ldrbpl	r6, [r2], #-1381	; 0xfffffa9b
    6ffc:	6300534f 	movwvs	r5, #847	; 0x34f
    7000:	73755c3a 	cmnvc	r5, #14848	; 0x3a00
    7004:	5c737265 	lfmpl	f7, 2, [r3], #-404	; 0xfffffe6c
    7008:	6f646978 	svcvs	0x00646978
    700c:	72705c6e 	rsbsvc	r5, r0, #28160	; 0x6e00
    7010:	6172676f 	cmnvs	r2, pc, ror #14
    7014:	72615c6d 	rsbvc	r5, r1, #27904	; 0x6d00
    7018:	63675f6d 	cmnvs	r7, #436	; 0x1b4
    701c:	63675c63 	cmnvs	r7, #25344	; 0x6300
    7020:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
    7024:	6f6e2d6d 	svcvs	0x006e2d6d
    7028:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    702c:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
    7030:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
    7034:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
    7038:	30312e31 	eorscc	r2, r1, r1, lsr lr
    703c:	62696c5c 	rsbvs	r6, r9, #92, 24	; 0x5c00
    7040:	6363675c 	cmnvs	r3, #92, 14	; 0x1700000
    7044:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    7048:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    704c:	61652d65 	cmnvs	r5, r5, ror #26
    7050:	315c6962 	cmpcc	ip, r2, ror #18
    7054:	2e332e30 	mrccs	14, 1, r2, cr3, cr0, {1}
    7058:	6e695c31 	mcrvs	12, 3, r5, cr9, cr1, {1}
    705c:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    7060:	3a630065 	bcc	18c71fc <__RAM_SIZE+0x17c71fc>
    7064:	6573755c 	ldrbvs	r7, [r3, #-1372]!	; 0xfffffaa4
    7068:	785c7372 	ldmdavc	ip, {r1, r4, r5, r6, r8, r9, ip, sp, lr}^
    706c:	6e6f6469 	cdpvs	4, 6, cr6, cr15, cr9, {3}
    7070:	6f72705c 	svcvs	0x0072705c
    7074:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
    7078:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    707c:	6363675f 	cmnvs	r3, #24903680	; 0x17c0000
    7080:	6363675c 	cmnvs	r3, #92, 14	; 0x1700000
    7084:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
    7088:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    708c:	61652d65 	cmnvs	r5, r5, ror #26
    7090:	312d6962 			; <UNDEFINED> instruction: 0x312d6962
    7094:	2d332e30 	ldccs	14, cr2, [r3, #-192]!	; 0xffffff40
    7098:	31323032 	teqcc	r2, r2, lsr r0
    709c:	5c30312e 	ldfpls	f3, [r0], #-184	; 0xffffff48
    70a0:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    70a4:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    70a8:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    70ac:	6e695c69 	cdpvs	12, 6, cr5, cr9, cr9, {3}
    70b0:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    70b4:	616d5c65 	cmnvs	sp, r5, ror #24
    70b8:	6e696863 	cdpvs	8, 6, cr6, cr9, cr3, {3}
    70bc:	3a630065 	bcc	18c7258 <__RAM_SIZE+0x17c7258>
    70c0:	6573755c 	ldrbvs	r7, [r3, #-1372]!	; 0xfffffaa4
    70c4:	785c7372 	ldmdavc	ip, {r1, r4, r5, r6, r8, r9, ip, sp, lr}^
    70c8:	6e6f6469 	cdpvs	4, 6, cr6, cr15, cr9, {3}
    70cc:	6f72705c 	svcvs	0x0072705c
    70d0:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
    70d4:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    70d8:	6363675f 	cmnvs	r3, #24903680	; 0x17c0000
    70dc:	6363675c 	cmnvs	r3, #92, 14	; 0x1700000
    70e0:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
    70e4:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    70e8:	61652d65 	cmnvs	r5, r5, ror #26
    70ec:	312d6962 			; <UNDEFINED> instruction: 0x312d6962
    70f0:	2d332e30 	ldccs	14, cr2, [r3, #-192]!	; 0xffffff40
    70f4:	31323032 	teqcc	r2, r2, lsr r0
    70f8:	5c30312e 	ldfpls	f3, [r0], #-184	; 0xffffff48
    70fc:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    7100:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    7104:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    7108:	6e695c69 	cdpvs	12, 6, cr5, cr9, cr9, {3}
    710c:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    7110:	79735c65 	ldmdbvc	r3!, {r0, r2, r5, r6, sl, fp, ip, lr}^
    7114:	2e2e0073 	mcrcs	0, 1, r0, cr14, cr3, {3}
    7118:	2f2e2e2f 	svccs	0x002e2e2f
    711c:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 706c <__HEAP_SIZE+0x606c>
    7120:	74726269 	ldrbtvc	r6, [r2], #-617	; 0xfffffd97
    7124:	462f736f 	strtmi	r7, [pc], -pc, ror #6
    7128:	52656572 	rsbpl	r6, r5, #478150656	; 0x1c800000
    712c:	2f534f54 	svccs	0x00534f54
    7130:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    7134:	00656475 	rsbeq	r6, r5, r5, ror r4
    7138:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    713c:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    7140:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    7144:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    7148:	6572462f 	ldrbvs	r4, [r2, #-1583]!	; 0xfffff9d1
    714c:	4f545265 	svcmi	0x00545265
    7150:	6f702f53 	svcvs	0x00702f53
    7154:	62617472 	rsbvs	r7, r1, #1912602624	; 0x72000000
    7158:	472f656c 	strmi	r6, [pc, -ip, ror #10]!
    715c:	412f4343 			; <UNDEFINED> instruction: 0x412f4343
    7160:	435f4d52 	cmpmi	pc, #5248	; 0x1480
    7164:	5f33334d 	svcpl	0x0033334d
    7168:	2f5a544e 	svccs	0x005a544e
    716c:	5f6e6f6e 	svcpl	0x006e6f6e
    7170:	75636573 	strbvc	r6, [r3, #-1395]!	; 0xfffffa8d
    7174:	00006572 	andeq	r6, r0, r2, ror r5
    7178:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
    717c:	632e7372 			; <UNDEFINED> instruction: 0x632e7372
    7180:	00000100 	andeq	r0, r0, r0, lsl #2
    7184:	64647473 	strbtvs	r7, [r4], #-1139	; 0xfffffb8d
    7188:	682e6665 	stmdavs	lr!, {r0, r2, r5, r6, r9, sl, sp, lr}
    718c:	00000200 	andeq	r0, r0, r0, lsl #4
    7190:	6665645f 			; <UNDEFINED> instruction: 0x6665645f
    7194:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
    7198:	7079745f 	rsbsvc	r7, r9, pc, asr r4
    719c:	682e7365 	stmdavs	lr!, {r0, r2, r5, r6, r8, r9, ip, sp, lr}
    71a0:	00000300 	andeq	r0, r0, r0, lsl #6
    71a4:	6474735f 	ldrbtvs	r7, [r4], #-863	; 0xfffffca1
    71a8:	2e746e69 	cdpcs	14, 7, cr6, cr4, cr9, {3}
    71ac:	00040068 	andeq	r0, r4, r8, rrx
    71b0:	6f727000 	svcvs	0x00727000
    71b4:	6665646a 	strbtvs	r6, [r5], -sl, ror #8
    71b8:	00682e73 	rsbeq	r2, r8, r3, ror lr
    71bc:	70000005 	andvc	r0, r0, r5
    71c0:	6d74726f 	lfmvs	f7, 2, [r4, #-444]!	; 0xfffffe44
    71c4:	6f726361 	svcvs	0x00726361
    71c8:	6d6d6f63 	stclvs	15, cr6, [sp, #-396]!	; 0xfffffe74
    71cc:	682e6e6f 	stmdavs	lr!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}
    71d0:	00000600 	andeq	r0, r0, r0, lsl #12
    71d4:	65657246 	strbvs	r7, [r5, #-582]!	; 0xfffffdba
    71d8:	534f5452 	movtpl	r5, #62546	; 0xf452
    71dc:	0500682e 	streq	r6, [r0, #-2094]	; 0xfffff7d2
    71e0:	696c0000 	stmdbvs	ip!, {}^	; <UNPREDICTABLE>
    71e4:	682e7473 	stmdavs	lr!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}
    71e8:	00000500 	andeq	r0, r0, r0, lsl #10
    71ec:	6b736174 	blvs	1cdf7c4 <__RAM_SIZE+0x1bdf7c4>
    71f0:	0500682e 	streq	r6, [r0, #-2094]	; 0xfffff7d2
    71f4:	75710000 	ldrbvc	r0, [r1, #-0]!
    71f8:	2e657565 	cdpcs	5, 6, cr7, cr5, cr5, {3}
    71fc:	00050068 	andeq	r0, r5, r8, rrx
    7200:	6d697400 	cfstrdvs	mvd7, [r9, #-0]
    7204:	2e737265 	cdpcs	2, 7, cr7, cr3, cr5, {3}
    7208:	00050068 	andeq	r0, r5, r8, rrx
    720c:	726f7000 	rsbvc	r7, pc, #0
    7210:	6c626174 	stfvse	f6, [r2], #-464	; 0xfffffe30
    7214:	00682e65 	rsbeq	r2, r8, r5, ror #28
    7218:	00000005 	andeq	r0, r0, r5
    721c:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    7220:	002f7002 	eoreq	r7, pc, r2
    7224:	06cc0310 			; <UNDEFINED> instruction: 0x06cc0310
    7228:	13090501 	movwne	r0, #38145	; 0x9501
    722c:	05010903 	streq	r0, [r1, #-2307]	; 0xfffff6fd
    7230:	0501061b 	streq	r0, [r1, #-1563]	; 0xfffff9e5
    7234:	04020019 	streq	r0, [r2], #-25	; 0xffffffe7
    7238:	09055804 	stmdbeq	r5, {r2, fp, ip, lr}
    723c:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    7240:	0b052206 	bleq	14fa60 <__RAM_SIZE+0x4fa60>
    7244:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    7248:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    724c:	1f052206 	svcne	0x00052206
    7250:	1d050106 	stfnes	f0, [r5, #-24]	; 0xffffffe8
    7254:	1b052020 	blne	14f2dc <__RAM_SIZE+0x4f2dc>
    7258:	031d051c 	tsteq	sp, #28, 10	; 0x7000000
    725c:	09052e09 	stmdbeq	r5, {r0, r3, r9, sl, fp, sp}
    7260:	05052306 	streq	r2, [r5, #-774]	; 0xfffffcfa
    7264:	03021306 	movweq	r1, #8966	; 0x2306
    7268:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    726c:	02050005 	andeq	r0, r5, #5
    7270:	10002f90 	mulne	r0, r0, pc	; <UNPREDICTABLE>
    7274:	01078103 	tsteq	r7, r3, lsl #2
    7278:	09050106 	stmdbeq	r5, {r1, r2, r8}
    727c:	21142106 	tstcs	r4, r6, lsl #2
    7280:	060b0522 	streq	r0, [fp], -r2, lsr #10
    7284:	060d0501 	streq	r0, [sp], -r1, lsl #10
    7288:	06130532 			; <UNDEFINED> instruction: 0x06130532
    728c:	204a0501 	subcs	r0, sl, r1, lsl #10
    7290:	05200f05 	streq	r0, [r0, #-3845]!	; 0xfffff0fb
    7294:	05053222 	streq	r3, [r5, #-546]	; 0xfffffdde
    7298:	05201703 	streq	r1, [r0, #-1795]!	; 0xfffff8fd
    729c:	6d030611 	stcvs	6, cr0, [r3, #-68]	; 0xffffffbc
    72a0:	2e200620 	cfmadda32cs	mvax1, mvax0, mvfx0, mvfx0
    72a4:	6f031405 	svcvs	0x00031405
    72a8:	060d052e 	streq	r0, [sp], -lr, lsr #10
    72ac:	052e1603 	streq	r1, [lr, #-1539]!	; 0xfffff9fd
    72b0:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    72b4:	0402002d 	streq	r0, [r2], #-45	; 0xffffffd3
    72b8:	11052e01 	tstne	r5, r1, lsl #28
    72bc:	2e090306 	cdpcs	3, 0, cr0, cr9, cr6, {0}
    72c0:	20202006 	eorcs	r2, r0, r6
    72c4:	61031405 	tstvs	r3, r5, lsl #8
    72c8:	0322052e 			; <UNDEFINED> instruction: 0x0322052e
    72cc:	09052e1b 	stmdbeq	r5, {r0, r1, r3, r4, r9, sl, fp, sp}
    72d0:	10052806 	andne	r2, r5, r6, lsl #16
    72d4:	06020106 	streq	r0, [r2], -r6, lsl #2
    72d8:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    72dc:	02050005 	andeq	r0, r5, #5
    72e0:	10002fd8 	ldrdne	r2, [r0], -r8
    72e4:	0105bd03 	tsteq	r5, r3, lsl #26
    72e8:	09050106 	stmdbeq	r5, {r1, r2, r8}
    72ec:	0e054e06 	cdpeq	14, 0, cr4, cr5, cr6, {0}
    72f0:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    72f4:	24052306 	strcs	r2, [r5], #-774	; 0xfffffcfa
    72f8:	1a050106 	bne	147718 <__RAM_SIZE+0x47718>
    72fc:	062a0520 	strteq	r0, [sl], -r0, lsr #10
    7300:	130d0523 	movwne	r0, #54563	; 0xd523
    7304:	01061405 	tsteq	r6, r5, lsl #8
    7308:	05200d05 	streq	r0, [r0, #-3333]!	; 0xfffff2fb
    730c:	7903060e 	stmdbvc	r3, {r1, r2, r3, r9, sl}
    7310:	064d052e 	strbeq	r0, [sp], -lr, lsr #10
    7314:	20100501 	andscs	r0, r0, r1, lsl #10
    7318:	05660e05 	strbeq	r0, [r6, #-3589]!	; 0xfffff1fb
    731c:	2e090305 	cdpcs	3, 0, cr0, cr9, cr5, {0}
    7320:	01010020 	tsteq	r1, r0, lsr #32
    7324:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    7328:	00300002 	eorseq	r0, r0, r2
    732c:	05cf0310 	strbeq	r0, [pc, #784]	; 7644 <__HEAP_SIZE+0x6644>
    7330:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    7334:	05400609 	strbeq	r0, [r0, #-1545]	; 0xfffff9f7
    7338:	05010631 	streq	r0, [r1, #-1585]	; 0xfffff9cf
    733c:	09053c19 	stmdbeq	r5, {r0, r3, r4, sl, fp, ip, sp}
    7340:	12052506 	andne	r2, r5, #25165824	; 0x1800000
    7344:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    7348:	05320609 	ldreq	r0, [r2, #-1545]!	; 0xfffff9f7
    734c:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    7350:	0d052e0b 	stceq	14, cr2, [r5, #-44]	; 0xffffffd4
    7354:	1f054206 	svcne	0x00054206
    7358:	26050106 	strcs	r0, [r5], -r6, lsl #2
    735c:	09054e06 	stmdbeq	r5, {r1, r2, r9, sl, fp, lr}
    7360:	06100513 			; <UNDEFINED> instruction: 0x06100513
    7364:	20090501 	andcs	r0, r9, r1, lsl #10
    7368:	052f0505 	streq	r0, [pc, #-1285]!	; 6e6b <__HEAP_SIZE+0x5e6b>
    736c:	7603060d 	strvc	r0, [r3], -sp, lsl #12
    7370:	00090220 	andeq	r0, r9, r0, lsr #4
    7374:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    7378:	40020500 	andmi	r0, r2, r0, lsl #10
    737c:	03100030 	tsteq	r0, #48	; 0x30
    7380:	050108be 	streq	r0, [r1, #-2238]	; 0xfffff742
    7384:	18132109 	ldmdane	r3, {r0, r3, r8, sp}
    7388:	01060e05 	tsteq	r6, r5, lsl #28
    738c:	22060d05 	andcs	r0, r6, #320	; 0x140
    7390:	01061f05 	tsteq	r6, r5, lsl #30
    7394:	25060d05 	strcs	r0, [r6, #-3333]	; 0xfffff2fb
    7398:	79030e05 	stmdbvc	r3, {r0, r2, r9, sl, fp}
    739c:	06100558 			; <UNDEFINED> instruction: 0x06100558
    73a0:	3c0e0501 	cfstr32cc	mvfx0, [lr], {1}
    73a4:	03060905 	movweq	r0, #26885	; 0x6905
    73a8:	05132e0a 	ldreq	r2, [r3, #-3594]	; 0xfffff1f6
    73ac:	0501061c 	streq	r0, [r1, #-1564]	; 0xfffff9e4
    73b0:	054b0609 	strbeq	r0, [fp, #-1545]	; 0xfffff9f7
    73b4:	0501061d 	streq	r0, [r1, #-1565]	; 0xfffff9e3
    73b8:	02202105 	eoreq	r2, r0, #1073741825	; 0x40000001
    73bc:	01010005 	tsteq	r1, r5
    73c0:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    73c4:	00307002 	eorseq	r7, r0, r2
    73c8:	06e70310 	usateq	r0, #7, r0, lsl #6
    73cc:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    73d0:	052f0609 	streq	r0, [pc, #-1545]!	; 6dcf <__HEAP_SIZE+0x5dcf>
    73d4:	09051319 	stmdbeq	r5, {r0, r3, r4, r8, r9, ip}
    73d8:	06140514 			; <UNDEFINED> instruction: 0x06140514
    73dc:	09052e01 	stmdbeq	r5, {r0, r9, sl, fp, sp}
    73e0:	16052206 	strne	r2, [r5], -r6, lsl #4
    73e4:	0b050106 	bleq	147804 <__RAM_SIZE+0x47804>
    73e8:	060d052e 	streq	r0, [sp], -lr, lsr #10
    73ec:	06270535 			; <UNDEFINED> instruction: 0x06270535
    73f0:	06090501 	streq	r0, [r9], -r1, lsl #10
    73f4:	06130531 			; <UNDEFINED> instruction: 0x06130531
    73f8:	06090501 	streq	r0, [r9], -r1, lsl #10
    73fc:	06050530 			; <UNDEFINED> instruction: 0x06050530
    7400:	060d0513 			; <UNDEFINED> instruction: 0x060d0513
    7404:	2f2e7503 	svccs	0x002e7503
    7408:	01062705 	tsteq	r6, r5, lsl #14
    740c:	01000502 	tsteq	r0, r2, lsl #10
    7410:	00050501 	andeq	r0, r5, r1, lsl #10
    7414:	309c0205 	addscc	r0, ip, r5, lsl #4
    7418:	8f031000 	svchi	0x00031000
    741c:	01060106 	tsteq	r6, r6, lsl #2
    7420:	4b060905 	blmi	18983c <__RAM_SIZE+0x8983c>
    7424:	0d051413 	cfstrseq	mvf1, [r5, #-76]	; 0xffffffb4
    7428:	06180535 			; <UNDEFINED> instruction: 0x06180535
    742c:	060d0501 	streq	r0, [sp], -r1, lsl #10
    7430:	0629053e 			; <UNDEFINED> instruction: 0x0629053e
    7434:	200f0501 	andcs	r0, pc, r1, lsl #10
    7438:	31061105 	tstcc	r6, r5, lsl #2
    743c:	01061305 	tsteq	r6, r5, lsl #6
    7440:	02003205 	andeq	r3, r0, #1342177280	; 0x50000000
    7444:	05200104 	streq	r0, [r0, #-260]!	; 0xfffffefc
    7448:	0d030615 	stceq	6, cr0, [r3, #-84]	; 0xffffffac
    744c:	0617052e 	ldreq	r0, [r7], -lr, lsr #10
    7450:	06190501 	ldreq	r0, [r9], -r1, lsl #10
    7454:	06290524 	strteq	r0, [r9], -r4, lsr #10
    7458:	06150501 	ldreq	r0, [r5], -r1, lsl #10
    745c:	064a065b 			; <UNDEFINED> instruction: 0x064a065b
    7460:	06190530 			; <UNDEFINED> instruction: 0x06190530
    7464:	2e170501 	cfmul32cs	mvfx0, mvfx7, mvfx1
    7468:	13030505 	movwne	r0, #13573	; 0x3505
    746c:	06150520 	ldreq	r0, [r5], -r0, lsr #10
    7470:	052e5903 	streq	r5, [lr, #-2307]!	; 0xfffff6fd
    7474:	0501061e 	streq	r0, [r1, #-1566]	; 0xfffff9e2
    7478:	052f0615 	streq	r0, [pc, #-1557]!	; 6e6b <__HEAP_SIZE+0x5e6b>
    747c:	0e030629 	cfmadd32eq	mvax1, mvfx0, mvfx3, mvfx9
    7480:	19052058 	stmdbne	r5, {r3, r4, r6, sp}
    7484:	200b0306 	andcs	r0, fp, r6, lsl #6
    7488:	0a031105 	beq	cb8a4 <__HEAP_SIZE+0xca8a4>
    748c:	061a053c 			; <UNDEFINED> instruction: 0x061a053c
    7490:	31050501 	tstcc	r5, r1, lsl #10
    7494:	01000602 	tsteq	r0, r2, lsl #12
    7498:	00050501 	andeq	r0, r5, r1, lsl #10
    749c:	31040205 	tstcc	r4, r5, lsl #4
    74a0:	aa031000 	bge	cb4a8 <__HEAP_SIZE+0xca4a8>
    74a4:	09050107 	stmdbeq	r5, {r0, r1, r2, r8}
    74a8:	061d052f 	ldreq	r0, [sp], -pc, lsr #10
    74ac:	06090501 	streq	r0, [r9], -r1, lsl #10
    74b0:	14131359 	ldrne	r1, [r3], #-857	; 0xfffffca7
    74b4:	01060e05 	tsteq	r6, r5, lsl #28
    74b8:	03062d05 	movweq	r2, #27909	; 0x6d05
    74bc:	0d052013 	stceq	0, cr2, [r5, #-76]	; 0xffffffb4
    74c0:	06190519 			; <UNDEFINED> instruction: 0x06190519
    74c4:	200f0501 	andcs	r0, pc, r1, lsl #10
    74c8:	03060e05 	movweq	r0, #28165	; 0x6e05
    74cc:	10052e66 	andne	r2, r5, r6, ror #28
    74d0:	0e050106 	adfeqs	f0, f5, f6
    74d4:	06110566 	ldreq	r0, [r1], -r6, ror #10
    74d8:	061d0534 			; <UNDEFINED> instruction: 0x061d0534
    74dc:	20130501 	andscs	r0, r3, r1, lsl #10
    74e0:	30061505 	andcc	r1, r6, r5, lsl #10
    74e4:	05162f05 	ldreq	r2, [r6, #-3845]	; 0xfffff0fb
    74e8:	11051515 	tstne	r5, r5, lsl r5
    74ec:	05580f03 	ldrbeq	r0, [r8, #-3843]	; 0xfffff0fd
    74f0:	05010619 	streq	r0, [r1, #-1561]	; 0xfffff9e7
    74f4:	05220611 	streq	r0, [r2, #-1553]!	; 0xfffff9ef
    74f8:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    74fc:	15052013 	strne	r2, [r5, #-19]	; 0xffffffed
    7500:	1e052306 	cdpne	3, 0, cr2, cr5, cr6, {0}
    7504:	2d050106 	stfcss	f0, [r5, #-24]	; 0xffffffe8
    7508:	77054006 	strvc	r4, [r5, -r6]
    750c:	1a110515 	bne	448968 <__RAM_SIZE+0x348968>
    7510:	01061c05 	tsteq	r6, r5, lsl #24
    7514:	4c061105 	stfmis	f1, [r6], {5}
    7518:	01062105 	tsteq	r6, r5, lsl #2
    751c:	05201105 	streq	r1, [r0, #-261]!	; 0xfffffefb
    7520:	05a50619 	streq	r0, [r5, #1561]!	; 0x619
    7524:	0501062b 	streq	r0, [r1, #-1579]	; 0xfffff9d5
    7528:	05680619 	strbeq	r0, [r8, #-1561]!	; 0xfffff9e7
    752c:	0501065d 	streq	r0, [r1, #-1629]	; 0xfffff9a3
    7530:	1d052075 	stcne	0, cr2, [r5, #-468]	; 0xfffffe2c
    7534:	1b053c20 	blne	1565bc <__RAM_SIZE+0x565bc>
    7538:	061d052e 	ldreq	r0, [sp], -lr, lsr #10
    753c:	062a0532 			; <UNDEFINED> instruction: 0x062a0532
    7540:	2e1f0501 	cfmul32cs	mvfx0, mvfx15, mvfx1
    7544:	42062105 	andmi	r2, r6, #1073741825	; 0x40000001
    7548:	01063305 	tsteq	r6, r5, lsl #6
    754c:	4e063a05 	vmlami.f32	s6, s12, s10
    7550:	05131d05 	ldreq	r1, [r3, #-3333]	; 0xfffff2fb
    7554:	05010624 	streq	r0, [r1, #-1572]	; 0xfffff9dc
    7558:	2105201d 	tstcs	r5, sp, lsl r0
    755c:	3c770306 	ldclcc	3, cr0, [r7], #-24	; 0xffffffe8
    7560:	01066d05 	tsteq	r6, r5, lsl #26
    7564:	05202105 	streq	r2, [r0, #-261]!	; 0xfffffefb
    7568:	15030619 	strne	r0, [r3, #-1561]	; 0xfffff9e7
    756c:	062b0574 			; <UNDEFINED> instruction: 0x062b0574
    7570:	06190501 	ldreq	r0, [r9], -r1, lsl #10
    7574:	2b052467 	blcs	150718 <__RAM_SIZE+0x50718>
    7578:	19050106 	stmdbne	r5, {r1, r2, r8}
    757c:	53056706 	movwpl	r6, #22278	; 0x5706
    7580:	36050106 	strcc	r0, [r5], -r6, lsl #2
    7584:	064d0520 	strbeq	r0, [sp], -r0, lsr #10
    7588:	1a190521 	bne	648a14 <__RAM_SIZE+0x548a14>
    758c:	01062205 	tsteq	r6, r5, lsl #4
    7590:	0619054a 	ldreq	r0, [r9], -sl, asr #10
    7594:	281d052f 	ldmdacs	sp, {r0, r1, r2, r3, r5, r8, sl}
    7598:	01062a05 	tsteq	r6, r5, lsl #20
    759c:	052e1f05 	streq	r1, [lr, #-3845]!	; 0xfffff0fb
    75a0:	05420621 	strbeq	r0, [r2, #-1569]	; 0xfffff9df
    75a4:	05010633 	streq	r0, [r1, #-1587]	; 0xfffff9cd
    75a8:	06540621 	ldrbeq	r0, [r4], -r1, lsr #12
    75ac:	03050520 	movweq	r0, #21792	; 0x5520
    75b0:	04023c18 	streq	r3, [r2], #-3096	; 0xfffff3e8
    75b4:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    75b8:	02050005 	andeq	r0, r5, #5
    75bc:	100031fc 	strdne	r3, [r0], -ip
    75c0:	0105ec03 	tsteq	r5, r3, lsl #24
    75c4:	09050106 	stmdbeq	r5, {r1, r2, r8}
    75c8:	01040200 	mrseq	r0, R12_usr
    75cc:	02002f06 	andeq	r2, r0, #6, 30
    75d0:	00130104 	andseq	r0, r3, r4, lsl #2
    75d4:	15010402 	strne	r0, [r1, #-1026]	; 0xfffffbfe
    75d8:	01040200 	mrseq	r0, R12_usr
    75dc:	05010c03 	streq	r0, [r1, #-3075]	; 0xfffff3fd
    75e0:	0402000d 	streq	r0, [r2], #-13
    75e4:	1f051601 	svcne	0x00051601
    75e8:	01040200 	mrseq	r0, R12_usr
    75ec:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    75f0:	01040200 	mrseq	r0, R12_usr
    75f4:	02004006 	andeq	r4, r0, #6
    75f8:	053f0104 	ldreq	r0, [pc, #-260]!	; 74fc <__HEAP_SIZE+0x64fc>
    75fc:	0402002d 	streq	r0, [r2], #-45	; 0xffffffd3
    7600:	2e750301 	cdpcs	3, 7, cr0, cr5, cr1, {0}
    7604:	01000102 	tsteq	r0, r2, lsl #2
    7608:	00050501 	andeq	r0, r5, r1, lsl #10
    760c:	32140205 	andscc	r0, r4, #1342177280	; 0x50000000
    7610:	d7031000 	strle	r1, [r3, -r0]
    7614:	09050108 	stmdbeq	r5, {r3, r8}
    7618:	300d0532 	andcc	r0, sp, r2, lsr r5
    761c:	01061d05 	tsteq	r6, r5, lsl #26
    7620:	052e0f05 	streq	r0, [lr, #-3845]!	; 0xfffff0fb
    7624:	25030629 	strcs	r0, [r3, #-1577]	; 0xfffff9d7
    7628:	15090520 	strne	r0, [r9, #-1312]	; 0xfffffae0
    762c:	2f060505 	svccs	0x00060505
    7630:	03061105 	movweq	r1, #24837	; 0x6105
    7634:	4b4b2e59 	blmi	12d2fa0 <__RAM_SIZE+0x11d2fa0>
    7638:	01062405 	tsteq	r6, r5, lsl #8
    763c:	2f061105 	svccs	0x00061105
    7640:	01062505 	tsteq	r6, r5, lsl #10
    7644:	05133406 	ldreq	r3, [r3, #-1030]	; 0xfffffbfa
    7648:	23051415 	movwcs	r1, #21525	; 0x5415
    764c:	21050106 	tstcs	r5, r6, lsl #2
    7650:	01000882 	smlabbeq	r0, r2, r8, r0
    7654:	00050501 	andeq	r0, r5, r1, lsl #10
    7658:	00000205 	andeq	r0, r0, r5, lsl #4
    765c:	a6030000 	strge	r0, [r3], -r0
    7660:	01060103 	tsteq	r6, r3, lsl #2
    7664:	76063405 	strvc	r3, [r6], -r5, lsl #8
    7668:	32160905 	andscc	r0, r6, #81920	; 0x14000
    766c:	01062105 	tsteq	r6, r5, lsl #2
    7670:	2f060905 	svccs	0x00060905
    7674:	01062905 	tsteq	r6, r5, lsl #18
    7678:	21060905 	tstcs	r6, r5, lsl #18
    767c:	01061f05 	tsteq	r6, r5, lsl #30
    7680:	21060905 	tstcs	r6, r5, lsl #18
    7684:	01062805 	tsteq	r6, r5, lsl #16
    7688:	2f060905 	svccs	0x00060905
    768c:	060b053e 			; <UNDEFINED> instruction: 0x060b053e
    7690:	060d0501 	streq	r0, [sp], -r1, lsl #10
    7694:	06220522 	strteq	r0, [r2], -r2, lsr #10
    7698:	06280501 	strteq	r0, [r8], -r1, lsl #10
    769c:	06050569 	streq	r0, [r5], -r9, ror #10
    76a0:	01002e13 	tsteq	r0, r3, lsl lr
    76a4:	00050501 	andeq	r0, r5, r1, lsl #10
    76a8:	32740205 	rsbscc	r0, r4, #1342177280	; 0x50000000
    76ac:	ed031000 	stc	0, cr1, [r3, #-0]
    76b0:	09050101 	stmdbeq	r5, {r0, r8}
    76b4:	142b052f 	strtne	r0, [fp], #-1327	; 0xfffffad1
    76b8:	30180905 	andscc	r0, r8, r5, lsl #18
    76bc:	01061905 	tsteq	r6, r5, lsl #18
    76c0:	052e0b05 	streq	r0, [lr, #-2821]!	; 0xfffff4fb
    76c4:	29030615 	stmdbcs	r3, {r0, r2, r4, r9, sl}
    76c8:	06240520 	strteq	r0, [r4], -r0, lsr #10
    76cc:	06150501 	ldreq	r0, [r5], -r1, lsl #10
    76d0:	0623052f 	strteq	r0, [r3], -pc, lsr #10
    76d4:	06150501 	ldreq	r0, [r5], -r1, lsl #10
    76d8:	05591421 	ldrbeq	r1, [r9, #-1057]	; 0xfffffbdf
    76dc:	05010628 	streq	r0, [r1, #-1576]	; 0xfffff9d8
    76e0:	1505ba26 	strne	fp, [r5, #-2598]	; 0xfffff5da
    76e4:	17053606 	strne	r3, [r5, -r6, lsl #12]
    76e8:	21050106 	tstcs	r5, r6, lsl #2
    76ec:	05202022 	streq	r2, [r0, #-34]!	; 0xffffffde
    76f0:	7fbe0314 	svcvc	0x00be0314
    76f4:	06250501 	strteq	r0, [r5], -r1, lsl #10
    76f8:	3c00d403 	cfstrscc	mvf13, [r0], {3}
    76fc:	05152005 	ldreq	r2, [r5, #-5]
    7700:	09051435 	stmdbeq	r5, {r0, r2, r4, r5, sl, ip}
    7704:	06050514 			; <UNDEFINED> instruction: 0x06050514
    7708:	000b0213 	andeq	r0, fp, r3, lsl r2
    770c:	09050101 	stmdbeq	r5, {r0, r8}
    7710:	00020500 	andeq	r0, r2, r0, lsl #10
    7714:	03000000 	movweq	r0, #0
    7718:	060102d4 			; <UNDEFINED> instruction: 0x060102d4
    771c:	060d0501 	streq	r0, [sp], -r1, lsl #10
    7720:	14740575 	ldrbtne	r0, [r4], #-1397	; 0xfffffa8b
    7724:	05170d05 	ldreq	r0, [r7, #-3333]	; 0xfffff2fb
    7728:	20010628 	andcs	r0, r1, r8, lsr #12
    772c:	30060d05 	andcc	r0, r6, r5, lsl #26
    7730:	01060f05 	tsteq	r6, r5, lsl #30
    7734:	33061105 	movwcc	r1, #24837	; 0x6105
    7738:	01062605 	tsteq	r6, r5, lsl #12
    773c:	3d061105 	stfccs	f1, [r6, #-20]	; 0xffffffec
    7740:	33057406 	movwcc	r7, #21510	; 0x5406
    7744:	0d053106 	stfeqs	f3, [r5, #-24]	; 0xffffffe8
    7748:	06090514 			; <UNDEFINED> instruction: 0x06090514
    774c:	01004a13 	tsteq	r0, r3, lsl sl
    7750:	00090501 	andeq	r0, r9, r1, lsl #10
    7754:	00000205 	andeq	r0, r0, r5, lsl #4
    7758:	f7030000 			; <UNDEFINED> instruction: 0xf7030000
    775c:	01060102 	tsteq	r6, r2, lsl #2
    7760:	3d060d05 	stccc	13, cr0, [r6, #-20]	; 0xffffffec
    7764:	14018905 	strne	r8, [r1], #-2309	; 0xfffff6fb
    7768:	0e032a05 	vmlaeq.f32	s4, s6, s10
    776c:	160d0501 	strne	r0, [sp], -r1, lsl #10
    7770:	060f0514 			; <UNDEFINED> instruction: 0x060f0514
    7774:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    7778:	06260525 	strteq	r0, [r6], -r5, lsr #10
    777c:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    7780:	5b39054c 	blpl	e48cb8 <__RAM_SIZE+0xd48cb8>
    7784:	05140d05 	ldreq	r0, [r4, #-3333]	; 0xfffff2fb
    7788:	3c130609 	ldccc	6, cr0, [r3], {9}
    778c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    7790:	02050005 	andeq	r0, r5, #5
    7794:	00000000 	andeq	r0, r0, r0
    7798:	0103c403 	tsteq	r3, r3, lsl #8
    779c:	13130905 	tstne	r3, #81920	; 0x14000
    77a0:	147f0514 	ldrbtne	r0, [pc], #-1300	; 77a8 <__HEAP_SIZE+0x67a8>
    77a4:	05141f05 	ldreq	r1, [r4, #-3845]	; 0xfffff0fb
    77a8:	19051609 	stmdbne	r5, {r0, r3, r9, sl, ip}
    77ac:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    77b0:	0505200b 	streq	r2, [r5, #-11]
    77b4:	05207403 	streq	r7, [r0, #-1027]!	; 0xfffffbfd
    77b8:	0f03060d 	svceq	0x0003060d
    77bc:	0621052e 	strteq	r0, [r1], -lr, lsr #10
    77c0:	060d0501 	streq	r0, [sp], -r1, lsl #10
    77c4:	06370521 	ldrteq	r0, [r7], -r1, lsr #10
    77c8:	060d0501 	streq	r0, [sp], -r1, lsl #10
    77cc:	06310521 	ldrteq	r0, [r1], -r1, lsr #10
    77d0:	06430501 	strbeq	r0, [r3], -r1, lsl #10
    77d4:	140d0522 	strne	r0, [sp], #-1314	; 0xfffffade
    77d8:	01060f05 	tsteq	r6, r5, lsl #30
    77dc:	6c031405 	cfstrsvs	mvf1, [r3], {5}
    77e0:	0625052e 	strteq	r0, [r5], -lr, lsr #10
    77e4:	05202403 	streq	r2, [r0, #-1027]!	; 0xfffffbfd
    77e8:	0905153c 	stmdbeq	r5, {r2, r3, r4, r5, r8, sl, ip}
    77ec:	06050514 			; <UNDEFINED> instruction: 0x06050514
    77f0:	06110513 			; <UNDEFINED> instruction: 0x06110513
    77f4:	053c6c03 	ldreq	r6, [ip, #-3075]!	; 0xfffff3fd
    77f8:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    77fc:	15052e13 	strne	r2, [r5, #-3603]	; 0xfffff1ed
    7800:	1f053406 	svcne	0x00053406
    7804:	05740106 	ldrbeq	r0, [r4, #-262]!	; 0xfffffefa
    7808:	051c0615 	ldreq	r0, [ip, #-1557]	; 0xfffff9eb
    780c:	7401061f 	strvc	r0, [r1], #-1567	; 0xfffff9e1
    7810:	68031405 	stmdavs	r3, {r0, r2, sl, ip}
    7814:	03050520 	movweq	r0, #21792	; 0x5520
    7818:	0302202a 	movweq	r2, #8234	; 0x202a
    781c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    7820:	02050005 	andeq	r0, r5, #5
    7824:	00000000 	andeq	r0, r0, r0
    7828:	0103f703 	tsteq	r3, r3, lsl #14	; <UNPREDICTABLE>
    782c:	09050106 	stmdbeq	r5, {r1, r2, r8}
    7830:	14133d06 	ldrne	r3, [r3], #-3334	; 0xfffff2fa
    7834:	05147e05 	ldreq	r7, [r4, #-3589]	; 0xfffff1fb
    7838:	0905141f 	stmdbeq	r5, {r0, r1, r2, r3, r4, sl, ip}
    783c:	06190516 			; <UNDEFINED> instruction: 0x06190516
    7840:	0b052001 	bleq	14f84c <__RAM_SIZE+0x4f84c>
    7844:	060d0520 	streq	r0, [sp], -r0, lsr #10
    7848:	06210523 	strteq	r0, [r1], -r3, lsr #10
    784c:	060d0501 	streq	r0, [sp], -r1, lsl #10
    7850:	06370521 	ldrteq	r0, [r7], -r1, lsr #10
    7854:	060d0501 	streq	r0, [sp], -r1, lsl #10
    7858:	06310521 	ldrteq	r0, [r1], -r1, lsr #10
    785c:	06440501 	strbeq	r0, [r4], -r1, lsl #10
    7860:	140d0522 	strne	r0, [sp], #-1314	; 0xfffffade
    7864:	01060f05 	tsteq	r6, r5, lsl #30
    7868:	6c031405 	cfstrsvs	mvf1, [r3], {5}
    786c:	0625052e 	strteq	r0, [r5], -lr, lsr #10
    7870:	05201d03 	streq	r1, [r0, #-3331]!	; 0xfffff2fd
    7874:	0905153b 	stmdbeq	r5, {r0, r1, r3, r4, r5, r8, sl, ip}
    7878:	06050514 			; <UNDEFINED> instruction: 0x06050514
    787c:	06110513 			; <UNDEFINED> instruction: 0x06110513
    7880:	052e7303 	streq	r7, [lr, #-771]!	; 0xfffffcfd
    7884:	2e01061b 	mcrcs	6, 0, r0, cr1, cr11, {0}
    7888:	052e2020 	streq	r2, [lr, #-32]!	; 0xffffffe0
    788c:	206a0314 	rsbcs	r0, sl, r4, lsl r3
    7890:	00040220 	andeq	r0, r4, r0, lsr #4
    7894:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    7898:	00020500 	andeq	r0, r2, r0, lsl #10
    789c:	03000000 	movweq	r0, #0
    78a0:	0501049f 	streq	r0, [r1, #-1183]	; 0xfffffb61
    78a4:	35051334 	strcc	r1, [r5, #-820]	; 0xfffffccc
    78a8:	14470516 	strbne	r0, [r7], #-1302	; 0xfffffaea
    78ac:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    78b0:	02130605 	andseq	r0, r3, #5242880	; 0x500000
    78b4:	01010006 	tsteq	r1, r6
    78b8:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    78bc:	00000002 	andeq	r0, r0, r2
    78c0:	04ad0300 	strteq	r0, [sp], #768	; 0x300
    78c4:	13090501 	movwne	r0, #38145	; 0x9501
    78c8:	05142d05 	ldreq	r2, [r4, #-3333]	; 0xfffff2fb
    78cc:	4405141f 	strmi	r1, [r5], #-1055	; 0xfffffbe1
    78d0:	14090514 	strne	r0, [r9], #-1300	; 0xfffffaec
    78d4:	13060505 	movwne	r0, #25861	; 0x6505
    78d8:	00010220 	andeq	r0, r1, r0, lsr #4
    78dc:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    78e0:	00020500 	andeq	r0, r2, r0, lsl #10
    78e4:	03000000 	movweq	r0, #0
    78e8:	060104bc 			; <UNDEFINED> instruction: 0x060104bc
    78ec:	06090501 	streq	r0, [r9], -r1, lsl #10
    78f0:	143e053d 	ldrtne	r0, [lr], #-1341	; 0xfffffac3
    78f4:	05141f05 	ldreq	r1, [r4, #-3845]	; 0xfffff0fb
    78f8:	0d051309 	stceq	3, cr1, [r5, #-36]	; 0xffffffdc
    78fc:	060f0530 			; <UNDEFINED> instruction: 0x060f0530
    7900:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    7904:	06230522 	strteq	r0, [r3], -r2, lsr #10
    7908:	06090501 	streq	r0, [r9], -r1, lsl #10
    790c:	302a056d 	eorcc	r0, sl, sp, ror #10
    7910:	13060505 	movwne	r0, #25861	; 0x6505
    7914:	03061105 	movweq	r1, #24837	; 0x6105
    7918:	2305207a 	movwcs	r2, #20602	; 0x507a
    791c:	07020106 	streq	r0, [r2, -r6, lsl #2]
    7920:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    7924:	02050005 	andeq	r0, r5, #5
    7928:	00000000 	andeq	r0, r0, r0
    792c:	0104d403 	tsteq	r4, r3, lsl #8
    7930:	09050106 	stmdbeq	r5, {r1, r2, r8}
    7934:	05132f06 	ldreq	r2, [r3, #-3846]	; 0xfffff0fa
    7938:	1f051431 	svcne	0x00051431
    793c:	13090514 	movwne	r0, #38164	; 0x9514
    7940:	05300d05 	ldreq	r0, [r0, #-3333]!	; 0xfffff2fb
    7944:	0501061a 	streq	r0, [r1, #-1562]	; 0xfffff9e6
    7948:	19052e0f 	stmdbne	r5, {r0, r1, r2, r3, r9, sl, fp, sp}
    794c:	0609053f 			; <UNDEFINED> instruction: 0x0609053f
    7950:	30330528 	eorscc	r0, r3, r8, lsr #10
    7954:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    7958:	05130605 	ldreq	r0, [r3, #-1541]	; 0xfffff9fb
    795c:	2e780319 	mrccs	3, 3, r0, cr8, cr9, {0}
    7960:	00010220 	andeq	r0, r1, r0, lsr #4
    7964:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    7968:	00020500 	andeq	r0, r2, r0, lsl #10
    796c:	03000000 	movweq	r0, #0
    7970:	060104f0 			; <UNDEFINED> instruction: 0x060104f0
    7974:	06090501 	streq	r0, [r9], -r1, lsl #10
    7978:	14320521 	ldrtne	r0, [r2], #-1313	; 0xfffffadf
    797c:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    7980:	05010624 	streq	r0, [r1, #-1572]	; 0xfffff9dc
    7984:	05300635 	ldreq	r0, [r0, #-1589]!	; 0xfffff9cb
    7988:	05051409 	streq	r1, [r5, #-1033]	; 0xfffffbf7
    798c:	01021306 	tsteq	r2, r6, lsl #6
    7990:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    7994:	02050005 	andeq	r0, r5, #5
    7998:	00000000 	andeq	r0, r0, r0
    799c:	0104fe03 	tsteq	r4, r3, lsl #28	; <UNPREDICTABLE>
    79a0:	13130905 	tstne	r3, #81920	; 0x14000
    79a4:	05143105 	ldreq	r3, [r4, #-261]	; 0xfffffefb
    79a8:	0905141f 	stmdbeq	r5, {r0, r1, r2, r3, r4, sl, ip}
    79ac:	14330513 	ldrtne	r0, [r3], #-1299	; 0xfffffaed
    79b0:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    79b4:	20130605 	andscs	r0, r3, r5, lsl #12
    79b8:	01000102 	tsteq	r0, r2, lsl #2
    79bc:	00090501 	andeq	r0, r9, r1, lsl #10
    79c0:	00000205 	andeq	r0, r0, r5, lsl #4
    79c4:	90030000 	andls	r0, r3, r0
    79c8:	0d050105 	stfeqs	f0, [r5, #-20]	; 0xffffffec
    79cc:	47051313 	smladmi	r5, r3, r3, r1
    79d0:	14330514 	ldrtne	r0, [r3], #-1300	; 0xfffffaec
    79d4:	05140d05 	ldreq	r0, [r4, #-3333]	; 0xfffff2fb
    79d8:	0501061a 	streq	r0, [r1, #-1562]	; 0xfffff9e6
    79dc:	11052e0f 	tstne	r5, pc, lsl #28
    79e0:	21054106 	tstcs	r5, r6, lsl #2
    79e4:	11050106 	tstne	r5, r6, lsl #2
    79e8:	19052106 	stmdbne	r5, {r1, r2, r8, sp}
    79ec:	24200106 	strtcs	r0, [r0], #-262	; 0xfffffefa
    79f0:	23063905 	movwcs	r3, #26885	; 0x6905
    79f4:	05140d05 	ldreq	r0, [r4, #-3333]	; 0xfffff2fb
    79f8:	02130609 	andseq	r0, r3, #9437184	; 0x900000
    79fc:	01010001 	tsteq	r1, r1
    7a00:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    7a04:	00000002 	andeq	r0, r0, r2
    7a08:	05ad0300 	streq	r0, [sp, #768]!	; 0x300
    7a0c:	13090501 	movwne	r0, #38145	; 0x9501
    7a10:	05142c05 	ldreq	r2, [r4, #-3077]	; 0xfffff3fb
    7a14:	3b05141f 	blcc	14ca98 <__RAM_SIZE+0x4ca98>
    7a18:	14090514 	strne	r0, [r9], #-1300	; 0xfffffaec
    7a1c:	13060505 	movwne	r0, #25861	; 0x6505
    7a20:	00010220 	andeq	r0, r1, r0, lsr #4
    7a24:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    7a28:	00020500 	andeq	r0, r2, r0, lsl #10
    7a2c:	03000000 	movweq	r0, #0
    7a30:	0601098a 	streq	r0, [r1], -sl, lsl #19
    7a34:	06090501 	streq	r0, [r9], -r1, lsl #10
    7a38:	3105132f 	tstcc	r5, pc, lsr #6
    7a3c:	141f0514 	ldrne	r0, [pc], #-1300	; 7a44 <__HEAP_SIZE+0x6a44>
    7a40:	05150905 	ldreq	r0, [r5, #-2309]	; 0xfffff6fb
    7a44:	1a05300d 	bne	153a80 <__RAM_SIZE+0x53a80>
    7a48:	0f050106 	svceq	0x00050106
    7a4c:	3e19052e 	cfmul64cc	mvdx0, mvdx9, mvdx14
    7a50:	27060905 	strcs	r0, [r6, -r5, lsl #18]
    7a54:	05303305 	ldreq	r3, [r0, #-773]!	; 0xfffffcfb
    7a58:	05051409 	streq	r1, [r5, #-1033]	; 0xfffffbf7
    7a5c:	19051306 	stmdbne	r5, {r1, r2, r8, r9, ip}
    7a60:	202e7803 	eorcs	r7, lr, r3, lsl #16
    7a64:	01000102 	tsteq	r0, r2, lsl #2
    7a68:	00050501 	andeq	r0, r5, r1, lsl #10
    7a6c:	00000205 	andeq	r0, r0, r5, lsl #4
    7a70:	a7030000 	strge	r0, [r3, -r0]
    7a74:	01060109 	tsteq	r6, r9, lsl #2
    7a78:	2f060905 	svccs	0x00060905
    7a7c:	142f0513 	strtne	r0, [pc], #-1299	; 7a84 <__HEAP_SIZE+0x6a84>
    7a80:	05141f05 	ldreq	r1, [r4, #-3845]	; 0xfffff0fb
    7a84:	0d051409 	cfstrseq	mvf1, [r5, #-36]	; 0xffffffdc
    7a88:	06160530 			; <UNDEFINED> instruction: 0x06160530
    7a8c:	06090501 	streq	r0, [r9], -r1, lsl #10
    7a90:	30320522 	eorscc	r0, r2, r2, lsr #10
    7a94:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    7a98:	2e130605 	cfmsub32cs	mvax0, mvfx0, mvfx3, mvfx5
    7a9c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    7aa0:	02050005 	andeq	r0, r5, #5
    7aa4:	00000000 	andeq	r0, r0, r0
    7aa8:	0109bd03 	tsteq	r9, r3, lsl #26
    7aac:	09050106 	stmdbeq	r5, {r1, r2, r8}
    7ab0:	37053d06 	strcc	r3, [r5, -r6, lsl #26]
    7ab4:	141f0514 	ldrne	r0, [pc], #-1300	; 7abc <__HEAP_SIZE+0x6abc>
    7ab8:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    7abc:	2005300d 	andcs	r3, r5, sp
    7ac0:	09050106 	stmdbeq	r5, {r1, r2, r8}
    7ac4:	27052206 	strcs	r2, [r5, -r6, lsl #4]
    7ac8:	06050530 			; <UNDEFINED> instruction: 0x06050530
    7acc:	01002013 	tsteq	r0, r3, lsl r0
    7ad0:	00090501 	andeq	r0, r9, r1, lsl #10
    7ad4:	00000205 	andeq	r0, r0, r5, lsl #4
    7ad8:	d4030000 	strle	r0, [r3], #-0
    7adc:	01060109 	tsteq	r6, r9, lsl #2
    7ae0:	4b060d05 	blmi	18aefc <__RAM_SIZE+0x8aefc>
    7ae4:	147f0513 	ldrbtne	r0, [pc], #-1299	; 7aec <__HEAP_SIZE+0x6aec>
    7ae8:	05160d05 	ldreq	r0, [r6, #-3333]	; 0xfffff2fb
    7aec:	2e010621 	cfmadd32cs	mvax1, mvfx0, mvfx1, mvfx1
    7af0:	21060d05 	tstcs	r6, r5, lsl #26
    7af4:	01063f05 	tsteq	r6, r5, lsl #30
    7af8:	21060d05 	tstcs	r6, r5, lsl #26
    7afc:	01063905 	tsteq	r6, r5, lsl #18
    7b00:	21060d05 	tstcs	r6, r5, lsl #26
    7b04:	01063905 	tsteq	r6, r5, lsl #18
    7b08:	22060d05 	andcs	r0, r6, #320	; 0x140
    7b0c:	01061705 	tsteq	r6, r5, lsl #14
    7b10:	6105202e 	tstvs	r5, lr, lsr #32
    7b14:	41053e06 	tstmi	r5, r6, lsl #28
    7b18:	140d0513 	strne	r0, [sp], #-1299	; 0xfffffaed
    7b1c:	13060905 	movwne	r0, #26885	; 0x6905
    7b20:	0002022e 	andeq	r0, r2, lr, lsr #4
    7b24:	09050101 	stmdbeq	r5, {r0, r8}
    7b28:	00020500 	andeq	r0, r2, r0, lsl #10
    7b2c:	03000000 	movweq	r0, #0
    7b30:	060109f2 			; <UNDEFINED> instruction: 0x060109f2
    7b34:	060d0501 	streq	r0, [sp], -r1, lsl #10
    7b38:	6b05134b 	blvs	14c86c <__RAM_SIZE+0x4c86c>
    7b3c:	17280514 			; <UNDEFINED> instruction: 0x17280514
    7b40:	05160d05 	ldreq	r0, [r6, #-3333]	; 0xfffff2fb
    7b44:	2e010621 	cfmadd32cs	mvax1, mvfx0, mvfx1, mvfx1
    7b48:	21060d05 	tstcs	r6, r5, lsl #26
    7b4c:	01063f05 	tsteq	r6, r5, lsl #30
    7b50:	21060d05 	tstcs	r6, r5, lsl #26
    7b54:	01063905 	tsteq	r6, r5, lsl #18
    7b58:	21060d05 	tstcs	r6, r5, lsl #26
    7b5c:	01063905 	tsteq	r6, r5, lsl #18
    7b60:	22060d05 	andcs	r0, r6, #320	; 0x140
    7b64:	01061705 	tsteq	r6, r5, lsl #14
    7b68:	5805202e 	stmdapl	r5, {r1, r2, r3, r5, sp}
    7b6c:	3a053e06 	bcc	15738c <__RAM_SIZE+0x5738c>
    7b70:	140d0513 	strne	r0, [sp], #-1299	; 0xfffffaed
    7b74:	13060905 	movwne	r0, #26885	; 0x6905
    7b78:	0002022e 	andeq	r0, r2, lr, lsr #4
    7b7c:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    7b80:	00020500 	andeq	r0, r2, r0, lsl #10
    7b84:	03000000 	movweq	r0, #0
    7b88:	05010ab2 	streq	r0, [r1, #-2738]	; 0xfffff54e
    7b8c:	15051309 	strne	r1, [r5, #-777]	; 0xfffffcf7
    7b90:	09050106 	stmdbeq	r5, {r1, r2, r8}
    7b94:	1a053d06 	bne	156fb4 <__RAM_SIZE+0x56fb4>
    7b98:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    7b9c:	0005022f 	andeq	r0, r5, pc, lsr #4
    7ba0:	074d0101 	strbeq	r0, [sp, -r1, lsl #2]
    7ba4:	00030000 	andeq	r0, r3, r0
    7ba8:	0000022a 	andeq	r0, r0, sl, lsr #4
    7bac:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
    7bb0:	0101000d 	tsteq	r1, sp
    7bb4:	00000101 	andeq	r0, r0, r1, lsl #2
    7bb8:	00000100 	andeq	r0, r0, r0, lsl #2
    7bbc:	2f2e2e01 	svccs	0x002e2e01
    7bc0:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    7bc4:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    7bc8:	6f747262 	svcvs	0x00747262
    7bcc:	72462f73 	subvc	r2, r6, #460	; 0x1cc
    7bd0:	54526565 	ldrbpl	r6, [r2], #-1381	; 0xfffffa9b
    7bd4:	702f534f 	eorvc	r5, pc, pc, asr #6
    7bd8:	6174726f 	cmnvs	r4, pc, ror #4
    7bdc:	2f656c62 	svccs	0x00656c62
    7be0:	4d6d654d 	cfstr64mi	mvdx6, [sp, #-308]!	; 0xfffffecc
    7be4:	00676e61 	rsbeq	r6, r7, r1, ror #28
    7be8:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
    7bec:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    7bf0:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
    7bf4:	705c6e6f 	subsvc	r6, ip, pc, ror #28
    7bf8:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
    7bfc:	615c6d61 	cmpvs	ip, r1, ror #26
    7c00:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
    7c04:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
    7c08:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
    7c0c:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    7c10:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    7c14:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    7c18:	2e30312d 	rsfcssp	f3, f0, #5.0
    7c1c:	30322d33 	eorscc	r2, r2, r3, lsr sp
    7c20:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
    7c24:	696c5c30 	stmdbvs	ip!, {r4, r5, sl, fp, ip, lr}^
    7c28:	63675c62 	cmnvs	r7, #25088	; 0x6200
    7c2c:	72615c63 	rsbvc	r5, r1, #25344	; 0x6300
    7c30:	6f6e2d6d 	svcvs	0x006e2d6d
    7c34:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    7c38:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
    7c3c:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
    7c40:	695c312e 	ldmdbvs	ip, {r1, r2, r3, r5, r8, ip, sp}^
    7c44:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    7c48:	63006564 	movwvs	r6, #1380	; 0x564
    7c4c:	73755c3a 	cmnvc	r5, #14848	; 0x3a00
    7c50:	5c737265 	lfmpl	f7, 2, [r3], #-404	; 0xfffffe6c
    7c54:	6f646978 	svcvs	0x00646978
    7c58:	72705c6e 	rsbsvc	r5, r0, #28160	; 0x6e00
    7c5c:	6172676f 	cmnvs	r2, pc, ror #14
    7c60:	72615c6d 	rsbvc	r5, r1, #27904	; 0x6d00
    7c64:	63675f6d 	cmnvs	r7, #436	; 0x1b4
    7c68:	63675c63 	cmnvs	r7, #25344	; 0x6300
    7c6c:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
    7c70:	6f6e2d6d 	svcvs	0x006e2d6d
    7c74:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    7c78:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
    7c7c:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
    7c80:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
    7c84:	30312e31 	eorscc	r2, r1, r1, lsr lr
    7c88:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    7c8c:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    7c90:	61652d65 	cmnvs	r5, r5, ror #26
    7c94:	695c6962 	ldmdbvs	ip, {r1, r5, r6, r8, fp, sp, lr}^
    7c98:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    7c9c:	6d5c6564 	cfldr64vs	mvdx6, [ip, #-400]	; 0xfffffe70
    7ca0:	69686361 	stmdbvs	r8!, {r0, r5, r6, r8, r9, sp, lr}^
    7ca4:	6300656e 	movwvs	r6, #1390	; 0x56e
    7ca8:	73755c3a 	cmnvc	r5, #14848	; 0x3a00
    7cac:	5c737265 	lfmpl	f7, 2, [r3], #-404	; 0xfffffe6c
    7cb0:	6f646978 	svcvs	0x00646978
    7cb4:	72705c6e 	rsbsvc	r5, r0, #28160	; 0x6e00
    7cb8:	6172676f 	cmnvs	r2, pc, ror #14
    7cbc:	72615c6d 	rsbvc	r5, r1, #27904	; 0x6d00
    7cc0:	63675f6d 	cmnvs	r7, #436	; 0x1b4
    7cc4:	63675c63 	cmnvs	r7, #25344	; 0x6300
    7cc8:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
    7ccc:	6f6e2d6d 	svcvs	0x006e2d6d
    7cd0:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    7cd4:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
    7cd8:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
    7cdc:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
    7ce0:	30312e31 	eorscc	r2, r1, r1, lsr lr
    7ce4:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    7ce8:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    7cec:	61652d65 	cmnvs	r5, r5, ror #26
    7cf0:	695c6962 	ldmdbvs	ip, {r1, r5, r6, r8, fp, sp, lr}^
    7cf4:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    7cf8:	735c6564 	cmpvc	ip, #100, 10	; 0x19000000
    7cfc:	2e007379 	mcrcs	3, 0, r7, cr0, cr9, {3}
    7d00:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    7d04:	2f2e2e2f 	svccs	0x002e2e2f
    7d08:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
    7d0c:	2f736f74 	svccs	0x00736f74
    7d10:	65657246 	strbvs	r7, [r5, #-582]!	; 0xfffffdba
    7d14:	534f5452 	movtpl	r5, #62546	; 0xf452
    7d18:	726f702f 	rsbvc	r7, pc, #47	; 0x2f
    7d1c:	6c626174 	stfvse	f6, [r2], #-464	; 0xfffffe30
    7d20:	43472f65 	movtmi	r2, #32613	; 0x7f65
    7d24:	52412f43 	subpl	r2, r1, #268	; 0x10c
    7d28:	4d435f4d 	stclmi	15, cr5, [r3, #-308]	; 0xfffffecc
    7d2c:	4e5f3333 	mrcmi	3, 2, r3, cr15, cr3, {1}
    7d30:	6e2f5a54 			; <UNDEFINED> instruction: 0x6e2f5a54
    7d34:	735f6e6f 	cmpvc	pc, #1776	; 0x6f0
    7d38:	72756365 	rsbsvc	r6, r5, #-1811939327	; 0x94000001
    7d3c:	2e2e0065 	cdpcs	0, 2, cr0, cr14, cr5, {3}
    7d40:	2f2e2e2f 	svccs	0x002e2e2f
    7d44:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 7c94 <__HEAP_SIZE+0x6c94>
    7d48:	74726269 	ldrbtvc	r6, [r2], #-617	; 0xfffffd97
    7d4c:	462f736f 	strtmi	r7, [pc], -pc, ror #6
    7d50:	52656572 	rsbpl	r6, r5, #478150656	; 0x1c800000
    7d54:	2f534f54 	svccs	0x00534f54
    7d58:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    7d5c:	00656475 	rsbeq	r6, r5, r5, ror r4
    7d60:	61656800 	cmnvs	r5, r0, lsl #16
    7d64:	2e345f70 	mrccs	15, 1, r5, cr4, cr0, {3}
    7d68:	00010063 	andeq	r0, r1, r3, rrx
    7d6c:	64747300 	ldrbtvs	r7, [r4], #-768	; 0xfffffd00
    7d70:	2e666564 	cdpcs	5, 6, cr6, cr6, cr4, {3}
    7d74:	00020068 	andeq	r0, r2, r8, rrx
    7d78:	65645f00 	strbvs	r5, [r4, #-3840]!	; 0xfffff100
    7d7c:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
    7d80:	79745f74 	ldmdbvc	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    7d84:	2e736570 	mrccs	5, 3, r6, cr3, cr0, {3}
    7d88:	00030068 	andeq	r0, r3, r8, rrx
    7d8c:	74735f00 	ldrbtvc	r5, [r3], #-3840	; 0xfffff100
    7d90:	746e6964 	strbtvc	r6, [lr], #-2404	; 0xfffff69c
    7d94:	0400682e 	streq	r6, [r0], #-2094	; 0xfffff7d2
    7d98:	6f700000 	svcvs	0x00700000
    7d9c:	616d7472 	smcvs	55106	; 0xd742
    7da0:	636f7263 	cmnvs	pc, #805306374	; 0x30000006
    7da4:	6f6d6d6f 	svcvs	0x006d6d6f
    7da8:	00682e6e 	rsbeq	r2, r8, lr, ror #28
    7dac:	70000005 	andvc	r0, r0, r5
    7db0:	6174726f 	cmnvs	r4, pc, ror #4
    7db4:	2e656c62 	cdpcs	12, 6, cr6, cr5, cr2, {3}
    7db8:	00060068 	andeq	r0, r6, r8, rrx
    7dbc:	73617400 	cmnvc	r1, #0, 8
    7dc0:	00682e6b 	rsbeq	r2, r8, fp, ror #28
    7dc4:	3c000006 	stccc	0, cr0, [r0], {6}
    7dc8:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	; 0xfffffe78
    7dcc:	6e692d74 	mcrvs	13, 3, r2, cr9, cr4, {3}
    7dd0:	0000003e 	andeq	r0, r0, lr, lsr r0
    7dd4:	01050000 	mrseq	r0, (UNDEF: 5)
    7dd8:	d0020500 	andle	r0, r2, r0, lsl #10
    7ddc:	03100032 	tsteq	r0, #50	; 0x32
    7de0:	050103bc 	streq	r0, [r1, #-956]	; 0xfffffc44
    7de4:	13131305 	tstne	r3, #335544320	; 0x14000000
    7de8:	06140515 			; <UNDEFINED> instruction: 0x06140515
    7dec:	06050501 	streq	r0, [r5], -r1, lsl #10
    7df0:	06070522 	streq	r0, [r7], -r2, lsr #10
    7df4:	06090501 	streq	r0, [r9], -r1, lsl #10
    7df8:	0618053e 			; <UNDEFINED> instruction: 0x0618053e
    7dfc:	06090501 	streq	r0, [r9], -r1, lsl #10
    7e00:	06180521 	ldreq	r0, [r8], -r1, lsr #10
    7e04:	06090501 	streq	r0, [r9], -r1, lsl #10
    7e08:	0618052f 	ldreq	r0, [r8], -pc, lsr #10
    7e0c:	05053b01 	streq	r3, [r5, #-2817]	; 0xfffff4ff
    7e10:	200c0306 	andcs	r0, ip, r6, lsl #6
    7e14:	01061c05 	tsteq	r6, r5, lsl #24
    7e18:	2f060505 	svccs	0x00060505
    7e1c:	01061705 	tsteq	r6, r5, lsl #14
    7e20:	32060505 	andcc	r0, r6, #20971520	; 0x1400000
    7e24:	01061205 	tsteq	r6, r5, lsl #4
    7e28:	21060505 	tstcs	r6, r5, lsl #10
    7e2c:	01061205 	tsteq	r6, r5, lsl #4
    7e30:	21060505 	tstcs	r6, r5, lsl #10
    7e34:	01061205 	tsteq	r6, r5, lsl #4
    7e38:	2f060505 	svccs	0x00060505
    7e3c:	01060b05 	tsteq	r6, r5, lsl #22
    7e40:	2f060505 	svccs	0x00060505
    7e44:	01061705 	tsteq	r6, r5, lsl #14
    7e48:	21060505 	tstcs	r6, r5, lsl #10
    7e4c:	01061c05 	tsteq	r6, r5, lsl #24
    7e50:	24060505 	strcs	r0, [r6], #-1285	; 0xfffffafb
    7e54:	063e0513 			; <UNDEFINED> instruction: 0x063e0513
    7e58:	20220501 	eorcs	r0, r2, r1, lsl #10
    7e5c:	21060505 	tstcs	r6, r5, lsl #10
    7e60:	01062705 	tsteq	r6, r5, lsl #14
    7e64:	23060505 	movwcs	r0, #25861	; 0x6505
    7e68:	01062405 	tsteq	r6, r5, lsl #8
    7e6c:	06050520 	streq	r0, [r5], -r0, lsr #10
    7e70:	06190521 	ldreq	r0, [r9], -r1, lsr #10
    7e74:	2f010501 	svccs	0x00010501
    7e78:	57030c05 	strpl	r0, [r3, -r5, lsl #24]
    7e7c:	000d0220 	andeq	r0, sp, r0, lsr #4
    7e80:	01050101 	tsteq	r5, r1, lsl #2
    7e84:	28020500 	stmdacs	r2, {r8, sl}
    7e88:	03100033 	tsteq	r0, #51	; 0x33
    7e8c:	050103ec 	streq	r0, [r1, #-1004]	; 0xfffffc14
    7e90:	16131305 	ldrne	r1, [r3], -r5, lsl #6
    7e94:	01061505 	tsteq	r6, r5, lsl #10
    7e98:	02002005 	andeq	r2, r0, #5
    7e9c:	20060104 	andcs	r0, r6, r4, lsl #2
    7ea0:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    7ea4:	2e060104 	adfcss	f0, f6, f4
    7ea8:	31053306 	tstcc	r5, r6, lsl #6
    7eac:	17050514 	smladne	r5, r4, r5, r0
    7eb0:	061b0514 			; <UNDEFINED> instruction: 0x061b0514
    7eb4:	200f0501 	andcs	r0, pc, r1, lsl #10
    7eb8:	052e0705 	streq	r0, [lr, #-1797]!	; 0xfffff8fb
    7ebc:	05350621 	ldreq	r0, [r5, #-1569]!	; 0xfffff9df
    7ec0:	05141705 	ldreq	r1, [r4, #-1797]	; 0xfffff8fb
    7ec4:	05010620 	streq	r0, [r1, #-1568]	; 0xfffff9e0
    7ec8:	0705200f 	streq	r2, [r5, -pc]
    7ecc:	0609052e 	streq	r0, [r9], -lr, lsr #10
    7ed0:	052e0f03 	streq	r0, [lr, #-3843]!	; 0xfffff0fd
    7ed4:	0501062a 	streq	r0, [r1, #-1578]	; 0xfffff9d6
    7ed8:	05270605 	streq	r0, [r7, #-1541]!	; 0xfffff9fb
    7edc:	05010607 	streq	r0, [r1, #-1543]	; 0xfffff9f9
    7ee0:	05300609 	ldreq	r0, [r0, #-1545]!	; 0xfffff9f7
    7ee4:	05010625 	streq	r0, [r1, #-1573]	; 0xfffff9db
    7ee8:	05240621 	streq	r0, [r4, #-1569]!	; 0xfffff9df
    7eec:	20580309 	subscs	r0, r8, r9, lsl #6
    7ef0:	01063205 	tsteq	r6, r5, lsl #4
    7ef4:	05202005 	streq	r2, [r0, #-5]!
    7ef8:	052f0609 	streq	r0, [pc, #-1545]!	; 78f7 <__HEAP_SIZE+0x68f7>
    7efc:	05010619 	streq	r0, [r1, #-1561]	; 0xfffff9e7
    7f00:	2e690301 	cdpcs	3, 6, cr0, cr9, cr1, {0}
    7f04:	03060905 	movweq	r0, #26885	; 0x6905
    7f08:	46052024 	strmi	r2, [r5], -r4, lsr #32
    7f0c:	0b050106 	bleq	14832c <__RAM_SIZE+0x4832c>
    7f10:	060d052e 	streq	r0, [sp], -lr, lsr #10
    7f14:	06640531 			; <UNDEFINED> instruction: 0x06640531
    7f18:	20290501 	eorcs	r0, r9, r1, lsl #10
    7f1c:	2f060d05 	svccs	0x00060d05
    7f20:	01063005 	tsteq	r6, r5
    7f24:	05206805 	streq	r6, [r0, #-2053]!	; 0xfffff7fb
    7f28:	0505202e 	streq	r2, [r5, #-46]	; 0xffffffd2
    7f2c:	20100306 	andscs	r0, r0, r6, lsl #6
    7f30:	01060705 	tsteq	r6, r5, lsl #14
    7f34:	30060905 	andcc	r0, r6, r5, lsl #18
    7f38:	01062505 	tsteq	r6, r5, lsl #10
    7f3c:	24062105 	strcs	r2, [r6], #-261	; 0xfffffefb
    7f40:	14060105 	strne	r0, [r6], #-261	; 0xfffffefb
    7f44:	03060d05 	movweq	r0, #27909	; 0x6d05
    7f48:	2e053c6c 	cdpcs	12, 0, cr3, cr5, cr12, {3}
    7f4c:	022e0106 	eoreq	r0, lr, #-2147483647	; 0x80000001
    7f50:	01010006 	tsteq	r1, r6
    7f54:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    7f58:	00338c02 	eorseq	r8, r3, r2, lsl #24
    7f5c:	01ad0310 			; <UNDEFINED> instruction: 0x01ad0310
    7f60:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    7f64:	13210605 			; <UNDEFINED> instruction: 0x13210605
    7f68:	14131313 	ldrne	r1, [r3], #-787	; 0xfffffced
    7f6c:	01060705 	tsteq	r6, r5, lsl #14
    7f70:	32060905 	andcc	r0, r6, #81920	; 0x14000
    7f74:	01060b05 	tsteq	r6, r5, lsl #22
    7f78:	3e060d05 	cdpcc	13, 0, cr0, cr6, cr5, {0}
    7f7c:	01061905 	tsteq	r6, r5, lsl #18
    7f80:	24060d05 	strcs	r0, [r6], #-3333	; 0xfffff2fb
    7f84:	01060f05 	tsteq	r6, r5, lsl #30
    7f88:	3f061105 	svccc	0x00061105
    7f8c:	01062905 	tsteq	r6, r5, lsl #18
    7f90:	30061105 	andcc	r1, r6, r5, lsl #2
    7f94:	01061505 	tsteq	r6, r5, lsl #10
    7f98:	05201305 	streq	r1, [r0, #-773]!	; 0xfffffcfb
    7f9c:	05300615 	ldreq	r0, [r0, #-1557]!	; 0xfffff9eb
    7fa0:	20010621 	andcs	r0, r1, r1, lsr #12
    7fa4:	0e031905 	vmlaeq.f16	s2, s6, s10	; <UNPREDICTABLE>
    7fa8:	06210520 	strteq	r0, [r1], -r0, lsr #10
    7fac:	15050525 	strne	r0, [r5, #-1317]	; 0xfffffadb
    7fb0:	05320905 	ldreq	r0, [r2, #-2309]!	; 0xfffff6fb
    7fb4:	05010613 	streq	r0, [r1, #-1555]	; 0xfffff9ed
    7fb8:	25052e0b 	strcs	r2, [r5, #-3595]	; 0xfffff1f5
    7fbc:	09052606 	stmdbeq	r5, {r1, r2, r9, sl, sp}
    7fc0:	060b0519 			; <UNDEFINED> instruction: 0x060b0519
    7fc4:	060d0501 	streq	r0, [sp], -r1, lsl #10
    7fc8:	060f0530 			; <UNDEFINED> instruction: 0x060f0530
    7fcc:	00360501 	eorseq	r0, r6, r1, lsl #10
    7fd0:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    7fd4:	02002505 	andeq	r2, r0, #20971520	; 0x1400000
    7fd8:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
    7fdc:	13320611 	teqne	r2, #17825792	; 0x1100000
    7fe0:	01061905 	tsteq	r6, r5, lsl #18
    7fe4:	2f063605 	svccs	0x00063605
    7fe8:	05141105 	ldreq	r1, [r4, #-261]	; 0xfffffefb
    7fec:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    7ff0:	20530321 	subscs	r0, r3, r1, lsr #6
    7ff4:	060d0520 	streq	r0, [sp], -r0, lsr #10
    7ff8:	05201803 	streq	r1, [r0, #-2051]!	; 0xfffff7fd
    7ffc:	17030625 	strne	r0, [r3, -r5, lsr #12]
    8000:	211d053c 	tstcs	sp, ip, lsr r5
    8004:	21063a05 	tstcs	r6, r5, lsl #20
    8008:	050e1605 	streq	r1, [lr, #-1541]	; 0xfffff9fb
    800c:	05010621 	streq	r0, [r1, #-1569]	; 0xfffff9df
    8010:	4a052016 	bmi	150070 <__RAM_SIZE+0x50070>
    8014:	01040200 	mrseq	r0, R12_usr
    8018:	003e052e 	eorseq	r0, lr, lr, lsr #10
    801c:	20010402 	andcs	r0, r1, r2, lsl #8
    8020:	03061105 	movweq	r1, #24837	; 0x6105
    8024:	1d052e09 	stcne	14, cr2, [r5, #-36]	; 0xffffffdc
    8028:	13050106 	movwne	r0, #20742	; 0x5106
    802c:	0615052e 	ldreq	r0, [r5], -lr, lsr #10
    8030:	063d0532 			; <UNDEFINED> instruction: 0x063d0532
    8034:	201e0501 	andscs	r0, lr, r1, lsl #10
    8038:	21063b05 	tstcs	r6, r5, lsl #22
    803c:	05161505 	ldreq	r1, [r6, #-1285]	; 0xfffffafb
    8040:	0501063f 	streq	r0, [r1, #-1599]	; 0xfffff9c1
    8044:	69052036 	stmdbvs	r5, {r1, r2, r4, r5, sp}
    8048:	15052406 	strne	r2, [r5, #-1030]	; 0xfffffbfa
    804c:	06220514 			; <UNDEFINED> instruction: 0x06220514
    8050:	202f0501 	eorcs	r0, pc, r1, lsl #10
    8054:	05201705 	streq	r1, [r0, #-1797]!	; 0xfffff8fb
    8058:	05340619 	ldreq	r0, [r4, #-1561]!	; 0xfffff9e7
    805c:	05010628 	streq	r0, [r1, #-1576]	; 0xfffff9d8
    8060:	05210669 	streq	r0, [r1, #-1641]!	; 0xfffff997
    8064:	34051619 	strcc	r1, [r5], #-1561	; 0xfffff9e7
    8068:	19050106 	stmdbne	r5, {r1, r2, r8}
    806c:	2d052106 	stfcss	f2, [r5, #-24]	; 0xffffffe8
    8070:	19050106 	stmdbne	r5, {r1, r2, r8}
    8074:	4a052306 	bmi	150c94 <__RAM_SIZE+0x50c94>
    8078:	39050106 	stmdbcc	r5, {r1, r2, r8}
    807c:	06190520 	ldreq	r0, [r9], -r0, lsr #10
    8080:	063a0521 	ldrteq	r0, [sl], -r1, lsr #10
    8084:	06310501 	ldrteq	r0, [r1], -r1, lsl #10
    8088:	15150524 	ldrne	r0, [r5, #-1316]	; 0xfffffadc
    808c:	01063305 	tsteq	r6, r5, lsl #6
    8090:	05202905 	streq	r2, [r0, #-2309]!	; 0xfffff6fb
    8094:	053e0615 	ldreq	r0, [lr, #-1557]!	; 0xfffff9eb
    8098:	0501062d 	streq	r0, [r1, #-1581]	; 0xfffff9d3
    809c:	19052e17 	stmdbne	r5, {r0, r1, r2, r4, r9, sl, fp, sp}
    80a0:	38053006 	stmdacc	r5, {r1, r2, ip, sp}
    80a4:	31050106 	tstcc	r5, r6, lsl #2
    80a8:	15053206 	strne	r3, [r5, #-518]	; 0xfffffdfa
    80ac:	2e053d17 	mcrcs	13, 0, r3, cr5, cr7, {0}
    80b0:	15050106 	strne	r0, [r5, #-262]	; 0xfffffefa
    80b4:	33052f06 	movwcc	r2, #24326	; 0x5f06
    80b8:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
    80bc:	0e030625 	cfmadd32eq	mvax1, mvfx0, mvfx3, mvfx5
    80c0:	152d052e 	strne	r0, [sp, #-1326]!	; 0xfffffad2
    80c4:	05140505 	ldreq	r0, [r4, #-1285]	; 0xfffffafb
    80c8:	0501060e 	streq	r0, [r1, #-1550]	; 0xfffff9f2
    80cc:	0f03065a 	svceq	0x0003065a
    80d0:	1305052e 	movwne	r0, #21806	; 0x552e
    80d4:	13060105 	movwne	r0, #24837	; 0x6105
    80d8:	d9030c05 	stmdble	r3, {r0, r2, sl, fp}
    80dc:	02662e7e 	rsbeq	r2, r6, #2016	; 0x7e0
    80e0:	0101000c 	tsteq	r1, ip
    80e4:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    80e8:	00346002 	eorseq	r6, r4, r2
    80ec:	02dc0310 	sbcseq	r0, ip, #16, 6	; 0x40000000
    80f0:	13050501 	movwne	r0, #21761	; 0x5501
    80f4:	07051413 	smladeq	r5, r3, r4, r1
    80f8:	01050106 	tsteq	r5, r6, lsl #2
    80fc:	0609051c 			; <UNDEFINED> instruction: 0x0609051c
    8100:	060d0536 			; <UNDEFINED> instruction: 0x060d0536
    8104:	06090501 	streq	r0, [r9], -r1, lsl #10
    8108:	142d0531 	strtne	r0, [sp], #-1329	; 0xfffffacf
    810c:	05133e05 	ldreq	r3, [r3, #-3589]	; 0xfffff1fb
    8110:	09051338 	stmdbeq	r5, {r3, r4, r5, r8, r9, ip}
    8114:	060d0514 			; <UNDEFINED> instruction: 0x060d0514
    8118:	2e0b0501 	cfsh32cs	mvfx0, mvfx11, #1
    811c:	30060d05 	andcc	r0, r6, r5, lsl #26
    8120:	01061705 	tsteq	r6, r5, lsl #14
    8124:	052e0f05 	streq	r0, [lr, #-3845]!	; 0xfffff0fb
    8128:	20240301 	eorcs	r0, r4, r1, lsl #6
    812c:	03061105 	movweq	r1, #24837	; 0x6105
    8130:	0c032060 	stceq	0, cr2, [r3], {96}	; 0x60
    8134:	3115054a 	tstcc	r5, sl, asr #10
    8138:	01063205 	tsteq	r6, r5, lsl #4
    813c:	052e2905 	streq	r2, [lr, #-2309]!	; 0xfffff6fb
    8140:	054b0638 	strbeq	r0, [fp, #-1592]	; 0xfffff9c8
    8144:	053d1315 	ldreq	r1, [sp, #-789]!	; 0xfffffceb
    8148:	0501062d 	streq	r0, [r1, #-1581]	; 0xfffff9d3
    814c:	054c0611 	strbeq	r0, [ip, #-1553]	; 0xfffff9ef
    8150:	0501061a 	streq	r0, [r1, #-1562]	; 0xfffff9e6
    8154:	09030625 	stmdbeq	r3, {r0, r2, r5, r9, sl}
    8158:	0601052e 	streq	r0, [r1], -lr, lsr #10
    815c:	05022015 	streq	r2, [r2, #-21]	; 0xffffffeb
    8160:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    8164:	02050001 	andeq	r0, r5, #1
    8168:	00000000 	andeq	r0, r0, r0
    816c:	01039703 	tsteq	r3, r3, lsl #14
    8170:	05130505 	ldreq	r0, [r3, #-1285]	; 0xfffffafb
    8174:	02130601 	andseq	r0, r3, #1048576	; 0x100000
    8178:	01010006 	tsteq	r1, r6
    817c:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    8180:	00000002 	andeq	r0, r0, r2
    8184:	039d0300 	orrseq	r0, sp, #0, 6
    8188:	13050501 	movwne	r0, #21761	; 0x5501
    818c:	13060105 	movwne	r0, #24837	; 0x6105
    8190:	01000602 	tsteq	r0, r2, lsl #12
    8194:	00010501 	andeq	r0, r1, r1, lsl #10
    8198:	00000205 	andeq	r0, r0, r5, lsl #4
    819c:	a3030000 	movwge	r0, #12288	; 0x3000
    81a0:	02140103 	andseq	r0, r4, #-1073741824	; 0xc0000000
    81a4:	01010001 	tsteq	r1, r1
    81a8:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    81ac:	00000002 	andeq	r0, r0, r2
    81b0:	03aa0300 			; <UNDEFINED> instruction: 0x03aa0300
    81b4:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    81b8:	14210605 	strtne	r0, [r1], #-1541	; 0xfffff9fb
    81bc:	01060905 	tsteq	r6, r5, lsl #18
    81c0:	04020058 	streq	r0, [r2], #-88	; 0xffffffa8
    81c4:	22062001 	andcs	r2, r6, #1
    81c8:	01060e05 	tsteq	r6, r5, lsl #28
    81cc:	5a060905 	bpl	18a5e8 <__RAM_SIZE+0x8a5e8>
    81d0:	01060b05 	tsteq	r6, r5, lsl #22
    81d4:	30060d05 	andcc	r0, r6, r5, lsl #26
    81d8:	01061605 	tsteq	r6, r5, lsl #12
    81dc:	2e4f0105 	dvfcse	f0, f7, f5
    81e0:	73030c05 	movwvc	r0, #15365	; 0x3c05
    81e4:	0605052e 	streq	r0, [r5], -lr, lsr #10
    81e8:	05200c03 	streq	r0, [r0, #-3075]!	; 0xfffff3fd
    81ec:	0201060c 	andeq	r0, r1, #12, 12	; 0xc00000
    81f0:	01010001 	tsteq	r1, r1
    81f4:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    81f8:	00000002 	andeq	r0, r0, r2
    81fc:	04b00300 	ldrteq	r0, [r0], #768	; 0x300
    8200:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    8204:	132f0605 			; <UNDEFINED> instruction: 0x132f0605
    8208:	30090514 	andcc	r0, r9, r4, lsl r5
    820c:	01061105 	tsteq	r6, r5, lsl #2
    8210:	32060905 	andcc	r0, r6, #81920	; 0x14000
    8214:	01060b05 	tsteq	r6, r5, lsl #22
    8218:	78032705 	stmdavc	r3, {r0, r2, r8, r9, sl, sp}
    821c:	2e190520 	cfmul64cs	mvdx0, mvdx9, mvdx0
    8220:	05200c05 	streq	r0, [r0, #-3077]!	; 0xfffff3fb
    8224:	19052e27 	stmdbne	r5, {r0, r1, r2, r5, r9, sl, fp, sp}
    8228:	200c052e 	andcs	r0, ip, lr, lsr #10
    822c:	03060505 	movweq	r0, #25861	; 0x6505
    8230:	0e052020 	cdpeq	0, 0, cr2, cr5, cr0, {1}
    8234:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    8238:	31053006 	tstcc	r5, r6
    823c:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    8240:	32052106 	andcc	r2, r5, #-2147483647	; 0x80000001
    8244:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    8248:	26052106 	strcs	r2, [r5], -r6, lsl #2
    824c:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    8250:	09052206 	stmdbeq	r5, {r1, r2, r9, sp}
    8254:	06310530 			; <UNDEFINED> instruction: 0x06310530
    8258:	06090501 	streq	r0, [r9], -r1, lsl #10
    825c:	0635053d 			; <UNDEFINED> instruction: 0x0635053d
    8260:	06090501 	streq	r0, [r9], -r1, lsl #10
    8264:	062f053d 			; <UNDEFINED> instruction: 0x062f053d
    8268:	06090501 	streq	r0, [r9], -r1, lsl #10
    826c:	0635053d 			; <UNDEFINED> instruction: 0x0635053d
    8270:	06050501 	streq	r0, [r5], -r1, lsl #10
    8274:	0601053e 			; <UNDEFINED> instruction: 0x0601053e
    8278:	0611052f 	ldreq	r0, [r1], -pc, lsr #10
    827c:	05206e03 	streq	r6, [r0, #-3587]!	; 0xfffff1fd
    8280:	05010619 	streq	r0, [r1, #-1561]	; 0xfffff9e7
    8284:	6e030612 	mcrvs	6, 0, r0, cr3, cr2, {0}
    8288:	061c0520 	ldreq	r0, [ip], -r0, lsr #10
    828c:	2e120501 	cfmul32cs	mvfx0, mvfx2, mvfx1
    8290:	32061105 	andcc	r1, r6, #1073741825	; 0x40000001
    8294:	01061805 	tsteq	r6, r5, lsl #16
    8298:	22061105 	andcs	r1, r6, #1073741825	; 0x40000001
    829c:	01061c05 	tsteq	r6, r5, lsl #24
    82a0:	05201305 	streq	r1, [r0, #-773]!	; 0xfffffcfb
    82a4:	1105301e 	tstne	r5, lr, lsl r0
    82a8:	13052306 	movwne	r2, #21254	; 0x5306
    82ac:	1e050106 	adfnes	f0, f5, f6
    82b0:	0d022030 	stceq	0, cr2, [r2, #-192]	; 0xffffff40
    82b4:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    82b8:	02050001 	andeq	r0, r5, #1
    82bc:	00000000 	andeq	r0, r0, r0
    82c0:	0104e903 	tsteq	r4, r3, lsl #18
    82c4:	05130505 	ldreq	r0, [r3, #-1285]	; 0xfffffafb
    82c8:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
    82cc:	053e0605 	ldreq	r0, [lr, #-1541]!	; 0xfffff9fb
    82d0:	05010619 	streq	r0, [r1, #-1561]	; 0xfffff9e7
    82d4:	052f0605 	streq	r0, [pc, #-1541]!	; 7cd7 <__HEAP_SIZE+0x6cd7>
    82d8:	05010624 	streq	r0, [r1, #-1572]	; 0xfffff9dc
    82dc:	052f0605 	streq	r0, [pc, #-1541]!	; 7cdf <__HEAP_SIZE+0x6cdf>
    82e0:	05010624 	streq	r0, [r1, #-1572]	; 0xfffff9dc
    82e4:	052f0605 	streq	r0, [pc, #-1541]!	; 7ce7 <__HEAP_SIZE+0x6ce7>
    82e8:	0501061e 	streq	r0, [r1, #-1566]	; 0xfffff9e2
    82ec:	0b022f01 	bleq	93ef8 <__HEAP_SIZE+0x92ef8>
    82f0:	f2010100 	vrhadd.s8	d0, d1, d0
    82f4:	03000005 	movweq	r0, #5
    82f8:	00018d00 	andeq	r8, r1, r0, lsl #26
    82fc:	fb010200 	blx	48b06 <__HEAP_SIZE+0x47b06>
    8300:	01000d0e 	tsteq	r0, lr, lsl #26
    8304:	00010101 	andeq	r0, r1, r1, lsl #2
    8308:	00010000 	andeq	r0, r1, r0
    830c:	2e2e0100 	sufcse	f0, f6, f0
    8310:	2f2e2e2f 	svccs	0x002e2e2f
    8314:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 8264 <__HEAP_SIZE+0x7264>
    8318:	74726269 	ldrbtvc	r6, [r2], #-617	; 0xfffffd97
    831c:	462f736f 	strtmi	r7, [pc], -pc, ror #6
    8320:	52656572 	rsbpl	r6, r5, #478150656	; 0x1c800000
    8324:	2f534f54 	svccs	0x00534f54
    8328:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
    832c:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
    8330:	4343472f 	movtmi	r4, #14127	; 0x372f
    8334:	4d52412f 	ldfmie	f4, [r2, #-188]	; 0xffffff44
    8338:	334d435f 	movtcc	r4, #54111	; 0xd35f
    833c:	544e5f33 	strbpl	r5, [lr], #-3891	; 0xfffff0cd
    8340:	6f6e2f5a 	svcvs	0x006e2f5a
    8344:	65735f6e 	ldrbvs	r5, [r3, #-3950]!	; 0xfffff092
    8348:	65727563 	ldrbvs	r7, [r2, #-1379]!	; 0xfffffa9d
    834c:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
    8350:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
    8354:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
    8358:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
    835c:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
    8360:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
    8364:	5f6d7261 	svcpl	0x006d7261
    8368:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
    836c:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
    8370:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    8374:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    8378:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    837c:	30312d69 	eorscc	r2, r1, r9, ror #26
    8380:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
    8384:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
    8388:	615c3031 	cmpvs	ip, r1, lsr r0
    838c:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    8390:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    8394:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    8398:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
    839c:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    83a0:	63616d5c 	cmnvs	r1, #92, 26	; 0x1700
    83a4:	656e6968 	strbvs	r6, [lr, #-2408]!	; 0xfffff698
    83a8:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
    83ac:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
    83b0:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
    83b4:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
    83b8:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
    83bc:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
    83c0:	5f6d7261 	svcpl	0x006d7261
    83c4:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
    83c8:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
    83cc:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    83d0:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    83d4:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    83d8:	30312d69 	eorscc	r2, r1, r9, ror #26
    83dc:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
    83e0:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
    83e4:	615c3031 	cmpvs	ip, r1, lsr r0
    83e8:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    83ec:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    83f0:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    83f4:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
    83f8:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    83fc:	7379735c 	cmnvc	r9, #92, 6	; 0x70000001
    8400:	2f2e2e00 	svccs	0x002e2e00
    8404:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    8408:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    840c:	6f747262 	svcvs	0x00747262
    8410:	72462f73 	subvc	r2, r6, #460	; 0x1cc
    8414:	54526565 	ldrbpl	r6, [r2], #-1381	; 0xfffffa9b
    8418:	692f534f 	stmdbvs	pc!, {r0, r1, r2, r3, r6, r8, r9, ip, lr}	; <UNPREDICTABLE>
    841c:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    8420:	00006564 	andeq	r6, r0, r4, ror #10
    8424:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
    8428:	0100632e 	tsteq	r0, lr, lsr #6
    842c:	645f0000 	ldrbvs	r0, [pc], #-0	; 8434 <__HEAP_SIZE+0x7434>
    8430:	75616665 	strbvc	r6, [r1, #-1637]!	; 0xfffff99b
    8434:	745f746c 	ldrbvc	r7, [pc], #-1132	; 843c <__HEAP_SIZE+0x743c>
    8438:	73657079 	cmnvc	r5, #121	; 0x79
    843c:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    8440:	735f0000 	cmpvc	pc, #0
    8444:	6e696474 	mcrvs	4, 3, r6, cr9, cr4, {3}
    8448:	00682e74 	rsbeq	r2, r8, r4, ror lr
    844c:	70000003 	andvc	r0, r0, r3
    8450:	646a6f72 	strbtvs	r6, [sl], #-3954	; 0xfffff08e
    8454:	2e736665 	cdpcs	6, 7, cr6, cr3, cr5, {3}
    8458:	00040068 	andeq	r0, r4, r8, rrx
    845c:	726f7000 	rsbvc	r7, pc, #0
    8460:	63616d74 	cmnvs	r1, #116, 26	; 0x1d00
    8464:	6f636f72 	svcvs	0x00636f72
    8468:	6e6f6d6d 	cdpvs	13, 6, cr6, cr15, cr13, {3}
    846c:	0100682e 	tsteq	r0, lr, lsr #16
    8470:	6f700000 	svcvs	0x00700000
    8474:	73617472 	cmnvc	r1, #1912602624	; 0x72000000
    8478:	00682e6d 	rsbeq	r2, r8, sp, ror #28
    847c:	74000001 	strvc	r0, [r0], #-1
    8480:	2e6b7361 	cdpcs	3, 6, cr7, cr11, cr1, {3}
    8484:	00040068 	andeq	r0, r4, r8, rrx
    8488:	01050000 	mrseq	r0, (UNDEF: 5)
    848c:	b0020500 	andlt	r0, r2, r0, lsl #10
    8490:	03100034 	tsteq	r0, #52	; 0x34
    8494:	050106a6 	streq	r0, [r1, #-1702]	; 0xfffff95a
    8498:	17052f05 	strne	r2, [r5, -r5, lsl #30]
    849c:	2e050106 	adfcss	f0, f5, f6
    84a0:	05053506 	streq	r3, [r5, #-1286]	; 0xfffffafa
    84a4:	02003013 	andeq	r3, r0, #19
    84a8:	09030104 	stmdbeq	r3, {r2, r8}
    84ac:	000a0501 	andeq	r0, sl, r1, lsl #10
    84b0:	03010402 	movweq	r0, #5122	; 0x1402
    84b4:	14050177 	strne	r0, [r5], #-375	; 0xfffffe89
    84b8:	01040200 	mrseq	r0, R12_usr
    84bc:	0a050106 	beq	1488dc <__RAM_SIZE+0x488dc>
    84c0:	01040200 	mrseq	r0, R12_usr
    84c4:	03010520 	movweq	r0, #5408	; 0x1520
    84c8:	03022e0a 	movweq	r2, #11786	; 0x2e0a
    84cc:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    84d0:	02050005 	andeq	r0, r5, #5
    84d4:	100034c8 	andne	r3, r0, r8, asr #9
    84d8:	0104af03 	tsteq	r4, r3, lsl #30
    84dc:	09050106 	stmdbeq	r5, {r1, r2, r8}
    84e0:	15132106 	ldrne	r2, [r3, #-262]	; 0xfffffefa
    84e4:	01061f05 	tsteq	r6, r5, lsl #30
    84e8:	052e0b05 	streq	r0, [lr, #-2821]!	; 0xfffff4fb
    84ec:	21430609 	cmpcs	r3, r9, lsl #12
    84f0:	0d05322f 	sfmeq	f3, 4, [r5, #-188]	; 0xffffff44
    84f4:	0b050106 	bleq	148914 <__RAM_SIZE+0x48914>
    84f8:	060d052e 	streq	r0, [sp], -lr, lsr #10
    84fc:	06050524 	streq	r0, [r5], -r4, lsr #10
    8500:	2001bf03 	andcs	fp, r1, r3, lsl #30
    8504:	03060d05 	movweq	r0, #27909	; 0x6d05
    8508:	05207ec9 	streq	r7, [r0, #-3785]!	; 0xfffff137
    850c:	05010627 	streq	r0, [r1, #-1575]	; 0xfffff9d9
    8510:	0551060d 	ldrbeq	r0, [r1, #-1549]	; 0xfffff9f3
    8514:	05010625 	streq	r0, [r1, #-1573]	; 0xfffff9db
    8518:	0522060d 	streq	r0, [r2, #-1549]!	; 0xfffff9f3
    851c:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    8520:	05220611 	streq	r0, [r2, #-1553]!	; 0xfffff9ef
    8524:	20010629 	andcs	r0, r1, r9, lsr #12
    8528:	03060d05 	movweq	r0, #27909	; 0x6d05
    852c:	67052009 	strvs	r2, [r5, -r9]
    8530:	51050106 	tstpl	r5, r6, lsl #2
    8534:	2e1b0520 	cfmul64cs	mvdx0, mvdx11, mvdx0
    8538:	30060d05 	andcc	r0, r6, r5, lsl #26
    853c:	01061305 	tsteq	r6, r5, lsl #6
    8540:	054a0f05 	strbeq	r0, [sl, #-3845]	; 0xfffff0fb
    8544:	053e0611 	ldreq	r0, [lr, #-1553]!	; 0xfffff9ef
    8548:	05010627 	streq	r0, [r1, #-1575]	; 0xfffff9d9
    854c:	05670611 	strbeq	r0, [r7, #-1553]!	; 0xfffff9ef
    8550:	0501061f 	streq	r0, [r1, #-1567]	; 0xfffff9e1
    8554:	053f060d 	ldreq	r0, [pc, #-1549]!	; 7f4f <__HEAP_SIZE+0x6f4f>
    8558:	0501061f 	streq	r0, [r1, #-1567]	; 0xfffff9e1
    855c:	11052e0f 	tstne	r5, pc, lsl #28
    8560:	1f053006 	svcne	0x00053006
    8564:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    8568:	27052406 	strcs	r2, [r5, -r6, lsl #8]
    856c:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    8570:	30054006 	andcc	r4, r5, r6
    8574:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    8578:	27053106 	strcs	r3, [r5, -r6, lsl #2]
    857c:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    8580:	3e055106 	adfccs	f5, f5, f6
    8584:	140d0513 	strne	r0, [sp], #-1299	; 0xfffffaed
    8588:	01060f05 	tsteq	r6, r5, lsl #30
    858c:	22061105 	andcs	r1, r6, #1073741825	; 0x40000001
    8590:	3d05212f 	stfccs	f2, [r5, #-188]	; 0xffffff44
    8594:	170d0531 	smladxne	sp, r1, r5, r0
    8598:	21342f21 	teqcs	r4, r1, lsr #30
    859c:	2e09032f 	cdpcs	3, 0, cr0, cr9, cr15, {1}
    85a0:	01062705 	tsteq	r6, r5, lsl #14
    85a4:	4d060d05 	stcmi	13, cr0, [r6, #-20]	; 0xffffffec
    85a8:	01061305 	tsteq	r6, r5, lsl #6
    85ac:	05200f05 	streq	r0, [r0, #-3845]!	; 0xfffff0fb
    85b0:	173e0611 			; <UNDEFINED> instruction: 0x173e0611
    85b4:	01064b05 	tsteq	r6, r5, lsl #22
    85b8:	052e5f05 	streq	r5, [lr, #-3845]!	; 0xfffff0fb
    85bc:	4b053c5d 	blmi	157738 <__RAM_SIZE+0x57738>
    85c0:	20270520 	eorcs	r0, r7, r0, lsr #10
    85c4:	26061105 	strcs	r1, [r6], -r5, lsl #2
    85c8:	01062d05 	tsteq	r6, r5, lsl #26
    85cc:	052e1305 	streq	r1, [lr, #-773]!	; 0xfffffcfb
    85d0:	0402004d 	streq	r0, [r2], #-77	; 0xffffffb3
    85d4:	15052e01 	strne	r2, [r5, #-3585]	; 0xfffff1ff
    85d8:	2b053006 	blcs	1545f8 <__RAM_SIZE+0x545f8>
    85dc:	11050106 	tstne	r5, r6, lsl #2
    85e0:	2b052306 	blcs	151200 <__RAM_SIZE+0x51200>
    85e4:	11050106 	tstne	r5, r6, lsl #2
    85e8:	01064106 	tsteq	r6, r6, lsl #2
    85ec:	03060d05 	movweq	r0, #27909	; 0x6d05
    85f0:	3005012d 	andcc	r0, r5, sp, lsr #2
    85f4:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    85f8:	27054b06 	strcs	r4, [r5, -r6, lsl #22]
    85fc:	11050106 	tstne	r5, r6, lsl #2
    8600:	45053106 	strmi	r3, [r5, #-262]	; 0xfffffefa
    8604:	2b050106 	blcs	148a24 <__RAM_SIZE+0x48a24>
    8608:	060d053c 			; <UNDEFINED> instruction: 0x060d053c
    860c:	31201503 			; <UNDEFINED> instruction: 0x31201503
    8610:	22060505 	andcs	r0, r6, #20971520	; 0x1400000
    8614:	03061105 	movweq	r1, #24837	; 0x6105
    8618:	05207fbe 	streq	r7, [r0, #-4030]!	; 0xfffff042
    861c:	05010629 	streq	r0, [r1, #-1577]	; 0xfffff9d7
    8620:	12030611 	andne	r0, r3, #17825792	; 0x1100000
    8624:	0644053c 			; <UNDEFINED> instruction: 0x0644053c
    8628:	4a2e0501 	bmi	b89a34 <__RAM_SIZE+0xa89a34>
    862c:	24061105 	strcs	r1, [r6], #-261	; 0xfffffefb
    8630:	01062705 	tsteq	r6, r5, lsl #14
    8634:	32061105 	andcc	r1, r6, #1073741825	; 0x40000001
    8638:	01064f05 	tsteq	r6, r5, lsl #30
    863c:	202e6b05 	eorcs	r6, lr, r5, lsl #22
    8640:	20202b05 	eorcs	r2, r0, r5, lsl #22
    8644:	01000802 	tsteq	r0, r2, lsl #16
    8648:	00010501 	andeq	r0, r1, r1, lsl #10
    864c:	35dc0205 	ldrbcc	r0, [ip, #517]	; 0x205
    8650:	8a031000 	bhi	cc658 <__HEAP_SIZE+0xcb658>
    8654:	09050106 	stmdbeq	r5, {r1, r2, r8}
    8658:	06210516 			; <UNDEFINED> instruction: 0x06210516
    865c:	06090501 	streq	r0, [r9], -r1, lsl #10
    8660:	0629054b 	strteq	r0, [r9], -fp, asr #10
    8664:	06090501 	streq	r0, [r9], -r1, lsl #10
    8668:	0624054b 	strteq	r0, [r4], -fp, asr #10
    866c:	06050501 	streq	r0, [r5], -r1, lsl #10
    8670:	053c0c03 	ldreq	r0, [ip, #-3075]!	; 0xfffff3fd
    8674:	0501061f 	streq	r0, [r1, #-1567]	; 0xfffff9e1
    8678:	054b0605 	strbeq	r0, [fp, #-1541]	; 0xfffff9fb
    867c:	05010628 	streq	r0, [r1, #-1576]	; 0xfffff9d8
    8680:	05310605 	ldreq	r0, [r1, #-1541]!	; 0xfffff9fb
    8684:	0501061f 	streq	r0, [r1, #-1567]	; 0xfffff9e1
    8688:	053d0605 	ldreq	r0, [sp, #-1541]!	; 0xfffff9fb
    868c:	0501061f 	streq	r0, [r1, #-1567]	; 0xfffff9e1
    8690:	08022f01 	stmdaeq	r2, {r0, r8, r9, sl, fp, sp}
    8694:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    8698:	02050001 	andeq	r0, r5, #1
    869c:	10003618 	andne	r3, r0, r8, lsl r6
    86a0:	0107ce03 	tsteq	r7, r3, lsl #28
    86a4:	05140505 	ldreq	r0, [r4, #-1285]	; 0xfffffafb
    86a8:	0501061b 	streq	r0, [r1, #-1563]	; 0xfffff9e5
    86ac:	2f6a0605 	svccs	0x006a0605
    86b0:	2f060105 	svccs	0x00060105
    86b4:	01000102 	tsteq	r0, r2, lsl #2
    86b8:	00010501 	andeq	r0, r1, r1, lsl #10
    86bc:	36300205 	ldrtcc	r0, [r0], -r5, lsl #4
    86c0:	da031000 	ble	cc6c8 <__HEAP_SIZE+0xcb6c8>
    86c4:	05050107 	streq	r0, [r5, #-263]	; 0xfffffef9
    86c8:	16052f21 	strne	r2, [r5], -r1, lsr #30
    86cc:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    86d0:	052f4e06 	streq	r4, [pc, #-3590]!	; 78d2 <__HEAP_SIZE+0x68d2>
    86d4:	022f0601 	eoreq	r0, pc, #1048576	; 0x100000
    86d8:	01010003 	tsteq	r1, r3
    86dc:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    86e0:	00364c02 	eorseq	r4, r6, r2, lsl #24
    86e4:	07e60310 			; <UNDEFINED> instruction: 0x07e60310
    86e8:	21260501 			; <UNDEFINED> instruction: 0x21260501
    86ec:	05130505 	ldreq	r0, [r3, #-1285]	; 0xfffffafb
    86f0:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    86f4:	054c0605 	strbeq	r0, [ip, #-1541]	; 0xfffff9fb
    86f8:	0501061b 	streq	r0, [r1, #-1563]	; 0xfffff9e5
    86fc:	01052007 	tsteq	r5, r7
    8700:	06090524 	streq	r0, [r9], -r4, lsr #10
    8704:	0601051e 			; <UNDEFINED> instruction: 0x0601051e
    8708:	0003023e 	andeq	r0, r3, lr, lsr r2
    870c:	01050101 	tsteq	r5, r1, lsl #2
    8710:	68020500 	stmdavs	r2, {r8, sl}
    8714:	03100036 	tsteq	r0, #54	; 0x36
    8718:	050107f2 	streq	r0, [r1, #-2034]	; 0xfffff80e
    871c:	05142105 	ldreq	r2, [r4, #-261]	; 0xfffffefb
    8720:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    8724:	053d0615 	ldreq	r0, [sp, #-1557]!	; 0xfffff9eb
    8728:	0d051509 	cfstr32eq	mvfx1, [r5, #-36]	; 0xffffffdc
    872c:	0b050106 	bleq	148b4c <__RAM_SIZE+0x48b4c>
    8730:	0629052e 	strteq	r0, [r9], -lr, lsr #10
    8734:	140d0522 	strne	r0, [sp], #-1314	; 0xfffffade
    8738:	01062305 	tsteq	r6, r5, lsl #6
    873c:	6a061c05 	bvs	18f758 <__RAM_SIZE+0x8f758>
    8740:	05150505 	ldreq	r0, [r5, #-1285]	; 0xfffffafb
    8744:	203d0601 	eorscs	r0, sp, r1, lsl #12
    8748:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    874c:	02050001 	andeq	r0, r5, #1
    8750:	1000368a 	andne	r3, r0, sl, lsl #13
    8754:	01088903 	tsteq	r8, r3, lsl #18
    8758:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    875c:	200f0306 	andcs	r0, pc, r6, lsl #6
    8760:	16010903 	strne	r0, [r1], -r3, lsl #18
    8764:	01060a05 	tsteq	r6, r5, lsl #20
    8768:	21060505 	tstcs	r6, r5, lsl #10
    876c:	01061105 	tsteq	r6, r5, lsl #2
    8770:	30060505 	andcc	r0, r6, r5, lsl #10
    8774:	03060105 	movweq	r0, #24837	; 0x6105
    8778:	052e00db 	streq	r0, [lr, #-219]!	; 0xffffff25
    877c:	6603060d 	strvs	r0, [r3], -sp, lsl #12
    8780:	24052f20 	strcs	r2, [r5], #-3872	; 0xfffff0e0
    8784:	05011703 	streq	r1, [r1, #-1795]	; 0xfffff8fd
    8788:	02140601 	andseq	r0, r4, #1048576	; 0x100000
    878c:	01010001 	tsteq	r1, r1
    8790:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    8794:	0036a002 	eorseq	sl, r6, r2
    8798:	0c850310 	stceq	3, cr0, [r5], {16}
    879c:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    87a0:	1b03060d 	blne	c9fdc <__HEAP_SIZE+0xc8fdc>
    87a4:	1b051320 	blne	14d42c <__RAM_SIZE+0x4d42c>
    87a8:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    87ac:	05134b06 	ldreq	r4, [r3, #-2822]	; 0xfffff4fa
    87b0:	0501061b 	streq	r0, [r1, #-1563]	; 0xfffff9e5
    87b4:	132f060d 			; <UNDEFINED> instruction: 0x132f060d
    87b8:	01061d05 	tsteq	r6, r5, lsl #26
    87bc:	05201b05 	streq	r1, [r0, #-2821]!	; 0xfffff4fb
    87c0:	132f060d 			; <UNDEFINED> instruction: 0x132f060d
    87c4:	01061b05 	tsteq	r6, r5, lsl #22
    87c8:	4b060d05 	blmi	18bbe4 <__RAM_SIZE+0x8bbe4>
    87cc:	061b0513 			; <UNDEFINED> instruction: 0x061b0513
    87d0:	060d0501 	streq	r0, [sp], -r1, lsl #10
    87d4:	1b05134b 	blne	14d508 <__RAM_SIZE+0x4d508>
    87d8:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    87dc:	05134b06 	ldreq	r4, [r3, #-2822]	; 0xfffff4fa
    87e0:	0501061b 	streq	r0, [r1, #-1563]	; 0xfffff9e5
    87e4:	134b060d 	movtne	r0, #46605	; 0xb60d
    87e8:	01061b05 	tsteq	r6, r5, lsl #22
    87ec:	2f060d05 	svccs	0x00060d05
    87f0:	061b0513 			; <UNDEFINED> instruction: 0x061b0513
    87f4:	0d052e01 	stceq	14, cr2, [r5, #-4]
    87f8:	05132f06 	ldreq	r2, [r3, #-3846]	; 0xfffff0fa
    87fc:	0501061b 	streq	r0, [r1, #-1563]	; 0xfffff9e5
    8800:	134b060d 	movtne	r0, #46605	; 0xb60d
    8804:	01061b05 	tsteq	r6, r5, lsl #22
    8808:	4b060d05 	blmi	18bc24 <__RAM_SIZE+0x8bc24>
    880c:	061b0513 			; <UNDEFINED> instruction: 0x061b0513
    8810:	060d0501 	streq	r0, [sp], -r1, lsl #10
    8814:	1b05134b 	blne	14d548 <__RAM_SIZE+0x4d548>
    8818:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    881c:	05134b06 	ldreq	r4, [r3, #-2822]	; 0xfffff4fa
    8820:	0501061b 	streq	r0, [r1, #-1563]	; 0xfffff9e5
    8824:	134b060d 	movtne	r0, #46605	; 0xb60d
    8828:	01061b05 	tsteq	r6, r5, lsl #22
    882c:	4b060d05 	blmi	18bc48 <__RAM_SIZE+0x8bc48>
    8830:	061b0513 			; <UNDEFINED> instruction: 0x061b0513
    8834:	060d0501 	streq	r0, [sp], -r1, lsl #10
    8838:	1b05134b 	blne	14d56c <__RAM_SIZE+0x4d56c>
    883c:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    8840:	05134b06 	ldreq	r4, [r3, #-2822]	; 0xfffff4fa
    8844:	0501061b 	streq	r0, [r1, #-1563]	; 0xfffff9e5
    8848:	0b030609 	bleq	ca074 <__HEAP_SIZE+0xc9074>
    884c:	0605052e 	streq	r0, [r5], -lr, lsr #10
    8850:	05022013 	streq	r2, [r2, #-19]	; 0xffffffed
    8854:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    8858:	02050001 	andeq	r0, r5, #1
    885c:	10003730 	andne	r3, r0, r0, lsr r7
    8860:	010cd503 	tsteq	ip, r3, lsl #10
    8864:	0f030905 	svceq	0x00030905
    8868:	034d0520 	movteq	r0, #54560	; 0xd520
    886c:	5305010f 	movwpl	r0, #20751	; 0x510f
    8870:	03050513 	movweq	r0, #21779	; 0x5513
    8874:	050100d0 	streq	r0, [r1, #-208]	; 0xffffff30
    8878:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    887c:	05830605 	streq	r0, [r3, #1541]	; 0x605
    8880:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    8884:	05670605 	strbeq	r0, [r7, #-1541]!	; 0xfffff9fb
    8888:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    888c:	0b030605 	bleq	ca0a8 <__HEAP_SIZE+0xc90a8>
    8890:	1705313c 	smladxne	r5, ip, r1, r3
    8894:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    8898:	2e090306 	cdpcs	3, 0, cr0, cr9, cr6, {0}
    889c:	05312f36 	ldreq	r2, [r1, #-3894]!	; 0xfffff0ca
    88a0:	02130601 	andseq	r0, r3, #1048576	; 0x100000
    88a4:	01010004 	tsteq	r1, r4
    88a8:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    88ac:	00000002 	andeq	r0, r0, r2
    88b0:	0dee0300 	stcleq	3, cr0, [lr]
    88b4:	15300501 	ldrne	r0, [r0, #-1281]!	; 0xfffffaff
    88b8:	13060105 	movwne	r0, #24837	; 0x6105
    88bc:	01000102 	tsteq	r0, r2, lsl #2
    88c0:	00010501 	andeq	r0, r1, r1, lsl #10
    88c4:	00000205 	andeq	r0, r0, r5, lsl #4
    88c8:	af030000 	svcge	0x00030000
    88cc:	0505010f 	streq	r0, [r5, #-271]	; 0xfffffef1
    88d0:	30171313 	andscc	r1, r7, r3, lsl r3
    88d4:	01060705 	tsteq	r6, r5, lsl #14
    88d8:	32221105 	eorcc	r1, r2, #1073741825	; 0x40000001
    88dc:	23060505 	movwcs	r0, #25861	; 0x6505
    88e0:	13060105 	movwne	r0, #24837	; 0x6105
    88e4:	01000102 	tsteq	r0, r2, lsl #2
    88e8:	00023b01 	andeq	r3, r2, r1, lsl #22
    88ec:	49000300 	stmdbmi	r0, {r8, r9}
    88f0:	02000001 	andeq	r0, r0, #1
    88f4:	0d0efb01 	vstreq	d15, [lr, #-4]
    88f8:	01010100 	mrseq	r0, (UNDEF: 17)
    88fc:	00000001 	andeq	r0, r0, r1
    8900:	01000001 	tsteq	r0, r1
    8904:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    8908:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    890c:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    8910:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    8914:	6572462f 	ldrbvs	r4, [r2, #-1583]!	; 0xfffff9d1
    8918:	4f545265 	svcmi	0x00545265
    891c:	6f702f53 	svcvs	0x00702f53
    8920:	62617472 	rsbvs	r7, r1, #1912602624	; 0x72000000
    8924:	472f656c 	strmi	r6, [pc, -ip, ror #10]!
    8928:	412f4343 			; <UNDEFINED> instruction: 0x412f4343
    892c:	435f4d52 	cmpmi	pc, #5248	; 0x1480
    8930:	5f33334d 	svcpl	0x0033334d
    8934:	2f5a544e 	svccs	0x005a544e
    8938:	5f6e6f6e 	svcpl	0x006e6f6e
    893c:	75636573 	strbvc	r6, [r3, #-1395]!	; 0xfffffa8d
    8940:	63006572 	movwvs	r6, #1394	; 0x572
    8944:	73755c3a 	cmnvc	r5, #14848	; 0x3a00
    8948:	5c737265 	lfmpl	f7, 2, [r3], #-404	; 0xfffffe6c
    894c:	6f646978 	svcvs	0x00646978
    8950:	72705c6e 	rsbsvc	r5, r0, #28160	; 0x6e00
    8954:	6172676f 	cmnvs	r2, pc, ror #14
    8958:	72615c6d 	rsbvc	r5, r1, #27904	; 0x6d00
    895c:	63675f6d 	cmnvs	r7, #436	; 0x1b4
    8960:	63675c63 	cmnvs	r7, #25344	; 0x6300
    8964:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
    8968:	6f6e2d6d 	svcvs	0x006e2d6d
    896c:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    8970:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
    8974:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
    8978:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
    897c:	30312e31 	eorscc	r2, r1, r1, lsr lr
    8980:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    8984:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    8988:	61652d65 	cmnvs	r5, r5, ror #26
    898c:	695c6962 	ldmdbvs	ip, {r1, r5, r6, r8, fp, sp, lr}^
    8990:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    8994:	6d5c6564 	cfldr64vs	mvdx6, [ip, #-400]	; 0xfffffe70
    8998:	69686361 	stmdbvs	r8!, {r0, r5, r6, r8, r9, sp, lr}^
    899c:	6300656e 	movwvs	r6, #1390	; 0x56e
    89a0:	73755c3a 	cmnvc	r5, #14848	; 0x3a00
    89a4:	5c737265 	lfmpl	f7, 2, [r3], #-404	; 0xfffffe6c
    89a8:	6f646978 	svcvs	0x00646978
    89ac:	72705c6e 	rsbsvc	r5, r0, #28160	; 0x6e00
    89b0:	6172676f 	cmnvs	r2, pc, ror #14
    89b4:	72615c6d 	rsbvc	r5, r1, #27904	; 0x6d00
    89b8:	63675f6d 	cmnvs	r7, #436	; 0x1b4
    89bc:	63675c63 	cmnvs	r7, #25344	; 0x6300
    89c0:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
    89c4:	6f6e2d6d 	svcvs	0x006e2d6d
    89c8:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    89cc:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
    89d0:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
    89d4:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
    89d8:	30312e31 	eorscc	r2, r1, r1, lsr lr
    89dc:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    89e0:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    89e4:	61652d65 	cmnvs	r5, r5, ror #26
    89e8:	695c6962 	ldmdbvs	ip, {r1, r5, r6, r8, fp, sp, lr}^
    89ec:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    89f0:	735c6564 	cmpvc	ip, #100, 10	; 0x19000000
    89f4:	00007379 	andeq	r7, r0, r9, ror r3
    89f8:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
    89fc:	2e6d7361 	cdpcs	3, 6, cr7, cr13, cr1, {3}
    8a00:	00010063 	andeq	r0, r1, r3, rrx
    8a04:	65645f00 	strbvs	r5, [r4, #-3840]!	; 0xfffff100
    8a08:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
    8a0c:	79745f74 	ldmdbvc	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    8a10:	2e736570 	mrccs	5, 3, r6, cr3, cr0, {3}
    8a14:	00020068 	andeq	r0, r2, r8, rrx
    8a18:	74735f00 	ldrbtvc	r5, [r3], #-3840	; 0xfffff100
    8a1c:	746e6964 	strbtvc	r6, [lr], #-2404	; 0xfffff69c
    8a20:	0300682e 	movweq	r6, #2094	; 0x82e
    8a24:	6f700000 	svcvs	0x00700000
    8a28:	616d7472 	smcvs	55106	; 0xd742
    8a2c:	636f7263 	cmnvs	pc, #805306374	; 0x30000006
    8a30:	6f6d6d6f 	svcvs	0x006d6d6f
    8a34:	00682e6e 	rsbeq	r2, r8, lr, ror #28
    8a38:	00000001 	andeq	r0, r0, r1
    8a3c:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    8a40:	00377002 	eorseq	r7, r7, r2
    8a44:	00f90310 	rscseq	r0, r9, r0, lsl r3
    8a48:	13090501 	movwne	r0, #38145	; 0x9501
    8a4c:	03060505 	movweq	r0, #25861	; 0x6505
    8a50:	022e0813 	eoreq	r0, lr, #1245184	; 0x130000
    8a54:	01010003 	tsteq	r1, r3
    8a58:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    8a5c:	00000002 	andeq	r0, r0, r2
    8a60:	01930300 	orrseq	r0, r3, r0, lsl #6
    8a64:	13050501 	movwne	r0, #21761	; 0x5501
    8a68:	03060105 	movweq	r0, #24837	; 0x6105
    8a6c:	0100820c 	tsteq	r0, ip, lsl #4
    8a70:	00010501 	andeq	r0, r1, r1, lsl #10
    8a74:	00000205 	andeq	r0, r0, r5, lsl #4
    8a78:	a4030000 	strge	r0, [r3], #-0
    8a7c:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    8a80:	06010513 			; <UNDEFINED> instruction: 0x06010513
    8a84:	00740a03 	rsbseq	r0, r4, r3, lsl #20
    8a88:	01050101 	tsteq	r5, r1, lsl #2
    8a8c:	00020500 	andeq	r0, r2, r0, lsl #10
    8a90:	03000000 	movweq	r0, #0
    8a94:	050101b3 	streq	r0, [r1, #-435]	; 0xfffffe4d
    8a98:	01051305 	tsteq	r5, r5, lsl #6
    8a9c:	740a0306 	strvc	r0, [sl], #-774	; 0xfffffcfa
    8aa0:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    8aa4:	02050001 	andeq	r0, r5, #1
    8aa8:	1000379c 	mulne	r0, ip, r7
    8aac:	0101c203 	tsteq	r1, r3, lsl #4
    8ab0:	05130505 	ldreq	r0, [r3, #-1285]	; 0xfffffafb
    8ab4:	10030601 	andne	r0, r3, r1, lsl #12
    8ab8:	000302c8 	andeq	r0, r3, r8, asr #5
    8abc:	01050101 	tsteq	r5, r1, lsl #2
    8ac0:	bc020500 	cfstr32lt	mvfx0, [r2], {-0}
    8ac4:	03100037 	tsteq	r0, #55	; 0x37
    8ac8:	050101d7 	streq	r0, [r1, #-471]	; 0xfffffe29
    8acc:	01051305 	tsteq	r5, r5, lsl #6
    8ad0:	ac0c0306 	stcge	3, cr0, [ip], {6}
    8ad4:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    8ad8:	02050001 	andeq	r0, r5, #1
    8adc:	100037d2 	ldrdne	r3, [r0], -r2
    8ae0:	0101e803 	tsteq	r1, r3, lsl #16
    8ae4:	05130505 	ldreq	r0, [r3, #-1285]	; 0xfffffafb
    8ae8:	0a030601 	beq	ca2f4 <__HEAP_SIZE+0xc92f4>
    8aec:	01010074 	tsteq	r1, r4, ror r0
    8af0:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    8af4:	0037e002 	eorseq	lr, r7, r2
    8af8:	02eb0310 	rsceq	r0, fp, #16, 6	; 0x40000000
    8afc:	13090501 	movwne	r0, #38145	; 0x9501
    8b00:	03060505 	movweq	r0, #25861	; 0x6505
    8b04:	0122022d 			; <UNDEFINED> instruction: 0x0122022d
    8b08:	01000202 	tsteq	r0, r2, lsl #4
    8b0c:	00050501 	andeq	r0, r5, r1, lsl #10
    8b10:	38280205 	stmdacc	r8!, {r0, r2, r9}
    8b14:	c7031000 	strgt	r1, [r3, -r0]
    8b18:	09050103 	stmdbeq	r5, {r0, r1, r8}
    8b1c:	06050513 			; <UNDEFINED> instruction: 0x06050513
    8b20:	02900b03 	addseq	r0, r0, #3072	; 0xc00
    8b24:	01010003 	tsteq	r1, r3
    8b28:	00000082 	andeq	r0, r0, r2, lsl #1
    8b2c:	00360003 	eorseq	r0, r6, r3
    8b30:	01020000 	mrseq	r0, (UNDEF: 2)
    8b34:	000d0efb 	strdeq	r0, [sp], -fp
    8b38:	01010101 	tsteq	r1, r1, lsl #2
    8b3c:	01000000 	mrseq	r0, (UNDEF: 0)
    8b40:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
    8b44:	6174732f 	cmnvs	r4, pc, lsr #6
    8b48:	70757472 	rsbsvc	r7, r5, r2, ror r4
    8b4c:	6363672f 	cmnvs	r3, #12320768	; 0xbc0000
    8b50:	74730000 	ldrbtvc	r0, [r3], #-0
    8b54:	75747261 	ldrbvc	r7, [r4, #-609]!	; 0xfffffd9f
    8b58:	52415f70 	subpl	r5, r1, #112, 30	; 0x1c0
    8b5c:	334d434d 	movtcc	r4, #54093	; 0xd34d
    8b60:	00732e33 	rsbseq	r2, r3, r3, lsr lr
    8b64:	00000001 	andeq	r0, r0, r1
    8b68:	60020500 	andvs	r0, r2, r0, lsl #10
    8b6c:	03100038 	tsteq	r0, #56	; 0x38
    8b70:	210100d3 	ldrdcs	r0, [r1, -r3]
    8b74:	362f2130 			; <UNDEFINED> instruction: 0x362f2130
    8b78:	21232130 			; <UNDEFINED> instruction: 0x21232130
    8b7c:	21212121 			; <UNDEFINED> instruction: 0x21212121
    8b80:	21212123 			; <UNDEFINED> instruction: 0x21212123
    8b84:	23212221 			; <UNDEFINED> instruction: 0x23212221
    8b88:	21212321 			; <UNDEFINED> instruction: 0x21212321
    8b8c:	23212121 			; <UNDEFINED> instruction: 0x23212121
    8b90:	22212121 	eorcs	r2, r1, #1073741832	; 0x40000008
    8b94:	0e032321 	cdpeq	3, 0, cr2, cr3, cr1, {1}
    8b98:	2009032e 	andcs	r0, r9, lr, lsr #6
    8b9c:	2e7faf03 	cdpcs	15, 7, cr10, cr15, cr3, {0}
    8ba0:	2e0c0331 	mcrcs	3, 0, r0, cr12, cr1, {1}
    8ba4:	2e15032f 	cdpcs	3, 1, cr0, cr5, cr15, {1}
    8ba8:	0002022f 	andeq	r0, r2, pc, lsr #4
    8bac:	007f0101 	rsbseq	r0, pc, r1, lsl #2
    8bb0:	00030000 	andeq	r0, r3, r0
    8bb4:	0000004e 	andeq	r0, r0, lr, asr #32
    8bb8:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
    8bbc:	0101000d 	tsteq	r1, sp
    8bc0:	00000101 	andeq	r0, r0, r1, lsl #2
    8bc4:	00000100 	andeq	r0, r0, r0, lsl #2
    8bc8:	2f2e2e01 	svccs	0x002e2e01
    8bcc:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    8bd0:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    8bd4:	69747562 	ldmdbvs	r4!, {r1, r5, r6, r8, sl, ip, sp, lr}^
    8bd8:	662f736c 	strtvs	r7, [pc], -ip, ror #6
    8bdc:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
    8be0:	6d75642d 	cfldrdvs	mvd6, [r5, #-180]!	; 0xffffff4c
    8be4:	70632f70 	rsbvc	r2, r3, r0, ror pc
    8be8:	6f632f75 	svcvs	0x00632f75
    8bec:	78657472 	stmdavc	r5!, {r1, r4, r5, r6, sl, ip, sp, lr}^
    8bf0:	33336d2d 	teqcc	r3, #2880	; 0xb40
    8bf4:	61660000 	cmnvs	r6, r0
    8bf8:	2d746c75 	ldclcs	12, cr6, [r4, #-468]!	; 0xfffffe2c
    8bfc:	2e636367 	cdpcs	3, 6, cr6, cr3, cr7, {3}
    8c00:	00010073 	andeq	r0, r1, r3, ror r0
    8c04:	05000000 	streq	r0, [r0, #-0]
    8c08:	0038d002 	eorseq	sp, r8, r2
    8c0c:	01190310 	tsteq	r9, r0, lsl r3
    8c10:	21212121 			; <UNDEFINED> instruction: 0x21212121
    8c14:	2f222f22 	svccs	0x00222f22
    8c18:	23212121 			; <UNDEFINED> instruction: 0x23212121
    8c1c:	2f212f30 	svccs	0x00212f30
    8c20:	2f212131 	svccs	0x00212131
    8c24:	2e650321 	cdpcs	3, 6, cr0, cr5, cr1, {1}
    8c28:	2e160330 	mrccs	3, 0, r0, cr6, cr0, {1}
    8c2c:	01000202 	tsteq	r0, r2, lsl #4
    8c30:	Address 0x00008c30 is out of bounds.


Disassembly of section .debug_str:

00000000 <.debug_str>:
    __asm volatile ( "mrs %0, ipsr" : "=r" ( ulCurrentInterrupt )::"memory" );
       0:	53434344 	movtpl	r4, #13124	; 0x3344
    if( ulCurrentInterrupt == 0 )
       4:	61700057 	cmnvs	r0, r7, asr r0
        xReturn = pdFALSE;
       8:	656d6172 	strbvs	r6, [sp, #-370]!	; 0xfffffe8e
}
       c:	73726574 	cmnvc	r2, #116, 10	; 0x1d000000
    ( pxList->uxNumberOfItems ) = ( UBaseType_t ) ( pxList->uxNumberOfItems + 1U );
      10:	625f5f00 	subsvs	r5, pc, #0, 30
}
      14:	746c6975 	strbtvc	r6, [ip], #-2421	; 0xfffff68b
      18:	705f6e69 	subsvc	r6, pc, r9, ror #28
      1c:	00737475 	rsbseq	r7, r3, r5, ror r4
      20:	72646461 	rsbvc	r6, r4, #1627389952	; 0x61000000
      24:	48637500 	stmdami	r3!, {r8, sl, ip, sp, lr}^
      28:	00706165 	rsbseq	r6, r0, r5, ror #2
      2c:	41464d4d 	cmpmi	r6, sp, asr #26
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
      30:	68730052 	ldmdavs	r3!, {r1, r4, r6}^
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
      34:	2074726f 	rsbscs	r7, r4, pc, ror #4
      38:	00746e69 	rsbseq	r6, r4, r9, ror #28
      3c:	5246564d 	subpl	r5, r6, #80740352	; 0x4d00000
      40:	616d0031 	cmnvs	sp, r1, lsr r0
        BaseType_t xReturn = pdFAIL;
      44:	745f6e69 	ldrbvc	r6, [pc], #-3689	; 4c <__STACKSEAL_SIZE+0x4c>
    }
      48:	006b7361 	rsbeq	r7, fp, r1, ror #6
                pxBlock = heapPROTECT_BLOCK_POINTER( pxBlock->pxNextFreeBlock );
      4c:	505f4449 	subspl	r4, pc, r9, asr #8
            while( pxBlock != pxEnd )
      50:	76005246 	strvc	r5, [r0], -r6, asr #4
      54:	6b736154 	blvs	1cd85ac <__RAM_SIZE+0x1bd85ac>
                if( pxBlock->xBlockSize > xMaxSize )
      58:	616c6544 	cmnvs	ip, r4, asr #10
      5c:	616d0079 	smcvs	53257	; 0xd009
                if( pxBlock->xBlockSize < xMinSize )
      60:	6c006e69 	stcvs	14, cr6, [r0], {105}	; 0x69
                    xMinSize = pxBlock->xBlockSize;
      64:	20676e6f 	rsbcs	r6, r7, pc, ror #28
      68:	62756f64 	rsbsvs	r6, r5, #100, 30	; 0x190
      6c:	5f00656c 	svcpl	0x0000656c
      70:	6e69755f 	mcrvs	5, 3, r7, cr9, cr15, {2}
      74:	5f323374 	svcpl	0x00323374
      78:	43440074 	movtmi	r0, #16500	; 0x4074
      7c:	564d4943 	strbpl	r4, [sp], -r3, asr #18
            prvUnlockQueue( pxQueue );
      80:	6d004341 	stcvs	3, cr4, [r0, #-260]	; 0xfffffefc
            ( void ) xTaskResumeAll();
      84:	5f6e6961 	svcpl	0x006e6961
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
      88:	6b736174 	blvs	1cd8660 <__RAM_SIZE+0x1bd8660>
      8c:	696e695f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, sp, lr}^
      90:	50430074 	subpl	r0, r3, r4, ror r0
        taskENTER_CRITICAL();
      94:	00444955 	subeq	r4, r4, r5, asr r9
            if( uxSemaphoreCount > ( UBaseType_t ) 0 )
      98:	5246564d 	subpl	r5, r6, #80740352	; 0x4d00000
                if( xTicksToWait == ( TickType_t ) 0 )
      9c:	61760030 	cmnvs	r6, r0, lsr r0
      a0:	0065756c 	rsbeq	r7, r5, ip, ror #10
                else if( xEntryTimeSet == pdFALSE )
      a4:	75625f5f 	strbvc	r5, [r2, #-3935]!	; 0xfffff0a1
        taskEXIT_CRITICAL();
      a8:	69746c69 	ldmdbvs	r4!, {r0, r3, r5, r6, sl, fp, sp, lr}^
        vTaskSuspendAll();
      ac:	656d5f6e 	strbvs	r5, [sp, #-3950]!	; 0xfffff092
        prvLockQueue( pxQueue );
      b0:	7465736d 	strbtvc	r7, [r5], #-877	; 0xfffffc93
      b4:	53455200 	movtpl	r5, #20992	; 0x5200
      b8:	45565245 	ldrbmi	r5, [r6, #-581]	; 0xfffffdbb
      bc:	52003544 	andpl	r3, r0, #68, 10	; 0x11000000
      c0:	52455345 	subpl	r5, r5, #335544321	; 0x14000001
      c4:	36444556 			; <UNDEFINED> instruction: 0x36444556
      c8:	73657400 	cmnvc	r5, #0, 8
      cc:	74003174 	strvc	r3, [r0], #-372	; 0xfffffe8c
        if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
      d0:	32747365 	rsbscc	r7, r4, #-1811939327	; 0x94000001
      d4:	73657400 	cmnvc	r5, #0, 8
      d8:	53003374 	movwpl	r3, #884	; 0x374
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
      dc:	00524954 	subseq	r4, r2, r4, asr r9
      e0:	415f4449 	cmpmi	pc, r9, asr #8
                    if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
      e4:	66005246 	strvs	r5, [r0], -r6, asr #4
      e8:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
                vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
      ec:	6d75645f 	cfldrdvs	mvd6, [r5, #-380]!	; 0xfffffe84
      f0:	6d625f70 	stclvs	15, cr5, [r2, #-448]!	; 0xfffffe40
                prvUnlockQueue( pxQueue );
      f4:	6174735f 	cmnvs	r4, pc, asr r3
      f8:	705f6b63 	subsvc	r6, pc, r3, ror #22
                if( xTaskResumeAll() == pdFALSE )
      fc:	746e696f 	strbtvc	r6, [lr], #-2415	; 0xfffff691
     100:	49434400 	stmdbmi	r3, {sl, lr}^
                    taskYIELD_WITHIN_API();
     104:	48005753 	stmdami	r0, {r0, r1, r4, r6, r8, r9, sl, ip, lr}
                    if( xInheritanceOccurred != pdFALSE )
     108:	46647261 	strbtmi	r7, [r4], -r1, ror #4
                return errQUEUE_EMPTY;
     10c:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
                        taskENTER_CRITICAL();
     110:	6e61485f 	mcrvs	8, 3, r4, cr1, cr15, {2}
                            uxHighestWaitingPriority = prvGetDisinheritPriorityAfterTimeout( pxQueue );
     114:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
     118:	67654c5f 			; <UNDEFINED> instruction: 0x67654c5f
                            vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
     11c:	79636e65 	stmdbvc	r3!, {r0, r2, r5, r6, r9, sl, fp, sp, lr}^
                        taskEXIT_CRITICAL();
     120:	46564d00 	ldrbmi	r4, [r6], -r0, lsl #26
     124:	6c003252 	sfmvs	f3, 4, [r0], {82}	; 0x52
     128:	20676e6f 	rsbcs	r6, r7, pc, ror #28
     12c:	676e6f6c 	strbvs	r6, [lr, -ip, ror #30]!
     130:	746e6920 	strbtvc	r6, [lr], #-2336	; 0xfffff6e0
     134:	41464200 	mrsmi	r4, (UNDEF: 102)
     138:	54760052 	ldrbtpl	r0, [r6], #-82	; 0xffffffae
     13c:	536b7361 	cmnpl	fp, #-2080374783	; 0x84000001
     140:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
     144:	65686353 	strbvs	r6, [r8, #-851]!	; 0xfffffcad
     148:	656c7564 	strbvs	r7, [ip, #-1380]!	; 0xfffffa9c
     14c:	2f2e0072 	svccs	0x002e0072
     150:	6c707061 	ldclvs	0, cr7, [r0], #-388	; 0xfffffe7c
     154:	74616369 	strbtvc	r6, [r1], #-873	; 0xfffffc97
     158:	2f6e6f69 	svccs	0x006e6f69
     15c:	6e69616d 	powvsez	f6, f1, #5.0
     160:	4900632e 	stmdbmi	r0, {r1, r2, r3, r5, r8, r9, sp, lr}
     164:	4d4d5f44 	stclmi	15, cr5, [sp, #-272]	; 0xfffffef0
     168:	74005246 	strvc	r5, [r0], #-582	; 0xfffffdba
     16c:	61546b73 	cmpvs	r4, r3, ror fp
     170:	6f436b73 	svcvs	0x00436b73
     174:	6f72746e 	svcvs	0x0072746e
     178:	6f6c426c 	svcvs	0x006c426c
     17c:	5f006b63 	svcpl	0x00006b63
     180:	6e69755f 	mcrvs	5, 3, r7, cr9, cr15, {2}
     184:	745f3874 	ldrbvc	r3, [pc], #-2164	; 18c <__STACKSEAL_SIZE+0x18c>
     188:	554e4700 	strbpl	r4, [lr, #-1792]	; 0xfffff900
     18c:	37314320 	ldrcc	r4, [r1, -r0, lsr #6]!
     190:	2e303120 	rsfcssp	f3, f0, f0
     194:	20312e33 	eorscs	r2, r1, r3, lsr lr
     198:	31323032 	teqcc	r2, r2, lsr r0
     19c:	34323830 	ldrtcc	r3, [r2], #-2096	; 0xfffff7d0
     1a0:	65722820 	ldrbvs	r2, [r2, #-2080]!	; 0xfffff7e0
     1a4:	7361656c 	cmnvc	r1, #108, 10	; 0x1b000000
     1a8:	2d202965 			; <UNDEFINED> instruction: 0x2d202965
     1ac:	7570636d 	ldrbvc	r6, [r0, #-877]!	; 0xfffffc93
     1b0:	726f633d 	rsbvc	r6, pc, #-201326592	; 0xf4000000
     1b4:	2d786574 	cfldr64cs	mvdx6, [r8, #-464]!	; 0xfffffe30
     1b8:	2033336d 	eorscs	r3, r3, sp, ror #6
     1bc:	70666d2d 	rsbvc	r6, r6, sp, lsr #26
     1c0:	70663d75 	rsbvc	r3, r6, r5, ror sp
     1c4:	732d3576 			; <UNDEFINED> instruction: 0x732d3576
     1c8:	31642d70 	smccc	17104	; 0x42d0
     1cc:	6d2d2036 	stcvs	0, cr2, [sp, #-216]!	; 0xffffff28
     1d0:	616f6c66 	cmnvs	pc, r6, ror #24
     1d4:	62612d74 	rsbvs	r2, r1, #116, 26	; 0x1d00
     1d8:	61683d69 	cmnvs	r8, r9, ror #26
     1dc:	2d206472 	cfstrscs	mvf6, [r0, #-456]!	; 0xfffffe38
     1e0:	7568746d 	strbvc	r7, [r8, #-1133]!	; 0xfffffb93
     1e4:	2d20626d 	sfmcs	f6, 4, [r0, #-436]!	; 0xfffffe4c
     1e8:	6372616d 	cmnvs	r2, #1073741851	; 0x4000001b
     1ec:	72613d68 	rsbvc	r3, r1, #104, 26	; 0x1a00
     1f0:	2d38766d 	ldccs	6, cr7, [r8, #-436]!	; 0xfffffe4c
     1f4:	616d2e6d 	cmnvs	sp, sp, ror #28
     1f8:	642b6e69 	strtvs	r6, [fp], #-3689	; 0xfffff197
     1fc:	662b7073 			; <UNDEFINED> instruction: 0x662b7073
     200:	672d2070 			; <UNDEFINED> instruction: 0x672d2070
     204:	64672d20 	strbtvs	r2, [r7], #-3360	; 0xfffff2e0
     208:	66726177 			; <UNDEFINED> instruction: 0x66726177
     20c:	2d20322d 	sfmcs	f3, 4, [r0, #-180]!	; 0xffffff4c
     210:	2d20674f 	stccs	7, cr6, [r0, #-316]!	; 0xfffffec4
     214:	74616466 	strbtvc	r6, [r1], #-1126	; 0xfffffb9a
     218:	65732d61 	ldrbvs	r2, [r3, #-3425]!	; 0xfffff29f
     21c:	6f697463 	svcvs	0x00697463
     220:	2d20736e 	stccs	3, cr7, [r0, #-440]!	; 0xfffffe48
     224:	6e756666 	cdpvs	6, 7, cr6, cr5, cr6, {3}
     228:	6f697463 	svcvs	0x00697463
     22c:	65732d6e 	ldrbvs	r2, [r3, #-3438]!	; 0xfffff292
     230:	6f697463 	svcvs	0x00697463
     234:	2d20736e 	stccs	3, cr7, [r0, #-440]!	; 0xfffffe48
     238:	2d6f6e66 	stclcs	14, cr6, [pc, #-408]!	; a8 <__STACKSEAL_SIZE+0xa8>
     23c:	65637865 	strbvs	r7, [r3, #-2149]!	; 0xfffff79b
     240:	6f697470 	svcvs	0x00697470
     244:	6600736e 	strvs	r7, [r0], -lr, ror #6
     248:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
     24c:	6d75645f 	cfldrdvs	mvd6, [r5, #-380]!	; 0xfffffe84
     250:	61635f70 	smcvs	13808	; 0x35f0
     254:	74736c6c 	ldrbtvc	r6, [r3], #-3180	; 0xfffff394
     258:	006b6361 	rsbeq	r6, fp, r1, ror #6
     25c:	52534643 	subspl	r4, r3, #70254592	; 0x4300000
     260:	49434900 	stmdbmi	r3, {r8, fp, lr}^
     264:	554c4c41 	strbpl	r4, [ip, #-3137]	; 0xfffff3bf
     268:	49434400 	stmdbmi	r3, {sl, lr}^
     26c:	4341564d 	movtmi	r5, #5709	; 0x164d
     270:	736e7500 	cmnvc	lr, #0, 10
     274:	656e6769 	strbvs	r6, [lr, #-1897]!	; 0xfffff897
     278:	68632064 	stmdavs	r3!, {r2, r5, r6, sp}^
     27c:	49007261 	stmdbmi	r0, {r0, r5, r6, r9, ip, sp, lr}
     280:	564d4943 	strbpl	r4, [sp], -r3, asr #18
     284:	6d005541 	cfstr32vs	mvfx5, [r0, #-260]	; 0xfffffefc
     288:	5f6e6961 	svcpl	0x006e6961
     28c:	6b736174 	blvs	1cd8864 <__RAM_SIZE+0x1bd8864>
     290:	746e655f 	strbtvc	r6, [lr], #-1375	; 0xfffffaa1
     294:	49007972 	stmdbmi	r0, {r1, r4, r5, r6, r8, fp, ip, sp, lr}
     298:	53495f44 	movtpl	r5, #40772	; 0x9f44
     29c:	66005241 	strvs	r5, [r0], -r1, asr #4
     2a0:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
     2a4:	6d75645f 	cfldrdvs	mvd6, [r5, #-380]!	; 0xfffffe84
     2a8:	6e695f70 	mcrvs	15, 3, r5, cr9, cr0, {3}
     2ac:	53007469 	movwpl	r7, #1129	; 0x469
     2b0:	545f4243 	ldrbpl	r4, [pc], #-579	; 2b8 <__STACKSEAL_SIZE+0x2b8>
     2b4:	00657079 	rsbeq	r7, r5, r9, ror r0
     2b8:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
     2bc:	00726574 	rsbseq	r6, r2, r4, ror r5
     2c0:	52504853 	subspl	r4, r0, #5439488	; 0x530000
     2c4:	6e6f6c00 	cdpvs	12, 6, cr6, cr15, cr0, {0}
     2c8:	6f6c2067 	svcvs	0x006c2067
     2cc:	7520676e 	strvc	r6, [r0, #-1902]!	; 0xfffff892
     2d0:	6769736e 	strbvs	r7, [r9, -lr, ror #6]!
     2d4:	2064656e 	rsbcs	r6, r4, lr, ror #10
     2d8:	00746e69 	rsbseq	r6, r4, r9, ror #28
     2dc:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
     2e0:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
     2e4:	67696c61 	strbvs	r6, [r9, -r1, ror #24]!
     2e8:	72745f6e 	rsbsvc	r5, r4, #440	; 0x1b8
     2ec:	65676769 	strbvs	r6, [r7, #-1897]!	; 0xfffff897
     2f0:	61540072 	cmpvs	r4, r2, ror r0
     2f4:	61486b73 	hvcvs	34483	; 0x86b3
     2f8:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
     2fc:	5300745f 	movwpl	r7, #1119	; 0x45f
     300:	00525346 	subseq	r5, r2, r6, asr #6
     304:	4d434344 	stclmi	3, cr4, [r3, #-272]	; 0xfffffef0
     308:	00434156 	subeq	r4, r3, r6, asr r1
     30c:	53434853 	movtpl	r4, #14419	; 0x3853
     310:	5f5f0052 	svcpl	0x005f0052
     314:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
     318:	43005f5f 	movwmi	r5, #3935	; 0xf5f
     31c:	4c455353 	mcrrmi	3, 5, r5, r5, cr3
     320:	68730052 	ldmdavs	r3!, {r1, r4, r6}^
     324:	2074726f 	rsbscs	r7, r4, pc, ror #4
     328:	69736e75 	ldmdbvs	r3!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
     32c:	64656e67 	strbtvs	r6, [r5], #-3687	; 0xfffff199
     330:	746e6920 	strbtvc	r6, [lr], #-2336	; 0xfffff6e0
     334:	53434300 	movtpl	r4, #13056	; 0x3300
     338:	00524449 	subseq	r4, r2, r9, asr #8
     33c:	4d434344 	stclmi	3, cr4, [r3, #-272]	; 0xfffffef0
     340:	00554156 	subseq	r4, r5, r6, asr r1
     344:	61666544 	cmnvs	r6, r4, asr #10
     348:	5f746c75 	svcpl	0x00746c75
     34c:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
     350:	0072656c 	rsbseq	r6, r2, ip, ror #10
     354:	524f5456 	subpl	r5, pc, #1442840576	; 0x56000000
     358:	53464400 	movtpl	r4, #25600	; 0x6400
     35c:	61750052 	cmnvs	r5, r2, asr r0
     360:	695f7472 	ldmdbvs	pc, {r1, r4, r5, r6, sl, ip, sp, lr}^	; <UNPREDICTABLE>
     364:	0074696e 	rsbseq	r6, r4, lr, ror #18
     368:	73615478 	cmnvc	r1, #120, 8	; 0x78000000
     36c:	6572436b 	ldrbvs	r4, [r2, #-875]!	; 0xfffffc95
     370:	00657461 	rsbeq	r7, r5, r1, ror #8
     374:	52534648 	subspl	r4, r3, #72, 12	; 0x4800000
     378:	53455200 	movtpl	r5, #20992	; 0x5200
     37c:	45565245 	ldrbmi	r5, [r6, #-581]	; 0xfffffdbb
     380:	52003344 	andpl	r3, r0, #68, 6	; 0x10000001
     384:	52455345 	subpl	r5, r5, #335544321	; 0x14000001
     388:	34444556 	strbcc	r4, [r4], #-1366	; 0xfffffaaa
     38c:	5c3a4300 	ldcpl	3, cr4, [sl], #-0
     390:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
     394:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
     398:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
     39c:	65646f63 	strbvs	r6, [r4, #-3939]!	; 0xfffff09d
     3a0:	7469675c 	strbtvc	r6, [r9], #-1884	; 0xfffff8a4
     3a4:	5c627568 	cfstr64pl	mvdx7, [r2], #-416	; 0xfffffe60
     3a8:	756d6571 	strbvc	r6, [sp, #-1393]!	; 0xfffffa8f
     3ac:	6d69732d 	stclvs	3, cr7, [r9, #-180]!	; 0xffffff4c
     3b0:	74616c75 	strbtvc	r6, [r1], #-3189	; 0xfffff38b
     3b4:	625c726f 	subsvs	r7, ip, #-268435450	; 0xf0000006
     3b8:	6472616f 	ldrbtvs	r6, [r2], #-367	; 0xfffffe91
     3bc:	706d5c73 	rsbvc	r5, sp, r3, ror ip
     3c0:	612d3273 			; <UNDEFINED> instruction: 0x612d3273
     3c4:	3530356e 	ldrcc	r3, [r0, #-1390]!	; 0xfffffa92
     3c8:	6572465c 	ldrbvs	r4, [r2, #-1628]!	; 0xfffff9a4
     3cc:	4f545265 	svcmi	0x00545265
     3d0:	46530053 			; <UNDEFINED> instruction: 0x46530053
     3d4:	66005241 	strvs	r5, [r0], -r1, asr #4
     3d8:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
     3dc:	7669645f 			; <UNDEFINED> instruction: 0x7669645f
     3e0:	72657a5f 	rsbvc	r7, r5, #389120	; 0x5f000
     3e4:	72745f6f 	rsbsvc	r5, r4, #444	; 0x1bc
     3e8:	65676769 	strbvs	r6, [r7, #-1897]!	; 0xfffff897
     3ec:	43440072 	movtmi	r0, #16498	; 0x4072
     3f0:	57534943 	ldrbpl	r4, [r3, -r3, asr #18]
     3f4:	53455200 	movtpl	r5, #20992	; 0x5200
     3f8:	45565245 	ldrbmi	r5, [r6, #-581]	; 0xfffffdbb
     3fc:	43003744 	movwmi	r3, #1860	; 0x744
     400:	5244494c 	subpl	r4, r4, #76, 18	; 0x130000
     404:	756f6300 	strbvc	r6, [pc, #-768]!	; 10c <__STACKSEAL_SIZE+0x10c>
     408:	7400746e 	strvc	r7, [r0], #-1134	; 0xfffffb92
     40c:	30747365 	rsbscc	r7, r4, r5, ror #6
     410:	75616600 	strbvc	r6, [r1, #-1536]!	; 0xfffffa00
     414:	645f746c 	ldrbvs	r7, [pc], #-1132	; 41c <__STACKSEAL_SIZE+0x41c>
     418:	5f706d75 	svcpl	0x00706d75
     41c:	735f6d62 	cmpvc	pc, #6272	; 0x1880
     420:	6b636174 	blvs	18d89f8 <__RAM_SIZE+0x17d89f8>
     424:	6174735f 	cmnvs	r4, pc, asr r3
     428:	74007472 	strvc	r7, [r0], #-1138	; 0xfffffb8e
     42c:	34747365 	ldrbtcc	r7, [r4], #-869	; 0xfffffc9b
     430:	73657400 	cmnvc	r5, #0, 8
     434:	41003574 	tstmi	r0, r4, ror r5
     438:	00525346 	subseq	r5, r2, r6, asr #6
     43c:	41495042 	cmpmi	r9, r2, asr #32
     440:	49004c4c 	stmdbmi	r0, {r2, r3, r6, sl, fp, lr}
     444:	46445f44 	strbmi	r5, [r4], -r4, asr #30
     448:	43490052 	movtmi	r0, #36946	; 0x9052
     44c:	43005253 	movwmi	r5, #595	; 0x253
     450:	52434150 	subpl	r4, r3, #80, 2
     454:	52494100 	subpl	r4, r9, #0, 2
     458:	4e005243 	cdpmi	2, 0, cr5, cr0, cr3, {2}
     45c:	52434153 	subpl	r4, r3, #-1073741804	; 0xc0000014
     460:	612f2e00 			; <UNDEFINED> instruction: 0x612f2e00
     464:	696c7070 	stmdbvs	ip!, {r4, r5, r6, ip, sp, lr}^
     468:	69746163 	ldmdbvs	r4!, {r0, r1, r5, r6, r8, sp, lr}^
     46c:	732f6e6f 			; <UNDEFINED> instruction: 0x732f6e6f
     470:	65747379 	ldrbvs	r7, [r4, #-889]!	; 0xfffffc87
     474:	52415f6d 	subpl	r5, r1, #436	; 0x1b4
     478:	334d434d 	movtcc	r4, #54093	; 0xd34d
     47c:	00632e33 	rsbeq	r2, r3, r3, lsr lr
     480:	74737953 	ldrbtvc	r7, [r3], #-2387	; 0xfffff6ad
     484:	6f436d65 	svcvs	0x00436d65
     488:	6c436572 	cfstr64vs	mvdx6, [r3], {114}	; 0x72
     48c:	556b636f 	strbpl	r6, [fp, #-879]!	; 0xfffffc91
     490:	74616470 	strbtvc	r6, [r1], #-1136	; 0xfffffb90
     494:	79530065 	ldmdbvc	r3, {r0, r2, r5, r6}^
     498:	6d657473 	cfstrdvs	mvd7, [r5, #-460]!	; 0xfffffe34
     49c:	65726f43 	ldrbvs	r6, [r2, #-3907]!	; 0xfffff0bd
     4a0:	636f6c43 	cmnvs	pc, #17152	; 0x4300
     4a4:	5f5f006b 	svcpl	0x005f006b
     4a8:	74636556 	strbtvc	r6, [r3], #-1366	; 0xfffffaaa
     4ac:	0073726f 	rsbseq	r7, r3, pc, ror #4
     4b0:	74737953 	ldrbtvc	r7, [r3], #-2387	; 0xfffff6ad
     4b4:	6e496d65 	cdpvs	13, 4, cr6, cr9, cr5, {3}
     4b8:	56007469 	strpl	r7, [r0], -r9, ror #8
     4bc:	4f544345 	svcmi	0x00544345
     4c0:	41545f52 	cmpmi	r4, r2, asr pc
     4c4:	5f454c42 	svcpl	0x00454c42
     4c8:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
     4cc:	615f5f00 	cmpvs	pc, r0, lsl #30
     4d0:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     4d4:	6432695f 	ldrtvs	r6, [r2], #-2399	; 0xfffff6a1
     4d8:	776f7000 	strbvc	r7, [pc, -r0]!
     4dc:	65003031 	strvs	r3, [r0, #-49]	; 0xffffffcf
     4e0:	00327078 	eorseq	r7, r2, r8, ror r0
     4e4:	5f74756f 	svcpl	0x0074756f
     4e8:	5f746366 	svcpl	0x00746366
     4ec:	70617277 	rsbvc	r7, r1, r7, ror r2
     4f0:	70786500 	rsbsvc	r6, r8, r0, lsl #10
     4f4:	006c6176 	rsbeq	r6, ip, r6, ror r1
     4f8:	74756f5f 	ldrbtvc	r6, [r5], #-3935	; 0xfffff0a1
     4fc:	6675625f 			; <UNDEFINED> instruction: 0x6675625f
     500:	00726566 	rsbseq	r6, r2, r6, ror #10
     504:	69727076 	ldmdbvs	r2!, {r1, r2, r4, r5, r6, ip, sp, lr}^
     508:	0066746e 	rsbeq	r7, r6, lr, ror #8
     50c:	657a6973 	ldrbvs	r6, [sl, #-2419]!	; 0xfffff68d
     510:	6d00745f 	cfstrsvs	mvf7, [r0, #-380]	; 0xfffffe84
     514:	69776e69 	ldmdbvs	r7!, {r0, r3, r5, r6, r9, sl, fp, sp, lr}^
     518:	00687464 	rsbeq	r7, r8, r4, ror #8
     51c:	65615f5f 	strbvs	r5, [r1, #-3935]!	; 0xfffff0a1
     520:	5f696261 	svcpl	0x00696261
     524:	76696464 	strbtvc	r6, [r9], -r4, ror #8
     528:	74655f00 	strbtvc	r5, [r5], #-3840	; 0xfffff100
     52c:	7000616f 	andvc	r6, r0, pc, ror #2
     530:	635f7475 	cmpvs	pc, #1962934272	; 0x75000000
     534:	00726168 	rsbseq	r6, r2, r8, ror #2
     538:	74756f5f 	ldrbtvc	r6, [r5], #-3935	; 0xfffff0a1
     53c:	6168635f 	cmnvs	r8, pc, asr r3
     540:	616d0072 	smcvs	53250	; 0xd002
     544:	7a697378 	bvc	1a5d32c <__RAM_SIZE+0x195d32c>
     548:	68770065 	ldmdavs	r7!, {r0, r2, r5, r6}^
     54c:	00656c6f 	rsbeq	r6, r5, pc, ror #24
     550:	65615f5f 	strbvs	r5, [r1, #-3935]!	; 0xfffff0a1
     554:	5f696261 	svcpl	0x00696261
     558:	7a693264 	bvc	1a4cef0 <__RAM_SIZE+0x194cef0>
     55c:	61726600 	cmnvs	r2, r0, lsl #12
     560:	6f5f0063 	svcvs	0x005f0063
     564:	665f7475 			; <UNDEFINED> instruction: 0x665f7475
     568:	5f007463 	svcpl	0x00007463
     56c:	6165615f 	cmnvs	r5, pc, asr r1
     570:	645f6962 	ldrbvs	r6, [pc], #-2402	; 578 <__STACKSEAL_SIZE+0x578>
     574:	7a697532 	bvc	1a5da44 <__RAM_SIZE+0x195da44>
     578:	61747300 	cmnvs	r4, r0, lsl #6
     57c:	695f7472 	ldmdbvs	pc, {r1, r4, r5, r6, sl, ip, sp, lr}^	; <UNPREDICTABLE>
     580:	66007864 	strvs	r7, [r0], -r4, ror #16
     584:	72707463 	rsbsvc	r7, r0, #1660944384	; 0x63000000
     588:	66746e69 	ldrbtvs	r6, [r4], -r9, ror #28
     58c:	67656e00 	strbvs	r6, [r5, -r0, lsl #28]!
     590:	76697461 	strbtvc	r7, [r9], -r1, ror #8
     594:	5f5f0065 	svcpl	0x005f0065
     598:	62616561 	rsbvs	r6, r1, #406847488	; 0x18400000
     59c:	61645f69 	cmnvs	r4, r9, ror #30
     5a0:	5f006464 	svcpl	0x00006464
     5a4:	5f61765f 	svcpl	0x0061765f
     5a8:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
     5ac:	2f2e2e00 	svccs	0x002e2e00
     5b0:	65726f43 	ldrbvs	r6, [r2, #-3907]!	; 0xfffff0bd
     5b4:	6372532f 	cmnvs	r2, #-1140850688	; 0xbc000000
     5b8:	6972702f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, ip, sp, lr}^
     5bc:	2e66746e 	cdpcs	4, 6, cr7, cr6, cr14, {3}
     5c0:	6e5f0063 	cdpvs	0, 5, cr0, cr15, cr3, {3}
     5c4:	5f616f74 	svcpl	0x00616f74
     5c8:	6d726f66 	ldclvs	15, cr6, [r2, #-408]!	; 0xfffffe68
     5cc:	5f007461 	svcpl	0x00007461
     5d0:	616f7466 	cmnvs	pc, r6, ror #8
     5d4:	73765f00 	cmnvc	r6, #0, 30
     5d8:	6972706e 	ldmdbvs	r2!, {r1, r2, r3, r5, r6, ip, sp, lr}^
     5dc:	0066746e 	rsbeq	r7, r6, lr, ror #8
     5e0:	74756f5f 	ldrbtvc	r6, [r5], #-3935	; 0xfffff0a1
     5e4:	6c756e5f 	ldclvs	14, cr6, [r5], #-380	; 0xfffffe84
     5e8:	756f006c 	strbvc	r0, [pc, #-108]!	; 584 <__STACKSEAL_SIZE+0x584>
     5ec:	63665f74 	cmnvs	r6, #116, 30	; 0x1d0
     5f0:	79745f74 	ldmdbvc	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     5f4:	5f006570 	svcpl	0x00006570
     5f8:	6165615f 	cmnvs	r5, pc, asr r1
     5fc:	645f6962 	ldrbvs	r6, [pc], #-2402	; 604 <__STACKSEAL_SIZE+0x604>
     600:	67706d63 	ldrbvs	r6, [r0, -r3, ror #26]!
     604:	6e5f0065 	cdpvs	0, 5, cr0, cr15, cr5, {3}
     608:	5f616f74 	svcpl	0x00616f74
     60c:	676e6f6c 	strbvs	r6, [lr, -ip, ror #30]!
     610:	72707300 	rsbsvc	r7, r0, #0, 6
     614:	66746e69 	ldrbtvs	r6, [r4], -r9, ror #28
     618:	615f5f00 	cmpvs	pc, r0, lsl #30
     61c:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     620:	3269755f 	rsbcc	r7, r9, #398458880	; 0x17c00000
     624:	6c660064 	stclvs	0, cr0, [r6], #-400	; 0xfffffe70
     628:	00736761 	rsbseq	r6, r3, r1, ror #14
     62c:	65615f5f 	strbvs	r5, [r1, #-3935]!	; 0xfffff0a1
     630:	5f696261 	svcpl	0x00696261
     634:	706d6364 	rsbvc	r6, sp, r4, ror #6
     638:	6d007467 	cfstrsvs	mvf7, [r0, #-412]	; 0xfffffe64
     63c:	656c7861 	strbvs	r7, [ip, #-2145]!	; 0xfffff79f
     640:	615f006e 	cmpvs	pc, lr, rrx
     644:	00696f74 	rsbeq	r6, r9, r4, ror pc
     648:	7274735f 	rsbsvc	r7, r4, #2080374785	; 0x7c000001
     64c:	6e656c6e 	cdpvs	12, 6, cr6, cr5, cr14, {3}
     650:	5f00735f 	svcpl	0x0000735f
     654:	0070615f 	rsbseq	r6, r0, pc, asr r1
     658:	65615f5f 	strbvs	r5, [r1, #-3935]!	; 0xfffff0a1
     65c:	5f696261 	svcpl	0x00696261
     660:	6c756d64 	ldclvs	13, cr6, [r5], #-400	; 0xfffffe70
     664:	6f425f00 	svcvs	0x00425f00
     668:	5f006c6f 	svcpl	0x00006c6f
     66c:	6e69755f 	mcrvs	5, 3, r7, cr9, cr15, {2}
     670:	5f343674 	svcpl	0x00343674
     674:	695f0074 	ldmdbvs	pc, {r2, r4, r5, r6}^	; <UNPREDICTABLE>
     678:	69645f73 	stmdbvs	r4!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     67c:	00746967 	rsbseq	r6, r4, r7, ror #18
     680:	766e6f63 	strbtvc	r6, [lr], -r3, ror #30
     684:	615f5f00 	cmpvs	pc, r0, lsl #30
     688:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     68c:	6d63645f 	cfstrdvs	mvd6, [r3, #-380]!	; 0xfffffe84
     690:	00716570 	rsbseq	r6, r1, r0, ror r5
     694:	69755f5f 	ldmdbvs	r5!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, fp, ip, lr}^
     698:	7470746e 	ldrbtvc	r7, [r0], #-1134	; 0xfffffb92
     69c:	00745f72 	rsbseq	r5, r4, r2, ror pc
     6a0:	72616863 	rsbvc	r6, r1, #6488064	; 0x630000
     6a4:	65746361 	ldrbvs	r6, [r4, #-865]!	; 0xfffffc9f
     6a8:	6f5f0072 	svcvs	0x005f0072
     6ac:	725f7475 	subsvc	r7, pc, #1962934272	; 0x75000000
     6b0:	5f007665 	svcpl	0x00007665
     6b4:	6165615f 	cmnvs	r5, pc, asr r1
     6b8:	645f6962 	ldrbvs	r6, [pc], #-2402	; 6c0 <__STACKSEAL_SIZE+0x6c0>
     6bc:	00627573 	rsbeq	r7, r2, r3, ror r5
     6c0:	65615f5f 	strbvs	r5, [r1, #-3935]!	; 0xfffff0a1
     6c4:	5f696261 	svcpl	0x00696261
     6c8:	69646c75 	stmdbvs	r4!, {r0, r2, r4, r5, r6, sl, fp, sp, lr}^
     6cc:	646f6d76 	strbtvs	r6, [pc], #-3446	; 6d4 <__STACKSEAL_SIZE+0x6d4>
     6d0:	615f5f00 	cmpvs	pc, r0, lsl #30
     6d4:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     6d8:	6d63645f 	cfstrdvs	mvd6, [r3, #-380]!	; 0xfffffe84
     6dc:	00656c70 	rsbeq	r6, r5, r0, ror ip
     6e0:	5f74756f 	svcpl	0x0074756f
     6e4:	5f746366 	svcpl	0x00746366
     6e8:	70617277 	rsbvc	r7, r1, r7, ror r2
     6ec:	7079745f 	rsbsvc	r7, r9, pc, asr r4
     6f0:	72700065 	rsbsvc	r0, r0, #101	; 0x65
     6f4:	66006365 	strvs	r6, [r0], -r5, ror #6
     6f8:	74646977 	strbtvc	r6, [r4], #-2423	; 0xfffff689
     6fc:	5f5f0068 	svcpl	0x005f0068
     700:	63756e67 	cmnvs	r5, #1648	; 0x670
     704:	5f61765f 	svcpl	0x0061765f
     708:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
     70c:	615f5f00 	cmpvs	pc, r0, lsl #30
     710:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     714:	6d63645f 	cfstrdvs	mvd6, [r3, #-380]!	; 0xfffffe84
     718:	00746c70 	rsbseq	r6, r4, r0, ror ip
     71c:	6f746e5f 	svcvs	0x00746e5f
     720:	6f6c5f61 	svcvs	0x006c5f61
     724:	6c5f676e 	mrrcvs	7, 6, r6, pc, cr14	; <UNPREDICTABLE>
     728:	00676e6f 	rsbeq	r6, r7, pc, ror #28
     72c:	6c5f7369 	mrrcvs	3, 6, r7, pc, cr9	; <UNPREDICTABLE>
     730:	7270006c 	rsbsvc	r0, r0, #108	; 0x6c
     734:	73696365 	cmnvc	r9, #-1811939327	; 0x94000001
     738:	006e6f69 	rsbeq	r6, lr, r9, ror #30
     73c:	66666964 	strbtvs	r6, [r6], -r4, ror #18
     740:	2f2e2e00 	svccs	0x002e2e00
     744:	65726f43 	ldrbvs	r6, [r2, #-3907]!	; 0xfffff0bd
     748:	6372532f 	cmnvs	r2, #-1140850688	; 0xbc000000
     74c:	7261752f 	rsbvc	r7, r1, #197132288	; 0xbc00000
     750:	00632e74 	rsbeq	r2, r3, r4, ror lr
     754:	69727473 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
     758:	7500676e 	strvc	r6, [r0, #-1902]	; 0xfffff892
     75c:	5f747261 	svcpl	0x00747261
     760:	76636572 			; <UNDEFINED> instruction: 0x76636572
     764:	74656700 	strbtvc	r6, [r5], #-1792	; 0xfffff900
     768:	72616863 	rsbvc	r6, r1, #6488064	; 0x630000
     76c:	646e6900 	strbtvs	r6, [lr], #-2304	; 0xfffff700
     770:	75007865 	strvc	r7, [r0, #-2149]	; 0xfffff79b
     774:	5f747261 	svcpl	0x00747261
     778:	646e6573 	strbtvs	r6, [lr], #-1395	; 0xfffffa8d
     77c:	74656700 	strbtvc	r6, [r5], #-1792	; 0xfffff900
     780:	6168635f 	cmnvs	r8, pc, asr r3
     784:	706f0072 	rsbvc	r0, pc, r2, ror r0	; <UNPREDICTABLE>
     788:	65646f63 	strbvs	r6, [r4, #-3939]!	; 0xfffff09d
     78c:	5f73695f 	svcpl	0x0073695f
     790:	6f5f6c62 	svcvs	0x005f6c62
     794:	6c625f72 	stclvs	15, cr5, [r2], #-456	; 0xfffffe38
     798:	74730078 	ldrbtvc	r0, [r3], #-120	; 0xffffff88
     79c:	5f6b6361 	svcpl	0x006b6361
     7a0:	6d617266 	sfmvs	f7, 2, [r1, #-408]!	; 0xfffffe68
     7a4:	00745f65 	rsbseq	r5, r4, r5, ror #30
     7a8:	6d5f6466 	cfldrdvs	mvd6, [pc, #-408]	; 618 <__STACKSEAL_SIZE+0x618>
     7ac:	5f6e6961 	svcpl	0x006e6961
     7b0:	63617473 	cmnvs	r1, #1929379840	; 0x73000000
     7b4:	75665f6b 	strbvc	r5, [r6, #-3947]!	; 0xfffff095
     7b8:	5f006c6c 	svcpl	0x00006c6c
     7bc:	6e69755f 	mcrvs	5, 3, r7, cr9, cr15, {2}
     7c0:	5f363174 	svcpl	0x00363174
     7c4:	735f0074 	cmpvc	pc, #116	; 0x74
     7c8:	63617473 	cmnvs	r1, #1929379840	; 0x73000000
     7cc:	6166006b 	cmnvs	r6, fp, rrx
     7d0:	5f746c75 	svcpl	0x00746c75
     7d4:	706d7564 	rsbvc	r7, sp, r4, ror #10
     7d8:	63706f5f 	cmnvs	r0, #380	; 0x17c
     7dc:	0065646f 	rsbeq	r6, r5, pc, ror #8
     7e0:	7473655f 	ldrbtvc	r6, [r3], #-1375	; 0xfffffaa1
     7e4:	006b6361 	rsbeq	r6, fp, r1, ror #6
     7e8:	75736572 	ldrbvc	r6, [r3, #-1394]!	; 0xfffffa8e
     7ec:	6c00746c 	cfstrsvs	mvf7, [r0], {108}	; 0x6c
     7f0:	656b6e69 	strbvs	r6, [fp, #-3689]!	; 0xfffff197
     7f4:	74730072 	ldrbtvc	r0, [r3], #-114	; 0xffffff8e
     7f8:	5f6b6361 	svcpl	0x006b6361
     7fc:	6d617266 	sfmvs	f7, 2, [r1, #-408]!	; 0xfffffe68
     800:	616d5f65 	cmnvs	sp, r5, ror #30
     804:	6c61756e 	cfstr64vs	mvdx7, [r1], #-440	; 0xfffffe48
     808:	6f00745f 	svcvs	0x0000745f
     80c:	646f6370 	strbtvs	r6, [pc], #-880	; 814 <__Vectors_Size+0x54>
     810:	6f003165 	svcvs	0x00003165
     814:	646f6370 	strbtvs	r6, [pc], #-880	; 81c <__Vectors_Size+0x5c>
     818:	73003265 	movwvc	r3, #613	; 0x265
     81c:	6b636174 	blvs	18d8df4 <__RAM_SIZE+0x17d8df4>
     820:	6172665f 	cmnvs	r2, pc, asr r6
     824:	6d5f656d 	cfldr64vs	mvdx6, [pc, #-436]	; 678 <__STACKSEAL_SIZE+0x678>
     828:	61756e61 	cmnvs	r5, r1, ror #28
     82c:	7473006c 	ldrbtvc	r0, [r3], #-108	; 0xffffff94
     830:	5f6b6361 	svcpl	0x006b6361
     834:	6d617266 	sfmvs	f7, 2, [r1, #-408]!	; 0xfffffe68
     838:	74730065 	ldrbtvc	r0, [r3], #-101	; 0xffffff9b
     83c:	5f6b6361 	svcpl	0x006b6361
     840:	6d617266 	sfmvs	f7, 2, [r1, #-408]!	; 0xfffffe68
     844:	78655f65 	stmdavc	r5!, {r0, r2, r5, r6, r8, r9, sl, fp, ip, lr}^
     848:	74706563 	ldrbtvc	r6, [r0], #-1379	; 0xfffffa9d
     84c:	6600745f 			; <UNDEFINED> instruction: 0x6600745f
     850:	616d5f64 	cmnvs	sp, r4, ror #30
     854:	735f6e69 	cmpvc	pc, #1680	; 0x690
     858:	6b636174 	blvs	18d8e30 <__RAM_SIZE+0x17d8e30>
     85c:	7361625f 	cmnvc	r1, #-268435451	; 0xf0000005
     860:	2e2e0065 	cdpcs	0, 2, cr0, cr14, cr5, {3}
     864:	2f2e2e2f 	svccs	0x002e2e2f
     868:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 7b8 <__STACKSEAL_SIZE+0x7b8>
     86c:	74756269 	ldrbtvc	r6, [r5], #-617	; 0xfffffd97
     870:	2f736c69 	svccs	0x00736c69
     874:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
     878:	75642d74 	strbvc	r2, [r4, #-3444]!	; 0xfffff28c
     87c:	732f706d 			; <UNDEFINED> instruction: 0x732f706d
     880:	662f6372 			; <UNDEFINED> instruction: 0x662f6372
     884:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
     888:	6d75642d 	cfldrdvs	mvd6, [r5, #-180]!	; 0xffffff4c
     88c:	00632e70 	rsbeq	r2, r3, r0, ror lr
     890:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
     894:	75645f74 	strbvc	r5, [r4, #-3956]!	; 0xfffff08c
     898:	685f706d 	ldmdavs	pc, {r0, r2, r3, r5, r6, ip, sp, lr}^	; <UNPREDICTABLE>
     89c:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
     8a0:	66007265 	strvs	r7, [r0], -r5, ror #4
     8a4:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
     8a8:	6d75645f 	cfldrdvs	mvd6, [r5, #-380]!	; 0xfffffe84
     8ac:	78655f70 	stmdavc	r5!, {r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     8b0:	65725f63 	ldrbvs	r5, [r2, #-3939]!	; 0xfffff09d
     8b4:	6e727574 	mrcvs	5, 3, r7, cr2, cr4, {3}
     8b8:	74735f00 	ldrbtvc	r5, [r3], #-3840	; 0xfffff100
     8bc:	00747865 	rsbseq	r7, r4, r5, ror #16
     8c0:	65675f5f 	strbvs	r5, [r7, #-3935]!	; 0xfffff0a1
     8c4:	534d5f74 	movtpl	r5, #57204	; 0xdf74
     8c8:	74730050 	ldrbtvc	r0, [r3], #-80	; 0xffffffb0
     8cc:	5f6b6361 	svcpl	0x006b6361
     8d0:	6d617266 	sfmvs	f7, 2, [r1, #-408]!	; 0xfffffe68
     8d4:	78655f65 	stmdavc	r5!, {r0, r2, r5, r6, r8, r9, sl, fp, ip, lr}^
     8d8:	74706563 	ldrbtvc	r6, [r0], #-1379	; 0xfffffa9d
     8dc:	74655f00 	strbtvc	r5, [r5], #-3840	; 0xfffff100
     8e0:	00747865 	rsbseq	r7, r4, r5, ror #16
     8e4:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
     8e8:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
     8ec:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
     8f0:	6c697475 	cfstrdvs	mvd7, [r9], #-468	; 0xfffffe2c
     8f4:	61662f73 	smcvs	25331	; 0x62f3
     8f8:	2d746c75 	ldclcs	12, cr6, [r4, #-468]!	; 0xfffffe2c
     8fc:	706d7564 	rsbvc	r7, sp, r4, ror #10
     900:	7570632f 	ldrbvc	r6, [r0, #-815]!	; 0xfffffcd1
     904:	726f632f 	rsbvc	r6, pc, #-1140850688	; 0xbc000000
     908:	2d786574 	cfldr64cs	mvdx6, [r8, #-464]!	; 0xfffffe30
     90c:	2f33336d 	svccs	0x0033336d
     910:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
     914:	61682d74 	smcvs	33492	; 0x82d4
     918:	00632e6c 	rsbeq	r2, r3, ip, ror #28
     91c:	6f437670 	svcvs	0x00437670
     920:	6961746e 	stmdbvs	r1!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
     924:	0072656e 	rsbseq	r6, r2, lr, ror #10
     928:	6b636954 	blvs	18dae80 <__RAM_SIZE+0x17dae80>
     92c:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
     930:	7800745f 	stmdavc	r0, {r0, r1, r2, r3, r4, r6, sl, ip, sp, lr}
     934:	6d657449 	cfstrdvs	mvd7, [r5, #-292]!	; 0xfffffedc
     938:	756c6156 	strbvc	r6, [ip, #-342]!	; 0xfffffeaa
     93c:	4c780065 	ldclmi	0, cr0, [r8], #-404	; 0xfffffe6c
     940:	45747369 	ldrbmi	r7, [r4, #-873]!	; 0xfffffc97
     944:	7000646e 	andvc	r6, r0, lr, ror #8
     948:	6e774f76 	mrcvs	15, 3, r4, cr7, cr6, {3}
     94c:	78007265 	stmdavc	r0, {r0, r2, r5, r6, r9, ip, sp, lr}
     950:	5453494c 	ldrbpl	r4, [r3], #-2380	; 0xfffff6b4
     954:	4554495f 	ldrbmi	r4, [r4, #-2399]	; 0xfffff6a1
     958:	7870004d 	ldmdavc	r0!, {r0, r2, r3, r6}^
     95c:	6d657449 	cfstrdvs	mvd7, [r5, #-292]!	; 0xfffffedc
     960:	65526f54 	ldrbvs	r6, [r2, #-3924]	; 0xfffff0ac
     964:	65766f6d 	ldrbvs	r6, [r6, #-3949]!	; 0xfffff093
     968:	694c7600 	stmdbvs	ip, {r9, sl, ip, sp, lr}^
     96c:	6e497473 	mcrvs	4, 2, r7, cr9, cr3, {3}
     970:	61697469 	cmnvs	r9, r9, ror #8
     974:	6573696c 	ldrbvs	r6, [r3, #-2412]!	; 0xfffff694
     978:	6d657449 	cfstrdvs	mvd7, [r5, #-292]!	; 0xfffffedc
     97c:	4e787500 	cdpmi	5, 7, cr7, cr8, cr0, {0}
     980:	65626d75 	strbvs	r6, [r2, #-3445]!	; 0xfffff28b
     984:	49664f72 	stmdbmi	r6!, {r1, r4, r5, r6, r8, r9, sl, fp, lr}^
     988:	736d6574 	cmnvc	sp, #116, 10	; 0x1d000000
     98c:	694c7600 	stmdbvs	ip, {r9, sl, ip, sp, lr}^
     990:	6e497473 	mcrvs	4, 2, r7, cr9, cr3, {3}
     994:	74726573 	ldrbtvc	r6, [r2], #-1395	; 0xfffffa8d
     998:	00646e45 	rsbeq	r6, r4, r5, asr #28
     99c:	654e7870 	strbvs	r7, [lr, #-2160]	; 0xfffff790
     9a0:	76007478 			; <UNDEFINED> instruction: 0x76007478
     9a4:	7473694c 	ldrbtvc	r6, [r3], #-2380	; 0xfffff6b4
     9a8:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xfffff1b7
     9ac:	696c6169 	stmdbvs	ip!, {r0, r3, r5, r6, r8, sp, lr}^
     9b0:	78006573 	stmdavc	r0, {r0, r1, r4, r5, r6, r8, sl, sp, lr}
     9b4:	756c6156 	strbvc	r6, [ip, #-342]!	; 0xfffffeaa
     9b8:	49664f65 	stmdbmi	r6!, {r0, r2, r5, r6, r8, r9, sl, fp, lr}^
     9bc:	7265736e 	rsbvc	r7, r5, #-1207959551	; 0xb8000001
     9c0:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
     9c4:	49787000 	ldmdbmi	r8!, {ip, sp, lr}^
     9c8:	006d6574 	rsbeq	r6, sp, r4, ror r5
     9cc:	73614255 	cmnvc	r1, #1342177285	; 0x50000005
     9d0:	70795465 	rsbsvc	r5, r9, r5, ror #8
     9d4:	00745f65 	rsbseq	r5, r4, r5, ror #30
     9d8:	74497870 	strbvc	r7, [r9], #-2160	; 0xfffff790
     9dc:	74617265 	strbtvc	r7, [r1], #-613	; 0xfffffd9b
     9e0:	7000726f 	andvc	r7, r0, pc, ror #4
     9e4:	646e4978 	strbtvs	r4, [lr], #-2424	; 0xfffff688
     9e8:	70007865 	andvc	r7, r0, r5, ror #16
     9ec:	65725078 	ldrbvs	r5, [r2, #-120]!	; 0xffffff88
     9f0:	756f6976 	strbvc	r6, [pc, #-2422]!	; 82 <__STACKSEAL_SIZE+0x82>
     9f4:	2e2e0073 	mcrcs	0, 1, r0, cr14, cr3, {3}
     9f8:	2f2e2e2f 	svccs	0x002e2e2f
     9fc:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 94c <__Vectors_Size+0x18c>
     a00:	74726269 	ldrbtvc	r6, [r2], #-617	; 0xfffffd97
     a04:	462f736f 	strtmi	r7, [pc], -pc, ror #6
     a08:	52656572 	rsbpl	r6, r5, #478150656	; 0x1c800000
     a0c:	2f534f54 	svccs	0x00534f54
     a10:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
     a14:	7000632e 	andvc	r6, r0, lr, lsr #6
     a18:	73694c78 	cmnvc	r9, #120, 24	; 0x7800
     a1c:	4c780074 	ldclmi	0, cr0, [r8], #-464	; 0xfffffe30
     a20:	00545349 	subseq	r5, r4, r9, asr #6
     a24:	694c7875 	stmdbvs	ip, {r0, r2, r4, r5, r6, fp, ip, sp, lr}^
     a28:	65527473 	ldrbvs	r7, [r2, #-1139]	; 0xfffffb8d
     a2c:	65766f6d 	ldrbvs	r6, [r6, #-3949]!	; 0xfffff093
     a30:	4e787000 	cdpmi	0, 7, cr7, cr8, cr0, {0}
     a34:	694c7765 	stmdbvs	ip, {r0, r2, r5, r6, r8, r9, sl, ip, sp, lr}^
     a38:	74497473 	strbvc	r7, [r9], #-1139	; 0xfffffb8d
     a3c:	76006d65 	strvc	r6, [r0], -r5, ror #26
     a40:	7473694c 	ldrbtvc	r6, [r3], #-2380	; 0xfffff6b4
     a44:	65736e49 	ldrbvs	r6, [r3, #-3657]!	; 0xfffff1b7
     a48:	76007472 			; <UNDEFINED> instruction: 0x76007472
     a4c:	74726f50 	ldrbtvc	r6, [r2], #-3920	; 0xfffff0b0
     a50:	74697845 	strbtvc	r7, [r9], #-2117	; 0xfffff7bb
     a54:	74697243 	strbtvc	r7, [r9], #-579	; 0xfffffdbd
     a58:	6c616369 	stclvs	3, cr6, [r1], #-420	; 0xfffffe5c
     a5c:	76727000 	ldrbtvc	r7, [r2], -r0
     a60:	69746f4e 	ldmdbvs	r4!, {r1, r2, r3, r6, r8, r9, sl, fp, sp, lr}^
     a64:	75517966 	ldrbvc	r7, [r1, #-2406]	; 0xfffff69a
     a68:	53657565 	cmnpl	r5, #423624704	; 0x19400000
     a6c:	6f437465 	svcvs	0x00437465
     a70:	6961746e 	stmdbvs	r1!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
     a74:	0072656e 	rsbseq	r6, r2, lr, ror #10
     a78:	616d6553 	cmnvs	sp, r3, asr r5
     a7c:	726f6870 	rsbvc	r6, pc, #112, 16	; 0x700000
     a80:	74614465 	strbtvc	r4, [r1], #-1125	; 0xfffffb9b
     a84:	50760061 	rsbspl	r0, r6, r1, rrx
     a88:	5974726f 	ldmdbpl	r4!, {r0, r1, r2, r3, r5, r6, r9, ip, sp, lr}^
     a8c:	646c6569 	strbtvs	r6, [ip], #-1385	; 0xfffffa97
     a90:	6d655300 	stclvs	3, cr5, [r5, #-0]
     a94:	6f687061 	svcvs	0x00687061
     a98:	61446572 	hvcvs	18002	; 0x4652
     a9c:	745f6174 	ldrbvc	r6, [pc], #-372	; aa4 <__Vectors_Size+0x2e4>
     aa0:	75517800 	ldrbvc	r7, [r1, #-2048]	; 0xfffff800
     aa4:	47657565 	strbmi	r7, [r5, -r5, ror #10]!
     aa8:	72656e65 	rsbvc	r6, r5, #1616	; 0x650
     aac:	65476369 	strbvs	r6, [r7, #-873]	; 0xfffffc97
     ab0:	61745374 	cmnvs	r4, r4, ror r3
     ab4:	42636974 	rsbmi	r6, r3, #116, 18	; 0x1d0000
     ab8:	65666675 	strbvs	r6, [r6, #-1653]!	; 0xfffff98b
     abc:	78007372 	stmdavc	r0, {r1, r4, r5, r6, r8, r9, ip, sp, lr}
     ac0:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
     ac4:	63655265 	cmnvs	r5, #1342177286	; 0x50000006
     ac8:	65766965 	ldrbvs	r6, [r6, #-2405]!	; 0xfffff69b
     acc:	75517800 	ldrbvc	r7, [r1, #-2048]	; 0xfffff800
     ad0:	52657565 	rsbpl	r7, r5, #423624704	; 0x19400000
     ad4:	69656365 	stmdbvs	r5!, {r0, r2, r5, r6, r8, r9, sp, lr}^
     ad8:	72466576 	subvc	r6, r6, #494927872	; 0x1d800000
     adc:	53496d6f 	movtpl	r6, #40303	; 0x9d6f
     ae0:	54780052 	ldrbtpl	r0, [r8], #-82	; 0xffffffae
     ae4:	736b7361 	cmnvc	fp, #-2080374783	; 0x84000001
     ae8:	74696157 	strbtvc	r6, [r9], #-343	; 0xfffffea9
     aec:	54676e69 	strbtpl	r6, [r7], #-3689	; 0xfffff197
     af0:	6365526f 	cmnvs	r5, #-268435450	; 0xf0000006
     af4:	65766965 	ldrbvs	r6, [r6, #-2405]!	; 0xfffff69b
     af8:	48787000 	ldmdami	r8!, {ip, sp, lr}^
     afc:	65686769 	strbvs	r6, [r8, #-1897]!	; 0xfffff897
     b00:	69725072 	ldmdbvs	r2!, {r1, r4, r5, r6, ip, lr}^
     b04:	7469726f 	strbtvc	r7, [r9], #-623	; 0xfffffd91
     b08:	73615479 	cmnvc	r1, #2030043136	; 0x79000000
     b0c:	6b6f576b 	blvs	1bd68c0 <__RAM_SIZE+0x1ad68c0>
     b10:	70006e65 	andvc	r6, r0, r5, ror #28
     b14:	74754d78 	ldrbtvc	r4, [r5], #-3448	; 0xfffff288
     b18:	78007865 	stmdavc	r0, {r0, r2, r5, r6, fp, ip, sp, lr}
     b1c:	454d4954 	strbmi	r4, [sp, #-2388]	; 0xfffff6ac
     b20:	54554f5f 	ldrbpl	r4, [r5], #-3935	; 0xfffff0a1
     b24:	75517800 	ldrbvc	r7, [r1, #-2048]	; 0xfffff800
     b28:	54657565 	strbtpl	r7, [r5], #-1381	; 0xfffffa9b
     b2c:	4d656b61 	fstmdbxmi	r5!, {d22-d69}	;@ Deprecated
     b30:	78657475 	stmdavc	r5!, {r0, r2, r4, r5, r6, sl, ip, sp, lr}^
     b34:	75636552 	strbvc	r6, [r3, #-1362]!	; 0xfffffaae
     b38:	76697372 			; <UNDEFINED> instruction: 0x76697372
     b3c:	51780065 	cmnpl	r8, r5, rrx
     b40:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
     b44:	656c6553 	strbvs	r6, [ip, #-1363]!	; 0xfffffaad
     b48:	72467463 	subvc	r7, r6, #1660944384	; 0x63000000
     b4c:	65536d6f 	ldrbvs	r6, [r3, #-3439]	; 0xfffff291
     b50:	6f724674 	svcvs	0x00724674
     b54:	5253496d 	subspl	r4, r3, #1785856	; 0x1b4000
     b58:	75517800 	ldrbvc	r7, [r1, #-2048]	; 0xfffff800
     b5c:	47657565 	strbmi	r7, [r5, -r5, ror #10]!
     b60:	72656e65 	rsbvc	r6, r5, #1616	; 0x650
     b64:	65536369 	ldrbvs	r6, [r3, #-873]	; 0xfffffc97
     b68:	7246646e 	subvc	r6, r6, #1845493760	; 0x6e000000
     b6c:	53496d6f 	movtpl	r6, #40303	; 0x9d6f
     b70:	74530052 	ldrbvc	r0, [r3], #-82	; 0xffffffae
     b74:	63697461 	cmnvs	r9, #1627389952	; 0x61000000
     b78:	696e694d 	stmdbvs	lr!, {r0, r2, r3, r6, r8, fp, sp, lr}^
     b7c:	7473694c 	ldrbtvc	r6, [r3], #-2380	; 0xfffff6b4
     b80:	6d657449 	cfstrdvs	mvd7, [r5, #-292]!	; 0xfffffedc
     b84:	7800745f 	stmdavc	r0, {r0, r1, r2, r3, r4, r6, sl, ip, sp, lr}
     b88:	74696157 	strbtvc	r6, [r9], #-343	; 0xfffffea9
     b8c:	65646e49 	strbvs	r6, [r4, #-3657]!	; 0xfffff1b7
     b90:	696e6966 	stmdbvs	lr!, {r1, r2, r5, r6, r8, fp, sp, lr}^
     b94:	796c6574 	stmdbvc	ip!, {r2, r4, r5, r6, r8, sl, sp, lr}^
     b98:	61547800 	cmpvs	r4, r0, lsl #16
     b9c:	57736b73 			; <UNDEFINED> instruction: 0x57736b73
     ba0:	69746961 	ldmdbvs	r4!, {r0, r5, r6, r8, fp, sp, lr}^
     ba4:	6f54676e 	svcvs	0x0054676e
     ba8:	646e6553 	strbtvs	r6, [lr], #-1363	; 0xfffffaad
     bac:	51787500 	cmnpl	r8, r0, lsl #10
     bb0:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
     bb4:	63617053 	cmnvs	r1, #83	; 0x53
     bb8:	76417365 	strbvc	r7, [r1], -r5, ror #6
     bbc:	616c6961 	cmnvs	ip, r1, ror #18
     bc0:	00656c62 	rsbeq	r6, r5, r2, ror #24
     bc4:	4c785463 	cfldrdmi	mvd5, [r8], #-396	; 0xfffffe74
     bc8:	006b636f 	rsbeq	r6, fp, pc, ror #6
     bcc:	65764f78 	ldrbvs	r4, [r6, #-3960]!	; 0xfffff088
     bd0:	6f6c6672 	svcvs	0x006c6672
     bd4:	756f4377 	strbvc	r4, [pc, #-887]!	; 865 <__Vectors_Size+0xa5>
     bd8:	7600746e 	strvc	r7, [r0], -lr, ror #8
     bdc:	74726f50 	ldrbtvc	r6, [r2], #-3920	; 0xfffff0b0
     be0:	65746e45 	ldrbvs	r6, [r4, #-3653]!	; 0xfffff1bb
     be4:	69724372 	ldmdbvs	r2!, {r1, r4, r5, r6, r8, r9, lr}^
     be8:	61636974 	smcvs	13972	; 0x3694
     bec:	5f5f006c 	svcpl	0x005f006c
     bf0:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	; 0xfffffe78
     bf4:	5f6e6974 	svcpl	0x006e6974
     bf8:	636d656d 	cmnvs	sp, #457179136	; 0x1b400000
     bfc:	78007970 	stmdavc	r0, {r4, r5, r6, r8, fp, ip, sp, lr}
     c00:	79706f43 	ldmdbvc	r0!, {r0, r1, r6, r8, r9, sl, fp, sp, lr}^
     c04:	69736f50 	ldmdbvs	r3!, {r4, r6, r8, r9, sl, fp, sp, lr}^
     c08:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
     c0c:	52787500 	rsbspl	r7, r8, #0, 10
     c10:	72757465 	rsbsvc	r7, r5, #1694498816	; 0x65000000
     c14:	5176006e 	cmnpl	r6, lr, rrx
     c18:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
     c1c:	656c6544 	strbvs	r6, [ip, #-1348]!	; 0xfffffabc
     c20:	70006574 	andvc	r6, r0, r4, ror r5
     c24:	61655263 	cmnvs	r5, r3, ror #4
     c28:	6f724664 	svcvs	0x00724664
     c2c:	7875006d 	ldmdavc	r5!, {r0, r2, r3, r5, r6}^
     c30:	65766153 	ldrbvs	r6, [r6, #-339]!	; 0xfffffead
     c34:	746e4964 	strbtvc	r4, [lr], #-2404	; 0xfffff69c
     c38:	75727265 	ldrbvc	r7, [r2, #-613]!	; 0xfffffd9b
     c3c:	74537470 	ldrbvc	r7, [r3], #-1136	; 0xfffffb90
     c40:	73757461 	cmnvc	r5, #1627389952	; 0x61000000
     c44:	76727000 	ldrbtvc	r7, [r2], -r0
     c48:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xfffff1b7
     c4c:	696c6169 	stmdbvs	ip!, {r0, r3, r5, r6, r8, sp, lr}^
     c50:	654e6573 	strbvs	r6, [lr, #-1395]	; 0xfffffa8d
     c54:	65755177 	ldrbvs	r5, [r5, #-375]!	; 0xfffffe89
     c58:	75006575 	strvc	r6, [r0, #-1397]	; 0xfffffa8b
     c5c:	74754d78 	ldrbtvc	r4, [r5], #-3448	; 0xfffff288
     c60:	69537865 	ldmdbvs	r3, {r0, r2, r5, r6, fp, ip, sp, lr}^
     c64:	7800657a 	stmdavc	r0, {r1, r3, r4, r5, r6, r8, sl, sp, lr}
     c68:	6c656959 			; <UNDEFINED> instruction: 0x6c656959
     c6c:	71655264 	cmnvc	r5, r4, ror #4
     c70:	65726975 	ldrbvs	r6, [r2, #-2421]!	; 0xfffff68b
     c74:	78700064 	ldmdavc	r0!, {r2, r5, r6}^
     c78:	5177654e 	cmnpl	r7, lr, asr #10
     c7c:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
     c80:	65755100 	ldrbvs	r5, [r5, #-256]!	; 0xffffff00
     c84:	65446575 	strbvs	r6, [r4, #-1397]	; 0xfffffa8b
     c88:	696e6966 	stmdbvs	lr!, {r1, r2, r5, r6, r8, fp, sp, lr}^
     c8c:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
     c90:	6c437600 	mcrrvs	6, 0, r7, r3, cr0
     c94:	49726165 	ldmdbmi	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     c98:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
     c9c:	74707572 	ldrbtvc	r7, [r0], #-1394	; 0xfffffa8e
     ca0:	6b73614d 	blvs	1cd91dc <__RAM_SIZE+0x1bd91dc>
     ca4:	76727000 	ldrbtvc	r7, [r2], -r0
     ca8:	75517349 	ldrbvc	r7, [r1, #-841]	; 0xfffffcb7
     cac:	45657565 	strbmi	r7, [r5, #-1381]!	; 0xfffffa9b
     cb0:	7974706d 	ldmdbvc	r4!, {r0, r2, r3, r5, r6, ip, sp, lr}^
     cb4:	42767000 	rsbsmi	r7, r6, #0
     cb8:	65666675 	strbvs	r6, [r6, #-1653]!	; 0xfffff98b
     cbc:	72700072 	rsbsvc	r0, r0, #114	; 0x72
     cc0:	74654776 	strbtvc	r4, [r5], #-1910	; 0xfffff88a
     cc4:	69736944 	ldmdbvs	r3!, {r2, r6, r8, fp, sp, lr}^
     cc8:	7265686e 	rsbvc	r6, r5, #7208960	; 0x6e0000
     ccc:	72507469 	subsvc	r7, r0, #1761607680	; 0x69000000
     cd0:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
     cd4:	66417974 			; <UNDEFINED> instruction: 0x66417974
     cd8:	54726574 	ldrbtpl	r6, [r2], #-1396	; 0xfffffa8c
     cdc:	6f656d69 	svcvs	0x00656d69
     ce0:	75007475 	strvc	r7, [r0, #-1141]	; 0xfffffb8b
     ce4:	73654d78 	cmnvc	r5, #120, 26	; 0x1e00
     ce8:	65676173 	strbvs	r6, [r7, #-371]!	; 0xfffffe8d
     cec:	69615773 	stmdbvs	r1!, {r0, r1, r4, r5, r6, r8, r9, sl, ip, lr}^
     cf0:	676e6974 			; <UNDEFINED> instruction: 0x676e6974
     cf4:	65537800 	ldrbvs	r7, [r3, #-2048]	; 0xfffff800
     cf8:	6870616d 	ldmdavs	r0!, {r0, r2, r3, r5, r6, r8, sp, lr}^
     cfc:	0065726f 	rsbeq	r7, r5, pc, ror #4
     d00:	6f507670 	svcvs	0x00507670
     d04:	614d7472 	hvcvs	55106	; 0xd742
     d08:	636f6c6c 	cmnvs	pc, #108, 24	; 0x6c00
     d0c:	54787500 	ldrbtpl	r7, [r8], #-1280	; 0xfffffb00
     d10:	476b7361 	strbmi	r7, [fp, -r1, ror #6]!
     d14:	754e7465 	strbvc	r7, [lr, #-1125]	; 0xfffffb9b
     d18:	7265626d 	rsbvc	r6, r5, #-805306362	; 0xd0000006
     d1c:	6154664f 	cmpvs	r4, pc, asr #12
     d20:	00736b73 	rsbseq	r6, r3, r3, ror fp
     d24:	73615476 	cmnvc	r1, #1979711488	; 0x76000000
     d28:	7375536b 	cmnvc	r5, #-1409286143	; 0xac000001
     d2c:	646e6570 	strbtvs	r6, [lr], #-1392	; 0xfffffa90
     d30:	006c6c41 	rsbeq	r6, ip, r1, asr #24
     d34:	65755178 	ldrbvs	r5, [r5, #-376]!	; 0xfffffe88
     d38:	65506575 	ldrbvs	r6, [r0, #-1397]	; 0xfffffa8b
     d3c:	78006b65 	stmdavc	r0, {r0, r2, r5, r6, r8, r9, fp, sp, lr}
     d40:	72746e45 	rsbsvc	r6, r4, #1104	; 0x450
     d44:	6d695479 	cfstrdvs	mvd5, [r9, #-484]!	; 0xfffffe1c
     d48:	74655365 	strbtvc	r5, [r5], #-869	; 0xfffffc9b
     d4c:	61487800 	cmpvs	r8, r0, lsl #16
     d50:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
     d54:	65755100 	ldrbvs	r5, [r5, #-256]!	; 0xffffff00
     d58:	65536575 	ldrbvs	r6, [r3, #-1397]	; 0xfffffa8b
     d5c:	6d654d74 	stclvs	13, cr4, [r5, #-464]!	; 0xfffffe30
     d60:	48726562 	ldmdami	r2!, {r1, r5, r6, r8, sl, sp, lr}^
     d64:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
     d68:	00745f65 	rsbseq	r5, r4, r5, ror #30
     d6c:	6e497875 	mcrvs	8, 2, r7, cr9, cr5, {3}
     d70:	61697469 	cmnvs	r9, r9, ror #8
     d74:	756f436c 	strbvc	r4, [pc, #-876]!	; a10 <__Vectors_Size+0x250>
     d78:	7000746e 	andvc	r7, r0, lr, ror #8
     d7c:	51637570 	smcpl	14160	; 0x3750
     d80:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
     d84:	726f7453 	rsbvc	r7, pc, #1392508928	; 0x53000000
     d88:	00656761 	rsbeq	r6, r5, r1, ror #14
     d8c:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
     d90:	74655365 	strbtvc	r5, [r5], #-869	; 0xfffffc9b
     d94:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
     d98:	745f656c 	ldrbvc	r6, [pc], #-1388	; da0 <__Vectors_Size+0x5e0>
     d9c:	75517800 	ldrbvc	r7, [r1, #-2048]	; 0xfffff800
     da0:	53657565 	cmnpl	r5, #423624704	; 0x19400000
     da4:	70616d65 	rsbvc	r6, r1, r5, ror #26
     da8:	65726f68 	ldrbvs	r6, [r2, #-3944]!	; 0xfffff098
     dac:	656b6154 	strbvs	r6, [fp, #-340]!	; 0xfffffeac
     db0:	44767000 	ldrbtmi	r7, [r6], #-0
     db4:	796d6d75 	stmdbvc	sp!, {r0, r2, r4, r5, r6, r8, sl, fp, sp, lr}^
     db8:	76700031 			; <UNDEFINED> instruction: 0x76700031
     dbc:	6d6d7544 	cfstr64vs	mvdx7, [sp, #-272]!	; 0xfffffef0
     dc0:	70003279 	andvc	r3, r0, r9, ror r2
     dc4:	6d754476 	cfldrdvs	mvd4, [r5, #-472]!	; 0xfffffe28
     dc8:	0033796d 	eorseq	r7, r3, sp, ror #18
     dcc:	75447875 	strbvc	r7, [r4, #-2165]	; 0xfffff78b
     dd0:	32796d6d 	rsbscc	r6, r9, #6976	; 0x1b40
     dd4:	44767000 	ldrbtmi	r7, [r6], #-0
     dd8:	796d6d75 	stmdbvc	sp!, {r0, r2, r4, r5, r6, r8, sl, fp, sp, lr}^
     ddc:	78750037 	ldmdavc	r5!, {r0, r1, r2, r4, r5}^
     de0:	6d6d7544 	cfstr64vs	mvdx7, [sp, #-272]!	; 0xfffffef0
     de4:	70003479 	andvc	r3, r0, r9, ror r4
     de8:	6f437672 	svcvs	0x00437672
     dec:	61447970 	hvcvs	18320	; 0x4790
     df0:	6f546174 	svcvs	0x00546174
     df4:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
     df8:	51780065 	cmnpl	r8, r5, rrx
     dfc:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
     e00:	656e6547 	strbvs	r6, [lr, #-1351]!	; 0xfffffab9
     e04:	53636972 	cmnpl	r3, #1867776	; 0x1c8000
     e08:	00646e65 	rsbeq	r6, r4, r5, ror #28
     e0c:	74536375 	ldrbvc	r6, [r3], #-885	; 0xfffffc8b
     e10:	63697461 	cmnvs	r9, #1627389952	; 0x61000000
     e14:	796c6c61 	stmdbvc	ip!, {r0, r5, r6, sl, fp, sp, lr}^
     e18:	6f6c6c41 	svcvs	0x006c6c41
     e1c:	65746163 	ldrbvs	r6, [r4, #-355]!	; 0xfffffe9d
     e20:	54760064 	ldrbtpl	r0, [r6], #-100	; 0xffffff9c
     e24:	506b7361 	rsbpl	r7, fp, r1, ror #6
     e28:	6563616c 	strbvs	r6, [r3, #-364]!	; 0xfffffe94
     e2c:	76456e4f 	strbvc	r6, [r5], -pc, asr #28
     e30:	4c746e65 	ldclmi	14, cr6, [r4], #-404	; 0xfffffe6c
     e34:	00747369 	rsbseq	r7, r4, r9, ror #6
     e38:	61547670 	cmpvs	r4, r0, ror r6
     e3c:	6e496b73 	vmovvs.8	d9[3], r6
     e40:	6d657263 	sfmvs	f7, 2, [r5, #-396]!	; 0xfffffe74
     e44:	4d746e65 	ldclmi	14, cr6, [r4, #-404]!	; 0xfffffe6c
     e48:	78657475 	stmdavc	r5!, {r0, r2, r4, r5, r6, sl, ip, sp, lr}^
     e4c:	646c6548 	strbtvs	r6, [ip], #-1352	; 0xfffffab8
     e50:	6e756f43 	cdpvs	15, 7, cr6, cr5, cr3, {2}
     e54:	2e2e0074 	mcrcs	0, 1, r0, cr14, cr4, {3}
     e58:	2f2e2e2f 	svccs	0x002e2e2f
     e5c:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; dac <__Vectors_Size+0x5ec>
     e60:	74726269 	ldrbtvc	r6, [r2], #-617	; 0xfffffd97
     e64:	462f736f 	strtmi	r7, [pc], -pc, ror #6
     e68:	52656572 	rsbpl	r6, r5, #478150656	; 0x1c800000
     e6c:	2f534f54 	svccs	0x00534f54
     e70:	75657571 	strbvc	r7, [r5, #-1393]!	; 0xfffffa8f
     e74:	00632e65 	rsbeq	r2, r3, r5, ror #28
     e78:	74497875 	strbvc	r7, [r9], #-2165	; 0xfffff78b
     e7c:	69536d65 	ldmdbvs	r3, {r0, r2, r5, r6, r8, sl, fp, sp, lr}^
     e80:	7500657a 	strvc	r6, [r0, #-1402]	; 0xfffffa86
     e84:	65755178 	ldrbvs	r5, [r5, #-376]!	; 0xfffffe88
     e88:	654d6575 	strbvs	r6, [sp, #-1397]	; 0xfffffa8b
     e8c:	67617373 			; <UNDEFINED> instruction: 0x67617373
     e90:	61577365 	cmpvs	r7, r5, ror #6
     e94:	6e697469 	cdpvs	4, 6, cr7, cr9, cr9, {3}
     e98:	6f724667 	svcvs	0x00724667
     e9c:	5253496d 	subspl	r4, r3, #1785856	; 0x1b4000
     ea0:	50787500 	rsbspl	r7, r8, r0, lsl #10
     ea4:	69766572 	ldmdbvs	r6!, {r1, r4, r5, r6, r8, sl, sp, lr}^
     ea8:	4d73756f 	cfldr64mi	mvdx7, [r3, #-444]!	; 0xfffffe44
     eac:	61737365 	cmnvs	r3, r5, ror #6
     eb0:	57736567 	ldrbpl	r6, [r3, -r7, ror #10]!
     eb4:	69746961 	ldmdbvs	r4!, {r0, r5, r6, r8, fp, sp, lr}^
     eb8:	7800676e 	stmdavc	r0, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}
     ebc:	6b736154 	blvs	1cd9414 <__RAM_SIZE+0x1bd9414>
     ec0:	6f697250 	svcvs	0x00697250
     ec4:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
     ec8:	69736944 	ldmdbvs	r3!, {r2, r6, r8, fp, sp, lr}^
     ecc:	7265686e 	rsbvc	r6, r5, #7208960	; 0x6e0000
     ed0:	75007469 	strvc	r7, [r0, #-1129]	; 0xfffffb97
     ed4:	74754d78 	ldrbtvc	r4, [r5], #-3448	; 0xfffff288
     ed8:	654c7865 	strbvs	r7, [ip, #-2149]	; 0xfffff79b
     edc:	6874676e 	ldmdavs	r4!, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}^
     ee0:	76727000 	ldrbtvc	r7, [r2], -r0
     ee4:	75517349 	ldrbvc	r7, [r1, #-841]	; 0xfffffcb7
     ee8:	46657565 	strbtmi	r7, [r5], -r5, ror #10
     eec:	006c6c75 	rsbeq	r6, ip, r5, ror ip
     ef0:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
     ef4:	696f5065 	stmdbvs	pc!, {r0, r2, r5, r6, ip, lr}^	; <UNPREDICTABLE>
     ef8:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
     efc:	51780073 	cmnpl	r8, r3, ror r0
     f00:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
     f04:	65766947 	ldrbvs	r6, [r6, #-2375]!	; 0xfffff6b9
     f08:	6d6f7246 	sfmvs	f7, 2, [pc, #-280]!	; df8 <__Vectors_Size+0x638>
     f0c:	00525349 	subseq	r5, r2, r9, asr #6
     f10:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
     f14:	6e614865 	cdpvs	8, 6, cr4, cr1, cr5, {3}
     f18:	5f656c64 	svcpl	0x00656c64
     f1c:	51780074 	cmnpl	r8, r4, ror r0
     f20:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
     f24:	00746553 	rsbseq	r6, r4, r3, asr r5
     f28:	73615476 	cmnvc	r1, #1979711488	; 0x76000000
     f2c:	616c506b 	cmnvs	ip, fp, rrx
     f30:	6e4f6563 	cdpvs	5, 4, cr6, cr15, cr3, {3}
     f34:	6e657645 	cdpvs	6, 6, cr7, cr5, cr5, {2}
     f38:	73694c74 	cmnvc	r9, #116, 24	; 0x7400
     f3c:	73655274 	cmnvc	r5, #116, 4	; 0x40000007
     f40:	63697274 	cmnvs	r9, #116, 4	; 0x40000007
     f44:	00646574 	rsbeq	r6, r4, r4, ror r5
     f48:	75517875 	ldrbvc	r7, [r1, #-2165]	; 0xfffff78b
     f4c:	47657565 	strbmi	r7, [r5, -r5, ror #10]!
     f50:	75517465 	ldrbvc	r7, [r1, #-1125]	; 0xfffffb9b
     f54:	4c657565 	cfstr64mi	mvdx7, [r5], #-404	; 0xfffffe6c
     f58:	74676e65 	strbtvc	r6, [r7], #-3685	; 0xfffff19b
     f5c:	70700068 	rsbsvc	r0, r0, r8, rrx
     f60:	61745378 	cmnvs	r4, r8, ror r3
     f64:	51636974 	smcpl	13972	; 0x3694
     f68:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
     f6c:	75517800 	ldrbvc	r7, [r1, #-2048]	; 0xfffff800
     f70:	43657565 	cmnmi	r5, #423624704	; 0x19400000
     f74:	74616572 	strbtvc	r6, [r1], #-1394	; 0xfffffa8e
     f78:	74754d65 	ldrbtvc	r4, [r5], #-3429	; 0xfffff29b
     f7c:	74537865 	ldrbvc	r7, [r3], #-2149	; 0xfffff79b
     f80:	63697461 	cmnvs	r9, #1627389952	; 0x61000000
     f84:	536c7500 	cmnpl	ip, #0, 10
     f88:	6e497465 	cdpvs	4, 4, cr7, cr9, cr5, {3}
     f8c:	72726574 	rsbsvc	r6, r2, #116, 10	; 0x1d000000
     f90:	4d747075 	ldclmi	0, cr7, [r4, #-468]!	; 0xfffffe2c
     f94:	006b7361 	rsbeq	r7, fp, r1, ror #6
     f98:	65755178 	ldrbvs	r5, [r5, #-376]!	; 0xfffffe88
     f9c:	65476575 	strbvs	r6, [r7, #-1397]	; 0xfffffa8b
     fa0:	6972656e 	ldmdbvs	r2!, {r1, r2, r3, r5, r6, r8, sl, sp, lr}^
     fa4:	65724363 	ldrbvs	r4, [r2, #-867]!	; 0xfffffc9d
     fa8:	00657461 	rsbeq	r7, r5, r1, ror #8
     fac:	65755178 	ldrbvs	r5, [r5, #-376]!	; 0xfffffe88
     fb0:	72436575 	subvc	r6, r3, #490733568	; 0x1d400000
     fb4:	65746165 	ldrbvs	r6, [r4, #-357]!	; 0xfffffe9b
     fb8:	6574754d 	ldrbvs	r7, [r4, #-1357]!	; 0xfffffab3
     fbc:	53780078 	cmnpl	r8, #120	; 0x78
     fc0:	49544154 	ldmdbmi	r4, {r2, r4, r6, r8, lr}^
     fc4:	494c5f43 	stmdbmi	ip, {r0, r1, r6, r8, r9, sl, fp, ip, lr}^
     fc8:	70005453 	andvc	r5, r0, r3, asr r4
     fcc:	6e497672 	mcrvs	6, 2, r7, cr9, cr2, {3}
     fd0:	61697469 	cmnvs	r9, r9, ror #8
     fd4:	6573696c 	ldrbvs	r6, [r3, #-2412]!	; 0xfffff694
     fd8:	6574754d 	ldrbvs	r7, [r4, #-1357]!	; 0xfffffab3
     fdc:	54780078 	ldrbtpl	r0, [r8], #-120	; 0xffffff88
     fe0:	4f656d69 	svcmi	0x00656d69
     fe4:	746e456e 	strbtvc	r4, [lr], #-1390	; 0xfffffa92
     fe8:	6e697265 	cdpvs	2, 6, cr7, cr9, cr5, {3}
     fec:	74530067 	ldrbvc	r0, [r3], #-103	; 0xffffff99
     ff0:	63697461 	cmnvs	r9, #1627389952	; 0x61000000
     ff4:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
     ff8:	00745f65 	rsbseq	r5, r4, r5, ror #30
     ffc:	65755178 	ldrbvs	r5, [r5, #-376]!	; 0xfffffe88
    1000:	65526575 	ldrbvs	r6, [r2, #-1397]	; 0xfffffa8b
    1004:	65766f6d 	ldrbvs	r6, [r6, #-3949]!	; 0xfffff093
    1008:	6d6f7246 	sfmvs	f7, 2, [pc, #-280]!	; ef8 <__Vectors_Size+0x738>
    100c:	00746553 	rsbseq	r6, r4, r3, asr r5
    1010:	614d7875 	hvcvs	55173	; 0xd785
    1014:	756f4378 	strbvc	r4, [pc, #-888]!	; ca4 <__Vectors_Size+0x4e4>
    1018:	7800746e 	stmdavc	r0, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
    101c:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
    1020:	65724365 	ldrbvs	r4, [r2, #-869]!	; 0xfffffc9b
    1024:	53657461 	cmnpl	r5, #1627389952	; 0x61000000
    1028:	54007465 	strpl	r7, [r0], #-1125	; 0xfffffb9b
    102c:	4f656d69 	svcmi	0x00656d69
    1030:	745f7475 	ldrbvc	r7, [pc], #-1141	; 1038 <__HEAP_SIZE+0x38>
    1034:	61547600 	cmpvs	r4, r0, lsl #12
    1038:	6e496b73 	vmovvs.8	d9[3], r6
    103c:	6e726574 	mrcvs	5, 3, r6, cr2, cr4, {3}
    1040:	65536c61 	ldrbvs	r6, [r3, #-3169]	; 0xfffff39f
    1044:	6d695474 	cfstrdvs	mvd5, [r9, #-464]!	; 0xfffffe30
    1048:	74754f65 	ldrbtvc	r4, [r5], #-3941	; 0xfffff09b
    104c:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
    1050:	63700065 	cmnvs	r0, #101	; 0x65
    1054:	6769724f 	strbvs	r7, [r9, -pc, asr #4]!
    1058:	6c616e69 	stclvs	14, cr6, [r1], #-420	; 0xfffffe5c
    105c:	64616552 	strbtvs	r6, [r1], #-1362	; 0xfffffaae
    1060:	69736f50 	ldmdbvs	r3!, {r4, r6, r8, r9, sl, fp, sp, lr}^
    1064:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    1068:	75517800 	ldrbvc	r7, [r1, #-2048]	; 0xfffff800
    106c:	43657565 	cmnmi	r5, #423624704	; 0x19400000
    1070:	74616572 	strbtvc	r6, [r1], #-1394	; 0xfffffa8e
    1074:	756f4365 	strbvc	r4, [pc, #-869]!	; d17 <__Vectors_Size+0x557>
    1078:	6e69746e 	cdpvs	4, 6, cr7, cr9, cr14, {3}
    107c:	6d655367 	stclvs	3, cr5, [r5, #-412]!	; 0xfffffe64
    1080:	6f687061 	svcvs	0x00687061
    1084:	74536572 	ldrbvc	r6, [r3], #-1394	; 0xfffffa8e
    1088:	63697461 	cmnvs	r9, #1627389952	; 0x61000000
    108c:	48787500 	ldmdami	r8!, {r8, sl, ip, sp, lr}^
    1090:	65686769 	strbvs	r6, [r8, #-1897]!	; 0xfffff897
    1094:	72507473 	subsvc	r7, r0, #1929379840	; 0x73000000
    1098:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    109c:	664f7974 			; <UNDEFINED> instruction: 0x664f7974
    10a0:	74696157 	strbtvc	r6, [r9], #-343	; 0xfffffea9
    10a4:	54676e69 	strbtpl	r6, [r7], #-3689	; 0xfffff197
    10a8:	736b7361 	cmnvc	fp, #-2080374783	; 0x84000001
    10ac:	51637500 	cmnpl	r3, r0, lsl #10
    10b0:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
    10b4:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
    10b8:	53787500 	cmnpl	r8, #0, 10
    10bc:	70616d65 	rsbvc	r6, r1, r5, ror #26
    10c0:	65726f68 	ldrbvs	r6, [r2, #-3944]!	; 0xfffff098
    10c4:	6e756f43 	cdpvs	15, 7, cr6, cr5, cr3, {2}
    10c8:	63700074 	cmnvs	r0, #116	; 0x74
    10cc:	74697257 	strbtvc	r7, [r9], #-599	; 0xfffffda9
    10d0:	006f5465 	rsbeq	r5, pc, r5, ror #8
    10d4:	6e695f5f 	mcrvs	15, 3, r5, cr9, cr15, {2}
    10d8:	745f3874 	ldrbvc	r3, [pc], #-2164	; 10e0 <__HEAP_SIZE+0xe0>
    10dc:	51787500 	cmnpl	r8, r0, lsl #10
    10e0:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
    10e4:	676e654c 	strbvs	r6, [lr, -ip, asr #10]!
    10e8:	78006874 	stmdavc	r0, {r2, r4, r5, r6, fp, sp, lr}
    10ec:	65686e49 	strbvs	r6, [r8, #-3657]!	; 0xfffff1b7
    10f0:	61746972 	cmnvs	r4, r2, ror r9
    10f4:	4f65636e 	svcmi	0x0065636e
    10f8:	72756363 	rsbsvc	r6, r5, #-1946157055	; 0x8c000001
    10fc:	00646572 	rsbeq	r6, r4, r2, ror r5
    1100:	75446375 	strbvc	r6, [r4, #-885]	; 0xfffffc8b
    1104:	35796d6d 	ldrbcc	r6, [r9, #-3437]!	; 0xfffff293
    1108:	44637500 	strbtmi	r7, [r3], #-1280	; 0xfffffb00
    110c:	796d6d75 	stmdbvc	sp!, {r0, r2, r4, r5, r6, r8, sl, fp, sp, lr}^
    1110:	78750036 	ldmdavc	r5!, {r1, r2, r4, r5}^
    1114:	626d754e 	rsbvs	r7, sp, #327155712	; 0x13800000
    1118:	664f7265 	strbvs	r7, [pc], -r5, ror #4
    111c:	6b736154 	blvs	1cd9674 <__RAM_SIZE+0x1bd9674>
    1120:	75510073 	ldrbvc	r0, [r1, #-115]	; 0xffffff8d
    1124:	50657565 	rsbpl	r7, r5, r5, ror #10
    1128:	746e696f 	strbtvc	r6, [lr], #-2415	; 0xfffff691
    112c:	5f737265 	svcpl	0x00737265
    1130:	78750074 	ldmdavc	r5!, {r2, r4, r5, r6}^
    1134:	676e654c 	strbvs	r6, [lr, -ip, asr #10]!
    1138:	76006874 			; <UNDEFINED> instruction: 0x76006874
    113c:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
    1140:	69615765 	stmdbvs	r1!, {r0, r2, r5, r6, r8, r9, sl, ip, lr}^
    1144:	726f4674 	rsbvc	r4, pc, #116, 12	; 0x7400000
    1148:	7373654d 	cmnvc	r3, #322961408	; 0x13400000
    114c:	52656761 	rsbpl	r6, r5, #25427968	; 0x1840000
    1150:	72747365 	rsbsvc	r7, r4, #-1811939327	; 0x94000001
    1154:	65746369 	ldrbvs	r6, [r4, #-873]!	; 0xfffffc97
    1158:	78700064 	ldmdavc	r0!, {r2, r5, r6}^
    115c:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
    1160:	53724f65 	cmnpl	r2, #404	; 0x194
    1164:	70616d65 	rsbvc	r6, r1, r5, ror #26
    1168:	65726f68 	ldrbvs	r6, [r2, #-3944]!	; 0xfffff098
    116c:	75517800 	ldrbvc	r7, [r1, #-2048]	; 0xfffff800
    1170:	53657565 	cmnpl	r5, #423624704	; 0x19400000
    1174:	49657a69 	stmdbmi	r5!, {r0, r3, r5, r6, r9, fp, ip, sp, lr}^
    1178:	7479426e 	ldrbtvc	r4, [r9], #-622	; 0xfffffd92
    117c:	78007365 	stmdavc	r0, {r0, r2, r5, r6, r8, r9, ip, sp, lr}
    1180:	6b736154 	blvs	1cd96d8 <__RAM_SIZE+0x1bd96d8>
    1184:	75736552 	ldrbvc	r6, [r3, #-1362]!	; 0xfffffaae
    1188:	6c41656d 	cfstr64vs	mvdx6, [r1], {109}	; 0x6d
    118c:	7875006c 	ldmdavc	r5!, {r2, r3, r5, r6}^
    1190:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
    1194:	74654765 	strbtvc	r4, [r5], #-1893	; 0xfffff89b
    1198:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
    119c:	65744965 	ldrbvs	r4, [r4, #-2405]!	; 0xfffff69b
    11a0:	7a69536d 	bvc	1a55f5c <__RAM_SIZE+0x1955f5c>
    11a4:	76700065 	ldrbtvc	r0, [r0], -r5, rrx
    11a8:	6d657449 	cfstrdvs	mvd7, [r5, #-292]!	; 0xfffffedc
    11ac:	75516f54 	ldrbvc	r6, [r1, #-3924]	; 0xfffff0ac
    11b0:	00657565 	rsbeq	r7, r5, r5, ror #10
    11b4:	73615478 	cmnvc	r1, #120, 8	; 0x78000000
    11b8:	6568436b 	strbvs	r4, [r8, #-875]!	; 0xfffffc95
    11bc:	6f466b63 	svcvs	0x00466b63
    11c0:	6d695472 	cfstrdvs	mvd5, [r9, #-456]!	; 0xfffffe38
    11c4:	74754f65 	ldrbtvc	r4, [r5], #-3941	; 0xfffff09b
    11c8:	6f507600 	svcvs	0x00507600
    11cc:	72467472 	subvc	r7, r6, #1912602624	; 0x72000000
    11d0:	78006565 	stmdavc	r0, {r0, r2, r5, r6, r8, sl, sp, lr}
    11d4:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
    11d8:	51734965 	cmnpl	r3, r5, ror #18
    11dc:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
    11e0:	6c6c7546 	cfstr64vs	mvdx7, [ip], #-280	; 0xfffffee8
    11e4:	6d6f7246 	sfmvs	f7, 2, [pc, #-280]!	; 10d4 <__HEAP_SIZE+0xd4>
    11e8:	00525349 	subseq	r5, r2, r9, asr #6
    11ec:	75517875 	ldrbvc	r7, [r1, #-2165]	; 0xfffff78b
    11f0:	4d657565 	cfstr64mi	mvdx7, [r5, #-404]!	; 0xfffffe6c
    11f4:	61737365 	cmnvs	r3, r5, ror #6
    11f8:	57736567 	ldrbpl	r6, [r3, -r7, ror #10]!
    11fc:	69746961 	ldmdbvs	r4!, {r0, r5, r6, r8, fp, sp, lr}^
    1200:	7000676e 	andvc	r6, r0, lr, ror #14
    1204:	69615463 	stmdbvs	r1!, {r0, r1, r5, r6, sl, ip, lr}^
    1208:	5178006c 	cmnpl	r8, ip, rrx
    120c:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
    1210:	656e6547 	strbvs	r6, [lr, #-1351]!	; 0xfffffab9
    1214:	43636972 	cmnmi	r3, #1867776	; 0x1c8000
    1218:	74616572 	strbtvc	r6, [r1], #-1394	; 0xfffffa8e
    121c:	61745365 	cmnvs	r4, r5, ror #6
    1220:	00636974 	rsbeq	r6, r3, r4, ror r9
    1224:	75517870 	ldrbvc	r7, [r1, #-2160]	; 0xfffff790
    1228:	00657565 	rsbeq	r7, r5, r5, ror #10
    122c:	41545378 	cmpmi	r4, r8, ror r3
    1230:	5f434954 	svcpl	0x00434954
    1234:	5453494c 	ldrbpl	r4, [r3], #-2380	; 0xfffff6b4
    1238:	4554495f 	ldrbmi	r4, [r4, #-2399]	; 0xfffff6a1
    123c:	5476004d 	ldrbtpl	r0, [r6], #-77	; 0xffffffb3
    1240:	4d6b7361 	stclmi	3, cr7, [fp, #-388]!	; 0xfffffe7c
    1244:	65737369 	ldrbvs	r7, [r3, #-873]!	; 0xfffffc97
    1248:	65695964 	strbvs	r5, [r9, #-2404]!	; 0xfffff69c
    124c:	7800646c 	stmdavc	r0, {r2, r3, r5, r6, sl, sp, lr}
    1250:	6b736154 	blvs	1cd97a8 <__RAM_SIZE+0x1bd97a8>
    1254:	6f697250 	svcvs	0x00697250
    1258:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    125c:	65686e49 	strbvs	r6, [r8, #-3657]!	; 0xfffff1b7
    1260:	00746972 	rsbseq	r6, r4, r2, ror r9
    1264:	65527875 	ldrbvs	r7, [r2, #-2165]	; 0xfffff78b
    1268:	73727563 	cmnvc	r2, #415236096	; 0x18c00000
    126c:	43657669 	cmnmi	r5, #110100480	; 0x6900000
    1270:	436c6c61 	cmnmi	ip, #24832	; 0x6100
    1274:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
    1278:	75517800 	ldrbvc	r7, [r1, #-2048]	; 0xfffff800
    127c:	53657565 	cmnpl	r5, #423624704	; 0x19400000
    1280:	63656c65 	cmnvs	r5, #25856	; 0x6500
    1284:	6f724674 	svcvs	0x00724674
    1288:	7465536d 	strbtvc	r5, [r5], #-877	; 0xfffffc93
    128c:	75517800 	ldrbvc	r7, [r1, #-2048]	; 0xfffff800
    1290:	50657565 	rsbpl	r7, r5, r5, ror #10
    1294:	466b6565 	strbtmi	r6, [fp], -r5, ror #10
    1298:	496d6f72 	stmdbmi	sp!, {r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
    129c:	75005253 	strvc	r5, [r0, #-595]	; 0xfffffdad
    12a0:	67694878 			; <UNDEFINED> instruction: 0x67694878
    12a4:	74736568 	ldrbtvc	r6, [r3], #-1384	; 0xfffffa98
    12a8:	74696157 	strbtvc	r6, [r9], #-343	; 0xfffffea9
    12ac:	50676e69 	rsbpl	r6, r7, r9, ror #28
    12b0:	726f6972 	rsbvc	r6, pc, #1867776	; 0x1c8000
    12b4:	00797469 	rsbseq	r7, r9, r9, ror #8
    12b8:	43767270 	cmnmi	r6, #112, 4
    12bc:	4479706f 	ldrbtmi	r7, [r9], #-111	; 0xffffff91
    12c0:	46617461 	strbtmi	r7, [r1], -r1, ror #8
    12c4:	516d6f72 	smcpl	55026	; 0xd6f2
    12c8:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
    12cc:	61547600 	cmpvs	r4, r0, lsl #12
    12d0:	72506b73 	subsvc	r6, r0, #117760	; 0x1cc00
    12d4:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    12d8:	69447974 	stmdbvs	r4, {r2, r4, r5, r6, r8, fp, ip, sp, lr}^
    12dc:	686e6973 	stmdavs	lr!, {r0, r1, r4, r5, r6, r8, fp, sp, lr}^
    12e0:	74697265 	strbtvc	r7, [r9], #-613	; 0xfffffd9b
    12e4:	65746641 	ldrbvs	r6, [r4, #-1601]!	; 0xfffff9bf
    12e8:	6d695472 	cfstrdvs	mvd5, [r9, #-456]!	; 0xfffffe38
    12ec:	74756f65 	ldrbtvc	r6, [r5], #-3941	; 0xfffff09b
    12f0:	75447800 	strbvc	r7, [r4, #-2048]	; 0xfffff800
    12f4:	33796d6d 	cmncc	r9, #6976	; 0x1b40
    12f8:	61547800 	cmpvs	r4, r0, lsl #16
    12fc:	65476b73 	strbvs	r6, [r7, #-2931]	; 0xfffff48d
    1300:	72754374 	rsbsvc	r4, r5, #116, 6	; 0xd0000001
    1304:	746e6572 	strbtvc	r6, [lr], #-1394	; 0xfffffa8e
    1308:	6b736154 	blvs	1cd9860 <__RAM_SIZE+0x1bd9860>
    130c:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
    1310:	7000656c 	andvc	r6, r0, ip, ror #10
    1314:	61654863 	cmnvs	r5, r3, ror #16
    1318:	51780064 	cmnpl	r8, r4, rrx
    131c:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
    1320:	65766947 	ldrbvs	r6, [r6, #-2375]!	; 0xfffff6b9
    1324:	6574754d 	ldrbvs	r7, [r4, #-1357]!	; 0xfffffab3
    1328:	63655278 	cmnvs	r5, #120, 4	; 0x80000007
    132c:	69737275 	ldmdbvs	r3!, {r0, r2, r4, r5, r6, r9, ip, sp, lr}^
    1330:	70006576 	andvc	r6, r0, r6, ror r5
    1334:	6e557672 	mrcvs	6, 2, r7, cr5, cr2, {3}
    1338:	6b636f6c 	blvs	18dd0f0 <__RAM_SIZE+0x17dd0f0>
    133c:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
    1340:	51780065 	cmnpl	r8, r5, rrx
    1344:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
    1348:	656e6547 	strbvs	r6, [lr, #-1351]!	; 0xfffffab9
    134c:	52636972 	rsbpl	r6, r3, #1867776	; 0x1c8000
    1350:	74657365 	strbtvc	r7, [r5], #-869	; 0xfffffc9b
    1354:	75517800 	ldrbvc	r7, [r1, #-2048]	; 0xfffff800
    1358:	49657565 	stmdbmi	r5!, {r0, r2, r5, r6, r8, sl, ip, sp, lr}^
    135c:	65755173 	ldrbvs	r5, [r5, #-371]!	; 0xfffffe8d
    1360:	6d456575 	cfstr64vs	mvdx6, [r5, #-468]	; 0xfffffe2c
    1364:	46797470 			; <UNDEFINED> instruction: 0x46797470
    1368:	496d6f72 	stmdbmi	sp!, {r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
    136c:	78005253 	stmdavc	r0, {r0, r1, r4, r6, r9, ip, lr}
    1370:	55455551 	strbpl	r5, [r5, #-1361]	; 0xfffffaaf
    1374:	78700045 	ldmdavc	r0!, {r0, r2, r6}^
    1378:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
    137c:	74655365 	strbtvc	r5, [r5], #-869	; 0xfffffc9b
    1380:	746e6f43 	strbtvc	r6, [lr], #-3907	; 0xfffff0bd
    1384:	656e6961 	strbvs	r6, [lr, #-2401]!	; 0xfffff69f
    1388:	50780072 	rsbspl	r0, r8, r2, ror r0
    138c:	7469736f 	strbtvc	r7, [r9], #-879	; 0xfffffc91
    1390:	006e6f69 	rsbeq	r6, lr, r9, ror #30
    1394:	65755178 	ldrbvs	r5, [r5, #-376]!	; 0xfffffe88
    1398:	64416575 	strbvs	r6, [r1], #-1397	; 0xfffffa8b
    139c:	536f5464 	cmnpl	pc, #100, 8	; 0x64000000
    13a0:	63007465 	movwvs	r7, #1125	; 0x465
    13a4:	6f4c7852 	svcvs	0x004c7852
    13a8:	78006b63 	stmdavc	r0, {r0, r1, r5, r6, r8, r9, fp, sp, lr}
    13ac:	54415453 	strbpl	r5, [r1], #-1107	; 0xfffffbad
    13b0:	515f4349 	cmppl	pc, r9, asr #6
    13b4:	45554555 	ldrbmi	r4, [r5, #-1365]	; 0xfffffaab
    13b8:	45787500 	ldrbmi	r7, [r8, #-1280]!	; 0xfffffb00
    13bc:	746e6576 	strbtvc	r6, [lr], #-1398	; 0xfffffa8a
    13c0:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
    13c4:	6e654c65 	cdpvs	12, 6, cr4, cr5, cr5, {3}
    13c8:	00687467 	rsbeq	r7, r8, r7, ror #8
    13cc:	73615478 	cmnvc	r1, #120, 8	; 0x78000000
    13d0:	6d65526b 	sfmvs	f5, 2, [r5, #-428]!	; 0xfffffe54
    13d4:	4665766f 	strbtmi	r7, [r5], -pc, ror #12
    13d8:	456d6f72 	strbmi	r6, [sp, #-3954]!	; 0xfffff08e
    13dc:	746e6576 	strbtvc	r6, [lr], #-1398	; 0xfffffa8a
    13e0:	7473694c 	ldrbtvc	r6, [r3], #-2380	; 0xfffff6b4
    13e4:	61745300 	cmnvs	r4, r0, lsl #6
    13e8:	4c636974 			; <UNDEFINED> instruction: 0x4c636974
    13ec:	5f747369 	svcpl	0x00747369
    13f0:	51780074 	cmnpl	r8, r4, ror r0
    13f4:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
    13f8:	61657243 	cmnvs	r5, r3, asr #4
    13fc:	6f436574 	svcvs	0x00436574
    1400:	69746e75 	ldmdbvs	r4!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
    1404:	6553676e 	ldrbvs	r6, [r3, #-1902]	; 0xfffff892
    1408:	6870616d 	ldmdavs	r0!, {r0, r2, r3, r5, r6, r8, sp, lr}^
    140c:	0065726f 	rsbeq	r7, r5, pc, ror #4
    1410:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
    1414:	61546369 	cmpvs	r4, r9, ror #6
    1418:	745f6b73 	ldrbvc	r6, [pc], #-2931	; 1420 <__HEAP_SIZE+0x420>
    141c:	6f437800 	svcvs	0x00437800
    1420:	44496572 	strbmi	r6, [r9], #-1394	; 0xfffffa8e
    1424:	54637000 	strbtpl	r7, [r3], #-0
    1428:	4e6b7361 	cdpmi	3, 6, cr7, cr11, cr1, {3}
    142c:	00656d61 	rsbeq	r6, r5, r1, ror #26
    1430:	73615476 	cmnvc	r1, #1979711488	; 0x76000000
    1434:	616c506b 	cmnvs	ip, fp, rrx
    1438:	6e4f6563 	cdpvs	5, 4, cr6, cr15, cr3, {3}
    143c:	726f6e55 	rsbvc	r6, pc, #1360	; 0x550
    1440:	65726564 	ldrbvs	r6, [r2, #-1380]!	; 0xfffffa9c
    1444:	65764564 	ldrbvs	r4, [r6, #-1380]!	; 0xfffffa9c
    1448:	694c746e 	stmdbvs	ip, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
    144c:	70007473 	andvc	r7, r0, r3, ror r4
    1450:	64497870 	strbvs	r7, [r9], #-2160	; 0xfffff790
    1454:	6154656c 	cmpvs	r4, ip, ror #10
    1458:	74536b73 	ldrbvc	r6, [r3], #-2931	; 0xfffff48d
    145c:	426b6361 	rsbmi	r6, fp, #-2080374783	; 0x84000001
    1460:	65666675 	strbvs	r6, [r6, #-1653]!	; 0xfffff98b
    1464:	50780072 	rsbspl	r0, r8, r2, ror r0
    1468:	5374726f 	cmnpl	r4, #-268435450	; 0xf0000006
    146c:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
    1470:	65686353 	strbvs	r6, [r8, #-851]!	; 0xfffffcad
    1474:	656c7564 	strbvs	r7, [ip, #-1380]!	; 0xfffffa9c
    1478:	78750072 	ldmdavc	r5!, {r1, r4, r5, r6}^
    147c:	6f697250 	svcvs	0x00697250
    1480:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    1484:	43787000 	cmnmi	r8, #0
    1488:	74736e6f 	ldrbtvc	r6, [r3], #-3695	; 0xfffff191
    148c:	7473694c 	ldrbtvc	r6, [r3], #-2380	; 0xfffff6b4
    1490:	61547800 	cmpvs	r4, r0, lsl #16
    1494:	65476b73 	strbvs	r6, [r7, #-2931]	; 0xfffff48d
    1498:	6c644974 			; <UNDEFINED> instruction: 0x6c644974
    149c:	73615465 	cmnvc	r1, #1694498816	; 0x65000000
    14a0:	6e61486b 	cdpvs	8, 6, cr4, cr1, cr11, {3}
    14a4:	46656c64 	strbtmi	r6, [r5], -r4, ror #24
    14a8:	6f43726f 	svcvs	0x0043726f
    14ac:	70006572 	andvc	r6, r0, r2, ror r5
    14b0:	61745378 	cmnvs	r4, r8, ror r3
    14b4:	694c6574 	stmdbvs	ip, {r2, r4, r5, r6, r8, sl, sp, lr}^
    14b8:	65007473 	strvs	r7, [r0, #-1139]	; 0xfffffb8d
    14bc:	70737553 	rsbsvc	r7, r3, r3, asr r5
    14c0:	65646e65 	strbvs	r6, [r4, #-3685]!	; 0xfffff19b
    14c4:	78750064 	ldmdavc	r5!, {r2, r5, r6}^
    14c8:	6d6d7544 	cfstr64vs	mvdx7, [sp, #-272]!	; 0xfffffef0
    14cc:	00323179 	eorseq	r3, r2, r9, ror r1
    14d0:	73615478 	cmnvc	r1, #120, 8	; 0x78000000
    14d4:	6c65446b 	cfstrdvs	mvd4, [r5], #-428	; 0xfffffe54
    14d8:	6e557961 	vnmlavs.f16	s15, s10, s3	; <UNPREDICTABLE>
    14dc:	006c6974 	rsbeq	r6, ip, r4, ror r9
    14e0:	6e4f7875 	mcrvs	8, 2, r7, cr15, cr5, {3}
    14e4:	6e4f796c 	vmlsvs.f16	s15, s30, s25	; <UNPREDICTABLE>
    14e8:	74754d65 	ldrbtvc	r4, [r5], #-3429	; 0xfffff29b
    14ec:	65487865 	strbvs	r7, [r8, #-2149]	; 0xfffff79b
    14f0:	7500646c 	strvc	r6, [r0, #-1132]	; 0xfffffb94
    14f4:	7469426c 	strbtvc	r4, [r9], #-620	; 0xfffffd94
    14f8:	436f5473 	cmnmi	pc, #1929379840	; 0x73000000
    14fc:	7261656c 	rsbvc	r6, r1, #108, 10	; 0x1b000000
    1500:	78456e4f 	stmdavc	r5, {r0, r1, r2, r3, r6, r9, sl, fp, sp, lr}^
    1504:	78007469 	stmdavc	r0, {r0, r3, r5, r6, sl, ip, sp, lr}
    1508:	6b736154 	blvs	1cd9a60 <__RAM_SIZE+0x1bd9a60>
    150c:	53746547 	cmnpl	r4, #297795584	; 0x11c00000
    1510:	64656863 	strbtvs	r6, [r5], #-2147	; 0xfffff79d
    1514:	72656c75 	rsbvc	r6, r5, #29952	; 0x7500
    1518:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
    151c:	4e650065 	cdpmi	0, 6, cr0, cr5, cr5, {3}
    1520:	7463416f 	strbtvc	r4, [r3], #-367	; 0xfffffe91
    1524:	006e6f69 	rsbeq	r6, lr, r9, ror #30
    1528:	6f547875 	svcvs	0x00547875
    152c:	61655270 	smcvs	21792	; 0x5520
    1530:	72507964 	subsvc	r7, r0, #100, 18	; 0x190000
    1534:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    1538:	70007974 	andvc	r7, r0, r4, ror r9
    153c:	6c654478 	cfstrdvs	mvd4, [r5], #-480	; 0xfffffe20
    1540:	64657961 	strbtvs	r7, [r5], #-2401	; 0xfffff69f
    1544:	7473694c 	ldrbtvc	r6, [r3], #-2380	; 0xfffff6b4
    1548:	45787000 	ldrbmi	r7, [r8, #-0]!
    154c:	746e6576 	strbtvc	r6, [lr], #-1398	; 0xfffffa8a
    1550:	7473694c 	ldrbtvc	r6, [r3], #-2380	; 0xfffff6b4
    1554:	63537800 	cmpvs	r3, #0, 16
    1558:	75646568 	strbvc	r6, [r4, #-1384]!	; 0xfffffa98
    155c:	5272656c 	rsbspl	r6, r2, #108, 10	; 0x1b000000
    1560:	696e6e75 	stmdbvs	lr!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
    1564:	5300676e 	movwpl	r6, #1902	; 0x76e
    1568:	6b636174 	blvs	18d9b40 <__RAM_SIZE+0x17d9b40>
    156c:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
    1570:	7500745f 	strvc	r7, [r0, #-1119]	; 0xfffffba1
    1574:	7469426c 	strbtvc	r4, [r9], #-620	; 0xfffffd94
    1578:	436f5473 	cmnmi	pc, #1929379840	; 0x73000000
    157c:	7261656c 	rsbvc	r6, r1, #108, 10	; 0x1b000000
    1580:	44787500 	ldrbtmi	r7, [r8], #-1280	; 0xfffffb00
    1584:	74656c65 	strbtvc	r6, [r5], #-3173	; 0xfffff39b
    1588:	61546465 	cmpvs	r4, r5, ror #8
    158c:	57736b73 			; <UNDEFINED> instruction: 0x57736b73
    1590:	69746961 	ldmdbvs	r4!, {r0, r5, r6, r8, fp, sp, lr}^
    1594:	6c43676e 	mcrrvs	7, 6, r6, r3, cr14
    1598:	556e6165 	strbpl	r6, [lr, #-357]!	; 0xfffffe9b
    159c:	44780070 	ldrbtmi	r0, [r8], #-112	; 0xffffff90
    15a0:	74656c65 	strbtvc	r6, [r5], #-3173	; 0xfffff39b
    15a4:	42435465 	submi	r5, r3, #1694498816	; 0x65000000
    15a8:	64496e49 	strbvs	r6, [r9], #-3657	; 0xfffff1b7
    15ac:	6154656c 	cmpvs	r4, ip, ror #10
    15b0:	78006b73 	stmdavc	r0, {r0, r1, r4, r5, r6, r8, r9, fp, sp, lr}
    15b4:	646e6550 	strbtvs	r6, [lr], #-1360	; 0xfffffab0
    15b8:	6f436465 	svcvs	0x00436465
    15bc:	73746e75 	cmnvc	r4, #1872	; 0x750
    15c0:	52787000 	rsbspl	r7, r8, #0
    15c4:	79646165 	stmdbvc	r4!, {r0, r2, r5, r6, r8, sp, lr}^
    15c8:	6b736154 	blvs	1cd9b20 <__RAM_SIZE+0x1bd9b20>
    15cc:	73694c73 	cmnvc	r9, #29440	; 0x7300
    15d0:	78007374 	stmdavc	r0, {r2, r4, r5, r6, r8, r9, ip, sp, lr}
    15d4:	65707845 	ldrbvs	r7, [r0, #-2117]!	; 0xfffff7bb
    15d8:	64657463 	strbtvs	r7, [r5], #-1123	; 0xfffffb9d
    15dc:	656c6449 	strbvs	r6, [ip, #-1097]!	; 0xfffffbb7
    15e0:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    15e4:	44787500 	ldrbtmi	r7, [r8], #-1280	; 0xfffffb00
    15e8:	796d6d75 	stmdbvc	sp!, {r0, r2, r4, r5, r6, r8, sl, fp, sp, lr}^
    15ec:	78003032 	stmdavc	r0, {r1, r4, r5, ip, sp}
    15f0:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    15f4:	73615472 	cmnvc	r1, #1912602624	; 0x72000000
    15f8:	4243546b 	submi	r5, r3, #1795162112	; 0x6b000000
    15fc:	4f637500 	svcmi	0x00637500
    1600:	69676972 	stmdbvs	r7!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    1604:	4e6c616e 	powmiez	f6, f4, #0.5
    1608:	6669746f 	strbtvs	r7, [r9], -pc, ror #8
    160c:	61745379 	cmnvs	r4, r9, ror r3
    1610:	76006574 			; <UNDEFINED> instruction: 0x76006574
    1614:	6b736154 	blvs	1cd9b6c <__RAM_SIZE+0x1bd9b6c>
    1618:	54746553 	ldrbtpl	r6, [r4], #-1363	; 0xfffffaad
    161c:	4f656d69 	svcmi	0x00656d69
    1620:	74537475 	ldrbvc	r7, [r3], #-1141	; 0xfffffb8b
    1624:	00657461 	rsbeq	r7, r5, r1, ror #8
    1628:	73615478 	cmnvc	r1, #120, 8	; 0x78000000
    162c:	6e65476b 	cdpvs	7, 6, cr4, cr5, cr11, {3}
    1630:	63697265 	cmnvs	r9, #1342177286	; 0x50000006
    1634:	69746f4e 	ldmdbvs	r4!, {r1, r2, r3, r6, r8, r9, sl, fp, sp, lr}^
    1638:	72467966 	subvc	r7, r6, #1671168	; 0x198000
    163c:	53496d6f 	movtpl	r6, #40303	; 0x9d6f
    1640:	59780052 	ldmdbpl	r8!, {r1, r4, r6}^
    1644:	646c6569 	strbtvs	r6, [ip], #-1385	; 0xfffffa97
    1648:	646e6550 	strbtvs	r6, [lr], #-1360	; 0xfffffab0
    164c:	73676e69 	cmnvc	r7, #1680	; 0x690
    1650:	63757000 	cmnvs	r5, #0
    1654:	63617453 	cmnvs	r1, #1392508928	; 0x53000000
    1658:	7479426b 	ldrbtvc	r4, [r9], #-619	; 0xfffffd95
    165c:	44780065 	ldrbtmi	r0, [r8], #-101	; 0xffffff9b
    1660:	79616c65 	stmdbvc	r1!, {r0, r2, r5, r6, sl, fp, sp, lr}^
    1664:	61546465 	cmpvs	r4, r5, ror #8
    1668:	694c6b73 	stmdbvs	ip, {r0, r1, r4, r5, r6, r8, r9, fp, sp, lr}^
    166c:	00317473 	eorseq	r7, r1, r3, ror r4
    1670:	6c654478 	cfstrdvs	mvd4, [r5], #-480	; 0xfffffe20
    1674:	64657961 	strbtvs	r7, [r5], #-2401	; 0xfffff69f
    1678:	6b736154 	blvs	1cd9bd0 <__RAM_SIZE+0x1bd9bd0>
    167c:	7473694c 	ldrbtvc	r6, [r3], #-2380	; 0xfffff6b4
    1680:	78700032 	ldmdavc	r0!, {r1, r4, r5}^
    1684:	7265764f 	rsbvc	r7, r5, #82837504	; 0x4f00000
    1688:	776f6c66 	strbvc	r6, [pc, -r6, ror #24]!
    168c:	65446465 	strbvs	r6, [r4, #-1125]	; 0xfffffb9b
    1690:	6579616c 	ldrbvs	r6, [r9, #-364]!	; 0xfffffe94
    1694:	73694c64 	cmnvc	r9, #100, 24	; 0x6400
    1698:	55780074 	ldrbpl	r0, [r8, #-116]!	; 0xffffff8c
    169c:	74616470 	strbtvc	r6, [r1], #-1136	; 0xfffffb90
    16a0:	69546465 	ldmdbvs	r4, {r0, r2, r5, r6, sl, sp, lr}^
    16a4:	6f436b63 	svcvs	0x00436b63
    16a8:	00746e75 	rsbseq	r6, r4, r5, ror lr
    16ac:	73615478 	cmnvc	r1, #120, 8	; 0x78000000
    16b0:	7461436b 	strbtvc	r4, [r1], #-875	; 0xfffffc95
    16b4:	70556863 	subsvc	r6, r5, r3, ror #16
    16b8:	6b636954 	blvs	18dbc10 <__RAM_SIZE+0x17dbc10>
    16bc:	6c750073 	ldclvs	0, cr0, [r5], #-460	; 0xfffffe34
    16c0:	61726150 	cmnvs	r2, r0, asr r1
    16c4:	6574656d 	ldrbvs	r6, [r4, #-1389]!	; 0xfffffa93
    16c8:	65007372 	strvs	r7, [r0, #-882]	; 0xfffffc8e
    16cc:	75746552 	ldrbvc	r6, [r4, #-1362]!	; 0xfffffaae
    16d0:	78006e72 	stmdavc	r0, {r1, r4, r5, r6, r9, sl, fp, sp, lr}
    16d4:	6b736154 	blvs	1cd9c2c <__RAM_SIZE+0x1bd9c2c>
    16d8:	65526f54 	ldrbvs	r6, [r2, #-3924]	; 0xfffff0ac
    16dc:	656d7573 	strbvs	r7, [sp, #-1395]!	; 0xfffffa8d
    16e0:	49787500 	ldmdbmi	r8!, {r8, sl, ip, sp, lr}^
    16e4:	7865646e 	stmdavc	r5!, {r1, r2, r3, r5, r6, sl, sp, lr}^
    16e8:	6c436f54 	mcrrvs	15, 5, r6, r3, cr4
    16ec:	00726165 	rsbseq	r6, r2, r5, ror #2
    16f0:	73615476 	cmnvc	r1, #1979711488	; 0x76000000
    16f4:	7465536b 	strbtvc	r5, [r5], #-875	; 0xfffffc95
    16f8:	6c707041 	ldclvs	0, cr7, [r0], #-260	; 0xfffffefc
    16fc:	74616369 	strbtvc	r6, [r1], #-873	; 0xfffffc97
    1700:	546e6f69 	strbtpl	r6, [lr], #-3945	; 0xfffff097
    1704:	546b7361 	strbtpl	r7, [fp], #-865	; 0xfffffc9f
    1708:	78006761 	stmdavc	r0, {r0, r5, r6, r8, r9, sl, sp, lr}
    170c:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    1710:	65724372 	ldrbvs	r4, [r2, #-882]!	; 0xfffffc8e
    1714:	54657461 	strbtpl	r7, [r5], #-1121	; 0xfffffb9f
    1718:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    171c:	6b736154 	blvs	1cd9c74 <__RAM_SIZE+0x1bd9c74>
    1720:	6c536500 	cfldr64vs	mvdx6, [r3], {-0}
    1724:	4d706565 	cfldr64mi	mvdx6, [r0, #-404]!	; 0xfffffe6c
    1728:	5365646f 	cmnpl	r5, #1862270976	; 0x6f000000
    172c:	75746174 	ldrbvc	r6, [r4, #-372]!	; 0xfffffe8c
    1730:	78750073 	ldmdavc	r5!, {r0, r1, r4, r5, r6}^
    1734:	68676948 	stmdavs	r7!, {r3, r6, r8, fp, sp, lr}^
    1738:	72507265 	subsvc	r7, r0, #1342177286	; 0x50000006
    173c:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    1740:	65527974 	ldrbvs	r7, [r2, #-2420]	; 0xfffff68c
    1744:	54796461 	ldrbtpl	r6, [r9], #-1121	; 0xfffffb9f
    1748:	736b7361 	cmnvc	fp, #-2080374783	; 0x84000001
    174c:	61547800 	cmpvs	r4, r0, lsl #16
    1750:	72436b73 	subvc	r6, r3, #117760	; 0x1cc00
    1754:	65746165 	ldrbvs	r6, [r4, #-357]!	; 0xfffffe9b
    1758:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
    175c:	74006369 	strvc	r6, [r0], #-873	; 0xfffffc97
    1760:	43546b73 	cmpmi	r4, #117760	; 0x1cc00
    1764:	63750042 	cmnvs	r5, #66	; 0x42
    1768:	69746f4e 	ldmdbvs	r4!, {r1, r2, r3, r6, r8, r9, sl, fp, sp, lr}^
    176c:	74537966 	ldrbvc	r7, [r3], #-2406	; 0xfffff69a
    1770:	00657461 	rsbeq	r7, r5, r1, ror #8
    1774:	70704176 	rsbsvc	r4, r0, r6, ror r1
    1778:	6163696c 	cmnvs	r3, ip, ror #18
    177c:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    1780:	54746547 	ldrbtpl	r6, [r4], #-1351	; 0xfffffab9
    1784:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    1788:	6b736154 	blvs	1cd9ce0 <__RAM_SIZE+0x1bd9ce0>
    178c:	6f6d654d 	svcvs	0x006d654d
    1790:	78007972 	stmdavc	r0, {r1, r4, r5, r6, r8, fp, ip, sp, lr}
    1794:	6b736154 	blvs	1cd9cec <__RAM_SIZE+0x1bd9cec>
    1798:	656e6547 	strbvs	r6, [lr, #-1351]!	; 0xfffffab9
    179c:	4e636972 			; <UNDEFINED> instruction: 0x4e636972
    17a0:	6669746f 	strbtvs	r7, [r9], -pc, ror #8
    17a4:	78700079 	ldmdavc	r0!, {r0, r3, r4, r5, r6}^
    17a8:	6c626e55 	stclvs	14, cr6, [r2], #-340	; 0xfffffeac
    17ac:	656b636f 	strbvs	r6, [fp, #-879]!	; 0xfffffc91
    17b0:	42435464 	submi	r5, r3, #100, 8	; 0x64000000
    17b4:	6c437800 	mcrrvs	8, 0, r7, r3, cr0
    17b8:	43726165 	cmnmi	r2, #1073741849	; 0x40000019
    17bc:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
    17c0:	78456e4f 	stmdavc	r5, {r0, r1, r2, r3, r6, r9, sl, fp, sp, lr}^
    17c4:	70007469 	andvc	r7, r0, r9, ror #8
    17c8:	72437672 	subvc	r7, r3, #119537664	; 0x7200000
    17cc:	65746165 	ldrbvs	r6, [r4, #-357]!	; 0xfffffe9b
    17d0:	6b736154 	blvs	1cd9d28 <__RAM_SIZE+0x1bd9d28>
    17d4:	6c457800 	mcrrvs	8, 0, r7, r5, cr0
    17d8:	65737061 	ldrbvs	r7, [r3, #-97]!	; 0xffffff9f
    17dc:	6d695464 	cfstrdvs	mvd5, [r9, #-400]!	; 0xfffffe70
    17e0:	41650065 	cmnmi	r5, r5, rrx
    17e4:	74726f62 	ldrbtvc	r6, [r2], #-3938	; 0xfffff09e
    17e8:	65656c53 	strbvs	r6, [r5, #-3155]!	; 0xfffff3ad
    17ec:	53650070 	cmnpl	r5, #112	; 0x70
    17f0:	61567465 	cmpvs	r6, r5, ror #8
    17f4:	5765756c 	strbpl	r7, [r5, -ip, ror #10]!
    17f8:	4f687469 	svcmi	0x00687469
    17fc:	77726576 			; <UNDEFINED> instruction: 0x77726576
    1800:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
    1804:	61547800 	cmpvs	r4, r0, lsl #16
    1808:	65476b73 	strbvs	r6, [r7, #-2931]	; 0xfffff48d
    180c:	63695474 	cmnvs	r9, #116, 8	; 0x74000000
    1810:	756f436b 	strbvc	r4, [pc, #-875]!	; 14ad <__HEAP_SIZE+0x4ad>
    1814:	7246746e 	subvc	r7, r6, #1845493760	; 0x6e000000
    1818:	53496d6f 	movtpl	r6, #40303	; 0x9d6f
    181c:	6c750052 	ldclvs	0, cr0, [r5], #-328	; 0xfffffeb8
    1820:	73746942 	cmnvc	r4, #1081344	; 0x108000
    1824:	6c436f54 	mcrrvs	15, 5, r6, r3, cr4
    1828:	4f726165 	svcmi	0x00726165
    182c:	746e456e 	strbtvc	r4, [lr], #-1390	; 0xfffffa92
    1830:	78007972 	stmdavc	r0, {r1, r4, r5, r6, r8, fp, ip, sp, lr}
    1834:	656c6449 	strbvs	r6, [ip, #-1097]!	; 0xfffffbb7
    1838:	6b736154 	blvs	1cd9d90 <__RAM_SIZE+0x1bd9d90>
    183c:	656d614e 	strbvs	r6, [sp, #-334]!	; 0xfffffeb2
    1840:	65646e49 	strbvs	r6, [r4, #-3657]!	; 0xfffff1b7
    1844:	50780078 	rsbspl	r0, r8, r8, ror r0
    1848:	69646e65 	stmdbvs	r4!, {r0, r2, r5, r6, r9, sl, fp, sp, lr}^
    184c:	6552676e 	ldrbvs	r6, [r2, #-1902]	; 0xfffff892
    1850:	4c796461 	cfldrdmi	mvd6, [r9], #-388	; 0xfffffe7c
    1854:	00747369 	rsbseq	r7, r4, r9, ror #6
    1858:	43767270 	cmnmi	r6, #112, 4
    185c:	74616572 	strbtvc	r6, [r1], #-1394	; 0xfffffa8e
    1860:	61745365 	cmnvs	r4, r5, ror #6
    1864:	54636974 	strbtpl	r6, [r3], #-2420	; 0xfffff68c
    1868:	006b7361 	rsbeq	r7, fp, r1, ror #6
    186c:	73615478 	cmnvc	r1, #120, 8	; 0x78000000
    1870:	7465476b 	strbtvc	r4, [r5], #-1899	; 0xfffff895
    1874:	6c707041 	ldclvs	0, cr7, [r0], #-260	; 0xfffffefc
    1878:	74616369 	strbtvc	r6, [r1], #-873	; 0xfffffc97
    187c:	546e6f69 	strbtpl	r6, [lr], #-3945	; 0xfffff097
    1880:	546b7361 	strbtpl	r7, [fp], #-865	; 0xfffffc9f
    1884:	78006761 	stmdavc	r0, {r0, r5, r6, r8, r9, sl, sp, lr}
    1888:	6b736154 	blvs	1cd9de0 <__RAM_SIZE+0x1bd9de0>
    188c:	69615773 	stmdbvs	r1!, {r0, r1, r4, r5, r6, r8, r9, sl, ip, lr}^
    1890:	676e6974 			; <UNDEFINED> instruction: 0x676e6974
    1894:	6d726554 	cfldr64vs	mvdx6, [r2, #-336]!	; 0xfffffeb0
    1898:	74616e69 	strbtvc	r6, [r1], #-3689	; 0xfffff197
    189c:	006e6f69 	rsbeq	r6, lr, r9, ror #30
    18a0:	73615476 	cmnvc	r1, #1979711488	; 0x76000000
    18a4:	7365526b 	cmnvc	r5, #-1342177274	; 0xb0000006
    18a8:	74537465 	ldrbvc	r7, [r3], #-1125	; 0xfffffb9b
    18ac:	00657461 	rsbeq	r7, r5, r1, ror #8
    18b0:	65547870 	ldrbvs	r7, [r4, #-2160]	; 0xfffff790
    18b4:	7500706d 	strvc	r7, [r0, #-109]	; 0xffffff93
    18b8:	706f5478 	rsbvc	r5, pc, r8, ror r4	; <UNPREDICTABLE>
    18bc:	64657355 	strbtvs	r7, [r5], #-853	; 0xfffffcab
    18c0:	6f697250 	svcvs	0x00697250
    18c4:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    18c8:	54787500 	ldrbtpl	r7, [r8], #-1280	; 0xfffffb00
    18cc:	476b7361 	strbmi	r7, [fp, -r1, ror #6]!
    18d0:	74537465 	ldrbvc	r7, [r3], #-1125	; 0xfffffb9b
    18d4:	486b6361 	stmdami	fp!, {r0, r5, r6, r8, r9, sp, lr}^
    18d8:	57686769 	strbpl	r6, [r8, -r9, ror #14]!
    18dc:	72657461 	rsbvc	r7, r5, #1627389952	; 0x61000000
    18e0:	6b72614d 	blvs	1c99e1c <__RAM_SIZE+0x1b99e1c>
    18e4:	61547800 	cmpvs	r4, r0, lsl #16
    18e8:	6e496b73 	vmovvs.8	d9[3], r6
    18ec:	6d657263 	sfmvs	f7, 2, [r5, #-396]!	; 0xfffffe74
    18f0:	54746e65 	ldrbtpl	r6, [r4], #-3685	; 0xfffff19b
    18f4:	006b6369 	rsbeq	r6, fp, r9, ror #6
    18f8:	73615476 	cmnvc	r1, #1979711488	; 0x76000000
    18fc:	6574536b 	ldrbvs	r5, [r4, #-875]!	; 0xfffffc95
    1900:	63695470 	cmnvs	r9, #112, 8	; 0x70000000
    1904:	7875006b 	ldmdavc	r5!, {r0, r1, r3, r5, r6}^
    1908:	63617453 	cmnvs	r1, #1392508928	; 0x53000000
    190c:	7065446b 	rsbvc	r4, r5, fp, ror #8
    1910:	65006874 	strvs	r6, [r0, #-2164]	; 0xfffff78c
    1914:	69746f4e 	ldmdbvs	r4!, {r1, r2, r3, r6, r8, r9, sl, fp, sp, lr}^
    1918:	63417966 	movtvs	r7, #6502	; 0x1966
    191c:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    1920:	61547800 	cmpvs	r4, r0, lsl #16
    1924:	65476b73 	strbvs	r6, [r7, #-2931]	; 0xfffff48d
    1928:	6e614874 	mcrvs	8, 3, r4, cr1, cr4, {3}
    192c:	00656c64 	rsbeq	r6, r5, r4, ror #24
    1930:	65446375 	strbvs	r6, [r4, #-885]	; 0xfffffc8b
    1934:	4179616c 	cmnmi	r9, ip, ror #2
    1938:	74726f62 	ldrbtvc	r6, [r2], #-3938	; 0xfffff09e
    193c:	53006465 	movwpl	r6, #1125	; 0x465
    1940:	69746174 	ldmdbvs	r4!, {r2, r4, r5, r6, r8, sp, lr}^
    1944:	73694c63 	cmnvc	r9, #25344	; 0x6300
    1948:	65744974 	ldrbvs	r4, [r4, #-2420]!	; 0xfffff68c
    194c:	00745f6d 	rsbseq	r5, r4, sp, ror #30
    1950:	63695478 	cmnvs	r9, #120, 8	; 0x78000000
    1954:	756f436b 	strbvc	r4, [pc, #-875]!	; 15f1 <__HEAP_SIZE+0x5f1>
    1958:	7600746e 	strvc	r7, [r0], -lr, ror #8
    195c:	6b736154 	blvs	1cd9eb4 <__RAM_SIZE+0x1bd9eb4>
    1960:	53646e45 	cmnpl	r4, #1104	; 0x450
    1964:	64656863 	strbtvs	r6, [r5], #-2147	; 0xfffff79d
    1968:	72656c75 	rsbvc	r6, r5, #29952	; 0x7500
    196c:	54787500 	ldrbtpl	r7, [r8], #-1280	; 0xfffffb00
    1970:	506b7361 	rsbpl	r7, fp, r1, ror #6
    1974:	726f6972 	rsbvc	r6, pc, #1867776	; 0x1c8000
    1978:	47797469 	ldrbmi	r7, [r9, -r9, ror #8]!
    197c:	78007465 	stmdavc	r0, {r0, r2, r5, r6, sl, ip, sp, lr}
    1980:	736e6f43 	cmnvc	lr, #268	; 0x10c
    1984:	63695474 	cmnvs	r9, #116, 8	; 0x74000000
    1988:	756f436b 	strbvc	r4, [pc, #-875]!	; 1625 <__HEAP_SIZE+0x625>
    198c:	7800746e 	stmdavc	r0, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
    1990:	70737553 	rsbsvc	r7, r3, r3, asr r5
    1994:	65646e65 	strbvs	r6, [r4, #-3685]!	; 0xfffff19b
    1998:	73615464 	cmnvc	r1, #100, 8	; 0x64000000
    199c:	73694c6b 	cmnvc	r9, #27392	; 0x6b00
    19a0:	63700074 	cmnvs	r0, #116	; 0x74
    19a4:	656d614e 	strbvs	r6, [sp, #-334]!	; 0xfffffeb2
    19a8:	4f787000 	svcmi	0x00787000
    19ac:	66726576 			; <UNDEFINED> instruction: 0x66726576
    19b0:	44776f6c 	ldrbtmi	r6, [r7], #-3948	; 0xfffff094
    19b4:	79616c65 	stmdbvc	r1!, {r0, r2, r5, r6, sl, fp, sp, lr}^
    19b8:	61546465 	cmpvs	r4, r5, ror #8
    19bc:	694c6b73 	stmdbvs	ip, {r0, r1, r4, r5, r6, r8, r9, fp, sp, lr}^
    19c0:	75007473 	strvc	r7, [r0, #-1139]	; 0xfffffb8d
    19c4:	6d754478 	cfldrdvs	mvd4, [r5, #-480]!	; 0xfffffe20
    19c8:	0035796d 	eorseq	r7, r5, sp, ror #18
    19cc:	47767270 			; <UNDEFINED> instruction: 0x47767270
    19d0:	78457465 	stmdavc	r5, {r0, r2, r5, r6, sl, ip, sp, lr}^
    19d4:	74636570 	strbtvc	r6, [r3], #-1392	; 0xfffffa90
    19d8:	64496465 	strbvs	r6, [r9], #-1125	; 0xfffffb9b
    19dc:	6954656c 	ldmdbvs	r4, {r2, r3, r5, r6, r8, sl, sp, lr}^
    19e0:	7800656d 	stmdavc	r0, {r0, r2, r3, r5, r6, r8, sl, sp, lr}
    19e4:	656c6449 	strbvs	r6, [ip, #-1097]!	; 0xfffffbb7
    19e8:	6b736154 	blvs	1cd9f40 <__RAM_SIZE+0x1bd9f40>
    19ec:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
    19f0:	0073656c 	rsbseq	r6, r3, ip, ror #10
    19f4:	73615465 	cmnvc	r1, #1694498816	; 0x65000000
    19f8:	6e6f436b 	cdpvs	3, 6, cr4, cr15, cr11, {3}
    19fc:	6d726966 			; <UNDEFINED> instruction: 0x6d726966
    1a00:	65656c53 	strbvs	r6, [r5, #-3155]!	; 0xfffff3ad
    1a04:	646f4d70 	strbtvs	r4, [pc], #-3440	; 1a0c <__HEAP_SIZE+0xa0c>
    1a08:	61745365 	cmnvs	r4, r5, ror #6
    1a0c:	00737574 	rsbseq	r7, r3, r4, ror r5
    1a10:	6f4e6c75 	svcvs	0x004e6c75
    1a14:	69666974 	stmdbvs	r6!, {r2, r4, r5, r6, r8, fp, sp, lr}^
    1a18:	61566465 	cmpvs	r6, r5, ror #8
    1a1c:	0065756c 	rsbeq	r7, r5, ip, ror #10
    1a20:	65527870 	ldrbvs	r7, [r2, #-2160]	; 0xfffff790
    1a24:	6e727574 	mrcvs	5, 3, r7, cr2, cr4, {3}
    1a28:	61547600 	cmpvs	r4, r0, lsl #12
    1a2c:	65526b73 	ldrbvs	r6, [r2, #-2931]	; 0xfffff48d
    1a30:	65766f6d 	ldrbvs	r6, [r6, #-3949]!	; 0xfffff093
    1a34:	6d6f7246 	sfmvs	f7, 2, [pc, #-280]!	; 1924 <__HEAP_SIZE+0x924>
    1a38:	726f6e55 	rsbvc	r6, pc, #1360	; 0x550
    1a3c:	65726564 	ldrbvs	r6, [r2, #-1380]!	; 0xfffffa9c
    1a40:	65764564 	ldrbvs	r4, [r6, #-1380]!	; 0xfffffa9c
    1a44:	694c746e 	stmdbvs	ip, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
    1a48:	75007473 	strvc	r7, [r0, #-1139]	; 0xfffffb8d
    1a4c:	74754d78 	ldrbtvc	r4, [r5], #-3448	; 0xfffff288
    1a50:	73657865 	cmnvc	r5, #6619136	; 0x650000
    1a54:	646c6548 	strbtvs	r6, [ip], #-1352	; 0xfffffab8
    1a58:	65536500 	ldrbvs	r6, [r3, #-1280]	; 0xfffffb00
    1a5c:	6c615674 	stclvs	6, cr5, [r1], #-464	; 0xfffffe30
    1a60:	69576575 	ldmdbvs	r7, {r0, r2, r4, r5, r6, r8, sl, sp, lr}^
    1a64:	756f6874 	strbvc	r6, [pc, #-2164]!	; 11f8 <__HEAP_SIZE+0x1f8>
    1a68:	65764f74 	ldrbvs	r4, [r6, #-3956]!	; 0xfffff08c
    1a6c:	69727772 	ldmdbvs	r2!, {r1, r4, r5, r6, r8, r9, sl, ip, sp, lr}^
    1a70:	78006574 	stmdavc	r0, {r2, r4, r5, r6, r8, sl, sp, lr}
    1a74:	6b736154 	blvs	1cd9fcc <__RAM_SIZE+0x1bd9fcc>
    1a78:	656e6547 	strbvs	r6, [lr, #-1351]!	; 0xfffffab9
    1a7c:	4e636972 			; <UNDEFINED> instruction: 0x4e636972
    1a80:	6669746f 	strbtvs	r7, [r9], -pc, ror #8
    1a84:	69615779 	stmdbvs	r1!, {r0, r3, r4, r5, r6, r8, r9, sl, ip, lr}^
    1a88:	53780074 	cmnpl	r8, #116	; 0x74
    1a8c:	6c756f68 	ldclvs	15, cr6, [r5], #-416	; 0xfffffe60
    1a90:	6c654464 	cfstrdvs	mvd4, [r5], #-400	; 0xfffffe70
    1a94:	70007961 	andvc	r7, r0, r1, ror #18
    1a98:	64497672 	strbvs	r7, [r9], #-1650	; 0xfffff98e
    1a9c:	6154656c 	cmpvs	r4, ip, ror #10
    1aa0:	70006b73 	andvc	r6, r0, r3, ror fp
    1aa4:	65537672 	ldrbvs	r7, [r3, #-1650]	; 0xfffff98e
    1aa8:	68637261 	stmdavs	r3!, {r0, r5, r6, r9, ip, sp, lr}^
    1aac:	4e726f46 	cdpmi	15, 7, cr6, cr2, cr6, {2}
    1ab0:	57656d61 	strbpl	r6, [r5, -r1, ror #26]!
    1ab4:	69687469 	stmdbvs	r8!, {r0, r3, r5, r6, sl, ip, sp, lr}^
    1ab8:	6e69536e 	cdpvs	3, 6, cr5, cr9, cr14, {3}
    1abc:	4c656c67 	stclmi	12, cr6, [r5], #-412	; 0xfffffe64
    1ac0:	00747369 	rsbseq	r7, r4, r9, ror #6
    1ac4:	61546c75 	cmpvs	r4, r5, ror ip
    1ac8:	65476b73 	strbvs	r6, [r7, #-2931]	; 0xfffff48d
    1acc:	6972656e 	ldmdbvs	r2!, {r1, r2, r3, r5, r6, r8, sl, sp, lr}^
    1ad0:	746f4e63 	strbtvc	r4, [pc], #-3683	; 1ad8 <__HEAP_SIZE+0xad8>
    1ad4:	54796669 	ldrbtpl	r6, [r9], #-1641	; 0xfffff997
    1ad8:	00656b61 	rsbeq	r6, r5, r1, ror #22
    1adc:	41767270 	cmnmi	r6, r0, ror r2
    1ae0:	654e6464 	strbvs	r6, [lr, #-1124]	; 0xfffffb9c
    1ae4:	73615477 	cmnvc	r1, #1996488704	; 0x77000000
    1ae8:	526f546b 	rsbpl	r5, pc, #1795162112	; 0x6b000000
    1aec:	79646165 	stmdbvc	r4!, {r0, r2, r5, r6, r8, sp, lr}^
    1af0:	7473694c 	ldrbtvc	r6, [r3], #-2380	; 0xfffff6b4
    1af4:	48787000 	ldmdami	r8!, {ip, sp, lr}^
    1af8:	466b6f6f 	strbtmi	r6, [fp], -pc, ror #30
    1afc:	74636e75 	strbtvc	r6, [r3], #-3701	; 0xfffff18b
    1b00:	006e6f69 	rsbeq	r6, lr, r9, ror #30
    1b04:	61655265 	cmnvs	r5, r5, ror #4
    1b08:	70007964 	andvc	r7, r0, r4, ror #18
    1b0c:	72437672 	subvc	r7, r3, #119537664	; 0x7200000
    1b10:	65746165 	ldrbvs	r6, [r4, #-357]!	; 0xfffffe9b
    1b14:	656c6449 	strbvs	r6, [ip, #-1097]!	; 0xfffffbb7
    1b18:	6b736154 	blvs	1cda070 <__RAM_SIZE+0x1bda070>
    1b1c:	54650073 	strbtpl	r0, [r5], #-115	; 0xffffff8d
    1b20:	476b7361 	strbmi	r7, [fp, -r1, ror #6]!
    1b24:	74537465 	ldrbvc	r7, [r3], #-1125	; 0xfffffb9b
    1b28:	00657461 	rsbeq	r7, r5, r1, ror #8
    1b2c:	78757070 	ldmdavc	r5!, {r4, r5, r6, ip, sp, lr}^
    1b30:	63617453 	cmnvs	r1, #1392508928	; 0x53000000
    1b34:	6675426b 	ldrbtvs	r4, [r5], -fp, ror #4
    1b38:	00726566 	rsbseq	r6, r2, r6, ror #10
    1b3c:	654e7870 	strbvs	r7, [lr, #-2160]	; 0xfffff790
    1b40:	42435477 	submi	r5, r3, #1996488704	; 0x77000000
    1b44:	51787500 	cmnpl	r8, r0, lsl #10
    1b48:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
    1b4c:	78707000 	ldmdavc	r0!, {ip, sp, lr}^
    1b50:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    1b54:	73615472 	cmnvc	r1, #1912602624	; 0x72000000
    1b58:	6174536b 	cmnvs	r4, fp, ror #6
    1b5c:	75426b63 	strbvc	r6, [r2, #-2915]	; 0xfffff49d
    1b60:	72656666 	rsbvc	r6, r5, #106954752	; 0x6600000
    1b64:	69597800 	ldmdbvs	r9, {fp, ip, sp, lr}^
    1b68:	4f646c65 	svcmi	0x00646c65
    1b6c:	72756363 	rsbsvc	r6, r5, #-1946157055	; 0x8c000001
    1b70:	00646572 	rsbeq	r6, r4, r2, ror r5
    1b74:	6f6d654d 	svcvs	0x006d654d
    1b78:	65527972 	ldrbvs	r7, [r2, #-2418]	; 0xfffff68e
    1b7c:	6e6f6967 	vnmulvs.f16	s13, s30, s15	; <UNPREDICTABLE>
    1b80:	7800745f 	stmdavc	r0, {r0, r1, r2, r3, r4, r6, sl, ip, sp, lr}
    1b84:	7478654e 	ldrbtvc	r6, [r8], #-1358	; 0xfffffab2
    1b88:	6b736154 	blvs	1cda0e0 <__RAM_SIZE+0x1bda0e0>
    1b8c:	6c626e55 	stclvs	14, cr6, [r2], #-340	; 0xfffffeac
    1b90:	546b636f 	strbtpl	r6, [fp], #-879	; 0xfffffc91
    1b94:	00656d69 	rsbeq	r6, r5, r9, ror #26
    1b98:	6f507870 	svcvs	0x00507870
    1b9c:	6e497472 	mcrvs	4, 2, r7, cr9, cr2, {3}
    1ba0:	61697469 	cmnvs	r9, r9, ror #8
    1ba4:	6573696c 	ldrbvs	r6, [r3, #-2412]!	; 0xfffff694
    1ba8:	63617453 	cmnvs	r1, #1392508928	; 0x53000000
    1bac:	7870006b 	ldmdavc	r0!, {r0, r1, r3, r5, r6}^
    1bb0:	6d6d7544 	cfstr64vs	mvdx7, [sp, #-272]!	; 0xfffffef0
    1bb4:	75003179 	strvc	r3, [r0, #-377]	; 0xfffffe87
    1bb8:	6d754463 	cfldrdvs	mvd4, [r5, #-396]!	; 0xfffffe74
    1bbc:	3931796d 	ldmdbcc	r1!, {r0, r2, r3, r5, r6, r8, fp, ip, sp, lr}
    1bc0:	44787000 	ldrbtmi	r7, [r8], #-0
    1bc4:	796d6d75 	stmdbvc	sp!, {r0, r2, r4, r5, r6, r8, sl, fp, sp, lr}^
    1bc8:	44650036 	strbtmi	r0, [r5], #-54	; 0xffffffca
    1bcc:	74656c65 	strbtvc	r6, [r5], #-3173	; 0xfffff39b
    1bd0:	75006465 	strvc	r6, [r0, #-1125]	; 0xfffffb9b
    1bd4:	7361546c 	cmnvc	r1, #108, 8	; 0x6c000000
    1bd8:	6e65476b 	cdpvs	7, 6, cr4, cr5, cr11, {3}
    1bdc:	63697265 	cmnvs	r9, #1342177286	; 0x50000006
    1be0:	69746f4e 	ldmdbvs	r4!, {r1, r2, r3, r6, r8, r9, sl, fp, sp, lr}^
    1be4:	61567966 	cmpvs	r6, r6, ror #18
    1be8:	4365756c 	cmnmi	r5, #108, 10	; 0x1b000000
    1bec:	7261656c 	rsbvc	r6, r1, #108, 10	; 0x1b000000
    1bf0:	4c6c7500 	cfstr64mi	mvdx7, [ip], #-0
    1bf4:	74676e65 	strbtvc	r6, [r7], #-3685	; 0xfffff19b
    1bf8:	426e4968 	rsbmi	r4, lr, #104, 18	; 0x1a0000
    1bfc:	73657479 	cmnvc	r5, #2030043136	; 0x79000000
    1c00:	78707000 	ldmdavc	r0!, {ip, sp, lr}^
    1c04:	656c6449 	strbvs	r6, [ip, #-1097]!	; 0xfffffbb7
    1c08:	6b736154 	blvs	1cda160 <__RAM_SIZE+0x1bda160>
    1c0c:	42424354 	submi	r4, r2, #84, 6	; 0x50000001
    1c10:	65666675 	strbvs	r6, [r6, #-1653]!	; 0xfffff98b
    1c14:	72700072 	rsbsvc	r0, r0, #114	; 0x72
    1c18:	73655276 	cmnvc	r5, #1610612743	; 0x60000007
    1c1c:	654e7465 	strbvs	r7, [lr, #-1125]	; 0xfffffb9b
    1c20:	61547478 	cmpvs	r4, r8, ror r4
    1c24:	6e556b73 	vmovvs.s8	r6, d5[3]
    1c28:	636f6c62 	cmnvs	pc, #25088	; 0x6200
    1c2c:	6d69546b 	cfstrdvs	mvd5, [r9, #-428]!	; 0xfffffe54
    1c30:	78750065 	ldmdavc	r5!, {r0, r2, r5, r6}^
    1c34:	5077654e 	rsbspl	r6, r7, lr, asr #10
    1c38:	726f6972 	rsbvc	r6, pc, #1867776	; 0x1c8000
    1c3c:	00797469 	rsbseq	r7, r9, r9, ror #8
    1c40:	6b736154 	blvs	1cda198 <__RAM_SIZE+0x1bda198>
    1c44:	636e7546 	cmnvs	lr, #293601280	; 0x11800000
    1c48:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    1c4c:	7000745f 	andvc	r7, r0, pc, asr r4
    1c50:	72506c75 	subsvc	r6, r0, #29952	; 0x7500
    1c54:	6f697665 	svcvs	0x00697665
    1c58:	6f4e7375 	svcvs	0x004e7375
    1c5c:	69666974 	stmdbvs	r6!, {r2, r4, r5, r6, r8, fp, sp, lr}^
    1c60:	69746163 	ldmdbvs	r4!, {r0, r1, r5, r6, r8, sp, lr}^
    1c64:	61566e6f 	cmpvs	r6, pc, ror #28
    1c68:	0065756c 	rsbeq	r7, r5, ip, ror #10
    1c6c:	69547870 	ldmdbvs	r4, {r4, r5, r6, fp, ip, sp, lr}^
    1c70:	754f656d 	strbvc	r6, [pc, #-1389]	; 170b <__HEAP_SIZE+0x70b>
    1c74:	78750074 	ldmdavc	r5!, {r2, r4, r5, r6}^
    1c78:	6b736154 	blvs	1cda1d0 <__RAM_SIZE+0x1bda1d0>
    1c7c:	6f697250 	svcvs	0x00697250
    1c80:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    1c84:	46746547 	ldrbtmi	r6, [r4], -r7, asr #10
    1c88:	496d6f72 	stmdbmi	sp!, {r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
    1c8c:	75005253 	strvc	r5, [r0, #-595]	; 0xfffffdad
    1c90:	6d754463 	cfldrdvs	mvd4, [r5, #-396]!	; 0xfffffe74
    1c94:	3132796d 	teqcc	r2, sp, ror #18
    1c98:	61547800 	cmpvs	r4, r0, lsl #16
    1c9c:	65476b73 	strbvs	r6, [r7, #-2931]	; 0xfffff48d
    1ca0:	63695474 	cmnvs	r9, #116, 8	; 0x74000000
    1ca4:	756f436b 	strbvc	r4, [pc, #-875]!	; 1941 <__HEAP_SIZE+0x941>
    1ca8:	7800746e 	stmdavc	r0, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
    1cac:	6b636954 	blvs	18dc204 <__RAM_SIZE+0x17dc204>
    1cb0:	4a6f5473 	bmi	1bd6e84 <__RAM_SIZE+0x1ad6e84>
    1cb4:	00706d75 	rsbseq	r6, r0, r5, ror sp
    1cb8:	61547875 	cmpvs	r4, r5, ror r8
    1cbc:	754e6b73 	strbvc	r6, [lr, #-2931]	; 0xfffff48d
    1cc0:	7265626d 	rsbvc	r6, r5, #-805306362	; 0xd0000006
    1cc4:	63416500 	movtvs	r6, #5376	; 0x1500
    1cc8:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    1ccc:	54787500 	ldrbtpl	r7, [r8], #-1280	; 0xfffffb00
    1cd0:	526b7361 	rsbpl	r7, fp, #-2080374783	; 0x84000001
    1cd4:	74657365 	strbtvc	r7, [r5], #-869	; 0xfffffc9b
    1cd8:	6e657645 	cdpvs	6, 6, cr7, cr5, cr5, {2}
    1cdc:	65744974 	ldrbvs	r4, [r4, #-2420]!	; 0xfffff68c
    1ce0:	6c61566d 	stclvs	6, cr5, [r1], #-436	; 0xfffffe4c
    1ce4:	76006575 			; <UNDEFINED> instruction: 0x76006575
    1ce8:	6b736154 	blvs	1cda240 <__RAM_SIZE+0x1bda240>
    1cec:	6f697250 	svcvs	0x00697250
    1cf0:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    1cf4:	00746553 	rsbseq	r6, r4, r3, asr r5
    1cf8:	61547875 	cmpvs	r4, r5, ror r8
    1cfc:	61426b73 	hvcvs	9907	; 0x26b3
    1d00:	72506573 	subsvc	r6, r0, #482344960	; 0x1cc00000
    1d04:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    1d08:	65477974 	strbvs	r7, [r7, #-2420]	; 0xfffff68c
    1d0c:	6f724674 	svcvs	0x00724674
    1d10:	5253496d 	subspl	r4, r3, #1785856	; 0x1b4000
    1d14:	61546500 	cmpvs	r4, r0, lsl #10
    1d18:	74536b73 	ldrbvc	r6, [r3], #-2931	; 0xfffff48d
    1d1c:	00657461 	rsbeq	r7, r5, r1, ror #8
    1d20:	54787070 	ldrbtpl	r7, [r8], #-112	; 0xffffff90
    1d24:	426b7361 	rsbmi	r7, fp, #-2080374783	; 0x84000001
    1d28:	65666675 	strbvs	r6, [r6, #-1653]!	; 0xfffff98b
    1d2c:	78700072 	ldmdavc	r0!, {r1, r4, r5, r6}^
    1d30:	4d646e45 	stclmi	14, cr6, [r4, #-276]!	; 0xfffffeec
    1d34:	656b7261 	strbvs	r7, [fp, #-609]!	; 0xfffffd9f
    1d38:	75700072 	ldrbvc	r0, [r0, #-114]!	; 0xffffff8e
    1d3c:	6c644978 			; <UNDEFINED> instruction: 0x6c644978
    1d40:	73615465 	cmnvc	r1, #1694498816	; 0x65000000
    1d44:	6174536b 	cmnvs	r4, fp, ror #6
    1d48:	69536b63 	ldmdbvs	r3, {r0, r1, r5, r6, r8, r9, fp, sp, lr}^
    1d4c:	7800657a 	stmdavc	r0, {r1, r3, r4, r5, r6, r8, sl, sp, lr}
    1d50:	6b736154 	blvs	1cda2a8 <__RAM_SIZE+0x1bda2a8>
    1d54:	6f4e6f54 	svcvs	0x004e6f54
    1d58:	79666974 	stmdbvc	r6!, {r2, r4, r5, r6, r8, fp, sp, lr}^
    1d5c:	61547800 	cmpvs	r4, r0, lsl #16
    1d60:	70006b73 	andvc	r6, r0, r3, ror fp
    1d64:	6d754478 	cfldrdvs	mvd4, [r5, #-480]!	; 0xfffffe20
    1d68:	3431796d 	ldrtcc	r7, [r1], #-2413	; 0xfffff693
    1d6c:	61547800 	cmpvs	r4, r0, lsl #16
    1d70:	6f546b73 	svcvs	0x00546b73
    1d74:	72657551 	rsbvc	r7, r5, #339738624	; 0x14400000
    1d78:	53650079 	cmnpl	r5, #121	; 0x79
    1d7c:	69427465 	stmdbvs	r2, {r0, r2, r5, r6, sl, ip, sp, lr}^
    1d80:	78007374 	stmdavc	r0, {r2, r4, r5, r6, r8, r9, ip, sp, lr}
    1d84:	4f4d454d 	svcmi	0x004d454d
    1d88:	525f5952 	subspl	r5, pc, #1343488	; 0x148000
    1d8c:	4f494745 	svcmi	0x00494745
    1d90:	7875004e 	ldmdavc	r5!, {r1, r2, r3, r6}^
    1d94:	72727543 	rsbsvc	r7, r2, #281018368	; 0x10c00000
    1d98:	4c746e65 	ldclmi	14, cr6, [r4], #-404	; 0xfffffe6c
    1d9c:	4c747369 	ldclmi	3, cr7, [r4], #-420	; 0xfffffe5c
    1da0:	74676e65 	strbtvc	r6, [r7], #-3685	; 0xfffff19b
    1da4:	54760068 	ldrbtpl	r0, [r6], #-104	; 0xffffff98
    1da8:	446b7361 	strbtmi	r7, [fp], #-865	; 0xfffffc9f
    1dac:	74656c65 	strbtvc	r6, [r5], #-3173	; 0xfffff39b
    1db0:	63750065 	cmnvs	r5, #101	; 0x65
    1db4:	6d6d7544 	cfstr64vs	mvdx7, [sp, #-272]!	; 0xfffffef0
    1db8:	78003779 	stmdavc	r0, {r0, r3, r4, r5, r6, r8, r9, sl, ip, sp}
    1dbc:	6b736154 	blvs	1cda314 <__RAM_SIZE+0x1bda314>
    1dc0:	6c6c6143 	stfvse	f6, [ip], #-268	; 0xfffffef4
    1dc4:	6c707041 	ldclvs	0, cr7, [r0], #-260	; 0xfffffefc
    1dc8:	74616369 	strbtvc	r6, [r1], #-873	; 0xfffffc97
    1dcc:	546e6f69 	strbtpl	r6, [lr], #-3945	; 0xfffff097
    1dd0:	486b7361 	stmdami	fp!, {r0, r5, r6, r8, r9, ip, sp, lr}^
    1dd4:	006b6f6f 	rsbeq	r6, fp, pc, ror #30
    1dd8:	72507875 	subsvc	r7, r0, #7667712	; 0x750000
    1ddc:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    1de0:	6f547974 	svcvs	0x00547974
    1de4:	00657355 	rsbeq	r7, r5, r5, asr r3
    1de8:	73615476 	cmnvc	r1, #1979711488	; 0x76000000
    1dec:	6977536b 	ldmdbvs	r7!, {r0, r1, r3, r5, r6, r8, r9, ip, lr}^
    1df0:	43686374 	cmnmi	r8, #116, 6	; 0xd0000001
    1df4:	65746e6f 	ldrbvs	r6, [r4, #-3695]!	; 0xfffff191
    1df8:	78007478 	stmdavc	r0, {r3, r4, r5, r6, sl, ip, sp, lr}
    1dfc:	4f6d754e 	svcmi	0x006d754e
    1e00:	65764f66 	ldrbvs	r4, [r6, #-3942]!	; 0xfffff09a
    1e04:	6f6c6672 	svcvs	0x006c6672
    1e08:	78007377 	stmdavc	r0, {r0, r1, r2, r4, r5, r6, r8, r9, ip, sp, lr}
    1e0c:	61657242 	cmnvs	r5, r2, asr #4
    1e10:	6f6f4c6b 	svcvs	0x006f4c6b
    1e14:	54780070 	ldrbtpl	r0, [r8], #-112	; 0xffffff90
    1e18:	476b7361 	strbmi	r7, [fp, -r1, ror #6]!
    1e1c:	74537465 	ldrbvc	r7, [r3], #-1125	; 0xfffffb9b
    1e20:	63697461 	cmnvs	r9, #1627389952	; 0x61000000
    1e24:	66667542 	strbtvs	r7, [r6], -r2, asr #10
    1e28:	00737265 	rsbseq	r7, r3, r5, ror #4
    1e2c:	75437870 	strbvc	r7, [r3, #-2160]	; 0xfffff790
    1e30:	6e657272 	mcrvs	2, 3, r7, cr5, cr2, {3}
    1e34:	42435474 	submi	r5, r3, #116, 8	; 0x74000000
    1e38:	48787500 	ldmdami	r8!, {r8, sl, ip, sp, lr}^
    1e3c:	65686769 	strbvs	r6, [r8, #-1897]!	; 0xfffff897
    1e40:	72507473 	subsvc	r7, r0, #1929379840	; 0x73000000
    1e44:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    1e48:	61577974 	cmpvs	r7, r4, ror r9
    1e4c:	6e697469 	cdpvs	4, 6, cr7, cr9, cr9, {3}
    1e50:	73615467 	cmnvc	r1, #1728053248	; 0x67000000
    1e54:	5378006b 	cmnpl	r8, #107	; 0x6b
    1e58:	6c756f68 	ldclvs	15, cr6, [r5], #-416	; 0xfffffe60
    1e5c:	6f6c4264 	svcvs	0x006c4264
    1e60:	63006b63 	movwvs	r6, #2915	; 0xb63
    1e64:	7478654e 	ldrbtvc	r6, [r8], #-1358	; 0xfffffab2
    1e68:	72616843 	rsbvc	r6, r1, #4390912	; 0x430000
    1e6c:	54787000 	ldrbtpl	r7, [r8], #-0
    1e70:	546b7361 	strbtpl	r7, [fp], #-865	; 0xfffffc9f
    1e74:	70006761 	andvc	r6, r0, r1, ror #14
    1e78:	6e497672 	mcrvs	6, 2, r7, cr9, cr2, {3}
    1e7c:	61697469 	cmnvs	r9, r9, ror #8
    1e80:	6573696c 	ldrbvs	r6, [r3, #-2412]!	; 0xfffff694
    1e84:	5477654e 	ldrbtpl	r6, [r7], #-1358	; 0xfffffab2
    1e88:	006b7361 	rsbeq	r7, fp, r1, ror #6
    1e8c:	61507670 	cmpvs	r0, r0, ror r6
    1e90:	656d6172 	strbvs	r6, [sp, #-370]!	; 0xfffffe8e
    1e94:	73726574 	cmnvc	r2, #116, 10	; 0x1d000000
    1e98:	44787000 	ldrbtmi	r7, [r8], #-0
    1e9c:	79616c65 	stmdbvc	r1!, {r0, r2, r5, r6, sl, fp, sp, lr}^
    1ea0:	61546465 	cmpvs	r4, r5, ror #8
    1ea4:	694c6b73 	stmdbvs	ip, {r0, r1, r4, r5, r6, r8, r9, fp, sp, lr}^
    1ea8:	70007473 	andvc	r7, r0, r3, ror r4
    1eac:	61547672 	cmpvs	r4, r2, ror r6
    1eb0:	73496b73 	movtvc	r6, #39795	; 0x9b73
    1eb4:	6b736154 	blvs	1cda40c <__RAM_SIZE+0x1bda40c>
    1eb8:	70737553 	rsbsvc	r7, r3, r3, asr r5
    1ebc:	65646e65 	strbvs	r6, [r4, #-3685]!	; 0xfffff19b
    1ec0:	53780064 	cmnpl	r8, #100	; 0x64
    1ec4:	63746977 	cmnvs	r4, #1949696	; 0x1dc000
    1ec8:	71655268 	cmnvc	r5, r8, ror #4
    1ecc:	65726975 	ldrbvs	r6, [r2, #-2421]!	; 0xfffff68b
    1ed0:	78700064 	ldmdavc	r0!, {r2, r5, r6}^
    1ed4:	6574754d 	ldrbvs	r7, [r4, #-1357]!	; 0xfffffab3
    1ed8:	6c6f4878 	stclvs	8, cr4, [pc], #-480	; 1d00 <__HEAP_SIZE+0xd00>
    1edc:	00726564 	rsbseq	r6, r2, r4, ror #10
    1ee0:	74537870 	ldrbvc	r7, [r3], #-2160	; 0xfffff790
    1ee4:	006b6361 	rsbeq	r6, fp, r1, ror #6
    1ee8:	54787070 	ldrbtpl	r7, [r8], #-112	; 0xffffff90
    1eec:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    1ef0:	6b736154 	blvs	1cda448 <__RAM_SIZE+0x1bda448>
    1ef4:	42424354 	submi	r4, r2, #84, 6	; 0x50000001
    1ef8:	65666675 	strbvs	r6, [r6, #-1653]!	; 0xfffff98b
    1efc:	54780072 	ldrbtpl	r0, [r8], #-114	; 0xffffff8e
    1f00:	546b7361 	strbtpl	r7, [fp], #-865	; 0xfffffc9f
    1f04:	6c65446f 	cfstrdvs	mvd4, [r5], #-444	; 0xfffffe44
    1f08:	00657465 	rsbeq	r7, r5, r5, ror #8
    1f0c:	61566c75 	cmpvs	r6, r5, ror ip
    1f10:	0065756c 	rsbeq	r7, r5, ip, ror #10
    1f14:	73615478 	cmnvc	r1, #120, 8	; 0x78000000
    1f18:	536f546b 	cmnpl	pc, #1795162112	; 0x6b000000
    1f1c:	65707375 	ldrbvs	r7, [r0, #-885]!	; 0xfffffc8b
    1f20:	7600646e 	strvc	r6, [r0], -lr, ror #8
    1f24:	74726f50 	ldrbtvc	r6, [r2], #-3920	; 0xfffff0b0
    1f28:	53646e45 	cmnpl	r4, #1104	; 0x450
    1f2c:	64656863 	strbtvs	r6, [r5], #-2147	; 0xfffff79d
    1f30:	72656c75 	rsbvc	r6, r5, #29952	; 0x7500
    1f34:	49787000 	ldmdbmi	r8!, {ip, sp, lr}^
    1f38:	54656c64 	strbtpl	r6, [r5], #-3172	; 0xfffff39c
    1f3c:	466b7361 	strbtmi	r7, [fp], -r1, ror #6
    1f40:	74636e75 	strbtvc	r6, [r3], #-3701	; 0xfffff18b
    1f44:	006e6f69 	rsbeq	r6, lr, r9, ror #30
    1f48:	72507870 	subsvc	r7, r0, #112, 16	; 0x700000
    1f4c:	6f697665 	svcvs	0x00697665
    1f50:	61577375 	cmpvs	r7, r5, ror r3
    1f54:	6954656b 	ldmdbvs	r4, {r0, r1, r3, r5, r6, r8, sl, sp, lr}^
    1f58:	7800656d 	stmdavc	r0, {r0, r2, r3, r5, r6, r8, sl, sp, lr}
    1f5c:	54415453 	strbpl	r5, [r1], #-1107	; 0xfffffbad
    1f60:	545f4349 	ldrbpl	r4, [pc], #-841	; 1f68 <__HEAP_SIZE+0xf68>
    1f64:	78004243 	stmdavc	r0, {r0, r1, r6, r9, lr}
    1f68:	6b736154 	blvs	1cda4c0 <__RAM_SIZE+0x1bda4c0>
    1f6c:	726f6241 	rsbvc	r6, pc, #268435460	; 0x10000004
    1f70:	6c654474 	cfstrdvs	mvd4, [r5], #-464	; 0xfffffe30
    1f74:	78007961 	stmdavc	r0, {r0, r5, r6, r8, fp, ip, sp, lr}
    1f78:	6b736154 	blvs	1cda4d0 <__RAM_SIZE+0x1bda4d0>
    1f7c:	75736552 	ldrbvc	r6, [r3, #-1362]!	; 0xfffffaae
    1f80:	7246656d 	subvc	r6, r6, #457179136	; 0x1b400000
    1f84:	53496d6f 	movtpl	r6, #40303	; 0x9d6f
    1f88:	6c750052 	ldclvs	0, cr0, [r5], #-328	; 0xfffffeb8
    1f8c:	6d6d7544 	cfstr64vs	mvdx7, [sp, #-272]!	; 0xfffffef0
    1f90:	00383179 	eorseq	r3, r8, r9, ror r1
    1f94:	4e6c7570 	mcrmi	5, 3, r7, cr12, cr0, {3}
    1f98:	6669746f 	strbtvs	r7, [r9], -pc, ror #8
    1f9c:	74616369 	strbtvc	r6, [r1], #-873	; 0xfffffc97
    1fa0:	566e6f69 	strbtpl	r6, [lr], -r9, ror #30
    1fa4:	65756c61 	ldrbvs	r6, [r5, #-3169]!	; 0xfffff39f
    1fa8:	49787500 	ldmdbmi	r8!, {r8, sl, ip, sp, lr}^
    1fac:	54656c64 	strbtpl	r6, [r5], #-3172	; 0xfffff39c
    1fb0:	536b7361 	cmnpl	fp, #-2080374783	; 0x84000001
    1fb4:	6b636174 	blvs	18da58c <__RAM_SIZE+0x17da58c>
    1fb8:	73615400 	cmnvc	r1, #0, 8
    1fbc:	6f6f486b 	svcvs	0x006f486b
    1fc0:	6e75466b 	cdpvs	6, 7, cr4, cr5, cr11, {3}
    1fc4:	6f697463 	svcvs	0x00697463
    1fc8:	00745f6e 	rsbseq	r5, r4, lr, ror #30
    1fcc:	61745365 	cmnvs	r4, r5, ror #6
    1fd0:	7261646e 	rsbvc	r6, r1, #1845493760	; 0x6e000000
    1fd4:	656c5364 	strbvs	r5, [ip, #-868]!	; 0xfffffc9c
    1fd8:	75007065 	strvc	r7, [r0, #-101]	; 0xffffff9b
    1fdc:	756f4378 	strbvc	r4, [pc, #-888]!	; 1c6c <__HEAP_SIZE+0xc6c>
    1fe0:	6500746e 	strvs	r7, [r0, #-1134]	; 0xfffffb92
    1fe4:	61546f4e 	cmpvs	r4, lr, asr #30
    1fe8:	57736b73 			; <UNDEFINED> instruction: 0x57736b73
    1fec:	69746961 	ldmdbvs	r4!, {r0, r5, r6, r8, fp, sp, lr}^
    1ff0:	6954676e 	ldmdbvs	r4, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}^
    1ff4:	756f656d 	strbvc	r6, [pc, #-1389]!	; 1a8f <__HEAP_SIZE+0xa8f>
    1ff8:	75700074 	ldrbvc	r0, [r0, #-116]!	; 0xffffff8c
    1ffc:	646e4563 	strbtvs	r4, [lr], #-1379	; 0xfffffa9d
    2000:	7453664f 	ldrbvc	r6, [r3], #-1615	; 0xfffff9b1
    2004:	006b6361 	rsbeq	r6, fp, r1, ror #6
    2008:	754d7870 	strbvc	r7, [sp, #-2160]	; 0xfffff790
    200c:	48786574 	ldmdami	r8!, {r2, r4, r5, r6, r8, sl, sp, lr}^
    2010:	65646c6f 	strbvs	r6, [r4, #-3183]!	; 0xfffff391
    2014:	42435472 	submi	r5, r3, #1912602624	; 0x72000000
    2018:	54637000 	strbtpl	r7, [r3], #-0
    201c:	476b7361 	strbmi	r7, [fp, -r1, ror #6]!
    2020:	614e7465 	cmpvs	lr, r5, ror #8
    2024:	7800656d 	stmdavc	r0, {r0, r2, r3, r5, r6, r8, sl, sp, lr}
    2028:	6b636954 	blvs	18dc580 <__RAM_SIZE+0x17dc580>
    202c:	43780073 	cmnmi	r8, #115	; 0x73
    2030:	6c426e61 	mcrrvs	14, 6, r6, r2, cr1
    2034:	496b636f 	stmdbmi	fp!, {r0, r1, r2, r3, r5, r6, r8, r9, sp, lr}^
    2038:	6665646e 	strbtvs	r6, [r5], -lr, ror #8
    203c:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
    2040:	00796c65 	rsbseq	r6, r9, r5, ror #24
    2044:	6e755265 	cdpvs	2, 7, cr5, cr5, cr5, {3}
    2048:	676e696e 	strbvs	r6, [lr, -lr, ror #18]!
    204c:	4e637000 	cdpmi	0, 6, cr7, cr3, cr0, {0}
    2050:	54656d61 	strbtpl	r6, [r5], #-3425	; 0xfffff29f
    2054:	6575516f 	ldrbvs	r5, [r5, #-367]!	; 0xfffffe91
    2058:	70007972 	andvc	r7, r0, r2, ror r9
    205c:	73614276 	cmnvc	r1, #1610612743	; 0x60000007
    2060:	64644165 	strbtvs	r4, [r4], #-357	; 0xfffffe9b
    2064:	73736572 	cmnvc	r3, #478150656	; 0x1c800000
    2068:	69547800 	ldmdbvs	r4, {fp, ip, sp, lr}^
    206c:	54736b63 	ldrbtpl	r6, [r3], #-2915	; 0xfffff49d
    2070:	6c65446f 	cfstrdvs	mvd4, [r5], #-444	; 0xfffffe44
    2074:	76007961 	strvc	r7, [r0], -r1, ror #18
    2078:	6b736154 	blvs	1cda5d0 <__RAM_SIZE+0x1bda5d0>
    207c:	656e6547 	strbvs	r6, [lr, #-1351]!	; 0xfffffab9
    2080:	4e636972 			; <UNDEFINED> instruction: 0x4e636972
    2084:	6669746f 	strbtvs	r7, [r9], -pc, ror #8
    2088:	76694779 			; <UNDEFINED> instruction: 0x76694779
    208c:	6f724665 	svcvs	0x00724665
    2090:	5253496d 	subspl	r4, r3, #1785856	; 0x1b4000
    2094:	6f507600 	svcvs	0x00507600
    2098:	75537472 	ldrbvc	r7, [r3, #-1138]	; 0xfffffb8e
    209c:	65727070 	ldrbvs	r7, [r2, #-112]!	; 0xffffff90
    20a0:	69547373 	ldmdbvs	r4, {r0, r1, r4, r5, r6, r8, r9, ip, sp, lr}^
    20a4:	41736b63 	cmnmi	r3, r3, ror #22
    20a8:	6c53646e 	cfldrdvs	mvd6, [r3], {110}	; 0x6e
    20ac:	00706565 	rsbseq	r6, r0, r5, ror #10
    20b0:	54787570 	ldrbtpl	r7, [r8], #-1392	; 0xfffffa90
    20b4:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    20b8:	6b736154 	blvs	1cda610 <__RAM_SIZE+0x1bda610>
    20bc:	63617453 	cmnvs	r1, #1392508928	; 0x53000000
    20c0:	7a69536b 	bvc	1a56e74 <__RAM_SIZE+0x1956e74>
    20c4:	2e2e0065 	cdpcs	0, 2, cr0, cr14, cr5, {3}
    20c8:	2f2e2e2f 	svccs	0x002e2e2f
    20cc:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 201c <__HEAP_SIZE+0x101c>
    20d0:	74726269 	ldrbtvc	r6, [r2], #-617	; 0xfffffd97
    20d4:	462f736f 	strtmi	r7, [pc], -pc, ror #6
    20d8:	52656572 	rsbpl	r6, r5, #478150656	; 0x1c800000
    20dc:	2f534f54 	svccs	0x00534f54
    20e0:	6b736174 	blvs	1cda6b8 <__RAM_SIZE+0x1bda6b8>
    20e4:	00632e73 	rsbeq	r2, r3, r3, ror lr
    20e8:	69547870 	ldmdbvs	r4, {r4, r5, r6, fp, ip, sp, lr}^
    20ec:	54736b63 	ldrbtpl	r6, [r3], #-2915	; 0xfffff49d
    20f0:	6961576f 	stmdbvs	r1!, {r0, r1, r2, r3, r5, r6, r8, r9, sl, ip, lr}^
    20f4:	49650074 	stmdbmi	r5!, {r2, r4, r5, r6}^
    20f8:	6c61766e 	stclvs	6, cr7, [r1], #-440	; 0xfffffe48
    20fc:	75006469 	strvc	r6, [r0, #-1129]	; 0xfffffb97
    2100:	706f5478 	rsbvc	r5, pc, r8, ror r4	; <UNPREDICTABLE>
    2104:	6f697250 	svcvs	0x00697250
    2108:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    210c:	42787500 	rsbsmi	r7, r8, #0, 10
    2110:	50657361 	rsbpl	r7, r5, r1, ror #6
    2114:	726f6972 	rsbvc	r6, pc, #1867776	; 0x1c8000
    2118:	00797469 	rsbseq	r7, r9, r9, ror #8
    211c:	72507875 	subsvc	r7, r0, #7667712	; 0x750000
    2120:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    2124:	73557974 	cmpvc	r5, #116, 18	; 0x1d0000
    2128:	6e4f6465 	cdpvs	4, 4, cr6, cr15, cr5, {3}
    212c:	72746e45 	rsbsvc	r6, r4, #1104	; 0x450
    2130:	43540079 	cmpmi	r4, #121	; 0x79
    2134:	00745f42 	rsbseq	r5, r4, r2, asr #30
    2138:	44767270 	ldrbtmi	r7, [r6], #-624	; 0xfffffd90
    213c:	74656c65 	strbtvc	r6, [r5], #-3173	; 0xfffff39b
    2140:	42435465 	submi	r5, r3, #1694498816	; 0x65000000
    2144:	6c426500 	cfstr64vs	mvdx6, [r2], {-0}
    2148:	656b636f 	strbvs	r6, [fp, #-879]!	; 0xfffffc91
    214c:	54760064 	ldrbtpl	r0, [r6], #-100	; 0xffffff9c
    2150:	536b7361 	cmnpl	fp, #-2080374783	; 0x84000001
    2154:	65707375 	ldrbvs	r7, [r0, #-885]!	; 0xfffffc8b
    2158:	7800646e 	stmdavc	r0, {r1, r2, r3, r5, r6, sl, sp, lr}
    215c:	65726c41 	ldrbvs	r6, [r2, #-3137]!	; 0xfffff3bf
    2160:	59796461 	ldmdbpl	r9!, {r0, r5, r6, sl, sp, lr}^
    2164:	646c6569 	strbtvs	r6, [ip], #-1385	; 0xfffffa97
    2168:	70006465 	andvc	r6, r0, r5, ror #8
    216c:	65764578 	ldrbvs	r4, [r6, #-1400]!	; 0xfffffa88
    2170:	694c746e 	stmdbvs	ip, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
    2174:	74497473 	strbvc	r7, [r9], #-1139	; 0xfffffb8d
    2178:	70006d65 	andvc	r6, r0, r5, ror #26
    217c:	72615076 	rsbvc	r5, r1, #118	; 0x76
    2180:	74656d61 	strbtvc	r6, [r5], #-3425	; 0xfffff29f
    2184:	78007265 	stmdavc	r0, {r0, r2, r5, r6, r9, ip, sp, lr}
    2188:	646e6550 	strbtvs	r6, [lr], #-1360	; 0xfffffab0
    218c:	69546465 	ldmdbvs	r4, {r0, r2, r5, r6, sl, sp, lr}^
    2190:	00736b63 	rsbseq	r6, r3, r3, ror #22
    2194:	54767270 	ldrbtpl	r7, [r6], #-624	; 0xfffffd90
    2198:	436b7361 	cmnmi	fp, #-2080374783	; 0x84000001
    219c:	6b636568 	blvs	18db744 <__RAM_SIZE+0x17db744>
    21a0:	65657246 	strbvs	r7, [r5, #-582]!	; 0xfffffdba
    21a4:	63617453 	cmnvs	r1, #1392508928	; 0x53000000
    21a8:	6170536b 	cmnvs	r0, fp, ror #6
    21ac:	75006563 	strvc	r6, [r0, #-1379]	; 0xfffffa9d
    21b0:	72754378 	rsbsvc	r4, r5, #120, 6	; 0xe0000001
    21b4:	746e6572 	strbtvc	r6, [lr], #-1394	; 0xfffffa8e
    21b8:	65736142 	ldrbvs	r6, [r3, #-322]!	; 0xfffffebe
    21bc:	6f697250 	svcvs	0x00697250
    21c0:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    21c4:	69547800 	ldmdbvs	r4, {fp, ip, sp, lr}^
    21c8:	54736b63 	ldrbtpl	r6, [r3], #-2915	; 0xfffff49d
    21cc:	7461436f 	strbtvc	r4, [r1], #-879	; 0xfffffc91
    21d0:	70556863 	subsvc	r6, r5, r3, ror #16
    21d4:	65527800 	ldrbvs	r7, [r2, #-2048]	; 0xfffff800
    21d8:	6e6f6967 	vnmulvs.f16	s13, s30, s15	; <UNPREDICTABLE>
    21dc:	72700073 	rsbsvc	r0, r0, #115	; 0x73
    21e0:	64644176 	strbtvs	r4, [r4], #-374	; 0xfffffe8a
    21e4:	72727543 	rsbsvc	r7, r2, #281018368	; 0x10c00000
    21e8:	54746e65 	ldrbtpl	r6, [r4], #-3685	; 0xfffff19b
    21ec:	546b7361 	strbtpl	r7, [fp], #-865	; 0xfffffc9f
    21f0:	6c65446f 	cfstrdvs	mvd4, [r5], #-444	; 0xfffffe44
    21f4:	64657961 	strbtvs	r7, [r5], #-2401	; 0xfffff69f
    21f8:	7473694c 	ldrbtvc	r6, [r3], #-2380	; 0xfffff6b4
    21fc:	4e787500 	cdpmi	5, 7, cr7, cr8, cr0, {0}
    2200:	70416e6f 	subvc	r6, r1, pc, ror #28
    2204:	63696c70 	cmnvs	r9, #112, 24	; 0x7000
    2208:	6f697461 	svcvs	0x00697461
    220c:	7361546e 	cmnvc	r1, #1845493760	; 0x6e000000
    2210:	6300736b 	movwvs	r7, #875	; 0x36b
    2214:	656c6449 	strbvs	r6, [ip, #-1097]!	; 0xfffffbb7
    2218:	656d614e 	strbvs	r6, [sp, #-334]!	; 0xfffffeb2
    221c:	61547800 	cmpvs	r4, r0, lsl #16
    2220:	65476b73 	strbvs	r6, [r7, #-2931]	; 0xfffff48d
    2224:	72754374 	rsbsvc	r4, r5, #116, 6	; 0xd0000001
    2228:	746e6572 	strbtvc	r6, [lr], #-1394	; 0xfffffa8e
    222c:	6b736154 	blvs	1cda784 <__RAM_SIZE+0x1bda784>
    2230:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
    2234:	6f46656c 	svcvs	0x0046656c
    2238:	726f4372 	rsbvc	r4, pc, #-939524095	; 0xc8000001
    223c:	78750065 	ldmdavc	r5!, {r0, r2, r5, r6}^
    2240:	6b736154 	blvs	1cda798 <__RAM_SIZE+0x1bda798>
    2244:	65736142 	ldrbvs	r6, [r3, #-322]!	; 0xfffffebe
    2248:	6f697250 	svcvs	0x00697250
    224c:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    2250:	00746547 	rsbseq	r6, r4, r7, asr #10
    2254:	75437875 	strbvc	r7, [r3, #-2165]	; 0xfffff78b
    2258:	6e657272 	mcrvs	2, 3, r7, cr5, cr2, {3}
    225c:	6d754e74 	ldclvs	14, cr4, [r5, #-464]!	; 0xfffffe30
    2260:	4f726562 	svcmi	0x00726562
    2264:	73615466 	cmnvc	r1, #1711276032	; 0x66000000
    2268:	7800736b 	stmdavc	r0, {r0, r1, r3, r5, r6, r8, r9, ip, sp, lr}
    226c:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    2270:	72636e49 	rsbvc	r6, r3, #1168	; 0x490
    2274:	6e656d65 	cdpvs	13, 6, cr6, cr5, cr5, {3}
    2278:	54780074 	ldrbtpl	r0, [r8], #-116	; 0xffffff8c
    227c:	476b7361 	strbmi	r7, [fp, -r1, ror #6]!
    2280:	64497465 	strbvs	r7, [r9], #-1125	; 0xfffffb9b
    2284:	6154656c 	cmpvs	r4, ip, ror #10
    2288:	61486b73 	hvcvs	34483	; 0x86b3
    228c:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
    2290:	69547800 	ldmdbvs	r4, {fp, ip, sp, lr}^
    2294:	6f54656d 	svcvs	0x0054656d
    2298:	656b6157 	strbvs	r6, [fp, #-343]!	; 0xfffffea9
    229c:	74537800 	ldrbvc	r7, [r3], #-2048	; 0xfffff800
    22a0:	4c657461 	cfstrdmi	mvd7, [r5], #-388	; 0xfffffe7c
    22a4:	49747369 	ldmdbmi	r4!, {r0, r3, r5, r6, r8, r9, ip, sp, lr}^
    22a8:	006d6574 	rsbeq	r6, sp, r4, ror r5
    22ac:	70704176 	rsbsvc	r4, r0, r6, ror r1
    22b0:	6163696c 	cmnvs	r3, ip, ror #18
    22b4:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    22b8:	49746547 	ldmdbmi	r4!, {r0, r1, r2, r6, r8, sl, sp, lr}^
    22bc:	54656c64 	strbtpl	r6, [r5], #-3172	; 0xfffff39c
    22c0:	4d6b7361 	stclmi	3, cr7, [fp, #-388]!	; 0xfffffe7c
    22c4:	726f6d65 	rsbvc	r6, pc, #6464	; 0x1940
    22c8:	78700079 	ldmdavc	r0!, {r0, r3, r4, r5, r6}^
    22cc:	00424354 	subeq	r4, r2, r4, asr r3
    22d0:	73615478 	cmnvc	r1, #120, 8	; 0x78000000
    22d4:	6e65476b 	cdpvs	7, 6, cr4, cr5, cr11, {3}
    22d8:	63697265 	cmnvs	r9, #1342177286	; 0x50000006
    22dc:	69746f4e 	ldmdbvs	r4!, {r1, r2, r3, r6, r8, r9, sl, fp, sp, lr}^
    22e0:	74537966 	ldrbvc	r7, [r3], #-2406	; 0xfffff69a
    22e4:	43657461 	cmnmi	r5, #1627389952	; 0x61000000
    22e8:	7261656c 	rsbvc	r6, r1, #108, 10	; 0x1b000000
    22ec:	54787500 	ldrbtpl	r7, [r8], #-1280	; 0xfffffb00
    22f0:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    22f4:	6b736154 	blvs	1cda84c <__RAM_SIZE+0x1bda84c>
    22f8:	63617453 	cmnvs	r1, #1392508928	; 0x53000000
    22fc:	7870006b 	ldmdavc	r0!, {r0, r1, r3, r5, r6}^
    2300:	6b736154 	blvs	1cda858 <__RAM_SIZE+0x1bda858>
    2304:	65646f43 	strbvs	r6, [r4, #-3907]!	; 0xfffff0bd
    2308:	53787500 	cmnpl	r8, #0, 10
    230c:	64656863 	strbtvs	r6, [r5], #-2147	; 0xfffff79d
    2310:	72656c75 	rsbvc	r6, r5, #29952	; 0x7500
    2314:	70737553 	rsbsvc	r7, r3, r3, asr r5
    2318:	65646e65 	strbvs	r6, [r4, #-3685]!	; 0xfffff19b
    231c:	78700064 	ldmdavc	r0!, {r2, r5, r6}^
    2320:	4f706f54 	svcmi	0x00706f54
    2324:	61745366 	cmnvs	r4, r6, ror #6
    2328:	76006b63 	strvc	r6, [r0], -r3, ror #22
    232c:	6b736154 	blvs	1cda884 <__RAM_SIZE+0x1bda884>
    2330:	75736552 	ldrbvc	r6, [r3, #-1362]!	; 0xfffffaae
    2334:	7800656d 	stmdavc	r0, {r0, r2, r3, r5, r6, r8, sl, sp, lr}
    2338:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    233c:	74654772 	strbtvc	r4, [r5], #-1906	; 0xfffff88e
    2340:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    2344:	65614472 	strbvs	r4, [r1, #-1138]!	; 0xfffffb8e
    2348:	546e6f6d 	strbtpl	r6, [lr], #-3949	; 0xfffff093
    234c:	486b7361 	stmdami	fp!, {r0, r5, r6, r8, r9, ip, sp, lr}^
    2350:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
    2354:	72700065 	rsbsvc	r0, r0, #101	; 0x65
    2358:	696e4976 	stmdbvs	lr!, {r1, r2, r4, r5, r6, r8, fp, lr}^
    235c:	6c616974 			; <UNDEFINED> instruction: 0x6c616974
    2360:	54657369 	strbtpl	r7, [r5], #-873	; 0xfffffc97
    2364:	4c6b7361 	stclmi	3, cr7, [fp], #-388	; 0xfffffe7c
    2368:	73747369 	cmnvc	r4, #-1543503871	; 0xa4000001
    236c:	64497800 	strbvs	r7, [r9], #-2048	; 0xfffff800
    2370:	6154656c 	cmpvs	r4, ip, ror #10
    2374:	43546b73 	cmpmi	r4, #117760	; 0x1cc00
    2378:	78750042 	ldmdavc	r5!, {r1, r6}^
    237c:	65646e49 	strbvs	r6, [r4, #-3657]!	; 0xfffff1b7
    2380:	4e6f5478 	mcrmi	4, 3, r5, cr15, cr8, {3}
    2384:	6669746f 	strbtvs	r7, [r9], -pc, ror #8
    2388:	54780079 	ldrbtpl	r0, [r8], #-121	; 0xffffff87
    238c:	476b7361 	strbmi	r7, [fp, -r1, ror #6]!
    2390:	70417465 	subvc	r7, r1, r5, ror #8
    2394:	63696c70 	cmnvs	r9, #112, 24	; 0x7000
    2398:	6f697461 	svcvs	0x00697461
    239c:	7361546e 	cmnvc	r1, #1845493760	; 0x6e000000
    23a0:	6761546b 	strbvs	r5, [r1, -fp, ror #8]!
    23a4:	6d6f7246 	sfmvs	f7, 2, [pc, #-280]!	; 2294 <__HEAP_SIZE+0x1294>
    23a8:	00525349 	subseq	r5, r2, r9, asr #6
    23ac:	72437870 	subvc	r7, r3, #112, 16	; 0x700000
    23b0:	65746165 	ldrbvs	r6, [r4, #-357]!	; 0xfffffe9b
    23b4:	73615464 	cmnvc	r1, #100, 8	; 0x64000000
    23b8:	7270006b 	rsbsvc	r0, r0, #107	; 0x6b
    23bc:	65684376 	strbvs	r4, [r8, #-886]!	; 0xfffffc8a
    23c0:	61546b63 	cmpvs	r4, r3, ror #22
    23c4:	57736b73 			; <UNDEFINED> instruction: 0x57736b73
    23c8:	69746961 	ldmdbvs	r4!, {r0, r5, r6, r8, fp, sp, lr}^
    23cc:	6554676e 	ldrbvs	r6, [r4, #-1902]	; 0xfffff892
    23d0:	6e696d72 	mcrvs	13, 3, r6, cr9, cr2, {3}
    23d4:	6f697461 	svcvs	0x00697461
    23d8:	7870006e 	ldmdavc	r0!, {r1, r2, r3, r5, r6}^
    23dc:	7265764f 	rsbvc	r7, r5, #82837504	; 0x4f00000
    23e0:	776f6c66 	strbvc	r6, [pc, -r6, ror #24]!
    23e4:	616c6544 	cmnvs	ip, r4, asr #10
    23e8:	4c646579 	cfstr64mi	mvdx6, [r4], #-484	; 0xfffffe1c
    23ec:	00747369 	rsbseq	r7, r4, r9, ror #6
    23f0:	65526c75 	ldrbvs	r6, [r2, #-3189]	; 0xfffff38b
    23f4:	6e727574 	mrcvs	5, 3, r7, cr2, cr4, {3}
    23f8:	61547800 	cmpvs	r4, r0, lsl #16
    23fc:	73496b73 	movtvc	r6, #39795	; 0x9b73
    2400:	6e6e7552 	mcrvs	5, 3, r7, cr14, cr2, {2}
    2404:	4f676e69 	svcmi	0x00676e69
    2408:	65695972 	strbvs	r5, [r9, #-2418]!	; 0xfffff68e
    240c:	6e69646c 	cdpvs	4, 6, cr6, cr9, cr12, {3}
    2410:	78750067 	ldmdavc	r5!, {r0, r1, r2, r5, r6}^
    2414:	65646e49 	strbvs	r6, [r4, #-3657]!	; 0xfffff1b7
    2418:	576f5478 			; <UNDEFINED> instruction: 0x576f5478
    241c:	4f746961 	svcmi	0x00746961
    2420:	4378006e 	cmnmi	r8, #110	; 0x6e
    2424:	616d6d6f 	cmnvs	sp, pc, ror #26
    2428:	6954646e 	ldmdbvs	r4, {r1, r2, r3, r5, r6, sl, sp, lr}^
    242c:	7800656d 	stmdavc	r0, {r0, r2, r3, r5, r6, r8, sl, sp, lr}
    2430:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    2434:	72655072 	rsbvc	r5, r5, #114	; 0x72
    2438:	49646f69 	stmdbmi	r4!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    243c:	6369546e 	cmnvs	r9, #1845493760	; 0x6e000000
    2440:	7000736b 	andvc	r7, r0, fp, ror #6
    2444:	6c614378 	stclvs	3, cr4, [r1], #-480	; 0xfffffe20
    2448:	6361626c 	cmnvs	r1, #108, 4	; 0xc0000006
    244c:	6e75466b 	cdpvs	6, 7, cr4, cr5, cr11, {3}
    2450:	6f697463 	svcvs	0x00697463
    2454:	7870006e 	ldmdavc	r0!, {r1, r2, r3, r5, r6}^
    2458:	7473694c 	ldrbtvc	r6, [r3], #-2380	; 0xfffff6b4
    245c:	45736157 	ldrbmi	r6, [r3, #-343]!	; 0xfffffea9
    2460:	7974706d 	ldmdbvc	r4!, {r0, r2, r3, r5, r6, ip, sp, lr}^
    2464:	69547800 	ldmdbvs	r4, {fp, ip, sp, lr}^
    2468:	6f4e656d 	svcvs	0x004e656d
    246c:	53780077 	cmnpl	r8, #119	; 0x77
    2470:	69746174 	ldmdbvs	r4!, {r2, r4, r5, r6, r8, sp, lr}^
    2474:	6d695463 	cfstrdvs	mvd5, [r9, #-396]!	; 0xfffffe74
    2478:	75517265 	ldrbvc	r7, [r1, #-613]	; 0xfffffd9b
    247c:	00657565 	rsbeq	r7, r5, r5, ror #10
    2480:	6d695478 	cfstrdvs	mvd5, [r9, #-480]!	; 0xfffffe20
    2484:	61507265 	cmpvs	r0, r5, ror #4
    2488:	656d6172 	strbvs	r6, [sp, #-370]!	; 0xfffffe8e
    248c:	73726574 	cmnvc	r2, #116, 10	; 0x1d000000
    2490:	704f7800 	subvc	r7, pc, r0, lsl #16
    2494:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    2498:	61566c61 	cmpvs	r6, r1, ror #24
    249c:	0065756c 	rsbeq	r7, r5, ip, ror #10
    24a0:	69546370 	ldmdbvs	r4, {r4, r5, r6, r8, r9, sp, lr}^
    24a4:	4e72656d 	cdpmi	5, 7, cr6, cr2, cr13, {3}
    24a8:	00656d61 	rsbeq	r6, r5, r1, ror #26
    24ac:	61506c75 	cmpvs	r0, r5, ror ip
    24b0:	656d6172 	strbvs	r6, [sp, #-370]!	; 0xfffffe8e
    24b4:	32726574 	rsbscc	r6, r2, #116, 10	; 0x1d000000
    24b8:	69547800 	ldmdbvs	r4, {fp, ip, sp, lr}^
    24bc:	5072656d 	rsbspl	r6, r2, sp, ror #10
    24c0:	46646e65 	strbtmi	r6, [r4], -r5, ror #28
    24c4:	74636e75 	strbtvc	r6, [r3], #-3701	; 0xfffff18b
    24c8:	436e6f69 	cmnmi	lr, #420	; 0x1a4
    24cc:	006c6c61 	rsbeq	r6, ip, r1, ror #24
    24d0:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    24d4:	72615072 	rsbvc	r5, r1, #114	; 0x72
    24d8:	74656d61 	strbtvc	r6, [r5], #-3425	; 0xfffff29f
    24dc:	745f7265 	ldrbvc	r7, [pc], #-613	; 24e4 <__HEAP_SIZE+0x14e4>
    24e0:	69547800 	ldmdbvs	r4, {fp, ip, sp, lr}^
    24e4:	5172656d 	cmnpl	r2, sp, ror #10
    24e8:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
    24ec:	61745300 	cmnvs	r4, r0, lsl #6
    24f0:	54636974 	strbtpl	r6, [r3], #-2420	; 0xfffff68c
    24f4:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    24f8:	7800745f 	stmdavc	r0, {r0, r1, r2, r3, r4, r6, sl, ip, sp, lr}
    24fc:	54415453 	strbpl	r5, [r1], #-1107	; 0xfffffbad
    2500:	545f4349 	ldrbpl	r4, [pc], #-841	; 2508 <__HEAP_SIZE+0x1508>
    2504:	52454d49 	subpl	r4, r5, #4672	; 0x1240
    2508:	69547800 	ldmdbvs	r4, {fp, ip, sp, lr}^
    250c:	4772656d 	ldrbmi	r6, [r2, -sp, ror #10]!
    2510:	74537465 	ldrbvc	r7, [r3], #-1125	; 0xfffffb9b
    2514:	63697461 	cmnvs	r9, #1627389952	; 0x61000000
    2518:	66667542 	strbtvs	r7, [r6], -r2, asr #10
    251c:	54007265 	strpl	r7, [r0], #-613	; 0xfffffd9b
    2520:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    2524:	6c6c6143 	stfvse	f6, [ip], #-268	; 0xfffffef4
    2528:	6b636162 	blvs	18daab8 <__RAM_SIZE+0x17daab8>
    252c:	636e7546 	cmnvs	lr, #293601280	; 0x11800000
    2530:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    2534:	7800745f 	stmdavc	r0, {r0, r1, r2, r3, r4, r6, sl, ip, sp, lr}
    2538:	6d6d6f43 	stclvs	15, cr6, [sp, #-268]!	; 0xfffffef4
    253c:	49646e61 	stmdbmi	r4!, {r0, r5, r6, r9, sl, fp, sp, lr}^
    2540:	50780044 	rsbspl	r0, r8, r4, asr #32
    2544:	65636f72 	strbvs	r6, [r3, #-3954]!	; 0xfffff08e
    2548:	69547373 	ldmdbvs	r4, {r0, r1, r4, r5, r6, r8, r9, ip, sp, lr}^
    254c:	4e72656d 	cdpmi	5, 7, cr6, cr2, cr13, {3}
    2550:	7000776f 	andvc	r7, r0, pc, ror #14
    2554:	68437672 	stmdavs	r3, {r1, r4, r5, r6, r9, sl, ip, sp, lr}^
    2558:	466b6365 	strbtmi	r6, [fp], -r5, ror #6
    255c:	6156726f 	cmpvs	r6, pc, ror #4
    2560:	4c64696c 			; <UNDEFINED> instruction: 0x4c64696c
    2564:	41747369 	cmnmi	r4, r9, ror #6
    2568:	7551646e 	ldrbvc	r6, [r1, #-1134]	; 0xfffffb92
    256c:	00657565 	rsbeq	r7, r5, r5, ror #10
    2570:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    2574:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    2578:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    257c:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    2580:	6572462f 	ldrbvs	r4, [r2, #-1583]!	; 0xfffff9d1
    2584:	4f545265 	svcmi	0x00545265
    2588:	69742f53 	ldmdbvs	r4!, {r0, r1, r4, r6, r8, r9, sl, fp, sp}^
    258c:	7372656d 	cmnvc	r2, #457179136	; 0x1b400000
    2590:	7500632e 	strvc	r6, [r0, #-814]	; 0xfffffcd2
    2594:	6d695478 	cfstrdvs	mvd5, [r9, #-480]!	; 0xfffffe20
    2598:	65477265 	strbvs	r7, [r7, #-613]	; 0xfffffd9b
    259c:	6c655274 	sfmvs	f5, 2, [r5], #-464	; 0xfffffe30
    25a0:	4d64616f 	stfmie	f6, [r4, #-444]!	; 0xfffffe44
    25a4:	0065646f 	rsbeq	r6, r5, pc, ror #8
    25a8:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    25ac:	6e614872 	mcrvs	8, 3, r4, cr1, cr2, {3}
    25b0:	5f656c64 	svcpl	0x00656c64
    25b4:	54780074 	ldrbtpl	r0, [r8], #-116	; 0xffffff8c
    25b8:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    25bc:	61657243 	cmnvs	r5, r3, asr #4
    25c0:	74536574 	ldrbvc	r6, [r3], #-1396	; 0xfffffa8c
    25c4:	63697461 	cmnvs	r9, #1627389952	; 0x61000000
    25c8:	76727000 	ldrbtvc	r7, [r2], -r0
    25cc:	636f7250 	cmnvs	pc, #80, 4
    25d0:	45737365 	ldrbmi	r7, [r3, #-869]!	; 0xfffffc9b
    25d4:	72697078 	rsbvc	r7, r9, #120	; 0x78
    25d8:	69546465 	ldmdbvs	r4, {r0, r2, r5, r6, sl, sp, lr}^
    25dc:	0072656d 	rsbseq	r6, r2, sp, ror #10
    25e0:	6c6c6143 	stfvse	f6, [ip], #-268	; 0xfffffef4
    25e4:	6b636162 	blvs	18dab74 <__RAM_SIZE+0x17dab74>
    25e8:	61726150 	cmnvs	r2, r0, asr r1
    25ec:	6574656d 	ldrbvs	r6, [r4, #-1389]!	; 0xfffffa93
    25f0:	745f7372 	ldrbvc	r7, [pc], #-882	; 25f8 <__HEAP_SIZE+0x15f8>
    25f4:	44767000 	ldrbtmi	r7, [r6], #-0
    25f8:	796d6d75 	stmdbvc	sp!, {r0, r2, r4, r5, r6, r8, sl, fp, sp, lr}^
    25fc:	78700036 	ldmdavc	r0!, {r1, r2, r4, r5}^
    2600:	5477654e 	ldrbtpl	r6, [r7], #-1358	; 0xfffffab2
    2604:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    2608:	52767000 	rsbspl	r7, r6, #0
    260c:	72757465 	rsbsvc	r7, r5, #1694498816	; 0x65000000
    2610:	5478006e 	ldrbtpl	r0, [r8], #-110	; 0xffffff92
    2614:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    2618:	69547349 	ldmdbvs	r4, {r0, r3, r6, r8, r9, ip, sp, lr}^
    261c:	4172656d 	cmnmi	r2, sp, ror #10
    2620:	76697463 	strbtvc	r7, [r9], -r3, ror #8
    2624:	45780065 	ldrbmi	r0, [r8, #-101]!	; 0xffffff9b
    2628:	72697078 	rsbvc	r7, r9, #120	; 0x78
    262c:	69546465 	ldmdbvs	r4, {r0, r2, r5, r6, sl, sp, lr}^
    2630:	7400656d 	strvc	r6, [r0], #-1389	; 0xfffffa93
    2634:	6954726d 	ldmdbvs	r4, {r0, r2, r3, r5, r6, r9, ip, sp, lr}^
    2638:	5172656d 	cmnpl	r2, sp, ror #10
    263c:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
    2640:	7373654d 	cmnvc	r3, #322961408	; 0x13400000
    2644:	00656761 	rsbeq	r6, r5, r1, ror #14
    2648:	69547670 	ldmdbvs	r4, {r4, r5, r6, r9, sl, ip, sp, lr}^
    264c:	4772656d 	ldrbmi	r6, [r2, -sp, ror #10]!
    2650:	69547465 	ldmdbvs	r4, {r0, r2, r5, r6, sl, ip, sp, lr}^
    2654:	4972656d 	ldmdbmi	r2!, {r0, r2, r3, r5, r6, r8, sl, sp, lr}^
    2658:	41780044 	cmnmi	r8, r4, asr #32
    265c:	526f7475 	rsbpl	r7, pc, #1962934272	; 0x75000000
    2660:	616f6c65 	cmnvs	pc, r5, ror #24
    2664:	54780064 	ldrbtpl	r0, [r8], #-100	; 0xffffff9c
    2668:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    266c:	656e6547 	strbvs	r6, [lr, #-1351]!	; 0xfffffab9
    2670:	43636972 	cmnmi	r3, #1867776	; 0x1c8000
    2674:	616d6d6f 	cmnvs	sp, pc, ror #26
    2678:	7246646e 	subvc	r6, r6, #1845493760	; 0x6e000000
    267c:	53496d6f 	movtpl	r6, #40303	; 0x9d6f
    2680:	78700052 	ldmdavc	r0!, {r1, r4, r6}^
    2684:	7265764f 	rsbvc	r7, r5, #82837504	; 0x4f00000
    2688:	776f6c66 	strbvc	r6, [pc, -r6, ror #24]!
    268c:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    2690:	73694c72 	cmnvc	r9, #29184	; 0x7200
    2694:	72700074 	rsbsvc	r0, r0, #116	; 0x74
    2698:	696e4976 	stmdbvs	lr!, {r1, r2, r4, r5, r6, r8, fp, lr}^
    269c:	6c616974 			; <UNDEFINED> instruction: 0x6c616974
    26a0:	4e657369 	cdpmi	3, 6, cr7, cr5, cr9, {3}
    26a4:	69547765 	ldmdbvs	r4, {r0, r2, r5, r6, r8, r9, sl, ip, sp, lr}^
    26a8:	0072656d 	rsbseq	r6, r2, sp, ror #10
    26ac:	75447670 	strbvc	r7, [r4, #-1648]	; 0xfffff990
    26b0:	35796d6d 	ldrbcc	r6, [r9, #-3437]!	; 0xfffff293
    26b4:	49547800 	ldmdbmi	r4, {fp, ip, sp, lr}^
    26b8:	0052454d 	subseq	r4, r2, sp, asr #10
    26bc:	74634178 	strbtvc	r4, [r3], #-376	; 0xfffffe88
    26c0:	54657669 	strbtpl	r7, [r5], #-1641	; 0xfffff997
    26c4:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    26c8:	7473694c 	ldrbtvc	r6, [r3], #-2380	; 0xfffff6b4
    26cc:	41780031 	cmnmi	r8, r1, lsr r0
    26d0:	76697463 	strbtvc	r7, [r9], -r3, ror #8
    26d4:	6d695465 	cfstrdvs	mvd5, [r9, #-404]!	; 0xfffffe6c
    26d8:	694c7265 	stmdbvs	ip, {r0, r2, r5, r6, r9, ip, sp, lr}^
    26dc:	00327473 	eorseq	r7, r2, r3, ror r4
    26e0:	49767270 	ldmdbmi	r6!, {r4, r5, r6, r9, ip, sp, lr}^
    26e4:	7265736e 	rsbvc	r7, r5, #-1207959551	; 0xb8000001
    26e8:	6d695474 	cfstrdvs	mvd5, [r9, #-464]!	; 0xfffffe30
    26ec:	6e497265 	cdpvs	2, 4, cr7, cr9, cr5, {3}
    26f0:	69746341 	ldmdbvs	r4!, {r0, r6, r8, r9, sp, lr}^
    26f4:	694c6576 	stmdbvs	ip, {r1, r2, r4, r5, r6, r8, sl, sp, lr}^
    26f8:	78007473 	stmdavc	r0, {r0, r1, r4, r5, r6, sl, ip, sp, lr}
    26fc:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    2700:	74654772 	strbtvc	r4, [r5], #-1906	; 0xfffff88e
    2704:	69707845 	ldmdbvs	r0!, {r0, r2, r6, fp, ip, sp, lr}^
    2708:	69547972 	ldmdbvs	r4, {r1, r4, r5, r6, r8, fp, ip, sp, lr}^
    270c:	7400656d 	strvc	r6, [r0], #-1389	; 0xfffffa93
    2710:	6143726d 	cmpvs	r3, sp, ror #4
    2714:	61626c6c 	cmnvs	r2, ip, ror #24
    2718:	61506b63 	cmpvs	r0, r3, ror #22
    271c:	656d6172 	strbvs	r6, [sp, #-370]!	; 0xfffffe8e
    2720:	73726574 	cmnvc	r2, #116, 10	; 0x1d000000
    2724:	69547800 	ldmdbvs	r4, {fp, ip, sp, lr}^
    2728:	4372656d 	cmnmi	r2, #457179136	; 0x1b400000
    272c:	74616572 	strbtvc	r6, [r1], #-1394	; 0xfffffa8e
    2730:	72700065 	rsbsvc	r0, r0, #101	; 0x65
    2734:	6d615376 	stclvs	3, cr5, [r1, #-472]!	; 0xfffffe28
    2738:	54656c70 	strbtpl	r6, [r5], #-3184	; 0xfffff390
    273c:	4e656d69 	cdpmi	13, 6, cr6, cr5, cr9, {3}
    2740:	7800776f 	stmdavc	r0, {r0, r1, r2, r3, r5, r6, r8, r9, sl, ip, sp, lr}
    2744:	6c6c6143 	stfvse	f6, [ip], #-268	; 0xfffffef4
    2748:	6b636162 	blvs	18dacd8 <__RAM_SIZE+0x17dacd8>
    274c:	61726150 	cmnvs	r2, r0, asr r1
    2750:	6574656d 	ldrbvs	r6, [r4, #-1389]!	; 0xfffffa93
    2754:	76007372 			; <UNDEFINED> instruction: 0x76007372
    2758:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    275c:	74655372 	strbtvc	r5, [r5], #-882	; 0xfffffc8e
    2760:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    2764:	00444972 	subeq	r4, r4, r2, ror r9
    2768:	6d695478 	cfstrdvs	mvd5, [r9, #-480]!	; 0xfffffe20
    276c:	694c7265 	stmdbvs	ip, {r0, r2, r5, r6, r9, ip, sp, lr}^
    2770:	74497473 	strbvc	r7, [r9], #-1139	; 0xfffffb8d
    2774:	70006d65 	andvc	r6, r0, r5, ror #26
    2778:	77654e76 			; <UNDEFINED> instruction: 0x77654e76
    277c:	70004449 	andvc	r4, r0, r9, asr #8
    2780:	77537672 			; <UNDEFINED> instruction: 0x77537672
    2784:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
    2788:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    278c:	73694c72 	cmnvc	r9, #29184	; 0x7200
    2790:	70007374 	andvc	r7, r0, r4, ror r3
    2794:	65527672 	ldrbvs	r7, [r2, #-1650]	; 0xfffff98e
    2798:	64616f6c 	strbtvs	r6, [r1], #-3948	; 0xfffff094
    279c:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    27a0:	63750072 	cmnvs	r5, #114	; 0x72
    27a4:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
    27a8:	69546369 	ldmdbvs	r4, {r0, r3, r5, r6, r8, r9, sp, lr}^
    27ac:	5172656d 	cmnpl	r2, sp, ror #10
    27b0:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
    27b4:	726f7453 	rsbvc	r7, pc, #1392508928	; 0x53000000
    27b8:	00656761 	rsbeq	r6, r5, r1, ror #14
    27bc:	61507670 	cmpvs	r0, r0, ror r6
    27c0:	656d6172 	strbvs	r6, [sp, #-370]!	; 0xfffffe8e
    27c4:	31726574 	cmncc	r2, r4, ror r5
    27c8:	44637500 	strbtmi	r7, [r3], #-1280	; 0xfffffb00
    27cc:	796d6d75 	stmdbvc	sp!, {r0, r2, r4, r5, r6, r8, sl, fp, sp, lr}^
    27d0:	54780038 	ldrbtpl	r0, [r8], #-56	; 0xffffffc8
    27d4:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    27d8:	6b736154 	blvs	1cdad30 <__RAM_SIZE+0x1bdad30>
    27dc:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
    27e0:	7000656c 	andvc	r6, r0, ip, ror #10
    27e4:	69547672 	ldmdbvs	r4, {r1, r4, r5, r6, r9, sl, ip, sp, lr}^
    27e8:	5472656d 	ldrbtpl	r6, [r2], #-1389	; 0xfffffa93
    27ec:	006b7361 	rsbeq	r7, fp, r1, ror #6
    27f0:	78654e78 	stmdavc	r5!, {r3, r4, r5, r6, r9, sl, fp, lr}^
    27f4:	70784574 	rsbsvc	r4, r8, r4, ror r5
    27f8:	54657269 	strbtpl	r7, [r5], #-617	; 0xfffffd97
    27fc:	00656d69 	rsbeq	r6, r5, r9, ror #26
    2800:	74536375 	ldrbvc	r6, [r3], #-885	; 0xfffffc8b
    2804:	73757461 	cmnvc	r5, #1627389952	; 0x61000000
    2808:	76727000 	ldrbtvc	r7, [r2], -r0
    280c:	636f7250 	cmnvs	pc, #80, 4
    2810:	52737365 	rsbspl	r7, r3, #-1811939327	; 0x94000001
    2814:	69656365 	stmdbvs	r5!, {r0, r2, r5, r6, r8, r9, sp, lr}^
    2818:	43646576 	cmnmi	r4, #494927872	; 0x1d800000
    281c:	616d6d6f 	cmnvs	sp, pc, ror #26
    2820:	0073646e 	rsbseq	r6, r3, lr, ror #8
    2824:	73614c78 	cmnvc	r1, #120, 24	; 0x7800
    2828:	6d695474 	cfstrdvs	mvd5, [r9, #-464]!	; 0xfffffe30
    282c:	65500065 	ldrbvs	r0, [r0, #-101]	; 0xffffff9b
    2830:	6465646e 	strbtvs	r6, [r5], #-1134	; 0xfffffb92
    2834:	636e7546 	cmnvs	lr, #293601280	; 0x11800000
    2838:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    283c:	7000745f 	andvc	r7, r0, pc, asr r4
    2840:	72754378 	rsbsvc	r4, r5, #120, 6	; 0xe0000001
    2844:	746e6572 	strbtvc	r6, [lr], #-1394	; 0xfffffa8e
    2848:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    284c:	73694c72 	cmnvc	r9, #29184	; 0x7200
    2850:	4d780074 	ldclmi	0, cr0, [r8, #-464]!	; 0xfffffe30
    2854:	61737365 	cmnvs	r3, r5, ror #6
    2858:	70006567 	andvc	r6, r0, r7, ror #10
    285c:	6d695476 	cfstrdvs	mvd5, [r9, #-472]!	; 0xfffffe28
    2860:	44497265 	strbmi	r7, [r9], #-613	; 0xfffffd9b
    2864:	654d7800 	strbvs	r7, [sp, #-2048]	; 0xfffff800
    2868:	67617373 			; <UNDEFINED> instruction: 0x67617373
    286c:	00444965 	subeq	r4, r4, r5, ror #18
    2870:	6d656144 	stfvse	f6, [r5, #-272]!	; 0xfffffef0
    2874:	61546e6f 	cmpvs	r4, pc, ror #28
    2878:	654d6b73 	strbvs	r6, [sp, #-2931]	; 0xfffff48d
    287c:	67617373 			; <UNDEFINED> instruction: 0x67617373
    2880:	00745f65 	rsbseq	r5, r4, r5, ror #30
    2884:	6d695476 	cfstrdvs	mvd5, [r9, #-472]!	; 0xfffffe28
    2888:	65527265 	ldrbvs	r7, [r2, #-613]	; 0xfffffd9b
    288c:	53746573 	cmnpl	r4, #482344960	; 0x1cc00000
    2890:	65746174 	ldrbvs	r6, [r4, #-372]!	; 0xfffffe8c
    2894:	69547800 	ldmdbvs	r4, {fp, ip, sp, lr}^
    2898:	4772656d 	ldrbmi	r6, [r2, -sp, ror #10]!
    289c:	65507465 	ldrbvs	r7, [r0, #-1125]	; 0xfffffb9b
    28a0:	646f6972 	strbtvs	r6, [pc], #-2418	; 28a8 <__HEAP_SIZE+0x18a8>
    28a4:	54787000 	ldrbtpl	r7, [r8], #-0
    28a8:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    28ac:	654d7800 	strbvs	r7, [sp, #-2048]	; 0xfffff800
    28b0:	67617373 			; <UNDEFINED> instruction: 0x67617373
    28b4:	6c615665 	stclvs	6, cr5, [r1], #-404	; 0xfffffe6c
    28b8:	78006575 	stmdavc	r0, {r0, r2, r4, r5, r6, r8, sl, sp, lr}
    28bc:	636e7546 	cmnvs	lr, #293601280	; 0x11800000
    28c0:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    28c4:	65506f54 	ldrbvs	r6, [r0, #-3924]	; 0xfffff0ac
    28c8:	7400646e 	strvc	r6, [r0], #-1134	; 0xfffffb92
    28cc:	6954726d 	ldmdbvs	r4, {r0, r2, r3, r5, r6, r9, ip, sp, lr}^
    28d0:	4372656d 	cmnmi	r2, #457179136	; 0x1b400000
    28d4:	72746e6f 	rsbsvc	r6, r4, #1776	; 0x6f0
    28d8:	70006c6f 	andvc	r6, r0, pc, ror #24
    28dc:	6d695463 	cfstrdvs	mvd5, [r9, #-396]!	; 0xfffffe74
    28e0:	65477265 	strbvs	r7, [r7, #-613]	; 0xfffffd9b
    28e4:	6d614e74 	stclvs	14, cr4, [r1, #-464]!	; 0xfffffe30
    28e8:	54780065 	ldrbtpl	r0, [r8], #-101	; 0xffffff9b
    28ec:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    28f0:	646e6550 	strbtvs	r6, [lr], #-1360	; 0xfffffab0
    28f4:	636e7546 	cmnvs	lr, #293601280	; 0x11800000
    28f8:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    28fc:	6c6c6143 	stfvse	f6, [ip], #-268	; 0xfffffef4
    2900:	6d6f7246 	sfmvs	f7, 2, [pc, #-280]!	; 27f0 <__HEAP_SIZE+0x17f0>
    2904:	00525349 	subseq	r5, r2, r9, asr #6
    2908:	50767270 	rsbspl	r7, r6, r0, ror r2
    290c:	65636f72 	strbvs	r6, [r3, #-3954]!	; 0xfffff08e
    2910:	69547373 	ldmdbvs	r4, {r0, r1, r4, r5, r6, r8, r9, ip, sp, lr}^
    2914:	4f72656d 	svcmi	0x0072656d
    2918:	6f6c4272 	svcvs	0x006c4272
    291c:	61546b63 	cmpvs	r4, r3, ror #22
    2920:	76006b73 			; <UNDEFINED> instruction: 0x76006b73
    2924:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    2928:	74655372 	strbtvc	r5, [r5], #-882	; 0xfffffc8e
    292c:	6f6c6552 	svcvs	0x006c6552
    2930:	6f4d6461 	svcvs	0x004d6461
    2934:	78006564 	stmdavc	r0, {r2, r5, r6, r8, sl, sp, lr}
    2938:	7478654e 	ldrbtvc	r6, [r8], #-1358	; 0xfffffab2
    293c:	69707845 	ldmdbvs	r0!, {r0, r2, r6, fp, ip, sp, lr}^
    2940:	69547972 	ldmdbvs	r4, {r1, r4, r5, r6, r8, fp, ip, sp, lr}^
    2944:	7800656d 	stmdavc	r0, {r0, r2, r3, r5, r6, r8, sl, sp, lr}
    2948:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    294c:	6e654772 	mcrvs	7, 3, r4, cr5, cr2, {3}
    2950:	63697265 	cmnvs	r9, #1342177286	; 0x50000006
    2954:	6d6d6f43 	stclvs	15, cr6, [sp, #-268]!	; 0xfffffef4
    2958:	46646e61 	strbtmi	r6, [r4], -r1, ror #28
    295c:	546d6f72 	strbtpl	r6, [sp], #-3954	; 0xfffff08e
    2960:	006b7361 	rsbeq	r7, fp, r1, ror #6
    2964:	54726d74 	ldrbtpl	r6, [r2], #-3444	; 0xfffff28c
    2968:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    296c:	61726150 	cmnvs	r2, r0, asr r1
    2970:	6574656d 	ldrbvs	r6, [r4, #-1389]!	; 0xfffffa93
    2974:	70007372 	andvc	r7, r0, r2, ror r3
    2978:	69547870 	ldmdbvs	r4, {r4, r5, r6, fp, ip, sp, lr}^
    297c:	4272656d 	rsbsmi	r6, r2, #457179136	; 0x1b400000
    2980:	65666675 	strbvs	r6, [r6, #-1653]!	; 0xfffff98b
    2984:	78700072 	ldmdavc	r0!, {r1, r4, r5, r6}^
    2988:	6c6c6143 	stfvse	f6, [ip], #-268	; 0xfffffef4
    298c:	6b636162 	blvs	18daf1c <__RAM_SIZE+0x17daf1c>
    2990:	76727000 	ldrbtvc	r7, [r2], -r0
    2994:	4e746547 	cdpmi	5, 7, cr6, cr4, cr7, {2}
    2998:	45747865 	ldrbmi	r7, [r4, #-2149]!	; 0xfffff79b
    299c:	72697078 	rsbvc	r7, r9, #120	; 0x78
    29a0:	6d695465 	cfstrdvs	mvd5, [r9, #-404]!	; 0xfffffe6c
    29a4:	78700065 	ldmdavc	r0!, {r0, r2, r5, r6}^
    29a8:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    29ac:	73694c72 	cmnvc	r9, #29184	; 0x7200
    29b0:	65577374 	ldrbvs	r7, [r7, #-884]	; 0xfffffc8c
    29b4:	77536572 			; <UNDEFINED> instruction: 0x77536572
    29b8:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
    29bc:	70006465 	andvc	r6, r0, r5, ror #8
    29c0:	65725078 	ldrbvs	r5, [r2, #-120]!	; 0xffffff88
    29c4:	756f6976 	strbvc	r6, [pc, #-2422]!	; 2056 <__HEAP_SIZE+0x1056>
    29c8:	6f6c4273 	svcvs	0x006c4273
    29cc:	70006b63 	andvc	r6, r0, r3, ror #22
    29d0:	61654878 	smcvs	21640	; 0x5488
    29d4:	61745370 	cmnvs	r4, r0, ror r3
    29d8:	78007374 	stmdavc	r0, {r2, r4, r5, r6, r8, r9, ip, sp, lr}
    29dc:	696e694d 	stmdbvs	lr!, {r0, r2, r3, r6, r8, fp, sp, lr}^
    29e0:	456d756d 	strbmi	r7, [sp, #-1389]!	; 0xfffffa93
    29e4:	46726576 			; <UNDEFINED> instruction: 0x46726576
    29e8:	42656572 	rsbmi	r6, r5, #478150656	; 0x1c800000
    29ec:	73657479 	cmnvc	r5, #2030043136	; 0x79000000
    29f0:	616d6552 	cmnvs	sp, r2, asr r5
    29f4:	6e696e69 	cdpvs	14, 6, cr6, cr9, cr9, {3}
    29f8:	65480067 	strbvs	r0, [r8, #-103]	; 0xffffff99
    29fc:	74537061 	ldrbvc	r7, [r3], #-97	; 0xffffff9f
    2a00:	5f737461 	svcpl	0x00737461
    2a04:	78700074 	ldmdavc	r0!, {r2, r4, r5, r6}^
    2a08:	7478654e 	ldrbtvc	r6, [r8], #-1358	; 0xfffffab2
    2a0c:	65657246 	strbvs	r7, [r5, #-582]!	; 0xfffffdba
    2a10:	636f6c42 	cmnvs	pc, #16896	; 0x4200
    2a14:	7870006b 	ldmdavc	r0!, {r0, r1, r3, r5, r6}^
    2a18:	636f6c42 	cmnvs	pc, #16896	; 0x4200
    2a1c:	4d78006b 	ldclmi	0, cr0, [r8, #-428]!	; 0xfffffe54
    2a20:	69536e69 	ldmdbvs	r3, {r0, r3, r5, r6, r9, sl, fp, sp, lr}^
    2a24:	7800657a 	stmdavc	r0, {r1, r3, r4, r5, r6, r8, sl, sp, lr}
    2a28:	626d754e 	rsbvs	r7, sp, #327155712	; 0x13800000
    2a2c:	664f7265 	strbvs	r7, [pc], -r5, ror #4
    2a30:	65657246 	strbvs	r7, [r5, #-582]!	; 0xfffffdba
    2a34:	636f6c42 	cmnvs	pc, #16896	; 0x4200
    2a38:	7000736b 	andvc	r7, r0, fp, ror #6
    2a3c:	646e4578 	strbtvs	r4, [lr], #-1400	; 0xfffffa88
    2a40:	76727000 	ldrbtvc	r7, [r2], -r0
    2a44:	65736e49 	ldrbvs	r6, [r3, #-3657]!	; 0xfffff1b7
    2a48:	6c427472 	cfstrdvs	mvd7, [r2], {114}	; 0x72
    2a4c:	496b636f 	stmdbmi	fp!, {r0, r1, r2, r3, r5, r6, r8, r9, sp, lr}^
    2a50:	466f746e 	strbtmi	r7, [pc], -lr, ror #8
    2a54:	4c656572 	cfstr64mi	mvdx6, [r5], #-456	; 0xfffffe38
    2a58:	00747369 	rsbseq	r7, r4, r9, ror #6
    2a5c:	4c425f41 	mcrrmi	15, 4, r5, r2, cr1
    2a60:	5f4b434f 	svcpl	0x004b434f
    2a64:	4b4e494c 	blmi	1394f9c <__RAM_SIZE+0x1294f9c>
    2a68:	53787500 	cmnpl	r8, #0, 10
    2a6c:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
    2a70:	72646441 	rsbvc	r6, r4, #1090519040	; 0x41000000
    2a74:	00737365 	rsbseq	r7, r3, r5, ror #6
    2a78:	7a695378 	bvc	1a57860 <__RAM_SIZE+0x1957860>
    2a7c:	53664f65 	cmnpl	r6, #404	; 0x194
    2a80:	6c6c616d 	stfvse	f6, [ip], #-436	; 0xfffffe4c
    2a84:	46747365 	ldrbtmi	r7, [r4], -r5, ror #6
    2a88:	42656572 	rsbmi	r6, r5, #478150656	; 0x1c800000
    2a8c:	6b636f6c 	blvs	18de844 <__RAM_SIZE+0x17de844>
    2a90:	79426e49 	stmdbvc	r2, {r0, r3, r6, r9, sl, fp, sp, lr}^
    2a94:	00736574 	rsbseq	r6, r3, r4, ror r5
    2a98:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    2a9c:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    2aa0:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    2aa4:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    2aa8:	6572462f 	ldrbvs	r4, [r2, #-1583]!	; 0xfffff9d1
    2aac:	4f545265 	svcmi	0x00545265
    2ab0:	6f702f53 	svcvs	0x00702f53
    2ab4:	62617472 	rsbvs	r7, r1, #1912602624	; 0x72000000
    2ab8:	4d2f656c 	cfstr32mi	mvfx6, [pc, #-432]!	; 2910 <__HEAP_SIZE+0x1910>
    2abc:	614d6d65 	cmpvs	sp, r5, ror #26
    2ac0:	682f676e 	stmdavs	pc!, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}	; <UNPREDICTABLE>
    2ac4:	5f706165 	svcpl	0x00706165
    2ac8:	00632e34 	rsbeq	r2, r3, r4, lsr lr
    2acc:	6e457875 	mcrvs	8, 2, r7, cr5, cr5, {3}
    2ad0:	64644164 	strbtvs	r4, [r4], #-356	; 0xfffffe9c
    2ad4:	73736572 	cmnvc	r3, #478150656	; 0x1c800000
    2ad8:	4e787000 	cdpmi	0, 7, cr7, cr8, cr0, {0}
    2adc:	6c427765 	mcrrvs	7, 6, r7, r2, cr5
    2ae0:	4c6b636f 	stclmi	3, cr6, [fp], #-444	; 0xfffffe44
    2ae4:	006b6e69 	rsbeq	r6, fp, r9, ror #28
    2ae8:	726f5078 	rsbvc	r5, pc, #120	; 0x78
    2aec:	74654774 	strbtvc	r4, [r5], #-1908	; 0xfffff88c
    2af0:	65657246 	strbvs	r7, [r5, #-582]!	; 0xfffffdba
    2af4:	70616548 	rsbvc	r6, r1, r8, asr #10
    2af8:	657a6953 	ldrbvs	r6, [sl, #-2387]!	; 0xfffff6ad
    2afc:	64417800 	strbvs	r7, [r1], #-2048	; 0xfffff800
    2b00:	69746964 	ldmdbvs	r4!, {r2, r5, r6, r8, fp, sp, lr}^
    2b04:	6c616e6f 	stclvs	14, cr6, [r1], #-444	; 0xfffffe44
    2b08:	75716552 	ldrbvc	r6, [r1, #-1362]!	; 0xfffffaae
    2b0c:	64657269 	strbtvs	r7, [r5], #-617	; 0xfffffd97
    2b10:	657a6953 	ldrbvs	r6, [sl, #-2387]!	; 0xfffff6ad
    2b14:	6f507600 	svcvs	0x00507600
    2b18:	65487472 	strbvs	r7, [r8, #-1138]	; 0xfffffb8e
    2b1c:	65527061 	ldrbvs	r7, [r2, #-97]	; 0xffffff9f
    2b20:	53746573 	cmnpl	r4, #482344960	; 0x1cc00000
    2b24:	65746174 	ldrbvs	r6, [r4, #-372]!	; 0xfffffe8c
    2b28:	614d7800 	cmpvs	sp, r0, lsl #16
    2b2c:	7a695378 	bvc	1a57914 <__RAM_SIZE+0x1957914>
    2b30:	50780065 	rsbspl	r0, r8, r5, rrx
    2b34:	4774726f 	ldrbmi	r7, [r4, -pc, ror #4]!
    2b38:	694d7465 	stmdbvs	sp, {r0, r2, r5, r6, sl, ip, sp, lr}^
    2b3c:	756d696e 	strbvc	r6, [sp, #-2414]!	; 0xfffff692
    2b40:	6576456d 	ldrbvs	r4, [r6, #-1389]!	; 0xfffffa93
    2b44:	65724672 	ldrbvs	r4, [r2, #-1650]!	; 0xfffff98e
    2b48:	61654865 	cmnvs	r5, r5, ror #16
    2b4c:	7a695370 	bvc	1a57914 <__RAM_SIZE+0x1957914>
    2b50:	6c420065 	mcrrvs	0, 6, r0, r2, cr5
    2b54:	4c6b636f 	stclmi	3, cr6, [fp], #-444	; 0xfffffe44
    2b58:	5f6b6e69 	svcpl	0x006b6e69
    2b5c:	4e780074 	mrcmi	0, 3, r0, cr8, cr4, {3}
    2b60:	65626d75 	strbvs	r6, [r2, #-3445]!	; 0xfffff28b
    2b64:	53664f72 	cmnpl	r6, #456	; 0x1c8
    2b68:	65636375 	strbvs	r6, [r3, #-885]!	; 0xfffffc8b
    2b6c:	75667373 	strbvc	r7, [r6, #-883]!	; 0xfffffc8d
    2b70:	6c6c416c 	stfvse	f4, [ip], #-432	; 0xfffffe50
    2b74:	7461636f 	strbtvc	r6, [r1], #-879	; 0xfffffc91
    2b78:	736e6f69 	cmnvc	lr, #420	; 0x1a4
    2b7c:	76417800 	strbvc	r7, [r1], -r0, lsl #16
    2b80:	616c6961 	cmnvs	ip, r1, ror #18
    2b84:	48656c62 	stmdami	r5!, {r1, r5, r6, sl, fp, sp, lr}^
    2b88:	53706165 	cmnpl	r0, #1073741849	; 0x40000019
    2b8c:	65636170 	strbvs	r6, [r3, #-368]!	; 0xfffffe90
    2b90:	79426e49 	stmdbvc	r2, {r0, r3, r6, r9, sl, fp, sp, lr}^
    2b94:	00736574 	rsbseq	r6, r3, r4, ror r5
    2b98:	61654878 	smcvs	21640	; 0x5488
    2b9c:	72745370 	rsbsvc	r5, r4, #112, 6	; 0xc0000001
    2ba0:	53746375 	cmnpl	r4, #-738197503	; 0xd4000001
    2ba4:	00657a69 	rsbeq	r7, r5, r9, ror #20
    2ba8:	6f507670 	svcvs	0x00507670
    2bac:	61437472 	hvcvs	14146	; 0x3742
    2bb0:	636f6c6c 	cmnvs	pc, #108, 24	; 0x6c00
    2bb4:	72467800 	subvc	r7, r6, #0, 16
    2bb8:	79426565 	stmdbvc	r2, {r0, r2, r5, r6, r8, sl, sp, lr}^
    2bbc:	52736574 	rsbspl	r6, r3, #116, 10	; 0x1d000000
    2bc0:	69616d65 	stmdbvs	r1!, {r0, r2, r5, r6, r8, sl, fp, sp, lr}^
    2bc4:	676e696e 	strbvs	r6, [lr, -lr, ror #18]!
    2bc8:	69537800 	ldmdbvs	r3, {fp, ip, sp, lr}^
    2bcc:	664f657a 			; <UNDEFINED> instruction: 0x664f657a
    2bd0:	6772614c 	ldrbvs	r6, [r2, -ip, asr #2]!
    2bd4:	46747365 	ldrbtmi	r7, [r4], -r5, ror #6
    2bd8:	42656572 	rsbmi	r6, r5, #478150656	; 0x1c800000
    2bdc:	6b636f6c 	blvs	18de994 <__RAM_SIZE+0x17de994>
    2be0:	79426e49 	stmdbvc	r2, {r0, r3, r6, r9, sl, fp, sp, lr}^
    2be4:	00736574 	rsbseq	r6, r3, r4, ror r5
    2be8:	48767270 	ldmdami	r6!, {r4, r5, r6, r9, ip, sp, lr}^
    2bec:	49706165 	ldmdbmi	r0!, {r0, r2, r5, r6, r8, sp, lr}^
    2bf0:	0074696e 	rsbseq	r6, r4, lr, ror #18
    2bf4:	6c427870 	mcrrvs	8, 7, r7, r2, cr0
    2bf8:	546b636f 	strbtpl	r6, [fp], #-879	; 0xfffffc91
    2bfc:	736e496f 	cmnvc	lr, #1818624	; 0x1bc000
    2c00:	00747265 	rsbseq	r7, r4, r5, ror #4
    2c04:	746f5478 	strbtvc	r5, [pc], #-1144	; 2c0c <__HEAP_SIZE+0x1c0c>
    2c08:	65486c61 	strbvs	r6, [r8, #-3169]	; 0xfffff39f
    2c0c:	69537061 	ldmdbvs	r3, {r0, r5, r6, ip, sp, lr}^
    2c10:	7800657a 	stmdavc	r0, {r1, r3, r4, r5, r6, r8, sl, sp, lr}
    2c14:	626d754e 	rsbvs	r7, sp, #327155712	; 0x13800000
    2c18:	664f7265 	strbvs	r7, [pc], -r5, ror #4
    2c1c:	63637553 	cmnvs	r3, #348127232	; 0x14c00000
    2c20:	66737365 	ldrbtvs	r7, [r3], -r5, ror #6
    2c24:	72466c75 	subvc	r6, r6, #29952	; 0x7500
    2c28:	00736565 	rsbseq	r6, r3, r5, ror #10
    2c2c:	6f6c4278 	svcvs	0x006c4278
    2c30:	69536b63 	ldmdbvs	r3, {r0, r1, r5, r6, r8, r9, fp, sp, lr}^
    2c34:	7800657a 	stmdavc	r0, {r1, r3, r4, r5, r6, r8, sl, sp, lr}
    2c38:	72617453 	rsbvc	r7, r1, #1392508928	; 0x53000000
    2c3c:	42780074 	rsbsmi	r0, r8, #116	; 0x74
    2c40:	6b636f6c 	blvs	18de9f8 <__RAM_SIZE+0x17de9f8>
    2c44:	4e780073 	mrcmi	0, 3, r0, cr8, cr3, {3}
    2c48:	70006d75 	andvc	r6, r0, r5, ror sp
    2c4c:	72694678 	rsbvc	r4, r9, #120, 12	; 0x7800000
    2c50:	72467473 	subvc	r7, r6, #1929379840	; 0x73000000
    2c54:	6c426565 	cfstr64vs	mvdx6, [r2], {101}	; 0x65
    2c58:	006b636f 	rsbeq	r6, fp, pc, ror #6
    2c5c:	6e615778 	mcrvs	7, 3, r5, cr1, cr8, {3}
    2c60:	53646574 	cmnpl	r4, #116, 10	; 0x1d000000
    2c64:	00657a69 	rsbeq	r7, r5, r9, ror #20
    2c68:	726f5076 	rsbvc	r5, pc, #118	; 0x76
    2c6c:	696e4974 	stmdbvs	lr!, {r2, r4, r5, r6, r8, fp, lr}^
    2c70:	6c616974 			; <UNDEFINED> instruction: 0x6c616974
    2c74:	42657369 	rsbmi	r7, r5, #-1543503871	; 0xa4000001
    2c78:	6b636f6c 	blvs	18dea30 <__RAM_SIZE+0x17dea30>
    2c7c:	50760073 	rsbspl	r0, r6, r3, ror r0
    2c80:	4774726f 	ldrbmi	r7, [r4, -pc, ror #4]!
    2c84:	65487465 	strbvs	r7, [r8, #-1125]	; 0xfffffb9b
    2c88:	74537061 	ldrbvc	r7, [r3], #-97	; 0xffffff9f
    2c8c:	00737461 	rsbseq	r7, r3, r1, ror #8
    2c90:	694c7870 	stmdbvs	ip, {r4, r5, r6, fp, ip, sp, lr}^
    2c94:	75006b6e 	strvc	r6, [r0, #-2926]	; 0xfffff492
    2c98:	6972436c 	ldmdbvs	r2!, {r2, r3, r5, r6, r8, r9, lr}^
    2c9c:	61636974 	smcvs	13972	; 0x3694
    2ca0:	73654e6c 	cmnvc	r5, #108, 28	; 0x6c0
    2ca4:	676e6974 			; <UNDEFINED> instruction: 0x676e6974
    2ca8:	446c7500 	strbtmi	r7, [ip], #-1280	; 0xfffffb00
    2cac:	796d6d75 	stmdbvc	sp!, {r0, r2, r4, r5, r6, r8, sl, fp, sp, lr}^
    2cb0:	506c7500 	rsbpl	r7, ip, r0, lsl #10
    2cb4:	63750043 	cmnvs	r5, #67	; 0x43
    2cb8:	4e435653 	mcrmi	6, 2, r5, cr3, cr3, {2}
    2cbc:	65626d75 	strbvs	r6, [r2, #-3445]!	; 0xfffff28b
    2cc0:	53760072 	cmnpl	r6, #114	; 0x72
    2cc4:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
    2cc8:	73726946 	cmnvc	r2, #1146880	; 0x118000
    2ccc:	73615474 	cmnvc	r1, #116, 8	; 0x74000000
    2cd0:	7870006b 	ldmdavc	r0!, {r0, r1, r3, r5, r6}^
    2cd4:	74636556 	strbtvc	r6, [r3], #-1366	; 0xfffffaaa
    2cd8:	6154726f 	cmpvs	r4, pc, ror #4
    2cdc:	00656c62 	rsbeq	r6, r5, r2, ror #24
    2ce0:	726f5076 	rsbvc	r5, pc, #118	; 0x76
    2ce4:	43565374 	cmpmi	r6, #116, 6	; 0xd0000001
    2ce8:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
    2cec:	5f72656c 	svcpl	0x0072656c
    2cf0:	6c750043 	ldclvs	0, cr0, [r5], #-268	; 0xfffffef4
    2cf4:	706d6f43 	rsbvc	r6, sp, r3, asr #30
    2cf8:	6574656c 	ldrbvs	r6, [r4, #-1388]!	; 0xfffffa94
    2cfc:	6b636954 	blvs	18dd254 <__RAM_SIZE+0x17dd254>
    2d00:	69726550 	ldmdbvs	r2!, {r4, r6, r8, sl, sp, lr}^
    2d04:	0073646f 	rsbseq	r6, r3, pc, ror #8
    2d08:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    2d0c:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    2d10:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    2d14:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    2d18:	6572462f 	ldrbvs	r4, [r2, #-1583]!	; 0xfffff9d1
    2d1c:	4f545265 	svcmi	0x00545265
    2d20:	6f702f53 	svcvs	0x00702f53
    2d24:	62617472 	rsbvs	r7, r1, #1912602624	; 0x72000000
    2d28:	472f656c 	strmi	r6, [pc, -ip, ror #10]!
    2d2c:	412f4343 			; <UNDEFINED> instruction: 0x412f4343
    2d30:	435f4d52 	cmpmi	pc, #5248	; 0x1480
    2d34:	5f33334d 	svcpl	0x0033334d
    2d38:	2f5a544e 	svccs	0x005a544e
    2d3c:	5f6e6f6e 	svcpl	0x006e6f6e
    2d40:	75636573 	strbvc	r6, [r3, #-1395]!	; 0xfffffa8d
    2d44:	702f6572 	eorvc	r6, pc, r2, ror r5	; <UNPREDICTABLE>
    2d48:	2e74726f 	cdpcs	2, 7, cr7, cr4, cr15, {3}
    2d4c:	6c750063 	ldclvs	0, cr0, [r5], #-396	; 0xfffffe74
    2d50:	706d6f43 	rsbvc	r6, sp, r3, asr #30
    2d54:	6574656c 	ldrbvs	r6, [r4, #-1388]!	; 0xfffffa94
    2d58:	73795364 	cmnvc	r9, #100, 6	; 0x90000001
    2d5c:	6b636954 	blvs	18dd2b4 <__RAM_SIZE+0x17dd2b4>
    2d60:	72636544 	rsbvc	r6, r3, #68, 10	; 0x11000000
    2d64:	6e656d65 	cdpvs	13, 6, cr6, cr5, cr5, {3}
    2d68:	70007374 	andvc	r7, r0, r4, ror r3
    2d6c:	61436c75 	hvcvs	14021	; 0x36c5
    2d70:	72656c6c 	rsbvc	r6, r5, #108, 24	; 0x6c00
    2d74:	63617453 	cmnvs	r1, #1392508928	; 0x53000000
    2d78:	6464416b 	strbtvs	r4, [r4], #-363	; 0xfffffe95
    2d7c:	73736572 	cmnvc	r3, #478150656	; 0x1c800000
    2d80:	536c7500 	cmnpl	ip, #0, 10
    2d84:	70706f74 	rsbsvc	r6, r0, r4, ror pc
    2d88:	69546465 	ldmdbvs	r4, {r0, r2, r5, r6, sl, sp, lr}^
    2d8c:	4372656d 	cmnmi	r2, #457179136	; 0x1b400000
    2d90:	65706d6f 	ldrbvs	r6, [r0, #-3439]!	; 0xfffff291
    2d94:	7461736e 	strbtvc	r7, [r1], #-878	; 0xfffffc92
    2d98:	006e6f69 	rsbeq	r6, lr, r9, ror #30
    2d9c:	79536c75 	ldmdbvc	r3, {r0, r2, r4, r5, r6, sl, fp, sp, lr}^
    2da0:	63695473 	cmnvs	r9, #1929379840	; 0x73000000
    2da4:	6365446b 	cmnvs	r5, #1795162112	; 0x6b000000
    2da8:	656d6572 	strbvs	r6, [sp, #-1394]!	; 0xfffffa8e
    2dac:	4c73746e 	cfldrdmi	mvd7, [r3], #-440	; 0xfffffe48
    2db0:	00746665 	rsbseq	r6, r4, r5, ror #12
    2db4:	61436c75 	hvcvs	14021	; 0x36c5
    2db8:	6c75636c 	ldclvs	3, cr6, [r5], #-432	; 0xfffffe50
    2dbc:	64657461 	strbtvs	r7, [r5], #-1121	; 0xfffffb9f
    2dc0:	64616f4c 	strbtvs	r6, [r1], #-3916	; 0xfffff0b4
    2dc4:	756c6156 	strbvc	r6, [ip, #-342]!	; 0xfffffeaa
    2dc8:	4d780065 	ldclmi	0, cr0, [r8, #-404]!	; 0xfffffe6c
    2dcc:	6669646f 	strbtvs	r6, [r9], -pc, ror #8
    2dd0:	6c626169 	stfvse	f6, [r2], #-420	; 0xfffffe5c
    2dd4:	6c644965 			; <UNDEFINED> instruction: 0x6c644965
    2dd8:	6d695465 	cfstrdvs	mvd5, [r9, #-404]!	; 0xfffffe6c
    2ddc:	78700065 	ldmdavc	r0!, {r0, r2, r5, r6}^
    2de0:	4f646e45 	svcmi	0x00646e45
    2de4:	61745366 	cmnvs	r4, r6, ror #6
    2de8:	78006b63 	stmdavc	r0, {r0, r1, r5, r6, r8, r9, fp, sp, lr}
    2dec:	6978614d 	ldmdbvs	r8!, {r0, r2, r3, r6, r8, sp, lr}^
    2df0:	506d756d 	rsbpl	r7, sp, sp, ror #10
    2df4:	6973736f 	ldmdbvs	r3!, {r0, r1, r2, r3, r5, r6, r8, r9, ip, sp, lr}^
    2df8:	53656c62 	cmnpl	r5, #25088	; 0x6200
    2dfc:	72707075 	rsbsvc	r7, r0, #117	; 0x75
    2e00:	65737365 	ldrbvs	r7, [r3, #-869]!	; 0xfffffc9b
    2e04:	63695464 	cmnvs	r9, #100, 8	; 0x64000000
    2e08:	7000736b 	andvc	r7, r0, fp, ror #6
    2e0c:	61547672 	cmpvs	r4, r2, ror r6
    2e10:	78456b73 	stmdavc	r5, {r0, r1, r4, r5, r6, r8, r9, fp, sp, lr}^
    2e14:	72457469 	subvc	r7, r5, #1761607680	; 0x69000000
    2e18:	00726f72 	rsbseq	r6, r2, r2, ror pc
    2e1c:	726f5076 	rsbvc	r5, pc, #118	; 0x76
    2e20:	74655374 	strbtvc	r5, [r5], #-884	; 0xfffffc8c
    2e24:	69547075 	ldmdbvs	r4, {r0, r2, r4, r5, r6, ip, sp, lr}^
    2e28:	4972656d 	ldmdbmi	r2!, {r0, r2, r3, r5, r6, r8, sl, sp, lr}^
    2e2c:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
    2e30:	74707572 	ldrbtvc	r7, [r0], #-1394	; 0xfffffa8e
    2e34:	43787000 	cmnmi	r8, #0
    2e38:	0065646f 	rsbeq	r6, r5, pc, ror #8
    2e3c:	726f5078 	rsbvc	r5, pc, #120	; 0x78
    2e40:	49734974 	ldmdbmi	r3!, {r2, r4, r5, r6, r8, fp, lr}^
    2e44:	6469736e 	strbtvs	r7, [r9], #-878	; 0xfffffc92
    2e48:	746e4965 	strbtvc	r4, [lr], #-2405	; 0xfffff69b
    2e4c:	75727265 	ldrbvc	r7, [r2, #-613]!	; 0xfffffd9b
    2e50:	75007470 	strvc	r7, [r0, #-1136]	; 0xfffffb90
    2e54:	7275436c 	rsbsvc	r4, r5, #108, 6	; 0xb0000001
    2e58:	746e6572 	strbtvc	r6, [lr], #-1394	; 0xfffffa8e
    2e5c:	65746e49 	ldrbvs	r6, [r4, #-3657]!	; 0xfffff1b7
    2e60:	70757272 	rsbsvc	r7, r5, r2, ror r2
    2e64:	52760074 	rsbspl	r0, r6, #116	; 0x74
    2e68:	6f747365 	svcvs	0x00747365
    2e6c:	6f436572 	svcvs	0x00436572
    2e70:	7865746e 	stmdavc	r5!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
    2e74:	46664f74 	uqsub16mi	r4, r6, r4
    2e78:	74737269 	ldrbtvc	r7, [r3], #-617	; 0xfffffd97
    2e7c:	6b736154 	blvs	1cdb3d4 <__RAM_SIZE+0x1bdb3d4>
    2e80:	726f7000 	rsbvc	r7, pc, #0
    2e84:	52534974 	subspl	r4, r3, #116, 18	; 0x1d0000
    2e88:	5300745f 	movwpl	r7, #1119	; 0x45f
    2e8c:	69547379 	ldmdbvs	r4, {r0, r3, r4, r5, r6, r8, r9, ip, sp, lr}^
    2e90:	485f6b63 	ldmdami	pc, {r0, r1, r5, r6, r8, r9, fp, sp, lr}^	; <UNPREDICTABLE>
    2e94:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
    2e98:	75007265 	strvc	r7, [r0, #-613]	; 0xfffffd9b
    2e9c:	6c65526c 	sfmvs	f5, 2, [r5], #-432	; 0xfffffe50
    2ea0:	5664616f 	strbtpl	r6, [r4], -pc, ror #2
    2ea4:	65756c61 	ldrbvs	r6, [r5, #-3169]!	; 0xfffff39f
    2ea8:	546c7500 	strbtpl	r7, [ip], #-1280	; 0xfffffb00
    2eac:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    2eb0:	6e756f43 	cdpvs	15, 7, cr6, cr5, cr3, {2}
    2eb4:	6f467374 	svcvs	0x00467374
    2eb8:	656e4f72 	strbvs	r4, [lr, #-3954]!	; 0xfffff08e
    2ebc:	6b636954 	blvs	18dd414 <__RAM_SIZE+0x17dd414>
    2ec0:	506c7500 	rsbpl	r7, ip, r0, lsl #10
    2ec4:	69766572 	ldmdbvs	r6!, {r1, r4, r5, r6, r8, sl, sp, lr}^
    2ec8:	4d73756f 	cfldr64mi	mvdx7, [r3, #-444]!	; 0xfffffe44
    2ecc:	006b7361 	rsbeq	r7, fp, r1, ror #6
    2ed0:	646e6550 	strbtvs	r6, [lr], #-1360	; 0xfffffab0
    2ed4:	485f5653 	ldmdami	pc, {r0, r1, r4, r6, r9, sl, ip, lr}^	; <UNPREDICTABLE>
    2ed8:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
    2edc:	2e007265 	cdpcs	2, 0, cr7, cr0, cr5, {3}
    2ee0:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    2ee4:	2f2e2e2f 	svccs	0x002e2e2f
    2ee8:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
    2eec:	2f736f74 	svccs	0x00736f74
    2ef0:	65657246 	strbvs	r7, [r5, #-582]!	; 0xfffffdba
    2ef4:	534f5452 	movtpl	r5, #62546	; 0xf452
    2ef8:	726f702f 	rsbvc	r7, pc, #47	; 0x2f
    2efc:	6c626174 	stfvse	f6, [r2], #-464	; 0xfffffe30
    2f00:	43472f65 	movtmi	r2, #32613	; 0x7f65
    2f04:	52412f43 	subpl	r2, r1, #268	; 0x10c
    2f08:	4d435f4d 	stclmi	15, cr5, [r3, #-308]	; 0xfffffecc
    2f0c:	4e5f3333 	mrcmi	3, 2, r3, cr15, cr3, {1}
    2f10:	6e2f5a54 			; <UNDEFINED> instruction: 0x6e2f5a54
    2f14:	735f6e6f 	cmpvc	pc, #1776	; 0x6f0
    2f18:	72756365 	rsbsvc	r6, r5, #-1811939327	; 0x94000001
    2f1c:	6f702f65 	svcvs	0x00702f65
    2f20:	73617472 	cmnvc	r1, #1912602624	; 0x72000000
    2f24:	00632e6d 	rsbeq	r2, r3, sp, ror #28
    2f28:	50734978 	rsbspl	r4, r3, r8, ror r9
    2f2c:	69766972 	ldmdbvs	r6!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    2f30:	6567656c 	strbvs	r6, [r7, #-1388]!	; 0xfffffa94
    2f34:	56530064 	ldrbpl	r0, [r3], -r4, rrx
    2f38:	61485f43 	cmpvs	r8, r3, asr #30
    2f3c:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
    2f40:	52760072 	rsbspl	r0, r6, #114	; 0x72
    2f44:	74657365 	strbtvc	r7, [r5], #-869	; 0xfffffc9b
    2f48:	76697250 			; <UNDEFINED> instruction: 0x76697250
    2f4c:	67656c69 	strbvs	r6, [r5, -r9, ror #24]!
    2f50:	6c750065 	ldclvs	0, cr0, [r5], #-404	; 0xfffffe6c
    2f54:	6b73614d 	blvs	1cdb490 <__RAM_SIZE+0x1bdb490>
    2f58:	61527600 	cmpvs	r2, r0, lsl #12
    2f5c:	50657369 	rsbpl	r7, r5, r9, ror #6
    2f60:	69766972 	ldmdbvs	r6!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    2f64:	6567656c 	strbvs	r6, [r7, #-1388]!	; 0xfffffa94
    2f68:	732f2e00 			; <UNDEFINED> instruction: 0x732f2e00
    2f6c:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
    2f70:	672f7075 			; <UNDEFINED> instruction: 0x672f7075
    2f74:	732f6363 			; <UNDEFINED> instruction: 0x732f6363
    2f78:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
    2f7c:	415f7075 	cmpmi	pc, r5, ror r0	; <UNPREDICTABLE>
    2f80:	4d434d52 	stclmi	13, cr4, [r3, #-328]	; 0xfffffeb8
    2f84:	732e3333 			; <UNDEFINED> instruction: 0x732e3333
    2f88:	554e4700 	strbpl	r4, [lr, #-1792]	; 0xfffff900
    2f8c:	20534120 	subscs	r4, r3, r0, lsr #2
    2f90:	36332e32 			; <UNDEFINED> instruction: 0x36332e32
    2f94:	2e00312e 	adfcssp	f3, f0, #0.5
    2f98:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    2f9c:	2f2e2e2f 	svccs	0x002e2e2f
    2fa0:	7562696c 	strbvc	r6, [r2, #-2412]!	; 0xfffff694
    2fa4:	736c6974 	cmnvc	ip, #116, 18	; 0x1d0000
    2fa8:	7561662f 	strbvc	r6, [r1, #-1583]!	; 0xfffff9d1
    2fac:	642d746c 	strtvs	r7, [sp], #-1132	; 0xfffffb94
    2fb0:	2f706d75 	svccs	0x00706d75
    2fb4:	2f757063 	svccs	0x00757063
    2fb8:	74726f63 	ldrbtvc	r6, [r2], #-3939	; 0xfffff09d
    2fbc:	6d2d7865 	stcvs	8, cr7, [sp, #-404]!	; 0xfffffe6c
    2fc0:	662f3333 			; <UNDEFINED> instruction: 0x662f3333
    2fc4:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
    2fc8:	6363672d 	cmnvs	r3, #11796480	; 0xb40000
    2fcc:	Address 0x00002fcc is out of bounds.


Disassembly of section .debug_frame:

00000000 <.debug_frame>:
    __asm volatile ( "mrs %0, ipsr" : "=r" ( ulCurrentInterrupt )::"memory" );
       0:	0000000c 	andeq	r0, r0, ip
    if( ulCurrentInterrupt == 0 )
       4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
        xReturn = pdFALSE;
       8:	7c020001 	stcvc	0, cr0, [r2], {1}
}
       c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    ( pxList->uxNumberOfItems ) = ( UBaseType_t ) ( pxList->uxNumberOfItems + 1U );
      10:	0000001c 	andeq	r0, r0, ip, lsl r0
}
      14:	00000000 	andeq	r0, r0, r0
      18:	10000800 	andne	r0, r0, r0, lsl #16
      1c:	00000044 	andeq	r0, r0, r4, asr #32
      20:	8e040e41 	cdphi	14, 0, cr0, cr4, cr1, {2}
      24:	100e4101 	andne	r4, lr, r1, lsl #2
      28:	040e0a52 	streq	r0, [lr], #-2642	; 0xfffff5ae
      2c:	00000b42 	andeq	r0, r0, r2, asr #22
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
      30:	00000014 	andeq	r0, r0, r4, lsl r0
	...
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
      3c:	00000010 	andeq	r0, r0, r0, lsl r0
      40:	83080e41 	movwhi	r0, #36417	; 0x8e41
        BaseType_t xReturn = pdFAIL;
      44:	00018e02 	andeq	r8, r1, r2, lsl #28
    }
      48:	00000014 	andeq	r0, r0, r4, lsl r0
	...
            while( pxBlock != pxEnd )
      54:	00000010 	andeq	r0, r0, r0, lsl r0
                if( pxBlock->xBlockSize > xMaxSize )
      58:	83080e41 	movwhi	r0, #36417	; 0x8e41
      5c:	00018e02 	andeq	r8, r1, r2, lsl #28
                if( pxBlock->xBlockSize < xMinSize )
      60:	00000014 	andeq	r0, r0, r4, lsl r0
	...
                    xMinSize = pxBlock->xBlockSize;
      6c:	00000020 	andeq	r0, r0, r0, lsr #32
      70:	83080e41 	movwhi	r0, #36417	; 0x8e41
      74:	00018e02 	andeq	r8, r1, r2, lsl #28
      78:	0000001c 	andeq	r0, r0, ip, lsl r0
      7c:	00000000 	andeq	r0, r0, r0
            prvUnlockQueue( pxQueue );
      80:	10000844 	andne	r0, r0, r4, asr #16
            ( void ) xTaskResumeAll();
      84:	0000004c 	andeq	r0, r0, ip, asr #32
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
      88:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
      8c:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
      90:	180e4101 	stmdane	lr, {r0, r8, lr}
        taskENTER_CRITICAL();
      94:	000c0e5f 	andeq	r0, ip, pc, asr lr
            if( uxSemaphoreCount > ( UBaseType_t ) 0 )
      98:	0000001c 	andeq	r0, r0, ip, lsl r0
                if( xTicksToWait == ( TickType_t ) 0 )
      9c:	00000000 	andeq	r0, r0, r0
      a0:	10000890 	mulne	r0, r0, r8
                else if( xEntryTimeSet == pdFALSE )
      a4:	00000068 	andeq	r0, r0, r8, rrx
        taskEXIT_CRITICAL();
      a8:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
        vTaskSuspendAll();
      ac:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
        prvLockQueue( pxQueue );
      b0:	900e4101 	andls	r4, lr, r1, lsl #2
      b4:	0c0e6902 			; <UNDEFINED> instruction: 0x0c0e6902
      b8:	00000014 	andeq	r0, r0, r4, lsl r0
      bc:	00000000 	andeq	r0, r0, r0
      c0:	100008f8 	strdne	r0, [r0], -r8
      c4:	0000001c 	andeq	r0, r0, ip, lsl r0
      c8:	83080e41 	movwhi	r0, #36417	; 0x8e41
      cc:	00018e02 	andeq	r8, r1, r2, lsl #28
        if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
      d0:	00000014 	andeq	r0, r0, r4, lsl r0
      d4:	00000000 	andeq	r0, r0, r0
      d8:	10000914 	andne	r0, r0, r4, lsl r9
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
      dc:	00000018 	andeq	r0, r0, r8, lsl r0
      e0:	83080e41 	movwhi	r0, #36417	; 0x8e41
                    if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
      e4:	00018e02 	andeq	r8, r1, r2, lsl #28
      e8:	00000014 	andeq	r0, r0, r4, lsl r0
                vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
      ec:	00000000 	andeq	r0, r0, r0
      f0:	1000092c 	andne	r0, r0, ip, lsr #18
                prvUnlockQueue( pxQueue );
      f4:	00000018 	andeq	r0, r0, r8, lsl r0
      f8:	83080e41 	movwhi	r0, #36417	; 0x8e41
                if( xTaskResumeAll() == pdFALSE )
      fc:	00018e02 	andeq	r8, r1, r2, lsl #28
     100:	00000014 	andeq	r0, r0, r4, lsl r0
                    taskYIELD_WITHIN_API();
     104:	00000000 	andeq	r0, r0, r0
                    if( xInheritanceOccurred != pdFALSE )
     108:	10000944 	andne	r0, r0, r4, asr #18
                return errQUEUE_EMPTY;
     10c:	00000018 	andeq	r0, r0, r8, lsl r0
                        taskENTER_CRITICAL();
     110:	83080e41 	movwhi	r0, #36417	; 0x8e41
                            uxHighestWaitingPriority = prvGetDisinheritPriorityAfterTimeout( pxQueue );
     114:	00018e02 	andeq	r8, r1, r2, lsl #28
     118:	00000014 	andeq	r0, r0, r4, lsl r0
                            vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
     11c:	00000000 	andeq	r0, r0, r0
                        taskEXIT_CRITICAL();
     120:	1000095c 	andne	r0, r0, ip, asr r9
     124:	00000018 	andeq	r0, r0, r8, lsl r0
     128:	83080e41 	movwhi	r0, #36417	; 0x8e41
     12c:	00018e02 	andeq	r8, r1, r2, lsl #28
     130:	00000014 	andeq	r0, r0, r4, lsl r0
     134:	00000000 	andeq	r0, r0, r0
     138:	10000974 	andne	r0, r0, r4, ror r9
     13c:	00000018 	andeq	r0, r0, r8, lsl r0
     140:	83080e41 	movwhi	r0, #36417	; 0x8e41
     144:	00018e02 	andeq	r8, r1, r2, lsl #28
     148:	00000014 	andeq	r0, r0, r4, lsl r0
     14c:	00000000 	andeq	r0, r0, r0
     150:	1000098c 	andne	r0, r0, ip, lsl #19
     154:	00000024 	andeq	r0, r0, r4, lsr #32
     158:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     15c:	00018e02 	andeq	r8, r1, r2, lsl #28
     160:	00000014 	andeq	r0, r0, r4, lsl r0
     164:	00000000 	andeq	r0, r0, r0
     168:	100009b0 			; <UNDEFINED> instruction: 0x100009b0
     16c:	0000002c 	andeq	r0, r0, ip, lsr #32
     170:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     174:	00018e02 	andeq	r8, r1, r2, lsl #28
     178:	0000000c 	andeq	r0, r0, ip
     17c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     180:	7c020001 	stcvc	0, cr0, [r2], {1}
     184:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     188:	0000000c 	andeq	r0, r0, ip
     18c:	00000178 	andeq	r0, r0, r8, ror r1
     190:	00000000 	andeq	r0, r0, r0
     194:	00000010 	andeq	r0, r0, r0, lsl r0
     198:	0000000c 	andeq	r0, r0, ip
     19c:	00000178 	andeq	r0, r0, r8, ror r1
     1a0:	100009dc 	ldrdne	r0, [r0], -ip
     1a4:	0000002c 	andeq	r0, r0, ip, lsr #32
     1a8:	0000000c 	andeq	r0, r0, ip
     1ac:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     1b0:	7c020001 	stcvc	0, cr0, [r2], {1}
     1b4:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     1b8:	0000000c 	andeq	r0, r0, ip
     1bc:	000001a8 	andeq	r0, r0, r8, lsr #3
     1c0:	00000000 	andeq	r0, r0, r0
     1c4:	00000008 	andeq	r0, r0, r8
     1c8:	0000000c 	andeq	r0, r0, ip
     1cc:	000001a8 	andeq	r0, r0, r8, lsr #3
     1d0:	10000a08 	andne	r0, r0, r8, lsl #20
     1d4:	00000002 	andeq	r0, r0, r2
     1d8:	00000018 	andeq	r0, r0, r8, lsl r0
     1dc:	000001a8 	andeq	r0, r0, r8, lsr #3
     1e0:	00000000 	andeq	r0, r0, r0
     1e4:	0000000e 	andeq	r0, r0, lr
     1e8:	83080e42 	movwhi	r0, #36418	; 0x8e42
     1ec:	44018e02 	strmi	r8, [r1], #-3586	; 0xfffff1fe
     1f0:	cec3000e 	cdpgt	0, 12, cr0, cr3, cr14, {0}
     1f4:	0000000c 	andeq	r0, r0, ip
     1f8:	000001a8 	andeq	r0, r0, r8, lsr #3
     1fc:	10000a0a 	andne	r0, r0, sl, lsl #20
     200:	00000024 	andeq	r0, r0, r4, lsr #32
     204:	0000002c 	andeq	r0, r0, ip, lsr #32
     208:	000001a8 	andeq	r0, r0, r8, lsr #3
     20c:	10000a2e 	andne	r0, r0, lr, lsr #20
     210:	0000007e 	andeq	r0, r0, lr, ror r0
     214:	84240e42 	strthi	r0, [r4], #-3650	; 0xfffff1be
     218:	86088509 	strhi	r8, [r8], -r9, lsl #10
     21c:	88068707 	stmdahi	r6, {r0, r1, r2, r8, r9, sl, pc}
     220:	8a048905 	bhi	12263c <__RAM_SIZE+0x2263c>
     224:	8e028b03 	vmlahi.f64	d8, d2, d3
     228:	300e4101 	andcc	r4, lr, r1, lsl #2
     22c:	240e0a6f 	strcs	r0, [lr], #-2671	; 0xfffff591
     230:	00000b42 	andeq	r0, r0, r2, asr #22
     234:	00000028 	andeq	r0, r0, r8, lsr #32
     238:	000001a8 	andeq	r0, r0, r8, lsr #3
     23c:	10000aac 	andne	r0, r0, ip, lsr #21
     240:	00000138 	andeq	r0, r0, r8, lsr r1
     244:	841c0e42 	ldrhi	r0, [ip], #-3650	; 0xfffff1be
     248:	86068507 	strhi	r8, [r6], -r7, lsl #10
     24c:	88048705 	stmdahi	r4, {r0, r2, r8, r9, sl, pc}
     250:	8e028903 	vmlahi.f16	s16, s4, s6	; <UNPREDICTABLE>
     254:	300e4101 	andcc	r4, lr, r1, lsl #2
     258:	0e0a5b02 	vmlaeq.f64	d5, d10, d2
     25c:	000b421c 	andeq	r4, fp, ip, lsl r2
     260:	00000020 	andeq	r0, r0, r0, lsr #32
     264:	000001a8 	andeq	r0, r0, r8, lsr #3
     268:	10000be4 	andne	r0, r0, r4, ror #23
     26c:	00000094 	muleq	r0, r4, r0
     270:	84140e41 	ldrhi	r0, [r4], #-3649	; 0xfffff1bf
     274:	86048505 	strhi	r8, [r4], -r5, lsl #10
     278:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
     27c:	580e4101 	stmdapl	lr, {r0, r8, lr}
     280:	140e4702 	strne	r4, [lr], #-1794	; 0xfffff8fe
     284:	00000028 	andeq	r0, r0, r8, lsr #32
     288:	000001a8 	andeq	r0, r0, r8, lsr #3
     28c:	10000c78 	andne	r0, r0, r8, ror ip
     290:	000000c6 	andeq	r0, r0, r6, asr #1
     294:	84240e42 	strthi	r0, [r4], #-3650	; 0xfffff1be
     298:	86088509 	strhi	r8, [r8], -r9, lsl #10
     29c:	88068707 	stmdahi	r6, {r0, r1, r2, r8, r9, sl, pc}
     2a0:	8a048905 	bhi	1226bc <__RAM_SIZE+0x226bc>
     2a4:	8e028b03 	vmlahi.f64	d8, d2, d3
     2a8:	780e4101 	stmdavc	lr, {r0, r8, lr}
     2ac:	240e5e02 	strcs	r5, [lr], #-3586	; 0xfffff1fe
     2b0:	0000003c 	andeq	r0, r0, ip, lsr r0
     2b4:	000001a8 	andeq	r0, r0, r8, lsr #3
     2b8:	10000d40 	andne	r0, r0, r0, asr #26
     2bc:	000003ea 	andeq	r0, r0, sl, ror #7
     2c0:	84240e42 	strthi	r0, [r4], #-3650	; 0xfffff1be
     2c4:	86088509 	strhi	r8, [r8], -r9, lsl #10
     2c8:	88068707 	stmdahi	r6, {r0, r1, r2, r8, r9, sl, pc}
     2cc:	8a048905 	bhi	1226e8 <__RAM_SIZE+0x226e8>
     2d0:	8e028b03 	vmlahi.f64	d8, d2, d3
     2d4:	2c0e4201 	sfmcs	f4, 4, [lr], {1}
     2d8:	050b5005 	streq	r5, [fp, #-5]
     2dc:	0e410a51 			; <UNDEFINED> instruction: 0x0e410a51
     2e0:	01250370 			; <UNDEFINED> instruction: 0x01250370
     2e4:	422c0e0a 	eormi	r0, ip, #10, 28	; 0xa0
     2e8:	51065006 	tstpl	r6, r6
     2ec:	0b42240e 	bleq	108932c <__RAM_SIZE+0xf8932c>
     2f0:	00000040 	andeq	r0, r0, r0, asr #32
     2f4:	000001a8 	andeq	r0, r0, r8, lsr #3
     2f8:	10001130 	andne	r1, r0, r0, lsr r1
     2fc:	00000396 	muleq	r0, r6, r3
     300:	84240e42 	strthi	r0, [r4], #-3650	; 0xfffff1be
     304:	86088509 	strhi	r8, [r8], -r9, lsl #10
     308:	88068707 	stmdahi	r6, {r0, r1, r2, r8, r9, sl, pc}
     30c:	8a048905 	bhi	122728 <__RAM_SIZE+0x22728>
     310:	8e028b03 	vmlahi.f64	d8, d2, d3
     314:	2c0e4201 	sfmcs	f4, 4, [lr], {1}
     318:	050b5005 	streq	r5, [fp, #-5]
     31c:	0e410a51 			; <UNDEFINED> instruction: 0x0e410a51
     320:	8d030180 	stfhis	f0, [r3, #-512]	; 0xfffffe00
     324:	2c0e0a01 			; <UNDEFINED> instruction: 0x2c0e0a01
     328:	06500642 	ldrbeq	r0, [r0], -r2, asr #12
     32c:	42240e51 	eormi	r0, r4, #1296	; 0x510
     330:	0000000b 	andeq	r0, r0, fp
     334:	0000002c 	andeq	r0, r0, ip, lsr #32
     338:	000001a8 	andeq	r0, r0, r8, lsr #3
     33c:	100014c8 	andne	r1, r0, r8, asr #9
     340:	00000680 	andeq	r0, r0, r0, lsl #13
     344:	84240e42 	strthi	r0, [r4], #-3650	; 0xfffff1be
     348:	86088509 	strhi	r8, [r8], -r9, lsl #10
     34c:	88068707 	stmdahi	r6, {r0, r1, r2, r8, r9, sl, pc}
     350:	8a048905 	bhi	12276c <__RAM_SIZE+0x2276c>
     354:	8e028b03 	vmlahi.f64	d8, d2, d3
     358:	600e4101 	andvs	r4, lr, r1, lsl #2
     35c:	0e033803 	cdpeq	8, 0, cr3, cr3, cr3, {0}
     360:	00000024 	andeq	r0, r0, r4, lsr #32
     364:	00000014 	andeq	r0, r0, r4, lsl r0
     368:	000001a8 	andeq	r0, r0, r8, lsr #3
     36c:	10001b48 	andne	r1, r0, r8, asr #22
     370:	0000000c 	andeq	r0, r0, ip
     374:	83080e43 	movwhi	r0, #36419	; 0x8e43
     378:	00018e02 	andeq	r8, r1, r2, lsl #28
     37c:	00000030 	andeq	r0, r0, r0, lsr r0
     380:	000001a8 	andeq	r0, r0, r8, lsr #3
     384:	10001b54 	andne	r1, r0, r4, asr fp
     388:	0000002c 	andeq	r0, r0, ip, lsr #32
     38c:	80100e41 	andshi	r0, r0, r1, asr #28
     390:	82038104 	andhi	r8, r3, #4, 2
     394:	41018302 	tstmi	r1, r2, lsl #6
     398:	058e140e 	streq	r1, [lr, #1038]	; 0x40e
     39c:	4c280e41 	stcmi	14, cr0, [r8], #-260	; 0xfffffefc
     3a0:	ce42140e 	cdpgt	4, 4, cr1, cr2, cr14, {0}
     3a4:	c341100e 	movtgt	r1, #4110	; 0x100e
     3a8:	0ec0c1c2 	acseqdm	f4, f2
     3ac:	00000000 	andeq	r0, r0, r0
     3b0:	0000002c 	andeq	r0, r0, ip, lsr #32
     3b4:	000001a8 	andeq	r0, r0, r8, lsr #3
     3b8:	00000000 	andeq	r0, r0, r0
     3bc:	0000002c 	andeq	r0, r0, ip, lsr #32
     3c0:	810c0e41 	tsthi	ip, r1, asr #28
     3c4:	83028203 	movwhi	r8, #8707	; 0x2203
     3c8:	100e4101 	andne	r4, lr, r1, lsl #2
     3cc:	0e41048e 	cdpeq	4, 4, cr0, cr1, cr14, {4}
     3d0:	100e4c20 	andne	r4, lr, r0, lsr #24
     3d4:	0c0ece42 	stceq	14, cr12, [lr], {66}	; 0x42
     3d8:	c1c2c341 	bicgt	ip, r2, r1, asr #6
     3dc:	0000000e 	andeq	r0, r0, lr
     3e0:	0000002c 	andeq	r0, r0, ip, lsr #32
     3e4:	000001a8 	andeq	r0, r0, r8, lsr #3
     3e8:	00000000 	andeq	r0, r0, r0
     3ec:	00000028 	andeq	r0, r0, r8, lsr #32
     3f0:	82080e41 	andhi	r0, r8, #1040	; 0x410
     3f4:	41018302 	tstmi	r1, r2, lsl #6
     3f8:	0484100e 	streq	r1, [r4], #14
     3fc:	0e41038e 	cdpeq	3, 4, cr0, cr1, cr14, {4}
     400:	100e4b20 	andne	r4, lr, r0, lsr #22
     404:	0ec4ce42 	cdpeq	14, 12, cr12, cr4, cr2, {2}
     408:	c2c34108 	sbcgt	r4, r3, #8, 2
     40c:	0000000e 	andeq	r0, r0, lr
     410:	00000018 	andeq	r0, r0, r8, lsl r0
     414:	000001a8 	andeq	r0, r0, r8, lsr #3
     418:	00000000 	andeq	r0, r0, r0
     41c:	00000020 	andeq	r0, r0, r0, lsr #32
     420:	8e040e41 	cdphi	14, 0, cr0, cr4, cr1, {2}
     424:	180e4101 	stmdane	lr, {r0, r8, lr}
     428:	00040e49 	andeq	r0, r4, r9, asr #28
     42c:	00000018 	andeq	r0, r0, r8, lsl r0
     430:	000001a8 	andeq	r0, r0, r8, lsr #3
     434:	00000000 	andeq	r0, r0, r0
     438:	0000001c 	andeq	r0, r0, ip, lsl r0
     43c:	8e040e41 	cdphi	14, 0, cr0, cr4, cr1, {2}
     440:	100e4101 	andne	r4, lr, r1, lsl #2
     444:	00040e48 	andeq	r0, r4, r8, asr #28
     448:	00000028 	andeq	r0, r0, r8, lsr #32
     44c:	000001a8 	andeq	r0, r0, r8, lsr #3
     450:	00000000 	andeq	r0, r0, r0
     454:	00000030 	andeq	r0, r0, r0, lsr r0
     458:	82080e41 	andhi	r0, r8, #1040	; 0x410
     45c:	41018302 	tstmi	r1, r2, lsl #6
     460:	038e0c0e 	orreq	r0, lr, #3584	; 0xe00
     464:	4e280e41 	cdpmi	14, 2, cr0, cr8, cr1, {2}
     468:	ce420c0e 	cdpgt	12, 4, cr0, cr2, cr14, {0}
     46c:	c341080e 	movtgt	r0, #6158	; 0x180e
     470:	00000ec2 	andeq	r0, r0, r2, asr #29
     474:	0000000c 	andeq	r0, r0, ip
     478:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     47c:	7c020001 	stcvc	0, cr0, [r2], {1}
     480:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     484:	0000000c 	andeq	r0, r0, ip
     488:	00000474 	andeq	r0, r0, r4, ror r4
     48c:	10001b80 	andne	r1, r0, r0, lsl #23
     490:	00000014 	andeq	r0, r0, r4, lsl r0
     494:	0000000c 	andeq	r0, r0, ip
     498:	00000474 	andeq	r0, r0, r4, ror r4
     49c:	00000000 	andeq	r0, r0, r0
     4a0:	00000014 	andeq	r0, r0, r4, lsl r0
     4a4:	00000018 	andeq	r0, r0, r8, lsl r0
     4a8:	00000474 	andeq	r0, r0, r4, ror r4
     4ac:	10001b94 	mulne	r0, r4, fp
     4b0:	0000001e 	andeq	r0, r0, lr, lsl r0
     4b4:	83100e41 	tsthi	r0, #1040	; 0x410
     4b8:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     4bc:	00018e02 	andeq	r8, r1, r2, lsl #28
     4c0:	0000000c 	andeq	r0, r0, ip
     4c4:	00000474 	andeq	r0, r0, r4, ror r4
     4c8:	10001bb4 			; <UNDEFINED> instruction: 0x10001bb4
     4cc:	00000024 	andeq	r0, r0, r4, lsr #32
     4d0:	00000014 	andeq	r0, r0, r4, lsl r0
     4d4:	00000474 	andeq	r0, r0, r4, ror r4
     4d8:	00000000 	andeq	r0, r0, r0
     4dc:	00000008 	andeq	r0, r0, r8
     4e0:	83080e41 	movwhi	r0, #36417	; 0x8e41
     4e4:	00018e02 	andeq	r8, r1, r2, lsl #28
     4e8:	00000018 	andeq	r0, r0, r8, lsl r0
     4ec:	00000474 	andeq	r0, r0, r4, ror r4
     4f0:	00000000 	andeq	r0, r0, r0
     4f4:	00000020 	andeq	r0, r0, r0, lsr #32
     4f8:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
     4fc:	86038504 	strhi	r8, [r3], -r4, lsl #10
     500:	00018e02 	andeq	r8, r1, r2, lsl #28
     504:	0000000c 	andeq	r0, r0, ip
     508:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     50c:	7c020001 	stcvc	0, cr0, [r2], {1}
     510:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     514:	00000014 	andeq	r0, r0, r4, lsl r0
     518:	00000504 	andeq	r0, r0, r4, lsl #10
     51c:	10001bd8 	ldrdne	r1, [r0], -r8
     520:	0000002c 	andeq	r0, r0, ip, lsr #32
     524:	54080e41 	strpl	r0, [r8], #-3649	; 0xfffff1bf
     528:	0000000e 	andeq	r0, r0, lr
     52c:	0000000c 	andeq	r0, r0, ip
     530:	00000504 	andeq	r0, r0, r4, lsl #10
     534:	10001c04 	andne	r1, r0, r4, lsl #24
     538:	00000036 	andeq	r0, r0, r6, lsr r0
     53c:	00000014 	andeq	r0, r0, r4, lsl r0
     540:	00000504 	andeq	r0, r0, r4, lsl #10
     544:	10001c3c 	andne	r1, r0, ip, lsr ip
     548:	00000018 	andeq	r0, r0, r8, lsl r0
     54c:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     550:	00018e02 	andeq	r8, r1, r2, lsl #28
     554:	00000014 	andeq	r0, r0, r4, lsl r0
     558:	00000504 	andeq	r0, r0, r4, lsl #10
     55c:	10001c54 	andne	r1, r0, r4, asr ip
     560:	00000050 	andeq	r0, r0, r0, asr r0
     564:	83080e41 	movwhi	r0, #36417	; 0x8e41
     568:	00018e02 	andeq	r8, r1, r2, lsl #28
     56c:	00000020 	andeq	r0, r0, r0, lsr #32
     570:	00000504 	andeq	r0, r0, r4, lsl #10
     574:	10001ca4 	andne	r1, r0, r4, lsr #25
     578:	0000007c 	andeq	r0, r0, ip, ror r0
     57c:	83200e42 			; <UNDEFINED> instruction: 0x83200e42
     580:	85078408 	strhi	r8, [r7, #-1032]	; 0xfffffbf8
     584:	87058606 	strhi	r8, [r5, -r6, lsl #12]
     588:	89038804 	stmdbhi	r3, {r2, fp, pc}
     58c:	00018e02 	andeq	r8, r1, r2, lsl #28
     590:	0000001c 	andeq	r0, r0, ip, lsl r0
     594:	00000504 	andeq	r0, r0, r4, lsl #10
     598:	10001d20 	andne	r1, r0, r0, lsr #26
     59c:	00000184 	andeq	r0, r0, r4, lsl #3
     5a0:	83180e41 	tsthi	r8, #1040	; 0x410
     5a4:	85058406 	strhi	r8, [r5, #-1030]	; 0xfffffbfa
     5a8:	87038604 	strhi	r8, [r3, -r4, lsl #12]
     5ac:	00018e02 	andeq	r8, r1, r2, lsl #28
     5b0:	0000000c 	andeq	r0, r0, ip
     5b4:	00000504 	andeq	r0, r0, r4, lsl #10
     5b8:	10001ea4 	andne	r1, r0, r4, lsr #29
     5bc:	00000006 	andeq	r0, r0, r6
     5c0:	0000000c 	andeq	r0, r0, ip
     5c4:	00000504 	andeq	r0, r0, r4, lsl #10
     5c8:	10001eac 	andne	r1, r0, ip, lsr #29
     5cc:	00000008 	andeq	r0, r0, r8
     5d0:	0000000c 	andeq	r0, r0, ip
     5d4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     5d8:	7c020001 	stcvc	0, cr0, [r2], {1}
     5dc:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     5e0:	00000014 	andeq	r0, r0, r4, lsl r0
     5e4:	000005d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
     5e8:	10001eb4 			; <UNDEFINED> instruction: 0x10001eb4
     5ec:	000000fc 	strdeq	r0, [r0], -ip
     5f0:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     5f4:	00018e02 	andeq	r8, r1, r2, lsl #28
     5f8:	0000000c 	andeq	r0, r0, ip
     5fc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     600:	7c020001 	stcvc	0, cr0, [r2], {1}
     604:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     608:	0000000c 	andeq	r0, r0, ip
     60c:	000005f8 	strdeq	r0, [r0], -r8
     610:	10001fb0 			; <UNDEFINED> instruction: 0x10001fb0
     614:	0000001a 	andeq	r0, r0, sl, lsl r0
     618:	0000000c 	andeq	r0, r0, ip
     61c:	000005f8 	strdeq	r0, [r0], -r8
     620:	10001fca 	andne	r1, r0, sl, asr #31
     624:	00000006 	andeq	r0, r0, r6
     628:	0000000c 	andeq	r0, r0, ip
     62c:	000005f8 	strdeq	r0, [r0], -r8
     630:	00000000 	andeq	r0, r0, r0
     634:	00000016 	andeq	r0, r0, r6, lsl r0
     638:	0000001c 	andeq	r0, r0, ip, lsl r0
     63c:	000005f8 	strdeq	r0, [r0], -r8
     640:	10001fd0 	ldrdne	r1, [r0], -r0
     644:	00000032 	andeq	r0, r0, r2, lsr r0
     648:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     64c:	55018502 	strpl	r8, [r1, #-1282]	; 0xfffffafe
     650:	0ec4c50a 	cdpeq	5, 12, cr12, cr4, cr10, {0}
     654:	000b4100 	andeq	r4, fp, r0, lsl #2
     658:	0000000c 	andeq	r0, r0, ip
     65c:	000005f8 	strdeq	r0, [r0], -r8
     660:	10002002 	andne	r2, r0, r2
     664:	00000024 	andeq	r0, r0, r4, lsr #32
     668:	0000000c 	andeq	r0, r0, ip
     66c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     670:	7c020001 	stcvc	0, cr0, [r2], {1}
     674:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     678:	0000000c 	andeq	r0, r0, ip
     67c:	00000668 	andeq	r0, r0, r8, ror #12
     680:	00000000 	andeq	r0, r0, r0
     684:	00000010 	andeq	r0, r0, r0, lsl r0
     688:	00000014 	andeq	r0, r0, r4, lsl r0
     68c:	00000668 	andeq	r0, r0, r8, ror #12
     690:	00000000 	andeq	r0, r0, r0
     694:	0000001e 	andeq	r0, r0, lr, lsl r0
     698:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     69c:	00018e02 	andeq	r8, r1, r2, lsl #28
     6a0:	00000014 	andeq	r0, r0, r4, lsl r0
     6a4:	00000668 	andeq	r0, r0, r8, ror #12
     6a8:	10002026 	andne	r2, r0, r6, lsr #32
     6ac:	0000001a 	andeq	r0, r0, sl, lsl r0
     6b0:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     6b4:	00018e02 	andeq	r8, r1, r2, lsl #28
     6b8:	00000018 	andeq	r0, r0, r8, lsl r0
     6bc:	00000668 	andeq	r0, r0, r8, ror #12
     6c0:	10002040 	andne	r2, r0, r0, asr #32
     6c4:	00000076 	andeq	r0, r0, r6, ror r0
     6c8:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
     6cc:	86038504 	strhi	r8, [r3], -r4, lsl #10
     6d0:	00018e02 	andeq	r8, r1, r2, lsl #28
     6d4:	00000018 	andeq	r0, r0, r8, lsl r0
     6d8:	00000668 	andeq	r0, r0, r8, ror #12
     6dc:	100020b6 	strhne	r2, [r0], -r6
     6e0:	00000024 	andeq	r0, r0, r4, lsr #32
     6e4:	84080e44 	strhi	r0, [r8], #-3652	; 0xfffff1bc
     6e8:	4d018e02 	stcmi	14, cr8, [r1, #-8]
     6ec:	cec4000e 	cdpgt	0, 12, cr0, cr4, cr14, {0}
     6f0:	00000020 	andeq	r0, r0, r0, lsr #32
     6f4:	00000668 	andeq	r0, r0, r8, ror #12
     6f8:	100020da 	ldrdne	r2, [r0], -sl
     6fc:	00000058 	andeq	r0, r0, r8, asr r0
     700:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
     704:	86038504 	strhi	r8, [r3], -r4, lsl #10
     708:	41018e02 	tstmi	r1, r2, lsl #28
     70c:	0a49180e 	beq	124674c <__RAM_SIZE+0x114674c>
     710:	0b41100e 	bleq	1044750 <__RAM_SIZE+0xf44750>
     714:	00000018 	andeq	r0, r0, r8, lsl r0
     718:	00000668 	andeq	r0, r0, r8, ror #12
     71c:	10002132 	andne	r2, r0, r2, lsr r1
     720:	00000082 	andeq	r0, r0, r2, lsl #1
     724:	83100e41 	tsthi	r0, #1040	; 0x410
     728:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     72c:	00018e02 	andeq	r8, r1, r2, lsl #28
     730:	0000002c 	andeq	r0, r0, ip, lsr #32
     734:	00000668 	andeq	r0, r0, r8, ror #12
     738:	100021b4 			; <UNDEFINED> instruction: 0x100021b4
     73c:	00000086 	andeq	r0, r0, r6, lsl #1
     740:	83100e43 	tsthi	r0, #1072	; 0x430
     744:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     748:	7c018e02 	stcvc	14, cr8, [r1], {2}
     74c:	c4c3000e 	strbgt	r0, [r3], #14
     750:	0e42cec5 	cdpeq	14, 4, cr12, cr2, cr5, {6}
     754:	84048310 	strhi	r8, [r4], #-784	; 0xfffffcf0
     758:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
     75c:	00000001 	andeq	r0, r0, r1
     760:	00000014 	andeq	r0, r0, r4, lsl r0
     764:	00000668 	andeq	r0, r0, r8, ror #12
     768:	1000223a 	andne	r2, r0, sl, lsr r2
     76c:	00000020 	andeq	r0, r0, r0, lsr #32
     770:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     774:	00018e02 	andeq	r8, r1, r2, lsl #28
     778:	00000028 	andeq	r0, r0, r8, lsr #32
     77c:	00000668 	andeq	r0, r0, r8, ror #12
     780:	1000225a 	andne	r2, r0, sl, asr r2
     784:	0000003e 	andeq	r0, r0, lr, lsr r0
     788:	84080e42 	strhi	r0, [r8], #-3650	; 0xfffff1be
     78c:	41018e02 	tstmi	r1, r2, lsl #28
     790:	0a51100e 	beq	14447d0 <__RAM_SIZE+0x13447d0>
     794:	0b41080e 	bleq	10427d4 <__RAM_SIZE+0xf427d4>
     798:	c4000e44 	strgt	r0, [r0], #-3652	; 0xfffff1bc
     79c:	100e42ce 	andne	r4, lr, lr, asr #5
     7a0:	018e0284 	orreq	r0, lr, r4, lsl #5
     7a4:	0000000c 	andeq	r0, r0, ip
     7a8:	00000668 	andeq	r0, r0, r8, ror #12
     7ac:	00000000 	andeq	r0, r0, r0
     7b0:	00000018 	andeq	r0, r0, r8, lsl r0
     7b4:	00000024 	andeq	r0, r0, r4, lsr #32
     7b8:	00000668 	andeq	r0, r0, r8, ror #12
     7bc:	00000000 	andeq	r0, r0, r0
     7c0:	00000056 	andeq	r0, r0, r6, asr r0
     7c4:	84140e41 	ldrhi	r0, [r4], #-3649	; 0xfffff1bf
     7c8:	86048505 	strhi	r8, [r4], -r5, lsl #10
     7cc:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
     7d0:	200e4101 	andcs	r4, lr, r1, lsl #2
     7d4:	140e0a64 	strne	r0, [lr], #-2660	; 0xfffff59c
     7d8:	00000b41 	andeq	r0, r0, r1, asr #22
     7dc:	00000028 	andeq	r0, r0, r8, lsr #32
     7e0:	00000668 	andeq	r0, r0, r8, ror #12
     7e4:	00000000 	andeq	r0, r0, r0
     7e8:	0000002a 	andeq	r0, r0, sl, lsr #32
     7ec:	84080e42 	strhi	r0, [r8], #-3650	; 0xfffff1be
     7f0:	41018e02 	tstmi	r1, r2, lsl #28
     7f4:	0e4d100e 	cdpeq	0, 4, cr1, cr13, cr14, {0}
     7f8:	42cec400 	sbcmi	ip, lr, #0, 8
     7fc:	0284100e 	addeq	r1, r4, #14
     800:	0e42018e 	dvfeqd	f0, f2, #0.5
     804:	00000008 	andeq	r0, r0, r8
     808:	00000020 	andeq	r0, r0, r0, lsr #32
     80c:	00000668 	andeq	r0, r0, r8, ror #12
     810:	00000000 	andeq	r0, r0, r0
     814:	00000020 	andeq	r0, r0, r0, lsr #32
     818:	84080e42 	strhi	r0, [r8], #-3650	; 0xfffff1be
     81c:	4a018e02 	bmi	6402c <__HEAP_SIZE+0x6302c>
     820:	cec4000e 	cdpgt	0, 12, cr0, cr4, cr14, {0}
     824:	84080e42 	strhi	r0, [r8], #-3650	; 0xfffff1be
     828:	00018e02 	andeq	r8, r1, r2, lsl #28
     82c:	00000024 	andeq	r0, r0, r4, lsr #32
     830:	00000668 	andeq	r0, r0, r8, ror #12
     834:	00000000 	andeq	r0, r0, r0
     838:	0000010c 	andeq	r0, r0, ip, lsl #2
     83c:	84140e41 	ldrhi	r0, [r4], #-3649	; 0xfffff1bf
     840:	86048505 	strhi	r8, [r4], -r5, lsl #10
     844:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
     848:	280e4101 	stmdacs	lr, {r0, r8, lr}
     84c:	140e0a59 	strne	r0, [lr], #-2649	; 0xfffff5a7
     850:	00000b41 	andeq	r0, r0, r1, asr #22
     854:	00000018 	andeq	r0, r0, r8, lsl r0
     858:	00000668 	andeq	r0, r0, r8, ror #12
     85c:	00000000 	andeq	r0, r0, r0
     860:	00000018 	andeq	r0, r0, r8, lsl r0
     864:	83080e42 	movwhi	r0, #36418	; 0x8e42
     868:	49018e02 	stmdbmi	r1, {r1, r9, sl, fp, pc}
     86c:	cec3000e 	cdpgt	0, 12, cr0, cr3, cr14, {0}
     870:	00000014 	andeq	r0, r0, r4, lsl r0
     874:	00000668 	andeq	r0, r0, r8, ror #12
     878:	00000000 	andeq	r0, r0, r0
     87c:	00000016 	andeq	r0, r0, r6, lsl r0
     880:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     884:	00018e02 	andeq	r8, r1, r2, lsl #28
     888:	0000001c 	andeq	r0, r0, ip, lsl r0
     88c:	00000668 	andeq	r0, r0, r8, ror #12
     890:	00000000 	andeq	r0, r0, r0
     894:	0000001e 	andeq	r0, r0, lr, lsl r0
     898:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     89c:	41018e02 	tstmi	r1, r2, lsl #28
     8a0:	0e4c100e 	cdpeq	0, 4, cr1, cr12, cr14, {0}
     8a4:	00000008 	andeq	r0, r0, r8
     8a8:	00000018 	andeq	r0, r0, r8, lsl r0
     8ac:	00000668 	andeq	r0, r0, r8, ror #12
     8b0:	00000000 	andeq	r0, r0, r0
     8b4:	0000002c 	andeq	r0, r0, ip, lsr #32
     8b8:	83100e41 	tsthi	r0, #1040	; 0x410
     8bc:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     8c0:	00018e02 	andeq	r8, r1, r2, lsl #28
     8c4:	00000020 	andeq	r0, r0, r0, lsr #32
     8c8:	00000668 	andeq	r0, r0, r8, ror #12
     8cc:	00000000 	andeq	r0, r0, r0
     8d0:	000000bc 	strheq	r0, [r0], -ip
     8d4:	84200e42 	strthi	r0, [r0], #-3650	; 0xfffff1be
     8d8:	86078508 	strhi	r8, [r7], -r8, lsl #10
     8dc:	88058706 	stmdahi	r5, {r1, r2, r8, r9, sl, pc}
     8e0:	8a038904 	bhi	e2cf8 <__HEAP_SIZE+0xe1cf8>
     8e4:	00018e02 	andeq	r8, r1, r2, lsl #28
     8e8:	0000001c 	andeq	r0, r0, ip, lsl r0
     8ec:	00000668 	andeq	r0, r0, r8, ror #12
     8f0:	00000000 	andeq	r0, r0, r0
     8f4:	00000086 	andeq	r0, r0, r6, lsl #1
     8f8:	83180e41 	tsthi	r8, #1040	; 0x410
     8fc:	85058406 	strhi	r8, [r5, #-1030]	; 0xfffffbfa
     900:	87038604 	strhi	r8, [r3, -r4, lsl #12]
     904:	00018e02 	andeq	r8, r1, r2, lsl #28
     908:	00000024 	andeq	r0, r0, r4, lsr #32
     90c:	00000668 	andeq	r0, r0, r8, ror #12
     910:	10002298 	mulne	r0, r8, r2
     914:	000000f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
     918:	84140e41 	ldrhi	r0, [r4], #-3649	; 0xfffff1bf
     91c:	86048505 	strhi	r8, [r4], -r5, lsl #10
     920:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
     924:	280e4101 	stmdacs	lr, {r0, r8, lr}
     928:	140e0a51 	strne	r0, [lr], #-2641	; 0xfffff5af
     92c:	00000b41 	andeq	r0, r0, r1, asr #22
     930:	00000020 	andeq	r0, r0, r0, lsr #32
     934:	00000668 	andeq	r0, r0, r8, ror #12
     938:	00000000 	andeq	r0, r0, r0
     93c:	00000126 	andeq	r0, r0, r6, lsr #2
     940:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
     944:	86038504 	strhi	r8, [r3], -r4, lsl #10
     948:	41018e02 	tstmi	r1, r2, lsl #28
     94c:	0a4f200e 	beq	13c898c <__RAM_SIZE+0x12c898c>
     950:	0b41100e 	bleq	1044990 <__RAM_SIZE+0xf44990>
     954:	00000018 	andeq	r0, r0, r8, lsl r0
     958:	00000668 	andeq	r0, r0, r8, ror #12
     95c:	00000000 	andeq	r0, r0, r0
     960:	0000002c 	andeq	r0, r0, ip, lsr #32
     964:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
     968:	86038504 	strhi	r8, [r3], -r4, lsl #10
     96c:	00018e02 	andeq	r8, r1, r2, lsl #28
     970:	00000020 	andeq	r0, r0, r0, lsr #32
     974:	00000668 	andeq	r0, r0, r8, ror #12
     978:	00000000 	andeq	r0, r0, r0
     97c:	000000f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
     980:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
     984:	86038504 	strhi	r8, [r3], -r4, lsl #10
     988:	41018e02 	tstmi	r1, r2, lsl #28
     98c:	0a51200e 	beq	14489cc <__RAM_SIZE+0x13489cc>
     990:	0b41100e 	bleq	10449d0 <__RAM_SIZE+0xf449d0>
     994:	00000020 	andeq	r0, r0, r0, lsr #32
     998:	00000668 	andeq	r0, r0, r8, ror #12
     99c:	00000000 	andeq	r0, r0, r0
     9a0:	00000080 	andeq	r0, r0, r0, lsl #1
     9a4:	83200e42 			; <UNDEFINED> instruction: 0x83200e42
     9a8:	85078408 	strhi	r8, [r7, #-1032]	; 0xfffffbf8
     9ac:	87058606 	strhi	r8, [r5, -r6, lsl #12]
     9b0:	89038804 	stmdbhi	r3, {r2, fp, pc}
     9b4:	00018e02 	andeq	r8, r1, r2, lsl #28
     9b8:	0000001c 	andeq	r0, r0, ip, lsl r0
     9bc:	00000668 	andeq	r0, r0, r8, ror #12
     9c0:	00000000 	andeq	r0, r0, r0
     9c4:	0000002c 	andeq	r0, r0, ip, lsr #32
     9c8:	83180e41 	tsthi	r8, #1040	; 0x410
     9cc:	85058406 	strhi	r8, [r5, #-1030]	; 0xfffffbfa
     9d0:	87038604 	strhi	r8, [r3, -r4, lsl #12]
     9d4:	00018e02 	andeq	r8, r1, r2, lsl #28
     9d8:	00000014 	andeq	r0, r0, r4, lsl r0
     9dc:	00000668 	andeq	r0, r0, r8, ror #12
     9e0:	00000000 	andeq	r0, r0, r0
     9e4:	00000012 	andeq	r0, r0, r2, lsl r0
     9e8:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     9ec:	00018e02 	andeq	r8, r1, r2, lsl #28
     9f0:	00000014 	andeq	r0, r0, r4, lsl r0
     9f4:	00000668 	andeq	r0, r0, r8, ror #12
     9f8:	00000000 	andeq	r0, r0, r0
     9fc:	00000016 	andeq	r0, r0, r6, lsl r0
     a00:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     a04:	00018e02 	andeq	r8, r1, r2, lsl #28
     a08:	0000000c 	andeq	r0, r0, ip
     a0c:	00000668 	andeq	r0, r0, r8, ror #12
     a10:	00000000 	andeq	r0, r0, r0
     a14:	00000004 	andeq	r0, r0, r4
     a18:	00000014 	andeq	r0, r0, r4, lsl r0
     a1c:	00000668 	andeq	r0, r0, r8, ror #12
     a20:	00000000 	andeq	r0, r0, r0
     a24:	00000010 	andeq	r0, r0, r0, lsl r0
     a28:	83080e41 	movwhi	r0, #36417	; 0x8e41
     a2c:	00018e02 	andeq	r8, r1, r2, lsl #28
     a30:	0000000c 	andeq	r0, r0, ip
     a34:	00000668 	andeq	r0, r0, r8, ror #12
     a38:	00000000 	andeq	r0, r0, r0
     a3c:	00000004 	andeq	r0, r0, r4
     a40:	0000000c 	andeq	r0, r0, ip
     a44:	00000668 	andeq	r0, r0, r8, ror #12
     a48:	00000000 	andeq	r0, r0, r0
     a4c:	00000004 	andeq	r0, r0, r4
     a50:	0000000c 	andeq	r0, r0, ip
     a54:	00000668 	andeq	r0, r0, r8, ror #12
     a58:	00000000 	andeq	r0, r0, r0
     a5c:	0000000c 	andeq	r0, r0, ip
     a60:	0000000c 	andeq	r0, r0, ip
     a64:	00000668 	andeq	r0, r0, r8, ror #12
     a68:	00000000 	andeq	r0, r0, r0
     a6c:	00000010 	andeq	r0, r0, r0, lsl r0
     a70:	00000018 	andeq	r0, r0, r8, lsl r0
     a74:	00000668 	andeq	r0, r0, r8, ror #12
     a78:	10002388 	andne	r2, r0, r8, lsl #7
     a7c:	00000052 	andeq	r0, r0, r2, asr r0
     a80:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
     a84:	86038504 	strhi	r8, [r3], -r4, lsl #10
     a88:	00018e02 	andeq	r8, r1, r2, lsl #28
     a8c:	00000014 	andeq	r0, r0, r4, lsl r0
     a90:	00000668 	andeq	r0, r0, r8, ror #12
     a94:	00000000 	andeq	r0, r0, r0
     a98:	0000000c 	andeq	r0, r0, ip
     a9c:	83080e41 	movwhi	r0, #36417	; 0x8e41
     aa0:	00018e02 	andeq	r8, r1, r2, lsl #28
     aa4:	00000018 	andeq	r0, r0, r8, lsl r0
     aa8:	00000668 	andeq	r0, r0, r8, ror #12
     aac:	00000000 	andeq	r0, r0, r0
     ab0:	00000026 	andeq	r0, r0, r6, lsr #32
     ab4:	83100e41 	tsthi	r0, #1040	; 0x410
     ab8:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     abc:	00018e02 	andeq	r8, r1, r2, lsl #28
     ac0:	00000014 	andeq	r0, r0, r4, lsl r0
     ac4:	00000668 	andeq	r0, r0, r8, ror #12
     ac8:	00000000 	andeq	r0, r0, r0
     acc:	00000026 	andeq	r0, r0, r6, lsr #32
     ad0:	84080e46 	strhi	r0, [r8], #-3654	; 0xfffff1ba
     ad4:	00018e02 	andeq	r8, r1, r2, lsl #28
     ad8:	00000018 	andeq	r0, r0, r8, lsl r0
     adc:	00000668 	andeq	r0, r0, r8, ror #12
     ae0:	00000000 	andeq	r0, r0, r0
     ae4:	00000018 	andeq	r0, r0, r8, lsl r0
     ae8:	8e040e41 	cdphi	14, 0, cr0, cr4, cr1, {2}
     aec:	100e4101 	andne	r4, lr, r1, lsl #2
     af0:	00040e48 	andeq	r0, r4, r8, asr #28
     af4:	00000018 	andeq	r0, r0, r8, lsl r0
     af8:	00000668 	andeq	r0, r0, r8, ror #12
     afc:	00000000 	andeq	r0, r0, r0
     b00:	00000016 	andeq	r0, r0, r6, lsl r0
     b04:	8e040e41 	cdphi	14, 0, cr0, cr4, cr1, {2}
     b08:	100e4101 	andne	r4, lr, r1, lsl #2
     b0c:	00040e47 	andeq	r0, r4, r7, asr #28
     b10:	0000000c 	andeq	r0, r0, ip
     b14:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     b18:	7c020001 	stcvc	0, cr0, [r2], {1}
     b1c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     b20:	0000000c 	andeq	r0, r0, ip
     b24:	00000b10 	andeq	r0, r0, r0, lsl fp
     b28:	00000000 	andeq	r0, r0, r0
     b2c:	00000044 	andeq	r0, r0, r4, asr #32
     b30:	0000000c 	andeq	r0, r0, ip
     b34:	00000b10 	andeq	r0, r0, r0, lsl fp
     b38:	100023dc 	ldrdne	r2, [r0], -ip
     b3c:	00000040 	andeq	r0, r0, r0, asr #32
     b40:	00000018 	andeq	r0, r0, r8, lsl r0
     b44:	00000b10 	andeq	r0, r0, r0, lsl fp
     b48:	00000000 	andeq	r0, r0, r0
     b4c:	0000003e 	andeq	r0, r0, lr, lsr r0
     b50:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
     b54:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
     b58:	00000001 	andeq	r0, r0, r1
     b5c:	0000000c 	andeq	r0, r0, ip
     b60:	00000b10 	andeq	r0, r0, r0, lsl fp
     b64:	00000000 	andeq	r0, r0, r0
     b68:	00000012 	andeq	r0, r0, r2, lsl r0
     b6c:	0000000c 	andeq	r0, r0, ip
     b70:	00000b10 	andeq	r0, r0, r0, lsl fp
     b74:	1000241c 	andne	r2, r0, ip, lsl r4
     b78:	00000028 	andeq	r0, r0, r8, lsr #32
     b7c:	00000020 	andeq	r0, r0, r0, lsr #32
     b80:	00000b10 	andeq	r0, r0, r0, lsl fp
     b84:	10002444 	andne	r2, r0, r4, asr #8
     b88:	00000096 	muleq	r0, r6, r0
     b8c:	84200e42 	strthi	r0, [r0], #-3650	; 0xfffff1be
     b90:	86078508 	strhi	r8, [r7], -r8, lsl #10
     b94:	88058706 	stmdahi	r5, {r1, r2, r8, r9, sl, pc}
     b98:	8a038904 	bhi	e2fb0 <__HEAP_SIZE+0xe1fb0>
     b9c:	00018e02 	andeq	r8, r1, r2, lsl #28
     ba0:	00000028 	andeq	r0, r0, r8, lsr #32
     ba4:	00000b10 	andeq	r0, r0, r0, lsl fp
     ba8:	100024da 	ldrdne	r2, [r0], -sl
     bac:	00000052 	andeq	r0, r0, r2, asr r0
     bb0:	841c0e42 	ldrhi	r0, [ip], #-3650	; 0xfffff1be
     bb4:	86068507 	strhi	r8, [r6], -r7, lsl #10
     bb8:	88048705 	stmdahi	r4, {r0, r2, r8, r9, sl, pc}
     bbc:	8e028903 	vmlahi.f16	s16, s4, s6	; <UNPREDICTABLE>
     bc0:	300e4101 	andcc	r4, lr, r1, lsl #2
     bc4:	1c0e0a60 			; <UNDEFINED> instruction: 0x1c0e0a60
     bc8:	00000b42 	andeq	r0, r0, r2, asr #22
     bcc:	00000018 	andeq	r0, r0, r8, lsl r0
     bd0:	00000b10 	andeq	r0, r0, r0, lsl fp
     bd4:	1000252c 	andne	r2, r0, ip, lsr #10
     bd8:	00000068 	andeq	r0, r0, r8, rrx
     bdc:	83100e41 	tsthi	r0, #1040	; 0x410
     be0:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     be4:	00018e02 	andeq	r8, r1, r2, lsl #28
     be8:	00000014 	andeq	r0, r0, r4, lsl r0
     bec:	00000b10 	andeq	r0, r0, r0, lsl fp
     bf0:	10002594 	mulne	r0, r4, r5
     bf4:	000000bc 	strheq	r0, [r0], -ip
     bf8:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     bfc:	00018e02 	andeq	r8, r1, r2, lsl #28
     c00:	00000028 	andeq	r0, r0, r8, lsr #32
     c04:	00000b10 	andeq	r0, r0, r0, lsl fp
     c08:	10002650 	andne	r2, r0, r0, asr r6
     c0c:	00000062 	andeq	r0, r0, r2, rrx
     c10:	841c0e42 	ldrhi	r0, [ip], #-3650	; 0xfffff1be
     c14:	86068507 	strhi	r8, [r6], -r7, lsl #10
     c18:	88048705 	stmdahi	r4, {r0, r2, r8, r9, sl, pc}
     c1c:	8e028903 	vmlahi.f16	s16, s4, s6	; <UNPREDICTABLE>
     c20:	300e4101 	andcc	r4, lr, r1, lsl #2
     c24:	1c0e0a66 			; <UNDEFINED> instruction: 0x1c0e0a66
     c28:	00000b42 	andeq	r0, r0, r2, asr #22
     c2c:	00000014 	andeq	r0, r0, r4, lsl r0
     c30:	00000b10 	andeq	r0, r0, r0, lsl fp
     c34:	100026b2 			; <UNDEFINED> instruction: 0x100026b2
     c38:	00000024 	andeq	r0, r0, r4, lsr #32
     c3c:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     c40:	00018e02 	andeq	r8, r1, r2, lsl #28
     c44:	00000018 	andeq	r0, r0, r8, lsl r0
     c48:	00000b10 	andeq	r0, r0, r0, lsl fp
     c4c:	100026d8 	ldrdne	r2, [r0], -r8
     c50:	0000004c 	andeq	r0, r0, ip, asr #32
     c54:	84080e44 	strhi	r0, [r8], #-3652	; 0xfffff1bc
     c58:	5a018e02 	bpl	64468 <__HEAP_SIZE+0x63468>
     c5c:	cec4000e 	cdpgt	0, 12, cr0, cr4, cr14, {0}
     c60:	0000001c 	andeq	r0, r0, ip, lsl r0
     c64:	00000b10 	andeq	r0, r0, r0, lsl fp
     c68:	10002724 	andne	r2, r0, r4, lsr #14
     c6c:	000000a8 	andeq	r0, r0, r8, lsr #1
     c70:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
     c74:	86058506 	strhi	r8, [r5], -r6, lsl #10
     c78:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
     c7c:	00018e02 	andeq	r8, r1, r2, lsl #28
     c80:	0000001c 	andeq	r0, r0, ip, lsl r0
     c84:	00000b10 	andeq	r0, r0, r0, lsl fp
     c88:	100027cc 	andne	r2, r0, ip, asr #15
     c8c:	00000028 	andeq	r0, r0, r8, lsr #32
     c90:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     c94:	41018e02 	tstmi	r1, r2, lsl #28
     c98:	0e51200e 	cdpeq	0, 5, cr2, cr1, cr14, {0}
     c9c:	00000008 	andeq	r0, r0, r8
     ca0:	0000001c 	andeq	r0, r0, ip, lsl r0
     ca4:	00000b10 	andeq	r0, r0, r0, lsl fp
     ca8:	100027f4 	strdne	r2, [r0], -r4
     cac:	00000022 	andeq	r0, r0, r2, lsr #32
     cb0:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     cb4:	41018e02 	tstmi	r1, r2, lsl #28
     cb8:	0a4b100e 	beq	12c4cf8 <__RAM_SIZE+0x11c4cf8>
     cbc:	0b41080e 	bleq	1042cfc <__RAM_SIZE+0xf42cfc>
     cc0:	00000018 	andeq	r0, r0, r8, lsl r0
     cc4:	00000b10 	andeq	r0, r0, r0, lsl fp
     cc8:	00000000 	andeq	r0, r0, r0
     ccc:	0000009c 	muleq	r0, ip, r0
     cd0:	83100e41 	tsthi	r0, #1040	; 0x410
     cd4:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     cd8:	00018e02 	andeq	r8, r1, r2, lsl #28
     cdc:	00000034 	andeq	r0, r0, r4, lsr r0
     ce0:	00000b10 	andeq	r0, r0, r0, lsl fp
     ce4:	00000000 	andeq	r0, r0, r0
     ce8:	0000009c 	muleq	r0, ip, r0
     cec:	84180e46 	ldrhi	r0, [r8], #-3654	; 0xfffff1ba
     cf0:	86058506 	strhi	r8, [r5], -r6, lsl #10
     cf4:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
     cf8:	6f018e02 	svcvs	0x00018e02
     cfc:	c5c4000e 	strbgt	r0, [r4, #14]
     d00:	cec8c7c6 	cdpgt	7, 12, cr12, cr8, cr6, {6}
     d04:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
     d08:	86058506 	strhi	r8, [r5], -r6, lsl #10
     d0c:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
     d10:	00018e02 	andeq	r8, r1, r2, lsl #28
     d14:	00000014 	andeq	r0, r0, r4, lsl r0
     d18:	00000b10 	andeq	r0, r0, r0, lsl fp
     d1c:	00000000 	andeq	r0, r0, r0
     d20:	00000020 	andeq	r0, r0, r0, lsr #32
     d24:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     d28:	00018e02 	andeq	r8, r1, r2, lsl #28
     d2c:	00000014 	andeq	r0, r0, r4, lsl r0
     d30:	00000b10 	andeq	r0, r0, r0, lsl fp
     d34:	00000000 	andeq	r0, r0, r0
     d38:	00000020 	andeq	r0, r0, r0, lsr #32
     d3c:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     d40:	00018e02 	andeq	r8, r1, r2, lsl #28
     d44:	00000014 	andeq	r0, r0, r4, lsl r0
     d48:	00000b10 	andeq	r0, r0, r0, lsl fp
     d4c:	00000000 	andeq	r0, r0, r0
     d50:	00000020 	andeq	r0, r0, r0, lsr #32
     d54:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     d58:	00018e02 	andeq	r8, r1, r2, lsl #28
     d5c:	00000014 	andeq	r0, r0, r4, lsl r0
     d60:	00000b10 	andeq	r0, r0, r0, lsl fp
     d64:	00000000 	andeq	r0, r0, r0
     d68:	00000020 	andeq	r0, r0, r0, lsr #32
     d6c:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     d70:	00018e02 	andeq	r8, r1, r2, lsl #28
     d74:	00000018 	andeq	r0, r0, r8, lsl r0
     d78:	00000b10 	andeq	r0, r0, r0, lsl fp
     d7c:	00000000 	andeq	r0, r0, r0
     d80:	000000d8 	ldrdeq	r0, [r0], -r8
     d84:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
     d88:	86038504 	strhi	r8, [r3], -r4, lsl #10
     d8c:	00018e02 	andeq	r8, r1, r2, lsl #28
     d90:	00000018 	andeq	r0, r0, r8, lsl r0
     d94:	00000b10 	andeq	r0, r0, r0, lsl fp
     d98:	00000000 	andeq	r0, r0, r0
     d9c:	00000084 	andeq	r0, r0, r4, lsl #1
     da0:	83100e41 	tsthi	r0, #1040	; 0x410
     da4:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     da8:	00018e02 	andeq	r8, r1, r2, lsl #28
     dac:	0000001c 	andeq	r0, r0, ip, lsl r0
     db0:	00000b10 	andeq	r0, r0, r0, lsl fp
     db4:	00000000 	andeq	r0, r0, r0
     db8:	000000ac 	andeq	r0, r0, ip, lsr #1
     dbc:	83180e41 	tsthi	r8, #1040	; 0x410
     dc0:	85058406 	strhi	r8, [r5, #-1030]	; 0xfffffbfa
     dc4:	87038604 	strhi	r8, [r3, -r4, lsl #12]
     dc8:	00018e02 	andeq	r8, r1, r2, lsl #28
     dcc:	00000014 	andeq	r0, r0, r4, lsl r0
     dd0:	00000b10 	andeq	r0, r0, r0, lsl fp
     dd4:	00000000 	andeq	r0, r0, r0
     dd8:	0000003c 	andeq	r0, r0, ip, lsr r0
     ddc:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     de0:	00018e02 	andeq	r8, r1, r2, lsl #28
     de4:	0000000c 	andeq	r0, r0, ip
     de8:	00000b10 	andeq	r0, r0, r0, lsl fp
     dec:	10002818 	andne	r2, r0, r8, lsl r8
     df0:	00000010 	andeq	r0, r0, r0, lsl r0
     df4:	0000000c 	andeq	r0, r0, ip
     df8:	00000b10 	andeq	r0, r0, r0, lsl fp
     dfc:	10002828 	andne	r2, r0, r8, lsr #16
     e00:	0000000c 	andeq	r0, r0, ip
     e04:	0000000c 	andeq	r0, r0, ip
     e08:	00000b10 	andeq	r0, r0, r0, lsl fp
     e0c:	00000000 	andeq	r0, r0, r0
     e10:	0000000c 	andeq	r0, r0, ip
     e14:	0000000c 	andeq	r0, r0, ip
     e18:	00000b10 	andeq	r0, r0, r0, lsl fp
     e1c:	10002834 	andne	r2, r0, r4, lsr r8
     e20:	0000000c 	andeq	r0, r0, ip
     e24:	0000000c 	andeq	r0, r0, ip
     e28:	00000b10 	andeq	r0, r0, r0, lsl fp
     e2c:	00000000 	andeq	r0, r0, r0
     e30:	00000014 	andeq	r0, r0, r4, lsl r0
     e34:	0000000c 	andeq	r0, r0, ip
     e38:	00000b10 	andeq	r0, r0, r0, lsl fp
     e3c:	00000000 	andeq	r0, r0, r0
     e40:	00000034 	andeq	r0, r0, r4, lsr r0
     e44:	0000000c 	andeq	r0, r0, ip
     e48:	00000b10 	andeq	r0, r0, r0, lsl fp
     e4c:	00000000 	andeq	r0, r0, r0
     e50:	0000000c 	andeq	r0, r0, ip
     e54:	0000000c 	andeq	r0, r0, ip
     e58:	00000b10 	andeq	r0, r0, r0, lsl fp
     e5c:	00000000 	andeq	r0, r0, r0
     e60:	0000000c 	andeq	r0, r0, ip
     e64:	00000014 	andeq	r0, r0, r4, lsl r0
     e68:	00000b10 	andeq	r0, r0, r0, lsl fp
     e6c:	10002840 	andne	r2, r0, r0, asr #16
     e70:	0000003c 	andeq	r0, r0, ip, lsr r0
     e74:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     e78:	00018e02 	andeq	r8, r1, r2, lsl #28
     e7c:	0000002c 	andeq	r0, r0, ip, lsr #32
     e80:	00000b10 	andeq	r0, r0, r0, lsl fp
     e84:	1000287c 	andne	r2, r0, ip, ror r8
     e88:	00000160 	andeq	r0, r0, r0, ror #2
     e8c:	84100e46 	ldrhi	r0, [r0], #-3654	; 0xfffff1ba
     e90:	86038504 	strhi	r8, [r3], -r4, lsl #10
     e94:	02018e02 	andeq	r8, r1, #2, 28
     e98:	c4000e8c 	strgt	r0, [r0], #-3724	; 0xfffff174
     e9c:	46cec6c5 	strbmi	ip, [lr], r5, asr #13
     ea0:	0484100e 	streq	r1, [r4], #14
     ea4:	02860385 	addeq	r0, r6, #335544322	; 0x14000002
     ea8:	0000018e 	andeq	r0, r0, lr, lsl #3
     eac:	00000014 	andeq	r0, r0, r4, lsl r0
     eb0:	00000b10 	andeq	r0, r0, r0, lsl fp
     eb4:	100029dc 	ldrdne	r2, [r0], -ip
     eb8:	00000130 	andeq	r0, r0, r0, lsr r1
     ebc:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     ec0:	00018e02 	andeq	r8, r1, r2, lsl #28
     ec4:	00000018 	andeq	r0, r0, r8, lsl r0
     ec8:	00000b10 	andeq	r0, r0, r0, lsl fp
     ecc:	00000000 	andeq	r0, r0, r0
     ed0:	0000005c 	andeq	r0, r0, ip, asr r0
     ed4:	83100e41 	tsthi	r0, #1040	; 0x410
     ed8:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     edc:	00018e02 	andeq	r8, r1, r2, lsl #28
     ee0:	00000014 	andeq	r0, r0, r4, lsl r0
     ee4:	00000b10 	andeq	r0, r0, r0, lsl fp
     ee8:	10002b0c 	andne	r2, r0, ip, lsl #22
     eec:	0000001e 	andeq	r0, r0, lr, lsl r0
     ef0:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     ef4:	00018e02 	andeq	r8, r1, r2, lsl #28
     ef8:	00000014 	andeq	r0, r0, r4, lsl r0
     efc:	00000b10 	andeq	r0, r0, r0, lsl fp
     f00:	10002b2c 	andne	r2, r0, ip, lsr #22
     f04:	00000038 	andeq	r0, r0, r8, lsr r0
     f08:	83080e41 	movwhi	r0, #36417	; 0x8e41
     f0c:	00018e02 	andeq	r8, r1, r2, lsl #28
     f10:	00000018 	andeq	r0, r0, r8, lsl r0
     f14:	00000b10 	andeq	r0, r0, r0, lsl fp
     f18:	00000000 	andeq	r0, r0, r0
     f1c:	0000007c 	andeq	r0, r0, ip, ror r0
     f20:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
     f24:	86038504 	strhi	r8, [r3], -r4, lsl #10
     f28:	00018e02 	andeq	r8, r1, r2, lsl #28
     f2c:	00000014 	andeq	r0, r0, r4, lsl r0
     f30:	00000b10 	andeq	r0, r0, r0, lsl fp
     f34:	00000000 	andeq	r0, r0, r0
     f38:	00000024 	andeq	r0, r0, r4, lsr #32
     f3c:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     f40:	00018e02 	andeq	r8, r1, r2, lsl #28
     f44:	00000018 	andeq	r0, r0, r8, lsl r0
     f48:	00000b10 	andeq	r0, r0, r0, lsl fp
     f4c:	00000000 	andeq	r0, r0, r0
     f50:	000000a4 	andeq	r0, r0, r4, lsr #1
     f54:	83100e41 	tsthi	r0, #1040	; 0x410
     f58:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     f5c:	00018e02 	andeq	r8, r1, r2, lsl #28
     f60:	00000018 	andeq	r0, r0, r8, lsl r0
     f64:	00000b10 	andeq	r0, r0, r0, lsl fp
     f68:	00000000 	andeq	r0, r0, r0
     f6c:	00000020 	andeq	r0, r0, r0, lsr #32
     f70:	83100e41 	tsthi	r0, #1040	; 0x410
     f74:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     f78:	00018e02 	andeq	r8, r1, r2, lsl #28
     f7c:	00000014 	andeq	r0, r0, r4, lsl r0
     f80:	00000b10 	andeq	r0, r0, r0, lsl fp
     f84:	00000000 	andeq	r0, r0, r0
     f88:	00000020 	andeq	r0, r0, r0, lsr #32
     f8c:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     f90:	00018e02 	andeq	r8, r1, r2, lsl #28
     f94:	00000014 	andeq	r0, r0, r4, lsl r0
     f98:	00000b10 	andeq	r0, r0, r0, lsl fp
     f9c:	00000000 	andeq	r0, r0, r0
     fa0:	00000020 	andeq	r0, r0, r0, lsr #32
     fa4:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     fa8:	00018e02 	andeq	r8, r1, r2, lsl #28
     fac:	00000014 	andeq	r0, r0, r4, lsl r0
     fb0:	00000b10 	andeq	r0, r0, r0, lsl fp
     fb4:	00000000 	andeq	r0, r0, r0
     fb8:	00000020 	andeq	r0, r0, r0, lsr #32
     fbc:	83080e41 	movwhi	r0, #36417	; 0x8e41
     fc0:	00018e02 	andeq	r8, r1, r2, lsl #28
     fc4:	0000000c 	andeq	r0, r0, ip
     fc8:	00000b10 	andeq	r0, r0, r0, lsl fp
     fcc:	10002b64 	andne	r2, r0, r4, ror #22
     fd0:	00000084 	andeq	r0, r0, r4, lsl #1
     fd4:	00000018 	andeq	r0, r0, r8, lsl r0
     fd8:	00000b10 	andeq	r0, r0, r0, lsl fp
     fdc:	00000000 	andeq	r0, r0, r0
     fe0:	000000a4 	andeq	r0, r0, r4, lsr #1
     fe4:	83100e41 	tsthi	r0, #1040	; 0x410
     fe8:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     fec:	00018e02 	andeq	r8, r1, r2, lsl #28
     ff0:	00000014 	andeq	r0, r0, r4, lsl r0
     ff4:	00000b10 	andeq	r0, r0, r0, lsl fp
     ff8:	10002be8 	andne	r2, r0, r8, ror #23
     ffc:	0000001c 	andeq	r0, r0, ip, lsl r0
    1000:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    1004:	00018e02 	andeq	r8, r1, r2, lsl #28
    1008:	00000018 	andeq	r0, r0, r8, lsl r0
    100c:	00000b10 	andeq	r0, r0, r0, lsl fp
    1010:	00000000 	andeq	r0, r0, r0
    1014:	00000040 	andeq	r0, r0, r0, asr #32
    1018:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    101c:	86038504 	strhi	r8, [r3], -r4, lsl #10
    1020:	00018e02 	andeq	r8, r1, r2, lsl #28
    1024:	00000018 	andeq	r0, r0, r8, lsl r0
    1028:	00000b10 	andeq	r0, r0, r0, lsl fp
    102c:	10002c04 	andne	r2, r0, r4, lsl #24
    1030:	0000003c 	andeq	r0, r0, ip, lsr r0
    1034:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    1038:	86038504 	strhi	r8, [r3], -r4, lsl #10
    103c:	00018e02 	andeq	r8, r1, r2, lsl #28
    1040:	00000014 	andeq	r0, r0, r4, lsl r0
    1044:	00000b10 	andeq	r0, r0, r0, lsl fp
    1048:	10002c40 	andne	r2, r0, r0, asr #24
    104c:	000000e4 	andeq	r0, r0, r4, ror #1
    1050:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    1054:	00018e02 	andeq	r8, r1, r2, lsl #28
    1058:	00000014 	andeq	r0, r0, r4, lsl r0
    105c:	00000b10 	andeq	r0, r0, r0, lsl fp
    1060:	00000000 	andeq	r0, r0, r0
    1064:	000000b8 	strheq	r0, [r0], -r8
    1068:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    106c:	00018e02 	andeq	r8, r1, r2, lsl #28
    1070:	00000014 	andeq	r0, r0, r4, lsl r0
    1074:	00000b10 	andeq	r0, r0, r0, lsl fp
    1078:	00000000 	andeq	r0, r0, r0
    107c:	00000024 	andeq	r0, r0, r4, lsr #32
    1080:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    1084:	00018e02 	andeq	r8, r1, r2, lsl #28
    1088:	0000000c 	andeq	r0, r0, ip
    108c:	00000b10 	andeq	r0, r0, r0, lsl fp
    1090:	10002d24 	andne	r2, r0, r4, lsr #26
    1094:	00000018 	andeq	r0, r0, r8, lsl r0
    1098:	0000001c 	andeq	r0, r0, ip, lsl r0
    109c:	00000b10 	andeq	r0, r0, r0, lsl fp
    10a0:	10002d3c 	andne	r2, r0, ip, lsr sp
    10a4:	0000007c 	andeq	r0, r0, ip, ror r0
    10a8:	83180e41 	tsthi	r8, #1040	; 0x410
    10ac:	85058406 	strhi	r8, [r5, #-1030]	; 0xfffffbfa
    10b0:	87038604 	strhi	r8, [r3, -r4, lsl #12]
    10b4:	00018e02 	andeq	r8, r1, r2, lsl #28
    10b8:	0000000c 	andeq	r0, r0, ip
    10bc:	00000b10 	andeq	r0, r0, r0, lsl fp
    10c0:	10002db8 			; <UNDEFINED> instruction: 0x10002db8
    10c4:	0000000c 	andeq	r0, r0, ip
    10c8:	0000000c 	andeq	r0, r0, ip
    10cc:	00000b10 	andeq	r0, r0, r0, lsl fp
    10d0:	10002dc4 	andne	r2, r0, r4, asr #27
    10d4:	00000048 	andeq	r0, r0, r8, asr #32
    10d8:	00000014 	andeq	r0, r0, r4, lsl r0
    10dc:	00000b10 	andeq	r0, r0, r0, lsl fp
    10e0:	00000000 	andeq	r0, r0, r0
    10e4:	00000018 	andeq	r0, r0, r8, lsl r0
    10e8:	83080e41 	movwhi	r0, #36417	; 0x8e41
    10ec:	00018e02 	andeq	r8, r1, r2, lsl #28
    10f0:	0000000c 	andeq	r0, r0, ip
    10f4:	00000b10 	andeq	r0, r0, r0, lsl fp
    10f8:	00000000 	andeq	r0, r0, r0
    10fc:	0000000c 	andeq	r0, r0, ip
    1100:	0000000c 	andeq	r0, r0, ip
    1104:	00000b10 	andeq	r0, r0, r0, lsl fp
    1108:	00000000 	andeq	r0, r0, r0
    110c:	00000010 	andeq	r0, r0, r0, lsl r0
    1110:	0000000c 	andeq	r0, r0, ip
    1114:	00000b10 	andeq	r0, r0, r0, lsl fp
    1118:	00000000 	andeq	r0, r0, r0
    111c:	00000020 	andeq	r0, r0, r0, lsr #32
    1120:	0000002c 	andeq	r0, r0, ip, lsr #32
    1124:	00000b10 	andeq	r0, r0, r0, lsl fp
    1128:	00000000 	andeq	r0, r0, r0
    112c:	000000b8 	strheq	r0, [r0], -r8
    1130:	83100e43 	tsthi	r0, #1072	; 0x430
    1134:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    1138:	02018e02 	andeq	r8, r1, #2, 28
    113c:	c3000e4e 	movwgt	r0, #3662	; 0xe4e
    1140:	42cec5c4 	sbcmi	ip, lr, #196, 10	; 0x31000000
    1144:	0483100e 	streq	r1, [r3], #14
    1148:	02850384 	addeq	r0, r5, #132, 6	; 0x10000002
    114c:	0000018e 	andeq	r0, r0, lr, lsl #3
    1150:	0000002c 	andeq	r0, r0, ip, lsr #32
    1154:	00000b10 	andeq	r0, r0, r0, lsl fp
    1158:	10002e0c 	andne	r2, r0, ip, lsl #28
    115c:	00000080 	andeq	r0, r0, r0, lsl #1
    1160:	83100e43 	tsthi	r0, #1072	; 0x430
    1164:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    1168:	74018e02 	strvc	r8, [r1], #-3586	; 0xfffff1fe
    116c:	c4c3000e 	strbgt	r0, [r3], #14
    1170:	0e42cec5 	cdpeq	14, 4, cr12, cr2, cr5, {6}
    1174:	84048310 	strhi	r8, [r4], #-784	; 0xfffffcf0
    1178:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
    117c:	00000001 	andeq	r0, r0, r1
    1180:	00000020 	andeq	r0, r0, r0, lsr #32
    1184:	00000b10 	andeq	r0, r0, r0, lsl fp
    1188:	00000000 	andeq	r0, r0, r0
    118c:	00000090 	muleq	r0, r0, r0
    1190:	83100e43 	tsthi	r0, #1072	; 0x430
    1194:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    1198:	7f018e02 	svcvc	0x00018e02
    119c:	c4c3000e 	strbgt	r0, [r3], #14
    11a0:	0000cec5 	andeq	ip, r0, r5, asr #29
    11a4:	0000000c 	andeq	r0, r0, ip
    11a8:	00000b10 	andeq	r0, r0, r0, lsl fp
    11ac:	00000000 	andeq	r0, r0, r0
    11b0:	00000018 	andeq	r0, r0, r8, lsl r0
    11b4:	0000000c 	andeq	r0, r0, ip
    11b8:	00000b10 	andeq	r0, r0, r0, lsl fp
    11bc:	00000000 	andeq	r0, r0, r0
    11c0:	00000014 	andeq	r0, r0, r4, lsl r0
    11c4:	00000018 	andeq	r0, r0, r8, lsl r0
    11c8:	00000b10 	andeq	r0, r0, r0, lsl fp
    11cc:	00000000 	andeq	r0, r0, r0
    11d0:	000000a8 	andeq	r0, r0, r8, lsr #1
    11d4:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    11d8:	86038504 	strhi	r8, [r3], -r4, lsl #10
    11dc:	00018e02 	andeq	r8, r1, r2, lsl #28
    11e0:	0000001c 	andeq	r0, r0, ip, lsl r0
    11e4:	00000b10 	andeq	r0, r0, r0, lsl fp
    11e8:	00000000 	andeq	r0, r0, r0
    11ec:	000000cc 	andeq	r0, r0, ip, asr #1
    11f0:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
    11f4:	86058506 	strhi	r8, [r5], -r6, lsl #10
    11f8:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
    11fc:	00018e02 	andeq	r8, r1, r2, lsl #28
    1200:	0000001c 	andeq	r0, r0, ip, lsl r0
    1204:	00000b10 	andeq	r0, r0, r0, lsl fp
    1208:	00000000 	andeq	r0, r0, r0
    120c:	0000011c 	andeq	r0, r0, ip, lsl r1
    1210:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
    1214:	86058506 	strhi	r8, [r5], -r6, lsl #10
    1218:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
    121c:	00018e02 	andeq	r8, r1, r2, lsl #28
    1220:	0000001c 	andeq	r0, r0, ip, lsl r0
    1224:	00000b10 	andeq	r0, r0, r0, lsl fp
    1228:	00000000 	andeq	r0, r0, r0
    122c:	00000158 	andeq	r0, r0, r8, asr r1
    1230:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
    1234:	86058506 	strhi	r8, [r5], -r6, lsl #10
    1238:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
    123c:	00018e02 	andeq	r8, r1, r2, lsl #28
    1240:	00000018 	andeq	r0, r0, r8, lsl r0
    1244:	00000b10 	andeq	r0, r0, r0, lsl fp
    1248:	00000000 	andeq	r0, r0, r0
    124c:	000000ec 	andeq	r0, r0, ip, ror #1
    1250:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    1254:	86038504 	strhi	r8, [r3], -r4, lsl #10
    1258:	00018e02 	andeq	r8, r1, r2, lsl #28
    125c:	00000018 	andeq	r0, r0, r8, lsl r0
    1260:	00000b10 	andeq	r0, r0, r0, lsl fp
    1264:	00000000 	andeq	r0, r0, r0
    1268:	00000038 	andeq	r0, r0, r8, lsr r0
    126c:	83100e41 	tsthi	r0, #1040	; 0x410
    1270:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    1274:	00018e02 	andeq	r8, r1, r2, lsl #28
    1278:	00000018 	andeq	r0, r0, r8, lsl r0
    127c:	00000b10 	andeq	r0, r0, r0, lsl fp
    1280:	00000000 	andeq	r0, r0, r0
    1284:	00000034 	andeq	r0, r0, r4, lsr r0
    1288:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    128c:	86038504 	strhi	r8, [r3], -r4, lsl #10
    1290:	00018e02 	andeq	r8, r1, r2, lsl #28
    1294:	0000000c 	andeq	r0, r0, ip
    1298:	00000b10 	andeq	r0, r0, r0, lsl fp
    129c:	10002e8c 	andne	r2, r0, ip, lsl #29
    12a0:	00000018 	andeq	r0, r0, r8, lsl r0
    12a4:	00000020 	andeq	r0, r0, r0, lsr #32
    12a8:	00000b10 	andeq	r0, r0, r0, lsl fp
    12ac:	10002ea4 	andne	r2, r0, r4, lsr #29
    12b0:	0000006c 	andeq	r0, r0, ip, rrx
    12b4:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
    12b8:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
    12bc:	300e4101 	andcc	r4, lr, r1, lsl #2
    12c0:	0c0e0a52 			; <UNDEFINED> instruction: 0x0c0e0a52
    12c4:	00000b41 	andeq	r0, r0, r1, asr #22
    12c8:	00000014 	andeq	r0, r0, r4, lsl r0
    12cc:	00000b10 	andeq	r0, r0, r0, lsl fp
    12d0:	10002f10 	andne	r2, r0, r0, lsl pc
    12d4:	00000048 	andeq	r0, r0, r8, asr #32
    12d8:	83080e41 	movwhi	r0, #36417	; 0x8e41
    12dc:	00018e02 	andeq	r8, r1, r2, lsl #28
    12e0:	0000000c 	andeq	r0, r0, ip
    12e4:	00000b10 	andeq	r0, r0, r0, lsl fp
    12e8:	10002f58 	andne	r2, r0, r8, asr pc
    12ec:	00000018 	andeq	r0, r0, r8, lsl r0
    12f0:	0000000c 	andeq	r0, r0, ip
    12f4:	00000b10 	andeq	r0, r0, r0, lsl fp
    12f8:	00000000 	andeq	r0, r0, r0
    12fc:	00000074 	andeq	r0, r0, r4, ror r0
    1300:	0000000c 	andeq	r0, r0, ip
    1304:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1308:	7c020001 	stcvc	0, cr0, [r2], {1}
    130c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1310:	0000000c 	andeq	r0, r0, ip
    1314:	00001300 	andeq	r1, r0, r0, lsl #6
    1318:	10002f70 	andne	r2, r0, r0, ror pc
    131c:	00000020 	andeq	r0, r0, r0, lsr #32
    1320:	00000014 	andeq	r0, r0, r4, lsl r0
    1324:	00001300 	andeq	r1, r0, r0, lsl #6
    1328:	10002f90 	mulne	r0, r0, pc	; <UNPREDICTABLE>
    132c:	00000048 	andeq	r0, r0, r8, asr #32
    1330:	83080e41 	movwhi	r0, #36417	; 0x8e41
    1334:	00018e02 	andeq	r8, r1, r2, lsl #28
    1338:	00000018 	andeq	r0, r0, r8, lsl r0
    133c:	00001300 	andeq	r1, r0, r0, lsl #6
    1340:	10002fd8 	ldrdne	r2, [r0], -r8
    1344:	00000028 	andeq	r0, r0, r8, lsr #32
    1348:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    134c:	86038504 	strhi	r8, [r3], -r4, lsl #10
    1350:	00018e02 	andeq	r8, r1, r2, lsl #28
    1354:	00000018 	andeq	r0, r0, r8, lsl r0
    1358:	00001300 	andeq	r1, r0, r0, lsl #6
    135c:	10003000 	andne	r3, r0, r0
    1360:	00000040 	andeq	r0, r0, r0, asr #32
    1364:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    1368:	86038504 	strhi	r8, [r3], -r4, lsl #10
    136c:	00018e02 	andeq	r8, r1, r2, lsl #28
    1370:	00000014 	andeq	r0, r0, r4, lsl r0
    1374:	00001300 	andeq	r1, r0, r0, lsl #6
    1378:	10003040 	andne	r3, r0, r0, asr #32
    137c:	00000030 	andeq	r0, r0, r0, lsr r0
    1380:	83080e41 	movwhi	r0, #36417	; 0x8e41
    1384:	00018e02 	andeq	r8, r1, r2, lsl #28
    1388:	00000018 	andeq	r0, r0, r8, lsl r0
    138c:	00001300 	andeq	r1, r0, r0, lsl #6
    1390:	10003070 	andne	r3, r0, r0, ror r0
    1394:	0000002c 	andeq	r0, r0, ip, lsr #32
    1398:	83100e41 	tsthi	r0, #1040	; 0x410
    139c:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    13a0:	00018e02 	andeq	r8, r1, r2, lsl #28
    13a4:	00000020 	andeq	r0, r0, r0, lsr #32
    13a8:	00001300 	andeq	r1, r0, r0, lsl #6
    13ac:	1000309c 	mulne	r0, ip, r0
    13b0:	00000068 	andeq	r0, r0, r8, rrx
    13b4:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    13b8:	86038504 	strhi	r8, [r3], -r4, lsl #10
    13bc:	41018e02 	tstmi	r1, r2, lsl #28
    13c0:	0a5d180e 	beq	1747400 <__RAM_SIZE+0x1647400>
    13c4:	0b41100e 	bleq	1045404 <__RAM_SIZE+0xf45404>
    13c8:	0000001c 	andeq	r0, r0, ip, lsl r0
    13cc:	00001300 	andeq	r1, r0, r0, lsl #6
    13d0:	10003104 	andne	r3, r0, r4, lsl #2
    13d4:	000000f8 	strdeq	r0, [r0], -r8
    13d8:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
    13dc:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
    13e0:	280e4101 	stmdacs	lr, {r0, r8, lr}
    13e4:	0c0e7702 	stceq	7, cr7, [lr], {2}
    13e8:	00000014 	andeq	r0, r0, r4, lsl r0
    13ec:	00001300 	andeq	r1, r0, r0, lsl #6
    13f0:	100031fc 	strdne	r3, [r0], -ip
    13f4:	00000016 	andeq	r0, r0, r6, lsl r0
    13f8:	8e040e41 	cdphi	14, 0, cr0, cr4, cr1, {2}
    13fc:	100e4101 	andne	r4, lr, r1, lsl #2
    1400:	00000020 	andeq	r0, r0, r0, lsr #32
    1404:	00001300 	andeq	r1, r0, r0, lsl #6
    1408:	10003214 	andne	r3, r0, r4, lsl r2
    140c:	00000060 	andeq	r0, r0, r0, rrx
    1410:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
    1414:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
    1418:	180e4101 	stmdane	lr, {r0, r8, lr}
    141c:	0c0e0a48 			; <UNDEFINED> instruction: 0x0c0e0a48
    1420:	00000b41 	andeq	r0, r0, r1, asr #22
    1424:	0000001c 	andeq	r0, r0, ip, lsl r0
    1428:	00001300 	andeq	r1, r0, r0, lsl #6
    142c:	00000000 	andeq	r0, r0, r0
    1430:	00000036 	andeq	r0, r0, r6, lsr r0
    1434:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
    1438:	86058506 	strhi	r8, [r5], -r6, lsl #10
    143c:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
    1440:	00018e02 	andeq	r8, r1, r2, lsl #28
    1444:	0000001c 	andeq	r0, r0, ip, lsl r0
    1448:	00001300 	andeq	r1, r0, r0, lsl #6
    144c:	10003274 	andne	r3, r0, r4, ror r2
    1450:	0000005c 	andeq	r0, r0, ip, asr r0
    1454:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    1458:	41018e02 	tstmi	r1, r2, lsl #28
    145c:	0e62280e 	cdpeq	8, 6, cr2, cr2, cr14, {0}
    1460:	00000008 	andeq	r0, r0, r8
    1464:	00000024 	andeq	r0, r0, r4, lsr #32
    1468:	00001300 	andeq	r1, r0, r0, lsl #6
    146c:	00000000 	andeq	r0, r0, r0
    1470:	00000038 	andeq	r0, r0, r8, lsr r0
    1474:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
    1478:	86058506 	strhi	r8, [r5], -r6, lsl #10
    147c:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
    1480:	41018e02 	tstmi	r1, r2, lsl #28
    1484:	0e57200e 	cdpeq	0, 5, cr2, cr7, cr14, {0}
    1488:	00000018 	andeq	r0, r0, r8, lsl r0
    148c:	0000001c 	andeq	r0, r0, ip, lsl r0
    1490:	00001300 	andeq	r1, r0, r0, lsl #6
    1494:	00000000 	andeq	r0, r0, r0
    1498:	00000020 	andeq	r0, r0, r0, lsr #32
    149c:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
    14a0:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
    14a4:	180e4101 	stmdane	lr, {r0, r8, lr}
    14a8:	000c0e4d 	andeq	r0, ip, sp, asr #28
    14ac:	00000020 	andeq	r0, r0, r0, lsr #32
    14b0:	00001300 	andeq	r1, r0, r0, lsl #6
    14b4:	00000000 	andeq	r0, r0, r0
    14b8:	0000004c 	andeq	r0, r0, ip, asr #32
    14bc:	8e040e44 	cdphi	14, 0, cr0, cr4, cr4, {2}
    14c0:	180e4101 	stmdane	lr, {r0, r8, lr}
    14c4:	040e0a47 	streq	r0, [lr], #-2631	; 0xfffff5b9
    14c8:	0e540b42 	vnmlaeq.f64	d16, d4, d2
    14cc:	0000ce00 	andeq	ip, r0, r0, lsl #28
    14d0:	0000001c 	andeq	r0, r0, ip, lsl r0
    14d4:	00001300 	andeq	r1, r0, r0, lsl #6
    14d8:	00000000 	andeq	r0, r0, r0
    14dc:	00000034 	andeq	r0, r0, r4, lsr r0
    14e0:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    14e4:	41018e02 	tstmi	r1, r2, lsl #28
    14e8:	0a4b180e 	beq	12c7528 <__RAM_SIZE+0x11c7528>
    14ec:	0b41080e 	bleq	104352c <__RAM_SIZE+0xf4352c>
    14f0:	0000000c 	andeq	r0, r0, ip
    14f4:	00001300 	andeq	r1, r0, r0, lsl #6
    14f8:	00000000 	andeq	r0, r0, r0
    14fc:	0000000c 	andeq	r0, r0, ip
    1500:	0000000c 	andeq	r0, r0, ip
    1504:	00001300 	andeq	r1, r0, r0, lsl #6
    1508:	00000000 	andeq	r0, r0, r0
    150c:	00000004 	andeq	r0, r0, r4
    1510:	00000018 	andeq	r0, r0, r8, lsl r0
    1514:	00001300 	andeq	r1, r0, r0, lsl #6
    1518:	00000000 	andeq	r0, r0, r0
    151c:	0000002c 	andeq	r0, r0, ip, lsr #32
    1520:	83100e41 	tsthi	r0, #1040	; 0x410
    1524:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    1528:	00018e02 	andeq	r8, r1, r2, lsl #28
    152c:	00000014 	andeq	r0, r0, r4, lsl r0
    1530:	00001300 	andeq	r1, r0, r0, lsl #6
    1534:	00000000 	andeq	r0, r0, r0
    1538:	00000020 	andeq	r0, r0, r0, lsr #32
    153c:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    1540:	00018e02 	andeq	r8, r1, r2, lsl #28
    1544:	00000014 	andeq	r0, r0, r4, lsl r0
    1548:	00001300 	andeq	r1, r0, r0, lsl #6
    154c:	00000000 	andeq	r0, r0, r0
    1550:	00000008 	andeq	r0, r0, r8
    1554:	83080e41 	movwhi	r0, #36417	; 0x8e41
    1558:	00018e02 	andeq	r8, r1, r2, lsl #28
    155c:	0000000c 	andeq	r0, r0, ip
    1560:	00001300 	andeq	r1, r0, r0, lsl #6
    1564:	00000000 	andeq	r0, r0, r0
    1568:	00000004 	andeq	r0, r0, r4
    156c:	0000000c 	andeq	r0, r0, ip
    1570:	00001300 	andeq	r1, r0, r0, lsl #6
    1574:	00000000 	andeq	r0, r0, r0
    1578:	00000014 	andeq	r0, r0, r4, lsl r0
    157c:	0000000c 	andeq	r0, r0, ip
    1580:	00001300 	andeq	r1, r0, r0, lsl #6
    1584:	00000000 	andeq	r0, r0, r0
    1588:	00000004 	andeq	r0, r0, r4
    158c:	00000014 	andeq	r0, r0, r4, lsl r0
    1590:	00001300 	andeq	r1, r0, r0, lsl #6
    1594:	00000000 	andeq	r0, r0, r0
    1598:	00000020 	andeq	r0, r0, r0, lsr #32
    159c:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    15a0:	00018e02 	andeq	r8, r1, r2, lsl #28
    15a4:	00000014 	andeq	r0, r0, r4, lsl r0
    15a8:	00001300 	andeq	r1, r0, r0, lsl #6
    15ac:	00000000 	andeq	r0, r0, r0
    15b0:	00000012 	andeq	r0, r0, r2, lsl r0
    15b4:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    15b8:	00018e02 	andeq	r8, r1, r2, lsl #28
    15bc:	00000018 	andeq	r0, r0, r8, lsl r0
    15c0:	00001300 	andeq	r1, r0, r0, lsl #6
    15c4:	00000000 	andeq	r0, r0, r0
    15c8:	00000012 	andeq	r0, r0, r2, lsl r0
    15cc:	83100e41 	tsthi	r0, #1040	; 0x410
    15d0:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    15d4:	00018e02 	andeq	r8, r1, r2, lsl #28
    15d8:	0000001c 	andeq	r0, r0, ip, lsl r0
    15dc:	00001300 	andeq	r1, r0, r0, lsl #6
    15e0:	00000000 	andeq	r0, r0, r0
    15e4:	00000028 	andeq	r0, r0, r8, lsr #32
    15e8:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    15ec:	41018e02 	tstmi	r1, r2, lsl #28
    15f0:	0e4f180e 	cdpeq	8, 4, cr1, cr15, cr14, {0}
    15f4:	00000008 	andeq	r0, r0, r8
    15f8:	0000001c 	andeq	r0, r0, ip, lsl r0
    15fc:	00001300 	andeq	r1, r0, r0, lsl #6
    1600:	00000000 	andeq	r0, r0, r0
    1604:	00000028 	andeq	r0, r0, r8, lsr #32
    1608:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    160c:	41018e02 	tstmi	r1, r2, lsl #28
    1610:	0e4f180e 	cdpeq	8, 4, cr1, cr15, cr14, {0}
    1614:	00000008 	andeq	r0, r0, r8
    1618:	0000000c 	andeq	r0, r0, ip
    161c:	00001300 	andeq	r1, r0, r0, lsl #6
    1620:	00000000 	andeq	r0, r0, r0
    1624:	00000014 	andeq	r0, r0, r4, lsl r0
    1628:	0000000c 	andeq	r0, r0, ip
    162c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1630:	7c020001 	stcvc	0, cr0, [r2], {1}
    1634:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1638:	0000000c 	andeq	r0, r0, ip
    163c:	00001628 	andeq	r1, r0, r8, lsr #12
    1640:	100032d0 	ldrdne	r3, [r0], -r0
    1644:	00000058 	andeq	r0, r0, r8, asr r0
    1648:	0000001c 	andeq	r0, r0, ip, lsl r0
    164c:	00001628 	andeq	r1, r0, r8, lsr #12
    1650:	10003328 	andne	r3, r0, r8, lsr #6
    1654:	00000064 	andeq	r0, r0, r4, rrx
    1658:	84040e5a 	strhi	r0, [r4], #-3674	; 0xfffff1a6
    165c:	c40a4f01 	strgt	r4, [sl], #-3841	; 0xfffff0ff
    1660:	0b41000e 	bleq	10416a0 <__RAM_SIZE+0xf416a0>
    1664:	c4000e42 	strgt	r0, [r0], #-3650	; 0xfffff1be
    1668:	00000018 	andeq	r0, r0, r8, lsl r0
    166c:	00001628 	andeq	r1, r0, r8, lsr #12
    1670:	1000338c 	andne	r3, r0, ip, lsl #7
    1674:	000000d4 	ldrdeq	r0, [r0], -r4
    1678:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    167c:	86038504 	strhi	r8, [r3], -r4, lsl #10
    1680:	00018e02 	andeq	r8, r1, r2, lsl #28
    1684:	00000020 	andeq	r0, r0, r0, lsr #32
    1688:	00001628 	andeq	r1, r0, r8, lsr #12
    168c:	10003460 	andne	r3, r0, r0, ror #8
    1690:	00000050 	andeq	r0, r0, r0, asr r0
    1694:	83100e42 	tsthi	r0, #1056	; 0x420
    1698:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    169c:	61018e02 	tstvs	r1, r2, lsl #28
    16a0:	c4c3000e 	strbgt	r0, [r3], #14
    16a4:	0000cec5 	andeq	ip, r0, r5, asr #29
    16a8:	0000000c 	andeq	r0, r0, ip
    16ac:	00001628 	andeq	r1, r0, r8, lsr #12
    16b0:	00000000 	andeq	r0, r0, r0
    16b4:	0000000c 	andeq	r0, r0, ip
    16b8:	0000000c 	andeq	r0, r0, ip
    16bc:	00001628 	andeq	r1, r0, r8, lsr #12
    16c0:	00000000 	andeq	r0, r0, r0
    16c4:	0000000c 	andeq	r0, r0, ip
    16c8:	0000000c 	andeq	r0, r0, ip
    16cc:	00001628 	andeq	r1, r0, r8, lsr #12
    16d0:	00000000 	andeq	r0, r0, r0
    16d4:	00000002 	andeq	r0, r0, r2
    16d8:	00000018 	andeq	r0, r0, r8, lsl r0
    16dc:	00001628 	andeq	r1, r0, r8, lsr #12
    16e0:	00000000 	andeq	r0, r0, r0
    16e4:	00000032 	andeq	r0, r0, r2, lsr r0
    16e8:	83100e41 	tsthi	r0, #1040	; 0x410
    16ec:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    16f0:	00018e02 	andeq	r8, r1, r2, lsl #28
    16f4:	0000001c 	andeq	r0, r0, ip, lsl r0
    16f8:	00001628 	andeq	r1, r0, r8, lsr #12
    16fc:	00000000 	andeq	r0, r0, r0
    1700:	00000080 	andeq	r0, r0, r0, lsl #1
    1704:	83180e41 	tsthi	r8, #1040	; 0x410
    1708:	85058406 	strhi	r8, [r5, #-1030]	; 0xfffffbfa
    170c:	87038604 	strhi	r8, [r3, -r4, lsl #12]
    1710:	00018e02 	andeq	r8, r1, r2, lsl #28
    1714:	0000000c 	andeq	r0, r0, ip
    1718:	00001628 	andeq	r1, r0, r8, lsr #12
    171c:	00000000 	andeq	r0, r0, r0
    1720:	0000002c 	andeq	r0, r0, ip, lsr #32
    1724:	0000000c 	andeq	r0, r0, ip
    1728:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    172c:	7c020001 	stcvc	0, cr0, [r2], {1}
    1730:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1734:	00000018 	andeq	r0, r0, r8, lsl r0
    1738:	00001724 	andeq	r1, r0, r4, lsr #14
    173c:	100034b0 			; <UNDEFINED> instruction: 0x100034b0
    1740:	00000018 	andeq	r0, r0, r8, lsl r0
    1744:	8e040e41 	cdphi	14, 0, cr0, cr4, cr1, {2}
    1748:	100e4101 	andne	r4, lr, r1, lsl #2
    174c:	00040e48 	andeq	r0, r4, r8, asr #28
    1750:	00000014 	andeq	r0, r0, r4, lsl r0
    1754:	00001724 	andeq	r1, r0, r4, lsr #14
    1758:	100034c8 	andne	r3, r0, r8, asr #9
    175c:	00000114 	andeq	r0, r0, r4, lsl r1
    1760:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    1764:	00018e02 	andeq	r8, r1, r2, lsl #28
    1768:	0000000c 	andeq	r0, r0, ip
    176c:	00001724 	andeq	r1, r0, r4, lsr #14
    1770:	100035dc 	ldrdne	r3, [r0], -ip
    1774:	0000003c 	andeq	r0, r0, ip, lsr r0
    1778:	0000000c 	andeq	r0, r0, ip
    177c:	00001724 	andeq	r1, r0, r4, lsr #14
    1780:	10003618 	andne	r3, r0, r8, lsl r6
    1784:	00000016 	andeq	r0, r0, r6, lsl r0
    1788:	00000014 	andeq	r0, r0, r4, lsl r0
    178c:	00001724 	andeq	r1, r0, r4, lsr #14
    1790:	10003630 	andne	r3, r0, r0, lsr r6
    1794:	0000001c 	andeq	r0, r0, ip, lsl r0
    1798:	83080e41 	movwhi	r0, #36417	; 0x8e41
    179c:	00018e02 	andeq	r8, r1, r2, lsl #28
    17a0:	00000014 	andeq	r0, r0, r4, lsl r0
    17a4:	00001724 	andeq	r1, r0, r4, lsr #14
    17a8:	1000364c 	andne	r3, r0, ip, asr #12
    17ac:	0000001c 	andeq	r0, r0, ip, lsl r0
    17b0:	83080e41 	movwhi	r0, #36417	; 0x8e41
    17b4:	00018e02 	andeq	r8, r1, r2, lsl #28
    17b8:	00000014 	andeq	r0, r0, r4, lsl r0
    17bc:	00001724 	andeq	r1, r0, r4, lsr #14
    17c0:	10003668 	andne	r3, r0, r8, ror #12
    17c4:	00000022 	andeq	r0, r0, r2, lsr #32
    17c8:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    17cc:	00018e02 	andeq	r8, r1, r2, lsl #28
    17d0:	00000014 	andeq	r0, r0, r4, lsl r0
    17d4:	00001724 	andeq	r1, r0, r4, lsr #14
    17d8:	1000368a 	andne	r3, r0, sl, lsl #13
    17dc:	00000014 	andeq	r0, r0, r4, lsl r0
    17e0:	83080e41 	movwhi	r0, #36417	; 0x8e41
    17e4:	00018e02 	andeq	r8, r1, r2, lsl #28
    17e8:	00000018 	andeq	r0, r0, r8, lsl r0
    17ec:	00001724 	andeq	r1, r0, r4, lsr #14
    17f0:	100036a0 	andne	r3, r0, r0, lsr #13
    17f4:	00000090 	muleq	r0, r0, r0
    17f8:	84040e41 	strhi	r0, [r4], #-3649	; 0xfffff1bf
    17fc:	c4440201 	strbgt	r0, [r4], #-513	; 0xfffffdff
    1800:	0000000e 	andeq	r0, r0, lr
    1804:	00000014 	andeq	r0, r0, r4, lsl r0
    1808:	00001724 	andeq	r1, r0, r4, lsr #14
    180c:	10003730 	andne	r3, r0, r0, lsr r7
    1810:	00000040 	andeq	r0, r0, r0, asr #32
    1814:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    1818:	00018e02 	andeq	r8, r1, r2, lsl #28
    181c:	0000000c 	andeq	r0, r0, ip
    1820:	00001724 	andeq	r1, r0, r4, lsr #14
    1824:	00000000 	andeq	r0, r0, r0
    1828:	00000002 	andeq	r0, r0, r2
    182c:	0000000c 	andeq	r0, r0, ip
    1830:	00001724 	andeq	r1, r0, r4, lsr #14
    1834:	00000000 	andeq	r0, r0, r0
    1838:	0000000e 	andeq	r0, r0, lr
    183c:	0000000c 	andeq	r0, r0, ip
    1840:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1844:	7c020001 	stcvc	0, cr0, [r2], {1}
    1848:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    184c:	0000000c 	andeq	r0, r0, ip
    1850:	0000183c 	andeq	r1, r0, ip, lsr r8
    1854:	10003770 	andne	r3, r0, r0, ror r7
    1858:	00000026 	andeq	r0, r0, r6, lsr #32
    185c:	0000000c 	andeq	r0, r0, ip
    1860:	0000183c 	andeq	r1, r0, ip, lsr r8
    1864:	00000000 	andeq	r0, r0, r0
    1868:	00000010 	andeq	r0, r0, r0, lsl r0
    186c:	0000000c 	andeq	r0, r0, ip
    1870:	0000183c 	andeq	r1, r0, ip, lsr r8
    1874:	00000000 	andeq	r0, r0, r0
    1878:	0000000e 	andeq	r0, r0, lr
    187c:	0000000c 	andeq	r0, r0, ip
    1880:	0000183c 	andeq	r1, r0, ip, lsr r8
    1884:	00000000 	andeq	r0, r0, r0
    1888:	0000000e 	andeq	r0, r0, lr
    188c:	0000000c 	andeq	r0, r0, ip
    1890:	0000183c 	andeq	r1, r0, ip, lsr r8
    1894:	1000379c 	mulne	r0, ip, r7
    1898:	0000001a 	andeq	r0, r0, sl, lsl r0
    189c:	0000000c 	andeq	r0, r0, ip
    18a0:	0000183c 	andeq	r1, r0, ip, lsr r8
    18a4:	100037bc 			; <UNDEFINED> instruction: 0x100037bc
    18a8:	00000016 	andeq	r0, r0, r6, lsl r0
    18ac:	0000000c 	andeq	r0, r0, ip
    18b0:	0000183c 	andeq	r1, r0, ip, lsr r8
    18b4:	100037d2 	ldrdne	r3, [r0], -r2
    18b8:	0000000e 	andeq	r0, r0, lr
    18bc:	0000000c 	andeq	r0, r0, ip
    18c0:	0000183c 	andeq	r1, r0, ip, lsr r8
    18c4:	100037e0 	andne	r3, r0, r0, ror #15
    18c8:	00000044 	andeq	r0, r0, r4, asr #32
    18cc:	0000000c 	andeq	r0, r0, ip
    18d0:	0000183c 	andeq	r1, r0, ip, lsr r8
    18d4:	10003828 	andne	r3, r0, r8, lsr #16
    18d8:	00000012 	andeq	r0, r0, r2, lsl r0
    18dc:	0000000c 	andeq	r0, r0, ip
    18e0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    18e4:	7c020001 	stcvc	0, cr0, [r2], {1}
    18e8:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    18ec:	0000000c 	andeq	r0, r0, ip
    18f0:	000018dc 	ldrdeq	r1, [r0], -ip
    18f4:	10003918 	andne	r3, r0, r8, lsl r9
    18f8:	0000000c 	andeq	r0, r0, ip
    18fc:	0000000c 	andeq	r0, r0, ip
    1900:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1904:	7c020001 	stcvc	0, cr0, [r2], {1}
    1908:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    190c:	00000018 	andeq	r0, r0, r8, lsl r0
    1910:	000018fc 	strdeq	r1, [r0], -ip
    1914:	10003a10 	andne	r3, r0, r0, lsl sl
    1918:	000000a4 	andeq	r0, r0, r4, lsr #1
    191c:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    1920:	86038504 	strhi	r8, [r3], -r4, lsl #10
    1924:	00018e02 	andeq	r8, r1, r2, lsl #28
    1928:	0000000c 	andeq	r0, r0, ip
    192c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1930:	7c020001 	stcvc	0, cr0, [r2], {1}
    1934:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1938:	0000000c 	andeq	r0, r0, ip
    193c:	00001928 	andeq	r1, r0, r8, lsr #18
    1940:	10003ab4 			; <UNDEFINED> instruction: 0x10003ab4
    1944:	00000014 	andeq	r0, r0, r4, lsl r0
    1948:	00000044 	andeq	r0, r0, r4, asr #32
    194c:	00001928 	andeq	r1, r0, r8, lsr #18
    1950:	00000000 	andeq	r0, r0, r0
    1954:	000000c8 	andeq	r0, r0, r8, asr #1
    1958:	83280e42 			; <UNDEFINED> instruction: 0x83280e42
    195c:	8509840a 	strhi	r8, [r9, #-1034]	; 0xfffffbf6
    1960:	87078608 	strhi	r8, [r7, -r8, lsl #12]
    1964:	89058806 	stmdbhi	r5, {r1, r2, fp, pc}
    1968:	8b038a04 	blhi	e4180 <__HEAP_SIZE+0xe3180>
    196c:	46018e02 	strmi	r8, [r1], -r2, lsl #28
    1970:	5005300e 	andpl	r3, r5, lr
    1974:	0b51050c 	bleq	1442dac <__RAM_SIZE+0x1342dac>
    1978:	50060a60 	andpl	r0, r6, r0, ror #20
    197c:	280e5106 	stmdacs	lr, {r1, r2, r8, ip, lr}
    1980:	cacbce43 	bgt	ff2f5294 <__StackTop+0xc71f5294>
    1984:	c6c7c8c9 	strbgt	ip, [r7], r9, asr #17
    1988:	0ec3c4c5 	cdpeq	4, 12, cr12, cr3, cr5, {6}
    198c:	000b4200 	andeq	r4, fp, r0, lsl #4
    1990:	0000000c 	andeq	r0, r0, ip
    1994:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1998:	7c020001 	stcvc	0, cr0, [r2], {1}
    199c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    19a0:	0000000c 	andeq	r0, r0, ip
    19a4:	00001990 	muleq	r0, r0, r9
    19a8:	10003ac8 	andne	r3, r0, r8, asr #21
    19ac:	0000000c 	andeq	r0, r0, ip
    19b0:	0000000c 	andeq	r0, r0, ip
    19b4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    19b8:	7c020001 	stcvc	0, cr0, [r2], {1}
    19bc:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    19c0:	00000020 	andeq	r0, r0, r0, lsr #32
    19c4:	000019b0 			; <UNDEFINED> instruction: 0x000019b0
    19c8:	10003ad4 	ldrdne	r3, [r0], -r4
    19cc:	0000002c 	andeq	r0, r0, ip, lsr #32
    19d0:	83100e41 	tsthi	r0, #1040	; 0x410
    19d4:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    19d8:	4f018e02 	svcmi	0x00018e02
    19dc:	c3c4c5ce 	bicgt	ip, r4, #864026624	; 0x33800000
    19e0:	0000000e 	andeq	r0, r0, lr
    19e4:	0000000c 	andeq	r0, r0, ip
    19e8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    19ec:	7c020001 	stcvc	0, cr0, [r2], {1}
    19f0:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    19f4:	0000000c 	andeq	r0, r0, ip
    19f8:	000019e4 	andeq	r1, r0, r4, ror #19
    19fc:	00000000 	andeq	r0, r0, r0
    1a00:	00000002 	andeq	r0, r0, r2
    1a04:	0000000c 	andeq	r0, r0, ip
    1a08:	000019e4 	andeq	r1, r0, r4, ror #19
    1a0c:	00000000 	andeq	r0, r0, r0
    1a10:	00000002 	andeq	r0, r0, r2
    1a14:	0000000c 	andeq	r0, r0, ip
    1a18:	000019e4 	andeq	r1, r0, r4, ror #19
    1a1c:	00000000 	andeq	r0, r0, r0
    1a20:	00000002 	andeq	r0, r0, r2
    1a24:	0000000c 	andeq	r0, r0, ip
    1a28:	000019e4 	andeq	r1, r0, r4, ror #19
    1a2c:	00000000 	andeq	r0, r0, r0
    1a30:	00000002 	andeq	r0, r0, r2
    1a34:	0000000c 	andeq	r0, r0, ip
    1a38:	000019e4 	andeq	r1, r0, r4, ror #19
    1a3c:	00000000 	andeq	r0, r0, r0
    1a40:	00000002 	andeq	r0, r0, r2
    1a44:	0000000c 	andeq	r0, r0, ip
    1a48:	000019e4 	andeq	r1, r0, r4, ror #19
    1a4c:	10003b00 	andne	r3, r0, r0, lsl #22
    1a50:	00000002 	andeq	r0, r0, r2
    1a54:	0000000c 	andeq	r0, r0, ip
    1a58:	000019e4 	andeq	r1, r0, r4, ror #19
    1a5c:	00000000 	andeq	r0, r0, r0
    1a60:	00000004 	andeq	r0, r0, r4
    1a64:	0000000c 	andeq	r0, r0, ip
    1a68:	000019e4 	andeq	r1, r0, r4, ror #19
    1a6c:	00000000 	andeq	r0, r0, r0
    1a70:	00000004 	andeq	r0, r0, r4
    1a74:	0000000c 	andeq	r0, r0, ip
    1a78:	000019e4 	andeq	r1, r0, r4, ror #19
    1a7c:	00000000 	andeq	r0, r0, r0
    1a80:	00000002 	andeq	r0, r0, r2
    1a84:	0000000c 	andeq	r0, r0, ip
    1a88:	000019e4 	andeq	r1, r0, r4, ror #19
    1a8c:	10003b04 	andne	r3, r0, r4, lsl #22
    1a90:	00000002 	andeq	r0, r0, r2
    1a94:	0000000c 	andeq	r0, r0, ip
    1a98:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1a9c:	7c020001 	stcvc	0, cr0, [r2], {1}
    1aa0:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1aa4:	00000020 	andeq	r0, r0, r0, lsr #32
    1aa8:	00001a94 	muleq	r0, r4, sl
    1aac:	10003b08 	andne	r3, r0, r8, lsl #22
    1ab0:	00000090 	muleq	r0, r0, r0
    1ab4:	84200e42 	strthi	r0, [r0], #-3650	; 0xfffff1be
    1ab8:	86078508 	strhi	r8, [r7], -r8, lsl #10
    1abc:	88058706 	stmdahi	r5, {r1, r2, r8, r9, sl, pc}
    1ac0:	8a038904 	bhi	e3ed8 <__HEAP_SIZE+0xe2ed8>
    1ac4:	00018e02 	andeq	r8, r1, r2, lsl #28
    1ac8:	0000000c 	andeq	r0, r0, ip
    1acc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1ad0:	7c020001 	stcvc	0, cr0, [r2], {1}
    1ad4:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1ad8:	00000024 	andeq	r0, r0, r4, lsr #32
    1adc:	00001ac8 	andeq	r1, r0, r8, asr #21
    1ae0:	00000000 	andeq	r0, r0, r0
    1ae4:	00000048 	andeq	r0, r0, r8, asr #32
    1ae8:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
    1aec:	86058506 	strhi	r8, [r5], -r6, lsl #10
    1af0:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
    1af4:	60018e02 	andvs	r8, r1, r2, lsl #28
    1af8:	c6c7c8ce 	strbgt	ip, [r7], lr, asr #17
    1afc:	000ec4c5 	andeq	ip, lr, r5, asr #9
    1b00:	00000028 	andeq	r0, r0, r8, lsr #32
    1b04:	00001ac8 	andeq	r1, r0, r8, asr #21
    1b08:	00000000 	andeq	r0, r0, r0
    1b0c:	00000090 	muleq	r0, r0, r0
    1b10:	84100e46 	ldrhi	r0, [r0], #-3654	; 0xfffff1ba
    1b14:	86038504 	strhi	r8, [r3], -r4, lsl #10
    1b18:	7c018e02 	stcvc	14, cr8, [r1], {2}
    1b1c:	c5c6ce0a 	strbgt	ip, [r6, #3594]	; 0xe0a
    1b20:	42000ec4 	andmi	r0, r0, #196, 28	; 0xc40
    1b24:	000e410b 	andeq	r4, lr, fp, lsl #2
    1b28:	cec6c5c4 	cdpgt	5, 12, cr12, cr6, cr4, {6}
    1b2c:	0000000c 	andeq	r0, r0, ip
    1b30:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1b34:	7c020001 	stcvc	0, cr0, [r2], {1}
    1b38:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1b3c:	0000001c 	andeq	r0, r0, ip, lsl r0
    1b40:	00001b2c 	andeq	r1, r0, ip, lsr #22
    1b44:	10003b98 	mulne	r0, r8, fp
    1b48:	00000282 	andeq	r0, r0, r2, lsl #5
    1b4c:	0c0e470a 	stceq	7, cr4, [lr], {10}
    1b50:	02850384 	addeq	r0, r5, #132, 6	; 0x10000002
    1b54:	3a03018e 	bcc	c2194 <__HEAP_SIZE+0xc1194>
    1b58:	00000b01 	andeq	r0, r0, r1, lsl #22
    1b5c:	00000018 	andeq	r0, r0, r8, lsl r0
    1b60:	00001b2c 	andeq	r1, r0, ip, lsr #22
    1b64:	10003e1c 	andne	r3, r0, ip, lsl lr
    1b68:	0000001e 	andeq	r0, r0, lr, lsl r0
    1b6c:	0c0e460a 	stceq	6, cr4, [lr], {10}
    1b70:	02850384 	addeq	r0, r5, #132, 6	; 0x10000002
    1b74:	0b49018e 	bleq	12421b4 <__RAM_SIZE+0x11421b4>
    1b78:	00000018 	andeq	r0, r0, r8, lsl r0
    1b7c:	00001b2c 	andeq	r1, r0, ip, lsr #22
    1b80:	10003e3c 	andne	r3, r0, ip, lsr lr
    1b84:	00000022 	andeq	r0, r0, r2, lsr #32
    1b88:	0c0e460a 	stceq	6, cr4, [lr], {10}
    1b8c:	02850384 	addeq	r0, r5, #132, 6	; 0x10000002
    1b90:	0b4b018e 	bleq	12c21d0 <__RAM_SIZE+0x11c21d0>
    1b94:	00000018 	andeq	r0, r0, r8, lsl r0
    1b98:	00001b2c 	andeq	r1, r0, ip, lsr #22
    1b9c:	10003e60 	andne	r3, r0, r0, ror #28
    1ba0:	00000042 	andeq	r0, r0, r2, asr #32
    1ba4:	0c0e5a0a 			; <UNDEFINED> instruction: 0x0c0e5a0a
    1ba8:	02850384 	addeq	r0, r5, #132, 6	; 0x10000002
    1bac:	0b47018e 	bleq	11c21ec <__RAM_SIZE+0x10c21ec>
    1bb0:	00000024 	andeq	r0, r0, r4, lsr #32
    1bb4:	00001b2c 	andeq	r1, r0, ip, lsr #22
    1bb8:	10003ea4 	andne	r3, r0, r4, lsr #29
    1bbc:	0000006a 	andeq	r0, r0, sl, rrx
    1bc0:	0e450a0a 	vmlaeq.f32	s1, s10, s20
    1bc4:	8503840c 	strhi	r8, [r3, #-1036]	; 0xfffffbf4
    1bc8:	43018e02 	movwmi	r8, #7682	; 0x1e02
    1bcc:	0c0e450b 	cfstr32eq	mvfx4, [lr], {11}
    1bd0:	02850384 	addeq	r0, r5, #132, 6	; 0x10000002
    1bd4:	0b68018e 	bleq	1a02214 <__RAM_SIZE+0x1902214>
    1bd8:	0000000c 	andeq	r0, r0, ip
    1bdc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1be0:	7c020001 	stcvc	0, cr0, [r2], {1}
    1be4:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1be8:	0000001c 	andeq	r0, r0, ip, lsl r0
    1bec:	00001bd8 	ldrdeq	r1, [r0], -r8
    1bf0:	10003f10 	andne	r3, r0, r0, lsl pc
    1bf4:	00000254 	andeq	r0, r0, r4, asr r2
    1bf8:	100e410a 	andne	r4, lr, sl, lsl #2
    1bfc:	03850484 	orreq	r0, r5, #132, 8	; 0x84000000
    1c00:	018e0286 	orreq	r0, lr, r6, lsl #5
    1c04:	0b012903 	bleq	4c018 <__HEAP_SIZE+0x4b018>
    1c08:	0000001c 	andeq	r0, r0, ip, lsl r0
    1c0c:	00001bd8 	ldrdeq	r1, [r0], -r8
    1c10:	10004164 	andne	r4, r0, r4, ror #2
    1c14:	000001d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    1c18:	100e410a 	andne	r4, lr, sl, lsl #2
    1c1c:	03850484 	orreq	r0, r5, #132, 8	; 0x84000000
    1c20:	018e0286 	orreq	r0, lr, r6, lsl #5
    1c24:	000be702 	andeq	lr, fp, r2, lsl #14
    1c28:	0000000c 	andeq	r0, r0, ip
    1c2c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1c30:	7c020001 	stcvc	0, cr0, [r2], {1}
    1c34:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1c38:	0000001c 	andeq	r0, r0, ip, lsl r0
    1c3c:	00001c28 	andeq	r1, r0, r8, lsr #24
    1c40:	10004334 	andne	r4, r0, r4, lsr r3
    1c44:	0000008a 	andeq	r0, r0, sl, lsl #1
    1c48:	040e4c0a 	streq	r4, [lr], #-3082	; 0xfffff3f6
    1c4c:	0e410a4a 	vmlseq.f32	s1, s2, s20
    1c50:	520b5b00 	andpl	r5, fp, #0, 22
    1c54:	0b41000e 	bleq	1041c94 <__RAM_SIZE+0xf41c94>
    1c58:	00000018 	andeq	r0, r0, r8, lsl r0
    1c5c:	00001c28 	andeq	r1, r0, r8, lsr #24
    1c60:	100043c0 	andne	r4, r0, r0, asr #7
    1c64:	00000020 	andeq	r0, r0, r0, lsr #32
    1c68:	080e490a 	stmdaeq	lr, {r1, r3, r8, fp, lr}
    1c6c:	018e0280 	orreq	r0, lr, r0, lsl #5
    1c70:	00000b47 	andeq	r0, r0, r7, asr #22
    1c74:	00000014 	andeq	r0, r0, r4, lsl r0
    1c78:	00001c28 	andeq	r1, r0, r8, lsr #24
    1c7c:	100043e0 	andne	r4, r0, r0, ror #7
    1c80:	00000012 	andeq	r0, r0, r2, lsl r0
    1c84:	080e420a 	stmdaeq	lr, {r1, r3, r9, lr}
    1c88:	0b47028e 	bleq	11c26c8 <__RAM_SIZE+0x10c26c8>
    1c8c:	00000014 	andeq	r0, r0, r4, lsl r0
    1c90:	00001c28 	andeq	r1, r0, r8, lsr #24
    1c94:	100043f4 	strdne	r4, [r0], -r4	; <UNPREDICTABLE>
    1c98:	00000012 	andeq	r0, r0, r2, lsl r0
    1c9c:	080e420a 	stmdaeq	lr, {r1, r3, r9, lr}
    1ca0:	0b47028e 	bleq	11c26e0 <__RAM_SIZE+0x10c26e0>
    1ca4:	00000014 	andeq	r0, r0, r4, lsl r0
    1ca8:	00001c28 	andeq	r1, r0, r8, lsr #24
    1cac:	10004408 	andne	r4, r0, r8, lsl #8
    1cb0:	00000012 	andeq	r0, r0, r2, lsl r0
    1cb4:	080e420a 	stmdaeq	lr, {r1, r3, r9, lr}
    1cb8:	0b47028e 	bleq	11c26f8 <__RAM_SIZE+0x10c26f8>
    1cbc:	00000014 	andeq	r0, r0, r4, lsl r0
    1cc0:	00001c28 	andeq	r1, r0, r8, lsr #24
    1cc4:	1000441c 	andne	r4, r0, ip, lsl r4
    1cc8:	00000012 	andeq	r0, r0, r2, lsl r0
    1ccc:	080e420a 	stmdaeq	lr, {r1, r3, r9, lr}
    1cd0:	0b47028e 	bleq	11c2710 <__RAM_SIZE+0x10c2710>
    1cd4:	00000014 	andeq	r0, r0, r4, lsl r0
    1cd8:	00001c28 	andeq	r1, r0, r8, lsr #24
    1cdc:	10004430 	andne	r4, r0, r0, lsr r4
    1ce0:	00000012 	andeq	r0, r0, r2, lsl r0
    1ce4:	080e420a 	stmdaeq	lr, {r1, r3, r9, lr}
    1ce8:	0b47028e 	bleq	11c2728 <__RAM_SIZE+0x10c2728>
    1cec:	0000000c 	andeq	r0, r0, ip
    1cf0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1cf4:	7c020001 	stcvc	0, cr0, [r2], {1}
    1cf8:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1cfc:	00000010 	andeq	r0, r0, r0, lsl r0
    1d00:	00001cec 	andeq	r1, r0, ip, ror #25
    1d04:	10004444 	andne	r4, r0, r4, asr #8
    1d08:	0000004e 	andeq	r0, r0, lr, asr #32
    1d0c:	000b670a 	andeq	r6, fp, sl, lsl #14
    1d10:	0000000c 	andeq	r0, r0, ip
    1d14:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1d18:	7c020001 	stcvc	0, cr0, [r2], {1}
    1d1c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1d20:	00000010 	andeq	r0, r0, r0, lsl r0
    1d24:	00001d10 	andeq	r1, r0, r0, lsl sp
    1d28:	10004494 	mulne	r0, r4, r4
    1d2c:	00000040 	andeq	r0, r0, r0, asr #32
    1d30:	000b600a 	andeq	r6, fp, sl
    1d34:	0000000c 	andeq	r0, r0, ip
    1d38:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1d3c:	7c020001 	stcvc	0, cr0, [r2], {1}
    1d40:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1d44:	00000018 	andeq	r0, r0, r8, lsl r0
    1d48:	00001d34 	andeq	r1, r0, r4, lsr sp
    1d4c:	100044d4 	ldrdne	r4, [r0], -r4	; <UNPREDICTABLE>
    1d50:	00000030 	andeq	r0, r0, r0, lsr r0
    1d54:	8e100e50 	mrchi	14, 0, r0, cr0, cr0, {2}
    1d58:	0ece4703 	cdpeq	7, 12, cr4, cr14, cr3, {0}
    1d5c:	00000010 	andeq	r0, r0, r0, lsl r0
    1d60:	0000000c 	andeq	r0, r0, ip
    1d64:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1d68:	7c020001 	stcvc	0, cr0, [r2], {1}
    1d6c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1d70:	00000024 	andeq	r0, r0, r4, lsr #32
    1d74:	00001d60 	andeq	r1, r0, r0, ror #26
    1d78:	10004504 	andne	r4, r0, r4, lsl #10
    1d7c:	000002ec 	andeq	r0, r0, ip, ror #5
    1d80:	84240e42 	strthi	r0, [r4], #-3650	; 0xfffff1be
    1d84:	86088509 	strhi	r8, [r8], -r9, lsl #10
    1d88:	88068707 	stmdahi	r6, {r0, r1, r2, r8, r9, sl, pc}
    1d8c:	8a048905 	bhi	1241a8 <__RAM_SIZE+0x241a8>
    1d90:	8e028b03 	vmlahi.f64	d8, d2, d3
    1d94:	00000001 	andeq	r0, r0, r1
    1d98:	0000000c 	andeq	r0, r0, ip
    1d9c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1da0:	7c020001 	stcvc	0, cr0, [r2], {1}
    1da4:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1da8:	0000000c 	andeq	r0, r0, ip
    1dac:	00001d98 	muleq	r0, r8, sp
    1db0:	100047f0 	strdne	r4, [r0], -r0
    1db4:	00000012 	andeq	r0, r0, r2, lsl r0
    1db8:	00000020 	andeq	r0, r0, r0, lsr #32
    1dbc:	00001d98 	muleq	r0, r8, sp
    1dc0:	10004804 	andne	r4, r0, r4, lsl #16
    1dc4:	00000060 	andeq	r0, r0, r0, rrx
    1dc8:	84200e42 	strthi	r0, [r0], #-3650	; 0xfffff1be
    1dcc:	86078508 	strhi	r8, [r7], -r8, lsl #10
    1dd0:	88058706 	stmdahi	r5, {r1, r2, r8, r9, sl, pc}
    1dd4:	8a038904 	bhi	e41ec <__HEAP_SIZE+0xe31ec>
    1dd8:	00018e02 	andeq	r8, r1, r2, lsl #28
    1ddc:	0000000c 	andeq	r0, r0, ip
    1de0:	00001d98 	muleq	r0, r8, sp
    1de4:	10004864 	andne	r4, r0, r4, ror #16
    1de8:	00000028 	andeq	r0, r0, r8, lsr #32
    1dec:	0000002c 	andeq	r0, r0, ip, lsr #32
    1df0:	00001d98 	muleq	r0, r8, sp
    1df4:	1000488c 	andne	r4, r0, ip, lsl #17
    1df8:	0000009c 	muleq	r0, ip, r0
    1dfc:	840c0e42 	strhi	r0, [ip], #-3650	; 0xfffff1be
    1e00:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
    1e04:	180e4201 	stmdane	lr, {r0, r9, lr}
    1e08:	0c0e0a65 			; <UNDEFINED> instruction: 0x0c0e0a65
    1e0c:	0a440b41 	beq	1104b18 <__RAM_SIZE+0x1004b18>
    1e10:	0b410c0e 	bleq	1044e50 <__RAM_SIZE+0xf44e50>
    1e14:	0c0e0a50 			; <UNDEFINED> instruction: 0x0c0e0a50
    1e18:	00000b41 	andeq	r0, r0, r1, asr #22
    1e1c:	00000018 	andeq	r0, r0, r8, lsl r0
    1e20:	00001d98 	muleq	r0, r8, sp
    1e24:	10004928 	andne	r4, r0, r8, lsr #18
    1e28:	00000058 	andeq	r0, r0, r8, asr r0
    1e2c:	84080e43 	strhi	r0, [r8], #-3651	; 0xfffff1bd
    1e30:	67018e02 	strvs	r8, [r1, -r2, lsl #28]
    1e34:	000ec4ce 	andeq	ip, lr, lr, asr #9
    1e38:	0000000c 	andeq	r0, r0, ip
    1e3c:	00001d98 	muleq	r0, r8, sp
    1e40:	10004980 	andne	r4, r0, r0, lsl #19
    1e44:	00000004 	andeq	r0, r0, r4
    1e48:	0000000c 	andeq	r0, r0, ip
    1e4c:	00001d98 	muleq	r0, r8, sp
    1e50:	10004984 	andne	r4, r0, r4, lsl #19
    1e54:	0000000a 	andeq	r0, r0, sl
    1e58:	0000000c 	andeq	r0, r0, ip
    1e5c:	00001d98 	muleq	r0, r8, sp
    1e60:	10004990 	mulne	r0, r0, r9
    1e64:	00000002 	andeq	r0, r0, r2
    1e68:	00000018 	andeq	r0, r0, r8, lsl r0
    1e6c:	00001d98 	muleq	r0, r8, sp
    1e70:	10004994 	mulne	r0, r4, r9
    1e74:	0000003e 	andeq	r0, r0, lr, lsr r0
    1e78:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    1e7c:	86038504 	strhi	r8, [r3], -r4, lsl #10
    1e80:	00018e02 	andeq	r8, r1, r2, lsl #28
    1e84:	0000002c 	andeq	r0, r0, ip, lsr #32
    1e88:	00001d98 	muleq	r0, r8, sp
    1e8c:	100049d4 	ldrdne	r4, [r0], -r4	; <UNPREDICTABLE>
    1e90:	000000da 	ldrdeq	r0, [r0], -sl
    1e94:	84200e42 	strthi	r0, [r0], #-3650	; 0xfffff1be
    1e98:	86078508 	strhi	r8, [r7], -r8, lsl #10
    1e9c:	88058706 	stmdahi	r5, {r1, r2, r8, r9, sl, pc}
    1ea0:	8a038904 	bhi	e42b8 <__HEAP_SIZE+0xe32b8>
    1ea4:	44018e02 	strmi	r8, [r1], #-3586	; 0xfffff1fe
    1ea8:	0207f00e 	andeq	pc, r7, #14
    1eac:	200e0a5b 	andcs	r0, lr, fp, asr sl
    1eb0:	00000b42 	andeq	r0, r0, r2, asr #22
    1eb4:	0000000c 	andeq	r0, r0, ip
    1eb8:	00001d98 	muleq	r0, r8, sp
    1ebc:	10004ab0 			; <UNDEFINED> instruction: 0x10004ab0
    1ec0:	00000004 	andeq	r0, r0, r4
    1ec4:	00000024 	andeq	r0, r0, r4, lsr #32
    1ec8:	00001d98 	muleq	r0, r8, sp
    1ecc:	10004ab4 			; <UNDEFINED> instruction: 0x10004ab4
    1ed0:	00000066 	andeq	r0, r0, r6, rrx
    1ed4:	84140e41 	ldrhi	r0, [r4], #-3649	; 0xfffff1bf
    1ed8:	86048505 	strhi	r8, [r4], -r5, lsl #10
    1edc:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
    1ee0:	f80e4201 			; <UNDEFINED> instruction: 0xf80e4201
    1ee4:	0e0a6603 	cfmadd32eq	mvax0, mvfx6, mvfx10, mvfx3
    1ee8:	000b4114 	andeq	r4, fp, r4, lsl r1
    1eec:	00000018 	andeq	r0, r0, r8, lsl r0
    1ef0:	00001d98 	muleq	r0, r8, sp
    1ef4:	10004b1c 	andne	r4, r0, ip, lsl fp
    1ef8:	00000012 	andeq	r0, r0, r2, lsl r0
    1efc:	84040e41 	strhi	r0, [r4], #-3649	; 0xfffff1bf
    1f00:	0ec44701 	cdpeq	7, 12, cr4, cr4, cr1, {0}
    1f04:	00000000 	andeq	r0, r0, r0
    1f08:	00000018 	andeq	r0, r0, r8, lsl r0
    1f0c:	00001d98 	muleq	r0, r8, sp
    1f10:	10004b30 	andne	r4, r0, r0, lsr fp
    1f14:	00000044 	andeq	r0, r0, r4, asr #32
    1f18:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    1f1c:	86038504 	strhi	r8, [r3], -r4, lsl #10
    1f20:	00018e02 	andeq	r8, r1, r2, lsl #28
    1f24:	0000000c 	andeq	r0, r0, ip
    1f28:	00001d98 	muleq	r0, r8, sp
    1f2c:	10004b74 	andne	r4, r0, r4, ror fp
    1f30:	00000012 	andeq	r0, r0, r2, lsl r0
    1f34:	0000000c 	andeq	r0, r0, ip
    1f38:	00001d98 	muleq	r0, r8, sp
    1f3c:	10004b88 	andne	r4, r0, r8, lsl #23
    1f40:	00000002 	andeq	r0, r0, r2
    1f44:	0000000c 	andeq	r0, r0, ip
    1f48:	00001d98 	muleq	r0, r8, sp
    1f4c:	10004b8c 	andne	r4, r0, ip, lsl #23
    1f50:	0000000c 	andeq	r0, r0, ip
    1f54:	0000000c 	andeq	r0, r0, ip
    1f58:	00001d98 	muleq	r0, r8, sp
    1f5c:	10004b98 	mulne	r0, r8, fp
    1f60:	00000034 	andeq	r0, r0, r4, lsr r0
    1f64:	0000001c 	andeq	r0, r0, ip, lsl r0
    1f68:	00001d98 	muleq	r0, r8, sp
    1f6c:	10004bcc 	andne	r4, r0, ip, asr #23
    1f70:	00000018 	andeq	r0, r0, r8, lsl r0
    1f74:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    1f78:	41018e02 	tstmi	r1, r2, lsl #28
    1f7c:	0e49180e 	cdpeq	8, 4, cr1, cr9, cr14, {0}
    1f80:	00000008 	andeq	r0, r0, r8
    1f84:	0000000c 	andeq	r0, r0, ip
    1f88:	00001d98 	muleq	r0, r8, sp
    1f8c:	10004be4 	andne	r4, r0, r4, ror #23
    1f90:	00000034 	andeq	r0, r0, r4, lsr r0
    1f94:	0000001c 	andeq	r0, r0, ip, lsl r0
    1f98:	00001d98 	muleq	r0, r8, sp
    1f9c:	10004c18 	andne	r4, r0, r8, lsl ip
    1fa0:	00000018 	andeq	r0, r0, r8, lsl r0
    1fa4:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    1fa8:	41018e02 	tstmi	r1, r2, lsl #28
    1fac:	0e49180e 	cdpeq	8, 4, cr1, cr9, cr14, {0}
    1fb0:	00000008 	andeq	r0, r0, r8
    1fb4:	00000020 	andeq	r0, r0, r0, lsr #32
    1fb8:	00001d98 	muleq	r0, r8, sp
    1fbc:	10004c30 	andne	r4, r0, r0, lsr ip
    1fc0:	0000007c 	andeq	r0, r0, ip, ror r0
    1fc4:	84140e41 	ldrhi	r0, [r4], #-3649	; 0xfffff1bf
    1fc8:	86048505 	strhi	r8, [r4], -r5, lsl #10
    1fcc:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
    1fd0:	d00e4301 	andle	r4, lr, r1, lsl #6
    1fd4:	140e7904 	strne	r7, [lr], #-2308	; 0xfffff6fc
    1fd8:	00000030 	andeq	r0, r0, r0, lsr r0
    1fdc:	00001d98 	muleq	r0, r8, sp
    1fe0:	10004cac 	andne	r4, r0, ip, lsr #25
    1fe4:	000002c8 	andeq	r0, r0, r8, asr #5
    1fe8:	84240e42 	strthi	r0, [r4], #-3650	; 0xfffff1be
    1fec:	86088509 	strhi	r8, [r8], -r9, lsl #10
    1ff0:	88068707 	stmdahi	r6, {r0, r1, r2, r8, r9, sl, pc}
    1ff4:	8a048905 	bhi	124410 <__RAM_SIZE+0x24410>
    1ff8:	8e028b03 	vmlahi.f64	d8, d2, d3
    1ffc:	480e4201 	stmdami	lr, {r0, r9, lr}
    2000:	240e0a64 	strcs	r0, [lr], #-2660	; 0xfffff59c
    2004:	0a710b42 	beq	1c44d14 <__RAM_SIZE+0x1b44d14>
    2008:	0b42240e 	bleq	108b048 <__RAM_SIZE+0xf8b048>
    200c:	0000000c 	andeq	r0, r0, ip
    2010:	00001d98 	muleq	r0, r8, sp
    2014:	10004f74 	andne	r4, r0, r4, ror pc
    2018:	00000004 	andeq	r0, r0, r4
    201c:	0000000c 	andeq	r0, r0, ip
    2020:	00001d98 	muleq	r0, r8, sp
    2024:	10004f78 	andne	r4, r0, r8, ror pc
    2028:	00000004 	andeq	r0, r0, r4
    202c:	0000000c 	andeq	r0, r0, ip
    2030:	00001d98 	muleq	r0, r8, sp
    2034:	10004f7c 	andne	r4, r0, ip, ror pc
    2038:	00000004 	andeq	r0, r0, r4
    203c:	0000003c 	andeq	r0, r0, ip, lsr r0
    2040:	00001d98 	muleq	r0, r8, sp
    2044:	10004f80 	andne	r4, r0, r0, lsl #31
    2048:	000002b4 			; <UNDEFINED> instruction: 0x000002b4
    204c:	841c0e42 	ldrhi	r0, [ip], #-3650	; 0xfffff1be
    2050:	86068507 	strhi	r8, [r6], -r7, lsl #10
    2054:	88048705 	stmdahi	r4, {r0, r2, r8, r9, sl, pc}
    2058:	8e028903 	vmlahi.f16	s16, s4, s6	; <UNPREDICTABLE>
    205c:	a80e4201 	stmdage	lr, {r0, r9, lr}
    2060:	0e0a7102 	adfeqe	f7, f2, f2
    2064:	6b0b421c 	blvs	2d28dc <__RAM_SIZE+0x1d28dc>
    2068:	421c0e0a 	andsmi	r0, ip, #10, 28	; 0xa0
    206c:	0a48020b 	beq	12028a0 <__RAM_SIZE+0x11028a0>
    2070:	0b421c0e 	bleq	10890b0 <__RAM_SIZE+0xf890b0>
    2074:	1c0e0a5f 			; <UNDEFINED> instruction: 0x1c0e0a5f
    2078:	00000b42 	andeq	r0, r0, r2, asr #22
    207c:	0000000c 	andeq	r0, r0, ip
    2080:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    2084:	7c020001 	stcvc	0, cr0, [r2], {1}
    2088:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    208c:	00000018 	andeq	r0, r0, r8, lsl r0
    2090:	0000207c 	andeq	r2, r0, ip, ror r0
    2094:	100053e0 	andne	r5, r0, r0, ror #7
    2098:	0000003c 	andeq	r0, r0, ip, lsr r0
    209c:	84040e4a 	strhi	r0, [r4], #-3658	; 0xfffff1b6
    20a0:	0ec44901 	vdiveq.f16	s9, s8, s2	; <UNPREDICTABLE>
    20a4:	00000000 	andeq	r0, r0, r0
    20a8:	0000001c 	andeq	r0, r0, ip, lsl r0
    20ac:	0000207c 	andeq	r2, r0, ip, ror r0
    20b0:	1000541c 	andne	r5, r0, ip, lsl r4
    20b4:	00000018 	andeq	r0, r0, r8, lsl r0
    20b8:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    20bc:	41018e02 	tstmi	r1, r2, lsl #28
    20c0:	0e49180e 	cdpeq	8, 4, cr1, cr9, cr14, {0}
    20c4:	00000008 	andeq	r0, r0, r8
    20c8:	0000000c 	andeq	r0, r0, ip
    20cc:	0000207c 	andeq	r2, r0, ip, ror r0
    20d0:	10005434 	andne	r5, r0, r4, lsr r4
    20d4:	00000002 	andeq	r0, r0, r2
    20d8:	00000028 	andeq	r0, r0, r8, lsr #32
    20dc:	0000207c 	andeq	r2, r0, ip, ror r0
    20e0:	10005438 	andne	r5, r0, r8, lsr r4
    20e4:	000002ca 	andeq	r0, r0, sl, asr #5
    20e8:	841c0e42 	ldrhi	r0, [ip], #-3650	; 0xfffff1be
    20ec:	86068507 	strhi	r8, [r6], -r7, lsl #10
    20f0:	88048705 	stmdahi	r4, {r0, r2, r8, r9, sl, pc}
    20f4:	8e028903 	vmlahi.f16	s16, s4, s6	; <UNPREDICTABLE>
    20f8:	300e4301 	andcc	r4, lr, r1, lsl #6
    20fc:	1c0e0a6a 			; <UNDEFINED> instruction: 0x1c0e0a6a
    2100:	00000b42 	andeq	r0, r0, r2, asr #22
    2104:	00000018 	andeq	r0, r0, r8, lsl r0
    2108:	0000207c 	andeq	r2, r0, ip, ror r0
    210c:	10005704 	andne	r5, r0, r4, lsl #14
    2110:	00000030 	andeq	r0, r0, r0, lsr r0
    2114:	8e040e49 	cdphi	14, 0, cr0, cr4, cr9, {2}
    2118:	180e4101 	stmdane	lr, {r0, r8, lr}
    211c:	00040e4c 	andeq	r0, r4, ip, asr #28
    2120:	00000014 	andeq	r0, r0, r4, lsl r0
    2124:	0000207c 	andeq	r2, r0, ip, ror r0
    2128:	10005734 	andne	r5, r0, r4, lsr r7
    212c:	0000000a 	andeq	r0, r0, sl
    2130:	83080e41 	movwhi	r0, #36417	; 0x8e41
    2134:	00018e02 	andeq	r8, r1, r2, lsl #28
    2138:	00000014 	andeq	r0, r0, r4, lsl r0
    213c:	0000207c 	andeq	r2, r0, ip, ror r0
    2140:	10005740 	andne	r5, r0, r0, asr #14
    2144:	00000012 	andeq	r0, r0, r2, lsl r0
    2148:	83080e41 	movwhi	r0, #36417	; 0x8e41
    214c:	00018e02 	andeq	r8, r1, r2, lsl #28
    2150:	00000014 	andeq	r0, r0, r4, lsl r0
    2154:	0000207c 	andeq	r2, r0, ip, ror r0
    2158:	00000000 	andeq	r0, r0, r0
    215c:	00000006 	andeq	r0, r0, r6
    2160:	83080e41 	movwhi	r0, #36417	; 0x8e41
    2164:	00018e02 	andeq	r8, r1, r2, lsl #28
    2168:	00000014 	andeq	r0, r0, r4, lsl r0
    216c:	0000207c 	andeq	r2, r0, ip, ror r0
    2170:	00000000 	andeq	r0, r0, r0
    2174:	00000006 	andeq	r0, r0, r6
    2178:	83080e41 	movwhi	r0, #36417	; 0x8e41
    217c:	00018e02 	andeq	r8, r1, r2, lsl #28
    2180:	0000000c 	andeq	r0, r0, ip
    2184:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    2188:	7c020001 	stcvc	0, cr0, [r2], {1}
    218c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    2190:	00000014 	andeq	r0, r0, r4, lsl r0
    2194:	00002180 	andeq	r2, r0, r0, lsl #3
    2198:	10005758 	andne	r5, r0, r8, asr r7
    219c:	0000000e 	andeq	r0, r0, lr
    21a0:	83080e42 	movwhi	r0, #36418	; 0x8e42
    21a4:	00018e02 	andeq	r8, r1, r2, lsl #28
    21a8:	0000000c 	andeq	r0, r0, ip
    21ac:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    21b0:	7c020001 	stcvc	0, cr0, [r2], {1}
    21b4:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    21b8:	00000018 	andeq	r0, r0, r8, lsl r0
    21bc:	000021a8 	andeq	r2, r0, r8, lsr #3
    21c0:	00000000 	andeq	r0, r0, r0
    21c4:	00000030 	andeq	r0, r0, r0, lsr r0
    21c8:	83100e41 	tsthi	r0, #1040	; 0x410
    21cc:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    21d0:	00018e02 	andeq	r8, r1, r2, lsl #28
    21d4:	0000001c 	andeq	r0, r0, ip, lsl r0
    21d8:	000021a8 	andeq	r2, r0, r8, lsr #3
    21dc:	00000000 	andeq	r0, r0, r0
    21e0:	0000004c 	andeq	r0, r0, ip, asr #32
    21e4:	83180e42 	tsthi	r8, #1056	; 0x420
    21e8:	85058406 	strhi	r8, [r5, #-1030]	; 0xfffffbfa
    21ec:	87038604 	strhi	r8, [r3, -r4, lsl #12]
    21f0:	00018e02 	andeq	r8, r1, r2, lsl #28
    21f4:	00000024 	andeq	r0, r0, r4, lsr #32
    21f8:	000021a8 	andeq	r2, r0, r8, lsr #3
    21fc:	00000000 	andeq	r0, r0, r0
    2200:	00000056 	andeq	r0, r0, r6, asr r0
    2204:	83100e42 	tsthi	r0, #1056	; 0x420
    2208:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    220c:	5c018e02 	stcpl	14, cr8, [r1], {2}
    2210:	c4c5ce0a 	strbgt	ip, [r5], #3594	; 0xe0a
    2214:	42000ec3 	andmi	r0, r0, #3120	; 0xc30
    2218:	0000000b 	andeq	r0, r0, fp
    221c:	00000020 	andeq	r0, r0, r0, lsr #32
    2220:	000021a8 	andeq	r2, r0, r8, lsr #3
    2224:	00000000 	andeq	r0, r0, r0
    2228:	00000064 	andeq	r0, r0, r4, rrx
    222c:	83100e45 	tsthi	r0, #1104	; 0x450
    2230:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    2234:	6a018e02 	bvs	65a44 <__HEAP_SIZE+0x64a44>
    2238:	c4c3000e 	strbgt	r0, [r3], #14
    223c:	0000cec5 	andeq	ip, r0, r5, asr #29
    2240:	00000024 	andeq	r0, r0, r4, lsr #32
    2244:	000021a8 	andeq	r2, r0, r8, lsr #3
    2248:	10005768 	andne	r5, r0, r8, ror #14
    224c:	0000005c 	andeq	r0, r0, ip, asr r0
    2250:	83100e41 	tsthi	r0, #1040	; 0x410
    2254:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    2258:	5d018e02 	stcpl	14, cr8, [r1, #-8]
    225c:	c4c5ce0a 	strbgt	ip, [r5], #3594	; 0xe0a
    2260:	42000ec3 	andmi	r0, r0, #3120	; 0xc30
    2264:	0000000b 	andeq	r0, r0, fp
    2268:	00000018 	andeq	r0, r0, r8, lsl r0
    226c:	000021a8 	andeq	r2, r0, r8, lsr #3
    2270:	00000000 	andeq	r0, r0, r0
    2274:	00000054 	andeq	r0, r0, r4, asr r0
    2278:	84100e43 	ldrhi	r0, [r0], #-3651	; 0xfffff1bd
    227c:	86038504 	strhi	r8, [r3], -r4, lsl #10
    2280:	00018e02 	andeq	r8, r1, r2, lsl #28
    2284:	00000018 	andeq	r0, r0, r8, lsl r0
    2288:	000021a8 	andeq	r2, r0, r8, lsr #3
    228c:	00000000 	andeq	r0, r0, r0
    2290:	00000038 	andeq	r0, r0, r8, lsr r0
    2294:	83100e41 	tsthi	r0, #1040	; 0x410
    2298:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    229c:	00018e02 	andeq	r8, r1, r2, lsl #28
    22a0:	00000018 	andeq	r0, r0, r8, lsl r0
    22a4:	000021a8 	andeq	r2, r0, r8, lsr #3
    22a8:	00000000 	andeq	r0, r0, r0
    22ac:	00000068 	andeq	r0, r0, r8, rrx
    22b0:	83100e41 	tsthi	r0, #1040	; 0x410
    22b4:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    22b8:	00018e02 	andeq	r8, r1, r2, lsl #28
    22bc:	0000000c 	andeq	r0, r0, ip
    22c0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    22c4:	7c020001 	stcvc	0, cr0, [r2], {1}
    22c8:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    22cc:	00000018 	andeq	r0, r0, r8, lsl r0
    22d0:	000022bc 			; <UNDEFINED> instruction: 0x000022bc
    22d4:	100057c4 	andne	r5, r0, r4, asr #15
    22d8:	0000002c 	andeq	r0, r0, ip, lsr #32
    22dc:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    22e0:	86038504 	strhi	r8, [r3], -r4, lsl #10
    22e4:	00018e02 	andeq	r8, r1, r2, lsl #28
    22e8:	0000000c 	andeq	r0, r0, ip
    22ec:	000022bc 			; <UNDEFINED> instruction: 0x000022bc
    22f0:	100057f0 	strdne	r5, [r0], -r0
    22f4:	00000004 	andeq	r0, r0, r4

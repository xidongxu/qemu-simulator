
.\build\gcc/an505-qemu.elf:     file format elf32-littlearm


Disassembly of section .text:

10000000 <__Vectors>:
10000000:	38100000 	ldmdacc	r0, {}	; <UNPREDICTABLE>
10000004:	100038a5 	andne	r3, r0, r5, lsr #17
10000008:	100038f9 	strdne	r3, [r0], -r9
1000000c:	10003915 	andne	r3, r0, r5, lsl r9
10000010:	100038f9 	strdne	r3, [r0], -r9
10000014:	100038f9 	strdne	r3, [r0], -r9
10000018:	100038f9 	strdne	r3, [r0], -r9
1000001c:	100038f9 	strdne	r3, [r0], -r9
	...
1000002c:	1000386d 	andne	r3, r0, sp, ror #16
10000030:	100038f9 	strdne	r3, [r0], -r9
10000034:	00000000 	andeq	r0, r0, r0
10000038:	10003825 	andne	r3, r0, r5, lsr #16
1000003c:	100036ad 	andne	r3, r0, sp, lsr #13
10000040:	100038f9 	strdne	r3, [r0], -r9
10000044:	100038f9 	strdne	r3, [r0], -r9
10000048:	100038f9 	strdne	r3, [r0], -r9
1000004c:	100038f9 	strdne	r3, [r0], -r9
10000050:	100038f9 	strdne	r3, [r0], -r9
10000054:	100038f9 	strdne	r3, [r0], -r9
10000058:	100038f9 	strdne	r3, [r0], -r9
1000005c:	100038f9 	strdne	r3, [r0], -r9
10000060:	100038f9 	strdne	r3, [r0], -r9
10000064:	100038f9 	strdne	r3, [r0], -r9
	...

100007c0 <__do_global_dtors_aux>:
100007c0:	b510      	push	{r4, lr}
100007c2:	4c05      	ldr	r4, [pc, #20]	; (100007d8 <__do_global_dtors_aux+0x18>)
100007c4:	7823      	ldrb	r3, [r4, #0]
100007c6:	b933      	cbnz	r3, 100007d6 <__do_global_dtors_aux+0x16>
100007c8:	4b04      	ldr	r3, [pc, #16]	; (100007dc <__do_global_dtors_aux+0x1c>)
100007ca:	b113      	cbz	r3, 100007d2 <__do_global_dtors_aux+0x12>
100007cc:	4804      	ldr	r0, [pc, #16]	; (100007e0 <__do_global_dtors_aux+0x20>)
100007ce:	e000      	b.n	100007d2 <__do_global_dtors_aux+0x12>
100007d0:	bf00      	nop
100007d2:	2301      	movs	r3, #1
100007d4:	7023      	strb	r3, [r4, #0]
100007d6:	bd10      	pop	{r4, pc}
100007d8:	38000450 	stmdacc	r0, {r4, r6, sl}
100007dc:	00000000 	andeq	r0, r0, r0
100007e0:	10005de0 	andne	r5, r0, r0, ror #27

100007e4 <frame_dummy>:
100007e4:	b508      	push	{r3, lr}
100007e6:	4b03      	ldr	r3, [pc, #12]	; (100007f4 <frame_dummy+0x10>)
100007e8:	b11b      	cbz	r3, 100007f2 <frame_dummy+0xe>
100007ea:	4903      	ldr	r1, [pc, #12]	; (100007f8 <frame_dummy+0x14>)
100007ec:	4803      	ldr	r0, [pc, #12]	; (100007fc <frame_dummy+0x18>)
100007ee:	e000      	b.n	100007f2 <frame_dummy+0xe>
100007f0:	bf00      	nop
100007f2:	bd08      	pop	{r3, pc}
100007f4:	00000000 	andeq	r0, r0, r0
100007f8:	38000454 	stmdacc	r0, {r2, r4, r6, sl}
100007fc:	10005de0 	andne	r5, r0, r0, ror #27

10000800 <main_task_init>:
            counter++;
        }
    }
}

static void main_task_init(void) {
10000800:	b500      	push	{lr}
10000802:	b083      	sub	sp, #12
    static TaskHandle_t main_task = NULL;
    BaseType_t xReturn = pdPASS;
    xReturn = xTaskCreate(main_task_entry, "main_task", 2048, NULL, 1U, &main_task);
10000804:	4b0b      	ldr	r3, [pc, #44]	; (10000834 <main_task_init+0x34>)
10000806:	9301      	str	r3, [sp, #4]
10000808:	2301      	movs	r3, #1
1000080a:	9300      	str	r3, [sp, #0]
1000080c:	2300      	movs	r3, #0
1000080e:	f44f 6200 	mov.w	r2, #2048	; 0x800
10000812:	4909      	ldr	r1, [pc, #36]	; (10000838 <main_task_init+0x38>)
10000814:	4809      	ldr	r0, [pc, #36]	; (1000083c <main_task_init+0x3c>)
10000816:	f002 f80f 	bl	10002838 <xTaskCreate>
    if (xReturn == pdPASS) {
1000081a:	2801      	cmp	r0, #1
1000081c:	d006      	beq.n	1000082c <main_task_init+0x2c>
1000081e:	4601      	mov	r1, r0
        vTaskStartScheduler();
    } else {
        printf("main task create failed(%d).\r\n", (int)(xReturn));
10000820:	4807      	ldr	r0, [pc, #28]	; (10000840 <main_task_init+0x40>)
10000822:	f001 f973 	bl	10001b0c <printf>
    }
}
10000826:	b003      	add	sp, #12
10000828:	f85d fb04 	ldr.w	pc, [sp], #4
        vTaskStartScheduler();
1000082c:	f002 fb92 	bl	10002f54 <vTaskStartScheduler>
10000830:	e7f9      	b.n	10000826 <main_task_init+0x26>
10000832:	bf00      	nop
10000834:	3800046c 	stmdacc	r0, {r2, r3, r5, r6, sl}
10000838:	10005850 	andne	r5, r0, r0, asr r8
1000083c:	10000941 	andne	r0, r0, r1, asr #18
10000840:	1000585c 	andne	r5, r0, ip, asr r8

10000844 <dump_callstack>:
void dump_callstack(void) {
10000844:	b530      	push	{r4, r5, lr}
10000846:	b0c1      	sub	sp, #260	; 0x104
    unsigned int buffer[FD_STACK_DUMP_DEPTH_MAX] = {0};
10000848:	f44f 7280 	mov.w	r2, #256	; 0x100
1000084c:	2100      	movs	r1, #0
1000084e:	4668      	mov	r0, sp
10000850:	f003 f900 	bl	10003a54 <memset>
    unsigned int point = fault_dump_bm_stack_point();
10000854:	f001 fb1a 	bl	10001e8c <fault_dump_bm_stack_point>
10000858:	4604      	mov	r4, r0
    unsigned int start = fault_dump_bm_stack_start();
1000085a:	f001 fb1b 	bl	10001e94 <fault_dump_bm_stack_start>
1000085e:	4603      	mov	r3, r0
    int count = fault_dump_callstack(buffer, FD_STACK_DUMP_DEPTH_MAX, (unsigned int*)point, (unsigned int*)start);
10000860:	4622      	mov	r2, r4
10000862:	2140      	movs	r1, #64	; 0x40
10000864:	4668      	mov	r0, sp
10000866:	f001 f9c5 	bl	10001bf4 <fault_dump_callstack>
    if (count < 0) {
1000086a:	1e05      	subs	r5, r0, #0
1000086c:	db04      	blt.n	10000878 <dump_callstack+0x34>
        printf("CallStack:[ ");
1000086e:	480b      	ldr	r0, [pc, #44]	; (1000089c <dump_callstack+0x58>)
10000870:	f001 f94c 	bl	10001b0c <printf>
        for (int i = 0; i < count; i++) {
10000874:	2400      	movs	r4, #0
10000876:	e00a      	b.n	1000088e <dump_callstack+0x4a>
        printf("CallStack dump error: %d\r\n", count);
10000878:	4629      	mov	r1, r5
1000087a:	4809      	ldr	r0, [pc, #36]	; (100008a0 <dump_callstack+0x5c>)
1000087c:	f001 f946 	bl	10001b0c <printf>
10000880:	e00a      	b.n	10000898 <dump_callstack+0x54>
            printf("%08X ", buffer[i]);
10000882:	f85d 1024 	ldr.w	r1, [sp, r4, lsl #2]
10000886:	4807      	ldr	r0, [pc, #28]	; (100008a4 <dump_callstack+0x60>)
10000888:	f001 f940 	bl	10001b0c <printf>
        for (int i = 0; i < count; i++) {
1000088c:	3401      	adds	r4, #1
1000088e:	42ac      	cmp	r4, r5
10000890:	dbf7      	blt.n	10000882 <dump_callstack+0x3e>
        printf("] \r\n");
10000892:	4805      	ldr	r0, [pc, #20]	; (100008a8 <dump_callstack+0x64>)
10000894:	f001 f95a 	bl	10001b4c <puts>
}
10000898:	b041      	add	sp, #260	; 0x104
1000089a:	bd30      	pop	{r4, r5, pc}
1000089c:	10005898 	mulne	r0, r8, r8
100008a0:	1000587c 	andne	r5, r0, ip, ror r8
100008a4:	100058a8 	andne	r5, r0, r8, lsr #17
100008a8:	100058b0 			; <UNDEFINED> instruction: 0x100058b0

100008ac <test0>:
void test0(void) {
100008ac:	b508      	push	{r3, lr}
    printf("this is %s.\r\n", __func__);
100008ae:	4904      	ldr	r1, [pc, #16]	; (100008c0 <test0+0x14>)
100008b0:	4804      	ldr	r0, [pc, #16]	; (100008c4 <test0+0x18>)
100008b2:	f001 f92b 	bl	10001b0c <printf>
    dump_callstack();
100008b6:	f7ff ffc5 	bl	10000844 <dump_callstack>
    fault_dump_unalign();
100008ba:	f001 fb75 	bl	10001fa8 <fault_dump_unalign>
}
100008be:	bd08      	pop	{r3, pc}
100008c0:	10005924 	andne	r5, r0, r4, lsr #18
100008c4:	100058b4 			; <UNDEFINED> instruction: 0x100058b4

100008c8 <test1>:
void test1(void) {
100008c8:	b508      	push	{r3, lr}
    printf("this is %s.\r\n", __func__);
100008ca:	4903      	ldr	r1, [pc, #12]	; (100008d8 <test1+0x10>)
100008cc:	4803      	ldr	r0, [pc, #12]	; (100008dc <test1+0x14>)
100008ce:	f001 f91d 	bl	10001b0c <printf>
    test0();
100008d2:	f7ff ffeb 	bl	100008ac <test0>
}
100008d6:	bd08      	pop	{r3, pc}
100008d8:	1000591c 	andne	r5, r0, ip, lsl r9
100008dc:	100058b4 			; <UNDEFINED> instruction: 0x100058b4

100008e0 <test2>:
void test2(void) {
100008e0:	b508      	push	{r3, lr}
    printf("this is %s.\r\n", __func__);
100008e2:	4903      	ldr	r1, [pc, #12]	; (100008f0 <test2+0x10>)
100008e4:	4803      	ldr	r0, [pc, #12]	; (100008f4 <test2+0x14>)
100008e6:	f001 f911 	bl	10001b0c <printf>
    test1();
100008ea:	f7ff ffed 	bl	100008c8 <test1>
}
100008ee:	bd08      	pop	{r3, pc}
100008f0:	10005914 	andne	r5, r0, r4, lsl r9
100008f4:	100058b4 			; <UNDEFINED> instruction: 0x100058b4

100008f8 <test3>:
void test3(void) {
100008f8:	b508      	push	{r3, lr}
    printf("this is %s.\r\n", __func__);
100008fa:	4903      	ldr	r1, [pc, #12]	; (10000908 <test3+0x10>)
100008fc:	4803      	ldr	r0, [pc, #12]	; (1000090c <test3+0x14>)
100008fe:	f001 f905 	bl	10001b0c <printf>
    test2();
10000902:	f7ff ffed 	bl	100008e0 <test2>
}
10000906:	bd08      	pop	{r3, pc}
10000908:	1000590c 	andne	r5, r0, ip, lsl #18
1000090c:	100058b4 			; <UNDEFINED> instruction: 0x100058b4

10000910 <test4>:
void test4(void) {
10000910:	b508      	push	{r3, lr}
    printf("this is %s.\r\n", __func__);
10000912:	4903      	ldr	r1, [pc, #12]	; (10000920 <test4+0x10>)
10000914:	4803      	ldr	r0, [pc, #12]	; (10000924 <test4+0x14>)
10000916:	f001 f8f9 	bl	10001b0c <printf>
    test3();
1000091a:	f7ff ffed 	bl	100008f8 <test3>
}
1000091e:	bd08      	pop	{r3, pc}
10000920:	10005904 	andne	r5, r0, r4, lsl #18
10000924:	100058b4 			; <UNDEFINED> instruction: 0x100058b4

10000928 <test5>:
void test5(void) {
10000928:	b508      	push	{r3, lr}
    printf("this is %s.\r\n", __func__);
1000092a:	4903      	ldr	r1, [pc, #12]	; (10000938 <test5+0x10>)
1000092c:	4803      	ldr	r0, [pc, #12]	; (1000093c <test5+0x14>)
1000092e:	f001 f8ed 	bl	10001b0c <printf>
    test4();
10000932:	f7ff ffed 	bl	10000910 <test4>
}
10000936:	bd08      	pop	{r3, pc}
10000938:	100058fc 	strdne	r5, [r0], -ip
1000093c:	100058b4 			; <UNDEFINED> instruction: 0x100058b4

10000940 <main_task_entry>:
static void main_task_entry(void *parameters) {
10000940:	b510      	push	{r4, lr}
    int counter = 0;
10000942:	2400      	movs	r4, #0
10000944:	e001      	b.n	1000094a <main_task_entry+0xa>
            test5();
10000946:	f7ff ffef 	bl	10000928 <test5>
        vTaskDelay(1000);
1000094a:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
1000094e:	f002 f8ff 	bl	10002b50 <vTaskDelay>
        printf("hello this is FreeRTOS.\r\n");
10000952:	4803      	ldr	r0, [pc, #12]	; (10000960 <main_task_entry+0x20>)
10000954:	f001 f8fa 	bl	10001b4c <puts>
        if (counter >= 3) {
10000958:	2c02      	cmp	r4, #2
1000095a:	dcf4      	bgt.n	10000946 <main_task_entry+0x6>
            counter++;
1000095c:	3401      	adds	r4, #1
1000095e:	e7f4      	b.n	1000094a <main_task_entry+0xa>
10000960:	100058c4 	andne	r5, r0, r4, asr #17

10000964 <main>:

int main(void) {
10000964:	b510      	push	{r4, lr}
    int count = 0;
    uart_init();
10000966:	f001 f901 	bl	10001b6c <uart_init>

    printf("Start\r\n");
1000096a:	4807      	ldr	r0, [pc, #28]	; (10000988 <main+0x24>)
1000096c:	f001 f8ee 	bl	10001b4c <puts>
    fault_dump_init();
10000970:	f001 f98e 	bl	10001c90 <fault_dump_init>
    main_task_init();
10000974:	f7ff ff44 	bl	10000800 <main_task_init>
    int count = 0;
10000978:	2100      	movs	r1, #0

    while (1) {
        __NOP();
1000097a:	bf00      	nop
        printf("hello world - %d.\r\n", count++);
1000097c:	1c4c      	adds	r4, r1, #1
1000097e:	4803      	ldr	r0, [pc, #12]	; (1000098c <main+0x28>)
10000980:	f001 f8c4 	bl	10001b0c <printf>
10000984:	4621      	mov	r1, r4
10000986:	e7f8      	b.n	1000097a <main+0x16>
10000988:	100058e0 	andne	r5, r0, r0, ror #17
1000098c:	100058e8 	andne	r5, r0, r8, ror #17

10000990 <SystemInit>:
 *----------------------------------------------------------------------------*/
void SystemInit (void)
{

#if defined (__VTOR_PRESENT) && (__VTOR_PRESENT == 1U)
  SCB->VTOR = (uint32_t) &(__VECTOR_TABLE[0]);
10000990:	4b06      	ldr	r3, [pc, #24]	; (100009ac <SystemInit+0x1c>)
10000992:	4a07      	ldr	r2, [pc, #28]	; (100009b0 <SystemInit+0x20>)
10000994:	609a      	str	r2, [r3, #8]
#endif

#if defined (__FPU_USED) && (__FPU_USED == 1U)
  SCB->CPACR |= ((3U << 10U*2U) |           /* enable CP10 Full Access */
10000996:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
1000099a:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
1000099e:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88

#if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
  TZ_SAU_Setup();
#endif

  SystemCoreClock = SYSTEM_CLOCK;
100009a2:	4b04      	ldr	r3, [pc, #16]	; (100009b4 <SystemInit+0x24>)
100009a4:	4a04      	ldr	r2, [pc, #16]	; (100009b8 <SystemInit+0x28>)
100009a6:	601a      	str	r2, [r3, #0]
}
100009a8:	4770      	bx	lr
100009aa:	bf00      	nop
100009ac:	e000ed00 	and	lr, r0, r0, lsl #26
100009b0:	10000000 	andne	r0, r0, r0
100009b4:	38000000 	stmdacc	r0, {}	; <UNPREDICTABLE>
100009b8:	017d7840 	cmneq	sp, r0, asr #16

100009bc <_out_null>:

// internal null output
static inline void _out_null(char character, void* buffer, size_t idx, size_t maxlen)
{
  (void)character; (void)buffer; (void)idx; (void)maxlen;
}
100009bc:	4770      	bx	lr

100009be <_atoi>:
}


// internal ASCII string to unsigned int conversion
static unsigned int _atoi(const char** str)
{
100009be:	4601      	mov	r1, r0
  unsigned int i = 0U;
100009c0:	2000      	movs	r0, #0
  while (_is_digit(**str)) {
100009c2:	e007      	b.n	100009d4 <_atoi+0x16>
    i = i * 10U + (unsigned int)(*((*str)++) - '0');
100009c4:	eb00 0080 	add.w	r0, r0, r0, lsl #2
100009c8:	1c53      	adds	r3, r2, #1
100009ca:	600b      	str	r3, [r1, #0]
100009cc:	7813      	ldrb	r3, [r2, #0]
100009ce:	eb03 0040 	add.w	r0, r3, r0, lsl #1
100009d2:	3830      	subs	r0, #48	; 0x30
  while (_is_digit(**str)) {
100009d4:	680a      	ldr	r2, [r1, #0]
100009d6:	7813      	ldrb	r3, [r2, #0]
  return (ch >= '0') && (ch <= '9');
100009d8:	3b30      	subs	r3, #48	; 0x30
100009da:	b2db      	uxtb	r3, r3
  while (_is_digit(**str)) {
100009dc:	2b09      	cmp	r3, #9
100009de:	d9f1      	bls.n	100009c4 <_atoi+0x6>
  }
  return i;
}
100009e0:	4770      	bx	lr

100009e2 <_out_rev>:


// output the specified string in reverse, taking care of any zero-padding
static size_t _out_rev(out_fct_type out, char* buffer, size_t idx, size_t maxlen, const char* buf, size_t len, unsigned int width, unsigned int flags)
{
100009e2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
100009e6:	b083      	sub	sp, #12
100009e8:	4605      	mov	r5, r0
100009ea:	460e      	mov	r6, r1
100009ec:	4693      	mov	fp, r2
100009ee:	461f      	mov	r7, r3
100009f0:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
100009f4:	9c0d      	ldr	r4, [sp, #52]	; 0x34
100009f6:	f8dd 9038 	ldr.w	r9, [sp, #56]	; 0x38
  const size_t start_idx = idx;

  // pad spaces up to given width
  if (!(flags & FLAGS_LEFT) && !(flags & FLAGS_ZEROPAD)) {
100009fa:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
100009fc:	f013 0f03 	tst.w	r3, #3
10000a00:	d119      	bne.n	10000a36 <_out_rev+0x54>
    for (size_t i = len; i < width; i++) {
10000a02:	46a0      	mov	r8, r4
10000a04:	9201      	str	r2, [sp, #4]
10000a06:	45c8      	cmp	r8, r9
10000a08:	d209      	bcs.n	10000a1e <_out_rev+0x3c>
      out(' ', buffer, idx++, maxlen);
10000a0a:	f102 0b01 	add.w	fp, r2, #1
10000a0e:	463b      	mov	r3, r7
10000a10:	4631      	mov	r1, r6
10000a12:	2020      	movs	r0, #32
10000a14:	47a8      	blx	r5
    for (size_t i = len; i < width; i++) {
10000a16:	f108 0801 	add.w	r8, r8, #1
      out(' ', buffer, idx++, maxlen);
10000a1a:	465a      	mov	r2, fp
10000a1c:	e7f3      	b.n	10000a06 <_out_rev+0x24>
10000a1e:	f8dd b004 	ldr.w	fp, [sp, #4]
10000a22:	e008      	b.n	10000a36 <_out_rev+0x54>
    }
  }

  // reverse string
  while (len) {
    out(buf[--len], buffer, idx++, maxlen);
10000a24:	3c01      	subs	r4, #1
10000a26:	f102 0801 	add.w	r8, r2, #1
10000a2a:	463b      	mov	r3, r7
10000a2c:	4631      	mov	r1, r6
10000a2e:	f81a 0004 	ldrb.w	r0, [sl, r4]
10000a32:	47a8      	blx	r5
10000a34:	4642      	mov	r2, r8
  while (len) {
10000a36:	2c00      	cmp	r4, #0
10000a38:	d1f4      	bne.n	10000a24 <_out_rev+0x42>
  }

  // append pad spaces up to given width
  if (flags & FLAGS_LEFT) {
10000a3a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
10000a3c:	f013 0f02 	tst.w	r3, #2
10000a40:	d103      	bne.n	10000a4a <_out_rev+0x68>
      out(' ', buffer, idx++, maxlen);
    }
  }

  return idx;
}
10000a42:	4610      	mov	r0, r2
10000a44:	b003      	add	sp, #12
10000a46:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    while (idx - start_idx < width) {
10000a4a:	eba2 030b 	sub.w	r3, r2, fp
10000a4e:	454b      	cmp	r3, r9
10000a50:	d2f7      	bcs.n	10000a42 <_out_rev+0x60>
      out(' ', buffer, idx++, maxlen);
10000a52:	1c54      	adds	r4, r2, #1
10000a54:	463b      	mov	r3, r7
10000a56:	4631      	mov	r1, r6
10000a58:	2020      	movs	r0, #32
10000a5a:	47a8      	blx	r5
10000a5c:	4622      	mov	r2, r4
10000a5e:	e7f4      	b.n	10000a4a <_out_rev+0x68>

10000a60 <_ntoa_format>:


// internal itoa format
static size_t _ntoa_format(out_fct_type out, char* buffer, size_t idx, size_t maxlen, char* buf, size_t len, bool negative, unsigned int base, unsigned int prec, unsigned int width, unsigned int flags)
{
10000a60:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
10000a64:	b085      	sub	sp, #20
10000a66:	9d0c      	ldr	r5, [sp, #48]	; 0x30
10000a68:	9c0d      	ldr	r4, [sp, #52]	; 0x34
10000a6a:	f89d 9038 	ldrb.w	r9, [sp, #56]	; 0x38
10000a6e:	f8dd 803c 	ldr.w	r8, [sp, #60]	; 0x3c
10000a72:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
10000a76:	9f11      	ldr	r7, [sp, #68]	; 0x44
10000a78:	9e12      	ldr	r6, [sp, #72]	; 0x48
  // pad leading zeros
  if (!(flags & FLAGS_LEFT)) {
10000a7a:	f016 0f02 	tst.w	r6, #2
10000a7e:	d121      	bne.n	10000ac4 <_ntoa_format+0x64>
    if (width && (flags & FLAGS_ZEROPAD) && (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
10000a80:	b17f      	cbz	r7, 10000aa2 <_ntoa_format+0x42>
10000a82:	f016 0f01 	tst.w	r6, #1
10000a86:	d00c      	beq.n	10000aa2 <_ntoa_format+0x42>
10000a88:	f1b9 0f00 	cmp.w	r9, #0
10000a8c:	d102      	bne.n	10000a94 <_ntoa_format+0x34>
10000a8e:	f016 0f0c 	tst.w	r6, #12
10000a92:	d006      	beq.n	10000aa2 <_ntoa_format+0x42>
      width--;
10000a94:	3f01      	subs	r7, #1
10000a96:	e004      	b.n	10000aa2 <_ntoa_format+0x42>
    }
    while ((len < prec) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
      buf[len++] = '0';
10000a98:	f04f 0c30 	mov.w	ip, #48	; 0x30
10000a9c:	f805 c004 	strb.w	ip, [r5, r4]
10000aa0:	3401      	adds	r4, #1
    while ((len < prec) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
10000aa2:	4574      	cmp	r4, lr
10000aa4:	d201      	bcs.n	10000aaa <_ntoa_format+0x4a>
10000aa6:	2c1f      	cmp	r4, #31
10000aa8:	d9f6      	bls.n	10000a98 <_ntoa_format+0x38>
    }
    while ((flags & FLAGS_ZEROPAD) && (len < width) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
10000aaa:	f016 0f01 	tst.w	r6, #1
10000aae:	d009      	beq.n	10000ac4 <_ntoa_format+0x64>
10000ab0:	42bc      	cmp	r4, r7
10000ab2:	d207      	bcs.n	10000ac4 <_ntoa_format+0x64>
10000ab4:	2c1f      	cmp	r4, #31
10000ab6:	d805      	bhi.n	10000ac4 <_ntoa_format+0x64>
      buf[len++] = '0';
10000ab8:	f04f 0c30 	mov.w	ip, #48	; 0x30
10000abc:	f805 c004 	strb.w	ip, [r5, r4]
10000ac0:	3401      	adds	r4, #1
10000ac2:	e7f2      	b.n	10000aaa <_ntoa_format+0x4a>
    }
  }

  // handle hash
  if (flags & FLAGS_HASH) {
10000ac4:	f016 0f10 	tst.w	r6, #16
10000ac8:	d017      	beq.n	10000afa <_ntoa_format+0x9a>
    if (!(flags & FLAGS_PRECISION) && len && ((len == prec) || (len == width))) {
10000aca:	f416 6f80 	tst.w	r6, #1024	; 0x400
10000ace:	d104      	bne.n	10000ada <_ntoa_format+0x7a>
10000ad0:	b11c      	cbz	r4, 10000ada <_ntoa_format+0x7a>
10000ad2:	4574      	cmp	r4, lr
10000ad4:	d024      	beq.n	10000b20 <_ntoa_format+0xc0>
10000ad6:	42bc      	cmp	r4, r7
10000ad8:	d022      	beq.n	10000b20 <_ntoa_format+0xc0>
      len--;
      if (len && (base == 16U)) {
        len--;
      }
    }
    if ((base == 16U) && !(flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
10000ada:	f1b8 0f10 	cmp.w	r8, #16
10000ade:	d02b      	beq.n	10000b38 <_ntoa_format+0xd8>
      buf[len++] = 'x';
    }
    else if ((base == 16U) && (flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
10000ae0:	f1b8 0f10 	cmp.w	r8, #16
10000ae4:	d033      	beq.n	10000b4e <_ntoa_format+0xee>
      buf[len++] = 'X';
    }
    else if ((base == 2U) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
10000ae6:	f1b8 0f02 	cmp.w	r8, #2
10000aea:	d03b      	beq.n	10000b64 <_ntoa_format+0x104>
      buf[len++] = 'b';
    }
    if (len < PRINTF_NTOA_BUFFER_SIZE) {
10000aec:	2c1f      	cmp	r4, #31
10000aee:	d804      	bhi.n	10000afa <_ntoa_format+0x9a>
      buf[len++] = '0';
10000af0:	f04f 0c30 	mov.w	ip, #48	; 0x30
10000af4:	f805 c004 	strb.w	ip, [r5, r4]
10000af8:	3401      	adds	r4, #1
    }
  }

  if (len < PRINTF_NTOA_BUFFER_SIZE) {
10000afa:	2c1f      	cmp	r4, #31
10000afc:	d807      	bhi.n	10000b0e <_ntoa_format+0xae>
    if (negative) {
10000afe:	f1b9 0f00 	cmp.w	r9, #0
10000b02:	d037      	beq.n	10000b74 <_ntoa_format+0x114>
      buf[len++] = '-';
10000b04:	f04f 0c2d 	mov.w	ip, #45	; 0x2d
10000b08:	f805 c004 	strb.w	ip, [r5, r4]
10000b0c:	3401      	adds	r4, #1
    else if (flags & FLAGS_SPACE) {
      buf[len++] = ' ';
    }
  }

  return _out_rev(out, buffer, idx, maxlen, buf, len, width, flags);
10000b0e:	9603      	str	r6, [sp, #12]
10000b10:	9702      	str	r7, [sp, #8]
10000b12:	9401      	str	r4, [sp, #4]
10000b14:	9500      	str	r5, [sp, #0]
10000b16:	f7ff ff64 	bl	100009e2 <_out_rev>
}
10000b1a:	b005      	add	sp, #20
10000b1c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
      if (len && (base == 16U)) {
10000b20:	f1b4 0c01 	subs.w	ip, r4, #1
10000b24:	d006      	beq.n	10000b34 <_ntoa_format+0xd4>
10000b26:	f1b8 0f10 	cmp.w	r8, #16
10000b2a:	d001      	beq.n	10000b30 <_ntoa_format+0xd0>
      len--;
10000b2c:	4664      	mov	r4, ip
10000b2e:	e7d4      	b.n	10000ada <_ntoa_format+0x7a>
        len--;
10000b30:	3c02      	subs	r4, #2
10000b32:	e7d2      	b.n	10000ada <_ntoa_format+0x7a>
      len--;
10000b34:	4664      	mov	r4, ip
10000b36:	e7d0      	b.n	10000ada <_ntoa_format+0x7a>
    if ((base == 16U) && !(flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
10000b38:	f016 0f20 	tst.w	r6, #32
10000b3c:	d1d0      	bne.n	10000ae0 <_ntoa_format+0x80>
10000b3e:	2c1f      	cmp	r4, #31
10000b40:	d8ce      	bhi.n	10000ae0 <_ntoa_format+0x80>
      buf[len++] = 'x';
10000b42:	f04f 0c78 	mov.w	ip, #120	; 0x78
10000b46:	f805 c004 	strb.w	ip, [r5, r4]
10000b4a:	3401      	adds	r4, #1
10000b4c:	e7ce      	b.n	10000aec <_ntoa_format+0x8c>
    else if ((base == 16U) && (flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
10000b4e:	f016 0f20 	tst.w	r6, #32
10000b52:	d0c8      	beq.n	10000ae6 <_ntoa_format+0x86>
10000b54:	2c1f      	cmp	r4, #31
10000b56:	d8c6      	bhi.n	10000ae6 <_ntoa_format+0x86>
      buf[len++] = 'X';
10000b58:	f04f 0c58 	mov.w	ip, #88	; 0x58
10000b5c:	f805 c004 	strb.w	ip, [r5, r4]
10000b60:	3401      	adds	r4, #1
10000b62:	e7c3      	b.n	10000aec <_ntoa_format+0x8c>
    else if ((base == 2U) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
10000b64:	2c1f      	cmp	r4, #31
10000b66:	d8c1      	bhi.n	10000aec <_ntoa_format+0x8c>
      buf[len++] = 'b';
10000b68:	f04f 0c62 	mov.w	ip, #98	; 0x62
10000b6c:	f805 c004 	strb.w	ip, [r5, r4]
10000b70:	3401      	adds	r4, #1
10000b72:	e7bb      	b.n	10000aec <_ntoa_format+0x8c>
    else if (flags & FLAGS_PLUS) {
10000b74:	f016 0f04 	tst.w	r6, #4
10000b78:	d005      	beq.n	10000b86 <_ntoa_format+0x126>
      buf[len++] = '+';  // ignore the space if the '+' exists
10000b7a:	f04f 0c2b 	mov.w	ip, #43	; 0x2b
10000b7e:	f805 c004 	strb.w	ip, [r5, r4]
10000b82:	3401      	adds	r4, #1
10000b84:	e7c3      	b.n	10000b0e <_ntoa_format+0xae>
    else if (flags & FLAGS_SPACE) {
10000b86:	f016 0f08 	tst.w	r6, #8
10000b8a:	d0c0      	beq.n	10000b0e <_ntoa_format+0xae>
      buf[len++] = ' ';
10000b8c:	f04f 0c20 	mov.w	ip, #32
10000b90:	f805 c004 	strb.w	ip, [r5, r4]
10000b94:	3401      	adds	r4, #1
10000b96:	e7ba      	b.n	10000b0e <_ntoa_format+0xae>

10000b98 <_ntoa_long>:


// internal itoa for 'long' type
static size_t _ntoa_long(out_fct_type out, char* buffer, size_t idx, size_t maxlen, unsigned long value, bool negative, unsigned long base, unsigned int prec, unsigned int width, unsigned int flags)
{
10000b98:	b5f0      	push	{r4, r5, r6, r7, lr}
10000b9a:	b091      	sub	sp, #68	; 0x44
10000b9c:	9c16      	ldr	r4, [sp, #88]	; 0x58
10000b9e:	9d18      	ldr	r5, [sp, #96]	; 0x60
10000ba0:	9e1b      	ldr	r6, [sp, #108]	; 0x6c
  char buf[PRINTF_NTOA_BUFFER_SIZE];
  size_t len = 0U;

  // no hash for 0 values
  if (!value) {
10000ba2:	b90c      	cbnz	r4, 10000ba8 <_ntoa_long+0x10>
    flags &= ~FLAGS_HASH;
10000ba4:	f026 0610 	bic.w	r6, r6, #16
  }

  // write if precision != 0 and value is != 0
  if (!(flags & FLAGS_PRECISION) || value) {
10000ba8:	f416 6e80 	ands.w	lr, r6, #1024	; 0x400
10000bac:	d016      	beq.n	10000bdc <_ntoa_long+0x44>
10000bae:	b364      	cbz	r4, 10000c0a <_ntoa_long+0x72>
10000bb0:	f04f 0e00 	mov.w	lr, #0
10000bb4:	e012      	b.n	10000bdc <_ntoa_long+0x44>
    do {
      const char digit = (char)(value % base);
      buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
10000bb6:	f10c 0c30 	add.w	ip, ip, #48	; 0x30
10000bba:	fa5f fc8c 	uxtb.w	ip, ip
10000bbe:	f10e 0701 	add.w	r7, lr, #1
10000bc2:	f10e 0e40 	add.w	lr, lr, #64	; 0x40
10000bc6:	44ee      	add	lr, sp
10000bc8:	f80e cc20 	strb.w	ip, [lr, #-32]
      value /= base;
10000bcc:	fbb4 fcf5 	udiv	ip, r4, r5
    } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
10000bd0:	42ac      	cmp	r4, r5
10000bd2:	d31b      	bcc.n	10000c0c <_ntoa_long+0x74>
10000bd4:	2f1f      	cmp	r7, #31
10000bd6:	d819      	bhi.n	10000c0c <_ntoa_long+0x74>
      buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
10000bd8:	46be      	mov	lr, r7
      value /= base;
10000bda:	4664      	mov	r4, ip
      const char digit = (char)(value % base);
10000bdc:	fbb4 fcf5 	udiv	ip, r4, r5
10000be0:	fb05 4c1c 	mls	ip, r5, ip, r4
10000be4:	fa5f fc8c 	uxtb.w	ip, ip
      buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
10000be8:	f1bc 0f09 	cmp.w	ip, #9
10000bec:	d9e3      	bls.n	10000bb6 <_ntoa_long+0x1e>
10000bee:	f016 0f20 	tst.w	r6, #32
10000bf2:	d008      	beq.n	10000c06 <_ntoa_long+0x6e>
10000bf4:	2741      	movs	r7, #65	; 0x41
10000bf6:	44bc      	add	ip, r7
10000bf8:	fa5f fc8c 	uxtb.w	ip, ip
10000bfc:	f1ac 0c0a 	sub.w	ip, ip, #10
10000c00:	fa5f fc8c 	uxtb.w	ip, ip
10000c04:	e7db      	b.n	10000bbe <_ntoa_long+0x26>
10000c06:	2761      	movs	r7, #97	; 0x61
10000c08:	e7f5      	b.n	10000bf6 <_ntoa_long+0x5e>
  size_t len = 0U;
10000c0a:	4627      	mov	r7, r4
  }

  return _ntoa_format(out, buffer, idx, maxlen, buf, len, negative, (unsigned int)base, prec, width, flags);
10000c0c:	9606      	str	r6, [sp, #24]
10000c0e:	9c1a      	ldr	r4, [sp, #104]	; 0x68
10000c10:	9405      	str	r4, [sp, #20]
10000c12:	9c19      	ldr	r4, [sp, #100]	; 0x64
10000c14:	9404      	str	r4, [sp, #16]
10000c16:	9503      	str	r5, [sp, #12]
10000c18:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
10000c1c:	9402      	str	r4, [sp, #8]
10000c1e:	9701      	str	r7, [sp, #4]
10000c20:	ac08      	add	r4, sp, #32
10000c22:	9400      	str	r4, [sp, #0]
10000c24:	f7ff ff1c 	bl	10000a60 <_ntoa_format>
}
10000c28:	b011      	add	sp, #68	; 0x44
10000c2a:	bdf0      	pop	{r4, r5, r6, r7, pc}

10000c2c <_ntoa_long_long>:


// internal itoa for 'long long' type
#if defined(PRINTF_SUPPORT_LONG_LONG)
static size_t _ntoa_long_long(out_fct_type out, char* buffer, size_t idx, size_t maxlen, unsigned long long value, bool negative, unsigned long long base, unsigned int prec, unsigned int width, unsigned int flags)
{
10000c2c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10000c30:	b095      	sub	sp, #84	; 0x54
10000c32:	9009      	str	r0, [sp, #36]	; 0x24
10000c34:	910a      	str	r1, [sp, #40]	; 0x28
10000c36:	920b      	str	r2, [sp, #44]	; 0x2c
10000c38:	469b      	mov	fp, r3
10000c3a:	9d1e      	ldr	r5, [sp, #120]	; 0x78
10000c3c:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
10000c3e:	9f22      	ldr	r7, [sp, #136]	; 0x88
10000c40:	f8dd 808c 	ldr.w	r8, [sp, #140]	; 0x8c
10000c44:	f8dd a098 	ldr.w	sl, [sp, #152]	; 0x98
  char buf[PRINTF_NTOA_BUFFER_SIZE];
  size_t len = 0U;

  // no hash for 0 values
  if (!value) {
10000c48:	ea55 0306 	orrs.w	r3, r5, r6
10000c4c:	d101      	bne.n	10000c52 <_ntoa_long_long+0x26>
    flags &= ~FLAGS_HASH;
10000c4e:	f02a 0a10 	bic.w	sl, sl, #16
  }

  // write if precision != 0 and value is != 0
  if (!(flags & FLAGS_PRECISION) || value) {
10000c52:	f41a 6480 	ands.w	r4, sl, #1024	; 0x400
10000c56:	d01f      	beq.n	10000c98 <_ntoa_long_long+0x6c>
10000c58:	ea55 0306 	orrs.w	r3, r5, r6
10000c5c:	d030      	beq.n	10000cc0 <_ntoa_long_long+0x94>
10000c5e:	2400      	movs	r4, #0
10000c60:	e01a      	b.n	10000c98 <_ntoa_long_long+0x6c>
    do {
      const char digit = (char)(value % base);
      buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
10000c62:	f103 0230 	add.w	r2, r3, #48	; 0x30
10000c66:	b2d2      	uxtb	r2, r2
10000c68:	f104 0901 	add.w	r9, r4, #1
10000c6c:	f104 0350 	add.w	r3, r4, #80	; 0x50
10000c70:	eb0d 0403 	add.w	r4, sp, r3
10000c74:	f804 2c20 	strb.w	r2, [r4, #-32]
      value /= base;
10000c78:	463a      	mov	r2, r7
10000c7a:	4643      	mov	r3, r8
10000c7c:	4628      	mov	r0, r5
10000c7e:	4631      	mov	r1, r6
10000c80:	f003 fc4a 	bl	10004518 <__aeabi_uldivmod>
    } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
10000c84:	42bd      	cmp	r5, r7
10000c86:	eb76 0308 	sbcs.w	r3, r6, r8
10000c8a:	d31b      	bcc.n	10000cc4 <_ntoa_long_long+0x98>
10000c8c:	f1b9 0f1f 	cmp.w	r9, #31
10000c90:	d818      	bhi.n	10000cc4 <_ntoa_long_long+0x98>
      buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
10000c92:	464c      	mov	r4, r9
      value /= base;
10000c94:	4605      	mov	r5, r0
10000c96:	460e      	mov	r6, r1
      const char digit = (char)(value % base);
10000c98:	463a      	mov	r2, r7
10000c9a:	4643      	mov	r3, r8
10000c9c:	4628      	mov	r0, r5
10000c9e:	4631      	mov	r1, r6
10000ca0:	f003 fc3a 	bl	10004518 <__aeabi_uldivmod>
10000ca4:	b2d3      	uxtb	r3, r2
      buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
10000ca6:	2b09      	cmp	r3, #9
10000ca8:	d9db      	bls.n	10000c62 <_ntoa_long_long+0x36>
10000caa:	f01a 0f20 	tst.w	sl, #32
10000cae:	d005      	beq.n	10000cbc <_ntoa_long_long+0x90>
10000cb0:	2241      	movs	r2, #65	; 0x41
10000cb2:	441a      	add	r2, r3
10000cb4:	b2d2      	uxtb	r2, r2
10000cb6:	3a0a      	subs	r2, #10
10000cb8:	b2d2      	uxtb	r2, r2
10000cba:	e7d5      	b.n	10000c68 <_ntoa_long_long+0x3c>
10000cbc:	2261      	movs	r2, #97	; 0x61
10000cbe:	e7f8      	b.n	10000cb2 <_ntoa_long_long+0x86>
  size_t len = 0U;
10000cc0:	f04f 0900 	mov.w	r9, #0
  }

  return _ntoa_format(out, buffer, idx, maxlen, buf, len, negative, (unsigned int)base, prec, width, flags);
10000cc4:	f8cd a018 	str.w	sl, [sp, #24]
10000cc8:	9b25      	ldr	r3, [sp, #148]	; 0x94
10000cca:	9305      	str	r3, [sp, #20]
10000ccc:	9b24      	ldr	r3, [sp, #144]	; 0x90
10000cce:	9304      	str	r3, [sp, #16]
10000cd0:	9703      	str	r7, [sp, #12]
10000cd2:	f89d 3080 	ldrb.w	r3, [sp, #128]	; 0x80
10000cd6:	9302      	str	r3, [sp, #8]
10000cd8:	f8cd 9004 	str.w	r9, [sp, #4]
10000cdc:	ab0c      	add	r3, sp, #48	; 0x30
10000cde:	9300      	str	r3, [sp, #0]
10000ce0:	465b      	mov	r3, fp
10000ce2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
10000ce4:	990a      	ldr	r1, [sp, #40]	; 0x28
10000ce6:	9809      	ldr	r0, [sp, #36]	; 0x24
10000ce8:	f7ff feba 	bl	10000a60 <_ntoa_format>
}
10000cec:	b015      	add	sp, #84	; 0x54
10000cee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10000cf2:	0000      	movs	r0, r0
10000cf4:	0000      	movs	r0, r0
	...

10000cf8 <_etoa>:


#if defined(PRINTF_SUPPORT_EXPONENTIAL)
// internal ftoa variant for exponential floating-point type, contributed by Martijn Jasperse <m.jasperse@gmail.com>
static size_t _etoa(out_fct_type out, char* buffer, size_t idx, size_t maxlen, double value, unsigned int prec, unsigned int width, unsigned int flags)
{
10000cf8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10000cfc:	ed2d 8b02 	vpush	{d8}
10000d00:	b091      	sub	sp, #68	; 0x44
10000d02:	4682      	mov	sl, r0
10000d04:	460c      	mov	r4, r1
10000d06:	4693      	mov	fp, r2
10000d08:	461d      	mov	r5, r3
  // check for NaN and special values
  if ((value != value) || (value > DBL_MAX) || (value < -DBL_MAX)) {
10000d0a:	e9dd 231c 	ldrd	r2, r3, [sp, #112]	; 0x70
10000d0e:	4610      	mov	r0, r2
10000d10:	4619      	mov	r1, r3
10000d12:	f003 fb87 	bl	10004424 <__aeabi_dcmpeq>
10000d16:	2800      	cmp	r0, #0
10000d18:	f000 8107 	beq.w	10000f2a <_etoa+0x232>
10000d1c:	f04f 32ff 	mov.w	r2, #4294967295
10000d20:	4bb1      	ldr	r3, [pc, #708]	; (10000fe8 <_etoa+0x2f0>)
10000d22:	e9dd 011c 	ldrd	r0, r1, [sp, #112]	; 0x70
10000d26:	f003 fba5 	bl	10004474 <__aeabi_dcmpgt>
10000d2a:	2800      	cmp	r0, #0
10000d2c:	f040 80fd 	bne.w	10000f2a <_etoa+0x232>
10000d30:	f04f 32ff 	mov.w	r2, #4294967295
10000d34:	f46f 1380 	mvn.w	r3, #1048576	; 0x100000
10000d38:	e9dd 011c 	ldrd	r0, r1, [sp, #112]	; 0x70
10000d3c:	f003 fb7c 	bl	10004438 <__aeabi_dcmplt>
10000d40:	2800      	cmp	r0, #0
10000d42:	f040 80f2 	bne.w	10000f2a <_etoa+0x232>
    return _ftoa(out, buffer, idx, maxlen, value, prec, width, flags);
  }

  // determine the sign
  const bool negative = value < 0;
  if (negative) {
10000d46:	2200      	movs	r2, #0
10000d48:	2300      	movs	r3, #0
10000d4a:	e9dd 011c 	ldrd	r0, r1, [sp, #112]	; 0x70
10000d4e:	f003 fb73 	bl	10004438 <__aeabi_dcmplt>
10000d52:	2800      	cmp	r0, #0
10000d54:	f040 80fe 	bne.w	10000f54 <_etoa+0x25c>
10000d58:	ed9d 7b1c 	vldr	d7, [sp, #112]	; 0x70
10000d5c:	ed8d 7b06 	vstr	d7, [sp, #24]
    value = -value;
  }

  // default precision
  if (!(flags & FLAGS_PRECISION)) {
10000d60:	9b20      	ldr	r3, [sp, #128]	; 0x80
10000d62:	f413 6380 	ands.w	r3, r3, #1024	; 0x400
10000d66:	930f      	str	r3, [sp, #60]	; 0x3c
10000d68:	d101      	bne.n	10000d6e <_etoa+0x76>
    prec = PRINTF_DEFAULT_FLOAT_PRECISION;
10000d6a:	2306      	movs	r3, #6
10000d6c:	931e      	str	r3, [sp, #120]	; 0x78
    uint64_t U;
    double   F;
  } conv;

  conv.F = value;
  int exp2 = (int)((conv.U >> 52U) & 0x07FFU) - 1023;           // effectively log2
10000d6e:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
10000d72:	4602      	mov	r2, r0
10000d74:	f3c1 500a 	ubfx	r0, r1, #20, #11
  conv.U = (conv.U & ((1ULL << 52U) - 1U)) | (1023ULL << 52U);  // drop the exponent so conv.F is now in [1,2)
10000d78:	f3c1 0313 	ubfx	r3, r1, #0, #20
10000d7c:	4690      	mov	r8, r2
10000d7e:	f043 597f 	orr.w	r9, r3, #1069547520	; 0x3fc00000
10000d82:	f449 1940 	orr.w	r9, r9, #3145728	; 0x300000
  // now approximate log10 from the log2 integer part and an expansion of ln around 1.5
  int expval = (int)(0.1760912590558 + exp2 * 0.301029995663981 + (conv.F - 1.5) * 0.289529654602168);
10000d86:	f2a0 30ff 	subw	r0, r0, #1023	; 0x3ff
10000d8a:	f003 f879 	bl	10003e80 <__aeabi_i2d>
10000d8e:	a384      	add	r3, pc, #528	; (adr r3, 10000fa0 <_etoa+0x2a8>)
10000d90:	e9d3 2300 	ldrd	r2, r3, [r3]
10000d94:	f003 f8de 	bl	10003f54 <__aeabi_dmul>
10000d98:	a383      	add	r3, pc, #524	; (adr r3, 10000fa8 <_etoa+0x2b0>)
10000d9a:	e9d3 2300 	ldrd	r2, r3, [r3]
10000d9e:	f002 ff23 	bl	10003be8 <__adddf3>
10000da2:	4606      	mov	r6, r0
10000da4:	460f      	mov	r7, r1
10000da6:	2200      	movs	r2, #0
10000da8:	4b90      	ldr	r3, [pc, #576]	; (10000fec <_etoa+0x2f4>)
10000daa:	4640      	mov	r0, r8
10000dac:	4649      	mov	r1, r9
10000dae:	f002 ff19 	bl	10003be4 <__aeabi_dsub>
10000db2:	a37f      	add	r3, pc, #508	; (adr r3, 10000fb0 <_etoa+0x2b8>)
10000db4:	e9d3 2300 	ldrd	r2, r3, [r3]
10000db8:	f003 f8cc 	bl	10003f54 <__aeabi_dmul>
10000dbc:	4602      	mov	r2, r0
10000dbe:	460b      	mov	r3, r1
10000dc0:	4630      	mov	r0, r6
10000dc2:	4639      	mov	r1, r7
10000dc4:	f002 ff10 	bl	10003be8 <__adddf3>
10000dc8:	f003 fb5e 	bl	10004488 <__aeabi_d2iz>
10000dcc:	4606      	mov	r6, r0
  // now we want to compute 10^expval but we want to be sure it won't overflow
  exp2 = (int)(expval * 3.321928094887362 + 0.5);
10000dce:	f003 f857 	bl	10003e80 <__aeabi_i2d>
10000dd2:	4680      	mov	r8, r0
10000dd4:	4689      	mov	r9, r1
10000dd6:	a378      	add	r3, pc, #480	; (adr r3, 10000fb8 <_etoa+0x2c0>)
10000dd8:	e9d3 2300 	ldrd	r2, r3, [r3]
10000ddc:	f003 f8ba 	bl	10003f54 <__aeabi_dmul>
10000de0:	2200      	movs	r2, #0
10000de2:	4b83      	ldr	r3, [pc, #524]	; (10000ff0 <_etoa+0x2f8>)
10000de4:	f002 ff00 	bl	10003be8 <__adddf3>
10000de8:	f003 fb4e 	bl	10004488 <__aeabi_d2iz>
10000dec:	4607      	mov	r7, r0
  const double z  = expval * 2.302585092994046 - exp2 * 0.6931471805599453;
10000dee:	a374      	add	r3, pc, #464	; (adr r3, 10000fc0 <_etoa+0x2c8>)
10000df0:	e9d3 2300 	ldrd	r2, r3, [r3]
10000df4:	4640      	mov	r0, r8
10000df6:	4649      	mov	r1, r9
10000df8:	f003 f8ac 	bl	10003f54 <__aeabi_dmul>
10000dfc:	4680      	mov	r8, r0
10000dfe:	4689      	mov	r9, r1
10000e00:	4638      	mov	r0, r7
10000e02:	f003 f83d 	bl	10003e80 <__aeabi_i2d>
10000e06:	a370      	add	r3, pc, #448	; (adr r3, 10000fc8 <_etoa+0x2d0>)
10000e08:	e9d3 2300 	ldrd	r2, r3, [r3]
10000e0c:	f003 f8a2 	bl	10003f54 <__aeabi_dmul>
10000e10:	4602      	mov	r2, r0
10000e12:	460b      	mov	r3, r1
10000e14:	4640      	mov	r0, r8
10000e16:	4649      	mov	r1, r9
10000e18:	f002 fee4 	bl	10003be4 <__aeabi_dsub>
10000e1c:	4680      	mov	r8, r0
10000e1e:	4689      	mov	r9, r1
  const double z2 = z * z;
10000e20:	4602      	mov	r2, r0
10000e22:	460b      	mov	r3, r1
10000e24:	f003 f896 	bl	10003f54 <__aeabi_dmul>
10000e28:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
  conv.U = (uint64_t)(exp2 + 1023) << 52U;
10000e2c:	f207 37ff 	addw	r7, r7, #1023	; 0x3ff
10000e30:	2100      	movs	r1, #0
10000e32:	2200      	movs	r2, #0
10000e34:	e9cd 1208 	strd	r1, r2, [sp, #32]
10000e38:	053b      	lsls	r3, r7, #20
10000e3a:	9309      	str	r3, [sp, #36]	; 0x24
10000e3c:	2300      	movs	r3, #0
10000e3e:	9308      	str	r3, [sp, #32]
  // compute exp(z) using continued fractions, see https://en.wikipedia.org/wiki/Exponential_function#Continued_fractions_for_ex
  conv.F *= 1 + 2 * z / (2 - z + (z2 / (6 + (z2 / (10 + z2 / 14)))));
10000e40:	4642      	mov	r2, r8
10000e42:	464b      	mov	r3, r9
10000e44:	4640      	mov	r0, r8
10000e46:	4649      	mov	r1, r9
10000e48:	f002 fece 	bl	10003be8 <__adddf3>
10000e4c:	e9cd 010c 	strd	r0, r1, [sp, #48]	; 0x30
10000e50:	4642      	mov	r2, r8
10000e52:	464b      	mov	r3, r9
10000e54:	2000      	movs	r0, #0
10000e56:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
10000e5a:	f002 fec3 	bl	10003be4 <__aeabi_dsub>
10000e5e:	4680      	mov	r8, r0
10000e60:	4689      	mov	r9, r1
10000e62:	2200      	movs	r2, #0
10000e64:	4b63      	ldr	r3, [pc, #396]	; (10000ff4 <_etoa+0x2fc>)
10000e66:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
10000e6a:	f003 f99d 	bl	100041a8 <__aeabi_ddiv>
10000e6e:	2200      	movs	r2, #0
10000e70:	4b61      	ldr	r3, [pc, #388]	; (10000ff8 <_etoa+0x300>)
10000e72:	f002 feb9 	bl	10003be8 <__adddf3>
10000e76:	4602      	mov	r2, r0
10000e78:	460b      	mov	r3, r1
10000e7a:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
10000e7e:	f003 f993 	bl	100041a8 <__aeabi_ddiv>
10000e82:	2200      	movs	r2, #0
10000e84:	4b5d      	ldr	r3, [pc, #372]	; (10000ffc <_etoa+0x304>)
10000e86:	f002 feaf 	bl	10003be8 <__adddf3>
10000e8a:	4602      	mov	r2, r0
10000e8c:	460b      	mov	r3, r1
10000e8e:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
10000e92:	f003 f989 	bl	100041a8 <__aeabi_ddiv>
10000e96:	4602      	mov	r2, r0
10000e98:	460b      	mov	r3, r1
10000e9a:	4640      	mov	r0, r8
10000e9c:	4649      	mov	r1, r9
10000e9e:	f002 fea3 	bl	10003be8 <__adddf3>
10000ea2:	4602      	mov	r2, r0
10000ea4:	460b      	mov	r3, r1
10000ea6:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
10000eaa:	f003 f97d 	bl	100041a8 <__aeabi_ddiv>
10000eae:	2200      	movs	r2, #0
10000eb0:	4b53      	ldr	r3, [pc, #332]	; (10001000 <_etoa+0x308>)
10000eb2:	f002 fe99 	bl	10003be8 <__adddf3>
10000eb6:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
10000eba:	f003 f84b 	bl	10003f54 <__aeabi_dmul>
10000ebe:	4680      	mov	r8, r0
10000ec0:	4689      	mov	r9, r1
10000ec2:	ec49 8b18 	vmov	d8, r8, r9
  // correct for rounding errors
  if (value < conv.F) {
10000ec6:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
10000eca:	f003 fad3 	bl	10004474 <__aeabi_dcmpgt>
10000ece:	b140      	cbz	r0, 10000ee2 <_etoa+0x1ea>
    expval--;
10000ed0:	3e01      	subs	r6, #1
    conv.F /= 10;
10000ed2:	2200      	movs	r2, #0
10000ed4:	4b48      	ldr	r3, [pc, #288]	; (10000ff8 <_etoa+0x300>)
10000ed6:	4640      	mov	r0, r8
10000ed8:	4649      	mov	r1, r9
10000eda:	f003 f965 	bl	100041a8 <__aeabi_ddiv>
10000ede:	ec41 0b18 	vmov	d8, r0, r1
  }

  // the exponent format is "%+03d" and largest value is "307", so set aside 4-5 characters
  unsigned int minwidth = ((expval < 100) && (expval > -100)) ? 4U : 5U;
10000ee2:	f106 0363 	add.w	r3, r6, #99	; 0x63
10000ee6:	2bc6      	cmp	r3, #198	; 0xc6
10000ee8:	d83f      	bhi.n	10000f6a <_etoa+0x272>
10000eea:	2704      	movs	r7, #4

  // in "%g" mode, "prec" is the number of *significant figures* not decimals
  if (flags & FLAGS_ADAPT_EXP) {
10000eec:	9b20      	ldr	r3, [sp, #128]	; 0x80
10000eee:	f413 6f00 	tst.w	r3, #2048	; 0x800
10000ef2:	d044      	beq.n	10000f7e <_etoa+0x286>
    // do we want to fall-back to "%f" mode?
    if ((value >= 1e-4) && (value < 1e6)) {
10000ef4:	a336      	add	r3, pc, #216	; (adr r3, 10000fd0 <_etoa+0x2d8>)
10000ef6:	e9d3 2300 	ldrd	r2, r3, [r3]
10000efa:	e9dd 8906 	ldrd	r8, r9, [sp, #24]
10000efe:	4640      	mov	r0, r8
10000f00:	4649      	mov	r1, r9
10000f02:	f003 faad 	bl	10004460 <__aeabi_dcmpge>
10000f06:	2800      	cmp	r0, #0
10000f08:	d03f      	beq.n	10000f8a <_etoa+0x292>
10000f0a:	a333      	add	r3, pc, #204	; (adr r3, 10000fd8 <_etoa+0x2e0>)
10000f0c:	e9d3 2300 	ldrd	r2, r3, [r3]
10000f10:	4640      	mov	r0, r8
10000f12:	4649      	mov	r1, r9
10000f14:	f003 fa90 	bl	10004438 <__aeabi_dcmplt>
10000f18:	2800      	cmp	r0, #0
10000f1a:	d036      	beq.n	10000f8a <_etoa+0x292>
      if ((int)prec > expval) {
10000f1c:	9b1e      	ldr	r3, [sp, #120]	; 0x78
10000f1e:	42b3      	cmp	r3, r6
10000f20:	dd25      	ble.n	10000f6e <_etoa+0x276>
        prec = (unsigned)((int)prec - expval - 1);
10000f22:	1b9e      	subs	r6, r3, r6
10000f24:	1e73      	subs	r3, r6, #1
10000f26:	931e      	str	r3, [sp, #120]	; 0x78
10000f28:	e023      	b.n	10000f72 <_etoa+0x27a>
    return _ftoa(out, buffer, idx, maxlen, value, prec, width, flags);
10000f2a:	9b20      	ldr	r3, [sp, #128]	; 0x80
10000f2c:	9304      	str	r3, [sp, #16]
10000f2e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
10000f30:	9303      	str	r3, [sp, #12]
10000f32:	9b1e      	ldr	r3, [sp, #120]	; 0x78
10000f34:	9302      	str	r3, [sp, #8]
10000f36:	ed9d 7b1c 	vldr	d7, [sp, #112]	; 0x70
10000f3a:	ed8d 7b00 	vstr	d7, [sp]
10000f3e:	462b      	mov	r3, r5
10000f40:	465a      	mov	r2, fp
10000f42:	4621      	mov	r1, r4
10000f44:	4650      	mov	r0, sl
10000f46:	f000 f8cf 	bl	100010e8 <_ftoa>
    if (flags & FLAGS_LEFT) {
      while (idx - start_idx < width) out(' ', buffer, idx++, maxlen);
    }
  }
  return idx;
}
10000f4a:	b011      	add	sp, #68	; 0x44
10000f4c:	ecbd 8b02 	vpop	{d8}
10000f50:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    value = -value;
10000f54:	ed9f 7b22 	vldr	d7, [pc, #136]	; 10000fe0 <_etoa+0x2e8>
10000f58:	ed8d 7b06 	vstr	d7, [sp, #24]
10000f5c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
10000f5e:	9306      	str	r3, [sp, #24]
10000f60:	9b1d      	ldr	r3, [sp, #116]	; 0x74
10000f62:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
10000f66:	9307      	str	r3, [sp, #28]
10000f68:	e6fa      	b.n	10000d60 <_etoa+0x68>
  unsigned int minwidth = ((expval < 100) && (expval > -100)) ? 4U : 5U;
10000f6a:	2705      	movs	r7, #5
10000f6c:	e7be      	b.n	10000eec <_etoa+0x1f4>
        prec = 0;
10000f6e:	2300      	movs	r3, #0
10000f70:	931e      	str	r3, [sp, #120]	; 0x78
      flags |= FLAGS_PRECISION;   // make sure _ftoa respects precision
10000f72:	9b20      	ldr	r3, [sp, #128]	; 0x80
10000f74:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
10000f78:	9320      	str	r3, [sp, #128]	; 0x80
      minwidth = 0U;
10000f7a:	2700      	movs	r7, #0
      expval   = 0;
10000f7c:	463e      	mov	r6, r7
  if (width > minwidth) {
10000f7e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
10000f80:	429f      	cmp	r7, r3
10000f82:	d23f      	bcs.n	10001004 <_etoa+0x30c>
    fwidth -= minwidth;
10000f84:	eba3 0807 	sub.w	r8, r3, r7
10000f88:	e03e      	b.n	10001008 <_etoa+0x310>
      if ((prec > 0) && (flags & FLAGS_PRECISION)) {
10000f8a:	9b1e      	ldr	r3, [sp, #120]	; 0x78
10000f8c:	2b00      	cmp	r3, #0
10000f8e:	d0f6      	beq.n	10000f7e <_etoa+0x286>
10000f90:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
10000f92:	2b00      	cmp	r3, #0
10000f94:	d0f3      	beq.n	10000f7e <_etoa+0x286>
        --prec;
10000f96:	9b1e      	ldr	r3, [sp, #120]	; 0x78
10000f98:	3b01      	subs	r3, #1
10000f9a:	931e      	str	r3, [sp, #120]	; 0x78
10000f9c:	e7ef      	b.n	10000f7e <_etoa+0x286>
10000f9e:	bf00      	nop
10000fa0:	509f79fb 			; <UNDEFINED> instruction: 0x509f79fb
10000fa4:	3fd34413 	svccc	0x00d34413
10000fa8:	8b60c8b3 	blhi	1183327c <__copy_table_end__+0x182d3b4>
10000fac:	3fc68a28 	svccc	0x00c68a28
10000fb0:	636f4361 	cmnvs	pc, #-2080374783	; 0x84000001
10000fb4:	3fd287a7 	svccc	0x00d287a7
10000fb8:	0979a371 	ldmdbeq	r9!, {r0, r4, r5, r6, r8, r9, sp, pc}^
10000fbc:	400a934f 	andmi	r9, sl, pc, asr #6
10000fc0:	bbb55516 	bllt	ed56420 <__RAM_SIZE+0xec56420>
10000fc4:	40026bb1 			; <UNDEFINED> instruction: 0x40026bb1
10000fc8:	fefa39ef 			; <UNDEFINED> instruction: 0xfefa39ef
10000fcc:	3fe62e42 	svccc	0x00e62e42
10000fd0:	eb1c432d 	bl	10711c8c <__copy_table_end__+0x70bdc4>
10000fd4:	3f1a36e2 	svccc	0x001a36e2
10000fd8:	00000000 	andeq	r0, r0, r0
10000fdc:	412e8480 	smlawbmi	lr, r0, r4, r8
	...
10000fe8:	7fefffff 	svcvc	0x00efffff
10000fec:	3ff80000 	svccc	0x00f80000
10000ff0:	3fe00000 	svccc	0x00e00000
10000ff4:	402c0000 	eormi	r0, ip, r0
10000ff8:	40240000 	eormi	r0, r4, r0
10000ffc:	40180000 	andsmi	r0, r8, r0
10001000:	3ff00000 	svccc	0x00f00000	; IMB
    fwidth = 0U;
10001004:	f04f 0800 	mov.w	r8, #0
  if ((flags & FLAGS_LEFT) && minwidth) {
10001008:	9b20      	ldr	r3, [sp, #128]	; 0x80
1000100a:	f013 0902 	ands.w	r9, r3, #2
1000100e:	d002      	beq.n	10001016 <_etoa+0x31e>
10001010:	b10f      	cbz	r7, 10001016 <_etoa+0x31e>
    fwidth = 0U;
10001012:	f04f 0800 	mov.w	r8, #0
  if (expval) {
10001016:	b13e      	cbz	r6, 10001028 <_etoa+0x330>
    value /= conv.F;
10001018:	ec53 2b18 	vmov	r2, r3, d8
1000101c:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
10001020:	f003 f8c2 	bl	100041a8 <__aeabi_ddiv>
10001024:	e9cd 0106 	strd	r0, r1, [sp, #24]
  idx = _ftoa(out, buffer, idx, maxlen, negative ? -value : value, prec, fwidth, flags & ~FLAGS_ADAPT_EXP);
10001028:	2200      	movs	r2, #0
1000102a:	2300      	movs	r3, #0
1000102c:	e9dd 011c 	ldrd	r0, r1, [sp, #112]	; 0x70
10001030:	f003 fa02 	bl	10004438 <__aeabi_dcmplt>
10001034:	2800      	cmp	r0, #0
10001036:	d13d      	bne.n	100010b4 <_etoa+0x3bc>
10001038:	9b20      	ldr	r3, [sp, #128]	; 0x80
1000103a:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
1000103e:	9304      	str	r3, [sp, #16]
10001040:	f8cd 800c 	str.w	r8, [sp, #12]
10001044:	9b1e      	ldr	r3, [sp, #120]	; 0x78
10001046:	9302      	str	r3, [sp, #8]
10001048:	ed9d 7b06 	vldr	d7, [sp, #24]
1000104c:	ed8d 7b00 	vstr	d7, [sp]
10001050:	462b      	mov	r3, r5
10001052:	465a      	mov	r2, fp
10001054:	4621      	mov	r1, r4
10001056:	4650      	mov	r0, sl
10001058:	f000 f846 	bl	100010e8 <_ftoa>
  if (minwidth) {
1000105c:	2f00      	cmp	r7, #0
1000105e:	f43f af74 	beq.w	10000f4a <_etoa+0x252>
    out((flags & FLAGS_UPPERCASE) ? 'E' : 'e', buffer, idx++, maxlen);
10001062:	9b20      	ldr	r3, [sp, #128]	; 0x80
10001064:	f013 0f20 	tst.w	r3, #32
10001068:	d02c      	beq.n	100010c4 <_etoa+0x3cc>
1000106a:	f04f 0c45 	mov.w	ip, #69	; 0x45
1000106e:	f100 0801 	add.w	r8, r0, #1
10001072:	462b      	mov	r3, r5
10001074:	4602      	mov	r2, r0
10001076:	4621      	mov	r1, r4
10001078:	4660      	mov	r0, ip
1000107a:	47d0      	blx	sl
    idx = _ntoa_long(out, buffer, idx, maxlen, (expval < 0) ? -expval : expval, expval < 0, 10, 0, minwidth-1, FLAGS_ZEROPAD | FLAGS_PLUS);
1000107c:	ea86 73e6 	eor.w	r3, r6, r6, asr #31
10001080:	eba3 73e6 	sub.w	r3, r3, r6, asr #31
10001084:	2205      	movs	r2, #5
10001086:	9205      	str	r2, [sp, #20]
10001088:	3f01      	subs	r7, #1
1000108a:	9704      	str	r7, [sp, #16]
1000108c:	2200      	movs	r2, #0
1000108e:	9203      	str	r2, [sp, #12]
10001090:	220a      	movs	r2, #10
10001092:	9202      	str	r2, [sp, #8]
10001094:	0ff0      	lsrs	r0, r6, #31
10001096:	9001      	str	r0, [sp, #4]
10001098:	9300      	str	r3, [sp, #0]
1000109a:	462b      	mov	r3, r5
1000109c:	4642      	mov	r2, r8
1000109e:	4621      	mov	r1, r4
100010a0:	4650      	mov	r0, sl
100010a2:	f7ff fd79 	bl	10000b98 <_ntoa_long>
    if (flags & FLAGS_LEFT) {
100010a6:	f1b9 0f00 	cmp.w	r9, #0
100010aa:	f43f af4e 	beq.w	10000f4a <_etoa+0x252>
100010ae:	4602      	mov	r2, r0
100010b0:	9f1f      	ldr	r7, [sp, #124]	; 0x7c
100010b2:	e010      	b.n	100010d6 <_etoa+0x3de>
  idx = _ftoa(out, buffer, idx, maxlen, negative ? -value : value, prec, fwidth, flags & ~FLAGS_ADAPT_EXP);
100010b4:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
100010b8:	4602      	mov	r2, r0
100010ba:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
100010be:	e9cd 2306 	strd	r2, r3, [sp, #24]
100010c2:	e7b9      	b.n	10001038 <_etoa+0x340>
    out((flags & FLAGS_UPPERCASE) ? 'E' : 'e', buffer, idx++, maxlen);
100010c4:	f04f 0c65 	mov.w	ip, #101	; 0x65
100010c8:	e7d1      	b.n	1000106e <_etoa+0x376>
      while (idx - start_idx < width) out(' ', buffer, idx++, maxlen);
100010ca:	1c56      	adds	r6, r2, #1
100010cc:	462b      	mov	r3, r5
100010ce:	4621      	mov	r1, r4
100010d0:	2020      	movs	r0, #32
100010d2:	47d0      	blx	sl
100010d4:	4632      	mov	r2, r6
100010d6:	eba2 030b 	sub.w	r3, r2, fp
100010da:	42bb      	cmp	r3, r7
100010dc:	d3f5      	bcc.n	100010ca <_etoa+0x3d2>
100010de:	4610      	mov	r0, r2
100010e0:	e733      	b.n	10000f4a <_etoa+0x252>
100010e2:	bf00      	nop
100010e4:	0000      	movs	r0, r0
	...

100010e8 <_ftoa>:
{
100010e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
100010ec:	ed2d 8b02 	vpush	{d8}
100010f0:	b095      	sub	sp, #84	; 0x54
100010f2:	9007      	str	r0, [sp, #28]
100010f4:	910a      	str	r1, [sp, #40]	; 0x28
100010f6:	4692      	mov	sl, r2
100010f8:	469b      	mov	fp, r3
100010fa:	e9dd 8920 	ldrd	r8, r9, [sp, #128]	; 0x80
100010fe:	9d22      	ldr	r5, [sp, #136]	; 0x88
  if (value != value)
10001100:	4642      	mov	r2, r8
10001102:	464b      	mov	r3, r9
10001104:	4640      	mov	r0, r8
10001106:	4649      	mov	r1, r9
10001108:	f003 f98c 	bl	10004424 <__aeabi_dcmpeq>
1000110c:	2800      	cmp	r0, #0
1000110e:	d040      	beq.n	10001192 <_ftoa+0xaa>
  if (value < -DBL_MAX)
10001110:	f04f 32ff 	mov.w	r2, #4294967295
10001114:	f46f 1380 	mvn.w	r3, #1048576	; 0x100000
10001118:	4640      	mov	r0, r8
1000111a:	4649      	mov	r1, r9
1000111c:	f003 f98c 	bl	10004438 <__aeabi_dcmplt>
10001120:	2800      	cmp	r0, #0
10001122:	d145      	bne.n	100011b0 <_ftoa+0xc8>
  if (value > DBL_MAX)
10001124:	f04f 32ff 	mov.w	r2, #4294967295
10001128:	4b9f      	ldr	r3, [pc, #636]	; (100013a8 <_ftoa+0x2c0>)
1000112a:	4640      	mov	r0, r8
1000112c:	4649      	mov	r1, r9
1000112e:	f003 f9a1 	bl	10004474 <__aeabi_dcmpgt>
10001132:	2800      	cmp	r0, #0
10001134:	d14b      	bne.n	100011ce <_ftoa+0xe6>
  if ((value > PRINTF_MAX_FLOAT) || (value < -PRINTF_MAX_FLOAT)) {
10001136:	a398      	add	r3, pc, #608	; (adr r3, 10001398 <_ftoa+0x2b0>)
10001138:	e9d3 2300 	ldrd	r2, r3, [r3]
1000113c:	4640      	mov	r0, r8
1000113e:	4649      	mov	r1, r9
10001140:	f003 f998 	bl	10004474 <__aeabi_dcmpgt>
10001144:	2800      	cmp	r0, #0
10001146:	d15a      	bne.n	100011fe <_ftoa+0x116>
10001148:	a395      	add	r3, pc, #596	; (adr r3, 100013a0 <_ftoa+0x2b8>)
1000114a:	e9d3 2300 	ldrd	r2, r3, [r3]
1000114e:	4640      	mov	r0, r8
10001150:	4649      	mov	r1, r9
10001152:	f003 f971 	bl	10004438 <__aeabi_dcmplt>
10001156:	2800      	cmp	r0, #0
10001158:	d151      	bne.n	100011fe <_ftoa+0x116>
  if (value < 0) {
1000115a:	2200      	movs	r2, #0
1000115c:	2300      	movs	r3, #0
1000115e:	4640      	mov	r0, r8
10001160:	4649      	mov	r1, r9
10001162:	f003 f969 	bl	10004438 <__aeabi_dcmplt>
10001166:	2800      	cmp	r0, #0
10001168:	d157      	bne.n	1000121a <_ftoa+0x132>
  bool negative = false;
1000116a:	2300      	movs	r3, #0
1000116c:	930b      	str	r3, [sp, #44]	; 0x2c
  if (!(flags & FLAGS_PRECISION)) {
1000116e:	9b24      	ldr	r3, [sp, #144]	; 0x90
10001170:	f413 6f80 	tst.w	r3, #1024	; 0x400
10001174:	d05c      	beq.n	10001230 <_ftoa+0x148>
    prec = PRINTF_DEFAULT_FLOAT_PRECISION;
10001176:	2400      	movs	r4, #0
  while ((len < PRINTF_FTOA_BUFFER_SIZE) && (prec > 9U)) {
10001178:	2c1f      	cmp	r4, #31
1000117a:	d85b      	bhi.n	10001234 <_ftoa+0x14c>
1000117c:	2d09      	cmp	r5, #9
1000117e:	d959      	bls.n	10001234 <_ftoa+0x14c>
    buf[len++] = '0';
10001180:	f104 0350 	add.w	r3, r4, #80	; 0x50
10001184:	446b      	add	r3, sp
10001186:	2230      	movs	r2, #48	; 0x30
10001188:	f803 2c20 	strb.w	r2, [r3, #-32]
    prec--;
1000118c:	3d01      	subs	r5, #1
    buf[len++] = '0';
1000118e:	3401      	adds	r4, #1
10001190:	e7f2      	b.n	10001178 <_ftoa+0x90>
    return _out_rev(out, buffer, idx, maxlen, "nan", 3, width, flags);
10001192:	9b24      	ldr	r3, [sp, #144]	; 0x90
10001194:	9303      	str	r3, [sp, #12]
10001196:	9b23      	ldr	r3, [sp, #140]	; 0x8c
10001198:	9302      	str	r3, [sp, #8]
1000119a:	2303      	movs	r3, #3
1000119c:	9301      	str	r3, [sp, #4]
1000119e:	4b83      	ldr	r3, [pc, #524]	; (100013ac <_ftoa+0x2c4>)
100011a0:	9300      	str	r3, [sp, #0]
100011a2:	465b      	mov	r3, fp
100011a4:	4652      	mov	r2, sl
100011a6:	990a      	ldr	r1, [sp, #40]	; 0x28
100011a8:	9807      	ldr	r0, [sp, #28]
100011aa:	f7ff fc1a 	bl	100009e2 <_out_rev>
100011ae:	e12c      	b.n	1000140a <_ftoa+0x322>
    return _out_rev(out, buffer, idx, maxlen, "fni-", 4, width, flags);
100011b0:	9b24      	ldr	r3, [sp, #144]	; 0x90
100011b2:	9303      	str	r3, [sp, #12]
100011b4:	9b23      	ldr	r3, [sp, #140]	; 0x8c
100011b6:	9302      	str	r3, [sp, #8]
100011b8:	2304      	movs	r3, #4
100011ba:	9301      	str	r3, [sp, #4]
100011bc:	4b7c      	ldr	r3, [pc, #496]	; (100013b0 <_ftoa+0x2c8>)
100011be:	9300      	str	r3, [sp, #0]
100011c0:	465b      	mov	r3, fp
100011c2:	4652      	mov	r2, sl
100011c4:	990a      	ldr	r1, [sp, #40]	; 0x28
100011c6:	9807      	ldr	r0, [sp, #28]
100011c8:	f7ff fc0b 	bl	100009e2 <_out_rev>
100011cc:	e11d      	b.n	1000140a <_ftoa+0x322>
    return _out_rev(out, buffer, idx, maxlen, (flags & FLAGS_PLUS) ? "fni+" : "fni", (flags & FLAGS_PLUS) ? 4U : 3U, width, flags);
100011ce:	9b24      	ldr	r3, [sp, #144]	; 0x90
100011d0:	f013 0304 	ands.w	r3, r3, #4
100011d4:	d00f      	beq.n	100011f6 <_ftoa+0x10e>
100011d6:	4a77      	ldr	r2, [pc, #476]	; (100013b4 <_ftoa+0x2cc>)
100011d8:	b17b      	cbz	r3, 100011fa <_ftoa+0x112>
100011da:	2304      	movs	r3, #4
100011dc:	9924      	ldr	r1, [sp, #144]	; 0x90
100011de:	9103      	str	r1, [sp, #12]
100011e0:	9923      	ldr	r1, [sp, #140]	; 0x8c
100011e2:	9102      	str	r1, [sp, #8]
100011e4:	9301      	str	r3, [sp, #4]
100011e6:	9200      	str	r2, [sp, #0]
100011e8:	465b      	mov	r3, fp
100011ea:	4652      	mov	r2, sl
100011ec:	990a      	ldr	r1, [sp, #40]	; 0x28
100011ee:	9807      	ldr	r0, [sp, #28]
100011f0:	f7ff fbf7 	bl	100009e2 <_out_rev>
100011f4:	e109      	b.n	1000140a <_ftoa+0x322>
100011f6:	4a70      	ldr	r2, [pc, #448]	; (100013b8 <_ftoa+0x2d0>)
100011f8:	e7ee      	b.n	100011d8 <_ftoa+0xf0>
100011fa:	2303      	movs	r3, #3
100011fc:	e7ee      	b.n	100011dc <_ftoa+0xf4>
    return _etoa(out, buffer, idx, maxlen, value, prec, width, flags);
100011fe:	9b24      	ldr	r3, [sp, #144]	; 0x90
10001200:	9304      	str	r3, [sp, #16]
10001202:	9b23      	ldr	r3, [sp, #140]	; 0x8c
10001204:	9303      	str	r3, [sp, #12]
10001206:	9502      	str	r5, [sp, #8]
10001208:	e9cd 8900 	strd	r8, r9, [sp]
1000120c:	465b      	mov	r3, fp
1000120e:	4652      	mov	r2, sl
10001210:	990a      	ldr	r1, [sp, #40]	; 0x28
10001212:	9807      	ldr	r0, [sp, #28]
10001214:	f7ff fd70 	bl	10000cf8 <_etoa>
10001218:	e0f7      	b.n	1000140a <_ftoa+0x322>
    value = 0 - value;
1000121a:	4642      	mov	r2, r8
1000121c:	464b      	mov	r3, r9
1000121e:	2000      	movs	r0, #0
10001220:	2100      	movs	r1, #0
10001222:	f002 fcdf 	bl	10003be4 <__aeabi_dsub>
10001226:	4680      	mov	r8, r0
10001228:	4689      	mov	r9, r1
    negative = true;
1000122a:	2301      	movs	r3, #1
1000122c:	930b      	str	r3, [sp, #44]	; 0x2c
1000122e:	e79e      	b.n	1000116e <_ftoa+0x86>
    prec = PRINTF_DEFAULT_FLOAT_PRECISION;
10001230:	2506      	movs	r5, #6
10001232:	e7a0      	b.n	10001176 <_ftoa+0x8e>
  int whole = (int)value;
10001234:	4640      	mov	r0, r8
10001236:	4649      	mov	r1, r9
10001238:	f003 f926 	bl	10004488 <__aeabi_d2iz>
1000123c:	4606      	mov	r6, r0
  double tmp = (value - whole) * pow10[prec];
1000123e:	f002 fe1f 	bl	10003e80 <__aeabi_i2d>
10001242:	4602      	mov	r2, r0
10001244:	460b      	mov	r3, r1
10001246:	4640      	mov	r0, r8
10001248:	4649      	mov	r1, r9
1000124a:	f002 fccb 	bl	10003be4 <__aeabi_dsub>
1000124e:	4b5b      	ldr	r3, [pc, #364]	; (100013bc <_ftoa+0x2d4>)
10001250:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
10001254:	ed93 8b00 	vldr	d8, [r3]
10001258:	ec53 2b18 	vmov	r2, r3, d8
1000125c:	f002 fe7a 	bl	10003f54 <__aeabi_dmul>
10001260:	4602      	mov	r2, r0
10001262:	460b      	mov	r3, r1
10001264:	e9cd 2308 	strd	r2, r3, [sp, #32]
  unsigned long frac = (unsigned long)tmp;
10001268:	f003 f936 	bl	100044d8 <__aeabi_d2uiz>
1000126c:	4607      	mov	r7, r0
  diff = tmp - frac;
1000126e:	f002 fdf7 	bl	10003e60 <__aeabi_ui2d>
10001272:	4602      	mov	r2, r0
10001274:	460b      	mov	r3, r1
10001276:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
1000127a:	f002 fcb3 	bl	10003be4 <__aeabi_dsub>
1000127e:	4602      	mov	r2, r0
10001280:	460b      	mov	r3, r1
10001282:	e9cd 2308 	strd	r2, r3, [sp, #32]
  if (diff > 0.5) {
10001286:	2200      	movs	r2, #0
10001288:	4b4d      	ldr	r3, [pc, #308]	; (100013c0 <_ftoa+0x2d8>)
1000128a:	f003 f8f3 	bl	10004474 <__aeabi_dcmpgt>
1000128e:	b350      	cbz	r0, 100012e6 <_ftoa+0x1fe>
    ++frac;
10001290:	3701      	adds	r7, #1
    if (frac >= pow10[prec]) {
10001292:	4638      	mov	r0, r7
10001294:	f002 fde4 	bl	10003e60 <__aeabi_ui2d>
10001298:	4602      	mov	r2, r0
1000129a:	460b      	mov	r3, r1
1000129c:	ec51 0b18 	vmov	r0, r1, d8
100012a0:	f003 f8d4 	bl	1000444c <__aeabi_dcmple>
100012a4:	b108      	cbz	r0, 100012aa <_ftoa+0x1c2>
      ++whole;
100012a6:	3601      	adds	r6, #1
      frac = 0;
100012a8:	2700      	movs	r7, #0
  if (prec == 0U) {
100012aa:	bb55      	cbnz	r5, 10001302 <_ftoa+0x21a>
    diff = value - (double)whole;
100012ac:	4630      	mov	r0, r6
100012ae:	f002 fde7 	bl	10003e80 <__aeabi_i2d>
100012b2:	4602      	mov	r2, r0
100012b4:	460b      	mov	r3, r1
100012b6:	4640      	mov	r0, r8
100012b8:	4649      	mov	r1, r9
100012ba:	f002 fc93 	bl	10003be4 <__aeabi_dsub>
100012be:	4607      	mov	r7, r0
100012c0:	4688      	mov	r8, r1
    if ((!(diff < 0.5) || (diff > 0.5)) && (whole & 1)) {
100012c2:	2200      	movs	r2, #0
100012c4:	4b3e      	ldr	r3, [pc, #248]	; (100013c0 <_ftoa+0x2d8>)
100012c6:	f003 f8b7 	bl	10004438 <__aeabi_dcmplt>
100012ca:	b138      	cbz	r0, 100012dc <_ftoa+0x1f4>
100012cc:	2200      	movs	r2, #0
100012ce:	4b3c      	ldr	r3, [pc, #240]	; (100013c0 <_ftoa+0x2d8>)
100012d0:	4638      	mov	r0, r7
100012d2:	4641      	mov	r1, r8
100012d4:	f003 f8ce 	bl	10004474 <__aeabi_dcmpgt>
100012d8:	2800      	cmp	r0, #0
100012da:	d042      	beq.n	10001362 <_ftoa+0x27a>
100012dc:	f016 0f01 	tst.w	r6, #1
100012e0:	d03f      	beq.n	10001362 <_ftoa+0x27a>
      ++whole;
100012e2:	3601      	adds	r6, #1
100012e4:	e03d      	b.n	10001362 <_ftoa+0x27a>
  else if (diff < 0.5) {
100012e6:	2200      	movs	r2, #0
100012e8:	4b35      	ldr	r3, [pc, #212]	; (100013c0 <_ftoa+0x2d8>)
100012ea:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
100012ee:	f003 f8a3 	bl	10004438 <__aeabi_dcmplt>
100012f2:	2800      	cmp	r0, #0
100012f4:	d1d9      	bne.n	100012aa <_ftoa+0x1c2>
  else if ((frac == 0U) || (frac & 1U)) {
100012f6:	b117      	cbz	r7, 100012fe <_ftoa+0x216>
100012f8:	f017 0f01 	tst.w	r7, #1
100012fc:	d0d5      	beq.n	100012aa <_ftoa+0x1c2>
    ++frac;
100012fe:	3701      	adds	r7, #1
10001300:	e7d3      	b.n	100012aa <_ftoa+0x1c2>
    while (len < PRINTF_FTOA_BUFFER_SIZE) {
10001302:	2c1f      	cmp	r4, #31
10001304:	d817      	bhi.n	10001336 <_ftoa+0x24e>
      --count;
10001306:	3d01      	subs	r5, #1
      buf[len++] = (char)(48U + (frac % 10U));
10001308:	4b2e      	ldr	r3, [pc, #184]	; (100013c4 <_ftoa+0x2dc>)
1000130a:	fba3 2307 	umull	r2, r3, r3, r7
1000130e:	08db      	lsrs	r3, r3, #3
10001310:	4619      	mov	r1, r3
10001312:	eb03 0383 	add.w	r3, r3, r3, lsl #2
10001316:	eba7 0343 	sub.w	r3, r7, r3, lsl #1
1000131a:	1c62      	adds	r2, r4, #1
1000131c:	3330      	adds	r3, #48	; 0x30
1000131e:	f104 0050 	add.w	r0, r4, #80	; 0x50
10001322:	eb0d 0400 	add.w	r4, sp, r0
10001326:	f804 3c20 	strb.w	r3, [r4, #-32]
      if (!(frac /= 10U)) {
1000132a:	2f09      	cmp	r7, #9
1000132c:	d902      	bls.n	10001334 <_ftoa+0x24c>
1000132e:	460f      	mov	r7, r1
      buf[len++] = (char)(48U + (frac % 10U));
10001330:	4614      	mov	r4, r2
10001332:	e7e6      	b.n	10001302 <_ftoa+0x21a>
10001334:	4614      	mov	r4, r2
    while ((len < PRINTF_FTOA_BUFFER_SIZE) && (count-- > 0U)) {
10001336:	2c1f      	cmp	r4, #31
10001338:	d80a      	bhi.n	10001350 <_ftoa+0x268>
1000133a:	1e6b      	subs	r3, r5, #1
1000133c:	b145      	cbz	r5, 10001350 <_ftoa+0x268>
      buf[len++] = '0';
1000133e:	f104 0250 	add.w	r2, r4, #80	; 0x50
10001342:	446a      	add	r2, sp
10001344:	2130      	movs	r1, #48	; 0x30
10001346:	f802 1c20 	strb.w	r1, [r2, #-32]
    while ((len < PRINTF_FTOA_BUFFER_SIZE) && (count-- > 0U)) {
1000134a:	461d      	mov	r5, r3
      buf[len++] = '0';
1000134c:	3401      	adds	r4, #1
1000134e:	e7f2      	b.n	10001336 <_ftoa+0x24e>
    if (len < PRINTF_FTOA_BUFFER_SIZE) {
10001350:	2c1f      	cmp	r4, #31
10001352:	d806      	bhi.n	10001362 <_ftoa+0x27a>
      buf[len++] = '.';
10001354:	f104 0350 	add.w	r3, r4, #80	; 0x50
10001358:	446b      	add	r3, sp
1000135a:	222e      	movs	r2, #46	; 0x2e
1000135c:	f803 2c20 	strb.w	r2, [r3, #-32]
10001360:	3401      	adds	r4, #1
  while (len < PRINTF_FTOA_BUFFER_SIZE) {
10001362:	2c1f      	cmp	r4, #31
10001364:	d833      	bhi.n	100013ce <_ftoa+0x2e6>
    buf[len++] = (char)(48 + (whole % 10));
10001366:	4a18      	ldr	r2, [pc, #96]	; (100013c8 <_ftoa+0x2e0>)
10001368:	fb82 3206 	smull	r3, r2, r2, r6
1000136c:	17f3      	asrs	r3, r6, #31
1000136e:	ebc3 03a2 	rsb	r3, r3, r2, asr #2
10001372:	461a      	mov	r2, r3
10001374:	eb03 0383 	add.w	r3, r3, r3, lsl #2
10001378:	eba6 0343 	sub.w	r3, r6, r3, lsl #1
1000137c:	1c61      	adds	r1, r4, #1
1000137e:	3330      	adds	r3, #48	; 0x30
10001380:	f104 0050 	add.w	r0, r4, #80	; 0x50
10001384:	eb0d 0400 	add.w	r4, sp, r0
10001388:	f804 3c20 	strb.w	r3, [r4, #-32]
    if (!(whole /= 10)) {
1000138c:	4616      	mov	r6, r2
1000138e:	b1ea      	cbz	r2, 100013cc <_ftoa+0x2e4>
    buf[len++] = (char)(48 + (whole % 10));
10001390:	460c      	mov	r4, r1
10001392:	e7e6      	b.n	10001362 <_ftoa+0x27a>
10001394:	f3af 8000 	nop.w
10001398:	00000000 	andeq	r0, r0, r0
1000139c:	41cdcd65 	bicmi	ip, sp, r5, ror #26
100013a0:	00000000 	andeq	r0, r0, r0
100013a4:	c1cdcd65 	bicgt	ip, sp, r5, ror #26
100013a8:	7fefffff 	svcvc	0x00efffff
100013ac:	10005938 	andne	r5, r0, r8, lsr r9
100013b0:	1000593c 	andne	r5, r0, ip, lsr r9
100013b4:	10005930 	andne	r5, r0, r0, lsr r9
100013b8:	1000592c 	andne	r5, r0, ip, lsr #18
100013bc:	10005948 	andne	r5, r0, r8, asr #18
100013c0:	3fe00000 	svccc	0x00e00000
100013c4:	cccccccd 	stclgt	12, cr12, [ip], {205}	; 0xcd
100013c8:	66666667 	strbtvs	r6, [r6], -r7, ror #12
100013cc:	460c      	mov	r4, r1
  if (!(flags & FLAGS_LEFT) && (flags & FLAGS_ZEROPAD)) {
100013ce:	9b24      	ldr	r3, [sp, #144]	; 0x90
100013d0:	f003 0303 	and.w	r3, r3, #3
100013d4:	2b01      	cmp	r3, #1
100013d6:	d01d      	beq.n	10001414 <_ftoa+0x32c>
  if (len < PRINTF_FTOA_BUFFER_SIZE) {
100013d8:	2c1f      	cmp	r4, #31
100013da:	d809      	bhi.n	100013f0 <_ftoa+0x308>
    if (negative) {
100013dc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
100013de:	2b00      	cmp	r3, #0
100013e0:	d035      	beq.n	1000144e <_ftoa+0x366>
      buf[len++] = '-';
100013e2:	f104 0350 	add.w	r3, r4, #80	; 0x50
100013e6:	446b      	add	r3, sp
100013e8:	222d      	movs	r2, #45	; 0x2d
100013ea:	f803 2c20 	strb.w	r2, [r3, #-32]
100013ee:	3401      	adds	r4, #1
  return _out_rev(out, buffer, idx, maxlen, buf, len, width, flags);
100013f0:	9b24      	ldr	r3, [sp, #144]	; 0x90
100013f2:	9303      	str	r3, [sp, #12]
100013f4:	9b23      	ldr	r3, [sp, #140]	; 0x8c
100013f6:	9302      	str	r3, [sp, #8]
100013f8:	9401      	str	r4, [sp, #4]
100013fa:	ab0c      	add	r3, sp, #48	; 0x30
100013fc:	9300      	str	r3, [sp, #0]
100013fe:	465b      	mov	r3, fp
10001400:	4652      	mov	r2, sl
10001402:	990a      	ldr	r1, [sp, #40]	; 0x28
10001404:	9807      	ldr	r0, [sp, #28]
10001406:	f7ff faec 	bl	100009e2 <_out_rev>
}
1000140a:	b015      	add	sp, #84	; 0x54
1000140c:	ecbd 8b02 	vpop	{d8}
10001410:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    if (width && (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
10001414:	9b23      	ldr	r3, [sp, #140]	; 0x8c
10001416:	b1b3      	cbz	r3, 10001446 <_ftoa+0x35e>
10001418:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
1000141a:	b91b      	cbnz	r3, 10001424 <_ftoa+0x33c>
1000141c:	9b24      	ldr	r3, [sp, #144]	; 0x90
1000141e:	f013 0f0c 	tst.w	r3, #12
10001422:	d012      	beq.n	1000144a <_ftoa+0x362>
      width--;
10001424:	9b23      	ldr	r3, [sp, #140]	; 0x8c
10001426:	3b01      	subs	r3, #1
10001428:	9323      	str	r3, [sp, #140]	; 0x8c
1000142a:	4619      	mov	r1, r3
1000142c:	e006      	b.n	1000143c <_ftoa+0x354>
      buf[len++] = '0';
1000142e:	f104 0350 	add.w	r3, r4, #80	; 0x50
10001432:	446b      	add	r3, sp
10001434:	2230      	movs	r2, #48	; 0x30
10001436:	f803 2c20 	strb.w	r2, [r3, #-32]
1000143a:	3401      	adds	r4, #1
    while ((len < width) && (len < PRINTF_FTOA_BUFFER_SIZE)) {
1000143c:	428c      	cmp	r4, r1
1000143e:	d2cb      	bcs.n	100013d8 <_ftoa+0x2f0>
10001440:	2c1f      	cmp	r4, #31
10001442:	d9f4      	bls.n	1000142e <_ftoa+0x346>
10001444:	e7c8      	b.n	100013d8 <_ftoa+0x2f0>
10001446:	9923      	ldr	r1, [sp, #140]	; 0x8c
10001448:	e7f8      	b.n	1000143c <_ftoa+0x354>
1000144a:	9923      	ldr	r1, [sp, #140]	; 0x8c
1000144c:	e7f6      	b.n	1000143c <_ftoa+0x354>
    else if (flags & FLAGS_PLUS) {
1000144e:	9b24      	ldr	r3, [sp, #144]	; 0x90
10001450:	f013 0f04 	tst.w	r3, #4
10001454:	d007      	beq.n	10001466 <_ftoa+0x37e>
      buf[len++] = '+';  // ignore the space if the '+' exists
10001456:	f104 0350 	add.w	r3, r4, #80	; 0x50
1000145a:	446b      	add	r3, sp
1000145c:	222b      	movs	r2, #43	; 0x2b
1000145e:	f803 2c20 	strb.w	r2, [r3, #-32]
10001462:	3401      	adds	r4, #1
10001464:	e7c4      	b.n	100013f0 <_ftoa+0x308>
    else if (flags & FLAGS_SPACE) {
10001466:	9b24      	ldr	r3, [sp, #144]	; 0x90
10001468:	f013 0f08 	tst.w	r3, #8
1000146c:	d0c0      	beq.n	100013f0 <_ftoa+0x308>
      buf[len++] = ' ';
1000146e:	f104 0350 	add.w	r3, r4, #80	; 0x50
10001472:	446b      	add	r3, sp
10001474:	2220      	movs	r2, #32
10001476:	f803 2c20 	strb.w	r2, [r3, #-32]
1000147a:	3401      	adds	r4, #1
1000147c:	e7b8      	b.n	100013f0 <_ftoa+0x308>
1000147e:	bf00      	nop

10001480 <_vsnprintf>:
#endif  // PRINTF_SUPPORT_FLOAT


// internal vsnprintf
static int _vsnprintf(out_fct_type out, char* buffer, const size_t maxlen, const char* format, va_list va)
{
10001480:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10001484:	b08f      	sub	sp, #60	; 0x3c
10001486:	4607      	mov	r7, r0
10001488:	4616      	mov	r6, r2
1000148a:	930d      	str	r3, [sp, #52]	; 0x34
  unsigned int flags, width, precision, n;
  size_t idx = 0U;

  if (!buffer) {
1000148c:	4688      	mov	r8, r1
1000148e:	2900      	cmp	r1, #0
10001490:	f000 8324 	beq.w	10001adc <_vsnprintf+0x65c>
          while (l++ < width) {
            out(' ', buffer, idx++, maxlen);
          }
        }
        format++;
        break;
10001494:	2400      	movs	r4, #0
  while (*format)
10001496:	9b0d      	ldr	r3, [sp, #52]	; 0x34
10001498:	7818      	ldrb	r0, [r3, #0]
1000149a:	2800      	cmp	r0, #0
1000149c:	f000 8320 	beq.w	10001ae0 <_vsnprintf+0x660>
    if (*format != '%') {
100014a0:	2825      	cmp	r0, #37	; 0x25
100014a2:	d009      	beq.n	100014b8 <_vsnprintf+0x38>
      out(*format, buffer, idx++, maxlen);
100014a4:	1c65      	adds	r5, r4, #1
100014a6:	4633      	mov	r3, r6
100014a8:	4622      	mov	r2, r4
100014aa:	4641      	mov	r1, r8
100014ac:	47b8      	blx	r7
      format++;
100014ae:	9b0d      	ldr	r3, [sp, #52]	; 0x34
100014b0:	3301      	adds	r3, #1
100014b2:	930d      	str	r3, [sp, #52]	; 0x34
      out(*format, buffer, idx++, maxlen);
100014b4:	462c      	mov	r4, r5
      continue;
100014b6:	e7ee      	b.n	10001496 <_vsnprintf+0x16>
      format++;
100014b8:	3301      	adds	r3, #1
100014ba:	930d      	str	r3, [sp, #52]	; 0x34
    flags = 0U;
100014bc:	2500      	movs	r5, #0
      switch (*format) {
100014be:	9b0d      	ldr	r3, [sp, #52]	; 0x34
100014c0:	7819      	ldrb	r1, [r3, #0]
100014c2:	f1a1 0220 	sub.w	r2, r1, #32
100014c6:	2a10      	cmp	r2, #16
100014c8:	d80a      	bhi.n	100014e0 <_vsnprintf+0x60>
100014ca:	e8df f002 	tbb	[pc, r2]
100014ce:	3d090938 	vstrcc.16	s0, [r9, #-112]	; 0xffffff90	; <UNPREDICTABLE>
100014d2:	09090909 	stmdbeq	r9, {r0, r3, r8, fp}
100014d6:	33090909 	movwcc	r0, #39177	; 0x9909
100014da:	09092e09 	stmdbeq	r9, {r0, r3, r9, sl, fp, sp}
100014de:	f1a10029 			; <UNDEFINED> instruction: 0xf1a10029
  return (ch >= '0') && (ch <= '9');
100014e2:	0330      	lsls	r0, r6, #12
100014e4:	b2db      	uxtb	r3, r3
    if (_is_digit(*format)) {
100014e6:	2b09      	cmp	r3, #9
100014e8:	d933      	bls.n	10001552 <_vsnprintf+0xd2>
    else if (*format == '*') {
100014ea:	292a      	cmp	r1, #42	; 0x2a
100014ec:	d036      	beq.n	1000155c <_vsnprintf+0xdc>
    width = 0U;
100014ee:	2300      	movs	r3, #0
100014f0:	930a      	str	r3, [sp, #40]	; 0x28
    if (*format == '.') {
100014f2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
100014f4:	781a      	ldrb	r2, [r3, #0]
100014f6:	2a2e      	cmp	r2, #46	; 0x2e
100014f8:	d040      	beq.n	1000157c <_vsnprintf+0xfc>
    precision = 0U;
100014fa:	f04f 0b00 	mov.w	fp, #0
    switch (*format) {
100014fe:	9a0d      	ldr	r2, [sp, #52]	; 0x34
10001500:	7813      	ldrb	r3, [r2, #0]
10001502:	3b68      	subs	r3, #104	; 0x68
10001504:	2b12      	cmp	r3, #18
10001506:	d877      	bhi.n	100015f8 <_vsnprintf+0x178>
10001508:	e8df f003 	tbb	[pc, r3]
1000150c:	76d37664 	ldrbvc	r7, [r3], r4, ror #12
10001510:	76767656 			; <UNDEFINED> instruction: 0x76767656
10001514:	76767676 			; <UNDEFINED> instruction: 0x76767676
10001518:	76767672 			; <UNDEFINED> instruction: 0x76767672
1000151c:	00d87676 	sbcseq	r7, r8, r6, ror r6
        case '0': flags |= FLAGS_ZEROPAD; format++; n = 1U; break;
10001520:	f045 0501 	orr.w	r5, r5, #1
10001524:	3301      	adds	r3, #1
10001526:	930d      	str	r3, [sp, #52]	; 0x34
    } while (n);
10001528:	e7c9      	b.n	100014be <_vsnprintf+0x3e>
        case '-': flags |= FLAGS_LEFT;    format++; n = 1U; break;
1000152a:	f045 0502 	orr.w	r5, r5, #2
1000152e:	3301      	adds	r3, #1
10001530:	930d      	str	r3, [sp, #52]	; 0x34
    } while (n);
10001532:	e7c4      	b.n	100014be <_vsnprintf+0x3e>
        case '+': flags |= FLAGS_PLUS;    format++; n = 1U; break;
10001534:	f045 0504 	orr.w	r5, r5, #4
10001538:	3301      	adds	r3, #1
1000153a:	930d      	str	r3, [sp, #52]	; 0x34
    } while (n);
1000153c:	e7bf      	b.n	100014be <_vsnprintf+0x3e>
        case ' ': flags |= FLAGS_SPACE;   format++; n = 1U; break;
1000153e:	f045 0508 	orr.w	r5, r5, #8
10001542:	3301      	adds	r3, #1
10001544:	930d      	str	r3, [sp, #52]	; 0x34
    } while (n);
10001546:	e7ba      	b.n	100014be <_vsnprintf+0x3e>
        case '#': flags |= FLAGS_HASH;    format++; n = 1U; break;
10001548:	f045 0510 	orr.w	r5, r5, #16
1000154c:	3301      	adds	r3, #1
1000154e:	930d      	str	r3, [sp, #52]	; 0x34
    } while (n);
10001550:	e7b5      	b.n	100014be <_vsnprintf+0x3e>
      width = _atoi(&format);
10001552:	a80d      	add	r0, sp, #52	; 0x34
10001554:	f7ff fa33 	bl	100009be <_atoi>
10001558:	900a      	str	r0, [sp, #40]	; 0x28
1000155a:	e7ca      	b.n	100014f2 <_vsnprintf+0x72>
      const int w = va_arg(va, int);
1000155c:	9b18      	ldr	r3, [sp, #96]	; 0x60
1000155e:	1d1a      	adds	r2, r3, #4
10001560:	9218      	str	r2, [sp, #96]	; 0x60
10001562:	6818      	ldr	r0, [r3, #0]
      if (w < 0) {
10001564:	2800      	cmp	r0, #0
10001566:	db04      	blt.n	10001572 <_vsnprintf+0xf2>
        width = (unsigned int)w;
10001568:	900a      	str	r0, [sp, #40]	; 0x28
      format++;
1000156a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
1000156c:	3301      	adds	r3, #1
1000156e:	930d      	str	r3, [sp, #52]	; 0x34
10001570:	e7bf      	b.n	100014f2 <_vsnprintf+0x72>
        flags |= FLAGS_LEFT;    // reverse padding
10001572:	f045 0502 	orr.w	r5, r5, #2
        width = (unsigned int)-w;
10001576:	4243      	negs	r3, r0
10001578:	930a      	str	r3, [sp, #40]	; 0x28
1000157a:	e7f6      	b.n	1000156a <_vsnprintf+0xea>
      flags |= FLAGS_PRECISION;
1000157c:	f445 6580 	orr.w	r5, r5, #1024	; 0x400
      format++;
10001580:	1c5a      	adds	r2, r3, #1
10001582:	920d      	str	r2, [sp, #52]	; 0x34
      if (_is_digit(*format)) {
10001584:	785a      	ldrb	r2, [r3, #1]
  return (ch >= '0') && (ch <= '9');
10001586:	f1a2 0330 	sub.w	r3, r2, #48	; 0x30
1000158a:	b2db      	uxtb	r3, r3
      if (_is_digit(*format)) {
1000158c:	2b09      	cmp	r3, #9
1000158e:	d904      	bls.n	1000159a <_vsnprintf+0x11a>
      else if (*format == '*') {
10001590:	2a2a      	cmp	r2, #42	; 0x2a
10001592:	d007      	beq.n	100015a4 <_vsnprintf+0x124>
    precision = 0U;
10001594:	f04f 0b00 	mov.w	fp, #0
10001598:	e7b1      	b.n	100014fe <_vsnprintf+0x7e>
        precision = _atoi(&format);
1000159a:	a80d      	add	r0, sp, #52	; 0x34
1000159c:	f7ff fa0f 	bl	100009be <_atoi>
100015a0:	4683      	mov	fp, r0
100015a2:	e7ac      	b.n	100014fe <_vsnprintf+0x7e>
        const int prec = (int)va_arg(va, int);
100015a4:	9b18      	ldr	r3, [sp, #96]	; 0x60
100015a6:	1d1a      	adds	r2, r3, #4
100015a8:	9218      	str	r2, [sp, #96]	; 0x60
100015aa:	681b      	ldr	r3, [r3, #0]
        precision = prec > 0 ? (unsigned int)prec : 0U;
100015ac:	ea23 7be3 	bic.w	fp, r3, r3, asr #31
        format++;
100015b0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
100015b2:	3301      	adds	r3, #1
100015b4:	930d      	str	r3, [sp, #52]	; 0x34
100015b6:	e7a2      	b.n	100014fe <_vsnprintf+0x7e>
        flags |= FLAGS_LONG;
100015b8:	f445 7180 	orr.w	r1, r5, #256	; 0x100
        format++;
100015bc:	1c53      	adds	r3, r2, #1
100015be:	930d      	str	r3, [sp, #52]	; 0x34
        if (*format == 'l') {
100015c0:	7852      	ldrb	r2, [r2, #1]
100015c2:	2a6c      	cmp	r2, #108	; 0x6c
100015c4:	d001      	beq.n	100015ca <_vsnprintf+0x14a>
        flags |= FLAGS_LONG;
100015c6:	460d      	mov	r5, r1
100015c8:	e016      	b.n	100015f8 <_vsnprintf+0x178>
          flags |= FLAGS_LONG_LONG;
100015ca:	f445 7540 	orr.w	r5, r5, #768	; 0x300
          format++;
100015ce:	3301      	adds	r3, #1
100015d0:	930d      	str	r3, [sp, #52]	; 0x34
100015d2:	e011      	b.n	100015f8 <_vsnprintf+0x178>
        flags |= FLAGS_SHORT;
100015d4:	f045 0180 	orr.w	r1, r5, #128	; 0x80
        format++;
100015d8:	1c53      	adds	r3, r2, #1
100015da:	930d      	str	r3, [sp, #52]	; 0x34
        if (*format == 'h') {
100015dc:	7852      	ldrb	r2, [r2, #1]
100015de:	2a68      	cmp	r2, #104	; 0x68
100015e0:	d001      	beq.n	100015e6 <_vsnprintf+0x166>
        flags |= FLAGS_SHORT;
100015e2:	460d      	mov	r5, r1
100015e4:	e008      	b.n	100015f8 <_vsnprintf+0x178>
          flags |= FLAGS_CHAR;
100015e6:	f045 05c0 	orr.w	r5, r5, #192	; 0xc0
          format++;
100015ea:	3301      	adds	r3, #1
100015ec:	930d      	str	r3, [sp, #52]	; 0x34
100015ee:	e003      	b.n	100015f8 <_vsnprintf+0x178>
        flags |= (sizeof(ptrdiff_t) == sizeof(long) ? FLAGS_LONG : FLAGS_LONG_LONG);
100015f0:	f445 7580 	orr.w	r5, r5, #256	; 0x100
        format++;
100015f4:	3201      	adds	r2, #1
100015f6:	920d      	str	r2, [sp, #52]	; 0x34
    switch (*format) {
100015f8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
100015fa:	7818      	ldrb	r0, [r3, #0]
100015fc:	f1a0 0325 	sub.w	r3, r0, #37	; 0x25
10001600:	2b53      	cmp	r3, #83	; 0x53
10001602:	f200 8261 	bhi.w	10001ac8 <_vsnprintf+0x648>
10001606:	e8df f013 	tbh	[pc, r3, lsl #1]
1000160a:	025f0254 	subseq	r0, pc, #84, 4	; 0x40000005
1000160e:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
10001612:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
10001616:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000161a:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000161e:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
10001622:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
10001626:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000162a:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000162e:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
10001632:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
10001636:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000163a:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000163e:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
10001642:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
10001646:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000164a:	01540174 	cmpeq	r4, r4, ror r1
1000164e:	025f0174 	subseq	r0, pc, #116, 2
10001652:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
10001656:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000165a:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000165e:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
10001662:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
10001666:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000166a:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000166e:	005e025f 	subseq	r0, lr, pc, asr r2
10001672:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
10001676:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000167a:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000167e:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
10001682:	005e025f 	subseq	r0, lr, pc, asr r2
10001686:	005e019b 			; <UNDEFINED> instruction: 0x005e019b
1000168a:	01540174 	cmpeq	r4, r4, ror r1
1000168e:	025f0174 	subseq	r0, pc, #116, 2
10001692:	025f005e 	subseq	r0, pc, #94	; 0x5e
10001696:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000169a:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000169e:	0239005e 	eorseq	r0, r9, #94	; 0x5e
100016a2:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
100016a6:	025f01d4 	subseq	r0, pc, #212, 2	; 0x35
100016aa:	025f005e 	subseq	r0, pc, #94	; 0x5e
100016ae:	005e025f 	subseq	r0, lr, pc, asr r2
        flags |= (sizeof(intmax_t) == sizeof(long) ? FLAGS_LONG : FLAGS_LONG_LONG);
100016b2:	f445 7500 	orr.w	r5, r5, #512	; 0x200
        format++;
100016b6:	3201      	adds	r2, #1
100016b8:	920d      	str	r2, [sp, #52]	; 0x34
        break;
100016ba:	e79d      	b.n	100015f8 <_vsnprintf+0x178>
        flags |= (sizeof(size_t) == sizeof(long) ? FLAGS_LONG : FLAGS_LONG_LONG);
100016bc:	f445 7580 	orr.w	r5, r5, #256	; 0x100
        format++;
100016c0:	3201      	adds	r2, #1
100016c2:	920d      	str	r2, [sp, #52]	; 0x34
        break;
100016c4:	e798      	b.n	100015f8 <_vsnprintf+0x178>
        if (*format == 'x' || *format == 'X') {
100016c6:	2878      	cmp	r0, #120	; 0x78
100016c8:	d009      	beq.n	100016de <_vsnprintf+0x25e>
100016ca:	2858      	cmp	r0, #88	; 0x58
100016cc:	d03a      	beq.n	10001744 <_vsnprintf+0x2c4>
        else if (*format == 'o') {
100016ce:	286f      	cmp	r0, #111	; 0x6f
100016d0:	d03a      	beq.n	10001748 <_vsnprintf+0x2c8>
        else if (*format == 'b') {
100016d2:	2862      	cmp	r0, #98	; 0x62
100016d4:	d03a      	beq.n	1000174c <_vsnprintf+0x2cc>
          flags &= ~FLAGS_HASH;   // no hash for dec format
100016d6:	f025 0510 	bic.w	r5, r5, #16
          base = 10U;
100016da:	230a      	movs	r3, #10
100016dc:	e000      	b.n	100016e0 <_vsnprintf+0x260>
          base = 16U;
100016de:	2310      	movs	r3, #16
        if (*format == 'X') {
100016e0:	2858      	cmp	r0, #88	; 0x58
100016e2:	d035      	beq.n	10001750 <_vsnprintf+0x2d0>
        if ((*format != 'i') && (*format != 'd')) {
100016e4:	2869      	cmp	r0, #105	; 0x69
100016e6:	d003      	beq.n	100016f0 <_vsnprintf+0x270>
100016e8:	2864      	cmp	r0, #100	; 0x64
100016ea:	d001      	beq.n	100016f0 <_vsnprintf+0x270>
          flags &= ~(FLAGS_PLUS | FLAGS_SPACE);
100016ec:	f025 050c 	bic.w	r5, r5, #12
        if (flags & FLAGS_PRECISION) {
100016f0:	f415 6f80 	tst.w	r5, #1024	; 0x400
100016f4:	d001      	beq.n	100016fa <_vsnprintf+0x27a>
          flags &= ~FLAGS_ZEROPAD;
100016f6:	f025 0501 	bic.w	r5, r5, #1
        if ((*format == 'i') || (*format == 'd')) {
100016fa:	2869      	cmp	r0, #105	; 0x69
100016fc:	d02b      	beq.n	10001756 <_vsnprintf+0x2d6>
100016fe:	2864      	cmp	r0, #100	; 0x64
10001700:	d029      	beq.n	10001756 <_vsnprintf+0x2d6>
          if (flags & FLAGS_LONG_LONG) {
10001702:	f415 7f00 	tst.w	r5, #512	; 0x200
10001706:	f040 8096 	bne.w	10001836 <_vsnprintf+0x3b6>
          else if (flags & FLAGS_LONG) {
1000170a:	f415 7f80 	tst.w	r5, #256	; 0x100
1000170e:	f040 80ae 	bne.w	1000186e <_vsnprintf+0x3ee>
            const unsigned int value = (flags & FLAGS_CHAR) ? (unsigned char)va_arg(va, unsigned int) : (flags & FLAGS_SHORT) ? (unsigned short int)va_arg(va, unsigned int) : va_arg(va, unsigned int);
10001712:	f015 0f40 	tst.w	r5, #64	; 0x40
10001716:	f000 80bf 	beq.w	10001898 <_vsnprintf+0x418>
1000171a:	9a18      	ldr	r2, [sp, #96]	; 0x60
1000171c:	1d11      	adds	r1, r2, #4
1000171e:	9118      	str	r1, [sp, #96]	; 0x60
10001720:	7812      	ldrb	r2, [r2, #0]
            idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base, precision, width, flags);
10001722:	9505      	str	r5, [sp, #20]
10001724:	990a      	ldr	r1, [sp, #40]	; 0x28
10001726:	9104      	str	r1, [sp, #16]
10001728:	f8cd b00c 	str.w	fp, [sp, #12]
1000172c:	9302      	str	r3, [sp, #8]
1000172e:	2300      	movs	r3, #0
10001730:	9301      	str	r3, [sp, #4]
10001732:	9200      	str	r2, [sp, #0]
10001734:	4633      	mov	r3, r6
10001736:	4622      	mov	r2, r4
10001738:	4641      	mov	r1, r8
1000173a:	4638      	mov	r0, r7
1000173c:	f7ff fa2c 	bl	10000b98 <_ntoa_long>
10001740:	4604      	mov	r4, r0
10001742:	e029      	b.n	10001798 <_vsnprintf+0x318>
          base = 16U;
10001744:	2310      	movs	r3, #16
10001746:	e7cb      	b.n	100016e0 <_vsnprintf+0x260>
          base =  8U;
10001748:	2308      	movs	r3, #8
1000174a:	e7c9      	b.n	100016e0 <_vsnprintf+0x260>
          base =  2U;
1000174c:	2302      	movs	r3, #2
1000174e:	e7c7      	b.n	100016e0 <_vsnprintf+0x260>
          flags |= FLAGS_UPPERCASE;
10001750:	f045 0520 	orr.w	r5, r5, #32
10001754:	e7c6      	b.n	100016e4 <_vsnprintf+0x264>
          if (flags & FLAGS_LONG_LONG) {
10001756:	f415 7f00 	tst.w	r5, #512	; 0x200
1000175a:	d121      	bne.n	100017a0 <_vsnprintf+0x320>
          else if (flags & FLAGS_LONG) {
1000175c:	f415 7f80 	tst.w	r5, #256	; 0x100
10001760:	d142      	bne.n	100017e8 <_vsnprintf+0x368>
            const int value = (flags & FLAGS_CHAR) ? (char)va_arg(va, int) : (flags & FLAGS_SHORT) ? (short int)va_arg(va, int) : va_arg(va, int);
10001762:	f015 0f40 	tst.w	r5, #64	; 0x40
10001766:	d058      	beq.n	1000181a <_vsnprintf+0x39a>
10001768:	9a18      	ldr	r2, [sp, #96]	; 0x60
1000176a:	1d11      	adds	r1, r2, #4
1000176c:	9118      	str	r1, [sp, #96]	; 0x60
1000176e:	7812      	ldrb	r2, [r2, #0]
            idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned int)(value > 0 ? value : 0 - value), value < 0, base, precision, width, flags);
10001770:	ea82 71e2 	eor.w	r1, r2, r2, asr #31
10001774:	eba1 71e2 	sub.w	r1, r1, r2, asr #31
10001778:	9505      	str	r5, [sp, #20]
1000177a:	980a      	ldr	r0, [sp, #40]	; 0x28
1000177c:	9004      	str	r0, [sp, #16]
1000177e:	f8cd b00c 	str.w	fp, [sp, #12]
10001782:	9302      	str	r3, [sp, #8]
10001784:	0fd2      	lsrs	r2, r2, #31
10001786:	9201      	str	r2, [sp, #4]
10001788:	9100      	str	r1, [sp, #0]
1000178a:	4633      	mov	r3, r6
1000178c:	4622      	mov	r2, r4
1000178e:	4641      	mov	r1, r8
10001790:	4638      	mov	r0, r7
10001792:	f7ff fa01 	bl	10000b98 <_ntoa_long>
10001796:	4604      	mov	r4, r0
        format++;
10001798:	9b0d      	ldr	r3, [sp, #52]	; 0x34
1000179a:	3301      	adds	r3, #1
1000179c:	930d      	str	r3, [sp, #52]	; 0x34
        break;
1000179e:	e67a      	b.n	10001496 <_vsnprintf+0x16>
            const long long value = va_arg(va, long long);
100017a0:	9a18      	ldr	r2, [sp, #96]	; 0x60
100017a2:	3207      	adds	r2, #7
100017a4:	f022 0207 	bic.w	r2, r2, #7
100017a8:	f102 0108 	add.w	r1, r2, #8
100017ac:	9118      	str	r1, [sp, #96]	; 0x60
100017ae:	6851      	ldr	r1, [r2, #4]
            idx = _ntoa_long_long(out, buffer, idx, maxlen, (unsigned long long)(value > 0 ? value : 0 - value), value < 0, base, precision, width, flags);
100017b0:	6812      	ldr	r2, [r2, #0]
100017b2:	4608      	mov	r0, r1
100017b4:	2900      	cmp	r1, #0
100017b6:	db13      	blt.n	100017e0 <_vsnprintf+0x360>
100017b8:	9508      	str	r5, [sp, #32]
100017ba:	9d0a      	ldr	r5, [sp, #40]	; 0x28
100017bc:	9507      	str	r5, [sp, #28]
100017be:	f8cd b018 	str.w	fp, [sp, #24]
100017c2:	9304      	str	r3, [sp, #16]
100017c4:	2300      	movs	r3, #0
100017c6:	9305      	str	r3, [sp, #20]
100017c8:	0fc9      	lsrs	r1, r1, #31
100017ca:	9102      	str	r1, [sp, #8]
100017cc:	9200      	str	r2, [sp, #0]
100017ce:	9001      	str	r0, [sp, #4]
100017d0:	4633      	mov	r3, r6
100017d2:	4622      	mov	r2, r4
100017d4:	4641      	mov	r1, r8
100017d6:	4638      	mov	r0, r7
100017d8:	f7ff fa28 	bl	10000c2c <_ntoa_long_long>
100017dc:	4604      	mov	r4, r0
100017de:	e7db      	b.n	10001798 <_vsnprintf+0x318>
100017e0:	4252      	negs	r2, r2
100017e2:	eb61 0041 	sbc.w	r0, r1, r1, lsl #1
100017e6:	e7e7      	b.n	100017b8 <_vsnprintf+0x338>
            const long value = va_arg(va, long);
100017e8:	9a18      	ldr	r2, [sp, #96]	; 0x60
100017ea:	1d11      	adds	r1, r2, #4
100017ec:	9118      	str	r1, [sp, #96]	; 0x60
100017ee:	6812      	ldr	r2, [r2, #0]
            idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned long)(value > 0 ? value : 0 - value), value < 0, base, precision, width, flags);
100017f0:	ea82 71e2 	eor.w	r1, r2, r2, asr #31
100017f4:	eba1 71e2 	sub.w	r1, r1, r2, asr #31
100017f8:	9505      	str	r5, [sp, #20]
100017fa:	980a      	ldr	r0, [sp, #40]	; 0x28
100017fc:	9004      	str	r0, [sp, #16]
100017fe:	f8cd b00c 	str.w	fp, [sp, #12]
10001802:	9302      	str	r3, [sp, #8]
10001804:	0fd2      	lsrs	r2, r2, #31
10001806:	9201      	str	r2, [sp, #4]
10001808:	9100      	str	r1, [sp, #0]
1000180a:	4633      	mov	r3, r6
1000180c:	4622      	mov	r2, r4
1000180e:	4641      	mov	r1, r8
10001810:	4638      	mov	r0, r7
10001812:	f7ff f9c1 	bl	10000b98 <_ntoa_long>
10001816:	4604      	mov	r4, r0
10001818:	e7be      	b.n	10001798 <_vsnprintf+0x318>
            const int value = (flags & FLAGS_CHAR) ? (char)va_arg(va, int) : (flags & FLAGS_SHORT) ? (short int)va_arg(va, int) : va_arg(va, int);
1000181a:	f015 0f80 	tst.w	r5, #128	; 0x80
1000181e:	d005      	beq.n	1000182c <_vsnprintf+0x3ac>
10001820:	9a18      	ldr	r2, [sp, #96]	; 0x60
10001822:	1d11      	adds	r1, r2, #4
10001824:	9118      	str	r1, [sp, #96]	; 0x60
10001826:	f9b2 2000 	ldrsh.w	r2, [r2]
1000182a:	e7a1      	b.n	10001770 <_vsnprintf+0x2f0>
1000182c:	9a18      	ldr	r2, [sp, #96]	; 0x60
1000182e:	1d11      	adds	r1, r2, #4
10001830:	9118      	str	r1, [sp, #96]	; 0x60
10001832:	6812      	ldr	r2, [r2, #0]
10001834:	e79c      	b.n	10001770 <_vsnprintf+0x2f0>
            idx = _ntoa_long_long(out, buffer, idx, maxlen, va_arg(va, unsigned long long), false, base, precision, width, flags);
10001836:	9a18      	ldr	r2, [sp, #96]	; 0x60
10001838:	3207      	adds	r2, #7
1000183a:	f022 0207 	bic.w	r2, r2, #7
1000183e:	f102 0108 	add.w	r1, r2, #8
10001842:	9118      	str	r1, [sp, #96]	; 0x60
10001844:	9508      	str	r5, [sp, #32]
10001846:	990a      	ldr	r1, [sp, #40]	; 0x28
10001848:	9107      	str	r1, [sp, #28]
1000184a:	f8cd b018 	str.w	fp, [sp, #24]
1000184e:	2100      	movs	r1, #0
10001850:	9304      	str	r3, [sp, #16]
10001852:	9105      	str	r1, [sp, #20]
10001854:	9102      	str	r1, [sp, #8]
10001856:	e9d2 2300 	ldrd	r2, r3, [r2]
1000185a:	e9cd 2300 	strd	r2, r3, [sp]
1000185e:	4633      	mov	r3, r6
10001860:	4622      	mov	r2, r4
10001862:	4641      	mov	r1, r8
10001864:	4638      	mov	r0, r7
10001866:	f7ff f9e1 	bl	10000c2c <_ntoa_long_long>
1000186a:	4604      	mov	r4, r0
1000186c:	e794      	b.n	10001798 <_vsnprintf+0x318>
            idx = _ntoa_long(out, buffer, idx, maxlen, va_arg(va, unsigned long), false, base, precision, width, flags);
1000186e:	9a18      	ldr	r2, [sp, #96]	; 0x60
10001870:	1d11      	adds	r1, r2, #4
10001872:	9118      	str	r1, [sp, #96]	; 0x60
10001874:	9505      	str	r5, [sp, #20]
10001876:	990a      	ldr	r1, [sp, #40]	; 0x28
10001878:	9104      	str	r1, [sp, #16]
1000187a:	f8cd b00c 	str.w	fp, [sp, #12]
1000187e:	9302      	str	r3, [sp, #8]
10001880:	2300      	movs	r3, #0
10001882:	9301      	str	r3, [sp, #4]
10001884:	6813      	ldr	r3, [r2, #0]
10001886:	9300      	str	r3, [sp, #0]
10001888:	4633      	mov	r3, r6
1000188a:	4622      	mov	r2, r4
1000188c:	4641      	mov	r1, r8
1000188e:	4638      	mov	r0, r7
10001890:	f7ff f982 	bl	10000b98 <_ntoa_long>
10001894:	4604      	mov	r4, r0
10001896:	e77f      	b.n	10001798 <_vsnprintf+0x318>
            const unsigned int value = (flags & FLAGS_CHAR) ? (unsigned char)va_arg(va, unsigned int) : (flags & FLAGS_SHORT) ? (unsigned short int)va_arg(va, unsigned int) : va_arg(va, unsigned int);
10001898:	f015 0f80 	tst.w	r5, #128	; 0x80
1000189c:	d004      	beq.n	100018a8 <_vsnprintf+0x428>
1000189e:	9a18      	ldr	r2, [sp, #96]	; 0x60
100018a0:	1d11      	adds	r1, r2, #4
100018a2:	9118      	str	r1, [sp, #96]	; 0x60
100018a4:	8812      	ldrh	r2, [r2, #0]
100018a6:	e73c      	b.n	10001722 <_vsnprintf+0x2a2>
100018a8:	9a18      	ldr	r2, [sp, #96]	; 0x60
100018aa:	1d11      	adds	r1, r2, #4
100018ac:	9118      	str	r1, [sp, #96]	; 0x60
100018ae:	6812      	ldr	r2, [r2, #0]
100018b0:	e737      	b.n	10001722 <_vsnprintf+0x2a2>
        if (*format == 'F') flags |= FLAGS_UPPERCASE;
100018b2:	2846      	cmp	r0, #70	; 0x46
100018b4:	d01a      	beq.n	100018ec <_vsnprintf+0x46c>
        idx = _ftoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
100018b6:	9b18      	ldr	r3, [sp, #96]	; 0x60
100018b8:	3307      	adds	r3, #7
100018ba:	f023 0307 	bic.w	r3, r3, #7
100018be:	f103 0208 	add.w	r2, r3, #8
100018c2:	9218      	str	r2, [sp, #96]	; 0x60
100018c4:	9504      	str	r5, [sp, #16]
100018c6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
100018c8:	9203      	str	r2, [sp, #12]
100018ca:	f8cd b008 	str.w	fp, [sp, #8]
100018ce:	e9d3 2300 	ldrd	r2, r3, [r3]
100018d2:	e9cd 2300 	strd	r2, r3, [sp]
100018d6:	4633      	mov	r3, r6
100018d8:	4622      	mov	r2, r4
100018da:	4641      	mov	r1, r8
100018dc:	4638      	mov	r0, r7
100018de:	f7ff fc03 	bl	100010e8 <_ftoa>
100018e2:	4604      	mov	r4, r0
        format++;
100018e4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
100018e6:	3301      	adds	r3, #1
100018e8:	930d      	str	r3, [sp, #52]	; 0x34
        break;
100018ea:	e5d4      	b.n	10001496 <_vsnprintf+0x16>
        if (*format == 'F') flags |= FLAGS_UPPERCASE;
100018ec:	f045 0520 	orr.w	r5, r5, #32
100018f0:	e7e1      	b.n	100018b6 <_vsnprintf+0x436>
        if ((*format == 'g')||(*format == 'G')) flags |= FLAGS_ADAPT_EXP;
100018f2:	2867      	cmp	r0, #103	; 0x67
100018f4:	d001      	beq.n	100018fa <_vsnprintf+0x47a>
100018f6:	2847      	cmp	r0, #71	; 0x47
100018f8:	d101      	bne.n	100018fe <_vsnprintf+0x47e>
100018fa:	f445 6500 	orr.w	r5, r5, #2048	; 0x800
        if ((*format == 'E')||(*format == 'G')) flags |= FLAGS_UPPERCASE;
100018fe:	2845      	cmp	r0, #69	; 0x45
10001900:	d001      	beq.n	10001906 <_vsnprintf+0x486>
10001902:	2847      	cmp	r0, #71	; 0x47
10001904:	d101      	bne.n	1000190a <_vsnprintf+0x48a>
10001906:	f045 0520 	orr.w	r5, r5, #32
        idx = _etoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
1000190a:	9b18      	ldr	r3, [sp, #96]	; 0x60
1000190c:	3307      	adds	r3, #7
1000190e:	f023 0307 	bic.w	r3, r3, #7
10001912:	f103 0208 	add.w	r2, r3, #8
10001916:	9218      	str	r2, [sp, #96]	; 0x60
10001918:	9504      	str	r5, [sp, #16]
1000191a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
1000191c:	9203      	str	r2, [sp, #12]
1000191e:	f8cd b008 	str.w	fp, [sp, #8]
10001922:	e9d3 2300 	ldrd	r2, r3, [r3]
10001926:	e9cd 2300 	strd	r2, r3, [sp]
1000192a:	4633      	mov	r3, r6
1000192c:	4622      	mov	r2, r4
1000192e:	4641      	mov	r1, r8
10001930:	4638      	mov	r0, r7
10001932:	f7ff f9e1 	bl	10000cf8 <_etoa>
10001936:	4604      	mov	r4, r0
        format++;
10001938:	9b0d      	ldr	r3, [sp, #52]	; 0x34
1000193a:	3301      	adds	r3, #1
1000193c:	930d      	str	r3, [sp, #52]	; 0x34
        break;
1000193e:	e5aa      	b.n	10001496 <_vsnprintf+0x16>
        if (!(flags & FLAGS_LEFT)) {
10001940:	f015 0502 	ands.w	r5, r5, #2
10001944:	d01f      	beq.n	10001986 <_vsnprintf+0x506>
        unsigned int l = 1U;
10001946:	f04f 0901 	mov.w	r9, #1
        out((char)va_arg(va, int), buffer, idx++, maxlen);
1000194a:	9818      	ldr	r0, [sp, #96]	; 0x60
1000194c:	1d03      	adds	r3, r0, #4
1000194e:	9318      	str	r3, [sp, #96]	; 0x60
10001950:	f104 0a01 	add.w	sl, r4, #1
10001954:	4633      	mov	r3, r6
10001956:	4622      	mov	r2, r4
10001958:	4641      	mov	r1, r8
1000195a:	7800      	ldrb	r0, [r0, #0]
1000195c:	47b8      	blx	r7
        if (flags & FLAGS_LEFT) {
1000195e:	b9bd      	cbnz	r5, 10001990 <_vsnprintf+0x510>
        format++;
10001960:	9b0d      	ldr	r3, [sp, #52]	; 0x34
10001962:	3301      	adds	r3, #1
10001964:	930d      	str	r3, [sp, #52]	; 0x34
        break;
10001966:	4654      	mov	r4, sl
10001968:	e595      	b.n	10001496 <_vsnprintf+0x16>
            out(' ', buffer, idx++, maxlen);
1000196a:	f102 0a01 	add.w	sl, r2, #1
1000196e:	4633      	mov	r3, r6
10001970:	4641      	mov	r1, r8
10001972:	2020      	movs	r0, #32
10001974:	47b8      	blx	r7
          while (l++ < width) {
10001976:	464b      	mov	r3, r9
            out(' ', buffer, idx++, maxlen);
10001978:	4652      	mov	r2, sl
          while (l++ < width) {
1000197a:	f103 0901 	add.w	r9, r3, #1
1000197e:	459b      	cmp	fp, r3
10001980:	d8f3      	bhi.n	1000196a <_vsnprintf+0x4ea>
10001982:	4614      	mov	r4, r2
10001984:	e7e1      	b.n	1000194a <_vsnprintf+0x4ca>
        unsigned int l = 1U;
10001986:	2301      	movs	r3, #1
10001988:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
1000198c:	4622      	mov	r2, r4
1000198e:	e7f4      	b.n	1000197a <_vsnprintf+0x4fa>
10001990:	4652      	mov	r2, sl
10001992:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
10001996:	e006      	b.n	100019a6 <_vsnprintf+0x526>
            out(' ', buffer, idx++, maxlen);
10001998:	1c55      	adds	r5, r2, #1
1000199a:	4633      	mov	r3, r6
1000199c:	4641      	mov	r1, r8
1000199e:	2020      	movs	r0, #32
100019a0:	47b8      	blx	r7
          while (l++ < width) {
100019a2:	46a1      	mov	r9, r4
            out(' ', buffer, idx++, maxlen);
100019a4:	462a      	mov	r2, r5
          while (l++ < width) {
100019a6:	f109 0401 	add.w	r4, r9, #1
100019aa:	45ca      	cmp	sl, r9
100019ac:	d8f4      	bhi.n	10001998 <_vsnprintf+0x518>
100019ae:	4692      	mov	sl, r2
100019b0:	e7d6      	b.n	10001960 <_vsnprintf+0x4e0>
      }

      case 's' : {
        const char* p = va_arg(va, char*);
100019b2:	9b18      	ldr	r3, [sp, #96]	; 0x60
100019b4:	1d1a      	adds	r2, r3, #4
100019b6:	9218      	str	r2, [sp, #96]	; 0x60
100019b8:	f8d3 a000 	ldr.w	sl, [r3]
        unsigned int l = _strnlen_s(p, precision ? precision : (size_t)-1);
100019bc:	f1bb 0f00 	cmp.w	fp, #0
100019c0:	d11e      	bne.n	10001a00 <_vsnprintf+0x580>
100019c2:	f04f 33ff 	mov.w	r3, #4294967295
100019c6:	46d1      	mov	r9, sl
100019c8:	e002      	b.n	100019d0 <_vsnprintf+0x550>
  for (s = str; *s && maxsize--; ++s);
100019ca:	f109 0901 	add.w	r9, r9, #1
100019ce:	4613      	mov	r3, r2
100019d0:	f899 2000 	ldrb.w	r2, [r9]
100019d4:	b112      	cbz	r2, 100019dc <_vsnprintf+0x55c>
100019d6:	1e5a      	subs	r2, r3, #1
100019d8:	2b00      	cmp	r3, #0
100019da:	d1f6      	bne.n	100019ca <_vsnprintf+0x54a>
  return (unsigned int)(s - str);
100019dc:	eba9 090a 	sub.w	r9, r9, sl
        // pre padding
        if (flags & FLAGS_PRECISION) {
100019e0:	f415 6380 	ands.w	r3, r5, #1024	; 0x400
100019e4:	930b      	str	r3, [sp, #44]	; 0x2c
100019e6:	d002      	beq.n	100019ee <_vsnprintf+0x56e>
          l = (l < precision ? l : precision);
100019e8:	45d9      	cmp	r9, fp
100019ea:	bf28      	it	cs
100019ec:	46d9      	movcs	r9, fp
        }
        if (!(flags & FLAGS_LEFT)) {
100019ee:	f015 0302 	ands.w	r3, r5, #2
100019f2:	930c      	str	r3, [sp, #48]	; 0x30
100019f4:	d006      	beq.n	10001a04 <_vsnprintf+0x584>
100019f6:	4622      	mov	r2, r4
100019f8:	465c      	mov	r4, fp
100019fa:	46b3      	mov	fp, r6
100019fc:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
100019fe:	e01d      	b.n	10001a3c <_vsnprintf+0x5bc>
        unsigned int l = _strnlen_s(p, precision ? precision : (size_t)-1);
10001a00:	465b      	mov	r3, fp
10001a02:	e7e0      	b.n	100019c6 <_vsnprintf+0x546>
10001a04:	4622      	mov	r2, r4
10001a06:	9c0a      	ldr	r4, [sp, #40]	; 0x28
10001a08:	464b      	mov	r3, r9
10001a0a:	e007      	b.n	10001a1c <_vsnprintf+0x59c>
          while (l++ < width) {
            out(' ', buffer, idx++, maxlen);
10001a0c:	f102 0901 	add.w	r9, r2, #1
10001a10:	4633      	mov	r3, r6
10001a12:	4641      	mov	r1, r8
10001a14:	2020      	movs	r0, #32
10001a16:	47b8      	blx	r7
          while (l++ < width) {
10001a18:	462b      	mov	r3, r5
            out(' ', buffer, idx++, maxlen);
10001a1a:	464a      	mov	r2, r9
          while (l++ < width) {
10001a1c:	1c5d      	adds	r5, r3, #1
10001a1e:	429c      	cmp	r4, r3
10001a20:	d8f4      	bhi.n	10001a0c <_vsnprintf+0x58c>
10001a22:	46a9      	mov	r9, r5
10001a24:	465c      	mov	r4, fp
10001a26:	46b3      	mov	fp, r6
10001a28:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
10001a2a:	e007      	b.n	10001a3c <_vsnprintf+0x5bc>
          }
        }
        // string output
        while ((*p != 0) && (!(flags & FLAGS_PRECISION) || precision--)) {
10001a2c:	461c      	mov	r4, r3
          out(*(p++), buffer, idx++, maxlen);
10001a2e:	f10a 0a01 	add.w	sl, sl, #1
10001a32:	1c55      	adds	r5, r2, #1
10001a34:	465b      	mov	r3, fp
10001a36:	4641      	mov	r1, r8
10001a38:	47b8      	blx	r7
10001a3a:	462a      	mov	r2, r5
        while ((*p != 0) && (!(flags & FLAGS_PRECISION) || precision--)) {
10001a3c:	f89a 0000 	ldrb.w	r0, [sl]
10001a40:	b120      	cbz	r0, 10001a4c <_vsnprintf+0x5cc>
10001a42:	2e00      	cmp	r6, #0
10001a44:	d0f3      	beq.n	10001a2e <_vsnprintf+0x5ae>
10001a46:	1e63      	subs	r3, r4, #1
10001a48:	2c00      	cmp	r4, #0
10001a4a:	d1ef      	bne.n	10001a2c <_vsnprintf+0x5ac>
        }
        // post padding
        if (flags & FLAGS_LEFT) {
10001a4c:	4614      	mov	r4, r2
10001a4e:	465e      	mov	r6, fp
10001a50:	9b0c      	ldr	r3, [sp, #48]	; 0x30
10001a52:	b91b      	cbnz	r3, 10001a5c <_vsnprintf+0x5dc>
          while (l++ < width) {
            out(' ', buffer, idx++, maxlen);
          }
        }
        format++;
10001a54:	9b0d      	ldr	r3, [sp, #52]	; 0x34
10001a56:	3301      	adds	r3, #1
10001a58:	930d      	str	r3, [sp, #52]	; 0x34
        break;
10001a5a:	e51c      	b.n	10001496 <_vsnprintf+0x16>
10001a5c:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
10001a60:	e006      	b.n	10001a70 <_vsnprintf+0x5f0>
            out(' ', buffer, idx++, maxlen);
10001a62:	1c55      	adds	r5, r2, #1
10001a64:	4633      	mov	r3, r6
10001a66:	4641      	mov	r1, r8
10001a68:	2020      	movs	r0, #32
10001a6a:	47b8      	blx	r7
          while (l++ < width) {
10001a6c:	46a1      	mov	r9, r4
            out(' ', buffer, idx++, maxlen);
10001a6e:	462a      	mov	r2, r5
          while (l++ < width) {
10001a70:	f109 0401 	add.w	r4, r9, #1
10001a74:	45ca      	cmp	sl, r9
10001a76:	d8f4      	bhi.n	10001a62 <_vsnprintf+0x5e2>
10001a78:	4614      	mov	r4, r2
10001a7a:	e7eb      	b.n	10001a54 <_vsnprintf+0x5d4>
      }

      case 'p' : {
        width = sizeof(void*) * 2U;
        flags |= FLAGS_ZEROPAD | FLAGS_UPPERCASE;
10001a7c:	f045 0521 	orr.w	r5, r5, #33	; 0x21
        if (is_ll) {
          idx = _ntoa_long_long(out, buffer, idx, maxlen, (uintptr_t)va_arg(va, void*), false, 16U, precision, width, flags);
        }
        else {
#endif
          idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned long)((uintptr_t)va_arg(va, void*)), false, 16U, precision, width, flags);
10001a80:	9b18      	ldr	r3, [sp, #96]	; 0x60
10001a82:	1d1a      	adds	r2, r3, #4
10001a84:	9218      	str	r2, [sp, #96]	; 0x60
10001a86:	681b      	ldr	r3, [r3, #0]
10001a88:	9505      	str	r5, [sp, #20]
10001a8a:	2208      	movs	r2, #8
10001a8c:	9204      	str	r2, [sp, #16]
10001a8e:	f8cd b00c 	str.w	fp, [sp, #12]
10001a92:	2210      	movs	r2, #16
10001a94:	9202      	str	r2, [sp, #8]
10001a96:	2200      	movs	r2, #0
10001a98:	9201      	str	r2, [sp, #4]
10001a9a:	9300      	str	r3, [sp, #0]
10001a9c:	4633      	mov	r3, r6
10001a9e:	4622      	mov	r2, r4
10001aa0:	4641      	mov	r1, r8
10001aa2:	4638      	mov	r0, r7
10001aa4:	f7ff f878 	bl	10000b98 <_ntoa_long>
10001aa8:	4604      	mov	r4, r0
#if defined(PRINTF_SUPPORT_LONG_LONG)
        }
#endif
        format++;
10001aaa:	9b0d      	ldr	r3, [sp, #52]	; 0x34
10001aac:	3301      	adds	r3, #1
10001aae:	930d      	str	r3, [sp, #52]	; 0x34
        break;
10001ab0:	e4f1      	b.n	10001496 <_vsnprintf+0x16>
      }

      case '%' :
        out('%', buffer, idx++, maxlen);
10001ab2:	1c65      	adds	r5, r4, #1
10001ab4:	4633      	mov	r3, r6
10001ab6:	4622      	mov	r2, r4
10001ab8:	4641      	mov	r1, r8
10001aba:	2025      	movs	r0, #37	; 0x25
10001abc:	47b8      	blx	r7
        format++;
10001abe:	9b0d      	ldr	r3, [sp, #52]	; 0x34
10001ac0:	3301      	adds	r3, #1
10001ac2:	930d      	str	r3, [sp, #52]	; 0x34
        out('%', buffer, idx++, maxlen);
10001ac4:	462c      	mov	r4, r5
        break;
10001ac6:	e4e6      	b.n	10001496 <_vsnprintf+0x16>

      default :
        out(*format, buffer, idx++, maxlen);
10001ac8:	1c65      	adds	r5, r4, #1
10001aca:	4633      	mov	r3, r6
10001acc:	4622      	mov	r2, r4
10001ace:	4641      	mov	r1, r8
10001ad0:	47b8      	blx	r7
        format++;
10001ad2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
10001ad4:	3301      	adds	r3, #1
10001ad6:	930d      	str	r3, [sp, #52]	; 0x34
        out(*format, buffer, idx++, maxlen);
10001ad8:	462c      	mov	r4, r5
        break;
10001ada:	e4dc      	b.n	10001496 <_vsnprintf+0x16>
    out = _out_null;
10001adc:	4f07      	ldr	r7, [pc, #28]	; (10001afc <_vsnprintf+0x67c>)
10001ade:	e4d9      	b.n	10001494 <_vsnprintf+0x14>
    }
  }

  // termination
  out((char)0, buffer, idx < maxlen ? idx : maxlen - 1U, maxlen);
10001ae0:	42b4      	cmp	r4, r6
10001ae2:	d301      	bcc.n	10001ae8 <_vsnprintf+0x668>
10001ae4:	1e72      	subs	r2, r6, #1
10001ae6:	e000      	b.n	10001aea <_vsnprintf+0x66a>
10001ae8:	4622      	mov	r2, r4
10001aea:	4633      	mov	r3, r6
10001aec:	4641      	mov	r1, r8
10001aee:	2000      	movs	r0, #0
10001af0:	47b8      	blx	r7

  // return written chars without terminating \0
  return (int)idx;
}
10001af2:	4620      	mov	r0, r4
10001af4:	b00f      	add	sp, #60	; 0x3c
10001af6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10001afa:	bf00      	nop
10001afc:	100009bd 			; <UNDEFINED> instruction: 0x100009bd

10001b00 <_out_char>:
  if (character) {
10001b00:	b900      	cbnz	r0, 10001b04 <_out_char+0x4>
10001b02:	4770      	bx	lr
{
10001b04:	b508      	push	{r3, lr}
    put_char(character);
10001b06:	f000 f817 	bl	10001b38 <put_char>
}
10001b0a:	bd08      	pop	{r3, pc}

10001b0c <printf>:


///////////////////////////////////////////////////////////////////////////////

int printf(const char* format, ...)
{
10001b0c:	b40f      	push	{r0, r1, r2, r3}
10001b0e:	b500      	push	{lr}
10001b10:	b085      	sub	sp, #20
10001b12:	aa06      	add	r2, sp, #24
10001b14:	f852 3b04 	ldr.w	r3, [r2], #4
  va_list va;
  va_start(va, format);
10001b18:	9203      	str	r2, [sp, #12]
  char buffer[1];
  const int ret = _vsnprintf(_out_char, buffer, (size_t)-1, format, va);
10001b1a:	9200      	str	r2, [sp, #0]
10001b1c:	f04f 32ff 	mov.w	r2, #4294967295
10001b20:	a902      	add	r1, sp, #8
10001b22:	4804      	ldr	r0, [pc, #16]	; (10001b34 <printf+0x28>)
10001b24:	f7ff fcac 	bl	10001480 <_vsnprintf>
  va_end(va);
  return ret;
}
10001b28:	b005      	add	sp, #20
10001b2a:	f85d eb04 	ldr.w	lr, [sp], #4
10001b2e:	b004      	add	sp, #16
10001b30:	4770      	bx	lr
10001b32:	bf00      	nop
10001b34:	10001b01 	andne	r1, r0, r1, lsl #22

10001b38 <put_char>:
#define UART_MIS(base)          (*((volatile uint32_t *)(base + 0x40)))
#define UART_ICR(base)          (*((volatile uint32_t *)(base + 0x44)))
#define UART_DMACR(base)        (*((volatile uint32_t *)(base + 0x48)))

int put_char(int ch) {
    while (UART_FLAG(UART0) & 0x20);
10001b38:	4b03      	ldr	r3, [pc, #12]	; (10001b48 <put_char+0x10>)
10001b3a:	699b      	ldr	r3, [r3, #24]
10001b3c:	f013 0f20 	tst.w	r3, #32
10001b40:	d1fa      	bne.n	10001b38 <put_char>
    UART_DATA(UART0) = ch;
10001b42:	4b01      	ldr	r3, [pc, #4]	; (10001b48 <put_char+0x10>)
10001b44:	6018      	str	r0, [r3, #0]
    return ch;
}
10001b46:	4770      	bx	lr
10001b48:	40200000 	eormi	r0, r0, r0

10001b4c <puts>:
int get_char(void) {
    while ((UART_FLAG(UART0) & 0x40) == 0);
    return UART_DATA(UART0);
}

int puts(const char* string) {
10001b4c:	b538      	push	{r3, r4, r5, lr}
10001b4e:	4605      	mov	r5, r0
    int index = 0;
10001b50:	2400      	movs	r4, #0
    while (string[index] != '\0') {
10001b52:	e002      	b.n	10001b5a <puts+0xe>
        put_char(string[index]);
10001b54:	f7ff fff0 	bl	10001b38 <put_char>
        index++;
10001b58:	3401      	adds	r4, #1
    while (string[index] != '\0') {
10001b5a:	5d28      	ldrb	r0, [r5, r4]
10001b5c:	2800      	cmp	r0, #0
10001b5e:	d1f9      	bne.n	10001b54 <puts+0x8>
    }
    put_char('\n');
10001b60:	200a      	movs	r0, #10
10001b62:	f7ff ffe9 	bl	10001b38 <put_char>
    return index;
}
10001b66:	4620      	mov	r0, r4
10001b68:	bd38      	pop	{r3, r4, r5, pc}
	...

10001b6c <uart_init>:

void uart_init(void) {
    UART_IBRD(UART0) = 40;
10001b6c:	4b07      	ldr	r3, [pc, #28]	; (10001b8c <uart_init+0x20>)
10001b6e:	2228      	movs	r2, #40	; 0x28
10001b70:	625a      	str	r2, [r3, #36]	; 0x24
    UART_FBRD(UART0) = 11;
10001b72:	220b      	movs	r2, #11
10001b74:	629a      	str	r2, [r3, #40]	; 0x28
    UART_LCRH(UART0) = 0x60;
10001b76:	2260      	movs	r2, #96	; 0x60
10001b78:	62da      	str	r2, [r3, #44]	; 0x2c
    UART_CR(UART0)   = 0x301;
10001b7a:	f240 3201 	movw	r2, #769	; 0x301
10001b7e:	631a      	str	r2, [r3, #48]	; 0x30
    UART_RSR(UART0)  = 0x0A;
10001b80:	220a      	movs	r2, #10
10001b82:	605a      	str	r2, [r3, #4]
    UART_CTRL(UART0) = 0x01;
10001b84:	2201      	movs	r2, #1
10001b86:	609a      	str	r2, [r3, #8]
}
10001b88:	4770      	bx	lr
10001b8a:	bf00      	nop
10001b8c:	40200000 	eormi	r0, r0, r0

10001b90 <fault_dump_opcode>:
    FD_CODE_TEXT_BASE,  FD_CODE_TEXT_ENDS,  FD_CODE_TEXT_SIZE );
    printf("Code Stack Growth Downward:%d\r\n", 
    FD_STACK_GROWTH_DOWNWARD);
}

static unsigned int fault_dump_opcode(unsigned int pc) {
10001b90:	b082      	sub	sp, #8
    uint16_t value[2] = {0};
10001b92:	2300      	movs	r3, #0
10001b94:	9301      	str	r3, [sp, #4]
    unsigned int opcode = 0;
    for (int i = 0; i < (sizeof(value) / sizeof(uint16_t)); i++) {
10001b96:	e007      	b.n	10001ba8 <fault_dump_opcode+0x18>
        value[i] = *(uint16_t*)(pc + i * sizeof(uint16_t));
10001b98:	f830 1013 	ldrh.w	r1, [r0, r3, lsl #1]
10001b9c:	aa02      	add	r2, sp, #8
10001b9e:	eb02 0243 	add.w	r2, r2, r3, lsl #1
10001ba2:	f822 1c04 	strh.w	r1, [r2, #-4]
    for (int i = 0; i < (sizeof(value) / sizeof(uint16_t)); i++) {
10001ba6:	3301      	adds	r3, #1
10001ba8:	2b01      	cmp	r3, #1
10001baa:	d9f5      	bls.n	10001b98 <fault_dump_opcode+0x8>
    }
    opcode = ((unsigned int)value[1] << 0x10) |
10001bac:	f8bd 0006 	ldrh.w	r0, [sp, #6]
             ((unsigned int)value[0] << 0x00);
10001bb0:	f8bd 3004 	ldrh.w	r3, [sp, #4]
    return opcode;
}
10001bb4:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
10001bb8:	b002      	add	sp, #8
10001bba:	4770      	bx	lr

10001bbc <opcode_is_bl_or_blx>:

static bool opcode_is_bl_or_blx(unsigned int ins) {
#define FD_BL_OPCODE_MASK   (0xF800)
#define FD_BL_OPCODE_BL     (0xF000)
#define FD_BL_OPCODE_BLX    (0xF800)
    uint16_t opcode1 = (((ins >> 0x00) & 0xFFFF) & FD_BL_OPCODE_MASK);
10001bbc:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
    uint16_t opcode2 = (((ins >> 0x10) & 0xFFFF) & FD_BL_OPCODE_MASK);
10001bc0:	0c00      	lsrs	r0, r0, #16
10001bc2:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
    if ((opcode1 == FD_BL_OPCODE_BL) || (opcode1 == FD_BL_OPCODE_BLX)) {
10001bc6:	f5b3 4f70 	cmp.w	r3, #61440	; 0xf000
10001bca:	d00a      	beq.n	10001be2 <opcode_is_bl_or_blx+0x26>
10001bcc:	f5b3 4f78 	cmp.w	r3, #63488	; 0xf800
10001bd0:	d009      	beq.n	10001be6 <opcode_is_bl_or_blx+0x2a>
        return true;
    }
    if ((opcode2 == FD_BL_OPCODE_BL) || (opcode2 == FD_BL_OPCODE_BLX)) {
10001bd2:	f5b0 4f70 	cmp.w	r0, #61440	; 0xf000
10001bd6:	d008      	beq.n	10001bea <opcode_is_bl_or_blx+0x2e>
10001bd8:	f5b0 4f78 	cmp.w	r0, #63488	; 0xf800
10001bdc:	d007      	beq.n	10001bee <opcode_is_bl_or_blx+0x32>
        return true;
    }
    return false;
10001bde:	2000      	movs	r0, #0
10001be0:	4770      	bx	lr
        return true;
10001be2:	2001      	movs	r0, #1
10001be4:	4770      	bx	lr
10001be6:	2001      	movs	r0, #1
10001be8:	4770      	bx	lr
        return true;
10001bea:	2001      	movs	r0, #1
10001bec:	4770      	bx	lr
10001bee:	2001      	movs	r0, #1
}
10001bf0:	4770      	bx	lr
	...

10001bf4 <fault_dump_callstack>:
    }
    printf("\r\n");
    while (1);
}

int fault_dump_callstack(unsigned int *buffer, size_t size, unsigned int *stack_point, unsigned int *stack_start) {
10001bf4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    int count = 0;
    unsigned int pc = 0, op = 0, *sp = NULL;
    if ((buffer == NULL) || (size <= 0)) {
10001bf8:	b348      	cbz	r0, 10001c4e <fault_dump_callstack+0x5a>
10001bfa:	460f      	mov	r7, r1
10001bfc:	4614      	mov	r4, r2
10001bfe:	461d      	mov	r5, r3
10001c00:	4680      	mov	r8, r0
10001c02:	b339      	cbz	r1, 10001c54 <fault_dump_callstack+0x60>
        return -FD_EEMPTY;
    }
    FD_STACK_CHECKIT(stack_point, stack_start) {
10001c04:	b34a      	cbz	r2, 10001c5a <fault_dump_callstack+0x66>
10001c06:	429a      	cmp	r2, r3
10001c08:	d82a      	bhi.n	10001c60 <fault_dump_callstack+0x6c>
    int count = 0;
10001c0a:	2600      	movs	r6, #0
10001c0c:	e000      	b.n	10001c10 <fault_dump_callstack+0x1c>
        return -FD_EINVAL;
    }
    FD_STACK_FOREACH(stack_point, stack_start) {
10001c0e:	3404      	adds	r4, #4
10001c10:	b1d4      	cbz	r4, 10001c48 <fault_dump_callstack+0x54>
10001c12:	42ac      	cmp	r4, r5
10001c14:	d818      	bhi.n	10001c48 <fault_dump_callstack+0x54>
        // Read stack[x] value to pc.
        pc = *(unsigned int *)sp;
10001c16:	6822      	ldr	r2, [r4, #0]
        // PC must be in the code segment.
        if ((pc < FD_CODE_TEXT_BASE) || (pc > FD_CODE_TEXT_ENDS)) {
10001c18:	4813      	ldr	r0, [pc, #76]	; (10001c68 <fault_dump_callstack+0x74>)
10001c1a:	4290      	cmp	r0, r2
10001c1c:	d8f7      	bhi.n	10001c0e <fault_dump_callstack+0x1a>
10001c1e:	4b13      	ldr	r3, [pc, #76]	; (10001c6c <fault_dump_callstack+0x78>)
10001c20:	4293      	cmp	r3, r2
10001c22:	d3f4      	bcc.n	10001c0e <fault_dump_callstack+0x1a>
            continue;
        }
        // The thumb instruction must be an odd number.
        if ((pc % 2) == 0) {
10001c24:	f012 0f01 	tst.w	r2, #1
10001c28:	d0f1      	beq.n	10001c0e <fault_dump_callstack+0x1a>
            continue;
        }
        // Fix thumb instruction set.
        pc = pc - 1;
        // Calculate the address of the instruction being executed before pushing on the stack.
        pc = pc - sizeof(unsigned int);
10001c2a:	f1a2 0905 	sub.w	r9, r2, #5
        // The thumb instruction is at least 2-byte aligned.
        if ((pc & 0x1) != 0) {
10001c2e:	d0ee      	beq.n	10001c0e <fault_dump_callstack+0x1a>
            continue;
        }
        // Read the instruction at the PC address.
        op = fault_dump_opcode(pc);
10001c30:	4648      	mov	r0, r9
10001c32:	f7ff ffad 	bl	10001b90 <fault_dump_opcode>
        // Only BL or BLX opcode need to be recorded.
        if (!opcode_is_bl_or_blx(op)) {
10001c36:	f7ff ffc1 	bl	10001bbc <opcode_is_bl_or_blx>
10001c3a:	2800      	cmp	r0, #0
10001c3c:	d0e7      	beq.n	10001c0e <fault_dump_callstack+0x1a>
            continue;
        }
        // storage this address.
        buffer[count] = pc;
10001c3e:	f848 9026 	str.w	r9, [r8, r6, lsl #2]
        count = count + 1;
10001c42:	3601      	adds	r6, #1
        if (count >= size) {
10001c44:	42be      	cmp	r6, r7
10001c46:	d3e2      	bcc.n	10001c0e <fault_dump_callstack+0x1a>
            break;
        }
    }
    return count;
}
10001c48:	4630      	mov	r0, r6
10001c4a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
        return -FD_EEMPTY;
10001c4e:	f06f 0601 	mvn.w	r6, #1
10001c52:	e7f9      	b.n	10001c48 <fault_dump_callstack+0x54>
10001c54:	f06f 0601 	mvn.w	r6, #1
10001c58:	e7f6      	b.n	10001c48 <fault_dump_callstack+0x54>
        return -FD_EINVAL;
10001c5a:	f06f 0602 	mvn.w	r6, #2
10001c5e:	e7f3      	b.n	10001c48 <fault_dump_callstack+0x54>
10001c60:	f06f 0602 	mvn.w	r6, #2
10001c64:	e7f0      	b.n	10001c48 <fault_dump_callstack+0x54>
10001c66:	bf00      	nop
10001c68:	10000000 	andne	r0, r0, r0
10001c6c:	10005de4 	andne	r5, r0, r4, ror #27

10001c70 <dump_exc_return>:
static void dump_exc_return(unsigned int exc_return) {
10001c70:	b510      	push	{r4, lr}
10001c72:	4604      	mov	r4, r0
    printf(" EXE_RETURN: 0x%08X \r\n", exc_return);
10001c74:	4601      	mov	r1, r0
10001c76:	4803      	ldr	r0, [pc, #12]	; (10001c84 <dump_exc_return+0x14>)
10001c78:	f7ff ff48 	bl	10001b0c <printf>
    fault_dump_exc_return(exc_return);
10001c7c:	4620      	mov	r0, r4
10001c7e:	f000 f90d 	bl	10001e9c <fault_dump_exc_return>
}
10001c82:	bd10      	pop	{r4, pc}
10001c84:	10005998 	mulne	r0, r8, r9

10001c88 <stack_using_msp>:
static bool stack_using_msp(unsigned int exc_return) {
10001c88:	b508      	push	{r3, lr}
    result = fault_dump_using_msp(exc_return);
10001c8a:	f000 f985 	bl	10001f98 <fault_dump_using_msp>
}
10001c8e:	bd08      	pop	{r3, pc}

10001c90 <fault_dump_init>:
void fault_dump_init(void) {
10001c90:	b508      	push	{r3, lr}
    fd_main_stack_base = FD_CODE_STACK_BASE;
10001c92:	490a      	ldr	r1, [pc, #40]	; (10001cbc <fault_dump_init+0x2c>)
10001c94:	4b0a      	ldr	r3, [pc, #40]	; (10001cc0 <fault_dump_init+0x30>)
10001c96:	6019      	str	r1, [r3, #0]
    fd_main_stack_full = FD_CODE_STACK_FULL;
10001c98:	4a0a      	ldr	r2, [pc, #40]	; (10001cc4 <fault_dump_init+0x34>)
10001c9a:	4b0b      	ldr	r3, [pc, #44]	; (10001cc8 <fault_dump_init+0x38>)
10001c9c:	601a      	str	r2, [r3, #0]
    printf("Code Stack:[%08X - %08X], size:%d\r\n",
10001c9e:	1a53      	subs	r3, r2, r1
10001ca0:	480a      	ldr	r0, [pc, #40]	; (10001ccc <fault_dump_init+0x3c>)
10001ca2:	f7ff ff33 	bl	10001b0c <printf>
    printf("Code Text :[%08X - %08X], size:%d\r\n",
10001ca6:	490a      	ldr	r1, [pc, #40]	; (10001cd0 <fault_dump_init+0x40>)
10001ca8:	4a0a      	ldr	r2, [pc, #40]	; (10001cd4 <fault_dump_init+0x44>)
10001caa:	1a53      	subs	r3, r2, r1
10001cac:	480a      	ldr	r0, [pc, #40]	; (10001cd8 <fault_dump_init+0x48>)
10001cae:	f7ff ff2d 	bl	10001b0c <printf>
    printf("Code Stack Growth Downward:%d\r\n", 
10001cb2:	2101      	movs	r1, #1
10001cb4:	4809      	ldr	r0, [pc, #36]	; (10001cdc <fault_dump_init+0x4c>)
10001cb6:	f7ff ff29 	bl	10001b0c <printf>
}
10001cba:	bd08      	pop	{r3, pc}
10001cbc:	380ff000 	stmdacc	pc, {ip, sp, lr, pc}	; <UNPREDICTABLE>
10001cc0:	38008570 	stmdacc	r0, {r4, r5, r6, r8, sl, pc}
10001cc4:	38100000 	ldmdacc	r0, {}	; <UNPREDICTABLE>
10001cc8:	38008574 	stmdacc	r0, {r2, r4, r5, r6, r8, sl, pc}
10001ccc:	100059b0 			; <UNDEFINED> instruction: 0x100059b0
10001cd0:	10000000 	andne	r0, r0, r0
10001cd4:	10005de4 	andne	r5, r0, r4, ror #27
10001cd8:	100059d4 	ldrdne	r5, [r0], -r4
10001cdc:	100059f8 	strdne	r5, [r0], -r8

10001ce0 <fault_dump_handler>:
void fault_dump_handler(unsigned int *stack, unsigned int linker) {
10001ce0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10001ce2:	4605      	mov	r5, r0
10001ce4:	460e      	mov	r6, r1
    frame.manual.r4  = FD_STACK_READVAL(point);
10001ce6:	6803      	ldr	r3, [r0, #0]
10001ce8:	4c4e      	ldr	r4, [pc, #312]	; (10001e24 <fault_dump_handler+0x144>)
10001cea:	6023      	str	r3, [r4, #0]
    frame.manual.r5  = FD_STACK_READVAL(point);
10001cec:	6843      	ldr	r3, [r0, #4]
10001cee:	6063      	str	r3, [r4, #4]
    frame.manual.r6  = FD_STACK_READVAL(point);
10001cf0:	6883      	ldr	r3, [r0, #8]
10001cf2:	60a3      	str	r3, [r4, #8]
    frame.manual.r7  = FD_STACK_READVAL(point);
10001cf4:	68c3      	ldr	r3, [r0, #12]
10001cf6:	60e3      	str	r3, [r4, #12]
    frame.manual.r8  = FD_STACK_READVAL(point);
10001cf8:	6903      	ldr	r3, [r0, #16]
10001cfa:	6123      	str	r3, [r4, #16]
    frame.manual.r9  = FD_STACK_READVAL(point);
10001cfc:	6943      	ldr	r3, [r0, #20]
10001cfe:	6163      	str	r3, [r4, #20]
    frame.manual.r10 = FD_STACK_READVAL(point);
10001d00:	6983      	ldr	r3, [r0, #24]
10001d02:	61a3      	str	r3, [r4, #24]
    frame.manual.r11 = FD_STACK_READVAL(point);
10001d04:	69c3      	ldr	r3, [r0, #28]
10001d06:	61e3      	str	r3, [r4, #28]
    frame.except.r0  = FD_STACK_READVAL(point);
10001d08:	6a03      	ldr	r3, [r0, #32]
10001d0a:	6223      	str	r3, [r4, #32]
    frame.except.r1  = FD_STACK_READVAL(point);
10001d0c:	6a43      	ldr	r3, [r0, #36]	; 0x24
10001d0e:	6263      	str	r3, [r4, #36]	; 0x24
    frame.except.r2  = FD_STACK_READVAL(point);
10001d10:	6a83      	ldr	r3, [r0, #40]	; 0x28
10001d12:	62a3      	str	r3, [r4, #40]	; 0x28
    frame.except.r3  = FD_STACK_READVAL(point);
10001d14:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
10001d16:	62e3      	str	r3, [r4, #44]	; 0x2c
    frame.except.r12 = FD_STACK_READVAL(point);
10001d18:	6b03      	ldr	r3, [r0, #48]	; 0x30
10001d1a:	6323      	str	r3, [r4, #48]	; 0x30
    frame.except.lr  = FD_STACK_READVAL(point);
10001d1c:	6b43      	ldr	r3, [r0, #52]	; 0x34
10001d1e:	6363      	str	r3, [r4, #52]	; 0x34
    frame.except.pc  = FD_STACK_READVAL(point);
10001d20:	6b83      	ldr	r3, [r0, #56]	; 0x38
10001d22:	63a3      	str	r3, [r4, #56]	; 0x38
    frame.except.psr = FD_STACK_READVAL(point);
10001d24:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
10001d26:	63e3      	str	r3, [r4, #60]	; 0x3c
    printf("\r\n");
10001d28:	4f3f      	ldr	r7, [pc, #252]	; (10001e28 <fault_dump_handler+0x148>)
10001d2a:	4638      	mov	r0, r7
10001d2c:	f7ff ff0e 	bl	10001b4c <puts>
    printf(" HardFault Information Dump \r\n");
10001d30:	483e      	ldr	r0, [pc, #248]	; (10001e2c <fault_dump_handler+0x14c>)
10001d32:	f7ff ff0b 	bl	10001b4c <puts>
    printf(" Stack Frame   \r\n");
10001d36:	483e      	ldr	r0, [pc, #248]	; (10001e30 <fault_dump_handler+0x150>)
10001d38:	f7ff ff08 	bl	10001b4c <puts>
    printf(" R0   = 0x%08X \r\n", (unsigned int)frame.except.r0);
10001d3c:	6a21      	ldr	r1, [r4, #32]
10001d3e:	483d      	ldr	r0, [pc, #244]	; (10001e34 <fault_dump_handler+0x154>)
10001d40:	f7ff fee4 	bl	10001b0c <printf>
    printf(" R1   = 0x%08X \r\n", (unsigned int)frame.except.r1);
10001d44:	6a61      	ldr	r1, [r4, #36]	; 0x24
10001d46:	483c      	ldr	r0, [pc, #240]	; (10001e38 <fault_dump_handler+0x158>)
10001d48:	f7ff fee0 	bl	10001b0c <printf>
    printf(" R2   = 0x%08X \r\n", (unsigned int)frame.except.r2);
10001d4c:	6aa1      	ldr	r1, [r4, #40]	; 0x28
10001d4e:	483b      	ldr	r0, [pc, #236]	; (10001e3c <fault_dump_handler+0x15c>)
10001d50:	f7ff fedc 	bl	10001b0c <printf>
    printf(" R3   = 0x%08X \r\n", (unsigned int)frame.except.r3);
10001d54:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
10001d56:	483a      	ldr	r0, [pc, #232]	; (10001e40 <fault_dump_handler+0x160>)
10001d58:	f7ff fed8 	bl	10001b0c <printf>
    printf(" R4   = 0x%08X \r\n", (unsigned int)frame.manual.r4);
10001d5c:	6821      	ldr	r1, [r4, #0]
10001d5e:	4839      	ldr	r0, [pc, #228]	; (10001e44 <fault_dump_handler+0x164>)
10001d60:	f7ff fed4 	bl	10001b0c <printf>
    printf(" R5   = 0x%08X \r\n", (unsigned int)frame.manual.r5);
10001d64:	6861      	ldr	r1, [r4, #4]
10001d66:	4838      	ldr	r0, [pc, #224]	; (10001e48 <fault_dump_handler+0x168>)
10001d68:	f7ff fed0 	bl	10001b0c <printf>
    printf(" R6   = 0x%08X \r\n", (unsigned int)frame.manual.r6);
10001d6c:	68a1      	ldr	r1, [r4, #8]
10001d6e:	4837      	ldr	r0, [pc, #220]	; (10001e4c <fault_dump_handler+0x16c>)
10001d70:	f7ff fecc 	bl	10001b0c <printf>
    printf(" R7   = 0x%08X \r\n", (unsigned int)frame.manual.r7);
10001d74:	68e1      	ldr	r1, [r4, #12]
10001d76:	4836      	ldr	r0, [pc, #216]	; (10001e50 <fault_dump_handler+0x170>)
10001d78:	f7ff fec8 	bl	10001b0c <printf>
    printf(" R8   = 0x%08X \r\n", (unsigned int)frame.manual.r8);
10001d7c:	6921      	ldr	r1, [r4, #16]
10001d7e:	4835      	ldr	r0, [pc, #212]	; (10001e54 <fault_dump_handler+0x174>)
10001d80:	f7ff fec4 	bl	10001b0c <printf>
    printf(" R9   = 0x%08X \r\n", (unsigned int)frame.manual.r9);
10001d84:	6961      	ldr	r1, [r4, #20]
10001d86:	4834      	ldr	r0, [pc, #208]	; (10001e58 <fault_dump_handler+0x178>)
10001d88:	f7ff fec0 	bl	10001b0c <printf>
    printf(" R10  = 0x%08X \r\n", (unsigned int)frame.manual.r10);
10001d8c:	69a1      	ldr	r1, [r4, #24]
10001d8e:	4833      	ldr	r0, [pc, #204]	; (10001e5c <fault_dump_handler+0x17c>)
10001d90:	f7ff febc 	bl	10001b0c <printf>
    printf(" R11  = 0x%08X \r\n", (unsigned int)frame.manual.r11);
10001d94:	69e1      	ldr	r1, [r4, #28]
10001d96:	4832      	ldr	r0, [pc, #200]	; (10001e60 <fault_dump_handler+0x180>)
10001d98:	f7ff feb8 	bl	10001b0c <printf>
    printf(" R12  = 0x%08X \r\n", (unsigned int)frame.except.r12);
10001d9c:	6b21      	ldr	r1, [r4, #48]	; 0x30
10001d9e:	4831      	ldr	r0, [pc, #196]	; (10001e64 <fault_dump_handler+0x184>)
10001da0:	f7ff feb4 	bl	10001b0c <printf>
    printf(" LR   = 0x%08X \r\n", (unsigned int)frame.except.lr);
10001da4:	6b61      	ldr	r1, [r4, #52]	; 0x34
10001da6:	4830      	ldr	r0, [pc, #192]	; (10001e68 <fault_dump_handler+0x188>)
10001da8:	f7ff feb0 	bl	10001b0c <printf>
    printf(" PC   = 0x%08X \r\n", (unsigned int)frame.except.pc);
10001dac:	6ba1      	ldr	r1, [r4, #56]	; 0x38
10001dae:	482f      	ldr	r0, [pc, #188]	; (10001e6c <fault_dump_handler+0x18c>)
10001db0:	f7ff feac 	bl	10001b0c <printf>
    printf(" PSR  = 0x%08X \r\n", (unsigned int)frame.except.psr);
10001db4:	6be1      	ldr	r1, [r4, #60]	; 0x3c
10001db6:	482e      	ldr	r0, [pc, #184]	; (10001e70 <fault_dump_handler+0x190>)
10001db8:	f7ff fea8 	bl	10001b0c <printf>
    printf("\r\n");
10001dbc:	4638      	mov	r0, r7
10001dbe:	f7ff fec5 	bl	10001b4c <puts>
    dump_exc_return(linker);
10001dc2:	4630      	mov	r0, r6
10001dc4:	f7ff ff54 	bl	10001c70 <dump_exc_return>
    if (stack_using_msp(linker)) {
10001dc8:	4630      	mov	r0, r6
10001dca:	f7ff ff5d 	bl	10001c88 <stack_using_msp>
10001dce:	b190      	cbz	r0, 10001df6 <fault_dump_handler+0x116>
        count = fd_msp_stack_parser(buffer, FD_STACK_DUMP_DEPTH_MAX, 
10001dd0:	4b28      	ldr	r3, [pc, #160]	; (10001e74 <fault_dump_handler+0x194>)
10001dd2:	681c      	ldr	r4, [r3, #0]
10001dd4:	4b28      	ldr	r3, [pc, #160]	; (10001e78 <fault_dump_handler+0x198>)
10001dd6:	f105 0240 	add.w	r2, r5, #64	; 0x40
10001dda:	2140      	movs	r1, #64	; 0x40
10001ddc:	4827      	ldr	r0, [pc, #156]	; (10001e7c <fault_dump_handler+0x19c>)
10001dde:	47a0      	blx	r4
10001de0:	4605      	mov	r5, r0
    printf(" Stack Call: ");
10001de2:	4827      	ldr	r0, [pc, #156]	; (10001e80 <fault_dump_handler+0x1a0>)
10001de4:	f7ff fe92 	bl	10001b0c <printf>
    printf("%08X ", (unsigned int)frame.except.pc);
10001de8:	4b0e      	ldr	r3, [pc, #56]	; (10001e24 <fault_dump_handler+0x144>)
10001dea:	6b99      	ldr	r1, [r3, #56]	; 0x38
10001dec:	4825      	ldr	r0, [pc, #148]	; (10001e84 <fault_dump_handler+0x1a4>)
10001dee:	f7ff fe8d 	bl	10001b0c <printf>
    for (index = 0; index < count; index++) {
10001df2:	2400      	movs	r4, #0
10001df4:	e010      	b.n	10001e18 <fault_dump_handler+0x138>
        count = fd_psp_stack_parser(buffer, FD_STACK_DUMP_DEPTH_MAX, 
10001df6:	4b24      	ldr	r3, [pc, #144]	; (10001e88 <fault_dump_handler+0x1a8>)
10001df8:	681c      	ldr	r4, [r3, #0]
10001dfa:	4b1f      	ldr	r3, [pc, #124]	; (10001e78 <fault_dump_handler+0x198>)
10001dfc:	f105 0240 	add.w	r2, r5, #64	; 0x40
10001e00:	2140      	movs	r1, #64	; 0x40
10001e02:	481e      	ldr	r0, [pc, #120]	; (10001e7c <fault_dump_handler+0x19c>)
10001e04:	47a0      	blx	r4
10001e06:	4605      	mov	r5, r0
10001e08:	e7eb      	b.n	10001de2 <fault_dump_handler+0x102>
        printf("%08X ", buffer[index]);
10001e0a:	4b1c      	ldr	r3, [pc, #112]	; (10001e7c <fault_dump_handler+0x19c>)
10001e0c:	f853 1024 	ldr.w	r1, [r3, r4, lsl #2]
10001e10:	481c      	ldr	r0, [pc, #112]	; (10001e84 <fault_dump_handler+0x1a4>)
10001e12:	f7ff fe7b 	bl	10001b0c <printf>
    for (index = 0; index < count; index++) {
10001e16:	3401      	adds	r4, #1
10001e18:	42a5      	cmp	r5, r4
10001e1a:	dcf6      	bgt.n	10001e0a <fault_dump_handler+0x12a>
    printf("\r\n");
10001e1c:	4802      	ldr	r0, [pc, #8]	; (10001e28 <fault_dump_handler+0x148>)
10001e1e:	f7ff fe95 	bl	10001b4c <puts>
    while (1);
10001e22:	e7fe      	b.n	10001e22 <fault_dump_handler+0x142>
10001e24:	38008578 	stmdacc	r0, {r3, r4, r5, r6, r8, sl, pc}
10001e28:	10005a34 	andne	r5, r0, r4, lsr sl
10001e2c:	10005a18 	andne	r5, r0, r8, lsl sl
10001e30:	10005a38 	andne	r5, r0, r8, lsr sl
10001e34:	10005a4c 	andne	r5, r0, ip, asr #20
10001e38:	10005a60 	andne	r5, r0, r0, ror #20
10001e3c:	10005a74 	andne	r5, r0, r4, ror sl
10001e40:	10005a88 	andne	r5, r0, r8, lsl #21
10001e44:	10005a9c 	mulne	r0, ip, sl
10001e48:	10005ab0 			; <UNDEFINED> instruction: 0x10005ab0
10001e4c:	10005ac4 	andne	r5, r0, r4, asr #21
10001e50:	10005ad8 	ldrdne	r5, [r0], -r8
10001e54:	10005aec 	andne	r5, r0, ip, ror #21
10001e58:	10005b00 	andne	r5, r0, r0, lsl #22
10001e5c:	10005b14 	andne	r5, r0, r4, lsl fp
10001e60:	10005b28 	andne	r5, r0, r8, lsr #22
10001e64:	10005b3c 	andne	r5, r0, ip, lsr fp
10001e68:	10005b50 	andne	r5, r0, r0, asr fp
10001e6c:	10005b64 	andne	r5, r0, r4, ror #22
10001e70:	10005b78 	andne	r5, r0, r8, ror fp
10001e74:	38000004 	stmdacc	r0, {r2}
10001e78:	38100000 	ldmdacc	r0, {}	; <UNPREDICTABLE>
10001e7c:	38008470 	stmdacc	r0, {r4, r5, r6, sl, pc}
10001e80:	10005b8c 	andne	r5, r0, ip, lsl #23
10001e84:	100058a8 	andne	r5, r0, r8, lsr #17
10001e88:	38000008 	stmdacc	r0, {r3}

10001e8c <fault_dump_bm_stack_point>:
 */
__STATIC_FORCEINLINE uint32_t __get_MSP(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, msp" : "=r" (result) );
10001e8c:	f3ef 8008 	mrs	r0, MSP

unsigned int fault_dump_bm_stack_point(void) {
    return __get_MSP();
}
10001e90:	4770      	bx	lr
	...

10001e94 <fault_dump_bm_stack_start>:

unsigned int fault_dump_bm_stack_start(void) {
    return FD_STACK_START;
}
10001e94:	4800      	ldr	r0, [pc, #0]	; (10001e98 <fault_dump_bm_stack_start+0x4>)
10001e96:	4770      	bx	lr
10001e98:	38100000 	ldmdacc	r0, {}	; <UNPREDICTABLE>

10001e9c <fault_dump_exc_return>:
  *
  ******************************************************************************
  */
#include "fault-dump.h"

void fault_dump_exc_return(unsigned int exc_return) {
10001e9c:	b510      	push	{r4, lr}
10001e9e:	4604      	mov	r4, r0
    printf(" \r\n");
10001ea0:	482a      	ldr	r0, [pc, #168]	; (10001f4c <fault_dump_exc_return+0xb0>)
10001ea2:	f7ff fe53 	bl	10001b4c <puts>
    printf(" Bit0 Except Security State:");
10001ea6:	482a      	ldr	r0, [pc, #168]	; (10001f50 <fault_dump_exc_return+0xb4>)
10001ea8:	f7ff fe30 	bl	10001b0c <printf>
    if (FD_CHECK_BIT(exc_return, 0)) {
10001eac:	f014 0f01 	tst.w	r4, #1
10001eb0:	d033      	beq.n	10001f1a <fault_dump_exc_return+0x7e>
        printf("[Use Security State....].\r\n");
10001eb2:	4828      	ldr	r0, [pc, #160]	; (10001f54 <fault_dump_exc_return+0xb8>)
10001eb4:	f7ff fe4a 	bl	10001b4c <puts>
    } else {
        printf("[Use Not Security State].\r\n");
    }
    printf(" Bit2 Stack Point Select...:");
10001eb8:	4827      	ldr	r0, [pc, #156]	; (10001f58 <fault_dump_exc_return+0xbc>)
10001eba:	f7ff fe27 	bl	10001b0c <printf>
    if (FD_CHECK_BIT(exc_return, 2)) {
10001ebe:	f014 0f04 	tst.w	r4, #4
10001ec2:	d02e      	beq.n	10001f22 <fault_dump_exc_return+0x86>
        printf("[Use PSP...............].\r\n");
10001ec4:	4825      	ldr	r0, [pc, #148]	; (10001f5c <fault_dump_exc_return+0xc0>)
10001ec6:	f7ff fe41 	bl	10001b4c <puts>
    } else {
        printf("[Use MSP...............].\r\n");
    }
    printf(" Bit3 Proc Mode Before IRQ.:");
10001eca:	4825      	ldr	r0, [pc, #148]	; (10001f60 <fault_dump_exc_return+0xc4>)
10001ecc:	f7ff fe1e 	bl	10001b0c <printf>
    if (FD_CHECK_BIT(exc_return, 3)) {
10001ed0:	f014 0f08 	tst.w	r4, #8
10001ed4:	d029      	beq.n	10001f2a <fault_dump_exc_return+0x8e>
        printf("[Use Thread Mode.......].\r\n");
10001ed6:	4823      	ldr	r0, [pc, #140]	; (10001f64 <fault_dump_exc_return+0xc8>)
10001ed8:	f7ff fe38 	bl	10001b4c <puts>
    } else {
        printf("[Use Process Mode......].\r\n");
    }
    printf(" Bit4 Stack Frame Type.....:");
10001edc:	4822      	ldr	r0, [pc, #136]	; (10001f68 <fault_dump_exc_return+0xcc>)
10001ede:	f7ff fe15 	bl	10001b0c <printf>
    if (FD_CHECK_BIT(exc_return, 4)) {
10001ee2:	f014 0f10 	tst.w	r4, #16
10001ee6:	d024      	beq.n	10001f32 <fault_dump_exc_return+0x96>
        printf("[Use Standard Frame....].\r\n");
10001ee8:	4820      	ldr	r0, [pc, #128]	; (10001f6c <fault_dump_exc_return+0xd0>)
10001eea:	f7ff fe2f 	bl	10001b4c <puts>
    } else {
        printf("[Use Extended Frame....].\r\n");
    }
    printf(" Bit5 Default Call Rule....:");
10001eee:	4820      	ldr	r0, [pc, #128]	; (10001f70 <fault_dump_exc_return+0xd4>)
10001ef0:	f7ff fe0c 	bl	10001b0c <printf>
    if (FD_CHECK_BIT(exc_return, 5)) {
10001ef4:	f014 0f20 	tst.w	r4, #32
10001ef8:	d01f      	beq.n	10001f3a <fault_dump_exc_return+0x9e>
        printf("[Use Default Rule......].\r\n");
10001efa:	481e      	ldr	r0, [pc, #120]	; (10001f74 <fault_dump_exc_return+0xd8>)
10001efc:	f7ff fe26 	bl	10001b4c <puts>
    } else {
        printf("[Use Not Default Rule..].\r\n");
    }
    printf(" Bit6 Security Stack.......:");
10001f00:	481d      	ldr	r0, [pc, #116]	; (10001f78 <fault_dump_exc_return+0xdc>)
10001f02:	f7ff fe03 	bl	10001b0c <printf>
    if (FD_CHECK_BIT(exc_return, 6)) {
10001f06:	f014 0f40 	tst.w	r4, #64	; 0x40
10001f0a:	d01a      	beq.n	10001f42 <fault_dump_exc_return+0xa6>
        printf("[Use Security Stack....].\r\n");
10001f0c:	481b      	ldr	r0, [pc, #108]	; (10001f7c <fault_dump_exc_return+0xe0>)
10001f0e:	f7ff fe1d 	bl	10001b4c <puts>
    } else {
        printf("[Use Not Security Stack].\r\n");
    }
    printf(" \r\n");
10001f12:	480e      	ldr	r0, [pc, #56]	; (10001f4c <fault_dump_exc_return+0xb0>)
10001f14:	f7ff fe1a 	bl	10001b4c <puts>
}
10001f18:	bd10      	pop	{r4, pc}
        printf("[Use Not Security State].\r\n");
10001f1a:	4819      	ldr	r0, [pc, #100]	; (10001f80 <fault_dump_exc_return+0xe4>)
10001f1c:	f7ff fe16 	bl	10001b4c <puts>
10001f20:	e7ca      	b.n	10001eb8 <fault_dump_exc_return+0x1c>
        printf("[Use MSP...............].\r\n");
10001f22:	4818      	ldr	r0, [pc, #96]	; (10001f84 <fault_dump_exc_return+0xe8>)
10001f24:	f7ff fe12 	bl	10001b4c <puts>
10001f28:	e7cf      	b.n	10001eca <fault_dump_exc_return+0x2e>
        printf("[Use Process Mode......].\r\n");
10001f2a:	4817      	ldr	r0, [pc, #92]	; (10001f88 <fault_dump_exc_return+0xec>)
10001f2c:	f7ff fe0e 	bl	10001b4c <puts>
10001f30:	e7d4      	b.n	10001edc <fault_dump_exc_return+0x40>
        printf("[Use Extended Frame....].\r\n");
10001f32:	4816      	ldr	r0, [pc, #88]	; (10001f8c <fault_dump_exc_return+0xf0>)
10001f34:	f7ff fe0a 	bl	10001b4c <puts>
10001f38:	e7d9      	b.n	10001eee <fault_dump_exc_return+0x52>
        printf("[Use Not Default Rule..].\r\n");
10001f3a:	4815      	ldr	r0, [pc, #84]	; (10001f90 <fault_dump_exc_return+0xf4>)
10001f3c:	f7ff fe06 	bl	10001b4c <puts>
10001f40:	e7de      	b.n	10001f00 <fault_dump_exc_return+0x64>
        printf("[Use Not Security Stack].\r\n");
10001f42:	4814      	ldr	r0, [pc, #80]	; (10001f94 <fault_dump_exc_return+0xf8>)
10001f44:	f7ff fe02 	bl	10001b4c <puts>
10001f48:	e7e3      	b.n	10001f12 <fault_dump_exc_return+0x76>
10001f4a:	bf00      	nop
10001f4c:	10005b9c 	mulne	r0, ip, fp
10001f50:	10005ba0 	andne	r5, r0, r0, lsr #23
10001f54:	10005bc0 	andne	r5, r0, r0, asr #23
10001f58:	10005bf8 	strdne	r5, [r0], -r8
10001f5c:	10005c18 	andne	r5, r0, r8, lsl ip
10001f60:	10005c50 	andne	r5, r0, r0, asr ip
10001f64:	10005c70 	andne	r5, r0, r0, ror ip
10001f68:	10005ca8 	andne	r5, r0, r8, lsr #25
10001f6c:	10005cc8 	andne	r5, r0, r8, asr #25
10001f70:	10005d00 	andne	r5, r0, r0, lsl #26
10001f74:	10005d20 	andne	r5, r0, r0, lsr #26
10001f78:	10005d58 	andne	r5, r0, r8, asr sp
10001f7c:	10005d78 	andne	r5, r0, r8, ror sp
10001f80:	10005bdc 	ldrdne	r5, [r0], -ip
10001f84:	10005c34 	andne	r5, r0, r4, lsr ip
10001f88:	10005c8c 	andne	r5, r0, ip, lsl #25
10001f8c:	10005ce4 	andne	r5, r0, r4, ror #25
10001f90:	10005d3c 	andne	r5, r0, ip, lsr sp
10001f94:	10005d94 	mulne	r0, r4, sp

10001f98 <fault_dump_using_msp>:

bool fault_dump_using_msp(unsigned int exc_return) {
    if (FD_CHECK_BIT(exc_return, 2)) {
10001f98:	f010 0f04 	tst.w	r0, #4
10001f9c:	d001      	beq.n	10001fa2 <fault_dump_using_msp+0xa>
        return false;
10001f9e:	2000      	movs	r0, #0
10001fa0:	4770      	bx	lr
    } else {
        return true;
10001fa2:	2001      	movs	r0, #1
    }
}
10001fa4:	4770      	bx	lr
	...

10001fa8 <fault_dump_unalign>:
    SCB->CCR |= SCB_CCR_DIV_0_TRP_Msk;
    c = (a + (b / c));
    printf("zero = %d\r\n", c);
}

void fault_dump_unalign(void) {
10001fa8:	b530      	push	{r4, r5, lr}
10001faa:	b083      	sub	sp, #12
    volatile int *addr = NULL;
    volatile int value = 0;
10001fac:	2400      	movs	r4, #0
10001fae:	9401      	str	r4, [sp, #4]
    SCB->CCR |= SCB_CCR_UNALIGN_TRP_Msk;
10001fb0:	4a0e      	ldr	r2, [pc, #56]	; (10001fec <fault_dump_unalign+0x44>)
10001fb2:	6953      	ldr	r3, [r2, #20]
10001fb4:	f043 0308 	orr.w	r3, r3, #8
10001fb8:	6153      	str	r3, [r2, #20]
    addr = (int*)0x00;
    value = *addr;
10001fba:	6823      	ldr	r3, [r4, #0]
10001fbc:	9301      	str	r3, [sp, #4]
    printf("addr:0x%02X-value:0x%08X\r\n", (int)addr, value);
10001fbe:	9a01      	ldr	r2, [sp, #4]
10001fc0:	4d0b      	ldr	r5, [pc, #44]	; (10001ff0 <fault_dump_unalign+0x48>)
10001fc2:	4621      	mov	r1, r4
10001fc4:	4628      	mov	r0, r5
10001fc6:	f7ff fda1 	bl	10001b0c <printf>
    addr = (int*)0x04;
    value = *addr;
10001fca:	6863      	ldr	r3, [r4, #4]
10001fcc:	9301      	str	r3, [sp, #4]
    printf("addr:0x%02X-value:0x%08X\r\n", (int)addr, value);
10001fce:	9a01      	ldr	r2, [sp, #4]
10001fd0:	2104      	movs	r1, #4
10001fd2:	4628      	mov	r0, r5
10001fd4:	f7ff fd9a 	bl	10001b0c <printf>
    addr = (int*)0x03;
    value = *addr;
10001fd8:	f8d4 3003 	ldr.w	r3, [r4, #3]
10001fdc:	9301      	str	r3, [sp, #4]
    printf("addr:0x%02X-value:0x%08X\r\n", (int)addr, value);
10001fde:	9a01      	ldr	r2, [sp, #4]
10001fe0:	2103      	movs	r1, #3
10001fe2:	4628      	mov	r0, r5
10001fe4:	f7ff fd92 	bl	10001b0c <printf>
}
10001fe8:	b003      	add	sp, #12
10001fea:	bd30      	pop	{r4, r5, pc}
10001fec:	e000ed00 	and	lr, r0, r0, lsl #26
10001ff0:	10005db0 			; <UNDEFINED> instruction: 0x10005db0

10001ff4 <vListInitialise>:
    traceENTER_vListInitialise( pxList );

    /* The list structure contains a list item which is used to mark the
     * end of the list.  To initialise the list the list end is inserted
     * as the only list entry. */
    pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );
10001ff4:	f100 0308 	add.w	r3, r0, #8
10001ff8:	6043      	str	r3, [r0, #4]

    listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( &( pxList->xListEnd ) );

    /* The list end value is the highest possible value in the list to
     * ensure it remains at the end of the list. */
    pxList->xListEnd.xItemValue = portMAX_DELAY;
10001ffa:	f04f 32ff 	mov.w	r2, #4294967295
10001ffe:	6082      	str	r2, [r0, #8]

    /* The list end next and previous pointers point to itself so we know
     * when the list is empty. */
    pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );
10002000:	60c3      	str	r3, [r0, #12]
    pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );
10002002:	6103      	str	r3, [r0, #16]

    /* Initialize the remaining fields of xListEnd when it is a proper ListItem_t */
    #if ( configUSE_MINI_LIST_ITEM == 0 )
    {
        pxList->xListEnd.pvOwner = NULL;
10002004:	2300      	movs	r3, #0
10002006:	6143      	str	r3, [r0, #20]
        pxList->xListEnd.pxContainer = NULL;
10002008:	6183      	str	r3, [r0, #24]
        listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( &( pxList->xListEnd ) );
    }
    #endif

    pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
1000200a:	6003      	str	r3, [r0, #0]
     * configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
    listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
    listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );

    traceRETURN_vListInitialise();
}
1000200c:	4770      	bx	lr

1000200e <vListInitialiseItem>:
void vListInitialiseItem( ListItem_t * const pxItem )
{
    traceENTER_vListInitialiseItem( pxItem );

    /* Make sure the list item is not recorded as being on a list. */
    pxItem->pxContainer = NULL;
1000200e:	2300      	movs	r3, #0
10002010:	6103      	str	r3, [r0, #16]
     * configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
    listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
    listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );

    traceRETURN_vListInitialiseItem();
}
10002012:	4770      	bx	lr

10002014 <vListInsert>:
}
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList,
                  ListItem_t * const pxNewListItem )
{
10002014:	b430      	push	{r4, r5}
    ListItem_t * pxIterator;
    const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
10002016:	680d      	ldr	r5, [r1, #0]
     * new list item should be placed after it.  This ensures that TCBs which are
     * stored in ready lists (all of which have the same xItemValue value) get a
     * share of the CPU.  However, if the xItemValue is the same as the back marker
     * the iteration loop below will not end.  Therefore the value is checked
     * first, and the algorithm slightly modified if necessary. */
    if( xValueOfInsertion == portMAX_DELAY )
10002018:	f1b5 3fff 	cmp.w	r5, #4294967295
1000201c:	d011      	beq.n	10002042 <vListInsert+0x2e>
        *   5) If the FreeRTOS port supports interrupt nesting then ensure that
        *      the priority of the tick interrupt is at or below
        *      configMAX_SYSCALL_INTERRUPT_PRIORITY.
        **********************************************************************/

        for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext )
1000201e:	f100 0308 	add.w	r3, r0, #8
10002022:	461c      	mov	r4, r3
10002024:	685b      	ldr	r3, [r3, #4]
10002026:	681a      	ldr	r2, [r3, #0]
10002028:	42aa      	cmp	r2, r5
1000202a:	d9fa      	bls.n	10002022 <vListInsert+0xe>
            /* There is nothing to do here, just iterating to the wanted
             * insertion position. */
        }
    }

    pxNewListItem->pxNext = pxIterator->pxNext;
1000202c:	6863      	ldr	r3, [r4, #4]
1000202e:	604b      	str	r3, [r1, #4]
    pxNewListItem->pxNext->pxPrevious = pxNewListItem;
10002030:	6099      	str	r1, [r3, #8]
    pxNewListItem->pxPrevious = pxIterator;
10002032:	608c      	str	r4, [r1, #8]
    pxIterator->pxNext = pxNewListItem;
10002034:	6061      	str	r1, [r4, #4]

    /* Remember which list the item is in.  This allows fast removal of the
     * item later. */
    pxNewListItem->pxContainer = pxList;
10002036:	6108      	str	r0, [r1, #16]

    ( pxList->uxNumberOfItems ) = ( UBaseType_t ) ( pxList->uxNumberOfItems + 1U );
10002038:	6803      	ldr	r3, [r0, #0]
1000203a:	3301      	adds	r3, #1
1000203c:	6003      	str	r3, [r0, #0]

    traceRETURN_vListInsert();
}
1000203e:	bc30      	pop	{r4, r5}
10002040:	4770      	bx	lr
        pxIterator = pxList->xListEnd.pxPrevious;
10002042:	6904      	ldr	r4, [r0, #16]
10002044:	e7f2      	b.n	1000202c <vListInsert+0x18>

10002046 <uxListRemove>:

UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
{
    /* The list item knows which list it is in.  Obtain the list from the list
     * item. */
    List_t * const pxList = pxItemToRemove->pxContainer;
10002046:	6903      	ldr	r3, [r0, #16]

    traceENTER_uxListRemove( pxItemToRemove );

    pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
10002048:	6841      	ldr	r1, [r0, #4]
1000204a:	6882      	ldr	r2, [r0, #8]
1000204c:	608a      	str	r2, [r1, #8]
    pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
1000204e:	6841      	ldr	r1, [r0, #4]
10002050:	6051      	str	r1, [r2, #4]

    /* Only used during decision coverage testing. */
    mtCOVERAGE_TEST_DELAY();

    /* Make sure the index is left pointing to a valid item. */
    if( pxList->pxIndex == pxItemToRemove )
10002052:	685a      	ldr	r2, [r3, #4]
10002054:	4282      	cmp	r2, r0
10002056:	d005      	beq.n	10002064 <uxListRemove+0x1e>
    else
    {
        mtCOVERAGE_TEST_MARKER();
    }

    pxItemToRemove->pxContainer = NULL;
10002058:	2200      	movs	r2, #0
1000205a:	6102      	str	r2, [r0, #16]
    ( pxList->uxNumberOfItems ) = ( UBaseType_t ) ( pxList->uxNumberOfItems - 1U );
1000205c:	6818      	ldr	r0, [r3, #0]
1000205e:	3801      	subs	r0, #1
10002060:	6018      	str	r0, [r3, #0]

    traceRETURN_uxListRemove( pxList->uxNumberOfItems );

    return pxList->uxNumberOfItems;
}
10002062:	4770      	bx	lr
        pxList->pxIndex = pxItemToRemove->pxPrevious;
10002064:	6882      	ldr	r2, [r0, #8]
10002066:	605a      	str	r2, [r3, #4]
10002068:	e7f6      	b.n	10002058 <uxListRemove+0x12>

1000206a <prvIsQueueEmpty>:
    taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t * pxQueue )
{
1000206a:	b510      	push	{r4, lr}
1000206c:	4604      	mov	r4, r0
    BaseType_t xReturn;

    taskENTER_CRITICAL();
1000206e:	f001 fb01 	bl	10003674 <vPortEnterCritical>
    {
        if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0 )
10002072:	6ca3      	ldr	r3, [r4, #72]	; 0x48
10002074:	b923      	cbnz	r3, 10002080 <prvIsQueueEmpty+0x16>
        {
            xReturn = pdTRUE;
10002076:	2401      	movs	r4, #1
        else
        {
            xReturn = pdFALSE;
        }
    }
    taskEXIT_CRITICAL();
10002078:	f001 fb0a 	bl	10003690 <vPortExitCritical>

    return xReturn;
}
1000207c:	4620      	mov	r0, r4
1000207e:	bd10      	pop	{r4, pc}
            xReturn = pdFALSE;
10002080:	2400      	movs	r4, #0
10002082:	e7f9      	b.n	10002078 <prvIsQueueEmpty+0xe>

10002084 <prvCopyDataToQueue>:
{
10002084:	b570      	push	{r4, r5, r6, lr}
10002086:	4604      	mov	r4, r0
10002088:	4615      	mov	r5, r2
    uxMessagesWaiting = pxQueue->uxMessagesWaiting;
1000208a:	6c86      	ldr	r6, [r0, #72]	; 0x48
    if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
1000208c:	6d02      	ldr	r2, [r0, #80]	; 0x50
1000208e:	b95a      	cbnz	r2, 100020a8 <prvCopyDataToQueue+0x24>
            if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
10002090:	6803      	ldr	r3, [r0, #0]
10002092:	b11b      	cbz	r3, 1000209c <prvCopyDataToQueue+0x18>
    BaseType_t xReturn = pdFALSE;
10002094:	2000      	movs	r0, #0
    pxQueue->uxMessagesWaiting = ( UBaseType_t ) ( uxMessagesWaiting + ( UBaseType_t ) 1 );
10002096:	3601      	adds	r6, #1
10002098:	64a6      	str	r6, [r4, #72]	; 0x48
}
1000209a:	bd70      	pop	{r4, r5, r6, pc}
                xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
1000209c:	6880      	ldr	r0, [r0, #8]
1000209e:	f000 fed7 	bl	10002e50 <xTaskPriorityDisinherit>
                pxQueue->u.xSemaphore.xMutexHolder = NULL;
100020a2:	2300      	movs	r3, #0
100020a4:	60a3      	str	r3, [r4, #8]
100020a6:	e7f6      	b.n	10002096 <prvCopyDataToQueue+0x12>
    else if( xPosition == queueSEND_TO_BACK )
100020a8:	b96d      	cbnz	r5, 100020c6 <prvCopyDataToQueue+0x42>
        ( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize );
100020aa:	6840      	ldr	r0, [r0, #4]
100020ac:	f001 fc5c 	bl	10003968 <memcpy>
        pxQueue->pcWriteTo += pxQueue->uxItemSize;
100020b0:	6d22      	ldr	r2, [r4, #80]	; 0x50
100020b2:	6863      	ldr	r3, [r4, #4]
100020b4:	4413      	add	r3, r2
100020b6:	6063      	str	r3, [r4, #4]
        if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail )
100020b8:	68a2      	ldr	r2, [r4, #8]
100020ba:	4293      	cmp	r3, r2
100020bc:	d319      	bcc.n	100020f2 <prvCopyDataToQueue+0x6e>
            pxQueue->pcWriteTo = pxQueue->pcHead;
100020be:	6823      	ldr	r3, [r4, #0]
100020c0:	6063      	str	r3, [r4, #4]
    BaseType_t xReturn = pdFALSE;
100020c2:	4628      	mov	r0, r5
100020c4:	e7e7      	b.n	10002096 <prvCopyDataToQueue+0x12>
        ( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize );
100020c6:	68c0      	ldr	r0, [r0, #12]
100020c8:	f001 fc4e 	bl	10003968 <memcpy>
        pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
100020cc:	6d22      	ldr	r2, [r4, #80]	; 0x50
100020ce:	4251      	negs	r1, r2
100020d0:	68e3      	ldr	r3, [r4, #12]
100020d2:	1a9b      	subs	r3, r3, r2
100020d4:	60e3      	str	r3, [r4, #12]
        if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead )
100020d6:	6822      	ldr	r2, [r4, #0]
100020d8:	4293      	cmp	r3, r2
100020da:	d202      	bcs.n	100020e2 <prvCopyDataToQueue+0x5e>
            pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
100020dc:	68a3      	ldr	r3, [r4, #8]
100020de:	440b      	add	r3, r1
100020e0:	60e3      	str	r3, [r4, #12]
        if( xPosition == queueOVERWRITE )
100020e2:	2d02      	cmp	r5, #2
100020e4:	d001      	beq.n	100020ea <prvCopyDataToQueue+0x66>
    BaseType_t xReturn = pdFALSE;
100020e6:	2000      	movs	r0, #0
100020e8:	e7d5      	b.n	10002096 <prvCopyDataToQueue+0x12>
            if( uxMessagesWaiting > ( UBaseType_t ) 0 )
100020ea:	b126      	cbz	r6, 100020f6 <prvCopyDataToQueue+0x72>
                --uxMessagesWaiting;
100020ec:	3e01      	subs	r6, #1
    BaseType_t xReturn = pdFALSE;
100020ee:	2000      	movs	r0, #0
100020f0:	e7d1      	b.n	10002096 <prvCopyDataToQueue+0x12>
100020f2:	4628      	mov	r0, r5
100020f4:	e7cf      	b.n	10002096 <prvCopyDataToQueue+0x12>
100020f6:	2000      	movs	r0, #0
100020f8:	e7cd      	b.n	10002096 <prvCopyDataToQueue+0x12>

100020fa <prvCopyDataFromQueue>:
{
100020fa:	4603      	mov	r3, r0
    if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
100020fc:	6d02      	ldr	r2, [r0, #80]	; 0x50
100020fe:	b16a      	cbz	r2, 1000211c <prvCopyDataFromQueue+0x22>
{
10002100:	b510      	push	{r4, lr}
10002102:	4608      	mov	r0, r1
        pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize;
10002104:	68d9      	ldr	r1, [r3, #12]
10002106:	4411      	add	r1, r2
10002108:	60d9      	str	r1, [r3, #12]
        if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail )
1000210a:	689c      	ldr	r4, [r3, #8]
1000210c:	42a1      	cmp	r1, r4
1000210e:	d301      	bcc.n	10002114 <prvCopyDataFromQueue+0x1a>
            pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
10002110:	6819      	ldr	r1, [r3, #0]
10002112:	60d9      	str	r1, [r3, #12]
        ( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize );
10002114:	68d9      	ldr	r1, [r3, #12]
10002116:	f001 fc27 	bl	10003968 <memcpy>
}
1000211a:	bd10      	pop	{r4, pc}
1000211c:	4770      	bx	lr

1000211e <prvNotifyQueueSetContainer>:
/*-----------------------------------------------------------*/

#if ( configUSE_QUEUE_SETS == 1 )

    static BaseType_t prvNotifyQueueSetContainer( const Queue_t * const pxQueue )
    {
1000211e:	b570      	push	{r4, r5, r6, lr}
10002120:	b082      	sub	sp, #8
10002122:	9001      	str	r0, [sp, #4]
        Queue_t * pxQueueSetContainer = pxQueue->pxQueueSetContainer;
10002124:	6d84      	ldr	r4, [r0, #88]	; 0x58
         * to prvNotifyQueueSetContainer is preceded by a check that
         * pxQueueSetContainer != NULL */
        configASSERT( pxQueueSetContainer ); /* LCOV_EXCL_BR_LINE */
        configASSERT( pxQueueSetContainer->uxMessagesWaiting < pxQueueSetContainer->uxLength );

        if( pxQueueSetContainer->uxMessagesWaiting < pxQueueSetContainer->uxLength )
10002126:	6ca2      	ldr	r2, [r4, #72]	; 0x48
10002128:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
1000212a:	429a      	cmp	r2, r3
1000212c:	d303      	bcc.n	10002136 <prvNotifyQueueSetContainer+0x18>
        BaseType_t xReturn = pdFALSE;
1000212e:	2500      	movs	r5, #0
        {
            mtCOVERAGE_TEST_MARKER();
        }

        return xReturn;
    }
10002130:	4628      	mov	r0, r5
10002132:	b002      	add	sp, #8
10002134:	bd70      	pop	{r4, r5, r6, pc}
            const int8_t cTxLock = pxQueueSetContainer->cTxLock;
10002136:	f894 6055 	ldrb.w	r6, [r4, #85]	; 0x55
1000213a:	b276      	sxtb	r6, r6
            xReturn = prvCopyDataToQueue( pxQueueSetContainer, &pxQueue, queueSEND_TO_BACK );
1000213c:	2200      	movs	r2, #0
1000213e:	a901      	add	r1, sp, #4
10002140:	4620      	mov	r0, r4
10002142:	f7ff ff9f 	bl	10002084 <prvCopyDataToQueue>
10002146:	4605      	mov	r5, r0
            if( cTxLock == queueUNLOCKED )
10002148:	f1b6 3fff 	cmp.w	r6, #4294967295
1000214c:	d10a      	bne.n	10002164 <prvNotifyQueueSetContainer+0x46>
                if( listLIST_IS_EMPTY( &( pxQueueSetContainer->xTasksWaitingToReceive ) ) == pdFALSE )
1000214e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
10002150:	2b00      	cmp	r3, #0
10002152:	d0ed      	beq.n	10002130 <prvNotifyQueueSetContainer+0x12>
                    if( xTaskRemoveFromEventList( &( pxQueueSetContainer->xTasksWaitingToReceive ) ) != pdFALSE )
10002154:	f104 002c 	add.w	r0, r4, #44	; 0x2c
10002158:	f000 fd94 	bl	10002c84 <xTaskRemoveFromEventList>
1000215c:	2800      	cmp	r0, #0
1000215e:	d0e7      	beq.n	10002130 <prvNotifyQueueSetContainer+0x12>
                        xReturn = pdTRUE;
10002160:	2501      	movs	r5, #1
        return xReturn;
10002162:	e7e5      	b.n	10002130 <prvNotifyQueueSetContainer+0x12>
                prvIncrementQueueTxLock( pxQueueSetContainer, cTxLock );
10002164:	f000 fb88 	bl	10002878 <uxTaskGetNumberOfTasks>
10002168:	4286      	cmp	r6, r0
1000216a:	d2e1      	bcs.n	10002130 <prvNotifyQueueSetContainer+0x12>
1000216c:	3601      	adds	r6, #1
1000216e:	b276      	sxtb	r6, r6
10002170:	f884 6055 	strb.w	r6, [r4, #85]	; 0x55
10002174:	e7dc      	b.n	10002130 <prvNotifyQueueSetContainer+0x12>

10002176 <prvUnlockQueue>:
{
10002176:	b538      	push	{r3, r4, r5, lr}
10002178:	4605      	mov	r5, r0
    taskENTER_CRITICAL();
1000217a:	f001 fa7b 	bl	10003674 <vPortEnterCritical>
        int8_t cTxLock = pxQueue->cTxLock;
1000217e:	f895 4055 	ldrb.w	r4, [r5, #85]	; 0x55
10002182:	b264      	sxtb	r4, r4
        while( cTxLock > queueLOCKED_UNMODIFIED )
10002184:	e008      	b.n	10002198 <prvUnlockQueue+0x22>
                    if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
10002186:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
10002188:	b1b3      	cbz	r3, 100021b8 <prvUnlockQueue+0x42>
                        if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1000218a:	f105 002c 	add.w	r0, r5, #44	; 0x2c
1000218e:	f000 fd79 	bl	10002c84 <xTaskRemoveFromEventList>
10002192:	b970      	cbnz	r0, 100021b2 <prvUnlockQueue+0x3c>
            --cTxLock;
10002194:	3c01      	subs	r4, #1
10002196:	b264      	sxtb	r4, r4
        while( cTxLock > queueLOCKED_UNMODIFIED )
10002198:	2c00      	cmp	r4, #0
1000219a:	dd0d      	ble.n	100021b8 <prvUnlockQueue+0x42>
                if( pxQueue->pxQueueSetContainer != NULL )
1000219c:	6dab      	ldr	r3, [r5, #88]	; 0x58
1000219e:	2b00      	cmp	r3, #0
100021a0:	d0f1      	beq.n	10002186 <prvUnlockQueue+0x10>
                    if( prvNotifyQueueSetContainer( pxQueue ) != pdFALSE )
100021a2:	4628      	mov	r0, r5
100021a4:	f7ff ffbb 	bl	1000211e <prvNotifyQueueSetContainer>
100021a8:	2800      	cmp	r0, #0
100021aa:	d0f3      	beq.n	10002194 <prvUnlockQueue+0x1e>
                        vTaskMissedYield();
100021ac:	f000 fe26 	bl	10002dfc <vTaskMissedYield>
100021b0:	e7f0      	b.n	10002194 <prvUnlockQueue+0x1e>
                            vTaskMissedYield();
100021b2:	f000 fe23 	bl	10002dfc <vTaskMissedYield>
100021b6:	e7ed      	b.n	10002194 <prvUnlockQueue+0x1e>
        pxQueue->cTxLock = queueUNLOCKED;
100021b8:	23ff      	movs	r3, #255	; 0xff
100021ba:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
    taskEXIT_CRITICAL();
100021be:	f001 fa67 	bl	10003690 <vPortExitCritical>
    taskENTER_CRITICAL();
100021c2:	f001 fa57 	bl	10003674 <vPortEnterCritical>
        int8_t cRxLock = pxQueue->cRxLock;
100021c6:	f895 4054 	ldrb.w	r4, [r5, #84]	; 0x54
100021ca:	b264      	sxtb	r4, r4
        while( cRxLock > queueLOCKED_UNMODIFIED )
100021cc:	e001      	b.n	100021d2 <prvUnlockQueue+0x5c>
                --cRxLock;
100021ce:	3c01      	subs	r4, #1
100021d0:	b264      	sxtb	r4, r4
        while( cRxLock > queueLOCKED_UNMODIFIED )
100021d2:	2c00      	cmp	r4, #0
100021d4:	dd0a      	ble.n	100021ec <prvUnlockQueue+0x76>
            if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
100021d6:	692b      	ldr	r3, [r5, #16]
100021d8:	b143      	cbz	r3, 100021ec <prvUnlockQueue+0x76>
                if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
100021da:	f105 0010 	add.w	r0, r5, #16
100021de:	f000 fd51 	bl	10002c84 <xTaskRemoveFromEventList>
100021e2:	2800      	cmp	r0, #0
100021e4:	d0f3      	beq.n	100021ce <prvUnlockQueue+0x58>
                    vTaskMissedYield();
100021e6:	f000 fe09 	bl	10002dfc <vTaskMissedYield>
100021ea:	e7f0      	b.n	100021ce <prvUnlockQueue+0x58>
        pxQueue->cRxLock = queueUNLOCKED;
100021ec:	23ff      	movs	r3, #255	; 0xff
100021ee:	f885 3054 	strb.w	r3, [r5, #84]	; 0x54
    taskEXIT_CRITICAL();
100021f2:	f001 fa4d 	bl	10003690 <vPortExitCritical>
}
100021f6:	bd38      	pop	{r3, r4, r5, pc}

100021f8 <xQueueGenericReset>:
    if( ( pxQueue != NULL ) &&
100021f8:	2800      	cmp	r0, #0
100021fa:	d03c      	beq.n	10002276 <xQueueGenericReset+0x7e>
{
100021fc:	b538      	push	{r3, r4, r5, lr}
100021fe:	460d      	mov	r5, r1
10002200:	4604      	mov	r4, r0
        ( pxQueue->uxLength >= 1U ) &&
10002202:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
    if( ( pxQueue != NULL ) &&
10002204:	2b00      	cmp	r3, #0
10002206:	d038      	beq.n	1000227a <xQueueGenericReset+0x82>
        ( ( SIZE_MAX / pxQueue->uxLength ) >= pxQueue->uxItemSize ) )
10002208:	6d02      	ldr	r2, [r0, #80]	; 0x50
1000220a:	2100      	movs	r1, #0
1000220c:	fba3 2302 	umull	r2, r3, r3, r2
10002210:	b913      	cbnz	r3, 10002218 <xQueueGenericReset+0x20>
        ( pxQueue->uxLength >= 1U ) &&
10002212:	b119      	cbz	r1, 1000221c <xQueueGenericReset+0x24>
        xReturn = pdFAIL;
10002214:	2000      	movs	r0, #0
    return xReturn;
10002216:	e031      	b.n	1000227c <xQueueGenericReset+0x84>
        ( ( SIZE_MAX / pxQueue->uxLength ) >= pxQueue->uxItemSize ) )
10002218:	2101      	movs	r1, #1
1000221a:	e7fa      	b.n	10002212 <xQueueGenericReset+0x1a>
        taskENTER_CRITICAL();
1000221c:	f001 fa2a 	bl	10003674 <vPortEnterCritical>
            pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize );
10002220:	6823      	ldr	r3, [r4, #0]
10002222:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
10002224:	6d21      	ldr	r1, [r4, #80]	; 0x50
10002226:	fb01 3002 	mla	r0, r1, r2, r3
1000222a:	60a0      	str	r0, [r4, #8]
            pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
1000222c:	2000      	movs	r0, #0
1000222e:	64a0      	str	r0, [r4, #72]	; 0x48
            pxQueue->pcWriteTo = pxQueue->pcHead;
10002230:	6063      	str	r3, [r4, #4]
            pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize );
10002232:	3a01      	subs	r2, #1
10002234:	fb02 3301 	mla	r3, r2, r1, r3
10002238:	60e3      	str	r3, [r4, #12]
            pxQueue->cRxLock = queueUNLOCKED;
1000223a:	23ff      	movs	r3, #255	; 0xff
1000223c:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
            pxQueue->cTxLock = queueUNLOCKED;
10002240:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
            if( xNewQueue == pdFALSE )
10002244:	b975      	cbnz	r5, 10002264 <xQueueGenericReset+0x6c>
                if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
10002246:	6923      	ldr	r3, [r4, #16]
10002248:	b91b      	cbnz	r3, 10002252 <xQueueGenericReset+0x5a>
        taskEXIT_CRITICAL();
1000224a:	f001 fa21 	bl	10003690 <vPortExitCritical>
    BaseType_t xReturn = pdPASS;
1000224e:	2001      	movs	r0, #1
        taskEXIT_CRITICAL();
10002250:	e014      	b.n	1000227c <xQueueGenericReset+0x84>
                    if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
10002252:	f104 0010 	add.w	r0, r4, #16
10002256:	f000 fd15 	bl	10002c84 <xTaskRemoveFromEventList>
1000225a:	2800      	cmp	r0, #0
1000225c:	d0f5      	beq.n	1000224a <xQueueGenericReset+0x52>
                        queueYIELD_IF_USING_PREEMPTION();
1000225e:	f001 f9fd 	bl	1000365c <vPortYield>
10002262:	e7f2      	b.n	1000224a <xQueueGenericReset+0x52>
                vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
10002264:	f104 0010 	add.w	r0, r4, #16
10002268:	f7ff fec4 	bl	10001ff4 <vListInitialise>
                vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
1000226c:	f104 002c 	add.w	r0, r4, #44	; 0x2c
10002270:	f7ff fec0 	bl	10001ff4 <vListInitialise>
10002274:	e7e9      	b.n	1000224a <xQueueGenericReset+0x52>
        xReturn = pdFAIL;
10002276:	2000      	movs	r0, #0
}
10002278:	4770      	bx	lr
        xReturn = pdFAIL;
1000227a:	2000      	movs	r0, #0
}
1000227c:	bd38      	pop	{r3, r4, r5, pc}

1000227e <prvInitialiseNewQueue>:
{
1000227e:	b510      	push	{r4, lr}
10002280:	9c02      	ldr	r4, [sp, #8]
    if( uxItemSize == ( UBaseType_t ) 0 )
10002282:	460b      	mov	r3, r1
10002284:	b949      	cbnz	r1, 1000229a <prvInitialiseNewQueue+0x1c>
        pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
10002286:	6024      	str	r4, [r4, #0]
    pxNewQueue->uxLength = uxQueueLength;
10002288:	64e0      	str	r0, [r4, #76]	; 0x4c
    pxNewQueue->uxItemSize = uxItemSize;
1000228a:	6523      	str	r3, [r4, #80]	; 0x50
    ( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
1000228c:	2101      	movs	r1, #1
1000228e:	4620      	mov	r0, r4
10002290:	f7ff ffb2 	bl	100021f8 <xQueueGenericReset>
        pxNewQueue->pxQueueSetContainer = NULL;
10002294:	2300      	movs	r3, #0
10002296:	65a3      	str	r3, [r4, #88]	; 0x58
}
10002298:	bd10      	pop	{r4, pc}
        pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
1000229a:	6022      	str	r2, [r4, #0]
1000229c:	e7f4      	b.n	10002288 <prvInitialiseNewQueue+0xa>

1000229e <xQueueGenericCreateStatic>:
        if( ( uxQueueLength > ( UBaseType_t ) 0 ) &&
1000229e:	b1b8      	cbz	r0, 100022d0 <xQueueGenericCreateStatic+0x32>
    {
100022a0:	b510      	push	{r4, lr}
100022a2:	b082      	sub	sp, #8
100022a4:	461c      	mov	r4, r3
100022a6:	4684      	mov	ip, r0
        if( ( uxQueueLength > ( UBaseType_t ) 0 ) &&
100022a8:	b1a3      	cbz	r3, 100022d4 <xQueueGenericCreateStatic+0x36>
            ( pxStaticQueue != NULL ) &&
100022aa:	b102      	cbz	r2, 100022ae <xQueueGenericCreateStatic+0x10>
            ( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0U ) ) ) &&
100022ac:	b1a1      	cbz	r1, 100022d8 <xQueueGenericCreateStatic+0x3a>
100022ae:	b15a      	cbz	r2, 100022c8 <xQueueGenericCreateStatic+0x2a>
                pxNewQueue->ucStaticallyAllocated = pdTRUE;
100022b0:	2301      	movs	r3, #1
100022b2:	f884 3056 	strb.w	r3, [r4, #86]	; 0x56
            prvInitialiseNewQueue( uxQueueLength, uxItemSize, pucQueueStorage, ucQueueType, pxNewQueue );
100022b6:	9400      	str	r4, [sp, #0]
100022b8:	f89d 3010 	ldrb.w	r3, [sp, #16]
100022bc:	4660      	mov	r0, ip
100022be:	f7ff ffde 	bl	1000227e <prvInitialiseNewQueue>
            pxNewQueue = ( Queue_t * ) pxStaticQueue;
100022c2:	4620      	mov	r0, r4
    }
100022c4:	b002      	add	sp, #8
100022c6:	bd10      	pop	{r4, pc}
            ( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0U ) ) ) )
100022c8:	2900      	cmp	r1, #0
100022ca:	d0f1      	beq.n	100022b0 <xQueueGenericCreateStatic+0x12>
        Queue_t * pxNewQueue = NULL;
100022cc:	4610      	mov	r0, r2
        return pxNewQueue;
100022ce:	e7f9      	b.n	100022c4 <xQueueGenericCreateStatic+0x26>
        Queue_t * pxNewQueue = NULL;
100022d0:	2000      	movs	r0, #0
    }
100022d2:	4770      	bx	lr
        Queue_t * pxNewQueue = NULL;
100022d4:	4618      	mov	r0, r3
100022d6:	e7f5      	b.n	100022c4 <xQueueGenericCreateStatic+0x26>
100022d8:	2000      	movs	r0, #0
100022da:	e7f3      	b.n	100022c4 <xQueueGenericCreateStatic+0x26>

100022dc <xQueueReceive>:
{
100022dc:	b5f0      	push	{r4, r5, r6, r7, lr}
100022de:	b085      	sub	sp, #20
100022e0:	4604      	mov	r4, r0
100022e2:	460f      	mov	r7, r1
100022e4:	9201      	str	r2, [sp, #4]
    BaseType_t xEntryTimeSet = pdFALSE;
100022e6:	2600      	movs	r6, #0
100022e8:	e036      	b.n	10002358 <xQueueReceive+0x7c>
                prvCopyDataFromQueue( pxQueue, pvBuffer );
100022ea:	4639      	mov	r1, r7
100022ec:	4620      	mov	r0, r4
100022ee:	f7ff ff04 	bl	100020fa <prvCopyDataFromQueue>
                pxQueue->uxMessagesWaiting = ( UBaseType_t ) ( uxMessagesWaiting - ( UBaseType_t ) 1 );
100022f2:	3d01      	subs	r5, #1
100022f4:	64a5      	str	r5, [r4, #72]	; 0x48
                if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
100022f6:	6923      	ldr	r3, [r4, #16]
100022f8:	b923      	cbnz	r3, 10002304 <xQueueReceive+0x28>
                taskEXIT_CRITICAL();
100022fa:	f001 f9c9 	bl	10003690 <vPortExitCritical>
                return pdPASS;
100022fe:	2001      	movs	r0, #1
}
10002300:	b005      	add	sp, #20
10002302:	bdf0      	pop	{r4, r5, r6, r7, pc}
                    if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
10002304:	f104 0010 	add.w	r0, r4, #16
10002308:	f000 fcbc 	bl	10002c84 <xTaskRemoveFromEventList>
1000230c:	2800      	cmp	r0, #0
1000230e:	d0f4      	beq.n	100022fa <xQueueReceive+0x1e>
                        queueYIELD_IF_USING_PREEMPTION();
10002310:	f001 f9a4 	bl	1000365c <vPortYield>
10002314:	e7f1      	b.n	100022fa <xQueueReceive+0x1e>
                    taskEXIT_CRITICAL();
10002316:	f001 f9bb 	bl	10003690 <vPortExitCritical>
                    return errQUEUE_EMPTY;
1000231a:	2000      	movs	r0, #0
1000231c:	e7f0      	b.n	10002300 <xQueueReceive+0x24>
                    vTaskInternalSetTimeOutState( &xTimeOut );
1000231e:	a802      	add	r0, sp, #8
10002320:	f000 fd22 	bl	10002d68 <vTaskInternalSetTimeOutState>
                    xEntryTimeSet = pdTRUE;
10002324:	2601      	movs	r6, #1
10002326:	e021      	b.n	1000236c <xQueueReceive+0x90>
        prvLockQueue( pxQueue );
10002328:	2300      	movs	r3, #0
1000232a:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
1000232e:	e029      	b.n	10002384 <xQueueReceive+0xa8>
10002330:	2300      	movs	r3, #0
10002332:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
10002336:	e02b      	b.n	10002390 <xQueueReceive+0xb4>
                prvUnlockQueue( pxQueue );
10002338:	4620      	mov	r0, r4
1000233a:	f7ff ff1c 	bl	10002176 <prvUnlockQueue>
                ( void ) xTaskResumeAll();
1000233e:	f000 fb6f 	bl	10002a20 <xTaskResumeAll>
10002342:	e009      	b.n	10002358 <xQueueReceive+0x7c>
            prvUnlockQueue( pxQueue );
10002344:	4620      	mov	r0, r4
10002346:	f7ff ff16 	bl	10002176 <prvUnlockQueue>
            ( void ) xTaskResumeAll();
1000234a:	f000 fb69 	bl	10002a20 <xTaskResumeAll>
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1000234e:	4620      	mov	r0, r4
10002350:	f7ff fe8b 	bl	1000206a <prvIsQueueEmpty>
10002354:	2800      	cmp	r0, #0
10002356:	d137      	bne.n	100023c8 <xQueueReceive+0xec>
        taskENTER_CRITICAL();
10002358:	f001 f98c 	bl	10003674 <vPortEnterCritical>
            const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
1000235c:	6ca5      	ldr	r5, [r4, #72]	; 0x48
            if( uxMessagesWaiting > ( UBaseType_t ) 0 )
1000235e:	2d00      	cmp	r5, #0
10002360:	d1c3      	bne.n	100022ea <xQueueReceive+0xe>
                if( xTicksToWait == ( TickType_t ) 0 )
10002362:	9b01      	ldr	r3, [sp, #4]
10002364:	2b00      	cmp	r3, #0
10002366:	d0d6      	beq.n	10002316 <xQueueReceive+0x3a>
                else if( xEntryTimeSet == pdFALSE )
10002368:	2e00      	cmp	r6, #0
1000236a:	d0d8      	beq.n	1000231e <xQueueReceive+0x42>
        taskEXIT_CRITICAL();
1000236c:	f001 f990 	bl	10003690 <vPortExitCritical>
        vTaskSuspendAll();
10002370:	f000 fa74 	bl	1000285c <vTaskSuspendAll>
        prvLockQueue( pxQueue );
10002374:	f001 f97e 	bl	10003674 <vPortEnterCritical>
10002378:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
1000237c:	b25b      	sxtb	r3, r3
1000237e:	f1b3 3fff 	cmp.w	r3, #4294967295
10002382:	d0d1      	beq.n	10002328 <xQueueReceive+0x4c>
10002384:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
10002388:	b25b      	sxtb	r3, r3
1000238a:	f1b3 3fff 	cmp.w	r3, #4294967295
1000238e:	d0cf      	beq.n	10002330 <xQueueReceive+0x54>
10002390:	f001 f97e 	bl	10003690 <vPortExitCritical>
        if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
10002394:	a901      	add	r1, sp, #4
10002396:	a802      	add	r0, sp, #8
10002398:	f000 fcf2 	bl	10002d80 <xTaskCheckForTimeOut>
1000239c:	2800      	cmp	r0, #0
1000239e:	d1d1      	bne.n	10002344 <xQueueReceive+0x68>
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
100023a0:	4620      	mov	r0, r4
100023a2:	f7ff fe62 	bl	1000206a <prvIsQueueEmpty>
100023a6:	2800      	cmp	r0, #0
100023a8:	d0c6      	beq.n	10002338 <xQueueReceive+0x5c>
                vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
100023aa:	9901      	ldr	r1, [sp, #4]
100023ac:	f104 002c 	add.w	r0, r4, #44	; 0x2c
100023b0:	f000 fc3c 	bl	10002c2c <vTaskPlaceOnEventList>
                prvUnlockQueue( pxQueue );
100023b4:	4620      	mov	r0, r4
100023b6:	f7ff fede 	bl	10002176 <prvUnlockQueue>
                if( xTaskResumeAll() == pdFALSE )
100023ba:	f000 fb31 	bl	10002a20 <xTaskResumeAll>
100023be:	2800      	cmp	r0, #0
100023c0:	d1ca      	bne.n	10002358 <xQueueReceive+0x7c>
                    taskYIELD_WITHIN_API();
100023c2:	f001 f94b 	bl	1000365c <vPortYield>
100023c6:	e7c7      	b.n	10002358 <xQueueReceive+0x7c>
                return errQUEUE_EMPTY;
100023c8:	2000      	movs	r0, #0
100023ca:	e799      	b.n	10002300 <xQueueReceive+0x24>

100023cc <vQueueWaitForMessageRestricted>:
    {
100023cc:	b570      	push	{r4, r5, r6, lr}
100023ce:	4604      	mov	r4, r0
100023d0:	460d      	mov	r5, r1
100023d2:	4616      	mov	r6, r2
        prvLockQueue( pxQueue );
100023d4:	f001 f94e 	bl	10003674 <vPortEnterCritical>
100023d8:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
100023dc:	b25b      	sxtb	r3, r3
100023de:	f1b3 3fff 	cmp.w	r3, #4294967295
100023e2:	d00d      	beq.n	10002400 <vQueueWaitForMessageRestricted+0x34>
100023e4:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
100023e8:	b25b      	sxtb	r3, r3
100023ea:	f1b3 3fff 	cmp.w	r3, #4294967295
100023ee:	d00b      	beq.n	10002408 <vQueueWaitForMessageRestricted+0x3c>
100023f0:	f001 f94e 	bl	10003690 <vPortExitCritical>
        if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
100023f4:	6ca3      	ldr	r3, [r4, #72]	; 0x48
100023f6:	b15b      	cbz	r3, 10002410 <vQueueWaitForMessageRestricted+0x44>
        prvUnlockQueue( pxQueue );
100023f8:	4620      	mov	r0, r4
100023fa:	f7ff febc 	bl	10002176 <prvUnlockQueue>
    }
100023fe:	bd70      	pop	{r4, r5, r6, pc}
        prvLockQueue( pxQueue );
10002400:	2300      	movs	r3, #0
10002402:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
10002406:	e7ed      	b.n	100023e4 <vQueueWaitForMessageRestricted+0x18>
10002408:	2300      	movs	r3, #0
1000240a:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
1000240e:	e7ef      	b.n	100023f0 <vQueueWaitForMessageRestricted+0x24>
            vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
10002410:	4632      	mov	r2, r6
10002412:	4629      	mov	r1, r5
10002414:	f104 002c 	add.w	r0, r4, #44	; 0x2c
10002418:	f000 fc16 	bl	10002c48 <vTaskPlaceOnEventListRestricted>
1000241c:	e7ec      	b.n	100023f8 <vQueueWaitForMessageRestricted+0x2c>
	...

10002420 <prvGetExpectedIdleTime>:
         * configUSE_PREEMPTION is 0, so there may be tasks above the idle priority
         * task that are in the Ready state, even though the idle task is
         * running. */
        #if ( configUSE_PORT_OPTIMISED_TASK_SELECTION == 0 )
        {
            if( uxTopReadyPriority > tskIDLE_PRIORITY )
10002420:	4b0a      	ldr	r3, [pc, #40]	; (1000244c <prvGetExpectedIdleTime+0x2c>)
10002422:	681b      	ldr	r3, [r3, #0]
10002424:	b103      	cbz	r3, 10002428 <prvGetExpectedIdleTime+0x8>
            {
                uxHigherPriorityReadyTasks = pdTRUE;
10002426:	2301      	movs	r3, #1
                uxHigherPriorityReadyTasks = pdTRUE;
            }
        }
        #endif /* if ( configUSE_PORT_OPTIMISED_TASK_SELECTION == 0 ) */

        if( pxCurrentTCB->uxPriority > tskIDLE_PRIORITY )
10002428:	4a09      	ldr	r2, [pc, #36]	; (10002450 <prvGetExpectedIdleTime+0x30>)
1000242a:	6812      	ldr	r2, [r2, #0]
1000242c:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
1000242e:	b950      	cbnz	r0, 10002446 <prvGetExpectedIdleTime+0x26>
        {
            xReturn = 0;
        }
        else if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > 1U )
10002430:	4a08      	ldr	r2, [pc, #32]	; (10002454 <prvGetExpectedIdleTime+0x34>)
10002432:	6812      	ldr	r2, [r2, #0]
10002434:	2a01      	cmp	r2, #1
10002436:	d807      	bhi.n	10002448 <prvGetExpectedIdleTime+0x28>
            /* There are other idle priority tasks in the ready state.  If
             * time slicing is used then the very next tick interrupt must be
             * processed. */
            xReturn = 0;
        }
        else if( uxHigherPriorityReadyTasks != pdFALSE )
10002438:	b933      	cbnz	r3, 10002448 <prvGetExpectedIdleTime+0x28>
             * configUSE_PREEMPTION is 0. */
            xReturn = 0;
        }
        else
        {
            xReturn = xNextTaskUnblockTime;
1000243a:	4b07      	ldr	r3, [pc, #28]	; (10002458 <prvGetExpectedIdleTime+0x38>)
1000243c:	6818      	ldr	r0, [r3, #0]
            xReturn -= xTickCount;
1000243e:	4b07      	ldr	r3, [pc, #28]	; (1000245c <prvGetExpectedIdleTime+0x3c>)
10002440:	681b      	ldr	r3, [r3, #0]
10002442:	1ac0      	subs	r0, r0, r3
10002444:	4770      	bx	lr
            xReturn = 0;
10002446:	2000      	movs	r0, #0
        }

        return xReturn;
    }
10002448:	4770      	bx	lr
1000244a:	bf00      	nop
1000244c:	38008a60 	stmdacc	r0, {r5, r6, r9, fp, pc}
10002450:	380085b8 	stmdacc	r0, {r3, r4, r5, r7, r8, sl, pc}
10002454:	380085c4 	stmdacc	r0, {r2, r6, r7, r8, sl, pc}
10002458:	38008aec 	stmdacc	r0, {r2, r3, r5, r6, r7, r9, fp, pc}
1000245c:	38008b50 	stmdacc	r0, {r4, r6, r8, r9, fp, pc}

10002460 <prvResetNextTaskUnblockTime>:
#endif /* INCLUDE_vTaskDelete */
/*-----------------------------------------------------------*/

static void prvResetNextTaskUnblockTime( void )
{
    if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
10002460:	4b07      	ldr	r3, [pc, #28]	; (10002480 <prvResetNextTaskUnblockTime+0x20>)
10002462:	681b      	ldr	r3, [r3, #0]
10002464:	681b      	ldr	r3, [r3, #0]
10002466:	b923      	cbnz	r3, 10002472 <prvResetNextTaskUnblockTime+0x12>
    {
        /* The new current delayed list is empty.  Set xNextTaskUnblockTime to
         * the maximum possible value so it is  extremely unlikely that the
         * if( xTickCount >= xNextTaskUnblockTime ) test will pass until
         * there is an item in the delayed list. */
        xNextTaskUnblockTime = portMAX_DELAY;
10002468:	4b06      	ldr	r3, [pc, #24]	; (10002484 <prvResetNextTaskUnblockTime+0x24>)
1000246a:	f04f 32ff 	mov.w	r2, #4294967295
1000246e:	601a      	str	r2, [r3, #0]
10002470:	4770      	bx	lr
    {
        /* The new current delayed list is not empty, get the value of
         * the item at the head of the delayed list.  This is the time at
         * which the task at the head of the delayed list should be removed
         * from the Blocked state. */
        xNextTaskUnblockTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxDelayedTaskList );
10002472:	4b03      	ldr	r3, [pc, #12]	; (10002480 <prvResetNextTaskUnblockTime+0x20>)
10002474:	681b      	ldr	r3, [r3, #0]
10002476:	68db      	ldr	r3, [r3, #12]
10002478:	681a      	ldr	r2, [r3, #0]
1000247a:	4b02      	ldr	r3, [pc, #8]	; (10002484 <prvResetNextTaskUnblockTime+0x24>)
1000247c:	601a      	str	r2, [r3, #0]
    }
}
1000247e:	4770      	bx	lr
10002480:	380085bc 	stmdacc	r0, {r2, r3, r4, r5, r7, r8, sl, pc}
10002484:	38008aec 	stmdacc	r0, {r2, r3, r5, r6, r7, r9, fp, pc}

10002488 <prvInitialiseNewTask>:
{
10002488:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
1000248c:	4680      	mov	r8, r0
1000248e:	460d      	mov	r5, r1
10002490:	4617      	mov	r7, r2
10002492:	4699      	mov	r9, r3
10002494:	9e08      	ldr	r6, [sp, #32]
10002496:	f8dd a024 	ldr.w	sl, [sp, #36]	; 0x24
1000249a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
        ( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) uxStackDepth * sizeof( StackType_t ) );
1000249c:	0092      	lsls	r2, r2, #2
1000249e:	21a5      	movs	r1, #165	; 0xa5
100024a0:	6b20      	ldr	r0, [r4, #48]	; 0x30
100024a2:	f001 fad7 	bl	10003a54 <memset>
        pxTopOfStack = &( pxNewTCB->pxStack[ uxStackDepth - ( configSTACK_DEPTH_TYPE ) 1 ] );
100024a6:	6b23      	ldr	r3, [r4, #48]	; 0x30
100024a8:	f107 4280 	add.w	r2, r7, #1073741824	; 0x40000000
100024ac:	3a01      	subs	r2, #1
100024ae:	eb03 0782 	add.w	r7, r3, r2, lsl #2
        pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) );
100024b2:	f027 0707 	bic.w	r7, r7, #7
    if( pcName != NULL )
100024b6:	b19d      	cbz	r5, 100024e0 <prvInitialiseNewTask+0x58>
        for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
100024b8:	f04f 0c00 	mov.w	ip, #0
100024bc:	f1bc 0f03 	cmp.w	ip, #3
100024c0:	d80b      	bhi.n	100024da <prvInitialiseNewTask+0x52>
            pxNewTCB->pcTaskName[ x ] = pcName[ x ];
100024c2:	f815 200c 	ldrb.w	r2, [r5, ip]
100024c6:	eb04 030c 	add.w	r3, r4, ip
100024ca:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
            if( pcName[ x ] == ( char ) 0x00 )
100024ce:	f815 300c 	ldrb.w	r3, [r5, ip]
100024d2:	b113      	cbz	r3, 100024da <prvInitialiseNewTask+0x52>
        for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
100024d4:	f10c 0c01 	add.w	ip, ip, #1
100024d8:	e7f0      	b.n	100024bc <prvInitialiseNewTask+0x34>
        pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1U ] = '\0';
100024da:	2300      	movs	r3, #0
100024dc:	f884 3037 	strb.w	r3, [r4, #55]	; 0x37
    if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
100024e0:	2e04      	cmp	r6, #4
100024e2:	d900      	bls.n	100024e6 <prvInitialiseNewTask+0x5e>
        uxPriority = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) 1U;
100024e4:	2604      	movs	r6, #4
    pxNewTCB->uxPriority = uxPriority;
100024e6:	62e6      	str	r6, [r4, #44]	; 0x2c
        pxNewTCB->uxBasePriority = uxPriority;
100024e8:	63a6      	str	r6, [r4, #56]	; 0x38
    vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
100024ea:	1d20      	adds	r0, r4, #4
100024ec:	f7ff fd8f 	bl	1000200e <vListInitialiseItem>
    vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
100024f0:	f104 0018 	add.w	r0, r4, #24
100024f4:	f7ff fd8b 	bl	1000200e <vListInitialiseItem>
    listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
100024f8:	6124      	str	r4, [r4, #16]
    listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority );
100024fa:	f1c6 0605 	rsb	r6, r6, #5
100024fe:	61a6      	str	r6, [r4, #24]
    listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
10002500:	6264      	str	r4, [r4, #36]	; 0x24
                pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxNewTCB->pxStack, pxTaskCode, pvParameters );
10002502:	464b      	mov	r3, r9
10002504:	4642      	mov	r2, r8
10002506:	6b21      	ldr	r1, [r4, #48]	; 0x30
10002508:	4638      	mov	r0, r7
1000250a:	f001 f8eb 	bl	100036e4 <pxPortInitialiseStack>
1000250e:	6020      	str	r0, [r4, #0]
    if( pxCreatedTask != NULL )
10002510:	f1ba 0f00 	cmp.w	sl, #0
10002514:	d001      	beq.n	1000251a <prvInitialiseNewTask+0x92>
        *pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
10002516:	f8ca 4000 	str.w	r4, [sl]
}
1000251a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

1000251e <prvCreateStaticTask>:
    {
1000251e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
10002522:	b085      	sub	sp, #20
10002524:	9e0d      	ldr	r6, [sp, #52]	; 0x34
10002526:	9c0e      	ldr	r4, [sp, #56]	; 0x38
        if( ( pxTaskBuffer != NULL ) && ( puxStackBuffer != NULL ) )
10002528:	b1f4      	cbz	r4, 10002568 <prvCreateStaticTask+0x4a>
1000252a:	4605      	mov	r5, r0
1000252c:	4689      	mov	r9, r1
1000252e:	4690      	mov	r8, r2
10002530:	461f      	mov	r7, r3
10002532:	b1de      	cbz	r6, 1000256c <prvCreateStaticTask+0x4e>
            ( void ) memset( ( void * ) pxNewTCB, 0x00, sizeof( TCB_t ) );
10002534:	224c      	movs	r2, #76	; 0x4c
10002536:	2100      	movs	r1, #0
10002538:	4620      	mov	r0, r4
1000253a:	f001 fa8b 	bl	10003a54 <memset>
            pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
1000253e:	6326      	str	r6, [r4, #48]	; 0x30
                pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
10002540:	2302      	movs	r3, #2
10002542:	f884 3049 	strb.w	r3, [r4, #73]	; 0x49
            prvInitialiseNewTask( pxTaskCode, pcName, uxStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
10002546:	2300      	movs	r3, #0
10002548:	9303      	str	r3, [sp, #12]
1000254a:	9402      	str	r4, [sp, #8]
1000254c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
1000254e:	9301      	str	r3, [sp, #4]
10002550:	9b0c      	ldr	r3, [sp, #48]	; 0x30
10002552:	9300      	str	r3, [sp, #0]
10002554:	463b      	mov	r3, r7
10002556:	4642      	mov	r2, r8
10002558:	4649      	mov	r1, r9
1000255a:	4628      	mov	r0, r5
1000255c:	f7ff ff94 	bl	10002488 <prvInitialiseNewTask>
            pxNewTCB = ( TCB_t * ) pxTaskBuffer;
10002560:	4620      	mov	r0, r4
    }
10002562:	b005      	add	sp, #20
10002564:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
            pxNewTCB = NULL;
10002568:	4620      	mov	r0, r4
1000256a:	e7fa      	b.n	10002562 <prvCreateStaticTask+0x44>
1000256c:	4630      	mov	r0, r6
        return pxNewTCB;
1000256e:	e7f8      	b.n	10002562 <prvCreateStaticTask+0x44>

10002570 <prvInitialiseTaskLists>:
{
10002570:	b538      	push	{r3, r4, r5, lr}
    for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
10002572:	2400      	movs	r4, #0
10002574:	e007      	b.n	10002586 <prvInitialiseTaskLists+0x16>
        vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
10002576:	ebc4 02c4 	rsb	r2, r4, r4, lsl #3
1000257a:	0093      	lsls	r3, r2, #2
1000257c:	480e      	ldr	r0, [pc, #56]	; (100025b8 <prvInitialiseTaskLists+0x48>)
1000257e:	4418      	add	r0, r3
10002580:	f7ff fd38 	bl	10001ff4 <vListInitialise>
    for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
10002584:	3401      	adds	r4, #1
10002586:	2c04      	cmp	r4, #4
10002588:	d9f5      	bls.n	10002576 <prvInitialiseTaskLists+0x6>
    vListInitialise( &xDelayedTaskList1 );
1000258a:	4d0c      	ldr	r5, [pc, #48]	; (100025bc <prvInitialiseTaskLists+0x4c>)
1000258c:	4628      	mov	r0, r5
1000258e:	f7ff fd31 	bl	10001ff4 <vListInitialise>
    vListInitialise( &xDelayedTaskList2 );
10002592:	4c0b      	ldr	r4, [pc, #44]	; (100025c0 <prvInitialiseTaskLists+0x50>)
10002594:	4620      	mov	r0, r4
10002596:	f7ff fd2d 	bl	10001ff4 <vListInitialise>
    vListInitialise( &xPendingReadyList );
1000259a:	480a      	ldr	r0, [pc, #40]	; (100025c4 <prvInitialiseTaskLists+0x54>)
1000259c:	f7ff fd2a 	bl	10001ff4 <vListInitialise>
        vListInitialise( &xTasksWaitingTermination );
100025a0:	4809      	ldr	r0, [pc, #36]	; (100025c8 <prvInitialiseTaskLists+0x58>)
100025a2:	f7ff fd27 	bl	10001ff4 <vListInitialise>
        vListInitialise( &xSuspendedTaskList );
100025a6:	4809      	ldr	r0, [pc, #36]	; (100025cc <prvInitialiseTaskLists+0x5c>)
100025a8:	f7ff fd24 	bl	10001ff4 <vListInitialise>
    pxDelayedTaskList = &xDelayedTaskList1;
100025ac:	4b08      	ldr	r3, [pc, #32]	; (100025d0 <prvInitialiseTaskLists+0x60>)
100025ae:	601d      	str	r5, [r3, #0]
    pxOverflowDelayedTaskList = &xDelayedTaskList2;
100025b0:	4b08      	ldr	r3, [pc, #32]	; (100025d4 <prvInitialiseTaskLists+0x64>)
100025b2:	601c      	str	r4, [r3, #0]
}
100025b4:	bd38      	pop	{r3, r4, r5, pc}
100025b6:	bf00      	nop
100025b8:	380085c4 	stmdacc	r0, {r2, r6, r7, r8, sl, pc}
100025bc:	38008a64 	stmdacc	r0, {r2, r5, r6, r9, fp, pc}
100025c0:	38008a80 	stmdacc	r0, {r7, r9, fp, pc}
100025c4:	38008af8 	stmdacc	r0, {r3, r4, r5, r6, r7, r9, fp, pc}
100025c8:	38008b34 	stmdacc	r0, {r2, r4, r5, r8, r9, fp, pc}
100025cc:	38008b18 	stmdacc	r0, {r3, r4, r8, r9, fp, pc}
100025d0:	380085bc 	stmdacc	r0, {r2, r3, r4, r5, r7, r8, sl, pc}
100025d4:	380085c0 	stmdacc	r0, {r6, r7, r8, sl, pc}

100025d8 <prvAddNewTaskToReadyList>:
    {
100025d8:	b510      	push	{r4, lr}
100025da:	4604      	mov	r4, r0
        taskENTER_CRITICAL();
100025dc:	f001 f84a 	bl	10003674 <vPortEnterCritical>
            uxCurrentNumberOfTasks = ( UBaseType_t ) ( uxCurrentNumberOfTasks + 1U );
100025e0:	4a26      	ldr	r2, [pc, #152]	; (1000267c <prvAddNewTaskToReadyList+0xa4>)
100025e2:	6813      	ldr	r3, [r2, #0]
100025e4:	3301      	adds	r3, #1
100025e6:	6013      	str	r3, [r2, #0]
            if( pxCurrentTCB == NULL )
100025e8:	4b25      	ldr	r3, [pc, #148]	; (10002680 <prvAddNewTaskToReadyList+0xa8>)
100025ea:	681b      	ldr	r3, [r3, #0]
100025ec:	b15b      	cbz	r3, 10002606 <prvAddNewTaskToReadyList+0x2e>
                if( xSchedulerRunning == pdFALSE )
100025ee:	4b25      	ldr	r3, [pc, #148]	; (10002684 <prvAddNewTaskToReadyList+0xac>)
100025f0:	681b      	ldr	r3, [r3, #0]
100025f2:	b96b      	cbnz	r3, 10002610 <prvAddNewTaskToReadyList+0x38>
                    if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
100025f4:	4b22      	ldr	r3, [pc, #136]	; (10002680 <prvAddNewTaskToReadyList+0xa8>)
100025f6:	681b      	ldr	r3, [r3, #0]
100025f8:	6ada      	ldr	r2, [r3, #44]	; 0x2c
100025fa:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
100025fc:	429a      	cmp	r2, r3
100025fe:	d807      	bhi.n	10002610 <prvAddNewTaskToReadyList+0x38>
                        pxCurrentTCB = pxNewTCB;
10002600:	4b1f      	ldr	r3, [pc, #124]	; (10002680 <prvAddNewTaskToReadyList+0xa8>)
10002602:	601c      	str	r4, [r3, #0]
10002604:	e004      	b.n	10002610 <prvAddNewTaskToReadyList+0x38>
                pxCurrentTCB = pxNewTCB;
10002606:	4b1e      	ldr	r3, [pc, #120]	; (10002680 <prvAddNewTaskToReadyList+0xa8>)
10002608:	601c      	str	r4, [r3, #0]
                if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
1000260a:	6813      	ldr	r3, [r2, #0]
1000260c:	2b01      	cmp	r3, #1
1000260e:	d02f      	beq.n	10002670 <prvAddNewTaskToReadyList+0x98>
            uxTaskNumber++;
10002610:	4a1d      	ldr	r2, [pc, #116]	; (10002688 <prvAddNewTaskToReadyList+0xb0>)
10002612:	6813      	ldr	r3, [r2, #0]
10002614:	3301      	adds	r3, #1
10002616:	6013      	str	r3, [r2, #0]
            prvAddTaskToReadyList( pxNewTCB );
10002618:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
1000261a:	4a1c      	ldr	r2, [pc, #112]	; (1000268c <prvAddNewTaskToReadyList+0xb4>)
1000261c:	6812      	ldr	r2, [r2, #0]
1000261e:	4293      	cmp	r3, r2
10002620:	d901      	bls.n	10002626 <prvAddNewTaskToReadyList+0x4e>
10002622:	4a1a      	ldr	r2, [pc, #104]	; (1000268c <prvAddNewTaskToReadyList+0xb4>)
10002624:	6013      	str	r3, [r2, #0]
10002626:	4a1a      	ldr	r2, [pc, #104]	; (10002690 <prvAddNewTaskToReadyList+0xb8>)
10002628:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
1000262c:	eb02 0383 	add.w	r3, r2, r3, lsl #2
10002630:	685b      	ldr	r3, [r3, #4]
10002632:	60a3      	str	r3, [r4, #8]
10002634:	6898      	ldr	r0, [r3, #8]
10002636:	60e0      	str	r0, [r4, #12]
10002638:	1d21      	adds	r1, r4, #4
1000263a:	6041      	str	r1, [r0, #4]
1000263c:	6099      	str	r1, [r3, #8]
1000263e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
10002640:	ebc3 01c3 	rsb	r1, r3, r3, lsl #3
10002644:	eb02 0081 	add.w	r0, r2, r1, lsl #2
10002648:	6160      	str	r0, [r4, #20]
1000264a:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
1000264e:	3101      	adds	r1, #1
10002650:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
10002654:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
        taskEXIT_CRITICAL();
10002658:	f001 f81a 	bl	10003690 <vPortExitCritical>
        if( xSchedulerRunning != pdFALSE )
1000265c:	4b09      	ldr	r3, [pc, #36]	; (10002684 <prvAddNewTaskToReadyList+0xac>)
1000265e:	681b      	ldr	r3, [r3, #0]
10002660:	b12b      	cbz	r3, 1000266e <prvAddNewTaskToReadyList+0x96>
            taskYIELD_ANY_CORE_IF_USING_PREEMPTION( pxNewTCB );
10002662:	4b07      	ldr	r3, [pc, #28]	; (10002680 <prvAddNewTaskToReadyList+0xa8>)
10002664:	681b      	ldr	r3, [r3, #0]
10002666:	6ada      	ldr	r2, [r3, #44]	; 0x2c
10002668:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
1000266a:	429a      	cmp	r2, r3
1000266c:	d303      	bcc.n	10002676 <prvAddNewTaskToReadyList+0x9e>
    }
1000266e:	bd10      	pop	{r4, pc}
                    prvInitialiseTaskLists();
10002670:	f7ff ff7e 	bl	10002570 <prvInitialiseTaskLists>
10002674:	e7cc      	b.n	10002610 <prvAddNewTaskToReadyList+0x38>
            taskYIELD_ANY_CORE_IF_USING_PREEMPTION( pxNewTCB );
10002676:	f000 fff1 	bl	1000365c <vPortYield>
    }
1000267a:	e7f8      	b.n	1000266e <prvAddNewTaskToReadyList+0x96>
1000267c:	38008650 	stmdacc	r0, {r4, r6, r9, sl, pc}
10002680:	380085b8 	stmdacc	r0, {r3, r4, r5, r7, r8, sl, pc}
10002684:	38008b14 	stmdacc	r0, {r2, r4, r8, r9, fp, pc}
10002688:	3800885c 	stmdacc	r0, {r2, r3, r4, r6, fp, pc}
1000268c:	38008a60 	stmdacc	r0, {r5, r6, r9, fp, pc}
10002690:	380085c4 	stmdacc	r0, {r2, r6, r7, r8, sl, pc}

10002694 <prvCreateTask>:
    {
10002694:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
10002698:	b085      	sub	sp, #20
1000269a:	4606      	mov	r6, r0
1000269c:	460f      	mov	r7, r1
1000269e:	4615      	mov	r5, r2
100026a0:	4698      	mov	r8, r3
            pxStack = pvPortMallocStack( ( ( ( size_t ) uxStackDepth ) * sizeof( StackType_t ) ) );
100026a2:	0090      	lsls	r0, r2, #2
100026a4:	f000 fe94 	bl	100033d0 <pvPortMalloc>
            if( pxStack != NULL )
100026a8:	4681      	mov	r9, r0
100026aa:	b310      	cbz	r0, 100026f2 <prvCreateTask+0x5e>
                pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) );
100026ac:	204c      	movs	r0, #76	; 0x4c
100026ae:	f000 fe8f 	bl	100033d0 <pvPortMalloc>
                if( pxNewTCB != NULL )
100026b2:	4604      	mov	r4, r0
100026b4:	b1c8      	cbz	r0, 100026ea <prvCreateTask+0x56>
                    ( void ) memset( ( void * ) pxNewTCB, 0x00, sizeof( TCB_t ) );
100026b6:	224c      	movs	r2, #76	; 0x4c
100026b8:	2100      	movs	r1, #0
100026ba:	f001 f9cb 	bl	10003a54 <memset>
                    pxNewTCB->pxStack = pxStack;
100026be:	f8c4 9030 	str.w	r9, [r4, #48]	; 0x30
        if( pxNewTCB != NULL )
100026c2:	b174      	cbz	r4, 100026e2 <prvCreateTask+0x4e>
                pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
100026c4:	2300      	movs	r3, #0
100026c6:	f884 3049 	strb.w	r3, [r4, #73]	; 0x49
            prvInitialiseNewTask( pxTaskCode, pcName, uxStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
100026ca:	9303      	str	r3, [sp, #12]
100026cc:	9402      	str	r4, [sp, #8]
100026ce:	9b0d      	ldr	r3, [sp, #52]	; 0x34
100026d0:	9301      	str	r3, [sp, #4]
100026d2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
100026d4:	9300      	str	r3, [sp, #0]
100026d6:	4643      	mov	r3, r8
100026d8:	462a      	mov	r2, r5
100026da:	4639      	mov	r1, r7
100026dc:	4630      	mov	r0, r6
100026de:	f7ff fed3 	bl	10002488 <prvInitialiseNewTask>
    }
100026e2:	4620      	mov	r0, r4
100026e4:	b005      	add	sp, #20
100026e6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
                    vPortFreeStack( pxStack );
100026ea:	4648      	mov	r0, r9
100026ec:	f000 feda 	bl	100034a4 <vPortFree>
100026f0:	e7e7      	b.n	100026c2 <prvCreateTask+0x2e>
                pxNewTCB = NULL;
100026f2:	4604      	mov	r4, r0
        return pxNewTCB;
100026f4:	e7f5      	b.n	100026e2 <prvCreateTask+0x4e>

100026f6 <prvDeleteTCB>:
    {
100026f6:	b510      	push	{r4, lr}
100026f8:	4604      	mov	r4, r0
            if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
100026fa:	f890 3049 	ldrb.w	r3, [r0, #73]	; 0x49
100026fe:	b113      	cbz	r3, 10002706 <prvDeleteTCB+0x10>
            else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
10002700:	2b01      	cmp	r3, #1
10002702:	d007      	beq.n	10002714 <prvDeleteTCB+0x1e>
    }
10002704:	bd10      	pop	{r4, pc}
                vPortFreeStack( pxTCB->pxStack );
10002706:	6b00      	ldr	r0, [r0, #48]	; 0x30
10002708:	f000 fecc 	bl	100034a4 <vPortFree>
                vPortFree( pxTCB );
1000270c:	4620      	mov	r0, r4
1000270e:	f000 fec9 	bl	100034a4 <vPortFree>
10002712:	e7f7      	b.n	10002704 <prvDeleteTCB+0xe>
                vPortFree( pxTCB );
10002714:	f000 fec6 	bl	100034a4 <vPortFree>
    }
10002718:	e7f4      	b.n	10002704 <prvDeleteTCB+0xe>
	...

1000271c <prvCheckTasksWaitingTermination>:
        while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
1000271c:	4b0f      	ldr	r3, [pc, #60]	; (1000275c <prvCheckTasksWaitingTermination+0x40>)
1000271e:	681b      	ldr	r3, [r3, #0]
10002720:	b1d3      	cbz	r3, 10002758 <prvCheckTasksWaitingTermination+0x3c>
{
10002722:	b510      	push	{r4, lr}
                taskENTER_CRITICAL();
10002724:	f000 ffa6 	bl	10003674 <vPortEnterCritical>
                        pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) );
10002728:	4b0d      	ldr	r3, [pc, #52]	; (10002760 <prvCheckTasksWaitingTermination+0x44>)
1000272a:	68db      	ldr	r3, [r3, #12]
1000272c:	68dc      	ldr	r4, [r3, #12]
                        ( void ) uxListRemove( &( pxTCB->xStateListItem ) );
1000272e:	1d20      	adds	r0, r4, #4
10002730:	f7ff fc89 	bl	10002046 <uxListRemove>
                        --uxCurrentNumberOfTasks;
10002734:	4a0b      	ldr	r2, [pc, #44]	; (10002764 <prvCheckTasksWaitingTermination+0x48>)
10002736:	6813      	ldr	r3, [r2, #0]
10002738:	3b01      	subs	r3, #1
1000273a:	6013      	str	r3, [r2, #0]
                        --uxDeletedTasksWaitingCleanUp;
1000273c:	4a07      	ldr	r2, [pc, #28]	; (1000275c <prvCheckTasksWaitingTermination+0x40>)
1000273e:	6813      	ldr	r3, [r2, #0]
10002740:	3b01      	subs	r3, #1
10002742:	6013      	str	r3, [r2, #0]
                taskEXIT_CRITICAL();
10002744:	f000 ffa4 	bl	10003690 <vPortExitCritical>
                prvDeleteTCB( pxTCB );
10002748:	4620      	mov	r0, r4
1000274a:	f7ff ffd4 	bl	100026f6 <prvDeleteTCB>
        while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
1000274e:	4b03      	ldr	r3, [pc, #12]	; (1000275c <prvCheckTasksWaitingTermination+0x40>)
10002750:	681b      	ldr	r3, [r3, #0]
10002752:	2b00      	cmp	r3, #0
10002754:	d1e6      	bne.n	10002724 <prvCheckTasksWaitingTermination+0x8>
}
10002756:	bd10      	pop	{r4, pc}
10002758:	4770      	bx	lr
1000275a:	bf00      	nop
1000275c:	38008654 	stmdacc	r0, {r2, r4, r6, r9, sl, pc}
10002760:	38008b34 	stmdacc	r0, {r2, r4, r5, r8, r9, fp, pc}
10002764:	38008650 	stmdacc	r0, {r4, r6, r9, sl, pc}

10002768 <prvAddCurrentTaskToDelayedList>:
#endif /* if ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( INCLUDE_xTaskGetIdleTaskHandle == 1 ) ) */
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait,
                                            const BaseType_t xCanBlockIndefinitely )
{
10002768:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
1000276c:	4604      	mov	r4, r0
1000276e:	460d      	mov	r5, r1
    TickType_t xTimeToWake;
    const TickType_t xConstTickCount = xTickCount;
10002770:	4b21      	ldr	r3, [pc, #132]	; (100027f8 <prvAddCurrentTaskToDelayedList+0x90>)
10002772:	681e      	ldr	r6, [r3, #0]
    List_t * const pxDelayedList = pxDelayedTaskList;
10002774:	4b21      	ldr	r3, [pc, #132]	; (100027fc <prvAddCurrentTaskToDelayedList+0x94>)
10002776:	681f      	ldr	r7, [r3, #0]
    List_t * const pxOverflowDelayedList = pxOverflowDelayedTaskList;
10002778:	4b21      	ldr	r3, [pc, #132]	; (10002800 <prvAddCurrentTaskToDelayedList+0x98>)
1000277a:	f8d3 8000 	ldr.w	r8, [r3]
    #if ( INCLUDE_xTaskAbortDelay == 1 )
    {
        /* About to enter a delayed list, so ensure the ucDelayAborted flag is
         * reset to pdFALSE so it can be detected as having been set to pdTRUE
         * when the task leaves the Blocked state. */
        pxCurrentTCB->ucDelayAborted = ( uint8_t ) pdFALSE;
1000277e:	4b21      	ldr	r3, [pc, #132]	; (10002804 <prvAddCurrentTaskToDelayedList+0x9c>)
10002780:	681a      	ldr	r2, [r3, #0]
10002782:	2100      	movs	r1, #0
10002784:	f882 104a 	strb.w	r1, [r2, #74]	; 0x4a
    }
    #endif

    /* Remove the task from the ready list before adding it to the blocked list
     * as the same list item is used for both lists. */
    if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
10002788:	6818      	ldr	r0, [r3, #0]
1000278a:	3004      	adds	r0, #4
1000278c:	f7ff fc5b 	bl	10002046 <uxListRemove>
        mtCOVERAGE_TEST_MARKER();
    }

    #if ( INCLUDE_vTaskSuspend == 1 )
    {
        if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
10002790:	f1b4 3fff 	cmp.w	r4, #4294967295
10002794:	d00d      	beq.n	100027b2 <prvAddCurrentTaskToDelayedList+0x4a>
        else
        {
            /* Calculate the time at which the task should be woken if the event
             * does not occur.  This may overflow but this doesn't matter, the
             * kernel will manage it correctly. */
            xTimeToWake = xConstTickCount + xTicksToWait;
10002796:	4434      	add	r4, r6

            /* The list item will be inserted in wake time order. */
            listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
10002798:	4b1a      	ldr	r3, [pc, #104]	; (10002804 <prvAddCurrentTaskToDelayedList+0x9c>)
1000279a:	681b      	ldr	r3, [r3, #0]
1000279c:	605c      	str	r4, [r3, #4]

            if( xTimeToWake < xConstTickCount )
1000279e:	42a6      	cmp	r6, r4
100027a0:	d91d      	bls.n	100027de <prvAddCurrentTaskToDelayedList+0x76>
            {
                /* Wake time has overflowed.  Place this item in the overflow
                 * list. */
                traceMOVED_TASK_TO_OVERFLOW_DELAYED_LIST();
                vListInsert( pxOverflowDelayedList, &( pxCurrentTCB->xStateListItem ) );
100027a2:	4b18      	ldr	r3, [pc, #96]	; (10002804 <prvAddCurrentTaskToDelayedList+0x9c>)
100027a4:	6819      	ldr	r1, [r3, #0]
100027a6:	3104      	adds	r1, #4
100027a8:	4640      	mov	r0, r8
100027aa:	f7ff fc33 	bl	10002014 <vListInsert>

        /* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
        ( void ) xCanBlockIndefinitely;
    }
    #endif /* INCLUDE_vTaskSuspend */
}
100027ae:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
100027b2:	2d00      	cmp	r5, #0
100027b4:	d0ef      	beq.n	10002796 <prvAddCurrentTaskToDelayedList+0x2e>
            listINSERT_END( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
100027b6:	4a14      	ldr	r2, [pc, #80]	; (10002808 <prvAddCurrentTaskToDelayedList+0xa0>)
100027b8:	6851      	ldr	r1, [r2, #4]
100027ba:	4b12      	ldr	r3, [pc, #72]	; (10002804 <prvAddCurrentTaskToDelayedList+0x9c>)
100027bc:	6818      	ldr	r0, [r3, #0]
100027be:	6081      	str	r1, [r0, #8]
100027c0:	6818      	ldr	r0, [r3, #0]
100027c2:	688c      	ldr	r4, [r1, #8]
100027c4:	60c4      	str	r4, [r0, #12]
100027c6:	6818      	ldr	r0, [r3, #0]
100027c8:	3004      	adds	r0, #4
100027ca:	6060      	str	r0, [r4, #4]
100027cc:	6818      	ldr	r0, [r3, #0]
100027ce:	3004      	adds	r0, #4
100027d0:	6088      	str	r0, [r1, #8]
100027d2:	681b      	ldr	r3, [r3, #0]
100027d4:	615a      	str	r2, [r3, #20]
100027d6:	6813      	ldr	r3, [r2, #0]
100027d8:	3301      	adds	r3, #1
100027da:	6013      	str	r3, [r2, #0]
100027dc:	e7e7      	b.n	100027ae <prvAddCurrentTaskToDelayedList+0x46>
                vListInsert( pxDelayedList, &( pxCurrentTCB->xStateListItem ) );
100027de:	4b09      	ldr	r3, [pc, #36]	; (10002804 <prvAddCurrentTaskToDelayedList+0x9c>)
100027e0:	6819      	ldr	r1, [r3, #0]
100027e2:	3104      	adds	r1, #4
100027e4:	4638      	mov	r0, r7
100027e6:	f7ff fc15 	bl	10002014 <vListInsert>
                if( xTimeToWake < xNextTaskUnblockTime )
100027ea:	4b08      	ldr	r3, [pc, #32]	; (1000280c <prvAddCurrentTaskToDelayedList+0xa4>)
100027ec:	681b      	ldr	r3, [r3, #0]
100027ee:	42a3      	cmp	r3, r4
100027f0:	d9dd      	bls.n	100027ae <prvAddCurrentTaskToDelayedList+0x46>
                    xNextTaskUnblockTime = xTimeToWake;
100027f2:	4b06      	ldr	r3, [pc, #24]	; (1000280c <prvAddCurrentTaskToDelayedList+0xa4>)
100027f4:	601c      	str	r4, [r3, #0]
}
100027f6:	e7da      	b.n	100027ae <prvAddCurrentTaskToDelayedList+0x46>
100027f8:	38008b50 	stmdacc	r0, {r4, r6, r8, r9, fp, pc}
100027fc:	380085bc 	stmdacc	r0, {r2, r3, r4, r5, r7, r8, sl, pc}
10002800:	380085c0 	stmdacc	r0, {r6, r7, r8, sl, pc}
10002804:	380085b8 	stmdacc	r0, {r3, r4, r5, r7, r8, sl, pc}
10002808:	38008b18 	stmdacc	r0, {r3, r4, r8, r9, fp, pc}
1000280c:	38008aec 	stmdacc	r0, {r2, r3, r5, r6, r7, r9, fp, pc}

10002810 <xTaskCreateStatic>:
    {
10002810:	b510      	push	{r4, lr}
10002812:	b086      	sub	sp, #24
        TaskHandle_t xReturn = NULL;
10002814:	2400      	movs	r4, #0
10002816:	9405      	str	r4, [sp, #20]
        pxNewTCB = prvCreateStaticTask( pxTaskCode, pcName, uxStackDepth, pvParameters, uxPriority, puxStackBuffer, pxTaskBuffer, &xReturn );
10002818:	ac05      	add	r4, sp, #20
1000281a:	9403      	str	r4, [sp, #12]
1000281c:	9c0a      	ldr	r4, [sp, #40]	; 0x28
1000281e:	9402      	str	r4, [sp, #8]
10002820:	9c09      	ldr	r4, [sp, #36]	; 0x24
10002822:	9401      	str	r4, [sp, #4]
10002824:	9c08      	ldr	r4, [sp, #32]
10002826:	9400      	str	r4, [sp, #0]
10002828:	f7ff fe79 	bl	1000251e <prvCreateStaticTask>
        if( pxNewTCB != NULL )
1000282c:	b108      	cbz	r0, 10002832 <xTaskCreateStatic+0x22>
            prvAddNewTaskToReadyList( pxNewTCB );
1000282e:	f7ff fed3 	bl	100025d8 <prvAddNewTaskToReadyList>
    }
10002832:	9805      	ldr	r0, [sp, #20]
10002834:	b006      	add	sp, #24
10002836:	bd10      	pop	{r4, pc}

10002838 <xTaskCreate>:
    {
10002838:	b510      	push	{r4, lr}
1000283a:	b082      	sub	sp, #8
        pxNewTCB = prvCreateTask( pxTaskCode, pcName, uxStackDepth, pvParameters, uxPriority, pxCreatedTask );
1000283c:	9c05      	ldr	r4, [sp, #20]
1000283e:	9401      	str	r4, [sp, #4]
10002840:	9c04      	ldr	r4, [sp, #16]
10002842:	9400      	str	r4, [sp, #0]
10002844:	f7ff ff26 	bl	10002694 <prvCreateTask>
        if( pxNewTCB != NULL )
10002848:	b120      	cbz	r0, 10002854 <xTaskCreate+0x1c>
            prvAddNewTaskToReadyList( pxNewTCB );
1000284a:	f7ff fec5 	bl	100025d8 <prvAddNewTaskToReadyList>
            xReturn = pdPASS;
1000284e:	2001      	movs	r0, #1
    }
10002850:	b002      	add	sp, #8
10002852:	bd10      	pop	{r4, pc}
            xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
10002854:	f04f 30ff 	mov.w	r0, #4294967295
        return xReturn;
10002858:	e7fa      	b.n	10002850 <xTaskCreate+0x18>
	...

1000285c <vTaskSuspendAll>:
        uxSchedulerSuspended = ( UBaseType_t ) ( uxSchedulerSuspended + 1U );
1000285c:	4a02      	ldr	r2, [pc, #8]	; (10002868 <vTaskSuspendAll+0xc>)
1000285e:	6813      	ldr	r3, [r2, #0]
10002860:	3301      	adds	r3, #1
10002862:	6013      	str	r3, [r2, #0]
}
10002864:	4770      	bx	lr
10002866:	bf00      	nop
10002868:	38008858 	stmdacc	r0, {r3, r4, r6, fp, pc}

1000286c <xTaskGetTickCount>:
        xTicks = xTickCount;
1000286c:	4b01      	ldr	r3, [pc, #4]	; (10002874 <xTaskGetTickCount+0x8>)
1000286e:	6818      	ldr	r0, [r3, #0]
}
10002870:	4770      	bx	lr
10002872:	bf00      	nop
10002874:	38008b50 	stmdacc	r0, {r4, r6, r8, r9, fp, pc}

10002878 <uxTaskGetNumberOfTasks>:
    return uxCurrentNumberOfTasks;
10002878:	4b01      	ldr	r3, [pc, #4]	; (10002880 <uxTaskGetNumberOfTasks+0x8>)
1000287a:	6818      	ldr	r0, [r3, #0]
}
1000287c:	4770      	bx	lr
1000287e:	bf00      	nop
10002880:	38008650 	stmdacc	r0, {r4, r6, r9, sl, pc}

10002884 <vTaskStepTick>:
    {
10002884:	b510      	push	{r4, lr}
10002886:	4604      	mov	r4, r0
        xUpdatedTickCount = xTickCount + xTicksToJump;
10002888:	4b0a      	ldr	r3, [pc, #40]	; (100028b4 <vTaskStepTick+0x30>)
1000288a:	681b      	ldr	r3, [r3, #0]
1000288c:	4403      	add	r3, r0
        if( xUpdatedTickCount == xNextTaskUnblockTime )
1000288e:	4a0a      	ldr	r2, [pc, #40]	; (100028b8 <vTaskStepTick+0x34>)
10002890:	6812      	ldr	r2, [r2, #0]
10002892:	429a      	cmp	r2, r3
10002894:	d004      	beq.n	100028a0 <vTaskStepTick+0x1c>
        xTickCount += xTicksToJump;
10002896:	4b07      	ldr	r3, [pc, #28]	; (100028b4 <vTaskStepTick+0x30>)
10002898:	6818      	ldr	r0, [r3, #0]
1000289a:	4404      	add	r4, r0
1000289c:	601c      	str	r4, [r3, #0]
    }
1000289e:	bd10      	pop	{r4, pc}
            taskENTER_CRITICAL();
100028a0:	f000 fee8 	bl	10003674 <vPortEnterCritical>
                xPendedTicks++;
100028a4:	4a05      	ldr	r2, [pc, #20]	; (100028bc <vTaskStepTick+0x38>)
100028a6:	6813      	ldr	r3, [r2, #0]
100028a8:	3301      	adds	r3, #1
100028aa:	6013      	str	r3, [r2, #0]
            taskEXIT_CRITICAL();
100028ac:	f000 fef0 	bl	10003690 <vPortExitCritical>
            xTicksToJump--;
100028b0:	3c01      	subs	r4, #1
100028b2:	e7f0      	b.n	10002896 <vTaskStepTick+0x12>
100028b4:	38008b50 	stmdacc	r0, {r4, r6, r8, r9, fp, pc}
100028b8:	38008aec 	stmdacc	r0, {r2, r3, r5, r6, r7, r9, fp, pc}
100028bc:	38008af4 	stmdacc	r0, {r2, r4, r5, r6, r7, r9, fp, pc}

100028c0 <xTaskIncrementTick>:
    if( uxSchedulerSuspended == ( UBaseType_t ) 0U )
100028c0:	4b4c      	ldr	r3, [pc, #304]	; (100029f4 <xTaskIncrementTick+0x134>)
100028c2:	681b      	ldr	r3, [r3, #0]
100028c4:	2b00      	cmp	r3, #0
100028c6:	f040 808d 	bne.w	100029e4 <xTaskIncrementTick+0x124>
{
100028ca:	b570      	push	{r4, r5, r6, lr}
        const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
100028cc:	4b4a      	ldr	r3, [pc, #296]	; (100029f8 <xTaskIncrementTick+0x138>)
100028ce:	681c      	ldr	r4, [r3, #0]
100028d0:	3401      	adds	r4, #1
        xTickCount = xConstTickCount;
100028d2:	601c      	str	r4, [r3, #0]
        if( xConstTickCount == ( TickType_t ) 0U )
100028d4:	b1a4      	cbz	r4, 10002900 <xTaskIncrementTick+0x40>
        if( xConstTickCount >= xNextTaskUnblockTime )
100028d6:	4b49      	ldr	r3, [pc, #292]	; (100029fc <xTaskIncrementTick+0x13c>)
100028d8:	681b      	ldr	r3, [r3, #0]
100028da:	42a3      	cmp	r3, r4
100028dc:	d91d      	bls.n	1000291a <xTaskIncrementTick+0x5a>
    BaseType_t xSwitchRequired = pdFALSE;
100028de:	2000      	movs	r0, #0
                if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > 1U )
100028e0:	4b47      	ldr	r3, [pc, #284]	; (10002a00 <xTaskIncrementTick+0x140>)
100028e2:	681b      	ldr	r3, [r3, #0]
100028e4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
100028e6:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
100028ea:	009a      	lsls	r2, r3, #2
100028ec:	4b45      	ldr	r3, [pc, #276]	; (10002a04 <xTaskIncrementTick+0x144>)
100028ee:	589b      	ldr	r3, [r3, r2]
100028f0:	2b01      	cmp	r3, #1
100028f2:	d900      	bls.n	100028f6 <xTaskIncrementTick+0x36>
                    xSwitchRequired = pdTRUE;
100028f4:	2001      	movs	r0, #1
                if( xYieldPendings[ 0 ] != pdFALSE )
100028f6:	4b44      	ldr	r3, [pc, #272]	; (10002a08 <xTaskIncrementTick+0x148>)
100028f8:	681b      	ldr	r3, [r3, #0]
100028fa:	2b00      	cmp	r3, #0
100028fc:	d178      	bne.n	100029f0 <xTaskIncrementTick+0x130>
}
100028fe:	bd70      	pop	{r4, r5, r6, pc}
            taskSWITCH_DELAYED_LISTS();
10002900:	4a42      	ldr	r2, [pc, #264]	; (10002a0c <xTaskIncrementTick+0x14c>)
10002902:	6811      	ldr	r1, [r2, #0]
10002904:	4b42      	ldr	r3, [pc, #264]	; (10002a10 <xTaskIncrementTick+0x150>)
10002906:	6818      	ldr	r0, [r3, #0]
10002908:	6010      	str	r0, [r2, #0]
1000290a:	6019      	str	r1, [r3, #0]
1000290c:	4a41      	ldr	r2, [pc, #260]	; (10002a14 <xTaskIncrementTick+0x154>)
1000290e:	6813      	ldr	r3, [r2, #0]
10002910:	3301      	adds	r3, #1
10002912:	6013      	str	r3, [r2, #0]
10002914:	f7ff fda4 	bl	10002460 <prvResetNextTaskUnblockTime>
10002918:	e7dd      	b.n	100028d6 <xTaskIncrementTick+0x16>
    BaseType_t xSwitchRequired = pdFALSE;
1000291a:	2000      	movs	r0, #0
1000291c:	e037      	b.n	1000298e <xTaskIncrementTick+0xce>
                    xNextTaskUnblockTime = portMAX_DELAY;
1000291e:	4b37      	ldr	r3, [pc, #220]	; (100029fc <xTaskIncrementTick+0x13c>)
10002920:	f04f 32ff 	mov.w	r2, #4294967295
10002924:	601a      	str	r2, [r3, #0]
                    break;
10002926:	e7db      	b.n	100028e0 <xTaskIncrementTick+0x20>
                        xNextTaskUnblockTime = xItemValue;
10002928:	4b34      	ldr	r3, [pc, #208]	; (100029fc <xTaskIncrementTick+0x13c>)
1000292a:	601a      	str	r2, [r3, #0]
                        break;
1000292c:	e7d8      	b.n	100028e0 <xTaskIncrementTick+0x20>
                    listREMOVE_ITEM( &( pxTCB->xStateListItem ) );
1000292e:	68d9      	ldr	r1, [r3, #12]
10002930:	6051      	str	r1, [r2, #4]
10002932:	e042      	b.n	100029ba <xTaskIncrementTick+0xfa>
                        listREMOVE_ITEM( &( pxTCB->xEventListItem ) );
10002934:	2100      	movs	r1, #0
10002936:	6299      	str	r1, [r3, #40]	; 0x28
10002938:	6811      	ldr	r1, [r2, #0]
1000293a:	3901      	subs	r1, #1
1000293c:	6011      	str	r1, [r2, #0]
                    prvAddTaskToReadyList( pxTCB );
1000293e:	6ada      	ldr	r2, [r3, #44]	; 0x2c
10002940:	4935      	ldr	r1, [pc, #212]	; (10002a18 <xTaskIncrementTick+0x158>)
10002942:	6809      	ldr	r1, [r1, #0]
10002944:	428a      	cmp	r2, r1
10002946:	d901      	bls.n	1000294c <xTaskIncrementTick+0x8c>
10002948:	4933      	ldr	r1, [pc, #204]	; (10002a18 <xTaskIncrementTick+0x158>)
1000294a:	600a      	str	r2, [r1, #0]
1000294c:	492d      	ldr	r1, [pc, #180]	; (10002a04 <xTaskIncrementTick+0x144>)
1000294e:	ebc2 02c2 	rsb	r2, r2, r2, lsl #3
10002952:	ea4f 0c82 	mov.w	ip, r2, lsl #2
10002956:	448c      	add	ip, r1
10002958:	f8dc 2004 	ldr.w	r2, [ip, #4]
1000295c:	609a      	str	r2, [r3, #8]
1000295e:	6896      	ldr	r6, [r2, #8]
10002960:	60de      	str	r6, [r3, #12]
10002962:	6075      	str	r5, [r6, #4]
10002964:	6095      	str	r5, [r2, #8]
10002966:	6ada      	ldr	r2, [r3, #44]	; 0x2c
10002968:	ebc2 0cc2 	rsb	ip, r2, r2, lsl #3
1000296c:	ea4f 058c 	mov.w	r5, ip, lsl #2
10002970:	194e      	adds	r6, r1, r5
10002972:	615e      	str	r6, [r3, #20]
10002974:	594d      	ldr	r5, [r1, r5]
10002976:	3501      	adds	r5, #1
10002978:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
1000297c:	f841 500c 	str.w	r5, [r1, ip]
                            if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
10002980:	6ada      	ldr	r2, [r3, #44]	; 0x2c
10002982:	4b1f      	ldr	r3, [pc, #124]	; (10002a00 <xTaskIncrementTick+0x140>)
10002984:	681b      	ldr	r3, [r3, #0]
10002986:	6adb      	ldr	r3, [r3, #44]	; 0x2c
10002988:	429a      	cmp	r2, r3
1000298a:	d900      	bls.n	1000298e <xTaskIncrementTick+0xce>
                                xSwitchRequired = pdTRUE;
1000298c:	2001      	movs	r0, #1
                if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
1000298e:	4b1f      	ldr	r3, [pc, #124]	; (10002a0c <xTaskIncrementTick+0x14c>)
10002990:	681b      	ldr	r3, [r3, #0]
10002992:	681b      	ldr	r3, [r3, #0]
10002994:	2b00      	cmp	r3, #0
10002996:	d0c2      	beq.n	1000291e <xTaskIncrementTick+0x5e>
                    pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList );
10002998:	4b1c      	ldr	r3, [pc, #112]	; (10002a0c <xTaskIncrementTick+0x14c>)
1000299a:	681b      	ldr	r3, [r3, #0]
1000299c:	68db      	ldr	r3, [r3, #12]
1000299e:	68db      	ldr	r3, [r3, #12]
                    xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
100029a0:	685a      	ldr	r2, [r3, #4]
                    if( xConstTickCount < xItemValue )
100029a2:	4294      	cmp	r4, r2
100029a4:	d3c0      	bcc.n	10002928 <xTaskIncrementTick+0x68>
                    listREMOVE_ITEM( &( pxTCB->xStateListItem ) );
100029a6:	695a      	ldr	r2, [r3, #20]
100029a8:	689d      	ldr	r5, [r3, #8]
100029aa:	68d9      	ldr	r1, [r3, #12]
100029ac:	60a9      	str	r1, [r5, #8]
100029ae:	689d      	ldr	r5, [r3, #8]
100029b0:	604d      	str	r5, [r1, #4]
100029b2:	6851      	ldr	r1, [r2, #4]
100029b4:	1d1d      	adds	r5, r3, #4
100029b6:	42a9      	cmp	r1, r5
100029b8:	d0b9      	beq.n	1000292e <xTaskIncrementTick+0x6e>
100029ba:	2100      	movs	r1, #0
100029bc:	6159      	str	r1, [r3, #20]
100029be:	6811      	ldr	r1, [r2, #0]
100029c0:	3901      	subs	r1, #1
100029c2:	6011      	str	r1, [r2, #0]
                    if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
100029c4:	6a9a      	ldr	r2, [r3, #40]	; 0x28
100029c6:	2a00      	cmp	r2, #0
100029c8:	d0b9      	beq.n	1000293e <xTaskIncrementTick+0x7e>
                        listREMOVE_ITEM( &( pxTCB->xEventListItem ) );
100029ca:	69de      	ldr	r6, [r3, #28]
100029cc:	6a19      	ldr	r1, [r3, #32]
100029ce:	60b1      	str	r1, [r6, #8]
100029d0:	69de      	ldr	r6, [r3, #28]
100029d2:	604e      	str	r6, [r1, #4]
100029d4:	6856      	ldr	r6, [r2, #4]
100029d6:	f103 0118 	add.w	r1, r3, #24
100029da:	428e      	cmp	r6, r1
100029dc:	d1aa      	bne.n	10002934 <xTaskIncrementTick+0x74>
100029de:	6a19      	ldr	r1, [r3, #32]
100029e0:	6051      	str	r1, [r2, #4]
100029e2:	e7a7      	b.n	10002934 <xTaskIncrementTick+0x74>
        xPendedTicks += 1U;
100029e4:	4a0d      	ldr	r2, [pc, #52]	; (10002a1c <xTaskIncrementTick+0x15c>)
100029e6:	6813      	ldr	r3, [r2, #0]
100029e8:	3301      	adds	r3, #1
100029ea:	6013      	str	r3, [r2, #0]
    BaseType_t xSwitchRequired = pdFALSE;
100029ec:	2000      	movs	r0, #0
}
100029ee:	4770      	bx	lr
                    xSwitchRequired = pdTRUE;
100029f0:	2001      	movs	r0, #1
    return xSwitchRequired;
100029f2:	e784      	b.n	100028fe <xTaskIncrementTick+0x3e>
100029f4:	38008858 	stmdacc	r0, {r3, r4, r6, fp, pc}
100029f8:	38008b50 	stmdacc	r0, {r4, r6, r8, r9, fp, pc}
100029fc:	38008aec 	stmdacc	r0, {r2, r3, r5, r6, r7, r9, fp, pc}
10002a00:	380085b8 	stmdacc	r0, {r3, r4, r5, r7, r8, sl, pc}
10002a04:	380085c4 	stmdacc	r0, {r2, r6, r7, r8, sl, pc}
10002a08:	38008ba0 	stmdacc	r0, {r5, r7, r8, r9, fp, pc}
10002a0c:	380085bc 	stmdacc	r0, {r2, r3, r4, r5, r7, r8, sl, pc}
10002a10:	380085c0 	stmdacc	r0, {r6, r7, r8, sl, pc}
10002a14:	38008af0 	stmdacc	r0, {r4, r5, r6, r7, r9, fp, pc}
10002a18:	38008a60 	stmdacc	r0, {r5, r6, r9, fp, pc}
10002a1c:	38008af4 	stmdacc	r0, {r2, r4, r5, r6, r7, r9, fp, pc}

10002a20 <xTaskResumeAll>:
{
10002a20:	b510      	push	{r4, lr}
        taskENTER_CRITICAL();
10002a22:	f000 fe27 	bl	10003674 <vPortEnterCritical>
            uxSchedulerSuspended = ( UBaseType_t ) ( uxSchedulerSuspended - 1U );
10002a26:	4b42      	ldr	r3, [pc, #264]	; (10002b30 <xTaskResumeAll+0x110>)
10002a28:	681a      	ldr	r2, [r3, #0]
10002a2a:	3a01      	subs	r2, #1
10002a2c:	601a      	str	r2, [r3, #0]
            if( uxSchedulerSuspended == ( UBaseType_t ) 0U )
10002a2e:	681b      	ldr	r3, [r3, #0]
10002a30:	2b00      	cmp	r3, #0
10002a32:	d177      	bne.n	10002b24 <xTaskResumeAll+0x104>
                if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
10002a34:	4b3f      	ldr	r3, [pc, #252]	; (10002b34 <xTaskResumeAll+0x114>)
10002a36:	681b      	ldr	r3, [r3, #0]
10002a38:	b93b      	cbnz	r3, 10002a4a <xTaskResumeAll+0x2a>
    BaseType_t xAlreadyYielded = pdFALSE;
10002a3a:	2400      	movs	r4, #0
10002a3c:	e073      	b.n	10002b26 <xTaskResumeAll+0x106>
                        listREMOVE_ITEM( &( pxTCB->xEventListItem ) );
10002a3e:	6a19      	ldr	r1, [r3, #32]
10002a40:	6051      	str	r1, [r2, #4]
10002a42:	e015      	b.n	10002a70 <xTaskResumeAll+0x50>
                        listREMOVE_ITEM( &( pxTCB->xStateListItem ) );
10002a44:	68d9      	ldr	r1, [r3, #12]
10002a46:	6051      	str	r1, [r2, #4]
10002a48:	e021      	b.n	10002a8e <xTaskResumeAll+0x6e>
    TCB_t * pxTCB = NULL;
10002a4a:	2300      	movs	r3, #0
                    while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
10002a4c:	4a3a      	ldr	r2, [pc, #232]	; (10002b38 <xTaskResumeAll+0x118>)
10002a4e:	6812      	ldr	r2, [r2, #0]
10002a50:	2a00      	cmp	r2, #0
10002a52:	d04a      	beq.n	10002aea <xTaskResumeAll+0xca>
                        pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) );
10002a54:	4b38      	ldr	r3, [pc, #224]	; (10002b38 <xTaskResumeAll+0x118>)
10002a56:	68db      	ldr	r3, [r3, #12]
10002a58:	68db      	ldr	r3, [r3, #12]
                        listREMOVE_ITEM( &( pxTCB->xEventListItem ) );
10002a5a:	6a9a      	ldr	r2, [r3, #40]	; 0x28
10002a5c:	69d8      	ldr	r0, [r3, #28]
10002a5e:	6a19      	ldr	r1, [r3, #32]
10002a60:	6081      	str	r1, [r0, #8]
10002a62:	69d8      	ldr	r0, [r3, #28]
10002a64:	6048      	str	r0, [r1, #4]
10002a66:	6850      	ldr	r0, [r2, #4]
10002a68:	f103 0118 	add.w	r1, r3, #24
10002a6c:	4288      	cmp	r0, r1
10002a6e:	d0e6      	beq.n	10002a3e <xTaskResumeAll+0x1e>
10002a70:	2100      	movs	r1, #0
10002a72:	6299      	str	r1, [r3, #40]	; 0x28
10002a74:	6811      	ldr	r1, [r2, #0]
10002a76:	3901      	subs	r1, #1
10002a78:	6011      	str	r1, [r2, #0]
                        listREMOVE_ITEM( &( pxTCB->xStateListItem ) );
10002a7a:	695a      	ldr	r2, [r3, #20]
10002a7c:	6898      	ldr	r0, [r3, #8]
10002a7e:	68d9      	ldr	r1, [r3, #12]
10002a80:	6081      	str	r1, [r0, #8]
10002a82:	6898      	ldr	r0, [r3, #8]
10002a84:	6048      	str	r0, [r1, #4]
10002a86:	6851      	ldr	r1, [r2, #4]
10002a88:	1d18      	adds	r0, r3, #4
10002a8a:	4281      	cmp	r1, r0
10002a8c:	d0da      	beq.n	10002a44 <xTaskResumeAll+0x24>
10002a8e:	2100      	movs	r1, #0
10002a90:	6159      	str	r1, [r3, #20]
10002a92:	6811      	ldr	r1, [r2, #0]
10002a94:	3901      	subs	r1, #1
10002a96:	6011      	str	r1, [r2, #0]
                        prvAddTaskToReadyList( pxTCB );
10002a98:	6ada      	ldr	r2, [r3, #44]	; 0x2c
10002a9a:	4928      	ldr	r1, [pc, #160]	; (10002b3c <xTaskResumeAll+0x11c>)
10002a9c:	6809      	ldr	r1, [r1, #0]
10002a9e:	428a      	cmp	r2, r1
10002aa0:	d901      	bls.n	10002aa6 <xTaskResumeAll+0x86>
10002aa2:	4926      	ldr	r1, [pc, #152]	; (10002b3c <xTaskResumeAll+0x11c>)
10002aa4:	600a      	str	r2, [r1, #0]
10002aa6:	4926      	ldr	r1, [pc, #152]	; (10002b40 <xTaskResumeAll+0x120>)
10002aa8:	ebc2 02c2 	rsb	r2, r2, r2, lsl #3
10002aac:	eb01 0282 	add.w	r2, r1, r2, lsl #2
10002ab0:	6852      	ldr	r2, [r2, #4]
10002ab2:	609a      	str	r2, [r3, #8]
10002ab4:	6894      	ldr	r4, [r2, #8]
10002ab6:	60dc      	str	r4, [r3, #12]
10002ab8:	6060      	str	r0, [r4, #4]
10002aba:	6090      	str	r0, [r2, #8]
10002abc:	6ada      	ldr	r2, [r3, #44]	; 0x2c
10002abe:	ebc2 00c2 	rsb	r0, r2, r2, lsl #3
10002ac2:	eb01 0480 	add.w	r4, r1, r0, lsl #2
10002ac6:	615c      	str	r4, [r3, #20]
10002ac8:	f851 0020 	ldr.w	r0, [r1, r0, lsl #2]
10002acc:	3001      	adds	r0, #1
10002ace:	ebc2 02c2 	rsb	r2, r2, r2, lsl #3
10002ad2:	f841 0022 	str.w	r0, [r1, r2, lsl #2]
                            if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
10002ad6:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
10002ad8:	4a1a      	ldr	r2, [pc, #104]	; (10002b44 <xTaskResumeAll+0x124>)
10002ada:	6812      	ldr	r2, [r2, #0]
10002adc:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
10002ade:	4291      	cmp	r1, r2
10002ae0:	d9b4      	bls.n	10002a4c <xTaskResumeAll+0x2c>
                                xYieldPendings[ xCoreID ] = pdTRUE;
10002ae2:	4a19      	ldr	r2, [pc, #100]	; (10002b48 <xTaskResumeAll+0x128>)
10002ae4:	2101      	movs	r1, #1
10002ae6:	6011      	str	r1, [r2, #0]
10002ae8:	e7b0      	b.n	10002a4c <xTaskResumeAll+0x2c>
                    if( pxTCB != NULL )
10002aea:	b10b      	cbz	r3, 10002af0 <xTaskResumeAll+0xd0>
                        prvResetNextTaskUnblockTime();
10002aec:	f7ff fcb8 	bl	10002460 <prvResetNextTaskUnblockTime>
                        TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
10002af0:	4b16      	ldr	r3, [pc, #88]	; (10002b4c <xTaskResumeAll+0x12c>)
10002af2:	681c      	ldr	r4, [r3, #0]
                        if( xPendedCounts > ( TickType_t ) 0U )
10002af4:	b954      	cbnz	r4, 10002b0c <xTaskResumeAll+0xec>
                    if( xYieldPendings[ xCoreID ] != pdFALSE )
10002af6:	4b14      	ldr	r3, [pc, #80]	; (10002b48 <xTaskResumeAll+0x128>)
10002af8:	681c      	ldr	r4, [r3, #0]
10002afa:	b1a4      	cbz	r4, 10002b26 <xTaskResumeAll+0x106>
                            taskYIELD_TASK_CORE_IF_USING_PREEMPTION( pxCurrentTCB );
10002afc:	4b11      	ldr	r3, [pc, #68]	; (10002b44 <xTaskResumeAll+0x124>)
10002afe:	681b      	ldr	r3, [r3, #0]
10002b00:	f000 fdac 	bl	1000365c <vPortYield>
                            xAlreadyYielded = pdTRUE;
10002b04:	2401      	movs	r4, #1
10002b06:	e00e      	b.n	10002b26 <xTaskResumeAll+0x106>
                            } while( xPendedCounts > ( TickType_t ) 0U );
10002b08:	3c01      	subs	r4, #1
10002b0a:	d007      	beq.n	10002b1c <xTaskResumeAll+0xfc>
                                if( xTaskIncrementTick() != pdFALSE )
10002b0c:	f7ff fed8 	bl	100028c0 <xTaskIncrementTick>
10002b10:	2800      	cmp	r0, #0
10002b12:	d0f9      	beq.n	10002b08 <xTaskResumeAll+0xe8>
                                    xYieldPendings[ xCoreID ] = pdTRUE;
10002b14:	4b0c      	ldr	r3, [pc, #48]	; (10002b48 <xTaskResumeAll+0x128>)
10002b16:	2201      	movs	r2, #1
10002b18:	601a      	str	r2, [r3, #0]
10002b1a:	e7f5      	b.n	10002b08 <xTaskResumeAll+0xe8>
                            xPendedTicks = 0;
10002b1c:	4b0b      	ldr	r3, [pc, #44]	; (10002b4c <xTaskResumeAll+0x12c>)
10002b1e:	2200      	movs	r2, #0
10002b20:	601a      	str	r2, [r3, #0]
10002b22:	e7e8      	b.n	10002af6 <xTaskResumeAll+0xd6>
    BaseType_t xAlreadyYielded = pdFALSE;
10002b24:	2400      	movs	r4, #0
        taskEXIT_CRITICAL();
10002b26:	f000 fdb3 	bl	10003690 <vPortExitCritical>
}
10002b2a:	4620      	mov	r0, r4
10002b2c:	bd10      	pop	{r4, pc}
10002b2e:	bf00      	nop
10002b30:	38008858 	stmdacc	r0, {r3, r4, r6, fp, pc}
10002b34:	38008650 	stmdacc	r0, {r4, r6, r9, sl, pc}
10002b38:	38008af8 	stmdacc	r0, {r3, r4, r5, r6, r7, r9, fp, pc}
10002b3c:	38008a60 	stmdacc	r0, {r5, r6, r9, fp, pc}
10002b40:	380085c4 	stmdacc	r0, {r2, r6, r7, r8, sl, pc}
10002b44:	380085b8 	stmdacc	r0, {r3, r4, r5, r7, r8, sl, pc}
10002b48:	38008ba0 	stmdacc	r0, {r5, r7, r8, r9, fp, pc}
10002b4c:	38008af4 	stmdacc	r0, {r2, r4, r5, r6, r7, r9, fp, pc}

10002b50 <vTaskDelay>:
    {
10002b50:	b510      	push	{r4, lr}
        if( xTicksToDelay > ( TickType_t ) 0U )
10002b52:	b148      	cbz	r0, 10002b68 <vTaskDelay+0x18>
10002b54:	4604      	mov	r4, r0
            vTaskSuspendAll();
10002b56:	f7ff fe81 	bl	1000285c <vTaskSuspendAll>
                prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
10002b5a:	2100      	movs	r1, #0
10002b5c:	4620      	mov	r0, r4
10002b5e:	f7ff fe03 	bl	10002768 <prvAddCurrentTaskToDelayedList>
            xAlreadyYielded = xTaskResumeAll();
10002b62:	f7ff ff5d 	bl	10002a20 <xTaskResumeAll>
        if( xAlreadyYielded == pdFALSE )
10002b66:	b908      	cbnz	r0, 10002b6c <vTaskDelay+0x1c>
            taskYIELD_WITHIN_API();
10002b68:	f000 fd78 	bl	1000365c <vPortYield>
    }
10002b6c:	bd10      	pop	{r4, pc}
	...

10002b70 <prvIdleTask>:
{
10002b70:	b508      	push	{r3, lr}
10002b72:	e003      	b.n	10002b7c <prvIdleTask+0xc>
            xExpectedIdleTime = prvGetExpectedIdleTime();
10002b74:	f7ff fc54 	bl	10002420 <prvGetExpectedIdleTime>
            if( xExpectedIdleTime >= ( TickType_t ) configEXPECTED_IDLE_TIME_BEFORE_SLEEP )
10002b78:	2801      	cmp	r0, #1
10002b7a:	d808      	bhi.n	10002b8e <prvIdleTask+0x1e>
        prvCheckTasksWaitingTermination();
10002b7c:	f7ff fdce 	bl	1000271c <prvCheckTasksWaitingTermination>
            if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) configNUMBER_OF_CORES )
10002b80:	4b08      	ldr	r3, [pc, #32]	; (10002ba4 <prvIdleTask+0x34>)
10002b82:	681b      	ldr	r3, [r3, #0]
10002b84:	2b01      	cmp	r3, #1
10002b86:	d9f5      	bls.n	10002b74 <prvIdleTask+0x4>
                taskYIELD();
10002b88:	f000 fd68 	bl	1000365c <vPortYield>
10002b8c:	e7f2      	b.n	10002b74 <prvIdleTask+0x4>
                vTaskSuspendAll();
10002b8e:	f7ff fe65 	bl	1000285c <vTaskSuspendAll>
                    xExpectedIdleTime = prvGetExpectedIdleTime();
10002b92:	f7ff fc45 	bl	10002420 <prvGetExpectedIdleTime>
                    if( xExpectedIdleTime >= ( TickType_t ) configEXPECTED_IDLE_TIME_BEFORE_SLEEP )
10002b96:	2801      	cmp	r0, #1
10002b98:	d901      	bls.n	10002b9e <prvIdleTask+0x2e>
                        portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime );
10002b9a:	f000 fcb7 	bl	1000350c <vPortSuppressTicksAndSleep>
                ( void ) xTaskResumeAll();
10002b9e:	f7ff ff3f 	bl	10002a20 <xTaskResumeAll>
10002ba2:	e7eb      	b.n	10002b7c <prvIdleTask+0xc>
10002ba4:	380085c4 	stmdacc	r0, {r2, r6, r7, r8, sl, pc}

10002ba8 <vTaskSwitchContext>:
        if( uxSchedulerSuspended != ( UBaseType_t ) 0U )
10002ba8:	4b1b      	ldr	r3, [pc, #108]	; (10002c18 <vTaskSwitchContext+0x70>)
10002baa:	681b      	ldr	r3, [r3, #0]
10002bac:	b11b      	cbz	r3, 10002bb6 <vTaskSwitchContext+0xe>
            xYieldPendings[ 0 ] = pdTRUE;
10002bae:	4b1b      	ldr	r3, [pc, #108]	; (10002c1c <vTaskSwitchContext+0x74>)
10002bb0:	2201      	movs	r2, #1
10002bb2:	601a      	str	r2, [r3, #0]
10002bb4:	4770      	bx	lr
            xYieldPendings[ 0 ] = pdFALSE;
10002bb6:	4b19      	ldr	r3, [pc, #100]	; (10002c1c <vTaskSwitchContext+0x74>)
10002bb8:	2200      	movs	r2, #0
10002bba:	601a      	str	r2, [r3, #0]
            taskSELECT_HIGHEST_PRIORITY_TASK();
10002bbc:	4b18      	ldr	r3, [pc, #96]	; (10002c20 <vTaskSwitchContext+0x78>)
10002bbe:	681b      	ldr	r3, [r3, #0]
10002bc0:	e000      	b.n	10002bc4 <vTaskSwitchContext+0x1c>
10002bc2:	3b01      	subs	r3, #1
10002bc4:	ebc3 01c3 	rsb	r1, r3, r3, lsl #3
10002bc8:	008a      	lsls	r2, r1, #2
10002bca:	4916      	ldr	r1, [pc, #88]	; (10002c24 <vTaskSwitchContext+0x7c>)
10002bcc:	588a      	ldr	r2, [r1, r2]
10002bce:	2a00      	cmp	r2, #0
10002bd0:	d0f7      	beq.n	10002bc2 <vTaskSwitchContext+0x1a>
10002bd2:	ebc3 00c3 	rsb	r0, r3, r3, lsl #3
10002bd6:	0082      	lsls	r2, r0, #2
10002bd8:	440a      	add	r2, r1
10002bda:	6850      	ldr	r0, [r2, #4]
10002bdc:	6840      	ldr	r0, [r0, #4]
10002bde:	6050      	str	r0, [r2, #4]
10002be0:	ebc3 0cc3 	rsb	ip, r3, r3, lsl #3
10002be4:	ea4f 028c 	mov.w	r2, ip, lsl #2
10002be8:	3208      	adds	r2, #8
10002bea:	4411      	add	r1, r2
10002bec:	4288      	cmp	r0, r1
10002bee:	d00c      	beq.n	10002c0a <vTaskSwitchContext+0x62>
10002bf0:	ebc3 02c3 	rsb	r2, r3, r3, lsl #3
10002bf4:	0091      	lsls	r1, r2, #2
10002bf6:	4a0b      	ldr	r2, [pc, #44]	; (10002c24 <vTaskSwitchContext+0x7c>)
10002bf8:	440a      	add	r2, r1
10002bfa:	6852      	ldr	r2, [r2, #4]
10002bfc:	68d1      	ldr	r1, [r2, #12]
10002bfe:	4a0a      	ldr	r2, [pc, #40]	; (10002c28 <vTaskSwitchContext+0x80>)
10002c00:	6011      	str	r1, [r2, #0]
10002c02:	4907      	ldr	r1, [pc, #28]	; (10002c20 <vTaskSwitchContext+0x78>)
10002c04:	600b      	str	r3, [r1, #0]
            portTASK_SWITCH_HOOK( pxCurrentTCB );
10002c06:	6813      	ldr	r3, [r2, #0]
    }
10002c08:	4770      	bx	lr
            taskSELECT_HIGHEST_PRIORITY_TASK();
10002c0a:	4662      	mov	r2, ip
10002c0c:	0091      	lsls	r1, r2, #2
10002c0e:	4a05      	ldr	r2, [pc, #20]	; (10002c24 <vTaskSwitchContext+0x7c>)
10002c10:	440a      	add	r2, r1
10002c12:	68d1      	ldr	r1, [r2, #12]
10002c14:	6051      	str	r1, [r2, #4]
10002c16:	e7eb      	b.n	10002bf0 <vTaskSwitchContext+0x48>
10002c18:	38008858 	stmdacc	r0, {r3, r4, r6, fp, pc}
10002c1c:	38008ba0 	stmdacc	r0, {r5, r7, r8, r9, fp, pc}
10002c20:	38008a60 	stmdacc	r0, {r5, r6, r9, fp, pc}
10002c24:	380085c4 	stmdacc	r0, {r2, r6, r7, r8, sl, pc}
10002c28:	380085b8 	stmdacc	r0, {r3, r4, r5, r7, r8, sl, pc}

10002c2c <vTaskPlaceOnEventList>:
{
10002c2c:	b510      	push	{r4, lr}
10002c2e:	460c      	mov	r4, r1
    vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
10002c30:	4b04      	ldr	r3, [pc, #16]	; (10002c44 <vTaskPlaceOnEventList+0x18>)
10002c32:	6819      	ldr	r1, [r3, #0]
10002c34:	3118      	adds	r1, #24
10002c36:	f7ff f9ed 	bl	10002014 <vListInsert>
    prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
10002c3a:	2101      	movs	r1, #1
10002c3c:	4620      	mov	r0, r4
10002c3e:	f7ff fd93 	bl	10002768 <prvAddCurrentTaskToDelayedList>
}
10002c42:	bd10      	pop	{r4, pc}
10002c44:	380085b8 	stmdacc	r0, {r3, r4, r5, r7, r8, sl, pc}

10002c48 <vTaskPlaceOnEventListRestricted>:
    {
10002c48:	b570      	push	{r4, r5, r6, lr}
10002c4a:	4603      	mov	r3, r0
10002c4c:	4608      	mov	r0, r1
        listINSERT_END( pxEventList, &( pxCurrentTCB->xEventListItem ) );
10002c4e:	6859      	ldr	r1, [r3, #4]
10002c50:	4c0b      	ldr	r4, [pc, #44]	; (10002c80 <vTaskPlaceOnEventListRestricted+0x38>)
10002c52:	6825      	ldr	r5, [r4, #0]
10002c54:	61e9      	str	r1, [r5, #28]
10002c56:	6825      	ldr	r5, [r4, #0]
10002c58:	688e      	ldr	r6, [r1, #8]
10002c5a:	622e      	str	r6, [r5, #32]
10002c5c:	6825      	ldr	r5, [r4, #0]
10002c5e:	3518      	adds	r5, #24
10002c60:	6075      	str	r5, [r6, #4]
10002c62:	6825      	ldr	r5, [r4, #0]
10002c64:	3518      	adds	r5, #24
10002c66:	608d      	str	r5, [r1, #8]
10002c68:	6821      	ldr	r1, [r4, #0]
10002c6a:	628b      	str	r3, [r1, #40]	; 0x28
10002c6c:	6819      	ldr	r1, [r3, #0]
10002c6e:	3101      	adds	r1, #1
10002c70:	6019      	str	r1, [r3, #0]
        if( xWaitIndefinitely != pdFALSE )
10002c72:	4611      	mov	r1, r2
10002c74:	b10a      	cbz	r2, 10002c7a <vTaskPlaceOnEventListRestricted+0x32>
            xTicksToWait = portMAX_DELAY;
10002c76:	f04f 30ff 	mov.w	r0, #4294967295
        prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
10002c7a:	f7ff fd75 	bl	10002768 <prvAddCurrentTaskToDelayedList>
    }
10002c7e:	bd70      	pop	{r4, r5, r6, pc}
10002c80:	380085b8 	stmdacc	r0, {r3, r4, r5, r7, r8, sl, pc}

10002c84 <xTaskRemoveFromEventList>:
{
10002c84:	b510      	push	{r4, lr}
    pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList );
10002c86:	68c3      	ldr	r3, [r0, #12]
10002c88:	68dc      	ldr	r4, [r3, #12]
    listREMOVE_ITEM( &( pxUnblockedTCB->xEventListItem ) );
10002c8a:	6aa3      	ldr	r3, [r4, #40]	; 0x28
10002c8c:	69e1      	ldr	r1, [r4, #28]
10002c8e:	6a22      	ldr	r2, [r4, #32]
10002c90:	608a      	str	r2, [r1, #8]
10002c92:	69e1      	ldr	r1, [r4, #28]
10002c94:	6051      	str	r1, [r2, #4]
10002c96:	685a      	ldr	r2, [r3, #4]
10002c98:	f104 0118 	add.w	r1, r4, #24
10002c9c:	428a      	cmp	r2, r1
10002c9e:	d042      	beq.n	10002d26 <xTaskRemoveFromEventList+0xa2>
10002ca0:	2200      	movs	r2, #0
10002ca2:	62a2      	str	r2, [r4, #40]	; 0x28
10002ca4:	681a      	ldr	r2, [r3, #0]
10002ca6:	3a01      	subs	r2, #1
10002ca8:	601a      	str	r2, [r3, #0]
    if( uxSchedulerSuspended == ( UBaseType_t ) 0U )
10002caa:	4b29      	ldr	r3, [pc, #164]	; (10002d50 <xTaskRemoveFromEventList+0xcc>)
10002cac:	681b      	ldr	r3, [r3, #0]
10002cae:	2b00      	cmp	r3, #0
10002cb0:	d13f      	bne.n	10002d32 <xTaskRemoveFromEventList+0xae>
        listREMOVE_ITEM( &( pxUnblockedTCB->xStateListItem ) );
10002cb2:	6963      	ldr	r3, [r4, #20]
10002cb4:	68a1      	ldr	r1, [r4, #8]
10002cb6:	68e2      	ldr	r2, [r4, #12]
10002cb8:	608a      	str	r2, [r1, #8]
10002cba:	68a1      	ldr	r1, [r4, #8]
10002cbc:	6051      	str	r1, [r2, #4]
10002cbe:	685a      	ldr	r2, [r3, #4]
10002cc0:	1d21      	adds	r1, r4, #4
10002cc2:	428a      	cmp	r2, r1
10002cc4:	d032      	beq.n	10002d2c <xTaskRemoveFromEventList+0xa8>
10002cc6:	2200      	movs	r2, #0
10002cc8:	6162      	str	r2, [r4, #20]
10002cca:	681a      	ldr	r2, [r3, #0]
10002ccc:	3a01      	subs	r2, #1
10002cce:	601a      	str	r2, [r3, #0]
        prvAddTaskToReadyList( pxUnblockedTCB );
10002cd0:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
10002cd2:	4a20      	ldr	r2, [pc, #128]	; (10002d54 <xTaskRemoveFromEventList+0xd0>)
10002cd4:	6812      	ldr	r2, [r2, #0]
10002cd6:	4293      	cmp	r3, r2
10002cd8:	d901      	bls.n	10002cde <xTaskRemoveFromEventList+0x5a>
10002cda:	4a1e      	ldr	r2, [pc, #120]	; (10002d54 <xTaskRemoveFromEventList+0xd0>)
10002cdc:	6013      	str	r3, [r2, #0]
10002cde:	4a1e      	ldr	r2, [pc, #120]	; (10002d58 <xTaskRemoveFromEventList+0xd4>)
10002ce0:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
10002ce4:	eb02 0383 	add.w	r3, r2, r3, lsl #2
10002ce8:	685b      	ldr	r3, [r3, #4]
10002cea:	60a3      	str	r3, [r4, #8]
10002cec:	6898      	ldr	r0, [r3, #8]
10002cee:	60e0      	str	r0, [r4, #12]
10002cf0:	6041      	str	r1, [r0, #4]
10002cf2:	6099      	str	r1, [r3, #8]
10002cf4:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
10002cf6:	ebc3 01c3 	rsb	r1, r3, r3, lsl #3
10002cfa:	eb02 0081 	add.w	r0, r2, r1, lsl #2
10002cfe:	6160      	str	r0, [r4, #20]
10002d00:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
10002d04:	3101      	adds	r1, #1
10002d06:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
10002d0a:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
            prvResetNextTaskUnblockTime();
10002d0e:	f7ff fba7 	bl	10002460 <prvResetNextTaskUnblockTime>
        if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
10002d12:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
10002d14:	4b11      	ldr	r3, [pc, #68]	; (10002d5c <xTaskRemoveFromEventList+0xd8>)
10002d16:	681b      	ldr	r3, [r3, #0]
10002d18:	6adb      	ldr	r3, [r3, #44]	; 0x2c
10002d1a:	429a      	cmp	r2, r3
10002d1c:	d915      	bls.n	10002d4a <xTaskRemoveFromEventList+0xc6>
            xYieldPendings[ 0 ] = pdTRUE;
10002d1e:	2001      	movs	r0, #1
10002d20:	4b0f      	ldr	r3, [pc, #60]	; (10002d60 <xTaskRemoveFromEventList+0xdc>)
10002d22:	6018      	str	r0, [r3, #0]
}
10002d24:	bd10      	pop	{r4, pc}
    listREMOVE_ITEM( &( pxUnblockedTCB->xEventListItem ) );
10002d26:	6a22      	ldr	r2, [r4, #32]
10002d28:	605a      	str	r2, [r3, #4]
10002d2a:	e7b9      	b.n	10002ca0 <xTaskRemoveFromEventList+0x1c>
        listREMOVE_ITEM( &( pxUnblockedTCB->xStateListItem ) );
10002d2c:	68e2      	ldr	r2, [r4, #12]
10002d2e:	605a      	str	r2, [r3, #4]
10002d30:	e7c9      	b.n	10002cc6 <xTaskRemoveFromEventList+0x42>
        listINSERT_END( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
10002d32:	4b0c      	ldr	r3, [pc, #48]	; (10002d64 <xTaskRemoveFromEventList+0xe0>)
10002d34:	685a      	ldr	r2, [r3, #4]
10002d36:	61e2      	str	r2, [r4, #28]
10002d38:	6890      	ldr	r0, [r2, #8]
10002d3a:	6220      	str	r0, [r4, #32]
10002d3c:	6041      	str	r1, [r0, #4]
10002d3e:	6091      	str	r1, [r2, #8]
10002d40:	62a3      	str	r3, [r4, #40]	; 0x28
10002d42:	681a      	ldr	r2, [r3, #0]
10002d44:	3201      	adds	r2, #1
10002d46:	601a      	str	r2, [r3, #0]
10002d48:	e7e3      	b.n	10002d12 <xTaskRemoveFromEventList+0x8e>
            xReturn = pdFALSE;
10002d4a:	2000      	movs	r0, #0
    return xReturn;
10002d4c:	e7ea      	b.n	10002d24 <xTaskRemoveFromEventList+0xa0>
10002d4e:	bf00      	nop
10002d50:	38008858 	stmdacc	r0, {r3, r4, r6, fp, pc}
10002d54:	38008a60 	stmdacc	r0, {r5, r6, r9, fp, pc}
10002d58:	380085c4 	stmdacc	r0, {r2, r6, r7, r8, sl, pc}
10002d5c:	380085b8 	stmdacc	r0, {r3, r4, r5, r7, r8, sl, pc}
10002d60:	38008ba0 	stmdacc	r0, {r5, r7, r8, r9, fp, pc}
10002d64:	38008af8 	stmdacc	r0, {r3, r4, r5, r6, r7, r9, fp, pc}

10002d68 <vTaskInternalSetTimeOutState>:
    pxTimeOut->xOverflowCount = xNumOfOverflows;
10002d68:	4b03      	ldr	r3, [pc, #12]	; (10002d78 <vTaskInternalSetTimeOutState+0x10>)
10002d6a:	681b      	ldr	r3, [r3, #0]
10002d6c:	6003      	str	r3, [r0, #0]
    pxTimeOut->xTimeOnEntering = xTickCount;
10002d6e:	4b03      	ldr	r3, [pc, #12]	; (10002d7c <vTaskInternalSetTimeOutState+0x14>)
10002d70:	681b      	ldr	r3, [r3, #0]
10002d72:	6043      	str	r3, [r0, #4]
}
10002d74:	4770      	bx	lr
10002d76:	bf00      	nop
10002d78:	38008af0 	stmdacc	r0, {r4, r5, r6, r7, r9, fp, pc}
10002d7c:	38008b50 	stmdacc	r0, {r4, r6, r8, r9, fp, pc}

10002d80 <xTaskCheckForTimeOut>:
{
10002d80:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10002d82:	4604      	mov	r4, r0
10002d84:	460d      	mov	r5, r1
    taskENTER_CRITICAL();
10002d86:	f000 fc75 	bl	10003674 <vPortEnterCritical>
        const TickType_t xConstTickCount = xTickCount;
10002d8a:	4b19      	ldr	r3, [pc, #100]	; (10002df0 <xTaskCheckForTimeOut+0x70>)
10002d8c:	681a      	ldr	r2, [r3, #0]
        const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
10002d8e:	6863      	ldr	r3, [r4, #4]
10002d90:	1ad0      	subs	r0, r2, r3
            if( pxCurrentTCB->ucDelayAborted != ( uint8_t ) pdFALSE )
10002d92:	4918      	ldr	r1, [pc, #96]	; (10002df4 <xTaskCheckForTimeOut+0x74>)
10002d94:	6809      	ldr	r1, [r1, #0]
10002d96:	f891 104a 	ldrb.w	r1, [r1, #74]	; 0x4a
10002d9a:	b149      	cbz	r1, 10002db0 <xTaskCheckForTimeOut+0x30>
                pxCurrentTCB->ucDelayAborted = ( uint8_t ) pdFALSE;
10002d9c:	4b15      	ldr	r3, [pc, #84]	; (10002df4 <xTaskCheckForTimeOut+0x74>)
10002d9e:	681b      	ldr	r3, [r3, #0]
10002da0:	2200      	movs	r2, #0
10002da2:	f883 204a 	strb.w	r2, [r3, #74]	; 0x4a
                xReturn = pdTRUE;
10002da6:	2401      	movs	r4, #1
    taskEXIT_CRITICAL();
10002da8:	f000 fc72 	bl	10003690 <vPortExitCritical>
}
10002dac:	4620      	mov	r0, r4
10002dae:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
            if( *pxTicksToWait == portMAX_DELAY )
10002db0:	6829      	ldr	r1, [r5, #0]
10002db2:	f1b1 3fff 	cmp.w	r1, #4294967295
10002db6:	d018      	beq.n	10002dea <xTaskCheckForTimeOut+0x6a>
        if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) )
10002db8:	4e0f      	ldr	r6, [pc, #60]	; (10002df8 <xTaskCheckForTimeOut+0x78>)
10002dba:	6836      	ldr	r6, [r6, #0]
10002dbc:	6827      	ldr	r7, [r4, #0]
10002dbe:	42b7      	cmp	r7, r6
10002dc0:	d005      	beq.n	10002dce <xTaskCheckForTimeOut+0x4e>
10002dc2:	4293      	cmp	r3, r2
10002dc4:	d803      	bhi.n	10002dce <xTaskCheckForTimeOut+0x4e>
            *pxTicksToWait = ( TickType_t ) 0;
10002dc6:	2300      	movs	r3, #0
10002dc8:	602b      	str	r3, [r5, #0]
            xReturn = pdTRUE;
10002dca:	2401      	movs	r4, #1
            *pxTicksToWait = ( TickType_t ) 0;
10002dcc:	e7ec      	b.n	10002da8 <xTaskCheckForTimeOut+0x28>
        else if( xElapsedTime < *pxTicksToWait )
10002dce:	4281      	cmp	r1, r0
10002dd0:	d803      	bhi.n	10002dda <xTaskCheckForTimeOut+0x5a>
            *pxTicksToWait = ( TickType_t ) 0;
10002dd2:	2300      	movs	r3, #0
10002dd4:	602b      	str	r3, [r5, #0]
            xReturn = pdTRUE;
10002dd6:	2401      	movs	r4, #1
10002dd8:	e7e6      	b.n	10002da8 <xTaskCheckForTimeOut+0x28>
            *pxTicksToWait -= xElapsedTime;
10002dda:	1a9b      	subs	r3, r3, r2
10002ddc:	440b      	add	r3, r1
10002dde:	602b      	str	r3, [r5, #0]
            vTaskInternalSetTimeOutState( pxTimeOut );
10002de0:	4620      	mov	r0, r4
10002de2:	f7ff ffc1 	bl	10002d68 <vTaskInternalSetTimeOutState>
            xReturn = pdFALSE;
10002de6:	2400      	movs	r4, #0
10002de8:	e7de      	b.n	10002da8 <xTaskCheckForTimeOut+0x28>
                xReturn = pdFALSE;
10002dea:	2400      	movs	r4, #0
10002dec:	e7dc      	b.n	10002da8 <xTaskCheckForTimeOut+0x28>
10002dee:	bf00      	nop
10002df0:	38008b50 	stmdacc	r0, {r4, r6, r8, r9, fp, pc}
10002df4:	380085b8 	stmdacc	r0, {r3, r4, r5, r7, r8, sl, pc}
10002df8:	38008af0 	stmdacc	r0, {r4, r5, r6, r7, r9, fp, pc}

10002dfc <vTaskMissedYield>:
    xYieldPendings[ portGET_CORE_ID() ] = pdTRUE;
10002dfc:	4b01      	ldr	r3, [pc, #4]	; (10002e04 <vTaskMissedYield+0x8>)
10002dfe:	2201      	movs	r2, #1
10002e00:	601a      	str	r2, [r3, #0]
}
10002e02:	4770      	bx	lr
10002e04:	38008ba0 	stmdacc	r0, {r5, r7, r8, r9, fp, pc}

10002e08 <eTaskConfirmSleepModeStatus>:
        if( listCURRENT_LIST_LENGTH( &xPendingReadyList ) != 0U )
10002e08:	4b0c      	ldr	r3, [pc, #48]	; (10002e3c <eTaskConfirmSleepModeStatus+0x34>)
10002e0a:	681b      	ldr	r3, [r3, #0]
10002e0c:	b973      	cbnz	r3, 10002e2c <eTaskConfirmSleepModeStatus+0x24>
        else if( xYieldPendings[ portGET_CORE_ID() ] != pdFALSE )
10002e0e:	4b0c      	ldr	r3, [pc, #48]	; (10002e40 <eTaskConfirmSleepModeStatus+0x38>)
10002e10:	681b      	ldr	r3, [r3, #0]
10002e12:	b96b      	cbnz	r3, 10002e30 <eTaskConfirmSleepModeStatus+0x28>
        else if( xPendedTicks != 0U )
10002e14:	4b0b      	ldr	r3, [pc, #44]	; (10002e44 <eTaskConfirmSleepModeStatus+0x3c>)
10002e16:	681b      	ldr	r3, [r3, #0]
10002e18:	b963      	cbnz	r3, 10002e34 <eTaskConfirmSleepModeStatus+0x2c>
            else if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList ) == ( uxCurrentNumberOfTasks - uxNonApplicationTasks ) )
10002e1a:	4b0b      	ldr	r3, [pc, #44]	; (10002e48 <eTaskConfirmSleepModeStatus+0x40>)
10002e1c:	681a      	ldr	r2, [r3, #0]
10002e1e:	4b0b      	ldr	r3, [pc, #44]	; (10002e4c <eTaskConfirmSleepModeStatus+0x44>)
10002e20:	681b      	ldr	r3, [r3, #0]
10002e22:	3b01      	subs	r3, #1
10002e24:	429a      	cmp	r2, r3
10002e26:	d007      	beq.n	10002e38 <eTaskConfirmSleepModeStatus+0x30>
        eSleepModeStatus eReturn = eStandardSleep;
10002e28:	2001      	movs	r0, #1
10002e2a:	4770      	bx	lr
            eReturn = eAbortSleep;
10002e2c:	2000      	movs	r0, #0
10002e2e:	4770      	bx	lr
            eReturn = eAbortSleep;
10002e30:	2000      	movs	r0, #0
10002e32:	4770      	bx	lr
            eReturn = eAbortSleep;
10002e34:	2000      	movs	r0, #0
10002e36:	4770      	bx	lr
                eReturn = eNoTasksWaitingTimeout;
10002e38:	2002      	movs	r0, #2
    }
10002e3a:	4770      	bx	lr
10002e3c:	38008af8 	stmdacc	r0, {r3, r4, r5, r6, r7, r9, fp, pc}
10002e40:	38008ba0 	stmdacc	r0, {r5, r7, r8, r9, fp, pc}
10002e44:	38008af4 	stmdacc	r0, {r2, r4, r5, r6, r7, r9, fp, pc}
10002e48:	38008b18 	stmdacc	r0, {r3, r4, r8, r9, fp, pc}
10002e4c:	38008650 	stmdacc	r0, {r4, r6, r9, sl, pc}

10002e50 <xTaskPriorityDisinherit>:
        if( pxMutexHolder != NULL )
10002e50:	2800      	cmp	r0, #0
10002e52:	d034      	beq.n	10002ebe <xTaskPriorityDisinherit+0x6e>
    {
10002e54:	b538      	push	{r3, r4, r5, lr}
10002e56:	4604      	mov	r4, r0
            ( pxTCB->uxMutexesHeld )--;
10002e58:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
10002e5a:	3b01      	subs	r3, #1
10002e5c:	63c3      	str	r3, [r0, #60]	; 0x3c
            if( pxTCB->uxPriority != pxTCB->uxBasePriority )
10002e5e:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
10002e60:	6b82      	ldr	r2, [r0, #56]	; 0x38
10002e62:	4291      	cmp	r1, r2
10002e64:	d02d      	beq.n	10002ec2 <xTaskPriorityDisinherit+0x72>
                if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
10002e66:	b10b      	cbz	r3, 10002e6c <xTaskPriorityDisinherit+0x1c>
        BaseType_t xReturn = pdFALSE;
10002e68:	2000      	movs	r0, #0
    }
10002e6a:	bd38      	pop	{r3, r4, r5, pc}
                    if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
10002e6c:	1d05      	adds	r5, r0, #4
10002e6e:	4628      	mov	r0, r5
10002e70:	f7ff f8e9 	bl	10002046 <uxListRemove>
                    pxTCB->uxPriority = pxTCB->uxBasePriority;
10002e74:	6ba3      	ldr	r3, [r4, #56]	; 0x38
10002e76:	62e3      	str	r3, [r4, #44]	; 0x2c
                    listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority );
10002e78:	f1c3 0205 	rsb	r2, r3, #5
10002e7c:	61a2      	str	r2, [r4, #24]
                    prvAddTaskToReadyList( pxTCB );
10002e7e:	4a12      	ldr	r2, [pc, #72]	; (10002ec8 <xTaskPriorityDisinherit+0x78>)
10002e80:	6812      	ldr	r2, [r2, #0]
10002e82:	4293      	cmp	r3, r2
10002e84:	d901      	bls.n	10002e8a <xTaskPriorityDisinherit+0x3a>
10002e86:	4a10      	ldr	r2, [pc, #64]	; (10002ec8 <xTaskPriorityDisinherit+0x78>)
10002e88:	6013      	str	r3, [r2, #0]
10002e8a:	4a10      	ldr	r2, [pc, #64]	; (10002ecc <xTaskPriorityDisinherit+0x7c>)
10002e8c:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
10002e90:	eb02 0383 	add.w	r3, r2, r3, lsl #2
10002e94:	685b      	ldr	r3, [r3, #4]
10002e96:	60a3      	str	r3, [r4, #8]
10002e98:	6899      	ldr	r1, [r3, #8]
10002e9a:	60e1      	str	r1, [r4, #12]
10002e9c:	604d      	str	r5, [r1, #4]
10002e9e:	609d      	str	r5, [r3, #8]
10002ea0:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
10002ea2:	ebc3 01c3 	rsb	r1, r3, r3, lsl #3
10002ea6:	eb02 0081 	add.w	r0, r2, r1, lsl #2
10002eaa:	6160      	str	r0, [r4, #20]
10002eac:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
10002eb0:	3101      	adds	r1, #1
10002eb2:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
10002eb6:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
                    xReturn = pdTRUE;
10002eba:	2001      	movs	r0, #1
10002ebc:	e7d5      	b.n	10002e6a <xTaskPriorityDisinherit+0x1a>
        BaseType_t xReturn = pdFALSE;
10002ebe:	2000      	movs	r0, #0
    }
10002ec0:	4770      	bx	lr
        BaseType_t xReturn = pdFALSE;
10002ec2:	2000      	movs	r0, #0
10002ec4:	e7d1      	b.n	10002e6a <xTaskPriorityDisinherit+0x1a>
10002ec6:	bf00      	nop
10002ec8:	38008a60 	stmdacc	r0, {r5, r6, r9, fp, pc}
10002ecc:	380085c4 	stmdacc	r0, {r2, r6, r7, r8, sl, pc}

10002ed0 <vApplicationGetIdleTaskMemory>:
                                        configSTACK_DEPTH_TYPE * puxIdleTaskStackSize )
    {
        static StaticTask_t xIdleTaskTCB;
        static StackType_t uxIdleTaskStack[ configMINIMAL_STACK_SIZE ];

        *ppxIdleTaskTCBBuffer = &( xIdleTaskTCB );
10002ed0:	4b03      	ldr	r3, [pc, #12]	; (10002ee0 <vApplicationGetIdleTaskMemory+0x10>)
10002ed2:	6003      	str	r3, [r0, #0]
        *ppxIdleTaskStackBuffer = &( uxIdleTaskStack[ 0 ] );
10002ed4:	4b03      	ldr	r3, [pc, #12]	; (10002ee4 <vApplicationGetIdleTaskMemory+0x14>)
10002ed6:	600b      	str	r3, [r1, #0]
        *puxIdleTaskStackSize = configMINIMAL_STACK_SIZE;
10002ed8:	2380      	movs	r3, #128	; 0x80
10002eda:	6013      	str	r3, [r2, #0]
    }
10002edc:	4770      	bx	lr
10002ede:	bf00      	nop
10002ee0:	38008aa0 	stmdacc	r0, {r5, r7, r9, fp, pc}
10002ee4:	38008658 	stmdacc	r0, {r3, r4, r6, r9, sl, pc}

10002ee8 <prvCreateIdleTasks>:
{
10002ee8:	b530      	push	{r4, r5, lr}
10002eea:	b089      	sub	sp, #36	; 0x24
    for( xIdleTaskNameIndex = ( BaseType_t ) 0; xIdleTaskNameIndex < ( BaseType_t ) configMAX_TASK_NAME_LEN; xIdleTaskNameIndex++ )
10002eec:	2300      	movs	r3, #0
10002eee:	2b03      	cmp	r3, #3
10002ef0:	dc09      	bgt.n	10002f06 <prvCreateIdleTasks+0x1e>
        cIdleName[ xIdleTaskNameIndex ] = configIDLE_TASK_NAME[ xIdleTaskNameIndex ];
10002ef2:	4a15      	ldr	r2, [pc, #84]	; (10002f48 <prvCreateIdleTasks+0x60>)
10002ef4:	5cd2      	ldrb	r2, [r2, r3]
10002ef6:	f103 0120 	add.w	r1, r3, #32
10002efa:	4469      	add	r1, sp
10002efc:	f801 2c04 	strb.w	r2, [r1, #-4]
        if( cIdleName[ xIdleTaskNameIndex ] == ( char ) 0x00 )
10002f00:	b10a      	cbz	r2, 10002f06 <prvCreateIdleTasks+0x1e>
    for( xIdleTaskNameIndex = ( BaseType_t ) 0; xIdleTaskNameIndex < ( BaseType_t ) configMAX_TASK_NAME_LEN; xIdleTaskNameIndex++ )
10002f02:	3301      	adds	r3, #1
10002f04:	e7f3      	b.n	10002eee <prvCreateIdleTasks+0x6>
10002f06:	2400      	movs	r4, #0
    for( xCoreID = ( BaseType_t ) 0; xCoreID < ( BaseType_t ) configNUMBER_OF_CORES; xCoreID++ )
10002f08:	2c00      	cmp	r4, #0
10002f0a:	dd02      	ble.n	10002f12 <prvCreateIdleTasks+0x2a>
10002f0c:	2001      	movs	r0, #1
}
10002f0e:	b009      	add	sp, #36	; 0x24
10002f10:	bd30      	pop	{r4, r5, pc}
            StaticTask_t * pxIdleTaskTCBBuffer = NULL;
10002f12:	2500      	movs	r5, #0
10002f14:	9504      	str	r5, [sp, #16]
            StackType_t * pxIdleTaskStackBuffer = NULL;
10002f16:	9505      	str	r5, [sp, #20]
                vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &uxIdleTaskStackSize );
10002f18:	aa06      	add	r2, sp, #24
10002f1a:	a905      	add	r1, sp, #20
10002f1c:	a804      	add	r0, sp, #16
10002f1e:	f7ff ffd7 	bl	10002ed0 <vApplicationGetIdleTaskMemory>
            xIdleTaskHandles[ xCoreID ] = xTaskCreateStatic( pxIdleTaskFunction,
10002f22:	9b04      	ldr	r3, [sp, #16]
10002f24:	9302      	str	r3, [sp, #8]
10002f26:	9b05      	ldr	r3, [sp, #20]
10002f28:	9301      	str	r3, [sp, #4]
10002f2a:	9500      	str	r5, [sp, #0]
10002f2c:	462b      	mov	r3, r5
10002f2e:	9a06      	ldr	r2, [sp, #24]
10002f30:	a907      	add	r1, sp, #28
10002f32:	4806      	ldr	r0, [pc, #24]	; (10002f4c <prvCreateIdleTasks+0x64>)
10002f34:	f7ff fc6c 	bl	10002810 <xTaskCreateStatic>
10002f38:	4b05      	ldr	r3, [pc, #20]	; (10002f50 <prvCreateIdleTasks+0x68>)
10002f3a:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
            if( xIdleTaskHandles[ xCoreID ] != NULL )
10002f3e:	b108      	cbz	r0, 10002f44 <prvCreateIdleTasks+0x5c>
    for( xCoreID = ( BaseType_t ) 0; xCoreID < ( BaseType_t ) configNUMBER_OF_CORES; xCoreID++ )
10002f40:	3401      	adds	r4, #1
10002f42:	e7e1      	b.n	10002f08 <prvCreateIdleTasks+0x20>
                xReturn = pdFAIL;
10002f44:	2000      	movs	r0, #0
10002f46:	e7e2      	b.n	10002f0e <prvCreateIdleTasks+0x26>
10002f48:	10005dcc 	andne	r5, r0, ip, asr #27
10002f4c:	10002b71 	andne	r2, r0, r1, ror fp
10002f50:	38008a9c 	stmdacc	r0, {r2, r3, r4, r7, r9, fp, pc}

10002f54 <vTaskStartScheduler>:
{
10002f54:	b508      	push	{r3, lr}
    xReturn = prvCreateIdleTasks();
10002f56:	f7ff ffc7 	bl	10002ee8 <prvCreateIdleTasks>
        if( xReturn == pdPASS )
10002f5a:	2801      	cmp	r0, #1
10002f5c:	d004      	beq.n	10002f68 <vTaskStartScheduler+0x14>
    if( xReturn == pdPASS )
10002f5e:	2801      	cmp	r0, #1
10002f60:	d005      	beq.n	10002f6e <vTaskStartScheduler+0x1a>
    ( void ) uxTopUsedPriority;
10002f62:	4b0a      	ldr	r3, [pc, #40]	; (10002f8c <vTaskStartScheduler+0x38>)
10002f64:	681b      	ldr	r3, [r3, #0]
}
10002f66:	bd08      	pop	{r3, pc}
            xReturn = xTimerCreateTimerTask();
10002f68:	f000 f9a6 	bl	100032b8 <xTimerCreateTimerTask>
10002f6c:	e7f7      	b.n	10002f5e <vTaskStartScheduler+0xa>
        portDISABLE_INTERRUPTS();
10002f6e:	f000 fc47 	bl	10003800 <ulSetInterruptMask>
        xNextTaskUnblockTime = portMAX_DELAY;
10002f72:	4b07      	ldr	r3, [pc, #28]	; (10002f90 <vTaskStartScheduler+0x3c>)
10002f74:	f04f 32ff 	mov.w	r2, #4294967295
10002f78:	601a      	str	r2, [r3, #0]
        xSchedulerRunning = pdTRUE;
10002f7a:	4b06      	ldr	r3, [pc, #24]	; (10002f94 <vTaskStartScheduler+0x40>)
10002f7c:	2201      	movs	r2, #1
10002f7e:	601a      	str	r2, [r3, #0]
        xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
10002f80:	4b05      	ldr	r3, [pc, #20]	; (10002f98 <vTaskStartScheduler+0x44>)
10002f82:	2200      	movs	r2, #0
10002f84:	601a      	str	r2, [r3, #0]
        ( void ) xPortStartScheduler();
10002f86:	f000 fbf5 	bl	10003774 <xPortStartScheduler>
10002f8a:	e7ea      	b.n	10002f62 <vTaskStartScheduler+0xe>
10002f8c:	3800000c 	stmdacc	r0, {r2, r3}
10002f90:	38008aec 	stmdacc	r0, {r2, r3, r5, r6, r7, r9, fp, pc}
10002f94:	38008b14 	stmdacc	r0, {r2, r4, r8, r9, fp, pc}
10002f98:	38008b50 	stmdacc	r0, {r4, r6, r8, r9, fp, pc}

10002f9c <vApplicationGetTimerTaskMemory>:
                                         configSTACK_DEPTH_TYPE * puxTimerTaskStackSize )
    {
        static StaticTask_t xTimerTaskTCB;
        static StackType_t uxTimerTaskStack[ configTIMER_TASK_STACK_DEPTH ];

        *ppxTimerTaskTCBBuffer = &( xTimerTaskTCB );
10002f9c:	4b03      	ldr	r3, [pc, #12]	; (10002fac <vApplicationGetTimerTaskMemory+0x10>)
10002f9e:	6003      	str	r3, [r0, #0]
        *ppxTimerTaskStackBuffer = &( uxTimerTaskStack[ 0 ] );
10002fa0:	4b03      	ldr	r3, [pc, #12]	; (10002fb0 <vApplicationGetTimerTaskMemory+0x14>)
10002fa2:	600b      	str	r3, [r1, #0]
        *puxTimerTaskStackSize = configTIMER_TASK_STACK_DEPTH;
10002fa4:	2380      	movs	r3, #128	; 0x80
10002fa6:	6013      	str	r3, [r2, #0]
    }
10002fa8:	4770      	bx	lr
10002faa:	bf00      	nop
10002fac:	38008b54 	stmdacc	r0, {r2, r4, r6, r8, r9, fp, pc}
10002fb0:	38008860 	stmdacc	r0, {r5, r6, fp, pc}

10002fb4 <prvGetNextExpireTime>:
         * the timer with the nearest expiry time will expire.  If there are no
         * active timers then just set the next expire time to 0.  That will cause
         * this task to unblock when the tick count overflows, at which point the
         * timer lists will be switched and the next expiry time can be
         * re-assessed.  */
        *pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
10002fb4:	4b06      	ldr	r3, [pc, #24]	; (10002fd0 <prvGetNextExpireTime+0x1c>)
10002fb6:	681a      	ldr	r2, [r3, #0]
10002fb8:	6813      	ldr	r3, [r2, #0]
10002fba:	b92b      	cbnz	r3, 10002fc8 <prvGetNextExpireTime+0x14>
10002fbc:	2301      	movs	r3, #1
10002fbe:	6003      	str	r3, [r0, #0]

        if( *pxListWasEmpty == pdFALSE )
10002fc0:	b923      	cbnz	r3, 10002fcc <prvGetNextExpireTime+0x18>
        {
            xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
10002fc2:	68d3      	ldr	r3, [r2, #12]
10002fc4:	6818      	ldr	r0, [r3, #0]
10002fc6:	4770      	bx	lr
        *pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
10002fc8:	2300      	movs	r3, #0
10002fca:	e7f8      	b.n	10002fbe <prvGetNextExpireTime+0xa>
        }
        else
        {
            /* Ensure the task unblocks when the tick count rolls over. */
            xNextExpireTime = ( TickType_t ) 0U;
10002fcc:	2000      	movs	r0, #0
        }

        return xNextExpireTime;
    }
10002fce:	4770      	bx	lr
10002fd0:	38008ba4 	stmdacc	r0, {r2, r5, r7, r8, r9, fp, pc}

10002fd4 <prvInsertTimerInActiveList>:

    static BaseType_t prvInsertTimerInActiveList( Timer_t * const pxTimer,
                                                  const TickType_t xNextExpiryTime,
                                                  const TickType_t xTimeNow,
                                                  const TickType_t xCommandTime )
    {
10002fd4:	b508      	push	{r3, lr}
        BaseType_t xProcessTimerNow = pdFALSE;

        listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
10002fd6:	6041      	str	r1, [r0, #4]
        listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
10002fd8:	6100      	str	r0, [r0, #16]

        if( xNextExpiryTime <= xTimeNow )
10002fda:	4291      	cmp	r1, r2
10002fdc:	d80c      	bhi.n	10002ff8 <prvInsertTimerInActiveList+0x24>
        {
            /* Has the expiry time elapsed between the command to start/reset a
             * timer was issued, and the time the command was processed? */
            if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks )
10002fde:	1ad2      	subs	r2, r2, r3
10002fe0:	6983      	ldr	r3, [r0, #24]
10002fe2:	429a      	cmp	r2, r3
10002fe4:	d301      	bcc.n	10002fea <prvInsertTimerInActiveList+0x16>
            {
                /* The time between a command being issued and the command being
                 * processed actually exceeds the timers period.  */
                xProcessTimerNow = pdTRUE;
10002fe6:	2001      	movs	r0, #1
                vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
            }
        }

        return xProcessTimerNow;
    }
10002fe8:	bd08      	pop	{r3, pc}
                vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
10002fea:	1d01      	adds	r1, r0, #4
10002fec:	4b09      	ldr	r3, [pc, #36]	; (10003014 <prvInsertTimerInActiveList+0x40>)
10002fee:	6818      	ldr	r0, [r3, #0]
10002ff0:	f7ff f810 	bl	10002014 <vListInsert>
        BaseType_t xProcessTimerNow = pdFALSE;
10002ff4:	2000      	movs	r0, #0
10002ff6:	e7f7      	b.n	10002fe8 <prvInsertTimerInActiveList+0x14>
            if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
10002ff8:	429a      	cmp	r2, r3
10002ffa:	d201      	bcs.n	10003000 <prvInsertTimerInActiveList+0x2c>
10002ffc:	4299      	cmp	r1, r3
10002ffe:	d206      	bcs.n	1000300e <prvInsertTimerInActiveList+0x3a>
                vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
10003000:	1d01      	adds	r1, r0, #4
10003002:	4b05      	ldr	r3, [pc, #20]	; (10003018 <prvInsertTimerInActiveList+0x44>)
10003004:	6818      	ldr	r0, [r3, #0]
10003006:	f7ff f805 	bl	10002014 <vListInsert>
        BaseType_t xProcessTimerNow = pdFALSE;
1000300a:	2000      	movs	r0, #0
1000300c:	e7ec      	b.n	10002fe8 <prvInsertTimerInActiveList+0x14>
                xProcessTimerNow = pdTRUE;
1000300e:	2001      	movs	r0, #1
        return xProcessTimerNow;
10003010:	e7ea      	b.n	10002fe8 <prvInsertTimerInActiveList+0x14>
10003012:	bf00      	nop
10003014:	38008ba8 	stmdacc	r0, {r3, r5, r7, r8, r9, fp, pc}
10003018:	38008ba4 	stmdacc	r0, {r2, r5, r7, r8, r9, fp, pc}

1000301c <prvReloadTimer>:
    {
1000301c:	b570      	push	{r4, r5, r6, lr}
1000301e:	4604      	mov	r4, r0
10003020:	460d      	mov	r5, r1
10003022:	4616      	mov	r6, r2
        while( prvInsertTimerInActiveList( pxTimer, ( xExpiredTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xExpiredTime ) != pdFALSE )
10003024:	e004      	b.n	10003030 <prvReloadTimer+0x14>
            xExpiredTime += pxTimer->xTimerPeriodInTicks;
10003026:	69a3      	ldr	r3, [r4, #24]
10003028:	441d      	add	r5, r3
            pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
1000302a:	6a23      	ldr	r3, [r4, #32]
1000302c:	4620      	mov	r0, r4
1000302e:	4798      	blx	r3
        while( prvInsertTimerInActiveList( pxTimer, ( xExpiredTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xExpiredTime ) != pdFALSE )
10003030:	69a1      	ldr	r1, [r4, #24]
10003032:	462b      	mov	r3, r5
10003034:	4632      	mov	r2, r6
10003036:	4429      	add	r1, r5
10003038:	4620      	mov	r0, r4
1000303a:	f7ff ffcb 	bl	10002fd4 <prvInsertTimerInActiveList>
1000303e:	2800      	cmp	r0, #0
10003040:	d1f1      	bne.n	10003026 <prvReloadTimer+0xa>
    }
10003042:	bd70      	pop	{r4, r5, r6, pc}

10003044 <prvProcessExpiredTimer>:
    {
10003044:	b570      	push	{r4, r5, r6, lr}
10003046:	4605      	mov	r5, r0
10003048:	460e      	mov	r6, r1
        Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList );
1000304a:	4b0d      	ldr	r3, [pc, #52]	; (10003080 <prvProcessExpiredTimer+0x3c>)
1000304c:	681b      	ldr	r3, [r3, #0]
1000304e:	68db      	ldr	r3, [r3, #12]
10003050:	68dc      	ldr	r4, [r3, #12]
        ( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
10003052:	1d20      	adds	r0, r4, #4
10003054:	f7fe fff7 	bl	10002046 <uxListRemove>
        if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0U )
10003058:	f894 3024 	ldrb.w	r3, [r4, #36]	; 0x24
1000305c:	f013 0f04 	tst.w	r3, #4
10003060:	d107      	bne.n	10003072 <prvProcessExpiredTimer+0x2e>
            pxTimer->ucStatus &= ( ( uint8_t ) ~tmrSTATUS_IS_ACTIVE );
10003062:	f023 0301 	bic.w	r3, r3, #1
10003066:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
        pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
1000306a:	6a23      	ldr	r3, [r4, #32]
1000306c:	4620      	mov	r0, r4
1000306e:	4798      	blx	r3
    }
10003070:	bd70      	pop	{r4, r5, r6, pc}
            prvReloadTimer( pxTimer, xNextExpireTime, xTimeNow );
10003072:	4632      	mov	r2, r6
10003074:	4629      	mov	r1, r5
10003076:	4620      	mov	r0, r4
10003078:	f7ff ffd0 	bl	1000301c <prvReloadTimer>
1000307c:	e7f5      	b.n	1000306a <prvProcessExpiredTimer+0x26>
1000307e:	bf00      	nop
10003080:	38008ba4 	stmdacc	r0, {r2, r5, r7, r8, r9, fp, pc}

10003084 <prvSwitchTimerLists>:
        }
    }
/*-----------------------------------------------------------*/

    static void prvSwitchTimerLists( void )
    {
10003084:	b508      	push	{r3, lr}

        /* The tick count has overflowed.  The timer lists must be switched.
         * If there are any timers still referenced from the current timer list
         * then they must have expired and should be processed before the lists
         * are switched. */
        while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
10003086:	e005      	b.n	10003094 <prvSwitchTimerLists+0x10>
        {
            xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
10003088:	68db      	ldr	r3, [r3, #12]

            /* Process the expired timer.  For auto-reload timers, be careful to
             * process only expirations that occur on the current list.  Further
             * expirations must wait until after the lists are switched. */
            prvProcessExpiredTimer( xNextExpireTime, tmrMAX_TIME_BEFORE_OVERFLOW );
1000308a:	f04f 31ff 	mov.w	r1, #4294967295
1000308e:	6818      	ldr	r0, [r3, #0]
10003090:	f7ff ffd8 	bl	10003044 <prvProcessExpiredTimer>
        while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
10003094:	4b05      	ldr	r3, [pc, #20]	; (100030ac <prvSwitchTimerLists+0x28>)
10003096:	681b      	ldr	r3, [r3, #0]
10003098:	681a      	ldr	r2, [r3, #0]
1000309a:	2a00      	cmp	r2, #0
1000309c:	d1f4      	bne.n	10003088 <prvSwitchTimerLists+0x4>
        }

        pxTemp = pxCurrentTimerList;
        pxCurrentTimerList = pxOverflowTimerList;
1000309e:	4a04      	ldr	r2, [pc, #16]	; (100030b0 <prvSwitchTimerLists+0x2c>)
100030a0:	6810      	ldr	r0, [r2, #0]
100030a2:	4902      	ldr	r1, [pc, #8]	; (100030ac <prvSwitchTimerLists+0x28>)
100030a4:	6008      	str	r0, [r1, #0]
        pxOverflowTimerList = pxTemp;
100030a6:	6013      	str	r3, [r2, #0]
    }
100030a8:	bd08      	pop	{r3, pc}
100030aa:	bf00      	nop
100030ac:	38008ba4 	stmdacc	r0, {r2, r5, r7, r8, r9, fp, pc}
100030b0:	38008ba8 	stmdacc	r0, {r3, r5, r7, r8, r9, fp, pc}

100030b4 <prvSampleTimeNow>:
    {
100030b4:	b538      	push	{r3, r4, r5, lr}
100030b6:	4605      	mov	r5, r0
        xTimeNow = xTaskGetTickCount();
100030b8:	f7ff fbd8 	bl	1000286c <xTaskGetTickCount>
100030bc:	4604      	mov	r4, r0
        if( xTimeNow < xLastTime )
100030be:	4b07      	ldr	r3, [pc, #28]	; (100030dc <prvSampleTimeNow+0x28>)
100030c0:	681b      	ldr	r3, [r3, #0]
100030c2:	4283      	cmp	r3, r0
100030c4:	d805      	bhi.n	100030d2 <prvSampleTimeNow+0x1e>
            *pxTimerListsWereSwitched = pdFALSE;
100030c6:	2300      	movs	r3, #0
100030c8:	602b      	str	r3, [r5, #0]
        xLastTime = xTimeNow;
100030ca:	4b04      	ldr	r3, [pc, #16]	; (100030dc <prvSampleTimeNow+0x28>)
100030cc:	601c      	str	r4, [r3, #0]
    }
100030ce:	4620      	mov	r0, r4
100030d0:	bd38      	pop	{r3, r4, r5, pc}
            prvSwitchTimerLists();
100030d2:	f7ff ffd7 	bl	10003084 <prvSwitchTimerLists>
            *pxTimerListsWereSwitched = pdTRUE;
100030d6:	2301      	movs	r3, #1
100030d8:	602b      	str	r3, [r5, #0]
100030da:	e7f6      	b.n	100030ca <prvSampleTimeNow+0x16>
100030dc:	38008c84 	stmdacc	r0, {r2, r7, sl, fp, pc}

100030e0 <prvProcessTimerOrBlockTask>:
    {
100030e0:	b570      	push	{r4, r5, r6, lr}
100030e2:	b082      	sub	sp, #8
100030e4:	4606      	mov	r6, r0
100030e6:	460c      	mov	r4, r1
        vTaskSuspendAll();
100030e8:	f7ff fbb8 	bl	1000285c <vTaskSuspendAll>
            xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
100030ec:	a801      	add	r0, sp, #4
100030ee:	f7ff ffe1 	bl	100030b4 <prvSampleTimeNow>
            if( xTimerListsWereSwitched == pdFALSE )
100030f2:	9b01      	ldr	r3, [sp, #4]
100030f4:	bb03      	cbnz	r3, 10003138 <prvProcessTimerOrBlockTask+0x58>
100030f6:	4605      	mov	r5, r0
                if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
100030f8:	b90c      	cbnz	r4, 100030fe <prvProcessTimerOrBlockTask+0x1e>
100030fa:	42b0      	cmp	r0, r6
100030fc:	d210      	bcs.n	10003120 <prvProcessTimerOrBlockTask+0x40>
                    if( xListWasEmpty != pdFALSE )
100030fe:	b124      	cbz	r4, 1000310a <prvProcessTimerOrBlockTask+0x2a>
                        xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
10003100:	4a0f      	ldr	r2, [pc, #60]	; (10003140 <prvProcessTimerOrBlockTask+0x60>)
10003102:	6812      	ldr	r2, [r2, #0]
10003104:	6812      	ldr	r2, [r2, #0]
10003106:	b992      	cbnz	r2, 1000312e <prvProcessTimerOrBlockTask+0x4e>
10003108:	2401      	movs	r4, #1
                    vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
1000310a:	4622      	mov	r2, r4
1000310c:	1b71      	subs	r1, r6, r5
1000310e:	4b0d      	ldr	r3, [pc, #52]	; (10003144 <prvProcessTimerOrBlockTask+0x64>)
10003110:	6818      	ldr	r0, [r3, #0]
10003112:	f7ff f95b 	bl	100023cc <vQueueWaitForMessageRestricted>
                    if( xTaskResumeAll() == pdFALSE )
10003116:	f7ff fc83 	bl	10002a20 <xTaskResumeAll>
1000311a:	b150      	cbz	r0, 10003132 <prvProcessTimerOrBlockTask+0x52>
    }
1000311c:	b002      	add	sp, #8
1000311e:	bd70      	pop	{r4, r5, r6, pc}
                    ( void ) xTaskResumeAll();
10003120:	f7ff fc7e 	bl	10002a20 <xTaskResumeAll>
                    prvProcessExpiredTimer( xNextExpireTime, xTimeNow );
10003124:	4629      	mov	r1, r5
10003126:	4630      	mov	r0, r6
10003128:	f7ff ff8c 	bl	10003044 <prvProcessExpiredTimer>
1000312c:	e7f6      	b.n	1000311c <prvProcessTimerOrBlockTask+0x3c>
                        xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
1000312e:	461c      	mov	r4, r3
10003130:	e7eb      	b.n	1000310a <prvProcessTimerOrBlockTask+0x2a>
                        taskYIELD_WITHIN_API();
10003132:	f000 fa93 	bl	1000365c <vPortYield>
10003136:	e7f1      	b.n	1000311c <prvProcessTimerOrBlockTask+0x3c>
                ( void ) xTaskResumeAll();
10003138:	f7ff fc72 	bl	10002a20 <xTaskResumeAll>
    }
1000313c:	e7ee      	b.n	1000311c <prvProcessTimerOrBlockTask+0x3c>
1000313e:	bf00      	nop
10003140:	38008ba8 	stmdacc	r0, {r3, r5, r7, r8, r9, fp, pc}
10003144:	38008ce4 	stmdacc	r0, {r2, r5, r6, r7, sl, fp, pc}

10003148 <prvProcessReceivedCommands>:
    {
10003148:	b530      	push	{r4, r5, lr}
1000314a:	b087      	sub	sp, #28
        DaemonTaskMessage_t xMessage = { 0 };
1000314c:	2300      	movs	r3, #0
1000314e:	9302      	str	r3, [sp, #8]
10003150:	9303      	str	r3, [sp, #12]
10003152:	9304      	str	r3, [sp, #16]
10003154:	9305      	str	r3, [sp, #20]
        while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL )
10003156:	e002      	b.n	1000315e <prvProcessReceivedCommands+0x16>
            if( xMessage.xMessageID >= ( BaseType_t ) 0 )
10003158:	9b02      	ldr	r3, [sp, #8]
1000315a:	2b00      	cmp	r3, #0
1000315c:	da0f      	bge.n	1000317e <prvProcessReceivedCommands+0x36>
        while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL )
1000315e:	2200      	movs	r2, #0
10003160:	a902      	add	r1, sp, #8
10003162:	4b36      	ldr	r3, [pc, #216]	; (1000323c <prvProcessReceivedCommands+0xf4>)
10003164:	6818      	ldr	r0, [r3, #0]
10003166:	f7ff f8b9 	bl	100022dc <xQueueReceive>
1000316a:	2800      	cmp	r0, #0
1000316c:	d064      	beq.n	10003238 <prvProcessReceivedCommands+0xf0>
                if( xMessage.xMessageID < ( BaseType_t ) 0 )
1000316e:	9b02      	ldr	r3, [sp, #8]
10003170:	2b00      	cmp	r3, #0
10003172:	daf1      	bge.n	10003158 <prvProcessReceivedCommands+0x10>
                    pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
10003174:	9905      	ldr	r1, [sp, #20]
10003176:	9804      	ldr	r0, [sp, #16]
10003178:	9b03      	ldr	r3, [sp, #12]
1000317a:	4798      	blx	r3
1000317c:	e7ec      	b.n	10003158 <prvProcessReceivedCommands+0x10>
                pxTimer = xMessage.u.xTimerParameters.pxTimer;
1000317e:	9c04      	ldr	r4, [sp, #16]
                if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE )
10003180:	6963      	ldr	r3, [r4, #20]
10003182:	b113      	cbz	r3, 1000318a <prvProcessReceivedCommands+0x42>
                    ( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
10003184:	1d20      	adds	r0, r4, #4
10003186:	f7fe ff5e 	bl	10002046 <uxListRemove>
                xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
1000318a:	a801      	add	r0, sp, #4
1000318c:	f7ff ff92 	bl	100030b4 <prvSampleTimeNow>
10003190:	4605      	mov	r5, r0
                switch( xMessage.xMessageID )
10003192:	9b02      	ldr	r3, [sp, #8]
10003194:	3b01      	subs	r3, #1
10003196:	2b08      	cmp	r3, #8
10003198:	d8e1      	bhi.n	1000315e <prvProcessReceivedCommands+0x16>
1000319a:	e8df f003 	tbb	[pc, r3]
1000319e:	30290505 	eorcc	r0, r9, r5, lsl #10
100031a2:	2905053f 	stmdbcs	r5, {r0, r1, r2, r3, r4, r5, r8, sl}
100031a6:	f8940030 			; <UNDEFINED> instruction: 0xf8940030
                        pxTimer->ucStatus |= ( uint8_t ) tmrSTATUS_IS_ACTIVE;
100031aa:	3024      	adds	r0, #36	; 0x24
100031ac:	f043 0301 	orr.w	r3, r3, #1
100031b0:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
                        if( prvInsertTimerInActiveList( pxTimer, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
100031b4:	9b03      	ldr	r3, [sp, #12]
100031b6:	69a1      	ldr	r1, [r4, #24]
100031b8:	4602      	mov	r2, r0
100031ba:	4419      	add	r1, r3
100031bc:	4620      	mov	r0, r4
100031be:	f7ff ff09 	bl	10002fd4 <prvInsertTimerInActiveList>
100031c2:	2800      	cmp	r0, #0
100031c4:	d0cb      	beq.n	1000315e <prvProcessReceivedCommands+0x16>
                            if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0U )
100031c6:	f894 3024 	ldrb.w	r3, [r4, #36]	; 0x24
100031ca:	f013 0f04 	tst.w	r3, #4
100031ce:	d107      	bne.n	100031e0 <prvProcessReceivedCommands+0x98>
                                pxTimer->ucStatus &= ( ( uint8_t ) ~tmrSTATUS_IS_ACTIVE );
100031d0:	f023 0301 	bic.w	r3, r3, #1
100031d4:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
                            pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
100031d8:	6a23      	ldr	r3, [r4, #32]
100031da:	4620      	mov	r0, r4
100031dc:	4798      	blx	r3
100031de:	e7be      	b.n	1000315e <prvProcessReceivedCommands+0x16>
                                prvReloadTimer( pxTimer, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow );
100031e0:	69a3      	ldr	r3, [r4, #24]
100031e2:	462a      	mov	r2, r5
100031e4:	9903      	ldr	r1, [sp, #12]
100031e6:	4419      	add	r1, r3
100031e8:	4620      	mov	r0, r4
100031ea:	f7ff ff17 	bl	1000301c <prvReloadTimer>
100031ee:	e7f3      	b.n	100031d8 <prvProcessReceivedCommands+0x90>
                        pxTimer->ucStatus &= ( ( uint8_t ) ~tmrSTATUS_IS_ACTIVE );
100031f0:	f894 3024 	ldrb.w	r3, [r4, #36]	; 0x24
100031f4:	f023 0301 	bic.w	r3, r3, #1
100031f8:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
                        break;
100031fc:	e7af      	b.n	1000315e <prvProcessReceivedCommands+0x16>
                        pxTimer->ucStatus |= ( uint8_t ) tmrSTATUS_IS_ACTIVE;
100031fe:	f894 3024 	ldrb.w	r3, [r4, #36]	; 0x24
10003202:	f043 0301 	orr.w	r3, r3, #1
10003206:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
                        pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
1000320a:	9903      	ldr	r1, [sp, #12]
1000320c:	61a1      	str	r1, [r4, #24]
                        ( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
1000320e:	4603      	mov	r3, r0
10003210:	4602      	mov	r2, r0
10003212:	4401      	add	r1, r0
10003214:	4620      	mov	r0, r4
10003216:	f7ff fedd 	bl	10002fd4 <prvInsertTimerInActiveList>
                        break;
1000321a:	e7a0      	b.n	1000315e <prvProcessReceivedCommands+0x16>
                            if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
1000321c:	f894 3024 	ldrb.w	r3, [r4, #36]	; 0x24
10003220:	f013 0f02 	tst.w	r3, #2
10003224:	d004      	beq.n	10003230 <prvProcessReceivedCommands+0xe8>
                                pxTimer->ucStatus &= ( ( uint8_t ) ~tmrSTATUS_IS_ACTIVE );
10003226:	f023 0301 	bic.w	r3, r3, #1
1000322a:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
1000322e:	e796      	b.n	1000315e <prvProcessReceivedCommands+0x16>
                                vPortFree( pxTimer );
10003230:	4620      	mov	r0, r4
10003232:	f000 f937 	bl	100034a4 <vPortFree>
10003236:	e792      	b.n	1000315e <prvProcessReceivedCommands+0x16>
    }
10003238:	b007      	add	sp, #28
1000323a:	bd30      	pop	{r4, r5, pc}
1000323c:	38008ce4 	stmdacc	r0, {r2, r5, r6, r7, sl, fp, pc}

10003240 <prvTimerTask>:
    {
10003240:	b500      	push	{lr}
10003242:	b083      	sub	sp, #12
            xNextExpireTime = prvGetNextExpireTime( &xListWasEmpty );
10003244:	a801      	add	r0, sp, #4
10003246:	f7ff feb5 	bl	10002fb4 <prvGetNextExpireTime>
            prvProcessTimerOrBlockTask( xNextExpireTime, xListWasEmpty );
1000324a:	9901      	ldr	r1, [sp, #4]
1000324c:	f7ff ff48 	bl	100030e0 <prvProcessTimerOrBlockTask>
            prvProcessReceivedCommands();
10003250:	f7ff ff7a 	bl	10003148 <prvProcessReceivedCommands>
        for( ; configCONTROL_INFINITE_LOOP(); )
10003254:	e7f6      	b.n	10003244 <prvTimerTask+0x4>
	...

10003258 <prvCheckForValidListAndQueue>:
/*-----------------------------------------------------------*/

    static void prvCheckForValidListAndQueue( void )
    {
10003258:	b530      	push	{r4, r5, lr}
1000325a:	b083      	sub	sp, #12
        /* Check that the list from which active timers are referenced, and the
         * queue used to communicate with the timer service, have been
         * initialised. */
        taskENTER_CRITICAL();
1000325c:	f000 fa0a 	bl	10003674 <vPortEnterCritical>
        {
            if( xTimerQueue == NULL )
10003260:	4b0e      	ldr	r3, [pc, #56]	; (1000329c <prvCheckForValidListAndQueue+0x44>)
10003262:	681b      	ldr	r3, [r3, #0]
10003264:	b11b      	cbz	r3, 1000326e <prvCheckForValidListAndQueue+0x16>
            else
            {
                mtCOVERAGE_TEST_MARKER();
            }
        }
        taskEXIT_CRITICAL();
10003266:	f000 fa13 	bl	10003690 <vPortExitCritical>
    }
1000326a:	b003      	add	sp, #12
1000326c:	bd30      	pop	{r4, r5, pc}
                vListInitialise( &xActiveTimerList1 );
1000326e:	4d0c      	ldr	r5, [pc, #48]	; (100032a0 <prvCheckForValidListAndQueue+0x48>)
10003270:	4628      	mov	r0, r5
10003272:	f7fe febf 	bl	10001ff4 <vListInitialise>
                vListInitialise( &xActiveTimerList2 );
10003276:	4c0b      	ldr	r4, [pc, #44]	; (100032a4 <prvCheckForValidListAndQueue+0x4c>)
10003278:	4620      	mov	r0, r4
1000327a:	f7fe febb 	bl	10001ff4 <vListInitialise>
                pxCurrentTimerList = &xActiveTimerList1;
1000327e:	4b0a      	ldr	r3, [pc, #40]	; (100032a8 <prvCheckForValidListAndQueue+0x50>)
10003280:	601d      	str	r5, [r3, #0]
                pxOverflowTimerList = &xActiveTimerList2;
10003282:	4b0a      	ldr	r3, [pc, #40]	; (100032ac <prvCheckForValidListAndQueue+0x54>)
10003284:	601c      	str	r4, [r3, #0]
                    xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
10003286:	2300      	movs	r3, #0
10003288:	9300      	str	r3, [sp, #0]
1000328a:	4b09      	ldr	r3, [pc, #36]	; (100032b0 <prvCheckForValidListAndQueue+0x58>)
1000328c:	4a09      	ldr	r2, [pc, #36]	; (100032b4 <prvCheckForValidListAndQueue+0x5c>)
1000328e:	2110      	movs	r1, #16
10003290:	200a      	movs	r0, #10
10003292:	f7ff f804 	bl	1000229e <xQueueGenericCreateStatic>
10003296:	4b01      	ldr	r3, [pc, #4]	; (1000329c <prvCheckForValidListAndQueue+0x44>)
10003298:	6018      	str	r0, [r3, #0]
1000329a:	e7e4      	b.n	10003266 <prvCheckForValidListAndQueue+0xe>
1000329c:	38008ce4 	stmdacc	r0, {r2, r5, r6, r7, sl, fp, pc}
100032a0:	38008c4c 	stmdacc	r0, {r2, r3, r6, sl, fp, pc}
100032a4:	38008c68 	stmdacc	r0, {r3, r5, r6, sl, fp, pc}
100032a8:	38008ba4 	stmdacc	r0, {r2, r5, r7, r8, r9, fp, pc}
100032ac:	38008ba8 	stmdacc	r0, {r3, r5, r7, r8, r9, fp, pc}
100032b0:	38008c88 	stmdacc	r0, {r3, r7, sl, fp, pc}
100032b4:	38008bac 	stmdacc	r0, {r2, r3, r5, r7, r8, r9, fp, pc}

100032b8 <xTimerCreateTimerTask>:
    {
100032b8:	b510      	push	{r4, lr}
100032ba:	b088      	sub	sp, #32
        prvCheckForValidListAndQueue();
100032bc:	f7ff ffcc 	bl	10003258 <prvCheckForValidListAndQueue>
        if( xTimerQueue != NULL )
100032c0:	4b10      	ldr	r3, [pc, #64]	; (10003304 <xTimerCreateTimerTask+0x4c>)
100032c2:	681b      	ldr	r3, [r3, #0]
100032c4:	b1d3      	cbz	r3, 100032fc <xTimerCreateTimerTask+0x44>
                    StaticTask_t * pxTimerTaskTCBBuffer = NULL;
100032c6:	2400      	movs	r4, #0
100032c8:	9405      	str	r4, [sp, #20]
                    StackType_t * pxTimerTaskStackBuffer = NULL;
100032ca:	9406      	str	r4, [sp, #24]
                    vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &uxTimerTaskStackSize );
100032cc:	aa07      	add	r2, sp, #28
100032ce:	a906      	add	r1, sp, #24
100032d0:	a805      	add	r0, sp, #20
100032d2:	f7ff fe63 	bl	10002f9c <vApplicationGetTimerTaskMemory>
                    xTimerTaskHandle = xTaskCreateStatic( prvTimerTask,
100032d6:	9b05      	ldr	r3, [sp, #20]
100032d8:	9302      	str	r3, [sp, #8]
100032da:	9b06      	ldr	r3, [sp, #24]
100032dc:	9301      	str	r3, [sp, #4]
100032de:	2304      	movs	r3, #4
100032e0:	9300      	str	r3, [sp, #0]
100032e2:	4623      	mov	r3, r4
100032e4:	9a07      	ldr	r2, [sp, #28]
100032e6:	4908      	ldr	r1, [pc, #32]	; (10003308 <xTimerCreateTimerTask+0x50>)
100032e8:	4808      	ldr	r0, [pc, #32]	; (1000330c <xTimerCreateTimerTask+0x54>)
100032ea:	f7ff fa91 	bl	10002810 <xTaskCreateStatic>
100032ee:	4b08      	ldr	r3, [pc, #32]	; (10003310 <xTimerCreateTimerTask+0x58>)
100032f0:	6018      	str	r0, [r3, #0]
                    if( xTimerTaskHandle != NULL )
100032f2:	b108      	cbz	r0, 100032f8 <xTimerCreateTimerTask+0x40>
                        xReturn = pdPASS;
100032f4:	2001      	movs	r0, #1
100032f6:	e002      	b.n	100032fe <xTimerCreateTimerTask+0x46>
        BaseType_t xReturn = pdFAIL;
100032f8:	4620      	mov	r0, r4
100032fa:	e000      	b.n	100032fe <xTimerCreateTimerTask+0x46>
100032fc:	2000      	movs	r0, #0
    }
100032fe:	b008      	add	sp, #32
10003300:	bd10      	pop	{r4, pc}
10003302:	bf00      	nop
10003304:	38008ce4 	stmdacc	r0, {r2, r5, r6, r7, sl, fp, pc}
10003308:	10005dd4 	ldrdne	r5, [r0], -r4
1000330c:	10003241 	andne	r3, r0, r1, asr #4
10003310:	38008ce8 	stmdacc	r0, {r3, r5, r6, r7, sl, fp, pc}

10003314 <prvHeapInit>:
    BlockLink_t * pxFirstFreeBlock;
    portPOINTER_SIZE_TYPE uxStartAddress, uxEndAddress;
    size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;

    /* Ensure the heap starts on a correctly aligned boundary. */
    uxStartAddress = ( portPOINTER_SIZE_TYPE ) ucHeap;
10003314:	4a10      	ldr	r2, [pc, #64]	; (10003358 <prvHeapInit+0x44>)

    if( ( uxStartAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
10003316:	f012 0f07 	tst.w	r2, #7
1000331a:	d01a      	beq.n	10003352 <prvHeapInit+0x3e>
    {
        uxStartAddress += ( portBYTE_ALIGNMENT - 1 );
1000331c:	1dd1      	adds	r1, r2, #7
        uxStartAddress &= ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK );
1000331e:	f021 0107 	bic.w	r1, r1, #7
        xTotalHeapSize -= ( size_t ) ( uxStartAddress - ( portPOINTER_SIZE_TYPE ) ucHeap );
10003322:	f5c1 4300 	rsb	r3, r1, #32768	; 0x8000
10003326:	4413      	add	r3, r2
        uxStartAddress &= ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK );
10003328:	460a      	mov	r2, r1
    }
    #endif

    /* xStart is used to hold a pointer to the first item in the list of free
     * blocks.  The void cast is used to prevent compiler warnings. */
    xStart.pxNextFreeBlock = ( void * ) heapPROTECT_BLOCK_POINTER( uxStartAddress );
1000332a:	480c      	ldr	r0, [pc, #48]	; (1000335c <prvHeapInit+0x48>)
1000332c:	6002      	str	r2, [r0, #0]
    xStart.xBlockSize = ( size_t ) 0;
1000332e:	2100      	movs	r1, #0
10003330:	6041      	str	r1, [r0, #4]

    /* pxEnd is used to mark the end of the list of free blocks and is inserted
     * at the end of the heap space. */
    uxEndAddress = uxStartAddress + ( portPOINTER_SIZE_TYPE ) xTotalHeapSize;
10003332:	4413      	add	r3, r2
    uxEndAddress -= ( portPOINTER_SIZE_TYPE ) xHeapStructSize;
10003334:	3b08      	subs	r3, #8
    uxEndAddress &= ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK );
10003336:	f023 0307 	bic.w	r3, r3, #7
    pxEnd = ( BlockLink_t * ) uxEndAddress;
1000333a:	4809      	ldr	r0, [pc, #36]	; (10003360 <prvHeapInit+0x4c>)
1000333c:	6003      	str	r3, [r0, #0]
    pxEnd->xBlockSize = 0;
1000333e:	6059      	str	r1, [r3, #4]
    pxEnd->pxNextFreeBlock = heapPROTECT_BLOCK_POINTER( NULL );
10003340:	6019      	str	r1, [r3, #0]

    /* To start with there is a single free block that is sized to take up the
     * entire heap space, minus the space taken by pxEnd. */
    pxFirstFreeBlock = ( BlockLink_t * ) uxStartAddress;
    pxFirstFreeBlock->xBlockSize = ( size_t ) ( uxEndAddress - ( portPOINTER_SIZE_TYPE ) pxFirstFreeBlock );
10003342:	1a99      	subs	r1, r3, r2
10003344:	6051      	str	r1, [r2, #4]
    pxFirstFreeBlock->pxNextFreeBlock = heapPROTECT_BLOCK_POINTER( pxEnd );
10003346:	6013      	str	r3, [r2, #0]

    /* Only one block exists - and it covers the entire usable heap space. */
    xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
10003348:	4b06      	ldr	r3, [pc, #24]	; (10003364 <prvHeapInit+0x50>)
1000334a:	6019      	str	r1, [r3, #0]
    xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
1000334c:	4b06      	ldr	r3, [pc, #24]	; (10003368 <prvHeapInit+0x54>)
1000334e:	6019      	str	r1, [r3, #0]
}
10003350:	4770      	bx	lr
    size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;
10003352:	f44f 4300 	mov.w	r3, #32768	; 0x8000
10003356:	e7e8      	b.n	1000332a <prvHeapInit+0x16>
10003358:	38000470 	stmdacc	r0, {r4, r5, r6, sl}
1000335c:	38008d00 	stmdacc	r0, {r8, sl, fp, pc}
10003360:	38008cec 	stmdacc	r0, {r2, r3, r5, r6, r7, sl, fp, pc}
10003364:	38008cf4 	stmdacc	r0, {r2, r4, r5, r6, r7, sl, fp, pc}
10003368:	38008cf0 	stmdacc	r0, {r4, r5, r6, r7, sl, fp, pc}

1000336c <prvInsertBlockIntoFreeList>:
    BlockLink_t * pxIterator;
    uint8_t * puc;

    /* Iterate through the list until a block is found that has a higher address
     * than the block being inserted. */
    for( pxIterator = &xStart; heapPROTECT_BLOCK_POINTER( pxIterator->pxNextFreeBlock ) < pxBlockToInsert; pxIterator = heapPROTECT_BLOCK_POINTER( pxIterator->pxNextFreeBlock ) )
1000336c:	4b16      	ldr	r3, [pc, #88]	; (100033c8 <prvInsertBlockIntoFreeList+0x5c>)
1000336e:	461a      	mov	r2, r3
10003370:	681b      	ldr	r3, [r3, #0]
10003372:	4283      	cmp	r3, r0
10003374:	d3fb      	bcc.n	1000336e <prvInsertBlockIntoFreeList+0x2>

    /* Do the block being inserted, and the block it is being inserted after
     * make a contiguous block of memory? */
    puc = ( uint8_t * ) pxIterator;

    if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
10003376:	6851      	ldr	r1, [r2, #4]
10003378:	eb02 0c01 	add.w	ip, r2, r1
1000337c:	4584      	cmp	ip, r0
1000337e:	d009      	beq.n	10003394 <prvInsertBlockIntoFreeList+0x28>

    /* Do the block being inserted, and the block it is being inserted before
     * make a contiguous block of memory? */
    puc = ( uint8_t * ) pxBlockToInsert;

    if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) heapPROTECT_BLOCK_POINTER( pxIterator->pxNextFreeBlock ) )
10003380:	6841      	ldr	r1, [r0, #4]
10003382:	eb00 0c01 	add.w	ip, r0, r1
10003386:	4563      	cmp	r3, ip
10003388:	d009      	beq.n	1000339e <prvInsertBlockIntoFreeList+0x32>
            pxBlockToInsert->pxNextFreeBlock = heapPROTECT_BLOCK_POINTER( pxEnd );
        }
    }
    else
    {
        pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;
1000338a:	6003      	str	r3, [r0, #0]

    /* If the block being inserted plugged a gab, so was merged with the block
     * before and the block after, then it's pxNextFreeBlock pointer will have
     * already been set, and should not be set here as that would make it point
     * to itself. */
    if( pxIterator != pxBlockToInsert )
1000338c:	4290      	cmp	r0, r2
1000338e:	d019      	beq.n	100033c4 <prvInsertBlockIntoFreeList+0x58>
    {
        pxIterator->pxNextFreeBlock = heapPROTECT_BLOCK_POINTER( pxBlockToInsert );
10003390:	6010      	str	r0, [r2, #0]
    }
    else
    {
        mtCOVERAGE_TEST_MARKER();
10003392:	4770      	bx	lr
        pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
10003394:	6840      	ldr	r0, [r0, #4]
10003396:	4401      	add	r1, r0
10003398:	6051      	str	r1, [r2, #4]
        pxBlockToInsert = pxIterator;
1000339a:	4610      	mov	r0, r2
1000339c:	e7f0      	b.n	10003380 <prvInsertBlockIntoFreeList+0x14>
{
1000339e:	b410      	push	{r4}
        if( heapPROTECT_BLOCK_POINTER( pxIterator->pxNextFreeBlock ) != pxEnd )
100033a0:	4c0a      	ldr	r4, [pc, #40]	; (100033cc <prvInsertBlockIntoFreeList+0x60>)
100033a2:	6824      	ldr	r4, [r4, #0]
100033a4:	42a3      	cmp	r3, r4
100033a6:	d00b      	beq.n	100033c0 <prvInsertBlockIntoFreeList+0x54>
            pxBlockToInsert->xBlockSize += heapPROTECT_BLOCK_POINTER( pxIterator->pxNextFreeBlock )->xBlockSize;
100033a8:	685b      	ldr	r3, [r3, #4]
100033aa:	4419      	add	r1, r3
100033ac:	6041      	str	r1, [r0, #4]
            pxBlockToInsert->pxNextFreeBlock = heapPROTECT_BLOCK_POINTER( pxIterator->pxNextFreeBlock )->pxNextFreeBlock;
100033ae:	6813      	ldr	r3, [r2, #0]
100033b0:	681b      	ldr	r3, [r3, #0]
100033b2:	6003      	str	r3, [r0, #0]
    if( pxIterator != pxBlockToInsert )
100033b4:	4290      	cmp	r0, r2
100033b6:	d000      	beq.n	100033ba <prvInsertBlockIntoFreeList+0x4e>
        pxIterator->pxNextFreeBlock = heapPROTECT_BLOCK_POINTER( pxBlockToInsert );
100033b8:	6010      	str	r0, [r2, #0]
    }
}
100033ba:	f85d 4b04 	ldr.w	r4, [sp], #4
100033be:	4770      	bx	lr
            pxBlockToInsert->pxNextFreeBlock = heapPROTECT_BLOCK_POINTER( pxEnd );
100033c0:	6004      	str	r4, [r0, #0]
100033c2:	e7f7      	b.n	100033b4 <prvInsertBlockIntoFreeList+0x48>
100033c4:	4770      	bx	lr
100033c6:	bf00      	nop
100033c8:	38008d00 	stmdacc	r0, {r8, sl, fp, pc}
100033cc:	38008cec 	stmdacc	r0, {r2, r3, r5, r6, r7, sl, fp, pc}

100033d0 <pvPortMalloc>:
{
100033d0:	b570      	push	{r4, r5, r6, lr}
    if( xWantedSize > 0 )
100033d2:	4604      	mov	r4, r0
100033d4:	b170      	cbz	r0, 100033f4 <pvPortMalloc+0x24>
        if( heapADD_WILL_OVERFLOW( xWantedSize, xHeapStructSize ) == 0 )
100033d6:	f110 0f09 	cmn.w	r0, #9
100033da:	d80a      	bhi.n	100033f2 <pvPortMalloc+0x22>
            xWantedSize += xHeapStructSize;
100033dc:	3408      	adds	r4, #8
            if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
100033de:	f014 0307 	ands.w	r3, r4, #7
100033e2:	d007      	beq.n	100033f4 <pvPortMalloc+0x24>
                xAdditionalRequiredSize = portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK );
100033e4:	f1c3 0308 	rsb	r3, r3, #8
                if( heapADD_WILL_OVERFLOW( xWantedSize, xAdditionalRequiredSize ) == 0 )
100033e8:	43da      	mvns	r2, r3
100033ea:	42a2      	cmp	r2, r4
100033ec:	d312      	bcc.n	10003414 <pvPortMalloc+0x44>
                    xWantedSize += xAdditionalRequiredSize;
100033ee:	441c      	add	r4, r3
100033f0:	e000      	b.n	100033f4 <pvPortMalloc+0x24>
            xWantedSize = 0;
100033f2:	2400      	movs	r4, #0
    vTaskSuspendAll();
100033f4:	f7ff fa32 	bl	1000285c <vTaskSuspendAll>
        if( pxEnd == NULL )
100033f8:	4b25      	ldr	r3, [pc, #148]	; (10003490 <pvPortMalloc+0xc0>)
100033fa:	681b      	ldr	r3, [r3, #0]
100033fc:	b163      	cbz	r3, 10003418 <pvPortMalloc+0x48>
        if( heapBLOCK_SIZE_IS_VALID( xWantedSize ) != 0 )
100033fe:	2c00      	cmp	r4, #0
10003400:	db3e      	blt.n	10003480 <pvPortMalloc+0xb0>
            if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
10003402:	2c00      	cmp	r4, #0
10003404:	d03e      	beq.n	10003484 <pvPortMalloc+0xb4>
10003406:	4b23      	ldr	r3, [pc, #140]	; (10003494 <pvPortMalloc+0xc4>)
10003408:	681e      	ldr	r6, [r3, #0]
1000340a:	42a6      	cmp	r6, r4
1000340c:	d33c      	bcc.n	10003488 <pvPortMalloc+0xb8>
                pxBlock = heapPROTECT_BLOCK_POINTER( xStart.pxNextFreeBlock );
1000340e:	4922      	ldr	r1, [pc, #136]	; (10003498 <pvPortMalloc+0xc8>)
10003410:	680b      	ldr	r3, [r1, #0]
                while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != heapPROTECT_BLOCK_POINTER( NULL ) ) )
10003412:	e006      	b.n	10003422 <pvPortMalloc+0x52>
                    xWantedSize = 0;
10003414:	2400      	movs	r4, #0
10003416:	e7ed      	b.n	100033f4 <pvPortMalloc+0x24>
            prvHeapInit();
10003418:	f7ff ff7c 	bl	10003314 <prvHeapInit>
1000341c:	e7ef      	b.n	100033fe <pvPortMalloc+0x2e>
                    pxPreviousBlock = pxBlock;
1000341e:	4619      	mov	r1, r3
                    pxBlock = heapPROTECT_BLOCK_POINTER( pxBlock->pxNextFreeBlock );
10003420:	4613      	mov	r3, r2
                while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != heapPROTECT_BLOCK_POINTER( NULL ) ) )
10003422:	685a      	ldr	r2, [r3, #4]
10003424:	42a2      	cmp	r2, r4
10003426:	d202      	bcs.n	1000342e <pvPortMalloc+0x5e>
10003428:	681a      	ldr	r2, [r3, #0]
1000342a:	2a00      	cmp	r2, #0
1000342c:	d1f7      	bne.n	1000341e <pvPortMalloc+0x4e>
                if( pxBlock != pxEnd )
1000342e:	4a18      	ldr	r2, [pc, #96]	; (10003490 <pvPortMalloc+0xc0>)
10003430:	6812      	ldr	r2, [r2, #0]
10003432:	429a      	cmp	r2, r3
10003434:	d02a      	beq.n	1000348c <pvPortMalloc+0xbc>
                    pvReturn = ( void * ) ( ( ( uint8_t * ) heapPROTECT_BLOCK_POINTER( pxPreviousBlock->pxNextFreeBlock ) ) + xHeapStructSize );
10003436:	680d      	ldr	r5, [r1, #0]
10003438:	3508      	adds	r5, #8
                    pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
1000343a:	681a      	ldr	r2, [r3, #0]
1000343c:	600a      	str	r2, [r1, #0]
                    if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
1000343e:	6858      	ldr	r0, [r3, #4]
10003440:	1b00      	subs	r0, r0, r4
10003442:	2810      	cmp	r0, #16
10003444:	d905      	bls.n	10003452 <pvPortMalloc+0x82>
                        pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
10003446:	191a      	adds	r2, r3, r4
                        pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
10003448:	6050      	str	r0, [r2, #4]
                        pxBlock->xBlockSize = xWantedSize;
1000344a:	605c      	str	r4, [r3, #4]
                        pxNewBlockLink->pxNextFreeBlock = pxPreviousBlock->pxNextFreeBlock;
1000344c:	6808      	ldr	r0, [r1, #0]
1000344e:	5118      	str	r0, [r3, r4]
                        pxPreviousBlock->pxNextFreeBlock = heapPROTECT_BLOCK_POINTER( pxNewBlockLink );
10003450:	600a      	str	r2, [r1, #0]
                    xFreeBytesRemaining -= pxBlock->xBlockSize;
10003452:	6859      	ldr	r1, [r3, #4]
10003454:	1a76      	subs	r6, r6, r1
10003456:	480f      	ldr	r0, [pc, #60]	; (10003494 <pvPortMalloc+0xc4>)
10003458:	6006      	str	r6, [r0, #0]
                    if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
1000345a:	4810      	ldr	r0, [pc, #64]	; (1000349c <pvPortMalloc+0xcc>)
1000345c:	6800      	ldr	r0, [r0, #0]
1000345e:	4286      	cmp	r6, r0
10003460:	d201      	bcs.n	10003466 <pvPortMalloc+0x96>
                        xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
10003462:	480e      	ldr	r0, [pc, #56]	; (1000349c <pvPortMalloc+0xcc>)
10003464:	6006      	str	r6, [r0, #0]
                    heapALLOCATE_BLOCK( pxBlock );
10003466:	f041 4100 	orr.w	r1, r1, #2147483648	; 0x80000000
1000346a:	6059      	str	r1, [r3, #4]
                    pxBlock->pxNextFreeBlock = NULL;
1000346c:	2200      	movs	r2, #0
1000346e:	601a      	str	r2, [r3, #0]
                    xNumberOfSuccessfulAllocations++;
10003470:	4a0b      	ldr	r2, [pc, #44]	; (100034a0 <pvPortMalloc+0xd0>)
10003472:	6813      	ldr	r3, [r2, #0]
10003474:	3301      	adds	r3, #1
10003476:	6013      	str	r3, [r2, #0]
    ( void ) xTaskResumeAll();
10003478:	f7ff fad2 	bl	10002a20 <xTaskResumeAll>
}
1000347c:	4628      	mov	r0, r5
1000347e:	bd70      	pop	{r4, r5, r6, pc}
    void * pvReturn = NULL;
10003480:	2500      	movs	r5, #0
10003482:	e7f9      	b.n	10003478 <pvPortMalloc+0xa8>
10003484:	2500      	movs	r5, #0
10003486:	e7f7      	b.n	10003478 <pvPortMalloc+0xa8>
10003488:	2500      	movs	r5, #0
1000348a:	e7f5      	b.n	10003478 <pvPortMalloc+0xa8>
1000348c:	2500      	movs	r5, #0
1000348e:	e7f3      	b.n	10003478 <pvPortMalloc+0xa8>
10003490:	38008cec 	stmdacc	r0, {r2, r3, r5, r6, r7, sl, fp, pc}
10003494:	38008cf0 	stmdacc	r0, {r4, r5, r6, r7, sl, fp, pc}
10003498:	38008d00 	stmdacc	r0, {r8, sl, fp, pc}
1000349c:	38008cf4 	stmdacc	r0, {r2, r4, r5, r6, r7, sl, fp, pc}
100034a0:	38008cf8 	stmdacc	r0, {r3, r4, r5, r6, r7, sl, fp, pc}

100034a4 <vPortFree>:
    if( pv != NULL )
100034a4:	b308      	cbz	r0, 100034ea <vPortFree+0x46>
{
100034a6:	b538      	push	{r3, r4, r5, lr}
100034a8:	4604      	mov	r4, r0
        puc -= xHeapStructSize;
100034aa:	f1a0 0508 	sub.w	r5, r0, #8
        if( heapBLOCK_IS_ALLOCATED( pxLink ) != 0 )
100034ae:	f850 3c04 	ldr.w	r3, [r0, #-4]
100034b2:	2b00      	cmp	r3, #0
100034b4:	da02      	bge.n	100034bc <vPortFree+0x18>
            if( pxLink->pxNextFreeBlock == NULL )
100034b6:	f850 2c08 	ldr.w	r2, [r0, #-8]
100034ba:	b102      	cbz	r2, 100034be <vPortFree+0x1a>
}
100034bc:	bd38      	pop	{r3, r4, r5, pc}
                heapFREE_BLOCK( pxLink );
100034be:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
100034c2:	f840 3c04 	str.w	r3, [r0, #-4]
                vTaskSuspendAll();
100034c6:	f7ff f9c9 	bl	1000285c <vTaskSuspendAll>
                    xFreeBytesRemaining += pxLink->xBlockSize;
100034ca:	f854 1c04 	ldr.w	r1, [r4, #-4]
100034ce:	4a07      	ldr	r2, [pc, #28]	; (100034ec <vPortFree+0x48>)
100034d0:	6813      	ldr	r3, [r2, #0]
100034d2:	440b      	add	r3, r1
100034d4:	6013      	str	r3, [r2, #0]
                    prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
100034d6:	4628      	mov	r0, r5
100034d8:	f7ff ff48 	bl	1000336c <prvInsertBlockIntoFreeList>
                    xNumberOfSuccessfulFrees++;
100034dc:	4a04      	ldr	r2, [pc, #16]	; (100034f0 <vPortFree+0x4c>)
100034de:	6813      	ldr	r3, [r2, #0]
100034e0:	3301      	adds	r3, #1
100034e2:	6013      	str	r3, [r2, #0]
                ( void ) xTaskResumeAll();
100034e4:	f7ff fa9c 	bl	10002a20 <xTaskResumeAll>
}
100034e8:	e7e8      	b.n	100034bc <vPortFree+0x18>
100034ea:	4770      	bx	lr
100034ec:	38008cf0 	stmdacc	r0, {r4, r5, r6, r7, sl, fp, pc}
100034f0:	38008cfc 	stmdacc	r0, {r2, r3, r4, r5, r6, r7, sl, fp, pc}

100034f4 <prvTaskExitError>:
    portNVIC_SYSTICK_CTRL_REG = portNVIC_SYSTICK_CLK_BIT_CONFIG | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT;
}
/*-----------------------------------------------------------*/

static void prvTaskExitError( void )
{
100034f4:	b500      	push	{lr}
100034f6:	b083      	sub	sp, #12
    volatile uint32_t ulDummy = 0UL;
100034f8:	2300      	movs	r3, #0
100034fa:	9301      	str	r3, [sp, #4]
     * its caller as there is nothing to return to. If a task wants to exit it
     * should instead call vTaskDelete( NULL ). Artificially force an assert()
     * to be triggered if configASSERT() is defined, then stop here so
     * application writers can catch the error. */
    configASSERT( ulCriticalNesting == ~0UL );
    portDISABLE_INTERRUPTS();
100034fc:	f000 f980 	bl	10003800 <ulSetInterruptMask>

    while( ulDummy == 0 )
10003500:	9b01      	ldr	r3, [sp, #4]
10003502:	2b00      	cmp	r3, #0
10003504:	d0fc      	beq.n	10003500 <prvTaskExitError+0xc>
         * warnings about code appearing after this function is called - making
         * ulDummy volatile makes the compiler think the function could return
         * and therefore not output an 'unreachable code' warning for code that
         * appears after it. */
    }
}
10003506:	b003      	add	sp, #12
10003508:	f85d fb04 	ldr.w	pc, [sp], #4

1000350c <vPortSuppressTicksAndSleep>:
    {
1000350c:	b510      	push	{r4, lr}
        if( xExpectedIdleTime > xMaximumPossibleSuppressedTicks )
1000350e:	4b41      	ldr	r3, [pc, #260]	; (10003614 <vPortSuppressTicksAndSleep+0x108>)
10003510:	681c      	ldr	r4, [r3, #0]
10003512:	4284      	cmp	r4, r0
10003514:	d300      	bcc.n	10003518 <vPortSuppressTicksAndSleep+0xc>
10003516:	4604      	mov	r4, r0
        __asm volatile ( "cpsid i" ::: "memory" );
10003518:	b672      	cpsid	i
        __asm volatile ( "dsb" );
1000351a:	f3bf 8f4f 	dsb	sy
        __asm volatile ( "isb" );
1000351e:	f3bf 8f6f 	isb	sy
        if( eTaskConfirmSleepModeStatus() == eAbortSleep )
10003522:	f7ff fc71 	bl	10002e08 <eTaskConfirmSleepModeStatus>
10003526:	b908      	cbnz	r0, 1000352c <vPortSuppressTicksAndSleep+0x20>
            __asm volatile ( "cpsie i" ::: "memory" );
10003528:	b662      	cpsie	i
    }
1000352a:	bd10      	pop	{r4, pc}
            portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT_CONFIG | portNVIC_SYSTICK_INT_BIT );
1000352c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
10003530:	2206      	movs	r2, #6
10003532:	611a      	str	r2, [r3, #16]
            ulSysTickDecrementsLeft = portNVIC_SYSTICK_CURRENT_VALUE_REG;
10003534:	699b      	ldr	r3, [r3, #24]
            if( ulSysTickDecrementsLeft == 0 )
10003536:	b90b      	cbnz	r3, 1000353c <vPortSuppressTicksAndSleep+0x30>
                ulSysTickDecrementsLeft = ulTimerCountsForOneTick;
10003538:	4b37      	ldr	r3, [pc, #220]	; (10003618 <vPortSuppressTicksAndSleep+0x10c>)
1000353a:	681b      	ldr	r3, [r3, #0]
            ulReloadValue = ulSysTickDecrementsLeft + ( ulTimerCountsForOneTick * ( xExpectedIdleTime - 1UL ) );
1000353c:	1e60      	subs	r0, r4, #1
1000353e:	4a36      	ldr	r2, [pc, #216]	; (10003618 <vPortSuppressTicksAndSleep+0x10c>)
10003540:	6812      	ldr	r2, [r2, #0]
10003542:	fb02 3300 	mla	r3, r2, r0, r3
            if( ( portNVIC_INT_CTRL_REG & portNVIC_PEND_SYSTICK_SET_BIT ) != 0 )
10003546:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
1000354a:	f8d2 2d04 	ldr.w	r2, [r2, #3332]	; 0xd04
1000354e:	f012 6f80 	tst.w	r2, #67108864	; 0x4000000
10003552:	d008      	beq.n	10003566 <vPortSuppressTicksAndSleep+0x5a>
                portNVIC_INT_CTRL_REG = portNVIC_PEND_SYSTICK_CLEAR_BIT;
10003554:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
10003558:	f04f 7100 	mov.w	r1, #33554432	; 0x2000000
1000355c:	f8c2 1d04 	str.w	r1, [r2, #3332]	; 0xd04
                ulReloadValue -= ulTimerCountsForOneTick;
10003560:	4a2d      	ldr	r2, [pc, #180]	; (10003618 <vPortSuppressTicksAndSleep+0x10c>)
10003562:	6812      	ldr	r2, [r2, #0]
10003564:	1a9b      	subs	r3, r3, r2
            if( ulReloadValue > ulStoppedTimerCompensation )
10003566:	4a2d      	ldr	r2, [pc, #180]	; (1000361c <vPortSuppressTicksAndSleep+0x110>)
10003568:	6812      	ldr	r2, [r2, #0]
1000356a:	429a      	cmp	r2, r3
1000356c:	d200      	bcs.n	10003570 <vPortSuppressTicksAndSleep+0x64>
                ulReloadValue -= ulStoppedTimerCompensation;
1000356e:	1a9b      	subs	r3, r3, r2
            portNVIC_SYSTICK_LOAD_REG = ulReloadValue;
10003570:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
10003574:	6153      	str	r3, [r2, #20]
            portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
10003576:	2100      	movs	r1, #0
10003578:	6191      	str	r1, [r2, #24]
            portNVIC_SYSTICK_CTRL_REG |= portNVIC_SYSTICK_ENABLE_BIT;
1000357a:	6911      	ldr	r1, [r2, #16]
1000357c:	f041 0101 	orr.w	r1, r1, #1
10003580:	6111      	str	r1, [r2, #16]
            if( xModifiableIdleTime > 0 )
10003582:	b124      	cbz	r4, 1000358e <vPortSuppressTicksAndSleep+0x82>
                __asm volatile ( "dsb" ::: "memory" );
10003584:	f3bf 8f4f 	dsb	sy
                __asm volatile ( "wfi" );
10003588:	bf30      	wfi
                __asm volatile ( "isb" );
1000358a:	f3bf 8f6f 	isb	sy
            __asm volatile ( "cpsie i" ::: "memory" );
1000358e:	b662      	cpsie	i
            __asm volatile ( "dsb" );
10003590:	f3bf 8f4f 	dsb	sy
            __asm volatile ( "isb" );
10003594:	f3bf 8f6f 	isb	sy
            __asm volatile ( "cpsid i" ::: "memory" );
10003598:	b672      	cpsid	i
            __asm volatile ( "dsb" );
1000359a:	f3bf 8f4f 	dsb	sy
            __asm volatile ( "isb" );
1000359e:	f3bf 8f6f 	isb	sy
            portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT_CONFIG | portNVIC_SYSTICK_INT_BIT );
100035a2:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
100035a6:	2106      	movs	r1, #6
100035a8:	6111      	str	r1, [r2, #16]
            if( ( portNVIC_SYSTICK_CTRL_REG & portNVIC_SYSTICK_COUNT_FLAG_BIT ) != 0 )
100035aa:	6912      	ldr	r2, [r2, #16]
100035ac:	f412 3f80 	tst.w	r2, #65536	; 0x10000
100035b0:	d01f      	beq.n	100035f2 <vPortSuppressTicksAndSleep+0xe6>
                ulCalculatedLoadValue = ( ulTimerCountsForOneTick - 1UL ) - ( ulReloadValue - portNVIC_SYSTICK_CURRENT_VALUE_REG );
100035b2:	4a19      	ldr	r2, [pc, #100]	; (10003618 <vPortSuppressTicksAndSleep+0x10c>)
100035b4:	6811      	ldr	r1, [r2, #0]
100035b6:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
100035ba:	6992      	ldr	r2, [r2, #24]
100035bc:	1ad3      	subs	r3, r2, r3
100035be:	440b      	add	r3, r1
100035c0:	3b01      	subs	r3, #1
                if( ( ulCalculatedLoadValue <= ulStoppedTimerCompensation ) || ( ulCalculatedLoadValue > ulTimerCountsForOneTick ) )
100035c2:	4a16      	ldr	r2, [pc, #88]	; (1000361c <vPortSuppressTicksAndSleep+0x110>)
100035c4:	6812      	ldr	r2, [r2, #0]
100035c6:	429a      	cmp	r2, r3
100035c8:	d201      	bcs.n	100035ce <vPortSuppressTicksAndSleep+0xc2>
100035ca:	4299      	cmp	r1, r3
100035cc:	d200      	bcs.n	100035d0 <vPortSuppressTicksAndSleep+0xc4>
                    ulCalculatedLoadValue = ( ulTimerCountsForOneTick - 1UL );
100035ce:	1e4b      	subs	r3, r1, #1
                portNVIC_SYSTICK_LOAD_REG = ulCalculatedLoadValue;
100035d0:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
100035d4:	6153      	str	r3, [r2, #20]
            portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
100035d6:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
100035da:	2200      	movs	r2, #0
100035dc:	619a      	str	r2, [r3, #24]
            portNVIC_SYSTICK_CTRL_REG = portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT;
100035de:	2207      	movs	r2, #7
100035e0:	611a      	str	r2, [r3, #16]
                portNVIC_SYSTICK_LOAD_REG = ulTimerCountsForOneTick - 1UL;
100035e2:	4a0d      	ldr	r2, [pc, #52]	; (10003618 <vPortSuppressTicksAndSleep+0x10c>)
100035e4:	6812      	ldr	r2, [r2, #0]
100035e6:	3a01      	subs	r2, #1
100035e8:	615a      	str	r2, [r3, #20]
            vTaskStepTick( ulCompleteTickPeriods );
100035ea:	f7ff f94b 	bl	10002884 <vTaskStepTick>
            __asm volatile ( "cpsie i" ::: "memory" );
100035ee:	b662      	cpsie	i
    }
100035f0:	e79b      	b.n	1000352a <vPortSuppressTicksAndSleep+0x1e>
                ulSysTickDecrementsLeft = portNVIC_SYSTICK_CURRENT_VALUE_REG;
100035f2:	f04f 21e0 	mov.w	r1, #3758153728	; 0xe000e000
100035f6:	698b      	ldr	r3, [r1, #24]
                ulCompletedSysTickDecrements = ( xExpectedIdleTime * ulTimerCountsForOneTick ) - ulSysTickDecrementsLeft;
100035f8:	4a07      	ldr	r2, [pc, #28]	; (10003618 <vPortSuppressTicksAndSleep+0x10c>)
100035fa:	6812      	ldr	r2, [r2, #0]
100035fc:	fb02 f404 	mul.w	r4, r2, r4
10003600:	1ae0      	subs	r0, r4, r3
                ulCompleteTickPeriods = ulCompletedSysTickDecrements / ulTimerCountsForOneTick;
10003602:	fbb0 f0f2 	udiv	r0, r0, r2
                portNVIC_SYSTICK_LOAD_REG = ( ( ulCompleteTickPeriods + 1UL ) * ulTimerCountsForOneTick ) - ulCompletedSysTickDecrements;
10003606:	fb00 2202 	mla	r2, r0, r2, r2
1000360a:	1b1c      	subs	r4, r3, r4
1000360c:	4414      	add	r4, r2
1000360e:	614c      	str	r4, [r1, #20]
10003610:	e7e1      	b.n	100035d6 <vPortSuppressTicksAndSleep+0xca>
10003612:	bf00      	nop
10003614:	38008d10 	stmdacc	r0, {r4, r8, sl, fp, pc}
10003618:	38008d0c 	stmdacc	r0, {r2, r3, r8, sl, fp, pc}
1000361c:	38008d08 	stmdacc	r0, {r3, r8, sl, fp, pc}

10003620 <vPortSetupTimerInterrupt>:
        ulTimerCountsForOneTick = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ );
10003620:	4b0b      	ldr	r3, [pc, #44]	; (10003650 <vPortSetupTimerInterrupt+0x30>)
10003622:	f644 6220 	movw	r2, #20000	; 0x4e20
10003626:	601a      	str	r2, [r3, #0]
        xMaximumPossibleSuppressedTicks = portMAX_24_BIT_NUMBER / ulTimerCountsForOneTick;
10003628:	4b0a      	ldr	r3, [pc, #40]	; (10003654 <vPortSetupTimerInterrupt+0x34>)
1000362a:	f240 3246 	movw	r2, #838	; 0x346
1000362e:	601a      	str	r2, [r3, #0]
        ulStoppedTimerCompensation = portMISSED_COUNTS_FACTOR / ( configCPU_CLOCK_HZ / configSYSTICK_CLOCK_HZ );
10003630:	4b09      	ldr	r3, [pc, #36]	; (10003658 <vPortSetupTimerInterrupt+0x38>)
10003632:	225e      	movs	r2, #94	; 0x5e
10003634:	601a      	str	r2, [r3, #0]
    portNVIC_SYSTICK_CTRL_REG = portNVIC_SYSTICK_CLK_BIT_CONFIG;
10003636:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
1000363a:	2204      	movs	r2, #4
1000363c:	611a      	str	r2, [r3, #16]
    portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
1000363e:	2200      	movs	r2, #0
10003640:	619a      	str	r2, [r3, #24]
    portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
10003642:	f644 621f 	movw	r2, #19999	; 0x4e1f
10003646:	615a      	str	r2, [r3, #20]
    portNVIC_SYSTICK_CTRL_REG = portNVIC_SYSTICK_CLK_BIT_CONFIG | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT;
10003648:	2207      	movs	r2, #7
1000364a:	611a      	str	r2, [r3, #16]
}
1000364c:	4770      	bx	lr
1000364e:	bf00      	nop
10003650:	38008d0c 	stmdacc	r0, {r2, r3, r8, sl, fp, pc}
10003654:	38008d10 	stmdacc	r0, {r4, r8, sl, fp, pc}
10003658:	38008d08 	stmdacc	r0, {r3, r8, sl, fp, pc}

1000365c <vPortYield>:
/*-----------------------------------------------------------*/

void vPortYield( void ) /* PRIVILEGED_FUNCTION */
{
    /* Set a PendSV to request a context switch. */
    portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
1000365c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
10003660:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
10003664:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04

    /* Barriers are normally not required but do ensure the code is
     * completely within the specified behaviour for the architecture. */
    __asm volatile ( "dsb" ::: "memory" );
10003668:	f3bf 8f4f 	dsb	sy
    __asm volatile ( "isb" );
1000366c:	f3bf 8f6f 	isb	sy
}
10003670:	4770      	bx	lr
	...

10003674 <vPortEnterCritical>:
/*-----------------------------------------------------------*/

void vPortEnterCritical( void ) /* PRIVILEGED_FUNCTION */
{
10003674:	b508      	push	{r3, lr}
    portDISABLE_INTERRUPTS();
10003676:	f000 f8c3 	bl	10003800 <ulSetInterruptMask>
    ulCriticalNesting++;
1000367a:	4a04      	ldr	r2, [pc, #16]	; (1000368c <vPortEnterCritical+0x18>)
1000367c:	6813      	ldr	r3, [r2, #0]
1000367e:	3301      	adds	r3, #1
10003680:	6013      	str	r3, [r2, #0]

    /* Barriers are normally not required but do ensure the code is
     * completely within the specified behaviour for the architecture. */
    __asm volatile ( "dsb" ::: "memory" );
10003682:	f3bf 8f4f 	dsb	sy
    __asm volatile ( "isb" );
10003686:	f3bf 8f6f 	isb	sy
}
1000368a:	bd08      	pop	{r3, pc}
1000368c:	38000010 	stmdacc	r0, {r4}

10003690 <vPortExitCritical>:
/*-----------------------------------------------------------*/

void vPortExitCritical( void ) /* PRIVILEGED_FUNCTION */
{
10003690:	b508      	push	{r3, lr}
    configASSERT( ulCriticalNesting );
    ulCriticalNesting--;
10003692:	4b05      	ldr	r3, [pc, #20]	; (100036a8 <vPortExitCritical+0x18>)
10003694:	681a      	ldr	r2, [r3, #0]
10003696:	3a01      	subs	r2, #1
10003698:	601a      	str	r2, [r3, #0]

    if( ulCriticalNesting == 0 )
1000369a:	681b      	ldr	r3, [r3, #0]
1000369c:	b103      	cbz	r3, 100036a0 <vPortExitCritical+0x10>
    {
        portENABLE_INTERRUPTS();
    }
}
1000369e:	bd08      	pop	{r3, pc}
        portENABLE_INTERRUPTS();
100036a0:	2000      	movs	r0, #0
100036a2:	f000 f8b8 	bl	10003816 <vClearInterruptMask>
}
100036a6:	e7fa      	b.n	1000369e <vPortExitCritical+0xe>
100036a8:	38000010 	stmdacc	r0, {r4}

100036ac <SysTick_Handler>:
/*-----------------------------------------------------------*/

void SysTick_Handler( void ) /* PRIVILEGED_FUNCTION */
{
100036ac:	b510      	push	{r4, lr}
    uint32_t ulPreviousMask;

    ulPreviousMask = portSET_INTERRUPT_MASK_FROM_ISR();
100036ae:	f000 f8a7 	bl	10003800 <ulSetInterruptMask>
100036b2:	4604      	mov	r4, r0
    traceISR_ENTER();
    {
        /* Increment the RTOS tick. */
        if( xTaskIncrementTick() != pdFALSE )
100036b4:	f7ff f904 	bl	100028c0 <xTaskIncrementTick>
100036b8:	b128      	cbz	r0, 100036c6 <SysTick_Handler+0x1a>
        {
            traceISR_EXIT_TO_SCHEDULER();
            /* Pend a context switch. */
            portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
100036ba:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
100036be:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
100036c2:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
        else
        {
            traceISR_EXIT();
        }
    }
    portCLEAR_INTERRUPT_MASK_FROM_ISR( ulPreviousMask );
100036c6:	4620      	mov	r0, r4
100036c8:	f000 f8a5 	bl	10003816 <vClearInterruptMask>
}
100036cc:	bd10      	pop	{r4, pc}

100036ce <vPortSVCHandler_C>:
/*-----------------------------------------------------------*/

void vPortSVCHandler_C( uint32_t * pulCallerStackAddress ) /* PRIVILEGED_FUNCTION portDONT_DISCARD */
{
100036ce:	b508      	push	{r3, lr}
    #endif /* configENABLE_TRUSTZONE */
    uint8_t ucSVCNumber;

    /* Register are stored on the stack in the following order - R0, R1, R2, R3,
     * R12, LR, PC, xPSR. */
    ulPC = pulCallerStackAddress[ portOFFSET_TO_PC ];
100036d0:	6983      	ldr	r3, [r0, #24]
    ucSVCNumber = ( ( uint8_t * ) ulPC )[ -2 ];
100036d2:	f813 3c02 	ldrb.w	r3, [r3, #-2]

    switch( ucSVCNumber )
100036d6:	2b66      	cmp	r3, #102	; 0x66
100036d8:	d000      	beq.n	100036dc <vPortSVCHandler_C+0xe>

        default:
            /* Incorrect SVC call. */
            configASSERT( pdFALSE );
    }
}
100036da:	bd08      	pop	{r3, pc}
            vRestoreContextOfFirstTask();
100036dc:	f000 f86a 	bl	100037b4 <vRestoreContextOfFirstTask>
}
100036e0:	e7fb      	b.n	100036da <vPortSVCHandler_C+0xc>
	...

100036e4 <pxPortInitialiseStack>:

    StackType_t * pxPortInitialiseStack( StackType_t * pxTopOfStack,
                                         StackType_t * pxEndOfStack,
                                         TaskFunction_t pxCode,
                                         void * pvParameters ) /* PRIVILEGED_FUNCTION */
    {
100036e4:	b410      	push	{r4}
            #endif /* configENABLE_TRUSTZONE */
        }
        #else /* portPRELOAD_REGISTERS */
        {
            pxTopOfStack--;                                          /* Offset added to account for the way the MCU uses the stack on entry/exit of interrupts. */
            *pxTopOfStack = portINITIAL_XPSR;                        /* xPSR. */
100036e6:	f04f 7480 	mov.w	r4, #16777216	; 0x1000000
100036ea:	f840 4c04 	str.w	r4, [r0, #-4]
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) pxCode;                  /* PC. */
100036ee:	f840 2c08 	str.w	r2, [r0, #-8]
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS; /* LR. */
100036f2:	4a1f      	ldr	r2, [pc, #124]	; (10003770 <pxPortInitialiseStack+0x8c>)
100036f4:	f840 2c0c 	str.w	r2, [r0, #-12]
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x12121212UL;            /* R12. */
100036f8:	f04f 3212 	mov.w	r2, #303174162	; 0x12121212
100036fc:	f840 2c10 	str.w	r2, [r0, #-16]
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x03030303UL;            /* R3. */
10003700:	f04f 3203 	mov.w	r2, #50529027	; 0x3030303
10003704:	f840 2c14 	str.w	r2, [r0, #-20]
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x02020202UL;            /* R2. */
10003708:	f04f 3202 	mov.w	r2, #33686018	; 0x2020202
1000370c:	f840 2c18 	str.w	r2, [r0, #-24]
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x01010101UL;            /* R1. */
10003710:	f04f 3201 	mov.w	r2, #16843009	; 0x1010101
10003714:	f840 2c1c 	str.w	r2, [r0, #-28]
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) pvParameters;            /* R0. */
10003718:	f840 3c20 	str.w	r3, [r0, #-32]
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x11111111UL;            /* R11. */
1000371c:	f04f 3311 	mov.w	r3, #286331153	; 0x11111111
10003720:	f840 3c24 	str.w	r3, [r0, #-36]
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x10101010UL;            /* R10. */
10003724:	f04f 3310 	mov.w	r3, #269488144	; 0x10101010
10003728:	f840 3c28 	str.w	r3, [r0, #-40]
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x09090909UL;            /* R09. */
1000372c:	f04f 3309 	mov.w	r3, #151587081	; 0x9090909
10003730:	f840 3c2c 	str.w	r3, [r0, #-44]
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x08080808UL;            /* R08. */
10003734:	f04f 3308 	mov.w	r3, #134744072	; 0x8080808
10003738:	f840 3c30 	str.w	r3, [r0, #-48]
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x07070707UL;            /* R07. */
1000373c:	f04f 3307 	mov.w	r3, #117901063	; 0x7070707
10003740:	f840 3c34 	str.w	r3, [r0, #-52]
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x06060606UL;            /* R06. */
10003744:	f04f 3306 	mov.w	r3, #101058054	; 0x6060606
10003748:	f840 3c38 	str.w	r3, [r0, #-56]
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x05050505UL;            /* R05. */
1000374c:	f04f 3305 	mov.w	r3, #84215045	; 0x5050505
10003750:	f840 3c3c 	str.w	r3, [r0, #-60]
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x04040404UL;            /* R04. */
10003754:	f04f 3304 	mov.w	r3, #67372036	; 0x4040404
10003758:	f840 3c40 	str.w	r3, [r0, #-64]
            pxTopOfStack--;
            *pxTopOfStack = portINITIAL_EXC_RETURN;                  /* EXC_RETURN. */
1000375c:	f06f 0302 	mvn.w	r3, #2
10003760:	f840 3c44 	str.w	r3, [r0, #-68]
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) pxEndOfStack;            /* Slot used to hold this task's PSPLIM value. */
10003764:	f840 1c48 	str.w	r1, [r0, #-72]
            #endif /* configENABLE_TRUSTZONE */
        }
        #endif /* portPRELOAD_REGISTERS */

        return pxTopOfStack;
    }
10003768:	3848      	subs	r0, #72	; 0x48
1000376a:	f85d 4b04 	ldr.w	r4, [sp], #4
1000376e:	4770      	bx	lr
10003770:	100034f5 	strdne	r3, [r0], -r5

10003774 <xPortStartScheduler>:

#endif /* configENABLE_MPU */
/*-----------------------------------------------------------*/

BaseType_t xPortStartScheduler( void ) /* PRIVILEGED_FUNCTION */
{
10003774:	b510      	push	{r4, lr}
    }
    #endif /* #if ( ( configASSERT_DEFINED == 1 ) && ( portHAS_ARMV8M_MAIN_EXTENSION == 1 ) ) */

    /* Make PendSV and SysTick the lowest priority interrupts, and make SVCall
     * the highest priority. */
    portNVIC_SHPR3_REG |= portNVIC_PENDSV_PRI;
10003776:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
1000377a:	f8d3 2d20 	ldr.w	r2, [r3, #3360]	; 0xd20
1000377e:	f442 027f 	orr.w	r2, r2, #16711680	; 0xff0000
10003782:	f8c3 2d20 	str.w	r2, [r3, #3360]	; 0xd20
    portNVIC_SHPR3_REG |= portNVIC_SYSTICK_PRI;
10003786:	f8d3 2d20 	ldr.w	r2, [r3, #3360]	; 0xd20
1000378a:	f042 427f 	orr.w	r2, r2, #4278190080	; 0xff000000
1000378e:	f8c3 2d20 	str.w	r2, [r3, #3360]	; 0xd20
    portNVIC_SHPR2_REG = 0;
10003792:	2400      	movs	r4, #0
10003794:	f8c3 4d1c 	str.w	r4, [r3, #3356]	; 0xd1c
    }
    #endif /* configENABLE_MPU */

    /* Start the timer that generates the tick ISR. Interrupts are disabled
     * here already. */
    vPortSetupTimerInterrupt();
10003798:	f7ff ff42 	bl	10003620 <vPortSetupTimerInterrupt>

    /* Initialize the critical nesting count ready for the first task. */
    ulCriticalNesting = 0;
1000379c:	4b04      	ldr	r3, [pc, #16]	; (100037b0 <xPortStartScheduler+0x3c>)
1000379e:	601c      	str	r4, [r3, #0]
        xSchedulerRunning = pdTRUE;
    }
    #endif /* ( ( configENABLE_MPU == 1 ) && ( configUSE_MPU_WRAPPERS_V1 == 0 ) ) */

    /* Start the first task. */
    vStartFirstTask();
100037a0:	f000 f81e 	bl	100037e0 <vStartFirstTask>
     * exit error function to prevent compiler warnings about a static function
     * not being called in the case that the application writer overrides this
     * functionality by defining configTASK_RETURN_ADDRESS. Call
     * vTaskSwitchContext() so link time optimization does not remove the
     * symbol. */
    vTaskSwitchContext();
100037a4:	f7ff fa00 	bl	10002ba8 <vTaskSwitchContext>
    prvTaskExitError();
100037a8:	f7ff fea4 	bl	100034f4 <prvTaskExitError>

    /* Should not get here. */
    return 0;
}
100037ac:	4620      	mov	r0, r4
100037ae:	bd10      	pop	{r4, pc}
100037b0:	38000010 	stmdacc	r0, {r4}

100037b4 <vRestoreContextOfFirstTask>:

#else /* configENABLE_MPU */

    void vRestoreContextOfFirstTask( void ) /* __attribute__ (( naked )) PRIVILEGED_FUNCTION */
    {
        __asm volatile
100037b4:	4a09      	ldr	r2, [pc, #36]	; (100037dc <vRestoreContextOfFirstTask+0x28>)
100037b6:	6811      	ldr	r1, [r2, #0]
100037b8:	6808      	ldr	r0, [r1, #0]
100037ba:	c806      	ldmia	r0!, {r1, r2}
100037bc:	f381 880b 	msr	PSPLIM, r1
100037c0:	2102      	movs	r1, #2
100037c2:	f381 8814 	msr	CONTROL, r1
100037c6:	3020      	adds	r0, #32
100037c8:	f380 8809 	msr	PSP, r0
100037cc:	f3bf 8f6f 	isb	sy
100037d0:	f04f 0000 	mov.w	r0, #0
100037d4:	f380 8811 	msr	BASEPRI, r0
100037d8:	4710      	bx	r2
            "   isb                                             \n"
            "   mov  r0, #0                                     \n"
            "   msr  basepri, r0                                \n" /* Ensure that interrupts are enabled when the first task starts. */
            "   bx   r2                                         \n" /* Finally, branch to EXC_RETURN. */
        );
    }
100037da:	85b80000 	ldrhi	r0, [r8, #0]!
100037de:	 	stmdami	r6, {fp, ip, sp}

100037e0 <vStartFirstTask>:
}
/*-----------------------------------------------------------*/

void vStartFirstTask( void ) /* __attribute__ (( naked )) PRIVILEGED_FUNCTION */
{
    __asm volatile
100037e0:	4806      	ldr	r0, [pc, #24]	; (100037fc <vStartFirstTask+0x1c>)
100037e2:	6800      	ldr	r0, [r0, #0]
100037e4:	6800      	ldr	r0, [r0, #0]
100037e6:	f380 8808 	msr	MSP, r0
100037ea:	b662      	cpsie	i
100037ec:	b661      	cpsie	f
100037ee:	f3bf 8f4f 	dsb	sy
100037f2:	f3bf 8f6f 	isb	sy
100037f6:	df66      	svc	102	; 0x66
100037f8:	bf00      	nop
        "   isb                                             \n"
        "   svc %0                                          \n" /* System call to start the first task. */
        "   nop                                             \n"
        ::"i" ( portSVC_START_SCHEDULER ) : "memory"
    );
}
100037fa:	ed080000 	stc	0, cr0, [r8, #-0]
100037fe:	 	vaddl.u32	q15, d15, d0

10003800 <ulSetInterruptMask>:
/*-----------------------------------------------------------*/

uint32_t ulSetInterruptMask( void ) /* __attribute__(( naked )) PRIVILEGED_FUNCTION */
{
    __asm volatile
10003800:	f3ef 8011 	mrs	r0, BASEPRI
10003804:	f04f 01bf 	mov.w	r1, #191	; 0xbf
10003808:	f381 8811 	msr	BASEPRI, r1
1000380c:	f3bf 8f4f 	dsb	sy
10003810:	f3bf 8f6f 	isb	sy
10003814:	4770      	bx	lr

10003816 <vClearInterruptMask>:
}
/*-----------------------------------------------------------*/

void vClearInterruptMask( __attribute__( ( unused ) ) uint32_t ulMask ) /* __attribute__(( naked )) PRIVILEGED_FUNCTION */
{
    __asm volatile
10003816:	f380 8811 	msr	BASEPRI, r0
1000381a:	f3bf 8f4f 	dsb	sy
1000381e:	f3bf 8f6f 	isb	sy
10003822:	4770      	bx	lr

10003824 <PendSV_Handler>:

#else /* configENABLE_MPU */

    void PendSV_Handler( void ) /* __attribute__ (( naked )) PRIVILEGED_FUNCTION */
    {
        __asm volatile
10003824:	f3ef 8009 	mrs	r0, PSP
10003828:	f3ef 820b 	mrs	r2, PSPLIM
1000382c:	4673      	mov	r3, lr
1000382e:	e920 0ffc 	stmdb	r0!, {r2, r3, r4, r5, r6, r7, r8, r9, sl, fp}
10003832:	4a0d      	ldr	r2, [pc, #52]	; (10003868 <PendSV_Handler+0x44>)
10003834:	6811      	ldr	r1, [r2, #0]
10003836:	6008      	str	r0, [r1, #0]
10003838:	f04f 00bf 	mov.w	r0, #191	; 0xbf
1000383c:	f380 8811 	msr	BASEPRI, r0
10003840:	f3bf 8f4f 	dsb	sy
10003844:	f3bf 8f6f 	isb	sy
10003848:	f7ff f9ae 	bl	10002ba8 <vTaskSwitchContext>
1000384c:	f04f 0000 	mov.w	r0, #0
10003850:	f380 8811 	msr	BASEPRI, r0
10003854:	4a04      	ldr	r2, [pc, #16]	; (10003868 <PendSV_Handler+0x44>)
10003856:	6811      	ldr	r1, [r2, #0]
10003858:	6808      	ldr	r0, [r1, #0]
1000385a:	e8b0 0ffc 	ldmia.w	r0!, {r2, r3, r4, r5, r6, r7, r8, r9, sl, fp}
1000385e:	f382 880b 	msr	PSPLIM, r2
10003862:	f380 8809 	msr	PSP, r0
10003866:	4718      	bx	r3
            "   msr psplim, r2                                  \n" /* Restore the PSPLIM register value for the task. */
            "   msr psp, r0                                     \n" /* Remember the new top of stack for the task. */
            "   bx r3                                           \n"
            ::"i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY )
        );
    }
10003868:	380085b8 	stmdacc	r0, {r3, r4, r5, r7, r8, sl, pc}

1000386c <SVC_Handler>:

#else /* ( configENABLE_MPU == 1 ) && ( configUSE_MPU_WRAPPERS_V1 == 0 ) */

    void SVC_Handler( void ) /* __attribute__ (( naked )) PRIVILEGED_FUNCTION */
    {
        __asm volatile
1000386c:	f01e 0f04 	tst.w	lr, #4
10003870:	bf0c      	ite	eq
10003872:	f3ef 8008 	mrseq	r0, MSP
10003876:	f3ef 8009 	mrsne	r0, PSP
1000387a:	4901      	ldr	r1, [pc, #4]	; (10003880 <SVC_Handler+0x14>)
1000387c:	4708      	bx	r1
            "   mrseq r0, msp                                   \n"
            "   mrsne r0, psp                                   \n"
            "   ldr r1, =vPortSVCHandler_C                      \n"
            "   bx r1                                           \n"
        );
    }
1000387e:	36cf0000 	strbcc	r0, [pc], r0
10003882:	 	andcs	r1, r1, r0

10003884 <_getpid>:
10003884:	2001      	movs	r0, #1
10003886:	4770      	bx	lr

10003888 <_kill>:
10003888:	b508      	push	{r3, lr}
1000388a:	f000 f867 	bl	1000395c <__errno>
1000388e:	2316      	movs	r3, #22
10003890:	6003      	str	r3, [r0, #0]
10003892:	f04f 30ff 	mov.w	r0, #4294967295
10003896:	bd08      	pop	{r3, pc}

10003898 <_exit>:
10003898:	b508      	push	{r3, lr}
1000389a:	f04f 31ff 	mov.w	r1, #4294967295
1000389e:	f7ff fff3 	bl	10003888 <_kill>
100038a2:	e7fe      	b.n	100038a2 <_exit+0xa>

100038a4 <Reset_Handler>:
                .thumb_func
                .type    Reset_Handler, %function
                .globl   Reset_Handler
                .fnstart
Reset_Handler:
                ldr      r0, =__INITIAL_SP
100038a4:	4815      	ldr	r0, [pc, #84]	; (100038fc <BusFault_Handler+0x4>)
                msr      psp, r0
100038a6:	f380 8809 	msr	PSP, r0

                ldr      r0, =__STACK_LIMIT
100038aa:	4815      	ldr	r0, [pc, #84]	; (10003900 <BusFault_Handler+0x8>)
                msr      msplim, r0
100038ac:	f380 880a 	msr	MSPLIM, r0
                msr      psplim, r0
100038b0:	f380 880b 	msr	PSPLIM, r0
                ldr      r0, =__STACK_SEAL
                ldr      r1, =0xFEF5EDA5U
                strd     r1,r1,[r0,#0]
                #endif

                bl       SystemInit
100038b4:	f7fd f86c 	bl	10000990 <SystemInit>

                ldr      r4, =__copy_table_start__
100038b8:	4c12      	ldr	r4, [pc, #72]	; (10003904 <BusFault_Handler+0xc>)
                ldr      r5, =__copy_table_end__
100038ba:	4d13      	ldr	r5, [pc, #76]	; (10003908 <BusFault_Handler+0x10>)

.L_loop0:
                cmp      r4, r5
100038bc:	42ac      	cmp	r4, r5
                bge      .L_loop0_done
100038be:	da0a      	bge.n	100038d6 <Reset_Handler+0x32>
                ldr      r1, [r4]                /* source address */
100038c0:	6821      	ldr	r1, [r4, #0]
                ldr      r2, [r4, #4]            /* destination address */
100038c2:	6862      	ldr	r2, [r4, #4]
                ldr      r3, [r4, #8]            /* word count */
100038c4:	68a3      	ldr	r3, [r4, #8]
                lsls     r3, r3, #2              /* byte count */
100038c6:	009b      	lsls	r3, r3, #2

.L_loop0_0:
                subs     r3, #4                  /* decrement byte count */
100038c8:	3b04      	subs	r3, #4
                ittt     ge
100038ca:	bfa2      	ittt	ge
                ldrge    r0, [r1, r3]
100038cc:	58c8      	ldrge	r0, [r1, r3]
                strge    r0, [r2, r3]
100038ce:	50d0      	strge	r0, [r2, r3]
                bge      .L_loop0_0
100038d0:	e7fa      	bge.n	100038c8 <Reset_Handler+0x24>

                adds     r4, #12
100038d2:	340c      	adds	r4, #12
                b        .L_loop0
100038d4:	e7f2      	b.n	100038bc <Reset_Handler+0x18>
.L_loop0_done:

                ldr      r3, =__zero_table_start__
100038d6:	4b0d      	ldr	r3, [pc, #52]	; (1000390c <BusFault_Handler+0x14>)
                ldr      r4, =__zero_table_end__
100038d8:	4c0d      	ldr	r4, [pc, #52]	; (10003910 <BusFault_Handler+0x18>)

.L_loop2:
                cmp      r3, r4
100038da:	42a3      	cmp	r3, r4
                bge      .L_loop2_done
100038dc:	da09      	bge.n	100038f2 <Reset_Handler+0x4e>
                ldr      r1, [r3]                /* destination address */
100038de:	6819      	ldr	r1, [r3, #0]
                ldr      r2, [r3, #4]            /* word count */
100038e0:	685a      	ldr	r2, [r3, #4]
                lsls     r2, r2, #2              /* byte count */
100038e2:	0092      	lsls	r2, r2, #2
                movs     r0, 0
100038e4:	2000      	movs	r0, #0

.L_loop2_0:
                subs     r2, #4                  /* decrement byte count */
100038e6:	3a04      	subs	r2, #4
                itt      ge
100038e8:	bfa4      	itt	ge
                strge    r0, [r1, r2]
100038ea:	5088      	strge	r0, [r1, r2]
                bge      .L_loop2_0
100038ec:	e7fb      	bge.n	100038e6 <Reset_Handler+0x42>

                adds     r3, #8
100038ee:	3308      	adds	r3, #8
                b        .L_loop2
100038f0:	e7f3      	b.n	100038da <Reset_Handler+0x36>
.L_loop2_done:

                bl       main
100038f2:	f7fd f837 	bl	10000964 <main>
                .thumb_func
                .type    HardFault_Handler, %function
                .weak    HardFault_Handler
                .fnstart
HardFault_Handler:
                b        .
100038f6:	e7fe      	b.n	100038f6 <Reset_Handler+0x52>

100038f8 <BusFault_Handler>:
                .thumb_func
                .type    Default_Handler, %function
                .weak    Default_Handler
                .fnstart
Default_Handler:
                b        .
100038f8:	e7fe      	b.n	100038f8 <BusFault_Handler>
100038fa:	00000000 	andeq	r0, r0, r0
                ldr      r0, =__INITIAL_SP
100038fe:	f0003810 			; <UNDEFINED> instruction: 0xf0003810
                ldr      r0, =__STACK_LIMIT
10003902:	5ebc380f 	cdppl	8, 11, cr3, cr12, cr15, {0}
                ldr      r4, =__copy_table_start__
10003906:	5ec81000 	cdppl	0, 12, cr1, cr8, cr0, {0}
                ldr      r5, =__copy_table_end__
1000390a:	5ec81000 	cdppl	0, 12, cr1, cr8, cr0, {0}
                ldr      r3, =__zero_table_start__
1000390e:	5ec81000 	cdppl	0, 12, cr1, cr8, cr0, {0}
                ldr      r4, =__zero_table_end__
10003912:	 	ldrbtlt	r1, [r2], -r0

10003914 <HardFault_Handler>:
.global fault_dump_handler

.global HardFault_Handler
.type HardFault_Handler, % function
HardFault_Handler:
    cpsid   i                           /* disable interrupts */
10003914:	b672      	cpsid	i
    ldr     r3, =fd_main_stack_base     /* r3 = &fd_main_stack_base */
10003916:	4b0e      	ldr	r3, [pc, #56]	; (10003950 <stack_invalid+0xe>)
    ldr     r1, [r3]                    /* r1 = fd_main_stack_base  */
10003918:	6819      	ldr	r1, [r3, #0]
    ldr     r3, =fd_main_stack_full     /* r3 = &fd_main_stack_full */
1000391a:	4b0e      	ldr	r3, [pc, #56]	; (10003954 <stack_invalid+0x12>)
    ldr     r2, [r3]                    /* r2 = fd_main_stack_full  */
1000391c:	681a      	ldr	r2, [r3, #0]

    tst     lr, #4                      /* use exc_return value get sp value */
1000391e:	f01e 0f04 	tst.w	lr, #4
    bne     stack_checked               /* if (sp != msp), jump to stack_checked */
10003922:	d105      	bne.n	10003930 <stack_checked>

    mrs     r0, msp                     /* else (sp == msp), r0 = sp = msp */
10003924:	f3ef 8008 	mrs	r0, MSP
    cmp     r0, r1                      /* compare msp and stack base addr */
10003928:	4288      	cmp	r0, r1
    blt     stack_invalid               /* msp < stack_base_addr, msp is invalid */
1000392a:	db0a      	blt.n	10003942 <stack_invalid>
    cmp     r0, r2                      /* compare msp and stack full addr */
1000392c:	4290      	cmp	r0, r2
    bgt     stack_invalid               /* msp > stack_base_addr, msp is invalid */
1000392e:	dc08      	bgt.n	10003942 <stack_invalid>

10003930 <stack_checked>:
    
stack_checked:
    push    {r4 - r11}                  /* sp value is in stack range, push r4 - r11 to stack */
10003930:	e92d 0ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}

    tst     lr, #4                      /* update sp value to r0 */
10003934:	f01e 0f04 	tst.w	lr, #4
    ite     eq
10003938:	bf0c      	ite	eq
    mrseq   r0, msp                     /* lr & 0x04 == 1, r0 = sp = msp */
1000393a:	f3ef 8008 	mrseq	r0, MSP
    mrsne   r0, psp                     /* lr & 0x04 == 0, r0 = sp = psp */
1000393e:	f3ef 8009 	mrsne	r0, PSP

10003942 <stack_invalid>:

stack_invalid:
    mov     r1, lr                      /* now, r0 = sp, r1 = lr */
10003942:	4671      	mov	r1, lr
    ldr     r2, =fault_dump_handler     /* now, r2 = fault_dump_handler */
10003944:	4a04      	ldr	r2, [pc, #16]	; (10003958 <stack_invalid+0x16>)
    dsb                                 /* wait for memory access to complete */
10003946:	f3bf 8f4f 	dsb	sy
    cpsie   i                           /* enable interrupts */
1000394a:	b662      	cpsie	i
    bx      r2                          /* jump to fault_dump_handler */
1000394c:	4710      	bx	r2
1000394e:	85700000 	ldrbhi	r0, [r0, #-0]!
    ldr     r3, =fd_main_stack_base     /* r3 = &fd_main_stack_base */
10003952:	85743800 	ldrbhi	r3, [r4, #-2048]!	; 0xfffff800
    ldr     r3, =fd_main_stack_full     /* r3 = &fd_main_stack_full */
10003956:	1ce13800 	stclne	8, cr3, [r1]
    ldr     r2, =fault_dump_handler     /* now, r2 = fault_dump_handler */
1000395a:	 	blmi	10047962 <__copy_table_end__+0x41a9a>

1000395c <__errno>:
1000395c:	4b01      	ldr	r3, [pc, #4]	; (10003964 <__errno+0x8>)
1000395e:	6818      	ldr	r0, [r3, #0]
10003960:	4770      	bx	lr
10003962:	bf00      	nop
10003964:	38000014 	stmdacc	r0, {r2, r4}

10003968 <memcpy>:
10003968:	4684      	mov	ip, r0
1000396a:	ea41 0300 	orr.w	r3, r1, r0
1000396e:	f013 0303 	ands.w	r3, r3, #3
10003972:	d149      	bne.n	10003a08 <memcpy+0xa0>
10003974:	3a40      	subs	r2, #64	; 0x40
10003976:	d323      	bcc.n	100039c0 <memcpy+0x58>
10003978:	680b      	ldr	r3, [r1, #0]
1000397a:	6003      	str	r3, [r0, #0]
1000397c:	684b      	ldr	r3, [r1, #4]
1000397e:	6043      	str	r3, [r0, #4]
10003980:	688b      	ldr	r3, [r1, #8]
10003982:	6083      	str	r3, [r0, #8]
10003984:	68cb      	ldr	r3, [r1, #12]
10003986:	60c3      	str	r3, [r0, #12]
10003988:	690b      	ldr	r3, [r1, #16]
1000398a:	6103      	str	r3, [r0, #16]
1000398c:	694b      	ldr	r3, [r1, #20]
1000398e:	6143      	str	r3, [r0, #20]
10003990:	698b      	ldr	r3, [r1, #24]
10003992:	6183      	str	r3, [r0, #24]
10003994:	69cb      	ldr	r3, [r1, #28]
10003996:	61c3      	str	r3, [r0, #28]
10003998:	6a0b      	ldr	r3, [r1, #32]
1000399a:	6203      	str	r3, [r0, #32]
1000399c:	6a4b      	ldr	r3, [r1, #36]	; 0x24
1000399e:	6243      	str	r3, [r0, #36]	; 0x24
100039a0:	6a8b      	ldr	r3, [r1, #40]	; 0x28
100039a2:	6283      	str	r3, [r0, #40]	; 0x28
100039a4:	6acb      	ldr	r3, [r1, #44]	; 0x2c
100039a6:	62c3      	str	r3, [r0, #44]	; 0x2c
100039a8:	6b0b      	ldr	r3, [r1, #48]	; 0x30
100039aa:	6303      	str	r3, [r0, #48]	; 0x30
100039ac:	6b4b      	ldr	r3, [r1, #52]	; 0x34
100039ae:	6343      	str	r3, [r0, #52]	; 0x34
100039b0:	6b8b      	ldr	r3, [r1, #56]	; 0x38
100039b2:	6383      	str	r3, [r0, #56]	; 0x38
100039b4:	6bcb      	ldr	r3, [r1, #60]	; 0x3c
100039b6:	63c3      	str	r3, [r0, #60]	; 0x3c
100039b8:	3040      	adds	r0, #64	; 0x40
100039ba:	3140      	adds	r1, #64	; 0x40
100039bc:	3a40      	subs	r2, #64	; 0x40
100039be:	d2db      	bcs.n	10003978 <memcpy+0x10>
100039c0:	3230      	adds	r2, #48	; 0x30
100039c2:	d30b      	bcc.n	100039dc <memcpy+0x74>
100039c4:	680b      	ldr	r3, [r1, #0]
100039c6:	6003      	str	r3, [r0, #0]
100039c8:	684b      	ldr	r3, [r1, #4]
100039ca:	6043      	str	r3, [r0, #4]
100039cc:	688b      	ldr	r3, [r1, #8]
100039ce:	6083      	str	r3, [r0, #8]
100039d0:	68cb      	ldr	r3, [r1, #12]
100039d2:	60c3      	str	r3, [r0, #12]
100039d4:	3010      	adds	r0, #16
100039d6:	3110      	adds	r1, #16
100039d8:	3a10      	subs	r2, #16
100039da:	d2f3      	bcs.n	100039c4 <memcpy+0x5c>
100039dc:	320c      	adds	r2, #12
100039de:	d305      	bcc.n	100039ec <memcpy+0x84>
100039e0:	f851 3b04 	ldr.w	r3, [r1], #4
100039e4:	f840 3b04 	str.w	r3, [r0], #4
100039e8:	3a04      	subs	r2, #4
100039ea:	d2f9      	bcs.n	100039e0 <memcpy+0x78>
100039ec:	3204      	adds	r2, #4
100039ee:	d008      	beq.n	10003a02 <memcpy+0x9a>
100039f0:	07d2      	lsls	r2, r2, #31
100039f2:	bf1c      	itt	ne
100039f4:	f811 3b01 	ldrbne.w	r3, [r1], #1
100039f8:	f800 3b01 	strbne.w	r3, [r0], #1
100039fc:	d301      	bcc.n	10003a02 <memcpy+0x9a>
100039fe:	880b      	ldrh	r3, [r1, #0]
10003a00:	8003      	strh	r3, [r0, #0]
10003a02:	4660      	mov	r0, ip
10003a04:	4770      	bx	lr
10003a06:	bf00      	nop
10003a08:	2a08      	cmp	r2, #8
10003a0a:	d313      	bcc.n	10003a34 <memcpy+0xcc>
10003a0c:	078b      	lsls	r3, r1, #30
10003a0e:	d0b1      	beq.n	10003974 <memcpy+0xc>
10003a10:	f010 0303 	ands.w	r3, r0, #3
10003a14:	d0ae      	beq.n	10003974 <memcpy+0xc>
10003a16:	f1c3 0304 	rsb	r3, r3, #4
10003a1a:	1ad2      	subs	r2, r2, r3
10003a1c:	07db      	lsls	r3, r3, #31
10003a1e:	bf1c      	itt	ne
10003a20:	f811 3b01 	ldrbne.w	r3, [r1], #1
10003a24:	f800 3b01 	strbne.w	r3, [r0], #1
10003a28:	d3a4      	bcc.n	10003974 <memcpy+0xc>
10003a2a:	f831 3b02 	ldrh.w	r3, [r1], #2
10003a2e:	f820 3b02 	strh.w	r3, [r0], #2
10003a32:	e79f      	b.n	10003974 <memcpy+0xc>
10003a34:	3a04      	subs	r2, #4
10003a36:	d3d9      	bcc.n	100039ec <memcpy+0x84>
10003a38:	3a01      	subs	r2, #1
10003a3a:	f811 3b01 	ldrb.w	r3, [r1], #1
10003a3e:	f800 3b01 	strb.w	r3, [r0], #1
10003a42:	d2f9      	bcs.n	10003a38 <memcpy+0xd0>
10003a44:	780b      	ldrb	r3, [r1, #0]
10003a46:	7003      	strb	r3, [r0, #0]
10003a48:	784b      	ldrb	r3, [r1, #1]
10003a4a:	7043      	strb	r3, [r0, #1]
10003a4c:	788b      	ldrb	r3, [r1, #2]
10003a4e:	7083      	strb	r3, [r0, #2]
10003a50:	4660      	mov	r0, ip
10003a52:	4770      	bx	lr

10003a54 <memset>:
10003a54:	b570      	push	{r4, r5, r6, lr}
10003a56:	0786      	lsls	r6, r0, #30
10003a58:	d048      	beq.n	10003aec <memset+0x98>
10003a5a:	1e54      	subs	r4, r2, #1
10003a5c:	2a00      	cmp	r2, #0
10003a5e:	d03f      	beq.n	10003ae0 <memset+0x8c>
10003a60:	b2ca      	uxtb	r2, r1
10003a62:	4603      	mov	r3, r0
10003a64:	e001      	b.n	10003a6a <memset+0x16>
10003a66:	3c01      	subs	r4, #1
10003a68:	d33a      	bcc.n	10003ae0 <memset+0x8c>
10003a6a:	f803 2b01 	strb.w	r2, [r3], #1
10003a6e:	079d      	lsls	r5, r3, #30
10003a70:	d1f9      	bne.n	10003a66 <memset+0x12>
10003a72:	2c03      	cmp	r4, #3
10003a74:	d92d      	bls.n	10003ad2 <memset+0x7e>
10003a76:	b2cd      	uxtb	r5, r1
10003a78:	2c0f      	cmp	r4, #15
10003a7a:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
10003a7e:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
10003a82:	d936      	bls.n	10003af2 <memset+0x9e>
10003a84:	f1a4 0c10 	sub.w	ip, r4, #16
10003a88:	f103 0e20 	add.w	lr, r3, #32
10003a8c:	f103 0210 	add.w	r2, r3, #16
10003a90:	f02c 060f 	bic.w	r6, ip, #15
10003a94:	ea4f 1c1c 	mov.w	ip, ip, lsr #4
10003a98:	44b6      	add	lr, r6
10003a9a:	e942 5504 	strd	r5, r5, [r2, #-16]
10003a9e:	e942 5502 	strd	r5, r5, [r2, #-8]
10003aa2:	3210      	adds	r2, #16
10003aa4:	4572      	cmp	r2, lr
10003aa6:	d1f8      	bne.n	10003a9a <memset+0x46>
10003aa8:	f10c 0201 	add.w	r2, ip, #1
10003aac:	f014 0f0c 	tst.w	r4, #12
10003ab0:	f004 0c0f 	and.w	ip, r4, #15
10003ab4:	eb03 1202 	add.w	r2, r3, r2, lsl #4
10003ab8:	d013      	beq.n	10003ae2 <memset+0x8e>
10003aba:	f1ac 0304 	sub.w	r3, ip, #4
10003abe:	f023 0303 	bic.w	r3, r3, #3
10003ac2:	3304      	adds	r3, #4
10003ac4:	4413      	add	r3, r2
10003ac6:	f842 5b04 	str.w	r5, [r2], #4
10003aca:	4293      	cmp	r3, r2
10003acc:	d1fb      	bne.n	10003ac6 <memset+0x72>
10003ace:	f00c 0403 	and.w	r4, ip, #3
10003ad2:	b12c      	cbz	r4, 10003ae0 <memset+0x8c>
10003ad4:	b2ca      	uxtb	r2, r1
10003ad6:	441c      	add	r4, r3
10003ad8:	f803 2b01 	strb.w	r2, [r3], #1
10003adc:	429c      	cmp	r4, r3
10003ade:	d1fb      	bne.n	10003ad8 <memset+0x84>
10003ae0:	bd70      	pop	{r4, r5, r6, pc}
10003ae2:	4664      	mov	r4, ip
10003ae4:	4613      	mov	r3, r2
10003ae6:	2c00      	cmp	r4, #0
10003ae8:	d1f4      	bne.n	10003ad4 <memset+0x80>
10003aea:	e7f9      	b.n	10003ae0 <memset+0x8c>
10003aec:	4603      	mov	r3, r0
10003aee:	4614      	mov	r4, r2
10003af0:	e7bf      	b.n	10003a72 <memset+0x1e>
10003af2:	461a      	mov	r2, r3
10003af4:	46a4      	mov	ip, r4
10003af6:	e7e0      	b.n	10003aba <memset+0x66>

10003af8 <register_fini>:
10003af8:	4b02      	ldr	r3, [pc, #8]	; (10003b04 <register_fini+0xc>)
10003afa:	b113      	cbz	r3, 10003b02 <register_fini+0xa>
10003afc:	4802      	ldr	r0, [pc, #8]	; (10003b08 <register_fini+0x10>)
10003afe:	f000 b805 	b.w	10003b0c <atexit>
10003b02:	4770      	bx	lr
10003b04:	00000000 	andeq	r0, r0, r0
10003b08:	10003b19 	andne	r3, r0, r9, lsl fp

10003b0c <atexit>:
10003b0c:	2300      	movs	r3, #0
10003b0e:	4601      	mov	r1, r0
10003b10:	461a      	mov	r2, r3
10003b12:	4618      	mov	r0, r3
10003b14:	f000 b81a 	b.w	10003b4c <__register_exitproc>

10003b18 <__libc_fini_array>:
10003b18:	b538      	push	{r3, r4, r5, lr}
10003b1a:	4b08      	ldr	r3, [pc, #32]	; (10003b3c <__libc_fini_array+0x24>)
10003b1c:	4d08      	ldr	r5, [pc, #32]	; (10003b40 <__libc_fini_array+0x28>)
10003b1e:	1b5b      	subs	r3, r3, r5
10003b20:	109c      	asrs	r4, r3, #2
10003b22:	d007      	beq.n	10003b34 <__libc_fini_array+0x1c>
10003b24:	3b04      	subs	r3, #4
10003b26:	441d      	add	r5, r3
10003b28:	3c01      	subs	r4, #1
10003b2a:	f855 3904 	ldr.w	r3, [r5], #-4
10003b2e:	4798      	blx	r3
10003b30:	2c00      	cmp	r4, #0
10003b32:	d1f9      	bne.n	10003b28 <__libc_fini_array+0x10>
10003b34:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
10003b38:	f001 be84 	b.w	10005844 <_fini>
10003b3c:	38000450 	stmdacc	r0, {r4, r6, sl}
10003b40:	3800044c 	stmdacc	r0, {r2, r3, r6, sl}

10003b44 <__retarget_lock_acquire_recursive>:
10003b44:	4770      	bx	lr
10003b46:	bf00      	nop

10003b48 <__retarget_lock_release_recursive>:
10003b48:	4770      	bx	lr
10003b4a:	bf00      	nop

10003b4c <__register_exitproc>:
10003b4c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
10003b50:	f8df a084 	ldr.w	sl, [pc, #132]	; 10003bd8 <__register_exitproc+0x8c>
10003b54:	4606      	mov	r6, r0
10003b56:	4698      	mov	r8, r3
10003b58:	460f      	mov	r7, r1
10003b5a:	f8da 0000 	ldr.w	r0, [sl]
10003b5e:	4691      	mov	r9, r2
10003b60:	f7ff fff0 	bl	10003b44 <__retarget_lock_acquire_recursive>
10003b64:	4b1b      	ldr	r3, [pc, #108]	; (10003bd4 <__register_exitproc+0x88>)
10003b66:	681b      	ldr	r3, [r3, #0]
10003b68:	f8d3 4148 	ldr.w	r4, [r3, #328]	; 0x148
10003b6c:	b334      	cbz	r4, 10003bbc <__register_exitproc+0x70>
10003b6e:	6865      	ldr	r5, [r4, #4]
10003b70:	2d1f      	cmp	r5, #31
10003b72:	dc28      	bgt.n	10003bc6 <__register_exitproc+0x7a>
10003b74:	b95e      	cbnz	r6, 10003b8e <__register_exitproc+0x42>
10003b76:	1c6b      	adds	r3, r5, #1
10003b78:	3502      	adds	r5, #2
10003b7a:	f8da 0000 	ldr.w	r0, [sl]
10003b7e:	6063      	str	r3, [r4, #4]
10003b80:	f844 7025 	str.w	r7, [r4, r5, lsl #2]
10003b84:	f7ff ffe0 	bl	10003b48 <__retarget_lock_release_recursive>
10003b88:	2000      	movs	r0, #0
10003b8a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
10003b8e:	eb04 0185 	add.w	r1, r4, r5, lsl #2
10003b92:	2301      	movs	r3, #1
10003b94:	2e02      	cmp	r6, #2
10003b96:	f8c1 9088 	str.w	r9, [r1, #136]	; 0x88
10003b9a:	fa03 f305 	lsl.w	r3, r3, r5
10003b9e:	f8d4 2188 	ldr.w	r2, [r4, #392]	; 0x188
10003ba2:	ea42 0203 	orr.w	r2, r2, r3
10003ba6:	f8c4 2188 	str.w	r2, [r4, #392]	; 0x188
10003baa:	f8c1 8108 	str.w	r8, [r1, #264]	; 0x108
10003bae:	d1e2      	bne.n	10003b76 <__register_exitproc+0x2a>
10003bb0:	f8d4 218c 	ldr.w	r2, [r4, #396]	; 0x18c
10003bb4:	4313      	orrs	r3, r2
10003bb6:	f8c4 318c 	str.w	r3, [r4, #396]	; 0x18c
10003bba:	e7dc      	b.n	10003b76 <__register_exitproc+0x2a>
10003bbc:	f503 74a6 	add.w	r4, r3, #332	; 0x14c
10003bc0:	f8c3 4148 	str.w	r4, [r3, #328]	; 0x148
10003bc4:	e7d3      	b.n	10003b6e <__register_exitproc+0x22>
10003bc6:	f8da 0000 	ldr.w	r0, [sl]
10003bca:	f7ff ffbd 	bl	10003b48 <__retarget_lock_release_recursive>
10003bce:	f04f 30ff 	mov.w	r0, #4294967295
10003bd2:	e7da      	b.n	10003b8a <__register_exitproc+0x3e>
10003bd4:	10005ddc 	ldrdne	r5, [r0], -ip
10003bd8:	38000440 	stmdacc	r0, {r6, sl}

10003bdc <__aeabi_drsub>:
10003bdc:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
10003be0:	e002      	b.n	10003be8 <__adddf3>
10003be2:	bf00      	nop

10003be4 <__aeabi_dsub>:
10003be4:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

10003be8 <__adddf3>:
10003be8:	b530      	push	{r4, r5, lr}
10003bea:	ea4f 0441 	mov.w	r4, r1, lsl #1
10003bee:	ea4f 0543 	mov.w	r5, r3, lsl #1
10003bf2:	ea94 0f05 	teq	r4, r5
10003bf6:	bf08      	it	eq
10003bf8:	ea90 0f02 	teqeq	r0, r2
10003bfc:	bf1f      	itttt	ne
10003bfe:	ea54 0c00 	orrsne.w	ip, r4, r0
10003c02:	ea55 0c02 	orrsne.w	ip, r5, r2
10003c06:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
10003c0a:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
10003c0e:	f000 80e2 	beq.w	10003dd6 <__adddf3+0x1ee>
10003c12:	ea4f 5454 	mov.w	r4, r4, lsr #21
10003c16:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
10003c1a:	bfb8      	it	lt
10003c1c:	426d      	neglt	r5, r5
10003c1e:	dd0c      	ble.n	10003c3a <__adddf3+0x52>
10003c20:	442c      	add	r4, r5
10003c22:	ea80 0202 	eor.w	r2, r0, r2
10003c26:	ea81 0303 	eor.w	r3, r1, r3
10003c2a:	ea82 0000 	eor.w	r0, r2, r0
10003c2e:	ea83 0101 	eor.w	r1, r3, r1
10003c32:	ea80 0202 	eor.w	r2, r0, r2
10003c36:	ea81 0303 	eor.w	r3, r1, r3
10003c3a:	2d36      	cmp	r5, #54	; 0x36
10003c3c:	bf88      	it	hi
10003c3e:	bd30      	pophi	{r4, r5, pc}
10003c40:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
10003c44:	ea4f 3101 	mov.w	r1, r1, lsl #12
10003c48:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
10003c4c:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
10003c50:	d002      	beq.n	10003c58 <__adddf3+0x70>
10003c52:	4240      	negs	r0, r0
10003c54:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
10003c58:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
10003c5c:	ea4f 3303 	mov.w	r3, r3, lsl #12
10003c60:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
10003c64:	d002      	beq.n	10003c6c <__adddf3+0x84>
10003c66:	4252      	negs	r2, r2
10003c68:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
10003c6c:	ea94 0f05 	teq	r4, r5
10003c70:	f000 80a7 	beq.w	10003dc2 <__adddf3+0x1da>
10003c74:	f1a4 0401 	sub.w	r4, r4, #1
10003c78:	f1d5 0e20 	rsbs	lr, r5, #32
10003c7c:	db0d      	blt.n	10003c9a <__adddf3+0xb2>
10003c7e:	fa02 fc0e 	lsl.w	ip, r2, lr
10003c82:	fa22 f205 	lsr.w	r2, r2, r5
10003c86:	1880      	adds	r0, r0, r2
10003c88:	f141 0100 	adc.w	r1, r1, #0
10003c8c:	fa03 f20e 	lsl.w	r2, r3, lr
10003c90:	1880      	adds	r0, r0, r2
10003c92:	fa43 f305 	asr.w	r3, r3, r5
10003c96:	4159      	adcs	r1, r3
10003c98:	e00e      	b.n	10003cb8 <__adddf3+0xd0>
10003c9a:	f1a5 0520 	sub.w	r5, r5, #32
10003c9e:	f10e 0e20 	add.w	lr, lr, #32
10003ca2:	2a01      	cmp	r2, #1
10003ca4:	fa03 fc0e 	lsl.w	ip, r3, lr
10003ca8:	bf28      	it	cs
10003caa:	f04c 0c02 	orrcs.w	ip, ip, #2
10003cae:	fa43 f305 	asr.w	r3, r3, r5
10003cb2:	18c0      	adds	r0, r0, r3
10003cb4:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
10003cb8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
10003cbc:	d507      	bpl.n	10003cce <__adddf3+0xe6>
10003cbe:	f04f 0e00 	mov.w	lr, #0
10003cc2:	f1dc 0c00 	rsbs	ip, ip, #0
10003cc6:	eb7e 0000 	sbcs.w	r0, lr, r0
10003cca:	eb6e 0101 	sbc.w	r1, lr, r1
10003cce:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
10003cd2:	d31b      	bcc.n	10003d0c <__adddf3+0x124>
10003cd4:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
10003cd8:	d30c      	bcc.n	10003cf4 <__adddf3+0x10c>
10003cda:	0849      	lsrs	r1, r1, #1
10003cdc:	ea5f 0030 	movs.w	r0, r0, rrx
10003ce0:	ea4f 0c3c 	mov.w	ip, ip, rrx
10003ce4:	f104 0401 	add.w	r4, r4, #1
10003ce8:	ea4f 5244 	mov.w	r2, r4, lsl #21
10003cec:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
10003cf0:	f080 809a 	bcs.w	10003e28 <__adddf3+0x240>
10003cf4:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
10003cf8:	bf08      	it	eq
10003cfa:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
10003cfe:	f150 0000 	adcs.w	r0, r0, #0
10003d02:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
10003d06:	ea41 0105 	orr.w	r1, r1, r5
10003d0a:	bd30      	pop	{r4, r5, pc}
10003d0c:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
10003d10:	4140      	adcs	r0, r0
10003d12:	eb41 0101 	adc.w	r1, r1, r1
10003d16:	3c01      	subs	r4, #1
10003d18:	bf28      	it	cs
10003d1a:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
10003d1e:	d2e9      	bcs.n	10003cf4 <__adddf3+0x10c>
10003d20:	f091 0f00 	teq	r1, #0
10003d24:	bf04      	itt	eq
10003d26:	4601      	moveq	r1, r0
10003d28:	2000      	moveq	r0, #0
10003d2a:	fab1 f381 	clz	r3, r1
10003d2e:	bf08      	it	eq
10003d30:	3320      	addeq	r3, #32
10003d32:	f1a3 030b 	sub.w	r3, r3, #11
10003d36:	f1b3 0220 	subs.w	r2, r3, #32
10003d3a:	da0c      	bge.n	10003d56 <__adddf3+0x16e>
10003d3c:	320c      	adds	r2, #12
10003d3e:	dd08      	ble.n	10003d52 <__adddf3+0x16a>
10003d40:	f102 0c14 	add.w	ip, r2, #20
10003d44:	f1c2 020c 	rsb	r2, r2, #12
10003d48:	fa01 f00c 	lsl.w	r0, r1, ip
10003d4c:	fa21 f102 	lsr.w	r1, r1, r2
10003d50:	e00c      	b.n	10003d6c <__adddf3+0x184>
10003d52:	f102 0214 	add.w	r2, r2, #20
10003d56:	bfd8      	it	le
10003d58:	f1c2 0c20 	rsble	ip, r2, #32
10003d5c:	fa01 f102 	lsl.w	r1, r1, r2
10003d60:	fa20 fc0c 	lsr.w	ip, r0, ip
10003d64:	bfdc      	itt	le
10003d66:	ea41 010c 	orrle.w	r1, r1, ip
10003d6a:	4090      	lslle	r0, r2
10003d6c:	1ae4      	subs	r4, r4, r3
10003d6e:	bfa2      	ittt	ge
10003d70:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
10003d74:	4329      	orrge	r1, r5
10003d76:	bd30      	popge	{r4, r5, pc}
10003d78:	ea6f 0404 	mvn.w	r4, r4
10003d7c:	3c1f      	subs	r4, #31
10003d7e:	da1c      	bge.n	10003dba <__adddf3+0x1d2>
10003d80:	340c      	adds	r4, #12
10003d82:	dc0e      	bgt.n	10003da2 <__adddf3+0x1ba>
10003d84:	f104 0414 	add.w	r4, r4, #20
10003d88:	f1c4 0220 	rsb	r2, r4, #32
10003d8c:	fa20 f004 	lsr.w	r0, r0, r4
10003d90:	fa01 f302 	lsl.w	r3, r1, r2
10003d94:	ea40 0003 	orr.w	r0, r0, r3
10003d98:	fa21 f304 	lsr.w	r3, r1, r4
10003d9c:	ea45 0103 	orr.w	r1, r5, r3
10003da0:	bd30      	pop	{r4, r5, pc}
10003da2:	f1c4 040c 	rsb	r4, r4, #12
10003da6:	f1c4 0220 	rsb	r2, r4, #32
10003daa:	fa20 f002 	lsr.w	r0, r0, r2
10003dae:	fa01 f304 	lsl.w	r3, r1, r4
10003db2:	ea40 0003 	orr.w	r0, r0, r3
10003db6:	4629      	mov	r1, r5
10003db8:	bd30      	pop	{r4, r5, pc}
10003dba:	fa21 f004 	lsr.w	r0, r1, r4
10003dbe:	4629      	mov	r1, r5
10003dc0:	bd30      	pop	{r4, r5, pc}
10003dc2:	f094 0f00 	teq	r4, #0
10003dc6:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
10003dca:	bf06      	itte	eq
10003dcc:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
10003dd0:	3401      	addeq	r4, #1
10003dd2:	3d01      	subne	r5, #1
10003dd4:	e74e      	b.n	10003c74 <__adddf3+0x8c>
10003dd6:	ea7f 5c64 	mvns.w	ip, r4, asr #21
10003dda:	bf18      	it	ne
10003ddc:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
10003de0:	d029      	beq.n	10003e36 <__adddf3+0x24e>
10003de2:	ea94 0f05 	teq	r4, r5
10003de6:	bf08      	it	eq
10003de8:	ea90 0f02 	teqeq	r0, r2
10003dec:	d005      	beq.n	10003dfa <__adddf3+0x212>
10003dee:	ea54 0c00 	orrs.w	ip, r4, r0
10003df2:	bf04      	itt	eq
10003df4:	4619      	moveq	r1, r3
10003df6:	4610      	moveq	r0, r2
10003df8:	bd30      	pop	{r4, r5, pc}
10003dfa:	ea91 0f03 	teq	r1, r3
10003dfe:	bf1e      	ittt	ne
10003e00:	2100      	movne	r1, #0
10003e02:	2000      	movne	r0, #0
10003e04:	bd30      	popne	{r4, r5, pc}
10003e06:	ea5f 5c54 	movs.w	ip, r4, lsr #21
10003e0a:	d105      	bne.n	10003e18 <__adddf3+0x230>
10003e0c:	0040      	lsls	r0, r0, #1
10003e0e:	4149      	adcs	r1, r1
10003e10:	bf28      	it	cs
10003e12:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
10003e16:	bd30      	pop	{r4, r5, pc}
10003e18:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
10003e1c:	bf3c      	itt	cc
10003e1e:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
10003e22:	bd30      	popcc	{r4, r5, pc}
10003e24:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
10003e28:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
10003e2c:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
10003e30:	f04f 0000 	mov.w	r0, #0
10003e34:	bd30      	pop	{r4, r5, pc}
10003e36:	ea7f 5c64 	mvns.w	ip, r4, asr #21
10003e3a:	bf1a      	itte	ne
10003e3c:	4619      	movne	r1, r3
10003e3e:	4610      	movne	r0, r2
10003e40:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
10003e44:	bf1c      	itt	ne
10003e46:	460b      	movne	r3, r1
10003e48:	4602      	movne	r2, r0
10003e4a:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
10003e4e:	bf06      	itte	eq
10003e50:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
10003e54:	ea91 0f03 	teqeq	r1, r3
10003e58:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
10003e5c:	bd30      	pop	{r4, r5, pc}
10003e5e:	bf00      	nop

10003e60 <__aeabi_ui2d>:
10003e60:	f090 0f00 	teq	r0, #0
10003e64:	bf04      	itt	eq
10003e66:	2100      	moveq	r1, #0
10003e68:	4770      	bxeq	lr
10003e6a:	b530      	push	{r4, r5, lr}
10003e6c:	f44f 6480 	mov.w	r4, #1024	; 0x400
10003e70:	f104 0432 	add.w	r4, r4, #50	; 0x32
10003e74:	f04f 0500 	mov.w	r5, #0
10003e78:	f04f 0100 	mov.w	r1, #0
10003e7c:	e750      	b.n	10003d20 <__adddf3+0x138>
10003e7e:	bf00      	nop

10003e80 <__aeabi_i2d>:
10003e80:	f090 0f00 	teq	r0, #0
10003e84:	bf04      	itt	eq
10003e86:	2100      	moveq	r1, #0
10003e88:	4770      	bxeq	lr
10003e8a:	b530      	push	{r4, r5, lr}
10003e8c:	f44f 6480 	mov.w	r4, #1024	; 0x400
10003e90:	f104 0432 	add.w	r4, r4, #50	; 0x32
10003e94:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
10003e98:	bf48      	it	mi
10003e9a:	4240      	negmi	r0, r0
10003e9c:	f04f 0100 	mov.w	r1, #0
10003ea0:	e73e      	b.n	10003d20 <__adddf3+0x138>
10003ea2:	bf00      	nop

10003ea4 <__aeabi_f2d>:
10003ea4:	0042      	lsls	r2, r0, #1
10003ea6:	ea4f 01e2 	mov.w	r1, r2, asr #3
10003eaa:	ea4f 0131 	mov.w	r1, r1, rrx
10003eae:	ea4f 7002 	mov.w	r0, r2, lsl #28
10003eb2:	bf1f      	itttt	ne
10003eb4:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
10003eb8:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
10003ebc:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
10003ec0:	4770      	bxne	lr
10003ec2:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
10003ec6:	bf08      	it	eq
10003ec8:	4770      	bxeq	lr
10003eca:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
10003ece:	bf04      	itt	eq
10003ed0:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
10003ed4:	4770      	bxeq	lr
10003ed6:	b530      	push	{r4, r5, lr}
10003ed8:	f44f 7460 	mov.w	r4, #896	; 0x380
10003edc:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
10003ee0:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
10003ee4:	e71c      	b.n	10003d20 <__adddf3+0x138>
10003ee6:	bf00      	nop

10003ee8 <__aeabi_ul2d>:
10003ee8:	ea50 0201 	orrs.w	r2, r0, r1
10003eec:	bf08      	it	eq
10003eee:	4770      	bxeq	lr
10003ef0:	b530      	push	{r4, r5, lr}
10003ef2:	f04f 0500 	mov.w	r5, #0
10003ef6:	e00a      	b.n	10003f0e <__aeabi_l2d+0x16>

10003ef8 <__aeabi_l2d>:
10003ef8:	ea50 0201 	orrs.w	r2, r0, r1
10003efc:	bf08      	it	eq
10003efe:	4770      	bxeq	lr
10003f00:	b530      	push	{r4, r5, lr}
10003f02:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
10003f06:	d502      	bpl.n	10003f0e <__aeabi_l2d+0x16>
10003f08:	4240      	negs	r0, r0
10003f0a:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
10003f0e:	f44f 6480 	mov.w	r4, #1024	; 0x400
10003f12:	f104 0432 	add.w	r4, r4, #50	; 0x32
10003f16:	ea5f 5c91 	movs.w	ip, r1, lsr #22
10003f1a:	f43f aed8 	beq.w	10003cce <__adddf3+0xe6>
10003f1e:	f04f 0203 	mov.w	r2, #3
10003f22:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
10003f26:	bf18      	it	ne
10003f28:	3203      	addne	r2, #3
10003f2a:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
10003f2e:	bf18      	it	ne
10003f30:	3203      	addne	r2, #3
10003f32:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
10003f36:	f1c2 0320 	rsb	r3, r2, #32
10003f3a:	fa00 fc03 	lsl.w	ip, r0, r3
10003f3e:	fa20 f002 	lsr.w	r0, r0, r2
10003f42:	fa01 fe03 	lsl.w	lr, r1, r3
10003f46:	ea40 000e 	orr.w	r0, r0, lr
10003f4a:	fa21 f102 	lsr.w	r1, r1, r2
10003f4e:	4414      	add	r4, r2
10003f50:	e6bd      	b.n	10003cce <__adddf3+0xe6>
10003f52:	bf00      	nop

10003f54 <__aeabi_dmul>:
10003f54:	b570      	push	{r4, r5, r6, lr}
10003f56:	f04f 0cff 	mov.w	ip, #255	; 0xff
10003f5a:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
10003f5e:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
10003f62:	bf1d      	ittte	ne
10003f64:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
10003f68:	ea94 0f0c 	teqne	r4, ip
10003f6c:	ea95 0f0c 	teqne	r5, ip
10003f70:	f000 f8de 	bleq	10004130 <__aeabi_dmul+0x1dc>
10003f74:	442c      	add	r4, r5
10003f76:	ea81 0603 	eor.w	r6, r1, r3
10003f7a:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
10003f7e:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
10003f82:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
10003f86:	bf18      	it	ne
10003f88:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
10003f8c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
10003f90:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
10003f94:	d038      	beq.n	10004008 <__aeabi_dmul+0xb4>
10003f96:	fba0 ce02 	umull	ip, lr, r0, r2
10003f9a:	f04f 0500 	mov.w	r5, #0
10003f9e:	fbe1 e502 	umlal	lr, r5, r1, r2
10003fa2:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
10003fa6:	fbe0 e503 	umlal	lr, r5, r0, r3
10003faa:	f04f 0600 	mov.w	r6, #0
10003fae:	fbe1 5603 	umlal	r5, r6, r1, r3
10003fb2:	f09c 0f00 	teq	ip, #0
10003fb6:	bf18      	it	ne
10003fb8:	f04e 0e01 	orrne.w	lr, lr, #1
10003fbc:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
10003fc0:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
10003fc4:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
10003fc8:	d204      	bcs.n	10003fd4 <__aeabi_dmul+0x80>
10003fca:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
10003fce:	416d      	adcs	r5, r5
10003fd0:	eb46 0606 	adc.w	r6, r6, r6
10003fd4:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
10003fd8:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
10003fdc:	ea4f 20c5 	mov.w	r0, r5, lsl #11
10003fe0:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
10003fe4:	ea4f 2ece 	mov.w	lr, lr, lsl #11
10003fe8:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
10003fec:	bf88      	it	hi
10003fee:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
10003ff2:	d81e      	bhi.n	10004032 <__aeabi_dmul+0xde>
10003ff4:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
10003ff8:	bf08      	it	eq
10003ffa:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
10003ffe:	f150 0000 	adcs.w	r0, r0, #0
10004002:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
10004006:	bd70      	pop	{r4, r5, r6, pc}
10004008:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
1000400c:	ea46 0101 	orr.w	r1, r6, r1
10004010:	ea40 0002 	orr.w	r0, r0, r2
10004014:	ea81 0103 	eor.w	r1, r1, r3
10004018:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
1000401c:	bfc2      	ittt	gt
1000401e:	ebd4 050c 	rsbsgt	r5, r4, ip
10004022:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
10004026:	bd70      	popgt	{r4, r5, r6, pc}
10004028:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
1000402c:	f04f 0e00 	mov.w	lr, #0
10004030:	3c01      	subs	r4, #1
10004032:	f300 80ab 	bgt.w	1000418c <__aeabi_dmul+0x238>
10004036:	f114 0f36 	cmn.w	r4, #54	; 0x36
1000403a:	bfde      	ittt	le
1000403c:	2000      	movle	r0, #0
1000403e:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
10004042:	bd70      	pople	{r4, r5, r6, pc}
10004044:	f1c4 0400 	rsb	r4, r4, #0
10004048:	3c20      	subs	r4, #32
1000404a:	da35      	bge.n	100040b8 <__aeabi_dmul+0x164>
1000404c:	340c      	adds	r4, #12
1000404e:	dc1b      	bgt.n	10004088 <__aeabi_dmul+0x134>
10004050:	f104 0414 	add.w	r4, r4, #20
10004054:	f1c4 0520 	rsb	r5, r4, #32
10004058:	fa00 f305 	lsl.w	r3, r0, r5
1000405c:	fa20 f004 	lsr.w	r0, r0, r4
10004060:	fa01 f205 	lsl.w	r2, r1, r5
10004064:	ea40 0002 	orr.w	r0, r0, r2
10004068:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
1000406c:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
10004070:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
10004074:	fa21 f604 	lsr.w	r6, r1, r4
10004078:	eb42 0106 	adc.w	r1, r2, r6
1000407c:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
10004080:	bf08      	it	eq
10004082:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
10004086:	bd70      	pop	{r4, r5, r6, pc}
10004088:	f1c4 040c 	rsb	r4, r4, #12
1000408c:	f1c4 0520 	rsb	r5, r4, #32
10004090:	fa00 f304 	lsl.w	r3, r0, r4
10004094:	fa20 f005 	lsr.w	r0, r0, r5
10004098:	fa01 f204 	lsl.w	r2, r1, r4
1000409c:	ea40 0002 	orr.w	r0, r0, r2
100040a0:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
100040a4:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
100040a8:	f141 0100 	adc.w	r1, r1, #0
100040ac:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
100040b0:	bf08      	it	eq
100040b2:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
100040b6:	bd70      	pop	{r4, r5, r6, pc}
100040b8:	f1c4 0520 	rsb	r5, r4, #32
100040bc:	fa00 f205 	lsl.w	r2, r0, r5
100040c0:	ea4e 0e02 	orr.w	lr, lr, r2
100040c4:	fa20 f304 	lsr.w	r3, r0, r4
100040c8:	fa01 f205 	lsl.w	r2, r1, r5
100040cc:	ea43 0302 	orr.w	r3, r3, r2
100040d0:	fa21 f004 	lsr.w	r0, r1, r4
100040d4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
100040d8:	fa21 f204 	lsr.w	r2, r1, r4
100040dc:	ea20 0002 	bic.w	r0, r0, r2
100040e0:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
100040e4:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
100040e8:	bf08      	it	eq
100040ea:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
100040ee:	bd70      	pop	{r4, r5, r6, pc}
100040f0:	f094 0f00 	teq	r4, #0
100040f4:	d10f      	bne.n	10004116 <__aeabi_dmul+0x1c2>
100040f6:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
100040fa:	0040      	lsls	r0, r0, #1
100040fc:	eb41 0101 	adc.w	r1, r1, r1
10004100:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
10004104:	bf08      	it	eq
10004106:	3c01      	subeq	r4, #1
10004108:	d0f7      	beq.n	100040fa <__aeabi_dmul+0x1a6>
1000410a:	ea41 0106 	orr.w	r1, r1, r6
1000410e:	f095 0f00 	teq	r5, #0
10004112:	bf18      	it	ne
10004114:	4770      	bxne	lr
10004116:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
1000411a:	0052      	lsls	r2, r2, #1
1000411c:	eb43 0303 	adc.w	r3, r3, r3
10004120:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
10004124:	bf08      	it	eq
10004126:	3d01      	subeq	r5, #1
10004128:	d0f7      	beq.n	1000411a <__aeabi_dmul+0x1c6>
1000412a:	ea43 0306 	orr.w	r3, r3, r6
1000412e:	4770      	bx	lr
10004130:	ea94 0f0c 	teq	r4, ip
10004134:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
10004138:	bf18      	it	ne
1000413a:	ea95 0f0c 	teqne	r5, ip
1000413e:	d00c      	beq.n	1000415a <__aeabi_dmul+0x206>
10004140:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
10004144:	bf18      	it	ne
10004146:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
1000414a:	d1d1      	bne.n	100040f0 <__aeabi_dmul+0x19c>
1000414c:	ea81 0103 	eor.w	r1, r1, r3
10004150:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
10004154:	f04f 0000 	mov.w	r0, #0
10004158:	bd70      	pop	{r4, r5, r6, pc}
1000415a:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
1000415e:	bf06      	itte	eq
10004160:	4610      	moveq	r0, r2
10004162:	4619      	moveq	r1, r3
10004164:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
10004168:	d019      	beq.n	1000419e <__aeabi_dmul+0x24a>
1000416a:	ea94 0f0c 	teq	r4, ip
1000416e:	d102      	bne.n	10004176 <__aeabi_dmul+0x222>
10004170:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
10004174:	d113      	bne.n	1000419e <__aeabi_dmul+0x24a>
10004176:	ea95 0f0c 	teq	r5, ip
1000417a:	d105      	bne.n	10004188 <__aeabi_dmul+0x234>
1000417c:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
10004180:	bf1c      	itt	ne
10004182:	4610      	movne	r0, r2
10004184:	4619      	movne	r1, r3
10004186:	d10a      	bne.n	1000419e <__aeabi_dmul+0x24a>
10004188:	ea81 0103 	eor.w	r1, r1, r3
1000418c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
10004190:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
10004194:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
10004198:	f04f 0000 	mov.w	r0, #0
1000419c:	bd70      	pop	{r4, r5, r6, pc}
1000419e:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
100041a2:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
100041a6:	bd70      	pop	{r4, r5, r6, pc}

100041a8 <__aeabi_ddiv>:
100041a8:	b570      	push	{r4, r5, r6, lr}
100041aa:	f04f 0cff 	mov.w	ip, #255	; 0xff
100041ae:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
100041b2:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
100041b6:	bf1d      	ittte	ne
100041b8:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
100041bc:	ea94 0f0c 	teqne	r4, ip
100041c0:	ea95 0f0c 	teqne	r5, ip
100041c4:	f000 f8a7 	bleq	10004316 <__aeabi_ddiv+0x16e>
100041c8:	eba4 0405 	sub.w	r4, r4, r5
100041cc:	ea81 0e03 	eor.w	lr, r1, r3
100041d0:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
100041d4:	ea4f 3101 	mov.w	r1, r1, lsl #12
100041d8:	f000 8088 	beq.w	100042ec <__aeabi_ddiv+0x144>
100041dc:	ea4f 3303 	mov.w	r3, r3, lsl #12
100041e0:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
100041e4:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
100041e8:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
100041ec:	ea4f 2202 	mov.w	r2, r2, lsl #8
100041f0:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
100041f4:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
100041f8:	ea4f 2600 	mov.w	r6, r0, lsl #8
100041fc:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
10004200:	429d      	cmp	r5, r3
10004202:	bf08      	it	eq
10004204:	4296      	cmpeq	r6, r2
10004206:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
1000420a:	f504 7440 	add.w	r4, r4, #768	; 0x300
1000420e:	d202      	bcs.n	10004216 <__aeabi_ddiv+0x6e>
10004210:	085b      	lsrs	r3, r3, #1
10004212:	ea4f 0232 	mov.w	r2, r2, rrx
10004216:	1ab6      	subs	r6, r6, r2
10004218:	eb65 0503 	sbc.w	r5, r5, r3
1000421c:	085b      	lsrs	r3, r3, #1
1000421e:	ea4f 0232 	mov.w	r2, r2, rrx
10004222:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
10004226:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
1000422a:	ebb6 0e02 	subs.w	lr, r6, r2
1000422e:	eb75 0e03 	sbcs.w	lr, r5, r3
10004232:	bf22      	ittt	cs
10004234:	1ab6      	subcs	r6, r6, r2
10004236:	4675      	movcs	r5, lr
10004238:	ea40 000c 	orrcs.w	r0, r0, ip
1000423c:	085b      	lsrs	r3, r3, #1
1000423e:	ea4f 0232 	mov.w	r2, r2, rrx
10004242:	ebb6 0e02 	subs.w	lr, r6, r2
10004246:	eb75 0e03 	sbcs.w	lr, r5, r3
1000424a:	bf22      	ittt	cs
1000424c:	1ab6      	subcs	r6, r6, r2
1000424e:	4675      	movcs	r5, lr
10004250:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
10004254:	085b      	lsrs	r3, r3, #1
10004256:	ea4f 0232 	mov.w	r2, r2, rrx
1000425a:	ebb6 0e02 	subs.w	lr, r6, r2
1000425e:	eb75 0e03 	sbcs.w	lr, r5, r3
10004262:	bf22      	ittt	cs
10004264:	1ab6      	subcs	r6, r6, r2
10004266:	4675      	movcs	r5, lr
10004268:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
1000426c:	085b      	lsrs	r3, r3, #1
1000426e:	ea4f 0232 	mov.w	r2, r2, rrx
10004272:	ebb6 0e02 	subs.w	lr, r6, r2
10004276:	eb75 0e03 	sbcs.w	lr, r5, r3
1000427a:	bf22      	ittt	cs
1000427c:	1ab6      	subcs	r6, r6, r2
1000427e:	4675      	movcs	r5, lr
10004280:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
10004284:	ea55 0e06 	orrs.w	lr, r5, r6
10004288:	d018      	beq.n	100042bc <__aeabi_ddiv+0x114>
1000428a:	ea4f 1505 	mov.w	r5, r5, lsl #4
1000428e:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
10004292:	ea4f 1606 	mov.w	r6, r6, lsl #4
10004296:	ea4f 03c3 	mov.w	r3, r3, lsl #3
1000429a:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
1000429e:	ea4f 02c2 	mov.w	r2, r2, lsl #3
100042a2:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
100042a6:	d1c0      	bne.n	1000422a <__aeabi_ddiv+0x82>
100042a8:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
100042ac:	d10b      	bne.n	100042c6 <__aeabi_ddiv+0x11e>
100042ae:	ea41 0100 	orr.w	r1, r1, r0
100042b2:	f04f 0000 	mov.w	r0, #0
100042b6:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
100042ba:	e7b6      	b.n	1000422a <__aeabi_ddiv+0x82>
100042bc:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
100042c0:	bf04      	itt	eq
100042c2:	4301      	orreq	r1, r0
100042c4:	2000      	moveq	r0, #0
100042c6:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
100042ca:	bf88      	it	hi
100042cc:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
100042d0:	f63f aeaf 	bhi.w	10004032 <__aeabi_dmul+0xde>
100042d4:	ebb5 0c03 	subs.w	ip, r5, r3
100042d8:	bf04      	itt	eq
100042da:	ebb6 0c02 	subseq.w	ip, r6, r2
100042de:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
100042e2:	f150 0000 	adcs.w	r0, r0, #0
100042e6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
100042ea:	bd70      	pop	{r4, r5, r6, pc}
100042ec:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
100042f0:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
100042f4:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
100042f8:	bfc2      	ittt	gt
100042fa:	ebd4 050c 	rsbsgt	r5, r4, ip
100042fe:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
10004302:	bd70      	popgt	{r4, r5, r6, pc}
10004304:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
10004308:	f04f 0e00 	mov.w	lr, #0
1000430c:	3c01      	subs	r4, #1
1000430e:	e690      	b.n	10004032 <__aeabi_dmul+0xde>
10004310:	ea45 0e06 	orr.w	lr, r5, r6
10004314:	e68d      	b.n	10004032 <__aeabi_dmul+0xde>
10004316:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
1000431a:	ea94 0f0c 	teq	r4, ip
1000431e:	bf08      	it	eq
10004320:	ea95 0f0c 	teqeq	r5, ip
10004324:	f43f af3b 	beq.w	1000419e <__aeabi_dmul+0x24a>
10004328:	ea94 0f0c 	teq	r4, ip
1000432c:	d10a      	bne.n	10004344 <__aeabi_ddiv+0x19c>
1000432e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
10004332:	f47f af34 	bne.w	1000419e <__aeabi_dmul+0x24a>
10004336:	ea95 0f0c 	teq	r5, ip
1000433a:	f47f af25 	bne.w	10004188 <__aeabi_dmul+0x234>
1000433e:	4610      	mov	r0, r2
10004340:	4619      	mov	r1, r3
10004342:	e72c      	b.n	1000419e <__aeabi_dmul+0x24a>
10004344:	ea95 0f0c 	teq	r5, ip
10004348:	d106      	bne.n	10004358 <__aeabi_ddiv+0x1b0>
1000434a:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
1000434e:	f43f aefd 	beq.w	1000414c <__aeabi_dmul+0x1f8>
10004352:	4610      	mov	r0, r2
10004354:	4619      	mov	r1, r3
10004356:	e722      	b.n	1000419e <__aeabi_dmul+0x24a>
10004358:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
1000435c:	bf18      	it	ne
1000435e:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
10004362:	f47f aec5 	bne.w	100040f0 <__aeabi_dmul+0x19c>
10004366:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
1000436a:	f47f af0d 	bne.w	10004188 <__aeabi_dmul+0x234>
1000436e:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
10004372:	f47f aeeb 	bne.w	1000414c <__aeabi_dmul+0x1f8>
10004376:	e712      	b.n	1000419e <__aeabi_dmul+0x24a>

10004378 <__gedf2>:
10004378:	f04f 3cff 	mov.w	ip, #4294967295
1000437c:	e006      	b.n	1000438c <__cmpdf2+0x4>
1000437e:	bf00      	nop

10004380 <__ledf2>:
10004380:	f04f 0c01 	mov.w	ip, #1
10004384:	e002      	b.n	1000438c <__cmpdf2+0x4>
10004386:	bf00      	nop

10004388 <__cmpdf2>:
10004388:	f04f 0c01 	mov.w	ip, #1
1000438c:	f84d cd04 	str.w	ip, [sp, #-4]!
10004390:	ea4f 0c41 	mov.w	ip, r1, lsl #1
10004394:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
10004398:	ea4f 0c43 	mov.w	ip, r3, lsl #1
1000439c:	bf18      	it	ne
1000439e:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
100043a2:	d01b      	beq.n	100043dc <__cmpdf2+0x54>
100043a4:	b001      	add	sp, #4
100043a6:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
100043aa:	bf0c      	ite	eq
100043ac:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
100043b0:	ea91 0f03 	teqne	r1, r3
100043b4:	bf02      	ittt	eq
100043b6:	ea90 0f02 	teqeq	r0, r2
100043ba:	2000      	moveq	r0, #0
100043bc:	4770      	bxeq	lr
100043be:	f110 0f00 	cmn.w	r0, #0
100043c2:	ea91 0f03 	teq	r1, r3
100043c6:	bf58      	it	pl
100043c8:	4299      	cmppl	r1, r3
100043ca:	bf08      	it	eq
100043cc:	4290      	cmpeq	r0, r2
100043ce:	bf2c      	ite	cs
100043d0:	17d8      	asrcs	r0, r3, #31
100043d2:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
100043d6:	f040 0001 	orr.w	r0, r0, #1
100043da:	4770      	bx	lr
100043dc:	ea4f 0c41 	mov.w	ip, r1, lsl #1
100043e0:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
100043e4:	d102      	bne.n	100043ec <__cmpdf2+0x64>
100043e6:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
100043ea:	d107      	bne.n	100043fc <__cmpdf2+0x74>
100043ec:	ea4f 0c43 	mov.w	ip, r3, lsl #1
100043f0:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
100043f4:	d1d6      	bne.n	100043a4 <__cmpdf2+0x1c>
100043f6:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
100043fa:	d0d3      	beq.n	100043a4 <__cmpdf2+0x1c>
100043fc:	f85d 0b04 	ldr.w	r0, [sp], #4
10004400:	4770      	bx	lr
10004402:	bf00      	nop

10004404 <__aeabi_cdrcmple>:
10004404:	4684      	mov	ip, r0
10004406:	4610      	mov	r0, r2
10004408:	4662      	mov	r2, ip
1000440a:	468c      	mov	ip, r1
1000440c:	4619      	mov	r1, r3
1000440e:	4663      	mov	r3, ip
10004410:	e000      	b.n	10004414 <__aeabi_cdcmpeq>
10004412:	bf00      	nop

10004414 <__aeabi_cdcmpeq>:
10004414:	b501      	push	{r0, lr}
10004416:	f7ff ffb7 	bl	10004388 <__cmpdf2>
1000441a:	2800      	cmp	r0, #0
1000441c:	bf48      	it	mi
1000441e:	f110 0f00 	cmnmi.w	r0, #0
10004422:	bd01      	pop	{r0, pc}

10004424 <__aeabi_dcmpeq>:
10004424:	f84d ed08 	str.w	lr, [sp, #-8]!
10004428:	f7ff fff4 	bl	10004414 <__aeabi_cdcmpeq>
1000442c:	bf0c      	ite	eq
1000442e:	2001      	moveq	r0, #1
10004430:	2000      	movne	r0, #0
10004432:	f85d fb08 	ldr.w	pc, [sp], #8
10004436:	bf00      	nop

10004438 <__aeabi_dcmplt>:
10004438:	f84d ed08 	str.w	lr, [sp, #-8]!
1000443c:	f7ff ffea 	bl	10004414 <__aeabi_cdcmpeq>
10004440:	bf34      	ite	cc
10004442:	2001      	movcc	r0, #1
10004444:	2000      	movcs	r0, #0
10004446:	f85d fb08 	ldr.w	pc, [sp], #8
1000444a:	bf00      	nop

1000444c <__aeabi_dcmple>:
1000444c:	f84d ed08 	str.w	lr, [sp, #-8]!
10004450:	f7ff ffe0 	bl	10004414 <__aeabi_cdcmpeq>
10004454:	bf94      	ite	ls
10004456:	2001      	movls	r0, #1
10004458:	2000      	movhi	r0, #0
1000445a:	f85d fb08 	ldr.w	pc, [sp], #8
1000445e:	bf00      	nop

10004460 <__aeabi_dcmpge>:
10004460:	f84d ed08 	str.w	lr, [sp, #-8]!
10004464:	f7ff ffce 	bl	10004404 <__aeabi_cdrcmple>
10004468:	bf94      	ite	ls
1000446a:	2001      	movls	r0, #1
1000446c:	2000      	movhi	r0, #0
1000446e:	f85d fb08 	ldr.w	pc, [sp], #8
10004472:	bf00      	nop

10004474 <__aeabi_dcmpgt>:
10004474:	f84d ed08 	str.w	lr, [sp, #-8]!
10004478:	f7ff ffc4 	bl	10004404 <__aeabi_cdrcmple>
1000447c:	bf34      	ite	cc
1000447e:	2001      	movcc	r0, #1
10004480:	2000      	movcs	r0, #0
10004482:	f85d fb08 	ldr.w	pc, [sp], #8
10004486:	bf00      	nop

10004488 <__aeabi_d2iz>:
10004488:	ea4f 0241 	mov.w	r2, r1, lsl #1
1000448c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
10004490:	d215      	bcs.n	100044be <__aeabi_d2iz+0x36>
10004492:	d511      	bpl.n	100044b8 <__aeabi_d2iz+0x30>
10004494:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
10004498:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
1000449c:	d912      	bls.n	100044c4 <__aeabi_d2iz+0x3c>
1000449e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
100044a2:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
100044a6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
100044aa:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
100044ae:	fa23 f002 	lsr.w	r0, r3, r2
100044b2:	bf18      	it	ne
100044b4:	4240      	negne	r0, r0
100044b6:	4770      	bx	lr
100044b8:	f04f 0000 	mov.w	r0, #0
100044bc:	4770      	bx	lr
100044be:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
100044c2:	d105      	bne.n	100044d0 <__aeabi_d2iz+0x48>
100044c4:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
100044c8:	bf08      	it	eq
100044ca:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
100044ce:	4770      	bx	lr
100044d0:	f04f 0000 	mov.w	r0, #0
100044d4:	4770      	bx	lr
100044d6:	bf00      	nop

100044d8 <__aeabi_d2uiz>:
100044d8:	004a      	lsls	r2, r1, #1
100044da:	d211      	bcs.n	10004500 <__aeabi_d2uiz+0x28>
100044dc:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
100044e0:	d211      	bcs.n	10004506 <__aeabi_d2uiz+0x2e>
100044e2:	d50d      	bpl.n	10004500 <__aeabi_d2uiz+0x28>
100044e4:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
100044e8:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
100044ec:	d40e      	bmi.n	1000450c <__aeabi_d2uiz+0x34>
100044ee:	ea4f 23c1 	mov.w	r3, r1, lsl #11
100044f2:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
100044f6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
100044fa:	fa23 f002 	lsr.w	r0, r3, r2
100044fe:	4770      	bx	lr
10004500:	f04f 0000 	mov.w	r0, #0
10004504:	4770      	bx	lr
10004506:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
1000450a:	d102      	bne.n	10004512 <__aeabi_d2uiz+0x3a>
1000450c:	f04f 30ff 	mov.w	r0, #4294967295
10004510:	4770      	bx	lr
10004512:	f04f 0000 	mov.w	r0, #0
10004516:	4770      	bx	lr

10004518 <__aeabi_uldivmod>:
10004518:	b953      	cbnz	r3, 10004530 <__aeabi_uldivmod+0x18>
1000451a:	b94a      	cbnz	r2, 10004530 <__aeabi_uldivmod+0x18>
1000451c:	2900      	cmp	r1, #0
1000451e:	bf08      	it	eq
10004520:	2800      	cmpeq	r0, #0
10004522:	bf1c      	itt	ne
10004524:	f04f 31ff 	movne.w	r1, #4294967295
10004528:	f04f 30ff 	movne.w	r0, #4294967295
1000452c:	f001 b934 	b.w	10005798 <__aeabi_idiv0>
10004530:	f1ad 0c08 	sub.w	ip, sp, #8
10004534:	e96d ce04 	strd	ip, lr, [sp, #-16]!
10004538:	f000 f806 	bl	10004548 <__udivmoddi4>
1000453c:	f8dd e004 	ldr.w	lr, [sp, #4]
10004540:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
10004544:	b004      	add	sp, #16
10004546:	4770      	bx	lr

10004548 <__udivmoddi4>:
10004548:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
1000454c:	9d09      	ldr	r5, [sp, #36]	; 0x24
1000454e:	4604      	mov	r4, r0
10004550:	460f      	mov	r7, r1
10004552:	2b00      	cmp	r3, #0
10004554:	d148      	bne.n	100045e8 <__udivmoddi4+0xa0>
10004556:	428a      	cmp	r2, r1
10004558:	4694      	mov	ip, r2
1000455a:	d961      	bls.n	10004620 <__udivmoddi4+0xd8>
1000455c:	fab2 f382 	clz	r3, r2
10004560:	b143      	cbz	r3, 10004574 <__udivmoddi4+0x2c>
10004562:	f1c3 0120 	rsb	r1, r3, #32
10004566:	409f      	lsls	r7, r3
10004568:	fa02 fc03 	lsl.w	ip, r2, r3
1000456c:	409c      	lsls	r4, r3
1000456e:	fa20 f101 	lsr.w	r1, r0, r1
10004572:	430f      	orrs	r7, r1
10004574:	ea4f 411c 	mov.w	r1, ip, lsr #16
10004578:	fa1f fe8c 	uxth.w	lr, ip
1000457c:	0c22      	lsrs	r2, r4, #16
1000457e:	fbb7 f6f1 	udiv	r6, r7, r1
10004582:	fb01 7716 	mls	r7, r1, r6, r7
10004586:	fb06 f00e 	mul.w	r0, r6, lr
1000458a:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
1000458e:	4290      	cmp	r0, r2
10004590:	d908      	bls.n	100045a4 <__udivmoddi4+0x5c>
10004592:	eb1c 0202 	adds.w	r2, ip, r2
10004596:	f106 37ff 	add.w	r7, r6, #4294967295
1000459a:	d202      	bcs.n	100045a2 <__udivmoddi4+0x5a>
1000459c:	4290      	cmp	r0, r2
1000459e:	f200 8137 	bhi.w	10004810 <__udivmoddi4+0x2c8>
100045a2:	463e      	mov	r6, r7
100045a4:	1a12      	subs	r2, r2, r0
100045a6:	b2a4      	uxth	r4, r4
100045a8:	fbb2 f0f1 	udiv	r0, r2, r1
100045ac:	fb01 2210 	mls	r2, r1, r0, r2
100045b0:	fb00 fe0e 	mul.w	lr, r0, lr
100045b4:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
100045b8:	45a6      	cmp	lr, r4
100045ba:	d908      	bls.n	100045ce <__udivmoddi4+0x86>
100045bc:	eb1c 0404 	adds.w	r4, ip, r4
100045c0:	f100 32ff 	add.w	r2, r0, #4294967295
100045c4:	d202      	bcs.n	100045cc <__udivmoddi4+0x84>
100045c6:	45a6      	cmp	lr, r4
100045c8:	f200 811c 	bhi.w	10004804 <__udivmoddi4+0x2bc>
100045cc:	4610      	mov	r0, r2
100045ce:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
100045d2:	eba4 040e 	sub.w	r4, r4, lr
100045d6:	2600      	movs	r6, #0
100045d8:	b11d      	cbz	r5, 100045e2 <__udivmoddi4+0x9a>
100045da:	40dc      	lsrs	r4, r3
100045dc:	2300      	movs	r3, #0
100045de:	e9c5 4300 	strd	r4, r3, [r5]
100045e2:	4631      	mov	r1, r6
100045e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
100045e8:	428b      	cmp	r3, r1
100045ea:	d909      	bls.n	10004600 <__udivmoddi4+0xb8>
100045ec:	2d00      	cmp	r5, #0
100045ee:	f000 80fd 	beq.w	100047ec <__udivmoddi4+0x2a4>
100045f2:	2600      	movs	r6, #0
100045f4:	e9c5 0100 	strd	r0, r1, [r5]
100045f8:	4630      	mov	r0, r6
100045fa:	4631      	mov	r1, r6
100045fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10004600:	fab3 f683 	clz	r6, r3
10004604:	2e00      	cmp	r6, #0
10004606:	d14b      	bne.n	100046a0 <__udivmoddi4+0x158>
10004608:	428b      	cmp	r3, r1
1000460a:	f0c0 80f2 	bcc.w	100047f2 <__udivmoddi4+0x2aa>
1000460e:	4282      	cmp	r2, r0
10004610:	f240 80ef 	bls.w	100047f2 <__udivmoddi4+0x2aa>
10004614:	4630      	mov	r0, r6
10004616:	2d00      	cmp	r5, #0
10004618:	d0e3      	beq.n	100045e2 <__udivmoddi4+0x9a>
1000461a:	e9c5 4700 	strd	r4, r7, [r5]
1000461e:	e7e0      	b.n	100045e2 <__udivmoddi4+0x9a>
10004620:	b902      	cbnz	r2, 10004624 <__udivmoddi4+0xdc>
10004622:	deff      	udf	#255	; 0xff
10004624:	fab2 f382 	clz	r3, r2
10004628:	2b00      	cmp	r3, #0
1000462a:	f040 809d 	bne.w	10004768 <__udivmoddi4+0x220>
1000462e:	1a89      	subs	r1, r1, r2
10004630:	ea4f 4e12 	mov.w	lr, r2, lsr #16
10004634:	b297      	uxth	r7, r2
10004636:	2601      	movs	r6, #1
10004638:	0c20      	lsrs	r0, r4, #16
1000463a:	fbb1 f2fe 	udiv	r2, r1, lr
1000463e:	fb0e 1112 	mls	r1, lr, r2, r1
10004642:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
10004646:	fb07 f002 	mul.w	r0, r7, r2
1000464a:	4288      	cmp	r0, r1
1000464c:	d90f      	bls.n	1000466e <__udivmoddi4+0x126>
1000464e:	eb1c 0101 	adds.w	r1, ip, r1
10004652:	f102 38ff 	add.w	r8, r2, #4294967295
10004656:	bf2c      	ite	cs
10004658:	f04f 0901 	movcs.w	r9, #1
1000465c:	f04f 0900 	movcc.w	r9, #0
10004660:	4288      	cmp	r0, r1
10004662:	d903      	bls.n	1000466c <__udivmoddi4+0x124>
10004664:	f1b9 0f00 	cmp.w	r9, #0
10004668:	f000 80cf 	beq.w	1000480a <__udivmoddi4+0x2c2>
1000466c:	4642      	mov	r2, r8
1000466e:	1a09      	subs	r1, r1, r0
10004670:	b2a4      	uxth	r4, r4
10004672:	fbb1 f0fe 	udiv	r0, r1, lr
10004676:	fb0e 1110 	mls	r1, lr, r0, r1
1000467a:	fb00 f707 	mul.w	r7, r0, r7
1000467e:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
10004682:	42a7      	cmp	r7, r4
10004684:	d908      	bls.n	10004698 <__udivmoddi4+0x150>
10004686:	eb1c 0404 	adds.w	r4, ip, r4
1000468a:	f100 31ff 	add.w	r1, r0, #4294967295
1000468e:	d202      	bcs.n	10004696 <__udivmoddi4+0x14e>
10004690:	42a7      	cmp	r7, r4
10004692:	f200 80b4 	bhi.w	100047fe <__udivmoddi4+0x2b6>
10004696:	4608      	mov	r0, r1
10004698:	1be4      	subs	r4, r4, r7
1000469a:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
1000469e:	e79b      	b.n	100045d8 <__udivmoddi4+0x90>
100046a0:	f1c6 0720 	rsb	r7, r6, #32
100046a4:	40b3      	lsls	r3, r6
100046a6:	fa01 f406 	lsl.w	r4, r1, r6
100046aa:	fa22 fc07 	lsr.w	ip, r2, r7
100046ae:	40f9      	lsrs	r1, r7
100046b0:	40b2      	lsls	r2, r6
100046b2:	ea4c 0c03 	orr.w	ip, ip, r3
100046b6:	fa20 f307 	lsr.w	r3, r0, r7
100046ba:	ea4f 491c 	mov.w	r9, ip, lsr #16
100046be:	431c      	orrs	r4, r3
100046c0:	fa1f fe8c 	uxth.w	lr, ip
100046c4:	fa00 f306 	lsl.w	r3, r0, r6
100046c8:	0c20      	lsrs	r0, r4, #16
100046ca:	fbb1 f8f9 	udiv	r8, r1, r9
100046ce:	fb09 1118 	mls	r1, r9, r8, r1
100046d2:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
100046d6:	fb08 f00e 	mul.w	r0, r8, lr
100046da:	4288      	cmp	r0, r1
100046dc:	d90f      	bls.n	100046fe <__udivmoddi4+0x1b6>
100046de:	eb1c 0101 	adds.w	r1, ip, r1
100046e2:	f108 3aff 	add.w	sl, r8, #4294967295
100046e6:	bf2c      	ite	cs
100046e8:	f04f 0b01 	movcs.w	fp, #1
100046ec:	f04f 0b00 	movcc.w	fp, #0
100046f0:	4288      	cmp	r0, r1
100046f2:	d903      	bls.n	100046fc <__udivmoddi4+0x1b4>
100046f4:	f1bb 0f00 	cmp.w	fp, #0
100046f8:	f000 808d 	beq.w	10004816 <__udivmoddi4+0x2ce>
100046fc:	46d0      	mov	r8, sl
100046fe:	1a09      	subs	r1, r1, r0
10004700:	b2a4      	uxth	r4, r4
10004702:	fbb1 f0f9 	udiv	r0, r1, r9
10004706:	fb09 1110 	mls	r1, r9, r0, r1
1000470a:	fb00 fe0e 	mul.w	lr, r0, lr
1000470e:	ea44 4101 	orr.w	r1, r4, r1, lsl #16
10004712:	458e      	cmp	lr, r1
10004714:	d907      	bls.n	10004726 <__udivmoddi4+0x1de>
10004716:	eb1c 0101 	adds.w	r1, ip, r1
1000471a:	f100 34ff 	add.w	r4, r0, #4294967295
1000471e:	d201      	bcs.n	10004724 <__udivmoddi4+0x1dc>
10004720:	458e      	cmp	lr, r1
10004722:	d87f      	bhi.n	10004824 <__udivmoddi4+0x2dc>
10004724:	4620      	mov	r0, r4
10004726:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
1000472a:	eba1 010e 	sub.w	r1, r1, lr
1000472e:	fba0 9802 	umull	r9, r8, r0, r2
10004732:	4541      	cmp	r1, r8
10004734:	464c      	mov	r4, r9
10004736:	46c6      	mov	lr, r8
10004738:	d302      	bcc.n	10004740 <__udivmoddi4+0x1f8>
1000473a:	d106      	bne.n	1000474a <__udivmoddi4+0x202>
1000473c:	454b      	cmp	r3, r9
1000473e:	d204      	bcs.n	1000474a <__udivmoddi4+0x202>
10004740:	3801      	subs	r0, #1
10004742:	ebb9 0402 	subs.w	r4, r9, r2
10004746:	eb68 0e0c 	sbc.w	lr, r8, ip
1000474a:	2d00      	cmp	r5, #0
1000474c:	d070      	beq.n	10004830 <__udivmoddi4+0x2e8>
1000474e:	1b1a      	subs	r2, r3, r4
10004750:	eb61 010e 	sbc.w	r1, r1, lr
10004754:	fa22 f306 	lsr.w	r3, r2, r6
10004758:	fa01 f707 	lsl.w	r7, r1, r7
1000475c:	40f1      	lsrs	r1, r6
1000475e:	2600      	movs	r6, #0
10004760:	431f      	orrs	r7, r3
10004762:	e9c5 7100 	strd	r7, r1, [r5]
10004766:	e73c      	b.n	100045e2 <__udivmoddi4+0x9a>
10004768:	fa02 fc03 	lsl.w	ip, r2, r3
1000476c:	f1c3 0020 	rsb	r0, r3, #32
10004770:	fa01 f203 	lsl.w	r2, r1, r3
10004774:	fa21 f600 	lsr.w	r6, r1, r0
10004778:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
1000477c:	fa24 f100 	lsr.w	r1, r4, r0
10004780:	fa1f f78c 	uxth.w	r7, ip
10004784:	409c      	lsls	r4, r3
10004786:	4311      	orrs	r1, r2
10004788:	fbb6 f0fe 	udiv	r0, r6, lr
1000478c:	0c0a      	lsrs	r2, r1, #16
1000478e:	fb0e 6610 	mls	r6, lr, r0, r6
10004792:	ea42 4206 	orr.w	r2, r2, r6, lsl #16
10004796:	fb00 f607 	mul.w	r6, r0, r7
1000479a:	4296      	cmp	r6, r2
1000479c:	d90e      	bls.n	100047bc <__udivmoddi4+0x274>
1000479e:	eb1c 0202 	adds.w	r2, ip, r2
100047a2:	f100 38ff 	add.w	r8, r0, #4294967295
100047a6:	bf2c      	ite	cs
100047a8:	f04f 0901 	movcs.w	r9, #1
100047ac:	f04f 0900 	movcc.w	r9, #0
100047b0:	4296      	cmp	r6, r2
100047b2:	d902      	bls.n	100047ba <__udivmoddi4+0x272>
100047b4:	f1b9 0f00 	cmp.w	r9, #0
100047b8:	d031      	beq.n	1000481e <__udivmoddi4+0x2d6>
100047ba:	4640      	mov	r0, r8
100047bc:	1b92      	subs	r2, r2, r6
100047be:	b289      	uxth	r1, r1
100047c0:	fbb2 f6fe 	udiv	r6, r2, lr
100047c4:	fb0e 2216 	mls	r2, lr, r6, r2
100047c8:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
100047cc:	fb06 f207 	mul.w	r2, r6, r7
100047d0:	428a      	cmp	r2, r1
100047d2:	d907      	bls.n	100047e4 <__udivmoddi4+0x29c>
100047d4:	eb1c 0101 	adds.w	r1, ip, r1
100047d8:	f106 38ff 	add.w	r8, r6, #4294967295
100047dc:	d201      	bcs.n	100047e2 <__udivmoddi4+0x29a>
100047de:	428a      	cmp	r2, r1
100047e0:	d823      	bhi.n	1000482a <__udivmoddi4+0x2e2>
100047e2:	4646      	mov	r6, r8
100047e4:	1a89      	subs	r1, r1, r2
100047e6:	ea46 4600 	orr.w	r6, r6, r0, lsl #16
100047ea:	e725      	b.n	10004638 <__udivmoddi4+0xf0>
100047ec:	462e      	mov	r6, r5
100047ee:	4628      	mov	r0, r5
100047f0:	e6f7      	b.n	100045e2 <__udivmoddi4+0x9a>
100047f2:	1a84      	subs	r4, r0, r2
100047f4:	eb61 0303 	sbc.w	r3, r1, r3
100047f8:	2001      	movs	r0, #1
100047fa:	461f      	mov	r7, r3
100047fc:	e70b      	b.n	10004616 <__udivmoddi4+0xce>
100047fe:	4464      	add	r4, ip
10004800:	3802      	subs	r0, #2
10004802:	e749      	b.n	10004698 <__udivmoddi4+0x150>
10004804:	4464      	add	r4, ip
10004806:	3802      	subs	r0, #2
10004808:	e6e1      	b.n	100045ce <__udivmoddi4+0x86>
1000480a:	3a02      	subs	r2, #2
1000480c:	4461      	add	r1, ip
1000480e:	e72e      	b.n	1000466e <__udivmoddi4+0x126>
10004810:	3e02      	subs	r6, #2
10004812:	4462      	add	r2, ip
10004814:	e6c6      	b.n	100045a4 <__udivmoddi4+0x5c>
10004816:	f1a8 0802 	sub.w	r8, r8, #2
1000481a:	4461      	add	r1, ip
1000481c:	e76f      	b.n	100046fe <__udivmoddi4+0x1b6>
1000481e:	3802      	subs	r0, #2
10004820:	4462      	add	r2, ip
10004822:	e7cb      	b.n	100047bc <__udivmoddi4+0x274>
10004824:	3802      	subs	r0, #2
10004826:	4461      	add	r1, ip
10004828:	e77d      	b.n	10004726 <__udivmoddi4+0x1de>
1000482a:	3e02      	subs	r6, #2
1000482c:	4461      	add	r1, ip
1000482e:	e7d9      	b.n	100047e4 <__udivmoddi4+0x29c>
10004830:	462e      	mov	r6, r5
10004832:	e6d6      	b.n	100045e2 <__udivmoddi4+0x9a>

10004834 <selfrel_offset31>:
10004834:	6803      	ldr	r3, [r0, #0]
10004836:	005a      	lsls	r2, r3, #1
10004838:	bf4c      	ite	mi
1000483a:	f043 4300 	orrmi.w	r3, r3, #2147483648	; 0x80000000
1000483e:	f023 4300 	bicpl.w	r3, r3, #2147483648	; 0x80000000
10004842:	4418      	add	r0, r3
10004844:	4770      	bx	lr
10004846:	bf00      	nop

10004848 <search_EIT_table>:
10004848:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
1000484c:	b339      	cbz	r1, 1000489e <search_EIT_table+0x56>
1000484e:	f101 38ff 	add.w	r8, r1, #4294967295
10004852:	4606      	mov	r6, r0
10004854:	4617      	mov	r7, r2
10004856:	f04f 0900 	mov.w	r9, #0
1000485a:	4645      	mov	r5, r8
1000485c:	eb19 0105 	adds.w	r1, r9, r5
10004860:	bf48      	it	mi
10004862:	3101      	addmi	r1, #1
10004864:	1049      	asrs	r1, r1, #1
10004866:	eb06 0ac1 	add.w	sl, r6, r1, lsl #3
1000486a:	00cc      	lsls	r4, r1, #3
1000486c:	4650      	mov	r0, sl
1000486e:	f7ff ffe1 	bl	10004834 <selfrel_offset31>
10004872:	3408      	adds	r4, #8
10004874:	4588      	cmp	r8, r1
10004876:	4603      	mov	r3, r0
10004878:	eb06 0004 	add.w	r0, r6, r4
1000487c:	d009      	beq.n	10004892 <search_EIT_table+0x4a>
1000487e:	42bb      	cmp	r3, r7
10004880:	d809      	bhi.n	10004896 <search_EIT_table+0x4e>
10004882:	f7ff ffd7 	bl	10004834 <selfrel_offset31>
10004886:	3801      	subs	r0, #1
10004888:	f101 0901 	add.w	r9, r1, #1
1000488c:	42b8      	cmp	r0, r7
1000488e:	d3e5      	bcc.n	1000485c <search_EIT_table+0x14>
10004890:	e007      	b.n	100048a2 <search_EIT_table+0x5a>
10004892:	42bb      	cmp	r3, r7
10004894:	d905      	bls.n	100048a2 <search_EIT_table+0x5a>
10004896:	4589      	cmp	r9, r1
10004898:	f101 35ff 	add.w	r5, r1, #4294967295
1000489c:	d1de      	bne.n	1000485c <search_EIT_table+0x14>
1000489e:	f04f 0a00 	mov.w	sl, #0
100048a2:	4650      	mov	r0, sl
100048a4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

100048a8 <__gnu_unwind_get_pr_addr>:
100048a8:	2801      	cmp	r0, #1
100048aa:	d007      	beq.n	100048bc <__gnu_unwind_get_pr_addr+0x14>
100048ac:	2802      	cmp	r0, #2
100048ae:	d007      	beq.n	100048c0 <__gnu_unwind_get_pr_addr+0x18>
100048b0:	2800      	cmp	r0, #0
100048b2:	4b04      	ldr	r3, [pc, #16]	; (100048c4 <__gnu_unwind_get_pr_addr+0x1c>)
100048b4:	bf14      	ite	ne
100048b6:	2000      	movne	r0, #0
100048b8:	4618      	moveq	r0, r3
100048ba:	4770      	bx	lr
100048bc:	4802      	ldr	r0, [pc, #8]	; (100048c8 <__gnu_unwind_get_pr_addr+0x20>)
100048be:	4770      	bx	lr
100048c0:	4802      	ldr	r0, [pc, #8]	; (100048cc <__gnu_unwind_get_pr_addr+0x24>)
100048c2:	4770      	bx	lr
100048c4:	10004fb9 			; <UNDEFINED> instruction: 0x10004fb9
100048c8:	10004fbd 			; <UNDEFINED> instruction: 0x10004fbd
100048cc:	10004fc1 	andne	r4, r0, r1, asr #31

100048d0 <get_eit_entry>:
100048d0:	4b23      	ldr	r3, [pc, #140]	; (10004960 <get_eit_entry+0x90>)
100048d2:	b530      	push	{r4, r5, lr}
100048d4:	4604      	mov	r4, r0
100048d6:	b083      	sub	sp, #12
100048d8:	1e8d      	subs	r5, r1, #2
100048da:	b343      	cbz	r3, 1000492e <get_eit_entry+0x5e>
100048dc:	a901      	add	r1, sp, #4
100048de:	4628      	mov	r0, r5
100048e0:	e000      	b.n	100048e4 <get_eit_entry+0x14>
100048e2:	bf00      	nop
100048e4:	b1f0      	cbz	r0, 10004924 <get_eit_entry+0x54>
100048e6:	9901      	ldr	r1, [sp, #4]
100048e8:	462a      	mov	r2, r5
100048ea:	f7ff ffad 	bl	10004848 <search_EIT_table>
100048ee:	4601      	mov	r1, r0
100048f0:	b1c0      	cbz	r0, 10004924 <get_eit_entry+0x54>
100048f2:	f7ff ff9f 	bl	10004834 <selfrel_offset31>
100048f6:	684b      	ldr	r3, [r1, #4]
100048f8:	64a0      	str	r0, [r4, #72]	; 0x48
100048fa:	2b01      	cmp	r3, #1
100048fc:	d02c      	beq.n	10004958 <get_eit_entry+0x88>
100048fe:	2b00      	cmp	r3, #0
10004900:	f101 0004 	add.w	r0, r1, #4
10004904:	db24      	blt.n	10004950 <get_eit_entry+0x80>
10004906:	f7ff ff95 	bl	10004834 <selfrel_offset31>
1000490a:	2300      	movs	r3, #0
1000490c:	e9c4 0313 	strd	r0, r3, [r4, #76]	; 0x4c
10004910:	6803      	ldr	r3, [r0, #0]
10004912:	2b00      	cmp	r3, #0
10004914:	db11      	blt.n	1000493a <get_eit_entry+0x6a>
10004916:	f7ff ff8d 	bl	10004834 <selfrel_offset31>
1000491a:	4603      	mov	r3, r0
1000491c:	2000      	movs	r0, #0
1000491e:	6123      	str	r3, [r4, #16]
10004920:	b003      	add	sp, #12
10004922:	bd30      	pop	{r4, r5, pc}
10004924:	2300      	movs	r3, #0
10004926:	2009      	movs	r0, #9
10004928:	6123      	str	r3, [r4, #16]
1000492a:	b003      	add	sp, #12
1000492c:	bd30      	pop	{r4, r5, pc}
1000492e:	480d      	ldr	r0, [pc, #52]	; (10004964 <get_eit_entry+0x94>)
10004930:	490d      	ldr	r1, [pc, #52]	; (10004968 <get_eit_entry+0x98>)
10004932:	1a09      	subs	r1, r1, r0
10004934:	10c9      	asrs	r1, r1, #3
10004936:	9101      	str	r1, [sp, #4]
10004938:	e7d6      	b.n	100048e8 <get_eit_entry+0x18>
1000493a:	f3c3 6003 	ubfx	r0, r3, #24, #4
1000493e:	f7ff ffb3 	bl	100048a8 <__gnu_unwind_get_pr_addr>
10004942:	2800      	cmp	r0, #0
10004944:	6120      	str	r0, [r4, #16]
10004946:	bf14      	ite	ne
10004948:	2000      	movne	r0, #0
1000494a:	2009      	moveq	r0, #9
1000494c:	b003      	add	sp, #12
1000494e:	bd30      	pop	{r4, r5, pc}
10004950:	2301      	movs	r3, #1
10004952:	e9c4 0313 	strd	r0, r3, [r4, #76]	; 0x4c
10004956:	e7db      	b.n	10004910 <get_eit_entry+0x40>
10004958:	2300      	movs	r3, #0
1000495a:	2005      	movs	r0, #5
1000495c:	6123      	str	r3, [r4, #16]
1000495e:	e7df      	b.n	10004920 <get_eit_entry+0x50>
10004960:	00000000 	andeq	r0, r0, r0
10004964:	10005dfc 	strdne	r5, [r0], -ip
10004968:	10005ebc 			; <UNDEFINED> instruction: 0x10005ebc

1000496c <restore_non_core_regs>:
1000496c:	6803      	ldr	r3, [r0, #0]
1000496e:	07da      	lsls	r2, r3, #31
10004970:	b510      	push	{r4, lr}
10004972:	4604      	mov	r4, r0
10004974:	d406      	bmi.n	10004984 <restore_non_core_regs+0x18>
10004976:	079b      	lsls	r3, r3, #30
10004978:	f100 0048 	add.w	r0, r0, #72	; 0x48
1000497c:	d509      	bpl.n	10004992 <restore_non_core_regs+0x26>
1000497e:	f000 fc8f 	bl	100052a0 <__gnu_Unwind_Restore_VFP_D>
10004982:	6823      	ldr	r3, [r4, #0]
10004984:	0759      	lsls	r1, r3, #29
10004986:	d509      	bpl.n	1000499c <restore_non_core_regs+0x30>
10004988:	071a      	lsls	r2, r3, #28
1000498a:	d50e      	bpl.n	100049aa <restore_non_core_regs+0x3e>
1000498c:	06db      	lsls	r3, r3, #27
1000498e:	d513      	bpl.n	100049b8 <restore_non_core_regs+0x4c>
10004990:	bd10      	pop	{r4, pc}
10004992:	f000 fc7d 	bl	10005290 <__gnu_Unwind_Restore_VFP>
10004996:	6823      	ldr	r3, [r4, #0]
10004998:	0759      	lsls	r1, r3, #29
1000499a:	d4f5      	bmi.n	10004988 <restore_non_core_regs+0x1c>
1000499c:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
100049a0:	f000 fc86 	bl	100052b0 <__gnu_Unwind_Restore_VFP_D_16_to_31>
100049a4:	6823      	ldr	r3, [r4, #0]
100049a6:	071a      	lsls	r2, r3, #28
100049a8:	d4f0      	bmi.n	1000498c <restore_non_core_regs+0x20>
100049aa:	f504 70a8 	add.w	r0, r4, #336	; 0x150
100049ae:	f000 fc87 	bl	100052c0 <__gnu_Unwind_Restore_WMMXD>
100049b2:	6823      	ldr	r3, [r4, #0]
100049b4:	06db      	lsls	r3, r3, #27
100049b6:	d4eb      	bmi.n	10004990 <restore_non_core_regs+0x24>
100049b8:	f504 70e8 	add.w	r0, r4, #464	; 0x1d0
100049bc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
100049c0:	f000 bcc2 	b.w	10005348 <__gnu_Unwind_Restore_WMMXC>

100049c4 <__gnu_unwind_24bit.constprop.0>:
100049c4:	2009      	movs	r0, #9
100049c6:	4770      	bx	lr

100049c8 <_Unwind_decode_typeinfo_ptr.constprop.0>:
100049c8:	4603      	mov	r3, r0
100049ca:	6800      	ldr	r0, [r0, #0]
100049cc:	b100      	cbz	r0, 100049d0 <_Unwind_decode_typeinfo_ptr.constprop.0+0x8>
100049ce:	4418      	add	r0, r3
100049d0:	4770      	bx	lr
100049d2:	bf00      	nop

100049d4 <_Unwind_DebugHook>:
100049d4:	4770      	bx	lr
100049d6:	bf00      	nop

100049d8 <unwind_phase2>:
100049d8:	b570      	push	{r4, r5, r6, lr}
100049da:	4604      	mov	r4, r0
100049dc:	460e      	mov	r6, r1
100049de:	6c31      	ldr	r1, [r6, #64]	; 0x40
100049e0:	4620      	mov	r0, r4
100049e2:	f7ff ff75 	bl	100048d0 <get_eit_entry>
100049e6:	4605      	mov	r5, r0
100049e8:	b998      	cbnz	r0, 10004a12 <unwind_phase2+0x3a>
100049ea:	f8d6 c040 	ldr.w	ip, [r6, #64]	; 0x40
100049ee:	4632      	mov	r2, r6
100049f0:	6923      	ldr	r3, [r4, #16]
100049f2:	4621      	mov	r1, r4
100049f4:	2001      	movs	r0, #1
100049f6:	f8c4 c014 	str.w	ip, [r4, #20]
100049fa:	4798      	blx	r3
100049fc:	2808      	cmp	r0, #8
100049fe:	d0ee      	beq.n	100049de <unwind_phase2+0x6>
10004a00:	2807      	cmp	r0, #7
10004a02:	d106      	bne.n	10004a12 <unwind_phase2+0x3a>
10004a04:	4628      	mov	r0, r5
10004a06:	6c31      	ldr	r1, [r6, #64]	; 0x40
10004a08:	f7ff ffe4 	bl	100049d4 <_Unwind_DebugHook>
10004a0c:	1d30      	adds	r0, r6, #4
10004a0e:	f000 fc33 	bl	10005278 <__restore_core_regs>
10004a12:	f000 fec3 	bl	1000579c <abort>
10004a16:	bf00      	nop

10004a18 <unwind_phase2_forced>:
10004a18:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
10004a1c:	f101 0c04 	add.w	ip, r1, #4
10004a20:	f5ad 7d74 	sub.w	sp, sp, #976	; 0x3d0
10004a24:	68c7      	ldr	r7, [r0, #12]
10004a26:	4606      	mov	r6, r0
10004a28:	f8d0 8018 	ldr.w	r8, [r0, #24]
10004a2c:	4614      	mov	r4, r2
10004a2e:	f10d 0e14 	add.w	lr, sp, #20
10004a32:	ad04      	add	r5, sp, #16
10004a34:	f04f 0900 	mov.w	r9, #0
10004a38:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
10004a3c:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
10004a40:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
10004a44:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
10004a48:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
10004a4c:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
10004a50:	e89c 000f 	ldmia.w	ip, {r0, r1, r2, r3}
10004a54:	e88e 000f 	stmia.w	lr, {r0, r1, r2, r3}
10004a58:	f8c5 9000 	str.w	r9, [r5]
10004a5c:	e023      	b.n	10004aa6 <unwind_phase2_forced+0x8e>
10004a5e:	6c2b      	ldr	r3, [r5, #64]	; 0x40
10004a60:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
10004a64:	4629      	mov	r1, r5
10004a66:	a87c      	add	r0, sp, #496	; 0x1f0
10004a68:	6173      	str	r3, [r6, #20]
10004a6a:	f7fe ff7d 	bl	10003968 <memcpy>
10004a6e:	aa7c      	add	r2, sp, #496	; 0x1f0
10004a70:	4631      	mov	r1, r6
10004a72:	6933      	ldr	r3, [r6, #16]
10004a74:	4650      	mov	r0, sl
10004a76:	4798      	blx	r3
10004a78:	9b8a      	ldr	r3, [sp, #552]	; 0x228
10004a7a:	4621      	mov	r1, r4
10004a7c:	4681      	mov	r9, r0
10004a7e:	9303      	str	r3, [sp, #12]
10004a80:	4632      	mov	r2, r6
10004a82:	9c03      	ldr	r4, [sp, #12]
10004a84:	4633      	mov	r3, r6
10004a86:	2001      	movs	r0, #1
10004a88:	646c      	str	r4, [r5, #68]	; 0x44
10004a8a:	e9cd 5800 	strd	r5, r8, [sp]
10004a8e:	47b8      	blx	r7
10004a90:	4604      	mov	r4, r0
10004a92:	b9e8      	cbnz	r0, 10004ad0 <unwind_phase2_forced+0xb8>
10004a94:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
10004a98:	a97c      	add	r1, sp, #496	; 0x1f0
10004a9a:	4628      	mov	r0, r5
10004a9c:	f7fe ff64 	bl	10003968 <memcpy>
10004aa0:	f1b9 0f08 	cmp.w	r9, #8
10004aa4:	d11b      	bne.n	10004ade <unwind_phase2_forced+0xc6>
10004aa6:	3409      	adds	r4, #9
10004aa8:	6c29      	ldr	r1, [r5, #64]	; 0x40
10004aaa:	4630      	mov	r0, r6
10004aac:	f7ff ff10 	bl	100048d0 <get_eit_entry>
10004ab0:	4681      	mov	r9, r0
10004ab2:	fa5f fa84 	uxtb.w	sl, r4
10004ab6:	2800      	cmp	r0, #0
10004ab8:	d0d1      	beq.n	10004a5e <unwind_phase2_forced+0x46>
10004aba:	6bac      	ldr	r4, [r5, #56]	; 0x38
10004abc:	4633      	mov	r3, r6
10004abe:	4632      	mov	r2, r6
10004ac0:	f04a 0110 	orr.w	r1, sl, #16
10004ac4:	646c      	str	r4, [r5, #68]	; 0x44
10004ac6:	2001      	movs	r0, #1
10004ac8:	e9cd 5800 	strd	r5, r8, [sp]
10004acc:	47b8      	blx	r7
10004ace:	b108      	cbz	r0, 10004ad4 <unwind_phase2_forced+0xbc>
10004ad0:	f04f 0909 	mov.w	r9, #9
10004ad4:	4648      	mov	r0, r9
10004ad6:	f50d 7d74 	add.w	sp, sp, #976	; 0x3d0
10004ada:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
10004ade:	f1b9 0f07 	cmp.w	r9, #7
10004ae2:	d1f5      	bne.n	10004ad0 <unwind_phase2_forced+0xb8>
10004ae4:	4620      	mov	r0, r4
10004ae6:	6c29      	ldr	r1, [r5, #64]	; 0x40
10004ae8:	f7ff ff74 	bl	100049d4 <_Unwind_DebugHook>
10004aec:	a805      	add	r0, sp, #20
10004aee:	f000 fbc3 	bl	10005278 <__restore_core_regs>
10004af2:	bf00      	nop

10004af4 <_Unwind_GetCFA>:
10004af4:	6c40      	ldr	r0, [r0, #68]	; 0x44
10004af6:	4770      	bx	lr

10004af8 <__gnu_Unwind_RaiseException>:
10004af8:	b5f0      	push	{r4, r5, r6, r7, lr}
10004afa:	6bcb      	ldr	r3, [r1, #60]	; 0x3c
10004afc:	b0f9      	sub	sp, #484	; 0x1e4
10004afe:	f101 0c04 	add.w	ip, r1, #4
10004b02:	460e      	mov	r6, r1
10004b04:	640b      	str	r3, [r1, #64]	; 0x40
10004b06:	ac01      	add	r4, sp, #4
10004b08:	4605      	mov	r5, r0
10004b0a:	f04f 37ff 	mov.w	r7, #4294967295
10004b0e:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
10004b12:	c40f      	stmia	r4!, {r0, r1, r2, r3}
10004b14:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
10004b18:	c40f      	stmia	r4!, {r0, r1, r2, r3}
10004b1a:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
10004b1e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
10004b20:	e89c 000f 	ldmia.w	ip, {r0, r1, r2, r3}
10004b24:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
10004b28:	9700      	str	r7, [sp, #0]
10004b2a:	e006      	b.n	10004b3a <__gnu_Unwind_RaiseException+0x42>
10004b2c:	692b      	ldr	r3, [r5, #16]
10004b2e:	466a      	mov	r2, sp
10004b30:	4629      	mov	r1, r5
10004b32:	4798      	blx	r3
10004b34:	2808      	cmp	r0, #8
10004b36:	4604      	mov	r4, r0
10004b38:	d108      	bne.n	10004b4c <__gnu_Unwind_RaiseException+0x54>
10004b3a:	9910      	ldr	r1, [sp, #64]	; 0x40
10004b3c:	4628      	mov	r0, r5
10004b3e:	f7ff fec7 	bl	100048d0 <get_eit_entry>
10004b42:	2800      	cmp	r0, #0
10004b44:	d0f2      	beq.n	10004b2c <__gnu_Unwind_RaiseException+0x34>
10004b46:	2009      	movs	r0, #9
10004b48:	b079      	add	sp, #484	; 0x1e4
10004b4a:	bdf0      	pop	{r4, r5, r6, r7, pc}
10004b4c:	4668      	mov	r0, sp
10004b4e:	f7ff ff0d 	bl	1000496c <restore_non_core_regs>
10004b52:	2c06      	cmp	r4, #6
10004b54:	d1f7      	bne.n	10004b46 <__gnu_Unwind_RaiseException+0x4e>
10004b56:	4631      	mov	r1, r6
10004b58:	4628      	mov	r0, r5
10004b5a:	f7ff ff3d 	bl	100049d8 <unwind_phase2>
10004b5e:	bf00      	nop

10004b60 <__gnu_Unwind_ForcedUnwind>:
10004b60:	b410      	push	{r4}
10004b62:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
10004b64:	60c1      	str	r1, [r0, #12]
10004b66:	4619      	mov	r1, r3
10004b68:	6182      	str	r2, [r0, #24]
10004b6a:	2200      	movs	r2, #0
10004b6c:	641c      	str	r4, [r3, #64]	; 0x40
10004b6e:	bc10      	pop	{r4}
10004b70:	e752      	b.n	10004a18 <unwind_phase2_forced>
10004b72:	bf00      	nop

10004b74 <__gnu_Unwind_Resume>:
10004b74:	b570      	push	{r4, r5, r6, lr}
10004b76:	6943      	ldr	r3, [r0, #20]
10004b78:	68c6      	ldr	r6, [r0, #12]
10004b7a:	640b      	str	r3, [r1, #64]	; 0x40
10004b7c:	b9ae      	cbnz	r6, 10004baa <__gnu_Unwind_Resume+0x36>
10004b7e:	6903      	ldr	r3, [r0, #16]
10004b80:	460a      	mov	r2, r1
10004b82:	4604      	mov	r4, r0
10004b84:	460d      	mov	r5, r1
10004b86:	4601      	mov	r1, r0
10004b88:	2002      	movs	r0, #2
10004b8a:	4798      	blx	r3
10004b8c:	2807      	cmp	r0, #7
10004b8e:	d005      	beq.n	10004b9c <__gnu_Unwind_Resume+0x28>
10004b90:	2808      	cmp	r0, #8
10004b92:	d10f      	bne.n	10004bb4 <__gnu_Unwind_Resume+0x40>
10004b94:	4629      	mov	r1, r5
10004b96:	4620      	mov	r0, r4
10004b98:	f7ff ff1e 	bl	100049d8 <unwind_phase2>
10004b9c:	4630      	mov	r0, r6
10004b9e:	6c29      	ldr	r1, [r5, #64]	; 0x40
10004ba0:	f7ff ff18 	bl	100049d4 <_Unwind_DebugHook>
10004ba4:	1d28      	adds	r0, r5, #4
10004ba6:	f000 fb67 	bl	10005278 <__restore_core_regs>
10004baa:	2201      	movs	r2, #1
10004bac:	f7ff ff34 	bl	10004a18 <unwind_phase2_forced>
10004bb0:	f000 fdf4 	bl	1000579c <abort>
10004bb4:	f000 fdf2 	bl	1000579c <abort>

10004bb8 <__gnu_Unwind_Resume_or_Rethrow>:
10004bb8:	68c2      	ldr	r2, [r0, #12]
10004bba:	b12a      	cbz	r2, 10004bc8 <__gnu_Unwind_Resume_or_Rethrow+0x10>
10004bbc:	f8d1 c03c 	ldr.w	ip, [r1, #60]	; 0x3c
10004bc0:	2200      	movs	r2, #0
10004bc2:	f8c1 c040 	str.w	ip, [r1, #64]	; 0x40
10004bc6:	e727      	b.n	10004a18 <unwind_phase2_forced>
10004bc8:	e796      	b.n	10004af8 <__gnu_Unwind_RaiseException>
10004bca:	bf00      	nop

10004bcc <_Unwind_Complete>:
10004bcc:	4770      	bx	lr
10004bce:	bf00      	nop

10004bd0 <_Unwind_DeleteException>:
10004bd0:	6883      	ldr	r3, [r0, #8]
10004bd2:	4601      	mov	r1, r0
10004bd4:	b10b      	cbz	r3, 10004bda <_Unwind_DeleteException+0xa>
10004bd6:	2001      	movs	r0, #1
10004bd8:	4718      	bx	r3
10004bda:	4770      	bx	lr

10004bdc <_Unwind_VRS_Get>:
10004bdc:	2901      	cmp	r1, #1
10004bde:	d015      	beq.n	10004c0c <_Unwind_VRS_Get+0x30>
10004be0:	d80c      	bhi.n	10004bfc <_Unwind_VRS_Get+0x20>
10004be2:	b98b      	cbnz	r3, 10004c08 <_Unwind_VRS_Get+0x2c>
10004be4:	2a0f      	cmp	r2, #15
10004be6:	bf94      	ite	ls
10004be8:	2100      	movls	r1, #0
10004bea:	2101      	movhi	r1, #1
10004bec:	b961      	cbnz	r1, 10004c08 <_Unwind_VRS_Get+0x2c>
10004bee:	eb00 0282 	add.w	r2, r0, r2, lsl #2
10004bf2:	4608      	mov	r0, r1
10004bf4:	6853      	ldr	r3, [r2, #4]
10004bf6:	9a00      	ldr	r2, [sp, #0]
10004bf8:	6013      	str	r3, [r2, #0]
10004bfa:	4770      	bx	lr
10004bfc:	3903      	subs	r1, #3
10004bfe:	2901      	cmp	r1, #1
10004c00:	bf94      	ite	ls
10004c02:	2001      	movls	r0, #1
10004c04:	2002      	movhi	r0, #2
10004c06:	4770      	bx	lr
10004c08:	2002      	movs	r0, #2
10004c0a:	4770      	bx	lr
10004c0c:	4608      	mov	r0, r1
10004c0e:	4770      	bx	lr

10004c10 <_Unwind_GetGR>:
10004c10:	b510      	push	{r4, lr}
10004c12:	b084      	sub	sp, #16
10004c14:	2300      	movs	r3, #0
10004c16:	460a      	mov	r2, r1
10004c18:	ac03      	add	r4, sp, #12
10004c1a:	4619      	mov	r1, r3
10004c1c:	9400      	str	r4, [sp, #0]
10004c1e:	f7ff ffdd 	bl	10004bdc <_Unwind_VRS_Get>
10004c22:	9803      	ldr	r0, [sp, #12]
10004c24:	b004      	add	sp, #16
10004c26:	bd10      	pop	{r4, pc}

10004c28 <_Unwind_VRS_Set>:
10004c28:	2901      	cmp	r1, #1
10004c2a:	d015      	beq.n	10004c58 <_Unwind_VRS_Set+0x30>
10004c2c:	d80c      	bhi.n	10004c48 <_Unwind_VRS_Set+0x20>
10004c2e:	b98b      	cbnz	r3, 10004c54 <_Unwind_VRS_Set+0x2c>
10004c30:	2a0f      	cmp	r2, #15
10004c32:	bf94      	ite	ls
10004c34:	2100      	movls	r1, #0
10004c36:	2101      	movhi	r1, #1
10004c38:	b961      	cbnz	r1, 10004c54 <_Unwind_VRS_Set+0x2c>
10004c3a:	9b00      	ldr	r3, [sp, #0]
10004c3c:	eb00 0282 	add.w	r2, r0, r2, lsl #2
10004c40:	4608      	mov	r0, r1
10004c42:	681b      	ldr	r3, [r3, #0]
10004c44:	6053      	str	r3, [r2, #4]
10004c46:	4770      	bx	lr
10004c48:	3903      	subs	r1, #3
10004c4a:	2901      	cmp	r1, #1
10004c4c:	bf94      	ite	ls
10004c4e:	2001      	movls	r0, #1
10004c50:	2002      	movhi	r0, #2
10004c52:	4770      	bx	lr
10004c54:	2002      	movs	r0, #2
10004c56:	4770      	bx	lr
10004c58:	4608      	mov	r0, r1
10004c5a:	4770      	bx	lr

10004c5c <_Unwind_SetGR>:
10004c5c:	b510      	push	{r4, lr}
10004c5e:	b084      	sub	sp, #16
10004c60:	2300      	movs	r3, #0
10004c62:	ac03      	add	r4, sp, #12
10004c64:	9203      	str	r2, [sp, #12]
10004c66:	460a      	mov	r2, r1
10004c68:	4619      	mov	r1, r3
10004c6a:	9400      	str	r4, [sp, #0]
10004c6c:	f7ff ffdc 	bl	10004c28 <_Unwind_VRS_Set>
10004c70:	b004      	add	sp, #16
10004c72:	bd10      	pop	{r4, pc}

10004c74 <__gnu_Unwind_Backtrace>:
10004c74:	b5f0      	push	{r4, r5, r6, r7, lr}
10004c76:	6bd3      	ldr	r3, [r2, #60]	; 0x3c
10004c78:	f5ad 7d0f 	sub.w	sp, sp, #572	; 0x23c
10004c7c:	1d14      	adds	r4, r2, #4
10004c7e:	4606      	mov	r6, r0
10004c80:	6413      	str	r3, [r2, #64]	; 0x40
10004c82:	f10d 0c5c 	add.w	ip, sp, #92	; 0x5c
10004c86:	460d      	mov	r5, r1
10004c88:	f04f 37ff 	mov.w	r7, #4294967295
10004c8c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
10004c8e:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
10004c92:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
10004c94:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
10004c98:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
10004c9a:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
10004c9e:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
10004ca2:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}
10004ca6:	9716      	str	r7, [sp, #88]	; 0x58
10004ca8:	e010      	b.n	10004ccc <__gnu_Unwind_Backtrace+0x58>
10004caa:	f7ff ffd7 	bl	10004c5c <_Unwind_SetGR>
10004cae:	4629      	mov	r1, r5
10004cb0:	a816      	add	r0, sp, #88	; 0x58
10004cb2:	47b0      	blx	r6
10004cb4:	4603      	mov	r3, r0
10004cb6:	aa16      	add	r2, sp, #88	; 0x58
10004cb8:	4669      	mov	r1, sp
10004cba:	2008      	movs	r0, #8
10004cbc:	b983      	cbnz	r3, 10004ce0 <__gnu_Unwind_Backtrace+0x6c>
10004cbe:	9b04      	ldr	r3, [sp, #16]
10004cc0:	4798      	blx	r3
10004cc2:	2805      	cmp	r0, #5
10004cc4:	4604      	mov	r4, r0
10004cc6:	d00c      	beq.n	10004ce2 <__gnu_Unwind_Backtrace+0x6e>
10004cc8:	2809      	cmp	r0, #9
10004cca:	d00a      	beq.n	10004ce2 <__gnu_Unwind_Backtrace+0x6e>
10004ccc:	9926      	ldr	r1, [sp, #152]	; 0x98
10004cce:	4668      	mov	r0, sp
10004cd0:	f7ff fdfe 	bl	100048d0 <get_eit_entry>
10004cd4:	4603      	mov	r3, r0
10004cd6:	466a      	mov	r2, sp
10004cd8:	210c      	movs	r1, #12
10004cda:	a816      	add	r0, sp, #88	; 0x58
10004cdc:	2b00      	cmp	r3, #0
10004cde:	d0e4      	beq.n	10004caa <__gnu_Unwind_Backtrace+0x36>
10004ce0:	2409      	movs	r4, #9
10004ce2:	a816      	add	r0, sp, #88	; 0x58
10004ce4:	f7ff fe42 	bl	1000496c <restore_non_core_regs>
10004ce8:	4620      	mov	r0, r4
10004cea:	f50d 7d0f 	add.w	sp, sp, #572	; 0x23c
10004cee:	bdf0      	pop	{r4, r5, r6, r7, pc}

10004cf0 <__gnu_unwind_pr_common>:
10004cf0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10004cf4:	6ccc      	ldr	r4, [r1, #76]	; 0x4c
10004cf6:	b089      	sub	sp, #36	; 0x24
10004cf8:	461e      	mov	r6, r3
10004cfa:	460d      	mov	r5, r1
10004cfc:	f854 3b04 	ldr.w	r3, [r4], #4
10004d00:	4617      	mov	r7, r2
10004d02:	f000 0803 	and.w	r8, r0, #3
10004d06:	9406      	str	r4, [sp, #24]
10004d08:	2e00      	cmp	r6, #0
10004d0a:	d07f      	beq.n	10004e0c <__gnu_unwind_pr_common+0x11c>
10004d0c:	0c1a      	lsrs	r2, r3, #16
10004d0e:	041b      	lsls	r3, r3, #16
10004d10:	f88d 201d 	strb.w	r2, [sp, #29]
10004d14:	b2d2      	uxtb	r2, r2
10004d16:	9305      	str	r3, [sp, #20]
10004d18:	2302      	movs	r3, #2
10004d1a:	eb04 0482 	add.w	r4, r4, r2, lsl #2
10004d1e:	f88d 301c 	strb.w	r3, [sp, #28]
10004d22:	f1b8 0f02 	cmp.w	r8, #2
10004d26:	6d2b      	ldr	r3, [r5, #80]	; 0x50
10004d28:	bf08      	it	eq
10004d2a:	6bac      	ldreq	r4, [r5, #56]	; 0x38
10004d2c:	f013 0301 	ands.w	r3, r3, #1
10004d30:	d008      	beq.n	10004d44 <__gnu_unwind_pr_common+0x54>
10004d32:	a905      	add	r1, sp, #20
10004d34:	4638      	mov	r0, r7
10004d36:	f000 fba1 	bl	1000547c <__gnu_unwind_execute>
10004d3a:	bb90      	cbnz	r0, 10004da2 <__gnu_unwind_pr_common+0xb2>
10004d3c:	2008      	movs	r0, #8
10004d3e:	b009      	add	sp, #36	; 0x24
10004d40:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10004d44:	f8d4 a000 	ldr.w	sl, [r4]
10004d48:	f1ba 0f00 	cmp.w	sl, #0
10004d4c:	d0f1      	beq.n	10004d32 <__gnu_unwind_pr_common+0x42>
10004d4e:	9301      	str	r3, [sp, #4]
10004d50:	f000 0308 	and.w	r3, r0, #8
10004d54:	9302      	str	r3, [sp, #8]
10004d56:	2e02      	cmp	r6, #2
10004d58:	d054      	beq.n	10004e04 <__gnu_unwind_pr_common+0x114>
10004d5a:	f8b4 a000 	ldrh.w	sl, [r4]
10004d5e:	3404      	adds	r4, #4
10004d60:	f834 9c02 	ldrh.w	r9, [r4, #-2]
10004d64:	6cab      	ldr	r3, [r5, #72]	; 0x48
10004d66:	f029 0b01 	bic.w	fp, r9, #1
10004d6a:	210f      	movs	r1, #15
10004d6c:	4638      	mov	r0, r7
10004d6e:	449b      	add	fp, r3
10004d70:	f7ff ff4e 	bl	10004c10 <_Unwind_GetGR>
10004d74:	4583      	cmp	fp, r0
10004d76:	d818      	bhi.n	10004daa <__gnu_unwind_pr_common+0xba>
10004d78:	f02a 0301 	bic.w	r3, sl, #1
10004d7c:	449b      	add	fp, r3
10004d7e:	4583      	cmp	fp, r0
10004d80:	d913      	bls.n	10004daa <__gnu_unwind_pr_common+0xba>
10004d82:	ea4f 0349 	mov.w	r3, r9, lsl #1
10004d86:	f00a 0a01 	and.w	sl, sl, #1
10004d8a:	f003 0302 	and.w	r3, r3, #2
10004d8e:	ea43 030a 	orr.w	r3, r3, sl
10004d92:	2b01      	cmp	r3, #1
10004d94:	f000 80bf 	beq.w	10004f16 <__gnu_unwind_pr_common+0x226>
10004d98:	2b02      	cmp	r3, #2
10004d9a:	f000 8089 	beq.w	10004eb0 <__gnu_unwind_pr_common+0x1c0>
10004d9e:	2b00      	cmp	r3, #0
10004da0:	d04d      	beq.n	10004e3e <__gnu_unwind_pr_common+0x14e>
10004da2:	2009      	movs	r0, #9
10004da4:	b009      	add	sp, #36	; 0x24
10004da6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10004daa:	ea4f 0349 	mov.w	r3, r9, lsl #1
10004dae:	f00a 0a01 	and.w	sl, sl, #1
10004db2:	f003 0302 	and.w	r3, r3, #2
10004db6:	ea43 030a 	orr.w	r3, r3, sl
10004dba:	2b01      	cmp	r3, #1
10004dbc:	d03a      	beq.n	10004e34 <__gnu_unwind_pr_common+0x144>
10004dbe:	2b02      	cmp	r3, #2
10004dc0:	d02a      	beq.n	10004e18 <__gnu_unwind_pr_common+0x128>
10004dc2:	2b00      	cmp	r3, #0
10004dc4:	d1ed      	bne.n	10004da2 <__gnu_unwind_pr_common+0xb2>
10004dc6:	3404      	adds	r4, #4
10004dc8:	f8d4 a000 	ldr.w	sl, [r4]
10004dcc:	f1ba 0f00 	cmp.w	sl, #0
10004dd0:	d1c1      	bne.n	10004d56 <__gnu_unwind_pr_common+0x66>
10004dd2:	a905      	add	r1, sp, #20
10004dd4:	4638      	mov	r0, r7
10004dd6:	f000 fb51 	bl	1000547c <__gnu_unwind_execute>
10004dda:	2800      	cmp	r0, #0
10004ddc:	d1e1      	bne.n	10004da2 <__gnu_unwind_pr_common+0xb2>
10004dde:	9b01      	ldr	r3, [sp, #4]
10004de0:	2b00      	cmp	r3, #0
10004de2:	d0ab      	beq.n	10004d3c <__gnu_unwind_pr_common+0x4c>
10004de4:	210f      	movs	r1, #15
10004de6:	4638      	mov	r0, r7
10004de8:	f7ff ff12 	bl	10004c10 <_Unwind_GetGR>
10004dec:	210e      	movs	r1, #14
10004dee:	4602      	mov	r2, r0
10004df0:	4638      	mov	r0, r7
10004df2:	f7ff ff33 	bl	10004c5c <_Unwind_SetGR>
10004df6:	4638      	mov	r0, r7
10004df8:	4a6e      	ldr	r2, [pc, #440]	; (10004fb4 <__gnu_unwind_pr_common+0x2c4>)
10004dfa:	210f      	movs	r1, #15
10004dfc:	f7ff ff2e 	bl	10004c5c <_Unwind_SetGR>
10004e00:	2007      	movs	r0, #7
10004e02:	e7cf      	b.n	10004da4 <__gnu_unwind_pr_common+0xb4>
10004e04:	f8d4 9004 	ldr.w	r9, [r4, #4]
10004e08:	3408      	adds	r4, #8
10004e0a:	e7ab      	b.n	10004d64 <__gnu_unwind_pr_common+0x74>
10004e0c:	021b      	lsls	r3, r3, #8
10004e0e:	9305      	str	r3, [sp, #20]
10004e10:	2303      	movs	r3, #3
10004e12:	f8ad 301c 	strh.w	r3, [sp, #28]
10004e16:	e784      	b.n	10004d22 <__gnu_unwind_pr_common+0x32>
10004e18:	6823      	ldr	r3, [r4, #0]
10004e1a:	f023 4b00 	bic.w	fp, r3, #2147483648	; 0x80000000
10004e1e:	f1b8 0f00 	cmp.w	r8, #0
10004e22:	d121      	bne.n	10004e68 <__gnu_unwind_pr_common+0x178>
10004e24:	2b00      	cmp	r3, #0
10004e26:	da00      	bge.n	10004e2a <__gnu_unwind_pr_common+0x13a>
10004e28:	3404      	adds	r4, #4
10004e2a:	f10b 0b01 	add.w	fp, fp, #1
10004e2e:	eb04 048b 	add.w	r4, r4, fp, lsl #2
10004e32:	e7c9      	b.n	10004dc8 <__gnu_unwind_pr_common+0xd8>
10004e34:	f1b8 0f00 	cmp.w	r8, #0
10004e38:	d120      	bne.n	10004e7c <__gnu_unwind_pr_common+0x18c>
10004e3a:	3408      	adds	r4, #8
10004e3c:	e7c4      	b.n	10004dc8 <__gnu_unwind_pr_common+0xd8>
10004e3e:	f1b8 0f00 	cmp.w	r8, #0
10004e42:	d0c0      	beq.n	10004dc6 <__gnu_unwind_pr_common+0xd6>
10004e44:	4620      	mov	r0, r4
10004e46:	3404      	adds	r4, #4
10004e48:	f7ff fcf4 	bl	10004834 <selfrel_offset31>
10004e4c:	4606      	mov	r6, r0
10004e4e:	63ac      	str	r4, [r5, #56]	; 0x38
10004e50:	4628      	mov	r0, r5
10004e52:	e000      	b.n	10004e56 <__gnu_unwind_pr_common+0x166>
10004e54:	bf00      	nop
10004e56:	2800      	cmp	r0, #0
10004e58:	d0a3      	beq.n	10004da2 <__gnu_unwind_pr_common+0xb2>
10004e5a:	4638      	mov	r0, r7
10004e5c:	4632      	mov	r2, r6
10004e5e:	210f      	movs	r1, #15
10004e60:	f7ff fefc 	bl	10004c5c <_Unwind_SetGR>
10004e64:	2007      	movs	r0, #7
10004e66:	e79d      	b.n	10004da4 <__gnu_unwind_pr_common+0xb4>
10004e68:	f8d5 9020 	ldr.w	r9, [r5, #32]
10004e6c:	210d      	movs	r1, #13
10004e6e:	4638      	mov	r0, r7
10004e70:	f7ff fece 	bl	10004c10 <_Unwind_GetGR>
10004e74:	4581      	cmp	r9, r0
10004e76:	d079      	beq.n	10004f6c <__gnu_unwind_pr_common+0x27c>
10004e78:	6823      	ldr	r3, [r4, #0]
10004e7a:	e7d3      	b.n	10004e24 <__gnu_unwind_pr_common+0x134>
10004e7c:	f8d5 9020 	ldr.w	r9, [r5, #32]
10004e80:	210d      	movs	r1, #13
10004e82:	4638      	mov	r0, r7
10004e84:	f7ff fec4 	bl	10004c10 <_Unwind_GetGR>
10004e88:	4581      	cmp	r9, r0
10004e8a:	d1d6      	bne.n	10004e3a <__gnu_unwind_pr_common+0x14a>
10004e8c:	6aab      	ldr	r3, [r5, #40]	; 0x28
10004e8e:	429c      	cmp	r4, r3
10004e90:	d1d3      	bne.n	10004e3a <__gnu_unwind_pr_common+0x14a>
10004e92:	4620      	mov	r0, r4
10004e94:	210f      	movs	r1, #15
10004e96:	f7ff fccd 	bl	10004834 <selfrel_offset31>
10004e9a:	4602      	mov	r2, r0
10004e9c:	4638      	mov	r0, r7
10004e9e:	f7ff fedd 	bl	10004c5c <_Unwind_SetGR>
10004ea2:	4638      	mov	r0, r7
10004ea4:	462a      	mov	r2, r5
10004ea6:	2100      	movs	r1, #0
10004ea8:	f7ff fed8 	bl	10004c5c <_Unwind_SetGR>
10004eac:	2007      	movs	r0, #7
10004eae:	e779      	b.n	10004da4 <__gnu_unwind_pr_common+0xb4>
10004eb0:	6823      	ldr	r3, [r4, #0]
10004eb2:	f023 4b00 	bic.w	fp, r3, #2147483648	; 0x80000000
10004eb6:	f1b8 0f00 	cmp.w	r8, #0
10004eba:	d1d5      	bne.n	10004e68 <__gnu_unwind_pr_common+0x178>
10004ebc:	9a02      	ldr	r2, [sp, #8]
10004ebe:	b112      	cbz	r2, 10004ec6 <__gnu_unwind_pr_common+0x1d6>
10004ec0:	f1bb 0f00 	cmp.w	fp, #0
10004ec4:	d1ae      	bne.n	10004e24 <__gnu_unwind_pr_common+0x134>
10004ec6:	f105 0358 	add.w	r3, r5, #88	; 0x58
10004eca:	f8cd 800c 	str.w	r8, [sp, #12]
10004ece:	f104 0a04 	add.w	sl, r4, #4
10004ed2:	46b0      	mov	r8, r6
10004ed4:	f04f 0900 	mov.w	r9, #0
10004ed8:	461e      	mov	r6, r3
10004eda:	e00d      	b.n	10004ef8 <__gnu_unwind_pr_common+0x208>
10004edc:	4650      	mov	r0, sl
10004ede:	9604      	str	r6, [sp, #16]
10004ee0:	2200      	movs	r2, #0
10004ee2:	f7ff fd71 	bl	100049c8 <_Unwind_decode_typeinfo_ptr.constprop.0>
10004ee6:	ab04      	add	r3, sp, #16
10004ee8:	4601      	mov	r1, r0
10004eea:	4628      	mov	r0, r5
10004eec:	f10a 0a04 	add.w	sl, sl, #4
10004ef0:	e000      	b.n	10004ef4 <__gnu_unwind_pr_common+0x204>
10004ef2:	bf00      	nop
10004ef4:	2800      	cmp	r0, #0
10004ef6:	d14a      	bne.n	10004f8e <__gnu_unwind_pr_common+0x29e>
10004ef8:	45d9      	cmp	r9, fp
10004efa:	f109 0901 	add.w	r9, r9, #1
10004efe:	d1ed      	bne.n	10004edc <__gnu_unwind_pr_common+0x1ec>
10004f00:	210d      	movs	r1, #13
10004f02:	4638      	mov	r0, r7
10004f04:	f7ff fe84 	bl	10004c10 <_Unwind_GetGR>
10004f08:	9b04      	ldr	r3, [sp, #16]
10004f0a:	4602      	mov	r2, r0
10004f0c:	2006      	movs	r0, #6
10004f0e:	622a      	str	r2, [r5, #32]
10004f10:	e9c5 3409 	strd	r3, r4, [r5, #36]	; 0x24
10004f14:	e746      	b.n	10004da4 <__gnu_unwind_pr_common+0xb4>
10004f16:	f1b8 0f00 	cmp.w	r8, #0
10004f1a:	d1af      	bne.n	10004e7c <__gnu_unwind_pr_common+0x18c>
10004f1c:	6863      	ldr	r3, [r4, #4]
10004f1e:	6822      	ldr	r2, [r4, #0]
10004f20:	1c99      	adds	r1, r3, #2
10004f22:	ea4f 72d2 	mov.w	r2, r2, lsr #31
10004f26:	f43f af3c 	beq.w	10004da2 <__gnu_unwind_pr_common+0xb2>
10004f2a:	f105 0158 	add.w	r1, r5, #88	; 0x58
10004f2e:	3301      	adds	r3, #1
10004f30:	9104      	str	r1, [sp, #16]
10004f32:	d031      	beq.n	10004f98 <__gnu_unwind_pr_common+0x2a8>
10004f34:	1d20      	adds	r0, r4, #4
10004f36:	f7ff fd47 	bl	100049c8 <_Unwind_decode_typeinfo_ptr.constprop.0>
10004f3a:	ab04      	add	r3, sp, #16
10004f3c:	4601      	mov	r1, r0
10004f3e:	4628      	mov	r0, r5
10004f40:	e000      	b.n	10004f44 <__gnu_unwind_pr_common+0x254>
10004f42:	bf00      	nop
10004f44:	2800      	cmp	r0, #0
10004f46:	f43f af78 	beq.w	10004e3a <__gnu_unwind_pr_common+0x14a>
10004f4a:	4681      	mov	r9, r0
10004f4c:	210d      	movs	r1, #13
10004f4e:	4638      	mov	r0, r7
10004f50:	f7ff fe5e 	bl	10004c10 <_Unwind_GetGR>
10004f54:	f1b9 0f02 	cmp.w	r9, #2
10004f58:	6228      	str	r0, [r5, #32]
10004f5a:	d122      	bne.n	10004fa2 <__gnu_unwind_pr_common+0x2b2>
10004f5c:	462b      	mov	r3, r5
10004f5e:	9a04      	ldr	r2, [sp, #16]
10004f60:	f843 2f2c 	str.w	r2, [r3, #44]!
10004f64:	626b      	str	r3, [r5, #36]	; 0x24
10004f66:	2006      	movs	r0, #6
10004f68:	62ac      	str	r4, [r5, #40]	; 0x28
10004f6a:	e71b      	b.n	10004da4 <__gnu_unwind_pr_common+0xb4>
10004f6c:	6aab      	ldr	r3, [r5, #40]	; 0x28
10004f6e:	429c      	cmp	r4, r3
10004f70:	d182      	bne.n	10004e78 <__gnu_unwind_pr_common+0x188>
10004f72:	2304      	movs	r3, #4
10004f74:	2200      	movs	r2, #0
10004f76:	f8c5 b028 	str.w	fp, [r5, #40]	; 0x28
10004f7a:	e9c5 230b 	strd	r2, r3, [r5, #44]	; 0x2c
10004f7e:	18e3      	adds	r3, r4, r3
10004f80:	636b      	str	r3, [r5, #52]	; 0x34
10004f82:	6823      	ldr	r3, [r4, #0]
10004f84:	2b00      	cmp	r3, #0
10004f86:	db0f      	blt.n	10004fa8 <__gnu_unwind_pr_common+0x2b8>
10004f88:	2301      	movs	r3, #1
10004f8a:	9301      	str	r3, [sp, #4]
10004f8c:	e74d      	b.n	10004e2a <__gnu_unwind_pr_common+0x13a>
10004f8e:	4646      	mov	r6, r8
10004f90:	6823      	ldr	r3, [r4, #0]
10004f92:	f8dd 800c 	ldr.w	r8, [sp, #12]
10004f96:	e745      	b.n	10004e24 <__gnu_unwind_pr_common+0x134>
10004f98:	210d      	movs	r1, #13
10004f9a:	4638      	mov	r0, r7
10004f9c:	f7ff fe38 	bl	10004c10 <_Unwind_GetGR>
10004fa0:	6228      	str	r0, [r5, #32]
10004fa2:	9b04      	ldr	r3, [sp, #16]
10004fa4:	626b      	str	r3, [r5, #36]	; 0x24
10004fa6:	e7de      	b.n	10004f66 <__gnu_unwind_pr_common+0x276>
10004fa8:	f10b 0001 	add.w	r0, fp, #1
10004fac:	210f      	movs	r1, #15
10004fae:	eb04 0080 	add.w	r0, r4, r0, lsl #2
10004fb2:	e770      	b.n	10004e96 <__gnu_unwind_pr_common+0x1a6>
10004fb4:	00000000 	andeq	r0, r0, r0

10004fb8 <__aeabi_unwind_cpp_pr0>:
10004fb8:	2300      	movs	r3, #0
10004fba:	e699      	b.n	10004cf0 <__gnu_unwind_pr_common>

10004fbc <__aeabi_unwind_cpp_pr1>:
10004fbc:	2301      	movs	r3, #1
10004fbe:	e697      	b.n	10004cf0 <__gnu_unwind_pr_common>

10004fc0 <__aeabi_unwind_cpp_pr2>:
10004fc0:	2302      	movs	r3, #2
10004fc2:	e695      	b.n	10004cf0 <__gnu_unwind_pr_common>

10004fc4 <_Unwind_VRS_Pop>:
10004fc4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
10004fc8:	4606      	mov	r6, r0
10004fca:	b0c3      	sub	sp, #268	; 0x10c
10004fcc:	4615      	mov	r5, r2
10004fce:	461c      	mov	r4, r3
10004fd0:	2904      	cmp	r1, #4
10004fd2:	f200 80c2 	bhi.w	1000515a <_Unwind_VRS_Pop+0x196>
10004fd6:	e8df f001 	tbb	[pc, r1]
10004fda:	2cc059a3 			; <UNDEFINED> instruction: 0x2cc059a3
10004fde:	2c000003 	stccs	0, cr0, [r0], {3}
10004fe2:	f040 80ba 	bne.w	1000515a <_Unwind_VRS_Pop+0x196>
10004fe6:	2a10      	cmp	r2, #16
10004fe8:	f200 80b7 	bhi.w	1000515a <_Unwind_VRS_Pop+0x196>
10004fec:	6803      	ldr	r3, [r0, #0]
10004fee:	06df      	lsls	r7, r3, #27
10004ff0:	f100 80b7 	bmi.w	10005162 <_Unwind_VRS_Pop+0x19e>
10004ff4:	af20      	add	r7, sp, #128	; 0x80
10004ff6:	4638      	mov	r0, r7
10004ff8:	f000 f9b0 	bl	1000535c <__gnu_Unwind_Save_WMMXC>
10004ffc:	6bb4      	ldr	r4, [r6, #56]	; 0x38
10004ffe:	4639      	mov	r1, r7
10005000:	2300      	movs	r3, #0
10005002:	f04f 0c01 	mov.w	ip, #1
10005006:	fa0c f203 	lsl.w	r2, ip, r3
1000500a:	4620      	mov	r0, r4
1000500c:	3301      	adds	r3, #1
1000500e:	422a      	tst	r2, r5
10005010:	d003      	beq.n	1000501a <_Unwind_VRS_Pop+0x56>
10005012:	f850 2b04 	ldr.w	r2, [r0], #4
10005016:	4604      	mov	r4, r0
10005018:	600a      	str	r2, [r1, #0]
1000501a:	2b04      	cmp	r3, #4
1000501c:	f101 0104 	add.w	r1, r1, #4
10005020:	d1f1      	bne.n	10005006 <_Unwind_VRS_Pop+0x42>
10005022:	4638      	mov	r0, r7
10005024:	63b4      	str	r4, [r6, #56]	; 0x38
10005026:	f000 f98f 	bl	10005348 <__gnu_Unwind_Restore_WMMXC>
1000502a:	2000      	movs	r0, #0
1000502c:	b043      	add	sp, #268	; 0x10c
1000502e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
10005032:	2c03      	cmp	r4, #3
10005034:	f040 8091 	bne.w	1000515a <_Unwind_VRS_Pop+0x196>
10005038:	fa1f f882 	uxth.w	r8, r2
1000503c:	0c14      	lsrs	r4, r2, #16
1000503e:	eb08 4512 	add.w	r5, r8, r2, lsr #16
10005042:	2d10      	cmp	r5, #16
10005044:	f200 8089 	bhi.w	1000515a <_Unwind_VRS_Pop+0x196>
10005048:	6803      	ldr	r3, [r0, #0]
1000504a:	071a      	lsls	r2, r3, #28
1000504c:	f100 80cd 	bmi.w	100051ea <_Unwind_VRS_Pop+0x226>
10005050:	af20      	add	r7, sp, #128	; 0x80
10005052:	4638      	mov	r0, r7
10005054:	f000 f956 	bl	10005304 <__gnu_Unwind_Save_WMMXD>
10005058:	6bb5      	ldr	r5, [r6, #56]	; 0x38
1000505a:	eb07 01c4 	add.w	r1, r7, r4, lsl #3
1000505e:	f1b8 0f00 	cmp.w	r8, #0
10005062:	d00b      	beq.n	1000507c <_Unwind_VRS_Pop+0xb8>
10005064:	460b      	mov	r3, r1
10005066:	eb01 01c8 	add.w	r1, r1, r8, lsl #3
1000506a:	ea4f 08c8 	mov.w	r8, r8, lsl #3
1000506e:	1ae8      	subs	r0, r5, r3
10005070:	581a      	ldr	r2, [r3, r0]
10005072:	f843 2b04 	str.w	r2, [r3], #4
10005076:	428b      	cmp	r3, r1
10005078:	d1fa      	bne.n	10005070 <_Unwind_VRS_Pop+0xac>
1000507a:	4445      	add	r5, r8
1000507c:	4638      	mov	r0, r7
1000507e:	63b5      	str	r5, [r6, #56]	; 0x38
10005080:	f000 f91e 	bl	100052c0 <__gnu_Unwind_Restore_WMMXD>
10005084:	2000      	movs	r0, #0
10005086:	b043      	add	sp, #268	; 0x10c
10005088:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
1000508c:	f004 03fb 	and.w	r3, r4, #251	; 0xfb
10005090:	ea4f 4812 	mov.w	r8, r2, lsr #16
10005094:	b295      	uxth	r5, r2
10005096:	2b01      	cmp	r3, #1
10005098:	d15f      	bne.n	1000515a <_Unwind_VRS_Pop+0x196>
1000509a:	2c01      	cmp	r4, #1
1000509c:	eb08 0905 	add.w	r9, r8, r5
100050a0:	d058      	beq.n	10005154 <_Unwind_VRS_Pop+0x190>
100050a2:	f1b9 0f20 	cmp.w	r9, #32
100050a6:	d858      	bhi.n	1000515a <_Unwind_VRS_Pop+0x196>
100050a8:	f1b8 0f0f 	cmp.w	r8, #15
100050ac:	d975      	bls.n	1000519a <_Unwind_VRS_Pop+0x1d6>
100050ae:	2c05      	cmp	r4, #5
100050b0:	46a9      	mov	r9, r5
100050b2:	f000 80a4 	beq.w	100051fe <_Unwind_VRS_Pop+0x23a>
100050b6:	2d00      	cmp	r5, #0
100050b8:	d14f      	bne.n	1000515a <_Unwind_VRS_Pop+0x196>
100050ba:	6bb3      	ldr	r3, [r6, #56]	; 0x38
100050bc:	b365      	cbz	r5, 10005118 <_Unwind_VRS_Pop+0x154>
100050be:	af20      	add	r7, sp, #128	; 0x80
100050c0:	f04f 0900 	mov.w	r9, #0
100050c4:	eb07 07c8 	add.w	r7, r7, r8, lsl #3
100050c8:	eb03 05c5 	add.w	r5, r3, r5, lsl #3
100050cc:	3f04      	subs	r7, #4
100050ce:	f853 1b04 	ldr.w	r1, [r3], #4
100050d2:	429d      	cmp	r5, r3
100050d4:	f847 1f04 	str.w	r1, [r7, #4]!
100050d8:	d1f9      	bne.n	100050ce <_Unwind_VRS_Pop+0x10a>
100050da:	f1b9 0f00 	cmp.w	r9, #0
100050de:	d00f      	beq.n	10005100 <_Unwind_VRS_Pop+0x13c>
100050e0:	466f      	mov	r7, sp
100050e2:	4641      	mov	r1, r8
100050e4:	eb03 05c9 	add.w	r5, r3, r9, lsl #3
100050e8:	2910      	cmp	r1, #16
100050ea:	bf38      	it	cc
100050ec:	2110      	movcc	r1, #16
100050ee:	eb07 01c1 	add.w	r1, r7, r1, lsl #3
100050f2:	3984      	subs	r1, #132	; 0x84
100050f4:	f853 0b04 	ldr.w	r0, [r3], #4
100050f8:	429d      	cmp	r5, r3
100050fa:	f841 0f04 	str.w	r0, [r1, #4]!
100050fe:	d1f9      	bne.n	100050f4 <_Unwind_VRS_Pop+0x130>
10005100:	2c01      	cmp	r4, #1
10005102:	d07a      	beq.n	100051fa <_Unwind_VRS_Pop+0x236>
10005104:	f1b8 0f0f 	cmp.w	r8, #15
10005108:	63b5      	str	r5, [r6, #56]	; 0x38
1000510a:	d96a      	bls.n	100051e2 <_Unwind_VRS_Pop+0x21e>
1000510c:	f1b9 0f00 	cmp.w	r9, #0
10005110:	d002      	beq.n	10005118 <_Unwind_VRS_Pop+0x154>
10005112:	4668      	mov	r0, sp
10005114:	f000 f8cc 	bl	100052b0 <__gnu_Unwind_Restore_VFP_D_16_to_31>
10005118:	2000      	movs	r0, #0
1000511a:	b043      	add	sp, #268	; 0x10c
1000511c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
10005120:	b9dc      	cbnz	r4, 1000515a <_Unwind_VRS_Pop+0x196>
10005122:	6b87      	ldr	r7, [r0, #56]	; 0x38
10005124:	4623      	mov	r3, r4
10005126:	fa1f fc82 	uxth.w	ip, r2
1000512a:	2001      	movs	r0, #1
1000512c:	1d34      	adds	r4, r6, #4
1000512e:	fa00 f103 	lsl.w	r1, r0, r3
10005132:	463a      	mov	r2, r7
10005134:	ea11 0f0c 	tst.w	r1, ip
10005138:	d004      	beq.n	10005144 <_Unwind_VRS_Pop+0x180>
1000513a:	f852 1b04 	ldr.w	r1, [r2], #4
1000513e:	4617      	mov	r7, r2
10005140:	f844 1023 	str.w	r1, [r4, r3, lsl #2]
10005144:	3301      	adds	r3, #1
10005146:	2b10      	cmp	r3, #16
10005148:	d1f1      	bne.n	1000512e <_Unwind_VRS_Pop+0x16a>
1000514a:	f415 5000 	ands.w	r0, r5, #8192	; 0x2000
1000514e:	d1e3      	bne.n	10005118 <_Unwind_VRS_Pop+0x154>
10005150:	63b7      	str	r7, [r6, #56]	; 0x38
10005152:	e003      	b.n	1000515c <_Unwind_VRS_Pop+0x198>
10005154:	f1b9 0f10 	cmp.w	r9, #16
10005158:	d90b      	bls.n	10005172 <_Unwind_VRS_Pop+0x1ae>
1000515a:	2002      	movs	r0, #2
1000515c:	b043      	add	sp, #268	; 0x10c
1000515e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
10005162:	f023 0310 	bic.w	r3, r3, #16
10005166:	f500 70e8 	add.w	r0, r0, #464	; 0x1d0
1000516a:	6033      	str	r3, [r6, #0]
1000516c:	f000 f8f6 	bl	1000535c <__gnu_Unwind_Save_WMMXC>
10005170:	e740      	b.n	10004ff4 <_Unwind_VRS_Pop+0x30>
10005172:	f1b8 0f0f 	cmp.w	r8, #15
10005176:	d8f0      	bhi.n	1000515a <_Unwind_VRS_Pop+0x196>
10005178:	6803      	ldr	r3, [r0, #0]
1000517a:	07d8      	lsls	r0, r3, #31
1000517c:	d450      	bmi.n	10005220 <_Unwind_VRS_Pop+0x25c>
1000517e:	af20      	add	r7, sp, #128	; 0x80
10005180:	4638      	mov	r0, r7
10005182:	f000 f889 	bl	10005298 <__gnu_Unwind_Save_VFP>
10005186:	6bb3      	ldr	r3, [r6, #56]	; 0x38
10005188:	2d00      	cmp	r5, #0
1000518a:	d199      	bne.n	100050c0 <_Unwind_VRS_Pop+0xfc>
1000518c:	461d      	mov	r5, r3
1000518e:	3504      	adds	r5, #4
10005190:	4638      	mov	r0, r7
10005192:	63b5      	str	r5, [r6, #56]	; 0x38
10005194:	f000 f87c 	bl	10005290 <__gnu_Unwind_Restore_VFP>
10005198:	e7be      	b.n	10005118 <_Unwind_VRS_Pop+0x154>
1000519a:	f1b9 0f10 	cmp.w	r9, #16
1000519e:	d958      	bls.n	10005252 <_Unwind_VRS_Pop+0x28e>
100051a0:	2c05      	cmp	r4, #5
100051a2:	d1da      	bne.n	1000515a <_Unwind_VRS_Pop+0x196>
100051a4:	6833      	ldr	r3, [r6, #0]
100051a6:	f1a9 0910 	sub.w	r9, r9, #16
100051aa:	07dd      	lsls	r5, r3, #31
100051ac:	d509      	bpl.n	100051c2 <_Unwind_VRS_Pop+0x1fe>
100051ae:	f023 0301 	bic.w	r3, r3, #1
100051b2:	4630      	mov	r0, r6
100051b4:	f043 0302 	orr.w	r3, r3, #2
100051b8:	f840 3b48 	str.w	r3, [r0], #72
100051bc:	f000 f874 	bl	100052a8 <__gnu_Unwind_Save_VFP_D>
100051c0:	6833      	ldr	r3, [r6, #0]
100051c2:	0759      	lsls	r1, r3, #29
100051c4:	d421      	bmi.n	1000520a <_Unwind_VRS_Pop+0x246>
100051c6:	a820      	add	r0, sp, #128	; 0x80
100051c8:	f000 f86e 	bl	100052a8 <__gnu_Unwind_Save_VFP_D>
100051cc:	466f      	mov	r7, sp
100051ce:	f1c8 0510 	rsb	r5, r8, #16
100051d2:	4638      	mov	r0, r7
100051d4:	f000 f870 	bl	100052b8 <__gnu_Unwind_Save_VFP_D_16_to_31>
100051d8:	2d00      	cmp	r5, #0
100051da:	6bb3      	ldr	r3, [r6, #56]	; 0x38
100051dc:	dd81      	ble.n	100050e2 <_Unwind_VRS_Pop+0x11e>
100051de:	af20      	add	r7, sp, #128	; 0x80
100051e0:	e770      	b.n	100050c4 <_Unwind_VRS_Pop+0x100>
100051e2:	a820      	add	r0, sp, #128	; 0x80
100051e4:	f000 f85c 	bl	100052a0 <__gnu_Unwind_Restore_VFP_D>
100051e8:	e790      	b.n	1000510c <_Unwind_VRS_Pop+0x148>
100051ea:	f023 0308 	bic.w	r3, r3, #8
100051ee:	f500 70a8 	add.w	r0, r0, #336	; 0x150
100051f2:	6033      	str	r3, [r6, #0]
100051f4:	f000 f886 	bl	10005304 <__gnu_Unwind_Save_WMMXD>
100051f8:	e72a      	b.n	10005050 <_Unwind_VRS_Pop+0x8c>
100051fa:	af20      	add	r7, sp, #128	; 0x80
100051fc:	e7c7      	b.n	1000518e <_Unwind_VRS_Pop+0x1ca>
100051fe:	2d00      	cmp	r5, #0
10005200:	f43f af5b 	beq.w	100050ba <_Unwind_VRS_Pop+0xf6>
10005204:	6833      	ldr	r3, [r6, #0]
10005206:	075a      	lsls	r2, r3, #29
10005208:	d5e0      	bpl.n	100051cc <_Unwind_VRS_Pop+0x208>
1000520a:	f023 0304 	bic.w	r3, r3, #4
1000520e:	4630      	mov	r0, r6
10005210:	f840 3bd0 	str.w	r3, [r0], #208
10005214:	f000 f850 	bl	100052b8 <__gnu_Unwind_Save_VFP_D_16_to_31>
10005218:	f1b8 0f0f 	cmp.w	r8, #15
1000521c:	d8d6      	bhi.n	100051cc <_Unwind_VRS_Pop+0x208>
1000521e:	e7d2      	b.n	100051c6 <_Unwind_VRS_Pop+0x202>
10005220:	f023 0303 	bic.w	r3, r3, #3
10005224:	4630      	mov	r0, r6
10005226:	f840 3b48 	str.w	r3, [r0], #72
1000522a:	f000 f835 	bl	10005298 <__gnu_Unwind_Save_VFP>
1000522e:	2c01      	cmp	r4, #1
10005230:	d0a5      	beq.n	1000517e <_Unwind_VRS_Pop+0x1ba>
10005232:	f1b8 0f0f 	cmp.w	r8, #15
10005236:	f63f af40 	bhi.w	100050ba <_Unwind_VRS_Pop+0xf6>
1000523a:	af20      	add	r7, sp, #128	; 0x80
1000523c:	4638      	mov	r0, r7
1000523e:	f000 f833 	bl	100052a8 <__gnu_Unwind_Save_VFP_D>
10005242:	6bb3      	ldr	r3, [r6, #56]	; 0x38
10005244:	2d00      	cmp	r5, #0
10005246:	f47f af3b 	bne.w	100050c0 <_Unwind_VRS_Pop+0xfc>
1000524a:	4638      	mov	r0, r7
1000524c:	f000 f828 	bl	100052a0 <__gnu_Unwind_Restore_VFP_D>
10005250:	e762      	b.n	10005118 <_Unwind_VRS_Pop+0x154>
10005252:	6833      	ldr	r3, [r6, #0]
10005254:	07d9      	lsls	r1, r3, #31
10005256:	d5ea      	bpl.n	1000522e <_Unwind_VRS_Pop+0x26a>
10005258:	2c05      	cmp	r4, #5
1000525a:	d1e1      	bne.n	10005220 <_Unwind_VRS_Pop+0x25c>
1000525c:	f023 0301 	bic.w	r3, r3, #1
10005260:	4630      	mov	r0, r6
10005262:	af20      	add	r7, sp, #128	; 0x80
10005264:	f043 0302 	orr.w	r3, r3, #2
10005268:	f840 3b48 	str.w	r3, [r0], #72
1000526c:	f000 f81c 	bl	100052a8 <__gnu_Unwind_Save_VFP_D>
10005270:	4638      	mov	r0, r7
10005272:	f000 f819 	bl	100052a8 <__gnu_Unwind_Save_VFP_D>
10005276:	e7e4      	b.n	10005242 <_Unwind_VRS_Pop+0x27e>

10005278 <__restore_core_regs>:
10005278:	f100 0134 	add.w	r1, r0, #52	; 0x34
1000527c:	e891 0038 	ldmia.w	r1, {r3, r4, r5}
10005280:	469c      	mov	ip, r3
10005282:	46a6      	mov	lr, r4
10005284:	f84c 5d04 	str.w	r5, [ip, #-4]!
10005288:	e890 0fff 	ldmia.w	r0, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp}
1000528c:	46e5      	mov	sp, ip
1000528e:	bd00      	pop	{pc}

10005290 <__gnu_Unwind_Restore_VFP>:
10005290:	ec90 0b21 	fldmiax	r0, {d0-d15}	;@ Deprecated
10005294:	4770      	bx	lr
10005296:	bf00      	nop

10005298 <__gnu_Unwind_Save_VFP>:
10005298:	ec80 0b21 	fstmiax	r0, {d0-d15}	;@ Deprecated
1000529c:	4770      	bx	lr
1000529e:	bf00      	nop

100052a0 <__gnu_Unwind_Restore_VFP_D>:
100052a0:	ec90 0b20 	vldmia	r0, {d0-d15}
100052a4:	4770      	bx	lr
100052a6:	bf00      	nop

100052a8 <__gnu_Unwind_Save_VFP_D>:
100052a8:	ec80 0b20 	vstmia	r0, {d0-d15}
100052ac:	4770      	bx	lr
100052ae:	bf00      	nop

100052b0 <__gnu_Unwind_Restore_VFP_D_16_to_31>:
100052b0:	ecd0 0b20 	vldmia	r0, {d16-d31}
100052b4:	4770      	bx	lr
100052b6:	bf00      	nop

100052b8 <__gnu_Unwind_Save_VFP_D_16_to_31>:
100052b8:	ecc0 0b20 	vstmia	r0, {d16-d31}
100052bc:	4770      	bx	lr
100052be:	bf00      	nop

100052c0 <__gnu_Unwind_Restore_WMMXD>:
100052c0:	ecf0 0102 	ldfe	f0, [r0], #8
100052c4:	ecf0 1102 	ldfe	f1, [r0], #8
100052c8:	ecf0 2102 	ldfe	f2, [r0], #8
100052cc:	ecf0 3102 	ldfe	f3, [r0], #8
100052d0:	ecf0 4102 	ldfe	f4, [r0], #8
100052d4:	ecf0 5102 	ldfe	f5, [r0], #8
100052d8:	ecf0 6102 	ldfe	f6, [r0], #8
100052dc:	ecf0 7102 	ldfe	f7, [r0], #8
100052e0:	ecf0 8102 	ldfp	f0, [r0], #8
100052e4:	ecf0 9102 	ldfp	f1, [r0], #8
100052e8:	ecf0 a102 	ldfp	f2, [r0], #8
100052ec:	ecf0 b102 	ldfp	f3, [r0], #8
100052f0:	ecf0 c102 	ldfp	f4, [r0], #8
100052f4:	ecf0 d102 	ldfp	f5, [r0], #8
100052f8:	ecf0 e102 	ldfp	f6, [r0], #8
100052fc:	ecf0 f102 	ldfp	f7, [r0], #8
10005300:	4770      	bx	lr
10005302:	bf00      	nop

10005304 <__gnu_Unwind_Save_WMMXD>:
10005304:	ece0 0102 	stfe	f0, [r0], #8
10005308:	ece0 1102 	stfe	f1, [r0], #8
1000530c:	ece0 2102 	stfe	f2, [r0], #8
10005310:	ece0 3102 	stfe	f3, [r0], #8
10005314:	ece0 4102 	stfe	f4, [r0], #8
10005318:	ece0 5102 	stfe	f5, [r0], #8
1000531c:	ece0 6102 	stfe	f6, [r0], #8
10005320:	ece0 7102 	stfe	f7, [r0], #8
10005324:	ece0 8102 	stfp	f0, [r0], #8
10005328:	ece0 9102 	stfp	f1, [r0], #8
1000532c:	ece0 a102 	stfp	f2, [r0], #8
10005330:	ece0 b102 	stfp	f3, [r0], #8
10005334:	ece0 c102 	stfp	f4, [r0], #8
10005338:	ece0 d102 	stfp	f5, [r0], #8
1000533c:	ece0 e102 	stfp	f6, [r0], #8
10005340:	ece0 f102 	stfp	f7, [r0], #8
10005344:	4770      	bx	lr
10005346:	bf00      	nop

10005348 <__gnu_Unwind_Restore_WMMXC>:
10005348:	fcb0 8101 	ldc2	1, cr8, [r0], #4
1000534c:	fcb0 9101 	ldc2	1, cr9, [r0], #4
10005350:	fcb0 a101 	ldc2	1, cr10, [r0], #4
10005354:	fcb0 b101 	ldc2	1, cr11, [r0], #4
10005358:	4770      	bx	lr
1000535a:	bf00      	nop

1000535c <__gnu_Unwind_Save_WMMXC>:
1000535c:	fca0 8101 	stc2	1, cr8, [r0], #4
10005360:	fca0 9101 	stc2	1, cr9, [r0], #4
10005364:	fca0 a101 	stc2	1, cr10, [r0], #4
10005368:	fca0 b101 	stc2	1, cr11, [r0], #4
1000536c:	4770      	bx	lr
1000536e:	bf00      	nop

10005370 <_Unwind_RaiseException>:
10005370:	46ec      	mov	ip, sp
10005372:	b500      	push	{lr}
10005374:	e92d 5000 	stmdb	sp!, {ip, lr}
10005378:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
1000537c:	f04f 0300 	mov.w	r3, #0
10005380:	e92d 000c 	stmdb	sp!, {r2, r3}
10005384:	a901      	add	r1, sp, #4
10005386:	f7ff fbb7 	bl	10004af8 <__gnu_Unwind_RaiseException>
1000538a:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
1000538e:	b012      	add	sp, #72	; 0x48
10005390:	4770      	bx	lr
10005392:	bf00      	nop

10005394 <_Unwind_Resume>:
10005394:	46ec      	mov	ip, sp
10005396:	b500      	push	{lr}
10005398:	e92d 5000 	stmdb	sp!, {ip, lr}
1000539c:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
100053a0:	f04f 0300 	mov.w	r3, #0
100053a4:	e92d 000c 	stmdb	sp!, {r2, r3}
100053a8:	a901      	add	r1, sp, #4
100053aa:	f7ff fbe3 	bl	10004b74 <__gnu_Unwind_Resume>
100053ae:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
100053b2:	b012      	add	sp, #72	; 0x48
100053b4:	4770      	bx	lr
100053b6:	bf00      	nop

100053b8 <_Unwind_Resume_or_Rethrow>:
100053b8:	46ec      	mov	ip, sp
100053ba:	b500      	push	{lr}
100053bc:	e92d 5000 	stmdb	sp!, {ip, lr}
100053c0:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
100053c4:	f04f 0300 	mov.w	r3, #0
100053c8:	e92d 000c 	stmdb	sp!, {r2, r3}
100053cc:	a901      	add	r1, sp, #4
100053ce:	f7ff fbf3 	bl	10004bb8 <__gnu_Unwind_Resume_or_Rethrow>
100053d2:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
100053d6:	b012      	add	sp, #72	; 0x48
100053d8:	4770      	bx	lr
100053da:	bf00      	nop

100053dc <_Unwind_ForcedUnwind>:
100053dc:	46ec      	mov	ip, sp
100053de:	b500      	push	{lr}
100053e0:	e92d 5000 	stmdb	sp!, {ip, lr}
100053e4:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
100053e8:	f04f 0300 	mov.w	r3, #0
100053ec:	e92d 000c 	stmdb	sp!, {r2, r3}
100053f0:	ab01      	add	r3, sp, #4
100053f2:	f7ff fbb5 	bl	10004b60 <__gnu_Unwind_ForcedUnwind>
100053f6:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
100053fa:	b012      	add	sp, #72	; 0x48
100053fc:	4770      	bx	lr
100053fe:	bf00      	nop

10005400 <_Unwind_Backtrace>:
10005400:	46ec      	mov	ip, sp
10005402:	b500      	push	{lr}
10005404:	e92d 5000 	stmdb	sp!, {ip, lr}
10005408:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
1000540c:	f04f 0300 	mov.w	r3, #0
10005410:	e92d 000c 	stmdb	sp!, {r2, r3}
10005414:	aa01      	add	r2, sp, #4
10005416:	f7ff fc2d 	bl	10004c74 <__gnu_Unwind_Backtrace>
1000541a:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
1000541e:	b012      	add	sp, #72	; 0x48
10005420:	4770      	bx	lr
10005422:	bf00      	nop

10005424 <next_unwind_byte>:
10005424:	7a02      	ldrb	r2, [r0, #8]
10005426:	4603      	mov	r3, r0
10005428:	b98a      	cbnz	r2, 1000544e <next_unwind_byte+0x2a>
1000542a:	7a42      	ldrb	r2, [r0, #9]
1000542c:	b1b2      	cbz	r2, 1000545c <next_unwind_byte+0x38>
1000542e:	6841      	ldr	r1, [r0, #4]
10005430:	3a01      	subs	r2, #1
10005432:	f04f 0c03 	mov.w	ip, #3
10005436:	b410      	push	{r4}
10005438:	7242      	strb	r2, [r0, #9]
1000543a:	1d0c      	adds	r4, r1, #4
1000543c:	6808      	ldr	r0, [r1, #0]
1000543e:	f883 c008 	strb.w	ip, [r3, #8]
10005442:	0202      	lsls	r2, r0, #8
10005444:	605c      	str	r4, [r3, #4]
10005446:	0e00      	lsrs	r0, r0, #24
10005448:	bc10      	pop	{r4}
1000544a:	601a      	str	r2, [r3, #0]
1000544c:	4770      	bx	lr
1000544e:	6800      	ldr	r0, [r0, #0]
10005450:	3a01      	subs	r2, #1
10005452:	721a      	strb	r2, [r3, #8]
10005454:	0202      	lsls	r2, r0, #8
10005456:	0e00      	lsrs	r0, r0, #24
10005458:	601a      	str	r2, [r3, #0]
1000545a:	4770      	bx	lr
1000545c:	20b0      	movs	r0, #176	; 0xb0
1000545e:	4770      	bx	lr

10005460 <_Unwind_GetGR.constprop.0>:
10005460:	b510      	push	{r4, lr}
10005462:	b084      	sub	sp, #16
10005464:	2300      	movs	r3, #0
10005466:	220c      	movs	r2, #12
10005468:	ac03      	add	r4, sp, #12
1000546a:	4619      	mov	r1, r3
1000546c:	9400      	str	r4, [sp, #0]
1000546e:	f7ff fbb5 	bl	10004bdc <_Unwind_VRS_Get>
10005472:	9803      	ldr	r0, [sp, #12]
10005474:	b004      	add	sp, #16
10005476:	bd10      	pop	{r4, pc}

10005478 <unwind_UCB_from_context>:
10005478:	e7f2      	b.n	10005460 <_Unwind_GetGR.constprop.0>
1000547a:	bf00      	nop

1000547c <__gnu_unwind_execute>:
1000547c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
10005480:	f04f 0800 	mov.w	r8, #0
10005484:	b085      	sub	sp, #20
10005486:	4606      	mov	r6, r0
10005488:	460d      	mov	r5, r1
1000548a:	4628      	mov	r0, r5
1000548c:	f7ff ffca 	bl	10005424 <next_unwind_byte>
10005490:	28b0      	cmp	r0, #176	; 0xb0
10005492:	4604      	mov	r4, r0
10005494:	f000 80bc 	beq.w	10005610 <__gnu_unwind_execute+0x194>
10005498:	0607      	lsls	r7, r0, #24
1000549a:	d520      	bpl.n	100054de <__gnu_unwind_execute+0x62>
1000549c:	f000 03f0 	and.w	r3, r0, #240	; 0xf0
100054a0:	2b80      	cmp	r3, #128	; 0x80
100054a2:	d04e      	beq.n	10005542 <__gnu_unwind_execute+0xc6>
100054a4:	2b90      	cmp	r3, #144	; 0x90
100054a6:	d037      	beq.n	10005518 <__gnu_unwind_execute+0x9c>
100054a8:	2ba0      	cmp	r3, #160	; 0xa0
100054aa:	d061      	beq.n	10005570 <__gnu_unwind_execute+0xf4>
100054ac:	2bb0      	cmp	r3, #176	; 0xb0
100054ae:	d076      	beq.n	1000559e <__gnu_unwind_execute+0x122>
100054b0:	2bc0      	cmp	r3, #192	; 0xc0
100054b2:	f000 808d 	beq.w	100055d0 <__gnu_unwind_execute+0x154>
100054b6:	f000 03f8 	and.w	r3, r0, #248	; 0xf8
100054ba:	2bd0      	cmp	r3, #208	; 0xd0
100054bc:	d10b      	bne.n	100054d6 <__gnu_unwind_execute+0x5a>
100054be:	f000 0207 	and.w	r2, r0, #7
100054c2:	2305      	movs	r3, #5
100054c4:	2101      	movs	r1, #1
100054c6:	4630      	mov	r0, r6
100054c8:	3201      	adds	r2, #1
100054ca:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
100054ce:	f7ff fd79 	bl	10004fc4 <_Unwind_VRS_Pop>
100054d2:	2800      	cmp	r0, #0
100054d4:	d0d9      	beq.n	1000548a <__gnu_unwind_execute+0xe>
100054d6:	2009      	movs	r0, #9
100054d8:	b005      	add	sp, #20
100054da:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
100054de:	0083      	lsls	r3, r0, #2
100054e0:	f10d 090c 	add.w	r9, sp, #12
100054e4:	220d      	movs	r2, #13
100054e6:	4630      	mov	r0, r6
100054e8:	b2db      	uxtb	r3, r3
100054ea:	f8cd 9000 	str.w	r9, [sp]
100054ee:	1d1f      	adds	r7, r3, #4
100054f0:	2300      	movs	r3, #0
100054f2:	4619      	mov	r1, r3
100054f4:	f7ff fb72 	bl	10004bdc <_Unwind_VRS_Get>
100054f8:	9b03      	ldr	r3, [sp, #12]
100054fa:	0660      	lsls	r0, r4, #25
100054fc:	f04f 020d 	mov.w	r2, #13
10005500:	4630      	mov	r0, r6
10005502:	f8cd 9000 	str.w	r9, [sp]
10005506:	bf4c      	ite	mi
10005508:	1bdf      	submi	r7, r3, r7
1000550a:	18ff      	addpl	r7, r7, r3
1000550c:	2300      	movs	r3, #0
1000550e:	9703      	str	r7, [sp, #12]
10005510:	4619      	mov	r1, r3
10005512:	f7ff fb89 	bl	10004c28 <_Unwind_VRS_Set>
10005516:	e7b8      	b.n	1000548a <__gnu_unwind_execute+0xe>
10005518:	f000 030d 	and.w	r3, r0, #13
1000551c:	2b0d      	cmp	r3, #13
1000551e:	d0da      	beq.n	100054d6 <__gnu_unwind_execute+0x5a>
10005520:	af03      	add	r7, sp, #12
10005522:	2300      	movs	r3, #0
10005524:	f000 020f 	and.w	r2, r0, #15
10005528:	4630      	mov	r0, r6
1000552a:	4619      	mov	r1, r3
1000552c:	9700      	str	r7, [sp, #0]
1000552e:	f7ff fb55 	bl	10004bdc <_Unwind_VRS_Get>
10005532:	2300      	movs	r3, #0
10005534:	220d      	movs	r2, #13
10005536:	4630      	mov	r0, r6
10005538:	4619      	mov	r1, r3
1000553a:	9700      	str	r7, [sp, #0]
1000553c:	f7ff fb74 	bl	10004c28 <_Unwind_VRS_Set>
10005540:	e7a3      	b.n	1000548a <__gnu_unwind_execute+0xe>
10005542:	0224      	lsls	r4, r4, #8
10005544:	4628      	mov	r0, r5
10005546:	f7ff ff6d 	bl	10005424 <next_unwind_byte>
1000554a:	4320      	orrs	r0, r4
1000554c:	f5b0 4f00 	cmp.w	r0, #32768	; 0x8000
10005550:	d0c1      	beq.n	100054d6 <__gnu_unwind_execute+0x5a>
10005552:	0104      	lsls	r4, r0, #4
10005554:	2300      	movs	r3, #0
10005556:	4630      	mov	r0, r6
10005558:	b2a2      	uxth	r2, r4
1000555a:	4619      	mov	r1, r3
1000555c:	f7ff fd32 	bl	10004fc4 <_Unwind_VRS_Pop>
10005560:	2800      	cmp	r0, #0
10005562:	d1b8      	bne.n	100054d6 <__gnu_unwind_execute+0x5a>
10005564:	f414 4f00 	tst.w	r4, #32768	; 0x8000
10005568:	bf18      	it	ne
1000556a:	f04f 0801 	movne.w	r8, #1
1000556e:	e78c      	b.n	1000548a <__gnu_unwind_execute+0xe>
10005570:	43c2      	mvns	r2, r0
10005572:	0701      	lsls	r1, r0, #28
10005574:	4630      	mov	r0, r6
10005576:	f002 0307 	and.w	r3, r2, #7
1000557a:	f44f 627f 	mov.w	r2, #4080	; 0xff0
1000557e:	fa42 f203 	asr.w	r2, r2, r3
10005582:	f04f 0300 	mov.w	r3, #0
10005586:	f402 627f 	and.w	r2, r2, #4080	; 0xff0
1000558a:	4619      	mov	r1, r3
1000558c:	bf48      	it	mi
1000558e:	f442 4280 	orrmi.w	r2, r2, #16384	; 0x4000
10005592:	f7ff fd17 	bl	10004fc4 <_Unwind_VRS_Pop>
10005596:	2800      	cmp	r0, #0
10005598:	f43f af77 	beq.w	1000548a <__gnu_unwind_execute+0xe>
1000559c:	e79b      	b.n	100054d6 <__gnu_unwind_execute+0x5a>
1000559e:	28b1      	cmp	r0, #177	; 0xb1
100055a0:	d03b      	beq.n	1000561a <__gnu_unwind_execute+0x19e>
100055a2:	28b2      	cmp	r0, #178	; 0xb2
100055a4:	f000 80a1 	beq.w	100056ea <__gnu_unwind_execute+0x26e>
100055a8:	28b3      	cmp	r0, #179	; 0xb3
100055aa:	d041      	beq.n	10005630 <__gnu_unwind_execute+0x1b4>
100055ac:	f000 03fc 	and.w	r3, r0, #252	; 0xfc
100055b0:	2bb4      	cmp	r3, #180	; 0xb4
100055b2:	d090      	beq.n	100054d6 <__gnu_unwind_execute+0x5a>
100055b4:	f000 0207 	and.w	r2, r0, #7
100055b8:	2301      	movs	r3, #1
100055ba:	441a      	add	r2, r3
100055bc:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
100055c0:	4619      	mov	r1, r3
100055c2:	4630      	mov	r0, r6
100055c4:	f7ff fcfe 	bl	10004fc4 <_Unwind_VRS_Pop>
100055c8:	2800      	cmp	r0, #0
100055ca:	f43f af5e 	beq.w	1000548a <__gnu_unwind_execute+0xe>
100055ce:	e782      	b.n	100054d6 <__gnu_unwind_execute+0x5a>
100055d0:	28c6      	cmp	r0, #198	; 0xc6
100055d2:	d051      	beq.n	10005678 <__gnu_unwind_execute+0x1fc>
100055d4:	28c7      	cmp	r0, #199	; 0xc7
100055d6:	d062      	beq.n	1000569e <__gnu_unwind_execute+0x222>
100055d8:	f000 03f8 	and.w	r3, r0, #248	; 0xf8
100055dc:	2bc0      	cmp	r3, #192	; 0xc0
100055de:	d071      	beq.n	100056c4 <__gnu_unwind_execute+0x248>
100055e0:	28c8      	cmp	r0, #200	; 0xc8
100055e2:	d076      	beq.n	100056d2 <__gnu_unwind_execute+0x256>
100055e4:	28c9      	cmp	r0, #201	; 0xc9
100055e6:	f47f af76 	bne.w	100054d6 <__gnu_unwind_execute+0x5a>
100055ea:	4628      	mov	r0, r5
100055ec:	f7ff ff1a 	bl	10005424 <next_unwind_byte>
100055f0:	0302      	lsls	r2, r0, #12
100055f2:	f000 000f 	and.w	r0, r0, #15
100055f6:	f402 2270 	and.w	r2, r2, #983040	; 0xf0000
100055fa:	3001      	adds	r0, #1
100055fc:	4302      	orrs	r2, r0
100055fe:	2101      	movs	r1, #1
10005600:	2305      	movs	r3, #5
10005602:	4630      	mov	r0, r6
10005604:	f7ff fcde 	bl	10004fc4 <_Unwind_VRS_Pop>
10005608:	2800      	cmp	r0, #0
1000560a:	f43f af3e 	beq.w	1000548a <__gnu_unwind_execute+0xe>
1000560e:	e762      	b.n	100054d6 <__gnu_unwind_execute+0x5a>
10005610:	f1b8 0f00 	cmp.w	r8, #0
10005614:	d01f      	beq.n	10005656 <__gnu_unwind_execute+0x1da>
10005616:	2000      	movs	r0, #0
10005618:	e75e      	b.n	100054d8 <__gnu_unwind_execute+0x5c>
1000561a:	4628      	mov	r0, r5
1000561c:	f7ff ff02 	bl	10005424 <next_unwind_byte>
10005620:	4602      	mov	r2, r0
10005622:	2800      	cmp	r0, #0
10005624:	f43f af57 	beq.w	100054d6 <__gnu_unwind_execute+0x5a>
10005628:	f010 03f0 	ands.w	r3, r0, #240	; 0xf0
1000562c:	d0c8      	beq.n	100055c0 <__gnu_unwind_execute+0x144>
1000562e:	e752      	b.n	100054d6 <__gnu_unwind_execute+0x5a>
10005630:	4628      	mov	r0, r5
10005632:	f7ff fef7 	bl	10005424 <next_unwind_byte>
10005636:	f000 030f 	and.w	r3, r0, #15
1000563a:	0302      	lsls	r2, r0, #12
1000563c:	4630      	mov	r0, r6
1000563e:	3301      	adds	r3, #1
10005640:	f402 2270 	and.w	r2, r2, #983040	; 0xf0000
10005644:	431a      	orrs	r2, r3
10005646:	2301      	movs	r3, #1
10005648:	4619      	mov	r1, r3
1000564a:	f7ff fcbb 	bl	10004fc4 <_Unwind_VRS_Pop>
1000564e:	2800      	cmp	r0, #0
10005650:	f43f af1b 	beq.w	1000548a <__gnu_unwind_execute+0xe>
10005654:	e73f      	b.n	100054d6 <__gnu_unwind_execute+0x5a>
10005656:	ac03      	add	r4, sp, #12
10005658:	4643      	mov	r3, r8
1000565a:	220e      	movs	r2, #14
1000565c:	4641      	mov	r1, r8
1000565e:	4630      	mov	r0, r6
10005660:	9400      	str	r4, [sp, #0]
10005662:	f7ff fabb 	bl	10004bdc <_Unwind_VRS_Get>
10005666:	4643      	mov	r3, r8
10005668:	220f      	movs	r2, #15
1000566a:	4630      	mov	r0, r6
1000566c:	4641      	mov	r1, r8
1000566e:	9400      	str	r4, [sp, #0]
10005670:	f7ff fada 	bl	10004c28 <_Unwind_VRS_Set>
10005674:	4640      	mov	r0, r8
10005676:	e72f      	b.n	100054d8 <__gnu_unwind_execute+0x5c>
10005678:	4628      	mov	r0, r5
1000567a:	f7ff fed3 	bl	10005424 <next_unwind_byte>
1000567e:	f000 030f 	and.w	r3, r0, #15
10005682:	0302      	lsls	r2, r0, #12
10005684:	4630      	mov	r0, r6
10005686:	3301      	adds	r3, #1
10005688:	f402 2270 	and.w	r2, r2, #983040	; 0xf0000
1000568c:	431a      	orrs	r2, r3
1000568e:	2303      	movs	r3, #3
10005690:	4619      	mov	r1, r3
10005692:	f7ff fc97 	bl	10004fc4 <_Unwind_VRS_Pop>
10005696:	2800      	cmp	r0, #0
10005698:	f43f aef7 	beq.w	1000548a <__gnu_unwind_execute+0xe>
1000569c:	e71b      	b.n	100054d6 <__gnu_unwind_execute+0x5a>
1000569e:	4628      	mov	r0, r5
100056a0:	f7ff fec0 	bl	10005424 <next_unwind_byte>
100056a4:	4602      	mov	r2, r0
100056a6:	2800      	cmp	r0, #0
100056a8:	f43f af15 	beq.w	100054d6 <__gnu_unwind_execute+0x5a>
100056ac:	f010 03f0 	ands.w	r3, r0, #240	; 0xf0
100056b0:	f47f af11 	bne.w	100054d6 <__gnu_unwind_execute+0x5a>
100056b4:	2104      	movs	r1, #4
100056b6:	4630      	mov	r0, r6
100056b8:	f7ff fc84 	bl	10004fc4 <_Unwind_VRS_Pop>
100056bc:	2800      	cmp	r0, #0
100056be:	f43f aee4 	beq.w	1000548a <__gnu_unwind_execute+0xe>
100056c2:	e708      	b.n	100054d6 <__gnu_unwind_execute+0x5a>
100056c4:	f000 020f 	and.w	r2, r0, #15
100056c8:	2303      	movs	r3, #3
100056ca:	3201      	adds	r2, #1
100056cc:	f442 2220 	orr.w	r2, r2, #655360	; 0xa0000
100056d0:	e776      	b.n	100055c0 <__gnu_unwind_execute+0x144>
100056d2:	4628      	mov	r0, r5
100056d4:	f7ff fea6 	bl	10005424 <next_unwind_byte>
100056d8:	f000 02f0 	and.w	r2, r0, #240	; 0xf0
100056dc:	f000 030f 	and.w	r3, r0, #15
100056e0:	3210      	adds	r2, #16
100056e2:	3301      	adds	r3, #1
100056e4:	ea43 3202 	orr.w	r2, r3, r2, lsl #12
100056e8:	e789      	b.n	100055fe <__gnu_unwind_execute+0x182>
100056ea:	2300      	movs	r3, #0
100056ec:	f10d 090c 	add.w	r9, sp, #12
100056f0:	220d      	movs	r2, #13
100056f2:	4630      	mov	r0, r6
100056f4:	4619      	mov	r1, r3
100056f6:	f8cd 9000 	str.w	r9, [sp]
100056fa:	f7ff fa6f 	bl	10004bdc <_Unwind_VRS_Get>
100056fe:	4628      	mov	r0, r5
10005700:	f7ff fe90 	bl	10005424 <next_unwind_byte>
10005704:	0602      	lsls	r2, r0, #24
10005706:	f04f 0402 	mov.w	r4, #2
1000570a:	d50b      	bpl.n	10005724 <__gnu_unwind_execute+0x2a8>
1000570c:	f000 007f 	and.w	r0, r0, #127	; 0x7f
10005710:	9b03      	ldr	r3, [sp, #12]
10005712:	40a0      	lsls	r0, r4
10005714:	3407      	adds	r4, #7
10005716:	4418      	add	r0, r3
10005718:	9003      	str	r0, [sp, #12]
1000571a:	4628      	mov	r0, r5
1000571c:	f7ff fe82 	bl	10005424 <next_unwind_byte>
10005720:	0603      	lsls	r3, r0, #24
10005722:	d4f3      	bmi.n	1000570c <__gnu_unwind_execute+0x290>
10005724:	9b03      	ldr	r3, [sp, #12]
10005726:	f000 027f 	and.w	r2, r0, #127	; 0x7f
1000572a:	f8cd 9000 	str.w	r9, [sp]
1000572e:	4630      	mov	r0, r6
10005730:	40a2      	lsls	r2, r4
10005732:	f503 7301 	add.w	r3, r3, #516	; 0x204
10005736:	441a      	add	r2, r3
10005738:	2300      	movs	r3, #0
1000573a:	9203      	str	r2, [sp, #12]
1000573c:	4619      	mov	r1, r3
1000573e:	220d      	movs	r2, #13
10005740:	f7ff fa72 	bl	10004c28 <_Unwind_VRS_Set>
10005744:	e6a1      	b.n	1000548a <__gnu_unwind_execute+0xe>
10005746:	bf00      	nop

10005748 <__gnu_unwind_frame>:
10005748:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
1000574a:	460b      	mov	r3, r1
1000574c:	f04f 0c03 	mov.w	ip, #3
10005750:	4618      	mov	r0, r3
10005752:	3208      	adds	r2, #8
10005754:	f852 3c04 	ldr.w	r3, [r2, #-4]
10005758:	b500      	push	{lr}
1000575a:	b085      	sub	sp, #20
1000575c:	9202      	str	r2, [sp, #8]
1000575e:	a901      	add	r1, sp, #4
10005760:	0e1a      	lsrs	r2, r3, #24
10005762:	f88d c00c 	strb.w	ip, [sp, #12]
10005766:	021b      	lsls	r3, r3, #8
10005768:	f88d 200d 	strb.w	r2, [sp, #13]
1000576c:	9301      	str	r3, [sp, #4]
1000576e:	f7ff fe85 	bl	1000547c <__gnu_unwind_execute>
10005772:	b005      	add	sp, #20
10005774:	f85d fb04 	ldr.w	pc, [sp], #4

10005778 <_Unwind_GetRegionStart>:
10005778:	b508      	push	{r3, lr}
1000577a:	f7ff fe7d 	bl	10005478 <unwind_UCB_from_context>
1000577e:	6c80      	ldr	r0, [r0, #72]	; 0x48
10005780:	bd08      	pop	{r3, pc}
10005782:	bf00      	nop

10005784 <_Unwind_GetLanguageSpecificData>:
10005784:	b508      	push	{r3, lr}
10005786:	f7ff fe77 	bl	10005478 <unwind_UCB_from_context>
1000578a:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
1000578c:	79c3      	ldrb	r3, [r0, #7]
1000578e:	3302      	adds	r3, #2
10005790:	eb00 0083 	add.w	r0, r0, r3, lsl #2
10005794:	bd08      	pop	{r3, pc}
10005796:	bf00      	nop

10005798 <__aeabi_idiv0>:
10005798:	4770      	bx	lr
1000579a:	bf00      	nop

1000579c <abort>:
1000579c:	2006      	movs	r0, #6
1000579e:	b508      	push	{r3, lr}
100057a0:	f000 f804 	bl	100057ac <raise>
100057a4:	2001      	movs	r0, #1
100057a6:	f7fe f877 	bl	10003898 <_exit>
100057aa:	bf00      	nop

100057ac <raise>:
100057ac:	b538      	push	{r3, r4, r5, lr}
100057ae:	281f      	cmp	r0, #31
100057b0:	4b14      	ldr	r3, [pc, #80]	; (10005804 <raise+0x58>)
100057b2:	681d      	ldr	r5, [r3, #0]
100057b4:	d820      	bhi.n	100057f8 <raise+0x4c>
100057b6:	f8d5 22dc 	ldr.w	r2, [r5, #732]	; 0x2dc
100057ba:	4604      	mov	r4, r0
100057bc:	b162      	cbz	r2, 100057d8 <raise+0x2c>
100057be:	f852 3020 	ldr.w	r3, [r2, r0, lsl #2]
100057c2:	b14b      	cbz	r3, 100057d8 <raise+0x2c>
100057c4:	2b01      	cmp	r3, #1
100057c6:	d015      	beq.n	100057f4 <raise+0x48>
100057c8:	1c59      	adds	r1, r3, #1
100057ca:	d00f      	beq.n	100057ec <raise+0x40>
100057cc:	2500      	movs	r5, #0
100057ce:	f842 5020 	str.w	r5, [r2, r0, lsl #2]
100057d2:	4798      	blx	r3
100057d4:	4628      	mov	r0, r5
100057d6:	bd38      	pop	{r3, r4, r5, pc}
100057d8:	4628      	mov	r0, r5
100057da:	f000 f82b 	bl	10005834 <_getpid_r>
100057de:	4622      	mov	r2, r4
100057e0:	4601      	mov	r1, r0
100057e2:	4628      	mov	r0, r5
100057e4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
100057e8:	f000 b80e 	b.w	10005808 <_kill_r>
100057ec:	2316      	movs	r3, #22
100057ee:	2001      	movs	r0, #1
100057f0:	602b      	str	r3, [r5, #0]
100057f2:	bd38      	pop	{r3, r4, r5, pc}
100057f4:	2000      	movs	r0, #0
100057f6:	bd38      	pop	{r3, r4, r5, pc}
100057f8:	2316      	movs	r3, #22
100057fa:	f04f 30ff 	mov.w	r0, #4294967295
100057fe:	602b      	str	r3, [r5, #0]
10005800:	bd38      	pop	{r3, r4, r5, pc}
10005802:	bf00      	nop
10005804:	38000014 	stmdacc	r0, {r2, r4}

10005808 <_kill_r>:
10005808:	b570      	push	{r4, r5, r6, lr}
1000580a:	460c      	mov	r4, r1
1000580c:	4603      	mov	r3, r0
1000580e:	4d08      	ldr	r5, [pc, #32]	; (10005830 <_kill_r+0x28>)
10005810:	2600      	movs	r6, #0
10005812:	4620      	mov	r0, r4
10005814:	4611      	mov	r1, r2
10005816:	461c      	mov	r4, r3
10005818:	602e      	str	r6, [r5, #0]
1000581a:	f7fe f835 	bl	10003888 <_kill>
1000581e:	1c43      	adds	r3, r0, #1
10005820:	d000      	beq.n	10005824 <_kill_r+0x1c>
10005822:	bd70      	pop	{r4, r5, r6, pc}
10005824:	682b      	ldr	r3, [r5, #0]
10005826:	2b00      	cmp	r3, #0
10005828:	d0fb      	beq.n	10005822 <_kill_r+0x1a>
1000582a:	6023      	str	r3, [r4, #0]
1000582c:	bd70      	pop	{r4, r5, r6, pc}
1000582e:	bf00      	nop
10005830:	38008d18 	stmdacc	r0, {r3, r4, r8, sl, fp, pc}

10005834 <_getpid_r>:
10005834:	f7fe b826 	b.w	10003884 <_getpid>

10005838 <_init>:
10005838:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1000583a:	bf00      	nop
1000583c:	bcf8      	pop	{r3, r4, r5, r6, r7}
1000583e:	bc08      	pop	{r3}
10005840:	469e      	mov	lr, r3
10005842:	4770      	bx	lr

10005844 <_fini>:
10005844:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10005846:	bf00      	nop
10005848:	bcf8      	pop	{r3, r4, r5, r6, r7}
1000584a:	bc08      	pop	{r3}
1000584c:	469e      	mov	lr, r3
1000584e:	4770      	bx	lr
10005850:	6e69616d 	powvsez	f6, f1, #5.0
10005854:	7361745f 	cmnvc	r1, #1593835520	; 0x5f000000
10005858:	0000006b 	andeq	r0, r0, fp, rrx
1000585c:	6e69616d 	powvsez	f6, f1, #5.0
10005860:	73617420 	cmnvc	r1, #32, 8	; 0x20000000
10005864:	7263206b 	rsbvc	r2, r3, #107	; 0x6b
10005868:	65746165 	ldrbvs	r6, [r4, #-357]!	; 0xfffffe9b
1000586c:	69616620 	stmdbvs	r1!, {r5, r9, sl, sp, lr}^
10005870:	2864656c 	stmdacs	r4!, {r2, r3, r5, r6, r8, sl, sp, lr}^
10005874:	2e296425 	cdpcs	4, 2, cr6, cr9, cr5, {1}
10005878:	00000a0d 	andeq	r0, r0, sp, lsl #20
1000587c:	6c6c6143 	stfvse	f6, [ip], #-268	; 0xfffffef4
10005880:	63617453 	cmnvs	r1, #1392508928	; 0x53000000
10005884:	7564206b 	strbvc	r2, [r4, #-107]!	; 0xffffff95
10005888:	6520706d 	strvs	r7, [r0, #-109]!	; 0xffffff93
1000588c:	726f7272 	rsbvc	r7, pc, #536870919	; 0x20000007
10005890:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
10005894:	00000a0d 	andeq	r0, r0, sp, lsl #20
10005898:	6c6c6143 	stfvse	f6, [ip], #-268	; 0xfffffef4
1000589c:	63617453 	cmnvs	r1, #1392508928	; 0x53000000
100058a0:	205b3a6b 	subscs	r3, fp, fp, ror #20
100058a4:	00000000 	andeq	r0, r0, r0
100058a8:	58383025 	ldmdapl	r8!, {r0, r2, r5, ip, sp}
100058ac:	00000020 	andeq	r0, r0, r0, lsr #32
100058b0:	000d205d 	andeq	r2, sp, sp, asr r0
100058b4:	73696874 	cmnvc	r9, #116, 16	; 0x740000
100058b8:	20736920 	rsbscs	r6, r3, r0, lsr #18
100058bc:	0d2e7325 	stceq	3, cr7, [lr, #-148]!	; 0xffffff6c
100058c0:	0000000a 	andeq	r0, r0, sl
100058c4:	6c6c6568 	cfstr64vs	mvdx6, [ip], #-416	; 0xfffffe60
100058c8:	6874206f 	ldmdavs	r4!, {r0, r1, r2, r3, r5, r6, sp}^
100058cc:	69207369 	stmdbvs	r0!, {r0, r3, r5, r6, r8, r9, ip, sp, lr}
100058d0:	72462073 	subvc	r2, r6, #115	; 0x73
100058d4:	54526565 	ldrbpl	r6, [r2], #-1381	; 0xfffffa9b
100058d8:	0d2e534f 	stceq	3, cr5, [lr, #-316]!	; 0xfffffec4
100058dc:	00000000 	andeq	r0, r0, r0
100058e0:	72617453 	rsbvc	r7, r1, #1392508928	; 0x53000000
100058e4:	00000d74 	andeq	r0, r0, r4, ror sp
100058e8:	6c6c6568 	cfstr64vs	mvdx6, [ip], #-416	; 0xfffffe60
100058ec:	6f77206f 	svcvs	0x0077206f
100058f0:	20646c72 	rsbcs	r6, r4, r2, ror ip
100058f4:	6425202d 	strtvs	r2, [r5], #-45	; 0xffffffd3
100058f8:	000a0d2e 	andeq	r0, sl, lr, lsr #26

100058fc <__func__.1>:
100058fc:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
10005900:	00000035 	andeq	r0, r0, r5, lsr r0

10005904 <__func__.2>:
10005904:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
10005908:	00000034 	andeq	r0, r0, r4, lsr r0

1000590c <__func__.3>:
1000590c:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
10005910:	00000033 	andeq	r0, r0, r3, lsr r0

10005914 <__func__.4>:
10005914:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
10005918:	00000032 	andeq	r0, r0, r2, lsr r0

1000591c <__func__.5>:
1000591c:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
10005920:	00000031 	andeq	r0, r0, r1, lsr r0

10005924 <__func__.6>:
10005924:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
10005928:	00000030 	andeq	r0, r0, r0, lsr r0
1000592c:	00696e66 	rsbeq	r6, r9, r6, ror #28
10005930:	2b696e66 	blcs	11a612d0 <__copy_table_end__+0x1a5b408>
10005934:	00000000 	andeq	r0, r0, r0
10005938:	006e616e 	rsbeq	r6, lr, lr, ror #2
1000593c:	2d696e66 	stclcs	14, cr6, [r9, #-408]!	; 0xfffffe68
	...

10005948 <pow10.0>:
10005948:	00000000 	andeq	r0, r0, r0
1000594c:	3ff00000 	svccc	0x00f00000	; IMB
10005950:	00000000 	andeq	r0, r0, r0
10005954:	40240000 	eormi	r0, r4, r0
10005958:	00000000 	andeq	r0, r0, r0
1000595c:	40590000 	subsmi	r0, r9, r0
10005960:	00000000 	andeq	r0, r0, r0
10005964:	408f4000 	addmi	r4, pc, r0
10005968:	00000000 	andeq	r0, r0, r0
1000596c:	40c38800 	sbcmi	r8, r3, r0, lsl #16
10005970:	00000000 	andeq	r0, r0, r0
10005974:	40f86a00 	rscsmi	r6, r8, r0, lsl #20
10005978:	00000000 	andeq	r0, r0, r0
1000597c:	412e8480 	smlawbmi	lr, r0, r4, r8
10005980:	00000000 	andeq	r0, r0, r0
10005984:	416312d0 	ldrdmi	r1, [r3, #-32]!	; 0xffffffe0
10005988:	00000000 	andeq	r0, r0, r0
1000598c:	4197d784 	orrsmi	sp, r7, r4, lsl #15
10005990:	00000000 	andeq	r0, r0, r0
10005994:	41cdcd65 	bicmi	ip, sp, r5, ror #26
10005998:	45584520 	ldrbmi	r4, [r8, #-1312]	; 0xfffffae0
1000599c:	5445525f 	strbpl	r5, [r5], #-607	; 0xfffffda1
100059a0:	3a4e5255 	bcc	1139a2fc <__copy_table_end__+0x1394434>
100059a4:	25783020 	ldrbcs	r3, [r8, #-32]!	; 0xffffffe0
100059a8:	20583830 	subscs	r3, r8, r0, lsr r8
100059ac:	00000a0d 	andeq	r0, r0, sp, lsl #20
100059b0:	65646f43 	strbvs	r6, [r4, #-3907]!	; 0xfffff0bd
100059b4:	61745320 	cmnvs	r4, r0, lsr #6
100059b8:	5b3a6b63 	blpl	10ea074c <__copy_table_end__+0xe9a884>
100059bc:	58383025 	ldmdapl	r8!, {r0, r2, r5, ip, sp}
100059c0:	25202d20 	strcs	r2, [r0, #-3360]!	; 0xfffff2e0
100059c4:	5d583830 	ldclpl	8, cr3, [r8, #-192]	; 0xffffff40
100059c8:	6973202c 	ldmdbvs	r3!, {r2, r3, r5, sp}^
100059cc:	253a657a 	ldrcs	r6, [sl, #-1402]!	; 0xfffffa86
100059d0:	000a0d64 	andeq	r0, sl, r4, ror #26
100059d4:	65646f43 	strbvs	r6, [r4, #-3907]!	; 0xfffff0bd
100059d8:	78655420 	stmdavc	r5!, {r5, sl, ip, lr}^
100059dc:	5b3a2074 	blpl	10e8dbb4 <__copy_table_end__+0xe87cec>
100059e0:	58383025 	ldmdapl	r8!, {r0, r2, r5, ip, sp}
100059e4:	25202d20 	strcs	r2, [r0, #-3360]!	; 0xfffff2e0
100059e8:	5d583830 	ldclpl	8, cr3, [r8, #-192]	; 0xffffff40
100059ec:	6973202c 	ldmdbvs	r3!, {r2, r3, r5, sp}^
100059f0:	253a657a 	ldrcs	r6, [sl, #-1402]!	; 0xfffffa86
100059f4:	000a0d64 	andeq	r0, sl, r4, ror #26
100059f8:	65646f43 	strbvs	r6, [r4, #-3907]!	; 0xfffff0bd
100059fc:	61745320 	cmnvs	r4, r0, lsr #6
10005a00:	47206b63 	strmi	r6, [r0, -r3, ror #22]!
10005a04:	74776f72 	ldrbtvc	r6, [r7], #-3954	; 0xfffff08e
10005a08:	6f442068 	svcvs	0x00442068
10005a0c:	61776e77 	cmnvs	r7, r7, ror lr
10005a10:	253a6472 	ldrcs	r6, [sl, #-1138]!	; 0xfffffb8e
10005a14:	000a0d64 	andeq	r0, sl, r4, ror #26
10005a18:	72614820 	rsbvc	r4, r1, #32, 16	; 0x200000
10005a1c:	75614664 	strbvc	r4, [r1, #-1636]!	; 0xfffff99c
10005a20:	4920746c 	stmdbmi	r0!, {r2, r3, r5, r6, sl, ip, sp, lr}
10005a24:	726f666e 	rsbvc	r6, pc, #115343360	; 0x6e00000
10005a28:	6974616d 	ldmdbvs	r4!, {r0, r2, r3, r5, r6, r8, sp, lr}^
10005a2c:	44206e6f 	strtmi	r6, [r0], #-3695	; 0xfffff191
10005a30:	20706d75 	rsbscs	r6, r0, r5, ror sp
10005a34:	0000000d 	andeq	r0, r0, sp
10005a38:	61745320 	cmnvs	r4, r0, lsr #6
10005a3c:	46206b63 	strtmi	r6, [r0], -r3, ror #22
10005a40:	656d6172 	strbvs	r6, [sp, #-370]!	; 0xfffffe8e
10005a44:	0d202020 	stceq	0, cr2, [r0, #-128]!	; 0xffffff80
10005a48:	00000000 	andeq	r0, r0, r0
10005a4c:	20305220 	eorscs	r5, r0, r0, lsr #4
10005a50:	203d2020 	eorscs	r2, sp, r0, lsr #32
10005a54:	30257830 	eorcc	r7, r5, r0, lsr r8
10005a58:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
10005a5c:	0000000a 	andeq	r0, r0, sl
10005a60:	20315220 	eorscs	r5, r1, r0, lsr #4
10005a64:	203d2020 	eorscs	r2, sp, r0, lsr #32
10005a68:	30257830 	eorcc	r7, r5, r0, lsr r8
10005a6c:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
10005a70:	0000000a 	andeq	r0, r0, sl
10005a74:	20325220 	eorscs	r5, r2, r0, lsr #4
10005a78:	203d2020 	eorscs	r2, sp, r0, lsr #32
10005a7c:	30257830 	eorcc	r7, r5, r0, lsr r8
10005a80:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
10005a84:	0000000a 	andeq	r0, r0, sl
10005a88:	20335220 	eorscs	r5, r3, r0, lsr #4
10005a8c:	203d2020 	eorscs	r2, sp, r0, lsr #32
10005a90:	30257830 	eorcc	r7, r5, r0, lsr r8
10005a94:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
10005a98:	0000000a 	andeq	r0, r0, sl
10005a9c:	20345220 	eorscs	r5, r4, r0, lsr #4
10005aa0:	203d2020 	eorscs	r2, sp, r0, lsr #32
10005aa4:	30257830 	eorcc	r7, r5, r0, lsr r8
10005aa8:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
10005aac:	0000000a 	andeq	r0, r0, sl
10005ab0:	20355220 	eorscs	r5, r5, r0, lsr #4
10005ab4:	203d2020 	eorscs	r2, sp, r0, lsr #32
10005ab8:	30257830 	eorcc	r7, r5, r0, lsr r8
10005abc:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
10005ac0:	0000000a 	andeq	r0, r0, sl
10005ac4:	20365220 	eorscs	r5, r6, r0, lsr #4
10005ac8:	203d2020 	eorscs	r2, sp, r0, lsr #32
10005acc:	30257830 	eorcc	r7, r5, r0, lsr r8
10005ad0:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
10005ad4:	0000000a 	andeq	r0, r0, sl
10005ad8:	20375220 	eorscs	r5, r7, r0, lsr #4
10005adc:	203d2020 	eorscs	r2, sp, r0, lsr #32
10005ae0:	30257830 	eorcc	r7, r5, r0, lsr r8
10005ae4:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
10005ae8:	0000000a 	andeq	r0, r0, sl
10005aec:	20385220 	eorscs	r5, r8, r0, lsr #4
10005af0:	203d2020 	eorscs	r2, sp, r0, lsr #32
10005af4:	30257830 	eorcc	r7, r5, r0, lsr r8
10005af8:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
10005afc:	0000000a 	andeq	r0, r0, sl
10005b00:	20395220 	eorscs	r5, r9, r0, lsr #4
10005b04:	203d2020 	eorscs	r2, sp, r0, lsr #32
10005b08:	30257830 	eorcc	r7, r5, r0, lsr r8
10005b0c:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
10005b10:	0000000a 	andeq	r0, r0, sl
10005b14:	30315220 	eorscc	r5, r1, r0, lsr #4
10005b18:	203d2020 	eorscs	r2, sp, r0, lsr #32
10005b1c:	30257830 	eorcc	r7, r5, r0, lsr r8
10005b20:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
10005b24:	0000000a 	andeq	r0, r0, sl
10005b28:	31315220 	teqcc	r1, r0, lsr #4
10005b2c:	203d2020 	eorscs	r2, sp, r0, lsr #32
10005b30:	30257830 	eorcc	r7, r5, r0, lsr r8
10005b34:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
10005b38:	0000000a 	andeq	r0, r0, sl
10005b3c:	32315220 	eorscc	r5, r1, #32, 4
10005b40:	203d2020 	eorscs	r2, sp, r0, lsr #32
10005b44:	30257830 	eorcc	r7, r5, r0, lsr r8
10005b48:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
10005b4c:	0000000a 	andeq	r0, r0, sl
10005b50:	20524c20 	subscs	r4, r2, r0, lsr #24
10005b54:	203d2020 	eorscs	r2, sp, r0, lsr #32
10005b58:	30257830 	eorcc	r7, r5, r0, lsr r8
10005b5c:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
10005b60:	0000000a 	andeq	r0, r0, sl
10005b64:	20435020 	subcs	r5, r3, r0, lsr #32
10005b68:	203d2020 	eorscs	r2, sp, r0, lsr #32
10005b6c:	30257830 	eorcc	r7, r5, r0, lsr r8
10005b70:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
10005b74:	0000000a 	andeq	r0, r0, sl
10005b78:	52535020 	subspl	r5, r3, #32
10005b7c:	203d2020 	eorscs	r2, sp, r0, lsr #32
10005b80:	30257830 	eorcc	r7, r5, r0, lsr r8
10005b84:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
10005b88:	0000000a 	andeq	r0, r0, sl
10005b8c:	61745320 	cmnvs	r4, r0, lsr #6
10005b90:	43206b63 			; <UNDEFINED> instruction: 0x43206b63
10005b94:	3a6c6c61 	bcc	11b20d20 <__copy_table_end__+0x1b1ae58>
10005b98:	00000020 	andeq	r0, r0, r0, lsr #32
10005b9c:	00000d20 	andeq	r0, r0, r0, lsr #26
10005ba0:	74694220 	strbtvc	r4, [r9], #-544	; 0xfffffde0
10005ba4:	78452030 	stmdavc	r5, {r4, r5, sp}^
10005ba8:	74706563 	ldrbtvc	r6, [r0], #-1379	; 0xfffffa9d
10005bac:	63655320 	cmnvs	r5, #32, 6	; 0x80000000
10005bb0:	74697275 	strbtvc	r7, [r9], #-629	; 0xfffffd8b
10005bb4:	74532079 	ldrbvc	r2, [r3], #-121	; 0xffffff87
10005bb8:	3a657461 	bcc	11962d44 <__copy_table_end__+0x195ce7c>
10005bbc:	00000000 	andeq	r0, r0, r0
10005bc0:	6573555b 	ldrbvs	r5, [r3, #-1371]!	; 0xfffffaa5
10005bc4:	63655320 	cmnvs	r5, #32, 6	; 0x80000000
10005bc8:	74697275 	strbtvc	r7, [r9], #-629	; 0xfffffd8b
10005bcc:	74532079 	ldrbvc	r2, [r3], #-121	; 0xffffff87
10005bd0:	2e657461 	cdpcs	4, 6, cr7, cr5, cr1, {3}
10005bd4:	5d2e2e2e 	stcpl	14, cr2, [lr, #-184]!	; 0xffffff48
10005bd8:	00000d2e 	andeq	r0, r0, lr, lsr #26
10005bdc:	6573555b 	ldrbvs	r5, [r3, #-1371]!	; 0xfffffaa5
10005be0:	746f4e20 	strbtvc	r4, [pc], #-3616	; 10005be8 <pow10.0+0x2a0>
10005be4:	63655320 	cmnvs	r5, #32, 6	; 0x80000000
10005be8:	74697275 	strbtvc	r7, [r9], #-629	; 0xfffffd8b
10005bec:	74532079 	ldrbvc	r2, [r3], #-121	; 0xffffff87
10005bf0:	5d657461 	cfstrdpl	mvd7, [r5, #-388]!	; 0xfffffe7c
10005bf4:	00000d2e 	andeq	r0, r0, lr, lsr #26
10005bf8:	74694220 	strbtvc	r4, [r9], #-544	; 0xfffffde0
10005bfc:	74532032 	ldrbvc	r2, [r3], #-50	; 0xffffffce
10005c00:	206b6361 	rsbcs	r6, fp, r1, ror #6
10005c04:	6e696f50 	mcrvs	15, 3, r6, cr9, cr0, {2}
10005c08:	65532074 	ldrbvs	r2, [r3, #-116]	; 0xffffff8c
10005c0c:	7463656c 	strbtvc	r6, [r3], #-1388	; 0xfffffa94
10005c10:	3a2e2e2e 	bcc	10b914d0 <__copy_table_end__+0xb8b608>
10005c14:	00000000 	andeq	r0, r0, r0
10005c18:	6573555b 	ldrbvs	r5, [r3, #-1371]!	; 0xfffffaa5
10005c1c:	50535020 	subspl	r5, r3, r0, lsr #32
10005c20:	2e2e2e2e 	cdpcs	14, 2, cr2, cr14, cr14, {1}
10005c24:	2e2e2e2e 	cdpcs	14, 2, cr2, cr14, cr14, {1}
10005c28:	2e2e2e2e 	cdpcs	14, 2, cr2, cr14, cr14, {1}
10005c2c:	5d2e2e2e 	stcpl	14, cr2, [lr, #-184]!	; 0xffffff48
10005c30:	00000d2e 	andeq	r0, r0, lr, lsr #26
10005c34:	6573555b 	ldrbvs	r5, [r3, #-1371]!	; 0xfffffaa5
10005c38:	50534d20 	subspl	r4, r3, r0, lsr #26
10005c3c:	2e2e2e2e 	cdpcs	14, 2, cr2, cr14, cr14, {1}
10005c40:	2e2e2e2e 	cdpcs	14, 2, cr2, cr14, cr14, {1}
10005c44:	2e2e2e2e 	cdpcs	14, 2, cr2, cr14, cr14, {1}
10005c48:	5d2e2e2e 	stcpl	14, cr2, [lr, #-184]!	; 0xffffff48
10005c4c:	00000d2e 	andeq	r0, r0, lr, lsr #26
10005c50:	74694220 	strbtvc	r4, [r9], #-544	; 0xfffffde0
10005c54:	72502033 	subsvc	r2, r0, #51	; 0x33
10005c58:	4d20636f 	stcmi	3, cr6, [r0, #-444]!	; 0xfffffe44
10005c5c:	2065646f 	rsbcs	r6, r5, pc, ror #8
10005c60:	6f666542 	svcvs	0x00666542
10005c64:	49206572 	stmdbmi	r0!, {r1, r4, r5, r6, r8, sl, sp, lr}
10005c68:	3a2e5152 	bcc	10b9a1b8 <__copy_table_end__+0xb942f0>
10005c6c:	00000000 	andeq	r0, r0, r0
10005c70:	6573555b 	ldrbvs	r5, [r3, #-1371]!	; 0xfffffaa5
10005c74:	72685420 	rsbvc	r5, r8, #32, 8	; 0x20000000
10005c78:	20646165 	rsbcs	r6, r4, r5, ror #2
10005c7c:	65646f4d 	strbvs	r6, [r4, #-3917]!	; 0xfffff0b3
10005c80:	2e2e2e2e 	cdpcs	14, 2, cr2, cr14, cr14, {1}
10005c84:	5d2e2e2e 	stcpl	14, cr2, [lr, #-184]!	; 0xffffff48
10005c88:	00000d2e 	andeq	r0, r0, lr, lsr #26
10005c8c:	6573555b 	ldrbvs	r5, [r3, #-1371]!	; 0xfffffaa5
10005c90:	6f725020 	svcvs	0x00725020
10005c94:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
10005c98:	646f4d20 	strbtvs	r4, [pc], #-3360	; 10005ca0 <pow10.0+0x358>
10005c9c:	2e2e2e65 	cdpcs	14, 2, cr2, cr14, cr5, {3}
10005ca0:	5d2e2e2e 	stcpl	14, cr2, [lr, #-184]!	; 0xffffff48
10005ca4:	00000d2e 	andeq	r0, r0, lr, lsr #26
10005ca8:	74694220 	strbtvc	r4, [r9], #-544	; 0xfffffde0
10005cac:	74532034 	ldrbvc	r2, [r3], #-52	; 0xffffffcc
10005cb0:	206b6361 	rsbcs	r6, fp, r1, ror #6
10005cb4:	6d617246 	sfmvs	f7, 2, [r1, #-280]!	; 0xfffffee8
10005cb8:	79542065 	ldmdbvc	r4, {r0, r2, r5, r6, sp}^
10005cbc:	2e2e6570 	mcrcs	5, 1, r6, cr14, cr0, {3}
10005cc0:	3a2e2e2e 	bcc	10b91580 <__copy_table_end__+0xb8b6b8>
10005cc4:	00000000 	andeq	r0, r0, r0
10005cc8:	6573555b 	ldrbvs	r5, [r3, #-1371]!	; 0xfffffaa5
10005ccc:	61745320 	cmnvs	r4, r0, lsr #6
10005cd0:	7261646e 	rsbvc	r6, r1, #1845493760	; 0x6e000000
10005cd4:	72462064 	subvc	r2, r6, #100	; 0x64
10005cd8:	2e656d61 	cdpcs	13, 6, cr6, cr5, cr1, {3}
10005cdc:	5d2e2e2e 	stcpl	14, cr2, [lr, #-184]!	; 0xffffff48
10005ce0:	00000d2e 	andeq	r0, r0, lr, lsr #26
10005ce4:	6573555b 	ldrbvs	r5, [r3, #-1371]!	; 0xfffffaa5
10005ce8:	74784520 	ldrbtvc	r4, [r8], #-1312	; 0xfffffae0
10005cec:	65646e65 	strbvs	r6, [r4, #-3685]!	; 0xfffff19b
10005cf0:	72462064 	subvc	r2, r6, #100	; 0x64
10005cf4:	2e656d61 	cdpcs	13, 6, cr6, cr5, cr1, {3}
10005cf8:	5d2e2e2e 	stcpl	14, cr2, [lr, #-184]!	; 0xffffff48
10005cfc:	00000d2e 	andeq	r0, r0, lr, lsr #26
10005d00:	74694220 	strbtvc	r4, [r9], #-544	; 0xfffffde0
10005d04:	65442035 	strbvs	r2, [r4, #-53]	; 0xffffffcb
10005d08:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
10005d0c:	61432074 	hvcvs	12804	; 0x3204
10005d10:	52206c6c 	eorpl	r6, r0, #108, 24	; 0x6c00
10005d14:	2e656c75 	mcrcs	12, 3, r6, cr5, cr5, {3}
10005d18:	3a2e2e2e 	bcc	10b915d8 <__copy_table_end__+0xb8b710>
10005d1c:	00000000 	andeq	r0, r0, r0
10005d20:	6573555b 	ldrbvs	r5, [r3, #-1371]!	; 0xfffffaa5
10005d24:	66654420 	strbtvs	r4, [r5], -r0, lsr #8
10005d28:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
10005d2c:	6c755220 	lfmvs	f5, 2, [r5], #-128	; 0xffffff80
10005d30:	2e2e2e65 	cdpcs	14, 2, cr2, cr14, cr5, {3}
10005d34:	5d2e2e2e 	stcpl	14, cr2, [lr, #-184]!	; 0xffffff48
10005d38:	00000d2e 	andeq	r0, r0, lr, lsr #26
10005d3c:	6573555b 	ldrbvs	r5, [r3, #-1371]!	; 0xfffffaa5
10005d40:	746f4e20 	strbtvc	r4, [pc], #-3616	; 10005d48 <pow10.0+0x400>
10005d44:	66654420 	strbtvs	r4, [r5], -r0, lsr #8
10005d48:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
10005d4c:	6c755220 	lfmvs	f5, 2, [r5], #-128	; 0xffffff80
10005d50:	5d2e2e65 	stcpl	14, cr2, [lr, #-404]!	; 0xfffffe6c
10005d54:	00000d2e 	andeq	r0, r0, lr, lsr #26
10005d58:	74694220 	strbtvc	r4, [r9], #-544	; 0xfffffde0
10005d5c:	65532036 	ldrbvs	r2, [r3, #-54]	; 0xffffffca
10005d60:	69727563 	ldmdbvs	r2!, {r0, r1, r5, r6, r8, sl, ip, sp, lr}^
10005d64:	53207974 			; <UNDEFINED> instruction: 0x53207974
10005d68:	6b636174 	blvs	118de340 <__copy_table_end__+0x18d8478>
10005d6c:	2e2e2e2e 	cdpcs	14, 2, cr2, cr14, cr14, {1}
10005d70:	3a2e2e2e 	bcc	10b91630 <__copy_table_end__+0xb8b768>
10005d74:	00000000 	andeq	r0, r0, r0
10005d78:	6573555b 	ldrbvs	r5, [r3, #-1371]!	; 0xfffffaa5
10005d7c:	63655320 	cmnvs	r5, #32, 6	; 0x80000000
10005d80:	74697275 	strbtvc	r7, [r9], #-629	; 0xfffffd8b
10005d84:	74532079 	ldrbvc	r2, [r3], #-121	; 0xffffff87
10005d88:	2e6b6361 	cdpcs	3, 6, cr6, cr11, cr1, {3}
10005d8c:	5d2e2e2e 	stcpl	14, cr2, [lr, #-184]!	; 0xffffff48
10005d90:	00000d2e 	andeq	r0, r0, lr, lsr #26
10005d94:	6573555b 	ldrbvs	r5, [r3, #-1371]!	; 0xfffffaa5
10005d98:	746f4e20 	strbtvc	r4, [pc], #-3616	; 10005da0 <pow10.0+0x458>
10005d9c:	63655320 	cmnvs	r5, #32, 6	; 0x80000000
10005da0:	74697275 	strbtvc	r7, [r9], #-629	; 0xfffffd8b
10005da4:	74532079 	ldrbvc	r2, [r3], #-121	; 0xffffff87
10005da8:	5d6b6361 	stclpl	3, cr6, [fp, #-388]!	; 0xfffffe7c
10005dac:	00000d2e 	andeq	r0, r0, lr, lsr #26
10005db0:	72646461 	rsbvc	r6, r4, #1627389952	; 0x61000000
10005db4:	2578303a 	ldrbcs	r3, [r8, #-58]!	; 0xffffffc6
10005db8:	2d583230 	lfmcs	f3, 2, [r8, #-192]	; 0xffffff40
10005dbc:	756c6176 	strbvc	r6, [ip, #-374]!	; 0xfffffe8a
10005dc0:	78303a65 	ldmdavc	r0!, {r0, r2, r5, r6, r9, fp, ip, sp}
10005dc4:	58383025 	ldmdapl	r8!, {r0, r2, r5, ip, sp}
10005dc8:	00000a0d 	andeq	r0, r0, sp, lsl #20
10005dcc:	454c4449 	strbmi	r4, [ip, #-1097]	; 0xfffffbb7
10005dd0:	00000000 	andeq	r0, r0, r0
10005dd4:	20726d54 	rsbscs	r6, r2, r4, asr sp
10005dd8:	00637653 	rsbeq	r7, r3, r3, asr r6

10005ddc <_global_impure_ptr>:
10005ddc:	38000018 	stmdacc	r0, {r3, r4}

10005de0 <__EH_FRAME_BEGIN__>:
10005de0:	00000000 	andeq	r0, r0, r0

Disassembly of section .ARM.extab:

10005de4 <__exidx_start-0x18>:
10005de4:	8101b108 	tsthi	r1, r8, lsl #2
10005de8:	8400b0b0 	strhi	fp, [r0], #-176	; 0xffffff50
10005dec:	00000000 	andeq	r0, r0, r0
10005df0:	8101b108 	tsthi	r1, r8, lsl #2
10005df4:	8400b0b0 	strhi	fp, [r0], #-176	; 0xffffff50
10005df8:	00000000 	andeq	r0, r0, r0

Disassembly of section .ARM.exidx:

10005dfc <__exidx_end-0xc0>:
10005dfc:	7fffdaa8 	svcvc	0x00ffdaa8
10005e00:	80b0b0b0 	ldrhthi	fp, [r0], r0
10005e04:	7fffdb10 	svcvc	0x00ffdb10
10005e08:	00000001 	andeq	r0, r0, r1
10005e0c:	7fffeac4 	svcvc	0x00ffeac4
10005e10:	8002a9b0 			; <UNDEFINED> instruction: 0x8002a9b0
10005e14:	7fffeb58 	svcvc	0x00ffeb58
10005e18:	80a8b0b0 	strhthi	fp, [r8], r0
10005e1c:	7fffeba8 	svcvc	0x00ffeba8
10005e20:	00000001 	andeq	r0, r0, r1
10005e24:	7fffebb4 	svcvc	0x00ffebb4
10005e28:	80aab0b0 	strhthi	fp, [sl], r0
10005e2c:	7fffebec 	svcvc	0x00ffebec
10005e30:	80b273ae 	adcshi	r7, r2, lr, lsr #7
10005e34:	7fffecc0 	svcvc	0x00ffecc0
10005e38:	00000001 	andeq	r0, r0, r1
10005e3c:	7fffecbc 	svcvc	0x00ffecbc
10005e40:	80383fab 	eorshi	r3, r8, fp, lsr #31
10005e44:	7fffed1c 	svcvc	0x00ffed1c
10005e48:	00000001 	andeq	r0, r0, r1
10005e4c:	7fffed28 	svcvc	0x00ffed28
10005e50:	80aab0b0 	strhthi	fp, [sl], r0
10005e54:	7fffed64 	svcvc	0x00ffed64
10005e58:	00000001 	andeq	r0, r0, r1
10005e5c:	7fffee18 	svcvc	0x00ffee18
10005e60:	80b20eab 	adcshi	r0, r2, fp, lsr #29
10005e64:	7fffee8c 	svcvc	0x00ffee8c
10005e68:	8008afb0 			; <UNDEFINED> instruction: 0x8008afb0
10005e6c:	7ffff14c 	svcvc	0x00fff14c
10005e70:	00000001 	andeq	r0, r0, r1
10005e74:	7ffff150 	svcvc	0x00fff150
10005e78:	80023fad 	andhi	r3, r2, sp, lsr #31
10005e7c:	7ffff3fc 	svcvc	0x00fff3fc
10005e80:	00000001 	andeq	r0, r0, r1
10005e84:	7ffff5dc 	svcvc	0x00fff5dc
10005e88:	8003a8b0 			; <UNDEFINED> instruction: 0x8003a8b0
10005e8c:	7ffff5ec 	svcvc	0x00fff5ec
10005e90:	00000001 	andeq	r0, r0, r1
10005e94:	7ffff5e8 	svcvc	0x00fff5e8
10005e98:	8004adb0 			; <UNDEFINED> instruction: 0x8004adb0
10005e9c:	7ffff8ac 	svcvc	0x00fff8ac
10005ea0:	80048400 	andhi	r8, r4, r0, lsl #8
10005ea4:	7ffff8d4 	svcvc	0x00fff8d4
10005ea8:	7fffff3c 	svcvc	0x00ffff3c
10005eac:	7ffff8d8 	svcvc	0x00fff8d8
10005eb0:	7fffff40 	svcvc	0x00ffff40
10005eb4:	7ffff8e4 	svcvc	0x00fff8e4
10005eb8:	00000001 	andeq	r0, r0, r1

Disassembly of section .copy.table:

10005ebc <__copy_table_start__>:
10005ebc:	10005ec8 	andne	r5, r0, r8, asr #29
10005ec0:	38000000 	stmdacc	r0, {}	; <UNPREDICTABLE>
10005ec4:	00000114 	andeq	r0, r0, r4, lsl r1

Disassembly of section .data:

38000000 <SystemCoreClock>:
38000000:	017d7840 	cmneq	sp, r0, asr #16

38000004 <fd_msp_stack_parser>:
static volatile stack_parser_t fd_msp_stack_parser = fault_dump_callstack;
38000004:	10001bf5 	strdne	r1, [r0], -r5

38000008 <fd_psp_stack_parser>:
static volatile stack_parser_t fd_psp_stack_parser = fault_dump_callstack;
38000008:	10001bf5 	strdne	r1, [r0], -r5

3800000c <uxTopUsedPriority>:
static const volatile UBaseType_t uxTopUsedPriority = configMAX_PRIORITIES - 1U;
3800000c:	00000004 	andeq	r0, r0, r4

38000010 <ulCriticalNesting>:
PRIVILEGED_DATA static volatile uint32_t ulCriticalNesting = 0xaaaaaaaaUL;
38000010:	aaaaaaaa 	bge	36aaaac0 <__copy_table_end__+0x26aa4bf8>

38000014 <_impure_ptr>:
38000014:	38000018 	stmdacc	r0, {r3, r4}

38000018 <impure_data>:
38000018:	00000000 	andeq	r0, r0, r0
3800001c:	38000304 	stmdacc	r0, {r2, r8, r9}
38000020:	3800036c 	stmdacc	r0, {r2, r3, r5, r6, r8, r9}
38000024:	380003d4 	stmdacc	r0, {r2, r4, r6, r7, r8, r9}
	...
380000c0:	00000001 	andeq	r0, r0, r1
380000c4:	00000000 	andeq	r0, r0, r0
380000c8:	abcd330e 	blge	3734cd08 <__copy_table_end__+0x27346e40>
380000cc:	e66d1234 			; <UNDEFINED> instruction: 0xe66d1234
380000d0:	0005deec 	andeq	sp, r5, ip, ror #29
380000d4:	0000000b 	andeq	r0, r0, fp
	...

38000440 <__atexit_recursive_mutex>:
38000440:	38008d14 	stmdacc	r0, {r2, r4, r8, sl, fp, pc}

38000444 <__init_array_start>:
38000444:	10003af9 	strdne	r3, [r0], -r9

38000448 <__frame_dummy_init_array_entry>:
38000448:	100007e5 	andne	r0, r0, r5, ror #15

3800044c <__do_global_dtors_aux_fini_array_entry>:
3800044c:	100007c1 	andne	r0, r0, r1, asr #15

Disassembly of section .bss:

38000450 <__bss_start__>:
38000450:	00000000 	andeq	r0, r0, r0

38000454 <object.0>:
	...

3800046c <main_task.0>:
3800046c:	00000000 	andeq	r0, r0, r0

38000470 <ucHeap>:
	...

38008470 <buffer.0>:
	...

38008570 <fd_main_stack_base>:
volatile unsigned int fd_main_stack_base = 0;
38008570:	00000000 	andeq	r0, r0, r0

38008574 <fd_main_stack_full>:
volatile unsigned int fd_main_stack_full = 0;
38008574:	00000000 	andeq	r0, r0, r0

38008578 <frame.1>:
	...

380085b8 <pxCurrentTCB>:
    portDONT_DISCARD PRIVILEGED_DATA TCB_t * volatile pxCurrentTCB = NULL;
380085b8:	00000000 	andeq	r0, r0, r0

380085bc <pxDelayedTaskList>:
PRIVILEGED_DATA static List_t * volatile pxDelayedTaskList;              /**< Points to the delayed task list currently being used. */
380085bc:	00000000 	andeq	r0, r0, r0

380085c0 <pxOverflowDelayedTaskList>:
PRIVILEGED_DATA static List_t * volatile pxOverflowDelayedTaskList;      /**< Points to the delayed task list currently being used to hold tasks that have overflowed the current tick count. */
380085c0:	00000000 	andeq	r0, r0, r0

380085c4 <pxReadyTasksLists>:
	...

38008650 <uxCurrentNumberOfTasks>:
PRIVILEGED_DATA static volatile UBaseType_t uxCurrentNumberOfTasks = ( UBaseType_t ) 0U;
38008650:	00000000 	andeq	r0, r0, r0

38008654 <uxDeletedTasksWaitingCleanUp>:
    PRIVILEGED_DATA static volatile UBaseType_t uxDeletedTasksWaitingCleanUp = ( UBaseType_t ) 0U;
38008654:	00000000 	andeq	r0, r0, r0

38008658 <uxIdleTaskStack.2>:
	...

38008858 <uxSchedulerSuspended>:
PRIVILEGED_DATA static volatile UBaseType_t uxSchedulerSuspended = ( UBaseType_t ) 0U;
38008858:	00000000 	andeq	r0, r0, r0

3800885c <uxTaskNumber>:
PRIVILEGED_DATA static UBaseType_t uxTaskNumber = ( UBaseType_t ) 0U;
3800885c:	00000000 	andeq	r0, r0, r0

38008860 <uxTimerTaskStack.0>:
	...

38008a60 <uxTopReadyPriority>:
PRIVILEGED_DATA static volatile UBaseType_t uxTopReadyPriority = tskIDLE_PRIORITY;
38008a60:	00000000 	andeq	r0, r0, r0

38008a64 <xDelayedTaskList1>:
	...

38008a80 <xDelayedTaskList2>:
	...

38008a9c <xIdleTaskHandles>:
PRIVILEGED_DATA static TaskHandle_t xIdleTaskHandles[ configNUMBER_OF_CORES ];       /**< Holds the handles of the idle tasks.  The idle tasks are created automatically when the scheduler is started. */
38008a9c:	00000000 	andeq	r0, r0, r0

38008aa0 <xIdleTaskTCB.3>:
	...

38008aec <xNextTaskUnblockTime>:
PRIVILEGED_DATA static volatile TickType_t xNextTaskUnblockTime = ( TickType_t ) 0U; /* Initialised to portMAX_DELAY before the scheduler starts. */
38008aec:	00000000 	andeq	r0, r0, r0

38008af0 <xNumOfOverflows>:
PRIVILEGED_DATA static volatile BaseType_t xNumOfOverflows = ( BaseType_t ) 0;
38008af0:	00000000 	andeq	r0, r0, r0

38008af4 <xPendedTicks>:
PRIVILEGED_DATA static volatile TickType_t xPendedTicks = ( TickType_t ) 0U;
38008af4:	00000000 	andeq	r0, r0, r0

38008af8 <xPendingReadyList>:
	...

38008b14 <xSchedulerRunning>:
PRIVILEGED_DATA static volatile BaseType_t xSchedulerRunning = pdFALSE;
38008b14:	00000000 	andeq	r0, r0, r0

38008b18 <xSuspendedTaskList>:
	...

38008b34 <xTasksWaitingTermination>:
	...

38008b50 <xTickCount>:
PRIVILEGED_DATA static volatile TickType_t xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
38008b50:	00000000 	andeq	r0, r0, r0

38008b54 <xTimerTaskTCB.1>:
	...

38008ba0 <xYieldPendings>:
PRIVILEGED_DATA static volatile BaseType_t xYieldPendings[ configNUMBER_OF_CORES ] = { pdFALSE };
38008ba0:	00000000 	andeq	r0, r0, r0

38008ba4 <pxCurrentTimerList>:
    PRIVILEGED_DATA static List_t * pxCurrentTimerList;
38008ba4:	00000000 	andeq	r0, r0, r0

38008ba8 <pxOverflowTimerList>:
    PRIVILEGED_DATA static List_t * pxOverflowTimerList;
38008ba8:	00000000 	andeq	r0, r0, r0

38008bac <ucStaticTimerQueueStorage.1>:
	...

38008c4c <xActiveTimerList1>:
	...

38008c68 <xActiveTimerList2>:
	...

38008c84 <xLastTime.2>:
38008c84:	00000000 	andeq	r0, r0, r0

38008c88 <xStaticTimerQueue.0>:
	...

38008ce4 <xTimerQueue>:
    PRIVILEGED_DATA static QueueHandle_t xTimerQueue = NULL;
38008ce4:	00000000 	andeq	r0, r0, r0

38008ce8 <xTimerTaskHandle>:
    PRIVILEGED_DATA static TaskHandle_t xTimerTaskHandle = NULL;
38008ce8:	00000000 	andeq	r0, r0, r0

38008cec <pxEnd>:
PRIVILEGED_DATA static BlockLink_t * pxEnd = NULL;
38008cec:	00000000 	andeq	r0, r0, r0

38008cf0 <xFreeBytesRemaining>:
PRIVILEGED_DATA static size_t xFreeBytesRemaining = ( size_t ) 0U;
38008cf0:	00000000 	andeq	r0, r0, r0

38008cf4 <xMinimumEverFreeBytesRemaining>:
PRIVILEGED_DATA static size_t xMinimumEverFreeBytesRemaining = ( size_t ) 0U;
38008cf4:	00000000 	andeq	r0, r0, r0

38008cf8 <xNumberOfSuccessfulAllocations>:
PRIVILEGED_DATA static size_t xNumberOfSuccessfulAllocations = ( size_t ) 0U;
38008cf8:	00000000 	andeq	r0, r0, r0

38008cfc <xNumberOfSuccessfulFrees>:
PRIVILEGED_DATA static size_t xNumberOfSuccessfulFrees = ( size_t ) 0U;
38008cfc:	00000000 	andeq	r0, r0, r0

38008d00 <xStart>:
	...

38008d08 <ulStoppedTimerCompensation>:
    PRIVILEGED_DATA static uint32_t ulStoppedTimerCompensation = 0;
38008d08:	00000000 	andeq	r0, r0, r0

38008d0c <ulTimerCountsForOneTick>:
    PRIVILEGED_DATA static uint32_t ulTimerCountsForOneTick = 0;
38008d0c:	00000000 	andeq	r0, r0, r0

38008d10 <xMaximumPossibleSuppressedTicks>:
    PRIVILEGED_DATA static uint32_t xMaximumPossibleSuppressedTicks = 0;
38008d10:	00000000 	andeq	r0, r0, r0

38008d14 <__lock___atexit_recursive_mutex>:
38008d14:	00000000 	andeq	r0, r0, r0

38008d18 <errno>:
38008d18:	00000000 	andeq	r0, r0, r0

Disassembly of section .heap:

38008d1c <__end__-0x4>:
38008d1c:	00000000 	andeq	r0, r0, r0

38008d20 <__end__>:
	...

Disassembly of section .stack:

380ff000 <__StackLimit>:
	...

Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
    BaseType_t xReturn;

    /* Obtain the number of the currently executing interrupt. Interrupt Program
     * Status Register (IPSR) holds the exception number of the currently-executing
     * exception or zero for Thread mode.*/
    __asm volatile ( "mrs %0, ipsr" : "=r" ( ulCurrentInterrupt )::"memory" );
   0:	00003541 	andeq	r3, r0, r1, asr #10

    if( ulCurrentInterrupt == 0 )
   4:	61656100 	cmnvs	r5, r0, lsl #2
    {
        xReturn = pdFALSE;
   8:	01006962 	tsteq	r0, r2, ror #18
    {
        xReturn = pdTRUE;
    }

    return xReturn;
}
   c:	0000002b 	andeq	r0, r0, fp, lsr #32
    if (parser != NULL) {
        fd_psp_stack_parser = parser;
        result = FD_EOK;
    }
    return result;
}
  10:	4d2d3805 	stcmi	8, cr3, [sp, #-20]!	; 0xffffffec
}
  14:	49414d2e 	stmdbmi	r1, {r1, r2, r3, r5, r8, sl, fp, lr}^
size_t uart_recv(uint8_t* buffer, size_t size) {
    uint8_t ch = 0;
    size_t it = 0;
    while (1) {
        ch = getchar();
        if(ch == '\n' || it >= size) {
  18:	1106004e 	tstne	r6, lr, asr #32
        }
        buffer[it] = ch;
        it = it + 1;
    }
    return (it + 1);
}
  1c:	03094d07 	movweq	r4, #40199	; 0x9d07
  va_start(va, format);
  const out_fct_wrap_type out_fct_wrap = { out, arg };
  const int ret = _vsnprintf(_out_fct, (char*)(uintptr_t)&out_fct_wrap, (size_t)-1, format, va);
  va_end(va);
  return ret;
}
  20:	0412080a 	ldreq	r0, [r2], #-2058	; 0xfffff7f6
  24:	01150114 	tsteq	r5, r4, lsl r1
  28:	01180317 	tsteq	r8, r7, lsl r3
  2c:	011b011a 	tsteq	fp, sl, lsl r1
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
  30:	0122011c 			; <UNDEFINED> instruction: 0x0122011c
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
  34:	Address 0x00000034 is out of bounds.


Disassembly of section .comment:

00000000 <.comment>:
    __asm volatile ( "mrs %0, ipsr" : "=r" ( ulCurrentInterrupt )::"memory" );
   0:	3a434347 	bcc	10d0d24 <__RAM_SIZE+0xfd0d24>
    if( ulCurrentInterrupt == 0 )
   4:	4e472820 	cdpmi	8, 4, cr2, cr7, cr0, {1}
        xReturn = pdFALSE;
   8:	72412055 	subvc	r2, r1, #85	; 0x55
}
   c:	6d45206d 	stclvs	0, cr2, [r5, #-436]	; 0xfffffe4c
  10:	64646562 	strbtvs	r6, [r4], #-1378	; 0xfffffa9e
  14:	54206465 	strtpl	r6, [r0], #-1125	; 0xfffffb9b
        if(ch == '\n' || it >= size) {
  18:	636c6f6f 	cmnvs	ip, #444	; 0x1bc
}
  1c:	6e696168 	powvsez	f6, f1, #0.0
  20:	2e303120 	rsfcssp	f3, f0, f0
  24:	30322d33 	eorscc	r2, r2, r3, lsr sp
  28:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
  2c:	31202930 			; <UNDEFINED> instruction: 0x31202930
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
  30:	2e332e30 	mrccs	14, 1, r2, cr3, cr0, {1}
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
  34:	30322031 	eorscc	r2, r2, r1, lsr r0
  38:	38303132 	ldmdacc	r0!, {r1, r4, r5, r8, ip, sp}
  3c:	28203432 	stmdacs	r0!, {r1, r4, r5, sl, ip, sp}
  40:	656c6572 	strbvs	r6, [ip, #-1394]!	; 0xfffffa8e
        BaseType_t xReturn = pdFAIL;
  44:	29657361 	stmdbcs	r5!, {r0, r5, r6, r8, r9, ip, sp, lr}^
	...

Disassembly of section .debug_info:

00000000 <.debug_info>:
    __asm volatile ( "mrs %0, ipsr" : "=r" ( ulCurrentInterrupt )::"memory" );
       0:	00000729 	andeq	r0, r0, r9, lsr #14
    if( ulCurrentInterrupt == 0 )
       4:	00000002 	andeq	r0, r0, r2
        xReturn = pdFALSE;
       8:	01040000 	mrseq	r0, (UNDEF: 4)
}
       c:	000000bf 	strheq	r0, [r0], -pc	; <UNPREDICTABLE>
      10:	0000570c 	andeq	r5, r0, ip, lsl #14
      14:	0001a800 	andeq	sl, r1, r0, lsl #16
        if(ch == '\n' || it >= size) {
      18:	00001800 	andeq	r1, r0, r0, lsl #16
	...
      28:	06010200 	streq	r0, [r1], -r0, lsl #4
      2c:	0000008f 	andeq	r0, r0, pc, lsl #1
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
      30:	00000003 	andeq	r0, r0, r3
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
      34:	182b0200 	stmdane	fp!, {r9}
      38:	0000003c 	andeq	r0, r0, ip, lsr r0
      3c:	8d080102 	stfhis	f0, [r8, #-8]
      40:	02000000 	andeq	r0, r0, #0
        BaseType_t xReturn = pdFAIL;
      44:	02a50502 	adceq	r0, r5, #8388608	; 0x800000
    }
      48:	02020000 	andeq	r0, r2, #0
                    xMinSize = pxBlock->xBlockSize;
                }

                /* Move to the next block in the chain until the last block is
                 * reached. */
                pxBlock = heapPROTECT_BLOCK_POINTER( pxBlock->pxNextFreeBlock );
      4c:	0000ac07 	andeq	sl, r0, r7, lsl #24
            while( pxBlock != pxEnd )
      50:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
      54:	0000025a 	andeq	r0, r0, sl, asr r2
                if( pxBlock->xBlockSize > xMaxSize )
      58:	18070402 	stmdane	r7, {r1, sl}
      5c:	02000002 	andeq	r0, r0, #2
                if( pxBlock->xBlockSize < xMinSize )
      60:	02550508 	subseq	r0, r5, #8, 10	; 0x2000000
                    xMinSize = pxBlock->xBlockSize;
      64:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
      68:	00021307 	andeq	r1, r2, r7, lsl #6
      6c:	05040400 	streq	r0, [r4, #-1024]	; 0xfffffc00
      70:	00746e69 	rsbseq	r6, r4, r9, ror #28
      74:	1d070402 	cfstrsne	mvf0, [r7, #-8]
      78:	03000002 	movweq	r0, #2
      7c:	00000002 	andeq	r0, r0, r2
            prvUnlockQueue( pxQueue );
      80:	30131803 	andscc	r1, r3, r3, lsl #16
            ( void ) xTaskResumeAll();
      84:	02000000 	andeq	r0, r0, #0
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
      88:	02490408 	subeq	r0, r9, #8, 8	; 0x8000000
      8c:	04050000 	streq	r0, [r5], #-0
      90:	96080102 	strls	r0, [r8], -r2, lsl #2
        taskENTER_CRITICAL();
      94:	06000000 	streq	r0, [r0], -r0
            if( uxSemaphoreCount > ( UBaseType_t ) 0 )
      98:	00000090 	muleq	r0, r0, r0
                if( xTicksToWait == ( TickType_t ) 0 )
      9c:	000a3f03 	andeq	r3, sl, r3, lsl #30
      a0:	1a4a0400 	bne	12810a8 <__RAM_SIZE+0x11810a8>
                else if( xEntryTimeSet == pdFALSE )
      a4:	00000051 	andeq	r0, r0, r1, asr r0
        taskEXIT_CRITICAL();
      a8:	0002af03 	andeq	sl, r2, r3, lsl #30
        vTaskSuspendAll();
      ac:	2e5c0500 	cdpcs	5, 5, cr0, cr12, cr0, {0}
        prvLockQueue( pxQueue );
      b0:	000000b4 	strheq	r0, [r0], -r4
      b4:	00ba0407 	adcseq	r0, sl, r7, lsl #8
      b8:	f2080000 	vhadd.s8	d0, d8, d0
      bc:	01000001 	tsteq	r0, r1
      c0:	00007b09 	andeq	r7, r0, r9, lsl #22
      c4:	0000d100 	andeq	sp, r0, r0, lsl #2
      c8:	00740a00 	rsbseq	r0, r4, r0, lsl #20
      cc:	7fff0000 	svcvc	0x00ff0000
        if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
      d0:	02060b00 	andeq	r0, r6, #0, 22
      d4:	0d010000 	stceq	0, cr0, [r1, #-0]
      d8:	0000c009 	andeq	ip, r0, r9
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
      dc:	03050100 	movweq	r0, #20736	; 0x5100
      e0:	38000470 	stmdacc	r0, {r4, r5, r6, sl}
                    if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
      e4:	01ed010c 	mvneq	r0, ip, lsl #2
      e8:	5f010000 	svcpl	0x00010000
                vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
      ec:	006d0105 	rsbeq	r0, sp, r5, lsl #2
      f0:	09640000 	stmdbeq	r4!, {}^	; <UNPREDICTABLE>
                prvUnlockQueue( pxQueue );
      f4:	09901000 	ldmibeq	r0, {ip}
      f8:	00001000 	andeq	r1, r0, r0
                if( xTaskResumeAll() == pdFALSE )
      fc:	63010000 	movwvs	r0, #4096	; 0x1000
     100:	0d000001 	stceq	0, cr0, [r0, #-4]
                    taskYIELD_WITHIN_API();
     104:	00000024 	andeq	r0, r0, r4, lsr #32
                    if( xInheritanceOccurred != pdFALSE )
     108:	6d096001 	stcvs	0, cr6, [r9, #-4]
                return errQUEUE_EMPTY;
     10c:	26000000 	strcs	r0, [r0], -r0
                        taskENTER_CRITICAL();
     110:	20000000 	andcs	r0, r0, r0
                            uxHighestWaitingPriority = prvGetDisinheritPriorityAfterTimeout( pxQueue );
     114:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
     118:	1000096a 	andne	r0, r0, sl, ror #18
                            vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
     11c:	00000683 	andeq	r0, r0, r3, lsl #13
                        taskEXIT_CRITICAL();
     120:	0009700f 	andeq	r7, r9, pc
     124:	00069110 	andeq	r9, r6, r0, lsl r1
                    listINSERT_END( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
     128:	00013700 	andeq	r3, r1, r0, lsl #14
     12c:	50011000 	andpl	r1, r1, r0
     130:	58e00305 	stmiapl	r0!, {r0, r2, r8, r9}^
     134:	0e001000 	cdpeq	0, 0, cr1, cr0, cr0, {0}
     138:	10000974 	andne	r0, r0, r4, ror r9
     13c:	0000069e 	muleq	r0, lr, r6
     140:	0009780e 	andeq	r7, r9, lr, lsl #16
     144:	00016310 	andeq	r6, r1, r0, lsl r3
     148:	09841100 	stmibeq	r4, {r8, ip}
     14c:	06ac1000 	strteq	r1, [ip], r0
     150:	01100000 	tsteq	r0, r0
     154:	e8030550 	stmda	r3, {r4, r6, r8, sl}
     158:	10100058 	andsne	r0, r0, r8, asr r0
     15c:	74025101 	strvc	r5, [r2], #-257	; 0xfffffeff
     160:	1200007f 	andne	r0, r0, #127	; 0x7f
     164:	00000296 	muleq	r0, r6, r2
     168:	010d5401 	tsteq	sp, r1, lsl #8
     16c:	10000800 	andne	r0, r0, r0, lsl #16
     170:	10000844 	andne	r0, r0, r4, asr #16
     174:	00000050 	andeq	r0, r0, r0, asr r0
     178:	00020001 	andeq	r0, r2, r1
     17c:	022a1300 	eoreq	r1, sl, #0, 6
     180:	55010000 	strpl	r0, [r1, #-0]
     184:	0000a819 	andeq	sl, r0, r9, lsl r8
     188:	6c030500 	cfstr32vs	mvfx0, [r3], {-0}
     18c:	0d380004 	ldceq	0, cr0, [r8, #-16]!
     190:	00001a93 	muleq	r0, r3, sl
     194:	9c105601 	ldcls	6, cr5, [r0], {1}
     198:	9c000000 	stcls	0, cr0, [r0], {-0}
     19c:	94000000 	strls	r0, [r0], #-0
     1a0:	0f000000 	svceq	0x00000000
     1a4:	1000081a 	andne	r0, r0, sl, lsl r8
     1a8:	000006ba 			; <UNDEFINED> instruction: 0x000006ba
     1ac:	000001df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
     1b0:	05500110 	ldrbeq	r0, [r0, #-272]	; 0xfffffef0
     1b4:	00094103 	andeq	r4, r9, r3, lsl #2
     1b8:	51011010 	tstpl	r1, r0, lsl r0
     1bc:	58500305 	ldmdapl	r0, {r0, r2, r8, r9}^
     1c0:	01101000 	tsteq	r0, r0
     1c4:	000a0352 	andeq	r0, sl, r2, asr r3
     1c8:	53011008 	movwpl	r1, #4104	; 0x1008
     1cc:	02103001 	andseq	r3, r0, #1
     1d0:	3101007d 	tstcc	r1, sp, ror r0
     1d4:	047d0210 	ldrbteq	r0, [sp], #-528	; 0xfffffdf0
     1d8:	046c0305 	strbteq	r0, [ip], #-773	; 0xfffffcfb
     1dc:	0f003800 	svceq	0x00003800
     1e0:	10000826 	andne	r0, r0, r6, lsr #16
     1e4:	000006ac 	andeq	r0, r0, ip, lsr #13
     1e8:	000001f6 	strdeq	r0, [r0], -r6
     1ec:	05500110 	ldrbeq	r0, [r0, #-272]	; 0xfffffef0
     1f0:	00585c03 	subseq	r5, r8, r3, lsl #24
     1f4:	300e0010 	andcc	r0, lr, r0, lsl r0
     1f8:	c9100008 	ldmdbgt	r0, {r3}
     1fc:	00000006 	andeq	r0, r0, r6
     200:	00002a12 	andeq	r2, r0, r2, lsl sl
     204:	0d470100 	stfeqe	f0, [r7, #-0]
     208:	00094001 	andeq	r4, r9, r1
     20c:	00096410 	andeq	r6, r9, r0, lsl r4
     210:	0000d110 	andeq	sp, r0, r0, lsl r1
     214:	02740100 	rsbseq	r0, r4, #0, 2
     218:	a1140000 	tstge	r4, r0
     21c:	01000000 	mrseq	r0, (UNDEF: 0)
     220:	008e2347 	addeq	r2, lr, r7, asr #6
     224:	00f50000 	rscseq	r0, r5, r0
     228:	00f10000 	rscseq	r0, r1, r0
     22c:	760d0000 	strvc	r0, [sp], -r0
     230:	01000000 	mrseq	r0, (UNDEF: 0)
     234:	006d0948 	rsbeq	r0, sp, r8, asr #18
     238:	011a0000 	tsteq	sl, r0
     23c:	01160000 	tsteq	r6, r0
     240:	4a0e0000 	bmi	380248 <__RAM_SIZE+0x280248>
     244:	74100009 	ldrvc	r0, [r0], #-9
     248:	0f000002 	svceq	0x00000002
     24c:	10000952 	andne	r0, r0, r2, asr r9
     250:	000006d8 	ldrdeq	r0, [r0], -r8
     254:	00000260 	andeq	r0, r0, r0, ror #4
     258:	03500110 	cmpeq	r0, #16, 2
     25c:	0003e80a 	andeq	lr, r3, sl, lsl #16
     260:	00095811 	andeq	r5, r9, r1, lsl r8
     264:	00069110 	andeq	r9, r6, r0, lsl r1
     268:	50011000 	andpl	r1, r1, r0
     26c:	58c40305 	stmiapl	r4, {r0, r2, r8, r9}^
     270:	00001000 	andeq	r1, r0, r0
     274:	02ff0115 	rscseq	r0, pc, #1073741829	; 0x40000005
     278:	42010000 	andmi	r0, r1, #0
     27c:	09280106 	stmdbeq	r8!, {r1, r2, r8}
     280:	09401000 	stmdbeq	r0, {ip}^
     284:	01391000 	teqeq	r9, r0
     288:	c9010000 	stmdbgt	r1, {}	; <UNPREDICTABLE>
     28c:	16000002 	strne	r0, [r0], -r2
     290:	0000004e 	andeq	r0, r0, lr, asr #32
     294:	000002d9 	ldrdeq	r0, [r0], -r9
     298:	fc030501 	stc2	5, cr0, [r3], {1}
     29c:	0f100058 	svceq	0x00100058
     2a0:	10000932 	andne	r0, r0, r2, lsr r9
     2a4:	000006ac 	andeq	r0, r0, ip, lsr #13
     2a8:	000002bf 			; <UNDEFINED> instruction: 0x000002bf
     2ac:	05500110 	ldrbeq	r0, [r0, #-272]	; 0xfffffef0
     2b0:	0058b403 	subseq	fp, r8, r3, lsl #8
     2b4:	51011010 	tstpl	r1, r0, lsl r0
     2b8:	58fc0305 	ldmpl	ip!, {r0, r2, r8, r9}^
     2bc:	0e001000 	cdpeq	0, 0, cr1, cr0, cr0, {0}
     2c0:	10000936 	andne	r0, r0, r6, lsr r9
     2c4:	000002de 	ldrdeq	r0, [r0], -lr
     2c8:	00970900 	addseq	r0, r7, r0, lsl #18
     2cc:	02d90000 	sbcseq	r0, r9, #0
     2d0:	74170000 	ldrvc	r0, [r7], #-0
     2d4:	05000000 	streq	r0, [r0, #-0]
     2d8:	02c90600 	sbceq	r0, r9, #0, 12
     2dc:	01150000 	tsteq	r5, r0
     2e0:	0000020d 	andeq	r0, r0, sp, lsl #4
     2e4:	01063d01 	tsteq	r6, r1, lsl #26
     2e8:	10000910 	andne	r0, r0, r0, lsl r9
     2ec:	10000928 	andne	r0, r0, r8, lsr #18
     2f0:	00000159 	andeq	r0, r0, r9, asr r1
     2f4:	00033301 	andeq	r3, r3, r1, lsl #6
     2f8:	004e1600 	subeq	r1, lr, r0, lsl #12
     2fc:	02d90000 	sbcseq	r0, r9, #0
     300:	05010000 	streq	r0, [r1, #-0]
     304:	00590403 	subseq	r0, r9, r3, lsl #8
     308:	091a0f10 	ldmdbeq	sl, {r4, r8, r9, sl, fp}
     30c:	06ac1000 	strteq	r1, [ip], r0
     310:	03290000 			; <UNDEFINED> instruction: 0x03290000
     314:	01100000 	tsteq	r0, r0
     318:	b4030550 	strlt	r0, [r3], #-1360	; 0xfffffab0
     31c:	10100058 	andsne	r0, r0, r8, asr r0
     320:	03055101 	movweq	r5, #20737	; 0x5101
     324:	10005904 	andne	r5, r0, r4, lsl #18
     328:	091e0e00 	ldmdbeq	lr, {r9, sl, fp}
     32c:	03331000 	teqeq	r3, #0
     330:	15000000 	strne	r0, [r0, #-0]
     334:	00009b01 	andeq	r9, r0, r1, lsl #22
     338:	06380100 	ldrteq	r0, [r8], -r0, lsl #2
     33c:	0008f801 	andeq	pc, r8, r1, lsl #16
     340:	00091010 	andeq	r1, r9, r0, lsl r0
     344:	00017910 	andeq	r7, r1, r0, lsl r9
     348:	03880100 	orreq	r0, r8, #0, 2
     34c:	4e160000 	cdpmi	0, 1, cr0, cr6, cr0, {0}
     350:	d9000000 	stmdble	r0, {}	; <UNPREDICTABLE>
     354:	01000002 	tsteq	r0, r2
     358:	590c0305 	stmdbpl	ip, {r0, r2, r8, r9}
     35c:	020f1000 	andeq	r1, pc, #0
     360:	ac100009 	ldcge	0, cr0, [r0], {9}
     364:	7e000006 	cdpvc	0, 0, cr0, cr0, cr6, {0}
     368:	10000003 	andne	r0, r0, r3
     36c:	03055001 	movweq	r5, #20481	; 0x5001
     370:	100058b4 			; <UNDEFINED> instruction: 0x100058b4
     374:	05510110 	ldrbeq	r0, [r1, #-272]	; 0xfffffef0
     378:	00590c03 	subseq	r0, r9, r3, lsl #24
     37c:	060e0010 			; <UNDEFINED> instruction: 0x060e0010
     380:	88100009 	ldmdahi	r0, {r0, r3}
     384:	00000003 	andeq	r0, r0, r3
     388:	02ed0115 	rsceq	r0, sp, #1073741829	; 0x40000005
     38c:	33010000 	movwcc	r0, #4096	; 0x1000
     390:	08e00106 	stmiaeq	r0!, {r1, r2, r8}^
     394:	08f81000 	ldmeq	r8!, {ip}^
     398:	01991000 	orrseq	r1, r9, r0
     39c:	dd010000 	stcle	0, cr0, [r1, #-0]
     3a0:	16000003 	strne	r0, [r0], -r3
     3a4:	0000004e 	andeq	r0, r0, lr, asr #32
     3a8:	000002d9 	ldrdeq	r0, [r0], -r9
     3ac:	14030501 	strne	r0, [r3], #-1281	; 0xfffffaff
     3b0:	0f100059 	svceq	0x00100059
     3b4:	100008ea 	andne	r0, r0, sl, ror #17
     3b8:	000006ac 	andeq	r0, r0, ip, lsr #13
     3bc:	000003d3 	ldrdeq	r0, [r0], -r3
     3c0:	05500110 	ldrbeq	r0, [r0, #-272]	; 0xfffffef0
     3c4:	0058b403 	subseq	fp, r8, r3, lsl #8
     3c8:	51011010 	tstpl	r1, r0, lsl r0
     3cc:	59140305 	ldmdbpl	r4, {r0, r2, r8, r9}
     3d0:	0e001000 	cdpeq	0, 0, cr1, cr0, cr0, {0}
     3d4:	100008ee 	andne	r0, r0, lr, ror #17
     3d8:	000003dd 	ldrdeq	r0, [r0], -sp
     3dc:	e7011500 	str	r1, [r1, -r0, lsl #10]
     3e0:	01000002 	tsteq	r0, r2
     3e4:	c801062e 	stmdagt	r1, {r1, r2, r3, r5, r9, sl}
     3e8:	e0100008 	ands	r0, r0, r8
     3ec:	b9100008 	ldmdblt	r0, {r3}
     3f0:	01000001 	tsteq	r0, r1
     3f4:	00000432 	andeq	r0, r0, r2, lsr r4
     3f8:	00004e16 	andeq	r4, r0, r6, lsl lr
     3fc:	0002d900 	andeq	sp, r2, r0, lsl #18
     400:	03050100 	movweq	r0, #20736	; 0x5100
     404:	1000591c 	andne	r5, r0, ip, lsl r9
     408:	0008d20f 	andeq	sp, r8, pc, lsl #4
     40c:	0006ac10 	andeq	sl, r6, r0, lsl ip
     410:	00042800 	andeq	r2, r4, r0, lsl #16
     414:	50011000 	andpl	r1, r1, r0
     418:	58b40305 	ldmpl	r4!, {r0, r2, r8, r9}
     41c:	01101000 	tsteq	r0, r0
     420:	1c030551 	cfstr32ne	mvfx0, [r3], {81}	; 0x51
     424:	00100059 	andseq	r0, r0, r9, asr r0
     428:	0008d60e 	andeq	sp, r8, lr, lsl #12
     42c:	00043210 	andeq	r3, r4, r0, lsl r2
     430:	01150000 	tsteq	r5, r0
     434:	000002e1 	andeq	r0, r0, r1, ror #5
     438:	01062701 	tsteq	r6, r1, lsl #14
     43c:	100008ac 	andne	r0, r0, ip, lsr #17
     440:	100008c8 	andne	r0, r0, r8, asr #17
     444:	000001d9 	ldrdeq	r0, [r0], -r9
     448:	00049b01 	andeq	r9, r4, r1, lsl #22
     44c:	004e1600 	subeq	r1, lr, r0, lsl #12
     450:	02d90000 	sbcseq	r0, r9, #0
     454:	05010000 	streq	r0, [r1, #-0]
     458:	00592403 	subseq	r2, r9, r3, lsl #8
     45c:	73011810 	movwvc	r1, #6160	; 0x1810
     460:	01000002 	tsteq	r0, r2
     464:	0101112a 	tsteq	r1, sl, lsr #2
     468:	0008b60f 	andeq	fp, r8, pc, lsl #12
     46c:	0006ac10 	andeq	sl, r6, r0, lsl ip
     470:	00048800 	andeq	r8, r4, r0, lsl #16
     474:	50011000 	andpl	r1, r1, r0
     478:	58b40305 	ldmpl	r4!, {r0, r2, r8, r9}
     47c:	01101000 	tsteq	r0, r0
     480:	24030551 	strcs	r0, [r3], #-1361	; 0xfffffaaf
     484:	00100059 	andseq	r0, r0, r9, asr r0
     488:	0008ba0e 	andeq	fp, r8, lr, lsl #20
     48c:	00049b10 	andeq	r9, r4, r0, lsl fp
     490:	08be0e00 	ldmeq	lr!, {r9, sl, fp}
     494:	06e71000 	strbteq	r1, [r7], r0
     498:	15000000 	strne	r0, [r0, #-0]
     49c:	00023a01 	andeq	r3, r2, r1, lsl #20
     4a0:	06170100 	ldreq	r0, [r7], -r0, lsl #2
     4a4:	00084401 	andeq	r4, r8, r1, lsl #8
     4a8:	0008ac10 	andeq	sl, r8, r0, lsl ip
     4ac:	0001f910 	andeq	pc, r1, r0, lsl r9	; <UNPREDICTABLE>
     4b0:	05cb0100 	strbeq	r0, [fp, #256]	; 0x100
     4b4:	d8130000 	ldmdale	r3, {}	; <UNPREDICTABLE>
     4b8:	01000004 	tsteq	r0, r4
     4bc:	05cb1218 	strbeq	r1, [fp, #536]	; 0x218
     4c0:	91030000 	mrsls	r0, (UNDEF: 3)
     4c4:	db0d7df0 	blle	35fc8c <__RAM_SIZE+0x25fc8c>
     4c8:	01000002 	tsteq	r0, r2
     4cc:	00741219 	rsbseq	r1, r4, r9, lsl r2
     4d0:	02380000 	eorseq	r0, r8, #0
     4d4:	02320000 	eorseq	r0, r2, #0
     4d8:	1e0d0000 	cdpne	0, 0, cr0, cr13, cr0, {0}
     4dc:	01000000 	mrseq	r0, (UNDEF: 0)
     4e0:	0074121a 	rsbseq	r1, r4, sl, lsl r2
     4e4:	02650000 	rsbeq	r0, r5, #0
     4e8:	02610000 	rsbeq	r0, r1, #0
     4ec:	240d0000 	strcs	r0, [sp], #-0
     4f0:	01000000 	mrseq	r0, (UNDEF: 0)
     4f4:	006d091b 	rsbeq	r0, sp, fp, lsl r9
     4f8:	028b0000 	addeq	r0, fp, #0
     4fc:	02830000 	addeq	r0, r3, #0
     500:	00190000 	andseq	r0, r9, r0
     504:	31000000 	mrscc	r0, (UNDEF: 0)
     508:	1a000005 	bne	524 <__STACKSEAL_SIZE+0x524>
     50c:	20010069 	andcs	r0, r1, r9, rrx
     510:	00006d12 	andeq	r6, r0, r2, lsl sp
     514:	0002c300 	andeq	ip, r2, r0, lsl #6
     518:	0002bf00 	andeq	fp, r2, r0, lsl #30
     51c:	088c1100 	stmeq	ip, {r8, ip}
     520:	06ac1000 	strteq	r1, [ip], r0
     524:	01100000 	tsteq	r0, r0
     528:	a8030550 	stmdage	r3, {r4, r6, r8, sl}
     52c:	00100058 	andseq	r0, r0, r8, asr r0
     530:	08540f00 	ldmdaeq	r4, {r8, r9, sl, fp}^
     534:	06f51000 	ldrbteq	r1, [r5], r0
     538:	05510000 	ldrbeq	r0, [r1, #-0]
     53c:	01100000 	tsteq	r0, r0
     540:	007d0250 	rsbseq	r0, sp, r0, asr r2
     544:	01510110 	cmpeq	r1, r0, lsl r1
     548:	52011030 	andpl	r1, r1, #48	; 0x30
     54c:	01000a03 	tsteq	r0, r3, lsl #20
     550:	08580e00 	ldmdaeq	r8, {r9, sl, fp}^
     554:	07021000 	streq	r1, [r2, -r0]
     558:	5e0e0000 	cdppl	0, 0, cr0, cr14, cr0, {0}
     55c:	10100008 	andsne	r0, r0, r8
     560:	0f000007 	svceq	0x00000007
     564:	1000086a 	andne	r0, r0, sl, ror #16
     568:	0000071e 	andeq	r0, r0, lr, lsl r7
     56c:	00000583 	andeq	r0, r0, r3, lsl #11
     570:	02500110 	subseq	r0, r0, #16, 2
     574:	0110007d 	tsteq	r0, sp, ror r0
     578:	40080251 	andmi	r0, r8, r1, asr r2
     57c:	02520110 	subseq	r0, r2, #16, 2
     580:	0f000074 	svceq	0x00000074
     584:	10000874 	andne	r0, r0, r4, ror r8
     588:	000006ac 	andeq	r0, r0, ip, lsr #13
     58c:	0000059a 	muleq	r0, sl, r5
     590:	05500110 	ldrbeq	r0, [r0, #-272]	; 0xfffffef0
     594:	00589803 	subseq	r9, r8, r3, lsl #16
     598:	800f0010 	andhi	r0, pc, r0, lsl r0	; <UNPREDICTABLE>
     59c:	ac100008 	ldcge	0, cr0, [r0], {8}
     5a0:	b7000006 	strlt	r0, [r0, -r6]
     5a4:	10000005 	andne	r0, r0, r5
     5a8:	03055001 	movweq	r5, #20481	; 0x5001
     5ac:	1000587c 	andne	r5, r0, ip, ror r8
     5b0:	02510110 	subseq	r0, r1, #16, 2
     5b4:	11000075 	tstne	r0, r5, ror r0
     5b8:	10000898 	mulne	r0, r8, r8
     5bc:	00000691 	muleq	r0, r1, r6
     5c0:	05500110 	ldrbeq	r0, [r0, #-272]	; 0xfffffef0
     5c4:	0058b003 	subseq	fp, r8, r3
     5c8:	09000010 	stmdbeq	r0, {r4}
     5cc:	00000074 	andeq	r0, r0, r4, ror r0
     5d0:	000005db 	ldrdeq	r0, [r0], -fp
     5d4:	00007417 	andeq	r7, r0, r7, lsl r4
     5d8:	15003f00 	strne	r3, [r0, #-3840]	; 0xfffff100
     5dc:	00026301 	andeq	r6, r2, r1, lsl #6
     5e0:	06130100 	ldreq	r0, [r3], -r0, lsl #2
     5e4:	00000001 	andeq	r0, r0, r1
     5e8:	00000000 	andeq	r0, r0, r0
     5ec:	0002e200 	andeq	lr, r2, r0, lsl #4
     5f0:	061a0100 	ldreq	r0, [sl], -r0, lsl #2
     5f4:	4e160000 	cdpmi	0, 1, cr0, cr6, cr0, {0}
     5f8:	2a000000 	bcs	600 <__STACKSEAL_SIZE+0x600>
     5fc:	01000006 	tsteq	r0, r6
     600:	00000305 	andeq	r0, r0, r5, lsl #6
     604:	00110000 	andseq	r0, r1, r0
     608:	91000000 	mrsls	r0, (UNDEF: 0)
     60c:	10000006 	andne	r0, r0, r6
     610:	03055001 	movweq	r5, #20481	; 0x5001
     614:	00000000 	andeq	r0, r0, r0
     618:	97090000 	strls	r0, [r9, -r0]
     61c:	2a000000 	bcs	624 <__STACKSEAL_SIZE+0x624>
     620:	17000006 	strne	r0, [r0, -r6]
     624:	00000074 	andeq	r0, r0, r4, ror r0
     628:	1a06000f 	bne	18066c <__RAM_SIZE+0x8066c>
     62c:	15000006 	strne	r0, [r0, #-6]
     630:	00017d01 	andeq	r7, r1, r1, lsl #26
     634:	060f0100 	streq	r0, [pc], -r0, lsl #2
     638:	00000001 	andeq	r0, r0, r1
     63c:	00000000 	andeq	r0, r0, r0
     640:	00030200 	andeq	r0, r3, r0, lsl #4
     644:	066e0100 	strbteq	r0, [lr], -r0, lsl #2
     648:	4e160000 	cdpmi	0, 1, cr0, cr6, cr0, {0}
     64c:	7e000000 	cdpvc	0, 0, cr0, cr0, cr0, {0}
     650:	01000006 	tsteq	r0, r6
     654:	00000305 	andeq	r0, r0, r5, lsl #6
     658:	00110000 	andseq	r0, r1, r0
     65c:	91000000 	mrsls	r0, (UNDEF: 0)
     660:	10000006 	andne	r0, r0, r6
     664:	03055001 	movweq	r5, #20481	; 0x5001
     668:	00000000 	andeq	r0, r0, r0
     66c:	97090000 	strls	r0, [r9, -r0]
     670:	7e000000 	cdpvc	0, 0, cr0, cr0, cr0, {0}
     674:	17000006 	strne	r0, [r0, -r6]
     678:	00000074 	andeq	r0, r0, r4, ror r0
     67c:	6e060019 	mcrvs	0, 0, r0, cr6, cr9, {0}
     680:	1b000006 	blne	6a0 <__STACKSEAL_SIZE+0x6a0>
     684:	006c0101 	rsbeq	r0, ip, r1, lsl #2
     688:	006c0000 	rsbeq	r0, ip, r0
     68c:	07060000 	streq	r0, [r6, -r0]
     690:	01011c06 	tsteq	r1, r6, lsl #24
     694:	00000088 	andeq	r0, r0, r8, lsl #1
     698:	0000007e 	andeq	r0, r0, lr, ror r0
     69c:	011b0009 	tsteq	fp, r9
     6a0:	00028601 	andeq	r8, r2, r1, lsl #12
     6a4:	00028600 	andeq	r8, r2, r0, lsl #12
     6a8:	06480700 	strbeq	r0, [r8], -r0, lsl #14
     6ac:	ba01011b 	blt	40b20 <__HEAP_SIZE+0x3fb20>
     6b0:	ba000005 	blt	6cc <__STACKSEAL_SIZE+0x6cc>
     6b4:	08000005 	stmdaeq	r0, {r0, r2}
     6b8:	011d05c8 	tsteq	sp, r8, asr #11
     6bc:	0002f301 	andeq	pc, r2, r1, lsl #6
     6c0:	0002f300 	andeq	pc, r2, r0, lsl #6
     6c4:	017e0500 	cmneq	lr, r0, lsl #10
     6c8:	01011d10 	tsteq	r1, r0, lsl sp
     6cc:	0000003a 	andeq	r0, r0, sl, lsr r0
     6d0:	0000003a 	andeq	r0, r0, sl, lsr r0
     6d4:	0605ec05 	streq	lr, [r5], -r5, lsl #24
     6d8:	bc01011d 	stflts	f0, [r1], {29}
     6dc:	bc000002 	stclt	0, cr0, [r0], {2}
     6e0:	05000002 	streq	r0, [r0, #-2]
     6e4:	1b060358 	blne	18144c <__RAM_SIZE+0x8144c>
     6e8:	02730101 	rsbseq	r0, r3, #1073741824	; 0x40000000
     6ec:	02730000 	rsbseq	r0, r3, #0
     6f0:	2a010000 	bcs	406f8 <__HEAP_SIZE+0x3f6f8>
     6f4:	01011c11 	tsteq	r1, r1, lsl ip
     6f8:	000001a1 	andeq	r0, r0, r1, lsr #3
     6fc:	00000197 	muleq	r0, r7, r1
     700:	011b0009 	tsteq	fp, r9
     704:	0002c701 	andeq	ip, r2, r1, lsl #14
     708:	0002c700 	andeq	ip, r2, r0, lsl #14
     70c:	0e4c0700 	cdpeq	7, 4, cr0, cr12, cr0, {0}
     710:	0a01011b 	beq	40b84 <__HEAP_SIZE+0x3fb84>
     714:	0a000000 	beq	71c <__STACKSEAL_SIZE+0x71c>
     718:	07000000 	streq	r0, [r0, -r0]
     71c:	011b0e4d 	tsteq	fp, sp, asr #28
     720:	00023401 	andeq	r3, r2, r1, lsl #8
     724:	00023400 	andeq	r3, r2, r0, lsl #8
     728:	064a0700 	strbeq	r0, [sl], -r0, lsl #14
     72c:	0004e500 	andeq	lr, r4, r0, lsl #10
     730:	bc000200 	sfmlt	f0, 4, [r0], {-0}
     734:	04000001 	streq	r0, [r0], #-1
     738:	0000bf01 	andeq	fp, r0, r1, lsl #30
     73c:	03050c00 	movweq	r0, #23552	; 0x5c00
     740:	01a80000 			; <UNDEFINED> instruction: 0x01a80000
     744:	00800000 	addeq	r0, r0, r0
	...
     750:	04340000 	ldrteq	r0, [r4], #-0
     754:	01020000 	mrseq	r0, (UNDEF: 2)
     758:	00008f06 	andeq	r8, r0, r6, lsl #30
     75c:	00000300 	andeq	r0, r0, r0, lsl #6
     760:	2b020000 	blcs	80768 <__HEAP_SIZE+0x7f768>
     764:	00003c18 	andeq	r3, r0, r8, lsl ip
     768:	08010200 	stmdaeq	r1, {r9}
     76c:	0000008d 	andeq	r0, r0, sp, lsl #1
     770:	a5050202 	strge	r0, [r5, #-514]	; 0xfffffdfe
     774:	02000002 	andeq	r0, r0, #2
     778:	00ac0702 	adceq	r0, ip, r2, lsl #14
     77c:	04020000 	streq	r0, [r2], #-0
     780:	00025a05 	andeq	r5, r2, r5, lsl #20
     784:	037d0300 	cmneq	sp, #0, 6
     788:	4f020000 	svcmi	0x00020000
     78c:	00006419 	andeq	r6, r0, r9, lsl r4
     790:	07040200 	streq	r0, [r4, -r0, lsl #4]
     794:	00000218 	andeq	r0, r0, r8, lsl r2
     798:	55050802 	strpl	r0, [r5, #-2050]	; 0xfffff7fe
     79c:	02000002 	andeq	r0, r0, #2
     7a0:	02130708 	andseq	r0, r3, #8, 14	; 0x200000
     7a4:	04040000 	streq	r0, [r4], #-0
     7a8:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
     7ac:	07040200 	streq	r0, [r4, -r0, lsl #4]
     7b0:	0000021d 	andeq	r0, r0, sp, lsl r2
     7b4:	00000203 	andeq	r0, r0, r3, lsl #4
     7b8:	13180300 	tstne	r8, #0, 6
     7bc:	00000030 	andeq	r0, r0, r0, lsr r0
     7c0:	00008705 	andeq	r8, r0, r5, lsl #14
     7c4:	037f0300 	cmneq	pc, #0, 6
     7c8:	30030000 	andcc	r0, r3, r0
     7cc:	00005814 	andeq	r5, r0, r4, lsl r8
     7d0:	00980500 	addseq	r0, r8, r0, lsl #10
     7d4:	a4060000 	strge	r0, [r6], #-0
     7d8:	07000000 	streq	r0, [r0, -r0]
     7dc:	f804027c 			; <UNDEFINED> instruction: 0xf804027c
     7e0:	03b30901 			; <UNDEFINED> instruction: 0x03b30901
     7e4:	37080000 	strcc	r0, [r8, -r0]
     7e8:	04000003 	streq	r0, [r0], #-3
     7ec:	a91201fa 	ldmdbge	r2, {r1, r3, r4, r5, r6, r7, r8}
     7f0:	02000000 	andeq	r0, r0, #0
     7f4:	d3080023 	movwle	r0, #32803	; 0x8023
     7f8:	04000003 	streq	r0, [r0], #-3
     7fc:	a41201fb 	ldrge	r0, [r2], #-507	; 0xfffffe05
     800:	02000000 	andeq	r0, r0, #0
     804:	c9080423 	stmdbgt	r8, {r0, r1, r5, sl}
     808:	04000003 	streq	r0, [r0], #-3
     80c:	a41201fc 	ldrge	r0, [r2], #-508	; 0xfffffe04
     810:	02000000 	andeq	r0, r0, #0
     814:	d8080823 	stmdale	r8, {r0, r1, r5, fp}
     818:	04000003 	streq	r0, [r0], #-3
     81c:	a41201fd 	ldrge	r0, [r2], #-509	; 0xfffffe03
     820:	02000000 	andeq	r0, r0, #0
     824:	53090c23 	movwpl	r0, #39971	; 0x9c23
     828:	04005243 	streq	r5, [r0], #-579	; 0xfffffdbd
     82c:	a41201fe 	ldrge	r0, [r2], #-510	; 0xfffffe02
     830:	02000000 	andeq	r0, r0, #0
     834:	43091023 	movwmi	r1, #36899	; 0x9023
     838:	04005243 	streq	r5, [r0], #-579	; 0xfffffdbd
     83c:	a41201ff 	ldrge	r0, [r2], #-511	; 0xfffffe01
     840:	02000000 	andeq	r0, r0, #0
     844:	77081423 	strvc	r1, [r8, -r3, lsr #8]
     848:	04000004 	streq	r0, [r0], #-4
     84c:	c3120200 	tstgt	r2, #0, 4
     850:	02000003 	andeq	r0, r0, #3
     854:	4a081823 	bmi	2068e8 <__RAM_SIZE+0x1068e8>
     858:	04000004 	streq	r0, [r0], #-4
     85c:	a4120201 	ldrge	r0, [r2], #-513	; 0xfffffdff
     860:	02000000 	andeq	r0, r0, #0
     864:	f0082423 			; <UNDEFINED> instruction: 0xf0082423
     868:	04000003 	streq	r0, [r0], #-3
     86c:	a4120202 	ldrge	r0, [r2], #-514	; 0xfffffdfe
     870:	02000000 	andeq	r0, r0, #0
     874:	a3082823 	movwge	r2, #34851	; 0x8823
     878:	04000004 	streq	r0, [r0], #-4
     87c:	a4120203 	ldrge	r0, [r2], #-515	; 0xfffffdfd
     880:	02000000 	andeq	r0, r0, #0
     884:	de082c23 	cdple	12, 0, cr2, cr8, cr3, {1}
     888:	04000003 	streq	r0, [r0], #-3
     88c:	a4120204 	ldrge	r0, [r2], #-516	; 0xfffffdfc
     890:	02000000 	andeq	r0, r0, #0
     894:	e3083023 	movw	r3, #32803	; 0x8023
     898:	04000003 	streq	r0, [r0], #-3
     89c:	a4120205 	ldrge	r0, [r2], #-517	; 0xfffffdfb
     8a0:	02000000 	andeq	r0, r0, #0
     8a4:	78083423 	stmdavc	r8, {r0, r1, r5, sl, ip, sp}
     8a8:	04000003 	streq	r0, [r0], #-3
     8ac:	a4120206 	ldrge	r0, [r2], #-518	; 0xfffffdfa
     8b0:	02000000 	andeq	r0, r0, #0
     8b4:	67083823 	strvs	r3, [r8, -r3, lsr #16]
     8b8:	04000004 	streq	r0, [r0], #-4
     8bc:	a4120207 	ldrge	r0, [r2], #-519	; 0xfffffdf9
     8c0:	02000000 	andeq	r0, r0, #0
     8c4:	44083c23 	strmi	r3, [r8], #-3107	; 0xfffff3dd
     8c8:	04000003 	streq	r0, [r0], #-3
     8cc:	dd120208 	lfmle	f0, 4, [r2, #-32]	; 0xffffffe0
     8d0:	02000003 	andeq	r0, r0, #3
     8d4:	91084023 	tstls	r8, r3, lsr #32
     8d8:	04000003 	streq	r0, [r0], #-3
     8dc:	a9120209 	ldmdbge	r2, {r0, r3, r9}
     8e0:	02000000 	andeq	r0, r0, #0
     8e4:	8e084823 	cdphi	8, 0, cr4, cr8, cr3, {1}
     8e8:	04000004 	streq	r0, [r0], #-4
     8ec:	a912020a 	ldmdbge	r2, {r1, r3, r9}
     8f0:	02000000 	andeq	r0, r0, #0
     8f4:	68084c23 	stmdavs	r8, {r0, r1, r5, sl, fp, lr}
     8f8:	04000003 	streq	r0, [r0], #-3
     8fc:	f712020b 			; <UNDEFINED> instruction: 0xf712020b
     900:	02000003 	andeq	r0, r0, #3
     904:	95085023 	strls	r5, [r8, #-35]	; 0xffffffdd
     908:	04000004 	streq	r0, [r0], #-4
     90c:	1112020c 	tstne	r2, ip, lsl #4
     910:	02000004 	andeq	r0, r0, #4
     914:	31086023 	tstcc	r8, r3, lsr #32
     918:	04000003 	streq	r0, [r0], #-3
     91c:	a912020d 	ldmdbge	r2, {r0, r2, r3, r9}
     920:	02000000 	andeq	r0, r0, #0
     924:	43097823 	movwmi	r7, #38947	; 0x9823
     928:	04005254 	streq	r5, [r0], #-596	; 0xfffffdac
     92c:	a912020e 	ldmdbge	r2, {r1, r2, r3, r9}
     930:	02000000 	andeq	r0, r0, #0
     934:	e9087c23 	stmdb	r8, {r0, r1, r5, sl, fp, ip, sp, lr}
     938:	04000003 	streq	r0, [r0], #-3
     93c:	a912020f 	ldmdbge	r2, {r0, r1, r2, r3, r9}
     940:	03000000 	movweq	r0, #0
     944:	08018023 	stmdaeq	r1, {r0, r1, r5, pc}
     948:	000003a0 	andeq	r0, r0, r0, lsr #7
     94c:	12021004 	andne	r1, r2, #4
     950:	000000a4 	andeq	r0, r0, r4, lsr #1
     954:	01842303 	orreq	r2, r4, r3, lsl #6
     958:	00049d08 	andeq	r9, r4, r8, lsl #26
     95c:	02110400 	andseq	r0, r1, #0, 8
     960:	0000a412 	andeq	sl, r0, r2, lsl r4
     964:	88230300 	stmdahi	r3!, {r8, r9}
     968:	03f50801 	mvnseq	r0, #65536	; 0x10000
     96c:	12040000 	andne	r0, r4, #0
     970:	00a41202 	adceq	r1, r4, r2, lsl #4
     974:	23030000 	movwcs	r0, #12288	; 0x3000
     978:	3508018c 	strcc	r0, [r8, #-396]	; 0xfffffe74
     97c:	04000004 	streq	r0, [r0], #-4
     980:	16120213 			; <UNDEFINED> instruction: 0x16120213
     984:	03000004 	movweq	r0, #4
     988:	08019023 	stmdaeq	r1, {r0, r1, r5, ip, pc}
     98c:	0000046c 	andeq	r0, r0, ip, ror #8
     990:	12021404 	andne	r1, r2, #4, 8	; 0x4000000
     994:	000000a4 	andeq	r0, r0, r4, lsr #1
     998:	01e42303 	mvneq	r2, r3, lsl #6
     99c:	0003ce08 	andeq	ip, r3, r8, lsl #28
     9a0:	02150400 	andseq	r0, r5, #0, 8
     9a4:	0000a412 	andeq	sl, r0, r2, lsl r4
     9a8:	e8230300 	stmda	r3!, {r8, r9}
     9ac:	040d0801 	streq	r0, [sp], #-2049	; 0xfffff7ff
     9b0:	16040000 	strne	r0, [r4], -r0
     9b4:	04261202 	strteq	r1, [r6], #-514	; 0xfffffdfe
     9b8:	23030000 	movwcs	r0, #12288	; 0x3000
     9bc:	240801ec 	strcs	r0, [r8], #-492	; 0xfffffe14
     9c0:	04000003 	streq	r0, [r0], #-3
     9c4:	a4120217 	ldrge	r0, [r2], #-535	; 0xfffffde9
     9c8:	03000000 	movweq	r0, #0
     9cc:	08048023 	stmdaeq	r4, {r0, r1, r5, pc}
     9d0:	00000417 	andeq	r0, r0, r7, lsl r4
     9d4:	12021804 	andne	r1, r2, #4, 16	; 0x40000
     9d8:	00000436 	andeq	r0, r0, r6, lsr r4
     9dc:	04842303 	streq	r2, [r4], #771	; 0x303
     9e0:	0003fb08 	andeq	pc, r3, r8, lsl #22
     9e4:	02190400 	andseq	r0, r9, #0, 8
     9e8:	0000a912 	andeq	sl, r0, r2, lsl r9
     9ec:	c0230300 	eorgt	r0, r3, r0, lsl #6
     9f0:	04010804 	streq	r0, [r1], #-2052	; 0xfffff7fc
     9f4:	1a040000 	bne	1009fc <__RAM_SIZE+0x9fc>
     9f8:	00a91202 	adceq	r1, r9, r2, lsl #4
     9fc:	23030000 	movwcs	r0, #12288	; 0x3000
     a00:	070804c4 	streq	r0, [r8, -r4, asr #9]
     a04:	04000004 	streq	r0, [r0], #-4
     a08:	a912021b 	ldmdbge	r2, {r0, r1, r3, r4, r9}
     a0c:	03000000 	movweq	r0, #0
     a10:	0804c823 	stmdaeq	r4, {r0, r1, r5, fp, lr, pc}
     a14:	00000421 	andeq	r0, r0, r1, lsr #8
     a18:	12021c04 	andne	r1, r2, #4, 24	; 0x400
     a1c:	00000446 	andeq	r0, r0, r6, asr #8
     a20:	04cc2303 	strbeq	r2, [ip], #771	; 0x303
     a24:	00037008 	andeq	r7, r3, r8
     a28:	021d0400 	andseq	r0, sp, #0, 8
     a2c:	0000a412 	andeq	sl, r0, r2, lsl r4
     a30:	d0230300 	eorle	r0, r3, r0, lsl #6
     a34:	042b0804 	strteq	r0, [fp], #-2052	; 0xfffff7fc
     a38:	1e040000 	cdpne	0, 0, cr0, cr4, cr0, {0}
     a3c:	04461202 	strbeq	r1, [r6], #-514	; 0xfffffdfe
     a40:	23030000 	movwcs	r0, #12288	; 0x3000
     a44:	590804d4 	stmdbpl	r8, {r2, r4, r6, r7, sl}
     a48:	04000004 	streq	r0, [r0], #-4
     a4c:	a412021f 	ldrge	r0, [r2], #-543	; 0xfffffde1
     a50:	03000000 	movweq	r0, #0
     a54:	0804d823 	stmdaeq	r4, {r0, r1, r5, fp, ip, lr, pc}
     a58:	00000329 	andeq	r0, r0, r9, lsr #6
     a5c:	12022004 	andne	r2, r2, #4
     a60:	000000a4 	andeq	r0, r0, r4, lsr #1
     a64:	04dc2303 	ldrbeq	r2, [ip], #771	; 0x303
     a68:	00046108 	andeq	r6, r4, r8, lsl #2
     a6c:	02210400 	eoreq	r0, r1, #0, 8
     a70:	0000a412 	andeq	sl, r0, r2, lsl r4
     a74:	e0230300 	eor	r0, r3, r0, lsl #6
     a78:	03b70804 			; <UNDEFINED> instruction: 0x03b70804
     a7c:	22040000 	andcs	r0, r4, #0
     a80:	00a41202 	adceq	r1, r4, r2, lsl #4
     a84:	23030000 	movwcs	r0, #12288	; 0x3000
     a88:	980804e4 	stmdals	r8, {r2, r5, r6, r7, sl}
     a8c:	04000003 	streq	r0, [r0], #-3
     a90:	a4120223 	ldrge	r0, [r2], #-547	; 0xfffffddd
     a94:	03000000 	movweq	r0, #0
     a98:	0804e823 	stmdaeq	r4, {r0, r1, r5, fp, sp, lr, pc}
     a9c:	00000471 	andeq	r0, r0, r1, ror r4
     aa0:	12022404 	andne	r2, r2, #4, 8	; 0x4000000
     aa4:	000000a4 	andeq	r0, r0, r4, lsr #1
     aa8:	04ec2303 	strbteq	r2, [ip], #771	; 0x303
     aac:	00045008 	andeq	r5, r4, r8
     ab0:	02250400 	eoreq	r0, r5, #0, 8
     ab4:	0000a412 	andeq	sl, r0, r2, lsl r4
     ab8:	f0230300 			; <UNDEFINED> instruction: 0xf0230300
     abc:	034b0804 	movteq	r0, #47108	; 0xb804
     ac0:	26040000 	strcs	r0, [r4], -r0
     ac4:	00a41202 	adceq	r1, r4, r2, lsl #4
     ac8:	23030000 	movwcs	r0, #12288	; 0x3000
     acc:	3d0804f4 	cfstrscc	mvf0, [r8, #-976]	; 0xfffffc30
     ad0:	04000003 	streq	r0, [r0], #-3
     ad4:	a4120227 	ldrge	r0, [r2], #-551	; 0xfffffdd9
     ad8:	03000000 	movweq	r0, #0
     adc:	0004f823 	andeq	pc, r4, r3, lsr #16
     ae0:	0000930a 	andeq	r9, r0, sl, lsl #6
     ae4:	0003c300 	andeq	ip, r3, r0, lsl #6
     ae8:	00800b00 	addeq	r0, r0, r0, lsl #22
     aec:	000b0000 	andeq	r0, fp, r0
     af0:	0003b305 	andeq	fp, r3, r5, lsl #6
     af4:	00a90a00 	adceq	r0, r9, r0, lsl #20
     af8:	03d80000 	bicseq	r0, r8, #0
     afc:	800b0000 	andhi	r0, fp, r0
     b00:	01000000 	mrseq	r0, (UNDEF: 0)
     b04:	03c80600 	biceq	r0, r8, #0, 12
     b08:	d8050000 	stmdale	r5, {}	; <UNPREDICTABLE>
     b0c:	0a000003 	beq	b20 <__Vectors_Size+0x360>
     b10:	000000a9 	andeq	r0, r0, r9, lsr #1
     b14:	000003f2 	strdeq	r0, [r0], -r2
     b18:	0000800b 	andeq	r8, r0, fp
     b1c:	06000300 	streq	r0, [r0], -r0, lsl #6
     b20:	000003e2 	andeq	r0, r0, r2, ror #7
     b24:	0003f205 	andeq	pc, r3, r5, lsl #4
     b28:	00a90a00 	adceq	r0, r9, r0, lsl #20
     b2c:	040c0000 	streq	r0, [ip], #-0
     b30:	800b0000 	andhi	r0, fp, r0
     b34:	05000000 	streq	r0, [r0, #-0]
     b38:	03fc0600 	mvnseq	r0, #0, 12
     b3c:	0c050000 	stceq	0, cr0, [r5], {-0}
     b40:	0a000004 	beq	b58 <__Vectors_Size+0x398>
     b44:	00000098 	muleq	r0, r8, r0
     b48:	00000426 	andeq	r0, r0, r6, lsr #8
     b4c:	0000800b 	andeq	r8, r0, fp
     b50:	0a001400 	beq	5b58 <__HEAP_SIZE+0x4b58>
     b54:	00000098 	muleq	r0, r8, r0
     b58:	00000436 	andeq	r0, r0, r6, lsr r4
     b5c:	0000800b 	andeq	r8, r0, fp
     b60:	0a004400 	beq	11b68 <__HEAP_SIZE+0x10b68>
     b64:	00000098 	muleq	r0, r8, r0
     b68:	00000446 	andeq	r0, r0, r6, asr #8
     b6c:	0000800b 	andeq	r8, r0, fp
     b70:	0a000e00 	beq	4378 <__HEAP_SIZE+0x3378>
     b74:	00000098 	muleq	r0, r8, r0
     b78:	00000456 	andeq	r0, r0, r6, asr r4
     b7c:	0000800b 	andeq	r8, r0, fp
     b80:	0c000000 	stceq	0, cr0, [r0], {-0}
     b84:	00000388 	andeq	r0, r0, r8, lsl #7
     b88:	03022804 	movweq	r2, #10244	; 0x2804
     b8c:	000000ae 	andeq	r0, r0, lr, lsr #1
     b90:	00047c03 	andeq	r7, r4, r3, lsl #24
     b94:	0f240500 	svceq	0x00240500
     b98:	00000474 	andeq	r0, r0, r4, ror r4
     b9c:	00046306 	andeq	r6, r4, r6, lsl #6
     ba0:	7a040d00 	bvc	103fa8 <__RAM_SIZE+0x3fa8>
     ba4:	0e000004 	cdpeq	0, 0, cr0, cr0, cr4, {0}
     ba8:	03a70f01 			; <UNDEFINED> instruction: 0x03a70f01
     bac:	29050000 	stmdbcs	r5, {}	; <UNPREDICTABLE>
     bb0:	00009811 	andeq	r9, r0, r1, lsl r8
     bb4:	0a010100 	beq	40fbc <__HEAP_SIZE+0x3ffbc>
     bb8:	0000046f 	andeq	r0, r0, pc, ror #8
     bbc:	0000049b 	muleq	r0, fp, r4
     bc0:	00008010 	andeq	r8, r0, r0, lsl r0
     bc4:	0001ef00 	andeq	lr, r1, r0, lsl #30
     bc8:	00048a06 	andeq	r8, r4, r6, lsl #20
     bcc:	03bf0f00 			; <UNDEFINED> instruction: 0x03bf0f00
     bd0:	38010000 	stmdacc	r1, {}	; <UNPREDICTABLE>
     bd4:	00049b20 	andeq	r9, r4, r0, lsr #22
     bd8:	11010100 	mrsne	r0, (UNDEF: 17)
     bdc:	0000047c 	andeq	r0, r0, ip, ror r4
     be0:	050a3e01 	streq	r3, [sl, #-3585]	; 0xfffff1ff
     be4:	00000003 	andeq	r0, r0, r3
     be8:	3f011238 	svccc	0x00011238
     bec:	01000004 	tsteq	r0, r4
     bf0:	9001064c 	andls	r0, r1, ip, asr #12
     bf4:	bc100009 	ldclt	0, cr0, [r0], {9}
     bf8:	02100009 	andseq	r0, r0, #9
     bfc:	1201007d 	andne	r0, r1, #125	; 0x7d
     c00:	00035201 	andeq	r5, r3, r1, lsl #4
     c04:	06440100 	strbeq	r0, [r4], -r0, lsl #2
     c08:	00000001 	andeq	r0, r0, r1
     c0c:	00000000 	andeq	r0, r0, r0
     c10:	007d0200 	rsbseq	r0, sp, r0, lsl #4
     c14:	1bc10001 	blne	ff040c20 <__StackTop+0xc6f40c20>
     c18:	00020000 	andeq	r0, r2, r0
     c1c:	000002ac 	andeq	r0, r0, ip, lsr #5
     c20:	00bf0104 	adcseq	r0, pc, r4, lsl #2
     c24:	8e0c0000 	cdphi	0, 0, cr0, cr12, cr0, {0}
     c28:	a8000005 	stmdage	r0, {r0, r2}
     c2c:	50000001 	andpl	r0, r0, r1
     c30:	00000001 	andeq	r0, r0, r1
     c34:	00000000 	andeq	r0, r0, r0
     c38:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
     c3c:	02000006 	andeq	r0, r0, #6
     c40:	024e0408 	subeq	r0, lr, #8, 8	; 0x8000000
     c44:	04020000 	streq	r0, [r2], #-0
     c48:	00021d07 	andeq	r1, r2, r7, lsl #26
     c4c:	06010200 	streq	r0, [r1], -r0, lsl #4
     c50:	0000008f 	andeq	r0, r0, pc, lsl #1
     c54:	8d080102 	stfhis	f0, [r8, #-8]
     c58:	02000000 	andeq	r0, r0, #0
     c5c:	02a50502 	adceq	r0, r5, #8388608	; 0x800000
     c60:	02020000 	andeq	r0, r2, #0
     c64:	0000ac07 	andeq	sl, r0, r7, lsl #24
     c68:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
     c6c:	0000025a 	andeq	r0, r0, sl, asr r2
     c70:	00005303 	andeq	r5, r0, r3, lsl #6
     c74:	07040200 	streq	r0, [r4, -r0, lsl #4]
     c78:	00000218 	andeq	r0, r0, r8, lsl r2
     c7c:	55050802 	strpl	r0, [r5, #-2050]	; 0xfffff7fe
     c80:	03000002 	movweq	r0, #2
     c84:	00000066 	andeq	r0, r0, r6, rrx
     c88:	00064c04 	andeq	r4, r6, r4, lsl #24
     c8c:	19690200 	stmdbne	r9!, {r9}^
     c90:	0000007e 	andeq	r0, r0, lr, ror r0
     c94:	13070802 	movwne	r0, #30722	; 0x7802
     c98:	05000002 	streq	r0, [r0, #-2]
     c9c:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
     ca0:	85030074 	strhi	r0, [r3, #-116]	; 0xffffff8c
     ca4:	04000000 	streq	r0, [r0], #-0
     ca8:	00000675 	andeq	r0, r0, r5, ror r6
     cac:	301ae802 	andscc	lr, sl, r2, lsl #16
     cb0:	03000000 	movweq	r0, #0
     cb4:	00000030 	andeq	r0, r0, r0, lsr r0
     cb8:	00064e04 	andeq	r4, r6, r4, lsl #28
     cbc:	143c0300 	ldrtne	r0, [ip], #-768	; 0xfffffd00
     cc0:	00000072 	andeq	r0, r0, r2, ror r0
     cc4:	00067704 	andeq	r7, r6, r4, lsl #14
     cc8:	15520300 	ldrbne	r0, [r2, #-768]	; 0xfffffd00
     ccc:	00000091 	muleq	r0, r1, r0
     cd0:	0006df04 	andeq	sp, r6, r4, lsl #30
     cd4:	1b280400 	blne	a01cdc <__RAM_SIZE+0x901cdc>
     cd8:	000000c6 	andeq	r0, r0, r6, asr #1
     cdc:	00058406 	andeq	r8, r5, r6, lsl #8
     ce0:	00060400 	andeq	r0, r6, r0, lsl #8
     ce4:	000000e0 	andeq	r0, r0, r0, ror #1
     ce8:	00063407 	andeq	r3, r6, r7, lsl #8
     cec:	0000e000 	andeq	lr, r0, r0
     cf0:	00230200 	eoreq	r0, r3, r0, lsl #4
     cf4:	04080001 	streq	r0, [r8], #-1
     cf8:	00058604 	andeq	r8, r5, r4, lsl #12
     cfc:	18630400 	stmdane	r3!, {sl}^
     d00:	000000ba 	strheq	r0, [r0], -sl
     d04:	0004e704 	andeq	lr, r4, r4, lsl #14
     d08:	17d10500 	ldrbne	r0, [r1, r0, lsl #10]
     d0c:	00000030 	andeq	r0, r0, r0, lsr r0
     d10:	0000ee03 	andeq	lr, r0, r3, lsl #28
     d14:	04080200 	streq	r0, [r8], #-512	; 0xfffffe00
     d18:	00000249 	andeq	r0, r0, r9, asr #4
     d1c:	0005cb04 	andeq	ip, r5, r4, lsl #22
     d20:	107a0100 	rsbsne	r0, sl, r0, lsl #2
     d24:	00000112 	andeq	r0, r0, r2, lsl r1
     d28:	01180409 	tsteq	r8, r9, lsl #8
     d2c:	010a0000 	mrseq	r0, (UNDEF: 10)
     d30:	00000133 	andeq	r0, r0, r3, lsr r1
     d34:	0001330b 	andeq	r3, r1, fp, lsl #6
     d38:	00e00b00 	rsceq	r0, r0, r0, lsl #22
     d3c:	ee0b0000 	cdp	0, 0, cr0, cr11, cr0, {0}
     d40:	0b000000 	bleq	d48 <__Vectors_Size+0x588>
     d44:	000000ee 	andeq	r0, r0, lr, ror #1
     d48:	08010200 	stmdaeq	r1, {r9}
     d4c:	00000096 	muleq	r0, r6, r0
     d50:	00013303 	andeq	r3, r1, r3, lsl #6
     d54:	01080c00 	tsteq	r8, r0, lsl #24
     d58:	0167097e 	smceq	28830	; 0x709e
     d5c:	660d0000 	strvs	r0, [sp], -r0
     d60:	01007463 	tsteq	r0, r3, ror #8
     d64:	01780b7f 	cmneq	r8, pc, ror fp
     d68:	23020000 	movwcs	r0, #8192	; 0x2000
     d6c:	72610d00 	rsbvc	r0, r1, #0, 26
     d70:	80010067 	andhi	r0, r1, r7, rrx
     d74:	0000e009 	andeq	lr, r0, r9
     d78:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
     d7c:	78010a00 	stmdavc	r1, {r9, fp}
     d80:	0b000001 	bleq	d8c <__Vectors_Size+0x5cc>
     d84:	00000133 	andeq	r0, r0, r3, lsr r1
     d88:	0000e00b 	andeq	lr, r0, fp
     d8c:	04090000 	streq	r0, [r9], #-0
     d90:	00000167 	andeq	r0, r0, r7, ror #2
     d94:	0006c104 	andeq	ip, r6, r4, lsl #2
     d98:	03810100 	orreq	r0, r1, #0, 2
     d9c:	0000013f 	andeq	r0, r0, pc, lsr r1
     da0:	00017e03 	andeq	r7, r1, r3, lsl #28
     da4:	64010e00 	strvs	r0, [r1], #-3584	; 0xfffff200
     da8:	01000005 	tsteq	r0, r5
     dac:	0105038a 	smlabbeq	r5, sl, r3, r0
     db0:	00000085 	andeq	r0, r0, r5, lsl #1
	...
     dbc:	00000322 	andeq	r0, r0, r2, lsr #6
     dc0:	00024c01 	andeq	r4, r2, r1, lsl #24
     dc4:	756f0f00 	strbvc	r0, [pc, #-3840]!	; fffffecc <__StackTop+0xc7effecc>
     dc8:	8a010074 	bhi	40fa0 <__HEAP_SIZE+0x3ffa0>
     dcc:	01781603 	cmneq	r8, r3, lsl #12
     dd0:	03840000 	orreq	r0, r4, #0
     dd4:	037e0000 	cmneq	lr, #0
     dd8:	610f0000 	mrsvs	r0, CPSR
     ddc:	01006772 	tsteq	r0, r2, ror r7
     de0:	e03d038a 	eors	r0, sp, sl, lsl #7
     de4:	b5000000 	strlt	r0, [r0, #-0]
     de8:	b1000003 	tstlt	r0, r3
     dec:	10000003 	andne	r0, r0, r3
     df0:	000005a9 	andeq	r0, r0, r9, lsr #11
     df4:	4e038a01 	vmlami.f32	s16, s6, s2
     df8:	0000024c 	andeq	r0, r0, ip, asr #4
     dfc:	11789102 	cmnne	r8, r2, lsl #2
     e00:	00617612 	rsbeq	r7, r1, r2, lsl r6
     e04:	0b038c01 	bleq	e3e10 <__HEAP_SIZE+0xe2e10>
     e08:	000000e2 	andeq	r0, r0, r2, ror #1
     e0c:	136c9102 	cmnne	ip, #-2147483648	; 0x80000000
     e10:	000004bf 			; <UNDEFINED> instruction: 0x000004bf
     e14:	1b038e01 	blne	e4620 <__HEAP_SIZE+0xe3620>
     e18:	0000018a 	andeq	r0, r0, sl, lsl #3
     e1c:	14649102 	strbtne	r9, [r4], #-258	; 0xfffffefe
     e20:	00746572 	rsbseq	r6, r4, r2, ror r5
     e24:	0d038f01 	stceq	15, cr8, [r3, #-4]
     e28:	0000008c 	andeq	r0, r0, ip, lsl #1
     e2c:	000003d8 	ldrdeq	r0, [r0], -r8
     e30:	000003d6 	ldrdeq	r0, [r0], -r6
     e34:	00000015 	andeq	r0, r0, r5, lsl r0
     e38:	00055f00 	andeq	r5, r5, r0, lsl #30
     e3c:	50011600 	andpl	r1, r1, r0, lsl #12
     e40:	00000305 	andeq	r0, r0, r5, lsl #6
     e44:	01160000 	tsteq	r6, r0
     e48:	54910251 	ldrpl	r0, [r1], #593	; 0x251
     e4c:	02520116 	subseq	r0, r2, #-2147483643	; 0x80000005
     e50:	0116ff09 	tsteq	r6, r9, lsl #30	; <UNPREDICTABLE>
     e54:	68910353 	ldmvs	r1, {r0, r1, r4, r6, r8, r9}
     e58:	7d021606 	stcvc	6, cr1, [r2, #-24]	; 0xffffffe8
     e5c:	6c910200 	lfmvs	f0, 4, [r1], {0}
     e60:	04090000 	streq	r0, [r9], #-0
     e64:	0000013a 	andeq	r0, r0, sl, lsr r1
     e68:	05b7010e 	ldreq	r0, [r7, #270]!	; 0x10e
     e6c:	84010000 	strhi	r0, [r1], #-0
     e70:	85010503 	strhi	r0, [r1, #-1283]	; 0xfffffafd
	...
     e7c:	eb000000 	bl	e84 <__Vectors_Size+0x6c4>
     e80:	01000003 	tsteq	r0, r3
     e84:	000002ee 	andeq	r0, r0, lr, ror #5
     e88:	0004d817 	andeq	sp, r4, r7, lsl r8
     e8c:	03840100 	orreq	r0, r4, #0, 2
     e90:	0002ee15 	andeq	lr, r2, r5, lsl lr
     e94:	00042900 	andeq	r2, r4, r0, lsl #18
     e98:	00042300 	andeq	r2, r4, r0, lsl #6
     e9c:	00241700 	eoreq	r1, r4, r0, lsl #14
     ea0:	84010000 	strhi	r0, [r1], #-0
     ea4:	00ee2403 	rsceq	r2, lr, r3, lsl #8
     ea8:	045b0000 	ldrbeq	r0, [fp], #-0
     eac:	04550000 	ldrbeq	r0, [r5], #-0
     eb0:	a9170000 	ldmdbge	r7, {}	; <UNPREDICTABLE>
     eb4:	01000005 	tsteq	r0, r5
     eb8:	4c370384 	ldcmi	3, cr0, [r7], #-528	; 0xfffffdf0
     ebc:	8d000002 	stchi	0, cr0, [r0, #-8]
     ec0:	87000004 	strhi	r0, [r0, -r4]
     ec4:	0f000004 	svceq	0x00000004
     ec8:	01006176 	tsteq	r0, r6, ror r1
     ecc:	e2470384 	sub	r0, r7, #132, 6	; 0x10000002
     ed0:	bb000000 	bllt	ed8 <__Vectors_Size+0x718>
     ed4:	b9000004 	stmdblt	r0, {r2}
     ed8:	15000004 	strne	r0, [r0, #-4]
     edc:	00000000 	andeq	r0, r0, r0
     ee0:	0000055f 	andeq	r0, r0, pc, asr r5
     ee4:	05500116 	ldrbeq	r0, [r0, #-278]	; 0xfffffeea
     ee8:	00000003 	andeq	r0, r0, r3
     eec:	51011600 	tstpl	r1, r0, lsl #12
     ef0:	5001f303 	andpl	pc, r1, r3, lsl #6
     ef4:	03520116 	cmpeq	r2, #-2147483643	; 0x80000005
     ef8:	165101f3 			; <UNDEFINED> instruction: 0x165101f3
     efc:	f3035301 	vcgt.u8	d5, d3, d1
     f00:	00005201 	andeq	r5, r0, r1, lsl #4
     f04:	01330409 	teqeq	r3, r9, lsl #8
     f08:	010e0000 	mrseq	r0, (UNDEF: 14)
     f0c:	000004df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
     f10:	05037d01 	streq	r7, [r3, #-3329]	; 0xfffff2ff
     f14:	00008501 	andeq	r8, r0, r1, lsl #10
	...
     f20:	0004ce00 	andeq	ip, r4, r0, lsl #28
     f24:	03740100 	cmneq	r4, #0, 2
     f28:	a9170000 	ldmdbge	r7, {}	; <UNPREDICTABLE>
     f2c:	01000005 	tsteq	r0, r5
     f30:	4c19037d 	ldcmi	3, cr0, [r9], {125}	; 0x7d
     f34:	0c000002 	stceq	0, cr0, [r0], {2}
     f38:	06000005 	streq	r0, [r0], -r5
     f3c:	0f000005 	svceq	0x00000005
     f40:	01006176 	tsteq	r0, r6, ror r1
     f44:	e229037d 	eor	r0, r9, #-201326591	; 0xf4000001
     f48:	3a000000 	bcc	f50 <__Vectors_Size+0x790>
     f4c:	38000005 	stmdacc	r0, {r0, r2}
     f50:	13000005 	movwne	r0, #5
     f54:	000004d8 	ldrdeq	r0, [r0], -r8
     f58:	08037f01 	stmdaeq	r3, {r0, r8, r9, sl, fp, ip, sp, lr}
     f5c:	00000374 	andeq	r0, r0, r4, ror r3
     f60:	15749102 	ldrbne	r9, [r4, #-258]!	; 0xfffffefe
     f64:	00000000 	andeq	r0, r0, r0
     f68:	0000055f 	andeq	r0, r0, pc, asr r5
     f6c:	05500116 	ldrbeq	r0, [r0, #-278]	; 0xfffffeea
     f70:	001b0103 	andseq	r0, fp, r3, lsl #2
     f74:	51011610 	tstpl	r1, r0, lsl r6
     f78:	16749102 	ldrbtne	r9, [r4], -r2, lsl #2
     f7c:	09025201 	stmdbeq	r2, {r0, r9, ip, lr}
     f80:	530116ff 	movwpl	r1, #5887	; 0x16ff
     f84:	5001f303 	andpl	pc, r1, r3, lsl #6
     f88:	33180000 	tstcc	r8, #0
     f8c:	84000001 	strhi	r0, [r0], #-1
     f90:	19000003 	stmdbne	r0, {r0, r1}
     f94:	00000030 	andeq	r0, r0, r0, lsr r0
     f98:	010e0000 	mrseq	r0, (UNDEF: 14)
     f9c:	000005b8 			; <UNDEFINED> instruction: 0x000005b8
     fa0:	05037301 	streq	r7, [r3, #-769]	; 0xfffffcff
     fa4:	00008501 	andeq	r8, r0, r1, lsl #10
	...
     fb0:	00054d00 	andeq	r4, r5, r0, lsl #26
     fb4:	04330100 	ldrteq	r0, [r3], #-256	; 0xffffff00
     fb8:	d8170000 	ldmdale	r7, {}	; <UNPREDICTABLE>
     fbc:	01000004 	tsteq	r0, r4
     fc0:	ee140373 	mrc	3, 0, r0, cr4, cr3, {3}
     fc4:	af000002 	svcge	0x00000002
     fc8:	a9000005 	stmdbge	r0, {r0, r2}
     fcc:	17000005 	strne	r0, [r0, -r5]
     fd0:	00000024 	andeq	r0, r0, r4, lsr #32
     fd4:	23037301 	movwcs	r7, #13057	; 0x3301
     fd8:	000000ee 	andeq	r0, r0, lr, ror #1
     fdc:	000005e1 	andeq	r0, r0, r1, ror #11
     fe0:	000005db 	ldrdeq	r0, [r0], -fp
     fe4:	0005a910 	andeq	sl, r5, r0, lsl r9
     fe8:	03730100 	cmneq	r3, #0, 2
     fec:	00024c36 	andeq	r4, r2, r6, lsr ip
     ff0:	78910200 	ldmvc	r1, {r9}
     ff4:	61761211 	cmnvs	r6, r1, lsl r2
     ff8:	03750100 	cmneq	r5, #0, 2
     ffc:	0000e20b 	andeq	lr, r0, fp, lsl #4
    1000:	6c910200 	lfmvs	f0, 4, [r1], {0}
    1004:	74657214 	strbtvc	r7, [r5], #-532	; 0xfffffdec
    1008:	03770100 	cmneq	r7, #0, 2
    100c:	00008c0d 	andeq	r8, r0, sp, lsl #24
    1010:	00060f00 	andeq	r0, r6, r0, lsl #30
    1014:	00060d00 	andeq	r0, r6, r0, lsl #26
    1018:	00001500 	andeq	r1, r0, r0, lsl #10
    101c:	055f0000 	ldrbeq	r0, [pc, #-0]	; 1024 <__HEAP_SIZE+0x24>
    1020:	01160000 	tsteq	r6, r0
    1024:	00030550 	andeq	r0, r3, r0, asr r5
    1028:	16000000 	strne	r0, [r0], -r0
    102c:	f3035101 	vrhadd.u8	d5, d3, d1
    1030:	01165001 	tsteq	r6, r1
    1034:	01f30352 	mvnseq	r0, r2, asr r3
    1038:	53011651 	movwpl	r1, #5713	; 0x1651
    103c:	06689103 	strbteq	r9, [r8], -r3, lsl #2
    1040:	007d0216 	rsbseq	r0, sp, r6, lsl r2
    1044:	006c9102 	rsbeq	r9, ip, r2, lsl #2
    1048:	f2010e00 	vceq.f32	d0, d1, d0
    104c:	01000005 	tsteq	r0, r5
    1050:	01050369 	tsteq	r5, r9, ror #6
    1054:	00000085 	andeq	r0, r0, r5, lsl #1
	...
    1060:	00000622 	andeq	r0, r0, r2, lsr #12
    1064:	0004cc01 	andeq	ip, r4, r1, lsl #24
    1068:	04d81700 	ldrbeq	r1, [r8], #1792	; 0x700
    106c:	69010000 	stmdbvs	r1, {}	; <UNPREDICTABLE>
    1070:	02ee1303 	rsceq	r1, lr, #201326592	; 0xc000000
    1074:	06840000 	streq	r0, [r4], r0
    1078:	067e0000 	ldrbteq	r0, [lr], -r0
    107c:	a9100000 	ldmdbge	r0, {}	; <UNPREDICTABLE>
    1080:	01000005 	tsteq	r0, r5
    1084:	4c270369 	stcmi	3, cr0, [r7], #-420	; 0xfffffe5c
    1088:	02000002 	andeq	r0, r0, #2
    108c:	12117491 	andsne	r7, r1, #-1862270976	; 0x91000000
    1090:	01006176 	tsteq	r0, r6, ror r1
    1094:	e20b036b 	and	r0, fp, #-1409286143	; 0xac000001
    1098:	02000000 	andeq	r0, r0, #0
    109c:	72146c91 	andsvc	r6, r4, #37120	; 0x9100
    10a0:	01007465 	tsteq	r0, r5, ror #8
    10a4:	8c0d036d 	stchi	3, cr0, [sp], {109}	; 0x6d
    10a8:	b2000000 	andlt	r0, r0, #0
    10ac:	b0000006 	andlt	r0, r0, r6
    10b0:	15000006 	strne	r0, [r0, #-6]
    10b4:	00000000 	andeq	r0, r0, r0
    10b8:	0000055f 	andeq	r0, r0, pc, asr r5
    10bc:	05500116 	ldrbeq	r0, [r0, #-278]	; 0xfffffeea
    10c0:	00000003 	andeq	r0, r0, r3
    10c4:	51011600 	tstpl	r1, r0, lsl #12
    10c8:	5001f303 	andpl	pc, r1, r3, lsl #6
    10cc:	02520116 	subseq	r0, r2, #-2147483643	; 0x80000005
    10d0:	0116ff09 	tsteq	r6, r9, lsl #30	; <UNPREDICTABLE>
    10d4:	5c910353 	ldcpl	3, cr0, [r1], {83}	; 0x53
    10d8:	7d021606 	stcvc	6, cr1, [r2, #-24]	; 0xffffffe8
    10dc:	60910200 	addsvs	r0, r1, r0, lsl #4
    10e0:	010e0000 	mrseq	r0, (UNDEF: 14)
    10e4:	000005ba 			; <UNDEFINED> instruction: 0x000005ba
    10e8:	05035e01 	streq	r5, [r3, #-3585]	; 0xfffff1ff
    10ec:	00008501 	andeq	r8, r0, r1, lsl #10
    10f0:	001b0c00 	andseq	r0, fp, r0, lsl #24
    10f4:	001b3810 	andseq	r3, fp, r0, lsl r8
    10f8:	0006c510 	andeq	ip, r6, r0, lsl r5
    10fc:	055f0100 	ldrbeq	r0, [pc, #-256]	; 1004 <__HEAP_SIZE+0x4>
    1100:	a9100000 	ldmdbge	r0, {}	; <UNPREDICTABLE>
    1104:	01000005 	tsteq	r0, r5
    1108:	4c18035e 	ldcmi	3, cr0, [r8], {94}	; 0x5e
    110c:	02000002 	andeq	r0, r0, #2
    1110:	12117091 	andsne	r7, r1, #145	; 0x91
    1114:	01006176 	tsteq	r0, r6, ror r1
    1118:	e20b0360 	and	r0, fp, #96, 6	; 0x80000001
    111c:	02000000 	andeq	r0, r0, #0
    1120:	d8136491 	ldmdale	r3, {r0, r4, r7, sl, sp, lr}
    1124:	01000004 	tsteq	r0, r4
    1128:	74080362 	strvc	r0, [r8], #-866	; 0xfffffc9e
    112c:	02000003 	andeq	r0, r0, #3
    1130:	72146091 	andsvc	r6, r4, #145	; 0x91
    1134:	01007465 	tsteq	r0, r5, ror #8
    1138:	8c0d0363 	stchi	3, cr0, [sp], {99}	; 0x63
    113c:	23000000 	movwcs	r0, #0
    1140:	21000007 	tstcs	r0, r7
    1144:	15000007 	strne	r0, [r0, #-7]
    1148:	10001b28 	andne	r1, r0, r8, lsr #22
    114c:	0000055f 	andeq	r0, r0, pc, asr r5
    1150:	05500116 	ldrbeq	r0, [r0, #-278]	; 0xfffffeea
    1154:	001b0103 	andseq	r0, fp, r3, lsl #2
    1158:	51011610 	tstpl	r1, r0, lsl r6
    115c:	16409102 	strbne	r9, [r0], -r2, lsl #2
    1160:	09025201 	stmdbeq	r2, {r0, r9, ip, lr}
    1164:	530116ff 	movwpl	r1, #5887	; 0x16ff
    1168:	06509103 	ldrbeq	r9, [r0], -r3, lsl #2
    116c:	007d0216 	rsbseq	r0, sp, r6, lsl r2
    1170:	00549102 	subseq	r9, r4, r2, lsl #2
    1174:	05b61a00 	ldreq	r1, [r6, #2560]!	; 0xa00
    1178:	41010000 	mrsmi	r0, (UNDEF: 1)
    117c:	85010c02 	strhi	r0, [r1, #-3074]	; 0xfffff3fe
    1180:	80000000 	andhi	r0, r0, r0
    1184:	00100014 	andseq	r0, r0, r4, lsl r0
    1188:	3610001b 			; <UNDEFINED> instruction: 0x3610001b
    118c:	01000007 	tsteq	r0, r7
    1190:	00000b7d 	andeq	r0, r0, sp, ror fp
    1194:	74756f0f 	ldrbtvc	r6, [r5], #-3855	; 0xfffff0f1
    1198:	02410100 	subeq	r0, r1, #0, 2
    119c:	00010624 	andeq	r0, r1, r4, lsr #12
    11a0:	00077700 	andeq	r7, r7, r0, lsl #14
    11a4:	00076f00 	andeq	r6, r7, r0, lsl #30
    11a8:	04d81700 	ldrbeq	r1, [r8], #1792	; 0x700
    11ac:	41010000 	mrsmi	r0, (UNDEF: 1)
    11b0:	02ee2f02 	rsceq	r2, lr, #2, 30
    11b4:	07b50000 	ldreq	r0, [r5, r0]!
    11b8:	07ab0000 	streq	r0, [fp, r0]!
    11bc:	1c170000 	ldcne	0, cr0, [r7], {-0}
    11c0:	01000006 	tsteq	r0, r6
    11c4:	fa440241 	blx	1101ad0 <__RAM_SIZE+0x1001ad0>
    11c8:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    11cc:	f7000008 			; <UNDEFINED> instruction: 0xf7000008
    11d0:	17000007 	strne	r0, [r0, -r7]
    11d4:	000005a9 	andeq	r0, r0, r9, lsr #11
    11d8:	58024101 	stmdapl	r2, {r0, r8, lr}
    11dc:	0000024c 	andeq	r0, r0, ip, asr #4
    11e0:	0000087b 	andeq	r0, r0, fp, ror r8
    11e4:	00000877 	andeq	r0, r0, r7, ror r8
    11e8:	0061761b 	rsbeq	r7, r1, fp, lsl r6
    11ec:	68024101 	stmdavs	r2, {r0, r8, lr}
    11f0:	000000e2 	andeq	r0, r0, r2, ror #1
    11f4:	1c009102 	stfned	f1, [r0], {2}
    11f8:	00000607 	andeq	r0, r0, r7, lsl #12
    11fc:	10024301 	andne	r4, r2, r1, lsl #6
    1200:	00000030 	andeq	r0, r0, r0, lsr r0
    1204:	000008b1 			; <UNDEFINED> instruction: 0x000008b1
    1208:	00000899 	muleq	r0, r9, r8
    120c:	0006d91c 	andeq	sp, r6, ip, lsl r9
    1210:	02430100 	subeq	r0, r3, #0, 2
    1214:	00003017 	andeq	r3, r0, r7, lsl r0
    1218:	00095500 	andeq	r5, r9, r0, lsl #10
    121c:	00093f00 	andeq	r3, r9, r0, lsl #30
    1220:	07131c00 	ldreq	r1, [r3, -r0, lsl #24]
    1224:	43010000 	movwmi	r0, #4096	; 0x1000
    1228:	00301e02 	eorseq	r1, r0, r2, lsl #28
    122c:	09fd0000 	ldmibeq	sp!, {}^	; <UNPREDICTABLE>
    1230:	09df0000 	ldmibeq	pc, {}^	; <UNPREDICTABLE>
    1234:	6e140000 	cdpvs	0, 1, cr0, cr4, cr0, {0}
    1238:	02430100 	subeq	r0, r3, #0, 2
    123c:	00003029 	andeq	r3, r0, r9, lsr #32
    1240:	000abb00 	andeq	fp, sl, r0, lsl #22
    1244:	000aad00 	andeq	sl, sl, r0, lsl #26
    1248:	64691400 	strbtvs	r1, [r9], #-1024	; 0xfffffc00
    124c:	44010078 	strmi	r0, [r1], #-120	; 0xffffff88
    1250:	00ee0a02 	rsceq	r0, lr, r2, lsl #20
    1254:	0b770000 	bleq	1dc125c <__RAM_SIZE+0x1cc125c>
    1258:	0b170000 	bleq	5c1260 <__RAM_SIZE+0x4c1260>
    125c:	5c1d0000 	ldcpl	0, cr0, [sp], {-0}
    1260:	7c100015 	ldcvc	0, cr0, [r0], {21}
    1264:	63100015 	tstvs	r0, #21
    1268:	12000006 	andne	r0, r0, #6
    126c:	6c010077 	stcvs	0, cr0, [r1], {119}	; 0x77
    1270:	008c1102 	addeq	r1, ip, r2, lsl #2
    1274:	50010000 	andpl	r0, r1, r0
    1278:	15a41d00 	strne	r1, [r4, #3328]!	; 0xd00
    127c:	15b81000 	ldrne	r1, [r8, #0]!
    1280:	06801000 	streq	r1, [r0], r0
    1284:	d3130000 	tstle	r3, #0
    1288:	01000006 	tsteq	r0, r6
    128c:	8c130280 	lfmhi	f0, 4, [r3], {128}	; 0x80
    1290:	01000000 	mrseq	r0, (UNDEF: 0)
    1294:	c61d0053 			; <UNDEFINED> instruction: 0xc61d0053
    1298:	b2100016 	andslt	r0, r0, #22
    129c:	73100018 	tstvc	r0, #24
    12a0:	1c000008 	stcne	0, cr0, [r0], {8}
    12a4:	000008e9 	andeq	r0, r0, r9, ror #17
    12a8:	1602b401 	strne	fp, [r2], -r1, lsl #8
    12ac:	00000030 	andeq	r0, r0, r0, lsr r0
    12b0:	00000dad 	andeq	r0, r0, sp, lsr #27
    12b4:	00000d91 	muleq	r0, r1, sp
    12b8:	0001381e 	andeq	r3, r1, lr, lsl r8
    12bc:	0006e900 	andeq	lr, r6, r0, lsl #18
    12c0:	053d1f00 	ldreq	r1, [sp, #-3840]!	; 0xfffff100
    12c4:	d6010000 	strle	r0, [r1], -r0
    12c8:	006d1d02 	rsbeq	r1, sp, r2, lsl #26
    12cc:	dc150000 	ldcle	0, cr0, [r5], {-0}
    12d0:	7c100017 	ldcvc	0, cr0, [r0], {23}
    12d4:	16000013 			; <UNDEFINED> instruction: 0x16000013
    12d8:	77025001 	strvc	r5, [r2, -r1]
    12dc:	51011600 	tstpl	r1, r0, lsl #12
    12e0:	16007802 	strne	r7, [r0], -r2, lsl #16
    12e4:	74025201 	strvc	r5, [r2], #-513	; 0xfffffdff
    12e8:	53011600 	movwpl	r1, #5632	; 0x1600
    12ec:	16007602 	strne	r7, [r0], -r2, lsl #12
    12f0:	02187d02 	andseq	r7, r8, #2, 26	; 0x80
    12f4:	0216007b 	andseq	r0, r6, #123	; 0x7b
    12f8:	75021c7d 	strvc	r1, [r2, #-3197]	; 0xfffff383
    12fc:	1d000000 	stcne	0, cr0, [r0, #-0]
    1300:	100017e8 	andne	r1, r0, r8, ror #15
    1304:	10001818 	andne	r1, r0, r8, lsl r8
    1308:	0000073e 	andeq	r0, r0, lr, lsr r7
    130c:	00053d13 	andeq	r3, r5, r3, lsl sp
    1310:	02db0100 	sbcseq	r0, fp, #0, 2
    1314:	00005a18 	andeq	r5, r0, r8, lsl sl
    1318:	15520100 	ldrbne	r0, [r2, #-256]	; 0xffffff00
    131c:	10001816 	andne	r1, r0, r6, lsl r8
    1320:	0000150f 	andeq	r1, r0, pc, lsl #10
    1324:	02500116 	subseq	r0, r0, #-2147483643	; 0x80000005
    1328:	01160077 	tsteq	r6, r7, ror r0
    132c:	00780251 	rsbseq	r0, r8, r1, asr r2
    1330:	02520116 	subseq	r0, r2, #-2147483643	; 0x80000005
    1334:	01160074 	tsteq	r6, r4, ror r0
    1338:	00760253 	rsbseq	r0, r6, r3, asr r2
    133c:	0c7d0216 	lfmeq	f0, 2, [sp], #-88	; 0xffffffa8
    1340:	16007b02 	strne	r7, [r0], -r2, lsl #22
    1344:	03107d02 	tsteq	r0, #2, 26	; 0x80
    1348:	16064891 			; <UNDEFINED> instruction: 0x16064891
    134c:	02147d02 	andseq	r7, r4, #2, 26	; 0x80
    1350:	00000075 	andeq	r0, r0, r5, ror r0
    1354:	0001201e 	andeq	r2, r1, lr, lsl r0
    1358:	00079500 	andeq	r9, r7, r0, lsl #10
    135c:	053d1c00 	ldreq	r1, [sp, #-3072]!	; 0xfffff400
    1360:	df010000 	svcle	0x00010000
    1364:	008c1702 	addeq	r1, ip, r2, lsl #14
    1368:	0e5e0000 	cdpeq	0, 5, cr0, cr14, cr0, {0}
    136c:	0e5c0000 	cdpeq	0, 5, cr0, cr12, cr0, {0}
    1370:	96150000 	ldrls	r0, [r5], -r0
    1374:	0f100017 	svceq	0x00100017
    1378:	16000015 			; <UNDEFINED> instruction: 0x16000015
    137c:	77025001 	strvc	r5, [r2, -r1]
    1380:	51011600 	tstpl	r1, r0, lsl #12
    1384:	16007802 	strne	r7, [r0], -r2, lsl #16
    1388:	74025201 	strvc	r5, [r2], #-513	; 0xfffffdff
    138c:	53011600 	movwpl	r1, #5632	; 0x1600
    1390:	16007602 	strne	r7, [r0], -r2, lsl #12
    1394:	020c7d02 	andeq	r7, ip, #2, 26	; 0x80
    1398:	0216007b 	andseq	r0, r6, #123	; 0x7b
    139c:	9103107d 	tstls	r3, sp, ror r0
    13a0:	02160648 	andseq	r0, r6, #72, 12	; 0x4800000
    13a4:	7502147d 	strvc	r1, [r2, #-1149]	; 0xfffffb83
    13a8:	1e000000 	cdpne	0, 0, cr0, cr0, cr0, {0}
    13ac:	00000108 	andeq	r0, r0, r8, lsl #2
    13b0:	000007f2 	strdeq	r0, [r0], -r2
    13b4:	00053d1c 	andeq	r3, r5, ip, lsl sp
    13b8:	02ee0100 	rsceq	r0, lr, #0, 2
    13bc:	00009d20 	andeq	r9, r0, r0, lsr #26
    13c0:	000e7500 	andeq	r7, lr, r0, lsl #10
    13c4:	000e7100 	andeq	r7, lr, r0, lsl #2
    13c8:	17401500 	strbne	r1, [r0, -r0, lsl #10]
    13cc:	150f1000 	strne	r1, [pc, #-0]	; 13d4 <__HEAP_SIZE+0x3d4>
    13d0:	01160000 	tsteq	r6, r0
    13d4:	00770250 	rsbseq	r0, r7, r0, asr r2
    13d8:	02510116 	subseq	r0, r1, #-2147483643	; 0x80000005
    13dc:	01160078 	tsteq	r6, r8, ror r0
    13e0:	00740252 	rsbseq	r0, r4, r2, asr r2
    13e4:	02530116 	subseq	r0, r3, #-2147483643	; 0x80000005
    13e8:	02160076 	andseq	r0, r6, #118	; 0x76
    13ec:	3001047d 	andcc	r0, r1, sp, ror r4
    13f0:	0c7d0216 	lfmeq	f0, 2, [sp], #-88	; 0xffffffa8
    13f4:	16007b02 	strne	r7, [r0], -r2, lsl #22
    13f8:	03107d02 	tsteq	r0, #2, 26	; 0x80
    13fc:	16064891 			; <UNDEFINED> instruction: 0x16064891
    1400:	02147d02 	andseq	r7, r4, #2, 26	; 0x80
    1404:	00000075 	andeq	r0, r0, r5, ror r0
    1408:	00186a20 	andseq	r6, r8, r0, lsr #20
    140c:	00137c10 	andseq	r7, r3, r0, lsl ip
    1410:	00083400 	andeq	r3, r8, r0, lsl #8
    1414:	50011600 	andpl	r1, r1, r0, lsl #12
    1418:	16007702 	strne	r7, [r0], -r2, lsl #14
    141c:	78025101 	stmdavc	r2, {r0, r8, ip, lr}
    1420:	52011600 	andpl	r1, r1, #0, 12
    1424:	16007402 	strne	r7, [r0], -r2, lsl #8
    1428:	76025301 	strvc	r5, [r2], -r1, lsl #6
    142c:	7d021600 	stcvc	6, cr1, [r2, #-0]
    1430:	16300108 	ldrtne	r0, [r0], -r8, lsl #2
    1434:	02187d02 	andseq	r7, r8, #2, 26	; 0x80
    1438:	0216007b 	andseq	r0, r6, #123	; 0x7b
    143c:	91031c7d 	tstls	r3, sp, ror ip
    1440:	02160648 	andseq	r0, r6, #72, 12	; 0x4800000
    1444:	7502207d 	strvc	r2, [r2, #-125]	; 0xffffff83
    1448:	94150000 	ldrls	r0, [r5], #-0
    144c:	0f100018 	svceq	0x00100018
    1450:	16000015 			; <UNDEFINED> instruction: 0x16000015
    1454:	77025001 	strvc	r5, [r2, -r1]
    1458:	51011600 	tstpl	r1, r0, lsl #12
    145c:	16007802 	strne	r7, [r0], -r2, lsl #16
    1460:	74025201 	strvc	r5, [r2], #-513	; 0xfffffdff
    1464:	53011600 	movwpl	r1, #5632	; 0x1600
    1468:	16007602 	strne	r7, [r0], -r2, lsl #12
    146c:	01047d02 	tsteq	r4, r2, lsl #26
    1470:	7d021630 	stcvc	6, cr1, [r2, #-192]	; 0xffffff40
    1474:	007b020c 	rsbseq	r0, fp, ip, lsl #4
    1478:	107d0216 	rsbsne	r0, sp, r6, lsl r2
    147c:	06489103 	strbeq	r9, [r8], -r3, lsl #2
    1480:	147d0216 	ldrbtne	r0, [sp], #-534	; 0xfffffdea
    1484:	00007502 	andeq	r7, r0, r2, lsl #10
    1488:	00f01e00 	rscseq	r1, r0, r0, lsl #28
    148c:	08ec0000 	stmiaeq	ip!, {}^	; <UNPREDICTABLE>
    1490:	6c140000 	ldcvs	0, cr0, [r4], {-0}
    1494:	03090100 	movweq	r0, #37120	; 0x9100
    1498:	00003016 	andeq	r3, r0, r6, lsl r0
    149c:	000ea800 	andeq	sl, lr, r0, lsl #16
    14a0:	000e9400 	andeq	r9, lr, r0, lsl #8
    14a4:	195e2100 	ldmdbne	lr, {r8, sp}^
    14a8:	08ab1000 	stmiaeq	fp!, {ip}
    14ac:	01160000 	tsteq	r6, r0
    14b0:	00780251 	rsbseq	r0, r8, r1, asr r2
    14b4:	02520116 	subseq	r0, r2, #-2147483643	; 0x80000005
    14b8:	01160074 	tsteq	r6, r4, ror r0
    14bc:	00760253 	rsbseq	r0, r6, r3, asr r2
    14c0:	19762100 	ldmdbne	r6!, {r8, sp}^
    14c4:	08cd1000 	stmiaeq	sp, {ip}^
    14c8:	01160000 	tsteq	r6, r0
    14cc:	20080250 	andcs	r0, r8, r0, asr r2
    14d0:	02510116 	subseq	r0, r1, #-2147483643	; 0x80000005
    14d4:	01160078 	tsteq	r6, r8, ror r0
    14d8:	7f7a0252 	svcvc	0x007a0252
    14dc:	02530116 	subseq	r0, r3, #-2147483643	; 0x80000005
    14e0:	22000076 	andcs	r0, r0, #118	; 0x76
    14e4:	100019a2 	andne	r1, r0, r2, lsr #19
    14e8:	02500116 	subseq	r0, r0, #-2147483643	; 0x80000005
    14ec:	01162008 	tsteq	r6, r8
    14f0:	00780251 	rsbseq	r0, r8, r1, asr r2
    14f4:	02520116 	subseq	r0, r2, #-2147483643	; 0x80000005
    14f8:	01167f75 	tsteq	r6, r5, ror pc
    14fc:	00760253 	rsbseq	r0, r6, r3, asr r2
    1500:	b21d0000 	andslt	r0, sp, #0
    1504:	7c100019 	ldcvc	0, cr0, [r0], {25}
    1508:	b110001a 	tstlt	r0, sl, lsl r0
    150c:	14000009 	strne	r0, [r0], #-9
    1510:	1d010070 	stcne	0, cr0, [r1, #-448]	; 0xfffffe40
    1514:	024c1503 	subeq	r1, ip, #12582912	; 0xc00000
    1518:	0f240000 	svceq	0x00240000
    151c:	0f200000 	svceq	0x00200000
    1520:	6c140000 	ldcvs	0, cr0, [r4], {-0}
    1524:	031e0100 	tsteq	lr, #0, 2
    1528:	00003016 	andeq	r3, r0, r6, lsl r0
    152c:	000f5800 	andeq	r5, pc, r0, lsl #16
    1530:	000f4200 	andeq	r4, pc, r0, lsl #4
    1534:	19642300 	stmdbne	r4!, {r8, r9, sp}^
    1538:	19ca0000 	stmibne	sl, {}^	; <UNPREDICTABLE>
    153c:	19e01000 	stmibne	r0!, {ip}^
    1540:	1e011000 	cdpne	0, 0, cr1, cr1, cr0, {0}
    1544:	09541a03 	ldmdbeq	r4, {r0, r1, r9, fp, ip}^
    1548:	82240000 	eorhi	r0, r4, #0
    154c:	e1000019 	tst	r0, r9, lsl r0
    1550:	db00000f 	blle	1594 <__HEAP_SIZE+0x594>
    1554:	2500000f 	strcs	r0, [r0, #-15]
    1558:	00001976 	andeq	r1, r0, r6, ror r9
    155c:	00198e26 	andseq	r8, r9, r6, lsr #28
    1560:	00100c00 	andseq	r0, r0, r0, lsl #24
    1564:	00100a00 	andseq	r0, r0, r0, lsl #20
    1568:	18210000 	stmdane	r1!, {}	; <UNPREDICTABLE>
    156c:	7610001a 			; <UNDEFINED> instruction: 0x7610001a
    1570:	16000009 	strne	r0, [r0], -r9
    1574:	08025001 	stmdaeq	r2, {r0, ip, lr}
    1578:	51011620 	tstpl	r1, r0, lsr #12
    157c:	16007802 	strne	r7, [r0], -r2, lsl #16
    1580:	79025201 	stmdbvc	r2, {r0, r9, ip, lr}
    1584:	5301167f 	movwpl	r1, #5759	; 0x167f
    1588:	00007602 	andeq	r7, r0, r2, lsl #12
    158c:	001a3a21 	andseq	r3, sl, r1, lsr #20
    1590:	00099210 	andeq	r9, r9, r0, lsl r2
    1594:	51011600 	tstpl	r1, r0, lsl #12
    1598:	16007802 	strne	r7, [r0], -r2, lsl #16
    159c:	75025201 	strvc	r5, [r2, #-513]	; 0xfffffdff
    15a0:	5301167f 	movwpl	r1, #5759	; 0x167f
    15a4:	00007b02 	andeq	r7, r0, r2, lsl #22
    15a8:	001a6c22 	andseq	r6, sl, r2, lsr #24
    15ac:	50011610 	andpl	r1, r1, r0, lsl r6
    15b0:	16200802 	strtne	r0, [r0], -r2, lsl #16
    15b4:	78025101 	stmdavc	r2, {r0, r8, ip, lr}
    15b8:	52011600 	andpl	r1, r1, #0, 12
    15bc:	167f7502 	ldrbtne	r7, [pc], -r2, lsl #10
    15c0:	76025301 	strvc	r5, [r2], -r1, lsl #6
    15c4:	1d000000 	stcne	0, cr0, [r0, #-0]
    15c8:	10001a7c 	andne	r1, r0, ip, ror sl
    15cc:	10001ab2 			; <UNDEFINED> instruction: 0x10001ab2
    15d0:	00000a16 	andeq	r0, r0, r6, lsl sl
    15d4:	00070d1c 	andeq	r0, r7, ip, lsl sp
    15d8:	033a0100 	teqeq	sl, #0, 2
    15dc:	000b8414 	andeq	r8, fp, r4, lsl r4
    15e0:	00102100 	andseq	r2, r0, r0, lsl #2
    15e4:	00101f00 	andseq	r1, r0, r0, lsl #30
    15e8:	1aa81500 	bne	fea069f0 <__StackTop+0xc69069f0>
    15ec:	150f1000 	strne	r1, [pc, #-0]	; 15f4 <__HEAP_SIZE+0x5f4>
    15f0:	01160000 	tsteq	r6, r0
    15f4:	00770250 	rsbseq	r0, r7, r0, asr r2
    15f8:	02510116 	subseq	r0, r1, #-2147483643	; 0x80000005
    15fc:	01160078 	tsteq	r6, r8, ror r0
    1600:	00740252 	rsbseq	r0, r4, r2, asr r2
    1604:	02530116 	subseq	r0, r3, #-2147483643	; 0x80000005
    1608:	02160076 	andseq	r0, r6, #118	; 0x76
    160c:	3001047d 	andcc	r0, r1, sp, ror r4
    1610:	087d0216 	ldmdaeq	sp!, {r1, r2, r4, r9}^
    1614:	02164001 	andseq	r4, r6, #1
    1618:	7b020c7d 	blvc	84814 <__HEAP_SIZE+0x83814>
    161c:	7d021600 	stcvc	6, cr1, [r2, #-0]
    1620:	16380110 			; <UNDEFINED> instruction: 0x16380110
    1624:	02147d02 	andseq	r7, r4, #2, 26	; 0x80
    1628:	00000075 	andeq	r0, r0, r5, ror r0
    162c:	00194627 	andseq	r4, r9, r7, lsr #12
    1630:	0014e000 	andseq	lr, r4, r0
    1634:	e0000310 	and	r0, r0, r0, lsl r3
    1638:	e6100014 			; <UNDEFINED> instruction: 0xe6100014
    163c:	01100014 	tsteq	r0, r4, lsl r0
    1640:	3f090268 	svccc	0x00090268
    1644:	2400000a 	strcs	r0, [r0], #-10
    1648:	00001958 	andeq	r1, r0, r8, asr r9
    164c:	00001037 	andeq	r1, r0, r7, lsr r0
    1650:	00001035 	andeq	r1, r0, r5, lsr r0
    1654:	19462700 	stmdbne	r6, {r8, r9, sl, sp}^
    1658:	15860000 	strne	r0, [r6]
    165c:	00001000 	andeq	r1, r0, r0
    1660:	10001586 	andne	r1, r0, r6, lsl #11
    1664:	1000158c 	andne	r1, r0, ip, lsl #11
    1668:	0b027c01 	bleq	a0674 <__HEAP_SIZE+0x9f674>
    166c:	00000a68 	andeq	r0, r0, r8, ror #20
    1670:	00195824 	andseq	r5, r9, r4, lsr #16
    1674:	00104c00 	andseq	r4, r0, r0, lsl #24
    1678:	00104a00 	andseq	r4, r0, r0, lsl #20
    167c:	ae280000 	cdpge	0, 2, cr0, cr8, cr0, {0}
    1680:	02100014 	andseq	r0, r0, #20
    1684:	0a870077 	beq	fe1c1868 <__StackTop+0xc60c1868>
    1688:	01160000 	tsteq	r6, r0
    168c:	00780251 	rsbseq	r0, r8, r1, asr r2
    1690:	02520116 	subseq	r0, r2, #-2147483643	; 0x80000005
    1694:	01160074 	tsteq	r6, r4, ror r0
    1698:	00760253 	rsbseq	r0, r6, r3, asr r2
    169c:	15582000 	ldrbne	r2, [r8, #-0]
    16a0:	18d81000 	ldmne	r8, {ip}^
    16a4:	0a9b0000 	beq	fe6c16ac <__StackTop+0xc65c16ac>
    16a8:	01160000 	tsteq	r6, r0
    16ac:	54910250 	ldrpl	r0, [r1], #592	; 0x250
    16b0:	15a02000 	strne	r2, [r0, #0]!
    16b4:	18d81000 	ldmne	r8, {ip}^
    16b8:	0aaf0000 	beq	febc16c0 <__StackTop+0xc6ac16c0>
    16bc:	01160000 	tsteq	r6, r0
    16c0:	54910250 	ldrpl	r0, [r1], #592	; 0x250
    16c4:	18e22000 	stmiane	r2!, {sp}^
    16c8:	0fa81000 	svceq	0x00a81000
    16cc:	0aeb0000 	beq	ffac16d4 <__StackTop+0xc79c16d4>
    16d0:	01160000 	tsteq	r6, r0
    16d4:	00770250 	rsbseq	r0, r7, r0, asr r2
    16d8:	02510116 	subseq	r0, r1, #-2147483643	; 0x80000005
    16dc:	01160078 	tsteq	r6, r8, ror r0
    16e0:	00740252 	rsbseq	r0, r4, r2, asr r2
    16e4:	02530116 	subseq	r0, r3, #-2147483643	; 0x80000005
    16e8:	02160076 	andseq	r0, r6, #118	; 0x76
    16ec:	7b02087d 	blvc	838e8 <__HEAP_SIZE+0x828e8>
    16f0:	7d021600 	stcvc	6, cr1, [r2, #-0]
    16f4:	4891030c 	ldmmi	r1, {r2, r3, r8, r9}
    16f8:	7d021606 	stcvc	6, cr1, [r2, #-24]	; 0xffffffe8
    16fc:	00750210 	rsbseq	r0, r5, r0, lsl r2
    1700:	19362000 	ldmdbne	r6!, {sp}
    1704:	0b891000 	bleq	fe24570c <__StackTop+0xc614570c>
    1708:	0b270000 	bleq	9c1710 <__RAM_SIZE+0x8c1710>
    170c:	01160000 	tsteq	r6, r0
    1710:	00770250 	rsbseq	r0, r7, r0, asr r2
    1714:	02510116 	subseq	r0, r1, #-2147483643	; 0x80000005
    1718:	01160078 	tsteq	r6, r8, ror r0
    171c:	00740252 	rsbseq	r0, r4, r2, asr r2
    1720:	02530116 	subseq	r0, r3, #-2147483643	; 0x80000005
    1724:	02160076 	andseq	r0, r6, #118	; 0x76
    1728:	7b02087d 	blvc	83924 <__HEAP_SIZE+0x82924>
    172c:	7d021600 	stcvc	6, cr1, [r2, #-0]
    1730:	4891030c 	ldmmi	r1, {r2, r3, r8, r9}
    1734:	7d021606 	stcvc	6, cr1, [r2, #-24]	; 0xffffffe8
    1738:	00750210 	rsbseq	r0, r5, r0, lsl r2
    173c:	1abe2100 	bne	fef89b44 <__StackTop+0xc6e89b44>
    1740:	0b491000 	bleq	1245748 <__RAM_SIZE+0x1145748>
    1744:	01160000 	tsteq	r6, r0
    1748:	25080250 	strcs	r0, [r8, #-592]	; 0xfffffdb0
    174c:	02510116 	subseq	r0, r1, #-2147483643	; 0x80000005
    1750:	01160078 	tsteq	r6, r8, ror r0
    1754:	00740252 	rsbseq	r0, r4, r2, asr r2
    1758:	02530116 	subseq	r0, r3, #-2147483643	; 0x80000005
    175c:	21000076 	tstcs	r0, r6, ror r0
    1760:	10001ad2 	ldrdne	r1, [r0], -r2
    1764:	00000b65 	andeq	r0, r0, r5, ror #22
    1768:	02510116 	subseq	r0, r1, #-2147483643	; 0x80000005
    176c:	01160078 	tsteq	r6, r8, ror r0
    1770:	00740252 	rsbseq	r0, r4, r2, asr r2
    1774:	02530116 	subseq	r0, r3, #-2147483643	; 0x80000005
    1778:	22000076 	andcs	r0, r0, #118	; 0x76
    177c:	10001af2 	strdne	r1, [r0], -r2
    1780:	01500116 	cmpeq	r0, r6, lsl r1
    1784:	51011630 	tstpl	r1, r0, lsr r6
    1788:	16007802 	strne	r7, [r0], -r2, lsl #16
    178c:	76025301 	strvc	r5, [r2], -r1, lsl #6
    1790:	02000000 	andeq	r0, r0, #0
    1794:	06460201 	strbeq	r0, [r6], -r1, lsl #4
    1798:	7d030000 	stcvc	0, cr0, [r3, #-0]
    179c:	1a00000b 	bne	17d0 <__HEAP_SIZE+0x7d0>
    17a0:	00000504 	andeq	r0, r0, r4, lsl #10
    17a4:	0f01d301 	svceq	0x0001d301
    17a8:	0000ee01 	andeq	lr, r0, r1, lsl #28
    17ac:	000cf800 	andeq	pc, ip, r0, lsl #16
    17b0:	0010e210 	andseq	lr, r0, r0, lsl r2
    17b4:	00105f10 	andseq	r5, r0, r0, lsl pc
    17b8:	0fa30100 	svceq	0x00a30100
    17bc:	6f0f0000 	svcvs	0x000f0000
    17c0:	01007475 	tsteq	r0, r5, ror r4
    17c4:	062201d3 			; <UNDEFINED> instruction: 0x062201d3
    17c8:	c1000001 	tstgt	r0, r1
    17cc:	bd000010 	stclt	0, cr0, [r0, #-64]	; 0xffffffc0
    17d0:	17000010 	smladne	r0, r0, r0, r0
    17d4:	000004d8 	ldrdeq	r0, [r0], -r8
    17d8:	2d01d301 	stccs	3, cr13, [r1, #-4]
    17dc:	000002ee 	andeq	r0, r0, lr, ror #5
    17e0:	000010e3 	andeq	r1, r0, r3, ror #1
    17e4:	000010df 	ldrdeq	r1, [r0], -pc	; <UNPREDICTABLE>
    17e8:	7864690f 	stmdavc	r4!, {r0, r1, r2, r3, r8, fp, sp, lr}^
    17ec:	01d30100 	bicseq	r0, r3, r0, lsl #2
    17f0:	0000ee3c 	andeq	lr, r0, ip, lsr lr
    17f4:	00111700 	andseq	r1, r1, r0, lsl #14
    17f8:	00110100 	andseq	r0, r1, r0, lsl #2
    17fc:	061c1700 	ldreq	r1, [ip], -r0, lsl #14
    1800:	d3010000 	movwle	r0, #4096	; 0x1000
    1804:	00ee4801 	rsceq	r4, lr, r1, lsl #16
    1808:	119c0000 	orrsne	r0, ip, r0
    180c:	11980000 	orrsne	r0, r8, r0
    1810:	3d170000 	ldccc	0, cr0, [r7, #-0]
    1814:	01000005 	tsteq	r0, r5
    1818:	295701d3 	ldmdbcs	r7, {r0, r1, r4, r6, r7, r8}^
    181c:	c6000000 	strgt	r0, [r0], -r0
    1820:	ba000011 	blt	186c <__HEAP_SIZE+0x86c>
    1824:	17000011 	smladne	r0, r1, r0, r0
    1828:	000006d3 	ldrdeq	r0, [r0], -r3
    182c:	6b01d301 	blvs	76438 <__HEAP_SIZE+0x75438>
    1830:	00000030 	andeq	r0, r0, r0, lsr r0
    1834:	00001225 	andeq	r1, r0, r5, lsr #4
    1838:	00001219 	andeq	r1, r0, r9, lsl r2
    183c:	0006d917 	andeq	sp, r6, r7, lsl r9
    1840:	01d30100 	bicseq	r0, r3, r0, lsl #2
    1844:	0000307e 	andeq	r3, r0, lr, ror r0
    1848:	00127700 	andseq	r7, r2, r0, lsl #14
    184c:	00127300 	andseq	r7, r2, r0, lsl #6
    1850:	06071700 	streq	r1, [r7], -r0, lsl #14
    1854:	d3010000 	movwle	r0, #4096	; 0x1000
    1858:	00309201 	eorseq	r9, r0, r1, lsl #4
    185c:	129f0000 	addsne	r0, pc, #0
    1860:	12970000 	addsne	r0, r7, #0
    1864:	6e1c0000 	cdpvs	0, 1, cr0, cr12, cr0, {0}
    1868:	01000005 	tsteq	r0, r5
    186c:	840e01db 	strhi	r0, [lr], #-475	; 0xfffffe25
    1870:	da00000b 	ble	18a4 <__HEAP_SIZE+0x8a4>
    1874:	d6000012 			; <UNDEFINED> instruction: 0xd6000012
    1878:	29000012 	stmdbcs	r0, {r1, r4}
    187c:	01e70108 	mvneq	r0, r8, lsl #2
    1880:	000c8603 	andeq	r8, ip, r3, lsl #12
    1884:	00552a00 	subseq	r2, r5, r0, lsl #20
    1888:	0e01e801 	cdpeq	8, 0, cr14, cr1, cr1, {0}
    188c:	000000a2 	andeq	r0, r0, r2, lsr #1
    1890:	0100462a 	tsteq	r0, sl, lsr #12
    1894:	290e01e9 	stmdbcs	lr, {r0, r3, r5, r6, r7, r8}
    1898:	00000000 	andeq	r0, r0, r0
    189c:	0006611c 	andeq	r6, r6, ip, lsl r1
    18a0:	01ea0100 	mvneq	r0, r0, lsl #2
    18a4:	000c6505 	andeq	r6, ip, r5, lsl #10
    18a8:	00131e00 	andseq	r1, r3, r0, lsl #28
    18ac:	00131a00 	andseq	r1, r3, r0, lsl #20
    18b0:	04ba1c00 	ldrteq	r1, [sl], #3072	; 0xc00
    18b4:	ed010000 	stc	0, cr0, [r1, #-0]
    18b8:	00850701 	addeq	r0, r5, r1, lsl #14
    18bc:	13560000 	cmpne	r6, #0
    18c0:	134a0000 	movtne	r0, #40960	; 0xa000
    18c4:	cc1c0000 	ldcgt	0, cr0, [ip], {-0}
    18c8:	01000004 	tsteq	r0, r4
    18cc:	850701f0 	strhi	r0, [r7, #-496]	; 0xfffffe10
    18d0:	b3000000 	movwlt	r0, #0
    18d4:	a9000013 	stmdbge	r0, {r0, r1, r4}
    18d8:	14000013 	strne	r0, [r0], #-19	; 0xffffffed
    18dc:	f301007a 	vqadd.u8	q0, <illegal reg q0.5>, q13
    18e0:	0fa31001 	svceq	0x00a31001
    18e4:	13f50000 	mvnsne	r0, #0
    18e8:	13f30000 	mvnsne	r0, #0
    18ec:	7a140000 	bvc	5018f4 <__RAM_SIZE+0x4018f4>
    18f0:	f4010032 	vst4.8	{d0-d3}, [r1 :256], r2
    18f4:	0fa31001 	svceq	0x00a31001
    18f8:	14130000 	ldrne	r0, [r3], #-0
    18fc:	140d0000 	strne	r0, [sp], #-0
    1900:	ee1c0000 	cdp	0, 1, cr0, cr12, cr0, {0}
    1904:	01000004 	tsteq	r0, r4
    1908:	301001ff 			; <UNDEFINED> instruction: 0x301001ff
    190c:	51000000 	mrspl	r0, (UNDEF: 0)
    1910:	45000014 	strmi	r0, [r0, #-20]	; 0xffffffec
    1914:	1c000014 	stcne	0, cr0, [r0], {20}
    1918:	000006d8 	ldrdeq	r0, [r0], -r8
    191c:	10021901 	andne	r1, r2, r1, lsl #18
    1920:	00000030 	andeq	r0, r0, r0, lsr r0
    1924:	000014a8 	andeq	r1, r0, r8, lsr #9
    1928:	0000149e 	muleq	r0, lr, r4
    192c:	00055a1c 	andeq	r5, r5, ip, lsl sl
    1930:	022c0100 	eoreq	r0, ip, #0, 2
    1934:	0000fa10 	andeq	pc, r0, r0, lsl sl	; <UNPREDICTABLE>
    1938:	0014ea00 	andseq	lr, r4, r0, lsl #20
    193c:	0014e800 	andseq	lr, r4, r0, lsl #16
    1940:	0d162b00 	vldreq	d2, [r6, #-0]
    1944:	1b1c1000 	blne	70594c <__RAM_SIZE+0x60594c>
    1948:	2a2b0000 	bcs	ac1950 <__RAM_SIZE+0x9c1950>
    194c:	2710000d 	ldrcs	r0, [r0, -sp]
    1950:	2b00001b 	blcs	19c4 <__HEAP_SIZE+0x9c4>
    1954:	10000d40 	andne	r0, r0, r0, asr #26
    1958:	00001b32 	andeq	r1, r0, r2, lsr fp
    195c:	000d522b 	andeq	r5, sp, fp, lsr #4
    1960:	001b3210 	andseq	r3, fp, r0, lsl r2
    1964:	0d8e2b00 	vstreq	d2, [lr]
    1968:	1b3d1000 	blne	f45970 <__RAM_SIZE+0xe45970>
    196c:	982b0000 	stmdals	fp!, {}	; <UNPREDICTABLE>
    1970:	4810000d 	ldmdami	r0, {r0, r2, r3}
    1974:	2b00001b 	blcs	19e8 <__HEAP_SIZE+0x9e8>
    1978:	10000da2 	andne	r0, r0, r2, lsr #27
    197c:	00001b53 	andeq	r1, r0, r3, asr fp
    1980:	000db22b 	andeq	fp, sp, fp, lsr #4
    1984:	001b5e10 	andseq	r5, fp, r0, lsl lr
    1988:	0dbc2b00 			; <UNDEFINED> instruction: 0x0dbc2b00
    198c:	1b481000 	blne	1205994 <__RAM_SIZE+0x1105994>
    1990:	c82b0000 	stmdagt	fp!, {}	; <UNPREDICTABLE>
    1994:	5310000d 	tstpl	r0, #13
    1998:	2b00001b 	blcs	1a0c <__HEAP_SIZE+0xa0c>
    199c:	10000dcc 	andne	r0, r0, ip, asr #27
    19a0:	00001b69 	andeq	r1, r0, r9, ror #22
    19a4:	000dd22b 	andeq	sp, sp, fp, lsr #4
    19a8:	001b3d10 	andseq	r3, fp, r0, lsl sp
    19ac:	0de02b00 			; <UNDEFINED> instruction: 0x0de02b00
    19b0:	1b481000 	blne	12059b8 <__RAM_SIZE+0x11059b8>
    19b4:	e82b0000 	stmda	fp!, {}	; <UNPREDICTABLE>
    19b8:	5310000d 	tstpl	r0, #13
    19bc:	2b00001b 	blcs	1a30 <__HEAP_SIZE+0xa30>
    19c0:	10000dec 	andne	r0, r0, ip, ror #27
    19c4:	00001b69 	andeq	r1, r0, r9, ror #22
    19c8:	000dfc2b 	andeq	pc, sp, fp, lsr #24
    19cc:	001b4810 	andseq	r4, fp, r0, lsl r8
    19d0:	0e062b00 	vmlaeq.f64	d2, d6, d0
    19d4:	1b3d1000 	blne	f459dc <__RAM_SIZE+0xe459dc>
    19d8:	102b0000 	eorne	r0, fp, r0
    19dc:	4810000e 	ldmdami	r0, {r1, r2, r3}
    19e0:	2b00001b 	blcs	1a54 <__HEAP_SIZE+0xa54>
    19e4:	10000e1c 	andne	r0, r0, ip, lsl lr
    19e8:	00001b5e 	andeq	r1, r0, lr, asr fp
    19ec:	000e282b 	andeq	r2, lr, fp, lsr #16
    19f0:	001b4810 	andseq	r4, fp, r0, lsl r8
    19f4:	0e4c2b00 	vmlaeq.f64	d18, d12, d0
    19f8:	1b531000 	blne	14c5a00 <__RAM_SIZE+0x13c5a00>
    19fc:	5e2b0000 	cdppl	0, 2, cr0, cr11, cr0, {0}
    1a00:	5e10000e 	cdppl	0, 1, cr0, cr0, cr14, {0}
    1a04:	2b00001b 	blcs	1a78 <__HEAP_SIZE+0xa78>
    1a08:	10000e6e 	andne	r0, r0, lr, ror #28
    1a0c:	00001b74 	andeq	r1, r0, r4, ror fp
    1a10:	000e762b 	andeq	r7, lr, fp, lsr #12
    1a14:	001b5310 	andseq	r5, fp, r0, lsl r3
    1a18:	0e822b00 	vdiveq.f64	d2, d2, d0
    1a1c:	1b741000 	blne	1d05a24 <__RAM_SIZE+0x1c05a24>
    1a20:	8a2b0000 	bhi	ac1a28 <__RAM_SIZE+0x9c1a28>
    1a24:	5310000e 	tstpl	r0, #14
    1a28:	2b00001b 	blcs	1a9c <__HEAP_SIZE+0xa9c>
    1a2c:	10000e96 	mulne	r0, r6, lr
    1a30:	00001b74 	andeq	r1, r0, r4, ror fp
    1a34:	000ea22b 	andeq	sl, lr, fp, lsr #4
    1a38:	001b5310 	andseq	r5, fp, r0, lsl r3
    1a3c:	0eae2b00 	vfmaeq.f64	d2, d14, d0
    1a40:	1b741000 	blne	1d05a48 <__RAM_SIZE+0x1c05a48>
    1a44:	b62b0000 	strtlt	r0, [fp], -r0
    1a48:	5310000e 	tstpl	r0, #14
    1a4c:	2b00001b 	blcs	1ac0 <__HEAP_SIZE+0xac0>
    1a50:	10000ebe 			; <UNDEFINED> instruction: 0x10000ebe
    1a54:	00001b48 	andeq	r1, r0, r8, asr #22
    1a58:	000ece2b 	andeq	ip, lr, fp, lsr #28
    1a5c:	001b2710 	andseq	r2, fp, r0, lsl r7
    1a60:	0ede2b00 	vfnmseq.f64	d18, d14, d0
    1a64:	1b741000 	blne	1d05a6c <__RAM_SIZE+0x1c05a6c>
    1a68:	062b0000 	strteq	r0, [fp], -r0
    1a6c:	7f10000f 	svcvc	0x0010000f
    1a70:	2b00001b 	blcs	1ae4 <__HEAP_SIZE+0xae4>
    1a74:	10000f18 	andne	r0, r0, r8, lsl pc
    1a78:	00001b32 	andeq	r1, r0, r2, lsr fp
    1a7c:	000f4a20 	andeq	r4, pc, r0, lsr #20
    1a80:	000fa810 	andeq	sl, pc, r0, lsl r8	; <UNPREDICTABLE>
    1a84:	000eae00 	andeq	sl, lr, r0, lsl #28
    1a88:	50011600 	andpl	r1, r1, r0, lsl #12
    1a8c:	16007a02 	strne	r7, [r0], -r2, lsl #20
    1a90:	74025101 	strvc	r5, [r2], #-257	; 0xfffffeff
    1a94:	52011600 	andpl	r1, r1, #0, 12
    1a98:	16007b02 	strne	r7, [r0], -r2, lsl #22
    1a9c:	75025301 	strvc	r5, [r2, #-769]	; 0xfffffcff
    1aa0:	7d021600 	stcvc	6, cr1, [r2, #-0]
    1aa4:	00910500 	addseq	r0, r1, r0, lsl #10
    1aa8:	162908f6 			; <UNDEFINED> instruction: 0x162908f6
    1aac:	03087d02 	movweq	r7, #36098	; 0x8d02
    1ab0:	16060891 			; <UNDEFINED> instruction: 0x16060891
    1ab4:	030c7d02 	movweq	r7, #52482	; 0xcd02
    1ab8:	16060c91 			; <UNDEFINED> instruction: 0x16060c91
    1abc:	03107d02 	tsteq	r0, #2, 26	; 0x80
    1ac0:	00061091 	muleq	r6, r1, r0
    1ac4:	0010242b 	andseq	r2, r0, fp, lsr #8
    1ac8:	001b7410 	andseq	r7, fp, r0, lsl r4
    1acc:	10342b00 	eorsne	r2, r4, r0, lsl #22
    1ad0:	1b321000 	blne	c85ad8 <__RAM_SIZE+0xb85ad8>
    1ad4:	5c200000 	stcpl	0, cr0, [r0], #-0
    1ad8:	a8100010 	ldmdage	r0, {r4}
    1adc:	0c00000f 	stceq	0, cr0, [r0], {15}
    1ae0:	1600000f 	strne	r0, [r0], -pc
    1ae4:	7a025001 	bvc	95af0 <__HEAP_SIZE+0x94af0>
    1ae8:	51011600 	tstpl	r1, r0, lsl #12
    1aec:	16007402 	strne	r7, [r0], -r2, lsl #8
    1af0:	7b025201 	blvc	962fc <__HEAP_SIZE+0x952fc>
    1af4:	53011600 	movwpl	r1, #5632	; 0x1600
    1af8:	16007502 	strne	r7, [r0], -r2, lsl #10
    1afc:	06007d02 	streq	r7, [r0], -r2, lsl #26
    1b00:	f67fa891 			; <UNDEFINED> instruction: 0xf67fa891
    1b04:	02162908 	andseq	r2, r6, #8, 18	; 0x20000
    1b08:	9103087d 	tstls	r3, sp, ror r8
    1b0c:	02160608 	andseq	r0, r6, #8, 12	; 0x800000
    1b10:	78020c7d 	stmdavc	r2, {r0, r2, r3, r4, r5, r6, sl, fp}
    1b14:	7d021600 	stcvc	6, cr1, [r2, #-0]
    1b18:	10910710 	addsne	r0, r1, r0, lsl r7
    1b1c:	f7ff0b06 			; <UNDEFINED> instruction: 0xf7ff0b06
    1b20:	7c21001a 	stcvc	0, cr0, [r1], #-104	; 0xffffff98
    1b24:	28100010 	ldmdacs	r0, {r4}
    1b28:	1600000f 	strne	r0, [r0], -pc
    1b2c:	74025101 	strvc	r5, [r2], #-257	; 0xfffffeff
    1b30:	52011600 	andpl	r1, r1, #0, 12
    1b34:	167f7802 	ldrbtne	r7, [pc], -r2, lsl #16
    1b38:	75025301 	strvc	r5, [r2, #-769]	; 0xfffffcff
    1b3c:	a6200000 	strtge	r0, [r0], -r0
    1b40:	0f100010 	svceq	0x00100010
    1b44:	84000015 	strhi	r0, [r0], #-21	; 0xffffffeb
    1b48:	1600000f 	strne	r0, [r0], -pc
    1b4c:	7a025001 	bvc	95b58 <__HEAP_SIZE+0x94b58>
    1b50:	51011600 	tstpl	r1, r0, lsl #12
    1b54:	16007402 	strne	r7, [r0], -r2, lsl #8
    1b58:	78025201 	stmdavc	r2, {r0, r9, ip, lr}
    1b5c:	53011600 	movwpl	r1, #5632	; 0x1600
    1b60:	16007502 	strne	r7, [r0], -r2, lsl #10
    1b64:	0c007d02 	stceq	13, cr7, [r0], {2}
    1b68:	264f0076 			; <UNDEFINED> instruction: 0x264f0076
    1b6c:	76270076 			; <UNDEFINED> instruction: 0x76270076
    1b70:	1c264f00 	stcne	15, cr4, [r6], #-0
    1b74:	047d0216 	ldrbteq	r0, [sp], #-534	; 0xfffffdea
    1b78:	4f007604 	svcmi	0x00007604
    1b7c:	7d021625 	stcvc	6, cr1, [r2, #-148]	; 0xffffff6c
    1b80:	163a0108 	ldrtne	r0, [sl], -r8, lsl #2
    1b84:	040c7d02 	streq	r7, [ip], #-3330	; 0xfffff2fe
    1b88:	067fb091 			; <UNDEFINED> instruction: 0x067fb091
    1b8c:	107d0216 	rsbsne	r0, sp, r6, lsl r2
    1b90:	16007702 	strne	r7, [r0], -r2, lsl #14
    1b94:	01147d02 	tsteq	r4, r2, lsl #26
    1b98:	d4220035 	strtle	r0, [r2], #-53	; 0xffffffcb
    1b9c:	16100010 			; <UNDEFINED> instruction: 0x16100010
    1ba0:	08025001 	stmdaeq	r2, {r0, ip, lr}
    1ba4:	51011620 	tstpl	r1, r0, lsr #12
    1ba8:	16007402 	strne	r7, [r0], -r2, lsl #8
    1bac:	76025201 	strvc	r5, [r2], -r1, lsl #4
    1bb0:	5301167f 	movwpl	r1, #5759	; 0x167f
    1bb4:	00007502 	andeq	r7, r0, r2, lsl #10
    1bb8:	00290300 	eoreq	r0, r9, r0, lsl #6
    1bbc:	b01a0000 	andslt	r0, sl, r0
    1bc0:	01000005 	tsteq	r0, r5
    1bc4:	010f0153 	tsteq	pc, r3, asr r1	; <UNPREDICTABLE>
    1bc8:	000000ee 	andeq	r0, r0, lr, ror #1
    1bcc:	100010e8 	andne	r1, r0, r8, ror #1
    1bd0:	1000147e 	andne	r1, r0, lr, ror r4
    1bd4:	000014fd 	strdeq	r1, [r0], -sp
    1bd8:	00135701 	andseq	r5, r3, r1, lsl #14
    1bdc:	756f0f00 	strbvc	r0, [pc, #-3840]!	; ce4 <__Vectors_Size+0x524>
    1be0:	53010074 	movwpl	r0, #4212	; 0x1074
    1be4:	01062201 	tsteq	r6, r1, lsl #4
    1be8:	155f0000 	ldrbne	r0, [pc, #-0]	; 1bf0 <__HEAP_SIZE+0xbf0>
    1bec:	155b0000 	ldrbne	r0, [fp, #-0]
    1bf0:	d8170000 	ldmdale	r7, {}	; <UNPREDICTABLE>
    1bf4:	01000004 	tsteq	r0, r4
    1bf8:	ee2d0153 	mcr	1, 1, r0, cr13, cr3, {2}
    1bfc:	83000002 	movwhi	r0, #2
    1c00:	7f000015 	svcvc	0x00000015
    1c04:	0f000015 	svceq	0x00000015
    1c08:	00786469 	rsbseq	r6, r8, r9, ror #8
    1c0c:	3c015301 	stccc	3, cr5, [r1], {1}
    1c10:	000000ee 	andeq	r0, r0, lr, ror #1
    1c14:	000015a7 	andeq	r1, r0, r7, lsr #11
    1c18:	000015a3 	andeq	r1, r0, r3, lsr #11
    1c1c:	00061c17 	andeq	r1, r6, r7, lsl ip
    1c20:	01530100 	cmpeq	r3, r0, lsl #2
    1c24:	0000ee48 	andeq	lr, r0, r8, asr #28
    1c28:	0015c900 	andseq	ip, r5, r0, lsl #18
    1c2c:	0015c500 	andseq	ip, r5, r0, lsl #10
    1c30:	053d1700 	ldreq	r1, [sp, #-1792]!	; 0xfffff900
    1c34:	53010000 	movwpl	r0, #4096	; 0x1000
    1c38:	00295701 	eoreq	r5, r9, r1, lsl #14
    1c3c:	15f10000 	ldrbne	r0, [r1, #0]!
    1c40:	15e70000 	strbne	r0, [r7, #0]!
    1c44:	d3170000 	tstle	r7, #0
    1c48:	01000006 	tsteq	r0, r6
    1c4c:	306b0153 	rsbcc	r0, fp, r3, asr r1
    1c50:	49000000 	stmdbmi	r0, {}	; <UNPREDICTABLE>
    1c54:	41000016 	tstmi	r0, r6, lsl r0
    1c58:	17000016 	smladne	r0, r6, r0, r0
    1c5c:	000006d9 	ldrdeq	r0, [r0], -r9
    1c60:	7e015301 	cdpvc	3, 0, cr5, cr1, cr1, {0}
    1c64:	00000030 	andeq	r0, r0, r0, lsr r0
    1c68:	00001689 	andeq	r1, r0, r9, lsl #13
    1c6c:	0000167f 	andeq	r1, r0, pc, ror r6
    1c70:	00060717 	andeq	r0, r6, r7, lsl r7
    1c74:	01530100 	cmpeq	r3, r0, lsl #2
    1c78:	00003092 	muleq	r0, r2, r0
    1c7c:	0016cf00 	andseq	ip, r6, r0, lsl #30
    1c80:	0016cb00 	andseq	ip, r6, r0, lsl #22
    1c84:	75621200 	strbvc	r1, [r2, #-512]!	; 0xfffffe00
    1c88:	55010066 	strpl	r0, [r1, #-102]	; 0xffffff9a
    1c8c:	13570801 	cmpne	r7, #65536	; 0x10000
    1c90:	91030000 	mrsls	r0, (UNDEF: 3)
    1c94:	6c147fb0 	ldcvs	15, cr7, [r4], {176}	; 0xb0
    1c98:	01006e65 	tsteq	r0, r5, ror #28
    1c9c:	ee0a0156 	mcr	1, 0, r0, cr10, cr6, {2}
    1ca0:	1d000000 	stcne	0, cr0, [r0, #-0]
    1ca4:	ef000017 	svc	0x00000017
    1ca8:	1c000016 	stcne	0, cr0, [r0], {22}
    1cac:	0000071d 	andeq	r0, r0, sp, lsl r7
    1cb0:	0a015701 	beq	578bc <__HEAP_SIZE+0x568bc>
    1cb4:	00000029 	andeq	r0, r0, r9, lsr #32
    1cb8:	0000183c 	andeq	r1, r0, ip, lsr r8
    1cbc:	00001832 	andeq	r1, r0, r2, lsr r8
    1cc0:	0004b413 	andeq	fp, r4, r3, lsl r4
    1cc4:	015a0100 	cmpeq	sl, r0, lsl #2
    1cc8:	00137717 	andseq	r7, r3, r7, lsl r7
    1ccc:	48030500 	stmdami	r3, {r8, sl}
    1cd0:	1c100059 	ldcne	0, cr0, [r0], {89}	; 0x59
    1cd4:	0000056e 	andeq	r0, r0, lr, ror #10
    1cd8:	08016f01 	stmdaeq	r1, {r0, r8, r9, sl, fp, sp, lr}
    1cdc:	00000b7d 	andeq	r0, r0, sp, ror fp
    1ce0:	0000189e 	muleq	r0, lr, r8
    1ce4:	00001892 	muleq	r0, r2, r8
    1ce8:	0005251c 	andeq	r2, r5, ip, lsl r5
    1cec:	017f0100 	cmneq	pc, r0, lsl #2
    1cf0:	00008507 	andeq	r8, r0, r7, lsl #10
    1cf4:	0018fb00 	andseq	pc, r8, r0, lsl #22
    1cf8:	0018f100 	andseq	pc, r8, r0, lsl #2
    1cfc:	6d741400 	cfldrdvs	mvd1, [r4, #-0]
    1d00:	80010070 	andhi	r0, r1, r0, ror r0
    1d04:	00290a01 	eoreq	r0, r9, r1, lsl #20
    1d08:	193e0000 	ldmdbne	lr!, {}	; <UNPREDICTABLE>
    1d0c:	193a0000 	ldmdbne	sl!, {}	; <UNPREDICTABLE>
    1d10:	381c0000 	ldmdacc	ip, {}	; <UNPREDICTABLE>
    1d14:	01000005 	tsteq	r0, r5
    1d18:	5f110181 	svcpl	0x00110181
    1d1c:	6f000000 	svcvs	0x00000000
    1d20:	63000019 	movwvs	r0, #25
    1d24:	1d000019 	stcne	0, cr0, [r0, #-100]	; 0xffffff9c
    1d28:	10001302 	andne	r1, r0, r2, lsl #6
    1d2c:	10001362 	andne	r1, r0, r2, ror #6
    1d30:	00001134 	andeq	r1, r0, r4, lsr r1
    1d34:	0000241c 	andeq	r2, r0, ip, lsl r4
    1d38:	019c0100 	orrseq	r0, ip, r0, lsl #2
    1d3c:	00003012 	andeq	r3, r0, r2, lsl r0
    1d40:	0019be00 	andseq	fp, r9, r0, lsl #28
    1d44:	0019ba00 	andseq	fp, r9, r0, lsl #20
    1d48:	0c2b0000 	stceq	0, cr0, [fp], #-0
    1d4c:	1c100011 	ldcne	0, cr0, [r0], {17}
    1d50:	2b00001b 	blcs	1dc4 <__HEAP_SIZE+0xdc4>
    1d54:	10001120 	andne	r1, r0, r0, lsr #2
    1d58:	00001b32 	andeq	r1, r0, r2, lsr fp
    1d5c:	0011322b 	andseq	r3, r1, fp, lsr #4
    1d60:	001b2710 	andseq	r2, fp, r0, lsl r7
    1d64:	11442b00 	cmpne	r4, r0, lsl #22
    1d68:	1b271000 	blne	9c5d70 <__RAM_SIZE+0x8c5d70>
    1d6c:	562b0000 	strtpl	r0, [fp], -r0
    1d70:	32100011 	andscc	r0, r0, #17
    1d74:	2b00001b 	blcs	1de8 <__HEAP_SIZE+0xde8>
    1d78:	10001166 	andne	r1, r0, r6, ror #2
    1d7c:	00001b32 	andeq	r1, r0, r2, lsr fp
    1d80:	0011ae20 	andseq	sl, r1, r0, lsr #28
    1d84:	00179110 	andseq	r9, r7, r0, lsl r1
    1d88:	0011b400 	andseq	fp, r1, r0, lsl #8
    1d8c:	50011600 	andpl	r1, r1, r0, lsl #12
    1d90:	7f9c9104 	svcvc	0x009c9104
    1d94:	51011606 	tstpl	r1, r6, lsl #12
    1d98:	7fa89104 	svcvc	0x00a89104
    1d9c:	52011606 	andpl	r1, r1, #6291456	; 0x600000
    1da0:	16007a02 	strne	r7, [r0], -r2, lsl #20
    1da4:	7b025301 	blvc	969b0 <__HEAP_SIZE+0x959b0>
    1da8:	7d021600 	stcvc	6, cr1, [r2, #-0]
    1dac:	38030500 	stmdacc	r3, {r8, sl}
    1db0:	16100059 			; <UNDEFINED> instruction: 0x16100059
    1db4:	01047d02 	tsteq	r4, r2, lsl #26
    1db8:	7d021633 	stcvc	6, cr1, [r2, #-204]	; 0xffffff34
    1dbc:	0c910308 	ldceq	3, cr0, [r1], {8}
    1dc0:	7d021606 	stcvc	6, cr1, [r2, #-24]	; 0xffffffe8
    1dc4:	1091030c 	addsne	r0, r1, ip, lsl #6
    1dc8:	cc200006 	stcgt	0, cr0, [r0], #-24	; 0xffffffe8
    1dcc:	91100011 	tstls	r0, r1, lsl r0
    1dd0:	fe000017 	mcr2	0, 0, r0, cr0, cr7, {0}
    1dd4:	16000011 			; <UNDEFINED> instruction: 0x16000011
    1dd8:	91045001 	tstls	r4, r1
    1ddc:	16067f9c 			; <UNDEFINED> instruction: 0x16067f9c
    1de0:	91045101 	tstls	r4, r1, lsl #2
    1de4:	16067fa8 	strne	r7, [r6], -r8, lsr #31
    1de8:	7a025201 	bvc	965f4 <__HEAP_SIZE+0x955f4>
    1dec:	53011600 	movwpl	r1, #5632	; 0x1600
    1df0:	16007b02 	strne	r7, [r0], -r2, lsl #22
    1df4:	05007d02 	streq	r7, [r0, #-3330]	; 0xfffff2fe
    1df8:	00593c03 	subseq	r3, r9, r3, lsl #24
    1dfc:	7d021610 	stcvc	6, cr1, [r2, #-64]	; 0xffffffc0
    1e00:	16340104 	ldrtne	r0, [r4], -r4, lsl #2
    1e04:	03087d02 	movweq	r7, #36098	; 0x8d02
    1e08:	16060c91 			; <UNDEFINED> instruction: 0x16060c91
    1e0c:	030c7d02 	movweq	r7, #52482	; 0xcd02
    1e10:	00061091 	muleq	r6, r1, r0
    1e14:	0011f420 	andseq	pc, r1, r0, lsr #8
    1e18:	00179110 	andseq	r9, r7, r0, lsl r1
    1e1c:	00123800 	andseq	r3, r2, r0, lsl #16
    1e20:	50011600 	andpl	r1, r1, r0, lsl #12
    1e24:	7f9c9104 	svcvc	0x009c9104
    1e28:	51011606 	tstpl	r1, r6, lsl #12
    1e2c:	7fa89104 	svcvc	0x00a89104
    1e30:	52011606 	andpl	r1, r1, #6291456	; 0x600000
    1e34:	16007a02 	strne	r7, [r0], -r2, lsl #20
    1e38:	7b025301 	blvc	96a44 <__HEAP_SIZE+0x95a44>
    1e3c:	7d021600 	stcvc	6, cr1, [r2, #-0]
    1e40:	0c910308 	ldceq	3, cr0, [r1], {8}
    1e44:	7d021606 	stcvc	6, cr1, [r2, #-24]	; 0xffffffe8
    1e48:	1091030c 	addsne	r0, r1, ip, lsl #6
    1e4c:	18200006 	stmdane	r0!, {r1, r2}
    1e50:	89100012 	ldmdbhi	r0, {r1, r4}
    1e54:	8100000b 	tsthi	r0, fp
    1e58:	16000012 			; <UNDEFINED> instruction: 0x16000012
    1e5c:	91045001 	tstls	r4, r1
    1e60:	16067f9c 			; <UNDEFINED> instruction: 0x16067f9c
    1e64:	91045101 	tstls	r4, r1, lsl #2
    1e68:	16067fa8 	strne	r7, [r6], -r8, lsr #31
    1e6c:	7a025201 	bvc	96678 <__HEAP_SIZE+0x95678>
    1e70:	53011600 	movwpl	r1, #5632	; 0x1600
    1e74:	16007b02 	strne	r7, [r0], -r2, lsl #22
    1e78:	03007d02 	movweq	r7, #3330	; 0xd02
    1e7c:	162908f5 			; <UNDEFINED> instruction: 0x162908f5
    1e80:	02087d02 	andeq	r7, r8, #2, 26	; 0x80
    1e84:	02160075 	andseq	r0, r6, #117	; 0x75
    1e88:	91030c7d 	tstls	r3, sp, ror ip
    1e8c:	0216060c 	andseq	r0, r6, #12, 12	; 0xc00000
    1e90:	9103107d 	tstls	r3, sp, ror r0
    1e94:	2b000610 	blcs	36dc <__HEAP_SIZE+0x26dc>
    1e98:	10001226 	andne	r1, r0, r6, lsr #4
    1e9c:	00001b5e 	andeq	r1, r0, lr, asr fp
    1ea0:	00123c2b 	andseq	r3, r2, fp, lsr #24
    1ea4:	001b6910 	andseq	r6, fp, r0, lsl r9
    1ea8:	12422b00 	subne	r2, r2, #0, 22
    1eac:	1b3d1000 	blne	f45eb4 <__RAM_SIZE+0xe45eb4>
    1eb0:	4e2b0000 	cdpmi	0, 2, cr0, cr11, cr0, {0}
    1eb4:	5e100012 	mrcpl	0, 0, r0, cr0, cr2, {0}
    1eb8:	2b00001b 	blcs	1f2c <__HEAP_SIZE+0xf2c>
    1ebc:	10001260 	andne	r1, r0, r0, ror #4
    1ec0:	00001b48 	andeq	r1, r0, r8, asr #22
    1ec4:	00126c2b 	andseq	r6, r2, fp, lsr #24
    1ec8:	001b8a10 	andseq	r8, fp, r0, lsl sl
    1ecc:	12722b00 	rsbsne	r2, r2, #0, 22
    1ed0:	1b951000 	blne	fe545ed8 <__StackTop+0xc6445ed8>
    1ed4:	7e2b0000 	cdpvc	0, 2, cr0, cr11, cr0, {0}
    1ed8:	5e100012 	mrcpl	0, 0, r0, cr0, cr2, {0}
    1edc:	2b00001b 	blcs	1f50 <__HEAP_SIZE+0xf50>
    1ee0:	1000128e 	andne	r1, r0, lr, lsl #5
    1ee4:	00001b27 	andeq	r1, r0, r7, lsr #22
    1ee8:	0012982b 	andseq	r9, r2, fp, lsr #16
    1eec:	001b9510 	andseq	r9, fp, r0, lsl r5
    1ef0:	12a42b00 	adcne	r2, r4, #0, 22
    1ef4:	1ba01000 	blne	fe805efc <__StackTop+0xc6705efc>
    1ef8:	b22b0000 	eorlt	r0, fp, #0
    1efc:	3d100012 	ldccc	0, cr0, [r0, #-72]	; 0xffffffb8
    1f00:	2b00001b 	blcs	1f74 <__HEAP_SIZE+0xf74>
    1f04:	100012be 			; <UNDEFINED> instruction: 0x100012be
    1f08:	00001b5e 	andeq	r1, r0, lr, asr fp
    1f0c:	0012ca2b 	andseq	ip, r2, fp, lsr #20
    1f10:	001b3210 	andseq	r3, fp, r0, lsl r2
    1f14:	12d82b00 	sbcsne	r2, r8, #0, 22
    1f18:	1b271000 	blne	9c5f20 <__RAM_SIZE+0x8c5f20>
    1f1c:	f22b0000 	vhadd.s32	d0, d11, d0
    1f20:	32100012 	andscc	r0, r0, #18
    1f24:	1500001b 	strne	r0, [r0, #-27]	; 0xffffffe5
    1f28:	1000140a 	andne	r1, r0, sl, lsl #8
    1f2c:	00001791 	muleq	r0, r1, r7
    1f30:	04500116 	ldrbeq	r0, [r0], #-278	; 0xfffffeea
    1f34:	067f9c91 			; <UNDEFINED> instruction: 0x067f9c91
    1f38:	04510116 	ldrbeq	r0, [r1], #-278	; 0xfffffeea
    1f3c:	067fa891 			; <UNDEFINED> instruction: 0x067fa891
    1f40:	02520116 	subseq	r0, r2, #-2147483643	; 0x80000005
    1f44:	0116007a 	tsteq	r6, sl, ror r0
    1f48:	007b0253 	rsbseq	r0, fp, r3, asr r2
    1f4c:	007d0216 	rsbseq	r0, sp, r6, lsl r2
    1f50:	7fb09103 	svcvc	0x00b09103
    1f54:	047d0216 	ldrbteq	r0, [sp], #-534	; 0xfffffdea
    1f58:	16007402 	strne	r7, [r0], -r2, lsl #8
    1f5c:	03087d02 	movweq	r7, #36098	; 0x8d02
    1f60:	16060c91 			; <UNDEFINED> instruction: 0x16060c91
    1f64:	030c7d02 	movweq	r7, #52482	; 0xcd02
    1f68:	00061091 	muleq	r6, r1, r0
    1f6c:	01331800 	teqeq	r3, r0, lsl #16
    1f70:	13670000 	cmnne	r7, #0
    1f74:	30190000 	andscc	r0, r9, r0
    1f78:	1f000000 	svcne	0x00000000
    1f7c:	0fa31800 	svceq	0x00a31800
    1f80:	13770000 	cmnne	r7, #0
    1f84:	30190000 	andscc	r0, r9, r0
    1f88:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    1f8c:	13670300 	cmnne	r7, #0, 6
    1f90:	fd1a0000 	ldc2	0, cr0, [sl, #-0]
    1f94:	01000006 	tsteq	r0, r6
    1f98:	010f0132 	tsteq	pc, r2, lsr r1	; <UNPREDICTABLE>
    1f9c:	000000ee 	andeq	r0, r0, lr, ror #1
    1fa0:	10000c2c 	andne	r0, r0, ip, lsr #24
    1fa4:	10000cf2 	strdne	r0, [r0], -r2
    1fa8:	000019dc 	ldrdeq	r1, [r0], -ip
    1fac:	00150f01 	andseq	r0, r5, r1, lsl #30
    1fb0:	756f0f00 	strbvc	r0, [pc, #-3840]!	; 10b8 <__HEAP_SIZE+0xb8>
    1fb4:	32010074 	andcc	r0, r1, #116	; 0x74
    1fb8:	01062c01 	tsteq	r6, r1, lsl #24
    1fbc:	1a1d0000 	bne	741fc4 <__RAM_SIZE+0x641fc4>
    1fc0:	1a150000 	bne	541fc8 <__RAM_SIZE+0x441fc8>
    1fc4:	d8170000 	ldmdale	r7, {}	; <UNPREDICTABLE>
    1fc8:	01000004 	tsteq	r0, r4
    1fcc:	ee370132 	mrc	1, 1, r0, cr7, cr2, {1}
    1fd0:	5d000002 	stcpl	0, cr0, [r0, #-8]
    1fd4:	5500001a 	strpl	r0, [r0, #-26]	; 0xffffffe6
    1fd8:	0f00001a 	svceq	0x0000001a
    1fdc:	00786469 	rsbseq	r6, r8, r9, ror #8
    1fe0:	46013201 	strmi	r3, [r1], -r1, lsl #4
    1fe4:	000000ee 	andeq	r0, r0, lr, ror #1
    1fe8:	00001a9d 	muleq	r0, sp, sl
    1fec:	00001a95 	muleq	r0, r5, sl
    1ff0:	00061c17 	andeq	r1, r6, r7, lsl ip
    1ff4:	01320100 	teqeq	r2, r0, lsl #2
    1ff8:	0000ee52 	andeq	lr, r0, r2, asr lr
    1ffc:	001ad900 	andseq	sp, sl, r0, lsl #18
    2000:	001ad500 	andseq	sp, sl, r0, lsl #10
    2004:	053d1700 	ldreq	r1, [sp, #-1792]!	; 0xfffff900
    2008:	32010000 	andcc	r0, r1, #0
    200c:	007e6d01 	rsbseq	r6, lr, r1, lsl #26
    2010:	1b010000 	blne	42018 <__HEAP_SIZE+0x41018>
    2014:	1af70000 	bne	ffdc201c <__StackTop+0xc7cc201c>
    2018:	6e100000 	cdpvs	0, 1, cr0, cr0, cr0, {0}
    201c:	01000005 	tsteq	r0, r5
    2020:	7d790132 	ldfvce	f0, [r9, #-200]!	; 0xffffff38
    2024:	0200000b 	andeq	r0, r0, #11
    2028:	e9100891 	ldmdb	r0, {r0, r4, r7, fp}
    202c:	01000008 	tsteq	r0, r8
    2030:	7e960132 	mrcvc	1, 4, r0, cr6, cr2, {1}
    2034:	02000000 	andeq	r0, r0, #0
    2038:	d3101091 	tstle	r0, #145	; 0x91
    203c:	01000006 	tsteq	r0, r6
    2040:	30a90132 	adccc	r0, r9, r2, lsr r1
    2044:	02000000 	andeq	r0, r0, #0
    2048:	d9101891 	ldmdble	r0, {r0, r4, r7, fp, ip}
    204c:	01000006 	tsteq	r0, r6
    2050:	30bc0132 	adcscc	r0, ip, r2, lsr r1
    2054:	02000000 	andeq	r0, r0, #0
    2058:	07171c91 			; <UNDEFINED> instruction: 0x07171c91
    205c:	01000006 	tsteq	r0, r6
    2060:	30d00132 	sbcscc	r0, r0, r2, lsr r1
    2064:	55000000 	strpl	r0, [r0, #-0]
    2068:	5100001b 	tstpl	r0, fp, lsl r0
    206c:	1200001b 	andne	r0, r0, #27
    2070:	00667562 	rsbeq	r7, r6, r2, ror #10
    2074:	08013401 	stmdaeq	r1, {r0, sl, ip, sp}
    2078:	00001357 	andeq	r1, r0, r7, asr r3
    207c:	7fb89103 	svcvc	0x00b89103
    2080:	6e656c14 	mcrvs	12, 3, r6, cr5, cr4, {0}
    2084:	01350100 	teqeq	r5, r0, lsl #2
    2088:	0000ee0a 	andeq	lr, r0, sl, lsl #28
    208c:	001b8000 	andseq	r8, fp, r0
    2090:	001b7400 	andseq	r7, fp, r0, lsl #8
    2094:	00d01e00 	sbcseq	r1, r0, r0, lsl #28
    2098:	14b00000 	ldrtne	r0, [r0], #0
    209c:	5b1c0000 	blpl	7020a4 <__RAM_SIZE+0x6020a4>
    20a0:	01000006 	tsteq	r0, r6
    20a4:	3a12013f 	bcc	4825a8 <__RAM_SIZE+0x3825a8>
    20a8:	d0000001 	andle	r0, r0, r1
    20ac:	cc00001b 	stcgt	0, cr0, [r0], {27}
    20b0:	2b00001b 	blcs	2124 <__HEAP_SIZE+0x1124>
    20b4:	10000c84 	andne	r0, r0, r4, lsl #25
    20b8:	00001bab 	andeq	r1, r0, fp, lsr #23
    20bc:	000ca42b 	andeq	sl, ip, fp, lsr #8
    20c0:	001bab10 	andseq	sl, fp, r0, lsl fp
    20c4:	ec150000 	ldc	0, cr0, [r5], {-0}
    20c8:	7010000c 	andsvc	r0, r0, ip
    20cc:	16000016 			; <UNDEFINED> instruction: 0x16000016
    20d0:	91045001 	tstls	r4, r1
    20d4:	16067fac 	strne	r7, [r6], -ip, lsr #31
    20d8:	91045101 	tstls	r4, r1, lsl #2
    20dc:	16067fb0 			; <UNDEFINED> instruction: 0x16067fb0
    20e0:	91045201 	tstls	r4, r1, lsl #4
    20e4:	16067fb4 			; <UNDEFINED> instruction: 0x16067fb4
    20e8:	7b025301 	blvc	96cf4 <__HEAP_SIZE+0x95cf4>
    20ec:	7d021600 	stcvc	6, cr1, [r2, #-0]
    20f0:	b8910300 	ldmlt	r1, {r8, r9}
    20f4:	7d02167f 	stcvc	6, cr1, [r2, #-508]	; 0xfffffe04
    20f8:	00790204 	rsbseq	r0, r9, r4, lsl #4
    20fc:	087d0216 	ldmdaeq	sp!, {r1, r2, r4, r9}^
    2100:	94089104 	strls	r9, [r8], #-260	; 0xfffffefc
    2104:	7d021601 	stcvc	6, cr1, [r2, #-4]
    2108:	0077020c 	rsbseq	r0, r7, ip, lsl #4
    210c:	107d0216 	rsbsne	r0, sp, r6, lsl r2
    2110:	06189103 	ldreq	r9, [r8], -r3, lsl #2
    2114:	147d0216 	ldrbtne	r0, [sp], #-534	; 0xfffffdea
    2118:	061c9103 	ldreq	r9, [ip], -r3, lsl #2
    211c:	187d0216 	ldmdane	sp!, {r1, r2, r4, r9}^
    2120:	00007a02 	andeq	r7, r0, r2, lsl #20
    2124:	05e71a00 	strbeq	r1, [r7, #2560]!	; 0xa00
    2128:	19010000 	stmdbne	r1, {}	; <UNPREDICTABLE>
    212c:	ee010f01 	cdp	15, 0, cr0, cr1, cr1, {0}
    2130:	98000000 	stmdals	r0, {}	; <UNPREDICTABLE>
    2134:	2c10000b 	ldccs	0, cr0, [r0], {11}
    2138:	ee10000c 	cdp	0, 1, cr0, cr0, cr12, {0}
    213c:	0100001b 	tsteq	r0, fp, lsl r0
    2140:	00001670 	andeq	r1, r0, r0, ror r6
    2144:	74756f0f 	ldrbtvc	r6, [r5], #-3855	; 0xfffff0f1
    2148:	01190100 	tsteq	r9, r0, lsl #2
    214c:	00010627 	andeq	r0, r1, r7, lsr #12
    2150:	001c2b00 	andseq	r2, ip, r0, lsl #22
    2154:	001c2700 	andseq	r2, ip, r0, lsl #14
    2158:	04d81700 	ldrbeq	r1, [r8], #1792	; 0x700
    215c:	19010000 	stmdbne	r1, {}	; <UNPREDICTABLE>
    2160:	02ee3201 	rsceq	r3, lr, #268435456	; 0x10000000
    2164:	1c500000 	mrane	r0, r0, acc0
    2168:	1c4c0000 	marne	acc0, r0, ip
    216c:	690f0000 	stmdbvs	pc, {}	; <UNPREDICTABLE>
    2170:	01007864 	tsteq	r0, r4, ror #16
    2174:	ee410119 	mcr	1, 2, r0, cr1, cr9, {0}
    2178:	75000000 	strvc	r0, [r0, #-0]
    217c:	7100001c 	tstvc	r0, ip, lsl r0
    2180:	1700001c 	smladne	r0, ip, r0, r0
    2184:	0000061c 	andeq	r0, r0, ip, lsl r6
    2188:	4d011901 	vstrmi.16	s2, [r1, #-2]	; <UNPREDICTABLE>
    218c:	000000ee 	andeq	r0, r0, lr, ror #1
    2190:	00001c9a 	muleq	r0, sl, ip
    2194:	00001c96 	muleq	r0, r6, ip
    2198:	00053d17 	andeq	r3, r5, r7, lsl sp
    219c:	01190100 	tsteq	r9, r0, lsl #2
    21a0:	00005f63 	andeq	r5, r0, r3, ror #30
    21a4:	001cc500 	andseq	ip, ip, r0, lsl #10
    21a8:	001cbb00 	andseq	fp, ip, r0, lsl #22
    21ac:	056e1000 	strbeq	r1, [lr, #-0]!
    21b0:	19010000 	stmdbne	r1, {}	; <UNPREDICTABLE>
    21b4:	0b7d6f01 	bleq	1f5ddc0 <__RAM_SIZE+0x1e5ddc0>
    21b8:	91020000 	mrsls	r0, (UNDEF: 2)
    21bc:	08e91004 	stmiaeq	r9!, {r2, ip}^
    21c0:	19010000 	stmdbne	r1, {}	; <UNPREDICTABLE>
    21c4:	005f8701 	subseq	r8, pc, r1, lsl #14
    21c8:	91020000 	mrsls	r0, (UNDEF: 2)
    21cc:	06d31008 	ldrbeq	r1, [r3], r8
    21d0:	19010000 	stmdbne	r1, {}	; <UNPREDICTABLE>
    21d4:	00309a01 	eorseq	r9, r0, r1, lsl #20
    21d8:	91020000 	mrsls	r0, (UNDEF: 2)
    21dc:	06d9100c 	ldrbeq	r1, [r9], ip
    21e0:	19010000 	stmdbne	r1, {}	; <UNPREDICTABLE>
    21e4:	0030ad01 	eorseq	sl, r0, r1, lsl #26
    21e8:	91020000 	mrsls	r0, (UNDEF: 2)
    21ec:	06071710 			; <UNDEFINED> instruction: 0x06071710
    21f0:	19010000 	stmdbne	r1, {}	; <UNPREDICTABLE>
    21f4:	0030c101 	eorseq	ip, r0, r1, lsl #2
    21f8:	1d0a0000 	stcne	0, cr0, [sl, #-0]
    21fc:	1d060000 	stcne	0, cr0, [r6, #-0]
    2200:	62120000 	andsvs	r0, r2, #0
    2204:	01006675 	tsteq	r0, r5, ror r6
    2208:	5708011b 	smladpl	r8, fp, r1, r0
    220c:	02000013 	andeq	r0, r0, #19
    2210:	6c144891 	ldcvs	8, cr4, [r4], {145}	; 0x91
    2214:	01006e65 	tsteq	r0, r5, ror #28
    2218:	ee0a011c 	mcr	1, 0, r0, cr10, cr12, {0}
    221c:	35000000 	strcc	r0, [r0, #-0]
    2220:	2900001d 	stmdbcs	r0, {r0, r2, r3, r4}
    2224:	1e00001d 	mcrne	0, 0, r0, cr0, cr13, {0}
    2228:	000000b0 	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
    222c:	00001630 	andeq	r1, r0, r0, lsr r6
    2230:	00065b1c 	andeq	r5, r6, ip, lsl fp
    2234:	01260100 			; <UNDEFINED> instruction: 0x01260100
    2238:	00013a12 	andeq	r3, r1, r2, lsl sl
    223c:	001d8d00 	andseq	r8, sp, r0, lsl #26
    2240:	001d8100 	andseq	r8, sp, r0, lsl #2
    2244:	28150000 	ldmdacs	r5, {}	; <UNPREDICTABLE>
    2248:	7010000c 	andsvc	r0, r0, ip
    224c:	16000016 			; <UNDEFINED> instruction: 0x16000016
    2250:	02007d02 	andeq	r7, r0, #2, 26	; 0x80
    2254:	02160074 	andseq	r0, r6, #116	; 0x74
    2258:	7702047d 	smlsdxvc	r2, sp, r4, r0
    225c:	7d021600 	stcvc	6, cr1, [r2, #-0]
    2260:	04910408 	ldreq	r0, [r1], #1032	; 0x408
    2264:	02160194 	andseq	r0, r6, #148, 2	; 0x25
    2268:	75020c7d 	strvc	r0, [r2, #-3197]	; 0xfffff383
    226c:	7d021600 	stcvc	6, cr1, [r2, #-0]
    2270:	0c910310 	ldceq	3, cr0, [r1], {16}
    2274:	7d021606 	stcvc	6, cr1, [r2, #-24]	; 0xffffffe8
    2278:	10910314 	addsne	r0, r1, r4, lsl r3
    227c:	7d021606 	stcvc	6, cr1, [r2, #-24]	; 0xffffffe8
    2280:	00760218 	rsbseq	r0, r6, r8, lsl r2
    2284:	a32c0000 			; <UNDEFINED> instruction: 0xa32c0000
    2288:	01000005 	tsteq	r0, r5
    228c:	ee010fe3 	cdp	15, 0, cr0, cr1, cr3, {7}
    2290:	60000000 	andvs	r0, r0, r0
    2294:	9810000a 	ldmdals	r0, {r1, r3}
    2298:	fb10000b 	blx	4022ce <__RAM_SIZE+0x3022ce>
    229c:	0100001d 	tsteq	r0, sp, lsl r0
    22a0:	00001791 	muleq	r0, r1, r7
    22a4:	74756f2d 	ldrbtvc	r6, [r5], #-3885	; 0xfffff0d3
    22a8:	29e30100 	stmibcs	r3!, {r8}^
    22ac:	00000106 	andeq	r0, r0, r6, lsl #2
    22b0:	00001e45 	andeq	r1, r0, r5, asr #28
    22b4:	00001e3f 	andeq	r1, r0, pc, lsr lr
    22b8:	0004d82e 	andeq	sp, r4, lr, lsr #16
    22bc:	34e30100 	strbtcc	r0, [r3], #256	; 0x100
    22c0:	000002ee 	andeq	r0, r0, lr, ror #5
    22c4:	00001e77 	andeq	r1, r0, r7, ror lr
    22c8:	00001e71 	andeq	r1, r0, r1, ror lr
    22cc:	7864692d 	stmdavc	r4!, {r0, r2, r3, r5, r8, fp, sp, lr}^
    22d0:	43e30100 	mvnmi	r0, #0, 2
    22d4:	000000ee 	andeq	r0, r0, lr, ror #1
    22d8:	00001ea9 	andeq	r1, r0, r9, lsr #29
    22dc:	00001ea3 	andeq	r1, r0, r3, lsr #29
    22e0:	00061c2e 	andeq	r1, r6, lr, lsr #24
    22e4:	4fe30100 	svcmi	0x00e30100
    22e8:	000000ee 	andeq	r0, r0, lr, ror #1
    22ec:	00001edb 	ldrdeq	r1, [r0], -fp
    22f0:	00001ed5 	ldrdeq	r1, [r0], -r5
    22f4:	6675622d 	ldrbtvs	r6, [r5], -sp, lsr #4
    22f8:	5de30100 	stfple	f0, [r3]
    22fc:	000002ee 	andeq	r0, r0, lr, ror #5
    2300:	00001f0b 	andeq	r1, r0, fp, lsl #30
    2304:	00001f07 	andeq	r1, r0, r7, lsl #30
    2308:	6e656c2d 	cdpvs	12, 6, cr6, cr5, cr13, {1}
    230c:	69e30100 	stmibvs	r3!, {r8}^
    2310:	000000ee 	andeq	r0, r0, lr, ror #1
    2314:	00001f5d 	andeq	r1, r0, sp, asr pc
    2318:	00001f2b 	andeq	r1, r0, fp, lsr #30
    231c:	00056e2e 	andeq	r6, r5, lr, lsr #28
    2320:	73e30100 	mvnvc	r0, #0, 2
    2324:	00000b7d 	andeq	r0, r0, sp, ror fp
    2328:	00002091 	muleq	r0, r1, r0
    232c:	0000208d 	andeq	r2, r0, sp, lsl #1
    2330:	0008e92e 	andeq	lr, r8, lr, lsr #18
    2334:	8ae30100 	bhi	ff8c273c <__StackTop+0xc77c273c>
    2338:	00000030 	andeq	r0, r0, r0, lsr r0
    233c:	000020b5 	strheq	r2, [r0], -r5
    2340:	000020b1 	strheq	r2, [r0], -r1
    2344:	0006d32e 	andeq	sp, r6, lr, lsr #6
    2348:	9de30100 	stflse	f0, [r3]
    234c:	00000030 	andeq	r0, r0, r0, lsr r0
    2350:	000020d9 	ldrdeq	r2, [r0], -r9
    2354:	000020d5 	ldrdeq	r2, [r0], -r5
    2358:	0006d92e 	andeq	sp, r6, lr, lsr #18
    235c:	b0e30100 	rsclt	r0, r3, r0, lsl #2
    2360:	00000030 	andeq	r0, r0, r0, lsr r0
    2364:	000020fd 	strdeq	r2, [r0], -sp
    2368:	000020f9 	strdeq	r2, [r0], -r9
    236c:	0006072e 	andeq	r0, r6, lr, lsr #14
    2370:	c4e30100 	strbtgt	r0, [r3], #256	; 0x100
    2374:	00000030 	andeq	r0, r0, r0, lsr r0
    2378:	00002120 	andeq	r2, r0, r0, lsr #2
    237c:	0000211c 	andeq	r2, r0, ip, lsl r1
    2380:	000b1a15 	andeq	r1, fp, r5, lsl sl
    2384:	00179110 	andseq	r9, r7, r0, lsl r1
    2388:	7d021600 	stcvc	6, cr1, [r2, #-0]
    238c:	00750200 	rsbseq	r0, r5, r0, lsl #4
    2390:	047d0216 	ldrbteq	r0, [sp], #-534	; 0xfffffdea
    2394:	16007402 	strne	r7, [r0], -r2, lsl #8
    2398:	02087d02 	andeq	r7, r8, #2, 26	; 0x80
    239c:	02160077 	andseq	r0, r6, #119	; 0x77
    23a0:	76020c7d 			; <UNDEFINED> instruction: 0x76020c7d
    23a4:	2c000000 	stccs	0, cr0, [r0], {-0}
    23a8:	0000068b 	andeq	r0, r0, fp, lsl #13
    23ac:	010fc701 	tsteq	pc, r1, lsl #14
    23b0:	000000ee 	andeq	r0, r0, lr, ror #1
    23b4:	100009e2 	andne	r0, r0, r2, ror #19
    23b8:	10000a60 	andne	r0, r0, r0, ror #20
    23bc:	00002140 	andeq	r2, r0, r0, asr #2
    23c0:	0018d801 	andseq	sp, r8, r1, lsl #16
    23c4:	756f2d00 	strbvc	r2, [pc, #-3328]!	; 16cc <__HEAP_SIZE+0x6cc>
    23c8:	c7010074 	smlsdxgt	r1, r4, r0, r0
    23cc:	00010625 	andeq	r0, r1, r5, lsr #12
    23d0:	00218800 	eoreq	r8, r1, r0, lsl #16
    23d4:	00218400 	eoreq	r8, r1, r0, lsl #8
    23d8:	04d82e00 	ldrbeq	r2, [r8], #3584	; 0xe00
    23dc:	c7010000 	strgt	r0, [r1, -r0]
    23e0:	0002ee30 	andeq	lr, r2, r0, lsr lr
    23e4:	0021aa00 	eoreq	sl, r1, r0, lsl #20
    23e8:	0021a600 	eoreq	sl, r1, r0, lsl #12
    23ec:	64692d00 	strbtvs	r2, [r9], #-3328	; 0xfffff300
    23f0:	c7010078 	smlsdxgt	r1, r8, r0, r0
    23f4:	0000ee3f 	andeq	lr, r0, pc, lsr lr
    23f8:	0021d400 	eoreq	sp, r1, r0, lsl #8
    23fc:	0021c800 	eoreq	ip, r1, r0, lsl #16
    2400:	061c2e00 	ldreq	r2, [ip], -r0, lsl #28
    2404:	c7010000 	strgt	r0, [r1, -r0]
    2408:	0000ee4b 	andeq	lr, r0, fp, asr #28
    240c:	00222200 	eoreq	r2, r2, r0, lsl #4
    2410:	00221e00 	eoreq	r1, r2, r0, lsl #28
    2414:	75622d00 	strbvc	r2, [r2, #-3328]!	; 0xfffff300
    2418:	c7010066 	strgt	r0, [r1, -r6, rrx]
    241c:	00024c5f 	andeq	r4, r2, pc, asr ip
    2420:	00224400 	eoreq	r4, r2, r0, lsl #8
    2424:	00224000 	eoreq	r4, r2, r0
    2428:	656c2d00 	strbvs	r2, [ip, #-3328]!	; 0xfffff300
    242c:	c701006e 	strgt	r0, [r1, -lr, rrx]
    2430:	0000ee6b 	andeq	lr, r0, fp, ror #28
    2434:	00226800 	eoreq	r6, r2, r0, lsl #16
    2438:	00226400 	eoreq	r6, r2, r0, lsl #8
    243c:	06d92e00 	ldrbeq	r2, [r9], r0, lsl #28
    2440:	c7010000 	strgt	r0, [r1, -r0]
    2444:	0000307d 	andeq	r3, r0, sp, ror r0
    2448:	00228b00 	eoreq	r8, r2, r0, lsl #22
    244c:	00228700 	eoreq	r8, r2, r0, lsl #14
    2450:	06072e00 	streq	r2, [r7], -r0, lsl #28
    2454:	c7010000 	strgt	r0, [r1, -r0]
    2458:	00003091 	muleq	r0, r1, r0
    245c:	0022af00 	eoreq	sl, r2, r0, lsl #30
    2460:	0022ab00 	eoreq	sl, r2, r0, lsl #22
    2464:	055a2f00 	ldrbeq	r2, [sl, #-3840]	; 0xfffff100
    2468:	c9010000 	stmdbgt	r1, {}	; <UNPREDICTABLE>
    246c:	0000fa10 	andeq	pc, r0, r0, lsl sl	; <UNPREDICTABLE>
    2470:	0022d500 	eoreq	sp, r2, r0, lsl #10
    2474:	0022cf00 	eoreq	ip, r2, r0, lsl #30
    2478:	00981e00 	addseq	r1, r8, r0, lsl #28
    247c:	189d0000 	ldmne	sp, {}	; <UNPREDICTABLE>
    2480:	69300000 	ldmdbvs	r0!, {}	; <UNPREDICTABLE>
    2484:	11cd0100 	bicne	r0, sp, r0, lsl #2
    2488:	000000ee 	andeq	r0, r0, lr, ror #1
    248c:	00002304 	andeq	r2, r0, r4, lsl #6
    2490:	00002302 	andeq	r2, r0, r2, lsl #6
    2494:	000a1622 	andeq	r1, sl, r2, lsr #12
    2498:	50011610 	andpl	r1, r1, r0, lsl r6
    249c:	16200802 	strtne	r0, [r0], -r2, lsl #16
    24a0:	76025101 	strvc	r5, [r2], -r1, lsl #2
    24a4:	52011600 	andpl	r1, r1, #0, 12
    24a8:	167f7b02 	ldrbtne	r7, [pc], -r2, lsl #22
    24ac:	77025301 	strvc	r5, [r2, -r1, lsl #6]
    24b0:	21000000 	mrscs	r0, (UNDEF: 0)
    24b4:	10000a34 	andne	r0, r0, r4, lsr sl
    24b8:	000018b9 			; <UNDEFINED> instruction: 0x000018b9
    24bc:	02510116 	subseq	r0, r1, #-2147483643	; 0x80000005
    24c0:	01160076 	tsteq	r6, r6, ror r0
    24c4:	7f780252 	svcvc	0x00780252
    24c8:	02530116 	subseq	r0, r3, #-2147483643	; 0x80000005
    24cc:	22000077 	andcs	r0, r0, #119	; 0x77
    24d0:	10000a5c 	andne	r0, r0, ip, asr sl
    24d4:	02500116 	subseq	r0, r0, #-2147483643	; 0x80000005
    24d8:	01162008 	tsteq	r6, r8
    24dc:	00760251 	rsbseq	r0, r6, r1, asr r2
    24e0:	02520116 	subseq	r0, r2, #-2147483643	; 0x80000005
    24e4:	01167f74 	tsteq	r6, r4, ror pc
    24e8:	00770253 	rsbseq	r0, r7, r3, asr r2
    24ec:	23310000 	teqcs	r1, #0
    24f0:	01000006 	tsteq	r0, r6
    24f4:	300115bc 			; <UNDEFINED> instruction: 0x300115bc
    24f8:	be000000 	cdplt	0, 0, cr0, cr0, cr0, {0}
    24fc:	e2100009 	ands	r0, r0, #9
    2500:	02100009 	andseq	r0, r0, #9
    2504:	4001007d 	andmi	r0, r1, sp, ror r0
    2508:	2d000019 	stccs	0, cr0, [r0, #-100]	; 0xffffff9c
    250c:	00727473 	rsbseq	r7, r2, r3, ror r4
    2510:	4028bc01 	eormi	fp, r8, r1, lsl #24
    2514:	1b000019 	blne	2580 <__HEAP_SIZE+0x1580>
    2518:	17000023 	strne	r0, [r0, -r3, lsr #32]
    251c:	30000023 	andcc	r0, r0, r3, lsr #32
    2520:	be010069 	cdplt	0, 0, cr0, cr1, cr9, {3}
    2524:	00003010 	andeq	r3, r0, r0, lsl r0
    2528:	00233f00 	eoreq	r3, r3, r0, lsl #30
    252c:	00233900 	eoreq	r3, r3, r0, lsl #18
    2530:	19463200 	stmdbne	r6, {r9, ip, sp}^
    2534:	09d80000 	ldmibeq	r8, {}^	; <UNPREDICTABLE>
    2538:	00001000 	andeq	r1, r0, r0
    253c:	100009d8 	ldrdne	r0, [r0], -r8
    2540:	100009dc 	ldrdne	r0, [r0], -ip
    2544:	240abf01 	strcs	fp, [sl], #-3841	; 0xfffff0ff
    2548:	00001958 	andeq	r1, r0, r8, asr r9
    254c:	0000236d 	andeq	r2, r0, sp, ror #6
    2550:	00002369 	andeq	r2, r0, r9, ror #6
    2554:	04090000 	streq	r0, [r9], #-0
    2558:	0000024c 	andeq	r0, r0, ip, asr #4
    255c:	00065733 	andeq	r5, r6, r3, lsr r7
    2560:	14b50100 	ldrtne	r0, [r5], #256	; 0x100
    2564:	000b7d01 	andeq	r7, fp, r1, lsl #26
    2568:	19640300 	stmdbne	r4!, {r8, r9}^
    256c:	63340000 	teqvs	r4, #0
    2570:	b5010068 	strlt	r0, [r1, #-104]	; 0xffffff98
    2574:	00013323 	andeq	r3, r1, r3, lsr #6
    2578:	29330000 	ldmdbcs	r3!, {}	; <UNPREDICTABLE>
    257c:	01000006 	tsteq	r0, r6
    2580:	30011cab 	andcc	r1, r1, fp, lsr #25
    2584:	03000000 	movweq	r0, #0
    2588:	00001999 	muleq	r0, r9, r9
    258c:	72747334 	rsbsvc	r7, r4, #52, 6	; 0xd0000000
    2590:	33ab0100 			; <UNDEFINED> instruction: 0x33ab0100
    2594:	0000024c 	andeq	r0, r0, ip, asr #4
    2598:	00051d35 	andeq	r1, r5, r5, lsr sp
    259c:	3fab0100 	svccc	0x00ab0100
    25a0:	000000ee 	andeq	r0, r0, lr, ror #1
    25a4:	01007336 	tsteq	r0, r6, lsr r3
    25a8:	024c0fad 	subeq	r0, ip, #692	; 0x2b4
    25ac:	37000000 	strcc	r0, [r0, -r0]
    25b0:	00000543 	andeq	r0, r0, r3, asr #10
    25b4:	01149f01 	tsteq	r4, r1, lsl #30
	...
    25c0:	0000238d 	andeq	r2, r0, sp, lsl #7
    25c4:	001a0401 	andseq	r0, sl, r1, lsl #8
    25c8:	06812e00 	streq	r2, [r1], r0, lsl #28
    25cc:	9f010000 	svcls	0x00010000
    25d0:	00013322 	andeq	r3, r1, r2, lsr #6
    25d4:	0023bf00 	eoreq	fp, r3, r0, lsl #30
    25d8:	0023b900 	eoreq	fp, r3, r0, lsl #18
    25dc:	04d82e00 	ldrbeq	r2, [r8], #3584	; 0xe00
    25e0:	9f010000 	svcls	0x00010000
    25e4:	0000e033 	andeq	lr, r0, r3, lsr r0
    25e8:	0023f100 	eoreq	pc, r3, r0, lsl #2
    25ec:	0023eb00 	eoreq	lr, r3, r0, lsl #22
    25f0:	64692d00 	strbtvs	r2, [r9], #-3328	; 0xfffff300
    25f4:	9f010078 	svcls	0x00010078
    25f8:	0000ee42 	andeq	lr, r0, r2, asr #28
    25fc:	00242300 	eoreq	r2, r4, r0, lsl #6
    2600:	00241d00 	eoreq	r1, r4, r0, lsl #26
    2604:	061c2e00 	ldreq	r2, [ip], -r0, lsl #28
    2608:	9f010000 	svcls	0x00010000
    260c:	0000ee4e 	andeq	lr, r0, lr, asr #28
    2610:	00245500 	eoreq	r5, r4, r0, lsl #10
    2614:	00244f00 	eoreq	r4, r4, r0, lsl #30
    2618:	13380000 	teqne	r8, #0
    261c:	01000005 	tsteq	r0, r5
    2620:	00011495 	muleq	r1, r5, r4
    2624:	0c10001b 	ldceq	0, cr0, [r0], {27}
    2628:	8110001b 	tsthi	r0, fp, lsl r0
    262c:	01000024 	tsteq	r0, r4, lsr #32
    2630:	00001a78 	andeq	r1, r0, r8, ror sl
    2634:	0006812e 	andeq	r8, r6, lr, lsr #2
    2638:	23950100 	orrscs	r0, r5, #0, 2
    263c:	00000133 	andeq	r0, r0, r3, lsr r1
    2640:	000024a5 	andeq	r2, r0, r5, lsr #9
    2644:	000024a1 	andeq	r2, r0, r1, lsr #9
    2648:	0004d82e 	andeq	sp, r4, lr, lsr #16
    264c:	34950100 	ldrcc	r0, [r5], #256	; 0x100
    2650:	000000e0 	andeq	r0, r0, r0, ror #1
    2654:	000024ca 	andeq	r2, r0, sl, asr #9
    2658:	000024c6 	andeq	r2, r0, r6, asr #9
    265c:	7864692d 	stmdavc	r4!, {r0, r2, r3, r5, r8, fp, sp, lr}^
    2660:	43950100 	orrsmi	r0, r5, #0, 2
    2664:	000000ee 	andeq	r0, r0, lr, ror #1
    2668:	000024ef 	andeq	r2, r0, pc, ror #9
    266c:	000024eb 	andeq	r2, r0, fp, ror #9
    2670:	00061c2e 	andeq	r1, r6, lr, lsr #24
    2674:	4f950100 	svcmi	0x00950100
    2678:	000000ee 	andeq	r0, r0, lr, ror #1
    267c:	00002514 	andeq	r2, r0, r4, lsl r5
    2680:	00002510 	andeq	r2, r0, r0, lsl r5
    2684:	001b0a2b 	andseq	r0, fp, fp, lsr #20
    2688:	001bb610 	andseq	fp, fp, r0, lsl r6
    268c:	c1390000 	teqgt	r9, r0
    2690:	01000005 	tsteq	r0, r5
    2694:	bc01148e 	cfstrslt	mvf1, [r1], {142}	; 0x8e
    2698:	be100009 	cdplt	0, 1, cr0, cr0, cr9, {0}
    269c:	02100009 	andseq	r0, r0, #9
    26a0:	ca01007d 	bgt	4289c <__HEAP_SIZE+0x4189c>
    26a4:	3a00001a 	bcc	2714 <__HEAP_SIZE+0x1714>
    26a8:	00000681 	andeq	r0, r0, r1, lsl #13
    26ac:	33238e01 			; <UNDEFINED> instruction: 0x33238e01
    26b0:	01000001 	tsteq	r0, r1
    26b4:	04d83a50 	ldrbeq	r3, [r8], #2640	; 0xa50
    26b8:	8e010000 	cdphi	0, 0, cr0, cr1, cr0, {0}
    26bc:	0000e034 	andeq	lr, r0, r4, lsr r0
    26c0:	3b510100 	blcc	1442ac8 <__RAM_SIZE+0x1342ac8>
    26c4:	00786469 	rsbseq	r6, r8, r9, ror #8
    26c8:	ee438e01 	cdp	14, 4, cr8, cr3, cr1, {0}
    26cc:	01000000 	mrseq	r0, (UNDEF: 0)
    26d0:	061c3a52 			; <UNDEFINED> instruction: 0x061c3a52
    26d4:	8e010000 	cdphi	0, 0, cr0, cr1, cr0, {0}
    26d8:	0000ee4f 	andeq	lr, r0, pc, asr #28
    26dc:	00530100 	subseq	r0, r3, r0, lsl #2
    26e0:	0004d339 	andeq	sp, r4, r9, lsr r3
    26e4:	14850100 	strne	r0, [r5], #256	; 0x100
    26e8:	00000001 	andeq	r0, r0, r1
    26ec:	00000000 	andeq	r0, r0, r0
    26f0:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    26f4:	001b1c01 	andseq	r1, fp, r1, lsl #24
    26f8:	06813a00 	streq	r3, [r1], r0, lsl #20
    26fc:	85010000 	strhi	r0, [r1, #-0]
    2700:	00013325 	andeq	r3, r1, r5, lsr #6
    2704:	3a500100 	bcc	1402b0c <__RAM_SIZE+0x1302b0c>
    2708:	000004d8 	ldrdeq	r0, [r0], -r8
    270c:	e0368501 	eors	r8, r6, r1, lsl #10
    2710:	01000000 	mrseq	r0, (UNDEF: 0)
    2714:	64693b51 	strbtvs	r3, [r9], #-2897	; 0xfffff4af
    2718:	85010078 	strhi	r0, [r1, #-120]	; 0xffffff88
    271c:	0000ee45 	andeq	lr, r0, r5, asr #28
    2720:	3a520100 	bcc	1482b28 <__RAM_SIZE+0x1382b28>
    2724:	0000061c 	andeq	r0, r0, ip, lsl r6
    2728:	ee518501 	cdp	5, 5, cr8, cr1, cr1, {0}
    272c:	01000000 	mrseq	r0, (UNDEF: 0)
    2730:	013c0053 	teqeq	ip, r3, asr r0
    2734:	00066601 	andeq	r6, r6, r1, lsl #12
    2738:	00066600 	andeq	r6, r6, r0, lsl #12
    273c:	01013c00 	tsteq	r1, r0, lsl #24
    2740:	0000060d 	andeq	r0, r0, sp, lsl #12
    2744:	0000060d 	andeq	r0, r0, sp, lsl #12
    2748:	ee01013c 	mcr	1, 0, r0, cr1, cr12, {1}
    274c:	ee000006 	cdp	0, 0, cr0, cr0, cr6, {0}
    2750:	3c000006 	stccc	0, cr0, [r0], {6}
    2754:	04a80101 	strteq	r0, [r8], #257	; 0x101
    2758:	04a80000 	strteq	r0, [r8], #0
    275c:	013c0000 	teqeq	ip, r0
    2760:	00063901 	andeq	r3, r6, r1, lsl #18
    2764:	00063900 	andeq	r3, r6, r0, lsl #18
    2768:	01013c00 	tsteq	r1, r0, lsl #24
    276c:	00000577 	andeq	r0, r0, r7, ror r5
    2770:	00000577 	andeq	r0, r0, r7, ror r5
    2774:	9401013c 	strls	r0, [r1], #-316	; 0xfffffec4
    2778:	94000006 	strls	r0, [r0], #-6
    277c:	3c000006 	stccc	0, cr0, [r0], {6}
    2780:	052b0101 	streq	r0, [fp, #-257]!	; 0xfffffeff
    2784:	052b0000 	streq	r0, [fp, #-0]!
    2788:	013c0000 	teqeq	ip, r0
    278c:	0004f701 	andeq	pc, r4, r1, lsl #14
    2790:	0004f700 	andeq	pc, r4, r0, lsl #14
    2794:	01013c00 	tsteq	r1, r0, lsl #24
    2798:	000005d8 	ldrdeq	r0, [r0], -r8
    279c:	000005d8 	ldrdeq	r0, [r0], -r8
    27a0:	4c01013c 	stfmis	f0, [r1], {60}	; 0x3c
    27a4:	4c000005 	stcmi	0, cr0, [r0], {5}
    27a8:	3c000005 	stccc	0, cr0, [r0], {5}
    27ac:	05fa0101 	ldrbeq	r0, [sl, #257]!	; 0x101
    27b0:	05fa0000 	ldrbeq	r0, [sl, #0]!
    27b4:	013c0000 	teqeq	ip, r0
    27b8:	0006b201 	andeq	fp, r6, r1, lsl #4
    27bc:	0006b200 	andeq	fp, r6, r0, lsl #4
    27c0:	01013c00 	tsteq	r1, r0, lsl #24
    27c4:	000006a1 	andeq	r0, r0, r1, lsr #13
    27c8:	000006a1 	andeq	r0, r0, r1, lsr #13
    27cc:	0a01013d 	beq	42cc8 <__HEAP_SIZE+0x41cc8>
    27d0:	0a000005 	beq	27ec <__HEAP_SIZE+0x17ec>
    27d4:	07000005 	streq	r0, [r0, -r5]
    27d8:	4f000531 	svcmi	0x00000531
    27dc:	02000002 	andeq	r0, r0, #2
    27e0:	00067d00 	andeq	r7, r6, r0, lsl #26
    27e4:	bf010400 	svclt	0x00010400
    27e8:	0c000000 	stceq	0, cr0, [r0], {-0}
    27ec:	00000722 	andeq	r0, r0, r2, lsr #14
    27f0:	000001a8 	andeq	r0, r0, r8, lsr #3
    27f4:	000001e8 	andeq	r0, r0, r8, ror #3
	...
    2800:	0000181a 	andeq	r1, r0, sl, lsl r8
    2804:	8f060102 	svchi	0x00060102
    2808:	03000000 	movweq	r0, #0
    280c:	00000000 	andeq	r0, r0, r0
    2810:	3c182b02 			; <UNDEFINED> instruction: 0x3c182b02
    2814:	02000000 	andeq	r0, r0, #0
    2818:	008d0801 	addeq	r0, sp, r1, lsl #16
    281c:	02020000 	andeq	r0, r2, #0
    2820:	0002a505 	andeq	sl, r2, r5, lsl #10
    2824:	07020200 	streq	r0, [r2, -r0, lsl #4]
    2828:	000000ac 	andeq	r0, r0, ip, lsr #1
    282c:	5a050402 	bpl	14383c <__RAM_SIZE+0x4383c>
    2830:	03000002 	movweq	r0, #2
    2834:	0000037d 	andeq	r0, r0, sp, ror r3
    2838:	64194f02 	ldrvs	r4, [r9], #-3842	; 0xfffff0fe
    283c:	02000000 	andeq	r0, r0, #0
    2840:	02180704 	andseq	r0, r8, #4, 14	; 0x100000
    2844:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    2848:	00025505 	andeq	r5, r2, r5, lsl #10
    284c:	07080200 	streq	r0, [r8, -r0, lsl #4]
    2850:	00000213 	andeq	r0, r0, r3, lsl r2
    2854:	69050404 	stmdbvs	r5, {r2, sl}
    2858:	0200746e 	andeq	r7, r0, #1845493760	; 0x6e000000
    285c:	021d0704 	andseq	r0, sp, #4, 14	; 0x100000
    2860:	e7030000 	str	r0, [r3, -r0]
    2864:	03000004 	movweq	r0, #4
    2868:	008017d1 	ldrdeq	r1, [r0], r1	; <UNPREDICTABLE>
    286c:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    2870:	00024904 	andeq	r4, r2, r4, lsl #18
    2874:	08010200 	stmdaeq	r1, {r9}
    2878:	00000096 	muleq	r0, r6, r0
    287c:	00009a05 	andeq	r9, r0, r5, lsl #20
    2880:	a1040600 	tstge	r4, r0, lsl #12
    2884:	03000000 	movweq	r0, #0
    2888:	00000002 	andeq	r0, r0, r2
    288c:	30131804 	andscc	r1, r3, r4, lsl #16
    2890:	03000000 	movweq	r0, #0
    2894:	0000037f 	andeq	r0, r0, pc, ror r3
    2898:	58143004 	ldmdapl	r4, {r2, ip, sp}
    289c:	07000000 	streq	r0, [r0, -r0]
    28a0:	00073c01 	andeq	r3, r7, r1, lsl #24
    28a4:	083f0100 	ldmdaeq	pc!, {r8}	; <UNPREDICTABLE>
    28a8:	00008701 	andeq	r8, r0, r1, lsl #14
	...
    28b4:	00253500 	eoreq	r3, r5, r0, lsl #10
    28b8:	013b0100 	teqeq	fp, r0, lsl #2
    28bc:	d8080000 	stmdale	r8, {}	; <UNPREDICTABLE>
    28c0:	01000004 	tsteq	r0, r4
    28c4:	013b1b3f 	teqeq	fp, pc, lsr fp
    28c8:	25590000 	ldrbcs	r0, [r9, #-0]
    28cc:	25550000 	ldrbcs	r0, [r5, #-0]
    28d0:	20080000 	andcs	r0, r8, r0
    28d4:	01000005 	tsteq	r0, r5
    28d8:	00872a3f 	addeq	r2, r7, pc, lsr sl
    28dc:	257b0000 	ldrbcs	r0, [fp, #-0]!
    28e0:	25770000 	ldrbcs	r0, [r7, #-0]!
    28e4:	63090000 	movwvs	r0, #36864	; 0x9000
    28e8:	40010068 	andmi	r0, r1, r8, rrx
    28ec:	0000ac0d 	andeq	sl, r0, sp, lsl #24
    28f0:	00259f00 	eoreq	r9, r5, r0, lsl #30
    28f4:	00259900 	eoreq	r9, r5, r0, lsl #18
    28f8:	74690900 	strbtvc	r0, [r9], #-2304	; 0xfffff700
    28fc:	0c410100 	stfeqe	f0, [r1], {-0}
    2900:	00000087 	andeq	r0, r0, r7, lsl #1
    2904:	000025cd 	andeq	r2, r0, sp, asr #11
    2908:	000025c9 	andeq	r2, r0, r9, asr #11
    290c:	0000000a 	andeq	r0, r0, sl
    2910:	00024400 	andeq	r4, r2, r0, lsl #8
    2914:	04060000 	streq	r0, [r6], #-0
    2918:	000000ac 	andeq	r0, r0, ip, lsr #1
    291c:	0754010b 	ldrbeq	r0, [r4, -fp, lsl #2]
    2920:	3b010000 	blcc	42928 <__HEAP_SIZE+0x41928>
    2924:	00000106 	andeq	r0, r0, r6, lsl #2
    2928:	00000000 	andeq	r0, r0, r0
    292c:	25ec0000 	strbcs	r0, [ip, #0]!
    2930:	82010000 	andhi	r0, r1, #0
    2934:	08000001 	stmdaeq	r0, {r0}
    2938:	00000735 	andeq	r0, r0, r5, lsr r7
    293c:	a61c3b01 	ldrge	r3, [ip], -r1, lsl #22
    2940:	10000000 	andne	r0, r0, r0
    2944:	0c000026 	stceq	0, cr0, [r0], {38}	; 0x26
    2948:	0c000026 	stceq	0, cr0, [r0], {38}	; 0x26
    294c:	00000000 	andeq	r0, r0, r0
    2950:	00000198 	muleq	r0, r8, r1
    2954:	0350010d 	cmpeq	r0, #1073741827	; 0x40000003
    2958:	005001f3 	ldrsheq	r0, [r0], #-19	; 0xffffffed
    295c:	6c010e00 	stcvs	14, cr0, [r1], {-0}
    2960:	01000000 	mrseq	r0, (UNDEF: 0)
    2964:	6c010632 	stcvs	6, cr0, [r1], {50}	; 0x32
    2968:	9010001b 	andsls	r0, r0, fp, lsl r0
    296c:	0210001b 	andseq	r0, r0, #27
    2970:	0701007d 	smlsdxeq	r1, sp, r0, r0
    2974:	00008801 	andeq	r8, r0, r1, lsl #16
    2978:	05dd0500 	ldrbeq	r0, [sp, #1280]	; 0x500
    297c:	00007901 	andeq	r7, r0, r1, lsl #18
    2980:	001b4c00 	andseq	r4, fp, r0, lsl #24
    2984:	001b6a10 	andseq	r6, fp, r0, lsl sl
    2988:	00263110 	eoreq	r3, r6, r0, lsl r1
    298c:	01f80100 	mvnseq	r0, r0, lsl #2
    2990:	35080000 	strcc	r0, [r8, #-0]
    2994:	01000007 	tsteq	r0, r7
    2998:	00a61628 	adceq	r1, r6, r8, lsr #12
    299c:	26550000 	ldrbcs	r0, [r5], -r0
    29a0:	26510000 	ldrbcs	r0, [r1], -r0
    29a4:	4e0f0000 	cdpmi	0, 0, cr0, cr15, cr0, {0}
    29a8:	01000007 	tsteq	r0, r7
    29ac:	00790929 	rsbseq	r0, r9, r9, lsr #18
    29b0:	26770000 	ldrbtcs	r0, [r7], -r0
    29b4:	26730000 	ldrbtcs	r0, [r3], -r0
    29b8:	580a0000 	stmdapl	sl, {}	; <UNPREDICTABLE>
    29bc:	1210001b 	andsne	r0, r0, #27
    29c0:	0c000002 	stceq	0, cr0, [r0], {2}
    29c4:	10001b66 	andne	r1, r0, r6, ror #22
    29c8:	00000212 	andeq	r0, r0, r2, lsl r2
    29cc:	0150010d 	cmpeq	r0, sp, lsl #2
    29d0:	1000003a 	andne	r0, r0, sl, lsr r0
    29d4:	00075e01 	andeq	r5, r7, r1, lsl #28
    29d8:	05230100 	streq	r0, [r3, #-256]!	; 0xffffff00
    29dc:	00007901 	andeq	r7, r0, r1, lsl #18
	...
    29e8:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    29ec:	0a011101 	beq	46df8 <__HEAP_SIZE+0x45df8>
    29f0:	01000005 	tsteq	r0, r5
    29f4:	7901051d 	stmdbvc	r1, {r0, r2, r3, r4, r8, sl}
    29f8:	38000000 	stmdacc	r0, {}	; <UNPREDICTABLE>
    29fc:	4c10001b 	ldcmi	0, cr0, [r0], {27}
    2a00:	0210001b 	andseq	r0, r0, #27
    2a04:	4401007d 	strmi	r0, [r1], #-125	; 0xffffff83
    2a08:	12000002 	andne	r0, r0, #2
    2a0c:	01006863 	tsteq	r0, r3, ror #16
    2a10:	0079121d 	rsbseq	r1, r9, sp, lsl r2
    2a14:	26980000 	ldrcs	r0, [r8], r0
    2a18:	26960000 	ldrcs	r0, [r6], r0
    2a1c:	13000000 	movwne	r0, #0
    2a20:	07460101 	strbeq	r0, [r6, -r1, lsl #2]
    2a24:	07460000 	strbeq	r0, [r6, -r0]
    2a28:	d9050000 	stmdble	r5, {}	; <UNPREDICTABLE>
    2a2c:	0a010005 	beq	42a48 <__HEAP_SIZE+0x41a48>
    2a30:	00020000 	andeq	r0, r2, r0
    2a34:	000007dc 	ldrdeq	r0, [r0], -ip
    2a38:	00bf0104 	adcseq	r0, pc, r4, lsl #2
    2a3c:	9a0c0000 	bls	302a44 <__RAM_SIZE+0x202a44>
    2a40:	a8000008 	stmdage	r0, {r3}
    2a44:	20000001 	andcs	r0, r0, r1
    2a48:	00000002 	andeq	r0, r0, r2
    2a4c:	00000000 	andeq	r0, r0, r0
    2a50:	56000000 	strpl	r0, [r0], -r0
    2a54:	0200001b 	andeq	r0, r0, #27
    2a58:	008f0601 	addeq	r0, pc, r1, lsl #12
    2a5c:	01020000 	mrseq	r0, (UNDEF: 2)
    2a60:	00008d08 	andeq	r8, r0, r8, lsl #26
    2a64:	05020200 	streq	r0, [r2, #-512]	; 0xfffffe00
    2a68:	000002a5 	andeq	r0, r0, r5, lsr #5
    2a6c:	0007de03 	andeq	sp, r7, r3, lsl #28
    2a70:	19390300 	ldmdbne	r9!, {r8, r9}
    2a74:	0000004a 	andeq	r0, r0, sl, asr #32
    2a78:	ac070202 	sfmge	f0, 4, [r7], {2}
    2a7c:	02000000 	andeq	r0, r0, #0
    2a80:	025a0504 	subseq	r0, sl, #4, 10	; 0x1000000
    2a84:	7d030000 	stcvc	0, cr0, [r3, #-0]
    2a88:	03000003 	movweq	r0, #3
    2a8c:	0064194f 	rsbeq	r1, r4, pc, asr #18
    2a90:	04020000 	streq	r0, [r2], #-0
    2a94:	00021807 	andeq	r1, r2, r7, lsl #16
    2a98:	05080200 	streq	r0, [r8, #-512]	; 0xfffffe00
    2a9c:	00000255 	andeq	r0, r0, r5, asr r2
    2aa0:	13070802 	movwne	r0, #30722	; 0x7802
    2aa4:	04000002 	streq	r0, [r0], #-2
    2aa8:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
    2aac:	04020074 	streq	r0, [r2], #-116	; 0xffffff8c
    2ab0:	00021d07 	andeq	r1, r2, r7, lsl #26
    2ab4:	00800500 	addeq	r0, r0, r0, lsl #10
    2ab8:	e7030000 	str	r0, [r3, -r0]
    2abc:	04000004 	streq	r0, [r0], #-4
    2ac0:	008017d1 	ldrdeq	r1, [r0], r1	; <UNPREDICTABLE>
    2ac4:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    2ac8:	00024904 	andeq	r4, r2, r4, lsl #18
    2acc:	08010200 	stmdaeq	r1, {r9}
    2ad0:	00000096 	muleq	r0, r6, r0
    2ad4:	0007e003 	andeq	lr, r7, r3
    2ad8:	14240500 	strtne	r0, [r4], #-1280	; 0xfffffb00
    2adc:	0000003e 	andeq	r0, r0, lr, lsr r0
    2ae0:	00037f03 	andeq	r7, r3, r3, lsl #30
    2ae4:	14300500 	ldrtne	r0, [r0], #-1280	; 0xfffffb00
    2ae8:	00000058 	andeq	r0, r0, r8, asr r0
    2aec:	00087103 	andeq	r7, r8, r3, lsl #2
    2af0:	23280600 			; <UNDEFINED> instruction: 0x23280600
    2af4:	000000ca 	andeq	r0, r0, sl, asr #1
    2af8:	00092306 	andeq	r2, r9, r6, lsl #6
    2afc:	29062000 	stmdbcs	r6, {sp}
    2b00:	00014a08 	andeq	r4, r1, r8, lsl #20
    2b04:	30720700 	rsbscc	r0, r2, r0, lsl #14
    2b08:	122a0600 	eorne	r0, sl, #0, 12
    2b0c:	00000080 	andeq	r0, r0, r0, lsl #1
    2b10:	07002302 	streq	r2, [r0, -r2, lsl #6]
    2b14:	06003172 			; <UNDEFINED> instruction: 0x06003172
    2b18:	0080122b 	addeq	r1, r0, fp, lsr #4
    2b1c:	23020000 	movwcs	r0, #8192	; 0x2000
    2b20:	32720704 	rsbscc	r0, r2, #4, 14	; 0x100000
    2b24:	122c0600 	eorne	r0, ip, #0, 12
    2b28:	00000080 	andeq	r0, r0, r0, lsl #1
    2b2c:	07082302 	streq	r2, [r8, -r2, lsl #6]
    2b30:	06003372 			; <UNDEFINED> instruction: 0x06003372
    2b34:	0080122d 	addeq	r1, r0, sp, lsr #4
    2b38:	23020000 	movwcs	r0, #8192	; 0x2000
    2b3c:	3172070c 	cmncc	r2, ip, lsl #14
    2b40:	2e060032 	mcrcs	0, 0, r0, cr6, cr2, {1}
    2b44:	00008012 	andeq	r8, r0, r2, lsl r0
    2b48:	10230200 	eorne	r0, r3, r0, lsl #4
    2b4c:	00726c07 	rsbseq	r6, r2, r7, lsl #24
    2b50:	80122f06 	andshi	r2, r2, r6, lsl #30
    2b54:	02000000 	andeq	r0, r0, #0
    2b58:	70071423 	andvc	r1, r7, r3, lsr #8
    2b5c:	30060063 	andcc	r0, r6, r3, rrx
    2b60:	00008012 	andeq	r8, r0, r2, lsl r0
    2b64:	18230200 	stmdane	r3!, {r9}
    2b68:	72737007 	rsbsvc	r7, r3, #7
    2b6c:	12310600 	eorsne	r0, r1, #0, 12
    2b70:	00000080 	andeq	r0, r0, r0, lsl #1
    2b74:	001c2302 	andseq	r2, ip, r2, lsl #6
    2b78:	00082d03 	andeq	r2, r8, r3, lsl #26
    2b7c:	23340600 	teqcs	r4, #0, 12
    2b80:	00000156 	andeq	r0, r0, r6, asr r1
    2b84:	00085206 	andeq	r5, r8, r6, lsl #4
    2b88:	35062000 	strcc	r2, [r6, #-0]
    2b8c:	0001d608 	andeq	sp, r1, r8, lsl #12
    2b90:	34720700 	ldrbtcc	r0, [r2], #-1792	; 0xfffff900
    2b94:	12360600 	eorsne	r0, r6, #0, 12
    2b98:	00000080 	andeq	r0, r0, r0, lsl #1
    2b9c:	07002302 	streq	r2, [r0, -r2, lsl #6]
    2ba0:	06003572 			; <UNDEFINED> instruction: 0x06003572
    2ba4:	00801237 	addeq	r1, r0, r7, lsr r2
    2ba8:	23020000 	movwcs	r0, #8192	; 0x2000
    2bac:	36720704 	ldrbtcc	r0, [r2], -r4, lsl #14
    2bb0:	12380600 	eorsne	r0, r8, #0, 12
    2bb4:	00000080 	andeq	r0, r0, r0, lsl #1
    2bb8:	07082302 	streq	r2, [r8, -r2, lsl #6]
    2bbc:	06003772 			; <UNDEFINED> instruction: 0x06003772
    2bc0:	00801239 	addeq	r1, r0, r9, lsr r2
    2bc4:	23020000 	movwcs	r0, #8192	; 0x2000
    2bc8:	3872070c 	ldmdacc	r2!, {r2, r3, r8, r9, sl}^
    2bcc:	123a0600 	eorsne	r0, sl, #0, 12
    2bd0:	00000080 	andeq	r0, r0, r0, lsl #1
    2bd4:	07102302 	ldreq	r2, [r0, -r2, lsl #6]
    2bd8:	06003972 			; <UNDEFINED> instruction: 0x06003972
    2bdc:	0080123b 	addeq	r1, r0, fp, lsr r2
    2be0:	23020000 	movwcs	r0, #8192	; 0x2000
    2be4:	31720714 	cmncc	r2, r4, lsl r7
    2be8:	3c060030 	stccc	0, cr0, [r6], {48}	; 0x30
    2bec:	00008012 	andeq	r8, r0, r2, lsl r0
    2bf0:	18230200 	stmdane	r3!, {r9}
    2bf4:	31317207 	teqcc	r1, r7, lsl #4
    2bf8:	123d0600 	eorsne	r0, sp, #0, 12
    2bfc:	00000080 	andeq	r0, r0, r0, lsl #1
    2c00:	001c2302 	andseq	r2, ip, r2, lsl #6
    2c04:	0007bd03 	andeq	fp, r7, r3, lsl #26
    2c08:	1c400600 	mcrrne	6, 0, r0, r0, cr0
    2c0c:	000001e2 	andeq	r0, r0, r2, ror #3
    2c10:	00086506 	andeq	r6, r8, r6, lsl #10
    2c14:	41064000 	mrsmi	r4, (UNDEF: 6)
    2c18:	00020e08 	andeq	r0, r2, r8, lsl #28
    2c1c:	085e0800 	ldmdaeq	lr, {fp}^
    2c20:	42060000 	andmi	r0, r6, #0
    2c24:	00014a1a 	andeq	r4, r1, sl, lsl sl
    2c28:	00230200 	eoreq	r0, r3, r0, lsl #4
    2c2c:	00092f08 	andeq	r2, r9, r8, lsl #30
    2c30:	1a430600 	bne	10c4438 <__RAM_SIZE+0xfc4438>
    2c34:	000000be 	strheq	r0, [r0], -lr
    2c38:	00202302 	eoreq	r2, r0, r2, lsl #6
    2c3c:	00090a03 	andeq	r0, r9, r3, lsl #20
    2c40:	0f460600 	svceq	0x00460600
    2c44:	0000021f 	andeq	r0, r0, pc, lsl r2
    2c48:	00020e05 	andeq	r0, r2, r5, lsl #28
    2c4c:	25040900 	strcs	r0, [r4, #-2304]	; 0xfffff700
    2c50:	0a000002 	beq	2c60 <__HEAP_SIZE+0x1c60>
    2c54:	00007901 	andeq	r7, r0, r1, lsl #18
    2c58:	00024400 	andeq	r4, r2, r0, lsl #8
    2c5c:	02440b00 	subeq	r0, r4, #0, 22
    2c60:	8c0b0000 	stchi	0, cr0, [fp], {-0}
    2c64:	0b000000 	bleq	2c6c <__HEAP_SIZE+0x1c6c>
    2c68:	00000244 	andeq	r0, r0, r4, asr #4
    2c6c:	0002440b 	andeq	r4, r2, fp, lsl #8
    2c70:	04090000 	streq	r0, [r9], #-0
    2c74:	00000080 	andeq	r0, r0, r0, lsl #1
    2c78:	0009030c 	andeq	r0, r9, ip, lsl #6
    2c7c:	151d0100 	ldrne	r0, [sp, #-256]	; 0xffffff00
    2c80:	00000080 	andeq	r0, r0, r0, lsl #1
    2c84:	360c0101 	strcc	r0, [ip], -r1, lsl #2
    2c88:	01000009 	tsteq	r0, r9
    2c8c:	0080151e 	addeq	r1, r0, lr, lsl r5
    2c90:	01010000 	mrseq	r0, (UNDEF: 1)
    2c94:	0007e90c 	andeq	lr, r7, ip, lsl #18
    2c98:	151f0100 	ldrne	r0, [pc, #-256]	; 2ba0 <__HEAP_SIZE+0x1ba0>
    2c9c:	00000080 	andeq	r0, r0, r0, lsl #1
    2ca0:	030c0101 	movweq	r0, #49409	; 0xc101
    2ca4:	01000008 	tsteq	r0, r8
    2ca8:	00801520 	addeq	r1, r0, r0, lsr #10
    2cac:	01010000 	mrseq	r0, (UNDEF: 1)
    2cb0:	0008120d 	andeq	r1, r8, sp, lsl #4
    2cb4:	20710100 	rsbscs	r0, r1, r0, lsl #2
    2cb8:	0000021a 	andeq	r0, r0, sl, lsl r2
    2cbc:	00040305 	andeq	r0, r4, r5, lsl #6
    2cc0:	860d3800 	strhi	r3, [sp], -r0, lsl #16
    2cc4:	01000008 	tsteq	r0, r8
    2cc8:	021a2072 	andseq	r2, sl, #114	; 0x72
    2ccc:	03050000 	movweq	r0, #20480	; 0x5000
    2cd0:	38000008 	stmdacc	r0, {r3}
    2cd4:	0008db0e 	andeq	sp, r8, lr, lsl #22
    2cd8:	17740100 	ldrbne	r0, [r4, -r0, lsl #2]!
    2cdc:	00000087 	andeq	r0, r0, r7, lsl #1
    2ce0:	70030501 	andvc	r0, r3, r1, lsl #10
    2ce4:	0e380085 	cdpeq	0, 3, cr0, cr8, cr5, {4}
    2ce8:	000007cb 	andeq	r0, r0, fp, asr #15
    2cec:	87177501 	ldrhi	r7, [r7, -r1, lsl #10]
    2cf0:	01000000 	mrseq	r0, (UNDEF: 0)
    2cf4:	85740305 	ldrbhi	r0, [r4, #-773]!	; 0xfffffcfb
    2cf8:	010f3800 	tsteq	pc, r0, lsl #16
    2cfc:	00000767 	andeq	r0, r0, r7, ror #14
    2d00:	05012501 	streq	r2, [r1, #-1281]	; 0xfffffaff
    2d04:	00007901 	andeq	r7, r0, r1, lsl #18
	...
    2d10:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    2d14:	00031601 	andeq	r1, r3, r1, lsl #12
    2d18:	081f1000 	ldmdaeq	pc, {ip}	; <UNPREDICTABLE>
    2d1c:	25010000 	strcs	r0, [r1, #-0]
    2d20:	020e3001 	andeq	r3, lr, #1
    2d24:	26b30000 	ldrtcs	r0, [r3], r0
    2d28:	26ab0000 	strtcs	r0, [fp], r0
    2d2c:	0b110000 	bleq	442d34 <__RAM_SIZE+0x342d34>
    2d30:	01000008 	tsteq	r0, r8
    2d34:	79090126 	stmdbvc	r9, {r1, r2, r5, r8}
    2d38:	f4000000 	vst4.8	{d0-d3}, [r0], r0
    2d3c:	ee000026 	cdp	0, 0, cr0, cr0, cr6, {1}
    2d40:	00000026 	andeq	r0, r0, r6, lsr #32
    2d44:	000a0112 	andeq	r0, sl, r2, lsl r1
    2d48:	21010000 	mrscs	r0, (UNDEF: 1)
    2d4c:	80010e01 	andhi	r0, r1, r1, lsl #28
    2d50:	94000000 	strls	r0, [r0], #-0
    2d54:	9c10001e 	ldcls	0, cr0, [r0], {30}
    2d58:	0210001e 	andseq	r0, r0, #30
    2d5c:	0f01007d 	svceq	0x0001007d
    2d60:	0002c701 	andeq	ip, r2, r1, lsl #14
    2d64:	011d0100 	tsteq	sp, r0, lsl #2
    2d68:	0080010e 	addeq	r0, r0, lr, lsl #2
    2d6c:	1e8c0000 	cdpne	0, 8, cr0, cr12, cr0, {0}
    2d70:	1e921000 	cdpne	0, 9, cr1, cr2, cr0, {0}
    2d74:	7d021000 	stcvc	0, cr1, [r2, #-0]
    2d78:	03750100 	cmneq	r5, #0, 2
    2d7c:	ac130000 	ldcge	0, cr0, [r3], {-0}
    2d80:	8c000009 	stchi	0, cr0, [r0], {9}
    2d84:	0210001e 	andseq	r0, r0, #30
    2d88:	10001e8c 	andne	r1, r0, ip, lsl #29
    2d8c:	10001e90 	mulne	r0, r0, lr
    2d90:	0c011e01 	stceq	14, cr1, [r1], {1}
    2d94:	0009bf14 	andeq	fp, r9, r4, lsl pc
    2d98:	00272200 	eoreq	r2, r7, r0, lsl #4
    2d9c:	00272000 	eoreq	r2, r7, r0
    2da0:	15000000 	strne	r0, [r0, #-0]
    2da4:	00023401 	andeq	r3, r2, r1, lsl #8
    2da8:	05f10100 	ldrbeq	r0, [r1, #256]!	; 0x100
    2dac:	00007901 	andeq	r7, r0, r1, lsl #18
    2db0:	001bf400 	andseq	pc, fp, r0, lsl #8
    2db4:	001c7010 	andseq	r7, ip, r0, lsl r0
    2db8:	00273510 	eoreq	r3, r7, r0, lsl r5
    2dbc:	044f0100 	strbeq	r0, [pc], #-256	; 2dc4 <__HEAP_SIZE+0x1dc4>
    2dc0:	d8160000 	ldmdale	r6, {}	; <UNPREDICTABLE>
    2dc4:	01000004 	tsteq	r0, r4
    2dc8:	024428f1 	subeq	r2, r4, #15794176	; 0xf10000
    2dcc:	275d0000 	ldrbcs	r0, [sp, -r0]
    2dd0:	27550000 	ldrbcs	r0, [r5, -r0]
    2dd4:	20160000 	andscs	r0, r6, r0
    2dd8:	01000005 	tsteq	r0, r5
    2ddc:	008c37f1 	strdeq	r3, [ip], r1
    2de0:	279c0000 	ldrcs	r0, [ip, r0]
    2de4:	27940000 	ldrcs	r0, [r4, r0]
    2de8:	d5160000 	ldrle	r0, [r6, #-0]
    2dec:	01000002 	tsteq	r0, r2
    2df0:	02444bf1 	subeq	r4, r4, #246784	; 0x3c400
    2df4:	27d90000 	ldrbcs	r0, [r9, r0]
    2df8:	27d30000 	ldrbcs	r0, [r3, r0]
    2dfc:	18160000 	ldmdane	r6, {}	; <UNPREDICTABLE>
    2e00:	01000000 	mrseq	r0, (UNDEF: 0)
    2e04:	024466f1 	subeq	r6, r4, #252706816	; 0xf100000
    2e08:	280d0000 	stmdacs	sp, {}	; <UNPREDICTABLE>
    2e0c:	28050000 	stmdacs	r5, {}	; <UNPREDICTABLE>
    2e10:	24170000 	ldrcs	r0, [r7], #-0
    2e14:	01000000 	mrseq	r0, (UNDEF: 0)
    2e18:	007909f2 	ldrshteq	r0, [r9], #-146	; 0xffffff6e
    2e1c:	284a0000 	stmdacs	sl, {}^	; <UNPREDICTABLE>
    2e20:	28440000 	stmdacs	r4, {}^	; <UNPREDICTABLE>
    2e24:	70180000 	andsvc	r0, r8, r0
    2e28:	f3010063 	vhadd.u8	q0, <illegal reg q0.5>, <illegal reg q9.5>
    2e2c:	00008012 	andeq	r8, r0, r2, lsl r0
    2e30:	00287f00 	eoreq	r7, r8, r0, lsl #30
    2e34:	00287500 	eoreq	r7, r8, r0, lsl #10
    2e38:	706f1800 	rsbvc	r1, pc, r0, lsl #16
    2e3c:	1af30100 	bne	ffcc3244 <__StackTop+0xc7bc3244>
    2e40:	00000080 	andeq	r0, r0, r0, lsl #1
    2e44:	000028c8 	andeq	r2, r0, r8, asr #17
    2e48:	000028c2 	andeq	r2, r0, r2, asr #17
    2e4c:	00707318 	rsbseq	r7, r0, r8, lsl r3
    2e50:	4423f301 	strtmi	pc, [r3], #-769	; 0xfffffcff
    2e54:	f9000002 			; <UNDEFINED> instruction: 0xf9000002
    2e58:	f3000028 	vhadd.u8	d0, d0, d24
    2e5c:	19000028 	stmdbne	r0, {r3, r5}
    2e60:	10001c36 	andne	r1, r0, r6, lsr ip
    2e64:	000008c9 	andeq	r0, r0, r9, asr #17
    2e68:	00000445 	andeq	r0, r0, r5, asr #8
    2e6c:	0250011a 	subseq	r0, r0, #-2147483642	; 0x80000006
    2e70:	1b000079 	blne	305c <__HEAP_SIZE+0x205c>
    2e74:	10001c3a 	andne	r1, r0, sl, lsr ip
    2e78:	0000086f 	andeq	r0, r0, pc, ror #16
    2e7c:	c8011c00 	stmdagt	r1, {sl, fp, ip}
    2e80:	01000008 	tsteq	r0, r8
    2e84:	e00106af 	and	r0, r1, pc, lsr #13
    2e88:	8c10001c 	ldchi	0, cr0, [r0], {28}
    2e8c:	2410001e 	ldrcs	r0, [r0], #-30	; 0xffffffe2
    2e90:	01000029 	tsteq	r0, r9, lsr #32
    2e94:	00000776 	andeq	r0, r0, r6, ror r7
    2e98:	00080516 	andeq	r0, r8, r6, lsl r5
    2e9c:	27af0100 	strcs	r0, [pc, r0, lsl #2]!
    2ea0:	00000244 	andeq	r0, r0, r4, asr #4
    2ea4:	0000294e 	andeq	r2, r0, lr, asr #18
    2ea8:	00002944 	andeq	r2, r0, r4, asr #18
    2eac:	00082616 	andeq	r2, r8, r6, lsl r6
    2eb0:	3baf0100 	blcc	febc32b8 <__StackTop+0xc6ac32b8>
    2eb4:	00000080 	andeq	r0, r0, r0, lsl #1
    2eb8:	00002997 	muleq	r0, r7, r9
    2ebc:	00002993 	muleq	r0, r3, r9
    2ec0:	00002417 	andeq	r2, r0, r7, lsl r4
    2ec4:	09b00100 	ldmibeq	r0!, {r8}
    2ec8:	00000079 	andeq	r0, r0, r9, ror r0
    2ecc:	000029c1 	andeq	r2, r0, r1, asr #19
    2ed0:	000029b5 			; <UNDEFINED> instruction: 0x000029b5
    2ed4:	00074e17 	andeq	r4, r7, r7, lsl lr
    2ed8:	14b00100 	ldrtne	r0, [r0], #256	; 0x100
    2edc:	00000079 	andeq	r0, r0, r9, ror r0
    2ee0:	00002a17 	andeq	r2, r0, r7, lsl sl
    2ee4:	00002a0d 	andeq	r2, r0, sp, lsl #20
    2ee8:	0002db17 	andeq	sp, r2, r7, lsl fp
    2eec:	13b10100 			; <UNDEFINED> instruction: 0x13b10100
    2ef0:	00000244 	andeq	r0, r0, r4, asr #4
    2ef4:	00002a84 	andeq	r2, r0, r4, lsl #21
    2ef8:	00002a5a 	andeq	r2, r0, sl, asr sl
    2efc:	00086b0d 	andeq	r6, r8, sp, lsl #22
    2f00:	1ab20100 	bne	fec83308 <__StackTop+0xc6b83308>
    2f04:	000001d6 	ldrdeq	r0, [r0], -r6
    2f08:	85780305 	ldrbhi	r0, [r8, #-773]!	; 0xfffffcfb
    2f0c:	d80d3800 	stmdale	sp, {fp, ip, sp}
    2f10:	01000004 	tsteq	r0, r4
    2f14:	077619b3 			; <UNDEFINED> instruction: 0x077619b3
    2f18:	03050000 	movweq	r0, #20480	; 0x5000
    2f1c:	38008470 	stmdacc	r0, {r4, r5, r6, sl, pc}
    2f20:	001d3019 	andseq	r3, sp, r9, lsl r0
    2f24:	0009cd10 	andeq	ip, r9, r0, lsl sp
    2f28:	00050600 	andeq	r0, r5, r0, lsl #12
    2f2c:	50011a00 	andpl	r1, r1, r0, lsl #20
    2f30:	00007702 	andeq	r7, r0, r2, lsl #14
    2f34:	001d3619 	andseq	r3, sp, r9, lsl r6
    2f38:	0009cd10 	andeq	ip, r9, r0, lsl sp
    2f3c:	00051d00 	andeq	r1, r5, r0, lsl #26
    2f40:	50011a00 	andpl	r1, r1, r0, lsl #20
    2f44:	5a180305 	bpl	603b60 <__RAM_SIZE+0x503b60>
    2f48:	19001000 	stmdbne	r0, {ip}
    2f4c:	10001d3c 	andne	r1, r0, ip, lsr sp
    2f50:	000009cd 	andeq	r0, r0, sp, asr #19
    2f54:	00000534 	andeq	r0, r0, r4, lsr r5
    2f58:	0550011a 	ldrbeq	r0, [r0, #-282]	; 0xfffffee6
    2f5c:	005a3803 	subseq	r3, sl, r3, lsl #16
    2f60:	44190010 	ldrmi	r0, [r9], #-16
    2f64:	da10001d 	ble	402fe0 <__RAM_SIZE+0x302fe0>
    2f68:	4b000009 	blmi	2f94 <__HEAP_SIZE+0x1f94>
    2f6c:	1a000005 	bne	2f88 <__HEAP_SIZE+0x1f88>
    2f70:	03055001 	movweq	r5, #20481	; 0x5001
    2f74:	10005a4c 	andne	r5, r0, ip, asr #20
    2f78:	1d4c1900 	vstrne.16	s3, [ip, #-0]	; <UNPREDICTABLE>
    2f7c:	09da1000 	ldmibeq	sl, {ip}^
    2f80:	05620000 	strbeq	r0, [r2, #-0]!
    2f84:	011a0000 	tsteq	sl, r0
    2f88:	60030550 	andvs	r0, r3, r0, asr r5
    2f8c:	0010005a 	andseq	r0, r0, sl, asr r0
    2f90:	001d5419 	andseq	r5, sp, r9, lsl r4
    2f94:	0009da10 	andeq	sp, r9, r0, lsl sl
    2f98:	00057900 	andeq	r7, r5, r0, lsl #18
    2f9c:	50011a00 	andpl	r1, r1, r0, lsl #20
    2fa0:	5a740305 	bpl	1d03bbc <__RAM_SIZE+0x1c03bbc>
    2fa4:	19001000 	stmdbne	r0, {ip}
    2fa8:	10001d5c 	andne	r1, r0, ip, asr sp
    2fac:	000009da 	ldrdeq	r0, [r0], -sl
    2fb0:	00000590 	muleq	r0, r0, r5
    2fb4:	0550011a 	ldrbeq	r0, [r0, #-282]	; 0xfffffee6
    2fb8:	005a8803 	subseq	r8, sl, r3, lsl #16
    2fbc:	64190010 	ldrvs	r0, [r9], #-16
    2fc0:	da10001d 	ble	40303c <__RAM_SIZE+0x30303c>
    2fc4:	a7000009 	strge	r0, [r0, -r9]
    2fc8:	1a000005 	bne	2fe4 <__HEAP_SIZE+0x1fe4>
    2fcc:	03055001 	movweq	r5, #20481	; 0x5001
    2fd0:	10005a9c 	mulne	r0, ip, sl
    2fd4:	1d6c1900 			; <UNDEFINED> instruction: 0x1d6c1900
    2fd8:	09da1000 	ldmibeq	sl, {ip}^
    2fdc:	05be0000 	ldreq	r0, [lr, #0]!
    2fe0:	011a0000 	tsteq	sl, r0
    2fe4:	b0030550 	andlt	r0, r3, r0, asr r5
    2fe8:	0010005a 	andseq	r0, r0, sl, asr r0
    2fec:	001d7419 	andseq	r7, sp, r9, lsl r4
    2ff0:	0009da10 	andeq	sp, r9, r0, lsl sl
    2ff4:	0005d500 	andeq	sp, r5, r0, lsl #10
    2ff8:	50011a00 	andpl	r1, r1, r0, lsl #20
    2ffc:	5ac40305 	bpl	ff103c18 <__StackTop+0xc7003c18>
    3000:	19001000 	stmdbne	r0, {ip}
    3004:	10001d7c 	andne	r1, r0, ip, ror sp
    3008:	000009da 	ldrdeq	r0, [r0], -sl
    300c:	000005ec 	andeq	r0, r0, ip, ror #11
    3010:	0550011a 	ldrbeq	r0, [r0, #-282]	; 0xfffffee6
    3014:	005ad803 	subseq	sp, sl, r3, lsl #16
    3018:	84190010 	ldrhi	r0, [r9], #-16
    301c:	da10001d 	ble	403098 <__RAM_SIZE+0x303098>
    3020:	03000009 	movweq	r0, #9
    3024:	1a000006 	bne	3044 <__HEAP_SIZE+0x2044>
    3028:	03055001 	movweq	r5, #20481	; 0x5001
    302c:	10005aec 	andne	r5, r0, ip, ror #21
    3030:	1d8c1900 	vstrne.16	s2, [ip]	; <UNPREDICTABLE>
    3034:	09da1000 	ldmibeq	sl, {ip}^
    3038:	061a0000 	ldreq	r0, [sl], -r0
    303c:	011a0000 	tsteq	sl, r0
    3040:	00030550 	andeq	r0, r3, r0, asr r5
    3044:	0010005b 	andseq	r0, r0, fp, asr r0
    3048:	001d9419 	andseq	r9, sp, r9, lsl r4
    304c:	0009da10 	andeq	sp, r9, r0, lsl sl
    3050:	00063100 	andeq	r3, r6, r0, lsl #2
    3054:	50011a00 	andpl	r1, r1, r0, lsl #20
    3058:	5b140305 	blpl	503c74 <__RAM_SIZE+0x403c74>
    305c:	19001000 	stmdbne	r0, {ip}
    3060:	10001d9c 	mulne	r0, ip, sp
    3064:	000009da 	ldrdeq	r0, [r0], -sl
    3068:	00000648 	andeq	r0, r0, r8, asr #12
    306c:	0550011a 	ldrbeq	r0, [r0, #-282]	; 0xfffffee6
    3070:	005b2803 	subseq	r2, fp, r3, lsl #16
    3074:	a4190010 	ldrge	r0, [r9], #-16
    3078:	da10001d 	ble	4030f4 <__RAM_SIZE+0x3030f4>
    307c:	5f000009 	svcpl	0x00000009
    3080:	1a000006 	bne	30a0 <__HEAP_SIZE+0x20a0>
    3084:	03055001 	movweq	r5, #20481	; 0x5001
    3088:	10005b3c 	andne	r5, r0, ip, lsr fp
    308c:	1dac1900 			; <UNDEFINED> instruction: 0x1dac1900
    3090:	09da1000 	ldmibeq	sl, {ip}^
    3094:	06760000 	ldrbteq	r0, [r6], -r0
    3098:	011a0000 	tsteq	sl, r0
    309c:	50030550 	andpl	r0, r3, r0, asr r5
    30a0:	0010005b 	andseq	r0, r0, fp, asr r0
    30a4:	001db419 	andseq	fp, sp, r9, lsl r4
    30a8:	0009da10 	andeq	sp, r9, r0, lsl sl
    30ac:	00068d00 	andeq	r8, r6, r0, lsl #26
    30b0:	50011a00 	andpl	r1, r1, r0, lsl #20
    30b4:	5b640305 	blpl	1903cd0 <__RAM_SIZE+0x1803cd0>
    30b8:	19001000 	stmdbne	r0, {ip}
    30bc:	10001dbc 			; <UNDEFINED> instruction: 0x10001dbc
    30c0:	000009da 	ldrdeq	r0, [r0], -sl
    30c4:	000006a4 	andeq	r0, r0, r4, lsr #13
    30c8:	0550011a 	ldrbeq	r0, [r0, #-282]	; 0xfffffee6
    30cc:	005b7803 	subseq	r7, fp, r3, lsl #16
    30d0:	c2190010 	andsgt	r0, r9, #16
    30d4:	cd10001d 	ldcgt	0, cr0, [r0, #-116]	; 0xffffff8c
    30d8:	b8000009 	stmdalt	r0, {r0, r3}
    30dc:	1a000006 	bne	30fc <__HEAP_SIZE+0x20fc>
    30e0:	77025001 	strvc	r5, [r2, -r1]
    30e4:	c8190000 	ldmdagt	r9, {}	; <UNPREDICTABLE>
    30e8:	fe10001d 	mrc2	0, 0, r0, cr0, cr13, {0}
    30ec:	cc000007 	stcgt	0, cr0, [r0], {7}
    30f0:	1a000006 	bne	3110 <__HEAP_SIZE+0x2110>
    30f4:	76025001 	strvc	r5, [r2], -r1
    30f8:	ce190000 	cdpgt	0, 1, cr0, cr9, cr0, {0}
    30fc:	8610001d 			; <UNDEFINED> instruction: 0x8610001d
    3100:	e0000007 	and	r0, r0, r7
    3104:	1a000006 	bne	3124 <__HEAP_SIZE+0x2124>
    3108:	76025001 	strvc	r5, [r2], -r1
    310c:	e01d0000 	ands	r0, sp, r0
    3110:	0010001d 	andseq	r0, r0, sp, lsl r0
    3114:	1a000007 	bne	3138 <__HEAP_SIZE+0x2138>
    3118:	03055001 	movweq	r5, #20481	; 0x5001
    311c:	38008470 	stmdacc	r0, {r4, r5, r6, sl, pc}
    3120:	0251011a 	subseq	r0, r1, #-2147483642	; 0x80000006
    3124:	011a4008 	tsteq	sl, r8
    3128:	c0750352 	rsbsgt	r0, r5, r2, asr r3
    312c:	e8190000 	ldmda	r9, {}	; <UNPREDICTABLE>
    3130:	da10001d 	ble	4031ac <__RAM_SIZE+0x3031ac>
    3134:	17000009 	strne	r0, [r0, -r9]
    3138:	1a000007 	bne	315c <__HEAP_SIZE+0x215c>
    313c:	03055001 	movweq	r5, #20481	; 0x5001
    3140:	10005b8c 	andne	r5, r0, ip, lsl #23
    3144:	1df21900 			; <UNDEFINED> instruction: 0x1df21900
    3148:	09da1000 	ldmibeq	sl, {ip}^
    314c:	072e0000 	streq	r0, [lr, -r0]!
    3150:	011a0000 	tsteq	sl, r0
    3154:	a8030550 	stmdage	r3, {r4, r6, r8, sl}
    3158:	00100058 	andseq	r0, r0, r8, asr r0
    315c:	001e061d 	andseq	r0, lr, sp, lsl r6
    3160:	00074e10 	andeq	r4, r7, r0, lsl lr
    3164:	50011a00 	andpl	r1, r1, r0, lsl #20
    3168:	84700305 	ldrbthi	r0, [r0], #-773	; 0xfffffcfb
    316c:	011a3800 	tsteq	sl, r0, lsl #16
    3170:	40080251 	andmi	r0, r8, r1, asr r2
    3174:	0352011a 	cmpeq	r2, #-2147483642	; 0x80000006
    3178:	0000c075 	andeq	ip, r0, r5, ror r0
    317c:	001e1619 	andseq	r1, lr, r9, lsl r6
    3180:	0009da10 	andeq	sp, r9, r0, lsl sl
    3184:	00076500 	andeq	r6, r7, r0, lsl #10
    3188:	50011a00 	andpl	r1, r1, r0, lsl #20
    318c:	58a80305 	stmiapl	r8!, {r0, r2, r8, r9}
    3190:	1e001000 	cdpne	0, 0, cr1, cr0, cr0, {0}
    3194:	10001e22 	andne	r1, r0, r2, lsr #28
    3198:	000009cd 	andeq	r0, r0, sp, asr #19
    319c:	0250011a 	subseq	r0, r0, #-2147483642	; 0x80000006
    31a0:	00000077 	andeq	r0, r0, r7, ror r0
    31a4:	0000801f 	andeq	r8, r0, pc, lsl r0
    31a8:	00078600 	andeq	r8, r7, r0, lsl #12
    31ac:	00802000 	addeq	r2, r0, r0
    31b0:	003f0000 	eorseq	r0, pc, r0
    31b4:	00078321 	andeq	r8, r7, r1, lsr #6
    31b8:	0da40100 	stfeqs	f0, [r4]
    31bc:	0007f701 	andeq	pc, r7, r1, lsl #14
    31c0:	001c8800 	andseq	r8, ip, r0, lsl #16
    31c4:	001c9010 	andseq	r9, ip, r0, lsl r0
    31c8:	002ba410 	eoreq	sl, fp, r0, lsl r4
    31cc:	07f70100 	ldrbeq	r0, [r7, r0, lsl #2]!
    31d0:	9e160000 	cdpls	0, 1, cr0, cr6, cr0, {0}
    31d4:	01000007 	tsteq	r0, r7
    31d8:	00802aa4 	addeq	r2, r0, r4, lsr #21
    31dc:	2bc80000 	blcs	ff2031e4 <__StackTop+0xc71031e4>
    31e0:	2bc40000 	blcs	ff1031e8 <__StackTop+0xc70031e8>
    31e4:	0b170000 	bleq	5c31ec <__RAM_SIZE+0x4c31ec>
    31e8:	01000008 	tsteq	r0, r8
    31ec:	07f70aa5 	ldrbeq	r0, [r7, r5, lsr #21]!
    31f0:	2bed0000 	blcs	ffb431f8 <__StackTop+0xc7a431f8>
    31f4:	2be90000 	blcs	ffa431fc <__StackTop+0xc79431fc>
    31f8:	01220000 			; <UNDEFINED> instruction: 0x01220000
    31fc:	000008ee 	andeq	r0, r0, lr, ror #17
    3200:	0111a701 	tsteq	r1, r1, lsl #14
    3204:	000007f7 	strdeq	r0, [r0], -r7
    3208:	0007e501 	andeq	lr, r7, r1, lsl #10
    320c:	00800b00 	addeq	r0, r0, r0, lsl #22
    3210:	1e000000 	cdpne	0, 0, cr0, cr0, cr0, {0}
    3214:	10001c8e 	andne	r1, r0, lr, lsl #25
    3218:	000009e8 	andeq	r0, r0, r8, ror #19
    321c:	0350011a 	cmpeq	r0, #-2147483642	; 0x80000006
    3220:	005001f3 	ldrsheq	r0, [r0], #-19	; 0xffffffed
    3224:	02010200 	andeq	r0, r1, #0, 4
    3228:	00000646 	andeq	r0, r0, r6, asr #12
    322c:	00079923 	andeq	r9, r7, r3, lsr #18
    3230:	0d9c0100 	ldfeqs	f0, [ip]
    3234:	001c7001 	andseq	r7, ip, r1
    3238:	001c8810 	andseq	r8, ip, r0, lsl r8
    323c:	002c0c10 	eoreq	r0, ip, r0, lsl ip
    3240:	086f0100 	stmdaeq	pc!, {r8}^	; <UNPREDICTABLE>
    3244:	9e160000 	cdpls	0, 1, cr0, cr6, cr0, {0}
    3248:	01000007 	tsteq	r0, r7
    324c:	00802a9c 	umulleq	r2, r0, ip, sl
    3250:	2c340000 	ldccs	0, cr0, [r4], #-0
    3254:	2c2c0000 	stccs	0, cr0, [ip], #-0
    3258:	01240000 			; <UNDEFINED> instruction: 0x01240000
    325c:	00000793 	muleq	r0, r3, r7
    3260:	01119f01 	tsteq	r1, r1, lsl #30
    3264:	00084101 	andeq	r4, r8, r1, lsl #2
    3268:	00800b00 	addeq	r0, r0, r0, lsl #22
    326c:	19000000 	stmdbne	r0, {}	; <UNPREDICTABLE>
    3270:	10001c7c 	andne	r1, r0, ip, ror ip
    3274:	000009da 	ldrdeq	r0, [r0], -sl
    3278:	0000085e 	andeq	r0, r0, lr, asr r8
    327c:	0550011a 	ldrbeq	r0, [r0, #-282]	; 0xfffffee6
    3280:	00599803 	subseq	r9, r9, r3, lsl #16
    3284:	51011a10 	tstpl	r1, r0, lsl sl
    3288:	00007402 	andeq	r7, r0, r2, lsl #8
    328c:	001c821e 	andseq	r8, ip, lr, lsl r2
    3290:	0009f610 	andeq	pc, r9, r0, lsl r6	; <UNPREDICTABLE>
    3294:	50011a00 	andpl	r1, r1, r0, lsl #20
    3298:	00007402 	andeq	r7, r0, r2, lsl #8
    329c:	07a92500 	streq	r2, [r9, r0, lsl #10]!
    32a0:	8d010000 	stchi	0, cr0, [r1, #-0]
    32a4:	07f7010d 	ldrbeq	r0, [r7, sp, lsl #2]!
    32a8:	1bbc0000 	blne	fef032b0 <__StackTop+0xc6e032b0>
    32ac:	1bf21000 	blne	ffc872b4 <__StackTop+0xc7b872b4>
    32b0:	7d021000 	stcvc	0, cr1, [r2, #-0]
    32b4:	08c90100 	stmiaeq	r9, {r8}^
    32b8:	69260000 	stmdbvs	r6!, {}	; <UNPREDICTABLE>
    32bc:	0100736e 	tsteq	r0, lr, ror #6
    32c0:	00802e8d 	addeq	r2, r0, sp, lsl #29
    32c4:	2c6f0000 	stclcs	0, cr0, [pc], #-0	; 32cc <__HEAP_SIZE+0x22cc>
    32c8:	2c6b0000 	stclcs	0, cr0, [fp], #-0
    32cc:	42170000 	andsmi	r0, r7, #0
    32d0:	01000008 	tsteq	r0, r8
    32d4:	00a60e91 	umlaleq	r0, r6, r1, lr
    32d8:	2c920000 	ldccs	0, cr0, [r2], {0}
    32dc:	2c900000 	ldccs	0, cr0, [r0], {0}
    32e0:	4a170000 	bmi	5c32e8 <__RAM_SIZE+0x4c32e8>
    32e4:	01000008 	tsteq	r0, r8
    32e8:	00a60e92 	umlaleq	r0, r6, r2, lr
    32ec:	2cb90000 	ldccs	0, cr0, [r9]
    32f0:	2ca50000 	stccs	0, cr0, [r5]
    32f4:	21000000 	mrscs	r0, (UNDEF: 0)
    32f8:	000007f1 	strdeq	r0, [r0], -r1
    32fc:	01158201 	tsteq	r5, r1, lsl #4
    3300:	00000080 	andeq	r0, r0, r0, lsl #1
    3304:	10001b90 	mulne	r0, r0, fp
    3308:	10001bbc 			; <UNDEFINED> instruction: 0x10001bbc
    330c:	00002d5c 	andeq	r2, r0, ip, asr sp
    3310:	00093a01 	andeq	r3, r9, r1, lsl #20
    3314:	63702600 	cmnvs	r0, #0, 12
    3318:	34820100 	strcc	r0, [r2], #256	; 0x100
    331c:	00000080 	andeq	r0, r0, r0, lsl #1
    3320:	00002d8c 	andeq	r2, r0, ip, lsl #27
    3324:	00002d88 	andeq	r2, r0, r8, lsl #27
    3328:	00053d0d 	andeq	r3, r5, sp, lsl #26
    332c:	0e830100 	rmfeqs	f0, f3, f0
    3330:	0000093a 	andeq	r0, r0, sl, lsr r9
    3334:	177c9102 	ldrbne	r9, [ip, -r2, lsl #2]!
    3338:	000007fc 	strdeq	r0, [r0], -ip
    333c:	80128401 	andshi	r8, r2, r1, lsl #8
    3340:	b3000000 	movwlt	r0, #0
    3344:	ad00002d 	stcge	0, cr0, [r0, #-180]	; 0xffffff4c
    3348:	2700002d 	strcs	r0, [r0, -sp, lsr #32]
    334c:	10001b96 	mulne	r0, r6, fp
    3350:	10001bac 	andne	r1, r0, ip, lsr #23
    3354:	01006918 	tsteq	r0, r8, lsl r9
    3358:	00790e85 	rsbseq	r0, r9, r5, lsl #29
    335c:	2de80000 	stclcs	0, cr0, [r8]
    3360:	2de40000 	stclcs	0, cr0, [r4]
    3364:	00000000 	andeq	r0, r0, r0
    3368:	0000a61f 	andeq	sl, r0, pc, lsl r6
    336c:	00094a00 	andeq	r4, r9, r0, lsl #20
    3370:	00802000 	addeq	r2, r0, r0
    3374:	00010000 	andeq	r0, r1, r0
    3378:	0286011c 	addeq	r0, r6, #28, 2
    337c:	77010000 	strvc	r0, [r1, -r0]
    3380:	1c900106 	ldfnes	f0, [r0], {6}
    3384:	1ce01000 	stclne	0, cr1, [r0]
    3388:	2e071000 	cdpcs	0, 0, cr1, cr7, cr0, {0}
    338c:	ac010000 	stcge	0, cr0, [r1], {-0}
    3390:	19000009 	stmdbne	r0, {r0, r3}
    3394:	10001ca6 	andne	r1, r0, r6, lsr #25
    3398:	000009da 	ldrdeq	r0, [r0], -sl
    339c:	0000097c 	andeq	r0, r0, ip, ror r9
    33a0:	0550011a 	ldrbeq	r0, [r0, #-282]	; 0xfffffee6
    33a4:	0059b003 	subseq	fp, r9, r3
    33a8:	b2190010 	andslt	r0, r9, #16
    33ac:	da10001c 	ble	403424 <__RAM_SIZE+0x303424>
    33b0:	93000009 	movwls	r0, #9
    33b4:	1a000009 	bne	33e0 <__HEAP_SIZE+0x23e0>
    33b8:	03055001 	movweq	r5, #20481	; 0x5001
    33bc:	100059d4 	ldrdne	r5, [r0], -r4
    33c0:	1cba1e00 	ldcne	14, cr1, [sl]
    33c4:	09da1000 	ldmibeq	sl, {ip}^
    33c8:	011a0000 	tsteq	sl, r0
    33cc:	f8030550 			; <UNDEFINED> instruction: 0xf8030550
    33d0:	1a100059 	bne	40353c <__RAM_SIZE+0x30353c>
    33d4:	31015101 	tstcc	r1, r1, lsl #2
    33d8:	19280000 	stmdbne	r8!, {}	; <UNPREDICTABLE>
    33dc:	02000009 	andeq	r0, r0, #9
    33e0:	011f0463 	tsteq	pc, r3, ror #8
    33e4:	000000b2 	strheq	r0, [r0], -r2
    33e8:	0009cd03 	andeq	ip, r9, r3, lsl #26
    33ec:	080b2900 	stmdaeq	fp, {r8, fp, sp}
    33f0:	65020000 	strvs	r0, [r2, #-0]
    33f4:	00b20c04 	adcseq	r0, r2, r4, lsl #24
    33f8:	2a000000 	bcs	3400 <__HEAP_SIZE+0x2400>
    33fc:	00880101 	addeq	r0, r8, r1, lsl #2
    3400:	007e0000 	rsbseq	r0, lr, r0
    3404:	00080000 	andeq	r0, r8, r0
    3408:	ba01012b 	blt	438bc <__HEAP_SIZE+0x428bc>
    340c:	ba000005 	blt	3428 <__HEAP_SIZE+0x2428>
    3410:	07000005 	streq	r0, [r0, -r5]
    3414:	012b05c8 	smlawteq	fp, r8, r5, r0
    3418:	0008ee01 	andeq	lr, r8, r1, lsl #28
    341c:	0008ee00 	andeq	lr, r8, r0, lsl #28
    3420:	11a70100 			; <UNDEFINED> instruction: 0x11a70100
    3424:	9301012b 	movwls	r0, #4395	; 0x112b
    3428:	93000007 	movwls	r0, #7
    342c:	01000007 	tsteq	r0, r7
    3430:	a200119f 	andge	r1, r0, #-1073741785	; 0xc0000027
    3434:	02000007 	andeq	r0, r0, #7
    3438:	000ace00 	andeq	ip, sl, r0, lsl #28
    343c:	bf010400 	svclt	0x00010400
    3440:	0c000000 	stceq	0, cr0, [r0], {-0}
    3444:	00000942 	andeq	r0, r0, r2, asr #18
    3448:	000001a8 	andeq	r0, r0, r8, lsr #3
    344c:	00000278 	andeq	r0, r0, r8, ror r2
	...
    3458:	00002172 	andeq	r2, r0, r2, ror r1
    345c:	8f060102 	svchi	0x00060102
    3460:	03000000 	movweq	r0, #0
    3464:	00000000 	andeq	r0, r0, r0
    3468:	3c182b02 			; <UNDEFINED> instruction: 0x3c182b02
    346c:	02000000 	andeq	r0, r0, #0
    3470:	008d0801 	addeq	r0, sp, r1, lsl #16
    3474:	02020000 	andeq	r0, r2, #0
    3478:	0002a505 	andeq	sl, r2, r5, lsl #10
    347c:	07020200 	streq	r0, [r2, -r0, lsl #4]
    3480:	000000ac 	andeq	r0, r0, ip, lsr #1
    3484:	5a050402 	bpl	144494 <__RAM_SIZE+0x44494>
    3488:	03000002 	movweq	r0, #2
    348c:	0000037d 	andeq	r0, r0, sp, ror r3
    3490:	64194f02 	ldrvs	r4, [r9], #-3842	; 0xfffff0fe
    3494:	02000000 	andeq	r0, r0, #0
    3498:	02180704 	andseq	r0, r8, #4, 14	; 0x100000
    349c:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    34a0:	00025505 	andeq	r5, r2, r5, lsl #10
    34a4:	07080200 	streq	r0, [r8, -r0, lsl #4]
    34a8:	00000213 	andeq	r0, r0, r3, lsl r2
    34ac:	69050404 	stmdbvs	r5, {r2, sl}
    34b0:	0500746e 	streq	r7, [r0, #-1134]	; 0xfffffb92
    34b4:	00000079 	andeq	r0, r0, r9, ror r0
    34b8:	1d070402 	cfstrsne	mvf0, [r7, #-8]
    34bc:	02000002 	andeq	r0, r0, #2
    34c0:	02490408 	subeq	r0, r9, #8, 8	; 0x8000000
    34c4:	01020000 	mrseq	r0, (UNDEF: 2)
    34c8:	00009608 	andeq	r9, r0, r8, lsl #12
    34cc:	00020300 	andeq	r0, r2, r0, lsl #6
    34d0:	18030000 	stmdane	r3, {}	; <UNPREDICTABLE>
    34d4:	00003013 	andeq	r3, r0, r3, lsl r0
    34d8:	009a0500 	addseq	r0, sl, r0, lsl #10
    34dc:	7f030000 	svcvc	0x00030000
    34e0:	03000003 	movweq	r0, #3
    34e4:	00581430 	subseq	r1, r8, r0, lsr r4
    34e8:	ab050000 	blge	1434f0 <__RAM_SIZE+0x434f0>
    34ec:	06000000 	streq	r0, [r0], -r0
    34f0:	000000b7 	strheq	r0, [r0], -r7
    34f4:	04027c07 	streq	r7, [r2], #-3079	; 0xfffff3f9
    34f8:	c60901f8 			; <UNDEFINED> instruction: 0xc60901f8
    34fc:	08000003 	stmdaeq	r0, {r0, r1}
    3500:	00000337 	andeq	r0, r0, r7, lsr r3
    3504:	1201fa04 	andne	pc, r1, #4, 20	; 0x4000
    3508:	000000bc 	strheq	r0, [r0], -ip
    350c:	08002302 	stmdaeq	r0, {r1, r8, r9, sp}
    3510:	000003d3 	ldrdeq	r0, [r0], -r3
    3514:	1201fb04 	andne	pc, r1, #4, 22	; 0x1000
    3518:	000000b7 	strheq	r0, [r0], -r7
    351c:	08042302 	stmdaeq	r4, {r1, r8, r9, sp}
    3520:	000003c9 	andeq	r0, r0, r9, asr #7
    3524:	1201fc04 	andne	pc, r1, #4, 24	; 0x400
    3528:	000000b7 	strheq	r0, [r0], -r7
    352c:	08082302 	stmdaeq	r8, {r1, r8, r9, sp}
    3530:	000003d8 	ldrdeq	r0, [r0], -r8
    3534:	1201fd04 	andne	pc, r1, #4, 26	; 0x100
    3538:	000000b7 	strheq	r0, [r0], -r7
    353c:	090c2302 	stmdbeq	ip, {r1, r8, r9, sp}
    3540:	00524353 	subseq	r4, r2, r3, asr r3
    3544:	1201fe04 	andne	pc, r1, #4, 28	; 0x40
    3548:	000000b7 	strheq	r0, [r0], -r7
    354c:	09102302 	ldmdbeq	r0, {r1, r8, r9, sp}
    3550:	00524343 	subseq	r4, r2, r3, asr #6
    3554:	1201ff04 	andne	pc, r1, #4, 30
    3558:	000000b7 	strheq	r0, [r0], -r7
    355c:	08142302 	ldmdaeq	r4, {r1, r8, r9, sp}
    3560:	00000477 	andeq	r0, r0, r7, ror r4
    3564:	12020004 	andne	r0, r2, #4
    3568:	000003d6 	ldrdeq	r0, [r0], -r6
    356c:	08182302 	ldmdaeq	r8, {r1, r8, r9, sp}
    3570:	0000044a 	andeq	r0, r0, sl, asr #8
    3574:	12020104 	andne	r0, r2, #4, 2
    3578:	000000b7 	strheq	r0, [r0], -r7
    357c:	08242302 	stmdaeq	r4!, {r1, r8, r9, sp}
    3580:	000003f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    3584:	12020204 	andne	r0, r2, #4, 4	; 0x40000000
    3588:	000000b7 	strheq	r0, [r0], -r7
    358c:	08282302 	stmdaeq	r8!, {r1, r8, r9, sp}
    3590:	000004a3 	andeq	r0, r0, r3, lsr #9
    3594:	12020304 	andne	r0, r2, #4, 6	; 0x10000000
    3598:	000000b7 	strheq	r0, [r0], -r7
    359c:	082c2302 	stmdaeq	ip!, {r1, r8, r9, sp}
    35a0:	000003de 	ldrdeq	r0, [r0], -lr
    35a4:	12020404 	andne	r0, r2, #4, 8	; 0x4000000
    35a8:	000000b7 	strheq	r0, [r0], -r7
    35ac:	08302302 	ldmdaeq	r0!, {r1, r8, r9, sp}
    35b0:	000003e3 	andeq	r0, r0, r3, ror #7
    35b4:	12020504 	andne	r0, r2, #4, 10	; 0x1000000
    35b8:	000000b7 	strheq	r0, [r0], -r7
    35bc:	08342302 	ldmdaeq	r4!, {r1, r8, r9, sp}
    35c0:	00000378 	andeq	r0, r0, r8, ror r3
    35c4:	12020604 	andne	r0, r2, #4, 12	; 0x400000
    35c8:	000000b7 	strheq	r0, [r0], -r7
    35cc:	08382302 	ldmdaeq	r8!, {r1, r8, r9, sp}
    35d0:	00000467 	andeq	r0, r0, r7, ror #8
    35d4:	12020704 	andne	r0, r2, #4, 14	; 0x100000
    35d8:	000000b7 	strheq	r0, [r0], -r7
    35dc:	083c2302 	ldmdaeq	ip!, {r1, r8, r9, sp}
    35e0:	00000344 	andeq	r0, r0, r4, asr #6
    35e4:	12020804 	andne	r0, r2, #4, 16	; 0x40000
    35e8:	000003f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    35ec:	08402302 	stmdaeq	r0, {r1, r8, r9, sp}^
    35f0:	00000391 	muleq	r0, r1, r3
    35f4:	12020904 	andne	r0, r2, #4, 18	; 0x10000
    35f8:	000000bc 	strheq	r0, [r0], -ip
    35fc:	08482302 	stmdaeq	r8, {r1, r8, r9, sp}^
    3600:	0000048e 	andeq	r0, r0, lr, lsl #9
    3604:	12020a04 	andne	r0, r2, #4, 20	; 0x4000
    3608:	000000bc 	strheq	r0, [r0], -ip
    360c:	084c2302 	stmdaeq	ip, {r1, r8, r9, sp}^
    3610:	00000368 	andeq	r0, r0, r8, ror #6
    3614:	12020b04 	andne	r0, r2, #4, 22	; 0x1000
    3618:	0000040a 	andeq	r0, r0, sl, lsl #8
    361c:	08502302 	ldmdaeq	r0, {r1, r8, r9, sp}^
    3620:	00000495 	muleq	r0, r5, r4
    3624:	12020c04 	andne	r0, r2, #4, 24	; 0x400
    3628:	00000424 	andeq	r0, r0, r4, lsr #8
    362c:	08602302 	stmdaeq	r0!, {r1, r8, r9, sp}^
    3630:	00000331 	andeq	r0, r0, r1, lsr r3
    3634:	12020d04 	andne	r0, r2, #4, 26	; 0x100
    3638:	000000bc 	strheq	r0, [r0], -ip
    363c:	09782302 	ldmdbeq	r8!, {r1, r8, r9, sp}^
    3640:	00525443 	subseq	r5, r2, r3, asr #8
    3644:	12020e04 	andne	r0, r2, #4, 28	; 0x40
    3648:	000000bc 	strheq	r0, [r0], -ip
    364c:	087c2302 	ldmdaeq	ip!, {r1, r8, r9, sp}^
    3650:	000003e9 	andeq	r0, r0, r9, ror #7
    3654:	12020f04 	andne	r0, r2, #4, 30
    3658:	000000bc 	strheq	r0, [r0], -ip
    365c:	01802303 	orreq	r2, r0, r3, lsl #6
    3660:	0003a008 	andeq	sl, r3, r8
    3664:	02100400 	andseq	r0, r0, #0, 8
    3668:	0000b712 	andeq	fp, r0, r2, lsl r7
    366c:	84230300 	strthi	r0, [r3], #-768	; 0xfffffd00
    3670:	049d0801 	ldreq	r0, [sp], #2049	; 0x801
    3674:	11040000 	mrsne	r0, (UNDEF: 4)
    3678:	00b71202 	adcseq	r1, r7, r2, lsl #4
    367c:	23030000 	movwcs	r0, #12288	; 0x3000
    3680:	f5080188 			; <UNDEFINED> instruction: 0xf5080188
    3684:	04000003 	streq	r0, [r0], #-3
    3688:	b7120212 			; <UNDEFINED> instruction: 0xb7120212
    368c:	03000000 	movweq	r0, #0
    3690:	08018c23 	stmdaeq	r1, {r0, r1, r5, sl, fp, pc}
    3694:	00000435 	andeq	r0, r0, r5, lsr r4
    3698:	12021304 	andne	r1, r2, #4, 6	; 0x10000000
    369c:	00000429 	andeq	r0, r0, r9, lsr #8
    36a0:	01902303 	orrseq	r2, r0, r3, lsl #6
    36a4:	00046c08 	andeq	r6, r4, r8, lsl #24
    36a8:	02140400 	andseq	r0, r4, #0, 8
    36ac:	0000b712 	andeq	fp, r0, r2, lsl r7
    36b0:	e4230300 	strt	r0, [r3], #-768	; 0xfffffd00
    36b4:	03ce0801 	biceq	r0, lr, #65536	; 0x10000
    36b8:	15040000 	strne	r0, [r4, #-0]
    36bc:	00b71202 	adcseq	r1, r7, r2, lsl #4
    36c0:	23030000 	movwcs	r0, #12288	; 0x3000
    36c4:	0d0801e8 	stfeqs	f0, [r8, #-928]	; 0xfffffc60
    36c8:	04000004 	streq	r0, [r0], #-4
    36cc:	39120216 	ldmdbcc	r2, {r1, r2, r4, r9}
    36d0:	03000004 	movweq	r0, #4
    36d4:	0801ec23 	stmdaeq	r1, {r0, r1, r5, sl, fp, sp, lr, pc}
    36d8:	00000324 	andeq	r0, r0, r4, lsr #6
    36dc:	12021704 	andne	r1, r2, #4, 14	; 0x100000
    36e0:	000000b7 	strheq	r0, [r0], -r7
    36e4:	04802303 	streq	r2, [r0], #771	; 0x303
    36e8:	00041708 	andeq	r1, r4, r8, lsl #14
    36ec:	02180400 	andseq	r0, r8, #0, 8
    36f0:	00044912 	andeq	r4, r4, r2, lsl r9
    36f4:	84230300 	strthi	r0, [r3], #-768	; 0xfffffd00
    36f8:	03fb0804 	mvnseq	r0, #4, 16	; 0x40000
    36fc:	19040000 	stmdbne	r4, {}	; <UNPREDICTABLE>
    3700:	00bc1202 	adcseq	r1, ip, r2, lsl #4
    3704:	23030000 	movwcs	r0, #12288	; 0x3000
    3708:	010804c0 	smlabteq	r8, r0, r4, r0
    370c:	04000004 	streq	r0, [r0], #-4
    3710:	bc12021a 	lfmlt	f0, 4, [r2], {26}
    3714:	03000000 	movweq	r0, #0
    3718:	0804c423 	stmdaeq	r4, {r0, r1, r5, sl, lr, pc}
    371c:	00000407 	andeq	r0, r0, r7, lsl #8
    3720:	12021b04 	andne	r1, r2, #4, 22	; 0x1000
    3724:	000000bc 	strheq	r0, [r0], -ip
    3728:	04c82303 	strbeq	r2, [r8], #771	; 0x303
    372c:	00042108 	andeq	r2, r4, r8, lsl #2
    3730:	021c0400 	andseq	r0, ip, #0, 8
    3734:	00045912 	andeq	r5, r4, r2, lsl r9
    3738:	cc230300 	stcgt	3, cr0, [r3], #-0
    373c:	03700804 	cmneq	r0, #4, 16	; 0x40000
    3740:	1d040000 	stcne	0, cr0, [r4, #-0]
    3744:	00b71202 	adcseq	r1, r7, r2, lsl #4
    3748:	23030000 	movwcs	r0, #12288	; 0x3000
    374c:	2b0804d0 	blcs	204a94 <__RAM_SIZE+0x104a94>
    3750:	04000004 	streq	r0, [r0], #-4
    3754:	5912021e 	ldmdbpl	r2, {r1, r2, r3, r4, r9}
    3758:	03000004 	movweq	r0, #4
    375c:	0804d423 	stmdaeq	r4, {r0, r1, r5, sl, ip, lr, pc}
    3760:	00000459 	andeq	r0, r0, r9, asr r4
    3764:	12021f04 	andne	r1, r2, #4, 30
    3768:	000000b7 	strheq	r0, [r0], -r7
    376c:	04d82303 	ldrbeq	r2, [r8], #771	; 0x303
    3770:	00032908 	andeq	r2, r3, r8, lsl #18
    3774:	02200400 	eoreq	r0, r0, #0, 8
    3778:	0000b712 	andeq	fp, r0, r2, lsl r7
    377c:	dc230300 	stcle	3, cr0, [r3], #-0
    3780:	04610804 	strbteq	r0, [r1], #-2052	; 0xfffff7fc
    3784:	21040000 	mrscs	r0, (UNDEF: 4)
    3788:	00b71202 	adcseq	r1, r7, r2, lsl #4
    378c:	23030000 	movwcs	r0, #12288	; 0x3000
    3790:	b70804e0 	strlt	r0, [r8, -r0, ror #9]
    3794:	04000003 	streq	r0, [r0], #-3
    3798:	b7120222 	ldrlt	r0, [r2, -r2, lsr #4]
    379c:	03000000 	movweq	r0, #0
    37a0:	0804e423 	stmdaeq	r4, {r0, r1, r5, sl, sp, lr, pc}
    37a4:	00000398 	muleq	r0, r8, r3
    37a8:	12022304 	andne	r2, r2, #4, 6	; 0x10000000
    37ac:	000000b7 	strheq	r0, [r0], -r7
    37b0:	04e82303 	strbteq	r2, [r8], #771	; 0x303
    37b4:	00047108 	andeq	r7, r4, r8, lsl #2
    37b8:	02240400 	eoreq	r0, r4, #0, 8
    37bc:	0000b712 	andeq	fp, r0, r2, lsl r7
    37c0:	ec230300 	stc	3, cr0, [r3], #-0
    37c4:	04500804 	ldrbeq	r0, [r0], #-2052	; 0xfffff7fc
    37c8:	25040000 	strcs	r0, [r4, #-0]
    37cc:	00b71202 	adcseq	r1, r7, r2, lsl #4
    37d0:	23030000 	movwcs	r0, #12288	; 0x3000
    37d4:	4b0804f0 	blmi	204b9c <__RAM_SIZE+0x104b9c>
    37d8:	04000003 	streq	r0, [r0], #-3
    37dc:	b7120226 	ldrlt	r0, [r2, -r6, lsr #4]
    37e0:	03000000 	movweq	r0, #0
    37e4:	0804f423 	stmdaeq	r4, {r0, r1, r5, sl, ip, sp, lr, pc}
    37e8:	0000033d 	andeq	r0, r0, sp, lsr r3
    37ec:	12022704 	andne	r2, r2, #4, 14	; 0x100000
    37f0:	000000b7 	strheq	r0, [r0], -r7
    37f4:	04f82303 	ldrbteq	r2, [r8], #771	; 0x303
    37f8:	00a60a00 	adceq	r0, r6, r0, lsl #20
    37fc:	03d60000 	bicseq	r0, r6, #0
    3800:	850b0000 	strhi	r0, [fp, #-0]
    3804:	0b000000 	bleq	380c <__HEAP_SIZE+0x280c>
    3808:	03c60500 	biceq	r0, r6, #0, 10
    380c:	bc0a0000 	stclt	0, cr0, [sl], {-0}
    3810:	eb000000 	bl	3818 <__HEAP_SIZE+0x2818>
    3814:	0b000003 	bleq	3828 <__HEAP_SIZE+0x2828>
    3818:	00000085 	andeq	r0, r0, r5, lsl #1
    381c:	db060001 	blle	183828 <__RAM_SIZE+0x83828>
    3820:	05000003 	streq	r0, [r0, #-3]
    3824:	000003eb 	andeq	r0, r0, fp, ror #7
    3828:	0000bc0a 	andeq	fp, r0, sl, lsl #24
    382c:	00040500 	andeq	r0, r4, r0, lsl #10
    3830:	00850b00 	addeq	r0, r5, r0, lsl #22
    3834:	00030000 	andeq	r0, r3, r0
    3838:	0003f506 	andeq	pc, r3, r6, lsl #10
    383c:	04050500 	streq	r0, [r5], #-1280	; 0xfffffb00
    3840:	bc0a0000 	stclt	0, cr0, [sl], {-0}
    3844:	1f000000 	svcne	0x00000000
    3848:	0b000004 	bleq	3860 <__HEAP_SIZE+0x2860>
    384c:	00000085 	andeq	r0, r0, r5, lsl #1
    3850:	0f060005 	svceq	0x00060005
    3854:	05000004 	streq	r0, [r0, #-4]
    3858:	0000041f 	andeq	r0, r0, pc, lsl r4
    385c:	0000ab0a 	andeq	sl, r0, sl, lsl #22
    3860:	00043900 	andeq	r3, r4, r0, lsl #18
    3864:	00850b00 	addeq	r0, r5, r0, lsl #22
    3868:	00140000 	andseq	r0, r4, r0
    386c:	0000ab0a 	andeq	sl, r0, sl, lsl #22
    3870:	00044900 	andeq	r4, r4, r0, lsl #18
    3874:	00850b00 	addeq	r0, r5, r0, lsl #22
    3878:	00440000 	subeq	r0, r4, r0
    387c:	0000ab0a 	andeq	sl, r0, sl, lsl #22
    3880:	00045900 	andeq	r5, r4, r0, lsl #18
    3884:	00850b00 	addeq	r0, r5, r0, lsl #22
    3888:	000e0000 	andeq	r0, lr, r0
    388c:	0000ab0a 	andeq	sl, r0, sl, lsl #22
    3890:	00046900 	andeq	r6, r4, r0, lsl #18
    3894:	00850b00 	addeq	r0, r5, r0, lsl #22
    3898:	00000000 	andeq	r0, r0, r0
    389c:	0003880c 	andeq	r8, r3, ip, lsl #16
    38a0:	02280400 	eoreq	r0, r8, #0, 8
    38a4:	0000c103 	andeq	ip, r0, r3, lsl #2
    38a8:	73010d00 	movwvc	r0, #7424	; 0x1d00
    38ac:	01000002 	tsteq	r0, r2
    38b0:	a8010648 	stmdage	r1, {r3, r6, r9, sl}
    38b4:	f410001f 			; <UNDEFINED> instruction: 0xf410001f
    38b8:	2710001f 			; <UNDEFINED> instruction: 0x2710001f
    38bc:	0100002e 	tsteq	r0, lr, lsr #32
    38c0:	000004fd 	strdeq	r0, [r0], -sp
    38c4:	00093d0e 	andeq	r3, r9, lr, lsl #26
    38c8:	13490100 	movtne	r0, #37120	; 0x9100
    38cc:	000004fd 	strdeq	r0, [r0], -sp
    38d0:	00002e65 	andeq	r2, r0, r5, ror #28
    38d4:	00002e5f 	andeq	r2, r0, pc, asr lr
    38d8:	00053d0f 	andeq	r3, r5, pc, lsl #26
    38dc:	124a0100 	subne	r0, sl, #0, 2
    38e0:	00000080 	andeq	r0, r0, r0, lsl #1
    38e4:	106c9102 	rsbne	r9, ip, r2, lsl #2
    38e8:	10001fca 	andne	r1, r0, sl, asr #31
    38ec:	0000078a 	andeq	r0, r0, sl, lsl #15
    38f0:	000004ce 	andeq	r0, r0, lr, asr #9
    38f4:	02500111 	subseq	r0, r0, #1073741828	; 0x40000004
    38f8:	01110075 	tsteq	r1, r5, ror r0
    38fc:	00740251 	rsbseq	r0, r4, r1, asr r2
    3900:	1fd81000 	svcne	0x00d81000
    3904:	078a1000 	streq	r1, [sl, r0]
    3908:	04e70000 	strbteq	r0, [r7], #0
    390c:	01110000 	tsteq	r1, r0
    3910:	00750250 	rsbseq	r0, r5, r0, asr r2
    3914:	01510111 	cmpeq	r1, r1, lsl r1
    3918:	e8120034 	ldmda	r2, {r2, r4, r5}
    391c:	8a10001f 	bhi	4039a0 <__RAM_SIZE+0x3039a0>
    3920:	11000007 	tstne	r0, r7
    3924:	75025001 	strvc	r5, [r2, #-1]
    3928:	51011100 	mrspl	r1, (UNDEF: 17)
    392c:	00003301 	andeq	r3, r0, r1, lsl #6
    3930:	00800413 	addeq	r0, r0, r3, lsl r4
    3934:	010d0000 	mrseq	r0, (UNDEF: 13)
    3938:	0000097a 	andeq	r0, r0, sl, ror r9
    393c:	01064001 	tsteq	r6, r1
	...
    3948:	00002e91 	muleq	r0, r1, lr
    394c:	00055801 	andeq	r5, r5, r1, lsl #16
    3950:	00611400 	rsbeq	r1, r1, r0, lsl #8
    3954:	79094101 	stmdbvc	r9, {r0, r8, lr}
    3958:	00000000 	andeq	r0, r0, r0
    395c:	01006214 	tsteq	r0, r4, lsl r2
    3960:	00791041 	rsbseq	r1, r9, r1, asr #32
    3964:	14000000 	strne	r0, [r0], #-0
    3968:	41010063 	tstmi	r1, r3, rrx
    396c:	00007917 	andeq	r7, r0, r7, lsl r9
    3970:	00120000 	andseq	r0, r2, r0
    3974:	8a000000 	bhi	397c <__HEAP_SIZE+0x297c>
    3978:	11000007 	tstne	r0, r7
    397c:	03055001 	movweq	r5, #20481	; 0x5001
    3980:	00000000 	andeq	r0, r0, r0
    3984:	01510111 	cmpeq	r1, r1, lsl r1
    3988:	15000030 	strne	r0, [r0, #-48]	; 0xffffffd0
    398c:	0008ee01 	andeq	lr, r8, r1, lsl #28
    3990:	06380100 	ldrteq	r0, [r8], -r0, lsl #2
    3994:	00058b01 	andeq	r8, r5, r1, lsl #22
    3998:	001f9800 	andseq	r9, pc, r0, lsl #16
    399c:	001fa610 	andseq	sl, pc, r0, lsl r6	; <UNPREDICTABLE>
    39a0:	007d0210 	rsbseq	r0, sp, r0, lsl r2
    39a4:	00058b01 	andeq	r8, r5, r1, lsl #22
    39a8:	079e1600 	ldreq	r1, [lr, r0, lsl #12]
    39ac:	38010000 	stmdacc	r1, {}	; <UNPREDICTABLE>
    39b0:	00008528 	andeq	r8, r0, r8, lsr #10
    39b4:	002eb900 	eoreq	fp, lr, r0, lsl #18
    39b8:	002eb100 	eoreq	fp, lr, r0, lsl #2
    39bc:	01020000 	mrseq	r0, (UNDEF: 2)
    39c0:	00064602 	andeq	r4, r6, r2, lsl #12
    39c4:	93010d00 	movwls	r0, #7424	; 0x1d00
    39c8:	01000007 	tsteq	r0, r7
    39cc:	9c01060f 	stcls	6, cr0, [r1], {15}
    39d0:	9810001e 	ldmdals	r0, {r1, r2, r3, r4}
    39d4:	f310001f 	vqadd.u16	d0, d0, d15
    39d8:	0100002e 	tsteq	r0, lr, lsr #32
    39dc:	0000078a 	andeq	r0, r0, sl, lsl #15
    39e0:	00079e16 	andeq	r9, r7, r6, lsl lr
    39e4:	290f0100 	stmdbcs	pc, {r8}	; <UNPREDICTABLE>
    39e8:	00000085 	andeq	r0, r0, r5, lsl #1
    39ec:	00002f17 	andeq	r2, r0, r7, lsl pc
    39f0:	00002f13 	andeq	r2, r0, r3, lsl pc
    39f4:	001ea610 	andseq	sl, lr, r0, lsl r6
    39f8:	00079810 	andeq	r9, r7, r0, lsl r8
    39fc:	0005d800 	andeq	sp, r5, r0, lsl #16
    3a00:	50011100 	andpl	r1, r1, r0, lsl #2
    3a04:	5b9c0305 	blpl	fe704620 <__StackTop+0xc6604620>
    3a08:	10001000 	andne	r1, r0, r0
    3a0c:	10001eac 	andne	r1, r0, ip, lsr #29
    3a10:	0000078a 	andeq	r0, r0, sl, lsl #15
    3a14:	000005ef 	andeq	r0, r0, pc, ror #11
    3a18:	05500111 	ldrbeq	r0, [r0, #-273]	; 0xfffffeef
    3a1c:	005ba003 	subseq	sl, fp, r3
    3a20:	b8100010 	ldmdalt	r0, {r4}
    3a24:	9810001e 	ldmdals	r0, {r1, r2, r3, r4}
    3a28:	06000007 	streq	r0, [r0], -r7
    3a2c:	11000006 	tstne	r0, r6
    3a30:	03055001 	movweq	r5, #20481	; 0x5001
    3a34:	10005bc0 	andne	r5, r0, r0, asr #23
    3a38:	1ebe1000 	cdpne	0, 11, cr1, cr14, cr0, {0}
    3a3c:	078a1000 	streq	r1, [sl, r0]
    3a40:	061d0000 	ldreq	r0, [sp], -r0
    3a44:	01110000 	tsteq	r1, r0
    3a48:	f8030550 			; <UNDEFINED> instruction: 0xf8030550
    3a4c:	0010005b 	andseq	r0, r0, fp, asr r0
    3a50:	001eca10 	andseq	ip, lr, r0, lsl sl
    3a54:	00079810 	andeq	r9, r7, r0, lsl r8
    3a58:	00063400 	andeq	r3, r6, r0, lsl #8
    3a5c:	50011100 	andpl	r1, r1, r0, lsl #2
    3a60:	5c180305 	ldcpl	3, cr0, [r8], {5}
    3a64:	10001000 	andne	r1, r0, r0
    3a68:	10001ed0 	ldrdne	r1, [r0], -r0
    3a6c:	0000078a 	andeq	r0, r0, sl, lsl #15
    3a70:	0000064b 	andeq	r0, r0, fp, asr #12
    3a74:	05500111 	ldrbeq	r0, [r0, #-273]	; 0xfffffeef
    3a78:	005c5003 	subseq	r5, ip, r3
    3a7c:	dc100010 	ldcle	0, cr0, [r0], {16}
    3a80:	9810001e 	ldmdals	r0, {r1, r2, r3, r4}
    3a84:	62000007 	andvs	r0, r0, #7
    3a88:	11000006 	tstne	r0, r6
    3a8c:	03055001 	movweq	r5, #20481	; 0x5001
    3a90:	10005c70 	andne	r5, r0, r0, ror ip
    3a94:	1ee21000 	cdpne	0, 14, cr1, cr2, cr0, {0}
    3a98:	078a1000 	streq	r1, [sl, r0]
    3a9c:	06790000 	ldrbteq	r0, [r9], -r0
    3aa0:	01110000 	tsteq	r1, r0
    3aa4:	a8030550 	stmdage	r3, {r4, r6, r8, sl}
    3aa8:	0010005c 	andseq	r0, r0, ip, asr r0
    3aac:	001eee10 	andseq	lr, lr, r0, lsl lr
    3ab0:	00079810 	andeq	r9, r7, r0, lsl r8
    3ab4:	00069000 	andeq	r9, r6, r0
    3ab8:	50011100 	andpl	r1, r1, r0, lsl #2
    3abc:	5cc80305 	stclpl	3, cr0, [r8], {5}
    3ac0:	10001000 	andne	r1, r0, r0
    3ac4:	10001ef4 	strdne	r1, [r0], -r4
    3ac8:	0000078a 	andeq	r0, r0, sl, lsl #15
    3acc:	000006a7 	andeq	r0, r0, r7, lsr #13
    3ad0:	05500111 	ldrbeq	r0, [r0, #-273]	; 0xfffffeef
    3ad4:	005d0003 	subseq	r0, sp, r3
    3ad8:	00100010 	andseq	r0, r0, r0, lsl r0
    3adc:	9810001f 	ldmdals	r0, {r0, r1, r2, r3, r4}
    3ae0:	be000007 	cdplt	0, 0, cr0, cr0, cr7, {0}
    3ae4:	11000006 	tstne	r0, r6
    3ae8:	03055001 	movweq	r5, #20481	; 0x5001
    3aec:	10005d20 	andne	r5, r0, r0, lsr #26
    3af0:	1f061000 	svcne	0x00061000
    3af4:	078a1000 	streq	r1, [sl, r0]
    3af8:	06d50000 	ldrbeq	r0, [r5], r0
    3afc:	01110000 	tsteq	r1, r0
    3b00:	58030550 	stmdapl	r3, {r4, r6, r8, sl}
    3b04:	0010005d 	andseq	r0, r0, sp, asr r0
    3b08:	001f1210 	andseq	r1, pc, r0, lsl r2	; <UNPREDICTABLE>
    3b0c:	00079810 	andeq	r9, r7, r0, lsl r8
    3b10:	0006ec00 	andeq	lr, r6, r0, lsl #24
    3b14:	50011100 	andpl	r1, r1, r0, lsl #2
    3b18:	5d780305 	ldclpl	3, cr0, [r8, #-20]!	; 0xffffffec
    3b1c:	10001000 	andne	r1, r0, r0
    3b20:	10001f18 	andne	r1, r0, r8, lsl pc
    3b24:	00000798 	muleq	r0, r8, r7
    3b28:	00000703 	andeq	r0, r0, r3, lsl #14
    3b2c:	05500111 	ldrbeq	r0, [r0, #-273]	; 0xfffffeef
    3b30:	005b9c03 	subseq	r9, fp, r3, lsl #24
    3b34:	20100010 	andscs	r0, r0, r0, lsl r0
    3b38:	9810001f 	ldmdals	r0, {r0, r1, r2, r3, r4}
    3b3c:	1a000007 	bne	3b60 <__HEAP_SIZE+0x2b60>
    3b40:	11000007 	tstne	r0, r7
    3b44:	03055001 	movweq	r5, #20481	; 0x5001
    3b48:	10005bdc 	ldrdne	r5, [r0], -ip
    3b4c:	1f281000 	svcne	0x00281000
    3b50:	07981000 	ldreq	r1, [r8, r0]
    3b54:	07310000 	ldreq	r0, [r1, -r0]!
    3b58:	01110000 	tsteq	r1, r0
    3b5c:	34030550 	strcc	r0, [r3], #-1360	; 0xfffffab0
    3b60:	0010005c 	andseq	r0, r0, ip, asr r0
    3b64:	001f3010 	andseq	r3, pc, r0, lsl r0	; <UNPREDICTABLE>
    3b68:	00079810 	andeq	r9, r7, r0, lsl r8
    3b6c:	00074800 	andeq	r4, r7, r0, lsl #16
    3b70:	50011100 	andpl	r1, r1, r0, lsl #2
    3b74:	5c8c0305 	stcpl	3, cr0, [ip], {5}
    3b78:	10001000 	andne	r1, r0, r0
    3b7c:	10001f38 	andne	r1, r0, r8, lsr pc
    3b80:	00000798 	muleq	r0, r8, r7
    3b84:	0000075f 	andeq	r0, r0, pc, asr r7
    3b88:	05500111 	ldrbeq	r0, [r0, #-273]	; 0xfffffeef
    3b8c:	005ce403 	subseq	lr, ip, r3, lsl #8
    3b90:	40100010 	andsmi	r0, r0, r0, lsl r0
    3b94:	9810001f 	ldmdals	r0, {r0, r1, r2, r3, r4}
    3b98:	76000007 	strvc	r0, [r0], -r7
    3b9c:	11000007 	tstne	r0, r7
    3ba0:	03055001 	movweq	r5, #20481	; 0x5001
    3ba4:	10005d3c 	andne	r5, r0, ip, lsr sp
    3ba8:	1f481200 	svcne	0x00481200
    3bac:	07981000 	ldreq	r1, [r8, r0]
    3bb0:	01110000 	tsteq	r1, r0
    3bb4:	94030550 	strls	r0, [r3], #-1360	; 0xfffffab0
    3bb8:	0010005d 	andseq	r0, r0, sp, asr r0
    3bbc:	01011700 	tsteq	r1, r0, lsl #14
    3bc0:	000005ba 			; <UNDEFINED> instruction: 0x000005ba
    3bc4:	000005ba 			; <UNDEFINED> instruction: 0x000005ba
    3bc8:	1805c805 	stmdane	r5, {r0, r2, fp, lr, pc}
    3bcc:	00880101 	addeq	r0, r8, r1, lsl #2
    3bd0:	007e0000 	rsbseq	r0, lr, r0
    3bd4:	00060000 	andeq	r0, r6, r0
    3bd8:	0002cb00 	andeq	ip, r2, r0, lsl #22
    3bdc:	40000200 	andmi	r0, r0, r0, lsl #4
    3be0:	0400000c 	streq	r0, [r0], #-12
    3be4:	0000bf01 	andeq	fp, r0, r1, lsl #30
    3be8:	0a680c00 	beq	1a06bf0 <__RAM_SIZE+0x1906bf0>
    3bec:	01a80000 			; <UNDEFINED> instruction: 0x01a80000
    3bf0:	02a00000 	adceq	r0, r0, #0
	...
    3bfc:	24450000 	strbcs	r0, [r5], #-0
    3c00:	04020000 	streq	r0, [r2], #-0
    3c04:	00021d07 	andeq	r1, r2, r7, lsl #26
    3c08:	05040300 	streq	r0, [r4, #-768]	; 0xfffffd00
    3c0c:	00746e69 	rsbseq	r6, r4, r9, ror #28
    3c10:	55050802 	strpl	r0, [r5, #-2050]	; 0xfffff7fe
    3c14:	02000002 	andeq	r0, r0, #2
    3c18:	02490408 	subeq	r0, r9, #8, 8	; 0x8000000
    3c1c:	01020000 	mrseq	r0, (UNDEF: 2)
    3c20:	00008f06 	andeq	r8, r0, r6, lsl #30
    3c24:	08010200 	stmdaeq	r1, {r9}
    3c28:	0000008d 	andeq	r0, r0, sp, lsl #1
    3c2c:	a5050202 	strge	r0, [r5, #-514]	; 0xfffffdfe
    3c30:	02000002 	andeq	r0, r0, #2
    3c34:	00ac0702 	adceq	r0, ip, r2, lsl #14
    3c38:	04020000 	streq	r0, [r2], #-0
    3c3c:	00025a05 	andeq	r5, r2, r5, lsl #20
    3c40:	037d0400 	cmneq	sp, #0, 8
    3c44:	4f020000 	svcmi	0x00020000
    3c48:	00007419 	andeq	r7, r0, r9, lsl r4
    3c4c:	07040200 	streq	r0, [r4, -r0, lsl #4]
    3c50:	00000218 	andeq	r0, r0, r8, lsl r2
    3c54:	13070802 	movwne	r0, #30722	; 0x7802
    3c58:	05000002 	streq	r0, [r0, #-2]
    3c5c:	08010204 	stmdaeq	r1, {r2, r9}
    3c60:	00000096 	muleq	r0, r6, r0
    3c64:	00037f04 	andeq	r7, r3, r4, lsl #30
    3c68:	14300300 	ldrtne	r0, [r0], #-768	; 0xfffffd00
    3c6c:	00000068 	andeq	r0, r0, r8, rrx
    3c70:	000a3e04 	andeq	r3, sl, r4, lsl #28
    3c74:	1a4b0400 	bne	12c4c7c <__RAM_SIZE+0x11c4c7c>
    3c78:	00000074 	andeq	r0, r0, r4, ror r0
    3c7c:	00099a04 	andeq	r9, r9, r4, lsl #20
    3c80:	1a510400 	bne	1444c88 <__RAM_SIZE+0x1344c88>
    3c84:	0000008b 	andeq	r0, r0, fp, lsl #1
    3c88:	0000a306 	andeq	sl, r0, r6, lsl #6
    3c8c:	09c10700 	stmibeq	r1, {r8, r9, sl}^
    3c90:	05140000 	ldreq	r0, [r4, #-0]
    3c94:	010d0890 			; <UNDEFINED> instruction: 0x010d0890
    3c98:	a5080000 	strge	r0, [r8, #-0]
    3c9c:	05000009 	streq	r0, [r0, #-9]
    3ca0:	00a32493 	umlaleq	r2, r3, r3, r4
    3ca4:	23020000 	movwcs	r0, #8192	; 0x2000
    3ca8:	0a0e0800 	beq	385cb0 <__RAM_SIZE+0x285cb0>
    3cac:	94050000 	strls	r0, [r5], #-0
    3cb0:	00010d2d 	andeq	r0, r1, sp, lsr #26
    3cb4:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    3cb8:	000a5d08 	andeq	r5, sl, r8, lsl #26
    3cbc:	2d950500 	cfldr32cs	mvfx0, [r5]
    3cc0:	0000010d 	andeq	r0, r0, sp, lsl #2
    3cc4:	08082302 	stmdaeq	r8, {r1, r8, r9, sp}
    3cc8:	000009b9 			; <UNDEFINED> instruction: 0x000009b9
    3ccc:	820c9605 	andhi	r9, ip, #5242880	; 0x500000
    3cd0:	02000000 	andeq	r0, r0, #0
    3cd4:	8e080c23 	cdphi	12, 0, cr0, cr8, cr3, {1}
    3cd8:	05000009 	streq	r0, [r0, #-9]
    3cdc:	014e2897 			; <UNDEFINED> instruction: 0x014e2897
    3ce0:	23020000 	movwcs	r0, #8192	; 0x2000
    3ce4:	04090010 	streq	r0, [r9], #-16
    3ce8:	000000b4 	strheq	r0, [r0], -r4
    3cec:	000a9007 	andeq	r9, sl, r7
    3cf0:	ac051c00 	stcge	12, cr1, [r5], {-0}
    3cf4:	00014e10 	andeq	r4, r1, r0, lsl lr
    3cf8:	09ef0800 	stmibeq	pc!, {fp}^	; <UNPREDICTABLE>
    3cfc:	af050000 	svcge	0x00050000
    3d00:	00009725 	andeq	r9, r0, r5, lsr #14
    3d04:	00230200 	eoreq	r0, r3, r0, lsl #4
    3d08:	000a5508 	andeq	r5, sl, r8, lsl #10
    3d0c:	26b00500 	ldrtcs	r0, [r0], r0, lsl #10
    3d10:	0000016c 	andeq	r0, r0, ip, ror #2
    3d14:	08042302 	stmdaeq	r4, {r1, r8, r9, sp}
    3d18:	000009b0 			; <UNDEFINED> instruction: 0x000009b0
    3d1c:	6014b105 	andsvs	fp, r4, r5, lsl #2
    3d20:	02000001 	andeq	r0, r0, #1
    3d24:	09000823 	stmdbeq	r0, {r0, r1, r5, fp}
    3d28:	00011304 	andeq	r1, r1, r4, lsl #6
    3d2c:	19b70400 	ldmibne	r7!, {sl}
    3d30:	9a050000 	bls	143d38 <__RAM_SIZE+0x43d38>
    3d34:	0000b41b 	andeq	fp, r0, fp, lsl r4
    3d38:	0bea0400 	bleq	ffa84d40 <__StackTop+0xc7984d40>
    3d3c:	a6050000 	strge	r0, [r5], -r0
    3d40:	0000b424 	andeq	fp, r0, r4, lsr #8
    3d44:	54040900 	strpl	r0, [r4], #-2304	; 0xfffff700
    3d48:	06000001 	streq	r0, [r0], -r1
    3d4c:	0000016c 	andeq	r0, r0, ip, ror #2
    3d50:	00145d04 	andseq	r5, r4, r4, lsl #26
    3d54:	03b30500 			; <UNDEFINED> instruction: 0x03b30500
    3d58:	00000113 	andeq	r0, r0, r3, lsl r1
    3d5c:	0a96010a 	beq	fe58418c <__StackTop+0xc648418c>
    3d60:	d7010000 	strle	r0, [r1, -r0]
    3d64:	0097010d 	addseq	r0, r7, sp, lsl #2
    3d68:	20460000 	subcs	r0, r6, r0
    3d6c:	206a1000 	rsbcs	r1, sl, r0
    3d70:	7d021000 	stcvc	0, cr1, [r2, #-0]
    3d74:	01ca0100 	biceq	r0, sl, r0, lsl #2
    3d78:	cc0b0000 	stcgt	0, cr0, [fp], {-0}
    3d7c:	01000009 	tsteq	r0, r9
    3d80:	01722ed7 	ldrsbeq	r2, [r2, #-231]!	; 0xffffff19
    3d84:	2f3b0000 	svccs	0x003b0000
    3d88:	2f350000 	svccs	0x00350000
    3d8c:	890c0000 	stmdbhi	ip, {}	; <UNPREDICTABLE>
    3d90:	0100000a 	tsteq	r0, sl
    3d94:	01d014db 	ldrsbeq	r1, [r0, #75]	; 0x4b
    3d98:	2f690000 	svccs	0x00690000
    3d9c:	2f670000 	svccs	0x00670000
    3da0:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    3da4:	00017704 	andeq	r7, r1, r4, lsl #14
    3da8:	01ca0600 	biceq	r0, sl, r0, lsl #12
    3dac:	010d0000 	mrseq	r0, (UNDEF: 13)
    3db0:	00000ab1 			; <UNDEFINED> instruction: 0x00000ab1
    3db4:	01068b01 	tsteq	r6, r1, lsl #22
    3db8:	10002014 	andne	r2, r0, r4, lsl r0
    3dbc:	10002046 	andne	r2, r0, r6, asr #32
    3dc0:	00002f7c 	andeq	r2, r0, ip, ror pc
    3dc4:	00023501 	andeq	r3, r2, r1, lsl #10
    3dc8:	0a890e00 	beq	fe2475d0 <__StackTop+0xc61475d0>
    3dcc:	8b010000 	blhi	43dd4 <__HEAP_SIZE+0x42dd4>
    3dd0:	0001d022 	andeq	sp, r1, r2, lsr #32
    3dd4:	0e500100 	rdfeqs	f0, f0, f0
    3dd8:	00000aa3 	andeq	r0, r0, r3, lsr #21
    3ddc:	72268c01 	eorvc	r8, r6, #256	; 0x100
    3de0:	01000001 	tsteq	r0, r1
    3de4:	0a4a0c51 	beq	1286f30 <__RAM_SIZE+0x1186f30>
    3de8:	8e010000 	cdphi	0, 0, cr0, cr1, cr0, {0}
    3dec:	00016c12 	andeq	r6, r1, r2, lsl ip
    3df0:	002fba00 	eoreq	fp, pc, r0, lsl #20
    3df4:	002fb400 	eoreq	fp, pc, r0, lsl #8
    3df8:	0a250c00 	beq	946e00 <__RAM_SIZE+0x846e00>
    3dfc:	8f010000 	svchi	0x00010000
    3e00:	0000af16 	andeq	sl, r0, r6, lsl pc
    3e04:	002fe700 	eoreq	lr, pc, r0, lsl #14
    3e08:	002fe300 	eoreq	lr, pc, r0, lsl #6
    3e0c:	010f0000 	mrseq	r0, CPSR
    3e10:	000009ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    3e14:	01066901 	tsteq	r6, r1, lsl #18
	...
    3e20:	01007d02 	tsteq	r0, r2, lsl #26
    3e24:	00000280 	andeq	r0, r0, r0, lsl #5
    3e28:	000a890e 	andeq	r8, sl, lr, lsl #18
    3e2c:	25690100 	strbcs	r0, [r9, #-256]!	; 0xffffff00
    3e30:	000001d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    3e34:	a30e5001 	movwge	r5, #57345	; 0xe001
    3e38:	0100000a 	tsteq	r0, sl
    3e3c:	0172296a 	cmneq	r2, sl, ror #18
    3e40:	51010000 	mrspl	r0, (UNDEF: 1)
    3e44:	000a550c 	andeq	r5, sl, ip, lsl #10
    3e48:	186c0100 	stmdane	ip!, {r8}^
    3e4c:	00000172 	andeq	r0, r0, r2, ror r1
    3e50:	00003007 	andeq	r3, r0, r7
    3e54:	00003005 	andeq	r3, r0, r5
    3e58:	db010f00 	blle	47a60 <__HEAP_SIZE+0x46a60>
    3e5c:	01000009 	tsteq	r0, r9
    3e60:	0e010659 	mcreq	6, 0, r0, cr1, cr9, {2}
    3e64:	14100020 	ldrne	r0, [r0], #-32	; 0xffffffe0
    3e68:	02100020 	andseq	r0, r0, #32
    3e6c:	a901007d 	stmdbge	r1, {r0, r2, r3, r4, r5, r6}
    3e70:	0e000002 	cdpeq	0, 0, cr0, cr0, cr2, {0}
    3e74:	00000a37 	andeq	r0, r0, r7, lsr sl
    3e78:	722e5901 	eorvc	r5, lr, #16384	; 0x4000
    3e7c:	01000001 	tsteq	r0, r1
    3e80:	01100050 	tsteq	r0, r0, asr r0
    3e84:	00000a15 	andeq	r0, r0, r5, lsl sl
    3e88:	01063101 	tsteq	r6, r1, lsl #2
    3e8c:	10001ff4 	strdne	r1, [r0], -r4
    3e90:	1000200e 	andne	r2, r0, lr
    3e94:	01007d02 	tsteq	r0, r2, lsl #26
    3e98:	000a890e 	andeq	r8, sl, lr, lsl #18
    3e9c:	26310100 	ldrtcs	r0, [r1], -r0, lsl #2
    3ea0:	000001d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    3ea4:	00005001 	andeq	r5, r0, r1
    3ea8:	000024bd 			; <UNDEFINED> instruction: 0x000024bd
    3eac:	0d5d0002 	ldcleq	0, cr0, [sp, #-8]
    3eb0:	01040000 	mrseq	r0, (UNDEF: 4)
    3eb4:	000000bf 	strheq	r0, [r0], -pc	; <UNPREDICTABLE>
    3eb8:	000ec80c 	andeq	ip, lr, ip, lsl #16
    3ebc:	0001a800 	andeq	sl, r1, r0, lsl #16
    3ec0:	0003a800 	andeq	sl, r3, r0, lsl #16
	...
    3ecc:	0027e200 	eoreq	lr, r7, r0, lsl #4
    3ed0:	04e70200 	strbteq	r0, [r7], #512	; 0x200
    3ed4:	d1020000 	mrsle	r0, (UNDEF: 2)
    3ed8:	00003517 	andeq	r3, r0, r7, lsl r5
    3edc:	07040300 	streq	r0, [r4, -r0, lsl #6]
    3ee0:	0000021d 	andeq	r0, r0, sp, lsl r2
    3ee4:	69050404 	stmdbvs	r5, {r2, sl}
    3ee8:	0300746e 	movweq	r7, #1134	; 0x46e
    3eec:	02550508 	subseq	r0, r5, #8, 10	; 0x2000000
    3ef0:	08030000 	stmdaeq	r3, {}	; <UNPREDICTABLE>
    3ef4:	00024904 	andeq	r4, r2, r4, lsl #18
    3ef8:	11460200 	mrsne	r0, (UNDEF: 102)
    3efc:	29030000 	stmdbcs	r3, {}	; <UNPREDICTABLE>
    3f00:	00005d17 	andeq	r5, r0, r7, lsl sp
    3f04:	06010300 	streq	r0, [r1], -r0, lsl #6
    3f08:	0000008f 	andeq	r0, r0, pc, lsl #1
    3f0c:	00000002 	andeq	r0, r0, r2
    3f10:	182b0300 	stmdane	fp!, {r8, r9}
    3f14:	00000070 	andeq	r0, r0, r0, ror r0
    3f18:	8d080103 	stfhis	f0, [r8, #-12]
    3f1c:	03000000 	movweq	r0, #0
    3f20:	02a50502 	adceq	r0, r5, #8388608	; 0x800000
    3f24:	02030000 	andeq	r0, r3, #0
    3f28:	0000ac07 	andeq	sl, r0, r7, lsl #24
    3f2c:	05040300 	streq	r0, [r4, #-768]	; 0xfffffd00
    3f30:	0000025a 	andeq	r0, r0, sl, asr r2
    3f34:	00037d02 	andeq	r7, r3, r2, lsl #26
    3f38:	194f0300 	stmdbne	pc, {r8, r9}^	; <UNPREDICTABLE>
    3f3c:	00000098 	muleq	r0, r8, r0
    3f40:	18070403 	stmdane	r7, {r0, r1, sl}
    3f44:	03000002 	movweq	r0, #2
    3f48:	02130708 	andseq	r0, r3, #8, 14	; 0x200000
    3f4c:	04050000 	streq	r0, [r5], #-0
    3f50:	0000a606 	andeq	sl, r0, r6, lsl #12
    3f54:	08010300 	stmdaeq	r1, {r8, r9}
    3f58:	00000096 	muleq	r0, r6, r0
    3f5c:	00bf0407 	adcseq	r0, pc, r7, lsl #8
    3f60:	b4060000 	strlt	r0, [r6], #-0
    3f64:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    3f68:	00114802 	andseq	r4, r1, r2, lsl #16
    3f6c:	12140400 	andsne	r0, r4, #0, 8
    3f70:	00000051 	andeq	r0, r0, r1, asr r0
    3f74:	0000c009 	andeq	ip, r0, r9
    3f78:	00c00600 	sbceq	r0, r0, r0, lsl #12
    3f7c:	02020000 	andeq	r0, r2, #0
    3f80:	04000000 	streq	r0, [r0], #-0
    3f84:	00641318 	rsbeq	r1, r4, r8, lsl r3
    3f88:	d6060000 	strle	r0, [r6], -r0
    3f8c:	02000000 	andeq	r0, r0, #0
    3f90:	0000037f 	andeq	r0, r0, pc, ror r3
    3f94:	8c143004 	ldchi	0, cr3, [r4], {4}
    3f98:	02000000 	andeq	r0, r0, #0
    3f9c:	00000a3f 	andeq	r0, r0, pc, lsr sl
    3fa0:	851a4a05 	ldrhi	r4, [sl, #-2565]	; 0xfffff5fb
    3fa4:	06000000 	streq	r0, [r0], -r0
    3fa8:	000000f3 	strdeq	r0, [r0], -r3
    3fac:	000a3e02 	andeq	r3, sl, r2, lsl #28
    3fb0:	1a4b0500 	bne	12c53b8 <__RAM_SIZE+0x11c53b8>
    3fb4:	00000098 	muleq	r0, r8, r0
    3fb8:	00010409 	andeq	r0, r1, r9, lsl #8
    3fbc:	01040600 	tsteq	r4, r0, lsl #12
    3fc0:	9a020000 	bls	83fc8 <__HEAP_SIZE+0x82fc8>
    3fc4:	05000009 	streq	r0, [r0, #-9]
    3fc8:	00e71a51 	rsceq	r1, r7, r1, asr sl
    3fcc:	1a060000 	bne	183fd4 <__RAM_SIZE+0x83fd4>
    3fd0:	07000001 	streq	r0, [r0, -r1]
    3fd4:	0000d604 	andeq	sp, r0, r4, lsl #12
    3fd8:	129e0a00 	addsne	r0, lr, #0, 20
    3fdc:	06140000 	ldreq	r0, [r4], -r0
    3fe0:	60080c0c 	andvs	r0, r8, ip, lsl #24
    3fe4:	0b000001 	bleq	3ff0 <__HEAP_SIZE+0x2ff0>
    3fe8:	00000e3f 	andeq	r0, r0, pc, lsr lr
    3fec:	100c1106 	andne	r1, ip, r6, lsl #2
    3ff0:	0000011a 	andeq	r0, r0, sl, lsl r1
    3ff4:	0b002302 	bleq	cc04 <__HEAP_SIZE+0xbc04>
    3ff8:	00000e35 	andeq	r0, r0, r5, lsr lr
    3ffc:	0c0c1206 	sfmeq	f1, 4, [ip], {6}
    4000:	00000160 	andeq	r0, r0, r0, ror #2
    4004:	00042302 	andeq	r2, r4, r2, lsl #6
    4008:	0000a60c 	andeq	sl, r0, ip, lsl #12
    400c:	00017000 	andeq	r7, r1, r0
    4010:	00350d00 	eorseq	r0, r5, r0, lsl #26
    4014:	00030000 	andeq	r0, r3, r0
    4018:	000be40e 	andeq	lr, fp, lr, lsl #8
    401c:	0c250600 	stceq	6, cr0, [r5], #-0
    4020:	0001312b 	andeq	r3, r1, fp, lsr #2
    4024:	10300a00 	eorsne	r0, r0, r0, lsl #20
    4028:	061c0000 	ldreq	r0, [ip], -r0
    402c:	bc100c29 	ldclt	12, cr0, [r0], {41}	; 0x29
    4030:	0b000001 	bleq	403c <__HEAP_SIZE+0x303c>
    4034:	00000e3e 	andeq	r0, r0, lr, lsr lr
    4038:	110c2e06 	tstne	ip, r6, lsl #28
    403c:	00000104 	andeq	r0, r0, r4, lsl #2
    4040:	0b002302 	bleq	cc50 <__HEAP_SIZE+0xbc50>
    4044:	00000e35 	andeq	r0, r0, r5, lsr lr
    4048:	0c0c2f06 	stceq	15, cr2, [ip], {6}
    404c:	000000a6 	andeq	r0, r0, r6, lsr #1
    4050:	0b042302 	bleq	10cc60 <__RAM_SIZE+0xcc60>
    4054:	00000e51 	andeq	r0, r0, r1, asr lr
    4058:	1a0c3006 	bne	310078 <__RAM_SIZE+0x210078>
    405c:	00000170 	andeq	r0, r0, r0, ror r1
    4060:	00082302 	andeq	r2, r8, r2, lsl #6
    4064:	0014570e 	andseq	r5, r4, lr, lsl #14
    4068:	0c340600 	ldceq	6, cr0, [r4], #-0
    406c:	00017d03 	andeq	r7, r1, r3, lsl #26
    4070:	06040f00 	streq	r0, [r4], -r0, lsl #30
    4074:	ee050c91 	mcr	12, 0, r0, cr5, cr1, {4}
    4078:	10000001 	andne	r0, r0, r1
    407c:	00000e2c 	andeq	r0, r0, ip, lsr #28
    4080:	100c9306 	andne	r9, ip, r6, lsl #6
    4084:	000000a6 	andeq	r0, r0, r6, lsr #1
    4088:	000e3e10 	andeq	r3, lr, r0, lsl lr
    408c:	0c940600 	ldceq	6, cr0, [r4], {0}
    4090:	00010415 	andeq	r0, r1, r5, lsl r4
    4094:	1d0a0000 	stcne	0, cr0, [sl, #-0]
    4098:	5c000014 	stcpl	0, cr0, [r0], {20}
    409c:	100c8d06 	andne	r8, ip, r6, lsl #26
    40a0:	0000026b 	andeq	r0, r0, fp, ror #4
    40a4:	000e230b 	andeq	r2, lr, fp, lsl #6
    40a8:	0c8f0600 	stceq	6, cr0, [pc], {0}
    40ac:	00026b0c 	andeq	r6, r2, ip, lsl #22
    40b0:	00230200 	eoreq	r0, r3, r0, lsl #4
    40b4:	06007511 			; <UNDEFINED> instruction: 0x06007511
    40b8:	c9070c95 	stmdbgt	r7, {r0, r2, r4, r7, sl, fp}
    40bc:	02000001 	andeq	r0, r0, #1
    40c0:	630b0c23 	movwvs	r0, #48163	; 0xbc23
    40c4:	06000013 			; <UNDEFINED> instruction: 0x06000013
    40c8:	7b120c97 	blvc	48732c <__RAM_SIZE+0x38732c>
    40cc:	02000002 	andeq	r0, r0, #2
    40d0:	500b1023 	andpl	r1, fp, r3, lsr #32
    40d4:	0600000e 	streq	r0, [r0], -lr
    40d8:	8b110c98 	blhi	447340 <__RAM_SIZE+0x347340>
    40dc:	02000002 	andeq	r0, r0, #2
    40e0:	720b4823 	andvc	r4, fp, #2293760	; 0x230000
    40e4:	06000011 			; <UNDEFINED> instruction: 0x06000011
    40e8:	9b0d0c99 	blls	347354 <__RAM_SIZE+0x247354>
    40ec:	02000002 	andeq	r0, r0, #2
    40f0:	7b0b5423 	blvc	2d9184 <__RAM_SIZE+0x1d9184>
    40f4:	06000011 			; <UNDEFINED> instruction: 0x06000011
    40f8:	d6110c9c 			; <UNDEFINED> instruction: 0xd6110c9c
    40fc:	02000000 	andeq	r0, r0, #0
    4100:	470b5623 	strmi	r5, [fp, -r3, lsr #12]
    4104:	0600000e 	streq	r0, [r0], -lr
    4108:	a6100ca0 	ldrge	r0, [r0], -r0, lsr #25
    410c:	02000000 	andeq	r0, r0, #0
    4110:	0c005823 	stceq	8, cr5, [r0], {35}	; 0x23
    4114:	000000a6 	andeq	r0, r0, r6, lsr #1
    4118:	0000027b 	andeq	r0, r0, fp, ror r2
    411c:	0000350d 	andeq	r3, r0, sp, lsl #10
    4120:	0c000200 	sfmeq	f0, 4, [r0], {-0}
    4124:	000001bc 			; <UNDEFINED> instruction: 0x000001bc
    4128:	0000028b 	andeq	r0, r0, fp, lsl #5
    412c:	0000350d 	andeq	r3, r0, sp, lsl #10
    4130:	0c000100 	stfeqs	f0, [r0], {-0}
    4134:	00000104 	andeq	r0, r0, r4, lsl #2
    4138:	0000029b 	muleq	r0, fp, r2
    413c:	0000350d 	andeq	r3, r0, sp, lsl #10
    4140:	0c000200 	sfmeq	f0, 4, [r0], {-0}
    4144:	000000d6 	ldrdeq	r0, [r0], -r6
    4148:	000002ab 	andeq	r0, r0, fp, lsr #5
    414c:	0000350d 	andeq	r3, r0, sp, lsl #10
    4150:	0e000100 	adfeqs	f0, f0, f0
    4154:	00001060 	andeq	r1, r0, r0, rrx
    4158:	030ca706 	movweq	sl, #50950	; 0xc706
    415c:	000001ee 	andeq	r0, r0, lr, ror #3
    4160:	0009c112 	andeq	ip, r9, r2, lsl r1
    4164:	90071400 	andls	r1, r7, r0, lsl #8
    4168:	00031108 	andeq	r1, r3, r8, lsl #2
    416c:	09a51300 	stmibeq	r5!, {r8, r9, ip}
    4170:	93070000 	movwls	r0, #28672	; 0x7000
    4174:	00011a24 	andeq	r1, r1, r4, lsr #20
    4178:	00230200 	eoreq	r0, r3, r0, lsl #4
    417c:	000a0e13 	andeq	r0, sl, r3, lsl lr
    4180:	2d940700 	ldccs	7, cr0, [r4]
    4184:	00000311 	andeq	r0, r0, r1, lsl r3
    4188:	13042302 	movwne	r2, #17154	; 0x4302
    418c:	00000a5d 	andeq	r0, r0, sp, asr sl
    4190:	112d9507 			; <UNDEFINED> instruction: 0x112d9507
    4194:	02000003 	andeq	r0, r0, #3
    4198:	b9130823 	ldmdblt	r3, {r0, r1, r5, fp}
    419c:	07000009 	streq	r0, [r0, -r9]
    41a0:	00a60c96 	umlaleq	r0, r6, r6, ip
    41a4:	23020000 	movwcs	r0, #8192	; 0x2000
    41a8:	098e130c 	stmibeq	lr, {r2, r3, r8, r9, ip}
    41ac:	97070000 	strls	r0, [r7, -r0]
    41b0:	00035228 	andeq	r5, r3, r8, lsr #4
    41b4:	10230200 	eorne	r0, r3, r0, lsl #4
    41b8:	b8040700 	stmdalt	r4, {r8, r9, sl}
    41bc:	12000002 	andne	r0, r0, #2
    41c0:	00000a90 	muleq	r0, r0, sl
    41c4:	10ac071c 	adcne	r0, ip, ip, lsl r7
    41c8:	00000352 	andeq	r0, r0, r2, asr r3
    41cc:	0009ef13 	andeq	lr, r9, r3, lsl pc
    41d0:	25af0700 	strcs	r0, [pc, #1792]!	; 48d8 <__HEAP_SIZE+0x38d8>
    41d4:	00000104 	andeq	r0, r0, r4, lsl #2
    41d8:	13002302 	movwne	r2, #770	; 0x302
    41dc:	00000a55 	andeq	r0, r0, r5, asr sl
    41e0:	7026b007 	eorvc	fp, r6, r7
    41e4:	02000003 	andeq	r0, r0, #3
    41e8:	b0130423 	andslt	r0, r3, r3, lsr #8
    41ec:	07000009 	streq	r0, [r0, -r9]
    41f0:	036414b1 	cmneq	r4, #-1325400064	; 0xb1000000
    41f4:	23020000 	movwcs	r0, #8192	; 0x2000
    41f8:	04070008 	streq	r0, [r7], #-8
    41fc:	00000317 	andeq	r0, r0, r7, lsl r3
    4200:	0019b702 	andseq	fp, r9, r2, lsl #14
    4204:	1b9a0700 	blne	fe685e0c <__StackTop+0xc6585e0c>
    4208:	000002b8 			; <UNDEFINED> instruction: 0x000002b8
    420c:	000bea02 	andeq	lr, fp, r2, lsl #20
    4210:	24a60700 	strtcs	r0, [r6], #1792	; 0x700
    4214:	000002b8 			; <UNDEFINED> instruction: 0x000002b8
    4218:	03580407 	cmpeq	r8, #117440512	; 0x7000000
    421c:	5d020000 	stcpl	0, cr0, [r2, #-0]
    4220:	07000014 	smladeq	r0, r4, r0, r0
    4224:	031703b3 	tsteq	r7, #-872415230	; 0xcc000002
    4228:	af020000 	svcge	0x00020000
    422c:	08000002 	stmdaeq	r0, {r1}
    4230:	038e2e5c 	orreq	r2, lr, #92, 28	; 0x5c0
    4234:	04070000 	streq	r0, [r7], #-0
    4238:	00000394 	muleq	r0, r4, r3
    423c:	0001f214 	andeq	pc, r1, r4, lsl r2	; <UNPREDICTABLE>
    4240:	8d120100 	ldfhis	f0, [r2, #-0]
    4244:	0800000b 	stmdaeq	r0, {r0, r1, r3}
    4248:	c6107d08 	ldrgt	r7, [r0], -r8, lsl #26
    424c:	13000003 	movwne	r0, #3
    4250:	00000c3e 	andeq	r0, r0, lr, lsr ip
    4254:	f3107f08 	vpmax.f16	d7, d0, d8
    4258:	02000000 	andeq	r0, r0, #0
    425c:	50130023 	andspl	r0, r3, r3, lsr #32
    4260:	08000010 	stmdaeq	r0, {r4}
    4264:	011a1080 	tsteq	sl, r0, lsl #1
    4268:	23020000 	movwcs	r0, #8192	; 0x2000
    426c:	9d020004 	stcls	0, cr0, [r2, #-16]
    4270:	08000010 	stmdaeq	r0, {r4}
    4274:	039a0381 	orrseq	r0, sl, #67108866	; 0x4000002
    4278:	82020000 	andhi	r0, r2, #0
    427c:	0900000f 	stmdbeq	r0, {r0, r1, r2, r3}
    4280:	03e32433 	mvneq	r2, #855638016	; 0x33000000
    4284:	d2060000 	andle	r0, r6, #0
    4288:	07000003 	streq	r0, [r0, -r3]
    428c:	0003e904 	andeq	lr, r3, r4, lsl #18
    4290:	0cf31200 	lfmeq	f1, 2, [r3]
    4294:	015c0000 	cmpeq	ip, r0
    4298:	04a91067 	strteq	r1, [r9], #103	; 0x67
    429c:	85130000 	ldrhi	r0, [r3, #-0]
    42a0:	01000013 	tsteq	r0, r3, lsl r0
    42a4:	04ed0e69 	strbteq	r0, [sp], #3689	; 0xe69
    42a8:	23020000 	movwcs	r0, #8192	; 0x2000
    42ac:	113c1300 	teqne	ip, r0, lsl #6
    42b0:	6a010000 	bvs	442b8 <__HEAP_SIZE+0x432b8>
    42b4:	0004ed0e 	andeq	lr, r4, lr, lsl #26
    42b8:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    42bc:	01007515 	tsteq	r0, r5, lsl r5
    42c0:	05370770 	ldreq	r0, [r7, #-1904]!	; 0xfffff890
    42c4:	23020000 	movwcs	r0, #8192	; 0x2000
    42c8:	0c0b1308 	stceq	3, cr1, [fp], {8}
    42cc:	72010000 	andvc	r0, r1, #0
    42d0:	0003760c 	andeq	r7, r3, ip, lsl #12
    42d4:	10230200 	eorne	r0, r3, r0, lsl #4
    42d8:	000b5413 	andeq	r5, fp, r3, lsl r4
    42dc:	0c730100 	ldfeqe	f0, [r3], #-0
    42e0:	00000376 	andeq	r0, r0, r6, ror r3
    42e4:	132c2302 			; <UNDEFINED> instruction: 0x132c2302
    42e8:	00000d55 	andeq	r0, r0, r5, asr sp
    42ec:	101a7501 	andsne	r7, sl, r1, lsl #10
    42f0:	02000001 	andeq	r0, r0, #1
    42f4:	a4134823 	ldrge	r4, [r3], #-2083	; 0xfffff7dd
    42f8:	01000011 	tsteq	r0, r1, lsl r0
    42fc:	01041176 	tsteq	r4, r6, ror r1
    4300:	23020000 	movwcs	r0, #8192	; 0x2000
    4304:	0eea134c 	cdpeq	3, 14, cr1, cr10, cr12, {2}
    4308:	77010000 	strvc	r0, [r1, -r0]
    430c:	00010411 	andeq	r0, r1, r1, lsl r4
    4310:	50230200 	eorpl	r0, r3, r0, lsl #4
    4314:	00141513 	andseq	r1, r4, r3, lsl r5
    4318:	15790100 	ldrbne	r0, [r9, #-256]!	; 0xffffff00
    431c:	000000cc 	andeq	r0, r0, ip, asr #1
    4320:	13542302 	cmpne	r4, #134217728	; 0x8000000
    4324:	00000c36 	andeq	r0, r0, r6, lsr ip
    4328:	cc157a01 			; <UNDEFINED> instruction: 0xcc157a01
    432c:	02000000 	andeq	r0, r0, #0
    4330:	7e135523 	cfmul64vc	mvdx5, mvdx3, mvdx3
    4334:	0100000e 	tsteq	r0, lr
    4338:	00d6117d 	sbcseq	r1, r6, sp, ror r1
    433c:	23020000 	movwcs	r0, #8192	; 0x2000
    4340:	13e81356 	mvnne	r1, #1476395009	; 0x58000001
    4344:	81010000 	mrshi	r0, (UNDEF: 1)
    4348:	0003e322 	andeq	lr, r3, r2, lsr #6
    434c:	58230200 	stmdapl	r3!, {r9}
    4350:	0dfe0200 	lfmeq	f0, 2, [lr]
    4354:	3a090000 	bcc	24435c <__RAM_SIZE+0x14435c>
    4358:	0003e324 	andeq	lr, r3, r4, lsr #6
    435c:	0dc70200 	sfmeq	f0, 2, [r7]
    4360:	41090000 	mrsmi	r0, (UNDEF: 9)
    4364:	0003e324 	andeq	lr, r3, r4, lsr #6
    4368:	0f621200 	svceq	0x00621200
    436c:	01080000 	mrseq	r0, (UNDEF: 8)
    4370:	04ed1044 	strbteq	r1, [sp], #68	; 0x44
    4374:	75130000 	ldrvc	r0, [r3, #-0]
    4378:	01000012 	tsteq	r0, r2, lsl r0
    437c:	04ed0e46 	strbteq	r0, [sp], #3654	; 0xe46
    4380:	23020000 	movwcs	r0, #8192	; 0x2000
    4384:	0c951300 	ldceq	3, cr1, [r5], {0}
    4388:	47010000 	strmi	r0, [r1, -r0]
    438c:	0004ed0e 	andeq	lr, r4, lr, lsl #26
    4390:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    4394:	c0040700 	andgt	r0, r4, r0, lsl #14
    4398:	02000000 	andeq	r0, r0, #0
    439c:	00001194 	muleq	r0, r4, r1
    43a0:	c1034801 	tstgt	r3, r1, lsl #16
    43a4:	12000004 	andne	r0, r0, #4
    43a8:	00000aea 	andeq	r0, r0, sl, ror #21
    43ac:	104a0108 	subne	r0, sl, r8, lsl #2
    43b0:	0000052b 	andeq	r0, r0, fp, lsr #10
    43b4:	001f4513 	andseq	r4, pc, r3, lsl r5	; <UNPREDICTABLE>
    43b8:	124c0100 	subne	r0, ip, #0, 2
    43bc:	00000382 	andeq	r0, r0, r2, lsl #7
    43c0:	13002302 	movwne	r2, #770	; 0x302
    43c4:	000012d6 	ldrdeq	r1, [r0], -r6
    43c8:	04114d01 	ldreq	r4, [r1], #-3329	; 0xfffff2ff
    43cc:	02000001 	andeq	r0, r0, #1
    43d0:	02000423 	andeq	r0, r0, #587202560	; 0x23000000
    43d4:	00000b03 	andeq	r0, r0, r3, lsl #22
    43d8:	ff034e01 			; <UNDEFINED> instruction: 0xff034e01
    43dc:	16000004 	strne	r0, [r0], -r4
    43e0:	056c0108 	strbeq	r0, [ip, #-264]!	; 0xfffffef8
    43e4:	00000559 	andeq	r0, r0, r9, asr r5
    43e8:	00129717 	andseq	r9, r2, r7, lsl r7
    43ec:	196e0100 	stmdbne	lr!, {r8}^
    43f0:	000004f3 	strdeq	r0, [r0], -r3
    43f4:	000d6717 	andeq	r6, sp, r7, lsl r7
    43f8:	196f0100 	stmdbne	pc!, {r8}^	; <UNPREDICTABLE>
    43fc:	0000052b 	andeq	r0, r0, fp, lsr #10
    4400:	13e10200 	mvnne	r0, #0, 4
    4404:	88010000 	stmdahi	r1, {}	; <UNPREDICTABLE>
    4408:	0003e903 	andeq	lr, r3, r3, lsl #18
    440c:	10660200 	rsbne	r0, r6, r0, lsl #4
    4410:	8c010000 	stchi	0, cr0, [r1], {-0}
    4414:	00055910 	andeq	r5, r5, r0, lsl r9
    4418:	05650600 	strbeq	r0, [r5, #-1536]!	; 0xfffffa00
    441c:	cf180000 	svcgt	0x00180000
    4420:	0100000a 	tsteq	r0, sl
    4424:	01170cee 	tsteq	r7, lr, ror #25
    4428:	000000f3 	strdeq	r0, [r0], -r3
    442c:	1000211e 	andne	r2, r0, lr, lsl r1
    4430:	10002176 	andne	r2, r0, r6, ror r1
    4434:	0000301a 	andeq	r3, r0, sl, lsl r0
    4438:	00064b01 	andeq	r4, r6, r1, lsl #22
    443c:	12961900 	addsne	r1, r6, #0, 18
    4440:	ee010000 	cdp	0, 0, cr0, cr1, cr0, {0}
    4444:	0651490c 	ldrbeq	r4, [r1], -ip, lsl #18
    4448:	30640000 	rsbcc	r0, r4, r0
    444c:	305e0000 	subscc	r0, lr, r0
    4450:	e81a0000 	ldmda	sl, {}	; <UNPREDICTABLE>
    4454:	01000013 	tsteq	r0, r3, lsl r0
    4458:	56130cf0 			; <UNDEFINED> instruction: 0x56130cf0
    445c:	90000006 	andls	r0, r0, r6
    4460:	8e000030 	mcrhi	0, 0, r0, cr0, cr0, {1}
    4464:	1a000030 	bne	452c <__HEAP_SIZE+0x352c>
    4468:	00001a93 	muleq	r0, r3, sl
    446c:	140cf101 	strne	pc, [ip], #-257	; 0xfffffeff
    4470:	000000f3 	strdeq	r0, [r0], -r3
    4474:	000030b1 	strheq	r3, [r0], -r1
    4478:	000030a3 	andeq	r3, r0, r3, lsr #1
    447c:	0002d01b 	andeq	sp, r2, fp, lsl r0
    4480:	0c361a00 			; <UNDEFINED> instruction: 0x0c361a00
    4484:	fd010000 	stc2	0, cr0, [r1, #-0]
    4488:	00d11a0c 	sbcseq	r1, r1, ip, lsl #20
    448c:	310d0000 	mrscc	r0, (UNDEF: 13)
    4490:	31090000 	mrscc	r0, (UNDEF: 9)
    4494:	641c0000 	ldrvs	r0, [ip], #-0
    4498:	76100021 	ldrvc	r0, [r0], -r1, lsr #32
    449c:	1a100021 	bne	404528 <__RAM_SIZE+0x304528>
    44a0:	1a000006 	bne	44c0 <__HEAP_SIZE+0x34c0>
    44a4:	00001184 	andeq	r1, r0, r4, lsl #3
    44a8:	110d1901 	tstne	sp, r1, lsl #18
    44ac:	00000115 	andeq	r0, r0, r5, lsl r1
    44b0:	0000312f 	andeq	r3, r0, pc, lsr #2
    44b4:	0000312d 	andeq	r3, r0, sp, lsr #2
    44b8:	0021681d 	eoreq	r6, r1, sp, lsl r8
    44bc:	00237010 	eoreq	r7, r3, r0, lsl r0
    44c0:	461e0000 	ldrmi	r0, [lr], -r0
    44c4:	fe100021 	cdp2	0, 1, cr0, cr0, cr1, {1}
    44c8:	3900000b 	stmdbcc	r0, {r0, r1, r3}
    44cc:	1f000006 	svcne	0x00000006
    44d0:	74025001 	strvc	r5, [r2], #-1
    44d4:	51011f00 	tstpl	r1, r0, lsl #30
    44d8:	1f6c9102 	svcne	0x006c9102
    44dc:	30015201 	andcc	r5, r1, r1, lsl #4
    44e0:	215c2000 	cmpcs	ip, r0
    44e4:	237f1000 	cmncs	pc, #0
    44e8:	011f0000 	tsteq	pc, r0
    44ec:	2c740250 	lfmcs	f0, 2, [r4], #-320	; 0xfffffec0
    44f0:	07000000 	streq	r0, [r0, -r0]
    44f4:	00057104 	andeq	r7, r5, r4, lsl #2
    44f8:	064b0600 	strbeq	r0, [fp], -r0, lsl #12
    44fc:	04070000 	streq	r0, [r7], #-0
    4500:	00000565 	andeq	r0, r0, r5, ror #10
    4504:	00065606 	andeq	r5, r6, r6, lsl #12
    4508:	b0012100 	andlt	r2, r1, r0, lsl #2
    450c:	0100000b 	tsteq	r0, fp
    4510:	011c0cdc 			; <UNDEFINED> instruction: 0x011c0cdc
    4514:	000004b5 			; <UNDEFINED> instruction: 0x000004b5
	...
    4520:	00003142 	andeq	r3, r0, r2, asr #2
    4524:	0006c301 	andeq	ip, r6, r1, lsl #6
    4528:	0f901900 	svceq	0x00901900
    452c:	dc010000 	stcle	0, cr0, [r1], {-0}
    4530:	04a9490c 	strteq	r4, [r9], #2316	; 0x90c
    4534:	317e0000 	cmncc	lr, r0
    4538:	317a0000 	cmncc	sl, r0
    453c:	93220000 			; <UNDEFINED> instruction: 0x93220000
    4540:	0100001a 	tsteq	r0, sl, lsl r0
    4544:	b5200cde 	strlt	r0, [r0, #-3294]!	; 0xfffff322
    4548:	02000004 	andeq	r0, r0, #4
    454c:	00207491 	mlaeq	r0, r1, r4, r7
    4550:	a5000000 	strge	r0, [r0, #-0]
    4554:	1f00000f 	svcne	0x0000000f
    4558:	f3035001 	vhadd.u8	d5, d3, d1
    455c:	011f5001 	tsteq	pc, r1
    4560:	74910251 	ldrvc	r0, [r1], #593	; 0x251
    4564:	0152011f 	cmpeq	r2, pc, lsl r1
    4568:	21000030 	tstcs	r0, r0, lsr r0
    456c:	0012eb01 	andseq	lr, r2, r1, lsl #22
    4570:	0cc90100 	stfeqe	f0, [r9], {0}
    4574:	04b5011c 	ldrteq	r0, [r5], #284	; 0x11c
	...
    4580:	319f0000 	orrscc	r0, pc, r0
    4584:	3c010000 	stccc	0, cr0, [r1], {-0}
    4588:	19000007 	stmdbne	r0, {r0, r1, r2}
    458c:	00000f90 	muleq	r0, r0, pc	; <UNPREDICTABLE>
    4590:	420cc901 	andmi	ip, ip, #16384	; 0x4000
    4594:	000004a9 	andeq	r0, r0, r9, lsr #9
    4598:	000031db 	ldrdeq	r3, [r0], -fp
    459c:	000031d7 	ldrdeq	r3, [r0], -r7
    45a0:	00215b19 	eoreq	r5, r1, r9, lsl fp
    45a4:	0cca0100 	stfeqe	f0, [sl], {0}
    45a8:	00012642 	andeq	r2, r1, r2, asr #12
    45ac:	00320200 	eorseq	r0, r2, r0, lsl #4
    45b0:	0031fc00 	eorseq	pc, r1, r0, lsl #24
    45b4:	1a932200 	bne	fe4ccdbc <__StackTop+0xc63ccdbc>
    45b8:	cc010000 	stcgt	0, cr0, [r1], {-0}
    45bc:	04b5200c 	ldrteq	r2, [r5], #12
    45c0:	91020000 	mrsls	r0, (UNDEF: 2)
    45c4:	00002074 	andeq	r2, r0, r4, ror r0
    45c8:	15570000 	ldrbne	r0, [r7, #-0]
    45cc:	011f0000 	tsteq	pc, r0
    45d0:	01f30350 	mvnseq	r0, r0, asr r3
    45d4:	51011f50 	tstpl	r1, r0, asr pc
    45d8:	1f749102 	svcne	0x00749102
    45dc:	f3035201 	vhsub.u8	d5, d3, d1
    45e0:	00005101 	andeq	r5, r0, r1, lsl #2
    45e4:	106e0121 	rsbne	r0, lr, r1, lsr #2
    45e8:	a0010000 	andge	r0, r1, r0
    45ec:	f301100c 	vhadd.u8	d1, d1, d12
	...
    45f8:	2e000000 	cdpcs	0, 0, cr0, cr0, cr0, {0}
    45fc:	01000032 	tsteq	r0, r2, lsr r0
    4600:	000007c3 	andeq	r0, r0, r3, asr #15
    4604:	0011cd19 	andseq	ip, r1, r9, lsl sp
    4608:	0ca00100 	stfeqs	f0, [r0]
    460c:	0004b53c 	andeq	fp, r4, ip, lsr r5
    4610:	00325a00 	eorseq	r5, r2, r0, lsl #20
    4614:	00324e00 	eorseq	r4, r2, r0, lsl #28
    4618:	0f901900 	svceq	0x00901900
    461c:	a1010000 	mrsge	r0, (UNDEF: 1)
    4620:	04a9360c 	strteq	r3, [r9], #1548	; 0x60c
    4624:	32af0000 	adccc	r0, pc, #0
    4628:	32a70000 	adccc	r0, r7, #0
    462c:	931a0000 	tstls	sl, #0
    4630:	0100001a 	tsteq	r0, sl, lsl r0
    4634:	f3140ca3 			; <UNDEFINED> instruction: 0xf3140ca3
    4638:	ed000000 	stc	0, cr0, [r0, #-0]
    463c:	e9000032 	stmdb	r0, {r1, r4, r5}
    4640:	1a000032 	bne	4710 <__HEAP_SIZE+0x3710>
    4644:	000011cc 	andeq	r1, r0, ip, asr #3
    4648:	190ca401 	stmdbne	ip, {r0, sl, sp, pc}
    464c:	0000065c 	andeq	r0, r0, ip, asr r6
    4650:	00003319 	andeq	r3, r0, r9, lsl r3
    4654:	0000330d 	andeq	r3, r0, sp, lsl #6
    4658:	0000001d 	andeq	r0, r0, sp, lsl r0
    465c:	00238e00 	eoreq	r8, r3, r0, lsl #28
    4660:	00001d00 	andeq	r1, r0, r0, lsl #26
    4664:	239c0000 	orrscs	r0, ip, #0
    4668:	21000000 	mrscs	r0, (UNDEF: 0)
    466c:	00140601 	andseq	r0, r4, r1, lsl #12
    4670:	0c7a0100 	ldfeqe	f0, [sl], #-0
    4674:	00f30110 	rscseq	r0, r3, r0, lsl r1
	...
    4680:	33660000 	cmncc	r6, #0
    4684:	35010000 	strcc	r0, [r1, #-0]
    4688:	19000008 	stmdbne	r0, {r3}
    468c:	000011cd 	andeq	r1, r0, sp, asr #3
    4690:	370c7a01 	strcc	r7, [ip, -r1, lsl #20]
    4694:	000004b5 			; <UNDEFINED> instruction: 0x000004b5
    4698:	00003394 	muleq	r0, r4, r3
    469c:	00003386 	andeq	r3, r0, r6, lsl #7
    46a0:	000f9019 	andeq	r9, pc, r9, lsl r0	; <UNPREDICTABLE>
    46a4:	0c7b0100 	ldfeqe	f0, [fp], #-0
    46a8:	0004a931 	andeq	sl, r4, r1, lsr r9
    46ac:	0033f600 	eorseq	pc, r3, r0, lsl #12
    46b0:	0033f200 	eorseq	pc, r3, r0, lsl #4
    46b4:	1a931a00 	bne	fe4caebc <__StackTop+0xc63caebc>
    46b8:	7d010000 	stcvc	0, cr0, [r1, #-0]
    46bc:	00f3140c 	rscseq	r1, r3, ip, lsl #8
    46c0:	34180000 	ldrcc	r0, [r8], #-0
    46c4:	34140000 	ldrcc	r0, [r4], #-0
    46c8:	001d0000 	andseq	r0, sp, r0
    46cc:	8e000000 	cdphi	0, 0, cr0, cr0, cr0, {0}
    46d0:	1d000023 	stcne	0, cr0, [r0, #-140]	; 0xffffff74
    46d4:	00000000 	andeq	r0, r0, r0
    46d8:	0000239c 	muleq	r0, ip, r3
    46dc:	8d012100 	stfhis	f2, [r1, #-0]
    46e0:	01000010 	tsteq	r0, r0, lsl r0
    46e4:	01160c68 	tsteq	r6, r8, ror #24
    46e8:	000004a9 	andeq	r0, r0, r9, lsr #9
	...
    46f4:	00003437 	andeq	r3, r0, r7, lsr r4
    46f8:	00089b01 	andeq	r9, r8, r1, lsl #22
    46fc:	142b1900 	strtne	r1, [fp], #-2304	; 0xfffff700
    4700:	68010000 	stmdavs	r1, {}	; <UNPREDICTABLE>
    4704:	0115390c 	tsteq	r5, ip, lsl #18
    4708:	345b0000 	ldrbcc	r0, [fp], #-0
    470c:	34570000 	ldrbcc	r0, [r7], #-0
    4710:	961a0000 	ldrls	r0, [sl], -r0
    4714:	01000012 	tsteq	r0, r2, lsl r0
    4718:	a91a0c6a 	ldmdbge	sl, {r1, r3, r5, r6, sl, fp}
    471c:	7e000004 	cdpvc	0, 0, cr0, cr0, cr4, {0}
    4720:	7c000034 	stcvc	0, cr0, [r0], {52}	; 0x34
    4724:	20000034 	andcs	r0, r0, r4, lsr r0
    4728:	00000000 	andeq	r0, r0, r0
    472c:	0000207e 	andeq	r2, r0, lr, ror r0
    4730:	0350011f 	cmpeq	r0, #-1073741817	; 0xc0000007
    4734:	1f5001f3 	svcne	0x005001f3
    4738:	34015101 	strcc	r5, [r1], #-257	; 0xfffffeff
    473c:	0152011f 	cmpeq	r2, pc, lsl r1
    4740:	23000030 	movwcs	r0, #48	; 0x30
    4744:	0011ad01 	andseq	sl, r1, r1, lsl #26
    4748:	0c3c0100 	ldfeqs	f0, [ip], #-0
    474c:	23cc010a 	biccs	r0, ip, #-2147483646	; 0x80000002
    4750:	241e1000 	ldrcs	r1, [lr], #-0
    4754:	34911000 	ldrcc	r1, [r1], #0
    4758:	4e010000 	cdpmi	0, 0, cr0, cr1, cr0, {0}
    475c:	19000009 	stmdbne	r0, {r0, r3}
    4760:	00001297 	muleq	r0, r7, r2
    4764:	380c3c01 	stmdacc	ip, {r0, sl, fp, ip, sp}
    4768:	000003d2 	ldrdeq	r0, [r0], -r2
    476c:	000034b5 			; <UNDEFINED> instruction: 0x000034b5
    4770:	000034b1 			; <UNDEFINED> instruction: 0x000034b1
    4774:	00215b19 	eoreq	r5, r1, r9, lsl fp
    4778:	0c3d0100 	ldfeqs	f0, [sp], #-0
    477c:	00011a35 	andeq	r1, r1, r5, lsr sl
    4780:	0034d700 	eorseq	sp, r4, r0, lsl #14
    4784:	0034d300 	eorseq	sp, r4, r0, lsl #6
    4788:	0bf91900 	bleq	ffe4ab90 <__StackTop+0xc7d4ab90>
    478c:	3e010000 	cdpcc	0, 0, cr0, cr1, cr0, {0}
    4790:	00ff3b0c 	rscseq	r3, pc, ip, lsl #22
    4794:	34f90000 	ldrbtcc	r0, [r9], #0
    4798:	34f50000 	ldrbtcc	r0, [r5], #0
    479c:	961a0000 	ldrls	r0, [sl], -r0
    47a0:	01000012 	tsteq	r0, r2, lsl r0
    47a4:	5c190c40 	ldcpl	12, cr0, [r9], {64}	; 0x40
    47a8:	1b000006 	blne	47c8 <__HEAP_SIZE+0x37c8>
    47ac:	17000035 	smladxne	r0, r5, r0, r0
    47b0:	1d000035 	stcne	0, cr0, [r0, #-212]	; 0xffffff2c
    47b4:	100023d8 	ldrdne	r2, [r0], -r8
    47b8:	0000238e 	andeq	r2, r0, lr, lsl #7
    47bc:	0023f41d 	eoreq	pc, r3, sp, lsl r4	; <UNPREDICTABLE>
    47c0:	00239c10 	eoreq	r9, r3, r0, lsl ip
    47c4:	23fe1e00 	mvnscs	r1, #0, 28
    47c8:	0abd1000 	beq	fef487d0 <__StackTop+0xc6e487d0>
    47cc:	09310000 	ldmdbeq	r1!, {}	; <UNPREDICTABLE>
    47d0:	011f0000 	tsteq	pc, r0
    47d4:	00740250 	rsbseq	r0, r4, r0, asr r2
    47d8:	241c2000 	ldrcs	r2, [ip], #-0
    47dc:	23aa1000 			; <UNDEFINED> instruction: 0x23aa1000
    47e0:	011f0000 	tsteq	pc, r0
    47e4:	2c740250 	lfmcs	f0, 2, [r4], #-320	; 0xfffffec0
    47e8:	0251011f 	subseq	r0, r1, #-1073741817	; 0xc0000007
    47ec:	011f0075 	tsteq	pc, r5, ror r0	; <UNPREDICTABLE>
    47f0:	00760252 	rsbseq	r0, r6, r2, asr r2
    47f4:	01240000 			; <UNDEFINED> instruction: 0x01240000
    47f8:	00001245 	andeq	r1, r0, r5, asr #4
    47fc:	0c0a7801 	stceq	8, cr7, [sl], {1}
    4800:	0000f301 	andeq	pc, r0, r1, lsl #6
	...
    480c:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    4810:	0009ad01 	andeq	sl, r9, r1, lsl #26
    4814:	12971900 	addsne	r1, r7, #0, 18
    4818:	78010000 	stmdavc	r1, {}	; <UNPREDICTABLE>
    481c:	03de3a0a 	bicseq	r3, lr, #40960	; 0xa000
    4820:	35410000 	strbcc	r0, [r1, #-0]
    4824:	35390000 	ldrcc	r0, [r9, #-0]!
    4828:	931a0000 	tstls	sl, #0
    482c:	0100001a 	tsteq	r0, sl, lsl r0
    4830:	f3100a7a 	vpmin.u16	q0, q0, q13
    4834:	7d000000 	stcvc	0, cr0, [r0, #-0]
    4838:	7b000035 	blvc	4914 <__HEAP_SIZE+0x3914>
    483c:	1a000035 	bne	4918 <__HEAP_SIZE+0x3918>
    4840:	00001296 	muleq	r0, r6, r2
    4844:	150a7b01 	strne	r7, [sl, #-2817]	; 0xfffff4ff
    4848:	0000065c 	andeq	r0, r0, ip, asr r6
    484c:	00003599 	muleq	r0, r9, r5
    4850:	00003591 	muleq	r0, r1, r5
    4854:	0f531800 	svceq	0x00531800
    4858:	63010000 	movwvs	r0, #4096	; 0x1000
    485c:	f301130a 	vcgt.u8	d1, d1, d10
	...
    4868:	d3000000 	movwle	r0, #0
    486c:	01000035 	tsteq	r0, r5, lsr r0
    4870:	00000a09 	andeq	r0, r0, r9, lsl #20
    4874:	00129619 	andseq	r9, r2, r9, lsl r6
    4878:	0a630100 	beq	18c4c80 <__RAM_SIZE+0x17c4c80>
    487c:	00064b33 	andeq	r4, r6, r3, lsr fp
    4880:	0035fd00 	eorseq	pc, r5, r0, lsl #26
    4884:	0035f300 	eorseq	pc, r5, r0, lsl #6
    4888:	1a931a00 	bne	fe4cb090 <__StackTop+0xc63cb090>
    488c:	65010000 	strvs	r0, [r1, #-0]
    4890:	00f3100a 	rscseq	r1, r3, sl
    4894:	36440000 	strbcc	r0, [r4], -r0
    4898:	36420000 	strbcc	r0, [r2], -r0
    489c:	001d0000 	andseq	r0, sp, r0
    48a0:	8e000000 	cdphi	0, 0, cr0, cr0, cr0, {0}
    48a4:	1d000023 	stcne	0, cr0, [r0, #-140]	; 0xffffff74
    48a8:	00000000 	andeq	r0, r0, r0
    48ac:	0000239c 	muleq	r0, ip, r3
    48b0:	c7012400 	strgt	r2, [r1, -r0, lsl #8]
    48b4:	01000013 	tsteq	r0, r3, lsl r0
    48b8:	010c0a4b 	tsteq	ip, fp, asr #20
    48bc:	000000f3 	strdeq	r0, [r0], -r3
	...
    48c8:	01007d02 	tsteq	r0, r2, lsl #26
    48cc:	00000a61 	andeq	r0, r0, r1, ror #20
    48d0:	00129719 	andseq	r9, r2, r9, lsl r7
    48d4:	0a4b0100 	beq	12c4cdc <__RAM_SIZE+0x11c4cdc>
    48d8:	0003de3b 	andeq	sp, r3, fp, lsr lr
    48dc:	00365f00 	eorseq	r5, r6, r0, lsl #30
    48e0:	00365700 	eorseq	r5, r6, r0, lsl #14
    48e4:	1a932500 	bne	fe4cdcec <__StackTop+0xc63cdcec>
    48e8:	4d010000 	stcmi	0, cr0, [r1, #-0]
    48ec:	00f3100a 	rscseq	r1, r3, sl
    48f0:	1a000000 	bne	48f8 <__HEAP_SIZE+0x38f8>
    48f4:	00001296 	muleq	r0, r6, r2
    48f8:	150a4e01 	strne	r4, [sl, #-3585]	; 0xfffff1ff
    48fc:	0000065c 	andeq	r0, r0, ip, asr r6
    4900:	000036a1 	andeq	r3, r0, r1, lsr #13
    4904:	00003699 	muleq	r0, r9, r6
    4908:	0d171800 	ldceq	8, cr1, [r7, #-0]
    490c:	36010000 	strcc	r0, [r1], -r0
    4910:	f301130a 	vcgt.u8	d1, d1, d10
    4914:	6a000000 	bvs	491c <__HEAP_SIZE+0x391c>
    4918:	84100020 	ldrhi	r0, [r0], #-32	; 0xffffffe0
    491c:	db100020 	blle	4049a4 <__RAM_SIZE+0x3049a4>
    4920:	01000036 	tsteq	r0, r6, lsr r0
    4924:	00000abd 			; <UNDEFINED> instruction: 0x00000abd
    4928:	00129619 	andseq	r9, r2, r9, lsl r6
    492c:	0a360100 	beq	d84d34 <__RAM_SIZE+0xc84d34>
    4930:	00064b34 	andeq	r4, r6, r4, lsr fp
    4934:	00370500 	eorseq	r0, r7, r0, lsl #10
    4938:	0036fb00 	eorseq	pc, r6, r0, lsl #22
    493c:	1a931a00 	bne	fe4cb144 <__StackTop+0xc63cb144>
    4940:	38010000 	stmdacc	r1, {}	; <UNPREDICTABLE>
    4944:	00f3100a 	rscseq	r1, r3, sl
    4948:	374c0000 	strbcc	r0, [ip, -r0]
    494c:	374a0000 	strbcc	r0, [sl, -r0]
    4950:	721d0000 	andsvc	r0, sp, #0
    4954:	8e100020 	cdphi	0, 1, cr0, cr0, cr0, {1}
    4958:	1d000023 	stcne	0, cr0, [r0, #-140]	; 0xffffff74
    495c:	1000207c 	andne	r2, r0, ip, ror r0
    4960:	0000239c 	muleq	r0, ip, r3
    4964:	13a52600 			; <UNDEFINED> instruction: 0x13a52600
    4968:	be010000 	cdplt	0, 0, cr0, cr1, cr0, {0}
    496c:	76010d09 	strvc	r0, [r1], -r9, lsl #26
    4970:	f8100021 			; <UNDEFINED> instruction: 0xf8100021
    4974:	5f100021 	svcpl	0x00100021
    4978:	01000037 	tsteq	r0, r7, lsr r0
    497c:	00000baf 	andeq	r0, r0, pc, lsr #23
    4980:	00129619 	andseq	r9, r2, r9, lsl r6
    4984:	09be0100 	ldmibeq	lr!, {r8}
    4988:	00065c2d 	andeq	r5, r6, sp, lsr #24
    498c:	00378300 	eorseq	r8, r7, r0, lsl #6
    4990:	00377f00 	eorseq	r7, r7, r0, lsl #30
    4994:	217e1c00 	cmncs	lr, r0, lsl #24
    4998:	21be1000 			; <UNDEFINED> instruction: 0x21be1000
    499c:	0b4a1000 	bleq	12889a4 <__RAM_SIZE+0x11889a4>
    49a0:	361a0000 	ldrcc	r0, [sl], -r0
    49a4:	0100000c 	tsteq	r0, ip
    49a8:	c01009c8 	andsgt	r0, r0, r8, asr #19
    49ac:	a5000000 	strge	r0, [r0, #-0]
    49b0:	a1000037 	tstge	r0, r7, lsr r0
    49b4:	1e000037 	mcrne	0, 0, r0, cr0, cr7, {1}
    49b8:	10002192 	mulne	r0, r2, r1
    49bc:	0000237f 	andeq	r2, r0, pc, ror r3
    49c0:	00000b23 	andeq	r0, r0, r3, lsr #22
    49c4:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    49c8:	1e002c75 	mcrne	12, 0, r2, cr0, cr5, {3}
    49cc:	100021a8 	andne	r2, r0, r8, lsr #3
    49d0:	00000576 	andeq	r0, r0, r6, ror r5
    49d4:	00000b37 	andeq	r0, r0, r7, lsr fp
    49d8:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    49dc:	1d000075 	stcne	0, cr0, [r0, #-468]	; 0xfffffe2c
    49e0:	100021b0 			; <UNDEFINED> instruction: 0x100021b0
    49e4:	000023b9 			; <UNDEFINED> instruction: 0x000023b9
    49e8:	0021b61d 	eoreq	fp, r1, sp, lsl r6
    49ec:	0023b910 	eoreq	fp, r3, r0, lsl r9
    49f0:	c61c0000 	ldrgt	r0, [ip], -r0
    49f4:	f2100021 	vhadd.s16	d0, d0, d17
    49f8:	8a100021 	bhi	404a84 <__RAM_SIZE+0x304a84>
    49fc:	1a00000b 	bne	4a30 <__HEAP_SIZE+0x3a30>
    4a00:	00001415 	andeq	r1, r0, r5, lsl r4
    4a04:	100a1901 	andne	r1, sl, r1, lsl #18
    4a08:	000000c0 	andeq	r0, r0, r0, asr #1
    4a0c:	000037c7 	andeq	r3, r0, r7, asr #15
    4a10:	000037c3 	andeq	r3, r0, r3, asr #15
    4a14:	0021e21e 	eoreq	lr, r1, lr, lsl r2
    4a18:	00237f10 	eoreq	r7, r3, r0, lsl pc
    4a1c:	000b8000 	andeq	r8, fp, r0
    4a20:	50011f00 	andpl	r1, r1, r0, lsl #30
    4a24:	00107502 	andseq	r7, r0, r2, lsl #10
    4a28:	0021ea1d 	eoreq	lr, r1, sp, lsl sl
    4a2c:	0023b910 	eoreq	fp, r3, r0, lsl r9
    4a30:	7e1d0000 	cdpvc	0, 1, cr0, cr13, cr0, {0}
    4a34:	8e100021 	cdphi	0, 1, cr0, cr0, cr1, {1}
    4a38:	1d000023 	stcne	0, cr0, [r0, #-140]	; 0xffffff74
    4a3c:	100021c2 	andne	r2, r0, r2, asr #3
    4a40:	0000239c 	muleq	r0, ip, r3
    4a44:	0021c61d 	eoreq	ip, r1, sp, lsl r6
    4a48:	00238e10 	eoreq	r8, r3, r0, lsl lr
    4a4c:	21f61d00 	mvnscs	r1, r0, lsl #26
    4a50:	239c1000 	orrscs	r1, ip, #0
    4a54:	26000000 	strcs	r0, [r0], -r0
    4a58:	0000132a 	andeq	r1, r0, sl, lsr #6
    4a5c:	0d09a901 	vstreq.16	s20, [r9, #-2]	; <UNPREDICTABLE>
    4a60:	0020fa01 	eoreq	pc, r0, r1, lsl #20
    4a64:	00211e10 	eoreq	r1, r1, r0, lsl lr
    4a68:	0037e510 	eorseq	lr, r7, r0, lsl r5
    4a6c:	0bfe0100 	bleq	fff84e74 <__StackTop+0xc7e84e74>
    4a70:	96190000 	ldrls	r0, [r9], -r0
    4a74:	01000012 	tsteq	r0, r2, lsl r0
    4a78:	5c3309a9 			; <UNDEFINED> instruction: 0x5c3309a9
    4a7c:	19000006 	stmdbne	r0, {r1, r2}
    4a80:	11000038 	tstne	r0, r8, lsr r0
    4a84:	19000038 	stmdbne	r0, {r3, r4, r5}
    4a88:	00000d27 	andeq	r0, r0, r7, lsr #26
    4a8c:	3009aa01 	andcc	sl, r9, r1, lsl #20
    4a90:	000000a8 	andeq	r0, r0, r8, lsr #1
    4a94:	00003858 	andeq	r3, r0, r8, asr r8
    4a98:	00003850 	andeq	r3, r0, r0, asr r8
    4a9c:	00211a1d 	eoreq	r1, r1, sp, lsl sl
    4aa0:	0023c810 	eoreq	ip, r3, r0, lsl r8
    4aa4:	59180000 	ldmdbpl	r8, {}	; <UNPREDICTABLE>
    4aa8:	0100000e 	tsteq	r0, lr
    4aac:	01130956 	tsteq	r3, r6, asr r9
    4ab0:	000000f3 	strdeq	r0, [r0], -r3
    4ab4:	10002084 	andne	r2, r0, r4, lsl #1
    4ab8:	100020fa 	strdne	r2, [r0], -sl
    4abc:	0000388f 	andeq	r3, r0, pc, lsl #17
    4ac0:	000ca201 	andeq	sl, ip, r1, lsl #4
    4ac4:	12961900 	addsne	r1, r6, #0, 18
    4ac8:	56010000 	strpl	r0, [r1], -r0
    4acc:	065c3709 	ldrbeq	r3, [ip], -r9, lsl #14
    4ad0:	38bf0000 	ldmcc	pc!, {}	; <UNPREDICTABLE>
    4ad4:	38af0000 	stmiacc	pc!, {}	; <UNPREDICTABLE>
    4ad8:	18190000 	ldmdane	r9, {}	; <UNPREDICTABLE>
    4adc:	01000012 	tsteq	r0, r2, lsl r0
    4ae0:	b4340957 	ldrtlt	r0, [r4], #-2391	; 0xfffff6a9
    4ae4:	2f000000 	svccs	0x00000000
    4ae8:	1f000039 	svcne	0x00000039
    4aec:	19000039 	stmdbne	r0, {r0, r3, r4, r5}
    4af0:	000013fc 	strdeq	r1, [r0], -ip
    4af4:	38095801 	stmdacc	r9, {r0, fp, ip, lr}
    4af8:	000000ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    4afc:	0000399f 	muleq	r0, pc, r9	; <UNPREDICTABLE>
    4b00:	0000399b 	muleq	r0, fp, r9
    4b04:	001a931a 	andseq	r9, sl, sl, lsl r3
    4b08:	095a0100 	ldmdbeq	sl, {r8}^
    4b0c:	0000f310 	andeq	pc, r0, r0, lsl r3	; <UNPREDICTABLE>
    4b10:	0039c700 	eorseq	ip, r9, r0, lsl #14
    4b14:	0039bd00 	eorseq	fp, r9, r0, lsl #26
    4b18:	0d551a00 	vldreq	s3, [r5, #-0]
    4b1c:	5b010000 	blpl	44b24 <__HEAP_SIZE+0x43b24>
    4b20:	01041109 	tsteq	r4, r9, lsl #2
    4b24:	3a0f0000 	bcc	3c4b2c <__RAM_SIZE+0x2c4b2c>
    4b28:	3a090000 	bcc	244b30 <__RAM_SIZE+0x144b30>
    4b2c:	a21d0000 	andsge	r0, sp, #0
    4b30:	d5100020 	ldrle	r0, [r0, #-32]	; 0xffffffe0
    4b34:	1d000023 	stcne	0, cr0, [r0, #-140]	; 0xffffff74
    4b38:	100020b0 	strhne	r2, [r0], -r0
    4b3c:	000023c8 	andeq	r2, r0, r8, asr #7
    4b40:	0020cc1d 	eoreq	ip, r0, sp, lsl ip
    4b44:	0023c810 	eoreq	ip, r3, r0, lsl r8
    4b48:	30270000 	eorcc	r0, r7, r0
    4b4c:	0100000d 	tsteq	r0, sp
    4b50:	0118093d 	tsteq	r8, sp, lsr r9
    4b54:	00000104 	andeq	r0, r0, r4, lsl #2
	...
    4b60:	01007d02 	tsteq	r0, r2, lsl #26
    4b64:	00000ceb 	andeq	r0, r0, fp, ror #25
    4b68:	00129619 	andseq	r9, r2, r9, lsl r6
    4b6c:	093d0100 	ldmdbeq	sp!, {r8}
    4b70:	00065154 	andeq	r5, r6, r4, asr r1
    4b74:	003a4000 	eorseq	r4, sl, r0
    4b78:	003a3a00 	eorseq	r3, sl, r0, lsl #20
    4b7c:	10ff1a00 	rscsne	r1, pc, r0, lsl #20
    4b80:	3f010000 	svccc	0x00010000
    4b84:	01041509 	tsteq	r4, r9, lsl #10
    4b88:	3a6e0000 	bcc	1b84b90 <__RAM_SIZE+0x1a84b90>
    4b8c:	3a6c0000 	bcc	1b04b94 <__RAM_SIZE+0x1a04b94>
    4b90:	24000000 	strcs	r0, [r0], #-0
    4b94:	000fba01 	andeq	fp, pc, r1, lsl #20
    4b98:	09310100 	ldmdbeq	r1!, {r8}
    4b9c:	0104010d 	tsteq	r4, sp, lsl #2
	...
    4ba8:	7d020000 	stcvc	0, cr0, [r2, #-0]
    4bac:	0d200100 	stfeqs	f0, [r0, #-0]
    4bb0:	97190000 	ldrls	r0, [r9, -r0]
    4bb4:	01000012 	tsteq	r0, r2, lsl r0
    4bb8:	d2320931 	eorsle	r0, r2, #802816	; 0xc4000
    4bbc:	85000003 	strhi	r0, [r0, #-3]
    4bc0:	8100003a 	tsthi	r0, sl, lsr r0
    4bc4:	0000003a 	andeq	r0, r0, sl, lsr r0
    4bc8:	12000124 	andne	r0, r0, #36, 2
    4bcc:	27010000 	strcs	r0, [r1, -r0]
    4bd0:	04010d09 	streq	r0, [r1], #-3337	; 0xfffff2f7
    4bd4:	00000001 	andeq	r0, r0, r1
    4bd8:	00000000 	andeq	r0, r0, r0
    4bdc:	02000000 	andeq	r0, r0, #0
    4be0:	5501007d 	strpl	r0, [r1, #-125]	; 0xffffff83
    4be4:	1900000d 	stmdbne	r0, {r0, r2, r3}
    4be8:	00001297 	muleq	r0, r7, r2
    4bec:	34092701 	strcc	r2, [r9], #-1793	; 0xfffff8ff
    4bf0:	000003d2 	ldrdeq	r0, [r0], -r2
    4bf4:	00003aaa 	andeq	r3, r0, sl, lsr #21
    4bf8:	00003aa6 	andeq	r3, r0, r6, lsr #21
    4bfc:	88012300 	stmdahi	r1, {r8, r9, sp}
    4c00:	0100000c 	tsteq	r0, ip
    4c04:	010608ce 	smlabteq	r6, lr, r8, r0
	...
    4c10:	00003acb 	andeq	r3, r0, fp, asr #21
    4c14:	000da501 	andeq	sl, sp, r1, lsl #10
    4c18:	12971900 	addsne	r1, r7, #0, 18
    4c1c:	ce010000 	cdpgt	0, 0, cr0, cr1, cr0, {0}
    4c20:	03d22208 	bicseq	r2, r2, #8, 4	; 0x80000000
    4c24:	3af30000 	bcc	ffcc4c2c <__StackTop+0xc7bc4c2c>
    4c28:	3aeb0000 	bcc	ffac4c30 <__StackTop+0xc79c4c30>
    4c2c:	961a0000 	ldrls	r0, [sl], -r0
    4c30:	01000012 	tsteq	r0, r2, lsl r0
    4c34:	5c1508d0 	ldcpl	8, cr0, [r5], {208}	; 0xd0
    4c38:	35000006 	strcc	r0, [r0, #-6]
    4c3c:	2d00003b 	stccs	0, cr0, [r0, #-236]	; 0xffffff14
    4c40:	1d00003b 	stcne	0, cr0, [r0, #-236]	; 0xffffff14
    4c44:	00000000 	andeq	r0, r0, r0
    4c48:	000023e4 	andeq	r2, r0, r4, ror #7
    4c4c:	f5012400 			; <UNDEFINED> instruction: 0xf5012400
    4c50:	0100000e 	tsteq	r0, lr
    4c54:	010d08be 			; <UNDEFINED> instruction: 0x010d08be
    4c58:	00000104 	andeq	r0, r0, r4, lsl #2
	...
    4c64:	01007d02 	tsteq	r0, r2, lsl #26
    4c68:	00000e04 	andeq	r0, r0, r4, lsl #28
    4c6c:	00129719 	andseq	r9, r2, r9, lsl r7
    4c70:	08be0100 	ldmeq	lr!, {r8}
    4c74:	0003de40 	andeq	sp, r3, r0, asr #28
    4c78:	003b7300 	eorseq	r7, fp, r0, lsl #6
    4c7c:	003b6f00 	eorseq	r6, fp, r0, lsl #30
    4c80:	0c7f1a00 			; <UNDEFINED> instruction: 0x0c7f1a00
    4c84:	c0010000 	andgt	r0, r1, r0
    4c88:	01041108 	tsteq	r4, r8, lsl #2
    4c8c:	3b960000 	blcc	fe584c94 <__StackTop+0xc6484c94>
    4c90:	3b940000 	blcc	fe504c98 <__StackTop+0xc6404c98>
    4c94:	961a0000 	ldrls	r0, [sl], -r0
    4c98:	01000012 	tsteq	r0, r2, lsl r0
    4c9c:	5c1508c1 	ldcpl	8, cr0, [r5], {193}	; 0xc1
    4ca0:	ad000006 	stcge	0, cr0, [r0, #-24]	; 0xffffffe8
    4ca4:	a900003b 	stmdbge	r0, {r0, r1, r3, r4, r5}
    4ca8:	0000003b 	andeq	r0, r0, fp, lsr r0
    4cac:	0c1f0121 	ldfeqs	f0, [pc], {33}	; 0x21
    4cb0:	a9010000 	stmdbge	r1, {}	; <UNPREDICTABLE>
    4cb4:	04010d08 	streq	r0, [r1], #-3336	; 0xfffff2f8
    4cb8:	00000001 	andeq	r0, r0, r1
    4cbc:	00000000 	andeq	r0, r0, r0
    4cc0:	ce000000 	cdpgt	0, 0, cr0, cr0, cr0, {0}
    4cc4:	0100003b 	tsteq	r0, fp, lsr r0
    4cc8:	00000e76 	andeq	r0, r0, r6, ror lr
    4ccc:	00129719 	andseq	r9, r2, r9, lsl r7
    4cd0:	08a90100 	stmiaeq	r9!, {r8}
    4cd4:	0003de39 	andeq	sp, r3, r9, lsr lr
    4cd8:	003bf400 	eorseq	pc, fp, r0, lsl #8
    4cdc:	003bee00 	eorseq	lr, fp, r0, lsl #28
    4ce0:	0c7f1a00 			; <UNDEFINED> instruction: 0x0c7f1a00
    4ce4:	ab010000 	blge	44cec <__HEAP_SIZE+0x43cec>
    4ce8:	01041108 	tsteq	r4, r8, lsl #2
    4cec:	3c220000 	stccc	0, cr0, [r2], #-0
    4cf0:	3c200000 	stccc	0, cr0, [r0], #-0
    4cf4:	961a0000 	ldrls	r0, [sl], -r0
    4cf8:	01000012 	tsteq	r0, r2, lsl r0
    4cfc:	5c1508ac 	ldcpl	8, cr0, [r5], {172}	; 0xac
    4d00:	3b000006 	blcc	4d20 <__HEAP_SIZE+0x3d20>
    4d04:	3500003c 	strcc	r0, [r0, #-60]	; 0xffffffc4
    4d08:	1d00003c 	stcne	0, cr0, [r0, #-240]	; 0xffffff10
    4d0c:	00000000 	andeq	r0, r0, r0
    4d10:	0000238e 	andeq	r2, r0, lr, lsl #7
    4d14:	0000001d 	andeq	r0, r0, sp, lsl r0
    4d18:	00239c00 	eoreq	r9, r3, r0, lsl #24
    4d1c:	01210000 			; <UNDEFINED> instruction: 0x01210000
    4d20:	0000125e 	andeq	r1, r0, lr, asr r2
    4d24:	0d089501 	cfstr32eq	mvfx9, [r8, #-4]
    4d28:	00010401 	andeq	r0, r1, r1, lsl #8
	...
    4d34:	003c6700 	eorseq	r6, ip, r0, lsl #14
    4d38:	0ed30100 	cdpeq	1, 13, cr0, cr3, cr0, {0}
    4d3c:	97190000 	ldrls	r0, [r9, -r0]
    4d40:	01000012 	tsteq	r0, r2, lsl r0
    4d44:	de390895 	mrcle	8, 1, r0, cr9, cr5, {4}
    4d48:	8d000003 	stchi	0, cr0, [r0, #-12]
    4d4c:	8700003c 	smladxhi	r0, ip, r0, r0
    4d50:	1a00003c 	bne	4e48 <__HEAP_SIZE+0x3e48>
    4d54:	00000c7f 	andeq	r0, r0, pc, ror ip
    4d58:	11089701 	tstne	r8, r1, lsl #14
    4d5c:	00000104 	andeq	r0, r0, r4, lsl #2
    4d60:	00003cbb 			; <UNDEFINED> instruction: 0x00003cbb
    4d64:	00003cb9 			; <UNDEFINED> instruction: 0x00003cb9
    4d68:	0000001d 	andeq	r0, r0, sp, lsl r0
    4d6c:	00238e00 	eoreq	r8, r3, r0, lsl #28
    4d70:	00001d00 	andeq	r1, r0, r0, lsl #26
    4d74:	239c0000 	orrscs	r0, ip, #0
    4d78:	21000000 	mrscs	r0, (UNDEF: 0)
    4d7c:	0012ff01 	andseq	pc, r2, r1, lsl #30
    4d80:	08570100 	ldmdaeq	r7, {r8}^
    4d84:	00f3010c 	rscseq	r0, r3, ip, lsl #2
	...
    4d90:	3cce0000 	stclcc	0, cr0, [lr], {0}
    4d94:	a5010000 	strge	r0, [r1, #-0]
    4d98:	1900000f 	stmdbne	r0, {r0, r1, r2, r3}
    4d9c:	00001297 	muleq	r0, r7, r2
    4da0:	2d085701 	stccs	7, cr5, [r8, #-4]
    4da4:	000003d2 	ldrdeq	r0, [r0], -r2
    4da8:	00003cf8 	strdeq	r3, [r0], -r8
    4dac:	00003cee 	andeq	r3, r0, lr, ror #25
    4db0:	000d2719 	andeq	r2, sp, r9, lsl r7
    4db4:	08580100 	ldmdaeq	r8, {r8}^
    4db8:	0000a82c 	andeq	sl, r0, ip, lsr #16
    4dbc:	003d4100 	eorseq	r4, sp, r0, lsl #2
    4dc0:	003d3d00 	eorseq	r3, sp, r0, lsl #26
    4dc4:	1a931a00 	bne	fe4cb5cc <__StackTop+0xc63cb5cc>
    4dc8:	5a010000 	bpl	44dd0 <__HEAP_SIZE+0x43dd0>
    4dcc:	00f31008 	rscseq	r1, r3, r8
    4dd0:	3d630000 	stclcc	0, cr0, [r3, #-0]
    4dd4:	3d5f0000 	ldclcc	0, cr0, [pc, #-0]	; 4ddc <__HEAP_SIZE+0x3ddc>
    4dd8:	a01a0000 	andsge	r0, sl, r0
    4ddc:	0100000c 	tsteq	r0, ip
    4de0:	0411085b 	ldreq	r0, [r1], #-2139	; 0xfffff7a5
    4de4:	8a000001 	bhi	4df0 <__HEAP_SIZE+0x3df0>
    4de8:	8200003d 	andhi	r0, r0, #61	; 0x3d
    4dec:	1a00003d 	bne	4ee8 <__HEAP_SIZE+0x3ee8>
    4df0:	000010c4 	andeq	r1, r0, r4, asr #1
    4df4:	0e085c01 	cdpeq	12, 0, cr5, cr8, cr1, {0}
    4df8:	000004ed 	andeq	r0, r0, sp, ror #9
    4dfc:	00003dc0 	andeq	r3, r0, r0, asr #27
    4e00:	00003dbe 			; <UNDEFINED> instruction: 0x00003dbe
    4e04:	0012961a 	andseq	r9, r2, sl, lsl r6
    4e08:	085d0100 	ldmdaeq	sp, {r8}^
    4e0c:	00065c15 	andeq	r5, r6, r5, lsl ip
    4e10:	003ddd00 	eorseq	sp, sp, r0, lsl #26
    4e14:	003dd300 	eorseq	sp, sp, r0, lsl #6
    4e18:	00001d00 	andeq	r1, r0, r0, lsl #26
    4e1c:	23f20000 	mvnscs	r0, #0
    4e20:	001e0000 	andseq	r0, lr, r0
    4e24:	00000000 	andeq	r0, r0, r0
    4e28:	8e000024 	cdphi	0, 0, cr0, cr0, cr4, {1}
    4e2c:	1f00000f 	svcne	0x0000000f
    4e30:	75025001 	strvc	r5, [r2, #-1]
    4e34:	00200000 	eoreq	r0, r0, r0
    4e38:	af000000 	svcge	0x00000000
    4e3c:	1f00000b 	svcne	0x0000000b
    4e40:	74025001 	strvc	r5, [r2], #-1
    4e44:	51011f00 	tstpl	r1, r0, lsl #30
    4e48:	00007602 	andeq	r7, r0, r2, lsl #12
    4e4c:	3f012100 	svccc	0x00012100
    4e50:	0100000b 	tsteq	r0, fp
    4e54:	010c07f3 	strdeq	r0, [ip, -r3]
    4e58:	000000f3 	strdeq	r0, [r0], -r3
	...
    4e64:	00003e22 	andeq	r3, r0, r2, lsr #28
    4e68:	0010f101 	andseq	pc, r0, r1, lsl #2
    4e6c:	12971900 	addsne	r1, r7, #0, 18
    4e70:	f3010000 	vhadd.u8	d0, d1, d0
    4e74:	03d23007 	bicseq	r3, r2, #7
    4e78:	3e600000 	cdpcc	0, 6, cr0, cr0, cr0, {0}
    4e7c:	3e420000 	cdpcc	0, 4, cr0, cr2, cr0, {0}
    4e80:	27190000 	ldrcs	r0, [r9, -r0]
    4e84:	0100000d 	tsteq	r0, sp
    4e88:	a82f07f4 	stmdage	pc!, {r2, r4, r5, r6, r7, r8, r9, sl}	; <UNPREDICTABLE>
    4e8c:	26000000 	strcs	r0, [r0], -r0
    4e90:	2200003f 	andcs	r0, r0, #63	; 0x3f
    4e94:	1900003f 	stmdbne	r0, {r0, r1, r2, r3, r4, r5}
    4e98:	00000b6b 	andeq	r0, r0, fp, ror #22
    4e9c:	3507f501 	strcc	pc, [r7, #-1281]	; 0xfffffaff
    4ea0:	000010f7 	strdeq	r1, [r0], -r7
    4ea4:	00003f48 	andeq	r3, r0, r8, asr #30
    4ea8:	00003f44 	andeq	r3, r0, r4, asr #30
    4eac:	001a931a 	andseq	r9, sl, sl, lsl r3
    4eb0:	07f70100 	ldrbeq	r0, [r7, r0, lsl #2]!
    4eb4:	0000f310 	andeq	pc, r0, r0, lsl r3	; <UNPREDICTABLE>
    4eb8:	003f6800 	eorseq	r6, pc, r0, lsl #16
    4ebc:	003f6600 	eorseq	r6, pc, r0, lsl #12
    4ec0:	0ca01a00 	vstmiaeq	r0!, {s2-s1}
    4ec4:	f8010000 			; <UNDEFINED> instruction: 0xf8010000
    4ec8:	01041107 	tsteq	r4, r7, lsl #2
    4ecc:	3f830000 	svccc	0x00830000
    4ed0:	3f7b0000 	svccc	0x007b0000
    4ed4:	961a0000 	ldrls	r0, [sl], -r0
    4ed8:	01000012 	tsteq	r0, r2, lsl r0
    4edc:	5c1507f9 	ldcpl	7, cr0, [r5], {249}	; 0xf9
    4ee0:	d5000006 	strle	r0, [r0, #-6]
    4ee4:	b700003f 	smladxlt	r0, pc, r0, r0	; <UNPREDICTABLE>
    4ee8:	2800003f 	stmdacs	r0, {r0, r1, r2, r3, r4, r5}
    4eec:	00000390 	muleq	r0, r0, r3
    4ef0:	000010d7 	ldrdeq	r1, [r0], -r7
    4ef4:	000d551a 	andeq	r5, sp, sl, lsl r5
    4ef8:	08150100 	ldmdaeq	r5, {r8}
    4efc:	0001151b 	andeq	r1, r1, fp, lsl r5
    4f00:	00409d00 	subeq	r9, r0, r0, lsl #26
    4f04:	00409700 	subeq	r9, r0, r0, lsl #14
    4f08:	00002900 	andeq	r2, r0, r0, lsl #18
    4f0c:	00000000 	andeq	r0, r0, r0
    4f10:	151a0000 	ldrne	r0, [sl, #-0]
    4f14:	01000014 	tsteq	r0, r4, lsl r0
    4f18:	d11a081a 	tstle	sl, sl, lsl r8
    4f1c:	ce000000 	cdpgt	0, 0, cr0, cr0, cr0, {0}
    4f20:	c8000040 	stmdagt	r0, {r6}
    4f24:	1c000040 	stcne	0, cr0, [r0], {64}	; 0x40
	...
    4f30:	000010ab 	andeq	r1, r0, fp, lsr #1
    4f34:	0011841a 	andseq	r8, r1, sl, lsl r4
    4f38:	08440100 	stmdaeq	r4, {r8}^
    4f3c:	00011511 	andeq	r1, r1, r1, lsl r5
    4f40:	0040fd00 	subeq	pc, r0, r0, lsl #26
    4f44:	0040f900 	subeq	pc, r0, r0, lsl #18
    4f48:	00001d00 	andeq	r1, r0, r0, lsl #26
    4f4c:	23700000 	cmncs	r0, #0
    4f50:	1e000000 	cdpne	0, 0, cr0, cr0, cr0, {0}
    4f54:	00000000 	andeq	r0, r0, r0
    4f58:	00000baf 	andeq	r0, r0, pc, lsr #23
    4f5c:	000010c5 	andeq	r1, r0, r5, asr #1
    4f60:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    4f64:	011f0074 	tsteq	pc, r4, ror r0	; <UNPREDICTABLE>
    4f68:	00770251 	rsbseq	r0, r7, r1, asr r2
    4f6c:	00002000 	andeq	r2, r0, r0
    4f70:	237f0000 	cmncs	pc, #0
    4f74:	011f0000 	tsteq	pc, r0
    4f78:	10740250 	rsbsne	r0, r4, r0, asr r2
    4f7c:	1d000000 	stcne	0, cr0, [r0, #-0]
    4f80:	00000000 	andeq	r0, r0, r0
    4f84:	000023f2 	strdeq	r2, [r0], -r2	; <UNPREDICTABLE>
    4f88:	00000020 	andeq	r0, r0, r0, lsr #32
    4f8c:	00240000 	eoreq	r0, r4, r0
    4f90:	50011f00 	andpl	r1, r1, r0, lsl #30
    4f94:	00007502 	andeq	r7, r0, r2, lsl #10
    4f98:	f3040700 	vabd.u8	d0, d4, d0
    4f9c:	06000000 	streq	r0, [r0], -r0
    4fa0:	000010f1 	strdeq	r1, [r0], -r1	; <UNPREDICTABLE>
    4fa4:	0da60121 	stfeqs	f0, [r6, #132]!	; 0x84
    4fa8:	55010000 	strpl	r0, [r1, #-0]
    4fac:	f3010c07 			; <UNDEFINED> instruction: 0xf3010c07
	...
    4fb8:	1b000000 	blne	4fc0 <__HEAP_SIZE+0x3fc0>
    4fbc:	01000041 	tsteq	r0, r1, asr #32
    4fc0:	00001306 	andeq	r1, r0, r6, lsl #6
    4fc4:	00129719 	andseq	r9, r2, r9, lsl r7
    4fc8:	07550100 	ldrbeq	r0, [r5, -r0, lsl #2]
    4fcc:	0003d226 	andeq	sp, r3, r6, lsr #4
    4fd0:	00416300 	subeq	r6, r1, r0, lsl #6
    4fd4:	00415f00 	subeq	r5, r1, r0, lsl #30
    4fd8:	0d271900 			; <UNDEFINED> instruction: 0x0d271900
    4fdc:	56010000 	strpl	r0, [r1], -r0
    4fe0:	00a82507 	adceq	r2, r8, r7, lsl #10
    4fe4:	41850000 	orrmi	r0, r5, r0
    4fe8:	41810000 	orrmi	r0, r1, r0
    4fec:	5b190000 	blpl	644ff4 <__RAM_SIZE+0x544ff4>
    4ff0:	01000021 	tsteq	r0, r1, lsr #32
    4ff4:	1a230757 	bne	8c6d58 <__RAM_SIZE+0x7c6d58>
    4ff8:	a5000001 	strge	r0, [r0, #-1]
    4ffc:	a3000041 	movwge	r0, #65	; 0x41
    5000:	1a000041 	bne	510c <__HEAP_SIZE+0x410c>
    5004:	00000db1 			; <UNDEFINED> instruction: 0x00000db1
    5008:	10075901 	andne	r5, r7, r1, lsl #18
    500c:	000000f3 	strdeq	r0, [r0], -r3
    5010:	000041c2 	andeq	r4, r0, r2, asr #3
    5014:	000041b8 			; <UNDEFINED> instruction: 0x000041b8
    5018:	001cdf22 	andseq	sp, ip, r2, lsr #30
    501c:	075a0100 	ldrbeq	r0, [sl, -r0, lsl #2]
    5020:	0003c60f 	andeq	ip, r3, pc, lsl #12
    5024:	68910200 	ldmvs	r1, {r9}
    5028:	0010c41a 	andseq	ip, r0, sl, lsl r4
    502c:	075b0100 	ldrbeq	r0, [fp, -r0, lsl #2]
    5030:	0004ed0e 	andeq	lr, r4, lr, lsl #26
    5034:	00420700 	subeq	r0, r2, r0, lsl #14
    5038:	00420300 	subeq	r0, r2, r0, lsl #6
    503c:	12961a00 	addsne	r1, r6, #0, 20
    5040:	5c010000 	stcpl	0, cr0, [r1], {-0}
    5044:	065c1507 	ldrbeq	r1, [ip], -r7, lsl #10
    5048:	42290000 	eormi	r0, r9, #0
    504c:	42250000 	eormi	r0, r5, #0
    5050:	70280000 	eorvc	r0, r8, r0
    5054:	22000003 	andcs	r0, r0, #3
    5058:	1a000012 	bne	50a8 <__HEAP_SIZE+0x40a8>
    505c:	00000d55 	andeq	r0, r0, r5, asr sp
    5060:	1f077201 	svcne	0x00077201
    5064:	00000115 	andeq	r0, r0, r5, lsl r1
    5068:	0000424b 	andeq	r4, r0, fp, asr #4
    506c:	00004247 	andeq	r4, r0, r7, asr #4
    5070:	0000001e 	andeq	r0, r0, lr, lsl r0
    5074:	000baf00 	andeq	sl, fp, r0, lsl #30
    5078:	0011e200 	andseq	lr, r1, r0, lsl #4
    507c:	50011f00 	andpl	r1, r1, r0, lsl #30
    5080:	1f007402 	svcne	0x00007402
    5084:	76025101 	strvc	r5, [r2], -r1, lsl #2
    5088:	001d0000 	andseq	r0, sp, r0
    508c:	9c000000 	stcls	0, cr0, [r0], {-0}
    5090:	1e000023 	cdpne	0, 0, cr0, cr0, cr3, {1}
    5094:	00000000 	andeq	r0, r0, r0
    5098:	0000237f 	andeq	r2, r0, pc, ror r3
    509c:	000011ff 	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
    50a0:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    50a4:	1d002c74 	stcne	12, cr2, [r0, #-464]	; 0xfffffe30
    50a8:	00000000 	andeq	r0, r0, r0
    50ac:	0000240e 	andeq	r2, r0, lr, lsl #8
    50b0:	0000001d 	andeq	r0, r0, sp, lsl r0
    50b4:	00239c00 	eoreq	r9, r3, r0, lsl #24
    50b8:	00002000 	andeq	r2, r0, r0
    50bc:	241c0000 	ldrcs	r0, [ip], #-0
    50c0:	011f0000 	tsteq	pc, r0
    50c4:	68910250 	ldmvs	r1, {r4, r6, r9}
    50c8:	001e0000 	andseq	r0, lr, r0
    50cc:	bd000000 	stclt	0, cr0, [r0, #-0]
    50d0:	3600000a 	strcc	r0, [r0], -sl
    50d4:	1f000012 	svcne	0x00000012
    50d8:	74025001 	strvc	r5, [r2], #-1
    50dc:	001d0000 	andseq	r0, sp, r0
    50e0:	2b000000 	blcs	50e8 <__HEAP_SIZE+0x40e8>
    50e4:	1e000024 	cdpne	0, 0, cr0, cr0, cr4, {1}
    50e8:	00000000 	andeq	r0, r0, r0
    50ec:	00000abd 			; <UNDEFINED> instruction: 0x00000abd
    50f0:	00001253 	andeq	r1, r0, r3, asr r2
    50f4:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    50f8:	1d000074 	stcne	0, cr0, [r0, #-464]	; 0xfffffe30
    50fc:	00000000 	andeq	r0, r0, r0
    5100:	0000242b 	andeq	r2, r0, fp, lsr #8
    5104:	0000001e 	andeq	r0, r0, lr, lsl r0
    5108:	000a6100 	andeq	r6, sl, r0, lsl #2
    510c:	00127000 	andseq	r7, r2, r0
    5110:	50011f00 	andpl	r1, r1, r0, lsl #30
    5114:	00007402 	andeq	r7, r0, r2, lsl #8
    5118:	0000001d 	andeq	r0, r0, sp, lsl r0
    511c:	00238e00 	eoreq	r8, r3, r0, lsl #28
    5120:	00001d00 	andeq	r1, r0, r0, lsl #26
    5124:	239c0000 	orrscs	r0, ip, #0
    5128:	001d0000 	andseq	r0, sp, r0
    512c:	3a000000 	bcc	5134 <__HEAP_SIZE+0x4134>
    5130:	1d000024 	stcne	0, cr0, [r0, #-144]	; 0xffffff70
    5134:	00000000 	andeq	r0, r0, r0
    5138:	0000238e 	andeq	r2, r0, lr, lsl #7
    513c:	0000001d 	andeq	r0, r0, sp, lsl r0
    5140:	00239c00 	eoreq	r9, r3, r0, lsl #24
    5144:	00001e00 	andeq	r1, r0, r0, lsl #28
    5148:	24490000 	strbcs	r0, [r9], #-0
    514c:	12b70000 	adcsne	r0, r7, #0
    5150:	011f0000 	tsteq	pc, r0
    5154:	68910250 	ldmvs	r1, {r4, r6, r9}
    5158:	0251011f 	subseq	r0, r1, #-1073741817	; 0xc0000007
    515c:	1e006491 	mcrne	4, 0, r6, cr0, cr1, {4}
    5160:	00000000 	andeq	r0, r0, r0
    5164:	00000a61 	andeq	r0, r0, r1, ror #20
    5168:	000012cb 	andeq	r1, r0, fp, asr #5
    516c:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    5170:	1e000074 	mcrne	0, 0, r0, cr0, cr4, {3}
    5174:	00000000 	andeq	r0, r0, r0
    5178:	00002458 	andeq	r2, r0, r8, asr r4
    517c:	000012df 	ldrdeq	r1, [r0], -pc	; <UNPREDICTABLE>
    5180:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    5184:	1e002c74 	mcrne	12, 0, r2, cr0, cr4, {3}
    5188:	00000000 	andeq	r0, r0, r0
    518c:	00000abd 			; <UNDEFINED> instruction: 0x00000abd
    5190:	000012f3 	strdeq	r1, [r0], -r3
    5194:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    5198:	1d000074 	stcne	0, cr0, [r0, #-464]	; 0xfffffe30
    519c:	00000000 	andeq	r0, r0, r0
    51a0:	0000242b 	andeq	r2, r0, fp, lsr #8
    51a4:	0000001d 	andeq	r0, r0, sp, lsl r0
    51a8:	00240e00 	eoreq	r0, r4, r0, lsl #28
    51ac:	01210000 			; <UNDEFINED> instruction: 0x01210000
    51b0:	00000e0f 	andeq	r0, r0, pc, lsl #28
    51b4:	0c067401 	cfstrseq	mvf7, [r6], {1}
    51b8:	0000f301 	andeq	pc, r0, r1, lsl #6
	...
    51c4:	00426900 	subeq	r6, r2, r0, lsl #18
    51c8:	15570100 	ldrbne	r0, [r7, #-256]	; 0xffffff00
    51cc:	97190000 	ldrls	r0, [r9, -r0]
    51d0:	01000012 	tsteq	r0, r2, lsl r0
    51d4:	d22f0674 	eorle	r0, pc, #116, 12	; 0x7400000
    51d8:	b1000003 	tstlt	r0, r3
    51dc:	ad000042 	stcge	0, cr0, [r0, #-264]	; 0xfffffef8
    51e0:	19000042 	stmdbne	r0, {r1, r6}
    51e4:	0000215b 	andeq	r2, r0, fp, asr r1
    51e8:	2c067501 	cfstr32cs	mvfx7, [r6], {1}
    51ec:	0000011a 	andeq	r0, r0, sl, lsl r1
    51f0:	000042d1 	ldrdeq	r4, [r0], -r1
    51f4:	000042cf 	andeq	r4, r0, pc, asr #5
    51f8:	000db11a 	andeq	fp, sp, sl, lsl r1
    51fc:	06770100 	ldrbteq	r0, [r7], -r0, lsl #2
    5200:	0000f310 	andeq	pc, r0, r0, lsl r3	; <UNPREDICTABLE>
    5204:	0042ec00 	subeq	lr, r2, r0, lsl #24
    5208:	0042e400 	subeq	lr, r2, r0, lsl #8
    520c:	1cdf2200 	lfmne	f2, 2, [pc], {0}
    5210:	78010000 	stmdavc	r1, {}	; <UNPREDICTABLE>
    5214:	03c60f06 	biceq	r0, r6, #6, 30
    5218:	91020000 	mrsls	r0, (UNDEF: 2)
    521c:	12961a68 	addsne	r1, r6, #104, 20	; 0x68000
    5220:	79010000 	stmdbvc	r1, {}	; <UNPREDICTABLE>
    5224:	065c1506 	ldrbeq	r1, [ip], -r6, lsl #10
    5228:	43260000 			; <UNDEFINED> instruction: 0x43260000
    522c:	43220000 			; <UNDEFINED> instruction: 0x43220000
    5230:	5d1a0000 	ldcpl	0, cr0, [sl, #-0]
    5234:	01000011 	tsteq	r0, r1, lsl r0
    5238:	f314067c 	vmin.u16	q0, q2, q14
    523c:	4c000000 	stcmi	0, cr0, [r0], {-0}
    5240:	44000043 	strmi	r0, [r0], #-67	; 0xffffffbd
    5244:	28000043 	stmdacs	r0, {r0, r1, r6}
    5248:	00000350 	andeq	r0, r0, r0, asr r3
    524c:	00001406 	andeq	r1, r0, r6, lsl #8
    5250:	00112b1a 	andseq	r2, r1, sl, lsl fp
    5254:	06950100 	ldreq	r0, [r5], r0, lsl #2
    5258:	0001151f 	andeq	r1, r1, pc, lsl r5
    525c:	00438b00 	subeq	r8, r3, r0, lsl #22
    5260:	00438100 	subeq	r8, r3, r0, lsl #2
    5264:	00001d00 	andeq	r1, r0, r0, lsl #26
    5268:	239c0000 	orrscs	r0, ip, #0
    526c:	001d0000 	andseq	r0, sp, r0
    5270:	67000000 	strvs	r0, [r0, -r0]
    5274:	1e000024 	cdpne	0, 0, cr0, cr0, cr4, {1}
    5278:	00000000 	andeq	r0, r0, r0
    527c:	0000237f 	andeq	r2, r0, pc, ror r3
    5280:	000013e3 	andeq	r1, r0, r3, ror #7
    5284:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    5288:	1d001074 	stcne	0, cr1, [r0, #-464]	; 0xfffffe30
    528c:	00000000 	andeq	r0, r0, r0
    5290:	0000240e 	andeq	r2, r0, lr, lsl #8
    5294:	0000001d 	andeq	r0, r0, sp, lsl r0
    5298:	00239c00 	eoreq	r9, r3, r0, lsl #24
    529c:	00002000 	andeq	r2, r0, r0
    52a0:	241c0000 	ldrcs	r0, [ip], #-0
    52a4:	011f0000 	tsteq	pc, r0
    52a8:	68910250 	ldmvs	r1, {r4, r6, r9}
    52ac:	001c0000 	andseq	r0, ip, r0
    52b0:	00000000 	andeq	r0, r0, r0
    52b4:	46000000 	strmi	r0, [r0], -r0
    52b8:	1a000014 	bne	5310 <__HEAP_SIZE+0x4310>
    52bc:	00001311 	andeq	r1, r0, r1, lsl r3
    52c0:	29073001 	stmdbcs	r7, {r0, ip, sp}
    52c4:	00000104 	andeq	r0, r0, r4, lsl #2
    52c8:	000043dc 	ldrdeq	r4, [r0], -ip
    52cc:	000043d8 	ldrdeq	r4, [r0], -r8
    52d0:	0000001e 	andeq	r0, r0, lr, lsl r0
    52d4:	000ca200 	andeq	sl, ip, r0, lsl #4
    52d8:	00143c00 	andseq	r3, r4, r0, lsl #24
    52dc:	50011f00 	andpl	r1, r1, r0, lsl #30
    52e0:	00007402 	andeq	r7, r0, r2, lsl #8
    52e4:	0000001d 	andeq	r0, r0, sp, lsl r0
    52e8:	00247600 	eoreq	r7, r4, r0, lsl #12
    52ec:	001d0000 	andseq	r0, sp, r0
    52f0:	8e000000 	cdphi	0, 0, cr0, cr0, cr0, {0}
    52f4:	1d000023 	stcne	0, cr0, [r0, #-140]	; 0xffffff74
    52f8:	00000000 	andeq	r0, r0, r0
    52fc:	00002485 	andeq	r2, r0, r5, lsl #9
    5300:	0000001d 	andeq	r0, r0, sp, lsl r0
    5304:	00239c00 	eoreq	r9, r3, r0, lsl #24
    5308:	00001e00 	andeq	r1, r0, r0, lsl #28
    530c:	0abd0000 	beq	fef45314 <__StackTop+0xc6e45314>
    5310:	14750000 	ldrbtne	r0, [r5], #-0
    5314:	011f0000 	tsteq	pc, r0
    5318:	00740250 	rsbseq	r0, r4, r0, asr r2
    531c:	00001d00 	andeq	r1, r0, r0, lsl #26
    5320:	242b0000 	strtcs	r0, [fp], #-0
    5324:	001e0000 	andseq	r0, lr, r0
    5328:	bd000000 	stclt	0, cr0, [r0, #-0]
    532c:	9200000a 	andls	r0, r0, #10
    5330:	1f000014 	svcne	0x00000014
    5334:	74025001 	strvc	r5, [r2], #-1
    5338:	001d0000 	andseq	r0, sp, r0
    533c:	2b000000 	blcs	5344 <__HEAP_SIZE+0x4344>
    5340:	1e000024 	cdpne	0, 0, cr0, cr0, cr4, {1}
    5344:	00000000 	andeq	r0, r0, r0
    5348:	00000a61 	andeq	r0, r0, r1, ror #20
    534c:	000014af 	andeq	r1, r0, pc, lsr #9
    5350:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    5354:	1d000074 	stcne	0, cr0, [r0, #-464]	; 0xfffffe30
    5358:	00000000 	andeq	r0, r0, r0
    535c:	0000238e 	andeq	r2, r0, lr, lsl #7
    5360:	0000001d 	andeq	r0, r0, sp, lsl r0
    5364:	00239c00 	eoreq	r9, r3, r0, lsl #24
    5368:	00001d00 	andeq	r1, r0, r0, lsl #26
    536c:	243a0000 	ldrtcs	r0, [sl], #-0
    5370:	001d0000 	andseq	r0, sp, r0
    5374:	8e000000 	cdphi	0, 0, cr0, cr0, cr0, {0}
    5378:	1d000023 	stcne	0, cr0, [r0, #-140]	; 0xffffff74
    537c:	00000000 	andeq	r0, r0, r0
    5380:	0000239c 	muleq	r0, ip, r3
    5384:	0000001e 	andeq	r0, r0, lr, lsl r0
    5388:	00244900 	eoreq	r4, r4, r0, lsl #18
    538c:	0014f600 	andseq	pc, r4, r0, lsl #12
    5390:	50011f00 	andpl	r1, r1, r0, lsl #30
    5394:	1f689102 	svcne	0x00689102
    5398:	91025101 	tstls	r2, r1, lsl #2
    539c:	001e0064 	andseq	r0, lr, r4, rrx
    53a0:	61000000 	mrsvs	r0, (UNDEF: 0)
    53a4:	0a00000a 	beq	53d4 <__HEAP_SIZE+0x43d4>
    53a8:	1f000015 	svcne	0x00000015
    53ac:	74025001 	strvc	r5, [r2], #-1
    53b0:	001e0000 	andseq	r0, lr, r0
    53b4:	58000000 	stmdapl	r0, {}	; <UNPREDICTABLE>
    53b8:	1e000024 	cdpne	0, 0, cr0, cr0, cr4, {1}
    53bc:	1f000015 	svcne	0x00000015
    53c0:	74025001 	strvc	r5, [r2], #-1
    53c4:	001e002c 	andseq	r0, lr, ip, lsr #32
    53c8:	bd000000 	stclt	0, cr0, [r0, #-0]
    53cc:	3200000a 	andcc	r0, r0, #10
    53d0:	1f000015 	svcne	0x00000015
    53d4:	74025001 	strvc	r5, [r2], #-1
    53d8:	001d0000 	andseq	r0, sp, r0
    53dc:	2b000000 	blcs	53e4 <__HEAP_SIZE+0x43e4>
    53e0:	1d000024 	stcne	0, cr0, [r0, #-144]	; 0xffffff70
    53e4:	00000000 	andeq	r0, r0, r0
    53e8:	0000240e 	andeq	r2, r0, lr, lsl #8
    53ec:	0000001d 	andeq	r0, r0, sp, lsl r0
    53f0:	00238e00 	eoreq	r8, r3, r0, lsl #28
    53f4:	00001d00 	andeq	r1, r0, r0, lsl #26
    53f8:	239c0000 	orrscs	r0, ip, #0
    53fc:	21000000 	mrscs	r0, (UNDEF: 0)
    5400:	000b3101 	andeq	r3, fp, r1, lsl #2
    5404:	05de0100 	ldrbeq	r0, [lr, #256]	; 0x100
    5408:	00f3010c 	rscseq	r0, r3, ip, lsl #2
    540c:	22dc0000 	sbcscs	r0, ip, #0
    5410:	23cc1000 	biccs	r1, ip, #0
    5414:	43fa1000 	mvnsmi	r1, #0
    5418:	4c010000 	stcmi	0, cr0, [r1], {-0}
    541c:	19000017 	stmdbne	r0, {r0, r1, r2, r4}
    5420:	00001297 	muleq	r0, r7, r2
    5424:	2905de01 	stmdbcs	r5, {r0, r9, sl, fp, ip, lr, pc}
    5428:	000003d2 	ldrdeq	r0, [r0], -r2
    542c:	00004442 	andeq	r4, r0, r2, asr #8
    5430:	0000443e 	andeq	r4, r0, lr, lsr r4
    5434:	000d2719 	andeq	r2, sp, r9, lsl r7
    5438:	05df0100 	ldrbeq	r0, [pc, #256]	; 5540 <__HEAP_SIZE+0x4540>
    543c:	0000a828 	andeq	sl, r0, r8, lsr #16
    5440:	00446400 	subeq	r6, r4, r0, lsl #8
    5444:	00446000 	subeq	r6, r4, r0
    5448:	215b1900 	cmpcs	fp, r0, lsl #18
    544c:	e0010000 	and	r0, r1, r0
    5450:	011a2605 	tsteq	sl, r5, lsl #12
    5454:	44840000 	strmi	r0, [r4], #0
    5458:	44820000 	strmi	r0, [r2], #0
    545c:	b11a0000 	tstlt	sl, r0
    5460:	0100000d 	tsteq	r0, sp
    5464:	f31005e2 	vrshl.u16	q0, q9, q8
    5468:	9f000000 	svcls	0x00000000
    546c:	97000044 	strls	r0, [r0, -r4, asr #32]
    5470:	22000044 	andcs	r0, r0, #68	; 0x44
    5474:	00001cdf 	ldrdeq	r1, [r0], -pc	; <UNPREDICTABLE>
    5478:	0f05e301 	svceq	0x0005e301
    547c:	000003c6 	andeq	r0, r0, r6, asr #7
    5480:	1a609102 	bne	1829890 <__RAM_SIZE+0x1729890>
    5484:	00001296 	muleq	r0, r6, r2
    5488:	1505e401 	strne	lr, [r5, #-1025]	; 0xfffffbff
    548c:	0000065c 	andeq	r0, r0, ip, asr r6
    5490:	000044d9 	ldrdeq	r4, [r0], -r9
    5494:	000044d5 	ldrdeq	r4, [r0], -r5
    5498:	00033028 	andeq	r3, r3, r8, lsr #32
    549c:	00166800 	andseq	r6, r6, r0, lsl #16
    54a0:	0d551a00 	vldreq	s3, [r5, #-0]
    54a4:	fa010000 	blx	454ac <__HEAP_SIZE+0x444ac>
    54a8:	01151f05 	tsteq	r5, r5, lsl #30
    54ac:	45010000 	strmi	r0, [r1, #-0]
    54b0:	44f70000 	ldrbtmi	r0, [r7], #0
    54b4:	f21e0000 	vhadd.s16	d0, d14, d0
    54b8:	af100022 	svcge	0x00100022
    54bc:	2800000b 	stmdacs	r0, {r0, r1, r3}
    54c0:	1f000016 	svcne	0x00000016
    54c4:	74025001 	strvc	r5, [r2], #-1
    54c8:	51011f00 	tstpl	r1, r0, lsl #30
    54cc:	00007702 	andeq	r7, r0, r2, lsl #14
    54d0:	0022fe1d 	eoreq	pc, r2, sp, lsl lr	; <UNPREDICTABLE>
    54d4:	00239c10 	eoreq	r9, r3, r0, lsl ip
    54d8:	230c1e00 	movwcs	r1, #52736	; 0xce00
    54dc:	237f1000 	cmncs	pc, #0
    54e0:	16450000 	strbne	r0, [r5], -r0
    54e4:	011f0000 	tsteq	pc, r0
    54e8:	10740250 	rsbsne	r0, r4, r0, asr r2
    54ec:	23141d00 	tstcs	r4, #0, 26
    54f0:	240e1000 	strcs	r1, [lr], #-0
    54f4:	1a1d0000 	bne	7454fc <__RAM_SIZE+0x6454fc>
    54f8:	9c100023 	ldcls	0, cr0, [r0], {35}	; 0x23
    54fc:	20000023 	andcs	r0, r0, r3, lsr #32
    5500:	10002324 	andne	r2, r0, r4, lsr #6
    5504:	0000241c 	andeq	r2, r0, ip, lsl r4
    5508:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    550c:	00006091 	muleq	r0, r1, r0
    5510:	00233e1e 	eoreq	r3, r3, lr, lsl lr
    5514:	000abd10 	andeq	fp, sl, r0, lsl sp
    5518:	00167c00 	andseq	r7, r6, r0, lsl #24
    551c:	50011f00 	andpl	r1, r1, r0, lsl #30
    5520:	00007402 	andeq	r7, r0, r2, lsl #8
    5524:	0023421d 	eoreq	r4, r3, sp, lsl r2
    5528:	00242b10 	eoreq	r2, r4, r0, lsl fp
    552c:	234a1e00 	movtcs	r1, #44544	; 0xae00
    5530:	0abd1000 	beq	fef49538 <__StackTop+0xc6e49538>
    5534:	16990000 	ldrne	r0, [r9], r0
    5538:	011f0000 	tsteq	pc, r0
    553c:	00740250 	rsbseq	r0, r4, r0, asr r2
    5540:	234e1d00 	movtcs	r1, #60672	; 0xed00
    5544:	242b1000 	strtcs	r1, [fp], #-0
    5548:	541e0000 	ldrpl	r0, [lr], #-0
    554c:	61100023 	tstvs	r0, r3, lsr #32
    5550:	b600000a 	strlt	r0, [r0], -sl
    5554:	1f000016 	svcne	0x00000016
    5558:	74025001 	strvc	r5, [r2], #-1
    555c:	5c1d0000 	ldcpl	0, cr0, [sp], {-0}
    5560:	8e100023 	cdphi	0, 1, cr0, cr0, cr3, {1}
    5564:	1d000023 	stcne	0, cr0, [r0, #-140]	; 0xffffff74
    5568:	10002370 	andne	r2, r0, r0, ror r3
    556c:	0000239c 	muleq	r0, ip, r3
    5570:	0023741d 	eoreq	r7, r3, sp, lsl r4
    5574:	00243a10 	eoreq	r3, r4, r0, lsl sl
    5578:	23781d00 	cmncs	r8, #0, 26
    557c:	238e1000 	orrcs	r1, lr, #0
    5580:	941d0000 	ldrls	r0, [sp], #-0
    5584:	9c100023 	ldcls	0, cr0, [r0], {35}	; 0x23
    5588:	1e000023 	cdpne	0, 0, cr0, cr0, cr3, {1}
    558c:	1000239c 	mulne	r0, ip, r3
    5590:	00002449 	andeq	r2, r0, r9, asr #8
    5594:	000016fd 	strdeq	r1, [r0], -sp
    5598:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    559c:	011f6091 			; <UNDEFINED> instruction: 0x011f6091
    55a0:	5c910251 	lfmpl	f0, 4, [r1], {81}	; 0x51
    55a4:	23a61e00 			; <UNDEFINED> instruction: 0x23a61e00
    55a8:	0a611000 	beq	18495b0 <__RAM_SIZE+0x17495b0>
    55ac:	17110000 	ldrne	r0, [r1, -r0]
    55b0:	011f0000 	tsteq	pc, r0
    55b4:	00740250 	rsbseq	r0, r4, r0, asr r2
    55b8:	23b41e00 			; <UNDEFINED> instruction: 0x23b41e00
    55bc:	24581000 	ldrbcs	r1, [r8], #-0
    55c0:	17250000 	strne	r0, [r5, -r0]!
    55c4:	011f0000 	tsteq	pc, r0
    55c8:	2c740250 	lfmcs	f0, 2, [r4], #-320	; 0xfffffec0
    55cc:	23ba1e00 			; <UNDEFINED> instruction: 0x23ba1e00
    55d0:	0abd1000 	beq	fef495d8 <__StackTop+0xc6e495d8>
    55d4:	17390000 	ldrne	r0, [r9, -r0]!
    55d8:	011f0000 	tsteq	pc, r0
    55dc:	00740250 	rsbseq	r0, r4, r0, asr r2
    55e0:	23be1d00 			; <UNDEFINED> instruction: 0x23be1d00
    55e4:	242b1000 	strtcs	r1, [fp], #-0
    55e8:	c61d0000 	ldrgt	r0, [sp], -r0
    55ec:	0e100023 	cdpeq	0, 1, cr0, cr0, cr3, {1}
    55f0:	00000024 	andeq	r0, r0, r4, lsr #32
    55f4:	0f700121 	svceq	0x00700121
    55f8:	31010000 	mrscc	r0, (UNDEF: 1)
    55fc:	f3010c05 			; <UNDEFINED> instruction: 0xf3010c05
	...
    5608:	44000000 	strmi	r0, [r0], #-0
    560c:	01000045 	tsteq	r0, r5, asr #32
    5610:	00001879 	andeq	r1, r0, r9, ror r8
    5614:	00129719 	andseq	r9, r2, r9, lsl r7
    5618:	05310100 	ldreq	r0, [r1, #-256]!	; 0xffffff00
    561c:	0003d22d 	andeq	sp, r3, sp, lsr #4
    5620:	00458e00 	subeq	r8, r5, r0, lsl #28
    5624:	00456400 	subeq	r6, r5, r0, lsl #8
    5628:	0b6b1900 	bleq	1acba30 <__RAM_SIZE+0x19cba30>
    562c:	32010000 	andcc	r0, r1, #0
    5630:	10f73205 	rscsne	r3, r7, r5, lsl #4
    5634:	469f0000 	ldrmi	r0, [pc], r0
    5638:	469b0000 	ldrmi	r0, [fp], r0
    563c:	931a0000 	tstls	sl, #0
    5640:	0100001a 	tsteq	r0, sl, lsl r0
    5644:	f3100534 	vqrshl.u16	d0, d20, d0
    5648:	bf000000 	svclt	0x00000000
    564c:	bd000046 	stclt	0, cr0, [r0, #-280]	; 0xfffffee8
    5650:	1a000046 	bne	5770 <__HEAP_SIZE+0x4770>
    5654:	00000ca0 	andeq	r0, r0, r0, lsr #25
    5658:	11053501 	tstne	r5, r1, lsl #10
    565c:	00000104 	andeq	r0, r0, r4, lsl #2
    5660:	000046e2 	andeq	r4, r0, r2, ror #13
    5664:	000046d2 	ldrdeq	r4, [r0], -r2
    5668:	0012961a 	andseq	r9, r2, sl, lsl r6
    566c:	05360100 	ldreq	r0, [r6, #-256]!	; 0xffffff00
    5670:	00065c15 	andeq	r5, r6, r5, lsl ip
    5674:	00476c00 	subeq	r6, r7, r0, lsl #24
    5678:	00474200 	subeq	r4, r7, r0, lsl #4
    567c:	03002800 	movweq	r2, #2048	; 0x800
    5680:	185f0000 	ldmdane	pc, {}^	; <UNPREDICTABLE>
    5684:	551a0000 	ldrpl	r0, [sl, #-0]
    5688:	0100000d 	tsteq	r0, sp
    568c:	151b0560 	ldrne	r0, [fp, #-1376]	; 0xfffffaa0
    5690:	89000001 	stmdbhi	r0, {r0}
    5694:	79000048 	stmdbvc	r0, {r3, r6}
    5698:	1b000048 	blne	57c0 <__HEAP_SIZE+0x47c0>
    569c:	00000318 	andeq	r0, r0, r8, lsl r3
    56a0:	000c361a 	andeq	r3, ip, sl, lsl r6
    56a4:	05670100 	strbeq	r0, [r7, #-256]!	; 0xffffff00
    56a8:	0000d11a 	andeq	sp, r0, sl, lsl r1
    56ac:	00490d00 	subeq	r0, r9, r0, lsl #26
    56b0:	00490700 	subeq	r0, r9, r0, lsl #14
    56b4:	00001c00 	andeq	r1, r0, r0, lsl #24
    56b8:	00000000 	andeq	r0, r0, r0
    56bc:	18390000 	ldmdane	r9!, {}	; <UNPREDICTABLE>
    56c0:	841a0000 	ldrhi	r0, [sl], #-0
    56c4:	01000011 	tsteq	r0, r1, lsl r0
    56c8:	151105cb 	ldrne	r0, [r1, #-1483]	; 0xfffffa35
    56cc:	3c000001 	stccc	0, cr0, [r0], {1}
    56d0:	38000049 	stmdacc	r0, {r0, r3, r6}
    56d4:	1d000049 	stcne	0, cr0, [r0, #-292]	; 0xfffffedc
    56d8:	00000000 	andeq	r0, r0, r0
    56dc:	00002370 	andeq	r2, r0, r0, ror r3
    56e0:	00001e00 	andeq	r1, r0, r0, lsl #28
    56e4:	05760000 	ldrbeq	r0, [r6, #-0]!
    56e8:	184d0000 	stmdane	sp, {}^	; <UNPREDICTABLE>
    56ec:	011f0000 	tsteq	pc, r0
    56f0:	00740250 	rsbseq	r0, r4, r0, asr r2
    56f4:	00002000 	andeq	r2, r0, r0
    56f8:	237f0000 	cmncs	pc, #0
    56fc:	011f0000 	tsteq	pc, r0
    5700:	2c740250 	lfmcs	f0, 2, [r4], #-320	; 0xfffffec0
    5704:	1d000000 	stcne	0, cr0, [r0, #-0]
    5708:	00000000 	andeq	r0, r0, r0
    570c:	000023f2 	strdeq	r2, [r0], -r2	; <UNPREDICTABLE>
    5710:	00000020 	andeq	r0, r0, r0, lsr #32
    5714:	00240000 	eoreq	r0, r4, r0
    5718:	50011f00 	andpl	r1, r1, r0, lsl #30
    571c:	00007502 	andeq	r7, r0, r2, lsl #10
    5720:	cb012100 	blgt	4db28 <__HEAP_SIZE+0x4cb28>
    5724:	0100000b 	tsteq	r0, fp
    5728:	010c0485 	smlabbeq	ip, r5, r4, r0
    572c:	000000f3 	strdeq	r0, [r0], -r3
	...
    5738:	0000495a 	andeq	r4, r0, sl, asr r9
    573c:	0019ee01 	andseq	lr, r9, r1, lsl #28
    5740:	12971900 	addsne	r1, r7, #0, 18
    5744:	85010000 	strhi	r0, [r1, #-0]
    5748:	03d23404 	bicseq	r3, r2, #4, 8	; 0x4000000
    574c:	49a80000 	stmibmi	r8!, {}	; <UNPREDICTABLE>
    5750:	497a0000 	ldmdbmi	sl!, {}^	; <UNPREDICTABLE>
    5754:	18190000 	ldmdane	r9, {}	; <UNPREDICTABLE>
    5758:	01000012 	tsteq	r0, r2, lsl r0
    575c:	ba390486 	blt	e4697c <__RAM_SIZE+0xd4697c>
    5760:	d2000000 	andle	r0, r0, #0
    5764:	ce00004a 	cdpgt	0, 0, cr0, cr0, cr10, {2}
    5768:	1900004a 	stmdbne	r0, {r1, r3, r6}
    576c:	00000b6b 	andeq	r0, r0, fp, ror #22
    5770:	39048701 	stmdbcc	r4, {r0, r8, r9, sl, pc}
    5774:	000010f7 	strdeq	r1, [r0], -r7
    5778:	00004af4 	strdeq	r4, [r0], -r4	; <UNPREDICTABLE>
    577c:	00004af0 	strdeq	r4, [r0], -r0
    5780:	000c7119 	andeq	r7, ip, r9, lsl r1
    5784:	04880100 	streq	r0, [r8], #256	; 0x100
    5788:	0000ff37 	andeq	pc, r0, r7, lsr pc	; <UNPREDICTABLE>
    578c:	004b1600 	subeq	r1, fp, r0, lsl #12
    5790:	004b1200 	subeq	r1, fp, r0, lsl #4
    5794:	1a931a00 	bne	fe4cbf9c <__StackTop+0xc63cbf9c>
    5798:	8a010000 	bhi	457a0 <__HEAP_SIZE+0x447a0>
    579c:	00f31004 	rscseq	r1, r3, r4
    57a0:	4b360000 	blmi	d857a8 <__RAM_SIZE+0xc857a8>
    57a4:	4b340000 	blmi	d057ac <__RAM_SIZE+0xc057ac>
    57a8:	a01a0000 	andsge	r0, sl, r0
    57ac:	0100000c 	tsteq	r0, ip
    57b0:	0411048b 	ldreq	r0, [r1], #-1163	; 0xfffffb75
    57b4:	51000001 	tstpl	r0, r1
    57b8:	4900004b 	stmdbmi	r0, {r0, r1, r3, r6}
    57bc:	1a00004b 	bne	58f0 <__HEAP_SIZE+0x48f0>
    57c0:	00001296 	muleq	r0, r6, r2
    57c4:	15048c01 	strne	r8, [r4, #-3073]	; 0xfffff3ff
    57c8:	0000065c 	andeq	r0, r0, ip, asr r6
    57cc:	00004bb3 			; <UNDEFINED> instruction: 0x00004bb3
    57d0:	00004b85 	andeq	r4, r0, r5, lsl #23
    57d4:	0000001c 	andeq	r0, r0, ip, lsl r0
    57d8:	00000000 	andeq	r0, r0, r0
    57dc:	0019d400 	andseq	sp, r9, r0, lsl #8
    57e0:	0c361a00 			; <UNDEFINED> instruction: 0x0c361a00
    57e4:	b0010000 	andlt	r0, r1, r0
    57e8:	00d11a04 	sbcseq	r1, r1, r4, lsl #20
    57ec:	4cdf0000 	ldclmi	0, cr0, [pc], {0}
    57f0:	4cd90000 	ldclmi	0, cr0, [r9], {0}
    57f4:	131a0000 	tstne	sl, #0
    57f8:	0100000f 	tsteq	r0, pc
    57fc:	151f04b1 	ldrne	r0, [pc, #-1201]	; 5353 <__HEAP_SIZE+0x4353>
    5800:	0c000001 	stceq	0, cr0, [r0], {1}
    5804:	0a00004d 	beq	5940 <__HEAP_SIZE+0x4940>
    5808:	1c00004d 	stcne	0, cr0, [r0], {77}	; 0x4d
	...
    5814:	0000198f 	andeq	r1, r0, pc, lsl #19
    5818:	0011841a 	andseq	r8, r1, sl, lsl r4
    581c:	051e0100 	ldreq	r0, [lr, #-256]	; 0xffffff00
    5820:	00011511 	andeq	r1, r1, r1, lsl r5
    5824:	004d2300 	subeq	r2, sp, r0, lsl #6
    5828:	004d1f00 	subeq	r1, sp, r0, lsl #30
    582c:	00001d00 	andeq	r1, r0, r0, lsl #26
    5830:	23700000 	cmncs	r0, #0
    5834:	1e000000 	cdpne	0, 0, cr0, cr0, cr0, {0}
    5838:	00000000 	andeq	r0, r0, r0
    583c:	00000bfe 	strdeq	r0, [r0], -lr
    5840:	000019af 	andeq	r1, r0, pc, lsr #19
    5844:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    5848:	011f0074 	tsteq	pc, r4, ror r0	; <UNPREDICTABLE>
    584c:	00770251 	rsbseq	r0, r7, r1, asr r2
    5850:	0252011f 	subseq	r0, r2, #-1073741817	; 0xc0000007
    5854:	1e000075 	mcrne	0, 0, r0, cr0, cr5, {3}
    5858:	00000000 	andeq	r0, r0, r0
    585c:	00000576 	andeq	r0, r0, r6, ror r5
    5860:	000019c3 	andeq	r1, r0, r3, asr #19
    5864:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    5868:	20000074 	andcs	r0, r0, r4, ror r0
    586c:	00000000 	andeq	r0, r0, r0
    5870:	0000237f 	andeq	r2, r0, pc, ror r3
    5874:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    5878:	00002c74 	andeq	r2, r0, r4, ror ip
    587c:	0000001d 	andeq	r0, r0, sp, lsl r0
    5880:	0023f200 	eoreq	pc, r3, r0, lsl #4
    5884:	00002000 	andeq	r2, r0, r0
    5888:	24000000 	strcs	r0, [r0], #-0
    588c:	011f0000 	tsteq	pc, r0
    5890:	00760250 	rsbseq	r0, r6, r0, asr r2
    5894:	01210000 			; <UNDEFINED> instruction: 0x01210000
    5898:	00000e6c 	andeq	r0, r0, ip, ror #28
    589c:	0c03ab01 			; <UNDEFINED> instruction: 0x0c03ab01
    58a0:	0000f301 	andeq	pc, r0, r1, lsl #6
	...
    58ac:	004d4100 	subeq	r4, sp, r0, lsl #2
    58b0:	1c290100 	stfnes	f0, [r9], #-0
    58b4:	97190000 	ldrls	r0, [r9, -r0]
    58b8:	01000012 	tsteq	r0, r2, lsl r0
    58bc:	d22d03ab 	eorle	r0, sp, #-1409286142	; 0xac000002
    58c0:	89000003 	stmdbhi	r0, {r0, r1}
    58c4:	8500004d 	strhi	r0, [r0, #-77]	; 0xffffffb3
    58c8:	1900004d 	stmdbne	r0, {r0, r2, r3, r6}
    58cc:	00001218 	andeq	r1, r0, r8, lsl r2
    58d0:	3203ac01 	andcc	sl, r3, #256	; 0x100
    58d4:	000000ba 	strheq	r0, [r0], -sl
    58d8:	00004dab 	andeq	r4, r0, fp, lsr #27
    58dc:	00004da7 	andeq	r4, r0, r7, lsr #27
    58e0:	00215b19 	eoreq	r5, r1, r9, lsl fp
    58e4:	03ad0100 			; <UNDEFINED> instruction: 0x03ad0100
    58e8:	00011a2a 	andeq	r1, r1, sl, lsr #20
    58ec:	004dcb00 	subeq	ip, sp, r0, lsl #22
    58f0:	004dc900 	subeq	ip, sp, r0, lsl #18
    58f4:	0c711900 			; <UNDEFINED> instruction: 0x0c711900
    58f8:	ae010000 	cdpge	0, 0, cr0, cr1, cr0, {0}
    58fc:	00ff3003 	rscseq	r3, pc, r3
    5900:	4de20000 	stclmi	0, cr0, [r2]
    5904:	4dde0000 	ldclmi	0, cr0, [lr]
    5908:	b11a0000 	tstlt	sl, r0
    590c:	0100000d 	tsteq	r0, sp
    5910:	f31003b0 	vcge.u16	d0, d16, d16
    5914:	0a000000 	beq	591c <__HEAP_SIZE+0x491c>
    5918:	0000004e 	andeq	r0, r0, lr, asr #32
    591c:	1a00004e 	bne	5a5c <__HEAP_SIZE+0x4a5c>
    5920:	00000cd9 	ldrdeq	r0, [r0], -r9
    5924:	2903b001 	stmdbcs	r3, {r0, ip, sp, pc}
    5928:	000000f3 	strdeq	r0, [r0], -r3
    592c:	00004e51 	andeq	r4, r0, r1, asr lr
    5930:	00004e4b 	andeq	r4, r0, fp, asr #28
    5934:	001cdf22 	andseq	sp, ip, r2, lsr #30
    5938:	03b10100 			; <UNDEFINED> instruction: 0x03b10100
    593c:	0003c60f 	andeq	ip, r3, pc, lsl #12
    5940:	60910200 	addsvs	r0, r1, r0, lsl #4
    5944:	0012961a 	andseq	r9, r2, sl, lsl r6
    5948:	03b20100 			; <UNDEFINED> instruction: 0x03b20100
    594c:	00065c15 	andeq	r5, r6, r5, lsl ip
    5950:	004e7e00 	subeq	r7, lr, r0, lsl #28
    5954:	004e7a00 	subeq	r7, lr, r0, lsl #20
    5958:	02e82800 	rsceq	r2, r8, #0, 16
    595c:	1b330000 	blne	cc5964 <__RAM_SIZE+0xbc5964>
    5960:	131a0000 	tstne	sl, #0
    5964:	0100000f 	tsteq	r0, pc
    5968:	152703cd 	strne	r0, [r7, #-973]!	; 0xfffffc33
    596c:	a0000001 	andge	r0, r0, r1
    5970:	9c00004e 	stcls	0, cr0, [r0], {78}	; 0x4e
    5974:	1e00004e 	cdpne	0, 0, cr0, cr0, cr14, {2}
    5978:	00000000 	andeq	r0, r0, r0
    597c:	00000bfe 	strdeq	r0, [r0], -lr
    5980:	00001aef 	andeq	r1, r0, pc, ror #21
    5984:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    5988:	011f0074 	tsteq	pc, r4, ror r0	; <UNPREDICTABLE>
    598c:	00770251 	rsbseq	r0, r7, r1, asr r2
    5990:	0252011f 	subseq	r0, r2, #-1073741817	; 0xc0000007
    5994:	1e000075 	mcrne	0, 0, r0, cr0, cr5, {3}
    5998:	00000000 	andeq	r0, r0, r0
    599c:	00000576 	andeq	r0, r0, r6, ror r5
    59a0:	00001b03 	andeq	r1, r0, r3, lsl #22
    59a4:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    59a8:	1d000074 	stcne	0, cr0, [r0, #-464]	; 0xfffffe30
    59ac:	00000000 	andeq	r0, r0, r0
    59b0:	0000240e 	andeq	r2, r0, lr, lsl #8
    59b4:	0000001d 	andeq	r0, r0, sp, lsl r0
    59b8:	00240e00 	eoreq	r0, r4, r0, lsl #28
    59bc:	00001e00 	andeq	r1, r0, r0, lsl #28
    59c0:	237f0000 	cmncs	pc, #0
    59c4:	1b290000 	blne	a459cc <__RAM_SIZE+0x9459cc>
    59c8:	011f0000 	tsteq	pc, r0
    59cc:	2c740250 	lfmcs	f0, 2, [r4], #-320	; 0xfffffec0
    59d0:	00001d00 	andeq	r1, r0, r0, lsl #26
    59d4:	240e0000 	strcs	r0, [lr], #-0
    59d8:	1d000000 	stcne	0, cr0, [r0, #-0]
    59dc:	00000000 	andeq	r0, r0, r0
    59e0:	0000239c 	muleq	r0, ip, r3
    59e4:	0000001d 	andeq	r0, r0, sp, lsl r0
    59e8:	00239c00 	eoreq	r9, r3, r0, lsl #24
    59ec:	00001e00 	andeq	r1, r0, r0, lsl #28
    59f0:	241c0000 	ldrcs	r0, [ip], #-0
    59f4:	1b590000 	blne	16459fc <__RAM_SIZE+0x15459fc>
    59f8:	011f0000 	tsteq	pc, r0
    59fc:	60910250 	addsvs	r0, r1, r0, asr r2
    5a00:	00001e00 	andeq	r1, r0, r0, lsl #28
    5a04:	0abd0000 	beq	fef45a0c <__StackTop+0xc6e45a0c>
    5a08:	1b6d0000 	blne	1b45a10 <__RAM_SIZE+0x1a45a10>
    5a0c:	011f0000 	tsteq	pc, r0
    5a10:	00740250 	rsbseq	r0, r4, r0, asr r2
    5a14:	00001d00 	andeq	r1, r0, r0, lsl #26
    5a18:	242b0000 	strtcs	r0, [fp], #-0
    5a1c:	001d0000 	andseq	r0, sp, r0
    5a20:	8e000000 	cdphi	0, 0, cr0, cr0, cr0, {0}
    5a24:	1d000023 	stcne	0, cr0, [r0, #-140]	; 0xffffff74
    5a28:	00000000 	andeq	r0, r0, r0
    5a2c:	0000239c 	muleq	r0, ip, r3
    5a30:	0000001d 	andeq	r0, r0, sp, lsl r0
    5a34:	00243a00 	eoreq	r3, r4, r0, lsl #20
    5a38:	00001d00 	andeq	r1, r0, r0, lsl #26
    5a3c:	238e0000 	orrcs	r0, lr, #0
    5a40:	001d0000 	andseq	r0, sp, r0
    5a44:	9c000000 	stcls	0, cr0, [r0], {-0}
    5a48:	1e000023 	cdpne	0, 0, cr0, cr0, cr3, {1}
    5a4c:	00000000 	andeq	r0, r0, r0
    5a50:	00002449 	andeq	r2, r0, r9, asr #8
    5a54:	00001bbd 			; <UNDEFINED> instruction: 0x00001bbd
    5a58:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    5a5c:	011f6091 			; <UNDEFINED> instruction: 0x011f6091
    5a60:	5c910251 	lfmpl	f0, 4, [r1], {81}	; 0x51
    5a64:	00001e00 	andeq	r1, r0, r0, lsl #28
    5a68:	09ad0000 	stmibeq	sp!, {}	; <UNPREDICTABLE>
    5a6c:	1bd10000 	blne	ff445a74 <__StackTop+0xc7345a74>
    5a70:	011f0000 	tsteq	pc, r0
    5a74:	00740250 	rsbseq	r0, r4, r0, asr r2
    5a78:	00001e00 	andeq	r1, r0, r0, lsl #28
    5a7c:	24580000 	ldrbcs	r0, [r8], #-0
    5a80:	1be50000 	blne	ff945a88 <__StackTop+0xc7845a88>
    5a84:	011f0000 	tsteq	pc, r0
    5a88:	10740250 	rsbsne	r0, r4, r0, asr r2
    5a8c:	00001e00 	andeq	r1, r0, r0, lsl #28
    5a90:	0abd0000 	beq	fef45a98 <__StackTop+0xc6e45a98>
    5a94:	1bf90000 	blne	ffe45a9c <__StackTop+0xc7d45a9c>
    5a98:	011f0000 	tsteq	pc, r0
    5a9c:	00740250 	rsbseq	r0, r4, r0, asr r2
    5aa0:	00001d00 	andeq	r1, r0, r0, lsl #26
    5aa4:	242b0000 	strtcs	r0, [fp], #-0
    5aa8:	001d0000 	andseq	r0, sp, r0
    5aac:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
    5ab0:	1e000024 	cdpne	0, 0, cr0, cr0, cr4, {1}
    5ab4:	00000000 	andeq	r0, r0, r0
    5ab8:	00000abd 			; <UNDEFINED> instruction: 0x00000abd
    5abc:	00001c1f 	andeq	r1, r0, pc, lsl ip
    5ac0:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    5ac4:	1d000074 	stcne	0, cr0, [r0, #-464]	; 0xfffffe30
    5ac8:	00000000 	andeq	r0, r0, r0
    5acc:	0000242b 	andeq	r2, r0, fp, lsr #8
    5ad0:	64012100 	strvs	r2, [r1], #-256	; 0xffffff00
    5ad4:	01000014 	tsteq	r0, r4, lsl r0
    5ad8:	01130386 	tsteq	r3, r6, lsl #7
    5adc:	000003d2 	ldrdeq	r0, [r0], -r2
	...
    5ae8:	00004ebe 			; <UNDEFINED> instruction: 0x00004ebe
    5aec:	001ca401 	andseq	sl, ip, r1, lsl #8
    5af0:	10821900 	addne	r1, r2, r0, lsl #18
    5af4:	86010000 	strhi	r0, [r1], -r0
    5af8:	01154403 	tsteq	r5, r3, lsl #8
    5afc:	4f020000 	svcmi	0x00020000
    5b00:	4ef60000 	cdpmi	0, 15, cr0, cr6, cr0, {0}
    5b04:	de190000 	cdple	0, 1, cr0, cr9, cr0, {0}
    5b08:	0100000d 	tsteq	r0, sp
    5b0c:	15440387 	strbne	r0, [r4, #-903]	; 0xfffffc79
    5b10:	5d000001 	stcpl	0, cr0, [r0, #-4]
    5b14:	5500004f 	strpl	r0, [r0, #-79]	; 0xffffffb1
    5b18:	1a00004f 	bne	5c5c <__HEAP_SIZE+0x4c5c>
    5b1c:	00000dbf 			; <UNDEFINED> instruction: 0x00000dbf
    5b20:	17038901 	strne	r8, [r3, -r1, lsl #18]
    5b24:	000003d2 	ldrdeq	r0, [r0], -r2
    5b28:	00004f97 	muleq	r0, r7, pc	; <UNPREDICTABLE>
    5b2c:	00004f91 	muleq	r0, r1, pc	; <UNPREDICTABLE>
    5b30:	00000020 	andeq	r0, r0, r0, lsr #32
    5b34:	00207e00 	eoreq	r7, r0, r0, lsl #28
    5b38:	50011f00 	andpl	r1, r1, r0, lsl #30
    5b3c:	5001f303 	andpl	pc, r1, r3, lsl #6
    5b40:	0151011f 	cmpeq	r1, pc, lsl r1
    5b44:	52011f30 	andpl	r1, r1, #48, 30	; 0xc0
    5b48:	00003201 	andeq	r3, r0, r1, lsl #4
    5b4c:	10db0121 	sbcsne	r0, fp, r1, lsr #2
    5b50:	5e010000 	cdppl	0, 0, cr0, cr1, cr0, {0}
    5b54:	d2011303 	andle	r1, r1, #201326592	; 0xc000000
    5b58:	00000003 	andeq	r0, r0, r3
    5b5c:	00000000 	andeq	r0, r0, r0
    5b60:	c2000000 	andgt	r0, r0, #0
    5b64:	0100004f 	tsteq	r0, pc, asr #32
    5b68:	00001d41 	andeq	r1, r0, r1, asr #26
    5b6c:	00108219 	andseq	r8, r0, r9, lsl r2
    5b70:	035e0100 	cmpeq	lr, #0, 2
    5b74:	0001154a 	andeq	r1, r1, sl, asr #10
    5b78:	00501e00 	subseq	r1, r0, r0, lsl #28
    5b7c:	00501200 	subseq	r1, r0, r0, lsl #4
    5b80:	0dde1900 	vldreq.16	s3, [lr]	; <UNPREDICTABLE>
    5b84:	5f010000 	svcpl	0x00010000
    5b88:	01154a03 	tsteq	r5, r3, lsl #20
    5b8c:	50790000 	rsbspl	r0, r9, r0
    5b90:	50710000 	rsbspl	r0, r1, r0
    5b94:	d1190000 	tstle	r9, r0
    5b98:	0100000f 	tsteq	r0, pc
    5b9c:	41480360 	cmpmi	r8, r0, ror #6
    5ba0:	b700001d 	smladlt	r0, sp, r0, r0
    5ba4:	ad000050 	stcge	0, cr0, [r0, #-320]	; 0xfffffec0
    5ba8:	1a000050 	bne	5cf0 <__HEAP_SIZE+0x4cf0>
    5bac:	00000dbf 			; <UNDEFINED> instruction: 0x00000dbf
    5bb0:	17036201 	strne	r6, [r3, -r1, lsl #4]
    5bb4:	000003d2 	ldrdeq	r0, [r0], -r2
    5bb8:	00005102 	andeq	r5, r0, r2, lsl #2
    5bbc:	000050fc 	strdeq	r5, [r0], -ip
    5bc0:	00000020 	andeq	r0, r0, r0, lsr #32
    5bc4:	0021e900 	eoreq	lr, r1, r0, lsl #18
    5bc8:	50011f00 	andpl	r1, r1, r0, lsl #30
    5bcc:	5001f303 	andpl	pc, r1, r3, lsl #6
    5bd0:	0151011f 	cmpeq	r1, pc, lsl r1
    5bd4:	52011f30 	andpl	r1, r1, #48, 30	; 0xc0
    5bd8:	011f3001 	tsteq	pc, r1
    5bdc:	01f30353 	mvnseq	r0, r3, asr r3
    5be0:	7d021f52 	stcvc	15, cr1, [r2, #-328]	; 0xfffffeb8
    5be4:	00320100 	eorseq	r0, r2, r0, lsl #2
    5be8:	ab040700 	blge	1077f0 <__RAM_SIZE+0x77f0>
    5bec:	21000002 	tstcs	r0, r2
    5bf0:	000b9701 	andeq	r9, fp, r1, lsl #14
    5bf4:	032f0100 			; <UNDEFINED> instruction: 0x032f0100
    5bf8:	00f30110 	rscseq	r0, r3, r0, lsl r1
	...
    5c04:	512d0000 			; <UNDEFINED> instruction: 0x512d0000
    5c08:	db010000 	blle	45c10 <__HEAP_SIZE+0x44c10>
    5c0c:	1900001d 	stmdbne	r0, {r0, r2, r3, r4}
    5c10:	00000b86 	andeq	r0, r0, r6, lsl #23
    5c14:	38032f01 	stmdacc	r3, {r0, r8, r9, sl, fp, sp}
    5c18:	000003d2 	ldrdeq	r0, [r0], -r2
    5c1c:	00005151 	andeq	r5, r0, r1, asr r1
    5c20:	0000514d 	andeq	r5, r0, sp, asr #2
    5c24:	00215b19 	eoreq	r5, r1, r9, lsl fp
    5c28:	03300100 	teqeq	r0, #0, 2
    5c2c:	00011a35 	andeq	r1, r1, r5, lsr sl
    5c30:	00517300 	subseq	r7, r1, r0, lsl #6
    5c34:	00516f00 	subseq	r6, r1, r0, lsl #30
    5c38:	1a931a00 	bne	fe4cc440 <__StackTop+0xc63cc440>
    5c3c:	32010000 	andcc	r0, r1, #0
    5c40:	00f31403 	rscseq	r1, r3, r3, lsl #8
    5c44:	51950000 	orrspl	r0, r5, r0
    5c48:	51910000 	orrspl	r0, r1, r0
    5c4c:	851a0000 	ldrhi	r0, [sl, #-0]
    5c50:	0100000b 	tsteq	r0, fp
    5c54:	5c190333 	ldcpl	3, cr0, [r9], {51}	; 0x33
    5c58:	b8000006 	stmdalt	r0, {r1, r2}
    5c5c:	b4000051 	strlt	r0, [r0], #-81	; 0xffffffaf
    5c60:	1d000051 	stcne	0, cr0, [r0, #-324]	; 0xfffffebc
    5c64:	00000000 	andeq	r0, r0, r0
    5c68:	00002494 	muleq	r0, r4, r4
    5c6c:	00000020 	andeq	r0, r0, r0, lsr #32
    5c70:	00130600 	andseq	r0, r3, r0, lsl #12
    5c74:	50011f00 	andpl	r1, r1, r0, lsl #30
    5c78:	1f007402 	svcne	0x00007402
    5c7c:	75025101 	strvc	r5, [r2, #-257]	; 0xfffffeff
    5c80:	21000000 	mrscs	r0, (UNDEF: 0)
    5c84:	00138c01 	andseq	r8, r3, r1, lsl #24
    5c88:	02f40100 	rscseq	r0, r4, #0, 2
    5c8c:	00f30110 	rscseq	r0, r3, r0, lsl r1
	...
    5c98:	51d60000 	bicspl	r0, r6, r0
    5c9c:	54010000 	strpl	r0, [r1], #-0
    5ca0:	1900001e 	stmdbne	r0, {r1, r2, r3, r4}
    5ca4:	00000b86 	andeq	r0, r0, r6, lsl #23
    5ca8:	3802f401 	stmdacc	r2, {r0, sl, ip, sp, lr, pc}
    5cac:	000003d2 	ldrdeq	r0, [r0], -r2
    5cb0:	000051fa 	strdeq	r5, [r0], -sl
    5cb4:	000051f6 	strdeq	r5, [r0], -r6
    5cb8:	001a931a 	andseq	r9, sl, sl, lsl r3
    5cbc:	02f60100 	rscseq	r0, r6, #0, 2
    5cc0:	0000f314 	andeq	pc, r0, r4, lsl r3	; <UNPREDICTABLE>
    5cc4:	00521a00 	subseq	r1, r2, r0, lsl #20
    5cc8:	00521800 	subseq	r1, r2, r0, lsl #16
    5ccc:	0b851a00 	bleq	fe14c4d4 <__StackTop+0xc604c4d4>
    5cd0:	f7010000 			; <UNDEFINED> instruction: 0xf7010000
    5cd4:	065c1902 	ldrbeq	r1, [ip], -r2, lsl #18
    5cd8:	52320000 	eorspl	r0, r2, #0
    5cdc:	522e0000 	eorpl	r0, lr, #0
    5ce0:	001d0000 	andseq	r0, sp, r0
    5ce4:	94000000 	strls	r0, [r0], #-0
    5ce8:	20000024 	andcs	r0, r0, r4, lsr #32
    5cec:	00000000 	andeq	r0, r0, r0
    5cf0:	000019ee 	andeq	r1, r0, lr, ror #19
    5cf4:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    5cf8:	00000074 	andeq	r0, r0, r4, ror r0
    5cfc:	0fdf0121 	svceq	0x00df0121
    5d00:	98010000 	stmdals	r1, {}	; <UNPREDICTABLE>
    5d04:	d2011302 	andle	r1, r1, #134217728	; 0x8000000
    5d08:	00000003 	andeq	r0, r0, r3
    5d0c:	00000000 	andeq	r0, r0, r0
    5d10:	50000000 	andpl	r0, r0, r0
    5d14:	01000052 	qaddeq	r0, r2, r0
    5d18:	00001f04 	andeq	r1, r0, r4, lsl #30
    5d1c:	00111f19 	andseq	r1, r1, r9, lsl pc
    5d20:	02980100 	addseq	r0, r8, #0, 2
    5d24:	0000e23a 	andeq	lr, r0, sl, lsr r2
    5d28:	00528c00 	subseq	r8, r2, r0, lsl #24
    5d2c:	00528800 	subseq	r8, r2, r0, lsl #16
    5d30:	0fd11900 	svceq	0x00d11900
    5d34:	99010000 	stmdbls	r1, {}	; <UNPREDICTABLE>
    5d38:	1d413c02 	stclne	12, cr3, [r1, #-8]
    5d3c:	52b30000 	adcspl	r0, r3, #0
    5d40:	52ad0000 	adcpl	r0, sp, #0
    5d44:	e91a0000 	ldmdb	sl, {}	; <UNPREDICTABLE>
    5d48:	0100000c 	tsteq	r0, ip
    5d4c:	d217029b 	andsle	r0, r7, #-1342177271	; 0xb0000009
    5d50:	e3000003 	movw	r0, #3
    5d54:	df000052 	svcle	0x00000052
    5d58:	25000052 	strcs	r0, [r0, #-82]	; 0xffffffae
    5d5c:	00000f45 	andeq	r0, r0, r5, asr #30
    5d60:	1b029c01 	blne	acd6c <__HEAP_SIZE+0xabd6c>
    5d64:	00000115 	andeq	r0, r0, r5, lsl r1
    5d68:	0ccd2501 	cfstr64eq	mvdx2, [sp], {1}
    5d6c:	9c010000 	stcls	0, cr0, [r1], {-0}
    5d70:	01153e02 	tsteq	r5, r2, lsl #28
    5d74:	1e000000 	cdpne	0, 0, cr0, cr0, cr0, {0}
    5d78:	00000000 	andeq	r0, r0, r0
    5d7c:	000021e9 	andeq	r2, r0, r9, ror #3
    5d80:	00001ef3 	strdeq	r1, [r0], -r3
    5d84:	0150011f 	cmpeq	r0, pc, lsl r1
    5d88:	51011f31 	tstpl	r1, r1, lsr pc
    5d8c:	011f3001 	tsteq	pc, r1
    5d90:	1f300152 	svcne	0x00300152
    5d94:	f3035301 	vcgt.u8	d5, d3, d1
    5d98:	20005101 	andcs	r5, r0, r1, lsl #2
    5d9c:	00000000 	andeq	r0, r0, r0
    5da0:	00001f93 	muleq	r0, r3, pc	; <UNPREDICTABLE>
    5da4:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    5da8:	00000074 	andeq	r0, r0, r4, ror r0
    5dac:	101e0121 	andsne	r0, lr, r1, lsr #2
    5db0:	84010000 	strhi	r0, [r1], #-0
    5db4:	d2011302 	andle	r1, r1, #134217728	; 0x8000000
    5db8:	00000003 	andeq	r0, r0, r3
    5dbc:	00000000 	andeq	r0, r0, r0
    5dc0:	01000000 	mrseq	r0, (UNDEF: 0)
    5dc4:	01000053 	qaddeq	r0, r3, r0
    5dc8:	00001f93 	muleq	r0, r3, pc	; <UNPREDICTABLE>
    5dcc:	00111f19 	andseq	r1, r1, r9, lsl pc
    5dd0:	02840100 	addeq	r0, r4, #0, 2
    5dd4:	0000e234 	andeq	lr, r0, r4, lsr r2
    5dd8:	00532500 	subseq	r2, r3, r0, lsl #10
    5ddc:	00532100 	subseq	r2, r3, r0, lsl #2
    5de0:	0ce91a00 	vstmiaeq	r9!, {s3-s2}
    5de4:	86010000 	strhi	r0, [r1], -r0
    5de8:	03d21702 	bicseq	r1, r2, #524288	; 0x80000
    5dec:	534a0000 	movtpl	r0, #40960	; 0xa000
    5df0:	53460000 	movtpl	r0, #24576	; 0x6000
    5df4:	45250000 	strmi	r0, [r5, #-0]!
    5df8:	0100000f 	tsteq	r0, pc
    5dfc:	151b0287 	ldrne	r0, [fp, #-647]	; 0xfffffd79
    5e00:	01000001 	tsteq	r0, r1
    5e04:	000ccd25 	andeq	ip, ip, r5, lsr #26
    5e08:	02870100 	addeq	r0, r7, #0, 2
    5e0c:	0001153e 	andeq	r1, r1, lr, lsr r5
    5e10:	001e0000 	andseq	r0, lr, r0
    5e14:	7e000000 	cdpvc	0, 0, cr0, cr0, cr0, {0}
    5e18:	82000020 	andhi	r0, r0, #32
    5e1c:	1f00001f 	svcne	0x0000001f
    5e20:	31015001 	tstcc	r1, r1
    5e24:	0151011f 	cmpeq	r1, pc, lsl r1
    5e28:	00200030 	eoreq	r0, r0, r0, lsr r0
    5e2c:	93000000 	movwls	r0, #0
    5e30:	1f00001f 	svcne	0x0000001f
    5e34:	74025001 	strvc	r5, [r2], #-1
    5e38:	26000000 	strcs	r0, [r0], -r0
    5e3c:	0000103d 	andeq	r1, r0, sp, lsr r0
    5e40:	11026601 	tstne	r2, r1, lsl #12
    5e44:	00000001 	andeq	r0, r0, r1
    5e48:	00000000 	andeq	r0, r0, r0
    5e4c:	00536800 	subseq	r6, r3, r0, lsl #16
    5e50:	1fe40100 	svcne	0x00e40100
    5e54:	e8190000 	ldmda	r9, {}	; <UNPREDICTABLE>
    5e58:	0100000c 	tsteq	r0, ip
    5e5c:	562f0266 	strtpl	r0, [pc], -r6, ror #4
    5e60:	9a000006 	bls	5e80 <__HEAP_SIZE+0x4e80>
    5e64:	94000053 	strls	r0, [r0], #-83	; 0xffffffad
    5e68:	20000053 	andcs	r0, r0, r3, asr r0
    5e6c:	00000000 	andeq	r0, r0, r0
    5e70:	000019ee 	andeq	r1, r0, lr, ror #19
    5e74:	0350011f 	cmpeq	r0, #-1073741817	; 0xc0000007
    5e78:	1f5001f3 	svcne	0x005001f3
    5e7c:	30015101 	andcc	r5, r1, r1, lsl #2
    5e80:	0152011f 	cmpeq	r2, pc, lsl r1
    5e84:	53011f30 	movwpl	r1, #7984	; 0x1f30
    5e88:	00003001 	andeq	r3, r0, r1
    5e8c:	000cb726 	andeq	fp, ip, r6, lsr #14
    5e90:	02360100 	eorseq	r0, r6, #0, 2
    5e94:	227e010d 	rsbscs	r0, lr, #1073741827	; 0x40000003
    5e98:	229e1000 	addscs	r1, lr, #0
    5e9c:	53c61000 	bicpl	r1, r6, #0
    5ea0:	7e010000 	cdpvc	0, 0, cr0, cr1, cr0, {0}
    5ea4:	19000020 	stmdbne	r0, {r5}
    5ea8:	0000114f 	andeq	r1, r0, pc, asr #2
    5eac:	36023601 	strcc	r3, [r2], -r1, lsl #12
    5eb0:	00000115 	andeq	r0, r0, r5, lsl r1
    5eb4:	000053ee 	andeq	r5, r0, lr, ror #7
    5eb8:	000053e6 	andeq	r5, r0, r6, ror #7
    5ebc:	000eea19 	andeq	lr, lr, r9, lsl sl
    5ec0:	02370100 	eorseq	r0, r7, #0, 2
    5ec4:	00011536 	andeq	r1, r1, r6, lsr r5
    5ec8:	00542f00 	subseq	r2, r4, r0, lsl #30
    5ecc:	00542700 	subseq	r2, r4, r0, lsl #14
    5ed0:	0dee1900 			; <UNDEFINED> instruction: 0x0dee1900
    5ed4:	38010000 	stmdacc	r1, {}	; <UNPREDICTABLE>
    5ed8:	012b2e02 			; <UNDEFINED> instruction: 0x012b2e02
    5edc:	546c0000 	strbtpl	r0, [ip], #-0
    5ee0:	54660000 	strbtpl	r0, [r6], #-0
    5ee4:	1f190000 	svcne	0x00190000
    5ee8:	01000011 	tsteq	r0, r1, lsl r0
    5eec:	e2320239 	eors	r0, r2, #-1879048189	; 0x90000003
    5ef0:	9c000000 	stcls	0, cr0, [r0], {-0}
    5ef4:	98000054 	stmdals	r0, {r2, r4, r6}
    5ef8:	19000054 	stmdbne	r0, {r2, r4, r6}
    5efc:	00000ce8 	andeq	r0, r0, r8, ror #25
    5f00:	2e023a01 	vmlacs.f32	s6, s4, s2
    5f04:	00000656 	andeq	r0, r0, r6, asr r6
    5f08:	000054c1 	andeq	r5, r0, r1, asr #9
    5f0c:	000054bd 			; <UNDEFINED> instruction: 0x000054bd
    5f10:	00229420 	eoreq	r9, r2, r0, lsr #8
    5f14:	0022a810 	eoreq	sl, r2, r0, lsl r8
    5f18:	50011f00 	andpl	r1, r1, r0, lsl #30
    5f1c:	1f007402 	svcne	0x00007402
    5f20:	31015101 	tstcc	r1, r1, lsl #2
    5f24:	01210000 			; <UNDEFINED> instruction: 0x01210000
    5f28:	0000100a 	andeq	r1, r0, sl
    5f2c:	1301f601 	movwne	pc, #5633	; 0x1601	; <UNPREDICTABLE>
    5f30:	0003d201 	andeq	sp, r3, r1, lsl #4
	...
    5f3c:	0054e100 	subseq	lr, r4, r0, lsl #2
    5f40:	21600100 	cmncs	r0, r0, lsl #2
    5f44:	4f190000 	svcmi	0x00190000
    5f48:	01000011 	tsteq	r0, r1, lsl r0
    5f4c:	153a01f6 	ldrne	r0, [sl, #-502]!	; 0xfffffe0a
    5f50:	31000001 	tstcc	r0, r1
    5f54:	25000055 	strcs	r0, [r0, #-85]	; 0xffffffab
    5f58:	19000055 	stmdbne	r0, {r0, r2, r4, r6}
    5f5c:	00000eea 	andeq	r0, r0, sl, ror #29
    5f60:	3a01f701 	bcc	83b6c <__HEAP_SIZE+0x82b6c>
    5f64:	00000115 	andeq	r0, r0, r5, lsl r1
    5f68:	00005588 	andeq	r5, r0, r8, lsl #11
    5f6c:	0000557e 	andeq	r5, r0, lr, ror r5
    5f70:	00111f19 	andseq	r1, r1, r9, lsl pc
    5f74:	01f80100 	mvnseq	r0, r0, lsl #2
    5f78:	0000e236 	andeq	lr, r0, r6, lsr r2
    5f7c:	0055d200 	subseq	sp, r5, r0, lsl #4
    5f80:	0055ca00 	subseq	ip, r5, r0, lsl #20
    5f84:	0ce81a00 	vstmiaeq	r8!, {s3-s2}
    5f88:	fa010000 	blx	45f90 <__HEAP_SIZE+0x44f90>
    5f8c:	06561301 	ldrbeq	r1, [r6], -r1, lsl #6
    5f90:	56160000 	ldrpl	r0, [r6], -r0
    5f94:	560c0000 	strpl	r0, [ip], -r0
    5f98:	df1a0000 	svcle	0x001a0000
    5f9c:	01000011 	tsteq	r0, r1, lsl r0
    5fa0:	291001fb 	ldmdbcs	r0, {r0, r1, r3, r4, r5, r6, r7, r8}
    5fa4:	5e000000 	cdppl	0, 0, cr0, cr0, cr0, {0}
    5fa8:	58000056 	stmdapl	r0, {r1, r2, r4, r6}
    5fac:	1a000056 	bne	610c <__HEAP_SIZE+0x510c>
    5fb0:	00000dee 	andeq	r0, r0, lr, ror #27
    5fb4:	1301fc01 	movwne	pc, #7169	; 0x1c01	; <UNPREDICTABLE>
    5fb8:	0000012b 	andeq	r0, r0, fp, lsr #2
    5fbc:	00005697 	muleq	r0, r7, r6
    5fc0:	0000568f 	andeq	r5, r0, pc, lsl #13
    5fc4:	0000001e 	andeq	r0, r0, lr, lsl r0
    5fc8:	0024a300 	eoreq	sl, r4, r0, lsl #6
    5fcc:	00213500 	eoreq	r3, r1, r0, lsl #10
    5fd0:	50011f00 	andpl	r1, r1, r0, lsl #30
    5fd4:	76007407 	strvc	r7, [r0], -r7, lsl #8
    5fd8:	5c231e00 	stcpl	14, cr1, [r3], #-0
    5fdc:	00002000 	andeq	r2, r0, r0
    5fe0:	1fe40000 	svcne	0x00e40000
    5fe4:	011f0000 	tsteq	pc, r0
    5fe8:	00760250 	rsbseq	r0, r6, r0, asr r2
    5fec:	0251011f 	subseq	r0, r1, #-1073741817	; 0xc0000007
    5ff0:	011f0074 	tsteq	pc, r4, ror r0	; <UNPREDICTABLE>
    5ff4:	dc750352 	ldclle	3, cr0, [r5], #-328	; 0xfffffeb8
    5ff8:	53011f00 	movwpl	r1, #7936	; 0x1f00
    5ffc:	1f007702 	svcne	0x00007702
    6000:	02007d02 	andeq	r7, r0, #2, 26	; 0x80
    6004:	00000075 	andeq	r0, r0, r5, ror r0
    6008:	0b130124 	bleq	4c64a0 <__RAM_SIZE+0x3c64a0>
    600c:	be010000 	cdplt	0, 0, cr0, cr1, cr0, {0}
    6010:	f3011001 	vhadd.u8	d1, d1, d1
	...
    601c:	02000000 	andeq	r0, r0, #0
    6020:	dd01007d 	stcle	0, cr0, [r1, #-500]	; 0xfffffe0c
    6024:	19000021 	stmdbne	r0, {r0, r5}
    6028:	00001297 	muleq	r0, r7, r2
    602c:	3d01be01 	stccc	14, cr11, [r1, #-4]
    6030:	000003d2 	ldrdeq	r0, [r0], -r2
    6034:	000056d9 	ldrdeq	r5, [r0], -r9
    6038:	000056d1 	ldrdeq	r5, [r0], -r1
    603c:	000ded2a 	andeq	lr, sp, sl, lsr #26
    6040:	01bf0100 			; <UNDEFINED> instruction: 0x01bf0100
    6044:	0021dd3a 	eoreq	sp, r1, sl, lsr sp
    6048:	2a510100 	bcs	1446450 <__RAM_SIZE+0x1346450>
    604c:	00000fd0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    6050:	4001c001 	andmi	ip, r1, r1
    6054:	000021e3 	andeq	r2, r0, r3, ror #3
    6058:	931a5201 	tstls	sl, #268435456	; 0x10000000
    605c:	0100001a 	tsteq	r0, sl, lsl r0
    6060:	f31401c2 	vrhadd.u16	q0, q10, q1
    6064:	15000000 	strne	r0, [r0, #-0]
    6068:	11000057 	qaddne	r0, r7, r0
    606c:	1a000057 	bne	61d0 <__HEAP_SIZE+0x51d0>
    6070:	00001296 	muleq	r0, r6, r2
    6074:	1901c301 	stmdbne	r1, {r0, r8, r9, lr, pc}
    6078:	0000065c 	andeq	r0, r0, ip, asr r6
    607c:	0000573d 	andeq	r5, r0, sp, lsr r7
    6080:	00005735 	andeq	r5, r0, r5, lsr r7
    6084:	2b040700 	blcs	107c8c <__RAM_SIZE+0x7c8c>
    6088:	07000001 	streq	r0, [r0, -r1]
    608c:	001d4104 	andseq	r4, sp, r4, lsl #2
    6090:	7c012100 	stfvcs	f2, [r1], {-0}
    6094:	01000012 	tsteq	r0, r2, lsl r0
    6098:	01130178 	tsteq	r3, r8, ror r1
    609c:	000003d2 	ldrdeq	r0, [r0], -r2
    60a0:	1000229e 	mulne	r0, lr, r2
    60a4:	100022dc 	ldrdne	r2, [r0], -ip
    60a8:	00005775 	andeq	r5, r0, r5, ror r7
    60ac:	0022a801 	eoreq	sl, r2, r1, lsl #16
    60b0:	114f1900 	cmpne	pc, r0, lsl #18
    60b4:	78010000 	stmdavc	r1, {}	; <UNPREDICTABLE>
    60b8:	01154001 	tsteq	r5, r1
    60bc:	57e70000 	strbpl	r0, [r7, r0]!
    60c0:	57d10000 	ldrbpl	r0, [r1, r0]
    60c4:	ea190000 	b	6460cc <__RAM_SIZE+0x5460cc>
    60c8:	0100000e 	tsteq	r0, lr
    60cc:	15400179 	strbne	r0, [r0, #-377]	; 0xfffffe87
    60d0:	74000001 	strvc	r0, [r0], #-1
    60d4:	6e000058 	mcrvs	0, 0, r0, cr0, cr8, {2}
    60d8:	19000058 	stmdbne	r0, {r3, r4, r6}
    60dc:	00000dee 	andeq	r0, r0, lr, ror #27
    60e0:	38017a01 	stmdacc	r1, {r0, r9, fp, ip, sp, lr}
    60e4:	0000012b 	andeq	r0, r0, fp, lsr #2
    60e8:	000058a6 	andeq	r5, r0, r6, lsr #17
    60ec:	000058a0 	andeq	r5, r0, r0, lsr #17
    60f0:	000fd119 	andeq	sp, pc, r9, lsl r1	; <UNPREDICTABLE>
    60f4:	017b0100 	cmneq	fp, r0, lsl #2
    60f8:	001d413e 	andseq	r4, sp, lr, lsr r1
    60fc:	0058d800 	subseq	sp, r8, r0, lsl #16
    6100:	0058d200 	subseq	sp, r8, r0, lsl #4
    6104:	111f1900 	tstne	pc, r0, lsl #18
    6108:	7c010000 	stcvc	0, cr0, [r1], {-0}
    610c:	00e23c01 	rsceq	r3, r2, r1, lsl #24
    6110:	59050000 	stmdbpl	r5, {}	; <UNPREDICTABLE>
    6114:	59010000 	stmdbpl	r1, {}	; <UNPREDICTABLE>
    6118:	e81a0000 	ldmda	sl, {}	; <UNPREDICTABLE>
    611c:	0100000c 	tsteq	r0, ip
    6120:	5613017e 			; <UNDEFINED> instruction: 0x5613017e
    6124:	31000006 	tstcc	r0, r6
    6128:	25000059 	strcs	r0, [r0, #-89]	; 0xffffffa7
    612c:	20000059 	andcs	r0, r0, r9, asr r0
    6130:	100022c2 	andne	r2, r0, r2, asr #5
    6134:	00001fe4 	andeq	r1, r0, r4, ror #31
    6138:	0350011f 	cmpeq	r0, #-1073741817	; 0xc0000007
    613c:	1f5001f3 	svcne	0x005001f3
    6140:	91045301 	tstls	r4, r1, lsl #6
    6144:	1f019400 	svcne	0x00019400
    6148:	02007d02 	andeq	r7, r0, #2, 26	; 0x80
    614c:	00000074 	andeq	r0, r0, r4, ror r0
    6150:	13b40121 			; <UNDEFINED> instruction: 0x13b40121
    6154:	2f010000 	svccs	0x00010000
    6158:	f3010c01 			; <UNDEFINED> instruction: 0xf3010c01
    615c:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
    6160:	7e100021 	cdpvc	0, 1, cr0, cr0, cr1, {1}
    6164:	7e100022 	cdpvc	0, 1, cr0, cr0, cr2, {1}
    6168:	01000059 	qaddeq	r0, r9, r0
    616c:	00002370 	andeq	r2, r0, r0, ror r3
    6170:	00129719 	andseq	r9, r2, r9, lsl r7
    6174:	012f0100 			; <UNDEFINED> instruction: 0x012f0100
    6178:	0003d22e 	andeq	sp, r3, lr, lsr #4
    617c:	0059c600 	subseq	ip, r9, r0, lsl #12
    6180:	0059b600 	subseq	fp, r9, r0, lsl #12
    6184:	0ce91900 			; <UNDEFINED> instruction: 0x0ce91900
    6188:	30010000 	andcc	r0, r1, r0
    618c:	00f32b01 	rscseq	r2, r3, r1, lsl #22
    6190:	5a310000 	bpl	c46198 <__RAM_SIZE+0xb46198>
    6194:	5a290000 	bpl	a4619c <__RAM_SIZE+0x94619c>
    6198:	931a0000 	tstls	sl, #0
    619c:	0100001a 	tsteq	r0, sl, lsl r0
    61a0:	f3100132 	vbsl	d0, d0, d18
    61a4:	6b000000 	blvs	61ac <__HEAP_SIZE+0x51ac>
    61a8:	6500005a 	strvs	r0, [r0, #-90]	; 0xffffffa6
    61ac:	1a00005a 	bne	631c <__HEAP_SIZE+0x531c>
    61b0:	00001296 	muleq	r0, r6, r2
    61b4:	15013301 	strne	r3, [r1, #-769]	; 0xfffffcff
    61b8:	0000065c 	andeq	r0, r0, ip, asr r6
    61bc:	00005aa7 	andeq	r5, r0, r7, lsr #21
    61c0:	00005a97 	muleq	r0, r7, sl
    61c4:	0022201d 	eoreq	r2, r2, sp, lsl r0
    61c8:	00238e10 	eoreq	r8, r3, r0, lsl lr
    61cc:	224e1d00 	subcs	r1, lr, #0, 26
    61d0:	239c1000 	orrscs	r1, ip, #0
    61d4:	5a1e0000 	bpl	7861dc <__RAM_SIZE+0x6861dc>
    61d8:	7f100022 	svcvc	0x00100022
    61dc:	42000023 	andmi	r0, r0, #35	; 0x23
    61e0:	1f000023 	svcne	0x00000023
    61e4:	74025001 	strvc	r5, [r2], #-1
    61e8:	621d0010 	andsvs	r0, sp, #16
    61ec:	0e100022 	cdpeq	0, 1, cr0, cr0, cr2, {1}
    61f0:	1e000024 	cdpne	0, 0, cr0, cr0, cr4, {1}
    61f4:	1000226c 	andne	r2, r0, ip, ror #4
    61f8:	000024b1 			; <UNDEFINED> instruction: 0x000024b1
    61fc:	0000235f 	andeq	r2, r0, pc, asr r3
    6200:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    6204:	20001074 	andcs	r1, r0, r4, ror r0
    6208:	10002274 	andne	r2, r0, r4, ror r2
    620c:	000024b1 			; <UNDEFINED> instruction: 0x000024b1
    6210:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    6214:	00002c74 	andeq	r2, r0, r4, ror ip
    6218:	7f01012b 	svcvc	0x0001012b
    621c:	7f00000d 	svcvc	0x0000000d
    6220:	0800000d 	stmdaeq	r0, {r0, r2, r3}
    6224:	2b0d06c6 	blcs	347d44 <__RAM_SIZE+0x247d44>
    6228:	143e0101 	ldrtne	r0, [lr], #-257	; 0xfffffeff
    622c:	143e0000 	ldrtne	r0, [lr], #-0
    6230:	e8080000 	stmda	r8, {}	; <UNPREDICTABLE>
    6234:	012c0c0d 			; <UNDEFINED> instruction: 0x012c0c0d
    6238:	000c4d01 	andeq	r4, ip, r1, lsl #26
    623c:	000c4d00 	andeq	r4, ip, r0, lsl #26
    6240:	0d710500 	cfldr64eq	mvdx0, [r1, #-0]
    6244:	bd01012c 	stflts	f0, [r1, #-176]	; 0xffffff50
    6248:	bd00000a 	stclt	0, cr0, [r0, #-40]	; 0xffffffd8
    624c:	0500000a 	streq	r0, [r0, #-10]
    6250:	012b0d72 			; <UNDEFINED> instruction: 0x012b0d72
    6254:	000f9a01 	andeq	r9, pc, r1, lsl #20
    6258:	000f9a00 	andeq	r9, pc, r0, lsl #20
    625c:	0dcc0800 	stcleq	8, cr0, [ip]
    6260:	01012b06 	tsteq	r1, r6, lsl #22
    6264:	000012b0 			; <UNDEFINED> instruction: 0x000012b0
    6268:	000012b0 			; <UNDEFINED> instruction: 0x000012b0
    626c:	060e0e08 	streq	r0, [lr], -r8, lsl #28
    6270:	6a01012d 	bvs	4672c <__HEAP_SIZE+0x4572c>
    6274:	6000000c 	andvs	r0, r0, ip
    6278:	0b00000c 	bleq	62b0 <__HEAP_SIZE+0x52b0>
    627c:	01012b00 	tsteq	r1, r0, lsl #22
    6280:	00000f2d 	andeq	r0, r0, sp, lsr #30
    6284:	00000f2d 	andeq	r0, r0, sp, lsr #30
    6288:	0c0e2008 	stceq	0, cr2, [lr], {8}
    628c:	3b01012c 	blcc	46744 <__HEAP_SIZE+0x45744>
    6290:	3b000012 	blcc	62e0 <__HEAP_SIZE+0x52e0>
    6294:	0a000012 	beq	62e4 <__HEAP_SIZE+0x52e4>
    6298:	012c06b8 			; <UNDEFINED> instruction: 0x012c06b8
    629c:	000ff701 	andeq	pc, pc, r1, lsl #14
    62a0:	000ff700 	andeq	pc, pc, r0, lsl #14
    62a4:	11740500 	cmnne	r4, r0, lsl #10
    62a8:	0301012c 	movweq	r0, #4396	; 0x112c
    62ac:	0300000d 	movweq	r0, #13
    62b0:	0500000d 	streq	r0, [r0, #-13]
    62b4:	012c0d75 			; <UNDEFINED> instruction: 0x012c0d75
    62b8:	000af801 	andeq	pc, sl, r1, lsl #16
    62bc:	000af800 	andeq	pc, sl, r0, lsl #16
    62c0:	0d6f0500 	cfstr64eq	mvdx0, [pc, #-0]	; 62c8 <__HEAP_SIZE+0x52c8>
    62c4:	a701012b 	strge	r0, [r1, -fp, lsr #2]
    62c8:	a7000010 	smladge	r0, r0, r0, r0
    62cc:	08000010 	stmdaeq	r0, {r4}
    62d0:	2b060e65 	blcs	189c6c <__RAM_SIZE+0x89c6c>
    62d4:	11f10101 	mvnsne	r0, r1, lsl #2
    62d8:	11f10000 	mvnsne	r0, r0
    62dc:	93080000 	movwls	r0, #32768	; 0x8000
    62e0:	012b0c06 			; <UNDEFINED> instruction: 0x012b0c06
    62e4:	000d9601 	andeq	r9, sp, r1, lsl #12
    62e8:	000d9600 	andeq	r9, sp, r0, lsl #12
    62ec:	065b0800 	ldrbeq	r0, [fp], -r0, lsl #16
    62f0:	01012b06 	tsteq	r1, r6, lsl #22
    62f4:	00001226 	andeq	r1, r0, r6, lsr #4
    62f8:	00001226 	andeq	r1, r0, r6, lsr #4
    62fc:	0c0d5308 	stceq	3, cr5, [sp], {8}
    6300:	9401012b 	strls	r0, [r1], #-299	; 0xfffffed5
    6304:	9400000e 	strls	r0, [r0], #-14
    6308:	0800000e 	stmdaeq	r0, {r1, r2, r3}
    630c:	2b060dbb 	blcs	189a00 <__RAM_SIZE+0x89a00>
    6310:	0eaa0101 	fdveqe	f0, f2, f1
    6314:	0eaa0000 	cdpeq	0, 10, cr0, cr10, cr0, {0}
    6318:	5f080000 	svcpl	0x00080000
    631c:	012b0e0e 			; <UNDEFINED> instruction: 0x012b0e0e
    6320:	00133f01 	andseq	r3, r3, r1, lsl #30
    6324:	00133f00 	andseq	r3, r3, r0, lsl #30
    6328:	0e2a0800 	cdpeq	8, 2, cr0, cr10, cr0, {0}
    632c:	01012b06 	tsteq	r1, r6, lsl #22
    6330:	000012c1 	andeq	r1, r0, r1, asr #5
    6334:	000012c1 	andeq	r1, r0, r1, asr #5
    6338:	0c0e1a08 			; <UNDEFINED> instruction: 0x0c0e1a08
    633c:	6b01012b 	blvs	467f0 <__HEAP_SIZE+0x457f0>
    6340:	6b000013 	blvs	6394 <__HEAP_SIZE+0x5394>
    6344:	08000013 	stmdaeq	r0, {r0, r1, r4}
    6348:	2c0e0e03 	stccs	14, cr0, [lr], {3}
    634c:	0d720101 	ldfeqe	f0, [r2, #-4]!
    6350:	0d720000 	ldcleq	0, cr0, [r2, #-0]
    6354:	b50a0000 	strlt	r0, [sl, #-0]
    6358:	01012b08 	tsteq	r1, r8, lsl #22
    635c:	00000a15 	andeq	r0, r0, r5, lsl sl
    6360:	00000a15 	andeq	r0, r0, r5, lsl sl
    6364:	0601b907 	streq	fp, [r1], -r7, lsl #18
    6368:	0038f000 	eorseq	pc, r8, r0
    636c:	19000200 	stmdbne	r0, {r9}
    6370:	04000010 	streq	r0, [r0], #-16
    6374:	0000bf01 	andeq	fp, r0, r1, lsl #30
    6378:	21380c00 	teqcs	r8, r0, lsl #24
    637c:	01a80000 			; <UNDEFINED> instruction: 0x01a80000
    6380:	07a80000 	streq	r0, [r8, r0]!
	...
    638c:	3f090000 	svccc	0x00090000
    6390:	e7020000 	str	r0, [r2, -r0]
    6394:	02000004 	andeq	r0, r0, #4
    6398:	003a17d1 	ldrsbteq	r1, [sl], -r1
    639c:	29030000 	stmdbcs	r3, {}	; <UNPREDICTABLE>
    63a0:	04000000 	streq	r0, [r0], #-0
    63a4:	021d0704 	andseq	r0, sp, #4, 14	; 0x100000
    63a8:	04050000 	streq	r0, [r5], #-0
    63ac:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    63b0:	05080400 	streq	r0, [r8, #-1024]	; 0xfffffc00
    63b4:	00000255 	andeq	r0, r0, r5, asr r2
    63b8:	49040804 	stmdbmi	r4, {r2, fp}
    63bc:	04000002 	streq	r0, [r0], #-2
    63c0:	008f0601 	addeq	r0, pc, r1, lsl #12
    63c4:	00020000 	andeq	r0, r2, r0
    63c8:	03000000 	movweq	r0, #0
    63cc:	0069182b 	rsbeq	r1, r9, fp, lsr #16
    63d0:	01040000 	mrseq	r0, (UNDEF: 4)
    63d4:	00008d08 	andeq	r8, r0, r8, lsl #26
    63d8:	05020400 	streq	r0, [r2, #-1024]	; 0xfffffc00
    63dc:	000002a5 	andeq	r0, r0, r5, lsr #5
    63e0:	ac070204 	sfmge	f0, 4, [r7], {4}
    63e4:	04000000 	streq	r0, [r0], #-0
    63e8:	025a0504 	subseq	r0, sl, #4, 10	; 0x1000000
    63ec:	7d020000 	stcvc	0, cr0, [r2, #-0]
    63f0:	03000003 	movweq	r0, #3
    63f4:	0091194f 	addseq	r1, r1, pc, asr #18
    63f8:	04040000 	streq	r0, [r4], #-0
    63fc:	00021807 	andeq	r1, r2, r7, lsl #16
    6400:	07080400 	streq	r0, [r8, -r0, lsl #8]
    6404:	00000213 	andeq	r0, r0, r3, lsl r2
    6408:	9f030406 	svcls	0x00030406
    640c:	07000000 	streq	r0, [r0, -r0]
    6410:	0000ac04 	andeq	sl, r0, r4, lsl #24
    6414:	08010400 	stmdaeq	r1, {sl}
    6418:	00000096 	muleq	r0, r6, r0
    641c:	0000ac03 	andeq	sl, r0, r3, lsl #24
    6420:	b3040700 	movwlt	r0, #18176	; 0x4700
    6424:	03000000 	movweq	r0, #0
    6428:	000000b8 	strheq	r0, [r0], -r8
    642c:	00000202 	andeq	r0, r0, r2, lsl #4
    6430:	13180400 	tstne	r8, #0, 8
    6434:	0000005d 	andeq	r0, r0, sp, asr r0
    6438:	0000c308 	andeq	ip, r0, r8, lsl #6
    643c:	00c30300 	sbceq	r0, r3, r0, lsl #6
    6440:	7f020000 	svcvc	0x00020000
    6444:	04000003 	streq	r0, [r0], #-3
    6448:	00851430 	addeq	r1, r5, r0, lsr r4
    644c:	d9080000 	stmdble	r8, {}	; <UNPREDICTABLE>
    6450:	02000000 	andeq	r0, r0, #0
    6454:	00001cb2 			; <UNDEFINED> instruction: 0x00001cb2
    6458:	f6112405 			; <UNDEFINED> instruction: 0xf6112405
    645c:	07000000 	streq	r0, [r0, -r0]
    6460:	0000fc04 	andeq	pc, r0, r4, lsl #24
    6464:	08010900 	stmdaeq	r1, {r8, fp}
    6468:	0a000001 	beq	6474 <__HEAP_SIZE+0x5474>
    646c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    6470:	15d90200 	ldrbne	r0, [r9, #512]	; 0x200
    6474:	49060000 	stmdbmi	r6, {}	; <UNPREDICTABLE>
    6478:	0000d91a 	andeq	sp, r0, sl, lsl r9
    647c:	01080800 	tsteq	r8, r0, lsl #16
    6480:	3f020000 	svccc	0x00020000
    6484:	0600000a 	streq	r0, [r0], -sl
    6488:	007e1a4a 	rsbseq	r1, lr, sl, asr #20
    648c:	19080000 	stmdbne	r8, {}	; <UNPREDICTABLE>
    6490:	03000001 	movweq	r0, #1
    6494:	00000119 	andeq	r0, r0, r9, lsl r1
    6498:	000a3e02 	andeq	r3, sl, r2, lsl #28
    649c:	1a4b0600 	bne	12c7ca4 <__RAM_SIZE+0x11c7ca4>
    64a0:	00000091 	muleq	r0, r1, r0
    64a4:	00012f08 	andeq	r2, r1, r8, lsl #30
    64a8:	013b0300 	teqeq	fp, r0, lsl #6
    64ac:	2f030000 	svccs	0x00030000
    64b0:	02000001 	andeq	r0, r0, #1
    64b4:	0000099a 	muleq	r0, sl, r9
    64b8:	d91a5106 	ldmdble	sl, {r1, r2, r8, ip, lr}
    64bc:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    64c0:	0000014a 	andeq	r0, r0, sl, asr #2
    64c4:	00014a03 	andeq	r4, r1, r3, lsl #20
    64c8:	c3040700 	movwgt	r0, #18176	; 0x4700
    64cc:	0b000000 	bleq	64d4 <__HEAP_SIZE+0x54d4>
    64d0:	0000129e 	muleq	r0, lr, r2
    64d4:	0c0c0714 	stceq	7, cr0, [ip], {20}
    64d8:	00019508 	andeq	r9, r1, r8, lsl #10
    64dc:	0e3f0c00 	cdpeq	12, 3, cr0, cr15, cr0, {0}
    64e0:	11070000 	mrsne	r0, (UNDEF: 7)
    64e4:	014a100c 	cmpeq	sl, ip
    64e8:	23020000 	movwcs	r0, #8192	; 0x2000
    64ec:	0e350c00 	cdpeq	12, 3, cr0, cr5, cr0, {0}
    64f0:	12070000 	andne	r0, r7, #0
    64f4:	01950c0c 	orrseq	r0, r5, ip, lsl #24
    64f8:	23020000 	movwcs	r0, #8192	; 0x2000
    64fc:	9f0d0004 	svcls	0x000d0004
    6500:	a5000000 	strge	r0, [r0, #-0]
    6504:	0e000001 	cdpeq	0, 0, cr0, cr0, cr1, {0}
    6508:	0000003a 	andeq	r0, r0, sl, lsr r0
    650c:	b10f0003 	tstlt	pc, r3
    6510:	07000019 	smladeq	r0, r9, r0, r0
    6514:	66220c17 			; <UNDEFINED> instruction: 0x66220c17
    6518:	0b000001 	bleq	6524 <__HEAP_SIZE+0x5524>
    651c:	00001fcd 	andeq	r1, r0, sp, asr #31
    6520:	0c43074c 	mcrreq	7, 4, r0, r3, cr12
    6524:	00027110 	andeq	r7, r2, r0, lsl r1
    6528:	1c200c00 	stcne	12, cr0, [r0], #-0
    652c:	45070000 	strmi	r0, [r7, #-0]
    6530:	009f0c0c 	addseq	r0, pc, ip, lsl #24
    6534:	23020000 	movwcs	r0, #8192	; 0x2000
    6538:	13630c00 	cmnne	r3, #0, 24
    653c:	4c070000 	stcmi	0, cr0, [r7], {-0}
    6540:	0271160c 	rsbseq	r1, r1, #12, 12	; 0xc00000
    6544:	23020000 	movwcs	r0, #8192	; 0x2000
    6548:	1a350c04 	bne	d49560 <__RAM_SIZE+0xc49560>
    654c:	4d070000 	stcmi	0, cr0, [r7, #-0]
    6550:	012f110c 			; <UNDEFINED> instruction: 0x012f110c
    6554:	23020000 	movwcs	r0, #8192	; 0x2000
    6558:	1c330c2c 	ldcne	12, cr0, [r3], #-176	; 0xffffff50
    655c:	4e070000 	cdpmi	0, 0, cr0, cr7, cr0, {0}
    6560:	009f0c0c 	addseq	r0, pc, ip, lsl #24
    6564:	23020000 	movwcs	r0, #8192	; 0x2000
    6568:	1e240c30 	mcrne	12, 1, r0, cr4, cr0, {1}
    656c:	53070000 	movwpl	r0, #28672	; 0x7000
    6570:	02810d0c 	addeq	r0, r1, #12, 26	; 0x300
    6574:	23020000 	movwcs	r0, #8192	; 0x2000
    6578:	15380c34 	ldrne	r0, [r8, #-3124]!	; 0xfffff3cc
    657c:	61070000 	mrsvs	r0, (UNDEF: 7)
    6580:	0291150c 	addseq	r1, r1, #12, 10	; 0x3000000
    6584:	23020000 	movwcs	r0, #8192	; 0x2000
    6588:	1dd50c38 	ldclne	12, cr0, [r5, #224]	; 0xe0
    658c:	64070000 	strvs	r0, [r7], #-0
    6590:	009f100c 	addseq	r1, pc, ip
    6594:	23020000 	movwcs	r0, #8192	; 0x2000
    6598:	1ffc0c40 	svcne	0x00fc0c40
    659c:	70070000 	andvc	r0, r7, r0
    65a0:	02a1120c 	adceq	r1, r1, #12, 4	; 0xc0000000
    65a4:	23020000 	movwcs	r0, #8192	; 0x2000
    65a8:	1c290c44 	stcne	12, cr0, [r9], #-272	; 0xfffffef0
    65ac:	71070000 	mrsvc	r0, (UNDEF: 7)
    65b0:	02b1110c 	adcseq	r1, r1, #12, 2
    65b4:	23020000 	movwcs	r0, #8192	; 0x2000
    65b8:	16570c48 	ldrbne	r0, [r7], -r8, asr #24
    65bc:	74070000 	strvc	r0, [r7], #-0
    65c0:	00c3110c 	sbceq	r1, r3, ip, lsl #2
    65c4:	23020000 	movwcs	r0, #8192	; 0x2000
    65c8:	1d010c49 	stcne	12, cr0, [r1, #-292]	; 0xfffffedc
    65cc:	78070000 	stmdavc	r7, {}	; <UNPREDICTABLE>
    65d0:	00c3110c 	sbceq	r1, r3, ip, lsl #2
    65d4:	23020000 	movwcs	r0, #8192	; 0x2000
    65d8:	a50d004a 	strge	r0, [sp, #-74]	; 0xffffffb6
    65dc:	81000001 	tsthi	r0, r1
    65e0:	0e000002 	cdpeq	0, 0, cr0, cr0, cr2, {0}
    65e4:	0000003a 	andeq	r0, r0, sl, lsr r0
    65e8:	c30d0001 	movwgt	r0, #53249	; 0xd001
    65ec:	91000000 	mrsls	r0, (UNDEF: 0)
    65f0:	0e000002 	cdpeq	0, 0, cr0, cr0, cr2, {0}
    65f4:	0000003a 	andeq	r0, r0, sl, lsr r0
    65f8:	2f0d0003 	svccs	0x000d0003
    65fc:	a1000001 	tstge	r0, r1
    6600:	0e000002 	cdpeq	0, 0, cr0, cr0, cr2, {0}
    6604:	0000003a 	andeq	r0, r0, sl, lsr r0
    6608:	d90d0001 	stmdble	sp, {r0}
    660c:	b1000000 	mrslt	r0, (UNDEF: 0)
    6610:	0e000002 	cdpeq	0, 0, cr0, cr0, cr2, {0}
    6614:	0000003a 	andeq	r0, r0, sl, lsr r0
    6618:	c30d0000 	movwgt	r0, #53248	; 0xd000
    661c:	c1000000 	mrsgt	r0, (UNDEF: 0)
    6620:	0e000002 	cdpeq	0, 0, cr0, cr0, cr2, {0}
    6624:	0000003a 	andeq	r0, r0, sl, lsr r0
    6628:	820f0000 	andhi	r0, pc, #0
    662c:	07000014 	smladeq	r0, r4, r0, r0
    6630:	b2030c7d 	andlt	r0, r3, #32000	; 0x7d00
    6634:	10000001 	andne	r0, r0, r1
    6638:	000009c1 	andeq	r0, r0, r1, asr #19
    663c:	08900814 	ldmeq	r0, {r2, r4, fp}
    6640:	00000327 	andeq	r0, r0, r7, lsr #6
    6644:	0009a511 	andeq	sl, r9, r1, lsl r5
    6648:	24930800 	ldrcs	r0, [r3], #2048	; 0x800
    664c:	0000014a 	andeq	r0, r0, sl, asr #2
    6650:	11002302 	tstne	r0, r2, lsl #6
    6654:	00000a0e 	andeq	r0, r0, lr, lsl #20
    6658:	272d9408 	strcs	r9, [sp, -r8, lsl #8]!
    665c:	02000003 	andeq	r0, r0, #3
    6660:	5d110423 	cfldrspl	mvf0, [r1, #-140]	; 0xffffff74
    6664:	0800000a 	stmdaeq	r0, {r1, r3}
    6668:	03272d95 			; <UNDEFINED> instruction: 0x03272d95
    666c:	23020000 	movwcs	r0, #8192	; 0x2000
    6670:	09b91108 	ldmibeq	r9!, {r3, r8, ip}
    6674:	96080000 	strls	r0, [r8], -r0
    6678:	00009f0c 	andeq	r9, r0, ip, lsl #30
    667c:	0c230200 	sfmeq	f0, 4, [r3], #-0
    6680:	00098e11 	andeq	r8, r9, r1, lsl lr
    6684:	28970800 	ldmcs	r7, {fp}
    6688:	00000368 	andeq	r0, r0, r8, ror #6
    668c:	00102302 	andseq	r2, r0, r2, lsl #6
    6690:	02ce0407 	sbceq	r0, lr, #117440512	; 0x7000000
    6694:	90100000 	andsls	r0, r0, r0
    6698:	1c00000a 	stcne	0, cr0, [r0], {10}
    669c:	6810ac08 	ldmdavs	r0, {r3, sl, fp, sp, pc}
    66a0:	11000003 	tstne	r0, r3
    66a4:	000009ef 	andeq	r0, r0, pc, ror #19
    66a8:	2f25af08 	svccs	0x0025af08
    66ac:	02000001 	andeq	r0, r0, #1
    66b0:	55110023 	ldrpl	r0, [r1, #-35]	; 0xffffffdd
    66b4:	0800000a 	stmdaeq	r0, {r1, r3}
    66b8:	038b26b0 	orreq	r2, fp, #176, 12	; 0xb000000
    66bc:	23020000 	movwcs	r0, #8192	; 0x2000
    66c0:	09b01104 	ldmibeq	r0!, {r2, r8, ip}
    66c4:	b1080000 	mrslt	r0, (UNDEF: 8)
    66c8:	00037f14 	andeq	r7, r3, r4, lsl pc
    66cc:	08230200 	stmdaeq	r3!, {r9}
    66d0:	2d040700 	stccs	7, cr0, [r4, #-0]
    66d4:	02000003 	andeq	r0, r0, #3
    66d8:	000019b7 			; <UNDEFINED> instruction: 0x000019b7
    66dc:	ce1b9a08 	vnmlsgt.f32	s18, s22, s16
    66e0:	03000002 	movweq	r0, #2
    66e4:	0000036e 	andeq	r0, r0, lr, ror #6
    66e8:	000bea02 	andeq	lr, fp, r2, lsl #20
    66ec:	24a60800 	strtcs	r0, [r6], #2048	; 0x800
    66f0:	000002ce 	andeq	r0, r0, lr, asr #5
    66f4:	036e0407 	cmneq	lr, #117440512	; 0x7000000
    66f8:	8b030000 	blhi	c6700 <__HEAP_SIZE+0xc5700>
    66fc:	02000003 	andeq	r0, r0, #3
    6700:	0000145d 	andeq	r1, r0, sp, asr r4
    6704:	2d03b308 	stccs	3, cr11, [r3, #-32]	; 0xffffffe0
    6708:	03000003 	movweq	r0, #3
    670c:	00000396 	muleq	r0, r6, r3
    6710:	0002af02 	andeq	sl, r2, r2, lsl #30
    6714:	2e5c0900 	vnmlscs.f16	s1, s24, s0	; <UNPREDICTABLE>
    6718:	000003b8 			; <UNDEFINED> instruction: 0x000003b8
    671c:	0003a703 	andeq	sl, r3, r3, lsl #14
    6720:	be040700 	cdplt	7, 0, cr0, cr4, cr0, {0}
    6724:	0b000003 	bleq	6738 <__HEAP_SIZE+0x5738>
    6728:	000001f2 	strdeq	r0, [r0], -r2
    672c:	0166014c 	cmneq	r6, ip, asr #2
    6730:	00049d10 	andeq	r9, r4, r0, lsl sp
    6734:	23900c00 	orrscs	r0, r0, #0, 24
    6738:	68010000 	stmdavs	r1, {}	; <UNPREDICTABLE>
    673c:	05f31c01 	ldrbeq	r1, [r3, #3073]!	; 0xc01
    6740:	23020000 	movwcs	r0, #8192	; 0x2000
    6744:	230f0c00 	movwcs	r0, #64512	; 0xfc00
    6748:	72010000 	andvc	r0, r1, #0
    674c:	036e1001 	cmneq	lr, #1
    6750:	23020000 	movwcs	r0, #8192	; 0x2000
    6754:	21de0c04 	bicscs	r0, lr, r4, lsl #24
    6758:	73010000 	movwvc	r0, #4096	; 0x1000
    675c:	036e1001 	cmneq	lr, #1
    6760:	23020000 	movwcs	r0, #8192	; 0x2000
    6764:	14ec0c18 	strbtne	r0, [ip], #3096	; 0xc18
    6768:	74010000 	strvc	r0, [r1], #-0
    676c:	012f1101 			; <UNDEFINED> instruction: 0x012f1101
    6770:	23020000 	movwcs	r0, #8192	; 0x2000
    6774:	1f520c2c 	svcne	0x00520c2c
    6778:	75010000 	strvc	r0, [r1, #-0]
    677c:	05bb1301 	ldreq	r1, [fp, #769]!	; 0x301
    6780:	23020000 	movwcs	r0, #8192	; 0x2000
    6784:	14970c30 	ldrne	r0, [r7], #3120	; 0xc30
    6788:	7a010000 	bvc	46790 <__HEAP_SIZE+0x45790>
    678c:	05f90a01 	ldrbeq	r0, [r9, #2561]!	; 0xa01
    6790:	23020000 	movwcs	r0, #8192	; 0x2000
    6794:	217f0c34 	cmncs	pc, r4, lsr ip	; <UNPREDICTABLE>
    6798:	8e010000 	cdphi	0, 0, cr0, cr1, cr0, {0}
    679c:	012f1501 			; <UNDEFINED> instruction: 0x012f1501
    67a0:	23020000 	movwcs	r0, #8192	; 0x2000
    67a4:	1abd0c38 	bne	fef4988c <__StackTop+0xc6e4988c>
    67a8:	8f010000 	svchi	0x00010000
    67ac:	012f1501 			; <UNDEFINED> instruction: 0x012f1501
    67b0:	23020000 	movwcs	r0, #8192	; 0x2000
    67b4:	1edf0c3c 	mrcne	12, 6, r0, cr15, cr12, {1}
    67b8:	93010000 	movwls	r0, #4096	; 0x1000
    67bc:	049d1c01 	ldreq	r1, [sp], #3073	; 0xc01
    67c0:	23020000 	movwcs	r0, #8192	; 0x2000
    67c4:	1a820c40 	bne	fe0898cc <__StackTop+0xc5f898cc>
    67c8:	a3010000 	movwge	r0, #4096	; 0x1000
    67cc:	06191b01 	ldreq	r1, [r9], -r1, lsl #22
    67d0:	23020000 	movwcs	r0, #8192	; 0x2000
    67d4:	17d80c44 	ldrbne	r0, [r8, r4, asr #24]
    67d8:	a4010000 	strge	r0, [r1], #-0
    67dc:	062e1a01 	strteq	r1, [lr], -r1, lsl #20
    67e0:	23020000 	movwcs	r0, #8192	; 0x2000
    67e4:	0e7e0c48 	cdpeq	12, 7, cr0, cr14, cr8, {2}
    67e8:	aa010000 	bge	467f0 <__HEAP_SIZE+0x457f0>
    67ec:	00c31101 	sbceq	r1, r3, r1, lsl #2
    67f0:	23020000 	movwcs	r0, #8192	; 0x2000
    67f4:	19a20c49 	stmibne	r2!, {r0, r3, r6, sl, fp}
    67f8:	ae010000 	cdpge	0, 0, cr0, cr1, cr0, {0}
    67fc:	00c31101 	sbceq	r1, r3, r1, lsl #2
    6800:	23020000 	movwcs	r0, #8192	; 0x2000
    6804:	2b02004a 	blcs	86934 <__HEAP_SIZE+0x85934>
    6808:	09000020 	stmdbeq	r0, {r5}
    680c:	04a91763 	strteq	r1, [r9], #1891	; 0x763
    6810:	04070000 	streq	r0, [r7], #-0
    6814:	000004af 	andeq	r0, r0, pc, lsr #9
    6818:	01190112 	tsteq	r9, r2, lsl r1
    681c:	04bf0000 	ldrteq	r0, [pc], #0	; 6824 <__HEAP_SIZE+0x5824>
    6820:	9f0a0000 	svcls	0x000a0000
    6824:	00000000 	andeq	r0, r0, r0
    6828:	69010713 	stmdbvs	r1, {r0, r1, r4, r8, r9, sl}
    682c:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    6830:	04f20167 	ldrbteq	r0, [r2], #359	; 0x167
    6834:	b6140000 	ldrlt	r0, [r4], -r0
    6838:	00000020 	andeq	r0, r0, r0, lsr #32
    683c:	001b7614 	andseq	r7, fp, r4, lsl r6
    6840:	b7140100 	ldrlt	r0, [r4, -r0, lsl #2]
    6844:	02000021 	andeq	r0, r0, #33	; 0x21
    6848:	00152d14 	andseq	r2, r5, r4, lsl sp
    684c:	3c140300 	ldccc	3, cr0, [r4], {-0}
    6850:	0400001c 	streq	r0, [r0], #-28	; 0xffffffe4
    6854:	00216814 	eoreq	r6, r1, r4, lsl r8
    6858:	02000500 	andeq	r0, r0, #0, 10
    685c:	00001d87 	andeq	r1, r0, r7, lsl #27
    6860:	bf036e09 	svclt	0x00036e09
    6864:	13000004 	movwne	r0, #4
    6868:	00690107 	rsbeq	r0, r9, r7, lsl #2
    686c:	72090000 	andvc	r0, r9, #0
    6870:	00052b01 	andeq	r2, r5, r1, lsl #22
    6874:	15901400 	ldrne	r1, [r0, #1024]	; 0x400
    6878:	14000000 	strne	r0, [r0], #-0
    687c:	00001dec 	andeq	r1, r0, ip, ror #27
    6880:	22e11401 	rsccs	r1, r1, #16777216	; 0x1000000
    6884:	14020000 	strne	r0, [r2], #-0
    6888:	00001860 	andeq	r1, r0, r0, ror #16
    688c:	1acb1403 	bne	ff2cb8a0 <__StackTop+0xc71cb8a0>
    6890:	00040000 	andeq	r0, r4, r0
    6894:	00198502 	andseq	r8, r9, r2, lsl #10
    6898:	03780900 	cmneq	r8, #0, 18
    689c:	000004fe 	strdeq	r0, [r0], -lr
    68a0:	000b8d10 	andeq	r8, fp, r0, lsl sp
    68a4:	7d090800 	stcvc	8, cr0, [r9, #-0]
    68a8:	00056310 	andeq	r6, r5, r0, lsl r3
    68ac:	0c3e1100 	ldfeqs	f1, [lr], #-0
    68b0:	7f090000 	svcvc	0x00090000
    68b4:	00011910 	andeq	r1, r1, r0, lsl r9
    68b8:	00230200 	eoreq	r0, r3, r0, lsl #4
    68bc:	00105011 	andseq	r5, r0, r1, lsl r0
    68c0:	10800900 	addne	r0, r0, r0, lsl #18
    68c4:	0000014a 	andeq	r0, r0, sl, asr #2
    68c8:	00042302 	andeq	r2, r4, r2, lsl #6
    68cc:	00109d02 	andseq	r9, r0, r2, lsl #26
    68d0:	03810900 	orreq	r0, r1, #0, 18
    68d4:	00000537 	andeq	r0, r0, r7, lsr r5
    68d8:	001df510 	andseq	pc, sp, r0, lsl r5	; <UNPREDICTABLE>
    68dc:	86090c00 	strhi	r0, [r9], -r0, lsl #24
    68e0:	0005aa10 	andeq	sl, r5, r0, lsl sl
    68e4:	20cd1100 	sbccs	r1, sp, r0, lsl #2
    68e8:	88090000 	stmdahi	r9, {}	; <UNPREDICTABLE>
    68ec:	00009f0c 	andeq	r9, r0, ip, lsl #30
    68f0:	00230200 	eoreq	r0, r3, r0, lsl #4
    68f4:	001c6311 	andseq	r6, ip, r1, lsl r3
    68f8:	0e890900 	vdiveq.f16	s0, s18, s0	; <UNPREDICTABLE>
    68fc:	000000d9 	ldrdeq	r0, [r0], -r9
    6900:	11042302 	tstne	r4, r2, lsl #6
    6904:	00001730 	andeq	r1, r0, r0, lsr r7
    6908:	d90e8a09 	stmdble	lr, {r0, r3, r9, fp, pc}
    690c:	02000000 	andeq	r0, r0, #0
    6910:	02000823 	andeq	r0, r0, #2293760	; 0x230000
    6914:	00001be6 	andeq	r1, r0, r6, ror #23
    6918:	6f038b09 	svcvs	0x00038b09
    691c:	03000005 	movweq	r0, #5
    6920:	000005aa 	andeq	r0, r0, sl, lsr #11
    6924:	01080407 	tsteq	r8, r7, lsl #8
    6928:	bb030000 	bllt	c6930 <__HEAP_SIZE+0xc5930>
    692c:	13000005 	movwne	r0, #5
    6930:	00690107 	rsbeq	r0, r9, r7, lsl #2
    6934:	b6090000 	strlt	r0, [r9], -r0
    6938:	0005e701 	andeq	lr, r5, r1, lsl #14
    693c:	18541400 	ldmdane	r4, {sl, ip}^
    6940:	14000000 	strne	r0, [r0], #-0
    6944:	0000203e 	andeq	r2, r0, lr, lsr r0
    6948:	20551401 	subscs	r1, r5, r1, lsl #8
    694c:	00020000 	andeq	r0, r2, r0
    6950:	00179302 	andseq	r9, r7, r2, lsl #6
    6954:	03bd0900 			; <UNDEFINED> instruction: 0x03bd0900
    6958:	000005c6 	andeq	r0, r0, r6, asr #11
    695c:	01140407 	tsteq	r4, r7, lsl #8
    6960:	ac0d0000 	stcge	0, cr0, [sp], {-0}
    6964:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    6968:	0e000006 	cdpeq	0, 0, cr0, cr0, cr6, {0}
    696c:	0000003a 	andeq	r0, r0, sl, lsr r0
    6970:	e50d0003 	str	r0, [sp, #-3]
    6974:	19000000 	stmdbne	r0, {}	; <UNPREDICTABLE>
    6978:	0e000006 	cdpeq	0, 0, cr0, cr0, cr6, {0}
    697c:	0000003a 	andeq	r0, r0, sl, lsr r0
    6980:	09080000 	stmdbeq	r8, {}	; <UNPREDICTABLE>
    6984:	0d000006 	stceq	0, cr0, [r0, #-24]	; 0xffffffe8
    6988:	000000cf 	andeq	r0, r0, pc, asr #1
    698c:	0000062e 	andeq	r0, r0, lr, lsr #12
    6990:	00003a0e 	andeq	r3, r0, lr, lsl #20
    6994:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    6998:	0000061e 	andeq	r0, r0, lr, lsl r6
    699c:	0017d10f 	andseq	sp, r7, pc, lsl #2
    69a0:	01b40100 			; <UNDEFINED> instruction: 0x01b40100
    69a4:	0003be03 	andeq	fp, r3, r3, lsl #28
    69a8:	21a40f00 			; <UNDEFINED> instruction: 0x21a40f00
    69ac:	b8010000 	stmdalt	r1, {}	; <UNPREDICTABLE>
    69b0:	06331001 	ldrteq	r1, [r3], -r1
    69b4:	40030000 	andmi	r0, r3, r0
    69b8:	15000006 	strne	r0, [r0, #-6]
    69bc:	00001e9e 	muleq	r0, lr, lr
    69c0:	3701be01 	strcc	fp, [r1, -r1, lsl #28]
    69c4:	0000066c 	andeq	r0, r0, ip, ror #12
    69c8:	b8030501 	stmdalt	r3, {r0, r8, sl}
    69cc:	07380085 	ldreq	r0, [r8, -r5, lsl #1]!
    69d0:	00064004 	andeq	r4, r6, r4
    69d4:	06660800 	strbteq	r0, [r6], -r0, lsl #16
    69d8:	66030000 	strvs	r0, [r3], -r0
    69dc:	0d000006 	stceq	0, cr0, [r0, #-24]	; 0xffffffe8
    69e0:	00000396 	muleq	r0, r6, r3
    69e4:	00000686 	andeq	r0, r0, r6, lsl #13
    69e8:	00003a0e 	andeq	r3, r0, lr, lsl #20
    69ec:	16000400 	strne	r0, [r0], -r0, lsl #8
    69f0:	00001633 	andeq	r1, r0, r3, lsr r6
    69f4:	1f01cb01 	svcne	0x0001cb01
    69f8:	00000676 	andeq	r0, r0, r6, ror r6
    69fc:	85c40305 	strbhi	r0, [r4, #773]	; 0x305
    6a00:	d0163800 	andsle	r3, r6, r0, lsl #16
    6a04:	01000016 	tsteq	r0, r6, lsl r0
    6a08:	961f01cc 	ldrls	r0, [pc], -ip, asr #3
    6a0c:	05000003 	streq	r0, [r0, #-3]
    6a10:	008a6403 	addeq	r6, sl, r3, lsl #8
    6a14:	16e21638 			; <UNDEFINED> instruction: 0x16e21638
    6a18:	cd010000 	stcgt	0, cr0, [r1, #-0]
    6a1c:	03961f01 	orrseq	r1, r6, #1, 30
    6a20:	03050000 	movweq	r0, #20480	; 0x5000
    6a24:	38008a80 	stmdacc	r0, {r7, r9, fp, pc}
    6a28:	001f0b16 	andseq	r0, pc, r6, lsl fp	; <UNPREDICTABLE>
    6a2c:	01ce0100 	biceq	r0, lr, r0, lsl #2
    6a30:	0006d82a 	andeq	sp, r6, sl, lsr #16
    6a34:	bc030500 	cfstr32lt	mvfx0, [r3], {-0}
    6a38:	07380085 	ldreq	r0, [r8, -r5, lsl #1]!
    6a3c:	00039604 	andeq	r9, r3, r4, lsl #12
    6a40:	06d20800 	ldrbeq	r0, [r2], r0, lsl #16
    6a44:	d2030000 	andle	r0, r3, #0
    6a48:	16000006 	strne	r0, [r0], -r6
    6a4c:	00001a1b 	andeq	r1, r0, fp, lsl sl
    6a50:	2a01cf01 	bcs	7a65c <__HEAP_SIZE+0x7965c>
    6a54:	000006d8 	ldrdeq	r0, [r0], -r8
    6a58:	85c00305 	strbhi	r0, [r0, #773]	; 0x305
    6a5c:	b8163800 	ldmdalt	r6, {fp, ip, sp}
    6a60:	01000018 	tsteq	r0, r8, lsl r0
    6a64:	961f01d0 			; <UNDEFINED> instruction: 0x961f01d0
    6a68:	05000003 	streq	r0, [r0, #-3]
    6a6c:	008af803 	addeq	pc, sl, r3, lsl #16
    6a70:	18f91638 	ldmne	r9!, {r3, r4, r5, r9, sl, ip}^
    6a74:	d4010000 	strle	r0, [r1], #-0
    6a78:	03962301 	orrseq	r2, r6, #67108864	; 0x4000000
    6a7c:	03050000 	movweq	r0, #20480	; 0x5000
    6a80:	38008b34 	stmdacc	r0, {r2, r4, r5, r8, r9, fp, pc}
    6a84:	0015f316 	andseq	pc, r5, r6, lsl r3	; <UNPREDICTABLE>
    6a88:	01d50100 	bicseq	r0, r5, r0, lsl #2
    6a8c:	00013b31 	andeq	r3, r1, r1, lsr fp
    6a90:	54030500 	strpl	r0, [r3], #-1280	; 0xfffffb00
    6a94:	16380086 	ldrtne	r0, [r8], -r6, lsl #1
    6a98:	00001a01 	andeq	r1, r0, r1, lsl #20
    6a9c:	2301db01 	movwcs	sp, #6913	; 0x1b01
    6aa0:	00000396 	muleq	r0, r6, r3
    6aa4:	8b180305 	blhi	6076c0 <__RAM_SIZE+0x5076c0>
    6aa8:	c6163800 	ldrgt	r3, [r6], -r0, lsl #16
    6aac:	01000022 	tsteq	r0, r2, lsr #32
    6ab0:	3b2d01e6 	blcc	b47250 <__RAM_SIZE+0xa47250>
    6ab4:	05000001 	streq	r0, [r0, #-1]
    6ab8:	00865003 	addeq	r5, r6, r3
    6abc:	19c21638 	stmibne	r2, {r3, r4, r5, r9, sl, ip}^
    6ac0:	e7010000 	str	r0, [r1, -r0]
    6ac4:	01562c01 	cmpeq	r6, r1, lsl #24
    6ac8:	03050000 	movweq	r0, #20480	; 0x5000
    6acc:	38008b50 	stmdacc	r0, {r4, r6, r8, r9, fp, pc}
    6ad0:	00159a16 	andseq	r9, r5, r6, lsl sl
    6ad4:	01e80100 	mvneq	r0, r0, lsl #2
    6ad8:	00013b2d 	andeq	r3, r1, sp, lsr #22
    6adc:	60030500 	andvs	r0, r3, r0, lsl #10
    6ae0:	1638008a 	ldrtne	r0, [r8], -sl, lsl #1
    6ae4:	000015c7 	andeq	r1, r0, r7, asr #11
    6ae8:	2c01e901 			; <UNDEFINED> instruction: 0x2c01e901
    6aec:	00000125 	andeq	r0, r0, r5, lsr #2
    6af0:	8b140305 	blhi	50770c <__RAM_SIZE+0x40770c>
    6af4:	f9163800 			; <UNDEFINED> instruction: 0xf9163800
    6af8:	01000021 	tsteq	r0, r1, lsr #32
    6afc:	562c01ea 	strtpl	r0, [ip], -sl, ror #3
    6b00:	05000001 	streq	r0, [r0, #-1]
    6b04:	008af403 	addeq	pc, sl, r3, lsl #8
    6b08:	01250d38 			; <UNDEFINED> instruction: 0x01250d38
    6b0c:	07b00000 	ldreq	r0, [r0, r0]!
    6b10:	3a0e0000 	bcc	386b18 <__RAM_SIZE+0x286b18>
    6b14:	00000000 	andeq	r0, r0, r0
    6b18:	07a00800 	streq	r0, [r0, r0, lsl #16]!
    6b1c:	b4160000 	ldrlt	r0, [r6], #-0
    6b20:	01000016 	tsteq	r0, r6, lsl r0
    6b24:	b02c01eb 	eorlt	r0, ip, fp, ror #3
    6b28:	05000007 	streq	r0, [r0, #-7]
    6b2c:	008ba003 	addeq	sl, fp, r3
    6b30:	1e6d1638 	mcrne	6, 3, r1, cr13, cr8, {1}
    6b34:	ec010000 	stc	0, cr0, [r1], {-0}
    6b38:	01252c01 			; <UNDEFINED> instruction: 0x01252c01
    6b3c:	03050000 	movweq	r0, #20480	; 0x5000
    6b40:	38008af0 	stmdacc	r0, {r4, r5, r6, r7, r9, fp, pc}
    6b44:	001d2a16 	andseq	r2, sp, r6, lsl sl
    6b48:	01ed0100 	mvneq	r0, r0, lsl #2
    6b4c:	00012f24 	andeq	r2, r1, r4, lsr #30
    6b50:	5c030500 	cfstr32pl	mvfx0, [r3], {-0}
    6b54:	16380088 	ldrtne	r0, [r8], -r8, lsl #1
    6b58:	00001bf5 	strdeq	r1, [r0], -r5
    6b5c:	2c01ee01 	stccs	14, cr14, [r1], {1}
    6b60:	00000156 	andeq	r0, r0, r6, asr r1
    6b64:	8aec0305 	bhi	ffb07780 <__StackTop+0xc7a07780>
    6b68:	a70d3800 	strge	r3, [sp, -r0, lsl #16]
    6b6c:	11000003 	tstne	r0, r3
    6b70:	0e000008 	cdpeq	0, 0, cr0, cr0, cr8, {0}
    6b74:	0000003a 	andeq	r0, r0, sl, lsr r0
    6b78:	55160000 	ldrpl	r0, [r6, #-0]
    6b7c:	0100001a 	tsteq	r0, sl, lsl r0
    6b80:	012501ef 	smulwteq	r5, pc, r1	; <UNPREDICTABLE>
    6b84:	05000008 	streq	r0, [r0, #-8]
    6b88:	008a9c03 	addeq	r9, sl, r3, lsl #24
    6b8c:	19291638 	stmdbne	r9!, {r3, r4, r5, r9, sl, ip}
    6b90:	f4010000 	vst4.8	{d0-d3}, [r1], r0
    6b94:	01402301 	cmpeq	r0, r1, lsl #6
    6b98:	03050000 	movweq	r0, #20480	; 0x5000
    6b9c:	3800000c 	stmdacc	r0, {r2, r3}
    6ba0:	00237b16 	eoreq	r7, r3, r6, lsl fp
    6ba4:	02020100 	andeq	r0, r2, #0, 2
    6ba8:	00013b2d 	andeq	r3, r1, sp, lsr #22
    6bac:	58030500 	stmdapl	r3, {r8, sl}
    6bb0:	17380088 	ldrne	r0, [r8, -r8, lsl #1]!
    6bb4:	00191201 	andseq	r1, r9, r1, lsl #4
    6bb8:	21c50100 	biccs	r0, r5, r0, lsl #2
    6bbc:	00000106 	andeq	r0, r0, r6, lsl #2
    6bc0:	00000000 	andeq	r0, r0, r0
    6bc4:	7d020000 	stcvc	0, cr0, [r2, #-0]
    6bc8:	087b0100 	ldmdaeq	fp!, {r8}^
    6bcc:	8f180000 	svchi	0x00180000
    6bd0:	01000014 	tsteq	r0, r4, lsl r0
    6bd4:	191021c7 	ldmdbne	r0, {r0, r1, r2, r6, r7, r8, sp}
    6bd8:	0e000001 	cdpeq	0, 0, cr0, cr0, cr1, {0}
    6bdc:	0a00005b 	beq	6d50 <__HEAP_SIZE+0x5d50>
    6be0:	0000005b 	andeq	r0, r0, fp, asr r0
    6be4:	17e60117 			; <UNDEFINED> instruction: 0x17e60117
    6be8:	b1010000 	mrslt	r0, (UNDEF: 1)
    6bec:	9c010a21 			; <UNDEFINED> instruction: 0x9c010a21
    6bf0:	b410002f 	ldrlt	r0, [r0], #-47	; 0xffffffd1
    6bf4:	0210002f 	andseq	r0, r0, #47	; 0x2f
    6bf8:	ea01007d 	b	46df4 <__HEAP_SIZE+0x45df4>
    6bfc:	19000008 	stmdbne	r0, {r3}
    6c00:	00001f5a 	andeq	r1, r0, sl, asr pc
    6c04:	3a21b101 	bcc	873010 <__RAM_SIZE+0x773010>
    6c08:	000008ea 	andeq	r0, r0, sl, ror #17
    6c0c:	bf195001 	svclt	0x00195001
    6c10:	0100001b 	tsteq	r0, fp, lsl r0
    6c14:	fb3921b2 	blx	e4f2e6 <__RAM_SIZE+0xd4f2e6>
    6c18:	01000008 	tsteq	r0, r8
    6c1c:	21221951 			; <UNDEFINED> instruction: 0x21221951
    6c20:	b3010000 	movwlt	r0, #4096	; 0x1000
    6c24:	09014321 	stmdbeq	r1, {r0, r5, r8, r9, lr}
    6c28:	52010000 	andpl	r0, r1, #0
    6c2c:	00166116 	andseq	r6, r6, r6, lsl r1
    6c30:	21b50100 			; <UNDEFINED> instruction: 0x21b50100
    6c34:	0002c11d 	andeq	ip, r2, sp, lsl r1
    6c38:	54030500 	strpl	r0, [r3], #-1280	; 0xfffffb00
    6c3c:	1638008b 	ldrtne	r0, [r8], -fp, lsl #1
    6c40:	0000235f 	andeq	r2, r0, pc, asr r3
    6c44:	1c21b601 	stcne	6, cr11, [r1], #-4
    6c48:	00000907 	andeq	r0, r0, r7, lsl #18
    6c4c:	88600305 	stmdahi	r0!, {r0, r2, r8, r9}^
    6c50:	07003800 	streq	r3, [r0, -r0, lsl #16]
    6c54:	0008f004 	andeq	pc, r8, r4
    6c58:	c1040700 	tstgt	r4, r0, lsl #14
    6c5c:	03000002 	movweq	r0, #2
    6c60:	000008f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    6c64:	05bb0407 	ldreq	r0, [fp, #1031]!	; 0x407
    6c68:	04070000 	streq	r0, [r7], #-0
    6c6c:	00000029 	andeq	r0, r0, r9, lsr #32
    6c70:	0001080d 	andeq	r0, r1, sp, lsl #16
    6c74:	00091700 	andeq	r1, r9, r0, lsl #14
    6c78:	003a0e00 	eorseq	r0, sl, r0, lsl #28
    6c7c:	007f0000 	rsbseq	r0, pc, r0
    6c80:	231e0117 	tstcs	lr, #-1073741819	; 0xc0000005
    6c84:	88010000 	stmdahi	r1, {}	; <UNPREDICTABLE>
    6c88:	d0010a21 	andle	r0, r1, r1, lsr #20
    6c8c:	e810002e 	ldmda	r0, {r1, r2, r3, r5}
    6c90:	0210002e 	andseq	r0, r0, #46	; 0x2e
    6c94:	8601007d 			; <UNDEFINED> instruction: 0x8601007d
    6c98:	19000009 	stmdbne	r0, {r0, r3}
    6c9c:	00001c73 	andeq	r1, r0, r3, ror ip
    6ca0:	39218801 	stmdbcc	r1!, {r0, fp, pc}
    6ca4:	000008ea 	andeq	r0, r0, sl, ror #17
    6ca8:	c1195001 	tstgt	r9, r1
    6cac:	01000014 	tsteq	r0, r4, lsl r0
    6cb0:	fb382189 	blx	e0f2de <__RAM_SIZE+0xd0f2de>
    6cb4:	01000008 	tsteq	r0, r8
    6cb8:	1dac1951 			; <UNDEFINED> instruction: 0x1dac1951
    6cbc:	8a010000 	bhi	46cc4 <__HEAP_SIZE+0x45cc4>
    6cc0:	09014221 	stmdbeq	r1, {r0, r5, r9, lr}
    6cc4:	52010000 	andpl	r0, r1, #0
    6cc8:	0023df16 	eoreq	sp, r3, r6, lsl pc
    6ccc:	218c0100 	orrcs	r0, ip, r0, lsl #2
    6cd0:	0002c11d 	andeq	ip, r2, sp, lsl r1
    6cd4:	a0030500 	andge	r0, r3, r0, lsl #10
    6cd8:	1638008a 	ldrtne	r0, [r8], -sl, lsl #1
    6cdc:	0000201b 	andeq	r2, r0, fp, lsl r0
    6ce0:	1c218d01 	stcne	13, cr8, [r1], #-4
    6ce4:	00000907 	andeq	r0, r0, r7, lsl #18
    6ce8:	86580305 	ldrbhi	r0, [r8], -r5, lsl #6
    6cec:	1a003800 	bne	14cf4 <__HEAP_SIZE+0x13cf4>
    6cf0:	00002250 	andeq	r2, r0, r0, asr r2
    6cf4:	0d20df01 	stceq	15, cr13, [r0, #-4]!
    6cf8:	00276801 	eoreq	r6, r7, r1, lsl #16
    6cfc:	00281010 	eoreq	r1, r8, r0, lsl r0
    6d00:	005b2c10 	subseq	r2, fp, r0, lsl ip
    6d04:	0a700100 	beq	1c0710c <__RAM_SIZE+0x1b0710c>
    6d08:	5b1b0000 	blpl	6c6d10 <__RAM_SIZE+0x5c6d10>
    6d0c:	01000021 	tsteq	r0, r1, lsr #32
    6d10:	4a3820df 	bmi	e0f094 <__RAM_SIZE+0xd0f094>
    6d14:	56000001 	strpl	r0, [r0], -r1
    6d18:	4c00005b 	stcmi	0, cr0, [r0], {91}	; 0x5b
    6d1c:	1b00005b 	blne	6e90 <__HEAP_SIZE+0x5e90>
    6d20:	000020a0 	andeq	r2, r0, r0, lsr #1
    6d24:	3e20e001 	cdpcc	0, 2, cr14, cr0, cr1, {0}
    6d28:	0000012a 	andeq	r0, r0, sl, lsr #2
    6d2c:	00005b9f 	muleq	r0, pc, fp	; <UNPREDICTABLE>
    6d30:	00005b9b 	muleq	r0, fp, fp
    6d34:	00230318 	eoreq	r0, r3, r8, lsl r3
    6d38:	20e20100 	rsccs	r0, r2, r0, lsl #2
    6d3c:	00014a10 	andeq	r4, r1, r0, lsl sl
    6d40:	005bc100 	subseq	ip, fp, r0, lsl #2
    6d44:	005bbd00 	subseq	fp, fp, r0, lsl #26
    6d48:	19f11800 	ldmibne	r1!, {fp, ip}^
    6d4c:	e3010000 	movw	r0, #4096	; 0x1000
    6d50:	015b1620 	cmpeq	fp, r0, lsr #12
    6d54:	5be10000 	blpl	ff846d5c <__StackTop+0xc7746d5c>
    6d58:	5bdf0000 	blpl	ff7c6d60 <__StackTop+0xc76c6d60>
    6d5c:	ad180000 	ldcge	0, cr0, [r8, #-0]
    6d60:	01000015 	tsteq	r0, r5, lsl r0
    6d64:	dd1420e4 	ldcle	0, cr2, [r4, #-912]	; 0xfffffc70
    6d68:	f6000006 			; <UNDEFINED> instruction: 0xf6000006
    6d6c:	f400005b 	vst4.16	{d0-d3}, [r0 :64], fp
    6d70:	1800005b 	stmdane	r0, {r0, r1, r3, r4, r6}
    6d74:	0000244c 	andeq	r2, r0, ip, asr #8
    6d78:	1420e501 	strtne	lr, [r0], #-1281	; 0xfffffaff
    6d7c:	000006dd 	ldrdeq	r0, [r0], -sp
    6d80:	00005c0b 	andeq	r5, r0, fp, lsl #24
    6d84:	00005c09 	andeq	r5, r0, r9, lsl #24
    6d88:	0027b61c 	eoreq	fp, r7, ip, lsl r6
    6d8c:	0027dc10 	eoreq	sp, r7, r0, lsl ip
    6d90:	000a4210 	andeq	r4, sl, r0, lsl r2
    6d94:	0a551800 	beq	154cd9c <__RAM_SIZE+0x144cd9c>
    6d98:	04010000 	streq	r0, [r1], #-0
    6d9c:	03910d21 	orrseq	r0, r1, #2112	; 0x840
    6da0:	5c200000 	stcpl	0, cr0, [r0], #-0
    6da4:	5c1e0000 	ldcpl	0, cr0, [lr], {-0}
    6da8:	1d000000 	stcne	0, cr0, [r0, #-0]
    6dac:	10002790 	mulne	r0, r0, r7
    6db0:	000037d4 	ldrdeq	r3, [r0], -r4
    6db4:	0027ae1e 	eoreq	sl, r7, lr, lsl lr
    6db8:	0037e310 	eorseq	lr, r7, r0, lsl r3
    6dbc:	000a5f00 	andeq	r5, sl, r0, lsl #30
    6dc0:	50011f00 	andpl	r1, r1, r0, lsl #30
    6dc4:	00007802 	andeq	r7, r0, r2, lsl #16
    6dc8:	0027ea20 	eoreq	lr, r7, r0, lsr #20
    6dcc:	0037e310 	eorseq	lr, r7, r0, lsl r3
    6dd0:	50011f00 	andpl	r1, r1, r0, lsl #30
    6dd4:	00007702 	andeq	r7, r0, r2, lsl #14
    6dd8:	45012100 	strmi	r2, [r1, #-256]	; 0xffffff00
    6ddc:	0100001c 	tsteq	r0, ip, lsl r0
    6de0:	010e2050 	qaddeq	r2, r0, lr
    6de4:	000000d9 	ldrdeq	r0, [r0], -r9
	...
    6df0:	00005c33 	andeq	r5, r0, r3, lsr ip
    6df4:	000b0c01 	andeq	r0, fp, r1, lsl #24
    6df8:	1dcf1b00 	vstrne	d17, [pc]	; 6e00 <__HEAP_SIZE+0x5e00>
    6dfc:	50010000 	andpl	r0, r1, r0
    6e00:	03a73a20 			; <UNDEFINED> instruction: 0x03a73a20
    6e04:	5c570000 	mrapl	r0, r7, acc0
    6e08:	5c530000 	mrapl	r0, r3, acc0
    6e0c:	531b0000 	tstpl	fp, #0
    6e10:	01000017 	tsteq	r0, r7, lsl r0
    6e14:	2f392051 	svccs	0x00392051
    6e18:	7b000001 	blvc	6e24 <__HEAP_SIZE+0x5e24>
    6e1c:	7500005c 	strvc	r0, [r0, #-92]	; 0xffffffa4
    6e20:	1b00005c 	blne	6f98 <__HEAP_SIZE+0x5f98>
    6e24:	000015e5 	andeq	r1, r0, r5, ror #11
    6e28:	36205201 	strtcc	r5, [r0], -r1, lsl #4
    6e2c:	000000d9 	ldrdeq	r0, [r0], -r9
    6e30:	00005caa 	andeq	r5, r0, sl, lsr #25
    6e34:	00005ca4 	andeq	r5, r0, r4, lsr #25
    6e38:	00233c18 	eoreq	r3, r3, r8, lsl ip
    6e3c:	20540100 	subscs	r0, r4, r0, lsl #2
    6e40:	00066611 	andeq	r6, r6, r1, lsl r6
    6e44:	005cd500 	subseq	sp, ip, r0, lsl #10
    6e48:	005cd300 	subseq	sp, ip, r0, lsl #6
    6e4c:	24621800 	strbtcs	r1, [r2], #-2048	; 0xfffff800
    6e50:	55010000 	strpl	r0, [r1, #-0]
    6e54:	00d91220 	sbcseq	r1, r9, r0, lsr #4
    6e58:	5cea0000 	stclpl	0, cr0, [sl]
    6e5c:	5ce80000 	stclpl	0, cr0, [r8]
    6e60:	001d0000 	andseq	r0, sp, r0
    6e64:	f2000000 	vhadd.s8	d0, d0, d0
    6e68:	1d000037 	stcne	0, cr0, [r0, #-220]	; 0xffffff24
    6e6c:	00000000 	andeq	r0, r0, r0
    6e70:	00003800 	andeq	r3, r0, r0, lsl #16
    6e74:	42012100 	andmi	r2, r1, #0, 2
    6e78:	01000023 	tsteq	r0, r3, lsr #32
    6e7c:	0110202a 	tsteq	r0, sl, lsr #32
    6e80:	00000119 	andeq	r0, r0, r9, lsl r1
	...
    6e8c:	00005cfd 	strdeq	r5, [r0], -sp
    6e90:	000b9301 	andeq	r9, fp, r1, lsl #6
    6e94:	1dcf1b00 	vstrne	d17, [pc]	; 6e9c <__HEAP_SIZE+0x5e9c>
    6e98:	2a010000 	bcs	46ea0 <__HEAP_SIZE+0x45ea0>
    6e9c:	03a73b20 			; <UNDEFINED> instruction: 0x03a73b20
    6ea0:	5d210000 	stcpl	0, cr0, [r1, #-0]
    6ea4:	5d1d0000 	ldcpl	0, cr0, [sp, #-0]
    6ea8:	531b0000 	tstpl	fp, #0
    6eac:	01000017 	tsteq	r0, r7, lsl r0
    6eb0:	2f3a202b 	svccs	0x003a202b
    6eb4:	4b000001 	blmi	6ec0 <__HEAP_SIZE+0x5ec0>
    6eb8:	3f00005d 	svccc	0x0000005d
    6ebc:	1800005d 	stmdane	r0, {r0, r2, r3, r4, r6}
    6ec0:	0000233c 	andeq	r2, r0, ip, lsr r3
    6ec4:	11202d01 			; <UNDEFINED> instruction: 0x11202d01
    6ec8:	00000666 	andeq	r0, r0, r6, ror #12
    6ecc:	00005d9f 	muleq	r0, pc, sp	; <UNPREDICTABLE>
    6ed0:	00005d9b 	muleq	r0, fp, sp
    6ed4:	001a9318 	andseq	r9, sl, r8, lsl r3
    6ed8:	202e0100 	eorcs	r0, lr, r0, lsl #2
    6edc:	00011914 	andeq	r1, r1, r4, lsl r9
    6ee0:	005dc100 	subseq	ip, sp, r0, lsl #2
    6ee4:	005dbd00 	subseq	fp, sp, r0, lsl #26
    6ee8:	00001d00 	andeq	r1, r0, r0, lsl #26
    6eec:	37f20000 	ldrbcc	r0, [r2, r0]!
    6ef0:	001d0000 	andseq	r0, sp, r0
    6ef4:	00000000 	andeq	r0, r0, r0
    6ef8:	00000038 	andeq	r0, r0, r8, lsr r0
    6efc:	20e90122 	rsccs	r0, r9, r2, lsr #2
    6f00:	b6010000 	strlt	r0, [r1], -r0
    6f04:	00010a1f 	andeq	r0, r1, pc, lsl sl
    6f08:	00000000 	andeq	r0, r0, r0
    6f0c:	e0000000 	and	r0, r0, r0
    6f10:	0100005d 	qaddeq	r0, sp, r0
    6f14:	00000ca5 	andeq	r0, r0, r5, lsr #25
    6f18:	001dc11b 	andseq	ip, sp, fp, lsl r1
    6f1c:	1fb60100 	svcne	0x00b60100
    6f20:	0003a736 	andeq	sl, r3, r6, lsr r7
    6f24:	005e0400 	subseq	r0, lr, r0, lsl #8
    6f28:	005e0000 	subseq	r0, lr, r0
    6f2c:	23ec1b00 	mvncs	r1, #0, 22
    6f30:	b7010000 	strlt	r0, [r1, -r0]
    6f34:	012f351f 			; <UNDEFINED> instruction: 0x012f351f
    6f38:	5e2a0000 	cdppl	0, 2, cr0, cr10, cr0, {0}
    6f3c:	5e220000 	cdppl	0, 2, cr0, cr2, cr0, {0}
    6f40:	6b1b0000 	blvs	6c6f48 <__RAM_SIZE+0x5c6f48>
    6f44:	0100000b 	tsteq	r0, fp
    6f48:	a5361fb8 	ldrge	r1, [r6, #-4024]!	; 0xfffff048
    6f4c:	6700000c 	strvs	r0, [r0, -ip]
    6f50:	6300005e 	movwvs	r0, #94	; 0x5e
    6f54:	1800005e 	stmdane	r0, {r1, r2, r3, r4, r6}
    6f58:	0000233c 	andeq	r2, r0, ip, lsr r3
    6f5c:	111fba01 	tstne	pc, r1, lsl #20
    6f60:	00000666 	andeq	r0, r0, r6, ror #12
    6f64:	00005e89 	andeq	r5, r0, r9, lsl #29
    6f68:	00005e85 	andeq	r5, r0, r5, lsl #29
    6f6c:	00166f18 	andseq	r6, r6, r8, lsl pc
    6f70:	1fbb0100 	svcne	0x00bb0100
    6f74:	0000c311 	andeq	ip, r0, r1, lsl r3
    6f78:	005eab00 	subseq	sl, lr, r0, lsl #22
    6f7c:	005ea700 	subseq	sl, lr, r0, lsl #14
    6f80:	0ca01800 	stceq	8, cr1, [r0]
    6f84:	bc010000 	stclt	0, cr0, [r1], {-0}
    6f88:	012f151f 			; <UNDEFINED> instruction: 0x012f151f
    6f8c:	5ecd0000 	cdppl	0, 12, cr0, cr13, cr0, {0}
    6f90:	5ec90000 	cdppl	0, 12, cr0, cr9, cr0, {0}
    6f94:	70230000 	eorvc	r0, r3, r0
    6f98:	4c000007 	stcmi	0, cr0, [r0], {7}
    6f9c:	1800000c 	stmdane	r0, {r2, r3}
    6fa0:	00000a89 	andeq	r0, r0, r9, lsl #21
    6fa4:	151fee01 	ldrne	lr, [pc, #-3585]	; 61ab <__HEAP_SIZE+0x51ab>
    6fa8:	000006dd 	ldrdeq	r0, [r0], -sp
    6fac:	00005eef 	andeq	r5, r0, pc, ror #29
    6fb0:	00005eeb 	andeq	r5, r0, fp, ror #29
    6fb4:	00001c00 	andeq	r1, r0, r0, lsl #24
    6fb8:	00000000 	andeq	r0, r0, r0
    6fbc:	0c6f0000 	stcleq	0, cr0, [pc], #-0	; 6fc4 <__HEAP_SIZE+0x5fc4>
    6fc0:	55180000 	ldrpl	r0, [r8, #-0]
    6fc4:	0100000a 	tsteq	r0, sl
    6fc8:	91151fef 	tstls	r5, pc, ror #31
    6fcc:	0f000003 	svceq	0x00000003
    6fd0:	0d00005f 	stceq	0, cr0, [r0, #-380]	; 0xfffffe84
    6fd4:	0000005f 	andeq	r0, r0, pc, asr r0
    6fd8:	0000001c 	andeq	r0, r0, ip, lsl r0
    6fdc:	00000000 	andeq	r0, r0, r0
    6fe0:	000c9200 	andeq	r9, ip, r0, lsl #4
    6fe4:	0a551800 	beq	154cfec <__RAM_SIZE+0x144cfec>
    6fe8:	f5010000 			; <UNDEFINED> instruction: 0xf5010000
    6fec:	0391151f 	orrseq	r1, r1, #130023424	; 0x7c00000
    6ff0:	5f240000 	svcpl	0x00240000
    6ff4:	5f220000 	svcpl	0x00220000
    6ff8:	1d000000 	stcne	0, cr0, [r0, #-0]
    6ffc:	00000000 	andeq	r0, r0, r0
    7000:	0000380e 	andeq	r3, r0, lr, lsl #16
    7004:	0000001d 	andeq	r0, r0, sp, lsl r0
    7008:	00381c00 	eorseq	r1, r8, r0, lsl #24
    700c:	04070000 	streq	r0, [r7], #-0
    7010:	00000119 	andeq	r0, r0, r9, lsl r1
    7014:	169a0121 	ldrne	r0, [sl], r1, lsr #2
    7018:	10010000 	andne	r0, r1, r0
    701c:	1901101f 	stmdbne	r1, {r0, r1, r2, r3, r4, ip}
    7020:	00000001 	andeq	r0, r0, r1
    7024:	00000000 	andeq	r0, r0, r0
    7028:	37000000 	strcc	r0, [r0, -r0]
    702c:	0100005f 	qaddeq	r0, pc, r0	; <UNPREDICTABLE>
    7030:	00000e15 	andeq	r0, r0, r5, lsl lr
    7034:	001dc11b 	andseq	ip, sp, fp, lsl r1
    7038:	1f100100 	svcne	0x00100100
    703c:	0003a738 	andeq	sl, r3, r8, lsr r7
    7040:	005f5b00 	subseq	r5, pc, r0, lsl #22
    7044:	005f5700 	subseq	r5, pc, r0, lsl #14
    7048:	23ec1b00 	mvncs	r1, #0, 22
    704c:	11010000 	mrsne	r0, (UNDEF: 1)
    7050:	012f371f 			; <UNDEFINED> instruction: 0x012f371f
    7054:	5f9b0000 	svcpl	0x009b0000
    7058:	5f790000 	svcpl	0x00790000
    705c:	7e1b0000 	cdpvc	0, 1, cr0, cr11, cr0, {0}
    7060:	0100001f 	tsteq	r0, pc, lsl r0
    7064:	d9341f12 	ldmdble	r4!, {r1, r4, r8, r9, sl, fp, ip}
    7068:	82000000 	andhi	r0, r0, #0
    706c:	78000060 	stmdavc	r0, {r5, r6}
    7070:	1b000060 	blne	71f8 <__HEAP_SIZE+0x61f8>
    7074:	00001d37 	andeq	r1, r0, r7, lsr sp
    7078:	391f1301 	ldmdbcc	pc, {r0, r8, r9, ip}	; <UNPREDICTABLE>
    707c:	0000052b 	andeq	r0, r0, fp, lsr #10
    7080:	000060cb 	andeq	r6, r0, fp, asr #1
    7084:	000060c7 	andeq	r6, r0, r7, asr #1
    7088:	001cc11b 	andseq	ip, ip, fp, lsl r1
    708c:	1f140100 	svcne	0x00140100
    7090:	000e1536 	andeq	r1, lr, r6, lsr r5
    7094:	0060f000 	rsbeq	pc, r0, r0
    7098:	0060ec00 	rsbeq	lr, r0, r0, lsl #24
    709c:	0b6b1b00 	bleq	1acdca4 <__RAM_SIZE+0x19cdca4>
    70a0:	15010000 	strne	r0, [r1, #-0]
    70a4:	0ca5381f 	stceq	8, cr3, [r5], #124	; 0x7c
    70a8:	61140000 	tstvs	r4, r0
    70ac:	61100000 	tstvs	r0, r0
    70b0:	3c180000 	ldccc	0, cr0, [r8], {-0}
    70b4:	01000023 	tsteq	r0, r3, lsr #32
    70b8:	66111f17 	sadd16vs	r1, r1, r7
    70bc:	38000006 	stmdacc	r0, {r1, r2}
    70c0:	34000061 	strcc	r0, [r0], #-97	; 0xffffff9f
    70c4:	18000061 	stmdane	r0, {r0, r5, r6}
    70c8:	0000166f 	andeq	r1, r0, pc, ror #12
    70cc:	111f1801 	tstne	pc, r1, lsl #16
    70d0:	000000c3 	andeq	r0, r0, r3, asr #1
    70d4:	0000615a 	andeq	r6, r0, sl, asr r1
    70d8:	00006156 	andeq	r6, r0, r6, asr r1
    70dc:	001a9318 	andseq	r9, sl, r8, lsl r3
    70e0:	1f190100 	svcne	0x00190100
    70e4:	00011914 	andeq	r1, r1, r4, lsl r9
    70e8:	00618000 	rsbeq	r8, r1, r0
    70ec:	00617800 	rsbeq	r7, r1, r0, lsl #16
    70f0:	0ca01800 	stceq	8, cr1, [r0]
    70f4:	1a010000 	bne	470fc <__HEAP_SIZE+0x460fc>
    70f8:	012f151f 			; <UNDEFINED> instruction: 0x012f151f
    70fc:	61ba0000 			; <UNDEFINED> instruction: 0x61ba0000
    7100:	61b60000 			; <UNDEFINED> instruction: 0x61b60000
    7104:	58230000 	stmdapl	r3!, {}	; <UNPREDICTABLE>
    7108:	bc000007 	stclt	0, cr0, [r0], {7}
    710c:	1800000d 	stmdane	r0, {r0, r2, r3}
    7110:	00000a89 	andeq	r0, r0, r9, lsl #21
    7114:	151f7801 	ldrne	r7, [pc, #-2049]	; 691b <__HEAP_SIZE+0x591b>
    7118:	000006dd 	ldrdeq	r0, [r0], -sp
    711c:	000061dc 	ldrdeq	r6, [r0], -ip
    7120:	000061d8 	ldrdeq	r6, [r0], -r8
    7124:	00001c00 	andeq	r1, r0, r0, lsl #24
    7128:	00000000 	andeq	r0, r0, r0
    712c:	0ddf0000 	ldcleq	0, cr0, [pc]	; 7134 <__HEAP_SIZE+0x6134>
    7130:	55180000 	ldrpl	r0, [r8, #-0]
    7134:	0100000a 	tsteq	r0, sl
    7138:	91151f79 	tstls	r5, r9, ror pc
    713c:	fc000003 	stc2	0, cr0, [r0], {3}
    7140:	fa000061 	blx	72cc <__HEAP_SIZE+0x62cc>
    7144:	00000061 	andeq	r0, r0, r1, rrx
    7148:	0000001c 	andeq	r0, r0, ip, lsl r0
    714c:	00000000 	andeq	r0, r0, r0
    7150:	000e0200 	andeq	r0, lr, r0, lsl #4
    7154:	0a551800 	beq	154d15c <__RAM_SIZE+0x144d15c>
    7158:	7f010000 	svcvc	0x00010000
    715c:	0391151f 	orrseq	r1, r1, #130023424	; 0x7c00000
    7160:	62110000 	andsvs	r0, r1, #0
    7164:	620f0000 	andvs	r0, pc, #0
    7168:	1d000000 	stcne	0, cr0, [r0, #-0]
    716c:	00000000 	andeq	r0, r0, r0
    7170:	0000380e 	andeq	r3, r0, lr, lsl #16
    7174:	0000001d 	andeq	r0, r0, sp, lsl r0
    7178:	00381c00 	eorseq	r1, r8, r0, lsl #24
    717c:	04070000 	streq	r0, [r7], #-0
    7180:	000000d9 	ldrdeq	r0, [r0], -r9
    7184:	18050121 	stmdane	r5, {r0, r5, r8}
    7188:	98010000 	stmdals	r1, {}	; <UNPREDICTABLE>
    718c:	1901101e 	stmdbne	r1, {r1, r2, r3, r4, ip}
    7190:	00000001 	andeq	r0, r0, r1
    7194:	00000000 	andeq	r0, r0, r0
    7198:	24000000 	strcs	r0, [r0], #-0
    719c:	01000062 	tsteq	r0, r2, rrx
    71a0:	00000f4a 	andeq	r0, r0, sl, asr #30
    71a4:	001dc11b 	andseq	ip, sp, fp, lsl r1
    71a8:	1e980100 	fmlnee	f0, f0, f0
    71ac:	0003a731 	andeq	sl, r3, r1, lsr r7
    71b0:	00624800 	rsbeq	r4, r2, r0, lsl #16
    71b4:	00624400 	rsbeq	r4, r2, r0, lsl #8
    71b8:	23ec1b00 	mvncs	r1, #0, 22
    71bc:	99010000 	stmdbls	r1, {}	; <UNPREDICTABLE>
    71c0:	012f301e 			; <UNDEFINED> instruction: 0x012f301e
    71c4:	62880000 	addvs	r0, r8, #0
    71c8:	62660000 	rsbvs	r0, r6, #0
    71cc:	7e1b0000 	cdpvc	0, 1, cr0, cr11, cr0, {0}
    71d0:	0100001f 	tsteq	r0, pc, lsl r0
    71d4:	d92d1e9a 	pushle	{r1, r3, r4, r7, r9, sl, fp, ip}
    71d8:	6f000000 	svcvs	0x00000000
    71dc:	65000063 	strvs	r0, [r0, #-99]	; 0xffffff9d
    71e0:	1b000063 	blne	7374 <__HEAP_SIZE+0x6374>
    71e4:	00001d37 	andeq	r1, r0, r7, lsr sp
    71e8:	321e9b01 	andscc	r9, lr, #1024	; 0x400
    71ec:	0000052b 	andeq	r0, r0, fp, lsr #10
    71f0:	000063b8 			; <UNDEFINED> instruction: 0x000063b8
    71f4:	000063b4 			; <UNDEFINED> instruction: 0x000063b4
    71f8:	001cc11b 	andseq	ip, ip, fp, lsl r1
    71fc:	1e9c0100 	fmlnee	f0, f4, f0
    7200:	000e152f 	andeq	r1, lr, pc, lsr #10
    7204:	0063dd00 	rsbeq	sp, r3, r0, lsl #26
    7208:	0063d900 	rsbeq	sp, r3, r0, lsl #18
    720c:	233c1800 	teqcs	ip, #0, 16
    7210:	9e010000 	cdpls	0, 0, cr0, cr1, cr0, {0}
    7214:	0666111e 			; <UNDEFINED> instruction: 0x0666111e
    7218:	64010000 	strvs	r0, [r1], #-0
    721c:	63fd0000 	mvnsvs	r0, #0
    7220:	93180000 	tstls	r8, #0
    7224:	0100001a 	tsteq	r0, sl, lsl r0
    7228:	19141e9f 	ldmdbne	r4, {r0, r1, r2, r3, r4, r7, r9, sl, fp, ip}
    722c:	27000001 	strcs	r0, [r0, -r1]
    7230:	1f000064 	svcne	0x00000064
    7234:	18000064 	stmdane	r0, {r2, r5, r6}
    7238:	0000166f 	andeq	r1, r0, pc, ror #12
    723c:	111ea001 	tstne	lr, r1
    7240:	000000c3 	andeq	r0, r0, r3, asr #1
    7244:	00006463 	andeq	r6, r0, r3, ror #8
    7248:	0000645d 	andeq	r6, r0, sp, asr r4
    724c:	00074023 	andeq	r4, r7, r3, lsr #32
    7250:	000f0200 	andeq	r0, pc, r0, lsl #4
    7254:	0a891800 	beq	fe24d25c <__StackTop+0xc614d25c>
    7258:	e5010000 	str	r0, [r1, #-0]
    725c:	06dd111e 			; <UNDEFINED> instruction: 0x06dd111e
    7260:	64900000 	ldrvs	r0, [r0], #0
    7264:	648c0000 	strvs	r0, [ip], #0
    7268:	1c000000 	stcne	0, cr0, [r0], {-0}
	...
    7274:	00000f25 	andeq	r0, r0, r5, lsr #30
    7278:	000a5518 	andeq	r5, sl, r8, lsl r5
    727c:	1ee60100 	cdpne	1, 14, cr0, cr6, cr0, {0}
    7280:	00039111 	andeq	r9, r3, r1, lsl r1
    7284:	0064b000 	rsbeq	fp, r4, r0
    7288:	0064ae00 	rsbeq	sl, r4, r0, lsl #28
    728c:	001d0000 	andseq	r0, sp, r0
    7290:	f2000000 	vhadd.s8	d0, d0, d0
    7294:	1d000037 	stcne	0, cr0, [r0, #-220]	; 0xffffff24
    7298:	00000000 	andeq	r0, r0, r0
    729c:	00003800 	andeq	r3, r0, r0, lsl #16
    72a0:	0000001d 	andeq	r0, r0, sp, lsl r0
    72a4:	00149100 	andseq	r9, r4, r0, lsl #2
    72a8:	00001d00 	andeq	r1, r0, r0, lsl #26
    72ac:	382a0000 	stmdacc	sl!, {}	; <UNPREDICTABLE>
    72b0:	21000000 	mrscs	r0, (UNDEF: 0)
    72b4:	001ae501 	andseq	lr, sl, r1, lsl #10
    72b8:	1e250100 	sufnes	f0, f5, f0
    72bc:	01190110 	tsteq	r9, r0, lsl r1
	...
    72c8:	64c30000 	strbvs	r0, [r3], #0
    72cc:	7d010000 	stcvc	0, cr0, [r1, #-0]
    72d0:	1b000010 	blne	7318 <__HEAP_SIZE+0x6318>
    72d4:	00002484 	andeq	r2, r0, r4, lsl #9
    72d8:	341e2501 	ldrcc	r2, [lr], #-1281	; 0xfffffaff
    72dc:	0000012f 	andeq	r0, r0, pc, lsr #2
    72e0:	000064eb 	andeq	r6, r0, fp, ror #9
    72e4:	000064e3 	andeq	r6, r0, r3, ror #9
    72e8:	0018901b 	andseq	r9, r8, fp, lsl r0
    72ec:	1e260100 	sufnes	f0, f6, f0
    72f0:	0000d931 	andeq	sp, r0, r1, lsr r9
    72f4:	00652600 	rsbeq	r2, r5, r0, lsl #12
    72f8:	00652200 	rsbeq	r2, r5, r0, lsl #4
    72fc:	15651b00 	strbne	r1, [r5, #-2816]!	; 0xfffff500
    7300:	27010000 	strcs	r0, [r1, -r0]
    7304:	00d9311e 	sbcseq	r3, r9, lr, lsl r1
    7308:	654e0000 	strbvs	r0, [lr, #-0]
    730c:	65440000 	strbvs	r0, [r4, #-0]
    7310:	061b0000 	ldreq	r0, [fp], -r0
    7314:	01000020 	tsteq	r0, r0, lsr #32
    7318:	15331e28 	ldrne	r1, [r3, #-3624]!	; 0xfffff1d8
    731c:	9d00000e 	stcls	0, cr0, [r0, #-56]	; 0xffffffc8
    7320:	93000065 	movwls	r0, #101	; 0x65
    7324:	1b000065 	blne	74c0 <__HEAP_SIZE+0x64c0>
    7328:	0000215b 	andeq	r2, r0, fp, asr r1
    732c:	331e2901 	tstcc	lr, #16384	; 0x4000
    7330:	0000014a 	andeq	r0, r0, sl, asr #2
    7334:	000065e6 	andeq	r6, r0, r6, ror #11
    7338:	000065e2 	andeq	r6, r0, r2, ror #11
    733c:	001a9318 	andseq	r9, sl, r8, lsl r3
    7340:	1e2b0100 	sufnee	f0, f3, f0
    7344:	00011914 	andeq	r1, r1, r4, lsl r9
    7348:	00660a00 	rsbeq	r0, r6, r0, lsl #20
    734c:	00660600 	rsbeq	r0, r6, r0, lsl #12
    7350:	21cd1800 	biccs	r1, sp, r0, lsl #16
    7354:	2b010000 	blcs	4735c <__HEAP_SIZE+0x4635c>
    7358:	01191d1e 	tsteq	r9, lr, lsl sp
    735c:	662d0000 	strtvs	r0, [sp], -r0
    7360:	66290000 	strtvs	r0, [r9], -r0
    7364:	c8180000 	ldmdagt	r8, {}	; <UNPREDICTABLE>
    7368:	0100001e 	tsteq	r0, lr, lsl r0
    736c:	192e1e2b 	stmdbne	lr!, {r0, r1, r3, r5, r9, sl, fp, ip}
    7370:	51000001 	tstpl	r0, r1
    7374:	4b000066 	blmi	7514 <__HEAP_SIZE+0x6514>
    7378:	1d000066 	stcne	0, cr0, [r0, #-408]	; 0xfffffe68
    737c:	00000000 	andeq	r0, r0, r0
    7380:	00002628 	andeq	r2, r0, r8, lsr #12
    7384:	0000001d 	andeq	r0, r0, sp, lsl r0
    7388:	0037f200 	eorseq	pc, r7, r0, lsl #4
    738c:	00001d00 	andeq	r1, r0, r0, lsl #26
    7390:	38000000 	stmdacc	r0, {}	; <UNPREDICTABLE>
    7394:	001d0000 	andseq	r0, sp, r0
    7398:	cf000000 	svcgt	0x00000000
    739c:	1d000024 	stcne	0, cr0, [r0, #-144]	; 0xffffff70
    73a0:	00000000 	andeq	r0, r0, r0
    73a4:	000037f2 	strdeq	r3, [r0], -r2
    73a8:	0000001d 	andeq	r0, r0, sp, lsl r0
    73ac:	00380000 	eorseq	r0, r8, r0
    73b0:	00001d00 	andeq	r1, r0, r0, lsl #26
    73b4:	38000000 	stmdacc	r0, {}	; <UNPREDICTABLE>
    73b8:	001d0000 	andseq	r0, sp, r0
    73bc:	00000000 	andeq	r0, r0, r0
    73c0:	1e000038 	mcrne	0, 0, r0, cr0, cr8, {1}
    73c4:	00000000 	andeq	r0, r0, r0
    73c8:	00000986 	andeq	r0, r0, r6, lsl #19
    73cc:	00001073 	andeq	r1, r0, r3, ror r0
    73d0:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    73d4:	011f0077 	tsteq	pc, r7, ror r0	; <UNPREDICTABLE>
    73d8:	00310151 	eorseq	r0, r1, r1, asr r1
    73dc:	0000001d 	andeq	r0, r0, sp, lsl r0
    73e0:	00382a00 	eorseq	r2, r8, r0, lsl #20
    73e4:	01210000 			; <UNDEFINED> instruction: 0x01210000
    73e8:	00001b36 	andeq	r1, r0, r6, lsr fp
    73ec:	0e1dbe01 	cdpeq	14, 1, cr11, cr13, cr1, {0}
    73f0:	0000d901 	andeq	sp, r0, r1, lsl #18
	...
    73fc:	00667d00 	rsbeq	r7, r6, r0, lsl #26
    7400:	11860100 	orrne	r0, r6, r0, lsl #2
    7404:	841b0000 	ldrhi	r0, [fp], #-0
    7408:	01000024 	tsteq	r0, r4, lsr #32
    740c:	2f331dbe 	svccs	0x00331dbe
    7410:	a5000001 	strge	r0, [r0, #-1]
    7414:	9d000066 	stcls	0, cr0, [r0, #-408]	; 0xfffffe68
    7418:	1b000066 	blne	75b8 <__HEAP_SIZE+0x65b8>
    741c:	00001827 	andeq	r1, r0, r7, lsr #16
    7420:	321dbf01 	andscc	fp, sp, #1, 30
    7424:	00000119 	andeq	r0, r0, r9, lsl r1
    7428:	000066e0 	andeq	r6, r0, r0, ror #13
    742c:	000066dc 	ldrdeq	r6, [r0], -ip
    7430:	00215b1b 	eoreq	r5, r1, fp, lsl fp
    7434:	1dc00100 	stfnee	f0, [r0]
    7438:	00014a32 	andeq	r4, r1, r2, lsr sl
    743c:	00670c00 	rsbeq	r0, r7, r0, lsl #24
    7440:	0066fe00 	rsbeq	pc, r6, r0, lsl #28
    7444:	24621800 	strbtcs	r1, [r2], #-2048	; 0xfffff800
    7448:	c2010000 	andgt	r0, r1, #0
    744c:	00d9121d 	sbcseq	r1, r9, sp, lsl r2
    7450:	676e0000 	strbvs	r0, [lr, -r0]!
    7454:	676a0000 	strbvs	r0, [sl, -r0]!
    7458:	cd180000 	ldcgt	0, cr0, [r8, #-0]
    745c:	01000021 	tsteq	r0, r1, lsr #32
    7460:	19141dc3 	ldmdbne	r4, {r0, r1, r6, r7, r8, sl, fp, ip}
    7464:	90000001 	andls	r0, r0, r1
    7468:	8c000067 	stchi	0, cr0, [r0], {103}	; 0x67
    746c:	18000067 	stmdane	r0, {r0, r1, r2, r5, r6}
    7470:	00001ec8 	andeq	r1, r0, r8, asr #29
    7474:	251dc301 	ldrcs	ip, [sp, #-769]	; 0xfffffcff
    7478:	00000119 	andeq	r0, r0, r9, lsl r1
    747c:	000067b4 			; <UNDEFINED> instruction: 0x000067b4
    7480:	000067ae 	andeq	r6, r0, lr, lsr #15
    7484:	0000001d 	andeq	r0, r0, sp, lsl r0
    7488:	00262800 	eoreq	r2, r6, r0, lsl #16
    748c:	00001d00 	andeq	r1, r0, r0, lsl #26
    7490:	37f20000 	ldrbcc	r0, [r2, r0]!
    7494:	001d0000 	andseq	r0, sp, r0
    7498:	00000000 	andeq	r0, r0, r0
    749c:	1d000038 	stcne	0, cr0, [r0, #-224]	; 0xffffff20
    74a0:	00000000 	andeq	r0, r0, r0
    74a4:	000024cf 	andeq	r2, r0, pc, asr #9
    74a8:	0000001d 	andeq	r0, r0, sp, lsl r0
    74ac:	0037f200 	eorseq	pc, r7, r0, lsl #4
    74b0:	00001d00 	andeq	r1, r0, r0, lsl #26
    74b4:	38000000 	stmdacc	r0, {}	; <UNPREDICTABLE>
    74b8:	001d0000 	andseq	r0, sp, r0
    74bc:	00000000 	andeq	r0, r0, r0
    74c0:	1d000038 	stcne	0, cr0, [r0, #-224]	; 0xffffff20
    74c4:	00000000 	andeq	r0, r0, r0
    74c8:	00003800 	andeq	r3, r0, r0, lsl #16
    74cc:	0000001e 	andeq	r0, r0, lr, lsl r0
    74d0:	00098600 	andeq	r8, r9, r0, lsl #12
    74d4:	00117c00 	andseq	r7, r1, r0, lsl #24
    74d8:	50011f00 	andpl	r1, r1, r0, lsl #30
    74dc:	1f007502 	svcne	0x00007502
    74e0:	31015101 	tstcc	r1, r1, lsl #2
    74e4:	00001d00 	andeq	r1, r0, r0, lsl #26
    74e8:	382a0000 	stmdacc	sl!, {}	; <UNPREDICTABLE>
    74ec:	24000000 	strcs	r0, [r0], #-0
    74f0:	000eaa01 	andeq	sl, lr, r1, lsl #20
    74f4:	1da50100 	stfnes	f0, [r5]
    74f8:	03a70112 			; <UNDEFINED> instruction: 0x03a70112
	...
    7504:	7d020000 	stcvc	0, cr0, [r2, #-0]
    7508:	11bb0100 			; <UNDEFINED> instruction: 0x11bb0100
    750c:	3c180000 	ldccc	0, cr0, [r8], {-0}
    7510:	01000023 	tsteq	r0, r3, lsr #32
    7514:	66111da7 	ldrvs	r1, [r1], -r7, lsr #27
    7518:	e2000006 	and	r0, r0, #6
    751c:	e0000067 	and	r0, r0, r7, rrx
    7520:	00000067 	andeq	r0, r0, r7, rrx
    7524:	1d3f0124 	ldfnes	f0, [pc, #-144]!	; 749c <__HEAP_SIZE+0x649c>
    7528:	91010000 	mrsls	r0, (UNDEF: 1)
    752c:	4a010c1d 	bmi	4a5a8 <__HEAP_SIZE+0x495a8>
    7530:	00000001 	andeq	r0, r0, r1
    7534:	00000000 	andeq	r0, r0, r0
    7538:	02000000 	andeq	r0, r0, #0
    753c:	f001007d 			; <UNDEFINED> instruction: 0xf001007d
    7540:	18000011 	stmdane	r0, {r0, r4}
    7544:	00000c7f 	andeq	r0, r0, pc, ror ip
    7548:	101d9301 	andsne	r9, sp, r1, lsl #6
    754c:	0000014a 	andeq	r0, r0, sl, asr #2
    7550:	000067f7 	strdeq	r6, [r0], -r7
    7554:	000067f5 	strdeq	r6, [r0], -r5
    7558:	3f012200 	svccc	0x00012200
    755c:	01000013 	tsteq	r0, r3, lsl r0
    7560:	010a1a79 	tsteq	sl, r9, ror sl
	...
    756c:	0000680a 	andeq	r6, r0, sl, lsl #16
    7570:	0012b701 	andseq	fp, r2, r1, lsl #14
    7574:	1f441b00 	svcne	0x00441b00
    7578:	79010000 	stmdbvc	r1, {}	; <UNPREDICTABLE>
    757c:	03b3421a 			; <UNDEFINED> instruction: 0x03b3421a
    7580:	68400000 	stmdavs	r0, {}^	; <UNPREDICTABLE>
    7584:	68360000 	ldmdavs	r6!, {}	; <UNPREDICTABLE>
    7588:	ab1b0000 	blge	6c7590 <__RAM_SIZE+0x5c7590>
    758c:	0100001e 	tsteq	r0, lr, lsl r0
    7590:	2f3b1a7a 	svccs	0x003b1a7a
    7594:	85000001 	strhi	r0, [r0, #-1]
    7598:	7f000068 	svcvc	0x00000068
    759c:	18000068 	stmdane	r0, {r3, r5, r6}
    75a0:	0000233c 	andeq	r2, r0, ip, lsr r3
    75a4:	171a7c01 	ldrne	r7, [sl, -r1, lsl #24]
    75a8:	00000671 	andeq	r0, r0, r1, ror r6
    75ac:	000068bb 			; <UNDEFINED> instruction: 0x000068bb
    75b0:	000068b1 			; <UNDEFINED> instruction: 0x000068b1
    75b4:	00218e18 	eoreq	r8, r1, r8, lsl lr
    75b8:	1a7d0100 	bne	1f479c0 <__RAM_SIZE+0x1e479c0>
    75bc:	00012f15 	andeq	r2, r1, r5, lsl pc
    75c0:	0068fc00 	rsbeq	pc, r8, r0, lsl #24
    75c4:	0068fa00 	rsbeq	pc, r8, r0, lsl #20
    75c8:	1e4a1800 	cdpne	8, 4, cr1, cr10, cr0, {0}
    75cc:	7d010000 	stcvc	0, cr0, [r1, #-0]
    75d0:	012f2c1a 			; <UNDEFINED> instruction: 0x012f2c1a
    75d4:	69170000 	ldmdbvs	r7, {}	; <UNPREDICTABLE>
    75d8:	690f0000 	stmdbvs	pc, {}	; <UNPREDICTABLE>
    75dc:	52250000 	eorpl	r0, r5, #0
    75e0:	01000015 	tsteq	r0, r5, lsl r0
    75e4:	451b1a7e 	ldrmi	r1, [fp, #-2686]	; 0xfffff582
    75e8:	01000001 	tsteq	r0, r1
    75ec:	0000001c 	andeq	r0, r0, ip, lsl r0
    75f0:	00000000 	andeq	r0, r0, r0
    75f4:	0012a600 	andseq	sl, r2, r0, lsl #12
    75f8:	0a551800 	beq	154d600 <__RAM_SIZE+0x144d600>
    75fc:	c9010000 	stmdbgt	r1, {}	; <UNPREDICTABLE>
    7600:	0391191a 	orrseq	r1, r1, #425984	; 0x68000
    7604:	694f0000 	stmdbvs	pc, {}^	; <UNPREDICTABLE>
    7608:	694d0000 	stmdbvs	sp, {}^	; <UNPREDICTABLE>
    760c:	20000000 	andcs	r0, r0, r0
    7610:	00000000 	andeq	r0, r0, r0
    7614:	000037d4 	ldrdeq	r3, [r0], -r4
    7618:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    761c:	00000075 	andeq	r0, r0, r5, ror r0
    7620:	0f2d0121 	svceq	0x002d0121
    7624:	1b010000 	blne	4762c <__HEAP_SIZE+0x4662c>
    7628:	1901101a 	stmdbne	r1, {r1, r3, r4, ip}
    762c:	50000001 	andpl	r0, r0, r1
    7630:	d010002e 	andsle	r0, r0, lr, lsr #32
    7634:	6210002e 	andsvs	r0, r0, #46	; 0x2e
    7638:	01000069 	tsteq	r0, r9, rrx
    763c:	0000134a 	andeq	r1, r0, sl, asr #6
    7640:	001f441b 	andseq	r4, pc, fp, lsl r4	; <UNPREDICTABLE>
    7644:	1a1b0100 	bne	6c7a4c <__RAM_SIZE+0x5c7a4c>
    7648:	0003b33c 	andeq	fp, r3, ip, lsr r3
    764c:	0069aa00 	rsbeq	sl, r9, r0, lsl #20
    7650:	00699a00 	rsbeq	r9, r9, r0, lsl #20
    7654:	233c1800 	teqcs	ip, #0, 16
    7658:	1d010000 	stcne	0, cr0, [r1, #-0]
    765c:	0671171a 			; <UNDEFINED> instruction: 0x0671171a
    7660:	6a1d0000 	bvs	747668 <__RAM_SIZE+0x647668>
    7664:	6a0d0000 	bvs	34766c <__RAM_SIZE+0x24766c>
    7668:	93180000 	tstls	r8, #0
    766c:	0100001a 	tsteq	r0, sl, lsl r0
    7670:	19141a1e 	ldmdbne	r4, {r1, r2, r3, r4, r9, fp, ip}
    7674:	88000001 	stmdahi	r0, {r0}
    7678:	8000006a 	andhi	r0, r0, sl, rrx
    767c:	1c00006a 	stcne	0, cr0, [r0], {106}	; 0x6a
    7680:	10002e8a 	andne	r2, r0, sl, lsl #29
    7684:	10002eba 			; <UNDEFINED> instruction: 0x10002eba
    7688:	00001339 	andeq	r1, r0, r9, lsr r3
    768c:	000a5518 	andeq	r5, sl, r8, lsl r5
    7690:	1a4a0100 	bne	1287a98 <__RAM_SIZE+0x1187a98>
    7694:	00039115 	andeq	r9, r3, r5, lsl r1
    7698:	006ac200 	rsbeq	ip, sl, r0, lsl #4
    769c:	006ac000 	rsbeq	ip, sl, r0
    76a0:	74200000 	strtvc	r0, [r0], #-0
    76a4:	d410002e 	ldrle	r0, [r0], #-46	; 0xffffffd2
    76a8:	1f000037 	svcne	0x00000037
    76ac:	75025001 	strvc	r5, [r2, #-1]
    76b0:	21000000 	mrscs	r0, (UNDEF: 0)
    76b4:	0012c101 	andseq	ip, r2, r1, lsl #2
    76b8:	19b40100 	ldmibne	r4!, {r8}
    76bc:	01190110 	tsteq	r9, r0, lsl r1
	...
    76c8:	6ad50000 	bvs	ff5476d0 <__StackTop+0xc74476d0>
    76cc:	dd010000 	stcle	0, cr0, [r1, #-0]
    76d0:	1b000013 	blne	7724 <__HEAP_SIZE+0x6724>
    76d4:	00001f44 	andeq	r1, r0, r4, asr #30
    76d8:	3919b401 	ldmdbcc	r9, {r0, sl, ip, sp, pc}
    76dc:	000003b3 			; <UNDEFINED> instruction: 0x000003b3
    76e0:	00006b21 	andeq	r6, r0, r1, lsr #22
    76e4:	00006b0d 	andeq	r6, r0, sp, lsl #22
    76e8:	00207a18 	eoreq	r7, r0, r8, lsl sl
    76ec:	19b60100 	ldmibne	r6!, {r8}
    76f0:	00067117 	andeq	r7, r6, r7, lsl r1
    76f4:	006bae00 	rsbeq	sl, fp, r0, lsl #28
    76f8:	006b9a00 	rsbeq	r9, fp, r0, lsl #20
    76fc:	1a931800 	bne	fe4cd704 <__StackTop+0xc63cd704>
    7700:	b7010000 	strlt	r0, [r1, -r0]
    7704:	01191419 	tsteq	r9, r9, lsl r4
    7708:	6c2d0000 	stcvs	0, cr0, [sp], #-0
    770c:	6c270000 	stcvs	0, cr0, [r7], #-0
    7710:	001c0000 	andseq	r0, ip, r0
    7714:	00000000 	andeq	r0, r0, r0
    7718:	cc000000 	stcgt	0, cr0, [r0], {-0}
    771c:	18000013 	stmdane	r0, {r0, r1, r4}
    7720:	00000a55 	andeq	r0, r0, r5, asr sl
    7724:	1519e201 	ldrne	lr, [r9, #-513]	; 0xfffffdff
    7728:	00000391 	muleq	r0, r1, r3
    772c:	00006c5b 	andeq	r6, r0, fp, asr ip
    7730:	00006c59 	andeq	r6, r0, r9, asr ip
    7734:	00002000 	andeq	r2, r0, r0
    7738:	37d40000 	ldrbcc	r0, [r4, r0]
    773c:	011f0000 	tsteq	pc, r0
    7740:	00750250 	rsbseq	r0, r5, r0, asr r2
    7744:	01240000 			; <UNDEFINED> instruction: 0x01240000
    7748:	00001579 	andeq	r1, r0, r9, ror r5
    774c:	10198c01 	andsne	r8, r9, r1, lsl #24
    7750:	00011901 	andeq	r1, r1, r1, lsl #18
	...
    775c:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    7760:	00141201 	andseq	r1, r4, r1, lsl #4
    7764:	1a931800 	bne	fe4cd76c <__StackTop+0xc63cd76c>
    7768:	8e010000 	cdphi	0, 0, cr0, cr1, cr0, {0}
    776c:	01191419 	tsteq	r9, r9, lsl r4
    7770:	6c700000 	ldclvs	0, cr0, [r0], #-0
    7774:	6c6e0000 	stclvs	0, cr0, [lr], #-0
    7778:	24000000 	strcs	r0, [r0], #-0
    777c:	00228f01 	eoreq	r8, r2, r1, lsl #30
    7780:	19730100 	ldmdbne	r3!, {r8}^
    7784:	03a70112 			; <UNDEFINED> instruction: 0x03a70112
	...
    7790:	7d020000 	stcvc	0, cr0, [r2, #-0]
    7794:	145c0100 	ldrbne	r0, [ip], #-256	; 0xffffff00
    7798:	8f1b0000 	svchi	0x001b0000
    779c:	01000014 	tsteq	r0, r4, lsl r0
    77a0:	193f1973 	ldmdbne	pc!, {r0, r1, r4, r5, r6, r8, fp, ip}	; <UNPREDICTABLE>
    77a4:	8c000001 	stchi	0, cr0, [r0], {1}
    77a8:	8400006c 	strhi	r0, [r0], #-108	; 0xffffff94
    77ac:	1800006c 	stmdane	r0, {r2, r3, r5, r6}
    77b0:	00001a93 	muleq	r0, r3, sl
    77b4:	16197501 	ldrne	r7, [r9], -r1, lsl #10
    77b8:	000003a7 	andeq	r0, r0, r7, lsr #7
    77bc:	00006ccc 	andeq	r6, r0, ip, asr #25
    77c0:	00006cc6 	andeq	r6, r0, r6, asr #25
    77c4:	6b012400 	blvs	507cc <__HEAP_SIZE+0x4f7cc>
    77c8:	01000013 	tsteq	r0, r3, lsl r0
    77cc:	01161950 	tsteq	r6, r0, asr r9
    77d0:	000003a7 	andeq	r0, r0, r7, lsr #7
	...
    77dc:	01007d02 	tsteq	r0, r2, lsl #26
    77e0:	00001491 	muleq	r0, r1, r4
    77e4:	001a9318 	andseq	r9, sl, r8, lsl r3
    77e8:	19520100 	ldmdbne	r2, {r8}^
    77ec:	0003a71a 	andeq	sl, r3, sl, lsl r7
    77f0:	006cf900 	rsbeq	pc, ip, r0, lsl #18
    77f4:	006cf700 	rsbeq	pc, ip, r0, lsl #14
    77f8:	88260000 	stmdahi	r6!, {}	; <UNPREDICTABLE>
    77fc:	0100001c 	tsteq	r0, ip, lsl r0
    7800:	010d1938 	tsteq	sp, r8, lsr r9
    7804:	10002460 	andne	r2, r0, r0, ror #8
    7808:	10002488 	andne	r2, r0, r8, lsl #9
    780c:	01007d02 	tsteq	r0, r2, lsl #26
    7810:	0021aa1a 	eoreq	sl, r1, sl, lsl sl
    7814:	19030100 	stmdbne	r3, {r8}
    7818:	26f60111 	usatcs	r0, #22, r1, lsl #2
    781c:	271a1000 	ldrcs	r1, [sl, -r0]
    7820:	6d0c1000 	stcvs	0, cr1, [ip, #-0]
    7824:	fe010000 	cdp2	0, 0, cr0, cr1, cr0, {0}
    7828:	1b000014 	blne	7880 <__HEAP_SIZE+0x6880>
    782c:	0000233c 	andeq	r2, r0, ip, lsr r3
    7830:	27190301 	ldrcs	r0, [r9, -r1, lsl #6]
    7834:	00000666 	andeq	r0, r0, r6, ror #12
    7838:	00006d38 	andeq	r6, r0, r8, lsr sp
    783c:	00006d2c 	andeq	r6, r0, ip, lsr #26
    7840:	00270c1d 	eoreq	r0, r7, sp, lsl ip
    7844:	00383810 	eorseq	r3, r8, r0, lsl r8
    7848:	27121e00 	ldrcs	r1, [r2, -r0, lsl #28]
    784c:	38381000 	ldmdacc	r8!, {ip}
    7850:	14f40000 	ldrbtne	r0, [r4], #0
    7854:	011f0000 	tsteq	pc, r0
    7858:	00740250 	rsbseq	r0, r4, r0, asr r2
    785c:	27181d00 	ldrcs	r1, [r8, -r0, lsl #26]
    7860:	38381000 	ldmdacc	r8!, {ip}
    7864:	21000000 	mrscs	r0, (UNDEF: 0)
    7868:	00193b01 	andseq	r3, r9, r1, lsl #22
    786c:	18e30100 	stmiane	r3!, {r8}^
    7870:	012f0111 			; <UNDEFINED> instruction: 0x012f0111
	...
    787c:	6d820000 	stcvs	0, cr0, [r2]
    7880:	7c010000 	stcvc	0, cr0, [r1], {-0}
    7884:	1b000015 	blne	78e0 <__HEAP_SIZE+0x68e0>
    7888:	00001dcf 	andeq	r1, r0, pc, asr #27
    788c:	3b18e301 	blcc	640498 <__RAM_SIZE+0x540498>
    7890:	000003a7 	andeq	r0, r0, r7, lsr #7
    7894:	00006da6 	andeq	r6, r0, r6, lsr #27
    7898:	00006da2 	andeq	r6, r0, r2, lsr #27
    789c:	00233c18 	eoreq	r3, r3, r8, lsl ip
    78a0:	18e50100 	stmiane	r5!, {r8}^
    78a4:	00066611 	andeq	r6, r6, r1, lsl r6
    78a8:	006dc600 	rsbeq	ip, sp, r0, lsl #12
    78ac:	006dc400 	rsbeq	ip, sp, r0, lsl #8
    78b0:	206c1800 	rsbcs	r1, ip, r0, lsl #16
    78b4:	e6010000 	str	r0, [r1], -r0
    78b8:	01601318 	cmneq	r0, r8, lsl r3
    78bc:	6ddb0000 	ldclvs	0, cr0, [fp]
    78c0:	6dd90000 	ldclvs	0, cr0, [r9]
    78c4:	7f180000 	svcvc	0x00180000
    78c8:	0100000c 	tsteq	r0, ip
    78cc:	2f1518e7 	svccs	0x001518e7
    78d0:	f1000001 	cps	#1
    78d4:	ef00006d 	svc	0x0000006d
    78d8:	1d00006d 	stcne	0, cr0, [r0, #-436]	; 0xfffffe4c
    78dc:	00000000 	andeq	r0, r0, r0
    78e0:	0000157c 	andeq	r1, r0, ip, ror r5
    78e4:	22062700 	andcs	r2, r6, #0, 14
    78e8:	a3010000 	movwge	r0, #4096	; 0x1000
    78ec:	29012318 	stmdbcs	r1, {r3, r4, r8, r9, sp}
	...
    78f8:	02000000 	andeq	r0, r0, #0
    78fc:	c501007d 	strgt	r0, [r1, #-125]	; 0xffffff83
    7900:	1b000015 	blne	795c <__HEAP_SIZE+0x695c>
    7904:	000016c3 	andeq	r1, r0, r3, asr #13
    7908:	4f18a301 	svcmi	0x0018a301
    790c:	000015c5 	andeq	r1, r0, r5, asr #11
    7910:	00006e08 	andeq	r6, r0, r8, lsl #28
    7914:	00006e04 	andeq	r6, r0, r4, lsl #28
    7918:	00204d18 	eoreq	r4, r0, r8, lsl sp
    791c:	18a50100 	stmiane	r5!, {r8}
    7920:	00002920 	andeq	r2, r0, r0, lsr #18
    7924:	006e2e00 	rsbeq	r2, lr, r0, lsl #28
    7928:	006e2600 	rsbeq	r2, lr, r0, lsl #12
    792c:	04070000 	streq	r0, [r7], #-0
    7930:	000000d4 	ldrdeq	r0, [r0], -r4
    7934:	00242c1a 	eoreq	r2, r4, sl, lsl ip
    7938:	179b0100 	ldrne	r0, [fp, r0, lsl #2]
    793c:	271c010d 	ldrcs	r0, [ip, -sp, lsl #2]
    7940:	27681000 	strbcs	r1, [r8, -r0]!
    7944:	6e671000 	cdpvs	0, 6, cr1, cr7, cr0, {0}
    7948:	38010000 	stmdacc	r1, {}	; <UNPREDICTABLE>
    794c:	28000016 	stmdacs	r0, {r1, r2, r4}
    7950:	00000510 	andeq	r0, r0, r0, lsl r5
    7954:	00233c18 	eoreq	r3, r3, r8, lsl ip
    7958:	17a10100 	strne	r0, [r1, r0, lsl #2]!
    795c:	00066611 	andeq	r6, r6, r1, lsl r6
    7960:	006e9500 	rsbeq	r9, lr, r0, lsl #10
    7964:	006e9300 	rsbeq	r9, lr, r0, lsl #6
    7968:	27281d00 	strcs	r1, [r8, -r0, lsl #26]!
    796c:	37f21000 	ldrbcc	r1, [r2, r0]!
    7970:	341e0000 	ldrcc	r0, [lr], #-0
    7974:	d4100027 	ldrle	r0, [r0], #-39	; 0xffffffd9
    7978:	1d000037 	stcne	0, cr0, [r0, #-220]	; 0xffffff24
    797c:	1f000016 	svcne	0x00000016
    7980:	74025001 	strvc	r5, [r2], #-1
    7984:	481d0004 	ldmdami	sp, {r2}
    7988:	00100027 	andseq	r0, r0, r7, lsr #32
    798c:	20000038 	andcs	r0, r0, r8, lsr r0
    7990:	1000274e 	andne	r2, r0, lr, asr #14
    7994:	000014a7 	andeq	r1, r0, r7, lsr #9
    7998:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    799c:	00000074 	andeq	r0, r0, r4, ror r0
    79a0:	23c81a00 	biccs	r1, r8, #0, 20
    79a4:	7b010000 	blvc	479ac <__HEAP_SIZE+0x469ac>
    79a8:	70010d17 	andvc	r0, r1, r7, lsl sp
    79ac:	d8100025 	ldmdale	r0, {r0, r2, r5}
    79b0:	a8100025 	ldmdage	r0, {r0, r2, r5}
    79b4:	0100006e 	tsteq	r0, lr, rrx
    79b8:	000016f3 	strdeq	r1, [r0], -r3
    79bc:	0014ec18 	andseq	lr, r4, r8, lsl ip
    79c0:	177d0100 	ldrbne	r0, [sp, -r0, lsl #2]!
    79c4:	00012f11 	andeq	r2, r1, r1, lsl pc
    79c8:	006ecc00 	rsbeq	ip, lr, r0, lsl #24
    79cc:	006ec800 	rsbeq	ip, lr, r0, lsl #16
    79d0:	25841e00 	strcs	r1, [r4, #3584]	; 0xe00
    79d4:	38461000 	stmdacc	r6, {ip}^
    79d8:	16890000 	strne	r0, [r9], r0
    79dc:	011f0000 	tsteq	pc, r0
    79e0:	00740f50 	rsbseq	r0, r4, r0, asr pc
    79e4:	00742433 	rsbseq	r2, r4, r3, lsr r4
    79e8:	0324321c 			; <UNDEFINED> instruction: 0x0324321c
    79ec:	380085c4 	stmdacc	r0, {r2, r6, r7, r8, sl, pc}
    79f0:	921e0022 	andsls	r0, lr, #34	; 0x22
    79f4:	46100025 	ldrmi	r0, [r0], -r5, lsr #32
    79f8:	9d000038 	stcls	0, cr0, [r0, #-224]	; 0xffffff20
    79fc:	1f000016 	svcne	0x00000016
    7a00:	75025001 	strvc	r5, [r2, #-1]
    7a04:	9a1e0000 	bls	787a0c <__RAM_SIZE+0x687a0c>
    7a08:	46100025 	ldrmi	r0, [r0], -r5, lsr #32
    7a0c:	b1000038 	tstlt	r0, r8, lsr r0
    7a10:	1f000016 	svcne	0x00000016
    7a14:	74025001 	strvc	r5, [r2], #-1
    7a18:	a01e0000 	andsge	r0, lr, r0
    7a1c:	46100025 	ldrmi	r0, [r0], -r5, lsr #32
    7a20:	c8000038 	stmdagt	r0, {r3, r4, r5}
    7a24:	1f000016 	svcne	0x00000016
    7a28:	03055001 	movweq	r5, #20481	; 0x5001
    7a2c:	38008af8 	stmdacc	r0, {r3, r4, r5, r6, r7, r9, fp, pc}
    7a30:	25a61e00 	strcs	r1, [r6, #3584]!	; 0xe00
    7a34:	38461000 	stmdacc	r6, {ip}^
    7a38:	16df0000 	ldrbne	r0, [pc], r0
    7a3c:	011f0000 	tsteq	pc, r0
    7a40:	34030550 	strcc	r0, [r3], #-1360	; 0xfffffab0
    7a44:	0038008b 	eorseq	r0, r8, fp, lsl #1
    7a48:	0025ac20 	eoreq	sl, r5, r0, lsr #24
    7a4c:	00384610 	eorseq	r4, r8, r0, lsl r6
    7a50:	50011f00 	andpl	r1, r1, r0, lsl #30
    7a54:	8b180305 	blhi	608670 <__RAM_SIZE+0x508670>
    7a58:	00003800 	andeq	r3, r0, r0, lsl #16
    7a5c:	1a660124 	bne	1987ef4 <__RAM_SIZE+0x1887ef4>
    7a60:	fc010000 	stc2	0, cr0, [r1], {-0}
    7a64:	e7011616 	smlad	r1, r6, r6, r1
    7a68:	08000005 	stmdaeq	r0, {r0, r2}
    7a6c:	5010002e 	andspl	r0, r0, lr, lsr #32
    7a70:	0210002e 	andseq	r0, r0, #46	; 0x2e
    7a74:	3601007d 			; <UNDEFINED> instruction: 0x3601007d
    7a78:	25000017 	strcs	r0, [r0, #-23]	; 0xffffffe9
    7a7c:	0000226f 	andeq	r2, r0, pc, ror #4
    7a80:	1f170001 	svcne	0x00170001
    7a84:	00000145 	andeq	r0, r0, r5, asr #2
    7a88:	173d1801 	ldrne	r1, [sp, -r1, lsl #16]!
    7a8c:	03010000 	movweq	r0, #4096	; 0x1000
    7a90:	05e71a17 	strbeq	r1, [r7, #2583]!	; 0xa17
    7a94:	6eef0000 	cdpvs	0, 14, cr0, cr15, cr0, {0}
    7a98:	6eeb0000 	cdpvs	0, 14, cr0, cr11, cr0, {0}
    7a9c:	1a000000 	bne	7aa4 <__HEAP_SIZE+0x6aa4>
    7aa0:	00001b09 	andeq	r1, r0, r9, lsl #22
    7aa4:	08167401 	ldmdaeq	r6, {r0, sl, ip, sp, lr}
    7aa8:	002b7001 	eoreq	r7, fp, r1
    7aac:	002ba810 	eoreq	sl, fp, r0, lsl r8
    7ab0:	006f0e10 	rsbeq	r0, pc, r0, lsl lr	; <UNPREDICTABLE>
    7ab4:	17c50100 	strbne	r0, [r5, r0, lsl #2]
    7ab8:	fe1b0000 	cdp2	0, 1, cr0, cr11, cr0, {0}
    7abc:	0100001e 	tsteq	r0, lr, lsl r0
    7ac0:	9f081674 	svcls	0x00081674
    7ac4:	32000000 	andcc	r0, r0, #0
    7ac8:	2e00006f 	cdpcs	0, 0, cr0, cr0, cr15, {3}
    7acc:	2300006f 	movwcs	r0, #111	; 0x6f
    7ad0:	00000650 	andeq	r0, r0, r0, asr r6
    7ad4:	000017b2 			; <UNDEFINED> instruction: 0x000017b2
    7ad8:	00164518 	andseq	r4, r6, r8, lsl r5
    7adc:	16bd0100 	ldrtne	r0, [sp], r0, lsl #2
    7ae0:	00014a18 	andeq	r4, r1, r8, lsl sl
    7ae4:	006f5900 	rsbeq	r5, pc, r0, lsl #18
    7ae8:	006f5300 	rsbeq	r5, pc, r0, lsl #6
    7aec:	2b781d00 	blcs	1e0eef4 <__RAM_SIZE+0x1d0eef4>
    7af0:	25df1000 	ldrbcs	r1, [pc]	; 7af8 <__HEAP_SIZE+0x6af8>
    7af4:	921d0000 	andsls	r0, sp, #0
    7af8:	2810002b 	ldmdacs	r0, {r0, r1, r3, r5}
    7afc:	1d000026 	stcne	0, cr0, [r0, #-152]	; 0xffffff68
    7b00:	10002b96 	mulne	r0, r6, fp
    7b04:	000025df 	ldrdeq	r2, [r0], -pc	; <UNPREDICTABLE>
    7b08:	002b9e1d 	eoreq	r9, fp, sp, lsl lr
    7b0c:	00385510 	eorseq	r5, r8, r0, lsl r5
    7b10:	2ba21d00 	blcs	fe88ef18 <__StackTop+0xc678ef18>
    7b14:	24cf1000 	strbcs	r1, [pc], #0	; 7b1c <__HEAP_SIZE+0x6b1c>
    7b18:	1d000000 	stcne	0, cr0, [r0, #-0]
    7b1c:	10002b80 	andne	r2, r0, r0, lsl #23
    7b20:	000015cb 	andeq	r1, r0, fp, asr #11
    7b24:	002b8c1d 	eoreq	r8, fp, sp, lsl ip
    7b28:	00382a10 	eorseq	r2, r8, r0, lsl sl
    7b2c:	01290000 			; <UNDEFINED> instruction: 0x01290000
    7b30:	000012b0 			; <UNDEFINED> instruction: 0x000012b0
    7b34:	0615e301 	ldreq	lr, [r5], -r1, lsl #6
    7b38:	002dfc01 	eoreq	pc, sp, r1, lsl #24
    7b3c:	002e0810 	eoreq	r0, lr, r0, lsl r8
    7b40:	007d0210 	rsbseq	r0, sp, r0, lsl r2
    7b44:	26012101 	strcs	r2, [r1], -r1, lsl #2
    7b48:	01000012 	tsteq	r0, r2, lsl r0
    7b4c:	010c159e 			; <UNDEFINED> instruction: 0x010c159e
    7b50:	00000119 	andeq	r0, r0, r9, lsl r1
    7b54:	10002d80 	andne	r2, r0, r0, lsl #27
    7b58:	10002dfc 	strdne	r2, [r0], -ip
    7b5c:	00006f82 	andeq	r6, r0, r2, lsl #31
    7b60:	00189201 	andseq	r9, r8, r1, lsl #4
    7b64:	1cde1b00 	vldmiane	lr, {d17-d16}
    7b68:	9e010000 	cdpls	0, 0, cr0, cr1, cr0, {0}
    7b6c:	18983415 	ldmne	r8, {r0, r2, r4, sl, ip, sp}
    7b70:	6fb80000 	svcvs	0x00b80000
    7b74:	6fa20000 	svcvs	0x00a20000
    7b78:	5a1b0000 	bpl	6c7b80 <__RAM_SIZE+0x5c7b80>
    7b7c:	01000021 	tsteq	r0, r1, lsr #32
    7b80:	a335159f 	teqge	r5, #666894336	; 0x27c00000
    7b84:	4c000018 	stcmi	0, cr0, [r0], {24}
    7b88:	48000070 	stmdami	r0, {r4, r5, r6}
    7b8c:	18000070 	stmdane	r0, {r4, r5, r6}
    7b90:	00001a93 	muleq	r0, r3, sl
    7b94:	1015a101 	andsne	sl, r5, r1, lsl #2
    7b98:	00000119 	andeq	r0, r0, r9, lsl r1
    7b9c:	00007074 	andeq	r7, r0, r4, ror r0
    7ba0:	0000706a 	andeq	r7, r0, sl, rrx
    7ba4:	00072823 	andeq	r2, r7, r3, lsr #16
    7ba8:	00187f00 	andseq	r7, r8, r0, lsl #30
    7bac:	19f11800 	ldmibne	r1!, {fp, ip}^
    7bb0:	ab010000 	blge	47bb8 <__HEAP_SIZE+0x46bb8>
    7bb4:	015b1a15 	cmpeq	fp, r5, lsl sl
    7bb8:	70bd0000 	adcsvc	r0, sp, r0
    7bbc:	70b70000 	adcsvc	r0, r7, r0
    7bc0:	47180000 	ldrmi	r0, [r8, -r0]
    7bc4:	01000018 	tsteq	r0, r8, lsl r0
    7bc8:	5b1a15ac 	blpl	68d280 <__RAM_SIZE+0x58d280>
    7bcc:	ec000001 	stc	0, cr0, [r0], {1}
    7bd0:	e6000070 			; <UNDEFINED> instruction: 0xe6000070
    7bd4:	20000070 	andcs	r0, r0, r0, ror r0
    7bd8:	10002de6 	andne	r2, r0, r6, ror #27
    7bdc:	000018a8 	andeq	r1, r0, r8, lsr #17
    7be0:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    7be4:	00000074 	andeq	r0, r0, r4, ror r0
    7be8:	002d8a1d 	eoreq	r8, sp, sp, lsl sl
    7bec:	0037f210 	eorseq	pc, r7, r0, lsl r2	; <UNPREDICTABLE>
    7bf0:	2dac1d00 	stccs	13, cr1, [ip]
    7bf4:	38001000 	stmdacc	r0, {ip}
    7bf8:	07000000 	streq	r0, [r0, -r0]
    7bfc:	00056304 	andeq	r6, r5, r4, lsl #6
    7c00:	18920300 	ldmne	r2, {r8, r9}
    7c04:	04070000 	streq	r0, [r7], #-0
    7c08:	0000014a 	andeq	r0, r0, sl, asr #2
    7c0c:	00189d03 	andseq	r9, r8, r3, lsl #26
    7c10:	a7011700 	strge	r1, [r1, -r0, lsl #14]
    7c14:	01000010 	tsteq	r0, r0, lsl r0
    7c18:	01061592 			; <UNDEFINED> instruction: 0x01061592
    7c1c:	10002d68 	andne	r2, r0, r8, ror #26
    7c20:	10002d80 	andne	r2, r0, r0, lsl #27
    7c24:	01007d02 	tsteq	r0, r2, lsl #26
    7c28:	000018d3 	ldrdeq	r1, [r0], -r3
    7c2c:	001cde19 	andseq	sp, ip, r9, lsl lr
    7c30:	15920100 	ldrne	r0, [r2, #256]	; 0x100
    7c34:	00189836 	andseq	r9, r8, r6, lsr r8
    7c38:	00500100 	subseq	r0, r0, r0, lsl #2
    7c3c:	16850122 	strne	r0, [r5], r2, lsr #2
    7c40:	82010000 	andhi	r0, r1, #0
    7c44:	00010615 	andeq	r0, r1, r5, lsl r6
    7c48:	00000000 	andeq	r0, r0, r0
    7c4c:	15000000 	strne	r0, [r0, #-0]
    7c50:	01000071 	tsteq	r0, r1, ror r0
    7c54:	00001917 	andeq	r1, r0, r7, lsl r9
    7c58:	001cde1b 	andseq	sp, ip, fp, lsl lr
    7c5c:	15820100 	strne	r0, [r2, #256]	; 0x100
    7c60:	0018982e 	andseq	r9, r8, lr, lsr #16
    7c64:	00713b00 	rsbseq	r3, r1, r0, lsl #22
    7c68:	00713500 	rsbseq	r3, r1, r0, lsl #10
    7c6c:	00001d00 	andeq	r1, r0, r0, lsl #26
    7c70:	37f20000 	ldrbcc	r0, [r2, r0]!
    7c74:	001d0000 	andseq	r0, sp, r0
    7c78:	00000000 	andeq	r0, r0, r0
    7c7c:	00000038 	andeq	r0, r0, r8, lsr r0
    7c80:	1a9b0122 	bne	fe6c8110 <__StackTop+0xc65c8110>
    7c84:	3a010000 	bcc	47c8c <__HEAP_SIZE+0x46c8c>
    7c88:	00010615 	andeq	r0, r1, r5, lsl r6
    7c8c:	00000000 	andeq	r0, r0, r0
    7c90:	67000000 	strvs	r0, [r0, -r0]
    7c94:	01000071 	tsteq	r0, r1, ror r0
    7c98:	000019dd 	ldrdeq	r1, [r0], -sp
    7c9c:	0021dd1b 	eoreq	sp, r1, fp, lsl sp
    7ca0:	153a0100 	ldrne	r0, [sl, #-256]!	; 0xffffff00
    7ca4:	00038b36 	andeq	r8, r3, r6, lsr fp
    7ca8:	00718f00 	rsbseq	r8, r1, r0, lsl #30
    7cac:	00718700 	rsbseq	r8, r1, r0, lsl #14
    7cb0:	09a51b00 	stmibeq	r5!, {r8, r9, fp, ip}
    7cb4:	3b010000 	blcc	47cbc <__HEAP_SIZE+0x46cbc>
    7cb8:	015b3a15 	cmpeq	fp, r5, lsl sl
    7cbc:	71cd0000 	bicvc	r0, sp, r0
    7cc0:	71c90000 	bicvc	r0, r9, r0
    7cc4:	18180000 	ldmdane	r8, {}	; <UNPREDICTABLE>
    7cc8:	01000018 	tsteq	r0, r8, lsl r0
    7ccc:	660d153d 			; <UNDEFINED> instruction: 0x660d153d
    7cd0:	f0000006 			; <UNDEFINED> instruction: 0xf0000006
    7cd4:	ee000071 	mcr	0, 0, r0, cr0, cr1, {3}
    7cd8:	23000071 	movwcs	r0, #113	; 0x71
    7cdc:	000006f8 	strdeq	r0, [r0], -r8
    7ce0:	00001991 	muleq	r0, r1, r9
    7ce4:	000a8918 	andeq	r8, sl, r8, lsl r9
    7ce8:	154f0100 	strbne	r0, [pc, #-256]	; 7bf0 <__HEAP_SIZE+0x6bf0>
    7cec:	0006dd05 	andeq	sp, r6, r5, lsl #26
    7cf0:	00720700 	rsbseq	r0, r2, r0, lsl #14
    7cf4:	00720300 	rsbseq	r0, r2, r0, lsl #6
    7cf8:	10230000 	eorne	r0, r3, r0
    7cfc:	b0000007 	andlt	r0, r0, r7
    7d00:	18000019 	stmdane	r0, {r0, r3, r4}
    7d04:	00000a89 	andeq	r0, r0, r9, lsl #21
    7d08:	05156201 	ldreq	r6, [r5, #-513]	; 0xfffffdff
    7d0c:	000006dd 	ldrdeq	r0, [r0], -sp
    7d10:	00007229 	andeq	r7, r0, r9, lsr #4
    7d14:	00007225 	andeq	r7, r0, r5, lsr #4
    7d18:	00001c00 	andeq	r1, r0, r0, lsl #24
    7d1c:	00000000 	andeq	r0, r0, r0
    7d20:	19d30000 	ldmibne	r3, {}^	; <UNPREDICTABLE>
    7d24:	55180000 	ldrpl	r0, [r8, #-0]
    7d28:	0100000a 	tsteq	r0, sl
    7d2c:	91051563 	tstls	r5, r3, ror #10
    7d30:	49000003 	stmdbmi	r0, {r0, r1}
    7d34:	47000072 	smlsdxmi	r0, r2, r0, r0
    7d38:	00000072 	andeq	r0, r0, r2, ror r0
    7d3c:	0000001d 	andeq	r0, r0, sp, lsl r0
    7d40:	00149100 	andseq	r9, r4, r0, lsl #2
    7d44:	01210000 			; <UNDEFINED> instruction: 0x01210000
    7d48:	0000143e 	andeq	r1, r0, lr, lsr r4
    7d4c:	0c14dd01 	ldceq	13, cr13, [r4], {1}
    7d50:	00011901 	andeq	r1, r1, r1, lsl #18
    7d54:	002c8400 	eoreq	r8, ip, r0, lsl #8
    7d58:	002d6810 	eoreq	r6, sp, r0, lsl r8
    7d5c:	00725c10 	rsbseq	r5, r2, r0, lsl ip
    7d60:	1aca0100 	bne	ff288168 <__StackTop+0xc7188168>
    7d64:	bb1b0000 	bllt	6c7d6c <__RAM_SIZE+0x5c7d6c>
    7d68:	01000015 	tsteq	r0, r5, lsl r0
    7d6c:	d03b14dd 	ldrsbtle	r1, [fp], -sp
    7d70:	8400001a 	strhi	r0, [r0], #-26	; 0xffffffe6
    7d74:	7c000072 	stcvc	0, cr0, [r0], {114}	; 0x72
    7d78:	18000072 	stmdane	r0, {r1, r4, r5, r6}
    7d7c:	00001818 	andeq	r1, r0, r8, lsl r8
    7d80:	0d14df01 	ldceq	15, cr13, [r4, #-4]
    7d84:	00000666 	andeq	r0, r0, r6, ror #12
    7d88:	000072c0 	andeq	r7, r0, r0, asr #5
    7d8c:	000072be 			; <UNDEFINED> instruction: 0x000072be
    7d90:	001a9318 	andseq	r9, sl, r8, lsl r3
    7d94:	14e00100 	strbtne	r0, [r0], #256	; 0x100
    7d98:	00011910 	andeq	r1, r1, r0, lsl r9
    7d9c:	0072d700 	rsbseq	sp, r2, r0, lsl #14
    7da0:	0072d300 	rsbseq	sp, r2, r0, lsl #6
    7da4:	06c82300 	strbeq	r2, [r8], r0, lsl #6
    7da8:	1a5b0000 	bne	16c7db0 <__RAM_SIZE+0x15c7db0>
    7dac:	89180000 	ldmdbhi	r8, {}	; <UNPREDICTABLE>
    7db0:	0100000a 	tsteq	r0, sl
    7db4:	dd0514f6 	cfstrsle	mvf1, [r5, #-984]	; 0xfffffc28
    7db8:	fb000006 	blx	7dda <__HEAP_SIZE+0x6dda>
    7dbc:	f7000072 			; <UNDEFINED> instruction: 0xf7000072
    7dc0:	00000072 	andeq	r0, r0, r2, ror r0
    7dc4:	0006e023 	andeq	lr, r6, r3, lsr #32
    7dc8:	001a7a00 	andseq	r7, sl, r0, lsl #20
    7dcc:	0a891800 	beq	fe24ddd4 <__StackTop+0xc614ddd4>
    7dd0:	fa010000 	blx	47dd8 <__HEAP_SIZE+0x46dd8>
    7dd4:	06dd0914 			; <UNDEFINED> instruction: 0x06dd0914
    7dd8:	731d0000 	tstvc	sp, #0
    7ddc:	73190000 	tstvc	r9, #0
    7de0:	1c000000 	stcne	0, cr0, [r0], {-0}
    7de4:	10002cde 	ldrdne	r2, [r0], -lr
    7de8:	10002d0e 	andne	r2, r0, lr, lsl #26
    7dec:	00001a9d 	muleq	r0, sp, sl
    7df0:	000a5518 	andeq	r5, sl, r8, lsl r5
    7df4:	14fb0100 	ldrbtne	r0, [fp], #256	; 0x100
    7df8:	00039109 	andeq	r9, r3, r9, lsl #2
    7dfc:	00733d00 	rsbseq	r3, r3, r0, lsl #26
    7e00:	00733b00 	rsbseq	r3, r3, r0, lsl #22
    7e04:	321c0000 	andscc	r0, ip, #0
    7e08:	4a10002d 	bmi	407ec4 <__RAM_SIZE+0x307ec4>
    7e0c:	c010002d 	andsgt	r0, r0, sp, lsr #32
    7e10:	1800001a 	stmdane	r0, {r1, r3, r4}
    7e14:	00000a55 	andeq	r0, r0, r5, asr sl
    7e18:	09150f01 	ldmdbeq	r5, {r0, r8, r9, sl, fp}
    7e1c:	00000391 	muleq	r0, r1, r3
    7e20:	00007352 	andeq	r7, r0, r2, asr r3
    7e24:	00007350 	andeq	r7, r0, r0, asr r3
    7e28:	2d121d00 	ldccs	13, cr1, [r2, #-0]
    7e2c:	14911000 	ldrne	r1, [r1], #0
    7e30:	07000000 	streq	r0, [r0, -r0]
    7e34:	0003a204 	andeq	sl, r3, r4, lsl #4
    7e38:	1aca0300 	bne	ff288a40 <__StackTop+0xc7188a40>
    7e3c:	01220000 			; <UNDEFINED> instruction: 0x01220000
    7e40:	00000f9a 	muleq	r0, sl, pc	; <UNPREDICTABLE>
    7e44:	0a14b801 	beq	535e50 <__RAM_SIZE+0x435e50>
    7e48:	002c4801 	eoreq	r4, ip, r1, lsl #16
    7e4c:	002c8410 	eoreq	r8, ip, r0, lsl r4
    7e50:	00736510 	rsbseq	r6, r3, r0, lsl r5
    7e54:	1b5d0100 	blne	174825c <__RAM_SIZE+0x164825c>
    7e58:	bb1b0000 	bllt	6c7e60 <__RAM_SIZE+0x5c7e60>
    7e5c:	01000015 	tsteq	r0, r5, lsl r0
    7e60:	dd3a14b8 	cfldrsle	mvf1, [sl, #-736]!	; 0xfffffd20
    7e64:	8b000006 	blhi	7e84 <__HEAP_SIZE+0x6e84>
    7e68:	85000073 	strhi	r0, [r0, #-115]	; 0xffffff8d
    7e6c:	1b000073 	blne	8040 <__HEAP_SIZE+0x7040>
    7e70:	0000215b 	andeq	r2, r0, fp, asr r1
    7e74:	3614b901 	ldrcc	fp, [r4], -r1, lsl #18
    7e78:	0000014a 	andeq	r0, r0, sl, asr #2
    7e7c:	000073bb 			; <UNDEFINED> instruction: 0x000073bb
    7e80:	000073b7 			; <UNDEFINED> instruction: 0x000073b7
    7e84:	000bf91b 	andeq	pc, fp, fp, lsl r9	; <UNPREDICTABLE>
    7e88:	14ba0100 	ldrtne	r0, [sl], #256	; 0x100
    7e8c:	00012a3c 	andeq	r2, r1, ip, lsr sl
    7e90:	0073dd00 	rsbseq	sp, r3, r0, lsl #26
    7e94:	0073d900 	rsbseq	sp, r3, r0, lsl #18
    7e98:	2c4e1c00 	mcrrcs	12, 0, r1, lr, cr0
    7e9c:	2c721000 	ldclcs	0, cr1, [r2], #-0
    7ea0:	1b531000 	blne	14cbea8 <__RAM_SIZE+0x13cbea8>
    7ea4:	55180000 	ldrpl	r0, [r8, #-0]
    7ea8:	0100000a 	tsteq	r0, sl
    7eac:	910914ca 	smlabtls	r9, sl, r4, r1
    7eb0:	00000003 	andeq	r0, r0, r3
    7eb4:	fe000074 	mcr2	0, 0, r0, cr0, cr4, {3}
    7eb8:	00000073 	andeq	r0, r0, r3, ror r0
    7ebc:	002c7e1d 	eoreq	r7, ip, sp, lsl lr
    7ec0:	00098610 	andeq	r8, r9, r0, lsl r6
    7ec4:	01220000 			; <UNDEFINED> instruction: 0x01220000
    7ec8:	000014a2 	andeq	r1, r0, r2, lsr #9
    7ecc:	06149801 	ldreq	r9, [r4], -r1, lsl #16
    7ed0:	00000001 	andeq	r0, r0, r1
    7ed4:	00000000 	andeq	r0, r0, r0
    7ed8:	00741300 	rsbseq	r1, r4, r0, lsl #6
    7edc:	1bf20100 	blne	ffc882e4 <__StackTop+0xc7b882e4>
    7ee0:	bb1b0000 	bllt	6c7ee8 <__RAM_SIZE+0x5c7ee8>
    7ee4:	01000015 	tsteq	r0, r5, lsl r0
    7ee8:	d22f1498 	eorle	r1, pc, #152, 8	; 0x98000000
    7eec:	39000006 	stmdbcc	r0, {r1, r2}
    7ef0:	33000074 	movwcc	r0, #116	; 0x74
    7ef4:	1b000074 	blne	80cc <__HEAP_SIZE+0x70cc>
    7ef8:	000009a5 	andeq	r0, r0, r5, lsr #19
    7efc:	37149901 	ldrcc	r9, [r4, -r1, lsl #18]
    7f00:	0000015b 	andeq	r0, r0, fp, asr r1
    7f04:	00007469 	andeq	r7, r0, r9, ror #8
    7f08:	00007465 	andeq	r7, r0, r5, ror #8
    7f0c:	00215b1b 	eoreq	r5, r1, fp, lsl fp
    7f10:	149a0100 	ldrne	r0, [sl], #256	; 0x100
    7f14:	00015b37 	andeq	r5, r1, r7, lsr fp
    7f18:	00748e00 	rsbseq	r8, r4, r0, lsl #28
    7f1c:	00748a00 	rsbseq	r8, r4, r0, lsl #20
    7f20:	00001c00 	andeq	r1, r0, r0, lsl #24
    7f24:	00000000 	andeq	r0, r0, r0
    7f28:	1bdb0000 	blne	ff6c7f30 <__StackTop+0xc75c7f30>
    7f2c:	55180000 	ldrpl	r0, [r8, #-0]
    7f30:	0100000a 	tsteq	r0, sl
    7f34:	910514ae 	smlatbls	r5, lr, r4, r1
    7f38:	b1000003 	tstlt	r0, r3
    7f3c:	af000074 	svcge	0x00000074
    7f40:	00000074 	andeq	r0, r0, r4, ror r0
    7f44:	00000020 	andeq	r0, r0, r0, lsr #32
    7f48:	00098600 	andeq	r8, r9, r0, lsl #12
    7f4c:	50011f00 	andpl	r1, r1, r0, lsl #30
    7f50:	5201f303 	andpl	pc, r1, #201326592	; 0xc000000
    7f54:	0151011f 	cmpeq	r1, pc, lsl r1
    7f58:	22000031 	andcs	r0, r0, #49	; 0x31
    7f5c:	000e9401 	andeq	r9, lr, r1, lsl #8
    7f60:	147b0100 	ldrbtne	r0, [fp], #-256	; 0xffffff00
    7f64:	2c2c0106 	stfcss	f0, [ip], #-24	; 0xffffffe8
    7f68:	2c481000 	marcs	acc0, r1, r8
    7f6c:	74c41000 	strbvc	r1, [r4], #0
    7f70:	63010000 	movwvs	r0, #4096	; 0x1000
    7f74:	1b00001c 	blne	7fec <__HEAP_SIZE+0x6fec>
    7f78:	000015bb 			; <UNDEFINED> instruction: 0x000015bb
    7f7c:	2c147b01 			; <UNDEFINED> instruction: 0x2c147b01
    7f80:	000006dd 	ldrdeq	r0, [r0], -sp
    7f84:	000074e8 	andeq	r7, r0, r8, ror #9
    7f88:	000074e4 	andeq	r7, r0, r4, ror #9
    7f8c:	00215b1b 	eoreq	r5, r1, fp, lsl fp
    7f90:	147c0100 	ldrbtne	r0, [ip], #-256	; 0xffffff00
    7f94:	00015b2e 	andeq	r5, r1, lr, lsr #22
    7f98:	00750f00 	rsbseq	r0, r5, r0, lsl #30
    7f9c:	00750900 	rsbseq	r0, r5, r0, lsl #18
    7fa0:	2c3a1e00 	ldccs	14, cr1, [sl], #-0
    7fa4:	37e31000 	strbcc	r1, [r3, r0]!
    7fa8:	1c4d0000 	marne	acc0, r0, sp
    7fac:	011f0000 	tsteq	pc, r0
    7fb0:	01f30350 	mvnseq	r0, r0, asr r3
    7fb4:	42200050 	eormi	r0, r0, #80	; 0x50
    7fb8:	8610002c 	ldrhi	r0, [r0], -ip, lsr #32
    7fbc:	1f000009 	svcne	0x00000009
    7fc0:	74025001 	strvc	r5, [r2], #-1
    7fc4:	51011f00 	tstpl	r1, r0, lsl #30
    7fc8:	00003101 	andeq	r3, r0, r1, lsl #2
    7fcc:	1e5a0117 	mrcne	1, 2, r0, cr10, cr7, {0}
    7fd0:	c0010000 	andgt	r0, r1, r0
    7fd4:	a8010a13 	stmdage	r1, {r0, r1, r4, r9, fp}
    7fd8:	2c10002b 	ldccs	0, cr0, [r0], {43}	; 0x2b
    7fdc:	0210002c 	andseq	r0, r0, #44	; 0x2c
    7fe0:	b501007d 	strlt	r0, [r1, #-125]	; 0xffffff83
    7fe4:	2800001c 	stmdacs	r0, {r2, r3, r4}
    7fe8:	00000668 	andeq	r0, r0, r8, ror #12
    7fec:	00217118 	eoreq	r7, r1, r8, lsl r1
    7ff0:	13fa0100 	mvnsne	r0, #0, 2
    7ff4:	00012f0d 	andeq	r2, r1, sp, lsl #30
    7ff8:	00754100 	rsbseq	r4, r5, r0, lsl #2
    7ffc:	00753b00 	rsbseq	r3, r5, r0, lsl #22
    8000:	06802800 	streq	r2, [r0], r0, lsl #16
    8004:	f7180000 			; <UNDEFINED> instruction: 0xf7180000
    8008:	01000014 	tsteq	r0, r4, lsl r0
    800c:	dd0d13fa 	stcle	3, cr1, [sp, #-1000]	; 0xfffffc18
    8010:	74000006 	strvc	r0, [r0], #-6
    8014:	6e000075 	mcrvs	0, 0, r0, cr0, cr5, {3}
    8018:	00000075 	andeq	r0, r0, r5, ror r0
    801c:	01210000 			; <UNDEFINED> instruction: 0x01210000
    8020:	00001e2d 	andeq	r1, r0, sp, lsr #28
    8024:	10139c01 	andsne	r9, r3, r1, lsl #24
    8028:	00011901 	andeq	r1, r1, r1, lsl #18
	...
    8034:	0075bf00 	rsbseq	fp, r5, r0, lsl #30
    8038:	1d370100 	ldfnes	f0, [r7, #-0]
    803c:	cf1b0000 	svcgt	0x001b0000
    8040:	0100001d 	tsteq	r0, sp, lsl r0
    8044:	a73b139c 			; <UNDEFINED> instruction: 0xa73b139c
    8048:	e3000003 	movw	r0, #3
    804c:	df000075 	svcle	0x00000075
    8050:	1b000075 	blne	822c <__HEAP_SIZE+0x722c>
    8054:	000021ed 	andeq	r2, r0, sp, ror #3
    8058:	35139d01 	ldrcc	r9, [r3, #-3329]	; 0xfffff2ff
    805c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    8060:	00007607 	andeq	r7, r0, r7, lsl #12
    8064:	00007601 	andeq	r7, r0, r1, lsl #12
    8068:	00233d18 	eoreq	r3, r3, r8, lsl sp
    806c:	139f0100 	orrsne	r0, pc, #0, 2
    8070:	00066611 	andeq	r6, r6, r1, lsl r6
    8074:	00763700 	rsbseq	r3, r6, r0, lsl #14
    8078:	00763300 	rsbseq	r3, r6, r0, lsl #6
    807c:	1a931800 	bne	fe4ce084 <__StackTop+0xc63ce084>
    8080:	a0010000 	andge	r0, r1, r0
    8084:	01191413 	tsteq	r9, r3, lsl r4
    8088:	76570000 	ldrbvc	r0, [r7], -r0
    808c:	76550000 	ldrbvc	r0, [r5], -r0
    8090:	002a0000 	eoreq	r0, sl, r0
    8094:	1f000000 	svcne	0x00000000
    8098:	f3035001 	vhadd.u8	d5, d3, d1
    809c:	00005101 	andeq	r5, r0, r1, lsl #2
    80a0:	23fc0121 	mvnscs	r0, #1073741832	; 0x40000008
    80a4:	7c010000 	stcvc	0, cr0, [r1], {-0}
    80a8:	9d011813 	stcls	8, cr1, [r1, #-76]	; 0xffffffb4
    80ac:	00000004 	andeq	r0, r0, r4
    80b0:	00000000 	andeq	r0, r0, r0
    80b4:	6b000000 	blvs	80bc <__HEAP_SIZE+0x70bc>
    80b8:	01000076 	tsteq	r0, r6, ror r0
    80bc:	00001dbe 			; <UNDEFINED> instruction: 0x00001dbe
    80c0:	001dcf1b 	andseq	ip, sp, fp, lsl pc
    80c4:	137c0100 	cmnne	ip, #0, 2
    80c8:	0003a748 	andeq	sl, r3, r8, asr #14
    80cc:	00768f00 	rsbseq	r8, r6, r0, lsl #30
    80d0:	00768b00 	rsbseq	r8, r6, r0, lsl #22
    80d4:	233c1800 	teqcs	ip, #0, 16
    80d8:	7e010000 	cdpvc	0, 0, cr0, cr1, cr0, {0}
    80dc:	06661113 			; <UNDEFINED> instruction: 0x06661113
    80e0:	76af0000 	strtvc	r0, [pc], r0
    80e4:	76ad0000 	strtvc	r0, [sp], r0
    80e8:	93180000 	tstls	r8, #0
    80ec:	0100001a 	tsteq	r0, sl, lsl r0
    80f0:	9d1c137f 	ldcls	3, cr1, [ip, #-508]	; 0xfffffe04
    80f4:	c4000004 	strgt	r0, [r0], #-4
    80f8:	c2000076 	andgt	r0, r0, #118	; 0x76
    80fc:	18000076 	stmdane	r0, {r1, r2, r4, r5, r6}
    8100:	00000ca0 	andeq	r0, r0, r0, lsr #25
    8104:	15138001 	ldrne	r8, [r3, #-1]
    8108:	0000012f 	andeq	r0, r0, pc, lsr #2
    810c:	000076d9 	ldrdeq	r7, [r0], -r9
    8110:	000076d7 	ldrdeq	r7, [r0], -r7	; <UNPREDICTABLE>
    8114:	0000001d 	andeq	r0, r0, sp, lsl r0
    8118:	00380e00 	eorseq	r0, r8, r0, lsl #28
    811c:	00001d00 	andeq	r1, r0, r0, lsl #26
    8120:	381c0000 	ldmdacc	ip, {}	; <UNPREDICTABLE>
    8124:	21000000 	mrscs	r0, (UNDEF: 0)
    8128:	0018de01 	andseq	sp, r8, r1, lsl #28
    812c:	13600100 	cmnne	r0, #0, 2
    8130:	049d0118 	ldreq	r0, [sp], #280	; 0x118
	...
    813c:	76ec0000 	strbtvc	r0, [ip], r0
    8140:	30010000 	andcc	r0, r1, r0
    8144:	1b00001e 	blne	81c4 <__HEAP_SIZE+0x71c4>
    8148:	00001dcf 	andeq	r1, r0, pc, asr #27
    814c:	41136001 	tstmi	r3, r1
    8150:	000003a7 	andeq	r0, r0, r7, lsr #7
    8154:	00007710 	andeq	r7, r0, r0, lsl r7
    8158:	0000770c 	andeq	r7, r0, ip, lsl #14
    815c:	00233c18 	eoreq	r3, r3, r8, lsl ip
    8160:	13620100 	cmnne	r2, #0, 2
    8164:	00066611 	andeq	r6, r6, r1, lsl r6
    8168:	00773000 	rsbseq	r3, r7, r0
    816c:	00772e00 	rsbseq	r2, r7, r0, lsl #28
    8170:	1a931800 	bne	fe4ce178 <__StackTop+0xc63ce178>
    8174:	63010000 	movwvs	r0, #4096	; 0x1000
    8178:	049d1c13 	ldreq	r1, [sp], #3091	; 0xc13
    817c:	77450000 	strbvc	r0, [r5, -r0]
    8180:	77430000 	strbvc	r0, [r3, -r0]
    8184:	001d0000 	andseq	r0, sp, r0
    8188:	f2000000 	vhadd.s8	d0, d0, d0
    818c:	1d000037 	stcne	0, cr0, [r0, #-220]	; 0xffffff24
    8190:	00000000 	andeq	r0, r0, r0
    8194:	00003800 	andeq	r3, r0, r0, lsl #16
    8198:	62012200 	andvs	r2, r1, #0, 4
    819c:	01000017 	tsteq	r0, r7, lsl r0
    81a0:	010a133e 	tsteq	sl, lr, lsr r3
	...
    81ac:	00007758 	andeq	r7, r0, r8, asr r7
    81b0:	001e9e01 	andseq	r9, lr, r1, lsl #28
    81b4:	1dcf1b00 	vstrne	d17, [pc]	; 81bc <__HEAP_SIZE+0x71bc>
    81b8:	3e010000 	cdpcc	0, 0, cr0, cr1, cr0, {0}
    81bc:	03a73313 			; <UNDEFINED> instruction: 0x03a73313
    81c0:	777c0000 	ldrbvc	r0, [ip, -r0]!
    81c4:	77780000 	ldrbvc	r0, [r8, -r0]!
    81c8:	671b0000 	ldrvs	r0, [fp, -r0]
    81cc:	0100001b 	tsteq	r0, fp, lsl r0
    81d0:	9d39133f 	ldcls	3, cr1, [r9, #-252]!	; 0xffffff04
    81d4:	a0000004 	andge	r0, r0, r4
    81d8:	9a000077 	bls	83bc <__HEAP_SIZE+0x73bc>
    81dc:	18000077 	stmdane	r0, {r0, r1, r2, r4, r5, r6}
    81e0:	0000233d 	andeq	r2, r0, sp, lsr r3
    81e4:	11134101 	tstne	r3, r1, lsl #2
    81e8:	00000666 	andeq	r0, r0, r6, ror #12
    81ec:	000077cd 	andeq	r7, r0, sp, asr #15
    81f0:	000077c9 	andeq	r7, r0, r9, asr #15
    81f4:	0000001d 	andeq	r0, r0, sp, lsl r0
    81f8:	0037f200 	eorseq	pc, r7, r0, lsl #4
    81fc:	00001d00 	andeq	r1, r0, r0, lsl #26
    8200:	38000000 	stmdacc	r0, {}	; <UNPREDICTABLE>
    8204:	21000000 	mrscs	r0, (UNDEF: 0)
    8208:	00195701 	andseq	r5, r9, r1, lsl #14
    820c:	123e0100 	eorsne	r0, lr, #0, 2
    8210:	0119010c 	tsteq	r9, ip, lsl #2
    8214:	28c00000 	stmiacs	r0, {}^	; <UNPREDICTABLE>
    8218:	2a201000 	bcs	80c220 <__RAM_SIZE+0x70c220>
    821c:	77eb1000 	strbvc	r1, [fp, r0]!
    8220:	a2010000 	andge	r0, r1, #0
    8224:	1800001f 	stmdane	r0, {r0, r1, r2, r3, r4}
    8228:	0000233c 	andeq	r2, r0, ip, lsr r3
    822c:	0d124001 	ldceq	0, cr4, [r2, #-4]
    8230:	00000666 	andeq	r0, r0, r6, ror #12
    8234:	00007829 	andeq	r7, r0, r9, lsr #16
    8238:	00007823 	andeq	r7, r0, r3, lsr #16
    823c:	0009a518 	andeq	sl, r9, r8, lsl r5
    8240:	12410100 	subne	r0, r1, #0, 2
    8244:	00014a10 	andeq	r4, r1, r0, lsl sl
    8248:	00785800 	rsbseq	r5, r8, r0, lsl #16
    824c:	00785200 	rsbseq	r5, r8, r0, lsl #4
    8250:	1f341800 	svcne	0x00341800
    8254:	42010000 	andmi	r0, r1, #0
    8258:	01191012 	tsteq	r9, r2, lsl r0
    825c:	78900000 	ldmvc	r0, {}	; <UNPREDICTABLE>
    8260:	78820000 	stmvc	r2, {}	; <UNPREDICTABLE>
    8264:	58280000 	stmdapl	r8!, {}	; <UNPREDICTABLE>
    8268:	18000005 	stmdane	r0, {r0, r2}
    826c:	000019f1 	strdeq	r1, [r0], -r1	; <UNPREDICTABLE>
    8270:	1a125701 	bne	49de7c <__RAM_SIZE+0x39de7c>
    8274:	0000015b 	andeq	r0, r0, fp, asr r1
    8278:	000078ed 	andeq	r7, r0, sp, ror #17
    827c:	000078e9 	andeq	r7, r0, r9, ror #17
    8280:	0029001c 	eoreq	r0, r9, ip, lsl r0
    8284:	00291810 	eoreq	r1, r9, r0, lsl r8
    8288:	001f4310 	andseq	r4, pc, r0, lsl r3	; <UNPREDICTABLE>
    828c:	19221800 	stmdbne	r2!, {fp, ip}
    8290:	5f010000 	svcpl	0x00010000
    8294:	06d20d12 			; <UNDEFINED> instruction: 0x06d20d12
    8298:	790d0000 	stmdbvc	sp, {}	; <UNPREDICTABLE>
    829c:	790b0000 	stmdbvc	fp, {}	; <UNPREDICTABLE>
    82a0:	181d0000 	ldmdane	sp, {}	; <UNPREDICTABLE>
    82a4:	91100029 	tstls	r0, r9, lsr #32
    82a8:	00000014 	andeq	r0, r0, r4, lsl r0
    82ac:	00058823 	andeq	r8, r5, r3, lsr #16
    82b0:	001f6200 	andseq	r6, pc, r0, lsl #4
    82b4:	0a891800 	beq	fe24e2bc <__StackTop+0xc614e2bc>
    82b8:	94010000 	strls	r0, [r1], #-0
    82bc:	06dd1512 			; <UNDEFINED> instruction: 0x06dd1512
    82c0:	79240000 	stmdbvc	r4!, {}	; <UNPREDICTABLE>
    82c4:	79200000 	stmdbvc	r0!, {}	; <UNPREDICTABLE>
    82c8:	23000000 	movwcs	r0, #0
    82cc:	000005a0 	andeq	r0, r0, r0, lsr #11
    82d0:	00001f81 	andeq	r1, r0, r1, lsl #31
    82d4:	000a8918 	andeq	r8, sl, r8, lsl r9
    82d8:	129a0100 	addsne	r0, sl, #0, 2
    82dc:	0006dd19 	andeq	sp, r6, r9, lsl sp
    82e0:	00794600 	rsbseq	r4, r9, r0, lsl #12
    82e4:	00794200 	rsbseq	r4, r9, r0, lsl #4
    82e8:	4c2b0000 	stcmi	0, cr0, [fp], #-0
    82ec:	80100029 	andshi	r0, r0, r9, lsr #32
    82f0:	18100029 	ldmdane	r0, {r0, r3, r5}
    82f4:	00000a55 	andeq	r0, r0, r5, asr sl
    82f8:	1512a301 	ldrne	sl, [r2, #-769]	; 0xfffffcff
    82fc:	00000391 	muleq	r0, r1, r3
    8300:	00007966 	andeq	r7, r0, r6, ror #18
    8304:	00007964 	andeq	r7, r0, r4, ror #18
    8308:	21000000 	mrscs	r0, (UNDEF: 0)
    830c:	001fd901 	andseq	sp, pc, r1, lsl #18
    8310:	11e00100 	mvnne	r0, r0, lsl #2
    8314:	01190110 	tsteq	r9, r0, lsl r1
	...
    8320:	79790000 	ldmdbvc	r9!, {}^	; <UNPREDICTABLE>
    8324:	85010000 	strhi	r0, [r1, #-0]
    8328:	1b000020 	blne	83b0 <__HEAP_SIZE+0x73b0>
    832c:	00001dcf 	andeq	r1, r0, pc, asr #27
    8330:	2e11e001 	cdpcs	0, 1, cr14, cr1, cr1, {0}
    8334:	000003a7 	andeq	r0, r0, r7, lsr #7
    8338:	000079a7 	andeq	r7, r0, r7, lsr #19
    833c:	00007999 	muleq	r0, r9, r9
    8340:	00233c18 	eoreq	r3, r3, r8, lsl ip
    8344:	11e20100 	mvnne	r0, r0, lsl #2
    8348:	00066611 	andeq	r6, r6, r1, lsl r6
    834c:	007a1100 	rsbseq	r1, sl, r0, lsl #2
    8350:	007a0300 	rsbseq	r0, sl, r0, lsl #6
    8354:	1a931800 	bne	fe4ce35c <__StackTop+0xc63ce35c>
    8358:	e3010000 	movw	r0, #4096	; 0x1000
    835c:	01191411 	tsteq	r9, r1, lsl r4
    8360:	7a710000 	bvc	1c48368 <__RAM_SIZE+0x1b48368>
    8364:	7a6d0000 	bvc	1b4836c <__RAM_SIZE+0x1a4836c>
    8368:	001c0000 	andseq	r0, ip, r0
    836c:	00000000 	andeq	r0, r0, r0
    8370:	24000000 	strcs	r0, [r0], #-0
    8374:	18000020 	stmdane	r0, {r5}
    8378:	00000a55 	andeq	r0, r0, r5, asr sl
    837c:	11120d01 	tstne	r2, r1, lsl #26
    8380:	00000391 	muleq	r0, r1, r3
    8384:	00007a92 	muleq	r0, r2, sl
    8388:	00007a90 	muleq	r0, r0, sl
    838c:	00001d00 	andeq	r1, r0, r0, lsl #26
    8390:	26280000 	strtcs	r0, [r8], -r0
    8394:	001e0000 	andseq	r0, lr, r0
    8398:	16000000 	strne	r0, [r0], -r0
    839c:	4100002e 	tstmi	r0, lr, lsr #32
    83a0:	1f000020 	svcne	0x00000020
    83a4:	74025001 	strvc	r5, [r2], #-1
    83a8:	001d0000 	andseq	r0, sp, r0
    83ac:	cf000000 	svcgt	0x00000000
    83b0:	1e000024 	cdpne	0, 0, cr0, cr0, cr4, {1}
    83b4:	00000000 	andeq	r0, r0, r0
    83b8:	000037d4 	ldrdeq	r3, [r0], -r4
    83bc:	0000205e 	andeq	r2, r0, lr, asr r0
    83c0:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    83c4:	1d000075 	stcne	0, cr0, [r0, #-468]	; 0xfffffe2c
    83c8:	00000000 	andeq	r0, r0, r0
    83cc:	000037f2 	strdeq	r3, [r0], -r2
    83d0:	0000001e 	andeq	r0, r0, lr, lsl r0
    83d4:	0037d400 	eorseq	sp, r7, r0, lsl #8
    83d8:	00207b00 	eoreq	r7, r0, r0, lsl #22
    83dc:	50011f00 	andpl	r1, r1, r0, lsl #30
    83e0:	00187402 	andseq	r7, r8, r2, lsl #8
    83e4:	0000001d 	andeq	r0, r0, sp, lsl r0
    83e8:	00380000 	eorseq	r0, r8, r0
    83ec:	01210000 			; <UNDEFINED> instruction: 0x01210000
    83f0:	0000171e 	andeq	r1, r0, lr, lsl r7
    83f4:	0c11c201 	lfmeq	f4, 1, [r1], {1}
    83f8:	00011901 	andeq	r1, r1, r1, lsl #18
	...
    8404:	007aa500 	rsbseq	sl, sl, r0, lsl #10
    8408:	20f40100 	rscscs	r0, r4, r0, lsl #2
    840c:	371b0000 	ldrcc	r0, [fp, -r0]
    8410:	01000022 	tsteq	r0, r2, lsr #32
    8414:	4a2a11c2 	bmi	a8cb24 <__RAM_SIZE+0x98cb24>
    8418:	cb000001 	blgt	8424 <__HEAP_SIZE+0x7424>
    841c:	c500007a 	strgt	r0, [r0, #-122]	; 0xffffff86
    8420:	1800007a 	stmdane	r0, {r1, r3, r4, r5, r6}
    8424:	00001bd7 	ldrdeq	r1, [r0], -r7
    8428:	1011c401 	andsne	ip, r1, r1, lsl #8
    842c:	00000119 	andeq	r0, r0, r9, lsl r1
    8430:	00007af9 	strdeq	r7, [r0], -r9
    8434:	00007af7 	strdeq	r7, [r0], -r7	; <UNPREDICTABLE>
    8438:	0000001d 	andeq	r0, r0, sp, lsl r0
    843c:	00262800 	eoreq	r2, r6, r0, lsl #16
    8440:	00001d00 	andeq	r1, r0, r0, lsl #26
    8444:	37f20000 	ldrbcc	r0, [r2, r0]!
    8448:	001d0000 	andseq	r0, sp, r0
    844c:	00000000 	andeq	r0, r0, r0
    8450:	1d000038 	stcne	0, cr0, [r0, #-224]	; 0xffffff20
    8454:	00000000 	andeq	r0, r0, r0
    8458:	000024cf 	andeq	r2, r0, pc, asr #9
    845c:	6a012200 	bvs	50c64 <__HEAP_SIZE+0x4fc64>
    8460:	01000019 	tsteq	r0, r9, lsl r0
    8464:	010a1198 			; <UNDEFINED> instruction: 0x010a1198
    8468:	10002884 	andne	r2, r0, r4, lsl #17
    846c:	100028c0 	andne	r2, r0, r0, asr #17
    8470:	00007b0c 	andeq	r7, r0, ip, lsl #22
    8474:	00214d01 	eoreq	r4, r1, r1, lsl #26
    8478:	1d1d1b00 	vldrne	d1, [sp, #-0]
    847c:	98010000 	stmdals	r1, {}	; <UNPREDICTABLE>
    8480:	014a2411 	cmpeq	sl, r1, lsl r4
    8484:	7b340000 	blvc	d0848c <__RAM_SIZE+0xc0848c>
    8488:	7b2c0000 	blvc	b08490 <__RAM_SIZE+0xa08490>
    848c:	0c180000 	ldceq	0, cr0, [r8], {-0}
    8490:	01000017 	tsteq	r0, r7, lsl r0
    8494:	4a14119a 	bmi	50cb04 <__RAM_SIZE+0x40cb04>
    8498:	6c000001 	stcvs	0, cr0, [r0], {1}
    849c:	6800007b 	stmdavs	r0, {r0, r1, r3, r4, r5, r6}
    84a0:	1d00007b 	stcne	0, cr0, [r0, #-492]	; 0xfffffe14
    84a4:	100028a4 	andne	r2, r0, r4, lsr #17
    84a8:	000037f2 	strdeq	r3, [r0], -r2
    84ac:	0028b01d 	eoreq	fp, r8, sp, lsl r0
    84b0:	00380010 	eorseq	r0, r8, r0, lsl r0
    84b4:	01240000 			; <UNDEFINED> instruction: 0x01240000
    84b8:	00001503 	andeq	r1, r0, r3, lsl #10
    84bc:	12117f01 	andsne	r7, r1, #1, 30
    84c0:	0003a701 	andeq	sl, r3, r1, lsl #14
	...
    84cc:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    84d0:	00218201 	eoreq	r8, r1, r1, lsl #4
    84d4:	148f1b00 	strne	r1, [pc], #2816	; 84dc <__HEAP_SIZE+0x74dc>
    84d8:	7f010000 	svcvc	0x00010000
    84dc:	01193c11 	tsteq	r9, r1, lsl ip
    84e0:	7b8e0000 	blvc	fe3884e8 <__StackTop+0xc62884e8>
    84e4:	7b8a0000 	blvc	fe2884ec <__StackTop+0xc61884ec>
    84e8:	2c000000 	stccs	0, cr0, [r0], {-0}
    84ec:	0022ec01 	eoreq	lr, r2, r1, lsl #24
    84f0:	11710100 	cmnne	r1, r0, lsl #2
    84f4:	03a70116 			; <UNDEFINED> instruction: 0x03a70116
	...
    8500:	7d020000 	stcvc	0, cr0, [r2, #-0]
    8504:	01240100 			; <UNDEFINED> instruction: 0x01240100
    8508:	00001e88 	andeq	r1, r0, r8, lsl #29
    850c:	1010eb01 	andsne	lr, r0, r1, lsl #22
    8510:	00011901 	andeq	r1, r1, r1, lsl #18
	...
    851c:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    8520:	00221a01 	eoreq	r1, r2, r1, lsl #20
    8524:	1dcf1b00 	vstrne	d17, [pc]	; 852c <__HEAP_SIZE+0x752c>
    8528:	eb010000 	bl	48530 <__HEAP_SIZE+0x47530>
    852c:	03a73410 			; <UNDEFINED> instruction: 0x03a73410
    8530:	7bb30000 	blvc	fecc8538 <__StackTop+0xc6bc8538>
    8534:	7baf0000 	blvc	febc853c <__StackTop+0xc6ac853c>
    8538:	9e190000 	cdpls	0, 1, cr0, cr9, cr0, {0}
    853c:	0100001b 	tsteq	r0, fp, lsl r0
    8540:	fb3610ec 	blx	d8c8fa <__RAM_SIZE+0xc8c8fa>
    8544:	01000008 	tsteq	r0, r8
    8548:	1d921951 	vldrne.16	s2, [r2, #162]	; 0xa2	; <UNPREDICTABLE>
    854c:	ed010000 	stc	0, cr0, [r1, #-0]
    8550:	08ea3710 	stmiaeq	sl!, {r4, r8, r9, sl, ip, sp}^
    8554:	52010000 	andpl	r0, r1, #0
    8558:	001a9318 	andseq	r9, sl, r8, lsl r3
    855c:	10ef0100 	rscne	r0, pc, r0, lsl #2
    8560:	00011914 	andeq	r1, r1, r4, lsl r9
    8564:	007bd700 	rsbseq	sp, fp, r0, lsl #14
    8568:	007bd100 	rsbseq	sp, fp, r0, lsl #2
    856c:	233c1800 	teqcs	ip, #0, 16
    8570:	f0010000 			; <UNDEFINED> instruction: 0xf0010000
    8574:	06661110 			; <UNDEFINED> instruction: 0x06661110
    8578:	7c070000 	stcvc	0, cr0, [r7], {-0}
    857c:	7c030000 	stcvc	0, cr0, [r3], {-0}
    8580:	21000000 	mrscs	r0, (UNDEF: 0)
    8584:	00199301 	andseq	r9, r9, r1, lsl #6
    8588:	10a70100 	adcne	r0, r7, r0, lsl #2
    858c:	03a70112 			; <UNDEFINED> instruction: 0x03a70112
	...
    8598:	7c250000 	stcvc	0, cr0, [r5], #-0
    859c:	11010000 	mrsne	r0, (UNDEF: 1)
    85a0:	1b000023 	blne	8634 <__HEAP_SIZE+0x7634>
    85a4:	000020bf 	strheq	r2, [r0], -pc	; <UNPREDICTABLE>
    85a8:	2f10a701 	svccs	0x0010a701
    85ac:	000000b8 	strheq	r0, [r0], -r8
    85b0:	00007c49 	andeq	r7, r0, r9, asr #24
    85b4:	00007c45 	andeq	r7, r0, r5, asr #24
    85b8:	001bb718 	andseq	fp, fp, r8, lsl r7
    85bc:	10a90100 	adcne	r0, r9, r0, lsl #2
    85c0:	00012f15 	andeq	r2, r1, r5, lsl pc
    85c4:	007c6b00 	rsbseq	r6, ip, r0, lsl #22
    85c8:	007c6700 	rsbseq	r6, ip, r0, lsl #14
    85cc:	233c1800 	teqcs	ip, #0, 16
    85d0:	aa010000 	bge	485d8 <__HEAP_SIZE+0x475d8>
    85d4:	06661110 			; <UNDEFINED> instruction: 0x06661110
    85d8:	7ca00000 	stcvc	0, cr0, [r0]
    85dc:	7c8a0000 	stcvc	0, cr0, [sl], {0}
    85e0:	001d0000 	andseq	r0, sp, r0
    85e4:	28000000 	stmdacs	r0, {}	; <UNPREDICTABLE>
    85e8:	1e000026 	cdpne	0, 0, cr0, cr0, cr6, {1}
    85ec:	00000000 	andeq	r0, r0, r0
    85f0:	00002311 	andeq	r2, r0, r1, lsl r3
    85f4:	000022a9 	andeq	r2, r0, r9, lsr #5
    85f8:	0f50011f 	svceq	0x0050011f
    85fc:	24330074 	ldrtcs	r0, [r3], #-116	; 0xffffff8c
    8600:	321c0074 	andscc	r0, ip, #116	; 0x74
    8604:	85c40324 	strbhi	r0, [r4, #804]	; 0x324
    8608:	1f223800 	svcne	0x00223800
    860c:	76025101 	strvc	r5, [r2], -r1, lsl #2
    8610:	001d0000 	andseq	r0, sp, r0
    8614:	cf000000 	svcgt	0x00000000
    8618:	1e000024 	cdpne	0, 0, cr0, cr0, cr4, {1}
    861c:	00000000 	andeq	r0, r0, r0
    8620:	00002311 	andeq	r2, r0, r1, lsl r3
    8624:	000022c6 	andeq	r2, r0, r6, asr #5
    8628:	0251011f 	subseq	r0, r1, #-1073741817	; 0xc0000007
    862c:	1e000076 	mcrne	0, 0, r0, cr0, cr6, {3}
    8630:	00000000 	andeq	r0, r0, r0
    8634:	00002311 	andeq	r2, r0, r1, lsl r3
    8638:	000022da 	ldrdeq	r2, [r0], -sl
    863c:	0251011f 	subseq	r0, r1, #-1073741817	; 0xc0000007
    8640:	1e000076 	mcrne	0, 0, r0, cr0, cr6, {3}
    8644:	00000000 	andeq	r0, r0, r0
    8648:	00002311 	andeq	r2, r0, r1, lsl r3
    864c:	000022f7 	strdeq	r2, [r0], -r7
    8650:	0550011f 	ldrbeq	r0, [r0, #-287]	; 0xfffffee1
    8654:	008b1803 	addeq	r1, fp, r3, lsl #16
    8658:	51011f38 	tstpl	r1, r8, lsr pc
    865c:	00007602 	andeq	r7, r0, r2, lsl #12
    8660:	00000020 	andeq	r0, r0, r0, lsr #32
    8664:	00231100 	eoreq	r1, r3, r0, lsl #2
    8668:	50011f00 	andpl	r1, r1, r0, lsl #30
    866c:	8b340305 	blhi	d09288 <__RAM_SIZE+0xc09288>
    8670:	011f3800 	tsteq	pc, r0, lsl #16
    8674:	00760251 	rsbseq	r0, r6, r1, asr r2
    8678:	152d0000 	strne	r0, [sp, #-0]!
    867c:	0100001b 	tsteq	r0, fp, lsl r0
    8680:	0114105e 	tsteq	r4, lr, asr r0
    8684:	00000666 	andeq	r0, r0, r6, ror #12
	...
    8690:	00007d21 	andeq	r7, r0, r1, lsr #26
    8694:	0023ec01 	eoreq	lr, r3, r1, lsl #24
    8698:	0a891b00 	beq	fe24f2a0 <__StackTop+0xc614f2a0>
    869c:	5e010000 	cdppl	0, 0, cr0, cr1, cr0, {0}
    86a0:	06d23f10 			; <UNDEFINED> instruction: 0x06d23f10
    86a4:	7d490000 	stclvc	0, cr0, [r9, #-0]
    86a8:	7d410000 	stclvc	0, cr0, [r1, #-0]
    86ac:	bf1b0000 	svclt	0x001b0000
    86b0:	01000020 	tsteq	r0, r0, lsr #32
    86b4:	b841105f 	stmdalt	r1, {r0, r1, r2, r3, r4, r6, ip}^
    86b8:	89000000 	stmdbhi	r0, {}	; <UNPREDICTABLE>
    86bc:	8100007d 	tsthi	r0, sp, ror r0
    86c0:	1800007d 	stmdane	r0, {r0, r2, r3, r4, r5, r6}
    86c4:	00001a92 	muleq	r0, r2, sl
    86c8:	11106101 	tstne	r0, r1, lsl #2
    86cc:	00000666 	andeq	r0, r0, r6, ror #12
    86d0:	00007dc6 	andeq	r7, r0, r6, asr #27
    86d4:	00007dc0 	andeq	r7, r0, r0, asr #27
    86d8:	00233c18 	eoreq	r3, r3, r8, lsl ip
    86dc:	10620100 	rsbne	r0, r2, r0, lsl #2
    86e0:	00066611 	andeq	r6, r6, r1, lsl r6
    86e4:	007df900 	rsbseq	pc, sp, r0, lsl #18
    86e8:	007df100 	rsbseq	pc, sp, r0, lsl #2
    86ec:	00782e00 	rsbseq	r2, r8, r0, lsl #28
    86f0:	15106301 	ldrne	r6, [r0, #-769]	; 0xfffffcff
    86f4:	0000012f 	andeq	r0, r0, pc, lsr #2
    86f8:	00007e35 	andeq	r7, r0, r5, lsr lr
    86fc:	00007e2f 	andeq	r7, r0, pc, lsr #28
    8700:	001ed518 	andseq	sp, lr, r8, lsl r5
    8704:	10640100 	rsbne	r0, r4, r0, lsl #2
    8708:	0000ac0e 	andeq	sl, r0, lr, lsl #24
    870c:	007e6300 	rsbseq	r6, lr, r0, lsl #6
    8710:	007e5f00 	rsbseq	r5, lr, r0, lsl #30
    8714:	1e7d1800 	cdpne	8, 7, cr1, cr13, cr0, {0}
    8718:	65010000 	strvs	r0, [r1, #-0]
    871c:	01191410 	tsteq	r9, r0, lsl r4
    8720:	7e850000 	cdpvc	0, 8, cr0, cr5, cr0, {0}
    8724:	7e810000 	cdpvc	0, 8, cr0, cr1, cr0, {0}
    8728:	a0180000 	andsge	r0, r8, r0
    872c:	0100001d 	tsteq	r0, sp, lsl r0
    8730:	ec1c1066 	ldc	0, cr1, [ip], {102}	; 0x66
    8734:	a9000023 	stmdbge	r0, {r0, r1, r5}
    8738:	a500007e 	strge	r0, [r0, #-126]	; 0xffffff82
    873c:	1800007e 	stmdane	r0, {r1, r2, r3, r4, r5, r6}
    8740:	00000a4a 	andeq	r0, r0, sl, asr #20
    8744:	16106701 	ldrne	r6, [r0], -r1, lsl #14
    8748:	0000038b 	andeq	r0, r0, fp, lsl #7
    874c:	00007ecb 	andeq	r7, r0, fp, asr #29
    8750:	00007ec9 	andeq	r7, r0, r9, asr #29
    8754:	7a040700 	bvc	10a35c <__RAM_SIZE+0xa35c>
    8758:	24000003 	strcs	r0, [r0], #-3
    875c:	00208b01 	eoreq	r8, r0, r1, lsl #22
    8760:	104c0100 	subne	r0, ip, r0, lsl #2
    8764:	00a60108 	adceq	r0, r6, r8, lsl #2
	...
    8770:	7d020000 	stcvc	0, cr0, [r2, #-0]
    8774:	243c0100 	ldrtcs	r0, [ip], #-256	; 0xffffff00
    8778:	df1b0000 	svcle	0x001b0000
    877c:	0100001d 	tsteq	r0, sp, lsl r0
    8780:	a724104c 	strge	r1, [r4, -ip, asr #32]!
    8784:	e2000003 	and	r0, r0, #3
    8788:	de00007e 	mcrle	0, 0, r0, cr0, cr14, {3}
    878c:	1800007e 	stmdane	r0, {r1, r2, r3, r4, r5, r6}
    8790:	0000233c 	andeq	r2, r0, ip, lsr r3
    8794:	0d104e01 	ldceq	14, cr4, [r0, #-4]
    8798:	00000666 	andeq	r0, r0, r6, ror #12
    879c:	00007f02 	andeq	r7, r0, r2, lsl #30
    87a0:	00007f00 	andeq	r7, r0, r0, lsl #30
    87a4:	7f012c00 	svcvc	0x00012c00
    87a8:	0100000d 	tsteq	r0, sp
    87ac:	010d1040 	tsteq	sp, r0, asr #32
    87b0:	0000012f 	andeq	r0, r0, pc, lsr #2
    87b4:	10002878 	andne	r2, r0, r8, ror r8
    87b8:	10002884 	andne	r2, r0, r4, lsl #17
    87bc:	01007d02 	tsteq	r0, r2, lsl #26
    87c0:	18770124 	ldmdane	r7!, {r2, r5, r8}^
    87c4:	1d010000 	stcne	0, cr0, [r1, #-0]
    87c8:	4a010c10 	bmi	4b810 <__HEAP_SIZE+0x4a810>
    87cc:	00000001 	andeq	r0, r0, r1
    87d0:	00000000 	andeq	r0, r0, r0
    87d4:	02000000 	andeq	r0, r0, #0
    87d8:	9a01007d 	bls	489d4 <__HEAP_SIZE+0x479d4>
    87dc:	18000024 	stmdane	r0, {r2, r5}
    87e0:	00001a93 	muleq	r0, r3, sl
    87e4:	10101f01 	andsne	r1, r0, r1, lsl #30
    87e8:	0000014a 	andeq	r0, r0, sl, asr #2
    87ec:	00007f17 	andeq	r7, r0, r7, lsl pc
    87f0:	00007f15 	andeq	r7, r0, r5, lsl pc
    87f4:	000ca025 	andeq	sl, ip, r5, lsr #32
    87f8:	10200100 	eorne	r0, r0, r0, lsl #2
    87fc:	00012f11 	andeq	r2, r1, r1, lsl pc
    8800:	24000000 	strcs	r0, [r0], #-0
    8804:	001d0b01 	andseq	r0, sp, r1, lsl #22
    8808:	100a0100 	andne	r0, sl, r0, lsl #2
    880c:	014a010c 	cmpeq	sl, ip, lsl #2
    8810:	286c0000 	stmdacs	ip!, {}^	; <UNPREDICTABLE>
    8814:	28781000 	ldmdacs	r8!, {ip}^
    8818:	7d021000 	stcvc	0, cr1, [r2, #-0]
    881c:	24cf0100 	strbcs	r0, [pc], #256	; 8824 <__HEAP_SIZE+0x7824>
    8820:	99180000 	ldmdbls	r8, {}	; <UNPREDICTABLE>
    8824:	01000020 	tsteq	r0, r0, lsr #32
    8828:	4a10100c 	bmi	40c860 <__RAM_SIZE+0x30c860>
    882c:	2c000001 	stccs	0, cr0, [r0], {1}
    8830:	2a00007f 	bcs	8a34 <__HEAP_SIZE+0x7a34>
    8834:	0000007f 	andeq	r0, r0, pc, ror r0
    8838:	11f10121 	mvnsne	r0, r1, lsr #2
    883c:	74010000 	strvc	r0, [r1], #-0
    8840:	19010c0f 	stmdbne	r1, {r0, r1, r2, r3, sl, fp}
    8844:	20000001 	andcs	r0, r0, r1
    8848:	5010002a 	andspl	r0, r0, sl, lsr #32
    884c:	3f10002b 	svccc	0x0010002b
    8850:	0100007f 	tsteq	r0, pc, ror r0
    8854:	000025df 	ldrdeq	r2, [r0], -pc	; <UNPREDICTABLE>
    8858:	00233c18 	eoreq	r3, r3, r8, lsl ip
    885c:	0f760100 	svceq	0x00760100
    8860:	0006660d 	andeq	r6, r6, sp, lsl #12
    8864:	007f6b00 	rsbseq	r6, pc, r0, lsl #22
    8868:	007f5f00 	rsbseq	r5, pc, r0, lsl #30
    886c:	21cd1800 	biccs	r1, sp, r0, lsl #16
    8870:	77010000 	strvc	r0, [r1, -r0]
    8874:	0119100f 	tsteq	r9, pc
    8878:	7fc20000 	svcvc	0x00c20000
    887c:	7fb80000 	svcvc	0x00b80000
    8880:	b8230000 	stmdalt	r3!, {}	; <UNPREDICTABLE>
    8884:	cc000005 	stcgt	0, cr0, [r0], {5}
    8888:	25000025 	strcs	r0, [r0, #-37]	; 0xffffffdb
    888c:	0000148f 	andeq	r1, r0, pc, lsl #9
    8890:	180f8601 	stmdane	pc, {r0, r9, sl, pc}	; <UNPREDICTABLE>
    8894:	00000119 	andeq	r0, r0, r9, lsl r1
    8898:	05e02300 	strbeq	r2, [r0, #768]!	; 0x300
    889c:	254f0000 	strbcs	r0, [pc, #-0]	; 88a4 <__HEAP_SIZE+0x78a4>
    88a0:	89180000 	ldmdbhi	r8, {}	; <UNPREDICTABLE>
    88a4:	0100000a 	tsteq	r0, sl
    88a8:	dd190f9c 	ldcle	15, cr0, [r9, #-624]	; 0xfffffd90
    88ac:	08000006 	stmdaeq	r0, {r1, r2}
    88b0:	04000080 	streq	r0, [r0], #-128	; 0xffffff80
    88b4:	00000080 	andeq	r0, r0, r0, lsl #1
    88b8:	0005f823 	andeq	pc, r5, r3, lsr #16
    88bc:	00256e00 	eoreq	r6, r5, r0, lsl #28
    88c0:	0a891800 	beq	fe24e8c8 <__StackTop+0xc614e8c8>
    88c4:	9e010000 	cdpls	0, 0, cr0, cr1, cr0, {0}
    88c8:	06dd190f 	ldrbeq	r1, [sp], pc, lsl #18
    88cc:	802a0000 	eorhi	r0, sl, r0
    88d0:	80260000 	eorhi	r0, r6, r0
    88d4:	1c000000 	stcne	0, cr0, [r0], {-0}
    88d8:	10002aa6 	andne	r2, r0, r6, lsr #21
    88dc:	10002ad6 	ldrdne	r2, [r0], -r6
    88e0:	00002591 	muleq	r0, r1, r5
    88e4:	000a5518 	andeq	r5, sl, r8, lsl r5
    88e8:	0f9f0100 	svceq	0x009f0100
    88ec:	00039119 	andeq	r9, r3, r9, lsl r1
    88f0:	00804a00 	addeq	r4, r0, r0, lsl #20
    88f4:	00804800 	addeq	r4, r0, r0, lsl #16
    88f8:	10230000 	eorne	r0, r3, r0
    88fc:	b9000006 	stmdblt	r0, {r1, r2}
    8900:	18000025 	stmdane	r0, {r0, r2, r5}
    8904:	00001625 	andeq	r1, r0, r5, lsr #12
    8908:	240fcc01 	strcs	ip, [pc], #-3073	; 8910 <__HEAP_SIZE+0x7910>
    890c:	0000014a 	andeq	r0, r0, sl, asr #2
    8910:	00008065 	andeq	r8, r0, r5, rrx
    8914:	0000805d 	andeq	r8, r0, sp, asr r0
    8918:	002b101d 	eoreq	r1, fp, sp, lsl r0
    891c:	001e9e10 	andseq	r9, lr, r0, lsl lr
    8920:	f01d0000 			; <UNDEFINED> instruction: 0xf01d0000
    8924:	9110002a 	tstls	r0, sl, lsr #32
    8928:	1d000014 	stcne	0, cr0, [r0, #-80]	; 0xffffffb0
    892c:	10002b04 	andne	r2, r0, r4, lsl #22
    8930:	0000382a 	andeq	r3, r0, sl, lsr #16
    8934:	2a261d00 	bcs	98fd3c <__RAM_SIZE+0x88fd3c>
    8938:	37f21000 	ldrbcc	r1, [r2, r0]!
    893c:	2a1d0000 	bcs	748944 <__RAM_SIZE+0x648944>
    8940:	0010002b 	andseq	r0, r0, fp, lsr #32
    8944:	00000038 	andeq	r0, r0, r8, lsr r0
    8948:	001a3e27 	andseq	r3, sl, r7, lsr #28
    894c:	0f360100 	svceq	0x00360100
    8950:	014a0117 	cmpeq	sl, r7, lsl r1
    8954:	24200000 	strtcs	r0, [r0], #-0
    8958:	24601000 	strbtcs	r1, [r0], #-0
    895c:	7d021000 	stcvc	0, cr1, [r2, #-0]
    8960:	26280100 	strtcs	r0, [r8], -r0, lsl #2
    8964:	93180000 	tstls	r8, #0
    8968:	0100001a 	tsteq	r0, sl, lsl r0
    896c:	4a140f38 	bmi	50c654 <__RAM_SIZE+0x40c654>
    8970:	9f000001 	svcls	0x00000001
    8974:	9b000080 	blls	8b7c <__HEAP_SIZE+0x7b7c>
    8978:	18000080 	stmdane	r0, {r7}
    897c:	000017a4 	andeq	r1, r0, r4, lsr #15
    8980:	150f3901 	strne	r3, [pc, #-2305]	; 8087 <__HEAP_SIZE+0x7087>
    8984:	0000012f 	andeq	r0, r0, pc, lsr #2
    8988:	000080c4 	andeq	r8, r0, r4, asr #1
    898c:	000080be 	strheq	r8, [r0], -lr
    8990:	96012900 	strls	r2, [r1], -r0, lsl #18
    8994:	0100000d 	tsteq	r0, sp
    8998:	01060ee3 	smlatteq	r6, r3, lr, r0
    899c:	1000285c 	andne	r2, r0, ip, asr r8
    89a0:	1000286c 	andne	r2, r0, ip, ror #16
    89a4:	01007d02 	tsteq	r0, r2, lsl #26
    89a8:	19cd0122 	stmibne	sp, {r1, r5, r8}^
    89ac:	b8010000 	stmdalt	r1, {}	; <UNPREDICTABLE>
    89b0:	0001060e 	andeq	r0, r1, lr, lsl #12
    89b4:	00000000 	andeq	r0, r0, r0
    89b8:	ee000000 	cdp	0, 0, cr0, cr0, cr0, {0}
    89bc:	01000080 	smlabbeq	r0, r0, r0, r0
    89c0:	000026b1 			; <UNDEFINED> instruction: 0x000026b1
    89c4:	00054023 	andeq	r4, r5, r3, lsr #32
    89c8:	00269e00 	eoreq	r9, r6, r0, lsl #28
    89cc:	148f1800 	strne	r1, [pc], #2048	; 89d4 <__HEAP_SIZE+0x79d4>
    89d0:	be010000 	cdplt	0, 0, cr0, cr1, cr0, {0}
    89d4:	0119140e 	tsteq	r9, lr, lsl #8
    89d8:	81120000 	tsthi	r2, r0
    89dc:	810e0000 	mrshi	r0, (UNDEF: 14)
    89e0:	001d0000 	andseq	r0, sp, r0
    89e4:	64000000 	strvs	r0, [r0], #-0
    89e8:	1d000038 	stcne	0, cr0, [r0, #-224]	; 0xffffff20
    89ec:	00000000 	andeq	r0, r0, r0
    89f0:	00003047 	andeq	r3, r0, r7, asr #32
    89f4:	0000001d 	andeq	r0, r0, sp, lsl r0
    89f8:	0015cb00 	andseq	ip, r5, r0, lsl #22
    89fc:	00001d00 	andeq	r1, r0, r0, lsl #26
    8a00:	30470000 	subcc	r0, r7, r0
    8a04:	1d000000 	stcne	0, cr0, [r0, #-0]
    8a08:	00000000 	andeq	r0, r0, r0
    8a0c:	0000380e 	andeq	r3, r0, lr, lsl #16
    8a10:	0000001d 	andeq	r0, r0, sp, lsl r0
    8a14:	00387300 	eorseq	r7, r8, r0, lsl #6
    8a18:	01220000 			; <UNDEFINED> instruction: 0x01220000
    8a1c:	0000003a 	andeq	r0, r0, sl, lsr r0
    8a20:	060e5101 	streq	r5, [lr], -r1, lsl #2
    8a24:	002f5401 	eoreq	r5, pc, r1, lsl #8
    8a28:	002f9c10 	eoreq	r9, pc, r0, lsl ip	; <UNPREDICTABLE>
    8a2c:	00813110 	addeq	r3, r1, r0, lsl r1
    8a30:	27070100 	strcs	r0, [r7, -r0, lsl #2]
    8a34:	93180000 	tstls	r8, #0
    8a38:	0100001a 	tsteq	r0, sl, lsl r0
    8a3c:	19100e53 	ldmdbne	r0, {r0, r1, r4, r6, r9, sl, fp}
    8a40:	57000001 	strpl	r0, [r0, -r1]
    8a44:	51000081 	smlabbpl	r0, r1, r0, r0
    8a48:	1d000081 	stcne	0, cr0, [r0, #-516]	; 0xfffffdfc
    8a4c:	10002f5a 	andne	r2, r0, sl, asr pc
    8a50:	00002707 	andeq	r2, r0, r7, lsl #14
    8a54:	002f6c1d 	eoreq	r6, pc, sp, lsl ip	; <UNPREDICTABLE>
    8a58:	00388110 	eorseq	r8, r8, r0, lsl r1
    8a5c:	2f721d00 	svccs	0x00721d00
    8a60:	380e1000 	stmdacc	lr, {ip}
    8a64:	8a1d0000 	bhi	748a6c <__RAM_SIZE+0x648a6c>
    8a68:	9010002f 	andsls	r0, r0, pc, lsr #32
    8a6c:	00000038 	andeq	r0, r0, r8, lsr r0
    8a70:	001b7d2d 	andseq	r7, fp, sp, lsr #26
    8a74:	0db70100 	ldfeqs	f0, [r7]
    8a78:	01190113 	tsteq	r9, r3, lsl r1
    8a7c:	2ee80000 	cdpcs	0, 14, cr0, cr8, cr0, {0}
    8a80:	2f541000 	svccs	0x00541000
    8a84:	81801000 	orrhi	r1, r0, r0
    8a88:	07010000 	streq	r0, [r1, -r0]
    8a8c:	18000028 	stmdane	r0, {r3, r5}
    8a90:	00001a93 	muleq	r0, r3, sl
    8a94:	100db901 	andne	fp, sp, r1, lsl #18
    8a98:	00000119 	andeq	r0, r0, r9, lsl r1
    8a9c:	000081ca 	andeq	r8, r0, sl, asr #3
    8aa0:	000081c4 	andeq	r8, r0, r4, asr #3
    8aa4:	00148f18 	andseq	r8, r4, r8, lsl pc
    8aa8:	0dba0100 	ldfeqs	f0, [sl]
    8aac:	00011910 	andeq	r1, r1, r0, lsl r9
    8ab0:	0081f800 	addeq	pc, r1, r0, lsl #16
    8ab4:	0081f600 	addeq	pc, r1, r0, lsl #12
    8ab8:	22851600 	addcs	r1, r5, #0, 12
    8abc:	bb010000 	bllt	48ac4 <__HEAP_SIZE+0x47ac4>
    8ac0:	05f90a0d 	ldrbeq	r0, [r9, #2573]!	; 0xa0d
    8ac4:	91020000 	mrsls	r0, (UNDEF: 2)
    8ac8:	1fa7186c 	svcne	0x00a7186c
    8acc:	bc010000 	stclt	0, cr0, [r1], {-0}
    8ad0:	00ea140d 	rsceq	r1, sl, sp, lsl #8
    8ad4:	820d0000 	andhi	r0, sp, #0
    8ad8:	820b0000 	andhi	r0, fp, #0
    8adc:	a5180000 	ldrge	r0, [r8, #-0]
    8ae0:	01000018 	tsteq	r0, r8, lsl r0
    8ae4:	19100dbd 	ldmdbne	r0, {r0, r2, r3, r4, r5, r7, r8, sl, fp}
    8ae8:	25000001 	strcs	r0, [r0, #-1]
    8aec:	21000082 	smlabbcs	r0, r2, r0, r0
    8af0:	28000082 	stmdacs	r0, {r1, r7}
    8af4:	00000788 	andeq	r0, r0, r8, lsl #15
    8af8:	001c7416 	andseq	r7, ip, r6, lsl r4
    8afc:	0e040100 	adfeqs	f0, f4, f0
    8b00:	0008f01c 	andeq	pc, r8, ip, lsl r0	; <UNPREDICTABLE>
    8b04:	60910200 	addsvs	r0, r1, r0, lsl #4
    8b08:	0014c216 	andseq	ip, r4, r6, lsl r2
    8b0c:	0e050100 	adfeqs	f0, f5, f0
    8b10:	0005bb1b 	andeq	fp, r5, fp, lsl fp
    8b14:	64910200 	ldrvs	r0, [r1], #512	; 0x200
    8b18:	001dad16 	andseq	sl, sp, r6, lsl sp
    8b1c:	0e060100 	adfeqs	f0, f6, f0
    8b20:	00002924 	andeq	r2, r0, r4, lsr #18
    8b24:	68910200 	ldmvs	r1, {r9}
    8b28:	002f221e 	eoreq	r2, pc, lr, lsl r2	; <UNPREDICTABLE>
    8b2c:	00091710 	andeq	r1, r9, r0, lsl r7
    8b30:	0027df00 	eoreq	sp, r7, r0, lsl #30
    8b34:	50011f00 	andpl	r1, r1, r0, lsl #30
    8b38:	1f609102 	svcne	0x00609102
    8b3c:	91025101 	tstls	r2, r1, lsl #2
    8b40:	52011f64 	andpl	r1, r1, #100, 30	; 0x190
    8b44:	00689102 	rsbeq	r9, r8, r2, lsl #2
    8b48:	002f3820 	eoreq	r3, pc, r0, lsr #16
    8b4c:	00357e10 	eorseq	r7, r5, r0, lsl lr
    8b50:	50011f00 	andpl	r1, r1, r0, lsl #30
    8b54:	2b710305 	blcs	1c49770 <__RAM_SIZE+0x1b49770>
    8b58:	011f1000 	tsteq	pc, r0
    8b5c:	6c910251 	lfmvs	f0, 4, [r1], {81}	; 0x51
    8b60:	0253011f 	subseq	r0, r3, #-1073741817	; 0xc0000007
    8b64:	021f0075 	andseq	r0, pc, #117	; 0x75
    8b68:	7502007d 	strvc	r0, [r2, #-125]	; 0xffffff83
    8b6c:	00000000 	andeq	r0, r0, r0
    8b70:	1fe90121 	svcne	0x00e90121
    8b74:	56010000 	strpl	r0, [r1], -r0
    8b78:	1901100d 	stmdbne	r1, {r0, r2, r3, ip}
    8b7c:	00000001 	andeq	r0, r0, r1
    8b80:	00000000 	andeq	r0, r0, r0
    8b84:	44000000 	strmi	r0, [r0], #-0
    8b88:	01000082 	smlabbeq	r0, r2, r0, r0
    8b8c:	000028fd 	strdeq	r2, [r0], -sp
    8b90:	0017451b 	andseq	r4, r7, fp, lsl r5
    8b94:	0d560100 	ldfeqe	f0, [r6, #-0]
    8b98:	0003a731 	andeq	sl, r3, r1, lsr r7
    8b9c:	00826800 	addeq	r6, r2, r0, lsl #16
    8ba0:	00826400 	addeq	r6, r2, r0, lsl #8
    8ba4:	0cd91800 	ldcleq	8, cr1, [r9], {0}
    8ba8:	58010000 	stmdapl	r1, {}	; <UNPREDICTABLE>
    8bac:	0119140d 	tsteq	r9, sp, lsl #8
    8bb0:	828e0000 	addhi	r0, lr, #0
    8bb4:	82860000 	addhi	r0, r6, #0
    8bb8:	3c180000 	ldccc	0, cr0, [r8], {-0}
    8bbc:	01000023 	tsteq	r0, r3, lsr #32
    8bc0:	71170d59 	tstvc	r7, r9, asr sp
    8bc4:	c9000006 	stmdbgt	r0, {r1, r2}
    8bc8:	c5000082 	strgt	r0, [r0, #-130]	; 0xffffff7e
    8bcc:	18000082 	stmdane	r0, {r1, r7}
    8bd0:	00000ca0 	andeq	r0, r0, r0, lsr #25
    8bd4:	150d5a01 	strne	r5, [sp, #-2561]	; 0xfffff5ff
    8bd8:	0000012f 	andeq	r0, r0, pc, lsr #2
    8bdc:	000082eb 	andeq	r8, r0, fp, ror #5
    8be0:	000082e7 	andeq	r8, r0, r7, ror #5
    8be4:	0000001c 	andeq	r0, r0, ip, lsl r0
    8be8:	00000000 	andeq	r0, r0, r0
    8bec:	00289e00 	eoreq	r9, r8, r0, lsl #28
    8bf0:	0a551800 	beq	154ebf8 <__RAM_SIZE+0x144ebf8>
    8bf4:	93010000 	movwls	r0, #4096	; 0x1000
    8bf8:	0391150d 	orrseq	r1, r1, #54525952	; 0x3400000
    8bfc:	830b0000 	movwhi	r0, #45056	; 0xb000
    8c00:	83090000 	movwhi	r0, #36864	; 0x9000
    8c04:	1d000000 	stcne	0, cr0, [r0, #-0]
    8c08:	00000000 	andeq	r0, r0, r0
    8c0c:	0000380e 	andeq	r3, r0, lr, lsl #16
    8c10:	0000001e 	andeq	r0, r0, lr, lsl r0
    8c14:	0029aa00 	eoreq	sl, r9, r0, lsl #20
    8c18:	0028bb00 	eoreq	fp, r8, r0, lsl #22
    8c1c:	50011f00 	andpl	r1, r1, r0, lsl #30
    8c20:	00007402 	andeq	r7, r0, r2, lsl #8
    8c24:	0000001e 	andeq	r0, r0, lr, lsl r0
    8c28:	0037d400 	eorseq	sp, r7, r0, lsl #8
    8c2c:	0028cf00 	eoreq	ip, r8, r0, lsl #30
    8c30:	50011f00 	andpl	r1, r1, r0, lsl #30
    8c34:	00007702 	andeq	r7, r0, r2, lsl #14
    8c38:	0000001e 	andeq	r0, r0, lr, lsl r0
    8c3c:	00381c00 	eorseq	r1, r8, r0, lsl #24
    8c40:	0028e300 	eoreq	lr, r8, r0, lsl #6
    8c44:	50011f00 	andpl	r1, r1, r0, lsl #30
    8c48:	00007502 	andeq	r7, r0, r2, lsl #10
    8c4c:	00000020 	andeq	r0, r0, r0, lsr #32
    8c50:	00389e00 	eorseq	r9, r8, r0, lsl #28
    8c54:	50011f00 	andpl	r1, r1, r0, lsl #30
    8c58:	8af80305 	bhi	ffe09874 <__StackTop+0xc7d09874>
    8c5c:	011f3800 	tsteq	pc, r0, lsl #16
    8c60:	18740251 	ldmdane	r4!, {r0, r4, r6, r9}^
    8c64:	01220000 			; <UNDEFINED> instruction: 0x01220000
    8c68:	0000239d 	muleq	r0, sp, r3
    8c6c:	0a0d1901 	beq	34f078 <__RAM_SIZE+0x24f078>
    8c70:	00000001 	andeq	r0, r0, r1
    8c74:	00000000 	andeq	r0, r0, r0
    8c78:	00831e00 	addeq	r1, r3, r0, lsl #28
    8c7c:	29aa0100 	stmibcs	sl!, {r8}
    8c80:	451b0000 	ldrmi	r0, [fp, #-0]
    8c84:	01000017 	tsteq	r0, r7, lsl r0
    8c88:	a7240d19 			; <UNDEFINED> instruction: 0xa7240d19
    8c8c:	46000003 	strmi	r0, [r0], -r3
    8c90:	3e000083 	cdpcc	0, 0, cr0, cr0, cr3, {4}
    8c94:	18000083 	stmdane	r0, {r0, r1, r7}
    8c98:	0000233c 	andeq	r2, r0, ip, lsr r3
    8c9c:	170d1b01 	strne	r1, [sp, -r1, lsl #22]
    8ca0:	00000671 	andeq	r0, r0, r1, ror r6
    8ca4:	00008385 	andeq	r8, r0, r5, lsl #7
    8ca8:	0000837d 	andeq	r8, r0, sp, ror r3
    8cac:	0000001c 	andeq	r0, r0, ip, lsl r0
    8cb0:	00000000 	andeq	r0, r0, r0
    8cb4:	00296600 	eoreq	r6, r9, r0, lsl #12
    8cb8:	0a551800 	beq	154ecc0 <__RAM_SIZE+0x144ecc0>
    8cbc:	3a010000 	bcc	48cc4 <__HEAP_SIZE+0x47cc4>
    8cc0:	0391150d 	orrseq	r1, r1, #54525952	; 0x3400000
    8cc4:	83be0000 			; <UNDEFINED> instruction: 0x83be0000
    8cc8:	83bc0000 			; <UNDEFINED> instruction: 0x83bc0000
    8ccc:	1d000000 	stcne	0, cr0, [r0, #-0]
    8cd0:	00000000 	andeq	r0, r0, r0
    8cd4:	000037f2 	strdeq	r3, [r0], -r2
    8cd8:	0000001e 	andeq	r0, r0, lr, lsl r0
    8cdc:	0029aa00 	eoreq	sl, r9, r0, lsl #20
    8ce0:	00298300 	eoreq	r8, r9, r0, lsl #6
    8ce4:	50011f00 	andpl	r1, r1, r0, lsl #30
    8ce8:	00007402 	andeq	r7, r0, r2, lsl #8
    8cec:	0000001d 	andeq	r0, r0, sp, lsl r0
    8cf0:	00380000 	eorseq	r0, r8, r0
    8cf4:	00001e00 	andeq	r1, r0, r0, lsl #28
    8cf8:	37d40000 	ldrbcc	r0, [r4, r0]
    8cfc:	29a00000 	stmibcs	r0!, {}	; <UNPREDICTABLE>
    8d00:	011f0000 	tsteq	pc, r0
    8d04:	00750250 	rsbseq	r0, r5, r0, asr r2
    8d08:	00001d00 	andeq	r1, r0, r0, lsl #26
    8d0c:	382a0000 	stmdacc	sl!, {}	; <UNPREDICTABLE>
    8d10:	27000000 	strcs	r0, [r0, -r0]
    8d14:	00001f1d 	andeq	r1, r0, sp, lsl pc
    8d18:	170cd301 	strne	sp, [ip, -r1, lsl #6]
    8d1c:	00011901 	andeq	r1, r1, r1, lsl #18
	...
    8d28:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    8d2c:	002a2501 	eoreq	r2, sl, r1, lsl #10
    8d30:	1dcf1b00 	vstrne	d17, [pc]	; 8d38 <__HEAP_SIZE+0x7d38>
    8d34:	d3010000 	movwle	r0, #4096	; 0x1000
    8d38:	03b3420c 			; <UNDEFINED> instruction: 0x03b3420c
    8d3c:	83e50000 	mvnhi	r0, #0
    8d40:	83d10000 	bicshi	r0, r1, #0
    8d44:	93180000 	tstls	r8, #0
    8d48:	0100001a 	tsteq	r0, sl, lsl r0
    8d4c:	19140cd5 	ldmdbne	r4, {r0, r2, r4, r6, r7, sl, fp}
    8d50:	70000001 	andvc	r0, r0, r1
    8d54:	6a000084 	bvs	8f6c <__HEAP_SIZE+0x7f6c>
    8d58:	18000084 	stmdane	r0, {r2, r7}
    8d5c:	0000233c 	andeq	r2, r0, ip, lsr r3
    8d60:	1d0cd601 	stcne	6, cr13, [ip, #-4]
    8d64:	00002a2b 	andeq	r2, r0, fp, lsr #20
    8d68:	000084b0 			; <UNDEFINED> instruction: 0x000084b0
    8d6c:	0000849c 	muleq	r0, ip, r4
    8d70:	0000002b 	andeq	r0, r0, fp, lsr #32
    8d74:	00000000 	andeq	r0, r0, r0
    8d78:	00782e00 	rsbseq	r2, r8, r0, lsl #28
    8d7c:	240cea01 	strcs	lr, [ip], #-2561	; 0xfffff5ff
    8d80:	00000119 	andeq	r0, r0, r9, lsl r1
    8d84:	00008539 	andeq	r8, r0, r9, lsr r5
    8d88:	00008535 	andeq	r8, r0, r5, lsr r5
    8d8c:	04070000 	streq	r0, [r7], #-0
    8d90:	0000064d 	andeq	r0, r0, sp, asr #12
    8d94:	002a2503 	eoreq	r2, sl, r3, lsl #10
    8d98:	c0012200 	andgt	r2, r1, r0, lsl #4
    8d9c:	01000021 	tsteq	r0, r1, lsr #32
    8da0:	010a0c31 	tsteq	sl, r1, lsr ip
	...
    8dac:	00008557 	andeq	r8, r0, r7, asr r5
    8db0:	002b3701 	eoreq	r3, fp, r1, lsl #14
    8db4:	1f861b00 	svcne	0x00861b00
    8db8:	31010000 	mrscc	r0, (UNDEF: 1)
    8dbc:	03a7250c 			; <UNDEFINED> instruction: 0x03a7250c
    8dc0:	857d0000 	ldrbhi	r0, [sp, #-0]!
    8dc4:	85770000 	ldrbhi	r0, [r7, #-0]!
    8dc8:	3c180000 	ldccc	0, cr0, [r8], {-0}
    8dcc:	01000023 	tsteq	r0, r3, lsr #32
    8dd0:	66110c33 			; <UNDEFINED> instruction: 0x66110c33
    8dd4:	aa000006 	bge	8df4 <__HEAP_SIZE+0x7df4>
    8dd8:	a6000085 	strge	r0, [r0], -r5, lsl #1
    8ddc:	23000085 	movwcs	r0, #133	; 0x85
    8de0:	00000698 	muleq	r0, r8, r6
    8de4:	00002a93 	muleq	r0, r3, sl
    8de8:	0100782e 	tsteq	r0, lr, lsr #16
    8dec:	191c0c58 	ldmdbne	ip, {r3, r4, r6, sl, fp}
    8df0:	ce000001 	cdpgt	0, 0, cr0, cr0, cr1, {0}
    8df4:	c8000085 	stmdagt	r0, {r0, r2, r7}
    8df8:	00000085 	andeq	r0, r0, r5, lsl #1
    8dfc:	0006b023 	andeq	fp, r6, r3, lsr #32
    8e00:	002adf00 	eoreq	sp, sl, r0, lsl #30
    8e04:	1e041800 	cdpne	8, 0, cr1, cr4, cr0, {0}
    8e08:	92010000 	andls	r0, r1, #0
    8e0c:	012f190c 			; <UNDEFINED> instruction: 0x012f190c
    8e10:	85fe0000 	ldrbhi	r0, [lr, #0]!
    8e14:	85f80000 	ldrbhi	r0, [r8, #0]!
    8e18:	001d0000 	andseq	r0, sp, r0
    8e1c:	f2000000 	vhadd.s8	d0, d0, d0
    8e20:	1d000037 	stcne	0, cr0, [r0, #-220]	; 0xffffff24
    8e24:	00000000 	andeq	r0, r0, r0
    8e28:	00001491 	muleq	r0, r1, r4
    8e2c:	0000001d 	andeq	r0, r0, sp, lsl r0
    8e30:	00380000 	eorseq	r0, r8, r0
    8e34:	00001d00 	andeq	r1, r0, r0, lsl #26
    8e38:	382a0000 	stmdacc	sl!, {}	; <UNPREDICTABLE>
    8e3c:	001d0000 	andseq	r0, sp, r0
    8e40:	63000000 	movwvs	r0, #0
    8e44:	0000001c 	andeq	r0, r0, ip, lsl r0
    8e48:	0000001d 	andeq	r0, r0, sp, lsl r0
    8e4c:	0037f200 	eorseq	pc, r7, r0, lsl #4
    8e50:	00001e00 	andeq	r1, r0, r0, lsl #28
    8e54:	37d40000 	ldrbcc	r0, [r4, r0]
    8e58:	2afc0000 	bcs	fff08e60 <__StackTop+0xc7e08e60>
    8e5c:	011f0000 	tsteq	pc, r0
    8e60:	00750250 	rsbseq	r0, r5, r0, asr r2
    8e64:	00001e00 	andeq	r1, r0, r0, lsl #28
    8e68:	37d40000 	ldrbcc	r0, [r4, r0]
    8e6c:	2b100000 	blcs	408e74 <__RAM_SIZE+0x308e74>
    8e70:	011f0000 	tsteq	pc, r0
    8e74:	18740250 	ldmdane	r4!, {r4, r6, r9}^
    8e78:	00001e00 	andeq	r1, r0, r0, lsl #28
    8e7c:	389e0000 	ldmcc	lr, {}	; <UNPREDICTABLE>
    8e80:	2b2d0000 	blcs	b48e88 <__RAM_SIZE+0xa48e88>
    8e84:	011f0000 	tsteq	pc, r0
    8e88:	18030550 	stmdane	r3, {r4, r6, r8, sl}
    8e8c:	1f38008b 	svcne	0x0038008b
    8e90:	75025101 	strvc	r5, [r2, #-257]	; 0xfffffeff
    8e94:	001d0000 	andseq	r0, sp, r0
    8e98:	00000000 	andeq	r0, r0, r0
    8e9c:	00000038 	andeq	r0, r0, r8, lsr r0
    8ea0:	1d590122 	ldfnee	f0, [r9, #-136]	; 0xffffff78
    8ea4:	cd010000 	stcgt	0, cr0, [r1, #-0]
    8ea8:	00010a0a 	andeq	r0, r1, sl, lsl #20
    8eac:	00000000 	andeq	r0, r0, r0
    8eb0:	2b000000 	blcs	8eb8 <__HEAP_SIZE+0x7eb8>
    8eb4:	01000086 	smlabbeq	r0, r6, r0, r0
    8eb8:	00002c24 	andeq	r2, r0, r4, lsr #24
    8ebc:	001dcf1b 	andseq	ip, sp, fp, lsl pc
    8ec0:	0acd0100 	beq	ff3492c8 <__StackTop+0xc72492c8>
    8ec4:	0003a729 	andeq	sl, r3, r9, lsr #14
    8ec8:	00865100 	addeq	r5, r6, r0, lsl #2
    8ecc:	00864b00 	addeq	r4, r6, r0, lsl #22
    8ed0:	1ca41b00 	vstmiane	r4!, {d1-d0}
    8ed4:	ce010000 	cdpgt	0, 0, cr0, cr1, cr0, {0}
    8ed8:	012f280a 			; <UNDEFINED> instruction: 0x012f280a
    8edc:	86840000 	strhi	r0, [r4], r0
    8ee0:	867a0000 	ldrbthi	r0, [sl], -r0
    8ee4:	3c180000 	ldccc	0, cr0, [r8], {-0}
    8ee8:	01000023 	tsteq	r0, r3, lsr #32
    8eec:	66110ad0 			; <UNDEFINED> instruction: 0x66110ad0
    8ef0:	c9000006 	stmdbgt	r0, {r1, r2}
    8ef4:	c5000086 	strgt	r0, [r0, #-134]	; 0xffffff7a
    8ef8:	18000086 	stmdane	r0, {r1, r2, r7}
    8efc:	00002221 	andeq	r2, r0, r1, lsr #4
    8f00:	150ad101 	strne	sp, [sl, #-257]	; 0xfffffeff
    8f04:	0000012f 	andeq	r0, r0, pc, lsr #2
    8f08:	000086ed 	andeq	r8, r0, sp, ror #13
    8f0c:	000086e7 	andeq	r8, r0, r7, ror #13
    8f10:	00218e18 	eoreq	r8, r1, r8, lsl lr
    8f14:	0ad10100 	beq	ff44931c <__StackTop+0xc734931c>
    8f18:	00012f2c 	andeq	r2, r1, ip, lsr #30
    8f1c:	00871800 	addeq	r1, r7, r0, lsl #16
    8f20:	00871600 	addeq	r1, r7, r0, lsl #12
    8f24:	0cd91800 	ldcleq	8, cr1, [r9], {0}
    8f28:	d2010000 	andle	r0, r1, #0
    8f2c:	0119140a 	tsteq	r9, sl, lsl #8
    8f30:	87330000 	ldrhi	r0, [r3, -r0]!
    8f34:	872b0000 	strhi	r0, [fp, -r0]!
    8f38:	001c0000 	andseq	r0, ip, r0
    8f3c:	00000000 	andeq	r0, r0, r0
    8f40:	f4000000 	vst4.8	{d0-d3}, [r0], r0
    8f44:	1800002b 	stmdane	r0, {r0, r1, r3, r5}
    8f48:	00000a55 	andeq	r0, r0, r5, asr sl
    8f4c:	150b6c01 	strne	r6, [fp, #-3073]	; 0xfffff3ff
    8f50:	00000391 	muleq	r0, r1, r3
    8f54:	0000876b 	andeq	r8, r0, fp, ror #14
    8f58:	00008769 	andeq	r8, r0, r9, ror #14
    8f5c:	00001d00 	andeq	r1, r0, r0, lsl #26
    8f60:	37f20000 	ldrbcc	r0, [r2, r0]!
    8f64:	001d0000 	andseq	r0, sp, r0
    8f68:	00000000 	andeq	r0, r0, r0
    8f6c:	1e000038 	mcrne	0, 0, r0, cr0, cr8, {1}
    8f70:	00000000 	andeq	r0, r0, r0
    8f74:	000037d4 	ldrdeq	r3, [r0], -r4
    8f78:	00002c1a 	andeq	r2, r0, sl, lsl ip
    8f7c:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    8f80:	1d000075 	stcne	0, cr0, [r0, #-468]	; 0xfffffe2c
    8f84:	00000000 	andeq	r0, r0, r0
    8f88:	0000382a 	andeq	r3, r0, sl, lsr #16
    8f8c:	6a012100 	bvs	51394 <__HEAP_SIZE+0x50394>
    8f90:	0100001d 	tsteq	r0, sp, lsl r0
    8f94:	01110a9d 			; <UNDEFINED> instruction: 0x01110a9d
    8f98:	0000012f 	andeq	r0, r0, pc, lsr #2
	...
    8fa4:	0000877e 	andeq	r8, r0, lr, ror r7
    8fa8:	002cab01 	eoreq	sl, ip, r1, lsl #22
    8fac:	1dcf1b00 	vstrne	d17, [pc]	; 8fb4 <__HEAP_SIZE+0x7fb4>
    8fb0:	9d010000 	stcls	0, cr0, [r1, #-0]
    8fb4:	03b3420a 			; <UNDEFINED> instruction: 0x03b3420a
    8fb8:	87a40000 	strhi	r0, [r4, r0]!
    8fbc:	879e0000 	ldrhi	r0, [lr, r0]
    8fc0:	3c180000 	ldccc	0, cr0, [r8], {-0}
    8fc4:	01000023 	tsteq	r0, r3, lsr #32
    8fc8:	25170a9f 	ldrcs	r0, [r7, #-2719]	; 0xfffff561
    8fcc:	cf00002a 	svcgt	0x0000002a
    8fd0:	cd000087 	stcgt	0, cr0, [r0, #-540]	; 0xfffffde4
    8fd4:	18000087 	stmdane	r0, {r0, r1, r2, r7}
    8fd8:	00000c7f 	andeq	r0, r0, pc, ror ip
    8fdc:	150aa001 	strne	sl, [sl, #-1]
    8fe0:	0000012f 	andeq	r0, r0, pc, lsr #2
    8fe4:	000087e4 	andeq	r8, r0, r4, ror #15
    8fe8:	000087e2 	andeq	r8, r0, r2, ror #15
    8fec:	000ca018 	andeq	sl, ip, r8, lsl r0
    8ff0:	0aa10100 	beq	fe8493f8 <__StackTop+0xc67493f8>
    8ff4:	00012f15 	andeq	r2, r1, r5, lsl pc
    8ff8:	0087fb00 	addeq	pc, r7, r0, lsl #22
    8ffc:	0087f700 	addeq	pc, r7, r0, lsl #14
    9000:	00001d00 	andeq	r1, r0, r0, lsl #26
    9004:	380e0000 	stmdacc	lr, {}	; <UNPREDICTABLE>
    9008:	001d0000 	andseq	r0, sp, r0
    900c:	1c000000 	stcne	0, cr0, [r0], {-0}
    9010:	00000038 	andeq	r0, r0, r8, lsr r0
    9014:	22b00121 	adcscs	r0, r0, #1073741832	; 0x40000008
    9018:	83010000 	movwhi	r0, #4096	; 0x1000
    901c:	2f01110a 	svccs	0x0001110a
    9020:	00000001 	andeq	r0, r0, r1
    9024:	00000000 	andeq	r0, r0, r0
    9028:	19000000 	stmdbne	r0, {}	; <UNPREDICTABLE>
    902c:	01000088 	smlabbeq	r0, r8, r0, r0
    9030:	00002d1d 	andeq	r2, r0, sp, lsl sp
    9034:	001dcf1b 	andseq	ip, sp, fp, lsl pc
    9038:	0a830100 	beq	fe0c9440 <__StackTop+0xc5fc9440>
    903c:	0003b33b 	andeq	fp, r3, fp, lsr r3
    9040:	00883f00 	addeq	r3, r8, r0, lsl #30
    9044:	00883900 	addeq	r3, r8, r0, lsl #18
    9048:	233c1800 	teqcs	ip, #0, 16
    904c:	85010000 	strhi	r0, [r1, #-0]
    9050:	2a25170a 	bcs	94ec80 <__RAM_SIZE+0x84ec80>
    9054:	886a0000 	stmdahi	sl!, {}^	; <UNPREDICTABLE>
    9058:	88680000 	stmdahi	r8!, {}^	; <UNPREDICTABLE>
    905c:	7f180000 	svcvc	0x00180000
    9060:	0100000c 	tsteq	r0, ip
    9064:	2f150a86 	svccs	0x00150a86
    9068:	7f000001 	svcvc	0x00000001
    906c:	7d000088 	stcvc	0, cr0, [r0, #-544]	; 0xfffffde0
    9070:	1d000088 	stcne	0, cr0, [r0, #-544]	; 0xfffffde0
    9074:	00000000 	andeq	r0, r0, r0
    9078:	000037f2 	strdeq	r3, [r0], -r2
    907c:	0000001d 	andeq	r0, r0, sp, lsl r0
    9080:	00380000 	eorseq	r0, r8, r0
    9084:	01210000 			; <UNDEFINED> instruction: 0x01210000
    9088:	00001ce8 	andeq	r1, r0, r8, ror #25
    908c:	110a5301 	tstne	sl, r1, lsl #6
    9090:	00012f01 	andeq	r2, r1, r1, lsl #30
	...
    909c:	00889200 	addeq	r9, r8, r0, lsl #4
    90a0:	2da40100 	stfcss	f0, [r4]
    90a4:	cf1b0000 	svcgt	0x001b0000
    90a8:	0100001d 	tsteq	r0, sp, lsl r0
    90ac:	b33e0a53 	teqlt	lr, #339968	; 0x53000
    90b0:	b8000003 	stmdalt	r0, {r0, r1}
    90b4:	b2000088 	andlt	r0, r0, #136	; 0x88
    90b8:	18000088 	stmdane	r0, {r3, r7}
    90bc:	0000233c 	andeq	r2, r0, ip, lsr r3
    90c0:	170a5501 	strne	r5, [sl, -r1, lsl #10]
    90c4:	00002a25 	andeq	r2, r0, r5, lsr #20
    90c8:	000088e3 	andeq	r8, r0, r3, ror #17
    90cc:	000088e1 	andeq	r8, r0, r1, ror #17
    90d0:	000c7f18 	andeq	r7, ip, r8, lsl pc
    90d4:	0a560100 	beq	15894dc <__RAM_SIZE+0x14894dc>
    90d8:	00012f15 	andeq	r2, r1, r5, lsl pc
    90dc:	0088f800 	addeq	pc, r8, r0, lsl #16
    90e0:	0088f600 	addeq	pc, r8, r0, lsl #12
    90e4:	0ca01800 	stceq	8, cr1, [r0]
    90e8:	57010000 	strpl	r0, [r1, -r0]
    90ec:	012f150a 			; <UNDEFINED> instruction: 0x012f150a
    90f0:	890f0000 	stmdbhi	pc, {}	; <UNPREDICTABLE>
    90f4:	890b0000 	stmdbhi	fp, {}	; <UNPREDICTABLE>
    90f8:	001d0000 	andseq	r0, sp, r0
    90fc:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
    9100:	1d000038 	stcne	0, cr0, [r0, #-224]	; 0xffffff20
    9104:	00000000 	andeq	r0, r0, r0
    9108:	0000381c 	andeq	r3, r0, ip, lsl r8
    910c:	df012100 	svcle	0x00012100
    9110:	01000019 	tsteq	r0, r9, lsl r0
    9114:	01110a39 	tsteq	r1, r9, lsr sl
    9118:	0000012f 	andeq	r0, r0, pc, lsr #2
	...
    9124:	0000892d 	andeq	r8, r0, sp, lsr #18
    9128:	002e1601 	eoreq	r1, lr, r1, lsl #12
    912c:	1dcf1b00 	vstrne	d17, [pc]	; 9134 <__HEAP_SIZE+0x8134>
    9130:	39010000 	stmdbcc	r1, {}	; <UNPREDICTABLE>
    9134:	03b3370a 			; <UNDEFINED> instruction: 0x03b3370a
    9138:	89530000 	ldmdbhi	r3, {}^	; <UNPREDICTABLE>
    913c:	894d0000 	stmdbhi	sp, {}^	; <UNPREDICTABLE>
    9140:	3c180000 	ldccc	0, cr0, [r8], {-0}
    9144:	01000023 	tsteq	r0, r3, lsr #32
    9148:	25170a3b 	ldrcs	r0, [r7, #-2619]	; 0xfffff5c5
    914c:	7e00002a 	cdpvc	0, 0, cr0, cr0, cr10, {1}
    9150:	7c000089 	stcvc	0, cr0, [r0], {137}	; 0x89
    9154:	18000089 	stmdane	r0, {r0, r3, r7}
    9158:	00000c7f 	andeq	r0, r0, pc, ror ip
    915c:	150a3c01 	strne	r3, [sl, #-3073]	; 0xfffff3ff
    9160:	0000012f 	andeq	r0, r0, pc, lsr #2
    9164:	00008993 	muleq	r0, r3, r9
    9168:	00008991 	muleq	r0, r1, r9
    916c:	0000001d 	andeq	r0, r0, sp, lsl r0
    9170:	0037f200 	eorseq	pc, r7, r0, lsl #4
    9174:	00001d00 	andeq	r1, r0, r0, lsl #26
    9178:	38000000 	stmdacc	r0, {}	; <UNPREDICTABLE>
    917c:	21000000 	mrscs	r0, (UNDEF: 0)
    9180:	001b9001 	andseq	r9, fp, r1
    9184:	09b50100 	ldmibeq	r5!, {r8}
    9188:	04f20110 	ldrbteq	r0, [r2], #272	; 0x110
	...
    9194:	89a60000 	stmibhi	r6!, {}	; <UNPREDICTABLE>
    9198:	f9010000 			; <UNDEFINED> instruction: 0xf9010000
    919c:	1b00002e 	blne	925c <__HEAP_SIZE+0x825c>
    91a0:	00001dcf 	andeq	r1, r0, pc, asr #27
    91a4:	2c09b501 	cfstr32cs	mvfx11, [r9], {1}
    91a8:	000003a7 	andeq	r0, r0, r7, lsr #7
    91ac:	000089e8 	andeq	r8, r0, r8, ror #19
    91b0:	000089de 	ldrdeq	r8, [r0], -lr
    91b4:	00173d18 	andseq	r3, r7, r8, lsl sp
    91b8:	09b70100 	ldmibeq	r7!, {r8}
    91bc:	0004f214 	andeq	pc, r4, r4, lsl r2	; <UNPREDICTABLE>
    91c0:	008a2e00 	addeq	r2, sl, r0, lsl #28
    91c4:	008a2a00 	addeq	r2, sl, r0, lsl #20
    91c8:	15211800 	strne	r1, [r1, #-2048]!	; 0xfffff800
    91cc:	b8010000 	stmdalt	r1, {}	; <UNPREDICTABLE>
    91d0:	1aca1809 	bne	ff28f1fc <__StackTop+0xc718f1fc>
    91d4:	8a500000 	bhi	14091dc <__RAM_SIZE+0x13091dc>
    91d8:	8a4c0000 	bhi	13091e0 <__RAM_SIZE+0x12091e0>
    91dc:	bb180000 	bllt	6091e4 <__RAM_SIZE+0x5091e4>
    91e0:	01000015 	tsteq	r0, r5, lsl r0
    91e4:	ca1809b9 	bgt	60b8d0 <__RAM_SIZE+0x50b8d0>
    91e8:	7200001a 	andvc	r0, r0, #26
    91ec:	6e00008a 	cdpvs	0, 0, cr0, cr0, cr10, {4}
    91f0:	1800008a 	stmdane	r0, {r1, r3, r7}
    91f4:	000015ad 	andeq	r1, r0, sp, lsr #11
    91f8:	1809ba01 	stmdane	r9, {r0, r9, fp, ip, sp, pc}
    91fc:	00001aca 	andeq	r1, r0, sl, asr #21
    9200:	00008a94 	muleq	r0, r4, sl
    9204:	00008a90 	muleq	r0, r0, sl
    9208:	0016f418 	andseq	pc, r6, r8, lsl r4	; <UNPREDICTABLE>
    920c:	09bb0100 	ldmibeq	fp!, {r8}
    9210:	001aca18 	andseq	ip, sl, r8, lsl sl
    9214:	008ab600 	addeq	fp, sl, r0, lsl #12
    9218:	008ab200 	addeq	fp, sl, r0, lsl #4
    921c:	233c1800 	teqcs	ip, #0, 16
    9220:	bc010000 	stclt	0, cr0, [r1], {-0}
    9224:	2a2b1d09 	bcs	ad0650 <__RAM_SIZE+0x9d0650>
    9228:	8ade0000 	bhi	ff789230 <__StackTop+0xc7689230>
    922c:	8ad40000 	bhi	ff509234 <__StackTop+0xc7409234>
    9230:	28230000 	stmdacs	r3!, {}	; <UNPREDICTABLE>
    9234:	e6000005 	str	r0, [r0], -r5
    9238:	2e00002e 	cdpcs	0, 0, cr0, cr0, cr14, {1}
    923c:	ec010078 	stc	0, cr0, [r1], {120}	; 0x78
    9240:	01192809 	tsteq	r9, r9, lsl #16
    9244:	8b260000 	blhi	98924c <__RAM_SIZE+0x88924c>
    9248:	8b200000 	blhi	809250 <__RAM_SIZE+0x709250>
    924c:	1d000000 	stcne	0, cr0, [r0, #-0]
    9250:	00000000 	andeq	r0, r0, r0
    9254:	000037f2 	strdeq	r3, [r0], -r2
    9258:	0000001d 	andeq	r0, r0, sp, lsl r0
    925c:	00380000 	eorseq	r0, r8, r0
    9260:	01220000 			; <UNDEFINED> instruction: 0x01220000
    9264:	000002bc 			; <UNDEFINED> instruction: 0x000002bc
    9268:	0a098301 	beq	269e74 <__RAM_SIZE+0x169e74>
    926c:	002b5001 	eoreq	r5, fp, r1
    9270:	002b6e10 	eoreq	r6, fp, r0, lsl lr
    9274:	008b4f10 	addeq	r4, fp, r0, lsl pc
    9278:	2f740100 	svccs	0x00740100
    927c:	db1b0000 	blle	6c9284 <__RAM_SIZE+0x5c9284>
    9280:	01000020 	tsteq	r0, r0, lsr #32
    9284:	5b270983 	blpl	9cb898 <__RAM_SIZE+0x8cb898>
    9288:	75000001 	strvc	r0, [r0, #-1]
    928c:	6f00008b 	svcvs	0x0000008b
    9290:	1800008b 	stmdane	r0, {r0, r1, r3, r7}
    9294:	000021cd 	andeq	r2, r0, sp, asr #3
    9298:	14098501 	strne	r8, [r9], #-1281	; 0xfffffaff
    929c:	00000119 	andeq	r0, r0, r9, lsl r1
    92a0:	00008ba5 	andeq	r8, r0, r5, lsr #23
    92a4:	00008ba1 	andeq	r8, r0, r1, lsr #23
    92a8:	002b5a1d 	eoreq	r5, fp, sp, lsl sl
    92ac:	00262810 	eoreq	r2, r6, r0, lsl r8
    92b0:	2b621e00 	blcs	1890ab8 <__RAM_SIZE+0x1790ab8>
    92b4:	09861000 	stmibeq	r6, {ip}
    92b8:	2f610000 	svccs	0x00610000
    92bc:	011f0000 	tsteq	pc, r0
    92c0:	00740250 	rsbseq	r0, r4, r0, asr r2
    92c4:	0151011f 	cmpeq	r1, pc, lsl r1
    92c8:	661d0030 			; <UNDEFINED> instruction: 0x661d0030
    92cc:	cf10002b 	svcgt	0x0010002b
    92d0:	1d000024 	stcne	0, cr0, [r0, #-144]	; 0xffffff70
    92d4:	10002b6c 	andne	r2, r0, ip, ror #22
    92d8:	0000382a 	andeq	r3, r0, sl, lsr #16
    92dc:	42012100 	andmi	r2, r1, #0, 2
    92e0:	01000015 	tsteq	r0, r5, lsl r0
    92e4:	01100927 	tsteq	r0, r7, lsr #18
    92e8:	00000119 	andeq	r0, r0, r9, lsl r1
	...
    92f4:	00008bc4 	andeq	r8, r0, r4, asr #23
    92f8:	00304701 	eorseq	r4, r0, r1, lsl #14
    92fc:	1fba1b00 	svcne	0x00ba1b00
    9300:	27010000 	strcs	r0, [r1, -r0]
    9304:	18a33409 	stmiane	r3!, {r0, r3, sl, ip, sp}
    9308:	8be80000 	blhi	ffa09310 <__StackTop+0xc7909310>
    930c:	8be40000 	blhi	ff909314 <__StackTop+0xc7809314>
    9310:	dd1b0000 	ldcle	0, cr0, [fp, #-0]
    9314:	01000022 	tsteq	r0, r2, lsr #32
    9318:	5b320928 	blpl	c8b7c0 <__RAM_SIZE+0xb8b7c0>
    931c:	0c000001 	stceq	0, cr0, [r0], {1}
    9320:	0600008c 	streq	r0, [r0], -ip, lsl #1
    9324:	1800008c 	stmdane	r0, {r2, r3, r7}
    9328:	00002303 	andeq	r2, r0, r3, lsl #6
    932c:	14092a01 	strne	r2, [r9], #-2561	; 0xfffff5ff
    9330:	0000014a 	andeq	r0, r0, sl, asr #2
    9334:	00008c46 	andeq	r8, r0, r6, asr #24
    9338:	00008c38 	andeq	r8, r0, r8, lsr ip
    933c:	0021cd18 	eoreq	ip, r1, r8, lsl sp
    9340:	092b0100 	stmdbeq	fp!, {r8}
    9344:	00011914 	andeq	r1, r1, r4, lsl r9
    9348:	008ca200 	addeq	sl, ip, r0, lsl #4
    934c:	008c9e00 	addeq	r9, ip, r0, lsl #28
    9350:	1afc1800 	bne	fff0f358 <__StackTop+0xc7e0f358>
    9354:	2b010000 	blcs	4935c <__HEAP_SIZE+0x4835c>
    9358:	01192509 	tsteq	r9, r9, lsl #10
    935c:	8cca0000 	stclhi	0, cr0, [sl], {0}
    9360:	8cc00000 	stclhi	0, cr0, [r0], {0}
    9364:	28230000 	stmdacs	r3!, {}	; <UNPREDICTABLE>
    9368:	2b000006 	blcs	9388 <__HEAP_SIZE+0x8388>
    936c:	18000030 	stmdane	r0, {r4, r5}
    9370:	000019f1 	strdeq	r1, [r0], -r1	; <UNPREDICTABLE>
    9374:	1e093601 	cfmadd32ne	mvax0, mvfx3, mvfx9, mvfx1
    9378:	0000015b 	andeq	r0, r0, fp, asr r1
    937c:	00008d12 	andeq	r8, r0, r2, lsl sp
    9380:	00008d0e 	andeq	r8, r0, lr, lsl #26
    9384:	00000020 	andeq	r0, r0, r0, lsr #32
    9388:	00098600 	andeq	r8, r9, r0, lsl #12
    938c:	51011f00 	tstpl	r1, r0, lsl #30
    9390:	00003001 	andeq	r3, r0, r1
    9394:	0000001d 	andeq	r0, r0, sp, lsl r0
    9398:	00262800 	eoreq	r2, r6, r0, lsl #16
    939c:	00001d00 	andeq	r1, r0, r0, lsl #26
    93a0:	24cf0000 	strbcs	r0, [pc], #0	; 93a8 <__HEAP_SIZE+0x83a8>
    93a4:	001d0000 	andseq	r0, sp, r0
    93a8:	2a000000 	bcs	93b0 <__HEAP_SIZE+0x83b0>
    93ac:	00000038 	andeq	r0, r0, r8, lsr r0
    93b0:	1e180122 	mufneep	f0, f0, f2
    93b4:	8f010000 	svchi	0x00010000
    93b8:	00010a08 	andeq	r0, r1, r8, lsl #20
    93bc:	00000000 	andeq	r0, r0, r0
    93c0:	30000000 	andcc	r0, r0, r0
    93c4:	0100008d 	smlabbeq	r0, sp, r0, r0
    93c8:	0000313e 	andeq	r3, r0, lr, lsr r1
    93cc:	001f701b 	andseq	r7, pc, fp, lsl r0	; <UNPREDICTABLE>
    93d0:	088f0100 	stmeq	pc, {r8}	; <UNPREDICTABLE>
    93d4:	0003a724 	andeq	sl, r3, r4, lsr #14
    93d8:	008d5600 	addeq	r5, sp, r0, lsl #12
    93dc:	008d5000 	addeq	r5, sp, r0
    93e0:	233c1800 	teqcs	ip, #0, 16
    93e4:	91010000 	mrsls	r0, (UNDEF: 1)
    93e8:	06661108 	strbteq	r1, [r6], -r8, lsl #2
    93ec:	8d830000 	stchi	0, cr0, [r3]
    93f0:	8d7f0000 	ldclhi	0, cr0, [pc, #-0]	; 93f8 <__HEAP_SIZE+0x83f8>
    93f4:	10180000 	andsne	r0, r8, r0
    93f8:	01000016 	tsteq	r0, r6, lsl r0
    93fc:	19140892 	ldmdbne	r4, {r1, r4, r7, fp}
    9400:	a7000001 	strge	r0, [r0, -r1]
    9404:	a100008d 	smlabbge	r0, sp, r0, r0
    9408:	1800008d 	stmdane	r0, {r0, r2, r3, r7}
    940c:	0000246b 	andeq	r2, r0, fp, ror #8
    9410:	14089301 	strne	r9, [r8], #-769	; 0xfffffcff
    9414:	00000119 	andeq	r0, r0, r9, lsl r1
    9418:	00008dd7 	ldrdeq	r8, [r0], -r7
    941c:	00008dd3 	ldrdeq	r8, [r0], -r3
    9420:	0000001d 	andeq	r0, r0, sp, lsl r0
    9424:	0037f200 	eorseq	pc, r7, r0, lsl #4
    9428:	00001e00 	andeq	r1, r0, r0, lsl #28
    942c:	37d40000 	ldrbcc	r0, [r4, r0]
    9430:	30d40000 	sbcscc	r0, r4, r0
    9434:	011f0000 	tsteq	pc, r0
    9438:	00750250 	rsbseq	r0, r5, r0, asr r2
    943c:	00001e00 	andeq	r1, r0, r0, lsl #28
    9440:	37d40000 	ldrbcc	r0, [r4, r0]
    9444:	30e80000 	rsccc	r0, r8, r0
    9448:	011f0000 	tsteq	pc, r0
    944c:	18740250 	ldmdane	r4!, {r4, r6, r9}^
    9450:	00001d00 	andeq	r1, r0, r0, lsl #26
    9454:	14910000 	ldrne	r0, [r1], #0
    9458:	001d0000 	andseq	r0, sp, r0
    945c:	00000000 	andeq	r0, r0, r0
    9460:	1e000038 	mcrne	0, 0, r0, cr0, cr8, {1}
    9464:	00000000 	andeq	r0, r0, r0
    9468:	000014a7 	andeq	r1, r0, r7, lsr #9
    946c:	0000310e 	andeq	r3, r0, lr, lsl #2
    9470:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    9474:	1e000074 	mcrne	0, 0, r0, cr0, cr4, {3}
    9478:	00000000 	andeq	r0, r0, r0
    947c:	0000389e 	muleq	r0, lr, r8
    9480:	0000312b 	andeq	r3, r0, fp, lsr #2
    9484:	0550011f 	ldrbeq	r0, [r0, #-287]	; 0xfffffee1
    9488:	008b3403 	addeq	r3, fp, r3, lsl #8
    948c:	51011f38 	tstpl	r1, r8, lsr pc
    9490:	00007502 	andeq	r7, r0, r2, lsl #10
    9494:	0000001d 	andeq	r0, r0, sp, lsl r0
    9498:	00380000 	eorseq	r0, r8, r0
    949c:	00001d00 	andeq	r1, r0, r0, lsl #26
    94a0:	382a0000 	stmdacc	sl!, {}	; <UNPREDICTABLE>
    94a4:	1a000000 	bne	94ac <__HEAP_SIZE+0x84ac>
    94a8:	00001b4e 	andeq	r1, r0, lr, asr #22
    94ac:	1107e301 	tstne	r7, r1, lsl #6
    94b0:	0025d801 	eoreq	sp, r5, r1, lsl #16
    94b4:	00269410 	eoreq	r9, r6, r0, lsl r4
    94b8:	008df510 	addeq	pc, sp, r0, lsl r5	; <UNPREDICTABLE>
    94bc:	31b60100 			; <UNDEFINED> instruction: 0x31b60100
    94c0:	ae1b0000 	cdpge	0, 1, cr0, cr11, cr0, {0}
    94c4:	0100001b 	tsteq	r0, fp, lsl r0
    94c8:	663307e3 	ldrtvs	r0, [r3], -r3, ror #15
    94cc:	19000006 	stmdbne	r0, {r1, r2}
    94d0:	1500008e 	strne	r0, [r0, #-142]	; 0xffffff72
    94d4:	1c00008e 	stcne	0, cr0, [r0], {142}	; 0x8e
    94d8:	10002626 	andne	r2, r0, r6, lsr #12
    94dc:	10002658 	andne	r2, r0, r8, asr r6
    94e0:	00003191 	muleq	r0, r1, r1
    94e4:	000a5518 	andeq	r5, sl, r8, lsl r5
    94e8:	081d0100 	ldmdaeq	sp, {r8}
    94ec:	0003910d 	andeq	r9, r3, sp, lsl #2
    94f0:	008e3900 	addeq	r3, lr, r0, lsl #18
    94f4:	008e3700 	addeq	r3, lr, r0, lsl #14
    94f8:	e01d0000 	ands	r0, sp, r0
    94fc:	f2100025 	vhadd.s16	d0, d0, d21
    9500:	1d000037 	stcne	0, cr0, [r0, #-220]	; 0xffffff24
    9504:	1000265c 	andne	r2, r0, ip, asr r6
    9508:	00003800 	andeq	r3, r0, r0, lsl #16
    950c:	0026741d 	eoreq	r7, r6, sp, lsl r4
    9510:	00163810 	andseq	r3, r6, r0, lsl r8
    9514:	267a1d00 	ldrbtcs	r1, [sl], -r0, lsl #26
    9518:	382a1000 	stmdacc	sl!, {ip}
    951c:	1a000000 	bne	9524 <__HEAP_SIZE+0x8524>
    9520:	00001ee9 	andeq	r1, r0, r9, ror #29
    9524:	0d070101 	stfeqs	f0, [r7, #-4]
    9528:	00248801 	eoreq	r8, r4, r1, lsl #16
    952c:	00251e10 	eoreq	r1, r5, r0, lsl lr
    9530:	008e4c10 	addeq	r4, lr, r0, lsl ip
    9534:	32f30100 	rscscc	r0, r3, #0, 2
    9538:	701b0000 	andsvc	r0, fp, r0
    953c:	01000023 	tsteq	r0, r3, lsr #32
    9540:	ea320701 	b	c8b14c <__RAM_SIZE+0xb8b14c>
    9544:	70000000 	andvc	r0, r0, r0
    9548:	6c00008e 	stcvs	0, cr0, [r0], {142}	; 0x8e
    954c:	1b00008e 	blne	978c <__HEAP_SIZE+0x878c>
    9550:	00001a14 	andeq	r1, r0, r4, lsl sl
    9554:	36070201 	strcc	r0, [r7], -r1, lsl #4
    9558:	000000be 	strheq	r0, [r0], -lr
    955c:	00008e92 	muleq	r0, r2, lr
    9560:	00008e8e 	andeq	r8, r0, lr, lsl #29
    9564:	0019781b 	andseq	r7, r9, fp, lsl r8
    9568:	07030100 	streq	r0, [r3, -r0, lsl #2]
    956c:	00003540 	andeq	r3, r0, r0, asr #10
    9570:	008eb800 	addeq	fp, lr, r0, lsl #16
    9574:	008eb000 	addeq	fp, lr, r0
    9578:	1efe1b00 	vmovne.f64	d17, #224	; 0xbf000000 -0.5
    957c:	04010000 	streq	r0, [r1], #-0
    9580:	00a13007 	adceq	r3, r1, r7
    9584:	8ef90000 	cdphi	0, 15, cr0, cr9, cr0, {0}
    9588:	8ef50000 	cdphi	0, 15, cr0, cr5, cr0, {0}
    958c:	ec1b0000 	ldc	0, cr0, [fp], {-0}
    9590:	01000014 	tsteq	r0, r4, lsl r0
    9594:	2f2f0705 	svccs	0x002f0705
    9598:	1b000001 	blne	95a4 <__HEAP_SIZE+0x85a4>
    959c:	1700008f 	strne	r0, [r0, -pc, lsl #1]
    95a0:	1900008f 	stmdbne	r0, {r0, r1, r2, r3, r7}
    95a4:	0000241e 	andeq	r2, r0, lr, lsl r4
    95a8:	38070601 	stmdacc	r7, {r0, r9, sl}
    95ac:	000032f9 	strdeq	r3, [r0], -r9
    95b0:	19049102 	stmdbne	r4, {r1, r8, ip, pc}
    95b4:	00001bae 	andeq	r1, r0, lr, lsr #23
    95b8:	2b070701 	blcs	1cb1c4 <__RAM_SIZE+0xcb1c4>
    95bc:	00000666 	andeq	r0, r0, r6, ror #12
    95c0:	19089102 	stmdbne	r8, {r1, r8, ip, pc}
    95c4:	00002247 	andeq	r2, r0, r7, asr #4
    95c8:	40070801 	andmi	r0, r7, r1, lsl #16
    95cc:	00003304 	andeq	r3, r0, r4, lsl #6
    95d0:	180c9102 	stmdane	ip, {r1, r8, ip, pc}
    95d4:	00002390 	muleq	r0, r0, r3
    95d8:	13070a01 	movwne	r0, #31233	; 0x7a01
    95dc:	000005bb 			; <UNDEFINED> instruction: 0x000005bb
    95e0:	00008f3c 	andeq	r8, r0, ip, lsr pc
    95e4:	00008f3a 	andeq	r8, r0, sl, lsr pc
    95e8:	0100782e 	tsteq	r0, lr, lsr #16
    95ec:	2f11070b 	svccs	0x0011070b
    95f0:	51000001 	tstpl	r0, r1
    95f4:	4f00008f 	svcmi	0x0000008f
    95f8:	1e00008f 	cdpne	0, 0, cr0, cr0, cr15, {4}
    95fc:	100024a6 	andne	r2, r0, r6, lsr #9
    9600:	000038ad 	andeq	r3, r0, sp, lsr #17
    9604:	000032ae 	andeq	r3, r0, lr, lsr #5
    9608:	0251011f 	subseq	r0, r1, #-1073741817	; 0xc0000007
    960c:	011fa508 	tsteq	pc, r8, lsl #10
    9610:	00770452 	rsbseq	r0, r7, r2, asr r4
    9614:	1e002432 	cfmvdhrne	mvd0, r2
    9618:	100024f0 	strdne	r2, [r0], -r0
    961c:	000038bb 			; <UNDEFINED> instruction: 0x000038bb
    9620:	000032c2 	andeq	r3, r0, r2, asr #5
    9624:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    9628:	1e000474 	mcrne	4, 0, r0, cr0, cr4, {3}
    962c:	100024f8 	strdne	r2, [r0], -r8
    9630:	000038bb 			; <UNDEFINED> instruction: 0x000038bb
    9634:	000032d6 	ldrdeq	r3, [r0], -r6
    9638:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    963c:	20001874 	andcs	r1, r0, r4, ror r8
    9640:	1000250e 	andne	r2, r0, lr, lsl #10
    9644:	000038ca 	andeq	r3, r0, sl, asr #17
    9648:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    964c:	011f0077 	tsteq	pc, r7, ror r0	; <UNPREDICTABLE>
    9650:	00780252 	rsbseq	r0, r8, r2, asr r2
    9654:	0253011f 	subseq	r0, r3, #-1073741817	; 0xc0000007
    9658:	00000079 	andeq	r0, r0, r9, ror r0
    965c:	03a70407 			; <UNDEFINED> instruction: 0x03a70407
    9660:	f3030000 	vhadd.u8	d0, d3, d0
    9664:	07000032 	smladxeq	r0, r2, r0, r0
    9668:	0005b604 	andeq	fp, r5, r4, lsl #12
    966c:	32fe0300 	rscscc	r0, lr, #0, 6
    9670:	01210000 			; <UNDEFINED> instruction: 0x01210000
    9674:	000002f3 	strdeq	r0, [r0], -r3
    9678:	1006b601 	andne	fp, r6, r1, lsl #12
    967c:	00011901 	andeq	r1, r1, r1, lsl #18
    9680:	00283800 	eoreq	r3, r8, r0, lsl #16
    9684:	00285a10 	eoreq	r5, r8, r0, lsl sl
    9688:	008f6410 	addeq	r6, pc, r0, lsl r4	; <UNPREDICTABLE>
    968c:	34140100 	ldrcc	r0, [r4], #-256	; 0xffffff00
    9690:	701b0000 	andsvc	r0, fp, r0
    9694:	01000023 	tsteq	r0, r3, lsr #32
    9698:	ea2c06b6 	b	b0b178 <__RAM_SIZE+0xa0b178>
    969c:	ac000000 	stcge	0, cr0, [r0], {-0}
    96a0:	a800008f 	stmdage	r0, {r0, r1, r2, r3, r7}
    96a4:	1b00008f 	blne	98e8 <__HEAP_SIZE+0x88e8>
    96a8:	00001a14 	andeq	r1, r0, r4, lsl sl
    96ac:	3006b701 	andcc	fp, r6, r1, lsl #14
    96b0:	000000be 	strheq	r0, [r0], -lr
    96b4:	00008fd1 	ldrdeq	r8, [r0], -r1
    96b8:	00008fcd 	andeq	r8, r0, sp, asr #31
    96bc:	0019781b 	andseq	r7, r9, fp, lsl r8
    96c0:	06b80100 	ldrteq	r0, [r8], r0, lsl #2
    96c4:	0000353a 	andeq	r3, r0, sl, lsr r5
    96c8:	008ff600 	addeq	pc, pc, r0, lsl #12
    96cc:	008ff200 	addeq	pc, pc, r0, lsl #4
    96d0:	1efe1b00 	vmovne.f64	d17, #224	; 0xbf000000 -0.5
    96d4:	b9010000 	stmdblt	r1, {}	; <UNPREDICTABLE>
    96d8:	00a12a06 	adceq	r2, r1, r6, lsl #20
    96dc:	901b0000 	andsls	r0, fp, r0
    96e0:	90170000 	andsls	r0, r7, r0
    96e4:	ec1b0000 	ldc	0, cr0, [fp], {-0}
    96e8:	01000014 	tsteq	r0, r4, lsl r0
    96ec:	2f2906ba 	svccs	0x002906ba
    96f0:	40000001 	andmi	r0, r0, r1
    96f4:	3c000090 	stccc	0, cr0, [r0], {144}	; 0x90
    96f8:	1b000090 	blne	9940 <__HEAP_SIZE+0x8940>
    96fc:	0000241e 	andeq	r2, r0, lr, lsl r4
    9700:	3206bb01 	andcc	fp, r6, #1024	; 0x400
    9704:	000032f9 	strdeq	r3, [r0], -r9
    9708:	00009064 	andeq	r9, r0, r4, rrx
    970c:	00009060 	andeq	r9, r0, r0, rrx
    9710:	001bae18 	andseq	sl, fp, r8, lsl lr
    9714:	06bd0100 	ldrteq	r0, [sp], r0, lsl #2
    9718:	00066611 	andeq	r6, r6, r1, lsl r6
    971c:	00908800 	addseq	r8, r0, r0, lsl #16
    9720:	00908400 	addseq	r8, r0, r0, lsl #8
    9724:	1a931800 	bne	fe4cf72c <__StackTop+0xc63cf72c>
    9728:	be010000 	cdplt	0, 0, cr0, cr1, cr0, {0}
    972c:	01191406 	tsteq	r9, r6, lsl #8
    9730:	90aa0000 	adcls	r0, sl, r0
    9734:	90a60000 	adcls	r0, r6, r0
    9738:	481e0000 	ldmdami	lr, {}	; <UNPREDICTABLE>
    973c:	14100028 	ldrne	r0, [r0], #-40	; 0xffffffd8
    9740:	0a000034 	beq	9818 <__HEAP_SIZE+0x8818>
    9744:	1f000034 	svcne	0x00000034
    9748:	f3035001 	vhadd.u8	d5, d3, d1
    974c:	011f5001 	tsteq	pc, r1
    9750:	01f30351 	mvnseq	r0, r1, asr r3
    9754:	52011f51 	andpl	r1, r1, #324	; 0x144
    9758:	5201f303 	andpl	pc, r1, #201326592	; 0xc000000
    975c:	0353011f 	cmpeq	r3, #-1073741817	; 0xc0000007
    9760:	1f5301f3 	svcne	0x005301f3
    9764:	02007d02 	andeq	r7, r0, #2, 26	; 0x80
    9768:	021f0074 	andseq	r0, pc, #116	; 0x74
    976c:	9103047d 	tstls	r3, sp, ror r4
    9770:	1d000604 	stcne	6, cr0, [r0, #-16]
    9774:	1000284e 	andne	r2, r0, lr, asr #16
    9778:	0000313e 	andeq	r3, r0, lr, lsr r1
    977c:	18392d00 	ldmdane	r9!, {r8, sl, fp, sp}
    9780:	54010000 	strpl	r0, [r1], #-0
    9784:	66011406 	strvs	r1, [r1], -r6, lsl #8
    9788:	94000006 	strls	r0, [r0], #-6
    978c:	f6100026 			; <UNDEFINED> instruction: 0xf6100026
    9790:	cb100026 	blgt	409830 <__RAM_SIZE+0x309830>
    9794:	01000090 	swpeq	r0, r0, [r0]	; <UNPREDICTABLE>
    9798:	0000357e 	andeq	r3, r0, lr, ror r5
    979c:	0023701b 	eoreq	r7, r3, fp, lsl r0
    97a0:	06540100 	ldrbeq	r0, [r4], -r0, lsl #2
    97a4:	0000ea32 	andeq	lr, r0, r2, lsr sl
    97a8:	00911300 	addseq	r1, r1, r0, lsl #6
    97ac:	00910f00 	addseq	r0, r1, r0, lsl #30
    97b0:	1a141b00 	bne	5103b8 <__RAM_SIZE+0x4103b8>
    97b4:	55010000 	strpl	r0, [r1, #-0]
    97b8:	00be3606 	adcseq	r3, lr, r6, lsl #12
    97bc:	91350000 	teqls	r5, r0
    97c0:	91310000 	teqls	r1, r0
    97c4:	781b0000 	ldmdavc	fp, {}	; <UNPREDICTABLE>
    97c8:	01000019 	tsteq	r0, r9, lsl r0
    97cc:	35400656 	strbcc	r0, [r0, #-1622]	; 0xfffff9aa
    97d0:	57000000 	strpl	r0, [r0, -r0]
    97d4:	53000091 	movwpl	r0, #145	; 0x91
    97d8:	1b000091 	blne	9a24 <__HEAP_SIZE+0x8a24>
    97dc:	00001efe 	strdeq	r1, [r0], -lr
    97e0:	30065701 	andcc	r5, r6, r1, lsl #14
    97e4:	000000a1 	andeq	r0, r0, r1, lsr #1
    97e8:	00009179 	andeq	r9, r0, r9, ror r1
    97ec:	00009175 	andeq	r9, r0, r5, ror r1
    97f0:	0014ec1b 	andseq	lr, r4, fp, lsl ip
    97f4:	06580100 	ldrbeq	r0, [r8], -r0, lsl #2
    97f8:	00012f2f 	andeq	r2, r1, pc, lsr #30
    97fc:	00919b00 	addseq	r9, r1, r0, lsl #22
    9800:	00919700 	addseq	r9, r1, r0, lsl #14
    9804:	241e1b00 	ldrcs	r1, [lr], #-2816	; 0xfffff500
    9808:	59010000 	stmdbpl	r1, {}	; <UNPREDICTABLE>
    980c:	32f93806 	rscscc	r3, r9, #393216	; 0x60000
    9810:	91bf0000 			; <UNDEFINED> instruction: 0x91bf0000
    9814:	91bb0000 			; <UNDEFINED> instruction: 0x91bb0000
    9818:	ae180000 	cdpge	0, 1, cr0, cr8, cr0, {0}
    981c:	0100001b 	tsteq	r0, fp, lsl r0
    9820:	6611065b 			; <UNDEFINED> instruction: 0x6611065b
    9824:	e7000006 	str	r0, [r0, -r6]
    9828:	df000091 	svcle	0x00000091
    982c:	23000091 	movwcs	r0, #145	; 0x91
    9830:	000004f8 	strdeq	r0, [r0], -r8
    9834:	0000353e 	andeq	r3, r0, lr, lsr r5
    9838:	001f5218 	andseq	r5, pc, r8, lsl r2	; <UNPREDICTABLE>
    983c:	06800100 	streq	r0, [r0], r0, lsl #2
    9840:	0005bb1b 	andeq	fp, r5, fp, lsl fp
    9844:	00922100 	addseq	r2, r2, r0, lsl #2
    9848:	00921b00 	addseq	r1, r2, r0, lsl #22
    984c:	26a81e00 	strtcs	r1, [r8], r0, lsl #28
    9850:	38d81000 	ldmcc	r8, {ip}^
    9854:	34fa0000 	ldrbtcc	r0, [sl], #0
    9858:	011f0000 	tsteq	pc, r0
    985c:	00750450 	rsbseq	r0, r5, r0, asr r4
    9860:	1e002432 	cfmvdhrne	mvd0, r2
    9864:	100026b2 			; <UNDEFINED> instruction: 0x100026b2
    9868:	000038d8 	ldrdeq	r3, [r0], -r8
    986c:	0000350e 	andeq	r3, r0, lr, lsl #10
    9870:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    9874:	1e004c08 	cdpne	12, 0, cr4, cr0, cr8, {0}
    9878:	100026be 			; <UNDEFINED> instruction: 0x100026be
    987c:	000038e6 	andeq	r3, r0, r6, ror #17
    9880:	0000352d 	andeq	r3, r0, sp, lsr #10
    9884:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    9888:	011f0074 	tsteq	pc, r4, ror r0	; <UNPREDICTABLE>
    988c:	1f300151 	svcne	0x00300151
    9890:	08025201 	stmdaeq	r2, {r0, r9, ip, lr}
    9894:	f020004c 			; <UNDEFINED> instruction: 0xf020004c
    9898:	38100026 	ldmdacc	r0, {r1, r2, r5}
    989c:	1f000038 	svcne	0x00000038
    98a0:	79025001 	stmdbvc	r2, {r0, ip, lr}
    98a4:	20000000 	andcs	r0, r0, r0
    98a8:	100026e2 	andne	r2, r0, r2, ror #13
    98ac:	000031b6 			; <UNDEFINED> instruction: 0x000031b6
    98b0:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    98b4:	011f0076 	tsteq	pc, r6, ror r0	; <UNPREDICTABLE>
    98b8:	00770251 	rsbseq	r0, r7, r1, asr r2
    98bc:	0252011f 	subseq	r0, r2, #-1073741817	; 0xc0000007
    98c0:	011f0075 	tsteq	pc, r5, ror r0	; <UNPREDICTABLE>
    98c4:	00780253 	rsbseq	r0, r8, r3, asr r2
    98c8:	007d021f 	rsbseq	r0, sp, pc, lsl r2
    98cc:	06009103 	streq	r9, [r0], -r3, lsl #2
    98d0:	047d021f 	ldrbteq	r0, [sp], #-543	; 0xfffffde1
    98d4:	06049103 	streq	r9, [r4], -r3, lsl #2
    98d8:	087d021f 	ldmdaeq	sp!, {r0, r1, r2, r3, r4, r9}^
    98dc:	1f007402 	svcne	0x00007402
    98e0:	010c7d02 	tsteq	ip, r2, lsl #26
    98e4:	21000030 	tstcs	r0, r0, lsr r0
    98e8:	0017bf01 	andseq	fp, r7, r1, lsl #30
    98ec:	051d0100 	ldreq	r0, [sp, #-256]	; 0xffffff00
    98f0:	03a70112 			; <UNDEFINED> instruction: 0x03a70112
    98f4:	28100000 	ldmdacs	r0, {}	; <UNPREDICTABLE>
    98f8:	28381000 	ldmdacs	r8!, {ip}
    98fc:	924a1000 	subls	r1, sl, #0
    9900:	99010000 	stmdbls	r1, {}	; <UNPREDICTABLE>
    9904:	1b000036 	blne	99e4 <__HEAP_SIZE+0x89e4>
    9908:	00002370 	andeq	r2, r0, r0, ror r3
    990c:	34051d01 	strcc	r1, [r5], #-3329	; 0xfffff2ff
    9910:	000000ea 	andeq	r0, r0, sl, ror #1
    9914:	00009286 	andeq	r9, r0, r6, lsl #5
    9918:	00009282 	andeq	r9, r0, r2, lsl #5
    991c:	001a141b 	andseq	r1, sl, fp, lsl r4
    9920:	051e0100 	ldreq	r0, [lr, #-256]	; 0xffffff00
    9924:	0000be38 	andeq	fp, r0, r8, lsr lr
    9928:	0092ab00 	addseq	sl, r2, r0, lsl #22
    992c:	0092a700 	addseq	sl, r2, r0, lsl #14
    9930:	19781b00 	ldmdbne	r8!, {r8, r9, fp, ip}^
    9934:	1f010000 	svcne	0x00010000
    9938:	00354205 	eorseq	r4, r5, r5, lsl #4
    993c:	92d00000 	sbcsls	r0, r0, #0
    9940:	92cc0000 	sbcls	r0, ip, #0
    9944:	fe1b0000 	cdp2	0, 1, cr0, cr11, cr0, {0}
    9948:	0100001e 	tsteq	r0, lr, lsl r0
    994c:	a1320520 	teqge	r2, r0, lsr #10
    9950:	f5000000 			; <UNDEFINED> instruction: 0xf5000000
    9954:	f1000092 	cps	#18
    9958:	19000092 	stmdbne	r0, {r1, r4, r7}
    995c:	000014ec 	andeq	r1, r0, ip, ror #9
    9960:	31052101 	tstcc	r5, r1, lsl #2
    9964:	0000012f 	andeq	r0, r0, pc, lsr #2
    9968:	19009102 	stmdbne	r0, {r1, r8, ip, pc}
    996c:	00001b9f 	muleq	r0, pc, fp	; <UNPREDICTABLE>
    9970:	39052201 	stmdbcc	r5, {r0, r9, sp}
    9974:	000005c1 	andeq	r0, r0, r1, asr #11
    9978:	19049102 	stmdbne	r4, {r1, r8, ip, pc}
    997c:	00001d93 	muleq	r0, r3, sp
    9980:	3a052301 	bcc	15258c <__RAM_SIZE+0x5258c>
    9984:	000008f6 	strdeq	r0, [r0], -r6
    9988:	16089102 	strne	r9, [r8], -r2, lsl #2
    998c:	00001a93 	muleq	r0, r3, sl
    9990:	16052501 	strne	r2, [r5], -r1, lsl #10
    9994:	000003a7 	andeq	r0, r0, r7, lsr #7
    9998:	18749102 	ldmdane	r4!, {r1, r8, ip, pc}^
    999c:	00001bae 	andeq	r1, r0, lr, lsr #23
    99a0:	11052601 	tstne	r5, r1, lsl #12
    99a4:	00000666 	andeq	r0, r0, r6, ror #12
    99a8:	00009318 	andeq	r9, r0, r8, lsl r3
    99ac:	00009316 	andeq	r9, r0, r6, lsl r3
    99b0:	00282c1e 	eoreq	r2, r8, lr, lsl ip
    99b4:	00369910 	eorseq	r9, r6, r0, lsl r9
    99b8:	00368f00 	eorseq	r8, r6, r0, lsl #30
    99bc:	50011f00 	andpl	r1, r1, r0, lsl #30
    99c0:	5001f303 	andpl	pc, r1, r3, lsl #6
    99c4:	0351011f 	cmpeq	r1, #-1073741817	; 0xc0000007
    99c8:	1f5101f3 	svcne	0x005101f3
    99cc:	f3035201 	vhsub.u8	d5, d3, d1
    99d0:	011f5201 	tsteq	pc, r1, lsl #4
    99d4:	01f30353 	mvnseq	r0, r3, asr r3
    99d8:	7d021f53 	stcvc	15, cr1, [r2, #-332]	; 0xfffffeb4
    99dc:	00740200 	rsbseq	r0, r4, r0, lsl #4
    99e0:	047d021f 	ldrbteq	r0, [sp], #-543	; 0xfffffde1
    99e4:	06049103 	streq	r9, [r4], -r3, lsl #2
    99e8:	087d021f 	ldmdaeq	sp!, {r0, r1, r2, r3, r4, r9}^
    99ec:	06089103 	streq	r9, [r8], -r3, lsl #2
    99f0:	0c7d021f 	lfmeq	f0, 2, [sp], #-124	; 0xffffff84
    99f4:	00749102 	rsbseq	r9, r4, r2, lsl #2
    99f8:	0028321d 	eoreq	r3, r8, sp, lsl r2
    99fc:	00313e10 	eorseq	r3, r1, r0, lsl lr
    9a00:	ca2d0000 	bgt	b49a08 <__RAM_SIZE+0xa49a08>
    9a04:	01000018 	tsteq	r0, r8, lsl r0
    9a08:	011404e6 	tsteq	r4, r6, ror #9
    9a0c:	00000666 	andeq	r0, r0, r6, ror #12
    9a10:	1000251e 	andne	r2, r0, lr, lsl r5
    9a14:	10002570 	andne	r2, r0, r0, ror r5
    9a18:	0000932b 	andeq	r9, r0, fp, lsr #6
    9a1c:	0037d401 	eorseq	sp, r7, r1, lsl #8
    9a20:	23701b00 	cmncs	r0, #0, 22
    9a24:	e6010000 	str	r0, [r1], -r0
    9a28:	00ea3804 	rsceq	r3, sl, r4, lsl #16
    9a2c:	937d0000 	cmnls	sp, #0
    9a30:	936f0000 	cmnls	pc, #0
    9a34:	141b0000 	ldrne	r0, [fp], #-0
    9a38:	0100001a 	tsteq	r0, sl, lsl r0
    9a3c:	be3c04e7 	cfsubdlt	mvd0, mvd12, mvd7
    9a40:	e0000000 	and	r0, r0, r0
    9a44:	d8000093 	stmdale	r0, {r0, r1, r4, r7}
    9a48:	1b000093 	blne	9c9c <__HEAP_SIZE+0x8c9c>
    9a4c:	00001978 	andeq	r1, r0, r8, ror r9
    9a50:	4604e801 	strmi	lr, [r4], -r1, lsl #16
    9a54:	00000035 	andeq	r0, r0, r5, lsr r0
    9a58:	0000941f 	andeq	r9, r0, pc, lsl r4
    9a5c:	00009417 	andeq	r9, r0, r7, lsl r4
    9a60:	001efe1b 	andseq	pc, lr, fp, lsl lr	; <UNPREDICTABLE>
    9a64:	04e90100 	strbteq	r0, [r9], #256	; 0x100
    9a68:	0000a136 	andeq	sl, r0, r6, lsr r1
    9a6c:	00945e00 	addseq	r5, r4, r0, lsl #28
    9a70:	00945600 	addseq	r5, r4, r0, lsl #12
    9a74:	14ec1b00 	strbtne	r1, [ip], #2816	; 0xb00
    9a78:	ea010000 	b	49a80 <__HEAP_SIZE+0x48a80>
    9a7c:	012f3504 			; <UNDEFINED> instruction: 0x012f3504
    9a80:	94990000 	ldrls	r0, [r9], #0
    9a84:	94950000 	ldrls	r0, [r5], #0
    9a88:	9f1b0000 	svcls	0x001b0000
    9a8c:	0100001b 	tsteq	r0, fp, lsl r0
    9a90:	c13d04eb 	teqgt	sp, fp, ror #9
    9a94:	bd000005 	stclt	0, cr0, [r0, #-20]	; 0xffffffec
    9a98:	b9000094 	stmdblt	r0, {r2, r4, r7}
    9a9c:	1b000094 	blne	9cf4 <__HEAP_SIZE+0x8cf4>
    9aa0:	00001d93 	muleq	r0, r3, sp
    9aa4:	3e04ec01 	cdpcc	12, 0, cr14, cr4, cr1, {0}
    9aa8:	000008f6 	strdeq	r0, [r0], -r6
    9aac:	000094e1 	andeq	r9, r0, r1, ror #9
    9ab0:	000094dd 	ldrdeq	r9, [r0], -sp
    9ab4:	00241e1b 	eoreq	r1, r4, fp, lsl lr
    9ab8:	04ed0100 	strbteq	r0, [sp], #256	; 0x100
    9abc:	0032f93e 	eorseq	pc, r2, lr, lsr r9	; <UNPREDICTABLE>
    9ac0:	00950500 	addseq	r0, r5, r0, lsl #10
    9ac4:	00950100 	addseq	r0, r5, r0, lsl #2
    9ac8:	1bae1800 	blne	feb8fad0 <__StackTop+0xc6a8fad0>
    9acc:	ef010000 	svc	0x00010000
    9ad0:	06661104 	strbteq	r1, [r6], -r4, lsl #2
    9ad4:	95290000 	strls	r0, [r9, #-0]!
    9ad8:	95250000 	strls	r0, [r5, #-0]!
    9adc:	3e1e0000 	cdpcc	0, 1, cr0, cr14, cr0, {0}
    9ae0:	e6100025 	ldr	r0, [r0], -r5, lsr #32
    9ae4:	94000038 	strls	r0, [r0], #-56	; 0xffffffc8
    9ae8:	1f000037 	svcne	0x00000037
    9aec:	74025001 	strvc	r5, [r2], #-1
    9af0:	51011f00 	tstpl	r1, r0, lsl #30
    9af4:	011f3001 	tsteq	pc, r1
    9af8:	4c080252 	sfmmi	f0, 4, [r8], {82}	; 0x52
    9afc:	25602000 	strbcs	r2, [r0, #-0]!
    9b00:	31b61000 			; <UNDEFINED> instruction: 0x31b61000
    9b04:	011f0000 	tsteq	pc, r0
    9b08:	00750250 	rsbseq	r0, r5, r0, asr r2
    9b0c:	0251011f 	subseq	r0, r1, #-1073741817	; 0xc0000007
    9b10:	011f0079 	tsteq	pc, r9, ror r0	; <UNPREDICTABLE>
    9b14:	00780252 	rsbseq	r0, r8, r2, asr r2
    9b18:	0253011f 	subseq	r0, r3, #-1073741817	; 0xc0000007
    9b1c:	021f0077 	andseq	r0, pc, #119	; 0x77
    9b20:	9103007d 	tstls	r3, sp, ror r0
    9b24:	021f0600 	andseq	r0, pc, #0, 12
    9b28:	9103047d 	tstls	r3, sp, ror r4
    9b2c:	021f060c 	andseq	r0, pc, #12, 12	; 0xc00000
    9b30:	7402087d 	strvc	r0, [r2], #-2173	; 0xfffff783
    9b34:	7d021f00 	stcvc	15, cr1, [r2, #-0]
    9b38:	0030010c 	eorseq	r0, r0, ip, lsl #2
    9b3c:	01012f00 	tsteq	r1, r0, lsl #30
    9b40:	00000a96 	muleq	r0, r6, sl
    9b44:	00000a96 	muleq	r0, r6, sl
    9b48:	0d01f708 	stceq	7, cr15, [r1, #-32]	; 0xffffffe0
    9b4c:	b101012f 	tstlt	r1, pc, lsr #2
    9b50:	b100000a 	tstlt	r0, sl
    9b54:	0800000a 	stmdaeq	r0, {r1, r3}
    9b58:	300601d1 	ldrdcc	r0, [r6], -r1
    9b5c:	0c4d0101 	stfeqe	f0, [sp], {1}
    9b60:	0c4d0000 	mareq	acc0, r0, sp
    9b64:	71060000 	mrsvc	r0, (UNDEF: 6)
    9b68:	0101300d 	tsteq	r1, sp
    9b6c:	00000abd 			; <UNDEFINED> instruction: 0x00000abd
    9b70:	00000abd 			; <UNDEFINED> instruction: 0x00000abd
    9b74:	300d7206 	andcc	r7, sp, r6, lsl #4
    9b78:	0ff70101 	svceq	0x00f70101
    9b7c:	0ff70000 	svceq	0x00f70000
    9b80:	74060000 	strvc	r0, [r6], #-0
    9b84:	01013011 	tsteq	r1, r1, lsl r0
    9b88:	00000d03 	andeq	r0, r0, r3, lsl #26
    9b8c:	00000d03 	andeq	r0, r0, r3, lsl #26
    9b90:	300d7506 	andcc	r7, sp, r6, lsl #10
    9b94:	0af80101 	beq	ffe09fa0 <__StackTop+0xc7d09fa0>
    9b98:	0af80000 	beq	ffe09ba0 <__StackTop+0xc7d09ba0>
    9b9c:	6f060000 	svcvs	0x00060000
    9ba0:	0101300d 	tsteq	r1, sp
    9ba4:	0000123b 	andeq	r1, r0, fp, lsr r2
    9ba8:	0000123b 	andeq	r1, r0, fp, lsr r2
    9bac:	2f06b80a 	svccs	0x0006b80a
    9bb0:	0a150101 	beq	549fbc <__RAM_SIZE+0x449fbc>
    9bb4:	0a150000 	beq	549bbc <__RAM_SIZE+0x449bbc>
    9bb8:	b9080000 	stmdblt	r8, {}	; <UNPREDICTABLE>
    9bbc:	012f0601 			; <UNDEFINED> instruction: 0x012f0601
    9bc0:	00210701 	eoreq	r0, r1, r1, lsl #14
    9bc4:	00210700 	eoreq	r0, r1, r0, lsl #14
    9bc8:	01770600 	cmneq	r7, r0, lsl #12
    9bcc:	01012f11 	tsteq	r1, r1, lsl pc
    9bd0:	000023a9 	andeq	r2, r0, r9, lsr #7
    9bd4:	000023a9 	andeq	r2, r0, r9, lsr #7
    9bd8:	0e01c70b 	cdpeq	7, 0, cr12, cr1, cr11, {0}
    9bdc:	95010130 	strls	r0, [r1, #-304]	; 0xfffffed0
    9be0:	9500001f 	strls	r0, [r0, #-31]	; 0xffffffe1
    9be4:	0a00001f 	beq	9c68 <__HEAP_SIZE+0x8c68>
    9be8:	012f06e3 	smulwteq	pc, r3, r6	; <UNPREDICTABLE>
    9bec:	00177d01 	andseq	r7, r7, r1, lsl #26
    9bf0:	00177d00 	andseq	r7, r7, r0, lsl #26
    9bf4:	05480b00 	strbeq	r0, [r8, #-2816]	; 0xfffff500
    9bf8:	0101300c 	tsteq	r1, ip
    9bfc:	000014d8 	ldrdeq	r1, [r0], -r8
    9c00:	000014d8 	ldrdeq	r1, [r0], -r8
    9c04:	2f0cdc0a 	svccs	0x000cdc0a
    9c08:	09ff0101 	ldmibeq	pc!, {r0, r8}^	; <UNPREDICTABLE>
    9c0c:	09ff0000 	ldmibeq	pc!, {}^	; <UNPREDICTABLE>
    9c10:	e7080000 	str	r0, [r8, -r0]
    9c14:	01300601 	teqeq	r0, r1, lsl #12
    9c18:	0001a101 	andeq	sl, r1, r1, lsl #2
    9c1c:	0001a100 	andeq	sl, r1, r0, lsl #2
    9c20:	09210c00 	stmdbeq	r1!, {sl, fp}
    9c24:	db01012f 	blle	4a0e8 <__HEAP_SIZE+0x490e8>
    9c28:	db000009 	blle	9c54 <__HEAP_SIZE+0x8c54>
    9c2c:	08000009 	stmdaeq	r0, {r0, r3}
    9c30:	300601c4 	andcc	r0, r6, r4, asr #3
    9c34:	1c0a0101 	stfnes	f0, [sl], {1}
    9c38:	1c0a0000 	stcne	0, cr0, [sl], {-0}
    9c3c:	800a0000 	andhi	r0, sl, r0
    9c40:	01013017 	tsteq	r1, r7, lsl r0
    9c44:	00000d72 	andeq	r0, r0, r2, ror sp
    9c48:	00000d72 	andeq	r0, r0, r2, ror sp
    9c4c:	3108b50a 	tstcc	r8, sl, lsl #10
    9c50:	01a10101 			; <UNDEFINED> instruction: 0x01a10101
    9c54:	01970000 	orrseq	r0, r7, r0
    9c58:	000d0000 	andeq	r0, sp, r0
    9c5c:	00198c00 	andseq	r8, r9, r0, lsl #24
    9c60:	3a000200 	bcc	a468 <__HEAP_SIZE+0x9468>
    9c64:	04000013 	streq	r0, [r0], #-19	; 0xffffffed
    9c68:	0000bf01 	andeq	fp, r0, r1, lsl #30
    9c6c:	25e20c00 	strbcs	r0, [r2, #3072]!	; 0xc00
    9c70:	01a80000 			; <UNDEFINED> instruction: 0x01a80000
    9c74:	0a280000 	beq	a09c7c <__RAM_SIZE+0x909c7c>
	...
    9c80:	71310000 	teqvc	r1, r0
    9c84:	e7020000 	str	r0, [r2, -r0]
    9c88:	02000004 	andeq	r0, r0, #4
    9c8c:	003517d1 	ldrsbteq	r1, [r5], -r1
    9c90:	04030000 	streq	r0, [r3], #-0
    9c94:	00021d07 	andeq	r1, r2, r7, lsl #26
    9c98:	05040400 	streq	r0, [r4, #-1024]	; 0xfffffc00
    9c9c:	00746e69 	rsbseq	r6, r4, r9, ror #28
    9ca0:	55050803 	strpl	r0, [r5, #-2051]	; 0xfffff7fd
    9ca4:	03000002 	movweq	r0, #2
    9ca8:	02490408 	subeq	r0, r9, #8, 8	; 0x8000000
    9cac:	01030000 	mrseq	r0, (UNDEF: 3)
    9cb0:	00008f06 	andeq	r8, r0, r6, lsl #30
    9cb4:	00000200 	andeq	r0, r0, r0, lsl #4
    9cb8:	2b030000 	blcs	c9cc0 <__HEAP_SIZE+0xc8cc0>
    9cbc:	00006418 	andeq	r6, r0, r8, lsl r4
    9cc0:	08010300 	stmdaeq	r1, {r8, r9}
    9cc4:	0000008d 	andeq	r0, r0, sp, lsl #1
    9cc8:	a5050203 	strge	r0, [r5, #-515]	; 0xfffffdfd
    9ccc:	03000002 	movweq	r0, #2
    9cd0:	00ac0702 	adceq	r0, ip, r2, lsl #14
    9cd4:	04030000 	streq	r0, [r3], #-0
    9cd8:	00025a05 	andeq	r5, r2, r5, lsl #20
    9cdc:	037d0200 	cmneq	sp, #0, 4
    9ce0:	4f030000 	svcmi	0x00030000
    9ce4:	00008c19 	andeq	r8, r0, r9, lsl ip
    9ce8:	07040300 	streq	r0, [r4, -r0, lsl #6]
    9cec:	00000218 	andeq	r0, r0, r8, lsl r2
    9cf0:	13070803 	movwne	r0, #30723	; 0x7803
    9cf4:	05000002 	streq	r0, [r0, #-2]
    9cf8:	009a0604 	addseq	r0, sl, r4, lsl #12
    9cfc:	01030000 	mrseq	r0, (UNDEF: 3)
    9d00:	00009608 	andeq	r9, r0, r8, lsl #12
    9d04:	00a10600 	adceq	r0, r1, r0, lsl #12
    9d08:	04070000 	streq	r0, [r7], #-0
    9d0c:	000000a8 	andeq	r0, r0, r8, lsr #1
    9d10:	0000ad06 	andeq	sl, r0, r6, lsl #26
    9d14:	00020200 	andeq	r0, r2, r0, lsl #4
    9d18:	18040000 	stmdane	r4, {}	; <UNPREDICTABLE>
    9d1c:	00005813 	andeq	r5, r0, r3, lsl r8
    9d20:	037f0200 	cmneq	pc, #0, 4
    9d24:	30040000 	andcc	r0, r4, r0
    9d28:	00008014 	andeq	r8, r0, r4, lsl r0
    9d2c:	1cb20200 	lfmne	f0, 4, [r2]
    9d30:	24050000 	strcs	r0, [r5], #-0
    9d34:	0000dc11 	andeq	sp, r0, r1, lsl ip
    9d38:	e2040700 	and	r0, r4, #0, 14
    9d3c:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    9d40:	0000ee01 	andeq	lr, r0, r1, lsl #28
    9d44:	009a0900 	addseq	r0, sl, r0, lsl #18
    9d48:	02000000 	andeq	r0, r0, #0
    9d4c:	000015d9 	ldrdeq	r1, [r0], -r9
    9d50:	c41a4906 	ldrgt	r4, [sl], #-2310	; 0xfffff6fa
    9d54:	02000000 	andeq	r0, r0, #0
    9d58:	00000a3f 	andeq	r0, r0, pc, lsr sl
    9d5c:	791a4a06 	ldmdbvc	sl, {r1, r2, r9, fp, lr}
    9d60:	06000000 	streq	r0, [r0], -r0
    9d64:	000000fa 	strdeq	r0, [r0], -sl
    9d68:	000a3e02 	andeq	r3, sl, r2, lsl #28
    9d6c:	1a4b0600 	bne	12cb574 <__RAM_SIZE+0x11cb574>
    9d70:	0000008c 	andeq	r0, r0, ip, lsl #1
    9d74:	00099a02 	andeq	r9, r9, r2, lsl #20
    9d78:	1a510600 	bne	144b580 <__RAM_SIZE+0x134b580>
    9d7c:	000000c4 	andeq	r0, r0, r4, asr #1
    9d80:	00011706 	andeq	r1, r1, r6, lsl #14
    9d84:	129e0a00 	addsne	r0, lr, #0, 20
    9d88:	07140000 	ldreq	r0, [r4, -r0]
    9d8c:	57080c0c 	strpl	r0, [r8, -ip, lsl #24]
    9d90:	0b000001 	bleq	9d9c <__HEAP_SIZE+0x8d9c>
    9d94:	00000e3f 	andeq	r0, r0, pc, lsr lr
    9d98:	100c1107 	andne	r1, ip, r7, lsl #2
    9d9c:	00000117 	andeq	r0, r0, r7, lsl r1
    9da0:	0b002302 	bleq	129b0 <__HEAP_SIZE+0x119b0>
    9da4:	00000e35 	andeq	r0, r0, r5, lsr lr
    9da8:	0c0c1207 	sfmeq	f1, 4, [ip], {7}
    9dac:	00000157 	andeq	r0, r0, r7, asr r1
    9db0:	00042302 	andeq	r2, r4, r2, lsl #6
    9db4:	00009a0c 	andeq	r9, r0, ip, lsl #20
    9db8:	00016700 	andeq	r6, r1, r0, lsl #14
    9dbc:	00350d00 	eorseq	r0, r5, r0, lsl #26
    9dc0:	00030000 	andeq	r0, r3, r0
    9dc4:	0019b10e 	andseq	fp, r9, lr, lsl #2
    9dc8:	0c170700 	ldceq	7, cr0, [r7], {-0}
    9dcc:	00012822 	andeq	r2, r1, r2, lsr #16
    9dd0:	0be40e00 	bleq	ff90d5d8 <__StackTop+0xc780d5d8>
    9dd4:	25070000 	strcs	r0, [r7, #-0]
    9dd8:	01282b0c 			; <UNDEFINED> instruction: 0x01282b0c
    9ddc:	300a0000 	andcc	r0, sl, r0
    9de0:	1c000010 	stcne	0, cr0, [r0], {16}
    9de4:	100c2907 	andne	r2, ip, r7, lsl #18
    9de8:	000001c0 	andeq	r0, r0, r0, asr #3
    9dec:	000e3e0b 	andeq	r3, lr, fp, lsl #28
    9df0:	0c2e0700 	stceq	7, cr0, [lr], #-0
    9df4:	00010b11 	andeq	r0, r1, r1, lsl fp
    9df8:	00230200 	eoreq	r0, r3, r0, lsl #4
    9dfc:	000e350b 	andeq	r3, lr, fp, lsl #10
    9e00:	0c2f0700 	stceq	7, cr0, [pc], #-0	; 9e08 <__HEAP_SIZE+0x8e08>
    9e04:	00009a0c 	andeq	r9, r0, ip, lsl #20
    9e08:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    9e0c:	000e510b 	andeq	r5, lr, fp, lsl #2
    9e10:	0c300700 	ldceq	7, cr0, [r0], #-0
    9e14:	0001741a 	andeq	r7, r1, sl, lsl r4
    9e18:	08230200 	stmdaeq	r3!, {r9}
    9e1c:	14570e00 	ldrbne	r0, [r7], #-3584	; 0xfffff200
    9e20:	34070000 	strcc	r0, [r7], #-0
    9e24:	0181030c 	orreq	r0, r1, ip, lsl #6
    9e28:	cd0a0000 	stcgt	0, cr0, [sl, #-0]
    9e2c:	4c00001f 	stcmi	0, cr0, [r0], {31}
    9e30:	100c4307 	andne	r4, ip, r7, lsl #6
    9e34:	0000028c 	andeq	r0, r0, ip, lsl #5
    9e38:	001c200b 	andseq	r2, ip, fp
    9e3c:	0c450700 	mcrreq	7, 0, r0, r5, cr0
    9e40:	00009a0c 	andeq	r9, r0, ip, lsl #20
    9e44:	00230200 	eoreq	r0, r3, r0, lsl #4
    9e48:	0013630b 	andseq	r6, r3, fp, lsl #6
    9e4c:	0c4c0700 	mcrreq	7, 0, r0, ip, cr0
    9e50:	00028c16 	andeq	r8, r2, r6, lsl ip
    9e54:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    9e58:	001a350b 	andseq	r3, sl, fp, lsl #10
    9e5c:	0c4d0700 	mcrreq	7, 0, r0, sp, cr0
    9e60:	00010b11 	andeq	r0, r1, r1, lsl fp
    9e64:	2c230200 	sfmcs	f0, 4, [r3], #-0
    9e68:	001c330b 	andseq	r3, ip, fp, lsl #6
    9e6c:	0c4e0700 	mcrreq	7, 0, r0, lr, cr0
    9e70:	00009a0c 	andeq	r9, r0, ip, lsl #20
    9e74:	30230200 	eorcc	r0, r3, r0, lsl #4
    9e78:	001e240b 	andseq	r2, lr, fp, lsl #8
    9e7c:	0c530700 	mrrceq	7, 0, r0, r3, cr0
    9e80:	00029c0d 	andeq	r9, r2, sp, lsl #24
    9e84:	34230200 	strtcc	r0, [r3], #-512	; 0xfffffe00
    9e88:	0015380b 	andseq	r3, r5, fp, lsl #16
    9e8c:	0c610700 	stcleq	7, cr0, [r1], #-0
    9e90:	0002ac15 	andeq	sl, r2, r5, lsl ip
    9e94:	38230200 	stmdacc	r3!, {r9}
    9e98:	001dd50b 	andseq	sp, sp, fp, lsl #10
    9e9c:	0c640700 	stcleq	7, cr0, [r4], #-0
    9ea0:	00009a10 	andeq	r9, r0, r0, lsl sl
    9ea4:	40230200 	eormi	r0, r3, r0, lsl #4
    9ea8:	001ffc0b 	andseq	pc, pc, fp, lsl #24
    9eac:	0c700700 	ldcleq	7, cr0, [r0], #-0
    9eb0:	0002bc12 	andeq	fp, r2, r2, lsl ip
    9eb4:	44230200 	strtmi	r0, [r3], #-512	; 0xfffffe00
    9eb8:	001c290b 	andseq	r2, ip, fp, lsl #18
    9ebc:	0c710700 	ldcleq	7, cr0, [r1], #-0
    9ec0:	0002cc11 	andeq	ip, r2, r1, lsl ip
    9ec4:	48230200 	stmdami	r3!, {r9}
    9ec8:	0016570b 	andseq	r5, r6, fp, lsl #14
    9ecc:	0c740700 	ldcleq	7, cr0, [r4], #-0
    9ed0:	0000b811 	andeq	fp, r0, r1, lsl r8
    9ed4:	49230200 	stmdbmi	r3!, {r9}
    9ed8:	001d010b 	andseq	r0, sp, fp, lsl #2
    9edc:	0c780700 	ldcleq	7, cr0, [r8], #-0
    9ee0:	0000b811 	andeq	fp, r0, r1, lsl r8
    9ee4:	4a230200 	bmi	8ca6ec <__RAM_SIZE+0x7ca6ec>
    9ee8:	01670c00 	cmneq	r7, r0, lsl #24
    9eec:	029c0000 	addseq	r0, ip, #0
    9ef0:	350d0000 	strcc	r0, [sp, #-0]
    9ef4:	01000000 	mrseq	r0, (UNDEF: 0)
    9ef8:	00b80c00 	adcseq	r0, r8, r0, lsl #24
    9efc:	02ac0000 	adceq	r0, ip, #0
    9f00:	350d0000 	strcc	r0, [sp, #-0]
    9f04:	03000000 	movweq	r0, #0
    9f08:	010b0c00 	tsteq	fp, r0, lsl #24
    9f0c:	02bc0000 	adcseq	r0, ip, #0
    9f10:	350d0000 	strcc	r0, [sp, #-0]
    9f14:	01000000 	mrseq	r0, (UNDEF: 0)
    9f18:	00c40c00 	sbceq	r0, r4, r0, lsl #24
    9f1c:	02cc0000 	sbceq	r0, ip, #0
    9f20:	350d0000 	strcc	r0, [sp, #-0]
    9f24:	00000000 	andeq	r0, r0, r0
    9f28:	00b80c00 	adcseq	r0, r8, r0, lsl #24
    9f2c:	02dc0000 	sbcseq	r0, ip, #0
    9f30:	350d0000 	strcc	r0, [sp, #-0]
    9f34:	00000000 	andeq	r0, r0, r0
    9f38:	14820e00 	strne	r0, [r2], #3584	; 0xe00
    9f3c:	7d070000 	stcvc	0, cr0, [r7, #-0]
    9f40:	01cd030c 	biceq	r0, sp, ip, lsl #6
    9f44:	040f0000 	streq	r0, [pc], #-0	; 9f4c <__HEAP_SIZE+0x8f4c>
    9f48:	050c9107 	streq	r9, [ip, #-263]	; 0xfffffef9
    9f4c:	0000030e 	andeq	r0, r0, lr, lsl #6
    9f50:	000e2c10 	andeq	r2, lr, r0, lsl ip
    9f54:	0c930700 	ldceq	7, cr0, [r3], {0}
    9f58:	00009a10 	andeq	r9, r0, r0, lsl sl
    9f5c:	0e3e1000 	cdpeq	0, 3, cr1, cr14, cr0, {0}
    9f60:	94070000 	strls	r0, [r7], #-0
    9f64:	010b150c 	tsteq	fp, ip, lsl #10
    9f68:	0a000000 	beq	9f70 <__HEAP_SIZE+0x8f70>
    9f6c:	0000141d 	andeq	r1, r0, sp, lsl r4
    9f70:	0c8d075c 	stceq	7, cr0, [sp], {92}	; 0x5c
    9f74:	00038b10 	andeq	r8, r3, r0, lsl fp
    9f78:	0e230b00 	vmuleq.f64	d0, d3, d0
    9f7c:	8f070000 	svchi	0x00070000
    9f80:	038b0c0c 	orreq	r0, fp, #12, 24	; 0xc00
    9f84:	23020000 	movwcs	r0, #8192	; 0x2000
    9f88:	00751100 	rsbseq	r1, r5, r0, lsl #2
    9f8c:	070c9507 	streq	r9, [ip, -r7, lsl #10]
    9f90:	000002e9 	andeq	r0, r0, r9, ror #5
    9f94:	0b0c2302 	bleq	312ba4 <__RAM_SIZE+0x212ba4>
    9f98:	00001363 	andeq	r1, r0, r3, ror #6
    9f9c:	120c9707 	andne	r9, ip, #1835008	; 0x1c0000
    9fa0:	0000039b 	muleq	r0, fp, r3
    9fa4:	0b102302 	bleq	412bb4 <__RAM_SIZE+0x312bb4>
    9fa8:	00000e50 	andeq	r0, r0, r0, asr lr
    9fac:	110c9807 	tstne	ip, r7, lsl #16
    9fb0:	000003ab 	andeq	r0, r0, fp, lsr #7
    9fb4:	0b482302 	bleq	1212bc4 <__RAM_SIZE+0x1112bc4>
    9fb8:	00001172 	andeq	r1, r0, r2, ror r1
    9fbc:	0d0c9907 	vstreq.16	s18, [ip, #-14]	; <UNPREDICTABLE>
    9fc0:	000003bb 			; <UNDEFINED> instruction: 0x000003bb
    9fc4:	0b542302 	bleq	1512bd4 <__RAM_SIZE+0x1412bd4>
    9fc8:	0000117b 	andeq	r1, r0, fp, ror r1
    9fcc:	110c9c07 	tstne	ip, r7, lsl #24
    9fd0:	000000b8 	strheq	r0, [r0], -r8
    9fd4:	0b562302 	bleq	1592be4 <__RAM_SIZE+0x1492be4>
    9fd8:	00000e47 	andeq	r0, r0, r7, asr #28
    9fdc:	100ca007 	andne	sl, ip, r7
    9fe0:	0000009a 	muleq	r0, sl, r0
    9fe4:	00582302 	subseq	r2, r8, r2, lsl #6
    9fe8:	00009a0c 	andeq	r9, r0, ip, lsl #20
    9fec:	00039b00 	andeq	r9, r3, r0, lsl #22
    9ff0:	00350d00 	eorseq	r0, r5, r0, lsl #26
    9ff4:	00020000 	andeq	r0, r2, r0
    9ff8:	0001c00c 	andeq	ip, r1, ip
    9ffc:	0003ab00 	andeq	sl, r3, r0, lsl #22
    a000:	00350d00 	eorseq	r0, r5, r0, lsl #26
    a004:	00010000 	andeq	r0, r1, r0
    a008:	00010b0c 	andeq	r0, r1, ip, lsl #22
    a00c:	0003bb00 	andeq	fp, r3, r0, lsl #22
    a010:	00350d00 	eorseq	r0, r5, r0, lsl #26
    a014:	00020000 	andeq	r0, r2, r0
    a018:	0000b80c 	andeq	fp, r0, ip, lsl #16
    a01c:	0003cb00 	andeq	ip, r3, r0, lsl #22
    a020:	00350d00 	eorseq	r0, r5, r0, lsl #26
    a024:	00010000 	andeq	r0, r1, r0
    a028:	0010600e 	andseq	r6, r0, lr
    a02c:	0ca70700 	stceq	7, cr0, [r7]
    a030:	00030e03 	andeq	r0, r3, r3, lsl #28
    a034:	256d0a00 	strbcs	r0, [sp, #-2560]!	; 0xfffff600
    a038:	07280000 	streq	r0, [r8, -r0]!
    a03c:	47100cd4 			; <UNDEFINED> instruction: 0x47100cd4
    a040:	0b000004 	bleq	a058 <__HEAP_SIZE+0x9058>
    a044:	00000e23 	andeq	r0, r0, r3, lsr #28
    a048:	0c0cd607 	stceq	6, cr13, [ip], {7}
    a04c:	0000009a 	muleq	r0, sl, r0
    a050:	0b002302 	bleq	12c60 <__HEAP_SIZE+0x11c60>
    a054:	00000e3f 	andeq	r0, r0, pc, lsr lr
    a058:	160cd707 	strne	sp, [ip], -r7, lsl #14
    a05c:	00000167 	andeq	r0, r0, r7, ror #2
    a060:	0b042302 	bleq	112c70 <__RAM_SIZE+0x12c70>
    a064:	00001363 	andeq	r1, r0, r3, ror #6
    a068:	100cd807 	andne	sp, ip, r7, lsl #16
    a06c:	00000117 	andeq	r0, r0, r7, lsl r1
    a070:	0b182302 	bleq	612c80 <__RAM_SIZE+0x512c80>
    a074:	0000271e 	andeq	r2, r0, lr, lsl r7
    a078:	0c0cd907 			; <UNDEFINED> instruction: 0x0c0cd907
    a07c:	0000009a 	muleq	r0, sl, r0
    a080:	0b1c2302 	bleq	712c90 <__RAM_SIZE+0x612c90>
    a084:	00002667 	andeq	r2, r0, r7, ror #12
    a088:	140cda07 	strne	sp, [ip], #-2567	; 0xfffff5f9
    a08c:	000000d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    a090:	0b202302 	bleq	812ca0 <__RAM_SIZE+0x712ca0>
    a094:	0000283b 	andeq	r2, r0, fp, lsr r8
    a098:	0d0cde07 	stceq	14, cr13, [ip, #-28]	; 0xffffffe4
    a09c:	000000b8 	strheq	r0, [r0], -r8
    a0a0:	00242302 	eoreq	r2, r4, r2, lsl #6
    a0a4:	00255f0e 	eoreq	r5, r5, lr, lsl #30
    a0a8:	0cdf0700 	ldcleq	7, cr0, [pc], {0}
    a0ac:	0003d803 	andeq	sp, r3, r3, lsl #16
    a0b0:	09c11200 	stmibeq	r1, {r9, ip}^
    a0b4:	08140000 	ldmdaeq	r4, {}	; <UNPREDICTABLE>
    a0b8:	04ad0890 	strteq	r0, [sp], #2192	; 0x890
    a0bc:	a5130000 	ldrge	r0, [r3, #-0]
    a0c0:	08000009 	stmdaeq	r0, {r0, r3}
    a0c4:	01172493 			; <UNDEFINED> instruction: 0x01172493
    a0c8:	23020000 	movwcs	r0, #8192	; 0x2000
    a0cc:	0a0e1300 	beq	38ecd4 <__RAM_SIZE+0x28ecd4>
    a0d0:	94080000 	strls	r0, [r8], #-0
    a0d4:	0004ad2d 	andeq	sl, r4, sp, lsr #26
    a0d8:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    a0dc:	000a5d13 	andeq	r5, sl, r3, lsl sp
    a0e0:	2d950800 	ldccs	8, cr0, [r5]
    a0e4:	000004ad 	andeq	r0, r0, sp, lsr #9
    a0e8:	13082302 	movwne	r2, #33538	; 0x8302
    a0ec:	000009b9 			; <UNDEFINED> instruction: 0x000009b9
    a0f0:	9a0c9608 	bls	32f918 <__RAM_SIZE+0x22f918>
    a0f4:	02000000 	andeq	r0, r0, #0
    a0f8:	8e130c23 	cdphi	12, 1, cr0, cr3, cr3, {1}
    a0fc:	08000009 	stmdaeq	r0, {r0, r3}
    a100:	04ee2897 	strbteq	r2, [lr], #2199	; 0x897
    a104:	23020000 	movwcs	r0, #8192	; 0x2000
    a108:	04070010 	streq	r0, [r7], #-16
    a10c:	00000454 	andeq	r0, r0, r4, asr r4
    a110:	000a9012 	andeq	r9, sl, r2, lsl r0
    a114:	ac081c00 	stcge	12, cr1, [r8], {-0}
    a118:	0004ee10 	andeq	lr, r4, r0, lsl lr
    a11c:	09ef1300 	stmibeq	pc!, {r8, r9, ip}^	; <UNPREDICTABLE>
    a120:	af080000 	svcge	0x00080000
    a124:	00010b25 	andeq	r0, r1, r5, lsr #22
    a128:	00230200 	eoreq	r0, r3, r0, lsl #4
    a12c:	000a5513 	andeq	r5, sl, r3, lsl r5
    a130:	26b00800 	ldrtcs	r0, [r0], r0, lsl #16
    a134:	0000050c 	andeq	r0, r0, ip, lsl #10
    a138:	13042302 	movwne	r2, #17154	; 0x4302
    a13c:	000009b0 			; <UNDEFINED> instruction: 0x000009b0
    a140:	0014b108 	andseq	fp, r4, r8, lsl #2
    a144:	02000005 	andeq	r0, r0, #5
    a148:	07000823 	streq	r0, [r0, -r3, lsr #16]
    a14c:	0004b304 	andeq	fp, r4, r4, lsl #6
    a150:	19b70200 	ldmibne	r7!, {r9}
    a154:	9a080000 	bls	20a15c <__RAM_SIZE+0x10a15c>
    a158:	0004541b 	andeq	r5, r4, fp, lsl r4
    a15c:	0bea0200 	bleq	ffa8a964 <__StackTop+0xc798a964>
    a160:	a6080000 	strge	r0, [r8], -r0
    a164:	00045424 	andeq	r5, r4, r4, lsr #8
    a168:	f4040700 	vst1.8	{d0}, [r4], r0
    a16c:	02000004 	andeq	r0, r0, #4
    a170:	0000145d 	andeq	r1, r0, sp, asr r4
    a174:	b303b308 	movwlt	fp, #13064	; 0x3308
    a178:	02000004 	andeq	r0, r0, #4
    a17c:	000002af 	andeq	r0, r0, pc, lsr #5
    a180:	2a2e5c09 	bcs	ba11ac <__RAM_SIZE+0xaa11ac>
    a184:	07000005 	streq	r0, [r0, -r5]
    a188:	00053004 	andeq	r3, r5, r4
    a18c:	01f21400 	mvnseq	r1, r0, lsl #8
    a190:	07010000 	streq	r0, [r1, -r0]
    a194:	0000ee04 	andeq	lr, r0, r4, lsl #28
    a198:	0f820200 	svceq	0x00820200
    a19c:	330a0000 	movwcc	r0, #40960	; 0xa000
    a1a0:	00054824 	andeq	r4, r5, r4, lsr #16
    a1a4:	4e040700 	cdpmi	7, 0, cr0, cr4, cr0, {0}
    a1a8:	14000005 	strne	r0, [r0], #-5
    a1ac:	00000cf3 	strdeq	r0, [r0], -r3
    a1b0:	261a0201 	ldrcs	r0, [sl], -r1, lsl #4
    a1b4:	4e0b0000 	cdpmi	0, 0, cr0, cr11, cr0, {0}
    a1b8:	00056522 	andeq	r6, r5, r2, lsr #10
    a1bc:	05540600 	ldrbeq	r0, [r4, #-1536]	; 0xfffffa00
    a1c0:	04070000 	streq	r0, [r7], #-0
    a1c4:	0000056b 	andeq	r0, r0, fp, ror #10
    a1c8:	00293d12 	eoreq	r3, r9, r2, lsl sp
    a1cc:	53012800 	movwpl	r2, #6144	; 0x1800
    a1d0:	0005d314 	andeq	sp, r5, r4, lsl r3
    a1d4:	25121300 	ldrcs	r1, [r2, #-768]	; 0xfffffd00
    a1d8:	55010000 	strpl	r0, [r1, #-0]
    a1dc:	0000ad16 	andeq	sl, r0, r6, lsl sp
    a1e0:	00230200 	eoreq	r0, r3, r0, lsl #4
    a1e4:	0027da13 	eoreq	sp, r7, r3, lsl sl
    a1e8:	14560100 	ldrbne	r0, [r6], #-256	; 0xffffff00
    a1ec:	000004f4 	strdeq	r0, [r0], -r4
    a1f0:	13042302 	movwne	r2, #17154	; 0x4302
    a1f4:	000024a1 	andeq	r2, r0, r1, lsr #9
    a1f8:	17145701 	ldrne	r5, [r4, -r1, lsl #14]
    a1fc:	02000001 	andeq	r0, r0, #1
    a200:	cd131823 	ldcgt	8, cr1, [r3, #-140]	; 0xffffff74
    a204:	01000028 	tsteq	r0, r8, lsr #32
    a208:	009a1058 	addseq	r1, sl, r8, asr r0
    a20c:	23020000 	movwcs	r0, #8192	; 0x2000
    a210:	24b5131c 	ldrtcs	r1, [r5], #796	; 0x31c
    a214:	59010000 	stmdbpl	r1, {}	; <UNPREDICTABLE>
    a218:	0005d33e 	andeq	sp, r5, lr, lsr r3
    a21c:	20230200 	eorcs	r0, r3, r0, lsl #4
    a220:	00287213 	eoreq	r7, r8, r3, lsl r2
    a224:	115d0100 	cmpne	sp, r0, lsl #2
    a228:	000000b8 	strheq	r0, [r0], -r8
    a22c:	00242302 	eoreq	r2, r4, r2, lsl #6
    a230:	00259102 	eoreq	r9, r5, r2, lsl #2
    a234:	11530b00 	cmpne	r3, r0, lsl #22
    a238:	000005df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    a23c:	05e50407 	strbeq	r0, [r5, #1031]!	; 0x407
    a240:	01080000 	mrseq	r0, (UNDEF: 8)
    a244:	000005f1 	strdeq	r0, [r0], -r1
    a248:	00055409 	andeq	r5, r5, r9, lsl #8
    a24c:	a0020000 	andge	r0, r2, r0
    a250:	0b000028 	bleq	a2f8 <__HEAP_SIZE+0x92f8>
    a254:	05fd1159 	ldrbeq	r1, [sp, #345]!	; 0x159
    a258:	04070000 	streq	r0, [r7], #-0
    a25c:	00000603 	andeq	r0, r0, r3, lsl #12
    a260:	06140108 	ldreq	r0, [r4], -r8, lsl #2
    a264:	9a090000 	bls	24a26c <__RAM_SIZE+0x14a26c>
    a268:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    a26c:	000000c4 	andeq	r0, r0, r4, asr #1
    a270:	27270200 	strcs	r0, [r7, -r0, lsl #4]!
    a274:	5e010000 	cdppl	0, 0, cr0, cr1, cr0, {0}
    a278:	00056b07 	andeq	r6, r5, r7, lsl #22
    a27c:	25650200 	strbcs	r0, [r5, #-512]!	; 0xfffffe00
    a280:	62010000 	andvs	r0, r1, #0
    a284:	00061414 	andeq	r1, r6, r4, lsl r4
    a288:	29d61200 	ldmibcs	r6, {r9, ip}^
    a28c:	01080000 	mrseq	r0, (UNDEF: 8)
    a290:	06581469 	ldrbeq	r1, [r8], -r9, ror #8
    a294:	1f130000 	svcne	0x00130000
    a298:	01000029 	tsteq	r0, r9, lsr #32
    a29c:	0117146b 	tsteq	r7, fp, ror #8
    a2a0:	23020000 	movwcs	r0, #8192	; 0x2000
    a2a4:	29171300 	ldmdbcs	r7, {r8, r9, ip}
    a2a8:	6c010000 	stcvs	0, cr0, [r1], {-0}
    a2ac:	00065813 	andeq	r5, r6, r3, lsl r8
    a2b0:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    a2b4:	20040700 	andcs	r0, r4, r0, lsl #14
    a2b8:	06000006 	streq	r0, [r0], -r6
    a2bc:	00000658 	andeq	r0, r0, r8, asr r6
    a2c0:	00254202 	eoreq	r4, r5, r2, lsl #4
    a2c4:	076d0100 	strbeq	r0, [sp, -r0, lsl #2]!
    a2c8:	0000062c 	andeq	r0, r0, ip, lsr #12
    a2cc:	00278112 	eoreq	r8, r7, r2, lsl r1
    a2d0:	70010c00 	andvc	r0, r1, r0, lsl #24
    a2d4:	0006aa14 	andeq	sl, r6, r4, lsl sl
    a2d8:	24b51300 	ldrtcs	r1, [r5], #768	; 0x300
    a2dc:	73010000 	movwvc	r0, #4096	; 0x1000
    a2e0:	0005f11a 	andeq	pc, r5, sl, lsl r1	; <UNPREDICTABLE>
    a2e4:	00230200 	eoreq	r0, r3, r0, lsl #4
    a2e8:	00282e13 	eoreq	r2, r8, r3, lsl lr
    a2ec:	10740100 	rsbsne	r0, r4, r0, lsl #2
    a2f0:	0000009a 	muleq	r0, sl, r0
    a2f4:	13042302 	movwne	r2, #17154	; 0x4302
    a2f8:	0000251e 	andeq	r2, r0, lr, lsl r5
    a2fc:	c4127501 	ldrgt	r7, [r2], #-1281	; 0xfffffaff
    a300:	02000000 	andeq	r0, r0, #0
    a304:	02000823 	andeq	r0, r0, #2293760	; 0x230000
    a308:	00002652 	andeq	r2, r0, r2, asr r6
    a30c:	6f077601 	svcvs	0x00077601
    a310:	06000006 	streq	r0, [r0], -r6
    a314:	000006aa 	andeq	r0, r0, sl, lsr #13
    a318:	7d010c15 	stcvc	12, cr0, [r1, #-84]	; 0xffffffac
    a31c:	0006dd09 	andeq	sp, r6, r9, lsl #26
    a320:	24f21600 	ldrbtcs	r1, [r2], #1536	; 0x600
    a324:	7f010000 	svcvc	0x00010000
    a328:	0006631e 	andeq	r6, r6, lr, lsl r3
    a32c:	27b51600 	ldrcs	r1, [r5, r0, lsl #12]!
    a330:	84010000 	strhi	r0, [r1], #-0
    a334:	0006aa26 	andeq	sl, r6, r6, lsr #20
    a338:	a5120000 	ldrge	r0, [r2, #-0]
    a33c:	10000026 	andne	r0, r0, r6, lsr #32
    a340:	07147a01 	ldreq	r7, [r4, -r1, lsl #20]
    a344:	13000007 	movwne	r0, #7
    a348:	000028d7 	ldrdeq	r2, [r0], -r7
    a34c:	fa147c01 	blx	529358 <__RAM_SIZE+0x429358>
    a350:	02000000 	andeq	r0, r0, #0
    a354:	75170023 	ldrvc	r0, [r7, #-35]	; 0xffffffdd
    a358:	0b860100 	bleq	fe18a760 <__StackTop+0xc608a760>
    a35c:	000006bb 			; <UNDEFINED> instruction: 0x000006bb
    a360:	00042302 	andeq	r2, r4, r2, lsl #6
    a364:	0028e202 	eoreq	lr, r8, r2, lsl #4
    a368:	07870100 	streq	r0, [r7, r0, lsl #2]
    a36c:	000006dd 	ldrdeq	r0, [r0], -sp
    a370:	00272e18 	eoreq	r2, r7, r8, lsl lr
    a374:	238f0100 	orrcs	r0, pc, #0, 2
    a378:	00000512 	andeq	r0, r0, r2, lsl r5
    a37c:	8c4c0305 	mcrrhi	3, 0, r0, ip, cr5
    a380:	40183800 	andsmi	r3, r8, r0, lsl #16
    a384:	01000027 	tsteq	r0, r7, lsr #32
    a388:	05122390 	ldreq	r2, [r2, #-912]	; 0xfffffc70
    a38c:	03050000 	movweq	r0, #20480	; 0x5000
    a390:	38008c68 	stmdacc	r0, {r3, r5, r6, sl, fp, pc}
    a394:	0028b118 	eoreq	fp, r8, r8, lsl r1
    a398:	25910100 	ldrcs	r0, [r1, #256]	; 0x100
    a39c:	00000749 	andeq	r0, r0, r9, asr #14
    a3a0:	8ba40305 	blhi	fe90afbc <__StackTop+0xc680afbc>
    a3a4:	04073800 	streq	r3, [r7], #-2048	; 0xfffff800
    a3a8:	00000512 	andeq	r0, r0, r2, lsl r5
    a3ac:	0026f418 	eoreq	pc, r6, r8, lsl r4	; <UNPREDICTABLE>
    a3b0:	25920100 	ldrcs	r0, [r2, #256]	; 0x100
    a3b4:	00000749 	andeq	r0, r0, r9, asr #14
    a3b8:	8ba80305 	blhi	fea0afd4 <__StackTop+0xc690afd4>
    a3bc:	53183800 	tstpl	r8, #0, 16
    a3c0:	01000025 	tsteq	r0, r5, lsr #32
    a3c4:	053c2a95 	ldreq	r2, [ip, #-2709]!	; 0xfffff56b
    a3c8:	03050000 	movweq	r0, #20480	; 0x5000
    a3cc:	38008ce4 	stmdacc	r0, {r2, r5, r6, r7, sl, fp, pc}
    a3d0:	00284418 	eoreq	r4, r8, r8, lsl r4
    a3d4:	29960100 	ldmibcs	r6, {r8}
    a3d8:	0000051e 	andeq	r0, r0, lr, lsl r5
    a3dc:	8ce80305 	stclhi	3, cr0, [r8], #20
    a3e0:	01193800 	tsteq	r9, r0, lsl #16
    a3e4:	000028f6 	strdeq	r2, [r0], -r6
    a3e8:	0a053201 	beq	156bf4 <__RAM_SIZE+0x56bf4>
    a3ec:	00000001 	andeq	r0, r0, r1
    a3f0:	00000000 	andeq	r0, r0, r0
    a3f4:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    a3f8:	2b011a01 	blcs	50c04 <__HEAP_SIZE+0x4fc04>
    a3fc:	01000025 	tsteq	r0, r5, lsr #32
    a400:	011404ef 	tsteq	r4, pc, ror #9
    a404:	000000fa 	strdeq	r0, [r0], -sl
	...
    a410:	00009547 	andeq	r9, r0, r7, asr #10
    a414:	00085201 	andeq	r5, r8, r1, lsl #4
    a418:	292d1b00 	pushcs	{r8, r9, fp, ip}
    a41c:	ef010000 	svc	0x00010000
    a420:	05f13d04 	ldrbeq	r3, [r1, #3332]!	; 0xd04
    a424:	95850000 	strls	r0, [r5]
    a428:	957f0000 	ldrbls	r0, [pc, #-0]!	; a430 <__HEAP_SIZE+0x9430>
    a42c:	2e1b0000 	cdpcs	0, 1, cr0, cr11, cr0, {0}
    a430:	01000028 	tsteq	r0, r8, lsr #32
    a434:	9a3304f0 	bls	ccb7fc <__RAM_SIZE+0xbcb7fc>
    a438:	b8000000 	stmdalt	r0, {}	; <UNPREDICTABLE>
    a43c:	b2000095 	andlt	r0, r0, #149	; 0x95
    a440:	1b000095 	blne	a69c <__HEAP_SIZE+0x969c>
    a444:	0000251e 	andeq	r2, r0, lr, lsl r5
    a448:	3504f101 	strcc	pc, [r4, #-257]	; 0xfffffeff
    a44c:	000000c4 	andeq	r0, r0, r4, asr #1
    a450:	000095eb 	andeq	r9, r0, fp, ror #11
    a454:	000095e5 	andeq	r9, r0, r5, ror #11
    a458:	00215b1b 	eoreq	r5, r1, fp, lsl fp
    a45c:	04f20100 	ldrbteq	r0, [r2], #256	; 0x100
    a460:	00011737 	andeq	r1, r1, r7, lsr r7
    a464:	00961d00 	addseq	r1, r6, r0, lsl #26
    a468:	00961700 	addseq	r1, r6, r0, lsl #14
    a46c:	28c41c00 	stmiacs	r4, {sl, fp, ip}^
    a470:	f4010000 	vst4.8	{d0-d3}, [r1], r0
    a474:	07072104 	streq	r2, [r7, -r4, lsl #2]
    a478:	91020000 	mrsls	r0, (UNDEF: 2)
    a47c:	1a931d68 	bne	fe4d1a24 <__StackTop+0xc63d1a24>
    a480:	f5010000 			; <UNDEFINED> instruction: 0xf5010000
    a484:	00fa1804 	rscseq	r1, sl, r4, lsl #16
    a488:	964b0000 	strbls	r0, [fp], -r0
    a48c:	96490000 	strbls	r0, [r9], -r0
    a490:	001e0000 	andseq	r0, lr, r0
    a494:	68000000 	stmdavs	r0, {}	; <UNPREDICTABLE>
    a498:	1f000018 	svcne	0x00000018
    a49c:	7d025101 	stfvcs	f5, [r2, #-4]
    a4a0:	52011f00 	andpl	r1, r1, #0, 30
    a4a4:	5301f303 	movwpl	pc, #4867	; 0x1303	; <UNPREDICTABLE>
    a4a8:	0153011f 	cmpeq	r3, pc, lsl r1
    a4ac:	1a000030 	bne	a574 <__HEAP_SIZE+0x9574>
    a4b0:	00295c01 	eoreq	r5, r9, r1, lsl #24
    a4b4:	04d10100 	ldrbeq	r0, [r1], #256	; 0x100
    a4b8:	00fa0114 	rscseq	r0, sl, r4, lsl r1
	...
    a4c4:	965e0000 	ldrbls	r0, [lr], -r0
    a4c8:	08010000 	stmdaeq	r1, {}	; <UNPREDICTABLE>
    a4cc:	1b000009 	blne	a4f8 <__HEAP_SIZE+0x94f8>
    a4d0:	0000292d 	andeq	r2, r0, sp, lsr #18
    a4d4:	4404d101 	strmi	sp, [r4], #-257	; 0xfffffeff
    a4d8:	000005f1 	strdeq	r0, [r0], -r1
    a4dc:	0000969c 	muleq	r0, ip, r6
    a4e0:	00009696 	muleq	r0, r6, r6
    a4e4:	00282e1b 	eoreq	r2, r8, fp, lsl lr
    a4e8:	04d20100 	ldrbeq	r0, [r2], #256	; 0x100
    a4ec:	00009a3a 	andeq	r9, r0, sl, lsr sl
    a4f0:	0096cf00 	addseq	ip, r6, r0, lsl #30
    a4f4:	0096c900 	addseq	ip, r6, r0, lsl #18
    a4f8:	251e1b00 	ldrcs	r1, [lr, #-2816]	; 0xfffff500
    a4fc:	d3010000 	movwle	r0, #4096	; 0x1000
    a500:	00c43c04 	sbceq	r3, r4, r4, lsl #24
    a504:	97020000 	strls	r0, [r2, -r0]
    a508:	96fc0000 	ldrbtls	r0, [ip], r0
    a50c:	6b1b0000 	blvs	6ca514 <__RAM_SIZE+0x5ca514>
    a510:	0100000b 	tsteq	r0, fp
    a514:	084004d4 	stmdaeq	r0, {r2, r4, r6, r7, sl}^
    a518:	34000009 	strcc	r0, [r0], #-9
    a51c:	2e000097 	mcrcs	0, 0, r0, cr0, cr7, {4}
    a520:	1c000097 	stcne	0, cr0, [r0], {151}	; 0x97
    a524:	000028c4 	andeq	r2, r0, r4, asr #17
    a528:	2104d601 	tstcs	r4, r1, lsl #12
    a52c:	00000707 	andeq	r0, r0, r7, lsl #14
    a530:	1d689102 	stfnep	f1, [r8, #-8]!
    a534:	00001a93 	muleq	r0, r3, sl
    a538:	1804d701 	stmdane	r4, {r0, r8, r9, sl, ip, lr, pc}
    a53c:	000000fa 	strdeq	r0, [r0], -sl
    a540:	00009762 	andeq	r9, r0, r2, ror #14
    a544:	00009760 	andeq	r9, r0, r0, ror #14
    a548:	0000001e 	andeq	r0, r0, lr, lsl r0
    a54c:	00187700 	andseq	r7, r8, r0, lsl #14
    a550:	51011f00 	tstpl	r1, r0, lsl #30
    a554:	1f007d02 	svcne	0x00007d02
    a558:	f3035201 	vhsub.u8	d5, d3, d1
    a55c:	011f5301 	tsteq	pc, r1, lsl #6
    a560:	00300153 	eorseq	r0, r0, r3, asr r1
    a564:	fa040700 	blx	10c16c <__RAM_SIZE+0xc16c>
    a568:	06000000 	streq	r0, [r0], -r0
    a56c:	00000908 	andeq	r0, r0, r8, lsl #18
    a570:	27c90120 	strbcs	r0, [r9, r0, lsr #2]
    a574:	bc010000 	stclt	0, cr0, [r1], {-0}
    a578:	00010a04 	andeq	r0, r1, r4, lsl #20
    a57c:	00000000 	andeq	r0, r0, r0
    a580:	75000000 	strvc	r0, [r0, #-0]
    a584:	01000097 	swpeq	r0, r7, [r0]	; <UNPREDICTABLE>
    a588:	00000981 	andeq	r0, r0, r1, lsl #19
    a58c:	0029181b 	eoreq	r1, r9, fp, lsl r8
    a590:	04bc0100 	ldrteq	r0, [ip], #256	; 0x100
    a594:	0005542a 	andeq	r5, r5, sl, lsr #8
    a598:	00979900 	addseq	r9, r7, r0, lsl #18
    a59c:	00979500 	addseq	r9, r7, r0, lsl #10
    a5a0:	27e91b00 	strbcs	r1, [r9, r0, lsl #22]!
    a5a4:	bd010000 	stclt	0, cr0, [r1, #-0]
    a5a8:	009a2304 	addseq	r2, sl, r4, lsl #6
    a5ac:	97bb0000 	ldrls	r0, [fp, r0]!
    a5b0:	97b70000 	ldrls	r0, [r7, r0]!
    a5b4:	171d0000 	ldrne	r0, [sp, -r0]
    a5b8:	01000029 	tsteq	r0, r9, lsr #32
    a5bc:	5e1904bf 	cfcmpdpl	r0, mvd9, mvd15
    a5c0:	dd000006 	stcle	0, cr0, [r0, #-24]	; 0xffffffe8
    a5c4:	d9000097 	stmdble	r0, {r0, r1, r2, r4, r7}
    a5c8:	21000097 	swpcs	r0, r7, [r0]	; <UNPREDICTABLE>
    a5cc:	00000000 	andeq	r0, r0, r0
    a5d0:	00001886 	andeq	r1, r0, r6, lsl #17
    a5d4:	00000021 	andeq	r0, r0, r1, lsr #32
    a5d8:	00189400 	andseq	r9, r8, r0, lsl #8
    a5dc:	011a0000 	tsteq	sl, r0
    a5e0:	000026ba 			; <UNDEFINED> instruction: 0x000026ba
    a5e4:	0c04a701 	stceq	7, cr10, [r4], {1}
    a5e8:	00009a01 	andeq	r9, r0, r1, lsl #20
	...
    a5f4:	0097fb00 	addseq	pc, r7, r0, lsl #22
    a5f8:	09f30100 	ldmibeq	r3!, {r8}^
    a5fc:	181b0000 	ldmdane	fp, {}	; <UNPREDICTABLE>
    a600:	01000029 	tsteq	r0, r9, lsr #32
    a604:	603304a7 	eorsvs	r0, r3, r7, lsr #9
    a608:	21000005 	tstcs	r0, r5
    a60c:	1b000098 	blne	a874 <__HEAP_SIZE+0x9874>
    a610:	1d000098 	stcne	0, cr0, [r0, #-608]	; 0xfffffda0
    a614:	00002917 	andeq	r2, r0, r7, lsl r9
    a618:	1904a901 	stmdbne	r4, {r0, r8, fp, sp, pc}
    a61c:	0000065e 	andeq	r0, r0, lr, asr r6
    a620:	00009853 	andeq	r9, r0, r3, asr r8
    a624:	0000984d 	andeq	r9, r0, sp, asr #16
    a628:	00267b1d 	eoreq	r7, r6, sp, lsl fp
    a62c:	04aa0100 	strteq	r0, [sl], #256	; 0x100
    a630:	00009a10 	andeq	r9, r0, r0, lsl sl
    a634:	00988100 	addseq	r8, r8, r0, lsl #2
    a638:	00987f00 	addseq	r7, r8, r0, lsl #30
    a63c:	00002100 	andeq	r2, r0, r0, lsl #2
    a640:	18860000 	stmne	r6, {}	; <UNPREDICTABLE>
    a644:	00210000 	eoreq	r0, r1, r0
    a648:	94000000 	strls	r0, [r0], #-0
    a64c:	00000018 	andeq	r0, r0, r8, lsl r0
    a650:	2684011a 	pkhbtcs	r0, r4, sl, lsl #2
    a654:	8a010000 	bhi	4a65c <__HEAP_SIZE+0x4965c>
    a658:	fa011004 	blx	4e670 <__HEAP_SIZE+0x4d670>
	...
    a664:	94000000 	strls	r0, [r0], #-0
    a668:	01000098 	swpeq	r0, r8, [r0]	; <UNPREDICTABLE>
    a66c:	00000a65 	andeq	r0, r0, r5, ror #20
    a670:	0029181b 	eoreq	r1, r9, fp, lsl r8
    a674:	048a0100 	streq	r0, [sl], #256	; 0x100
    a678:	00055433 	andeq	r5, r5, r3, lsr r4
    a67c:	0098be00 	addseq	fp, r8, r0, lsl #28
    a680:	0098b400 	addseq	fp, r8, r0, lsl #8
    a684:	1a931d00 	bne	fe4d1a8c <__StackTop+0xc63d1a8c>
    a688:	8c010000 	stchi	0, cr0, [r1], {-0}
    a68c:	00fa1404 	rscseq	r1, sl, r4, lsl #8
    a690:	99050000 	stmdbls	r5, {}	; <UNPREDICTABLE>
    a694:	99030000 	stmdbls	r3, {}	; <UNPREDICTABLE>
    a698:	171d0000 	ldrne	r0, [sp, -r0]
    a69c:	01000029 	tsteq	r0, r9, lsr #32
    a6a0:	5813048d 	ldmdapl	r3, {r0, r2, r3, r7, sl}
    a6a4:	22000006 	andcs	r0, r0, #6
    a6a8:	18000099 	stmdane	r0, {r0, r3, r4, r7}
    a6ac:	21000099 	swpcs	r0, r9, [r0]	; <UNPREDICTABLE>
    a6b0:	00000000 	andeq	r0, r0, r0
    a6b4:	00001886 	andeq	r1, r0, r6, lsl #17
    a6b8:	00000021 	andeq	r0, r0, r1, lsr #32
    a6bc:	00189400 	andseq	r9, r8, r0, lsl #8
    a6c0:	c5220000 	strgt	r0, [r2, #-0]!
    a6c4:	01000025 	tsteq	r0, r5, lsr #32
    a6c8:	01110457 	tsteq	r1, r7, asr r4
    a6cc:	10003258 	andne	r3, r0, r8, asr r2
    a6d0:	100032b8 			; <UNDEFINED> instruction: 0x100032b8
    a6d4:	00009967 	andeq	r9, r0, r7, ror #18
    a6d8:	000b1701 	andeq	r1, fp, r1, lsl #14
    a6dc:	32862300 	addcc	r2, r6, #0, 6
    a6e0:	329a1000 	addscc	r1, sl, #0
    a6e4:	0ae01000 	beq	ff80e6ec <__StackTop+0xc770e6ec>
    a6e8:	e01c0000 	ands	r0, ip, r0
    a6ec:	01000024 	tsteq	r0, r4, lsr #32
    a6f0:	cb3a0469 	blgt	e8b89c <__RAM_SIZE+0xd8b89c>
    a6f4:	05000003 	streq	r0, [r0, #-3]
    a6f8:	008c8803 	addeq	r8, ip, r3, lsl #16
    a6fc:	28141c38 	ldmdacs	r4, {r3, r4, r5, sl, fp, ip}
    a700:	6a010000 	bvs	4a708 <__HEAP_SIZE+0x49708>
    a704:	0b173404 	bleq	5d771c <__RAM_SIZE+0x4d771c>
    a708:	03050000 	movweq	r0, #20480	; 0x5000
    a70c:	38008bac 	stmdacc	r0, {r2, r3, r5, r7, r8, r9, fp, pc}
    a710:	0032961e 	eorseq	r9, r2, lr, lsl r6
    a714:	0018a210 	andseq	sl, r8, r0, lsl r2
    a718:	50011f00 	andpl	r1, r1, r0, lsl #30
    a71c:	011f3a01 	tsteq	pc, r1, lsl #20
    a720:	1f400151 	svcne	0x00400151
    a724:	03055201 	movweq	r5, #20993	; 0x5201
    a728:	38008bac 	stmdacc	r0, {r2, r3, r5, r7, r8, r9, fp, pc}
    a72c:	0553011f 	ldrbeq	r0, [r3, #-287]	; 0xfffffee1
    a730:	008c8803 	addeq	r8, ip, r3, lsl #16
    a734:	7d021f38 	stcvc	15, cr1, [r2, #-224]	; 0xffffff20
    a738:	00300100 	eorseq	r0, r0, r0, lsl #2
    a73c:	32602100 	rsbcc	r2, r0, #0, 2
    a740:	18861000 	stmne	r6, {ip}
    a744:	6a210000 	bvs	84a74c <__RAM_SIZE+0x74a74c>
    a748:	94100032 	ldrls	r0, [r0], #-50	; 0xffffffce
    a74c:	24000018 	strcs	r0, [r0], #-24	; 0xffffffe8
    a750:	10003276 	andne	r3, r0, r6, ror r2
    a754:	000018b1 			; <UNDEFINED> instruction: 0x000018b1
    a758:	00000b06 	andeq	r0, r0, r6, lsl #22
    a75c:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    a760:	1e000075 	mcrne	0, 0, r0, cr0, cr5, {3}
    a764:	1000327e 	andne	r3, r0, lr, ror r2
    a768:	000018b1 			; <UNDEFINED> instruction: 0x000018b1
    a76c:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    a770:	00000074 	andeq	r0, r0, r4, ror r0
    a774:	0000b80c 	andeq	fp, r0, ip, lsl #16
    a778:	000b2700 	andeq	r2, fp, r0, lsl #14
    a77c:	00350d00 	eorseq	r0, r5, r0, lsl #26
    a780:	009f0000 	addseq	r0, pc, r0
    a784:	0027f122 	eoreq	pc, r7, r2, lsr #2
    a788:	043e0100 	ldrteq	r0, [lr], #-256	; 0xffffff00
    a78c:	30840111 	addcc	r0, r4, r1, lsl r1
    a790:	30b41000 	adcscc	r1, r4, r0
    a794:	99ab1000 	stmibls	fp!, {ip}
    a798:	7d010000 	stcvc	0, cr0, [r1, #-0]
    a79c:	1d00000b 	stcne	0, cr0, [r0, #-44]	; 0xffffffd4
    a7a0:	00002862 	andeq	r2, r0, r2, ror #16
    a7a4:	14044001 	strne	r4, [r4], #-1
    a7a8:	00000117 	andeq	r0, r0, r7, lsl r1
    a7ac:	000099cd 	andeq	r9, r0, sp, asr #19
    a7b0:	000099cb 	andeq	r9, r0, fp, asr #19
    a7b4:	0019221d 	andseq	r2, r9, sp, lsl r2
    a7b8:	04410100 	strbeq	r0, [r1], #-256	; 0xffffff00
    a7bc:	00074912 	andeq	r4, r7, r2, lsl r9
    a7c0:	0099e500 	addseq	lr, r9, r0, lsl #10
    a7c4:	0099e100 	addseq	lr, r9, r0, lsl #2
    a7c8:	30941e00 	addscc	r1, r4, r0, lsl #28
    a7cc:	0f901000 	svceq	0x00901000
    a7d0:	011f0000 	tsteq	pc, r0
    a7d4:	ff090251 			; <UNDEFINED> instruction: 0xff090251
    a7d8:	7b250000 	blvc	94a7e0 <__RAM_SIZE+0x84a7e0>
    a7dc:	01000028 	tsteq	r0, r8, lsr #32
    a7e0:	011103aa 	tsteq	r1, sl, lsr #7
    a7e4:	10003148 	andne	r3, r0, r8, asr #2
    a7e8:	10003240 	andne	r3, r0, r0, asr #4
    a7ec:	00009a07 	andeq	r9, r0, r7, lsl #20
    a7f0:	000cbb01 	andeq	fp, ip, r1, lsl #22
    a7f4:	28c41c00 	stmiacs	r4, {sl, fp, ip}^
    a7f8:	ac010000 	stcge	0, cr0, [r1], {-0}
    a7fc:	07071d03 	streq	r1, [r7, -r3, lsl #26]
    a800:	91020000 	mrsls	r0, (UNDEF: 2)
    a804:	29171d60 	ldmdbcs	r7, {r5, r6, r8, sl, fp, ip}
    a808:	ad010000 	stcge	0, cr0, [r1, #-0]
    a80c:	06581303 	ldrbeq	r1, [r8], -r3, lsl #6
    a810:	9a410000 	bls	104a818 <__RAM_SIZE+0xf4a818>
    a814:	9a3f0000 	bls	fca81c <__RAM_SIZE+0xeca81c>
    a818:	191c0000 	ldmdbne	ip, {}	; <UNPREDICTABLE>
    a81c:	0100002a 	tsteq	r0, sl, lsr #32
    a820:	fa1403ae 	blx	50b6e0 <__RAM_SIZE+0x40b6e0>
    a824:	02000000 	andeq	r0, r0, #0
    a828:	d71d5c91 			; <UNDEFINED> instruction: 0xd71d5c91
    a82c:	01000024 	tsteq	r0, r4, lsr #32
    a830:	171403af 	ldrne	r0, [r4, -pc, lsr #7]
    a834:	60000001 	andvs	r0, r0, r1
    a838:	5400009a 	strpl	r0, [r0], #-154	; 0xffffff66
    a83c:	2300009a 	movwcs	r0, #154	; 0x9a
    a840:	10003174 	andne	r3, r0, r4, ror r1
    a844:	1000317c 	andne	r3, r0, ip, ror r1
    a848:	00000c05 	andeq	r0, r0, r5, lsl #24
    a84c:	0029f81d 	eoreq	pc, r9, sp, lsl r8	; <UNPREDICTABLE>
    a850:	03b90100 			; <UNDEFINED> instruction: 0x03b90100
    a854:	000cc138 	andeq	ip, ip, r8, lsr r1
    a858:	009aac00 	addseq	sl, sl, r0, lsl #24
    a85c:	009aaa00 	addseq	sl, sl, r0, lsl #20
    a860:	6a240000 	bvs	90a868 <__RAM_SIZE+0x80a868>
    a864:	c0100031 	andsgt	r0, r0, r1, lsr r0
    a868:	1e000018 	mcrne	0, 0, r0, cr0, cr8, {0}
    a86c:	1f00000c 	svcne	0x0000000c
    a870:	91025101 	tstls	r2, r1, lsl #2
    a874:	52011f60 	andpl	r1, r1, #96, 30	; 0x180
    a878:	24003001 	strcs	r3, [r0], #-1
    a87c:	1000318a 	andne	r3, r0, sl, lsl #3
    a880:	000018cf 	andeq	r1, r0, pc, asr #17
    a884:	00000c32 	andeq	r0, r0, r2, lsr ip
    a888:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    a88c:	24000474 	strcs	r0, [r0], #-1140	; 0xfffffb8c
    a890:	10003190 	mulne	r0, r0, r1
    a894:	00000d79 	andeq	r0, r0, r9, ror sp
    a898:	00000c46 	andeq	r0, r0, r6, asr #24
    a89c:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    a8a0:	24005c91 	strcs	r5, [r0], #-3217	; 0xfffff36f
    a8a4:	100031c2 	andne	r3, r0, r2, asr #3
    a8a8:	00000cc6 	andeq	r0, r0, r6, asr #25
    a8ac:	00000c60 	andeq	r0, r0, r0, ror #24
    a8b0:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    a8b4:	011f0074 	tsteq	pc, r4, ror r0	; <UNPREDICTABLE>
    a8b8:	00750252 	rsbseq	r0, r5, r2, asr r2
    a8bc:	31de2600 	bicscc	r2, lr, r0, lsl #12
    a8c0:	0c701000 	ldcleq	0, cr1, [r0], #-0
    a8c4:	011f0000 	tsteq	pc, r0
    a8c8:	00740250 	rsbseq	r0, r4, r0, asr r2
    a8cc:	31ee2400 	mvncc	r2, r0, lsl #8
    a8d0:	102b1000 	eorne	r1, fp, r0
    a8d4:	0c8a0000 	stceq	0, cr0, [sl], {0}
    a8d8:	011f0000 	tsteq	pc, r0
    a8dc:	00740250 	rsbseq	r0, r4, r0, asr r2
    a8e0:	0252011f 	subseq	r0, r2, #-1073741817	; 0xc0000007
    a8e4:	24000075 	strcs	r0, [r0], #-117	; 0xffffff8b
    a8e8:	1000321a 	andne	r3, r0, sl, lsl r2
    a8ec:	00000cc6 	andeq	r0, r0, r6, asr #25
    a8f0:	00000caa 	andeq	r0, r0, sl, lsr #25
    a8f4:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    a8f8:	011f0074 	tsteq	pc, r4, ror r0	; <UNPREDICTABLE>
    a8fc:	00750252 	rsbseq	r0, r5, r2, asr r2
    a900:	0253011f 	subseq	r0, r3, #-1073741817	; 0xc0000007
    a904:	1e000075 	mcrne	0, 0, r0, cr0, cr5, {3}
    a908:	10003236 	andne	r3, r0, r6, lsr r2
    a90c:	000018de 	ldrdeq	r1, [r0], -lr
    a910:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    a914:	00000074 	andeq	r0, r0, r4, ror r0
    a918:	06b60407 	ldrteq	r0, [r6], r7, lsl #8
    a91c:	bb060000 	bllt	18a924 <__RAM_SIZE+0x8a924>
    a920:	2700000c 	strcs	r0, [r0, -ip]
    a924:	00002752 	andeq	r2, r0, r2, asr r7
    a928:	17037e01 	strne	r7, [r3, -r1, lsl #28]
    a92c:	0000fa01 	andeq	pc, r0, r1, lsl #20
    a930:	002fd400 	eoreq	sp, pc, r0, lsl #8
    a934:	00301c10 	eorseq	r1, r0, r0, lsl ip
    a938:	009ac110 	addseq	ip, sl, r0, lsl r1
    a93c:	0d790100 	ldfeqe	f0, [r9, #-0]
    a940:	171b0000 	ldrne	r0, [fp, -r0]
    a944:	01000029 	tsteq	r0, r9, lsr #32
    a948:	5e43037e 	mcrpl	3, 2, r0, cr3, cr14, {3}
    a94c:	f5000006 			; <UNDEFINED> instruction: 0xf5000006
    a950:	e100009a 	swp	r0, sl, [r0]	; <UNPREDICTABLE>
    a954:	1b00009a 	blne	abc4 <__HEAP_SIZE+0x9bc4>
    a958:	000029a9 	andeq	r2, r0, r9, lsr #19
    a95c:	44037f01 	strmi	r7, [r3], #-3841	; 0xfffff0ff
    a960:	00000123 	andeq	r0, r0, r3, lsr #2
    a964:	00009b91 	muleq	r0, r1, fp
    a968:	00009b7b 	andeq	r9, r0, fp, ror fp
    a96c:	0024d71b 	eoreq	sp, r4, fp, lsl r7
    a970:	03800100 	orreq	r0, r0, #0, 2
    a974:	00012344 	andeq	r2, r1, r4, asr #6
    a978:	009c2900 	addseq	r2, ip, r0, lsl #18
    a97c:	009c1f00 	addseq	r1, ip, r0, lsl #30
    a980:	24941b00 	ldrcs	r1, [r4], #2816	; 0xb00
    a984:	81010000 	mrshi	r0, (UNDEF: 1)
    a988:	01234403 			; <UNDEFINED> instruction: 0x01234403
    a98c:	9c780000 	ldclls	0, cr0, [r8], #-0
    a990:	9c6e0000 	stclls	0, cr0, [lr], #-0
    a994:	b41d0000 	ldrlt	r0, [sp], #-0
    a998:	01000025 	tsteq	r0, r5, lsr #32
    a99c:	fa140383 	blx	50b7b0 <__RAM_SIZE+0x40b7b0>
    a9a0:	c3000000 	movwgt	r0, #0
    a9a4:	bd00009c 	stclt	0, cr0, [r0, #-624]	; 0xfffffd90
    a9a8:	2400009c 	strcs	r0, [r0], #-156	; 0xffffff64
    a9ac:	10002ff4 	strdne	r2, [r0], -r4
    a9b0:	000018ec 	andeq	r1, r0, ip, ror #17
    a9b4:	00000d65 	andeq	r0, r0, r5, ror #26
    a9b8:	0551011f 	ldrbeq	r0, [r1, #-287]	; 0xfffffee1
    a9bc:	235001f3 	cmpcs	r0, #-1073741764	; 0xc000003c
    a9c0:	0a1e0004 	beq	78a9d8 <__RAM_SIZE+0x68a9d8>
    a9c4:	ec100030 	ldc	0, cr0, [r0], {48}	; 0x30
    a9c8:	1f000018 	svcne	0x00000018
    a9cc:	f3055101 	vrhadd.u8	d5, d5, d1
    a9d0:	04235001 	strteq	r5, [r3], #-1
    a9d4:	a4270000 	strtge	r0, [r7], #-0
    a9d8:	01000027 	tsteq	r0, r7, lsr #32
    a9dc:	01170367 	tsteq	r7, r7, ror #6
    a9e0:	00000117 	andeq	r0, r0, r7, lsl r1
    a9e4:	100030b4 	strhne	r3, [r0], -r4
    a9e8:	100030e0 	andne	r3, r0, r0, ror #1
    a9ec:	00009cef 	andeq	r9, r0, pc, ror #25
    a9f0:	000de801 	andeq	lr, sp, r1, lsl #16
    a9f4:	2a181b00 	bcs	6115fc <__RAM_SIZE+0x5115fc>
    a9f8:	67010000 	strvs	r0, [r1, -r0]
    a9fc:	090e3c03 	stmdbeq	lr, {r0, r1, sl, fp, ip, sp}
    aa00:	9d130000 	ldcls	0, cr0, [r3, #-0]
    aa04:	9d0f0000 	stcls	0, cr0, [pc, #-0]	; aa0c <__HEAP_SIZE+0x9a0c>
    aa08:	d71d0000 	ldrle	r0, [sp, -r0]
    aa0c:	01000024 	tsteq	r0, r4, lsr #32
    aa10:	17140369 	ldrne	r0, [r4, -r9, ror #6]
    aa14:	39000001 	stmdbcc	r0, {r0}
    aa18:	3100009d 	swpcc	r0, sp, [r0]	; <UNPREDICTABLE>
    aa1c:	1c00009d 	stcne	0, cr0, [r0], {157}	; 0x9d
    aa20:	00002896 	muleq	r0, r6, r8
    aa24:	2b036a01 	blcs	e5230 <__HEAP_SIZE+0xe4230>
    aa28:	00000117 	andeq	r0, r0, r7, lsl r1
    aa2c:	8c840305 	stchi	3, cr0, [r4], {5}
    aa30:	bc213800 	stclt	8, cr3, [r1], #-0
    aa34:	fb100030 	blx	40aafe <__RAM_SIZE+0x30aafe>
    aa38:	21000018 	tstcs	r0, r8, lsl r0
    aa3c:	100030d6 	ldrdne	r3, [r0], -r6
    aa40:	00000b27 	andeq	r0, r0, r7, lsr #22
    aa44:	2a032800 	bcs	d4a4c <__HEAP_SIZE+0xd3a4c>
    aa48:	4c010000 	stcmi	0, cr0, [r1], {-0}
    aa4c:	17011703 	strne	r1, [r1, -r3, lsl #14]
    aa50:	b4000001 	strlt	r0, [r0], #-1
    aa54:	d410002f 	ldrle	r0, [r0], #-47	; 0xffffffd1
    aa58:	0210002f 	andseq	r0, r0, #47	; 0x2f
    aa5c:	3101007d 	tstcc	r1, sp, ror r0
    aa60:	1b00000e 	blne	aaa0 <__HEAP_SIZE+0x9aa0>
    aa64:	000024c8 	andeq	r2, r0, r8, asr #9
    aa68:	40034c01 	andmi	r4, r3, r1, lsl #24
    aa6c:	0000090e 	andeq	r0, r0, lr, lsl #18
    aa70:	00009d75 	andeq	r9, r0, r5, ror sp
    aa74:	00009d6d 	andeq	r9, r0, sp, ror #26
    aa78:	0028621d 	eoreq	r6, r8, sp, lsl r2
    aa7c:	034e0100 	movteq	r0, #57600	; 0xe100
    aa80:	00011714 	andeq	r1, r1, r4, lsl r7
    aa84:	009db300 	addseq	fp, sp, r0, lsl #6
    aa88:	009daf00 	addseq	sl, sp, r0, lsl #30
    aa8c:	7a220000 	bvc	88aa94 <__RAM_SIZE+0x78aa94>
    aa90:	01000029 	tsteq	r0, r9, lsr #32
    aa94:	0111030e 	tsteq	r1, lr, lsl #6
    aa98:	100030e0 	andne	r3, r0, r0, ror #1
    aa9c:	10003148 	andne	r3, r0, r8, asr #2
    aaa0:	00009dd2 	ldrdeq	r9, [r0], -r2
    aaa4:	000f1401 	andeq	r1, pc, r1, lsl #8
    aaa8:	28621b00 	stmdacs	r2!, {r8, r9, fp, ip}^
    aaac:	0e010000 	cdpeq	0, 0, cr0, cr1, cr0, {0}
    aab0:	01233e03 			; <UNDEFINED> instruction: 0x01233e03
    aab4:	9e1a0000 	cdpls	0, 1, cr0, cr10, cr0, {0}
    aab8:	9e160000 	cdpls	0, 1, cr0, cr6, cr0, {0}
    aabc:	c91b0000 	ldmdbgt	fp, {}	; <UNPREDICTABLE>
    aac0:	01000024 	tsteq	r0, r4, lsr #32
    aac4:	fa38030f 	blx	e0b708 <__RAM_SIZE+0xd0b708>
    aac8:	40000000 	andmi	r0, r0, r0
    aacc:	3800009e 	stmdacc	r0, {r1, r2, r3, r4, r7}
    aad0:	1d00009e 	stcne	0, cr0, [r0, #-632]	; 0xfffffd88
    aad4:	000024d7 	ldrdeq	r2, [r0], -r7
    aad8:	14031101 	strne	r1, [r3], #-257	; 0xfffffeff
    aadc:	00000117 	andeq	r0, r0, r7, lsl r1
    aae0:	00009e85 	andeq	r9, r0, r5, lsl #29
    aae4:	00009e77 	andeq	r9, r0, r7, ror lr
    aae8:	002a191c 	eoreq	r1, sl, ip, lsl r9
    aaec:	03120100 	tsteq	r2, #0, 2
    aaf0:	0000fa14 	andeq	pc, r0, r4, lsl sl	; <UNPREDICTABLE>
    aaf4:	6c910200 	lfmvs	f0, 4, [r1], {0}
    aaf8:	0030ec21 	eorseq	lr, r0, r1, lsr #24
    aafc:	00190a10 	andseq	r0, r9, r0, lsl sl
    ab00:	30f22400 	rscscc	r2, r2, r0, lsl #8
    ab04:	0d791000 	ldcleq	0, cr1, [r9, #-0]
    ab08:	0eb80000 	cdpeq	0, 11, cr0, cr8, cr0, {0}
    ab0c:	011f0000 	tsteq	pc, r0
    ab10:	6c910250 	lfmvs	f0, 4, [r1], {80}	; 0x50
    ab14:	31162400 	tstcc	r6, r0, lsl #8
    ab18:	19191000 	ldmdbne	r9, {ip}
    ab1c:	0ed50000 	cdpeq	0, 13, cr0, cr5, cr0, {0}
    ab20:	011f0000 	tsteq	pc, r0
    ab24:	00760551 	rsbseq	r0, r6, r1, asr r5
    ab28:	1f1c0075 	svcne	0x001c0075
    ab2c:	74025201 	strvc	r5, [r2], #-513	; 0xfffffdff
    ab30:	1a210000 	bne	84ab38 <__RAM_SIZE+0x74ab38>
    ab34:	28100031 	ldmdacs	r0, {r0, r4, r5}
    ab38:	21000019 	tstcs	r0, r9, lsl r0
    ab3c:	10003124 	andne	r3, r0, r4, lsr #2
    ab40:	00001928 	andeq	r1, r0, r8, lsr #18
    ab44:	00312c24 	eorseq	r2, r1, r4, lsr #24
    ab48:	000f9010 	andeq	r9, pc, r0, lsl r0	; <UNPREDICTABLE>
    ab4c:	000f0100 	andeq	r0, pc, r0, lsl #2
    ab50:	50011f00 	andpl	r1, r1, r0, lsl #30
    ab54:	1f007602 	svcne	0x00007602
    ab58:	75025101 	strvc	r5, [r2, #-257]	; 0xfffffeff
    ab5c:	36210000 	strtcc	r0, [r1], -r0
    ab60:	37100031 			; <UNDEFINED> instruction: 0x37100031
    ab64:	21000019 	tstcs	r0, r9, lsl r0
    ab68:	1000313c 	andne	r3, r0, ip, lsr r1
    ab6c:	00001928 	andeq	r1, r0, r8, lsr #18
    ab70:	28552200 	ldmdacs	r5, {r9, sp}^
    ab74:	ec010000 	stc	0, cr0, [r1], {-0}
    ab78:	40010c02 	andmi	r0, r1, r2, lsl #24
    ab7c:	56100032 			; <UNDEFINED> instruction: 0x56100032
    ab80:	da100032 	ble	40ac50 <__RAM_SIZE+0x30ac50>
    ab84:	0100009e 	swpeq	r0, lr, [r0]	; <UNPREDICTABLE>
    ab88:	00000f90 	muleq	r0, r0, pc	; <UNPREDICTABLE>
    ab8c:	001efe1b 	andseq	pc, lr, fp, lsl lr	; <UNPREDICTABLE>
    ab90:	02ec0100 	rsceq	r0, ip, #0, 2
    ab94:	00009a0c 	andeq	r9, r0, ip, lsl #20
    ab98:	009f0a00 	addseq	r0, pc, r0, lsl #20
    ab9c:	009f0600 	addseq	r0, pc, r0, lsl #12
    aba0:	28621d00 	stmdacs	r2!, {r8, sl, fp, ip}^
    aba4:	ee010000 	cdp	0, 0, cr0, cr1, cr0, {0}
    aba8:	01171402 	tsteq	r7, r2, lsl #8
    abac:	9f2d0000 	svcls	0x002d0000
    abb0:	9f2b0000 	svcls	0x002b0000
    abb4:	c91c0000 	ldmdbgt	ip, {}	; <UNPREDICTABLE>
    abb8:	01000024 	tsteq	r0, r4, lsr #32
    abbc:	fa1402ef 	blx	50b780 <__RAM_SIZE+0x40b780>
    abc0:	02000000 	andeq	r0, r0, #0
    abc4:	4a247491 	bmi	927e10 <__RAM_SIZE+0x827e10>
    abc8:	e8100032 	ldmda	r0, {r1, r4, r5}
    abcc:	7d00000d 	stcvc	0, cr0, [r0, #-52]	; 0xffffffcc
    abd0:	1f00000f 	svcne	0x0000000f
    abd4:	91025001 	tstls	r2, r1
    abd8:	50210074 	eorpl	r0, r1, r4, ror r0
    abdc:	31100032 	tstcc	r0, r2, lsr r0
    abe0:	2100000e 	tstcs	r0, lr
    abe4:	10003254 	andne	r3, r0, r4, asr r2
    abe8:	00000b7d 	andeq	r0, r0, sp, ror fp
    abec:	263b2200 	ldrtcs	r2, [fp], -r0, lsl #4
    abf0:	ce010000 	cdpgt	0, 0, cr0, cr1, cr0, {0}
    abf4:	44011102 	strmi	r1, [r1], #-258	; 0xfffffefe
    abf8:	84100030 	ldrhi	r0, [r0], #-48	; 0xffffffd0
    abfc:	40100030 	andsmi	r0, r0, r0, lsr r0
    ac00:	0100009f 	swpeq	r0, pc, [r0]	; <UNPREDICTABLE>
    ac04:	0000102b 	andeq	r1, r0, fp, lsr #32
    ac08:	0028621b 	eoreq	r6, r8, fp, lsl r2
    ac0c:	02ce0100 	sbceq	r0, lr, #0, 2
    ac10:	0001233a 	andeq	r2, r1, sl, lsr r3
    ac14:	009f6400 	addseq	r6, pc, r0, lsl #8
    ac18:	009f6000 	addseq	r6, pc, r0
    ac1c:	24d71b00 	ldrbcs	r1, [r7], #2816	; 0xb00
    ac20:	cf010000 	svcgt	0x00010000
    ac24:	01233a02 			; <UNDEFINED> instruction: 0x01233a02
    ac28:	9f860000 	svcls	0x00860000
    ac2c:	9f820000 	svcls	0x00820000
    ac30:	171d0000 	ldrne	r0, [sp, -r0]
    ac34:	01000029 	tsteq	r0, r9, lsr #32
    ac38:	5e1902d4 	mrcpl	2, 0, r0, cr9, cr4, {6}
    ac3c:	a6000006 	strge	r0, [r0], -r6
    ac40:	a400009f 	strge	r0, [r0], #-159	; 0xffffff61
    ac44:	2400009f 	strcs	r0, [r0], #-159	; 0xffffff61
    ac48:	10003058 	andne	r3, r0, r8, asr r0
    ac4c:	000018cf 	andeq	r1, r0, pc, asr #17
    ac50:	00000ffe 	strdeq	r0, [r0], -lr
    ac54:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    ac58:	26000474 			; <UNDEFINED> instruction: 0x26000474
    ac5c:	10003070 	andne	r3, r0, r0, ror r0
    ac60:	0000100e 	andeq	r1, r0, lr
    ac64:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    ac68:	1e000074 	mcrne	0, 0, r0, cr0, cr4, {3}
    ac6c:	1000307c 	andne	r3, r0, ip, ror r0
    ac70:	0000102b 	andeq	r1, r0, fp, lsr #32
    ac74:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    ac78:	011f0074 	tsteq	pc, r4, ror r0	; <UNPREDICTABLE>
    ac7c:	00750251 	rsbseq	r0, r5, r1, asr r2
    ac80:	0252011f 	subseq	r0, r2, #-1073741817	; 0xc0000007
    ac84:	00000076 	andeq	r0, r0, r6, ror r0
    ac88:	00280522 	eoreq	r0, r8, r2, lsr #10
    ac8c:	02bb0100 	adcseq	r0, fp, #0, 2
    ac90:	301c0111 	andscc	r0, ip, r1, lsl r1
    ac94:	30441000 	subcc	r1, r4, r0
    ac98:	9fb91000 	svcls	0x00b91000
    ac9c:	b2010000 	andlt	r0, r1, #0
    aca0:	1b000010 	blne	ace8 <__HEAP_SIZE+0x9ce8>
    aca4:	00002917 	andeq	r2, r0, r7, lsl r9
    aca8:	3102bb01 	tstcc	r2, r1, lsl #22
    acac:	0000065e 	andeq	r0, r0, lr, asr r6
    acb0:	00009fdd 	ldrdeq	r9, [r0], -sp
    acb4:	00009fd9 	ldrdeq	r9, [r0], -r9	; <UNPREDICTABLE>
    acb8:	0026981b 	eoreq	r9, r6, fp, lsl r8
    acbc:	02bc0100 	adcseq	r0, ip, #0, 2
    acc0:	0001172c 	andeq	r1, r1, ip, lsr #14
    acc4:	009fff00 	addseq	pc, pc, r0, lsl #30
    acc8:	009ffb00 	addseq	pc, pc, r0, lsl #22
    accc:	24d71b00 	ldrbcs	r1, [r7], #2816	; 0xb00
    acd0:	bd010000 	stclt	0, cr0, [r1, #-0]
    acd4:	01233202 			; <UNDEFINED> instruction: 0x01233202
    acd8:	a0210000 	eorge	r0, r1, r0
    acdc:	a01d0000 	andsge	r0, sp, r0
    ace0:	30260000 	eorcc	r0, r6, r0
    ace4:	95100030 	ldrls	r0, [r0, #-48]	; 0xffffffd0
    ace8:	1f000010 	svcne	0x00000010
    acec:	74025001 	strvc	r5, [r2], #-1
    acf0:	3e1e0000 	cdpcc	0, 1, cr0, cr14, cr0, {0}
    acf4:	c6100030 			; <UNDEFINED> instruction: 0xc6100030
    acf8:	1f00000c 	svcne	0x0000000c
    acfc:	74025001 	strvc	r5, [r2], #-1
    ad00:	52011f00 	andpl	r1, r1, #0, 30
    ad04:	1f007602 	svcne	0x00007602
    ad08:	75025301 	strvc	r5, [r2, #-769]	; 0xfffffcff
    ad0c:	29000000 	stmdbcs	r0, {}	; <UNPREDICTABLE>
    ad10:	00294d01 	eoreq	r4, r9, r1, lsl #26
    ad14:	02ad0100 	adceq	r0, sp, #0, 2
    ad18:	00ad0112 	adceq	r0, sp, r2, lsl r1
	...
    ad24:	7d020000 	stcvc	0, cr0, [r2, #-0]
    ad28:	10fc0100 	rscsne	r0, ip, r0, lsl #2
    ad2c:	181b0000 	ldmdane	fp, {}	; <UNPREDICTABLE>
    ad30:	01000029 	tsteq	r0, r9, lsr #32
    ad34:	543002ad 	ldrtpl	r0, [r0], #-685	; 0xfffffd53
    ad38:	43000005 	movwmi	r0, #5
    ad3c:	3f0000a0 	svccc	0x000000a0
    ad40:	1d0000a0 	stcne	0, cr0, [r0, #-640]	; 0xfffffd80
    ad44:	00002917 	andeq	r2, r0, r7, lsl r9
    ad48:	1302af01 	movwne	sl, #12033	; 0x2f01
    ad4c:	00000658 	andeq	r0, r0, r8, asr r6
    ad50:	0000a068 	andeq	sl, r0, r8, rrx
    ad54:	0000a064 	andeq	sl, r0, r4, rrx
    ad58:	7b012900 	blvc	55160 <__HEAP_SIZE+0x54160>
    ad5c:	01000025 	tsteq	r0, r5, lsr #32
    ad60:	0114028f 	tsteq	r4, pc, lsl #5
    ad64:	000000fa 	strdeq	r0, [r0], -sl
	...
    ad70:	01007d02 	tsteq	r0, r2, lsl #26
    ad74:	0000116a 	andeq	r1, r0, sl, ror #2
    ad78:	0029181b 	eoreq	r1, r9, fp, lsl r8
    ad7c:	028f0100 	addeq	r0, pc, #0, 2
    ad80:	00055439 	andeq	r5, r5, r9, lsr r4
    ad84:	00a09100 	adceq	r9, r0, r0, lsl #2
    ad88:	00a08900 	adceq	r8, r0, r0, lsl #18
    ad8c:	29e92a00 	stmibcs	r9!, {r9, fp, sp}^
    ad90:	90010000 	andls	r0, r1, r0
    ad94:	116a3c02 	cmnne	sl, r2, lsl #24
    ad98:	51010000 	mrspl	r0, (UNDEF: 1)
    ad9c:	001a931d 	andseq	r9, sl, sp, lsl r3
    ada0:	02920100 	addseq	r0, r2, #0, 2
    ada4:	0000fa18 	andeq	pc, r0, r8, lsl sl	; <UNPREDICTABLE>
    ada8:	00a0cd00 	adceq	ip, r0, r0, lsl #26
    adac:	00a0c900 	adceq	ip, r0, r0, lsl #18
    adb0:	29171d00 	ldmdbcs	r7, {r8, sl, fp, ip}
    adb4:	93010000 	movwls	r0, #4096	; 0x1000
    adb8:	06581702 	ldrbeq	r1, [r8], -r2, lsl #14
    adbc:	a0f50000 	rscsge	r0, r5, r0
    adc0:	a0ed0000 	rscge	r0, sp, r0
    adc4:	07000000 	streq	r0, [r0, -r0]
    adc8:	00117004 	andseq	r7, r1, r4
    adcc:	47040700 	strmi	r0, [r4, -r0, lsl #14]
    add0:	29000004 	stmdbcs	r0, {r2}
    add4:	00276d01 	eoreq	r6, r7, r1, lsl #26
    add8:	027e0100 	rsbseq	r0, lr, #0, 2
    addc:	01170110 	tsteq	r7, r0, lsl r1
	...
    ade8:	7d020000 	stcvc	0, cr0, [r2, #-0]
    adec:	11d50100 	bicsne	r0, r5, r0, lsl #2
    adf0:	181b0000 	ldmdane	fp, {}	; <UNPREDICTABLE>
    adf4:	01000029 	tsteq	r0, r9, lsr #32
    adf8:	5433027e 	ldrtpl	r0, [r3], #-638	; 0xfffffd82
    adfc:	31000005 	tstcc	r0, r5
    ae00:	2d0000a1 	stccs	0, cr0, [r0, #-644]	; 0xfffffd7c
    ae04:	1d0000a1 	stcne	0, cr0, [r0, #-644]	; 0xfffffd7c
    ae08:	00002917 	andeq	r2, r0, r7, lsl r9
    ae0c:	13028001 	movwne	r8, #8193	; 0x2001
    ae10:	00000658 	andeq	r0, r0, r8, asr r6
    ae14:	0000a156 	andeq	sl, r0, r6, asr r1
    ae18:	0000a152 	andeq	sl, r0, r2, asr r1
    ae1c:	001a931d 	andseq	r9, sl, sp, lsl r3
    ae20:	02810100 	addeq	r0, r1, #0, 2
    ae24:	00011714 	andeq	r1, r1, r4, lsl r7
    ae28:	00a17b00 	adceq	r7, r1, r0, lsl #22
    ae2c:	00a17700 	adceq	r7, r1, r0, lsl #14
    ae30:	011a0000 	tsteq	sl, r0
    ae34:	00002605 	andeq	r2, r0, r5, lsl #12
    ae38:	11027001 	tstne	r2, r1
    ae3c:	00010b01 	andeq	r0, r1, r1, lsl #22
	...
    ae48:	00a19a00 	adceq	r9, r1, r0, lsl #20
    ae4c:	12310100 	eorsne	r0, r1, #0, 2
    ae50:	181b0000 	ldmdane	fp, {}	; <UNPREDICTABLE>
    ae54:	01000029 	tsteq	r0, r9, lsr #32
    ae58:	54350270 	ldrtpl	r0, [r5], #-624	; 0xfffffd90
    ae5c:	be000005 	cdplt	0, 0, cr0, cr0, cr5, {0}
    ae60:	ba0000a1 	blt	b0ec <__HEAP_SIZE+0xa0ec>
    ae64:	1d0000a1 	stcne	0, cr0, [r0, #-644]	; 0xfffffd7c
    ae68:	00000c7f 	andeq	r0, r0, pc, ror ip
    ae6c:	15027201 	strne	r7, [r2, #-513]	; 0xfffffdff
    ae70:	0000010b 	andeq	r0, r0, fp, lsl #2
    ae74:	0000a1e1 	andeq	sl, r0, r1, ror #3
    ae78:	0000a1df 	ldrdeq	sl, [r0], -pc	; <UNPREDICTABLE>
    ae7c:	0000001e 	andeq	r0, r0, lr, lsl r0
    ae80:	00123100 	andseq	r3, r2, r0, lsl #2
    ae84:	50011f00 	andpl	r1, r1, r0, lsl #30
    ae88:	5001f303 	andpl	pc, r1, r3, lsl #6
    ae8c:	011a0000 	tsteq	sl, r0
    ae90:	00002606 	andeq	r2, r0, r6, lsl #12
    ae94:	10025401 	andne	r5, r2, r1, lsl #8
    ae98:	0000fa01 	andeq	pc, r0, r1, lsl #20
	...
    aea4:	00a1f400 	adceq	pc, r1, r0, lsl #8
    aea8:	12a30100 	adcne	r0, r3, #0, 2
    aeac:	181b0000 	ldmdane	fp, {}	; <UNPREDICTABLE>
    aeb0:	01000029 	tsteq	r0, r9, lsr #32
    aeb4:	54330254 	ldrtpl	r0, [r3], #-596	; 0xfffffdac
    aeb8:	1e000005 	cdpne	0, 0, cr0, cr0, cr5, {0}
    aebc:	140000a2 	strne	r0, [r0], #-162	; 0xffffff5e
    aec0:	1d0000a2 	stcne	0, cr0, [r0, #-648]	; 0xfffffd78
    aec4:	00002917 	andeq	r2, r0, r7, lsl r9
    aec8:	13025601 	movwne	r5, #9729	; 0x2601
    aecc:	00000658 	andeq	r0, r0, r8, asr r6
    aed0:	0000a26d 	andeq	sl, r0, sp, ror #4
    aed4:	0000a263 	andeq	sl, r0, r3, ror #4
    aed8:	001a931d 	andseq	r9, sl, sp, lsl r3
    aedc:	02570100 	subseq	r0, r7, #0, 2
    aee0:	0000fa14 	andeq	pc, r0, r4, lsl sl	; <UNPREDICTABLE>
    aee4:	00a2b400 	adceq	fp, r2, r0, lsl #8
    aee8:	00a2b200 	adceq	fp, r2, r0, lsl #4
    aeec:	00002100 	andeq	r2, r0, r0, lsl #2
    aef0:	18860000 	stmne	r6, {}	; <UNPREDICTABLE>
    aef4:	00210000 	eoreq	r0, r1, r0
    aef8:	94000000 	strls	r0, [r0], #-0
    aefc:	00000018 	andeq	r0, r0, r8, lsl r0
    af00:	29950120 	ldmibcs	r5, {r5, r8}
    af04:	3b010000 	blcc	4af0c <__HEAP_SIZE+0x49f0c>
    af08:	00010a02 	andeq	r0, r1, r2, lsl #20
    af0c:	00000000 	andeq	r0, r0, r0
    af10:	c7000000 	strgt	r0, [r0, -r0]
    af14:	010000a2 	smlatbeq	r0, r2, r0, r0
    af18:	00001311 	andeq	r1, r0, r1, lsl r3
    af1c:	0029181b 	eoreq	r1, r9, fp, lsl r8
    af20:	023b0100 	eorseq	r0, fp, #0, 2
    af24:	0005542d 	andeq	r5, r5, sp, lsr #8
    af28:	00a2eb00 	adceq	lr, r2, r0, lsl #22
    af2c:	00a2e700 	adceq	lr, r2, r0, lsl #14
    af30:	26cc1b00 	strbcs	r1, [ip], r0, lsl #22
    af34:	3c010000 	stccc	0, cr0, [r1], {-0}
    af38:	01063002 	tsteq	r6, r2
    af3c:	a30d0000 	movwge	r0, #53248	; 0xd000
    af40:	a3090000 	movwge	r0, #36864	; 0x9000
    af44:	171d0000 	ldrne	r0, [sp, -r0]
    af48:	01000029 	tsteq	r0, r9, lsr #32
    af4c:	5813023e 	ldmdapl	r3, {r1, r2, r3, r4, r5, r9}
    af50:	2f000006 	svccs	0x00000006
    af54:	2b0000a3 	blcs	b1e8 <__HEAP_SIZE+0xa1e8>
    af58:	210000a3 	smlatbcs	r0, r3, r0, r0
    af5c:	00000000 	andeq	r0, r0, r0
    af60:	00001886 	andeq	r1, r0, r6, lsl #17
    af64:	00000021 	andeq	r0, r0, r1, lsr #32
    af68:	00189400 	andseq	r9, r8, r0, lsl #8
    af6c:	01290000 			; <UNDEFINED> instruction: 0x01290000
    af70:	00002907 	andeq	r2, r0, r7, lsl #18
    af74:	10022d01 	andne	r2, r2, r1, lsl #26
    af78:	00011701 	andeq	r1, r1, r1, lsl #14
	...
    af84:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    af88:	00135b01 	andseq	r5, r3, r1, lsl #22
    af8c:	29181b00 	ldmdbcs	r8, {r8, r9, fp, ip}
    af90:	2d010000 	stccs	0, cr0, [r1, #-0]
    af94:	05542f02 	ldrbeq	r2, [r4, #-3842]	; 0xfffff0fe
    af98:	a3510000 	cmpge	r1, #0
    af9c:	a34d0000 	movtge	r0, #53248	; 0xd000
    afa0:	171d0000 	ldrne	r0, [sp, -r0]
    afa4:	01000029 	tsteq	r0, r9, lsr #32
    afa8:	5813022f 	ldmdapl	r3, {r0, r1, r2, r3, r5, r9}
    afac:	76000006 	strvc	r0, [r0], -r6
    afb0:	720000a3 	andvc	r0, r0, #163	; 0xa3
    afb4:	000000a3 	andeq	r0, r0, r3, lsr #1
    afb8:	23a9012b 			; <UNDEFINED> instruction: 0x23a9012b
    afbc:	1f010000 	svcne	0x00010000
    afc0:	1e011202 	cdpne	2, 0, cr1, cr1, cr2, {0}
    afc4:	00000005 	andeq	r0, r0, r5
    afc8:	00000000 	andeq	r0, r0, r0
    afcc:	02000000 	andeq	r0, r0, #0
    afd0:	1a01007d 	bne	4b1cc <__HEAP_SIZE+0x4a1cc>
    afd4:	0026d801 	eoreq	sp, r6, r1, lsl #16
    afd8:	01f30100 	mvnseq	r0, r0, lsl #2
    afdc:	00fa0110 	rscseq	r0, sl, r0, lsl r1
	...
    afe8:	a3970000 	orrsge	r0, r7, #0
    afec:	47010000 	strmi	r0, [r1, -r0]
    aff0:	1b000014 	blne	b048 <__HEAP_SIZE+0xa048>
    aff4:	00002918 	andeq	r2, r0, r8, lsl r9
    aff8:	3b01f301 	blcc	87c04 <__HEAP_SIZE+0x86c04>
    affc:	00000554 	andeq	r0, r0, r4, asr r5
    b000:	0000a3eb 	andeq	sl, r0, fp, ror #7
    b004:	0000a3db 	ldrdeq	sl, [r0], -fp
    b008:	0025a91b 	eoreq	sl, r5, fp, lsl r9
    b00c:	01f40100 	mvnseq	r0, r0, lsl #2
    b010:	0001063e 	andeq	r0, r1, lr, lsr r6
    b014:	00a46200 	adceq	r6, r4, r0, lsl #4
    b018:	00a45600 	adceq	r5, r4, r0, lsl #12
    b01c:	25031b00 	strcs	r1, [r3, #-2816]	; 0xfffff500
    b020:	f5010000 			; <UNDEFINED> instruction: 0xf5010000
    b024:	01233e01 			; <UNDEFINED> instruction: 0x01233e01
    b028:	a4bf0000 	ldrtge	r0, [pc], #0	; b030 <__HEAP_SIZE+0xa030>
    b02c:	a4b30000 	ldrtge	r0, [r3], #0
    b030:	6b1b0000 	blvs	6cb038 <__RAM_SIZE+0x5cb038>
    b034:	0100000b 	tsteq	r0, fp
    b038:	0e4001f6 	mcreq	1, 2, r0, cr0, cr6, {7}
    b03c:	1c000009 	stcne	0, cr0, [r0], {9}
    b040:	100000a5 	andne	r0, r0, r5, lsr #1
    b044:	1b0000a5 	blne	b2e0 <__HEAP_SIZE+0xa2e0>
    b048:	0000215b 	andeq	r2, r0, fp, asr r1
    b04c:	3e01f701 	cdpcc	7, 0, cr15, cr1, cr1, {0}
    b050:	00000123 	andeq	r0, r0, r3, lsr #2
    b054:	0000a570 	andeq	sl, r0, r0, ror r5
    b058:	0000a56c 	andeq	sl, r0, ip, ror #10
    b05c:	001a931d 	andseq	r9, sl, sp, lsl r3
    b060:	01f90100 	mvnseq	r0, r0, lsl #2
    b064:	0000fa14 	andeq	pc, r0, r4, lsl sl	; <UNPREDICTABLE>
    b068:	00a59800 	adceq	r9, r5, r0, lsl #16
    b06c:	00a59000 	adceq	r9, r5, r0
    b070:	28c41c00 	stmiacs	r4, {sl, fp, ip}^
    b074:	fa010000 	blx	4b07c <__HEAP_SIZE+0x4a07c>
    b078:	07071d01 	streq	r1, [r7, -r1, lsl #26]
    b07c:	91020000 	mrsls	r0, (UNDEF: 2)
    b080:	00001e68 	andeq	r1, r0, r8, ror #28
    b084:	18770000 	ldmdane	r7!, {}^	; <UNPREDICTABLE>
    b088:	011f0000 	tsteq	pc, r0
    b08c:	00740250 	rsbseq	r0, r4, r0, asr r2
    b090:	0251011f 	subseq	r0, r1, #-1073741817	; 0xc0000007
    b094:	011f007d 	tsteq	pc, sp, ror r0	; <UNPREDICTABLE>
    b098:	01f30352 	mvnseq	r0, r2, asr r3
    b09c:	53011f53 	movwpl	r1, #8019	; 0x1f53
    b0a0:	00003001 	andeq	r3, r0, r1
    b0a4:	29b9011a 	ldmibcs	r9!, {r1, r3, r4, r8}
    b0a8:	c0010000 	andgt	r0, r1, r0
    b0ac:	fa011001 	blx	4f0b8 <__HEAP_SIZE+0x4e0b8>
	...
    b0b8:	cf000000 	svcgt	0x00000000
    b0bc:	010000a5 	smlatbeq	r0, r5, r0, r0
    b0c0:	00001539 	andeq	r1, r0, r9, lsr r5
    b0c4:	0029181b 	eoreq	r1, r9, fp, lsl r8
    b0c8:	01c00100 	biceq	r0, r0, r0, lsl #2
    b0cc:	0005543c 	andeq	r5, r5, ip, lsr r4
    b0d0:	00a62d00 	adceq	r2, r6, r0, lsl #26
    b0d4:	00a61f00 	adceq	r1, r6, r0, lsl #30
    b0d8:	25a91b00 	strcs	r1, [r9, #2816]!	; 0xb00
    b0dc:	c1010000 	mrsgt	r0, (UNDEF: 1)
    b0e0:	01063f01 	tsteq	r6, r1, lsl #30
    b0e4:	a6960000 	ldrge	r0, [r6], r0
    b0e8:	a68c0000 	strge	r0, [ip], r0
    b0ec:	031b0000 	tsteq	fp, #0
    b0f0:	01000025 	tsteq	r0, r5, lsr #32
    b0f4:	233f01c2 	teqcs	pc, #-2147483600	; 0x80000030
    b0f8:	e5000001 	str	r0, [r0, #-1]
    b0fc:	db0000a6 	blle	b39c <__HEAP_SIZE+0xa39c>
    b100:	1b0000a6 	blne	b3a0 <__HEAP_SIZE+0xa3a0>
    b104:	00000b6b 	andeq	r0, r0, fp, ror #22
    b108:	4101c301 	tstmi	r1, r1, lsl #6
    b10c:	0000090e 	andeq	r0, r0, lr, lsl #18
    b110:	0000a72e 	andeq	sl, r0, lr, lsr #14
    b114:	0000a72a 	andeq	sl, r0, sl, lsr #14
    b118:	00215b1b 	eoreq	r5, r1, fp, lsl fp
    b11c:	01c40100 	biceq	r0, r4, r0, lsl #2
    b120:	0001233f 	andeq	r2, r1, pc, lsr r3
    b124:	00a75300 	adceq	r5, r7, r0, lsl #6
    b128:	00a74f00 	adceq	r4, r7, r0, lsl #30
    b12c:	1a931d00 	bne	fe4d2534 <__StackTop+0xc63d2534>
    b130:	c6010000 	strgt	r0, [r1], -r0
    b134:	00fa1401 	rscseq	r1, sl, r1, lsl #8
    b138:	a77f0000 	ldrbge	r0, [pc, -r0]!
    b13c:	a7730000 	ldrbge	r0, [r3, -r0]!
    b140:	c41c0000 	ldrgt	r0, [ip], #-0
    b144:	01000028 	tsteq	r0, r8, lsr #32
    b148:	071d01c7 	ldreq	r0, [sp, -r7, asr #3]
    b14c:	02000007 	andeq	r0, r0, #7
    b150:	00216891 	mlaeq	r1, r1, r8, r6
    b154:	45000000 	strmi	r0, [r0, #-0]
    b158:	24000019 	strcs	r0, [r0], #-25	; 0xffffffe7
    b15c:	00000000 	andeq	r0, r0, r0
    b160:	00001868 	andeq	r1, r0, r8, ror #16
    b164:	0000151c 	andeq	r1, r0, ip, lsl r5
    b168:	0251011f 	subseq	r0, r1, #-1073741817	; 0xc0000007
    b16c:	011f007d 	tsteq	pc, sp, ror r0	; <UNPREDICTABLE>
    b170:	1f300152 	svcne	0x00300152
    b174:	30015301 	andcc	r5, r1, r1, lsl #6
    b178:	00001e00 	andeq	r1, r0, r0, lsl #28
    b17c:	18680000 	stmdane	r8!, {}^	; <UNPREDICTABLE>
    b180:	011f0000 	tsteq	pc, r0
    b184:	007d0251 	rsbseq	r0, sp, r1, asr r2
    b188:	0352011f 	cmpeq	r2, #-1073741817	; 0xc0000007
    b18c:	1f060091 	svcne	0x00060091
    b190:	30015301 	andcc	r5, r1, r1, lsl #6
    b194:	08220000 	stmdaeq	r2!, {}	; <UNPREDICTABLE>
    b198:	01000027 	tsteq	r0, r7, lsr #32
    b19c:	011101a1 	tsteq	r1, r1, lsr #3
	...
    b1a8:	0000a7cd 	andeq	sl, r0, sp, asr #15
    b1ac:	0015e201 	andseq	lr, r5, r1, lsl #4
    b1b0:	25121b00 	ldrcs	r1, [r2, #-2816]	; 0xfffff500
    b1b4:	a1010000 	mrsge	r0, (UNDEF: 1)
    b1b8:	00b33b01 	adcseq	r3, r3, r1, lsl #22
    b1bc:	a7f10000 	ldrbge	r0, [r1, r0]!
    b1c0:	a7ed0000 	strbge	r0, [sp, r0]!
    b1c4:	a11b0000 	tstge	fp, r0
    b1c8:	01000024 	tsteq	r0, r4, lsr #32
    b1cc:	233901a2 	teqcs	r9, #-2147483608	; 0x80000028
    b1d0:	13000001 	movwne	r0, #1
    b1d4:	0f0000a8 	svceq	0x000000a8
    b1d8:	1b0000a8 	blne	b480 <__HEAP_SIZE+0xa480>
    b1dc:	000026cc 	andeq	r2, r0, ip, asr #13
    b1e0:	3901a301 	stmdbcc	r1, {r0, r8, r9, sp, pc}
    b1e4:	00000106 	andeq	r0, r0, r6, lsl #2
    b1e8:	0000a835 	andeq	sl, r0, r5, lsr r8
    b1ec:	0000a831 	andeq	sl, r0, r1, lsr r8
    b1f0:	0028cd1b 	eoreq	ip, r8, fp, lsl sp
    b1f4:	01a40100 			; <UNDEFINED> instruction: 0x01a40100
    b1f8:	00009c35 	andeq	r9, r0, r5, lsr ip
    b1fc:	00a85700 	adceq	r5, r8, r0, lsl #14
    b200:	00a85300 	adceq	r5, r8, r0, lsl #6
    b204:	24b52a00 	ldrtcs	r2, [r5], #2560	; 0xa00
    b208:	a5010000 	strge	r0, [r1, #-0]
    b20c:	05d34001 	ldrbeq	r4, [r3, #1]
    b210:	91020000 	mrsls	r0, (UNDEF: 2)
    b214:	26702a00 	ldrbtcs	r2, [r0], -r0, lsl #20
    b218:	a6010000 	strge	r0, [r1], -r0
    b21c:	06583201 	ldrbeq	r3, [r8], -r1, lsl #4
    b220:	91020000 	mrsls	r0, (UNDEF: 2)
    b224:	00002104 	andeq	r2, r0, r4, lsl #2
    b228:	0a650000 	beq	194b230 <__RAM_SIZE+0x184b230>
    b22c:	001e0000 	andseq	r0, lr, r0
    b230:	54000000 	strpl	r0, [r0], #-0
    b234:	1f000019 	svcne	0x00000019
    b238:	74025001 	strvc	r5, [r2], #-1
    b23c:	1a000004 	bne	b254 <__HEAP_SIZE+0xa254>
    b240:	00262801 	eoreq	r2, r6, r1, lsl #16
    b244:	01720100 	cmneq	r2, r0, lsl #2
    b248:	05540117 	ldrbeq	r0, [r4, #-279]	; 0xfffffee9
	...
    b254:	a8750000 	ldmdage	r5!, {}^	; <UNPREDICTABLE>
    b258:	c0010000 	andgt	r0, r1, r0
    b25c:	1b000016 	blne	b2bc <__HEAP_SIZE+0xa2bc>
    b260:	00002512 	andeq	r2, r0, r2, lsl r5
    b264:	3e017201 	cdpcc	2, 0, cr7, cr1, cr1, {0}
    b268:	000000b3 	strheq	r0, [r0], -r3
    b26c:	0000a8b1 			; <UNDEFINED> instruction: 0x0000a8b1
    b270:	0000a8ad 	andeq	sl, r0, sp, lsr #17
    b274:	0024a11b 	eoreq	sl, r4, fp, lsl r1
    b278:	01730100 	cmneq	r3, r0, lsl #2
    b27c:	0001233c 	andeq	r2, r1, ip, lsr r3
    b280:	00a8d600 	adceq	sp, r8, r0, lsl #12
    b284:	00a8d200 	adceq	sp, r8, r0, lsl #4
    b288:	26cc1b00 	strbcs	r1, [ip], r0, lsl #22
    b28c:	74010000 	strvc	r0, [r1], #-0
    b290:	01063c01 	tsteq	r6, r1, lsl #24
    b294:	a8fb0000 	ldmge	fp!, {}^	; <UNPREDICTABLE>
    b298:	a8f70000 	ldmge	r7!, {}^	; <UNPREDICTABLE>
    b29c:	cd1b0000 	ldcgt	0, cr0, [fp, #-0]
    b2a0:	01000028 	tsteq	r0, r8, lsr #32
    b2a4:	9c380175 	ldflss	f0, [r8], #-468	; 0xfffffe2c
    b2a8:	20000000 	andcs	r0, r0, r0
    b2ac:	1c0000a9 	stcne	0, cr0, [r0], {169}	; 0xa9
    b2b0:	2a0000a9 	bcs	b55c <__HEAP_SIZE+0xa55c>
    b2b4:	000024b5 			; <UNDEFINED> instruction: 0x000024b5
    b2b8:	43017601 	movwmi	r7, #5633	; 0x1601
    b2bc:	000005d3 	ldrdeq	r0, [r0], -r3
    b2c0:	2a009102 	bcs	2f6d0 <__HEAP_SIZE+0x2e6d0>
    b2c4:	000029ea 	andeq	r2, r0, sl, ror #19
    b2c8:	3b017701 	blcc	68ed4 <__HEAP_SIZE+0x67ed4>
    b2cc:	00001170 	andeq	r1, r0, r0, ror r1
    b2d0:	1d049102 	stfned	f1, [r4, #-8]
    b2d4:	00002670 	andeq	r2, r0, r0, ror r6
    b2d8:	17017901 	strne	r7, [r1, -r1, lsl #18]
    b2dc:	00000658 	andeq	r0, r0, r8, asr r6
    b2e0:	0000a943 	andeq	sl, r0, r3, asr #18
    b2e4:	0000a941 	andeq	sl, r0, r1, asr #18
    b2e8:	0000001e 	andeq	r0, r0, lr, lsl r0
    b2ec:	00153900 	andseq	r3, r5, r0, lsl #18
    b2f0:	50011f00 	andpl	r1, r1, r0, lsl #30
    b2f4:	5001f303 	andpl	pc, r1, r3, lsl #6
    b2f8:	0351011f 	cmpeq	r1, #-1073741817	; 0xc0000007
    b2fc:	1f5101f3 	svcne	0x005101f3
    b300:	f3035201 	vhsub.u8	d5, d3, d1
    b304:	011f5201 	tsteq	pc, r1, lsl #4
    b308:	01f30353 	mvnseq	r0, r3, asr r3
    b30c:	7d021f53 	stcvc	15, cr1, [r2, #-332]	; 0xfffffeb4
    b310:	00750200 	rsbseq	r0, r5, r0, lsl #4
    b314:	047d021f 	ldrbteq	r0, [sp], #-543	; 0xfffffde1
    b318:	00007402 	andeq	r7, r0, r2, lsl #8
    b31c:	97011a00 	strls	r1, [r1, -r0, lsl #20]
    b320:	01000027 	tsteq	r0, r7, lsr #32
    b324:	01170150 	tsteq	r7, r0, asr r1
    b328:	00000554 	andeq	r0, r0, r4, asr r5
	...
    b334:	0000a956 	andeq	sl, r0, r6, asr r9
    b338:	00179f01 	andseq	r9, r7, r1, lsl #30
    b33c:	25121b00 	ldrcs	r1, [r2, #-2816]	; 0xfffff500
    b340:	50010000 	andpl	r0, r1, r0
    b344:	00b33801 	adcseq	r3, r3, r1, lsl #16
    b348:	a9920000 	ldmibge	r2, {}	; <UNPREDICTABLE>
    b34c:	a98e0000 	stmibge	lr, {}	; <UNPREDICTABLE>
    b350:	a11b0000 	tstge	fp, r0
    b354:	01000024 	tsteq	r0, r4, lsr #32
    b358:	23360151 	teqcs	r6, #1073741844	; 0x40000014
    b35c:	b4000001 	strlt	r0, [r0], #-1
    b360:	b00000a9 	andlt	r0, r0, r9, lsr #1
    b364:	1b0000a9 	blne	b610 <__HEAP_SIZE+0xa610>
    b368:	000026cc 	andeq	r2, r0, ip, asr #13
    b36c:	36015201 	strcc	r5, [r1], -r1, lsl #4
    b370:	00000106 	andeq	r0, r0, r6, lsl #2
    b374:	0000a9d6 	ldrdeq	sl, [r0], -r6
    b378:	0000a9d2 	ldrdeq	sl, [r0], -r2
    b37c:	0028cd1b 	eoreq	ip, r8, fp, lsl sp
    b380:	01530100 	cmpeq	r3, r0, lsl #2
    b384:	00009c32 	andeq	r9, r0, r2, lsr ip
    b388:	00a9f800 	adceq	pc, r9, r0, lsl #16
    b38c:	00a9f400 	adceq	pc, r9, r0, lsl #8
    b390:	24b52a00 	ldrtcs	r2, [r5], #2560	; 0xa00
    b394:	54010000 	strpl	r0, [r1], #-0
    b398:	05d33d01 	ldrbeq	r3, [r3, #3329]	; 0xd01
    b39c:	91020000 	mrsls	r0, (UNDEF: 2)
    b3a0:	26701d00 	ldrbtcs	r1, [r0], -r0, lsl #26
    b3a4:	56010000 	strpl	r0, [r1], -r0
    b3a8:	06581701 	ldrbeq	r1, [r8], -r1, lsl #14
    b3ac:	aa1a0000 	bge	68b3b4 <__RAM_SIZE+0x58b3b4>
    b3b0:	aa160000 	bge	58b3b8 <__RAM_SIZE+0x48b3b8>
    b3b4:	00240000 	eoreq	r0, r4, r0
    b3b8:	63000000 	movwvs	r0, #0
    b3bc:	6d000019 	stcvs	0, cr0, [r0, #-100]	; 0xffffff9c
    b3c0:	1f000017 	svcne	0x00000017
    b3c4:	08025001 	stmdaeq	r2, {r0, ip, lr}
    b3c8:	001e0028 	andseq	r0, lr, r8, lsr #32
    b3cc:	39000000 	stmdbcc	r0, {}	; <UNPREDICTABLE>
    b3d0:	1f000015 	svcne	0x00000015
    b3d4:	74025001 	strvc	r5, [r2], #-1
    b3d8:	51011f00 	tstpl	r1, r0, lsl #30
    b3dc:	1f007802 	svcne	0x00007802
    b3e0:	77025201 	strvc	r5, [r2, -r1, lsl #4]
    b3e4:	53011f00 	movwpl	r1, #7936	; 0x1f00
    b3e8:	1f007502 	svcne	0x00007502
    b3ec:	03007d02 	movweq	r7, #3330	; 0xd02
    b3f0:	1f060091 	svcne	0x00060091
    b3f4:	02047d02 	andeq	r7, r4, #2, 26	; 0x80
    b3f8:	00000076 	andeq	r0, r0, r6, ror r0
    b3fc:	177d012c 	ldrbne	r0, [sp, -ip, lsr #2]!
    b400:	ed010000 	stc	0, cr0, [r1, #-0]
    b404:	00fa0110 	rscseq	r0, sl, r0, lsl r1
    b408:	32b80000 	adcscc	r0, r8, #0
    b40c:	33141000 	tstcc	r4, #0
    b410:	aa381000 	bge	e0f418 <__RAM_SIZE+0xd0f418>
    b414:	62010000 	andvs	r0, r1, #0
    b418:	2d000018 	stccs	0, cr0, [r0, #-96]	; 0xffffffa0
    b41c:	00001a93 	muleq	r0, r3, sl
    b420:	fa14ef01 	blx	54702c <__RAM_SIZE+0x44702c>
    b424:	76000000 	strvc	r0, [r0], -r0
    b428:	700000aa 	andvc	r0, r0, sl, lsr #1
    b42c:	230000aa 	movwcs	r0, #170	; 0xaa
    b430:	100032c6 	andne	r3, r0, r6, asr #5
    b434:	100032f8 	strdne	r3, [r0], -r8
    b438:	00001858 	andeq	r1, r0, r8, asr r8
    b43c:	001f5b1c 	andseq	r5, pc, ip, lsl fp	; <UNPREDICTABLE>
    b440:	01220100 			; <UNDEFINED> instruction: 0x01220100
    b444:	00186224 	andseq	r6, r8, r4, lsr #4
    b448:	6c910200 	lfmvs	f0, 4, [r1], {0}
    b44c:	001bc01c 	andseq	ip, fp, ip, lsl r0
    b450:	01230100 			; <UNDEFINED> instruction: 0x01230100
    b454:	00053623 	andeq	r3, r5, r3, lsr #12
    b458:	70910200 	addsvc	r0, r1, r0, lsl #4
    b45c:	0021231c 	eoreq	r2, r1, ip, lsl r3
    b460:	01240100 			; <UNDEFINED> instruction: 0x01240100
    b464:	0000292c 	andeq	r2, r0, ip, lsr #18
    b468:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    b46c:	0032d624 	eorseq	sp, r2, r4, lsr #12
    b470:	00197110 	andseq	r7, r9, r0, lsl r1
    b474:	00182f00 	andseq	r2, r8, r0, lsl #30
    b478:	50011f00 	andpl	r1, r1, r0, lsl #30
    b47c:	1f6c9102 	svcne	0x006c9102
    b480:	91025101 	tstls	r2, r1, lsl #2
    b484:	52011f70 	andpl	r1, r1, #112, 30	; 0x1c0
    b488:	00749102 	rsbseq	r9, r4, r2, lsl #2
    b48c:	0032ee1e 	eorseq	lr, r2, lr, lsl lr
    b490:	00198010 	andseq	r8, r9, r0, lsl r0
    b494:	50011f00 	andpl	r1, r1, r0, lsl #30
    b498:	32410305 	subcc	r0, r1, #335544320	; 0x14000000
    b49c:	011f1000 	tsteq	pc, r0
    b4a0:	d4030551 	strle	r0, [r3], #-1361	; 0xfffffaaf
    b4a4:	1f10005d 	svcne	0x0010005d
    b4a8:	74025301 	strvc	r5, [r2], #-769	; 0xfffffcff
    b4ac:	7d021f00 	stcvc	15, cr1, [r2, #-0]
    b4b0:	00340100 	eorseq	r0, r4, r0, lsl #2
    b4b4:	32c02100 	sbccc	r2, r0, #0, 2
    b4b8:	0a651000 	beq	194f4c0 <__RAM_SIZE+0x184f4c0>
    b4bc:	07000000 	streq	r0, [r0, -r0]
    b4c0:	0002dc04 	andeq	sp, r2, r4, lsl #24
    b4c4:	01012e00 	tsteq	r1, r0, lsl #28
    b4c8:	00000e6c 	andeq	r0, r0, ip, ror #28
    b4cc:	00000e6c 	andeq	r0, r0, ip, ror #28
    b4d0:	0c02ae0a 	stceq	14, cr10, [r2], {10}
    b4d4:	cb01012e 	blgt	4b994 <__HEAP_SIZE+0x4a994>
    b4d8:	cb00000b 	blgt	b50c <__HEAP_SIZE+0xa50c>
    b4dc:	0a00000b 	beq	b510 <__HEAP_SIZE+0xa510>
    b4e0:	2f0c0551 	svccs	0x000c0551
    b4e4:	0c4d0101 	stfeqe	f0, [sp], {1}
    b4e8:	0c4d0000 	mareq	acc0, r0, sp
    b4ec:	71060000 	mrsvc	r0, (UNDEF: 6)
    b4f0:	01012f0d 	tsteq	r1, sp, lsl #30
    b4f4:	00000abd 			; <UNDEFINED> instruction: 0x00000abd
    b4f8:	00000abd 			; <UNDEFINED> instruction: 0x00000abd
    b4fc:	2e0d7206 	cdpcs	2, 0, cr7, cr13, cr6, {0}
    b500:	127c0101 	rsbsne	r0, ip, #1073741824	; 0x40000000
    b504:	127c0000 	rsbsne	r0, ip, #0
    b508:	4f0a0000 	svcmi	0x000a0000
    b50c:	012e1306 			; <UNDEFINED> instruction: 0x012e1306
    b510:	000a1501 	andeq	r1, sl, r1, lsl #10
    b514:	000a1500 	andeq	r1, sl, r0, lsl #10
    b518:	01b90800 			; <UNDEFINED> instruction: 0x01b90800
    b51c:	01012e06 	tsteq	r1, r6, lsl #28
    b520:	00000b31 	andeq	r0, r0, r1, lsr fp
    b524:	00000b31 	andeq	r0, r0, r1, lsr fp
    b528:	0c03910a 	stfeqd	f1, [r3], {10}
    b52c:	9601012e 	strls	r0, [r1], -lr, lsr #2
    b530:	9600000a 	strls	r0, [r0], -sl
    b534:	0800000a 	stmdaeq	r0, {r1, r3}
    b538:	2f0d01f7 	svccs	0x000d01f7
    b53c:	123b0101 	eorsne	r0, fp, #1073741824	; 0x40000000
    b540:	123b0000 	eorsne	r0, fp, #0
    b544:	b80c0000 	stmdalt	ip, {}	; <UNPREDICTABLE>
    b548:	01012e06 	tsteq	r1, r6, lsl #28
    b54c:	00000ab1 			; <UNDEFINED> instruction: 0x00000ab1
    b550:	00000ab1 			; <UNDEFINED> instruction: 0x00000ab1
    b554:	0601d108 	streq	sp, [r1], -r8, lsl #2
    b558:	0b01012e 	bleq	4ba18 <__HEAP_SIZE+0x4aa18>
    b55c:	0b00001d 	bleq	b5d8 <__HEAP_SIZE+0xa5d8>
    b560:	0900001d 	stmdbeq	r0, {r0, r2, r3, r4}
    b564:	2e0c06a4 	cfmadd32cs	mvax5, mvfx0, mvfx12, mvfx4
    b568:	0d960101 	ldfeqs	f0, [r6, #4]
    b56c:	0d960000 	ldceq	0, cr0, [r6]
    b570:	5b090000 	blpl	24b578 <__RAM_SIZE+0x14b578>
    b574:	012e0606 			; <UNDEFINED> instruction: 0x012e0606
    b578:	0011ad01 	andseq	sl, r1, r1, lsl #26
    b57c:	0011ad00 	andseq	sl, r1, r0, lsl #26
    b580:	06f60a00 	ldrbteq	r0, [r6], r0, lsl #20
    b584:	01012e06 	tsteq	r1, r6, lsl #28
    b588:	000011f1 	strdeq	r1, [r0], -r1	; <UNPREDICTABLE>
    b58c:	000011f1 	strdeq	r1, [r0], -r1	; <UNPREDICTABLE>
    b590:	0c069309 	stceq	3, cr9, [r6], {9}
    b594:	f801012f 			; <UNDEFINED> instruction: 0xf801012f
    b598:	f800000a 			; <UNDEFINED> instruction: 0xf800000a
    b59c:	0600000a 	streq	r0, [r0], -sl
    b5a0:	012e0d6f 			; <UNDEFINED> instruction: 0x012e0d6f
    b5a4:	00157901 	andseq	r7, r5, r1, lsl #18
    b5a8:	00157900 	andseq	r7, r5, r0, lsl #18
    b5ac:	0e140900 	vnmlseq.f16	s0, s8, s0	; <UNPREDICTABLE>
    b5b0:	01012e0c 	tsteq	r1, ip, lsl #28
    b5b4:	000009db 	ldrdeq	r0, [r0], -fp
    b5b8:	000009db 	ldrdeq	r0, [r0], -fp
    b5bc:	0601c408 	streq	ip, [r1], -r8, lsl #8
    b5c0:	7201012f 	andvc	r0, r1, #-1073741813	; 0xc000000b
    b5c4:	7200000d 	andvc	r0, r0, #13
    b5c8:	0c00000d 	stceq	0, cr0, [r0], {13}
    b5cc:	012e08b5 			; <UNDEFINED> instruction: 0x012e08b5
    b5d0:	0017e601 	andseq	lr, r7, r1, lsl #12
    b5d4:	0017e600 	andseq	lr, r7, r0, lsl #12
    b5d8:	05750b00 	ldrbeq	r0, [r5, #-2816]!	; 0xfffff500
    b5dc:	01012e0a 	tsteq	r1, sl, lsl #28
    b5e0:	000017bf 			; <UNDEFINED> instruction: 0x000017bf
    b5e4:	000017bf 			; <UNDEFINED> instruction: 0x000017bf
    b5e8:	1201fd09 	andne	pc, r1, #576	; 0x240
    b5ec:	00061500 	andeq	r1, r6, r0, lsl #10
    b5f0:	5c000200 	sfmpl	f0, 4, [r0], {-0}
    b5f4:	04000016 	streq	r0, [r0], #-22	; 0xffffffea
    b5f8:	0000bf01 	andeq	fp, r0, r1, lsl #30
    b5fc:	2b0a0c00 	blcs	28e604 <__RAM_SIZE+0x18e604>
    b600:	01a80000 			; <UNDEFINED> instruction: 0x01a80000
    b604:	0b200000 	bleq	80b60c <__RAM_SIZE+0x70b60c>
	...
    b610:	7d090000 	stcvc	0, cr0, [r9, #-0]
    b614:	e7020000 	str	r0, [r2, -r0]
    b618:	02000004 	andeq	r0, r0, #4
    b61c:	003a17d1 	ldrsbteq	r1, [sl], -r1
    b620:	29030000 	stmdbcs	r3, {}	; <UNPREDICTABLE>
    b624:	04000000 	streq	r0, [r0], #-0
    b628:	021d0704 	andseq	r0, sp, #4, 14	; 0x100000
    b62c:	04050000 	streq	r0, [r5], #-0
    b630:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    b634:	05080400 	streq	r0, [r8, #-1024]	; 0xfffffc00
    b638:	00000255 	andeq	r0, r0, r5, asr r2
    b63c:	49040804 	stmdbmi	r4, {r2, fp}
    b640:	04000002 	streq	r0, [r0], #-2
    b644:	008f0601 	addeq	r0, pc, r1, lsl #12
    b648:	00020000 	andeq	r0, r2, r0
    b64c:	03000000 	movweq	r0, #0
    b650:	0069182b 	rsbeq	r1, r9, fp, lsr #16
    b654:	01040000 	mrseq	r0, (UNDEF: 4)
    b658:	00008d08 	andeq	r8, r0, r8, lsl #26
    b65c:	05020400 	streq	r0, [r2, #-1024]	; 0xfffffc00
    b660:	000002a5 	andeq	r0, r0, r5, lsr #5
    b664:	ac070204 	sfmge	f0, 4, [r7], {4}
    b668:	04000000 	streq	r0, [r0], #-0
    b66c:	025a0504 	subseq	r0, sl, #4, 10	; 0x1000000
    b670:	7d020000 	stcvc	0, cr0, [r2, #-0]
    b674:	03000003 	movweq	r0, #3
    b678:	0091194f 	addseq	r1, r1, pc, asr #18
    b67c:	04040000 	streq	r0, [r4], #-0
    b680:	00021807 	andeq	r1, r2, r7, lsl #16
    b684:	07080400 	streq	r0, [r8, -r0, lsl #8]
    b688:	00000213 	andeq	r0, r0, r3, lsl r2
    b68c:	01040406 	tsteq	r4, r6, lsl #8
    b690:	00009608 	andeq	r9, r0, r8, lsl #12
    b694:	00020200 	andeq	r0, r2, r0, lsl #4
    b698:	18040000 	stmdane	r4, {}	; <UNPREDICTABLE>
    b69c:	00005d13 	andeq	r5, r0, r3, lsl sp
    b6a0:	037f0200 	cmneq	pc, #0, 4
    b6a4:	30040000 	andcc	r0, r4, r0
    b6a8:	00008514 	andeq	r8, r0, r4, lsl r5
    b6ac:	099a0200 	ldmibeq	sl, {r9}
    b6b0:	51050000 	mrspl	r0, (UNDEF: 5)
    b6b4:	0000b41a 	andeq	fp, r0, sl, lsl r4
    b6b8:	a8040700 	stmdage	r4, {r8, r9, sl}
    b6bc:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    b6c0:	00002a42 	andeq	r2, r0, r2, asr #20
    b6c4:	1094061c 	addsne	r0, r4, ip, lsl r6
    b6c8:	00000149 	andeq	r0, r0, r9, asr #2
    b6cc:	002bef09 	eoreq	lr, fp, r9, lsl #30
    b6d0:	0c960600 	ldceq	6, cr0, [r6], {0}
    b6d4:	00000029 	andeq	r0, r0, r9, lsr #32
    b6d8:	09002302 	stmdbeq	r0, {r1, r8, r9, sp}
    b6dc:	00002c3b 	andeq	r2, r0, fp, lsr ip
    b6e0:	290c9706 	stmdbcs	ip, {r1, r2, r8, r9, sl, ip, pc}
    b6e4:	02000000 	andeq	r0, r0, #0
    b6e8:	ea090423 	b	24c77c <__RAM_SIZE+0x14c77c>
    b6ec:	0600002a 	streq	r0, [r0], -sl, lsr #32
    b6f0:	00290c98 	mlaeq	r9, r8, ip, r0
    b6f4:	23020000 	movwcs	r0, #8192	; 0x2000
    b6f8:	2a990908 	bcs	fe64db20 <__StackTop+0xc654db20>
    b6fc:	99060000 	stmdbls	r6, {}	; <UNPREDICTABLE>
    b700:	0000290c 	andeq	r2, r0, ip, lsl #18
    b704:	0c230200 	sfmeq	f0, 4, [r3], #-0
    b708:	002a4d09 	eoreq	r4, sl, r9, lsl #26
    b70c:	0c9a0600 	ldceq	6, cr0, [sl], {0}
    b710:	00000029 	andeq	r0, r0, r9, lsr #32
    b714:	09102302 	ldmdbeq	r0, {r1, r8, r9, sp}
    b718:	00002bd0 	ldrdeq	r2, [r0], -r0
    b71c:	290c9b06 	stmdbcs	ip, {r1, r2, r8, r9, fp, ip, pc}
    b720:	02000000 	andeq	r0, r0, #0
    b724:	85091423 	strhi	r1, [r9, #-1059]	; 0xfffffbdd
    b728:	0600002c 	streq	r0, [r0], -ip, lsr #32
    b72c:	00290c9c 	mlaeq	r9, ip, ip, r0
    b730:	23020000 	movwcs	r0, #8192	; 0x2000
    b734:	6c020018 	stcvs	0, cr0, [r2], {24}
    b738:	0600002a 	streq	r0, [r0], -sl, lsr #32
    b73c:	00d2039d 	smullseq	r0, r2, sp, r3
    b740:	a80a0000 	stmdage	sl, {}	; <UNPREDICTABLE>
    b744:	66000000 	strvs	r0, [r0], -r0
    b748:	0b000001 	bleq	b754 <__HEAP_SIZE+0xa754>
    b74c:	0000003a 	andeq	r0, r0, sl, lsr r0
    b750:	0c007fff 	stceq	15, cr7, [r0], {255}	; 0xff
    b754:	00000206 	andeq	r0, r0, r6, lsl #4
    b758:	55145d01 	ldrpl	r5, [r4, #-3329]	; 0xfffff2ff
    b75c:	01000001 	tsteq	r0, r1
    b760:	2ace0801 	bcs	ff38d76c <__StackTop+0xc728d76c>
    b764:	01080000 	mrseq	r0, (UNDEF: 8)
    b768:	01a01064 	rrxeq	r1, r4
    b76c:	78090000 	stmdavc	r9, {}	; <UNPREDICTABLE>
    b770:	0100002a 	tsteq	r0, sl, lsr #32
    b774:	01a01b66 	roreq	r1, r6, #22
    b778:	23020000 	movwcs	r0, #8192	; 0x2000
    b77c:	2c9e0900 			; <UNDEFINED> instruction: 0x2c9e0900
    b780:	67010000 	strvs	r0, [r1, -r0]
    b784:	0000290c 	andeq	r2, r0, ip, lsl #18
    b788:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    b78c:	74040700 	strvc	r0, [r4], #-1792	; 0xfffff900
    b790:	02000001 	andeq	r0, r0, #1
    b794:	00002bc4 	andeq	r2, r0, r4, asr #23
    b798:	74036801 	strvc	r6, [r3], #-2049	; 0xfffff7ff
    b79c:	0d000001 	stceq	0, cr0, [r0, #-4]
    b7a0:	00002c0a 	andeq	r2, r0, sl, lsl #24
    b7a4:	35159e01 	ldrcc	r9, [r5, #-3585]	; 0xfffff1ff
    b7a8:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    b7ac:	002ca90e 	eoreq	sl, ip, lr, lsl #18
    b7b0:	24a10100 	strtcs	r0, [r1], #256	; 0x100
    b7b4:	000001a6 	andeq	r0, r0, r6, lsr #3
    b7b8:	8d000305 	stchi	3, cr0, [r0, #-20]	; 0xffffffec
    b7bc:	ad0e3800 	stcge	8, cr3, [lr, #-0]
    b7c0:	0100002a 	tsteq	r0, sl, lsr #32
    b7c4:	01e326a2 	mvneq	r2, r2, lsr #13
    b7c8:	03050000 	movweq	r0, #20480	; 0x5000
    b7cc:	38008cec 	stmdacc	r0, {r2, r3, r5, r6, r7, sl, fp, pc}
    b7d0:	01a60407 			; <UNDEFINED> instruction: 0x01a60407
    b7d4:	270e0000 	strcs	r0, [lr, -r0]
    b7d8:	0100002c 	tsteq	r0, ip, lsr #32
    b7dc:	00291fa6 	eoreq	r1, r9, r6, lsr #31
    b7e0:	03050000 	movweq	r0, #20480	; 0x5000
    b7e4:	38008cf0 	stmdacc	r0, {r4, r5, r6, r7, sl, fp, pc}
    b7e8:	002a4d0e 	eoreq	r4, sl, lr, lsl #26
    b7ec:	1fa70100 	svcne	0x00a70100
    b7f0:	00000029 	andeq	r0, r0, r9, lsr #32
    b7f4:	8cf40305 	ldclhi	3, cr0, [r4], #20
    b7f8:	d00e3800 	andle	r3, lr, r0, lsl #16
    b7fc:	0100002b 	tsteq	r0, fp, lsr #32
    b800:	00291fa8 	eoreq	r1, r9, r8, lsr #31
    b804:	03050000 	movweq	r0, #20480	; 0x5000
    b808:	38008cf8 	stmdacc	r0, {r3, r4, r5, r6, r7, sl, fp, pc}
    b80c:	002c850e 	eoreq	r8, ip, lr, lsl #10
    b810:	1fa90100 	svcne	0x00a90100
    b814:	00000029 	andeq	r0, r0, r9, lsr #32
    b818:	8cfc0305 	ldclhi	3, cr0, [ip], #20
    b81c:	010f3800 	tsteq	pc, r0, lsl #16
    b820:	00002b87 	andeq	r2, r0, r7, lsl #23
    b824:	06026901 	streq	r6, [r2], -r1, lsl #18
    b828:	00000001 	andeq	r0, r0, r1
    b82c:	00000000 	andeq	r0, r0, r0
    b830:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    b834:	f0011001 			; <UNDEFINED> instruction: 0xf0011001
    b838:	0100002c 	tsteq	r0, ip, lsr #32
    b83c:	01060230 	tsteq	r6, r0, lsr r2
	...
    b848:	0000aaa2 	andeq	sl, r0, r2, lsr #21
    b84c:	0002f201 	andeq	pc, r2, r1, lsl #4
    b850:	2a411100 	bcs	104fc58 <__RAM_SIZE+0xf4fc58>
    b854:	30010000 	andcc	r0, r1, r0
    b858:	02f22702 	rscseq	r2, r2, #524288	; 0x80000
    b85c:	aac60000 	bge	ff18b864 <__StackTop+0xc708b864>
    b860:	aac20000 	bge	ff08b868 <__StackTop+0xc6f8b868>
    b864:	88120000 	ldmdahi	r2, {}	; <UNPREDICTABLE>
    b868:	0100002a 	tsteq	r0, sl, lsr #32
    b86c:	e3130232 	tst	r3, #536870915	; 0x20000003
    b870:	e8000001 	stmda	r0, {r0}
    b874:	e40000aa 	str	r0, [r0], #-170	; 0xffffff56
    b878:	120000aa 	andne	r0, r0, #170	; 0xaa
    b87c:	00002cb0 			; <UNDEFINED> instruction: 0x00002cb0
    b880:	0c023301 	stceq	3, cr3, [r2], {1}
    b884:	00000029 	andeq	r0, r0, r9, lsr #32
    b888:	0000ab0a 	andeq	sl, r0, sl, lsl #22
    b88c:	0000ab06 	andeq	sl, r0, r6, lsl #22
    b890:	002b9b12 	eoreq	r9, fp, r2, lsl fp
    b894:	02330100 	eorseq	r0, r3, #0, 2
    b898:	00002919 	andeq	r2, r0, r9, lsl r9
    b89c:	00ab2d00 	adceq	r2, fp, r0, lsl #26
    b8a0:	00ab2900 	adceq	r2, fp, r0, lsl #18
    b8a4:	2a901200 	bcs	fe4100ac <__StackTop+0xc63100ac>
    b8a8:	33010000 	movwcc	r0, #4096	; 0x1000
    b8ac:	00292702 	eoreq	r2, r9, r2, lsl #14
    b8b0:	ab500000 	blge	140b8b8 <__RAM_SIZE+0x130b8b8>
    b8b4:	ab4c0000 	blge	130b8bc <__RAM_SIZE+0x120b8bc>
    b8b8:	00130000 	andseq	r0, r3, r0
    b8bc:	d1000000 	mrsle	r0, (UNDEF: 0)
    b8c0:	13000005 	movwne	r0, #5
    b8c4:	00000000 	andeq	r0, r0, r0
    b8c8:	000005e0 	andeq	r0, r0, r0, ror #11
    b8cc:	00000013 	andeq	r0, r0, r3, lsl r0
    b8d0:	0005ef00 	andeq	lr, r5, r0, lsl #30
    b8d4:	00001300 	andeq	r1, r0, r0, lsl #6
    b8d8:	05fd0000 	ldrbeq	r0, [sp, #0]!
    b8dc:	07000000 	streq	r0, [r0, -r0]
    b8e0:	00014904 	andeq	r4, r1, r4, lsl #18
    b8e4:	2ab31400 	bcs	fecd08ec <__StackTop+0xc6bd08ec>
    b8e8:	ec010000 	stc	0, cr0, [r1], {-0}
    b8ec:	6c010d01 	stcvs	13, cr0, [r1], {1}
    b8f0:	d0100033 	andsle	r0, r0, r3, lsr r0
    b8f4:	70100033 	andsvc	r0, r0, r3, lsr r0
    b8f8:	010000ab 	smlatbeq	r0, fp, r0, r0
    b8fc:	00000353 	andeq	r0, r0, r3, asr r3
    b900:	002c6611 	eoreq	r6, ip, r1, lsl r6
    b904:	01ec0100 	mvneq	r0, r0, lsl #2
    b908:	0001e337 	andeq	lr, r1, r7, lsr r3
    b90c:	00abbc00 	adceq	fp, fp, r0, lsl #24
    b910:	00abb400 	adceq	fp, fp, r0, lsl #8
    b914:	0a4a1200 	beq	129011c <__RAM_SIZE+0x119011c>
    b918:	ee010000 	cdp	0, 0, cr0, cr1, cr0, {0}
    b91c:	01e31301 	mvneq	r1, r1, lsl #6
    b920:	abf90000 	blge	ffe4b928 <__StackTop+0xc7d4b928>
    b924:	abf30000 	blge	ffccb92c <__StackTop+0xc7bcb92c>
    b928:	70150000 	andsvc	r0, r5, r0
    b92c:	01006375 	tsteq	r0, r5, ror r3
    b930:	cc0f01ef 	stfgts	f0, [pc], {239}	; 0xef
    b934:	2f000000 	svccs	0x00000000
    b938:	270000ac 	strcs	r0, [r0, -ip, lsr #1]
    b93c:	000000ac 	andeq	r0, r0, ip, lsr #1
    b940:	002c5a16 	eoreq	r5, ip, r6, lsl sl
    b944:	01bc0100 			; <UNDEFINED> instruction: 0x01bc0100
    b948:	3314010d 	tstcc	r4, #1073741827	; 0x40000003
    b94c:	336c1000 	cmncc	ip, #0
    b950:	7d021000 	stcvc	0, cr1, [r2, #-0]
    b954:	03c20100 	biceq	r0, r2, #0, 2
    b958:	bd120000 	ldclt	0, cr0, [r2, #-0]
    b95c:	0100002c 	tsteq	r0, ip, lsr #32
    b960:	e31301be 	tst	r3, #-2147483601	; 0x8000002f
    b964:	65000001 	strvs	r0, [r0, #-1]
    b968:	630000ac 	movwvs	r0, #172	; 0xac
    b96c:	120000ac 	andne	r0, r0, #172	; 0xac
    b970:	00002adb 	ldrdeq	r2, [r0], -fp
    b974:	1b01bf01 	blne	7b580 <__HEAP_SIZE+0x7a580>
    b978:	000000b4 	strheq	r0, [r0], -r4
    b97c:	0000ac7c 	andeq	sl, r0, ip, ror ip
    b980:	0000ac78 	andeq	sl, r0, r8, ror ip
    b984:	002b3e12 	eoreq	r3, fp, r2, lsl lr
    b988:	01bf0100 			; <UNDEFINED> instruction: 0x01bf0100
    b98c:	0000b42b 	andeq	fp, r0, fp, lsr #8
    b990:	00ac9e00 	adceq	r9, ip, r0, lsl #28
    b994:	00ac9a00 	adceq	r9, ip, r0, lsl #20
    b998:	2c761200 	lfmcs	f1, 2, [r6], #-0
    b99c:	c0010000 	andgt	r0, r1, r0
    b9a0:	00290c01 	eoreq	r0, r9, r1, lsl #24
    b9a4:	acc30000 	stclge	0, cr0, [r3], {0}
    b9a8:	acbd0000 	ldcge	0, cr0, [sp]
    b9ac:	17000000 	strne	r0, [r0, -r0]
    b9b0:	002c1a01 	eoreq	r1, ip, r1, lsl #20
    b9b4:	01a90100 			; <UNDEFINED> instruction: 0x01a90100
    b9b8:	009f0108 	addseq	r0, pc, r8, lsl #2
	...
    b9c4:	acf20000 	ldclge	0, cr0, [r2]
    b9c8:	50010000 	andpl	r0, r1, r0
    b9cc:	11000004 	tstne	r0, r4
    b9d0:	00002cb8 			; <UNDEFINED> instruction: 0x00002cb8
    b9d4:	1d01a901 	vstrne.16	s20, [r1, #-2]	; <UNPREDICTABLE>
    b9d8:	00000029 	andeq	r0, r0, r9, lsr #32
    b9dc:	0000ad1a 	andeq	sl, r0, sl, lsl sp
    b9e0:	0000ad12 	andeq	sl, r0, r2, lsl sp
    b9e4:	002b9e11 	eoreq	r9, fp, r1, lsl lr
    b9e8:	01aa0100 			; <UNDEFINED> instruction: 0x01aa0100
    b9ec:	0000291d 	andeq	r2, r0, sp, lsl r9
    b9f0:	00ad5700 	adceq	r5, sp, r0, lsl #14
    b9f4:	00ad5100 	adceq	r5, sp, r0, lsl #2
    b9f8:	76701500 	ldrbtvc	r1, [r0], -r0, lsl #10
    b9fc:	01ac0100 			; <UNDEFINED> instruction: 0x01ac0100
    ba00:	00009f0c 	andeq	r9, r0, ip, lsl #30
    ba04:	00ad8b00 	adceq	r8, sp, r0, lsl #22
    ba08:	00ad8300 	adceq	r8, sp, r0, lsl #6
    ba0c:	00001800 	andeq	r1, r0, r0, lsl #16
    ba10:	051e0000 	ldreq	r0, [lr, #-0]
    ba14:	04340000 	ldrteq	r0, [r4], #-0
    ba18:	01190000 	tsteq	r9, r0
    ba1c:	00740250 	rsbseq	r0, r4, r0, asr r2
    ba20:	00001a00 	andeq	r1, r0, r0, lsl #20
    ba24:	060b0000 	streq	r0, [fp], -r0
    ba28:	01190000 	tsteq	r9, r0
    ba2c:	00750250 	rsbseq	r0, r5, r0, asr r2
    ba30:	01510119 	cmpeq	r1, r9, lsl r1
    ba34:	52011930 	andpl	r1, r1, #48, 18	; 0xc0000
    ba38:	00007402 	andeq	r7, r0, r2, lsl #8
    ba3c:	da010f00 	ble	4f644 <__HEAP_SIZE+0x4e644>
    ba40:	0100002c 	tsteq	r0, ip, lsr #32
    ba44:	010601a3 	smlatbeq	r6, r3, r1, r0
	...
    ba50:	01007d02 	tsteq	r0, r2, lsl #26
    ba54:	2ba4011b 	blcs	fe90bec8 <__StackTop+0xc680bec8>
    ba58:	9d010000 	stcls	0, cr0, [r1, #-0]
    ba5c:	29010801 	stmdbcs	r1, {r0, fp}
	...
    ba68:	02000000 	andeq	r0, r0, #0
    ba6c:	1b01007d 	blne	4bc68 <__HEAP_SIZE+0x4ac68>
    ba70:	002b5a01 	eoreq	r5, fp, r1, lsl #20
    ba74:	01970100 	orrseq	r0, r7, r0, lsl #2
    ba78:	00290108 	eoreq	r0, r9, r8, lsl #2
	...
    ba84:	7d020000 	stcvc	0, cr0, [r2, #-0]
    ba88:	01100100 	tsteq	r0, r0, lsl #2
    ba8c:	0000123b 	andeq	r1, r0, fp, lsr r2
    ba90:	06015c01 	streq	r5, [r1], -r1, lsl #24
    ba94:	0034a401 	eorseq	sl, r4, r1, lsl #8
    ba98:	0034f410 	eorseq	pc, r4, r0, lsl r4	; <UNPREDICTABLE>
    ba9c:	00adc110 	adceq	ip, sp, r0, lsl r1
    baa0:	051e0100 	ldreq	r0, [lr, #-256]	; 0xffffff00
    baa4:	701c0000 	andsvc	r0, ip, r0
    baa8:	5c010076 	stcpl	0, cr0, [r1], {118}	; 0x76
    baac:	009f1801 	addseq	r1, pc, r1, lsl #16
    bab0:	adf70000 	ldclge	0, cr0, [r7]
    bab4:	aded0000 	stclge	0, cr0, [sp]
    bab8:	70150000 	andsvc	r0, r5, r0
    babc:	01006375 	tsteq	r0, r5, ror r3
    bac0:	cc0f015e 	stfgts	f0, [pc], {94}	; 0x5e
    bac4:	3c000000 	stccc	0, cr0, [r0], {-0}
    bac8:	360000ae 	strcc	r0, [r0], -lr, lsr #1
    bacc:	120000ae 	andne	r0, r0, #174	; 0xae
    bad0:	00002d02 	andeq	r2, r0, r2, lsl #26
    bad4:	13015f01 	movwne	r5, #7937	; 0x1f01
    bad8:	000001e3 	andeq	r0, r0, r3, ror #3
    badc:	0000ae67 	andeq	sl, r0, r7, ror #28
    bae0:	0000ae65 	andeq	sl, r0, r5, ror #28
    bae4:	0034ca13 	eorseq	ip, r4, r3, lsl sl
    bae8:	0005d110 	andeq	sp, r5, r0, lsl r1
    baec:	34dc1800 	ldrbcc	r1, [ip], #2048	; 0x800
    baf0:	02f81000 	rscseq	r1, r8, #0
    baf4:	05140000 	ldreq	r0, [r4, #-0]
    baf8:	01190000 	tsteq	r9, r0
    bafc:	00750250 	rsbseq	r0, r5, r0, asr r2
    bb00:	34e81300 	strbtcc	r1, [r8], #768	; 0x300
    bb04:	05e01000 	strbeq	r1, [r0, #0]!
    bb08:	1d000000 	stcne	0, cr0, [r0, #-0]
    bb0c:	000d7201 	andeq	r7, sp, r1, lsl #4
    bb10:	08ad0100 	stmiaeq	sp!, {r8}
    bb14:	00009f01 	andeq	r9, r0, r1, lsl #30
    bb18:	0033d000 	eorseq	sp, r3, r0
    bb1c:	0034a410 	eorseq	sl, r4, r0, lsl r4
    bb20:	00ae7a10 	adceq	r7, lr, r0, lsl sl
    bb24:	05d10100 	ldrbeq	r0, [r1, #256]	; 0x100
    bb28:	ce1e0000 	cdpgt	0, 1, cr0, cr14, cr0, {0}
    bb2c:	0100002c 	tsteq	r0, ip, lsr #32
    bb30:	00291dad 	eoreq	r1, r9, sp, lsr #27
    bb34:	aea60000 	cdpge	0, 10, cr0, cr6, cr0, {0}
    bb38:	ae9a0000 	cdpge	0, 9, cr0, cr10, cr0, {0}
    bb3c:	881f0000 	ldmdahi	pc, {}	; <UNPREDICTABLE>
    bb40:	0100002a 	tsteq	r0, sl, lsr #32
    bb44:	01e313af 	mvneq	r1, pc, lsr #7
    bb48:	aef80000 	cdpge	0, 15, cr0, cr8, cr0, {0}
    bb4c:	aef20000 	cdpge	0, 15, cr0, cr2, cr0, {0}
    bb50:	311f0000 	tstcc	pc, r0
    bb54:	0100002a 	tsteq	r0, sl, lsr #32
    bb58:	01e313b0 	strheq	r1, [r3, #48]!	; 0x30
    bb5c:	af290000 	svcge	0x00290000
    bb60:	af210000 	svcge	0x00210000
    bb64:	4b1f0000 	blmi	7cbb6c <__RAM_SIZE+0x6cbb6c>
    bb68:	0100002b 	tsteq	r0, fp, lsr #32
    bb6c:	01e313b1 	strheq	r1, [r3, #49]!	; 0x31
    bb70:	af640000 	svcge	0x00640000
    bb74:	af620000 	svcge	0x00620000
    bb78:	7b1f0000 	blvc	7cbb80 <__RAM_SIZE+0x6cbb80>
    bb7c:	01000026 	tsteq	r0, r6, lsr #32
    bb80:	009f0cb2 			; <UNDEFINED> instruction: 0x009f0cb2
    bb84:	af7d0000 	svcge	0x007d0000
    bb88:	af770000 	svcge	0x00770000
    bb8c:	6f1f0000 	svcvs	0x001f0000
    bb90:	0100002b 	tsteq	r0, fp, lsr #32
    bb94:	00290cb3 	strhteq	r0, [r9], -r3
    bb98:	afac0000 	svcge	0x00ac0000
    bb9c:	afa80000 	svcge	0x00a80000
    bba0:	f8130000 			; <UNDEFINED> instruction: 0xf8130000
    bba4:	d1100033 	tstle	r0, r3, lsr r0
    bba8:	13000005 	movwne	r0, #5
    bbac:	1000341c 	andne	r3, r0, ip, lsl r4
    bbb0:	00000353 	andeq	r0, r0, r3, asr r3
    bbb4:	00347c13 	eorseq	r7, r4, r3, lsl ip
    bbb8:	0005e010 	andeq	lr, r5, r0, lsl r0
    bbbc:	01200000 			; <UNDEFINED> instruction: 0x01200000
    bbc0:	000d9601 	andeq	r9, sp, r1, lsl #12
    bbc4:	000d9600 	andeq	r9, sp, r0, lsl #12
    bbc8:	065b0700 	ldrbeq	r0, [fp], -r0, lsl #14
    bbcc:	01012006 	tsteq	r1, r6
    bbd0:	000011f1 	strdeq	r1, [r0], -r1	; <UNPREDICTABLE>
    bbd4:	000011f1 	strdeq	r1, [r0], -r1	; <UNPREDICTABLE>
    bbd8:	0c069307 	stceq	3, cr9, [r6], {7}
    bbdc:	4d010121 	stfmis	f0, [r1, #-132]	; 0xffffff7c
    bbe0:	4d00000c 	stcmi	0, cr0, [r0, #-48]	; 0xffffffd0
    bbe4:	0500000c 	streq	r0, [r0, #-12]
    bbe8:	01210d71 			; <UNDEFINED> instruction: 0x01210d71
    bbec:	000abd01 	andeq	fp, sl, r1, lsl #26
    bbf0:	000abd00 	andeq	fp, sl, r0, lsl #26
    bbf4:	0d720500 	cfldr64eq	mvdx0, [r2, #-0]
    bbf8:	a1010122 	tstge	r1, r2, lsr #2
    bbfc:	97000001 	strls	r0, [r0, -r1]
    bc00:	08000001 	stmdaeq	r0, {r0}
    bc04:	05630000 	strbeq	r0, [r3, #-0]!
    bc08:	00020000 	andeq	r0, r2, r0
    bc0c:	000018ba 			; <UNDEFINED> instruction: 0x000018ba
    bc10:	00bf0104 	adcseq	r0, pc, r4, lsl #2
    bc14:	7a0c0000 	bvc	30bc1c <__RAM_SIZE+0x20bc1c>
    bc18:	a800002d 	stmdage	r0, {r0, r2, r3, r5}
    bc1c:	78000001 	stmdavc	r0, {r0}
    bc20:	0000000b 	andeq	r0, r0, fp
    bc24:	00000000 	andeq	r0, r0, r0
    bc28:	5a000000 	bpl	bc30 <__HEAP_SIZE+0xac30>
    bc2c:	02000084 	andeq	r0, r0, #132	; 0x84
    bc30:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
    bc34:	04030074 	streq	r0, [r3], #-116	; 0xffffff8c
    bc38:	00021d07 	andeq	r1, r2, r7, lsl #26
    bc3c:	05080300 	streq	r0, [r8, #-768]	; 0xfffffd00
    bc40:	00000255 	andeq	r0, r0, r5, asr r2
    bc44:	49040803 	stmdbmi	r4, {r0, r1, fp}
    bc48:	03000002 	movweq	r0, #2
    bc4c:	008f0601 	addeq	r0, pc, r1, lsl #12
    bc50:	00040000 	andeq	r0, r4, r0
    bc54:	02000000 	andeq	r0, r0, #0
    bc58:	0058182b 	subseq	r1, r8, fp, lsr #16
    bc5c:	01030000 	mrseq	r0, (UNDEF: 3)
    bc60:	00008d08 	andeq	r8, r0, r8, lsl #26
    bc64:	05020300 	streq	r0, [r2, #-768]	; 0xfffffd00
    bc68:	000002a5 	andeq	r0, r0, r5, lsr #5
    bc6c:	ac070203 	sfmge	f0, 4, [r7], {3}
    bc70:	03000000 	movweq	r0, #0
    bc74:	025a0504 	subseq	r0, sl, #4, 10	; 0x1000000
    bc78:	7d040000 	stcvc	0, cr0, [r4, #-0]
    bc7c:	02000003 	andeq	r0, r0, #3
    bc80:	0080194f 	addeq	r1, r0, pc, asr #18
    bc84:	04030000 	streq	r0, [r3], #-0
    bc88:	00021807 	andeq	r1, r2, r7, lsl #16
    bc8c:	07080300 	streq	r0, [r8, -r0, lsl #6]
    bc90:	00000213 	andeq	r0, r0, r3, lsl r2
    bc94:	00000204 	andeq	r0, r0, r4, lsl #4
    bc98:	13180300 	tstne	r8, #0, 6
    bc9c:	0000004c 	andeq	r0, r0, ip, asr #32
    bca0:	00037f04 	andeq	r7, r3, r4, lsl #30
    bca4:	14300300 	ldrtne	r0, [r0], #-768	; 0xfffffd00
    bca8:	00000074 	andeq	r0, r0, r4, ror r0
    bcac:	00009a05 	andeq	r9, r0, r5, lsl #20
    bcb0:	1cb20400 	cfldrsne	mvf0, [r2]
    bcb4:	24040000 	strcs	r0, [r4], #-0
    bcb8:	0000b711 	andeq	fp, r0, r1, lsl r7
    bcbc:	bd040600 	stclt	6, cr0, [r4, #-0]
    bcc0:	07000000 	streq	r0, [r0, -r0]
    bcc4:	0000c901 	andeq	ip, r0, r1, lsl #18
    bcc8:	00c90800 	sbceq	r0, r9, r0, lsl #16
    bccc:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    bcd0:	15d90404 	ldrbne	r0, [r9, #1028]	; 0x404
    bcd4:	49050000 	stmdbmi	r5, {}	; <UNPREDICTABLE>
    bcd8:	00009a1a 	andeq	r9, r0, sl, lsl sl
    bcdc:	0a3f0400 	beq	fccce4 <__RAM_SIZE+0xeccce4>
    bce0:	4a050000 	bmi	14bce8 <__RAM_SIZE+0x4bce8>
    bce4:	00006d1a 	andeq	r6, r0, sl, lsl sp
    bce8:	099a0400 	ldmibeq	sl, {sl}
    bcec:	51050000 	mrspl	r0, (UNDEF: 5)
    bcf0:	00009a1a 	andeq	r9, r0, sl, lsl sl
    bcf4:	08010300 	stmdaeq	r1, {r8, r9}
    bcf8:	00000096 	muleq	r0, r6, r0
    bcfc:	00cb0406 	sbceq	r0, fp, r6, lsl #8
    bd00:	070a0000 	streq	r0, [sl, -r0]
    bd04:	00005801 	andeq	r5, r0, r1, lsl #16
    bd08:	01b60700 			; <UNDEFINED> instruction: 0x01b60700
    bd0c:	0000011d 	andeq	r0, r0, sp, lsl r1
    bd10:	0018540b 	andseq	r5, r8, fp, lsl #8
    bd14:	3e0b0000 	cdpcc	0, 0, cr0, cr11, cr0, {0}
    bd18:	01000020 	tsteq	r0, r0, lsr #32
    bd1c:	0020550b 	eoreq	r5, r0, fp, lsl #10
    bd20:	04000200 	streq	r0, [r0], #-512	; 0xfffffe00
    bd24:	00002ef3 	strdeq	r2, [r0], -r3
    bd28:	2e125601 	cfmsub32cs	mvax0, mvfx5, mvfx2, mvfx1
    bd2c:	0c000001 	stceq	0, cr0, [r0], {1}
    bd30:	0000011d 	andeq	r0, r0, sp, lsl r1
    bd34:	01340406 	teqeq	r4, r6, lsl #8
    bd38:	010d0000 	mrseq	r0, (UNDEF: 13)
    bd3c:	002d090e 	eoreq	r0, sp, lr, lsl #18
    bd40:	02000100 	andeq	r0, r0, #0, 2
    bd44:	0000a62a 	andeq	sl, r0, sl, lsr #12
    bd48:	10030500 	andne	r0, r3, r0, lsl #10
    bd4c:	0e380000 	cdpeq	0, 3, cr0, cr8, cr0, {0}
    bd50:	00002f1b 	andeq	r2, r0, fp, lsl pc
    bd54:	25021d01 	strcs	r1, [r2, #-3329]	; 0xfffff2ff
    bd58:	0000009a 	muleq	r0, sl, r0
    bd5c:	8d0c0305 	stchi	3, cr0, [ip, #-20]	; 0xffffffec
    bd60:	5d0e3800 	stcpl	8, cr3, [lr, #-0]
    bd64:	0100002e 	tsteq	r0, lr, lsr #32
    bd68:	9a250223 	bls	94c5fc <__RAM_SIZE+0x84c5fc>
    bd6c:	05000000 	streq	r0, [r0, #-0]
    bd70:	008d1003 	addeq	r1, sp, r3
    bd74:	2df30e38 	ldclcs	14, cr0, [r3, #224]!	; 0xe0
    bd78:	29010000 	stmdbcs	r1, {}	; <UNPREDICTABLE>
    bd7c:	009a2502 	addseq	r2, sl, r2, lsl #10
    bd80:	03050000 	movweq	r0, #20480	; 0x5000
    bd84:	38008d08 	stmdacc	r0, {r3, r8, sl, fp, pc}
    bd88:	2eae010f 	fdvcse	f0, f6, #10.0
    bd8c:	af010000 	svcge	0x00010000
    bd90:	d7010c07 	strle	r0, [r1, -r7, lsl #24]
	...
    bd9c:	02000000 	andeq	r0, r0, #0
    bda0:	c501007d 	strgt	r0, [r1, #-125]	; 0xffffff83
    bda4:	10000001 	andne	r0, r0, r1
    bda8:	00002ec5 	andeq	r2, r0, r5, asr #29
    bdac:	0e07b101 	mvfeqs	f3, f1
    bdb0:	0000009a 	muleq	r0, sl, r0
    bdb4:	0000afcc 	andeq	sl, r0, ip, asr #31
    bdb8:	0000afca 	andeq	sl, r0, sl, asr #31
    bdbc:	001a9311 	andseq	r9, sl, r1, lsl r3
    bdc0:	07b20100 	ldreq	r0, [r2, r0, lsl #2]!
    bdc4:	0000d710 	andeq	sp, r0, r0, lsl r7
    bdc8:	12000100 	andne	r0, r0, #0, 2
    bdcc:	001f9501 	andseq	r9, pc, r1, lsl #10
    bdd0:	06ee0100 	strbteq	r0, [lr], r0, lsl #2
    bdd4:	00000106 	andeq	r0, r0, r6, lsl #2
    bdd8:	00000000 	andeq	r0, r0, r0
    bddc:	7d020000 	stcvc	0, cr0, [r2, #-0]
    bde0:	01130100 	tsteq	r3, r0, lsl #2
    bde4:	000014d8 	ldrdeq	r1, [r0], -r8
    bde8:	0c065501 	cfstr32eq	mvfx5, [r6], {1}
    bdec:	0000d701 	andeq	sp, r0, r1, lsl #14
    bdf0:	00377400 	eorseq	r7, r7, r0, lsl #8
    bdf4:	0037b410 	eorseq	fp, r7, r0, lsl r4
    bdf8:	00afdf10 	adceq	sp, pc, r0, lsl pc	; <UNPREDICTABLE>
    bdfc:	02340100 	eorseq	r0, r4, #0, 2
    be00:	0f140000 	svceq	0x00140000
    be04:	15000002 	strne	r0, [r0, #-2]
    be08:	00002d44 	andeq	r2, r0, r4, asr #26
    be0c:	21066501 	tstcs	r6, r1, lsl #10
    be10:	0000023a 	andeq	r0, r0, sl, lsr r2
    be14:	379c1600 	ldrcc	r1, [ip, r0, lsl #12]
    be18:	040b1000 	streq	r1, [fp], #-0
    be1c:	a4160000 	ldrge	r0, [r6], #-0
    be20:	f2100037 	vqadd.s16	d0, d0, d23
    be24:	16000004 	strne	r0, [r0], -r4
    be28:	100037a8 	andne	r3, r0, r8, lsr #15
    be2c:	00000500 	andeq	r0, r0, r0, lsl #10
    be30:	0037ac16 	eorseq	sl, r7, r6, lsl ip
    be34:	0003d610 	andeq	sp, r3, r0, lsl r6
    be38:	04060000 	streq	r0, [r6], #-0
    be3c:	00000129 	andeq	r0, r0, r9, lsr #2
    be40:	0002340c 	andeq	r3, r2, ip, lsl #8
    be44:	0a011300 	beq	50a4c <__HEAP_SIZE+0x4fa4c>
    be48:	0100001c 	tsteq	r0, ip, lsl r0
    be4c:	01130602 	tsteq	r3, r2, lsl #12
    be50:	000000f6 	strdeq	r0, [r0], -r6
    be54:	100036e4 	andne	r3, r0, r4, ror #13
    be58:	10003774 	andne	r3, r0, r4, ror r7
    be5c:	0000afff 	strdeq	sl, [r0], -pc	; <UNPREDICTABLE>
    be60:	0002ae01 	andeq	sl, r2, r1, lsl #28
    be64:	23901700 	orrscs	r1, r0, #0, 14
    be68:	02010000 	andeq	r0, r1, #0
    be6c:	00f63806 	rscseq	r3, r6, r6, lsl #16
    be70:	b0530000 	subslt	r0, r3, r0
    be74:	b02b0000 	eorlt	r0, fp, r0
    be78:	50180000 	andspl	r0, r8, r0
    be7c:	0100002e 	tsteq	r0, lr, lsr #32
    be80:	f6380603 			; <UNDEFINED> instruction: 0xf6380603
    be84:	01000000 	mrseq	r0, (UNDEF: 0)
    be88:	2ea71751 	mcrcs	7, 5, r1, cr7, cr1, {2}
    be8c:	04010000 	streq	r0, [r1], #-0
    be90:	00ab3906 	adceq	r3, fp, r6, lsl #18
    be94:	b1630000 	cmnlt	r3, r0
    be98:	b15d0000 	cmplt	sp, r0
    be9c:	fe170000 	cdp2	0, 1, cr0, cr7, cr0, {0}
    bea0:	0100001e 	tsteq	r0, lr, lsl r0
    bea4:	c9310605 	ldmdbgt	r1!, {r0, r2, r9, sl}
    bea8:	95000000 	strls	r0, [r0, #-0]
    beac:	8f0000b1 	svchi	0x000000b1
    beb0:	000000b1 	strheq	r0, [r0], -r1
    beb4:	2d520119 	ldfcse	f0, [r2, #-100]	; 0xffffff9c
    beb8:	09010000 	stmdbeq	r1, {}	; <UNPREDICTABLE>
    bebc:	ce010604 	cfmadd32gt	mvax0, mvfx0, mvfx1, mvfx4
    bec0:	e2100036 	ands	r0, r0, #54	; 0x36
    bec4:	c0100036 	andsgt	r0, r0, r6, lsr r0
    bec8:	010000b1 	strheq	r0, [r0, -r1]
    becc:	00000313 	andeq	r0, r0, r3, lsl r3
    bed0:	002ddd17 	eoreq	sp, sp, r7, lsl sp
    bed4:	04090100 	streq	r0, [r9], #-256	; 0xffffff00
    bed8:	00031324 	andeq	r1, r3, r4, lsr #6
    bedc:	00b1e800 	adcseq	lr, r1, r0, lsl #16
    bee0:	00b1e000 	adcseq	lr, r1, r0
    bee4:	2d231000 	stccs	0, cr1, [r3, #-0]
    bee8:	19010000 	stmdbne	r1, {}	; <UNPREDICTABLE>
    beec:	009a0e04 	addseq	r0, sl, r4, lsl #28
    bef0:	b2280000 	eorlt	r0, r8, #0
    bef4:	b2220000 	eorlt	r0, r2, #0
    bef8:	28100000 	ldmdacs	r0, {}	; <UNPREDICTABLE>
    befc:	0100002d 	tsteq	r0, sp, lsr #32
    bf00:	8e0d0422 	cdphi	4, 0, cr0, cr13, cr2, {1}
    bf04:	57000000 	strpl	r0, [r0, -r0]
    bf08:	530000b2 	movwpl	r0, #178	; 0xb2
    bf0c:	160000b2 			; <UNDEFINED> instruction: 0x160000b2
    bf10:	100036e0 	andne	r3, r0, r0, ror #13
    bf14:	0000050f 	andeq	r0, r0, pc, lsl #10
    bf18:	9a040600 	bls	10d720 <__RAM_SIZE+0xd720>
    bf1c:	19000000 	stmdbne	r0, {}	; <UNPREDICTABLE>
    bf20:	002efd01 	eoreq	pc, lr, r1, lsl #26
    bf24:	03f20100 	mvnseq	r0, #0, 2
    bf28:	36ac0106 	strtcc	r0, [ip], r6, lsl #2
    bf2c:	36ce1000 	strbcc	r1, [lr], r0
    bf30:	b2751000 	rsbslt	r1, r5, #0
    bf34:	6d010000 	stcvs	0, cr0, [r1, #-0]
    bf38:	10000003 	andne	r0, r0, r3
    bf3c:	00002f33 	andeq	r2, r0, r3, lsr pc
    bf40:	0e03f401 	cdpeq	4, 0, cr15, cr3, cr1, {0}
    bf44:	0000009a 	muleq	r0, sl, r0
    bf48:	0000b299 	muleq	r0, r9, r2
    bf4c:	0000b295 	muleq	r0, r5, r2
    bf50:	0036b216 	eorseq	fp, r6, r6, lsl r2
    bf54:	00051d10 	andeq	r1, r5, r0, lsl sp
    bf58:	36b81600 	ldrtcc	r1, [r8], r0, lsl #12
    bf5c:	052b1000 	streq	r1, [fp, #-0]!
    bf60:	cc1a0000 	ldcgt	0, cr0, [sl], {-0}
    bf64:	3a100036 	bcc	40c044 <__RAM_SIZE+0x30c044>
    bf68:	1b000005 	blne	bf84 <__HEAP_SIZE+0xaf84>
    bf6c:	74025001 	strvc	r5, [r2], #-1
    bf70:	19000000 	stmdbne	r0, {}	; <UNPREDICTABLE>
    bf74:	000abd01 	andeq	fp, sl, r1, lsl #26
    bf78:	03e60100 	mvneq	r0, #0, 2
    bf7c:	36900106 	ldrcc	r0, [r0], r6, lsl #2
    bf80:	36ac1000 	strtcc	r1, [ip], r0
    bf84:	b2b71000 	adcslt	r1, r7, #0
    bf88:	99010000 	stmdbls	r1, {}	; <UNPREDICTABLE>
    bf8c:	1a000003 	bne	bfa0 <__HEAP_SIZE+0xafa0>
    bf90:	100036a6 	andne	r3, r0, r6, lsr #13
    bf94:	0000053a 	andeq	r0, r0, sl, lsr r5
    bf98:	0150011b 	cmpeq	r0, fp, lsl r1
    bf9c:	19000030 	stmdbne	r0, {r4, r5}
    bfa0:	000c4d01 	andeq	r4, ip, r1, lsl #26
    bfa4:	03da0100 	bicseq	r0, sl, #0, 2
    bfa8:	36740106 	ldrbtcc	r0, [r4], -r6, lsl #2
    bfac:	36901000 	ldrcc	r1, [r0], r0
    bfb0:	b2d71000 	sbcslt	r1, r7, #0
    bfb4:	bf010000 	svclt	0x00010000
    bfb8:	16000003 	strne	r0, [r0], -r3
    bfbc:	1000367a 	andne	r3, r0, sl, ror r6
    bfc0:	0000051d 	andeq	r0, r0, sp, lsl r5
    bfc4:	f8011200 			; <UNDEFINED> instruction: 0xf8011200
    bfc8:	0100000a 	tsteq	r0, sl
    bfcc:	010603ce 	smlabteq	r6, lr, r3, r0
    bfd0:	1000365c 	andne	r3, r0, ip, asr r6
    bfd4:	10003672 	andne	r3, r0, r2, ror r6
    bfd8:	01007d02 	tsteq	r0, r2, lsl #26
    bfdc:	002e7d1c 	eoreq	r7, lr, ip, lsl sp
    bfe0:	03260100 			; <UNDEFINED> instruction: 0x03260100
    bfe4:	34f4010d 	ldrbtcc	r0, [r4], #269	; 0x10d
    bfe8:	350c1000 	strcc	r1, [ip, #-0]
    bfec:	b2f71000 	rscslt	r1, r7, #0
    bff0:	0b010000 	bleq	4bff8 <__HEAP_SIZE+0x4aff8>
    bff4:	0e000004 	cdpeq	0, 0, cr0, cr0, cr4, {0}
    bff8:	00002d1b 	andeq	r2, r0, fp, lsl sp
    bffc:	17032801 	strne	r2, [r3, -r1, lsl #16]
    c000:	000000a6 	andeq	r0, r0, r6, lsr #1
    c004:	16749102 	ldrbtne	r9, [r4], -r2, lsl #2
    c008:	10003500 	andne	r3, r0, r0, lsl #10
    c00c:	0000051d 	andeq	r0, r0, sp, lsl r5
    c010:	8e011200 	cdphi	2, 0, cr1, cr1, cr0, {0}
    c014:	0100002e 	tsteq	r0, lr, lsr #32
    c018:	0120030a 			; <UNDEFINED> instruction: 0x0120030a
    c01c:	10003620 	andne	r3, r0, r0, lsr #12
    c020:	1000365c 	andne	r3, r0, ip, asr r6
    c024:	01007d02 	tsteq	r0, r2, lsl #26
    c028:	21070119 	tstcs	r7, r9, lsl r1
    c02c:	2f010000 	svccs	0x00010000
    c030:	0c012402 	cfstrseq	mvf2, [r1], {2}
    c034:	20100035 	andscs	r0, r0, r5, lsr r0
    c038:	2f100036 	svccs	0x00100036
    c03c:	010000b3 	strheq	r0, [r0, -r3]
    c040:	000004f2 	strdeq	r0, [r0], -r2
    c044:	00164517 	andseq	r4, r6, r7, lsl r5
    c048:	022f0100 	eoreq	r0, pc, #0, 2
    c04c:	0000e34b 	andeq	lr, r0, fp, asr #6
    c050:	00b35900 	adcseq	r5, r3, r0, lsl #18
    c054:	00b34f00 	adcseq	r4, r3, r0, lsl #30
    c058:	2f0d1000 	svccs	0x000d1000
    c05c:	31010000 	mrscc	r0, (UNDEF: 1)
    c060:	009a1202 	addseq	r1, sl, r2, lsl #4
    c064:	b39e0000 	orrslt	r0, lr, #0
    c068:	b39a0000 	orrslt	r0, sl, #0
    c06c:	64100000 	ldrvs	r0, [r0], #-0
    c070:	0100002d 	tsteq	r0, sp, lsr #32
    c074:	9a210231 	bls	84c940 <__RAM_SIZE+0x74c940>
    c078:	c0000000 	andgt	r0, r0, r0
    c07c:	bc0000b3 	stclt	0, cr0, [r0], {179}	; 0xb3
    c080:	100000b3 	strhne	r0, [r0], -r3
    c084:	00002dc0 	andeq	r2, r0, r0, asr #27
    c088:	38023101 	stmdacc	r2, {r0, r8, ip, sp}
    c08c:	0000009a 	muleq	r0, sl, r0
    c090:	0000b3e2 	andeq	fp, r0, r2, ror #7
    c094:	0000b3de 	ldrdeq	fp, [r0], -lr
    c098:	002e0e10 	eoreq	r0, lr, r0, lsl lr
    c09c:	02310100 	eorseq	r0, r1, #0, 2
    c0a0:	00009a56 	andeq	r9, r0, r6, asr sl
    c0a4:	00b40b00 	adcseq	r0, r4, r0, lsl #22
    c0a8:	00b40500 	adcseq	r0, r4, r0, lsl #10
    c0ac:	2e3c1000 	cdpcs	0, 3, cr1, cr12, cr0, {0}
    c0b0:	32010000 	andcc	r0, r1, #0
    c0b4:	00e31402 	rsceq	r1, r3, r2, lsl #8
    c0b8:	b43a0000 	ldrtlt	r0, [sl], #-0
    c0bc:	b4340000 	ldrtlt	r0, [r4], #-0
    c0c0:	b21d0000 	andslt	r0, sp, #0
    c0c4:	d6100035 			; <UNDEFINED> instruction: 0xd6100035
    c0c8:	df100035 	svcle	0x00100035
    c0cc:	10000004 	andne	r0, r0, r4
    c0d0:	00002e26 	andeq	r2, r0, r6, lsr #28
    c0d4:	1a02a501 	bne	b54e0 <__HEAP_SIZE+0xb44e0>
    c0d8:	0000009a 	muleq	r0, sl, r0
    c0dc:	0000b467 	andeq	fp, r0, r7, ror #8
    c0e0:	0000b465 	andeq	fp, r0, r5, ror #8
    c0e4:	35261600 	strcc	r1, [r6, #-1536]!	; 0xfffffa00
    c0e8:	05481000 	strbeq	r1, [r8, #-0]
    c0ec:	ee160000 	cdp	0, 1, cr0, cr6, cr0, {0}
    c0f0:	57100035 			; <UNDEFINED> instruction: 0x57100035
    c0f4:	00000005 	andeq	r0, r0, r5
    c0f8:	3401011e 	strcc	r0, [r1], #-286	; 0xfffffee2
    c0fc:	3400002d 	strcc	r0, [r0], #-45	; 0xffffffd3
    c100:	0600002d 	streq	r0, [r0], -sp, lsr #32
    c104:	011f064d 	tsteq	pc, sp, asr #12
    c108:	001e5a01 	andseq	r5, lr, r1, lsl #20
    c10c:	001e5a00 	andseq	r5, lr, r0, lsl #20
    c110:	0df50700 	ldcleq	7, cr0, [r5]
    c114:	01011e1b 	tsteq	r1, fp, lsl lr
    c118:	00002ed8 	ldrdeq	r2, [r0], -r8
    c11c:	00002ed8 	ldrdeq	r2, [r0], -r8
    c120:	1e062a06 	vmlane.f32	s4, s12, s12
    c124:	0ff70101 	svceq	0x00f70101
    c128:	0ff70000 	svceq	0x00f70000
    c12c:	52060000 	andpl	r0, r6, #0
    c130:	01011f0a 	tsteq	r1, sl, lsl #30
    c134:	00001957 	andeq	r1, r0, r7, asr r9
    c138:	00001957 	andeq	r1, r0, r7, asr r9
    c13c:	0c0d9a07 			; <UNDEFINED> instruction: 0x0c0d9a07
    c140:	0301011e 	movweq	r0, #4382	; 0x111e
    c144:	0300000d 	movweq	r0, #13
    c148:	0600000d 	streq	r0, [r0], -sp
    c14c:	011f0657 	tsteq	pc, r7, asr r6	; <UNPREDICTABLE>
    c150:	001a6601 	andseq	r6, sl, r1, lsl #12
    c154:	001a6600 	andseq	r6, sl, r0, lsl #12
    c158:	0e580700 	cdpeq	7, 5, cr0, cr8, cr0, {0}
    c15c:	01011f16 	tsteq	r1, r6, lsl pc
    c160:	0000196a 	andeq	r1, r0, sl, ror #18
    c164:	0000196a 	andeq	r1, r0, sl, ror #18
    c168:	0a0e4607 	beq	39d98c <__RAM_SIZE+0x29d98c>
    c16c:	00017a00 	andeq	r7, r1, r0, lsl #20
    c170:	98000200 	stmdals	r0, {r9}
    c174:	0400001a 	streq	r0, [r0], #-26	; 0xffffffe6
    c178:	0000bf01 	andeq	fp, r0, r1, lsl #30
    c17c:	2f510c00 	svccs	0x00510c00
    c180:	01a80000 			; <UNDEFINED> instruction: 0x01a80000
    c184:	0be00000 	bleq	ff80c18c <__StackTop+0xc770c18c>
	...
    c190:	8a500000 	bhi	140c198 <__RAM_SIZE+0x130c198>
    c194:	01020000 	mrseq	r0, (UNDEF: 2)
    c198:	00008f06 	andeq	r8, r0, r6, lsl #30
    c19c:	08010200 	stmdaeq	r1, {r9}
    c1a0:	0000008d 	andeq	r0, r0, sp, lsl #1
    c1a4:	a5050202 	strge	r0, [r5, #-514]	; 0xfffffdfe
    c1a8:	02000002 	andeq	r0, r0, #2
    c1ac:	00ac0702 	adceq	r0, ip, r2, lsl #14
    c1b0:	04020000 	streq	r0, [r2], #-0
    c1b4:	00025a05 	andeq	r5, r2, r5, lsl #20
    c1b8:	037d0300 	cmneq	sp, #0, 6
    c1bc:	4f020000 	svcmi	0x00020000
    c1c0:	00005819 	andeq	r5, r0, r9, lsl r8
    c1c4:	07040200 	streq	r0, [r4, -r0, lsl #4]
    c1c8:	00000218 	andeq	r0, r0, r8, lsl r2
    c1cc:	55050802 	strpl	r0, [r5, #-2050]	; 0xfffff7fe
    c1d0:	02000002 	andeq	r0, r0, #2
    c1d4:	02130708 	andseq	r0, r3, #8, 14	; 0x200000
    c1d8:	04040000 	streq	r0, [r4], #-0
    c1dc:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    c1e0:	07040200 	streq	r0, [r4, -r0, lsl #4]
    c1e4:	0000021d 	andeq	r0, r0, sp, lsl r2
    c1e8:	00037f03 	andeq	r7, r3, r3, lsl #30
    c1ec:	14300300 	ldrtne	r0, [r0], #-768	; 0xfffffd00
    c1f0:	0000004c 	andeq	r0, r0, ip, asr #32
    c1f4:	49040802 	stmdbmi	r4, {r1, fp}
    c1f8:	03000002 	movweq	r0, #2
    c1fc:	00000a3f 	andeq	r0, r0, pc, lsr sl
    c200:	451a4a04 	ldrmi	r4, [sl, #-2564]	; 0xfffff5fc
    c204:	05000000 	streq	r0, [r0, #-0]
    c208:	002fa801 	eoreq	sl, pc, r1, lsl #16
    c20c:	01c70100 	biceq	r0, r7, r0, lsl #2
    c210:	386c010a 	stmdacc	ip!, {r1, r3, r8}^
    c214:	387e1000 	ldmdacc	lr!, {ip}^
    c218:	7d021000 	stcvc	0, cr1, [r2, #-0]
    c21c:	01050100 	mrseq	r0, (UNDEF: 21)
    c220:	00002f42 	andeq	r2, r0, r2, asr #30
    c224:	0a016b01 	beq	66e30 <__HEAP_SIZE+0x65e30>
    c228:	00382401 	eorseq	r2, r8, r1, lsl #8
    c22c:	00386810 	eorseq	r6, r8, r0, lsl r8
    c230:	007d0210 	rsbseq	r0, sp, r0, lsl r2
    c234:	03010601 	movweq	r0, #5633	; 0x1601
    c238:	0100000d 	tsteq	r0, sp
    c23c:	160106e8 	strne	r0, [r1], -r8, ror #13
    c240:	24100038 	ldrcs	r0, [r0], #-56	; 0xffffffc8
    c244:	02100038 	andseq	r0, r0, #56	; 0x38
    c248:	f101007d 	setend	le
    c24c:	07000000 	streq	r0, [r0, -r0]
    c250:	00002fc4 	andeq	r2, r0, r4, asr #31
    c254:	7b40e801 	blvc	1046260 <__RAM_SIZE+0xf46260>
    c258:	01000000 	mrseq	r0, (UNDEF: 0)
    c25c:	01080050 	qaddeq	r0, r0, r8
    c260:	00000ff7 	strdeq	r0, [r0], -r7
    c264:	010ad701 	tsteq	sl, r1, lsl #14
    c268:	0000007b 	andeq	r0, r0, fp, ror r0
    c26c:	10003800 	andne	r3, r0, r0, lsl #16
    c270:	10003816 	andne	r3, r0, r6, lsl r8
    c274:	01007d02 	tsteq	r0, r2, lsl #26
    c278:	2d340109 	ldfcss	f0, [r4, #-36]!	; 0xffffffdc
    c27c:	c2010000 	andgt	r0, r1, #0
    c280:	37e00106 	strbcc	r0, [r0, r6, lsl #2]!
    c284:	37fa1000 	ldrbcc	r1, [sl, r0]!
    c288:	7d021000 	stcvc	0, cr1, [r2, #-0]
    c28c:	01090100 	mrseq	r0, (UNDEF: 25)
    c290:	00002fb4 			; <UNDEFINED> instruction: 0x00002fb4
    c294:	0106b301 	tsteq	r6, r1, lsl #6
	...
    c2a0:	01007d02 	tsteq	r0, r2, lsl #26
    c2a4:	2fcb0109 	svccs	0x00cb0109
    c2a8:	a4010000 	strge	r0, [r1], #-0
    c2ac:	00000106 	andeq	r0, r0, r6, lsl #2
    c2b0:	00000000 	andeq	r0, r0, r0
    c2b4:	7d020000 	stcvc	0, cr0, [r2, #-0]
    c2b8:	01080100 	mrseq	r0, (UNDEF: 24)
    c2bc:	00002f9a 	muleq	r0, sl, pc	; <UNPREDICTABLE>
    c2c0:	010c9301 	tsteq	ip, r1, lsl #6
    c2c4:	0000008e 	andeq	r0, r0, lr, lsl #1
	...
    c2d0:	01007d02 	tsteq	r0, r2, lsl #26
    c2d4:	2ed80109 	cdpcs	1, 13, cr0, cr8, cr9, {0}
    c2d8:	79010000 	stmdbvc	r1, {}	; <UNPREDICTABLE>
    c2dc:	37b4010a 	ldrcc	r0, [r4, sl, lsl #2]!
    c2e0:	37da1000 	ldrbcc	r1, [sl, r0]
    c2e4:	7d021000 	stcvc	0, cr1, [r2, #-0]
    c2e8:	22000100 	andcs	r0, r0, #0, 2
    c2ec:	02000000 	andeq	r0, r0, #0
    c2f0:	001b5000 	andseq	r5, fp, r0
    c2f4:	8f010400 	svchi	0x00010400
    c2f8:	a400008c 	strge	r0, [r0], #-140	; 0xffffff74
    c2fc:	14100038 	ldrne	r0, [r0], #-56	; 0xffffffc8
    c300:	db100039 	blle	40c3ec <__RAM_SIZE+0x30c3ec>
    c304:	a800002f 	stmdage	r0, {r0, r1, r2, r3, r5}
    c308:	fb000001 	blx	c316 <__HEAP_SIZE+0xb316>
    c30c:	0100002f 	tsteq	r0, pc, lsr #32
    c310:	00002280 	andeq	r2, r0, r0, lsl #5
    c314:	64000200 	strvs	r0, [r0], #-512	; 0xfffffe00
    c318:	0400001b 	streq	r0, [r0], #-27	; 0xffffffe5
    c31c:	008d1501 	addeq	r1, sp, r1, lsl #10
    c320:	00391400 	eorseq	r1, r9, r0, lsl #8
    c324:	00395c10 	eorseq	r5, r9, r0, lsl ip
    c328:	00300910 	eorseq	r0, r0, r0, lsl r9
    c32c:	0001a800 	andeq	sl, r1, r0, lsl #16
    c330:	002ffb00 	eoreq	pc, pc, r0, lsl #22
    c334:	Address 0x0000c334 is out of bounds.


Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
    __asm volatile ( "mrs %0, ipsr" : "=r" ( ulCurrentInterrupt )::"memory" );
       0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
    if( ulCurrentInterrupt == 0 )
       4:	030b130e 	movweq	r1, #45838	; 0xb30e
        xReturn = pdFALSE;
       8:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
}
       c:	52011106 	andpl	r1, r1, #-2147483647	; 0x80000001
      10:	00061001 	andeq	r1, r6, r1
      14:	00240200 	eoreq	r0, r4, r0, lsl #4
      18:	0b3e0b0b 	bleq	f82c4c <__RAM_SIZE+0xe82c4c>
}
      1c:	00000e03 	andeq	r0, r0, r3, lsl #28
      20:	03001603 	movweq	r1, #1539	; 0x603
      24:	3b0b3a0e 	blcc	2ce864 <__RAM_SIZE+0x1ce864>
      28:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
      2c:	04000013 	streq	r0, [r0], #-19	; 0xffffffed
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
      30:	0b0b0024 	bleq	2c00c8 <__RAM_SIZE+0x1c00c8>
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
      34:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
      38:	0f050000 	svceq	0x00050000
      3c:	000b0b00 	andeq	r0, fp, r0, lsl #22
      40:	00260600 	eoreq	r0, r6, r0, lsl #12
        BaseType_t xReturn = pdFAIL;
      44:	00001349 	andeq	r1, r0, r9, asr #6
    }
      48:	0b000f07 	bleq	3c6c <__HEAP_SIZE+0x2c6c>
                pxBlock = heapPROTECT_BLOCK_POINTER( pxBlock->pxNextFreeBlock );
      4c:	0013490b 	andseq	r4, r3, fp, lsl #18
            while( pxBlock != pxEnd )
      50:	00130800 	andseq	r0, r3, r0, lsl #16
      54:	0c3c0e03 	ldceq	14, cr0, [ip], #-12
                if( pxBlock->xBlockSize > xMaxSize )
      58:	01090000 	mrseq	r0, (UNDEF: 9)
      5c:	01134901 	tsteq	r3, r1, lsl #18
                if( pxBlock->xBlockSize < xMinSize )
      60:	0a000013 	beq	b4 <__STACKSEAL_SIZE+0xb4>
                    xMinSize = pxBlock->xBlockSize;
      64:	13490021 	movtne	r0, #36897	; 0x9021
      68:	0000052f 	andeq	r0, r0, pc, lsr #10
      6c:	0300340b 	movweq	r3, #1035	; 0x40b
      70:	3b0b3a0e 	blcc	2ce8b0 <__RAM_SIZE+0x1ce8b0>
      74:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
      78:	020c3f13 	andeq	r3, ip, #19, 30	; 0x4c
      7c:	0c00000a 	stceq	0, cr0, [r0], {10}
            prvUnlockQueue( pxQueue );
      80:	0c3f012e 	ldfeqs	f0, [pc], #-184	; ffffffd0 <__StackTop+0xc7efffd0>
            ( void ) xTaskResumeAll();
      84:	0b3a0e03 	bleq	e83898 <__RAM_SIZE+0xd83898>
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
      88:	0b390b3b 	bleq	e42d7c <__RAM_SIZE+0xd42d7c>
      8c:	13490c27 	movtne	r0, #39975	; 0x9c27
      90:	01120111 	tsteq	r2, r1, lsl r1
        taskENTER_CRITICAL();
      94:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
            if( uxSemaphoreCount > ( UBaseType_t ) 0 )
      98:	0013010c 	andseq	r0, r3, ip, lsl #2
                if( xTicksToWait == ( TickType_t ) 0 )
      9c:	00340d00 	eorseq	r0, r4, r0, lsl #26
      a0:	0b3a0e03 	bleq	e838b4 <__RAM_SIZE+0xd838b4>
                else if( xEntryTimeSet == pdFALSE )
      a4:	0b390b3b 	bleq	e42d98 <__RAM_SIZE+0xd42d98>
        taskEXIT_CRITICAL();
      a8:	06021349 	streq	r1, [r2], -r9, asr #6
        vTaskSuspendAll();
      ac:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
        prvLockQueue( pxQueue );
      b0:	82890e00 	addhi	r0, r9, #0, 28
      b4:	01110001 	tsteq	r1, r1
      b8:	00001331 	andeq	r1, r0, r1, lsr r3
      bc:	0182890f 	orreq	r8, r2, pc, lsl #18
      c0:	31011101 	tstcc	r1, r1, lsl #2
      c4:	00130113 	andseq	r0, r3, r3, lsl r1
      c8:	828a1000 	addhi	r1, sl, #0
      cc:	0a020001 	beq	800d8 <__HEAP_SIZE+0x7f0d8>
        if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
      d0:	000a4291 	muleq	sl, r1, r2
      d4:	82891100 	addhi	r1, r9, #0, 2
      d8:	01110101 	tsteq	r1, r1, lsl #2
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
      dc:	00001331 	andeq	r1, r0, r1, lsr r3
      e0:	03012e12 	movweq	r2, #7698	; 0x1e12
                    if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
      e4:	3b0b3a0e 	blcc	2ce924 <__RAM_SIZE+0x1ce924>
      e8:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
                vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
      ec:	1201110c 	andne	r1, r1, #12, 2
      f0:	97064001 	strls	r4, [r6, -r1]
                prvUnlockQueue( pxQueue );
      f4:	13010c42 	movwne	r0, #7234	; 0x1c42
      f8:	34130000 	ldrcc	r0, [r3], #-0
                if( xTaskResumeAll() == pdFALSE )
      fc:	3a0e0300 	bcc	380d04 <__RAM_SIZE+0x280d04>
     100:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
                    taskYIELD_WITHIN_API();
     104:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
                    if( xInheritanceOccurred != pdFALSE )
     108:	1400000a 	strne	r0, [r0], #-10
                return errQUEUE_EMPTY;
     10c:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
                        taskENTER_CRITICAL();
     110:	0b3b0b3a 	bleq	ec2e00 <__RAM_SIZE+0xdc2e00>
                            uxHighestWaitingPriority = prvGetDisinheritPriorityAfterTimeout( pxQueue );
     114:	13490b39 	movtne	r0, #39737	; 0x9b39
     118:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
                            vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
     11c:	15000006 	strne	r0, [r0, #-6]
                        taskEXIT_CRITICAL();
     120:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 70 <__STACKSEAL_SIZE+0x70>
     124:	0b3a0e03 	bleq	e83938 <__RAM_SIZE+0xd83938>
     128:	0b390b3b 	bleq	e42e1c <__RAM_SIZE+0xd42e1c>
     12c:	01110c27 	tsteq	r1, r7, lsr #24
     130:	06400112 			; <UNDEFINED> instruction: 0x06400112
     134:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
     138:	16000013 			; <UNDEFINED> instruction: 0x16000013
     13c:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     140:	0c341349 	ldceq	3, cr1, [r4], #-292	; 0xfffffedc
     144:	00000a02 	andeq	r0, r0, r2, lsl #20
     148:	49002117 	stmdbmi	r0, {r0, r1, r2, r4, r8, sp}
     14c:	000b2f13 	andeq	r2, fp, r3, lsl pc
     150:	002e1800 	eoreq	r1, lr, r0, lsl #16
     154:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
     158:	0b3b0b3a 	bleq	ec2e48 <__RAM_SIZE+0xdc2e48>
     15c:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     160:	00000c3c 	andeq	r0, r0, ip, lsr ip
     164:	55010b19 	strpl	r0, [r1, #-2841]	; 0xfffff4e7
     168:	00130106 	andseq	r0, r3, r6, lsl #2
     16c:	00341a00 	eorseq	r1, r4, r0, lsl #20
     170:	0b3a0803 	bleq	e82184 <__RAM_SIZE+0xd82184>
     174:	0b390b3b 	bleq	e42e68 <__RAM_SIZE+0xd42e68>
     178:	06021349 	streq	r1, [r2], -r9, asr #6
     17c:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
     180:	002e1b00 	eoreq	r1, lr, r0, lsl #22
     184:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
     188:	030e4087 	movweq	r4, #57479	; 0xe087
     18c:	3b0b3a0e 	blcc	2ce9cc <__RAM_SIZE+0x1ce9cc>
     190:	000b390b 	andeq	r3, fp, fp, lsl #18
     194:	002e1c00 	eoreq	r1, lr, r0, lsl #24
     198:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
     19c:	030e4087 	movweq	r4, #57479	; 0xe087
     1a0:	3b0b3a0e 	blcc	2ce9e0 <__RAM_SIZE+0x1ce9e0>
     1a4:	1d00000b 	stcne	0, cr0, [r0, #-44]	; 0xffffffd4
     1a8:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; f8 <__STACKSEAL_SIZE+0xf8>
     1ac:	40870c3c 	addmi	r0, r7, ip, lsr ip
     1b0:	3a0e030e 	bcc	380df0 <__RAM_SIZE+0x280df0>
     1b4:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     1b8:	0000000b 	andeq	r0, r0, fp
     1bc:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
     1c0:	030b130e 	movweq	r1, #45838	; 0xb30e
     1c4:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
     1c8:	52011106 	andpl	r1, r1, #-2147483647	; 0x80000001
     1cc:	00061001 	andeq	r1, r6, r1
     1d0:	00240200 	eoreq	r0, r4, r0, lsl #4
     1d4:	0b3e0b0b 	bleq	f82e08 <__RAM_SIZE+0xe82e08>
     1d8:	00000e03 	andeq	r0, r0, r3, lsl #28
     1dc:	03001603 	movweq	r1, #1539	; 0x603
     1e0:	3b0b3a0e 	blcc	2cea20 <__RAM_SIZE+0x1cea20>
     1e4:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     1e8:	04000013 	streq	r0, [r0], #-19	; 0xffffffed
     1ec:	0b0b0024 	bleq	2c0284 <__RAM_SIZE+0x1c0284>
     1f0:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
     1f4:	35050000 	strcc	r0, [r5, #-0]
     1f8:	00134900 	andseq	r4, r3, r0, lsl #18
     1fc:	00260600 	eoreq	r0, r6, r0, lsl #12
     200:	00001349 	andeq	r1, r0, r9, asr #6
     204:	0b011307 	bleq	44e28 <__HEAP_SIZE+0x43e28>
     208:	3b0b3a05 	blcc	2cea24 <__RAM_SIZE+0x1cea24>
     20c:	010b3905 	tsteq	fp, r5, lsl #18
     210:	08000013 	stmdaeq	r0, {r0, r1, r4}
     214:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
     218:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     21c:	13490b39 	movtne	r0, #39737	; 0x9b39
     220:	00000a38 	andeq	r0, r0, r8, lsr sl
     224:	03000d09 	movweq	r0, #3337	; 0xd09
     228:	3b0b3a08 	blcc	2cea50 <__RAM_SIZE+0x1cea50>
     22c:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     230:	000a3813 	andeq	r3, sl, r3, lsl r8
     234:	01010a00 	tsteq	r1, r0, lsl #20
     238:	13011349 	movwne	r1, #4937	; 0x1349
     23c:	210b0000 	mrscs	r0, (UNDEF: 11)
     240:	2f134900 	svccs	0x00134900
     244:	0c00000b 	stceq	0, cr0, [r0], {11}
     248:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
     24c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     250:	13490b39 	movtne	r0, #39737	; 0x9b39
     254:	0f0d0000 	svceq	0x000d0000
     258:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
     25c:	0e000013 	mcreq	0, 0, r0, cr0, cr3, {0}
     260:	0c270015 	stceq	0, cr0, [r7], #-84	; 0xffffffac
     264:	340f0000 	strcc	r0, [pc], #-0	; 26c <__STACKSEAL_SIZE+0x26c>
     268:	3a0e0300 	bcc	380e70 <__RAM_SIZE+0x280e70>
     26c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     270:	3f13490b 	svccc	0x0013490b
     274:	000c3c0c 	andeq	r3, ip, ip, lsl #24
     278:	00211000 	eoreq	r1, r1, r0
     27c:	052f1349 	streq	r1, [pc, #-841]!	; ffffff3b <__StackTop+0xc7efff3b>
     280:	34110000 	ldrcc	r0, [r1], #-0
     284:	3a134700 	bcc	4d1e8c <__RAM_SIZE+0x3d1e8c>
     288:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     28c:	000a020b 	andeq	r0, sl, fp, lsl #4
     290:	002e1200 	eoreq	r1, lr, r0, lsl #4
     294:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
     298:	0b3b0b3a 	bleq	ec2f88 <__RAM_SIZE+0xdc2f88>
     29c:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     2a0:	01120111 	tsteq	r2, r1, lsl r1
     2a4:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
     2a8:	0000000c 	andeq	r0, r0, ip
     2ac:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
     2b0:	030b130e 	movweq	r1, #45838	; 0xb30e
     2b4:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
     2b8:	52011106 	andpl	r1, r1, #-2147483647	; 0x80000001
     2bc:	00061001 	andeq	r1, r6, r1
     2c0:	00240200 	eoreq	r0, r4, r0, lsl #4
     2c4:	0b3e0b0b 	bleq	f82ef8 <__RAM_SIZE+0xe82ef8>
     2c8:	00000e03 	andeq	r0, r0, r3, lsl #28
     2cc:	49002603 	stmdbmi	r0, {r0, r1, r9, sl, sp}
     2d0:	04000013 	streq	r0, [r0], #-19	; 0xffffffed
     2d4:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
     2d8:	0b3b0b3a 	bleq	ec2fc8 <__RAM_SIZE+0xdc2fc8>
     2dc:	13490b39 	movtne	r0, #39737	; 0x9b39
     2e0:	24050000 	strcs	r0, [r5], #-0
     2e4:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     2e8:	0008030b 	andeq	r0, r8, fp, lsl #6
     2ec:	01130600 	tsteq	r3, r0, lsl #12
     2f0:	0b0b0e03 	bleq	2c3b04 <__RAM_SIZE+0x1c3b04>
     2f4:	0b3b0b3a 	bleq	ec2fe4 <__RAM_SIZE+0xdc2fe4>
     2f8:	00001301 	andeq	r1, r0, r1, lsl #6
     2fc:	03000d07 	movweq	r0, #3335	; 0xd07
     300:	3813490e 	ldmdacc	r3, {r1, r2, r3, r8, fp, lr}
     304:	000c340a 	andeq	r3, ip, sl, lsl #8
     308:	000f0800 	andeq	r0, pc, r0, lsl #16
     30c:	00000b0b 	andeq	r0, r0, fp, lsl #22
     310:	0b000f09 	bleq	3f3c <__HEAP_SIZE+0x2f3c>
     314:	0013490b 	andseq	r4, r3, fp, lsl #18
     318:	01150a00 	tsteq	r5, r0, lsl #20
     31c:	13010c27 	movwne	r0, #7207	; 0x1c27
     320:	050b0000 	streq	r0, [fp, #-0]
     324:	00134900 	andseq	r4, r3, r0, lsl #18
     328:	01130c00 	tsteq	r3, r0, lsl #24
     32c:	0b3a0b0b 	bleq	e82f60 <__RAM_SIZE+0xd82f60>
     330:	0b390b3b 	bleq	e43024 <__RAM_SIZE+0xd43024>
     334:	00001301 	andeq	r1, r0, r1, lsl #6
     338:	03000d0d 	movweq	r0, #3341	; 0xd0d
     33c:	3b0b3a08 	blcc	2ceb64 <__RAM_SIZE+0x1ceb64>
     340:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     344:	000a3813 	andeq	r3, sl, r3, lsl r8
     348:	012e0e00 			; <UNDEFINED> instruction: 0x012e0e00
     34c:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
     350:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     354:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     358:	01111349 	tsteq	r1, r9, asr #6
     35c:	06400112 			; <UNDEFINED> instruction: 0x06400112
     360:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
     364:	0f000013 	svceq	0x00000013
     368:	08030005 	stmdaeq	r3, {r0, r2}
     36c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     370:	13490b39 	movtne	r0, #39737	; 0x9b39
     374:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
     378:	10000006 	andne	r0, r0, r6
     37c:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
     380:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     384:	13490b39 	movtne	r0, #39737	; 0x9b39
     388:	00000a02 	andeq	r0, r0, r2, lsl #20
     38c:	00001811 	andeq	r1, r0, r1, lsl r8
     390:	00341200 	eorseq	r1, r4, r0, lsl #4
     394:	0b3a0803 	bleq	e823a8 <__RAM_SIZE+0xd823a8>
     398:	0b39053b 	bleq	e4188c <__RAM_SIZE+0xd4188c>
     39c:	0a021349 	beq	850c8 <__HEAP_SIZE+0x840c8>
     3a0:	34130000 	ldrcc	r0, [r3], #-0
     3a4:	3a0e0300 	bcc	380fac <__RAM_SIZE+0x280fac>
     3a8:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     3ac:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     3b0:	1400000a 	strne	r0, [r0], #-10
     3b4:	08030034 	stmdaeq	r3, {r2, r4, r5}
     3b8:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     3bc:	13490b39 	movtne	r0, #39737	; 0x9b39
     3c0:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
     3c4:	15000006 	strne	r0, [r0, #-6]
     3c8:	01018289 	smlabbeq	r1, r9, r2, r8
     3cc:	13310111 	teqne	r1, #1073741828	; 0x40000004
     3d0:	8a160000 	bhi	5803d8 <__RAM_SIZE+0x4803d8>
     3d4:	02000182 	andeq	r0, r0, #-2147483616	; 0x80000020
     3d8:	0a42910a 	beq	10a4808 <__RAM_SIZE+0xfa4808>
     3dc:	05170000 	ldreq	r0, [r7, #-0]
     3e0:	3a0e0300 	bcc	380fe8 <__RAM_SIZE+0x280fe8>
     3e4:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     3e8:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     3ec:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
     3f0:	01180000 	tsteq	r8, r0
     3f4:	01134901 	tsteq	r3, r1, lsl #18
     3f8:	19000013 	stmdbne	r0, {r0, r1, r4}
     3fc:	13490021 	movtne	r0, #36897	; 0x9021
     400:	00000b2f 	andeq	r0, r0, pc, lsr #22
     404:	03012e1a 	movweq	r2, #7706	; 0x1e1a
     408:	3b0b3a0e 	blcc	2cec48 <__RAM_SIZE+0x1cec48>
     40c:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
     410:	1113490c 	tstne	r3, ip, lsl #18
     414:	40011201 	andmi	r1, r1, r1, lsl #4
     418:	0c429706 	mcrreq	7, 0, r9, r2, cr6
     41c:	00001301 	andeq	r1, r0, r1, lsl #6
     420:	0300051b 	movweq	r0, #1307	; 0x51b
     424:	3b0b3a08 	blcc	2cec4c <__RAM_SIZE+0x1cec4c>
     428:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     42c:	000a0213 	andeq	r0, sl, r3, lsl r2
     430:	00341c00 	eorseq	r1, r4, r0, lsl #24
     434:	0b3a0e03 	bleq	e83c48 <__RAM_SIZE+0xd83c48>
     438:	0b39053b 	bleq	e4192c <__RAM_SIZE+0xd4192c>
     43c:	06021349 	streq	r1, [r2], -r9, asr #6
     440:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
     444:	010b1d00 	tsteq	fp, r0, lsl #26
     448:	01120111 	tsteq	r2, r1, lsl r1
     44c:	00001301 	andeq	r1, r0, r1, lsl #6
     450:	55010b1e 	strpl	r0, [r1, #-2846]	; 0xfffff4e2
     454:	00130106 	andseq	r0, r3, r6, lsl #2
     458:	00341f00 	eorseq	r1, r4, r0, lsl #30
     45c:	0b3a0e03 	bleq	e83c70 <__RAM_SIZE+0xd83c70>
     460:	0b39053b 	bleq	e41954 <__RAM_SIZE+0xd41954>
     464:	00001349 	andeq	r1, r0, r9, asr #6
     468:	01828920 	orreq	r8, r2, r0, lsr #18
     46c:	31011101 	tstcc	r1, r1, lsl #2
     470:	00130113 	andseq	r0, r3, r3, lsl r1
     474:	82892100 	addhi	r2, r9, #0, 2
     478:	01110101 	tsteq	r1, r1, lsl #2
     47c:	00001301 	andeq	r1, r0, r1, lsl #6
     480:	01828922 	orreq	r8, r2, r2, lsr #18
     484:	00011101 	andeq	r1, r1, r1, lsl #2
     488:	011d2300 	tsteq	sp, r0, lsl #6
     48c:	01111331 	tsteq	r1, r1, lsr r3
     490:	0b580112 	bleq	16008e0 <__RAM_SIZE+0x15008e0>
     494:	0b570559 	bleq	15c1a00 <__RAM_SIZE+0x14c1a00>
     498:	00001301 	andeq	r1, r0, r1, lsl #6
     49c:	31000524 	tstcc	r0, r4, lsr #10
     4a0:	b7060213 	smladlt	r6, r3, r2, r0
     4a4:	00000642 	andeq	r0, r0, r2, asr #12
     4a8:	31000525 	tstcc	r0, r5, lsr #10
     4ac:	26000013 			; <UNDEFINED> instruction: 0x26000013
     4b0:	13310034 	teqne	r1, #52	; 0x34
     4b4:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
     4b8:	27000006 	strcs	r0, [r0, -r6]
     4bc:	1331011d 	teqne	r1, #1073741831	; 0x40000007
     4c0:	42b80152 	adcsmi	r0, r8, #-2147483628	; 0x80000014
     4c4:	12011105 	andne	r1, r1, #1073741825	; 0x40000001
     4c8:	590b5801 	stmdbpl	fp, {r0, fp, ip, lr}
     4cc:	010b5705 	tsteq	fp, r5, lsl #14
     4d0:	28000013 	stmdacs	r0, {r0, r1, r4}
     4d4:	01018289 	smlabbeq	r1, r9, r2, r8
     4d8:	42930111 	addsmi	r0, r3, #1073741828	; 0x40000004
     4dc:	0013010a 	andseq	r0, r3, sl, lsl #2
     4e0:	01172900 	tsteq	r7, r0, lsl #18
     4e4:	0b3a0b0b 	bleq	e83118 <__RAM_SIZE+0xd83118>
     4e8:	0b39053b 	bleq	e419dc <__RAM_SIZE+0xd419dc>
     4ec:	00001301 	andeq	r1, r0, r1, lsl #6
     4f0:	03000d2a 	movweq	r0, #3370	; 0xd2a
     4f4:	3b0b3a08 	blcc	2ced1c <__RAM_SIZE+0x1ced1c>
     4f8:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     4fc:	2b000013 	blcs	550 <__STACKSEAL_SIZE+0x550>
     500:	00018289 	andeq	r8, r1, r9, lsl #5
     504:	13310111 	teqne	r1, #1073741828	; 0x40000004
     508:	2e2c0000 	cdpcs	0, 2, cr0, cr12, cr0, {0}
     50c:	3a0e0301 	bcc	381118 <__RAM_SIZE+0x281118>
     510:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     514:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
     518:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
     51c:	97064001 	strls	r4, [r6, -r1]
     520:	13010c42 	movwne	r0, #7234	; 0x1c42
     524:	052d0000 	streq	r0, [sp, #-0]!
     528:	3a080300 	bcc	201130 <__RAM_SIZE+0x101130>
     52c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     530:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     534:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
     538:	052e0000 	streq	r0, [lr, #-0]!
     53c:	3a0e0300 	bcc	381144 <__RAM_SIZE+0x281144>
     540:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     544:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     548:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
     54c:	342f0000 	strtcc	r0, [pc], #-0	; 554 <__STACKSEAL_SIZE+0x554>
     550:	3a0e0300 	bcc	381158 <__RAM_SIZE+0x281158>
     554:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     558:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     55c:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
     560:	34300000 	ldrtcc	r0, [r0], #-0
     564:	3a080300 	bcc	20116c <__RAM_SIZE+0x10116c>
     568:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     56c:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     570:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
     574:	2e310000 	cdpcs	0, 3, cr0, cr1, cr0, {0}
     578:	3a0e0301 	bcc	381184 <__RAM_SIZE+0x281184>
     57c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     580:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
     584:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
     588:	970a4001 	strls	r4, [sl, -r1]
     58c:	13010c42 	movwne	r0, #7234	; 0x1c42
     590:	1d320000 	ldcne	0, cr0, [r2, #-0]
     594:	52133101 	andspl	r3, r3, #1073741824	; 0x40000000
     598:	0542b801 	strbeq	fp, [r2, #-2049]	; 0xfffff7ff
     59c:	01120111 	tsteq	r2, r1, lsl r1
     5a0:	0b590b58 	bleq	1643308 <__RAM_SIZE+0x1543308>
     5a4:	00000b57 	andeq	r0, r0, r7, asr fp
     5a8:	03012e33 	movweq	r2, #7731	; 0x1e33
     5ac:	3b0b3a0e 	blcc	2cedec <__RAM_SIZE+0x1cedec>
     5b0:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
     5b4:	2013490c 	andscs	r4, r3, ip, lsl #18
     5b8:	0013010b 	andseq	r0, r3, fp, lsl #2
     5bc:	00053400 	andeq	r3, r5, r0, lsl #8
     5c0:	0b3a0803 	bleq	e825d4 <__RAM_SIZE+0xd825d4>
     5c4:	0b390b3b 	bleq	e432b8 <__RAM_SIZE+0xd432b8>
     5c8:	00001349 	andeq	r1, r0, r9, asr #6
     5cc:	03000535 	movweq	r0, #1333	; 0x535
     5d0:	3b0b3a0e 	blcc	2cee10 <__RAM_SIZE+0x1cee10>
     5d4:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     5d8:	36000013 			; <UNDEFINED> instruction: 0x36000013
     5dc:	08030034 	stmdaeq	r3, {r2, r4, r5}
     5e0:	0b3b0b3a 	bleq	ec32d0 <__RAM_SIZE+0xdc32d0>
     5e4:	13490b39 	movtne	r0, #39737	; 0x9b39
     5e8:	2e370000 	cdpcs	0, 3, cr0, cr7, cr0, {0}
     5ec:	3a0e0301 	bcc	3811f8 <__RAM_SIZE+0x2811f8>
     5f0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     5f4:	110c270b 	tstne	ip, fp, lsl #14
     5f8:	40011201 	andmi	r1, r1, r1, lsl #4
     5fc:	0c429606 	mcrreq	6, 0, r9, r2, cr6
     600:	00001301 	andeq	r1, r0, r1, lsl #6
     604:	03012e38 	movweq	r2, #7736	; 0x1e38
     608:	3b0b3a0e 	blcc	2cee48 <__RAM_SIZE+0x1cee48>
     60c:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
     610:	1201110c 	andne	r1, r1, #12, 2
     614:	97064001 	strls	r4, [r6, -r1]
     618:	13010c42 	movwne	r0, #7234	; 0x1c42
     61c:	2e390000 	cdpcs	0, 3, cr0, cr9, cr0, {0}
     620:	3a0e0301 	bcc	38122c <__RAM_SIZE+0x28122c>
     624:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     628:	110c270b 	tstne	ip, fp, lsl #14
     62c:	40011201 	andmi	r1, r1, r1, lsl #4
     630:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
     634:	00001301 	andeq	r1, r0, r1, lsl #6
     638:	0300053a 	movweq	r0, #1338	; 0x53a
     63c:	3b0b3a0e 	blcc	2cee7c <__RAM_SIZE+0x1cee7c>
     640:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     644:	000a0213 	andeq	r0, sl, r3, lsl r2
     648:	00053b00 	andeq	r3, r5, r0, lsl #22
     64c:	0b3a0803 	bleq	e82660 <__RAM_SIZE+0xd82660>
     650:	0b390b3b 	bleq	e43344 <__RAM_SIZE+0xd43344>
     654:	0a021349 	beq	85380 <__HEAP_SIZE+0x84380>
     658:	2e3c0000 	cdpcs	0, 3, cr0, cr12, cr0, {0}
     65c:	3c0c3f00 	stccc	15, cr3, [ip], {-0}
     660:	0e40870c 	cdpeq	7, 4, cr8, cr0, cr12, {0}
     664:	00000e03 	andeq	r0, r0, r3, lsl #28
     668:	3f002e3d 	svccc	0x00002e3d
     66c:	870c3c0c 	strhi	r3, [ip, -ip, lsl #24]
     670:	0e030e40 	cdpeq	14, 0, cr0, cr3, cr0, {2}
     674:	0b3b0b3a 	bleq	ec3364 <__RAM_SIZE+0xdc3364>
     678:	00000b39 	andeq	r0, r0, r9, lsr fp
     67c:	01110100 	tsteq	r1, r0, lsl #2
     680:	0b130e25 	bleq	4c3f1c <__RAM_SIZE+0x3c3f1c>
     684:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
     688:	01110655 	tsteq	r1, r5, asr r6
     68c:	06100152 			; <UNDEFINED> instruction: 0x06100152
     690:	24020000 	strcs	r0, [r2], #-0
     694:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     698:	000e030b 	andeq	r0, lr, fp, lsl #6
     69c:	00160300 	andseq	r0, r6, r0, lsl #6
     6a0:	0b3a0e03 	bleq	e83eb4 <__RAM_SIZE+0xd83eb4>
     6a4:	0b390b3b 	bleq	e43398 <__RAM_SIZE+0xd43398>
     6a8:	00001349 	andeq	r1, r0, r9, asr #6
     6ac:	0b002404 	bleq	96c4 <__HEAP_SIZE+0x86c4>
     6b0:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
     6b4:	05000008 	streq	r0, [r0, #-8]
     6b8:	13490026 	movtne	r0, #36902	; 0x9026
     6bc:	0f060000 	svceq	0x00060000
     6c0:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
     6c4:	07000013 	smladeq	r0, r3, r0, r0
     6c8:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 618 <__STACKSEAL_SIZE+0x618>
     6cc:	0b3a0e03 	bleq	e83ee0 <__RAM_SIZE+0xd83ee0>
     6d0:	0b390b3b 	bleq	e433c4 <__RAM_SIZE+0xd433c4>
     6d4:	13490c27 	movtne	r0, #39975	; 0x9c27
     6d8:	01120111 	tsteq	r2, r1, lsl r1
     6dc:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
     6e0:	0013010c 	andseq	r0, r3, ip, lsl #2
     6e4:	00050800 	andeq	r0, r5, r0, lsl #16
     6e8:	0b3a0e03 	bleq	e83efc <__RAM_SIZE+0xd83efc>
     6ec:	0b390b3b 	bleq	e433e0 <__RAM_SIZE+0xd433e0>
     6f0:	06021349 	streq	r1, [r2], -r9, asr #6
     6f4:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
     6f8:	00340900 	eorseq	r0, r4, r0, lsl #18
     6fc:	0b3a0803 	bleq	e82710 <__RAM_SIZE+0xd82710>
     700:	0b390b3b 	bleq	e433f4 <__RAM_SIZE+0xd433f4>
     704:	06021349 	streq	r1, [r2], -r9, asr #6
     708:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
     70c:	82890a00 	addhi	r0, r9, #0, 20
     710:	01110001 	tsteq	r1, r1
     714:	00001331 	andeq	r1, r0, r1, lsr r3
     718:	3f012e0b 	svccc	0x00012e0b
     71c:	3a0e030c 	bcc	381354 <__RAM_SIZE+0x281354>
     720:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     724:	110c270b 	tstne	ip, fp, lsl #14
     728:	40011201 	andmi	r1, r1, r1, lsl #4
     72c:	0c429706 	mcrreq	7, 0, r9, r2, cr6
     730:	00001301 	andeq	r1, r0, r1, lsl #6
     734:	0182890c 	orreq	r8, r2, ip, lsl #18
     738:	31011101 	tstcc	r1, r1, lsl #2
     73c:	0d000013 	stceq	0, cr0, [r0, #-76]	; 0xffffffb4
     740:	0001828a 	andeq	r8, r1, sl, lsl #5
     744:	42910a02 	addsmi	r0, r1, #8192	; 0x2000
     748:	0e00000a 	cdpeq	0, 0, cr0, cr0, cr10, {0}
     74c:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 69c <__STACKSEAL_SIZE+0x69c>
     750:	0b3a0e03 	bleq	e83f64 <__RAM_SIZE+0xd83f64>
     754:	0b390b3b 	bleq	e43448 <__RAM_SIZE+0xd43448>
     758:	01110c27 	tsteq	r1, r7, lsr #24
     75c:	0a400112 	beq	1000bac <__RAM_SIZE+0xf00bac>
     760:	000c4297 	muleq	ip, r7, r2
     764:	00340f00 	eorseq	r0, r4, r0, lsl #30
     768:	0b3a0e03 	bleq	e83f7c <__RAM_SIZE+0xd83f7c>
     76c:	0b390b3b 	bleq	e43460 <__RAM_SIZE+0xd43460>
     770:	06021349 	streq	r1, [r2], -r9, asr #6
     774:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
     778:	002e1000 	eoreq	r1, lr, r0
     77c:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
     780:	0b3b0b3a 	bleq	ec3470 <__RAM_SIZE+0xdc3470>
     784:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     788:	01111349 	tsteq	r1, r9, asr #6
     78c:	0a400112 	beq	1000bdc <__RAM_SIZE+0xf00bdc>
     790:	000c4297 	muleq	ip, r7, r2
     794:	012e1100 			; <UNDEFINED> instruction: 0x012e1100
     798:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
     79c:	0b3b0b3a 	bleq	ec348c <__RAM_SIZE+0xdc348c>
     7a0:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     7a4:	01111349 	tsteq	r1, r9, asr #6
     7a8:	0a400112 	beq	1000bf8 <__RAM_SIZE+0xf00bf8>
     7ac:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
     7b0:	12000013 	andne	r0, r0, #19
     7b4:	08030005 	stmdaeq	r3, {r0, r2}
     7b8:	0b3b0b3a 	bleq	ec34a8 <__RAM_SIZE+0xdc34a8>
     7bc:	13490b39 	movtne	r0, #39737	; 0x9b39
     7c0:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
     7c4:	13000006 	movwne	r0, #6
     7c8:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 718 <__STACKSEAL_SIZE+0x718>
     7cc:	40870c3c 	addmi	r0, r7, ip, lsr ip
     7d0:	3a0e030e 	bcc	381410 <__RAM_SIZE+0x281410>
     7d4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     7d8:	0000000b 	andeq	r0, r0, fp
     7dc:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
     7e0:	030b130e 	movweq	r1, #45838	; 0xb30e
     7e4:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
     7e8:	52011106 	andpl	r1, r1, #-2147483647	; 0x80000001
     7ec:	00061001 	andeq	r1, r6, r1
     7f0:	00240200 	eoreq	r0, r4, r0, lsl #4
     7f4:	0b3e0b0b 	bleq	f83428 <__RAM_SIZE+0xe83428>
     7f8:	00000e03 	andeq	r0, r0, r3, lsl #28
     7fc:	03001603 	movweq	r1, #1539	; 0x603
     800:	3b0b3a0e 	blcc	2cf040 <__RAM_SIZE+0x1cf040>
     804:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     808:	04000013 	streq	r0, [r0], #-19	; 0xffffffed
     80c:	0b0b0024 	bleq	2c08a4 <__RAM_SIZE+0x1c08a4>
     810:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
     814:	35050000 	strcc	r0, [r5, #-0]
     818:	00134900 	andseq	r4, r3, r0, lsl #18
     81c:	01130600 	tsteq	r3, r0, lsl #12
     820:	0b0b0e03 	bleq	2c4034 <__RAM_SIZE+0x1c4034>
     824:	0b3b0b3a 	bleq	ec3514 <__RAM_SIZE+0xdc3514>
     828:	13010b39 	movwne	r0, #6969	; 0x1b39
     82c:	0d070000 	stceq	0, cr0, [r7, #-0]
     830:	3a080300 	bcc	201438 <__RAM_SIZE+0x101438>
     834:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     838:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
     83c:	0800000a 	stmdaeq	r0, {r1, r3}
     840:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
     844:	0b3b0b3a 	bleq	ec3534 <__RAM_SIZE+0xdc3534>
     848:	13490b39 	movtne	r0, #39737	; 0x9b39
     84c:	00000a38 	andeq	r0, r0, r8, lsr sl
     850:	0b000f09 	bleq	447c <__HEAP_SIZE+0x347c>
     854:	0013490b 	andseq	r4, r3, fp, lsl #18
     858:	01150a00 	tsteq	r5, r0, lsl #20
     85c:	13490c27 	movtne	r0, #39975	; 0x9c27
     860:	00001301 	andeq	r1, r0, r1, lsl #6
     864:	4900050b 	stmdbmi	r0, {r0, r1, r3, r8, sl}
     868:	0c000013 	stceq	0, cr0, [r0], {19}
     86c:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     870:	0b3b0b3a 	bleq	ec3560 <__RAM_SIZE+0xdc3560>
     874:	13490b39 	movtne	r0, #39737	; 0x9b39
     878:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
     87c:	340d0000 	strcc	r0, [sp], #-0
     880:	3a0e0300 	bcc	381488 <__RAM_SIZE+0x281488>
     884:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     888:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     88c:	0e00000a 	cdpeq	0, 0, cr0, cr0, cr10, {0}
     890:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     894:	0b3b0b3a 	bleq	ec3584 <__RAM_SIZE+0xdc3584>
     898:	13490b39 	movtne	r0, #39737	; 0x9b39
     89c:	0a020c3f 	beq	839a0 <__HEAP_SIZE+0x829a0>
     8a0:	2e0f0000 	cdpcs	0, 0, cr0, cr15, cr0, {0}
     8a4:	030c3f01 	movweq	r3, #52993	; 0xcf01
     8a8:	3b0b3a0e 	blcc	2cf0e8 <__RAM_SIZE+0x1cf0e8>
     8ac:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
     8b0:	1113490c 	tstne	r3, ip, lsl #18
     8b4:	40011201 	andmi	r1, r1, r1, lsl #4
     8b8:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
     8bc:	00001301 	andeq	r1, r0, r1, lsl #6
     8c0:	03000510 	movweq	r0, #1296	; 0x510
     8c4:	3b0b3a0e 	blcc	2cf104 <__RAM_SIZE+0x1cf104>
     8c8:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     8cc:	b7060213 	smladlt	r6, r3, r2, r0
     8d0:	00000642 	andeq	r0, r0, r2, asr #12
     8d4:	03003411 	movweq	r3, #1041	; 0x411
     8d8:	3b0b3a0e 	blcc	2cf118 <__RAM_SIZE+0x1cf118>
     8dc:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     8e0:	b7060213 	smladlt	r6, r3, r2, r0
     8e4:	00000642 	andeq	r0, r0, r2, asr #12
     8e8:	3f002e12 	svccc	0x00002e12
     8ec:	3a0e030c 	bcc	381524 <__RAM_SIZE+0x281524>
     8f0:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     8f4:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
     8f8:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
     8fc:	970a4001 	strls	r4, [sl, -r1]
     900:	00000c42 	andeq	r0, r0, r2, asr #24
     904:	31011d13 	tstcc	r1, r3, lsl sp
     908:	b8015213 	stmdalt	r1, {r0, r1, r4, r9, ip, lr}
     90c:	01110b42 	tsteq	r1, r2, asr #22
     910:	0b580112 	bleq	1600d60 <__RAM_SIZE+0x1500d60>
     914:	0b570559 	bleq	15c1e80 <__RAM_SIZE+0x14c1e80>
     918:	34140000 	ldrcc	r0, [r4], #-0
     91c:	02133100 	andseq	r3, r3, #0, 2
     920:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
     924:	2e150000 	cdpcs	0, 1, cr0, cr5, cr0, {0}
     928:	030c3f01 	movweq	r3, #52993	; 0xcf01
     92c:	3b0b3a0e 	blcc	2cf16c <__RAM_SIZE+0x1cf16c>
     930:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
     934:	1113490c 	tstne	r3, ip, lsl #18
     938:	40011201 	andmi	r1, r1, r1, lsl #4
     93c:	0c429706 	mcrreq	7, 0, r9, r2, cr6
     940:	00001301 	andeq	r1, r0, r1, lsl #6
     944:	03000516 	movweq	r0, #1302	; 0x516
     948:	3b0b3a0e 	blcc	2cf188 <__RAM_SIZE+0x1cf188>
     94c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     950:	b7060213 	smladlt	r6, r3, r2, r0
     954:	00000642 	andeq	r0, r0, r2, asr #12
     958:	03003417 	movweq	r3, #1047	; 0x417
     95c:	3b0b3a0e 	blcc	2cf19c <__RAM_SIZE+0x1cf19c>
     960:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     964:	b7060213 	smladlt	r6, r3, r2, r0
     968:	00000642 	andeq	r0, r0, r2, asr #12
     96c:	03003418 	movweq	r3, #1048	; 0x418
     970:	3b0b3a08 	blcc	2cf198 <__RAM_SIZE+0x1cf198>
     974:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     978:	b7060213 	smladlt	r6, r3, r2, r0
     97c:	00000642 	andeq	r0, r0, r2, asr #12
     980:	01828919 	orreq	r8, r2, r9, lsl r9
     984:	31011101 	tstcc	r1, r1, lsl #2
     988:	00130113 	andseq	r0, r3, r3, lsl r1
     98c:	828a1a00 	addhi	r1, sl, #0, 20
     990:	0a020001 	beq	8099c <__HEAP_SIZE+0x7f99c>
     994:	000a4291 	muleq	sl, r1, r2
     998:	82891b00 	addhi	r1, r9, #0, 22
     99c:	01110001 	tsteq	r1, r1
     9a0:	00001331 	andeq	r1, r0, r1, lsr r3
     9a4:	3f012e1c 	svccc	0x00012e1c
     9a8:	3a0e030c 	bcc	3815e0 <__RAM_SIZE+0x2815e0>
     9ac:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     9b0:	110c270b 	tstne	ip, fp, lsl #14
     9b4:	40011201 	andmi	r1, r1, r1, lsl #4
     9b8:	0c429706 	mcrreq	7, 0, r9, r2, cr6
     9bc:	00001301 	andeq	r1, r0, r1, lsl #6
     9c0:	0182891d 	orreq	r8, r2, sp, lsl r9
     9c4:	01011101 	tsteq	r1, r1, lsl #2
     9c8:	1e000013 	mcrne	0, 0, r0, cr0, cr3, {0}
     9cc:	01018289 	smlabbeq	r1, r9, r2, r8
     9d0:	13310111 	teqne	r1, #1073741828	; 0x40000004
     9d4:	011f0000 	tsteq	pc, r0
     9d8:	01134901 	tsteq	r3, r1, lsl #18
     9dc:	20000013 	andcs	r0, r0, r3, lsl r0
     9e0:	13490021 	movtne	r0, #36897	; 0x9021
     9e4:	00000b2f 	andeq	r0, r0, pc, lsr #22
     9e8:	03012e21 	movweq	r2, #7713	; 0x1e21
     9ec:	3b0b3a0e 	blcc	2cf22c <__RAM_SIZE+0x1cf22c>
     9f0:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
     9f4:	1113490c 	tstne	r3, ip, lsl #18
     9f8:	40011201 	andmi	r1, r1, r1, lsl #4
     9fc:	0c429706 	mcrreq	7, 0, r9, r2, cr6
     a00:	00001301 	andeq	r1, r0, r1, lsl #6
     a04:	3f012e22 	svccc	0x00012e22
     a08:	3a0e030c 	bcc	381640 <__RAM_SIZE+0x281640>
     a0c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     a10:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
     a14:	010c3c13 	tsteq	ip, r3, lsl ip
     a18:	23000013 	movwcs	r0, #19
     a1c:	0e03012e 	adfeqsp	f0, f3, #0.5
     a20:	0b3b0b3a 	bleq	ec3710 <__RAM_SIZE+0xdc3710>
     a24:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     a28:	01120111 	tsteq	r2, r1, lsl r1
     a2c:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
     a30:	0013010c 	andseq	r0, r3, ip, lsl #2
     a34:	012e2400 			; <UNDEFINED> instruction: 0x012e2400
     a38:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
     a3c:	0b3b0b3a 	bleq	ec372c <__RAM_SIZE+0xdc372c>
     a40:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     a44:	13010c3c 	movwne	r0, #7228	; 0x1c3c
     a48:	2e250000 	cdpcs	0, 2, cr0, cr5, cr0, {0}
     a4c:	3a0e0301 	bcc	381658 <__RAM_SIZE+0x281658>
     a50:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     a54:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
     a58:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
     a5c:	970a4001 	strls	r4, [sl, -r1]
     a60:	13010c42 	movwne	r0, #7234	; 0x1c42
     a64:	05260000 	streq	r0, [r6, #-0]!
     a68:	3a080300 	bcc	201670 <__RAM_SIZE+0x101670>
     a6c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     a70:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     a74:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
     a78:	0b270000 	bleq	9c0a80 <__RAM_SIZE+0x8c0a80>
     a7c:	12011101 	andne	r1, r1, #1073741824	; 0x40000000
     a80:	28000001 	stmdacs	r0, {r0}
     a84:	0e03012e 	adfeqsp	f0, f3, #0.5
     a88:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     a8c:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     a90:	0b201349 	bleq	8057bc <__RAM_SIZE+0x7057bc>
     a94:	00001301 	andeq	r1, r0, r1, lsl #6
     a98:	03003429 	movweq	r3, #1065	; 0x429
     a9c:	3b0b3a0e 	blcc	2cf2dc <__RAM_SIZE+0x1cf2dc>
     aa0:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     aa4:	2a000013 	bcs	af8 <__Vectors_Size+0x338>
     aa8:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 9f8 <__Vectors_Size+0x238>
     aac:	40870c3c 	addmi	r0, r7, ip, lsr ip
     ab0:	3a0e030e 	bcc	3816f0 <__RAM_SIZE+0x2816f0>
     ab4:	000b3b0b 	andeq	r3, fp, fp, lsl #22
     ab8:	002e2b00 	eoreq	r2, lr, r0, lsl #22
     abc:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
     ac0:	030e4087 	movweq	r4, #57479	; 0xe087
     ac4:	3b0b3a0e 	blcc	2cf304 <__RAM_SIZE+0x1cf304>
     ac8:	000b390b 	andeq	r3, fp, fp, lsl #18
     acc:	11010000 	mrsne	r0, (UNDEF: 1)
     ad0:	130e2501 	movwne	r2, #58625	; 0xe501
     ad4:	1b0e030b 	blne	381708 <__RAM_SIZE+0x281708>
     ad8:	1106550e 	tstne	r6, lr, lsl #10
     adc:	10015201 	andne	r5, r1, r1, lsl #4
     ae0:	02000006 	andeq	r0, r0, #6
     ae4:	0b0b0024 	bleq	2c0b7c <__RAM_SIZE+0x1c0b7c>
     ae8:	0e030b3e 	vmoveq.16	d3[0], r0
     aec:	16030000 	strne	r0, [r3], -r0
     af0:	3a0e0300 	bcc	3816f8 <__RAM_SIZE+0x2816f8>
     af4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     af8:	0013490b 	andseq	r4, r3, fp, lsl #18
     afc:	00240400 	eoreq	r0, r4, r0, lsl #8
     b00:	0b3e0b0b 	bleq	f83734 <__RAM_SIZE+0xe83734>
     b04:	00000803 	andeq	r0, r0, r3, lsl #16
     b08:	49003505 	stmdbmi	r0, {r0, r2, r8, sl, ip, sp}
     b0c:	06000013 			; <UNDEFINED> instruction: 0x06000013
     b10:	13490026 	movtne	r0, #36902	; 0x9026
     b14:	13070000 	movwne	r0, #28672	; 0x7000
     b18:	3a050b01 	bcc	143724 <__RAM_SIZE+0x43724>
     b1c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     b20:	0013010b 	andseq	r0, r3, fp, lsl #2
     b24:	000d0800 	andeq	r0, sp, r0, lsl #16
     b28:	0b3a0e03 	bleq	e8433c <__RAM_SIZE+0xd8433c>
     b2c:	0b39053b 	bleq	e42020 <__RAM_SIZE+0xd42020>
     b30:	0a381349 	beq	e0585c <__RAM_SIZE+0xd0585c>
     b34:	0d090000 	stceq	0, cr0, [r9, #-0]
     b38:	3a080300 	bcc	201740 <__RAM_SIZE+0x101740>
     b3c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     b40:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
     b44:	0a00000a 	beq	b74 <__Vectors_Size+0x3b4>
     b48:	13490101 	movtne	r0, #37121	; 0x9101
     b4c:	00001301 	andeq	r1, r0, r1, lsl #6
     b50:	4900210b 	stmdbmi	r0, {r0, r1, r3, r8, sp}
     b54:	000b2f13 	andeq	r2, fp, r3, lsl pc
     b58:	00160c00 	andseq	r0, r6, r0, lsl #24
     b5c:	0b3a0e03 	bleq	e84370 <__RAM_SIZE+0xd84370>
     b60:	0b39053b 	bleq	e42054 <__RAM_SIZE+0xd42054>
     b64:	00001349 	andeq	r1, r0, r9, asr #6
     b68:	3f012e0d 	svccc	0x00012e0d
     b6c:	3a0e030c 	bcc	3817a4 <__RAM_SIZE+0x2817a4>
     b70:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     b74:	110c270b 	tstne	ip, fp, lsl #14
     b78:	40011201 	andmi	r1, r1, r1, lsl #4
     b7c:	0c429706 	mcrreq	7, 0, r9, r2, cr6
     b80:	00001301 	andeq	r1, r0, r1, lsl #6
     b84:	0300340e 	movweq	r3, #1038	; 0x40e
     b88:	3b0b3a0e 	blcc	2cf3c8 <__RAM_SIZE+0x1cf3c8>
     b8c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     b90:	b7060213 	smladlt	r6, r3, r2, r0
     b94:	00000642 	andeq	r0, r0, r2, asr #12
     b98:	0300340f 	movweq	r3, #1039	; 0x40f
     b9c:	3b0b3a0e 	blcc	2cf3dc <__RAM_SIZE+0x1cf3dc>
     ba0:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     ba4:	000a0213 	andeq	r0, sl, r3, lsl r2
     ba8:	82891000 	addhi	r1, r9, #0
     bac:	01110101 	tsteq	r1, r1, lsl #2
     bb0:	13011331 	movwne	r1, #4913	; 0x1331
     bb4:	8a110000 	bhi	440bbc <__RAM_SIZE+0x340bbc>
     bb8:	02000182 	andeq	r0, r0, #-2147483616	; 0x80000020
     bbc:	0a42910a 	beq	10a4fec <__RAM_SIZE+0xfa4fec>
     bc0:	89120000 	ldmdbhi	r2, {}	; <UNPREDICTABLE>
     bc4:	11010182 	smlabbne	r1, r2, r1, r0
     bc8:	00133101 	andseq	r3, r3, r1, lsl #2
     bcc:	000f1300 	andeq	r1, pc, r0, lsl #6
     bd0:	13490b0b 	movtne	r0, #39691	; 0x9b0b
     bd4:	34140000 	ldrcc	r0, [r4], #-0
     bd8:	3a080300 	bcc	2017e0 <__RAM_SIZE+0x1017e0>
     bdc:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     be0:	1c13490b 			; <UNDEFINED> instruction: 0x1c13490b
     be4:	1500000b 	strne	r0, [r0, #-11]
     be8:	0c3f012e 	ldfeqs	f0, [pc], #-184	; b38 <__Vectors_Size+0x378>
     bec:	0b3a0e03 	bleq	e84400 <__RAM_SIZE+0xd84400>
     bf0:	0b390b3b 	bleq	e438e4 <__RAM_SIZE+0xd438e4>
     bf4:	13490c27 	movtne	r0, #39975	; 0x9c27
     bf8:	01120111 	tsteq	r2, r1, lsl r1
     bfc:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
     c00:	0013010c 	andseq	r0, r3, ip, lsl #2
     c04:	00051600 	andeq	r1, r5, r0, lsl #12
     c08:	0b3a0e03 	bleq	e8441c <__RAM_SIZE+0xd8441c>
     c0c:	0b390b3b 	bleq	e43900 <__RAM_SIZE+0xd43900>
     c10:	06021349 	streq	r1, [r2], -r9, asr #6
     c14:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
     c18:	002e1700 	eoreq	r1, lr, r0, lsl #14
     c1c:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
     c20:	030e4087 	movweq	r4, #57479	; 0xe087
     c24:	3b0b3a0e 	blcc	2cf464 <__RAM_SIZE+0x1cf464>
     c28:	000b390b 	andeq	r3, fp, fp, lsl #18
     c2c:	002e1800 	eoreq	r1, lr, r0, lsl #16
     c30:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
     c34:	030e4087 	movweq	r4, #57479	; 0xe087
     c38:	3b0b3a0e 	blcc	2cf478 <__RAM_SIZE+0x1cf478>
     c3c:	0000000b 	andeq	r0, r0, fp
     c40:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
     c44:	030b130e 	movweq	r1, #45838	; 0xb30e
     c48:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
     c4c:	52011106 	andpl	r1, r1, #-2147483647	; 0x80000001
     c50:	00061001 	andeq	r1, r6, r1
     c54:	00240200 	eoreq	r0, r4, r0, lsl #4
     c58:	0b3e0b0b 	bleq	f8388c <__RAM_SIZE+0xe8388c>
     c5c:	00000e03 	andeq	r0, r0, r3, lsl #28
     c60:	0b002403 	bleq	9c74 <__HEAP_SIZE+0x8c74>
     c64:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
     c68:	04000008 	streq	r0, [r0], #-8
     c6c:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
     c70:	0b3b0b3a 	bleq	ec3960 <__RAM_SIZE+0xdc3960>
     c74:	13490b39 	movtne	r0, #39737	; 0x9b39
     c78:	0f050000 	svceq	0x00050000
     c7c:	000b0b00 	andeq	r0, fp, r0, lsl #22
     c80:	00260600 	eoreq	r0, r6, r0, lsl #12
     c84:	00001349 	andeq	r1, r0, r9, asr #6
     c88:	03011307 	movweq	r1, #4871	; 0x1307
     c8c:	3a0b0b0e 	bcc	2c38cc <__RAM_SIZE+0x1c38cc>
     c90:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     c94:	0013010b 	andseq	r0, r3, fp, lsl #2
     c98:	000d0800 	andeq	r0, sp, r0, lsl #16
     c9c:	0b3a0e03 	bleq	e844b0 <__RAM_SIZE+0xd844b0>
     ca0:	0b390b3b 	bleq	e43994 <__RAM_SIZE+0xd43994>
     ca4:	0a381349 	beq	e059d0 <__RAM_SIZE+0xd059d0>
     ca8:	0f090000 	svceq	0x00090000
     cac:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
     cb0:	0a000013 	beq	d04 <__Vectors_Size+0x544>
     cb4:	0c3f012e 	ldfeqs	f0, [pc], #-184	; c04 <__Vectors_Size+0x444>
     cb8:	0b3a0e03 	bleq	e844cc <__RAM_SIZE+0xd844cc>
     cbc:	0b390b3b 	bleq	e439b0 <__RAM_SIZE+0xd439b0>
     cc0:	13490c27 	movtne	r0, #39975	; 0x9c27
     cc4:	01120111 	tsteq	r2, r1, lsl r1
     cc8:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
     ccc:	0013010c 	andseq	r0, r3, ip, lsl #2
     cd0:	00050b00 	andeq	r0, r5, r0, lsl #22
     cd4:	0b3a0e03 	bleq	e844e8 <__RAM_SIZE+0xd844e8>
     cd8:	0b390b3b 	bleq	e439cc <__RAM_SIZE+0xd439cc>
     cdc:	06021349 	streq	r1, [r2], -r9, asr #6
     ce0:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
     ce4:	00340c00 	eorseq	r0, r4, r0, lsl #24
     ce8:	0b3a0e03 	bleq	e844fc <__RAM_SIZE+0xd844fc>
     cec:	0b390b3b 	bleq	e439e0 <__RAM_SIZE+0xd439e0>
     cf0:	06021349 	streq	r1, [r2], -r9, asr #6
     cf4:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
     cf8:	012e0d00 			; <UNDEFINED> instruction: 0x012e0d00
     cfc:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
     d00:	0b3b0b3a 	bleq	ec39f0 <__RAM_SIZE+0xdc39f0>
     d04:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     d08:	01120111 	tsteq	r2, r1, lsl r1
     d0c:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
     d10:	0013010c 	andseq	r0, r3, ip, lsl #2
     d14:	00050e00 	andeq	r0, r5, r0, lsl #28
     d18:	0b3a0e03 	bleq	e8452c <__RAM_SIZE+0xd8452c>
     d1c:	0b390b3b 	bleq	e43a10 <__RAM_SIZE+0xd43a10>
     d20:	0a021349 	beq	85a4c <__HEAP_SIZE+0x84a4c>
     d24:	2e0f0000 	cdpcs	0, 0, cr0, cr15, cr0, {0}
     d28:	030c3f01 	movweq	r3, #52993	; 0xcf01
     d2c:	3b0b3a0e 	blcc	2cf56c <__RAM_SIZE+0x1cf56c>
     d30:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
     d34:	1201110c 	andne	r1, r1, #12, 2
     d38:	970a4001 	strls	r4, [sl, -r1]
     d3c:	13010c42 	movwne	r0, #7234	; 0x1c42
     d40:	2e100000 	cdpcs	0, 1, cr0, cr0, cr0, {0}
     d44:	030c3f01 	movweq	r3, #52993	; 0xcf01
     d48:	3b0b3a0e 	blcc	2cf588 <__RAM_SIZE+0x1cf588>
     d4c:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
     d50:	1201110c 	andne	r1, r1, #12, 2
     d54:	970a4001 	strls	r4, [sl, -r1]
     d58:	00000c42 	andeq	r0, r0, r2, asr #24
     d5c:	01110100 	tsteq	r1, r0, lsl #2
     d60:	0b130e25 	bleq	4c45fc <__RAM_SIZE+0x3c45fc>
     d64:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
     d68:	01110655 	tsteq	r1, r5, asr r6
     d6c:	06100152 			; <UNDEFINED> instruction: 0x06100152
     d70:	16020000 	strne	r0, [r2], -r0
     d74:	3a0e0300 	bcc	38197c <__RAM_SIZE+0x28197c>
     d78:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     d7c:	0013490b 	andseq	r4, r3, fp, lsl #18
     d80:	00240300 	eoreq	r0, r4, r0, lsl #6
     d84:	0b3e0b0b 	bleq	f839b8 <__RAM_SIZE+0xe839b8>
     d88:	00000e03 	andeq	r0, r0, r3, lsl #28
     d8c:	0b002404 	bleq	9da4 <__HEAP_SIZE+0x8da4>
     d90:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
     d94:	05000008 	streq	r0, [r0, #-8]
     d98:	0b0b000f 	bleq	2c0ddc <__RAM_SIZE+0x1c0ddc>
     d9c:	26060000 	strcs	r0, [r6], -r0
     da0:	00134900 	andseq	r4, r3, r0, lsl #18
     da4:	000f0700 	andeq	r0, pc, r0, lsl #14
     da8:	13490b0b 	movtne	r0, #39691	; 0x9b0b
     dac:	26080000 	strcs	r0, [r8], -r0
     db0:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
     db4:	13490035 	movtne	r0, #36917	; 0x9035
     db8:	130a0000 	movwne	r0, #40960	; 0xa000
     dbc:	0b0e0301 	bleq	3819c8 <__RAM_SIZE+0x2819c8>
     dc0:	3b0b3a0b 	blcc	2cf5f4 <__RAM_SIZE+0x1cf5f4>
     dc4:	010b3905 	tsteq	fp, r5, lsl #18
     dc8:	0b000013 	bleq	e1c <__Vectors_Size+0x65c>
     dcc:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
     dd0:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     dd4:	13490b39 	movtne	r0, #39737	; 0x9b39
     dd8:	00000a38 	andeq	r0, r0, r8, lsr sl
     ddc:	4901010c 	stmdbmi	r1, {r2, r3, r8}
     de0:	00130113 	andseq	r0, r3, r3, lsl r1
     de4:	00210d00 	eoreq	r0, r1, r0, lsl #26
     de8:	0b2f1349 	bleq	bc5b14 <__RAM_SIZE+0xac5b14>
     dec:	160e0000 	strne	r0, [lr], -r0
     df0:	3a0e0300 	bcc	3819f8 <__RAM_SIZE+0x2819f8>
     df4:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     df8:	0013490b 	andseq	r4, r3, fp, lsl #18
     dfc:	01170f00 	tsteq	r7, r0, lsl #30
     e00:	0b3a0b0b 	bleq	e83a34 <__RAM_SIZE+0xd83a34>
     e04:	0b39053b 	bleq	e422f8 <__RAM_SIZE+0xd422f8>
     e08:	00001301 	andeq	r1, r0, r1, lsl #6
     e0c:	03000d10 	movweq	r0, #3344	; 0xd10
     e10:	3b0b3a0e 	blcc	2cf650 <__RAM_SIZE+0x1cf650>
     e14:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     e18:	11000013 	tstne	r0, r3, lsl r0
     e1c:	0803000d 	stmdaeq	r3, {r0, r2, r3}
     e20:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     e24:	13490b39 	movtne	r0, #39737	; 0x9b39
     e28:	00000a38 	andeq	r0, r0, r8, lsr sl
     e2c:	03011312 	movweq	r1, #4882	; 0x1312
     e30:	3a0b0b0e 	bcc	2c3a70 <__RAM_SIZE+0x1c3a70>
     e34:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     e38:	0013010b 	andseq	r0, r3, fp, lsl #2
     e3c:	000d1300 	andeq	r1, sp, r0, lsl #6
     e40:	0b3a0e03 	bleq	e84654 <__RAM_SIZE+0xd84654>
     e44:	0b390b3b 	bleq	e43b38 <__RAM_SIZE+0xd43b38>
     e48:	0a381349 	beq	e05b74 <__RAM_SIZE+0xd05b74>
     e4c:	13140000 	tstne	r4, #0
     e50:	3c0e0300 	stccc	3, cr0, [lr], {-0}
     e54:	1500000c 	strne	r0, [r0, #-12]
     e58:	0803000d 	stmdaeq	r3, {r0, r2, r3}
     e5c:	0b3b0b3a 	bleq	ec3b4c <__RAM_SIZE+0xdc3b4c>
     e60:	13490b39 	movtne	r0, #39737	; 0x9b39
     e64:	00000a38 	andeq	r0, r0, r8, lsr sl
     e68:	0b011716 	bleq	46ac8 <__HEAP_SIZE+0x45ac8>
     e6c:	3b0b3a0b 	blcc	2cf6a0 <__RAM_SIZE+0x1cf6a0>
     e70:	010b390b 	tsteq	fp, fp, lsl #18
     e74:	17000013 	smladne	r0, r3, r0, r0
     e78:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
     e7c:	0b3b0b3a 	bleq	ec3b6c <__RAM_SIZE+0xdc3b6c>
     e80:	13490b39 	movtne	r0, #39737	; 0x9b39
     e84:	2e180000 	cdpcs	0, 1, cr0, cr8, cr0, {0}
     e88:	3a0e0301 	bcc	381a94 <__RAM_SIZE+0x281a94>
     e8c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     e90:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
     e94:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
     e98:	97064001 	strls	r4, [r6, -r1]
     e9c:	13010c42 	movwne	r0, #7234	; 0x1c42
     ea0:	05190000 	ldreq	r0, [r9, #-0]
     ea4:	3a0e0300 	bcc	381aac <__RAM_SIZE+0x281aac>
     ea8:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     eac:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     eb0:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
     eb4:	341a0000 	ldrcc	r0, [sl], #-0
     eb8:	3a0e0300 	bcc	381ac0 <__RAM_SIZE+0x281ac0>
     ebc:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     ec0:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     ec4:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
     ec8:	0b1b0000 	bleq	6c0ed0 <__RAM_SIZE+0x5c0ed0>
     ecc:	00065501 	andeq	r5, r6, r1, lsl #10
     ed0:	010b1c00 	tsteq	fp, r0, lsl #24
     ed4:	01120111 	tsteq	r2, r1, lsl r1
     ed8:	00001301 	andeq	r1, r0, r1, lsl #6
     edc:	0182891d 	orreq	r8, r2, sp, lsl r9
     ee0:	31011100 	mrscc	r1, (UNDEF: 17)
     ee4:	1e000013 	mcrne	0, 0, r0, cr0, cr3, {0}
     ee8:	01018289 	smlabbeq	r1, r9, r2, r8
     eec:	13310111 	teqne	r1, #1073741828	; 0x40000004
     ef0:	00001301 	andeq	r1, r0, r1, lsl #6
     ef4:	01828a1f 	orreq	r8, r2, pc, lsl sl
     ef8:	910a0200 	mrsls	r0, R10_fiq
     efc:	00000a42 	andeq	r0, r0, r2, asr #20
     f00:	01828920 	orreq	r8, r2, r0, lsr #18
     f04:	31011101 	tstcc	r1, r1, lsl #2
     f08:	21000013 	tstcs	r0, r3, lsl r0
     f0c:	0c3f012e 	ldfeqs	f0, [pc], #-184	; e5c <__Vectors_Size+0x69c>
     f10:	0b3a0e03 	bleq	e84724 <__RAM_SIZE+0xd84724>
     f14:	0b39053b 	bleq	e42408 <__RAM_SIZE+0xd42408>
     f18:	13490c27 	movtne	r0, #39975	; 0x9c27
     f1c:	01120111 	tsteq	r2, r1, lsl r1
     f20:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
     f24:	0013010c 	andseq	r0, r3, ip, lsl #2
     f28:	00342200 	eorseq	r2, r4, r0, lsl #4
     f2c:	0b3a0e03 	bleq	e84740 <__RAM_SIZE+0xd84740>
     f30:	0b39053b 	bleq	e42424 <__RAM_SIZE+0xd42424>
     f34:	0a021349 	beq	85c60 <__HEAP_SIZE+0x84c60>
     f38:	2e230000 	cdpcs	0, 2, cr0, cr3, cr0, {0}
     f3c:	030c3f01 	movweq	r3, #52993	; 0xcf01
     f40:	3b0b3a0e 	blcc	2cf780 <__RAM_SIZE+0x1cf780>
     f44:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
     f48:	1201110c 	andne	r1, r1, #12, 2
     f4c:	97064001 	strls	r4, [r6, -r1]
     f50:	13010c42 	movwne	r0, #7234	; 0x1c42
     f54:	2e240000 	cdpcs	0, 2, cr0, cr4, cr0, {0}
     f58:	030c3f01 	movweq	r3, #52993	; 0xcf01
     f5c:	3b0b3a0e 	blcc	2cf79c <__RAM_SIZE+0x1cf79c>
     f60:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
     f64:	1113490c 	tstne	r3, ip, lsl #18
     f68:	40011201 	andmi	r1, r1, r1, lsl #4
     f6c:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
     f70:	00001301 	andeq	r1, r0, r1, lsl #6
     f74:	03003425 	movweq	r3, #1061	; 0x425
     f78:	3b0b3a0e 	blcc	2cf7b8 <__RAM_SIZE+0x1cf7b8>
     f7c:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     f80:	000b1c13 	andeq	r1, fp, r3, lsl ip
     f84:	012e2600 			; <UNDEFINED> instruction: 0x012e2600
     f88:	0b3a0e03 	bleq	e8479c <__RAM_SIZE+0xd8479c>
     f8c:	0b39053b 	bleq	e42480 <__RAM_SIZE+0xd42480>
     f90:	01110c27 	tsteq	r1, r7, lsr #24
     f94:	06400112 			; <UNDEFINED> instruction: 0x06400112
     f98:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
     f9c:	27000013 	smladcs	r0, r3, r0, r0
     fa0:	0e03012e 	adfeqsp	f0, f3, #0.5
     fa4:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     fa8:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     fac:	01111349 	tsteq	r1, r9, asr #6
     fb0:	0a400112 	beq	1001400 <__RAM_SIZE+0xf01400>
     fb4:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
     fb8:	28000013 	stmdacs	r0, {r0, r1, r4}
     fbc:	0655010b 	ldrbeq	r0, [r5], -fp, lsl #2
     fc0:	00001301 	andeq	r1, r0, r1, lsl #6
     fc4:	11010b29 	tstne	r1, r9, lsr #22
     fc8:	00011201 	andeq	r1, r1, r1, lsl #4
     fcc:	00052a00 	andeq	r2, r5, r0, lsl #20
     fd0:	0b3a0e03 	bleq	e847e4 <__RAM_SIZE+0xd847e4>
     fd4:	0b39053b 	bleq	e424c8 <__RAM_SIZE+0xd424c8>
     fd8:	0a021349 	beq	85d04 <__HEAP_SIZE+0x84d04>
     fdc:	2e2b0000 	cdpcs	0, 2, cr0, cr11, cr0, {0}
     fe0:	3c0c3f00 	stccc	15, cr3, [ip], {-0}
     fe4:	0e40870c 	cdpeq	7, 4, cr8, cr0, cr12, {0}
     fe8:	0b3a0e03 	bleq	e847fc <__RAM_SIZE+0xd847fc>
     fec:	0b39053b 	bleq	e424e0 <__RAM_SIZE+0xd424e0>
     ff0:	2e2c0000 	cdpcs	0, 2, cr0, cr12, cr0, {0}
     ff4:	3c0c3f00 	stccc	15, cr3, [ip], {-0}
     ff8:	0e40870c 	cdpeq	7, 4, cr8, cr0, cr12, {0}
     ffc:	0b3a0e03 	bleq	e84810 <__RAM_SIZE+0xd84810>
    1000:	0b390b3b 	bleq	e43cf4 <__RAM_SIZE+0xd43cf4>
    1004:	2e2d0000 	cdpcs	0, 2, cr0, cr13, cr0, {0}
    1008:	3c0c3f00 	stccc	15, cr3, [ip], {-0}
    100c:	0e40870c 	cdpeq	7, 4, cr8, cr0, cr12, {0}
    1010:	0b3a0e03 	bleq	e84824 <__RAM_SIZE+0xd84824>
    1014:	00000b3b 	andeq	r0, r0, fp, lsr fp
    1018:	01110100 	tsteq	r1, r0, lsl #2
    101c:	0b130e25 	bleq	4c48b8 <__RAM_SIZE+0x3c48b8>
    1020:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
    1024:	01110655 	tsteq	r1, r5, asr r6
    1028:	06100152 			; <UNDEFINED> instruction: 0x06100152
    102c:	16020000 	strne	r0, [r2], -r0
    1030:	3a0e0300 	bcc	381c38 <__RAM_SIZE+0x281c38>
    1034:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1038:	0013490b 	andseq	r4, r3, fp, lsl #18
    103c:	00260300 	eoreq	r0, r6, r0, lsl #6
    1040:	00001349 	andeq	r1, r0, r9, asr #6
    1044:	0b002404 	bleq	a05c <__HEAP_SIZE+0x905c>
    1048:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
    104c:	0500000e 	streq	r0, [r0, #-14]
    1050:	0b0b0024 	bleq	2c10e8 <__RAM_SIZE+0x1c10e8>
    1054:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
    1058:	0f060000 	svceq	0x00060000
    105c:	000b0b00 	andeq	r0, fp, r0, lsl #22
    1060:	000f0700 	andeq	r0, pc, r0, lsl #14
    1064:	13490b0b 	movtne	r0, #39691	; 0x9b0b
    1068:	35080000 	strcc	r0, [r8, #-0]
    106c:	00134900 	andseq	r4, r3, r0, lsl #18
    1070:	01150900 	tsteq	r5, r0, lsl #18
    1074:	13010c27 	movwne	r0, #7207	; 0x1c27
    1078:	050a0000 	streq	r0, [sl, #-0]
    107c:	00134900 	andseq	r4, r3, r0, lsl #18
    1080:	01130b00 	tsteq	r3, r0, lsl #22
    1084:	0b0b0e03 	bleq	2c4898 <__RAM_SIZE+0x1c4898>
    1088:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    108c:	13010b39 	movwne	r0, #6969	; 0x1b39
    1090:	0d0c0000 	stceq	0, cr0, [ip, #-0]
    1094:	3a0e0300 	bcc	381c9c <__RAM_SIZE+0x281c9c>
    1098:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    109c:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    10a0:	0d00000a 	stceq	0, cr0, [r0, #-40]	; 0xffffffd8
    10a4:	13490101 	movtne	r0, #37121	; 0x9101
    10a8:	00001301 	andeq	r1, r0, r1, lsl #6
    10ac:	4900210e 	stmdbmi	r0, {r1, r2, r3, r8, sp}
    10b0:	000b2f13 	andeq	r2, fp, r3, lsl pc
    10b4:	00160f00 	andseq	r0, r6, r0, lsl #30
    10b8:	0b3a0e03 	bleq	e848cc <__RAM_SIZE+0xd848cc>
    10bc:	0b39053b 	bleq	e425b0 <__RAM_SIZE+0xd425b0>
    10c0:	00001349 	andeq	r1, r0, r9, asr #6
    10c4:	03011310 	movweq	r1, #4880	; 0x1310
    10c8:	3a0b0b0e 	bcc	2c3d08 <__RAM_SIZE+0x1c3d08>
    10cc:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    10d0:	0013010b 	andseq	r0, r3, fp, lsl #2
    10d4:	000d1100 	andeq	r1, sp, r0, lsl #2
    10d8:	0b3a0e03 	bleq	e848ec <__RAM_SIZE+0xd848ec>
    10dc:	0b390b3b 	bleq	e43dd0 <__RAM_SIZE+0xd43dd0>
    10e0:	0a381349 	beq	e05e0c <__RAM_SIZE+0xd05e0c>
    10e4:	15120000 	ldrne	r0, [r2, #-0]
    10e8:	490c2701 	stmdbmi	ip, {r0, r8, r9, sl, sp}
    10ec:	00130113 	andseq	r0, r3, r3, lsl r1
    10f0:	01041300 	mrseq	r1, LR_abt
    10f4:	0b0b0b3e 	bleq	2c3df4 <__RAM_SIZE+0x1c3df4>
    10f8:	0b3a1349 	bleq	e85e24 <__RAM_SIZE+0xd85e24>
    10fc:	0b390b3b 	bleq	e43df0 <__RAM_SIZE+0xd43df0>
    1100:	00001301 	andeq	r1, r0, r1, lsl #6
    1104:	03002814 	movweq	r2, #2068	; 0x814
    1108:	000b1c0e 	andeq	r1, fp, lr, lsl #24
    110c:	00341500 	eorseq	r1, r4, r0, lsl #10
    1110:	0b3a0e03 	bleq	e84924 <__RAM_SIZE+0xd84924>
    1114:	0b39053b 	bleq	e42608 <__RAM_SIZE+0xd42608>
    1118:	0c3f1349 	ldceq	3, cr1, [pc], #-292	; ffc <__Vectors_Size+0x83c>
    111c:	00000a02 	andeq	r0, r0, r2, lsl #20
    1120:	03003416 	movweq	r3, #1046	; 0x416
    1124:	3b0b3a0e 	blcc	2cf964 <__RAM_SIZE+0x1cf964>
    1128:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    112c:	000a0213 	andeq	r0, sl, r3, lsl r2
    1130:	012e1700 			; <UNDEFINED> instruction: 0x012e1700
    1134:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    1138:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    113c:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    1140:	01120111 	tsteq	r2, r1, lsl r1
    1144:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
    1148:	0013010c 	andseq	r0, r3, ip, lsl #2
    114c:	00341800 	eorseq	r1, r4, r0, lsl #16
    1150:	0b3a0e03 	bleq	e84964 <__RAM_SIZE+0xd84964>
    1154:	0b39053b 	bleq	e42648 <__RAM_SIZE+0xd42648>
    1158:	06021349 	streq	r1, [r2], -r9, asr #6
    115c:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
    1160:	00051900 	andeq	r1, r5, r0, lsl #18
    1164:	0b3a0e03 	bleq	e84978 <__RAM_SIZE+0xd84978>
    1168:	0b39053b 	bleq	e4265c <__RAM_SIZE+0xd4265c>
    116c:	0a021349 	beq	85e98 <__HEAP_SIZE+0x84e98>
    1170:	2e1a0000 	cdpcs	0, 1, cr0, cr10, cr0, {0}
    1174:	3a0e0301 	bcc	381d80 <__RAM_SIZE+0x281d80>
    1178:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    117c:	110c270b 	tstne	ip, fp, lsl #14
    1180:	40011201 	andmi	r1, r1, r1, lsl #4
    1184:	0c429706 	mcrreq	7, 0, r9, r2, cr6
    1188:	00001301 	andeq	r1, r0, r1, lsl #6
    118c:	0300051b 	movweq	r0, #1307	; 0x51b
    1190:	3b0b3a0e 	blcc	2cf9d0 <__RAM_SIZE+0x1cf9d0>
    1194:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    1198:	b7060213 	smladlt	r6, r3, r2, r0
    119c:	00000642 	andeq	r0, r0, r2, asr #12
    11a0:	11010b1c 	tstne	r1, ip, lsl fp
    11a4:	01011201 	tsteq	r1, r1, lsl #4
    11a8:	1d000013 	stcne	0, cr0, [r0, #-76]	; 0xffffffb4
    11ac:	00018289 	andeq	r8, r1, r9, lsl #5
    11b0:	13310111 	teqne	r1, #1073741828	; 0x40000004
    11b4:	891e0000 	ldmdbhi	lr, {}	; <UNPREDICTABLE>
    11b8:	11010182 	smlabbne	r1, r2, r1, r0
    11bc:	01133101 	tsteq	r3, r1, lsl #2
    11c0:	1f000013 	svcne	0x00000013
    11c4:	0001828a 	andeq	r8, r1, sl, lsl #5
    11c8:	42910a02 	addsmi	r0, r1, #8192	; 0x2000
    11cc:	2000000a 	andcs	r0, r0, sl
    11d0:	01018289 	smlabbeq	r1, r9, r2, r8
    11d4:	13310111 	teqne	r1, #1073741828	; 0x40000004
    11d8:	2e210000 	cdpcs	0, 2, cr0, cr1, cr0, {0}
    11dc:	030c3f01 	movweq	r3, #52993	; 0xcf01
    11e0:	3b0b3a0e 	blcc	2cfa20 <__RAM_SIZE+0x1cfa20>
    11e4:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    11e8:	1113490c 	tstne	r3, ip, lsl #18
    11ec:	40011201 	andmi	r1, r1, r1, lsl #4
    11f0:	0c429706 	mcrreq	7, 0, r9, r2, cr6
    11f4:	00001301 	andeq	r1, r0, r1, lsl #6
    11f8:	3f012e22 	svccc	0x00012e22
    11fc:	3a0e030c 	bcc	381e34 <__RAM_SIZE+0x281e34>
    1200:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1204:	110c270b 	tstne	ip, fp, lsl #14
    1208:	40011201 	andmi	r1, r1, r1, lsl #4
    120c:	0c429706 	mcrreq	7, 0, r9, r2, cr6
    1210:	00001301 	andeq	r1, r0, r1, lsl #6
    1214:	55010b23 	strpl	r0, [r1, #-2851]	; 0xfffff4dd
    1218:	00130106 	andseq	r0, r3, r6, lsl #2
    121c:	012e2400 			; <UNDEFINED> instruction: 0x012e2400
    1220:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    1224:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1228:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    122c:	01111349 	tsteq	r1, r9, asr #6
    1230:	0a400112 	beq	1001680 <__RAM_SIZE+0xf01680>
    1234:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
    1238:	25000013 	strcs	r0, [r0, #-19]	; 0xffffffed
    123c:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    1240:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1244:	13490b39 	movtne	r0, #39737	; 0x9b39
    1248:	00000b1c 	andeq	r0, r0, ip, lsl fp
    124c:	03002e26 	movweq	r2, #3622	; 0xe26
    1250:	3b0b3a0e 	blcc	2cfa90 <__RAM_SIZE+0x1cfa90>
    1254:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    1258:	1201110c 	andne	r1, r1, #12, 2
    125c:	970a4001 	strls	r4, [sl, -r1]
    1260:	00000c42 	andeq	r0, r0, r2, asr #24
    1264:	03012e27 	movweq	r2, #7719	; 0x1e27
    1268:	3b0b3a0e 	blcc	2cfaa8 <__RAM_SIZE+0x1cfaa8>
    126c:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    1270:	1113490c 	tstne	r3, ip, lsl #18
    1274:	40011201 	andmi	r1, r1, r1, lsl #4
    1278:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
    127c:	00001301 	andeq	r1, r0, r1, lsl #6
    1280:	55010b28 	strpl	r0, [r1, #-2856]	; 0xfffff4d8
    1284:	29000006 	stmdbcs	r0, {r1, r2}
    1288:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 11d8 <__HEAP_SIZE+0x1d8>
    128c:	0b3a0e03 	bleq	e84aa0 <__RAM_SIZE+0xd84aa0>
    1290:	0b39053b 	bleq	e42784 <__RAM_SIZE+0xd42784>
    1294:	01110c27 	tsteq	r1, r7, lsr #24
    1298:	0a400112 	beq	10016e8 <__RAM_SIZE+0xf016e8>
    129c:	000c4297 	muleq	ip, r7, r2
    12a0:	82892a00 	addhi	r2, r9, #0, 20
    12a4:	01110101 	tsteq	r1, r1, lsl #2
    12a8:	0b2b0000 	bleq	ac12b0 <__RAM_SIZE+0x9c12b0>
    12ac:	12011101 	andne	r1, r1, #1073741824	; 0x40000000
    12b0:	2c000001 	stccs	0, cr0, [r0], {1}
    12b4:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 1204 <__HEAP_SIZE+0x204>
    12b8:	0b3a0e03 	bleq	e84acc <__RAM_SIZE+0xd84acc>
    12bc:	0b39053b 	bleq	e427b0 <__RAM_SIZE+0xd427b0>
    12c0:	13490c27 	movtne	r0, #39975	; 0x9c27
    12c4:	01120111 	tsteq	r2, r1, lsl r1
    12c8:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
    12cc:	2d00000c 	stccs	0, cr0, [r0, #-48]	; 0xffffffd0
    12d0:	0e03012e 	adfeqsp	f0, f3, #0.5
    12d4:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    12d8:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    12dc:	01111349 	tsteq	r1, r9, asr #6
    12e0:	06400112 			; <UNDEFINED> instruction: 0x06400112
    12e4:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
    12e8:	2e000013 	mcrcs	0, 0, r0, cr0, cr3, {0}
    12ec:	08030034 	stmdaeq	r3, {r2, r4, r5}
    12f0:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    12f4:	13490b39 	movtne	r0, #39737	; 0x9b39
    12f8:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    12fc:	2f000006 	svccs	0x00000006
    1300:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 1250 <__HEAP_SIZE+0x250>
    1304:	40870c3c 	addmi	r0, r7, ip, lsr ip
    1308:	3a0e030e 	bcc	381f48 <__RAM_SIZE+0x281f48>
    130c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1310:	3000000b 	andcc	r0, r0, fp
    1314:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 1264 <__HEAP_SIZE+0x264>
    1318:	40870c3c 	addmi	r0, r7, ip, lsr ip
    131c:	3a0e030e 	bcc	381f5c <__RAM_SIZE+0x281f5c>
    1320:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1324:	3100000b 	tstcc	r0, fp
    1328:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 1278 <__HEAP_SIZE+0x278>
    132c:	40870c3c 	addmi	r0, r7, ip, lsr ip
    1330:	3a0e030e 	bcc	381f70 <__RAM_SIZE+0x281f70>
    1334:	000b3b0b 	andeq	r3, fp, fp, lsl #22
    1338:	11010000 	mrsne	r0, (UNDEF: 1)
    133c:	130e2501 	movwne	r2, #58625	; 0xe501
    1340:	1b0e030b 	blne	381f74 <__RAM_SIZE+0x281f74>
    1344:	1106550e 	tstne	r6, lr, lsl #10
    1348:	10015201 	andne	r5, r1, r1, lsl #4
    134c:	02000006 	andeq	r0, r0, #6
    1350:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
    1354:	0b3b0b3a 	bleq	ec4044 <__RAM_SIZE+0xdc4044>
    1358:	13490b39 	movtne	r0, #39737	; 0x9b39
    135c:	24030000 	strcs	r0, [r3], #-0
    1360:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    1364:	000e030b 	andeq	r0, lr, fp, lsl #6
    1368:	00240400 	eoreq	r0, r4, r0, lsl #8
    136c:	0b3e0b0b 	bleq	f83fa0 <__RAM_SIZE+0xe83fa0>
    1370:	00000803 	andeq	r0, r0, r3, lsl #16
    1374:	0b000f05 	bleq	4f90 <__HEAP_SIZE+0x3f90>
    1378:	0600000b 	streq	r0, [r0], -fp
    137c:	13490026 	movtne	r0, #36902	; 0x9026
    1380:	0f070000 	svceq	0x00070000
    1384:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
    1388:	08000013 	stmdaeq	r0, {r0, r1, r4}
    138c:	0c270115 	stfeqs	f0, [r7], #-84	; 0xffffffac
    1390:	00001301 	andeq	r1, r0, r1, lsl #6
    1394:	49000509 	stmdbmi	r0, {r0, r3, r8, sl}
    1398:	0a000013 	beq	13ec <__HEAP_SIZE+0x3ec>
    139c:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
    13a0:	0b3a0b0b 	bleq	e83fd4 <__RAM_SIZE+0xd83fd4>
    13a4:	0b39053b 	bleq	e42898 <__RAM_SIZE+0xd42898>
    13a8:	00001301 	andeq	r1, r0, r1, lsl #6
    13ac:	03000d0b 	movweq	r0, #3339	; 0xd0b
    13b0:	3b0b3a0e 	blcc	2cfbf0 <__RAM_SIZE+0x1cfbf0>
    13b4:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    13b8:	000a3813 	andeq	r3, sl, r3, lsl r8
    13bc:	01010c00 	tsteq	r1, r0, lsl #24
    13c0:	13011349 	movwne	r1, #4937	; 0x1349
    13c4:	210d0000 	mrscs	r0, (UNDEF: 13)
    13c8:	2f134900 	svccs	0x00134900
    13cc:	0e00000b 	cdpeq	0, 0, cr0, cr0, cr11, {0}
    13d0:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
    13d4:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    13d8:	13490b39 	movtne	r0, #39737	; 0x9b39
    13dc:	170f0000 	strne	r0, [pc, -r0]
    13e0:	3a0b0b01 	bcc	2c3fec <__RAM_SIZE+0x1c3fec>
    13e4:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    13e8:	0013010b 	andseq	r0, r3, fp, lsl #2
    13ec:	000d1000 	andeq	r1, sp, r0
    13f0:	0b3a0e03 	bleq	e84c04 <__RAM_SIZE+0xd84c04>
    13f4:	0b39053b 	bleq	e428e8 <__RAM_SIZE+0xd428e8>
    13f8:	00001349 	andeq	r1, r0, r9, asr #6
    13fc:	03000d11 	movweq	r0, #3345	; 0xd11
    1400:	3b0b3a08 	blcc	2cfc28 <__RAM_SIZE+0x1cfc28>
    1404:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    1408:	000a3813 	andeq	r3, sl, r3, lsl r8
    140c:	01131200 	tsteq	r3, r0, lsl #4
    1410:	0b0b0e03 	bleq	2c4c24 <__RAM_SIZE+0x1c4c24>
    1414:	0b3b0b3a 	bleq	ec4104 <__RAM_SIZE+0xdc4104>
    1418:	13010b39 	movwne	r0, #6969	; 0x1b39
    141c:	0d130000 	ldceq	0, cr0, [r3, #-0]
    1420:	3a0e0300 	bcc	382028 <__RAM_SIZE+0x282028>
    1424:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1428:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    142c:	1400000a 	strne	r0, [r0], #-10
    1430:	0e030013 	mcreq	0, 0, r0, cr3, cr3, {0}
    1434:	00000c3c 	andeq	r0, r0, ip, lsr ip
    1438:	0b011715 	bleq	47094 <__HEAP_SIZE+0x46094>
    143c:	3b0b3a0b 	blcc	2cfc70 <__RAM_SIZE+0x1cfc70>
    1440:	010b390b 	tsteq	fp, fp, lsl #18
    1444:	16000013 			; <UNDEFINED> instruction: 0x16000013
    1448:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
    144c:	0b3b0b3a 	bleq	ec413c <__RAM_SIZE+0xdc413c>
    1450:	13490b39 	movtne	r0, #39737	; 0x9b39
    1454:	0d170000 	ldceq	0, cr0, [r7, #-0]
    1458:	3a080300 	bcc	202060 <__RAM_SIZE+0x102060>
    145c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1460:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    1464:	1800000a 	stmdane	r0, {r1, r3}
    1468:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    146c:	0b3b0b3a 	bleq	ec415c <__RAM_SIZE+0xdc415c>
    1470:	13490b39 	movtne	r0, #39737	; 0x9b39
    1474:	00000a02 	andeq	r0, r0, r2, lsl #20
    1478:	3f002e19 	svccc	0x00002e19
    147c:	3a0e030c 	bcc	3820b4 <__RAM_SIZE+0x2820b4>
    1480:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1484:	110c270b 	tstne	ip, fp, lsl #14
    1488:	40011201 	andmi	r1, r1, r1, lsl #4
    148c:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
    1490:	2e1a0000 	cdpcs	0, 1, cr0, cr10, cr0, {0}
    1494:	030c3f01 	movweq	r3, #52993	; 0xcf01
    1498:	3b0b3a0e 	blcc	2cfcd8 <__RAM_SIZE+0x1cfcd8>
    149c:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    14a0:	1113490c 	tstne	r3, ip, lsl #18
    14a4:	40011201 	andmi	r1, r1, r1, lsl #4
    14a8:	0c429706 	mcrreq	7, 0, r9, r2, cr6
    14ac:	00001301 	andeq	r1, r0, r1, lsl #6
    14b0:	0300051b 	movweq	r0, #1307	; 0x51b
    14b4:	3b0b3a0e 	blcc	2cfcf4 <__RAM_SIZE+0x1cfcf4>
    14b8:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    14bc:	b7060213 	smladlt	r6, r3, r2, r0
    14c0:	00000642 	andeq	r0, r0, r2, asr #12
    14c4:	0300341c 	movweq	r3, #1052	; 0x41c
    14c8:	3b0b3a0e 	blcc	2cfd08 <__RAM_SIZE+0x1cfd08>
    14cc:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    14d0:	000a0213 	andeq	r0, sl, r3, lsl r2
    14d4:	00341d00 	eorseq	r1, r4, r0, lsl #26
    14d8:	0b3a0e03 	bleq	e84cec <__RAM_SIZE+0xd84cec>
    14dc:	0b39053b 	bleq	e429d0 <__RAM_SIZE+0xd429d0>
    14e0:	06021349 	streq	r1, [r2], -r9, asr #6
    14e4:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
    14e8:	82891e00 	addhi	r1, r9, #0, 28
    14ec:	01110101 	tsteq	r1, r1, lsl #2
    14f0:	00001331 	andeq	r1, r0, r1, lsr r3
    14f4:	01828a1f 	orreq	r8, r2, pc, lsl sl
    14f8:	910a0200 	mrsls	r0, R10_fiq
    14fc:	00000a42 	andeq	r0, r0, r2, asr #20
    1500:	3f012e20 	svccc	0x00012e20
    1504:	3a0e030c 	bcc	38213c <__RAM_SIZE+0x28213c>
    1508:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    150c:	110c270b 	tstne	ip, fp, lsl #14
    1510:	40011201 	andmi	r1, r1, r1, lsl #4
    1514:	0c429706 	mcrreq	7, 0, r9, r2, cr6
    1518:	00001301 	andeq	r1, r0, r1, lsl #6
    151c:	01828921 	orreq	r8, r2, r1, lsr #18
    1520:	31011100 	mrscc	r1, (UNDEF: 17)
    1524:	22000013 	andcs	r0, r0, #19
    1528:	0e03012e 	adfeqsp	f0, f3, #0.5
    152c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1530:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    1534:	01120111 	tsteq	r2, r1, lsl r1
    1538:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
    153c:	0013010c 	andseq	r0, r3, ip, lsl #2
    1540:	010b2300 	mrseq	r2, (UNDEF: 59)
    1544:	01120111 	tsteq	r2, r1, lsl r1
    1548:	00001301 	andeq	r1, r0, r1, lsl #6
    154c:	01828924 	orreq	r8, r2, r4, lsr #18
    1550:	31011101 	tstcc	r1, r1, lsl #2
    1554:	00130113 	andseq	r0, r3, r3, lsl r1
    1558:	012e2500 			; <UNDEFINED> instruction: 0x012e2500
    155c:	0b3a0e03 	bleq	e84d70 <__RAM_SIZE+0xd84d70>
    1560:	0b39053b 	bleq	e42a54 <__RAM_SIZE+0xd42a54>
    1564:	01110c27 	tsteq	r1, r7, lsr #24
    1568:	06400112 			; <UNDEFINED> instruction: 0x06400112
    156c:	010c4296 			; <UNDEFINED> instruction: 0x010c4296
    1570:	26000013 			; <UNDEFINED> instruction: 0x26000013
    1574:	01018289 	smlabbeq	r1, r9, r2, r8
    1578:	13010111 	movwne	r0, #4369	; 0x1111
    157c:	2e270000 	cdpcs	0, 2, cr0, cr7, cr0, {0}
    1580:	3a0e0301 	bcc	38218c <__RAM_SIZE+0x28218c>
    1584:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1588:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
    158c:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    1590:	97064001 	strls	r4, [r6, -r1]
    1594:	13010c42 	movwne	r0, #7234	; 0x1c42
    1598:	2e280000 	cdpcs	0, 2, cr0, cr8, cr0, {0}
    159c:	3a0e0301 	bcc	3821a8 <__RAM_SIZE+0x2821a8>
    15a0:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    15a4:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
    15a8:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    15ac:	970a4001 	strls	r4, [sl, -r1]
    15b0:	13010c42 	movwne	r0, #7234	; 0x1c42
    15b4:	2e290000 	cdpcs	0, 2, cr0, cr9, cr0, {0}
    15b8:	030c3f01 	movweq	r3, #52993	; 0xcf01
    15bc:	3b0b3a0e 	blcc	2cfdfc <__RAM_SIZE+0x1cfdfc>
    15c0:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    15c4:	1113490c 	tstne	r3, ip, lsl #18
    15c8:	40011201 	andmi	r1, r1, r1, lsl #4
    15cc:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
    15d0:	00001301 	andeq	r1, r0, r1, lsl #6
    15d4:	0300052a 	movweq	r0, #1322	; 0x52a
    15d8:	3b0b3a0e 	blcc	2cfe18 <__RAM_SIZE+0x1cfe18>
    15dc:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    15e0:	000a0213 	andeq	r0, sl, r3, lsl r2
    15e4:	002e2b00 	eoreq	r2, lr, r0, lsl #22
    15e8:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    15ec:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    15f0:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    15f4:	01111349 	tsteq	r1, r9, asr #6
    15f8:	0a400112 	beq	1001a48 <__RAM_SIZE+0xf01a48>
    15fc:	000c4297 	muleq	ip, r7, r2
    1600:	012e2c00 			; <UNDEFINED> instruction: 0x012e2c00
    1604:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    1608:	0b3b0b3a 	bleq	ec42f8 <__RAM_SIZE+0xdc42f8>
    160c:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    1610:	01111349 	tsteq	r1, r9, asr #6
    1614:	06400112 			; <UNDEFINED> instruction: 0x06400112
    1618:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
    161c:	2d000013 	stccs	0, cr0, [r0, #-76]	; 0xffffffb4
    1620:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    1624:	0b3b0b3a 	bleq	ec4314 <__RAM_SIZE+0xdc4314>
    1628:	13490b39 	movtne	r0, #39737	; 0x9b39
    162c:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    1630:	2e000006 	cdpcs	0, 0, cr0, cr0, cr6, {0}
    1634:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 1584 <__HEAP_SIZE+0x584>
    1638:	40870c3c 	addmi	r0, r7, ip, lsr ip
    163c:	3a0e030e 	bcc	38227c <__RAM_SIZE+0x28227c>
    1640:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1644:	2f00000b 	svccs	0x0000000b
    1648:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 1598 <__HEAP_SIZE+0x598>
    164c:	40870c3c 	addmi	r0, r7, ip, lsr ip
    1650:	3a0e030e 	bcc	382290 <__RAM_SIZE+0x282290>
    1654:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1658:	0000000b 	andeq	r0, r0, fp
    165c:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
    1660:	030b130e 	movweq	r1, #45838	; 0xb30e
    1664:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
    1668:	52011106 	andpl	r1, r1, #-2147483647	; 0x80000001
    166c:	00061001 	andeq	r1, r6, r1
    1670:	00160200 	andseq	r0, r6, r0, lsl #4
    1674:	0b3a0e03 	bleq	e84e88 <__RAM_SIZE+0xd84e88>
    1678:	0b390b3b 	bleq	e4436c <__RAM_SIZE+0xd4436c>
    167c:	00001349 	andeq	r1, r0, r9, asr #6
    1680:	49002603 	stmdbmi	r0, {r0, r1, r9, sl, sp}
    1684:	04000013 	streq	r0, [r0], #-19	; 0xffffffed
    1688:	0b0b0024 	bleq	2c1720 <__RAM_SIZE+0x1c1720>
    168c:	0e030b3e 	vmoveq.16	d3[0], r0
    1690:	24050000 	strcs	r0, [r5], #-0
    1694:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    1698:	0008030b 	andeq	r0, r8, fp, lsl #6
    169c:	000f0600 	andeq	r0, pc, r0, lsl #12
    16a0:	00000b0b 	andeq	r0, r0, fp, lsl #22
    16a4:	0b000f07 	bleq	52c8 <__HEAP_SIZE+0x42c8>
    16a8:	0013490b 	andseq	r4, r3, fp, lsl #18
    16ac:	01130800 	tsteq	r3, r0, lsl #16
    16b0:	0b0b0e03 	bleq	2c4ec4 <__RAM_SIZE+0x1c4ec4>
    16b4:	0b3b0b3a 	bleq	ec43a4 <__RAM_SIZE+0xdc43a4>
    16b8:	13010b39 	movwne	r0, #6969	; 0x1b39
    16bc:	0d090000 	stceq	0, cr0, [r9, #-0]
    16c0:	3a0e0300 	bcc	3822c8 <__RAM_SIZE+0x2822c8>
    16c4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    16c8:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    16cc:	0a00000a 	beq	16fc <__HEAP_SIZE+0x6fc>
    16d0:	13490101 	movtne	r0, #37121	; 0x9101
    16d4:	00001301 	andeq	r1, r0, r1, lsl #6
    16d8:	4900210b 	stmdbmi	r0, {r0, r1, r3, r8, sp}
    16dc:	00052f13 	andeq	r2, r5, r3, lsl pc
    16e0:	00340c00 	eorseq	r0, r4, r0, lsl #24
    16e4:	0b3a0e03 	bleq	e84ef8 <__RAM_SIZE+0xd84ef8>
    16e8:	0b390b3b 	bleq	e443dc <__RAM_SIZE+0xd443dc>
    16ec:	0c3f1349 	ldceq	3, cr1, [pc], #-292	; 15d0 <__HEAP_SIZE+0x5d0>
    16f0:	00000c3c 	andeq	r0, r0, ip, lsr ip
    16f4:	0300340d 	movweq	r3, #1037	; 0x40d
    16f8:	3b0b3a0e 	blcc	2cff38 <__RAM_SIZE+0x1cff38>
    16fc:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1700:	000b1c13 	andeq	r1, fp, r3, lsl ip
    1704:	00340e00 	eorseq	r0, r4, r0, lsl #28
    1708:	0b3a0e03 	bleq	e84f1c <__RAM_SIZE+0xd84f1c>
    170c:	0b390b3b 	bleq	e44400 <__RAM_SIZE+0xd44400>
    1710:	0a021349 	beq	8643c <__HEAP_SIZE+0x8543c>
    1714:	2e0f0000 	cdpcs	0, 0, cr0, cr15, cr0, {0}
    1718:	030c3f00 	movweq	r3, #52992	; 0xcf00
    171c:	3b0b3a0e 	blcc	2cff5c <__RAM_SIZE+0x1cff5c>
    1720:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    1724:	1201110c 	andne	r1, r1, #12, 2
    1728:	970a4001 	strls	r4, [sl, -r1]
    172c:	00000c42 	andeq	r0, r0, r2, asr #24
    1730:	3f012e10 	svccc	0x00012e10
    1734:	3a0e030c 	bcc	38236c <__RAM_SIZE+0x28236c>
    1738:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    173c:	110c270b 	tstne	ip, fp, lsl #14
    1740:	40011201 	andmi	r1, r1, r1, lsl #4
    1744:	0c429706 	mcrreq	7, 0, r9, r2, cr6
    1748:	00001301 	andeq	r1, r0, r1, lsl #6
    174c:	03000511 	movweq	r0, #1297	; 0x511
    1750:	3b0b3a0e 	blcc	2cff90 <__RAM_SIZE+0x1cff90>
    1754:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    1758:	b7060213 	smladlt	r6, r3, r2, r0
    175c:	00000642 	andeq	r0, r0, r2, asr #12
    1760:	03003412 	movweq	r3, #1042	; 0x412
    1764:	3b0b3a0e 	blcc	2cffa4 <__RAM_SIZE+0x1cffa4>
    1768:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    176c:	b7060213 	smladlt	r6, r3, r2, r0
    1770:	00000642 	andeq	r0, r0, r2, asr #12
    1774:	01828913 	orreq	r8, r2, r3, lsl r9
    1778:	31011100 	mrscc	r1, (UNDEF: 17)
    177c:	14000013 	strne	r0, [r0], #-19	; 0xffffffed
    1780:	0e03012e 	adfeqsp	f0, f3, #0.5
    1784:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1788:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    178c:	01120111 	tsteq	r2, r1, lsl r1
    1790:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
    1794:	0013010c 	andseq	r0, r3, ip, lsl #2
    1798:	00341500 	eorseq	r1, r4, r0, lsl #10
    179c:	0b3a0803 	bleq	e837b0 <__RAM_SIZE+0xd837b0>
    17a0:	0b39053b 	bleq	e42c94 <__RAM_SIZE+0xd42c94>
    17a4:	06021349 	streq	r1, [r2], -r9, asr #6
    17a8:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
    17ac:	012e1600 			; <UNDEFINED> instruction: 0x012e1600
    17b0:	0b3a0e03 	bleq	e84fc4 <__RAM_SIZE+0xd84fc4>
    17b4:	0b39053b 	bleq	e42ca8 <__RAM_SIZE+0xd42ca8>
    17b8:	01110c27 	tsteq	r1, r7, lsr #24
    17bc:	0a400112 	beq	1001c0c <__RAM_SIZE+0xf01c0c>
    17c0:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
    17c4:	17000013 	smladne	r0, r3, r0, r0
    17c8:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 1718 <__HEAP_SIZE+0x718>
    17cc:	0b3a0e03 	bleq	e84fe0 <__RAM_SIZE+0xd84fe0>
    17d0:	0b39053b 	bleq	e42cc4 <__RAM_SIZE+0xd42cc4>
    17d4:	13490c27 	movtne	r0, #39975	; 0x9c27
    17d8:	01120111 	tsteq	r2, r1, lsl r1
    17dc:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
    17e0:	0013010c 	andseq	r0, r3, ip, lsl #2
    17e4:	82891800 	addhi	r1, r9, #0, 16
    17e8:	01110101 	tsteq	r1, r1, lsl #2
    17ec:	13011331 	movwne	r1, #4913	; 0x1331
    17f0:	8a190000 	bhi	6417f8 <__RAM_SIZE+0x5417f8>
    17f4:	02000182 	andeq	r0, r0, #-2147483616	; 0x80000020
    17f8:	0a42910a 	beq	10a5c28 <__RAM_SIZE+0xfa5c28>
    17fc:	891a0000 	ldmdbhi	sl, {}	; <UNPREDICTABLE>
    1800:	11010182 	smlabbne	r1, r2, r1, r0
    1804:	00133101 	andseq	r3, r3, r1, lsl #2
    1808:	002e1b00 	eoreq	r1, lr, r0, lsl #22
    180c:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    1810:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1814:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    1818:	01111349 	tsteq	r1, r9, asr #6
    181c:	0a400112 	beq	1001c6c <__RAM_SIZE+0xf01c6c>
    1820:	000c4297 	muleq	ip, r7, r2
    1824:	00051c00 	andeq	r1, r5, r0, lsl #24
    1828:	0b3a0803 	bleq	e8383c <__RAM_SIZE+0xd8383c>
    182c:	0b39053b 	bleq	e42d20 <__RAM_SIZE+0xd42d20>
    1830:	06021349 	streq	r1, [r2], -r9, asr #6
    1834:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
    1838:	012e1d00 			; <UNDEFINED> instruction: 0x012e1d00
    183c:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    1840:	0b3b0b3a 	bleq	ec4530 <__RAM_SIZE+0xdc4530>
    1844:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    1848:	01111349 	tsteq	r1, r9, asr #6
    184c:	06400112 			; <UNDEFINED> instruction: 0x06400112
    1850:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
    1854:	1e000013 	mcrne	0, 0, r0, cr0, cr3, {0}
    1858:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
    185c:	0b3b0b3a 	bleq	ec454c <__RAM_SIZE+0xdc454c>
    1860:	13490b39 	movtne	r0, #39737	; 0x9b39
    1864:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    1868:	1f000006 	svcne	0x00000006
    186c:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    1870:	0b3b0b3a 	bleq	ec4560 <__RAM_SIZE+0xdc4560>
    1874:	13490b39 	movtne	r0, #39737	; 0x9b39
    1878:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    187c:	20000006 	andcs	r0, r0, r6
    1880:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 17d0 <__HEAP_SIZE+0x7d0>
    1884:	40870c3c 	addmi	r0, r7, ip, lsr ip
    1888:	3a0e030e 	bcc	3824c8 <__RAM_SIZE+0x2824c8>
    188c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1890:	2100000b 	tstcs	r0, fp
    1894:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 17e4 <__HEAP_SIZE+0x7e4>
    1898:	40870c3c 	addmi	r0, r7, ip, lsr ip
    189c:	3a0e030e 	bcc	3824dc <__RAM_SIZE+0x2824dc>
    18a0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    18a4:	2200000b 	andcs	r0, r0, #11
    18a8:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 17f8 <__HEAP_SIZE+0x7f8>
    18ac:	40870c3c 	addmi	r0, r7, ip, lsr ip
    18b0:	3a0e030e 	bcc	3824f0 <__RAM_SIZE+0x2824f0>
    18b4:	000b3b0b 	andeq	r3, fp, fp, lsl #22
    18b8:	11010000 	mrsne	r0, (UNDEF: 1)
    18bc:	130e2501 	movwne	r2, #58625	; 0xe501
    18c0:	1b0e030b 	blne	3824f4 <__RAM_SIZE+0x2824f4>
    18c4:	1106550e 	tstne	r6, lr, lsl #10
    18c8:	10015201 	andne	r5, r1, r1, lsl #4
    18cc:	02000006 	andeq	r0, r0, #6
    18d0:	0b0b0024 	bleq	2c1968 <__RAM_SIZE+0x1c1968>
    18d4:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
    18d8:	24030000 	strcs	r0, [r3], #-0
    18dc:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    18e0:	000e030b 	andeq	r0, lr, fp, lsl #6
    18e4:	00160400 	andseq	r0, r6, r0, lsl #8
    18e8:	0b3a0e03 	bleq	e850fc <__RAM_SIZE+0xd850fc>
    18ec:	0b390b3b 	bleq	e445e0 <__RAM_SIZE+0xd445e0>
    18f0:	00001349 	andeq	r1, r0, r9, asr #6
    18f4:	49003505 	stmdbmi	r0, {r0, r2, r8, sl, ip, sp}
    18f8:	06000013 			; <UNDEFINED> instruction: 0x06000013
    18fc:	0b0b000f 	bleq	2c1940 <__RAM_SIZE+0x1c1940>
    1900:	00001349 	andeq	r1, r0, r9, asr #6
    1904:	27011507 	strcs	r1, [r1, -r7, lsl #10]
    1908:	0013010c 	andseq	r0, r3, ip, lsl #2
    190c:	00050800 	andeq	r0, r5, r0, lsl #16
    1910:	00001349 	andeq	r1, r0, r9, asr #6
    1914:	0b000f09 	bleq	5540 <__HEAP_SIZE+0x4540>
    1918:	0a00000b 	beq	194c <__HEAP_SIZE+0x94c>
    191c:	0b3e0104 	bleq	f81d34 <__RAM_SIZE+0xe81d34>
    1920:	13490b0b 	movtne	r0, #39691	; 0x9b0b
    1924:	0b3b0b3a 	bleq	ec4614 <__RAM_SIZE+0xdc4614>
    1928:	13010b39 	movwne	r0, #6969	; 0x1b39
    192c:	280b0000 	stmdacs	fp, {}	; <UNPREDICTABLE>
    1930:	1c0e0300 	stcne	3, cr0, [lr], {-0}
    1934:	0c00000b 	stceq	0, cr0, [r0], {11}
    1938:	13490026 	movtne	r0, #36902	; 0x9026
    193c:	150d0000 	strne	r0, [sp, #-0]
    1940:	000c2700 	andeq	r2, ip, r0, lsl #14
    1944:	00340e00 	eorseq	r0, r4, r0, lsl #28
    1948:	0b3a0e03 	bleq	e8515c <__RAM_SIZE+0xd8515c>
    194c:	0b39053b 	bleq	e42e40 <__RAM_SIZE+0xd42e40>
    1950:	0a021349 	beq	8667c <__HEAP_SIZE+0x8567c>
    1954:	2e0f0000 	cdpcs	0, 0, cr0, cr15, cr0, {0}
    1958:	030c3f01 	movweq	r3, #52993	; 0xcf01
    195c:	3b0b3a0e 	blcc	2d019c <__RAM_SIZE+0x1d019c>
    1960:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    1964:	1113490c 	tstne	r3, ip, lsl #18
    1968:	40011201 	andmi	r1, r1, r1, lsl #4
    196c:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
    1970:	00001301 	andeq	r1, r0, r1, lsl #6
    1974:	03003410 	movweq	r3, #1040	; 0x410
    1978:	3b0b3a0e 	blcc	2d01b8 <__RAM_SIZE+0x1d01b8>
    197c:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    1980:	b7060213 	smladlt	r6, r3, r2, r0
    1984:	00000642 	andeq	r0, r0, r2, asr #12
    1988:	03003411 	movweq	r3, #1041	; 0x411
    198c:	3b0b3a0e 	blcc	2d01cc <__RAM_SIZE+0x1d01cc>
    1990:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    1994:	000b1c13 	andeq	r1, fp, r3, lsl ip
    1998:	002e1200 	eoreq	r1, lr, r0, lsl #4
    199c:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    19a0:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    19a4:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    19a8:	01120111 	tsteq	r2, r1, lsl r1
    19ac:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
    19b0:	1300000c 	movwne	r0, #12
    19b4:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 1904 <__HEAP_SIZE+0x904>
    19b8:	0b3a0e03 	bleq	e851cc <__RAM_SIZE+0xd851cc>
    19bc:	0b39053b 	bleq	e42eb0 <__RAM_SIZE+0xd42eb0>
    19c0:	13490c27 	movtne	r0, #39975	; 0x9c27
    19c4:	01120111 	tsteq	r2, r1, lsl r1
    19c8:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
    19cc:	0013010c 	andseq	r0, r3, ip, lsl #2
    19d0:	010b1400 	tsteq	fp, r0, lsl #8
    19d4:	00001301 	andeq	r1, r0, r1, lsl #6
    19d8:	03003415 	movweq	r3, #1045	; 0x415
    19dc:	3b0b3a0e 	blcc	2d021c <__RAM_SIZE+0x1d021c>
    19e0:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    19e4:	16000013 			; <UNDEFINED> instruction: 0x16000013
    19e8:	00018289 	andeq	r8, r1, r9, lsl #5
    19ec:	13310111 	teqne	r1, #1073741828	; 0x40000004
    19f0:	05170000 	ldreq	r0, [r7, #-0]
    19f4:	3a0e0300 	bcc	3825fc <__RAM_SIZE+0x2825fc>
    19f8:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    19fc:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    1a00:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
    1a04:	05180000 	ldreq	r0, [r8, #-0]
    1a08:	3a0e0300 	bcc	382610 <__RAM_SIZE+0x282610>
    1a0c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1a10:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    1a14:	1900000a 	stmdbne	r0, {r1, r3}
    1a18:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 1968 <__HEAP_SIZE+0x968>
    1a1c:	0b3a0e03 	bleq	e85230 <__RAM_SIZE+0xd85230>
    1a20:	0b39053b 	bleq	e42f14 <__RAM_SIZE+0xd42f14>
    1a24:	01110c27 	tsteq	r1, r7, lsr #24
    1a28:	06400112 			; <UNDEFINED> instruction: 0x06400112
    1a2c:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
    1a30:	1a000013 	bne	1a84 <__HEAP_SIZE+0xa84>
    1a34:	01018289 	smlabbeq	r1, r9, r2, r8
    1a38:	13310111 	teqne	r1, #1073741828	; 0x40000004
    1a3c:	8a1b0000 	bhi	6c1a44 <__RAM_SIZE+0x5c1a44>
    1a40:	02000182 	andeq	r0, r0, #-2147483616	; 0x80000020
    1a44:	0a42910a 	beq	10a5e74 <__RAM_SIZE+0xfa5e74>
    1a48:	2e1c0000 	cdpcs	0, 1, cr0, cr12, cr0, {0}
    1a4c:	3a0e0301 	bcc	382658 <__RAM_SIZE+0x282658>
    1a50:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1a54:	110c270b 	tstne	ip, fp, lsl #14
    1a58:	40011201 	andmi	r1, r1, r1, lsl #4
    1a5c:	0c429706 	mcrreq	7, 0, r9, r2, cr6
    1a60:	00001301 	andeq	r1, r0, r1, lsl #6
    1a64:	11010b1d 	tstne	r1, sp, lsl fp
    1a68:	01011201 	tsteq	r1, r1, lsl #4
    1a6c:	1e000013 	mcrne	0, 0, r0, cr0, cr3, {0}
    1a70:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 19c0 <__HEAP_SIZE+0x9c0>
    1a74:	40870c3c 	addmi	r0, r7, ip, lsr ip
    1a78:	3a0e030e 	bcc	3826b8 <__RAM_SIZE+0x2826b8>
    1a7c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1a80:	1f00000b 	svcne	0x0000000b
    1a84:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 19d4 <__HEAP_SIZE+0x9d4>
    1a88:	40870c3c 	addmi	r0, r7, ip, lsr ip
    1a8c:	3a0e030e 	bcc	3826cc <__RAM_SIZE+0x2826cc>
    1a90:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1a94:	0000000b 	andeq	r0, r0, fp
    1a98:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
    1a9c:	030b130e 	movweq	r1, #45838	; 0xb30e
    1aa0:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
    1aa4:	52011106 	andpl	r1, r1, #-2147483647	; 0x80000001
    1aa8:	00061001 	andeq	r1, r6, r1
    1aac:	00240200 	eoreq	r0, r4, r0, lsl #4
    1ab0:	0b3e0b0b 	bleq	f846e4 <__RAM_SIZE+0xe846e4>
    1ab4:	00000e03 	andeq	r0, r0, r3, lsl #28
    1ab8:	03001603 	movweq	r1, #1539	; 0x603
    1abc:	3b0b3a0e 	blcc	2d02fc <__RAM_SIZE+0x1d02fc>
    1ac0:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1ac4:	04000013 	streq	r0, [r0], #-19	; 0xffffffed
    1ac8:	0b0b0024 	bleq	2c1b60 <__RAM_SIZE+0x1c1b60>
    1acc:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
    1ad0:	2e050000 	cdpcs	0, 0, cr0, cr5, cr0, {0}
    1ad4:	030c3f00 	movweq	r3, #52992	; 0xcf00
    1ad8:	3b0b3a0e 	blcc	2d0318 <__RAM_SIZE+0x1d0318>
    1adc:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    1ae0:	1201110c 	andne	r1, r1, #12, 2
    1ae4:	970a4001 	strls	r4, [sl, -r1]
    1ae8:	00000c42 	andeq	r0, r0, r2, asr #24
    1aec:	3f012e06 	svccc	0x00012e06
    1af0:	3a0e030c 	bcc	382728 <__RAM_SIZE+0x282728>
    1af4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1af8:	110c270b 	tstne	ip, fp, lsl #14
    1afc:	40011201 	andmi	r1, r1, r1, lsl #4
    1b00:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
    1b04:	00001301 	andeq	r1, r0, r1, lsl #6
    1b08:	03000507 	movweq	r0, #1287	; 0x507
    1b0c:	3b0b3a0e 	blcc	2d034c <__RAM_SIZE+0x1d034c>
    1b10:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1b14:	000a0213 	andeq	r0, sl, r3, lsl r2
    1b18:	002e0800 	eoreq	r0, lr, r0, lsl #16
    1b1c:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    1b20:	0b3b0b3a 	bleq	ec4810 <__RAM_SIZE+0xdc4810>
    1b24:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    1b28:	01111349 	tsteq	r1, r9, asr #6
    1b2c:	0a400112 	beq	1001f7c <__RAM_SIZE+0xf01f7c>
    1b30:	000c4297 	muleq	ip, r7, r2
    1b34:	002e0900 	eoreq	r0, lr, r0, lsl #18
    1b38:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    1b3c:	0b3b0b3a 	bleq	ec482c <__RAM_SIZE+0xdc482c>
    1b40:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    1b44:	01120111 	tsteq	r2, r1, lsl r1
    1b48:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
    1b4c:	0000000c 	andeq	r0, r0, ip
    1b50:	10001101 	andne	r1, r0, r1, lsl #2
    1b54:	12011106 	andne	r1, r1, #-2147483647	; 0x80000001
    1b58:	1b0e0301 	blne	382764 <__RAM_SIZE+0x282764>
    1b5c:	130e250e 	movwne	r2, #58638	; 0xe50e
    1b60:	00000005 	andeq	r0, r0, r5
    1b64:	10001101 	andne	r1, r0, r1, lsl #2
    1b68:	12011106 	andne	r1, r1, #-2147483647	; 0x80000001
    1b6c:	1b0e0301 	blne	382778 <__RAM_SIZE+0x282778>
    1b70:	130e250e 	movwne	r2, #58638	; 0xe50e
    1b74:	00000005 	andeq	r0, r0, r5

Disassembly of section .debug_loc:

00000000 <.debug_loc>:
    __asm volatile ( "mrs %0, ipsr" : "=r" ( ulCurrentInterrupt )::"memory" );
       0:	10000964 	andne	r0, r0, r4, ror #18
    if( ulCurrentInterrupt == 0 )
       4:	10000966 	andne	r0, r0, r6, ror #18
        xReturn = pdFALSE;
       8:	007d0002 	rsbseq	r0, sp, r2
}
       c:	10000966 	andne	r0, r0, r6, ror #18
      10:	10000990 	mulne	r0, r0, r9
      14:	087d0002 	ldmdaeq	sp!, {r1}^
	...
      20:	00000001 	andeq	r0, r0, r1
      24:	09660000 	stmdbeq	r6!, {}^	; <UNPREDICTABLE>
      28:	097a1000 	ldmdbeq	sl!, {ip}^
      2c:	00021000 	andeq	r1, r2, r0
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
      30:	097a9f30 	ldmdbeq	sl!, {r4, r5, r8, r9, sl, fp, ip, pc}^
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
      34:	097e1000 	ldmdbeq	lr!, {ip}^
      38:	00011000 	andeq	r1, r1, r0
      3c:	00097e51 	andeq	r7, r9, r1, asr lr
      40:	00099010 	andeq	r9, r9, r0, lsl r0
        BaseType_t xReturn = pdFAIL;
      44:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
	...
            while( pxBlock != pxEnd )
      50:	10000800 	andne	r0, r0, r0, lsl #16
      54:	10000802 	andne	r0, r0, r2, lsl #16
                if( pxBlock->xBlockSize > xMaxSize )
      58:	007d0002 	rsbseq	r0, sp, r2
      5c:	10000802 	andne	r0, r0, r2, lsl #16
                if( pxBlock->xBlockSize < xMinSize )
      60:	10000804 	andne	r0, r0, r4, lsl #16
                    xMinSize = pxBlock->xBlockSize;
      64:	047d0002 	ldrbteq	r0, [sp], #-2
      68:	10000804 	andne	r0, r0, r4, lsl #16
      6c:	10000828 	andne	r0, r0, r8, lsr #16
      70:	107d0002 	rsbsne	r0, sp, r2
      74:	10000828 	andne	r0, r0, r8, lsr #16
      78:	1000082c 	andne	r0, r0, ip, lsr #16
      7c:	047d0002 	ldrbteq	r0, [sp], #-2
            prvUnlockQueue( pxQueue );
      80:	1000082c 	andne	r0, r0, ip, lsr #16
            ( void ) xTaskResumeAll();
      84:	10000844 	andne	r0, r0, r4, asr #16
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
      88:	107d0002 	rsbsne	r0, sp, r2
	...
        taskENTER_CRITICAL();
      94:	00000002 	andeq	r0, r0, r2
            if( uxSemaphoreCount > ( UBaseType_t ) 0 )
      98:	00000000 	andeq	r0, r0, r0
                if( xTicksToWait == ( TickType_t ) 0 )
      9c:	10000804 	andne	r0, r0, r4, lsl #16
      a0:	1000081a 	andne	r0, r0, sl, lsl r8
                else if( xEntryTimeSet == pdFALSE )
      a4:	9f310002 	svcls	0x00310002
        taskEXIT_CRITICAL();
      a8:	1000081a 	andne	r0, r0, sl, lsl r8
        vTaskSuspendAll();
      ac:	10000822 	andne	r0, r0, r2, lsr #16
        prvLockQueue( pxQueue );
      b0:	22500001 	subscs	r0, r0, #1
      b4:	25100008 	ldrcs	r0, [r0, #-8]
      b8:	01100008 	tsteq	r0, r8
      bc:	082c5100 	stmdaeq	ip!, {r8, ip, lr}
      c0:	082f1000 	stmdaeq	pc!, {ip}	; <UNPREDICTABLE>
      c4:	00011000 	andeq	r1, r1, r0
      c8:	00000050 	andeq	r0, r0, r0, asr r0
      cc:	00000000 	andeq	r0, r0, r0
        if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
      d0:	00094000 	andeq	r4, r9, r0
      d4:	00094210 	andeq	r4, r9, r0, lsl r2
      d8:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
      dc:	00094200 	andeq	r4, r9, r0, lsl #4
      e0:	00096410 	andeq	r6, r9, r0, lsl r4
                    if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
      e4:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
      e8:	00000008 	andeq	r0, r0, r8
	...
                prvUnlockQueue( pxQueue );
      f4:	00094000 	andeq	r4, r9, r0
      f8:	00094610 	andeq	r4, r9, r0, lsl r6
                if( xTaskResumeAll() == pdFALSE )
      fc:	50000110 	andpl	r0, r0, r0, lsl r1
     100:	10000946 	andne	r0, r0, r6, asr #18
                    taskYIELD_WITHIN_API();
     104:	10000964 	andne	r0, r0, r4, ror #18
                    if( xInheritanceOccurred != pdFALSE )
     108:	01f30004 	mvnseq	r0, r4
                return errQUEUE_EMPTY;
     10c:	00009f50 	andeq	r9, r0, r0, asr pc
                        taskENTER_CRITICAL();
     110:	00000000 	andeq	r0, r0, r0
                            uxHighestWaitingPriority = prvGetDisinheritPriorityAfterTimeout( pxQueue );
     114:	00010000 	andeq	r0, r1, r0
     118:	09420000 	stmdbeq	r2, {}^	; <UNPREDICTABLE>
                            vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
     11c:	09461000 	stmdbeq	r6, {ip}^
                        taskEXIT_CRITICAL();
     120:	00021000 	andeq	r1, r2, r0
     124:	09469f30 	stmdbeq	r6, {r4, r5, r8, r9, sl, fp, ip, pc}^
     128:	09641000 	stmdbeq	r4!, {ip}^
     12c:	00011000 	andeq	r1, r1, r0
     130:	00000054 	andeq	r0, r0, r4, asr r0
     134:	00000000 	andeq	r0, r0, r0
     138:	00092800 	andeq	r2, r9, r0, lsl #16
     13c:	00092a10 	andeq	r2, r9, r0, lsl sl
     140:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
     144:	00092a00 	andeq	r2, r9, r0, lsl #20
     148:	00094010 	andeq	r4, r9, r0, lsl r0
     14c:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
     150:	00000008 	andeq	r0, r0, r8
     154:	00000000 	andeq	r0, r0, r0
     158:	00091000 	andeq	r1, r9, r0
     15c:	00091210 	andeq	r1, r9, r0, lsl r2
     160:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
     164:	00091200 	andeq	r1, r9, r0, lsl #4
     168:	00092810 	andeq	r2, r9, r0, lsl r8
     16c:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
     170:	00000008 	andeq	r0, r0, r8
     174:	00000000 	andeq	r0, r0, r0
     178:	0008f800 	andeq	pc, r8, r0, lsl #16
     17c:	0008fa10 	andeq	pc, r8, r0, lsl sl	; <UNPREDICTABLE>
     180:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
     184:	0008fa00 	andeq	pc, r8, r0, lsl #20
     188:	00091010 	andeq	r1, r9, r0, lsl r0
     18c:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
     190:	00000008 	andeq	r0, r0, r8
     194:	00000000 	andeq	r0, r0, r0
     198:	0008e000 	andeq	lr, r8, r0
     19c:	0008e210 	andeq	lr, r8, r0, lsl r2
     1a0:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
     1a4:	0008e200 	andeq	lr, r8, r0, lsl #4
     1a8:	0008f810 	andeq	pc, r8, r0, lsl r8	; <UNPREDICTABLE>
     1ac:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
     1b0:	00000008 	andeq	r0, r0, r8
     1b4:	00000000 	andeq	r0, r0, r0
     1b8:	0008c800 	andeq	ip, r8, r0, lsl #16
     1bc:	0008ca10 	andeq	ip, r8, r0, lsl sl
     1c0:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
     1c4:	0008ca00 	andeq	ip, r8, r0, lsl #20
     1c8:	0008e010 	andeq	lr, r8, r0, lsl r0
     1cc:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
     1d0:	00000008 	andeq	r0, r0, r8
     1d4:	00000000 	andeq	r0, r0, r0
     1d8:	0008ac00 	andeq	sl, r8, r0, lsl #24
     1dc:	0008ae10 	andeq	sl, r8, r0, lsl lr
     1e0:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
     1e4:	0008ae00 	andeq	sl, r8, r0, lsl #28
     1e8:	0008c810 	andeq	ip, r8, r0, lsl r8
     1ec:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
     1f0:	00000008 	andeq	r0, r0, r8
     1f4:	00000000 	andeq	r0, r0, r0
     1f8:	00084400 	andeq	r4, r8, r0, lsl #8
     1fc:	00084610 	andeq	r4, r8, r0, lsl r6
     200:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
     204:	00084600 	andeq	r4, r8, r0, lsl #12
     208:	00084810 	andeq	r4, r8, r0, lsl r8
     20c:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
     210:	0008480c 	andeq	r4, r8, ip, lsl #16
     214:	00089a10 	andeq	r9, r8, r0, lsl sl
     218:	7d000310 	stcvc	3, cr0, [r0, #-64]	; 0xffffffc0
     21c:	089a0290 	ldmeq	sl, {r4, r7, r9}
     220:	08ac1000 	stmiaeq	ip!, {ip}
     224:	00021000 	andeq	r1, r2, r0
     228:	00000c7d 	andeq	r0, r0, sp, ror ip
	...
     238:	1000085a 	andne	r0, r0, sl, asr r8
     23c:	1000085d 	andne	r0, r0, sp, asr r8
     240:	5d500001 	ldclpl	0, cr0, [r0, #-4]
     244:	76100008 	ldrvc	r0, [r0], -r8
     248:	01100008 	tsteq	r0, r8
     24c:	08785400 	ldmdaeq	r8!, {sl, ip, lr}^
     250:	08821000 	stmeq	r2, {ip}
     254:	00011000 	andeq	r1, r1, r0
     258:	00000054 	andeq	r0, r0, r4, asr r0
	...
     264:	00086000 	andeq	r6, r8, r0
     268:	00086610 	andeq	r6, r8, r0, lsl r6
     26c:	50000110 	andpl	r0, r0, r0, lsl r1
     270:	10000866 	andne	r0, r0, r6, ror #16
     274:	10000869 	andne	r0, r0, r9, ror #16
     278:	00530001 	subseq	r0, r3, r1
	...
     288:	6a000000 	bvs	290 <__STACKSEAL_SIZE+0x290>
     28c:	70100008 	andsvc	r0, r0, r8
     290:	01100008 	tsteq	r0, r8
     294:	08705000 	ldmdaeq	r0!, {ip, lr}^
     298:	08781000 	ldmdaeq	r8!, {ip}^
     29c:	00011000 	andeq	r1, r1, r0
     2a0:	00087855 	andeq	r7, r8, r5, asr r8
     2a4:	00087c10 	andeq	r7, r8, r0, lsl ip
     2a8:	50000110 	andpl	r0, r0, r0, lsl r1
     2ac:	1000087c 	andne	r0, r0, ip, ror r8
     2b0:	1000089c 	mulne	r0, ip, r8
     2b4:	00550001 	subseq	r0, r5, r1
     2b8:	00000000 	andeq	r0, r0, r0
     2bc:	02000000 	andeq	r0, r0, #0
     2c0:	74000000 	strvc	r0, [r0], #-0
     2c4:	78100008 	ldmdavc	r0, {r3}
     2c8:	02100008 	andseq	r0, r0, #8
     2cc:	829f3000 	addshi	r3, pc, #0
     2d0:	98100008 	ldmdals	r0, {r3}
     2d4:	01100008 	tsteq	r0, r8
     2d8:	00005400 	andeq	r5, r0, r0, lsl #8
	...
     2e8:	00020000 	andeq	r0, r2, r0
     2ec:	0000007d 	andeq	r0, r0, sp, ror r0
     2f0:	00000000 	andeq	r0, r0, r0
     2f4:	00020000 	andeq	r0, r2, r0
     2f8:	0000087d 	andeq	r0, r0, sp, ror r8
	...
     308:	00020000 	andeq	r0, r2, r0
     30c:	0000007d 	andeq	r0, r0, sp, ror r0
     310:	00000000 	andeq	r0, r0, r0
     314:	00020000 	andeq	r0, r2, r0
     318:	0000087d 	andeq	r0, r0, sp, ror r8
	...
     328:	00020000 	andeq	r0, r2, r0
     32c:	0000007d 	andeq	r0, r0, sp, ror r0
     330:	00000000 	andeq	r0, r0, r0
     334:	00020000 	andeq	r0, r2, r0
     338:	0000087d 	andeq	r0, r0, sp, ror r8
     33c:	00000000 	andeq	r0, r0, r0
     340:	00020000 	andeq	r0, r2, r0
     344:	00000c7d 	andeq	r0, r0, sp, ror ip
     348:	00000000 	andeq	r0, r0, r0
     34c:	00020000 	andeq	r0, r2, r0
     350:	0000287d 	andeq	r2, r0, sp, ror r8
     354:	00000000 	andeq	r0, r0, r0
     358:	00020000 	andeq	r0, r2, r0
     35c:	00000c7d 	andeq	r0, r0, sp, ror ip
     360:	00000000 	andeq	r0, r0, r0
     364:	00020000 	andeq	r0, r2, r0
     368:	0000087d 	andeq	r0, r0, sp, ror r8
     36c:	00000000 	andeq	r0, r0, r0
     370:	00020000 	andeq	r0, r2, r0
     374:	0000007d 	andeq	r0, r0, sp, ror r0
	...
     38c:	00500001 	subseq	r0, r0, r1
     390:	00000000 	andeq	r0, r0, r0
     394:	02000000 	andeq	r0, r0, #0
     398:	00549100 	subseq	r9, r4, r0, lsl #2
     39c:	00000000 	andeq	r0, r0, r0
     3a0:	04000000 	streq	r0, [r0], #-0
     3a4:	5001f300 	andpl	pc, r1, r0, lsl #6
     3a8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
     3bc:	51000100 	mrspl	r0, (UNDEF: 16)
	...
     3c8:	01f30004 	mvnseq	r0, r4
     3cc:	00009f51 	andeq	r9, r0, r1, asr pc
	...
     3e0:	00500001 	subseq	r0, r0, r1
	...
     3f0:	02000000 	andeq	r0, r0, #0
     3f4:	00007d00 	andeq	r7, r0, r0, lsl #26
     3f8:	00000000 	andeq	r0, r0, r0
     3fc:	02000000 	andeq	r0, r0, #0
     400:	00047d00 	andeq	r7, r4, r0, lsl #26
     404:	00000000 	andeq	r0, r0, r0
     408:	02000000 	andeq	r0, r0, #0
     40c:	00107d00 	andseq	r7, r0, r0, lsl #26
     410:	00000000 	andeq	r0, r0, r0
     414:	02000000 	andeq	r0, r0, #0
     418:	00047d00 	andeq	r7, r4, r0, lsl #26
	...
     430:	50000100 	andpl	r0, r0, r0, lsl #2
	...
     43c:	00510001 	subseq	r0, r1, r1
     440:	00000000 	andeq	r0, r0, r0
     444:	04000000 	streq	r0, [r0], #-0
     448:	5001f300 	andpl	pc, r1, r0, lsl #6
     44c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
     460:	01000000 	mrseq	r0, (UNDEF: 0)
     464:	00005100 	andeq	r5, r0, r0, lsl #2
     468:	00000000 	andeq	r0, r0, r0
     46c:	00010000 	andeq	r0, r1, r0
     470:	00000052 	andeq	r0, r0, r2, asr r0
     474:	00000000 	andeq	r0, r0, r0
     478:	f3000400 	vshl.u8	d0, d0, d0
     47c:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
     494:	52000100 	andpl	r0, r0, #0, 2
	...
     4a0:	00530001 	subseq	r0, r3, r1
     4a4:	00000000 	andeq	r0, r0, r0
     4a8:	04000000 	streq	r0, [r0], #-0
     4ac:	5201f300 	andpl	pc, r1, #0, 6
     4b0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
     4c0:	01000000 	mrseq	r0, (UNDEF: 0)
     4c4:	00005300 	andeq	r5, r0, r0, lsl #6
	...
     4d4:	00020000 	andeq	r0, r2, r0
     4d8:	0000007d 	andeq	r0, r0, sp, ror r0
     4dc:	00000000 	andeq	r0, r0, r0
     4e0:	00020000 	andeq	r0, r2, r0
     4e4:	0000047d 	andeq	r0, r0, sp, ror r4
     4e8:	00000000 	andeq	r0, r0, r0
     4ec:	00020000 	andeq	r0, r2, r0
     4f0:	0000187d 	andeq	r1, r0, sp, ror r8
     4f4:	00000000 	andeq	r0, r0, r0
     4f8:	00020000 	andeq	r0, r2, r0
     4fc:	0000047d 	andeq	r0, r0, sp, ror r4
	...
     514:	00500001 	subseq	r0, r0, r1
     518:	00000000 	andeq	r0, r0, r0
     51c:	01000000 	mrseq	r0, (UNDEF: 0)
     520:	00005300 	andeq	r5, r0, r0, lsl #6
     524:	00000000 	andeq	r0, r0, r0
     528:	00040000 	andeq	r0, r4, r0
     52c:	9f5001f3 	svcls	0x005001f3
	...
     540:	00010000 	andeq	r0, r1, r0
     544:	00000051 	andeq	r0, r0, r1, asr r0
	...
     554:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
     560:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     564:	00000008 	andeq	r0, r0, r8
     568:	00000000 	andeq	r0, r0, r0
     56c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     570:	00000010 	andeq	r0, r0, r0, lsl r0
     574:	00000000 	andeq	r0, r0, r0
     578:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     57c:	00000020 	andeq	r0, r0, r0, lsr #32
     580:	00000000 	andeq	r0, r0, r0
     584:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     588:	00000010 	andeq	r0, r0, r0, lsl r0
     58c:	00000000 	andeq	r0, r0, r0
     590:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     594:	00000008 	andeq	r0, r0, r8
     598:	00000000 	andeq	r0, r0, r0
     59c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
     5b4:	01000000 	mrseq	r0, (UNDEF: 0)
     5b8:	00005000 	andeq	r5, r0, r0
     5bc:	00000000 	andeq	r0, r0, r0
     5c0:	00010000 	andeq	r0, r1, r0
     5c4:	00000051 	andeq	r0, r0, r1, asr r0
     5c8:	00000000 	andeq	r0, r0, r0
     5cc:	f3000400 	vshl.u8	d0, d0, d0
     5d0:	009f5001 	addseq	r5, pc, r1
	...
     5e8:	51000100 	mrspl	r0, (UNDEF: 16)
	...
     5f4:	00520001 	subseq	r0, r2, r1
     5f8:	00000000 	andeq	r0, r0, r0
     5fc:	04000000 	streq	r0, [r0], #-0
     600:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
     604:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
     614:	01000000 	mrseq	r0, (UNDEF: 0)
     618:	00005000 	andeq	r5, r0, r0
	...
     628:	00020000 	andeq	r0, r2, r0
     62c:	0000007d 	andeq	r0, r0, sp, ror r0
     630:	00000000 	andeq	r0, r0, r0
     634:	00020000 	andeq	r0, r2, r0
     638:	00000c7d 	andeq	r0, r0, sp, ror ip
     63c:	00000000 	andeq	r0, r0, r0
     640:	00020000 	andeq	r0, r2, r0
     644:	0000107d 	andeq	r1, r0, sp, ror r0
     648:	00000000 	andeq	r0, r0, r0
     64c:	00020000 	andeq	r0, r2, r0
     650:	0000207d 	andeq	r2, r0, sp, ror r0
     654:	00000000 	andeq	r0, r0, r0
     658:	00020000 	andeq	r0, r2, r0
     65c:	0000107d 	andeq	r1, r0, sp, ror r0
     660:	00000000 	andeq	r0, r0, r0
     664:	00020000 	andeq	r0, r2, r0
     668:	00000c7d 	andeq	r0, r0, sp, ror ip
     66c:	00000000 	andeq	r0, r0, r0
     670:	00020000 	andeq	r0, r2, r0
     674:	0000007d 	andeq	r0, r0, sp, ror r0
	...
     68c:	00500001 	subseq	r0, r0, r1
     690:	00000000 	andeq	r0, r0, r0
     694:	01000000 	mrseq	r0, (UNDEF: 0)
     698:	00005100 	andeq	r5, r0, r0, lsl #2
     69c:	00000000 	andeq	r0, r0, r0
     6a0:	00040000 	andeq	r0, r4, r0
     6a4:	9f5001f3 	svcls	0x005001f3
	...
     6b8:	00010000 	andeq	r0, r1, r0
     6bc:	00000050 	andeq	r0, r0, r0, asr r0
     6c0:	00000000 	andeq	r0, r0, r0
     6c4:	001b0c00 	andseq	r0, fp, r0, lsl #24
     6c8:	001b0e10 	andseq	r0, fp, r0, lsl lr
     6cc:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
     6d0:	001b0e00 	andseq	r0, fp, r0, lsl #28
     6d4:	001b1010 	andseq	r1, fp, r0, lsl r0
     6d8:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
     6dc:	001b1010 	andseq	r1, fp, r0, lsl r0
     6e0:	001b1210 	andseq	r1, fp, r0, lsl r2
     6e4:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
     6e8:	001b1214 	andseq	r1, fp, r4, lsl r2
     6ec:	001b2a10 	andseq	r2, fp, r0, lsl sl
     6f0:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
     6f4:	001b2a28 	andseq	r2, fp, r8, lsr #20
     6f8:	001b2e10 	andseq	r2, fp, r0, lsl lr
     6fc:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
     700:	001b2e14 	andseq	r2, fp, r4, lsl lr
     704:	001b3010 	andseq	r3, fp, r0, lsl r0
     708:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
     70c:	001b3010 	andseq	r3, fp, r0, lsl r0
     710:	001b3810 	andseq	r3, fp, r0, lsl r8
     714:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
	...
     720:	28000000 	stmdacs	r0, {}	; <UNPREDICTABLE>
     724:	3810001b 	ldmdacc	r0, {r0, r1, r3, r4}
     728:	0110001b 	tsteq	r0, fp, lsl r0
     72c:	00005000 	andeq	r5, r0, r0
     730:	00000000 	andeq	r0, r0, r0
     734:	14800000 	strne	r0, [r0], #0
     738:	14841000 	strne	r1, [r4], #0
     73c:	00021000 	andeq	r1, r2, r0
     740:	1484007d 	strne	r0, [r4], #125	; 0x7d
     744:	14861000 	strne	r1, [r6], #0
     748:	00021000 	andeq	r1, r2, r0
     74c:	1486247d 	strne	r2, [r6], #1149	; 0x47d
     750:	1af61000 	bne	ffd84758 <__StackTop+0xc7c84758>
     754:	00031000 	andeq	r1, r3, r0
     758:	f600e07d 			; <UNDEFINED> instruction: 0xf600e07d
     75c:	0010001a 	andseq	r0, r0, sl, lsl r0
     760:	0210001b 	andseq	r0, r0, #27
     764:	00247d00 	eoreq	r7, r4, r0, lsl #26
	...
     774:	80000000 	andhi	r0, r0, r0
     778:	94100014 	ldrls	r0, [r0], #-20	; 0xffffffec
     77c:	01100014 	tsteq	r0, r4, lsl r0
     780:	14965000 	ldrne	r5, [r6], #0
     784:	1adc1000 	bne	ff70478c <__StackTop+0xc760478c>
     788:	00011000 	andeq	r1, r1, r0
     78c:	001adc57 	andseq	sp, sl, r7, asr ip
     790:	001ae010 	andseq	lr, sl, r0, lsl r0
     794:	50000110 	andpl	r0, r0, r0, lsl r1
     798:	10001ae0 	andne	r1, r0, r0, ror #21
     79c:	10001afa 	strdne	r1, [r0], -sl
     7a0:	00570001 	subseq	r0, r7, r1
	...
     7b4:	00148000 	andseq	r8, r4, r0
     7b8:	00149610 	andseq	r9, r4, r0, lsl r6
     7bc:	51000110 	tstpl	r0, r0, lsl r1
     7c0:	10001496 	mulne	r0, r6, r4
     7c4:	10001adc 	ldrdne	r1, [r0], -ip
     7c8:	dc580001 	mrrcle	0, 0, r0, r8, cr1
     7cc:	e010001a 	ands	r0, r0, sl, lsl r0
     7d0:	0110001a 	tsteq	r0, sl, lsl r0
     7d4:	1ae05100 	bne	ff814bdc <__StackTop+0xc7714bdc>
     7d8:	1afa1000 	bne	ffe847e0 <__StackTop+0xc7d847e0>
     7dc:	00011000 	andeq	r1, r1, r0
     7e0:	001afa58 	andseq	pc, sl, r8, asr sl	; <UNPREDICTABLE>
     7e4:	001b0010 	andseq	r0, fp, r0, lsl r0
     7e8:	f3000410 	vqshl.u8	d0, d0, d0
     7ec:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
     808:	00148000 	andseq	r8, r4, r0
     80c:	00149610 	andseq	r9, r4, r0, lsl r6
     810:	52000110 	andpl	r0, r0, #16, 2
     814:	10001496 	mulne	r0, r6, r4
     818:	100019fe 	strdne	r1, [r0], -lr
     81c:	fe560001 	cdp2	0, 5, cr0, cr6, cr1, {0}
     820:	00100019 	andseq	r0, r0, r9, lsl r0
     824:	0110001a 	tsteq	r0, sl, lsl r0
     828:	1a005b00 	bne	17430 <__HEAP_SIZE+0x16430>
     82c:	1a2a1000 	bne	a84834 <__RAM_SIZE+0x984834>
     830:	00011000 	andeq	r1, r1, r0
     834:	001a2a56 	andseq	r2, sl, r6, asr sl
     838:	001a5410 	andseq	r5, sl, r0, lsl r4
     83c:	5b000110 	blpl	c84 <__Vectors_Size+0x4c4>
     840:	10001a54 	andne	r1, r0, r4, asr sl
     844:	10001adc 	ldrdne	r1, [r0], -ip
     848:	dc560001 	mrrcle	0, 0, r0, r6, cr1
     84c:	e010001a 	ands	r0, r0, sl, lsl r0
     850:	0110001a 	tsteq	r0, sl, lsl r0
     854:	1ae05200 	bne	ff81505c <__StackTop+0xc771505c>
     858:	1afa1000 	bne	ffe84860 <__StackTop+0xc7d84860>
     85c:	00011000 	andeq	r1, r1, r0
     860:	001afa56 	andseq	pc, sl, r6, asr sl	; <UNPREDICTABLE>
     864:	001b0010 	andseq	r0, fp, r0, lsl r0
     868:	f3000410 	vqshl.u8	d0, d0, d0
     86c:	009f5201 	addseq	r5, pc, r1, lsl #4
	...
     878:	80000000 	andhi	r0, r0, r0
     87c:	96100014 			; <UNDEFINED> instruction: 0x96100014
     880:	01100014 	tsteq	r0, r4, lsl r0
     884:	1adc5300 	bne	ff71548c <__StackTop+0xc761548c>
     888:	1ae01000 	bne	ff804890 <__StackTop+0xc7704890>
     88c:	00011000 	andeq	r1, r1, r0
     890:	00000053 	andeq	r0, r0, r3, asr r0
     894:	00000000 	andeq	r0, r0, r0
     898:	00000100 	andeq	r0, r0, r0, lsl #2
	...
     8b0:	0014bc00 	andseq	fp, r4, r0, lsl #24
     8b4:	0014be10 	andseq	fp, r4, r0, lsl lr
     8b8:	30000210 	andcc	r0, r0, r0, lsl r2
     8bc:	0014be9f 	mulseq	r4, pc, lr	; <UNPREDICTABLE>
     8c0:	0015bc10 	andseq	fp, r5, r0, lsl ip
     8c4:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
     8c8:	100015bc 			; <UNDEFINED> instruction: 0x100015bc
     8cc:	100015ce 	andne	r1, r0, lr, asr #11
     8d0:	ce510001 	cdpgt	0, 5, cr0, cr1, cr1, {0}
     8d4:	d8100015 	ldmdale	r0, {r0, r2, r4}
     8d8:	01100015 	tsteq	r0, r5, lsl r0
     8dc:	15d85500 	ldrbne	r5, [r8, #1280]	; 0x500
     8e0:	15ea1000 	strbne	r1, [sl, #0]!
     8e4:	00011000 	andeq	r1, r1, r0
     8e8:	0015ea51 	andseq	lr, r5, r1, asr sl
     8ec:	00179810 	andseq	r9, r7, r0, lsl r8
     8f0:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
     8f4:	100017a0 	andne	r1, r0, r0, lsr #15
     8f8:	100017bc 			; <UNDEFINED> instruction: 0x100017bc
     8fc:	bc550001 	mrrclt	0, 0, r0, r5, cr1
     900:	db100017 	blle	400964 <__RAM_SIZE+0x300964>
     904:	02100017 	andseq	r0, r0, #23
     908:	e0409100 	sub	r9, r0, r0, lsl #2
     90c:	44100017 	ldrmi	r0, [r0], #-23	; 0xffffffe9
     910:	01100019 	tsteq	r0, r9, lsl r0
     914:	19b25500 	ldmibne	r2!, {r8, sl, ip, lr}
     918:	1a0c1000 	bne	304920 <__RAM_SIZE+0x204920>
     91c:	00011000 	andeq	r1, r1, r0
     920:	001a7c55 	andseq	r7, sl, r5, asr ip
     924:	001ab410 	andseq	fp, sl, r0, lsl r4
     928:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
     92c:	10001ac8 	andne	r1, r0, r8, asr #21
     930:	10001aca 	andne	r1, r0, sl, asr #21
     934:	00550001 	subseq	r0, r5, r1
     938:	00000000 	andeq	r0, r0, r0
     93c:	02000000 	andeq	r0, r0, #0
	...
     950:	00000202 	andeq	r0, r0, r2, lsl #4
     954:	0014e000 	andseq	lr, r4, r0
     958:	0014f210 	andseq	pc, r4, r0, lsl r2	; <UNPREDICTABLE>
     95c:	30000210 	andcc	r0, r0, r0, lsl r2
     960:	0014f29f 	mulseq	r4, pc, r2	; <UNPREDICTABLE>
     964:	00151f10 	andseq	r1, r5, r0, lsl pc
     968:	91000210 	tstls	r0, r0, lsl r2
     96c:	00155248 	andseq	r5, r5, r8, asr #4
     970:	00155a10 	andseq	r5, r5, r0, lsl sl
     974:	30000210 	andcc	r0, r0, r0, lsl r2
     978:	00155a9f 	mulseq	r5, pc, sl	; <UNPREDICTABLE>
     97c:	00155c10 	andseq	r5, r5, r0, lsl ip
     980:	50000110 	andpl	r0, r0, r0, lsl r1
     984:	1000155c 	andne	r1, r0, ip, asr r5
     988:	1000156a 	andne	r1, r0, sl, ror #10
     98c:	9f300002 	svcls	0x00300002
     990:	1000156a 	andne	r1, r0, sl, ror #10
     994:	10001572 	andne	r1, r0, r2, ror r5
     998:	48910002 	ldmmi	r1, {r1}
     99c:	10001572 	andne	r1, r0, r2, ror r5
     9a0:	1000157a 	andne	r1, r0, sl, ror r5
     9a4:	9f300002 	svcls	0x00300002
     9a8:	1000157a 	andne	r1, r0, sl, ror r5
     9ac:	1000157c 	andne	r1, r0, ip, ror r5
     9b0:	7c530001 	mrrcvc	0, 0, r0, r3, cr1
     9b4:	7c100015 	ldcvc	0, cr0, [r0], {21}
     9b8:	0210001a 	andseq	r0, r0, #26
     9bc:	7c489100 	stfvcp	f1, [r8], {-0}
     9c0:	b210001a 	andslt	r0, r0, #26
     9c4:	0210001a 	andseq	r0, r0, #26
     9c8:	b29f3800 	addslt	r3, pc, #0, 16
     9cc:	dc10001a 	ldcle	0, cr0, [r0], {26}
     9d0:	0210001a 	andseq	r0, r0, #26
     9d4:	00489100 	subeq	r9, r8, r0, lsl #2
     9d8:	00000000 	andeq	r0, r0, r0
     9dc:	01000000 	mrseq	r0, (UNDEF: 0)
	...
     9fc:	0014f200 	andseq	pc, r4, r0, lsl #4
     a00:	0014fe10 	andseq	pc, r4, r0, lsl lr	; <UNPREDICTABLE>
     a04:	30000210 	andcc	r0, r0, r0, lsl r2
     a08:	0014fe9f 	mulseq	r4, pc, lr	; <UNPREDICTABLE>
     a0c:	00151f10 	andseq	r1, r5, r0, lsl pc
     a10:	5b000110 	blpl	e58 <__Vectors_Size+0x698>
     a14:	1000157c 	andne	r1, r0, ip, ror r5
     a18:	100015a2 	andne	r1, r0, r2, lsr #11
     a1c:	9f300002 	svcls	0x00300002
     a20:	100015a2 	andne	r1, r0, r2, lsr #11
     a24:	100015a4 	andne	r1, r0, r4, lsr #11
     a28:	a4500001 	ldrbge	r0, [r0], #-1
     a2c:	b0100015 	andslt	r0, r0, r5, lsl r0
     a30:	02100015 	andseq	r0, r0, #21
     a34:	b09f3000 	addslt	r3, pc, r0
     a38:	4a100015 	bmi	400a94 <__RAM_SIZE+0x300a94>
     a3c:	01100019 	tsteq	r0, r9, lsl r0
     a40:	19865b00 	stmibne	r6, {r8, r9, fp, ip, lr}
     a44:	198c1000 	stmibne	ip, {ip}
     a48:	00011000 	andeq	r1, r1, r0
     a4c:	0019b25b 	andseq	fp, r9, fp, asr r2
     a50:	0019fc10 	andseq	pc, r9, r0, lsl ip	; <UNPREDICTABLE>
     a54:	5b000110 	blpl	e9c <__Vectors_Size+0x6dc>
     a58:	100019fc 	strdne	r1, [r0], -ip
     a5c:	10001a00 	andne	r1, r0, r0, lsl #20
     a60:	00540001 	subseq	r0, r4, r1
     a64:	2810001a 	ldmdacs	r0, {r1, r3, r4}
     a68:	0110001a 	tsteq	r0, sl, lsl r0
     a6c:	1a285b00 	bne	a17674 <__RAM_SIZE+0x917674>
     a70:	1a2c1000 	bne	b04a78 <__RAM_SIZE+0xa04a78>
     a74:	00011000 	andeq	r1, r1, r0
     a78:	001a2c54 	andseq	r2, sl, r4, asr ip
     a7c:	001a2e10 	andseq	r2, sl, r0, lsl lr
     a80:	53000110 	movwpl	r0, #272	; 0x110
     a84:	10001a2e 	andne	r1, r0, lr, lsr #20
     a88:	10001a48 	andne	r1, r0, r8, asr #20
     a8c:	48540001 	ldmdami	r4, {r0}^
     a90:	4c10001a 	ldcmi	0, cr0, [r0], {26}
     a94:	0110001a 	tsteq	r0, sl, lsl r0
     a98:	1a7c5300 	bne	1f156a0 <__RAM_SIZE+0x1e156a0>
     a9c:	1adc1000 	bne	ff704aa4 <__StackTop+0xc7604aa4>
     aa0:	00011000 	andeq	r1, r1, r0
     aa4:	0000005b 	andeq	r0, r0, fp, asr r0
     aa8:	00000000 	andeq	r0, r0, r0
     aac:	01000000 	mrseq	r0, (UNDEF: 0)
     ab0:	01000100 	mrseq	r0, (UNDEF: 16)
     ab4:	01000100 	mrseq	r0, (UNDEF: 16)
     ab8:	e0000000 	and	r0, r0, r0
     abc:	1f100014 	svcne	0x00100014
     ac0:	02100015 	andseq	r0, r0, #21
     ac4:	289f3000 	ldmcs	pc, {ip, sp}	; <UNPREDICTABLE>
     ac8:	2a100015 	bcs	400b24 <__RAM_SIZE+0x300b24>
     acc:	02100015 	andseq	r0, r0, #21
     ad0:	329f3100 	addscc	r3, pc, #0, 2
     ad4:	34100015 	ldrcc	r0, [r0], #-21	; 0xffffffeb
     ad8:	02100015 	andseq	r0, r0, #21
     adc:	3c9f3100 	ldfccs	f3, [pc], {0}
     ae0:	3e100015 	mrccc	0, 0, r0, cr0, cr5, {0}
     ae4:	02100015 	andseq	r0, r0, #21
     ae8:	469f3100 	ldrmi	r3, [pc], r0, lsl #2
     aec:	48100015 	ldmdami	r0, {r0, r2, r4}
     af0:	02100015 	andseq	r0, r0, #21
     af4:	509f3100 	addspl	r3, pc, r0, lsl #2
     af8:	52100015 	andspl	r0, r0, #21
     afc:	02100015 	andseq	r0, r0, #21
     b00:	529f3100 	addspl	r3, pc, #0, 2
     b04:	dc100015 	ldcle	0, cr0, [r0], {21}
     b08:	0210001a 	andseq	r0, r0, #26
     b0c:	009f3000 	addseq	r3, pc, r0
     b10:	00000000 	andeq	r0, r0, r0
     b14:	02000000 	andeq	r0, r0, #0
	...
     b74:	8c000000 	stchi	0, cr0, [r0], {-0}
     b78:	96100014 			; <UNDEFINED> instruction: 0x96100014
     b7c:	02100014 	andseq	r0, r0, #20
     b80:	969f3000 	ldrls	r3, [pc], r0
     b84:	a6100014 			; <UNDEFINED> instruction: 0xa6100014
     b88:	01100014 	tsteq	r0, r4, lsl r0
     b8c:	14a65400 	strtne	r5, [r6], #1024	; 0x400
     b90:	14b81000 	ldrtne	r1, [r8], #0
     b94:	00011000 	andeq	r1, r1, r0
     b98:	0014b855 	andseq	fp, r4, r5, asr r8
     b9c:	00174210 	andseq	r4, r7, r0, lsl r2
     ba0:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
     ba4:	10001742 	andne	r1, r0, r2, asr #14
     ba8:	10001744 	andne	r1, r0, r4, asr #14
     bac:	44500001 	ldrbmi	r0, [r0], #-1
     bb0:	98100017 	ldmdals	r0, {r0, r1, r2, r4}
     bb4:	01100017 	tsteq	r0, r7, lsl r0
     bb8:	17985400 	ldrne	r5, [r8, r0, lsl #8]
     bbc:	17a01000 	strne	r1, [r0, r0]!
     bc0:	00011000 	andeq	r1, r1, r0
     bc4:	0017a050 	andseq	sl, r7, r0, asr r0
     bc8:	0017de10 	andseq	sp, r7, r0, lsl lr
     bcc:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
     bd0:	100017de 	ldrdne	r1, [r0], -lr
     bd4:	100017e0 	andne	r1, r0, r0, ror #15
     bd8:	e0500001 	subs	r0, r0, r1
     bdc:	18100017 	ldmdane	r0, {r0, r1, r2, r4}
     be0:	01100018 	tsteq	r0, r8, lsl r0
     be4:	18185400 	ldmdane	r8, {sl, ip, lr}
     be8:	181a1000 	ldmdane	sl, {ip}
     bec:	00011000 	andeq	r1, r1, r0
     bf0:	00181a50 	andseq	r1, r8, r0, asr sl
     bf4:	00186c10 	andseq	r6, r8, r0, lsl ip
     bf8:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
     bfc:	1000186c 	andne	r1, r0, ip, ror #16
     c00:	1000186e 	andne	r1, r0, lr, ror #16
     c04:	6e500001 	cdpvs	0, 5, cr0, cr0, cr1, {0}
     c08:	96100018 			; <UNDEFINED> instruction: 0x96100018
     c0c:	01100018 	tsteq	r0, r8, lsl r0
     c10:	18965400 	ldmne	r6, {sl, ip, lr}
     c14:	18981000 	ldmne	r8, {ip}
     c18:	00011000 	andeq	r1, r1, r0
     c1c:	00189850 	andseq	r9, r8, r0, asr r8
     c20:	0018e410 	andseq	lr, r8, r0, lsl r4
     c24:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
     c28:	100018e4 	andne	r1, r0, r4, ror #17
     c2c:	100018ec 	andne	r1, r0, ip, ror #17
     c30:	ec500001 	mrrc	0, 0, r0, r0, cr1	; <UNPREDICTABLE>
     c34:	38100018 	ldmdacc	r0, {r3, r4}
     c38:	01100019 	tsteq	r0, r9, lsl r0
     c3c:	19385400 	ldmdbne	r8!, {sl, ip, lr}
     c40:	19401000 	stmdbne	r0, {ip}^
     c44:	00011000 	andeq	r1, r1, r0
     c48:	00194050 	andseq	r4, r9, r0, asr r0
     c4c:	00195410 	andseq	r5, r9, r0, lsl r4
     c50:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
     c54:	10001954 	andne	r1, r0, r4, asr r9
     c58:	1000196a 	andne	r1, r0, sl, ror #18
     c5c:	6a5a0001 	bvs	1680c68 <__RAM_SIZE+0x1580c68>
     c60:	6e100019 	mrcvs	0, 0, r0, cr0, cr9, {0}
     c64:	01100019 	tsteq	r0, r9, lsl r0
     c68:	196e5200 	stmdbne	lr!, {r9, ip, lr}^
     c6c:	197a1000 	ldmdbne	sl!, {ip}^
     c70:	00011000 	andeq	r1, r1, r0
     c74:	00197a5a 	andseq	r7, r9, sl, asr sl
     c78:	00198610 	andseq	r8, r9, r0, lsl r6
     c7c:	52000110 	andpl	r0, r0, #16, 2
     c80:	10001986 	andne	r1, r0, r6, lsl #19
     c84:	10001990 	mulne	r0, r0, r9
     c88:	90540001 	subsls	r0, r4, r1
     c8c:	96100019 			; <UNDEFINED> instruction: 0x96100019
     c90:	01100019 	tsteq	r0, r9, lsl r0
     c94:	19965a00 	ldmibne	r6, {r9, fp, ip, lr}
     c98:	199a1000 	ldmibne	sl, {ip}
     c9c:	00011000 	andeq	r1, r1, r0
     ca0:	00199a52 	andseq	r9, r9, r2, asr sl
     ca4:	0019a610 	andseq	sl, r9, r0, lsl r6
     ca8:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
     cac:	100019a6 	andne	r1, r0, r6, lsr #19
     cb0:	100019b2 			; <UNDEFINED> instruction: 0x100019b2
     cb4:	b2520001 	subslt	r0, r2, #1
     cb8:	fa100019 	blx	400d24 <__RAM_SIZE+0x300d24>
     cbc:	01100019 	tsteq	r0, r9, lsl r0
     cc0:	19fa5400 	ldmibne	sl!, {sl, ip, lr}^
     cc4:	1a001000 	bne	4ccc <__HEAP_SIZE+0x3ccc>
     cc8:	00011000 	andeq	r1, r1, r0
     ccc:	001a0052 	andseq	r0, sl, r2, asr r0
     cd0:	001a0810 	andseq	r0, sl, r0, lsl r8
     cd4:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
     cd8:	10001a08 	andne	r1, r0, r8, lsl #20
     cdc:	10001a10 	andne	r1, r0, r0, lsl sl
     ce0:	10520001 	subsne	r0, r2, r1
     ce4:	1c10001a 	ldcne	0, cr0, [r0], {26}
     ce8:	0110001a 	tsteq	r0, sl, lsl r0
     cec:	1a1c5900 	bne	7170f4 <__RAM_SIZE+0x6170f4>
     cf0:	1a341000 	bne	d04cf8 <__RAM_SIZE+0xc04cf8>
     cf4:	00011000 	andeq	r1, r1, r0
     cf8:	001a3452 	andseq	r3, sl, r2, asr r4
     cfc:	001a3c10 	andseq	r3, sl, r0, lsl ip
     d00:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
     d04:	10001a3c 	andne	r1, r0, ip, lsr sl
     d08:	10001a64 	andne	r1, r0, r4, ror #20
     d0c:	64520001 	ldrbvs	r0, [r2], #-1
     d10:	7010001a 	andsvc	r0, r0, sl, lsl r0
     d14:	0110001a 	tsteq	r0, sl, lsl r0
     d18:	1a705500 	bne	1c16120 <__RAM_SIZE+0x1b16120>
     d1c:	1a7c1000 	bne	1f04d24 <__RAM_SIZE+0x1e04d24>
     d20:	00011000 	andeq	r1, r1, r0
     d24:	001a7c52 	andseq	r7, sl, r2, asr ip
     d28:	001aaa10 	andseq	sl, sl, r0, lsl sl
     d2c:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
     d30:	10001aaa 	andne	r1, r0, sl, lsr #21
     d34:	10001ab2 			; <UNDEFINED> instruction: 0x10001ab2
     d38:	b2500001 	subslt	r0, r0, #1
     d3c:	b410001a 	ldrlt	r0, [r0], #-26	; 0xffffffe6
     d40:	0110001a 	tsteq	r0, sl, lsl r0
     d44:	1ab45400 	bne	fed15d4c <__StackTop+0xc6c15d4c>
     d48:	1ac81000 	bne	ff204d50 <__StackTop+0xc7104d50>
     d4c:	00011000 	andeq	r1, r1, r0
     d50:	001ac855 	andseq	ip, sl, r5, asr r8
     d54:	001aca10 	andseq	ip, sl, r0, lsl sl
     d58:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
     d5c:	10001aca 	andne	r1, r0, sl, asr #21
     d60:	10001adc 	ldrdne	r1, [r0], -ip
     d64:	dc550001 	mrrcle	0, 0, r0, r5, cr1
     d68:	e010001a 	ands	r0, r0, sl, lsl r0
     d6c:	0210001a 	andseq	r0, r0, #26
     d70:	e09f3000 	adds	r3, pc, r0
     d74:	fa10001a 	blx	400de4 <__RAM_SIZE+0x300de4>
     d78:	0110001a 	tsteq	r0, sl, lsl r0
     d7c:	1afa5400 	bne	ffe95d84 <__StackTop+0xc7d95d84>
     d80:	1b001000 	blne	4d88 <__HEAP_SIZE+0x3d88>
     d84:	00011000 	andeq	r1, r1, r0
     d88:	00000050 	andeq	r0, r0, r0, asr r0
     d8c:	00000000 	andeq	r0, r0, r0
     d90:	00000100 	andeq	r0, r0, r0, lsl #2
	...
     dac:	0016d600 	andseq	sp, r6, r0, lsl #12
     db0:	0016de10 	andseq	sp, r6, r0, lsl lr
     db4:	3a000210 	bcc	15fc <__HEAP_SIZE+0x5fc>
     db8:	0016e09f 	mulseq	r6, pc, r0	; <UNPREDICTABLE>
     dbc:	00173010 	andseq	r3, r7, r0, lsl r0
     dc0:	53000110 	movwpl	r0, #272	; 0x110
     dc4:	10001730 	andne	r1, r0, r0, lsr r7
     dc8:	1000173f 	andne	r1, r0, pc, lsr r7
     dcc:	a8910003 	ldmge	r1, {r0, r1}
     dd0:	0017507f 	andseq	r5, r7, pc, ror r0
     dd4:	00178c10 	andseq	r8, r7, r0, lsl ip
     dd8:	53000110 	movwpl	r0, #272	; 0x110
     ddc:	1000178c 	andne	r1, r0, ip, lsl #15
     de0:	10001795 	mulne	r0, r5, r7
     de4:	a8910003 	ldmge	r1, {r0, r1}
     de8:	0017a07f 	andseq	sl, r7, pc, ror r0
     dec:	0017c610 	andseq	ip, r7, r0, lsl r6
     df0:	53000110 	movwpl	r0, #272	; 0x110
     df4:	100017c6 	andne	r1, r0, r6, asr #15
     df8:	100017db 	ldrdne	r1, [r0], -fp
     dfc:	b0910003 	addslt	r0, r1, r3
     e00:	0017e07f 	andseq	lr, r7, pc, ror r0
     e04:	00180c10 	andseq	r0, r8, r0, lsl ip
     e08:	53000110 	movwpl	r0, #272	; 0x110
     e0c:	1000180c 	andne	r1, r0, ip, lsl #16
     e10:	10001815 	andne	r1, r0, r5, lsl r8
     e14:	a8910003 	ldmge	r1, {r0, r1}
     e18:	00181a7f 	andseq	r1, r8, pc, ror sl
     e1c:	00186010 	andseq	r6, r8, r0, lsl r0
     e20:	53000110 	movwpl	r0, #272	; 0x110
     e24:	10001860 	andne	r1, r0, r0, ror #16
     e28:	10001869 	andne	r1, r0, r9, ror #16
     e2c:	b0910003 	addslt	r0, r1, r3
     e30:	00186e7f 	andseq	r6, r8, pc, ror lr
     e34:	00188210 	andseq	r8, r8, r0, lsl r2
     e38:	53000110 	movwpl	r0, #272	; 0x110
     e3c:	10001882 	andne	r1, r0, r2, lsl #17
     e40:	10001893 	mulne	r0, r3, r8
     e44:	a8910003 	ldmge	r1, {r0, r1}
     e48:	0018987f 	andseq	r9, r8, pc, ror r8
     e4c:	0018b210 	andseq	fp, r8, r0, lsl r2
     e50:	53000110 	movwpl	r0, #272	; 0x110
	...
     e5c:	17700000 	ldrbne	r0, [r0, -r0]!
     e60:	17861000 	strne	r1, [r6, r0]
     e64:	00011000 	andeq	r1, r1, r0
     e68:	00000052 	andeq	r0, r0, r2, asr r0
	...
     e74:	00172200 	andseq	r2, r7, r0, lsl #4
     e78:	00173810 	andseq	r3, r7, r0, lsl r8
     e7c:	52000110 	andpl	r0, r0, #16, 2
     e80:	10001738 	andne	r1, r0, r8, lsr r7
     e84:	1000173f 	andne	r1, r0, pc, lsr r7
     e88:	007d0002 	rsbseq	r0, sp, r2
	...
     e94:	00000001 	andeq	r0, r0, r1
	...
     ea8:	10001940 	andne	r1, r0, r0, asr #18
     eac:	1000194a 	andne	r1, r0, sl, asr #18
     eb0:	9f310002 	svcls	0x00310002
     eb4:	1000194a 	andne	r1, r0, sl, asr #18
     eb8:	10001960 	andne	r1, r0, r0, ror #18
     ebc:	6a590001 	bvs	1640ec8 <__RAM_SIZE+0x1540ec8>
     ec0:	7a100019 	bvc	400f2c <__RAM_SIZE+0x300f2c>
     ec4:	01100019 	tsteq	r0, r9, lsl r0
     ec8:	197a5900 	ldmdbne	sl!, {r8, fp, ip, lr}^
     ecc:	197e1000 	ldmdbne	lr!, {ip}^
     ed0:	00011000 	andeq	r1, r1, r0
     ed4:	00197e53 	andseq	r7, r9, r3, asr lr
     ed8:	00198610 	andseq	r8, r9, r0, lsl r6
     edc:	59000110 	stmdbpl	r0, {r4, r8}
     ee0:	10001986 	andne	r1, r0, r6, lsl #19
     ee4:	10001990 	mulne	r0, r0, r9
     ee8:	9f310002 	svcls	0x00310002
     eec:	10001990 	mulne	r0, r0, r9
     ef0:	10001998 	mulne	r0, r8, r9
     ef4:	98590001 	ldmdals	r9, {r0}^
     ef8:	a6100019 			; <UNDEFINED> instruction: 0xa6100019
     efc:	01100019 	tsteq	r0, r9, lsl r0
     f00:	19a65400 	stmibne	r6!, {sl, ip, lr}
     f04:	19aa1000 	stmibne	sl!, {ip}
     f08:	00011000 	andeq	r1, r1, r0
     f0c:	0019aa59 	andseq	sl, r9, r9, asr sl
     f10:	0019b210 	andseq	fp, r9, r0, lsl r2
     f14:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
	...
     f24:	10001a2c 	andne	r1, r0, ip, lsr #20
     f28:	10001a54 	andne	r1, r0, r4, asr sl
     f2c:	5c5a0001 	mrrcpl	0, 0, r0, sl, cr1
     f30:	6010001a 	andsvs	r0, r0, sl, lsl r0
     f34:	0110001a 	tsteq	r0, sl, lsl r0
     f38:	00005a00 	andeq	r5, r0, r0, lsl #20
	...
     f58:	100019e0 	andne	r1, r0, r0, ror #19
     f5c:	10001a00 	andne	r1, r0, r0, lsl #20
     f60:	04590001 	ldrbeq	r0, [r9], #-1
     f64:	0c10001a 	ldceq	0, cr0, [r0], {26}
     f68:	0110001a 	tsteq	r0, sl, lsl r0
     f6c:	1a0c5900 	bne	317374 <__RAM_SIZE+0x217374>
     f70:	1a1c1000 	bne	704f78 <__RAM_SIZE+0x604f78>
     f74:	00011000 	andeq	r1, r1, r0
     f78:	001a1c55 	andseq	r1, sl, r5, asr ip
     f7c:	001a1e10 	andseq	r1, sl, r0, lsl lr
     f80:	53000110 	movwpl	r0, #272	; 0x110
     f84:	10001a1e 	andne	r1, r0, lr, lsl sl
     f88:	10001a2c 	andne	r1, r0, ip, lsr #20
     f8c:	2c550001 	mrrccs	0, 0, r0, r5, cr1
     f90:	5410001a 	ldrpl	r0, [r0], #-26	; 0xffffffe6
     f94:	0110001a 	tsteq	r0, sl, lsl r0
     f98:	1a5c5900 	bne	17173a0 <__RAM_SIZE+0x16173a0>
     f9c:	1a621000 	bne	1884fa4 <__RAM_SIZE+0x1784fa4>
     fa0:	00011000 	andeq	r1, r1, r0
     fa4:	001a6259 	andseq	r6, sl, r9, asr r2
     fa8:	001a7010 	andseq	r7, sl, r0, lsl r0
     fac:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
     fb0:	10001a70 	andne	r1, r0, r0, ror sl
     fb4:	10001a74 	andne	r1, r0, r4, ror sl
     fb8:	74590001 	ldrbvc	r0, [r9], #-1
     fbc:	7a10001a 	bvc	40102c <__RAM_SIZE+0x30102c>
     fc0:	0110001a 	tsteq	r0, sl, lsl r0
     fc4:	1a7a5400 	bne	1e95fcc <__RAM_SIZE+0x1d95fcc>
     fc8:	1a7c1000 	bne	1f04fd0 <__RAM_SIZE+0x1e04fd0>
     fcc:	00031000 	andeq	r1, r3, r0
     fd0:	009f0179 	addseq	r0, pc, r9, ror r1	; <UNPREDICTABLE>
	...
     fe0:	0019ca00 	andseq	ip, r9, r0, lsl #20
     fe4:	0019d010 	andseq	sp, r9, r0, lsl r0
     fe8:	52000110 	andpl	r0, r0, #16, 2
     fec:	100019d0 	ldrdne	r1, [r0], -r0
     ff0:	100019d8 	ldrdne	r1, [r0], -r8
     ff4:	d8530001 	ldmdale	r3, {r0}^
     ff8:	dc100019 	ldcle	0, cr0, [r0], {25}
     ffc:	01100019 	tsteq	r0, r9, lsl r0
    1000:	00005200 	andeq	r5, r0, r0, lsl #4
	...
    100c:	100019ca 	andne	r1, r0, sl, asr #19
    1010:	100019e0 	andne	r1, r0, r0, ror #19
    1014:	00590001 	subseq	r0, r9, r1
    1018:	00000000 	andeq	r0, r0, r0
    101c:	01000000 	mrseq	r0, (UNDEF: 0)
    1020:	001a8000 	andseq	r8, sl, r0
    1024:	001ab210 	andseq	fp, sl, r0, lsl r2
    1028:	30000210 	andcc	r0, r0, r0, lsl r2
    102c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    1030:	00000000 	andeq	r0, r0, r0
    1034:	e0000300 	and	r0, r0, r0, lsl #6
    1038:	e6100014 			; <UNDEFINED> instruction: 0xe6100014
    103c:	01100014 	tsteq	r0, r4, lsl r0
    1040:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    104c:	10001586 	andne	r1, r0, r6, lsl #11
    1050:	1000158c 	andne	r1, r0, ip, lsl #11
    1054:	00520001 	subseq	r0, r2, r1
    1058:	00000000 	andeq	r0, r0, r0
    105c:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
    1060:	fc10000c 	ldc2	0, cr0, [r0], {12}
    1064:	0210000c 	andseq	r0, r0, #12
    1068:	fc007d00 	vdot.bf16	d7, d0, d0
    106c:	0010000c 	andseq	r0, r0, ip
    1070:	0210000d 	andseq	r0, r0, #13
    1074:	00247d00 	eoreq	r7, r4, r0, lsl #26
    1078:	0210000d 	andseq	r0, r0, #13
    107c:	0210000d 	andseq	r0, r0, #13
    1080:	022c7d00 	eoreq	r7, ip, #0, 26
    1084:	4c10000d 	ldcmi	0, cr0, [r0], {13}
    1088:	0310000f 	tsteq	r0, #15
    108c:	00f07d00 	rscseq	r7, r0, r0, lsl #26
    1090:	10000f4c 	andne	r0, r0, ip, asr #30
    1094:	10000f50 	andne	r0, r0, r0, asr pc
    1098:	2c7d0002 	ldclcs	0, cr0, [sp], #-8
    109c:	10000f50 	andne	r0, r0, r0, asr pc
    10a0:	10000f54 	andne	r0, r0, r4, asr pc
    10a4:	247d0002 	ldrbtcs	r0, [sp], #-2
    10a8:	10000f54 	andne	r0, r0, r4, asr pc
    10ac:	100010e2 	andne	r1, r0, r2, ror #1
    10b0:	f07d0003 			; <UNDEFINED> instruction: 0xf07d0003
	...
    10c0:	000cf800 	andeq	pc, ip, r0, lsl #16
    10c4:	000d1010 	andeq	r1, sp, r0, lsl r0
    10c8:	50000110 	andpl	r0, r0, r0, lsl r1
    10cc:	10000d10 	andne	r0, r0, r0, lsl sp
    10d0:	100010e2 	andne	r1, r0, r2, ror #1
    10d4:	005a0001 	subseq	r0, sl, r1
	...
    10e0:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
    10e4:	1210000c 	andsne	r0, r0, #12
    10e8:	0110000d 	tsteq	r0, sp
    10ec:	0d125100 	ldfeqs	f5, [r2, #-0]
    10f0:	10e21000 	rscne	r1, r2, r0
    10f4:	00011000 	andeq	r1, r1, r0
    10f8:	00000054 	andeq	r0, r0, r4, asr r0
	...
    1114:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
    1118:	0e10000c 	cdpeq	0, 1, cr0, cr0, cr12, {0}
    111c:	0110000d 	tsteq	r0, sp
    1120:	0d0e5200 	sfmeq	f5, 4, [lr, #-0]
    1124:	0f4a1000 	svceq	0x004a1000
    1128:	00011000 	andeq	r1, r1, r0
    112c:	000f545b 	andeq	r5, pc, fp, asr r4	; <UNPREDICTABLE>
    1130:	00105c10 	andseq	r5, r0, r0, lsl ip
    1134:	5b000110 	blpl	157c <__HEAP_SIZE+0x57c>
    1138:	1000105c 	andne	r1, r0, ip, asr r0
    113c:	10001072 	andne	r1, r0, r2, ror r0
    1140:	72500001 	subsvc	r0, r0, #1
    1144:	a6100010 			; <UNDEFINED> instruction: 0xa6100010
    1148:	01100010 	tsteq	r0, r0, lsl r0
    114c:	10a65800 	adcne	r5, r6, r0, lsl #16
    1150:	10b41000 	adcsne	r1, r4, r0
    1154:	00011000 	andeq	r1, r1, r0
    1158:	0010b450 	andseq	fp, r0, r0, asr r4
    115c:	0010c410 	andseq	ip, r0, r0, lsl r4
    1160:	5b000110 	blpl	15a8 <__HEAP_SIZE+0x5a8>
    1164:	100010c4 	andne	r1, r0, r4, asr #1
    1168:	100010ca 	andne	r1, r0, sl, asr #1
    116c:	ca500001 	bgt	1401178 <__RAM_SIZE+0x1301178>
    1170:	cc100010 	ldcgt	0, cr0, [r0], {16}
    1174:	01100010 	tsteq	r0, r0, lsl r0
    1178:	10cc5200 	sbcne	r5, ip, r0, lsl #4
    117c:	10d61000 	sbcsne	r1, r6, r0
    1180:	00011000 	andeq	r1, r1, r0
    1184:	0010d656 	andseq	sp, r0, r6, asr r6
    1188:	0010e210 	andseq	lr, r0, r0, lsl r2
    118c:	52000110 	andpl	r0, r0, #16, 2
	...
    119c:	10000cf8 	strdne	r0, [r0], -r8
    11a0:	10000d15 	andne	r0, r0, r5, lsl sp
    11a4:	15530001 	ldrbne	r0, [r3, #-1]
    11a8:	e210000d 	ands	r0, r0, #13
    11ac:	01100010 	tsteq	r0, r0, lsl r0
    11b0:	00005500 	andeq	r5, r0, r0, lsl #10
	...
    11c4:	0cf80000 	ldcleq	0, cr0, [r8]
    11c8:	0d601000 	stcleq	0, cr1, [r0, #-0]
    11cc:	00021000 	andeq	r1, r2, r0
    11d0:	0d600091 	stcleq	0, cr0, [r0, #-580]!	; 0xfffffdbc
    11d4:	0f2a1000 	svceq	0x002a1000
    11d8:	00031000 	andeq	r1, r3, r0
    11dc:	2a7fa891 	bcs	1feb428 <__RAM_SIZE+0x1eeb428>
    11e0:	4a10000f 	bmi	401224 <__RAM_SIZE+0x301224>
    11e4:	0210000f 	andseq	r0, r0, #15
    11e8:	54009100 	strpl	r9, [r0], #-256	; 0xffffff00
    11ec:	6810000f 	ldmdavs	r0, {r0, r1, r2, r3}
    11f0:	0210000f 	andseq	r0, r0, #15
    11f4:	68009100 	stmdavs	r0, {r8, ip, pc}
    11f8:	3810000f 	ldmdacc	r0, {r0, r1, r2, r3}
    11fc:	03100010 	tsteq	r0, #16
    1200:	7fa89100 	svcvc	0x00a89100
    1204:	100010b4 	strhne	r1, [r0], -r4
    1208:	100010c2 	andne	r1, r0, r2, asr #1
    120c:	a8910003 	ldmge	r1, {r0, r1}
    1210:	0000007f 	andeq	r0, r0, pc, ror r0
	...
    1224:	000cf800 	andeq	pc, ip, r0, lsl #16
    1228:	000d6e10 	andeq	r6, sp, r0, lsl lr
    122c:	91000210 	tstls	r0, r0, lsl r2
    1230:	000d6e08 	andeq	r6, sp, r8, lsl #28
    1234:	000f2810 	andeq	r2, pc, r0, lsl r8	; <UNPREDICTABLE>
    1238:	91000210 	tstls	r0, r0, lsl r2
    123c:	000f2808 	andeq	r2, pc, r8, lsl #16
    1240:	000f2a10 	andeq	r2, pc, r0, lsl sl	; <UNPREDICTABLE>
    1244:	53000110 	movwpl	r0, #272	; 0x110
    1248:	10000f2a 	andne	r0, r0, sl, lsr #30
    124c:	10000f9c 	mulne	r0, ip, pc	; <UNPREDICTABLE>
    1250:	08910002 	ldmeq	r1, {r1}
    1254:	10000f9c 	mulne	r0, ip, pc	; <UNPREDICTABLE>
    1258:	10001004 	andne	r1, r0, r4
    125c:	04530001 	ldrbeq	r0, [r3], #-1
    1260:	e2100010 	ands	r0, r0, #16
    1264:	02100010 	andseq	r0, r0, #16
    1268:	00089100 	andeq	r9, r8, r0, lsl #2
	...
    1274:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
    1278:	5410000c 	ldrpl	r0, [r0], #-12
    127c:	0210000f 	andseq	r0, r0, #15
    1280:	540c9100 	strpl	r9, [ip], #-256	; 0xffffff00
    1284:	e210000f 	ands	r0, r0, #15
    1288:	02100010 	andseq	r0, r0, #16
    128c:	000c9100 	andeq	r9, ip, r0, lsl #2
	...
    129c:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
    12a0:	5410000c 	ldrpl	r0, [r0], #-12
    12a4:	0210000f 	andseq	r0, r0, #15
    12a8:	54109100 	ldrpl	r9, [r0], #-256	; 0xffffff00
    12ac:	7a10000f 	bvc	4012f0 <__RAM_SIZE+0x3012f0>
    12b0:	0210000f 	andseq	r0, r0, #15
    12b4:	7a109100 	bvc	4256bc <__RAM_SIZE+0x3256bc>
    12b8:	7e10000f 	cdpvc	0, 1, cr0, cr0, cr15, {0}
    12bc:	0110000f 	tsteq	r0, pc
    12c0:	0f7e5300 	svceq	0x007e5300
    12c4:	10e21000 	rscne	r1, r2, r0
    12c8:	00021000 	andeq	r1, r2, r0
    12cc:	00001091 	muleq	r0, r1, r0
    12d0:	00000000 	andeq	r0, r0, r0
    12d4:	00010000 	andeq	r0, r1, r0
    12d8:	0d460000 	stcleq	0, cr0, [r6, #-0]
    12dc:	0f2a1000 	svceq	0x002a1000
    12e0:	00121000 	andseq	r1, r2, r0
    12e4:	08f60091 	ldmeq	r6!, {r0, r4, r7}^
    12e8:	0829f429 	stmdaeq	r9!, {r0, r3, r5, sl, ip, sp, lr, pc}
	...
    12f4:	0f549f2d 	svceq	0x00549f2d
    12f8:	10e21000 	rscne	r1, r2, r0
    12fc:	00121000 	andseq	r1, r2, r0
    1300:	08f60091 	ldmeq	r6!, {r0, r4, r7}^
    1304:	0829f429 	stmdaeq	r9!, {r0, r3, r5, sl, ip, sp, lr, pc}
	...
    1310:	00009f2d 	andeq	r9, r0, sp, lsr #30
	...
    131c:	0f4a0001 	svceq	0x004a0001
    1320:	0f501000 	svceq	0x00501000
    1324:	00081000 	andeq	r1, r8, r0
    1328:	04935090 	ldreq	r5, [r3], #144	; 0x90
    132c:	04935190 	ldreq	r5, [r3], #400	; 0x190
    1330:	10001018 	andne	r1, r0, r8, lsl r0
    1334:	100010e2 	andne	r1, r0, r2, ror #1
    1338:	50900008 	addspl	r0, r0, r8
    133c:	51900493 			; <UNDEFINED> instruction: 0x51900493
    1340:	00000493 	muleq	r0, r3, r4
	...
    1354:	0d780000 	ldcleq	0, cr0, [r8, #-0]
    1358:	0d8a1000 	stceq	0, cr1, [sl]
    135c:	00041000 	andeq	r1, r4, r0
    1360:	9f788170 	svcls	0x00788170
    1364:	10000d8a 	andne	r0, r0, sl, lsl #27
    1368:	10000d8d 	andne	r0, r0, sp, lsl #27
    136c:	ee500001 	cdp	0, 5, cr0, cr0, cr1, {0}
    1370:	f610000d 			; <UNDEFINED> instruction: 0xf610000d
    1374:	0110000d 	tsteq	r0, sp
    1378:	0df65000 	ldcleq	0, cr5, [r6]
    137c:	0e301000 	cdpeq	0, 3, cr1, cr0, cr0, {0}
    1380:	00011000 	andeq	r1, r1, r0
    1384:	000e3057 	andeq	r3, lr, r7, asr r0
    1388:	000eec10 	andeq	lr, lr, r0, lsl ip
    138c:	77000410 	smladvc	r0, r0, r4, r0
    1390:	6a9f7881 	bvs	fe7df59c <__StackTop+0xc66df59c>
    1394:	6c10000f 	ldcvs	0, cr0, [r0], {15}
    1398:	0410000f 	ldreq	r0, [r0], #-15
    139c:	78817700 	stmvc	r1, {r8, r9, sl, ip, sp, lr}
    13a0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    13ac:	02000000 	andeq	r0, r0, #0
    13b0:	ce000000 	cdpgt	0, 0, cr0, cr0, cr0, {0}
    13b4:	d110000d 	tstle	r0, sp
    13b8:	0110000d 	tsteq	r0, sp
    13bc:	0dd15000 	ldcleq	0, cr5, [r1]
    13c0:	0f241000 	svceq	0x00241000
    13c4:	00011000 	andeq	r1, r1, r0
    13c8:	000f6a56 	andeq	r6, pc, r6, asr sl	; <UNPREDICTABLE>
    13cc:	000f7210 	andeq	r7, pc, r0, lsl r2	; <UNPREDICTABLE>
    13d0:	56000110 			; <UNDEFINED> instruction: 0x56000110
    13d4:	10000f7a 	andne	r0, r0, sl, ror pc
    13d8:	10000f7e 	andne	r0, r0, lr, ror pc
    13dc:	9f300002 	svcls	0x00300002
    13e0:	10000f7e 	andne	r0, r0, lr, ror pc
    13e4:	100010ca 	andne	r1, r0, sl, asr #1
    13e8:	00560001 	subseq	r0, r6, r1
	...
    13f4:	000e2000 	andeq	r2, lr, r0
    13f8:	000e6010 	andeq	r6, lr, r0, lsl r0
    13fc:	58000610 	stmdapl	r0, {r4, r9, sl}
    1400:	93590493 	cmpls	r9, #-1828716544	; 0x93000000
    1404:	00000004 	andeq	r0, r0, r4
	...
    1410:	2c000000 	stccs	0, cr0, [r0], {-0}
    1414:	4610000e 	ldrmi	r0, [r0], -lr
    1418:	0610000e 	ldreq	r0, [r0], -lr
    141c:	04935000 	ldreq	r5, [r3], #0
    1420:	46049351 			; <UNDEFINED> instruction: 0x46049351
    1424:	2a10000e 	bcs	401464 <__RAM_SIZE+0x301464>
    1428:	0310000f 	tsteq	r0, #15
    142c:	7fb89100 	svcvc	0x00b89100
    1430:	10000f6a 	andne	r0, r0, sl, ror #30
    1434:	100010e2 	andne	r1, r0, r2, ror #1
    1438:	b8910003 	ldmlt	r1, {r0, r1}
    143c:	0000007f 	andeq	r0, r0, pc, ror r0
	...
    1448:	00000101 	andeq	r0, r0, r1, lsl #2
    144c:	00000000 	andeq	r0, r0, r0
    1450:	000eec00 	andeq	lr, lr, r0, lsl #24
    1454:	000f2a10 	andeq	r2, pc, r0, lsl sl	; <UNPREDICTABLE>
    1458:	57000110 	smladpl	r0, r0, r1, r0
    145c:	10000f6e 	andne	r0, r0, lr, ror #30
    1460:	10000f7a 	andne	r0, r0, sl, ror pc
    1464:	7a570001 	bvc	15c1470 <__RAM_SIZE+0x14c1470>
    1468:	7e10000f 	cdpvc	0, 1, cr0, cr0, cr15, {0}
    146c:	0210000f 	andseq	r0, r0, #15
    1470:	7e9f3000 	cdpvc	0, 9, cr3, cr15, cr0, {0}
    1474:	8a10000f 	bhi	4014b8 <__RAM_SIZE+0x3014b8>
    1478:	01100010 	tsteq	r0, r0, lsl r0
    147c:	108a5700 	addne	r5, sl, r0, lsl #14
    1480:	10b21000 	adcsne	r1, r2, r0
    1484:	00031000 	andeq	r1, r3, r0
    1488:	b49f0177 	ldrlt	r0, [pc], #375	; 1490 <__HEAP_SIZE+0x490>
    148c:	ca100010 	bgt	4014d4 <__RAM_SIZE+0x3014d4>
    1490:	01100010 	tsteq	r0, r0, lsl r0
    1494:	00005700 	andeq	r5, r0, r0, lsl #14
    1498:	00000000 	andeq	r0, r0, r0
    149c:	00010000 	andeq	r0, r1, r0
	...
    14a8:	10000f7e 	andne	r0, r0, lr, ror pc
    14ac:	10000f88 	andne	r0, r0, r8, lsl #31
    14b0:	0c910002 	ldceq	0, cr0, [r1], {2}
    14b4:	10000f88 	andne	r0, r0, r8, lsl #31
    14b8:	10000f8a 	andne	r0, r0, sl, lsl #31
    14bc:	04580001 	ldrbeq	r0, [r8], #-1
    14c0:	08100010 	ldmdaeq	r0, {r4}
    14c4:	01100010 	tsteq	r0, r0, lsl r0
    14c8:	10085300 	andne	r5, r8, r0, lsl #6
    14cc:	10721000 	rsbsne	r1, r2, r0
    14d0:	00011000 	andeq	r1, r1, r0
    14d4:	0010b458 	andseq	fp, r0, r8, asr r4
    14d8:	0010ca10 	andseq	ip, r0, r0, lsl sl
    14dc:	58000110 	stmdapl	r0, {r4, r8}
	...
    14e8:	10280001 	eorne	r0, r8, r1
    14ec:	10e21000 	rscne	r1, r2, r0
    14f0:	00011000 	andeq	r1, r1, r0
    14f4:	0000005b 	andeq	r0, r0, fp, asr r0
    14f8:	00000000 	andeq	r0, r0, r0
    14fc:	0010e800 	andseq	lr, r0, r0, lsl #16
    1500:	0010ec10 	andseq	lr, r0, r0, lsl ip
    1504:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    1508:	0010ec00 	andseq	lr, r0, r0, lsl #24
    150c:	0010f010 	andseq	pc, r0, r0, lsl r0	; <UNPREDICTABLE>
    1510:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    1514:	0010f024 	andseq	pc, r0, r4, lsr #32
    1518:	0010f210 	andseq	pc, r0, r0, lsl r2	; <UNPREDICTABLE>
    151c:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    1520:	0010f22c 	andseq	pc, r0, ip, lsr #4
    1524:	00140c10 	andseq	r0, r4, r0, lsl ip
    1528:	7d000310 	stcvc	3, cr0, [r0, #-64]	; 0xffffffc0
    152c:	140c0180 	strne	r0, [ip], #-384	; 0xfffffe80
    1530:	14101000 	ldrne	r1, [r0], #-0
    1534:	00021000 	andeq	r1, r2, r0
    1538:	14102c7d 	ldrne	r2, [r0], #-3197	; 0xfffff383
    153c:	14141000 	ldrne	r1, [r4], #-0
    1540:	00021000 	andeq	r1, r2, r0
    1544:	1414247d 	ldrne	r2, [r4], #-1149	; 0xfffffb83
    1548:	147e1000 	ldrbtne	r1, [lr], #-0
    154c:	00031000 	andeq	r1, r3, r0
    1550:	0001807d 	andeq	r8, r1, sp, ror r0
	...
    155c:	e8000000 	stmda	r0, {}	; <UNPREDICTABLE>
    1560:	06100010 			; <UNDEFINED> instruction: 0x06100010
    1564:	01100011 	tsteq	r0, r1, lsl r0
    1568:	11065000 	mrsne	r5, (UNDEF: 6)
    156c:	147e1000 	ldrbtne	r1, [lr], #-0
    1570:	00031000 	andeq	r1, r3, r0
    1574:	007f9c91 			; <UNDEFINED> instruction: 0x007f9c91
	...
    1580:	e8000000 	stmda	r0, {}	; <UNPREDICTABLE>
    1584:	08100010 	ldmdaeq	r0, {r4}
    1588:	01100011 	tsteq	r0, r1, lsl r0
    158c:	11085100 	mrsne	r5, (UNDEF: 24)
    1590:	147e1000 	ldrbtne	r1, [lr], #-0
    1594:	00031000 	andeq	r1, r3, r0
    1598:	007fa891 			; <UNDEFINED> instruction: 0x007fa891
	...
    15a4:	e8000000 	stmda	r0, {}	; <UNPREDICTABLE>
    15a8:	02100010 	andseq	r0, r0, #16
    15ac:	01100011 	tsteq	r0, r1, lsl r0
    15b0:	11025200 	mrsne	r5, R10_usr
    15b4:	147e1000 	ldrbtne	r1, [lr], #-0
    15b8:	00011000 	andeq	r1, r1, r0
    15bc:	0000005a 	andeq	r0, r0, sl, asr r0
	...
    15c8:	0010e800 	andseq	lr, r0, r0, lsl #16
    15cc:	00110410 	andseq	r0, r1, r0, lsl r4
    15d0:	53000110 	movwpl	r0, #272	; 0x110
    15d4:	10001104 	andne	r1, r0, r4, lsl #2
    15d8:	1000147e 	andne	r1, r0, lr, ror r4
    15dc:	005b0001 	subseq	r0, fp, r1
	...
    15f0:	0010e800 	andseq	lr, r0, r0, lsl #16
    15f4:	00116e10 	andseq	r6, r1, r0, lsl lr
    15f8:	91000210 	tstls	r0, r0, lsl r2
    15fc:	00116e00 	andseq	r6, r1, r0, lsl #28
    1600:	00119210 	andseq	r9, r1, r0, lsl r2
    1604:	58000610 	stmdapl	r0, {r4, r9, sl}
    1608:	93590493 	cmpls	r9, #-1828716544	; 0x93000000
    160c:	00119204 	andseq	r9, r1, r4, lsl #4
    1610:	00122a10 	andseq	r2, r2, r0, lsl sl
    1614:	91000210 	tstls	r0, r0, lsl r2
    1618:	00122a00 	andseq	r2, r2, r0, lsl #20
    161c:	0012c210 	andseq	ip, r2, r0, lsl r2
    1620:	58000610 	stmdapl	r0, {r4, r9, sl}
    1624:	93590493 	cmpls	r9, #-1828716544	; 0x93000000
    1628:	0012e604 	andseq	lr, r2, r4, lsl #12
    162c:	00136210 	andseq	r6, r3, r0, lsl r2
    1630:	58000610 	stmdapl	r0, {r4, r9, sl}
    1634:	93590493 	cmpls	r9, #-1828716544	; 0x93000000
    1638:	00000004 	andeq	r0, r0, r4
	...
    1648:	0010e800 	andseq	lr, r0, r0, lsl #16
    164c:	00117610 	andseq	r7, r1, r0, lsl r6
    1650:	91000210 	tstls	r0, r0, lsl r2
    1654:	00117808 	andseq	r7, r1, r8, lsl #16
    1658:	00119210 	andseq	r9, r1, r0, lsl r2
    165c:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
    1660:	10001192 	mulne	r0, r2, r1
    1664:	10001234 	andne	r1, r0, r4, lsr r2
    1668:	08910002 	ldmeq	r1, {r1}
    166c:	10001234 	andne	r1, r0, r4, lsr r2
    1670:	10001302 	andne	r1, r0, r2, lsl #6
    1674:	00550001 	subseq	r0, r5, r1
	...
    1688:	0010e800 	andseq	lr, r0, r0, lsl #16
    168c:	0013d810 	andseq	sp, r3, r0, lsl r8
    1690:	91000210 	tstls	r0, r0, lsl r2
    1694:	0013d80c 	andseq	sp, r3, ip, lsl #16
    1698:	00142a10 	andseq	r2, r4, r0, lsl sl
    169c:	91000210 	tstls	r0, r0, lsl r2
    16a0:	00142a0c 	andseq	r2, r4, ip, lsl #20
    16a4:	00142e10 	andseq	r2, r4, r0, lsl lr
    16a8:	53000110 	movwpl	r0, #272	; 0x110
    16ac:	1000142e 	andne	r1, r0, lr, lsr #8
    16b0:	10001446 	andne	r1, r0, r6, asr #8
    16b4:	46510001 	ldrbmi	r0, [r1], -r1
    16b8:	7e100014 	mrcvc	0, 0, r0, cr0, cr4, {0}
    16bc:	02100014 	andseq	r0, r0, #20
    16c0:	000c9100 	andeq	r9, ip, r0, lsl #2
	...
    16cc:	e8000000 	stmda	r0, {}	; <UNPREDICTABLE>
    16d0:	14100010 	ldrne	r0, [r0], #-16
    16d4:	02100014 	andseq	r0, r0, #20
    16d8:	14109100 	ldrne	r9, [r0], #-256	; 0xffffff00
    16dc:	7e100014 	mrcvc	0, 0, r0, cr0, cr4, {0}
    16e0:	02100014 	andseq	r0, r0, #20
    16e4:	00109100 	andseq	r9, r0, r0, lsl #2
    16e8:	00000000 	andeq	r0, r0, r0
    16ec:	02000000 	andeq	r0, r0, #0
    16f0:	01010000 	mrseq	r0, (UNDEF: 1)
	...
    16fc:	01010000 	mrseq	r0, (UNDEF: 1)
    1700:	01010000 	mrseq	r0, (UNDEF: 1)
    1704:	00000000 	andeq	r0, r0, r0
    1708:	01010000 	mrseq	r0, (UNDEF: 1)
    170c:	00000000 	andeq	r0, r0, r0
    1710:	00000101 	andeq	r0, r0, r1, lsl #2
    1714:	00000101 	andeq	r0, r0, r1, lsl #2
    1718:	00000101 	andeq	r0, r0, r1, lsl #2
    171c:	00110000 	andseq	r0, r1, r0
    1720:	00117810 	andseq	r7, r1, r0, lsl r8
    1724:	30000210 	andcc	r0, r0, r0, lsl r2
    1728:	0011789f 	mulseq	r1, pc, r8	; <UNPREDICTABLE>
    172c:	00118010 	andseq	r8, r1, r0, lsl r0
    1730:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    1734:	10001180 	andne	r1, r0, r0, lsl #3
    1738:	10001190 	mulne	r0, r0, r1
    173c:	01740003 	cmneq	r4, r3
    1740:	0011909f 	mulseq	r1, pc, r0	; <UNPREDICTABLE>
    1744:	00119210 	andseq	r9, r1, r0, lsl r2
    1748:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    174c:	10001192 	mulne	r0, r2, r1
    1750:	10001234 	andne	r1, r0, r4, lsr r2
    1754:	9f300002 	svcls	0x00300002
    1758:	10001234 	andne	r1, r0, r4, lsr r2
    175c:	1000131c 	andne	r1, r0, ip, lsl r3
    1760:	1c540001 	mrrcne	0, 0, r0, r4, cr1
    1764:	36100013 			; <UNDEFINED> instruction: 0x36100013
    1768:	01100013 	tsteq	r0, r3, lsl r0
    176c:	13365200 	teqne	r6, #0, 4
    1770:	133e1000 	teqne	lr, #0
    1774:	00011000 	andeq	r1, r1, r0
    1778:	00133e54 	andseq	r3, r3, r4, asr lr
    177c:	00134e10 	andseq	r4, r3, r0, lsl lr
    1780:	74000310 	strvc	r0, [r0], #-784	; 0xfffffcf0
    1784:	134e9f01 	movtne	r9, #61185	; 0xef01
    1788:	13541000 	cmpne	r4, #0
    178c:	00011000 	andeq	r1, r1, r0
    1790:	00135454 	andseq	r5, r3, r4, asr r4
    1794:	00136210 	andseq	r6, r3, r0, lsl r2
    1798:	74000310 	strvc	r0, [r0], #-784	; 0xfffffcf0
    179c:	13629f01 	cmnne	r2, #1, 30
    17a0:	137e1000 	cmnne	lr, #0
    17a4:	00011000 	andeq	r1, r1, r0
    17a8:	00137e54 	andseq	r7, r3, r4, asr lr
    17ac:	0013ce10 	andseq	ip, r3, r0, lsl lr
    17b0:	51000110 	tstpl	r0, r0, lsl r1
    17b4:	100013ce 	andne	r1, r0, lr, asr #7
    17b8:	100013e2 	andne	r1, r0, r2, ror #7
    17bc:	e2540001 	subs	r0, r4, #1
    17c0:	f0100013 			; <UNDEFINED> instruction: 0xf0100013
    17c4:	03100013 	tsteq	r0, #19
    17c8:	9f017400 	svcls	0x00017400
    17cc:	100013f0 	strdne	r1, [r0], -r0
    17d0:	1000140a 	andne	r1, r0, sl, lsl #8
    17d4:	14540001 	ldrbne	r0, [r4], #-1
    17d8:	2e100014 	mrccs	0, 0, r0, cr0, cr4, {0}
    17dc:	01100014 	tsteq	r0, r4, lsl r0
    17e0:	142e5400 	strtne	r5, [lr], #-1024	; 0xfffffc00
    17e4:	143c1000 	ldrtne	r1, [ip], #-0
    17e8:	00031000 	andeq	r1, r3, r0
    17ec:	3c9f0174 	ldfccs	f0, [pc], {116}	; 0x74
    17f0:	56100014 			; <UNDEFINED> instruction: 0x56100014
    17f4:	01100014 	tsteq	r0, r4, lsl r0
    17f8:	14565400 	ldrbne	r5, [r6], #-1024	; 0xfffffc00
    17fc:	14641000 	strbtne	r1, [r4], #-0
    1800:	00031000 	andeq	r1, r3, r0
    1804:	649f0174 	ldrvs	r0, [pc], #372	; 180c <__HEAP_SIZE+0x80c>
    1808:	6e100014 	mrcvs	0, 0, r0, cr0, cr4, {0}
    180c:	01100014 	tsteq	r0, r4, lsl r0
    1810:	146e5400 	strbtne	r5, [lr], #-1024	; 0xfffffc00
    1814:	147c1000 	ldrbtne	r1, [ip], #-0
    1818:	00031000 	andeq	r1, r3, r0
    181c:	7c9f0174 	ldfvcs	f0, [pc], {116}	; 0x74
    1820:	7e100014 	mrcvc	0, 0, r0, cr0, cr4, {0}
    1824:	01100014 	tsteq	r0, r4, lsl r0
    1828:	00005400 	andeq	r5, r0, r0, lsl #8
    182c:	00000000 	andeq	r0, r0, r0
    1830:	00030000 	andeq	r0, r3, r0
	...
    183c:	10001100 	andne	r1, r0, r0, lsl #2
    1840:	10001286 	andne	r1, r0, r6, lsl #5
    1844:	089e000a 	ldmeq	lr, {r1, r3}
	...
    1850:	10001286 	andne	r1, r0, r6, lsl #5
    1854:	10001288 	andne	r1, r0, r8, lsl #5
    1858:	93520006 	cmpls	r2, #6
    185c:	04935304 	ldreq	r5, [r3], #772	; 0x304
    1860:	10001288 	andne	r1, r0, r8, lsl #5
    1864:	100012c2 	andne	r1, r0, r2, asr #5
    1868:	a0910003 	addsge	r0, r1, r3
    186c:	0012c27f 	andseq	ip, r2, pc, ror r2
    1870:	0012e610 	andseq	lr, r2, r0, lsl r6
    1874:	57000610 	smladpl	r0, r0, r6, r0
    1878:	93580493 	cmpls	r8, #-1828716544	; 0x93000000
    187c:	0012e604 	andseq	lr, r2, r4, lsl #12
    1880:	00136210 	andseq	r6, r3, r0, lsl r2
    1884:	91000310 	tstls	r0, r0, lsl r3
    1888:	00007fa0 	andeq	r7, r0, r0, lsr #31
    188c:	00000000 	andeq	r0, r0, r0
    1890:	00010000 	andeq	r0, r1, r0
    1894:	01000000 	mrseq	r0, (UNDEF: 0)
    1898:	00000001 	andeq	r0, r0, r1
    189c:	115a0000 	cmpne	sl, r0
    18a0:	116e1000 	cmnne	lr, r0
    18a4:	00021000 	andeq	r1, r2, r0
    18a8:	116e9f30 	cmnne	lr, r0, lsr pc
    18ac:	11921000 	orrsne	r1, r2, r0
    18b0:	00031000 	andeq	r1, r3, r0
    18b4:	1a7fac91 	bne	1fecb00 <__RAM_SIZE+0x1eecb00>
    18b8:	1a100012 	bne	401908 <__RAM_SIZE+0x301908>
    18bc:	02100012 	andseq	r0, r0, #18
    18c0:	1a9f3000 	bne	fe7cd8c8 <__StackTop+0xc66cd8c8>
    18c4:	30100012 	andscc	r0, r0, r2, lsl r0
    18c8:	02100012 	andseq	r0, r0, #18
    18cc:	309f3100 	addscc	r3, pc, r0, lsl #2
    18d0:	0a100012 	beq	401920 <__RAM_SIZE+0x301920>
    18d4:	03100014 	tsteq	r0, #20
    18d8:	7fac9100 	svcvc	0x00ac9100
    18dc:	10001414 	andne	r1, r0, r4, lsl r4
    18e0:	1000147e 	andne	r1, r0, lr, ror r4
    18e4:	ac910003 	ldcge	0, cr0, [r1], {3}
    18e8:	0000007f 	andeq	r0, r0, pc, ror r0
	...
    18f8:	3e000000 	cdpcc	0, 0, cr0, cr0, cr0, {0}
    18fc:	41100012 	tstmi	r0, r2, lsl r0
    1900:	01100012 	tsteq	r0, r2, lsl r0
    1904:	12415000 	subne	r5, r1, #0
    1908:	138e1000 	orrne	r1, lr, #0
    190c:	00011000 	andeq	r1, r1, r0
    1910:	00138e56 	andseq	r8, r3, r6, asr lr
    1914:	0013ce10 	andseq	ip, r3, r0, lsl lr
    1918:	52000110 	andpl	r0, r0, #16, 2
    191c:	100013ce 	andne	r1, r0, lr, asr #7
    1920:	1000140a 	andne	r1, r0, sl, lsl #8
    1924:	14560001 	ldrbne	r0, [r6], #-1
    1928:	7e100014 	mrcvc	0, 0, r0, cr0, cr4, {0}
    192c:	01100014 	tsteq	r0, r4, lsl r0
    1930:	00005600 	andeq	r5, r0, r0, lsl #12
	...
    193c:	12680000 	rsbne	r0, r8, #0
    1940:	126b1000 	rsbne	r1, fp, #0
    1944:	00061000 	andeq	r1, r6, r0
    1948:	53049352 	movwpl	r9, #17234	; 0x4352
    194c:	126b0493 	rsbne	r0, fp, #-1828716544	; 0x93000000
    1950:	12861000 	addne	r1, r6, #0
    1954:	00031000 	andeq	r1, r3, r0
    1958:	007fa091 			; <UNDEFINED> instruction: 0x007fa091
	...
    1964:	01010000 	mrseq	r0, (UNDEF: 1)
    1968:	00000000 	andeq	r0, r0, r0
    196c:	6e000101 	adfvss	f0, f0, f1
    1970:	71100012 	tstvc	r0, r2, lsl r0
    1974:	01100012 	tsteq	r0, r2, lsl r0
    1978:	12715000 	rsbsne	r5, r1, #0
    197c:	12a61000 	adcne	r1, r6, #0
    1980:	00011000 	andeq	r1, r1, r0
    1984:	0012a657 	andseq	sl, r2, r7, asr r6
    1988:	0012aa10 	andseq	sl, r2, r0, lsl sl
    198c:	30000210 	andcc	r0, r0, r0, lsl r2
    1990:	0012aa9f 	mulseq	r2, pc, sl	; <UNPREDICTABLE>
    1994:	0012c010 	andseq	ip, r2, r0, lsl r0
    1998:	57000110 	smladpl	r0, r0, r1, r0
    199c:	100012e6 	andne	r1, r0, r6, ror #5
    19a0:	1000132a 	andne	r1, r0, sl, lsr #6
    19a4:	2a570001 	bcs	15c19b0 <__RAM_SIZE+0x14c19b0>
    19a8:	36100013 			; <UNDEFINED> instruction: 0x36100013
    19ac:	01100013 	tsteq	r0, r3, lsl r0
    19b0:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    19bc:	13020000 	movwne	r0, #8192	; 0x2000
    19c0:	133c1000 	teqne	ip, #0
    19c4:	00011000 	andeq	r1, r1, r0
    19c8:	00133c55 	andseq	r3, r3, r5, asr ip
    19cc:	00135010 	andseq	r5, r3, r0, lsl r0
    19d0:	53000110 	movwpl	r0, #272	; 0x110
	...
    19dc:	10000c2c 	andne	r0, r0, ip, lsr #24
    19e0:	10000c30 	andne	r0, r0, r0, lsr ip
    19e4:	007d0002 	rsbseq	r0, sp, r2
    19e8:	10000c30 	andne	r0, r0, r0, lsr ip
    19ec:	10000c32 	andne	r0, r0, r2, lsr ip
    19f0:	247d0002 	ldrbtcs	r0, [sp], #-2
    19f4:	10000c32 	andne	r0, r0, r2, lsr ip
    19f8:	10000cee 	andne	r0, r0, lr, ror #25
    19fc:	f87d0003 			; <UNDEFINED> instruction: 0xf87d0003
    1a00:	000cee00 	andeq	lr, ip, r0, lsl #28
    1a04:	000cf210 	andeq	pc, ip, r0, lsl r2	; <UNPREDICTABLE>
    1a08:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    1a0c:	00000024 	andeq	r0, r0, r4, lsr #32
	...
    1a1c:	000c2c00 	andeq	r2, ip, r0, lsl #24
    1a20:	000c6210 	andeq	r6, ip, r0, lsl r2
    1a24:	50000110 	andpl	r0, r0, r0, lsl r1
    1a28:	10000c62 	andne	r0, r0, r2, ror #24
    1a2c:	10000cc0 	andne	r0, r0, r0, asr #25
    1a30:	ac910003 	ldcge	0, cr0, [r1], {3}
    1a34:	000cc07f 	andeq	ip, ip, pc, ror r0
    1a38:	000cc410 	andeq	ip, ip, r0, lsl r4
    1a3c:	50000110 	andpl	r0, r0, r0, lsl r1
    1a40:	10000cc4 	andne	r0, r0, r4, asr #25
    1a44:	10000cf2 	strdne	r0, [r0], -r2
    1a48:	ac910003 	ldcge	0, cr0, [r1], {3}
    1a4c:	0000007f 	andeq	r0, r0, pc, ror r0
	...
    1a5c:	000c2c00 	andeq	r2, ip, r0, lsl #24
    1a60:	000c6210 	andeq	r6, ip, r0, lsl r2
    1a64:	51000110 	tstpl	r0, r0, lsl r1
    1a68:	10000c62 	andne	r0, r0, r2, ror #24
    1a6c:	10000cc0 	andne	r0, r0, r0, asr #25
    1a70:	b0910003 	addslt	r0, r1, r3
    1a74:	000cc07f 	andeq	ip, ip, pc, ror r0
    1a78:	000cc410 	andeq	ip, ip, r0, lsl r4
    1a7c:	51000110 	tstpl	r0, r0, lsl r1
    1a80:	10000cc4 	andne	r0, r0, r4, asr #25
    1a84:	10000cf2 	strdne	r0, [r0], -r2
    1a88:	b0910003 	addslt	r0, r1, r3
    1a8c:	0000007f 	andeq	r0, r0, pc, ror r0
	...
    1a9c:	000c2c00 	andeq	r2, ip, r0, lsl #24
    1aa0:	000c6210 	andeq	r6, ip, r0, lsl r2
    1aa4:	52000110 	andpl	r0, r0, #16, 2
    1aa8:	10000c62 	andne	r0, r0, r2, ror #24
    1aac:	10000cc0 	andne	r0, r0, r0, asr #25
    1ab0:	b4910003 	ldrlt	r0, [r1], #3
    1ab4:	000cc07f 	andeq	ip, ip, pc, ror r0
    1ab8:	000cc410 	andeq	ip, ip, r0, lsl r4
    1abc:	52000110 	andpl	r0, r0, #16, 2
    1ac0:	10000cc4 	andne	r0, r0, r4, asr #25
    1ac4:	10000cf2 	strdne	r0, [r0], -r2
    1ac8:	b4910003 	ldrlt	r0, [r1], #3
    1acc:	0000007f 	andeq	r0, r0, pc, ror r0
	...
    1ad8:	000c2c00 	andeq	r2, ip, r0, lsl #24
    1adc:	000c4c10 	andeq	r4, ip, r0, lsl ip
    1ae0:	53000110 	movwpl	r0, #272	; 0x110
    1ae4:	10000c4c 	andne	r0, r0, ip, asr #24
    1ae8:	10000cf2 	strdne	r0, [r0], -r2
    1aec:	005b0001 	subseq	r0, fp, r1
	...
    1b00:	000c2c00 	andeq	r2, ip, r0, lsl #24
    1b04:	000c6210 	andeq	r6, ip, r0, lsl r2
    1b08:	91000210 	tstls	r0, r0, lsl r2
    1b0c:	000c6200 	andeq	r6, ip, r0, lsl #4
    1b10:	000c8410 	andeq	r8, ip, r0, lsl r4
    1b14:	55000610 	strpl	r0, [r0, #-1552]	; 0xfffff9f0
    1b18:	93560493 	cmpls	r6, #-1828716544	; 0x93000000
    1b1c:	000c8404 	andeq	r8, ip, r4, lsl #8
    1b20:	000c9810 	andeq	r9, ip, r0, lsl r8
    1b24:	50000610 	andpl	r0, r0, r0, lsl r6
    1b28:	93510493 	cmpls	r1, #-1828716544	; 0x93000000
    1b2c:	000c9804 	andeq	r9, ip, r4, lsl #16
    1b30:	000cc010 	andeq	ip, ip, r0, lsl r0
    1b34:	55000610 	strpl	r0, [r0, #-1552]	; 0xfffff9f0
    1b38:	93560493 	cmpls	r6, #-1828716544	; 0x93000000
    1b3c:	000cc004 	andeq	ip, ip, r4
    1b40:	000cc410 	andeq	ip, ip, r0, lsl r4
    1b44:	91000210 	tstls	r0, r0, lsl r2
	...
    1b54:	000c2c00 	andeq	r2, ip, r0, lsl #24
    1b58:	000c5210 	andeq	r5, ip, r0, lsl r2
    1b5c:	91000210 	tstls	r0, r0, lsl r2
    1b60:	000c5220 	andeq	r5, ip, r0, lsr #4
    1b64:	000cf210 	andeq	pc, ip, r0, lsl r2	; <UNPREDICTABLE>
    1b68:	5a000110 	bpl	1fb0 <__HEAP_SIZE+0xfb0>
	...
    1b74:	00000002 	andeq	r0, r0, r2
	...
    1b80:	10000c48 	andne	r0, r0, r8, asr #24
    1b84:	10000c62 	andne	r0, r0, r2, ror #24
    1b88:	9f300002 	svcls	0x00300002
    1b8c:	10000c62 	andne	r0, r0, r2, ror #24
    1b90:	10000c6c 	andne	r0, r0, ip, ror #24
    1b94:	6c540001 	mrrcvs	0, 0, r0, r4, cr1
    1b98:	9810000c 	ldmdals	r0, {r2, r3}
    1b9c:	0110000c 	tsteq	r0, ip
    1ba0:	0c985900 			; <UNDEFINED> instruction: 0x0c985900
    1ba4:	0cc01000 	stcleq	0, cr1, [r0], {0}
    1ba8:	00011000 	andeq	r1, r1, r0
    1bac:	000cc054 	andeq	ip, ip, r4, asr r0
    1bb0:	000cc410 	andeq	ip, ip, r0, lsl r4
    1bb4:	30000210 	andcc	r0, r0, r0, lsl r2
    1bb8:	000cc49f 	muleq	ip, pc, r4	; <UNPREDICTABLE>
    1bbc:	000cf210 	andeq	pc, ip, r0, lsl r2	; <UNPREDICTABLE>
    1bc0:	59000110 	stmdbpl	r0, {r4, r8}
	...
    1bd0:	10000c62 	andne	r0, r0, r2, ror #24
    1bd4:	10000c70 	andne	r0, r0, r0, ror ip
    1bd8:	a6530001 	ldrbge	r0, [r3], -r1
    1bdc:	c010000c 	andsgt	r0, r0, ip
    1be0:	0110000c 	tsteq	r0, ip
    1be4:	00005300 	andeq	r5, r0, r0, lsl #6
    1be8:	00000000 	andeq	r0, r0, r0
    1bec:	0b980000 	bleq	fe601bf4 <__StackTop+0xc6501bf4>
    1bf0:	0b9a1000 	bleq	fe685bf8 <__StackTop+0xc6585bf8>
    1bf4:	00021000 	andeq	r1, r2, r0
    1bf8:	0b9a007d 	bleq	fe681df4 <__StackTop+0xc6581df4>
    1bfc:	0b9c1000 	bleq	fe705c04 <__StackTop+0xc6605c04>
    1c00:	00021000 	andeq	r1, r2, r0
    1c04:	0b9c147d 	bleq	fe706e00 <__StackTop+0xc6606e00>
    1c08:	0c2a1000 	stceq	0, cr1, [sl], #-0
    1c0c:	00031000 	andeq	r1, r3, r0
    1c10:	2a00d87d 	bcs	37e0c <__HEAP_SIZE+0x36e0c>
    1c14:	2c10000c 	ldccs	0, cr0, [r0], {12}
    1c18:	0210000c 	andseq	r0, r0, #12
    1c1c:	00147d00 	andseq	r7, r4, r0, lsl #26
	...
    1c28:	98000000 	stmdals	r0, {}	; <UNPREDICTABLE>
    1c2c:	2710000b 	ldrcs	r0, [r0, -fp]
    1c30:	0110000c 	tsteq	r0, ip
    1c34:	0c275000 	stceq	0, cr5, [r7], #-0
    1c38:	0c2c1000 	stceq	0, cr1, [ip], #-0
    1c3c:	00041000 	andeq	r1, r4, r0
    1c40:	9f5001f3 	svcls	0x005001f3
	...
    1c50:	10000b98 	mulne	r0, r8, fp
    1c54:	10000c27 	andne	r0, r0, r7, lsr #24
    1c58:	27510001 	ldrbcs	r0, [r1, -r1]
    1c5c:	2c10000c 	ldccs	0, cr0, [r0], {12}
    1c60:	0410000c 	ldreq	r0, [r0], #-12
    1c64:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    1c68:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    1c74:	000b9800 	andeq	r9, fp, r0, lsl #16
    1c78:	000c2710 	andeq	r2, ip, r0, lsl r7
    1c7c:	52000110 	andpl	r0, r0, #16, 2
    1c80:	10000c27 	andne	r0, r0, r7, lsr #24
    1c84:	10000c2c 	andne	r0, r0, ip, lsr #24
    1c88:	01f30004 	mvnseq	r0, r4
    1c8c:	00009f52 	andeq	r9, r0, r2, asr pc
	...
    1c98:	0b980000 	bleq	fe601ca0 <__StackTop+0xc6501ca0>
    1c9c:	0c271000 	stceq	0, cr1, [r7], #-0
    1ca0:	00011000 	andeq	r1, r1, r0
    1ca4:	000c2753 	andeq	r2, ip, r3, asr r7
    1ca8:	000c2c10 	andeq	r2, ip, r0, lsl ip
    1cac:	f3000410 	vqshl.u8	d0, d0, d0
    1cb0:	009f5301 	addseq	r5, pc, r1, lsl #6
	...
    1cc4:	000b9800 	andeq	r9, fp, r0, lsl #16
    1cc8:	000bb610 	andeq	fp, fp, r0, lsl r6
    1ccc:	91000210 	tstls	r0, r0, lsl r2
    1cd0:	000bb600 	andeq	fp, fp, r0, lsl #12
    1cd4:	000bd010 	andeq	sp, fp, r0, lsl r0
    1cd8:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    1cdc:	10000bd0 	ldrdne	r0, [r0], -r0	; <UNPREDICTABLE>
    1ce0:	10000bdc 	ldrdne	r0, [r0], -ip
    1ce4:	dc5c0001 	mrrcle	0, 0, r0, ip, cr1
    1ce8:	0a10000b 	beq	401d1c <__RAM_SIZE+0x301d1c>
    1cec:	0110000c 	tsteq	r0, ip
    1cf0:	0c0a5400 	cfstrseq	mvf5, [sl], {-0}
    1cf4:	0c0c1000 	stceq	0, cr1, [ip], {-0}
    1cf8:	00021000 	andeq	r1, r2, r0
    1cfc:	00000091 	muleq	r0, r1, r0
	...
    1d08:	0b980000 	bleq	fe601d10 <__StackTop+0xc6501d10>
    1d0c:	0ba81000 	bleq	fea05d14 <__StackTop+0xc6905d14>
    1d10:	00021000 	andeq	r1, r2, r0
    1d14:	0ba81491 	bleq	fea06f60 <__StackTop+0xc6906f60>
    1d18:	0c2c1000 	stceq	0, cr1, [ip], #-0
    1d1c:	00011000 	andeq	r1, r1, r0
    1d20:	00000056 	andeq	r0, r0, r6, asr r0
    1d24:	00000000 	andeq	r0, r0, r0
    1d28:	00000200 	andeq	r0, r0, r0, lsl #4
	...
    1d34:	000ba200 	andeq	sl, fp, r0, lsl #4
    1d38:	000bb610 	andeq	fp, fp, r0, lsl r6
    1d3c:	30000210 	andcc	r0, r0, r0, lsl r2
    1d40:	000bb69f 	muleq	fp, pc, r6	; <UNPREDICTABLE>
    1d44:	000bc210 	andeq	ip, fp, r0, lsl r2
    1d48:	5e000110 	fltpls	f0, r0
    1d4c:	10000bc2 	andne	r0, r0, r2, asr #23
    1d50:	10000bdc 	ldrdne	r0, [r0], -ip
    1d54:	dc570001 	mrrcle	0, 0, r0, r7, cr1
    1d58:	0a10000b 	beq	401d8c <__RAM_SIZE+0x301d8c>
    1d5c:	0110000c 	tsteq	r0, ip
    1d60:	0c0a5e00 	stceq	14, cr5, [sl], {-0}
    1d64:	0c0c1000 	stceq	0, cr1, [ip], {-0}
    1d68:	00021000 	andeq	r1, r2, r0
    1d6c:	0c0c9f30 	stceq	15, cr9, [ip], {48}	; 0x30
    1d70:	0c2c1000 	stceq	0, cr1, [ip], #-0
    1d74:	00011000 	andeq	r1, r1, r0
    1d78:	00000057 	andeq	r0, r0, r7, asr r0
	...
    1d8c:	000bb600 	andeq	fp, fp, r0, lsl #12
    1d90:	000bba10 	andeq	fp, fp, r0, lsl sl
    1d94:	5c000110 	stfpls	f0, [r0], {16}
    1d98:	10000bba 			; <UNDEFINED> instruction: 0x10000bba
    1d9c:	10000bbe 			; <UNDEFINED> instruction: 0x10000bbe
    1da0:	507c0003 	rsbspl	r0, ip, r3
    1da4:	000bbe9f 	muleq	fp, pc, lr	; <UNPREDICTABLE>
    1da8:	000bdc10 	andeq	sp, fp, r0, lsl ip
    1dac:	74001210 	strvc	r1, [r0], #-528	; 0xfffffdf0
    1db0:	f7007400 			; <UNDEFINED> instruction: 0xf7007400
    1db4:	f7007530 			; <UNDEFINED> instruction: 0xf7007530
    1db8:	00f71b30 	rscseq	r1, r7, r0, lsr fp
    1dbc:	1c1e0075 	ldcne	0, cr0, [lr], {117}	; 0x75
    1dc0:	000be89f 	muleq	fp, pc, r8	; <UNPREDICTABLE>
    1dc4:	000bf810 	andeq	pc, fp, r0, lsl r8	; <UNPREDICTABLE>
    1dc8:	5c000110 	stfpls	f0, [r0], {16}
    1dcc:	10000bf8 	strdne	r0, [r0], -r8
    1dd0:	10000c06 	andne	r0, r0, r6, lsl #24
    1dd4:	00740012 	rsbseq	r0, r4, r2, lsl r0
    1dd8:	30f70074 	rscscc	r0, r7, r4, ror r0
    1ddc:	30f70075 	rscscc	r0, r7, r5, ror r0
    1de0:	7500f71b 	strvc	pc, [r0, #-1819]	; 0xfffff8e5
    1de4:	9f1c1e00 	svcls	0x001c1e00
    1de8:	10000c06 	andne	r0, r0, r6, lsl #24
    1dec:	10000c0a 	andne	r0, r0, sl, lsl #24
    1df0:	005c0001 	subseq	r0, ip, r1
    1df4:	00000000 	andeq	r0, r0, r0
    1df8:	60000000 	andvs	r0, r0, r0
    1dfc:	6410000a 	ldrvs	r0, [r0], #-10
    1e00:	0210000a 	andseq	r0, r0, #10
    1e04:	64007d00 	strvs	r7, [r0], #-3328	; 0xfffff300
    1e08:	6610000a 	ldrvs	r0, [r0], -sl
    1e0c:	0210000a 	andseq	r0, r0, #10
    1e10:	661c7d00 	ldrvs	r7, [ip], -r0, lsl #26
    1e14:	1c10000a 	ldcne	0, cr0, [r0], {10}
    1e18:	0210000b 	andseq	r0, r0, #11
    1e1c:	1c307d00 	ldcne	13, cr7, [r0], #-0
    1e20:	2010000b 	andscs	r0, r0, fp
    1e24:	0210000b 	andseq	r0, r0, #11
    1e28:	201c7d00 	andscs	r7, ip, r0, lsl #26
    1e2c:	9810000b 	ldmdals	r0, {r0, r1, r3}
    1e30:	0210000b 	andseq	r0, r0, #11
    1e34:	00307d00 	eorseq	r7, r0, r0, lsl #26
	...
    1e44:	000a6000 	andeq	r6, sl, r0
    1e48:	000b1910 	andeq	r1, fp, r0, lsl r9
    1e4c:	50000110 	andpl	r0, r0, r0, lsl r1
    1e50:	10000b19 	andne	r0, r0, r9, lsl fp
    1e54:	10000b20 	andne	r0, r0, r0, lsr #22
    1e58:	01f30004 	mvnseq	r0, r4
    1e5c:	0b209f50 	bleq	829ba4 <__RAM_SIZE+0x729ba4>
    1e60:	0b981000 	bleq	fe605e68 <__StackTop+0xc6505e68>
    1e64:	00011000 	andeq	r1, r1, r0
    1e68:	00000050 	andeq	r0, r0, r0, asr r0
	...
    1e74:	60000000 	andvs	r0, r0, r0
    1e78:	1910000a 	ldmdbne	r0, {r1, r3}
    1e7c:	0110000b 	tsteq	r0, fp
    1e80:	0b195100 	bleq	656288 <__RAM_SIZE+0x556288>
    1e84:	0b201000 	bleq	805e8c <__RAM_SIZE+0x705e8c>
    1e88:	00041000 	andeq	r1, r4, r0
    1e8c:	9f5101f3 	svcls	0x005101f3
    1e90:	10000b20 	andne	r0, r0, r0, lsr #22
    1e94:	10000b98 	mulne	r0, r8, fp
    1e98:	00510001 	subseq	r0, r1, r1
	...
    1ea8:	000a6000 	andeq	r6, sl, r0
    1eac:	000b1910 	andeq	r1, fp, r0, lsl r9
    1eb0:	52000110 	andpl	r0, r0, #16, 2
    1eb4:	10000b19 	andne	r0, r0, r9, lsl fp
    1eb8:	10000b20 	andne	r0, r0, r0, lsr #22
    1ebc:	01f30004 	mvnseq	r0, r4
    1ec0:	0b209f52 	bleq	829c10 <__RAM_SIZE+0x729c10>
    1ec4:	0b981000 	bleq	fe605ecc <__StackTop+0xc6505ecc>
    1ec8:	00011000 	andeq	r1, r1, r0
    1ecc:	00000052 	andeq	r0, r0, r2, asr r0
	...
    1ed8:	60000000 	andvs	r0, r0, r0
    1edc:	1910000a 	ldmdbne	r0, {r1, r3}
    1ee0:	0110000b 	tsteq	r0, fp
    1ee4:	0b195300 	bleq	656aec <__RAM_SIZE+0x556aec>
    1ee8:	0b201000 	bleq	805ef0 <__RAM_SIZE+0x705ef0>
    1eec:	00041000 	andeq	r1, r4, r0
    1ef0:	9f5301f3 	svcls	0x005301f3
    1ef4:	10000b20 	andne	r0, r0, r0, lsr #22
    1ef8:	10000b98 	mulne	r0, r8, fp
    1efc:	00530001 	subseq	r0, r3, r1
	...
    1f08:	60000000 	andvs	r0, r0, r0
    1f0c:	2010000a 	andscs	r0, r0, sl
    1f10:	0210000b 	andseq	r0, r0, #11
    1f14:	20009100 	andcs	r9, r0, r0, lsl #2
    1f18:	9810000b 	ldmdals	r0, {r0, r1, r3}
    1f1c:	0210000b 	andseq	r0, r0, #11
    1f20:	00009100 	andeq	r9, r0, r0, lsl #2
	...
    1f2c:	01010000 	mrseq	r0, (UNDEF: 1)
    1f30:	01010000 	mrseq	r0, (UNDEF: 1)
    1f34:	01010000 	mrseq	r0, (UNDEF: 1)
    1f38:	01010000 	mrseq	r0, (UNDEF: 1)
    1f3c:	01010000 	mrseq	r0, (UNDEF: 1)
	...
    1f48:	00000101 	andeq	r0, r0, r1, lsl #2
    1f4c:	00000101 	andeq	r0, r0, r1, lsl #2
    1f50:	00000101 	andeq	r0, r0, r1, lsl #2
    1f54:	00000101 	andeq	r0, r0, r1, lsl #2
    1f58:	00000101 	andeq	r0, r0, r1, lsl #2
    1f5c:	000a6000 	andeq	r6, sl, r0
    1f60:	000a9810 	andeq	r9, sl, r0, lsl r8
    1f64:	91000210 	tstls	r0, r0, lsl r2
    1f68:	000a9804 	andeq	r9, sl, r4, lsl #16
    1f6c:	000a9810 	andeq	r9, sl, r0, lsl r8
    1f70:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    1f74:	10000a98 	mulne	r0, r8, sl
    1f78:	10000aa2 	andne	r0, r0, r2, lsr #21
    1f7c:	01740003 	cmneq	r4, r3
    1f80:	000aa29f 	muleq	sl, pc, r2	; <UNPREDICTABLE>
    1f84:	000ab810 	andeq	fp, sl, r0, lsl r8
    1f88:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    1f8c:	10000ab8 			; <UNDEFINED> instruction: 0x10000ab8
    1f90:	10000ac2 	andne	r0, r0, r2, asr #21
    1f94:	01740003 	cmneq	r4, r3
    1f98:	000ac29f 	muleq	sl, pc, r2	; <UNPREDICTABLE>
    1f9c:	000af010 	andeq	pc, sl, r0, lsl r0	; <UNPREDICTABLE>
    1fa0:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    1fa4:	10000af0 	strdne	r0, [r0], -r0	; <UNPREDICTABLE>
    1fa8:	10000afa 	strdne	r0, [r0], -sl
    1fac:	01740003 	cmneq	r4, r3
    1fb0:	000afa9f 	muleq	sl, pc, sl	; <UNPREDICTABLE>
    1fb4:	000b0410 	andeq	r0, fp, r0, lsl r4
    1fb8:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    1fbc:	10000b04 	andne	r0, r0, r4, lsl #22
    1fc0:	10000b0e 	andne	r0, r0, lr, lsl #22
    1fc4:	01740003 	cmneq	r4, r3
    1fc8:	000b0e9f 	muleq	fp, pc, lr	; <UNPREDICTABLE>
    1fcc:	000b2010 	andeq	r2, fp, r0, lsl r0
    1fd0:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    1fd4:	10000b20 	andne	r0, r0, r0, lsr #22
    1fd8:	10000b24 	andne	r0, r0, r4, lsr #22
    1fdc:	7f740003 	svcvc	0x00740003
    1fe0:	000b249f 	muleq	fp, pc, r4	; <UNPREDICTABLE>
    1fe4:	000b3210 	andeq	r3, fp, r0, lsl r2
    1fe8:	5c000110 	stfpls	f0, [r0], {16}
    1fec:	10000b32 	andne	r0, r0, r2, lsr fp
    1ff0:	10000b34 	andne	r0, r0, r4, lsr fp
    1ff4:	34540001 	ldrbcc	r0, [r4], #-1
    1ff8:	3810000b 	ldmdacc	r0, {r0, r1, r3}
    1ffc:	0110000b 	tsteq	r0, fp
    2000:	0b385c00 	bleq	e19008 <__RAM_SIZE+0xd19008>
    2004:	0b421000 	bleq	108600c <__RAM_SIZE+0xf8600c>
    2008:	00011000 	andeq	r1, r1, r0
    200c:	000b4254 	andeq	r4, fp, r4, asr r2
    2010:	000b4c10 	andeq	r4, fp, r0, lsl ip
    2014:	74000310 	strvc	r0, [r0], #-784	; 0xfffffcf0
    2018:	0b4c9f01 	bleq	1329c24 <__RAM_SIZE+0x1229c24>
    201c:	0b581000 	bleq	1606024 <__RAM_SIZE+0x1506024>
    2020:	00011000 	andeq	r1, r1, r0
    2024:	000b5854 	andeq	r5, fp, r4, asr r8
    2028:	000b6210 	andeq	r6, fp, r0, lsl r2
    202c:	74000310 	strvc	r0, [r0], #-784	; 0xfffffcf0
    2030:	0b629f01 	bleq	18a9c3c <__RAM_SIZE+0x17a9c3c>
    2034:	0b681000 	bleq	1a0603c <__RAM_SIZE+0x190603c>
    2038:	00011000 	andeq	r1, r1, r0
    203c:	000b6854 	andeq	r6, fp, r4, asr r8
    2040:	000b7210 	andeq	r7, fp, r0, lsl r2
    2044:	74000310 	strvc	r0, [r0], #-784	; 0xfffffcf0
    2048:	0b729f01 	bleq	1ca9c54 <__RAM_SIZE+0x1ba9c54>
    204c:	0b7a1000 	bleq	1e86054 <__RAM_SIZE+0x1d86054>
    2050:	00011000 	andeq	r1, r1, r0
    2054:	000b7a54 	andeq	r7, fp, r4, asr sl
    2058:	000b8410 	andeq	r8, fp, r0, lsl r4
    205c:	74000310 	strvc	r0, [r0], #-784	; 0xfffffcf0
    2060:	0b849f01 	bleq	fe129c6c <__StackTop+0xc6029c6c>
    2064:	0b8c1000 	bleq	fe30606c <__StackTop+0xc620606c>
    2068:	00011000 	andeq	r1, r1, r0
    206c:	000b8c54 	andeq	r8, fp, r4, asr ip
    2070:	000b9610 	andeq	r9, fp, r0, lsl r6
    2074:	74000310 	strvc	r0, [r0], #-784	; 0xfffffcf0
    2078:	0b969f01 	bleq	fe5a9c84 <__StackTop+0xc64a9c84>
    207c:	0b981000 	bleq	fe606084 <__StackTop+0xc6506084>
    2080:	00011000 	andeq	r1, r1, r0
    2084:	00000054 	andeq	r0, r0, r4, asr r0
	...
    2090:	000a6000 	andeq	r6, sl, r0
    2094:	000b2010 	andeq	r2, fp, r0, lsl r0
    2098:	91000210 	tstls	r0, r0, lsl r2
    209c:	000b2008 	andeq	r2, fp, r8
    20a0:	000b9810 	andeq	r9, fp, r0, lsl r8
    20a4:	91000210 	tstls	r0, r0, lsl r2
    20a8:	00000008 	andeq	r0, r0, r8
	...
    20b4:	000a6000 	andeq	r6, sl, r0
    20b8:	000b2010 	andeq	r2, fp, r0, lsl r0
    20bc:	91000210 	tstls	r0, r0, lsl r2
    20c0:	000b200c 	andeq	r2, fp, ip
    20c4:	000b9810 	andeq	r9, fp, r0, lsl r8
    20c8:	91000210 	tstls	r0, r0, lsl r2
    20cc:	0000000c 	andeq	r0, r0, ip
	...
    20d8:	000a6000 	andeq	r6, sl, r0
    20dc:	000b2010 	andeq	r2, fp, r0, lsl r0
    20e0:	91000210 	tstls	r0, r0, lsl r2
    20e4:	000b2010 	andeq	r2, fp, r0, lsl r0
    20e8:	000b9810 	andeq	r9, fp, r0, lsl r8
    20ec:	91000210 	tstls	r0, r0, lsl r2
    20f0:	00000010 	andeq	r0, r0, r0, lsl r0
	...
    20fc:	000a6000 	andeq	r6, sl, r0
    2100:	000a9610 	andeq	r9, sl, r0, lsl r6
    2104:	91000210 	tstls	r0, r0, lsl r2
    2108:	000a9614 	andeq	r9, sl, r4, lsl r6
    210c:	000b9810 	andeq	r9, fp, r0, lsl r8
    2110:	57000110 	smladpl	r0, r0, r1, r0
	...
    2120:	10000a60 	andne	r0, r0, r0, ror #20
    2124:	10000b20 	andne	r0, r0, r0, lsr #22
    2128:	18910002 	ldmne	r1, {r1}
    212c:	10000b20 	andne	r0, r0, r0, lsr #22
    2130:	10000b98 	mulne	r0, r8, fp
    2134:	18910002 	ldmne	r1, {r1}
	...
    2140:	100009e2 	andne	r0, r0, r2, ror #19
    2144:	100009e6 	andne	r0, r0, r6, ror #19
    2148:	007d0002 	rsbseq	r0, sp, r2
    214c:	100009e6 	andne	r0, r0, r6, ror #19
    2150:	100009e8 	andne	r0, r0, r8, ror #19
    2154:	247d0002 	ldrbtcs	r0, [sp], #-2
    2158:	100009e8 	andne	r0, r0, r8, ror #19
    215c:	10000a46 	andne	r0, r0, r6, asr #20
    2160:	307d0002 	rsbscc	r0, sp, r2
    2164:	10000a46 	andne	r0, r0, r6, asr #20
    2168:	10000a4a 	andne	r0, r0, sl, asr #20
    216c:	247d0002 	ldrbtcs	r0, [sp], #-2
    2170:	10000a4a 	andne	r0, r0, sl, asr #20
    2174:	10000a60 	andne	r0, r0, r0, ror #20
    2178:	307d0002 	rsbscc	r0, sp, r2
	...
    2188:	100009e2 	andne	r0, r0, r2, ror #19
    218c:	10000a06 	andne	r0, r0, r6, lsl #20
    2190:	06500001 	ldrbeq	r0, [r0], -r1
    2194:	6010000a 	andsvs	r0, r0, sl
    2198:	0110000a 	tsteq	r0, sl
    219c:	00005500 	andeq	r5, r0, r0, lsl #10
	...
    21a8:	09e20000 	stmibeq	r2!, {}^	; <UNPREDICTABLE>
    21ac:	0a061000 	beq	1861b4 <__RAM_SIZE+0x861b4>
    21b0:	00011000 	andeq	r1, r1, r0
    21b4:	000a0651 	andeq	r0, sl, r1, asr r6
    21b8:	000a6010 	andeq	r6, sl, r0, lsl r0
    21bc:	56000110 			; <UNDEFINED> instruction: 0x56000110
	...
    21d4:	100009e2 	andne	r0, r0, r2, ror #19
    21d8:	10000a0e 	andne	r0, r0, lr, lsl #20
    21dc:	0e520001 	cdpeq	0, 5, cr0, cr2, cr1, {0}
    21e0:	1e10000a 	cdpne	0, 1, cr0, cr0, cr10, {0}
    21e4:	0110000a 	tsteq	r0, sl
    21e8:	0a1e5b00 	beq	798df0 <__RAM_SIZE+0x698df0>
    21ec:	0a2a1000 	beq	a861f4 <__RAM_SIZE+0x9861f4>
    21f0:	00011000 	andeq	r1, r1, r0
    21f4:	000a2a52 	andeq	r2, sl, r2, asr sl
    21f8:	000a3610 	andeq	r3, sl, r0, lsl r6
    21fc:	58000110 	stmdapl	r0, {r4, r8}
    2200:	10000a36 	andne	r0, r0, r6, lsr sl
    2204:	10000a54 	andne	r0, r0, r4, asr sl
    2208:	54520001 	ldrbpl	r0, [r2], #-1
    220c:	6010000a 	andsvs	r0, r0, sl
    2210:	0110000a 	tsteq	r0, sl
    2214:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    2220:	09e20000 	stmibeq	r2!, {}^	; <UNPREDICTABLE>
    2224:	09fc1000 	ldmibeq	ip!, {ip}^
    2228:	00011000 	andeq	r1, r1, r0
    222c:	0009fc53 	andeq	pc, r9, r3, asr ip	; <UNPREDICTABLE>
    2230:	000a6010 	andeq	r6, sl, r0, lsl r0
    2234:	57000110 	smladpl	r0, r0, r1, r0
	...
    2244:	100009e2 	andne	r0, r0, r2, ror #19
    2248:	10000a4a 	andne	r0, r0, sl, asr #20
    224c:	00910002 	addseq	r0, r1, r2
    2250:	10000a4a 	andne	r0, r0, sl, asr #20
    2254:	10000a60 	andne	r0, r0, r0, ror #20
    2258:	00910002 	addseq	r0, r1, r2
	...
    2268:	100009e2 	andne	r0, r0, r2, ror #19
    226c:	10000a24 	andne	r0, r0, r4, lsr #20
    2270:	04910002 	ldreq	r0, [r1], #2
    2274:	10000a24 	andne	r0, r0, r4, lsr #20
    2278:	10000a42 	andne	r0, r0, r2, asr #20
    227c:	00540001 	subseq	r0, r4, r1
	...
    2288:	e2000000 	and	r0, r0, #0
    228c:	4a100009 	bmi	4022b8 <__RAM_SIZE+0x3022b8>
    2290:	0210000a 	andseq	r0, r0, #10
    2294:	4a089100 	bmi	22669c <__RAM_SIZE+0x12669c>
    2298:	6010000a 	andsvs	r0, r0, sl
    229c:	0210000a 	andseq	r0, r0, #10
    22a0:	00089100 	andeq	r9, r8, r0, lsl #2
	...
    22ac:	e2000000 	and	r0, r0, #0
    22b0:	4a100009 	bmi	4022dc <__RAM_SIZE+0x3022dc>
    22b4:	0210000a 	andseq	r0, r0, #10
    22b8:	4a0c9100 	bmi	3266c0 <__RAM_SIZE+0x2266c0>
    22bc:	6010000a 	andsvs	r0, r0, sl
    22c0:	0210000a 	andseq	r0, r0, #10
    22c4:	000c9100 	andeq	r9, ip, r0, lsl #2
    22c8:	00000000 	andeq	r0, r0, r0
    22cc:	01000000 	mrseq	r0, (UNDEF: 0)
    22d0:	00000000 	andeq	r0, r0, r0
    22d4:	0009fa00 	andeq	pc, r9, r0, lsl #20
    22d8:	000a0610 	andeq	r0, sl, r0, lsl r6
    22dc:	52000110 	andpl	r0, r0, #16, 2
    22e0:	10000a06 	andne	r0, r0, r6, lsl #20
    22e4:	10000a24 	andne	r0, r0, r4, lsr #20
    22e8:	54910002 	ldrpl	r0, [r1], #2
    22ec:	10000a24 	andne	r0, r0, r4, lsr #20
    22f0:	10000a60 	andne	r0, r0, r0, ror #20
    22f4:	01f30004 	mvnseq	r0, r4
    22f8:	00009f52 	andeq	r9, r0, r2, asr pc
	...
    2304:	10000a06 	andne	r0, r0, r6, lsl #20
    2308:	10000a24 	andne	r0, r0, r4, lsr #20
    230c:	00580001 	subseq	r0, r8, r1
	...
    2318:	be000000 	cdplt	0, 0, cr0, cr0, cr0, {0}
    231c:	c2100009 	andsgt	r0, r0, #9
    2320:	01100009 	tsteq	r0, r9
    2324:	09c25000 	stmibeq	r2, {ip, lr}^
    2328:	09e21000 	stmibeq	r2!, {ip}^
    232c:	00011000 	andeq	r1, r1, r0
    2330:	00000051 	andeq	r0, r0, r1, asr r0
    2334:	00000000 	andeq	r0, r0, r0
    2338:	00000100 	andeq	r0, r0, r0, lsl #2
    233c:	c0000000 	andgt	r0, r0, r0
    2340:	c4100009 	ldrgt	r0, [r0], #-9
    2344:	02100009 	andseq	r0, r0, #9
    2348:	c49f3000 	ldrgt	r3, [pc], #0	; 2350 <__HEAP_SIZE+0x1350>
    234c:	c8100009 	ldmdagt	r0, {r0, r3}
    2350:	01100009 	tsteq	r0, r9
    2354:	09d45000 	ldmibeq	r4, {ip, lr}^
    2358:	09e21000 	stmibeq	r2!, {ip}^
    235c:	00011000 	andeq	r1, r1, r0
    2360:	00000050 	andeq	r0, r0, r0, asr r0
	...
    236c:	0009d800 	andeq	sp, r9, r0, lsl #16
    2370:	0009da10 	andeq	sp, r9, r0, lsl sl
    2374:	53000110 	movwpl	r0, #272	; 0x110
    2378:	100009da 	ldrdne	r0, [r0], -sl
    237c:	100009dc 	ldrdne	r0, [r0], -ip
    2380:	30730003 	rsbscc	r0, r3, r3
    2384:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    2394:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    23a0:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    23a4:	00000008 	andeq	r0, r0, r8
    23a8:	00000000 	andeq	r0, r0, r0
    23ac:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    23c4:	01000000 	mrseq	r0, (UNDEF: 0)
    23c8:	00005000 	andeq	r5, r0, r0
    23cc:	00000000 	andeq	r0, r0, r0
    23d0:	00040000 	andeq	r0, r4, r0
    23d4:	9f5001f3 	svcls	0x005001f3
	...
    23e0:	00500001 	subseq	r0, r0, r1
	...
    23f8:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    2404:	01f30004 	mvnseq	r0, r4
    2408:	00009f51 	andeq	r9, r0, r1, asr pc
    240c:	00000000 	andeq	r0, r0, r0
    2410:	00010000 	andeq	r0, r1, r0
    2414:	00000051 	andeq	r0, r0, r1, asr r0
	...
    2428:	01000000 	mrseq	r0, (UNDEF: 0)
    242c:	00005200 	andeq	r5, r0, r0, lsl #4
    2430:	00000000 	andeq	r0, r0, r0
    2434:	00040000 	andeq	r0, r4, r0
    2438:	9f5201f3 	svcls	0x005201f3
	...
    2444:	00520001 	subseq	r0, r2, r1
	...
    245c:	53000100 	movwpl	r0, #256	; 0x100
	...
    2468:	01f30004 	mvnseq	r0, r4
    246c:	00009f53 	andeq	r9, r0, r3, asr pc
    2470:	00000000 	andeq	r0, r0, r0
    2474:	00010000 	andeq	r0, r1, r0
    2478:	00000053 	andeq	r0, r0, r3, asr r0
    247c:	00000000 	andeq	r0, r0, r0
    2480:	001b0000 	andseq	r0, fp, r0
    2484:	001b0610 	andseq	r0, fp, r0, lsl r6
    2488:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    248c:	001b0600 	andseq	r0, fp, r0, lsl #12
    2490:	001b0c10 	andseq	r0, fp, r0, lsl ip
    2494:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    2498:	00000008 	andeq	r0, r0, r8
	...
    24a4:	001b0000 	andseq	r0, fp, r0
    24a8:	001b0910 	andseq	r0, fp, r0, lsl r9
    24ac:	50000110 	andpl	r0, r0, r0, lsl r1
    24b0:	10001b09 	andne	r1, r0, r9, lsl #22
    24b4:	10001b0c 	andne	r1, r0, ip, lsl #22
    24b8:	01f30004 	mvnseq	r0, r4
    24bc:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    24c8:	1b000000 	blne	24d0 <__HEAP_SIZE+0x14d0>
    24cc:	1b091000 	blne	2464d4 <__RAM_SIZE+0x1464d4>
    24d0:	00011000 	andeq	r1, r1, r0
    24d4:	001b0951 	andseq	r0, fp, r1, asr r9
    24d8:	001b0c10 	andseq	r0, fp, r0, lsl ip
    24dc:	f3000410 	vqshl.u8	d0, d0, d0
    24e0:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
    24f0:	0910001b 	ldmdbeq	r0, {r0, r1, r3, r4}
    24f4:	0110001b 	tsteq	r0, fp, lsl r0
    24f8:	1b095200 	blne	256d00 <__RAM_SIZE+0x156d00>
    24fc:	1b0c1000 	blne	306504 <__RAM_SIZE+0x206504>
    2500:	00041000 	andeq	r1, r4, r0
    2504:	9f5201f3 	svcls	0x005201f3
	...
    2514:	10001b00 	andne	r1, r0, r0, lsl #22
    2518:	10001b09 	andne	r1, r0, r9, lsl #22
    251c:	09530001 	ldmdbeq	r3, {r0}^
    2520:	0c10001b 	ldceq	0, cr0, [r0], {27}
    2524:	0410001b 	ldreq	r0, [r0], #-27	; 0xffffffe5
    2528:	5301f300 	movwpl	pc, #4864	; 0x1300	; <UNPREDICTABLE>
    252c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    253c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    2548:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    254c:	00000010 	andeq	r0, r0, r0, lsl r0
	...
    2560:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    256c:	00560001 	subseq	r0, r6, r1
	...
    2580:	01000000 	mrseq	r0, (UNDEF: 0)
    2584:	00005100 	andeq	r5, r0, r0, lsl #2
    2588:	00000000 	andeq	r0, r0, r0
    258c:	00010000 	andeq	r0, r1, r0
    2590:	00000055 	andeq	r0, r0, r5, asr r0
    2594:	00000000 	andeq	r0, r0, r0
    2598:	00000100 	andeq	r0, r0, r0, lsl #2
    259c:	00000001 	andeq	r0, r0, r1
    25a0:	00000000 	andeq	r0, r0, r0
    25a4:	02000000 	andeq	r0, r0, #0
    25a8:	009f3000 	addseq	r3, pc, r0
    25ac:	00000000 	andeq	r0, r0, r0
    25b0:	01000000 	mrseq	r0, (UNDEF: 0)
    25b4:	00005000 	andeq	r5, r0, r0
    25b8:	00000000 	andeq	r0, r0, r0
    25bc:	00010000 	andeq	r0, r1, r0
    25c0:	00000050 	andeq	r0, r0, r0, asr r0
    25c4:	00000000 	andeq	r0, r0, r0
    25c8:	00000200 	andeq	r0, r0, r0, lsl #4
	...
    25d4:	30000200 	andcc	r0, r0, r0, lsl #4
    25d8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    25dc:	00000000 	andeq	r0, r0, r0
    25e0:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    25f4:	007d0002 	rsbseq	r0, sp, r2
	...
    2600:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    2618:	00500001 	subseq	r0, r0, r1
    261c:	00000000 	andeq	r0, r0, r0
    2620:	04000000 	streq	r0, [r0], #-0
    2624:	5001f300 	andpl	pc, r1, r0, lsl #6
    2628:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    262c:	00000000 	andeq	r0, r0, r0
    2630:	001b4c00 	andseq	r4, fp, r0, lsl #24
    2634:	001b4e10 	andseq	r4, fp, r0, lsl lr
    2638:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    263c:	001b4e00 	andseq	r4, fp, r0, lsl #28
    2640:	001b6a10 	andseq	r6, fp, r0, lsl sl
    2644:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    2648:	00000010 	andeq	r0, r0, r0, lsl r0
	...
    2654:	001b4c00 	andseq	r4, fp, r0, lsl #24
    2658:	001b5410 	andseq	r5, fp, r0, lsl r4
    265c:	50000110 	andpl	r0, r0, r0, lsl r1
    2660:	10001b54 	andne	r1, r0, r4, asr fp
    2664:	10001b6a 	andne	r1, r0, sl, ror #22
    2668:	00550001 	subseq	r0, r5, r1
    266c:	00000000 	andeq	r0, r0, r0
    2670:	01000000 	mrseq	r0, (UNDEF: 0)
    2674:	50000000 	andpl	r0, r0, r0
    2678:	5410001b 	ldrpl	r0, [r0], #-27	; 0xffffffe5
    267c:	0210001b 	andseq	r0, r0, #27
    2680:	549f3000 	ldrpl	r3, [pc], #0	; 2688 <__HEAP_SIZE+0x1688>
    2684:	6a10001b 	bvs	4026f8 <__RAM_SIZE+0x3026f8>
    2688:	0110001b 	tsteq	r0, fp, lsl r0
    268c:	00005400 	andeq	r5, r0, r0, lsl #8
    2690:	00000000 	andeq	r0, r0, r0
    2694:	00010000 	andeq	r0, r1, r0
    2698:	10001b38 	andne	r1, r0, r8, lsr fp
    269c:	10001b4c 	andne	r1, r0, ip, asr #22
    26a0:	00500001 	subseq	r0, r0, r1
	...
    26b8:	01000000 	mrseq	r0, (UNDEF: 0)
    26bc:	00005000 	andeq	r5, r0, r0
    26c0:	00000000 	andeq	r0, r0, r0
    26c4:	00050000 	andeq	r0, r5, r0
    26c8:	00000803 	andeq	r0, r0, r3, lsl #16
    26cc:	00000038 	andeq	r0, r0, r8, lsr r0
    26d0:	00000000 	andeq	r0, r0, r0
    26d4:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    26e0:	01f30004 	mvnseq	r0, r4
    26e4:	00009f50 	andeq	r9, r0, r0, asr pc
    26e8:	00000000 	andeq	r0, r0, r0
    26ec:	01020000 	mrseq	r0, (UNDEF: 2)
    26f0:	00000001 	andeq	r0, r0, r1
	...
    26fc:	9f320002 	svcls	0x00320002
	...
    2708:	9f300002 	svcls	0x00300002
	...
    2714:	9f320002 	svcls	0x00320002
	...
    2720:	1e900100 	fmlnes	f0, f0, f0
    2724:	1e901000 	cdpne	0, 9, cr1, cr0, cr0, {0}
    2728:	00011000 	andeq	r1, r1, r0
    272c:	00000050 	andeq	r0, r0, r0, asr r0
    2730:	00000000 	andeq	r0, r0, r0
    2734:	001bf400 	andseq	pc, fp, r0, lsl #8
    2738:	001bf810 	andseq	pc, fp, r0, lsl r8	; <UNPREDICTABLE>
    273c:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    2740:	001bf800 	andseq	pc, fp, r0, lsl #16
    2744:	001c7010 	andseq	r7, ip, r0, lsl r0
    2748:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    274c:	00000020 	andeq	r0, r0, r0, lsr #32
	...
    275c:	001bf400 	andseq	pc, fp, r0, lsl #8
    2760:	001c0e10 	andseq	r0, ip, r0, lsl lr
    2764:	50000110 	andpl	r0, r0, r0, lsl r1
    2768:	10001c0e 	andne	r1, r0, lr, lsl #24
    276c:	10001c48 	andne	r1, r0, r8, asr #24
    2770:	48580001 	ldmdami	r8, {r0}^
    2774:	4e10001c 	mrcmi	0, 0, r0, cr0, cr12, {0}
    2778:	0410001c 	ldreq	r0, [r0], #-28	; 0xffffffe4
    277c:	5001f300 	andpl	pc, r1, r0, lsl #6
    2780:	001c4e9f 	mulseq	ip, pc, lr	; <UNPREDICTABLE>
    2784:	001c7010 	andseq	r7, ip, r0, lsl r0
    2788:	50000110 	andpl	r0, r0, r0, lsl r1
	...
    279c:	10001bf4 	strdne	r1, [r0], -r4
    27a0:	10001c0e 	andne	r1, r0, lr, lsl #24
    27a4:	0e510001 	cdpeq	0, 5, cr0, cr1, cr1, {0}
    27a8:	4810001c 	ldmdami	r0, {r2, r3, r4}
    27ac:	0110001c 	tsteq	r0, ip, lsl r0
    27b0:	1c485700 	mcrrne	7, 0, r5, r8, cr0
    27b4:	1c4e1000 	marne	acc0, r1, lr
    27b8:	00041000 	andeq	r1, r4, r0
    27bc:	9f5101f3 	svcls	0x005101f3
    27c0:	10001c4e 	andne	r1, r0, lr, asr #24
    27c4:	10001c70 	andne	r1, r0, r0, ror ip
    27c8:	00510001 	subseq	r0, r1, r1
	...
    27d8:	001bf400 	andseq	pc, fp, r0, lsl #8
    27dc:	001c0e10 	andseq	r0, ip, r0, lsl lr
    27e0:	52000110 	andpl	r0, r0, #16, 2
    27e4:	10001c0e 	andne	r1, r0, lr, lsl #24
    27e8:	10001c4e 	andne	r1, r0, lr, asr #24
    27ec:	01f30004 	mvnseq	r0, r4
    27f0:	1c4e9f52 	mcrrne	15, 5, r9, lr, cr2
    27f4:	1c701000 	ldclne	0, cr1, [r0], #-0
    27f8:	00011000 	andeq	r1, r1, r0
    27fc:	00000052 	andeq	r0, r0, r2, asr r0
	...
    280c:	001bf400 	andseq	pc, fp, r0, lsl #8
    2810:	001c0e10 	andseq	r0, ip, r0, lsl lr
    2814:	53000110 	movwpl	r0, #272	; 0x110
    2818:	10001c0e 	andne	r1, r0, lr, lsl #24
    281c:	10001c48 	andne	r1, r0, r8, asr #24
    2820:	48550001 	ldmdami	r5, {r0}^
    2824:	4e10001c 	mrcmi	0, 0, r0, cr0, cr12, {0}
    2828:	0410001c 	ldreq	r0, [r0], #-28	; 0xffffffe4
    282c:	5301f300 	movwpl	pc, #4864	; 0x1300	; <UNPREDICTABLE>
    2830:	001c4e9f 	mulseq	ip, pc, lr	; <UNPREDICTABLE>
    2834:	001c7010 	andseq	r7, ip, r0, lsl r0
    2838:	53000110 	movwpl	r0, #272	; 0x110
	...
    2844:	00000001 	andeq	r0, r0, r1
    2848:	1bf80000 	blne	ffe02850 <__StackTop+0xc7d02850>
    284c:	1c0e1000 	stcne	0, cr1, [lr], {-0}
    2850:	00021000 	andeq	r1, r2, r0
    2854:	1c0e9f30 	stcne	15, cr9, [lr], {48}	; 0x30
    2858:	1c481000 	marne	acc0, r1, r8
    285c:	00011000 	andeq	r1, r1, r0
    2860:	001c4e56 	andseq	r4, ip, r6, asr lr
    2864:	001c6410 	andseq	r6, ip, r0, lsl r4
    2868:	30000210 	andcc	r0, r0, r0, lsl r2
    286c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    2870:	00000000 	andeq	r0, r0, r0
    2874:	00000200 	andeq	r0, r0, r0, lsl #4
    2878:	00000101 	andeq	r0, r0, r1, lsl #2
    287c:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
    2880:	0e10001b 	mrceq	0, 0, r0, cr0, cr11, {0}
    2884:	0210001c 	andseq	r0, r0, #28
    2888:	189f3000 	ldmne	pc, {ip, sp}	; <UNPREDICTABLE>
    288c:	2a10001c 	bcs	402904 <__RAM_SIZE+0x302904>
    2890:	0110001c 	tsteq	r0, ip, lsl r0
    2894:	1c2a5200 	sfmne	f5, 4, [sl], #-0
    2898:	1c2e1000 	stcne	0, cr1, [lr], #-0
    289c:	00031000 	andeq	r1, r3, r0
    28a0:	2e9f7f72 	mrccs	15, 4, r7, cr15, cr2, {3}
    28a4:	4810001c 	ldmdami	r0, {r2, r3, r4}
    28a8:	0110001c 	tsteq	r0, ip, lsl r0
    28ac:	1c4e5900 	mcrrne	9, 0, r5, lr, cr0	; <UNPREDICTABLE>
    28b0:	1c701000 	ldclne	0, cr1, [r0], #-0
    28b4:	00021000 	andeq	r1, r2, r0
    28b8:	00009f30 	andeq	r9, r0, r0, lsr pc
    28bc:	00000000 	andeq	r0, r0, r0
    28c0:	00020000 	andeq	r0, r2, r0
    28c4:	00000000 	andeq	r0, r0, r0
    28c8:	10001bf8 	strdne	r1, [r0], -r8
    28cc:	10001c0e 	andne	r1, r0, lr, lsl #24
    28d0:	9f300002 	svcls	0x00300002
    28d4:	10001c36 	andne	r1, r0, r6, lsr ip
    28d8:	10001c39 	andne	r1, r0, r9, lsr ip
    28dc:	4e500001 	cdpmi	0, 5, cr0, cr0, cr1, {0}
    28e0:	7010001c 	andsvc	r0, r0, ip, lsl r0
    28e4:	0210001c 	andseq	r0, r0, #28
    28e8:	009f3000 	addseq	r3, pc, r0
    28ec:	00000000 	andeq	r0, r0, r0
    28f0:	02000000 	andeq	r0, r0, #0
    28f4:	00000000 	andeq	r0, r0, r0
    28f8:	001bf800 	andseq	pc, fp, r0, lsl #16
    28fc:	001c0e10 	andseq	r0, ip, r0, lsl lr
    2900:	30000210 	andcc	r0, r0, r0, lsl r2
    2904:	001c0e9f 	mulseq	ip, pc, lr	; <UNPREDICTABLE>
    2908:	001c4810 	andseq	r4, ip, r0, lsl r8
    290c:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    2910:	10001c4e 	andne	r1, r0, lr, asr #24
    2914:	10001c70 	andne	r1, r0, r0, ror ip
    2918:	9f300002 	svcls	0x00300002
	...
    2924:	10001ce0 	andne	r1, r0, r0, ror #25
    2928:	10001ce2 	andne	r1, r0, r2, ror #25
    292c:	007d0002 	rsbseq	r0, sp, r2
    2930:	10001ce2 	andne	r1, r0, r2, ror #25
    2934:	10001e8c 	andne	r1, r0, ip, lsl #29
    2938:	187d0002 	ldmdane	sp!, {r1}^
	...
    294c:	1ce00000 	stclne	0, cr0, [r0]
    2950:	1d2c1000 	stcne	0, cr1, [ip, #-0]
    2954:	00011000 	andeq	r1, r1, r0
    2958:	001d2c50 	andseq	r2, sp, r0, asr ip
    295c:	001de210 	andseq	lr, sp, r0, lsl r2
    2960:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
    2964:	10001de2 	andne	r1, r0, r2, ror #27
    2968:	10001df6 	strdne	r1, [r0], -r6
    296c:	01f30004 	mvnseq	r0, r4
    2970:	1df69f50 	ldclne	15, cr9, [r6, #320]!	; 0x140
    2974:	1e081000 	cdpne	0, 0, cr1, cr8, cr0, {0}
    2978:	00011000 	andeq	r1, r1, r0
    297c:	001e0855 	andseq	r0, lr, r5, asr r8
    2980:	001e8c10 	andseq	r8, lr, r0, lsl ip
    2984:	f3000410 	vqshl.u8	d0, d0, d0
    2988:	009f5001 	addseq	r5, pc, r1
	...
    2994:	e0000000 	and	r0, r0, r0
    2998:	2f10001c 	svccs	0x0010001c
    299c:	0110001d 	tsteq	r0, sp, lsl r0
    29a0:	1d2f5100 	stfnes	f5, [pc, #-0]	; 29a8 <__HEAP_SIZE+0x19a8>
    29a4:	1e8c1000 	cdpne	0, 8, cr1, cr12, cr0, {0}
    29a8:	00011000 	andeq	r1, r1, r0
    29ac:	00000056 	andeq	r0, r0, r6, asr r0
    29b0:	00000000 	andeq	r0, r0, r0
    29b4:	00000100 	andeq	r0, r0, r0, lsl #2
	...
    29c0:	001ce600 	andseq	lr, ip, r0, lsl #12
    29c4:	001de210 	andseq	lr, sp, r0, lsl r2
    29c8:	30000210 	andcc	r0, r0, r0, lsl r2
    29cc:	001de29f 	mulseq	sp, pc, r2	; <UNPREDICTABLE>
    29d0:	001de410 	andseq	lr, sp, r0, lsl r4
    29d4:	50000110 	andpl	r0, r0, r0, lsl r1
    29d8:	10001de4 	andne	r1, r0, r4, ror #27
    29dc:	10001df6 	strdne	r1, [r0], -r6
    29e0:	f6550001 			; <UNDEFINED> instruction: 0xf6550001
    29e4:	0810001d 	ldmdaeq	r0, {r0, r2, r3, r4}
    29e8:	0210001e 	andseq	r0, r0, #30
    29ec:	089f3000 	ldmeq	pc, {ip, sp}	; <UNPREDICTABLE>
    29f0:	0a10001e 	beq	402a70 <__RAM_SIZE+0x302a70>
    29f4:	0110001e 	tsteq	r0, lr, lsl r0
    29f8:	1e0a5000 	cdpne	0, 0, cr5, cr10, cr0, {0}
    29fc:	1e8c1000 	cdpne	0, 8, cr1, cr12, cr0, {0}
    2a00:	00011000 	andeq	r1, r1, r0
    2a04:	00000055 	andeq	r0, r0, r5, asr r0
    2a08:	00000000 	andeq	r0, r0, r0
    2a0c:	01010100 	mrseq	r0, (UNDEF: 17)
    2a10:	00000101 	andeq	r0, r0, r1, lsl #2
    2a14:	e6000000 	str	r0, [r0], -r0
    2a18:	c810001c 	ldmdagt	r0, {r2, r3, r4}
    2a1c:	0210001d 	andseq	r0, r0, #29
    2a20:	c89f3000 	ldmgt	pc, {ip, sp}	; <UNPREDICTABLE>
    2a24:	f210001d 	vqadd.s16	d0, d0, d13
    2a28:	0210001d 	andseq	r0, r0, #29
    2a2c:	f29f4000 	vaddl.s16	q2, d15, d0
    2a30:	f610001d 			; <UNDEFINED> instruction: 0xf610001d
    2a34:	0210001d 	andseq	r0, r0, #29
    2a38:	f69f3000 			; <UNDEFINED> instruction: 0xf69f3000
    2a3c:	0a10001d 	beq	402ab8 <__RAM_SIZE+0x302ab8>
    2a40:	0210001e 	andseq	r0, r0, #30
    2a44:	0a9f4000 	beq	fe7d2a4c <__StackTop+0xc66d2a4c>
    2a48:	8c10001e 	ldchi	0, cr0, [r0], {30}
    2a4c:	0110001e 	tsteq	r0, lr, lsl r0
    2a50:	00005400 	andeq	r5, r0, r0, lsl #8
    2a54:	00000000 	andeq	r0, r0, r0
    2a58:	05020000 	streq	r0, [r2, #-0]
    2a5c:	01010105 	tsteq	r1, r5, lsl #2
    2a60:	01010101 	tsteq	r1, r1, lsl #2
    2a64:	01010101 	tsteq	r1, r1, lsl #2
    2a68:	01010101 	tsteq	r1, r1, lsl #2
    2a6c:	01010101 	tsteq	r1, r1, lsl #2
    2a70:	01010101 	tsteq	r1, r1, lsl #2
    2a74:	01010101 	tsteq	r1, r1, lsl #2
    2a78:	00010101 	andeq	r0, r1, r1, lsl #2
	...
    2a84:	10001ce6 	andne	r1, r0, r6, ror #25
    2a88:	10001ce6 	andne	r1, r0, r6, ror #25
    2a8c:	e6500001 	ldrb	r0, [r0], -r1
    2a90:	ec10001c 	ldc	0, cr0, [r0], {28}
    2a94:	0310001c 	tsteq	r0, #28
    2a98:	9f047000 	svcls	0x00047000
    2a9c:	10001cec 	andne	r1, r0, ip, ror #25
    2aa0:	10001cf0 	strdne	r1, [r0], -r0
    2aa4:	08700003 	ldmdaeq	r0!, {r0, r1}^
    2aa8:	001cf09f 	mulseq	ip, pc, r0	; <UNPREDICTABLE>
    2aac:	001cf410 	andseq	pc, ip, r0, lsl r4	; <UNPREDICTABLE>
    2ab0:	70000310 	andvc	r0, r0, r0, lsl r3
    2ab4:	1cf49f0c 	ldclne	15, cr9, [r4], #48	; 0x30
    2ab8:	1cf81000 	ldclne	0, cr1, [r8]
    2abc:	00031000 	andeq	r1, r3, r0
    2ac0:	f89f1070 			; <UNDEFINED> instruction: 0xf89f1070
    2ac4:	fc10001c 	ldc2	0, cr0, [r0], {28}
    2ac8:	0310001c 	tsteq	r0, #28
    2acc:	9f147000 	svcls	0x00147000
    2ad0:	10001cfc 	strdne	r1, [r0], -ip
    2ad4:	10001d00 	andne	r1, r0, r0, lsl #26
    2ad8:	18700003 	ldmdane	r0!, {r0, r1}^
    2adc:	001d009f 	mulseq	sp, pc, r0	; <UNPREDICTABLE>
    2ae0:	001d0410 	andseq	r0, sp, r0, lsl r4
    2ae4:	70000310 	andvc	r0, r0, r0, lsl r3
    2ae8:	1d049f1c 	stcne	15, cr9, [r4, #-112]	; 0xffffff90
    2aec:	1d081000 	stcne	0, cr1, [r8, #-0]
    2af0:	00031000 	andeq	r1, r3, r0
    2af4:	089f2070 	ldmeq	pc, {r4, r5, r6, sp}	; <UNPREDICTABLE>
    2af8:	0c10001d 	ldceq	0, cr0, [r0], {29}
    2afc:	0310001d 	tsteq	r0, #29
    2b00:	9f247000 	svcls	0x00247000
    2b04:	10001d0c 	andne	r1, r0, ip, lsl #26
    2b08:	10001d10 	andne	r1, r0, r0, lsl sp
    2b0c:	28700003 	ldmdacs	r0!, {r0, r1}^
    2b10:	001d109f 	mulseq	sp, pc, r0	; <UNPREDICTABLE>
    2b14:	001d1410 	andseq	r1, sp, r0, lsl r4
    2b18:	70000310 	andvc	r0, r0, r0, lsl r3
    2b1c:	1d149f2c 	ldcne	15, cr9, [r4, #-176]	; 0xffffff50
    2b20:	1d181000 	ldcne	0, cr1, [r8, #-0]
    2b24:	00031000 	andeq	r1, r3, r0
    2b28:	189f3070 	ldmne	pc, {r4, r5, r6, ip, sp}	; <UNPREDICTABLE>
    2b2c:	1c10001d 	ldcne	0, cr0, [r0], {29}
    2b30:	0310001d 	tsteq	r0, #29
    2b34:	9f347000 	svcls	0x00347000
    2b38:	10001d1c 	andne	r1, r0, ip, lsl sp
    2b3c:	10001d20 	andne	r1, r0, r0, lsr #26
    2b40:	38700003 	ldmdacc	r0!, {r0, r1}^
    2b44:	001d209f 	mulseq	sp, pc, r0	; <UNPREDICTABLE>
    2b48:	001d2410 	andseq	r2, sp, r0, lsl r4
    2b4c:	70000310 	andvc	r0, r0, r0, lsl r3
    2b50:	1d249f3c 	stcne	15, cr9, [r4, #-240]!	; 0xffffff10
    2b54:	1d2c1000 	stcne	0, cr1, [ip, #-0]
    2b58:	00041000 	andeq	r1, r4, r0
    2b5c:	9f00c070 	svcls	0x0000c070
    2b60:	10001d2c 	andne	r1, r0, ip, lsr #26
    2b64:	10001de2 	andne	r1, r0, r2, ror #27
    2b68:	c0750004 	rsbsgt	r0, r5, r4
    2b6c:	1de29f00 	stclne	15, cr9, [r2]
    2b70:	1df61000 	ldclne	0, cr1, [r6]
    2b74:	00061000 	andeq	r1, r6, r0
    2b78:	235001f3 	cmpcs	r0, #-1073741764	; 0xc000003c
    2b7c:	1df69f40 	ldclne	15, cr9, [r6, #256]!	; 0x100
    2b80:	1e081000 	cdpne	0, 0, cr1, cr8, cr0, {0}
    2b84:	00041000 	andeq	r1, r4, r0
    2b88:	9f00c075 	svcls	0x0000c075
    2b8c:	10001e08 	andne	r1, r0, r8, lsl #28
    2b90:	10001e8c 	andne	r1, r0, ip, lsl #29
    2b94:	01f30006 	mvnseq	r0, r6
    2b98:	9f402350 	svcls	0x00402350
	...
    2ba4:	10001c88 	andne	r1, r0, r8, lsl #25
    2ba8:	10001c8a 	andne	r1, r0, sl, lsl #25
    2bac:	007d0002 	rsbseq	r0, sp, r2
    2bb0:	10001c8a 	andne	r1, r0, sl, lsl #25
    2bb4:	10001c90 	mulne	r0, r0, ip
    2bb8:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    2bc8:	10001c88 	andne	r1, r0, r8, lsl #25
    2bcc:	10001c8d 	andne	r1, r0, sp, lsl #25
    2bd0:	8d500001 	ldclhi	0, cr0, [r0, #-4]
    2bd4:	9010001c 	andsls	r0, r0, ip, lsl r0
    2bd8:	0410001c 	ldreq	r0, [r0], #-28	; 0xffffffe4
    2bdc:	5001f300 	andpl	pc, r1, r0, lsl #6
    2be0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    2be4:	00000000 	andeq	r0, r0, r0
    2be8:	00000100 	andeq	r0, r0, r0, lsl #2
    2bec:	001c8a00 	andseq	r8, ip, r0, lsl #20
    2bf0:	001c8e10 	andseq	r8, ip, r0, lsl lr
    2bf4:	31000210 	tstcc	r0, r0, lsl r2
    2bf8:	001c8e9f 	mulseq	ip, pc, lr	; <UNPREDICTABLE>
    2bfc:	001c9010 	andseq	r9, ip, r0, lsl r0
    2c00:	50000110 	andpl	r0, r0, r0, lsl r1
	...
    2c0c:	10001c70 	andne	r1, r0, r0, ror ip
    2c10:	10001c72 	andne	r1, r0, r2, ror ip
    2c14:	007d0002 	rsbseq	r0, sp, r2
    2c18:	10001c72 	andne	r1, r0, r2, ror ip
    2c1c:	10001c88 	andne	r1, r0, r8, lsl #25
    2c20:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    2c34:	10001c70 	andne	r1, r0, r0, ror ip
    2c38:	10001c78 	andne	r1, r0, r8, ror ip
    2c3c:	78500001 	ldmdavc	r0, {r0}^
    2c40:	7b10001c 	blvc	402cb8 <__RAM_SIZE+0x302cb8>
    2c44:	0110001c 	tsteq	r0, ip, lsl r0
    2c48:	1c7b5100 	ldfnee	f5, [fp], #-0
    2c4c:	1c841000 	stcne	0, cr1, [r4], {0}
    2c50:	00011000 	andeq	r1, r1, r0
    2c54:	001c8454 	andseq	r8, ip, r4, asr r4
    2c58:	001c8810 	andseq	r8, ip, r0, lsl r8
    2c5c:	f3000410 	vqshl.u8	d0, d0, d0
    2c60:	009f5001 	addseq	r5, pc, r1
	...
    2c6c:	bc000000 	stclt	0, cr0, [r0], {-0}
    2c70:	c210001b 	andsgt	r0, r0, #27
    2c74:	0110001b 	tsteq	r0, fp, lsl r0
    2c78:	1bc25000 	blne	ff096c80 <__StackTop+0xc6f96c80>
    2c7c:	1bf21000 	blne	ffc86c84 <__StackTop+0xc7b86c84>
    2c80:	00041000 	andeq	r1, r4, r0
    2c84:	9f5001f3 	svcls	0x005001f3
	...
    2c90:	1bc00000 	blne	ff002c98 <__StackTop+0xc6f02c98>
    2c94:	1bf21000 	blne	ffc86c9c <__StackTop+0xc7b86c9c>
    2c98:	00011000 	andeq	r1, r1, r0
    2c9c:	00000053 	andeq	r0, r0, r3, asr r0
	...
    2cb8:	001bc600 	andseq	ip, fp, r0, lsl #12
    2cbc:	001be010 	andseq	lr, fp, r0, lsl r0
    2cc0:	50000110 	andpl	r0, r0, r0, lsl r1
    2cc4:	10001be0 	andne	r1, r0, r0, ror #23
    2cc8:	10001be2 	andne	r1, r0, r2, ror #23
    2ccc:	01f3000a 	mvnseq	r0, sl
    2cd0:	0a254050 	beq	952e18 <__RAM_SIZE+0x852e18>
    2cd4:	9f1af800 	svcls	0x001af800
    2cd8:	10001be2 	andne	r1, r0, r2, ror #23
    2cdc:	10001be4 	andne	r1, r0, r4, ror #23
    2ce0:	e4500001 	ldrb	r0, [r0], #-1
    2ce4:	e610001b 			; <UNDEFINED> instruction: 0xe610001b
    2ce8:	0a10001b 	beq	402d5c <__RAM_SIZE+0x302d5c>
    2cec:	5001f300 	andpl	pc, r1, r0, lsl #6
    2cf0:	000a2540 	andeq	r2, sl, r0, asr #10
    2cf4:	e69f1af8 			; <UNDEFINED> instruction: 0xe69f1af8
    2cf8:	e810001b 	ldmda	r0, {r0, r1, r3, r4}
    2cfc:	0110001b 	tsteq	r0, fp, lsl r0
    2d00:	1be85000 	blne	ffa16d08 <__StackTop+0xc7916d08>
    2d04:	1bea1000 	blne	ffa86d0c <__StackTop+0xc7986d0c>
    2d08:	000a1000 	andeq	r1, sl, r0
    2d0c:	405001f3 	ldrshmi	r0, [r0], #-19	; 0xffffffed
    2d10:	f8000a25 			; <UNDEFINED> instruction: 0xf8000a25
    2d14:	1bea9f1a 	blne	ffaaa984 <__StackTop+0xc79aa984>
    2d18:	1bec1000 	blne	ffb06d20 <__StackTop+0xc7a06d20>
    2d1c:	00011000 	andeq	r1, r1, r0
    2d20:	001bec50 	andseq	lr, fp, r0, asr ip
    2d24:	001bee10 	andseq	lr, fp, r0, lsl lr
    2d28:	f3000a10 	vpmin.u8	d0, d0, d0
    2d2c:	25405001 	strbcs	r5, [r0, #-1]
    2d30:	1af8000a 	bne	ffe02d60 <__StackTop+0xc7d02d60>
    2d34:	001bee9f 	mulseq	fp, pc, lr	; <UNPREDICTABLE>
    2d38:	001bf010 	andseq	pc, fp, r0, lsl r0	; <UNPREDICTABLE>
    2d3c:	50000110 	andpl	r0, r0, r0, lsl r1
    2d40:	10001bf0 	strdne	r1, [r0], -r0
    2d44:	10001bf2 	strdne	r1, [r0], -r2
    2d48:	01f3000a 	mvnseq	r0, sl
    2d4c:	0a254050 	beq	952e94 <__RAM_SIZE+0x852e94>
    2d50:	9f1af800 	svcls	0x001af800
	...
    2d5c:	10001b90 	mulne	r0, r0, fp
    2d60:	10001b92 	mulne	r0, r2, fp
    2d64:	007d0002 	rsbseq	r0, sp, r2
    2d68:	10001b92 	mulne	r0, r2, fp
    2d6c:	10001bba 			; <UNDEFINED> instruction: 0x10001bba
    2d70:	087d0002 	ldmdaeq	sp!, {r1}^
    2d74:	10001bba 			; <UNDEFINED> instruction: 0x10001bba
    2d78:	10001bbc 			; <UNDEFINED> instruction: 0x10001bbc
    2d7c:	007d0002 	rsbseq	r0, sp, r2
	...
    2d8c:	10001b90 	mulne	r0, r0, fp
    2d90:	10001bb0 			; <UNDEFINED> instruction: 0x10001bb0
    2d94:	b0500001 	subslt	r0, r0, r1
    2d98:	bc10001b 	ldclt	0, cr0, [r0], {27}
    2d9c:	0410001b 	ldreq	r0, [r0], #-27	; 0xffffffe5
    2da0:	5001f300 	andpl	pc, r1, r0, lsl #6
    2da4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    2da8:	00000000 	andeq	r0, r0, r0
    2dac:	00000100 	andeq	r0, r0, r0, lsl #2
    2db0:	96000000 	strls	r0, [r0], -r0
    2db4:	b410001b 	ldrlt	r0, [r0], #-27	; 0xffffffe5
    2db8:	0210001b 	andseq	r0, r0, #27
    2dbc:	b49f3000 	ldrlt	r3, [pc], #0	; 2dc4 <__HEAP_SIZE+0x1dc4>
    2dc0:	b810001b 	ldmdalt	r0, {r0, r1, r3, r4}
    2dc4:	0810001b 	ldmdaeq	r0, {r0, r1, r3, r4}
    2dc8:	40007000 	andmi	r7, r0, r0
    2dcc:	21007324 	tstcs	r0, r4, lsr #6
    2dd0:	001bb89f 	mulseq	fp, pc, r8	; <UNPREDICTABLE>
    2dd4:	001bbc10 	andseq	fp, fp, r0, lsl ip
    2dd8:	50000110 	andpl	r0, r0, r0, lsl r1
	...
    2de4:	00000003 	andeq	r0, r0, r3
    2de8:	10001b96 	mulne	r0, r6, fp
    2dec:	10001b98 	mulne	r0, r8, fp
    2df0:	9f300002 	svcls	0x00300002
    2df4:	10001b98 	mulne	r0, r8, fp
    2df8:	10001bb4 			; <UNDEFINED> instruction: 0x10001bb4
    2dfc:	00530001 	subseq	r0, r3, r1
    2e00:	00000000 	andeq	r0, r0, r0
    2e04:	90000000 	andls	r0, r0, r0
    2e08:	9210001c 	andsls	r0, r0, #28
    2e0c:	0210001c 	andseq	r0, r0, #28
    2e10:	92007d00 	andls	r7, r0, #0, 26
    2e14:	e010001c 	ands	r0, r0, ip, lsl r0
    2e18:	0210001c 	andseq	r0, r0, #28
    2e1c:	00087d00 	andeq	r7, r8, r0, lsl #26
    2e20:	00000000 	andeq	r0, r0, r0
    2e24:	a8000000 	stmdage	r0, {}	; <UNPREDICTABLE>
    2e28:	aa10001f 	bge	402eac <__RAM_SIZE+0x302eac>
    2e2c:	0210001f 	andseq	r0, r0, #31
    2e30:	aa007d00 	bge	22238 <__HEAP_SIZE+0x21238>
    2e34:	ac10001f 	ldcge	0, cr0, [r0], {31}
    2e38:	0210001f 	andseq	r0, r0, #31
    2e3c:	ac0c7d00 	stcge	13, cr7, [ip], {-0}
    2e40:	ea10001f 	b	402ec4 <__RAM_SIZE+0x302ec4>
    2e44:	0210001f 	andseq	r0, r0, #31
    2e48:	ea187d00 	b	622250 <__RAM_SIZE+0x522250>
    2e4c:	f410001f 			; <UNDEFINED> instruction: 0xf410001f
    2e50:	0210001f 	andseq	r0, r0, #31
    2e54:	000c7d00 	andeq	r7, ip, r0, lsl #26
    2e58:	00000000 	andeq	r0, r0, r0
    2e5c:	01000000 	mrseq	r0, (UNDEF: 0)
    2e60:	01010101 	tsteq	r1, r1, lsl #2
    2e64:	001fac00 	andseq	sl, pc, r0, lsl #24
    2e68:	001fca10 	andseq	ip, pc, r0, lsl sl	; <UNPREDICTABLE>
    2e6c:	30000210 	andcc	r0, r0, r0, lsl r2
    2e70:	001fca9f 	mulseq	pc, pc, sl	; <UNPREDICTABLE>
    2e74:	001fd810 	andseq	sp, pc, r0, lsl r8	; <UNPREDICTABLE>
    2e78:	34000210 	strcc	r0, [r0], #-528	; 0xfffffdf0
    2e7c:	001fd89f 	mulseq	pc, pc, r8	; <UNPREDICTABLE>
    2e80:	001ff410 	andseq	pc, pc, r0, lsl r4	; <UNPREDICTABLE>
    2e84:	33000210 	movwcc	r0, #528	; 0x210
    2e88:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    2e98:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    2ea4:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    2ea8:	00000008 	andeq	r0, r0, r8
	...
    2eb8:	001f9800 	andseq	r9, pc, r0, lsl #16
    2ebc:	001fa010 	andseq	sl, pc, r0, lsl r0	; <UNPREDICTABLE>
    2ec0:	50000110 	andpl	r0, r0, r0, lsl r1
    2ec4:	10001fa0 	andne	r1, r0, r0, lsr #31
    2ec8:	10001fa2 	andne	r1, r0, r2, lsr #31
    2ecc:	01f30004 	mvnseq	r0, r4
    2ed0:	1fa29f50 	svcne	0x00a29f50
    2ed4:	1fa41000 	svcne	0x00a41000
    2ed8:	00011000 	andeq	r1, r1, r0
    2edc:	001fa450 	andseq	sl, pc, r0, asr r4	; <UNPREDICTABLE>
    2ee0:	001fa610 	andseq	sl, pc, r0, lsl r6	; <UNPREDICTABLE>
    2ee4:	f3000410 	vqshl.u8	d0, d0, d0
    2ee8:	009f5001 	addseq	r5, pc, r1
    2eec:	00000000 	andeq	r0, r0, r0
    2ef0:	9c000000 	stcls	0, cr0, [r0], {-0}
    2ef4:	9e10001e 	mrcls	0, 0, r0, cr0, cr14, {0}
    2ef8:	0210001e 	andseq	r0, r0, #30
    2efc:	9e007d00 	cdpls	13, 0, cr7, cr0, cr0, {0}
    2f00:	9810001e 	ldmdals	r0, {r1, r2, r3, r4}
    2f04:	0210001f 	andseq	r0, r0, #31
    2f08:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    2f14:	9c000000 	stcls	0, cr0, [r0], {-0}
    2f18:	a210001e 	andsge	r0, r0, #30
    2f1c:	0110001e 	tsteq	r0, lr, lsl r0
    2f20:	1ea25000 	cdpne	0, 10, cr5, cr2, cr0, {0}
    2f24:	1f981000 	svcne	0x00981000
    2f28:	00011000 	andeq	r1, r1, r0
    2f2c:	00000054 	andeq	r0, r0, r4, asr r0
	...
    2f38:	46000000 	strmi	r0, [r0], -r0
    2f3c:	5e100020 	cdppl	0, 1, cr0, cr0, cr0, {1}
    2f40:	01100020 	tsteq	r0, r0, lsr #32
    2f44:	205e5000 	subscs	r5, lr, r0
    2f48:	20641000 	rsbcs	r1, r4, r0
    2f4c:	00041000 	andeq	r1, r4, r0
    2f50:	9f5001f3 	svcls	0x005001f3
    2f54:	10002064 	andne	r2, r0, r4, rrx
    2f58:	1000206a 	andne	r2, r0, sl, rrx
    2f5c:	00500001 	subseq	r0, r0, r1
	...
    2f68:	00204800 	eoreq	r4, r0, r0, lsl #16
    2f6c:	00206a10 	eoreq	r6, r0, r0, lsl sl
    2f70:	53000110 	movwpl	r0, #272	; 0x110
	...
    2f7c:	10002014 	andne	r2, r0, r4, lsl r0
    2f80:	10002016 	andne	r2, r0, r6, lsl r0
    2f84:	007d0002 	rsbseq	r0, sp, r2
    2f88:	10002016 	andne	r2, r0, r6, lsl r0
    2f8c:	10002040 	andne	r2, r0, r0, asr #32
    2f90:	087d0002 	ldmdaeq	sp!, {r1}^
    2f94:	10002040 	andne	r2, r0, r0, asr #32
    2f98:	10002042 	andne	r2, r0, r2, asr #32
    2f9c:	007d0002 	rsbseq	r0, sp, r2
    2fa0:	10002042 	andne	r2, r0, r2, asr #32
    2fa4:	10002046 	andne	r2, r0, r6, asr #32
    2fa8:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    2fb8:	20220000 	eorcs	r0, r2, r0
    2fbc:	20261000 	eorcs	r1, r6, r0
    2fc0:	00011000 	andeq	r1, r1, r0
    2fc4:	00202653 	eoreq	r2, r0, r3, asr r6
    2fc8:	00204010 	eoreq	r4, r0, r0, lsl r0
    2fcc:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    2fd0:	10002044 	andne	r2, r0, r4, asr #32
    2fd4:	10002046 	andne	r2, r0, r6, asr #32
    2fd8:	00540001 	subseq	r0, r4, r1
	...
    2fe4:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    2fe8:	40100020 	andsmi	r0, r0, r0, lsr #32
    2fec:	01100020 	tsteq	r0, r0, lsr #32
    2ff0:	20425500 	subcs	r5, r2, r0, lsl #10
    2ff4:	20461000 	subcs	r1, r6, r0
    2ff8:	00011000 	andeq	r1, r1, r0
    2ffc:	00000055 	andeq	r0, r0, r5, asr r0
	...
    300c:	01000000 	mrseq	r0, (UNDEF: 0)
    3010:	00005300 	andeq	r5, r0, r0, lsl #6
    3014:	00000000 	andeq	r0, r0, r0
    3018:	211e0000 	tstcs	lr, r0
    301c:	21201000 			; <UNDEFINED> instruction: 0x21201000
    3020:	00021000 	andeq	r1, r2, r0
    3024:	2120007d 			; <UNDEFINED> instruction: 0x2120007d
    3028:	21221000 			; <UNDEFINED> instruction: 0x21221000
    302c:	00021000 	andeq	r1, r2, r0
    3030:	2122107d 			; <UNDEFINED> instruction: 0x2122107d
    3034:	21341000 	teqcs	r4, r0
    3038:	00021000 	andeq	r1, r2, r0
    303c:	2134187d 	teqcs	r4, sp, ror r8
    3040:	21361000 	teqcs	r6, r0
    3044:	00021000 	andeq	r1, r2, r0
    3048:	2136107d 	teqcs	r6, sp, ror r0
    304c:	21761000 	cmncs	r6, r0
    3050:	00021000 	andeq	r1, r2, r0
    3054:	0000187d 	andeq	r1, r0, sp, ror r8
	...
    3064:	1000211e 	andne	r2, r0, lr, lsl r1
    3068:	10002130 	andne	r2, r0, r0, lsr r1
    306c:	36500001 	ldrbcc	r0, [r0], -r1
    3070:	42100021 	andsmi	r0, r0, #33	; 0x21
    3074:	01100021 	tsteq	r0, r1, lsr #32
    3078:	21425000 	mrscs	r5, (UNDEF: 66)
    307c:	21451000 	mrscs	r1, (UNDEF: 69)
    3080:	00021000 	andeq	r1, r2, r0
    3084:	00000071 	andeq	r0, r0, r1, ror r0
	...
    3090:	10002126 	andne	r2, r0, r6, lsr #2
    3094:	10002176 	andne	r2, r0, r6, ror r1
    3098:	00540001 	subseq	r0, r4, r1
    309c:	00000000 	andeq	r0, r0, r0
    30a0:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    30b0:	00212600 	eoreq	r2, r1, r0, lsl #12
    30b4:	00213010 	eoreq	r3, r1, r0, lsl r0
    30b8:	30000210 	andcc	r0, r0, r0, lsl r2
    30bc:	0021369f 	mlaeq	r1, pc, r6, r3	; <UNPREDICTABLE>
    30c0:	00214810 	eoreq	r4, r1, r0, lsl r8
    30c4:	30000210 	andcc	r0, r0, r0, lsl r2
    30c8:	0021489f 	mlaeq	r1, pc, r8, r4	; <UNPREDICTABLE>
    30cc:	00215810 	eoreq	r5, r1, r0, lsl r8
    30d0:	50000110 	andpl	r0, r0, r0, lsl r1
    30d4:	10002158 	andne	r2, r0, r8, asr r1
    30d8:	10002162 	andne	r2, r0, r2, ror #2
    30dc:	62550001 	subsvs	r0, r5, #1
    30e0:	64100021 	ldrvs	r0, [r0], #-33	; 0xffffffdf
    30e4:	02100021 	andseq	r0, r0, #33	; 0x21
    30e8:	649f3100 	ldrvs	r3, [pc], #256	; 30f0 <__HEAP_SIZE+0x20f0>
    30ec:	67100021 	ldrvs	r0, [r0, -r1, lsr #32]
    30f0:	01100021 	tsteq	r0, r1, lsr #32
    30f4:	21675000 	cmncs	r7, r0
    30f8:	21761000 	cmncs	r6, r0
    30fc:	00011000 	andeq	r1, r1, r0
    3100:	00000055 	andeq	r0, r0, r5, asr r0
	...
    310c:	00213c00 	eoreq	r3, r1, r0, lsl #24
    3110:	00216e10 	eoreq	r6, r1, r0, lsl lr
    3114:	56000110 			; <UNDEFINED> instruction: 0x56000110
    3118:	1000216e 	andne	r2, r0, lr, ror #2
    311c:	10002170 	andne	r2, r0, r0, ror r1
    3120:	7f760003 	svcvc	0x00760003
    3124:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3128:	00000000 	andeq	r0, r0, r0
    312c:	68000000 	stmdavs	r0, {}	; <UNPREDICTABLE>
    3130:	76100021 	ldrvc	r0, [r0], -r1, lsr #32
    3134:	01100021 	tsteq	r0, r1, lsr #32
    3138:	00005000 	andeq	r5, r0, r0
	...
    3148:	00020000 	andeq	r0, r2, r0
    314c:	0000007d 	andeq	r0, r0, sp, ror r0
    3150:	00000000 	andeq	r0, r0, r0
    3154:	00020000 	andeq	r0, r2, r0
    3158:	0000047d 	andeq	r0, r0, sp, ror r4
    315c:	00000000 	andeq	r0, r0, r0
    3160:	00020000 	andeq	r0, r2, r0
    3164:	0000107d 	andeq	r1, r0, sp, ror r0
    3168:	00000000 	andeq	r0, r0, r0
    316c:	00020000 	andeq	r0, r2, r0
    3170:	0000047d 	andeq	r0, r0, sp, ror r4
	...
    3184:	00010000 	andeq	r0, r1, r0
    3188:	00000050 	andeq	r0, r0, r0, asr r0
    318c:	00000000 	andeq	r0, r0, r0
    3190:	f3000400 	vshl.u8	d0, d0, d0
    3194:	009f5001 	addseq	r5, pc, r1
	...
    31a4:	02000000 	andeq	r0, r0, #0
    31a8:	00007d00 	andeq	r7, r0, r0, lsl #26
    31ac:	00000000 	andeq	r0, r0, r0
    31b0:	02000000 	andeq	r0, r0, #0
    31b4:	00047d00 	andeq	r7, r4, r0, lsl #26
    31b8:	00000000 	andeq	r0, r0, r0
    31bc:	02000000 	andeq	r0, r0, #0
    31c0:	00107d00 	andseq	r7, r0, r0, lsl #26
    31c4:	00000000 	andeq	r0, r0, r0
    31c8:	02000000 	andeq	r0, r0, #0
    31cc:	00047d00 	andeq	r7, r4, r0, lsl #26
	...
    31e0:	01000000 	mrseq	r0, (UNDEF: 0)
    31e4:	00005000 	andeq	r5, r0, r0
    31e8:	00000000 	andeq	r0, r0, r0
    31ec:	00040000 	andeq	r0, r4, r0
    31f0:	9f5001f3 	svcls	0x005001f3
	...
    3208:	00010000 	andeq	r0, r1, r0
    320c:	00000051 	andeq	r0, r0, r1, asr r0
    3210:	00000000 	andeq	r0, r0, r0
    3214:	52000100 	andpl	r0, r0, #0, 2
	...
    3220:	01f30004 	mvnseq	r0, r4
    3224:	00009f51 	andeq	r9, r0, r1, asr pc
	...
    3234:	00020000 	andeq	r0, r2, r0
    3238:	0000007d 	andeq	r0, r0, sp, ror r0
    323c:	00000000 	andeq	r0, r0, r0
    3240:	00020000 	andeq	r0, r2, r0
    3244:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    3260:	00010000 	andeq	r0, r1, r0
    3264:	00000050 	andeq	r0, r0, r0, asr r0
    3268:	00000000 	andeq	r0, r0, r0
    326c:	f3000400 	vshl.u8	d0, d0, d0
    3270:	009f5001 	addseq	r5, pc, r1
    3274:	00000000 	andeq	r0, r0, r0
    3278:	01000000 	mrseq	r0, (UNDEF: 0)
    327c:	00005000 	andeq	r5, r0, r0
    3280:	00000000 	andeq	r0, r0, r0
    3284:	00010000 	andeq	r0, r1, r0
    3288:	00000054 	andeq	r0, r0, r4, asr r0
    328c:	00000000 	andeq	r0, r0, r0
    3290:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    329c:	00540001 	subseq	r0, r4, r1
	...
    32a8:	00000202 	andeq	r0, r0, r2, lsl #4
	...
    32b4:	01000000 	mrseq	r0, (UNDEF: 0)
    32b8:	00005100 	andeq	r5, r0, r0, lsl #2
    32bc:	00000000 	andeq	r0, r0, r0
    32c0:	00040000 	andeq	r0, r4, r0
    32c4:	9f5101f3 	svcls	0x005101f3
	...
    32d0:	00510001 	subseq	r0, r1, r1
    32d4:	00000000 	andeq	r0, r0, r0
    32d8:	04000000 	streq	r0, [r0], #-0
    32dc:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    32e0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    32e4:	00000000 	andeq	r0, r0, r0
    32e8:	01020000 	mrseq	r0, (UNDEF: 2)
	...
    32f4:	30000200 	andcc	r0, r0, r0, lsl #4
    32f8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    32fc:	00000000 	andeq	r0, r0, r0
    3300:	31000200 	mrscc	r0, R8_usr
    3304:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3308:	00000000 	andeq	r0, r0, r0
    330c:	00000300 	andeq	r0, r0, r0, lsl #6
	...
    3320:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    332c:	01f30004 	mvnseq	r0, r4
    3330:	00009f50 	andeq	r9, r0, r0, asr pc
    3334:	00000000 	andeq	r0, r0, r0
    3338:	00010000 	andeq	r0, r1, r0
    333c:	00000050 	andeq	r0, r0, r0, asr r0
    3340:	00000000 	andeq	r0, r0, r0
    3344:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    3350:	00500001 	subseq	r0, r0, r1
    3354:	00000000 	andeq	r0, r0, r0
    3358:	01000000 	mrseq	r0, (UNDEF: 0)
    335c:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    336c:	00020000 	andeq	r0, r2, r0
    3370:	0000007d 	andeq	r0, r0, sp, ror r0
    3374:	00000000 	andeq	r0, r0, r0
    3378:	00020000 	andeq	r0, r2, r0
    337c:	0000107d 	andeq	r1, r0, sp, ror r0
	...
    339c:	00500001 	subseq	r0, r0, r1
    33a0:	00000000 	andeq	r0, r0, r0
    33a4:	01000000 	mrseq	r0, (UNDEF: 0)
    33a8:	00005400 	andeq	r5, r0, r0, lsl #8
    33ac:	00000000 	andeq	r0, r0, r0
    33b0:	00040000 	andeq	r0, r4, r0
    33b4:	9f5001f3 	svcls	0x005001f3
	...
    33c0:	00540001 	subseq	r0, r4, r1
    33c4:	00000000 	andeq	r0, r0, r0
    33c8:	04000000 	streq	r0, [r0], #-0
    33cc:	5001f300 	andpl	pc, r1, r0, lsl #6
    33d0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    33d4:	00000000 	andeq	r0, r0, r0
    33d8:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    33e4:	01f30004 	mvnseq	r0, r4
    33e8:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    33fc:	00010000 	andeq	r0, r1, r0
    3400:	00000051 	andeq	r0, r0, r1, asr r0
    3404:	00000000 	andeq	r0, r0, r0
    3408:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    3414:	00010000 	andeq	r0, r1, r0
	...
    3420:	00540001 	subseq	r0, r4, r1
    3424:	00000000 	andeq	r0, r0, r0
    3428:	02000000 	andeq	r0, r0, #0
    342c:	009f3100 	addseq	r3, pc, r0, lsl #2
	...
    343c:	02000000 	andeq	r0, r0, #0
    3440:	00007d00 	andeq	r7, r0, r0, lsl #26
    3444:	00000000 	andeq	r0, r0, r0
    3448:	02000000 	andeq	r0, r0, #0
    344c:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    3460:	01000000 	mrseq	r0, (UNDEF: 0)
    3464:	00005000 	andeq	r5, r0, r0
    3468:	00000000 	andeq	r0, r0, r0
    346c:	00040000 	andeq	r0, r4, r0
    3470:	9f5001f3 	svcls	0x005001f3
	...
    3484:	00010000 	andeq	r0, r1, r0
    3488:	00000050 	andeq	r0, r0, r0, asr r0
    348c:	00000000 	andeq	r0, r0, r0
    3490:	0023cc00 	eoreq	ip, r3, r0, lsl #24
    3494:	0023ce10 	eoreq	ip, r3, r0, lsl lr
    3498:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    349c:	0023ce00 	eoreq	ip, r3, r0, lsl #28
    34a0:	00241e10 	eoreq	r1, r4, r0, lsl lr
    34a4:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    34a8:	00000010 	andeq	r0, r0, r0, lsl r0
	...
    34b4:	0023cc00 	eoreq	ip, r3, r0, lsl #24
    34b8:	0023d710 	eoreq	sp, r3, r0, lsl r7
    34bc:	50000110 	andpl	r0, r0, r0, lsl r1
    34c0:	100023d7 	ldrdne	r2, [r0], -r7
    34c4:	1000241e 	andne	r2, r0, lr, lsl r4
    34c8:	00540001 	subseq	r0, r4, r1
	...
    34d4:	cc000000 	stcgt	0, cr0, [r0], {-0}
    34d8:	d7100023 	ldrle	r0, [r0, -r3, lsr #32]
    34dc:	01100023 	tsteq	r0, r3, lsr #32
    34e0:	23d75100 	bicscs	r5, r7, #0, 2
    34e4:	241e1000 	ldrcs	r1, [lr], #-0
    34e8:	00011000 	andeq	r1, r1, r0
    34ec:	00000055 	andeq	r0, r0, r5, asr r0
	...
    34f8:	0023cc00 	eoreq	ip, r3, r0, lsl #24
    34fc:	0023d710 	eoreq	sp, r3, r0, lsl r7
    3500:	52000110 	andpl	r0, r0, #16, 2
    3504:	100023d7 	ldrdne	r2, [r0], -r7
    3508:	1000241e 	andne	r2, r0, lr, lsl r4
    350c:	00560001 	subseq	r0, r6, r1
    3510:	00000000 	andeq	r0, r0, r0
    3514:	01000000 	mrseq	r0, (UNDEF: 0)
    3518:	d4000000 	strle	r0, [r0], #-0
    351c:	d7100023 	ldrle	r0, [r0, -r3, lsr #32]
    3520:	01100023 	tsteq	r0, r3, lsr #32
    3524:	23d75000 	bicscs	r5, r7, #0
    3528:	241e1000 	ldrcs	r1, [lr], #-0
    352c:	00011000 	andeq	r1, r1, r0
    3530:	00000054 	andeq	r0, r0, r4, asr r0
	...
    3548:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    3554:	01f30004 	mvnseq	r0, r4
    3558:	00009f50 	andeq	r9, r0, r0, asr pc
    355c:	00000000 	andeq	r0, r0, r0
    3560:	00010000 	andeq	r0, r1, r0
    3564:	00000050 	andeq	r0, r0, r0, asr r0
    3568:	00000000 	andeq	r0, r0, r0
    356c:	f3000400 	vshl.u8	d0, d0, d0
    3570:	009f5001 	addseq	r5, pc, r1
	...
    3584:	30000200 	andcc	r0, r0, r0, lsl #4
    3588:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    358c:	00000000 	andeq	r0, r0, r0
    3590:	00000300 	andeq	r0, r0, r0, lsl #6
	...
    35a0:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    35ac:	01f30004 	mvnseq	r0, r4
    35b0:	00009f50 	andeq	r9, r0, r0, asr pc
    35b4:	00000000 	andeq	r0, r0, r0
    35b8:	00010000 	andeq	r0, r1, r0
    35bc:	00000050 	andeq	r0, r0, r0, asr r0
    35c0:	00000000 	andeq	r0, r0, r0
    35c4:	f3000400 	vshl.u8	d0, d0, d0
    35c8:	009f5001 	addseq	r5, pc, r1
	...
    35d8:	02000000 	andeq	r0, r0, #0
    35dc:	00007d00 	andeq	r7, r0, r0, lsl #26
    35e0:	00000000 	andeq	r0, r0, r0
    35e4:	02000000 	andeq	r0, r0, #0
    35e8:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    3604:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    3610:	00540001 	subseq	r0, r4, r1
    3614:	00000000 	andeq	r0, r0, r0
    3618:	04000000 	streq	r0, [r0], #-0
    361c:	5001f300 	andpl	pc, r1, r0, lsl #6
    3620:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3624:	00000000 	andeq	r0, r0, r0
    3628:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    3634:	01f30004 	mvnseq	r0, r4
    3638:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    364c:	00540001 	subseq	r0, r4, r1
	...
    3664:	01000000 	mrseq	r0, (UNDEF: 0)
    3668:	00005000 	andeq	r5, r0, r0
    366c:	00000000 	andeq	r0, r0, r0
    3670:	00040000 	andeq	r0, r4, r0
    3674:	9f5001f3 	svcls	0x005001f3
	...
    3680:	00500001 	subseq	r0, r0, r1
    3684:	00000000 	andeq	r0, r0, r0
    3688:	04000000 	streq	r0, [r0], #-0
    368c:	5001f300 	andpl	pc, r1, r0, lsl #6
    3690:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3694:	00000000 	andeq	r0, r0, r0
    3698:	00000300 	andeq	r0, r0, r0, lsl #6
	...
    36a8:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    36b4:	01f30004 	mvnseq	r0, r4
    36b8:	00009f50 	andeq	r9, r0, r0, asr pc
    36bc:	00000000 	andeq	r0, r0, r0
    36c0:	00010000 	andeq	r0, r1, r0
    36c4:	00000050 	andeq	r0, r0, r0, asr r0
    36c8:	00000000 	andeq	r0, r0, r0
    36cc:	f3000400 	vshl.u8	d0, d0, d0
    36d0:	009f5001 	addseq	r5, pc, r1
    36d4:	00000000 	andeq	r0, r0, r0
    36d8:	6a000000 	bvs	36e0 <__HEAP_SIZE+0x26e0>
    36dc:	6c100020 	ldcvs	0, cr0, [r0], {32}
    36e0:	02100020 	andseq	r0, r0, #32
    36e4:	6c007d00 	stcvs	13, cr7, [r0], {-0}
    36e8:	84100020 	ldrhi	r0, [r0], #-32	; 0xffffffe0
    36ec:	02100020 	andseq	r0, r0, #32
    36f0:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    3704:	00206a00 	eoreq	r6, r0, r0, lsl #20
    3708:	00207110 	eoreq	r7, r0, r0, lsl r1
    370c:	50000110 	andpl	r0, r0, r0, lsl r1
    3710:	10002071 	andne	r2, r0, r1, ror r0
    3714:	10002078 	andne	r2, r0, r8, ror r0
    3718:	78540001 	ldmdavc	r4, {r0}^
    371c:	80100020 	andshi	r0, r0, r0, lsr #32
    3720:	04100020 	ldreq	r0, [r0], #-32	; 0xffffffe0
    3724:	5001f300 	andpl	pc, r1, r0, lsl #6
    3728:	0020809f 	mlaeq	r0, pc, r0, r8	; <UNPREDICTABLE>
    372c:	00208210 	eoreq	r8, r0, r0, lsl r2
    3730:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    3734:	10002082 	andne	r2, r0, r2, lsl #1
    3738:	10002084 	andne	r2, r0, r4, lsl #1
    373c:	01f30004 	mvnseq	r0, r4
    3740:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    374c:	10002078 	andne	r2, r0, r8, ror r0
    3750:	10002080 	andne	r2, r0, r0, lsl #1
    3754:	00540001 	subseq	r0, r4, r1
    3758:	00000000 	andeq	r0, r0, r0
    375c:	76000000 	strvc	r0, [r0], -r0
    3760:	78100021 	ldmdavc	r0, {r0, r5}
    3764:	02100021 	andseq	r0, r0, #33	; 0x21
    3768:	78007d00 	stmdavc	r0, {r8, sl, fp, ip, sp, lr}
    376c:	f8100021 			; <UNDEFINED> instruction: 0xf8100021
    3770:	02100021 	andseq	r0, r0, #33	; 0x21
    3774:	00107d00 	andseq	r7, r0, r0, lsl #26
	...
    3780:	76000000 	strvc	r0, [r0], -r0
    3784:	7d100021 	ldcvc	0, cr0, [r0, #-132]	; 0xffffff7c
    3788:	01100021 	tsteq	r0, r1, lsr #32
    378c:	217d5000 	cmncs	sp, r0
    3790:	21f81000 	mvnscs	r1, r0
    3794:	00011000 	andeq	r1, r1, r0
    3798:	00000055 	andeq	r0, r0, r5, asr r0
	...
    37a4:	00218400 	eoreq	r8, r1, r0, lsl #8
    37a8:	00219610 	eoreq	r9, r1, r0, lsl r6
    37ac:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    37b0:	10002198 	mulne	r0, r8, r1
    37b4:	100021ca 	andne	r2, r0, sl, asr #3
    37b8:	00540001 	subseq	r0, r4, r1
	...
    37c4:	cc000000 	stcgt	0, cr0, [r0], {-0}
    37c8:	d0100021 	andsle	r0, r0, r1, lsr #32
    37cc:	01100021 	tsteq	r0, r1, lsr #32
    37d0:	21d25400 	bicscs	r5, r2, r0, lsl #8
    37d4:	21f81000 	mvnscs	r1, r0
    37d8:	00011000 	andeq	r1, r1, r0
    37dc:	00000054 	andeq	r0, r0, r4, asr r0
    37e0:	00000000 	andeq	r0, r0, r0
    37e4:	0020fa00 	eoreq	pc, r0, r0, lsl #20
    37e8:	00210210 	eoreq	r0, r1, r0, lsl r2
    37ec:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    37f0:	00210200 	eoreq	r0, r1, r0, lsl #4
    37f4:	00211c10 	eoreq	r1, r1, r0, lsl ip
    37f8:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    37fc:	00211c08 	eoreq	r1, r1, r8, lsl #24
    3800:	00211e10 	eoreq	r1, r1, r0, lsl lr
    3804:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
	...
    3818:	0020fa00 	eoreq	pc, r0, r0, lsl #20
    381c:	00210410 	eoreq	r0, r1, r0, lsl r4
    3820:	50000110 	andpl	r0, r0, r0, lsl r1
    3824:	10002104 	andne	r2, r0, r4, lsl #2
    3828:	10002119 	andne	r2, r0, r9, lsl r1
    382c:	19530001 	ldmdbne	r3, {r0}^
    3830:	1c100021 	ldcne	0, cr0, [r0], {33}	; 0x21
    3834:	04100021 	ldreq	r0, [r0], #-33	; 0xffffffdf
    3838:	5001f300 	andpl	pc, r1, r0, lsl #6
    383c:	00211c9f 	mlaeq	r1, pc, ip, r1	; <UNPREDICTABLE>
    3840:	00211e10 	eoreq	r1, r1, r0, lsl lr
    3844:	50000110 	andpl	r0, r0, r0, lsl r1
	...
    3858:	100020fa 	strdne	r2, [r0], -sl
    385c:	10002106 	andne	r2, r0, r6, lsl #2
    3860:	06510001 	ldrbeq	r0, [r1], -r1
    3864:	19100021 	ldmdbne	r0, {r0, r5}
    3868:	01100021 	tsteq	r0, r1, lsr #32
    386c:	21195000 	tstcs	r9, r0
    3870:	211c1000 	tstcs	ip, r0
    3874:	00041000 	andeq	r1, r4, r0
    3878:	9f5101f3 	svcls	0x005101f3
    387c:	1000211c 	andne	r2, r0, ip, lsl r1
    3880:	1000211e 	andne	r2, r0, lr, lsl r1
    3884:	00510001 	subseq	r0, r1, r1
    3888:	00000000 	andeq	r0, r0, r0
    388c:	84000000 	strhi	r0, [r0], #-0
    3890:	86100020 	ldrhi	r0, [r0], -r0, lsr #32
    3894:	02100020 	andseq	r0, r0, #32
    3898:	86007d00 	strhi	r7, [r0], -r0, lsl #26
    389c:	fa100020 	blx	403924 <__RAM_SIZE+0x303924>
    38a0:	02100020 	andseq	r0, r0, #32
    38a4:	00107d00 	andseq	r7, r0, r0, lsl #26
	...
    38bc:	84000000 	strhi	r0, [r0], #-0
    38c0:	96100020 	ldrls	r0, [r0], -r0, lsr #32
    38c4:	01100020 	tsteq	r0, r0, lsr #32
    38c8:	20965000 	addscs	r5, r6, r0
    38cc:	209c1000 	addscs	r1, ip, r0
    38d0:	00011000 	andeq	r1, r1, r0
    38d4:	00209c54 	eoreq	r9, r0, r4, asr ip
    38d8:	00209e10 	eoreq	r9, r0, r0, lsl lr
    38dc:	50000110 	andpl	r0, r0, r0, lsl r1
    38e0:	1000209e 	mulne	r0, lr, r0
    38e4:	100020a8 	andne	r2, r0, r8, lsr #1
    38e8:	a8540001 	ldmdage	r4, {r0}^
    38ec:	ac100020 	ldcge	0, cr0, [r0], {32}
    38f0:	01100020 	tsteq	r0, r0, lsr #32
    38f4:	20ac5000 	adccs	r5, ip, r0
    38f8:	20c61000 	sbccs	r1, r6, r0
    38fc:	00011000 	andeq	r1, r1, r0
    3900:	0020c654 	eoreq	ip, r0, r4, asr r6
    3904:	0020c810 	eoreq	ip, r0, r0, lsl r8
    3908:	50000110 	andpl	r0, r0, r0, lsl r1
    390c:	100020c8 	andne	r2, r0, r8, asr #1
    3910:	100020fa 	strdne	r2, [r0], -sl
    3914:	00540001 	subseq	r0, r4, r1
	...
    392c:	84000000 	strhi	r0, [r0], #-0
    3930:	96100020 	ldrls	r0, [r0], -r0, lsr #32
    3934:	01100020 	tsteq	r0, r0, lsr #32
    3938:	20965100 	addscs	r5, r6, r0, lsl #2
    393c:	209c1000 	addscs	r1, ip, r0
    3940:	00041000 	andeq	r1, r4, r0
    3944:	9f5101f3 	svcls	0x005101f3
    3948:	1000209c 	mulne	r0, ip, r0
    394c:	100020a1 	andne	r2, r0, r1, lsr #1
    3950:	a1510001 	cmpge	r1, r1
    3954:	a8100020 	ldmdage	r0, {r5}
    3958:	04100020 	ldreq	r0, [r0], #-32	; 0xffffffe0
    395c:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    3960:	0020a89f 	mlaeq	r0, pc, r8, sl	; <UNPREDICTABLE>
    3964:	0020af10 	eoreq	sl, r0, r0, lsl pc
    3968:	51000110 	tstpl	r0, r0, lsl r1
    396c:	100020af 	andne	r2, r0, pc, lsr #1
    3970:	100020c6 	andne	r2, r0, r6, asr #1
    3974:	01f30004 	mvnseq	r0, r4
    3978:	20c69f51 	sbccs	r9, r6, r1, asr pc
    397c:	20cb1000 	sbccs	r1, fp, r0
    3980:	00011000 	andeq	r1, r1, r0
    3984:	0020cb51 	eoreq	ip, r0, r1, asr fp
    3988:	0020fa10 	eoreq	pc, r0, r0, lsl sl	; <UNPREDICTABLE>
    398c:	f3000410 	vqshl.u8	d0, d0, d0
    3990:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
    399c:	84000000 	strhi	r0, [r0], #-0
    39a0:	8e100020 	cdphi	0, 1, cr0, cr0, cr0, {1}
    39a4:	01100020 	tsteq	r0, r0, lsr #32
    39a8:	208e5200 	addcs	r5, lr, r0, lsl #4
    39ac:	20fa1000 	rscscs	r1, sl, r0
    39b0:	00011000 	andeq	r1, r1, r0
    39b4:	00000055 	andeq	r0, r0, r5, asr r0
    39b8:	00000000 	andeq	r0, r0, r0
    39bc:	00000100 	andeq	r0, r0, r0, lsl #2
    39c0:	00000000 	andeq	r0, r0, r0
    39c4:	8a000000 	bhi	39cc <__HEAP_SIZE+0x29cc>
    39c8:	96100020 	ldrls	r0, [r0], -r0, lsr #32
    39cc:	02100020 	andseq	r0, r0, #32
    39d0:	969f3000 	ldrls	r3, [pc], r0
    39d4:	9c100020 	ldcls	0, cr0, [r0], {32}
    39d8:	01100020 	tsteq	r0, r0, lsr #32
    39dc:	209c5000 	addscs	r5, ip, r0
    39e0:	20a21000 	adccs	r1, r2, r0
    39e4:	00021000 	andeq	r1, r2, r0
    39e8:	20a29f30 	adccs	r9, r2, r0, lsr pc
    39ec:	20a81000 	adccs	r1, r8, r0
    39f0:	00011000 	andeq	r1, r1, r0
    39f4:	0020a850 	eoreq	sl, r0, r0, asr r8
    39f8:	0020fa10 	eoreq	pc, r0, r0, lsl sl	; <UNPREDICTABLE>
    39fc:	30000210 	andcc	r0, r0, r0, lsl r2
    3a00:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    3a0c:	8c000000 	stchi	0, cr0, [r0], {-0}
    3a10:	98100020 	ldmdals	r0, {r5}
    3a14:	01100020 	tsteq	r0, r0, lsr #32
    3a18:	20985600 	addscs	r5, r8, r0, lsl #12
    3a1c:	209c1000 	addscs	r1, ip, r0
    3a20:	00031000 	andeq	r1, r3, r0
    3a24:	9c9f7f76 	ldcls	15, cr7, [pc], {118}	; 0x76
    3a28:	fa100020 	blx	403ab0 <__RAM_SIZE+0x303ab0>
    3a2c:	01100020 	tsteq	r0, r0, lsr #32
    3a30:	00005600 	andeq	r5, r0, r0, lsl #12
	...
    3a48:	00500001 	subseq	r0, r0, r1
    3a4c:	00000000 	andeq	r0, r0, r0
    3a50:	01000000 	mrseq	r0, (UNDEF: 0)
    3a54:	00005300 	andeq	r5, r0, r0, lsl #6
    3a58:	00000000 	andeq	r0, r0, r0
    3a5c:	00040000 	andeq	r0, r4, r0
    3a60:	9f5001f3 	svcls	0x005001f3
	...
    3a6c:	00000100 	andeq	r0, r0, r0, lsl #2
    3a70:	00000000 	andeq	r0, r0, r0
    3a74:	00010000 	andeq	r0, r1, r0
    3a78:	00000050 	andeq	r0, r0, r0, asr r0
	...
    3a8c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    3a98:	01f30004 	mvnseq	r0, r4
    3a9c:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    3ab0:	00010000 	andeq	r0, r1, r0
    3ab4:	00000050 	andeq	r0, r0, r0, asr r0
    3ab8:	00000000 	andeq	r0, r0, r0
    3abc:	f3000400 	vshl.u8	d0, d0, d0
    3ac0:	009f5001 	addseq	r5, pc, r1
	...
    3ad0:	02000000 	andeq	r0, r0, #0
    3ad4:	00007d00 	andeq	r7, r0, r0, lsl #26
    3ad8:	00000000 	andeq	r0, r0, r0
    3adc:	02000000 	andeq	r0, r0, #0
    3ae0:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    3af8:	01000000 	mrseq	r0, (UNDEF: 0)
    3afc:	00005000 	andeq	r5, r0, r0
    3b00:	00000000 	andeq	r0, r0, r0
    3b04:	00040000 	andeq	r0, r4, r0
    3b08:	9f5001f3 	svcls	0x005001f3
	...
    3b14:	00500001 	subseq	r0, r0, r1
    3b18:	00000000 	andeq	r0, r0, r0
    3b1c:	04000000 	streq	r0, [r0], #-0
    3b20:	5001f300 	andpl	pc, r1, r0, lsl #6
    3b24:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3b28:	00000000 	andeq	r0, r0, r0
    3b2c:	00000100 	andeq	r0, r0, r0, lsl #2
	...
    3b3c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    3b48:	01f30004 	mvnseq	r0, r4
    3b4c:	00009f50 	andeq	r9, r0, r0, asr pc
    3b50:	00000000 	andeq	r0, r0, r0
    3b54:	00010000 	andeq	r0, r1, r0
    3b58:	00000050 	andeq	r0, r0, r0, asr r0
    3b5c:	00000000 	andeq	r0, r0, r0
    3b60:	f3000400 	vshl.u8	d0, d0, d0
    3b64:	009f5001 	addseq	r5, pc, r1
	...
    3b78:	01000000 	mrseq	r0, (UNDEF: 0)
    3b7c:	00005000 	andeq	r5, r0, r0
    3b80:	00000000 	andeq	r0, r0, r0
    3b84:	00040000 	andeq	r0, r4, r0
    3b88:	9f5001f3 	svcls	0x005001f3
	...
    3b9c:	00010000 	andeq	r0, r1, r0
    3ba0:	00000050 	andeq	r0, r0, r0, asr r0
    3ba4:	00000000 	andeq	r0, r0, r0
    3ba8:	00000300 	andeq	r0, r0, r0, lsl #6
	...
    3bb4:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    3bc0:	01f30004 	mvnseq	r0, r4
    3bc4:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    3bd4:	00020000 	andeq	r0, r2, r0
    3bd8:	0000007d 	andeq	r0, r0, sp, ror r0
    3bdc:	00000000 	andeq	r0, r0, r0
    3be0:	00020000 	andeq	r0, r2, r0
    3be4:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    3bfc:	00500001 	subseq	r0, r0, r1
    3c00:	00000000 	andeq	r0, r0, r0
    3c04:	01000000 	mrseq	r0, (UNDEF: 0)
    3c08:	00005400 	andeq	r5, r0, r0, lsl #8
    3c0c:	00000000 	andeq	r0, r0, r0
    3c10:	00040000 	andeq	r0, r4, r0
    3c14:	9f5001f3 	svcls	0x005001f3
	...
    3c28:	00010000 	andeq	r0, r1, r0
    3c2c:	00000054 	andeq	r0, r0, r4, asr r0
    3c30:	00000000 	andeq	r0, r0, r0
    3c34:	00000200 	andeq	r0, r0, r0, lsl #4
	...
    3c40:	01000000 	mrseq	r0, (UNDEF: 0)
    3c44:	00005000 	andeq	r5, r0, r0
    3c48:	00000000 	andeq	r0, r0, r0
    3c4c:	00010000 	andeq	r0, r1, r0
    3c50:	00000054 	andeq	r0, r0, r4, asr r0
    3c54:	00000000 	andeq	r0, r0, r0
    3c58:	f3000400 	vshl.u8	d0, d0, d0
    3c5c:	009f5001 	addseq	r5, pc, r1
	...
    3c6c:	02000000 	andeq	r0, r0, #0
    3c70:	00007d00 	andeq	r7, r0, r0, lsl #26
    3c74:	00000000 	andeq	r0, r0, r0
    3c78:	02000000 	andeq	r0, r0, #0
    3c7c:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    3c94:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    3ca0:	00540001 	subseq	r0, r4, r1
    3ca4:	00000000 	andeq	r0, r0, r0
    3ca8:	04000000 	streq	r0, [r0], #-0
    3cac:	5001f300 	andpl	pc, r1, r0, lsl #6
    3cb0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    3cc0:	01000000 	mrseq	r0, (UNDEF: 0)
    3cc4:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    3cd4:	00020000 	andeq	r0, r2, r0
    3cd8:	0000007d 	andeq	r0, r0, sp, ror r0
    3cdc:	00000000 	andeq	r0, r0, r0
    3ce0:	00020000 	andeq	r0, r2, r0
    3ce4:	0000187d 	andeq	r1, r0, sp, ror r8
	...
    3d00:	00500001 	subseq	r0, r0, r1
    3d04:	00000000 	andeq	r0, r0, r0
    3d08:	01000000 	mrseq	r0, (UNDEF: 0)
    3d0c:	00005400 	andeq	r5, r0, r0, lsl #8
    3d10:	00000000 	andeq	r0, r0, r0
    3d14:	00040000 	andeq	r0, r4, r0
    3d18:	9f5001f3 	svcls	0x005001f3
	...
    3d24:	00540001 	subseq	r0, r4, r1
    3d28:	00000000 	andeq	r0, r0, r0
    3d2c:	04000000 	streq	r0, [r0], #-0
    3d30:	5001f300 	andpl	pc, r1, r0, lsl #6
    3d34:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    3d48:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    3d54:	00560001 	subseq	r0, r6, r1
	...
    3d60:	00000100 	andeq	r0, r0, r0, lsl #2
    3d64:	00000000 	andeq	r0, r0, r0
    3d68:	01000000 	mrseq	r0, (UNDEF: 0)
    3d6c:	00005400 	andeq	r5, r0, r0, lsl #8
    3d70:	00000000 	andeq	r0, r0, r0
    3d74:	00020000 	andeq	r0, r2, r0
    3d78:	00009f31 	andeq	r9, r0, r1, lsr pc
	...
    3d90:	00010000 	andeq	r0, r1, r0
    3d94:	00000050 	andeq	r0, r0, r0, asr r0
    3d98:	00000000 	andeq	r0, r0, r0
    3d9c:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    3da8:	00500001 	subseq	r0, r0, r1
    3dac:	00000000 	andeq	r0, r0, r0
    3db0:	01000000 	mrseq	r0, (UNDEF: 0)
    3db4:	00005500 	andeq	r5, r0, r0, lsl #10
	...
    3dc8:	00570001 	subseq	r0, r7, r1
    3dcc:	00000000 	andeq	r0, r0, r0
    3dd0:	04000000 	streq	r0, [r0], #-0
	...
    3de4:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    3df0:	00540001 	subseq	r0, r4, r1
    3df4:	00000000 	andeq	r0, r0, r0
    3df8:	04000000 	streq	r0, [r0], #-0
    3dfc:	5001f300 	andpl	pc, r1, r0, lsl #6
    3e00:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3e04:	00000000 	andeq	r0, r0, r0
    3e08:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    3e14:	01f30004 	mvnseq	r0, r4
    3e18:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    3e28:	00020000 	andeq	r0, r2, r0
    3e2c:	0000007d 	andeq	r0, r0, sp, ror r0
    3e30:	00000000 	andeq	r0, r0, r0
    3e34:	00020000 	andeq	r0, r2, r0
    3e38:	0000207d 	andeq	r2, r0, sp, ror r0
	...
    3e68:	00500001 	subseq	r0, r0, r1
    3e6c:	00000000 	andeq	r0, r0, r0
    3e70:	01000000 	mrseq	r0, (UNDEF: 0)
    3e74:	00005400 	andeq	r5, r0, r0, lsl #8
    3e78:	00000000 	andeq	r0, r0, r0
    3e7c:	00040000 	andeq	r0, r4, r0
    3e80:	9f5001f3 	svcls	0x005001f3
	...
    3e8c:	00540001 	subseq	r0, r4, r1
    3e90:	00000000 	andeq	r0, r0, r0
    3e94:	04000000 	streq	r0, [r0], #-0
    3e98:	5001f300 	andpl	pc, r1, r0, lsl #6
    3e9c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3ea0:	00000000 	andeq	r0, r0, r0
    3ea4:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    3eb0:	01f30004 	mvnseq	r0, r4
    3eb4:	00009f50 	andeq	r9, r0, r0, asr pc
    3eb8:	00000000 	andeq	r0, r0, r0
    3ebc:	00010000 	andeq	r0, r1, r0
    3ec0:	00000054 	andeq	r0, r0, r4, asr r0
    3ec4:	00000000 	andeq	r0, r0, r0
    3ec8:	f3000400 	vshl.u8	d0, d0, d0
    3ecc:	009f5001 	addseq	r5, pc, r1
    3ed0:	00000000 	andeq	r0, r0, r0
    3ed4:	01000000 	mrseq	r0, (UNDEF: 0)
    3ed8:	00005400 	andeq	r5, r0, r0, lsl #8
    3edc:	00000000 	andeq	r0, r0, r0
    3ee0:	00040000 	andeq	r0, r4, r0
    3ee4:	9f5001f3 	svcls	0x005001f3
	...
    3ef0:	00540001 	subseq	r0, r4, r1
    3ef4:	00000000 	andeq	r0, r0, r0
    3ef8:	04000000 	streq	r0, [r0], #-0
    3efc:	5001f300 	andpl	pc, r1, r0, lsl #6
    3f00:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3f04:	00000000 	andeq	r0, r0, r0
    3f08:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    3f14:	01f30004 	mvnseq	r0, r4
    3f18:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    3f2c:	00010000 	andeq	r0, r1, r0
    3f30:	00000051 	andeq	r0, r0, r1, asr r0
    3f34:	00000000 	andeq	r0, r0, r0
    3f38:	57000100 	strpl	r0, [r0, -r0, lsl #2]
	...
    3f50:	00520001 	subseq	r0, r2, r1
    3f54:	00000000 	andeq	r0, r0, r0
    3f58:	01000000 	mrseq	r0, (UNDEF: 0)
    3f5c:	00005800 	andeq	r5, r0, r0, lsl #16
	...
    3f70:	00540001 	subseq	r0, r4, r1
	...
    3f88:	01000000 	mrseq	r0, (UNDEF: 0)
    3f8c:	00005000 	andeq	r5, r0, r0
    3f90:	00000000 	andeq	r0, r0, r0
    3f94:	00010000 	andeq	r0, r1, r0
    3f98:	00000055 	andeq	r0, r0, r5, asr r0
    3f9c:	00000000 	andeq	r0, r0, r0
    3fa0:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    3fac:	00550001 	subseq	r0, r5, r1
    3fb0:	00000000 	andeq	r0, r0, r0
    3fb4:	03000000 	movweq	r0, #0
	...
    3fdc:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    3fe8:	00540001 	subseq	r0, r4, r1
    3fec:	00000000 	andeq	r0, r0, r0
    3ff0:	04000000 	streq	r0, [r0], #-0
    3ff4:	5001f300 	andpl	pc, r1, r0, lsl #6
    3ff8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3ffc:	00000000 	andeq	r0, r0, r0
    4000:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    400c:	01f30004 	mvnseq	r0, r4
    4010:	00009f50 	andeq	r9, r0, r0, asr pc
    4014:	00000000 	andeq	r0, r0, r0
    4018:	00010000 	andeq	r0, r1, r0
    401c:	00000054 	andeq	r0, r0, r4, asr r0
    4020:	00000000 	andeq	r0, r0, r0
    4024:	f3000400 	vshl.u8	d0, d0, d0
    4028:	009f5001 	addseq	r5, pc, r1
    402c:	00000000 	andeq	r0, r0, r0
    4030:	01000000 	mrseq	r0, (UNDEF: 0)
    4034:	00005400 	andeq	r5, r0, r0, lsl #8
    4038:	00000000 	andeq	r0, r0, r0
    403c:	00040000 	andeq	r0, r4, r0
    4040:	9f5001f3 	svcls	0x005001f3
	...
    404c:	00540001 	subseq	r0, r4, r1
    4050:	00000000 	andeq	r0, r0, r0
    4054:	04000000 	streq	r0, [r0], #-0
    4058:	5001f300 	andpl	pc, r1, r0, lsl #6
    405c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4060:	00000000 	andeq	r0, r0, r0
    4064:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    4070:	01f30004 	mvnseq	r0, r4
    4074:	00009f50 	andeq	r9, r0, r0, asr pc
    4078:	00000000 	andeq	r0, r0, r0
    407c:	00010000 	andeq	r0, r1, r0
    4080:	00000054 	andeq	r0, r0, r4, asr r0
    4084:	00000000 	andeq	r0, r0, r0
    4088:	f3000400 	vshl.u8	d0, d0, d0
    408c:	009f5001 	addseq	r5, pc, r1
	...
    40a4:	56000100 	strpl	r0, [r0], -r0, lsl #2
	...
    40b0:	00560001 	subseq	r0, r6, r1
    40b4:	00000000 	andeq	r0, r0, r0
    40b8:	03000000 	movweq	r0, #0
    40bc:	9f017600 	svcls	0x00017600
	...
    40d4:	00010000 	andeq	r0, r1, r0
    40d8:	00000059 	andeq	r0, r0, r9, asr r0
    40dc:	00000000 	andeq	r0, r0, r0
    40e0:	79000300 	stmdbvc	r0, {r8, r9}
    40e4:	00009f7f 	andeq	r9, r0, pc, ror pc
    40e8:	00000000 	andeq	r0, r0, r0
    40ec:	00010000 	andeq	r0, r1, r0
    40f0:	00000059 	andeq	r0, r0, r9, asr r0
	...
    4104:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    4110:	00500001 	subseq	r0, r0, r1
	...
    4120:	02000000 	andeq	r0, r0, #0
    4124:	00007d00 	andeq	r7, r0, r0, lsl #26
    4128:	00000000 	andeq	r0, r0, r0
    412c:	02000000 	andeq	r0, r0, #0
    4130:	00107d00 	andseq	r7, r0, r0, lsl #26
    4134:	00000000 	andeq	r0, r0, r0
    4138:	02000000 	andeq	r0, r0, #0
    413c:	00207d00 	eoreq	r7, r0, r0, lsl #26
    4140:	00000000 	andeq	r0, r0, r0
    4144:	02000000 	andeq	r0, r0, #0
    4148:	00107d00 	andseq	r7, r0, r0, lsl #26
    414c:	00000000 	andeq	r0, r0, r0
    4150:	02000000 	andeq	r0, r0, #0
    4154:	00207d00 	eoreq	r7, r0, r0, lsl #26
	...
    4168:	01000000 	mrseq	r0, (UNDEF: 0)
    416c:	00005000 	andeq	r5, r0, r0
    4170:	00000000 	andeq	r0, r0, r0
    4174:	00010000 	andeq	r0, r1, r0
    4178:	00000054 	andeq	r0, r0, r4, asr r0
	...
    418c:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    4198:	00560001 	subseq	r0, r6, r1
	...
    41ac:	52000100 	andpl	r0, r0, #0, 2
	...
    41b8:	00000001 	andeq	r0, r0, r1
    41bc:	00010100 	andeq	r0, r1, r0, lsl #2
	...
    41c8:	00020000 	andeq	r0, r2, r0
    41cc:	00009f30 	andeq	r9, r0, r0, lsr pc
    41d0:	00000000 	andeq	r0, r0, r0
    41d4:	00010000 	andeq	r0, r1, r0
    41d8:	00000055 	andeq	r0, r0, r5, asr r0
    41dc:	00000000 	andeq	r0, r0, r0
    41e0:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    41ec:	9f310002 	svcls	0x00310002
	...
    41f8:	00550001 	subseq	r0, r5, r1
	...
    420c:	01000000 	mrseq	r0, (UNDEF: 0)
    4210:	00005500 	andeq	r5, r0, r0, lsl #10
    4214:	00000000 	andeq	r0, r0, r0
    4218:	00010000 	andeq	r0, r1, r0
    421c:	00000055 	andeq	r0, r0, r5, asr r0
    4220:	00000000 	andeq	r0, r0, r0
    4224:	00000400 	andeq	r0, r0, r0, lsl #8
	...
    4230:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    423c:	00540001 	subseq	r0, r4, r1
	...
    4250:	01000000 	mrseq	r0, (UNDEF: 0)
    4254:	00005300 	andeq	r5, r0, r0, lsl #6
    4258:	00000000 	andeq	r0, r0, r0
    425c:	00010000 	andeq	r0, r1, r0
    4260:	00000053 	andeq	r0, r0, r3, asr r0
	...
    4270:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    427c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    4280:	00000010 	andeq	r0, r0, r0, lsl r0
    4284:	00000000 	andeq	r0, r0, r0
    4288:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    428c:	00000020 	andeq	r0, r0, r0, lsr #32
    4290:	00000000 	andeq	r0, r0, r0
    4294:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    4298:	00000010 	andeq	r0, r0, r0, lsl r0
    429c:	00000000 	andeq	r0, r0, r0
    42a0:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    42a4:	00000020 	andeq	r0, r0, r0, lsr #32
	...
    42b8:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    42c4:	00540001 	subseq	r0, r4, r1
	...
    42d8:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    42e4:	01000001 	tsteq	r0, r1
    42e8:	00000001 	andeq	r0, r0, r1
	...
    42f4:	9f300002 	svcls	0x00300002
	...
    4300:	00550001 	subseq	r0, r5, r1
    4304:	00000000 	andeq	r0, r0, r0
    4308:	02000000 	andeq	r0, r0, #0
    430c:	009f3100 	addseq	r3, pc, r0, lsl #2
    4310:	00000000 	andeq	r0, r0, r0
    4314:	01000000 	mrseq	r0, (UNDEF: 0)
    4318:	00005500 	andeq	r5, r0, r0, lsl #10
    431c:	00000000 	andeq	r0, r0, r0
    4320:	00030000 	andeq	r0, r3, r0
	...
    432c:	00010000 	andeq	r0, r1, r0
    4330:	00000050 	andeq	r0, r0, r0, asr r0
    4334:	00000000 	andeq	r0, r0, r0
    4338:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    4344:	00000004 	andeq	r0, r0, r4
	...
    4354:	9f300002 	svcls	0x00300002
	...
    4360:	00560001 	subseq	r0, r6, r1
    4364:	00000000 	andeq	r0, r0, r0
    4368:	01000000 	mrseq	r0, (UNDEF: 0)
    436c:	00005000 	andeq	r5, r0, r0
    4370:	00000000 	andeq	r0, r0, r0
    4374:	00010000 	andeq	r0, r1, r0
    4378:	00000056 	andeq	r0, r0, r6, asr r0
	...
    4390:	01000000 	mrseq	r0, (UNDEF: 0)
    4394:	00005300 	andeq	r5, r0, r0, lsl #6
    4398:	00000000 	andeq	r0, r0, r0
    439c:	00030000 	andeq	r0, r3, r0
    43a0:	009f0173 	addseq	r0, pc, r3, ror r1	; <UNPREDICTABLE>
    43a4:	00000000 	andeq	r0, r0, r0
    43a8:	07000000 	streq	r0, [r0, -r0]
    43ac:	00c87400 	sbceq	r7, r8, r0, lsl #8
    43b0:	9f012306 	svcls	0x00012306
	...
    43bc:	c8740007 	ldmdagt	r4!, {r0, r1, r2}^
    43c0:	01230600 			; <UNDEFINED> instruction: 0x01230600
    43c4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    43c8:	00000000 	andeq	r0, r0, r0
    43cc:	53000100 	movwpl	r0, #256	; 0x100
	...
    43e4:	00500001 	subseq	r0, r0, r1
    43e8:	00000000 	andeq	r0, r0, r0
    43ec:	01000000 	mrseq	r0, (UNDEF: 0)
    43f0:	00005100 	andeq	r5, r0, r0, lsl #2
    43f4:	00000000 	andeq	r0, r0, r0
    43f8:	22dc0000 	sbcscs	r0, ip, #0
    43fc:	22de1000 	sbcscs	r1, lr, #0
    4400:	00021000 	andeq	r1, r2, r0
    4404:	22de007d 	sbcscs	r0, lr, #125	; 0x7d
    4408:	22e01000 	rsccs	r1, r0, #0
    440c:	00021000 	andeq	r1, r2, r0
    4410:	22e0147d 	rsccs	r1, r0, #2097152000	; 0x7d000000
    4414:	23021000 	movwcs	r1, #8192	; 0x2000
    4418:	00021000 	andeq	r1, r2, r0
    441c:	2302287d 	movwcs	r2, #10365	; 0x287d
    4420:	23041000 	movwcs	r1, #16384	; 0x4000
    4424:	00021000 	andeq	r1, r2, r0
    4428:	2304147d 	movwcs	r1, #17533	; 0x447d
    442c:	23cc1000 	biccs	r1, ip, #0
    4430:	00021000 	andeq	r1, r2, r0
    4434:	0000287d 	andeq	r2, r0, sp, ror r8
	...
    4440:	22dc0000 	sbcscs	r0, ip, #0
    4444:	22ea1000 	rsccs	r1, sl, #0
    4448:	00011000 	andeq	r1, r1, r0
    444c:	0022ea50 	eoreq	lr, r2, r0, asr sl
    4450:	0023cc10 	eoreq	ip, r3, r0, lsl ip
    4454:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
	...
    4464:	100022dc 	ldrdne	r2, [r0], -ip
    4468:	100022ea 	andne	r2, r0, sl, ror #5
    446c:	ea510001 	b	1444478 <__RAM_SIZE+0x1344478>
    4470:	cc100022 	ldcgt	0, cr0, [r0], {34}	; 0x22
    4474:	01100023 	tsteq	r0, r3, lsr #32
    4478:	00005700 	andeq	r5, r0, r0, lsl #14
	...
    4484:	100022dc 	ldrdne	r2, [r0], -ip
    4488:	100022ea 	andne	r2, r0, sl, ror #5
    448c:	00520001 	subseq	r0, r2, r1
    4490:	00000000 	andeq	r0, r0, r0
    4494:	01000000 	mrseq	r0, (UNDEF: 0)
    4498:	01010000 	mrseq	r0, (UNDEF: 1)
    449c:	e6000000 	str	r0, [r0], -r0
    44a0:	ea100022 	b	404530 <__RAM_SIZE+0x304530>
    44a4:	02100022 	andseq	r0, r0, #34	; 0x22
    44a8:	ea9f3000 	b	fe7d04b0 <__StackTop+0xc66d04b0>
    44ac:	24100022 	ldrcs	r0, [r0], #-34	; 0xffffffde
    44b0:	01100023 	tsteq	r0, r3, lsr #32
    44b4:	23245600 			; <UNDEFINED> instruction: 0x23245600
    44b8:	23281000 			; <UNDEFINED> instruction: 0x23281000
    44bc:	00021000 	andeq	r1, r2, r0
    44c0:	23289f31 			; <UNDEFINED> instruction: 0x23289f31
    44c4:	23cc1000 	biccs	r1, ip, #0
    44c8:	00011000 	andeq	r1, r1, r0
    44cc:	00000056 	andeq	r0, r0, r6, asr r0
    44d0:	00000000 	andeq	r0, r0, r0
    44d4:	00000300 	andeq	r0, r0, r0, lsl #6
    44d8:	0022e600 	eoreq	lr, r2, r0, lsl #12
    44dc:	0022ea10 	eoreq	lr, r2, r0, lsl sl
    44e0:	50000110 	andpl	r0, r0, r0, lsl r1
    44e4:	100022ea 	andne	r2, r0, sl, ror #5
    44e8:	100023cc 	andne	r2, r0, ip, asr #7
    44ec:	00540001 	subseq	r0, r4, r1
	...
    4500:	0022ea00 	eoreq	lr, r2, r0, lsl #20
    4504:	0022f410 	eoreq	pc, r2, r0, lsl r4	; <UNPREDICTABLE>
    4508:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
    450c:	100022f4 	strdne	r2, [r0], -r4
    4510:	10002300 	andne	r2, r0, r0, lsl #6
    4514:	01750003 	cmneq	r5, r3
    4518:	0023049f 	mlaeq	r3, pc, r4, r0	; <UNPREDICTABLE>
    451c:	00231610 	eoreq	r1, r3, r0, lsl r6
    4520:	75000310 	strvc	r0, [r0, #-784]	; 0xfffffcf0
    4524:	23169f01 	tstcs	r6, #1, 30
    4528:	23581000 	cmpcs	r8, #0
    452c:	00011000 	andeq	r1, r1, r0
    4530:	00235e55 	eoreq	r5, r3, r5, asr lr
    4534:	0023cc10 	eoreq	ip, r3, r0, lsl ip
    4538:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
	...
    454c:	007d0002 	rsbseq	r0, sp, r2
	...
    4558:	187d0002 	ldmdane	sp!, {r1}^
	...
    4594:	00010000 	andeq	r0, r1, r0
    4598:	00000050 	andeq	r0, r0, r0, asr r0
    459c:	00000000 	andeq	r0, r0, r0
    45a0:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    45ac:	01f30004 	mvnseq	r0, r4
    45b0:	00009f50 	andeq	r9, r0, r0, asr pc
    45b4:	00000000 	andeq	r0, r0, r0
    45b8:	00010000 	andeq	r0, r1, r0
    45bc:	00000054 	andeq	r0, r0, r4, asr r0
    45c0:	00000000 	andeq	r0, r0, r0
    45c4:	f3000400 	vshl.u8	d0, d0, d0
    45c8:	009f5001 	addseq	r5, pc, r1
    45cc:	00000000 	andeq	r0, r0, r0
    45d0:	01000000 	mrseq	r0, (UNDEF: 0)
    45d4:	00005400 	andeq	r5, r0, r0, lsl #8
    45d8:	00000000 	andeq	r0, r0, r0
    45dc:	00040000 	andeq	r0, r4, r0
    45e0:	9f5001f3 	svcls	0x005001f3
	...
    45ec:	00540001 	subseq	r0, r4, r1
    45f0:	00000000 	andeq	r0, r0, r0
    45f4:	04000000 	streq	r0, [r0], #-0
    45f8:	5001f300 	andpl	pc, r1, r0, lsl #6
    45fc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4600:	00000000 	andeq	r0, r0, r0
    4604:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    4610:	01f30004 	mvnseq	r0, r4
    4614:	00009f50 	andeq	r9, r0, r0, asr pc
    4618:	00000000 	andeq	r0, r0, r0
    461c:	00010000 	andeq	r0, r1, r0
    4620:	00000054 	andeq	r0, r0, r4, asr r0
    4624:	00000000 	andeq	r0, r0, r0
    4628:	f3000400 	vshl.u8	d0, d0, d0
    462c:	009f5001 	addseq	r5, pc, r1
    4630:	00000000 	andeq	r0, r0, r0
    4634:	01000000 	mrseq	r0, (UNDEF: 0)
    4638:	00005400 	andeq	r5, r0, r0, lsl #8
    463c:	00000000 	andeq	r0, r0, r0
    4640:	00040000 	andeq	r0, r4, r0
    4644:	9f5001f3 	svcls	0x005001f3
	...
    4650:	00540001 	subseq	r0, r4, r1
    4654:	00000000 	andeq	r0, r0, r0
    4658:	04000000 	streq	r0, [r0], #-0
    465c:	5001f300 	andpl	pc, r1, r0, lsl #6
    4660:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4664:	00000000 	andeq	r0, r0, r0
    4668:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    4674:	01f30004 	mvnseq	r0, r4
    4678:	00009f50 	andeq	r9, r0, r0, asr pc
    467c:	00000000 	andeq	r0, r0, r0
    4680:	00010000 	andeq	r0, r1, r0
    4684:	00000054 	andeq	r0, r0, r4, asr r0
    4688:	00000000 	andeq	r0, r0, r0
    468c:	f3000400 	vshl.u8	d0, d0, d0
    4690:	009f5001 	addseq	r5, pc, r1
	...
    46a4:	01000000 	mrseq	r0, (UNDEF: 0)
    46a8:	00005100 	andeq	r5, r0, r0, lsl #2
    46ac:	00000000 	andeq	r0, r0, r0
    46b0:	00010000 	andeq	r0, r1, r0
    46b4:	00000056 	andeq	r0, r0, r6, asr r0
	...
    46c4:	01000000 	mrseq	r0, (UNDEF: 0)
    46c8:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    46e8:	00010000 	andeq	r0, r1, r0
    46ec:	00000050 	andeq	r0, r0, r0, asr r0
    46f0:	00000000 	andeq	r0, r0, r0
    46f4:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    4700:	00500001 	subseq	r0, r0, r1
    4704:	00000000 	andeq	r0, r0, r0
    4708:	01000000 	mrseq	r0, (UNDEF: 0)
    470c:	00005500 	andeq	r5, r0, r0, lsl #10
    4710:	00000000 	andeq	r0, r0, r0
    4714:	00010000 	andeq	r0, r1, r0
    4718:	00000050 	andeq	r0, r0, r0, asr r0
    471c:	00000000 	andeq	r0, r0, r0
    4720:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    472c:	00500001 	subseq	r0, r0, r1
    4730:	00000000 	andeq	r0, r0, r0
    4734:	01000000 	mrseq	r0, (UNDEF: 0)
    4738:	00005500 	andeq	r5, r0, r0, lsl #10
    473c:	00000000 	andeq	r0, r0, r0
    4740:	00030000 	andeq	r0, r3, r0
	...
    4774:	00500001 	subseq	r0, r0, r1
    4778:	00000000 	andeq	r0, r0, r0
    477c:	01000000 	mrseq	r0, (UNDEF: 0)
    4780:	00005400 	andeq	r5, r0, r0, lsl #8
    4784:	00000000 	andeq	r0, r0, r0
    4788:	00040000 	andeq	r0, r4, r0
    478c:	9f5001f3 	svcls	0x005001f3
	...
    4798:	00540001 	subseq	r0, r4, r1
    479c:	00000000 	andeq	r0, r0, r0
    47a0:	04000000 	streq	r0, [r0], #-0
    47a4:	5001f300 	andpl	pc, r1, r0, lsl #6
    47a8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    47ac:	00000000 	andeq	r0, r0, r0
    47b0:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    47bc:	01f30004 	mvnseq	r0, r4
    47c0:	00009f50 	andeq	r9, r0, r0, asr pc
    47c4:	00000000 	andeq	r0, r0, r0
    47c8:	00010000 	andeq	r0, r1, r0
    47cc:	00000054 	andeq	r0, r0, r4, asr r0
    47d0:	00000000 	andeq	r0, r0, r0
    47d4:	f3000400 	vshl.u8	d0, d0, d0
    47d8:	009f5001 	addseq	r5, pc, r1
    47dc:	00000000 	andeq	r0, r0, r0
    47e0:	01000000 	mrseq	r0, (UNDEF: 0)
    47e4:	00005400 	andeq	r5, r0, r0, lsl #8
    47e8:	00000000 	andeq	r0, r0, r0
    47ec:	00040000 	andeq	r0, r4, r0
    47f0:	9f5001f3 	svcls	0x005001f3
	...
    47fc:	00540001 	subseq	r0, r4, r1
    4800:	00000000 	andeq	r0, r0, r0
    4804:	04000000 	streq	r0, [r0], #-0
    4808:	5001f300 	andpl	pc, r1, r0, lsl #6
    480c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4810:	00000000 	andeq	r0, r0, r0
    4814:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    4820:	01f30004 	mvnseq	r0, r4
    4824:	00009f50 	andeq	r9, r0, r0, asr pc
    4828:	00000000 	andeq	r0, r0, r0
    482c:	00010000 	andeq	r0, r1, r0
    4830:	00000054 	andeq	r0, r0, r4, asr r0
    4834:	00000000 	andeq	r0, r0, r0
    4838:	f3000400 	vshl.u8	d0, d0, d0
    483c:	009f5001 	addseq	r5, pc, r1
    4840:	00000000 	andeq	r0, r0, r0
    4844:	01000000 	mrseq	r0, (UNDEF: 0)
    4848:	00005400 	andeq	r5, r0, r0, lsl #8
    484c:	00000000 	andeq	r0, r0, r0
    4850:	00040000 	andeq	r0, r4, r0
    4854:	9f5001f3 	svcls	0x005001f3
	...
    4860:	00540001 	subseq	r0, r4, r1
    4864:	00000000 	andeq	r0, r0, r0
    4868:	04000000 	streq	r0, [r0], #-0
    486c:	5001f300 	andpl	pc, r1, r0, lsl #6
    4870:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    4890:	53000100 	movwpl	r0, #256	; 0x100
	...
    489c:	7f730003 	svcvc	0x00730003
    48a0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    48a4:	00000000 	andeq	r0, r0, r0
    48a8:	74000700 	strvc	r0, [r0], #-1792	; 0xfffff900
    48ac:	310600c8 	smlabtcc	r6, r8, r0, r0
    48b0:	00009f1c 	andeq	r9, r0, ip, lsl pc
    48b4:	00000000 	andeq	r0, r0, r0
    48b8:	00070000 	andeq	r0, r7, r0
    48bc:	0600c874 			; <UNDEFINED> instruction: 0x0600c874
    48c0:	009f1c31 	addseq	r1, pc, r1, lsr ip	; <UNPREDICTABLE>
    48c4:	00000000 	andeq	r0, r0, r0
    48c8:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    48cc:	5001f300 	andpl	pc, r1, r0, lsl #6
    48d0:	31064823 	tstcc	r6, r3, lsr #16
    48d4:	00009f1c 	andeq	r9, r0, ip, lsl pc
    48d8:	00000000 	andeq	r0, r0, r0
    48dc:	00070000 	andeq	r0, r7, r0
    48e0:	0600c874 			; <UNDEFINED> instruction: 0x0600c874
    48e4:	009f1c31 	addseq	r1, pc, r1, lsr ip	; <UNPREDICTABLE>
    48e8:	00000000 	andeq	r0, r0, r0
    48ec:	03000000 	movweq	r0, #0
    48f0:	9f7f7300 	svcls	0x007f7300
	...
    48fc:	00530001 	subseq	r0, r3, r1
	...
    4914:	57000100 	strpl	r0, [r0, -r0, lsl #2]
	...
    4920:	7f770003 	svcvc	0x00770003
    4924:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4928:	00000000 	andeq	r0, r0, r0
    492c:	57000100 	strpl	r0, [r0, -r0, lsl #2]
	...
    4944:	00500001 	subseq	r0, r0, r1
    4948:	00000000 	andeq	r0, r0, r0
    494c:	01000000 	mrseq	r0, (UNDEF: 0)
    4950:	00005000 	andeq	r5, r0, r0
	...
    4960:	00020000 	andeq	r0, r2, r0
    4964:	0000007d 	andeq	r0, r0, sp, ror r0
    4968:	00000000 	andeq	r0, r0, r0
    496c:	00020000 	andeq	r0, r2, r0
    4970:	0000207d 	andeq	r2, r0, sp, ror r0
	...
    49b0:	00500001 	subseq	r0, r0, r1
    49b4:	00000000 	andeq	r0, r0, r0
    49b8:	01000000 	mrseq	r0, (UNDEF: 0)
    49bc:	00005400 	andeq	r5, r0, r0, lsl #8
    49c0:	00000000 	andeq	r0, r0, r0
    49c4:	00040000 	andeq	r0, r4, r0
    49c8:	9f5001f3 	svcls	0x005001f3
	...
    49d4:	00540001 	subseq	r0, r4, r1
    49d8:	00000000 	andeq	r0, r0, r0
    49dc:	04000000 	streq	r0, [r0], #-0
    49e0:	5001f300 	andpl	pc, r1, r0, lsl #6
    49e4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    49e8:	00000000 	andeq	r0, r0, r0
    49ec:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    49f8:	01f30004 	mvnseq	r0, r4
    49fc:	00009f50 	andeq	r9, r0, r0, asr pc
    4a00:	00000000 	andeq	r0, r0, r0
    4a04:	00010000 	andeq	r0, r1, r0
    4a08:	00000054 	andeq	r0, r0, r4, asr r0
    4a0c:	00000000 	andeq	r0, r0, r0
    4a10:	f3000400 	vshl.u8	d0, d0, d0
    4a14:	009f5001 	addseq	r5, pc, r1
    4a18:	00000000 	andeq	r0, r0, r0
    4a1c:	01000000 	mrseq	r0, (UNDEF: 0)
    4a20:	00005400 	andeq	r5, r0, r0, lsl #8
    4a24:	00000000 	andeq	r0, r0, r0
    4a28:	00040000 	andeq	r0, r4, r0
    4a2c:	9f5001f3 	svcls	0x005001f3
	...
    4a38:	00540001 	subseq	r0, r4, r1
    4a3c:	00000000 	andeq	r0, r0, r0
    4a40:	04000000 	streq	r0, [r0], #-0
    4a44:	5001f300 	andpl	pc, r1, r0, lsl #6
    4a48:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4a4c:	00000000 	andeq	r0, r0, r0
    4a50:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    4a5c:	01f30004 	mvnseq	r0, r4
    4a60:	00009f50 	andeq	r9, r0, r0, asr pc
    4a64:	00000000 	andeq	r0, r0, r0
    4a68:	00010000 	andeq	r0, r1, r0
    4a6c:	00000054 	andeq	r0, r0, r4, asr r0
    4a70:	00000000 	andeq	r0, r0, r0
    4a74:	f3000400 	vshl.u8	d0, d0, d0
    4a78:	009f5001 	addseq	r5, pc, r1
    4a7c:	00000000 	andeq	r0, r0, r0
    4a80:	01000000 	mrseq	r0, (UNDEF: 0)
    4a84:	00005400 	andeq	r5, r0, r0, lsl #8
    4a88:	00000000 	andeq	r0, r0, r0
    4a8c:	00040000 	andeq	r0, r4, r0
    4a90:	9f5001f3 	svcls	0x005001f3
	...
    4a9c:	00540001 	subseq	r0, r4, r1
    4aa0:	00000000 	andeq	r0, r0, r0
    4aa4:	04000000 	streq	r0, [r0], #-0
    4aa8:	5001f300 	andpl	pc, r1, r0, lsl #6
    4aac:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4ab0:	00000000 	andeq	r0, r0, r0
    4ab4:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    4ac0:	01f30004 	mvnseq	r0, r4
    4ac4:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    4ad8:	00010000 	andeq	r0, r1, r0
    4adc:	00000051 	andeq	r0, r0, r1, asr r0
    4ae0:	00000000 	andeq	r0, r0, r0
    4ae4:	57000100 	strpl	r0, [r0, -r0, lsl #2]
	...
    4afc:	00520001 	subseq	r0, r2, r1
    4b00:	00000000 	andeq	r0, r0, r0
    4b04:	01000000 	mrseq	r0, (UNDEF: 0)
    4b08:	00005900 	andeq	r5, r0, r0, lsl #18
	...
    4b1c:	00010000 	andeq	r0, r1, r0
    4b20:	00000053 	andeq	r0, r0, r3, asr r0
    4b24:	00000000 	andeq	r0, r0, r0
    4b28:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    4b3c:	00010000 	andeq	r0, r1, r0
    4b40:	00000054 	andeq	r0, r0, r4, asr r0
	...
    4b58:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    4b64:	00560001 	subseq	r0, r6, r1
    4b68:	00000000 	andeq	r0, r0, r0
    4b6c:	01000000 	mrseq	r0, (UNDEF: 0)
    4b70:	00005000 	andeq	r5, r0, r0
    4b74:	00000000 	andeq	r0, r0, r0
    4b78:	00010000 	andeq	r0, r1, r0
    4b7c:	00000056 	andeq	r0, r0, r6, asr r0
    4b80:	00000000 	andeq	r0, r0, r0
    4b84:	00000300 	andeq	r0, r0, r0, lsl #6
	...
    4bb8:	01000000 	mrseq	r0, (UNDEF: 0)
    4bbc:	00005000 	andeq	r5, r0, r0
    4bc0:	00000000 	andeq	r0, r0, r0
    4bc4:	00010000 	andeq	r0, r1, r0
    4bc8:	00000054 	andeq	r0, r0, r4, asr r0
    4bcc:	00000000 	andeq	r0, r0, r0
    4bd0:	f3000400 	vshl.u8	d0, d0, d0
    4bd4:	009f5001 	addseq	r5, pc, r1
    4bd8:	00000000 	andeq	r0, r0, r0
    4bdc:	01000000 	mrseq	r0, (UNDEF: 0)
    4be0:	00005400 	andeq	r5, r0, r0, lsl #8
    4be4:	00000000 	andeq	r0, r0, r0
    4be8:	00040000 	andeq	r0, r4, r0
    4bec:	9f5001f3 	svcls	0x005001f3
	...
    4bf8:	00540001 	subseq	r0, r4, r1
    4bfc:	00000000 	andeq	r0, r0, r0
    4c00:	04000000 	streq	r0, [r0], #-0
    4c04:	5001f300 	andpl	pc, r1, r0, lsl #6
    4c08:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4c0c:	00000000 	andeq	r0, r0, r0
    4c10:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    4c1c:	01f30004 	mvnseq	r0, r4
    4c20:	00009f50 	andeq	r9, r0, r0, asr pc
    4c24:	00000000 	andeq	r0, r0, r0
    4c28:	00010000 	andeq	r0, r1, r0
    4c2c:	00000054 	andeq	r0, r0, r4, asr r0
    4c30:	00000000 	andeq	r0, r0, r0
    4c34:	f3000400 	vshl.u8	d0, d0, d0
    4c38:	009f5001 	addseq	r5, pc, r1
    4c3c:	00000000 	andeq	r0, r0, r0
    4c40:	01000000 	mrseq	r0, (UNDEF: 0)
    4c44:	00005400 	andeq	r5, r0, r0, lsl #8
    4c48:	00000000 	andeq	r0, r0, r0
    4c4c:	00040000 	andeq	r0, r4, r0
    4c50:	9f5001f3 	svcls	0x005001f3
	...
    4c5c:	00540001 	subseq	r0, r4, r1
    4c60:	00000000 	andeq	r0, r0, r0
    4c64:	04000000 	streq	r0, [r0], #-0
    4c68:	5001f300 	andpl	pc, r1, r0, lsl #6
    4c6c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4c70:	00000000 	andeq	r0, r0, r0
    4c74:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    4c80:	01f30004 	mvnseq	r0, r4
    4c84:	00009f50 	andeq	r9, r0, r0, asr pc
    4c88:	00000000 	andeq	r0, r0, r0
    4c8c:	00010000 	andeq	r0, r1, r0
    4c90:	00000054 	andeq	r0, r0, r4, asr r0
    4c94:	00000000 	andeq	r0, r0, r0
    4c98:	f3000400 	vshl.u8	d0, d0, d0
    4c9c:	009f5001 	addseq	r5, pc, r1
    4ca0:	00000000 	andeq	r0, r0, r0
    4ca4:	01000000 	mrseq	r0, (UNDEF: 0)
    4ca8:	00005400 	andeq	r5, r0, r0, lsl #8
    4cac:	00000000 	andeq	r0, r0, r0
    4cb0:	00040000 	andeq	r0, r4, r0
    4cb4:	9f5001f3 	svcls	0x005001f3
	...
    4cc0:	00540001 	subseq	r0, r4, r1
    4cc4:	00000000 	andeq	r0, r0, r0
    4cc8:	04000000 	streq	r0, [r0], #-0
    4ccc:	5001f300 	andpl	pc, r1, r0, lsl #6
    4cd0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    4ce4:	01000000 	mrseq	r0, (UNDEF: 0)
    4ce8:	00005800 	andeq	r5, r0, r0, lsl #16
    4cec:	00000000 	andeq	r0, r0, r0
    4cf0:	00030000 	andeq	r0, r3, r0
    4cf4:	009f7f78 	addseq	r7, pc, r8, ror pc	; <UNPREDICTABLE>
    4cf8:	00000000 	andeq	r0, r0, r0
    4cfc:	01000000 	mrseq	r0, (UNDEF: 0)
    4d00:	00005800 	andeq	r5, r0, r0, lsl #16
	...
    4d14:	005a0001 	subseq	r0, sl, r1
	...
    4d28:	01000000 	mrseq	r0, (UNDEF: 0)
    4d2c:	00005000 	andeq	r5, r0, r0
    4d30:	00000000 	andeq	r0, r0, r0
    4d34:	00010000 	andeq	r0, r1, r0
    4d38:	00000050 	andeq	r0, r0, r0, asr r0
	...
    4d48:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    4d54:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    4d58:	00000014 	andeq	r0, r0, r4, lsl r0
    4d5c:	00000000 	andeq	r0, r0, r0
    4d60:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    4d64:	00000028 	andeq	r0, r0, r8, lsr #32
    4d68:	00000000 	andeq	r0, r0, r0
    4d6c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    4d70:	00000014 	andeq	r0, r0, r4, lsl r0
    4d74:	00000000 	andeq	r0, r0, r0
    4d78:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    4d7c:	00000028 	andeq	r0, r0, r8, lsr #32
	...
    4d90:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    4d9c:	00540001 	subseq	r0, r4, r1
	...
    4db0:	01000000 	mrseq	r0, (UNDEF: 0)
    4db4:	00005100 	andeq	r5, r0, r0, lsl #2
    4db8:	00000000 	andeq	r0, r0, r0
    4dbc:	00010000 	andeq	r0, r1, r0
    4dc0:	00000057 	andeq	r0, r0, r7, asr r0
	...
    4dd0:	01000000 	mrseq	r0, (UNDEF: 0)
    4dd4:	00005200 	andeq	r5, r0, r0, lsl #4
	...
    4de8:	00010000 	andeq	r0, r1, r0
    4dec:	00000053 	andeq	r0, r0, r3, asr r0
    4df0:	00000000 	andeq	r0, r0, r0
    4df4:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    4e00:	00000001 	andeq	r0, r0, r1
    4e04:	00010100 	andeq	r0, r1, r0, lsl #2
	...
    4e10:	00020000 	andeq	r0, r2, r0
    4e14:	00009f30 	andeq	r9, r0, r0, lsr pc
    4e18:	00000000 	andeq	r0, r0, r0
    4e1c:	00010000 	andeq	r0, r1, r0
    4e20:	00000056 	andeq	r0, r0, r6, asr r0
    4e24:	00000000 	andeq	r0, r0, r0
    4e28:	56000100 	strpl	r0, [r0], -r0, lsl #2
	...
    4e34:	9f310002 	svcls	0x00310002
	...
    4e40:	00560001 	subseq	r0, r6, r1
	...
    4e58:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    4e64:	00500001 	subseq	r0, r0, r1
    4e68:	00000000 	andeq	r0, r0, r0
    4e6c:	01000000 	mrseq	r0, (UNDEF: 0)
    4e70:	00005000 	andeq	r5, r0, r0
    4e74:	00000000 	andeq	r0, r0, r0
    4e78:	00030000 	andeq	r0, r3, r0
	...
    4e84:	00010000 	andeq	r0, r1, r0
    4e88:	00000050 	andeq	r0, r0, r0, asr r0
    4e8c:	00000000 	andeq	r0, r0, r0
    4e90:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    4ea8:	00560001 	subseq	r0, r6, r1
    4eac:	00000000 	andeq	r0, r0, r0
    4eb0:	01000000 	mrseq	r0, (UNDEF: 0)
    4eb4:	00005600 	andeq	r5, r0, r0, lsl #12
	...
    4ec4:	00020000 	andeq	r0, r2, r0
    4ec8:	0000007d 	andeq	r0, r0, sp, ror r0
    4ecc:	00000000 	andeq	r0, r0, r0
    4ed0:	00020000 	andeq	r0, r2, r0
    4ed4:	0000087d 	andeq	r0, r0, sp, ror r8
    4ed8:	00000000 	andeq	r0, r0, r0
    4edc:	00020000 	andeq	r0, r2, r0
    4ee0:	0000007d 	andeq	r0, r0, sp, ror r0
    4ee4:	00000000 	andeq	r0, r0, r0
    4ee8:	00020000 	andeq	r0, r2, r0
    4eec:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    4f08:	00010000 	andeq	r0, r1, r0
    4f0c:	00000050 	andeq	r0, r0, r0, asr r0
    4f10:	00000000 	andeq	r0, r0, r0
    4f14:	f3000400 	vshl.u8	d0, d0, d0
    4f18:	009f5001 	addseq	r5, pc, r1
    4f1c:	00000000 	andeq	r0, r0, r0
    4f20:	01000000 	mrseq	r0, (UNDEF: 0)
    4f24:	00005000 	andeq	r5, r0, r0
    4f28:	00000000 	andeq	r0, r0, r0
    4f2c:	00040000 	andeq	r0, r4, r0
    4f30:	9f5001f3 	svcls	0x005001f3
	...
    4f3c:	00500001 	subseq	r0, r0, r1
    4f40:	00000000 	andeq	r0, r0, r0
    4f44:	04000000 	streq	r0, [r0], #-0
    4f48:	5001f300 	andpl	pc, r1, r0, lsl #6
    4f4c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    4f58:	04040000 	streq	r0, [r4], #-0
	...
    4f64:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    4f70:	00540001 	subseq	r0, r4, r1
    4f74:	00000000 	andeq	r0, r0, r0
    4f78:	01000000 	mrseq	r0, (UNDEF: 0)
    4f7c:	00005100 	andeq	r5, r0, r0, lsl #2
    4f80:	00000000 	andeq	r0, r0, r0
    4f84:	00010000 	andeq	r0, r1, r0
    4f88:	00000054 	andeq	r0, r0, r4, asr r0
    4f8c:	00000000 	andeq	r0, r0, r0
    4f90:	00000200 	andeq	r0, r0, r0, lsl #4
    4f94:	00040000 	andeq	r0, r4, r0
    4f98:	00000000 	andeq	r0, r0, r0
    4f9c:	02000000 	andeq	r0, r0, #0
    4fa0:	009f3000 	addseq	r3, pc, r0
    4fa4:	00000000 	andeq	r0, r0, r0
    4fa8:	01000000 	mrseq	r0, (UNDEF: 0)
    4fac:	00005000 	andeq	r5, r0, r0
    4fb0:	00000000 	andeq	r0, r0, r0
    4fb4:	00020000 	andeq	r0, r2, r0
    4fb8:	00009f30 	andeq	r9, r0, r0, lsr pc
	...
    4fc8:	00020000 	andeq	r0, r2, r0
    4fcc:	0000007d 	andeq	r0, r0, sp, ror r0
    4fd0:	00000000 	andeq	r0, r0, r0
    4fd4:	00020000 	andeq	r0, r2, r0
    4fd8:	0000087d 	andeq	r0, r0, sp, ror r8
    4fdc:	00000000 	andeq	r0, r0, r0
    4fe0:	00020000 	andeq	r0, r2, r0
    4fe4:	0000107d 	andeq	r1, r0, sp, ror r0
    4fe8:	00000000 	andeq	r0, r0, r0
    4fec:	00020000 	andeq	r0, r2, r0
    4ff0:	0000007d 	andeq	r0, r0, sp, ror r0
    4ff4:	00000000 	andeq	r0, r0, r0
    4ff8:	00020000 	andeq	r0, r2, r0
    4ffc:	0000107d 	andeq	r1, r0, sp, ror r0
    5000:	00000000 	andeq	r0, r0, r0
    5004:	00020000 	andeq	r0, r2, r0
    5008:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    5024:	00010000 	andeq	r0, r1, r0
    5028:	00000050 	andeq	r0, r0, r0, asr r0
    502c:	00000000 	andeq	r0, r0, r0
    5030:	f3000400 	vshl.u8	d0, d0, d0
    5034:	009f5001 	addseq	r5, pc, r1
    5038:	00000000 	andeq	r0, r0, r0
    503c:	01000000 	mrseq	r0, (UNDEF: 0)
    5040:	00005000 	andeq	r5, r0, r0
    5044:	00000000 	andeq	r0, r0, r0
    5048:	00040000 	andeq	r0, r4, r0
    504c:	9f5001f3 	svcls	0x005001f3
	...
    5058:	00500001 	subseq	r0, r0, r1
    505c:	00000000 	andeq	r0, r0, r0
    5060:	04000000 	streq	r0, [r0], #-0
    5064:	5001f300 	andpl	pc, r1, r0, lsl #6
    5068:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    5074:	04040000 	streq	r0, [r4], #-0
	...
    5080:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    508c:	00540001 	subseq	r0, r4, r1
    5090:	00000000 	andeq	r0, r0, r0
    5094:	01000000 	mrseq	r0, (UNDEF: 0)
    5098:	00005100 	andeq	r5, r0, r0, lsl #2
    509c:	00000000 	andeq	r0, r0, r0
    50a0:	00010000 	andeq	r0, r1, r0
    50a4:	00000054 	andeq	r0, r0, r4, asr r0
	...
    50b4:	00000404 	andeq	r0, r0, r4, lsl #8
    50b8:	00000000 	andeq	r0, r0, r0
    50bc:	01000000 	mrseq	r0, (UNDEF: 0)
    50c0:	00005200 	andeq	r5, r0, r0, lsl #4
    50c4:	00000000 	andeq	r0, r0, r0
    50c8:	00010000 	andeq	r0, r1, r0
    50cc:	00000053 	andeq	r0, r0, r3, asr r0
    50d0:	00000000 	andeq	r0, r0, r0
    50d4:	f3000400 	vshl.u8	d0, d0, d0
    50d8:	009f5201 	addseq	r5, pc, r1, lsl #4
    50dc:	00000000 	andeq	r0, r0, r0
    50e0:	01000000 	mrseq	r0, (UNDEF: 0)
    50e4:	00005200 	andeq	r5, r0, r0, lsl #4
    50e8:	00000000 	andeq	r0, r0, r0
    50ec:	00040000 	andeq	r0, r4, r0
    50f0:	9f5201f3 	svcls	0x005201f3
	...
    50fc:	00000002 	andeq	r0, r0, r2
    5100:	00000400 	andeq	r0, r0, r0, lsl #8
    5104:	00000000 	andeq	r0, r0, r0
    5108:	00020000 	andeq	r0, r2, r0
    510c:	00009f30 	andeq	r9, r0, r0, lsr pc
    5110:	00000000 	andeq	r0, r0, r0
    5114:	00010000 	andeq	r0, r1, r0
    5118:	00000050 	andeq	r0, r0, r0, asr r0
    511c:	00000000 	andeq	r0, r0, r0
    5120:	30000200 	andcc	r0, r0, r0, lsl #4
    5124:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    5134:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    5140:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    5144:	00000010 	andeq	r0, r0, r0, lsl r0
	...
    5158:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    5164:	00540001 	subseq	r0, r4, r1
	...
    5178:	01000000 	mrseq	r0, (UNDEF: 0)
    517c:	00005100 	andeq	r5, r0, r0, lsl #2
    5180:	00000000 	andeq	r0, r0, r0
    5184:	00010000 	andeq	r0, r1, r0
    5188:	00000055 	andeq	r0, r0, r5, asr r0
    518c:	00000000 	andeq	r0, r0, r0
    5190:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    519c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    51a8:	9f310002 	svcls	0x00310002
	...
    51b4:	00000002 	andeq	r0, r0, r2
	...
    51c0:	00500001 	subseq	r0, r0, r1
    51c4:	00000000 	andeq	r0, r0, r0
    51c8:	01000000 	mrseq	r0, (UNDEF: 0)
    51cc:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    51dc:	00020000 	andeq	r0, r2, r0
    51e0:	0000007d 	andeq	r0, r0, sp, ror r0
    51e4:	00000000 	andeq	r0, r0, r0
    51e8:	00020000 	andeq	r0, r2, r0
    51ec:	0000107d 	andeq	r1, r0, sp, ror r0
	...
    5200:	00010000 	andeq	r0, r1, r0
    5204:	00000050 	andeq	r0, r0, r0, asr r0
    5208:	00000000 	andeq	r0, r0, r0
    520c:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    5220:	00020000 	andeq	r0, r2, r0
    5224:	00009f31 	andeq	r9, r0, r1, lsr pc
    5228:	00000000 	andeq	r0, r0, r0
    522c:	00020000 	andeq	r0, r2, r0
	...
    5238:	00010000 	andeq	r0, r1, r0
    523c:	00000050 	andeq	r0, r0, r0, asr r0
    5240:	00000000 	andeq	r0, r0, r0
    5244:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    5258:	007d0002 	rsbseq	r0, sp, r2
	...
    5264:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    5270:	107d0002 	rsbsne	r0, sp, r2
	...
    527c:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    5294:	00500001 	subseq	r0, r0, r1
    5298:	00000000 	andeq	r0, r0, r0
    529c:	04000000 	streq	r0, [r0], #-0
    52a0:	5001f300 	andpl	pc, r1, r0, lsl #6
    52a4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    52b8:	01000000 	mrseq	r0, (UNDEF: 0)
    52bc:	00005100 	andeq	r5, r0, r0, lsl #2
    52c0:	00000000 	andeq	r0, r0, r0
    52c4:	00010000 	andeq	r0, r1, r0
    52c8:	00000053 	andeq	r0, r0, r3, asr r0
    52cc:	00000000 	andeq	r0, r0, r0
    52d0:	f3000400 	vshl.u8	d0, d0, d0
    52d4:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
    52e8:	01000000 	mrseq	r0, (UNDEF: 0)
    52ec:	00005000 	andeq	r5, r0, r0
    52f0:	00000000 	andeq	r0, r0, r0
    52f4:	00010000 	andeq	r0, r1, r0
    52f8:	00000054 	andeq	r0, r0, r4, asr r0
	...
    5308:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    5314:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    5318:	00000008 	andeq	r0, r0, r8
	...
    532c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    5338:	01f30004 	mvnseq	r0, r4
    533c:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    5350:	00010000 	andeq	r0, r1, r0
    5354:	00000050 	andeq	r0, r0, r0, asr r0
    5358:	00000000 	andeq	r0, r0, r0
    535c:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    5370:	007d0002 	rsbseq	r0, sp, r2
	...
    537c:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    5388:	007d0002 	rsbseq	r0, sp, r2
	...
    53a0:	00010000 	andeq	r0, r1, r0
    53a4:	00000050 	andeq	r0, r0, r0, asr r0
    53a8:	00000000 	andeq	r0, r0, r0
    53ac:	f3000400 	vshl.u8	d0, d0, d0
    53b0:	009f5001 	addseq	r5, pc, r1
    53b4:	00000000 	andeq	r0, r0, r0
    53b8:	01000000 	mrseq	r0, (UNDEF: 0)
    53bc:	00005000 	andeq	r5, r0, r0
    53c0:	00000000 	andeq	r0, r0, r0
    53c4:	227e0000 	rsbscs	r0, lr, #0
    53c8:	22801000 	addcs	r1, r0, #0
    53cc:	00021000 	andeq	r1, r2, r0
    53d0:	2280007d 	addcs	r0, r0, #125	; 0x7d
    53d4:	229e1000 	addscs	r1, lr, #0
    53d8:	00021000 	andeq	r1, r2, r0
    53dc:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    53ec:	227e0000 	rsbscs	r0, lr, #0
    53f0:	22901000 	addscs	r1, r0, #0
    53f4:	00011000 	andeq	r1, r1, r0
    53f8:	00229050 	eoreq	r9, r2, r0, asr r0
    53fc:	00229310 	eoreq	r9, r2, r0, lsl r3
    5400:	70000310 	andvc	r0, r0, r0, lsl r3
    5404:	229300cc 	addscs	r0, r3, #204	; 0xcc
    5408:	229a1000 	addscs	r1, sl, #0
    540c:	00041000 	andeq	r1, r4, r0
    5410:	9f5001f3 	svcls	0x005001f3
    5414:	1000229a 	mulne	r0, sl, r2
    5418:	1000229e 	mulne	r0, lr, r2
    541c:	00500001 	subseq	r0, r0, r1
	...
    542c:	7e000000 	cdpvc	0, 0, cr0, cr0, cr0, {0}
    5430:	8e100022 	cdphi	0, 1, cr0, cr0, cr2, {1}
    5434:	01100022 	tsteq	r0, r2, lsr #32
    5438:	228e5100 	addcs	r5, lr, #0, 2
    543c:	22931000 	addscs	r1, r3, #0
    5440:	00011000 	andeq	r1, r1, r0
    5444:	00229353 	eoreq	r9, r2, r3, asr r3
    5448:	00229a10 	eoreq	r9, r2, r0, lsl sl
    544c:	f3000410 	vqshl.u8	d0, d0, d0
    5450:	9a9f5101 	bls	fe7d985c <__StackTop+0xc66d985c>
    5454:	9e100022 	cdpls	0, 1, cr0, cr0, cr2, {1}
    5458:	01100022 	tsteq	r0, r2, lsr #32
    545c:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    546c:	1000227e 	andne	r2, r0, lr, ror r2
    5470:	10002293 	mulne	r0, r3, r2
    5474:	93520001 	cmpls	r2, #1
    5478:	9a100022 	bls	405508 <__RAM_SIZE+0x305508>
    547c:	04100022 	ldreq	r0, [r0], #-34	; 0xffffffde
    5480:	5201f300 	andpl	pc, r1, #0, 6
    5484:	00229a9f 	mlaeq	r2, pc, sl, r9	; <UNPREDICTABLE>
    5488:	00229e10 	eoreq	r9, r2, r0, lsl lr
    548c:	52000110 	andpl	r0, r0, #16, 2
	...
    549c:	1000227e 	andne	r2, r0, lr, ror r2
    54a0:	10002284 	andne	r2, r0, r4, lsl #5
    54a4:	84530001 	ldrbhi	r0, [r3], #-1
    54a8:	9e100022 	cdpls	0, 1, cr0, cr0, cr2, {1}
    54ac:	04100022 	ldreq	r0, [r0], #-34	; 0xffffffde
    54b0:	5301f300 	movwpl	pc, #4864	; 0x1300	; <UNPREDICTABLE>
    54b4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    54c0:	00227e00 	eoreq	r7, r2, r0, lsl #28
    54c4:	00229a10 	eoreq	r9, r2, r0, lsl sl
    54c8:	91000210 	tstls	r0, r0, lsl r2
    54cc:	00229a00 	eoreq	r9, r2, r0, lsl #20
    54d0:	00229e10 	eoreq	r9, r2, r0, lsl lr
    54d4:	91000210 	tstls	r0, r0, lsl r2
	...
    54e8:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    54f4:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    54f8:	00000014 	andeq	r0, r0, r4, lsl r0
    54fc:	00000000 	andeq	r0, r0, r0
    5500:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    5504:	00000020 	andeq	r0, r0, r0, lsr #32
    5508:	00000000 	andeq	r0, r0, r0
    550c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    5510:	00000014 	andeq	r0, r0, r4, lsl r0
    5514:	00000000 	andeq	r0, r0, r0
    5518:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    551c:	00000020 	andeq	r0, r0, r0, lsr #32
	...
    5538:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    5544:	00560001 	subseq	r0, r6, r1
    5548:	00000000 	andeq	r0, r0, r0
    554c:	01000000 	mrseq	r0, (UNDEF: 0)
    5550:	00005000 	andeq	r5, r0, r0
    5554:	00000000 	andeq	r0, r0, r0
    5558:	00040000 	andeq	r0, r4, r0
    555c:	9f5001f3 	svcls	0x005001f3
	...
    5568:	00500001 	subseq	r0, r0, r1
    556c:	00000000 	andeq	r0, r0, r0
    5570:	01000000 	mrseq	r0, (UNDEF: 0)
    5574:	00005600 	andeq	r5, r0, r0, lsl #12
	...
    5590:	00510001 	subseq	r0, r1, r1
    5594:	00000000 	andeq	r0, r0, r0
    5598:	01000000 	mrseq	r0, (UNDEF: 0)
    559c:	00005400 	andeq	r5, r0, r0, lsl #8
    55a0:	00000000 	andeq	r0, r0, r0
    55a4:	00010000 	andeq	r0, r1, r0
    55a8:	00000051 	andeq	r0, r0, r1, asr r0
    55ac:	00000000 	andeq	r0, r0, r0
    55b0:	f3000400 	vshl.u8	d0, d0, d0
    55b4:	009f5101 	addseq	r5, pc, r1, lsl #2
    55b8:	00000000 	andeq	r0, r0, r0
    55bc:	01000000 	mrseq	r0, (UNDEF: 0)
    55c0:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    55d8:	00010000 	andeq	r0, r1, r0
    55dc:	00000052 	andeq	r0, r0, r2, asr r0
    55e0:	00000000 	andeq	r0, r0, r0
    55e4:	f3000400 	vshl.u8	d0, d0, d0
    55e8:	009f5201 	addseq	r5, pc, r1, lsl #4
    55ec:	00000000 	andeq	r0, r0, r0
    55f0:	01000000 	mrseq	r0, (UNDEF: 0)
    55f4:	00005200 	andeq	r5, r0, r0, lsl #4
    55f8:	00000000 	andeq	r0, r0, r0
    55fc:	00040000 	andeq	r0, r4, r0
    5600:	9f5201f3 	svcls	0x005201f3
	...
    560c:	00000001 	andeq	r0, r0, r1
	...
    561c:	00020000 	andeq	r0, r2, r0
    5620:	00009f30 	andeq	r9, r0, r0, lsr pc
    5624:	00000000 	andeq	r0, r0, r0
    5628:	00010000 	andeq	r0, r1, r0
    562c:	00000050 	andeq	r0, r0, r0, asr r0
    5630:	00000000 	andeq	r0, r0, r0
    5634:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    5640:	9f300002 	svcls	0x00300002
	...
    564c:	9f300002 	svcls	0x00300002
	...
    5658:	00000001 	andeq	r0, r0, r1
	...
    5664:	00010000 	andeq	r0, r1, r0
    5668:	00000050 	andeq	r0, r0, r0, asr r0
    566c:	00000000 	andeq	r0, r0, r0
    5670:	70000400 	andvc	r0, r0, r0, lsl #8
    5674:	009f7fa4 	addseq	r7, pc, r4, lsr #31
    5678:	00000000 	andeq	r0, r0, r0
    567c:	06000000 	streq	r0, [r0], -r0
    5680:	76007400 	strvc	r7, [r0], -r0, lsl #8
    5684:	009f1e00 	addseq	r1, pc, r0, lsl #28
    5688:	00000000 	andeq	r0, r0, r0
    568c:	01000000 	mrseq	r0, (UNDEF: 0)
    5690:	00000202 	andeq	r0, r0, r2, lsl #4
	...
    569c:	01000000 	mrseq	r0, (UNDEF: 0)
    56a0:	00005000 	andeq	r5, r0, r0
    56a4:	00000000 	andeq	r0, r0, r0
    56a8:	00040000 	andeq	r0, r4, r0
    56ac:	9f00dc70 	svcls	0x0000dc70
	...
    56b8:	00520001 	subseq	r0, r2, r1
    56bc:	00000000 	andeq	r0, r0, r0
    56c0:	04000000 	streq	r0, [r0], #-0
    56c4:	00dc7500 	sbcseq	r7, ip, r0, lsl #10
    56c8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    56e0:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    56ec:	01f30004 	mvnseq	r0, r4
    56f0:	00009f50 	andeq	r9, r0, r0, asr pc
    56f4:	00000000 	andeq	r0, r0, r0
    56f8:	00010000 	andeq	r0, r1, r0
    56fc:	00000050 	andeq	r0, r0, r0, asr r0
    5700:	00000000 	andeq	r0, r0, r0
    5704:	72000200 	andvc	r0, r0, #0, 4
	...
    5710:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    571c:	30000200 	andcc	r0, r0, r0, lsl #4
    5720:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    5724:	00000000 	andeq	r0, r0, r0
    5728:	31000200 	mrscc	r0, R8_usr
    572c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    5730:	00000000 	andeq	r0, r0, r0
    5734:	00000300 	andeq	r0, r0, r0, lsl #6
	...
    5744:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    5750:	01f30004 	mvnseq	r0, r4
    5754:	00009f50 	andeq	r9, r0, r0, asr pc
    5758:	00000000 	andeq	r0, r0, r0
    575c:	00010000 	andeq	r0, r1, r0
    5760:	00000050 	andeq	r0, r0, r0, asr r0
    5764:	00000000 	andeq	r0, r0, r0
    5768:	72000200 	andvc	r0, r0, #0, 4
	...
    5774:	00229e00 	eoreq	r9, r2, r0, lsl #28
    5778:	0022a210 	eoreq	sl, r2, r0, lsl r2
    577c:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    5780:	0022a200 	eoreq	sl, r2, r0, lsl #4
    5784:	0022a410 	eoreq	sl, r2, r0, lsl r4
    5788:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    578c:	0022a408 	eoreq	sl, r2, r8, lsl #8
    5790:	0022c610 	eoreq	ip, r2, r0, lsl r6
    5794:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    5798:	0022c610 	eoreq	ip, r2, r0, lsl r6
    579c:	0022c810 	eoreq	ip, r2, r0, lsl r8
    57a0:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    57a4:	0022c808 	eoreq	ip, r2, r8, lsl #16
    57a8:	0022d010 	eoreq	sp, r2, r0, lsl r0
    57ac:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    57b0:	0022d010 	eoreq	sp, r2, r0, lsl r0
    57b4:	0022d410 	eoreq	sp, r2, r0, lsl r4
    57b8:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    57bc:	0022d400 	eoreq	sp, r2, r0, lsl #8
    57c0:	0022dc10 	eoreq	sp, r2, r0, lsl ip
    57c4:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    57c8:	00000010 	andeq	r0, r0, r0, lsl r0
	...
    57e4:	9e000000 	cdpls	0, 0, cr0, cr0, cr0, {0}
    57e8:	be100022 	cdplt	0, 1, cr0, cr0, cr2, {1}
    57ec:	01100022 	tsteq	r0, r2, lsr #32
    57f0:	22be5000 	adcscs	r5, lr, #0
    57f4:	22c11000 	sbccs	r1, r1, #0
    57f8:	00011000 	andeq	r1, r1, r0
    57fc:	0022c15c 	eoreq	ip, r2, ip, asr r1
    5800:	0022c810 	eoreq	ip, r2, r0, lsl r8
    5804:	f3000410 	vqshl.u8	d0, d0, d0
    5808:	c89f5001 	ldmgt	pc, {r0, ip, lr}	; <UNPREDICTABLE>
    580c:	ce100022 	cdpgt	0, 1, cr0, cr0, cr2, {1}
    5810:	01100022 	tsteq	r0, r2, lsr #32
    5814:	22ce5000 	sbccs	r5, lr, #0
    5818:	22d01000 	sbcscs	r1, r0, #0
    581c:	00011000 	andeq	r1, r1, r0
    5820:	0022d05c 	eoreq	sp, r2, ip, asr r0
    5824:	0022d210 	eoreq	sp, r2, r0, lsl r2
    5828:	50000110 	andpl	r0, r0, r0, lsl r1
    582c:	100022d2 	ldrdne	r2, [r0], -r2	; <UNPREDICTABLE>
    5830:	100022d4 	ldrdne	r2, [r0], -r4
    5834:	01f30004 	mvnseq	r0, r4
    5838:	22d49f50 	sbcscs	r9, r4, #80, 30	; 0x140
    583c:	22d61000 	sbcscs	r1, r6, #0
    5840:	00011000 	andeq	r1, r1, r0
    5844:	0022d650 	eoreq	sp, r2, r0, asr r6
    5848:	0022d810 	eoreq	sp, r2, r0, lsl r8
    584c:	5c000110 	stfpls	f0, [r0], {16}
    5850:	100022d8 	ldrdne	r2, [r0], -r8
    5854:	100022da 	ldrdne	r2, [r0], -sl
    5858:	da500001 	ble	1405864 <__RAM_SIZE+0x1305864>
    585c:	dc100022 	ldcle	0, cr0, [r0], {34}	; 0x22
    5860:	01100022 	tsteq	r0, r2, lsr #32
    5864:	00005c00 	andeq	r5, r0, r0, lsl #24
	...
    5874:	1000229e 	mulne	r0, lr, r2
    5878:	100022c1 	andne	r2, r0, r1, asr #5
    587c:	c1510001 	cmpgt	r1, r1
    5880:	c8100022 	ldmdagt	r0, {r1, r5}
    5884:	04100022 	ldreq	r0, [r0], #-34	; 0xffffffde
    5888:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    588c:	0022c89f 	mlaeq	r2, pc, r8, ip	; <UNPREDICTABLE>
    5890:	0022dc10 	eoreq	sp, r2, r0, lsl ip
    5894:	51000110 	tstpl	r0, r0, lsl r1
	...
    58a4:	229e0000 	addscs	r0, lr, #0
    58a8:	22c11000 	sbccs	r1, r1, #0
    58ac:	00011000 	andeq	r1, r1, r0
    58b0:	0022c152 	eoreq	ip, r2, r2, asr r1
    58b4:	0022c810 	eoreq	ip, r2, r0, lsl r8
    58b8:	f3000410 	vqshl.u8	d0, d0, d0
    58bc:	c89f5201 	ldmgt	pc, {r0, r9, ip, lr}	; <UNPREDICTABLE>
    58c0:	dc100022 	ldcle	0, cr0, [r0], {34}	; 0x22
    58c4:	01100022 	tsteq	r0, r2, lsr #32
    58c8:	00005200 	andeq	r5, r0, r0, lsl #4
	...
    58d8:	1000229e 	mulne	r0, lr, r2
    58dc:	100022b2 			; <UNDEFINED> instruction: 0x100022b2
    58e0:	b2530001 	subslt	r0, r3, #1
    58e4:	c8100022 	ldmdagt	r0, {r1, r5}
    58e8:	01100022 	tsteq	r0, r2, lsr #32
    58ec:	22c85400 	sbccs	r5, r8, #0, 8
    58f0:	22dc1000 	sbcscs	r1, ip, #0
    58f4:	00011000 	andeq	r1, r1, r0
    58f8:	00000053 	andeq	r0, r0, r3, asr r0
	...
    5904:	00229e00 	eoreq	r9, r2, r0, lsl #28
    5908:	0022c810 	eoreq	ip, r2, r0, lsl r8
    590c:	91000210 	tstls	r0, r0, lsl r2
    5910:	0022c800 	eoreq	ip, r2, r0, lsl #16
    5914:	0022dc10 	eoreq	sp, r2, r0, lsl ip
    5918:	91000210 	tstls	r0, r0, lsl r2
	...
    5924:	01010200 	mrseq	r0, R9_usr
	...
    5930:	00229e00 	eoreq	r9, r2, r0, lsl #28
    5934:	0022b010 	eoreq	fp, r2, r0, lsl r0
    5938:	30000210 	andcc	r0, r0, r0, lsl r2
    593c:	0022b09f 	mlaeq	r2, pc, r0, fp	; <UNPREDICTABLE>
    5940:	0022b210 	eoreq	fp, r2, r0, lsl r2
    5944:	53000110 	movwpl	r0, #272	; 0x110
    5948:	100022b2 			; <UNDEFINED> instruction: 0x100022b2
    594c:	100022c4 	andne	r2, r0, r4, asr #5
    5950:	c8540001 	ldmdagt	r4, {r0}^
    5954:	ce100022 	cdpgt	0, 1, cr0, cr0, cr2, {1}
    5958:	02100022 	andseq	r0, r0, #34	; 0x22
    595c:	ce9f3000 	cdpgt	0, 9, cr3, cr15, cr0, {0}
    5960:	d0100022 	andsle	r0, r0, r2, lsr #32
    5964:	01100022 	tsteq	r0, r2, lsr #32
    5968:	22d05000 	sbcscs	r5, r0, #0
    596c:	22dc1000 	sbcscs	r1, ip, #0
    5970:	00021000 	andeq	r1, r2, r0
    5974:	00009f30 	andeq	r9, r0, r0, lsr pc
    5978:	00000000 	andeq	r0, r0, r0
    597c:	21f80000 	mvnscs	r0, r0
    5980:	21fe1000 	mvnscs	r1, r0
    5984:	00021000 	andeq	r1, r2, r0
    5988:	21fe007d 	mvnscs	r0, sp, ror r0
    598c:	22761000 	rsbscs	r1, r6, #0
    5990:	00021000 	andeq	r1, r2, r0
    5994:	2276107d 	rsbscs	r1, r6, #125	; 0x7d
    5998:	227a1000 	rsbscs	r1, sl, #0
    599c:	00021000 	andeq	r1, r2, r0
    59a0:	227a007d 	rsbscs	r0, sl, #125	; 0x7d
    59a4:	227e1000 	rsbscs	r1, lr, #0
    59a8:	00021000 	andeq	r1, r2, r0
    59ac:	0000107d 	andeq	r1, r0, sp, ror r0
	...
    59c4:	21f80000 	mvnscs	r0, r0
    59c8:	22161000 	andscs	r1, r6, #0
    59cc:	00011000 	andeq	r1, r1, r0
    59d0:	00221650 	eoreq	r1, r2, r0, asr r6
    59d4:	00221810 	eoreq	r1, r2, r0, lsl r8
    59d8:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    59dc:	10002218 	andne	r2, r0, r8, lsl r2
    59e0:	1000221f 	andne	r2, r0, pc, lsl r2
    59e4:	1f500001 	svcne	0x00500001
    59e8:	76100022 	ldrvc	r0, [r0], -r2, lsr #32
    59ec:	01100022 	tsteq	r0, r2, lsr #32
    59f0:	22765400 	rsbscs	r5, r6, #0, 8
    59f4:	22781000 	rsbscs	r1, r8, #0
    59f8:	00011000 	andeq	r1, r1, r0
    59fc:	00227850 	eoreq	r7, r2, r0, asr r8
    5a00:	00227a10 	eoreq	r7, r2, r0, lsl sl
    5a04:	f3000410 	vqshl.u8	d0, d0, d0
    5a08:	7a9f5001 	bvc	fe7d9a14 <__StackTop+0xc66d9a14>
    5a0c:	7c100022 	ldcvc	0, cr0, [r0], {34}	; 0x22
    5a10:	01100022 	tsteq	r0, r2, lsr #32
    5a14:	227c5000 	rsbscs	r5, ip, #0
    5a18:	227e1000 	rsbscs	r1, lr, #0
    5a1c:	00011000 	andeq	r1, r1, r0
    5a20:	00000054 	andeq	r0, r0, r4, asr r0
	...
    5a30:	0021f800 	eoreq	pc, r1, r0, lsl #16
    5a34:	00220c10 	eoreq	r0, r2, r0, lsl ip
    5a38:	51000110 	tstpl	r0, r0, lsl r1
    5a3c:	1000220c 	andne	r2, r0, ip, lsl #4
    5a40:	10002276 	andne	r2, r0, r6, ror r2
    5a44:	76550001 	ldrbvc	r0, [r5], -r1
    5a48:	7c100022 	ldcvc	0, cr0, [r0], {34}	; 0x22
    5a4c:	01100022 	tsteq	r0, r2, lsr #32
    5a50:	227c5100 	rsbscs	r5, ip, #0, 2
    5a54:	227e1000 	rsbscs	r1, lr, #0
    5a58:	00011000 	andeq	r1, r1, r0
    5a5c:	00000055 	andeq	r0, r0, r5, asr r0
    5a60:	00000000 	andeq	r0, r0, r0
    5a64:	00000200 	andeq	r0, r0, r0, lsl #4
    5a68:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
    5a6c:	16100021 	ldrne	r0, [r0], -r1, lsr #32
    5a70:	02100022 	andseq	r0, r0, #34	; 0x22
    5a74:	169f3100 	ldrne	r3, [pc], r0, lsl #2
    5a78:	18100022 	ldmdane	r0, {r1, r5}
    5a7c:	02100022 	andseq	r0, r0, #34	; 0x22
    5a80:	189f3000 	ldmne	pc, {ip, sp}	; <UNPREDICTABLE>
    5a84:	7c100022 	ldcvc	0, cr0, [r0], {34}	; 0x22
    5a88:	02100022 	andseq	r0, r0, #34	; 0x22
    5a8c:	009f3100 	addseq	r3, pc, r0, lsl #2
    5a90:	00000000 	andeq	r0, r0, r0
    5a94:	03000000 	movweq	r0, #0
	...
    5aa4:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
    5aa8:	16100021 	ldrne	r0, [r0], -r1, lsr #32
    5aac:	01100022 	tsteq	r0, r2, lsr #32
    5ab0:	22165000 	andscs	r5, r6, #0
    5ab4:	22181000 	andscs	r1, r8, #0
    5ab8:	00011000 	andeq	r1, r1, r0
    5abc:	00221854 	eoreq	r1, r2, r4, asr r8
    5ac0:	00221f10 	eoreq	r1, r2, r0, lsl pc
    5ac4:	50000110 	andpl	r0, r0, r0, lsl r1
    5ac8:	1000221f 	andne	r2, r0, pc, lsl r2
    5acc:	10002276 	andne	r2, r0, r6, ror r2
    5ad0:	76540001 	ldrbvc	r0, [r4], -r1
    5ad4:	78100022 	ldmdavc	r0, {r1, r5}
    5ad8:	01100022 	tsteq	r0, r2, lsr #32
    5adc:	22785000 	rsbscs	r5, r8, #0
    5ae0:	227a1000 	rsbscs	r1, sl, #0
    5ae4:	00041000 	andeq	r1, r4, r0
    5ae8:	9f5001f3 	svcls	0x005001f3
    5aec:	1000227a 	andne	r2, r0, sl, ror r2
    5af0:	1000227c 	andne	r2, r0, ip, ror r2
    5af4:	7c500001 	mrrcvc	0, 0, r0, r0, cr1	; <UNPREDICTABLE>
    5af8:	7e100022 	cdpvc	0, 1, cr0, cr0, cr2, {1}
    5afc:	01100022 	tsteq	r0, r2, lsr #32
    5b00:	00005400 	andeq	r5, r0, r0, lsl #8
    5b04:	00000000 	andeq	r0, r0, r0
    5b08:	00010000 	andeq	r0, r1, r0
	...
    5b14:	00010000 	andeq	r0, r1, r0
    5b18:	00000053 	andeq	r0, r0, r3, asr r0
    5b1c:	00000000 	andeq	r0, r0, r0
    5b20:	53000100 	movwpl	r0, #256	; 0x100
	...
    5b2c:	10002768 	andne	r2, r0, r8, ror #14
    5b30:	1000276c 	andne	r2, r0, ip, ror #14
    5b34:	007d0002 	rsbseq	r0, sp, r2
    5b38:	1000276c 	andne	r2, r0, ip, ror #14
    5b3c:	10002810 	andne	r2, r0, r0, lsl r8
    5b40:	187d0002 	ldmdane	sp!, {r1}^
	...
    5b54:	27680000 	strbcs	r0, [r8, -r0]!
    5b58:	278a1000 	strcs	r1, [sl, r0]
    5b5c:	00011000 	andeq	r1, r1, r0
    5b60:	00278a50 	eoreq	r8, r7, r0, asr sl
    5b64:	00279810 	eoreq	r9, r7, r0, lsl r8
    5b68:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    5b6c:	10002798 	mulne	r0, r8, r7
    5b70:	100027b2 			; <UNDEFINED> instruction: 0x100027b2
    5b74:	01f30004 	mvnseq	r0, r4
    5b78:	27b29f50 	sbfxcs	r9, r0, #30, #19
    5b7c:	27c41000 	strbcs	r1, [r4, r0]
    5b80:	00011000 	andeq	r1, r1, r0
    5b84:	0027c454 	eoreq	ip, r7, r4, asr r4
    5b88:	00281010 	eoreq	r1, r8, r0, lsl r0
    5b8c:	f3000410 	vqshl.u8	d0, d0, d0
    5b90:	009f5001 	addseq	r5, pc, r1
	...
    5b9c:	68000000 	stmdavs	r0, {}	; <UNPREDICTABLE>
    5ba0:	84100027 	ldrhi	r0, [r0], #-39	; 0xffffffd9
    5ba4:	01100027 	tsteq	r0, r7, lsr #32
    5ba8:	27845100 	strcs	r5, [r4, r0, lsl #2]
    5bac:	28101000 	ldmdacs	r0, {ip}
    5bb0:	00011000 	andeq	r1, r1, r0
    5bb4:	00000055 	andeq	r0, r0, r5, asr r0
	...
    5bc0:	00279800 	eoreq	r9, r7, r0, lsl #16
    5bc4:	0027ae10 	eoreq	sl, r7, r0, lsl lr
    5bc8:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    5bcc:	100027de 	ldrdne	r2, [r0], -lr
    5bd0:	10002810 	andne	r2, r0, r0, lsl r8
    5bd4:	00540001 	subseq	r0, r4, r1
	...
    5be0:	00277400 	eoreq	r7, r7, r0, lsl #8
    5be4:	00281010 	eoreq	r1, r8, r0, lsl r0
    5be8:	56000110 			; <UNDEFINED> instruction: 0x56000110
	...
    5bf4:	27780000 	ldrbcs	r0, [r8, -r0]!
    5bf8:	28101000 	ldmdacs	r0, {ip}
    5bfc:	00011000 	andeq	r1, r1, r0
    5c00:	00000057 	andeq	r0, r0, r7, asr r0
    5c04:	00000000 	andeq	r0, r0, r0
    5c08:	7e000000 	cdpvc	0, 0, cr0, cr0, cr0, {0}
    5c0c:	10100027 	andsne	r0, r0, r7, lsr #32
    5c10:	01100028 	tsteq	r0, r8, lsr #32
    5c14:	00005800 	andeq	r5, r0, r0, lsl #16
	...
    5c20:	100027ba 			; <UNDEFINED> instruction: 0x100027ba
    5c24:	100027de 	ldrdne	r2, [r0], -lr
    5c28:	00510001 	subseq	r0, r1, r1
	...
    5c38:	02000000 	andeq	r0, r0, #0
    5c3c:	00007d00 	andeq	r7, r0, r0, lsl #26
    5c40:	00000000 	andeq	r0, r0, r0
    5c44:	02000000 	andeq	r0, r0, #0
    5c48:	00107d00 	andseq	r7, r0, r0, lsl #26
	...
    5c5c:	01000000 	mrseq	r0, (UNDEF: 0)
    5c60:	00005000 	andeq	r5, r0, r0
    5c64:	00000000 	andeq	r0, r0, r0
    5c68:	00010000 	andeq	r0, r1, r0
    5c6c:	00000050 	andeq	r0, r0, r0, asr r0
	...
    5c80:	01000000 	mrseq	r0, (UNDEF: 0)
    5c84:	00005100 	andeq	r5, r0, r0, lsl #2
    5c88:	00000000 	andeq	r0, r0, r0
    5c8c:	00010000 	andeq	r0, r1, r0
    5c90:	00000055 	andeq	r0, r0, r5, asr r0
    5c94:	00000000 	andeq	r0, r0, r0
    5c98:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    5cb0:	00010000 	andeq	r0, r1, r0
    5cb4:	00000052 	andeq	r0, r0, r2, asr r0
    5cb8:	00000000 	andeq	r0, r0, r0
    5cbc:	56000100 	strpl	r0, [r0], -r0, lsl #2
	...
    5cc8:	00520001 	subseq	r0, r2, r1
	...
    5cdc:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    5cf0:	00010000 	andeq	r0, r1, r0
    5cf4:	00000054 	andeq	r0, r0, r4, asr r0
	...
    5d04:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    5d10:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    5d14:	00000010 	andeq	r0, r0, r0, lsl r0
	...
    5d28:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    5d34:	00500001 	subseq	r0, r0, r1
	...
    5d50:	01000000 	mrseq	r0, (UNDEF: 0)
    5d54:	00005100 	andeq	r5, r0, r0, lsl #2
    5d58:	00000000 	andeq	r0, r0, r0
    5d5c:	00010000 	andeq	r0, r1, r0
    5d60:	00000054 	andeq	r0, r0, r4, asr r0
    5d64:	00000000 	andeq	r0, r0, r0
    5d68:	f3000400 	vshl.u8	d0, d0, d0
    5d6c:	009f5101 	addseq	r5, pc, r1, lsl #2
    5d70:	00000000 	andeq	r0, r0, r0
    5d74:	01000000 	mrseq	r0, (UNDEF: 0)
    5d78:	00005100 	andeq	r5, r0, r0, lsl #2
    5d7c:	00000000 	andeq	r0, r0, r0
    5d80:	00010000 	andeq	r0, r1, r0
    5d84:	00000054 	andeq	r0, r0, r4, asr r0
    5d88:	00000000 	andeq	r0, r0, r0
    5d8c:	f3000400 	vshl.u8	d0, d0, d0
    5d90:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
    5da4:	01000000 	mrseq	r0, (UNDEF: 0)
    5da8:	00005500 	andeq	r5, r0, r0, lsl #10
    5dac:	00000000 	andeq	r0, r0, r0
    5db0:	00010000 	andeq	r0, r1, r0
    5db4:	00000055 	andeq	r0, r0, r5, asr r0
    5db8:	00000000 	andeq	r0, r0, r0
    5dbc:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    5dc8:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    5dd4:	9f310002 	svcls	0x00310002
	...
    5de8:	007d0002 	rsbseq	r0, sp, r2
	...
    5df4:	107d0002 	rsbsne	r0, sp, r2
	...
    5e0c:	00500001 	subseq	r0, r0, r1
    5e10:	00000000 	andeq	r0, r0, r0
    5e14:	01000000 	mrseq	r0, (UNDEF: 0)
    5e18:	00005500 	andeq	r5, r0, r0, lsl #10
	...
    5e30:	00010000 	andeq	r0, r1, r0
    5e34:	00000051 	andeq	r0, r0, r1, asr r0
    5e38:	00000000 	andeq	r0, r0, r0
    5e3c:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    5e48:	70740003 	rsbsvc	r0, r4, r3
    5e4c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    5e50:	00000000 	andeq	r0, r0, r0
    5e54:	f3000400 	vshl.u8	d0, d0, d0
    5e58:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
    5e6c:	01000000 	mrseq	r0, (UNDEF: 0)
    5e70:	00005200 	andeq	r5, r0, r0, lsl #4
    5e74:	00000000 	andeq	r0, r0, r0
    5e78:	00010000 	andeq	r0, r1, r0
    5e7c:	00000056 	andeq	r0, r0, r6, asr r0
    5e80:	00000000 	andeq	r0, r0, r0
    5e84:	00000800 	andeq	r0, r0, r0, lsl #16
	...
    5e90:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    5e9c:	00550001 	subseq	r0, r5, r1
	...
    5eb0:	01000000 	mrseq	r0, (UNDEF: 0)
    5eb4:	00005300 	andeq	r5, r0, r0, lsl #6
    5eb8:	00000000 	andeq	r0, r0, r0
    5ebc:	00010000 	andeq	r0, r1, r0
    5ec0:	00000053 	andeq	r0, r0, r3, asr r0
	...
    5ed4:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    5ee0:	00500001 	subseq	r0, r0, r1
	...
    5ef4:	01000000 	mrseq	r0, (UNDEF: 0)
    5ef8:	00005300 	andeq	r5, r0, r0, lsl #6
    5efc:	00000000 	andeq	r0, r0, r0
    5f00:	00010000 	andeq	r0, r1, r0
    5f04:	00000053 	andeq	r0, r0, r3, asr r0
	...
    5f14:	01000000 	mrseq	r0, (UNDEF: 0)
    5f18:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    5f2c:	00520001 	subseq	r0, r2, r1
	...
    5f3c:	02000000 	andeq	r0, r0, #0
    5f40:	00007d00 	andeq	r7, r0, r0, lsl #26
    5f44:	00000000 	andeq	r0, r0, r0
    5f48:	02000000 	andeq	r0, r0, #0
    5f4c:	00187d00 	andseq	r7, r8, r0, lsl #26
	...
    5f60:	01000000 	mrseq	r0, (UNDEF: 0)
    5f64:	00005000 	andeq	r5, r0, r0
    5f68:	00000000 	andeq	r0, r0, r0
    5f6c:	00010000 	andeq	r0, r1, r0
    5f70:	00000056 	andeq	r0, r0, r6, asr r0
	...
    5fa0:	01000000 	mrseq	r0, (UNDEF: 0)
    5fa4:	00005100 	andeq	r5, r0, r0, lsl #2
    5fa8:	00000000 	andeq	r0, r0, r0
    5fac:	00010000 	andeq	r0, r1, r0
    5fb0:	00000054 	andeq	r0, r0, r4, asr r0
    5fb4:	00000000 	andeq	r0, r0, r0
    5fb8:	74000300 	strvc	r0, [r0], #-768	; 0xfffffd00
    5fbc:	00009f70 	andeq	r9, r0, r0, ror pc
    5fc0:	00000000 	andeq	r0, r0, r0
    5fc4:	00040000 	andeq	r0, r4, r0
    5fc8:	9f5101f3 	svcls	0x005101f3
	...
    5fd4:	00540001 	subseq	r0, r4, r1
    5fd8:	00000000 	andeq	r0, r0, r0
    5fdc:	03000000 	movweq	r0, #0
    5fe0:	9f707400 	svcls	0x00707400
	...
    5fec:	01f30004 	mvnseq	r0, r4
    5ff0:	00009f51 	andeq	r9, r0, r1, asr pc
    5ff4:	00000000 	andeq	r0, r0, r0
    5ff8:	00010000 	andeq	r0, r1, r0
    5ffc:	00000054 	andeq	r0, r0, r4, asr r0
    6000:	00000000 	andeq	r0, r0, r0
    6004:	74000300 	strvc	r0, [r0], #-768	; 0xfffffd00
    6008:	00009f70 	andeq	r9, r0, r0, ror pc
    600c:	00000000 	andeq	r0, r0, r0
    6010:	00040000 	andeq	r0, r4, r0
    6014:	9f5101f3 	svcls	0x005101f3
	...
    6020:	00540001 	subseq	r0, r4, r1
    6024:	00000000 	andeq	r0, r0, r0
    6028:	03000000 	movweq	r0, #0
    602c:	9f707400 	svcls	0x00707400
	...
    6038:	01f30004 	mvnseq	r0, r4
    603c:	00009f51 	andeq	r9, r0, r1, asr pc
    6040:	00000000 	andeq	r0, r0, r0
    6044:	00010000 	andeq	r0, r1, r0
    6048:	00000054 	andeq	r0, r0, r4, asr r0
    604c:	00000000 	andeq	r0, r0, r0
    6050:	f3000400 	vshl.u8	d0, d0, d0
    6054:	009f5101 	addseq	r5, pc, r1, lsl #2
    6058:	00000000 	andeq	r0, r0, r0
    605c:	01000000 	mrseq	r0, (UNDEF: 0)
    6060:	00005400 	andeq	r5, r0, r0, lsl #8
    6064:	00000000 	andeq	r0, r0, r0
    6068:	00040000 	andeq	r0, r4, r0
    606c:	9f5101f3 	svcls	0x005101f3
	...
    6088:	00010000 	andeq	r0, r1, r0
    608c:	00000052 	andeq	r0, r0, r2, asr r0
    6090:	00000000 	andeq	r0, r0, r0
    6094:	57000100 	strpl	r0, [r0, -r0, lsl #2]
	...
    60a0:	01f30004 	mvnseq	r0, r4
    60a4:	00009f52 	andeq	r9, r0, r2, asr pc
    60a8:	00000000 	andeq	r0, r0, r0
    60ac:	00010000 	andeq	r0, r1, r0
    60b0:	00000057 	andeq	r0, r0, r7, asr r0
    60b4:	00000000 	andeq	r0, r0, r0
    60b8:	f3000400 	vshl.u8	d0, d0, d0
    60bc:	009f5201 	addseq	r5, pc, r1, lsl #4
	...
    60d0:	01000000 	mrseq	r0, (UNDEF: 0)
    60d4:	00005300 	andeq	r5, r0, r0, lsl #6
    60d8:	00000000 	andeq	r0, r0, r0
    60dc:	00040000 	andeq	r0, r4, r0
    60e0:	9f5301f3 	svcls	0x005301f3
	...
    60f8:	00910002 	addseq	r0, r1, r2
	...
    6104:	00910002 	addseq	r0, r1, r2
	...
    611c:	04910002 	ldreq	r0, [r1], #2
	...
    6128:	04910002 	ldreq	r0, [r1], #2
	...
    6134:	00000009 	andeq	r0, r0, r9
	...
    6140:	00500001 	subseq	r0, r0, r1
    6144:	00000000 	andeq	r0, r0, r0
    6148:	01000000 	mrseq	r0, (UNDEF: 0)
    614c:	00005600 	andeq	r5, r0, r0, lsl #12
	...
    6160:	00010000 	andeq	r0, r1, r0
    6164:	0000005c 	andeq	r0, r0, ip, asr r0
    6168:	00000000 	andeq	r0, r0, r0
    616c:	5c000100 	stfpls	f0, [r0], {-0}
	...
    6178:	00000003 	andeq	r0, r0, r3
	...
    6188:	9f310002 	svcls	0x00310002
	...
    6194:	00540001 	subseq	r0, r4, r1
    6198:	00000000 	andeq	r0, r0, r0
    619c:	02000000 	andeq	r0, r0, #0
    61a0:	009f3100 	addseq	r3, pc, r0, lsl #2
    61a4:	00000000 	andeq	r0, r0, r0
    61a8:	01000000 	mrseq	r0, (UNDEF: 0)
    61ac:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    61c0:	00010000 	andeq	r0, r1, r0
    61c4:	00000050 	andeq	r0, r0, r0, asr r0
    61c8:	00000000 	andeq	r0, r0, r0
    61cc:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    61e4:	00530001 	subseq	r0, r3, r1
    61e8:	00000000 	andeq	r0, r0, r0
    61ec:	01000000 	mrseq	r0, (UNDEF: 0)
    61f0:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    6204:	00530001 	subseq	r0, r3, r1
	...
    6218:	52000100 	andpl	r0, r0, #0, 2
	...
    622c:	007d0002 	rsbseq	r0, sp, r2
	...
    6238:	187d0002 	ldmdane	sp!, {r1}^
	...
    6250:	00500001 	subseq	r0, r0, r1
    6254:	00000000 	andeq	r0, r0, r0
    6258:	01000000 	mrseq	r0, (UNDEF: 0)
    625c:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    6290:	00510001 	subseq	r0, r1, r1
    6294:	00000000 	andeq	r0, r0, r0
    6298:	01000000 	mrseq	r0, (UNDEF: 0)
    629c:	00005500 	andeq	r5, r0, r0, lsl #10
    62a0:	00000000 	andeq	r0, r0, r0
    62a4:	00030000 	andeq	r0, r3, r0
    62a8:	009f7075 	addseq	r7, pc, r5, ror r0	; <UNPREDICTABLE>
    62ac:	00000000 	andeq	r0, r0, r0
    62b0:	04000000 	streq	r0, [r0], #-0
    62b4:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    62b8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    62bc:	00000000 	andeq	r0, r0, r0
    62c0:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    62cc:	70750003 	rsbsvc	r0, r5, r3
    62d0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    62d4:	00000000 	andeq	r0, r0, r0
    62d8:	f3000400 	vshl.u8	d0, d0, d0
    62dc:	009f5101 	addseq	r5, pc, r1, lsl #2
    62e0:	00000000 	andeq	r0, r0, r0
    62e4:	01000000 	mrseq	r0, (UNDEF: 0)
    62e8:	00005500 	andeq	r5, r0, r0, lsl #10
    62ec:	00000000 	andeq	r0, r0, r0
    62f0:	00030000 	andeq	r0, r3, r0
    62f4:	009f7075 	addseq	r7, pc, r5, ror r0	; <UNPREDICTABLE>
    62f8:	00000000 	andeq	r0, r0, r0
    62fc:	04000000 	streq	r0, [r0], #-0
    6300:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    6304:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    6308:	00000000 	andeq	r0, r0, r0
    630c:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    6318:	70750003 	rsbsvc	r0, r5, r3
    631c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    6320:	00000000 	andeq	r0, r0, r0
    6324:	f3000400 	vshl.u8	d0, d0, d0
    6328:	009f5101 	addseq	r5, pc, r1, lsl #2
    632c:	00000000 	andeq	r0, r0, r0
    6330:	01000000 	mrseq	r0, (UNDEF: 0)
    6334:	00005500 	andeq	r5, r0, r0, lsl #10
    6338:	00000000 	andeq	r0, r0, r0
    633c:	00040000 	andeq	r0, r4, r0
    6340:	9f5101f3 	svcls	0x005101f3
	...
    634c:	00550001 	subseq	r0, r5, r1
    6350:	00000000 	andeq	r0, r0, r0
    6354:	04000000 	streq	r0, [r0], #-0
    6358:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    635c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    6374:	01000000 	mrseq	r0, (UNDEF: 0)
    6378:	00005200 	andeq	r5, r0, r0, lsl #4
    637c:	00000000 	andeq	r0, r0, r0
    6380:	00010000 	andeq	r0, r1, r0
    6384:	00000057 	andeq	r0, r0, r7, asr r0
    6388:	00000000 	andeq	r0, r0, r0
    638c:	f3000400 	vshl.u8	d0, d0, d0
    6390:	009f5201 	addseq	r5, pc, r1, lsl #4
    6394:	00000000 	andeq	r0, r0, r0
    6398:	01000000 	mrseq	r0, (UNDEF: 0)
    639c:	00005700 	andeq	r5, r0, r0, lsl #14
    63a0:	00000000 	andeq	r0, r0, r0
    63a4:	00040000 	andeq	r0, r4, r0
    63a8:	9f5201f3 	svcls	0x005201f3
	...
    63c0:	00530001 	subseq	r0, r3, r1
    63c4:	00000000 	andeq	r0, r0, r0
    63c8:	04000000 	streq	r0, [r0], #-0
    63cc:	5301f300 	movwpl	pc, #4864	; 0x1300	; <UNPREDICTABLE>
    63d0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    63e4:	91000200 	mrsls	r0, R8_usr
	...
    63f0:	91000200 	mrsls	r0, R8_usr
	...
    63fc:	00000700 	andeq	r0, r0, r0, lsl #14
	...
    6408:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    6414:	00540001 	subseq	r0, r4, r1
    6418:	00000000 	andeq	r0, r0, r0
    641c:	02000000 	andeq	r0, r0, #0
	...
    642c:	02000000 	andeq	r0, r0, #0
    6430:	009f3100 	addseq	r3, pc, r0, lsl #2
    6434:	00000000 	andeq	r0, r0, r0
    6438:	01000000 	mrseq	r0, (UNDEF: 0)
    643c:	00005500 	andeq	r5, r0, r0, lsl #10
    6440:	00000000 	andeq	r0, r0, r0
    6444:	00020000 	andeq	r0, r2, r0
    6448:	00009f31 	andeq	r9, r0, r1, lsr pc
    644c:	00000000 	andeq	r0, r0, r0
    6450:	00010000 	andeq	r0, r1, r0
    6454:	00000055 	andeq	r0, r0, r5, asr r0
	...
    6468:	01000000 	mrseq	r0, (UNDEF: 0)
    646c:	00005000 	andeq	r5, r0, r0
    6470:	00000000 	andeq	r0, r0, r0
    6474:	00010000 	andeq	r0, r1, r0
    6478:	00000050 	andeq	r0, r0, r0, asr r0
    647c:	00000000 	andeq	r0, r0, r0
    6480:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    6498:	00530001 	subseq	r0, r3, r1
    649c:	00000000 	andeq	r0, r0, r0
    64a0:	01000000 	mrseq	r0, (UNDEF: 0)
    64a4:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    64b8:	00530001 	subseq	r0, r3, r1
	...
    64c8:	02000000 	andeq	r0, r0, #0
    64cc:	00007d00 	andeq	r7, r0, r0, lsl #26
    64d0:	00000000 	andeq	r0, r0, r0
    64d4:	02000000 	andeq	r0, r0, #0
    64d8:	00187d00 	andseq	r7, r8, r0, lsl #26
	...
    64f0:	01000000 	mrseq	r0, (UNDEF: 0)
    64f4:	00005000 	andeq	r5, r0, r0
    64f8:	00000000 	andeq	r0, r0, r0
    64fc:	00010000 	andeq	r0, r1, r0
    6500:	00000054 	andeq	r0, r0, r4, asr r0
    6504:	00000000 	andeq	r0, r0, r0
    6508:	f3000400 	vshl.u8	d0, d0, d0
    650c:	009f5001 	addseq	r5, pc, r1
    6510:	00000000 	andeq	r0, r0, r0
    6514:	01000000 	mrseq	r0, (UNDEF: 0)
    6518:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    652c:	00010000 	andeq	r0, r1, r0
    6530:	00000051 	andeq	r0, r0, r1, asr r0
    6534:	00000000 	andeq	r0, r0, r0
    6538:	58000100 	stmdapl	r0, {r8}
	...
    6554:	00010000 	andeq	r0, r1, r0
    6558:	00000052 	andeq	r0, r0, r2, asr r0
    655c:	00000000 	andeq	r0, r0, r0
    6560:	56000100 	strpl	r0, [r0], -r0, lsl #2
	...
    656c:	01f30004 	mvnseq	r0, r4
    6570:	00009f52 	andeq	r9, r0, r2, asr pc
    6574:	00000000 	andeq	r0, r0, r0
    6578:	00010000 	andeq	r0, r1, r0
    657c:	00000056 	andeq	r0, r0, r6, asr r0
    6580:	00000000 	andeq	r0, r0, r0
    6584:	f3000400 	vshl.u8	d0, d0, d0
    6588:	009f5201 	addseq	r5, pc, r1, lsl #4
	...
    65a4:	53000100 	movwpl	r0, #256	; 0x100
	...
    65b0:	00550001 	subseq	r0, r5, r1
    65b4:	00000000 	andeq	r0, r0, r0
    65b8:	04000000 	streq	r0, [r0], #-0
    65bc:	5301f300 	movwpl	pc, #4864	; 0x1300	; <UNPREDICTABLE>
    65c0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    65c4:	00000000 	andeq	r0, r0, r0
    65c8:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    65d4:	01f30004 	mvnseq	r0, r4
    65d8:	00009f53 	andeq	r9, r0, r3, asr pc
	...
    65ec:	00020000 	andeq	r0, r2, r0
    65f0:	00000091 	muleq	r0, r1, r0
    65f4:	00000000 	andeq	r0, r0, r0
    65f8:	00020000 	andeq	r0, r2, r0
    65fc:	00000091 	muleq	r0, r1, r0
	...
    6608:	00000001 	andeq	r0, r0, r1
    660c:	00000000 	andeq	r0, r0, r0
    6610:	00010000 	andeq	r0, r1, r0
    6614:	00000055 	andeq	r0, r0, r5, asr r0
    6618:	00000000 	andeq	r0, r0, r0
    661c:	31000200 	mrscc	r0, R8_usr
    6620:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    6634:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    6640:	00500001 	subseq	r0, r0, r1
    6644:	00000000 	andeq	r0, r0, r0
    6648:	01000000 	mrseq	r0, (UNDEF: 0)
    664c:	01010001 	tsteq	r1, r1
	...
    6658:	30000200 	andcc	r0, r0, r0, lsl #4
    665c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    6660:	00000000 	andeq	r0, r0, r0
    6664:	30000200 	andcc	r0, r0, r0, lsl #4
    6668:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    666c:	00000000 	andeq	r0, r0, r0
    6670:	31000200 	mrscc	r0, R8_usr
    6674:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    6684:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    6690:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    6694:	00000010 	andeq	r0, r0, r0, lsl r0
	...
    66ac:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    66b8:	00540001 	subseq	r0, r4, r1
    66bc:	00000000 	andeq	r0, r0, r0
    66c0:	04000000 	streq	r0, [r0], #-0
    66c4:	5001f300 	andpl	pc, r1, r0, lsl #6
    66c8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    66cc:	00000000 	andeq	r0, r0, r0
    66d0:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    66e8:	00510001 	subseq	r0, r1, r1
    66ec:	00000000 	andeq	r0, r0, r0
    66f0:	01000000 	mrseq	r0, (UNDEF: 0)
    66f4:	00005600 	andeq	r5, r0, r0, lsl #12
	...
    6700:	00010100 	andeq	r0, r1, r0, lsl #2
	...
    6714:	00520001 	subseq	r0, r2, r1
    6718:	00000000 	andeq	r0, r0, r0
    671c:	01000000 	mrseq	r0, (UNDEF: 0)
    6720:	00005500 	andeq	r5, r0, r0, lsl #10
    6724:	00000000 	andeq	r0, r0, r0
    6728:	00040000 	andeq	r0, r4, r0
    672c:	9f5201f3 	svcls	0x005201f3
	...
    6738:	00550001 	subseq	r0, r5, r1
    673c:	00000000 	andeq	r0, r0, r0
    6740:	04000000 	streq	r0, [r0], #-0
    6744:	5201f300 	andpl	pc, r1, #0, 6
    6748:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    674c:	00000000 	andeq	r0, r0, r0
    6750:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    675c:	01f30004 	mvnseq	r0, r4
    6760:	00009f52 	andeq	r9, r0, r2, asr pc
	...
    6774:	00010000 	andeq	r0, r1, r0
    6778:	00000055 	andeq	r0, r0, r5, asr r0
    677c:	00000000 	andeq	r0, r0, r0
    6780:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    6798:	00500001 	subseq	r0, r0, r1
    679c:	00000000 	andeq	r0, r0, r0
    67a0:	01000000 	mrseq	r0, (UNDEF: 0)
    67a4:	00005000 	andeq	r5, r0, r0
    67a8:	00000000 	andeq	r0, r0, r0
    67ac:	01020000 	mrseq	r0, (UNDEF: 2)
    67b0:	00010100 	andeq	r0, r1, r0, lsl #2
	...
    67bc:	9f300002 	svcls	0x00300002
	...
    67c8:	9f300002 	svcls	0x00300002
	...
    67d4:	9f310002 	svcls	0x00310002
	...
    67e8:	00010000 	andeq	r0, r1, r0
    67ec:	00000050 	andeq	r0, r0, r0, asr r0
	...
    67fc:	01000000 	mrseq	r0, (UNDEF: 0)
    6800:	00005000 	andeq	r5, r0, r0
	...
    6810:	00020000 	andeq	r0, r2, r0
    6814:	0000007d 	andeq	r0, r0, sp, ror r0
    6818:	00000000 	andeq	r0, r0, r0
    681c:	00020000 	andeq	r0, r2, r0
    6820:	0000107d 	andeq	r1, r0, sp, ror r0
    6824:	00000000 	andeq	r0, r0, r0
    6828:	00020000 	andeq	r0, r2, r0
    682c:	0000007d 	andeq	r0, r0, sp, ror r0
	...
    6848:	00500001 	subseq	r0, r0, r1
    684c:	00000000 	andeq	r0, r0, r0
    6850:	01000000 	mrseq	r0, (UNDEF: 0)
    6854:	00005400 	andeq	r5, r0, r0, lsl #8
    6858:	00000000 	andeq	r0, r0, r0
    685c:	00010000 	andeq	r0, r1, r0
    6860:	00000050 	andeq	r0, r0, r0, asr r0
    6864:	00000000 	andeq	r0, r0, r0
    6868:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    6874:	00500001 	subseq	r0, r0, r1
	...
    688c:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    6898:	01f30004 	mvnseq	r0, r4
    689c:	00009f51 	andeq	r9, r0, r1, asr pc
    68a0:	00000000 	andeq	r0, r0, r0
    68a4:	00010000 	andeq	r0, r1, r0
    68a8:	00000051 	andeq	r0, r0, r1, asr r0
    68ac:	00000000 	andeq	r0, r0, r0
    68b0:	00000200 	andeq	r0, r0, r0, lsl #4
	...
    68c0:	01000000 	mrseq	r0, (UNDEF: 0)
    68c4:	00005000 	andeq	r5, r0, r0
    68c8:	00000000 	andeq	r0, r0, r0
    68cc:	00010000 	andeq	r0, r1, r0
    68d0:	00000054 	andeq	r0, r0, r4, asr r0
    68d4:	00000000 	andeq	r0, r0, r0
    68d8:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    68e4:	00540001 	subseq	r0, r4, r1
    68e8:	00000000 	andeq	r0, r0, r0
    68ec:	01000000 	mrseq	r0, (UNDEF: 0)
    68f0:	00005000 	andeq	r5, r0, r0
    68f4:	00000000 	andeq	r0, r0, r0
    68f8:	00030000 	andeq	r0, r3, r0
	...
    6904:	00520001 	subseq	r0, r2, r1
	...
    691c:	01000000 	mrseq	r0, (UNDEF: 0)
    6920:	00005300 	andeq	r5, r0, r0, lsl #6
    6924:	00000000 	andeq	r0, r0, r0
    6928:	00010000 	andeq	r0, r1, r0
    692c:	00000053 	andeq	r0, r0, r3, asr r0
    6930:	00000000 	andeq	r0, r0, r0
    6934:	70000200 	andvc	r0, r0, r0, lsl #4
    6938:	0000002c 	andeq	r0, r0, ip, lsr #32
    693c:	00000000 	andeq	r0, r0, r0
    6940:	74000200 	strvc	r0, [r0], #-512	; 0xfffffe00
    6944:	0000002c 	andeq	r0, r0, ip, lsr #32
	...
    6954:	01000000 	mrseq	r0, (UNDEF: 0)
    6958:	00005300 	andeq	r5, r0, r0, lsl #6
    695c:	00000000 	andeq	r0, r0, r0
    6960:	2e500000 	cdpcs	0, 5, cr0, cr0, cr0, {0}
    6964:	2e561000 	cdpcs	0, 5, cr1, cr6, cr0, {0}
    6968:	00021000 	andeq	r1, r2, r0
    696c:	2e56007d 	mrccs	0, 2, r0, cr6, cr13, {3}
    6970:	2ebe1000 	cdpcs	0, 11, cr1, cr14, cr0, {0}
    6974:	00021000 	andeq	r1, r2, r0
    6978:	2ebe107d 	mrccs	0, 5, r1, cr14, cr13, {3}
    697c:	2ec21000 	cdpcs	0, 12, cr1, cr2, cr0, {0}
    6980:	00021000 	andeq	r1, r2, r0
    6984:	2ec2007d 	mcrcs	0, 6, r0, cr2, cr13, {3}
    6988:	2ed01000 	cdpcs	0, 13, cr1, cr0, cr0, {0}
    698c:	00021000 	andeq	r1, r2, r0
    6990:	0000107d 	andeq	r1, r0, sp, ror r0
	...
    69a8:	2e500000 	cdpcs	0, 5, cr0, cr0, cr0, {0}
    69ac:	2e6a1000 	cdpcs	0, 6, cr1, cr10, cr0, {0}
    69b0:	00011000 	andeq	r1, r1, r0
    69b4:	002e6a50 	eoreq	r6, lr, r0, asr sl
    69b8:	002e6c10 	eoreq	r6, lr, r0, lsl ip
    69bc:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    69c0:	10002e6c 	andne	r2, r0, ip, ror #28
    69c4:	10002e70 	andne	r2, r0, r0, ror lr
    69c8:	70500001 	subsvc	r0, r0, r1
    69cc:	be10002e 	cdplt	0, 1, cr0, cr0, cr14, {1}
    69d0:	0110002e 	tsteq	r0, lr, lsr #32
    69d4:	2ebe5400 	cdpcs	4, 11, cr5, cr14, cr0, {0}
    69d8:	2ec01000 	cdpcs	0, 12, cr1, cr0, cr0, {0}
    69dc:	00011000 	andeq	r1, r1, r0
    69e0:	002ec050 	eoreq	ip, lr, r0, asr r0
    69e4:	002ec210 	eoreq	ip, lr, r0, lsl r2
    69e8:	f3000410 	vqshl.u8	d0, d0, d0
    69ec:	c29f5001 	addsgt	r5, pc, #1
    69f0:	c410002e 	ldrgt	r0, [r0], #-46	; 0xffffffd2
    69f4:	0110002e 	tsteq	r0, lr, lsr #32
    69f8:	2ec45000 	cdpcs	0, 12, cr5, cr4, cr0, {0}
    69fc:	2ed01000 	cdpcs	0, 13, cr1, cr0, cr0, {0}
    6a00:	00011000 	andeq	r1, r1, r0
    6a04:	00000054 	andeq	r0, r0, r4, asr r0
    6a08:	00000000 	andeq	r0, r0, r0
    6a0c:	00000200 	andeq	r0, r0, r0, lsl #4
	...
    6a1c:	002e5000 	eoreq	r5, lr, r0
    6a20:	002e6a10 	eoreq	r6, lr, r0, lsl sl
    6a24:	50000110 	andpl	r0, r0, r0, lsl r1
    6a28:	10002e6a 	andne	r2, r0, sl, ror #28
    6a2c:	10002e6c 	andne	r2, r0, ip, ror #28
    6a30:	6c540001 	mrrcvs	0, 0, r0, r4, cr1
    6a34:	7010002e 	andsvc	r0, r0, lr, lsr #32
    6a38:	0110002e 	tsteq	r0, lr, lsr #32
    6a3c:	2e705000 	cdpcs	0, 7, cr5, cr0, cr0, {0}
    6a40:	2ebe1000 	cdpcs	0, 11, cr1, cr14, cr0, {0}
    6a44:	00011000 	andeq	r1, r1, r0
    6a48:	002ebe54 	eoreq	fp, lr, r4, asr lr
    6a4c:	002ec010 	eoreq	ip, lr, r0, lsl r0
    6a50:	50000110 	andpl	r0, r0, r0, lsl r1
    6a54:	10002ec0 	andne	r2, r0, r0, asr #29
    6a58:	10002ec2 	andne	r2, r0, r2, asr #29
    6a5c:	01f30004 	mvnseq	r0, r4
    6a60:	2ec29f50 	mcrcs	15, 6, r9, cr2, cr0, {2}
    6a64:	2ec41000 	cdpcs	0, 12, cr1, cr4, cr0, {0}
    6a68:	00011000 	andeq	r1, r1, r0
    6a6c:	002ec450 	eoreq	ip, lr, r0, asr r4
    6a70:	002ed010 	eoreq	sp, lr, r0, lsl r0
    6a74:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
	...
    6a80:	04000303 	streq	r0, [r0], #-771	; 0xfffffcfd
    6a84:	00000004 	andeq	r0, r0, r4
    6a88:	10002e50 	andne	r2, r0, r0, asr lr
    6a8c:	10002e6a 	andne	r2, r0, sl, ror #28
    6a90:	9f300002 	svcls	0x00300002
    6a94:	10002e6c 	andne	r2, r0, ip, ror #28
    6a98:	10002eba 			; <UNDEFINED> instruction: 0x10002eba
    6a9c:	9f300002 	svcls	0x00300002
    6aa0:	10002eba 			; <UNDEFINED> instruction: 0x10002eba
    6aa4:	10002ebe 			; <UNDEFINED> instruction: 0x10002ebe
    6aa8:	9f310002 	svcls	0x00310002
    6aac:	10002ebe 			; <UNDEFINED> instruction: 0x10002ebe
    6ab0:	10002ed0 	ldrdne	r2, [r0], -r0
    6ab4:	9f300002 	svcls	0x00300002
	...
    6ac0:	2e960000 	cdpcs	0, 9, cr0, cr6, cr0, {0}
    6ac4:	2ea21000 	cdpcs	0, 10, cr1, cr2, cr0, {0}
    6ac8:	00011000 	andeq	r1, r1, r0
    6acc:	00000053 	andeq	r0, r0, r3, asr r0
	...
    6adc:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    6ae8:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    6aec:	00000010 	andeq	r0, r0, r0, lsl r0
    6af0:	00000000 	andeq	r0, r0, r0
    6af4:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    6b00:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    6b04:	00000010 	andeq	r0, r0, r0, lsl r0
	...
    6b28:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    6b34:	00540001 	subseq	r0, r4, r1
    6b38:	00000000 	andeq	r0, r0, r0
    6b3c:	01000000 	mrseq	r0, (UNDEF: 0)
    6b40:	00005000 	andeq	r5, r0, r0
    6b44:	00000000 	andeq	r0, r0, r0
    6b48:	00010000 	andeq	r0, r1, r0
    6b4c:	00000054 	andeq	r0, r0, r4, asr r0
    6b50:	00000000 	andeq	r0, r0, r0
    6b54:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    6b60:	00540001 	subseq	r0, r4, r1
    6b64:	00000000 	andeq	r0, r0, r0
    6b68:	01000000 	mrseq	r0, (UNDEF: 0)
    6b6c:	00005000 	andeq	r5, r0, r0
    6b70:	00000000 	andeq	r0, r0, r0
    6b74:	00040000 	andeq	r0, r4, r0
    6b78:	9f5001f3 	svcls	0x005001f3
	...
    6b84:	00500001 	subseq	r0, r0, r1
    6b88:	00000000 	andeq	r0, r0, r0
    6b8c:	01000000 	mrseq	r0, (UNDEF: 0)
    6b90:	00005400 	andeq	r5, r0, r0, lsl #8
    6b94:	00000000 	andeq	r0, r0, r0
    6b98:	00020000 	andeq	r0, r2, r0
	...
    6bb4:	00010000 	andeq	r0, r1, r0
    6bb8:	00000050 	andeq	r0, r0, r0, asr r0
    6bbc:	00000000 	andeq	r0, r0, r0
    6bc0:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    6bcc:	00500001 	subseq	r0, r0, r1
    6bd0:	00000000 	andeq	r0, r0, r0
    6bd4:	01000000 	mrseq	r0, (UNDEF: 0)
    6bd8:	00005400 	andeq	r5, r0, r0, lsl #8
    6bdc:	00000000 	andeq	r0, r0, r0
    6be0:	00010000 	andeq	r0, r1, r0
    6be4:	00000050 	andeq	r0, r0, r0, asr r0
    6be8:	00000000 	andeq	r0, r0, r0
    6bec:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    6bf8:	00500001 	subseq	r0, r0, r1
    6bfc:	00000000 	andeq	r0, r0, r0
    6c00:	04000000 	streq	r0, [r0], #-0
    6c04:	5001f300 	andpl	pc, r1, r0, lsl #6
    6c08:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    6c0c:	00000000 	andeq	r0, r0, r0
    6c10:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    6c1c:	00540001 	subseq	r0, r4, r1
    6c20:	00000000 	andeq	r0, r0, r0
    6c24:	03000000 	movweq	r0, #0
	...
    6c34:	30000200 	andcc	r0, r0, r0, lsl #4
    6c38:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    6c3c:	00000000 	andeq	r0, r0, r0
    6c40:	30000200 	andcc	r0, r0, r0, lsl #4
    6c44:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    6c48:	00000000 	andeq	r0, r0, r0
    6c4c:	31000200 	mrscc	r0, R8_usr
    6c50:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    6c60:	01000000 	mrseq	r0, (UNDEF: 0)
    6c64:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    6c78:	9f300002 	svcls	0x00300002
	...
    6c94:	00500001 	subseq	r0, r0, r1
    6c98:	00000000 	andeq	r0, r0, r0
    6c9c:	04000000 	streq	r0, [r0], #-0
    6ca0:	5001f300 	andpl	pc, r1, r0, lsl #6
    6ca4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    6ca8:	00000000 	andeq	r0, r0, r0
    6cac:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    6cb8:	01f30004 	mvnseq	r0, r4
    6cbc:	00009f50 	andeq	r9, r0, r0, asr pc
    6cc0:	00000000 	andeq	r0, r0, r0
    6cc4:	00020000 	andeq	r0, r2, r0
	...
    6cd4:	9f300002 	svcls	0x00300002
	...
    6ce0:	00500001 	subseq	r0, r0, r1
    6ce4:	00000000 	andeq	r0, r0, r0
    6ce8:	02000000 	andeq	r0, r0, #0
    6cec:	009f3000 	addseq	r3, pc, r0
	...
    6d00:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    6d0c:	100026f6 	strdne	r2, [r0], -r6
    6d10:	100026f8 	strdne	r2, [r0], -r8
    6d14:	007d0002 	rsbseq	r0, sp, r2
    6d18:	100026f8 	strdne	r2, [r0], -r8
    6d1c:	1000271a 	andne	r2, r0, sl, lsl r7
    6d20:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    6d38:	100026f6 	strdne	r2, [r0], -r6
    6d3c:	10002704 	andne	r2, r0, r4, lsl #14
    6d40:	04500001 	ldrbeq	r0, [r0], #-1
    6d44:	06100027 	ldreq	r0, [r0], -r7, lsr #32
    6d48:	01100027 	tsteq	r0, r7, lsr #32
    6d4c:	27065400 	strcs	r5, [r6, -r0, lsl #8]
    6d50:	27081000 	strcs	r1, [r8, -r0]
    6d54:	00011000 	andeq	r1, r1, r0
    6d58:	00270850 	eoreq	r0, r7, r0, asr r8
    6d5c:	00271410 	eoreq	r1, r7, r0, lsl r4
    6d60:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    6d64:	10002714 	andne	r2, r0, r4, lsl r7
    6d68:	10002717 	andne	r2, r0, r7, lsl r7
    6d6c:	17500001 	ldrbne	r0, [r0, -r1]
    6d70:	1a100027 	bne	406e14 <__RAM_SIZE+0x306e14>
    6d74:	01100027 	tsteq	r0, r7, lsr #32
    6d78:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    6d88:	00020000 	andeq	r0, r2, r0
    6d8c:	0000007d 	andeq	r0, r0, sp, ror r0
    6d90:	00000000 	andeq	r0, r0, r0
    6d94:	00020000 	andeq	r0, r2, r0
    6d98:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    6dac:	00010000 	andeq	r0, r1, r0
    6db0:	00000050 	andeq	r0, r0, r0, asr r0
    6db4:	00000000 	andeq	r0, r0, r0
    6db8:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    6dcc:	00010000 	andeq	r0, r1, r0
    6dd0:	00000053 	andeq	r0, r0, r3, asr r0
    6dd4:	00000000 	andeq	r0, r0, r0
    6dd8:	00000100 	andeq	r0, r0, r0, lsl #2
    6ddc:	00000000 	andeq	r0, r0, r0
    6de0:	02000000 	andeq	r0, r0, #0
    6de4:	00307300 	eorseq	r7, r0, r0, lsl #6
	...
    6df8:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    6e10:	00500001 	subseq	r0, r0, r1
    6e14:	00000000 	andeq	r0, r0, r0
    6e18:	01000000 	mrseq	r0, (UNDEF: 0)
    6e1c:	00005000 	andeq	r5, r0, r0
    6e20:	00000000 	andeq	r0, r0, r0
    6e24:	00020000 	andeq	r0, r2, r0
    6e28:	00010100 	andeq	r0, r1, r0, lsl #2
	...
    6e34:	00020000 	andeq	r0, r2, r0
    6e38:	00009f30 	andeq	r9, r0, r0, lsr pc
    6e3c:	00000000 	andeq	r0, r0, r0
    6e40:	00010000 	andeq	r0, r1, r0
    6e44:	00000053 	andeq	r0, r0, r3, asr r0
    6e48:	00000000 	andeq	r0, r0, r0
    6e4c:	73000500 	movwvc	r0, #1280	; 0x500
    6e50:	9f253200 	svcls	0x00253200
	...
    6e5c:	00500001 	subseq	r0, r0, r1
    6e60:	00000000 	andeq	r0, r0, r0
    6e64:	1c000000 	stcne	0, cr0, [r0], {-0}
    6e68:	24100027 	ldrcs	r0, [r0], #-39	; 0xffffffd9
    6e6c:	02100027 	andseq	r0, r0, #39	; 0x27
    6e70:	24007d00 	strcs	r7, [r0], #-3328	; 0xfffff300
    6e74:	58100027 	ldmdapl	r0, {r0, r1, r2, r5}
    6e78:	02100027 	andseq	r0, r0, #39	; 0x27
    6e7c:	58087d00 	stmdapl	r8, {r8, sl, fp, ip, sp, lr}
    6e80:	68100027 	ldmdavs	r0, {r0, r1, r2, r5}
    6e84:	02100027 	andseq	r0, r0, #39	; 0x27
    6e88:	00007d00 	andeq	r7, r0, r0, lsl #26
	...
    6e94:	00272e00 	eoreq	r2, r7, r0, lsl #28
    6e98:	00275810 	eoreq	r5, r7, r0, lsl r8
    6e9c:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
	...
    6ea8:	10002570 	andne	r2, r0, r0, ror r5
    6eac:	10002572 	andne	r2, r0, r2, ror r5
    6eb0:	007d0002 	rsbseq	r0, sp, r2
    6eb4:	10002572 	andne	r2, r0, r2, ror r5
    6eb8:	100025d8 	ldrdne	r2, [r0], -r8
    6ebc:	107d0002 	rsbsne	r0, sp, r2
	...
    6ec8:	00000002 	andeq	r0, r0, r2
    6ecc:	10002572 	andne	r2, r0, r2, ror r5
    6ed0:	10002576 	andne	r2, r0, r6, ror r5
    6ed4:	9f300002 	svcls	0x00300002
    6ed8:	10002576 	andne	r2, r0, r6, ror r5
    6edc:	10002594 	mulne	r0, r4, r5
    6ee0:	00540001 	subseq	r0, r4, r1
    6ee4:	00000000 	andeq	r0, r0, r0
    6ee8:	03000000 	movweq	r0, #0
    6eec:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    6ef0:	3a10002e 	bcc	406fb0 <__RAM_SIZE+0x306fb0>
    6ef4:	0210002e 	andseq	r0, r0, #46	; 0x2e
    6ef8:	3a9f3100 	bcc	fe7d3300 <__StackTop+0xc66d3300>
    6efc:	5010002e 	andspl	r0, r0, lr, lsr #32
    6f00:	0110002e 	tsteq	r0, lr, lsr #32
    6f04:	00005000 	andeq	r5, r0, r0
    6f08:	00000000 	andeq	r0, r0, r0
    6f0c:	2b700000 	blcs	1c06f14 <__RAM_SIZE+0x1b06f14>
    6f10:	2b721000 	blcs	1c8af18 <__RAM_SIZE+0x1b8af18>
    6f14:	00021000 	andeq	r1, r2, r0
    6f18:	2b72007d 	blcs	1c87114 <__RAM_SIZE+0x1b87114>
    6f1c:	2ba81000 	blcs	fea0af24 <__StackTop+0xc690af24>
    6f20:	00021000 	andeq	r1, r2, r0
    6f24:	0000087d 	andeq	r0, r0, sp, ror r8
    6f28:	00000000 	andeq	r0, r0, r0
    6f2c:	00010000 	andeq	r0, r1, r0
    6f30:	2b700000 	blcs	1c06f38 <__RAM_SIZE+0x1b06f38>
    6f34:	2b741000 	blcs	1d0af3c <__RAM_SIZE+0x1c0af3c>
    6f38:	00011000 	andeq	r1, r1, r0
    6f3c:	002b7450 	eoreq	r7, fp, r0, asr r4
    6f40:	002ba810 	eoreq	sl, fp, r0, lsl r8
    6f44:	f3000410 	vqshl.u8	d0, d0, d0
    6f48:	009f5001 	addseq	r5, pc, r1
	...
    6f58:	002b7800 	eoreq	r7, fp, r0, lsl #16
    6f5c:	002b7c10 	eoreq	r7, fp, r0, lsl ip
    6f60:	50000110 	andpl	r0, r0, r0, lsl r1
    6f64:	10002b8e 	andne	r2, r0, lr, lsl #23
    6f68:	10002b91 	mulne	r0, r1, fp
    6f6c:	96500001 	ldrbls	r0, [r0], -r1
    6f70:	9d10002b 	ldcls	0, cr0, [r0, #-172]	; 0xffffff54
    6f74:	0110002b 	tsteq	r0, fp, lsr #32
    6f78:	00005000 	andeq	r5, r0, r0
    6f7c:	00000000 	andeq	r0, r0, r0
    6f80:	2d800000 	stccs	0, cr0, [r0]
    6f84:	2d821000 	stccs	0, cr1, [r2]
    6f88:	00021000 	andeq	r1, r2, r0
    6f8c:	2d82007d 	stccs	0, cr0, [r2, #500]	; 0x1f4
    6f90:	2dfc1000 	ldclcs	0, cr1, [ip]
    6f94:	00021000 	andeq	r1, r2, r0
    6f98:	0000187d 	andeq	r1, r0, sp, ror r8
	...
    6fb8:	10002d80 	andne	r2, r0, r0, lsl #27
    6fbc:	10002d89 	andne	r2, r0, r9, lsl #27
    6fc0:	89500001 	ldmdbhi	r0, {r0}^
    6fc4:	a810002d 	ldmdage	r0, {r0, r2, r3, r5}
    6fc8:	0110002d 	tsteq	r0, sp, lsr #32
    6fcc:	2da85400 	cfstrscs	mvf5, [r8]
    6fd0:	2db01000 	ldccs	0, cr1, [r0]
    6fd4:	00041000 	andeq	r1, r4, r0
    6fd8:	9f5001f3 	svcls	0x005001f3
    6fdc:	10002db0 			; <UNDEFINED> instruction: 0x10002db0
    6fe0:	10002dcc 	andne	r2, r0, ip, asr #27
    6fe4:	cc540001 	mrrcgt	0, 0, r0, r4, cr1
    6fe8:	ce10002d 	cdpgt	0, 1, cr0, cr0, cr13, {1}
    6fec:	0410002d 	ldreq	r0, [r0], #-45	; 0xffffffd3
    6ff0:	5001f300 	andpl	pc, r1, r0, lsl #6
    6ff4:	002dce9f 	mlaeq	sp, pc, lr, ip	; <UNPREDICTABLE>
    6ff8:	002dd810 	eoreq	sp, sp, r0, lsl r8
    6ffc:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    7000:	10002dd8 	ldrdne	r2, [r0], -r8
    7004:	10002dda 	ldrdne	r2, [r0], -sl
    7008:	01f30004 	mvnseq	r0, r4
    700c:	2dda9f50 	ldclcs	15, cr9, [sl, #320]	; 0x140
    7010:	2de81000 	stclcs	0, cr1, [r8]
    7014:	00011000 	andeq	r1, r1, r0
    7018:	002de854 	eoreq	lr, sp, r4, asr r8
    701c:	002dea10 	eoreq	lr, sp, r0, lsl sl
    7020:	f3000410 	vqshl.u8	d0, d0, d0
    7024:	ea9f5001 	b	fe7db030 <__StackTop+0xc66db030>
    7028:	ec10002d 	ldc	0, cr0, [r0], {45}	; 0x2d
    702c:	0110002d 	tsteq	r0, sp, lsr #32
    7030:	2dec5400 	cfstrdcs	mvd5, [ip]
    7034:	2dfc1000 	ldclcs	0, cr1, [ip]
    7038:	00041000 	andeq	r1, r4, r0
    703c:	9f5001f3 	svcls	0x005001f3
	...
    704c:	10002d80 	andne	r2, r0, r0, lsl #27
    7050:	10002d89 	andne	r2, r0, r9, lsl #27
    7054:	89510001 	ldmdbhi	r1, {r0}^
    7058:	fc10002d 	ldc2	0, cr0, [r0], {45}	; 0x2d
    705c:	0110002d 	tsteq	r0, sp, lsr #32
    7060:	00005500 	andeq	r5, r0, r0, lsl #10
    7064:	00000000 	andeq	r0, r0, r0
    7068:	00010000 	andeq	r0, r1, r0
    706c:	00010000 	andeq	r0, r1, r0
    7070:	00010001 	andeq	r0, r1, r1
    7074:	10002da6 	andne	r2, r0, r6, lsr #27
    7078:	10002da8 	andne	r2, r0, r8, lsr #27
    707c:	9f310002 	svcls	0x00310002
    7080:	10002da8 	andne	r2, r0, r8, lsr #27
    7084:	10002db0 			; <UNDEFINED> instruction: 0x10002db0
    7088:	c6540001 	ldrbgt	r0, [r4], -r1
    708c:	ce10002d 	cdpgt	0, 1, cr0, cr0, cr13, {1}
    7090:	0210002d 	andseq	r0, r0, #45	; 0x2d
    7094:	d69f3100 	ldrle	r3, [pc], r0, lsl #2
    7098:	da10002d 	ble	407154 <__RAM_SIZE+0x307154>
    709c:	0210002d 	andseq	r0, r0, #45	; 0x2d
    70a0:	e69f3100 	ldr	r3, [pc], r0, lsl #2
    70a4:	ea10002d 	b	407160 <__RAM_SIZE+0x307160>
    70a8:	0210002d 	andseq	r0, r0, #45	; 0x2d
    70ac:	009f3000 	addseq	r3, pc, r0
	...
    70bc:	002d8e00 	eoreq	r8, sp, r0, lsl #28
    70c0:	002da210 	eoreq	sl, sp, r0, lsl r2
    70c4:	52000110 	andpl	r0, r0, #16, 2
    70c8:	10002db0 			; <UNDEFINED> instruction: 0x10002db0
    70cc:	10002de5 	andne	r2, r0, r5, ror #27
    70d0:	ea520001 	b	14870dc <__RAM_SIZE+0x13870dc>
    70d4:	fc10002d 	ldc2	0, cr0, [r0], {45}	; 0x2d
    70d8:	0110002d 	tsteq	r0, sp, lsr #32
    70dc:	00005200 	andeq	r5, r0, r0, lsl #4
	...
    70ec:	10002d92 	mulne	r0, r2, sp
    70f0:	10002da8 	andne	r2, r0, r8, lsr #27
    70f4:	b0500001 	subslt	r0, r0, r1
    70f8:	e210002d 	ands	r0, r0, #45	; 0x2d
    70fc:	0110002d 	tsteq	r0, sp, lsr #32
    7100:	2dea5000 	stclcs	0, cr5, [sl]
    7104:	2dfc1000 	ldclcs	0, cr1, [ip]
    7108:	00011000 	andeq	r1, r1, r0
    710c:	00000050 	andeq	r0, r0, r0, asr r0
	...
    711c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    7128:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    712c:	00000008 	andeq	r0, r0, r8
	...
    7140:	01000000 	mrseq	r0, (UNDEF: 0)
    7144:	00005000 	andeq	r5, r0, r0
    7148:	00000000 	andeq	r0, r0, r0
    714c:	00010000 	andeq	r0, r1, r0
    7150:	00000054 	andeq	r0, r0, r4, asr r0
    7154:	00000000 	andeq	r0, r0, r0
    7158:	f3000400 	vshl.u8	d0, d0, d0
    715c:	009f5001 	addseq	r5, pc, r1
	...
    716c:	02000000 	andeq	r0, r0, #0
    7170:	00007d00 	andeq	r7, r0, r0, lsl #26
    7174:	00000000 	andeq	r0, r0, r0
    7178:	02000000 	andeq	r0, r0, #0
    717c:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    7194:	01000000 	mrseq	r0, (UNDEF: 0)
    7198:	00005000 	andeq	r5, r0, r0
    719c:	00000000 	andeq	r0, r0, r0
    71a0:	00040000 	andeq	r0, r4, r0
    71a4:	9f5001f3 	svcls	0x005001f3
	...
    71b0:	00500001 	subseq	r0, r0, r1
    71b4:	00000000 	andeq	r0, r0, r0
    71b8:	04000000 	streq	r0, [r0], #-0
    71bc:	5001f300 	andpl	pc, r1, r0, lsl #6
    71c0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    71d4:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    71e0:	01f30004 	mvnseq	r0, r4
    71e4:	00009f51 	andeq	r9, r0, r1, asr pc
	...
    71f8:	00540001 	subseq	r0, r4, r1
	...
    720c:	01000000 	mrseq	r0, (UNDEF: 0)
    7210:	00005300 	andeq	r5, r0, r0, lsl #6
    7214:	00000000 	andeq	r0, r0, r0
    7218:	00010000 	andeq	r0, r1, r0
    721c:	00000053 	andeq	r0, r0, r3, asr r0
	...
    7230:	53000100 	movwpl	r0, #256	; 0x100
	...
    723c:	00530001 	subseq	r0, r3, r1
	...
    7250:	53000100 	movwpl	r0, #256	; 0x100
	...
    725c:	10002c84 	andne	r2, r0, r4, lsl #25
    7260:	10002c86 	andne	r2, r0, r6, lsl #25
    7264:	007d0002 	rsbseq	r0, sp, r2
    7268:	10002c86 	andne	r2, r0, r6, lsl #25
    726c:	10002d68 	andne	r2, r0, r8, ror #26
    7270:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    7284:	10002c84 	andne	r2, r0, r4, lsl #25
    7288:	10002cee 	andne	r2, r0, lr, ror #25
    728c:	ee500001 	cdp	0, 5, cr0, cr0, cr1, {0}
    7290:	2610002c 	ldrcs	r0, [r0], -ip, lsr #32
    7294:	0410002d 	ldreq	r0, [r0], #-45	; 0xffffffd3
    7298:	5001f300 	andpl	pc, r1, r0, lsl #6
    729c:	002d269f 	mlaeq	sp, pc, r6, r2	; <UNPREDICTABLE>
    72a0:	002d3a10 	eoreq	r3, sp, r0, lsl sl
    72a4:	50000110 	andpl	r0, r0, r0, lsl r1
    72a8:	10002d3a 	andne	r2, r0, sl, lsr sp
    72ac:	10002d68 	andne	r2, r0, r8, ror #26
    72b0:	01f30004 	mvnseq	r0, r4
    72b4:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    72c0:	10002c8a 	andne	r2, r0, sl, lsl #25
    72c4:	10002d68 	andne	r2, r0, r8, ror #26
    72c8:	00540001 	subseq	r0, r4, r1
    72cc:	00000000 	andeq	r0, r0, r0
    72d0:	01000000 	mrseq	r0, (UNDEF: 0)
    72d4:	1e000000 	cdpne	0, 0, cr0, cr0, cr0, {0}
    72d8:	2410002d 	ldrcs	r0, [r0], #-45	; 0xffffffd3
    72dc:	0210002d 	andseq	r0, r0, #45	; 0x2d
    72e0:	4c9f3100 	ldfmis	f3, [pc], {0}
    72e4:	6810002d 	ldmdavs	r0, {r0, r2, r3, r5}
    72e8:	0210002d 	andseq	r0, r0, #45	; 0x2d
    72ec:	009f3000 	addseq	r3, pc, r0
	...
    72f8:	8c000000 	stchi	0, cr0, [r0], {-0}
    72fc:	ac10002c 	ldcge	0, cr0, [r0], {44}	; 0x2c
    7300:	0110002c 	tsteq	r0, ip, lsr #32
    7304:	2d265300 	stccs	3, cr5, [r6, #-0]
    7308:	2d2c1000 	stccs	0, cr1, [ip, #-0]
    730c:	00011000 	andeq	r1, r1, r0
    7310:	00000053 	andeq	r0, r0, r3, asr r0
	...
    731c:	002cb400 	eoreq	fp, ip, r0, lsl #8
    7320:	002cd210 	eoreq	sp, ip, r0, lsl r2
    7324:	53000110 	movwpl	r0, #272	; 0x110
    7328:	10002d2c 	andne	r2, r0, ip, lsr #26
    732c:	10002d32 	andne	r2, r0, r2, lsr sp
    7330:	00530001 	subseq	r0, r3, r1
	...
    733c:	002cea00 	eoreq	lr, ip, r0, lsl #20
    7340:	002cf610 	eoreq	pc, ip, r0, lsl r6	; <UNPREDICTABLE>
    7344:	53000110 	movwpl	r0, #272	; 0x110
	...
    7350:	2d360000 	ldccs	0, cr0, [r6, #-0]
    7354:	2d441000 	stclcs	0, cr1, [r4, #-0]
    7358:	00011000 	andeq	r1, r1, r0
    735c:	00000052 	andeq	r0, r0, r2, asr r0
    7360:	00000000 	andeq	r0, r0, r0
    7364:	002c4800 	eoreq	r4, ip, r0, lsl #16
    7368:	002c4a10 	eoreq	r4, ip, r0, lsl sl
    736c:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    7370:	002c4a00 	eoreq	r4, ip, r0, lsl #20
    7374:	002c8410 	eoreq	r8, ip, r0, lsl r4
    7378:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    737c:	00000010 	andeq	r0, r0, r0, lsl r0
	...
    7388:	48000000 	stmdami	r0, {}	; <UNPREDICTABLE>
    738c:	4e10002c 	cdpmi	0, 1, cr0, cr0, cr12, {1}
    7390:	0110002c 	tsteq	r0, ip, lsr #32
    7394:	2c4e5000 	marcs	acc0, r5, lr
    7398:	2c7d1000 	ldclcs	0, cr1, [sp], #-0
    739c:	00011000 	andeq	r1, r1, r0
    73a0:	002c7d53 	eoreq	r7, ip, r3, asr sp
    73a4:	002c8410 	eoreq	r8, ip, r0, lsl r4
    73a8:	f3000410 	vqshl.u8	d0, d0, d0
    73ac:	009f5001 	addseq	r5, pc, r1
	...
    73b8:	48000000 	stmdami	r0, {}	; <UNPREDICTABLE>
    73bc:	5010002c 	andspl	r0, r0, ip, lsr #32
    73c0:	0110002c 	tsteq	r0, ip, lsr #32
    73c4:	2c505100 	ldfcse	f5, [r0], {-0}
    73c8:	2c7d1000 	ldclcs	0, cr1, [sp], #-0
    73cc:	00011000 	andeq	r1, r1, r0
    73d0:	00000050 	andeq	r0, r0, r0, asr r0
	...
    73dc:	002c4800 	eoreq	r4, ip, r0, lsl #16
    73e0:	002c7d10 	eoreq	r7, ip, r0, lsl sp
    73e4:	52000110 	andpl	r0, r0, #16, 2
    73e8:	10002c7d 	andne	r2, r0, sp, ror ip
    73ec:	10002c84 	andne	r2, r0, r4, lsl #25
    73f0:	01f30004 	mvnseq	r0, r4
    73f4:	00009f52 	andeq	r9, r0, r2, asr pc
	...
    7400:	10002c50 	andne	r2, r0, r0, asr ip
    7404:	10002c6a 	andne	r2, r0, sl, ror #24
    7408:	00510001 	subseq	r0, r1, r1
	...
    7418:	02000000 	andeq	r0, r0, #0
    741c:	00007d00 	andeq	r7, r0, r0, lsl #26
    7420:	00000000 	andeq	r0, r0, r0
    7424:	02000000 	andeq	r0, r0, #0
    7428:	00107d00 	andseq	r7, r0, r0, lsl #26
	...
    7440:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    744c:	00530001 	subseq	r0, r3, r1
    7450:	00000000 	andeq	r0, r0, r0
    7454:	04000000 	streq	r0, [r0], #-0
    7458:	5001f300 	andpl	pc, r1, r0, lsl #6
    745c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    7470:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    747c:	01f30004 	mvnseq	r0, r4
    7480:	00009f51 	andeq	r9, r0, r1, asr pc
	...
    7494:	00010000 	andeq	r0, r1, r0
    7498:	00000052 	andeq	r0, r0, r2, asr r0
    749c:	00000000 	andeq	r0, r0, r0
    74a0:	f3000400 	vshl.u8	d0, d0, d0
    74a4:	009f5201 	addseq	r5, pc, r1, lsl #4
	...
    74b8:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    74c4:	10002c2c 	andne	r2, r0, ip, lsr #24
    74c8:	10002c2e 	andne	r2, r0, lr, lsr #24
    74cc:	007d0002 	rsbseq	r0, sp, r2
    74d0:	10002c2e 	andne	r2, r0, lr, lsr #24
    74d4:	10002c48 	andne	r2, r0, r8, asr #24
    74d8:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    74e8:	10002c2c 	andne	r2, r0, ip, lsr #24
    74ec:	10002c39 	andne	r2, r0, r9, lsr ip
    74f0:	39500001 	ldmdbcc	r0, {r0}^
    74f4:	4810002c 	ldmdami	r0, {r2, r3, r5}
    74f8:	0410002c 	ldreq	r0, [r0], #-44	; 0xffffffd4
    74fc:	5001f300 	andpl	pc, r1, r0, lsl #6
    7500:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    750c:	2c000000 	stccs	0, cr0, [r0], {-0}
    7510:	3410002c 	ldrcc	r0, [r0], #-44	; 0xffffffd4
    7514:	0110002c 	tsteq	r0, ip, lsr #32
    7518:	2c345100 	ldfcss	f5, [r4], #-0
    751c:	2c441000 	marcs	acc0, r1, r4
    7520:	00011000 	andeq	r1, r1, r0
    7524:	002c4454 	eoreq	r4, ip, r4, asr r4
    7528:	002c4810 	eoreq	r4, ip, r0, lsl r8
    752c:	f3000410 	vqshl.u8	d0, d0, d0
    7530:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
    7540:	002bc000 	eoreq	ip, fp, r0
    7544:	002c0810 	eoreq	r0, ip, r0, lsl r8
    7548:	53000110 	movwpl	r0, #272	; 0x110
    754c:	10002c08 	andne	r2, r0, r8, lsl #24
    7550:	10002c0a 	andne	r2, r0, sl, lsl #24
    7554:	60030005 	andvs	r0, r3, r5
    7558:	0a38008a 	beq	e07788 <__RAM_SIZE+0xd07788>
    755c:	2c10002c 	ldccs	0, cr0, [r0], {44}	; 0x2c
    7560:	0110002c 	tsteq	r0, ip, lsr #32
    7564:	00005300 	andeq	r5, r0, r0, lsl #6
    7568:	00000000 	andeq	r0, r0, r0
    756c:	00020000 	andeq	r0, r2, r0
    7570:	00000000 	andeq	r0, r0, r0
    7574:	10002bd2 	ldrdne	r2, [r0], -r2	; <UNPREDICTABLE>
    7578:	10002c08 	andne	r2, r0, r8, lsl #24
    757c:	0073000b 	rsbseq	r0, r3, fp
    7580:	c4031e4c 	strgt	r1, [r3], #-3660	; 0xfffff1b4
    7584:	22380085 	eorscs	r0, r8, #133	; 0x85
    7588:	002c089f 	mlaeq	ip, pc, r8, r0	; <UNPREDICTABLE>
    758c:	002c0a10 	eoreq	r0, ip, r0, lsl sl
    7590:	03000f10 	movweq	r0, #3856	; 0xf10
    7594:	38008a60 	stmdacc	r0, {r5, r6, r9, fp, pc}
    7598:	031e4c06 	tsteq	lr, #1536	; 0x600
    759c:	380085c4 	stmdacc	r0, {r2, r6, r7, r8, sl, pc}
    75a0:	2c0a9f22 	stccs	15, cr9, [sl], {34}	; 0x22
    75a4:	2c2c1000 	stccs	0, cr1, [ip], #-0
    75a8:	000b1000 	andeq	r1, fp, r0
    75ac:	1e4c0073 	mcrne	0, 2, r0, cr12, cr3, {3}
    75b0:	0085c403 	addeq	ip, r5, r3, lsl #8
    75b4:	009f2238 	addseq	r2, pc, r8, lsr r2	; <UNPREDICTABLE>
	...
    75c4:	02000000 	andeq	r0, r0, #0
    75c8:	00007d00 	andeq	r7, r0, r0, lsl #26
    75cc:	00000000 	andeq	r0, r0, r0
    75d0:	02000000 	andeq	r0, r0, #0
    75d4:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    75e8:	01000000 	mrseq	r0, (UNDEF: 0)
    75ec:	00005000 	andeq	r5, r0, r0
    75f0:	00000000 	andeq	r0, r0, r0
    75f4:	00010000 	andeq	r0, r1, r0
    75f8:	00000050 	andeq	r0, r0, r0, asr r0
	...
    760c:	01000000 	mrseq	r0, (UNDEF: 0)
    7610:	00005100 	andeq	r5, r0, r0, lsl #2
    7614:	00000000 	andeq	r0, r0, r0
    7618:	00040000 	andeq	r0, r4, r0
    761c:	9f5101f3 	svcls	0x005101f3
	...
    7628:	00510001 	subseq	r0, r1, r1
	...
    763c:	01000000 	mrseq	r0, (UNDEF: 0)
    7640:	00005300 	andeq	r5, r0, r0, lsl #6
    7644:	00000000 	andeq	r0, r0, r0
    7648:	00010000 	andeq	r0, r1, r0
    764c:	00000053 	andeq	r0, r0, r3, asr r0
	...
    765c:	02000000 	andeq	r0, r0, #0
    7660:	009f3000 	addseq	r3, pc, r0
	...
    7670:	02000000 	andeq	r0, r0, #0
    7674:	00007d00 	andeq	r7, r0, r0, lsl #26
    7678:	00000000 	andeq	r0, r0, r0
    767c:	02000000 	andeq	r0, r0, #0
    7680:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    7694:	01000000 	mrseq	r0, (UNDEF: 0)
    7698:	00005000 	andeq	r5, r0, r0
    769c:	00000000 	andeq	r0, r0, r0
    76a0:	00010000 	andeq	r0, r1, r0
    76a4:	00000050 	andeq	r0, r0, r0, asr r0
	...
    76b4:	01000000 	mrseq	r0, (UNDEF: 0)
    76b8:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    76cc:	00540001 	subseq	r0, r4, r1
	...
    76e0:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    76f4:	007d0002 	rsbseq	r0, sp, r2
	...
    7700:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    7718:	00500001 	subseq	r0, r0, r1
    771c:	00000000 	andeq	r0, r0, r0
    7720:	01000000 	mrseq	r0, (UNDEF: 0)
    7724:	00005000 	andeq	r5, r0, r0
	...
    7738:	00540001 	subseq	r0, r4, r1
	...
    774c:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    7760:	007d0002 	rsbseq	r0, sp, r2
	...
    776c:	107d0002 	rsbsne	r0, sp, r2
	...
    7784:	00500001 	subseq	r0, r0, r1
    7788:	00000000 	andeq	r0, r0, r0
    778c:	01000000 	mrseq	r0, (UNDEF: 0)
    7790:	00005000 	andeq	r5, r0, r0
	...
    77a8:	00510001 	subseq	r0, r1, r1
    77ac:	00000000 	andeq	r0, r0, r0
    77b0:	01000000 	mrseq	r0, (UNDEF: 0)
    77b4:	00005400 	andeq	r5, r0, r0, lsl #8
    77b8:	00000000 	andeq	r0, r0, r0
    77bc:	00010000 	andeq	r0, r1, r0
    77c0:	00000051 	andeq	r0, r0, r1, asr r0
	...
    77d4:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    77e0:	00550001 	subseq	r0, r5, r1
    77e4:	00000000 	andeq	r0, r0, r0
    77e8:	c0000000 	andgt	r0, r0, r0
    77ec:	cc100028 	ldcgt	0, cr0, [r0], {40}	; 0x28
    77f0:	02100028 	andseq	r0, r0, #40	; 0x28
    77f4:	cc007d00 	stcgt	13, cr7, [r0], {-0}
    77f8:	e4100028 	ldr	r0, [r0], #-40	; 0xffffffd8
    77fc:	02100029 	andseq	r0, r0, #41	; 0x29
    7800:	e4107d00 	ldr	r7, [r0], #-3328	; 0xfffff300
    7804:	f0100029 			; <UNDEFINED> instruction: 0xf0100029
    7808:	02100029 	andseq	r0, r0, #41	; 0x29
    780c:	f0007d00 			; <UNDEFINED> instruction: 0xf0007d00
    7810:	20100029 	andscs	r0, r0, r9, lsr #32
    7814:	0210002a 	andseq	r0, r0, #42	; 0x2a
    7818:	00107d00 	andseq	r7, r0, r0, lsl #26
	...
    7828:	00292800 	eoreq	r2, r9, r0, lsl #16
    782c:	00292a10 	eoreq	r2, r9, r0, lsl sl
    7830:	53000110 	movwpl	r0, #272	; 0x110
    7834:	1000292e 	andne	r2, r0, lr, lsr #18
    7838:	10002984 	andne	r2, r0, r4, lsl #19
    783c:	a0530001 	subsge	r0, r3, r1
    7840:	e4100029 	ldr	r0, [r0], #-41	; 0xffffffd7
    7844:	01100029 	tsteq	r0, r9, lsr #32
    7848:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    7858:	10002928 	andne	r2, r0, r8, lsr #18
    785c:	1000292e 	andne	r2, r0, lr, lsr #18
    7860:	a2520001 	subsge	r0, r2, #1
    7864:	a8100029 	ldmdage	r0, {r0, r3, r5}
    7868:	01100029 	tsteq	r0, r9, lsr #32
    786c:	29a85200 	stmibcs	r8!, {r9, ip, lr}
    7870:	29ae1000 	stmibcs	lr!, {ip}
    7874:	00021000 	andeq	r1, r2, r0
    7878:	00000473 	andeq	r0, r0, r3, ror r4
    787c:	00000000 	andeq	r0, r0, r0
    7880:	00040000 	andeq	r0, r4, r0
	...
    7890:	100028c0 	andne	r2, r0, r0, asr #17
    7894:	100028e0 	andne	r2, r0, r0, ror #17
    7898:	9f300002 	svcls	0x00300002
    789c:	100028e0 	andne	r2, r0, r0, ror #17
    78a0:	100028fe 	strdne	r2, [r0], -lr
    78a4:	00500001 	subseq	r0, r0, r1
    78a8:	1e100029 	cdpne	0, 1, cr0, cr0, cr9, {1}
    78ac:	02100029 	andseq	r0, r0, #41	; 0x29
    78b0:	1e9f3000 	cdpne	0, 9, cr3, cr15, cr0, {0}
    78b4:	e4100029 	ldr	r0, [r0], #-41	; 0xffffffd7
    78b8:	01100029 	tsteq	r0, r9, lsr #32
    78bc:	29e45000 	stmibcs	r4!, {ip, lr}^
    78c0:	29f01000 	ldmibcs	r0!, {ip}^
    78c4:	00021000 	andeq	r1, r2, r0
    78c8:	29f09f30 	ldmibcs	r0!, {r4, r5, r8, r9, sl, fp, ip, pc}^
    78cc:	29f21000 	ldmibcs	r2!, {ip}^
    78d0:	00011000 	andeq	r1, r1, r0
    78d4:	0029f250 	eoreq	pc, r9, r0, asr r2	; <UNPREDICTABLE>
    78d8:	002a2010 	eoreq	r2, sl, r0, lsl r0
    78dc:	31000210 	tstcc	r0, r0, lsl r2
    78e0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    78ec:	0028d200 	eoreq	sp, r8, r0, lsl #4
    78f0:	0029e410 	eoreq	lr, r9, r0, lsl r4
    78f4:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    78f8:	100029f0 	strdne	r2, [r0], -r0
    78fc:	10002a20 	andne	r2, r0, r0, lsr #20
    7900:	00540001 	subseq	r0, r4, r1
	...
    790c:	00290400 	eoreq	r0, r9, r0, lsl #8
    7910:	00291710 	eoreq	r1, r9, r0, lsl r7
    7914:	51000110 	tstpl	r0, r0, lsl r1
	...
    7924:	1000292e 	andne	r2, r0, lr, lsr #18
    7928:	10002934 	andne	r2, r0, r4, lsr r9
    792c:	a8520001 	ldmdage	r2, {r0}^
    7930:	c6100029 	ldrgt	r0, [r0], -r9, lsr #32
    7934:	01100029 	tsteq	r0, r9, lsr #32
    7938:	00005200 	andeq	r5, r0, r0, lsl #4
    793c:	00000000 	andeq	r0, r0, r0
    7940:	01000000 	mrseq	r0, (UNDEF: 0)
    7944:	29340002 	ldmdbcs	r4!, {r1}
    7948:	293e1000 	ldmdbcs	lr!, {ip}
    794c:	00011000 	andeq	r1, r1, r0
    7950:	0029ca52 	eoreq	ip, r9, r2, asr sl
    7954:	0029e410 	eoreq	lr, r9, r0, lsl r4
    7958:	52000110 	andpl	r0, r0, #16, 2
	...
    7964:	295c0000 	ldmdbcs	ip, {}^	; <UNPREDICTABLE>
    7968:	29681000 	stmdbcs	r8!, {ip}^
    796c:	00011000 	andeq	r1, r1, r0
    7970:	00000052 	andeq	r0, r0, r2, asr r0
	...
    7980:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    798c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    7990:	00000010 	andeq	r0, r0, r0, lsl r0
	...
    79ac:	01000000 	mrseq	r0, (UNDEF: 0)
    79b0:	00005000 	andeq	r5, r0, r0
    79b4:	00000000 	andeq	r0, r0, r0
    79b8:	00010000 	andeq	r0, r1, r0
    79bc:	00000054 	andeq	r0, r0, r4, asr r0
    79c0:	00000000 	andeq	r0, r0, r0
    79c4:	f3000400 	vshl.u8	d0, d0, d0
    79c8:	009f5001 	addseq	r5, pc, r1
    79cc:	00000000 	andeq	r0, r0, r0
    79d0:	01000000 	mrseq	r0, (UNDEF: 0)
    79d4:	00005400 	andeq	r5, r0, r0, lsl #8
    79d8:	00000000 	andeq	r0, r0, r0
    79dc:	00030000 	andeq	r0, r3, r0
    79e0:	009f7c75 	addseq	r7, pc, r5, ror ip	; <UNPREDICTABLE>
    79e4:	00000000 	andeq	r0, r0, r0
    79e8:	01000000 	mrseq	r0, (UNDEF: 0)
    79ec:	00005400 	andeq	r5, r0, r0, lsl #8
    79f0:	00000000 	andeq	r0, r0, r0
    79f4:	00030000 	andeq	r0, r3, r0
    79f8:	009f7c75 	addseq	r7, pc, r5, ror ip	; <UNPREDICTABLE>
    79fc:	00000000 	andeq	r0, r0, r0
    7a00:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    7a18:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    7a24:	00540001 	subseq	r0, r4, r1
    7a28:	00000000 	andeq	r0, r0, r0
    7a2c:	04000000 	streq	r0, [r0], #-0
    7a30:	5001f300 	andpl	pc, r1, r0, lsl #6
    7a34:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    7a38:	00000000 	andeq	r0, r0, r0
    7a3c:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    7a48:	7c750003 	ldclvc	0, cr0, [r5], #-12
    7a4c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    7a50:	00000000 	andeq	r0, r0, r0
    7a54:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    7a60:	7c750003 	ldclvc	0, cr0, [r5], #-12
    7a64:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    7a68:	00000000 	andeq	r0, r0, r0
    7a6c:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    7a78:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    7a84:	9f310002 	svcls	0x00310002
	...
    7a98:	00010000 	andeq	r0, r1, r0
    7a9c:	00000053 	andeq	r0, r0, r3, asr r0
	...
    7aac:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    7ab8:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    7abc:	00000008 	andeq	r0, r0, r8
	...
    7ad0:	01000000 	mrseq	r0, (UNDEF: 0)
    7ad4:	00005000 	andeq	r5, r0, r0
    7ad8:	00000000 	andeq	r0, r0, r0
    7adc:	00010000 	andeq	r0, r1, r0
    7ae0:	00000054 	andeq	r0, r0, r4, asr r0
    7ae4:	00000000 	andeq	r0, r0, r0
    7ae8:	f3000400 	vshl.u8	d0, d0, d0
    7aec:	009f5001 	addseq	r5, pc, r1
	...
    7b00:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    7b0c:	10002884 	andne	r2, r0, r4, lsl #17
    7b10:	10002886 	andne	r2, r0, r6, lsl #17
    7b14:	007d0002 	rsbseq	r0, sp, r2
    7b18:	10002886 	andne	r2, r0, r6, lsl #17
    7b1c:	100028c0 	andne	r2, r0, r0, asr #17
    7b20:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    7b34:	10002884 	andne	r2, r0, r4, lsl #17
    7b38:	10002896 	mulne	r0, r6, r8
    7b3c:	96500001 	ldrbls	r0, [r0], -r1
    7b40:	9c100028 	ldcls	0, cr0, [r0], {40}	; 0x28
    7b44:	01100028 	tsteq	r0, r8, lsr #32
    7b48:	28a05400 	stmiacs	r0!, {sl, ip, lr}
    7b4c:	28a31000 	stmiacs	r3!, {ip}
    7b50:	00011000 	andeq	r1, r1, r0
    7b54:	0028a350 	eoreq	sl, r8, r0, asr r3
    7b58:	0028c010 	eoreq	ip, r8, r0, lsl r0
    7b5c:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
	...
    7b6c:	1000288e 	andne	r2, r0, lr, lsl #17
    7b70:	10002896 	mulne	r0, r6, r8
    7b74:	a0530001 	subsge	r0, r3, r1
    7b78:	a3100028 	tstge	r0, #40	; 0x28
    7b7c:	01100028 	tsteq	r0, r8, lsr #32
    7b80:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    7b94:	00010000 	andeq	r0, r1, r0
    7b98:	00000050 	andeq	r0, r0, r0, asr r0
    7b9c:	00000000 	andeq	r0, r0, r0
    7ba0:	f3000400 	vshl.u8	d0, d0, d0
    7ba4:	009f5001 	addseq	r5, pc, r1
	...
    7bb8:	01000000 	mrseq	r0, (UNDEF: 0)
    7bbc:	00005000 	andeq	r5, r0, r0
    7bc0:	00000000 	andeq	r0, r0, r0
    7bc4:	00010000 	andeq	r0, r1, r0
    7bc8:	00000050 	andeq	r0, r0, r0, asr r0
    7bcc:	00000000 	andeq	r0, r0, r0
    7bd0:	01000000 	mrseq	r0, (UNDEF: 0)
    7bd4:	00000100 	andeq	r0, r0, r0, lsl #2
    7bd8:	00000000 	andeq	r0, r0, r0
    7bdc:	02000000 	andeq	r0, r0, #0
    7be0:	009f3000 	addseq	r3, pc, r0
    7be4:	00000000 	andeq	r0, r0, r0
    7be8:	02000000 	andeq	r0, r0, #0
    7bec:	009f3100 	addseq	r3, pc, r0, lsl #2
    7bf0:	00000000 	andeq	r0, r0, r0
    7bf4:	02000000 	andeq	r0, r0, #0
    7bf8:	009f3100 	addseq	r3, pc, r0, lsl #2
	...
    7c0c:	01000000 	mrseq	r0, (UNDEF: 0)
    7c10:	00005300 	andeq	r5, r0, r0, lsl #6
    7c14:	00000000 	andeq	r0, r0, r0
    7c18:	00010000 	andeq	r0, r1, r0
    7c1c:	00000053 	andeq	r0, r0, r3, asr r0
	...
    7c2c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    7c38:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    7c3c:	00000010 	andeq	r0, r0, r0, lsl r0
	...
    7c50:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    7c5c:	00560001 	subseq	r0, r6, r1
    7c60:	00000000 	andeq	r0, r0, r0
    7c64:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    7c70:	02000000 	andeq	r0, r0, #0
    7c74:	009f3500 	addseq	r3, pc, r0, lsl #10
    7c78:	00000000 	andeq	r0, r0, r0
    7c7c:	01000000 	mrseq	r0, (UNDEF: 0)
    7c80:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    7ca8:	00500001 	subseq	r0, r0, r1
    7cac:	00000000 	andeq	r0, r0, r0
    7cb0:	01000000 	mrseq	r0, (UNDEF: 0)
    7cb4:	00005500 	andeq	r5, r0, r0, lsl #10
    7cb8:	00000000 	andeq	r0, r0, r0
    7cbc:	00010000 	andeq	r0, r1, r0
    7cc0:	00000050 	andeq	r0, r0, r0, asr r0
    7cc4:	00000000 	andeq	r0, r0, r0
    7cc8:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    7cd4:	00500001 	subseq	r0, r0, r1
    7cd8:	00000000 	andeq	r0, r0, r0
    7cdc:	01000000 	mrseq	r0, (UNDEF: 0)
    7ce0:	00005500 	andeq	r5, r0, r0, lsl #10
    7ce4:	00000000 	andeq	r0, r0, r0
    7ce8:	00010000 	andeq	r0, r1, r0
    7cec:	00000050 	andeq	r0, r0, r0, asr r0
    7cf0:	00000000 	andeq	r0, r0, r0
    7cf4:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    7d00:	00500001 	subseq	r0, r0, r1
    7d04:	00000000 	andeq	r0, r0, r0
    7d08:	01000000 	mrseq	r0, (UNDEF: 0)
    7d0c:	00005500 	andeq	r5, r0, r0, lsl #10
    7d10:	00000000 	andeq	r0, r0, r0
    7d14:	00010000 	andeq	r0, r1, r0
    7d18:	00000050 	andeq	r0, r0, r0, asr r0
	...
    7d28:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    7d34:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    7d38:	0000000c 	andeq	r0, r0, ip
	...
    7d50:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    7d5c:	78750003 	ldmdavc	r5!, {r0, r1}^
    7d60:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    7d64:	00000000 	andeq	r0, r0, r0
    7d68:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    7d74:	78750003 	ldmdavc	r5!, {r0, r1}^
    7d78:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    7d84:	02020000 	andeq	r0, r2, #0
	...
    7d90:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    7d9c:	005e0001 	subseq	r0, lr, r1
    7da0:	00000000 	andeq	r0, r0, r0
    7da4:	01000000 	mrseq	r0, (UNDEF: 0)
    7da8:	00005100 	andeq	r5, r0, r0, lsl #2
    7dac:	00000000 	andeq	r0, r0, r0
    7db0:	00040000 	andeq	r0, r4, r0
    7db4:	9f5101f3 	svcls	0x005101f3
	...
    7dc0:	00000001 	andeq	r0, r0, r1
    7dc4:	00000200 	andeq	r0, r0, r0, lsl #4
    7dc8:	00000000 	andeq	r0, r0, r0
    7dcc:	00020000 	andeq	r0, r2, r0
    7dd0:	00009f30 	andeq	r9, r0, r0, lsr pc
    7dd4:	00000000 	andeq	r0, r0, r0
    7dd8:	00010000 	andeq	r0, r1, r0
    7ddc:	00000050 	andeq	r0, r0, r0, asr r0
    7de0:	00000000 	andeq	r0, r0, r0
    7de4:	30000200 	andcc	r0, r0, r0, lsl #4
    7de8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    7dec:	00000000 	andeq	r0, r0, r0
    7df0:	00000200 	andeq	r0, r0, r0, lsl #4
    7df4:	00000000 	andeq	r0, r0, r0
    7df8:	00000002 	andeq	r0, r0, r2
    7dfc:	00000000 	andeq	r0, r0, r0
    7e00:	30000200 	andcc	r0, r0, r0, lsl #4
    7e04:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    7e08:	00000000 	andeq	r0, r0, r0
    7e0c:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    7e18:	00510001 	subseq	r0, r1, r1
    7e1c:	00000000 	andeq	r0, r0, r0
    7e20:	02000000 	andeq	r0, r0, #0
    7e24:	009f3000 	addseq	r3, pc, r0
	...
    7e30:	00000200 	andeq	r0, r0, r0, lsl #4
	...
    7e3c:	53000100 	movwpl	r0, #256	; 0x100
	...
    7e48:	9f300002 	svcls	0x00300002
	...
    7e54:	00530001 	subseq	r0, r3, r1
	...
    7e68:	01000000 	mrseq	r0, (UNDEF: 0)
    7e6c:	00005200 	andeq	r5, r0, r0, lsl #4
    7e70:	00000000 	andeq	r0, r0, r0
    7e74:	00010000 	andeq	r0, r1, r0
    7e78:	00000052 	andeq	r0, r0, r2, asr r0
    7e7c:	00000000 	andeq	r0, r0, r0
    7e80:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    7e8c:	30000200 	andcc	r0, r0, r0, lsl #4
    7e90:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    7e94:	00000000 	andeq	r0, r0, r0
    7e98:	30000200 	andcc	r0, r0, r0, lsl #4
    7e9c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    7eb0:	70000300 	andvc	r0, r0, r0, lsl #6
    7eb4:	00009f08 	andeq	r9, r0, r8, lsl #30
    7eb8:	00000000 	andeq	r0, r0, r0
    7ebc:	00010000 	andeq	r0, r1, r0
    7ec0:	00000055 	andeq	r0, r0, r5, asr r0
	...
    7ed0:	01000000 	mrseq	r0, (UNDEF: 0)
    7ed4:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    7ee8:	00010000 	andeq	r0, r1, r0
    7eec:	00000050 	andeq	r0, r0, r0, asr r0
    7ef0:	00000000 	andeq	r0, r0, r0
    7ef4:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    7f08:	00010000 	andeq	r0, r1, r0
    7f0c:	00000053 	andeq	r0, r0, r3, asr r0
	...
    7f1c:	01000000 	mrseq	r0, (UNDEF: 0)
    7f20:	00005000 	andeq	r5, r0, r0
	...
    7f2c:	10002870 	andne	r2, r0, r0, ror r8
    7f30:	10002878 	andne	r2, r0, r8, ror r8
    7f34:	00500001 	subseq	r0, r0, r1
    7f38:	00000000 	andeq	r0, r0, r0
    7f3c:	20000000 	andcs	r0, r0, r0
    7f40:	2210002a 	andscs	r0, r0, #42	; 0x2a
    7f44:	0210002a 	andseq	r0, r0, #42	; 0x2a
    7f48:	22007d00 	andcs	r7, r0, #0, 26
    7f4c:	5010002a 	andspl	r0, r0, sl, lsr #32
    7f50:	0210002b 	andseq	r0, r0, #43	; 0x2b
    7f54:	00087d00 	andeq	r7, r8, r0, lsl #26
    7f58:	00000000 	andeq	r0, r0, r0
    7f5c:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    7f68:	22000000 	andcs	r0, r0, #0
    7f6c:	3e10002a 	cdpcc	0, 1, cr0, cr0, cr10, {1}
    7f70:	0210002a 	andseq	r0, r0, #42	; 0x2a
    7f74:	3e9f3000 	cdpcc	0, 9, cr3, cr15, cr0, {0}
    7f78:	4a10002a 	bmi	408028 <__RAM_SIZE+0x308028>
    7f7c:	0110002a 	tsteq	r0, sl, lsr #32
    7f80:	2a4a5300 	bcs	129cb88 <__RAM_SIZE+0x119cb88>
    7f84:	2a4c1000 	bcs	130bf8c <__RAM_SIZE+0x120bf8c>
    7f88:	00021000 	andeq	r1, r2, r0
    7f8c:	2a4c9f30 	bcs	132fc54 <__RAM_SIZE+0x122fc54>
    7f90:	2a561000 	bcs	158bf98 <__RAM_SIZE+0x148bf98>
    7f94:	00011000 	andeq	r1, r1, r0
    7f98:	002a5a53 	eoreq	r5, sl, r3, asr sl
    7f9c:	002aef10 	eoreq	lr, sl, r0, lsl pc
    7fa0:	53000110 	movwpl	r0, #272	; 0x110
    7fa4:	10002b24 	andne	r2, r0, r4, lsr #22
    7fa8:	10002b26 	andne	r2, r0, r6, lsr #22
    7fac:	9f300002 	svcls	0x00300002
	...
    7fb8:	00010102 	andeq	r0, r1, r2, lsl #2
    7fbc:	00000000 	andeq	r0, r0, r0
    7fc0:	2a220000 	bcs	887fc8 <__RAM_SIZE+0x787fc8>
    7fc4:	2afc1000 	bcs	fff0bfcc <__StackTop+0xc7e0bfcc>
    7fc8:	00021000 	andeq	r1, r2, r0
    7fcc:	2afc9f30 	bcs	fff2fc94 <__StackTop+0xc7e2fc94>
    7fd0:	2b081000 	blcs	20bfd8 <__RAM_SIZE+0x10bfd8>
    7fd4:	00021000 	andeq	r1, r2, r0
    7fd8:	2b089f31 	blcs	22fca4 <__RAM_SIZE+0x12fca4>
    7fdc:	2b261000 	blcs	98bfe4 <__RAM_SIZE+0x88bfe4>
    7fe0:	00021000 	andeq	r1, r2, r0
    7fe4:	2b269f30 	blcs	9afcac <__RAM_SIZE+0x8afcac>
    7fe8:	2b2e1000 	blcs	b8bff0 <__RAM_SIZE+0xa8bff0>
    7fec:	00011000 	andeq	r1, r1, r0
    7ff0:	002b2e54 	eoreq	r2, fp, r4, asr lr
    7ff4:	002b5010 	eoreq	r5, fp, r0, lsl r0
    7ff8:	50000110 	andpl	r0, r0, r0, lsl r1
	...
    8008:	10002a3e 	andne	r2, r0, lr, lsr sl
    800c:	10002a44 	andne	r2, r0, r4, asr #20
    8010:	5c520001 	mrrcpl	0, 0, r0, r2, cr1
    8014:	7c10002a 	ldcvc	0, cr0, [r0], {42}	; 0x2a
    8018:	0110002a 	tsteq	r0, sl, lsr #32
    801c:	00005200 	andeq	r5, r0, r0, lsl #4
	...
    8028:	2a440000 	bcs	1108030 <__RAM_SIZE+0x1008030>
    802c:	2a4a1000 	bcs	128c034 <__RAM_SIZE+0x118c034>
    8030:	00011000 	andeq	r1, r1, r0
    8034:	002a7c52 	eoreq	r7, sl, r2, asr ip
    8038:	002a9a10 	eoreq	r9, sl, r0, lsl sl
    803c:	52000110 	andpl	r0, r0, #16, 2
	...
    8048:	2ab20000 	bcs	fec88050 <__StackTop+0xc6b88050>
    804c:	2abe1000 	bcs	fef8c054 <__StackTop+0xc6e8c054>
    8050:	00011000 	andeq	r1, r1, r0
    8054:	00000052 	andeq	r0, r0, r2, asr r0
	...
    8060:	00000202 	andeq	r0, r0, r2, lsl #4
    8064:	002af400 	eoreq	pc, sl, r0, lsl #8
    8068:	002afa10 	eoreq	pc, sl, r0, lsl sl	; <UNPREDICTABLE>
    806c:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    8070:	10002b08 	andne	r2, r0, r8, lsl #22
    8074:	10002b08 	andne	r2, r0, r8, lsl #22
    8078:	08540001 	ldmdaeq	r4, {r0}^
    807c:	0a10002b 	beq	408130 <__RAM_SIZE+0x308130>
    8080:	0310002b 	tsteq	r0, #43	; 0x2b
    8084:	9f7f7400 	svcls	0x007f7400
    8088:	10002b0a 	andne	r2, r0, sl, lsl #22
    808c:	10002b24 	andne	r2, r0, r4, lsr #22
    8090:	00540001 	subseq	r0, r4, r1
	...
    809c:	3e010000 	cdpcc	0, 0, cr0, cr1, cr0, {0}
    80a0:	46100024 	ldrmi	r0, [r0], -r4, lsr #32
    80a4:	01100024 	tsteq	r0, r4, lsr #32
    80a8:	24485000 	strbcs	r5, [r8], #-0
    80ac:	24481000 	strbcs	r1, [r8], #-0
    80b0:	00021000 	andeq	r1, r2, r0
    80b4:	00009f30 	andeq	r9, r0, r0, lsr pc
    80b8:	00000000 	andeq	r0, r0, r0
    80bc:	00030000 	andeq	r0, r3, r0
    80c0:	00000000 	andeq	r0, r0, r0
    80c4:	10002420 	andne	r2, r0, r0, lsr #8
    80c8:	10002424 	andne	r2, r0, r4, lsr #8
    80cc:	9f300002 	svcls	0x00300002
    80d0:	10002428 	andne	r2, r0, r8, lsr #8
    80d4:	1000243c 	andne	r2, r0, ip, lsr r4
    80d8:	46530001 	ldrbmi	r0, [r3], -r1
    80dc:	60100024 	andsvs	r0, r0, r4, lsr #32
    80e0:	01100024 	tsteq	r0, r4, lsr #32
    80e4:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    80f4:	00020000 	andeq	r0, r2, r0
    80f8:	0000007d 	andeq	r0, r0, sp, ror r0
    80fc:	00000000 	andeq	r0, r0, r0
    8100:	00020000 	andeq	r0, r2, r0
    8104:	0000087d 	andeq	r0, r0, sp, ror r8
    8108:	00000000 	andeq	r0, r0, r0
    810c:	00010000 	andeq	r0, r1, r0
	...
    8118:	00020000 	andeq	r0, r2, r0
    811c:	00009f30 	andeq	r9, r0, r0, lsr pc
    8120:	00000000 	andeq	r0, r0, r0
    8124:	00010000 	andeq	r0, r1, r0
    8128:	00000054 	andeq	r0, r0, r4, asr r0
    812c:	00000000 	andeq	r0, r0, r0
    8130:	002f5400 	eoreq	r5, pc, r0, lsl #8
    8134:	002f5610 	eoreq	r5, pc, r0, lsl r6	; <UNPREDICTABLE>
    8138:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    813c:	002f5600 	eoreq	r5, pc, r0, lsl #12
    8140:	002f9c10 	eoreq	r9, pc, r0, lsl ip	; <UNPREDICTABLE>
    8144:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    8148:	00000008 	andeq	r0, r0, r8
	...
    8154:	5a000000 	bpl	815c <__HEAP_SIZE+0x715c>
    8158:	6210002f 	andsvs	r0, r0, #47	; 0x2f
    815c:	0110002f 	tsteq	r0, pc, lsr #32
    8160:	2f685000 	svccs	0x00685000
    8164:	2f6b1000 	svccs	0x006b1000
    8168:	00011000 	andeq	r1, r1, r0
    816c:	002f6c50 	eoreq	r6, pc, r0, asr ip	; <UNPREDICTABLE>
    8170:	002f7110 	eoreq	r7, pc, r0, lsl r1	; <UNPREDICTABLE>
    8174:	50000110 	andpl	r0, r0, r0, lsl r1
	...
    8180:	10002ee8 	andne	r2, r0, r8, ror #29
    8184:	10002eea 	andne	r2, r0, sl, ror #29
    8188:	007d0002 	rsbseq	r0, sp, r2
    818c:	10002eea 	andne	r2, r0, sl, ror #29
    8190:	10002eec 	andne	r2, r0, ip, ror #29
    8194:	0c7d0002 	ldcleq	0, cr0, [sp], #-8
    8198:	10002eec 	andne	r2, r0, ip, ror #29
    819c:	10002f10 	andne	r2, r0, r0, lsl pc
    81a0:	307d0002 	rsbscc	r0, sp, r2
    81a4:	10002f10 	andne	r2, r0, r0, lsl pc
    81a8:	10002f12 	andne	r2, r0, r2, lsl pc
    81ac:	0c7d0002 	ldcleq	0, cr0, [sp], #-8
    81b0:	10002f12 	andne	r2, r0, r2, lsl pc
    81b4:	10002f54 	andne	r2, r0, r4, asr pc
    81b8:	307d0002 	rsbscc	r0, sp, r2
	...
    81c4:	01000101 	tsteq	r0, r1, lsl #2
    81c8:	2eec0001 	cdpcs	0, 14, cr0, cr12, cr1, {0}
    81cc:	2f0e1000 	svccs	0x000e1000
    81d0:	00021000 	andeq	r1, r2, r0
    81d4:	2f129f31 	svccs	0x00129f31
    81d8:	2f441000 	svccs	0x00441000
    81dc:	00021000 	andeq	r1, r2, r0
    81e0:	2f449f31 	svccs	0x00449f31
    81e4:	2f541000 	svccs	0x00541000
    81e8:	00021000 	andeq	r1, r2, r0
    81ec:	00009f30 	andeq	r9, r0, r0, lsr pc
	...
    81f8:	10002f08 	andne	r2, r0, r8, lsl #30
    81fc:	10002f54 	andne	r2, r0, r4, asr pc
    8200:	00540001 	subseq	r0, r4, r1
    8204:	00000000 	andeq	r0, r0, r0
    8208:	04000000 	streq	r0, [r0], #-0
    820c:	002eec00 	eoreq	lr, lr, r0, lsl #24
    8210:	002f0810 	eoreq	r0, pc, r0, lsl r8	; <UNPREDICTABLE>
    8214:	30000210 	andcc	r0, r0, r0, lsl r2
    8218:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    821c:	00000000 	andeq	r0, r0, r0
    8220:	00000600 	andeq	r0, r0, r0, lsl #12
    8224:	002eec00 	eoreq	lr, lr, r0, lsl #24
    8228:	002eee10 	eoreq	lr, lr, r0, lsl lr
    822c:	30000210 	andcc	r0, r0, r0, lsl r2
    8230:	002eee9f 	mlaeq	lr, pc, lr, lr	; <UNPREDICTABLE>
    8234:	002f0810 	eoreq	r0, pc, r0, lsl r8	; <UNPREDICTABLE>
    8238:	53000110 	movwpl	r0, #272	; 0x110
	...
    824c:	007d0002 	rsbseq	r0, sp, r2
	...
    8258:	187d0002 	ldmdane	sp!, {r1}^
	...
    8270:	00500001 	subseq	r0, r0, r1
    8274:	00000000 	andeq	r0, r0, r0
    8278:	01000000 	mrseq	r0, (UNDEF: 0)
    827c:	00005400 	andeq	r5, r0, r0, lsl #8
    8280:	00000000 	andeq	r0, r0, r0
    8284:	01010000 	mrseq	r0, (UNDEF: 1)
    8288:	00000001 	andeq	r0, r0, r1
	...
    8294:	00020000 	andeq	r0, r2, r0
    8298:	00009f30 	andeq	r9, r0, r0, lsr pc
    829c:	00000000 	andeq	r0, r0, r0
    82a0:	00020000 	andeq	r0, r2, r0
    82a4:	00009f31 	andeq	r9, r0, r1, lsr pc
    82a8:	00000000 	andeq	r0, r0, r0
    82ac:	00010000 	andeq	r0, r1, r0
    82b0:	00000056 	andeq	r0, r0, r6, asr r0
    82b4:	00000000 	andeq	r0, r0, r0
    82b8:	30000200 	andcc	r0, r0, r0, lsl #4
    82bc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    82c0:	00000000 	andeq	r0, r0, r0
    82c4:	00000200 	andeq	r0, r0, r0, lsl #4
	...
    82d0:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    82dc:	00540001 	subseq	r0, r4, r1
	...
    82f0:	01000000 	mrseq	r0, (UNDEF: 0)
    82f4:	00005000 	andeq	r5, r0, r0
    82f8:	00000000 	andeq	r0, r0, r0
    82fc:	00010000 	andeq	r0, r1, r0
    8300:	00000055 	andeq	r0, r0, r5, asr r0
	...
    8310:	01000000 	mrseq	r0, (UNDEF: 0)
    8314:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    8324:	00020000 	andeq	r0, r2, r0
    8328:	0000007d 	andeq	r0, r0, sp, ror r0
    832c:	00000000 	andeq	r0, r0, r0
    8330:	00020000 	andeq	r0, r2, r0
    8334:	0000107d 	andeq	r1, r0, sp, ror r0
	...
    8340:	00020200 	andeq	r0, r2, r0, lsl #4
	...
    834c:	00010000 	andeq	r0, r1, r0
    8350:	00000050 	andeq	r0, r0, r0, asr r0
    8354:	00000000 	andeq	r0, r0, r0
    8358:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    8364:	01f30004 	mvnseq	r0, r4
    8368:	00009f50 	andeq	r9, r0, r0, asr pc
    836c:	00000000 	andeq	r0, r0, r0
    8370:	00010000 	andeq	r0, r1, r0
    8374:	00000054 	andeq	r0, r0, r4, asr r0
    8378:	00000000 	andeq	r0, r0, r0
    837c:	00000100 	andeq	r0, r0, r0, lsl #2
    8380:	00000202 	andeq	r0, r0, r2, lsl #4
	...
    838c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    8398:	00540001 	subseq	r0, r4, r1
    839c:	00000000 	andeq	r0, r0, r0
    83a0:	04000000 	streq	r0, [r0], #-0
    83a4:	5001f300 	andpl	pc, r1, r0, lsl #6
    83a8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    83ac:	00000000 	andeq	r0, r0, r0
    83b0:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    83c4:	00010000 	andeq	r0, r1, r0
    83c8:	00000053 	andeq	r0, r0, r3, asr r0
	...
    83ec:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    83f8:	01f30004 	mvnseq	r0, r4
    83fc:	00009f50 	andeq	r9, r0, r0, asr pc
    8400:	00000000 	andeq	r0, r0, r0
    8404:	00010000 	andeq	r0, r1, r0
    8408:	00000050 	andeq	r0, r0, r0, asr r0
    840c:	00000000 	andeq	r0, r0, r0
    8410:	f3000400 	vshl.u8	d0, d0, d0
    8414:	009f5001 	addseq	r5, pc, r1
    8418:	00000000 	andeq	r0, r0, r0
    841c:	01000000 	mrseq	r0, (UNDEF: 0)
    8420:	00005000 	andeq	r5, r0, r0
    8424:	00000000 	andeq	r0, r0, r0
    8428:	00040000 	andeq	r0, r4, r0
    842c:	9f5001f3 	svcls	0x005001f3
	...
    8438:	00500001 	subseq	r0, r0, r1
    843c:	00000000 	andeq	r0, r0, r0
    8440:	04000000 	streq	r0, [r0], #-0
    8444:	5001f300 	andpl	pc, r1, r0, lsl #6
    8448:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    844c:	00000000 	andeq	r0, r0, r0
    8450:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    845c:	01f30004 	mvnseq	r0, r4
    8460:	00009f50 	andeq	r9, r0, r0, asr pc
    8464:	00000000 	andeq	r0, r0, r0
    8468:	00020000 	andeq	r0, r2, r0
	...
    8478:	9f300002 	svcls	0x00300002
	...
    8484:	9f300002 	svcls	0x00300002
	...
    8490:	9f300002 	svcls	0x00300002
	...
    849c:	00000003 	andeq	r0, r0, r3
	...
    84b8:	00500001 	subseq	r0, r0, r1
    84bc:	00000000 	andeq	r0, r0, r0
    84c0:	04000000 	streq	r0, [r0], #-0
    84c4:	5001f300 	andpl	pc, r1, r0, lsl #6
    84c8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    84cc:	00000000 	andeq	r0, r0, r0
    84d0:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    84dc:	01f30004 	mvnseq	r0, r4
    84e0:	00009f50 	andeq	r9, r0, r0, asr pc
    84e4:	00000000 	andeq	r0, r0, r0
    84e8:	00010000 	andeq	r0, r1, r0
    84ec:	00000050 	andeq	r0, r0, r0, asr r0
    84f0:	00000000 	andeq	r0, r0, r0
    84f4:	f3000400 	vshl.u8	d0, d0, d0
    84f8:	009f5001 	addseq	r5, pc, r1
    84fc:	00000000 	andeq	r0, r0, r0
    8500:	01000000 	mrseq	r0, (UNDEF: 0)
    8504:	00005000 	andeq	r5, r0, r0
    8508:	00000000 	andeq	r0, r0, r0
    850c:	00040000 	andeq	r0, r4, r0
    8510:	9f5001f3 	svcls	0x005001f3
	...
    851c:	00500001 	subseq	r0, r0, r1
    8520:	00000000 	andeq	r0, r0, r0
    8524:	04000000 	streq	r0, [r0], #-0
    8528:	5001f300 	andpl	pc, r1, r0, lsl #6
    852c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    8540:	53000100 	movwpl	r0, #256	; 0x100
	...
    854c:	00530001 	subseq	r0, r3, r1
	...
    855c:	02000000 	andeq	r0, r0, #0
    8560:	00007d00 	andeq	r7, r0, r0, lsl #26
    8564:	00000000 	andeq	r0, r0, r0
    8568:	02000000 	andeq	r0, r0, #0
    856c:	00107d00 	andseq	r7, r0, r0, lsl #26
	...
    8584:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    8590:	00540001 	subseq	r0, r4, r1
    8594:	00000000 	andeq	r0, r0, r0
    8598:	01000000 	mrseq	r0, (UNDEF: 0)
    859c:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    85b0:	00010000 	andeq	r0, r1, r0
    85b4:	00000054 	andeq	r0, r0, r4, asr r0
    85b8:	00000000 	andeq	r0, r0, r0
    85bc:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    85c8:	00000002 	andeq	r0, r0, r2
	...
    85d4:	00020000 	andeq	r0, r2, r0
    85d8:	00009f30 	andeq	r9, r0, r0, lsr pc
    85dc:	00000000 	andeq	r0, r0, r0
    85e0:	00010000 	andeq	r0, r1, r0
    85e4:	00000053 	andeq	r0, r0, r3, asr r0
    85e8:	00000000 	andeq	r0, r0, r0
    85ec:	53000100 	movwpl	r0, #256	; 0x100
	...
    8604:	00010000 	andeq	r0, r1, r0
    8608:	00000053 	andeq	r0, r0, r3, asr r0
    860c:	00000000 	andeq	r0, r0, r0
    8610:	03000500 	movweq	r0, #1280	; 0x500
    8614:	38008b18 	stmdacc	r0, {r3, r4, r8, r9, fp, pc}
	...
    8620:	00530001 	subseq	r0, r3, r1
	...
    8630:	02000000 	andeq	r0, r0, #0
    8634:	00007d00 	andeq	r7, r0, r0, lsl #26
    8638:	00000000 	andeq	r0, r0, r0
    863c:	02000000 	andeq	r0, r0, #0
    8640:	00107d00 	andseq	r7, r0, r0, lsl #26
	...
    8658:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    8664:	00540001 	subseq	r0, r4, r1
    8668:	00000000 	andeq	r0, r0, r0
    866c:	01000000 	mrseq	r0, (UNDEF: 0)
    8670:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    868c:	00510001 	subseq	r0, r1, r1
    8690:	00000000 	andeq	r0, r0, r0
    8694:	01000000 	mrseq	r0, (UNDEF: 0)
    8698:	00005500 	andeq	r5, r0, r0, lsl #10
    869c:	00000000 	andeq	r0, r0, r0
    86a0:	00020000 	andeq	r0, r2, r0
    86a4:	00003874 	andeq	r3, r0, r4, ror r8
    86a8:	00000000 	andeq	r0, r0, r0
    86ac:	00010000 	andeq	r0, r1, r0
    86b0:	00000055 	andeq	r0, r0, r5, asr r0
    86b4:	00000000 	andeq	r0, r0, r0
    86b8:	74000200 	strvc	r0, [r0], #-512	; 0xfffffe00
    86bc:	00000038 	andeq	r0, r0, r8, lsr r0
	...
    86d0:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    86dc:	00540001 	subseq	r0, r4, r1
	...
    86f4:	52000100 	andpl	r0, r0, #0, 2
	...
    8700:	00520001 	subseq	r0, r2, r1
    8704:	00000000 	andeq	r0, r0, r0
    8708:	01000000 	mrseq	r0, (UNDEF: 0)
    870c:	00005200 	andeq	r5, r0, r0, lsl #4
	...
    8720:	00530001 	subseq	r0, r3, r1
    8724:	00000000 	andeq	r0, r0, r0
    8728:	03000000 	movweq	r0, #0
	...
    8738:	02000000 	andeq	r0, r0, #0
    873c:	009f3000 	addseq	r3, pc, r0
    8740:	00000000 	andeq	r0, r0, r0
    8744:	01000000 	mrseq	r0, (UNDEF: 0)
    8748:	00005600 	andeq	r5, r0, r0, lsl #12
    874c:	00000000 	andeq	r0, r0, r0
    8750:	00020000 	andeq	r0, r2, r0
    8754:	00009f30 	andeq	r9, r0, r0, lsr pc
    8758:	00000000 	andeq	r0, r0, r0
    875c:	00010000 	andeq	r0, r1, r0
    8760:	00000056 	andeq	r0, r0, r6, asr r0
	...
    8770:	01000000 	mrseq	r0, (UNDEF: 0)
    8774:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    8784:	00020000 	andeq	r0, r2, r0
    8788:	0000007d 	andeq	r0, r0, sp, ror r0
    878c:	00000000 	andeq	r0, r0, r0
    8790:	00020000 	andeq	r0, r2, r0
    8794:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    87ac:	00500001 	subseq	r0, r0, r1
    87b0:	00000000 	andeq	r0, r0, r0
    87b4:	01000000 	mrseq	r0, (UNDEF: 0)
    87b8:	00005400 	andeq	r5, r0, r0, lsl #8
    87bc:	00000000 	andeq	r0, r0, r0
    87c0:	00010000 	andeq	r0, r1, r0
    87c4:	00000054 	andeq	r0, r0, r4, asr r0
	...
    87d4:	01000000 	mrseq	r0, (UNDEF: 0)
    87d8:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    87ec:	00540001 	subseq	r0, r4, r1
	...
    8800:	01000000 	mrseq	r0, (UNDEF: 0)
    8804:	00005000 	andeq	r5, r0, r0
    8808:	00000000 	andeq	r0, r0, r0
    880c:	00010000 	andeq	r0, r1, r0
    8810:	00000050 	andeq	r0, r0, r0, asr r0
	...
    8820:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    882c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    8830:	00000008 	andeq	r0, r0, r8
	...
    8844:	01000000 	mrseq	r0, (UNDEF: 0)
    8848:	00005000 	andeq	r5, r0, r0
    884c:	00000000 	andeq	r0, r0, r0
    8850:	00010000 	andeq	r0, r1, r0
    8854:	00000054 	andeq	r0, r0, r4, asr r0
    8858:	00000000 	andeq	r0, r0, r0
    885c:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    8870:	00010000 	andeq	r0, r1, r0
    8874:	00000054 	andeq	r0, r0, r4, asr r0
	...
    8884:	01000000 	mrseq	r0, (UNDEF: 0)
    8888:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    8898:	00020000 	andeq	r0, r2, r0
    889c:	0000007d 	andeq	r0, r0, sp, ror r0
    88a0:	00000000 	andeq	r0, r0, r0
    88a4:	00020000 	andeq	r0, r2, r0
    88a8:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    88c0:	00500001 	subseq	r0, r0, r1
    88c4:	00000000 	andeq	r0, r0, r0
    88c8:	01000000 	mrseq	r0, (UNDEF: 0)
    88cc:	00005400 	andeq	r5, r0, r0, lsl #8
    88d0:	00000000 	andeq	r0, r0, r0
    88d4:	00010000 	andeq	r0, r1, r0
    88d8:	00000054 	andeq	r0, r0, r4, asr r0
	...
    88e8:	01000000 	mrseq	r0, (UNDEF: 0)
    88ec:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    8900:	00540001 	subseq	r0, r4, r1
	...
    8914:	01000000 	mrseq	r0, (UNDEF: 0)
    8918:	00005000 	andeq	r5, r0, r0
    891c:	00000000 	andeq	r0, r0, r0
    8920:	00010000 	andeq	r0, r1, r0
    8924:	00000050 	andeq	r0, r0, r0, asr r0
	...
    8934:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    8940:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    8944:	00000008 	andeq	r0, r0, r8
	...
    8958:	01000000 	mrseq	r0, (UNDEF: 0)
    895c:	00005000 	andeq	r5, r0, r0
    8960:	00000000 	andeq	r0, r0, r0
    8964:	00010000 	andeq	r0, r1, r0
    8968:	00000054 	andeq	r0, r0, r4, asr r0
    896c:	00000000 	andeq	r0, r0, r0
    8970:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    8984:	00010000 	andeq	r0, r1, r0
    8988:	00000054 	andeq	r0, r0, r4, asr r0
	...
    8998:	01000000 	mrseq	r0, (UNDEF: 0)
    899c:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    89ac:	00020000 	andeq	r0, r2, r0
    89b0:	0000007d 	andeq	r0, r0, sp, ror r0
    89b4:	00000000 	andeq	r0, r0, r0
    89b8:	00020000 	andeq	r0, r2, r0
    89bc:	0000187d 	andeq	r1, r0, sp, ror r8
    89c0:	00000000 	andeq	r0, r0, r0
    89c4:	00020000 	andeq	r0, r2, r0
    89c8:	0000007d 	andeq	r0, r0, sp, ror r0
    89cc:	00000000 	andeq	r0, r0, r0
    89d0:	00020000 	andeq	r0, r2, r0
    89d4:	0000187d 	andeq	r1, r0, sp, ror r8
	...
    89f0:	00500001 	subseq	r0, r0, r1
    89f4:	00000000 	andeq	r0, r0, r0
    89f8:	01000000 	mrseq	r0, (UNDEF: 0)
    89fc:	00005400 	andeq	r5, r0, r0, lsl #8
    8a00:	00000000 	andeq	r0, r0, r0
    8a04:	00010000 	andeq	r0, r1, r0
    8a08:	00000050 	andeq	r0, r0, r0, asr r0
    8a0c:	00000000 	andeq	r0, r0, r0
    8a10:	f3000400 	vshl.u8	d0, d0, d0
    8a14:	009f5001 	addseq	r5, pc, r1
    8a18:	00000000 	andeq	r0, r0, r0
    8a1c:	01000000 	mrseq	r0, (UNDEF: 0)
    8a20:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    8a34:	00010000 	andeq	r0, r1, r0
    8a38:	00000050 	andeq	r0, r0, r0, asr r0
    8a3c:	00000000 	andeq	r0, r0, r0
    8a40:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    8a58:	00550001 	subseq	r0, r5, r1
    8a5c:	00000000 	andeq	r0, r0, r0
    8a60:	01000000 	mrseq	r0, (UNDEF: 0)
    8a64:	00005500 	andeq	r5, r0, r0, lsl #10
	...
    8a78:	00010000 	andeq	r0, r1, r0
    8a7c:	00000056 	andeq	r0, r0, r6, asr r0
    8a80:	00000000 	andeq	r0, r0, r0
    8a84:	56000100 	strpl	r0, [r0], -r0, lsl #2
	...
    8a9c:	00570001 	subseq	r0, r7, r1
    8aa0:	00000000 	andeq	r0, r0, r0
    8aa4:	01000000 	mrseq	r0, (UNDEF: 0)
    8aa8:	00005700 	andeq	r5, r0, r0, lsl #14
	...
    8abc:	00010000 	andeq	r0, r1, r0
    8ac0:	00000058 	andeq	r0, r0, r8, asr r0
    8ac4:	00000000 	andeq	r0, r0, r0
    8ac8:	58000100 	stmdapl	r0, {r8}
	...
    8ad4:	00000007 	andeq	r0, r0, r7
	...
    8ae4:	00010000 	andeq	r0, r1, r0
    8ae8:	00000050 	andeq	r0, r0, r0, asr r0
    8aec:	00000000 	andeq	r0, r0, r0
    8af0:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    8afc:	00500001 	subseq	r0, r0, r1
    8b00:	00000000 	andeq	r0, r0, r0
    8b04:	04000000 	streq	r0, [r0], #-0
    8b08:	5001f300 	andpl	pc, r1, r0, lsl #6
    8b0c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    8b10:	00000000 	andeq	r0, r0, r0
    8b14:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    8b2c:	00010000 	andeq	r0, r1, r0
    8b30:	00000053 	andeq	r0, r0, r3, asr r0
    8b34:	00000000 	andeq	r0, r0, r0
    8b38:	53000100 	movwpl	r0, #256	; 0x100
	...
    8b44:	00530001 	subseq	r0, r3, r1
    8b48:	00000000 	andeq	r0, r0, r0
    8b4c:	50000000 	andpl	r0, r0, r0
    8b50:	5210002b 	andspl	r0, r0, #43	; 0x2b
    8b54:	0210002b 	andseq	r0, r0, #43	; 0x2b
    8b58:	52007d00 	andpl	r7, r0, #0, 26
    8b5c:	6e10002b 	cdpvs	0, 1, cr0, cr0, cr11, {1}
    8b60:	0210002b 	andseq	r0, r0, #43	; 0x2b
    8b64:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    8b74:	002b5000 	eoreq	r5, fp, r0
    8b78:	002b5910 	eoreq	r5, fp, r0, lsl r9
    8b7c:	50000110 	andpl	r0, r0, r0, lsl r1
    8b80:	10002b59 	andne	r2, r0, r9, asr fp
    8b84:	10002b68 	andne	r2, r0, r8, ror #22
    8b88:	68540001 	ldmdavs	r4, {r0}^
    8b8c:	6e10002b 	cdpvs	0, 1, cr0, cr0, cr11, {1}
    8b90:	0410002b 	ldreq	r0, [r0], #-43	; 0xffffffd5
    8b94:	5001f300 	andpl	pc, r1, r0, lsl #6
    8b98:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    8b9c:	00000000 	andeq	r0, r0, r0
    8ba0:	00000100 	andeq	r0, r0, r0, lsl #2
    8ba4:	002b5200 	eoreq	r5, fp, r0, lsl #4
    8ba8:	002b6610 	eoreq	r6, fp, r0, lsl r6
    8bac:	30000210 	andcc	r0, r0, r0, lsl r2
    8bb0:	002b669f 	mlaeq	fp, pc, r6, r6	; <UNPREDICTABLE>
    8bb4:	002b6810 	eoreq	r6, fp, r0, lsl r8
    8bb8:	50000110 	andpl	r0, r0, r0, lsl r1
	...
    8bcc:	007d0002 	rsbseq	r0, sp, r2
	...
    8bd8:	107d0002 	rsbsne	r0, sp, r2
	...
    8bf0:	00500001 	subseq	r0, r0, r1
    8bf4:	00000000 	andeq	r0, r0, r0
    8bf8:	01000000 	mrseq	r0, (UNDEF: 0)
    8bfc:	00005500 	andeq	r5, r0, r0, lsl #10
	...
    8c14:	00510001 	subseq	r0, r1, r1
    8c18:	00000000 	andeq	r0, r0, r0
    8c1c:	01000000 	mrseq	r0, (UNDEF: 0)
    8c20:	00005400 	andeq	r5, r0, r0, lsl #8
    8c24:	00000000 	andeq	r0, r0, r0
    8c28:	00040000 	andeq	r0, r4, r0
    8c2c:	9f5101f3 	svcls	0x005101f3
	...
    8c4c:	00010000 	andeq	r0, r1, r0
    8c50:	00000054 	andeq	r0, r0, r4, asr r0
    8c54:	00000000 	andeq	r0, r0, r0
    8c58:	75000200 	strvc	r0, [r0, #-512]	; 0xfffffe00
	...
    8c64:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    8c70:	00750002 	rsbseq	r0, r5, r2
	...
    8c7c:	00540001 	subseq	r0, r4, r1
    8c80:	00000000 	andeq	r0, r0, r0
    8c84:	01000000 	mrseq	r0, (UNDEF: 0)
    8c88:	00005400 	andeq	r5, r0, r0, lsl #8
    8c8c:	00000000 	andeq	r0, r0, r0
    8c90:	00020000 	andeq	r0, r2, r0
    8c94:	00000075 	andeq	r0, r0, r5, ror r0
	...
    8ca8:	00010000 	andeq	r0, r1, r0
    8cac:	00000050 	andeq	r0, r0, r0, asr r0
    8cb0:	00000000 	andeq	r0, r0, r0
    8cb4:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    8cc0:	00010102 	andeq	r0, r1, r2, lsl #2
    8cc4:	00010100 	andeq	r0, r1, r0, lsl #2
	...
    8cd0:	00020000 	andeq	r0, r2, r0
    8cd4:	00009f30 	andeq	r9, r0, r0, lsr pc
    8cd8:	00000000 	andeq	r0, r0, r0
    8cdc:	00020000 	andeq	r0, r2, r0
    8ce0:	00009f31 	andeq	r9, r0, r1, lsr pc
    8ce4:	00000000 	andeq	r0, r0, r0
    8ce8:	00020000 	andeq	r0, r2, r0
    8cec:	00009f30 	andeq	r9, r0, r0, lsr pc
    8cf0:	00000000 	andeq	r0, r0, r0
    8cf4:	00020000 	andeq	r0, r2, r0
    8cf8:	00009f31 	andeq	r9, r0, r1, lsr pc
    8cfc:	00000000 	andeq	r0, r0, r0
    8d00:	00020000 	andeq	r0, r2, r0
    8d04:	00009f30 	andeq	r9, r0, r0, lsr pc
	...
    8d18:	00010000 	andeq	r0, r1, r0
    8d1c:	00000050 	andeq	r0, r0, r0, asr r0
    8d20:	00000000 	andeq	r0, r0, r0
    8d24:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    8d38:	007d0002 	rsbseq	r0, sp, r2
	...
    8d44:	107d0002 	rsbsne	r0, sp, r2
	...
    8d5c:	00010000 	andeq	r0, r1, r0
    8d60:	00000050 	andeq	r0, r0, r0, asr r0
    8d64:	00000000 	andeq	r0, r0, r0
    8d68:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    8d74:	00540001 	subseq	r0, r4, r1
	...
    8d88:	01000000 	mrseq	r0, (UNDEF: 0)
    8d8c:	00005400 	andeq	r5, r0, r0, lsl #8
    8d90:	00000000 	andeq	r0, r0, r0
    8d94:	00010000 	andeq	r0, r1, r0
    8d98:	00000054 	andeq	r0, r0, r4, asr r0
    8d9c:	00000000 	andeq	r0, r0, r0
    8da0:	00000200 	andeq	r0, r0, r0, lsl #4
    8da4:	00000202 	andeq	r0, r0, r2, lsl #4
    8da8:	00000000 	andeq	r0, r0, r0
    8dac:	02000000 	andeq	r0, r0, #0
    8db0:	009f3000 	addseq	r3, pc, r0
    8db4:	00000000 	andeq	r0, r0, r0
    8db8:	02000000 	andeq	r0, r0, #0
    8dbc:	009f3000 	addseq	r3, pc, r0
    8dc0:	00000000 	andeq	r0, r0, r0
    8dc4:	02000000 	andeq	r0, r0, #0
    8dc8:	009f3100 	addseq	r3, pc, r0, lsl #2
	...
    8ddc:	01000000 	mrseq	r0, (UNDEF: 0)
    8de0:	00005200 	andeq	r5, r0, r0, lsl #4
    8de4:	00000000 	andeq	r0, r0, r0
    8de8:	00010000 	andeq	r0, r1, r0
    8dec:	00000052 	andeq	r0, r0, r2, asr r0
    8df0:	00000000 	andeq	r0, r0, r0
    8df4:	0025d800 	eoreq	sp, r5, r0, lsl #16
    8df8:	0025da10 	eoreq	sp, r5, r0, lsl sl
    8dfc:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    8e00:	0025da00 	eoreq	sp, r5, r0, lsl #20
    8e04:	00269410 	eoreq	r9, r6, r0, lsl r4
    8e08:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    8e0c:	00000008 	andeq	r0, r0, r8
	...
    8e18:	0025d800 	eoreq	sp, r5, r0, lsl #16
    8e1c:	0025df10 	eoreq	sp, r5, r0, lsl pc
    8e20:	50000110 	andpl	r0, r0, r0, lsl r1
    8e24:	100025df 	ldrdne	r2, [r0], -pc	; <UNPREDICTABLE>
    8e28:	10002694 	mulne	r0, r4, r6
    8e2c:	00540001 	subseq	r0, r4, r1
	...
    8e38:	00263200 	eoreq	r3, r6, r0, lsl #4
    8e3c:	00264010 	eoreq	r4, r6, r0, lsl r0
    8e40:	53000110 	movwpl	r0, #272	; 0x110
	...
    8e4c:	10002488 	andne	r2, r0, r8, lsl #9
    8e50:	1000248c 	andne	r2, r0, ip, lsl #9
    8e54:	007d0002 	rsbseq	r0, sp, r2
    8e58:	1000248c 	andne	r2, r0, ip, lsl #9
    8e5c:	1000251e 	andne	r2, r0, lr, lsl r5
    8e60:	207d0002 	rsbscs	r0, sp, r2
	...
    8e70:	10002488 	andne	r2, r0, r8, lsl #9
    8e74:	100024a2 	andne	r2, r0, r2, lsr #9
    8e78:	a2500001 	subsge	r0, r0, #1
    8e7c:	1e100024 	cdpne	0, 1, cr0, cr0, cr4, {1}
    8e80:	01100025 	tsteq	r0, r5, lsr #32
    8e84:	00005800 	andeq	r5, r0, r0, lsl #16
	...
    8e90:	24880000 	strcs	r0, [r8], #0
    8e94:	24a01000 	strtcs	r1, [r0], #0
    8e98:	00011000 	andeq	r1, r1, r0
    8e9c:	0024a051 	eoreq	sl, r4, r1, asr r0
    8ea0:	00251e10 	eoreq	r1, r5, r0, lsl lr
    8ea4:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
	...
    8eb8:	10002488 	andne	r2, r0, r8, lsl #9
    8ebc:	1000249e 	mulne	r0, lr, r4
    8ec0:	9e520001 	cdpls	0, 5, cr0, cr2, cr1, {0}
    8ec4:	b2100024 	andslt	r0, r0, #36	; 0x24
    8ec8:	01100024 	tsteq	r0, r4, lsr #32
    8ecc:	24b25700 	ldrtcs	r5, [r2], #1792	; 0x700
    8ed0:	24bc1000 	ldrtcs	r1, [ip], #0
    8ed4:	00071000 	andeq	r1, r7, r0
    8ed8:	80808172 	addhi	r8, r0, r2, ror r1
    8edc:	bc9f7c80 	ldclt	12, cr7, [pc], {128}	; 0x80
    8ee0:	1e100024 	cdpne	0, 1, cr0, cr0, cr4, {1}
    8ee4:	04100025 	ldreq	r0, [r0], #-37	; 0xffffffdb
    8ee8:	5201f300 	andpl	pc, r1, #0, 6
    8eec:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    8ef8:	00248800 	eoreq	r8, r4, r0, lsl #16
    8efc:	0024a510 	eoreq	sl, r4, r0, lsl r5
    8f00:	53000110 	movwpl	r0, #272	; 0x110
    8f04:	100024a5 	andne	r2, r0, r5, lsr #9
    8f08:	1000251e 	andne	r2, r0, lr, lsl r5
    8f0c:	00590001 	subseq	r0, r9, r1
	...
    8f18:	88000000 	stmdahi	r0, {}	; <UNPREDICTABLE>
    8f1c:	e6100024 	ldr	r0, [r0], -r4, lsr #32
    8f20:	02100024 	andseq	r0, r0, #36	; 0x24
    8f24:	e6009100 	str	r9, [r0], -r0, lsl #2
    8f28:	fe100024 	cdp2	0, 1, cr0, cr0, cr4, {1}
    8f2c:	01100024 	tsteq	r0, r4, lsr #32
    8f30:	00005600 	andeq	r5, r0, r0, lsl #12
	...
    8f3c:	100024b2 			; <UNDEFINED> instruction: 0x100024b2
    8f40:	1000251e 	andne	r2, r0, lr, lsl r5
    8f44:	00570001 	subseq	r0, r7, r1
	...
    8f50:	0024bc00 	eoreq	fp, r4, r0, lsl #24
    8f54:	0024e010 	eoreq	lr, r4, r0, lsl r0
    8f58:	5c000110 	stfpls	f0, [r0], {16}
	...
    8f64:	10002838 	andne	r2, r0, r8, lsr r8
    8f68:	1000283a 	andne	r2, r0, sl, lsr r8
    8f6c:	007d0002 	rsbseq	r0, sp, r2
    8f70:	1000283a 	andne	r2, r0, sl, lsr r8
    8f74:	1000283c 	andne	r2, r0, ip, lsr r8
    8f78:	087d0002 	ldmdaeq	sp!, {r1}^
    8f7c:	1000283c 	andne	r2, r0, ip, lsr r8
    8f80:	10002852 	andne	r2, r0, r2, asr r8
    8f84:	107d0002 	rsbsne	r0, sp, r2
    8f88:	10002852 	andne	r2, r0, r2, asr r8
    8f8c:	10002854 	andne	r2, r0, r4, asr r8
    8f90:	087d0002 	ldmdaeq	sp!, {r1}^
    8f94:	10002854 	andne	r2, r0, r4, asr r8
    8f98:	1000285a 	andne	r2, r0, sl, asr r8
    8f9c:	107d0002 	rsbsne	r0, sp, r2
	...
    8fac:	10002838 	andne	r2, r0, r8, lsr r8
    8fb0:	10002847 	andne	r2, r0, r7, asr #16
    8fb4:	47500001 	ldrbmi	r0, [r0, -r1]
    8fb8:	5a100028 	bpl	409060 <__RAM_SIZE+0x309060>
    8fbc:	04100028 	ldreq	r0, [r0], #-40	; 0xffffffd8
    8fc0:	5001f300 	andpl	pc, r1, r0, lsl #6
    8fc4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    8fd0:	00283800 	eoreq	r3, r8, r0, lsl #16
    8fd4:	00284710 	eoreq	r4, r8, r0, lsl r7
    8fd8:	51000110 	tstpl	r0, r0, lsl r1
    8fdc:	10002847 	andne	r2, r0, r7, asr #16
    8fe0:	1000285a 	andne	r2, r0, sl, asr r8
    8fe4:	01f30004 	mvnseq	r0, r4
    8fe8:	00009f51 	andeq	r9, r0, r1, asr pc
	...
    8ff4:	28380000 	ldmdacs	r8!, {}	; <UNPREDICTABLE>
    8ff8:	28471000 	stmdacs	r7, {ip}^
    8ffc:	00011000 	andeq	r1, r1, r0
    9000:	00284752 	eoreq	r4, r8, r2, asr r7
    9004:	00285a10 	eoreq	r5, r8, r0, lsl sl
    9008:	f3000410 	vqshl.u8	d0, d0, d0
    900c:	009f5201 	addseq	r5, pc, r1, lsl #4
	...
    9018:	38000000 	stmdacc	r0, {}	; <UNPREDICTABLE>
    901c:	47100028 	ldrmi	r0, [r0, -r8, lsr #32]
    9020:	01100028 	tsteq	r0, r8, lsr #32
    9024:	28475300 	stmdacs	r7, {r8, r9, ip, lr}^
    9028:	285a1000 	ldmdacs	sl, {ip}^
    902c:	00041000 	andeq	r1, r4, r0
    9030:	9f5301f3 	svcls	0x005301f3
	...
    9040:	10002838 	andne	r2, r0, r8, lsr r8
    9044:	10002854 	andne	r2, r0, r4, asr r8
    9048:	00910002 	addseq	r0, r1, r2
    904c:	10002854 	andne	r2, r0, r4, asr r8
    9050:	1000285a 	andne	r2, r0, sl, asr r8
    9054:	00910002 	addseq	r0, r1, r2
	...
    9064:	10002838 	andne	r2, r0, r8, lsr r8
    9068:	10002854 	andne	r2, r0, r4, asr r8
    906c:	04910002 	ldreq	r0, [r1], #2
    9070:	10002854 	andne	r2, r0, r4, asr r8
    9074:	1000285a 	andne	r2, r0, sl, asr r8
    9078:	04910002 	ldreq	r0, [r1], #2
	...
    9088:	10002848 	andne	r2, r0, r8, asr #16
    908c:	1000284d 	andne	r2, r0, sp, asr #16
    9090:	54500001 	ldrbpl	r0, [r0], #-1
    9094:	58100028 	ldmdapl	r0, {r3, r5}
    9098:	01100028 	tsteq	r0, r8, lsr #32
    909c:	00005000 	andeq	r5, r0, r0
    90a0:	00000000 	andeq	r0, r0, r0
    90a4:	00010000 	andeq	r0, r1, r0
    90a8:	284e0000 	stmdacs	lr, {}^	; <UNPREDICTABLE>
    90ac:	28501000 	ldmdacs	r0, {ip}^
    90b0:	00021000 	andeq	r1, r2, r0
    90b4:	28589f31 	ldmdacs	r8, {r0, r4, r5, r8, r9, sl, fp, ip, pc}^
    90b8:	285a1000 	ldmdacs	sl, {ip}^
    90bc:	00031000 	andeq	r1, r3, r0
    90c0:	009fff09 	addseq	pc, pc, r9, lsl #30
    90c4:	00000000 	andeq	r0, r0, r0
    90c8:	94000000 	strls	r0, [r0], #-0
    90cc:	98100026 	ldmdals	r0, {r1, r2, r5}
    90d0:	02100026 	andseq	r0, r0, #38	; 0x26
    90d4:	98007d00 	stmdals	r0, {r8, sl, fp, ip, sp, lr}
    90d8:	9a100026 	bls	409178 <__RAM_SIZE+0x309178>
    90dc:	02100026 	andseq	r0, r0, #38	; 0x26
    90e0:	9a1c7d00 	bls	7284e8 <__RAM_SIZE+0x6284e8>
    90e4:	e6100026 	ldr	r0, [r0], -r6, lsr #32
    90e8:	02100026 	andseq	r0, r0, #38	; 0x26
    90ec:	e6307d00 	ldrt	r7, [r0], -r0, lsl #26
    90f0:	ea100026 	b	409190 <__RAM_SIZE+0x309190>
    90f4:	02100026 	andseq	r0, r0, #38	; 0x26
    90f8:	ea1c7d00 	b	728500 <__RAM_SIZE+0x628500>
    90fc:	f6100026 			; <UNDEFINED> instruction: 0xf6100026
    9100:	02100026 	andseq	r0, r0, #38	; 0x26
    9104:	00307d00 	eorseq	r7, r0, r0, lsl #26
	...
    9110:	94000000 	strls	r0, [r0], #-0
    9114:	a4100026 	ldrge	r0, [r0], #-38	; 0xffffffda
    9118:	01100026 	tsteq	r0, r6, lsr #32
    911c:	26a45000 	strtcs	r5, [r4], r0
    9120:	26f61000 	ldrbtcs	r1, [r6], r0
    9124:	00011000 	andeq	r1, r1, r0
    9128:	00000056 	andeq	r0, r0, r6, asr r0
	...
    9134:	00269400 	eoreq	r9, r6, r0, lsl #8
    9138:	0026a710 	eoreq	sl, r6, r0, lsl r7
    913c:	51000110 	tstpl	r0, r0, lsl r1
    9140:	100026a7 	andne	r2, r0, r7, lsr #13
    9144:	100026f6 	strdne	r2, [r0], -r6
    9148:	00570001 	subseq	r0, r7, r1
	...
    9154:	94000000 	strls	r0, [r0], #-0
    9158:	a7100026 	ldrge	r0, [r0, -r6, lsr #32]
    915c:	01100026 	tsteq	r0, r6, lsr #32
    9160:	26a75200 	strtcs	r5, [r7], r0, lsl #4
    9164:	26f61000 	ldrbtcs	r1, [r6], r0
    9168:	00011000 	andeq	r1, r1, r0
    916c:	00000055 	andeq	r0, r0, r5, asr r0
	...
    9178:	00269400 	eoreq	r9, r6, r0, lsl #8
    917c:	0026a710 	eoreq	sl, r6, r0, lsl r7
    9180:	53000110 	movwpl	r0, #272	; 0x110
    9184:	100026a7 	andne	r2, r0, r7, lsr #13
    9188:	100026f6 	strdne	r2, [r0], -r6
    918c:	00580001 	subseq	r0, r8, r1
	...
    9198:	94000000 	strls	r0, [r0], #-0
    919c:	ea100026 	b	40923c <__RAM_SIZE+0x30923c>
    91a0:	02100026 	andseq	r0, r0, #38	; 0x26
    91a4:	ea009100 	b	2d5ac <__HEAP_SIZE+0x2c5ac>
    91a8:	f6100026 			; <UNDEFINED> instruction: 0xf6100026
    91ac:	02100026 	andseq	r0, r0, #38	; 0x26
    91b0:	00009100 	andeq	r9, r0, r0, lsl #2
	...
    91bc:	94000000 	strls	r0, [r0], #-0
    91c0:	ea100026 	b	409260 <__RAM_SIZE+0x309260>
    91c4:	02100026 	andseq	r0, r0, #38	; 0x26
    91c8:	ea049100 	b	12d5d0 <__RAM_SIZE+0x2d5d0>
    91cc:	f6100026 			; <UNDEFINED> instruction: 0xf6100026
    91d0:	02100026 	andseq	r0, r0, #38	; 0x26
    91d4:	00049100 	andeq	r9, r4, r0, lsl #2
	...
    91e4:	b2000000 	andlt	r0, r0, #0
    91e8:	bd100026 	ldclt	0, cr0, [r0, #-152]	; 0xffffff68
    91ec:	01100026 	tsteq	r0, r6, lsr #32
    91f0:	26bd5000 	ldrtcs	r5, [sp], r0
    91f4:	26e21000 	strbtcs	r1, [r2], r0
    91f8:	00011000 	andeq	r1, r1, r0
    91fc:	0026ea54 	eoreq	lr, r6, r4, asr sl
    9200:	0026ec10 	eoreq	lr, r6, r0, lsl ip
    9204:	50000110 	andpl	r0, r0, r0, lsl r1
    9208:	100026ec 	andne	r2, r0, ip, ror #13
    920c:	100026f2 	strdne	r2, [r0], -r2	; <UNPREDICTABLE>
    9210:	00540001 	subseq	r0, r4, r1
	...
    9220:	0026a800 	eoreq	sl, r6, r0, lsl #16
    9224:	0026ae10 	eoreq	sl, r6, r0, lsl lr
    9228:	50000110 	andpl	r0, r0, r0, lsl r1
    922c:	100026ae 	andne	r2, r0, lr, lsr #13
    9230:	100026f2 	strdne	r2, [r0], -r2	; <UNPREDICTABLE>
    9234:	f2590001 	vhadd.s16	d16, d9, d1
    9238:	f6100026 			; <UNDEFINED> instruction: 0xf6100026
    923c:	01100026 	tsteq	r0, r6, lsr #32
    9240:	00005000 	andeq	r5, r0, r0
    9244:	00000000 	andeq	r0, r0, r0
    9248:	28100000 	ldmdacs	r0, {}	; <UNPREDICTABLE>
    924c:	28121000 	ldmdacs	r2, {ip}
    9250:	00021000 	andeq	r1, r2, r0
    9254:	2812007d 	ldmdacs	r2, {r0, r2, r3, r4, r5, r6}
    9258:	28141000 	ldmdacs	r4, {ip}
    925c:	00021000 	andeq	r1, r2, r0
    9260:	2814087d 	ldmdacs	r4, {r0, r2, r3, r4, r5, r6, fp}
    9264:	28361000 	ldmdacs	r6!, {ip}
    9268:	00021000 	andeq	r1, r2, r0
    926c:	2836207d 	ldmdacs	r6!, {r0, r2, r3, r4, r5, r6, sp}
    9270:	28381000 	ldmdacs	r8!, {ip}
    9274:	00021000 	andeq	r1, r2, r0
    9278:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    9284:	28100000 	ldmdacs	r0, {}	; <UNPREDICTABLE>
    9288:	282b1000 	stmdacs	fp!, {ip}
    928c:	00011000 	andeq	r1, r1, r0
    9290:	00282b50 	eoreq	r2, r8, r0, asr fp
    9294:	00283810 	eoreq	r3, r8, r0, lsl r8
    9298:	f3000410 	vqshl.u8	d0, d0, d0
    929c:	009f5001 	addseq	r5, pc, r1
	...
    92a8:	10000000 	andne	r0, r0, r0
    92ac:	2b100028 	blcs	409354 <__RAM_SIZE+0x309354>
    92b0:	01100028 	tsteq	r0, r8, lsr #32
    92b4:	282b5100 	stmdacs	fp!, {r8, ip, lr}
    92b8:	28381000 	ldmdacs	r8!, {ip}
    92bc:	00041000 	andeq	r1, r4, r0
    92c0:	9f5101f3 	svcls	0x005101f3
	...
    92d0:	10002810 	andne	r2, r0, r0, lsl r8
    92d4:	1000282b 	andne	r2, r0, fp, lsr #16
    92d8:	2b520001 	blcs	14892e4 <__RAM_SIZE+0x13892e4>
    92dc:	38100028 	ldmdacc	r0, {r3, r5}
    92e0:	04100028 	ldreq	r0, [r0], #-40	; 0xffffffd8
    92e4:	5201f300 	andpl	pc, r1, #0, 6
    92e8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    92f4:	00281000 	eoreq	r1, r8, r0
    92f8:	00282b10 	eoreq	r2, r8, r0, lsl fp
    92fc:	53000110 	movwpl	r0, #272	; 0x110
    9300:	1000282b 	andne	r2, r0, fp, lsr #16
    9304:	10002838 	andne	r2, r0, r8, lsr r8
    9308:	01f30004 	mvnseq	r0, r4
    930c:	00009f53 	andeq	r9, r0, r3, asr pc
	...
    9318:	1000282c 	andne	r2, r0, ip, lsr #16
    931c:	10002831 	andne	r2, r0, r1, lsr r8
    9320:	00500001 	subseq	r0, r0, r1
    9324:	00000000 	andeq	r0, r0, r0
    9328:	1e000000 	cdpne	0, 0, cr0, cr0, cr0, {0}
    932c:	22100025 	andscs	r0, r0, #37	; 0x25
    9330:	02100025 	andseq	r0, r0, #37	; 0x25
    9334:	22007d00 	andcs	r7, r0, #0, 26
    9338:	24100025 	ldrcs	r0, [r0], #-37	; 0xffffffdb
    933c:	02100025 	andseq	r0, r0, #37	; 0x25
    9340:	241c7d00 	ldrcs	r7, [ip], #-3328	; 0xfffff300
    9344:	64100025 	ldrvs	r0, [r0], #-37	; 0xffffffdb
    9348:	02100025 	andseq	r0, r0, #37	; 0x25
    934c:	64307d00 	ldrtvs	r7, [r0], #-3328	; 0xfffff300
    9350:	68100025 	ldmdavs	r0, {r0, r2, r5}
    9354:	02100025 	andseq	r0, r0, #37	; 0x25
    9358:	681c7d00 	ldmdavs	ip, {r8, sl, fp, ip, sp, lr}
    935c:	70100025 	andsvc	r0, r0, r5, lsr #32
    9360:	02100025 	andseq	r0, r0, #37	; 0x25
    9364:	00307d00 	eorseq	r7, r0, r0, lsl #26
	...
    937c:	00251e00 	eoreq	r1, r5, r0, lsl #28
    9380:	00253a10 	eoreq	r3, r5, r0, lsl sl
    9384:	50000110 	andpl	r0, r0, r0, lsl r1
    9388:	1000253a 	andne	r2, r0, sl, lsr r5
    938c:	10002562 	andne	r2, r0, r2, ror #10
    9390:	62550001 	subsvs	r0, r5, #1
    9394:	68100025 	ldmdavs	r0, {r0, r2, r5}
    9398:	04100025 	ldreq	r0, [r0], #-37	; 0xffffffdb
    939c:	5001f300 	andpl	pc, r1, r0, lsl #6
    93a0:	0025689f 	mlaeq	r5, pc, r8, r6	; <UNPREDICTABLE>
    93a4:	00256a10 	eoreq	r6, r5, r0, lsl sl
    93a8:	50000110 	andpl	r0, r0, r0, lsl r1
    93ac:	1000256a 	andne	r2, r0, sl, ror #10
    93b0:	1000256c 	andne	r2, r0, ip, ror #10
    93b4:	01f30004 	mvnseq	r0, r4
    93b8:	256c9f50 	strbcs	r9, [ip, #-3920]!	; 0xfffff0b0
    93bc:	256e1000 	strbcs	r1, [lr, #-0]!
    93c0:	00011000 	andeq	r1, r1, r0
    93c4:	00256e50 	eoreq	r6, r5, r0, asr lr
    93c8:	00257010 	eoreq	r7, r5, r0, lsl r0
    93cc:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
	...
    93e0:	1000251e 	andne	r2, r0, lr, lsl r5
    93e4:	10002538 	andne	r2, r0, r8, lsr r5
    93e8:	38510001 	ldmdacc	r1, {r0}^
    93ec:	62100025 	andsvs	r0, r0, #37	; 0x25
    93f0:	01100025 	tsteq	r0, r5, lsr #32
    93f4:	25625900 	strbcs	r5, [r2, #-2304]!	; 0xfffff700
    93f8:	25681000 	strbcs	r1, [r8, #-0]!
    93fc:	00041000 	andeq	r1, r4, r0
    9400:	9f5101f3 	svcls	0x005101f3
    9404:	10002568 	andne	r2, r0, r8, ror #10
    9408:	10002570 	andne	r2, r0, r0, ror r5
    940c:	00510001 	subseq	r0, r1, r1
	...
    941c:	1e000000 	cdpne	0, 0, cr0, cr0, cr0, {0}
    9420:	36100025 	ldrcc	r0, [r0], -r5, lsr #32
    9424:	01100025 	tsteq	r0, r5, lsr #32
    9428:	25365200 	ldrcs	r5, [r6, #-512]!	; 0xfffffe00
    942c:	25621000 	strbcs	r1, [r2, #-0]!
    9430:	00011000 	andeq	r1, r1, r0
    9434:	00256258 	eoreq	r6, r5, r8, asr r2
    9438:	00256810 	eoreq	r6, r5, r0, lsl r8
    943c:	f3000410 	vqshl.u8	d0, d0, d0
    9440:	689f5201 	ldmvs	pc, {r0, r9, ip, lr}	; <UNPREDICTABLE>
    9444:	70100025 	andsvc	r0, r0, r5, lsr #32
    9448:	01100025 	tsteq	r0, r5, lsr #32
    944c:	00005200 	andeq	r5, r0, r0, lsl #4
	...
    945c:	251e0000 	ldrcs	r0, [lr, #-0]
    9460:	253d1000 	ldrcs	r1, [sp, #-0]!
    9464:	00011000 	andeq	r1, r1, r0
    9468:	00253d53 	eoreq	r3, r5, r3, asr sp
    946c:	00256210 	eoreq	r6, r5, r0, lsl r2
    9470:	57000110 	smladpl	r0, r0, r1, r0
    9474:	10002562 	andne	r2, r0, r2, ror #10
    9478:	10002568 	andne	r2, r0, r8, ror #10
    947c:	01f30004 	mvnseq	r0, r4
    9480:	25689f53 	strbcs	r9, [r8, #-3923]!	; 0xfffff0ad
    9484:	25701000 	ldrbcs	r1, [r0, #-0]!
    9488:	00011000 	andeq	r1, r1, r0
    948c:	00000053 	andeq	r0, r0, r3, asr r0
	...
    9498:	00251e00 	eoreq	r1, r5, r0, lsl #28
    949c:	00256810 	eoreq	r6, r5, r0, lsl r8
    94a0:	91000210 	tstls	r0, r0, lsl r2
    94a4:	00256800 	eoreq	r6, r5, r0, lsl #16
    94a8:	00257010 	eoreq	r7, r5, r0, lsl r0
    94ac:	91000210 	tstls	r0, r0, lsl r2
	...
    94bc:	00251e00 	eoreq	r1, r5, r0, lsl #28
    94c0:	00256810 	eoreq	r6, r5, r0, lsl r8
    94c4:	91000210 	tstls	r0, r0, lsl r2
    94c8:	00256804 	eoreq	r6, r5, r4, lsl #16
    94cc:	00257010 	eoreq	r7, r5, r0, lsl r0
    94d0:	91000210 	tstls	r0, r0, lsl r2
    94d4:	00000004 	andeq	r0, r0, r4
	...
    94e0:	00251e00 	eoreq	r1, r5, r0, lsl #28
    94e4:	00256810 	eoreq	r6, r5, r0, lsl r8
    94e8:	91000210 	tstls	r0, r0, lsl r2
    94ec:	00256808 	eoreq	r6, r5, r8, lsl #16
    94f0:	00257010 	eoreq	r7, r5, r0, lsl r0
    94f4:	91000210 	tstls	r0, r0, lsl r2
    94f8:	00000008 	andeq	r0, r0, r8
	...
    9504:	00251e00 	eoreq	r1, r5, r0, lsl #28
    9508:	00256810 	eoreq	r6, r5, r0, lsl r8
    950c:	91000210 	tstls	r0, r0, lsl r2
    9510:	0025680c 	eoreq	r6, r5, ip, lsl #16
    9514:	00257010 	eoreq	r7, r5, r0, lsl r0
    9518:	91000210 	tstls	r0, r0, lsl r2
    951c:	0000000c 	andeq	r0, r0, ip
    9520:	00000000 	andeq	r0, r0, r0
    9524:	00000100 	andeq	r0, r0, r0, lsl #2
    9528:	00253400 	eoreq	r3, r5, r0, lsl #8
    952c:	00256210 	eoreq	r6, r5, r0, lsl r2
    9530:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    9534:	1000256e 	andne	r2, r0, lr, ror #10
    9538:	10002570 	andne	r2, r0, r0, ror r5
    953c:	00500001 	subseq	r0, r0, r1
	...
    954c:	02000000 	andeq	r0, r0, #0
    9550:	00007d00 	andeq	r7, r0, r0, lsl #26
    9554:	00000000 	andeq	r0, r0, r0
    9558:	02000000 	andeq	r0, r0, #0
    955c:	00087d00 	andeq	r7, r8, r0, lsl #26
    9560:	00000000 	andeq	r0, r0, r0
    9564:	02000000 	andeq	r0, r0, #0
    9568:	00187d00 	andseq	r7, r8, r0, lsl #26
    956c:	00000000 	andeq	r0, r0, r0
    9570:	02000000 	andeq	r0, r0, #0
    9574:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    958c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    9598:	6c910002 	ldcvs	0, cr0, [r1], {2}
	...
    95a4:	01f30004 	mvnseq	r0, r4
    95a8:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    95c0:	00510001 	subseq	r0, r1, r1
    95c4:	00000000 	andeq	r0, r0, r0
    95c8:	02000000 	andeq	r0, r0, #0
    95cc:	00709100 	rsbseq	r9, r0, r0, lsl #2
    95d0:	00000000 	andeq	r0, r0, r0
    95d4:	04000000 	streq	r0, [r0], #-0
    95d8:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    95dc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    95f0:	01000000 	mrseq	r0, (UNDEF: 0)
    95f4:	00005200 	andeq	r5, r0, r0, lsl #4
    95f8:	00000000 	andeq	r0, r0, r0
    95fc:	00010000 	andeq	r0, r1, r0
    9600:	00000054 	andeq	r0, r0, r4, asr r0
    9604:	00000000 	andeq	r0, r0, r0
    9608:	f3000400 	vshl.u8	d0, d0, d0
    960c:	009f5201 	addseq	r5, pc, r1, lsl #4
	...
    9624:	53000100 	movwpl	r0, #256	; 0x100
	...
    9630:	00520001 	subseq	r0, r2, r1
    9634:	00000000 	andeq	r0, r0, r0
    9638:	04000000 	streq	r0, [r0], #-0
    963c:	5301f300 	movwpl	pc, #4864	; 0x1300	; <UNPREDICTABLE>
    9640:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    9650:	01000000 	mrseq	r0, (UNDEF: 0)
    9654:	00005000 	andeq	r5, r0, r0
	...
    9664:	00020000 	andeq	r0, r2, r0
    9668:	0000007d 	andeq	r0, r0, sp, ror r0
    966c:	00000000 	andeq	r0, r0, r0
    9670:	00020000 	andeq	r0, r2, r0
    9674:	0000087d 	andeq	r0, r0, sp, ror r8
    9678:	00000000 	andeq	r0, r0, r0
    967c:	00020000 	andeq	r0, r2, r0
    9680:	0000187d 	andeq	r1, r0, sp, ror r8
    9684:	00000000 	andeq	r0, r0, r0
    9688:	00020000 	andeq	r0, r2, r0
    968c:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    96a4:	00500001 	subseq	r0, r0, r1
    96a8:	00000000 	andeq	r0, r0, r0
    96ac:	02000000 	andeq	r0, r0, #0
    96b0:	006c9100 	rsbeq	r9, ip, r0, lsl #2
    96b4:	00000000 	andeq	r0, r0, r0
    96b8:	04000000 	streq	r0, [r0], #-0
    96bc:	5001f300 	andpl	pc, r1, r0, lsl #6
    96c0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    96d4:	01000000 	mrseq	r0, (UNDEF: 0)
    96d8:	00005100 	andeq	r5, r0, r0, lsl #2
    96dc:	00000000 	andeq	r0, r0, r0
    96e0:	00020000 	andeq	r0, r2, r0
    96e4:	00007091 	muleq	r0, r1, r0
    96e8:	00000000 	andeq	r0, r0, r0
    96ec:	00040000 	andeq	r0, r4, r0
    96f0:	9f5101f3 	svcls	0x005101f3
	...
    9708:	00010000 	andeq	r0, r1, r0
    970c:	00000052 	andeq	r0, r0, r2, asr r0
    9710:	00000000 	andeq	r0, r0, r0
    9714:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    9720:	01f30004 	mvnseq	r0, r4
    9724:	00009f52 	andeq	r9, r0, r2, asr pc
	...
    973c:	00530001 	subseq	r0, r3, r1
    9740:	00000000 	andeq	r0, r0, r0
    9744:	01000000 	mrseq	r0, (UNDEF: 0)
    9748:	00005200 	andeq	r5, r0, r0, lsl #4
    974c:	00000000 	andeq	r0, r0, r0
    9750:	00040000 	andeq	r0, r4, r0
    9754:	9f5301f3 	svcls	0x005301f3
	...
    9768:	00010000 	andeq	r0, r1, r0
    976c:	00000050 	andeq	r0, r0, r0, asr r0
	...
    977c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    9788:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    978c:	00000010 	andeq	r0, r0, r0, lsl r0
	...
    97a0:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    97ac:	00540001 	subseq	r0, r4, r1
	...
    97c0:	01000000 	mrseq	r0, (UNDEF: 0)
    97c4:	00005100 	andeq	r5, r0, r0, lsl #2
    97c8:	00000000 	andeq	r0, r0, r0
    97cc:	00010000 	andeq	r0, r1, r0
    97d0:	00000055 	andeq	r0, r0, r5, asr r0
    97d4:	00000000 	andeq	r0, r0, r0
    97d8:	00000100 	andeq	r0, r0, r0, lsl #2
	...
    97e4:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    97f0:	00540001 	subseq	r0, r4, r1
	...
    9800:	02000000 	andeq	r0, r0, #0
    9804:	00007d00 	andeq	r7, r0, r0, lsl #26
    9808:	00000000 	andeq	r0, r0, r0
    980c:	02000000 	andeq	r0, r0, #0
    9810:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    9828:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    9834:	00540001 	subseq	r0, r4, r1
    9838:	00000000 	andeq	r0, r0, r0
    983c:	04000000 	streq	r0, [r0], #-0
    9840:	5001f300 	andpl	pc, r1, r0, lsl #6
    9844:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    9848:	00000000 	andeq	r0, r0, r0
    984c:	00000100 	andeq	r0, r0, r0, lsl #2
	...
    9858:	01000000 	mrseq	r0, (UNDEF: 0)
    985c:	00005000 	andeq	r5, r0, r0
    9860:	00000000 	andeq	r0, r0, r0
    9864:	00010000 	andeq	r0, r1, r0
    9868:	00000054 	andeq	r0, r0, r4, asr r0
    986c:	00000000 	andeq	r0, r0, r0
    9870:	f3000400 	vshl.u8	d0, d0, d0
    9874:	009f5001 	addseq	r5, pc, r1
	...
    9888:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    989c:	007d0002 	rsbseq	r0, sp, r2
	...
    98a8:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    98c4:	00010000 	andeq	r0, r1, r0
    98c8:	00000050 	andeq	r0, r0, r0, asr r0
    98cc:	00000000 	andeq	r0, r0, r0
    98d0:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    98dc:	01f30004 	mvnseq	r0, r4
    98e0:	00009f50 	andeq	r9, r0, r0, asr pc
    98e4:	00000000 	andeq	r0, r0, r0
    98e8:	00010000 	andeq	r0, r1, r0
    98ec:	00000054 	andeq	r0, r0, r4, asr r0
    98f0:	00000000 	andeq	r0, r0, r0
    98f4:	f3000400 	vshl.u8	d0, d0, d0
    98f8:	009f5001 	addseq	r5, pc, r1
	...
    990c:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    9918:	00000002 	andeq	r0, r0, r2
	...
    9928:	00010000 	andeq	r0, r1, r0
    992c:	00000050 	andeq	r0, r0, r0, asr r0
    9930:	00000000 	andeq	r0, r0, r0
    9934:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    9940:	01f30004 	mvnseq	r0, r4
    9944:	00009f50 	andeq	r9, r0, r0, asr pc
    9948:	00000000 	andeq	r0, r0, r0
    994c:	00010000 	andeq	r0, r1, r0
    9950:	00000054 	andeq	r0, r0, r4, asr r0
    9954:	00000000 	andeq	r0, r0, r0
    9958:	f3000400 	vshl.u8	d0, d0, d0
    995c:	009f5001 	addseq	r5, pc, r1
    9960:	00000000 	andeq	r0, r0, r0
    9964:	58000000 	stmdapl	r0, {}	; <UNPREDICTABLE>
    9968:	5a100032 	bpl	409a38 <__RAM_SIZE+0x309a38>
    996c:	02100032 	andseq	r0, r0, #50	; 0x32
    9970:	5a007d00 	bpl	28d78 <__HEAP_SIZE+0x27d78>
    9974:	5c100032 	ldcpl	0, cr0, [r0], {50}	; 0x32
    9978:	02100032 	andseq	r0, r0, #50	; 0x32
    997c:	5c0c7d00 	stcpl	13, cr7, [ip], {-0}
    9980:	6c100032 	ldcvs	0, cr0, [r0], {50}	; 0x32
    9984:	02100032 	andseq	r0, r0, #50	; 0x32
    9988:	6c187d00 	ldcvs	13, cr7, [r8], {-0}
    998c:	6e100032 	mrcvs	0, 0, r0, cr0, cr2, {1}
    9990:	02100032 	andseq	r0, r0, #50	; 0x32
    9994:	6e0c7d00 	cdpvs	13, 0, cr7, cr12, cr0, {0}
    9998:	b8100032 	ldmdalt	r0, {r1, r4, r5}
    999c:	02100032 	andseq	r0, r0, #50	; 0x32
    99a0:	00187d00 	andseq	r7, r8, r0, lsl #26
    99a4:	00000000 	andeq	r0, r0, r0
    99a8:	84000000 	strhi	r0, [r0], #-0
    99ac:	86100030 			; <UNDEFINED> instruction: 0x86100030
    99b0:	02100030 	andseq	r0, r0, #48	; 0x30
    99b4:	86007d00 	strhi	r7, [r0], -r0, lsl #26
    99b8:	b4100030 	ldrlt	r0, [r0], #-48	; 0xffffffd0
    99bc:	02100030 	andseq	r0, r0, #48	; 0x30
    99c0:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    99cc:	00308a00 	eorseq	r8, r0, r0, lsl #20
    99d0:	00309310 	eorseq	r9, r0, r0, lsl r3
    99d4:	73000210 	movwvc	r0, #528	; 0x210
	...
    99e0:	00000100 	andeq	r0, r0, r0, lsl #2
    99e4:	00309e00 	eorseq	r9, r0, r0, lsl #28
    99e8:	0030aa10 	eorseq	sl, r0, r0, lsl sl
    99ec:	53000110 	movwpl	r0, #272	; 0x110
    99f0:	100030aa 	andne	r3, r0, sl, lsr #1
    99f4:	100030b4 	strhne	r3, [r0], -r4
    99f8:	a8030005 	stmdage	r3, {r0, r2}
    99fc:	0038008b 	eorseq	r0, r8, fp, lsl #1
    9a00:	00000000 	andeq	r0, r0, r0
    9a04:	48000000 	stmdami	r0, {}	; <UNPREDICTABLE>
    9a08:	4a100031 	bmi	409ad4 <__RAM_SIZE+0x309ad4>
    9a0c:	02100031 	andseq	r0, r0, #49	; 0x31
    9a10:	4a007d00 	bmi	28e18 <__HEAP_SIZE+0x27e18>
    9a14:	4c100031 	ldcmi	0, cr0, [r0], {49}	; 0x31
    9a18:	02100031 	andseq	r0, r0, #49	; 0x31
    9a1c:	4c0c7d00 	stcmi	13, cr7, [ip], {-0}
    9a20:	3a100031 	bcc	409aec <__RAM_SIZE+0x309aec>
    9a24:	02100032 	andseq	r0, r0, #50	; 0x32
    9a28:	3a287d00 	bcc	a28e30 <__RAM_SIZE+0x928e30>
    9a2c:	40100032 	andsmi	r0, r0, r2, lsr r0
    9a30:	02100032 	andseq	r0, r0, #50	; 0x32
    9a34:	000c7d00 	andeq	r7, ip, r0, lsl #26
	...
    9a40:	00318000 	eorseq	r8, r1, r0
    9a44:	00323810 	eorseq	r3, r2, r0, lsl r8
    9a48:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
	...
    9a60:	10003192 	mulne	r0, r2, r1
    9a64:	100031be 			; <UNDEFINED> instruction: 0x100031be
    9a68:	be500001 	cdplt	0, 5, cr0, cr0, cr1, {0}
    9a6c:	f0100031 			; <UNDEFINED> instruction: 0xf0100031
    9a70:	01100031 	tsteq	r0, r1, lsr r0
    9a74:	31f05500 	mvnscc	r5, r0, lsl #10
    9a78:	32161000 	andscc	r1, r6, #0
    9a7c:	00011000 	andeq	r1, r1, r0
    9a80:	00321650 	eorseq	r1, r2, r0, asr r6
    9a84:	00321c10 	eorseq	r1, r2, r0, lsl ip
    9a88:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
    9a8c:	1000321c 	andne	r3, r0, ip, lsl r2
    9a90:	10003232 	andne	r3, r0, r2, lsr r2
    9a94:	32500001 	subscc	r0, r0, #1
    9a98:	38100032 	ldmdacc	r0, {r1, r4, r5}
    9a9c:	01100032 	tsteq	r0, r2, lsr r0
    9aa0:	00005500 	andeq	r5, r0, r0, lsl #10
    9aa4:	00000000 	andeq	r0, r0, r0
    9aa8:	00010000 	andeq	r0, r1, r0
    9aac:	10003174 	andne	r3, r0, r4, ror r1
    9ab0:	1000317e 	andne	r3, r0, lr, ror r1
    9ab4:	64910003 	ldrvs	r0, [r1], #3
    9ab8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    9abc:	00000000 	andeq	r0, r0, r0
    9ac0:	002fd400 	eoreq	sp, pc, r0, lsl #8
    9ac4:	002fd610 	eoreq	sp, pc, r0, lsl r6	; <UNPREDICTABLE>
    9ac8:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    9acc:	002fd600 	eoreq	sp, pc, r0, lsl #12
    9ad0:	00301c10 	eorseq	r1, r0, r0, lsl ip
    9ad4:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    9ad8:	00000008 	andeq	r0, r0, r8
	...
    9af4:	002fd400 	eoreq	sp, pc, r0, lsl #8
    9af8:	002fe810 	eoreq	lr, pc, r0, lsl r8	; <UNPREDICTABLE>
    9afc:	50000110 	andpl	r0, r0, r0, lsl r1
    9b00:	10002fe8 	andne	r2, r0, r8, ror #31
    9b04:	10002fea 	andne	r2, r0, sl, ror #31
    9b08:	01f30004 	mvnseq	r0, r4
    9b0c:	2fea9f50 	svccs	0x00ea9f50
    9b10:	2ff01000 	svccs	0x00f01000
    9b14:	00011000 	andeq	r1, r1, r0
    9b18:	002ff050 	eoreq	pc, pc, r0, asr r0	; <UNPREDICTABLE>
    9b1c:	002ff310 	eoreq	pc, pc, r0, lsl r3	; <UNPREDICTABLE>
    9b20:	71000310 	tstvc	r0, r0, lsl r3
    9b24:	2ff39f7c 	svccs	0x00f39f7c
    9b28:	2ff81000 	svccs	0x00f81000
    9b2c:	00041000 	andeq	r1, r4, r0
    9b30:	9f5001f3 	svcls	0x005001f3
    9b34:	10002ff8 	strdne	r2, [r0], -r8
    9b38:	10003006 	andne	r3, r0, r6
    9b3c:	06500001 	ldrbeq	r0, [r0], -r1
    9b40:	09100030 	ldmdbeq	r0, {r4, r5}
    9b44:	03100030 	tsteq	r0, #48	; 0x30
    9b48:	9f7c7100 	svcls	0x007c7100
    9b4c:	10003009 	andne	r3, r0, r9
    9b50:	1000300e 	andne	r3, r0, lr
    9b54:	01f30004 	mvnseq	r0, r4
    9b58:	300e9f50 	andcc	r9, lr, r0, asr pc
    9b5c:	30101000 	andscc	r1, r0, r0
    9b60:	00011000 	andeq	r1, r1, r0
    9b64:	00301050 	eorseq	r1, r0, r0, asr r0
    9b68:	00301c10 	eorseq	r1, r0, r0, lsl ip
    9b6c:	f3000410 	vqshl.u8	d0, d0, d0
    9b70:	009f5001 	addseq	r5, pc, r1
	...
    9b90:	002fd400 	eoreq	sp, pc, r0, lsl #8
    9b94:	002fe810 	eoreq	lr, pc, r0, lsl r8	; <UNPREDICTABLE>
    9b98:	51000110 	tstpl	r0, r0, lsl r1
    9b9c:	10002fe8 	andne	r2, r0, r8, ror #31
    9ba0:	10002fea 	andne	r2, r0, sl, ror #31
    9ba4:	01f30004 	mvnseq	r0, r4
    9ba8:	2fea9f51 	svccs	0x00ea9f51
    9bac:	2fec1000 	svccs	0x00ec1000
    9bb0:	00011000 	andeq	r1, r1, r0
    9bb4:	002fec51 	eoreq	lr, pc, r1, asr ip	; <UNPREDICTABLE>
    9bb8:	002ff010 	eoreq	pc, pc, r0, lsl r0	; <UNPREDICTABLE>
    9bbc:	70000210 	andvc	r0, r0, r0, lsl r2
    9bc0:	002ff004 	eoreq	pc, pc, r4
    9bc4:	002ff310 	eoreq	pc, pc, r0, lsl r3	; <UNPREDICTABLE>
    9bc8:	71000210 	tstvc	r0, r0, lsl r2
    9bcc:	002ff300 	eoreq	pc, pc, r0, lsl #6
    9bd0:	002ff810 	eoreq	pc, pc, r0, lsl r8	; <UNPREDICTABLE>
    9bd4:	f3000410 	vqshl.u8	d0, d0, d0
    9bd8:	f89f5101 			; <UNDEFINED> instruction: 0xf89f5101
    9bdc:	0210002f 	andseq	r0, r0, #47	; 0x2f
    9be0:	01100030 	tsteq	r0, r0, lsr r0
    9be4:	30025100 	andcc	r5, r2, r0, lsl #2
    9be8:	30061000 	andcc	r1, r6, r0
    9bec:	00021000 	andeq	r1, r2, r0
    9bf0:	30060470 	andcc	r0, r6, r0, ror r4
    9bf4:	30091000 	andcc	r1, r9, r0
    9bf8:	00021000 	andeq	r1, r2, r0
    9bfc:	30090071 	andcc	r0, r9, r1, ror r0
    9c00:	300e1000 	andcc	r1, lr, r0
    9c04:	00041000 	andeq	r1, r4, r0
    9c08:	9f5101f3 	svcls	0x005101f3
    9c0c:	1000300e 	andne	r3, r0, lr
    9c10:	1000301c 	andne	r3, r0, ip, lsl r0
    9c14:	00510001 	subseq	r0, r1, r1
	...
    9c28:	002fd400 	eoreq	sp, pc, r0, lsl #8
    9c2c:	002fe010 	eoreq	lr, pc, r0, lsl r0	; <UNPREDICTABLE>
    9c30:	52000110 	andpl	r0, r0, #16, 2
    9c34:	10002fe0 	andne	r2, r0, r0, ror #31
    9c38:	10002ff8 	strdne	r2, [r0], -r8
    9c3c:	01f30004 	mvnseq	r0, r4
    9c40:	2ff89f52 	svccs	0x00f89f52
    9c44:	30091000 	andcc	r1, r9, r0
    9c48:	00011000 	andeq	r1, r1, r0
    9c4c:	00300952 	eorseq	r0, r0, r2, asr r9
    9c50:	00300e10 	eorseq	r0, r0, r0, lsl lr
    9c54:	f3000410 	vqshl.u8	d0, d0, d0
    9c58:	0e9f5201 	cdpeq	2, 9, cr5, cr15, cr1, {0}
    9c5c:	1c100030 	ldcne	0, cr0, [r0], {48}	; 0x30
    9c60:	01100030 	tsteq	r0, r0, lsr r0
    9c64:	00005200 	andeq	r5, r0, r0, lsl #4
	...
    9c78:	10002fd4 	ldrdne	r2, [r0], -r4
    9c7c:	10002fe2 	andne	r2, r0, r2, ror #31
    9c80:	e2530001 	subs	r0, r3, #1
    9c84:	f810002f 			; <UNDEFINED> instruction: 0xf810002f
    9c88:	0410002f 	ldreq	r0, [r0], #-47	; 0xffffffd1
    9c8c:	5301f300 	movwpl	pc, #4864	; 0x1300	; <UNPREDICTABLE>
    9c90:	002ff89f 	mlaeq	pc, pc, r8, pc	; <UNPREDICTABLE>
    9c94:	00300410 	eorseq	r0, r0, r0, lsl r4
    9c98:	53000110 	movwpl	r0, #272	; 0x110
    9c9c:	10003004 	andne	r3, r0, r4
    9ca0:	1000300e 	andne	r3, r0, lr
    9ca4:	01f30004 	mvnseq	r0, r4
    9ca8:	300e9f53 	andcc	r9, lr, r3, asr pc
    9cac:	301c1000 	andscc	r1, ip, r0
    9cb0:	00011000 	andeq	r1, r1, r0
    9cb4:	00000053 	andeq	r0, r0, r3, asr r0
    9cb8:	00000000 	andeq	r0, r0, r0
    9cbc:	00000100 	andeq	r0, r0, r0, lsl #2
    9cc0:	d6000000 	strle	r0, [r0], -r0
    9cc4:	e810002f 	ldmda	r0, {r0, r1, r2, r3, r5}
    9cc8:	0210002f 	andseq	r0, r0, #47	; 0x2f
    9ccc:	ea9f3000 	b	fe7d5cd4 <__StackTop+0xc66d5cd4>
    9cd0:	1010002f 	andsne	r0, r0, pc, lsr #32
    9cd4:	02100030 	andseq	r0, r0, #48	; 0x30
    9cd8:	109f3000 	addsne	r3, pc, r0
    9cdc:	1c100030 	ldcne	0, cr0, [r0], {48}	; 0x30
    9ce0:	02100030 	andseq	r0, r0, #48	; 0x30
    9ce4:	009f3100 	addseq	r3, pc, r0, lsl #2
    9ce8:	00000000 	andeq	r0, r0, r0
    9cec:	b4000000 	strlt	r0, [r0], #-0
    9cf0:	b6100030 			; <UNDEFINED> instruction: 0xb6100030
    9cf4:	02100030 	andseq	r0, r0, #48	; 0x30
    9cf8:	b6007d00 	strlt	r7, [r0], -r0, lsl #26
    9cfc:	e0100030 	ands	r0, r0, r0, lsr r0
    9d00:	02100030 	andseq	r0, r0, #48	; 0x30
    9d04:	00107d00 	andseq	r7, r0, r0, lsl #26
	...
    9d10:	b4000000 	strlt	r0, [r0], #-0
    9d14:	bb100030 	bllt	409ddc <__RAM_SIZE+0x309ddc>
    9d18:	01100030 	tsteq	r0, r0, lsr r0
    9d1c:	30bb5000 	adcscc	r5, fp, r0
    9d20:	30e01000 	rsccc	r1, r0, r0
    9d24:	00011000 	andeq	r1, r1, r0
    9d28:	00000055 	andeq	r0, r0, r5, asr r0
	...
    9d38:	0030be00 	eorseq	fp, r0, r0, lsl #28
    9d3c:	0030ca10 	eorseq	ip, r0, r0, lsl sl
    9d40:	50000110 	andpl	r0, r0, r0, lsl r1
    9d44:	100030ca 	andne	r3, r0, sl, asr #1
    9d48:	100030d2 	ldrdne	r3, [r0], -r2
    9d4c:	d2540001 	subsle	r0, r4, #1
    9d50:	d5100030 	ldrle	r0, [r0, #-48]	; 0xffffffd0
    9d54:	01100030 	tsteq	r0, r0, lsr r0
    9d58:	30d55000 	sbcscc	r5, r5, r0
    9d5c:	30e01000 	rsccc	r1, r0, r0
    9d60:	00011000 	andeq	r1, r1, r0
    9d64:	00000054 	andeq	r0, r0, r4, asr r0
	...
    9d74:	002fb400 	eoreq	fp, pc, r0, lsl #8
    9d78:	002fc610 	eoreq	ip, pc, r0, lsl r6	; <UNPREDICTABLE>
    9d7c:	50000110 	andpl	r0, r0, r0, lsl r1
    9d80:	10002fc6 	andne	r2, r0, r6, asr #31
    9d84:	10002fc8 	andne	r2, r0, r8, asr #31
    9d88:	01f30004 	mvnseq	r0, r4
    9d8c:	2fc89f50 	svccs	0x00c89f50
    9d90:	2fce1000 	svccs	0x00ce1000
    9d94:	00011000 	andeq	r1, r1, r0
    9d98:	002fce50 	eoreq	ip, pc, r0, asr lr	; <UNPREDICTABLE>
    9d9c:	002fd410 	eoreq	sp, pc, r0, lsl r4	; <UNPREDICTABLE>
    9da0:	f3000410 	vqshl.u8	d0, d0, d0
    9da4:	009f5001 	addseq	r5, pc, r1
	...
    9db0:	c6000000 	strgt	r0, [r0], -r0
    9db4:	c810002f 	ldmdagt	r0, {r0, r1, r2, r3, r5}
    9db8:	0110002f 	tsteq	r0, pc, lsr #32
    9dbc:	2fce5000 	svccs	0x00ce5000
    9dc0:	2fd41000 	svccs	0x00d41000
    9dc4:	00021000 	andeq	r1, r2, r0
    9dc8:	00009f30 	andeq	r9, r0, r0, lsr pc
    9dcc:	00000000 	andeq	r0, r0, r0
    9dd0:	30e00000 	rsccc	r0, r0, r0
    9dd4:	30e21000 	rsccc	r1, r2, r0
    9dd8:	00021000 	andeq	r1, r2, r0
    9ddc:	30e2007d 	rsccc	r0, r2, sp, ror r0
    9de0:	30e41000 	rsccc	r1, r4, r0
    9de4:	00021000 	andeq	r1, r2, r0
    9de8:	30e4107d 	rsccc	r1, r4, sp, ror r0
    9dec:	311e1000 	tstcc	lr, r0
    9df0:	00021000 	andeq	r1, r2, r0
    9df4:	311e187d 	tstcc	lr, sp, ror r8
    9df8:	31201000 			; <UNDEFINED> instruction: 0x31201000
    9dfc:	00021000 	andeq	r1, r2, r0
    9e00:	3120107d 			; <UNDEFINED> instruction: 0x3120107d
    9e04:	31481000 	mrscc	r1, (UNDEF: 72)
    9e08:	00021000 	andeq	r1, r2, r0
    9e0c:	0000187d 	andeq	r1, r0, sp, ror r8
	...
    9e18:	30e00000 	rsccc	r0, r0, r0
    9e1c:	30eb1000 	rsccc	r1, fp, r0
    9e20:	00011000 	andeq	r1, r1, r0
    9e24:	0030eb50 	eorseq	lr, r0, r0, asr fp
    9e28:	00314810 	eorseq	r4, r1, r0, lsl r8
    9e2c:	56000110 			; <UNDEFINED> instruction: 0x56000110
	...
    9e40:	100030e0 	andne	r3, r0, r0, ror #1
    9e44:	100030eb 	andne	r3, r0, fp, ror #1
    9e48:	eb510001 	bl	1449e54 <__RAM_SIZE+0x1349e54>
    9e4c:	30100030 	andscc	r0, r0, r0, lsr r0
    9e50:	01100031 	tsteq	r0, r1, lsr r0
    9e54:	31305400 	teqcc	r0, r0, lsl #8
    9e58:	31321000 	teqcc	r2, r0
    9e5c:	00041000 	andeq	r1, r4, r0
    9e60:	9f5101f3 	svcls	0x005101f3
    9e64:	10003132 	andne	r3, r0, r2, lsr r1
    9e68:	10003148 	andne	r3, r0, r8, asr #2
    9e6c:	00540001 	subseq	r0, r4, r1
	...
    9e84:	0030f200 	eorseq	pc, r0, r0, lsl #4
    9e88:	00311210 	eorseq	r1, r1, r0, lsl r2
    9e8c:	50000110 	andpl	r0, r0, r0, lsl r1
    9e90:	10003112 	andne	r3, r0, r2, lsl r1
    9e94:	1000311c 	andne	r3, r0, ip, lsl r1
    9e98:	20550001 	subscs	r0, r5, r1
    9e9c:	23100031 	tstcs	r0, #49	; 0x31
    9ea0:	01100031 	tsteq	r0, r1, lsr r0
    9ea4:	31235000 			; <UNDEFINED> instruction: 0x31235000
    9ea8:	312e1000 			; <UNDEFINED> instruction: 0x312e1000
    9eac:	00011000 	andeq	r1, r1, r0
    9eb0:	00312e55 	eorseq	r2, r1, r5, asr lr
    9eb4:	00313210 	eorseq	r3, r1, r0, lsl r2
    9eb8:	50000110 	andpl	r0, r0, r0, lsl r1
    9ebc:	10003132 	andne	r3, r0, r2, lsr r1
    9ec0:	10003138 	andne	r3, r0, r8, lsr r1
    9ec4:	38550001 	ldmdacc	r5, {r0}^
    9ec8:	3b100031 	blcc	409f94 <__RAM_SIZE+0x309f94>
    9ecc:	01100031 	tsteq	r0, r1, lsr r0
    9ed0:	00005000 	andeq	r5, r0, r0
    9ed4:	00000000 	andeq	r0, r0, r0
    9ed8:	32400000 	subcc	r0, r0, #0
    9edc:	32421000 	subcc	r1, r2, #0
    9ee0:	00021000 	andeq	r1, r2, r0
    9ee4:	3242007d 	subcc	r0, r2, #125	; 0x7d
    9ee8:	32441000 	subcc	r1, r4, #0
    9eec:	00021000 	andeq	r1, r2, r0
    9ef0:	3244047d 	subcc	r0, r4, #2097152000	; 0x7d000000
    9ef4:	32561000 	subscc	r1, r6, #0
    9ef8:	00021000 	andeq	r1, r2, r0
    9efc:	0000107d 	andeq	r1, r0, sp, ror r0
    9f00:	00000000 	andeq	r0, r0, r0
    9f04:	00010000 	andeq	r0, r1, r0
    9f08:	32400000 	subcc	r0, r0, #0
    9f0c:	32441000 	subcc	r1, r4, #0
    9f10:	00011000 	andeq	r1, r1, r0
    9f14:	00324450 	eorseq	r4, r2, r0, asr r4
    9f18:	00325610 	eorseq	r5, r2, r0, lsl r6
    9f1c:	f3000410 	vqshl.u8	d0, d0, d0
    9f20:	009f5001 	addseq	r5, pc, r1
	...
    9f2c:	00324a00 	eorseq	r4, r2, r0, lsl #20
    9f30:	00324f10 	eorseq	r4, r2, r0, lsl pc
    9f34:	50000110 	andpl	r0, r0, r0, lsl r1
	...
    9f40:	10003044 	andne	r3, r0, r4, asr #32
    9f44:	10003046 	andne	r3, r0, r6, asr #32
    9f48:	007d0002 	rsbseq	r0, sp, r2
    9f4c:	10003046 	andne	r3, r0, r6, asr #32
    9f50:	10003084 	andne	r3, r0, r4, lsl #1
    9f54:	107d0002 	rsbsne	r0, sp, r2
	...
    9f64:	10003044 	andne	r3, r0, r4, asr #32
    9f68:	10003054 	andne	r3, r0, r4, asr r0
    9f6c:	54500001 	ldrbpl	r0, [r0], #-1
    9f70:	84100030 	ldrhi	r0, [r0], #-48	; 0xffffffd0
    9f74:	01100030 	tsteq	r0, r0, lsr r0
    9f78:	00005500 	andeq	r5, r0, r0, lsl #10
	...
    9f84:	30440000 	subcc	r0, r4, r0
    9f88:	30571000 	subscc	r1, r7, r0
    9f8c:	00011000 	andeq	r1, r1, r0
    9f90:	00305751 	eorseq	r5, r0, r1, asr r7
    9f94:	00308410 	eorseq	r8, r0, r0, lsl r4
    9f98:	56000110 			; <UNDEFINED> instruction: 0x56000110
	...
    9fa4:	30520000 	subscc	r0, r2, r0
    9fa8:	30841000 	addcc	r1, r4, r0
    9fac:	00011000 	andeq	r1, r1, r0
    9fb0:	00000054 	andeq	r0, r0, r4, asr r0
    9fb4:	00000000 	andeq	r0, r0, r0
    9fb8:	00301c00 	eorseq	r1, r0, r0, lsl #24
    9fbc:	00301e10 	eorseq	r1, r0, r0, lsl lr
    9fc0:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    9fc4:	00301e00 	eorseq	r1, r0, r0, lsl #28
    9fc8:	00304410 	eorseq	r4, r0, r0, lsl r4
    9fcc:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    9fd0:	00000010 	andeq	r0, r0, r0, lsl r0
	...
    9fdc:	00301c00 	eorseq	r1, r0, r0, lsl #24
    9fe0:	00302610 	eorseq	r2, r0, r0, lsl r6
    9fe4:	50000110 	andpl	r0, r0, r0, lsl r1
    9fe8:	10003026 	andne	r3, r0, r6, lsr #32
    9fec:	10003044 	andne	r3, r0, r4, asr #32
    9ff0:	00540001 	subseq	r0, r4, r1
	...
    9ffc:	1c000000 	stcne	0, cr0, [r0], {-0}
    a000:	26100030 			; <UNDEFINED> instruction: 0x26100030
    a004:	01100030 	tsteq	r0, r0, lsr r0
    a008:	30265100 	eorcc	r5, r6, r0, lsl #2
    a00c:	30441000 	subcc	r1, r4, r0
    a010:	00011000 	andeq	r1, r1, r0
    a014:	00000055 	andeq	r0, r0, r5, asr r0
	...
    a020:	00301c00 	eorseq	r1, r0, r0, lsl #24
    a024:	00302610 	eorseq	r2, r0, r0, lsl r6
    a028:	52000110 	andpl	r0, r0, #16, 2
    a02c:	10003026 	andne	r3, r0, r6, lsr #32
    a030:	10003044 	andne	r3, r0, r4, asr #32
    a034:	00560001 	subseq	r0, r6, r1
	...
    a048:	01000000 	mrseq	r0, (UNDEF: 0)
    a04c:	00005000 	andeq	r5, r0, r0
    a050:	00000000 	andeq	r0, r0, r0
    a054:	00040000 	andeq	r0, r4, r0
    a058:	9f5001f3 	svcls	0x005001f3
	...
    a064:	00000002 	andeq	r0, r0, r2
	...
    a070:	00500001 	subseq	r0, r0, r1
    a074:	00000000 	andeq	r0, r0, r0
    a078:	04000000 	streq	r0, [r0], #-0
    a07c:	5001f300 	andpl	pc, r1, r0, lsl #6
    a080:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    a098:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    a0a4:	00710002 	rsbseq	r0, r1, r2
	...
    a0b0:	00500001 	subseq	r0, r0, r1
    a0b4:	00000000 	andeq	r0, r0, r0
    a0b8:	04000000 	streq	r0, [r0], #-0
    a0bc:	5001f300 	andpl	pc, r1, r0, lsl #6
    a0c0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    a0c4:	00000000 	andeq	r0, r0, r0
    a0c8:	00000100 	andeq	r0, r0, r0, lsl #2
	...
    a0d4:	31000200 	mrscc	r0, R8_usr
    a0d8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    a0dc:	00000000 	andeq	r0, r0, r0
    a0e0:	30000200 	andcc	r0, r0, r0, lsl #4
    a0e4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    a0e8:	00000000 	andeq	r0, r0, r0
    a0ec:	00000300 	andeq	r0, r0, r0, lsl #6
	...
    a0fc:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    a108:	00710002 	rsbseq	r0, r1, r2
	...
    a114:	00500001 	subseq	r0, r0, r1
    a118:	00000000 	andeq	r0, r0, r0
    a11c:	04000000 	streq	r0, [r0], #-0
    a120:	5001f300 	andpl	pc, r1, r0, lsl #6
    a124:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    a138:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    a144:	01f30004 	mvnseq	r0, r4
    a148:	00009f50 	andeq	r9, r0, r0, asr pc
    a14c:	00000000 	andeq	r0, r0, r0
    a150:	00020000 	andeq	r0, r2, r0
	...
    a15c:	00010000 	andeq	r0, r1, r0
    a160:	00000050 	andeq	r0, r0, r0, asr r0
    a164:	00000000 	andeq	r0, r0, r0
    a168:	f3000400 	vshl.u8	d0, d0, d0
    a16c:	009f5001 	addseq	r5, pc, r1
    a170:	00000000 	andeq	r0, r0, r0
    a174:	06000000 	streq	r0, [r0], -r0
	...
    a180:	02000000 	andeq	r0, r0, #0
    a184:	00047000 	andeq	r7, r4, r0
    a188:	00000000 	andeq	r0, r0, r0
    a18c:	01000000 	mrseq	r0, (UNDEF: 0)
    a190:	00005000 	andeq	r5, r0, r0
	...
    a1a0:	00020000 	andeq	r0, r2, r0
    a1a4:	0000007d 	andeq	r0, r0, sp, ror r0
    a1a8:	00000000 	andeq	r0, r0, r0
    a1ac:	00020000 	andeq	r0, r2, r0
    a1b0:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    a1c4:	00010000 	andeq	r0, r1, r0
    a1c8:	00000050 	andeq	r0, r0, r0, asr r0
    a1cc:	00000000 	andeq	r0, r0, r0
    a1d0:	f3000400 	vshl.u8	d0, d0, d0
    a1d4:	009f5001 	addseq	r5, pc, r1
	...
    a1e8:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    a1fc:	007d0002 	rsbseq	r0, sp, r2
	...
    a208:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    a224:	00010000 	andeq	r0, r1, r0
    a228:	00000050 	andeq	r0, r0, r0, asr r0
    a22c:	00000000 	andeq	r0, r0, r0
    a230:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    a23c:	01f30004 	mvnseq	r0, r4
    a240:	00009f50 	andeq	r9, r0, r0, asr pc
    a244:	00000000 	andeq	r0, r0, r0
    a248:	00010000 	andeq	r0, r1, r0
    a24c:	00000054 	andeq	r0, r0, r4, asr r0
    a250:	00000000 	andeq	r0, r0, r0
    a254:	f3000400 	vshl.u8	d0, d0, d0
    a258:	009f5001 	addseq	r5, pc, r1
    a25c:	00000000 	andeq	r0, r0, r0
    a260:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    a274:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    a280:	00540001 	subseq	r0, r4, r1
    a284:	00000000 	andeq	r0, r0, r0
    a288:	04000000 	streq	r0, [r0], #-0
    a28c:	5001f300 	andpl	pc, r1, r0, lsl #6
    a290:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    a294:	00000000 	andeq	r0, r0, r0
    a298:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    a2a4:	01f30004 	mvnseq	r0, r4
    a2a8:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    a2bc:	00540001 	subseq	r0, r4, r1
	...
    a2cc:	02000000 	andeq	r0, r0, #0
    a2d0:	00007d00 	andeq	r7, r0, r0, lsl #26
    a2d4:	00000000 	andeq	r0, r0, r0
    a2d8:	02000000 	andeq	r0, r0, #0
    a2dc:	00107d00 	andseq	r7, r0, r0, lsl #26
	...
    a2f0:	01000000 	mrseq	r0, (UNDEF: 0)
    a2f4:	00005000 	andeq	r5, r0, r0
    a2f8:	00000000 	andeq	r0, r0, r0
    a2fc:	00010000 	andeq	r0, r1, r0
    a300:	00000054 	andeq	r0, r0, r4, asr r0
	...
    a314:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    a320:	00550001 	subseq	r0, r5, r1
    a324:	00000000 	andeq	r0, r0, r0
    a328:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    a334:	01000000 	mrseq	r0, (UNDEF: 0)
    a338:	00005000 	andeq	r5, r0, r0
    a33c:	00000000 	andeq	r0, r0, r0
    a340:	00010000 	andeq	r0, r1, r0
    a344:	00000054 	andeq	r0, r0, r4, asr r0
	...
    a358:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    a364:	01f30004 	mvnseq	r0, r4
    a368:	00009f50 	andeq	r9, r0, r0, asr pc
    a36c:	00000000 	andeq	r0, r0, r0
    a370:	00020000 	andeq	r0, r2, r0
	...
    a37c:	00010000 	andeq	r0, r1, r0
    a380:	00000050 	andeq	r0, r0, r0, asr r0
    a384:	00000000 	andeq	r0, r0, r0
    a388:	f3000400 	vshl.u8	d0, d0, d0
    a38c:	009f5001 	addseq	r5, pc, r1
	...
    a39c:	02000000 	andeq	r0, r0, #0
    a3a0:	00007d00 	andeq	r7, r0, r0, lsl #26
    a3a4:	00000000 	andeq	r0, r0, r0
    a3a8:	02000000 	andeq	r0, r0, #0
    a3ac:	00087d00 	andeq	r7, r8, r0, lsl #26
    a3b0:	00000000 	andeq	r0, r0, r0
    a3b4:	02000000 	andeq	r0, r0, #0
    a3b8:	00187d00 	andseq	r7, r8, r0, lsl #26
    a3bc:	00000000 	andeq	r0, r0, r0
    a3c0:	02000000 	andeq	r0, r0, #0
    a3c4:	00087d00 	andeq	r7, r8, r0, lsl #26
    a3c8:	00000000 	andeq	r0, r0, r0
    a3cc:	02000000 	andeq	r0, r0, #0
    a3d0:	00187d00 	andseq	r7, r8, r0, lsl #26
	...
    a3dc:	03030000 	movweq	r0, #12288	; 0x3000
	...
    a3f0:	01000000 	mrseq	r0, (UNDEF: 0)
    a3f4:	00005000 	andeq	r5, r0, r0
    a3f8:	00000000 	andeq	r0, r0, r0
    a3fc:	00020000 	andeq	r0, r2, r0
    a400:	00007091 	muleq	r0, r1, r0
    a404:	00000000 	andeq	r0, r0, r0
    a408:	00040000 	andeq	r0, r4, r0
    a40c:	9f5001f3 	svcls	0x005001f3
	...
    a418:	00500001 	subseq	r0, r0, r1
    a41c:	00000000 	andeq	r0, r0, r0
    a420:	02000000 	andeq	r0, r0, #0
    a424:	00709100 	rsbseq	r9, r0, r0, lsl #2
    a428:	00000000 	andeq	r0, r0, r0
    a42c:	04000000 	streq	r0, [r0], #-0
    a430:	5001f300 	andpl	pc, r1, r0, lsl #6
    a434:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    a438:	00000000 	andeq	r0, r0, r0
    a43c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    a448:	01f30004 	mvnseq	r0, r4
    a44c:	00009f50 	andeq	r9, r0, r0, asr pc
    a450:	00000000 	andeq	r0, r0, r0
    a454:	03000000 	movweq	r0, #0
    a458:	00000003 	andeq	r0, r0, r3
	...
    a468:	00010000 	andeq	r0, r1, r0
    a46c:	00000051 	andeq	r0, r0, r1, asr r0
    a470:	00000000 	andeq	r0, r0, r0
    a474:	f3000400 	vshl.u8	d0, d0, d0
    a478:	009f5101 	addseq	r5, pc, r1, lsl #2
    a47c:	00000000 	andeq	r0, r0, r0
    a480:	01000000 	mrseq	r0, (UNDEF: 0)
    a484:	00005100 	andeq	r5, r0, r0, lsl #2
    a488:	00000000 	andeq	r0, r0, r0
    a48c:	00020000 	andeq	r0, r2, r0
    a490:	00000071 	andeq	r0, r0, r1, ror r0
    a494:	00000000 	andeq	r0, r0, r0
    a498:	00040000 	andeq	r0, r4, r0
    a49c:	9f5101f3 	svcls	0x005101f3
	...
    a4a8:	00510001 	subseq	r0, r1, r1
	...
    a4b4:	00000303 	andeq	r0, r0, r3, lsl #6
	...
    a4c4:	01000000 	mrseq	r0, (UNDEF: 0)
    a4c8:	00005200 	andeq	r5, r0, r0, lsl #4
    a4cc:	00000000 	andeq	r0, r0, r0
    a4d0:	00040000 	andeq	r0, r4, r0
    a4d4:	9f5201f3 	svcls	0x005201f3
	...
    a4e0:	00520001 	subseq	r0, r2, r1
    a4e4:	00000000 	andeq	r0, r0, r0
    a4e8:	02000000 	andeq	r0, r0, #0
    a4ec:	006c9100 	rsbeq	r9, ip, r0, lsl #2
    a4f0:	00000000 	andeq	r0, r0, r0
    a4f4:	04000000 	streq	r0, [r0], #-0
    a4f8:	5201f300 	andpl	pc, r1, #0, 6
    a4fc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    a500:	00000000 	andeq	r0, r0, r0
    a504:	52000100 	andpl	r0, r0, #0, 2
	...
    a510:	03000000 	movweq	r0, #0
    a514:	00000003 	andeq	r0, r0, r3
	...
    a524:	00530001 	subseq	r0, r3, r1
    a528:	00000000 	andeq	r0, r0, r0
    a52c:	01000000 	mrseq	r0, (UNDEF: 0)
    a530:	00005c00 	andeq	r5, r0, r0, lsl #24
    a534:	00000000 	andeq	r0, r0, r0
    a538:	00040000 	andeq	r0, r4, r0
    a53c:	9f5301f3 	svcls	0x005301f3
	...
    a548:	005c0001 	subseq	r0, ip, r1
    a54c:	00000000 	andeq	r0, r0, r0
    a550:	04000000 	streq	r0, [r0], #-0
    a554:	5301f300 	movwpl	pc, #4864	; 0x1300	; <UNPREDICTABLE>
    a558:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    a55c:	00000000 	andeq	r0, r0, r0
    a560:	5c000100 	stfpls	f0, [r0], {-0}
	...
    a578:	00910002 	addseq	r0, r1, r2
	...
    a584:	00910002 	addseq	r0, r1, r2
	...
    a590:	00000301 	andeq	r0, r0, r1, lsl #6
	...
    a5a0:	9f300002 	svcls	0x00300002
	...
    a5ac:	9f300002 	svcls	0x00300002
	...
    a5b8:	00500001 	subseq	r0, r0, r1
    a5bc:	00000000 	andeq	r0, r0, r0
    a5c0:	02000000 	andeq	r0, r0, #0
    a5c4:	009f3000 	addseq	r3, pc, r0
	...
    a5d4:	02000000 	andeq	r0, r0, #0
    a5d8:	00007d00 	andeq	r7, r0, r0, lsl #26
    a5dc:	00000000 	andeq	r0, r0, r0
    a5e0:	02000000 	andeq	r0, r0, #0
    a5e4:	00047d00 	andeq	r7, r4, r0, lsl #26
    a5e8:	00000000 	andeq	r0, r0, r0
    a5ec:	02000000 	andeq	r0, r0, #0
    a5f0:	00187d00 	andseq	r7, r8, r0, lsl #26
    a5f4:	00000000 	andeq	r0, r0, r0
    a5f8:	02000000 	andeq	r0, r0, #0
    a5fc:	00047d00 	andeq	r7, r4, r0, lsl #26
    a600:	00000000 	andeq	r0, r0, r0
    a604:	02000000 	andeq	r0, r0, #0
    a608:	00187d00 	andseq	r7, r8, r0, lsl #26
    a60c:	00000000 	andeq	r0, r0, r0
    a610:	02000000 	andeq	r0, r0, #0
    a614:	00007d00 	andeq	r7, r0, r0, lsl #26
	...
    a620:	03030000 	movweq	r0, #12288	; 0x3000
	...
    a634:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    a640:	70910002 	addsvc	r0, r1, r2
	...
    a64c:	01f30004 	mvnseq	r0, r4
    a650:	00009f50 	andeq	r9, r0, r0, asr pc
    a654:	00000000 	andeq	r0, r0, r0
    a658:	00010000 	andeq	r0, r1, r0
    a65c:	00000050 	andeq	r0, r0, r0, asr r0
    a660:	00000000 	andeq	r0, r0, r0
    a664:	f3000400 	vshl.u8	d0, d0, d0
    a668:	009f5001 	addseq	r5, pc, r1
    a66c:	00000000 	andeq	r0, r0, r0
    a670:	01000000 	mrseq	r0, (UNDEF: 0)
    a674:	00005000 	andeq	r5, r0, r0
    a678:	00000000 	andeq	r0, r0, r0
    a67c:	00040000 	andeq	r0, r4, r0
    a680:	9f5001f3 	svcls	0x005001f3
	...
    a68c:	00030300 	andeq	r0, r3, r0, lsl #6
	...
    a69c:	00010000 	andeq	r0, r1, r0
    a6a0:	00000051 	andeq	r0, r0, r1, asr r0
    a6a4:	00000000 	andeq	r0, r0, r0
    a6a8:	f3000400 	vshl.u8	d0, d0, d0
    a6ac:	009f5101 	addseq	r5, pc, r1, lsl #2
    a6b0:	00000000 	andeq	r0, r0, r0
    a6b4:	01000000 	mrseq	r0, (UNDEF: 0)
    a6b8:	00005100 	andeq	r5, r0, r0, lsl #2
    a6bc:	00000000 	andeq	r0, r0, r0
    a6c0:	00040000 	andeq	r0, r4, r0
    a6c4:	9f5101f3 	svcls	0x005101f3
	...
    a6d0:	00510001 	subseq	r0, r1, r1
	...
    a6dc:	00000303 	andeq	r0, r0, r3, lsl #6
	...
    a6ec:	52000100 	andpl	r0, r0, #0, 2
	...
    a6f8:	01f30004 	mvnseq	r0, r4
    a6fc:	00009f52 	andeq	r9, r0, r2, asr pc
    a700:	00000000 	andeq	r0, r0, r0
    a704:	00010000 	andeq	r0, r1, r0
    a708:	00000052 	andeq	r0, r0, r2, asr r0
    a70c:	00000000 	andeq	r0, r0, r0
    a710:	f3000400 	vshl.u8	d0, d0, d0
    a714:	009f5201 	addseq	r5, pc, r1, lsl #4
    a718:	00000000 	andeq	r0, r0, r0
    a71c:	01000000 	mrseq	r0, (UNDEF: 0)
    a720:	00005200 	andeq	r5, r0, r0, lsl #4
	...
    a734:	00010000 	andeq	r0, r1, r0
    a738:	00000053 	andeq	r0, r0, r3, asr r0
    a73c:	00000000 	andeq	r0, r0, r0
    a740:	f3000400 	vshl.u8	d0, d0, d0
    a744:	009f5301 	addseq	r5, pc, r1, lsl #6
	...
    a758:	02000000 	andeq	r0, r0, #0
    a75c:	00009100 	andeq	r9, r0, r0, lsl #2
    a760:	00000000 	andeq	r0, r0, r0
    a764:	02000000 	andeq	r0, r0, #0
    a768:	00009100 	andeq	r9, r0, r0, lsl #2
    a76c:	00000000 	andeq	r0, r0, r0
    a770:	02000000 	andeq	r0, r0, #0
    a774:	00000003 	andeq	r0, r0, r3
	...
    a784:	02000000 	andeq	r0, r0, #0
    a788:	009f3000 	addseq	r3, pc, r0
    a78c:	00000000 	andeq	r0, r0, r0
    a790:	02000000 	andeq	r0, r0, #0
    a794:	009f3000 	addseq	r3, pc, r0
    a798:	00000000 	andeq	r0, r0, r0
    a79c:	01000000 	mrseq	r0, (UNDEF: 0)
    a7a0:	00005000 	andeq	r5, r0, r0
    a7a4:	00000000 	andeq	r0, r0, r0
    a7a8:	00020000 	andeq	r0, r2, r0
    a7ac:	00009f30 	andeq	r9, r0, r0, lsr pc
    a7b0:	00000000 	andeq	r0, r0, r0
    a7b4:	00010000 	andeq	r0, r1, r0
    a7b8:	00000050 	andeq	r0, r0, r0, asr r0
    a7bc:	00000000 	andeq	r0, r0, r0
    a7c0:	30000200 	andcc	r0, r0, r0, lsl #4
    a7c4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    a7d4:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    a7e0:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    a7e4:	00000018 	andeq	r0, r0, r8, lsl r0
	...
    a7f8:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    a804:	00580001 	subseq	r0, r8, r1
	...
    a818:	01000000 	mrseq	r0, (UNDEF: 0)
    a81c:	00005100 	andeq	r5, r0, r0, lsl #2
    a820:	00000000 	andeq	r0, r0, r0
    a824:	00010000 	andeq	r0, r1, r0
    a828:	00000057 	andeq	r0, r0, r7, asr r0
	...
    a83c:	52000100 	andpl	r0, r0, #0, 2
	...
    a848:	00550001 	subseq	r0, r5, r1
	...
    a85c:	01000000 	mrseq	r0, (UNDEF: 0)
    a860:	00005300 	andeq	r5, r0, r0, lsl #6
    a864:	00000000 	andeq	r0, r0, r0
    a868:	00010000 	andeq	r0, r1, r0
    a86c:	00000056 	andeq	r0, r0, r6, asr r0
	...
    a87c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    a888:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    a88c:	0000000c 	andeq	r0, r0, ip
    a890:	00000000 	andeq	r0, r0, r0
    a894:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    a898:	00000018 	andeq	r0, r0, r8, lsl r0
    a89c:	00000000 	andeq	r0, r0, r0
    a8a0:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    a8a4:	0000000c 	andeq	r0, r0, ip
	...
    a8b8:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    a8c4:	01f30004 	mvnseq	r0, r4
    a8c8:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    a8dc:	00010000 	andeq	r0, r1, r0
    a8e0:	00000051 	andeq	r0, r0, r1, asr r0
    a8e4:	00000000 	andeq	r0, r0, r0
    a8e8:	f3000400 	vshl.u8	d0, d0, d0
    a8ec:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
    a900:	01000000 	mrseq	r0, (UNDEF: 0)
    a904:	00005200 	andeq	r5, r0, r0, lsl #4
    a908:	00000000 	andeq	r0, r0, r0
    a90c:	00040000 	andeq	r0, r4, r0
    a910:	9f5201f3 	svcls	0x005201f3
	...
    a928:	00530001 	subseq	r0, r3, r1
    a92c:	00000000 	andeq	r0, r0, r0
    a930:	04000000 	streq	r0, [r0], #-0
    a934:	5301f300 	movwpl	pc, #4864	; 0x1300	; <UNPREDICTABLE>
    a938:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    a93c:	00000000 	andeq	r0, r0, r0
    a940:	00000400 	andeq	r0, r0, r0, lsl #8
    a944:	00000000 	andeq	r0, r0, r0
    a948:	01000000 	mrseq	r0, (UNDEF: 0)
    a94c:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    a95c:	00020000 	andeq	r0, r2, r0
    a960:	0000007d 	andeq	r0, r0, sp, ror r0
    a964:	00000000 	andeq	r0, r0, r0
    a968:	00020000 	andeq	r0, r2, r0
    a96c:	0000187d 	andeq	r1, r0, sp, ror r8
    a970:	00000000 	andeq	r0, r0, r0
    a974:	00020000 	andeq	r0, r2, r0
    a978:	0000207d 	andeq	r2, r0, sp, ror r0
    a97c:	00000000 	andeq	r0, r0, r0
    a980:	00020000 	andeq	r0, r2, r0
    a984:	0000187d 	andeq	r1, r0, sp, ror r8
	...
    a998:	00010000 	andeq	r0, r1, r0
    a99c:	00000050 	andeq	r0, r0, r0, asr r0
    a9a0:	00000000 	andeq	r0, r0, r0
    a9a4:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    a9bc:	00510001 	subseq	r0, r1, r1
    a9c0:	00000000 	andeq	r0, r0, r0
    a9c4:	01000000 	mrseq	r0, (UNDEF: 0)
    a9c8:	00005800 	andeq	r5, r0, r0, lsl #16
	...
    a9dc:	00010000 	andeq	r0, r1, r0
    a9e0:	00000052 	andeq	r0, r0, r2, asr r0
    a9e4:	00000000 	andeq	r0, r0, r0
    a9e8:	57000100 	strpl	r0, [r0, -r0, lsl #2]
	...
    aa00:	00530001 	subseq	r0, r3, r1
    aa04:	00000000 	andeq	r0, r0, r0
    aa08:	01000000 	mrseq	r0, (UNDEF: 0)
    aa0c:	00005500 	andeq	r5, r0, r0, lsl #10
	...
    aa20:	00010000 	andeq	r0, r1, r0
    aa24:	00000050 	andeq	r0, r0, r0, asr r0
    aa28:	00000000 	andeq	r0, r0, r0
    aa2c:	56000100 	strpl	r0, [r0], -r0, lsl #2
	...
    aa38:	100032b8 			; <UNDEFINED> instruction: 0x100032b8
    aa3c:	100032ba 			; <UNDEFINED> instruction: 0x100032ba
    aa40:	007d0002 	rsbseq	r0, sp, r2
    aa44:	100032ba 			; <UNDEFINED> instruction: 0x100032ba
    aa48:	100032bc 			; <UNDEFINED> instruction: 0x100032bc
    aa4c:	087d0002 	ldmdaeq	sp!, {r1}^
    aa50:	100032bc 			; <UNDEFINED> instruction: 0x100032bc
    aa54:	10003300 	andne	r3, r0, r0, lsl #6
    aa58:	287d0002 	ldmdacs	sp!, {r1}^
    aa5c:	10003300 	andne	r3, r0, r0, lsl #6
    aa60:	10003314 	andne	r3, r0, r4, lsl r3
    aa64:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    aa70:	00000001 	andeq	r0, r0, r1
    aa74:	32bc0400 	adcscc	r0, ip, #0, 8
    aa78:	32f61000 	rscscc	r1, r6, #0
    aa7c:	00021000 	andeq	r1, r2, r0
    aa80:	32f69f30 	rscscc	r9, r6, #48, 30	; 0xc0
    aa84:	32f81000 	rscscc	r1, r8, #0
    aa88:	00021000 	andeq	r1, r2, r0
    aa8c:	32f89f31 	rscscc	r9, r8, #49, 30	; 0xc4
    aa90:	32fe1000 	rscscc	r1, lr, #0
    aa94:	00021000 	andeq	r1, r2, r0
    aa98:	00009f30 	andeq	r9, r0, r0, lsr pc
	...
    aaa8:	00020000 	andeq	r0, r2, r0
    aaac:	0000007d 	andeq	r0, r0, sp, ror r0
    aab0:	00000000 	andeq	r0, r0, r0
    aab4:	00020000 	andeq	r0, r2, r0
    aab8:	0000187d 	andeq	r1, r0, sp, ror r8
	...
    aacc:	00010000 	andeq	r0, r1, r0
    aad0:	00000050 	andeq	r0, r0, r0, asr r0
    aad4:	00000000 	andeq	r0, r0, r0
    aad8:	57000100 	strpl	r0, [r0, -r0, lsl #2]
	...
    aaf0:	00530001 	subseq	r0, r3, r1
    aaf4:	00000000 	andeq	r0, r0, r0
    aaf8:	01000000 	mrseq	r0, (UNDEF: 0)
    aafc:	00005300 	andeq	r5, r0, r0, lsl #6
    ab00:	00000000 	andeq	r0, r0, r0
    ab04:	00020000 	andeq	r0, r2, r0
	...
    ab10:	00020000 	andeq	r0, r2, r0
    ab14:	00009f30 	andeq	r9, r0, r0, lsr pc
    ab18:	00000000 	andeq	r0, r0, r0
    ab1c:	00010000 	andeq	r0, r1, r0
    ab20:	00000054 	andeq	r0, r0, r4, asr r0
    ab24:	00000000 	andeq	r0, r0, r0
    ab28:	00000200 	andeq	r0, r0, r0, lsl #4
	...
    ab34:	30000200 	andcc	r0, r0, r0, lsl #4
    ab38:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    ab3c:	00000000 	andeq	r0, r0, r0
    ab40:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    ab4c:	00000002 	andeq	r0, r0, r2
	...
    ab58:	ff090003 			; <UNDEFINED> instruction: 0xff090003
    ab5c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    ab60:	00000000 	andeq	r0, r0, r0
    ab64:	56000100 	strpl	r0, [r0], -r0, lsl #2
	...
    ab70:	1000336c 	andne	r3, r0, ip, ror #6
    ab74:	100033a0 	andne	r3, r0, r0, lsr #7
    ab78:	007d0002 	rsbseq	r0, sp, r2
    ab7c:	100033a0 	andne	r3, r0, r0, lsr #7
    ab80:	100033be 			; <UNDEFINED> instruction: 0x100033be
    ab84:	047d0002 	ldrbteq	r0, [sp], #-2
    ab88:	100033be 			; <UNDEFINED> instruction: 0x100033be
    ab8c:	100033c0 	andne	r3, r0, r0, asr #7
    ab90:	007d0002 	rsbseq	r0, sp, r2
    ab94:	100033c0 	andne	r3, r0, r0, asr #7
    ab98:	100033c4 	andne	r3, r0, r4, asr #7
    ab9c:	047d0002 	ldrbteq	r0, [sp], #-2
    aba0:	100033c4 	andne	r3, r0, r4, asr #7
    aba4:	100033d0 	ldrdne	r3, [r0], -r0
    aba8:	007d0002 	rsbseq	r0, sp, r2
	...
    abb4:	01000000 	mrseq	r0, (UNDEF: 0)
    abb8:	00000001 	andeq	r0, r0, r1
    abbc:	1000336c 	andne	r3, r0, ip, ror #6
    abc0:	10003396 	mulne	r0, r6, r3
    abc4:	96500001 	ldrbls	r0, [r0], -r1
    abc8:	9a100033 	bls	40ac9c <__RAM_SIZE+0x30ac9c>
    abcc:	04100033 	ldreq	r0, [r0], #-51	; 0xffffffcd
    abd0:	5001f300 	andpl	pc, r1, r0, lsl #6
    abd4:	00339a9f 	mlaseq	r3, pc, sl, r9	; <UNPREDICTABLE>
    abd8:	00339e10 	eorseq	r9, r3, r0, lsl lr
    abdc:	52000110 	andpl	r0, r0, #16, 2
    abe0:	1000339e 	mulne	r0, lr, r3
    abe4:	100033d0 	ldrdne	r3, [r0], -r0
    abe8:	00500001 	subseq	r0, r0, r1
    abec:	00000000 	andeq	r0, r0, r0
    abf0:	04000000 	streq	r0, [r0], #-0
    abf4:	00000000 	andeq	r0, r0, r0
    abf8:	00336c00 	eorseq	r6, r3, r0, lsl #24
    abfc:	00336e10 	eorseq	r6, r3, r0, lsl lr
    ac00:	03000610 	movweq	r0, #1552	; 0x610
    ac04:	38008d00 	stmdacc	r0, {r8, sl, fp, pc}
    ac08:	00336e9f 	mlaseq	r3, pc, lr, r6	; <UNPREDICTABLE>
    ac0c:	00337210 	eorseq	r7, r3, r0, lsl r2
    ac10:	53000110 	movwpl	r0, #272	; 0x110
    ac14:	10003372 	andne	r3, r0, r2, ror r3
    ac18:	100033d0 	ldrdne	r3, [r0], -r0
    ac1c:	00520001 	subseq	r0, r2, r1
    ac20:	00000000 	andeq	r0, r0, r0
    ac24:	03000000 	movweq	r0, #0
    ac28:	00000202 	andeq	r0, r0, r2, lsl #4
    ac2c:	76000000 	strvc	r0, [r0], -r0
    ac30:	80100033 	andshi	r0, r0, r3, lsr r0
    ac34:	01100033 	tsteq	r0, r3, lsr r0
    ac38:	33805200 	orrcc	r5, r0, #0, 4
    ac3c:	33941000 	orrscc	r1, r4, #0
    ac40:	00011000 	andeq	r1, r1, r0
    ac44:	00339450 	eorseq	r9, r3, r0, asr r4
    ac48:	00339e10 	eorseq	r9, r3, r0, lsl lr
    ac4c:	52000110 	andpl	r0, r0, #16, 2
    ac50:	1000339e 	mulne	r0, lr, r3
    ac54:	100033d0 	ldrdne	r3, [r0], -r0
    ac58:	00500001 	subseq	r0, r0, r1
    ac5c:	00000000 	andeq	r0, r0, r0
    ac60:	01000000 	mrseq	r0, (UNDEF: 0)
    ac64:	00334200 	eorseq	r4, r3, r0, lsl #4
    ac68:	00335210 	eorseq	r5, r3, r0, lsl r2
    ac6c:	52000110 	andpl	r0, r0, #16, 2
	...
    ac7c:	1000331e 	andne	r3, r0, lr, lsl r3
    ac80:	1000332a 	andne	r3, r0, sl, lsr #6
    ac84:	2a510001 	bcs	144ac90 <__RAM_SIZE+0x134ac90>
    ac88:	52100033 	andspl	r0, r0, #51	; 0x33
    ac8c:	01100033 	tsteq	r0, r3, lsr r0
    ac90:	00005200 	andeq	r5, r0, r0, lsl #4
	...
    ac9c:	33340000 	teqcc	r4, #0
    aca0:	334a1000 	movtcc	r1, #40960	; 0xa000
    aca4:	00011000 	andeq	r1, r1, r0
    aca8:	00334a53 	eorseq	r4, r3, r3, asr sl
    acac:	00335210 	eorseq	r5, r3, r0, lsl r2
    acb0:	72000210 	andvc	r0, r0, #16, 4
	...
    acbc:	00000400 	andeq	r0, r0, r0, lsl #8
    acc0:	14000000 	strne	r0, [r0], #-0
    acc4:	28100033 	ldmdacs	r0, {r0, r1, r4, r5}
    acc8:	04100033 	ldreq	r0, [r0], #-51	; 0xffffffcd
    accc:	80000a00 	andhi	r0, r0, r0, lsl #20
    acd0:	0033289f 	mlaseq	r3, pc, r8, r2	; <UNPREDICTABLE>
    acd4:	00333410 	eorseq	r3, r3, r0, lsl r4
    acd8:	53000110 	movwpl	r0, #272	; 0x110
    acdc:	10003352 	andne	r3, r0, r2, asr r3
    ace0:	1000336c 	andne	r3, r0, ip, ror #6
    ace4:	000a0004 	andeq	r0, sl, r4
    ace8:	00009f80 	andeq	r9, r0, r0, lsl #31
	...
    acf8:	00020000 	andeq	r0, r2, r0
    acfc:	0000007d 	andeq	r0, r0, sp, ror r0
    ad00:	00000000 	andeq	r0, r0, r0
    ad04:	00020000 	andeq	r0, r2, r0
    ad08:	0000107d 	andeq	r1, r0, sp, ror r0
	...
    ad20:	00010000 	andeq	r0, r1, r0
    ad24:	00000050 	andeq	r0, r0, r0, asr r0
    ad28:	00000000 	andeq	r0, r0, r0
    ad2c:	53000100 	movwpl	r0, #256	; 0x100
	...
    ad38:	01f30004 	mvnseq	r0, r4
    ad3c:	00009f50 	andeq	r9, r0, r0, asr pc
    ad40:	00000000 	andeq	r0, r0, r0
    ad44:	00010000 	andeq	r0, r1, r0
    ad48:	00000053 	andeq	r0, r0, r3, asr r0
	...
    ad5c:	01000000 	mrseq	r0, (UNDEF: 0)
    ad60:	00005100 	andeq	r5, r0, r0, lsl #2
    ad64:	00000000 	andeq	r0, r0, r0
    ad68:	00040000 	andeq	r0, r4, r0
    ad6c:	9f5101f3 	svcls	0x005101f3
	...
    ad78:	00510001 	subseq	r0, r1, r1
    ad7c:	00000000 	andeq	r0, r0, r0
    ad80:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    ad90:	02000000 	andeq	r0, r0, #0
    ad94:	009f3000 	addseq	r3, pc, r0
    ad98:	00000000 	andeq	r0, r0, r0
    ad9c:	01000000 	mrseq	r0, (UNDEF: 0)
    ada0:	00005000 	andeq	r5, r0, r0
    ada4:	00000000 	andeq	r0, r0, r0
    ada8:	00010000 	andeq	r0, r1, r0
    adac:	00000055 	andeq	r0, r0, r5, asr r0
    adb0:	00000000 	andeq	r0, r0, r0
    adb4:	30000200 	andcc	r0, r0, r0, lsl #4
    adb8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    adbc:	00000000 	andeq	r0, r0, r0
    adc0:	0034a400 	eorseq	sl, r4, r0, lsl #8
    adc4:	0034a810 	eorseq	sl, r4, r0, lsl r8
    adc8:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    adcc:	0034a800 	eorseq	sl, r4, r0, lsl #16
    add0:	0034ea10 	eorseq	lr, r4, r0, lsl sl
    add4:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    add8:	0034ea10 	eorseq	lr, r4, r0, lsl sl
    addc:	0034f410 	eorseq	pc, r4, r0, lsl r4	; <UNPREDICTABLE>
    ade0:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
	...
    adf4:	a4000000 	strge	r0, [r0], #-0
    adf8:	bc100034 	ldclt	0, cr0, [r0], {52}	; 0x34
    adfc:	01100034 	tsteq	r0, r4, lsr r0
    ae00:	34bc5000 	ldrtcc	r5, [ip], #0
    ae04:	34be1000 	ldrtcc	r1, [lr], #0
    ae08:	00011000 	andeq	r1, r1, r0
    ae0c:	0034be54 	eorseq	fp, r4, r4, asr lr
    ae10:	0034c910 	eorseq	ip, r4, r0, lsl r9
    ae14:	50000110 	andpl	r0, r0, r0, lsl r1
    ae18:	100034c9 	andne	r3, r0, r9, asr #9
    ae1c:	100034ea 	andne	r3, r0, sl, ror #9
    ae20:	ea540001 	b	150ae2c <__RAM_SIZE+0x140ae2c>
    ae24:	f4100034 			; <UNDEFINED> instruction: 0xf4100034
    ae28:	01100034 	tsteq	r0, r4, lsr r0
    ae2c:	00005000 	andeq	r5, r0, r0
    ae30:	00000000 	andeq	r0, r0, r0
    ae34:	00020000 	andeq	r0, r2, r0
    ae38:	00000000 	andeq	r0, r0, r0
    ae3c:	100034a4 	andne	r3, r0, r4, lsr #9
    ae40:	100034ae 	andne	r3, r0, lr, lsr #9
    ae44:	ae500001 	cdpge	0, 5, cr0, cr0, cr1, {0}
    ae48:	ea100034 	b	40af20 <__RAM_SIZE+0x30af20>
    ae4c:	01100034 	tsteq	r0, r4, lsr r0
    ae50:	34ea5500 	strbtcc	r5, [sl], #1280	; 0x500
    ae54:	34f41000 	ldrbtcc	r1, [r4], #0
    ae58:	00011000 	andeq	r1, r1, r0
    ae5c:	00000050 	andeq	r0, r0, r0, asr r0
    ae60:	00000000 	andeq	r0, r0, r0
    ae64:	ae000100 	adfges	f0, f0, f0
    ae68:	ea100034 	b	40af40 <__RAM_SIZE+0x30af40>
    ae6c:	01100034 	tsteq	r0, r4, lsr r0
    ae70:	00005500 	andeq	r5, r0, r0, lsl #10
    ae74:	00000000 	andeq	r0, r0, r0
    ae78:	33d00000 	bicscc	r0, r0, #0
    ae7c:	33d21000 	bicscc	r1, r2, #0
    ae80:	00021000 	andeq	r1, r2, r0
    ae84:	33d2007d 	bicscc	r0, r2, #125	; 0x7d
    ae88:	34a41000 	strtcc	r1, [r4], #0
    ae8c:	00021000 	andeq	r1, r2, r0
    ae90:	0000107d 	andeq	r1, r0, sp, ror r0
	...
    aea4:	33d00000 	bicscc	r0, r0, #0
    aea8:	33de1000 	bicscc	r1, lr, #0
    aeac:	00011000 	andeq	r1, r1, r0
    aeb0:	0033de50 	eorseq	sp, r3, r0, asr lr
    aeb4:	0033f210 	eorseq	pc, r3, r0, lsl r2	; <UNPREDICTABLE>
    aeb8:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    aebc:	100033f2 	strdne	r3, [r0], -r2
    aec0:	100033f4 	strdne	r3, [r0], -r4
    aec4:	f4500001 			; <UNDEFINED> instruction: 0xf4500001
    aec8:	16100033 			; <UNDEFINED> instruction: 0x16100033
    aecc:	01100034 	tsteq	r0, r4, lsr r0
    aed0:	34165400 	ldrcc	r5, [r6], #-1024	; 0xfffffc00
    aed4:	34181000 	ldrcc	r1, [r8], #-0
    aed8:	00031000 	andeq	r1, r3, r0
    aedc:	189f0870 	ldmne	pc, {r4, r5, r6, fp}	; <UNPREDICTABLE>
    aee0:	a4100034 	ldrge	r0, [r0], #-52	; 0xffffffcc
    aee4:	01100034 	tsteq	r0, r4, lsr r0
    aee8:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    aef8:	10003412 	andne	r3, r0, r2, lsl r4
    aefc:	10003414 	andne	r3, r0, r4, lsl r4
    af00:	1e530001 	cdpne	0, 5, cr0, cr3, cr1, {0}
    af04:	74100034 	ldrvc	r0, [r0], #-52	; 0xffffffcc
    af08:	01100034 	tsteq	r0, r4, lsr r0
    af0c:	348c5300 	strcc	r5, [ip], #768	; 0x300
    af10:	34a41000 	strtcc	r1, [r4], #0
    af14:	00011000 	andeq	r1, r1, r0
    af18:	00000053 	andeq	r0, r0, r3, asr r0
    af1c:	00000000 	andeq	r0, r0, r0
    af20:	00000100 	andeq	r0, r0, r0, lsl #2
    af24:	00000000 	andeq	r0, r0, r0
    af28:	00340e00 	eorseq	r0, r4, r0, lsl #28
    af2c:	00341410 	eorseq	r1, r4, r0, lsl r4
    af30:	03000610 	movweq	r0, #1552	; 0x610
    af34:	38008d00 	stmdacc	r0, {r8, sl, fp, pc}
    af38:	00341e9f 	mlaseq	r4, pc, lr, r1	; <UNPREDICTABLE>
    af3c:	00342010 	eorseq	r2, r4, r0, lsl r0
    af40:	51000110 	tstpl	r0, r0, lsl r1
    af44:	10003422 	andne	r3, r0, r2, lsr #8
    af48:	10003454 	andne	r3, r0, r4, asr r4
    af4c:	8c510001 	mrrchi	0, 0, r0, r1, cr1
    af50:	a4100034 	ldrge	r0, [r0], #-52	; 0xffffffcc
    af54:	01100034 	tsteq	r0, r4, lsr r0
    af58:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    af64:	10003448 	andne	r3, r0, r8, asr #8
    af68:	10003452 	andne	r3, r0, r2, asr r4
    af6c:	00520001 	subseq	r0, r2, r1
    af70:	00000000 	andeq	r0, r0, r0
    af74:	04000000 	streq	r0, [r0], #-0
    af78:	00000000 	andeq	r0, r0, r0
    af7c:	0033d200 	eorseq	sp, r3, r0, lsl #4
    af80:	00343a10 	eorseq	r3, r4, r0, lsl sl
    af84:	30000210 	andcc	r0, r0, r0, lsl r2
    af88:	00343a9f 	mlaseq	r4, pc, sl, r3	; <UNPREDICTABLE>
    af8c:	00348010 	eorseq	r8, r4, r0, lsl r0
    af90:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
    af94:	10003480 	andne	r3, r0, r0, lsl #9
    af98:	100034a4 	andne	r3, r0, r4, lsr #9
    af9c:	9f300002 	svcls	0x00300002
	...
    afac:	100033e8 	andne	r3, r0, r8, ror #7
    afb0:	100033f2 	strdne	r3, [r0], -r2
    afb4:	14530001 	ldrbne	r0, [r3], #-1
    afb8:	18100034 	ldmdane	r0, {r2, r4, r5}
    afbc:	01100034 	tsteq	r0, r4, lsr r0
    afc0:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    afd4:	00530001 	subseq	r0, r3, r1
    afd8:	00000000 	andeq	r0, r0, r0
    afdc:	74000000 	strvc	r0, [r0], #-0
    afe0:	76100037 			; <UNDEFINED> instruction: 0x76100037
    afe4:	02100037 	andseq	r0, r0, #55	; 0x37
    afe8:	76007d00 	strvc	r7, [r0], -r0, lsl #26
    afec:	b4100037 	ldrlt	r0, [r0], #-55	; 0xffffffc9
    aff0:	02100037 	andseq	r0, r0, #55	; 0x37
    aff4:	00087d00 	andeq	r7, r8, r0, lsl #26
    aff8:	00000000 	andeq	r0, r0, r0
    affc:	e4000000 	str	r0, [r0], #-0
    b000:	e6100036 			; <UNDEFINED> instruction: 0xe6100036
    b004:	02100036 	andseq	r0, r0, #54	; 0x36
    b008:	e6007d00 	str	r7, [r0], -r0, lsl #26
    b00c:	6e100036 	mrcvs	0, 0, r0, cr0, cr6, {1}
    b010:	02100037 	andseq	r0, r0, #55	; 0x37
    b014:	6e047d00 	cdpvs	13, 0, cr7, cr4, cr0, {0}
    b018:	74100037 	ldrvc	r0, [r0], #-55	; 0xffffffc9
    b01c:	02100037 	andseq	r0, r0, #55	; 0x37
    b020:	00007d00 	andeq	r7, r0, r0, lsl #26
	...
    b02c:	01010101 	tsteq	r1, r1, lsl #2
    b030:	01010101 	tsteq	r1, r1, lsl #2
    b034:	01010101 	tsteq	r1, r1, lsl #2
    b038:	01010101 	tsteq	r1, r1, lsl #2
    b03c:	01010101 	tsteq	r1, r1, lsl #2
    b040:	01010101 	tsteq	r1, r1, lsl #2
    b044:	01010101 	tsteq	r1, r1, lsl #2
    b048:	01010101 	tsteq	r1, r1, lsl #2
    b04c:	01010101 	tsteq	r1, r1, lsl #2
    b050:	e4000000 	str	r0, [r0], #-0
    b054:	e6100036 			; <UNDEFINED> instruction: 0xe6100036
    b058:	01100036 	tsteq	r0, r6, lsr r0
    b05c:	36e65000 	strbtcc	r5, [r6], r0
    b060:	36ee1000 	strbtcc	r1, [lr], r0
    b064:	00031000 	andeq	r1, r3, r0
    b068:	ee9f7c70 	mrc	12, 4, r7, cr15, cr0, {3}
    b06c:	f2100036 	vqadd.s16	d0, d0, d22
    b070:	03100036 	tsteq	r0, #54	; 0x36
    b074:	9f787000 	svcls	0x00787000
    b078:	100036f2 	strdne	r3, [r0], -r2
    b07c:	100036f8 	strdne	r3, [r0], -r8
    b080:	74700003 	ldrbtvc	r0, [r0], #-3
    b084:	0036f89f 	mlaseq	r6, pc, r8, pc	; <UNPREDICTABLE>
    b088:	00370010 	eorseq	r0, r7, r0, lsl r0
    b08c:	70000310 	andvc	r0, r0, r0, lsl r3
    b090:	37009f70 	smlsdxcc	r0, r0, pc, r9	; <UNPREDICTABLE>
    b094:	37081000 	strcc	r1, [r8, -r0]
    b098:	00031000 	andeq	r1, r3, r0
    b09c:	089f6c70 	ldmeq	pc, {r4, r5, r6, sl, fp, sp, lr}	; <UNPREDICTABLE>
    b0a0:	10100037 	andsne	r0, r0, r7, lsr r0
    b0a4:	03100037 	tsteq	r0, #55	; 0x37
    b0a8:	9f687000 	svcls	0x00687000
    b0ac:	10003710 	andne	r3, r0, r0, lsl r7
    b0b0:	10003718 	andne	r3, r0, r8, lsl r7
    b0b4:	64700003 	ldrbtvs	r0, [r0], #-3
    b0b8:	0037189f 	mlaseq	r7, pc, r8, r1	; <UNPREDICTABLE>
    b0bc:	00371c10 	eorseq	r1, r7, r0, lsl ip
    b0c0:	70000310 	andvc	r0, r0, r0, lsl r3
    b0c4:	371c9f60 	ldrcc	r9, [ip, -r0, ror #30]
    b0c8:	37241000 	strcc	r1, [r4, -r0]!
    b0cc:	00031000 	andeq	r1, r3, r0
    b0d0:	249f5c70 	ldrcs	r5, [pc], #3184	; b0d8 <__HEAP_SIZE+0xa0d8>
    b0d4:	2c100037 	ldccs	0, cr0, [r0], {55}	; 0x37
    b0d8:	03100037 	tsteq	r0, #55	; 0x37
    b0dc:	9f587000 	svcls	0x00587000
    b0e0:	1000372c 	andne	r3, r0, ip, lsr #14
    b0e4:	10003734 	andne	r3, r0, r4, lsr r7
    b0e8:	54700003 	ldrbtpl	r0, [r0], #-3
    b0ec:	0037349f 	mlaseq	r7, pc, r4, r3	; <UNPREDICTABLE>
    b0f0:	00373c10 	eorseq	r3, r7, r0, lsl ip
    b0f4:	70000310 	andvc	r0, r0, r0, lsl r3
    b0f8:	373c9f50 			; <UNDEFINED> instruction: 0x373c9f50
    b0fc:	37441000 	strbcc	r1, [r4, -r0]
    b100:	00031000 	andeq	r1, r3, r0
    b104:	449f4c70 	ldrmi	r4, [pc], #3184	; b10c <__HEAP_SIZE+0xa10c>
    b108:	4c100037 	ldcmi	0, cr0, [r0], {55}	; 0x37
    b10c:	03100037 	tsteq	r0, #55	; 0x37
    b110:	9f487000 	svcls	0x00487000
    b114:	1000374c 	andne	r3, r0, ip, asr #14
    b118:	10003754 	andne	r3, r0, r4, asr r7
    b11c:	44700003 	ldrbtmi	r0, [r0], #-3
    b120:	0037549f 	mlaseq	r7, pc, r4, r5	; <UNPREDICTABLE>
    b124:	00375c10 	eorseq	r5, r7, r0, lsl ip
    b128:	70000310 	andvc	r0, r0, r0, lsl r3
    b12c:	375c9f40 	ldrbcc	r9, [ip, -r0, asr #30]
    b130:	37641000 	strbcc	r1, [r4, -r0]!
    b134:	00041000 	andeq	r1, r4, r0
    b138:	9f7fbc70 	svcls	0x007fbc70
    b13c:	10003764 	andne	r3, r0, r4, ror #14
    b140:	1000376a 	andne	r3, r0, sl, ror #14
    b144:	b8700004 	ldmdalt	r0!, {r2}^
    b148:	376a9f7f 			; <UNDEFINED> instruction: 0x376a9f7f
    b14c:	37741000 	ldrbcc	r1, [r4, -r0]!
    b150:	00011000 	andeq	r1, r1, r0
    b154:	00000050 	andeq	r0, r0, r0, asr r0
	...
    b160:	e4000000 	str	r0, [r0], #-0
    b164:	f4100036 			; <UNDEFINED> instruction: 0xf4100036
    b168:	01100036 	tsteq	r0, r6, lsr r0
    b16c:	36f45200 	ldrbtcc	r5, [r4], r0, lsl #4
    b170:	376a1000 	strbcc	r1, [sl, -r0]!
    b174:	00021000 	andeq	r1, r2, r0
    b178:	376a7870 			; <UNDEFINED> instruction: 0x376a7870
    b17c:	37741000 	ldrbcc	r1, [r4, -r0]!
    b180:	00031000 	andeq	r1, r3, r0
    b184:	0000c070 	andeq	ip, r0, r0, ror r0
	...
    b194:	0036e400 	eorseq	lr, r6, r0, lsl #8
    b198:	00372010 	eorseq	r2, r7, r0, lsl r0
    b19c:	53000110 	movwpl	r0, #272	; 0x110
    b1a0:	10003720 	andne	r3, r0, r0, lsr #14
    b1a4:	1000376a 	andne	r3, r0, sl, ror #14
    b1a8:	60700002 	rsbsvs	r0, r0, r2
    b1ac:	1000376a 	andne	r3, r0, sl, ror #14
    b1b0:	10003774 	andne	r3, r0, r4, ror r7
    b1b4:	28700002 	ldmdacs	r0!, {r1}^
	...
    b1c0:	100036ce 	andne	r3, r0, lr, asr #13
    b1c4:	100036d0 	ldrdne	r3, [r0], -r0
    b1c8:	007d0002 	rsbseq	r0, sp, r2
    b1cc:	100036d0 	ldrdne	r3, [r0], -r0
    b1d0:	100036e2 	andne	r3, r0, r2, ror #13
    b1d4:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    b1e8:	100036ce 	andne	r3, r0, lr, asr #13
    b1ec:	100036da 	ldrdne	r3, [r0], -sl
    b1f0:	da500001 	ble	140b1fc <__RAM_SIZE+0x130b1fc>
    b1f4:	dc100036 	ldcle	0, cr0, [r0], {54}	; 0x36
    b1f8:	04100036 	ldreq	r0, [r0], #-54	; 0xffffffca
    b1fc:	5001f300 	andpl	pc, r1, r0, lsl #6
    b200:	0036dc9f 	mlaseq	r6, pc, ip, sp	; <UNPREDICTABLE>
    b204:	0036df10 	eorseq	sp, r6, r0, lsl pc
    b208:	50000110 	andpl	r0, r0, r0, lsl r1
    b20c:	100036df 	ldrdne	r3, [r0], -pc	; <UNPREDICTABLE>
    b210:	100036e2 	andne	r3, r0, r2, ror #13
    b214:	01f30004 	mvnseq	r0, r4
    b218:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    b228:	100036d2 	ldrdne	r3, [r0], -r2
    b22c:	100036d6 	ldrdne	r3, [r0], -r6
    b230:	d6530001 	ldrble	r0, [r3], -r1
    b234:	da100036 	ble	40b314 <__RAM_SIZE+0x30b314>
    b238:	02100036 	andseq	r0, r0, #54	; 0x36
    b23c:	dc187000 	ldcle	0, cr7, [r8], {-0}
    b240:	df100036 	svcle	0x00100036
    b244:	02100036 	andseq	r0, r0, #54	; 0x36
    b248:	00187000 	andseq	r7, r8, r0
	...
    b254:	d6000000 	strle	r0, [r0], -r0
    b258:	da100036 	ble	40b338 <__RAM_SIZE+0x30b338>
    b25c:	01100036 	tsteq	r0, r6, lsr r0
    b260:	36dc5300 	ldrbcc	r5, [ip], r0, lsl #6
    b264:	36df1000 	ldrbcc	r1, [pc], r0
    b268:	00011000 	andeq	r1, r1, r0
    b26c:	00000053 	andeq	r0, r0, r3, asr r0
    b270:	00000000 	andeq	r0, r0, r0
    b274:	0036ac00 	eorseq	sl, r6, r0, lsl #24
    b278:	0036ae10 	eorseq	sl, r6, r0, lsl lr
    b27c:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    b280:	0036ae00 	eorseq	sl, r6, r0, lsl #28
    b284:	0036ce10 	eorseq	ip, r6, r0, lsl lr
    b288:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    b28c:	00000008 	andeq	r0, r0, r8
	...
    b298:	0036b400 	eorseq	fp, r6, r0, lsl #8
    b29c:	0036b710 	eorseq	fp, r6, r0, lsl r7
    b2a0:	50000110 	andpl	r0, r0, r0, lsl r1
    b2a4:	100036b7 			; <UNDEFINED> instruction: 0x100036b7
    b2a8:	100036ce 	andne	r3, r0, lr, asr #13
    b2ac:	00540001 	subseq	r0, r4, r1
    b2b0:	00000000 	andeq	r0, r0, r0
    b2b4:	90000000 	andls	r0, r0, r0
    b2b8:	92100036 	andsls	r0, r0, #54	; 0x36
    b2bc:	02100036 	andseq	r0, r0, #54	; 0x36
    b2c0:	92007d00 	andls	r7, r0, #0, 26
    b2c4:	ac100036 	ldcge	0, cr0, [r0], {54}	; 0x36
    b2c8:	02100036 	andseq	r0, r0, #54	; 0x36
    b2cc:	00087d00 	andeq	r7, r8, r0, lsl #26
    b2d0:	00000000 	andeq	r0, r0, r0
    b2d4:	74000000 	strvc	r0, [r0], #-0
    b2d8:	76100036 			; <UNDEFINED> instruction: 0x76100036
    b2dc:	02100036 	andseq	r0, r0, #54	; 0x36
    b2e0:	76007d00 	strvc	r7, [r0], -r0, lsl #26
    b2e4:	90100036 	andsls	r0, r0, r6, lsr r0
    b2e8:	02100036 	andseq	r0, r0, #54	; 0x36
    b2ec:	00087d00 	andeq	r7, r8, r0, lsl #26
    b2f0:	00000000 	andeq	r0, r0, r0
    b2f4:	f4000000 	vst4.8	{d0-d3}, [r0], r0
    b2f8:	f6100034 			; <UNDEFINED> instruction: 0xf6100034
    b2fc:	02100034 	andseq	r0, r0, #52	; 0x34
    b300:	f6007d00 			; <UNDEFINED> instruction: 0xf6007d00
    b304:	f8100034 			; <UNDEFINED> instruction: 0xf8100034
    b308:	02100034 	andseq	r0, r0, #52	; 0x34
    b30c:	f8047d00 			; <UNDEFINED> instruction: 0xf8047d00
    b310:	08100034 	ldmdaeq	r0, {r2, r4, r5}
    b314:	02100035 	andseq	r0, r0, #53	; 0x35
    b318:	08107d00 	ldmdaeq	r0, {r8, sl, fp, ip, sp, lr}
    b31c:	0c100035 	ldceq	0, cr0, [r0], {53}	; 0x35
    b320:	02100035 	andseq	r0, r0, #53	; 0x35
    b324:	00047d00 	andeq	r7, r4, r0, lsl #26
    b328:	00000000 	andeq	r0, r0, r0
    b32c:	0c000000 	stceq	0, cr0, [r0], {-0}
    b330:	0e100035 	mrceq	0, 0, r0, cr0, cr5, {1}
    b334:	02100035 	andseq	r0, r0, #53	; 0x35
    b338:	0e007d00 	cdpeq	13, 0, cr7, cr0, cr0, {0}
    b33c:	20100035 	andscs	r0, r0, r5, lsr r0
    b340:	02100036 	andseq	r0, r0, #54	; 0x36
    b344:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    b354:	00000001 	andeq	r0, r0, r1
    b358:	00350c00 	eorseq	r0, r5, r0, lsl #24
    b35c:	00351810 	eorseq	r1, r5, r0, lsl r8
    b360:	50000110 	andpl	r0, r0, r0, lsl r1
    b364:	10003518 	andne	r3, r0, r8, lsl r5
    b368:	1000352a 	andne	r3, r0, sl, lsr #10
    b36c:	2c540001 	mrrccs	0, 0, r0, r4, cr1
    b370:	d6100035 			; <UNDEFINED> instruction: 0xd6100035
    b374:	01100035 	tsteq	r0, r5, lsr r0
    b378:	35f25400 	ldrbcc	r5, [r2, #1024]!	; 0x400
    b37c:	36001000 	strcc	r1, [r0], -r0
    b380:	00011000 	andeq	r1, r1, r0
    b384:	00360054 	eorseq	r0, r6, r4, asr r0
    b388:	00360210 	eorseq	r0, r6, r0, lsl r2
    b38c:	70000310 	andvc	r0, r0, r0, lsl r3
    b390:	00009f01 	andeq	r9, r0, r1, lsl #30
	...
    b39c:	35460000 	strbcc	r0, [r6, #-0]
    b3a0:	35be1000 	ldrcc	r1, [lr, #0]!
    b3a4:	00011000 	andeq	r1, r1, r0
    b3a8:	0035f253 	eorseq	pc, r5, r3, asr r2	; <UNPREDICTABLE>
    b3ac:	0035f810 	eorseq	pc, r5, r0, lsl r8	; <UNPREDICTABLE>
    b3b0:	53000110 	movwpl	r0, #272	; 0x110
	...
    b3bc:	00000001 	andeq	r0, r0, r1
    b3c0:	100035d6 	ldrdne	r3, [r0], -r6
    b3c4:	100035ed 	andne	r3, r0, sp, ror #11
    b3c8:	06500001 	ldrbeq	r0, [r0], -r1
    b3cc:	20100036 	andscs	r0, r0, r6, lsr r0
    b3d0:	01100036 	tsteq	r0, r6, lsr r0
    b3d4:	00005000 	andeq	r5, r0, r0
	...
    b3e0:	36020000 	strcc	r0, [r2], -r0
    b3e4:	36061000 	strcc	r1, [r6], -r0
    b3e8:	00011000 	andeq	r1, r1, r0
    b3ec:	00360650 	eorseq	r0, r6, r0, asr r6
    b3f0:	00360c10 	eorseq	r0, r6, r0, lsl ip
    b3f4:	74000610 	strvc	r0, [r0], #-1552	; 0xfffff9f0
    b3f8:	1c007300 	stcne	3, cr7, [r0], {-0}
    b3fc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    b408:	36000000 	strcc	r0, [r0], -r0
    b40c:	3a100035 	bcc	40b4e8 <__RAM_SIZE+0x30b4e8>
    b410:	01100035 	tsteq	r0, r5, lsr r0
    b414:	353c5300 	ldrcc	r5, [ip, #-768]!	; 0xfffffd00
    b418:	35461000 	strbcc	r1, [r6, #-0]
    b41c:	00011000 	andeq	r1, r1, r0
    b420:	0035f853 	eorseq	pc, r5, r3, asr r8	; <UNPREDICTABLE>
    b424:	00362010 	eorseq	r2, r6, r0, lsl r0
    b428:	53000110 	movwpl	r0, #272	; 0x110
	...
    b434:	00000101 	andeq	r0, r0, r1, lsl #2
    b438:	35820000 	strcc	r0, [r2]
    b43c:	35d61000 	ldrbcc	r1, [r6]
    b440:	00011000 	andeq	r1, r1, r0
    b444:	0035f254 	eorseq	pc, r5, r4, asr r2	; <UNPREDICTABLE>
    b448:	00360010 	eorseq	r0, r6, r0, lsl r0
    b44c:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    b450:	10003600 	andne	r3, r0, r0, lsl #12
    b454:	10003602 	andne	r3, r0, r2, lsl #12
    b458:	01700003 	cmneq	r0, r3
    b45c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    b460:	00000000 	andeq	r0, r0, r0
    b464:	c2010000 	andgt	r0, r1, #0
    b468:	d6100035 			; <UNDEFINED> instruction: 0xd6100035
    b46c:	01100035 	tsteq	r0, r5, lsr r0
    b470:	00005300 	andeq	r5, r0, r0, lsl #6
    b474:	00000000 	andeq	r0, r0, r0
	...

Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
    __asm volatile ( "mrs %0, ipsr" : "=r" ( ulCurrentInterrupt )::"memory" );
   0:	00000074 	andeq	r0, r0, r4, ror r0
    if( ulCurrentInterrupt == 0 )
   4:	00000002 	andeq	r0, r0, r2
        xReturn = pdFALSE;
   8:	00040000 	andeq	r0, r4, r0
}
   c:	00000000 	andeq	r0, r0, r0
  10:	10000800 	andne	r0, r0, r0, lsl #16
  14:	00000044 	andeq	r0, r0, r4, asr #32
        if(ch == '\n' || it >= size) {
  18:	00000000 	andeq	r0, r0, r0
}
  1c:	00000010 	andeq	r0, r0, r0, lsl r0
  20:	00000000 	andeq	r0, r0, r0
  24:	00000010 	andeq	r0, r0, r0, lsl r0
  28:	10000844 	andne	r0, r0, r4, asr #16
  2c:	00000068 	andeq	r0, r0, r8, rrx
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
  30:	100008ac 	andne	r0, r0, ip, lsr #17
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
  34:	0000001c 	andeq	r0, r0, ip, lsl r0
  38:	100008c8 	andne	r0, r0, r8, asr #17
  3c:	00000018 	andeq	r0, r0, r8, lsl r0
  40:	100008e0 	andne	r0, r0, r0, ror #17
        BaseType_t xReturn = pdFAIL;
  44:	00000018 	andeq	r0, r0, r8, lsl r0
    }
  48:	100008f8 	strdne	r0, [r0], -r8
                pxBlock = heapPROTECT_BLOCK_POINTER( pxBlock->pxNextFreeBlock );
  4c:	00000018 	andeq	r0, r0, r8, lsl r0
            while( pxBlock != pxEnd )
  50:	10000910 	andne	r0, r0, r0, lsl r9
  54:	00000018 	andeq	r0, r0, r8, lsl r0
                if( pxBlock->xBlockSize > xMaxSize )
  58:	10000928 	andne	r0, r0, r8, lsr #18
  5c:	00000018 	andeq	r0, r0, r8, lsl r0
                if( pxBlock->xBlockSize < xMinSize )
  60:	10000940 	andne	r0, r0, r0, asr #18
                    xMinSize = pxBlock->xBlockSize;
  64:	00000024 	andeq	r0, r0, r4, lsr #32
  68:	10000964 	andne	r0, r0, r4, ror #18
  6c:	0000002c 	andeq	r0, r0, ip, lsr #32
	...
  78:	00000024 	andeq	r0, r0, r4, lsr #32
  7c:	072d0002 	streq	r0, [sp, -r2]!
            prvUnlockQueue( pxQueue );
  80:	00040000 	andeq	r0, r4, r0
	...
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
  8c:	00000010 	andeq	r0, r0, r0, lsl r0
  90:	10000990 	mulne	r0, r0, r9
        taskENTER_CRITICAL();
  94:	0000002c 	andeq	r0, r0, ip, lsr #32
	...
                if( xTicksToWait == ( TickType_t ) 0 )
  a0:	000000a4 	andeq	r0, r0, r4, lsr #1
                else if( xEntryTimeSet == pdFALSE )
  a4:	0c160002 	ldceq	0, cr0, [r6], {2}
        taskEXIT_CRITICAL();
  a8:	00040000 	andeq	r0, r4, r0
	...
        prvLockQueue( pxQueue );
  b4:	00000008 	andeq	r0, r0, r8
  b8:	100009bc 			; <UNDEFINED> instruction: 0x100009bc
  bc:	00000002 	andeq	r0, r0, r2
  c0:	00000000 	andeq	r0, r0, r0
  c4:	0000000e 	andeq	r0, r0, lr
  c8:	100009be 			; <UNDEFINED> instruction: 0x100009be
  cc:	00000024 	andeq	r0, r0, r4, lsr #32
        if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
  d0:	100009e2 	andne	r0, r0, r2, ror #19
  d4:	0000007e 	andeq	r0, r0, lr, ror r0
  d8:	10000a60 	andne	r0, r0, r0, ror #20
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
  dc:	00000138 	andeq	r0, r0, r8, lsr r1
  e0:	10000b98 	mulne	r0, r8, fp
                    if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
  e4:	00000094 	muleq	r0, r4, r0
  e8:	10000c2c 	andne	r0, r0, ip, lsr #24
                vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
  ec:	000000c6 	andeq	r0, r0, r6, asr #1
  f0:	10000cf8 	strdne	r0, [r0], -r8
                prvUnlockQueue( pxQueue );
  f4:	000003ea 	andeq	r0, r0, sl, ror #7
  f8:	100010e8 	andne	r1, r0, r8, ror #1
                if( xTaskResumeAll() == pdFALSE )
  fc:	00000396 	muleq	r0, r6, r3
 100:	10001480 	andne	r1, r0, r0, lsl #9
                    taskYIELD_WITHIN_API();
 104:	00000680 	andeq	r0, r0, r0, lsl #13
                    if( xInheritanceOccurred != pdFALSE )
 108:	10001b00 	andne	r1, r0, r0, lsl #22
                return errQUEUE_EMPTY;
 10c:	0000000c 	andeq	r0, r0, ip
                        taskENTER_CRITICAL();
 110:	10001b0c 	andne	r1, r0, ip, lsl #22
                            uxHighestWaitingPriority = prvGetDisinheritPriorityAfterTimeout( pxQueue );
 114:	0000002c 	andeq	r0, r0, ip, lsr #32
 118:	00000000 	andeq	r0, r0, r0
                            vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 11c:	0000002c 	andeq	r0, r0, ip, lsr #32
                        taskEXIT_CRITICAL();
 120:	00000000 	andeq	r0, r0, r0
 124:	00000028 	andeq	r0, r0, r8, lsr #32
 128:	00000000 	andeq	r0, r0, r0
 12c:	00000020 	andeq	r0, r0, r0, lsr #32
 130:	00000000 	andeq	r0, r0, r0
 134:	0000001c 	andeq	r0, r0, ip, lsl r0
 138:	00000000 	andeq	r0, r0, r0
 13c:	00000030 	andeq	r0, r0, r0, lsr r0
	...
 148:	00000044 	andeq	r0, r0, r4, asr #32
 14c:	27db0002 	ldrbcs	r0, [fp, r2]
 150:	00040000 	andeq	r0, r4, r0
 154:	00000000 	andeq	r0, r0, r0
 158:	10001b38 	andne	r1, r0, r8, lsr fp
 15c:	00000014 	andeq	r0, r0, r4, lsl r0
 160:	00000000 	andeq	r0, r0, r0
 164:	00000014 	andeq	r0, r0, r4, lsl r0
 168:	10001b4c 	andne	r1, r0, ip, asr #22
 16c:	0000001e 	andeq	r0, r0, lr, lsl r0
 170:	10001b6c 	andne	r1, r0, ip, ror #22
 174:	00000024 	andeq	r0, r0, r4, lsr #32
 178:	00000000 	andeq	r0, r0, r0
 17c:	00000008 	andeq	r0, r0, r8
 180:	00000000 	andeq	r0, r0, r0
 184:	00000020 	andeq	r0, r0, r0, lsr #32
	...
 190:	00000064 	andeq	r0, r0, r4, rrx
 194:	2a2e0002 	bcs	b801a4 <__RAM_SIZE+0xa801a4>
 198:	00040000 	andeq	r0, r4, r0
 19c:	00000000 	andeq	r0, r0, r0
 1a0:	10001b90 	mulne	r0, r0, fp
 1a4:	0000002c 	andeq	r0, r0, ip, lsr #32
 1a8:	10001bbc 			; <UNDEFINED> instruction: 0x10001bbc
 1ac:	00000036 	andeq	r0, r0, r6, lsr r0
 1b0:	10001bf4 	strdne	r1, [r0], -r4
 1b4:	0000007c 	andeq	r0, r0, ip, ror r0
 1b8:	10001c70 	andne	r1, r0, r0, ror ip
 1bc:	00000018 	andeq	r0, r0, r8, lsl r0
 1c0:	10001c88 	andne	r1, r0, r8, lsl #25
 1c4:	00000008 	andeq	r0, r0, r8
 1c8:	10001c90 	mulne	r0, r0, ip
 1cc:	00000050 	andeq	r0, r0, r0, asr r0
 1d0:	10001ce0 	andne	r1, r0, r0, ror #25
 1d4:	000001ac 	andeq	r0, r0, ip, lsr #3
 1d8:	10001e8c 	andne	r1, r0, ip, lsl #29
 1dc:	00000006 	andeq	r0, r0, r6
 1e0:	10001e94 	mulne	r0, r4, lr
 1e4:	00000008 	andeq	r0, r0, r8
 1e8:	00000000 	andeq	r0, r0, r0
 1ec:	00000014 	andeq	r0, r0, r4, lsl r0
	...
 1f8:	00000034 	andeq	r0, r0, r4, lsr r0
 1fc:	34330002 	ldrtcc	r0, [r3], #-2
 200:	00040000 	andeq	r0, r4, r0
 204:	00000000 	andeq	r0, r0, r0
 208:	10001e9c 	mulne	r0, ip, lr
 20c:	000000fc 	strdeq	r0, [r0], -ip
 210:	10001f98 	mulne	r0, r8, pc	; <UNPREDICTABLE>
 214:	0000000e 	andeq	r0, r0, lr
 218:	00000000 	andeq	r0, r0, r0
 21c:	00000020 	andeq	r0, r0, r0, lsr #32
 220:	10001fa8 	andne	r1, r0, r8, lsr #31
 224:	0000004c 	andeq	r0, r0, ip, asr #32
	...
 230:	0000003c 	andeq	r0, r0, ip, lsr r0
 234:	3bd90002 	blcc	ff640244 <__StackTop+0xc7540244>
 238:	00040000 	andeq	r0, r4, r0
 23c:	00000000 	andeq	r0, r0, r0
 240:	10001ff4 	strdne	r1, [r0], -r4
 244:	0000001a 	andeq	r0, r0, sl, lsl r0
 248:	1000200e 	andne	r2, r0, lr
 24c:	00000006 	andeq	r0, r0, r6
 250:	00000000 	andeq	r0, r0, r0
 254:	00000016 	andeq	r0, r0, r6, lsl r0
 258:	10002014 	andne	r2, r0, r4, lsl r0
 25c:	00000032 	andeq	r0, r0, r2, lsr r0
 260:	10002046 	andne	r2, r0, r6, asr #32
 264:	00000024 	andeq	r0, r0, r4, lsr #32
	...
 270:	0000015c 	andeq	r0, r0, ip, asr r1
 274:	3ea80002 	cdpcc	0, 10, cr0, cr8, cr2, {0}
 278:	00040000 	andeq	r0, r4, r0
	...
 284:	00000010 	andeq	r0, r0, r0, lsl r0
 288:	00000000 	andeq	r0, r0, r0
 28c:	0000001e 	andeq	r0, r0, lr, lsl r0
 290:	1000206a 	andne	r2, r0, sl, rrx
 294:	0000001a 	andeq	r0, r0, sl, lsl r0
 298:	10002084 	andne	r2, r0, r4, lsl #1
 29c:	00000076 	andeq	r0, r0, r6, ror r0
 2a0:	100020fa 	strdne	r2, [r0], -sl
 2a4:	00000024 	andeq	r0, r0, r4, lsr #32
 2a8:	1000211e 	andne	r2, r0, lr, lsl r1
 2ac:	00000058 	andeq	r0, r0, r8, asr r0
 2b0:	10002176 	andne	r2, r0, r6, ror r1
 2b4:	00000082 	andeq	r0, r0, r2, lsl #1
 2b8:	100021f8 	strdne	r2, [r0], -r8
 2bc:	00000086 	andeq	r0, r0, r6, lsl #1
 2c0:	1000227e 	andne	r2, r0, lr, ror r2
 2c4:	00000020 	andeq	r0, r0, r0, lsr #32
 2c8:	1000229e 	mulne	r0, lr, r2
 2cc:	0000003e 	andeq	r0, r0, lr, lsr r0
 2d0:	00000000 	andeq	r0, r0, r0
 2d4:	00000018 	andeq	r0, r0, r8, lsl r0
 2d8:	00000000 	andeq	r0, r0, r0
 2dc:	00000056 	andeq	r0, r0, r6, asr r0
 2e0:	00000000 	andeq	r0, r0, r0
 2e4:	0000002a 	andeq	r0, r0, sl, lsr #32
 2e8:	00000000 	andeq	r0, r0, r0
 2ec:	00000020 	andeq	r0, r0, r0, lsr #32
 2f0:	00000000 	andeq	r0, r0, r0
 2f4:	0000010c 	andeq	r0, r0, ip, lsl #2
 2f8:	00000000 	andeq	r0, r0, r0
 2fc:	00000018 	andeq	r0, r0, r8, lsl r0
 300:	00000000 	andeq	r0, r0, r0
 304:	00000016 	andeq	r0, r0, r6, lsl r0
 308:	00000000 	andeq	r0, r0, r0
 30c:	0000001e 	andeq	r0, r0, lr, lsl r0
 310:	00000000 	andeq	r0, r0, r0
 314:	0000002c 	andeq	r0, r0, ip, lsr #32
 318:	00000000 	andeq	r0, r0, r0
 31c:	000000bc 	strheq	r0, [r0], -ip
 320:	00000000 	andeq	r0, r0, r0
 324:	00000086 	andeq	r0, r0, r6, lsl #1
 328:	100022dc 	ldrdne	r2, [r0], -ip
 32c:	000000f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
 330:	00000000 	andeq	r0, r0, r0
 334:	00000126 	andeq	r0, r0, r6, lsr #2
 338:	00000000 	andeq	r0, r0, r0
 33c:	0000002c 	andeq	r0, r0, ip, lsr #32
 340:	00000000 	andeq	r0, r0, r0
 344:	000000f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
 348:	00000000 	andeq	r0, r0, r0
 34c:	00000080 	andeq	r0, r0, r0, lsl #1
 350:	00000000 	andeq	r0, r0, r0
 354:	0000002c 	andeq	r0, r0, ip, lsr #32
 358:	00000000 	andeq	r0, r0, r0
 35c:	00000012 	andeq	r0, r0, r2, lsl r0
 360:	00000000 	andeq	r0, r0, r0
 364:	00000016 	andeq	r0, r0, r6, lsl r0
 368:	00000000 	andeq	r0, r0, r0
 36c:	00000004 	andeq	r0, r0, r4
 370:	00000000 	andeq	r0, r0, r0
 374:	00000010 	andeq	r0, r0, r0, lsl r0
 378:	00000000 	andeq	r0, r0, r0
 37c:	00000004 	andeq	r0, r0, r4
 380:	00000000 	andeq	r0, r0, r0
 384:	00000004 	andeq	r0, r0, r4
 388:	00000000 	andeq	r0, r0, r0
 38c:	0000000c 	andeq	r0, r0, ip
 390:	00000000 	andeq	r0, r0, r0
 394:	00000010 	andeq	r0, r0, r0, lsl r0
 398:	100023cc 	andne	r2, r0, ip, asr #7
 39c:	00000052 	andeq	r0, r0, r2, asr r0
 3a0:	00000000 	andeq	r0, r0, r0
 3a4:	0000000c 	andeq	r0, r0, ip
 3a8:	00000000 	andeq	r0, r0, r0
 3ac:	00000026 	andeq	r0, r0, r6, lsr #32
 3b0:	00000000 	andeq	r0, r0, r0
 3b4:	00000026 	andeq	r0, r0, r6, lsr #32
 3b8:	00000000 	andeq	r0, r0, r0
 3bc:	00000018 	andeq	r0, r0, r8, lsl r0
 3c0:	00000000 	andeq	r0, r0, r0
 3c4:	00000016 	andeq	r0, r0, r6, lsl r0
	...
 3d0:	0000028c 	andeq	r0, r0, ip, lsl #5
 3d4:	63690002 	cmnvs	r9, #2
 3d8:	00040000 	andeq	r0, r4, r0
	...
 3e4:	00000044 	andeq	r0, r0, r4, asr #32
 3e8:	10002420 	andne	r2, r0, r0, lsr #8
 3ec:	00000040 	andeq	r0, r0, r0, asr #32
 3f0:	00000000 	andeq	r0, r0, r0
 3f4:	0000003e 	andeq	r0, r0, lr, lsr r0
 3f8:	00000000 	andeq	r0, r0, r0
 3fc:	00000012 	andeq	r0, r0, r2, lsl r0
 400:	10002460 	andne	r2, r0, r0, ror #8
 404:	00000028 	andeq	r0, r0, r8, lsr #32
 408:	10002488 	andne	r2, r0, r8, lsl #9
 40c:	00000096 	muleq	r0, r6, r0
 410:	1000251e 	andne	r2, r0, lr, lsl r5
 414:	00000052 	andeq	r0, r0, r2, asr r0
 418:	10002570 	andne	r2, r0, r0, ror r5
 41c:	00000068 	andeq	r0, r0, r8, rrx
 420:	100025d8 	ldrdne	r2, [r0], -r8
 424:	000000bc 	strheq	r0, [r0], -ip
 428:	10002694 	mulne	r0, r4, r6
 42c:	00000062 	andeq	r0, r0, r2, rrx
 430:	100026f6 	strdne	r2, [r0], -r6
 434:	00000024 	andeq	r0, r0, r4, lsr #32
 438:	1000271c 	andne	r2, r0, ip, lsl r7
 43c:	0000004c 	andeq	r0, r0, ip, asr #32
 440:	10002768 	andne	r2, r0, r8, ror #14
 444:	000000a8 	andeq	r0, r0, r8, lsr #1
 448:	10002810 	andne	r2, r0, r0, lsl r8
 44c:	00000028 	andeq	r0, r0, r8, lsr #32
 450:	10002838 	andne	r2, r0, r8, lsr r8
 454:	00000022 	andeq	r0, r0, r2, lsr #32
 458:	00000000 	andeq	r0, r0, r0
 45c:	0000009c 	muleq	r0, ip, r0
 460:	00000000 	andeq	r0, r0, r0
 464:	0000009c 	muleq	r0, ip, r0
 468:	00000000 	andeq	r0, r0, r0
 46c:	00000020 	andeq	r0, r0, r0, lsr #32
 470:	00000000 	andeq	r0, r0, r0
 474:	00000020 	andeq	r0, r0, r0, lsr #32
 478:	00000000 	andeq	r0, r0, r0
 47c:	00000020 	andeq	r0, r0, r0, lsr #32
 480:	00000000 	andeq	r0, r0, r0
 484:	00000020 	andeq	r0, r0, r0, lsr #32
 488:	00000000 	andeq	r0, r0, r0
 48c:	000000d8 	ldrdeq	r0, [r0], -r8
 490:	00000000 	andeq	r0, r0, r0
 494:	00000084 	andeq	r0, r0, r4, lsl #1
 498:	00000000 	andeq	r0, r0, r0
 49c:	000000ac 	andeq	r0, r0, ip, lsr #1
 4a0:	00000000 	andeq	r0, r0, r0
 4a4:	0000003c 	andeq	r0, r0, ip, lsr r0
 4a8:	1000285c 	andne	r2, r0, ip, asr r8
 4ac:	00000010 	andeq	r0, r0, r0, lsl r0
 4b0:	1000286c 	andne	r2, r0, ip, ror #16
 4b4:	0000000c 	andeq	r0, r0, ip
 4b8:	00000000 	andeq	r0, r0, r0
 4bc:	0000000c 	andeq	r0, r0, ip
 4c0:	10002878 	andne	r2, r0, r8, ror r8
 4c4:	0000000c 	andeq	r0, r0, ip
 4c8:	00000000 	andeq	r0, r0, r0
 4cc:	00000014 	andeq	r0, r0, r4, lsl r0
 4d0:	00000000 	andeq	r0, r0, r0
 4d4:	00000034 	andeq	r0, r0, r4, lsr r0
 4d8:	00000000 	andeq	r0, r0, r0
 4dc:	0000000c 	andeq	r0, r0, ip
 4e0:	00000000 	andeq	r0, r0, r0
 4e4:	0000000c 	andeq	r0, r0, ip
 4e8:	10002884 	andne	r2, r0, r4, lsl #17
 4ec:	0000003c 	andeq	r0, r0, ip, lsr r0
 4f0:	100028c0 	andne	r2, r0, r0, asr #17
 4f4:	00000160 	andeq	r0, r0, r0, ror #2
 4f8:	10002a20 	andne	r2, r0, r0, lsr #20
 4fc:	00000130 	andeq	r0, r0, r0, lsr r1
 500:	00000000 	andeq	r0, r0, r0
 504:	0000005c 	andeq	r0, r0, ip, asr r0
 508:	10002b50 	andne	r2, r0, r0, asr fp
 50c:	0000001e 	andeq	r0, r0, lr, lsl r0
 510:	10002b70 	andne	r2, r0, r0, ror fp
 514:	00000038 	andeq	r0, r0, r8, lsr r0
 518:	00000000 	andeq	r0, r0, r0
 51c:	0000007c 	andeq	r0, r0, ip, ror r0
 520:	00000000 	andeq	r0, r0, r0
 524:	00000024 	andeq	r0, r0, r4, lsr #32
 528:	00000000 	andeq	r0, r0, r0
 52c:	000000a4 	andeq	r0, r0, r4, lsr #1
 530:	00000000 	andeq	r0, r0, r0
 534:	00000020 	andeq	r0, r0, r0, lsr #32
 538:	00000000 	andeq	r0, r0, r0
 53c:	00000020 	andeq	r0, r0, r0, lsr #32
 540:	00000000 	andeq	r0, r0, r0
 544:	00000020 	andeq	r0, r0, r0, lsr #32
 548:	00000000 	andeq	r0, r0, r0
 54c:	00000020 	andeq	r0, r0, r0, lsr #32
 550:	10002ba8 	andne	r2, r0, r8, lsr #23
 554:	00000084 	andeq	r0, r0, r4, lsl #1
 558:	00000000 	andeq	r0, r0, r0
 55c:	000000a4 	andeq	r0, r0, r4, lsr #1
 560:	10002c2c 	andne	r2, r0, ip, lsr #24
 564:	0000001c 	andeq	r0, r0, ip, lsl r0
 568:	00000000 	andeq	r0, r0, r0
 56c:	00000040 	andeq	r0, r0, r0, asr #32
 570:	10002c48 	andne	r2, r0, r8, asr #24
 574:	0000003c 	andeq	r0, r0, ip, lsr r0
 578:	10002c84 	andne	r2, r0, r4, lsl #25
 57c:	000000e4 	andeq	r0, r0, r4, ror #1
 580:	00000000 	andeq	r0, r0, r0
 584:	000000b8 	strheq	r0, [r0], -r8
 588:	00000000 	andeq	r0, r0, r0
 58c:	00000024 	andeq	r0, r0, r4, lsr #32
 590:	10002d68 	andne	r2, r0, r8, ror #26
 594:	00000018 	andeq	r0, r0, r8, lsl r0
 598:	10002d80 	andne	r2, r0, r0, lsl #27
 59c:	0000007c 	andeq	r0, r0, ip, ror r0
 5a0:	10002dfc 	strdne	r2, [r0], -ip
 5a4:	0000000c 	andeq	r0, r0, ip
 5a8:	10002e08 	andne	r2, r0, r8, lsl #28
 5ac:	00000048 	andeq	r0, r0, r8, asr #32
 5b0:	00000000 	andeq	r0, r0, r0
 5b4:	00000018 	andeq	r0, r0, r8, lsl r0
 5b8:	00000000 	andeq	r0, r0, r0
 5bc:	0000000c 	andeq	r0, r0, ip
 5c0:	00000000 	andeq	r0, r0, r0
 5c4:	00000010 	andeq	r0, r0, r0, lsl r0
 5c8:	00000000 	andeq	r0, r0, r0
 5cc:	00000020 	andeq	r0, r0, r0, lsr #32
 5d0:	00000000 	andeq	r0, r0, r0
 5d4:	000000b8 	strheq	r0, [r0], -r8
 5d8:	10002e50 	andne	r2, r0, r0, asr lr
 5dc:	00000080 	andeq	r0, r0, r0, lsl #1
 5e0:	00000000 	andeq	r0, r0, r0
 5e4:	00000090 	muleq	r0, r0, r0
 5e8:	00000000 	andeq	r0, r0, r0
 5ec:	00000018 	andeq	r0, r0, r8, lsl r0
 5f0:	00000000 	andeq	r0, r0, r0
 5f4:	00000014 	andeq	r0, r0, r4, lsl r0
 5f8:	00000000 	andeq	r0, r0, r0
 5fc:	000000a8 	andeq	r0, r0, r8, lsr #1
 600:	00000000 	andeq	r0, r0, r0
 604:	000000cc 	andeq	r0, r0, ip, asr #1
 608:	00000000 	andeq	r0, r0, r0
 60c:	0000011c 	andeq	r0, r0, ip, lsl r1
 610:	00000000 	andeq	r0, r0, r0
 614:	00000158 	andeq	r0, r0, r8, asr r1
 618:	00000000 	andeq	r0, r0, r0
 61c:	000000ec 	andeq	r0, r0, ip, ror #1
 620:	00000000 	andeq	r0, r0, r0
 624:	00000038 	andeq	r0, r0, r8, lsr r0
 628:	00000000 	andeq	r0, r0, r0
 62c:	00000034 	andeq	r0, r0, r4, lsr r0
 630:	10002ed0 	ldrdne	r2, [r0], -r0
 634:	00000018 	andeq	r0, r0, r8, lsl r0
 638:	10002ee8 	andne	r2, r0, r8, ror #29
 63c:	0000006c 	andeq	r0, r0, ip, rrx
 640:	10002f54 	andne	r2, r0, r4, asr pc
 644:	00000048 	andeq	r0, r0, r8, asr #32
 648:	10002f9c 	mulne	r0, ip, pc	; <UNPREDICTABLE>
 64c:	00000018 	andeq	r0, r0, r8, lsl r0
 650:	00000000 	andeq	r0, r0, r0
 654:	00000074 	andeq	r0, r0, r4, ror r0
	...
 660:	00000104 	andeq	r0, r0, r4, lsl #2
 664:	9c5d0002 	mrrcls	0, 0, r0, sp, cr2
 668:	00040000 	andeq	r0, r4, r0
 66c:	00000000 	andeq	r0, r0, r0
 670:	10002fb4 			; <UNDEFINED> instruction: 0x10002fb4
 674:	00000020 	andeq	r0, r0, r0, lsr #32
 678:	10002fd4 	ldrdne	r2, [r0], -r4
 67c:	00000048 	andeq	r0, r0, r8, asr #32
 680:	1000301c 	andne	r3, r0, ip, lsl r0
 684:	00000028 	andeq	r0, r0, r8, lsr #32
 688:	10003044 	andne	r3, r0, r4, asr #32
 68c:	00000040 	andeq	r0, r0, r0, asr #32
 690:	10003084 	andne	r3, r0, r4, lsl #1
 694:	00000030 	andeq	r0, r0, r0, lsr r0
 698:	100030b4 	strhne	r3, [r0], -r4
 69c:	0000002c 	andeq	r0, r0, ip, lsr #32
 6a0:	100030e0 	andne	r3, r0, r0, ror #1
 6a4:	00000068 	andeq	r0, r0, r8, rrx
 6a8:	10003148 	andne	r3, r0, r8, asr #2
 6ac:	000000f8 	strdeq	r0, [r0], -r8
 6b0:	10003240 	andne	r3, r0, r0, asr #4
 6b4:	00000016 	andeq	r0, r0, r6, lsl r0
 6b8:	10003258 	andne	r3, r0, r8, asr r2
 6bc:	00000060 	andeq	r0, r0, r0, rrx
 6c0:	00000000 	andeq	r0, r0, r0
 6c4:	00000036 	andeq	r0, r0, r6, lsr r0
 6c8:	100032b8 			; <UNDEFINED> instruction: 0x100032b8
 6cc:	0000005c 	andeq	r0, r0, ip, asr r0
 6d0:	00000000 	andeq	r0, r0, r0
 6d4:	00000038 	andeq	r0, r0, r8, lsr r0
 6d8:	00000000 	andeq	r0, r0, r0
 6dc:	00000020 	andeq	r0, r0, r0, lsr #32
 6e0:	00000000 	andeq	r0, r0, r0
 6e4:	0000004c 	andeq	r0, r0, ip, asr #32
 6e8:	00000000 	andeq	r0, r0, r0
 6ec:	00000034 	andeq	r0, r0, r4, lsr r0
 6f0:	00000000 	andeq	r0, r0, r0
 6f4:	0000000c 	andeq	r0, r0, ip
 6f8:	00000000 	andeq	r0, r0, r0
 6fc:	00000004 	andeq	r0, r0, r4
 700:	00000000 	andeq	r0, r0, r0
 704:	0000002c 	andeq	r0, r0, ip, lsr #32
 708:	00000000 	andeq	r0, r0, r0
 70c:	00000020 	andeq	r0, r0, r0, lsr #32
 710:	00000000 	andeq	r0, r0, r0
 714:	00000008 	andeq	r0, r0, r8
 718:	00000000 	andeq	r0, r0, r0
 71c:	00000004 	andeq	r0, r0, r4
 720:	00000000 	andeq	r0, r0, r0
 724:	00000014 	andeq	r0, r0, r4, lsl r0
 728:	00000000 	andeq	r0, r0, r0
 72c:	00000004 	andeq	r0, r0, r4
 730:	00000000 	andeq	r0, r0, r0
 734:	00000020 	andeq	r0, r0, r0, lsr #32
 738:	00000000 	andeq	r0, r0, r0
 73c:	00000012 	andeq	r0, r0, r2, lsl r0
 740:	00000000 	andeq	r0, r0, r0
 744:	00000012 	andeq	r0, r0, r2, lsl r0
 748:	00000000 	andeq	r0, r0, r0
 74c:	00000028 	andeq	r0, r0, r8, lsr #32
 750:	00000000 	andeq	r0, r0, r0
 754:	00000028 	andeq	r0, r0, r8, lsr #32
 758:	00000000 	andeq	r0, r0, r0
 75c:	00000014 	andeq	r0, r0, r4, lsl r0
	...
 768:	00000064 	andeq	r0, r0, r4, rrx
 76c:	b5ed0002 	strblt	r0, [sp, #2]!
 770:	00040000 	andeq	r0, r4, r0
 774:	00000000 	andeq	r0, r0, r0
 778:	10003314 	andne	r3, r0, r4, lsl r3
 77c:	00000058 	andeq	r0, r0, r8, asr r0
 780:	1000336c 	andne	r3, r0, ip, ror #6
 784:	00000064 	andeq	r0, r0, r4, rrx
 788:	100033d0 	ldrdne	r3, [r0], -r0
 78c:	000000d4 	ldrdeq	r0, [r0], -r4
 790:	100034a4 	andne	r3, r0, r4, lsr #9
 794:	00000050 	andeq	r0, r0, r0, asr r0
 798:	00000000 	andeq	r0, r0, r0
 79c:	0000000c 	andeq	r0, r0, ip
 7a0:	00000000 	andeq	r0, r0, r0
 7a4:	0000000c 	andeq	r0, r0, ip
 7a8:	00000000 	andeq	r0, r0, r0
 7ac:	00000002 	andeq	r0, r0, r2
 7b0:	00000000 	andeq	r0, r0, r0
 7b4:	00000032 	andeq	r0, r0, r2, lsr r0
 7b8:	00000000 	andeq	r0, r0, r0
 7bc:	00000080 	andeq	r0, r0, r0, lsl #1
 7c0:	00000000 	andeq	r0, r0, r0
 7c4:	0000002c 	andeq	r0, r0, ip, lsr #32
	...
 7d0:	00000074 	andeq	r0, r0, r4, ror r0
 7d4:	bc060002 	stclt	0, cr0, [r6], {2}
 7d8:	00040000 	andeq	r0, r4, r0
 7dc:	00000000 	andeq	r0, r0, r0
 7e0:	100034f4 	strdne	r3, [r0], -r4
 7e4:	00000018 	andeq	r0, r0, r8, lsl r0
 7e8:	1000350c 	andne	r3, r0, ip, lsl #10
 7ec:	00000114 	andeq	r0, r0, r4, lsl r1
 7f0:	10003620 	andne	r3, r0, r0, lsr #12
 7f4:	0000003c 	andeq	r0, r0, ip, lsr r0
 7f8:	1000365c 	andne	r3, r0, ip, asr r6
 7fc:	00000016 	andeq	r0, r0, r6, lsl r0
 800:	10003674 	andne	r3, r0, r4, ror r6
 804:	0000001c 	andeq	r0, r0, ip, lsl r0
 808:	10003690 	mulne	r0, r0, r6
 80c:	0000001c 	andeq	r0, r0, ip, lsl r0
 810:	100036ac 	andne	r3, r0, ip, lsr #13
 814:	00000022 	andeq	r0, r0, r2, lsr #32
 818:	100036ce 	andne	r3, r0, lr, asr #13
 81c:	00000014 	andeq	r0, r0, r4, lsl r0
 820:	100036e4 	andne	r3, r0, r4, ror #13
 824:	00000090 	muleq	r0, r0, r0
 828:	10003774 	andne	r3, r0, r4, ror r7
 82c:	00000040 	andeq	r0, r0, r0, asr #32
 830:	00000000 	andeq	r0, r0, r0
 834:	00000002 	andeq	r0, r0, r2
 838:	00000000 	andeq	r0, r0, r0
 83c:	0000000e 	andeq	r0, r0, lr
	...
 848:	0000005c 	andeq	r0, r0, ip, asr r0
 84c:	c16d0002 	cmngt	sp, r2
 850:	00040000 	andeq	r0, r4, r0
 854:	00000000 	andeq	r0, r0, r0
 858:	100037b4 			; <UNDEFINED> instruction: 0x100037b4
 85c:	00000026 	andeq	r0, r0, r6, lsr #32
 860:	00000000 	andeq	r0, r0, r0
 864:	00000010 	andeq	r0, r0, r0, lsl r0
 868:	00000000 	andeq	r0, r0, r0
 86c:	0000000e 	andeq	r0, r0, lr
 870:	00000000 	andeq	r0, r0, r0
 874:	0000000e 	andeq	r0, r0, lr
 878:	100037e0 	andne	r3, r0, r0, ror #15
 87c:	0000001a 	andeq	r0, r0, sl, lsl r0
 880:	10003800 	andne	r3, r0, r0, lsl #16
 884:	00000016 	andeq	r0, r0, r6, lsl r0
 888:	10003816 	andne	r3, r0, r6, lsl r8
 88c:	0000000e 	andeq	r0, r0, lr
 890:	10003824 	andne	r3, r0, r4, lsr #16
 894:	00000044 	andeq	r0, r0, r4, asr #32
 898:	1000386c 	andne	r3, r0, ip, ror #16
 89c:	00000012 	andeq	r0, r0, r2, lsl r0
	...
 8a8:	0000001c 	andeq	r0, r0, ip, lsl r0
 8ac:	c2eb0002 	rscgt	r0, fp, #2
 8b0:	00040000 	andeq	r0, r4, r0
 8b4:	00000000 	andeq	r0, r0, r0
 8b8:	100038a4 	andne	r3, r0, r4, lsr #17
 8bc:	00000070 	andeq	r0, r0, r0, ror r0
	...
 8c8:	0000001c 	andeq	r0, r0, ip, lsl r0
 8cc:	c3110002 	tstgt	r1, #2
 8d0:	00040000 	andeq	r0, r4, r0
 8d4:	00000000 	andeq	r0, r0, r0
 8d8:	10003914 	andne	r3, r0, r4, lsl r9
 8dc:	00000048 	andeq	r0, r0, r8, asr #32
	...

Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
    __asm volatile ( "mrs %0, ipsr" : "=r" ( ulCurrentInterrupt )::"memory" );
   0:	10000874 	andne	r0, r0, r4, ror r8
    if( ulCurrentInterrupt == 0 )
   4:	10000878 	andne	r0, r0, r8, ror r8
        xReturn = pdFALSE;
   8:	10000882 	andne	r0, r0, r2, lsl #17
}
   c:	10000892 	mulne	r0, r2, r8
	...
        if(ch == '\n' || it >= size) {
  18:	10000800 	andne	r0, r0, r0, lsl #16
}
  1c:	10000844 	andne	r0, r0, r4, asr #16
  20:	00000001 	andeq	r0, r0, r1
  24:	00000001 	andeq	r0, r0, r1
  28:	00000001 	andeq	r0, r0, r1
  2c:	00000001 	andeq	r0, r0, r1
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
  30:	10000844 	andne	r0, r0, r4, asr #16
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
  34:	100008ac 	andne	r0, r0, ip, lsr #17
  38:	100008ac 	andne	r0, r0, ip, lsr #17
  3c:	100008c8 	andne	r0, r0, r8, asr #17
  40:	100008c8 	andne	r0, r0, r8, asr #17
        BaseType_t xReturn = pdFAIL;
  44:	100008e0 	andne	r0, r0, r0, ror #17
    }
  48:	100008e0 	andne	r0, r0, r0, ror #17
                pxBlock = heapPROTECT_BLOCK_POINTER( pxBlock->pxNextFreeBlock );
  4c:	100008f8 	strdne	r0, [r0], -r8
            while( pxBlock != pxEnd )
  50:	100008f8 	strdne	r0, [r0], -r8
  54:	10000910 	andne	r0, r0, r0, lsl r9
                if( pxBlock->xBlockSize > xMaxSize )
  58:	10000910 	andne	r0, r0, r0, lsl r9
  5c:	10000928 	andne	r0, r0, r8, lsr #18
                if( pxBlock->xBlockSize < xMinSize )
  60:	10000928 	andne	r0, r0, r8, lsr #18
                    xMinSize = pxBlock->xBlockSize;
  64:	10000940 	andne	r0, r0, r0, asr #18
  68:	10000940 	andne	r0, r0, r0, asr #18
  6c:	10000964 	andne	r0, r0, r4, ror #18
  70:	10000964 	andne	r0, r0, r4, ror #18
  74:	10000990 	mulne	r0, r0, r9
	...
            prvUnlockQueue( pxQueue );
  80:	00000001 	andeq	r0, r0, r1
            ( void ) xTaskResumeAll();
  84:	00000001 	andeq	r0, r0, r1
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
  88:	10000990 	mulne	r0, r0, r9
  8c:	100009bc 			; <UNDEFINED> instruction: 0x100009bc
	...
            if( uxSemaphoreCount > ( UBaseType_t ) 0 )
  98:	10000a02 	andne	r0, r0, r2, lsl #20
                if( xTicksToWait == ( TickType_t ) 0 )
  9c:	10000a04 	andne	r0, r0, r4, lsl #20
  a0:	10000a06 	andne	r0, r0, r6, lsl #20
                else if( xEntryTimeSet == pdFALSE )
  a4:	10000a24 	andne	r0, r0, r4, lsr #20
	...
        prvLockQueue( pxQueue );
  b0:	10000bb6 			; <UNDEFINED> instruction: 0x10000bb6
  b4:	10000bd0 	ldrdne	r0, [r0], -r0	; <UNPREDICTABLE>
  b8:	10000bd8 	ldrdne	r0, [r0], -r8
  bc:	10000bdc 	ldrdne	r0, [r0], -ip
  c0:	10000bdc 	ldrdne	r0, [r0], -ip
  c4:	10000c0a 	andne	r0, r0, sl, lsl #24
	...
        if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
  d0:	10000c62 	andne	r0, r0, r2, ror #24
  d4:	10000c84 	andne	r0, r0, r4, lsl #25
  d8:	10000c92 	mulne	r0, r2, ip
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
  dc:	10000c98 	mulne	r0, r8, ip
  e0:	10000c98 	mulne	r0, r8, ip
                    if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
  e4:	10000cc0 	andne	r0, r0, r0, asr #25
	...
                vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
  f0:	10001494 	mulne	r0, r4, r4
                prvUnlockQueue( pxQueue );
  f4:	10001496 	mulne	r0, r6, r4
  f8:	10001940 	andne	r1, r0, r0, asr #18
                if( xTaskResumeAll() == pdFALSE )
  fc:	100019b2 			; <UNDEFINED> instruction: 0x100019b2
	...
                    if( xInheritanceOccurred != pdFALSE )
 108:	10001712 	andne	r1, r0, r2, lsl r7
                return errQUEUE_EMPTY;
 10c:	10001744 	andne	r1, r0, r4, asr #14
                        taskENTER_CRITICAL();
 110:	10001898 	mulne	r0, r8, r8
                            uxHighestWaitingPriority = prvGetDisinheritPriorityAfterTimeout( pxQueue );
 114:	100018b2 			; <UNDEFINED> instruction: 0x100018b2
	...
                        taskEXIT_CRITICAL();
 120:	10001762 	andne	r1, r0, r2, ror #14
 124:	10001798 	mulne	r0, r8, r7
 128:	1000181a 	andne	r1, r0, sl, lsl r8
 12c:	10001836 	andne	r1, r0, r6, lsr r8
	...
 138:	100017a0 	andne	r1, r0, r0, lsr #15
 13c:	100017de 	ldrdne	r1, [r0], -lr
 140:	100017e0 	andne	r1, r0, r0, ror #15
 144:	100017e8 	andne	r1, r0, r8, ror #15
	...
 150:	00000001 	andeq	r0, r0, r1
 154:	00000001 	andeq	r0, r0, r1
 158:	100009bc 			; <UNDEFINED> instruction: 0x100009bc
 15c:	100009be 			; <UNDEFINED> instruction: 0x100009be
 160:	00000001 	andeq	r0, r0, r1
 164:	00000001 	andeq	r0, r0, r1
 168:	100009be 			; <UNDEFINED> instruction: 0x100009be
 16c:	100009e2 	andne	r0, r0, r2, ror #19
 170:	100009e2 	andne	r0, r0, r2, ror #19
 174:	10000a60 	andne	r0, r0, r0, ror #20
 178:	10000a60 	andne	r0, r0, r0, ror #20
 17c:	10000b98 	mulne	r0, r8, fp
 180:	10000b98 	mulne	r0, r8, fp
 184:	10000c2c 	andne	r0, r0, ip, lsr #24
 188:	10000c2c 	andne	r0, r0, ip, lsr #24
 18c:	10000cf2 	strdne	r0, [r0], -r2
 190:	10000cf8 	strdne	r0, [r0], -r8
 194:	100010e2 	andne	r1, r0, r2, ror #1
 198:	100010e8 	andne	r1, r0, r8, ror #1
 19c:	1000147e 	andne	r1, r0, lr, ror r4
 1a0:	10001480 	andne	r1, r0, r0, lsl #9
 1a4:	10001b00 	andne	r1, r0, r0, lsl #22
 1a8:	10001b00 	andne	r1, r0, r0, lsl #22
 1ac:	10001b0c 	andne	r1, r0, ip, lsl #22
 1b0:	10001b0c 	andne	r1, r0, ip, lsl #22
 1b4:	10001b38 	andne	r1, r0, r8, lsr fp
 1b8:	00000001 	andeq	r0, r0, r1
 1bc:	00000001 	andeq	r0, r0, r1
 1c0:	00000001 	andeq	r0, r0, r1
 1c4:	00000001 	andeq	r0, r0, r1
 1c8:	00000001 	andeq	r0, r0, r1
 1cc:	00000001 	andeq	r0, r0, r1
 1d0:	00000001 	andeq	r0, r0, r1
 1d4:	00000001 	andeq	r0, r0, r1
 1d8:	00000001 	andeq	r0, r0, r1
 1dc:	00000001 	andeq	r0, r0, r1
	...
 1e8:	10001b38 	andne	r1, r0, r8, lsr fp
 1ec:	10001b4c 	andne	r1, r0, ip, asr #22
 1f0:	00000001 	andeq	r0, r0, r1
 1f4:	00000001 	andeq	r0, r0, r1
 1f8:	10001b4c 	andne	r1, r0, ip, asr #22
 1fc:	10001b6a 	andne	r1, r0, sl, ror #22
 200:	10001b6c 	andne	r1, r0, ip, ror #22
 204:	10001b90 	mulne	r0, r0, fp
 208:	00000001 	andeq	r0, r0, r1
 20c:	00000001 	andeq	r0, r0, r1
 210:	00000001 	andeq	r0, r0, r1
 214:	00000001 	andeq	r0, r0, r1
	...
 220:	10001b90 	mulne	r0, r0, fp
 224:	10001bbc 			; <UNDEFINED> instruction: 0x10001bbc
 228:	10001bbc 			; <UNDEFINED> instruction: 0x10001bbc
 22c:	10001bf2 	strdne	r1, [r0], -r2
 230:	10001bf4 	strdne	r1, [r0], -r4
 234:	10001c70 	andne	r1, r0, r0, ror ip
 238:	10001c70 	andne	r1, r0, r0, ror ip
 23c:	10001c88 	andne	r1, r0, r8, lsl #25
 240:	10001c88 	andne	r1, r0, r8, lsl #25
 244:	10001c90 	mulne	r0, r0, ip
 248:	10001c90 	mulne	r0, r0, ip
 24c:	10001ce0 	andne	r1, r0, r0, ror #25
 250:	10001ce0 	andne	r1, r0, r0, ror #25
 254:	10001e8c 	andne	r1, r0, ip, lsl #29
 258:	10001e8c 	andne	r1, r0, ip, lsl #29
 25c:	10001e92 	mulne	r0, r2, lr
 260:	10001e94 	mulne	r0, r4, lr
 264:	10001e9c 	mulne	r0, ip, lr
 268:	00000001 	andeq	r0, r0, r1
 26c:	00000001 	andeq	r0, r0, r1
	...
 278:	10001e9c 	mulne	r0, ip, lr
 27c:	10001f98 	mulne	r0, r8, pc	; <UNPREDICTABLE>
 280:	10001f98 	mulne	r0, r8, pc	; <UNPREDICTABLE>
 284:	10001fa6 	andne	r1, r0, r6, lsr #31
 288:	00000001 	andeq	r0, r0, r1
 28c:	00000001 	andeq	r0, r0, r1
 290:	10001fa8 	andne	r1, r0, r8, lsr #31
 294:	10001ff4 	strdne	r1, [r0], -r4
	...
 2a0:	10001ff4 	strdne	r1, [r0], -r4
 2a4:	1000200e 	andne	r2, r0, lr
 2a8:	1000200e 	andne	r2, r0, lr
 2ac:	10002014 	andne	r2, r0, r4, lsl r0
 2b0:	00000001 	andeq	r0, r0, r1
 2b4:	00000001 	andeq	r0, r0, r1
 2b8:	10002014 	andne	r2, r0, r4, lsl r0
 2bc:	10002046 	andne	r2, r0, r6, asr #32
 2c0:	10002046 	andne	r2, r0, r6, asr #32
 2c4:	1000206a 	andne	r2, r0, sl, rrx
	...
 2d0:	10002136 	andne	r2, r0, r6, lsr r1
 2d4:	10002162 	andne	r2, r0, r2, ror #2
 2d8:	10002164 	andne	r2, r0, r4, ror #2
 2dc:	10002176 	andne	r2, r0, r6, ror r1
	...
 2e8:	00000001 	andeq	r0, r0, r1
 2ec:	00000001 	andeq	r0, r0, r1
 2f0:	00000001 	andeq	r0, r0, r1
 2f4:	00000001 	andeq	r0, r0, r1
	...
 300:	00000001 	andeq	r0, r0, r1
 304:	00000001 	andeq	r0, r0, r1
 308:	00000001 	andeq	r0, r0, r1
 30c:	00000001 	andeq	r0, r0, r1
	...
 318:	00000001 	andeq	r0, r0, r1
 31c:	00000001 	andeq	r0, r0, r1
 320:	00000001 	andeq	r0, r0, r1
 324:	00000001 	andeq	r0, r0, r1
	...
 330:	100022ea 	andne	r2, r0, sl, ror #5
 334:	10002300 	andne	r2, r0, r0, lsl #6
 338:	10002304 	andne	r2, r0, r4, lsl #6
 33c:	10002328 	andne	r2, r0, r8, lsr #6
 340:	1000235c 	andne	r2, r0, ip, asr r3
 344:	1000236c 	andne	r2, r0, ip, ror #6
	...
 350:	00000001 	andeq	r0, r0, r1
 354:	00000001 	andeq	r0, r0, r1
 358:	00000001 	andeq	r0, r0, r1
 35c:	00000001 	andeq	r0, r0, r1
 360:	00000001 	andeq	r0, r0, r1
 364:	00000001 	andeq	r0, r0, r1
	...
 370:	00000001 	andeq	r0, r0, r1
 374:	00000001 	andeq	r0, r0, r1
 378:	00000001 	andeq	r0, r0, r1
 37c:	00000001 	andeq	r0, r0, r1
 380:	00000001 	andeq	r0, r0, r1
 384:	00000001 	andeq	r0, r0, r1
	...
 390:	00000001 	andeq	r0, r0, r1
 394:	00000001 	andeq	r0, r0, r1
 398:	00000001 	andeq	r0, r0, r1
 39c:	00000001 	andeq	r0, r0, r1
	...
 3a8:	00000001 	andeq	r0, r0, r1
 3ac:	00000001 	andeq	r0, r0, r1
 3b0:	00000001 	andeq	r0, r0, r1
 3b4:	00000001 	andeq	r0, r0, r1
 3b8:	1000206a 	andne	r2, r0, sl, rrx
 3bc:	10002084 	andne	r2, r0, r4, lsl #1
 3c0:	10002084 	andne	r2, r0, r4, lsl #1
 3c4:	100020fa 	strdne	r2, [r0], -sl
 3c8:	100020fa 	strdne	r2, [r0], -sl
 3cc:	1000211e 	andne	r2, r0, lr, lsl r1
 3d0:	1000211e 	andne	r2, r0, lr, lsl r1
 3d4:	10002176 	andne	r2, r0, r6, ror r1
 3d8:	10002176 	andne	r2, r0, r6, ror r1
 3dc:	100021f8 	strdne	r2, [r0], -r8
 3e0:	100021f8 	strdne	r2, [r0], -r8
 3e4:	1000227e 	andne	r2, r0, lr, ror r2
 3e8:	1000227e 	andne	r2, r0, lr, ror r2
 3ec:	1000229e 	mulne	r0, lr, r2
 3f0:	1000229e 	mulne	r0, lr, r2
 3f4:	100022dc 	ldrdne	r2, [r0], -ip
 3f8:	00000001 	andeq	r0, r0, r1
 3fc:	00000001 	andeq	r0, r0, r1
 400:	00000001 	andeq	r0, r0, r1
 404:	00000001 	andeq	r0, r0, r1
 408:	00000001 	andeq	r0, r0, r1
 40c:	00000001 	andeq	r0, r0, r1
 410:	00000001 	andeq	r0, r0, r1
 414:	00000001 	andeq	r0, r0, r1
 418:	00000001 	andeq	r0, r0, r1
 41c:	00000001 	andeq	r0, r0, r1
 420:	00000001 	andeq	r0, r0, r1
 424:	00000001 	andeq	r0, r0, r1
 428:	00000001 	andeq	r0, r0, r1
 42c:	00000001 	andeq	r0, r0, r1
 430:	00000001 	andeq	r0, r0, r1
 434:	00000001 	andeq	r0, r0, r1
 438:	00000001 	andeq	r0, r0, r1
 43c:	00000001 	andeq	r0, r0, r1
 440:	00000001 	andeq	r0, r0, r1
 444:	00000001 	andeq	r0, r0, r1
 448:	00000001 	andeq	r0, r0, r1
 44c:	00000001 	andeq	r0, r0, r1
 450:	100022dc 	ldrdne	r2, [r0], -ip
 454:	100023cc 	andne	r2, r0, ip, asr #7
 458:	00000001 	andeq	r0, r0, r1
 45c:	00000001 	andeq	r0, r0, r1
 460:	00000001 	andeq	r0, r0, r1
 464:	00000001 	andeq	r0, r0, r1
 468:	00000001 	andeq	r0, r0, r1
 46c:	00000001 	andeq	r0, r0, r1
 470:	00000001 	andeq	r0, r0, r1
 474:	00000001 	andeq	r0, r0, r1
 478:	00000001 	andeq	r0, r0, r1
 47c:	00000001 	andeq	r0, r0, r1
 480:	00000001 	andeq	r0, r0, r1
 484:	00000001 	andeq	r0, r0, r1
 488:	00000001 	andeq	r0, r0, r1
 48c:	00000001 	andeq	r0, r0, r1
 490:	00000001 	andeq	r0, r0, r1
 494:	00000001 	andeq	r0, r0, r1
 498:	00000001 	andeq	r0, r0, r1
 49c:	00000001 	andeq	r0, r0, r1
 4a0:	00000001 	andeq	r0, r0, r1
 4a4:	00000001 	andeq	r0, r0, r1
 4a8:	00000001 	andeq	r0, r0, r1
 4ac:	00000001 	andeq	r0, r0, r1
 4b0:	00000001 	andeq	r0, r0, r1
 4b4:	00000001 	andeq	r0, r0, r1
 4b8:	00000001 	andeq	r0, r0, r1
 4bc:	00000001 	andeq	r0, r0, r1
 4c0:	100023cc 	andne	r2, r0, ip, asr #7
 4c4:	1000241e 	andne	r2, r0, lr, lsl r4
 4c8:	00000001 	andeq	r0, r0, r1
 4cc:	00000001 	andeq	r0, r0, r1
 4d0:	00000001 	andeq	r0, r0, r1
 4d4:	00000001 	andeq	r0, r0, r1
 4d8:	00000001 	andeq	r0, r0, r1
 4dc:	00000001 	andeq	r0, r0, r1
 4e0:	00000001 	andeq	r0, r0, r1
 4e4:	00000001 	andeq	r0, r0, r1
 4e8:	00000001 	andeq	r0, r0, r1
 4ec:	00000001 	andeq	r0, r0, r1
	...
 4f8:	100026a2 	andne	r2, r0, r2, lsr #13
 4fc:	100026c2 	andne	r2, r0, r2, asr #13
 500:	100026ea 	andne	r2, r0, sl, ror #13
 504:	100026f4 	strdne	r2, [r0], -r4
	...
 510:	1000271c 	andne	r2, r0, ip, lsl r7
 514:	10002722 	andne	r2, r0, r2, lsr #14
 518:	10002724 	andne	r2, r0, r4, lsr #14
 51c:	10002756 	andne	r2, r0, r6, asr r7
	...
 528:	00000001 	andeq	r0, r0, r1
 52c:	00000001 	andeq	r0, r0, r1
 530:	00000001 	andeq	r0, r0, r1
 534:	00000001 	andeq	r0, r0, r1
	...
 540:	00000001 	andeq	r0, r0, r1
 544:	00000001 	andeq	r0, r0, r1
 548:	00000001 	andeq	r0, r0, r1
 54c:	00000001 	andeq	r0, r0, r1
	...
 558:	100028cc 	andne	r2, r0, ip, asr #17
 55c:	100028de 	ldrdne	r2, [r0], -lr
 560:	100028e0 	andne	r2, r0, r0, ror #17
 564:	100028fe 	strdne	r2, [r0], -lr
 568:	10002900 	andne	r2, r0, r0, lsl #18
 56c:	1000291a 	andne	r2, r0, sl, lsl r9
 570:	1000291e 	andne	r2, r0, lr, lsl r9
 574:	100029e4 	andne	r2, r0, r4, ror #19
 578:	100029f0 	strdne	r2, [r0], -r0
 57c:	100029f2 	strdne	r2, [r0], -r2	; <UNPREDICTABLE>
	...
 588:	1000292e 	andne	r2, r0, lr, lsr #18
 58c:	10002934 	andne	r2, r0, r4, lsr r9
 590:	100029a6 	andne	r2, r0, r6, lsr #19
 594:	100029c4 	andne	r2, r0, r4, asr #19
	...
 5a0:	10002934 	andne	r2, r0, r4, lsr r9
 5a4:	1000293e 	andne	r2, r0, lr, lsr r9
 5a8:	100029ca 	andne	r2, r0, sl, asr #19
 5ac:	100029e4 	andne	r2, r0, r4, ror #19
	...
 5b8:	10002a26 	andne	r2, r0, r6, lsr #20
 5bc:	10002a3a 	andne	r2, r0, sl, lsr sl
 5c0:	10002a3e 	andne	r2, r0, lr, lsr sl
 5c4:	10002a4a 	andne	r2, r0, sl, asr #20
 5c8:	10002a4c 	andne	r2, r0, ip, asr #20
 5cc:	10002b24 	andne	r2, r0, r4, lsr #22
 5d0:	10002b26 	andne	r2, r0, r6, lsr #22
 5d4:	10002b26 	andne	r2, r0, r6, lsr #22
	...
 5e0:	10002a3e 	andne	r2, r0, lr, lsr sl
 5e4:	10002a44 	andne	r2, r0, r4, asr #20
 5e8:	10002a5a 	andne	r2, r0, sl, asr sl
 5ec:	10002a7a 	andne	r2, r0, sl, ror sl
	...
 5f8:	10002a44 	andne	r2, r0, r4, asr #20
 5fc:	10002a4a 	andne	r2, r0, sl, asr #20
 600:	10002a7a 	andne	r2, r0, sl, ror sl
 604:	10002a98 	mulne	r0, r8, sl
	...
 610:	10002af0 	strdne	r2, [r0], -r0
 614:	10002af6 	strdne	r2, [r0], -r6
 618:	10002b08 	andne	r2, r0, r8, lsl #22
 61c:	10002b24 	andne	r2, r0, r4, lsr #22
	...
 628:	00000001 	andeq	r0, r0, r1
 62c:	00000001 	andeq	r0, r0, r1
 630:	00000001 	andeq	r0, r0, r1
 634:	00000001 	andeq	r0, r0, r1
 638:	00000001 	andeq	r0, r0, r1
 63c:	00000001 	andeq	r0, r0, r1
 640:	00000001 	andeq	r0, r0, r1
 644:	00000001 	andeq	r0, r0, r1
	...
 650:	10002b74 	andne	r2, r0, r4, ror fp
 654:	10002b7c 	andne	r2, r0, ip, ror fp
 658:	10002b8e 	andne	r2, r0, lr, lsl #23
 65c:	10002ba8 	andne	r2, r0, r8, lsr #23
	...
 668:	10002bbc 			; <UNDEFINED> instruction: 0x10002bbc
 66c:	10002c06 	andne	r2, r0, r6, lsl #24
 670:	10002c0a 	andne	r2, r0, sl, lsl #24
 674:	10002c2c 	andne	r2, r0, ip, lsr #24
	...
 680:	10002bd2 	ldrdne	r2, [r0], -r2	; <UNPREDICTABLE>
 684:	10002c02 	andne	r2, r0, r2, lsl #24
 688:	10002c0a 	andne	r2, r0, sl, lsl #24
 68c:	10002c2c 	andne	r2, r0, ip, lsr #24
	...
 698:	00000001 	andeq	r0, r0, r1
 69c:	00000001 	andeq	r0, r0, r1
 6a0:	00000001 	andeq	r0, r0, r1
 6a4:	00000001 	andeq	r0, r0, r1
	...
 6b0:	00000001 	andeq	r0, r0, r1
 6b4:	00000001 	andeq	r0, r0, r1
 6b8:	00000001 	andeq	r0, r0, r1
 6bc:	00000001 	andeq	r0, r0, r1
	...
 6c8:	10002c8a 	andne	r2, r0, sl, lsl #25
 6cc:	10002caa 	andne	r2, r0, sl, lsr #25
 6d0:	10002d26 	andne	r2, r0, r6, lsr #26
 6d4:	10002d2c 	andne	r2, r0, ip, lsr #26
	...
 6e0:	10002cb2 			; <UNDEFINED> instruction: 0x10002cb2
 6e4:	10002cd0 	ldrdne	r2, [r0], -r0
 6e8:	10002d2c 	andne	r2, r0, ip, lsr #26
 6ec:	10002d32 	andne	r2, r0, r2, lsr sp
	...
 6f8:	00000001 	andeq	r0, r0, r1
 6fc:	00000001 	andeq	r0, r0, r1
 700:	00000001 	andeq	r0, r0, r1
 704:	00000001 	andeq	r0, r0, r1
	...
 710:	00000001 	andeq	r0, r0, r1
 714:	00000001 	andeq	r0, r0, r1
 718:	00000001 	andeq	r0, r0, r1
 71c:	00000001 	andeq	r0, r0, r1
	...
 728:	10002d8a 	andne	r2, r0, sl, lsl #27
 72c:	10002da8 	andne	r2, r0, r8, lsr #27
 730:	10002db0 			; <UNDEFINED> instruction: 0x10002db0
 734:	10002dfc 	strdne	r2, [r0], -ip
	...
 740:	00000001 	andeq	r0, r0, r1
 744:	00000001 	andeq	r0, r0, r1
 748:	00000001 	andeq	r0, r0, r1
 74c:	00000001 	andeq	r0, r0, r1
	...
 758:	00000001 	andeq	r0, r0, r1
 75c:	00000001 	andeq	r0, r0, r1
 760:	00000001 	andeq	r0, r0, r1
 764:	00000001 	andeq	r0, r0, r1
	...
 770:	00000001 	andeq	r0, r0, r1
 774:	00000001 	andeq	r0, r0, r1
 778:	00000001 	andeq	r0, r0, r1
 77c:	00000001 	andeq	r0, r0, r1
	...
 788:	10002f12 	andne	r2, r0, r2, lsl pc
 78c:	10002f40 	andne	r2, r0, r0, asr #30
 790:	10002f44 	andne	r2, r0, r4, asr #30
 794:	10002f44 	andne	r2, r0, r4, asr #30
 798:	10002f44 	andne	r2, r0, r4, asr #30
 79c:	10002f54 	andne	r2, r0, r4, asr pc
	...
 7a8:	00000001 	andeq	r0, r0, r1
 7ac:	00000001 	andeq	r0, r0, r1
 7b0:	10002420 	andne	r2, r0, r0, lsr #8
 7b4:	10002460 	andne	r2, r0, r0, ror #8
 7b8:	00000001 	andeq	r0, r0, r1
 7bc:	00000001 	andeq	r0, r0, r1
 7c0:	00000001 	andeq	r0, r0, r1
 7c4:	00000001 	andeq	r0, r0, r1
 7c8:	10002460 	andne	r2, r0, r0, ror #8
 7cc:	10002488 	andne	r2, r0, r8, lsl #9
 7d0:	10002488 	andne	r2, r0, r8, lsl #9
 7d4:	1000251e 	andne	r2, r0, lr, lsl r5
 7d8:	1000251e 	andne	r2, r0, lr, lsl r5
 7dc:	10002570 	andne	r2, r0, r0, ror r5
 7e0:	10002570 	andne	r2, r0, r0, ror r5
 7e4:	100025d8 	ldrdne	r2, [r0], -r8
 7e8:	100025d8 	ldrdne	r2, [r0], -r8
 7ec:	10002694 	mulne	r0, r4, r6
 7f0:	10002694 	mulne	r0, r4, r6
 7f4:	100026f6 	strdne	r2, [r0], -r6
 7f8:	100026f6 	strdne	r2, [r0], -r6
 7fc:	1000271a 	andne	r2, r0, sl, lsl r7
 800:	1000271c 	andne	r2, r0, ip, lsl r7
 804:	10002768 	andne	r2, r0, r8, ror #14
 808:	10002768 	andne	r2, r0, r8, ror #14
 80c:	10002810 	andne	r2, r0, r0, lsl r8
 810:	10002810 	andne	r2, r0, r0, lsl r8
 814:	10002838 	andne	r2, r0, r8, lsr r8
 818:	10002838 	andne	r2, r0, r8, lsr r8
 81c:	1000285a 	andne	r2, r0, sl, asr r8
 820:	00000001 	andeq	r0, r0, r1
 824:	00000001 	andeq	r0, r0, r1
 828:	00000001 	andeq	r0, r0, r1
 82c:	00000001 	andeq	r0, r0, r1
 830:	00000001 	andeq	r0, r0, r1
 834:	00000001 	andeq	r0, r0, r1
 838:	00000001 	andeq	r0, r0, r1
 83c:	00000001 	andeq	r0, r0, r1
 840:	00000001 	andeq	r0, r0, r1
 844:	00000001 	andeq	r0, r0, r1
 848:	00000001 	andeq	r0, r0, r1
 84c:	00000001 	andeq	r0, r0, r1
 850:	00000001 	andeq	r0, r0, r1
 854:	00000001 	andeq	r0, r0, r1
 858:	00000001 	andeq	r0, r0, r1
 85c:	00000001 	andeq	r0, r0, r1
 860:	00000001 	andeq	r0, r0, r1
 864:	00000001 	andeq	r0, r0, r1
 868:	00000001 	andeq	r0, r0, r1
 86c:	00000001 	andeq	r0, r0, r1
 870:	1000285c 	andne	r2, r0, ip, asr r8
 874:	1000286c 	andne	r2, r0, ip, ror #16
 878:	1000286c 	andne	r2, r0, ip, ror #16
 87c:	10002878 	andne	r2, r0, r8, ror r8
 880:	00000001 	andeq	r0, r0, r1
 884:	00000001 	andeq	r0, r0, r1
 888:	10002878 	andne	r2, r0, r8, ror r8
 88c:	10002884 	andne	r2, r0, r4, lsl #17
 890:	00000001 	andeq	r0, r0, r1
 894:	00000001 	andeq	r0, r0, r1
 898:	00000001 	andeq	r0, r0, r1
 89c:	00000001 	andeq	r0, r0, r1
 8a0:	00000001 	andeq	r0, r0, r1
 8a4:	00000001 	andeq	r0, r0, r1
 8a8:	00000001 	andeq	r0, r0, r1
 8ac:	00000001 	andeq	r0, r0, r1
 8b0:	10002884 	andne	r2, r0, r4, lsl #17
 8b4:	100028c0 	andne	r2, r0, r0, asr #17
 8b8:	100028c0 	andne	r2, r0, r0, asr #17
 8bc:	10002a20 	andne	r2, r0, r0, lsr #20
 8c0:	10002a20 	andne	r2, r0, r0, lsr #20
 8c4:	10002b50 	andne	r2, r0, r0, asr fp
 8c8:	00000001 	andeq	r0, r0, r1
 8cc:	00000001 	andeq	r0, r0, r1
 8d0:	10002b50 	andne	r2, r0, r0, asr fp
 8d4:	10002b6e 	andne	r2, r0, lr, ror #22
 8d8:	10002b70 	andne	r2, r0, r0, ror fp
 8dc:	10002ba8 	andne	r2, r0, r8, lsr #23
 8e0:	00000001 	andeq	r0, r0, r1
 8e4:	00000001 	andeq	r0, r0, r1
 8e8:	00000001 	andeq	r0, r0, r1
 8ec:	00000001 	andeq	r0, r0, r1
 8f0:	00000001 	andeq	r0, r0, r1
 8f4:	00000001 	andeq	r0, r0, r1
 8f8:	00000001 	andeq	r0, r0, r1
 8fc:	00000001 	andeq	r0, r0, r1
 900:	00000001 	andeq	r0, r0, r1
 904:	00000001 	andeq	r0, r0, r1
 908:	00000001 	andeq	r0, r0, r1
 90c:	00000001 	andeq	r0, r0, r1
 910:	00000001 	andeq	r0, r0, r1
 914:	00000001 	andeq	r0, r0, r1
 918:	10002ba8 	andne	r2, r0, r8, lsr #23
 91c:	10002c2c 	andne	r2, r0, ip, lsr #24
 920:	00000001 	andeq	r0, r0, r1
 924:	00000001 	andeq	r0, r0, r1
 928:	10002c2c 	andne	r2, r0, ip, lsr #24
 92c:	10002c48 	andne	r2, r0, r8, asr #24
 930:	00000001 	andeq	r0, r0, r1
 934:	00000001 	andeq	r0, r0, r1
 938:	10002c48 	andne	r2, r0, r8, asr #24
 93c:	10002c84 	andne	r2, r0, r4, lsl #25
 940:	10002c84 	andne	r2, r0, r4, lsl #25
 944:	10002d68 	andne	r2, r0, r8, ror #26
 948:	00000001 	andeq	r0, r0, r1
 94c:	00000001 	andeq	r0, r0, r1
 950:	00000001 	andeq	r0, r0, r1
 954:	00000001 	andeq	r0, r0, r1
 958:	10002d68 	andne	r2, r0, r8, ror #26
 95c:	10002d80 	andne	r2, r0, r0, lsl #27
 960:	10002d80 	andne	r2, r0, r0, lsl #27
 964:	10002dfc 	strdne	r2, [r0], -ip
 968:	10002dfc 	strdne	r2, [r0], -ip
 96c:	10002e08 	andne	r2, r0, r8, lsl #28
 970:	10002e08 	andne	r2, r0, r8, lsl #28
 974:	10002e50 	andne	r2, r0, r0, asr lr
 978:	00000001 	andeq	r0, r0, r1
 97c:	00000001 	andeq	r0, r0, r1
 980:	00000001 	andeq	r0, r0, r1
 984:	00000001 	andeq	r0, r0, r1
 988:	00000001 	andeq	r0, r0, r1
 98c:	00000001 	andeq	r0, r0, r1
 990:	00000001 	andeq	r0, r0, r1
 994:	00000001 	andeq	r0, r0, r1
 998:	00000001 	andeq	r0, r0, r1
 99c:	00000001 	andeq	r0, r0, r1
 9a0:	10002e50 	andne	r2, r0, r0, asr lr
 9a4:	10002ed0 	ldrdne	r2, [r0], -r0
 9a8:	00000001 	andeq	r0, r0, r1
 9ac:	00000001 	andeq	r0, r0, r1
 9b0:	00000001 	andeq	r0, r0, r1
 9b4:	00000001 	andeq	r0, r0, r1
 9b8:	00000001 	andeq	r0, r0, r1
 9bc:	00000001 	andeq	r0, r0, r1
 9c0:	00000001 	andeq	r0, r0, r1
 9c4:	00000001 	andeq	r0, r0, r1
 9c8:	00000001 	andeq	r0, r0, r1
 9cc:	00000001 	andeq	r0, r0, r1
 9d0:	00000001 	andeq	r0, r0, r1
 9d4:	00000001 	andeq	r0, r0, r1
 9d8:	00000001 	andeq	r0, r0, r1
 9dc:	00000001 	andeq	r0, r0, r1
 9e0:	00000001 	andeq	r0, r0, r1
 9e4:	00000001 	andeq	r0, r0, r1
 9e8:	00000001 	andeq	r0, r0, r1
 9ec:	00000001 	andeq	r0, r0, r1
 9f0:	00000001 	andeq	r0, r0, r1
 9f4:	00000001 	andeq	r0, r0, r1
 9f8:	10002ed0 	ldrdne	r2, [r0], -r0
 9fc:	10002ee8 	andne	r2, r0, r8, ror #29
 a00:	10002ee8 	andne	r2, r0, r8, ror #29
 a04:	10002f54 	andne	r2, r0, r4, asr pc
 a08:	10002f54 	andne	r2, r0, r4, asr pc
 a0c:	10002f9c 	mulne	r0, ip, pc	; <UNPREDICTABLE>
 a10:	10002f9c 	mulne	r0, ip, pc	; <UNPREDICTABLE>
 a14:	10002fb4 			; <UNDEFINED> instruction: 0x10002fb4
 a18:	00000001 	andeq	r0, r0, r1
 a1c:	00000001 	andeq	r0, r0, r1
	...
 a28:	10002fb4 			; <UNDEFINED> instruction: 0x10002fb4
 a2c:	10002fd4 	ldrdne	r2, [r0], -r4
 a30:	10002fd4 	ldrdne	r2, [r0], -r4
 a34:	1000301c 	andne	r3, r0, ip, lsl r0
 a38:	1000301c 	andne	r3, r0, ip, lsl r0
 a3c:	10003044 	andne	r3, r0, r4, asr #32
 a40:	10003044 	andne	r3, r0, r4, asr #32
 a44:	10003084 	andne	r3, r0, r4, lsl #1
 a48:	10003084 	andne	r3, r0, r4, lsl #1
 a4c:	100030b4 	strhne	r3, [r0], -r4
 a50:	100030b4 	strhne	r3, [r0], -r4
 a54:	100030e0 	andne	r3, r0, r0, ror #1
 a58:	100030e0 	andne	r3, r0, r0, ror #1
 a5c:	10003148 	andne	r3, r0, r8, asr #2
 a60:	10003148 	andne	r3, r0, r8, asr #2
 a64:	10003240 	andne	r3, r0, r0, asr #4
 a68:	10003240 	andne	r3, r0, r0, asr #4
 a6c:	10003256 	andne	r3, r0, r6, asr r2
 a70:	10003258 	andne	r3, r0, r8, asr r2
 a74:	100032b8 			; <UNDEFINED> instruction: 0x100032b8
 a78:	00000001 	andeq	r0, r0, r1
 a7c:	00000001 	andeq	r0, r0, r1
 a80:	100032b8 			; <UNDEFINED> instruction: 0x100032b8
 a84:	10003314 	andne	r3, r0, r4, lsl r3
 a88:	00000001 	andeq	r0, r0, r1
 a8c:	00000001 	andeq	r0, r0, r1
 a90:	00000001 	andeq	r0, r0, r1
 a94:	00000001 	andeq	r0, r0, r1
 a98:	00000001 	andeq	r0, r0, r1
 a9c:	00000001 	andeq	r0, r0, r1
 aa0:	00000001 	andeq	r0, r0, r1
 aa4:	00000001 	andeq	r0, r0, r1
 aa8:	00000001 	andeq	r0, r0, r1
 aac:	00000001 	andeq	r0, r0, r1
 ab0:	00000001 	andeq	r0, r0, r1
 ab4:	00000001 	andeq	r0, r0, r1
 ab8:	00000001 	andeq	r0, r0, r1
 abc:	00000001 	andeq	r0, r0, r1
 ac0:	00000001 	andeq	r0, r0, r1
 ac4:	00000001 	andeq	r0, r0, r1
 ac8:	00000001 	andeq	r0, r0, r1
 acc:	00000001 	andeq	r0, r0, r1
 ad0:	00000001 	andeq	r0, r0, r1
 ad4:	00000001 	andeq	r0, r0, r1
 ad8:	00000001 	andeq	r0, r0, r1
 adc:	00000001 	andeq	r0, r0, r1
 ae0:	00000001 	andeq	r0, r0, r1
 ae4:	00000001 	andeq	r0, r0, r1
 ae8:	00000001 	andeq	r0, r0, r1
 aec:	00000001 	andeq	r0, r0, r1
 af0:	00000001 	andeq	r0, r0, r1
 af4:	00000001 	andeq	r0, r0, r1
 af8:	00000001 	andeq	r0, r0, r1
 afc:	00000001 	andeq	r0, r0, r1
 b00:	00000001 	andeq	r0, r0, r1
 b04:	00000001 	andeq	r0, r0, r1
 b08:	00000001 	andeq	r0, r0, r1
 b0c:	00000001 	andeq	r0, r0, r1
 b10:	00000001 	andeq	r0, r0, r1
 b14:	00000001 	andeq	r0, r0, r1
	...
 b20:	10003314 	andne	r3, r0, r4, lsl r3
 b24:	1000336c 	andne	r3, r0, ip, ror #6
 b28:	1000336c 	andne	r3, r0, ip, ror #6
 b2c:	100033d0 	ldrdne	r3, [r0], -r0
 b30:	100033d0 	ldrdne	r3, [r0], -r0
 b34:	100034a4 	andne	r3, r0, r4, lsr #9
 b38:	100034a4 	andne	r3, r0, r4, lsr #9
 b3c:	100034f4 	strdne	r3, [r0], -r4
 b40:	00000001 	andeq	r0, r0, r1
 b44:	00000001 	andeq	r0, r0, r1
 b48:	00000001 	andeq	r0, r0, r1
 b4c:	00000001 	andeq	r0, r0, r1
 b50:	00000001 	andeq	r0, r0, r1
 b54:	00000001 	andeq	r0, r0, r1
 b58:	00000001 	andeq	r0, r0, r1
 b5c:	00000001 	andeq	r0, r0, r1
 b60:	00000001 	andeq	r0, r0, r1
 b64:	00000001 	andeq	r0, r0, r1
 b68:	00000001 	andeq	r0, r0, r1
 b6c:	00000001 	andeq	r0, r0, r1
	...
 b78:	100034f4 	strdne	r3, [r0], -r4
 b7c:	1000350c 	andne	r3, r0, ip, lsl #10
 b80:	1000350c 	andne	r3, r0, ip, lsl #10
 b84:	10003620 	andne	r3, r0, r0, lsr #12
 b88:	10003620 	andne	r3, r0, r0, lsr #12
 b8c:	1000365c 	andne	r3, r0, ip, asr r6
 b90:	1000365c 	andne	r3, r0, ip, asr r6
 b94:	10003672 	andne	r3, r0, r2, ror r6
 b98:	10003674 	andne	r3, r0, r4, ror r6
 b9c:	10003690 	mulne	r0, r0, r6
 ba0:	10003690 	mulne	r0, r0, r6
 ba4:	100036ac 	andne	r3, r0, ip, lsr #13
 ba8:	100036ac 	andne	r3, r0, ip, lsr #13
 bac:	100036ce 	andne	r3, r0, lr, asr #13
 bb0:	100036ce 	andne	r3, r0, lr, asr #13
 bb4:	100036e2 	andne	r3, r0, r2, ror #13
 bb8:	100036e4 	andne	r3, r0, r4, ror #13
 bbc:	10003774 	andne	r3, r0, r4, ror r7
 bc0:	10003774 	andne	r3, r0, r4, ror r7
 bc4:	100037b4 			; <UNDEFINED> instruction: 0x100037b4
 bc8:	00000001 	andeq	r0, r0, r1
 bcc:	00000001 	andeq	r0, r0, r1
 bd0:	00000001 	andeq	r0, r0, r1
 bd4:	00000001 	andeq	r0, r0, r1
	...
 be0:	100037b4 			; <UNDEFINED> instruction: 0x100037b4
 be4:	100037da 	ldrdne	r3, [r0], -sl
 be8:	00000001 	andeq	r0, r0, r1
 bec:	00000001 	andeq	r0, r0, r1
 bf0:	00000001 	andeq	r0, r0, r1
 bf4:	00000001 	andeq	r0, r0, r1
 bf8:	00000001 	andeq	r0, r0, r1
 bfc:	00000001 	andeq	r0, r0, r1
 c00:	100037e0 	andne	r3, r0, r0, ror #15
 c04:	100037fa 	strdne	r3, [r0], -sl
 c08:	10003800 	andne	r3, r0, r0, lsl #16
 c0c:	10003816 	andne	r3, r0, r6, lsl r8
 c10:	10003816 	andne	r3, r0, r6, lsl r8
 c14:	10003824 	andne	r3, r0, r4, lsr #16
 c18:	10003824 	andne	r3, r0, r4, lsr #16
 c1c:	10003868 	andne	r3, r0, r8, ror #16
 c20:	1000386c 	andne	r3, r0, ip, ror #16
 c24:	1000387e 	andne	r3, r0, lr, ror r8
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
    __asm volatile ( "mrs %0, ipsr" : "=r" ( ulCurrentInterrupt )::"memory" );
       0:	00000430 	andeq	r0, r0, r0, lsr r4
    if( ulCurrentInterrupt == 0 )
       4:	02340003 	eorseq	r0, r4, #3
        xReturn = pdFALSE;
       8:	01020000 	mrseq	r0, (UNDEF: 2)
}
       c:	000d0efb 	strdeq	r0, [sp], -fp
      10:	01010101 	tsteq	r1, r1, lsl #2
      14:	01000000 	mrseq	r0, (UNDEF: 0)
        if(ch == '\n' || it >= size) {
      18:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
}
      1c:	7070612f 	rsbsvc	r6, r0, pc, lsr #2
      20:	6163696c 	cmnvs	r3, ip, ror #18
      24:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
      28:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
      2c:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
      30:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
      34:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
      38:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
      3c:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
      40:	5f6d7261 	svcpl	0x006d7261
        BaseType_t xReturn = pdFAIL;
      44:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
    }
      48:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
                pxBlock = heapPROTECT_BLOCK_POINTER( pxBlock->pxNextFreeBlock );
      4c:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
            while( pxBlock != pxEnd )
      50:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
      54:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
                if( pxBlock->xBlockSize > xMaxSize )
      58:	30312d69 	eorscc	r2, r1, r9, ror #26
      5c:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
                if( pxBlock->xBlockSize < xMinSize )
      60:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
                    xMinSize = pxBlock->xBlockSize;
      64:	615c3031 	cmpvs	ip, r1, lsr r0
      68:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
      6c:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
      70:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
      74:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
      78:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
      7c:	63616d5c 	cmnvs	r1, #92, 26	; 0x1700
            prvUnlockQueue( pxQueue );
      80:	656e6968 	strbvs	r6, [lr, #-2408]!	; 0xfffff698
            ( void ) xTaskResumeAll();
      84:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
      88:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
      8c:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
      90:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
        taskENTER_CRITICAL();
      94:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
            if( uxSemaphoreCount > ( UBaseType_t ) 0 )
      98:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
                if( xTicksToWait == ( TickType_t ) 0 )
      9c:	5f6d7261 	svcpl	0x006d7261
      a0:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
                else if( xEntryTimeSet == pdFALSE )
      a4:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
        taskEXIT_CRITICAL();
      a8:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
        vTaskSuspendAll();
      ac:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
        prvLockQueue( pxQueue );
      b0:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
      b4:	30312d69 	eorscc	r2, r1, r9, ror #26
      b8:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
      bc:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
      c0:	615c3031 	cmpvs	ip, r1, lsr r0
      c4:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
      c8:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
      cc:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
        if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
      d0:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
      d4:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
      d8:	7379735c 	cmnvc	r9, #92, 6	; 0x70000001
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
      dc:	2f2e2e00 	svccs	0x002e2e00
      e0:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
                    if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
      e4:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
      e8:	6f747262 	svcvs	0x00747262
                vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
      ec:	72462f73 	subvc	r2, r6, #460	; 0x1cc
      f0:	54526565 	ldrbpl	r6, [r2], #-1381	; 0xfffffa9b
                prvUnlockQueue( pxQueue );
      f4:	702f534f 	eorvc	r5, pc, pc, asr #6
      f8:	6174726f 	cmnvs	r4, pc, ror #4
                if( xTaskResumeAll() == pdFALSE )
      fc:	2f656c62 	svccs	0x00656c62
     100:	2f434347 	svccs	0x00434347
                    taskYIELD_WITHIN_API();
     104:	5f4d5241 	svcpl	0x004d5241
                    if( xInheritanceOccurred != pdFALSE )
     108:	33334d43 	teqcc	r3, #4288	; 0x10c0
                return errQUEUE_EMPTY;
     10c:	5a544e5f 	bpl	1513a90 <__RAM_SIZE+0x1413a90>
                        taskENTER_CRITICAL();
     110:	6e6f6e2f 	cdpvs	14, 6, cr6, cr15, cr15, {1}
                            uxHighestWaitingPriority = prvGetDisinheritPriorityAfterTimeout( pxQueue );
     114:	6365735f 	cmnvs	r5, #2080374785	; 0x7c000001
     118:	00657275 	rsbeq	r7, r5, r5, ror r2
                            vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
     11c:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
                        taskEXIT_CRITICAL();
     120:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
     124:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
     128:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
     12c:	6572462f 	ldrbvs	r4, [r2, #-1583]!	; 0xfffff9d1
     130:	4f545265 	svcmi	0x00545265
     134:	6e692f53 	mcrvs	15, 3, r2, cr9, cr3, {2}
     138:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
     13c:	2e2e0065 	cdpcs	0, 2, cr0, cr14, cr5, {3}
     140:	726f432f 	rsbvc	r4, pc, #-1140850688	; 0xbc000000
     144:	6e492f65 	cdpvs	15, 4, cr2, cr9, cr5, {3}
     148:	2e2e0063 	cdpcs	0, 2, cr0, cr14, cr3, {3}
     14c:	2f2e2e2f 	svccs	0x002e2e2f
     150:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; a0 <__STACKSEAL_SIZE+0xa0>
     154:	74756269 	ldrbtvc	r6, [r5], #-617	; 0xfffffd97
     158:	2f736c69 	svccs	0x00736c69
     15c:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
     160:	75642d74 	strbvc	r2, [r4, #-3444]!	; 0xfffff28c
     164:	692f706d 	stmdbvs	pc!, {r0, r2, r3, r5, r6, ip, sp, lr}	; <UNPREDICTABLE>
     168:	6300636e 	movwvs	r6, #878	; 0x36e
     16c:	73755c3a 	cmnvc	r5, #14848	; 0x3a00
     170:	5c737265 	lfmpl	f7, 2, [r3], #-404	; 0xfffffe6c
     174:	6f646978 	svcvs	0x00646978
     178:	72705c6e 	rsbsvc	r5, r0, #28160	; 0x6e00
     17c:	6172676f 	cmnvs	r2, pc, ror #14
     180:	72615c6d 	rsbvc	r5, r1, #27904	; 0x6d00
     184:	63675f6d 	cmnvs	r7, #436	; 0x1b4
     188:	63675c63 	cmnvs	r7, #25344	; 0x6300
     18c:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
     190:	6f6e2d6d 	svcvs	0x006e2d6d
     194:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
     198:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
     19c:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
     1a0:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
     1a4:	30312e31 	eorscc	r2, r1, r1, lsr lr
     1a8:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
     1ac:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
     1b0:	61652d65 	cmnvs	r5, r5, ror #26
     1b4:	695c6962 	ldmdbvs	ip, {r1, r5, r6, r8, fp, sp, lr}^
     1b8:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
     1bc:	00006564 	andeq	r6, r0, r4, ror #10
     1c0:	6e69616d 	powvsez	f6, f1, #5.0
     1c4:	0100632e 	tsteq	r0, lr, lsr #6
     1c8:	645f0000 	ldrbvs	r0, [pc], #-0	; 1d0 <__STACKSEAL_SIZE+0x1d0>
     1cc:	75616665 	strbvc	r6, [r1, #-1637]!	; 0xfffff99b
     1d0:	745f746c 	ldrbvc	r7, [pc], #-1132	; 1d8 <__STACKSEAL_SIZE+0x1d8>
     1d4:	73657079 	cmnvc	r5, #121	; 0x79
     1d8:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
     1dc:	735f0000 	cmpvc	pc, #0
     1e0:	6e696474 	mcrvs	4, 3, r6, cr9, cr4, {3}
     1e4:	00682e74 	rsbeq	r2, r8, r4, ror lr
     1e8:	70000003 	andvc	r0, r0, r3
     1ec:	6d74726f 	lfmvs	f7, 2, [r4, #-444]!	; 0xfffffe44
     1f0:	6f726361 	svcvs	0x00726361
     1f4:	6d6d6f63 	stclvs	15, cr6, [sp, #-396]!	; 0xfffffe74
     1f8:	682e6e6f 	stmdavs	lr!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}
     1fc:	00000400 	andeq	r0, r0, r0, lsl #8
     200:	6b736174 	blvs	1cd87d8 <__RAM_SIZE+0x1bd87d8>
     204:	0500682e 	streq	r6, [r0, #-2094]	; 0xfffff7d2
     208:	61750000 	cmnvs	r5, r0
     20c:	682e7472 	stmdavs	lr!, {r1, r4, r5, r6, sl, ip, sp, lr}
     210:	00000600 	andeq	r0, r0, r0, lsl #12
     214:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
     218:	75642d74 	strbvc	r2, [r4, #-3444]!	; 0xfffff28c
     21c:	682e706d 	stmdavs	lr!, {r0, r2, r3, r5, r6, ip, sp, lr}
     220:	00000700 	andeq	r0, r0, r0, lsl #14
     224:	69647473 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
     228:	00682e6f 	rsbeq	r2, r8, pc, ror #28
     22c:	3c000008 	stccc	0, cr0, [r0], {8}
     230:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	; 0xfffffe78
     234:	6e692d74 	mcrvs	13, 3, r2, cr9, cr4, {3}
     238:	0000003e 	andeq	r0, r0, lr, lsr r0
     23c:	22050000 	andcs	r0, r5, #0
     240:	00020500 	andeq	r0, r2, r0, lsl #10
     244:	03100008 	tsteq	r0, #8
     248:	050100d3 	streq	r0, [r1, #-211]	; 0xffffff2d
     24c:	13132f05 	tstne	r3, #5, 30
     250:	01060f05 	tsteq	r6, r5, lsl #30
     254:	ad060505 	cfstr32ge	mvfx0, [r6, #-20]	; 0xffffffec
     258:	01060805 	tsteq	r6, r5, lsl #16
     25c:	3f060905 	svccc	0x00060905
     260:	01052006 	tsteq	r5, r6
     264:	06090530 			; <UNDEFINED> instruction: 0x06090530
     268:	022e0638 	eoreq	r0, lr, #56, 12	; 0x3800000
     26c:	0101000a 	tsteq	r1, sl
     270:	05002605 	streq	r2, [r0, #-1541]	; 0xfffff9fb
     274:	00000002 	andeq	r0, r0, r2
     278:	010e0300 	mrseq	r0, ELR_hyp
     27c:	05210505 	streq	r0, [r1, #-1285]!	; 0xfffffafb
     280:	023d0601 	eorseq	r0, sp, #1048576	; 0x100000
     284:	01010004 	tsteq	r1, r4
     288:	05001c05 	streq	r1, [r0, #-3077]	; 0xfffff3fb
     28c:	00000002 	andeq	r0, r0, r2
     290:	01120300 	tsteq	r2, r0, lsl #6
     294:	05210505 	streq	r0, [r1, #-1285]!	; 0xfffffafb
     298:	023d0601 	eorseq	r0, sp, #1048576	; 0x100000
     29c:	01010004 	tsteq	r1, r4
     2a0:	05001b05 	streq	r1, [r0, #-2821]	; 0xfffff4fb
     2a4:	00084402 	andeq	r4, r8, r2, lsl #8
     2a8:	01160310 	tsteq	r6, r0, lsl r3
     2ac:	052f0505 	streq	r0, [pc, #-1285]!	; fffffdaf <__StackTop+0xc7effdaf>
     2b0:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
     2b4:	05670605 	strbeq	r0, [r7, #-1541]!	; 0xfffff9fb
     2b8:	0501061a 	streq	r0, [r1, #-1562]	; 0xfffff9e6
     2bc:	053d0605 	ldreq	r0, [sp, #-1541]!	; 0xfffff9fb
     2c0:	2e01061a 	mcrcs	6, 0, r0, cr1, cr10, {0}
     2c4:	21060505 	tstcs	r6, r5, lsl #10
     2c8:	01061105 	tsteq	r6, r5, lsl #2
     2cc:	0605053c 			; <UNDEFINED> instruction: 0x0605053c
     2d0:	0608052f 	streq	r0, [r8], -pc, lsr #10
     2d4:	06090501 	streq	r0, [r9], -r1, lsl #10
     2d8:	06200631 			; <UNDEFINED> instruction: 0x06200631
     2dc:	010e052f 	tsteq	lr, pc, lsr #10
     2e0:	01061205 	tsteq	r6, r5, lsl #4
     2e4:	20200905 	eorcs	r0, r0, r5, lsl #18
     2e8:	2e060f06 	cdpcs	15, 0, cr0, cr6, cr6, {0}
     2ec:	02000d05 	andeq	r0, r0, #320	; 0x140
     2f0:	40060304 	andmi	r0, r6, r4, lsl #6
     2f4:	02002405 	andeq	r2, r0, #83886080	; 0x5000000
     2f8:	05570304 	ldrbeq	r0, [r7, #-772]	; 0xfffffcfc
     2fc:	04020025 	streq	r0, [r2], #-37	; 0xffffffdb
     300:	05010603 	streq	r0, [r1, #-1539]	; 0xfffff9fd
     304:	04020019 	streq	r0, [r2], #-25	; 0xffffffe7
     308:	05200601 	streq	r0, [r0, #-1537]!	; 0xfffff9ff
     30c:	04020009 	streq	r0, [r2], #-9
     310:	06010601 	streq	r0, [r1], -r1, lsl #12
     314:	06010531 			; <UNDEFINED> instruction: 0x06010531
     318:	08022e3e 	stmdaeq	r2, {r1, r2, r3, r4, r5, r9, sl, fp, sp}
     31c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
     320:	02050012 	andeq	r0, r5, #18
     324:	100008ac 	andne	r0, r0, ip, lsr #17
     328:	05012603 	streq	r2, [r1, #-1539]	; 0xfffff9fd
     32c:	2f4b2105 	svccs	0x004b2105
     330:	06010513 			; <UNDEFINED> instruction: 0x06010513
     334:	0005022f 	andeq	r0, r5, pc, lsr #4
     338:	12050101 	andne	r0, r5, #1073741824	; 0x40000000
     33c:	c8020500 	stmdagt	r2, {r8, sl}
     340:	03100008 	tsteq	r0, #8
     344:	0505012d 	streq	r0, [r5, #-301]	; 0xfffffed3
     348:	01054b21 	tsteq	r5, r1, lsr #22
     34c:	05022f06 	streq	r2, [r2, #-3846]	; 0xfffff0fa
     350:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
     354:	02050012 	andeq	r0, r5, #18
     358:	100008e0 	andne	r0, r0, r0, ror #17
     35c:	05013203 	streq	r3, [r1, #-515]	; 0xfffffdfd
     360:	054b2105 	strbeq	r2, [fp, #-261]	; 0xfffffefb
     364:	022f0601 	eoreq	r0, pc, #1048576	; 0x100000
     368:	01010005 	tsteq	r1, r5
     36c:	05001205 	streq	r1, [r0, #-517]	; 0xfffffdfb
     370:	0008f802 	andeq	pc, r8, r2, lsl #16
     374:	01370310 	teqeq	r7, r0, lsl r3
     378:	4b210505 	blmi	841794 <__RAM_SIZE+0x741794>
     37c:	2f060105 	svccs	0x00060105
     380:	01000502 	tsteq	r0, r2, lsl #10
     384:	00120501 	andseq	r0, r2, r1, lsl #10
     388:	09100205 	ldmdbeq	r0, {r0, r2, r9}
     38c:	3c031000 	stccc	0, cr1, [r3], {-0}
     390:	21050501 	tstcs	r5, r1, lsl #10
     394:	0601054b 	streq	r0, [r1], -fp, asr #10
     398:	0005022f 	andeq	r0, r5, pc, lsr #4
     39c:	12050101 	andne	r0, r5, #1073741824	; 0x40000000
     3a0:	28020500 	stmdacs	r2, {r8, sl}
     3a4:	03100009 	tsteq	r0, #9
     3a8:	050100c1 	streq	r0, [r1, #-193]	; 0xffffff3f
     3ac:	054b2105 	strbeq	r2, [fp, #-261]	; 0xfffffefb
     3b0:	022f0601 	eoreq	r0, pc, #1048576	; 0x100000
     3b4:	01010005 	tsteq	r1, r5
     3b8:	05002f05 	streq	r2, [r0, #-3845]	; 0xfffff0fb
     3bc:	00094002 	andeq	r4, r9, r2
     3c0:	00c60310 	sbceq	r0, r6, r0, lsl r3
     3c4:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
     3c8:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
     3cc:	05010609 	streq	r0, [r1, #-1545]	; 0xfffff9f7
     3d0:	0533060d 	ldreq	r0, [r3, #-1549]!	; 0xfffff9f3
     3d4:	09052a05 	stmdbeq	r5, {r0, r2, r9, fp, sp}
     3d8:	053d4b13 	ldreq	r4, [sp, #-2835]!	; 0xfffff4ed
     3dc:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
     3e0:	0531060d 	ldreq	r0, [r1, #-1549]!	; 0xfffff9f3
     3e4:	20010614 	andcs	r0, r1, r4, lsl r6
     3e8:	01000302 	tsteq	r0, r2, lsl #6
     3ec:	00100501 	andseq	r0, r0, r1, lsl #10
     3f0:	09640205 	stmdbeq	r4!, {r0, r2, r9}^
     3f4:	de031000 	cdple	0, 0, cr1, cr3, cr0, {0}
     3f8:	05050100 	streq	r0, [r5, #-256]	; 0xffffff00
     3fc:	3d301321 	ldccc	3, cr1, [r0, #-132]!	; 0xffffff7c
     400:	0609052f 	streq	r0, [r9], -pc, lsr #10
     404:	00050529 	andeq	r0, r5, r9, lsr #10
     408:	06010402 	streq	r0, [r1], -r2, lsl #8
     40c:	00090527 	andeq	r0, r9, r7, lsr #10
     410:	13010402 	movwne	r0, #5122	; 0x1402
     414:	01040200 	mrseq	r0, R12_usr
     418:	04020021 	streq	r0, [r2], #-33	; 0xffffffdf
     41c:	05200601 	streq	r0, [r0, #-1537]!	; 0xfffff9ff
     420:	0402000b 	streq	r0, [r2], #-11
     424:	053a0601 	ldreq	r0, [sl, #-1537]!	; 0xfffff9ff
     428:	04020009 	streq	r0, [r2], #-9
     42c:	02140601 	andseq	r0, r4, #1048576	; 0x100000
     430:	01010006 	tsteq	r1, r6
     434:	000001d1 	ldrdeq	r0, [r0], -r1
     438:	01810003 	orreq	r0, r1, r3
     43c:	01020000 	mrseq	r0, (UNDEF: 2)
     440:	000d0efb 	strdeq	r0, [sp], -fp
     444:	01010101 	tsteq	r1, r1, lsl #2
     448:	01000000 	mrseq	r0, (UNDEF: 0)
     44c:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
     450:	7070612f 	rsbsvc	r6, r0, pc, lsr #2
     454:	6163696c 	cmnvs	r3, ip, ror #18
     458:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
     45c:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
     460:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
     464:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
     468:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
     46c:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
     470:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
     474:	5f6d7261 	svcpl	0x006d7261
     478:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
     47c:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
     480:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
     484:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
     488:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
     48c:	30312d69 	eorscc	r2, r1, r9, ror #26
     490:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
     494:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
     498:	615c3031 	cmpvs	ip, r1, lsr r0
     49c:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
     4a0:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
     4a4:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     4a8:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
     4ac:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
     4b0:	63616d5c 	cmnvs	r1, #92, 26	; 0x1700
     4b4:	656e6968 	strbvs	r6, [lr, #-2408]!	; 0xfffff698
     4b8:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
     4bc:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
     4c0:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
     4c4:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
     4c8:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
     4cc:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
     4d0:	5f6d7261 	svcpl	0x006d7261
     4d4:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
     4d8:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
     4dc:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
     4e0:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
     4e4:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
     4e8:	30312d69 	eorscc	r2, r1, r9, ror #26
     4ec:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
     4f0:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
     4f4:	615c3031 	cmpvs	ip, r1, lsr r0
     4f8:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
     4fc:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
     500:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     504:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
     508:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
     50c:	7379735c 	cmnvc	r9, #92, 6	; 0x70000001
     510:	2f2e2e00 	svccs	0x002e2e00
     514:	76697244 	strbtvc	r7, [r9], -r4, asr #4
     518:	2f737265 	svccs	0x00737265
     51c:	49534d43 	ldmdbmi	r3, {r0, r1, r6, r8, sl, fp, lr}^
     520:	2f355f53 	svccs	0x00355f53
     524:	49534d43 	ldmdbmi	r3, {r0, r1, r6, r8, sl, fp, lr}^
     528:	6f432f53 	svcvs	0x00432f53
     52c:	492f6572 	stmdbmi	pc!, {r1, r4, r5, r6, r8, sl, sp, lr}	; <UNPREDICTABLE>
     530:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
     534:	2e006564 	cfsh32cs	mvfx6, mvfx0, #52
     538:	72442f2e 	subvc	r2, r4, #46, 30	; 0xb8
     53c:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
     540:	4d432f73 	stclmi	15, cr2, [r3, #-460]	; 0xfffffe34
     544:	5f534953 	svcpl	0x00534953
     548:	65442f35 	strbvs	r2, [r4, #-3893]	; 0xfffff0cb
     54c:	65636976 	strbvs	r6, [r3, #-2422]!	; 0xfffff68a
     550:	4d52412f 	ldfmie	f4, [r2, #-188]	; 0xffffff44
     554:	4d52412f 	ldfmie	f4, [r2, #-188]	; 0xffffff44
     558:	33334d43 	teqcc	r3, #4288	; 0x10c0
     55c:	636e492f 	cmnvs	lr, #770048	; 0xbc000
     560:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
     564:	79730000 	ldmdbvc	r3!, {}^	; <UNPREDICTABLE>
     568:	6d657473 	cfstrdvs	mvd7, [r5, #-460]!	; 0xfffffe34
     56c:	4d52415f 	ldfmie	f4, [r2, #-380]	; 0xfffffe84
     570:	33334d43 	teqcc	r3, #4288	; 0x10c0
     574:	0100632e 	tsteq	r0, lr, lsr #6
     578:	645f0000 	ldrbvs	r0, [pc], #-0	; 580 <__STACKSEAL_SIZE+0x580>
     57c:	75616665 	strbvc	r6, [r1, #-1637]!	; 0xfffff99b
     580:	745f746c 	ldrbvc	r7, [pc], #-1132	; 588 <__STACKSEAL_SIZE+0x588>
     584:	73657079 	cmnvc	r5, #121	; 0x79
     588:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
     58c:	735f0000 	cmpvc	pc, #0
     590:	6e696474 	mcrvs	4, 3, r6, cr9, cr4, {3}
     594:	00682e74 	rsbeq	r2, r8, r4, ror lr
     598:	63000003 	movwvs	r0, #3
     59c:	5f65726f 	svcpl	0x0065726f
     5a0:	33336d63 	teqcc	r3, #6336	; 0x18c0
     5a4:	0400682e 	streq	r6, [r0], #-2094	; 0xfffff7d2
     5a8:	79730000 	ldmdbvc	r3!, {}^	; <UNPREDICTABLE>
     5ac:	6d657473 	cfstrdvs	mvd7, [r5, #-460]!	; 0xfffffe34
     5b0:	4d52415f 	ldfmie	f4, [r2, #-380]	; 0xfffffe84
     5b4:	33334d43 	teqcc	r3, #4288	; 0x10c0
     5b8:	0500682e 	streq	r6, [r0, #-2094]	; 0xfffff7d2
     5bc:	05000000 	streq	r0, [r0, #-0]
     5c0:	02050001 	andeq	r0, r5, #1
     5c4:	00000000 	andeq	r0, r0, r0
     5c8:	0100c403 	tsteq	r0, r3, lsl #8
     5cc:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
     5d0:	05010613 	streq	r0, [r1, #-1555]	; 0xfffff9ed
     5d4:	05023d01 	streq	r3, [r2, #-3329]	; 0xfffff2ff
     5d8:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
     5dc:	02050001 	andeq	r0, r5, #1
     5e0:	10000990 	mulne	r0, r0, r9
     5e4:	0100cc03 	tsteq	r0, r3, lsl #24
     5e8:	05150305 	ldreq	r0, [r5, #-773]	; 0xfffffcfb
     5ec:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
     5f0:	05400603 	strbeq	r0, [r0, #-1539]	; 0xfffff9fd
     5f4:	0501060e 	streq	r0, [r1, #-1550]	; 0xfffff9f2
     5f8:	0c030603 	stceq	6, cr0, [r3], {3}
     5fc:	06130566 	ldreq	r0, [r3], -r6, ror #10
     600:	3d010501 	cfstr32cc	mvfx0, [r1, #-4]
     604:	01000a02 	tsteq	r0, r2, lsl #20
     608:	00120d01 	andseq	r0, r2, r1, lsl #26
     60c:	a1000300 	mrsge	r0, LR_irq
     610:	02000001 	andeq	r0, r0, #1
     614:	0d0efb01 	vstreq	d15, [lr, #-4]
     618:	01010100 	mrseq	r0, (UNDEF: 17)
     61c:	00000001 	andeq	r0, r0, r1
     620:	01000001 	tsteq	r0, r1
     624:	432f2e2e 			; <UNDEFINED> instruction: 0x432f2e2e
     628:	2f65726f 	svccs	0x0065726f
     62c:	00637253 	rsbeq	r7, r3, r3, asr r2
     630:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
     634:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
     638:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
     63c:	705c6e6f 	subsvc	r6, ip, pc, ror #28
     640:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
     644:	615c6d61 	cmpvs	ip, r1, ror #26
     648:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
     64c:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
     650:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
     654:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
     658:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
     65c:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     660:	2e30312d 	rsfcssp	f3, f0, #5.0
     664:	30322d33 	eorscc	r2, r2, r3, lsr sp
     668:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
     66c:	72615c30 	rsbvc	r5, r1, #48, 24	; 0x3000
     670:	6f6e2d6d 	svcvs	0x006e2d6d
     674:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
     678:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
     67c:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
     680:	5c656475 	cfstrdpl	mvd6, [r5], #-468	; 0xfffffe2c
     684:	6863616d 	stmdavs	r3!, {r0, r2, r3, r5, r6, r8, sp, lr}^
     688:	00656e69 	rsbeq	r6, r5, r9, ror #28
     68c:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
     690:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
     694:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
     698:	705c6e6f 	subsvc	r6, ip, pc, ror #28
     69c:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
     6a0:	615c6d61 	cmpvs	ip, r1, ror #26
     6a4:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
     6a8:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
     6ac:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
     6b0:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
     6b4:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
     6b8:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     6bc:	2e30312d 	rsfcssp	f3, f0, #5.0
     6c0:	30322d33 	eorscc	r2, r2, r3, lsr sp
     6c4:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
     6c8:	72615c30 	rsbvc	r5, r1, #48, 24	; 0x3000
     6cc:	6f6e2d6d 	svcvs	0x006e2d6d
     6d0:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
     6d4:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
     6d8:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
     6dc:	5c656475 	cfstrdpl	mvd6, [r5], #-468	; 0xfffffe2c
     6e0:	00737973 	rsbseq	r7, r3, r3, ror r9
     6e4:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
     6e8:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
     6ec:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
     6f0:	705c6e6f 	subsvc	r6, ip, pc, ror #28
     6f4:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
     6f8:	615c6d61 	cmpvs	ip, r1, ror #26
     6fc:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
     700:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
     704:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
     708:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
     70c:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
     710:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     714:	2e30312d 	rsfcssp	f3, f0, #5.0
     718:	30322d33 	eorscc	r2, r2, r3, lsr sp
     71c:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
     720:	696c5c30 	stmdbvs	ip!, {r4, r5, sl, fp, ip, lr}^
     724:	63675c62 	cmnvs	r7, #25088	; 0x6200
     728:	72615c63 	rsbvc	r5, r1, #25344	; 0x6300
     72c:	6f6e2d6d 	svcvs	0x006e2d6d
     730:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
     734:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
     738:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
     73c:	695c312e 	ldmdbvs	ip, {r1, r2, r3, r5, r8, ip, sp}^
     740:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
     744:	2e006564 	cfsh32cs	mvfx6, mvfx0, #52
     748:	6f432f2e 	svcvs	0x00432f2e
     74c:	492f6572 	stmdbmi	pc!, {r1, r4, r5, r6, r8, sl, sp, lr}	; <UNPREDICTABLE>
     750:	0000636e 	andeq	r6, r0, lr, ror #6
     754:	6e697270 	mcrvs	2, 3, r7, cr9, cr0, {3}
     758:	632e6674 			; <UNDEFINED> instruction: 0x632e6674
     75c:	00000100 	andeq	r0, r0, r0, lsl #2
     760:	6665645f 			; <UNDEFINED> instruction: 0x6665645f
     764:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
     768:	7079745f 	rsbsvc	r7, r9, pc, asr r4
     76c:	682e7365 	stmdavs	lr!, {r0, r2, r5, r6, r8, r9, ip, sp, lr}
     770:	00000200 	andeq	r0, r0, r0, lsl #4
     774:	6474735f 	ldrbtvs	r7, [r4], #-863	; 0xfffffca1
     778:	2e746e69 	cdpcs	14, 7, cr6, cr4, cr9, {3}
     77c:	00030068 	andeq	r0, r3, r8, rrx
     780:	64747300 	ldrbtvs	r7, [r4], #-768	; 0xfffffd00
     784:	2e677261 	cdpcs	2, 6, cr7, cr7, cr1, {3}
     788:	00040068 	andeq	r0, r4, r8, rrx
     78c:	64747300 	ldrbtvs	r7, [r4], #-768	; 0xfffffd00
     790:	2e666564 	cdpcs	5, 6, cr6, cr6, cr4, {3}
     794:	00040068 	andeq	r0, r4, r8, rrx
     798:	75623c00 	strbvc	r3, [r2, #-3072]!	; 0xfffff400
     79c:	2d746c69 	ldclcs	12, cr6, [r4, #-420]!	; 0xfffffe5c
     7a0:	003e6e69 	eorseq	r6, lr, r9, ror #28
     7a4:	70000000 	andvc	r0, r0, r0
     7a8:	746e6972 	strbtvc	r6, [lr], #-2418	; 0xfffff68e
     7ac:	00682e66 	rsbeq	r2, r8, r6, ror #28
     7b0:	00000005 	andeq	r0, r0, r5
     7b4:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
     7b8:	00000002 	andeq	r0, r0, r2
     7bc:	01850300 	orreq	r0, r5, r0, lsl #6
     7c0:	13030501 	movwne	r0, #13569	; 0x3501
     7c4:	01060605 	tsteq	r6, r5, lsl #12
     7c8:	2f060505 	svccs	0x00060505
     7cc:	01061a05 	tsteq	r6, r5, lsl #20
     7d0:	02220105 	eoreq	r0, r2, #1073741825	; 0x40000001
     7d4:	01010001 	tsteq	r1, r1
     7d8:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
     7dc:	0009bc02 	andeq	fp, r9, r2, lsl #24
     7e0:	018e0310 	orreq	r0, lr, r0, lsl r3
     7e4:	13030501 	movwne	r0, #13569	; 0x3501
     7e8:	05011405 	streq	r1, [r1, #-1029]	; 0xfffffbfb
     7ec:	2d050122 	stfcss	f0, [r5, #-136]	; 0xffffff78
     7f0:	06010501 	streq	r0, [r1], -r1, lsl #10
     7f4:	00010213 	andeq	r0, r1, r3, lsl r2
     7f8:	01050101 	tsteq	r5, r1, lsl #2
     7fc:	00020500 	andeq	r0, r2, r0, lsl #10
     800:	03000000 	movweq	r0, #0
     804:	0501019f 	streq	r0, [r1, #-415]	; 0xfffffe61
     808:	0e051303 	cdpeq	3, 0, cr1, cr5, cr3, {0}
     80c:	13030501 	movwne	r0, #13569	; 0x3501
     810:	01060605 	tsteq	r6, r5, lsl #12
     814:	051e0105 	ldreq	r0, [lr, #-261]	; 0xfffffefb
     818:	05240605 	streq	r0, [r4, #-1541]!	; 0xfffff9fb
     81c:	05010621 	streq	r0, [r1, #-1569]	; 0xfffff9df
     820:	05202006 	streq	r2, [r0, #-6]!
     824:	02202201 	eoreq	r2, r0, #268435456	; 0x10000000
     828:	01010001 	tsteq	r1, r1
     82c:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
     830:	0009be02 	andeq	fp, r9, r2, lsl #28
     834:	01bc0310 			; <UNDEFINED> instruction: 0x01bc0310
     838:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
     83c:	13210603 			; <UNDEFINED> instruction: 0x13210603
     840:	11061005 	tstne	r6, r5
     844:	05210905 	streq	r0, [r1, #-2309]!	; 0xfffff6fb
     848:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
     84c:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
     850:	22052e2a 	andcs	r2, r5, #672	; 0x2a0
     854:	2011052e 	andscs	r0, r1, lr, lsr #10
     858:	052e0705 	streq	r0, [lr, #-1797]!	; 0xfffff8fb
     85c:	051f0609 	ldreq	r0, [pc, #-1545]	; 25b <__STACKSEAL_SIZE+0x25b>
     860:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
     864:	1405200a 	strne	r2, [r5], #-10
     868:	20760306 	rsbscs	r0, r6, r6, lsl #6
     86c:	05140305 	ldreq	r0, [r4, #-773]	; 0xfffffcfb
     870:	20010616 	andcs	r0, r1, r6, lsl r6
     874:	1a090520 	bne	241cfc <__RAM_SIZE+0x141cfc>
     878:	31060305 	tstcc	r6, r5, lsl #6
     87c:	13060105 	movwne	r0, #24837	; 0x6105
     880:	01000102 	tsteq	r0, r2, lsl #2
     884:	00010501 	andeq	r0, r1, r1, lsl #10
     888:	09e20205 	stmibeq	r2!, {r0, r2, r9}^
     88c:	c7031000 	strgt	r1, [r3, -r0]
     890:	01060101 	tsteq	r6, r1, lsl #2
     894:	bb060305 	bllt	1814b0 <__RAM_SIZE+0x814b0>
     898:	06060515 			; <UNDEFINED> instruction: 0x06060515
     89c:	11052001 	tstne	r5, r1
     8a0:	001a053d 	andseq	r0, sl, sp, lsr r5
     8a4:	06010402 	streq	r0, [r1], -r2, lsl #8
     8a8:	0005052e 	andeq	r0, r5, lr, lsr #10
     8ac:	06010402 	streq	r0, [r1], -r2, lsl #8
     8b0:	00070501 	andeq	r0, r7, r1, lsl #10
     8b4:	06030402 	streq	r0, [r3], -r2, lsl #8
     8b8:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
     8bc:	052e0603 	streq	r0, [lr, #-1539]!	; 0xfffff9fd
     8c0:	04020025 	streq	r0, [r2], #-37	; 0xffffffdb
     8c4:	05490603 	strbeq	r0, [r9, #-1539]	; 0xfffff9fd
     8c8:	04020026 	streq	r0, [r2], #-38	; 0xffffffda
     8cc:	05010603 	streq	r0, [r1, #-1539]	; 0xfffff9fd
     8d0:	04020007 	streq	r0, [r2], #-7
     8d4:	02002f03 	andeq	r2, r0, #3, 30
     8d8:	002e0304 	eoreq	r0, lr, r4, lsl #6
     8dc:	3c030402 	cfstrscc	mvf0, [r3], {2}
     8e0:	18060505 	stmdane	r6, {r0, r2, r8, sl}
     8e4:	052e2006 	streq	r2, [lr, #-6]!
     8e8:	05650609 	strbeq	r0, [r5, #-1545]!	; 0xfffff9f7
     8ec:	06053303 	streq	r3, [r5], -r3, lsl #6
     8f0:	01050106 	tsteq	r5, r6, lsl #2
     8f4:	060b0551 			; <UNDEFINED> instruction: 0x060b0551
     8f8:	054a7a03 	strbeq	r7, [sl, #-2563]	; 0xfffff5fd
     8fc:	05010610 	streq	r0, [r1, #-1552]	; 0xfffff9f0
     900:	07052e0b 	streq	r2, [r5, -fp, lsl #28]
     904:	20062f06 	andcs	r2, r6, r6, lsl #30
     908:	01000602 	tsteq	r0, r2, lsl #12
     90c:	00010501 	andeq	r0, r1, r1, lsl #10
     910:	0a600205 	beq	180112c <__RAM_SIZE+0x170112c>
     914:	e3031000 	movw	r1, #12288	; 0x3000
     918:	01060101 	tsteq	r6, r1, lsl #2
     91c:	ca060305 	bgt	181538 <__RAM_SIZE+0x81538>
     920:	01060605 	tsteq	r6, r5, lsl #12
     924:	3d060505 	cfstr32cc	mvfx0, [r6, #-20]	; 0xffffffec
     928:	01060805 	tsteq	r6, r5, lsl #16
     92c:	02000f05 	andeq	r0, r0, #5, 30
     930:	05200104 	streq	r0, [r0, #-260]!	; 0xfffffefc
     934:	0402002a 	streq	r0, [r2], #-42	; 0xffffffd6
     938:	37053c02 	strcc	r3, [r5, -r2, lsl #24]
     93c:	03040200 	movweq	r0, #16896	; 0x4200
     940:	0607053c 			; <UNDEFINED> instruction: 0x0607053c
     944:	060c053d 			; <UNDEFINED> instruction: 0x060c053d
     948:	07052001 	streq	r2, [r5, -r1]
     94c:	12052306 	andne	r2, r5, #402653184	; 0x18000000
     950:	0e050106 	adfeqs	f0, f5, f6
     954:	060b054a 	streq	r0, [fp], -sl, asr #10
     958:	0019051f 	andseq	r0, r9, pc, lsl r5
     95c:	06010402 	streq	r0, [r1], -r2, lsl #8
     960:	060b052e 	streq	r0, [fp], -lr, lsr #10
     964:	00240531 	eoreq	r0, r4, r1, lsr r5
     968:	06010402 	streq	r0, [r1], -r2, lsl #8
     96c:	0035053c 	eorseq	r0, r5, ip, lsr r5
     970:	2e020402 	cdpcs	4, 0, cr0, cr2, cr2, {0}
     974:	2f060705 	svccs	0x00060705
     978:	01061205 	tsteq	r6, r5, lsl #4
     97c:	204a0e05 	subcs	r0, sl, r5, lsl #28
     980:	25060305 	strcs	r0, [r6, #-773]	; 0xfffffcfb
     984:	01060605 	tsteq	r6, r5, lsl #12
     988:	3d060505 	cfstr32cc	mvfx0, [r6, #-20]	; 0xffffffec
     98c:	01060805 	tsteq	r6, r5, lsl #16
     990:	02002405 	andeq	r2, r0, #83886080	; 0x5000000
     994:	053c0104 	ldreq	r0, [ip, #-260]!	; 0xfffffefc
     998:	0402002b 	streq	r0, [r2], #-43	; 0xffffffd5
     99c:	3d052002 	stccc	0, cr2, [r5, #-8]
     9a0:	03040200 	movweq	r0, #16896	; 0x4200
     9a4:	0605052e 	streq	r0, [r5], -lr, lsr #10
     9a8:	06080534 			; <UNDEFINED> instruction: 0x06080534
     9ac:	060a0501 	streq	r0, [sl], -r1, lsl #10
     9b0:	060d053f 			; <UNDEFINED> instruction: 0x060d053f
     9b4:	060a0501 	streq	r0, [sl], -r1, lsl #10
     9b8:	060d053f 			; <UNDEFINED> instruction: 0x060d053f
     9bc:	06050501 	streq	r0, [r5], -r1, lsl #10
     9c0:	0608053f 			; <UNDEFINED> instruction: 0x0608053f
     9c4:	06070501 	streq	r0, [r7], -r1, lsl #10
     9c8:	0612052f 	ldreq	r0, [r2], -pc, lsr #10
     9cc:	4a0e0501 	bmi	381dd8 <__RAM_SIZE+0x281dd8>
     9d0:	24060305 	strcs	r0, [r6], #-773	; 0xfffffcfb
     9d4:	01060605 	tsteq	r6, r5, lsl #12
     9d8:	2f060505 	svccs	0x00060505
     9dc:	01060805 	tsteq	r6, r5, lsl #16
     9e0:	3d060705 	stccc	7, cr0, [r6, #-20]	; 0xffffffec
     9e4:	01061205 	tsteq	r6, r5, lsl #4
     9e8:	054a0e05 	strbeq	r0, [sl, #-3589]	; 0xfffff1fb
     9ec:	0a030603 	beq	c2200 <__HEAP_SIZE+0xc1200>
     9f0:	060a0520 	streq	r0, [sl], -r0, lsr #10
     9f4:	67010501 	strvs	r0, [r1, -r1, lsl #10]
     9f8:	03060705 	movweq	r0, #26373	; 0x6705
     9fc:	05133c60 	ldreq	r3, [r3, #-3168]	; 0xfffff3a0
     a00:	2e01060a 	cfmadd32cs	mvax0, mvfx0, mvfx1, mvfx10
     a04:	02000f05 	andeq	r0, r0, #5, 30
     a08:	05200104 	streq	r0, [r0, #-260]!	; 0xfffffefc
     a0c:	09053b0a 	stmdbeq	r5, {r1, r3, r8, r9, fp, ip, sp}
     a10:	0c053006 	stceq	0, cr3, [r5], {6}
     a14:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
     a18:	17051e0a 	strne	r1, [r5, -sl, lsl #28]
     a1c:	01040200 	mrseq	r0, R12_usr
     a20:	00350533 	eorseq	r0, r5, r3, lsr r5
     a24:	3c020402 	cfstrscc	mvf0, [r2], {2}
     a28:	2f060705 	svccs	0x00060705
     a2c:	01061205 	tsteq	r6, r5, lsl #4
     a30:	054a0e05 	strbeq	r0, [sl, #-3589]	; 0xfffff1fb
     a34:	1c052012 	stcne	0, cr2, [r5], {18}
     a38:	01040200 	mrseq	r0, R12_usr
     a3c:	00390522 	eorseq	r0, r9, r2, lsr #10
     a40:	3c020402 	cfstrscc	mvf0, [r2], {2}
     a44:	2f060705 	svccs	0x00060705
     a48:	01061205 	tsteq	r6, r5, lsl #4
     a4c:	054a0e05 	strbeq	r0, [sl, #-3589]	; 0xfffff1fb
     a50:	1b052012 	blne	148aa0 <__RAM_SIZE+0x48aa0>
     a54:	01040200 	mrseq	r0, R12_usr
     a58:	06070522 	streq	r0, [r7], -r2, lsr #10
     a5c:	0612052f 	ldreq	r0, [r2], -pc, lsr #10
     a60:	4a0e0501 	bmi	381e6c <__RAM_SIZE+0x281e6c>
     a64:	060a0520 	streq	r0, [sl], -r0, lsr #10
     a68:	05200b03 	streq	r0, [r0, #-2819]!	; 0xfffff4fd
     a6c:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
     a70:	053d0607 	ldreq	r0, [sp, #-1543]!	; 0xfffff9f9
     a74:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
     a78:	05204a0e 	streq	r4, [r0, #-2574]!	; 0xfffff5f2
     a7c:	0522060a 	streq	r0, [r2, #-1546]!	; 0xfffff9f6
     a80:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
     a84:	053d0607 	ldreq	r0, [sp, #-1543]!	; 0xfffff9f9
     a88:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
     a8c:	02204a0e 	eoreq	r4, r0, #57344	; 0xe000
     a90:	01010001 	tsteq	r1, r1
     a94:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
     a98:	000b9802 	andeq	r9, fp, r2, lsl #16
     a9c:	02990310 	addseq	r0, r9, #16, 6	; 0x40000000
     aa0:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
     aa4:	13590603 	cmpne	r9, #3145728	; 0x300000
     aa8:	06060515 			; <UNDEFINED> instruction: 0x06060515
     aac:	06050501 	streq	r0, [r5], -r1, lsl #10
     ab0:	060b0521 	streq	r0, [fp], -r1, lsr #10
     ab4:	06030501 	streq	r0, [r3], -r1, lsl #10
     ab8:	06060532 			; <UNDEFINED> instruction: 0x06060532
     abc:	00220501 	eoreq	r0, r2, r1, lsl #10
     ac0:	3c010402 	cfstrscc	mvf0, [r1], {2}
     ac4:	02001205 	andeq	r1, r0, #1342177280	; 0x50000000
     ac8:	004d0104 	subeq	r0, sp, r4, lsl #2
     acc:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
     ad0:	02000e05 	andeq	r0, r0, #5, 28	; 0x50
     ad4:	052e0804 	streq	r0, [lr, #-2052]!	; 0xfffff7fc
     ad8:	04020012 	streq	r0, [r2], #-18	; 0xffffffee
     adc:	07052e08 	streq	r2, [r5, -r8, lsl #28]
     ae0:	08040200 	stmdaeq	r4, {r9}
     ae4:	0d055906 	vstreq.16	s10, [r5, #-12]	; <UNPREDICTABLE>
     ae8:	08040200 	stmdaeq	r4, {r9}
     aec:	02000106 	andeq	r0, r0, #-2147483647	; 0x80000001
     af0:	002e0804 	eoreq	r0, lr, r4, lsl #16
     af4:	06080402 	streq	r0, [r8], -r2, lsl #8
     af8:	00050513 	andeq	r0, r5, r3, lsl r5
     afc:	06080402 	streq	r0, [r8], -r2, lsl #8
     b00:	00140501 	andseq	r0, r4, r1, lsl #10
     b04:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
     b08:	052c0e05 	streq	r0, [ip, #-3589]!	; 0xfffff1fb
     b0c:	0520210d 	streq	r2, [r0, #-269]!	; 0xfffffef3
     b10:	050f0605 	streq	r0, [pc, #-1541]	; 513 <__STACKSEAL_SIZE+0x513>
     b14:	27051307 	strcs	r1, [r5, -r7, lsl #6]
     b18:	12050106 	andne	r0, r5, #-2147483647	; 0x80000001
     b1c:	0607054a 	streq	r0, [r7], -sl, asr #10
     b20:	0612052f 	ldreq	r0, [r2], -pc, lsr #10
     b24:	00550501 	subseq	r0, r5, r1, lsl #10
     b28:	3c020402 	cfstrscc	mvf0, [r2], {2}
     b2c:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
     b30:	02002007 	andeq	r2, r0, #7
     b34:	05200704 	streq	r0, [r0, #-1796]!	; 0xfffff8fc
     b38:	04020012 	streq	r0, [r2], #-18	; 0xffffffee
     b3c:	55052e07 	strpl	r2, [r5, #-3591]	; 0xfffff1f9
     b40:	0a052e58 	beq	14c4a8 <__RAM_SIZE+0x4c4a8>
     b44:	05017503 	streq	r7, [r1, #-1283]	; 0xfffffafd
     b48:	10030603 	andne	r0, r3, r3, lsl #12
     b4c:	060a0520 	streq	r0, [sl], -r0, lsr #10
     b50:	d7010501 	strle	r0, [r1, -r1, lsl #10]
     b54:	0101002e 	tsteq	r1, lr, lsr #32
     b58:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
     b5c:	000c2c02 	andeq	r2, ip, r2, lsl #24
     b60:	02b20310 	adcseq	r0, r2, #16, 6	; 0x40000000
     b64:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
     b68:	13d70603 	bicsne	r0, r7, #3145728	; 0x300000
     b6c:	06060515 			; <UNDEFINED> instruction: 0x06060515
     b70:	05052e01 	streq	r2, [r5, #-3585]	; 0xfffff1ff
     b74:	0b052106 	bleq	148f94 <__RAM_SIZE+0x48f94>
     b78:	03050106 	movweq	r0, #20742	; 0x5106
     b7c:	06053206 	streq	r3, [r5], -r6, lsl #4
     b80:	22050106 	andcs	r0, r5, #-2147483647	; 0x80000001
     b84:	01040200 	mrseq	r0, R12_usr
     b88:	0012053c 	andseq	r0, r2, ip, lsr r5
     b8c:	5b010402 	blpl	41b9c <__HEAP_SIZE+0x40b9c>
     b90:	02000e05 	andeq	r0, r0, #5, 28	; 0x50
     b94:	053c0804 	ldreq	r0, [ip, #-2052]!	; 0xfffff7fc
     b98:	04020012 	streq	r0, [r2], #-18	; 0xffffffee
     b9c:	02002e08 	andeq	r2, r0, #8, 28	; 0x80
     ba0:	052e0804 	streq	r0, [lr, #-2052]!	; 0xfffff7fc
     ba4:	04020007 	streq	r0, [r2], #-7
     ba8:	054b0608 	strbeq	r0, [fp, #-1544]	; 0xfffff9f8
     bac:	0402000d 	streq	r0, [r2], #-13
     bb0:	00010608 	andeq	r0, r1, r8, lsl #12
     bb4:	66080402 	strvs	r0, [r8], -r2, lsl #8
     bb8:	08040200 	stmdaeq	r4, {r9}
     bbc:	05051306 	streq	r1, [r5, #-774]	; 0xfffffcfa
     bc0:	08040200 	stmdaeq	r4, {r9}
     bc4:	14050106 	strne	r0, [r5], #-262	; 0xfffffefa
     bc8:	01040200 	mrseq	r0, R12_usr
     bcc:	3a0e054a 	bcc	3820fc <__RAM_SIZE+0x2820fc>
     bd0:	2e210d05 	cdpcs	13, 2, cr0, cr1, cr5, {0}
     bd4:	0f060505 	svceq	0x00060505
     bd8:	05130705 	ldreq	r0, [r3, #-1797]	; 0xfffff8fb
     bdc:	05010627 	streq	r0, [r1, #-1575]	; 0xfffff9d9
     be0:	07056612 	smladeq	r5, r2, r6, r6
     be4:	12052106 	andne	r2, r5, #-2147483647	; 0x80000001
     be8:	55050106 	strpl	r0, [r5, #-262]	; 0xfffffefa
     bec:	02040200 	andeq	r0, r4, #0, 4
     bf0:	02003c2e 	andeq	r3, r0, #11776	; 0x2e00
     bf4:	05200704 	streq	r0, [r0, #-1796]!	; 0xfffff8fc
     bf8:	04020012 	streq	r0, [r2], #-18	; 0xffffffee
     bfc:	55052e07 	strpl	r2, [r5, #-3591]	; 0xfffff1f9
     c00:	0a052e3c 	beq	14c4f8 <__RAM_SIZE+0x4c4f8>
     c04:	05017503 	streq	r7, [r1, #-1283]	; 0xfffffafd
     c08:	10030603 	andne	r0, r3, r3, lsl #12
     c0c:	060a052e 	streq	r0, [sl], -lr, lsr #10
     c10:	08010501 	stmdaeq	r1, {r0, r8, sl}
     c14:	01003c3d 	tsteq	r0, sp, lsr ip
     c18:	00010501 	andeq	r0, r1, r1, lsl #10
     c1c:	0cf80205 	lfmeq	f0, 2, [r8], #20
     c20:	d3031000 	movwle	r1, #12288	; 0x3000
     c24:	01060103 	tsteq	r6, r3, lsl #2
     c28:	92060305 	andls	r0, r6, #335544320	; 0x14000000
     c2c:	01060605 	tsteq	r6, r5, lsl #12
     c30:	2e20202e 	cdpcs	0, 2, cr2, cr0, cr14, {1}
     c34:	02001805 	andeq	r1, r0, #327680	; 0x50000
     c38:	053c0104 	ldreq	r0, [ip, #-260]!	; 0xfffffefc
     c3c:	0402002d 	streq	r0, [r2], #-45	; 0xffffffd3
     c40:	03059e02 	movweq	r9, #24066	; 0x5e02
     c44:	0513b106 	ldreq	fp, [r3, #-262]	; 0xfffffefa
     c48:	05010606 	streq	r0, [r1, #-1542]	; 0xfffff9fa
     c4c:	05cd0603 	strbeq	r0, [sp, #1539]	; 0x603
     c50:	05010606 	streq	r0, [r1, #-1542]	; 0xfffff9fa
     c54:	0305590a 	movweq	r5, #22794	; 0x590a
     c58:	13173306 	tstne	r7, #402653184	; 0x18000000
     c5c:	3c060e05 	stccc	14, cr0, [r6], {5}
     c60:	2f060305 	svccs	0x00060305
     c64:	01061405 	tsteq	r6, r5, lsl #8
     c68:	052e2c05 	streq	r2, [lr, #-3077]!	; 0xfffff3fb
     c6c:	055a0603 	ldrbeq	r0, [sl, #-1539]	; 0xfffff9fd
     c70:	2e01062d 	cfmadd32cs	mvax1, mvfx0, mvfx1, mvfx13
     c74:	5826052e 	stmdapl	r6!, {r1, r2, r3, r5, r8, sl}
     c78:	05744b05 	ldrbeq	r4, [r4, #-2821]!	; 0xfffff4fb
     c7c:	41056652 	tstmi	r5, r2, asr r6
     c80:	4a070574 	bmi	1c2258 <__RAM_SIZE+0xc2258>
     c84:	3e060305 	cdpcc	3, 0, cr0, cr6, cr5, {0}
     c88:	01061705 	tsteq	r6, r5, lsl #14
     c8c:	742b052e 	strtvc	r0, [fp], #-1326	; 0xfffffad2
     c90:	054a0805 	strbeq	r0, [sl, #-2053]	; 0xfffff7fb
     c94:	053d0603 	ldreq	r0, [sp, #-1539]!	; 0xfffff9fd
     c98:	4a01061c 	bmi	42510 <__HEAP_SIZE+0x41510>
     c9c:	05583705 	ldrbeq	r3, [r8, #-1797]	; 0xfffff8fb
     ca0:	03059e10 	movweq	r9, #24080	; 0x5e10
     ca4:	10056706 	andne	r6, r5, r6, lsl #14
     ca8:	03050106 	movweq	r0, #20742	; 0x5106
     cac:	1c056706 	stcne	7, cr6, [r5], {6}
     cb0:	24050106 	strcs	r0, [r5], #-262	; 0xfffffefa
     cb4:	0603052e 	streq	r0, [r3], -lr, lsr #10
     cb8:	06130584 	ldreq	r0, [r3], -r4, lsl #11
     cbc:	1c053c01 	stcne	12, cr3, [r5], {1}
     cc0:	3c058258 	sfmcc	f0, 1, [r5], {88}	; 0x58
     cc4:	66370520 	ldrtvs	r0, [r7], -r0, lsr #10
     cc8:	05663105 	strbeq	r3, [r6, #-261]!	; 0xfffffefb
     ccc:	26054a2b 	strcs	r4, [r5], -fp, lsr #20
     cd0:	66200566 	strtvs	r0, [r0], -r6, ror #10
     cd4:	05661705 	strbeq	r1, [r6, #-1797]!	; 0xfffff8fb
     cd8:	0a054a0f 	beq	15351c <__RAM_SIZE+0x5351c>
     cdc:	0603054a 	streq	r0, [r3], -sl, asr #10
     ce0:	06060584 	streq	r0, [r6], -r4, lsl #11
     ce4:	06050501 	streq	r0, [r5], -r1, lsl #10
     ce8:	060b0559 			; <UNDEFINED> instruction: 0x060b0559
     cec:	06050501 	streq	r0, [r5], -r1, lsl #10
     cf0:	060c0521 	streq	r0, [ip], -r1, lsr #10
     cf4:	06030501 	streq	r0, [r3], -r1, lsl #10
     cf8:	062b0586 	strteq	r0, [fp], -r6, lsl #11
     cfc:	2e440501 	cdpcs	5, 4, cr0, cr4, cr1, {0}
     d00:	0003052e 	andeq	r0, r3, lr, lsr #10
     d04:	06040402 	streq	r0, [r4], -r2, lsl #8
     d08:	00060523 	andeq	r0, r6, r3, lsr #10
     d0c:	06040402 	streq	r0, [r4], -r2, lsl #8
     d10:	06050501 	streq	r0, [r5], -r1, lsl #10
     d14:	0608054c 	streq	r0, [r8], -ip, asr #10
     d18:	00190501 	andseq	r0, r9, r1, lsl #10
     d1c:	ac010402 	cfstrsge	mvf0, [r1], {2}
     d20:	91060705 	tstls	r6, r5, lsl #14
     d24:	01060a05 	tsteq	r6, r5, lsl #20
     d28:	3d060905 	vstrcc.16	s0, [r6, #-10]	; <UNPREDICTABLE>
     d2c:	01062505 	tsteq	r6, r5, lsl #10
     d30:	2e202e05 	cdpcs	14, 2, cr2, cr0, cr5, {0}
     d34:	03060505 	movweq	r0, #25861	; 0x6505
     d38:	0c052051 	stceq	0, cr2, [r5], {81}	; 0x51
     d3c:	01050106 	tsteq	r5, r6, lsl #2
     d40:	f200e403 	vshl.s8	d14, d3, d0
     d44:	0605053c 			; <UNDEFINED> instruction: 0x0605053c
     d48:	2e7fa203 	cdpcs	2, 7, cr10, cr15, cr3, {0}
     d4c:	01060b05 	tsteq	r6, r5, lsl #22
     d50:	0344059e 	movteq	r0, #17822	; 0x459e
     d54:	05202022 	streq	r2, [r0, #-34]!	; 0xffffffde
     d58:	200a030e 	andcs	r0, sl, lr, lsl #6
     d5c:	30060705 	andcc	r0, r6, r5, lsl #14
     d60:	01060d05 	tsteq	r6, r5, lsl #26
     d64:	4c060705 	stcmi	7, cr0, [r6], {5}
     d68:	06100513 			; <UNDEFINED> instruction: 0x06100513
     d6c:	03052111 	movweq	r2, #20753	; 0x5111
     d70:	200b0306 	andcs	r0, fp, r6, lsl #6
     d74:	06060513 			; <UNDEFINED> instruction: 0x06060513
     d78:	06050501 	streq	r0, [r5], -r1, lsl #10
     d7c:	060c053e 			; <UNDEFINED> instruction: 0x060c053e
     d80:	07052e01 	streq	r2, [r5, -r1, lsl #28]
     d84:	20760306 	rsbscs	r0, r6, r6, lsl #6
     d88:	01060a05 	tsteq	r6, r5, lsl #20
     d8c:	02001605 	andeq	r1, r0, #5242880	; 0x500000
     d90:	053c0104 	ldreq	r0, [ip, #-260]!	; 0xfffffefc
     d94:	063d0609 	ldrteq	r0, [sp], -r9, lsl #12
     d98:	030c053c 	movweq	r0, #50492	; 0xc53c
     d9c:	0134020c 	teqeq	r4, ip, lsl #4
     da0:	30060305 	andcc	r0, r6, r5, lsl #6
     da4:	01060605 	tsteq	r6, r5, lsl #12
     da8:	02001c05 	andeq	r1, r0, #1280	; 0x500
     dac:	054a0104 	strbeq	r0, [sl, #-260]	; 0xfffffefc
     db0:	0305220c 	movweq	r2, #21004	; 0x520c
     db4:	06053206 	streq	r3, [r5], -r6, lsl #4
     db8:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     dbc:	12052106 	andne	r2, r5, #-2147483647	; 0x80000001
     dc0:	0b050106 	bleq	1411e0 <__RAM_SIZE+0x411e0>
     dc4:	0603052e 	streq	r0, [r3], -lr, lsr #10
     dc8:	0905136a 	stmdbeq	r5, {r1, r3, r5, r6, r8, r9, ip}
     dcc:	02000106 	andeq	r0, r0, #-2147483647	; 0x80000001
     dd0:	05820404 	streq	r0, [r2, #1028]	; 0x404
     dd4:	04020003 	streq	r0, [r2], #-3
     dd8:	23080604 	movwcs	r0, #34308	; 0x8604
     ddc:	02000605 	andeq	r0, r0, #5242880	; 0x500000
     de0:	01060404 	tsteq	r6, r4, lsl #8
     de4:	3e060505 	cfsh32cc	mvfx0, mvfx6, #5
     de8:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
     dec:	02006606 	andeq	r6, r0, #6291456	; 0x600000
     df0:	002e0404 	eoreq	r0, lr, r4, lsl #8
     df4:	06040402 	streq	r0, [r4], -r2, lsl #8
     df8:	0047055a 	subeq	r0, r7, sl, asr r5
     dfc:	06040402 	streq	r0, [r4], -r2, lsl #8
     e00:	000b0501 	andeq	r0, fp, r1, lsl #10
     e04:	4a040402 	bmi	101e14 <__RAM_SIZE+0x1e14>
     e08:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
     e0c:	0005053c 	andeq	r0, r5, ip, lsr r5
     e10:	06040402 	streq	r0, [r4], -r2, lsl #8
     e14:	000805d8 	ldrdeq	r0, [r8], -r8
     e18:	06040402 	streq	r0, [r4], -r2, lsl #8
     e1c:	04020001 	streq	r0, [r2], #-1
     e20:	09056604 	stmdbeq	r5, {r2, r9, sl, sp, lr}
     e24:	01040200 	mrseq	r0, R12_usr
     e28:	00207703 	eoreq	r7, r0, r3, lsl #14
     e2c:	74010402 	strvc	r0, [r1], #-1026	; 0xfffffbfe
     e30:	05250505 	streq	r0, [r5, #-1285]!	; 0xfffffafb
     e34:	04020027 	streq	r0, [r2], #-39	; 0xffffffd9
     e38:	00410602 	subeq	r0, r1, r2, lsl #12
     e3c:	06020402 	streq	r0, [r2], -r2, lsl #8
     e40:	000d0520 	andeq	r0, sp, r0, lsr #10
     e44:	06010402 	streq	r0, [r1], -r2, lsl #8
     e48:	00120558 	andseq	r0, r2, r8, asr r5
     e4c:	06010402 	streq	r0, [r1], -r2, lsl #8
     e50:	000d0501 	andeq	r0, sp, r1, lsl #10
     e54:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
     e58:	01040200 	mrseq	r0, R12_usr
     e5c:	0002022e 	andeq	r0, r2, lr, lsr #4
     e60:	01050101 	tsteq	r5, r1, lsl #2
     e64:	e8020500 	stmda	r2, {r8, sl}
     e68:	03100010 	tsteq	r0, #16
     e6c:	060102d3 			; <UNDEFINED> instruction: 0x060102d3
     e70:	06030501 	streq	r0, [r3], -r1, lsl #10
     e74:	151313bb 	ldrne	r1, [r3, #-955]	; 0xfffffc45
     e78:	06060515 			; <UNDEFINED> instruction: 0x06060515
     e7c:	20202001 	eorcs	r2, r0, r1
     e80:	06030520 	streq	r0, [r3], -r0, lsr #10
     e84:	0606054c 	streq	r0, [r6], -ip, asr #10
     e88:	06030501 	streq	r0, [r3], -r1, lsl #10
     e8c:	060605a0 	streq	r0, [r6], -r0, lsr #11
     e90:	06030501 	streq	r0, [r3], -r1, lsl #10
     e94:	06060595 			; <UNDEFINED> instruction: 0x06060595
     e98:	00220501 	eoreq	r0, r2, r1, lsl #10
     e9c:	90010402 	andls	r0, r1, r2, lsl #8
     ea0:	03060305 	movweq	r0, #25349	; 0x6305
     ea4:	05139009 	ldreq	r9, [r3, #-9]
     ea8:	05010606 	streq	r0, [r1, #-1542]	; 0xfffff9fa
     eac:	03058108 	movweq	r8, #20744	; 0x5108
     eb0:	06053506 	streq	r3, [r5], -r6, lsl #10
     eb4:	0a050106 	beq	1412d4 <__RAM_SIZE+0x412d4>
     eb8:	0609054b 	streq	r0, [r9], -fp, asr #10
     ebc:	002a0523 	eoreq	r0, sl, r3, lsr #10
     ec0:	06010402 	streq	r0, [r1], -r2, lsl #8
     ec4:	0605052e 	streq	r0, [r5], -lr, lsr #10
     ec8:	0610052f 	ldreq	r0, [r0], -pc, lsr #10
     ecc:	06050501 	streq	r0, [r5], -r1, lsl #10
     ed0:	06090567 	streq	r0, [r9], -r7, ror #10
     ed4:	1f0c0501 	svcne	0x000c0501
     ed8:	06050520 	streq	r0, [r5], -r0, lsr #10
     edc:	05206303 	streq	r6, [r0, #-771]!	; 0xfffffcfd
     ee0:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
     ee4:	05e60605 	strbeq	r0, [r6, #1541]!	; 0x605
     ee8:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
     eec:	05e60605 	strbeq	r0, [r6, #1541]!	; 0x605
     ef0:	0001060c 	andeq	r0, r1, ip, lsl #12
     ef4:	58040402 	stmdapl	r4, {r1, sl}
     ef8:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
     efc:	05c82008 	strbeq	r2, [r8, #8]
     f00:	05500605 	ldrbeq	r0, [r0, #-1541]	; 0xfffff9fb
     f04:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
     f08:	09030605 	stmdbeq	r3, {r0, r2, r9, sl}
     f0c:	0b0513d6 	bleq	145e6c <__RAM_SIZE+0x45e6c>
     f10:	0e050106 	adfeqs	f0, f5, f6
     f14:	420a0581 	andmi	r0, sl, #541065216	; 0x20400000
     f18:	36060305 	strcc	r0, [r6], -r5, lsl #6
     f1c:	01060705 	tsteq	r6, r5, lsl #14
     f20:	59060305 	stmdbpl	r6, {r0, r2, r8, r9}
     f24:	01061705 	tsteq	r6, r5, lsl #14
     f28:	6627052e 	strtvs	r0, [r7], -lr, lsr #10
     f2c:	05580a05 	ldrbeq	r0, [r8, #-2565]	; 0xfffff5fb
     f30:	05830603 	streq	r0, [r3, #1539]	; 0x603
     f34:	2e010611 	mcrcs	6, 0, r0, cr1, cr1, {0}
     f38:	21060305 	tstcs	r6, r5, lsl #6
     f3c:	01060e05 	tsteq	r6, r5, lsl #28
     f40:	2e08052e 	cfsh32cs	mvfx0, mvfx8, #30
     f44:	84060305 	strhi	r0, [r6], #-773	; 0xfffffcfb
     f48:	01060605 	tsteq	r6, r5, lsl #12
     f4c:	06050520 	streq	r0, [r5], -r0, lsr #10
     f50:	0e05224b 	cdpeq	2, 0, cr2, cr5, cr11, {2}
     f54:	08050106 	stmdaeq	r5, {r1, r2, r8}
     f58:	06070558 			; <UNDEFINED> instruction: 0x06070558
     f5c:	0c051359 	stceq	3, cr1, [r5], {89}	; 0x59
     f60:	03051f06 	movweq	r1, #24326	; 0x5f06
     f64:	200b0306 	andcs	r0, fp, r6, lsl #6
     f68:	01060605 	tsteq	r6, r5, lsl #12
     f6c:	21060505 	tstcs	r6, r5, lsl #10
     f70:	01061405 	tsteq	r6, r5, lsl #8
     f74:	58580a05 	ldmdapl	r8, {r0, r2, r9, fp}^
     f78:	21060505 	tstcs	r6, r5, lsl #10
     f7c:	01060805 	tsteq	r6, r5, lsl #16
     f80:	02001805 	andeq	r1, r0, #327680	; 0x50000
     f84:	05580204 	ldrbeq	r0, [r8, #-516]	; 0xfffffdfc
     f88:	04020029 	streq	r0, [r2], #-41	; 0xffffffd7
     f8c:	07058203 	streq	r8, [r5, -r3, lsl #4]
     f90:	20063f06 	andcs	r3, r6, r6, lsl #30
     f94:	03060805 	movweq	r0, #26629	; 0x6805
     f98:	0b052074 	bleq	149170 <__RAM_SIZE+0x49170>
     f9c:	08050106 	stmdaeq	r5, {r1, r2, r8}
     fa0:	0b058406 	bleq	161fc0 <__RAM_SIZE+0x61fc0>
     fa4:	19050106 	stmdbne	r5, {r1, r2, r8}
     fa8:	01040200 	mrseq	r0, R12_usr
     fac:	06050520 	streq	r0, [r5], -r0, lsr #10
     fb0:	0520063e 	streq	r0, [r0, #-1598]!	; 0xfffff9c2
     fb4:	0e03060b 	cfmadd32eq	mvax0, mvfx0, mvfx3, mvfx11
     fb8:	2f070520 	svccs	0x00070520
     fbc:	06270521 	strteq	r0, [r7], -r1, lsr #10
     fc0:	900e0501 	andls	r0, lr, r1, lsl #10
     fc4:	05201405 	streq	r1, [r0, #-1029]!	; 0xfffffbfb
     fc8:	07052012 	smladeq	r5, r2, r0, r2
     fcc:	0a056706 	beq	15abec <__RAM_SIZE+0x5abec>
     fd0:	12050106 	andne	r0, r5, #-2147483647	; 0x80000001
     fd4:	1f0e052e 	svcne	0x000e052e
     fd8:	060b052e 	streq	r0, [fp], -lr, lsr #10
     fdc:	00350526 	eorseq	r0, r5, r6, lsr #10
     fe0:	06010402 	streq	r0, [r1], -r2, lsl #8
     fe4:	002c052e 	eoreq	r0, ip, lr, lsr #10
     fe8:	20010402 	andcs	r0, r1, r2, lsl #8
     fec:	21060705 	tstcs	r6, r5, lsl #14
     ff0:	01061205 	tsteq	r6, r5, lsl #4
     ff4:	05653505 	strbeq	r3, [r5, #-1285]!	; 0xfffffafb
     ff8:	0520210e 	streq	r2, [r0, #-270]!	; 0xfffffef2
     ffc:	05220605 	streq	r0, [r2, #-1541]!	; 0xfffff9fb
    1000:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
    1004:	05300607 	ldreq	r0, [r0, #-1543]!	; 0xfffff9f9
    1008:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
    100c:	0520660e 	streq	r6, [r0, #-1550]!	; 0xfffff9f2
    1010:	05170609 	ldreq	r0, [r7, #-1545]	; 0xfffff9f7
    1014:	25052f05 	strcs	r2, [r5, #-3845]	; 0xfffff0fb
    1018:	0c050106 	stfeqs	f0, [r5], {6}
    101c:	201205ac 	andscs	r0, r2, ip, lsr #11
    1020:	05201005 	streq	r1, [r0, #-5]!
    1024:	05670605 	strbeq	r0, [r7, #-1541]!	; 0xfffff9fb
    1028:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    102c:	0c052008 	stceq	0, cr2, [r5], {8}
    1030:	05c8081f 	strbeq	r0, [r8, #2079]	; 0x81f
    1034:	05270603 	streq	r0, [r7, #-1539]!	; 0xfffff9fd
    1038:	0501061d 	streq	r0, [r1, #-1565]	; 0xfffff9e3
    103c:	03053c06 	movweq	r3, #23558	; 0x5c06
    1040:	2e090306 	cdpcs	3, 0, cr0, cr9, cr6, {0}
    1044:	01060605 	tsteq	r6, r5, lsl #12
    1048:	2f060505 	svccs	0x00060505
    104c:	01060805 	tsteq	r6, r5, lsl #16
    1050:	3d060705 	stccc	7, cr0, [r6, #-20]	; 0xffffffec
    1054:	01061205 	tsteq	r6, r5, lsl #4
    1058:	05660e05 	strbeq	r0, [r6, #-3589]!	; 0xfffff1fb
    105c:	0a030603 	beq	c2870 <__HEAP_SIZE+0xc1870>
    1060:	060a0520 	streq	r0, [sl], -r0, lsr #10
    1064:	c9010501 	stmdbgt	r1, {r0, r8, sl}
    1068:	03060505 	movweq	r0, #25861	; 0x6505
    106c:	0805586b 	stmdaeq	r5, {r0, r1, r3, r5, r6, fp, ip, lr}
    1070:	0f050106 	svceq	0x00050106
    1074:	01040200 	mrseq	r0, R12_usr
    1078:	001c052e 	andseq	r0, ip, lr, lsr #10
    107c:	2e020402 	cdpcs	4, 0, cr0, cr2, cr2, {0}
    1080:	4b060705 	blmi	182c9c <__RAM_SIZE+0x82c9c>
    1084:	01060c05 	tsteq	r6, r5, lsl #24
    1088:	0607053c 			; <UNDEFINED> instruction: 0x0607053c
    108c:	06120531 			; <UNDEFINED> instruction: 0x06120531
    1090:	660e0501 	strvs	r0, [lr], -r1, lsl #10
    1094:	1f060b05 	svcne	0x00060b05
    1098:	02001a05 	andeq	r1, r0, #20480	; 0x5000
    109c:	2e060104 	adfcss	f0, f6, f4
    10a0:	01040200 	mrseq	r0, R12_usr
    10a4:	060a053c 			; <UNDEFINED> instruction: 0x060a053c
    10a8:	054a0903 	strbeq	r0, [sl, #-2307]	; 0xfffff6fd
    10ac:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
    10b0:	054b0607 	strbeq	r0, [fp, #-1543]	; 0xfffff9f9
    10b4:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
    10b8:	0520660e 	streq	r6, [r0, #-1550]!	; 0xfffff9f2
    10bc:	0522060a 	streq	r0, [r2, #-1546]!	; 0xfffff9f6
    10c0:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
    10c4:	054b0607 	strbeq	r0, [fp, #-1543]	; 0xfffff9f9
    10c8:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
    10cc:	0220660e 	eoreq	r6, r0, #14680064	; 0xe00000
    10d0:	01010001 	tsteq	r1, r1
    10d4:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    10d8:	00148002 	andseq	r8, r4, r2
    10dc:	04c10310 	strbeq	r0, [r1], #784	; 0x310
    10e0:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    10e4:	13670603 	cmnne	r7, #3145728	; 0x300000
    10e8:	06060514 			; <UNDEFINED> instruction: 0x06060514
    10ec:	03090501 	movweq	r0, #38145	; 0x9501
    10f0:	204a01d3 	ldrdcs	r0, [sl], #-19	; 0xffffffed
    10f4:	7eb20306 	cdpvc	3, 11, cr0, cr2, cr6, {0}
    10f8:	060a0501 	streq	r0, [sl], -r1, lsl #10
    10fc:	2e090501 	cfsh32cs	mvfx0, mvfx9, #1
    1100:	3f060505 	svccc	0x00060505
    1104:	01060805 	tsteq	r6, r5, lsl #16
    1108:	30060705 	andcc	r0, r6, r5, lsl #14
    110c:	4b062006 	blmi	18912c <__RAM_SIZE+0x8912c>
    1110:	01060d05 	tsteq	r6, r5, lsl #26
    1114:	3d060705 	stccc	7, cr0, [r6, #-20]	; 0xffffffec
    1118:	06221006 	strteq	r1, [r2], -r6
    111c:	060d0524 	streq	r0, [sp], -r4, lsr #10
    1120:	06050501 	streq	r0, [r5], -r1, lsl #10
    1124:	060b0532 			; <UNDEFINED> instruction: 0x060b0532
    1128:	06050501 	streq	r0, [r5], -r1, lsl #10
    112c:	13070521 	movwne	r0, #29985	; 0x7521
    1130:	01060f05 	tsteq	r6, r5, lsl #30
    1134:	052e0705 	streq	r0, [lr, #-1797]!	; 0xfffff8fb
    1138:	05ec060d 	strbeq	r0, [ip, #1549]!	; 0x60d
    113c:	05131505 	ldreq	r1, [r3, #-1285]	; 0xfffffafb
    1140:	7ccd0314 	stclvc	3, cr0, [sp], {20}
    1144:	14030501 	strne	r0, [r3], #-1281	; 0xfffffaff
    1148:	01061605 	tsteq	r6, r5, lsl #12
    114c:	0308053c 	movweq	r0, #34108	; 0x853c
    1150:	050103b1 	streq	r0, [r1, #-945]	; 0xfffffc4f
    1154:	0531060a 	ldreq	r0, [r1, #-1546]!	; 0xfffff9f6
    1158:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
    115c:	05052a0b 	streq	r2, [r5, #-2571]	; 0xfffff5f5
    1160:	2e110306 	cdpcs	3, 1, cr0, cr1, cr6, {0}
    1164:	06090513 			; <UNDEFINED> instruction: 0x06090513
    1168:	2e080501 	cfsh32cs	mvfx0, mvfx8, #1
    116c:	052d0f05 	streq	r0, [sp, #-3845]!	; 0xfffff0fb
    1170:	0f030605 	svceq	0x00030605
    1174:	060d052e 	streq	r0, [sp], -lr, lsr #10
    1178:	2e050501 	cfsh32cs	mvfx0, mvfx5, #1
    117c:	03061305 	movweq	r1, #25349	; 0x6305
    1180:	1905e456 	stmdbne	r5, {r1, r2, r4, r6, sl, sp, lr, pc}
    1184:	2b050106 	blcs	1415a4 <__RAM_SIZE+0x415a4>
    1188:	31052e06 	tstcc	r5, r6, lsl #28
    118c:	35050106 	strcc	r0, [r5, #-262]	; 0xfffffefa
    1190:	3d052e06 	stccc	14, cr2, [r5, #-24]	; 0xffffffe8
    1194:	190d0501 	stmdbne	sp, {r0, r8, sl}
    1198:	7a031305 	bvc	c5db4 <__HEAP_SIZE+0xc4db4>
    119c:	06190520 	ldreq	r0, [r9], -r0, lsr #10
    11a0:	062b0501 	strteq	r0, [fp], -r1, lsl #10
    11a4:	0631052e 	ldrteq	r0, [r1], -lr, lsr #10
    11a8:	06350501 	ldrteq	r0, [r5], -r1, lsl #10
    11ac:	013d052e 	teqeq	sp, lr, lsr #10
    11b0:	05180d05 	ldreq	r0, [r8, #-3333]	; 0xfffff2fb
    11b4:	19051b13 	stmdbne	r5, {r0, r1, r4, r8, r9, fp, ip}
    11b8:	2b050106 	blcs	1415d8 <__RAM_SIZE+0x415d8>
    11bc:	31052e06 	tstcc	r5, r6, lsl #28
    11c0:	35050106 	strcc	r0, [r5, #-262]	; 0xfffffefa
    11c4:	3d052e06 	stccc	14, cr2, [r5, #-24]	; 0xffffffe8
    11c8:	170d0501 	strne	r0, [sp, -r1, lsl #10]
    11cc:	051c1305 	ldreq	r1, [ip, #-773]	; 0xfffffcfb
    11d0:	05010619 	streq	r0, [r1, #-1561]	; 0xfffff9e7
    11d4:	052e062b 	streq	r0, [lr, #-1579]!	; 0xfffff9d5
    11d8:	05010631 	streq	r0, [r1, #-1585]	; 0xfffff9cf
    11dc:	052e0635 	streq	r0, [lr, #-1589]!	; 0xfffff9cb
    11e0:	0d05013d 	stfeqs	f0, [r5, #-244]	; 0xffffff0c
    11e4:	1d130516 	cfldr32ne	mvfx0, [r3, #-88]	; 0xffffffa8
    11e8:	01061905 	tsteq	r6, r5, lsl #18
    11ec:	2e062b05 	vmlacs.f64	d2, d6, d5
    11f0:	01063105 	tsteq	r6, r5, lsl #2
    11f4:	2e063505 	cfsh32cs	mvfx3, mvfx6, #5
    11f8:	05013d05 	streq	r3, [r1, #-3333]	; 0xfffff2fb
    11fc:	0705150d 	streq	r1, [r5, -sp, lsl #10]
    1200:	060f0525 	streq	r0, [pc], -r5, lsr #10
    1204:	07054a01 	streq	r4, [r5, -r1, lsl #20]
    1208:	11052306 	tstne	r5, r6, lsl #6
    120c:	07050106 	streq	r0, [r5, -r6, lsl #2]
    1210:	0a054b06 	beq	153e30 <__RAM_SIZE+0x53e30>
    1214:	09050106 	stmdbeq	r5, {r1, r2, r8}
    1218:	0f053306 	svceq	0x00053306
    121c:	07050106 	streq	r0, [r5, -r6, lsl #2]
    1220:	0d052206 	sfmeq	f2, 4, [r5, #-24]	; 0xffffffe8
    1224:	09050106 	stmdbeq	r5, {r1, r2, r8}
    1228:	4a7a0306 	bmi	1e81e48 <__RAM_SIZE+0x1d81e48>
    122c:	01060f05 	tsteq	r6, r5, lsl #30
    1230:	2f060905 	svccs	0x00060905
    1234:	01061f05 	tsteq	r6, r5, lsl #30
    1238:	0705202e 	streq	r2, [r5, -lr, lsr #32]
    123c:	010b0306 	tsteq	fp, r6, lsl #6
    1240:	01060d05 	tsteq	r6, r5, lsl #26
    1244:	2f060705 	svccs	0x00060705
    1248:	01060d05 	tsteq	r6, r5, lsl #26
    124c:	2f060705 	svccs	0x00060705
    1250:	01060b05 	tsteq	r6, r5, lsl #22
    1254:	03061405 	movweq	r1, #25605	; 0x6405
    1258:	05207cb9 	streq	r7, [r0, #-3257]!	; 0xfffff347
    125c:	16051403 	strne	r1, [r5], -r3, lsl #8
    1260:	053c0106 	ldreq	r0, [ip, #-262]!	; 0xfffffefa
    1264:	03c5030a 	biceq	r0, r5, #671088640	; 0x28000000
    1268:	060c0501 	streq	r0, [ip], -r1, lsl #10
    126c:	060f0531 			; <UNDEFINED> instruction: 0x060f0531
    1270:	2e790301 	cdpcs	3, 7, cr0, cr9, cr1, {0}
    1274:	41060905 	tstmi	r6, r5, lsl #18
    1278:	01061505 	tsteq	r6, r5, lsl #10
    127c:	0609054a 	streq	r0, [r9], -sl, asr #10
    1280:	06130523 	ldreq	r0, [r3], -r3, lsr #10
    1284:	06090501 	streq	r0, [r9], -r1, lsl #10
    1288:	0633054b 	ldrteq	r0, [r3], -fp, asr #10
    128c:	06090501 	streq	r0, [r9], -r1, lsl #10
    1290:	060f052f 	streq	r0, [pc], -pc, lsr #10
    1294:	09054a01 	stmdbeq	r5, {r0, r9, fp, lr}
    1298:	0f051906 	svceq	0x00051906
    129c:	09050106 	stmdbeq	r5, {r1, r2, r8}
    12a0:	0f052f06 	svceq	0x00052f06
    12a4:	09050106 	stmdbeq	r5, {r1, r2, r8}
    12a8:	0d052f06 	stceq	15, cr2, [r5, #-24]	; 0xffffffe8
    12ac:	0c050106 	stfeqs	f0, [r5], {6}
    12b0:	2c0f0520 	cfstr32cs	mvfx0, [pc], {32}
    12b4:	31060b05 	tstcc	r6, r5, lsl #22
    12b8:	01061105 	tsteq	r6, r5, lsl #2
    12bc:	2f060b05 	svccs	0x00060b05
    12c0:	01061105 	tsteq	r6, r5, lsl #2
    12c4:	40060905 	andmi	r0, r6, r5, lsl #18
    12c8:	01060f05 	tsteq	r6, r5, lsl #30
    12cc:	2f060905 	svccs	0x00060905
    12d0:	01060f05 	tsteq	r6, r5, lsl #30
    12d4:	2f060905 	svccs	0x00060905
    12d8:	01060d05 	tsteq	r6, r5, lsl #26
    12dc:	05200c05 	streq	r0, [r0, #-3077]!	; 0xfffff3fb
    12e0:	0b052c0f 	bleq	14c324 <__RAM_SIZE+0x4c324>
    12e4:	11053106 	tstne	r5, r6, lsl #2
    12e8:	0b050106 	bleq	141708 <__RAM_SIZE+0x41708>
    12ec:	11052f06 	tstne	r5, r6, lsl #30
    12f0:	09050106 	stmdbeq	r5, {r1, r2, r8}
    12f4:	0f054106 	svceq	0x00054106
    12f8:	09050106 	stmdbeq	r5, {r1, r2, r8}
    12fc:	0f052f06 	svceq	0x00052f06
    1300:	09050106 	stmdbeq	r5, {r1, r2, r8}
    1304:	05052f06 	streq	r2, [r5, #-3846]	; 0xfffff0fa
    1308:	05010f03 	streq	r0, [r1, #-3843]	; 0xfffff0fd
    130c:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
    1310:	09052e05 	stmdbeq	r5, {r0, r2, r9, sl, fp, sp}
    1314:	02740306 	rsbseq	r0, r4, #402653184	; 0x18000000
    1318:	0f05015b 	svceq	0x0005015b
    131c:	09050106 	stmdbeq	r5, {r1, r2, r8}
    1320:	0f052f06 	svceq	0x00052f06
    1324:	09050106 	stmdbeq	r5, {r1, r2, r8}
    1328:	05222f06 	streq	r2, [r2, #-3846]!	; 0xfffff0fa
    132c:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    1330:	052f0609 	streq	r0, [pc, #-1545]!	; d2f <__Vectors_Size+0x56f>
    1334:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    1338:	032f0609 			; <UNDEFINED> instruction: 0x032f0609
    133c:	0513200f 	ldreq	r2, [r3, #-15]
    1340:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    1344:	0402001c 	streq	r0, [r2], #-28	; 0xffffffe4
    1348:	0e052e01 	cdpeq	14, 0, cr2, cr5, cr1, {0}
    134c:	11053106 	tstne	r5, r6, lsl #2
    1350:	0e050106 	adfeqs	f0, f5, f6
    1354:	11053106 	tstne	r5, r6, lsl #2
    1358:	0b050106 	bleq	141778 <__RAM_SIZE+0x41778>
    135c:	05133206 	ldreq	r3, [r3, #-518]	; 0xfffffdfa
    1360:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    1364:	77032d10 	smladvc	r3, r0, sp, r2
    1368:	0609052e 	streq	r0, [r9], -lr, lsr #10
    136c:	05200d03 	streq	r0, [r0, #-3331]!	; 0xfffff2fd
    1370:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    1374:	05330609 	ldreq	r0, [r3, #-1545]!	; 0xfffff9f7
    1378:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    137c:	0402001e 	streq	r0, [r2], #-30	; 0xffffffe2
    1380:	0b052e01 	bleq	14cb8c <__RAM_SIZE+0x4cb8c>
    1384:	11052f06 	tstne	r5, r6, lsl #30
    1388:	09050106 	stmdbeq	r5, {r1, r2, r8}
    138c:	0c053206 	sfmeq	f3, 4, [r5], {6}
    1390:	0b050106 	bleq	1417b0 <__RAM_SIZE+0x417b0>
    1394:	11053d06 	tstne	r5, r6, lsl #26
    1398:	09050106 	stmdbeq	r5, {r1, r2, r8}
    139c:	0c053206 	sfmeq	f3, 4, [r5], {6}
    13a0:	1e050106 	adfnes	f0, f5, f6
    13a4:	01040200 	mrseq	r0, R12_usr
    13a8:	060b052e 	streq	r0, [fp], -lr, lsr #10
    13ac:	052e1303 	streq	r1, [lr, #-771]!	; 0xfffffcfd
    13b0:	0501060e 	streq	r0, [r1, #-1550]	; 0xfffff9f2
    13b4:	054f0610 	strbeq	r0, [pc, #-1552]	; dac <__Vectors_Size+0x5ec>
    13b8:	05010613 	streq	r0, [r1, #-1555]	; 0xfffff9ed
    13bc:	054e060d 	strbeq	r0, [lr, #-1549]	; 0xfffff9f3
    13c0:	05010667 	streq	r0, [r1, #-1639]	; 0xfffff999
    13c4:	0d054a4e 	vstreq	s8, [r5, #-312]	; 0xfffffec8
    13c8:	08040200 	stmdaeq	r4, {r9}
    13cc:	13054b06 	movwne	r4, #23302	; 0x5b06
    13d0:	08040200 	stmdaeq	r4, {r9}
    13d4:	02000106 	andeq	r0, r0, #-2147483647	; 0x80000001
    13d8:	00740804 	rsbseq	r0, r4, r4, lsl #16
    13dc:	4a080402 	bmi	2023ec <__RAM_SIZE+0x1023ec>
    13e0:	08040200 	stmdaeq	r4, {r9}
    13e4:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    13e8:	02002008 	andeq	r2, r0, #8
    13ec:	05200804 	streq	r0, [r0, #-2052]!	; 0xfffff7fc
    13f0:	01470310 	cmpeq	r7, r0, lsl r3
    13f4:	0b053131 	bleq	14d8c0 <__RAM_SIZE+0x4d8c0>
    13f8:	11053606 	tstne	r5, r6, lsl #12
    13fc:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
    1400:	1003060b 	andne	r0, r3, fp, lsl #12
    1404:	060e0520 	streq	r0, [lr], -r0, lsr #10
    1408:	06100501 	ldreq	r0, [r0], -r1, lsl #10
    140c:	06130542 	ldreq	r0, [r3], -r2, asr #10
    1410:	060d0501 	streq	r0, [sp], -r1, lsl #10
    1414:	064c0541 	strbeq	r0, [ip], -r1, asr #10
    1418:	3c3c0501 	cfldr32cc	mvfx0, [ip], #-4
    141c:	02000d05 	andeq	r0, r0, #320	; 0x140
    1420:	4b060804 	blmi	183438 <__RAM_SIZE+0x83438>
    1424:	02003805 	andeq	r3, r0, #327680	; 0x50000
    1428:	01060804 	tsteq	r6, r4, lsl #16
    142c:	02001305 	andeq	r1, r0, #335544320	; 0x14000000
    1430:	004a0804 	subeq	r0, sl, r4, lsl #16
    1434:	74080402 	strvc	r0, [r8], #-1026	; 0xfffffbfe
    1438:	08040200 	stmdaeq	r4, {r9}
    143c:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    1440:	02005808 	andeq	r5, r0, #8, 16	; 0x80000
    1444:	05200804 	streq	r0, [r0, #-2052]!	; 0xfffff7fc
    1448:	12030609 	andne	r0, r3, #9437184	; 0x900000
    144c:	060f0501 	streq	r0, [pc], -r1, lsl #10
    1450:	06090501 	streq	r0, [r9], -r1, lsl #10
    1454:	030d053d 	movweq	r0, #54589	; 0xd53d
    1458:	1d052063 	stcne	0, cr2, [r5, #-396]	; 0xfffffe74
    145c:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    1460:	3d058306 	stccc	3, cr8, [r5, #-24]	; 0xffffffe8
    1464:	13050106 	movwne	r0, #20742	; 0x5106
    1468:	ac582e4a 	mrrcge	14, 4, r2, r8, cr10
    146c:	203d0520 	eorscs	r0, sp, r0, lsr #10
    1470:	4e060d05 	cdpmi	13, 0, cr0, cr6, cr5, {0}
    1474:	01061805 	tsteq	r6, r5, lsl #16
    1478:	4b060d05 	blmi	184894 <__RAM_SIZE+0x84894>
    147c:	01063805 	tsteq	r6, r5, lsl #16
    1480:	9e4a1305 	cdpls	3, 4, cr1, cr10, cr5, {0}
    1484:	81052058 	qaddhi	r2, r8, r5
    1488:	04020001 	streq	r0, [r2], #-1
    148c:	71052302 	tstvc	r5, r2, lsl #6
    1490:	3c66053c 	cfstr64cc	mvdx0, [r6], #-240	; 0xffffff10
    1494:	3c018105 	stfccd	f0, [r1], {5}
    1498:	060d0558 			; <UNDEFINED> instruction: 0x060d0558
    149c:	0613051a 			; <UNDEFINED> instruction: 0x0613051a
    14a0:	584a0801 	stmdapl	sl, {r0, fp}^
    14a4:	060d0520 	streq	r0, [sp], -r0, lsr #10
    14a8:	06130524 	ldreq	r0, [r3], -r4, lsr #10
    14ac:	20909e01 	addscs	r9, r0, r1, lsl #28
    14b0:	0001ae05 	andeq	sl, r1, r5, lsl #28
    14b4:	23020402 	movwcs	r0, #9218	; 0x2402
    14b8:	3c019505 	cfstr32cc	mvfx9, [r1], {5}
    14bc:	5801ae05 	stmdapl	r1, {r0, r2, r9, sl, fp, sp, pc}
    14c0:	06090558 			; <UNDEFINED> instruction: 0x06090558
    14c4:	05010a03 	streq	r0, [r1, #-2563]	; 0xfffff5fd
    14c8:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    14cc:	052f0609 	streq	r0, [pc, #-1545]!	; ecb <__Vectors_Size+0x70b>
    14d0:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    14d4:	67080609 	strvs	r0, [r8, -r9, lsl #12]
    14d8:	01060f05 	tsteq	r6, r5, lsl #30
    14dc:	3d060905 	vstrcc.16	s0, [r6, #-10]	; <UNPREDICTABLE>
    14e0:	02001d05 	andeq	r1, r0, #320	; 0x140
    14e4:	051d0104 	ldreq	r0, [sp, #-260]	; 0xfffffefc
    14e8:	04020023 	streq	r0, [r2], #-35	; 0xffffffdd
    14ec:	00010601 	andeq	r0, r1, r1, lsl #12
    14f0:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    14f4:	03060905 	movweq	r0, #26885	; 0x6905
    14f8:	0c052009 	stceq	0, cr2, [r5], {9}
    14fc:	1d050106 	stfnes	f0, [r5, #-24]	; 0xffffffe8
    1500:	02040200 	andeq	r0, r4, #0, 4
    1504:	0031052e 	eorseq	r0, r1, lr, lsr #10
    1508:	06030402 	streq	r0, [r3], -r2, lsl #8
    150c:	0037052e 	eorseq	r0, r7, lr, lsr #10
    1510:	06030402 	streq	r0, [r3], -r2, lsl #8
    1514:	06090501 	streq	r0, [r9], -r1, lsl #10
    1518:	060c052f 	streq	r0, [ip], -pc, lsr #10
    151c:	001d0501 	andseq	r0, sp, r1, lsl #10
    1520:	2e020402 	cdpcs	4, 0, cr0, cr2, cr2, {0}
    1524:	02003105 	andeq	r3, r0, #1073741825	; 0x40000001
    1528:	2e060304 	cdpcs	3, 0, cr0, cr6, cr4, {0}
    152c:	02003705 	andeq	r3, r0, #1310720	; 0x140000
    1530:	01060304 	tsteq	r6, r4, lsl #6
    1534:	2f060905 	svccs	0x00060905
    1538:	01060f05 	tsteq	r6, r5, lsl #30
    153c:	08060905 	stmdaeq	r6, {r0, r2, r8, fp}
    1540:	060f0567 	streq	r0, [pc], -r7, ror #10
    1544:	06090501 	streq	r0, [r9], -r1, lsl #10
    1548:	0514243d 	ldreq	r2, [r4, #-1085]	; 0xfffffbc3
    154c:	2e01060c 	cfmadd32cs	mvax0, mvfx0, mvfx1, mvfx12
    1550:	051e1605 	ldreq	r1, [lr, #-1541]	; 0xfffff9fb
    1554:	05360609 	ldreq	r0, [r6, #-1545]!	; 0xfffff9f7
    1558:	05010613 	streq	r0, [r1, #-1555]	; 0xfffff9ed
    155c:	062e3c09 	strteq	r3, [lr], -r9, lsl #24
    1560:	060c055a 			; <UNDEFINED> instruction: 0x060c055a
    1564:	06090501 	streq	r0, [r9], -r1, lsl #10
    1568:	060f0525 	streq	r0, [pc], -r5, lsr #10
    156c:	06090501 	streq	r0, [r9], -r1, lsl #10
    1570:	030d053d 	movweq	r0, #54589	; 0xd53d
    1574:	2e062e74 	mcrcs	14, 0, r2, cr6, cr4, {3}
    1578:	05491305 	strbeq	r1, [r9, #-773]	; 0xfffffcfb
    157c:	1105210d 	tstne	r5, sp, lsl #2
    1580:	13051f06 	movwne	r1, #24326	; 0x5f06
    1584:	11050106 	tstne	r5, r6, lsl #2
    1588:	16052e2e 	strne	r2, [r5], -lr, lsr #28
    158c:	3c2e3c2b 	stccc	12, cr3, [lr], #-172	; 0xffffff54
    1590:	03060d05 	movweq	r0, #27909	; 0x6d05
    1594:	2006200c 	andcs	r2, r6, ip
    1598:	05491305 	strbeq	r1, [r9, #-773]	; 0xfffffcfb
    159c:	1105210d 	tstne	r5, sp, lsl #2
    15a0:	13051f06 	movwne	r1, #24326	; 0x5f06
    15a4:	11050106 	tstne	r5, r6, lsl #2
    15a8:	052e2e2e 	streq	r2, [lr, #-3630]!	; 0xfffff1d2
    15ac:	09030609 	stmdbeq	r3, {r0, r3, r9, sl}
    15b0:	06150501 	ldreq	r0, [r5], -r1, lsl #10
    15b4:	06090501 	streq	r0, [r9], -r1, lsl #10
    15b8:	061a0559 			; <UNDEFINED> instruction: 0x061a0559
    15bc:	06260501 	strteq	r0, [r6], -r1, lsl #10
    15c0:	747b9003 	ldrbtvc	r9, [fp], #-3
    15c4:	05012205 	streq	r2, [r1, #-517]	; 0xfffffdfb
    15c8:	052e061e 	streq	r0, [lr, #-1566]!	; 0xfffff9e2
    15cc:	05200611 	streq	r0, [r0, #-1553]!	; 0xfffff9ef
    15d0:	052e0603 	streq	r0, [lr, #-1539]!	; 0xfffff9fd
    15d4:	1405201e 	strne	r2, [r5], #-30	; 0xffffffe2
    15d8:	06030520 	streq	r0, [r3], -r0, lsr #10
    15dc:	061b052f 	ldreq	r0, [fp], -pc, lsr #10
    15e0:	09052e01 	stmdbeq	r5, {r0, r9, sl, fp, sp}
    15e4:	04f10306 	ldrbteq	r0, [r1], #774	; 0x306
    15e8:	060c0501 	streq	r0, [ip], -r1, lsl #10
    15ec:	060b0501 	streq	r0, [fp], -r1, lsl #10
    15f0:	060d054b 	streq	r0, [sp], -fp, asr #10
    15f4:	06090501 	streq	r0, [r9], -r1, lsl #10
    15f8:	060c053e 			; <UNDEFINED> instruction: 0x060c053e
    15fc:	202e4a01 	eorcs	r4, lr, r1, lsl #20
    1600:	1b1a0520 	blne	682a88 <__RAM_SIZE+0x582a88>
    1604:	0d052e2e 	stceq	14, cr2, [r5, #-184]	; 0xffffff48
    1608:	2e063506 	cfsh32cs	mvfx3, mvfx6, #6
    160c:	05491305 	strbeq	r1, [r9, #-773]	; 0xfffffcfb
    1610:	1105210d 	tstne	r5, sp, lsl #2
    1614:	13051f06 	movwne	r1, #24326	; 0x5f06
    1618:	11050106 	tstne	r5, r6, lsl #2
    161c:	2e130520 	cfmul64cs	mvdx0, mvdx3, mvdx0
    1620:	4505203c 	strmi	r2, [r5, #-60]	; 0xffffffc4
    1624:	060b0525 	streq	r0, [fp], -r5, lsr #10
    1628:	06120521 	ldreq	r0, [r2], -r1, lsr #10
    162c:	2e0b0501 	cfsh32cs	mvfx0, mvfx11, #1
    1630:	060f0520 	streq	r0, [pc], -r0, lsr #10
    1634:	06110549 	ldreq	r0, [r1], -r9, asr #10
    1638:	2e0f0501 	cfsh32cs	mvfx0, mvfx15, #1
    163c:	02001a05 	andeq	r1, r0, #20480	; 0x5000
    1640:	05200104 	streq	r0, [r0, #-260]!	; 0xfffffefc
    1644:	04020045 	streq	r0, [r2], #-69	; 0xffffffbb
    1648:	39052e02 	stmdbcc	r5, {r1, r9, sl, fp, sp}
    164c:	02040200 	andeq	r0, r4, #0, 4
    1650:	320c0520 	andcc	r0, ip, #32, 10	; 0x8000000
    1654:	2e060905 	vmlacs.f16	s0, s12, s10	; <UNPREDICTABLE>
    1658:	01060c05 	tsteq	r6, r5, lsl #24
    165c:	33060905 	movwcc	r0, #26885	; 0x6905
    1660:	01060f05 	tsteq	r6, r5, lsl #30
    1664:	3d060905 	vstrcc.16	s0, [r6, #-10]	; <UNPREDICTABLE>
    1668:	052e2006 	streq	r2, [lr, #-6]!
    166c:	061c060d 	ldreq	r0, [ip], -sp, lsl #12
    1670:	49130520 	ldmdbmi	r3, {r5, r8, sl}
    1674:	05210d05 	streq	r0, [r1, #-3333]!	; 0xfffff2fb
    1678:	051f0611 	ldreq	r0, [pc, #-1553]	; 106f <__HEAP_SIZE+0x6f>
    167c:	05010613 	streq	r0, [r1, #-1555]	; 0xfffff9ed
    1680:	202e2e11 	eorcs	r2, lr, r1, lsl lr
    1684:	06090520 	streq	r0, [r9], -r0, lsr #10
    1688:	13010903 	movwne	r0, #6403	; 0x1903
    168c:	01060f05 	tsteq	r6, r5, lsl #30
    1690:	30060905 	andcc	r0, r6, r5, lsl #18
    1694:	170b0513 	smladne	fp, r3, r5, r0
    1698:	01065105 	tsteq	r6, r5, lsl #2
    169c:	054a1105 	strbeq	r1, [sl, #-261]	; 0xfffffefb
    16a0:	16080609 	strne	r0, [r8], -r9, lsl #12
    16a4:	01060f05 	tsteq	r6, r5, lsl #30
    16a8:	3d060905 	vstrcc.16	s0, [r6, #-10]	; <UNPREDICTABLE>
    16ac:	16062006 	strne	r2, [r6], -r6
    16b0:	59062006 	stmdbpl	r6, {r1, r2, sp}
    16b4:	01060f05 	tsteq	r6, r5, lsl #30
    16b8:	3d060905 	vstrcc.16	s0, [r6, #-10]	; <UNPREDICTABLE>
    16bc:	06221006 	strteq	r1, [r2], -r6
    16c0:	06200623 	strteq	r0, [r0], -r3, lsr #12
    16c4:	060f054b 	streq	r0, [pc], -fp, asr #10
    16c8:	06090501 	streq	r0, [r9], -r1, lsl #10
    16cc:	2210063d 	andscs	r0, r0, #63963136	; 0x3d00000
    16d0:	207df803 	rsbscs	pc, sp, r3, lsl #16
    16d4:	03060305 	movweq	r0, #25349	; 0x6305
    16d8:	002e028d 	eoreq	r0, lr, sp, lsl #5
    16dc:	06010402 	streq	r0, [r1], -r2, lsl #8
    16e0:	02002e2e 	andeq	r2, r0, #736	; 0x2e0
    16e4:	00200404 	eoreq	r0, r0, r4, lsl #8
    16e8:	06040402 	streq	r0, [r4], -r2, lsl #8
    16ec:	0001054d 	andeq	r0, r1, sp, asr #10
    16f0:	06040402 	streq	r0, [r4], -r2, lsl #8
    16f4:	04020013 	streq	r0, [r2], #-19	; 0xffffffed
    16f8:	03024a04 	movweq	r4, #10756	; 0x2a04
    16fc:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    1700:	02050001 	andeq	r0, r5, #1
    1704:	10001b00 	andne	r1, r0, r0, lsl #22
    1708:	01019503 	tsteq	r1, r3, lsl #10
    170c:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
    1710:	1c050111 	stfnes	f0, [r5], {17}
    1714:	13030501 	movwne	r0, #13569	; 0x3501
    1718:	01060605 	tsteq	r6, r5, lsl #12
    171c:	052c0105 	streq	r0, [ip, #-261]!	; 0xfffffefb
    1720:	05230605 	streq	r0, [r3, #-1541]!	; 0xfffff9fb
    1724:	02300601 	eorseq	r0, r0, #1048576	; 0x100000
    1728:	01010001 	tsteq	r1, r1
    172c:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    1730:	001b0c02 	andseq	r0, fp, r2, lsl #24
    1734:	06de0310 			; <UNDEFINED> instruction: 0x06de0310
    1738:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    173c:	13670603 	cmnne	r7, #3145728	; 0x300000
    1740:	13051321 	movwne	r1, #21281	; 0x5321
    1744:	03050106 	movweq	r0, #20742	; 0x5106
    1748:	05137506 	ldreq	r7, [r3, #-1286]	; 0xfffffafa
    174c:	02130601 	andseq	r0, r3, #1048576	; 0x100000
    1750:	01010008 	tsteq	r1, r8
    1754:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    1758:	00000002 	andeq	r0, r0, r2
    175c:	06e90300 	strbteq	r0, [r9], r0, lsl #6
    1760:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    1764:	13750603 	cmnne	r5, #3145728	; 0x300000
    1768:	06130521 	ldreq	r0, [r3], -r1, lsr #10
    176c:	03054a01 	movweq	r4, #23041	; 0x5a01
    1770:	05132f06 	ldreq	r2, [r3, #-3846]	; 0xfffff0fa
    1774:	02130601 	andseq	r0, r3, #1048576	; 0x100000
    1778:	01010008 	tsteq	r1, r8
    177c:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    1780:	00000002 	andeq	r0, r0, r2
    1784:	06f30300 	ldrbteq	r0, [r3], r0, lsl #6
    1788:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    178c:	13750603 	cmnne	r5, #3145728	; 0x300000
    1790:	06130521 	ldreq	r0, [r3], -r1, lsr #10
    1794:	05202e01 	streq	r2, [r0, #-3585]!	; 0xfffff1ff
    1798:	132f0603 			; <UNDEFINED> instruction: 0x132f0603
    179c:	13060105 	movwne	r0, #24837	; 0x6105
    17a0:	01000702 	tsteq	r0, r2, lsl #14
    17a4:	00010501 	andeq	r0, r1, r1, lsl #10
    17a8:	00000205 	andeq	r0, r0, r5, lsl #4
    17ac:	fd030000 	stc2	0, cr0, [r3, #-0]
    17b0:	01060106 	tsteq	r6, r6, lsl #2
    17b4:	3d060305 	stccc	3, cr0, [r6, #-20]	; 0xffffffec
    17b8:	060a0513 			; <UNDEFINED> instruction: 0x060a0513
    17bc:	05204a01 	streq	r4, [r0, #-2561]!	; 0xfffff5ff
    17c0:	06022f01 	streq	r2, [r2], -r1, lsl #30
    17c4:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    17c8:	02050001 	andeq	r0, r5, #1
    17cc:	00000000 	andeq	r0, r0, r0
    17d0:	01078403 	tsteq	r7, r3, lsl #8
    17d4:	03050106 	movweq	r0, #20742	; 0x5106
    17d8:	0a052f06 	beq	14d3f8 <__RAM_SIZE+0x4d3f8>
    17dc:	202e0106 	eorcs	r0, lr, r6, lsl #2
    17e0:	01052020 	tsteq	r5, r0, lsr #32
    17e4:	0005022f 	andeq	r0, r5, pc, lsr #4
    17e8:	01050101 	tsteq	r5, r1, lsl #2
    17ec:	00020500 	andeq	r0, r2, r0, lsl #10
    17f0:	03000000 	movweq	r0, #0
    17f4:	0601078a 	streq	r0, [r1], -sl, lsl #15
    17f8:	06030501 	streq	r0, [r3], -r1, lsl #10
    17fc:	05211367 	streq	r1, [r1, #-871]!	; 0xfffffc99
    1800:	0501061b 	streq	r0, [r1, #-1563]	; 0xfffff9e5
    1804:	052f0603 	streq	r0, [pc, #-1539]!	; 1209 <__HEAP_SIZE+0x209>
    1808:	58010613 	stmdapl	r1, {r0, r1, r4, r9, sl}
    180c:	2f060305 	svccs	0x00060305
    1810:	06010513 			; <UNDEFINED> instruction: 0x06010513
    1814:	00080213 	andeq	r0, r8, r3, lsl r2
    1818:	03380101 	teqeq	r8, #1073741824	; 0x40000000
    181c:	00030000 	andeq	r0, r3, r0
    1820:	000001cc 	andeq	r0, r0, ip, asr #3
    1824:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
    1828:	0101000d 	tsteq	r1, sp
    182c:	00000101 	andeq	r0, r0, r1, lsl #2
    1830:	00000100 	andeq	r0, r0, r0, lsl #2
    1834:	2f2e2e01 	svccs	0x002e2e01
    1838:	65726f43 	ldrbvs	r6, [r2, #-3907]!	; 0xfffff0bd
    183c:	6372532f 	cmnvs	r2, #-1140850688	; 0xbc000000
    1840:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
    1844:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
    1848:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
    184c:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
    1850:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
    1854:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
    1858:	5f6d7261 	svcpl	0x006d7261
    185c:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
    1860:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
    1864:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    1868:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    186c:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    1870:	30312d69 	eorscc	r2, r1, r9, ror #26
    1874:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
    1878:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
    187c:	615c3031 	cmpvs	ip, r1, lsr r0
    1880:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    1884:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    1888:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    188c:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
    1890:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    1894:	63616d5c 	cmnvs	r1, #92, 26	; 0x1700
    1898:	656e6968 	strbvs	r6, [lr, #-2408]!	; 0xfffff698
    189c:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
    18a0:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
    18a4:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
    18a8:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
    18ac:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
    18b0:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
    18b4:	5f6d7261 	svcpl	0x006d7261
    18b8:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
    18bc:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
    18c0:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    18c4:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    18c8:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    18cc:	30312d69 	eorscc	r2, r1, r9, ror #26
    18d0:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
    18d4:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
    18d8:	6c5c3031 	mrrcvs	0, 3, r3, ip, cr1
    18dc:	675c6269 	ldrbvs	r6, [ip, -r9, ror #4]
    18e0:	615c6363 	cmpvs	ip, r3, ror #6
    18e4:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    18e8:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    18ec:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    18f0:	2e30315c 	mrccs	1, 1, r3, cr0, cr12, {2}
    18f4:	5c312e33 	ldcpl	14, cr2, [r1], #-204	; 0xffffff34
    18f8:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    18fc:	00656475 	rsbeq	r6, r5, r5, ror r4
    1900:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
    1904:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    1908:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
    190c:	705c6e6f 	subsvc	r6, ip, pc, ror #28
    1910:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
    1914:	615c6d61 	cmpvs	ip, r1, ror #26
    1918:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
    191c:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
    1920:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
    1924:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    1928:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    192c:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    1930:	2e30312d 	rsfcssp	f3, f0, #5.0
    1934:	30322d33 	eorscc	r2, r2, r3, lsr sp
    1938:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
    193c:	72615c30 	rsbvc	r5, r1, #48, 24	; 0x3000
    1940:	6f6e2d6d 	svcvs	0x006e2d6d
    1944:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    1948:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
    194c:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    1950:	5c656475 	cfstrdpl	mvd6, [r5], #-468	; 0xfffffe2c
    1954:	00737973 	rsbseq	r7, r3, r3, ror r9
    1958:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
    195c:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    1960:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
    1964:	705c6e6f 	subsvc	r6, ip, pc, ror #28
    1968:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
    196c:	615c6d61 	cmpvs	ip, r1, ror #26
    1970:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
    1974:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
    1978:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
    197c:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    1980:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    1984:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    1988:	2e30312d 	rsfcssp	f3, f0, #5.0
    198c:	30322d33 	eorscc	r2, r2, r3, lsr sp
    1990:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
    1994:	72615c30 	rsbvc	r5, r1, #48, 24	; 0x3000
    1998:	6f6e2d6d 	svcvs	0x006e2d6d
    199c:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    19a0:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
    19a4:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    19a8:	00656475 	rsbeq	r6, r5, r5, ror r4
    19ac:	72617500 	rsbvc	r7, r1, #0, 10
    19b0:	00632e74 	rsbeq	r2, r3, r4, ror lr
    19b4:	5f000001 	svcpl	0x00000001
    19b8:	61666564 	cmnvs	r6, r4, ror #10
    19bc:	5f746c75 	svcpl	0x00746c75
    19c0:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
    19c4:	00682e73 	rsbeq	r2, r8, r3, ror lr
    19c8:	73000002 	movwvc	r0, #2
    19cc:	65646474 	strbvs	r6, [r4, #-1140]!	; 0xfffffb8c
    19d0:	00682e66 	rsbeq	r2, r8, r6, ror #28
    19d4:	5f000003 	svcpl	0x00000003
    19d8:	69647473 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
    19dc:	682e746e 	stmdavs	lr!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
    19e0:	00000400 	andeq	r0, r0, r0, lsl #8
    19e4:	69647473 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
    19e8:	00682e6f 	rsbeq	r2, r8, pc, ror #28
    19ec:	00000005 	andeq	r0, r0, r5
    19f0:	05001605 	streq	r1, [r0, #-1541]	; 0xfffff9fb
    19f4:	001b3802 	andseq	r3, fp, r2, lsl #16
    19f8:	011c0310 	tsteq	ip, r0, lsl r3
    19fc:	02002405 	andeq	r2, r0, #83886080	; 0x5000000
    1a00:	05130104 	ldreq	r0, [r3, #-260]	; 0xfffffefc
    1a04:	0402000b 	streq	r0, [r2], #-11
    1a08:	0c050101 	stfeqs	f0, [r5], {1}
    1a0c:	01040200 	mrseq	r0, R12_usr
    1a10:	0b050106 	bleq	141e30 <__RAM_SIZE+0x41e30>
    1a14:	01040200 	mrseq	r0, R12_usr
    1a18:	0605052e 	streq	r0, [r5], -lr, lsr #10
    1a1c:	0616053d 			; <UNDEFINED> instruction: 0x0616053d
    1a20:	06050501 	streq	r0, [r5], -r1, lsl #10
    1a24:	0601052f 	streq	r0, [r1], -pc, lsr #10
    1a28:	00030213 	andeq	r0, r3, r3, lsl r2
    1a2c:	14050101 	strne	r0, [r5], #-257	; 0xfffffeff
    1a30:	00020500 	andeq	r0, r2, r0, lsl #10
    1a34:	03000000 	movweq	r0, #0
    1a38:	2b050122 	blcs	141ec8 <__RAM_SIZE+0x41ec8>
    1a3c:	01040200 	mrseq	r0, R12_usr
    1a40:	000b0513 	andeq	r0, fp, r3, lsl r5
    1a44:	01010402 	tsteq	r1, r2, lsl #8
    1a48:	02000d05 	andeq	r0, r0, #320	; 0x140
    1a4c:	01060104 	tsteq	r6, r4, lsl #2
    1a50:	02000b05 	andeq	r0, r0, #5120	; 0x1400
    1a54:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
    1a58:	053d0605 	ldreq	r0, [sp, #-1541]!	; 0xfffff9fb
    1a5c:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    1a60:	03022f01 	movweq	r2, #12033	; 0x2f01
    1a64:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    1a68:	0205001e 	andeq	r0, r5, #30
    1a6c:	10001b4c 	andne	r1, r0, ip, asr #22
    1a70:	06012703 	streq	r2, [r1], -r3, lsl #14
    1a74:	06050501 	streq	r0, [r5], -r1, lsl #10
    1a78:	0905132f 	stmdbeq	r5, {r0, r1, r2, r3, r5, r8, r9, ip}
    1a7c:	0b051106 	bleq	145e9c <__RAM_SIZE+0x45e9c>
    1a80:	06090521 	streq	r0, [r9], -r1, lsr #10
    1a84:	0e052f21 	cdpeq	15, 0, cr2, cr5, cr1, {1}
    1a88:	0b050106 	bleq	141ea8 <__RAM_SIZE+0x41ea8>
    1a8c:	12051e06 	andne	r1, r5, #6, 28	; 0x60
    1a90:	0b050106 	bleq	141eb0 <__RAM_SIZE+0x41eb0>
    1a94:	06050520 	streq	r0, [r5], -r0, lsr #10
    1a98:	01053d32 	tsteq	r5, r2, lsr sp
    1a9c:	002e1306 	eoreq	r1, lr, r6, lsl #6
    1aa0:	16050101 	strne	r0, [r5], -r1, lsl #2
    1aa4:	6c020500 	cfstr32vs	mvfx0, [r2], {-0}
    1aa8:	0310001b 	tsteq	r0, #27
    1aac:	05050131 	streq	r0, [r5, #-305]	; 0xfffffecf
    1ab0:	06160513 			; <UNDEFINED> instruction: 0x06160513
    1ab4:	06050501 	streq	r0, [r5], -r1, lsl #10
    1ab8:	0616053d 			; <UNDEFINED> instruction: 0x0616053d
    1abc:	06050501 	streq	r0, [r5], -r1, lsl #10
    1ac0:	0616052f 	ldreq	r0, [r6], -pc, lsr #10
    1ac4:	06050501 	streq	r0, [r5], -r1, lsl #10
    1ac8:	0616052f 	ldreq	r0, [r6], -pc, lsr #10
    1acc:	06050501 	streq	r0, [r5], -r1, lsl #10
    1ad0:	0616053d 			; <UNDEFINED> instruction: 0x0616053d
    1ad4:	06050501 	streq	r0, [r5], -r1, lsl #10
    1ad8:	0616052f 	ldreq	r0, [r6], -pc, lsr #10
    1adc:	2f010501 	svccs	0x00010501
    1ae0:	01000402 	tsteq	r0, r2, lsl #8
    1ae4:	00240501 	eoreq	r0, r4, r1, lsl #10
    1ae8:	00000205 	andeq	r0, r0, r5, lsl #4
    1aec:	3a030000 	bcc	c1af4 <__HEAP_SIZE+0xc0af4>
    1af0:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    1af4:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
    1af8:	022f0601 	eoreq	r0, pc, #1048576	; 0x100000
    1afc:	01010001 	tsteq	r1, r1
    1b00:	05003005 	streq	r3, [r0, #-5]
    1b04:	00000002 	andeq	r0, r0, r2
    1b08:	013e0300 	teqeq	lr, r0, lsl #6
    1b0c:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    1b10:	05133d06 	ldreq	r3, [r3, #-3334]	; 0xfffff2fa
    1b14:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    1b18:	05340609 	ldreq	r0, [r4, #-1545]!	; 0xfffff9f7
    1b1c:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
    1b20:	05210609 	streq	r0, [r1, #-1545]!	; 0xfffff9f7
    1b24:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    1b28:	7a03060b 	bvc	c335c <__HEAP_SIZE+0xc235c>
    1b2c:	01050520 	tsteq	r5, r0, lsr #10
    1b30:	05130905 	ldreq	r0, [r3, #-2309]	; 0xfffff6fb
    1b34:	0501060e 	streq	r0, [r1, #-1550]	; 0xfffff9f2
    1b38:	09052e0c 	stmdbeq	r5, {r2, r3, r9, sl, fp, sp}
    1b3c:	0b052106 	bleq	149f5c <__RAM_SIZE+0x49f5c>
    1b40:	17050106 	strne	r0, [r5, -r6, lsl #2]
    1b44:	01040200 	mrseq	r0, R12_usr
    1b48:	0605052e 	streq	r0, [r5], -lr, lsr #10
    1b4c:	06010534 			; <UNDEFINED> instruction: 0x06010534
    1b50:	00202013 	eoreq	r2, r0, r3, lsl r0
    1b54:	06180101 	ldreq	r0, [r8], -r1, lsl #2
    1b58:	00030000 	andeq	r0, r3, r0
    1b5c:	0000025b 	andeq	r0, r0, fp, asr r2
    1b60:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
    1b64:	0101000d 	tsteq	r1, sp
    1b68:	00000101 	andeq	r0, r0, r1, lsl #2
    1b6c:	00000100 	andeq	r0, r0, r0, lsl #2
    1b70:	2f2e2e01 	svccs	0x002e2e01
    1b74:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    1b78:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    1b7c:	69747562 	ldmdbvs	r4!, {r1, r5, r6, r8, sl, ip, sp, lr}^
    1b80:	662f736c 	strtvs	r7, [pc], -ip, ror #6
    1b84:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
    1b88:	6d75642d 	cfldrdvs	mvd6, [r5, #-180]!	; 0xffffff4c
    1b8c:	72732f70 	rsbsvc	r2, r3, #112, 30	; 0x1c0
    1b90:	2e2e0063 	cdpcs	0, 2, cr0, cr14, cr3, {3}
    1b94:	6972442f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, sl, lr}^
    1b98:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
    1b9c:	534d432f 	movtpl	r4, #54063	; 0xd32f
    1ba0:	355f5349 	ldrbcc	r5, [pc, #-841]	; 185f <__HEAP_SIZE+0x85f>
    1ba4:	534d432f 	movtpl	r4, #54063	; 0xd32f
    1ba8:	432f5349 			; <UNDEFINED> instruction: 0x432f5349
    1bac:	2f65726f 	svccs	0x0065726f
    1bb0:	6c636e49 	stclvs	14, cr6, [r3], #-292	; 0xfffffedc
    1bb4:	00656475 	rsbeq	r6, r5, r5, ror r4
    1bb8:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
    1bbc:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    1bc0:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
    1bc4:	705c6e6f 	subsvc	r6, ip, pc, ror #28
    1bc8:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
    1bcc:	615c6d61 	cmpvs	ip, r1, ror #26
    1bd0:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
    1bd4:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
    1bd8:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
    1bdc:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    1be0:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    1be4:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    1be8:	2e30312d 	rsfcssp	f3, f0, #5.0
    1bec:	30322d33 	eorscc	r2, r2, r3, lsr sp
    1bf0:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
    1bf4:	72615c30 	rsbvc	r5, r1, #48, 24	; 0x3000
    1bf8:	6f6e2d6d 	svcvs	0x006e2d6d
    1bfc:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    1c00:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
    1c04:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    1c08:	5c656475 	cfstrdpl	mvd6, [r5], #-468	; 0xfffffe2c
    1c0c:	6863616d 	stmdavs	r3!, {r0, r2, r3, r5, r6, r8, sp, lr}^
    1c10:	00656e69 	rsbeq	r6, r5, r9, ror #28
    1c14:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
    1c18:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    1c1c:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
    1c20:	705c6e6f 	subsvc	r6, ip, pc, ror #28
    1c24:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
    1c28:	615c6d61 	cmpvs	ip, r1, ror #26
    1c2c:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
    1c30:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
    1c34:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
    1c38:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    1c3c:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    1c40:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    1c44:	2e30312d 	rsfcssp	f3, f0, #5.0
    1c48:	30322d33 	eorscc	r2, r2, r3, lsr sp
    1c4c:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
    1c50:	696c5c30 	stmdbvs	ip!, {r4, r5, sl, fp, ip, lr}^
    1c54:	63675c62 	cmnvs	r7, #25088	; 0x6200
    1c58:	72615c63 	rsbvc	r5, r1, #25344	; 0x6300
    1c5c:	6f6e2d6d 	svcvs	0x006e2d6d
    1c60:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    1c64:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
    1c68:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
    1c6c:	695c312e 	ldmdbvs	ip, {r1, r2, r3, r5, r8, ip, sp}^
    1c70:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    1c74:	63006564 	movwvs	r6, #1380	; 0x564
    1c78:	73755c3a 	cmnvc	r5, #14848	; 0x3a00
    1c7c:	5c737265 	lfmpl	f7, 2, [r3], #-404	; 0xfffffe6c
    1c80:	6f646978 	svcvs	0x00646978
    1c84:	72705c6e 	rsbsvc	r5, r0, #28160	; 0x6e00
    1c88:	6172676f 	cmnvs	r2, pc, ror #14
    1c8c:	72615c6d 	rsbvc	r5, r1, #27904	; 0x6d00
    1c90:	63675f6d 	cmnvs	r7, #436	; 0x1b4
    1c94:	63675c63 	cmnvs	r7, #25344	; 0x6300
    1c98:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
    1c9c:	6f6e2d6d 	svcvs	0x006e2d6d
    1ca0:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    1ca4:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
    1ca8:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
    1cac:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
    1cb0:	30312e31 	eorscc	r2, r1, r1, lsr lr
    1cb4:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    1cb8:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    1cbc:	61652d65 	cmnvs	r5, r5, ror #26
    1cc0:	695c6962 	ldmdbvs	ip, {r1, r5, r6, r8, fp, sp, lr}^
    1cc4:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    1cc8:	735c6564 	cmpvc	ip, #100, 10	; 0x19000000
    1ccc:	2e007379 	mcrcs	3, 0, r7, cr0, cr9, {3}
    1cd0:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    1cd4:	2f2e2e2f 	svccs	0x002e2e2f
    1cd8:	7562696c 	strbvc	r6, [r2, #-2412]!	; 0xfffff694
    1cdc:	736c6974 	cmnvc	ip, #116, 18	; 0x1d0000
    1ce0:	7561662f 	strbvc	r6, [r1, #-1583]!	; 0xfffff9d1
    1ce4:	642d746c 	strtvs	r7, [sp], #-1132	; 0xfffffb94
    1ce8:	2f706d75 	svccs	0x00706d75
    1cec:	00636e69 	rsbeq	r6, r3, r9, ror #28
    1cf0:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
    1cf4:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    1cf8:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
    1cfc:	705c6e6f 	subsvc	r6, ip, pc, ror #28
    1d00:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
    1d04:	615c6d61 	cmpvs	ip, r1, ror #26
    1d08:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
    1d0c:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
    1d10:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
    1d14:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    1d18:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    1d1c:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    1d20:	2e30312d 	rsfcssp	f3, f0, #5.0
    1d24:	30322d33 	eorscc	r2, r2, r3, lsr sp
    1d28:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
    1d2c:	72615c30 	rsbvc	r5, r1, #48, 24	; 0x3000
    1d30:	6f6e2d6d 	svcvs	0x006e2d6d
    1d34:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    1d38:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
    1d3c:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    1d40:	00656475 	rsbeq	r6, r5, r5, ror r4
    1d44:	75616600 	strbvc	r6, [r1, #-1536]!	; 0xfffffa00
    1d48:	642d746c 	strtvs	r7, [sp], #-1132	; 0xfffffb94
    1d4c:	2e706d75 	mrccs	13, 3, r6, cr0, cr5, {3}
    1d50:	00010063 	andeq	r0, r1, r3, rrx
    1d54:	736d6300 	cmnvc	sp, #0, 6
    1d58:	675f7369 	ldrbvs	r7, [pc, -r9, ror #6]
    1d5c:	682e6363 	stmdavs	lr!, {r0, r1, r5, r6, r8, r9, sp, lr}
    1d60:	00000200 	andeq	r0, r0, r0, lsl #4
    1d64:	6665645f 			; <UNDEFINED> instruction: 0x6665645f
    1d68:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
    1d6c:	7079745f 	rsbsvc	r7, r9, pc, asr r4
    1d70:	682e7365 	stmdavs	lr!, {r0, r2, r5, r6, r8, r9, ip, sp, lr}
    1d74:	00000300 	andeq	r0, r0, r0, lsl #6
    1d78:	64647473 	strbtvs	r7, [r4], #-1139	; 0xfffffb8d
    1d7c:	682e6665 	stmdavs	lr!, {r0, r2, r5, r6, r9, sl, sp, lr}
    1d80:	00000400 	andeq	r0, r0, r0, lsl #8
    1d84:	6474735f 	ldrbtvs	r7, [r4], #-863	; 0xfffffca1
    1d88:	2e746e69 	cdpcs	14, 7, cr6, cr4, cr9, {3}
    1d8c:	00050068 	andeq	r0, r5, r8, rrx
    1d90:	75616600 	strbvc	r6, [r1, #-1536]!	; 0xfffffa00
    1d94:	642d746c 	strtvs	r7, [sp], #-1132	; 0xfffffb94
    1d98:	2e706d75 	mrccs	13, 3, r6, cr0, cr5, {3}
    1d9c:	00060068 	andeq	r0, r6, r8, rrx
    1da0:	64747300 	ldrbtvs	r7, [r4], #-768	; 0xfffffd00
    1da4:	682e6f69 	stmdavs	lr!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}
    1da8:	00000700 	andeq	r0, r0, r0, lsl #14
    1dac:	6975623c 	ldmdbvs	r5!, {r2, r3, r4, r5, r9, sp, lr}^
    1db0:	692d746c 	pushvs	{r2, r3, r5, r6, sl, ip, sp, lr}
    1db4:	00003e6e 	andeq	r3, r0, lr, ror #28
    1db8:	05000000 	streq	r0, [r0, #-0]
    1dbc:	02050038 	andeq	r0, r5, #56	; 0x38
    1dc0:	10001b90 	mulne	r0, r0, fp
    1dc4:	01018103 	tsteq	r1, r3, lsl #2
    1dc8:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    1dcc:	0e052106 	adfeqs	f2, f5, f6
    1dd0:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    1dd4:	05132f06 	ldreq	r2, [r3, #-3846]	; 0xfffff0fa
    1dd8:	0505010a 	streq	r0, [r5, #-266]	; 0xfffffef6
    1ddc:	09050106 	stmdbeq	r5, {r1, r2, r8}
    1de0:	03040200 	movweq	r0, #16896	; 0x4200
    1de4:	14052106 	strne	r2, [r5], #-262	; 0xfffffefa
    1de8:	03040200 	movweq	r0, #16896	; 0x4200
    1dec:	12050106 	andne	r0, r5, #-2147483647	; 0x80000001
    1df0:	03040200 	movweq	r0, #16896	; 0x4200
    1df4:	003d052e 	eorseq	r0, sp, lr, lsr #10
    1df8:	06030402 	streq	r0, [r3], -r2, lsl #8
    1dfc:	003e0557 	eorseq	r0, lr, r7, asr r5
    1e00:	06030402 	streq	r0, [r3], -r2, lsl #8
    1e04:	00150501 	andseq	r0, r5, r1, lsl #10
    1e08:	06010402 	streq	r0, [r1], -r2, lsl #8
    1e0c:	00050520 	andeq	r0, r5, r0, lsr #10
    1e10:	06010402 	streq	r0, [r1], -r2, lsl #8
    1e14:	05310601 	ldreq	r0, [r1, #-1537]!	; 0xfffff9ff
    1e18:	2f010622 	svccs	0x00010622
    1e1c:	2f060505 	svccs	0x00060505
    1e20:	13060105 	movwne	r0, #24837	; 0x6105
    1e24:	0002022e 	andeq	r0, r2, lr, lsr #4
    1e28:	33050101 	movwcc	r0, #20737	; 0x5101
    1e2c:	bc020500 	cfstr32lt	mvfx0, [r2], {-0}
    1e30:	0310001b 	tsteq	r0, #27
    1e34:	0501018c 	streq	r0, [r1, #-396]	; 0xfffffe74
    1e38:	0e051605 	cfmadd32eq	mvax0, mvfx1, mvfx5, mvfx5
    1e3c:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    1e40:	32052f06 	andcc	r2, r5, #6, 30
    1e44:	0e050106 	adfeqs	f0, f5, f6
    1e48:	06050520 	streq	r0, [r5], -r0, lsr #10
    1e4c:	0608052f 	streq	r0, [r8], -pc, lsr #10
    1e50:	00260501 	eoreq	r0, r6, r1, lsl #10
    1e54:	3c010402 	cfstrscc	mvf0, [r1], {2}
    1e58:	3f060505 	svccc	0x00060505
    1e5c:	01060805 	tsteq	r6, r5, lsl #16
    1e60:	02002605 	andeq	r2, r0, #5242880	; 0x500000
    1e64:	053c0104 	ldreq	r0, [ip, #-260]!	; 0xfffffefc
    1e68:	05203f0c 	streq	r3, [r0, #-3852]!	; 0xfffff0f4
    1e6c:	20201b10 	eorcs	r1, r0, r0, lsl fp
    1e70:	20202320 	eorcs	r2, r0, r0, lsr #6
    1e74:	02230105 	eoreq	r0, r3, #1073741825	; 0x40000001
    1e78:	01010001 	tsteq	r1, r1
    1e7c:	05007305 	streq	r7, [r0, #-773]	; 0xfffffcfb
    1e80:	001bf402 	andseq	pc, fp, r2, lsl #8
    1e84:	01f00310 	mvnseq	r0, r0, lsl r3
    1e88:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    1e8c:	132f0605 			; <UNDEFINED> instruction: 0x132f0605
    1e90:	06080513 			; <UNDEFINED> instruction: 0x06080513
    1e94:	001a0501 	andseq	r0, sl, r1, lsl #10
    1e98:	58010402 	stmdapl	r1, {r1, sl}
    1e9c:	23060505 	movwcs	r0, #25861	; 0x6505
    1ea0:	01040200 	mrseq	r0, R12_usr
    1ea4:	09052006 	stmdbeq	r5, {r1, r2, sp}
    1ea8:	00050529 	andeq	r0, r5, r9, lsr #10
    1eac:	06020402 	streq	r0, [r2], -r2, lsl #8
    1eb0:	04020036 	streq	r0, [r2], #-54	; 0xffffffca
    1eb4:	02002001 	andeq	r2, r0, #1
    1eb8:	20060304 	andcs	r0, r6, r4, lsl #6
    1ebc:	30060905 	andcc	r0, r6, r5, lsl #18
    1ec0:	01060c05 	tsteq	r6, r5, lsl #24
    1ec4:	22060905 	andcs	r0, r6, #81920	; 0x14000
    1ec8:	01061305 	tsteq	r6, r5, lsl #6
    1ecc:	05200c05 	streq	r0, [r0, #-3077]!	; 0xfffff3fb
    1ed0:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    1ed4:	26052e01 	strcs	r2, [r5], -r1, lsl #28
    1ed8:	01040200 	mrseq	r0, R12_usr
    1edc:	06090520 	streq	r0, [r9], -r0, lsr #10
    1ee0:	060c0532 			; <UNDEFINED> instruction: 0x060c0532
    1ee4:	06090501 	streq	r0, [r9], -r1, lsl #10
    1ee8:	0c051440 	cfstrseq	mvf1, [r5], {64}	; 0x40
    1eec:	09050106 	stmdbeq	r5, {r1, r2, r8}
    1ef0:	0c053006 	stceq	0, cr3, [r5], {6}
    1ef4:	09050106 	stmdbeq	r5, {r1, r2, r8}
    1ef8:	0e052406 	cdpeq	4, 0, cr2, cr5, cr6, {0}
    1efc:	09050106 	stmdbeq	r5, {r1, r2, r8}
    1f00:	0e053e06 	cdpeq	14, 0, cr3, cr5, cr6, {0}
    1f04:	0c050106 	stfeqs	f0, [r5], {6}
    1f08:	0609052e 	streq	r0, [r9], -lr, lsr #10
    1f0c:	06170532 			; <UNDEFINED> instruction: 0x06170532
    1f10:	06090501 	streq	r0, [r9], -r1, lsl #10
    1f14:	060f052f 	streq	r0, [pc], -pc, lsr #10
    1f18:	06090501 	streq	r0, [r9], -r1, lsl #10
    1f1c:	060c0521 	streq	r0, [ip], -r1, lsr #10
    1f20:	33010501 	movwcc	r0, #5377	; 0x1501
    1f24:	5a031005 	bpl	c5f40 <__HEAP_SIZE+0xc4f40>
    1f28:	583f3c3c 	ldmdapl	pc!, {r2, r3, r4, r5, sl, fp, ip, sp}	; <UNPREDICTABLE>
    1f2c:	01000602 	tsteq	r0, r2, lsl #12
    1f30:	00360501 	eorseq	r0, r6, r1, lsl #10
    1f34:	1c700205 	lfmne	f0, 2, [r0], #-20	; 0xffffffec
    1f38:	9b031000 	blls	c5f40 <__HEAP_SIZE+0xc4f40>
    1f3c:	01060101 	tsteq	r6, r1, lsl #2
    1f40:	2f060505 	svccs	0x00060505
    1f44:	30062e06 	andcc	r2, r6, r6, lsl #28
    1f48:	06010513 			; <UNDEFINED> instruction: 0x06010513
    1f4c:	0202203e 	andeq	r2, r2, #62	; 0x3e
    1f50:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    1f54:	02050036 	andeq	r0, r5, #54	; 0x36
    1f58:	10001c88 	andne	r1, r0, r8, lsl #25
    1f5c:	0101a303 	tsteq	r1, r3, lsl #6
    1f60:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    1f64:	13142106 	tstne	r4, #-2147483647	; 0x80000001
    1f68:	01060e05 	tsteq	r6, r5, lsl #28
    1f6c:	32060505 	andcc	r0, r6, #20971520	; 0x1400000
    1f70:	13060105 	movwne	r0, #24837	; 0x6105
    1f74:	01000102 	tsteq	r0, r2, lsl #2
    1f78:	001c0501 	andseq	r0, ip, r1, lsl #10
    1f7c:	1c900205 	lfmne	f0, 4, [r0], {5}
    1f80:	f6031000 			; <UNDEFINED> instruction: 0xf6031000
    1f84:	05050100 	streq	r0, [r5, #-256]	; 0xffffff00
    1f88:	061a0521 	ldreq	r0, [sl], -r1, lsr #10
    1f8c:	20180501 	andscs	r0, r8, r1, lsl #10
    1f90:	2f060505 	svccs	0x00060505
    1f94:	01061a05 	tsteq	r6, r5, lsl #20
    1f98:	05201805 	streq	r1, [r0, #-2053]!	; 0xfffff7fb
    1f9c:	4c2f0605 	stcmi	6, cr0, [pc], #-20	; 1f90 <__HEAP_SIZE+0xf90>
    1fa0:	06010568 	streq	r0, [r1], -r8, ror #10
    1fa4:	0013024c 	andseq	r0, r3, ip, asr #4
    1fa8:	43050101 	movwmi	r0, #20737	; 0x5101
    1fac:	e0020500 	and	r0, r2, r0, lsl #10
    1fb0:	0310001c 	tsteq	r0, #28
    1fb4:	060101ae 	streq	r0, [r1], -lr, lsr #3
    1fb8:	06050501 	streq	r0, [r5], -r1, lsl #10
    1fbc:	1313133d 	tstne	r3, #-201326592	; 0xf4000000
    1fc0:	06180514 			; <UNDEFINED> instruction: 0x06180514
    1fc4:	20160501 	andscs	r0, r6, r1, lsl #10
    1fc8:	2f060505 	svccs	0x00060505
    1fcc:	01061805 	tsteq	r6, r5, lsl #16
    1fd0:	05201605 	streq	r1, [r0, #-1541]!	; 0xfffff9fb
    1fd4:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
    1fd8:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    1fdc:	05052016 	streq	r2, [r5, #-22]	; 0xffffffea
    1fe0:	18052106 	stmdane	r5, {r1, r2, r8, sp}
    1fe4:	16050106 	strne	r0, [r5], -r6, lsl #2
    1fe8:	06050520 	streq	r0, [r5], -r0, lsr #10
    1fec:	06180521 	ldreq	r0, [r8], -r1, lsr #10
    1ff0:	20160501 	andscs	r0, r6, r1, lsl #10
    1ff4:	21060505 	tstcs	r6, r5, lsl #10
    1ff8:	01061805 	tsteq	r6, r5, lsl #16
    1ffc:	05201605 	streq	r1, [r0, #-1541]!	; 0xfffff9fb
    2000:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
    2004:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    2008:	05052016 	streq	r2, [r5, #-22]	; 0xffffffea
    200c:	18052106 	stmdane	r5, {r1, r2, r8, sp}
    2010:	16050106 	strne	r0, [r5], -r6, lsl #2
    2014:	06050520 	streq	r0, [r5], -r0, lsr #10
    2018:	06180521 	ldreq	r0, [r8], -r1, lsr #10
    201c:	20160501 	andscs	r0, r6, r1, lsl #10
    2020:	21060505 	tstcs	r6, r5, lsl #10
    2024:	01061805 	tsteq	r6, r5, lsl #16
    2028:	05201605 	streq	r1, [r0, #-1541]!	; 0xfffff9fb
    202c:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
    2030:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    2034:	05052016 	streq	r2, [r5, #-22]	; 0xffffffea
    2038:	18052106 	stmdane	r5, {r1, r2, r8, sp}
    203c:	16050106 	strne	r0, [r5], -r6, lsl #2
    2040:	06050520 	streq	r0, [r5], -r0, lsr #10
    2044:	06180521 	ldreq	r0, [r8], -r1, lsr #10
    2048:	20160501 	andscs	r0, r6, r1, lsl #10
    204c:	21060505 	tstcs	r6, r5, lsl #10
    2050:	01061805 	tsteq	r6, r5, lsl #16
    2054:	05201605 	streq	r1, [r0, #-1541]!	; 0xfffff9fb
    2058:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
    205c:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    2060:	05052016 	streq	r2, [r5, #-22]	; 0xffffffea
    2064:	18052106 	stmdane	r5, {r1, r2, r8, sp}
    2068:	16050106 	strne	r0, [r5], -r6, lsl #2
    206c:	06050520 	streq	r0, [r5], -r0, lsr #10
    2070:	062e0622 	strteq	r0, [lr], -r2, lsr #12
    2074:	4b3d3d2f 	blmi	f51538 <__RAM_SIZE+0xe51538>
    2078:	4b4b4b4b 	blmi	12d4dac <__RAM_SIZE+0x11d4dac>
    207c:	4b4b4b4b 	blmi	12d4db0 <__RAM_SIZE+0x11d4db0>
    2080:	4b4b4b4b 	blmi	12d4db4 <__RAM_SIZE+0x11d4db4>
    2084:	3d4b4b4b 	vstrcc	d20, [fp, #-300]	; 0xfffffed4
    2088:	0905143e 	stmdbeq	r5, {r1, r2, r3, r4, r5, sl, ip}
    208c:	08050106 	stmdaeq	r5, {r1, r2, r8}
    2090:	0609053c 			; <UNDEFINED> instruction: 0x0609053c
    2094:	06110521 	ldreq	r0, [r1], -r1, lsr #10
    2098:	06050501 	streq	r0, [r5], -r1, lsl #10
    209c:	06900903 	ldreq	r0, [r0], r3, lsl #18
    20a0:	592f0620 	stmdbpl	pc!, {r5, r9, sl}	; <UNPREDICTABLE>
    20a4:	01061005 	tsteq	r6, r5
    20a8:	05200505 	streq	r0, [r0, #-1285]!	; 0xfffffafb
    20ac:	79030609 	stmdbvc	r3, {r0, r3, r9, sl}
    20b0:	06110520 	ldreq	r0, [r1], -r0, lsr #10
    20b4:	09059001 	stmdbeq	r5, {r0, ip, pc}
    20b8:	03040200 	movweq	r0, #16896	; 0x4200
    20bc:	24052806 	strcs	r2, [r5], #-2054	; 0xfffff7fa
    20c0:	03040200 	movweq	r0, #16896	; 0x4200
    20c4:	00290565 	eoreq	r0, r9, r5, ror #10
    20c8:	06030402 	streq	r0, [r3], -r2, lsl #8
    20cc:	00150501 	andseq	r0, r5, r1, lsl #10
    20d0:	06010402 	streq	r0, [r1], -r2, lsl #8
    20d4:	00050520 	andeq	r0, r5, r0, lsr #10
    20d8:	06010402 	streq	r0, [r1], -r2, lsl #8
    20dc:	00310601 	eorseq	r0, r1, r1, lsl #12
    20e0:	3d010402 	cfstrscc	mvf0, [r1, #-8]
    20e4:	02000e05 	andeq	r0, r0, #5, 28	; 0x50
    20e8:	05010104 	streq	r0, [r1, #-260]	; 0xfffffefc
    20ec:	0402000b 	streq	r0, [r2], #-11
    20f0:	35020101 	strcc	r0, [r2, #-257]	; 0xfffffeff
    20f4:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    20f8:	0205002e 	andeq	r0, r5, #46	; 0x2e
    20fc:	10001e8c 	andne	r1, r0, ip, lsl #29
    2100:	01029c03 	tsteq	r2, r3, lsl #24
    2104:	04130505 	ldreq	r0, [r3], #-1285	; 0xfffffafb
    2108:	031f0502 	tsteq	pc, #8388608	; 0x800000
    210c:	050106c5 	streq	r0, [r1, #-1733]	; 0xfffff93b
    2110:	2f141403 	svccs	0x00141403
    2114:	01040106 	tsteq	r4, r6, lsl #2
    2118:	b7030105 	strlt	r0, [r3, -r5, lsl #2]
    211c:	01020179 	tsteq	r2, r9, ror r1
    2120:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    2124:	0205002e 	andeq	r0, r5, #46	; 0x2e
    2128:	10001e94 	mulne	r0, r4, lr
    212c:	0102a003 	tsteq	r2, r3
    2130:	05130505 	ldreq	r0, [r3, #-1285]	; 0xfffffafb
    2134:	02130601 	andseq	r0, r3, #1048576	; 0x100000
    2138:	01010004 	tsteq	r1, r4
    213c:	05003805 	streq	r3, [r0, #-2053]	; 0xfffff7fb
    2140:	00000002 	andeq	r0, r0, r2
    2144:	02a40300 	adceq	r0, r4, #0, 6
    2148:	13050501 	movwne	r0, #21761	; 0x5501
    214c:	06080513 			; <UNDEFINED> instruction: 0x06080513
    2150:	06090501 	streq	r0, [r9], -r1, lsl #10
    2154:	061d0521 	ldreq	r0, [sp], -r1, lsr #10
    2158:	06090501 	streq	r0, [r9], -r1, lsl #10
    215c:	0610052f 	ldreq	r0, [r0], -pc, lsr #10
    2160:	09052001 	stmdbeq	r5, {r0, sp}
    2164:	0605051d 			; <UNDEFINED> instruction: 0x0605051d
    2168:	06010525 	streq	r0, [r1], -r5, lsr #10
    216c:	00040213 	andeq	r0, r4, r3, lsl r2
    2170:	02cf0101 	sbceq	r0, pc, #1073741824	; 0x40000000
    2174:	00030000 	andeq	r0, r3, r0
    2178:	000001c5 	andeq	r0, r0, r5, asr #3
    217c:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
    2180:	0101000d 	tsteq	r1, sp
    2184:	00000101 	andeq	r0, r0, r1, lsl #2
    2188:	00000100 	andeq	r0, r0, r0, lsl #2
    218c:	2f2e2e01 	svccs	0x002e2e01
    2190:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    2194:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    2198:	69747562 	ldmdbvs	r4!, {r1, r5, r6, r8, sl, ip, sp, lr}^
    219c:	662f736c 	strtvs	r7, [pc], -ip, ror #6
    21a0:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
    21a4:	6d75642d 	cfldrdvs	mvd6, [r5, #-180]!	; 0xffffff4c
    21a8:	70632f70 	rsbvc	r2, r3, r0, ror pc
    21ac:	6f632f75 	svcvs	0x00632f75
    21b0:	78657472 	stmdavc	r5!, {r1, r4, r5, r6, sl, ip, sp, lr}^
    21b4:	33336d2d 	teqcc	r3, #2880	; 0xb40
    21b8:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
    21bc:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
    21c0:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
    21c4:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
    21c8:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
    21cc:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
    21d0:	5f6d7261 	svcpl	0x006d7261
    21d4:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
    21d8:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
    21dc:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    21e0:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    21e4:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    21e8:	30312d69 	eorscc	r2, r1, r9, ror #26
    21ec:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
    21f0:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
    21f4:	615c3031 	cmpvs	ip, r1, lsr r0
    21f8:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    21fc:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    2200:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    2204:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
    2208:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    220c:	63616d5c 	cmnvs	r1, #92, 26	; 0x1700
    2210:	656e6968 	strbvs	r6, [lr, #-2408]!	; 0xfffff698
    2214:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
    2218:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
    221c:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
    2220:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
    2224:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
    2228:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
    222c:	5f6d7261 	svcpl	0x006d7261
    2230:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
    2234:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
    2238:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    223c:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    2240:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    2244:	30312d69 	eorscc	r2, r1, r9, ror #26
    2248:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
    224c:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
    2250:	615c3031 	cmpvs	ip, r1, lsr r0
    2254:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    2258:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    225c:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    2260:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
    2264:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    2268:	7379735c 	cmnvc	r9, #92, 6	; 0x70000001
    226c:	2f2e2e00 	svccs	0x002e2e00
    2270:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    2274:	2f737265 	svccs	0x00737265
    2278:	49534d43 	ldmdbmi	r3, {r0, r1, r6, r8, sl, fp, lr}^
    227c:	2f355f53 	svccs	0x00355f53
    2280:	49534d43 	ldmdbmi	r3, {r0, r1, r6, r8, sl, fp, lr}^
    2284:	6f432f53 	svcvs	0x00432f53
    2288:	492f6572 	stmdbmi	pc!, {r1, r4, r5, r6, r8, sl, sp, lr}	; <UNPREDICTABLE>
    228c:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    2290:	63006564 	movwvs	r6, #1380	; 0x564
    2294:	73755c3a 	cmnvc	r5, #14848	; 0x3a00
    2298:	5c737265 	lfmpl	f7, 2, [r3], #-404	; 0xfffffe6c
    229c:	6f646978 	svcvs	0x00646978
    22a0:	72705c6e 	rsbsvc	r5, r0, #28160	; 0x6e00
    22a4:	6172676f 	cmnvs	r2, pc, ror #14
    22a8:	72615c6d 	rsbvc	r5, r1, #27904	; 0x6d00
    22ac:	63675f6d 	cmnvs	r7, #436	; 0x1b4
    22b0:	63675c63 	cmnvs	r7, #25344	; 0x6300
    22b4:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
    22b8:	6f6e2d6d 	svcvs	0x006e2d6d
    22bc:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    22c0:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
    22c4:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
    22c8:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
    22cc:	30312e31 	eorscc	r2, r1, r1, lsr lr
    22d0:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    22d4:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    22d8:	61652d65 	cmnvs	r5, r5, ror #26
    22dc:	695c6962 	ldmdbvs	ip, {r1, r5, r6, r8, fp, sp, lr}^
    22e0:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    22e4:	00006564 	andeq	r6, r0, r4, ror #10
    22e8:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
    22ec:	61682d74 	smcvs	33492	; 0x82d4
    22f0:	00632e6c 	rsbeq	r2, r3, ip, ror #28
    22f4:	5f000001 	svcpl	0x00000001
    22f8:	61666564 	cmnvs	r6, r4, ror #10
    22fc:	5f746c75 	svcpl	0x00746c75
    2300:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
    2304:	00682e73 	rsbeq	r2, r8, r3, ror lr
    2308:	5f000002 	svcpl	0x00000002
    230c:	69647473 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
    2310:	682e746e 	stmdavs	lr!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
    2314:	00000300 	andeq	r0, r0, r0, lsl #6
    2318:	65726f63 	ldrbvs	r6, [r2, #-3939]!	; 0xfffff09d
    231c:	336d635f 	cmncc	sp, #2080374785	; 0x7c000001
    2320:	00682e33 	rsbeq	r2, r8, r3, lsr lr
    2324:	73000004 	movwvc	r0, #4
    2328:	6f696474 	svcvs	0x00696474
    232c:	0500682e 	streq	r6, [r0, #-2094]	; 0xfffff7d2
    2330:	623c0000 	eorsvs	r0, ip, #0
    2334:	746c6975 	strbtvc	r6, [ip], #-2421	; 0xfffff68b
    2338:	3e6e692d 	vmulcc.f16	s13, s28, s27	; <UNPREDICTABLE>
    233c:	00000000 	andeq	r0, r0, r0
    2340:	00350500 	eorseq	r0, r5, r0, lsl #10
    2344:	1e9c0205 	cdpne	2, 9, cr0, cr12, cr5, {0}
    2348:	0e031000 	cdpeq	0, 0, cr1, cr3, cr0, {0}
    234c:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    2350:	062f0605 	strteq	r0, [pc], -r5, lsl #12
    2354:	3d2f0620 	stccc	6, cr0, [pc, #-128]!	; 22dc <__HEAP_SIZE+0x12dc>
    2358:	01060805 	tsteq	r6, r5, lsl #16
    235c:	3d060905 	vstrcc.16	s0, [r6, #-10]	; <UNPREDICTABLE>
    2360:	3d400505 	cfstr64cc	mvdx0, [r0, #-20]	; 0xffffffec
    2364:	01060805 	tsteq	r6, r5, lsl #16
    2368:	3d060905 	vstrcc.16	s0, [r6, #-10]	; <UNPREDICTABLE>
    236c:	3d400505 	cfstr64cc	mvdx0, [r0, #-20]	; 0xffffffec
    2370:	01060805 	tsteq	r6, r5, lsl #16
    2374:	3d060905 	vstrcc.16	s0, [r6, #-10]	; <UNPREDICTABLE>
    2378:	3d400505 	cfstr64cc	mvdx0, [r0, #-20]	; 0xffffffec
    237c:	01060805 	tsteq	r6, r5, lsl #16
    2380:	3d060905 	vstrcc.16	s0, [r6, #-10]	; <UNPREDICTABLE>
    2384:	3d400505 	cfstr64cc	mvdx0, [r0, #-20]	; 0xffffffec
    2388:	01060805 	tsteq	r6, r5, lsl #16
    238c:	3d060905 	vstrcc.16	s0, [r6, #-10]	; <UNPREDICTABLE>
    2390:	3d400505 	cfstr64cc	mvdx0, [r0, #-20]	; 0xffffffec
    2394:	01060805 	tsteq	r6, r5, lsl #16
    2398:	3d060905 	vstrcc.16	s0, [r6, #-10]	; <UNPREDICTABLE>
    239c:	05400505 	strbeq	r0, [r0, #-1285]	; 0xfffffafb
    23a0:	053d0601 	ldreq	r0, [sp, #-1537]!	; 0xfffff9ff
    23a4:	5f030609 	svcpl	0x00030609
    23a8:	50505020 	subspl	r5, r0, r0, lsr #32
    23ac:	2b025050 	blcs	964f4 <__HEAP_SIZE+0x954f4>
    23b0:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    23b4:	02050034 	andeq	r0, r5, #52	; 0x34
    23b8:	10001f98 	mulne	r0, r8, pc	; <UNPREDICTABLE>
    23bc:	05013703 	streq	r3, [r1, #-1795]	; 0xfffff8fd
    23c0:	08051305 	stmdaeq	r5, {r0, r2, r8, r9, ip}
    23c4:	10050106 	andne	r0, r5, r6, lsl #2
    23c8:	0522203d 	streq	r2, [r2, #-61]!	; 0xffffffc3
    23cc:	01022201 	tsteq	r2, r1, lsl #4
    23d0:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    23d4:	02050020 	andeq	r0, r5, #32
    23d8:	00000000 	andeq	r0, r0, r0
    23dc:	05013f03 	streq	r3, [r1, #-3843]	; 0xfffff0fd
    23e0:	05142105 	ldreq	r2, [r4, #-261]	; 0xfffffefb
    23e4:	0501060e 	streq	r0, [r1, #-1550]	; 0xfffff9f2
    23e8:	13590605 	cmpne	r9, #5242880	; 0x500000
    23ec:	4b060105 	blmi	182808 <__RAM_SIZE+0x82808>
    23f0:	01000602 	tsteq	r0, r2, lsl #12
    23f4:	001f0501 	andseq	r0, pc, r1, lsl #10
    23f8:	1fa80205 	svcne	0x00a80205
    23fc:	c7031000 	strgt	r1, [r3, -r0]
    2400:	05050100 	streq	r0, [r5, #-256]	; 0xffffff00
    2404:	1205132f 	andne	r1, r5, #-1140850688	; 0xbc000000
    2408:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    240c:	0e052f06 	cdpeq	15, 0, cr2, cr5, cr6, {0}
    2410:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    2414:	05135906 	ldreq	r5, [r3, #-2310]	; 0xfffff6fa
    2418:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
    241c:	0505200b 	streq	r2, [r5, #-11]
    2420:	13672106 	cmnne	r7, #-2147483647	; 0x80000001
    2424:	01060d05 	tsteq	r6, r5, lsl #26
    2428:	05200b05 	streq	r0, [r0, #-2821]!	; 0xfffff4fb
    242c:	59210605 	stmdbpl	r1!, {r0, r2, r9, sl}
    2430:	060d0513 			; <UNDEFINED> instruction: 0x060d0513
    2434:	2e0b0501 	cfsh32cs	mvfx0, mvfx11, #1
    2438:	21060505 	tstcs	r6, r5, lsl #10
    243c:	59060105 	stmdbpl	r6, {r0, r2, r8}
    2440:	01000602 	tsteq	r0, r2, lsl #12
    2444:	00039901 	andeq	r9, r3, r1, lsl #18
    2448:	8c000300 	stchi	3, cr0, [r0], {-0}
    244c:	02000001 	andeq	r0, r0, #1
    2450:	0d0efb01 	vstreq	d15, [lr, #-4]
    2454:	01010100 	mrseq	r0, (UNDEF: 17)
    2458:	00000001 	andeq	r0, r0, r1
    245c:	01000001 	tsteq	r0, r1
    2460:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    2464:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    2468:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    246c:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    2470:	6572462f 	ldrbvs	r4, [r2, #-1583]!	; 0xfffff9d1
    2474:	4f545265 	svcmi	0x00545265
    2478:	3a630053 	bcc	18c25cc <__RAM_SIZE+0x17c25cc>
    247c:	6573755c 	ldrbvs	r7, [r3, #-1372]!	; 0xfffffaa4
    2480:	785c7372 	ldmdavc	ip, {r1, r4, r5, r6, r8, r9, ip, sp, lr}^
    2484:	6e6f6469 	cdpvs	4, 6, cr6, cr15, cr9, {3}
    2488:	6f72705c 	svcvs	0x0072705c
    248c:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
    2490:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    2494:	6363675f 	cmnvs	r3, #24903680	; 0x17c0000
    2498:	6363675c 	cmnvs	r3, #92, 14	; 0x1700000
    249c:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
    24a0:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    24a4:	61652d65 	cmnvs	r5, r5, ror #26
    24a8:	312d6962 			; <UNDEFINED> instruction: 0x312d6962
    24ac:	2d332e30 	ldccs	14, cr2, [r3, #-192]!	; 0xffffff40
    24b0:	31323032 	teqcc	r2, r2, lsr r0
    24b4:	5c30312e 	ldfpls	f3, [r0], #-184	; 0xffffff48
    24b8:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    24bc:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    24c0:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    24c4:	6e695c69 	cdpvs	12, 6, cr5, cr9, cr9, {3}
    24c8:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    24cc:	616d5c65 	cmnvs	sp, r5, ror #24
    24d0:	6e696863 	cdpvs	8, 6, cr6, cr9, cr3, {3}
    24d4:	3a630065 	bcc	18c2670 <__RAM_SIZE+0x17c2670>
    24d8:	6573755c 	ldrbvs	r7, [r3, #-1372]!	; 0xfffffaa4
    24dc:	785c7372 	ldmdavc	ip, {r1, r4, r5, r6, r8, r9, ip, sp, lr}^
    24e0:	6e6f6469 	cdpvs	4, 6, cr6, cr15, cr9, {3}
    24e4:	6f72705c 	svcvs	0x0072705c
    24e8:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
    24ec:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    24f0:	6363675f 	cmnvs	r3, #24903680	; 0x17c0000
    24f4:	6363675c 	cmnvs	r3, #92, 14	; 0x1700000
    24f8:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
    24fc:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    2500:	61652d65 	cmnvs	r5, r5, ror #26
    2504:	312d6962 			; <UNDEFINED> instruction: 0x312d6962
    2508:	2d332e30 	ldccs	14, cr2, [r3, #-192]!	; 0xffffff40
    250c:	31323032 	teqcc	r2, r2, lsr r0
    2510:	5c30312e 	ldfpls	f3, [r0], #-184	; 0xffffff48
    2514:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    2518:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    251c:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    2520:	6e695c69 	cdpvs	12, 6, cr5, cr9, cr9, {3}
    2524:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    2528:	79735c65 	ldmdbvc	r3!, {r0, r2, r5, r6, sl, fp, ip, lr}^
    252c:	2e2e0073 	mcrcs	0, 1, r0, cr14, cr3, {3}
    2530:	2f2e2e2f 	svccs	0x002e2e2f
    2534:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 2484 <__HEAP_SIZE+0x1484>
    2538:	74726269 	ldrbtvc	r6, [r2], #-617	; 0xfffffd97
    253c:	462f736f 	strtmi	r7, [pc], -pc, ror #6
    2540:	52656572 	rsbpl	r6, r5, #478150656	; 0x1c800000
    2544:	2f534f54 	svccs	0x00534f54
    2548:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
    254c:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
    2550:	4343472f 	movtmi	r4, #14127	; 0x372f
    2554:	4d52412f 	ldfmie	f4, [r2, #-188]	; 0xffffff44
    2558:	334d435f 	movtcc	r4, #54111	; 0xd35f
    255c:	544e5f33 	strbpl	r5, [lr], #-3891	; 0xfffff0cd
    2560:	6f6e2f5a 	svcvs	0x006e2f5a
    2564:	65735f6e 	ldrbvs	r5, [r3, #-3950]!	; 0xfffff092
    2568:	65727563 	ldrbvs	r7, [r2, #-1379]!	; 0xfffffa9d
    256c:	2f2e2e00 	svccs	0x002e2e00
    2570:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    2574:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    2578:	6f747262 	svcvs	0x00747262
    257c:	72462f73 	subvc	r2, r6, #460	; 0x1cc
    2580:	54526565 	ldrbpl	r6, [r2], #-1381	; 0xfffffa9b
    2584:	692f534f 	stmdbvs	pc!, {r0, r1, r2, r3, r6, r8, r9, ip, lr}	; <UNPREDICTABLE>
    2588:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    258c:	00006564 	andeq	r6, r0, r4, ror #10
    2590:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
    2594:	0100632e 	tsteq	r0, lr, lsr #6
    2598:	645f0000 	ldrbvs	r0, [pc], #-0	; 25a0 <__HEAP_SIZE+0x15a0>
    259c:	75616665 	strbvc	r6, [r1, #-1637]!	; 0xfffff99b
    25a0:	745f746c 	ldrbvc	r7, [pc], #-1132	; 25a8 <__HEAP_SIZE+0x15a8>
    25a4:	73657079 	cmnvc	r5, #121	; 0x79
    25a8:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    25ac:	735f0000 	cmpvc	pc, #0
    25b0:	6e696474 	mcrvs	4, 3, r6, cr9, cr4, {3}
    25b4:	00682e74 	rsbeq	r2, r8, r4, ror lr
    25b8:	70000003 	andvc	r0, r0, r3
    25bc:	6d74726f 	lfmvs	f7, 2, [r4, #-444]!	; 0xfffffe44
    25c0:	6f726361 	svcvs	0x00726361
    25c4:	6d6d6f63 	stclvs	15, cr6, [sp, #-396]!	; 0xfffffe74
    25c8:	682e6e6f 	stmdavs	lr!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}
    25cc:	00000400 	andeq	r0, r0, r0, lsl #8
    25d0:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
    25d4:	0500682e 	streq	r6, [r0, #-2094]	; 0xfffff7d2
    25d8:	05000000 	streq	r0, [r0, #-0]
    25dc:	02050001 	andeq	r0, r5, #1
    25e0:	10001ff4 	strdne	r1, [r0], -r4
    25e4:	05013103 	streq	r3, [r1, #-259]	; 0xfffffefd
    25e8:	05051329 	streq	r1, [r5, #-809]	; 0xfffffcd7
    25ec:	06280517 			; <UNDEFINED> instruction: 0x06280517
    25f0:	2e150501 	cfmul32cs	mvfx0, mvfx5, mvfx1
    25f4:	22064b05 	andcs	r4, r6, #5120	; 0x1400
    25f8:	05160505 	ldreq	r0, [r6, #-1285]	; 0xfffffafb
    25fc:	05010621 	streq	r0, [r1, #-1569]	; 0xfffff9df
    2600:	05400605 	strbeq	r0, [r0, #-1541]	; 0xfffff9fb
    2604:	0501061d 	streq	r0, [r1, #-1565]	; 0xfffff9e3
    2608:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
    260c:	05010621 	streq	r0, [r1, #-1569]	; 0xfffff9df
    2610:	05250609 	streq	r0, [r5, #-1545]!	; 0xfffff9f7
    2614:	05010622 	streq	r0, [r1, #-1570]	; 0xfffff9de
    2618:	052f0609 	streq	r0, [pc, #-1545]!	; 2017 <__HEAP_SIZE+0x1017>
    261c:	05010626 	streq	r0, [r1, #-1574]	; 0xfffff9da
    2620:	05210650 	streq	r0, [r1, #-1616]!	; 0xfffff9b0
    2624:	1d051605 	stcne	6, cr1, [r5, #-20]	; 0xffffffec
    2628:	33050106 	movwcc	r0, #20742	; 0x5106
    262c:	05132406 	ldreq	r2, [r3, #-1030]	; 0xfffffbfa
    2630:	01051422 	tsteq	r5, r2, lsr #8
    2634:	01021306 	tsteq	r2, r6, lsl #6
    2638:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    263c:	02050001 	andeq	r0, r5, #1
    2640:	1000200e 	andne	r2, r0, lr
    2644:	0100d903 	tsteq	r0, r3, lsl #18
    2648:	05132d05 	ldreq	r2, [r3, #-3333]	; 0xfffff2fb
    264c:	19051505 	stmdbne	r5, {r0, r2, r8, sl, ip}
    2650:	3c050106 	stfccs	f0, [r5], {6}
    2654:	3d053206 	sfmcc	f3, 4, [r5, #-24]	; 0xffffffe8
    2658:	14260513 	strtne	r0, [r6], #-1299	; 0xfffffaed
    265c:	13060105 	movwne	r0, #24837	; 0x6105
    2660:	01000102 	tsteq	r0, r2, lsl #2
    2664:	00010501 	andeq	r0, r1, r1, lsl #10
    2668:	00000205 	andeq	r0, r0, r5, lsl #4
    266c:	ea030000 	b	c2674 <__HEAP_SIZE+0xc1674>
    2670:	05050100 	streq	r0, [r5, #-256]	; 0xffffff00
    2674:	06180513 			; <UNDEFINED> instruction: 0x06180513
    2678:	06370501 	ldrteq	r0, [r7], -r1, lsl #10
    267c:	17260522 	strne	r0, [r6, -r2, lsr #10]!
    2680:	05133205 	ldreq	r3, [r3, #-517]	; 0xfffffdfb
    2684:	1b051705 	blne	1482a0 <__RAM_SIZE+0x482a0>
    2688:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    268c:	28052106 	stmdacs	r5, {r1, r2, r8, sp}
    2690:	1f050106 	svcne	0x00050106
    2694:	061c0520 	ldreq	r0, [ip], -r0, lsr #10
    2698:	14050523 	strne	r0, [r5], #-1315	; 0xfffffadd
    269c:	01062105 	tsteq	r6, r5, lsl #2
    26a0:	21060505 	tstcs	r6, r5, lsl #10
    26a4:	01061905 	tsteq	r6, r5, lsl #18
    26a8:	23060505 	movwcs	r0, #25861	; 0x6505
    26ac:	01062005 	tsteq	r6, r5
    26b0:	22060505 	andcs	r0, r6, #20971520	; 0x1400000
    26b4:	01063b05 	tsteq	r6, r5, lsl #22
    26b8:	05202305 	streq	r2, [r0, #-773]!	; 0xfffffcfb
    26bc:	22062021 	andcs	r2, r6, #33	; 0x21
    26c0:	13060105 	movwne	r0, #24837	; 0x6105
    26c4:	01000102 	tsteq	r0, r2, lsl #2
    26c8:	00010501 	andeq	r0, r1, r1, lsl #10
    26cc:	20140205 	andscs	r0, r4, r5, lsl #4
    26d0:	8c031000 	stchi	0, cr1, [r3], {-0}
    26d4:	01060101 	tsteq	r6, r1, lsl #2
    26d8:	21060505 	tstcs	r6, r5, lsl #10
    26dc:	06160513 			; <UNDEFINED> instruction: 0x06160513
    26e0:	06340501 	ldrteq	r0, [r4], -r1, lsl #10
    26e4:	17260522 	strne	r0, [r6, -r2, lsr #10]!
    26e8:	05133205 	ldreq	r3, [r3, #-517]	; 0xfffffdfb
    26ec:	010a0305 	tsteq	sl, r5, lsl #6
    26f0:	01060705 	tsteq	r6, r5, lsl #14
    26f4:	03060905 	movweq	r0, #26885	; 0x6905
    26f8:	19053c1f 	stmdbne	r5, {r0, r1, r2, r3, r4, sl, fp, ip, sp}
    26fc:	43050106 	movwmi	r0, #20742	; 0x5106
    2700:	01040200 	mrseq	r0, R12_usr
    2704:	4d052e06 	stcmi	14, cr2, [r5, #-24]	; 0xffffffe8
    2708:	01040200 	mrseq	r0, R12_usr
    270c:	55052006 	strpl	r2, [r5, #-6]
    2710:	01040200 	mrseq	r0, R12_usr
    2714:	00090520 	andeq	r0, r9, r0, lsr #10
    2718:	20010402 	andcs	r0, r1, r2, lsl #8
    271c:	35060505 	strcc	r0, [r6, #-1285]	; 0xfffffafb
    2720:	01062705 	tsteq	r6, r5, lsl #14
    2724:	05201b05 	streq	r1, [r0, #-2821]!	; 0xfffff4fb
    2728:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
    272c:	05010627 	streq	r0, [r1, #-1575]	; 0xfffff9d9
    2730:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
    2734:	0501061f 	streq	r0, [r1, #-1567]	; 0xfffff9e1
    2738:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
    273c:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    2740:	05240605 	streq	r0, [r4, #-1541]!	; 0xfffff9fb
    2744:	05010620 	streq	r0, [r1, #-1568]	; 0xfffff9e0
    2748:	05220605 	streq	r0, [r2, #-1541]!	; 0xfffff9fb
    274c:	0501063b 	streq	r0, [r1, #-1595]	; 0xfffff9c5
    2750:	21052023 	tstcs	r5, r3, lsr #32
    2754:	061e0520 	ldreq	r0, [lr], -r0, lsr #10
    2758:	06010522 	streq	r0, [r1], -r2, lsr #10
    275c:	09052013 	stmdbeq	r5, {r0, r1, r4, sp}
    2760:	20500306 	subscs	r0, r0, r6, lsl #6
    2764:	01061405 	tsteq	r6, r5, lsl #8
    2768:	00010220 	andeq	r0, r1, r0, lsr #4
    276c:	01050101 	tsteq	r5, r1, lsl #2
    2770:	46020500 	strmi	r0, [r2], -r0, lsl #10
    2774:	03100020 	tsteq	r0, #32
    2778:	050101d7 	streq	r0, [r1, #-471]	; 0xfffffe29
    277c:	14051505 	strne	r1, [r5], #-1285	; 0xfffffafb
    2780:	2e050106 	adfcss	f0, f5, f6
    2784:	05052206 	streq	r2, [r5, #-518]	; 0xfffffdfa
    2788:	06130514 			; <UNDEFINED> instruction: 0x06130514
    278c:	20380501 	eorscs	r0, r8, r1, lsl #10
    2790:	05202805 	streq	r2, [r0, #-2053]!	; 0xfffff7fb
    2794:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
    2798:	05010638 	streq	r0, [r1, #-1592]	; 0xfffff9c8
    279c:	1c052028 	stcne	0, cr2, [r5], {40}	; 0x28
    27a0:	05052306 	streq	r2, [r5, #-774]	; 0xfffffcfa
    27a4:	060f0515 			; <UNDEFINED> instruction: 0x060f0515
    27a8:	20070501 	andcs	r0, r7, r1, lsl #10
    27ac:	34062105 	strcc	r2, [r6], #-261	; 0xfffffefb
    27b0:	05150505 	ldreq	r0, [r5, #-1285]	; 0xfffffafb
    27b4:	05010621 	streq	r0, [r1, #-1569]	; 0xfffff9df
    27b8:	052f0605 	streq	r0, [pc, #-1541]!	; 21bb <__HEAP_SIZE+0x11bb>
    27bc:	0501063b 	streq	r0, [r1, #-1595]	; 0xfffff9c5
    27c0:	21052023 	tstcs	r5, r3, lsr #32
    27c4:	06380520 	ldrteq	r0, [r8], -r0, lsr #10
    27c8:	14050522 	strne	r0, [r5], #-1314	; 0xfffffade
    27cc:	13060105 	movwne	r0, #24837	; 0x6105
    27d0:	03060905 	movweq	r0, #26885	; 0x6905
    27d4:	29052073 	stmdbcs	r5, {r0, r1, r4, r5, r6, sp}
    27d8:	19050106 	stmdbne	r5, {r1, r2, r8}
    27dc:	00020220 	andeq	r0, r2, r0, lsr #4
    27e0:	17230101 	strne	r0, [r3, -r1, lsl #2]!
    27e4:	00030000 	andeq	r0, r3, r0
    27e8:	0000023b 	andeq	r0, r0, fp, lsr r2
    27ec:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
    27f0:	0101000d 	tsteq	r1, sp
    27f4:	00000101 	andeq	r0, r0, r1, lsl #2
    27f8:	00000100 	andeq	r0, r0, r0, lsl #2
    27fc:	2f2e2e01 	svccs	0x002e2e01
    2800:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    2804:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    2808:	6f747262 	svcvs	0x00747262
    280c:	72462f73 	subvc	r2, r6, #460	; 0x1cc
    2810:	54526565 	ldrbpl	r6, [r2], #-1381	; 0xfffffa9b
    2814:	6300534f 	movwvs	r5, #847	; 0x34f
    2818:	73755c3a 	cmnvc	r5, #14848	; 0x3a00
    281c:	5c737265 	lfmpl	f7, 2, [r3], #-404	; 0xfffffe6c
    2820:	6f646978 	svcvs	0x00646978
    2824:	72705c6e 	rsbsvc	r5, r0, #28160	; 0x6e00
    2828:	6172676f 	cmnvs	r2, pc, ror #14
    282c:	72615c6d 	rsbvc	r5, r1, #27904	; 0x6d00
    2830:	63675f6d 	cmnvs	r7, #436	; 0x1b4
    2834:	63675c63 	cmnvs	r7, #25344	; 0x6300
    2838:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
    283c:	6f6e2d6d 	svcvs	0x006e2d6d
    2840:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    2844:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
    2848:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
    284c:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
    2850:	30312e31 	eorscc	r2, r1, r1, lsr lr
    2854:	62696c5c 	rsbvs	r6, r9, #92, 24	; 0x5c00
    2858:	6363675c 	cmnvs	r3, #92, 14	; 0x1700000
    285c:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    2860:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    2864:	61652d65 	cmnvs	r5, r5, ror #26
    2868:	315c6962 	cmpcc	ip, r2, ror #18
    286c:	2e332e30 	mrccs	14, 1, r2, cr3, cr0, {1}
    2870:	6e695c31 	mcrvs	12, 3, r5, cr9, cr1, {1}
    2874:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    2878:	3a630065 	bcc	18c2a14 <__RAM_SIZE+0x17c2a14>
    287c:	6573755c 	ldrbvs	r7, [r3, #-1372]!	; 0xfffffaa4
    2880:	785c7372 	ldmdavc	ip, {r1, r4, r5, r6, r8, r9, ip, sp, lr}^
    2884:	6e6f6469 	cdpvs	4, 6, cr6, cr15, cr9, {3}
    2888:	6f72705c 	svcvs	0x0072705c
    288c:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
    2890:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    2894:	6363675f 	cmnvs	r3, #24903680	; 0x17c0000
    2898:	6363675c 	cmnvs	r3, #92, 14	; 0x1700000
    289c:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
    28a0:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    28a4:	61652d65 	cmnvs	r5, r5, ror #26
    28a8:	312d6962 			; <UNDEFINED> instruction: 0x312d6962
    28ac:	2d332e30 	ldccs	14, cr2, [r3, #-192]!	; 0xffffff40
    28b0:	31323032 	teqcc	r2, r2, lsr r0
    28b4:	5c30312e 	ldfpls	f3, [r0], #-184	; 0xffffff48
    28b8:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    28bc:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    28c0:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    28c4:	6e695c69 	cdpvs	12, 6, cr5, cr9, cr9, {3}
    28c8:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    28cc:	616d5c65 	cmnvs	sp, r5, ror #24
    28d0:	6e696863 	cdpvs	8, 6, cr6, cr9, cr3, {3}
    28d4:	3a630065 	bcc	18c2a70 <__RAM_SIZE+0x17c2a70>
    28d8:	6573755c 	ldrbvs	r7, [r3, #-1372]!	; 0xfffffaa4
    28dc:	785c7372 	ldmdavc	ip, {r1, r4, r5, r6, r8, r9, ip, sp, lr}^
    28e0:	6e6f6469 	cdpvs	4, 6, cr6, cr15, cr9, {3}
    28e4:	6f72705c 	svcvs	0x0072705c
    28e8:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
    28ec:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    28f0:	6363675f 	cmnvs	r3, #24903680	; 0x17c0000
    28f4:	6363675c 	cmnvs	r3, #92, 14	; 0x1700000
    28f8:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
    28fc:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    2900:	61652d65 	cmnvs	r5, r5, ror #26
    2904:	312d6962 			; <UNDEFINED> instruction: 0x312d6962
    2908:	2d332e30 	ldccs	14, cr2, [r3, #-192]!	; 0xffffff40
    290c:	31323032 	teqcc	r2, r2, lsr r0
    2910:	5c30312e 	ldfpls	f3, [r0], #-184	; 0xffffff48
    2914:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    2918:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    291c:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    2920:	6e695c69 	cdpvs	12, 6, cr5, cr9, cr9, {3}
    2924:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    2928:	79735c65 	ldmdbvc	r3!, {r0, r2, r5, r6, sl, fp, ip, lr}^
    292c:	2e2e0073 	mcrcs	0, 1, r0, cr14, cr3, {3}
    2930:	2f2e2e2f 	svccs	0x002e2e2f
    2934:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 2884 <__HEAP_SIZE+0x1884>
    2938:	74726269 	ldrbtvc	r6, [r2], #-617	; 0xfffffd97
    293c:	462f736f 	strtmi	r7, [pc], -pc, ror #6
    2940:	52656572 	rsbpl	r6, r5, #478150656	; 0x1c800000
    2944:	2f534f54 	svccs	0x00534f54
    2948:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
    294c:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
    2950:	4343472f 	movtmi	r4, #14127	; 0x372f
    2954:	4d52412f 	ldfmie	f4, [r2, #-188]	; 0xffffff44
    2958:	334d435f 	movtcc	r4, #54111	; 0xd35f
    295c:	544e5f33 	strbpl	r5, [lr], #-3891	; 0xfffff0cd
    2960:	6f6e2f5a 	svcvs	0x006e2f5a
    2964:	65735f6e 	ldrbvs	r5, [r3, #-3950]!	; 0xfffff092
    2968:	65727563 	ldrbvs	r7, [r2, #-1379]!	; 0xfffffa9d
    296c:	2f2e2e00 	svccs	0x002e2e00
    2970:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    2974:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    2978:	6f747262 	svcvs	0x00747262
    297c:	72462f73 	subvc	r2, r6, #460	; 0x1cc
    2980:	54526565 	ldrbpl	r6, [r2], #-1381	; 0xfffffa9b
    2984:	692f534f 	stmdbvs	pc!, {r0, r1, r2, r3, r6, r8, r9, ip, lr}	; <UNPREDICTABLE>
    2988:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    298c:	00006564 	andeq	r6, r0, r4, ror #10
    2990:	75657571 	strbvc	r7, [r5, #-1393]!	; 0xfffffa8f
    2994:	00632e65 	rsbeq	r2, r3, r5, ror #28
    2998:	73000001 	movwvc	r0, #1
    299c:	65646474 	strbvs	r6, [r4, #-1140]!	; 0xfffffb8c
    29a0:	00682e66 	rsbeq	r2, r8, r6, ror #28
    29a4:	5f000002 	svcpl	0x00000002
    29a8:	61666564 	cmnvs	r6, r4, ror #10
    29ac:	5f746c75 	svcpl	0x00746c75
    29b0:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
    29b4:	00682e73 	rsbeq	r2, r8, r3, ror lr
    29b8:	5f000003 	svcpl	0x00000003
    29bc:	69647473 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
    29c0:	682e746e 	stmdavs	lr!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
    29c4:	00000400 	andeq	r0, r0, r0, lsl #8
    29c8:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
    29cc:	7263616d 	rsbvc	r6, r3, #1073741851	; 0x4000001b
    29d0:	6d6f636f 	stclvs	3, cr6, [pc, #-444]!	; 281c <__HEAP_SIZE+0x181c>
    29d4:	2e6e6f6d 	cdpcs	15, 6, cr6, cr14, cr13, {3}
    29d8:	00050068 	andeq	r0, r5, r8, rrx
    29dc:	65724600 	ldrbvs	r4, [r2, #-1536]!	; 0xfffffa00
    29e0:	4f545265 	svcmi	0x00545265
    29e4:	00682e53 	rsbeq	r2, r8, r3, asr lr
    29e8:	6c000006 	stcvs	0, cr0, [r0], {6}
    29ec:	2e747369 	cdpcs	3, 7, cr7, cr4, cr9, {3}
    29f0:	00060068 	andeq	r0, r6, r8, rrx
    29f4:	73617400 	cmnvc	r1, #0, 8
    29f8:	00682e6b 	rsbeq	r2, r8, fp, ror #28
    29fc:	71000006 	tstvc	r0, r6
    2a00:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
    2a04:	0600682e 	streq	r6, [r0], -lr, lsr #16
    2a08:	6f700000 	svcvs	0x00700000
    2a0c:	62617472 	rsbvs	r7, r1, #1912602624	; 0x72000000
    2a10:	682e656c 	stmdavs	lr!, {r2, r3, r5, r6, r8, sl, sp, lr}
    2a14:	00000600 	andeq	r0, r0, r0, lsl #12
    2a18:	6975623c 	ldmdbvs	r5!, {r2, r3, r4, r5, r9, sp, lr}^
    2a1c:	692d746c 	pushvs	{r2, r3, r5, r6, sl, ip, sp, lr}
    2a20:	00003e6e 	andeq	r3, r0, lr, ror #28
    2a24:	05000000 	streq	r0, [r0, #-0]
    2a28:	02050005 	andeq	r0, r5, #5
    2a2c:	00000000 	andeq	r0, r0, r0
    2a30:	0112bd03 	tsteq	r2, r3, lsl #26
    2a34:	09050106 	stmdbeq	r5, {r1, r2, r8}
    2a38:	051a2106 	ldreq	r2, [sl, #-262]	; 0xfffffefa
    2a3c:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
    2a40:	0d05200b 	stceq	0, cr2, [r5, #-44]	; 0xffffffd4
    2a44:	78052206 	stmdavc	r5, {r1, r2, r9, sp}
    2a48:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    2a4c:	0905202d 	stmdbeq	r5, {r0, r2, r3, r5, sp}
    2a50:	05053506 	streq	r3, [r5, #-1286]	; 0xfffffafa
    2a54:	01021306 	tsteq	r2, r6, lsl #6
    2a58:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    2a5c:	02050001 	andeq	r0, r5, #1
    2a60:	00000000 	andeq	r0, r0, r0
    2a64:	0114e303 	tsteq	r4, r3, lsl #6
    2a68:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    2a6c:	05142f06 	ldreq	r2, [r4, #-3846]	; 0xfffff0fa
    2a70:	14053009 	strne	r3, [r5], #-9
    2a74:	32050106 	andcc	r0, r5, #-2147483647	; 0x80000001
    2a78:	200b0520 	andcs	r0, fp, r0, lsr #10
    2a7c:	05341505 	ldreq	r1, [r4, #-1285]!	; 0xfffffafb
    2a80:	30230605 	eorcc	r0, r3, r5, lsl #12
    2a84:	13060105 	movwne	r0, #24837	; 0x6105
    2a88:	76031505 	strvc	r1, [r3], -r5, lsl #10
    2a8c:	0102202e 	tsteq	r2, lr, lsr #32
    2a90:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    2a94:	02050001 	andeq	r0, r5, #1
    2a98:	1000206a 	andne	r2, r0, sl, rrx
    2a9c:	0114b603 	tsteq	r4, r3, lsl #12
    2aa0:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    2aa4:	05142f06 	ldreq	r2, [r4, #-3846]	; 0xfffff0fa
    2aa8:	14053009 	strne	r3, [r5], #-9
    2aac:	0b050106 	bleq	142ecc <__RAM_SIZE+0x42ecc>
    2ab0:	22150520 	andscs	r0, r5, #32, 10	; 0x8000000
    2ab4:	27060505 	strcs	r0, [r6, -r5, lsl #10]
    2ab8:	06010530 			; <UNDEFINED> instruction: 0x06010530
    2abc:	03150513 	tsteq	r5, #79691776	; 0x4c00000
    2ac0:	02202e7a 	eoreq	r2, r0, #1952	; 0x7a0
    2ac4:	01010001 	tsteq	r1, r1
    2ac8:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    2acc:	00208402 	eoreq	r8, r0, r2, lsl #8
    2ad0:	12d80310 	sbcsne	r0, r8, #16, 6	; 0x40000000
    2ad4:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    2ad8:	133d0605 	teqne	sp, #5242880	; 0x500000
    2adc:	06170516 			; <UNDEFINED> instruction: 0x06170516
    2ae0:	06050501 	streq	r0, [r5], -r1, lsl #10
    2ae4:	06100522 	ldreq	r0, [r0], -r2, lsr #10
    2ae8:	20070501 	andcs	r0, r7, r1, lsl #10
    2aec:	24060d05 	strcs	r0, [r6], #-3333	; 0xfffff2fb
    2af0:	01061805 	tsteq	r6, r5, lsl #16
    2af4:	05200f05 	streq	r0, [r0, #-3845]!	; 0xfffff0fb
    2af8:	20750310 	rsbscs	r0, r5, r0, lsl r3
    2afc:	03062505 	movweq	r2, #25861	; 0x6505
    2b00:	052000c5 	streq	r0, [r0, #-197]!	; 0xffffff3b
    2b04:	22051605 	andcs	r1, r5, #5242880	; 0x500000
    2b08:	20050106 	andcs	r0, r5, r6, lsl #2
    2b0c:	06050520 	streq	r0, [r5], -r0, lsr #10
    2b10:	06010522 	streq	r0, [r1], -r2, lsr #10
    2b14:	06110513 			; <UNDEFINED> instruction: 0x06110513
    2b18:	05204203 	streq	r4, [r0, #-515]!	; 0xfffffdfd
    2b1c:	2001061b 	andcs	r0, r1, fp, lsl r6
    2b20:	2f061105 	svccs	0x00061105
    2b24:	01063405 	tsteq	r6, r5, lsl #8
    2b28:	03060a05 	movweq	r0, #27141	; 0x6a05
    2b2c:	0c053c09 	stceq	12, cr3, [r5], {9}
    2b30:	09050106 	stmdbeq	r5, {r1, r2, r8}
    2b34:	12052206 	andne	r2, r5, #1610612736	; 0x60000000
    2b38:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    2b3c:	052f0609 	streq	r0, [pc, #-1545]!	; 253b <__HEAP_SIZE+0x153b>
    2b40:	05010626 	streq	r0, [r1, #-1574]	; 0xfffff9da
    2b44:	0905201c 	stmdbeq	r5, {r2, r3, r4, sp}
    2b48:	34053e06 	strcc	r3, [r5], #-3590	; 0xfffff1fa
    2b4c:	0b050106 	bleq	142f6c <__RAM_SIZE+0x42f6c>
    2b50:	060d0520 	streq	r0, [sp], -r0, lsr #10
    2b54:	06290530 			; <UNDEFINED> instruction: 0x06290530
    2b58:	20200501 	eorcs	r0, r0, r1, lsl #10
    2b5c:	61031005 	tstvs	r3, r5
    2b60:	06090520 	streq	r0, [r9], -r0, lsr #10
    2b64:	052e2803 	streq	r2, [lr, #-2051]!	; 0xfffff7fd
    2b68:	20010612 	andcs	r0, r1, r2, lsl r6
    2b6c:	2f060905 	svccs	0x00060905
    2b70:	01063005 	tsteq	r6, r5
    2b74:	05202605 	streq	r2, [r0, #-1541]!	; 0xfffff9fb
    2b78:	054c0609 	strbeq	r0, [ip, #-1545]	; 0xfffff9f7
    2b7c:	05010633 	streq	r0, [r1, #-1587]	; 0xfffff9cd
    2b80:	0d05200b 	stceq	0, cr2, [r5, #-44]	; 0xffffffd4
    2b84:	3f053006 	svccc	0x00053006
    2b88:	47050106 	strmi	r0, [r5, -r6, lsl #2]
    2b8c:	202a0520 	eorcs	r0, sl, r0, lsr #10
    2b90:	24062505 	strcs	r2, [r6], #-1285	; 0xfffffafb
    2b94:	05150905 	ldreq	r0, [r5, #-2309]	; 0xfffff6fb
    2b98:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
    2b9c:	2e4c0310 	mcrcs	3, 2, r0, cr12, cr0, {0}
    2ba0:	03060d05 	movweq	r0, #27909	; 0x6d05
    2ba4:	0f052e36 	svceq	0x00052e36
    2ba8:	11050106 	tstne	r5, r6, lsl #2
    2bac:	10052606 	andne	r2, r5, r6, lsl #12
    2bb0:	20440306 	subcs	r0, r4, r6, lsl #6
    2bb4:	02022e2e 	andeq	r2, r2, #736	; 0x2e0
    2bb8:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    2bbc:	02050001 	andeq	r0, r5, #1
    2bc0:	100020fa 	strdne	r2, [r0], -sl
    2bc4:	0113aa03 	tsteq	r3, r3, lsl #20
    2bc8:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    2bcc:	10052106 	andne	r2, r5, r6, lsl #2
    2bd0:	07050106 	streq	r0, [r5, -r6, lsl #2]
    2bd4:	1f010520 	svcne	0x00010520
    2bd8:	31060905 	tstcc	r6, r5, lsl #18
    2bdc:	01062605 	tsteq	r6, r5, lsl #12
    2be0:	06090520 	streq	r0, [r9], -r0, lsr #10
    2be4:	060b0530 			; <UNDEFINED> instruction: 0x060b0530
    2be8:	060d0501 	streq	r0, [sp], -r1, lsl #10
    2bec:	0633053e 			; <UNDEFINED> instruction: 0x0633053e
    2bf0:	202a0501 	eorcs	r0, sl, r1, lsl #10
    2bf4:	24062505 	strcs	r2, [r6], #-1285	; 0xfffffafb
    2bf8:	05150905 	ldreq	r0, [r5, #-2309]	; 0xfffff6fb
    2bfc:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
    2c00:	02203e01 	eoreq	r3, r0, #1, 28
    2c04:	01010001 	tsteq	r1, r1
    2c08:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    2c0c:	00211e02 	eoreq	r1, r1, r2, lsl #28
    2c10:	19ee0310 	stmibne	lr!, {r4, r8, r9}^
    2c14:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    2c18:	053d0609 	ldreq	r0, [sp, #-1545]!	; 0xfffff9f7
    2c1c:	05010613 	streq	r0, [r1, #-1555]	; 0xfffff9ed
    2c20:	05210609 	streq	r0, [r1, #-1545]!	; 0xfffff9f7
    2c24:	5f05192c 	svcpl	0x0005192c
    2c28:	14090513 	strne	r0, [r9], #-1299	; 0xfffffaed
    2c2c:	01062005 	tsteq	r6, r5
    2c30:	05204905 	streq	r4, [r0, #-2309]!	; 0xfffff6fb
    2c34:	1405200b 	strne	r2, [r5], #-11
    2c38:	052e7603 	streq	r7, [lr, #-1539]!	; 0xfffff9fd
    2c3c:	20310305 	eorscs	r0, r1, r5, lsl #6
    2c40:	03060d05 	movweq	r0, #27909	; 0x6d05
    2c44:	1a053c5b 	bne	151db8 <__RAM_SIZE+0x51db8>
    2c48:	37050106 	strcc	r0, [r5, -r6, lsl #2]
    2c4c:	0d053e06 	stceq	14, cr3, [r5, #-24]	; 0xffffffe8
    2c50:	06170515 			; <UNDEFINED> instruction: 0x06170515
    2c54:	052e3c01 	streq	r3, [lr, #-3073]!	; 0xfffff3ff
    2c58:	0522060d 	streq	r0, [r2, #-1549]!	; 0xfffff9f3
    2c5c:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    2c60:	053e0611 	ldreq	r0, [lr, #-1553]!	; 0xfffff9ef
    2c64:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    2c68:	15052013 	strne	r2, [r5, #-19]	; 0xffffffed
    2c6c:	19053006 	stmdbne	r5, {r1, r2, ip, sp}
    2c70:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
    2c74:	21052e17 	tstcs	r5, r7, lsl lr
    2c78:	25052031 	strcs	r2, [r5, #-49]	; 0xffffffcf
    2c7c:	01130306 	tsteq	r3, r6, lsl #6
    2c80:	05150905 	ldreq	r0, [r5, #-2309]	; 0xfffff6fb
    2c84:	05010610 	streq	r0, [r1, #-1552]	; 0xfffff9f0
    2c88:	04020011 	streq	r0, [r2], #-17	; 0xffffffef
    2c8c:	78030602 	stmdavc	r3, {r1, r9, sl}
    2c90:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    2c94:	02000102 	andeq	r0, r0, #-2147483648	; 0x80000000
    2c98:	002e0204 	eoreq	r0, lr, r4, lsl #4
    2c9c:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    2ca0:	01040200 	mrseq	r0, R12_usr
    2ca4:	04020001 	streq	r0, [r2], #-1
    2ca8:	00200601 	eoreq	r0, r0, r1, lsl #12
    2cac:	20010402 	andcs	r0, r1, r2, lsl #8
    2cb0:	01000302 	tsteq	r0, r2, lsl #6
    2cb4:	00010501 	andeq	r0, r1, r1, lsl #10
    2cb8:	21760205 	cmncs	r6, r5, lsl #4
    2cbc:	be031000 	cdplt	0, 0, cr1, cr3, cr0, {0}
    2cc0:	01060113 	tsteq	r6, r3, lsl r1
    2cc4:	35060505 	strcc	r0, [r6, #-1285]	; 0xfffffafb
    2cc8:	05300905 	ldreq	r0, [r0, #-2309]!	; 0xfffff6fb
    2ccc:	05010610 	streq	r0, [r1, #-1552]	; 0xfffff9f0
    2cd0:	053f0609 	ldreq	r0, [pc, #-1545]!	; 26cf <__HEAP_SIZE+0x16cf>
    2cd4:	0501060e 	streq	r0, [r1, #-1550]	; 0xfffff9f2
    2cd8:	19030615 	stmdbne	r3, {r0, r2, r4, r9, sl}
    2cdc:	06190520 	ldreq	r0, [r9], -r0, lsr #10
    2ce0:	20170501 	andscs	r0, r7, r1, lsl #10
    2ce4:	22061905 	andcs	r1, r6, #81920	; 0x14000
    2ce8:	01061d05 	tsteq	r6, r5, lsl #26
    2cec:	054a1b05 	strbeq	r1, [sl, #-2821]	; 0xfffff4fb
    2cf0:	05280635 	streq	r0, [r8, #-1589]!	; 0xfffff9cb
    2cf4:	0121030d 			; <UNDEFINED> instruction: 0x0121030d
    2cf8:	0e052006 	cdpeq	0, 0, cr2, cr5, cr6, {0}
    2cfc:	7fbc0306 	svcvc	0x00bc0306
    2d00:	34110520 	ldrcc	r0, [r1], #-1312	; 0xfffffae0
    2d04:	01061c05 	tsteq	r6, r5, lsl #24
    2d08:	05201305 	streq	r1, [r0, #-773]!	; 0xfffffcfb
    2d0c:	05300615 	ldreq	r0, [r0, #-1557]!	; 0xfffff9eb
    2d10:	05010619 	streq	r0, [r1, #-1561]	; 0xfffff9e7
    2d14:	19053c17 	stmdbne	r5, {r0, r1, r2, r4, sl, fp, ip, sp}
    2d18:	1d053306 	stcne	3, cr3, [r5, #-24]	; 0xffffffe8
    2d1c:	053c1203 	ldreq	r1, [ip, #-515]!	; 0xfffffdfd
    2d20:	3c280309 	stccc	3, cr0, [r8], #-36	; 0xffffffdc
    2d24:	01061a05 	tsteq	r6, r5, lsl #20
    2d28:	3e060505 	cfsh32cc	mvfx0, mvfx6, #5
    2d2c:	30090531 	andcc	r0, r9, r1, lsr r5
    2d30:	01061005 	tsteq	r6, r5
    2d34:	0609052e 	streq	r0, [r9], -lr, lsr #10
    2d38:	060e0522 	streq	r0, [lr], -r2, lsr #10
    2d3c:	062d0501 	strteq	r0, [sp], -r1, lsl #10
    2d40:	05200a03 	streq	r0, [r0, #-2563]!	; 0xfffff5fd
    2d44:	20061511 	andcs	r1, r6, r1, lsl r5
    2d48:	03060e05 	movweq	r0, #28165	; 0x6e05
    2d4c:	0d052073 	stceq	0, cr2, [r5, #-460]	; 0xfffffe34
    2d50:	06110530 			; <UNDEFINED> instruction: 0x06110530
    2d54:	200f0501 	andcs	r0, pc, r1, lsl #10
    2d58:	22061105 	andcs	r1, r6, #1073741825	; 0x40000001
    2d5c:	01061505 	tsteq	r6, r5, lsl #10
    2d60:	054a1305 	strbeq	r1, [sl, #-773]	; 0xfffffcfb
    2d64:	05300615 	ldreq	r0, [r0, #-1557]!	; 0xfffff9eb
    2d68:	3c0f0309 	stccc	3, cr0, [pc], {9}
    2d6c:	01061a05 	tsteq	r6, r5, lsl #20
    2d70:	3e060505 	cfsh32cc	mvfx0, mvfx6, #5
    2d74:	2f060105 	svccs	0x00060105
    2d78:	01010020 	tsteq	r1, r0, lsr #32
    2d7c:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    2d80:	0021f802 	eoreq	pc, r1, r2, lsl #16
    2d84:	02b00310 	adcseq	r0, r0, #16, 6	; 0x40000000
    2d88:	13050501 	movwne	r0, #21761	; 0x5501
    2d8c:	14370513 	ldrtne	r0, [r7], #-1299	; 0xfffffaed
    2d90:	05141c05 	ldreq	r1, [r4, #-3077]	; 0xfffff3fb
    2d94:	07051405 	streq	r1, [r5, -r5, lsl #8]
    2d98:	01050106 	tsteq	r5, r6, lsl #2
    2d9c:	01040200 	mrseq	r0, R12_usr
    2da0:	052e7803 	streq	r7, [lr, #-2051]!	; 0xfffff7fd
    2da4:	04020012 	streq	r0, [r2], #-18	; 0xffffffee
    2da8:	3c090301 	stccc	3, cr0, [r9], {1}
    2dac:	02001d05 	andeq	r1, r0, #320	; 0x140
    2db0:	051f0104 	ldreq	r0, [pc, #-260]	; 2cb4 <__HEAP_SIZE+0x1cb4>
    2db4:	2c053136 	stfcss	f3, [r5], {54}	; 0x36
    2db8:	25052020 	strcs	r2, [r5, #-32]	; 0xffffffe0
    2dbc:	0311053a 	tsteq	r1, #243269632	; 0xe800000
    2dc0:	2605202f 	strcs	r2, [r5], -pc, lsr #32
    2dc4:	2e052306 	cdpcs	3, 0, cr2, cr5, cr6, {0}
    2dc8:	14050516 	strne	r0, [r5], #-1302	; 0xfffffaea
    2dcc:	01060c05 	tsteq	r6, r5, lsl #24
    2dd0:	4a032c05 	bmi	cddec <__HEAP_SIZE+0xccdec>
    2dd4:	06090520 	streq	r0, [r9], -r0, lsr #10
    2dd8:	300d0530 	andcc	r0, sp, r0, lsr r5
    2ddc:	01062f05 	tsteq	r6, r5, lsl #30
    2de0:	05204305 	streq	r4, [r0, #-773]!	; 0xfffffcfb
    2de4:	38052057 	stmdacc	r5, {r0, r1, r2, r4, r6, sp}
    2de8:	2e260520 	cfsh64cs	mvdx0, mvdx6, #16
    2dec:	21060d05 	tstcs	r6, r5, lsl #26
    2df0:	01062805 	tsteq	r6, r5, lsl #16
    2df4:	2f060d05 	svccs	0x00060d05
    2df8:	01062005 	tsteq	r6, r5
    2dfc:	21060d05 	tstcs	r6, r5, lsl #26
    2e00:	01065405 	tsteq	r6, r5, lsl #8
    2e04:	05203c05 	streq	r3, [r0, #-3077]!	; 0xfffff3fb
    2e08:	0d052e2a 	stceq	14, cr2, [r5, #-168]	; 0xffffff58
    2e0c:	1e052106 	adfnes	f2, f5, f6
    2e10:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    2e14:	1e053d06 	cdpne	13, 0, cr3, cr5, cr6, {0}
    2e18:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    2e1c:	0f053006 	svceq	0x00053006
    2e20:	11050106 	tstne	r5, r6, lsl #2
    2e24:	15052706 	strne	r2, [r5, #-1798]	; 0xfffff8fa
    2e28:	13050106 	movwne	r0, #20742	; 0x5106
    2e2c:	06090520 	streq	r0, [r9], -r0, lsr #10
    2e30:	05201703 	streq	r1, [r0, #-1795]!	; 0xfffff8fd
    2e34:	4d030610 	stcmi	6, cr0, [r3, #-64]	; 0xffffffc0
    2e38:	0309052e 	movweq	r0, #38190	; 0x952e
    2e3c:	15052033 	strne	r2, [r5, #-51]	; 0xffffffcd
    2e40:	206b0306 	rsbcs	r0, fp, r6, lsl #6
    2e44:	01061905 	tsteq	r6, r5, lsl #18
    2e48:	054a1705 	strbeq	r1, [sl, #-1797]	; 0xfffff8fb
    2e4c:	05300619 	ldreq	r0, [r0, #-1561]!	; 0xfffff9e7
    2e50:	3c0f0311 	stccc	3, cr0, [pc], {17}
    2e54:	055f064b 	ldrbeq	r0, [pc, #-1611]	; 2811 <__HEAP_SIZE+0x1811>
    2e58:	200a0301 	andcs	r0, sl, r1, lsl #6
    2e5c:	76031105 	strvc	r1, [r3], -r5, lsl #2
    2e60:	03010520 	movweq	r0, #5408	; 0x1520
    2e64:	0020200a 	eoreq	r2, r0, sl
    2e68:	01050101 	tsteq	r5, r1, lsl #2
    2e6c:	7e020500 	cfsh32vc	mvfx0, mvfx2, #0
    2e70:	03100022 	tsteq	r0, #34	; 0x22
    2e74:	060104ba 			; <UNDEFINED> instruction: 0x060104ba
    2e78:	06050501 	streq	r0, [r5], -r1, lsl #10
    2e7c:	07051431 	smladxeq	r5, r1, r4, r1
    2e80:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    2e84:	05260609 	streq	r0, [r6, #-1545]!	; 0xfffff9f7
    2e88:	0501061c 	streq	r0, [r1, #-1564]	; 0xfffff9e4
    2e8c:	0a030605 	beq	c46a8 <__HEAP_SIZE+0xc36a8>
    2e90:	061a0520 	ldreq	r0, [sl], -r0, lsr #10
    2e94:	06050501 	streq	r0, [r5], -r1, lsl #10
    2e98:	061c0521 	ldreq	r0, [ip], -r1, lsr #10
    2e9c:	06050501 	streq	r0, [r5], -r1, lsl #10
    2ea0:	060e0521 	streq	r0, [lr], -r1, lsr #10
    2ea4:	05202001 	streq	r2, [r0, #-1]!
    2ea8:	0a030609 	beq	c46d4 <__HEAP_SIZE+0xc36d4>
    2eac:	0629052e 	strteq	r0, [r9], -lr, lsr #10
    2eb0:	06240501 	strteq	r0, [r4], -r1, lsl #10
    2eb4:	06010532 			; <UNDEFINED> instruction: 0x06010532
    2eb8:	06090513 			; <UNDEFINED> instruction: 0x06090513
    2ebc:	05206a03 	streq	r6, [r0, #-2563]!	; 0xfffff5fd
    2ec0:	0201061c 	andeq	r0, r1, #28, 12	; 0x1c00000
    2ec4:	01010002 	tsteq	r1, r2
    2ec8:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    2ecc:	00229e02 	eoreq	r9, r2, r2, lsl #28
    2ed0:	02fc0310 	rscseq	r0, ip, #16, 6	; 0x40000000
    2ed4:	13090501 	movwne	r0, #38145	; 0x9501
    2ed8:	05147705 	ldreq	r7, [r4, #-1797]	; 0xfffff8fb
    2edc:	09051626 	stmdbeq	r5, {r1, r2, r5, r9, sl, ip}
    2ee0:	060b0514 			; <UNDEFINED> instruction: 0x060b0514
    2ee4:	00050501 	andeq	r0, r5, r1, lsl #10
    2ee8:	03010402 	movweq	r0, #5122	; 0x1402
    2eec:	33052077 	movwcc	r2, #20599	; 0x5077
    2ef0:	01040200 	mrseq	r0, R12_usr
    2ef4:	054a0903 	strbeq	r0, [sl, #-2307]	; 0xfffff6fd
    2ef8:	0f052127 	svceq	0x00052127
    2efc:	004a0524 	subeq	r0, sl, r4, lsr #10
    2f00:	20010402 	andcs	r0, r1, r2, lsl #8
    2f04:	03060d05 	movweq	r0, #27909	; 0x6d05
    2f08:	11052016 	tstne	r5, r6, lsl r0
    2f0c:	06330519 			; <UNDEFINED> instruction: 0x06330519
    2f10:	0d052001 	stceq	0, cr2, [r5, #-4]
    2f14:	4a063206 	bmi	18f734 <__RAM_SIZE+0x8f734>
    2f18:	75031805 	strvc	r1, [r3, #-2053]	; 0xfffff7fb
    2f1c:	0305052e 	movweq	r0, #21806	; 0x552e
    2f20:	0f052016 	svceq	0x00052016
    2f24:	052e5503 	streq	r5, [lr, #-1283]!	; 0xfffffafd
    2f28:	2e720313 	mrccs	3, 3, r0, cr2, cr3, {0}
    2f2c:	03063c05 	movweq	r3, #27653	; 0x6c05
    2f30:	09052036 	stmdbeq	r5, {r1, r2, r4, r5, sp}
    2f34:	06100514 			; <UNDEFINED> instruction: 0x06100514
    2f38:	03130501 	tsteq	r3, #4194304	; 0x400000
    2f3c:	05052048 	streq	r2, [r5, #-72]	; 0xffffffb8
    2f40:	05203903 	streq	r3, [r0, #-2307]!	; 0xfffff6fd
    2f44:	20470313 	subcs	r0, r7, r3, lsl r3
    2f48:	02202020 	eoreq	r2, r0, #32
    2f4c:	01010001 	tsteq	r1, r1
    2f50:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    2f54:	00000002 	andeq	r0, r0, r2
    2f58:	03c00300 	biceq	r0, r0, #0, 6
    2f5c:	13090501 	movwne	r0, #38145	; 0x9501
    2f60:	145d0513 	ldrbne	r0, [sp], #-1299	; 0xfffffaed
    2f64:	05142005 	ldreq	r2, [r4, #-5]
    2f68:	0d051327 	stceq	3, cr1, [r5, #-156]	; 0xffffff64
    2f6c:	06180517 			; <UNDEFINED> instruction: 0x06180517
    2f70:	2e0f0501 	cfsh32cs	mvfx0, mvfx15, #1
    2f74:	0f031905 	svceq	0x00031905
    2f78:	063d052e 	ldrteq	r0, [sp], -lr, lsr #10
    2f7c:	05201003 	streq	r1, [r0, #-3]!
    2f80:	05051409 	streq	r1, [r5, #-1033]	; 0xfffffbf7
    2f84:	11051306 	tstne	r5, r6, lsl #6
    2f88:	20600306 	rsbcs	r0, r0, r6, lsl #6
    2f8c:	01061305 	tsteq	r6, r5, lsl #6
    2f90:	22061505 	andcs	r1, r6, #20971520	; 0x1400000
    2f94:	01063e05 	tsteq	r6, r5, lsl #28
    2f98:	05202705 	streq	r2, [r0, #-1797]!	; 0xfffff8fb
    2f9c:	05260611 	streq	r0, [r6, #-1553]!	; 0xfffff9ef
    2fa0:	05010621 	streq	r0, [r1, #-1569]	; 0xfffff9df
    2fa4:	05210611 	streq	r0, [r1, #-1553]!	; 0xfffff9ef
    2fa8:	20010619 	andcs	r0, r1, r9, lsl r6
    2fac:	01000102 	tsteq	r0, r2, lsl #2
    2fb0:	00050501 	andeq	r0, r5, r1, lsl #10
    2fb4:	00000205 	andeq	r0, r0, r5, lsl #4
    2fb8:	f8030000 			; <UNDEFINED> instruction: 0xf8030000
    2fbc:	01060103 	tsteq	r6, r3, lsl #2
    2fc0:	2f060905 	svccs	0x00060905
    2fc4:	51051313 	tstpl	r5, r3, lsl r3
    2fc8:	14090514 	strne	r0, [r9], #-1300	; 0xfffffaec
    2fcc:	01060b05 	tsteq	r6, r5, lsl #22
    2fd0:	02002c05 	andeq	r2, r0, #1280	; 0x500
    2fd4:	004c0104 	subeq	r0, ip, r4, lsl #2
    2fd8:	3c010402 	cfstrscc	mvf0, [r1], {2}
    2fdc:	02003305 	andeq	r3, r0, #335544320	; 0x14000000
    2fe0:	051e0104 	ldreq	r0, [lr, #-260]	; 0xfffffefc
    2fe4:	3c052453 	cfstrscc	mvf2, [r5], {83}	; 0x53
    2fe8:	060d052c 	streq	r0, [sp], -ip, lsr #10
    2fec:	28051743 	stmdacs	r5, {r0, r1, r6, r8, r9, sl, ip}
    2ff0:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    2ff4:	0530060d 	ldreq	r0, [r0, #-1549]!	; 0xfffff9f3
    2ff8:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    2ffc:	13320611 	teqne	r2, #17825792	; 0x1100000
    3000:	05191505 	ldreq	r1, [r9, #-1285]	; 0xfffffafb
    3004:	05010637 	streq	r0, [r1, #-1591]	; 0xfffff9c9
    3008:	06400611 			; <UNDEFINED> instruction: 0x06400611
    300c:	052e2e4a 	streq	r2, [lr, #-3658]!	; 0xfffff1b6
    3010:	0402002c 	streq	r0, [r2], #-44	; 0xffffffd4
    3014:	20620301 	rsbcs	r0, r2, r1, lsl #6
    3018:	78031305 	stmdavc	r3, {r0, r2, r8, r9, ip}
    301c:	0305052e 	movweq	r0, #21806	; 0x552e
    3020:	13052037 	movwne	r2, #20535	; 0x5037
    3024:	2e3c4903 	vaddcs.f16	s8, s24, s6	; <UNPREDICTABLE>
    3028:	03062705 	movweq	r2, #26373	; 0x6705
    302c:	25052030 	strcs	r2, [r5, #-48]	; 0xffffffd0
    3030:	15360513 	ldrne	r0, [r6, #-1299]!	; 0xfffffaed
    3034:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    3038:	02010610 	andeq	r0, r1, #16, 12	; 0x1000000
    303c:	01010001 	tsteq	r1, r1
    3040:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    3044:	00000002 	andeq	r0, r0, r2
    3048:	06e00300 	strbteq	r0, [r0], r0, lsl #6
    304c:	13090501 	movwne	r0, #38145	; 0x9501
    3050:	05146405 	ldreq	r6, [r4, #-1029]	; 0xfffffbfb
    3054:	0b051409 	bleq	148080 <__RAM_SIZE+0x48080>
    3058:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    305c:	01040200 	mrseq	r0, R12_usr
    3060:	0022051b 	eoreq	r0, r2, fp, lsl r5
    3064:	41010402 	tstmi	r1, r2, lsl #8
    3068:	31060d05 	tstcc	r6, r5, lsl #26
    306c:	01061705 	tsteq	r6, r5, lsl #14
    3070:	0d05204a 	stceq	0, cr2, [r5, #-296]	; 0xfffffed8
    3074:	0f053006 	svceq	0x00053006
    3078:	11050106 	tstne	r5, r6, lsl #2
    307c:	3e052206 	cdpcc	2, 0, cr2, cr5, cr6, {0}
    3080:	31050106 	tstcc	r5, r6, lsl #2
    3084:	17052206 	strne	r2, [r5, -r6, lsl #4]
    3088:	20730306 	rsbscs	r0, r3, r6, lsl #6
    308c:	1d030505 	cfstr32ne	mvfx0, [r3, #-20]	; 0xffffffec
    3090:	03170520 	tsteq	r7, #32, 10	; 0x8000000
    3094:	24052063 	strcs	r2, [r5], #-99	; 0xffffff9d
    3098:	20160306 	andscs	r0, r6, r6, lsl #6
    309c:	05132505 	ldreq	r2, [r3, #-1285]	; 0xfffffafb
    30a0:	09051543 	stmdbeq	r5, {r0, r1, r6, r8, sl, ip}
    30a4:	06050514 			; <UNDEFINED> instruction: 0x06050514
    30a8:	01002e13 	tsteq	r0, r3, lsl lr
    30ac:	00050501 	andeq	r0, r5, r1, lsl #10
    30b0:	00000205 	andeq	r0, r0, r5, lsl #4
    30b4:	87030000 	strhi	r0, [r3, -r0]
    30b8:	09050107 	stmdbeq	r5, {r0, r1, r2, r8}
    30bc:	144f0513 	strbne	r0, [pc], #-1299	; 30c4 <__HEAP_SIZE+0x20c4>
    30c0:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    30c4:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
    30c8:	04020005 	streq	r0, [r2], #-5
    30cc:	22051b01 	andcs	r1, r5, #1024	; 0x400
    30d0:	01040200 	mrseq	r0, R12_usr
    30d4:	060d0533 			; <UNDEFINED> instruction: 0x060d0533
    30d8:	06170531 			; <UNDEFINED> instruction: 0x06170531
    30dc:	0d052e01 	stceq	14, cr2, [r5, #-4]
    30e0:	0f053006 	svceq	0x00053006
    30e4:	11050106 	tstne	r5, r6, lsl #2
    30e8:	3e052206 	cdpcc	2, 0, cr2, cr5, cr6, {0}
    30ec:	31050106 	tstcc	r5, r6, lsl #2
    30f0:	17052206 	strne	r2, [r5, -r6, lsl #4]
    30f4:	20730306 	rsbscs	r0, r3, r6, lsl #6
    30f8:	1d030505 	cfstr32ne	mvfx0, [r3, #-20]	; 0xffffffec
    30fc:	03170520 	tsteq	r7, #32, 10	; 0x8000000
    3100:	24052063 	strcs	r2, [r5], #-99	; 0xffffff9d
    3104:	20160306 	andscs	r0, r6, r6, lsl #6
    3108:	05132505 	ldreq	r2, [r3, #-1285]	; 0xfffffafb
    310c:	0905153d 	stmdbeq	r5, {r0, r2, r3, r4, r5, r8, sl, ip}
    3110:	06050514 			; <UNDEFINED> instruction: 0x06050514
    3114:	01002013 	tsteq	r0, r3, lsl r0
    3118:	00010501 	andeq	r0, r1, r1, lsl #10
    311c:	00000205 	andeq	r0, r0, r5, lsl #4
    3120:	ae030000 	cdpge	0, 0, cr0, cr3, cr0, {0}
    3124:	01060107 	tsteq	r6, r7, lsl #2
    3128:	67060505 	strvs	r0, [r6, -r5, lsl #10]
    312c:	10051313 	andne	r1, r5, r3, lsl r3
    3130:	2b051006 	blcs	147150 <__RAM_SIZE+0x47150>
    3134:	2e190306 	cdpcs	3, 1, cr0, cr9, cr6, {0}
    3138:	05161505 	ldreq	r1, [r6, #-1285]	; 0xfffffafb
    313c:	05010627 	streq	r0, [r1, #-1575]	; 0xfffff9d9
    3140:	05220615 	streq	r0, [r2, #-1557]!	; 0xfffff9eb
    3144:	05010626 	streq	r0, [r1, #-1574]	; 0xfffff9da
    3148:	055a0615 	ldrbeq	r0, [sl, #-1557]	; 0xfffff9eb
    314c:	05010620 	streq	r0, [r1, #-1568]	; 0xfffff9e0
    3150:	19052017 	stmdbne	r5, {r0, r1, r2, r4, sp}
    3154:	1b052206 	blne	14b974 <__RAM_SIZE+0x4b974>
    3158:	41050106 	tstmi	r5, r6, lsl #2
    315c:	01040200 	mrseq	r0, R12_usr
    3160:	061e052e 	ldreq	r0, [lr], -lr, lsr #10
    3164:	06220527 	strteq	r0, [r2], -r7, lsr #10
    3168:	20052001 	andcs	r2, r5, r1
    316c:	0635052e 	ldrteq	r0, [r5], -lr, lsr #10
    3170:	05202903 	streq	r2, [r0, #-2307]!	; 0xfffff6fd
    3174:	01280311 			; <UNDEFINED> instruction: 0x01280311
    3178:	05303805 	ldreq	r3, [r0, #-2053]!	; 0xfffff7fb
    317c:	18051411 	stmdane	r5, {r0, r4, sl, ip}
    3180:	01050106 	tsteq	r5, r6, lsl #2
    3184:	2000d303 	andcs	sp, r0, r3, lsl #6
    3188:	03061d05 	movweq	r1, #27909	; 0x6d05
    318c:	052e7edd 	streq	r7, [lr, #-3805]!	; 0xfffff123
    3190:	3c0b0319 	stccc	3, cr0, [fp], {25}
    3194:	01061d05 	tsteq	r6, r5, lsl #26
    3198:	05201b05 	streq	r1, [r0, #-2821]!	; 0xfffff4fb
    319c:	0f03061e 	svceq	0x0003061e
    31a0:	06200520 	strteq	r0, [r0], -r0, lsr #10
    31a4:	061d0501 	ldreq	r0, [sp], -r1, lsl #10
    31a8:	062e0634 			; <UNDEFINED> instruction: 0x062e0634
    31ac:	05206d03 	streq	r6, [r0, #-3331]!	; 0xfffff2fd
    31b0:	2e010621 	cfmadd32cs	mvax1, mvfx0, mvfx1, mvfx1
    31b4:	052e1f05 	streq	r1, [lr, #-3845]!	; 0xfffff0fb
    31b8:	06340621 	ldrteq	r0, [r4], -r1, lsr #12
    31bc:	0615053c 			; <UNDEFINED> instruction: 0x0615053c
    31c0:	0100c503 	tsteq	r0, r3, lsl #10
    31c4:	05323605 	ldreq	r3, [r2, #-1541]!	; 0xfffff9fb
    31c8:	15051343 	strne	r1, [r5, #-835]	; 0xfffffcbd
    31cc:	061c0514 			; <UNDEFINED> instruction: 0x061c0514
    31d0:	06150501 	ldreq	r0, [r5], -r1, lsl #10
    31d4:	23053d34 	movwcs	r3, #23860	; 0x5d34
    31d8:	09050106 	stmdbeq	r5, {r1, r2, r8}
    31dc:	01040200 	mrseq	r0, R12_usr
    31e0:	2e0f0306 	cdpcs	3, 0, cr0, cr15, cr6, {0}
    31e4:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    31e8:	0311054a 	tsteq	r1, #310378496	; 0x12800000
    31ec:	053d4a1e 	ldreq	r4, [sp, #-2590]!	; 0xfffff5e2
    31f0:	0501061a 	streq	r0, [r1, #-1562]	; 0xfffff9e6
    31f4:	c1030657 	tstgt	r3, r7, asr r6
    31f8:	1c052e7e 	stcne	14, cr2, [r5], {126}	; 0x7e
    31fc:	13640514 	cmnne	r4, #20, 10	; 0x5000000
    3200:	05135b05 	ldreq	r5, [r3, #-2821]	; 0xfffff4fb
    3204:	0505156e 	streq	r1, [r5, #-1390]	; 0xfffffa92
    3208:	14090516 	strne	r0, [r9], #-1302	; 0xfffffaea
    320c:	05340d05 	ldreq	r0, [r4, #-3333]!	; 0xfffff2fb
    3210:	0501061a 	streq	r0, [r1, #-1562]	; 0xfffff9e6
    3214:	0f052037 	svceq	0x00052037
    3218:	00440520 	subeq	r0, r4, r0, lsr #10
    321c:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    3220:	03061105 	movweq	r1, #24837	; 0x6105
    3224:	052e00ec 	streq	r0, [lr, #-236]!	; 0xffffff14
    3228:	05010622 	streq	r0, [r1, #-1570]	; 0xfffff9de
    322c:	16052013 			; <UNDEFINED> instruction: 0x16052013
    3230:	2e0d0306 	cdpcs	3, 0, cr0, cr13, cr6, {0}
    3234:	01061805 	tsteq	r6, r5, lsl #16
    3238:	03062d05 	movweq	r2, #27909	; 0x6d05
    323c:	09052e0a 	stmdbeq	r5, {r1, r3, r9, sl, fp, sp}
    3240:	2e2f3316 	mcrcs	3, 1, r3, cr15, cr6, {0}
    3244:	03040200 	movweq	r0, #16896	; 0x4200
    3248:	04020066 	streq	r0, [r2], #-102	; 0xffffff9a
    324c:	02006606 	andeq	r6, r0, #6291456	; 0x600000
    3250:	05310604 	ldreq	r0, [r1, #-1540]!	; 0xfffff9fc
    3254:	0402000d 	streq	r0, [r2], #-13
    3258:	05010606 	streq	r0, [r1, #-1542]	; 0xfffff9fa
    325c:	0402000b 	streq	r0, [r2], #-11
    3260:	0d054a06 	vstreq	s8, [r5, #-24]	; 0xffffffe8
    3264:	11052206 	tstne	r5, r6, lsl #4
    3268:	0f050106 	svceq	0x00050106
    326c:	0637053c 			; <UNDEFINED> instruction: 0x0637053c
    3270:	13110530 	tstne	r1, #48, 10	; 0xc000000
    3274:	1505435f 	strne	r4, [r5, #-863]	; 0xfffffca1
    3278:	13050106 	movwne	r0, #20742	; 0x5106
    327c:	0615052e 	ldreq	r0, [r5], -lr, lsr #10
    3280:	030d0530 	movweq	r0, #54576	; 0xd530
    3284:	053d3c0d 	ldreq	r3, [sp, #-3085]!	; 0xfffff3f3
    3288:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    328c:	0530062e 	ldreq	r0, [r0, #-1582]!	; 0xfffff9d2
    3290:	0d05133b 	stceq	3, cr1, [r5, #-236]	; 0xffffff14
    3294:	06140514 			; <UNDEFINED> instruction: 0x06140514
    3298:	00020201 	andeq	r0, r2, r1, lsl #4
    329c:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    32a0:	00020500 	andeq	r0, r2, r0, lsl #10
    32a4:	03000000 	movweq	r0, #0
    32a8:	050104e6 	streq	r0, [r1, #-1254]	; 0xfffffb1a
    32ac:	0b051309 	bleq	147ed8 <__RAM_SIZE+0x47ed8>
    32b0:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    32b4:	060d051f 			; <UNDEFINED> instruction: 0x060d051f
    32b8:	06330527 	ldrteq	r0, [r3], -r7, lsr #10
    32bc:	060d0501 	streq	r0, [sp], -r1, lsl #10
    32c0:	0625052f 	strteq	r0, [r5], -pc, lsr #10
    32c4:	060d0501 	streq	r0, [sp], -r1, lsl #10
    32c8:	063b0523 	ldrteq	r0, [fp], -r3, lsr #10
    32cc:	062c0501 	strteq	r0, [ip], -r1, lsl #10
    32d0:	150d0522 	strne	r0, [sp, #-1314]	; 0xfffffade
    32d4:	01061605 	tsteq	r6, r5, lsl #12
    32d8:	4e062705 	cdpmi	7, 0, cr2, cr6, cr5, {0}
    32dc:	14060505 	strne	r0, [r6], #-1285	; 0xfffffafb
    32e0:	00010220 	andeq	r0, r1, r0, lsr #4
    32e4:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    32e8:	00020500 	andeq	r0, r2, r0, lsl #10
    32ec:	03000000 	movweq	r0, #0
    32f0:	06010584 	streq	r0, [r1], -r4, lsl #11
    32f4:	06090501 	streq	r0, [r9], -r1, lsl #10
    32f8:	3405132f 	strcc	r1, [r5], #-815	; 0xfffffcd1
    32fc:	14090514 	strne	r0, [r9], #-1300	; 0xfffffaec
    3300:	01061505 	tsteq	r6, r5, lsl #10
    3304:	0609052e 	streq	r0, [r9], -lr, lsr #10
    3308:	3033053d 	eorscc	r0, r3, sp, lsr r5
    330c:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    3310:	2e130605 	cfmsub32cs	mvax0, mvfx0, mvfx3, mvfx5
    3314:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    3318:	02050005 	andeq	r0, r5, #5
    331c:	00000000 	andeq	r0, r0, r0
    3320:	01059903 	tsteq	r5, r3, lsl #18
    3324:	09050106 	stmdbeq	r5, {r1, r2, r8}
    3328:	05133d06 	ldreq	r3, [r3, #-3334]	; 0xfffff2fa
    332c:	09051449 	stmdbeq	r5, {r0, r3, r6, sl, ip}
    3330:	15051416 	strne	r1, [r5, #-1046]	; 0xfffffbea
    3334:	203c0106 	eorscs	r0, ip, r6, lsl #2
    3338:	0609052e 	streq	r0, [r9], -lr, lsr #10
    333c:	30390521 	eorscc	r0, r9, r1, lsr #10
    3340:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    3344:	3c130605 	ldccc	6, cr0, [r3], {5}
    3348:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    334c:	02050005 	andeq	r0, r5, #5
    3350:	00000000 	andeq	r0, r0, r0
    3354:	0105f403 	tsteq	r5, r3, lsl #8	; <UNPREDICTABLE>
    3358:	09050106 	stmdbeq	r5, {r1, r2, r8}
    335c:	05132f06 	ldreq	r2, [r3, #-3846]	; 0xfffff0fa
    3360:	20051436 	andcs	r1, r5, r6, lsr r4
    3364:	1a090514 	bne	2447bc <__RAM_SIZE+0x1447bc>
    3368:	01062205 	tsteq	r6, r5, lsl #4
    336c:	05203305 	streq	r3, [r0, #-773]!	; 0xfffffcfb
    3370:	15052e0b 	strne	r2, [r5, #-3595]	; 0xfffff1f5
    3374:	052e1d03 	streq	r1, [lr, #-3331]!	; 0xfffff2fd
    3378:	31052805 	tstcc	r5, r5, lsl #16
    337c:	205d0306 	subscs	r0, sp, r6, lsl #6
    3380:	05190d05 	ldreq	r0, [r9, #-3333]	; 0xfffff2fb
    3384:	05010624 	streq	r0, [r1, #-1572]	; 0xfffff9dc
    3388:	0d05203b 	stceq	0, cr2, [r5, #-236]	; 0xffffff14
    338c:	0f053106 	svceq	0x00053106
    3390:	15050106 	strne	r0, [r5, #-262]	; 0xfffffefa
    3394:	05200b03 	streq	r0, [r0, #-2819]!	; 0xfffff4fd
    3398:	15280638 	strne	r0, [r8, #-1592]!	; 0xfffff9c8
    339c:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    33a0:	05010610 	streq	r0, [r1, #-1552]	; 0xfffff9f0
    33a4:	6c030611 	stcvs	6, cr0, [r3], {17}
    33a8:	061a0520 	ldreq	r0, [sl], -r0, lsr #10
    33ac:	5f150501 	svcpl	0x00150501
    33b0:	01000202 	tsteq	r0, r2, lsl #4
    33b4:	00010501 	andeq	r0, r1, r1, lsl #10
    33b8:	00000205 	andeq	r0, r0, r5, lsl #4
    33bc:	88030000 	stmdahi	r3, {}	; <UNPREDICTABLE>
    33c0:	01060109 	tsteq	r6, r9, lsl #2
    33c4:	67060505 	strvs	r0, [r6, -r5, lsl #10]
    33c8:	6b051313 	blvs	14801c <__RAM_SIZE+0x4801c>
    33cc:	141c0514 	ldrne	r0, [ip], #-1300	; 0xfffffaec
    33d0:	05136405 	ldreq	r6, [r3, #-1029]	; 0xfffffbfb
    33d4:	2f05135b 	svccs	0x0005135b
    33d8:	05011003 	streq	r1, [r1, #-3]
    33dc:	010a0305 	tsteq	sl, r5, lsl #6
    33e0:	01062e05 	tsteq	r6, r5, lsl #28
    33e4:	0609052e 	streq	r0, [r9], -lr, lsr #10
    33e8:	06160522 	ldreq	r0, [r6], -r2, lsr #10
    33ec:	20330501 	eorscs	r0, r3, r1, lsl #10
    33f0:	05200b05 	streq	r0, [r0, #-2821]!	; 0xfffff4fb
    33f4:	04020040 	streq	r0, [r2], #-64	; 0xffffffc0
    33f8:	15052e01 	strne	r2, [r5, #-3585]	; 0xfffff1ff
    33fc:	2e00f803 	cdpcs	8, 0, cr15, cr0, cr3, {0}
    3400:	23060505 	movwcs	r0, #25861	; 0x6505
    3404:	053e3405 	ldreq	r3, [lr, #-1029]!	; 0xfffffbfb
    3408:	01051405 	tsteq	r5, r5, lsl #8
    340c:	0d051306 	stceq	3, cr1, [r5, #-24]	; 0xffffffe8
    3410:	7f820306 	svcvc	0x00820306
    3414:	061a053c 			; <UNDEFINED> instruction: 0x061a053c
    3418:	060d0501 	streq	r0, [sp], -r1, lsl #10
    341c:	061f054b 	ldreq	r0, [pc], -fp, asr #10
    3420:	06300501 	ldrteq	r0, [r0], -r1, lsl #10
    3424:	190d0530 	stmdbne	sp, {r4, r5, r8, sl}
    3428:	01061605 	tsteq	r6, r5, lsl #12
    342c:	060d053c 			; <UNDEFINED> instruction: 0x060d053c
    3430:	060f0532 			; <UNDEFINED> instruction: 0x060f0532
    3434:	06150501 	ldreq	r0, [r5], -r1, lsl #10
    3438:	06200540 	strteq	r0, [r0], -r0, asr #10
    343c:	20170501 	andscs	r0, r7, r1, lsl #10
    3440:	22061905 	andcs	r1, r6, #81920	; 0x14000
    3444:	01061b05 	tsteq	r6, r5, lsl #22
    3448:	02004105 	andeq	r4, r0, #1073741825	; 0x40000001
    344c:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
    3450:	0543061e 	strbeq	r0, [r3, #-1566]	; 0xfffff9e2
    3454:	05010622 	streq	r0, [r1, #-1570]	; 0xfffff9de
    3458:	1d053c20 	stcne	12, cr3, [r5, #-128]	; 0xffffff80
    345c:	1f052506 	svcne	0x00052506
    3460:	21050106 	tstcs	r5, r6, lsl #2
    3464:	3c053e06 	stccc	14, cr3, [r5], {6}
    3468:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    346c:	0e030619 	mcreq	6, 0, r0, cr3, cr9, {0}
    3470:	061d053c 			; <UNDEFINED> instruction: 0x061d053c
    3474:	201b0501 	andscs	r0, fp, r1, lsl #10
    3478:	c1031505 	tstgt	r3, r5, lsl #10
    347c:	05202000 	streq	r2, [r0, #-0]!
    3480:	4103061d 	tstmi	r3, sp, lsl r6
    3484:	06210520 	strteq	r0, [r1], -r0, lsr #10
    3488:	4a1f0501 	bmi	7c4894 <__RAM_SIZE+0x6c4894>
    348c:	24062105 	strcs	r2, [r6], #-261	; 0xfffffefb
    3490:	01062305 	tsteq	r6, r5, lsl #6
    3494:	3e062505 	cfsh32cc	mvfx2, mvfx6, #5
    3498:	01064005 	tsteq	r6, r5
    349c:	06110520 	ldreq	r0, [r1], -r0, lsr #10
    34a0:	013c3603 	teqeq	ip, r3, lsl #12
    34a4:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    34a8:	02002e01 	andeq	r2, r0, #1, 28
    34ac:	00010104 	andeq	r0, r1, r4, lsl #2
    34b0:	06010402 	streq	r0, [r1], -r2, lsl #8
    34b4:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    34b8:	15052e01 	strne	r2, [r5, #-3585]	; 0xfffff1ff
    34bc:	01040200 	mrseq	r0, R12_usr
    34c0:	04020031 	streq	r0, [r2], #-49	; 0xffffffcf
    34c4:	20202001 	eorcs	r2, r0, r1
    34c8:	20202020 	eorcs	r2, r0, r0, lsr #32
    34cc:	20202020 	eorcs	r2, r0, r0, lsr #32
    34d0:	01022020 	tsteq	r2, r0, lsr #32
    34d4:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    34d8:	02050001 	andeq	r0, r5, #1
    34dc:	00000000 	andeq	r0, r0, r0
    34e0:	010ab203 	tsteq	sl, r3, lsl #4
    34e4:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    34e8:	13133d06 	tstne	r3, #384	; 0x180
    34ec:	05144605 	ldreq	r4, [r4, #-1541]	; 0xfffff9fb
    34f0:	2d051a1c 	vstrcs	s2, [r5, #-112]	; 0xffffff90
    34f4:	177b0516 			; <UNDEFINED> instruction: 0x177b0516
    34f8:	10032f05 	andne	r2, r3, r5, lsl #30
    34fc:	17050501 	strne	r0, [r5, -r1, lsl #10]
    3500:	01062e05 	tsteq	r6, r5, lsl #28
    3504:	0609052e 	streq	r0, [r9], -lr, lsr #10
    3508:	061b0522 	ldreq	r0, [fp], -r2, lsr #10
    350c:	06090501 	streq	r0, [r9], -r1, lsl #10
    3510:	06280525 	strteq	r0, [r8], -r5, lsr #10
    3514:	200b0501 	andcs	r0, fp, r1, lsl #10
    3518:	30060d05 	andcc	r0, r6, r5, lsl #26
    351c:	01061a05 	tsteq	r6, r5, lsl #20
    3520:	3e063005 	cdpcc	0, 0, cr3, cr6, cr5, {0}
    3524:	051a0d05 	ldreq	r0, [sl, #-3333]	; 0xfffff2fb
    3528:	0501062a 	streq	r0, [r1, #-1578]	; 0xfffff9d6
    352c:	0d052028 	stceq	0, cr2, [r5, #-160]	; 0xffffff60
    3530:	0f052406 	svceq	0x00052406
    3534:	15050106 	strne	r0, [r5, #-262]	; 0xfffffefa
    3538:	20054006 	andcs	r4, r5, r6
    353c:	17050106 	strne	r0, [r5, -r6, lsl #2]
    3540:	06190520 	ldreq	r0, [r9], -r0, lsr #10
    3544:	061d0522 	ldreq	r0, [sp], -r2, lsr #10
    3548:	1b052001 	blne	14b554 <__RAM_SIZE+0x4b554>
    354c:	061d052e 	ldreq	r0, [sp], -lr, lsr #10
    3550:	061f0525 	ldreq	r0, [pc], -r5, lsr #10
    3554:	06210501 	strteq	r0, [r1], -r1, lsl #10
    3558:	063c0522 	ldrteq	r0, [ip], -r2, lsr #10
    355c:	19052001 	stmdbne	r5, {r0, sp}
    3560:	2e0e0306 	cdpcs	3, 0, cr0, cr14, cr6, {0}
    3564:	01061d05 	tsteq	r6, r5, lsl #26
    3568:	05201b05 	streq	r1, [r0, #-2821]!	; 0xfffff4fb
    356c:	203e0315 	eorscs	r0, lr, r5, lsl r3
    3570:	061d0520 	ldreq	r0, [sp], -r0, lsr #10
    3574:	05204403 	streq	r4, [r0, #-1027]!	; 0xfffffbfd
    3578:	2e010621 	cfmadd32cs	mvax1, mvfx0, mvfx1, mvfx1
    357c:	052e1f05 	streq	r1, [lr, #-3845]!	; 0xfffff0fb
    3580:	05240621 	streq	r0, [r4, #-1569]!	; 0xfffff9df
    3584:	05010623 	streq	r0, [r1, #-1571]	; 0xfffff9dd
    3588:	05220625 	streq	r0, [r2, #-1573]!	; 0xfffff9db
    358c:	20010640 	andcs	r0, r1, r0, asr #12
    3590:	03061105 	movweq	r1, #24837	; 0x6105
    3594:	2e012e33 	mcrcs	14, 0, r2, cr1, cr3, {1}
    3598:	01040200 	mrseq	r0, R12_usr
    359c:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    35a0:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    35a4:	20060104 	andcs	r0, r6, r4, lsl #2
    35a8:	01040200 	mrseq	r0, R12_usr
    35ac:	00150520 	andseq	r0, r5, r0, lsr #10
    35b0:	31010402 	tstcc	r1, r2, lsl #8
    35b4:	01040200 	mrseq	r0, R12_usr
    35b8:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    35bc:	20172001 	andscs	r2, r7, r1
    35c0:	15060505 	strne	r0, [r6, #-1285]	; 0xfffffafb
    35c4:	053e2d05 	ldreq	r2, [lr, #-3333]!	; 0xfffff2fb
    35c8:	01051405 	tsteq	r5, r5, lsl #8
    35cc:	15051306 	strne	r1, [r5, #-774]	; 0xfffffcfa
    35d0:	202e7303 	eorcs	r7, lr, r3, lsl #6
    35d4:	20202020 	eorcs	r2, r0, r0, lsr #32
    35d8:	20202020 	eorcs	r2, r0, r0, lsr #32
    35dc:	01000102 	tsteq	r0, r2, lsl #2
    35e0:	00010501 	andeq	r0, r1, r1, lsl #10
    35e4:	22dc0205 	sbcscs	r0, ip, #1342177280	; 0x50000000
    35e8:	e0031000 	and	r1, r3, r0
    35ec:	0106010b 	tsteq	r6, fp, lsl #2
    35f0:	59060505 	stmdbpl	r6, {r0, r2, r8, sl}
    35f4:	10051313 	andne	r1, r5, r3, lsl r3
    35f8:	11051006 	tstne	r5, r6
    35fc:	2e1f0306 	cdpcs	3, 1, cr0, cr15, cr6, {0}
    3600:	054b2e05 	strbeq	r2, [fp, #-3589]	; 0xfffff1fb
    3604:	2e051311 	mcrcs	3, 0, r1, cr5, cr1, {0}
    3608:	2c050106 	stfcss	f0, [r5], {6}
    360c:	06110520 	ldreq	r0, [r1], -r0, lsr #10
    3610:	06150525 	ldreq	r0, [r5], -r5, lsr #10
    3614:	20130501 	andscs	r0, r3, r1, lsl #10
    3618:	03062d05 	movweq	r2, #27909	; 0x6d05
    361c:	1105200d 	tstne	r5, sp
    3620:	30340515 	eorscc	r0, r4, r5, lsl r5
    3624:	05141105 	ldreq	r1, [r4, #-261]	; 0xfffffefb
    3628:	20010618 	andcs	r0, r1, r8, lsl r6
    362c:	d5030105 	strle	r0, [r3, #-261]	; 0xfffffefb
    3630:	15050100 	strne	r0, [r5, #-256]	; 0xffffff00
    3634:	7f990306 	svcvc	0x00990306
    3638:	0619052e 	ldreq	r0, [r9], -lr, lsr #10
    363c:	4a170501 	bmi	5c4a48 <__RAM_SIZE+0x4c4a48>
    3640:	30061905 	andcc	r1, r6, r5, lsl #18
    3644:	18031505 	stmdane	r3, {r0, r2, r8, sl, ip}
    3648:	3039053c 	eorscc	r0, r9, ip, lsr r5
    364c:	05134005 	ldreq	r4, [r3, #-5]
    3650:	1c051415 	cfstrsne	mvf1, [r5], {21}
    3654:	15050106 	strne	r0, [r5, #-262]	; 0xfffffefa
    3658:	053d3406 	ldreq	r3, [sp, #-1030]!	; 0xfffffbfa
    365c:	2e010623 	cfmadd32cs	mvax1, mvfx0, mvfx1, mvfx3
    3660:	02000905 	andeq	r0, r0, #81920	; 0x14000
    3664:	03060104 	movweq	r0, #24836	; 0x6104
    3668:	0200010f 	andeq	r0, r0, #-1073741821	; 0xc0000003
    366c:	054a0404 	strbeq	r0, [sl, #-1028]	; 0xfffffbfc
    3670:	4a1a0311 	bmi	6842bc <__RAM_SIZE+0x5842bc>
    3674:	061a053d 			; <UNDEFINED> instruction: 0x061a053d
    3678:	060d0501 	streq	r0, [sp], -r1, lsl #10
    367c:	16053d43 	strne	r3, [r5], -r3, asr #26
    3680:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    3684:	11053006 	tstne	r5, r6
    3688:	0f050106 	svceq	0x00050106
    368c:	063f053c 			; <UNDEFINED> instruction: 0x063f053c
    3690:	2e7f8203 	cdpcs	2, 7, cr8, cr15, cr3, {0}
    3694:	05152005 	ldreq	r2, [r5, #-5]
    3698:	6e051667 	cfmadd32vs	mvax3, mvfx1, mvfx5, mvfx7
    369c:	16050517 			; <UNDEFINED> instruction: 0x16050517
    36a0:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    36a4:	1f05300d 	svcne	0x0005300d
    36a8:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    36ac:	0f052406 	svceq	0x00052406
    36b0:	11050106 	tstne	r5, r6, lsl #2
    36b4:	2e220306 	cdpcs	3, 2, cr0, cr2, cr6, {0}
    36b8:	01062205 	tsteq	r6, r5, lsl #4
    36bc:	05201305 	streq	r1, [r0, #-773]!	; 0xfffffcfb
    36c0:	0b030616 	bleq	c4f20 <__HEAP_SIZE+0xc3f20>
    36c4:	0618052e 	ldreq	r0, [r8], -lr, lsr #10
    36c8:	062d0501 	strteq	r0, [sp], -r1, lsl #10
    36cc:	052e0a03 	streq	r0, [lr, #-2563]!	; 0xfffff5fd
    36d0:	2f331609 	svccs	0x00331609
    36d4:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    36d8:	02006603 	andeq	r6, r0, #3145728	; 0x300000
    36dc:	00660604 	rsbeq	r0, r6, r4, lsl #12
    36e0:	31060402 	tstcc	r6, r2, lsl #8
    36e4:	02000d05 	andeq	r0, r0, #320	; 0x140
    36e8:	01060604 	tsteq	r6, r4, lsl #12
    36ec:	02000b05 	andeq	r0, r0, #5120	; 0x1400
    36f0:	054a0604 	strbeq	r0, [sl, #-1540]	; 0xfffff9fc
    36f4:	0532060d 	ldreq	r0, [r2, #-1549]!	; 0xfffff9f3
    36f8:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    36fc:	3a053c0f 	bcc	152740 <__RAM_SIZE+0x52740>
    3700:	11053006 	tstne	r5, r6
    3704:	053e5913 	ldreq	r5, [lr, #-2323]!	; 0xfffff6ed
    3708:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    370c:	15052e13 	strne	r2, [r5, #-3603]	; 0xfffff1ed
    3710:	18053006 	stmdane	r5, {r1, r2, ip, sp}
    3714:	3c1b0306 	ldccc	3, cr0, [fp], {6}
    3718:	01000202 	tsteq	r0, r2, lsl #4
    371c:	00010501 	andeq	r0, r1, r1, lsl #10
    3720:	00000205 	andeq	r0, r0, r5, lsl #4
    3724:	f5030000 			; <UNDEFINED> instruction: 0xf5030000
    3728:	0106010c 	tsteq	r6, ip, lsl #2
    372c:	4b060505 	blmi	184b48 <__RAM_SIZE+0x84b48>
    3730:	09051313 	stmdbeq	r5, {r0, r1, r4, r8, r9, ip}
    3734:	06140515 			; <UNDEFINED> instruction: 0x06140515
    3738:	1b100501 	blne	404b44 <__RAM_SIZE+0x304b44>
    373c:	03062e05 	movweq	r2, #28165	; 0x6e05
    3740:	11052e24 	tstne	r5, r4, lsr #28
    3744:	062e0516 			; <UNDEFINED> instruction: 0x062e0516
    3748:	202c0501 	eorcs	r0, ip, r1, lsl #10
    374c:	24061505 	strcs	r1, [r6], #-1285	; 0xfffffafb
    3750:	01062005 	tsteq	r6, r5
    3754:	05201705 	streq	r1, [r0, #-1797]!	; 0xfffff8fb
    3758:	05280631 	streq	r0, [r8, #-1585]!	; 0xfffff9cf
    375c:	15051911 	strne	r1, [r5, #-2321]	; 0xfffff6ef
    3760:	13050106 	movwne	r0, #20742	; 0x5106
    3764:	062d0520 	strteq	r0, [sp], -r0, lsr #10
    3768:	05200d03 	streq	r0, [r0, #-3331]!	; 0xfffff2fd
    376c:	3a051511 	bcc	148bb8 <__RAM_SIZE+0x48bb8>
    3770:	14110530 	ldrne	r0, [r1], #-1328	; 0xfffffad0
    3774:	01061805 	tsteq	r6, r5, lsl #16
    3778:	03010520 	movweq	r0, #5408	; 0x1520
    377c:	0501018c 	streq	r0, [r1, #-396]	; 0xfffffe74
    3780:	d5030619 	strle	r0, [r3, #-1561]	; 0xfffff9e7
    3784:	3e052e7e 	mcrcc	14, 0, r2, cr5, cr14, {3}
    3788:	3c050106 	stfccs	f0, [r5], {6}
    378c:	0615052e 	ldreq	r0, [r5], -lr, lsr #10
    3790:	052e0d03 	streq	r0, [lr, #-3331]!	; 0xfffff2fd
    3794:	05010619 	streq	r0, [r1, #-1561]	; 0xfffff9e7
    3798:	19054a17 	stmdbne	r5, {r0, r1, r2, r4, r9, fp, lr}
    379c:	15053006 	strne	r3, [r5, #-6]
    37a0:	053c1803 	ldreq	r1, [ip, #-2051]!	; 0xfffff7fd
    37a4:	46053039 			; <UNDEFINED> instruction: 0x46053039
    37a8:	14150513 	ldrne	r0, [r5], #-1299	; 0xfffffaed
    37ac:	01061c05 	tsteq	r6, r5, lsl #24
    37b0:	34061505 	strcc	r1, [r6], #-1285	; 0xfffffafb
    37b4:	0623053d 			; <UNDEFINED> instruction: 0x0623053d
    37b8:	09052e01 	stmdbeq	r5, {r0, r9, sl, fp, sp}
    37bc:	01040200 	mrseq	r0, R12_usr
    37c0:	010f0306 	tsteq	pc, r6, lsl #6
    37c4:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    37c8:	0319054a 	tsteq	r9, #310378496	; 0x12800000
    37cc:	1d054a11 	vstrne	s8, [r5, #-68]	; 0xffffffbc
    37d0:	06340530 			; <UNDEFINED> instruction: 0x06340530
    37d4:	06190501 	ldreq	r0, [r9], -r1, lsl #10
    37d8:	052e064c 	streq	r0, [lr, #-1612]!	; 0xfffff9b4
    37dc:	19030611 	stmdbne	r3, {r0, r4, r9, sl}
    37e0:	1a053d20 	bne	152c68 <__RAM_SIZE+0x52c68>
    37e4:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    37e8:	053d4206 	ldreq	r4, [sp, #-518]!	; 0xfffffdfa
    37ec:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    37f0:	0534060d 	ldreq	r0, [r4, #-1549]!	; 0xfffff9f3
    37f4:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    37f8:	3b053c0f 	blcc	15283c <__RAM_SIZE+0x5283c>
    37fc:	7eda0306 	cdpvc	3, 13, cr0, cr10, cr6, {0}
    3800:	1520052e 	strne	r0, [r0, #-1326]!	; 0xfffffad2
    3804:	05162d05 	ldreq	r2, [r6, #-3333]	; 0xfffff2fb
    3808:	0505176e 	streq	r1, [r5, #-1902]	; 0xfffff892
    380c:	14090516 	strne	r0, [r9], #-1302	; 0xfffffaea
    3810:	05320d05 	ldreq	r0, [r2, #-3333]!	; 0xfffff2fb
    3814:	0501061f 	streq	r0, [r1, #-1567]	; 0xfffff9e1
    3818:	0524060d 	streq	r0, [r4, #-1549]!	; 0xfffff9f3
    381c:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    3820:	31030611 	tstcc	r3, r1, lsl r6
    3824:	0622052e 	strteq	r0, [r2], -lr, lsr #10
    3828:	20130501 	andscs	r0, r3, r1, lsl #10
    382c:	03061605 	movweq	r1, #26117	; 0x6605
    3830:	18052e0b 	stmdane	r5, {r0, r1, r3, r9, sl, fp, sp}
    3834:	2d050106 	stfcss	f0, [r5, #-24]	; 0xffffffe8
    3838:	2e0a0306 	cdpcs	3, 0, cr0, cr10, cr6, {0}
    383c:	33160905 	tstcc	r6, #81920	; 0x14000
    3840:	02002e2f 	andeq	r2, r0, #752	; 0x2f0
    3844:	00660304 	rsbeq	r0, r6, r4, lsl #6
    3848:	66060402 	strvs	r0, [r6], -r2, lsl #8
    384c:	06040200 	streq	r0, [r4], -r0, lsl #4
    3850:	000d0531 	andeq	r0, sp, r1, lsr r5
    3854:	06060402 	streq	r0, [r6], -r2, lsl #8
    3858:	000b0501 	andeq	r0, fp, r1, lsl #10
    385c:	4a060402 	bmi	18486c <__RAM_SIZE+0x8486c>
    3860:	34060d05 	strcc	r0, [r6], #-3333	; 0xfffff2fb
    3864:	01061105 	tsteq	r6, r5, lsl #2
    3868:	053c0f05 	ldreq	r0, [ip, #-3845]!	; 0xfffff0fb
    386c:	0530063a 	ldreq	r0, [r0, #-1594]!	; 0xfffff9c6
    3870:	20051615 	andcs	r1, r5, r5, lsl r6
    3874:	17050106 	strne	r0, [r5, -r6, lsl #2]
    3878:	06310520 	ldrteq	r0, [r1], -r0, lsr #10
    387c:	052e0a03 	streq	r0, [lr, #-2563]!	; 0xfffff5fd
    3880:	3e591711 	mrccc	7, 2, r1, cr9, cr1, {0}
    3884:	01061505 	tsteq	r6, r5, lsl #10
    3888:	052e1305 	streq	r1, [lr, #-773]!	; 0xfffffcfb
    388c:	03300615 	teqeq	r0, #22020096	; 0x1500000
    3890:	17053c20 	strne	r3, [r5, -r0, lsr #24]
    3894:	35050106 	strcc	r0, [r5, #-262]	; 0xfffffefa
    3898:	201b0306 	andscs	r0, fp, r6, lsl #6
    389c:	05134205 	ldreq	r4, [r3, #-517]	; 0xfffffdfb
    38a0:	18051411 	stmdane	r5, {r0, r4, sl, ip}
    38a4:	19050106 	stmdbne	r5, {r1, r2, r8}
    38a8:	2e640306 	cdpcs	3, 6, cr0, cr4, cr6, {0}
    38ac:	19301d05 	ldmdbne	r0!, {r0, r2, r8, sl, fp, ip}
    38b0:	01063805 	tsteq	r6, r5, lsl #16
    38b4:	03061d05 	movweq	r1, #27909	; 0x6d05
    38b8:	20064a09 	andcs	r4, r6, r9, lsl #20
    38bc:	0619052e 	ldreq	r0, [r9], -lr, lsr #10
    38c0:	00030214 	andeq	r0, r3, r4, lsl r2
    38c4:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    38c8:	00020500 	andeq	r0, r2, r0, lsl #10
    38cc:	03000000 	movweq	r0, #0
    38d0:	060106b0 			; <UNDEFINED> instruction: 0x060106b0
    38d4:	06090501 	streq	r0, [r9], -r1, lsl #10
    38d8:	4405133d 	strmi	r1, [r5], #-829	; 0xfffffcc3
    38dc:	14200514 	strtne	r0, [r0], #-1300	; 0xfffffaec
    38e0:	05172d05 	ldreq	r2, [r7, #-3333]	; 0xfffff2fb
    38e4:	22051409 	andcs	r1, r5, #150994944	; 0x9000000
    38e8:	33050106 	movwcc	r0, #20742	; 0x5106
    38ec:	2e0b0520 	cfsh32cs	mvfx0, mvfx11, #16
    38f0:	35060d05 	strcc	r0, [r6, #-3333]	; 0xfffff2fb
    38f4:	01061705 	tsteq	r6, r5, lsl #14
    38f8:	4f060d05 	svcmi	0x00060d05
    38fc:	01060f05 	tsteq	r6, r5, lsl #30
    3900:	22061105 	andcs	r1, r6, #1073741825	; 0x40000001
    3904:	01062805 	tsteq	r6, r5, lsl #16
    3908:	05203f05 	streq	r3, [r0, #-3845]!	; 0xfffff0fb
    390c:	0532063c 	ldreq	r0, [r2, #-1596]!	; 0xfffff9c4
    3910:	09051638 	stmdbeq	r5, {r3, r4, r5, r9, sl, ip}
    3914:	06100514 			; <UNDEFINED> instruction: 0x06100514
    3918:	060d0501 	streq	r0, [sp], -r1, lsl #10
    391c:	05206a03 	streq	r6, [r0, #-2563]!	; 0xfffff5fd
    3920:	05010624 	streq	r0, [r1, #-1572]	; 0xfffff9dc
    3924:	0d05203b 	stceq	0, cr2, [r5, #-236]	; 0xffffff14
    3928:	15052f06 	strne	r2, [r5, #-3846]	; 0xfffff0fa
    392c:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    3930:	20201603 	eorcs	r1, r0, r3, lsl #12
    3934:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    3938:	02050001 	andeq	r0, r5, #1
    393c:	00000000 	andeq	r0, r0, r0
    3940:	010ed703 	tsteq	lr, r3, lsl #14
    3944:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    3948:	13135906 	tstne	r3, #98304	; 0x18000
    394c:	06100513 			; <UNDEFINED> instruction: 0x06100513
    3950:	0611050f 	ldreq	r0, [r1], -pc, lsl #10
    3954:	052e2203 	streq	r2, [lr, #-515]!	; 0xfffffdfd
    3958:	05010628 	streq	r0, [r1, #-1576]	; 0xfffff9d8
    395c:	05220611 	streq	r0, [r2, #-1553]!	; 0xfffff9ef
    3960:	11054b2b 	tstne	r5, fp, lsr #22
    3964:	062e0515 			; <UNDEFINED> instruction: 0x062e0515
    3968:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    396c:	06150524 	ldreq	r0, [r5], -r4, lsr #10
    3970:	20130501 	andscs	r0, r3, r1, lsl #10
    3974:	03062d05 	movweq	r2, #27909	; 0x6d05
    3978:	1105200e 	tstne	r5, lr
    397c:	30310515 	eorscc	r0, r1, r5, lsl r5
    3980:	05141105 	ldreq	r1, [r4, #-261]	; 0xfffffefb
    3984:	20010618 	andcs	r0, r1, r8, lsl r6
    3988:	d6030105 	strle	r0, [r3], -r5, lsl #2
    398c:	15050100 	strne	r0, [r5, #-256]	; 0xffffff00
    3990:	7f970306 	svcvc	0x00970306
    3994:	0619052e 	ldreq	r0, [r9], -lr, lsr #10
    3998:	4a170501 	bmi	5c4da4 <__RAM_SIZE+0x4c4da4>
    399c:	31061905 	tstcc	r6, r5, lsl #18
    39a0:	18031505 	stmdane	r3, {r0, r2, r8, sl, ip}
    39a4:	3036053c 	eorscc	r0, r6, ip, lsr r5
    39a8:	05133d05 	ldreq	r3, [r3, #-3333]	; 0xfffff2fb
    39ac:	1c051415 	cfstrsne	mvf1, [r5], {21}
    39b0:	15050106 	strne	r0, [r5, #-262]	; 0xfffffefa
    39b4:	053d3506 	ldreq	r3, [sp, #-1286]!	; 0xfffffafa
    39b8:	2e010623 	cfmadd32cs	mvax1, mvfx0, mvfx1, mvfx3
    39bc:	02000905 	andeq	r0, r0, #81920	; 0x14000
    39c0:	03060104 	movweq	r0, #24836	; 0x6104
    39c4:	0200010f 	andeq	r0, r0, #-1073741821	; 0xc0000003
    39c8:	054a0404 	strbeq	r0, [sl, #-1028]	; 0xfffffbfc
    39cc:	4a1a0311 	bmi	684618 <__RAM_SIZE+0x584618>
    39d0:	061a053d 			; <UNDEFINED> instruction: 0x061a053d
    39d4:	060d0501 	streq	r0, [sp], -r1, lsl #10
    39d8:	16053d43 	strne	r3, [r5], -r3, asr #26
    39dc:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    39e0:	11053006 	tstne	r5, r6
    39e4:	0f050106 	svceq	0x00050106
    39e8:	063c053c 			; <UNDEFINED> instruction: 0x063c053c
    39ec:	2e7efb03 	vaddcs.f64	d31, d14, d3
    39f0:	05152005 	ldreq	r2, [r5, #-5]
    39f4:	6e051667 	cfmadd32vs	mvax3, mvfx1, mvfx5, mvfx7
    39f8:	16050517 			; <UNDEFINED> instruction: 0x16050517
    39fc:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    3a00:	1f05300d 	svcne	0x0005300d
    3a04:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    3a08:	0f052406 	svceq	0x00052406
    3a0c:	11050106 	tstne	r5, r6, lsl #2
    3a10:	2e280306 	cdpcs	3, 2, cr0, cr8, cr6, {0}
    3a14:	01062205 	tsteq	r6, r5, lsl #4
    3a18:	05201305 	streq	r1, [r0, #-773]!	; 0xfffffcfb
    3a1c:	0b030616 	bleq	c527c <__HEAP_SIZE+0xc427c>
    3a20:	0618052e 	ldreq	r0, [r8], -lr, lsr #10
    3a24:	062d0501 	strteq	r0, [sp], -r1, lsl #10
    3a28:	052e0b03 	streq	r0, [lr, #-2819]!	; 0xfffff4fd
    3a2c:	2f331609 	svccs	0x00331609
    3a30:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    3a34:	02006603 	andeq	r6, r0, #3145728	; 0x300000
    3a38:	00660604 	rsbeq	r0, r6, r4, lsl #12
    3a3c:	31060402 	tstcc	r6, r2, lsl #8
    3a40:	02000d05 	andeq	r0, r0, #320	; 0x140
    3a44:	01060604 	tsteq	r6, r4, lsl #12
    3a48:	02000b05 	andeq	r0, r0, #5120	; 0x1400
    3a4c:	054a0604 	strbeq	r0, [sl, #-1540]	; 0xfffff9fc
    3a50:	0532060d 	ldreq	r0, [r2, #-1549]!	; 0xfffff9f3
    3a54:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    3a58:	37053c0f 	strcc	r3, [r5, -pc, lsl #24]
    3a5c:	11053006 	tstne	r5, r6
    3a60:	053e5913 	ldreq	r5, [lr, #-2323]!	; 0xfffff6ed
    3a64:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    3a68:	15052e13 	strne	r2, [r5, #-3603]	; 0xfffff1ed
    3a6c:	18053006 	stmdane	r5, {r1, r2, ip, sp}
    3a70:	3c1b0306 	ldccc	3, cr0, [fp], {6}
    3a74:	01000202 	tsteq	r0, r2, lsl #4
    3a78:	00010501 	andeq	r0, r1, r1, lsl #10
    3a7c:	00000205 	andeq	r0, r0, r5, lsl #4
    3a80:	f5030000 			; <UNDEFINED> instruction: 0xf5030000
    3a84:	0106010f 	tsteq	r6, pc, lsl #2
    3a88:	59060505 	stmdbpl	r6, {r0, r2, r8, sl}
    3a8c:	53051313 	movwpl	r1, #21267	; 0x5313
    3a90:	141c0514 	ldrne	r0, [ip], #-1300	; 0xfffffaec
    3a94:	05135f05 	ldreq	r5, [r3, #-3845]	; 0xfffff0fb
    3a98:	0110032f 	tsteq	r0, pc, lsr #6
    3a9c:	05170505 	ldreq	r0, [r7, #-1285]	; 0xfffffafb
    3aa0:	2e01062e 	cfmadd32cs	mvax1, mvfx0, mvfx1, mvfx14
    3aa4:	22060905 	andcs	r0, r6, #81920	; 0x14000
    3aa8:	01061b05 	tsteq	r6, r5, lsl #22
    3aac:	23060905 	movwcs	r0, #26885	; 0x6905
    3ab0:	01060b05 	tsteq	r6, r5, lsl #22
    3ab4:	33031505 	movwcc	r1, #13573	; 0x3505
    3ab8:	063a0520 	ldrteq	r0, [sl], -r0, lsr #10
    3abc:	15050521 	strne	r0, [r5, #-1313]	; 0xfffffadf
    3ac0:	053e3005 	ldreq	r3, [lr, #-5]!
    3ac4:	01051405 	tsteq	r5, r5, lsl #8
    3ac8:	0d051306 	stceq	3, cr1, [r5, #-24]	; 0xffffffe8
    3acc:	3c460306 	mcrrcc	3, 0, r0, r6, cr6
    3ad0:	01061a05 	tsteq	r6, r5, lsl #20
    3ad4:	4c063305 	stcmi	3, cr3, [r6], {5}
    3ad8:	06140d05 	ldreq	r0, [r4], -r5, lsl #26
    3adc:	052f062e 	streq	r0, [pc, #-1582]!	; 34b6 <__HEAP_SIZE+0x24b6>
    3ae0:	0501062a 	streq	r0, [r1, #-1578]	; 0xfffff9d6
    3ae4:	0d052028 	stceq	0, cr2, [r5, #-160]	; 0xffffff60
    3ae8:	0f052606 	svceq	0x00052606
    3aec:	11050106 	tstne	r5, r6, lsl #2
    3af0:	15053e06 	strne	r3, [r5, #-3590]	; 0xfffff1fa
    3af4:	13050106 	movwne	r0, #20742	; 0x5106
    3af8:	03150520 	tsteq	r5, #32, 10	; 0x8000000
    3afc:	06202020 	strteq	r2, [r0], -r0, lsr #32
    3b00:	05206203 	streq	r6, [r0, #-515]!	; 0xfffffdfd
    3b04:	05010619 	streq	r0, [r1, #-1561]	; 0xfffff9e7
    3b08:	19054a17 	stmdbne	r5, {r0, r1, r2, r4, r9, fp, lr}
    3b0c:	1b052406 	blne	14cb2c <__RAM_SIZE+0x4cb2c>
    3b10:	1d050106 	stfnes	f0, [r5, #-24]	; 0xffffffe8
    3b14:	38053e06 	stmdacc	r5, {r1, r2, r9, sl, fp, ip, sp}
    3b18:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    3b1c:	15030611 	strne	r0, [r3, #-1553]	; 0xfffff9ef
    3b20:	002e013c 	eoreq	r0, lr, ip, lsr r1
    3b24:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    3b28:	01040200 	mrseq	r0, R12_usr
    3b2c:	04020001 	streq	r0, [r2], #-1
    3b30:	002e0601 	eoreq	r0, lr, r1, lsl #12
    3b34:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    3b38:	02001505 	andeq	r1, r0, #20971520	; 0x1400000
    3b3c:	00310104 	eorseq	r0, r1, r4, lsl #2
    3b40:	20010402 	andcs	r0, r1, r2, lsl #8
    3b44:	20202020 	eorcs	r2, r0, r0, lsr #32
    3b48:	01022020 	tsteq	r2, r0, lsr #32
    3b4c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    3b50:	02050001 	andeq	r0, r5, #1
    3b54:	00000000 	andeq	r0, r0, r0
    3b58:	0110d803 	tsteq	r0, r3, lsl #16
    3b5c:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    3b60:	13133d06 	tstne	r3, #384	; 0x180
    3b64:	14350513 	ldrtne	r0, [r5], #-1299	; 0xfffffaed
    3b68:	05141c05 	ldreq	r1, [r4, #-3077]	; 0xfffff3fb
    3b6c:	2d05135f 	stccs	3, cr1, [r5, #-380]	; 0xfffffe84
    3b70:	032f0513 			; <UNDEFINED> instruction: 0x032f0513
    3b74:	05050110 	streq	r0, [r5, #-272]	; 0xfffffef0
    3b78:	062e0517 			; <UNDEFINED> instruction: 0x062e0517
    3b7c:	09052e01 	stmdbeq	r5, {r0, r9, sl, fp, sp}
    3b80:	14052306 	strne	r2, [r5], #-774	; 0xfffffcfa
    3b84:	0b050106 	bleq	143fa4 <__RAM_SIZE+0x43fa4>
    3b88:	03150520 	tsteq	r5, #32, 10	; 0x8000000
    3b8c:	3705200e 	strcc	r2, [r5, -lr]
    3b90:	05052106 	streq	r2, [r5, #-262]	; 0xfffffefa
    3b94:	3e2d0515 	mcrcc	5, 1, r0, cr13, cr5, {0}
    3b98:	05140505 	ldreq	r0, [r4, #-1285]	; 0xfffffafb
    3b9c:	05130601 	ldreq	r0, [r3, #-1537]	; 0xfffff9ff
    3ba0:	6b030630 	blvs	c5468 <__HEAP_SIZE+0xc4468>
    3ba4:	160d052e 	strne	r0, [sp], -lr, lsr #10
    3ba8:	01062405 	tsteq	r6, r5, lsl #8
    3bac:	21060d05 	tstcs	r6, r5, lsl #26
    3bb0:	2f062e06 	svccs	0x00062e06
    3bb4:	01062a05 	tsteq	r6, r5, lsl #20
    3bb8:	22060d05 	andcs	r0, r6, #320	; 0x140
    3bbc:	01061505 	tsteq	r6, r5, lsl #10
    3bc0:	00010220 	andeq	r0, r1, r0, lsr #4
    3bc4:	01050101 	tsteq	r5, r1, lsl #2
    3bc8:	00020500 	andeq	r0, r2, r0, lsl #10
    3bcc:	03000000 	movweq	r0, #0
    3bd0:	06011195 			; <UNDEFINED> instruction: 0x06011195
    3bd4:	06050501 	streq	r0, [r5], -r1, lsl #10
    3bd8:	1430052f 	ldrtne	r0, [r0], #-1327	; 0xfffffad1
    3bdc:	05141b05 	ldreq	r1, [r4, #-2821]	; 0xfffff4fb
    3be0:	09051405 	stmdbeq	r5, {r0, r2, sl, ip}
    3be4:	06120530 			; <UNDEFINED> instruction: 0x06120530
    3be8:	06050501 	streq	r0, [r5], -r1, lsl #10
    3bec:	30330522 	eorscc	r0, r3, r2, lsr #10
    3bf0:	05140505 	ldreq	r0, [r4, #-1285]	; 0xfffffafb
    3bf4:	2e130601 	cfmsub32cs	mvax0, mvfx0, mvfx3, mvfx1
    3bf8:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    3bfc:	02050001 	andeq	r0, r5, #1
    3c00:	00000000 	andeq	r0, r0, r0
    3c04:	0111a903 	tsteq	r1, r3, lsl #18
    3c08:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    3c0c:	05132f06 	ldreq	r2, [r3, #-3846]	; 0xfffff0fa
    3c10:	1c051430 	cfstrsne	mvf1, [r5], {48}	; 0x30
    3c14:	14050514 	strne	r0, [r5], #-1300	; 0xfffffaec
    3c18:	05300905 	ldreq	r0, [r0, #-2309]!	; 0xfffff6fb
    3c1c:	0501062d 	streq	r0, [r1, #-1581]	; 0xfffff9d3
    3c20:	12052041 	andne	r2, r5, #65	; 0x41
    3c24:	06050520 	streq	r0, [r5], -r0, lsr #10
    3c28:	30330522 	eorscc	r0, r3, r2, lsr #10
    3c2c:	05140505 	ldreq	r0, [r4, #-1285]	; 0xfffffafb
    3c30:	2e130601 	cfmsub32cs	mvax0, mvfx0, mvfx3, mvfx1
    3c34:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    3c38:	02050001 	andeq	r0, r5, #1
    3c3c:	00000000 	andeq	r0, r0, r0
    3c40:	0111be03 	tsteq	r1, r3, lsl #28
    3c44:	13130505 	tstne	r3, #20971520	; 0x1400000
    3c48:	05143705 	ldreq	r3, [r4, #-1797]	; 0xfffff8fb
    3c4c:	0505141c 	streq	r1, [r5, #-1052]	; 0xfffffbe4
    3c50:	060e0513 			; <UNDEFINED> instruction: 0x060e0513
    3c54:	063a0501 	ldrteq	r0, [sl], -r1, lsl #10
    3c58:	14050522 	strne	r0, [r5], #-1314	; 0xfffffade
    3c5c:	13060105 	movwne	r0, #24837	; 0x6105
    3c60:	01000102 	tsteq	r0, r2, lsl #2
    3c64:	00010501 	andeq	r0, r1, r1, lsl #10
    3c68:	00000205 	andeq	r0, r0, r5, lsl #4
    3c6c:	ce030000 	cdpgt	0, 0, cr0, cr3, cr0, {0}
    3c70:	01060111 	tsteq	r6, r1, lsl r1
    3c74:	21060505 	tstcs	r6, r5, lsl #10
    3c78:	05142605 	ldreq	r2, [r4, #-1541]	; 0xfffff9fb
    3c7c:	2105141c 	tstcs	r5, ip, lsl r4
    3c80:	03090513 	movweq	r0, #38163	; 0x9513
    3c84:	14050112 	strne	r0, [r5], #-274	; 0xfffffeee
    3c88:	0b050106 	bleq	1440a8 <__RAM_SIZE+0x440a8>
    3c8c:	0301052e 	movweq	r0, #5422	; 0x152e
    3c90:	0d052012 	stceq	0, cr2, [r5, #-72]	; 0xffffffb8
    3c94:	20700306 	rsbscs	r0, r0, r6, lsl #6
    3c98:	05322505 	ldreq	r2, [r2, #-1285]!	; 0xfffffafb
    3c9c:	010b031f 	tsteq	fp, pc, lsl r3
    3ca0:	13060105 	movwne	r0, #24837	; 0x6105
    3ca4:	01000102 	tsteq	r0, r2, lsl #2
    3ca8:	00010501 	andeq	r0, r1, r1, lsl #10
    3cac:	00000205 	andeq	r0, r0, r5, lsl #4
    3cb0:	a7030000 	strge	r0, [r3, -r0]
    3cb4:	31050112 	tstcc	r5, r2, lsl r1
    3cb8:	14500513 	ldrbne	r0, [r0], #-1299	; 0xfffffaed
    3cbc:	05140505 	ldreq	r0, [r4, #-1285]	; 0xfffffafb
    3cc0:	20130601 	andscs	r0, r3, r1, lsl #12
    3cc4:	01000102 	tsteq	r0, r2, lsl #2
    3cc8:	00010501 	andeq	r0, r1, r1, lsl #10
    3ccc:	00000205 	andeq	r0, r0, r5, lsl #4
    3cd0:	b1030000 	mrslt	r0, (UNDEF: 3)
    3cd4:	2f050112 	svccs	0x00050112
    3cd8:	144c0513 	strbne	r0, [ip], #-1299	; 0xfffffaed
    3cdc:	05140505 	ldreq	r0, [r4, #-1285]	; 0xfffffafb
    3ce0:	20130601 	andscs	r0, r3, r1, lsl #12
    3ce4:	01000102 	tsteq	r0, r2, lsl #2
    3ce8:	00010501 	andeq	r0, r1, r1, lsl #10
    3cec:	00000205 	andeq	r0, r0, r5, lsl #4
    3cf0:	cb030000 	blgt	c3cf8 <__HEAP_SIZE+0xc2cf8>
    3cf4:	05050114 	streq	r0, [r5, #-276]	; 0xfffffeec
    3cf8:	33051313 	movwcc	r1, #21267	; 0x5313
    3cfc:	141c0514 	ldrne	r0, [ip], #-1300	; 0xfffffaec
    3d00:	05140505 	ldreq	r0, [r4, #-1285]	; 0xfffffafb
    3d04:	05010610 	streq	r0, [r1, #-1552]	; 0xfffff9f0
    3d08:	11052007 	tstne	r5, r7
    3d0c:	05242022 	streq	r2, [r4, #-34]!	; 0xffffffde
    3d10:	05230635 	streq	r0, [r3, #-1589]!	; 0xfffff9cb
    3d14:	01051405 	tsteq	r5, r5, lsl #8
    3d18:	01021306 	tsteq	r2, r6, lsl #6
    3d1c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    3d20:	02050001 	andeq	r0, r5, #1
    3d24:	00000000 	andeq	r0, r0, r0
    3d28:	0114f803 	tsteq	r4, r3, lsl #16	; <UNPREDICTABLE>
    3d2c:	13130505 	tstne	r3, #20971520	; 0x1400000
    3d30:	05143205 	ldreq	r3, [r4, #-517]	; 0xfffffdfb
    3d34:	0505141c 	streq	r1, [r5, #-1052]	; 0xfffffbe4
    3d38:	06100514 			; <UNDEFINED> instruction: 0x06100514
    3d3c:	202e0501 	eorcs	r0, lr, r1, lsl #10
    3d40:	05200705 	streq	r0, [r0, #-1797]!	; 0xfffff8fb
    3d44:	34053411 	strcc	r3, [r5], #-1041	; 0xfffffbef
    3d48:	05052306 	streq	r2, [r5, #-774]	; 0xfffffcfa
    3d4c:	06010514 			; <UNDEFINED> instruction: 0x06010514
    3d50:	03110513 	tsteq	r1, #79691776	; 0x4c00000
    3d54:	02202076 	eoreq	r2, r0, #118	; 0x76
    3d58:	01010001 	tsteq	r1, r1
    3d5c:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    3d60:	0023cc02 	eoreq	ip, r3, r2, lsl #24
    3d64:	18be0310 	ldmne	lr!, {r4, r8, r9}
    3d68:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    3d6c:	054b0609 	strbeq	r0, [fp, #-1545]	; 0xfffff9f7
    3d70:	0905145d 	stmdbeq	r5, {r0, r2, r3, r4, r6, sl, ip}
    3d74:	2e011003 	cdpcs	0, 0, cr1, cr1, cr3, {0}
    3d78:	03040200 	movweq	r0, #16896	; 0x4200
    3d7c:	04020066 	streq	r0, [r2], #-102	; 0xffffff9a
    3d80:	02006606 	andeq	r6, r0, #6291456	; 0x600000
    3d84:	05300604 	ldreq	r0, [r0, #-1540]!	; 0xfffff9fc
    3d88:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    3d8c:	05010606 	streq	r0, [r1, #-1542]	; 0xfffff9fa
    3d90:	0402000b 	streq	r0, [r2], #-11
    3d94:	25052006 	strcs	r2, [r5, #-6]
    3d98:	09052706 	stmdbeq	r5, {r1, r2, r8, r9, sl, sp}
    3d9c:	3e350515 	mrccc	5, 1, r0, cr5, cr5, {0}
    3da0:	13060505 	movwne	r0, #25861	; 0x6505
    3da4:	02000905 	andeq	r0, r0, #81920	; 0x14000
    3da8:	03060104 	movweq	r0, #24836	; 0x6104
    3dac:	02002071 	andeq	r2, r0, #113	; 0x71
    3db0:	054a0404 	strbeq	r0, [sl, #-1028]	; 0xfffffbfc
    3db4:	07024f0d 	streq	r4, [r2, -sp, lsl #30]
    3db8:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    3dbc:	02050005 	andeq	r0, r5, #5
    3dc0:	00000000 	andeq	r0, r0, r0
    3dc4:	0118e803 	tsteq	r8, r3, lsl #16
    3dc8:	09050106 	stmdbeq	r5, {r1, r2, r8}
    3dcc:	39052106 	stmdbcc	r5, {r1, r2, r8, sp}
    3dd0:	14090514 	strne	r0, [r9], #-1300	; 0xfffffaec
    3dd4:	01061305 	tsteq	r6, r5, lsl #6
    3dd8:	4c062f05 	stcmi	15, cr2, [r6], {5}
    3ddc:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    3de0:	02130605 	andseq	r0, r3, #5242880	; 0x500000
    3de4:	01010001 	tsteq	r1, r1
    3de8:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    3dec:	00000002 	andeq	r0, r0, r2
    3df0:	18fb0300 	ldmne	fp!, {r8, r9}^
    3df4:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    3df8:	053d0609 	ldreq	r0, [sp, #-1545]!	; 0xfffff9f7
    3dfc:	09051442 	stmdbeq	r5, {r1, r6, sl, ip}
    3e00:	300d0514 	andcc	r0, sp, r4, lsl r5
    3e04:	01063405 	tsteq	r6, r5, lsl #8
    3e08:	05200f05 	streq	r0, [r0, #-3845]!	; 0xfffff0fb
    3e0c:	09052319 	stmdbeq	r5, {r0, r3, r4, r8, r9, sp}
    3e10:	200e0306 	andcs	r0, lr, r6, lsl #6
    3e14:	05302e05 	ldreq	r2, [r0, #-3589]!	; 0xfffff1fb
    3e18:	05051409 	streq	r1, [r5, #-1033]	; 0xfffffbf7
    3e1c:	12051306 	andne	r1, r5, #402653184	; 0x18000000
    3e20:	2e6f0306 	cdpcs	3, 6, cr0, cr15, cr6, {0}
    3e24:	01063905 	tsteq	r6, r5, lsl #18
    3e28:	05201405 	streq	r1, [r0, #-1029]!	; 0xfffffbfb
    3e2c:	05280611 	streq	r0, [r8, #-1553]!	; 0xfffff9ef
    3e30:	0501064a 	streq	r0, [r1, #-1610]	; 0xfffff9b6
    3e34:	05210611 	streq	r0, [r1, #-1553]!	; 0xfffff9ef
    3e38:	20010619 	andcs	r0, r1, r9, lsl r6
    3e3c:	0102201b 	tsteq	r2, fp, lsl r0
    3e40:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    3e44:	02050005 	andeq	r0, r5, #5
    3e48:	00000000 	andeq	r0, r0, r0
    3e4c:	0119a103 	tsteq	r9, r3, lsl #2
    3e50:	13130905 	tstne	r3, #81920	; 0x14000
    3e54:	05144705 	ldreq	r4, [r4, #-1797]	; 0xfffff8fb
    3e58:	1f051409 	svcne	0x00051409
    3e5c:	0b050106 	bleq	14427c <__RAM_SIZE+0x4427c>
    3e60:	31150520 	tstcc	r5, r0, lsr #10
    3e64:	17030505 	strne	r0, [r3, -r5, lsl #10]
    3e68:	20600320 	rsbcs	r0, r0, r0, lsr #6
    3e6c:	03060e05 	movweq	r0, #28165	; 0x6e05
    3e70:	24052e0b 	strcs	r2, [r5], #-3595	; 0xfffff1f5
    3e74:	10050106 	andne	r0, r5, r6, lsl #2
    3e78:	25150520 	ldrcs	r0, [r5, #-1312]	; 0xfffffae0
    3e7c:	03063305 	movweq	r3, #25349	; 0x6305
    3e80:	0905200d 	stmdbeq	r5, {r0, r2, r3, sp}
    3e84:	06050514 			; <UNDEFINED> instruction: 0x06050514
    3e88:	060d0513 			; <UNDEFINED> instruction: 0x060d0513
    3e8c:	05207403 	streq	r7, [r0, #-1027]!	; 0xfffffbfd
    3e90:	39053111 	stmdbcc	r5, {r0, r4, r8, ip, sp}
    3e94:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    3e98:	052f3006 	streq	r3, [pc, #-6]!	; 3e9a <__HEAP_SIZE+0x2e9a>
    3e9c:	02010615 	andeq	r0, r1, #22020096	; 0x1500000
    3ea0:	01010002 	tsteq	r1, r2
    3ea4:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    3ea8:	00000002 	andeq	r0, r0, r2
    3eac:	19ca0300 	stmibne	sl, {r8, r9}^
    3eb0:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    3eb4:	053d0609 	ldreq	r0, [sp, #-1545]!	; 0xfffff9f7
    3eb8:	05010620 	streq	r0, [r1, #-1568]	; 0xfffff9e0
    3ebc:	05300642 	ldreq	r0, [r0, #-1602]!	; 0xfffff9be
    3ec0:	12051409 	andne	r1, r5, #150994944	; 0x9000000
    3ec4:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    3ec8:	05300633 	ldreq	r0, [r0, #-1587]!	; 0xfffff9cd
    3ecc:	05051409 	streq	r1, [r5, #-1033]	; 0xfffffbf7
    3ed0:	04021306 	streq	r1, [r2], #-774	; 0xfffffcfa
    3ed4:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    3ed8:	02050005 	andeq	r0, r5, #5
    3edc:	00000000 	andeq	r0, r0, r0
    3ee0:	0119dc03 	tsteq	r9, r3, lsl #24
    3ee4:	09050106 	stmdbeq	r5, {r1, r2, r8}
    3ee8:	20052f06 	andcs	r2, r5, r6, lsl #30
    3eec:	3b050106 	blcc	14430c <__RAM_SIZE+0x4430c>
    3ef0:	09053006 	stmdbeq	r5, {r1, r2, ip, sp}
    3ef4:	06120514 			; <UNDEFINED> instruction: 0x06120514
    3ef8:	063a0501 	ldrteq	r0, [sl], -r1, lsl #10
    3efc:	1409053e 	strne	r0, [r9], #-1342	; 0xfffffac2
    3f00:	13060505 	movwne	r0, #25861	; 0x6505
    3f04:	01000402 	tsteq	r0, r2, lsl #8
    3f08:	00322401 	eorseq	r2, r2, r1, lsl #8
    3f0c:	aa000300 	bge	4b14 <__HEAP_SIZE+0x3b14>
    3f10:	02000002 	andeq	r0, r0, #2
    3f14:	0d0efb01 	vstreq	d15, [lr, #-4]
    3f18:	01010100 	mrseq	r0, (UNDEF: 17)
    3f1c:	00000001 	andeq	r0, r0, r1
    3f20:	01000001 	tsteq	r0, r1
    3f24:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    3f28:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    3f2c:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    3f30:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    3f34:	6572462f 	ldrbvs	r4, [r2, #-1583]!	; 0xfffff9d1
    3f38:	4f545265 	svcmi	0x00545265
    3f3c:	3a630053 	bcc	18c4090 <__RAM_SIZE+0x17c4090>
    3f40:	6573755c 	ldrbvs	r7, [r3, #-1372]!	; 0xfffffaa4
    3f44:	785c7372 	ldmdavc	ip, {r1, r4, r5, r6, r8, r9, ip, sp, lr}^
    3f48:	6e6f6469 	cdpvs	4, 6, cr6, cr15, cr9, {3}
    3f4c:	6f72705c 	svcvs	0x0072705c
    3f50:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
    3f54:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    3f58:	6363675f 	cmnvs	r3, #24903680	; 0x17c0000
    3f5c:	6363675c 	cmnvs	r3, #92, 14	; 0x1700000
    3f60:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
    3f64:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    3f68:	61652d65 	cmnvs	r5, r5, ror #26
    3f6c:	312d6962 			; <UNDEFINED> instruction: 0x312d6962
    3f70:	2d332e30 	ldccs	14, cr2, [r3, #-192]!	; 0xffffff40
    3f74:	31323032 	teqcc	r2, r2, lsr r0
    3f78:	5c30312e 	ldfpls	f3, [r0], #-184	; 0xffffff48
    3f7c:	5c62696c 			; <UNDEFINED> instruction: 0x5c62696c
    3f80:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
    3f84:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    3f88:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    3f8c:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    3f90:	30315c69 	eorscc	r5, r1, r9, ror #24
    3f94:	312e332e 			; <UNDEFINED> instruction: 0x312e332e
    3f98:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
    3f9c:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    3fa0:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
    3fa4:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
    3fa8:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
    3fac:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
    3fb0:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
    3fb4:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
    3fb8:	5f6d7261 	svcpl	0x006d7261
    3fbc:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
    3fc0:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
    3fc4:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    3fc8:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    3fcc:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    3fd0:	30312d69 	eorscc	r2, r1, r9, ror #26
    3fd4:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
    3fd8:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
    3fdc:	615c3031 	cmpvs	ip, r1, lsr r0
    3fe0:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    3fe4:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    3fe8:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    3fec:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
    3ff0:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    3ff4:	63616d5c 	cmnvs	r1, #92, 26	; 0x1700
    3ff8:	656e6968 	strbvs	r6, [lr, #-2408]!	; 0xfffff698
    3ffc:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
    4000:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
    4004:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
    4008:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
    400c:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
    4010:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
    4014:	5f6d7261 	svcpl	0x006d7261
    4018:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
    401c:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
    4020:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    4024:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    4028:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    402c:	30312d69 	eorscc	r2, r1, r9, ror #26
    4030:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
    4034:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
    4038:	615c3031 	cmpvs	ip, r1, lsr r0
    403c:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    4040:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    4044:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    4048:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
    404c:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    4050:	7379735c 	cmnvc	r9, #92, 6	; 0x70000001
    4054:	2f2e2e00 	svccs	0x002e2e00
    4058:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    405c:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    4060:	6f747262 	svcvs	0x00747262
    4064:	72462f73 	subvc	r2, r6, #460	; 0x1cc
    4068:	54526565 	ldrbpl	r6, [r2], #-1381	; 0xfffffa9b
    406c:	692f534f 	stmdbvs	pc!, {r0, r1, r2, r3, r6, r8, r9, ip, lr}	; <UNPREDICTABLE>
    4070:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    4074:	2e006564 	cfsh32cs	mvfx6, mvfx0, #52
    4078:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    407c:	2f2e2e2f 	svccs	0x002e2e2f
    4080:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
    4084:	2f736f74 	svccs	0x00736f74
    4088:	65657246 	strbvs	r7, [r5, #-582]!	; 0xfffffdba
    408c:	534f5452 	movtpl	r5, #62546	; 0xf452
    4090:	726f702f 	rsbvc	r7, pc, #47	; 0x2f
    4094:	6c626174 	stfvse	f6, [r2], #-464	; 0xfffffe30
    4098:	43472f65 	movtmi	r2, #32613	; 0x7f65
    409c:	52412f43 	subpl	r2, r1, #268	; 0x10c
    40a0:	4d435f4d 	stclmi	15, cr5, [r3, #-308]	; 0xfffffecc
    40a4:	4e5f3333 	mrcmi	3, 2, r3, cr15, cr3, {1}
    40a8:	6e2f5a54 			; <UNDEFINED> instruction: 0x6e2f5a54
    40ac:	735f6e6f 	cmpvc	pc, #1776	; 0x6f0
    40b0:	72756365 	rsbsvc	r6, r5, #-1811939327	; 0x94000001
    40b4:	3a630065 	bcc	18c4250 <__RAM_SIZE+0x17c4250>
    40b8:	6573755c 	ldrbvs	r7, [r3, #-1372]!	; 0xfffffaa4
    40bc:	785c7372 	ldmdavc	ip, {r1, r4, r5, r6, r8, r9, ip, sp, lr}^
    40c0:	6e6f6469 	cdpvs	4, 6, cr6, cr15, cr9, {3}
    40c4:	6f72705c 	svcvs	0x0072705c
    40c8:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
    40cc:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    40d0:	6363675f 	cmnvs	r3, #24903680	; 0x17c0000
    40d4:	6363675c 	cmnvs	r3, #92, 14	; 0x1700000
    40d8:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
    40dc:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    40e0:	61652d65 	cmnvs	r5, r5, ror #26
    40e4:	312d6962 			; <UNDEFINED> instruction: 0x312d6962
    40e8:	2d332e30 	ldccs	14, cr2, [r3, #-192]!	; 0xffffff40
    40ec:	31323032 	teqcc	r2, r2, lsr r0
    40f0:	5c30312e 	ldfpls	f3, [r0], #-184	; 0xffffff48
    40f4:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    40f8:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    40fc:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    4100:	6e695c69 	cdpvs	12, 6, cr5, cr9, cr9, {3}
    4104:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    4108:	74000065 	strvc	r0, [r0], #-101	; 0xffffff9b
    410c:	736b7361 	cmnvc	fp, #-2080374783	; 0x84000001
    4110:	0100632e 	tsteq	r0, lr, lsr #6
    4114:	74730000 	ldrbtvc	r0, [r3], #-0
    4118:	66656464 	strbtvs	r6, [r5], -r4, ror #8
    411c:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    4120:	645f0000 	ldrbvs	r0, [pc], #-0	; 4128 <__HEAP_SIZE+0x3128>
    4124:	75616665 	strbvc	r6, [r1, #-1637]!	; 0xfffff99b
    4128:	745f746c 	ldrbvc	r7, [pc], #-1132	; 4130 <__HEAP_SIZE+0x3130>
    412c:	73657079 	cmnvc	r5, #121	; 0x79
    4130:	0300682e 	movweq	r6, #2094	; 0x82e
    4134:	735f0000 	cmpvc	pc, #0
    4138:	6e696474 	mcrvs	4, 3, r6, cr9, cr4, {3}
    413c:	00682e74 	rsbeq	r2, r8, r4, ror lr
    4140:	70000004 	andvc	r0, r0, r4
    4144:	646a6f72 	strbtvs	r6, [sl], #-3954	; 0xfffff08e
    4148:	2e736665 	cdpcs	6, 7, cr6, cr3, cr5, {3}
    414c:	00050068 	andeq	r0, r5, r8, rrx
    4150:	726f7000 	rsbvc	r7, pc, #0
    4154:	63616d74 	cmnvs	r1, #116, 26	; 0x1d00
    4158:	6f636f72 	svcvs	0x00636f72
    415c:	6e6f6d6d 	cdpvs	13, 6, cr6, cr15, cr13, {3}
    4160:	0600682e 	streq	r6, [r0], -lr, lsr #16
    4164:	72460000 	subvc	r0, r6, #0
    4168:	54526565 	ldrbpl	r6, [r2], #-1381	; 0xfffffa9b
    416c:	682e534f 	stmdavs	lr!, {r0, r1, r2, r3, r6, r8, r9, ip, lr}
    4170:	00000500 	andeq	r0, r0, r0, lsl #10
    4174:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
    4178:	0500682e 	streq	r6, [r0, #-2094]	; 0xfffff7d2
    417c:	61740000 	cmnvs	r4, r0
    4180:	682e6b73 	stmdavs	lr!, {r0, r1, r4, r5, r6, r8, r9, fp, sp, lr}
    4184:	00000500 	andeq	r0, r0, r0, lsl #10
    4188:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
    418c:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
    4190:	0500682e 	streq	r6, [r0, #-2094]	; 0xfffff7d2
    4194:	69740000 	ldmdbvs	r4!, {}^	; <UNPREDICTABLE>
    4198:	7372656d 	cmnvc	r2, #457179136	; 0x1b400000
    419c:	0500682e 	streq	r6, [r0, #-2094]	; 0xfffff7d2
    41a0:	74730000 	ldrbtvc	r0, [r3], #-0
    41a4:	676e6972 			; <UNDEFINED> instruction: 0x676e6972
    41a8:	0700682e 	streq	r6, [r0, -lr, lsr #16]
    41ac:	623c0000 	eorsvs	r0, ip, #0
    41b0:	746c6975 	strbtvc	r6, [ip], #-2421	; 0xfffff68b
    41b4:	3e6e692d 	vmulcc.f16	s13, s28, s27	; <UNPREDICTABLE>
    41b8:	00000000 	andeq	r0, r0, r0
    41bc:	00050500 	andeq	r0, r5, r0, lsl #10
    41c0:	00000205 	andeq	r0, r0, r5, lsl #4
    41c4:	d3030000 	movwle	r0, #12288	; 0x3000
    41c8:	09050119 	stmdbeq	r5, {r0, r3, r4, r8}
    41cc:	1e051313 	mcrne	3, 0, r1, cr5, cr3, {0}
    41d0:	15090518 	strne	r0, [r9, #-1304]	; 0xfffffae8
    41d4:	01060d05 	tsteq	r6, r5, lsl #26
    41d8:	05200b05 	streq	r0, [r0, #-2821]!	; 0xfffff4fb
    41dc:	3c760314 	ldclcc	3, cr0, [r6], #-80	; 0xffffffb0
    41e0:	060d0520 	streq	r0, [sp], -r0, lsr #10
    41e4:	05200d03 	streq	r0, [r0, #-3331]!	; 0xfffff2fd
    41e8:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    41ec:	1405200f 	strne	r2, [r5], #-15
    41f0:	203c7303 	eorscs	r7, ip, r3, lsl #6
    41f4:	03061105 	movweq	r1, #24837	; 0x6105
    41f8:	13052011 	movwne	r2, #20497	; 0x5011
    41fc:	14050106 	strne	r0, [r5], #-262	; 0xfffffefa
    4200:	20206f03 	eorcs	r6, r0, r3, lsl #30
    4204:	03061d05 	movweq	r1, #27909	; 0x6d05
    4208:	35052020 	strcc	r2, [r5, #-32]	; 0xffffffe0
    420c:	1f050106 	svcne	0x00050106
    4210:	006e054a 	rsbeq	r0, lr, sl, asr #10
    4214:	06020402 	streq	r0, [r2], -r2, lsl #8
    4218:	006f052c 	rsbeq	r0, pc, ip, lsr #10
    421c:	06020402 	streq	r0, [r2], -r2, lsl #8
    4220:	04020001 	streq	r0, [r2], #-1
    4224:	20052002 	andcs	r2, r5, r2
    4228:	00340520 	eorseq	r0, r4, r0, lsr #10
    422c:	06010402 	streq	r0, [r1], -r2, lsl #8
    4230:	00190520 	andseq	r0, r9, r0, lsr #10
    4234:	06010402 	streq	r0, [r1], -r2, lsl #8
    4238:	2c210501 	cfstr32cs	mvfx0, [r1], #-4
    423c:	26290520 	strtcs	r0, [r9], -r0, lsr #10
    4240:	06250520 	strteq	r0, [r5], -r0, lsr #10
    4244:	05011703 	streq	r1, [r1, #-1795]	; 0xfffff8fd
    4248:	05051509 	streq	r1, [r5, #-1289]	; 0xfffffaf7
    424c:	05021306 	streq	r1, [r2, #-774]	; 0xfffffcfa
    4250:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    4254:	02050005 	andeq	r0, r5, #5
    4258:	10002420 	andne	r2, r0, r0, lsr #8
    425c:	011eb603 	tsteq	lr, r3, lsl #12
    4260:	13130905 	tstne	r3, #81920	; 0x14000
    4264:	051a0d05 	ldreq	r0, [sl, #-3333]	; 0xfffff2fb
    4268:	05010624 	streq	r0, [r1, #-1572]	; 0xfffff9dc
    426c:	2c052e0f 	stccs	14, cr2, [r5], {15}
    4270:	06090522 	streq	r0, [r9], -r2, lsr #10
    4274:	05201303 	streq	r1, [r0, #-771]!	; 0xfffffcfd
    4278:	05010619 	streq	r0, [r1, #-1561]	; 0xfffff9e7
    427c:	0e053c0b 	cdpeq	12, 0, cr3, cr5, cr11, {0}
    4280:	12052406 	andne	r2, r5, #100663296	; 0x6000000
    4284:	10050106 	andne	r0, r5, r6, lsl #2
    4288:	060e052e 	streq	r0, [lr], -lr, lsr #10
    428c:	06100535 			; <UNDEFINED> instruction: 0x06100535
    4290:	060d0501 	streq	r0, [sp], -r1, lsl #10
    4294:	05200903 	streq	r0, [r0, #-2307]!	; 0xfffff6fd
    4298:	20010615 	andcs	r0, r1, r5, lsl r6
    429c:	21060d05 	tstcs	r6, r5, lsl #26
    42a0:	2e061505 	cfsh32cs	mvfx1, mvfx6, #5
    42a4:	206d0320 	rsbcs	r0, sp, r0, lsr #6
    42a8:	03060905 	movweq	r0, #26885	; 0x6905
    42ac:	05052016 	streq	r2, [r5, #-22]	; 0xffffffea
    42b0:	0c021306 	stceq	3, cr1, [r2], {6}
    42b4:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    42b8:	02050005 	andeq	r0, r5, #5
    42bc:	00000000 	andeq	r0, r0, r0
    42c0:	0120df03 			; <UNDEFINED> instruction: 0x0120df03
    42c4:	09050106 	stmdbeq	r5, {r1, r2, r8}
    42c8:	13132106 	tstne	r3, #-2147483647	; 0x80000001
    42cc:	05131313 	ldreq	r1, [r3, #-787]	; 0xfffffced
    42d0:	0501061c 	streq	r0, [r1, #-1564]	; 0xfffff9e4
    42d4:	16210609 	strtne	r0, [r1], -r9, lsl #12
    42d8:	01060d05 	tsteq	r6, r5, lsl #26
    42dc:	052e0b05 	streq	r0, [lr, #-2821]!	; 0xfffff4fb
    42e0:	0530060d 	ldreq	r0, [r0, #-1549]!	; 0xfffff9f3
    42e4:	0501061d 	streq	r0, [r1, #-1565]	; 0xfffff9e3
    42e8:	20740311 	rsbscs	r0, r4, r1, lsl r3
    42ec:	0c030d05 	stceq	13, cr0, [r3], {5}
    42f0:	03220520 			; <UNDEFINED> instruction: 0x03220520
    42f4:	11052018 	tstne	r5, r8, lsl r0
    42f8:	200e0306 	andcs	r0, lr, r6, lsl #6
    42fc:	01061305 	tsteq	r6, r5, lsl #6
    4300:	02005805 	andeq	r5, r0, #327680	; 0x50000
    4304:	03060204 	movweq	r0, #25092	; 0x6204
    4308:	6305205a 	movwvs	r2, #20570	; 0x505a
    430c:	02040200 	andeq	r0, r4, #0, 4
    4310:	3d050106 	stfccs	f0, [r5, #-24]	; 0xffffffe8
    4314:	01040200 	mrseq	r0, R12_usr
    4318:	0d052006 	stceq	0, cr2, [r5, #-24]	; 0xffffffe8
    431c:	01040200 	mrseq	r0, R12_usr
    4320:	11050106 	tstne	r5, r6, lsl #2
    4324:	17053306 	strne	r3, [r5, -r6, lsl #6]
    4328:	11050106 	tstne	r5, r6, lsl #2
    432c:	05142406 	ldreq	r2, [r4, #-1030]	; 0xfffffbfa
    4330:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    4334:	0402002d 	streq	r0, [r2], #-45	; 0xffffffd3
    4338:	05200601 	streq	r0, [r0, #-1537]!	; 0xfffff9ff
    433c:	04020011 	streq	r0, [r2], #-17	; 0xffffffef
    4340:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    4344:	05300615 	ldreq	r0, [r0, #-1557]!	; 0xfffff9eb
    4348:	0501061f 	streq	r0, [r1, #-1567]	; 0xfffff9e1
    434c:	053e0615 	ldreq	r0, [lr, #-1557]!	; 0xfffff9eb
    4350:	05010633 	streq	r0, [r1, #-1587]	; 0xfffff9cd
    4354:	1a052e17 	bne	14fbb8 <__RAM_SIZE+0x4fbb8>
    4358:	1c053306 	stcne	3, cr3, [r5], {6}
    435c:	31050106 	tstcc	r5, r6, lsl #2
    4360:	02040200 	andeq	r0, r4, #0, 4
    4364:	2e090306 	cdpcs	3, 0, cr0, cr9, cr6, {0}
    4368:	02001505 	andeq	r1, r0, #20971520	; 0x1400000
    436c:	05150204 	ldreq	r0, [r5, #-516]	; 0xfffffdfc
    4370:	0402005a 	streq	r0, [r2], #-90	; 0xffffffa6
    4374:	016b0302 	cmneq	fp, r2, lsl #6
    4378:	02005b05 	andeq	r5, r0, #5120	; 0x1400
    437c:	01060204 	tsteq	r6, r4, lsl #4
    4380:	02040200 	andeq	r0, r4, #0, 4
    4384:	03110520 	tsteq	r1, #32, 10	; 0x8000000
    4388:	25052069 	strcs	r2, [r5, #-105]	; 0xffffff97
    438c:	203b0306 	eorscs	r0, fp, r6, lsl #6
    4390:	05150905 	ldreq	r0, [r5, #-2309]	; 0xfffff6fb
    4394:	20130605 	andscs	r0, r3, r5, lsl #12
    4398:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    439c:	02050005 	andeq	r0, r5, #5
    43a0:	00000000 	andeq	r0, r0, r0
    43a4:	0131a303 	teqeq	r1, r3, lsl #6
    43a8:	14130905 	ldrne	r0, [r3], #-2309	; 0xfffff6fb
    43ac:	10062005 	andne	r2, r6, r5
    43b0:	05220e05 	streq	r0, [r2, #-3589]!	; 0xfffff1fb
    43b4:	0522060d 	streq	r0, [r2, #-1549]!	; 0xfffff9f3
    43b8:	0501061a 	streq	r0, [r1, #-1562]	; 0xfffff9e6
    43bc:	0521060d 	streq	r0, [r1, #-1549]!	; 0xfffff9f3
    43c0:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
    43c4:	051d060e 	ldreq	r0, [sp, #-1550]	; 0xfffff9f2
    43c8:	05010610 	streq	r0, [r1, #-1552]	; 0xfffff9f0
    43cc:	0905200e 	stmdbeq	r5, {r1, r2, r3, sp}
    43d0:	05143406 	ldreq	r3, [r4, #-1030]	; 0xfffffbfa
    43d4:	20130605 	andscs	r0, r3, r5, lsl #12
    43d8:	01000102 	tsteq	r0, r2, lsl #2
    43dc:	00010501 	andeq	r0, r1, r1, lsl #10
    43e0:	24600205 	strbtcs	r0, [r0], #-517	; 0xfffffdfb
    43e4:	b8031000 	stmdalt	r3, {ip}
    43e8:	05050132 	streq	r0, [r5, #-306]	; 0xfffffece
    43ec:	06090513 			; <UNDEFINED> instruction: 0x06090513
    43f0:	3c070501 	cfstr32cc	mvfx0, [r7], {1}
    43f4:	26060905 	strcs	r0, [r6], -r5, lsl #18
    43f8:	01061e05 	tsteq	r6, r5, lsl #28
    43fc:	60060905 	andvs	r0, r6, r5, lsl #18
    4400:	01062005 	tsteq	r6, r5
    4404:	054a1e05 	strbeq	r1, [sl, #-3589]	; 0xfffff1fb
    4408:	05023001 	streq	r3, [r2, #-1]
    440c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    4410:	02050001 	andeq	r0, r5, #1
    4414:	10002488 	andne	r2, r0, r8, lsl #9
    4418:	010e8803 	tsteq	lr, r3, lsl #16
    441c:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    4420:	05139f06 	ldreq	r9, [r3, #-3846]	; 0xfffff0fa
    4424:	01150309 	tsteq	r5, r9, lsl #6
    4428:	01061205 	tsteq	r6, r5, lsl #4
    442c:	05202020 	streq	r2, [r0, #-32]!	; 0xffffffe0
    4430:	0a030609 	beq	c5c5c <__HEAP_SIZE+0xc4c5c>
    4434:	0623052e 	strteq	r0, [r3], -lr, lsr #10
    4438:	202c0501 	eorcs	r0, ip, r1, lsl #10
    443c:	053c1605 	ldreq	r1, [ip, #-1541]!	; 0xfffff9fb
    4440:	052f0609 	streq	r0, [pc, #-1545]!	; 3e3f <__HEAP_SIZE+0x2e3f>
    4444:	05010657 	streq	r0, [r1, #-1623]	; 0xfffff9a9
    4448:	31060181 	smlabbcc	r6, r1, r1, r0
    444c:	19030505 	stmdbne	r3, {r0, r2, r8, sl}
    4450:	06070501 	streq	r0, [r7], -r1, lsl #10
    4454:	22100501 	andscs	r0, r0, #4194304	; 0x400000
    4458:	02002505 	andeq	r2, r0, #20971520	; 0x1400000
    445c:	2e060104 	adfcss	f0, f6, f4
    4460:	02000905 	andeq	r0, r0, #81920	; 0x14000
    4464:	01060104 	tsteq	r6, r4, lsl #2
    4468:	3e060d05 	cdpcc	13, 0, cr0, cr6, cr5, {0}
    446c:	01062f05 	tsteq	r6, r5, lsl #30
    4470:	052e2705 	streq	r2, [lr, #-1797]!	; 0xfffff8fb
    4474:	054f060d 	strbeq	r0, [pc, #-1549]	; 3e6f <__HEAP_SIZE+0x2e6f>
    4478:	05010617 	streq	r0, [r1, #-1559]	; 0xfffff9e9
    447c:	29052e0f 	stmdbcs	r5, {r0, r1, r2, r3, r9, sl, fp, sp}
    4480:	02040200 	andeq	r0, r4, #0, 4
    4484:	52052606 	andpl	r2, r5, #6291456	; 0x600000
    4488:	02040200 	andeq	r0, r4, #0, 4
    448c:	05017303 	streq	r7, [r1, #-771]	; 0xfffffcfd
    4490:	04020053 	streq	r0, [r2], #-83	; 0xffffffad
    4494:	00010602 	andeq	r0, r1, r2, lsl #12
    4498:	2e020402 	cdpcs	4, 0, cr0, cr2, cr2, {0}
    449c:	03060905 	movweq	r0, #26885	; 0x6905
    44a0:	3e052013 	mcrcc	0, 0, r2, cr5, cr3, {0}
    44a4:	21050106 	tstcs	r5, r6, lsl #2
    44a8:	36054006 	strcc	r4, [r5], -r6
    44ac:	14050516 	strne	r0, [r5], #-1302	; 0xfffffaea
    44b0:	01060705 	tsteq	r6, r5, lsl #14
    44b4:	05301405 	ldreq	r1, [r0, #-1029]!	; 0xfffffbfb
    44b8:	05240621 	streq	r0, [r4, #-1569]!	; 0xfffff9df
    44bc:	1a051505 	bne	1498d8 <__RAM_SIZE+0x498d8>
    44c0:	09050106 	stmdbeq	r5, {r1, r2, r8}
    44c4:	22052306 	andcs	r2, r5, #402653184	; 0x18000000
    44c8:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    44cc:	4e3d2406 	cdpmi	4, 3, cr2, cr13, cr6, {0}
    44d0:	062e0623 	strteq	r0, [lr], -r3, lsr #12
    44d4:	03090521 	movweq	r0, #38177	; 0x9521
    44d8:	11052009 	tstne	r5, r9
    44dc:	05012f03 	streq	r2, [r1, #-3843]	; 0xfffff0fd
    44e0:	0501062a 	streq	r0, [r1, #-1578]	; 0xfffff9d6
    44e4:	05056628 	streq	r6, [r5, #-1576]	; 0xfffff9d8
    44e8:	201d0306 	andscs	r0, sp, r6, lsl #6
    44ec:	01060705 	tsteq	r6, r5, lsl #14
    44f0:	40060905 	andmi	r0, r6, r5, lsl #18
    44f4:	01061805 	tsteq	r6, r5, lsl #16
    44f8:	32062105 	andcc	r2, r6, #1073741825	; 0x40000001
    44fc:	14060105 	strne	r0, [r6], #-261	; 0xfffffefb
    4500:	0101002e 	tsteq	r1, lr, lsr #32
    4504:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    4508:	00251e02 	eoreq	r1, r5, r2, lsl #28
    450c:	09ed0310 	stmibeq	sp!, {r4, r8, r9}^
    4510:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    4514:	05590609 	ldrbeq	r0, [r9, #-1545]	; 0xfffff9f7
    4518:	2d05142f 	cfstrscs	mvf1, [r5, #-188]	; 0xffffff44
    451c:	03090513 	movweq	r0, #38163	; 0x9513
    4520:	0b05010d 	bleq	14495c <__RAM_SIZE+0x4495c>
    4524:	26050106 	strcs	r0, [r5], -r6, lsl #2
    4528:	01040200 	mrseq	r0, R12_usr
    452c:	060d0558 			; <UNDEFINED> instruction: 0x060d0558
    4530:	16051327 	strne	r1, [r5], -r7, lsr #6
    4534:	20200106 	eorcs	r0, r0, r6, lsl #2
    4538:	060d0520 	streq	r0, [sp], -r0, lsr #10
    453c:	061f052f 	ldreq	r0, [pc], -pc, lsr #10
    4540:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    4544:	06310526 	ldrteq	r0, [r1], -r6, lsr #10
    4548:	060d0501 	streq	r0, [sp], -r1, lsl #10
    454c:	06160540 	ldreq	r0, [r6], -r0, asr #10
    4550:	05c87403 	strbeq	r7, [r8, #1027]	; 0x403
    4554:	20140305 	andscs	r0, r4, r5, lsl #6
    4558:	20381605 	eorscs	r1, r8, r5, lsl #12
    455c:	06090520 	streq	r0, [r9], -r0, lsr #10
    4560:	06100523 	ldreq	r0, [r0], -r3, lsr #10
    4564:	00010201 	andeq	r0, r1, r1, lsl #4
    4568:	01050101 	tsteq	r5, r1, lsl #2
    456c:	70020500 	andvc	r0, r2, r0, lsl #10
    4570:	03100025 	tsteq	r0, #37	; 0x25
    4574:	05012efb 	streq	r2, [r1, #-3835]	; 0xfffff105
    4578:	05142105 	ldreq	r2, [r4, #-261]	; 0xfffffefb
    457c:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    4580:	09052005 	stmdbeq	r5, {r0, r2, sp}
    4584:	03040200 	movweq	r0, #16896	; 0x4200
    4588:	5e052206 	cdppl	2, 0, cr2, cr5, cr6, {0}
    458c:	03040200 	movweq	r0, #16896	; 0x4200
    4590:	00680572 	rsbeq	r0, r8, r2, ror r5
    4594:	06030402 	streq	r0, [r3], -r2, lsl #8
    4598:	002b0501 	eoreq	r0, fp, r1, lsl #10
    459c:	06010402 	streq	r0, [r1], -r2, lsl #8
    45a0:	00050520 	andeq	r0, r5, r0, lsr #10
    45a4:	06010402 	streq	r0, [r1], -r2, lsl #8
    45a8:	4b330601 	blmi	cc5db4 <__RAM_SIZE+0xbc5db4>
    45ac:	3d062006 	stccc	0, cr2, [r6, #-24]	; 0xffffffe8
    45b0:	42400905 	submi	r0, r0, #81920	; 0x14000
    45b4:	05420505 	strbeq	r0, [r2, #-1285]	; 0xfffffafb
    45b8:	05010617 	streq	r0, [r1, #-1559]	; 0xfffff9e9
    45bc:	052f0605 	streq	r0, [pc, #-1541]!	; 3fbf <__HEAP_SIZE+0x2fbf>
    45c0:	0501061f 	streq	r0, [r1, #-1567]	; 0xfffff9e1
    45c4:	12022f01 	andne	r2, r2, #1, 30
    45c8:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    45cc:	02050005 	andeq	r0, r5, #5
    45d0:	100025d8 	ldrdne	r2, [r0], -r8
    45d4:	010fe303 	tsteq	pc, r3, lsl #6
    45d8:	09050106 	stmdbeq	r5, {r1, r2, r8}
    45dc:	0d053106 	stfeqs	f3, [r5, #-24]	; 0xffffffe8
    45e0:	06260530 			; <UNDEFINED> instruction: 0x06260530
    45e4:	3c240501 	cfstr32cc	mvfx0, [r4], #-4
    45e8:	22060d05 	andcs	r0, r6, #320	; 0x140
    45ec:	01061e05 	tsteq	r6, r5, lsl #28
    45f0:	052e0f05 	streq	r0, [lr, #-3845]!	; 0xfffff0fb
    45f4:	17030611 	smladne	r3, r1, r6, r0
    45f8:	06270520 	strteq	r0, [r7], -r0, lsr #10
    45fc:	2e130501 	cfmul32cs	mvfx0, mvfx3, mvfx1
    4600:	22061505 	andcs	r1, r6, #20971520	; 0x1400000
    4604:	01062505 	tsteq	r6, r5, lsl #10
    4608:	053c3d05 	ldreq	r3, [ip, #-3333]!	; 0xfffff2fb
    460c:	19052017 	stmdbne	r5, {r0, r1, r2, r4, sp}
    4610:	26053006 	strcs	r3, [r5], -r6
    4614:	11050106 	tstne	r5, r6, lsl #2
    4618:	3c690306 	stclcc	3, cr0, [r9], #-24	; 0xffffffe8
    461c:	01061e05 	tsteq	r6, r5, lsl #28
    4620:	30061105 	andcc	r1, r6, r5, lsl #2
    4624:	01062c05 	tsteq	r6, r5, lsl #24
    4628:	05201305 	streq	r1, [r0, #-773]!	; 0xfffffcfb
    462c:	1e03062d 	cfmadd32ne	mvax1, mvfx0, mvfx3, mvfx13
    4630:	160d052e 	strne	r0, [sp], -lr, lsr #10
    4634:	01061905 	tsteq	r6, r5, lsl #18
    4638:	52062905 	andpl	r2, r6, #81920	; 0x14000
    463c:	01140d05 	tsteq	r4, r5, lsl #26
    4640:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    4644:	00580104 	subseq	r0, r8, r4, lsl #2
    4648:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
    464c:	03040200 	movweq	r0, #16896	; 0x4200
    4650:	04020001 	streq	r0, [r2], #-1
    4654:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    4658:	00660304 	rsbeq	r0, r6, r4, lsl #6
    465c:	01030402 	tsteq	r3, r2, lsl #8
    4660:	03040200 	movweq	r0, #16896	; 0x4200
    4664:	04020001 	streq	r0, [r2], #-1
    4668:	02002003 	andeq	r2, r0, #3
    466c:	002e0304 	eoreq	r0, lr, r4, lsl #6
    4670:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
    4674:	03040200 	movweq	r0, #16896	; 0x4200
    4678:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    467c:	00200603 	eoreq	r0, r0, r3, lsl #12
    4680:	06030402 	streq	r0, [r3], -r2, lsl #8
    4684:	04020058 	streq	r0, [r2], #-88	; 0xffffffa8
    4688:	02007403 	andeq	r7, r0, #50331648	; 0x3000000
    468c:	00010304 	andeq	r0, r1, r4, lsl #6
    4690:	01030402 	tsteq	r3, r2, lsl #8
    4694:	03040200 	movweq	r0, #16896	; 0x4200
    4698:	00090514 	andeq	r0, r9, r4, lsl r5
    469c:	14030402 	strne	r0, [r3], #-1026	; 0xfffffbfe
    46a0:	03040200 	movweq	r0, #16896	; 0x4200
    46a4:	001f0530 	andseq	r0, pc, r0, lsr r5	; <UNPREDICTABLE>
    46a8:	06030402 	streq	r0, [r3], -r2, lsl #8
    46ac:	000b0501 	andeq	r0, fp, r1, lsl #10
    46b0:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
    46b4:	24060d05 	strcs	r0, [r6], #-3333	; 0xfffff2fb
    46b8:	06050501 	streq	r0, [r5], -r1, lsl #10
    46bc:	0615056c 	ldreq	r0, [r5], -ip, ror #10
    46c0:	05204903 	streq	r4, [r0, #-2307]!	; 0xfffff6fd
    46c4:	0402000d 	streq	r0, [r2], #-13
    46c8:	3c310301 	ldccc	3, cr0, [r1], #-4
    46cc:	02002505 	andeq	r2, r0, #20971520	; 0x1400000
    46d0:	05320104 	ldreq	r0, [r2, #-260]!	; 0xfffffefc
    46d4:	04020005 	streq	r0, [r2], #-5
    46d8:	02140601 	andseq	r0, r4, #1048576	; 0x100000
    46dc:	0101000d 	tsteq	r1, sp
    46e0:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    46e4:	00269402 	eoreq	r9, r6, r2, lsl #8
    46e8:	0cd90310 	ldcleq	3, cr0, [r9], {16}
    46ec:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    46f0:	05750609 	ldrbeq	r0, [r5, #-1545]!	; 0xfffff9f7
    46f4:	0125030d 			; <UNDEFINED> instruction: 0x0125030d
    46f8:	06170518 			; <UNDEFINED> instruction: 0x06170518
    46fc:	0d052001 	stceq	0, cr2, [r5, #-4]
    4700:	0f053006 	svceq	0x00053006
    4704:	11050106 	tstne	r5, r6, lsl #2
    4708:	28053406 	stmdacs	r5, {r1, r2, sl, ip, sp}
    470c:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    4710:	05300611 	ldreq	r0, [r0, #-1553]!	; 0xfffff9ef
    4714:	05010613 	streq	r0, [r1, #-1555]	; 0xfffff9ed
    4718:	05300615 	ldreq	r0, [r0, #-1557]!	; 0xfffff9eb
    471c:	0501061e 	streq	r0, [r1, #-1566]	; 0xfffff9e2
    4720:	054d0615 	strbeq	r0, [sp, #-1557]	; 0xfffff9eb
    4724:	2e010627 	cfmadd32cs	mvax1, mvfx0, mvfx1, mvfx7
    4728:	03060905 	movweq	r0, #26885	; 0x6905
    472c:	0b050110 	bleq	144b74 <__RAM_SIZE+0x44b74>
    4730:	11050106 	tstne	r5, r6, lsl #2
    4734:	31052606 	tstcc	r5, r6, lsl #12
    4738:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    473c:	05054006 	streq	r4, [r5, #-6]
    4740:	1505be06 	strne	fp, [r5, #-3590]	; 0xfffff1fa
    4744:	4a680306 	bmi	1a05364 <__RAM_SIZE+0x1905364>
    4748:	1a052006 	bne	14c768 <__RAM_SIZE+0x4c768>
    474c:	06090541 	streq	r0, [r9], -r1, asr #10
    4750:	05201203 	streq	r1, [r0, #-515]!	; 0xfffffdfd
    4754:	02010610 	andeq	r0, r1, #16, 12	; 0x1000000
    4758:	01010001 	tsteq	r1, r1
    475c:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    4760:	0026f602 	eoreq	pc, r6, r2, lsl #12
    4764:	32830310 	addcc	r0, r3, #16, 6	; 0x40000000
    4768:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    476c:	05320609 	ldreq	r0, [r2, #-1545]!	; 0xfffff9f7
    4770:	0115030d 	tsteq	r5, sp, lsl #6
    4774:	01061605 	tsteq	r6, r5, lsl #12
    4778:	052e0f05 	streq	r0, [lr, #-3845]!	; 0xfffff0fb
    477c:	05270612 	streq	r0, [r7, #-1554]!	; 0xfffff9ee
    4780:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
    4784:	2e0f0305 	cdpcs	3, 0, cr0, cr15, cr5, {0}
    4788:	03061105 	movweq	r1, #24837	; 0x6105
    478c:	2006206e 	andcs	r2, r6, lr, rrx
    4790:	05502f06 	ldrbeq	r2, [r0, #-3846]	; 0xfffff0fa
    4794:	29053466 	stmdbcs	r5, {r1, r2, r5, r6, sl, ip, sp}
    4798:	06050513 			; <UNDEFINED> instruction: 0x06050513
    479c:	00010216 	andeq	r0, r1, r6, lsl r2
    47a0:	01050101 	tsteq	r5, r1, lsl #2
    47a4:	1c020500 	cfstr32ne	mvfx0, [r2], {-0}
    47a8:	03100027 	tsteq	r0, #39	; 0x27
    47ac:	05012f9b 	streq	r2, [r1, #-3995]	; 0xfffff065
    47b0:	05161709 	ldreq	r1, [r6, #-1801]	; 0xfffff8f7
    47b4:	2d05010e 	stfcss	f0, [r5, #-56]	; 0xffffffc8
    47b8:	0e050106 	adfeqs	f0, f5, f6
    47bc:	0301052e 	movweq	r0, #5422	; 0x152e
    47c0:	11052077 	tstne	r5, r7, ror r0
    47c4:	200d0306 	andcs	r0, sp, r6, lsl #6
    47c8:	05341905 	ldreq	r1, [r4, #-2309]!	; 0xfffff6fb
    47cc:	05010621 	streq	r0, [r1, #-1569]	; 0xfffff9df
    47d0:	19052e1f 	stmdbne	r5, {r0, r1, r2, r3, r4, r9, sl, fp, sp}
    47d4:	22052106 	andcs	r2, r5, #-2147483647	; 0x80000001
    47d8:	19050106 	stmdbne	r5, {r1, r2, r8}
    47dc:	054b3d06 	strbeq	r3, [fp, #-3334]	; 0xfffff2fa
    47e0:	05304d11 	ldreq	r4, [r0, #-3345]!	; 0xfffff2ef
    47e4:	3c6e030e 	stclcc	3, cr0, [lr], #-56	; 0xffffffc8
    47e8:	01062d05 	tsteq	r6, r5, lsl #26
    47ec:	052e0e05 	streq	r0, [lr, #-3589]!	; 0xfffff1fb
    47f0:	2e3f0301 	cdpcs	3, 3, cr0, cr15, cr1, {0}
    47f4:	00080220 	andeq	r0, r8, r0, lsr #4
    47f8:	01050101 	tsteq	r5, r1, lsl #2
    47fc:	68020500 	stmdavs	r2, {r8, sl}
    4800:	03100027 	tsteq	r0, #39	; 0x27
    4804:	0100c1e0 	smlatteq	r0, r0, r1, ip
    4808:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    480c:	05134b06 	ldreq	r4, [r3, #-2822]	; 0xfffff4fa
    4810:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    4814:	052f0605 	streq	r0, [pc, #-1541]!	; 4217 <__HEAP_SIZE+0x3217>
    4818:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
    481c:	052f0605 	streq	r0, [pc, #-1541]!	; 421f <__HEAP_SIZE+0x321f>
    4820:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
    4824:	05430609 	strbeq	r0, [r3, #-1545]	; 0xfffff9f7
    4828:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    482c:	05202e26 	streq	r2, [r0, #-3622]!	; 0xfffff1da
    4830:	05340605 	ldreq	r0, [r4, #-1541]!	; 0xfffff9fb
    4834:	05010626 	streq	r0, [r1, #-1574]	; 0xfffff9da
    4838:	21052009 	tstcs	r5, r9
    483c:	09054406 	stmdbeq	r5, {r1, r2, sl, lr}
    4840:	060b0517 			; <UNDEFINED> instruction: 0x060b0517
    4844:	060d0501 	streq	r0, [sp], -r1, lsl #10
    4848:	053c0c03 	ldreq	r0, [ip, #-3075]!	; 0xfffff3fd
    484c:	05010619 	streq	r0, [r1, #-1561]	; 0xfffff9e7
    4850:	3e23060d 	cfmadda32cc	mvax0, mvax0, mvfx3, mvfx13
    4854:	01060f05 	tsteq	r6, r5, lsl #30
    4858:	32063b05 	andcc	r3, r6, #5120	; 0x1400
    485c:	05131105 	ldreq	r1, [r3, #-261]	; 0xfffffefb
    4860:	05010644 	streq	r0, [r1, #-1604]	; 0xfffff9bc
    4864:	01052e11 	tsteq	r5, r1, lsl lr
    4868:	054a3e03 	strbeq	r3, [sl, #-3587]	; 0xfffff1fd
    486c:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    4870:	7fac0301 	svcvc	0x00ac0301
    4874:	060d052e 	streq	r0, [sp], -lr, lsr #10
    4878:	012e0133 			; <UNDEFINED> instruction: 0x012e0133
    487c:	2e063c01 	cdpcs	12, 0, cr3, cr6, cr1, {0}
    4880:	3c3c2006 	ldccc	0, cr2, [ip], #-24	; 0xffffffe8
    4884:	32053c2e 	andcc	r3, r5, #11776	; 0x2e00
    4888:	05201703 	streq	r1, [r0, #-1795]!	; 0xfffff8fd
    488c:	3c051311 	stccc	3, cr1, [r5], {17}
    4890:	11050106 	tstne	r5, r6, lsl #2
    4894:	054f062e 	strbeq	r0, [pc, #-1582]	; 426e <__HEAP_SIZE+0x326e>
    4898:	05010621 	streq	r0, [r1, #-1569]	; 0xfffff9df
    489c:	15052e13 	strne	r2, [r5, #-3603]	; 0xfffff1ed
    48a0:	2a053006 	bcs	1508c0 <__RAM_SIZE+0x508c0>
    48a4:	2d050106 	stfcss	f0, [r5, #-24]	; 0xffffffe8
    48a8:	01053206 	tsteq	r5, r6, lsl #4
    48ac:	012c0306 			; <UNDEFINED> instruction: 0x012c0306
    48b0:	01000d02 	tsteq	r0, r2, lsl #26
    48b4:	00050501 	andeq	r0, r5, r1, lsl #10
    48b8:	28100205 	ldmdacs	r0, {r0, r2, r9}
    48bc:	a3031000 	movwge	r1, #12288	; 0x3000
    48c0:	0106010a 	tsteq	r6, sl, lsl #2
    48c4:	2f060905 	svccs	0x00060905
    48c8:	01061605 	tsteq	r6, r5, lsl #12
    48cc:	2f060905 	svccs	0x00060905
    48d0:	14018105 	strne	r8, [r1], #-261	; 0xfffffefb
    48d4:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    48d8:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
    48dc:	05a00609 	streq	r0, [r0, #1545]!	; 0x609
    48e0:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
    48e4:	0903060d 	stmdbeq	r3, {r0, r2, r3, r9, sl}
    48e8:	32250520 	eorcc	r0, r5, #32, 10	; 0x8000000
    48ec:	05153105 	ldreq	r3, [r5, #-261]	; 0xfffffefb
    48f0:	05051409 	streq	r1, [r5, #-1033]	; 0xfffffbf7
    48f4:	003c1306 	eorseq	r1, ip, r6, lsl #6
    48f8:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    48fc:	38020500 	stmdacc	r2, {r8, sl}
    4900:	03100028 	tsteq	r0, #40	; 0x28
    4904:	06010dbb 			; <UNDEFINED> instruction: 0x06010dbb
    4908:	06090501 	streq	r0, [r9], -r1, lsl #10
    490c:	6c05132f 	stcvs	3, cr1, [r5], {47}	; 0x2f
    4910:	14090514 	strne	r0, [r9], #-1300	; 0xfffffaec
    4914:	01061405 	tsteq	r6, r5, lsl #8
    4918:	68060905 	stmdavs	r6, {r0, r2, r8, fp}
    491c:	01060b05 	tsteq	r6, r5, lsl #22
    4920:	03060d05 	movweq	r0, #27909	; 0x6d05
    4924:	052f2009 	streq	r2, [pc, #-9]!	; 4923 <__HEAP_SIZE+0x3923>
    4928:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    492c:	200a0305 	andcs	r0, sl, r5, lsl #6
    4930:	7a031505 	bvc	c9d4c <__HEAP_SIZE+0xc8d4c>
    4934:	062b052e 	strteq	r0, [fp], -lr, lsr #10
    4938:	14090531 	strne	r0, [r9], #-1329	; 0xfffffacf
    493c:	01061005 	tsteq	r6, r5
    4940:	01000102 	tsteq	r0, r2, lsl #2
    4944:	00050501 	andeq	r0, r5, r1, lsl #10
    4948:	00000205 	andeq	r0, r0, r5, lsl #4
    494c:	8f030000 	svchi	0x00030000
    4950:	01060111 	tsteq	r6, r1, lsl r1
    4954:	2f060905 	svccs	0x00060905
    4958:	30051313 	andcc	r1, r5, r3, lsl r3
    495c:	14090514 	strne	r0, [r9], #-1300	; 0xfffffaec
    4960:	05320d05 	ldreq	r0, [r2, #-3333]!	; 0xfffff2fb
    4964:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    4968:	0402000d 	streq	r0, [r2], #-13
    496c:	05230604 	streq	r0, [r3, #-1540]!	; 0xfffff9fc
    4970:	04020011 	streq	r0, [r2], #-17	; 0xffffffef
    4974:	05010604 	streq	r0, [r1, #-1540]	; 0xfffff9fc
    4978:	04020029 	streq	r0, [r2], #-41	; 0xffffffd7
    497c:	05500604 	ldrbeq	r0, [r0, #-1540]	; 0xfffff9fc
    4980:	0402000d 	streq	r0, [r2], #-13
    4984:	11051604 	tstne	r5, r4, lsl #12
    4988:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    498c:	0f050106 	svceq	0x00050106
    4990:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    4994:	06110520 	ldreq	r0, [r1], -r0, lsr #10
    4998:	061a0522 	ldreq	r0, [sl], -r2, lsr #10
    499c:	06290501 	strteq	r0, [r9], -r1, lsl #10
    49a0:	190d054e 	stmdbne	sp, {r1, r2, r3, r6, r8, sl}
    49a4:	01061905 	tsteq	r6, r5, lsl #18
    49a8:	4f060d05 	svcmi	0x00060d05
    49ac:	01062805 	tsteq	r6, r5, lsl #16
    49b0:	02000d05 	andeq	r0, r0, #320	; 0x140
    49b4:	5d060404 	cfstrspl	mvf0, [r6, #-16]
    49b8:	02002505 	andeq	r2, r0, #20971520	; 0x1400000
    49bc:	01060404 	tsteq	r6, r4, lsl #8
    49c0:	02000f05 	andeq	r0, r0, #5, 30
    49c4:	052e0404 	streq	r0, [lr, #-1028]!	; 0xfffffbfc
    49c8:	04020032 	streq	r0, [r2], #-50	; 0xffffffce
    49cc:	11052001 	tstne	r5, r1
    49d0:	203b0306 	eorscs	r0, fp, r6, lsl #6
    49d4:	2a052006 	bcs	14c9f4 <__RAM_SIZE+0x4c9f4>
    49d8:	11053d06 	tstne	r5, r6, lsl #26
    49dc:	31090516 	tstcc	r9, r6, lsl r5
    49e0:	140d0533 	strne	r0, [sp], #-1331	; 0xfffffacd
    49e4:	06230543 	strteq	r0, [r3], -r3, asr #10
    49e8:	2e0f0501 	cfsh32cs	mvfx0, mvfx15, #1
    49ec:	22061105 	andcs	r1, r6, #1073741825	; 0x40000001
    49f0:	01061b05 	tsteq	r6, r5, lsl #22
    49f4:	052e1305 	streq	r1, [lr, #-773]!	; 0xfffffcfb
    49f8:	2e0e0305 	cdpcs	3, 0, cr0, cr14, cr5, {0}
    49fc:	02001505 	andeq	r1, r0, #20971520	; 0x1400000
    4a00:	fb030104 	blx	c4e1a <__HEAP_SIZE+0xc3e1a>
    4a04:	0200207e 	andeq	r2, r0, #126	; 0x7e
    4a08:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
    4a0c:	201f0328 	andscs	r0, pc, r8, lsr #6
    4a10:	03061105 	movweq	r1, #24837	; 0x6105
    4a14:	054f2e0d 	strbeq	r2, [pc, #-3597]	; 3c0f <__HEAP_SIZE+0x2c0f>
    4a18:	11054e2a 	tstne	r5, sl, lsr #28
    4a1c:	1a500515 	bne	1405e78 <__RAM_SIZE+0x1305e78>
    4a20:	27030905 	strcs	r0, [r3, -r5, lsl #18]
    4a24:	3e053301 	cdpcc	3, 0, cr3, cr5, cr1, {0}
    4a28:	05200d03 	streq	r0, [r0, #-3331]!	; 0xfffff2fd
    4a2c:	2d051315 	stccs	3, cr1, [r5, #-84]	; 0xffffffac
    4a30:	18220532 	stmdane	r2!, {r1, r4, r5, r8, sl}
    4a34:	13060505 	movwne	r0, #25861	; 0x6505
    4a38:	01000d02 	tsteq	r0, r2, lsl #26
    4a3c:	00050501 	andeq	r0, r5, r1, lsl #10
    4a40:	00000205 	andeq	r0, r0, r5, lsl #4
    4a44:	b5030000 	strlt	r0, [r3, #-0]
    4a48:	09050113 	stmdbeq	r5, {r0, r1, r4, r8}
    4a4c:	13131313 	tstne	r3, #1275068416	; 0x4c000000
    4a50:	2a051313 	bcs	1496a4 <__RAM_SIZE+0x496a4>
    4a54:	141e0514 	ldrne	r0, [lr], #-1300	; 0xfffffaec
    4a58:	05150d05 	ldreq	r0, [r5, #-3333]	; 0xfffff2fb
    4a5c:	05010617 	streq	r0, [r1, #-1559]	; 0xfffff9e9
    4a60:	05052e0f 	streq	r2, [r5, #-3599]	; 0xfffff1f1
    4a64:	052e7303 	streq	r7, [lr, #-771]!	; 0xfffffcfd
    4a68:	1503060d 	strne	r0, [r3, #-1549]	; 0xfffff9f3
    4a6c:	3011053c 	andscc	r0, r1, ip, lsr r5
    4a70:	01061d05 	tsteq	r6, r5, lsl #26
    4a74:	21061105 	tstcs	r6, r5, lsl #2
    4a78:	01061d05 	tsteq	r6, r5, lsl #26
    4a7c:	21061105 	tstcs	r6, r5, lsl #2
    4a80:	01061f05 	tsteq	r6, r5, lsl #30
    4a84:	2f061105 	svccs	0x00061105
    4a88:	01062905 	tsteq	r6, r5, lsl #18
    4a8c:	3e060d05 	cdpcc	13, 0, cr0, cr6, cr5, {0}
    4a90:	060f0530 			; <UNDEFINED> instruction: 0x060f0530
    4a94:	06120501 	ldreq	r0, [r2], -r1, lsl #10
    4a98:	06140543 	ldreq	r0, [r4], -r3, asr #10
    4a9c:	00370501 	eorseq	r0, r7, r1, lsl #10
    4aa0:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    4aa4:	36061605 	strcc	r1, [r6], -r5, lsl #12
    4aa8:	01061805 	tsteq	r6, r5, lsl #16
    4aac:	03061605 	movweq	r1, #26117	; 0x6605
    4ab0:	18053c29 	stmdane	r5, {r0, r3, r5, sl, fp, ip, sp}
    4ab4:	47050106 	strmi	r0, [r5, -r6, lsl #2]
    4ab8:	01040200 	mrseq	r0, R12_usr
    4abc:	031d053c 	tsteq	sp, #60, 10	; 0xf000000
    4ac0:	1505200f 	strne	r2, [r5, #-15]
    4ac4:	2e4d0306 	cdpcs	3, 4, cr0, cr13, cr6, {0}
    4ac8:	01061905 	tsteq	r6, r5, lsl #18
    4acc:	05201705 	streq	r1, [r0, #-1797]!	; 0xfffff8fb
    4ad0:	201e0321 	andscs	r0, lr, r1, lsr #6
    4ad4:	2e710306 	cdpcs	3, 7, cr0, cr1, cr6, {0}
    4ad8:	01063905 	tsteq	r6, r5, lsl #18
    4adc:	054a2305 	strbeq	r2, [sl, #-773]	; 0xfffffcfb
    4ae0:	04020072 	streq	r0, [r2], #-114	; 0xffffff8e
    4ae4:	052c0602 	streq	r0, [ip, #-1538]!	; 0xfffff9fe
    4ae8:	04020073 	streq	r0, [r2], #-115	; 0xffffff8d
    4aec:	00010602 	andeq	r0, r1, r2, lsl #12
    4af0:	20020402 	andcs	r0, r2, r2, lsl #8
    4af4:	05202405 	streq	r2, [r0, #-1029]!	; 0xfffffbfb
    4af8:	04020038 	streq	r0, [r2], #-56	; 0xffffffc8
    4afc:	05200601 	streq	r0, [r0, #-1537]!	; 0xfffff9ff
    4b00:	0402001d 	streq	r0, [r2], #-29	; 0xffffffe3
    4b04:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    4b08:	052e2c25 	streq	r2, [lr, #-3109]!	; 0xfffff3db
    4b0c:	011e031d 	tsteq	lr, sp, lsl r3
    4b10:	b5031905 	strlt	r1, [r3, #-2309]	; 0xfffff6fb
    4b14:	2d052e7f 	stccs	14, cr2, [r5, #-508]	; 0xfffffe04
    4b18:	00e90306 	rsceq	r0, r9, r6, lsl #6
    4b1c:	14090520 	strne	r0, [r9], #-1312	; 0xfffffae0
    4b20:	13060505 	movwne	r0, #25861	; 0x6505
    4b24:	a7031905 	strge	r1, [r3, -r5, lsl #18]
    4b28:	2d05207f 	stccs	0, cr2, [r5, #-508]	; 0xfffffe04
    4b2c:	00d60306 	sbcseq	r0, r6, r6, lsl #6
    4b30:	14090520 	strne	r0, [r9], #-1312	; 0xfffffae0
    4b34:	13060505 	movwne	r0, #25861	; 0x6505
    4b38:	ad031905 	vstrge.16	s2, [r3, #-10]	; <UNPREDICTABLE>
    4b3c:	2d052e7f 	stccs	14, cr2, [r5, #-508]	; 0xfffffe04
    4b40:	2e4a1a03 	vmlacs.f32	s3, s20, s6
    4b44:	18031d05 	stmdane	r3, {r0, r2, r8, sl, fp, ip}
    4b48:	000e0201 	andeq	r0, lr, r1, lsl #4
    4b4c:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    4b50:	00020500 	andeq	r0, r2, r0, lsl #10
    4b54:	03000000 	movweq	r0, #0
    4b58:	060114b9 			; <UNDEFINED> instruction: 0x060114b9
    4b5c:	06090501 	streq	r0, [r9], -r1, lsl #10
    4b60:	2e05132f 	cdpcs	3, 0, cr1, cr5, cr15, {1}
    4b64:	14090514 	strne	r0, [r9], #-1300	; 0xfffffaec
    4b68:	05320d05 	ldreq	r0, [r2, #-3333]!	; 0xfffff2fb
    4b6c:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    4b70:	0402000d 	streq	r0, [r2], #-13
    4b74:	05210604 	streq	r0, [r1, #-1540]!	; 0xfffff9fc
    4b78:	04020016 	streq	r0, [r2], #-22	; 0xffffffea
    4b7c:	05010604 	streq	r0, [r1, #-1540]	; 0xfffff9fc
    4b80:	04020009 	streq	r0, [r2], #-9
    4b84:	05220604 	streq	r0, [r2, #-1540]!	; 0xfffff9fc
    4b88:	04020032 	streq	r0, [r2], #-50	; 0xffffffce
    4b8c:	09053004 	stmdbeq	r5, {r2, ip, sp}
    4b90:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    4b94:	00050514 	andeq	r0, r5, r4, lsl r5
    4b98:	06040402 	streq	r0, [r4], -r2, lsl #8
    4b9c:	00150513 	andseq	r0, r5, r3, lsl r5
    4ba0:	03010402 	movweq	r0, #5122	; 0x1402
    4ba4:	02002e78 	andeq	r2, r0, #120, 28	; 0x780
    4ba8:	022e0104 	eoreq	r0, lr, #4, 2
    4bac:	01010004 	tsteq	r1, r4
    4bb0:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    4bb4:	00000002 	andeq	r0, r0, r2
    4bb8:	14d30300 	ldrbne	r0, [r3], #768	; 0x300
    4bbc:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    4bc0:	132f0609 			; <UNDEFINED> instruction: 0x132f0609
    4bc4:	14350513 	ldrtne	r0, [r5], #-1299	; 0xfffffaed
    4bc8:	12033305 	andne	r3, r3, #335544320	; 0x14000000
    4bcc:	17090501 	strne	r0, [r9, -r1, lsl #10]
    4bd0:	01063205 	tsteq	r6, r5, lsl #4
    4bd4:	32060d05 	andcc	r0, r6, #320	; 0x140
    4bd8:	01061505 	tsteq	r6, r5, lsl #10
    4bdc:	02000d05 	andeq	r0, r0, #320	; 0x140
    4be0:	21060404 	tstcs	r6, r4, lsl #8
    4be4:	02001605 	andeq	r1, r0, #5242880	; 0x500000
    4be8:	01060404 	tsteq	r6, r4, lsl #8
    4bec:	02000905 	andeq	r0, r0, #81920	; 0x14000
    4bf0:	22060404 	andcs	r0, r6, #4, 8	; 0x4000000
    4bf4:	02003905 	andeq	r3, r0, #81920	; 0x14000
    4bf8:	05300404 	ldreq	r0, [r0, #-1028]!	; 0xfffffbfc
    4bfc:	04020009 	streq	r0, [r2], #-9
    4c00:	05051404 	streq	r1, [r5, #-1028]	; 0xfffffbfc
    4c04:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    4c08:	15051306 	strne	r1, [r5, #-774]	; 0xfffffcfa
    4c0c:	01040200 	mrseq	r0, R12_usr
    4c10:	002e7803 	eoreq	r7, lr, r3, lsl #16
    4c14:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    4c18:	01000402 	tsteq	r0, r2, lsl #8
    4c1c:	00050501 	andeq	r0, r5, r1, lsl #10
    4c20:	00000205 	andeq	r0, r0, r5, lsl #4
    4c24:	83030000 	movwhi	r0, #12288	; 0x3000
    4c28:	01060115 	tsteq	r6, r5, lsl r1
    4c2c:	2f060905 	svccs	0x00060905
    4c30:	14320513 	ldrtne	r0, [r2], #-1299	; 0xfffffaed
    4c34:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    4c38:	1505320d 	strne	r3, [r5, #-525]	; 0xfffffdf3
    4c3c:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    4c40:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    4c44:	16052106 	strne	r2, [r5], -r6, lsl #2
    4c48:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    4c4c:	09050106 	stmdbeq	r5, {r1, r2, r8}
    4c50:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    4c54:	36052206 	strcc	r2, [r5], -r6, lsl #4
    4c58:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    4c5c:	00090530 	andeq	r0, r9, r0, lsr r5
    4c60:	14040402 	strne	r0, [r4], #-1026	; 0xfffffbfe
    4c64:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    4c68:	13060404 	movwne	r0, #25604	; 0x6404
    4c6c:	02001505 	andeq	r1, r0, #20971520	; 0x1400000
    4c70:	78030104 	stmdavc	r3, {r2, r8}
    4c74:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    4c78:	04022e01 	streq	r2, [r2], #-3585	; 0xfffff1ff
    4c7c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    4c80:	02050005 	andeq	r0, r5, #5
    4c84:	00000000 	andeq	r0, r0, r0
    4c88:	01159d03 	tsteq	r5, r3, lsl #26
    4c8c:	09050106 	stmdbeq	r5, {r1, r2, r8}
    4c90:	13132f06 	tstne	r3, #6, 30
    4c94:	05143905 	ldreq	r3, [r4, #-2309]	; 0xfffff6fb
    4c98:	01120333 	tsteq	r2, r3, lsr r3
    4c9c:	05170905 	ldreq	r0, [r7, #-2309]	; 0xfffff6fb
    4ca0:	05010632 	streq	r0, [r1, #-1586]	; 0xfffff9ce
    4ca4:	0532060d 	ldreq	r0, [r2, #-1549]!	; 0xfffff9f3
    4ca8:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    4cac:	0402000d 	streq	r0, [r2], #-13
    4cb0:	05210604 	streq	r0, [r1, #-1540]!	; 0xfffff9fc
    4cb4:	04020016 	streq	r0, [r2], #-22	; 0xffffffea
    4cb8:	05010604 	streq	r0, [r1, #-1540]	; 0xfffff9fc
    4cbc:	04020009 	streq	r0, [r2], #-9
    4cc0:	05220604 	streq	r0, [r2, #-1540]!	; 0xfffff9fc
    4cc4:	0402003d 	streq	r0, [r2], #-61	; 0xffffffc3
    4cc8:	09053004 	stmdbeq	r5, {r2, ip, sp}
    4ccc:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    4cd0:	00050514 	andeq	r0, r5, r4, lsl r5
    4cd4:	06040402 	streq	r0, [r4], -r2, lsl #8
    4cd8:	00150513 	andseq	r0, r5, r3, lsl r5
    4cdc:	03010402 	movweq	r0, #5122	; 0x1402
    4ce0:	02002e78 	andeq	r2, r0, #120, 28	; 0x780
    4ce4:	022e0104 	eoreq	r0, lr, #4, 2
    4ce8:	01010004 	tsteq	r1, r4
    4cec:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    4cf0:	00000002 	andeq	r0, r0, r2
    4cf4:	15ce0300 	strbne	r0, [lr, #768]	; 0x300
    4cf8:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    4cfc:	133d0609 	teqne	sp, #9437184	; 0x900000
    4d00:	183c0513 	ldmdane	ip!, {r0, r1, r4, r8, sl}
    4d04:	05143d05 	ldreq	r3, [r4, #-3333]	; 0xfffff2fb
    4d08:	0b051509 	bleq	14a134 <__RAM_SIZE+0x4a134>
    4d0c:	1b050106 	blne	14512c <__RAM_SIZE+0x4512c>
    4d10:	06250530 			; <UNDEFINED> instruction: 0x06250530
    4d14:	15090524 	strne	r0, [r9, #-1316]	; 0xfffffadc
    4d18:	05320d05 	ldreq	r0, [r2, #-3333]!	; 0xfffff2fb
    4d1c:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    4d20:	0402003b 	streq	r0, [r2], #-59	; 0xffffffc5
    4d24:	05220604 	streq	r0, [r2, #-1540]!	; 0xfffff9fc
    4d28:	04020011 	streq	r0, [r2], #-17	; 0xffffffef
    4d2c:	27051604 	strcs	r1, [r5, -r4, lsl #12]
    4d30:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    4d34:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    4d38:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    4d3c:	0f052806 	svceq	0x00052806
    4d40:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    4d44:	11050106 	tstne	r5, r6, lsl #2
    4d48:	13053206 	movwne	r3, #20998	; 0x5206
    4d4c:	19050106 	stmdbne	r5, {r1, r2, r8}
    4d50:	23052406 	movwcs	r2, #21510	; 0x5406
    4d54:	1b050106 	blne	145174 <__RAM_SIZE+0x45174>
    4d58:	061d052e 	ldreq	r0, [sp], -lr, lsr #10
    4d5c:	063d0533 			; <UNDEFINED> instruction: 0x063d0533
    4d60:	3c1f0501 	cfldr32cc	mvfx0, [pc], {1}
    4d64:	4d031405 	cfstrsmi	mvf1, [r3, #-20]	; 0xffffffec
    4d68:	0015052e 	andseq	r0, r5, lr, lsr #10
    4d6c:	03010402 	movweq	r0, #5122	; 0x1402
    4d70:	02002e18 	andeq	r2, r0, #24, 28	; 0x180
    4d74:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
    4d78:	33030616 	movwcc	r0, #13846	; 0x3616
    4d7c:	06370520 	ldrteq	r0, [r7], -r0, lsr #10
    4d80:	2e180501 	cfmul32cs	mvfx0, mvfx8, mvfx1
    4d84:	b5031405 	strlt	r1, [r3, #-1029]	; 0xfffffbfb
    4d88:	11052e7f 	tstne	r5, pc, ror lr
    4d8c:	00dc0306 	sbcseq	r0, ip, r6, lsl #6
    4d90:	27051720 	strcs	r1, [r5, -r0, lsr #14]
    4d94:	15050106 	strne	r0, [r5, #-262]	; 0xfffffefa
    4d98:	17052706 	strne	r2, [r5, -r6, lsl #14]
    4d9c:	48050106 	stmdami	r5, {r1, r2, r8}
    4da0:	01040200 	mrseq	r0, R12_usr
    4da4:	0619052e 	ldreq	r0, [r9], -lr, lsr #10
    4da8:	062b0530 			; <UNDEFINED> instruction: 0x062b0530
    4dac:	06150501 	ldreq	r0, [r5], -r1, lsl #10
    4db0:	062b0528 	strteq	r0, [fp], -r8, lsr #10
    4db4:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    4db8:	05200a03 	streq	r0, [r0, #-2563]!	; 0xfffff5fd
    4dbc:	05010617 	streq	r0, [r1, #-1559]	; 0xfffff9e9
    4dc0:	15052013 	strne	r2, [r5, #-19]	; 0xffffffed
    4dc4:	2e063006 	cdpcs	0, 0, cr3, cr6, cr6, {0}
    4dc8:	24062d05 	strcs	r2, [r6], #-3333	; 0xfffff2fb
    4dcc:	05191105 	ldreq	r1, [r9, #-261]	; 0xfffffefb
    4dd0:	3c010615 	stccc	6, cr0, [r1], {21}
    4dd4:	053c1305 	ldreq	r1, [ip, #-773]!	; 0xfffffcfb
    4dd8:	17030631 	smladxne	r3, r1, r6, r0
    4ddc:	0311052e 	tsteq	r1, #192937984	; 0xb800000
    4de0:	1305010c 	movwne	r0, #20748	; 0x510c
    4de4:	31050106 	tstcc	r5, r6, lsl #2
    4de8:	20120306 	andscs	r0, r2, r6, lsl #6
    4dec:	05181105 	ldreq	r1, [r8, #-261]	; 0xfffffefb
    4df0:	27051509 	strcs	r1, [r5, -r9, lsl #10]
    4df4:	06050530 			; <UNDEFINED> instruction: 0x06050530
    4df8:	03140513 	tsteq	r4, #79691776	; 0x4c00000
    4dfc:	05207eb6 	streq	r7, [r0, #-3766]!	; 0xfffff14a
    4e00:	2e350330 	mrccs	3, 1, r0, cr5, cr0, {1}
    4e04:	1f032805 	svcne	0x00032805
    4e08:	0615052e 	ldreq	r0, [r5], -lr, lsr #10
    4e0c:	052e3a03 	streq	r3, [lr, #-2563]!	; 0xfffff5fd
    4e10:	05010619 	streq	r0, [r1, #-1561]	; 0xfffff9e7
    4e14:	09030631 	stmdbeq	r3, {r0, r4, r5, r9, sl}
    4e18:	1515054a 	ldrne	r0, [r5, #-1354]	; 0xfffffab6
    4e1c:	00010101 	andeq	r0, r1, r1, lsl #2
    4e20:	58010402 	stmdapl	r1, {r1, sl}
    4e24:	03040200 	movweq	r0, #16896	; 0x4200
    4e28:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    4e2c:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    4e30:	00010304 	andeq	r0, r1, r4, lsl #6
    4e34:	66030402 	strvs	r0, [r3], -r2, lsl #8
    4e38:	03040200 	movweq	r0, #16896	; 0x4200
    4e3c:	04020001 	streq	r0, [r2], #-1
    4e40:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    4e44:	00200304 	eoreq	r0, r0, r4, lsl #6
    4e48:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
    4e4c:	03040200 	movweq	r0, #16896	; 0x4200
    4e50:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    4e54:	02002003 	andeq	r2, r0, #3
    4e58:	20060304 	andcs	r0, r6, r4, lsl #6
    4e5c:	03040200 	movweq	r0, #16896	; 0x4200
    4e60:	02005806 	andeq	r5, r0, #393216	; 0x60000
    4e64:	00740304 	rsbseq	r0, r4, r4, lsl #6
    4e68:	01030402 	tsteq	r3, r2, lsl #8
    4e6c:	03040200 	movweq	r0, #16896	; 0x4200
    4e70:	20150301 	andscs	r0, r5, r1, lsl #6
    4e74:	022e0101 	eoreq	r0, lr, #1073741824	; 0x40000000
    4e78:	01010007 	tsteq	r1, r7
    4e7c:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    4e80:	00000002 	andeq	r0, r0, r2
    4e84:	1a990300 	bne	fe645a8c <__StackTop+0xc6545a8c>
    4e88:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    4e8c:	05210609 	streq	r0, [r1, #-1545]!	; 0xfffff9f7
    4e90:	26051430 			; <UNDEFINED> instruction: 0x26051430
    4e94:	180d0515 	stmdane	sp, {r0, r2, r4, r8, sl}
    4e98:	01061905 	tsteq	r6, r5, lsl #18
    4e9c:	052e0f05 	streq	r0, [lr, #-3845]!	; 0xfffff0fb
    4ea0:	0402002b 	streq	r0, [r2], #-43	; 0xffffffd5
    4ea4:	0d053c01 	stceq	12, cr3, [r5, #-4]
    4ea8:	200b0306 	andcs	r0, fp, r6, lsl #6
    4eac:	05301105 	ldreq	r1, [r0, #-261]!	; 0xfffffefb
    4eb0:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    4eb4:	2d053c13 	stccs	12, cr3, [r5, #-76]	; 0xffffffb4
    4eb8:	20100306 	andscs	r0, r0, r6, lsl #6
    4ebc:	05150d05 	ldreq	r0, [r5, #-3333]	; 0xfffff2fb
    4ec0:	22053225 	andcs	r3, r5, #1342177282	; 0x50000002
    4ec4:	06050515 			; <UNDEFINED> instruction: 0x06050515
    4ec8:	062e0513 			; <UNDEFINED> instruction: 0x062e0513
    4ecc:	05206703 	streq	r6, [r0, #-1795]!	; 0xfffff8fd
    4ed0:	1e051615 	mcrne	6, 0, r1, cr5, cr5, {0}
    4ed4:	15050106 	strne	r0, [r5, #-262]	; 0xfffffefa
    4ed8:	01014b06 	tsteq	r1, r6, lsl #22
    4edc:	04020001 	streq	r0, [r2], #-1
    4ee0:	02005801 	andeq	r5, r0, #65536	; 0x10000
    4ee4:	002e0304 	eoreq	r0, lr, r4, lsl #6
    4ee8:	01030402 	tsteq	r3, r2, lsl #8
    4eec:	03040200 	movweq	r0, #16896	; 0x4200
    4ef0:	04020001 	streq	r0, [r2], #-1
    4ef4:	02006603 	andeq	r6, r0, #3145728	; 0x300000
    4ef8:	00010304 	andeq	r0, r1, r4, lsl #6
    4efc:	01030402 	tsteq	r3, r2, lsl #8
    4f00:	03040200 	movweq	r0, #16896	; 0x4200
    4f04:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    4f08:	02002e03 	andeq	r2, r0, #3, 28	; 0x30
    4f0c:	00200304 	eoreq	r0, r0, r4, lsl #6
    4f10:	20030402 	andcs	r0, r3, r2, lsl #8
    4f14:	03040200 	movweq	r0, #16896	; 0x4200
    4f18:	02002006 	andeq	r2, r0, #6
    4f1c:	58060304 	stmdapl	r6, {r2, r8, r9}
    4f20:	03040200 	movweq	r0, #16896	; 0x4200
    4f24:	04020074 	streq	r0, [r2], #-116	; 0xffffff8c
    4f28:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    4f2c:	00010304 	andeq	r0, r1, r4, lsl #6
    4f30:	17030402 	strne	r0, [r3, -r2, lsl #8]
    4f34:	03040200 	movweq	r0, #16896	; 0x4200
    4f38:	04020001 	streq	r0, [r2], #-1
    4f3c:	09026601 	stmdbeq	r2, {r0, r9, sl, sp, lr}
    4f40:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    4f44:	02050005 	andeq	r0, r5, #5
    4f48:	00000000 	andeq	r0, r0, r0
    4f4c:	011ad603 	tsteq	sl, r3, lsl #12
    4f50:	09050106 	stmdbeq	r5, {r1, r2, r8}
    4f54:	13132f06 	tstne	r3, #6, 30
    4f58:	05143705 	ldreq	r3, [r4, #-1797]	; 0xfffff8fb
    4f5c:	33051426 	movwcc	r1, #21542	; 0x5426
    4f60:	05011203 	streq	r1, [r1, #-515]	; 0xfffffdfd
    4f64:	22051709 	andcs	r1, r5, #2359296	; 0x240000
    4f68:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
    4f6c:	0522060d 	streq	r0, [r2, #-1549]!	; 0xfffff9f3
    4f70:	20010611 	andcs	r0, r1, r1, lsl r6
    4f74:	052e0f05 	streq	r0, [lr, #-3845]!	; 0xfffff0fb
    4f78:	053e0633 	ldreq	r0, [lr, #-1587]!	; 0xfffff9cd
    4f7c:	2a051511 	bcs	14a3c8 <__RAM_SIZE+0x4a3c8>
    4f80:	13050106 	movwne	r0, #20742	; 0x5106
    4f84:	0619052e 	ldreq	r0, [r9], -lr, lsr #10
    4f88:	06220534 			; <UNDEFINED> instruction: 0x06220534
    4f8c:	203d0501 	eorscs	r0, sp, r1, lsl #10
    4f90:	053c1b05 	ldreq	r1, [ip, #-2821]!	; 0xfffff4fb
    4f94:	1730061d 			; <UNDEFINED> instruction: 0x1730061d
    4f98:	01063105 	tsteq	r6, r5, lsl #2
    4f9c:	40063505 	andmi	r3, r6, r5, lsl #10
    4fa0:	05171505 	ldreq	r1, [r7, #-1285]	; 0xfffffafb
    4fa4:	0501061e 	streq	r0, [r1, #-1566]	; 0xfffff9e2
    4fa8:	014b0615 	cmpeq	fp, r5, lsl r6
    4fac:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    4fb0:	00580104 	subseq	r0, r8, r4, lsl #2
    4fb4:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
    4fb8:	03040200 	movweq	r0, #16896	; 0x4200
    4fbc:	04020001 	streq	r0, [r2], #-1
    4fc0:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    4fc4:	00660304 	rsbeq	r0, r6, r4, lsl #6
    4fc8:	01030402 	tsteq	r3, r2, lsl #8
    4fcc:	03040200 	movweq	r0, #16896	; 0x4200
    4fd0:	04020001 	streq	r0, [r2], #-1
    4fd4:	02002003 	andeq	r2, r0, #3
    4fd8:	002e0304 	eoreq	r0, lr, r4, lsl #6
    4fdc:	20030402 	andcs	r0, r3, r2, lsl #8
    4fe0:	03040200 	movweq	r0, #16896	; 0x4200
    4fe4:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    4fe8:	00200603 	eoreq	r0, r0, r3, lsl #12
    4fec:	06030402 	streq	r0, [r3], -r2, lsl #8
    4ff0:	04020058 	streq	r0, [r2], #-88	; 0xffffffa8
    4ff4:	02007403 	andeq	r7, r0, #50331648	; 0x3000000
    4ff8:	00010304 	andeq	r0, r1, r4, lsl #6
    4ffc:	01030402 	tsteq	r3, r2, lsl #8
    5000:	17032905 	strne	r2, [r3, -r5, lsl #18]
    5004:	15090501 	strne	r0, [r9, #-1281]	; 0xfffffaff
    5008:	053e3905 	ldreq	r3, [lr, #-2309]!	; 0xfffff6fb
    500c:	05051409 	streq	r1, [r5, #-1033]	; 0xfffffbf7
    5010:	14051306 	strne	r1, [r5], #-774	; 0xfffffcfa
    5014:	2e7fa603 	cdpcs	6, 7, cr10, cr15, cr3, {0}
    5018:	03061505 	movweq	r1, #25861	; 0x6505
    501c:	052e00c2 	streq	r0, [lr, #-194]!	; 0xffffff3e
    5020:	be030614 	mcrlt	6, 0, r0, cr3, cr4, {0}
    5024:	0f02587f 	svceq	0x0002587f
    5028:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    502c:	02050001 	andeq	r0, r5, #1
    5030:	00000000 	andeq	r0, r0, r0
    5034:	011db803 	tsteq	sp, r3, lsl #16
    5038:	05212305 	streq	r2, [r1, #-773]!	; 0xfffffcfb
    503c:	0d051609 	stceq	6, cr1, [r5, #-36]	; 0xffffffdc
    5040:	4f090517 	svcmi	0x00090517
    5044:	01061605 	tsteq	r6, r5, lsl #12
    5048:	02001b05 	andeq	r1, r0, #5120	; 0x1400
    504c:	20060104 	andcs	r0, r6, r4, lsl #2
    5050:	02000905 	andeq	r0, r0, #81920	; 0x14000
    5054:	01060104 	tsteq	r6, r4, lsl #2
    5058:	2e090306 	cdpcs	3, 0, cr0, cr9, cr6, {0}
    505c:	2f350505 	svccs	0x00350505
    5060:	01061705 	tsteq	r6, r5, lsl #14
    5064:	40060505 	andmi	r0, r6, r5, lsl #10
    5068:	05302405 	ldreq	r2, [r0, #-1029]!	; 0xfffffbfb
    506c:	05130601 	ldreq	r0, [r3, #-1537]	; 0xfffff9ff
    5070:	0402000d 	streq	r0, [r2], #-13
    5074:	6a030603 	bvs	c6888 <__HEAP_SIZE+0xc5888>
    5078:	004b0520 	subeq	r0, fp, r0, lsr #10
    507c:	56030402 	strpl	r0, [r3], -r2, lsl #8
    5080:	02005205 	andeq	r5, r0, #1342177280	; 0x50000000
    5084:	01060304 	tsteq	r6, r4, lsl #6
    5088:	03040200 	movweq	r0, #16896	; 0x4200
    508c:	00060220 	andeq	r0, r6, r0, lsr #4
    5090:	01050101 	tsteq	r5, r1, lsl #2
    5094:	5c020500 	cfstr32pl	mvfx0, [r2], {-0}
    5098:	03100028 	tsteq	r0, #40	; 0x28
    509c:	05011de3 	streq	r1, [r1, #-3555]	; 0xfffff21d
    50a0:	1f051321 	svcne	0x00051321
    50a4:	05010b03 	streq	r0, [r1, #-2819]	; 0xfffff4fd
    50a8:	20051609 	andcs	r1, r5, r9, lsl #12
    50ac:	1e050106 	adfnes	f0, f5, f6
    50b0:	0609053c 			; <UNDEFINED> instruction: 0x0609053c
    50b4:	03220524 			; <UNDEFINED> instruction: 0x03220524
    50b8:	01050137 	tsteq	r5, r7, lsr r1
    50bc:	04021306 	streq	r1, [r2], #-774	; 0xfffffcfa
    50c0:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    50c4:	02050001 	andeq	r0, r5, #1
    50c8:	1000286c 	andne	r2, r0, ip, ror #16
    50cc:	01208a03 			; <UNDEFINED> instruction: 0x01208a03
    50d0:	05130505 	ldreq	r0, [r3, #-1285]	; 0xfffffafb
    50d4:	05151423 	ldreq	r1, [r5, #-1059]	; 0xfffffbdd
    50d8:	10051409 	andne	r1, r5, r9, lsl #8
    50dc:	22050106 	andcs	r0, r5, #-2147483647	; 0x80000001
    50e0:	2c053006 	stccs	0, cr3, [r5], {6}
    50e4:	14050514 	strne	r0, [r5], #-1300	; 0xfffffaec
    50e8:	13060105 	movwne	r0, #24837	; 0x6105
    50ec:	01000402 	tsteq	r0, r2, lsl #8
    50f0:	00010501 	andeq	r0, r1, r1, lsl #10
    50f4:	00000205 	andeq	r0, r0, r5, lsl #4
    50f8:	9d030000 	stcls	0, cr0, [r3, #-0]
    50fc:	05050120 	streq	r0, [r5, #-288]	; 0xfffffee0
    5100:	2a051313 	bcs	149d54 <__RAM_SIZE+0x49d54>
    5104:	032f0514 			; <UNDEFINED> instruction: 0x032f0514
    5108:	05050110 	streq	r0, [r5, #-272]	; 0xfffffef0
    510c:	14090514 	strne	r0, [r9], #-1300	; 0xfffffaec
    5110:	01061105 	tsteq	r6, r5, lsl #2
    5114:	30060505 	andcc	r0, r6, r5, lsl #10
    5118:	05143405 	ldreq	r3, [r4, #-1029]	; 0xfffffbfb
    511c:	01051405 	tsteq	r5, r5, lsl #8
    5120:	04021306 	streq	r1, [r2], #-774	; 0xfffffcfa
    5124:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    5128:	02050001 	andeq	r0, r5, #1
    512c:	10002878 	andne	r2, r0, r8, ror r8
    5130:	0120c003 			; <UNDEFINED> instruction: 0x0120c003
    5134:	05132805 	ldreq	r2, [r3, #-2053]	; 0xfffff7fb
    5138:	05051641 	streq	r1, [r5, #-1601]	; 0xfffff9bf
    513c:	060c0514 			; <UNDEFINED> instruction: 0x060c0514
    5140:	2f010501 	svccs	0x00010501
    5144:	01000402 	tsteq	r0, r2, lsl #8
    5148:	00010501 	andeq	r0, r1, r1, lsl #10
    514c:	00000205 	andeq	r0, r0, r5, lsl #4
    5150:	cc030000 	stcgt	0, cr0, [r3], {-0}
    5154:	05050120 	streq	r0, [r5, #-288]	; 0xfffffee0
    5158:	142d0513 	strtne	r0, [sp], #-1299	; 0xfffffaed
    515c:	05160505 	ldreq	r0, [r6, #-1285]	; 0xfffffafb
    5160:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
    5164:	0402001a 	streq	r0, [r2], #-26	; 0xffffffe6
    5168:	052f0604 	streq	r0, [pc, #-1540]!	; 4b6c <__HEAP_SIZE+0x3b6c>
    516c:	0402003d 	streq	r0, [r2], #-61	; 0xffffffc3
    5170:	05051404 	streq	r1, [r5, #-1028]	; 0xfffffbfc
    5174:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    5178:	00010514 	andeq	r0, r1, r4, lsl r5
    517c:	06040402 	streq	r0, [r4], -r2, lsl #8
    5180:	000d0513 	andeq	r0, sp, r3, lsl r5
    5184:	03010402 	movweq	r0, #5122	; 0x1402
    5188:	02003c7a 	andeq	r3, r0, #31232	; 0x7a00
    518c:	022e0104 	eoreq	r0, lr, #4, 2
    5190:	01010003 	tsteq	r1, r3
    5194:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    5198:	00000002 	andeq	r0, r0, r2
    519c:	21ed0300 	mvncs	r0, r0, lsl #6
    51a0:	13090501 	movwne	r0, #38145	; 0x9501
    51a4:	14520513 	ldrbne	r0, [r2], #-1299	; 0xfffffaed
    51a8:	05143005 	ldreq	r3, [r4, #-5]
    51ac:	0905132e 	stmdbeq	r5, {r1, r2, r3, r5, r8, r9, ip}
    51b0:	06110514 			; <UNDEFINED> instruction: 0x06110514
    51b4:	000d0501 	andeq	r0, sp, r1, lsl #10
    51b8:	06040402 	streq	r0, [r4], -r2, lsl #8
    51bc:	00160532 	andseq	r0, r6, r2, lsr r5
    51c0:	06040402 	streq	r0, [r4], -r2, lsl #8
    51c4:	000f0501 	andeq	r0, pc, r1, lsl #10
    51c8:	2e040402 	cdpcs	4, 0, cr0, cr4, cr2, {0}
    51cc:	03061205 	movweq	r1, #25093	; 0x6205
    51d0:	14052e09 	strne	r2, [r5], #-3593	; 0xfffff1f7
    51d4:	19050106 	stmdbne	r5, {r1, r2, r8}
    51d8:	06350536 			; <UNDEFINED> instruction: 0x06350536
    51dc:	05200b03 	streq	r0, [r0, #-2819]!	; 0xfffff4fd
    51e0:	05051409 	streq	r1, [r5, #-1033]	; 0xfffffbf7
    51e4:	11051306 	tstne	r5, r6, lsl #6
    51e8:	01040200 	mrseq	r0, R12_usr
    51ec:	00205d03 	eoreq	r5, r0, r3, lsl #26
    51f0:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    51f4:	29052606 	stmdbcs	r5, {r1, r2, r9, sl, sp}
    51f8:	22050106 	andcs	r0, r5, #-2147483647	; 0x80000001
    51fc:	06110520 	ldreq	r0, [r1], -r0, lsr #10
    5200:	06200524 	strteq	r0, [r0], -r4, lsr #10
    5204:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    5208:	06190521 	ldreq	r0, [r9], -r1, lsr #10
    520c:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    5210:	06290532 			; <UNDEFINED> instruction: 0x06290532
    5214:	20220501 	eorcs	r0, r2, r1, lsl #10
    5218:	21061105 	tstcs	r6, r5, lsl #2
    521c:	01062005 	tsteq	r6, r5
    5220:	2f061105 	svccs	0x00061105
    5224:	04020106 	streq	r0, [r2], #-262	; 0xfffffefa
    5228:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    522c:	02050009 	andeq	r0, r5, #9
    5230:	00000000 	andeq	r0, r0, r0
    5234:	0122f103 	msreq	CPSR_x, r3, lsl #2
    5238:	05133005 	ldreq	r3, [r3, #-5]
    523c:	4805163e 	stmdami	r5, {r1, r2, r3, r4, r5, r9, sl, ip}
    5240:	140d0514 	strne	r0, [sp], #-1300	; 0xfffffaec
    5244:	13060905 	movwne	r0, #26885	; 0x6905
    5248:	01000602 	tsteq	r0, r2, lsl #12
    524c:	00050501 	andeq	r0, r5, r1, lsl #10
    5250:	00000205 	andeq	r0, r0, r5, lsl #4
    5254:	ff030000 			; <UNDEFINED> instruction: 0xff030000
    5258:	3c050122 	stfccs	f0, [r5], {34}	; 0x22
    525c:	153f0513 	ldrne	r0, [pc, #-1299]!	; 4d51 <__HEAP_SIZE+0x3d51>
    5260:	05164005 	ldreq	r4, [r6, #-5]
    5264:	09051451 	stmdbeq	r5, {r0, r4, r6, sl, ip}
    5268:	06050514 			; <UNDEFINED> instruction: 0x06050514
    526c:	03023c13 	movweq	r3, #11283	; 0x2c13
    5270:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    5274:	02050005 	andeq	r0, r5, #5
    5278:	10002884 	andne	r2, r0, r4, lsl #17
    527c:	01239803 			; <UNDEFINED> instruction: 0x01239803
    5280:	09050106 	stmdbeq	r5, {r1, r2, r8}
    5284:	31052f06 	tstcc	r5, r6, lsl #30
    5288:	17090514 	smladne	r9, r4, r5, r0
    528c:	01062805 	tsteq	r6, r5, lsl #16
    5290:	052e1b05 	streq	r1, [lr, #-2821]!	; 0xfffff4fb
    5294:	05210642 	streq	r0, [r1, #-1602]!	; 0xfffff9be
    5298:	1f051409 	svcne	0x00051409
    529c:	0b050106 	bleq	1456bc <__RAM_SIZE+0x456bc>
    52a0:	0625052e 	strteq	r0, [r5], -lr, lsr #10
    52a4:	052e1203 	streq	r1, [lr, #-515]!	; 0xfffffdfd
    52a8:	14051509 	strne	r1, [r5], #-1289	; 0xfffffaf7
    52ac:	053c0106 	ldreq	r0, [ip, #-262]!	; 0xfffffefa
    52b0:	05220631 	streq	r0, [r2, #-1585]!	; 0xfffff9cf
    52b4:	05051324 	streq	r1, [r5, #-804]	; 0xfffffcdc
    52b8:	47051306 	strmi	r1, [r5, -r6, lsl #6]
    52bc:	206c0306 	rsbcs	r0, ip, r6, lsl #6
    52c0:	05133d05 	ldreq	r3, [r3, #-3333]	; 0xfffff2fb
    52c4:	1105150d 	tstne	r5, sp, lsl #10
    52c8:	061d0530 			; <UNDEFINED> instruction: 0x061d0530
    52cc:	060d0501 	streq	r0, [sp], -r1, lsl #10
    52d0:	19052f4c 	stmdbne	r5, {r2, r3, r6, r8, r9, sl, fp, sp}
    52d4:	02200106 	eoreq	r0, r0, #-2147483647	; 0x80000001
    52d8:	01010007 	tsteq	r1, r7
    52dc:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    52e0:	0028c002 	eoreq	ip, r8, r2
    52e4:	24be0310 	ldrtcs	r0, [lr], #784	; 0x310
    52e8:	13050501 	movwne	r0, #21761	; 0x5501
    52ec:	24051313 	strcs	r1, [r5], #-787	; 0xfffffced
    52f0:	172b0518 			; <UNDEFINED> instruction: 0x172b0518
    52f4:	05180505 	ldreq	r0, [r8, #-1285]	; 0xfffffafb
    52f8:	0501061e 	streq	r0, [r1, #-1566]	; 0xfffff9e2
    52fc:	01052e07 	tsteq	r5, r7, lsl #28
    5300:	053c6c03 	ldreq	r6, [ip, #-3075]!	; 0xfffff3fd
    5304:	18030609 	stmdane	r3, {r0, r3, r9, sl}
    5308:	06370520 	ldrteq	r0, [r7], -r0, lsr #10
    530c:	2e1a0501 	cfmul32cs	mvfx0, mvfx10, mvfx1
    5310:	24060905 	strcs	r0, [r6], #-2309	; 0xfffff6fb
    5314:	01061405 	tsteq	r6, r5, lsl #8
    5318:	22060905 	andcs	r0, r6, #81920	; 0x14000
    531c:	01060b05 	tsteq	r6, r5, lsl #22
    5320:	26062505 	strcs	r2, [r6], -r5, lsl #10
    5324:	05190905 	ldreq	r0, [r9, #-2309]	; 0xfffff6fb
    5328:	0501061d 	streq	r0, [r1, #-1565]	; 0xfffff9e3
    532c:	10052e0b 	andne	r2, r5, fp, lsl #28
    5330:	052e5803 	streq	r5, [lr, #-2051]!	; 0xfffff7fd
    5334:	8c030611 	stchi	6, cr0, [r3], {17}
    5338:	15052001 	strne	r2, [r5, #-1]
    533c:	13050106 	movwne	r0, #20742	; 0x5106
    5340:	30250582 	eorcc	r0, r5, r2, lsl #11
    5344:	24062d05 	strcs	r2, [r6], #-3333	; 0xfffff2fb
    5348:	2b031105 	blcs	c9764 <__HEAP_SIZE+0xc8764>
    534c:	06230501 	strteq	r0, [r3], -r1, lsl #10
    5350:	2e130501 	cfmul32cs	mvfx0, mvfx3, mvfx1
    5354:	0301052e 	movweq	r0, #5422	; 0x152e
    5358:	0d05013a 	stfeqs	f0, [r5, #-232]	; 0xffffff18
    535c:	7ea60306 	cdpvc	3, 10, cr0, cr6, cr6, {0}
    5360:	01010120 	tsteq	r1, r0, lsr #2
    5364:	4a203c2e 	bmi	814424 <__RAM_SIZE+0x714424>
    5368:	01062e06 	tsteq	r6, r6, lsl #28
    536c:	10052006 	andne	r2, r5, r6
    5370:	05016303 	streq	r6, [r1, #-771]	; 0xfffffcfd
    5374:	33030615 	movwcc	r0, #13845	; 0x3615
    5378:	062a052e 	strteq	r0, [sl], -lr, lsr #10
    537c:	06150501 	ldreq	r0, [r5], -r1, lsl #10
    5380:	0319054b 	tsteq	r9, #314572800	; 0x12c00000
    5384:	2e052015 	mcrcs	0, 0, r2, cr5, cr5, {0}
    5388:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    538c:	05210619 	streq	r0, [r1, #-1561]!	; 0xfffff9e7
    5390:	04020015 	streq	r0, [r2], #-21	; 0xffffffeb
    5394:	02002801 	andeq	r2, r0, #65536	; 0x10000
    5398:	3c060104 	stfccs	f0, [r6], {4}
    539c:	02001905 	andeq	r1, r0, #81920	; 0x14000
    53a0:	18060304 	stmdane	r6, {r2, r8, r9}
    53a4:	03040200 	movweq	r0, #16896	; 0x4200
    53a8:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    53ac:	31053c03 	tstcc	r5, r3, lsl #24
    53b0:	17150516 			; <UNDEFINED> instruction: 0x17150516
    53b4:	00010101 	andeq	r0, r1, r1, lsl #2
    53b8:	58010402 	stmdapl	r1, {r1, sl}
    53bc:	03040200 	movweq	r0, #16896	; 0x4200
    53c0:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    53c4:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    53c8:	00010304 	andeq	r0, r1, r4, lsl #6
    53cc:	82030402 	andhi	r0, r3, #33554432	; 0x2000000
    53d0:	03040200 	movweq	r0, #16896	; 0x4200
    53d4:	04020001 	streq	r0, [r2], #-1
    53d8:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    53dc:	00200304 	eoreq	r0, r0, r4, lsl #6
    53e0:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
    53e4:	03040200 	movweq	r0, #16896	; 0x4200
    53e8:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    53ec:	02002003 	andeq	r2, r0, #3
    53f0:	20060304 	andcs	r0, r6, r4, lsl #6
    53f4:	03040200 	movweq	r0, #16896	; 0x4200
    53f8:	02006606 	andeq	r6, r0, #6291456	; 0x600000
    53fc:	00660304 	rsbeq	r0, r6, r4, lsl #6
    5400:	01030402 	tsteq	r3, r2, lsl #8
    5404:	03040200 	movweq	r0, #16896	; 0x4200
    5408:	001d0501 	andseq	r0, sp, r1, lsl #10
    540c:	03030402 	movweq	r0, #13314	; 0x3402
    5410:	26050110 			; <UNDEFINED> instruction: 0x26050110
    5414:	03040200 	movweq	r0, #16896	; 0x4200
    5418:	41050106 	tstmi	r5, r6, lsl #2
    541c:	03040200 	movweq	r0, #16896	; 0x4200
    5420:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    5424:	1f052003 	svcne	0x00052003
    5428:	03040200 	movweq	r0, #16896	; 0x4200
    542c:	3031052e 	eorscc	r0, r1, lr, lsr #10
    5430:	03060d05 	movweq	r0, #27909	; 0x6d05
    5434:	05207fb7 	streq	r7, [r0, #-4023]!	; 0xfffff049
    5438:	15051411 	strne	r1, [r5, #-1041]	; 0xfffffbef
    543c:	13050106 	movwne	r0, #20742	; 0x5106
    5440:	0615053c 			; <UNDEFINED> instruction: 0x0615053c
    5444:	052e1303 	streq	r1, [lr, #-771]!	; 0xfffffcfd
    5448:	0501061d 	streq	r0, [r1, #-1565]	; 0xfffff9e3
    544c:	15053c1b 	strne	r3, [r5, #-3099]	; 0xfffff3e5
    5450:	20052106 	andcs	r2, r5, r6, lsl #2
    5454:	15050106 	strne	r0, [r5, #-262]	; 0xfffffefa
    5458:	17052206 	strne	r2, [r5, -r6, lsl #4]
    545c:	31050106 	tstcc	r5, r6, lsl #2
    5460:	2e0c0306 	cdpcs	3, 0, cr0, cr12, cr6, {0}
    5464:	01161505 	tsteq	r6, r5, lsl #10
    5468:	002e3c20 	eoreq	r3, lr, r0, lsr #24
    546c:	4a030402 	bmi	c647c <__HEAP_SIZE+0xc547c>
    5470:	03040200 	movweq	r0, #16896	; 0x4200
    5474:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    5478:	02003c03 	andeq	r3, r0, #768	; 0x300
    547c:	05160304 	ldreq	r0, [r6, #-772]	; 0xfffffcfc
    5480:	04020019 	streq	r0, [r2], #-25	; 0xffffffe7
    5484:	05010603 	streq	r0, [r1, #-1539]	; 0xfffff9fd
    5488:	04020017 	streq	r0, [r2], #-23	; 0xffffffe9
    548c:	19052003 	stmdbne	r5, {r0, r1, sp}
    5490:	01013006 	tsteq	r1, r6
    5494:	02002e3c 	andeq	r2, r0, #60, 28	; 0x3c0
    5498:	00580104 	subseq	r0, r8, r4, lsl #2
    549c:	06010402 	streq	r0, [r1], -r2, lsl #8
    54a0:	0609053c 			; <UNDEFINED> instruction: 0x0609053c
    54a4:	01019103 	tsteq	r1, r3, lsl #2
    54a8:	01061605 	tsteq	r6, r5, lsl #12
    54ac:	97031005 	strls	r1, [r3, -r5]
    54b0:	01054a7e 	tsteq	r5, lr, ror sl
    54b4:	2001f703 	andcs	pc, r1, r3, lsl #14
    54b8:	48032505 	stmdami	r3, {r0, r2, r8, sl, sp}
    54bc:	36052020 	strcc	r2, [r5], -r0, lsr #32
    54c0:	01350306 	teqeq	r5, r6, lsl #6
    54c4:	05140505 	ldreq	r0, [r4, #-1285]	; 0xfffffafb
    54c8:	0201060c 	andeq	r0, r1, #12, 12	; 0xc00000
    54cc:	01010017 	tsteq	r1, r7, lsl r0
    54d0:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    54d4:	002a2002 	eoreq	r2, sl, r2
    54d8:	1ef40310 	mrcne	3, 7, r0, cr4, cr0, {0}
    54dc:	21050501 	tstcs	r5, r1, lsl #10
    54e0:	14200513 	strtne	r0, [r0], #-1299	; 0xfffffaed
    54e4:	0b030905 	bleq	c7900 <__HEAP_SIZE+0xc6900>
    54e8:	300d0501 	andcc	r0, sp, r1, lsl #10
    54ec:	16370513 			; <UNDEFINED> instruction: 0x16370513
    54f0:	05140d05 	ldreq	r0, [r4, #-3333]	; 0xfffff2fb
    54f4:	05010624 	streq	r0, [r1, #-1572]	; 0xfffff9dc
    54f8:	24053c22 	strcs	r3, [r5], #-3106	; 0xfffff3de
    54fc:	0d052106 	stfeqs	f2, [r5, #-24]	; 0xffffffe8
    5500:	06260514 			; <UNDEFINED> instruction: 0x06260514
    5504:	200f0501 	andcs	r0, pc, r1, lsl #10
    5508:	30061105 	andcc	r1, r6, r5, lsl #2
    550c:	01062c05 	tsteq	r6, r5, lsl #24
    5510:	052e1305 	streq	r1, [lr, #-773]!	; 0xfffffcfb
    5514:	20650310 	rsbcs	r0, r5, r0, lsl r3
    5518:	02001905 	andeq	r1, r0, #81920	; 0x14000
    551c:	03060104 	movweq	r0, #24836	; 0x6104
    5520:	02002e25 	andeq	r2, r0, #592	; 0x250
    5524:	3c060104 	stfccs	f0, [r6], {4}
    5528:	01040200 	mrseq	r0, R12_usr
    552c:	02001406 	andeq	r1, r0, #100663296	; 0x6000000
    5530:	3c060104 	stfccs	f0, [r6], {4}
    5534:	58030d05 	stmdapl	r3, {r0, r2, r8, sl, fp}
    5538:	06390501 	ldrteq	r0, [r9], -r1, lsl #10
    553c:	05203503 	streq	r3, [r0, #-1283]!	; 0xfffffafd
    5540:	016b031a 	cmneq	fp, sl, lsl r3
    5544:	01061c05 	tsteq	r6, r5, lsl #24
    5548:	052e1a05 	streq	r1, [lr, #-2565]!	; 0xfffff5fb
    554c:	05330619 	ldreq	r0, [r3, #-1561]!	; 0xfffff9e7
    5550:	20010621 	andcs	r0, r1, r1, lsr #12
    5554:	05201f05 	streq	r1, [r0, #-3845]!	; 0xfffff0fb
    5558:	01210619 			; <UNDEFINED> instruction: 0x01210619
    555c:	002e3c20 	eoreq	r3, lr, r0, lsr #24
    5560:	58030402 	stmdapl	r3, {r1, sl}
    5564:	03040200 	movweq	r0, #16896	; 0x4200
    5568:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    556c:	02003c03 	andeq	r3, r0, #768	; 0x300
    5570:	00130304 	andseq	r0, r3, r4, lsl #6
    5574:	13030402 	movwne	r0, #13314	; 0x3402
    5578:	03040200 	movweq	r0, #16896	; 0x4200
    557c:	04020001 	streq	r0, [r2], #-1
    5580:	02002003 	andeq	r2, r0, #3
    5584:	003c0304 	eorseq	r0, ip, r4, lsl #6
    5588:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
    558c:	03040200 	movweq	r0, #16896	; 0x4200
    5590:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    5594:	02002e03 	andeq	r2, r0, #3, 28	; 0x30
    5598:	003c0304 	eorseq	r0, ip, r4, lsl #6
    559c:	13030402 	movwne	r0, #13314	; 0x3402
    55a0:	03040200 	movweq	r0, #16896	; 0x4200
    55a4:	04020001 	streq	r0, [r2], #-1
    55a8:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    55ac:	00010304 	andeq	r0, r1, r4, lsl #6
    55b0:	06030402 	streq	r0, [r3], -r2, lsl #8
    55b4:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    55b8:	004a0601 	subeq	r0, sl, r1, lsl #12
    55bc:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
    55c0:	03040200 	movweq	r0, #16896	; 0x4200
    55c4:	04020001 	streq	r0, [r2], #-1
    55c8:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    55cc:	00660304 	rsbeq	r0, r6, r4, lsl #6
    55d0:	01030402 	tsteq	r3, r2, lsl #8
    55d4:	03040200 	movweq	r0, #16896	; 0x4200
    55d8:	04020001 	streq	r0, [r2], #-1
    55dc:	02002003 	andeq	r2, r0, #3
    55e0:	002e0304 	eoreq	r0, lr, r4, lsl #6
    55e4:	20030402 	andcs	r0, r3, r2, lsl #8
    55e8:	03040200 	movweq	r0, #16896	; 0x4200
    55ec:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    55f0:	00200603 	eoreq	r0, r0, r3, lsl #12
    55f4:	06030402 	streq	r0, [r3], -r2, lsl #8
    55f8:	04020058 	streq	r0, [r2], #-88	; 0xffffffa8
    55fc:	02007403 	andeq	r7, r0, #50331648	; 0x3000000
    5600:	00010304 	andeq	r0, r1, r4, lsl #6
    5604:	01030402 	tsteq	r3, r2, lsl #8
    5608:	02001d05 	andeq	r1, r0, #320	; 0x140
    560c:	05180304 	ldreq	r0, [r8, #-772]	; 0xfffffcfc
    5610:	04020026 	streq	r0, [r2], #-38	; 0xffffffda
    5614:	05010603 	streq	r0, [r1, #-1539]	; 0xfffff9fd
    5618:	04020041 	streq	r0, [r2], #-65	; 0xffffffbf
    561c:	1f052003 	svcne	0x00052003
    5620:	03040200 	movweq	r0, #16896	; 0x4200
    5624:	0621053c 			; <UNDEFINED> instruction: 0x0621053c
    5628:	063b0530 			; <UNDEFINED> instruction: 0x063b0530
    562c:	06150501 	ldreq	r0, [r5], -r1, lsl #10
    5630:	054a1003 	strbeq	r1, [sl, #-3]
    5634:	05010617 	streq	r0, [r1, #-1559]	; 0xfffff9e9
    5638:	03280619 			; <UNDEFINED> instruction: 0x03280619
    563c:	24052e0d 	strcs	r2, [r5], #-3597	; 0xfffff1f3
    5640:	19050106 	stmdbne	r5, {r1, r2, r8}
    5644:	1b053006 	blne	151664 <__RAM_SIZE+0x51664>
    5648:	35050106 	strcc	r0, [r5, #-262]	; 0xfffffefa
    564c:	20160306 	andscs	r0, r6, r6, lsl #6
    5650:	05161505 	ldreq	r1, [r6, #-1285]	; 0xfffffafb
    5654:	05010627 	streq	r0, [r1, #-1575]	; 0xfffff9d9
    5658:	1d052e17 	stcne	14, cr2, [r5, #-92]	; 0xffffffa4
    565c:	01182406 	tsteq	r8, r6, lsl #8
    5660:	2d052e2e 	stccs	14, cr2, [r5, #-184]	; 0xffffff48
    5664:	017a0306 	cmneq	sl, r6, lsl #6
    5668:	03063d05 	movweq	r3, #27909	; 0x6d05
    566c:	21052e6e 	tstcs	r5, lr, ror #28
    5670:	13240515 			; <UNDEFINED> instruction: 0x13240515
    5674:	01061d05 	tsteq	r6, r5, lsl #26
    5678:	72030620 	andvc	r0, r3, #32, 12	; 0x2000000
    567c:	14210520 	strtne	r0, [r1], #-1312	; 0xfffffae0
    5680:	01062505 	tsteq	r6, r5, lsl #10
    5684:	052e2305 	streq	r2, [lr, #-773]!	; 0xfffffcfb
    5688:	05320625 	ldreq	r0, [r2, #-1573]!	; 0xfffff9db
    568c:	0501063f 	streq	r0, [r1, #-1599]	; 0xfffff9c1
    5690:	0a03061d 	beq	c6f0c <__HEAP_SIZE+0xc5f0c>
    5694:	062a054a 	strteq	r0, [sl], -sl, asr #10
    5698:	10054a01 	andne	r4, r5, r1, lsl #20
    569c:	017f9703 	cmneq	pc, r3, lsl #14
    56a0:	03062905 	movweq	r2, #26885	; 0x6905
    56a4:	05200187 	streq	r0, [r0, #-391]!	; 0xfffffe79
    56a8:	32051509 	andcc	r1, r5, #37748736	; 0x2400000
    56ac:	14050531 	strne	r0, [r5], #-1329	; 0xfffffacf
    56b0:	13060105 	movwne	r0, #24837	; 0x6105
    56b4:	0100082e 	tsteq	r0, lr, lsr #16
    56b8:	00050501 	andeq	r0, r5, r1, lsl #10
    56bc:	00000205 	andeq	r0, r0, r5, lsl #4
    56c0:	a8030000 	stmdage	r3, {}	; <UNPREDICTABLE>
    56c4:	01060112 	tsteq	r6, r2, lsl r1
    56c8:	3d060905 	vstrcc.16	s0, [r6, #-10]	; <UNPREDICTABLE>
    56cc:	14490513 	strbne	r0, [r9], #-1299	; 0xfffffaed
    56d0:	05142b05 	ldreq	r2, [r4, #-2821]	; 0xfffff4fb
    56d4:	09051330 	stmdbeq	r5, {r4, r5, r8, r9, ip}
    56d8:	320d0514 	andcc	r0, sp, #20, 10	; 0x5000000
    56dc:	01061e05 	tsteq	r6, r5, lsl #28
    56e0:	30063705 	andcc	r3, r6, r5, lsl #14
    56e4:	05150d05 	ldreq	r0, [r5, #-3333]	; 0xfffff2fb
    56e8:	0501061b 	streq	r0, [r1, #-1563]	; 0xfffff9e5
    56ec:	0d052019 	stceq	0, cr2, [r5, #-100]	; 0xffffff9c
    56f0:	0f052206 	svceq	0x00052206
    56f4:	11050106 	tstne	r5, r6, lsl #2
    56f8:	13053506 	movwne	r3, #21766	; 0x5506
    56fc:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    5700:	2e190306 	cdpcs	3, 1, cr0, cr9, cr6, {0}
    5704:	01062105 	tsteq	r6, r5, lsl #2
    5708:	22060d05 	andcs	r0, r6, #320	; 0x140
    570c:	03062505 	movweq	r2, #25861	; 0x6505
    5710:	0520014c 	streq	r0, [r0, #-332]!	; 0xfffffeb4
    5714:	0402003b 	streq	r0, [r2], #-59	; 0xffffffc5
    5718:	20190301 	andscs	r0, r9, r1, lsl #6
    571c:	03060d05 	movweq	r0, #27909	; 0x6d05
    5720:	21052e19 	tstcs	r5, r9, lsl lr
    5724:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    5728:	25052206 	strcs	r2, [r5, #-518]	; 0xfffffdfa
    572c:	014c0306 	cmpeq	ip, r6, lsl #6
    5730:	06150520 	ldreq	r0, [r5], -r0, lsr #10
    5734:	05201b03 	streq	r1, [r0, #-2819]!	; 0xfffff4fd
    5738:	0117030d 	tsteq	r7, sp, lsl #6
    573c:	01062105 	tsteq	r6, r5, lsl #2
    5740:	22060d05 	andcs	r0, r6, #320	; 0x140
    5744:	73031105 	movwvc	r1, #12549	; 0x3105
    5748:	06130520 	ldreq	r0, [r3], -r0, lsr #10
    574c:	003b0501 	eorseq	r0, fp, r1, lsl #10
    5750:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    5754:	30061505 	andcc	r1, r6, r5, lsl #10
    5758:	09030d05 	stmdbeq	r3, {r0, r2, r8, sl, fp}
    575c:	06210501 	strteq	r0, [r1], -r1, lsl #10
    5760:	060d0501 	streq	r0, [sp], -r1, lsl #10
    5764:	14350522 	ldrtne	r0, [r5], #-1314	; 0xfffffade
    5768:	06161105 	ldreq	r1, [r6], -r5, lsl #2
    576c:	0629052e 	strteq	r0, [r9], -lr, lsr #10
    5770:	15090540 	strne	r0, [r9, #-1344]	; 0xfffffac0
    5774:	01061b05 	tsteq	r6, r5, lsl #22
    5778:	32060905 	andcc	r0, r6, #81920	; 0x14000
    577c:	01060b05 	tsteq	r6, r5, lsl #22
    5780:	0c030505 	cfstr32eq	mvfx0, [r3], {5}
    5784:	060d0520 	streq	r0, [sp], -r0, lsr #10
    5788:	052e6103 	streq	r6, [lr, #-259]!	; 0xfffffefd
    578c:	05010621 	streq	r0, [r1, #-1569]	; 0xfffff9df
    5790:	0522060d 	streq	r0, [r2, #-1549]!	; 0xfffff9f3
    5794:	4c030625 	stcmi	6, cr0, [r3], {37}	; 0x25
    5798:	0d052001 	stceq	0, cr2, [r5, #-4]
    579c:	00c70306 	sbceq	r0, r7, r6, lsl #6
    57a0:	32250520 	eorcc	r0, r5, #32, 10	; 0x8000000
    57a4:	05153405 	ldreq	r3, [r5, #-1029]	; 0xfffffbfb
    57a8:	10051409 	andne	r1, r5, r9, lsl #8
    57ac:	03020106 	movweq	r0, #8454	; 0x2106
    57b0:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    57b4:	02050005 	andeq	r0, r5, #5
    57b8:	10002b50 	andne	r2, r0, r0, asr fp
    57bc:	01138303 	tsteq	r3, r3, lsl #6
    57c0:	09050106 	stmdbeq	r5, {r1, r2, r8}
    57c4:	2f052106 	svccs	0x00052106
    57c8:	15090514 	strne	r0, [r9, #-1300]	; 0xfffffaec
    57cc:	01060b05 	tsteq	r6, r5, lsl #22
    57d0:	30060d05 	andcc	r0, r6, r5, lsl #26
    57d4:	05303b05 	ldreq	r3, [r0, #-2821]!	; 0xfffff4fb
    57d8:	11051422 	tstne	r5, r2, lsr #8
    57dc:	05010903 	streq	r0, [r1, #-2307]	; 0xfffff6fd
    57e0:	1f054c0d 	svcne	0x00054c0d
    57e4:	25050106 	strcs	r0, [r5, #-262]	; 0xfffffefa
    57e8:	09053206 	stmdbeq	r5, {r1, r2, r9, ip, sp}
    57ec:	060b0517 			; <UNDEFINED> instruction: 0x060b0517
    57f0:	060d0501 	streq	r0, [sp], -r1, lsl #10
    57f4:	32250522 	eorcc	r0, r5, #142606336	; 0x8800000
    57f8:	05152105 	ldreq	r2, [r5, #-261]	; 0xfffffefb
    57fc:	02130605 	andseq	r0, r3, #5242880	; 0x500000
    5800:	01010001 	tsteq	r1, r1
    5804:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    5808:	002b7002 	eoreq	r7, fp, r2
    580c:	2cf40310 	ldclcs	3, cr0, [r4], #64	; 0x40
    5810:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    5814:	36030629 	strcc	r0, [r3], -r9, lsr #12
    5818:	030d052e 	movweq	r0, #54574	; 0xd52e
    581c:	05190112 	ldreq	r0, [r9, #-274]	; 0xfffffeee
    5820:	05010621 	streq	r0, [r1, #-1569]	; 0xfffff9df
    5824:	0530060d 	ldreq	r0, [r0, #-1549]!	; 0xfffff9f3
    5828:	2e01060f 	cfmadd32cs	mvax0, mvfx0, mvfx1, mvfx15
    582c:	03060505 	movweq	r0, #25861	; 0x6505
    5830:	05017fb1 	streq	r7, [r1, #-4017]	; 0xfffff04f
    5834:	05051a43 	streq	r1, [r5, #-2627]	; 0xfffff5bd
    5838:	05010a03 	streq	r0, [r1, #-2563]	; 0xfffff5fd
    583c:	0d051609 	stceq	6, cr1, [r5, #-36]	; 0xffffffdc
    5840:	052e1803 	streq	r1, [lr, #-2051]!	; 0xfffff7fd
    5844:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    5848:	11052e0f 	tstne	r5, pc, lsl #28
    584c:	21033006 	tstcs	r3, r6
    5850:	3347053c 	movtcc	r0, #30012	; 0x753c
    5854:	05131505 	ldreq	r1, [r3, #-1285]	; 0xfffffafb
    5858:	05010629 	streq	r0, [r1, #-1577]	; 0xfffff9d7
    585c:	05330657 	ldreq	r0, [r3, #-1623]!	; 0xfffff9a9
    5860:	17051415 	smladne	r5, r5, r4, r1
    5864:	34050106 	strcc	r0, [r5], #-262	; 0xfffffefa
    5868:	19053006 	stmdbne	r5, {r1, r2, ip, sp}
    586c:	2f320513 	svccs	0x00320513
    5870:	05163105 	ldreq	r3, [r6, #-261]	; 0xfffffefb
    5874:	1a051511 	bne	14acc0 <__RAM_SIZE+0x4acc0>
    5878:	05020106 	streq	r0, [r2, #-262]	; 0xfffffefa
    587c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    5880:	02050005 	andeq	r0, r5, #5
    5884:	00000000 	andeq	r0, r0, r0
    5888:	0121a703 			; <UNDEFINED> instruction: 0x0121a703
    588c:	09050106 	stmdbeq	r5, {r1, r2, r8}
    5890:	05132f06 	ldreq	r2, [r3, #-3846]	; 0xfffff0fa
    5894:	4a051433 	bmi	14a968 <__RAM_SIZE+0x4a968>
    5898:	14090515 	strne	r0, [r9], #-1301	; 0xfffffaeb
    589c:	03061505 	movweq	r1, #25861	; 0x6505
    58a0:	0d052e78 	stceq	14, cr2, [r5, #-480]	; 0xfffffe20
    58a4:	200b0306 	andcs	r0, fp, r6, lsl #6
    58a8:	05141105 	ldreq	r1, [r4, #-261]	; 0xfffffefb
    58ac:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    58b0:	05210611 	streq	r0, [r1, #-1553]!	; 0xfffff9ef
    58b4:	05010619 	streq	r0, [r1, #-1561]	; 0xfffff9e7
    58b8:	05840611 	streq	r0, [r4, #1553]	; 0x611
    58bc:	05010613 	streq	r0, [r1, #-1555]	; 0xfffff9ed
    58c0:	05330614 	ldreq	r0, [r3, #-1556]!	; 0xfffff9ec
    58c4:	0601060d 	streq	r0, [r1], -sp, lsl #12
    58c8:	060f0531 			; <UNDEFINED> instruction: 0x060f0531
    58cc:	060d0501 	streq	r0, [sp], -r1, lsl #10
    58d0:	060f0525 	streq	r0, [pc], -r5, lsr #10
    58d4:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    58d8:	06130527 	ldreq	r0, [r3], -r7, lsr #10
    58dc:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    58e0:	05200a03 	streq	r0, [r0, #-2563]!	; 0xfffff5fd
    58e4:	05010613 	streq	r0, [r1, #-1555]	; 0xfffff9ed
    58e8:	05280609 	streq	r0, [r8, #-1545]!	; 0xfffff9f7
    58ec:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
    58f0:	0530062c 	ldreq	r0, [r0, #-1580]!	; 0xfffff9d4
    58f4:	05051409 	streq	r1, [r5, #-1033]	; 0xfffffbf7
    58f8:	11051306 	tstne	r5, r6, lsl #6
    58fc:	2e5f0306 	cdpcs	3, 5, cr0, cr15, cr6, {0}
    5900:	01061905 	tsteq	r6, r5, lsl #18
    5904:	11054a2e 	tstne	r5, lr, lsr #20
    5908:	19052506 	stmdbne	r5, {r1, r2, r8, sl, sp}
    590c:	4a2e0106 	bmi	b85d2c <__RAM_SIZE+0xa85d2c>
    5910:	28061505 	stmdacs	r6, {r0, r2, r8, sl, ip}
    5914:	01061d05 	tsteq	r6, r5, lsl #26
    5918:	15053c2e 	strne	r3, [r5, #-3118]	; 0xfffff3d2
    591c:	200a0306 	andcs	r0, sl, r6, lsl #6
    5920:	01061d05 	tsteq	r6, r5, lsl #26
    5924:	0b023c2e 	bleq	949e4 <__HEAP_SIZE+0x939e4>
    5928:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    592c:	02050001 	andeq	r0, r5, #1
    5930:	00000000 	andeq	r0, r0, r0
    5934:	0123c203 			; <UNDEFINED> instruction: 0x0123c203
    5938:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    593c:	34052f06 	strcc	r2, [r5], #-3846	; 0xfffff0fa
    5940:	163f0514 			; <UNDEFINED> instruction: 0x163f0514
    5944:	31160505 	tstcc	r6, r5, lsl #10
    5948:	05300905 	ldreq	r0, [r0, #-2309]!	; 0xfffff6fb
    594c:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    5950:	2f4c0605 	svccs	0x004c0605
    5954:	01061605 	tsteq	r6, r5, lsl #12
    5958:	30063405 	andcc	r3, r6, r5, lsl #8
    595c:	05140505 	ldreq	r0, [r4, #-1285]	; 0xfffffafb
    5960:	20130601 	andscs	r0, r3, r1, lsl #12
    5964:	01000302 	tsteq	r0, r2, lsl #6
    5968:	00050501 	andeq	r0, r5, r1, lsl #10
    596c:	00000205 	andeq	r0, r0, r5, lsl #4
    5970:	e0030000 	and	r0, r3, r0
    5974:	01060123 	tsteq	r6, r3, lsr #2
    5978:	2f060905 	svccs	0x00060905
    597c:	142c0513 	strtne	r0, [ip], #-1299	; 0xfffffaed
    5980:	05141e05 	ldreq	r1, [r4, #-3589]	; 0xfffff1fb
    5984:	0d051409 	cfstrseq	mvf1, [r5, #-36]	; 0xffffffdc
    5988:	06110532 			; <UNDEFINED> instruction: 0x06110532
    598c:	3c0f0501 	cfstr32cc	mvfx0, [pc], {1}
    5990:	c4031905 	strgt	r1, [r3], #-2309	; 0xfffff6fb
    5994:	09052e00 	stmdbeq	r5, {r9, sl, fp, sp}
    5998:	12052306 	andne	r2, r5, #402653184	; 0x18000000
    599c:	2f050106 	svccs	0x00050106
    59a0:	09053006 	stmdbeq	r5, {r1, r2, ip, sp}
    59a4:	06050514 			; <UNDEFINED> instruction: 0x06050514
    59a8:	06110513 			; <UNDEFINED> instruction: 0x06110513
    59ac:	2e7fb603 	cdpcs	6, 7, cr11, cr15, cr3, {0}
    59b0:	061a0517 			; <UNDEFINED> instruction: 0x061a0517
    59b4:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    59b8:	30150550 	andscc	r0, r5, r0, asr r5
    59bc:	01061905 	tsteq	r6, r5, lsl #18
    59c0:	05201705 	streq	r1, [r0, #-1797]!	; 0xfffff8fb
    59c4:	05220619 	streq	r0, [r2, #-1561]!	; 0xfffff9e7
    59c8:	05010622 	streq	r0, [r1, #-1570]	; 0xfffff9de
    59cc:	054f0619 	strbeq	r0, [pc, #-1561]	; 53bb <__HEAP_SIZE+0x43bb>
    59d0:	0501062f 	streq	r0, [r1, #-1583]	; 0xfffff9d1
    59d4:	05400631 	strbeq	r0, [r0, #-1585]	; 0xfffff9cf
    59d8:	01311511 	teqeq	r1, r1, lsl r5
    59dc:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    59e0:	00580104 	subseq	r0, r8, r4, lsl #2
    59e4:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
    59e8:	03040200 	movweq	r0, #16896	; 0x4200
    59ec:	04020001 	streq	r0, [r2], #-1
    59f0:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    59f4:	00660304 	rsbeq	r0, r6, r4, lsl #6
    59f8:	01030402 	tsteq	r3, r2, lsl #8
    59fc:	03040200 	movweq	r0, #16896	; 0x4200
    5a00:	04020001 	streq	r0, [r2], #-1
    5a04:	02002003 	andeq	r2, r0, #3
    5a08:	002e0304 	eoreq	r0, lr, r4, lsl #6
    5a0c:	20030402 	andcs	r0, r3, r2, lsl #8
    5a10:	03040200 	movweq	r0, #16896	; 0x4200
    5a14:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    5a18:	00200603 	eoreq	r0, r0, r3, lsl #12
    5a1c:	06030402 	streq	r0, [r3], -r2, lsl #8
    5a20:	04020058 	streq	r0, [r2], #-88	; 0xffffffa8
    5a24:	02007403 	andeq	r7, r0, #50331648	; 0x3000000
    5a28:	00010304 	andeq	r0, r1, r4, lsl #6
    5a2c:	01030402 	tsteq	r3, r2, lsl #8
    5a30:	02001905 	andeq	r1, r0, #81920	; 0x14000
    5a34:	0b030304 	bleq	c664c <__HEAP_SIZE+0xc564c>
    5a38:	00220501 	eoreq	r0, r2, r1, lsl #10
    5a3c:	06030402 	streq	r0, [r3], -r2, lsl #8
    5a40:	003d0501 	eorseq	r0, sp, r1, lsl #10
    5a44:	20030402 	andcs	r0, r3, r2, lsl #8
    5a48:	02001b05 	andeq	r1, r0, #5120	; 0x1400
    5a4c:	053c0304 	ldreq	r0, [ip, #-772]!	; 0xfffffcfc
    5a50:	0532061d 	ldreq	r0, [r2, #-1565]!	; 0xfffff9e3
    5a54:	20010631 	andcs	r0, r1, r1, lsr r6
    5a58:	53031905 	movwpl	r1, #14597	; 0x3905
    5a5c:	0902203c 	stmdbeq	r2, {r2, r3, r4, r5, sp}
    5a60:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    5a64:	02050005 	andeq	r0, r5, #5
    5a68:	00000000 	andeq	r0, r0, r0
    5a6c:	0126bf03 			; <UNDEFINED> instruction: 0x0126bf03
    5a70:	09050106 	stmdbeq	r5, {r1, r2, r8}
    5a74:	47052f06 	strmi	r2, [r5, -r6, lsl #30]
    5a78:	16090514 			; <UNDEFINED> instruction: 0x16090514
    5a7c:	01060b05 	tsteq	r6, r5, lsl #22
    5a80:	03060905 	movweq	r0, #26885	; 0x6905
    5a84:	0d052e0b 	stceq	14, cr2, [r5, #-44]	; 0xffffffd4
    5a88:	061d0530 			; <UNDEFINED> instruction: 0x061d0530
    5a8c:	06090501 	streq	r0, [r9], -r1, lsl #10
    5a90:	30310522 	eorscc	r0, r1, r2, lsr #10
    5a94:	13060505 	movwne	r0, #25861	; 0x6505
    5a98:	03060d05 	movweq	r0, #27909	; 0x6d05
    5a9c:	12052070 	andne	r2, r5, #112	; 0x70
    5aa0:	022e0106 	eoreq	r0, lr, #-2147483647	; 0x80000001
    5aa4:	01010004 	tsteq	r1, r4
    5aa8:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    5aac:	00000002 	andeq	r0, r0, r2
    5ab0:	26e00300 	strbtcs	r0, [r0], r0, lsl #6
    5ab4:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    5ab8:	13210609 			; <UNDEFINED> instruction: 0x13210609
    5abc:	05143705 	ldreq	r3, [r4, #-1797]	; 0xfffff8fb
    5ac0:	11051509 	tstne	r5, r9, lsl #10
    5ac4:	09050106 	stmdbeq	r5, {r1, r2, r8}
    5ac8:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    5acc:	0d053206 	sfmeq	f3, 4, [r5, #-24]	; 0xffffffe8
    5ad0:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    5ad4:	00150530 	andseq	r0, r5, r0, lsr r5
    5ad8:	06040402 	streq	r0, [r4], -r2, lsl #8
    5adc:	00090501 	andeq	r0, r9, r1, lsl #10
    5ae0:	06040402 	streq	r0, [r4], -r2, lsl #8
    5ae4:	003a0522 	eorseq	r0, sl, r2, lsr #10
    5ae8:	30040402 	andcc	r0, r4, r2, lsl #8
    5aec:	02000905 	andeq	r0, r0, #81920	; 0x14000
    5af0:	05140404 	ldreq	r0, [r4, #-1028]	; 0xfffffbfc
    5af4:	04020005 	streq	r0, [r2], #-5
    5af8:	05130604 	ldreq	r0, [r3, #-1540]	; 0xfffff9fc
    5afc:	04020011 	streq	r0, [r2], #-17	; 0xffffffef
    5b00:	2e730301 	cdpcs	3, 7, cr0, cr3, cr1, {0}
    5b04:	01040200 	mrseq	r0, R12_usr
    5b08:	0004022e 	andeq	r0, r4, lr, lsr #4
    5b0c:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    5b10:	00020500 	andeq	r0, r2, r0, lsl #10
    5b14:	03000000 	movweq	r0, #0
    5b18:	060126fc 			; <UNDEFINED> instruction: 0x060126fc
    5b1c:	06090501 	streq	r0, [r9], -r1, lsl #10
    5b20:	05131321 	ldreq	r1, [r3, #-801]	; 0xfffffcdf
    5b24:	0905143e 	stmdbeq	r5, {r1, r2, r3, r4, r5, sl, ip}
    5b28:	06110515 			; <UNDEFINED> instruction: 0x06110515
    5b2c:	00090501 	andeq	r0, r9, r1, lsl #10
    5b30:	06040402 	streq	r0, [r4], -r2, lsl #8
    5b34:	00220535 	eoreq	r0, r2, r5, lsr r5
    5b38:	06040402 	streq	r0, [r4], -r2, lsl #8
    5b3c:	000d0501 	andeq	r0, sp, r1, lsl #10
    5b40:	06040402 	streq	r0, [r4], -r2, lsl #8
    5b44:	00150530 	andseq	r0, r5, r0, lsr r5
    5b48:	06040402 	streq	r0, [r4], -r2, lsl #8
    5b4c:	00090501 	andeq	r0, r9, r1, lsl #10
    5b50:	06040402 	streq	r0, [r4], -r2, lsl #8
    5b54:	00410522 	subeq	r0, r1, r2, lsr #10
    5b58:	30040402 	andcc	r0, r4, r2, lsl #8
    5b5c:	02000905 	andeq	r0, r0, #81920	; 0x14000
    5b60:	05140404 	ldreq	r0, [r4, #-1028]	; 0xfffffbfc
    5b64:	04020005 	streq	r0, [r2], #-5
    5b68:	05130604 	ldreq	r0, [r3, #-1540]	; 0xfffff9fc
    5b6c:	04020011 	streq	r0, [r2], #-17	; 0xffffffef
    5b70:	2e700301 	cdpcs	3, 7, cr0, cr0, cr1, {0}
    5b74:	01040200 	mrseq	r0, R12_usr
    5b78:	0004022e 	andeq	r0, r4, lr, lsr #4
    5b7c:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    5b80:	00020500 	andeq	r0, r2, r0, lsl #10
    5b84:	03000000 	movweq	r0, #0
    5b88:	0601279d 			; <UNDEFINED> instruction: 0x0601279d
    5b8c:	06090501 	streq	r0, [r9], -r1, lsl #10
    5b90:	46051321 	strmi	r1, [r5], -r1, lsr #6
    5b94:	15090514 	strne	r0, [r9, #-1300]	; 0xfffffaec
    5b98:	01060b05 	tsteq	r6, r5, lsl #22
    5b9c:	03060905 	movweq	r0, #26885	; 0x6905
    5ba0:	11052e09 	tstne	r5, r9, lsl #28
    5ba4:	0b050106 	bleq	145fc4 <__RAM_SIZE+0x45fc4>
    5ba8:	060d0520 	streq	r0, [sp], -r0, lsr #10
    5bac:	06170522 	ldreq	r0, [r7], -r2, lsr #10
    5bb0:	03050501 	movweq	r0, #21761	; 0x5501
    5bb4:	0d052e0a 	stceq	14, cr2, [r5, #-40]	; 0xffffffd8
    5bb8:	206d0306 	rsbcs	r0, sp, r6, lsl #6
    5bbc:	01061205 	tsteq	r6, r5, lsl #4
    5bc0:	0315052e 	tsteq	r5, #192937984	; 0xb800000
    5bc4:	3c05200d 	stccc	0, cr2, [r5], {13}
    5bc8:	09052306 	stmdbeq	r5, {r1, r2, r8, r9, sp}
    5bcc:	06100514 			; <UNDEFINED> instruction: 0x06100514
    5bd0:	00040201 	andeq	r0, r4, r1, lsl #4
    5bd4:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    5bd8:	a8020500 	stmdage	r2, {r8, sl}
    5bdc:	0310002b 	tsteq	r0, #43	; 0x2b
    5be0:	050127c0 	streq	r2, [r1, #-1984]	; 0xfffff840
    5be4:	09051328 	stmdbeq	r5, {r3, r5, r8, r9, ip}
    5be8:	06220514 			; <UNDEFINED> instruction: 0x06220514
    5bec:	2e0b0501 	cfsh32cs	mvfx0, mvfx11, #1
    5bf0:	24060d05 	strcs	r0, [r6], #-3333	; 0xfffff2fb
    5bf4:	01062105 	tsteq	r6, r5, lsl #2
    5bf8:	4e060d05 	cdpmi	13, 0, cr0, cr6, cr5, {0}
    5bfc:	01062105 	tsteq	r6, r5, lsl #2
    5c00:	3d062505 	cfstr32cc	mvfx2, [r6, #-20]	; 0xffffffec
    5c04:	1f032b05 	svcne	0x00032b05
    5c08:	030d0501 	movweq	r0, #54529	; 0xd501
    5c0c:	2e01010e 	adfcss	f0, f1, #0.5
    5c10:	03040200 	movweq	r0, #16896	; 0x4200
    5c14:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    5c18:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    5c1c:	00200104 	eoreq	r0, r0, r4, lsl #2
    5c20:	74040402 	strvc	r0, [r4], #-1026	; 0xfffffbfe
    5c24:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    5c28:	04020001 	streq	r0, [r2], #-1
    5c2c:	02000104 	andeq	r0, r0, #4, 2
    5c30:	00740404 	rsbseq	r0, r4, r4, lsl #8
    5c34:	82070402 	andhi	r0, r7, #33554432	; 0x2000000
    5c38:	07040200 	streq	r0, [r4, -r0, lsl #4]
    5c3c:	04020090 	streq	r0, [r2], #-144	; 0xffffff70
    5c40:	02000107 	andeq	r0, r0, #-1073741823	; 0xc0000001
    5c44:	052e0704 	streq	r0, [lr, #-1796]!	; 0xfffff8fc
    5c48:	04020024 	streq	r0, [r2], #-36	; 0xffffffdc
    5c4c:	0d051307 	stceq	3, cr1, [r5, #-28]	; 0xffffffe4
    5c50:	07040200 	streq	r0, [r4, -r0, lsl #4]
    5c54:	00290517 	eoreq	r0, r9, r7, lsl r5
    5c58:	03070402 	movweq	r0, #29698	; 0x7402
    5c5c:	05052012 	streq	r2, [r5, #-18]	; 0xffffffee
    5c60:	07040200 	streq	r0, [r4, -r0, lsl #4]
    5c64:	0d051306 	stceq	3, cr1, [r5, #-24]	; 0xffffffe8
    5c68:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
    5c6c:	20670306 	rsbcs	r0, r7, r6, lsl #6
    5c70:	01010008 	tsteq	r1, r8
    5c74:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    5c78:	00000002 	andeq	r0, r0, r2
    5c7c:	18b10300 	ldmne	r1!, {r8, r9}
    5c80:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    5c84:	052f0609 	streq	r0, [pc, #-1545]!	; 5683 <__HEAP_SIZE+0x4683>
    5c88:	09051432 	stmdbeq	r5, {r1, r4, r5, sl, ip}
    5c8c:	320d0514 	andcc	r0, sp, #20, 10	; 0x5000000
    5c90:	01061505 	tsteq	r6, r5, lsl #10
    5c94:	02002705 	andeq	r2, r0, #1310720	; 0x140000
    5c98:	22060404 	andcs	r0, r6, #4, 8	; 0x4000000
    5c9c:	02000d05 	andeq	r0, r0, #320	; 0x140
    5ca0:	05160404 	ldreq	r0, [r6, #-1028]	; 0xfffffbfc
    5ca4:	04020011 	streq	r0, [r2], #-17	; 0xffffffef
    5ca8:	05010604 	streq	r0, [r1, #-1540]	; 0xfffff9fc
    5cac:	04020029 	streq	r0, [r2], #-41	; 0xffffffd7
    5cb0:	05500604 	ldrbeq	r0, [r0, #-1540]	; 0xfffff9fc
    5cb4:	0402000d 	streq	r0, [r2], #-13
    5cb8:	11051604 	tstne	r5, r4, lsl #12
    5cbc:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    5cc0:	0f050106 	svceq	0x00050106
    5cc4:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    5cc8:	06110520 	ldreq	r0, [r1], -r0, lsr #10
    5ccc:	061a0522 	ldreq	r0, [sl], -r2, lsr #10
    5cd0:	06290501 	strteq	r0, [r9], -r1, lsl #10
    5cd4:	150d054e 	strne	r0, [sp, #-1358]	; 0xfffffab2
    5cd8:	144e1105 	strbne	r1, [lr], #-261	; 0xfffffefb
    5cdc:	01061805 	tsteq	r6, r5, lsl #16
    5ce0:	02002c05 	andeq	r2, r0, #1280	; 0x500
    5ce4:	20060104 	andcs	r0, r6, r4, lsl #2
    5ce8:	02001105 	andeq	r1, r0, #1073741825	; 0x40000001
    5cec:	01060104 	tsteq	r6, r4, lsl #2
    5cf0:	03060905 	movweq	r0, #26885	; 0x6905
    5cf4:	0d052e34 	stceq	14, cr2, [r5, #-208]	; 0xffffff30
    5cf8:	23051432 	movwcs	r1, #21554	; 0x5432
    5cfc:	0f050106 	svceq	0x00050106
    5d00:	0629052e 	strteq	r0, [r9], -lr, lsr #10
    5d04:	05200c03 	streq	r0, [r0, #-3075]!	; 0xfffff3fd
    5d08:	1705150d 	strne	r1, [r5, -sp, lsl #10]
    5d0c:	0f050106 	svceq	0x00050106
    5d10:	0305052e 	movweq	r0, #21806	; 0x552e
    5d14:	15052e29 	strne	r2, [r5, #-3625]	; 0xfffff1d7
    5d18:	01040200 	mrseq	r0, R12_usr
    5d1c:	207eef03 	rsbscs	lr, lr, r3, lsl #30
    5d20:	01040200 	mrseq	r0, R12_usr
    5d24:	2103062e 	tstcs	r3, lr, lsr #12
    5d28:	062d0520 	strteq	r0, [sp], -r0, lsr #10
    5d2c:	4a170501 	bmi	5c7138 <__RAM_SIZE+0x4c7138>
    5d30:	02006605 	andeq	r6, r0, #5242880	; 0x500000
    5d34:	2c060204 	sfmcs	f0, 4, [r6], {4}
    5d38:	02006705 	andeq	r6, r0, #1310720	; 0x140000
    5d3c:	01060204 	tsteq	r6, r4, lsl #4
    5d40:	02040200 	andeq	r0, r4, #0, 4
    5d44:	06190520 	ldreq	r0, [r9], -r0, lsr #10
    5d48:	06330526 	ldrteq	r0, [r3], -r6, lsr #10
    5d4c:	11055801 	tstne	r5, r1, lsl #16
    5d50:	01380306 	teqeq	r8, r6, lsl #6
    5d54:	05301505 	ldreq	r1, [r0, #-1285]!	; 0xfffffafb
    5d58:	09033011 	stmdbeq	r3, {r0, r4, ip, sp}
    5d5c:	0627053c 			; <UNDEFINED> instruction: 0x0627053c
    5d60:	2e130501 	cfmul32cs	mvfx0, mvfx3, mvfx1
    5d64:	03061505 	movweq	r1, #25861	; 0x6505
    5d68:	2905200f 	stmdbcs	r5, {r0, r1, r2, r3, sp}
    5d6c:	15050106 	strne	r0, [r5, #-262]	; 0xfffffefa
    5d70:	2d053006 	stccs	0, cr3, [r5, #-24]	; 0xffffffe8
    5d74:	17050106 	strne	r0, [r5, -r6, lsl #2]
    5d78:	0619052e 	ldreq	r0, [r9], -lr, lsr #10
    5d7c:	06260534 			; <UNDEFINED> instruction: 0x06260534
    5d80:	3e052001 	cdpcc	0, 0, cr2, cr5, cr1, {0}
    5d84:	3c6c0306 	stclcc	3, cr0, [ip], #-24	; 0xffffffe8
    5d88:	05131505 	ldreq	r1, [r3, #-1285]	; 0xfffffafb
    5d8c:	3c170319 	ldccc	3, cr0, [r7], {25}
    5d90:	05342905 	ldreq	r2, [r4, #-2309]!	; 0xfffff6fb
    5d94:	05051723 	streq	r1, [r5, #-1827]	; 0xfffff8dd
    5d98:	09021306 	stmdbeq	r2, {r1, r2, r8, r9, ip}
    5d9c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    5da0:	02050001 	andeq	r0, r5, #1
    5da4:	10002c2c 	andne	r2, r0, ip, lsr #24
    5da8:	0128fc03 	msreq	CPSR_f, r3, lsl #24
    5dac:	42050106 	andmi	r0, r5, #-2147483647	; 0x80000001
    5db0:	20052f06 	andcs	r2, r5, r6, lsl #30
    5db4:	03050514 	movweq	r0, #21780	; 0x5514
    5db8:	2e050110 	fltcss	f5, r0
    5dbc:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    5dc0:	053e062e 	ldreq	r0, [lr, #-1582]!	; 0xfffff9d2
    5dc4:	01054c28 	tsteq	r5, r8, lsr #24
    5dc8:	02201306 	eoreq	r1, r0, #402653184	; 0x18000000
    5dcc:	01010002 	tsteq	r1, r2
    5dd0:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    5dd4:	00000002 	andeq	r0, r0, r2
    5dd8:	299a0300 	ldmibcs	sl, {r8, r9}
    5ddc:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    5de0:	052f0657 	streq	r0, [pc, #-1623]!	; 5791 <__HEAP_SIZE+0x4791>
    5de4:	3f051420 	svccc	0x00051420
    5de8:	17050516 	smladne	r5, r6, r5, r0
    5dec:	062e2e06 	strteq	r2, [lr], -r6, lsl #28
    5df0:	01200127 			; <UNDEFINED> instruction: 0x01200127
    5df4:	3c3c2e01 	ldccc	14, cr2, [ip], #-4
    5df8:	0620063c 			; <UNDEFINED> instruction: 0x0620063c
    5dfc:	05143c20 	ldreq	r3, [r4, #-3104]	; 0xfffff3e0
    5e00:	01054c31 	tsteq	r5, r1, lsr ip
    5e04:	04021306 	streq	r1, [r2], #-774	; 0xfffffcfa
    5e08:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    5e0c:	02050005 	andeq	r0, r5, #5
    5e10:	10002c48 	andne	r2, r0, r8, asr #24
    5e14:	0129ba03 			; <UNDEFINED> instruction: 0x0129ba03
    5e18:	63050106 	movwvs	r0, #20742	; 0x5106
    5e1c:	24053d06 	strcs	r3, [r5], #-3334	; 0xfffff2fa
    5e20:	03090514 	movweq	r0, #38164	; 0x9514
    5e24:	2001010c 	andcs	r0, r1, ip, lsl #2
    5e28:	3c3c0101 	ldfccs	f0, [ip], #-4
    5e2c:	20063c3c 	andcs	r3, r6, ip, lsr ip
    5e30:	173c2006 	ldrne	r2, [ip, -r6]!
    5e34:	01060b05 	tsteq	r6, r5, lsl #22
    5e38:	05301a05 	ldreq	r1, [r0, #-2565]!	; 0xfffff5fb
    5e3c:	0531063f 	ldreq	r0, [r1, #-1599]!	; 0xfffff9c1
    5e40:	36051309 	strcc	r1, [r5], -r9, lsl #6
    5e44:	06050530 			; <UNDEFINED> instruction: 0x06050530
    5e48:	00030213 	andeq	r0, r3, r3, lsl r2
    5e4c:	01050101 	tsteq	r5, r1, lsl #2
    5e50:	84020500 	strhi	r0, [r2], #-1280	; 0xfffffb00
    5e54:	0310002c 	tsteq	r0, #44	; 0x2c
    5e58:	060129dd 			; <UNDEFINED> instruction: 0x060129dd
    5e5c:	06050501 	streq	r0, [r5], -r1, lsl #10
    5e60:	37051321 	strcc	r1, [r5, -r1, lsr #6]
    5e64:	03050514 	movweq	r0, #21780	; 0x5514
    5e68:	16050112 			; <UNDEFINED> instruction: 0x16050112
    5e6c:	14050106 	strne	r0, [r5], #-262	; 0xfffffefa
    5e70:	06230520 	strteq	r0, [r3], -r0, lsr #10
    5e74:	13050521 	movwne	r0, #21793	; 0x5521
    5e78:	2e3c2001 	cdpcs	0, 3, cr2, cr12, cr1, {0}
    5e7c:	03040200 	movweq	r0, #16896	; 0x4200
    5e80:	04020058 	streq	r0, [r2], #-88	; 0xffffffa8
    5e84:	02002e03 	andeq	r2, r0, #3, 28	; 0x30
    5e88:	003c0304 	eorseq	r0, ip, r4, lsl #6
    5e8c:	14030402 	strne	r0, [r3], #-1026	; 0xfffffbfe
    5e90:	02001e05 	andeq	r1, r0, #5, 28	; 0x50
    5e94:	01060304 	tsteq	r6, r4, lsl #6
    5e98:	03040200 	movweq	r0, #16896	; 0x4200
    5e9c:	00070520 	andeq	r0, r7, r0, lsr #10
    5ea0:	20030402 	andcs	r0, r3, r2, lsl #8
    5ea4:	30060905 	andcc	r0, r6, r5, lsl #18
    5ea8:	2e3c2001 	cdpcs	0, 3, cr2, cr12, cr1, {0}
    5eac:	03040200 	movweq	r0, #16896	; 0x4200
    5eb0:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    5eb4:	02002e03 	andeq	r2, r0, #3, 28	; 0x30
    5eb8:	003c0304 	eorseq	r0, ip, r4, lsl #6
    5ebc:	13030402 	movwne	r0, #13314	; 0x3402
    5ec0:	03040200 	movweq	r0, #16896	; 0x4200
    5ec4:	04020001 	streq	r0, [r2], #-1
    5ec8:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    5ecc:	00010304 	andeq	r0, r1, r4, lsl #6
    5ed0:	06030402 	streq	r0, [r3], -r2, lsl #8
    5ed4:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    5ed8:	004a0601 	subeq	r0, sl, r1, lsl #12
    5edc:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
    5ee0:	03040200 	movweq	r0, #16896	; 0x4200
    5ee4:	04020001 	streq	r0, [r2], #-1
    5ee8:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    5eec:	00660304 	rsbeq	r0, r6, r4, lsl #6
    5ef0:	01030402 	tsteq	r3, r2, lsl #8
    5ef4:	03040200 	movweq	r0, #16896	; 0x4200
    5ef8:	04020001 	streq	r0, [r2], #-1
    5efc:	02002003 	andeq	r2, r0, #3
    5f00:	20060304 	andcs	r0, r6, r4, lsl #6
    5f04:	03040200 	movweq	r0, #16896	; 0x4200
    5f08:	02002006 	andeq	r2, r0, #6
    5f0c:	00200304 	eoreq	r0, r0, r4, lsl #6
    5f10:	20030402 	andcs	r0, r3, r2, lsl #8
    5f14:	03040200 	movweq	r0, #16896	; 0x4200
    5f18:	02002006 	andeq	r2, r0, #6
    5f1c:	58060304 	stmdapl	r6, {r2, r8, r9}
    5f20:	03040200 	movweq	r0, #16896	; 0x4200
    5f24:	04020074 	streq	r0, [r2], #-116	; 0xffffff8c
    5f28:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    5f2c:	05010304 	streq	r0, [r1, #-772]	; 0xfffffcfc
    5f30:	0402000d 	streq	r0, [r2], #-13
    5f34:	010c0303 	tsteq	ip, r3, lsl #6
    5f38:	02000905 	andeq	r0, r0, #81920	; 0x14000
    5f3c:	00360104 	eorseq	r0, r6, r4, lsl #2
    5f40:	17010402 	strne	r0, [r1, -r2, lsl #8]
    5f44:	02001b05 	andeq	r1, r0, #5120	; 0x1400
    5f48:	01060104 	tsteq	r6, r4, lsl #2
    5f4c:	02003605 	andeq	r3, r0, #5242880	; 0x500000
    5f50:	05200104 	streq	r0, [r0, #-260]!	; 0xfffffefc
    5f54:	0402000b 	streq	r0, [r2], #-11
    5f58:	0d053c01 	stceq	12, cr3, [r5, #-4]
    5f5c:	05163306 	ldreq	r3, [r6, #-774]	; 0xfffffcfa
    5f60:	05010621 	streq	r0, [r1, #-1569]	; 0xfffff9df
    5f64:	3c1a0301 	ldccc	3, cr0, [sl], {1}
    5f68:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    5f6c:	03060104 	movweq	r0, #24836	; 0x6104
    5f70:	00207fbf 	strhteq	r7, [r0], -pc
    5f74:	06010402 	streq	r0, [r1], -r2, lsl #8
    5f78:	0009053c 	andeq	r0, r9, ip, lsr r5
    5f7c:	06010402 	streq	r0, [r1], -r2, lsl #8
    5f80:	04020016 	streq	r0, [r2], #-22	; 0xffffffea
    5f84:	063c0601 	ldrteq	r0, [ip], -r1, lsl #12
    5f88:	01011503 	tsteq	r1, r3, lsl #10
    5f8c:	2001012e 	andcs	r0, r1, lr, lsr #2
    5f90:	20062006 	andcs	r2, r6, r6
    5f94:	06202020 	strteq	r2, [r0], -r0, lsr #32
    5f98:	15053c20 	strne	r3, [r5, #-3104]	; 0xfffff3e0
    5f9c:	05011203 	streq	r1, [r1, #-515]	; 0xfffffdfd
    5fa0:	14030634 	strne	r0, [r3], #-1588	; 0xfffff9cc
    5fa4:	13050520 	movwne	r0, #21792	; 0x5520
    5fa8:	01060c05 	tsteq	r6, r5, lsl #24
    5fac:	01000e02 	tsteq	r0, r2, lsl #28
    5fb0:	00010501 	andeq	r0, r1, r1, lsl #10
    5fb4:	00000205 	andeq	r0, r0, r5, lsl #4
    5fb8:	bb030000 	bllt	c5fc0 <__HEAP_SIZE+0xc4fc0>
    5fbc:	0106012a 	tsteq	r6, sl, lsr #2
    5fc0:	21060505 	tstcs	r6, r5, lsl #10
    5fc4:	05145005 	ldreq	r5, [r4, #-5]
    5fc8:	0505163f 	streq	r1, [r5, #-1599]	; 0xfffff9c1
    5fcc:	062e0615 			; <UNDEFINED> instruction: 0x062e0615
    5fd0:	06140527 	ldreq	r0, [r4], -r7, lsr #10
    5fd4:	06230501 	strteq	r0, [r3], -r1, lsl #10
    5fd8:	13050521 	movwne	r0, #21793	; 0x5521
    5fdc:	3c3c2001 	ldccc	0, cr2, [ip], #-4
    5fe0:	03040200 	movweq	r0, #16896	; 0x4200
    5fe4:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    5fe8:	02002e03 	andeq	r2, r0, #3, 28	; 0x30
    5fec:	053c0304 	ldreq	r0, [ip, #-772]!	; 0xfffffcfc
    5ff0:	04020009 	streq	r0, [r2], #-9
    5ff4:	010c0303 	tsteq	ip, r3, lsl #6
    5ff8:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    5ffc:	00350304 	eorseq	r0, r5, r4, lsl #6
    6000:	01030402 	tsteq	r3, r2, lsl #8
    6004:	03040200 	movweq	r0, #16896	; 0x4200
    6008:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    600c:	02003c03 	andeq	r3, r0, #768	; 0x300
    6010:	002e0304 	eoreq	r0, lr, r4, lsl #6
    6014:	4a030402 	bmi	c7024 <__HEAP_SIZE+0xc6024>
    6018:	03040200 	movweq	r0, #16896	; 0x4200
    601c:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    6020:	02003c03 	andeq	r3, r0, #768	; 0x300
    6024:	00130304 	andseq	r0, r3, r4, lsl #6
    6028:	01030402 	tsteq	r3, r2, lsl #8
    602c:	03040200 	movweq	r0, #16896	; 0x4200
    6030:	04020001 	streq	r0, [r2], #-1
    6034:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    6038:	20060304 	andcs	r0, r6, r4, lsl #6
    603c:	01040200 	mrseq	r0, R12_usr
    6040:	02004a06 	andeq	r4, r0, #24576	; 0x6000
    6044:	002e0304 	eoreq	r0, lr, r4, lsl #6
    6048:	01030402 	tsteq	r3, r2, lsl #8
    604c:	03040200 	movweq	r0, #16896	; 0x4200
    6050:	04020001 	streq	r0, [r2], #-1
    6054:	02006603 	andeq	r6, r0, #3145728	; 0x300000
    6058:	00010304 	andeq	r0, r1, r4, lsl #6
    605c:	01030402 	tsteq	r3, r2, lsl #8
    6060:	03040200 	movweq	r0, #16896	; 0x4200
    6064:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    6068:	02002e03 	andeq	r2, r0, #3, 28	; 0x30
    606c:	00200304 	eoreq	r0, r0, r4, lsl #6
    6070:	20030402 	andcs	r0, r3, r2, lsl #8
    6074:	03040200 	movweq	r0, #16896	; 0x4200
    6078:	02002006 	andeq	r2, r0, #6
    607c:	58060304 	stmdapl	r6, {r2, r8, r9}
    6080:	03040200 	movweq	r0, #16896	; 0x4200
    6084:	04020074 	streq	r0, [r2], #-116	; 0xffffff8c
    6088:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    608c:	05010304 	streq	r0, [r1, #-772]	; 0xfffffcfc
    6090:	04020009 	streq	r0, [r2], #-9
    6094:	1b051603 	blne	14b8a8 <__RAM_SIZE+0x4b8a8>
    6098:	03040200 	movweq	r0, #16896	; 0x4200
    609c:	36050106 	strcc	r0, [r5], -r6, lsl #2
    60a0:	03040200 	movweq	r0, #16896	; 0x4200
    60a4:	000b0520 	andeq	r0, fp, r0, lsr #10
    60a8:	3c030402 	cfstrscc	mvf0, [r3], {2}
    60ac:	34060d05 	strcc	r0, [r6], #-3333	; 0xfffff2fb
    60b0:	01062105 	tsteq	r6, r5, lsl #2
    60b4:	03063405 	movweq	r3, #25605	; 0x6405
    60b8:	01053c11 	tsteq	r5, r1, lsl ip
    60bc:	05051306 	streq	r1, [r5, #-774]	; 0xfffffcfa
    60c0:	01040200 	mrseq	r0, R12_usr
    60c4:	20500306 	subscs	r0, r0, r6, lsl #6
    60c8:	01040200 	mrseq	r0, R12_usr
    60cc:	02003c06 	andeq	r3, r0, #1536	; 0x600
    60d0:	03060104 	movweq	r0, #24836	; 0x6104
    60d4:	0b020113 	bleq	86528 <__HEAP_SIZE+0x85528>
    60d8:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    60dc:	02050001 	andeq	r0, r5, #1
    60e0:	00000000 	andeq	r0, r0, r0
    60e4:	012b8203 			; <UNDEFINED> instruction: 0x012b8203
    60e8:	31050106 	tstcc	r5, r6, lsl #2
    60ec:	1e052f06 	cdpne	15, 0, cr2, cr5, cr6, {0}
    60f0:	13050514 	movwne	r0, #21780	; 0x5514
    60f4:	05300905 	ldreq	r0, [r0, #-2309]!	; 0xfffff6fb
    60f8:	05010623 	streq	r0, [r1, #-1571]	; 0xfffff9dd
    60fc:	053d0609 	ldreq	r0, [sp, #-1545]!	; 0xfffff9f7
    6100:	05010624 	streq	r0, [r1, #-1572]	; 0xfffff9dc
    6104:	053e0605 	ldreq	r0, [lr, #-1541]!	; 0xfffff9fb
    6108:	01053027 	tsteq	r5, r7, lsr #32
    610c:	02201306 	eoreq	r1, r0, #402653184	; 0x18000000
    6110:	01010005 	tsteq	r1, r5
    6114:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    6118:	002d6802 	eoreq	r6, sp, r2, lsl #16
    611c:	2b920310 	blcs	fe486d64 <__StackTop+0xc6386d64>
    6120:	13390501 	teqne	r9, #4194304	; 0x400000
    6124:	05150505 	ldreq	r0, [r5, #-1285]	; 0xfffffafb
    6128:	0501061f 	streq	r0, [r1, #-1567]	; 0xfffff9e1
    612c:	053d0605 	ldreq	r0, [sp, #-1541]!	; 0xfffff9fb
    6130:	05010620 	streq	r0, [r1, #-1568]	; 0xfffff9e0
    6134:	053e062f 	ldreq	r0, [lr, #-1583]!	; 0xfffff9d1
    6138:	02130601 	andseq	r0, r3, #1048576	; 0x100000
    613c:	01010006 	tsteq	r1, r6
    6140:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    6144:	002d8002 	eoreq	r8, sp, r2
    6148:	2b9f0310 	blcs	fe7c6d90 <__StackTop+0xc66c6d90>
    614c:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    6150:	053d0605 	ldreq	r0, [sp, #-1541]!	; 0xfffff9fb
    6154:	1e051440 	cfcvtdsne	mvf1, mvd5
    6158:	13220514 			; <UNDEFINED> instruction: 0x13220514
    615c:	05140505 	ldreq	r0, [r4, #-1285]	; 0xfffffafb
    6160:	1a053109 	bne	15258c <__RAM_SIZE+0x5258c>
    6164:	09050106 	stmdbeq	r5, {r1, r2, r8}
    6168:	44052f06 	strmi	r2, [r5], #-3846	; 0xfffff0fa
    616c:	1a050106 	bne	14658c <__RAM_SIZE+0x4658c>
    6170:	060d0520 	streq	r0, [sp], -r0, lsr #10
    6174:	061d0523 	ldreq	r0, [sp], -r3, lsr #10
    6178:	4a0f0501 	bmi	3c7584 <__RAM_SIZE+0x2c7584>
    617c:	24061105 	strcs	r1, [r6], #-261	; 0xfffffefb
    6180:	01061d05 	tsteq	r6, r5, lsl #26
    6184:	202e2e05 	eorcs	r2, lr, r5, lsl #28
    6188:	2f061105 	svccs	0x00061105
    618c:	01061905 	tsteq	r6, r5, lsl #18
    6190:	06050520 	streq	r0, [r5], -r0, lsr #10
    6194:	05012703 	streq	r2, [r1, #-1795]	; 0xfffff8fd
    6198:	05053030 	streq	r3, [r5, #-48]	; 0xffffffd0
    619c:	06010514 			; <UNDEFINED> instruction: 0x06010514
    61a0:	060d0513 			; <UNDEFINED> instruction: 0x060d0513
    61a4:	052e5a03 	streq	r5, [lr, #-2563]!	; 0xfffff5fd
    61a8:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    61ac:	0905200f 	stmdbeq	r5, {r0, r1, r2, r3, sp}
    61b0:	3c0a0306 	stccc	3, cr0, [sl], {6}
    61b4:	01061f05 	tsteq	r6, r5, lsl #30
    61b8:	052e0b05 	streq	r0, [lr, #-2821]!	; 0xfffff4fb
    61bc:	0402003e 	streq	r0, [r2], #-62	; 0xffffffc2
    61c0:	0d053c01 	stceq	12, cr3, [r5, #-4]
    61c4:	05133506 	ldreq	r3, [r3, #-1286]	; 0xfffffafa
    61c8:	0501061c 	streq	r0, [r1, #-1564]	; 0xfffff9e4
    61cc:	1c052d15 	stcne	13, cr2, [r5], {21}
    61d0:	060e0521 	streq	r0, [lr], -r1, lsr #10
    61d4:	06100522 	ldreq	r0, [r0], -r2, lsr #10
    61d8:	060d0501 	streq	r0, [sp], -r1, lsl #10
    61dc:	052e0903 	streq	r0, [lr, #-2307]!	; 0xfffff6fd
    61e0:	0501061c 	streq	r0, [r1, #-1564]	; 0xfffff9e4
    61e4:	052f060d 	streq	r0, [pc, #-1549]!	; 5bdf <__HEAP_SIZE+0x4bdf>
    61e8:	20010615 	andcs	r0, r1, r5, lsl r6
    61ec:	03060d05 	movweq	r0, #27909	; 0x6d05
    61f0:	1c052079 	stcne	0, cr2, [r5], {121}	; 0x79
    61f4:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    61f8:	20063d06 	andcs	r3, r6, r6, lsl #26
    61fc:	15052f06 	strne	r2, [r5, #-3846]	; 0xfffff0fa
    6200:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    6204:	206c0319 	rsbcs	r0, ip, r9, lsl r3
    6208:	00080220 	andeq	r0, r8, r0, lsr #4
    620c:	01050101 	tsteq	r5, r1, lsl #2
    6210:	fc020500 	stc2	5, cr0, [r2], {-0}
    6214:	0310002d 	tsteq	r0, #45	; 0x2d
    6218:	05012be3 	streq	r2, [r1, #-3043]	; 0xfffff41d
    621c:	05051322 	streq	r1, [r5, #-802]	; 0xfffffcde
    6220:	06290515 			; <UNDEFINED> instruction: 0x06290515
    6224:	06230501 	strteq	r0, [r3], -r1, lsl #10
    6228:	0601053e 			; <UNDEFINED> instruction: 0x0601053e
    622c:	00030213 	andeq	r0, r3, r3, lsl r2
    6230:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    6234:	08020500 	stmdaeq	r2, {r8, sl}
    6238:	0310002e 	tsteq	r0, #46	; 0x2e
    623c:	05012dfc 	streq	r2, [r1, #-3580]	; 0xfffff204
    6240:	0905150d 	stmdbeq	r5, {r0, r2, r3, r8, sl, ip}
    6244:	14310515 	ldrtne	r0, [r1], #-1301	; 0xfffffaeb
    6248:	05160905 	ldreq	r0, [r6, #-2309]	; 0xfffff6fb
    624c:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
    6250:	0e052e0b 	cdpeq	14, 0, cr2, cr5, cr11, {0}
    6254:	20052506 	andcs	r2, r5, r6, lsl #10
    6258:	10050106 	andne	r0, r5, r6, lsl #2
    625c:	060e052e 	streq	r0, [lr], -lr, lsr #10
    6260:	061f0525 	ldreq	r0, [pc], -r5, lsr #10
    6264:	2e100501 	cfmul32cs	mvfx0, mvfx0, mvfx1
    6268:	28061205 	stmdacs	r6, {r0, r2, r9, ip}
    626c:	01061605 	tsteq	r6, r5, lsl #12
    6270:	052e6105 	streq	r6, [lr, #-261]!	; 0xfffffefb
    6274:	1a053c14 	bne	1552cc <__RAM_SIZE+0x552cc>
    6278:	052e6803 	streq	r6, [lr, #-2051]!	; 0xfffff7fd
    627c:	2e090315 	mcrcs	3, 0, r0, cr9, cr5, {0}
    6280:	19053433 	stmdbne	r5, {r0, r1, r4, r5, sl, ip, sp}
    6284:	052e0a03 	streq	r0, [lr, #-2563]!	; 0xfffff5fd
    6288:	05250625 	streq	r0, [r5, #-1573]!	; 0xfffff9db
    628c:	0905153b 	stmdbeq	r5, {r0, r1, r3, r4, r5, r8, sl, ip}
    6290:	06050514 			; <UNDEFINED> instruction: 0x06050514
    6294:	000b0213 	andeq	r0, fp, r3, lsl r2
    6298:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    629c:	00020500 	andeq	r0, r2, r0, lsl #10
    62a0:	03000000 	movweq	r0, #0
    62a4:	060131e3 	streq	r3, [r1], -r3, ror #3
    62a8:	06090501 	streq	r0, [r9], -r1, lsl #10
    62ac:	05131321 	ldreq	r1, [r3, #-801]	; 0xfffffcdf
    62b0:	09051438 	stmdbeq	r5, {r3, r4, r5, sl, ip}
    62b4:	06110514 			; <UNDEFINED> instruction: 0x06110514
    62b8:	000d0501 	andeq	r0, sp, r1, lsl #10
    62bc:	06040402 	streq	r0, [r4], -r2, lsl #8
    62c0:	00090532 	andeq	r0, r9, r2, lsr r5
    62c4:	1a040402 	bne	1072d4 <__RAM_SIZE+0x72d4>
    62c8:	02002405 	andeq	r2, r0, #83886080	; 0x5000000
    62cc:	01060404 	tsteq	r6, r4, lsl #8
    62d0:	02003c05 	andeq	r3, r0, #1280	; 0x500
    62d4:	3e060404 	cdpcc	4, 0, cr0, cr6, cr4, {0}
    62d8:	02000905 	andeq	r0, r0, #81920	; 0x14000
    62dc:	05140404 	ldreq	r0, [r4, #-1028]	; 0xfffffbfc
    62e0:	04020005 	streq	r0, [r2], #-5
    62e4:	05130604 	ldreq	r0, [r3, #-1540]	; 0xfffff9fc
    62e8:	04020011 	streq	r0, [r2], #-17	; 0xffffffef
    62ec:	206f0301 	rsbcs	r0, pc, r1, lsl #6
    62f0:	01040200 	mrseq	r0, R12_usr
    62f4:	0003022e 	andeq	r0, r3, lr, lsr #4
    62f8:	09050101 	stmdbeq	r5, {r0, r8}
    62fc:	00020500 	andeq	r0, r2, r0, lsl #10
    6300:	03000000 	movweq	r0, #0
    6304:	050132d0 	streq	r3, [r1, #-720]	; 0xfffffd30
    6308:	3305130d 	movwcc	r1, #21261	; 0x530d
    630c:	170d0514 	smladne	sp, r4, r5, r0
    6310:	01061505 	tsteq	r6, r5, lsl #10
    6314:	30063d05 	andcc	r3, r6, r5, lsl #26
    6318:	05140d05 	ldreq	r0, [r4, #-3333]	; 0xfffff2fb
    631c:	02130609 	andseq	r0, r3, #9437184	; 0x900000
    6320:	01010004 	tsteq	r1, r4
    6324:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    6328:	00000002 	andeq	r0, r0, r2
    632c:	32f30300 	rscscc	r0, r3, #0, 6
    6330:	13090501 	movwne	r0, #38145	; 0x9501
    6334:	05143f05 	ldreq	r3, [r4, #-3845]	; 0xfffff0fb
    6338:	0b051409 	bleq	14b364 <__RAM_SIZE+0x4b364>
    633c:	11050106 	tstne	r5, r6, lsl #2
    6340:	19052306 	stmdbne	r5, {r1, r2, r8, r9, sp}
    6344:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
    6348:	20790316 	rsbscs	r0, r9, r6, lsl r3
    634c:	03064005 	movweq	r4, #24581	; 0x6005
    6350:	0905200d 	stmdbeq	r5, {r0, r2, r3, sp}
    6354:	06050514 			; <UNDEFINED> instruction: 0x06050514
    6358:	00030213 	andeq	r0, r3, r3, lsl r2
    635c:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    6360:	00020500 	andeq	r0, r2, r0, lsl #10
    6364:	03000000 	movweq	r0, #0
    6368:	0501338c 	streq	r3, [r1, #-908]	; 0xfffffc74
    636c:	2c051309 	stccs	3, cr1, [r5], {9}
    6370:	14090514 	strne	r0, [r9], #-1300	; 0xfffffaec
    6374:	01061f05 	tsteq	r6, r5, lsl #30
    6378:	052e0b05 	streq	r0, [lr, #-2821]!	; 0xfffff4fb
    637c:	0a030611 	beq	c7bc8 <__HEAP_SIZE+0xc6bc8>
    6380:	062a0520 	strteq	r0, [sl], -r0, lsr #10
    6384:	2e130501 	cfmul32cs	mvfx0, mvfx3, mvfx1
    6388:	05261d05 	streq	r1, [r6, #-3333]!	; 0xfffff2fb
    638c:	05280636 	streq	r0, [r8, #-1590]!	; 0xfffff9ca
    6390:	05051409 	streq	r1, [r5, #-1033]	; 0xfffffbf7
    6394:	1d051306 	stcne	3, cr1, [r5, #-24]	; 0xffffffe8
    6398:	05207103 	streq	r7, [r0, #-259]!	; 0xfffffefd
    639c:	2e760315 	mrccs	3, 3, r0, cr6, cr5, {0}
    63a0:	01000602 	tsteq	r0, r2, lsl #12
    63a4:	00050501 	andeq	r0, r5, r1, lsl #10
    63a8:	00000205 	andeq	r0, r0, r5, lsl #4
    63ac:	b4030000 	strlt	r0, [r3], #-0
    63b0:	09050133 	stmdbeq	r5, {r0, r1, r4, r5, r8}
    63b4:	39051313 	stmdbcc	r5, {r0, r1, r4, r8, r9, ip}
    63b8:	16090514 			; <UNDEFINED> instruction: 0x16090514
    63bc:	01060b05 	tsteq	r6, r5, lsl #22
    63c0:	78030505 	stmdavc	r3, {r0, r2, r8, sl}
    63c4:	060d052e 	streq	r0, [sp], -lr, lsr #10
    63c8:	052e0d03 	streq	r0, [lr, #-3331]!	; 0xfffff2fd
    63cc:	05010621 	streq	r0, [r1, #-1569]	; 0xfffff9df
    63d0:	0f05203c 	svceq	0x0005203c
    63d4:	0611053c 			; <UNDEFINED> instruction: 0x0611053c
    63d8:	06170533 			; <UNDEFINED> instruction: 0x06170533
    63dc:	20130501 	andscs	r0, r3, r1, lsl #10
    63e0:	30061505 	andcc	r1, r6, r5, lsl #10
    63e4:	056a2d05 	strbeq	r2, [sl, #-3333]!	; 0xfffff2fb
    63e8:	15051711 	strne	r1, [r5, #-1809]	; 0xfffff8ef
    63ec:	13050106 	movwne	r0, #20742	; 0x5106
    63f0:	06150566 	ldreq	r0, [r5], -r6, ror #10
    63f4:	052e1f03 	streq	r1, [lr, #-3843]!	; 0xfffff0fd
    63f8:	05010640 	streq	r0, [r1, #-1600]	; 0xfffff9c0
    63fc:	19053c32 	stmdbne	r5, {r1, r4, r5, sl, fp, ip, sp}
    6400:	03050526 	movweq	r0, #21798	; 0x5526
    6404:	1505201d 	strne	r2, [r5, #-29]	; 0xffffffe3
    6408:	20400306 	subcs	r0, r0, r6, lsl #6
    640c:	01061905 	tsteq	r6, r5, lsl #18
    6410:	0631052e 	ldrteq	r0, [r1], -lr, lsr #10
    6414:	052e0903 	streq	r0, [lr, #-2307]!	; 0xfffff6fd
    6418:	40051615 	andmi	r1, r5, r5, lsl r6
    641c:	32050106 	andcc	r0, r5, #-2147483647	; 0x80000001
    6420:	0615053c 			; <UNDEFINED> instruction: 0x0615053c
    6424:	01010121 	tsteq	r1, r1, lsr #2
    6428:	01040200 	mrseq	r0, R12_usr
    642c:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    6430:	02002e03 	andeq	r2, r0, #3, 28	; 0x30
    6434:	00010304 	andeq	r0, r1, r4, lsl #6
    6438:	01030402 	tsteq	r3, r2, lsl #8
    643c:	03040200 	movweq	r0, #16896	; 0x4200
    6440:	04020066 	streq	r0, [r2], #-102	; 0xffffff9a
    6444:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    6448:	00010304 	andeq	r0, r1, r4, lsl #6
    644c:	20030402 	andcs	r0, r3, r2, lsl #8
    6450:	03040200 	movweq	r0, #16896	; 0x4200
    6454:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    6458:	02002003 	andeq	r2, r0, #3
    645c:	00200304 	eoreq	r0, r0, r4, lsl #6
    6460:	06030402 	streq	r0, [r3], -r2, lsl #8
    6464:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    6468:	00580603 	subseq	r0, r8, r3, lsl #12
    646c:	74030402 	strvc	r0, [r3], #-1026	; 0xfffffbfe
    6470:	03040200 	movweq	r0, #16896	; 0x4200
    6474:	04020001 	streq	r0, [r2], #-1
    6478:	19050103 	stmdbne	r5, {r0, r1, r8}
    647c:	03040200 	movweq	r0, #16896	; 0x4200
    6480:	01150306 	tsteq	r5, r6, lsl #6
    6484:	32061105 	andcc	r1, r6, #1073741825	; 0x40000001
    6488:	01062505 	tsteq	r6, r5, lsl #10
    648c:	05204405 	streq	r4, [r0, #-1029]!	; 0xfffffbfb
    6490:	14053c13 	strne	r3, [r5], #-3091	; 0xfffff3ed
    6494:	2e7fbc03 	cdpcs	12, 7, cr11, cr15, cr3, {0}
    6498:	05052020 	streq	r2, [r5, #-32]	; 0xffffffe0
    649c:	2000dd03 	andcs	sp, r0, r3, lsl #26
    64a0:	70031d05 	andvc	r1, r3, r5, lsl #26
    64a4:	06250520 	strteq	r0, [r5], -r0, lsr #10
    64a8:	05200a03 	streq	r0, [r0, #-2563]!	; 0xfffff5fd
    64ac:	09051534 	stmdbeq	r5, {r2, r4, r5, r8, sl, ip}
    64b0:	06100514 			; <UNDEFINED> instruction: 0x06100514
    64b4:	00080201 	andeq	r0, r8, r1, lsl #4
    64b8:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    64bc:	50020500 	andpl	r0, r2, r0, lsl #10
    64c0:	0310002e 	tsteq	r0, #46	; 0x2e
    64c4:	0501349b 	streq	r3, [r1, #-1179]	; 0xfffffb65
    64c8:	05131309 	ldreq	r1, [r3, #-777]	; 0xfffffcf7
    64cc:	0905143c 	stmdbeq	r5, {r2, r3, r4, r5, sl, ip}
    64d0:	060b0514 			; <UNDEFINED> instruction: 0x060b0514
    64d4:	03050501 	movweq	r0, #21761	; 0x5501
    64d8:	32052e7a 	andcc	r2, r5, #1952	; 0x7a0
    64dc:	2e0c0306 	cdpcs	3, 0, cr0, cr12, cr6, {0}
    64e0:	05133105 	ldreq	r3, [r3, #-261]	; 0xfffffefb
    64e4:	1405130d 	strne	r1, [r5], #-781	; 0xfffffcf3
    64e8:	25050106 	strcs	r0, [r5, #-262]	; 0xfffffefa
    64ec:	060d0520 	streq	r0, [sp], -r0, lsr #10
    64f0:	06160532 			; <UNDEFINED> instruction: 0x06160532
    64f4:	202b0501 	eorcs	r0, fp, r1, lsl #10
    64f8:	05200f05 	streq	r0, [r0, #-3845]!	; 0xfffff0fb
    64fc:	05310611 	ldreq	r0, [r1, #-1553]!	; 0xfffff9ef
    6500:	05010613 	streq	r0, [r1, #-1555]	; 0xfffff9ed
    6504:	206d0314 	rsbcs	r0, sp, r4, lsl r3
    6508:	03062505 	movweq	r2, #25861	; 0x6505
    650c:	052000ce 	streq	r0, [r0, #-206]!	; 0xffffff32
    6510:	09051537 	stmdbeq	r5, {r0, r1, r2, r4, r5, r8, sl, ip}
    6514:	06050514 			; <UNDEFINED> instruction: 0x06050514
    6518:	06150513 			; <UNDEFINED> instruction: 0x06150513
    651c:	05204603 	streq	r4, [r0, #-1539]!	; 0xfffff9fd
    6520:	2e010619 	mcrcs	6, 0, r0, cr1, cr9, {0}
    6524:	34063105 	strcc	r3, [r6], #-261	; 0xfffffefb
    6528:	05175205 	ldreq	r5, [r7, #-517]	; 0xfffffdfb
    652c:	2e051315 	mcrcs	3, 0, r1, cr5, cr5, {0}
    6530:	27050106 	strcs	r0, [r5, -r6, lsl #2]
    6534:	06150520 	ldreq	r0, [r5], -r0, lsr #10
    6538:	01013d25 	tsteq	r1, r5, lsr #26
    653c:	04020001 	streq	r0, [r2], #-1
    6540:	02004a01 	andeq	r4, r0, #4096	; 0x1000
    6544:	002e0304 	eoreq	r0, lr, r4, lsl #6
    6548:	01030402 	tsteq	r3, r2, lsl #8
    654c:	03040200 	movweq	r0, #16896	; 0x4200
    6550:	04020001 	streq	r0, [r2], #-1
    6554:	02006603 	andeq	r6, r0, #3145728	; 0x300000
    6558:	00010304 	andeq	r0, r1, r4, lsl #6
    655c:	01030402 	tsteq	r3, r2, lsl #8
    6560:	03040200 	movweq	r0, #16896	; 0x4200
    6564:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    6568:	02002e03 	andeq	r2, r0, #3, 28	; 0x30
    656c:	00200304 	eoreq	r0, r0, r4, lsl #6
    6570:	20030402 	andcs	r0, r3, r2, lsl #8
    6574:	03040200 	movweq	r0, #16896	; 0x4200
    6578:	02002006 	andeq	r2, r0, #6
    657c:	58060304 	stmdapl	r6, {r2, r8, r9}
    6580:	03040200 	movweq	r0, #16896	; 0x4200
    6584:	04020074 	streq	r0, [r2], #-116	; 0xffffff8c
    6588:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    658c:	00010304 	andeq	r0, r1, r4, lsl #6
    6590:	03030402 	movweq	r0, #13314	; 0x3402
    6594:	1d050114 	stfnes	f0, [r5, #-80]	; 0xffffffb0
    6598:	03040200 	movweq	r0, #16896	; 0x4200
    659c:	14050106 	strne	r0, [r5], #-262	; 0xfffffefa
    65a0:	052e4003 	streq	r4, [lr, #-3]!
    65a4:	00d40305 	sbcseq	r0, r4, r5, lsl #6
    65a8:	03140520 	tsteq	r4, #32, 10	; 0x8000000
    65ac:	20207fac 	eorcs	r7, r0, ip, lsr #31
    65b0:	01000602 	tsteq	r0, r2, lsl #12
    65b4:	00050501 	andeq	r0, r5, r1, lsl #10
    65b8:	00000205 	andeq	r0, r0, r5, lsl #4
    65bc:	fa030000 	blx	c65c4 <__HEAP_SIZE+0xc55c4>
    65c0:	09050134 	stmdbeq	r5, {r2, r4, r5, r8}
    65c4:	05131313 	ldreq	r1, [r3, #-787]	; 0xfffffced
    65c8:	09051466 	stmdbeq	r5, {r1, r2, r5, r6, sl, ip}
    65cc:	060b0514 			; <UNDEFINED> instruction: 0x060b0514
    65d0:	03050501 	movweq	r0, #21761	; 0x5501
    65d4:	31052e79 	tstcc	r5, r9, ror lr
    65d8:	2e0b0306 	cdpcs	3, 0, cr0, cr11, cr6, {0}
    65dc:	05180d05 	ldreq	r0, [r8, #-3333]	; 0xfffff2fb
    65e0:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    65e4:	2105200f 	tstcs	r5, pc
    65e8:	060d0530 			; <UNDEFINED> instruction: 0x060d0530
    65ec:	06160528 	ldreq	r0, [r6], -r8, lsr #10
    65f0:	200f0501 	andcs	r0, pc, r1, lsl #10
    65f4:	34061105 	strcc	r1, [r6], #-261	; 0xfffffefb
    65f8:	01061a05 	tsteq	r6, r5, lsl #20
    65fc:	05201305 	streq	r1, [r0, #-773]!	; 0xfffffcfb
    6600:	00ce0305 	sbceq	r0, lr, r5, lsl #6
    6604:	063a052e 	ldrteq	r0, [sl], -lr, lsr #10
    6608:	207fb703 	rsbscs	fp, pc, r3, lsl #14
    660c:	05174c05 	ldreq	r4, [r7, #-3077]	; 0xfffff3fb
    6610:	05131315 	ldreq	r1, [r3, #-789]	; 0xfffffceb
    6614:	05010627 	streq	r0, [r1, #-1575]	; 0xfffff9d9
    6618:	05240615 	streq	r0, [r4, #-1557]!	; 0xfffff9eb
    661c:	0501061b 	streq	r0, [r1, #-1563]	; 0xfffff9e5
    6620:	19052017 	stmdbne	r5, {r0, r1, r2, r4, sp}
    6624:	2e063006 	cdpcs	0, 0, cr3, cr6, cr6, {0}
    6628:	24063105 	strcs	r3, [r6], #-261	; 0xfffffefb
    662c:	09031505 	stmdbeq	r3, {r0, r2, r8, sl, ip}
    6630:	06190501 	ldreq	r0, [r9], -r1, lsl #10
    6634:	17053c01 	strne	r3, [r5, -r1, lsl #24]
    6638:	0619053c 			; <UNDEFINED> instruction: 0x0619053c
    663c:	061d0530 			; <UNDEFINED> instruction: 0x061d0530
    6640:	35052e01 	strcc	r2, [r5, #-3585]	; 0xfffff1ff
    6644:	2e090306 	cdpcs	3, 0, cr0, cr9, cr6, {0}
    6648:	01151905 	tsteq	r5, r5, lsl #18
    664c:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    6650:	00580104 	subseq	r0, r8, r4, lsl #2
    6654:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
    6658:	03040200 	movweq	r0, #16896	; 0x4200
    665c:	04020001 	streq	r0, [r2], #-1
    6660:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    6664:	00660304 	rsbeq	r0, r6, r4, lsl #6
    6668:	01030402 	tsteq	r3, r2, lsl #8
    666c:	03040200 	movweq	r0, #16896	; 0x4200
    6670:	04020001 	streq	r0, [r2], #-1
    6674:	02002003 	andeq	r2, r0, #3
    6678:	002e0304 	eoreq	r0, lr, r4, lsl #6
    667c:	20030402 	andcs	r0, r3, r2, lsl #8
    6680:	03040200 	movweq	r0, #16896	; 0x4200
    6684:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    6688:	00200603 	eoreq	r0, r0, r3, lsl #12
    668c:	06030402 	streq	r0, [r3], -r2, lsl #8
    6690:	04020058 	streq	r0, [r2], #-88	; 0xffffffa8
    6694:	02007403 	andeq	r7, r0, #50331648	; 0x3000000
    6698:	00010304 	andeq	r0, r1, r4, lsl #6
    669c:	01030402 	tsteq	r3, r2, lsl #8
    66a0:	02002505 	andeq	r2, r0, #20971520	; 0x1400000
    66a4:	1d030304 	stcne	3, cr0, [r3, #-16]
    66a8:	003a0501 	eorseq	r0, sl, r1, lsl #10
    66ac:	15030402 	strne	r0, [r3, #-1026]	; 0xfffffbfe
    66b0:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    66b4:	13060304 	movwne	r0, #25348	; 0x6304
    66b8:	03040200 	movweq	r0, #16896	; 0x4200
    66bc:	00060220 	andeq	r0, r6, r0, lsr #4
    66c0:	01050101 	tsteq	r5, r1, lsl #2
    66c4:	00020500 	andeq	r0, r2, r0, lsl #10
    66c8:	03000000 	movweq	r0, #0
    66cc:	05013b91 	streq	r3, [r1, #-2961]	; 0xfffff46f
    66d0:	2b051305 	blcs	14b2ec <__RAM_SIZE+0x4b2ec>
    66d4:	14050514 	strne	r0, [r5], #-1300	; 0xfffffaec
    66d8:	01061005 	tsteq	r6, r5
    66dc:	052e0e05 	streq	r0, [lr, #-3589]!	; 0xfffff1fb
    66e0:	05240605 	streq	r0, [r4, #-1541]!	; 0xfffff9fb
    66e4:	05056836 	streq	r6, [r5, #-2102]	; 0xfffff7ca
    66e8:	06010514 			; <UNDEFINED> instruction: 0x06010514
    66ec:	00030213 	andeq	r0, r3, r3, lsl r2
    66f0:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    66f4:	00020500 	andeq	r0, r2, r0, lsl #10
    66f8:	03000000 	movweq	r0, #0
    66fc:	05013ba5 	streq	r3, [r1, #-2981]	; 0xfffff45b
    6700:	33051309 	movwcc	r1, #21257	; 0x5309
    6704:	14090514 	strne	r0, [r9], #-1300	; 0xfffffaec
    6708:	01060f05 	tsteq	r6, r5, lsl #30
    670c:	32060905 	andcc	r0, r6, #81920	; 0x14000
    6710:	01060b05 	tsteq	r6, r5, lsl #22
    6714:	22060d05 	andcs	r0, r6, #320	; 0x140
    6718:	01061405 	tsteq	r6, r5, lsl #8
    671c:	05202505 	streq	r2, [r0, #-1285]!	; 0xfffffafb
    6720:	0531063b 	ldreq	r0, [r1, #-1595]!	; 0xfffff9c5
    6724:	05051409 	streq	r1, [r5, #-1033]	; 0xfffffbf7
    6728:	04021306 	streq	r1, [r2], #-774	; 0xfffffcfa
    672c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    6730:	02050005 	andeq	r0, r5, #5
    6734:	00000000 	andeq	r0, r0, r0
    6738:	013bc003 	teqeq	fp, r3
    673c:	09050106 	stmdbeq	r5, {r1, r2, r8}
    6740:	05134b06 	ldreq	r4, [r3, #-2822]	; 0xfffff4fa
    6744:	5005145f 	andpl	r1, r5, pc, asr r4
    6748:	16090514 			; <UNDEFINED> instruction: 0x16090514
    674c:	05340d05 	ldreq	r0, [r4, #-3333]!	; 0xfffff2fb
    6750:	21053111 	tstcs	r5, r1, lsl r1
    6754:	32050106 	andcc	r0, r5, #-2147483647	; 0x80000001
    6758:	5813052e 	ldmdapl	r3, {r1, r2, r3, r5, r8, sl}
    675c:	23061505 	movwcs	r1, #25861	; 0x6505
    6760:	01062105 	tsteq	r6, r5, lsl #2
    6764:	052e4405 	streq	r4, [lr, #-1029]!	; 0xfffffbfb
    6768:	054c0615 	strbeq	r0, [ip, #-1557]	; 0xfffff9eb
    676c:	05010617 	streq	r0, [r1, #-1559]	; 0xfffff9e9
    6770:	0b03062d 	bleq	c802c <__HEAP_SIZE+0xc702c>
    6774:	150d0520 	strne	r0, [sp, #-1312]	; 0xfffffae0
    6778:	19290533 	stmdbne	r9!, {r0, r1, r4, r5, r8, sl}
    677c:	05150905 	ldreq	r0, [r5, #-2309]	; 0xfffff6fb
    6780:	0501061b 	streq	r0, [r1, #-1563]	; 0xfffff9e5
    6784:	05310609 	ldreq	r0, [r1, #-1545]!	; 0xfffff9f7
    6788:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
    678c:	05260625 	streq	r0, [r6, #-1573]!	; 0xfffff9db
    6790:	35051509 	strcc	r1, [r5, #-1289]	; 0xfffffaf7
    6794:	130d0530 	movwne	r0, #54576	; 0xd530
    6798:	01062405 	tsteq	r6, r5, lsl #8
    679c:	052e1605 	streq	r1, [lr, #-1541]!	; 0xfffff9fb
    67a0:	055a060d 	ldrbeq	r0, [sl, #-1549]	; 0xfffff9f3
    67a4:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    67a8:	05220611 	streq	r0, [r2, #-1553]!	; 0xfffff9ef
    67ac:	05010613 	streq	r0, [r1, #-1555]	; 0xfffff9ed
    67b0:	05220615 	streq	r0, [r2, #-1557]!	; 0xfffff9eb
    67b4:	05010621 	streq	r0, [r1, #-1569]	; 0xfffff9df
    67b8:	29052e46 	stmdbcs	r5, {r1, r2, r6, r9, sl, fp, sp}
    67bc:	4a090306 	bmi	2473dc <__RAM_SIZE+0x1473dc>
    67c0:	05150d05 	ldreq	r0, [r5, #-3333]	; 0xfffff2fb
    67c4:	05010619 	streq	r0, [r1, #-1561]	; 0xfffff9e7
    67c8:	05202e3c 	streq	r2, [r0, #-3644]!	; 0xfffff1c4
    67cc:	053e0609 	ldreq	r0, [lr, #-1545]!	; 0xfffff9f7
    67d0:	09053038 	stmdbeq	r5, {r3, r4, r5, ip, sp}
    67d4:	06050514 			; <UNDEFINED> instruction: 0x06050514
    67d8:	062d0513 			; <UNDEFINED> instruction: 0x062d0513
    67dc:	052e4603 	streq	r4, [lr, #-1539]!	; 0xfffff9fd
    67e0:	0533150d 	ldreq	r1, [r3, #-1293]!	; 0xfffffaf3
    67e4:	57030625 	strpl	r0, [r3, -r5, lsr #12]
    67e8:	19052001 	stmdbne	r5, {r0, sp}
    67ec:	20180306 	andscs	r0, r8, r6, lsl #6
    67f0:	09032d05 	stmdbeq	r3, {r0, r2, r8, sl, fp, sp}
    67f4:	150d0501 	strne	r0, [sp, #-1281]	; 0xfffffaff
    67f8:	143f0533 	ldrtne	r0, [pc], #-1331	; 6800 <__HEAP_SIZE+0x5800>
    67fc:	05131105 	ldreq	r1, [r3, #-261]	; 0xfffffefb
    6800:	6c030626 	stcvs	6, cr0, [r3], {38}	; 0x26
    6804:	2805204a 	stmdacs	r5, {r1, r3, r6, sp}
    6808:	01040200 	mrseq	r0, R12_usr
    680c:	05201e03 	streq	r1, [r0, #-3587]!	; 0xfffff1fd
    6810:	0630060d 	ldrteq	r0, [r0], -sp, lsl #12
    6814:	0615052e 	ldreq	r0, [r5], -lr, lsr #10
    6818:	05201403 	streq	r1, [r0, #-1027]!	; 0xfffffbfd
    681c:	05010621 	streq	r0, [r1, #-1569]	; 0xfffff9df
    6820:	46052e51 			; <UNDEFINED> instruction: 0x46052e51
    6824:	00090220 	andeq	r0, r9, r0, lsr #4
    6828:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    682c:	00020500 	andeq	r0, r2, r0, lsl #10
    6830:	03000000 	movweq	r0, #0
    6834:	06013ca9 	streq	r3, [r1], -r9, lsr #25
    6838:	06090501 	streq	r0, [r9], -r1, lsl #10
    683c:	018c0575 	orreq	r0, ip, r5, ror r5
    6840:	14500514 	ldrbne	r0, [r0], #-1300	; 0xfffffaec
    6844:	05160905 	ldreq	r0, [r6, #-2309]	; 0xfffff6fb
    6848:	1105330d 	tstne	r5, sp, lsl #6
    684c:	06210531 			; <UNDEFINED> instruction: 0x06210531
    6850:	2e300501 	cdpcs	5, 3, cr0, cr0, cr1, {0}
    6854:	054a1305 	strbeq	r1, [sl, #-773]	; 0xfffffcfb
    6858:	05330615 	ldreq	r0, [r3, #-1557]!	; 0xfffff9eb
    685c:	05010646 	streq	r0, [r1, #-1606]	; 0xfffff9ba
    6860:	05a10615 	streq	r0, [r1, #1557]!	; 0x615
    6864:	05010621 	streq	r0, [r1, #-1569]	; 0xfffff9df
    6868:	15052044 	strne	r2, [r5, #-68]	; 0xffffffbc
    686c:	17054c06 	strne	r4, [r5, -r6, lsl #24]
    6870:	2d050106 	stfcss	f0, [r5, #-24]	; 0xffffffe8
    6874:	200b0306 	andcs	r0, fp, r6, lsl #6
    6878:	33150d05 	tstcc	r5, #320	; 0x140
    687c:	05192905 	ldreq	r2, [r9, #-2309]	; 0xfffff6fb
    6880:	1b051509 	blne	14bcac <__RAM_SIZE+0x4bcac>
    6884:	09050106 	stmdbeq	r5, {r1, r2, r8}
    6888:	0b053106 	bleq	152ca8 <__RAM_SIZE+0x52ca8>
    688c:	25050106 	strcs	r0, [r5, #-262]	; 0xfffffefa
    6890:	09052606 	stmdbeq	r5, {r1, r2, r9, sl, sp}
    6894:	30350515 	eorscc	r0, r5, r5, lsl r5
    6898:	05140d05 	ldreq	r0, [r4, #-3333]	; 0xfffff2fb
    689c:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    68a0:	05240611 	streq	r0, [r4, #-1553]!	; 0xfffff9ef
    68a4:	05010635 	streq	r0, [r1, #-1589]	; 0xfffff9cb
    68a8:	27052e46 	strcs	r2, [r5, -r6, asr #28]
    68ac:	060d0558 			; <UNDEFINED> instruction: 0x060d0558
    68b0:	061d0527 	ldreq	r0, [sp], -r7, lsr #10
    68b4:	2e2c0501 	cfsh64cs	mvdx0, mvdx12, #1
    68b8:	054a0f05 	strbeq	r0, [sl, #-3845]	; 0xfffff0fb
    68bc:	0d053119 	stfeqs	f3, [r5, #-100]	; 0xffffff9c
    68c0:	200a0306 	andcs	r0, sl, r6, lsl #6
    68c4:	01061905 	tsteq	r6, r5, lsl #18
    68c8:	202e3c05 	eorcs	r3, lr, r5, lsl #24
    68cc:	3e060905 	vmlacc.f16	s0, s12, s10	; <UNPREDICTABLE>
    68d0:	05303605 	ldreq	r3, [r0, #-1541]!	; 0xfffff9fb
    68d4:	05051409 	streq	r1, [r5, #-1033]	; 0xfffffbf7
    68d8:	2d051306 	stccs	3, cr1, [r5, #-24]	; 0xffffffe8
    68dc:	7fbf0306 	svcvc	0x00bf0306
    68e0:	150d053c 	strne	r0, [sp, #-1340]	; 0xfffffac4
    68e4:	062e0533 			; <UNDEFINED> instruction: 0x062e0533
    68e8:	05015303 	streq	r5, [r1, #-771]	; 0xfffffcfd
    68ec:	1c030619 	stcne	6, cr0, [r3], {25}
    68f0:	032d052e 			; <UNDEFINED> instruction: 0x032d052e
    68f4:	0d050109 	stfeqs	f0, [r5, #-36]	; 0xffffffdc
    68f8:	3f053315 	svccc	0x00053315
    68fc:	13110514 	tstne	r1, #20, 10	; 0x5000000
    6900:	03062605 	movweq	r2, #26117	; 0x6605
    6904:	28054a6c 	stmdacs	r5, {r2, r3, r5, r6, r9, fp, lr}
    6908:	01040200 	mrseq	r0, R12_usr
    690c:	052e1e03 	streq	r1, [lr, #-3587]!	; 0xfffff1fd
    6910:	0630060d 	ldrteq	r0, [r0], -sp, lsl #12
    6914:	0611052e 	ldreq	r0, [r1], -lr, lsr #10
    6918:	05201f03 	streq	r1, [r0, #-3843]!	; 0xfffff0fd
    691c:	90010642 	andls	r0, r1, r2, asr #12
    6920:	21061105 	tstcs	r6, r5, lsl #2
    6924:	01061905 	tsteq	r6, r5, lsl #18
    6928:	00030220 	andeq	r0, r3, r0, lsr #4
    692c:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    6930:	00020500 	andeq	r0, r2, r0, lsl #10
    6934:	03000000 	movweq	r0, #0
    6938:	06013d9c 			; <UNDEFINED> instruction: 0x06013d9c
    693c:	06090501 	streq	r0, [r9], -r1, lsl #10
    6940:	05131383 	ldreq	r1, [r3, #-899]	; 0xfffffc7d
    6944:	50051478 	andpl	r1, r5, r8, ror r4
    6948:	13260514 			; <UNDEFINED> instruction: 0x13260514
    694c:	14130905 	ldrne	r0, [r3], #-2309	; 0xfffff6fb
    6950:	05300d05 	ldreq	r0, [r0, #-3333]!	; 0xfffff2fb
    6954:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    6958:	053e0611 	ldreq	r0, [lr, #-1553]!	; 0xfffff9ef
    695c:	05010647 	streq	r0, [r1, #-1607]	; 0xfffff9b9
    6960:	0d05582f 	stceq	8, cr5, [r5, #-188]	; 0xffffff44
    6964:	23053106 	movwcs	r3, #20742	; 0x5106
    6968:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    696c:	35054c06 	strcc	r4, [r5, #-3078]	; 0xfffff3fa
    6970:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    6974:	15053e06 	strne	r3, [r5, #-3590]	; 0xfffff1fa
    6978:	063f0577 			; <UNDEFINED> instruction: 0x063f0577
    697c:	2e2e2001 	cdpcs	0, 2, cr2, cr14, cr1, {0}
    6980:	21061505 	tstcs	r6, r5, lsl #10
    6984:	03061405 	movweq	r1, #25605	; 0x6405
    6988:	30050168 	andcc	r0, r5, r8, ror #2
    698c:	00c00306 	sbceq	r0, r0, r6, lsl #6
    6990:	160d0520 	strne	r0, [sp], -r0, lsr #10
    6994:	01060f05 	tsteq	r6, r5, lsl #30
    6998:	03062905 	movweq	r2, #26885	; 0x6905
    699c:	09052e1e 	stmdbeq	r5, {r1, r2, r3, r4, r9, sl, fp, sp}
    69a0:	30320515 	eorscc	r0, r2, r5, lsl r5
    69a4:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    69a8:	05130605 	ldreq	r0, [r3, #-1541]	; 0xfffff9fb
    69ac:	b1030615 	tstlt	r3, r5, lsl r6
    69b0:	2d053c7f 	stccs	12, cr3, [r5, #-508]	; 0xfffffe04
    69b4:	2e200106 	sufcss	f0, f0, f6
    69b8:	05204205 	streq	r4, [r0, #-517]!	; 0xfffffdfb
    69bc:	052f0615 	streq	r0, [pc, #-1557]!	; 63af <__HEAP_SIZE+0x53af>
    69c0:	64030614 	strvs	r0, [r3], #-1556	; 0xfffff9ec
    69c4:	03150501 	tsteq	r5, #4194304	; 0x400000
    69c8:	2306201c 	movwcs	r2, #24604	; 0x601c
    69cc:	01063f05 	tsteq	r6, r5, lsl #30
    69d0:	15052e20 	strne	r2, [r5, #-3616]	; 0xfffff1e0
    69d4:	14052106 	strne	r2, [r5], #-262	; 0xfffffefa
    69d8:	01600306 	cmneq	r0, r6, lsl #6
    69dc:	20031505 	andcs	r1, r3, r5, lsl #10
    69e0:	05240620 	streq	r0, [r4, #-1568]!	; 0xfffff9e0
    69e4:	05010617 	streq	r0, [r1, #-1559]	; 0xfffff9e9
    69e8:	05300619 	ldreq	r0, [r0, #-1561]!	; 0xfffff9e7
    69ec:	20010643 	andcs	r0, r1, r3, asr #12
    69f0:	0314052e 	tsteq	r4, #192937984	; 0xb800000
    69f4:	0d05205a 	stceq	0, cr2, [r5, #-360]	; 0xfffffe98
    69f8:	202e1403 	eorcs	r1, lr, r3, lsl #8
    69fc:	17032105 	strne	r2, [r3, -r5, lsl #2]
    6a00:	11052020 	tstne	r5, r0, lsr #32
    6a04:	201b0306 	andscs	r0, fp, r6, lsl #6
    6a08:	3c3c2001 	ldccc	0, cr2, [ip], #-4
    6a0c:	03040200 	movweq	r0, #16896	; 0x4200
    6a10:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    6a14:	02002e03 	andeq	r2, r0, #3, 28	; 0x30
    6a18:	003c0304 	eorseq	r0, ip, r4, lsl #6
    6a1c:	13030402 	movwne	r0, #13314	; 0x3402
    6a20:	03040200 	movweq	r0, #16896	; 0x4200
    6a24:	04020001 	streq	r0, [r2], #-1
    6a28:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    6a2c:	00010304 	andeq	r0, r1, r4, lsl #6
    6a30:	06030402 	streq	r0, [r3], -r2, lsl #8
    6a34:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    6a38:	004a0601 	subeq	r0, sl, r1, lsl #12
    6a3c:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
    6a40:	03040200 	movweq	r0, #16896	; 0x4200
    6a44:	04020001 	streq	r0, [r2], #-1
    6a48:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    6a4c:	00660304 	rsbeq	r0, r6, r4, lsl #6
    6a50:	01030402 	tsteq	r3, r2, lsl #8
    6a54:	03040200 	movweq	r0, #16896	; 0x4200
    6a58:	04020001 	streq	r0, [r2], #-1
    6a5c:	02002003 	andeq	r2, r0, #3
    6a60:	20060304 	andcs	r0, r6, r4, lsl #6
    6a64:	03040200 	movweq	r0, #16896	; 0x4200
    6a68:	02002006 	andeq	r2, r0, #6
    6a6c:	00200304 	eoreq	r0, r0, r4, lsl #6
    6a70:	20030402 	andcs	r0, r3, r2, lsl #8
    6a74:	03040200 	movweq	r0, #16896	; 0x4200
    6a78:	02002006 	andeq	r2, r0, #6
    6a7c:	58060304 	stmdapl	r6, {r2, r8, r9}
    6a80:	03040200 	movweq	r0, #16896	; 0x4200
    6a84:	04020074 	streq	r0, [r2], #-116	; 0xffffff8c
    6a88:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    6a8c:	05010304 	streq	r0, [r1, #-772]	; 0xfffffcfc
    6a90:	0402005e 	streq	r0, [r2], #-94	; 0xffffffa2
    6a94:	15051503 	strne	r1, [r5, #-1283]	; 0xfffffafd
    6a98:	03040200 	movweq	r0, #16896	; 0x4200
    6a9c:	05010e03 	streq	r0, [r1, #-3587]	; 0xfffff1fd
    6aa0:	04020011 	streq	r0, [r2], #-17	; 0xffffffef
    6aa4:	02003403 	andeq	r3, r0, #50331648	; 0x3000000
    6aa8:	00010304 	andeq	r0, r1, r4, lsl #6
    6aac:	66010402 	strvs	r0, [r1], -r2, lsl #8
    6ab0:	01040200 	mrseq	r0, R12_usr
    6ab4:	023c6803 	eorseq	r6, ip, #196608	; 0x30000
    6ab8:	0101000a 	tsteq	r1, sl
    6abc:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    6ac0:	00000002 	andeq	r0, r0, r2
    6ac4:	3e950300 	cdpcc	3, 9, cr0, cr5, cr0, {0}
    6ac8:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    6acc:	13830609 	orrne	r0, r3, #9437184	; 0x900000
    6ad0:	9a051313 	bls	14b724 <__RAM_SIZE+0x4b724>
    6ad4:	26051401 	strcs	r1, [r5], -r1, lsl #8
    6ad8:	13500514 	cmpne	r0, #20, 10	; 0x5000000
    6adc:	12033305 	andne	r3, r3, #335544320	; 0x14000000
    6ae0:	14090501 	strne	r0, [r9], #-1281	; 0xfffffaff
    6ae4:	06320517 			; <UNDEFINED> instruction: 0x06320517
    6ae8:	060d0501 	streq	r0, [sp], -r1, lsl #10
    6aec:	060f0530 			; <UNDEFINED> instruction: 0x060f0530
    6af0:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    6af4:	0647053e 			; <UNDEFINED> instruction: 0x0647053e
    6af8:	582f0501 	stmdapl	pc!, {r0, r8, sl}	; <UNPREDICTABLE>
    6afc:	31060d05 	tstcc	r6, r5, lsl #26
    6b00:	01062305 	tsteq	r6, r5, lsl #6
    6b04:	59060d05 	stmdbpl	r6, {r0, r2, r8, sl, fp}
    6b08:	01063505 	tsteq	r6, r5, lsl #10
    6b0c:	3e060d05 	cdpcc	13, 0, cr0, cr6, cr5, {0}
    6b10:	05771505 	ldrbeq	r1, [r7, #-1285]!	; 0xfffffafb
    6b14:	2001063f 	andcs	r0, r1, pc, lsr r6
    6b18:	15052e2e 	strne	r2, [r5, #-3630]	; 0xfffff1d2
    6b1c:	14052106 	strne	r2, [r5], #-262	; 0xfffffefa
    6b20:	01530306 	cmpeq	r3, r6, lsl #6
    6b24:	03063905 	movweq	r3, #26885	; 0x6905
    6b28:	052000d4 	streq	r0, [r0, #-212]!	; 0xffffff2c
    6b2c:	0f05160d 	svceq	0x0005160d
    6b30:	31050106 	tstcc	r5, r6, lsl #2
    6b34:	3c230306 	stccc	3, cr0, [r3], #-24	; 0xffffffe8
    6b38:	16030905 	strne	r0, [r3], -r5, lsl #18
    6b3c:	30390501 	eorscc	r0, r9, r1, lsl #10
    6b40:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    6b44:	05130605 	ldreq	r0, [r3, #-1541]	; 0xfffff9fb
    6b48:	9a030615 	bls	c83a4 <__HEAP_SIZE+0xc73a4>
    6b4c:	2d053c7f 	stccs	12, cr3, [r5, #-508]	; 0xfffffe04
    6b50:	2e200106 	sufcss	f0, f0, f6
    6b54:	05204205 	streq	r4, [r0, #-517]!	; 0xfffffdfb
    6b58:	052f0615 	streq	r0, [pc, #-1557]!	; 654b <__HEAP_SIZE+0x554b>
    6b5c:	4f030614 	svcmi	0x00030614
    6b60:	03150501 	tsteq	r5, #4194304	; 0x400000
    6b64:	23062031 	movwcs	r2, #24625	; 0x6031
    6b68:	01063f05 	tsteq	r6, r5, lsl #30
    6b6c:	15052e20 	strne	r2, [r5, #-3616]	; 0xfffff1e0
    6b70:	14052106 	strne	r2, [r5], #-262	; 0xfffffefa
    6b74:	014b0306 	cmpeq	fp, r6, lsl #6
    6b78:	35031505 	strcc	r1, [r3, #-1285]	; 0xfffffafb
    6b7c:	05240620 	streq	r0, [r4, #-1568]!	; 0xfffff9e0
    6b80:	05010617 	streq	r0, [r1, #-1559]	; 0xfffff9e9
    6b84:	053e0619 	ldreq	r0, [lr, #-1561]!	; 0xfffff9e7
    6b88:	20010643 	andcs	r0, r1, r3, asr #12
    6b8c:	0314052e 	tsteq	r4, #192937984	; 0xb800000
    6b90:	0d052045 	stceq	0, cr2, [r5, #-276]	; 0xfffffeec
    6b94:	202e2903 	eorcs	r2, lr, r3, lsl #18
    6b98:	17032105 	strne	r2, [r3, -r5, lsl #2]
    6b9c:	5e052020 	cdppl	0, 0, cr2, cr5, cr0, {1}
    6ba0:	201b0306 	andscs	r0, fp, r6, lsl #6
    6ba4:	05141105 	ldreq	r1, [r4, #-261]	; 0xfffffefb
    6ba8:	0501062a 	streq	r0, [r1, #-1578]	; 0xfffff9d6
    6bac:	15052e13 	strne	r2, [r5, #-3603]	; 0xfffff1ed
    6bb0:	20013006 	andcs	r3, r1, r6
    6bb4:	02003c3c 	andeq	r3, r0, #60, 24	; 0x3c00
    6bb8:	004a0304 	subeq	r0, sl, r4, lsl #6
    6bbc:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
    6bc0:	03040200 	movweq	r0, #16896	; 0x4200
    6bc4:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    6bc8:	02001303 	andeq	r1, r0, #201326592	; 0xc000000
    6bcc:	00010304 	andeq	r0, r1, r4, lsl #6
    6bd0:	01030402 	tsteq	r3, r2, lsl #8
    6bd4:	03040200 	movweq	r0, #16896	; 0x4200
    6bd8:	04020001 	streq	r0, [r2], #-1
    6bdc:	00200603 	eoreq	r0, r0, r3, lsl #12
    6be0:	06010402 	streq	r0, [r1], -r2, lsl #8
    6be4:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    6be8:	02002e03 	andeq	r2, r0, #3, 28	; 0x30
    6bec:	00010304 	andeq	r0, r1, r4, lsl #6
    6bf0:	01030402 	tsteq	r3, r2, lsl #8
    6bf4:	03040200 	movweq	r0, #16896	; 0x4200
    6bf8:	04020066 	streq	r0, [r2], #-102	; 0xffffff9a
    6bfc:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    6c00:	00010304 	andeq	r0, r1, r4, lsl #6
    6c04:	20030402 	andcs	r0, r3, r2, lsl #8
    6c08:	03040200 	movweq	r0, #16896	; 0x4200
    6c0c:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    6c10:	02002003 	andeq	r2, r0, #3
    6c14:	00200304 	eoreq	r0, r0, r4, lsl #6
    6c18:	06030402 	streq	r0, [r3], -r2, lsl #8
    6c1c:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    6c20:	00580603 	subseq	r0, r8, r3, lsl #12
    6c24:	74030402 	strvc	r0, [r3], #-1026	; 0xfffffbfe
    6c28:	03040200 	movweq	r0, #16896	; 0x4200
    6c2c:	04020001 	streq	r0, [r2], #-1
    6c30:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    6c34:	00180104 	andseq	r0, r8, r4, lsl #2
    6c38:	17010402 	strne	r0, [r1, -r2, lsl #8]
    6c3c:	02001e05 	andeq	r1, r0, #5, 28	; 0x50
    6c40:	01060104 	tsteq	r6, r4, lsl #2
    6c44:	02003905 	andeq	r3, r0, #81920	; 0x14000
    6c48:	05200104 	streq	r0, [r0, #-260]!	; 0xfffffefc
    6c4c:	04020017 	streq	r0, [r2], #-23	; 0xffffffe9
    6c50:	19053c01 	stmdbne	r5, {r0, sl, fp, ip, sp}
    6c54:	1b053206 	blne	153474 <__RAM_SIZE+0x53474>
    6c58:	1d050106 	stfnes	f0, [r5, #-24]	; 0xffffffe8
    6c5c:	38053006 	stmdacc	r5, {r1, r2, ip, sp}
    6c60:	19050106 	stmdbne	r5, {r1, r2, r8}
    6c64:	2d054206 	sfmcs	f4, 4, [r5, #-24]	; 0xffffffe8
    6c68:	15050106 	strne	r0, [r5, #-262]	; 0xfffffefa
    6c6c:	01040200 	mrseq	r0, R12_usr
    6c70:	4a680306 	bmi	1a07890 <__RAM_SIZE+0x1907890>
    6c74:	01040200 	mrseq	r0, R12_usr
    6c78:	19063c06 	stmdbne	r6, {r1, r2, sl, fp, ip, sp}
    6c7c:	01012e01 	tsteq	r1, r1, lsl #28
    6c80:	203c2e20 	eorscs	r2, ip, r0, lsr #28
    6c84:	02200620 	eoreq	r0, r0, #32, 12	; 0x2000000
    6c88:	0101000f 	tsteq	r1, pc
    6c8c:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    6c90:	00000002 	andeq	r0, r0, r2
    6c94:	3fb80300 	svccc	0x00b80300
    6c98:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    6c9c:	134b0609 	movtne	r0, #46601	; 0xb609
    6ca0:	146e0513 	strbtne	r0, [lr], #-1299	; 0xfffffaed
    6ca4:	05142605 	ldreq	r2, [r4, #-1541]	; 0xfffff9fb
    6ca8:	33051350 	movwcc	r1, #21328	; 0x5350
    6cac:	05011203 	streq	r1, [r1, #-515]	; 0xfffffdfd
    6cb0:	05171409 	ldreq	r1, [r7, #-1033]	; 0xfffffbf7
    6cb4:	05010632 	streq	r0, [r1, #-1586]	; 0xfffff9ce
    6cb8:	0530060d 	ldreq	r0, [r0, #-1549]!	; 0xfffff9f3
    6cbc:	05010623 	streq	r0, [r1, #-1571]	; 0xfffff9dd
    6cc0:	054b060d 	strbeq	r0, [fp, #-1549]	; 0xfffff9f3
    6cc4:	05010635 	streq	r0, [r1, #-1589]	; 0xfffff9cb
    6cc8:	0540060d 	strbeq	r0, [r0, #-1549]	; 0xfffff9f3
    6ccc:	20010625 	andcs	r0, r1, r5, lsr #12
    6cd0:	203a052e 	eorscs	r0, sl, lr, lsr #10
    6cd4:	30063e05 	andcc	r3, r6, r5, lsl #28
    6cd8:	05160d05 	ldreq	r0, [r6, #-3333]	; 0xfffff2fb
    6cdc:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    6ce0:	23030631 	movwcs	r0, #13873	; 0x3631
    6ce4:	0309052e 	movweq	r0, #38190	; 0x952e
    6ce8:	34050116 	strcc	r0, [r5], #-278	; 0xfffffeea
    6cec:	06050530 			; <UNDEFINED> instruction: 0x06050530
    6cf0:	065e0513 			; <UNDEFINED> instruction: 0x065e0513
    6cf4:	05204703 	streq	r4, [r0, #-1795]!	; 0xfffff8fd
    6cf8:	2a051411 	bcs	14bd44 <__RAM_SIZE+0x4bd44>
    6cfc:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    6d00:	15052013 	strne	r2, [r5, #-19]	; 0xffffffed
    6d04:	20013006 	andcs	r3, r1, r6
    6d08:	02003c3c 	andeq	r3, r0, #60, 24	; 0x3c00
    6d0c:	004a0304 	subeq	r0, sl, r4, lsl #6
    6d10:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
    6d14:	03040200 	movweq	r0, #16896	; 0x4200
    6d18:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    6d1c:	02001303 	andeq	r1, r0, #201326592	; 0xc000000
    6d20:	00010304 	andeq	r0, r1, r4, lsl #6
    6d24:	01030402 	tsteq	r3, r2, lsl #8
    6d28:	03040200 	movweq	r0, #16896	; 0x4200
    6d2c:	04020001 	streq	r0, [r2], #-1
    6d30:	00200603 	eoreq	r0, r0, r3, lsl #12
    6d34:	06010402 	streq	r0, [r1], -r2, lsl #8
    6d38:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    6d3c:	02002e03 	andeq	r2, r0, #3, 28	; 0x30
    6d40:	00010304 	andeq	r0, r1, r4, lsl #6
    6d44:	01030402 	tsteq	r3, r2, lsl #8
    6d48:	03040200 	movweq	r0, #16896	; 0x4200
    6d4c:	04020066 	streq	r0, [r2], #-102	; 0xffffff9a
    6d50:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    6d54:	00010304 	andeq	r0, r1, r4, lsl #6
    6d58:	20030402 	andcs	r0, r3, r2, lsl #8
    6d5c:	03040200 	movweq	r0, #16896	; 0x4200
    6d60:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    6d64:	02002003 	andeq	r2, r0, #3
    6d68:	00200304 	eoreq	r0, r0, r4, lsl #6
    6d6c:	06030402 	streq	r0, [r3], -r2, lsl #8
    6d70:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    6d74:	00580603 	subseq	r0, r8, r3, lsl #12
    6d78:	74030402 	strvc	r0, [r3], #-1026	; 0xfffffbfe
    6d7c:	03040200 	movweq	r0, #16896	; 0x4200
    6d80:	04020001 	streq	r0, [r2], #-1
    6d84:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    6d88:	00180104 	andseq	r0, r8, r4, lsl #2
    6d8c:	17010402 	strne	r0, [r1, -r2, lsl #8]
    6d90:	02001e05 	andeq	r1, r0, #5, 28	; 0x50
    6d94:	01060104 	tsteq	r6, r4, lsl #2
    6d98:	02003905 	andeq	r3, r0, #81920	; 0x14000
    6d9c:	05200104 	streq	r0, [r0, #-260]!	; 0xfffffefc
    6da0:	04020017 	streq	r0, [r2], #-23	; 0xffffffe9
    6da4:	19053c01 	stmdbne	r5, {r0, sl, fp, ip, sp}
    6da8:	1b053206 	blne	1535c8 <__RAM_SIZE+0x535c8>
    6dac:	1d050106 	stfnes	f0, [r5, #-24]	; 0xffffffe8
    6db0:	38052206 	stmdacc	r5, {r1, r2, r9, sp}
    6db4:	19050106 	stmdbne	r5, {r1, r2, r8}
    6db8:	2d053406 	cfstrscs	mvf3, [r5, #-24]	; 0xffffffe8
    6dbc:	15050106 	strne	r0, [r5, #-262]	; 0xfffffefa
    6dc0:	01040200 	mrseq	r0, R12_usr
    6dc4:	4a680306 	bmi	1a079e4 <__RAM_SIZE+0x19079e4>
    6dc8:	01040200 	mrseq	r0, R12_usr
    6dcc:	19063c06 	stmdbne	r6, {r1, r2, sl, fp, ip, sp}
    6dd0:	01012e01 	tsteq	r1, r1, lsl #28
    6dd4:	203c2e20 	eorscs	r2, ip, r0, lsr #28
    6dd8:	02200620 	eoreq	r0, r0, #32, 12	; 0x2000000
    6ddc:	01010010 	tsteq	r1, r0, lsl r0
    6de0:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    6de4:	00000002 	andeq	r0, r0, r2
    6de8:	c0ab0300 	adcgt	r0, fp, r0, lsl #6
    6dec:	01060100 	mrseq	r0, (UNDEF: 22)
    6df0:	2f060905 	svccs	0x00060905
    6df4:	14490513 	strbne	r0, [r9], #-1299	; 0xfffffaed
    6df8:	05144f05 	ldreq	r4, [r4, #-3845]	; 0xfffff0fb
    6dfc:	11051609 	tstne	r5, r9, lsl #12
    6e00:	09050106 	stmdbeq	r5, {r1, r2, r8}
    6e04:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    6e08:	0d053006 	stceq	0, cr3, [r5, #-24]	; 0xffffffe8
    6e0c:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    6e10:	00250530 	eoreq	r0, r5, r0, lsr r5
    6e14:	06040402 	streq	r0, [r4], -r2, lsl #8
    6e18:	000f0501 	andeq	r0, pc, r1, lsl #10
    6e1c:	4a040402 	bmi	107e2c <__RAM_SIZE+0x7e2c>
    6e20:	05351905 	ldreq	r1, [r5, #-2309]!	; 0xfffff6fb
    6e24:	05230609 	streq	r0, [r3, #-1545]!	; 0xfffff9f7
    6e28:	0905303c 	stmdbeq	r5, {r2, r3, r4, r5, ip, sp}
    6e2c:	06050514 			; <UNDEFINED> instruction: 0x06050514
    6e30:	00110513 	andseq	r0, r1, r3, lsl r5
    6e34:	03010402 	movweq	r0, #5122	; 0x1402
    6e38:	02002e6d 	andeq	r2, r0, #1744	; 0x6d0
    6e3c:	062e0104 	strteq	r0, [lr], -r4, lsl #2
    6e40:	06380526 	ldrteq	r0, [r8], -r6, lsr #10
    6e44:	11052001 	tstne	r5, r1
    6e48:	19053d06 	stmdbne	r5, {r1, r2, r8, sl, fp, ip, sp}
    6e4c:	04020106 	streq	r0, [r2], #-262	; 0xfffffefa
    6e50:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    6e54:	02050005 	andeq	r0, r5, #5
    6e58:	00000000 	andeq	r0, r0, r0
    6e5c:	00c0d203 	sbceq	sp, r0, r3, lsl #4
    6e60:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    6e64:	133d0609 	teqne	sp, #9437184	; 0x900000
    6e68:	05145905 	ldreq	r5, [r4, #-2309]	; 0xfffff6fb
    6e6c:	0905144f 	stmdbeq	r5, {r0, r1, r2, r3, r6, sl, ip}
    6e70:	06110516 			; <UNDEFINED> instruction: 0x06110516
    6e74:	00090501 	andeq	r0, r9, r1, lsl #10
    6e78:	06040402 	streq	r0, [r4], -r2, lsl #8
    6e7c:	000d0530 	andeq	r0, sp, r0, lsr r5
    6e80:	32040402 	andcc	r0, r4, #33554432	; 0x2000000
    6e84:	02001605 	andeq	r1, r0, #5242880	; 0x500000
    6e88:	01060404 	tsteq	r6, r4, lsl #8
    6e8c:	02000d05 	andeq	r0, r0, #320	; 0x140
    6e90:	59060404 	stmdbpl	r6, {r2, sl}
    6e94:	02003605 	andeq	r3, r0, #5242880	; 0x500000
    6e98:	01060404 	tsteq	r6, r4, lsl #8
    6e9c:	02000905 	andeq	r0, r0, #81920	; 0x14000
    6ea0:	4c060404 	cfstrsmi	mvf0, [r6], {4}
    6ea4:	02003e05 	andeq	r3, r0, #5, 28	; 0x50
    6ea8:	05300404 	ldreq	r0, [r0, #-1028]!	; 0xfffffbfc
    6eac:	04020009 	streq	r0, [r2], #-9
    6eb0:	05051404 	streq	r1, [r5, #-1028]	; 0xfffffbfc
    6eb4:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    6eb8:	11051306 	tstne	r5, r6, lsl #6
    6ebc:	01040200 	mrseq	r0, R12_usr
    6ec0:	002e7203 	eoreq	r7, lr, r3, lsl #4
    6ec4:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    6ec8:	01000402 	tsteq	r0, r2, lsl #8
    6ecc:	00050501 	andeq	r0, r5, r1, lsl #10
    6ed0:	2ed00205 	cdpcs	2, 13, cr0, cr0, cr5, {0}
    6ed4:	8a031000 	bhi	caedc <__HEAP_SIZE+0xc9edc>
    6ed8:	050100c3 	streq	r0, [r1, #-195]	; 0xffffff3d
    6edc:	14131309 	ldrne	r1, [r3], #-777	; 0xfffffcf7
    6ee0:	01061f05 	tsteq	r6, r5, lsl #30
    6ee4:	2f060905 	svccs	0x00060905
    6ee8:	01062105 	tsteq	r6, r5, lsl #2
    6eec:	2f060905 	svccs	0x00060905
    6ef0:	01061f05 	tsteq	r6, r5, lsl #30
    6ef4:	022f0505 	eoreq	r0, pc, #20971520	; 0x1400000
    6ef8:	01010006 	tsteq	r1, r6
    6efc:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    6f00:	002ee802 	eoreq	lr, lr, r2, lsl #16
    6f04:	1bb70310 	blne	fedc7b4c <__StackTop+0xc6cc7b4c>
    6f08:	2f050501 	svccs	0x00050501
    6f0c:	13131313 	tstne	r3, #1275068416	; 0x4c000000
    6f10:	061d0514 			; <UNDEFINED> instruction: 0x061d0514
    6f14:	00310501 	eorseq	r0, r1, r1, lsl #10
    6f18:	06010402 	streq	r0, [r1], -r2, lsl #8
    6f1c:	00050520 	andeq	r0, r5, r0, lsr #10
    6f20:	06010402 	streq	r0, [r1], -r2, lsl #8
    6f24:	06090501 	streq	r0, [r9], -r1, lsl #10
    6f28:	063f0530 			; <UNDEFINED> instruction: 0x063f0530
    6f2c:	2e290501 	cfsh64cs	mvdx0, mvdx9, #1
    6f30:	5d060905 	vstrpl.16	s0, [r6, #-10]	; <UNPREDICTABLE>
    6f34:	01060b05 	tsteq	r6, r5, lsl #22
    6f38:	02002505 	andeq	r2, r0, #20971520	; 0x1400000
    6f3c:	26060204 	strcs	r0, [r6], -r4, lsl #4
    6f40:	02006e05 	andeq	r6, r0, #5, 28	; 0x50
    6f44:	73030204 	movwvc	r0, #12804	; 0x3204
    6f48:	01800501 	orreq	r0, r0, r1, lsl #10
    6f4c:	02040200 	andeq	r0, r4, #0, 4
    6f50:	02000106 	andeq	r0, r0, #-2147483647	; 0x80000001
    6f54:	05200204 	streq	r0, [r0, #-516]!	; 0xfffffdfc
    6f58:	0402001d 	streq	r0, [r2], #-29	; 0xffffffe3
    6f5c:	26052001 	strcs	r2, [r5], -r1
    6f60:	01040200 	mrseq	r0, R12_usr
    6f64:	20120306 	andscs	r0, r2, r6, lsl #6
    6f68:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    6f6c:	01060104 	tsteq	r6, r4, lsl #2
    6f70:	00fb0306 	rscseq	r0, fp, r6, lsl #6
    6f74:	0601053c 			; <UNDEFINED> instruction: 0x0601053c
    6f78:	060d0513 			; <UNDEFINED> instruction: 0x060d0513
    6f7c:	2e7f8803 	cdpcs	8, 7, cr8, cr15, cr3, {0}
    6f80:	05012f03 	streq	r2, [r1, #-3843]	; 0xfffff0fd
    6f84:	0501061c 	streq	r0, [r1, #-1564]	; 0xfffff9e4
    6f88:	052f060d 	streq	r0, [pc, #-1549]!	; 6983 <__HEAP_SIZE+0x5983>
    6f8c:	0501061b 	streq	r0, [r1, #-1563]	; 0xfffff9e5
    6f90:	0521060d 	streq	r0, [r1, #-1549]!	; 0xfffff9f3
    6f94:	0d051811 	stceq	8, cr1, [r5, #-68]	; 0xffffffbc
    6f98:	05580e03 	ldrbeq	r0, [r8, #-3587]	; 0xfffff1fd
    6f9c:	0501062b 	streq	r0, [r1, #-1579]	; 0xfffff9d5
    6fa0:	0d05ac29 	stceq	12, cr10, [r5, #-164]	; 0xffffff5c
    6fa4:	0f054406 	svceq	0x00054406
    6fa8:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    6fac:	16030609 	strne	r0, [r3], -r9, lsl #12
    6fb0:	1a290501 	bne	a483bc <__RAM_SIZE+0x9483bc>
    6fb4:	91035605 	tstls	r3, r5, lsl #12
    6fb8:	5d05017f 	stfpls	f0, [r5, #-508]	; 0xfffffe04
    6fbc:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    6fc0:	d7030611 	smladle	r3, r1, r6, r0
    6fc4:	01062000 	mrseq	r2, (UNDEF: 6)
    6fc8:	03060905 	movweq	r0, #26885	; 0x6905
    6fcc:	19050110 	stmdbne	r5, {r4, r8}
    6fd0:	01700306 	cmneq	r0, r6, lsl #6
    6fd4:	01000802 	tsteq	r0, r2, lsl #16
    6fd8:	00010501 	andeq	r0, r1, r1, lsl #10
    6fdc:	2f540205 	svccs	0x00540205
    6fe0:	d1031000 	mrsle	r1, (UNDEF: 3)
    6fe4:	0505011c 	streq	r0, [r5, #-284]	; 0xfffffee4
    6fe8:	14250521 	strtne	r0, [r5], #-1313	; 0xfffffadf
    6fec:	0a030505 	beq	c8408 <__HEAP_SIZE+0xc7408>
    6ff0:	060f0501 	streq	r0, [pc], -r1, lsl #10
    6ff4:	06090501 	streq	r0, [r9], -r1, lsl #10
    6ff8:	060b0532 			; <UNDEFINED> instruction: 0x060b0532
    6ffc:	06250501 	strteq	r0, [r5], -r1, lsl #10
    7000:	17050534 	smladxne	r5, r4, r5, r0
    7004:	01060705 	tsteq	r6, r5, lsl #14
    7008:	03064905 	movweq	r4, #26885	; 0x6905
    700c:	05052e3b 	streq	r2, [r5, #-3643]	; 0xfffff1c5
    7010:	26051617 			; <UNDEFINED> instruction: 0x26051617
    7014:	06010530 			; <UNDEFINED> instruction: 0x06010530
    7018:	060d0513 			; <UNDEFINED> instruction: 0x060d0513
    701c:	207fb003 	rsbscs	fp, pc, r3
    7020:	01061705 	tsteq	r6, r5, lsl #14
    7024:	0609052e 	streq	r0, [r9], -lr, lsr #10
    7028:	03201903 			; <UNDEFINED> instruction: 0x03201903
    702c:	1e052e0a 	cdpne	14, 0, cr2, cr5, cr10, {0}
    7030:	09050106 	stmdbeq	r5, {r1, r2, r8}
    7034:	1b054b06 	blne	159c54 <__RAM_SIZE+0x59c54>
    7038:	09050106 	stmdbeq	r5, {r1, r2, r8}
    703c:	14053d06 	strne	r3, [r5], #-3334	; 0xfffff2fa
    7040:	31050106 	tstcc	r5, r6, lsl #2
    7044:	20054406 	andcs	r4, r5, r6, lsl #8
    7048:	19090514 	stmdbne	r9, {r2, r4, r8, sl}
    704c:	01061205 	tsteq	r6, r5, lsl #4
    7050:	01000b02 	tsteq	r0, r2, lsl #22
    7054:	00050501 	andeq	r0, r5, r1, lsl #10
    7058:	2f9c0205 	svccs	0x009c0205
    705c:	b3031000 	movwlt	r1, #12288	; 0x3000
    7060:	050100c3 	streq	r0, [r1, #-195]	; 0xffffff3d
    7064:	14131309 	ldrne	r1, [r3], #-777	; 0xfffffcf7
    7068:	01062005 	tsteq	r6, r5
    706c:	2f060905 	svccs	0x00060905
    7070:	01062205 	tsteq	r6, r5, lsl #4
    7074:	2f060905 	svccs	0x00060905
    7078:	01062005 	tsteq	r6, r5
    707c:	022f0505 	eoreq	r0, pc, #20971520	; 0x1400000
    7080:	01010006 	tsteq	r1, r6
    7084:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    7088:	00000002 	andeq	r0, r0, r2
    708c:	c3c50300 	bicgt	r0, r5, #0, 6
    7090:	05050100 	streq	r0, [r5, #-256]	; 0xffffff00
    7094:	17090513 	smladne	r9, r3, r5, r0
    7098:	01061605 	tsteq	r6, r5, lsl #12
    709c:	42060905 	andmi	r0, r6, #81920	; 0x14000
    70a0:	01062605 	tsteq	r6, r5, lsl #12
    70a4:	03060505 	movweq	r0, #25861	; 0x6505
    70a8:	1c052e0b 	stcne	14, cr2, [r5], {11}
    70ac:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    70b0:	10052f06 	andne	r2, r5, r6, lsl #30
    70b4:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    70b8:	18052f06 	stmdane	r5, {r1, r2, r8, r9, sl, fp, sp}
    70bc:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    70c0:	17052f06 	strne	r2, [r5, -r6, lsl #30]
    70c4:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    70c8:	12052f06 	andne	r2, r5, #6, 30
    70cc:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    70d0:	17053006 	strne	r3, [r5, -r6]
    70d4:	01040200 	mrseq	r0, R12_usr
    70d8:	00050501 	andeq	r0, r5, r1, lsl #10
    70dc:	06010402 	streq	r0, [r1], -r2, lsl #8
    70e0:	05330601 	ldreq	r0, [r3, #-1537]!	; 0xfffff9ff
    70e4:	20010615 	andcs	r0, r1, r5, lsl r6
    70e8:	2f060505 	svccs	0x00060505
    70ec:	01061205 	tsteq	r6, r5, lsl #4
    70f0:	2f060505 	svccs	0x00060505
    70f4:	01061a05 	tsteq	r6, r5, lsl #20
    70f8:	30060505 	andcc	r0, r6, r5, lsl #10
    70fc:	01061a05 	tsteq	r6, r5, lsl #20
    7100:	0b030105 	bleq	c751c <__HEAP_SIZE+0xc651c>
    7104:	0009052e 	andeq	r0, r9, lr, lsr #10
    7108:	06030402 	streq	r0, [r3], -r2, lsl #8
    710c:	05206e03 	streq	r6, [r0, #-3587]!	; 0xfffff1fd
    7110:	04020023 	streq	r0, [r2], #-35	; 0xffffffdd
    7114:	05010603 	streq	r0, [r1, #-1539]	; 0xfffff9fd
    7118:	04020038 	streq	r0, [r2], #-56	; 0xffffffc8
    711c:	05480603 	strbeq	r0, [r8, #-1539]	; 0xfffff9fd
    7120:	0402003f 	streq	r0, [r2], #-63	; 0xffffffc1
    7124:	00010603 	andeq	r0, r1, r3, lsl #12
    7128:	20030402 	andcs	r0, r3, r2, lsl #8
    712c:	01001a02 	tsteq	r0, r2, lsl #20
    7130:	000bd401 	andeq	sp, fp, r1, lsl #8
    7134:	48000300 	stmdami	r0, {r8, r9}
    7138:	02000002 	andeq	r0, r0, #2
    713c:	0d0efb01 	vstreq	d15, [lr, #-4]
    7140:	01010100 	mrseq	r0, (UNDEF: 17)
    7144:	00000001 	andeq	r0, r0, r1
    7148:	01000001 	tsteq	r0, r1
    714c:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    7150:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    7154:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    7158:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    715c:	6572462f 	ldrbvs	r4, [r2, #-1583]!	; 0xfffff9d1
    7160:	4f545265 	svcmi	0x00545265
    7164:	3a630053 	bcc	18c72b8 <__RAM_SIZE+0x17c72b8>
    7168:	6573755c 	ldrbvs	r7, [r3, #-1372]!	; 0xfffffaa4
    716c:	785c7372 	ldmdavc	ip, {r1, r4, r5, r6, r8, r9, ip, sp, lr}^
    7170:	6e6f6469 	cdpvs	4, 6, cr6, cr15, cr9, {3}
    7174:	6f72705c 	svcvs	0x0072705c
    7178:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
    717c:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    7180:	6363675f 	cmnvs	r3, #24903680	; 0x17c0000
    7184:	6363675c 	cmnvs	r3, #92, 14	; 0x1700000
    7188:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
    718c:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    7190:	61652d65 	cmnvs	r5, r5, ror #26
    7194:	312d6962 			; <UNDEFINED> instruction: 0x312d6962
    7198:	2d332e30 	ldccs	14, cr2, [r3, #-192]!	; 0xffffff40
    719c:	31323032 	teqcc	r2, r2, lsr r0
    71a0:	5c30312e 	ldfpls	f3, [r0], #-184	; 0xffffff48
    71a4:	5c62696c 			; <UNDEFINED> instruction: 0x5c62696c
    71a8:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
    71ac:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    71b0:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    71b4:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    71b8:	30315c69 	eorscc	r5, r1, r9, ror #24
    71bc:	312e332e 			; <UNDEFINED> instruction: 0x312e332e
    71c0:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
    71c4:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    71c8:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
    71cc:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
    71d0:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
    71d4:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
    71d8:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
    71dc:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
    71e0:	5f6d7261 	svcpl	0x006d7261
    71e4:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
    71e8:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
    71ec:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    71f0:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    71f4:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    71f8:	30312d69 	eorscc	r2, r1, r9, ror #26
    71fc:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
    7200:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
    7204:	615c3031 	cmpvs	ip, r1, lsr r0
    7208:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    720c:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    7210:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    7214:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
    7218:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    721c:	63616d5c 	cmnvs	r1, #92, 26	; 0x1700
    7220:	656e6968 	strbvs	r6, [lr, #-2408]!	; 0xfffff698
    7224:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
    7228:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
    722c:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
    7230:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
    7234:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
    7238:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
    723c:	5f6d7261 	svcpl	0x006d7261
    7240:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
    7244:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
    7248:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    724c:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    7250:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    7254:	30312d69 	eorscc	r2, r1, r9, ror #26
    7258:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
    725c:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
    7260:	615c3031 	cmpvs	ip, r1, lsr r0
    7264:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    7268:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    726c:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    7270:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
    7274:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    7278:	7379735c 	cmnvc	r9, #92, 6	; 0x70000001
    727c:	2f2e2e00 	svccs	0x002e2e00
    7280:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    7284:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    7288:	6f747262 	svcvs	0x00747262
    728c:	72462f73 	subvc	r2, r6, #460	; 0x1cc
    7290:	54526565 	ldrbpl	r6, [r2], #-1381	; 0xfffffa9b
    7294:	692f534f 	stmdbvs	pc!, {r0, r1, r2, r3, r6, r8, r9, ip, lr}	; <UNPREDICTABLE>
    7298:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    729c:	2e006564 	cfsh32cs	mvfx6, mvfx0, #52
    72a0:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    72a4:	2f2e2e2f 	svccs	0x002e2e2f
    72a8:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
    72ac:	2f736f74 	svccs	0x00736f74
    72b0:	65657246 	strbvs	r7, [r5, #-582]!	; 0xfffffdba
    72b4:	534f5452 	movtpl	r5, #62546	; 0xf452
    72b8:	726f702f 	rsbvc	r7, pc, #47	; 0x2f
    72bc:	6c626174 	stfvse	f6, [r2], #-464	; 0xfffffe30
    72c0:	43472f65 	movtmi	r2, #32613	; 0x7f65
    72c4:	52412f43 	subpl	r2, r1, #268	; 0x10c
    72c8:	4d435f4d 	stclmi	15, cr5, [r3, #-308]	; 0xfffffecc
    72cc:	4e5f3333 	mrcmi	3, 2, r3, cr15, cr3, {1}
    72d0:	6e2f5a54 			; <UNDEFINED> instruction: 0x6e2f5a54
    72d4:	735f6e6f 	cmpvc	pc, #1776	; 0x6f0
    72d8:	72756365 	rsbsvc	r6, r5, #-1811939327	; 0x94000001
    72dc:	74000065 	strvc	r0, [r0], #-101	; 0xffffff9b
    72e0:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    72e4:	00632e73 	rsbeq	r2, r3, r3, ror lr
    72e8:	73000001 	movwvc	r0, #1
    72ec:	65646474 	strbvs	r6, [r4, #-1140]!	; 0xfffffb8c
    72f0:	00682e66 	rsbeq	r2, r8, r6, ror #28
    72f4:	5f000002 	svcpl	0x00000002
    72f8:	61666564 	cmnvs	r6, r4, ror #10
    72fc:	5f746c75 	svcpl	0x00746c75
    7300:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
    7304:	00682e73 	rsbeq	r2, r8, r3, ror lr
    7308:	5f000003 	svcpl	0x00000003
    730c:	69647473 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
    7310:	682e746e 	stmdavs	lr!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
    7314:	00000400 	andeq	r0, r0, r0, lsl #8
    7318:	6a6f7270 	bvs	1be3ce0 <__RAM_SIZE+0x1ae3ce0>
    731c:	73666564 	cmnvc	r6, #100, 10	; 0x19000000
    7320:	0500682e 	streq	r6, [r0, #-2094]	; 0xfffff7d2
    7324:	6f700000 	svcvs	0x00700000
    7328:	616d7472 	smcvs	55106	; 0xd742
    732c:	636f7263 	cmnvs	pc, #805306374	; 0x30000006
    7330:	6f6d6d6f 	svcvs	0x006d6d6f
    7334:	00682e6e 	rsbeq	r2, r8, lr, ror #28
    7338:	46000006 	strmi	r0, [r0], -r6
    733c:	52656572 	rsbpl	r6, r5, #478150656	; 0x1c800000
    7340:	2e534f54 	mrccs	15, 2, r4, cr3, cr4, {2}
    7344:	00050068 	andeq	r0, r5, r8, rrx
    7348:	73696c00 	cmnvc	r9, #0, 24
    734c:	00682e74 	rsbeq	r2, r8, r4, ror lr
    7350:	74000005 	strvc	r0, [r0], #-5
    7354:	2e6b7361 	cdpcs	3, 6, cr7, cr11, cr1, {3}
    7358:	00050068 	andeq	r0, r5, r8, rrx
    735c:	65757100 	ldrbvs	r7, [r5, #-256]!	; 0xffffff00
    7360:	682e6575 	stmdavs	lr!, {r0, r2, r4, r5, r6, r8, sl, sp, lr}
    7364:	00000500 	andeq	r0, r0, r0, lsl #10
    7368:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
    736c:	682e7372 	stmdavs	lr!, {r1, r4, r5, r6, r8, r9, ip, sp, lr}
    7370:	00000500 	andeq	r0, r0, r0, lsl #10
    7374:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
    7378:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
    737c:	0500682e 	streq	r6, [r0, #-2094]	; 0xfffff7d2
    7380:	05000000 	streq	r0, [r0, #-0]
    7384:	02050005 	andeq	r0, r5, #5
    7388:	10002fb4 			; <UNDEFINED> instruction: 0x10002fb4
    738c:	0106cc03 	tsteq	r6, r3, lsl #24
    7390:	03130905 	tsteq	r3, #81920	; 0x14000
    7394:	1b050109 	blne	1477c0 <__RAM_SIZE+0x477c0>
    7398:	19050106 	stmdbne	r5, {r1, r2, r8}
    739c:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    73a0:	00090558 	andeq	r0, r9, r8, asr r5
    73a4:	06040402 	streq	r0, [r4], -r2, lsl #8
    73a8:	000b0522 	andeq	r0, fp, r2, lsr #10
    73ac:	06040402 	streq	r0, [r4], -r2, lsl #8
    73b0:	060d0501 	streq	r0, [sp], -r1, lsl #10
    73b4:	061f0522 	ldreq	r0, [pc], -r2, lsr #10
    73b8:	201d0501 	andscs	r0, sp, r1, lsl #10
    73bc:	1c1b0520 	cfldr32ne	mvfx0, [fp], {32}
    73c0:	09031d05 	stmdbeq	r3, {r0, r2, r8, sl, fp, ip}
    73c4:	0609052e 	streq	r0, [r9], -lr, lsr #10
    73c8:	06050523 	streq	r0, [r5], -r3, lsr #10
    73cc:	00030213 	andeq	r0, r3, r3, lsl r2
    73d0:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    73d4:	d4020500 	strle	r0, [r2], #-1280	; 0xfffffb00
    73d8:	0310002f 	tsteq	r0, #47	; 0x2f
    73dc:	06010781 	streq	r0, [r1], -r1, lsl #15
    73e0:	06090501 	streq	r0, [r9], -r1, lsl #10
    73e4:	22211421 	eorcs	r1, r1, #553648128	; 0x21000000
    73e8:	01060b05 	tsteq	r6, r5, lsl #22
    73ec:	32060d05 	andcc	r0, r6, #320	; 0x140
    73f0:	01061305 	tsteq	r6, r5, lsl #6
    73f4:	05204a05 	streq	r4, [r0, #-2565]!	; 0xfffff5fb
    73f8:	2205200f 	andcs	r2, r5, #15
    73fc:	03050532 	movweq	r0, #21810	; 0x5532
    7400:	11052017 	tstne	r5, r7, lsl r0
    7404:	206d0306 	rsbcs	r0, sp, r6, lsl #6
    7408:	052e2006 	streq	r2, [lr, #-6]!
    740c:	2e6f0314 	mcrcs	3, 3, r0, cr15, cr4, {0}
    7410:	03060d05 	movweq	r0, #27909	; 0x6d05
    7414:	0f052e16 	svceq	0x00052e16
    7418:	2d050106 	stfcss	f0, [r5, #-24]	; 0xffffffe8
    741c:	01040200 	mrseq	r0, R12_usr
    7420:	0611052e 	ldreq	r0, [r1], -lr, lsr #10
    7424:	062e0903 	strteq	r0, [lr], -r3, lsl #18
    7428:	05202020 	streq	r2, [r0, #-32]!	; 0xffffffe0
    742c:	2e610314 	mcrcs	3, 3, r0, cr1, cr4, {0}
    7430:	1b032205 	blne	cfc4c <__HEAP_SIZE+0xcec4c>
    7434:	0609052e 	streq	r0, [r9], -lr, lsr #10
    7438:	06100528 	ldreq	r0, [r0], -r8, lsr #10
    743c:	00060201 	andeq	r0, r6, r1, lsl #4
    7440:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    7444:	1c020500 	cfstr32ne	mvfx0, [r2], {-0}
    7448:	03100030 	tsteq	r0, #48	; 0x30
    744c:	060105bd 			; <UNDEFINED> instruction: 0x060105bd
    7450:	06090501 	streq	r0, [r9], -r1, lsl #10
    7454:	060e054e 	streq	r0, [lr], -lr, asr #10
    7458:	060d0501 	streq	r0, [sp], -r1, lsl #10
    745c:	06240523 	strteq	r0, [r4], -r3, lsr #10
    7460:	201a0501 	andscs	r0, sl, r1, lsl #10
    7464:	23062a05 	movwcs	r2, #27141	; 0x6a05
    7468:	05130d05 	ldreq	r0, [r3, #-3333]	; 0xfffff2fb
    746c:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
    7470:	0e05200d 	cdpeq	0, 0, cr2, cr5, cr13, {0}
    7474:	2e790306 	cdpcs	3, 7, cr0, cr9, cr6, {0}
    7478:	01064d05 	tsteq	r6, r5, lsl #26
    747c:	05201005 	streq	r1, [r0, #-5]!
    7480:	0505660e 	streq	r6, [r5, #-1550]	; 0xfffff9f2
    7484:	202e0903 	eorcs	r0, lr, r3, lsl #18
    7488:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    748c:	02050005 	andeq	r0, r5, #5
    7490:	10003044 	andne	r3, r0, r4, asr #32
    7494:	0105cf03 	tsteq	r5, r3, lsl #30
    7498:	09050106 	stmdbeq	r5, {r1, r2, r8}
    749c:	31054006 	tstcc	r5, r6
    74a0:	19050106 	stmdbne	r5, {r1, r2, r8}
    74a4:	0609053c 			; <UNDEFINED> instruction: 0x0609053c
    74a8:	06120525 	ldreq	r0, [r2], -r5, lsr #10
    74ac:	09052001 	stmdbeq	r5, {r0, sp}
    74b0:	16053206 	strne	r3, [r5], -r6, lsl #4
    74b4:	0b050106 	bleq	1478d4 <__RAM_SIZE+0x478d4>
    74b8:	060d052e 	streq	r0, [sp], -lr, lsr #10
    74bc:	061f0542 	ldreq	r0, [pc], -r2, asr #10
    74c0:	06260501 	strteq	r0, [r6], -r1, lsl #10
    74c4:	1309054e 	movwne	r0, #38222	; 0x954e
    74c8:	01061005 	tsteq	r6, r5
    74cc:	05200905 	streq	r0, [r0, #-2309]!	; 0xfffff6fb
    74d0:	0d052f05 	stceq	15, cr2, [r5, #-20]	; 0xffffffec
    74d4:	20760306 	rsbscs	r0, r6, r6, lsl #6
    74d8:	01000902 	tsteq	r0, r2, lsl #18
    74dc:	00050501 	andeq	r0, r5, r1, lsl #10
    74e0:	30840205 	addcc	r0, r4, r5, lsl #4
    74e4:	be031000 	cdplt	0, 0, cr1, cr3, cr0, {0}
    74e8:	09050108 	stmdbeq	r5, {r3, r8}
    74ec:	05181321 	ldreq	r1, [r8, #-801]	; 0xfffffcdf
    74f0:	0501060e 	streq	r0, [r1, #-1550]	; 0xfffff9f2
    74f4:	0522060d 	streq	r0, [r2, #-1549]!	; 0xfffff9f3
    74f8:	0501061f 	streq	r0, [r1, #-1567]	; 0xfffff9e1
    74fc:	0525060d 	streq	r0, [r5, #-1549]!	; 0xfffff9f3
    7500:	5879030e 	ldmdapl	r9!, {r1, r2, r3, r8, r9}^
    7504:	01061005 	tsteq	r6, r5
    7508:	053c0e05 	ldreq	r0, [ip, #-3589]!	; 0xfffff1fb
    750c:	0a030609 	beq	c8d38 <__HEAP_SIZE+0xc7d38>
    7510:	1c05132e 	stcne	3, cr1, [r5], {46}	; 0x2e
    7514:	09050106 	stmdbeq	r5, {r1, r2, r8}
    7518:	1d054b06 	vstrne	d4, [r5, #-24]	; 0xffffffe8
    751c:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    7520:	05022021 	streq	r2, [r2, #-33]	; 0xffffffdf
    7524:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    7528:	02050005 	andeq	r0, r5, #5
    752c:	100030b4 	strhne	r3, [r0], -r4
    7530:	0106e703 	tsteq	r6, r3, lsl #14
    7534:	09050106 	stmdbeq	r5, {r1, r2, r8}
    7538:	19052f06 	stmdbne	r5, {r1, r2, r8, r9, sl, fp, sp}
    753c:	14090513 	strne	r0, [r9], #-1299	; 0xfffffaed
    7540:	01061405 	tsteq	r6, r5, lsl #8
    7544:	0609052e 	streq	r0, [r9], -lr, lsr #10
    7548:	06160522 	ldreq	r0, [r6], -r2, lsr #10
    754c:	2e0b0501 	cfsh32cs	mvfx0, mvfx11, #1
    7550:	35060d05 	strcc	r0, [r6, #-3333]	; 0xfffff2fb
    7554:	01062705 	tsteq	r6, r5, lsl #14
    7558:	31060905 	tstcc	r6, r5, lsl #18
    755c:	01061305 	tsteq	r6, r5, lsl #6
    7560:	30060905 	andcc	r0, r6, r5, lsl #18
    7564:	13060505 	movwne	r0, #25861	; 0x6505
    7568:	03060d05 	movweq	r0, #27909	; 0x6d05
    756c:	052f2e75 	streq	r2, [pc, #-3701]!	; 66ff <__HEAP_SIZE+0x56ff>
    7570:	02010627 	andeq	r0, r1, #40894464	; 0x2700000
    7574:	01010005 	tsteq	r1, r5
    7578:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    757c:	0030e002 	eorseq	lr, r0, r2
    7580:	068f0310 	pkhbteq	r0, pc, r0, lsl #6	; <UNPREDICTABLE>
    7584:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    7588:	134b0609 	movtne	r0, #46601	; 0xb609
    758c:	350d0514 	strcc	r0, [sp, #-1300]	; 0xfffffaec
    7590:	01061805 	tsteq	r6, r5, lsl #16
    7594:	3e060d05 	cdpcc	13, 0, cr0, cr6, cr5, {0}
    7598:	01062905 	tsteq	r6, r5, lsl #18
    759c:	05200f05 	streq	r0, [r0, #-3845]!	; 0xfffff0fb
    75a0:	05310611 	ldreq	r0, [r1, #-1553]!	; 0xfffff9ef
    75a4:	05010613 	streq	r0, [r1, #-1555]	; 0xfffff9ed
    75a8:	04020032 	streq	r0, [r2], #-50	; 0xffffffce
    75ac:	15052001 	strne	r2, [r5, #-1]
    75b0:	2e0d0306 	cdpcs	3, 0, cr0, cr13, cr6, {0}
    75b4:	01061705 	tsteq	r6, r5, lsl #14
    75b8:	24061905 	strcs	r1, [r6], #-2309	; 0xfffff6fb
    75bc:	01062905 	tsteq	r6, r5, lsl #18
    75c0:	5b061505 	blpl	18c9dc <__RAM_SIZE+0x8c9dc>
    75c4:	30064a06 	andcc	r4, r6, r6, lsl #20
    75c8:	01061905 	tsteq	r6, r5, lsl #18
    75cc:	052e1705 	streq	r1, [lr, #-1797]!	; 0xfffff8fb
    75d0:	20130305 	andscs	r0, r3, r5, lsl #6
    75d4:	03061505 	movweq	r1, #25861	; 0x6505
    75d8:	1e052e59 	mcrne	14, 0, r2, cr5, cr9, {2}
    75dc:	15050106 	strne	r0, [r5, #-262]	; 0xfffffefa
    75e0:	29052f06 	stmdbcs	r5, {r1, r2, r8, r9, sl, fp, sp}
    75e4:	580e0306 	stmdapl	lr, {r1, r2, r8, r9}
    75e8:	06190520 	ldreq	r0, [r9], -r0, lsr #10
    75ec:	05200b03 	streq	r0, [r0, #-2819]!	; 0xfffff4fd
    75f0:	3c0a0311 	stccc	3, cr0, [sl], {17}
    75f4:	01061a05 	tsteq	r6, r5, lsl #20
    75f8:	02310505 	eorseq	r0, r1, #20971520	; 0x1400000
    75fc:	01010006 	tsteq	r1, r6
    7600:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    7604:	00314802 	eorseq	r4, r1, r2, lsl #16
    7608:	07aa0310 			; <UNDEFINED> instruction: 0x07aa0310
    760c:	2f090501 	svccs	0x00090501
    7610:	01061d05 	tsteq	r6, r5, lsl #26
    7614:	59060905 	stmdbpl	r6, {r0, r2, r8, fp}
    7618:	05141313 	ldreq	r1, [r4, #-787]	; 0xfffffced
    761c:	0501060e 	streq	r0, [r1, #-1550]	; 0xfffff9f2
    7620:	1303062d 	movwne	r0, #13869	; 0x362d
    7624:	190d0520 	stmdbne	sp, {r5, r8, sl}
    7628:	01061905 	tsteq	r6, r5, lsl #18
    762c:	05200f05 	streq	r0, [r0, #-3845]!	; 0xfffff0fb
    7630:	6603060e 	strvs	r0, [r3], -lr, lsl #12
    7634:	0610052e 	ldreq	r0, [r0], -lr, lsr #10
    7638:	660e0501 	strvs	r0, [lr], -r1, lsl #10
    763c:	34061105 	strcc	r1, [r6], #-261	; 0xfffffefb
    7640:	01061d05 	tsteq	r6, r5, lsl #26
    7644:	05201305 	streq	r1, [r0, #-773]!	; 0xfffffcfb
    7648:	05300615 	ldreq	r0, [r0, #-1557]!	; 0xfffff9eb
    764c:	1505162f 	strne	r1, [r5, #-1583]	; 0xfffff9d1
    7650:	03110515 	tsteq	r1, #88080384	; 0x5400000
    7654:	1905580f 	stmdbne	r5, {r0, r1, r2, r3, fp, ip, lr}
    7658:	11050106 	tstne	r5, r6, lsl #2
    765c:	15052206 	strne	r2, [r5, #-518]	; 0xfffffdfa
    7660:	13050106 	movwne	r0, #20742	; 0x5106
    7664:	06150520 	ldreq	r0, [r5], -r0, lsr #10
    7668:	061e0523 	ldreq	r0, [lr], -r3, lsr #10
    766c:	062d0501 	strteq	r0, [sp], -r1, lsl #10
    7670:	15770540 	ldrbne	r0, [r7, #-1344]!	; 0xfffffac0
    7674:	051a1105 	ldreq	r1, [sl, #-261]	; 0xfffffefb
    7678:	0501061c 	streq	r0, [r1, #-1564]	; 0xfffff9e4
    767c:	054c0611 	strbeq	r0, [ip, #-1553]	; 0xfffff9ef
    7680:	05010621 	streq	r0, [r1, #-1569]	; 0xfffff9df
    7684:	19052011 	stmdbne	r5, {r0, r4, sp}
    7688:	2b05a506 	blcs	170aa8 <__RAM_SIZE+0x70aa8>
    768c:	19050106 	stmdbne	r5, {r1, r2, r8}
    7690:	5d056806 	stcpl	8, cr6, [r5, #-24]	; 0xffffffe8
    7694:	75050106 	strvc	r0, [r5, #-262]	; 0xfffffefa
    7698:	201d0520 	andscs	r0, sp, r0, lsr #10
    769c:	2e1b053c 	mrccs	5, 0, r0, cr11, cr12, {1}
    76a0:	32061d05 	andcc	r1, r6, #320	; 0x140
    76a4:	01062a05 	tsteq	r6, r5, lsl #20
    76a8:	052e1f05 	streq	r1, [lr, #-3845]!	; 0xfffff0fb
    76ac:	05420621 	strbeq	r0, [r2, #-1569]	; 0xfffff9df
    76b0:	05010633 	streq	r0, [r1, #-1587]	; 0xfffff9cd
    76b4:	054e063a 	strbeq	r0, [lr, #-1594]	; 0xfffff9c6
    76b8:	2405131d 	strcs	r1, [r5], #-797	; 0xfffffce3
    76bc:	1d050106 	stfnes	f0, [r5, #-24]	; 0xffffffe8
    76c0:	06210520 	strteq	r0, [r1], -r0, lsr #10
    76c4:	053c7703 	ldreq	r7, [ip, #-1795]!	; 0xfffff8fd
    76c8:	0501066d 	streq	r0, [r1, #-1645]	; 0xfffff993
    76cc:	19052021 	stmdbne	r5, {r0, r5, sp}
    76d0:	74150306 	ldrvc	r0, [r5], #-774	; 0xfffffcfa
    76d4:	01062b05 	tsteq	r6, r5, lsl #22
    76d8:	67061905 	strvs	r1, [r6, -r5, lsl #18]
    76dc:	062b0524 	strteq	r0, [fp], -r4, lsr #10
    76e0:	06190501 	ldreq	r0, [r9], -r1, lsl #10
    76e4:	06530567 	ldrbeq	r0, [r3], -r7, ror #10
    76e8:	20360501 	eorscs	r0, r6, r1, lsl #10
    76ec:	21064d05 	tstcs	r6, r5, lsl #26
    76f0:	051a1905 	ldreq	r1, [sl, #-2309]	; 0xfffff6fb
    76f4:	4a010622 	bmi	48f84 <__HEAP_SIZE+0x47f84>
    76f8:	2f061905 	svccs	0x00061905
    76fc:	05281d05 	streq	r1, [r8, #-3333]!	; 0xfffff2fb
    7700:	0501062a 	streq	r0, [r1, #-1578]	; 0xfffff9d6
    7704:	21052e1f 	tstcs	r5, pc, lsl lr
    7708:	33054206 	movwcc	r4, #20998	; 0x5206
    770c:	21050106 	tstcs	r5, r6, lsl #2
    7710:	20065406 	andcs	r5, r6, r6, lsl #8
    7714:	18030505 	stmdane	r3, {r0, r2, r8, sl}
    7718:	0004023c 	andeq	r0, r4, ip, lsr r2
    771c:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    7720:	40020500 	andmi	r0, r2, r0, lsl #10
    7724:	03100032 	tsteq	r0, #50	; 0x32
    7728:	060105ec 	streq	r0, [r1], -ip, ror #11
    772c:	00090501 	andeq	r0, r9, r1, lsl #10
    7730:	06010402 	streq	r0, [r1], -r2, lsl #8
    7734:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    7738:	02001301 	andeq	r1, r0, #67108864	; 0x4000000
    773c:	00150104 	andseq	r0, r5, r4, lsl #2
    7740:	03010402 	movweq	r0, #5122	; 0x1402
    7744:	0d05010c 	stfeqs	f0, [r5, #-48]	; 0xffffffd0
    7748:	01040200 	mrseq	r0, R12_usr
    774c:	001f0516 	andseq	r0, pc, r6, lsl r5	; <UNPREDICTABLE>
    7750:	06010402 	streq	r0, [r1], -r2, lsl #8
    7754:	000d0501 	andeq	r0, sp, r1, lsl #10
    7758:	06010402 	streq	r0, [r1], -r2, lsl #8
    775c:	04020040 	streq	r0, [r2], #-64	; 0xffffffc0
    7760:	2d053f01 	stccs	15, cr3, [r5, #-4]
    7764:	01040200 	mrseq	r0, R12_usr
    7768:	022e7503 	eoreq	r7, lr, #12582912	; 0xc00000
    776c:	01010001 	tsteq	r1, r1
    7770:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    7774:	00325802 	eorseq	r5, r2, r2, lsl #16
    7778:	08d70310 	ldmeq	r7, {r4, r8, r9}^
    777c:	32090501 	andcc	r0, r9, #4194304	; 0x400000
    7780:	05300d05 	ldreq	r0, [r0, #-3333]!	; 0xfffff2fb
    7784:	0501061d 	streq	r0, [r1, #-1565]	; 0xfffff9e3
    7788:	29052e0f 	stmdbcs	r5, {r0, r1, r2, r3, r9, sl, fp, sp}
    778c:	20250306 	eorcs	r0, r5, r6, lsl #6
    7790:	05150905 	ldreq	r0, [r5, #-2309]	; 0xfffff6fb
    7794:	052f0605 	streq	r0, [pc, #-1541]!	; 7197 <__HEAP_SIZE+0x6197>
    7798:	59030611 	stmdbpl	r3, {r0, r4, r9, sl}
    779c:	054b4b2e 	strbeq	r4, [fp, #-2862]	; 0xfffff4d2
    77a0:	05010624 	streq	r0, [r1, #-1572]	; 0xfffff9dc
    77a4:	052f0611 	streq	r0, [pc, #-1553]!	; 719b <__HEAP_SIZE+0x619b>
    77a8:	06010625 	streq	r0, [r1], -r5, lsr #12
    77ac:	15051334 	strne	r1, [r5, #-820]	; 0xfffffccc
    77b0:	06230514 			; <UNDEFINED> instruction: 0x06230514
    77b4:	82210501 	eorhi	r0, r1, #4194304	; 0x400000
    77b8:	01010008 	tsteq	r1, r8
    77bc:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    77c0:	00000002 	andeq	r0, r0, r2
    77c4:	03a60300 			; <UNDEFINED> instruction: 0x03a60300
    77c8:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    77cc:	05760634 	ldrbeq	r0, [r6, #-1588]!	; 0xfffff9cc
    77d0:	05321609 	ldreq	r1, [r2, #-1545]!	; 0xfffff9f7
    77d4:	05010621 	streq	r0, [r1, #-1569]	; 0xfffff9df
    77d8:	052f0609 	streq	r0, [pc, #-1545]!	; 71d7 <__HEAP_SIZE+0x61d7>
    77dc:	05010629 	streq	r0, [r1, #-1577]	; 0xfffff9d7
    77e0:	05210609 	streq	r0, [r1, #-1545]!	; 0xfffff9f7
    77e4:	0501061f 	streq	r0, [r1, #-1567]	; 0xfffff9e1
    77e8:	05210609 	streq	r0, [r1, #-1545]!	; 0xfffff9f7
    77ec:	05010628 	streq	r0, [r1, #-1576]	; 0xfffff9d8
    77f0:	3e2f0609 	cfmadda32cc	mvax0, mvax0, mvfx15, mvfx9
    77f4:	01060b05 	tsteq	r6, r5, lsl #22
    77f8:	22060d05 	andcs	r0, r6, #320	; 0x140
    77fc:	01062205 	tsteq	r6, r5, lsl #4
    7800:	69062805 	stmdbvs	r6, {r0, r2, fp, sp}
    7804:	13060505 	movwne	r0, #25861	; 0x6505
    7808:	0101002e 	tsteq	r1, lr, lsr #32
    780c:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    7810:	0032b802 	eorseq	fp, r2, r2, lsl #16
    7814:	01ed0310 	mvneq	r0, r0, lsl r3
    7818:	2f090501 	svccs	0x00090501
    781c:	05142b05 	ldreq	r2, [r4, #-2821]	; 0xfffff4fb
    7820:	05301809 	ldreq	r1, [r0, #-2057]!	; 0xfffff7f7
    7824:	05010619 	streq	r0, [r1, #-1561]	; 0xfffff9e7
    7828:	15052e0b 	strne	r2, [r5, #-3595]	; 0xfffff1f5
    782c:	20290306 	eorcs	r0, r9, r6, lsl #6
    7830:	01062405 	tsteq	r6, r5, lsl #8
    7834:	2f061505 	svccs	0x00061505
    7838:	01062305 	tsteq	r6, r5, lsl #6
    783c:	21061505 	tstcs	r6, r5, lsl #10
    7840:	28055914 	stmdacs	r5, {r2, r4, r8, fp, ip, lr}
    7844:	26050106 	strcs	r0, [r5], -r6, lsl #2
    7848:	061505ba 			; <UNDEFINED> instruction: 0x061505ba
    784c:	06170536 			; <UNDEFINED> instruction: 0x06170536
    7850:	22210501 	eorcs	r0, r1, #4194304	; 0x400000
    7854:	14052020 	strne	r2, [r5], #-32	; 0xffffffe0
    7858:	017fbe03 	cmneq	pc, r3, lsl #28
    785c:	03062505 	movweq	r2, #25861	; 0x6505
    7860:	053c00d4 	ldreq	r0, [ip, #-212]!	; 0xffffff2c
    7864:	35051520 	strcc	r1, [r5, #-1312]	; 0xfffffae0
    7868:	14090514 	strne	r0, [r9], #-1300	; 0xfffffaec
    786c:	13060505 	movwne	r0, #25861	; 0x6505
    7870:	01000b02 	tsteq	r0, r2, lsl #22
    7874:	00090501 	andeq	r0, r9, r1, lsl #10
    7878:	00000205 	andeq	r0, r0, r5, lsl #4
    787c:	d4030000 	strle	r0, [r3], #-0
    7880:	01060102 	tsteq	r6, r2, lsl #2
    7884:	75060d05 	strvc	r0, [r6, #-3333]	; 0xfffff2fb
    7888:	05147405 	ldreq	r7, [r4, #-1029]	; 0xfffffbfb
    788c:	2805170d 	stmdacs	r5, {r0, r2, r3, r8, r9, sl, ip}
    7890:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    7894:	0530060d 	ldreq	r0, [r0, #-1549]!	; 0xfffff9f3
    7898:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    789c:	05330611 	ldreq	r0, [r3, #-1553]!	; 0xfffff9ef
    78a0:	05010626 	streq	r0, [r1, #-1574]	; 0xfffff9da
    78a4:	063d0611 			; <UNDEFINED> instruction: 0x063d0611
    78a8:	06330574 			; <UNDEFINED> instruction: 0x06330574
    78ac:	140d0531 	strne	r0, [sp], #-1329	; 0xfffffacf
    78b0:	13060905 	movwne	r0, #26885	; 0x6905
    78b4:	0101004a 	tsteq	r1, sl, asr #32
    78b8:	05000905 	streq	r0, [r0, #-2309]	; 0xfffff6fb
    78bc:	00000002 	andeq	r0, r0, r2
    78c0:	02f70300 	rscseq	r0, r7, #0, 6
    78c4:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    78c8:	053d060d 	ldreq	r0, [sp, #-1549]!	; 0xfffff9f3
    78cc:	05140189 	ldreq	r0, [r4, #-393]	; 0xfffffe77
    78d0:	010e032a 	tsteq	lr, sl, lsr #6
    78d4:	14160d05 	ldrne	r0, [r6], #-3333	; 0xfffff2fb
    78d8:	01060f05 	tsteq	r6, r5, lsl #30
    78dc:	25061105 	strcs	r1, [r6, #-261]	; 0xfffffefb
    78e0:	01062605 	tsteq	r6, r5, lsl #12
    78e4:	4c061105 	stfmis	f1, [r6], {5}
    78e8:	055b3905 	ldrbeq	r3, [fp, #-2309]	; 0xfffff6fb
    78ec:	0905140d 	stmdbeq	r5, {r0, r2, r3, sl, ip}
    78f0:	003c1306 	eorseq	r1, ip, r6, lsl #6
    78f4:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    78f8:	00020500 	andeq	r0, r2, r0, lsl #10
    78fc:	03000000 	movweq	r0, #0
    7900:	050103c4 	streq	r0, [r1, #-964]	; 0xfffffc3c
    7904:	14131309 	ldrne	r1, [r3], #-777	; 0xfffffcf7
    7908:	05147f05 	ldreq	r7, [r4, #-3845]	; 0xfffff0fb
    790c:	0905141f 	stmdbeq	r5, {r0, r1, r2, r3, r4, sl, ip}
    7910:	06190516 			; <UNDEFINED> instruction: 0x06190516
    7914:	0b052001 	bleq	14f920 <__RAM_SIZE+0x4f920>
    7918:	03050520 	movweq	r0, #21792	; 0x5520
    791c:	0d052074 	stceq	0, cr2, [r5, #-464]	; 0xfffffe30
    7920:	2e0f0306 	cdpcs	3, 0, cr0, cr15, cr6, {0}
    7924:	01062105 	tsteq	r6, r5, lsl #2
    7928:	21060d05 	tstcs	r6, r5, lsl #26
    792c:	01063705 	tsteq	r6, r5, lsl #14
    7930:	21060d05 	tstcs	r6, r5, lsl #26
    7934:	01063105 	tsteq	r6, r5, lsl #2
    7938:	22064305 	andcs	r4, r6, #335544320	; 0x14000000
    793c:	05140d05 	ldreq	r0, [r4, #-3333]	; 0xfffff2fb
    7940:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    7944:	2e6c0314 	mcrcs	3, 3, r0, cr12, cr4, {0}
    7948:	03062505 	movweq	r2, #25861	; 0x6505
    794c:	3c052024 	stccc	0, cr2, [r5], {36}	; 0x24
    7950:	14090515 	strne	r0, [r9], #-1301	; 0xfffffaeb
    7954:	13060505 	movwne	r0, #25861	; 0x6505
    7958:	03061105 	movweq	r1, #24837	; 0x6105
    795c:	15053c6c 	strne	r3, [r5, #-3180]	; 0xfffff394
    7960:	13050106 	movwne	r0, #20742	; 0x5106
    7964:	0615052e 	ldreq	r0, [r5], -lr, lsr #10
    7968:	061f0534 			; <UNDEFINED> instruction: 0x061f0534
    796c:	15057401 	strne	r7, [r5, #-1025]	; 0xfffffbff
    7970:	1f051c06 	svcne	0x00051c06
    7974:	05740106 	ldrbeq	r0, [r4, #-262]!	; 0xfffffefa
    7978:	20680314 	rsbcs	r0, r8, r4, lsl r3
    797c:	2a030505 	bcs	c8d98 <__HEAP_SIZE+0xc7d98>
    7980:	00030220 	andeq	r0, r3, r0, lsr #4
    7984:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    7988:	00020500 	andeq	r0, r2, r0, lsl #10
    798c:	03000000 	movweq	r0, #0
    7990:	060103f7 			; <UNDEFINED> instruction: 0x060103f7
    7994:	06090501 	streq	r0, [r9], -r1, lsl #10
    7998:	0514133d 	ldreq	r1, [r4, #-829]	; 0xfffffcc3
    799c:	1f05147e 	svcne	0x0005147e
    79a0:	16090514 			; <UNDEFINED> instruction: 0x16090514
    79a4:	01061905 	tsteq	r6, r5, lsl #18
    79a8:	200b0520 	andcs	r0, fp, r0, lsr #10
    79ac:	23060d05 	movwcs	r0, #27909	; 0x6d05
    79b0:	01062105 	tsteq	r6, r5, lsl #2
    79b4:	21060d05 	tstcs	r6, r5, lsl #26
    79b8:	01063705 	tsteq	r6, r5, lsl #14
    79bc:	21060d05 	tstcs	r6, r5, lsl #26
    79c0:	01063105 	tsteq	r6, r5, lsl #2
    79c4:	22064405 	andcs	r4, r6, #83886080	; 0x5000000
    79c8:	05140d05 	ldreq	r0, [r4, #-3333]	; 0xfffff2fb
    79cc:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    79d0:	2e6c0314 	mcrcs	3, 3, r0, cr12, cr4, {0}
    79d4:	03062505 	movweq	r2, #25861	; 0x6505
    79d8:	3b05201d 	blcc	14fa54 <__RAM_SIZE+0x4fa54>
    79dc:	14090515 	strne	r0, [r9], #-1301	; 0xfffffaeb
    79e0:	13060505 	movwne	r0, #25861	; 0x6505
    79e4:	03061105 	movweq	r1, #24837	; 0x6105
    79e8:	1b052e73 	blne	1533bc <__RAM_SIZE+0x533bc>
    79ec:	202e0106 	eorcs	r0, lr, r6, lsl #2
    79f0:	14052e20 	strne	r2, [r5], #-3616	; 0xfffff1e0
    79f4:	20206a03 	eorcs	r6, r0, r3, lsl #20
    79f8:	01000402 	tsteq	r0, r2, lsl #8
    79fc:	00050501 	andeq	r0, r5, r1, lsl #10
    7a00:	00000205 	andeq	r0, r0, r5, lsl #4
    7a04:	9f030000 	svcls	0x00030000
    7a08:	34050104 	strcc	r0, [r5], #-260	; 0xfffffefc
    7a0c:	16350513 			; <UNDEFINED> instruction: 0x16350513
    7a10:	05144705 	ldreq	r4, [r4, #-1797]	; 0xfffff8fb
    7a14:	05051409 	streq	r1, [r5, #-1033]	; 0xfffffbf7
    7a18:	06021306 	streq	r1, [r2], -r6, lsl #6
    7a1c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    7a20:	02050005 	andeq	r0, r5, #5
    7a24:	00000000 	andeq	r0, r0, r0
    7a28:	0104ad03 	tsteq	r4, r3, lsl #26
    7a2c:	05130905 	ldreq	r0, [r3, #-2309]	; 0xfffff6fb
    7a30:	1f05142d 	svcne	0x0005142d
    7a34:	14440514 	strbne	r0, [r4], #-1300	; 0xfffffaec
    7a38:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    7a3c:	20130605 	andscs	r0, r3, r5, lsl #12
    7a40:	01000102 	tsteq	r0, r2, lsl #2
    7a44:	00050501 	andeq	r0, r5, r1, lsl #10
    7a48:	00000205 	andeq	r0, r0, r5, lsl #4
    7a4c:	bc030000 	stclt	0, cr0, [r3], {-0}
    7a50:	01060104 	tsteq	r6, r4, lsl #2
    7a54:	3d060905 	vstrcc.16	s0, [r6, #-10]	; <UNPREDICTABLE>
    7a58:	05143e05 	ldreq	r3, [r4, #-3589]	; 0xfffff1fb
    7a5c:	0905141f 	stmdbeq	r5, {r0, r1, r2, r3, r4, sl, ip}
    7a60:	300d0513 	andcc	r0, sp, r3, lsl r5
    7a64:	01060f05 	tsteq	r6, r5, lsl #30
    7a68:	22061105 	andcs	r1, r6, #1073741825	; 0x40000001
    7a6c:	01062305 	tsteq	r6, r5, lsl #6
    7a70:	6d060905 	vstrvs.16	s0, [r6, #-10]	; <UNPREDICTABLE>
    7a74:	05302a05 	ldreq	r2, [r0, #-2565]!	; 0xfffff5fb
    7a78:	05130605 	ldreq	r0, [r3, #-1541]	; 0xfffff9fb
    7a7c:	7a030611 	bvc	c92c8 <__HEAP_SIZE+0xc82c8>
    7a80:	06230520 	strteq	r0, [r3], -r0, lsr #10
    7a84:	00070201 	andeq	r0, r7, r1, lsl #4
    7a88:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    7a8c:	00020500 	andeq	r0, r2, r0, lsl #10
    7a90:	03000000 	movweq	r0, #0
    7a94:	060104d4 			; <UNDEFINED> instruction: 0x060104d4
    7a98:	06090501 	streq	r0, [r9], -r1, lsl #10
    7a9c:	3105132f 	tstcc	r5, pc, lsr #6
    7aa0:	141f0514 	ldrne	r0, [pc], #-1300	; 7aa8 <__HEAP_SIZE+0x6aa8>
    7aa4:	05130905 	ldreq	r0, [r3, #-2309]	; 0xfffff6fb
    7aa8:	1a05300d 	bne	153ae4 <__RAM_SIZE+0x53ae4>
    7aac:	0f050106 	svceq	0x00050106
    7ab0:	3f19052e 	svccc	0x0019052e
    7ab4:	28060905 	stmdacs	r6, {r0, r2, r8, fp}
    7ab8:	05303305 	ldreq	r3, [r0, #-773]!	; 0xfffffcfb
    7abc:	05051409 	streq	r1, [r5, #-1033]	; 0xfffffbf7
    7ac0:	19051306 	stmdbne	r5, {r1, r2, r8, r9, ip}
    7ac4:	202e7803 	eorcs	r7, lr, r3, lsl #16
    7ac8:	01000102 	tsteq	r0, r2, lsl #2
    7acc:	00050501 	andeq	r0, r5, r1, lsl #10
    7ad0:	00000205 	andeq	r0, r0, r5, lsl #4
    7ad4:	f0030000 			; <UNDEFINED> instruction: 0xf0030000
    7ad8:	01060104 	tsteq	r6, r4, lsl #2
    7adc:	21060905 	tstcs	r6, r5, lsl #18
    7ae0:	05143205 	ldreq	r3, [r4, #-517]	; 0xfffffdfb
    7ae4:	24051409 	strcs	r1, [r5], #-1033	; 0xfffffbf7
    7ae8:	35050106 	strcc	r0, [r5, #-262]	; 0xfffffefa
    7aec:	09053006 	stmdbeq	r5, {r1, r2, ip, sp}
    7af0:	06050514 			; <UNDEFINED> instruction: 0x06050514
    7af4:	00010213 	andeq	r0, r1, r3, lsl r2
    7af8:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    7afc:	00020500 	andeq	r0, r2, r0, lsl #10
    7b00:	03000000 	movweq	r0, #0
    7b04:	050104fe 	streq	r0, [r1, #-1278]	; 0xfffffb02
    7b08:	05131309 	ldreq	r1, [r3, #-777]	; 0xfffffcf7
    7b0c:	1f051431 	svcne	0x00051431
    7b10:	13090514 	movwne	r0, #38164	; 0x9514
    7b14:	05143305 	ldreq	r3, [r4, #-773]	; 0xfffffcfb
    7b18:	05051409 	streq	r1, [r5, #-1033]	; 0xfffffbf7
    7b1c:	02201306 	eoreq	r1, r0, #402653184	; 0x18000000
    7b20:	01010001 	tsteq	r1, r1
    7b24:	05000905 	streq	r0, [r0, #-2309]	; 0xfffff6fb
    7b28:	00000002 	andeq	r0, r0, r2
    7b2c:	05900300 	ldreq	r0, [r0, #768]	; 0x300
    7b30:	130d0501 	movwne	r0, #54529	; 0xd501
    7b34:	14470513 	strbne	r0, [r7], #-1299	; 0xfffffaed
    7b38:	05143305 	ldreq	r3, [r4, #-773]	; 0xfffffcfb
    7b3c:	1a05140d 	bne	14cb78 <__RAM_SIZE+0x4cb78>
    7b40:	0f050106 	svceq	0x00050106
    7b44:	0611052e 	ldreq	r0, [r1], -lr, lsr #10
    7b48:	06210541 	strteq	r0, [r1], -r1, asr #10
    7b4c:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    7b50:	06190521 	ldreq	r0, [r9], -r1, lsr #10
    7b54:	05242001 	streq	r2, [r4, #-1]!
    7b58:	05230639 	streq	r0, [r3, #-1593]!	; 0xfffff9c7
    7b5c:	0905140d 	stmdbeq	r5, {r0, r2, r3, sl, ip}
    7b60:	01021306 	tsteq	r2, r6, lsl #6
    7b64:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    7b68:	02050005 	andeq	r0, r5, #5
    7b6c:	00000000 	andeq	r0, r0, r0
    7b70:	0105ad03 	tsteq	r5, r3, lsl #26
    7b74:	05130905 	ldreq	r0, [r3, #-2309]	; 0xfffff6fb
    7b78:	1f05142c 	svcne	0x0005142c
    7b7c:	143b0514 	ldrtne	r0, [fp], #-1300	; 0xfffffaec
    7b80:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    7b84:	20130605 	andscs	r0, r3, r5, lsl #12
    7b88:	01000102 	tsteq	r0, r2, lsl #2
    7b8c:	00050501 	andeq	r0, r5, r1, lsl #10
    7b90:	00000205 	andeq	r0, r0, r5, lsl #4
    7b94:	8a030000 	bhi	c7b9c <__HEAP_SIZE+0xc6b9c>
    7b98:	01060109 	tsteq	r6, r9, lsl #2
    7b9c:	2f060905 	svccs	0x00060905
    7ba0:	14310513 	ldrtne	r0, [r1], #-1299	; 0xfffffaed
    7ba4:	05141f05 	ldreq	r1, [r4, #-3845]	; 0xfffff0fb
    7ba8:	0d051509 	cfstr32eq	mvfx1, [r5, #-36]	; 0xffffffdc
    7bac:	061a0530 			; <UNDEFINED> instruction: 0x061a0530
    7bb0:	2e0f0501 	cfsh32cs	mvfx0, mvfx15, #1
    7bb4:	053e1905 	ldreq	r1, [lr, #-2309]!	; 0xfffff6fb
    7bb8:	05270609 	streq	r0, [r7, #-1545]!	; 0xfffff9f7
    7bbc:	09053033 	stmdbeq	r5, {r0, r1, r4, r5, ip, sp}
    7bc0:	06050514 			; <UNDEFINED> instruction: 0x06050514
    7bc4:	03190513 	tsteq	r9, #79691776	; 0x4c00000
    7bc8:	02202e78 	eoreq	r2, r0, #120, 28	; 0x780
    7bcc:	01010001 	tsteq	r1, r1
    7bd0:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    7bd4:	00000002 	andeq	r0, r0, r2
    7bd8:	09a70300 	stmibeq	r7!, {r8, r9}
    7bdc:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    7be0:	132f0609 			; <UNDEFINED> instruction: 0x132f0609
    7be4:	05142f05 	ldreq	r2, [r4, #-3845]	; 0xfffff0fb
    7be8:	0905141f 	stmdbeq	r5, {r0, r1, r2, r3, r4, sl, ip}
    7bec:	300d0514 	andcc	r0, sp, r4, lsl r5
    7bf0:	01061605 	tsteq	r6, r5, lsl #12
    7bf4:	22060905 	andcs	r0, r6, #81920	; 0x14000
    7bf8:	05303205 	ldreq	r3, [r0, #-517]!	; 0xfffffdfb
    7bfc:	05051409 	streq	r1, [r5, #-1033]	; 0xfffffbf7
    7c00:	002e1306 	eoreq	r1, lr, r6, lsl #6
    7c04:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    7c08:	00020500 	andeq	r0, r2, r0, lsl #10
    7c0c:	03000000 	movweq	r0, #0
    7c10:	060109bd 			; <UNDEFINED> instruction: 0x060109bd
    7c14:	06090501 	streq	r0, [r9], -r1, lsl #10
    7c18:	1437053d 	ldrtne	r0, [r7], #-1341	; 0xfffffac3
    7c1c:	05141f05 	ldreq	r1, [r4, #-3845]	; 0xfffff0fb
    7c20:	0d051409 	cfstrseq	mvf1, [r5, #-36]	; 0xffffffdc
    7c24:	06200530 			; <UNDEFINED> instruction: 0x06200530
    7c28:	06090501 	streq	r0, [r9], -r1, lsl #10
    7c2c:	30270522 	eorcc	r0, r7, r2, lsr #10
    7c30:	13060505 	movwne	r0, #25861	; 0x6505
    7c34:	01010020 	tsteq	r1, r0, lsr #32
    7c38:	05000905 	streq	r0, [r0, #-2309]	; 0xfffff6fb
    7c3c:	00000002 	andeq	r0, r0, r2
    7c40:	09d40300 	ldmibeq	r4, {r8, r9}^
    7c44:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    7c48:	134b060d 	movtne	r0, #46605	; 0xb60d
    7c4c:	05147f05 	ldreq	r7, [r4, #-3845]	; 0xfffff0fb
    7c50:	2105160d 	tstcs	r5, sp, lsl #12
    7c54:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
    7c58:	0521060d 	streq	r0, [r1, #-1549]!	; 0xfffff9f3
    7c5c:	0501063f 	streq	r0, [r1, #-1599]	; 0xfffff9c1
    7c60:	0521060d 	streq	r0, [r1, #-1549]!	; 0xfffff9f3
    7c64:	05010639 	streq	r0, [r1, #-1593]	; 0xfffff9c7
    7c68:	0521060d 	streq	r0, [r1, #-1549]!	; 0xfffff9f3
    7c6c:	05010639 	streq	r0, [r1, #-1593]	; 0xfffff9c7
    7c70:	0522060d 	streq	r0, [r2, #-1549]!	; 0xfffff9f3
    7c74:	2e010617 	mcrcs	6, 0, r0, cr1, cr7, {0}
    7c78:	06610520 	strbteq	r0, [r1], -r0, lsr #10
    7c7c:	1341053e 	movtne	r0, #5438	; 0x153e
    7c80:	05140d05 	ldreq	r0, [r4, #-3333]	; 0xfffff2fb
    7c84:	2e130609 	cfmsub32cs	mvax0, mvfx0, mvfx3, mvfx9
    7c88:	01000202 	tsteq	r0, r2, lsl #4
    7c8c:	00090501 	andeq	r0, r9, r1, lsl #10
    7c90:	00000205 	andeq	r0, r0, r5, lsl #4
    7c94:	f2030000 	vhadd.s8	d0, d3, d0
    7c98:	01060109 	tsteq	r6, r9, lsl #2
    7c9c:	4b060d05 	blmi	18b0b8 <__RAM_SIZE+0x8b0b8>
    7ca0:	146b0513 	strbtne	r0, [fp], #-1299	; 0xfffffaed
    7ca4:	05172805 	ldreq	r2, [r7, #-2053]	; 0xfffff7fb
    7ca8:	2105160d 	tstcs	r5, sp, lsl #12
    7cac:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
    7cb0:	0521060d 	streq	r0, [r1, #-1549]!	; 0xfffff9f3
    7cb4:	0501063f 	streq	r0, [r1, #-1599]	; 0xfffff9c1
    7cb8:	0521060d 	streq	r0, [r1, #-1549]!	; 0xfffff9f3
    7cbc:	05010639 	streq	r0, [r1, #-1593]	; 0xfffff9c7
    7cc0:	0521060d 	streq	r0, [r1, #-1549]!	; 0xfffff9f3
    7cc4:	05010639 	streq	r0, [r1, #-1593]	; 0xfffff9c7
    7cc8:	0522060d 	streq	r0, [r2, #-1549]!	; 0xfffff9f3
    7ccc:	2e010617 	mcrcs	6, 0, r0, cr1, cr7, {0}
    7cd0:	06580520 	ldrbeq	r0, [r8], -r0, lsr #10
    7cd4:	133a053e 	teqne	sl, #260046848	; 0xf800000
    7cd8:	05140d05 	ldreq	r0, [r4, #-3333]	; 0xfffff2fb
    7cdc:	2e130609 	cfmsub32cs	mvax0, mvfx0, mvfx3, mvfx9
    7ce0:	01000202 	tsteq	r0, r2, lsl #4
    7ce4:	00050501 	andeq	r0, r5, r1, lsl #10
    7ce8:	00000205 	andeq	r0, r0, r5, lsl #4
    7cec:	b2030000 	andlt	r0, r3, #0
    7cf0:	0905010a 	stmdbeq	r5, {r1, r3, r8}
    7cf4:	06150513 			; <UNDEFINED> instruction: 0x06150513
    7cf8:	06090501 	streq	r0, [r9], -r1, lsl #10
    7cfc:	061a053d 			; <UNDEFINED> instruction: 0x061a053d
    7d00:	2f050501 	svccs	0x00050501
    7d04:	01000502 	tsteq	r0, r2, lsl #10
    7d08:	00074d01 	andeq	r4, r7, r1, lsl #26
    7d0c:	2a000300 	bcs	8914 <__HEAP_SIZE+0x7914>
    7d10:	02000002 	andeq	r0, r0, #2
    7d14:	0d0efb01 	vstreq	d15, [lr, #-4]
    7d18:	01010100 	mrseq	r0, (UNDEF: 17)
    7d1c:	00000001 	andeq	r0, r0, r1
    7d20:	01000001 	tsteq	r0, r1
    7d24:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    7d28:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    7d2c:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    7d30:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    7d34:	6572462f 	ldrbvs	r4, [r2, #-1583]!	; 0xfffff9d1
    7d38:	4f545265 	svcmi	0x00545265
    7d3c:	6f702f53 	svcvs	0x00702f53
    7d40:	62617472 	rsbvs	r7, r1, #1912602624	; 0x72000000
    7d44:	4d2f656c 	cfstr32mi	mvfx6, [pc, #-432]!	; 7b9c <__HEAP_SIZE+0x6b9c>
    7d48:	614d6d65 	cmpvs	sp, r5, ror #26
    7d4c:	6300676e 	movwvs	r6, #1902	; 0x76e
    7d50:	73755c3a 	cmnvc	r5, #14848	; 0x3a00
    7d54:	5c737265 	lfmpl	f7, 2, [r3], #-404	; 0xfffffe6c
    7d58:	6f646978 	svcvs	0x00646978
    7d5c:	72705c6e 	rsbsvc	r5, r0, #28160	; 0x6e00
    7d60:	6172676f 	cmnvs	r2, pc, ror #14
    7d64:	72615c6d 	rsbvc	r5, r1, #27904	; 0x6d00
    7d68:	63675f6d 	cmnvs	r7, #436	; 0x1b4
    7d6c:	63675c63 	cmnvs	r7, #25344	; 0x6300
    7d70:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
    7d74:	6f6e2d6d 	svcvs	0x006e2d6d
    7d78:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    7d7c:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
    7d80:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
    7d84:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
    7d88:	30312e31 	eorscc	r2, r1, r1, lsr lr
    7d8c:	62696c5c 	rsbvs	r6, r9, #92, 24	; 0x5c00
    7d90:	6363675c 	cmnvs	r3, #92, 14	; 0x1700000
    7d94:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    7d98:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    7d9c:	61652d65 	cmnvs	r5, r5, ror #26
    7da0:	315c6962 	cmpcc	ip, r2, ror #18
    7da4:	2e332e30 	mrccs	14, 1, r2, cr3, cr0, {1}
    7da8:	6e695c31 	mcrvs	12, 3, r5, cr9, cr1, {1}
    7dac:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    7db0:	3a630065 	bcc	18c7f4c <__RAM_SIZE+0x17c7f4c>
    7db4:	6573755c 	ldrbvs	r7, [r3, #-1372]!	; 0xfffffaa4
    7db8:	785c7372 	ldmdavc	ip, {r1, r4, r5, r6, r8, r9, ip, sp, lr}^
    7dbc:	6e6f6469 	cdpvs	4, 6, cr6, cr15, cr9, {3}
    7dc0:	6f72705c 	svcvs	0x0072705c
    7dc4:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
    7dc8:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    7dcc:	6363675f 	cmnvs	r3, #24903680	; 0x17c0000
    7dd0:	6363675c 	cmnvs	r3, #92, 14	; 0x1700000
    7dd4:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
    7dd8:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    7ddc:	61652d65 	cmnvs	r5, r5, ror #26
    7de0:	312d6962 			; <UNDEFINED> instruction: 0x312d6962
    7de4:	2d332e30 	ldccs	14, cr2, [r3, #-192]!	; 0xffffff40
    7de8:	31323032 	teqcc	r2, r2, lsr r0
    7dec:	5c30312e 	ldfpls	f3, [r0], #-184	; 0xffffff48
    7df0:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    7df4:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    7df8:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    7dfc:	6e695c69 	cdpvs	12, 6, cr5, cr9, cr9, {3}
    7e00:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    7e04:	616d5c65 	cmnvs	sp, r5, ror #24
    7e08:	6e696863 	cdpvs	8, 6, cr6, cr9, cr3, {3}
    7e0c:	3a630065 	bcc	18c7fa8 <__RAM_SIZE+0x17c7fa8>
    7e10:	6573755c 	ldrbvs	r7, [r3, #-1372]!	; 0xfffffaa4
    7e14:	785c7372 	ldmdavc	ip, {r1, r4, r5, r6, r8, r9, ip, sp, lr}^
    7e18:	6e6f6469 	cdpvs	4, 6, cr6, cr15, cr9, {3}
    7e1c:	6f72705c 	svcvs	0x0072705c
    7e20:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
    7e24:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    7e28:	6363675f 	cmnvs	r3, #24903680	; 0x17c0000
    7e2c:	6363675c 	cmnvs	r3, #92, 14	; 0x1700000
    7e30:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
    7e34:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    7e38:	61652d65 	cmnvs	r5, r5, ror #26
    7e3c:	312d6962 			; <UNDEFINED> instruction: 0x312d6962
    7e40:	2d332e30 	ldccs	14, cr2, [r3, #-192]!	; 0xffffff40
    7e44:	31323032 	teqcc	r2, r2, lsr r0
    7e48:	5c30312e 	ldfpls	f3, [r0], #-184	; 0xffffff48
    7e4c:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    7e50:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    7e54:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    7e58:	6e695c69 	cdpvs	12, 6, cr5, cr9, cr9, {3}
    7e5c:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    7e60:	79735c65 	ldmdbvc	r3!, {r0, r2, r5, r6, sl, fp, ip, lr}^
    7e64:	2e2e0073 	mcrcs	0, 1, r0, cr14, cr3, {3}
    7e68:	2f2e2e2f 	svccs	0x002e2e2f
    7e6c:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 7dbc <__HEAP_SIZE+0x6dbc>
    7e70:	74726269 	ldrbtvc	r6, [r2], #-617	; 0xfffffd97
    7e74:	462f736f 	strtmi	r7, [pc], -pc, ror #6
    7e78:	52656572 	rsbpl	r6, r5, #478150656	; 0x1c800000
    7e7c:	2f534f54 	svccs	0x00534f54
    7e80:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
    7e84:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
    7e88:	4343472f 	movtmi	r4, #14127	; 0x372f
    7e8c:	4d52412f 	ldfmie	f4, [r2, #-188]	; 0xffffff44
    7e90:	334d435f 	movtcc	r4, #54111	; 0xd35f
    7e94:	544e5f33 	strbpl	r5, [lr], #-3891	; 0xfffff0cd
    7e98:	6f6e2f5a 	svcvs	0x006e2f5a
    7e9c:	65735f6e 	ldrbvs	r5, [r3, #-3950]!	; 0xfffff092
    7ea0:	65727563 	ldrbvs	r7, [r2, #-1379]!	; 0xfffffa9d
    7ea4:	2f2e2e00 	svccs	0x002e2e00
    7ea8:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    7eac:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    7eb0:	6f747262 	svcvs	0x00747262
    7eb4:	72462f73 	subvc	r2, r6, #460	; 0x1cc
    7eb8:	54526565 	ldrbpl	r6, [r2], #-1381	; 0xfffffa9b
    7ebc:	692f534f 	stmdbvs	pc!, {r0, r1, r2, r3, r6, r8, r9, ip, lr}	; <UNPREDICTABLE>
    7ec0:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    7ec4:	00006564 	andeq	r6, r0, r4, ror #10
    7ec8:	70616568 	rsbvc	r6, r1, r8, ror #10
    7ecc:	632e345f 			; <UNDEFINED> instruction: 0x632e345f
    7ed0:	00000100 	andeq	r0, r0, r0, lsl #2
    7ed4:	64647473 	strbtvs	r7, [r4], #-1139	; 0xfffffb8d
    7ed8:	682e6665 	stmdavs	lr!, {r0, r2, r5, r6, r9, sl, sp, lr}
    7edc:	00000200 	andeq	r0, r0, r0, lsl #4
    7ee0:	6665645f 			; <UNDEFINED> instruction: 0x6665645f
    7ee4:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
    7ee8:	7079745f 	rsbsvc	r7, r9, pc, asr r4
    7eec:	682e7365 	stmdavs	lr!, {r0, r2, r5, r6, r8, r9, ip, sp, lr}
    7ef0:	00000300 	andeq	r0, r0, r0, lsl #6
    7ef4:	6474735f 	ldrbtvs	r7, [r4], #-863	; 0xfffffca1
    7ef8:	2e746e69 	cdpcs	14, 7, cr6, cr4, cr9, {3}
    7efc:	00040068 	andeq	r0, r4, r8, rrx
    7f00:	726f7000 	rsbvc	r7, pc, #0
    7f04:	63616d74 	cmnvs	r1, #116, 26	; 0x1d00
    7f08:	6f636f72 	svcvs	0x00636f72
    7f0c:	6e6f6d6d 	cdpvs	13, 6, cr6, cr15, cr13, {3}
    7f10:	0500682e 	streq	r6, [r0, #-2094]	; 0xfffff7d2
    7f14:	6f700000 	svcvs	0x00700000
    7f18:	62617472 	rsbvs	r7, r1, #1912602624	; 0x72000000
    7f1c:	682e656c 	stmdavs	lr!, {r2, r3, r5, r6, r8, sl, sp, lr}
    7f20:	00000600 	andeq	r0, r0, r0, lsl #12
    7f24:	6b736174 	blvs	1ce04fc <__RAM_SIZE+0x1be04fc>
    7f28:	0600682e 	streq	r6, [r0], -lr, lsr #16
    7f2c:	623c0000 	eorsvs	r0, ip, #0
    7f30:	746c6975 	strbtvc	r6, [ip], #-2421	; 0xfffff68b
    7f34:	3e6e692d 	vmulcc.f16	s13, s28, s27	; <UNPREDICTABLE>
    7f38:	00000000 	andeq	r0, r0, r0
    7f3c:	00010500 	andeq	r0, r1, r0, lsl #10
    7f40:	33140205 	tstcc	r4, #1342177280	; 0x50000000
    7f44:	bc031000 	stclt	0, cr1, [r3], {-0}
    7f48:	05050103 	streq	r0, [r5, #-259]	; 0xfffffefd
    7f4c:	15131313 	ldrne	r1, [r3, #-787]	; 0xfffffced
    7f50:	01061405 	tsteq	r6, r5, lsl #8
    7f54:	22060505 	andcs	r0, r6, #20971520	; 0x1400000
    7f58:	01060705 	tsteq	r6, r5, lsl #14
    7f5c:	3e060905 	vmlacc.f16	s0, s12, s10	; <UNPREDICTABLE>
    7f60:	01061805 	tsteq	r6, r5, lsl #16
    7f64:	21060905 	tstcs	r6, r5, lsl #18
    7f68:	01061805 	tsteq	r6, r5, lsl #16
    7f6c:	2f060905 	svccs	0x00060905
    7f70:	01061805 	tsteq	r6, r5, lsl #16
    7f74:	0605053b 			; <UNDEFINED> instruction: 0x0605053b
    7f78:	05200c03 	streq	r0, [r0, #-3075]!	; 0xfffff3fd
    7f7c:	0501061c 	streq	r0, [r1, #-1564]	; 0xfffff9e4
    7f80:	052f0605 	streq	r0, [pc, #-1541]!	; 7983 <__HEAP_SIZE+0x6983>
    7f84:	05010617 	streq	r0, [r1, #-1559]	; 0xfffff9e9
    7f88:	05320605 	ldreq	r0, [r2, #-1541]!	; 0xfffff9fb
    7f8c:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
    7f90:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
    7f94:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
    7f98:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
    7f9c:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
    7fa0:	052f0605 	streq	r0, [pc, #-1541]!	; 79a3 <__HEAP_SIZE+0x69a3>
    7fa4:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
    7fa8:	052f0605 	streq	r0, [pc, #-1541]!	; 79ab <__HEAP_SIZE+0x69ab>
    7fac:	05010617 	streq	r0, [r1, #-1559]	; 0xfffff9e9
    7fb0:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
    7fb4:	0501061c 	streq	r0, [r1, #-1564]	; 0xfffff9e4
    7fb8:	13240605 			; <UNDEFINED> instruction: 0x13240605
    7fbc:	01063e05 	tsteq	r6, r5, lsl #28
    7fc0:	05202205 	streq	r2, [r0, #-517]!	; 0xfffffdfb
    7fc4:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
    7fc8:	05010627 	streq	r0, [r1, #-1575]	; 0xfffff9d9
    7fcc:	05230605 	streq	r0, [r3, #-1541]!	; 0xfffff9fb
    7fd0:	20010624 	andcs	r0, r1, r4, lsr #12
    7fd4:	21060505 	tstcs	r6, r5, lsl #10
    7fd8:	01061905 	tsteq	r6, r5, lsl #18
    7fdc:	052f0105 	streq	r0, [pc, #-261]!	; 7edf <__HEAP_SIZE+0x6edf>
    7fe0:	2057030c 	subscs	r0, r7, ip, lsl #6
    7fe4:	01000d02 	tsteq	r0, r2, lsl #26
    7fe8:	00010501 	andeq	r0, r1, r1, lsl #10
    7fec:	336c0205 	cmncc	ip, #1342177280	; 0x50000000
    7ff0:	ec031000 	stc	0, cr1, [r3], {-0}
    7ff4:	05050103 	streq	r0, [r5, #-259]	; 0xfffffefd
    7ff8:	05161313 	ldreq	r1, [r6, #-787]	; 0xfffffced
    7ffc:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    8000:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    8004:	05200601 	streq	r0, [r0, #-1537]!	; 0xfffff9ff
    8008:	04020005 	streq	r0, [r2], #-5
    800c:	062e0601 	strteq	r0, [lr], -r1, lsl #12
    8010:	14310533 	ldrtne	r0, [r1], #-1331	; 0xfffffacd
    8014:	14170505 	ldrne	r0, [r7], #-1285	; 0xfffffafb
    8018:	01061b05 	tsteq	r6, r5, lsl #22
    801c:	05200f05 	streq	r0, [r0, #-3845]!	; 0xfffff0fb
    8020:	21052e07 	tstcs	r5, r7, lsl #28
    8024:	05053506 	streq	r3, [r5, #-1286]	; 0xfffffafa
    8028:	20051417 	andcs	r1, r5, r7, lsl r4
    802c:	0f050106 	svceq	0x00050106
    8030:	2e070520 	cfsh32cs	mvfx0, mvfx7, #16
    8034:	03060905 	movweq	r0, #26885	; 0x6905
    8038:	2a052e0f 	bcs	15387c <__RAM_SIZE+0x5387c>
    803c:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    8040:	07052706 	streq	r2, [r5, -r6, lsl #14]
    8044:	09050106 	stmdbeq	r5, {r1, r2, r8}
    8048:	25053006 	strcs	r3, [r5, #-6]
    804c:	21050106 	tstcs	r5, r6, lsl #2
    8050:	09052406 	stmdbeq	r5, {r1, r2, sl, sp}
    8054:	05205803 	streq	r5, [r0, #-2051]!	; 0xfffff7fd
    8058:	05010632 	streq	r0, [r1, #-1586]	; 0xfffff9ce
    805c:	09052020 	stmdbeq	r5, {r5, sp}
    8060:	19052f06 	stmdbne	r5, {r1, r2, r8, r9, sl, fp, sp}
    8064:	01050106 	tsteq	r5, r6, lsl #2
    8068:	052e6903 	streq	r6, [lr, #-2307]!	; 0xfffff6fd
    806c:	24030609 	strcs	r0, [r3], #-1545	; 0xfffff9f7
    8070:	06460520 	strbeq	r0, [r6], -r0, lsr #10
    8074:	2e0b0501 	cfsh32cs	mvfx0, mvfx11, #1
    8078:	31060d05 	tstcc	r6, r5, lsl #26
    807c:	01066405 	tsteq	r6, r5, lsl #8
    8080:	05202905 	streq	r2, [r0, #-2309]!	; 0xfffff6fb
    8084:	052f060d 	streq	r0, [pc, #-1549]!	; 7a7f <__HEAP_SIZE+0x6a7f>
    8088:	05010630 	streq	r0, [r1, #-1584]	; 0xfffff9d0
    808c:	2e052068 	cdpcs	0, 0, cr2, cr5, cr8, {3}
    8090:	06050520 	streq	r0, [r5], -r0, lsr #10
    8094:	05201003 	streq	r1, [r0, #-3]!
    8098:	05010607 	streq	r0, [r1, #-1543]	; 0xfffff9f9
    809c:	05300609 	ldreq	r0, [r0, #-1545]!	; 0xfffff9f7
    80a0:	05010625 	streq	r0, [r1, #-1573]	; 0xfffff9db
    80a4:	05240621 	streq	r0, [r4, #-1569]!	; 0xfffff9df
    80a8:	05140601 	ldreq	r0, [r4, #-1537]	; 0xfffff9ff
    80ac:	6c03060d 	stcvs	6, cr0, [r3], {13}
    80b0:	062e053c 			; <UNDEFINED> instruction: 0x062e053c
    80b4:	06022e01 	streq	r2, [r2], -r1, lsl #28
    80b8:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    80bc:	02050001 	andeq	r0, r5, #1
    80c0:	100033d0 	ldrdne	r3, [r0], -r0
    80c4:	0101ad03 	tsteq	r1, r3, lsl #26
    80c8:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    80cc:	13132106 	tstne	r3, #-2147483647	; 0x80000001
    80d0:	05141313 	ldreq	r1, [r4, #-787]	; 0xfffffced
    80d4:	05010607 	streq	r0, [r1, #-1543]	; 0xfffff9f9
    80d8:	05320609 	ldreq	r0, [r2, #-1545]!	; 0xfffff9f7
    80dc:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
    80e0:	053e060d 	ldreq	r0, [lr, #-1549]!	; 0xfffff9f3
    80e4:	05010619 	streq	r0, [r1, #-1561]	; 0xfffff9e7
    80e8:	0524060d 	streq	r0, [r4, #-1549]!	; 0xfffff9f3
    80ec:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    80f0:	053f0611 	ldreq	r0, [pc, #-1553]!	; 7ae7 <__HEAP_SIZE+0x6ae7>
    80f4:	05010629 	streq	r0, [r1, #-1577]	; 0xfffff9d7
    80f8:	05300611 	ldreq	r0, [r0, #-1553]!	; 0xfffff9ef
    80fc:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    8100:	15052013 	strne	r2, [r5, #-19]	; 0xffffffed
    8104:	21053006 	tstcs	r5, r6
    8108:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    810c:	200e0319 	andcs	r0, lr, r9, lsl r3
    8110:	25062105 	strcs	r2, [r6, #-261]	; 0xfffffefb
    8114:	05150505 	ldreq	r0, [r5, #-1285]	; 0xfffffafb
    8118:	13053209 	movwne	r3, #21001	; 0x5209
    811c:	0b050106 	bleq	14853c <__RAM_SIZE+0x4853c>
    8120:	0625052e 	strteq	r0, [r5], -lr, lsr #10
    8124:	19090526 	stmdbne	r9, {r1, r2, r5, r8, sl}
    8128:	01060b05 	tsteq	r6, r5, lsl #22
    812c:	30060d05 	andcc	r0, r6, r5, lsl #26
    8130:	01060f05 	tsteq	r6, r5, lsl #30
    8134:	02003605 	andeq	r3, r0, #5242880	; 0x500000
    8138:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
    813c:	04020025 	streq	r0, [r2], #-37	; 0xffffffdb
    8140:	11052e01 	tstne	r5, r1, lsl #28
    8144:	05133206 	ldreq	r3, [r3, #-518]	; 0xfffffdfa
    8148:	05010619 	streq	r0, [r1, #-1561]	; 0xfffff9e7
    814c:	052f0636 	streq	r0, [pc, #-1590]!	; 7b1e <__HEAP_SIZE+0x6b1e>
    8150:	16051411 			; <UNDEFINED> instruction: 0x16051411
    8154:	21050106 	tstcs	r5, r6, lsl #2
    8158:	20205303 	eorcs	r5, r0, r3, lsl #6
    815c:	03060d05 	movweq	r0, #27909	; 0x6d05
    8160:	25052018 	strcs	r2, [r5, #-24]	; 0xffffffe8
    8164:	3c170306 	ldccc	3, cr0, [r7], {6}
    8168:	05211d05 	streq	r1, [r1, #-3333]!	; 0xfffff2fb
    816c:	0521063a 	streq	r0, [r1, #-1594]!	; 0xfffff9c6
    8170:	21050e16 	tstcs	r5, r6, lsl lr
    8174:	16050106 	strne	r0, [r5], -r6, lsl #2
    8178:	004a0520 	subeq	r0, sl, r0, lsr #10
    817c:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    8180:	02003e05 	andeq	r3, r0, #5, 28	; 0x50
    8184:	05200104 	streq	r0, [r0, #-260]!	; 0xfffffefc
    8188:	09030611 	stmdbeq	r3, {r0, r4, r9, sl}
    818c:	061d052e 	ldreq	r0, [sp], -lr, lsr #10
    8190:	2e130501 	cfmul32cs	mvfx0, mvfx3, mvfx1
    8194:	32061505 	andcc	r1, r6, #20971520	; 0x1400000
    8198:	01063d05 	tsteq	r6, r5, lsl #26
    819c:	05201e05 	streq	r1, [r0, #-3589]!	; 0xfffff1fb
    81a0:	0521063b 	streq	r0, [r1, #-1595]!	; 0xfffff9c5
    81a4:	3f051615 	svccc	0x00051615
    81a8:	36050106 	strcc	r0, [r5], -r6, lsl #2
    81ac:	06690520 	strbteq	r0, [r9], -r0, lsr #10
    81b0:	14150524 	ldrne	r0, [r5], #-1316	; 0xfffffadc
    81b4:	01062205 	tsteq	r6, r5, lsl #4
    81b8:	05202f05 	streq	r2, [r0, #-3845]!	; 0xfffff0fb
    81bc:	19052017 	stmdbne	r5, {r0, r1, r2, r4, sp}
    81c0:	28053406 	stmdacs	r5, {r1, r2, sl, ip, sp}
    81c4:	69050106 	stmdbvs	r5, {r1, r2, r8}
    81c8:	19052106 	stmdbne	r5, {r1, r2, r8, sp}
    81cc:	06340516 			; <UNDEFINED> instruction: 0x06340516
    81d0:	06190501 	ldreq	r0, [r9], -r1, lsl #10
    81d4:	062d0521 	strteq	r0, [sp], -r1, lsr #10
    81d8:	06190501 	ldreq	r0, [r9], -r1, lsl #10
    81dc:	064a0523 	strbeq	r0, [sl], -r3, lsr #10
    81e0:	20390501 	eorscs	r0, r9, r1, lsl #10
    81e4:	21061905 	tstcs	r6, r5, lsl #18
    81e8:	01063a05 	tsteq	r6, r5, lsl #20
    81ec:	24063105 	strcs	r3, [r6], #-261	; 0xfffffefb
    81f0:	05151505 	ldreq	r1, [r5, #-1285]	; 0xfffffafb
    81f4:	05010633 	streq	r0, [r1, #-1587]	; 0xfffff9cd
    81f8:	15052029 	strne	r2, [r5, #-41]	; 0xffffffd7
    81fc:	2d053e06 	stccs	14, cr3, [r5, #-24]	; 0xffffffe8
    8200:	17050106 	strne	r0, [r5, -r6, lsl #2]
    8204:	0619052e 	ldreq	r0, [r9], -lr, lsr #10
    8208:	06380530 			; <UNDEFINED> instruction: 0x06380530
    820c:	06310501 	ldrteq	r0, [r1], -r1, lsl #10
    8210:	17150532 			; <UNDEFINED> instruction: 0x17150532
    8214:	062e053d 			; <UNDEFINED> instruction: 0x062e053d
    8218:	06150501 	ldreq	r0, [r5], -r1, lsl #10
    821c:	0633052f 	ldrteq	r0, [r3], -pc, lsr #10
    8220:	25052e01 	strcs	r2, [r5, #-3585]	; 0xfffff1ff
    8224:	2e0e0306 	cdpcs	3, 0, cr0, cr14, cr6, {0}
    8228:	05152d05 	ldreq	r2, [r5, #-3333]	; 0xfffff2fb
    822c:	0e051405 	cdpeq	4, 0, cr1, cr5, cr5, {0}
    8230:	5a050106 	bpl	148650 <__RAM_SIZE+0x48650>
    8234:	2e0f0306 	cdpcs	3, 0, cr0, cr15, cr6, {0}
    8238:	05130505 	ldreq	r0, [r3, #-1285]	; 0xfffffafb
    823c:	05130601 	ldreq	r0, [r3, #-1537]	; 0xfffff9ff
    8240:	7ed9030c 	cdpvc	3, 13, cr0, cr9, cr12, {0}
    8244:	0c02662e 	stceq	6, cr6, [r2], {46}	; 0x2e
    8248:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    824c:	02050001 	andeq	r0, r5, #1
    8250:	100034a4 	andne	r3, r0, r4, lsr #9
    8254:	0102dc03 	tsteq	r2, r3, lsl #24
    8258:	13130505 	tstne	r3, #20971520	; 0x1400000
    825c:	06070514 			; <UNDEFINED> instruction: 0x06070514
    8260:	1c010501 	cfstr32ne	mvfx0, [r1], {1}
    8264:	36060905 	strcc	r0, [r6], -r5, lsl #18
    8268:	01060d05 	tsteq	r6, r5, lsl #26
    826c:	31060905 	tstcc	r6, r5, lsl #18
    8270:	05142d05 	ldreq	r2, [r4, #-3333]	; 0xfffff2fb
    8274:	3805133e 	stmdacc	r5, {r1, r2, r3, r4, r5, r8, r9, ip}
    8278:	14090513 	strne	r0, [r9], #-1299	; 0xfffffaed
    827c:	01060d05 	tsteq	r6, r5, lsl #26
    8280:	052e0b05 	streq	r0, [lr, #-2821]!	; 0xfffff4fb
    8284:	0530060d 	ldreq	r0, [r0, #-1549]!	; 0xfffff9f3
    8288:	05010617 	streq	r0, [r1, #-1559]	; 0xfffff9e9
    828c:	01052e0f 	tsteq	r5, pc, lsl #28
    8290:	05202403 	streq	r2, [r0, #-1027]!	; 0xfffffbfd
    8294:	60030611 	andvs	r0, r3, r1, lsl r6
    8298:	4a0c0320 	bmi	308f20 <__RAM_SIZE+0x208f20>
    829c:	05311505 	ldreq	r1, [r1, #-1285]!	; 0xfffffafb
    82a0:	05010632 	streq	r0, [r1, #-1586]	; 0xfffff9ce
    82a4:	38052e29 	stmdacc	r5, {r0, r3, r5, r9, sl, fp, sp}
    82a8:	15054b06 	strne	r4, [r5, #-2822]	; 0xfffff4fa
    82ac:	2d053d13 	stccs	13, cr3, [r5, #-76]	; 0xffffffb4
    82b0:	11050106 	tstne	r5, r6, lsl #2
    82b4:	1a054c06 	bne	15b2d4 <__RAM_SIZE+0x5b2d4>
    82b8:	25050106 	strcs	r0, [r5, #-262]	; 0xfffffefa
    82bc:	2e090306 	cdpcs	3, 0, cr0, cr9, cr6, {0}
    82c0:	15060105 	strne	r0, [r6, #-261]	; 0xfffffefb
    82c4:	00050220 	andeq	r0, r5, r0, lsr #4
    82c8:	01050101 	tsteq	r5, r1, lsl #2
    82cc:	00020500 	andeq	r0, r2, r0, lsl #10
    82d0:	03000000 	movweq	r0, #0
    82d4:	05010397 	streq	r0, [r1, #-919]	; 0xfffffc69
    82d8:	01051305 	tsteq	r5, r5, lsl #6
    82dc:	06021306 	streq	r1, [r2], -r6, lsl #6
    82e0:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    82e4:	02050001 	andeq	r0, r5, #1
    82e8:	00000000 	andeq	r0, r0, r0
    82ec:	01039d03 	tsteq	r3, r3, lsl #26
    82f0:	05130505 	ldreq	r0, [r3, #-1285]	; 0xfffffafb
    82f4:	02130601 	andseq	r0, r3, #1048576	; 0x100000
    82f8:	01010006 	tsteq	r1, r6
    82fc:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    8300:	00000002 	andeq	r0, r0, r2
    8304:	03a30300 			; <UNDEFINED> instruction: 0x03a30300
    8308:	01021401 	tsteq	r2, r1, lsl #8
    830c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    8310:	02050001 	andeq	r0, r5, #1
    8314:	00000000 	andeq	r0, r0, r0
    8318:	0103aa03 	tsteq	r3, r3, lsl #20
    831c:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    8320:	05142106 	ldreq	r2, [r4, #-262]	; 0xfffffefa
    8324:	58010609 	stmdapl	r1, {r0, r3, r9, sl}
    8328:	01040200 	mrseq	r0, R12_usr
    832c:	05220620 	streq	r0, [r2, #-1568]!	; 0xfffff9e0
    8330:	0501060e 	streq	r0, [r1, #-1550]	; 0xfffff9f2
    8334:	055a0609 	ldrbeq	r0, [sl, #-1545]	; 0xfffff9f7
    8338:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
    833c:	0530060d 	ldreq	r0, [r0, #-1549]!	; 0xfffff9f3
    8340:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    8344:	052e4f01 	streq	r4, [lr, #-3841]!	; 0xfffff0ff
    8348:	2e73030c 	cdpcs	3, 7, cr0, cr3, cr12, {0}
    834c:	03060505 	movweq	r0, #25861	; 0x6505
    8350:	0c05200c 	stceq	0, cr2, [r5], {12}
    8354:	01020106 	tsteq	r2, r6, lsl #2
    8358:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    835c:	02050001 	andeq	r0, r5, #1
    8360:	00000000 	andeq	r0, r0, r0
    8364:	0104b003 	tsteq	r4, r3
    8368:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    836c:	14132f06 	ldrne	r2, [r3], #-3846	; 0xfffff0fa
    8370:	05300905 	ldreq	r0, [r0, #-2309]!	; 0xfffff6fb
    8374:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    8378:	05320609 	ldreq	r0, [r2, #-1545]!	; 0xfffff9f7
    837c:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
    8380:	20780327 	rsbscs	r0, r8, r7, lsr #6
    8384:	052e1905 	streq	r1, [lr, #-2309]!	; 0xfffff6fb
    8388:	2705200c 	strcs	r2, [r5, -ip]
    838c:	2e19052e 	cfmul64cs	mvdx0, mvdx9, mvdx14
    8390:	05200c05 	streq	r0, [r0, #-3077]!	; 0xfffff3fb
    8394:	20030605 	andcs	r0, r3, r5, lsl #12
    8398:	060e0520 	streq	r0, [lr], -r0, lsr #10
    839c:	06050501 	streq	r0, [r5], -r1, lsl #10
    83a0:	06310530 			; <UNDEFINED> instruction: 0x06310530
    83a4:	06050501 	streq	r0, [r5], -r1, lsl #10
    83a8:	06320521 	ldrteq	r0, [r2], -r1, lsr #10
    83ac:	06050501 	streq	r0, [r5], -r1, lsl #10
    83b0:	06260521 	strteq	r0, [r6], -r1, lsr #10
    83b4:	06050501 	streq	r0, [r5], -r1, lsl #10
    83b8:	30090522 	andcc	r0, r9, r2, lsr #10
    83bc:	01063105 	tsteq	r6, r5, lsl #2
    83c0:	3d060905 	vstrcc.16	s0, [r6, #-10]	; <UNPREDICTABLE>
    83c4:	01063505 	tsteq	r6, r5, lsl #10
    83c8:	3d060905 	vstrcc.16	s0, [r6, #-10]	; <UNPREDICTABLE>
    83cc:	01062f05 	tsteq	r6, r5, lsl #30
    83d0:	3d060905 	vstrcc.16	s0, [r6, #-10]	; <UNPREDICTABLE>
    83d4:	01063505 	tsteq	r6, r5, lsl #10
    83d8:	3e060505 	cfsh32cc	mvfx0, mvfx6, #5
    83dc:	2f060105 	svccs	0x00060105
    83e0:	03061105 	movweq	r1, #24837	; 0x6105
    83e4:	1905206e 	stmdbne	r5, {r1, r2, r3, r5, r6, sp}
    83e8:	12050106 	andne	r0, r5, #-2147483647	; 0x80000001
    83ec:	206e0306 	rsbcs	r0, lr, r6, lsl #6
    83f0:	01061c05 	tsteq	r6, r5, lsl #24
    83f4:	052e1205 	streq	r1, [lr, #-517]!	; 0xfffffdfb
    83f8:	05320611 	ldreq	r0, [r2, #-1553]!	; 0xfffff9ef
    83fc:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    8400:	05220611 	streq	r0, [r2, #-1553]!	; 0xfffff9ef
    8404:	0501061c 	streq	r0, [r1, #-1564]	; 0xfffff9e4
    8408:	1e052013 	mcrne	0, 0, r2, cr5, cr3, {0}
    840c:	06110530 			; <UNDEFINED> instruction: 0x06110530
    8410:	06130523 	ldreq	r0, [r3], -r3, lsr #10
    8414:	301e0501 	andscc	r0, lr, r1, lsl #10
    8418:	000d0220 	andeq	r0, sp, r0, lsr #4
    841c:	01050101 	tsteq	r5, r1, lsl #2
    8420:	00020500 	andeq	r0, r2, r0, lsl #10
    8424:	03000000 	movweq	r0, #0
    8428:	050104e9 	streq	r0, [r1, #-1257]	; 0xfffffb17
    842c:	0b051305 	bleq	14d048 <__RAM_SIZE+0x4d048>
    8430:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    8434:	19053e06 	stmdbne	r5, {r1, r2, r9, sl, fp, ip, sp}
    8438:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    843c:	24052f06 	strcs	r2, [r5], #-3846	; 0xfffff0fa
    8440:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    8444:	24052f06 	strcs	r2, [r5], #-3846	; 0xfffff0fa
    8448:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    844c:	1e052f06 	cdpne	15, 0, cr2, cr5, cr6, {0}
    8450:	01050106 	tsteq	r5, r6, lsl #2
    8454:	000b022f 	andeq	r0, fp, pc, lsr #4
    8458:	05f20101 	ldrbeq	r0, [r2, #257]!	; 0x101
    845c:	00030000 	andeq	r0, r3, r0
    8460:	0000018d 	andeq	r0, r0, sp, lsl #3
    8464:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
    8468:	0101000d 	tsteq	r1, sp
    846c:	00000101 	andeq	r0, r0, r1, lsl #2
    8470:	00000100 	andeq	r0, r0, r0, lsl #2
    8474:	2f2e2e01 	svccs	0x002e2e01
    8478:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    847c:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    8480:	6f747262 	svcvs	0x00747262
    8484:	72462f73 	subvc	r2, r6, #460	; 0x1cc
    8488:	54526565 	ldrbpl	r6, [r2], #-1381	; 0xfffffa9b
    848c:	702f534f 	eorvc	r5, pc, pc, asr #6
    8490:	6174726f 	cmnvs	r4, pc, ror #4
    8494:	2f656c62 	svccs	0x00656c62
    8498:	2f434347 	svccs	0x00434347
    849c:	5f4d5241 	svcpl	0x004d5241
    84a0:	33334d43 	teqcc	r3, #4288	; 0x10c0
    84a4:	5a544e5f 	bpl	151be28 <__RAM_SIZE+0x141be28>
    84a8:	6e6f6e2f 	cdpvs	14, 6, cr6, cr15, cr15, {1}
    84ac:	6365735f 	cmnvs	r5, #2080374785	; 0x7c000001
    84b0:	00657275 	rsbeq	r7, r5, r5, ror r2
    84b4:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
    84b8:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    84bc:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
    84c0:	705c6e6f 	subsvc	r6, ip, pc, ror #28
    84c4:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
    84c8:	615c6d61 	cmpvs	ip, r1, ror #26
    84cc:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
    84d0:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
    84d4:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
    84d8:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    84dc:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    84e0:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    84e4:	2e30312d 	rsfcssp	f3, f0, #5.0
    84e8:	30322d33 	eorscc	r2, r2, r3, lsr sp
    84ec:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
    84f0:	72615c30 	rsbvc	r5, r1, #48, 24	; 0x3000
    84f4:	6f6e2d6d 	svcvs	0x006e2d6d
    84f8:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    84fc:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
    8500:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    8504:	5c656475 	cfstrdpl	mvd6, [r5], #-468	; 0xfffffe2c
    8508:	6863616d 	stmdavs	r3!, {r0, r2, r3, r5, r6, r8, sp, lr}^
    850c:	00656e69 	rsbeq	r6, r5, r9, ror #28
    8510:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
    8514:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    8518:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
    851c:	705c6e6f 	subsvc	r6, ip, pc, ror #28
    8520:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
    8524:	615c6d61 	cmpvs	ip, r1, ror #26
    8528:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
    852c:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
    8530:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
    8534:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    8538:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    853c:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    8540:	2e30312d 	rsfcssp	f3, f0, #5.0
    8544:	30322d33 	eorscc	r2, r2, r3, lsr sp
    8548:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
    854c:	72615c30 	rsbvc	r5, r1, #48, 24	; 0x3000
    8550:	6f6e2d6d 	svcvs	0x006e2d6d
    8554:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    8558:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
    855c:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    8560:	5c656475 	cfstrdpl	mvd6, [r5], #-468	; 0xfffffe2c
    8564:	00737973 	rsbseq	r7, r3, r3, ror r9
    8568:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    856c:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    8570:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    8574:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    8578:	6572462f 	ldrbvs	r4, [r2, #-1583]!	; 0xfffff9d1
    857c:	4f545265 	svcmi	0x00545265
    8580:	6e692f53 	mcrvs	15, 3, r2, cr9, cr3, {2}
    8584:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    8588:	70000065 	andvc	r0, r0, r5, rrx
    858c:	2e74726f 	cdpcs	2, 7, cr7, cr4, cr15, {3}
    8590:	00010063 	andeq	r0, r1, r3, rrx
    8594:	65645f00 	strbvs	r5, [r4, #-3840]!	; 0xfffff100
    8598:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
    859c:	79745f74 	ldmdbvc	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    85a0:	2e736570 	mrccs	5, 3, r6, cr3, cr0, {3}
    85a4:	00020068 	andeq	r0, r2, r8, rrx
    85a8:	74735f00 	ldrbtvc	r5, [r3], #-3840	; 0xfffff100
    85ac:	746e6964 	strbtvc	r6, [lr], #-2404	; 0xfffff69c
    85b0:	0300682e 	movweq	r6, #2094	; 0x82e
    85b4:	72700000 	rsbsvc	r0, r0, #0
    85b8:	65646a6f 	strbvs	r6, [r4, #-2671]!	; 0xfffff591
    85bc:	682e7366 	stmdavs	lr!, {r1, r2, r5, r6, r8, r9, ip, sp, lr}
    85c0:	00000400 	andeq	r0, r0, r0, lsl #8
    85c4:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
    85c8:	7263616d 	rsbvc	r6, r3, #1073741851	; 0x4000001b
    85cc:	6d6f636f 	stclvs	3, cr6, [pc, #-444]!	; 8418 <__HEAP_SIZE+0x7418>
    85d0:	2e6e6f6d 	cdpcs	15, 6, cr6, cr14, cr13, {3}
    85d4:	00010068 	andeq	r0, r1, r8, rrx
    85d8:	726f7000 	rsbvc	r7, pc, #0
    85dc:	6d736174 	ldfvse	f6, [r3, #-464]!	; 0xfffffe30
    85e0:	0100682e 	tsteq	r0, lr, lsr #16
    85e4:	61740000 	cmnvs	r4, r0
    85e8:	682e6b73 	stmdavs	lr!, {r0, r1, r4, r5, r6, r8, r9, fp, sp, lr}
    85ec:	00000400 	andeq	r0, r0, r0, lsl #8
    85f0:	00010500 	andeq	r0, r1, r0, lsl #10
    85f4:	34f40205 	ldrbtcc	r0, [r4], #517	; 0x205
    85f8:	a6031000 	strge	r1, [r3], -r0
    85fc:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    8600:	0617052f 	ldreq	r0, [r7], -pc, lsr #10
    8604:	062e0501 	strteq	r0, [lr], -r1, lsl #10
    8608:	13050535 	movwne	r0, #21813	; 0x5535
    860c:	04020030 	streq	r0, [r2], #-48	; 0xffffffd0
    8610:	01090301 	tsteq	r9, r1, lsl #6
    8614:	02000a05 	andeq	r0, r0, #20480	; 0x5000
    8618:	77030104 	strvc	r0, [r3, -r4, lsl #2]
    861c:	00140501 	andseq	r0, r4, r1, lsl #10
    8620:	06010402 	streq	r0, [r1], -r2, lsl #8
    8624:	000a0501 	andeq	r0, sl, r1, lsl #10
    8628:	20010402 	andcs	r0, r1, r2, lsl #8
    862c:	0a030105 	beq	c8a48 <__HEAP_SIZE+0xc7a48>
    8630:	0003022e 	andeq	r0, r3, lr, lsr #4
    8634:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    8638:	0c020500 	cfstr32eq	mvfx0, [r2], {-0}
    863c:	03100035 	tsteq	r0, #53	; 0x35
    8640:	060104af 	streq	r0, [r1], -pc, lsr #9
    8644:	06090501 	streq	r0, [r9], -r1, lsl #10
    8648:	05151321 	ldreq	r1, [r5, #-801]	; 0xfffffcdf
    864c:	0501061f 	streq	r0, [r1, #-1567]	; 0xfffff9e1
    8650:	09052e0b 	stmdbeq	r5, {r0, r1, r3, r9, sl, fp, sp}
    8654:	2f214306 	svccs	0x00214306
    8658:	060d0532 			; <UNDEFINED> instruction: 0x060d0532
    865c:	2e0b0501 	cfsh32cs	mvfx0, mvfx11, #1
    8660:	24060d05 	strcs	r0, [r6], #-3333	; 0xfffff2fb
    8664:	03060505 	movweq	r0, #25861	; 0x6505
    8668:	052001bf 	streq	r0, [r0, #-447]!	; 0xfffffe41
    866c:	c903060d 	stmdbgt	r3, {r0, r2, r3, r9, sl}
    8670:	2705207e 	smlsdxcs	r5, lr, r0, r2
    8674:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    8678:	25055106 	strcs	r5, [r5, #-262]	; 0xfffffefa
    867c:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    8680:	0f052206 	svceq	0x00052206
    8684:	11050106 	tstne	r5, r6, lsl #2
    8688:	29052206 	stmdbcs	r5, {r1, r2, r9, sp}
    868c:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    8690:	0903060d 	stmdbeq	r3, {r0, r2, r3, r9, sl}
    8694:	06670520 	strbteq	r0, [r7], -r0, lsr #10
    8698:	20510501 	subscs	r0, r1, r1, lsl #10
    869c:	052e1b05 	streq	r1, [lr, #-2821]!	; 0xfffff4fb
    86a0:	0530060d 	ldreq	r0, [r0, #-1549]!	; 0xfffff9f3
    86a4:	05010613 	streq	r0, [r1, #-1555]	; 0xfffff9ed
    86a8:	11054a0f 	tstne	r5, pc, lsl #20
    86ac:	27053e06 	strcs	r3, [r5, -r6, lsl #28]
    86b0:	11050106 	tstne	r5, r6, lsl #2
    86b4:	1f056706 	svcne	0x00056706
    86b8:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    86bc:	1f053f06 	svcne	0x00053f06
    86c0:	0f050106 	svceq	0x00050106
    86c4:	0611052e 	ldreq	r0, [r1], -lr, lsr #10
    86c8:	061f0530 			; <UNDEFINED> instruction: 0x061f0530
    86cc:	060d0501 	streq	r0, [sp], -r1, lsl #10
    86d0:	06270524 	strteq	r0, [r7], -r4, lsr #10
    86d4:	060d0501 	streq	r0, [sp], -r1, lsl #10
    86d8:	06300540 	ldrteq	r0, [r0], -r0, asr #10
    86dc:	060d0501 	streq	r0, [sp], -r1, lsl #10
    86e0:	06270531 			; <UNDEFINED> instruction: 0x06270531
    86e4:	060d0501 	streq	r0, [sp], -r1, lsl #10
    86e8:	133e0551 	teqne	lr, #339738624	; 0x14400000
    86ec:	05140d05 	ldreq	r0, [r4, #-3333]	; 0xfffff2fb
    86f0:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    86f4:	2f220611 	svccs	0x00220611
    86f8:	313d0521 	teqcc	sp, r1, lsr #10
    86fc:	21170d05 	tstcs	r7, r5, lsl #26
    8700:	2f21342f 	svccs	0x0021342f
    8704:	052e0903 	streq	r0, [lr, #-2307]!	; 0xfffff6fd
    8708:	05010627 	streq	r0, [r1, #-1575]	; 0xfffff9d9
    870c:	054d060d 	strbeq	r0, [sp, #-1549]	; 0xfffff9f3
    8710:	05010613 	streq	r0, [r1, #-1555]	; 0xfffff9ed
    8714:	1105200f 	tstne	r5, pc
    8718:	05173e06 	ldreq	r3, [r7, #-3590]	; 0xfffff1fa
    871c:	0501064b 	streq	r0, [r1, #-1611]	; 0xfffff9b5
    8720:	5d052e5f 	stcpl	14, cr2, [r5, #-380]	; 0xfffffe84
    8724:	204b053c 	subcs	r0, fp, ip, lsr r5
    8728:	05202705 	streq	r2, [r0, #-1797]!	; 0xfffff8fb
    872c:	05260611 	streq	r0, [r6, #-1553]!	; 0xfffff9ef
    8730:	0501062d 	streq	r0, [r1, #-1581]	; 0xfffff9d3
    8734:	4d052e13 	stcmi	14, cr2, [r5, #-76]	; 0xffffffb4
    8738:	01040200 	mrseq	r0, R12_usr
    873c:	0615052e 	ldreq	r0, [r5], -lr, lsr #10
    8740:	062b0530 			; <UNDEFINED> instruction: 0x062b0530
    8744:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    8748:	062b0523 	strteq	r0, [fp], -r3, lsr #10
    874c:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    8750:	05010641 	streq	r0, [r1, #-1601]	; 0xfffff9bf
    8754:	2d03060d 	stccs	6, cr0, [r3, #-52]	; 0xffffffcc
    8758:	06300501 	ldrteq	r0, [r0], -r1, lsl #10
    875c:	060d0501 	streq	r0, [sp], -r1, lsl #10
    8760:	0627054b 	strteq	r0, [r7], -fp, asr #10
    8764:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    8768:	06450531 			; <UNDEFINED> instruction: 0x06450531
    876c:	3c2b0501 	cfstr32cc	mvfx0, [fp], #-4
    8770:	03060d05 	movweq	r0, #27909	; 0x6d05
    8774:	05312015 	ldreq	r2, [r1, #-21]!	; 0xffffffeb
    8778:	05220605 	streq	r0, [r2, #-1541]!	; 0xfffff9fb
    877c:	be030611 	mcrlt	6, 0, r0, cr3, cr1, {0}
    8780:	2905207f 	stmdbcs	r5, {r0, r1, r2, r3, r4, r5, r6, sp}
    8784:	11050106 	tstne	r5, r6, lsl #2
    8788:	3c120306 	ldccc	3, cr0, [r2], {6}
    878c:	01064405 	tsteq	r6, r5, lsl #8
    8790:	054a2e05 	strbeq	r2, [sl, #-3589]	; 0xfffff1fb
    8794:	05240611 	streq	r0, [r4, #-1553]!	; 0xfffff9ef
    8798:	05010627 	streq	r0, [r1, #-1575]	; 0xfffff9d9
    879c:	05320611 	ldreq	r0, [r2, #-1553]!	; 0xfffff9ef
    87a0:	0501064f 	streq	r0, [r1, #-1615]	; 0xfffff9b1
    87a4:	05202e6b 	streq	r2, [r0, #-3691]!	; 0xfffff195
    87a8:	0220202b 	eoreq	r2, r0, #43	; 0x2b
    87ac:	01010008 	tsteq	r1, r8
    87b0:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    87b4:	00362002 	eorseq	r2, r6, r2
    87b8:	068a0310 	pkhbteq	r0, sl, r0, lsl #6
    87bc:	16090501 	strne	r0, [r9], -r1, lsl #10
    87c0:	01062105 	tsteq	r6, r5, lsl #2
    87c4:	4b060905 	blmi	18abe0 <__RAM_SIZE+0x8abe0>
    87c8:	01062905 	tsteq	r6, r5, lsl #18
    87cc:	4b060905 	blmi	18abe8 <__RAM_SIZE+0x8abe8>
    87d0:	01062405 	tsteq	r6, r5, lsl #8
    87d4:	03060505 	movweq	r0, #25861	; 0x6505
    87d8:	1f053c0c 	svcne	0x00053c0c
    87dc:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    87e0:	28054b06 	stmdacs	r5, {r1, r2, r8, r9, fp, lr}
    87e4:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    87e8:	1f053106 	svcne	0x00053106
    87ec:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    87f0:	1f053d06 	svcne	0x00053d06
    87f4:	01050106 	tsteq	r5, r6, lsl #2
    87f8:	0008022f 	andeq	r0, r8, pc, lsr #4
    87fc:	01050101 	tsteq	r5, r1, lsl #2
    8800:	5c020500 	cfstr32pl	mvfx0, [r2], {-0}
    8804:	03100036 	tsteq	r0, #54	; 0x36
    8808:	050107ce 	streq	r0, [r1, #-1998]	; 0xfffff832
    880c:	1b051405 	blne	14d828 <__RAM_SIZE+0x4d828>
    8810:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    8814:	052f6a06 	streq	r6, [pc, #-2566]!	; 7e16 <__HEAP_SIZE+0x6e16>
    8818:	022f0601 	eoreq	r0, pc, #1048576	; 0x100000
    881c:	01010001 	tsteq	r1, r1
    8820:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    8824:	00367402 	eorseq	r7, r6, r2, lsl #8
    8828:	07da0310 	bfieq	r0, r0, #6, #21
    882c:	21050501 	tstcs	r5, r1, lsl #10
    8830:	0616052f 	ldreq	r0, [r6], -pc, lsr #10
    8834:	06050501 	streq	r0, [r5], -r1, lsl #10
    8838:	01052f4e 	tsteq	r5, lr, asr #30
    883c:	03022f06 	movweq	r2, #12038	; 0x2f06
    8840:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    8844:	02050001 	andeq	r0, r5, #1
    8848:	10003690 	mulne	r0, r0, r6
    884c:	0107e603 	tsteq	r7, r3, lsl #12
    8850:	05212605 	streq	r2, [r1, #-1541]!	; 0xfffff9fb
    8854:	16051305 	strne	r1, [r5], -r5, lsl #6
    8858:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    885c:	1b054c06 	blne	15b87c <__RAM_SIZE+0x5b87c>
    8860:	07050106 	streq	r0, [r5, -r6, lsl #2]
    8864:	24010520 	strcs	r0, [r1], #-1312	; 0xfffffae0
    8868:	1e060905 	vmlane.f16	s0, s12, s10	; <UNPREDICTABLE>
    886c:	3e060105 	adfccs	f0, f6, f5
    8870:	01000302 	tsteq	r0, r2, lsl #6
    8874:	00010501 	andeq	r0, r1, r1, lsl #10
    8878:	36ac0205 	strtcc	r0, [ip], r5, lsl #4
    887c:	f2031000 	vhadd.s8	d1, d3, d0
    8880:	05050107 	streq	r0, [r5, #-263]	; 0xfffffef9
    8884:	16051421 	strne	r1, [r5], -r1, lsr #8
    8888:	15050106 	strne	r0, [r5, #-262]	; 0xfffffefa
    888c:	09053d06 	stmdbeq	r5, {r1, r2, r8, sl, fp, ip, sp}
    8890:	060d0515 			; <UNDEFINED> instruction: 0x060d0515
    8894:	2e0b0501 	cfsh32cs	mvfx0, mvfx11, #1
    8898:	22062905 	andcs	r2, r6, #81920	; 0x14000
    889c:	05140d05 	ldreq	r0, [r4, #-3333]	; 0xfffff2fb
    88a0:	05010623 	streq	r0, [r1, #-1571]	; 0xfffff9dd
    88a4:	056a061c 	strbeq	r0, [sl, #-1564]!	; 0xfffff9e4
    88a8:	01051505 	tsteq	r5, r5, lsl #10
    88ac:	00203d06 	eoreq	r3, r0, r6, lsl #26
    88b0:	01050101 	tsteq	r5, r1, lsl #2
    88b4:	ce020500 	cfsh32gt	mvfx0, mvfx2, #0
    88b8:	03100036 	tsteq	r0, #54	; 0x36
    88bc:	06010889 	streq	r0, [r1], -r9, lsl #17
    88c0:	06050501 	streq	r0, [r5], -r1, lsl #10
    88c4:	03200f03 			; <UNDEFINED> instruction: 0x03200f03
    88c8:	05160109 	ldreq	r0, [r6, #-265]	; 0xfffffef7
    88cc:	0501060a 	streq	r0, [r1, #-1546]	; 0xfffff9f6
    88d0:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
    88d4:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    88d8:	05300605 	ldreq	r0, [r0, #-1541]!	; 0xfffff9fb
    88dc:	db030601 	blle	ca0e8 <__HEAP_SIZE+0xc90e8>
    88e0:	0d052e00 	stceq	14, cr2, [r5, #-0]
    88e4:	20660306 	rsbcs	r0, r6, r6, lsl #6
    88e8:	0324052f 			; <UNDEFINED> instruction: 0x0324052f
    88ec:	01050117 	tsteq	r5, r7, lsl r1
    88f0:	01021406 	tsteq	r2, r6, lsl #8
    88f4:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    88f8:	02050005 	andeq	r0, r5, #5
    88fc:	100036e4 	andne	r3, r0, r4, ror #13
    8900:	010c8503 	tsteq	ip, r3, lsl #10
    8904:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    8908:	201b0306 	andscs	r0, fp, r6, lsl #6
    890c:	061b0513 			; <UNDEFINED> instruction: 0x061b0513
    8910:	060d0501 	streq	r0, [sp], -r1, lsl #10
    8914:	1b05134b 	blne	14d648 <__RAM_SIZE+0x4d648>
    8918:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    891c:	05132f06 	ldreq	r2, [r3, #-3846]	; 0xfffff0fa
    8920:	0501061d 	streq	r0, [r1, #-1565]	; 0xfffff9e3
    8924:	0d05201b 	stceq	0, cr2, [r5, #-108]	; 0xffffff94
    8928:	05132f06 	ldreq	r2, [r3, #-3846]	; 0xfffff0fa
    892c:	0501061b 	streq	r0, [r1, #-1563]	; 0xfffff9e5
    8930:	134b060d 	movtne	r0, #46605	; 0xb60d
    8934:	01061b05 	tsteq	r6, r5, lsl #22
    8938:	4b060d05 	blmi	18bd54 <__RAM_SIZE+0x8bd54>
    893c:	061b0513 			; <UNDEFINED> instruction: 0x061b0513
    8940:	060d0501 	streq	r0, [sp], -r1, lsl #10
    8944:	1b05134b 	blne	14d678 <__RAM_SIZE+0x4d678>
    8948:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    894c:	05134b06 	ldreq	r4, [r3, #-2822]	; 0xfffff4fa
    8950:	0501061b 	streq	r0, [r1, #-1563]	; 0xfffff9e5
    8954:	132f060d 			; <UNDEFINED> instruction: 0x132f060d
    8958:	01061b05 	tsteq	r6, r5, lsl #22
    895c:	060d052e 	streq	r0, [sp], -lr, lsr #10
    8960:	1b05132f 	blne	14d624 <__RAM_SIZE+0x4d624>
    8964:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    8968:	05134b06 	ldreq	r4, [r3, #-2822]	; 0xfffff4fa
    896c:	0501061b 	streq	r0, [r1, #-1563]	; 0xfffff9e5
    8970:	134b060d 	movtne	r0, #46605	; 0xb60d
    8974:	01061b05 	tsteq	r6, r5, lsl #22
    8978:	4b060d05 	blmi	18bd94 <__RAM_SIZE+0x8bd94>
    897c:	061b0513 			; <UNDEFINED> instruction: 0x061b0513
    8980:	060d0501 	streq	r0, [sp], -r1, lsl #10
    8984:	1b05134b 	blne	14d6b8 <__RAM_SIZE+0x4d6b8>
    8988:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    898c:	05134b06 	ldreq	r4, [r3, #-2822]	; 0xfffff4fa
    8990:	0501061b 	streq	r0, [r1, #-1563]	; 0xfffff9e5
    8994:	134b060d 	movtne	r0, #46605	; 0xb60d
    8998:	01061b05 	tsteq	r6, r5, lsl #22
    899c:	4b060d05 	blmi	18bdb8 <__RAM_SIZE+0x8bdb8>
    89a0:	061b0513 			; <UNDEFINED> instruction: 0x061b0513
    89a4:	060d0501 	streq	r0, [sp], -r1, lsl #10
    89a8:	1b05134b 	blne	14d6dc <__RAM_SIZE+0x4d6dc>
    89ac:	09050106 	stmdbeq	r5, {r1, r2, r8}
    89b0:	2e0b0306 	cdpcs	3, 0, cr0, cr11, cr6, {0}
    89b4:	13060505 	movwne	r0, #25861	; 0x6505
    89b8:	00050220 	andeq	r0, r5, r0, lsr #4
    89bc:	01050101 	tsteq	r5, r1, lsl #2
    89c0:	74020500 	strvc	r0, [r2], #-1280	; 0xfffffb00
    89c4:	03100037 	tsteq	r0, #55	; 0x37
    89c8:	05010cd5 	streq	r0, [r1, #-3285]	; 0xfffff32b
    89cc:	200f0309 	andcs	r0, pc, r9, lsl #6
    89d0:	0f034d05 	svceq	0x00034d05
    89d4:	13530501 	cmpne	r3, #4194304	; 0x400000
    89d8:	d0030505 	andle	r0, r3, r5, lsl #10
    89dc:	18050100 	stmdane	r5, {r8}
    89e0:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    89e4:	18058306 	stmdane	r5, {r1, r2, r8, r9, pc}
    89e8:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    89ec:	18056706 	stmdane	r5, {r1, r2, r8, r9, sl, sp, lr}
    89f0:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    89f4:	3c0b0306 	stccc	3, cr0, [fp], {6}
    89f8:	06170531 			; <UNDEFINED> instruction: 0x06170531
    89fc:	06050501 	streq	r0, [r5], -r1, lsl #10
    8a00:	362e0903 	strtcc	r0, [lr], -r3, lsl #18
    8a04:	0105312f 	tsteq	r5, pc, lsr #2
    8a08:	04021306 	streq	r1, [r2], #-774	; 0xfffffcfa
    8a0c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    8a10:	02050001 	andeq	r0, r5, #1
    8a14:	00000000 	andeq	r0, r0, r0
    8a18:	010dee03 	tsteq	sp, r3, lsl #28
    8a1c:	05153005 	ldreq	r3, [r5, #-5]
    8a20:	02130601 	andseq	r0, r3, #1048576	; 0x100000
    8a24:	01010001 	tsteq	r1, r1
    8a28:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    8a2c:	00000002 	andeq	r0, r0, r2
    8a30:	0faf0300 	svceq	0x00af0300
    8a34:	13050501 	movwne	r0, #21761	; 0x5501
    8a38:	05301713 	ldreq	r1, [r0, #-1811]!	; 0xfffff8ed
    8a3c:	05010607 	streq	r0, [r1, #-1543]	; 0xfffff9f9
    8a40:	05322211 	ldreq	r2, [r2, #-529]!	; 0xfffffdef
    8a44:	05230605 	streq	r0, [r3, #-1541]!	; 0xfffff9fb
    8a48:	02130601 	andseq	r0, r3, #1048576	; 0x100000
    8a4c:	01010001 	tsteq	r1, r1
    8a50:	0000023b 	andeq	r0, r0, fp, lsr r2
    8a54:	01490003 	cmpeq	r9, r3
    8a58:	01020000 	mrseq	r0, (UNDEF: 2)
    8a5c:	000d0efb 	strdeq	r0, [sp], -fp
    8a60:	01010101 	tsteq	r1, r1, lsl #2
    8a64:	01000000 	mrseq	r0, (UNDEF: 0)
    8a68:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
    8a6c:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    8a70:	2f2e2e2f 	svccs	0x002e2e2f
    8a74:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
    8a78:	2f736f74 	svccs	0x00736f74
    8a7c:	65657246 	strbvs	r7, [r5, #-582]!	; 0xfffffdba
    8a80:	534f5452 	movtpl	r5, #62546	; 0xf452
    8a84:	726f702f 	rsbvc	r7, pc, #47	; 0x2f
    8a88:	6c626174 	stfvse	f6, [r2], #-464	; 0xfffffe30
    8a8c:	43472f65 	movtmi	r2, #32613	; 0x7f65
    8a90:	52412f43 	subpl	r2, r1, #268	; 0x10c
    8a94:	4d435f4d 	stclmi	15, cr5, [r3, #-308]	; 0xfffffecc
    8a98:	4e5f3333 	mrcmi	3, 2, r3, cr15, cr3, {1}
    8a9c:	6e2f5a54 			; <UNDEFINED> instruction: 0x6e2f5a54
    8aa0:	735f6e6f 	cmpvc	pc, #1776	; 0x6f0
    8aa4:	72756365 	rsbsvc	r6, r5, #-1811939327	; 0x94000001
    8aa8:	3a630065 	bcc	18c8c44 <__RAM_SIZE+0x17c8c44>
    8aac:	6573755c 	ldrbvs	r7, [r3, #-1372]!	; 0xfffffaa4
    8ab0:	785c7372 	ldmdavc	ip, {r1, r4, r5, r6, r8, r9, ip, sp, lr}^
    8ab4:	6e6f6469 	cdpvs	4, 6, cr6, cr15, cr9, {3}
    8ab8:	6f72705c 	svcvs	0x0072705c
    8abc:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
    8ac0:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    8ac4:	6363675f 	cmnvs	r3, #24903680	; 0x17c0000
    8ac8:	6363675c 	cmnvs	r3, #92, 14	; 0x1700000
    8acc:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
    8ad0:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    8ad4:	61652d65 	cmnvs	r5, r5, ror #26
    8ad8:	312d6962 			; <UNDEFINED> instruction: 0x312d6962
    8adc:	2d332e30 	ldccs	14, cr2, [r3, #-192]!	; 0xffffff40
    8ae0:	31323032 	teqcc	r2, r2, lsr r0
    8ae4:	5c30312e 	ldfpls	f3, [r0], #-184	; 0xffffff48
    8ae8:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    8aec:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    8af0:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    8af4:	6e695c69 	cdpvs	12, 6, cr5, cr9, cr9, {3}
    8af8:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    8afc:	616d5c65 	cmnvs	sp, r5, ror #24
    8b00:	6e696863 	cdpvs	8, 6, cr6, cr9, cr3, {3}
    8b04:	3a630065 	bcc	18c8ca0 <__RAM_SIZE+0x17c8ca0>
    8b08:	6573755c 	ldrbvs	r7, [r3, #-1372]!	; 0xfffffaa4
    8b0c:	785c7372 	ldmdavc	ip, {r1, r4, r5, r6, r8, r9, ip, sp, lr}^
    8b10:	6e6f6469 	cdpvs	4, 6, cr6, cr15, cr9, {3}
    8b14:	6f72705c 	svcvs	0x0072705c
    8b18:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
    8b1c:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    8b20:	6363675f 	cmnvs	r3, #24903680	; 0x17c0000
    8b24:	6363675c 	cmnvs	r3, #92, 14	; 0x1700000
    8b28:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
    8b2c:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    8b30:	61652d65 	cmnvs	r5, r5, ror #26
    8b34:	312d6962 			; <UNDEFINED> instruction: 0x312d6962
    8b38:	2d332e30 	ldccs	14, cr2, [r3, #-192]!	; 0xffffff40
    8b3c:	31323032 	teqcc	r2, r2, lsr r0
    8b40:	5c30312e 	ldfpls	f3, [r0], #-184	; 0xffffff48
    8b44:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    8b48:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    8b4c:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    8b50:	6e695c69 	cdpvs	12, 6, cr5, cr9, cr9, {3}
    8b54:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    8b58:	79735c65 	ldmdbvc	r3!, {r0, r2, r5, r6, sl, fp, ip, lr}^
    8b5c:	70000073 	andvc	r0, r0, r3, ror r0
    8b60:	6174726f 	cmnvs	r4, pc, ror #4
    8b64:	632e6d73 			; <UNDEFINED> instruction: 0x632e6d73
    8b68:	00000100 	andeq	r0, r0, r0, lsl #2
    8b6c:	6665645f 			; <UNDEFINED> instruction: 0x6665645f
    8b70:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
    8b74:	7079745f 	rsbsvc	r7, r9, pc, asr r4
    8b78:	682e7365 	stmdavs	lr!, {r0, r2, r5, r6, r8, r9, ip, sp, lr}
    8b7c:	00000200 	andeq	r0, r0, r0, lsl #4
    8b80:	6474735f 	ldrbtvs	r7, [r4], #-863	; 0xfffffca1
    8b84:	2e746e69 	cdpcs	14, 7, cr6, cr4, cr9, {3}
    8b88:	00030068 	andeq	r0, r3, r8, rrx
    8b8c:	726f7000 	rsbvc	r7, pc, #0
    8b90:	63616d74 	cmnvs	r1, #116, 26	; 0x1d00
    8b94:	6f636f72 	svcvs	0x00636f72
    8b98:	6e6f6d6d 	cdpvs	13, 6, cr6, cr15, cr13, {3}
    8b9c:	0100682e 	tsteq	r0, lr, lsr #16
    8ba0:	05000000 	streq	r0, [r0, #-0]
    8ba4:	02050005 	andeq	r0, r5, #5
    8ba8:	100037b4 			; <UNDEFINED> instruction: 0x100037b4
    8bac:	0100f903 	tsteq	r0, r3, lsl #18	; <UNPREDICTABLE>
    8bb0:	05130905 	ldreq	r0, [r3, #-2309]	; 0xfffff6fb
    8bb4:	13030605 	movwne	r0, #13829	; 0x3605
    8bb8:	03022e08 	movweq	r2, #11784	; 0x2e08
    8bbc:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    8bc0:	02050001 	andeq	r0, r5, #1
    8bc4:	00000000 	andeq	r0, r0, r0
    8bc8:	01019303 	tsteq	r1, r3, lsl #6
    8bcc:	05130505 	ldreq	r0, [r3, #-1285]	; 0xfffffafb
    8bd0:	0c030601 	stceq	6, cr0, [r3], {1}
    8bd4:	01010082 	smlabbeq	r1, r2, r0, r0
    8bd8:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    8bdc:	00000002 	andeq	r0, r0, r2
    8be0:	01a40300 			; <UNDEFINED> instruction: 0x01a40300
    8be4:	13050501 	movwne	r0, #21761	; 0x5501
    8be8:	03060105 	movweq	r0, #24837	; 0x6105
    8bec:	0100740a 	tsteq	r0, sl, lsl #8
    8bf0:	00010501 	andeq	r0, r1, r1, lsl #10
    8bf4:	00000205 	andeq	r0, r0, r5, lsl #4
    8bf8:	b3030000 	movwlt	r0, #12288	; 0x3000
    8bfc:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    8c00:	06010513 			; <UNDEFINED> instruction: 0x06010513
    8c04:	00740a03 	rsbseq	r0, r4, r3, lsl #20
    8c08:	01050101 	tsteq	r5, r1, lsl #2
    8c0c:	e0020500 	and	r0, r2, r0, lsl #10
    8c10:	03100037 	tsteq	r0, #55	; 0x37
    8c14:	050101c2 	streq	r0, [r1, #-450]	; 0xfffffe3e
    8c18:	01051305 	tsteq	r5, r5, lsl #6
    8c1c:	c8100306 	ldmdagt	r0, {r1, r2, r8, r9}
    8c20:	01000302 	tsteq	r0, r2, lsl #6
    8c24:	00010501 	andeq	r0, r1, r1, lsl #10
    8c28:	38000205 	stmdacc	r0, {r0, r2, r9}
    8c2c:	d7031000 	strle	r1, [r3, -r0]
    8c30:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    8c34:	06010513 			; <UNDEFINED> instruction: 0x06010513
    8c38:	00ac0c03 	adceq	r0, ip, r3, lsl #24
    8c3c:	01050101 	tsteq	r5, r1, lsl #2
    8c40:	16020500 	strne	r0, [r2], -r0, lsl #10
    8c44:	03100038 	tsteq	r0, #56	; 0x38
    8c48:	050101e8 	streq	r0, [r1, #-488]	; 0xfffffe18
    8c4c:	01051305 	tsteq	r5, r5, lsl #6
    8c50:	740a0306 	strvc	r0, [sl], #-774	; 0xfffffcfa
    8c54:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    8c58:	02050005 	andeq	r0, r5, #5
    8c5c:	10003824 	andne	r3, r0, r4, lsr #16
    8c60:	0102eb03 	tsteq	r2, r3, lsl #22
    8c64:	05130905 	ldreq	r0, [r3, #-2309]	; 0xfffff6fb
    8c68:	2d030605 	stccs	6, cr0, [r3, #-20]	; 0xffffffec
    8c6c:	02012202 	andeq	r2, r1, #536870912	; 0x20000000
    8c70:	01010002 	tsteq	r1, r2
    8c74:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    8c78:	00386c02 	eorseq	r6, r8, r2, lsl #24
    8c7c:	03c70310 	biceq	r0, r7, #16, 6	; 0x40000000
    8c80:	13090501 	movwne	r0, #38145	; 0x9501
    8c84:	03060505 	movweq	r0, #25861	; 0x6505
    8c88:	0302900b 	movweq	r9, #8203	; 0x200b
    8c8c:	82010100 	andhi	r0, r1, #0, 2
    8c90:	03000000 	movweq	r0, #0
    8c94:	00003600 	andeq	r3, r0, r0, lsl #12
    8c98:	fb010200 	blx	494a2 <__HEAP_SIZE+0x484a2>
    8c9c:	01000d0e 	tsteq	r0, lr, lsl #26
    8ca0:	00010101 	andeq	r0, r1, r1, lsl #2
    8ca4:	00010000 	andeq	r0, r1, r0
    8ca8:	2f2e0100 	svccs	0x002e0100
    8cac:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
    8cb0:	2f707574 	svccs	0x00707574
    8cb4:	00636367 	rsbeq	r6, r3, r7, ror #6
    8cb8:	61747300 	cmnvs	r4, r0, lsl #6
    8cbc:	70757472 	rsbsvc	r7, r5, r2, ror r4
    8cc0:	4d52415f 	ldfmie	f4, [r2, #-380]	; 0xfffffe84
    8cc4:	33334d43 	teqcc	r3, #4288	; 0x10c0
    8cc8:	0100732e 	tsteq	r0, lr, lsr #6
    8ccc:	00000000 	andeq	r0, r0, r0
    8cd0:	38a40205 	stmiacc	r4!, {r0, r2, r9}
    8cd4:	d3031000 	movwle	r1, #12288	; 0x3000
    8cd8:	30210100 	eorcc	r0, r1, r0, lsl #2
    8cdc:	30362f21 	eorscc	r2, r6, r1, lsr #30
    8ce0:	21212321 			; <UNDEFINED> instruction: 0x21212321
    8ce4:	23212121 			; <UNDEFINED> instruction: 0x23212121
    8ce8:	21212121 			; <UNDEFINED> instruction: 0x21212121
    8cec:	21232122 			; <UNDEFINED> instruction: 0x21232122
    8cf0:	21212123 			; <UNDEFINED> instruction: 0x21212123
    8cf4:	21232121 			; <UNDEFINED> instruction: 0x21232121
    8cf8:	21222121 			; <UNDEFINED> instruction: 0x21222121
    8cfc:	2e0e0323 	cdpcs	3, 0, cr0, cr14, cr3, {1}
    8d00:	03200903 			; <UNDEFINED> instruction: 0x03200903
    8d04:	312e7faf 			; <UNDEFINED> instruction: 0x312e7faf
    8d08:	2f2e0c03 	svccs	0x002e0c03
    8d0c:	2f2e1503 	svccs	0x002e1503
    8d10:	01000202 	tsteq	r0, r2, lsl #4
    8d14:	00007f01 	andeq	r7, r0, r1, lsl #30
    8d18:	4e000300 	cdpmi	3, 0, cr0, cr0, cr0, {0}
    8d1c:	02000000 	andeq	r0, r0, #0
    8d20:	0d0efb01 	vstreq	d15, [lr, #-4]
    8d24:	01010100 	mrseq	r0, (UNDEF: 17)
    8d28:	00000001 	andeq	r0, r0, r1
    8d2c:	01000001 	tsteq	r0, r1
    8d30:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    8d34:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    8d38:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    8d3c:	6c697475 	cfstrdvs	mvd7, [r9], #-468	; 0xfffffe2c
    8d40:	61662f73 	smcvs	25331	; 0x62f3
    8d44:	2d746c75 	ldclcs	12, cr6, [r4, #-468]!	; 0xfffffe2c
    8d48:	706d7564 	rsbvc	r7, sp, r4, ror #10
    8d4c:	7570632f 	ldrbvc	r6, [r0, #-815]!	; 0xfffffcd1
    8d50:	726f632f 	rsbvc	r6, pc, #-1140850688	; 0xbc000000
    8d54:	2d786574 	cfldr64cs	mvdx6, [r8, #-464]!	; 0xfffffe30
    8d58:	0033336d 	eorseq	r3, r3, sp, ror #6
    8d5c:	75616600 	strbvc	r6, [r1, #-1536]!	; 0xfffffa00
    8d60:	672d746c 	strvs	r7, [sp, -ip, ror #8]!
    8d64:	732e6363 			; <UNDEFINED> instruction: 0x732e6363
    8d68:	00000100 	andeq	r0, r0, r0, lsl #2
    8d6c:	02050000 	andeq	r0, r5, #0
    8d70:	10003914 	andne	r3, r0, r4, lsl r9
    8d74:	21011903 	tstcs	r1, r3, lsl #18
    8d78:	22212121 	eorcs	r2, r1, #1073741832	; 0x40000008
    8d7c:	212f222f 			; <UNDEFINED> instruction: 0x212f222f
    8d80:	30232121 	eorcc	r2, r3, r1, lsr #2
    8d84:	312f212f 			; <UNDEFINED> instruction: 0x312f212f
    8d88:	212f2121 			; <UNDEFINED> instruction: 0x212f2121
    8d8c:	302e6503 	eorcc	r6, lr, r3, lsl #10
    8d90:	022e1603 	eoreq	r1, lr, #3145728	; 0x300000
    8d94:	01010002 	tsteq	r1, r2

Disassembly of section .debug_str:

00000000 <.debug_str>:
    __asm volatile ( "mrs %0, ipsr" : "=r" ( ulCurrentInterrupt )::"memory" );
       0:	69755f5f 	ldmdbvs	r5!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, fp, ip, lr}^
    if( ulCurrentInterrupt == 0 )
       4:	5f38746e 	svcpl	0x0038746e
        xReturn = pdFALSE;
       8:	61660074 	smcvs	24580	; 0x6004
}
       c:	5f746c75 	svcpl	0x00746c75
      10:	706d7564 	rsbvc	r7, sp, r4, ror #10
      14:	5f6d625f 	svcpl	0x006d625f
        if(ch == '\n' || it >= size) {
      18:	63617473 	cmnvs	r1, #1929379840	; 0x73000000
}
      1c:	74735f6b 	ldrbtvc	r5, [r3], #-3947	; 0xfffff095
      20:	00747261 	rsbseq	r7, r4, r1, ror #4
      24:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
      28:	616d0074 	smcvs	53252	; 0xd004
      2c:	745f6e69 	ldrbvc	r6, [pc], #-3689	; 34 <__STACKSEAL_SIZE+0x34>
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
      30:	5f6b7361 	svcpl	0x006b7361
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
      34:	72746e65 	rsbsvc	r6, r4, #1616	; 0x650
      38:	54760079 	ldrbtpl	r0, [r6], #-121	; 0xffffff87
      3c:	536b7361 	cmnpl	fp, #-2080374783	; 0x84000001
      40:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
        BaseType_t xReturn = pdFAIL;
      44:	65686353 	strbvs	r6, [r8, #-851]!	; 0xfffffcad
    }
      48:	656c7564 	strbvs	r7, [ip, #-1380]!	; 0xfffffa9c
                pxBlock = heapPROTECT_BLOCK_POINTER( pxBlock->pxNextFreeBlock );
      4c:	5f5f0072 	svcpl	0x005f0072
            while( pxBlock != pxEnd )
      50:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
      54:	2e005f5f 	mcrcs	15, 0, r5, cr0, cr15, {2}
                if( pxBlock->xBlockSize > xMaxSize )
      58:	7070612f 	rsbsvc	r6, r0, pc, lsr #2
      5c:	6163696c 	cmnvs	r3, ip, ror #18
                if( pxBlock->xBlockSize < xMinSize )
      60:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
                    xMinSize = pxBlock->xBlockSize;
      64:	69616d2f 	stmdbvs	r1!, {r0, r1, r2, r3, r5, r8, sl, fp, sp, lr}^
      68:	00632e6e 	rsbeq	r2, r3, lr, ror #28
      6c:	74726175 	ldrbtvc	r6, [r2], #-373	; 0xfffffe8b
      70:	696e695f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, sp, lr}^
      74:	6f630074 	svcvs	0x00630074
      78:	65746e75 	ldrbvs	r6, [r4, #-3701]!	; 0xfffff18b
      7c:	5f5f0072 	svcpl	0x005f0072
            prvUnlockQueue( pxQueue );
      80:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	; 0xfffffe78
            ( void ) xTaskResumeAll();
      84:	5f6e6974 	svcpl	0x006e6974
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
      88:	73747570 	cmnvc	r4, #112, 10	; 0x1c000000
      8c:	736e7500 	cmnvc	lr, #0, 10
      90:	656e6769 	strbvs	r6, [lr, #-1897]!	; 0xfffff897
        taskENTER_CRITICAL();
      94:	68632064 	stmdavs	r3!, {r2, r5, r6, sp}^
            if( uxSemaphoreCount > ( UBaseType_t ) 0 )
      98:	74007261 	strvc	r7, [r0], #-609	; 0xfffffd9f
                if( xTicksToWait == ( TickType_t ) 0 )
      9c:	33747365 	cmncc	r4, #-1811939327	; 0x94000001
      a0:	72617000 	rsbvc	r7, r1, #0
                else if( xEntryTimeSet == pdFALSE )
      a4:	74656d61 	strbtvc	r6, [r5], #-3425	; 0xfffff29f
        taskEXIT_CRITICAL();
      a8:	00737265 	rsbseq	r7, r3, r5, ror #4
        vTaskSuspendAll();
      ac:	726f6873 	rsbvc	r6, pc, #7536640	; 0x730000
        prvLockQueue( pxQueue );
      b0:	6e752074 	mrcvs	0, 3, r2, cr5, cr4, {3}
      b4:	6e676973 			; <UNDEFINED> instruction: 0x6e676973
      b8:	69206465 	stmdbvs	r0!, {r0, r2, r5, r6, sl, sp, lr}
      bc:	4700746e 	strmi	r7, [r0, -lr, ror #8]
      c0:	4320554e 			; <UNDEFINED> instruction: 0x4320554e
      c4:	31203731 			; <UNDEFINED> instruction: 0x31203731
      c8:	2e332e30 	mrccs	14, 1, r2, cr3, cr0, {1}
      cc:	30322031 	eorscc	r2, r2, r1, lsr r0
        if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
      d0:	38303132 	ldmdacc	r0!, {r1, r4, r5, r8, ip, sp}
      d4:	28203432 	stmdacs	r0!, {r1, r4, r5, sl, ip, sp}
      d8:	656c6572 	strbvs	r6, [ip, #-1394]!	; 0xfffffa8e
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
      dc:	29657361 	stmdbcs	r5!, {r0, r5, r6, r8, r9, ip, sp, lr}^
      e0:	636d2d20 	cmnvs	sp, #32, 26	; 0x800
                    if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
      e4:	633d7570 	teqvs	sp, #112, 10	; 0x1c000000
      e8:	6574726f 	ldrbvs	r7, [r4, #-623]!	; 0xfffffd91
                vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
      ec:	336d2d78 	cmncc	sp, #120, 26	; 0x1e00
      f0:	6d2d2033 	stcvs	0, cr2, [sp, #-204]!	; 0xffffff34
                prvUnlockQueue( pxQueue );
      f4:	3d757066 	ldclcc	0, cr7, [r5, #-408]!	; 0xfffffe68
      f8:	35767066 	ldrbcc	r7, [r6, #-102]!	; 0xffffff9a
                if( xTaskResumeAll() == pdFALSE )
      fc:	2d70732d 	ldclcs	3, cr7, [r0, #-180]!	; 0xffffff4c
     100:	20363164 	eorscs	r3, r6, r4, ror #2
                    taskYIELD_WITHIN_API();
     104:	6c666d2d 	stclvs	13, cr6, [r6], #-180	; 0xffffff4c
                    if( xInheritanceOccurred != pdFALSE )
     108:	2d74616f 	ldfcse	f6, [r4, #-444]!	; 0xfffffe44
                return errQUEUE_EMPTY;
     10c:	3d696261 	sfmcc	f6, 2, [r9, #-388]!	; 0xfffffe7c
                        taskENTER_CRITICAL();
     110:	64726168 	ldrbtvs	r6, [r2], #-360	; 0xfffffe98
                            uxHighestWaitingPriority = prvGetDisinheritPriorityAfterTimeout( pxQueue );
     114:	746d2d20 	strbtvc	r2, [sp], #-3360	; 0xfffff2e0
     118:	626d7568 	rsbvs	r7, sp, #104, 10	; 0x1a000000
                            vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
     11c:	616d2d20 	cmnvs	sp, r0, lsr #26
                        taskEXIT_CRITICAL();
     120:	3d686372 	stclcc	3, cr6, [r8, #-456]!	; 0xfffffe38
     124:	766d7261 	strbtvc	r7, [sp], -r1, ror #4
     128:	2e6d2d38 	mcrcs	13, 3, r2, cr13, cr8, {1}
     12c:	6e69616d 	powvsez	f6, f1, #5.0
     130:	7073642b 	rsbsvc	r6, r3, fp, lsr #8
     134:	2070662b 	rsbscs	r6, r0, fp, lsr #12
     138:	2d20672d 	stccs	7, cr6, [r0, #-180]!	; 0xffffff4c
     13c:	61776467 	cmnvs	r7, r7, ror #8
     140:	322d6672 	eorcc	r6, sp, #119537664	; 0x7200000
     144:	674f2d20 	strbvs	r2, [pc, -r0, lsr #26]
     148:	64662d20 	strbtvs	r2, [r6], #-3360	; 0xfffff2e0
     14c:	2d617461 	cfstrdcs	mvd7, [r1, #-388]!	; 0xfffffe7c
     150:	74636573 	strbtvc	r6, [r3], #-1395	; 0xfffffa8d
     154:	736e6f69 	cmnvc	lr, #420	; 0x1a4
     158:	66662d20 	strbtvs	r2, [r6], -r0, lsr #26
     15c:	74636e75 	strbtvc	r6, [r3], #-3701	; 0xfffff18b
     160:	2d6e6f69 	stclcs	15, cr6, [lr, #-420]!	; 0xfffffe5c
     164:	74636573 	strbtvc	r6, [r3], #-1395	; 0xfffffa8d
     168:	736e6f69 	cmnvc	lr, #420	; 0x1a4
     16c:	6e662d20 	cdpvs	13, 6, cr2, cr6, cr0, {1}
     170:	78652d6f 	stmdavc	r5!, {r0, r1, r2, r3, r5, r6, r8, sl, fp, sp}^
     174:	74706563 	ldrbtvc	r6, [r0], #-1379	; 0xfffffa9d
     178:	736e6f69 	cmnvc	lr, #420	; 0x1a4
     17c:	72614800 	rsbvc	r4, r1, #0, 16
     180:	75614664 	strbvc	r4, [r1, #-1636]!	; 0xfffff99c
     184:	485f746c 	ldmdami	pc, {r2, r3, r5, r6, sl, ip, sp, lr}^	; <UNPREDICTABLE>
     188:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
     18c:	4c5f7265 	lfmmi	f7, 2, [pc], {101}	; 0x65
     190:	6e656765 	cdpvs	7, 6, cr6, cr5, cr5, {3}
     194:	5f007963 	svcpl	0x00007963
     198:	6975625f 	ldmdbvs	r5!, {r0, r1, r2, r3, r4, r6, r9, sp, lr}^
     19c:	6e69746c 	cdpvs	4, 6, cr7, cr9, cr12, {3}
     1a0:	6d656d5f 	stclvs	13, cr6, [r5, #-380]!	; 0xfffffe84
     1a4:	00746573 	rsbseq	r6, r4, r3, ror r5
     1a8:	555c3a43 	ldrbpl	r3, [ip, #-2627]	; 0xfffff5bd
     1ac:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
     1b0:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
     1b4:	635c6e6f 	cmpvs	ip, #1776	; 0x6f0
     1b8:	5c65646f 	cfstrdpl	mvd6, [r5], #-444	; 0xfffffe44
     1bc:	68746967 	ldmdavs	r4!, {r0, r1, r2, r5, r6, r8, fp, sp, lr}^
     1c0:	715c6275 	cmpvc	ip, r5, ror r2
     1c4:	2d756d65 	ldclcs	13, cr6, [r5, #-404]!	; 0xfffffe6c
     1c8:	756d6973 	strbvc	r6, [sp, #-2419]!	; 0xfffff68d
     1cc:	6f74616c 	svcvs	0x0074616c
     1d0:	6f625c72 	svcvs	0x00625c72
     1d4:	73647261 	cmnvc	r4, #268435462	; 0x10000006
     1d8:	73706d5c 	cmnvc	r0, #92, 26	; 0x1700
     1dc:	6e612d32 	mcrvs	13, 3, r2, cr1, cr2, {1}
     1e0:	5c353035 	ldcpl	0, cr3, [r5], #-212	; 0xffffff2c
     1e4:	65657246 	strbvs	r7, [r5, #-582]!	; 0xfffffdba
     1e8:	534f5452 	movtpl	r5, #62546	; 0xf452
     1ec:	69616d00 	stmdbvs	r1!, {r8, sl, fp, sp, lr}^
     1f0:	7374006e 	cmnvc	r4, #110	; 0x6e
     1f4:	7361546b 	cmnvc	r1, #1795162112	; 0x6b000000
     1f8:	6e6f436b 	cdpvs	3, 6, cr4, cr15, cr11, {3}
     1fc:	6c6f7274 	sfmvs	f7, 2, [pc], #-464	; 34 <__STACKSEAL_SIZE+0x34>
     200:	636f6c42 	cmnvs	pc, #16896	; 0x4200
     204:	6375006b 	cmnvs	r5, #107	; 0x6b
     208:	70616548 	rsbvc	r6, r1, r8, asr #10
     20c:	73657400 	cmnvc	r5, #0, 8
     210:	6c003474 	cfstrsvs	mvf3, [r0], {116}	; 0x74
     214:	20676e6f 	rsbcs	r6, r7, pc, ror #28
     218:	676e6f6c 	strbvs	r6, [lr, -ip, ror #30]!
     21c:	736e7520 	cmnvc	lr, #32, 10	; 0x8000000
     220:	656e6769 	strbvs	r6, [lr, #-1897]!	; 0xfffff897
     224:	6e692064 	cdpvs	0, 6, cr2, cr9, cr4, {3}
     228:	616d0074 	smcvs	53252	; 0xd004
     22c:	745f6e69 	ldrbvc	r6, [pc], #-3689	; 234 <__STACKSEAL_SIZE+0x234>
     230:	006b7361 	rsbeq	r7, fp, r1, ror #6
     234:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
     238:	75645f74 	strbvc	r5, [r4, #-3956]!	; 0xfffff08c
     23c:	635f706d 	cmpvs	pc, #109	; 0x6d
     240:	736c6c61 	cmnvc	ip, #24832	; 0x6100
     244:	6b636174 	blvs	18d881c <__RAM_SIZE+0x17d881c>
     248:	6e6f6c00 	cdpvs	12, 6, cr6, cr15, cr0, {0}
     24c:	6f642067 	svcvs	0x00642067
     250:	656c6275 	strbvs	r6, [ip, #-629]!	; 0xfffffd8b
     254:	6e6f6c00 	cdpvs	12, 6, cr6, cr15, cr0, {0}
     258:	6f6c2067 	svcvs	0x006c2067
     25c:	6920676e 	stmdbvs	r0!, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}
     260:	4400746e 	strmi	r7, [r0], #-1134	; 0xfffffb92
     264:	75616665 	strbvc	r6, [r1, #-1637]!	; 0xfffff99b
     268:	485f746c 	ldmdami	pc, {r2, r3, r5, r6, sl, ip, sp, lr}^	; <UNPREDICTABLE>
     26c:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
     270:	66007265 	strvs	r7, [r0], -r5, ror #4
     274:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
     278:	6d75645f 	cfldrdvs	mvd6, [r5, #-380]!	; 0xfffffe84
     27c:	6e755f70 	mrcvs	15, 3, r5, cr5, cr0, {3}
     280:	67696c61 	strbvs	r6, [r9, -r1, ror #24]!
     284:	6166006e 	cmnvs	r6, lr, rrx
     288:	5f746c75 	svcpl	0x00746c75
     28c:	706d7564 	rsbvc	r7, sp, r4, ror #10
     290:	696e695f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, sp, lr}^
     294:	616d0074 	smcvs	53252	; 0xd004
     298:	745f6e69 	ldrbvc	r6, [pc], #-3689	; 2a0 <__STACKSEAL_SIZE+0x2a0>
     29c:	5f6b7361 	svcpl	0x006b7361
     2a0:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
     2a4:	6f687300 	svcvs	0x00687300
     2a8:	69207472 	stmdbvs	r0!, {r1, r4, r5, r6, sl, ip, sp, lr}
     2ac:	5400746e 	strpl	r7, [r0], #-1134	; 0xfffffb92
     2b0:	486b7361 	stmdami	fp!, {r0, r5, r6, r8, r9, ip, sp, lr}^
     2b4:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
     2b8:	00745f65 	rsbseq	r5, r4, r5, ror #30
     2bc:	73615476 	cmnvc	r1, #1979711488	; 0x76000000
     2c0:	6c65446b 	cfstrdvs	mvd4, [r5], #-428	; 0xfffffe54
     2c4:	66007961 	strvs	r7, [r0], -r1, ror #18
     2c8:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
     2cc:	6d75645f 	cfldrdvs	mvd6, [r5, #-380]!	; 0xfffffe84
     2d0:	6d625f70 	stclvs	15, cr5, [r2, #-448]!	; 0xfffffe40
     2d4:	6174735f 	cmnvs	r4, pc, asr r3
     2d8:	705f6b63 	subsvc	r6, pc, r3, ror #22
     2dc:	746e696f 	strbtvc	r6, [lr], #-2415	; 0xfffff691
     2e0:	73657400 	cmnvc	r5, #0, 8
     2e4:	74003074 	strvc	r3, [r0], #-116	; 0xffffff8c
     2e8:	31747365 	cmncc	r4, r5, ror #6
     2ec:	73657400 	cmnvc	r5, #0, 8
     2f0:	78003274 	stmdavc	r0, {r2, r4, r5, r6, r9, ip, sp}
     2f4:	6b736154 	blvs	1cd884c <__RAM_SIZE+0x1bd884c>
     2f8:	61657243 	cmnvs	r5, r3, asr #4
     2fc:	74006574 	strvc	r6, [r0], #-1396	; 0xfffffa8c
     300:	35747365 	ldrbcc	r7, [r4, #-869]!	; 0xfffffc9b
     304:	612f2e00 			; <UNDEFINED> instruction: 0x612f2e00
     308:	696c7070 	stmdbvs	ip!, {r4, r5, r6, ip, sp, lr}^
     30c:	69746163 	ldmdbvs	r4!, {r0, r1, r5, r6, r8, sp, lr}^
     310:	732f6e6f 			; <UNDEFINED> instruction: 0x732f6e6f
     314:	65747379 	ldrbvs	r7, [r4, #-889]!	; 0xfffffc87
     318:	52415f6d 	subpl	r5, r1, #436	; 0x1b4
     31c:	334d434d 	movtcc	r4, #54093	; 0xd34d
     320:	00632e33 	rsbeq	r2, r3, r3, lsr lr
     324:	52495453 	subpl	r5, r9, #1392508928	; 0x53000000
     328:	49434400 	stmdbmi	r3, {sl, lr}^
     32c:	4341564d 	movtmi	r5, #5709	; 0x164d
     330:	494c4300 	stmdbmi	ip, {r8, r9, lr}^
     334:	43005244 	movwmi	r5, #580	; 0x244
     338:	44495550 	strbmi	r5, [r9], #-1360	; 0xfffffab0
     33c:	49504200 	ldmdbmi	r0, {r9, lr}^
     340:	004c4c41 	subeq	r4, ip, r1, asr #24
     344:	505f4449 	subspl	r4, pc, r9, asr #8
     348:	44005246 	strmi	r5, [r0], #-582	; 0xfffffdba
     34c:	53494343 	movtpl	r4, #37699	; 0x9343
     350:	79530057 	ldmdbvc	r3, {r0, r1, r2, r4, r6}^
     354:	6d657473 	cfstrdvs	mvd7, [r5, #-460]!	; 0xfffffe34
     358:	65726f43 	ldrbvs	r6, [r2, #-3907]!	; 0xfffff0bd
     35c:	636f6c43 	cmnvs	pc, #17152	; 0x4300
     360:	6470556b 	ldrbtvs	r5, [r0], #-1387	; 0xfffffa95
     364:	00657461 	rsbeq	r7, r5, r1, ror #8
     368:	4d5f4449 	cfldrdmi	mvd4, [pc, #-292]	; 24c <__STACKSEAL_SIZE+0x24c>
     36c:	0052464d 	subseq	r4, r2, sp, asr #12
     370:	41494349 	cmpmi	r9, r9, asr #6
     374:	00554c4c 	subseq	r4, r5, ip, asr #24
     378:	52414642 	subpl	r4, r1, #69206016	; 0x4200000
     37c:	755f5f00 	ldrbvc	r5, [pc, #-3840]	; fffff484 <__StackTop+0xc7eff484>
     380:	33746e69 	cmncc	r4, #1680	; 0x690
     384:	00745f32 	rsbseq	r5, r4, r2, lsr pc
     388:	5f424353 	svcpl	0x00424353
     38c:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
     390:	5f444900 	svcpl	0x00444900
     394:	00524644 	subseq	r4, r2, r4, asr #12
     398:	4d434344 	stclmi	3, cr4, [r3, #-272]	; 0xfffffef0
     39c:	00434156 	subeq	r4, r3, r6, asr r1
     3a0:	45535343 	ldrbmi	r5, [r3, #-835]	; 0xfffffcbd
     3a4:	5300524c 	movwpl	r5, #588	; 0x24c
     3a8:	65747379 	ldrbvs	r7, [r4, #-889]!	; 0xfffffc87
     3ac:	726f436d 	rsbvc	r4, pc, #-1275068415	; 0xb4000001
     3b0:	6f6c4365 	svcvs	0x006c4365
     3b4:	44006b63 	strmi	r6, [r0], #-2915	; 0xfffff49d
     3b8:	564d4343 	strbpl	r4, [sp], -r3, asr #6
     3bc:	5f005541 	svcpl	0x00005541
     3c0:	6365565f 	cmnvs	r5, #99614720	; 0x5f00000
     3c4:	73726f74 	cmnvc	r2, #116, 30	; 0x1d0
     3c8:	4f545600 	svcmi	0x00545600
     3cc:	46530052 			; <UNDEFINED> instruction: 0x46530052
     3d0:	49005241 	stmdbmi	r0, {r0, r6, r9, ip, lr}
     3d4:	00525343 	subseq	r5, r2, r3, asr #6
     3d8:	43524941 	cmpmi	r2, #1064960	; 0x104000
     3dc:	46440052 			; <UNDEFINED> instruction: 0x46440052
     3e0:	4d005253 	sfmmi	f5, 4, [r0, #-332]	; 0xfffffeb4
     3e4:	5241464d 	subpl	r4, r1, #80740352	; 0x4d00000
     3e8:	53434300 	movtpl	r4, #13056	; 0x3300
     3ec:	00524449 	subseq	r4, r2, r9, asr #8
     3f0:	52534643 	subspl	r4, r3, #70254592	; 0x4300000
     3f4:	41534e00 	cmpmi	r3, r0, lsl #28
     3f8:	4d005243 	sfmmi	f5, 4, [r0, #-268]	; 0xfffffef4
     3fc:	30524656 	subscc	r4, r2, r6, asr r6
     400:	46564d00 	ldrbmi	r4, [r6], -r0, lsl #26
     404:	4d003152 	stfmis	f3, [r0, #-328]	; 0xfffffeb8
     408:	32524656 	subscc	r4, r2, #90177536	; 0x5600000
     40c:	53455200 	movtpl	r5, #20992	; 0x5200
     410:	45565245 	ldrbmi	r5, [r6, #-581]	; 0xfffffdbb
     414:	52003344 	andpl	r3, r0, #68, 6	; 0x10000001
     418:	52455345 	subpl	r5, r5, #335544321	; 0x14000001
     41c:	34444556 	strbcc	r4, [r4], #-1366	; 0xfffffaaa
     420:	53455200 	movtpl	r5, #20992	; 0x5200
     424:	45565245 	ldrbmi	r5, [r6, #-581]	; 0xfffffdbb
     428:	52003544 	andpl	r3, r0, #68, 10	; 0x11000000
     42c:	52455345 	subpl	r5, r5, #335544321	; 0x14000001
     430:	36444556 			; <UNDEFINED> instruction: 0x36444556
     434:	53455200 	movtpl	r5, #20992	; 0x5200
     438:	45565245 	ldrbmi	r5, [r6, #-581]	; 0xfffffdbb
     43c:	53003744 	movwpl	r3, #1860	; 0x744
     440:	65747379 	ldrbvs	r7, [r4, #-889]!	; 0xfffffc87
     444:	696e496d 	stmdbvs	lr!, {r0, r2, r3, r5, r6, r8, fp, lr}^
     448:	48530074 	ldmdami	r3, {r2, r4, r5, r6}^
     44c:	00525343 	subseq	r5, r2, r3, asr #6
     450:	49434344 	stmdbmi	r3, {r2, r6, r8, r9, lr}^
     454:	4341564d 	movtmi	r5, #5709	; 0x164d
     458:	49434900 	stmdbmi	r3, {r8, fp, lr}^
     45c:	5541564d 	strbpl	r5, [r1, #-1613]	; 0xfffff9b3
     460:	49434400 	stmdbmi	r3, {sl, lr}^
     464:	41005753 	tstmi	r0, r3, asr r7
     468:	00525346 	subseq	r5, r2, r6, asr #6
     46c:	52534653 	subspl	r4, r3, #87031808	; 0x5300000
     470:	43434400 	movtmi	r4, #13312	; 0x3400
     474:	53005753 	movwpl	r5, #1875	; 0x753
     478:	00525048 	subseq	r5, r2, r8, asr #32
     47c:	54434556 	strbpl	r4, [r3], #-1366	; 0xfffffaaa
     480:	545f524f 	ldrbpl	r5, [pc], #-591	; 488 <__STACKSEAL_SIZE+0x488>
     484:	454c4241 	strbmi	r4, [ip, #-577]	; 0xfffffdbf
     488:	7079545f 	rsbsvc	r5, r9, pc, asr r4
     48c:	44490065 	strbmi	r0, [r9], #-101	; 0xffffff9b
     490:	5246415f 	subpl	r4, r6, #-1073741801	; 0xc0000017
     494:	5f444900 	svcpl	0x00444900
     498:	52415349 	subpl	r5, r1, #603979777	; 0x24000001
     49c:	41504300 	cmpmi	r0, r0, lsl #6
     4a0:	48005243 	stmdami	r0, {r0, r1, r6, r9, ip, lr}
     4a4:	00525346 	subseq	r5, r2, r6, asr #6
     4a8:	65615f5f 	strbvs	r5, [r1, #-3935]!	; 0xfffff0a1
     4ac:	5f696261 	svcpl	0x00696261
     4b0:	00643269 	rsbeq	r3, r4, r9, ror #4
     4b4:	31776f70 	cmncc	r7, r0, ror pc
     4b8:	78650030 	stmdavc	r5!, {r4, r5}^
     4bc:	6f003270 	svcvs	0x00003270
     4c0:	665f7475 			; <UNDEFINED> instruction: 0x665f7475
     4c4:	775f7463 	ldrbvc	r7, [pc, -r3, ror #8]
     4c8:	00706172 	rsbseq	r6, r0, r2, ror r1
     4cc:	76707865 	ldrbtvc	r7, [r0], -r5, ror #16
     4d0:	5f006c61 	svcpl	0x00006c61
     4d4:	5f74756f 	svcpl	0x0074756f
     4d8:	66667562 	strbtvs	r7, [r6], -r2, ror #10
     4dc:	76007265 	strvc	r7, [r0], -r5, ror #4
     4e0:	6e697270 	mcrvs	2, 3, r7, cr9, cr0, {3}
     4e4:	73006674 	movwvc	r6, #1652	; 0x674
     4e8:	5f657a69 	svcpl	0x00657a69
     4ec:	696d0074 	stmdbvs	sp!, {r2, r4, r5, r6}^
     4f0:	6469776e 	strbtvs	r7, [r9], #-1902	; 0xfffff892
     4f4:	5f006874 	svcpl	0x00006874
     4f8:	6165615f 	cmnvs	r5, pc, asr r1
     4fc:	645f6962 	ldrbvs	r6, [pc], #-2402	; 504 <__STACKSEAL_SIZE+0x504>
     500:	00766964 	rsbseq	r6, r6, r4, ror #18
     504:	6f74655f 	svcvs	0x0074655f
     508:	75700061 	ldrbvc	r0, [r0, #-97]!	; 0xffffff9f
     50c:	68635f74 	stmdavs	r3!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     510:	5f007261 	svcpl	0x00007261
     514:	5f74756f 	svcpl	0x0074756f
     518:	72616863 	rsbvc	r6, r1, #6488064	; 0x630000
     51c:	78616d00 	stmdavc	r1!, {r8, sl, fp, sp, lr}^
     520:	657a6973 	ldrbvs	r6, [sl, #-2419]!	; 0xfffff68d
     524:	6f687700 	svcvs	0x00687700
     528:	5f00656c 	svcpl	0x0000656c
     52c:	6165615f 	cmnvs	r5, pc, asr r1
     530:	645f6962 	ldrbvs	r6, [pc], #-2402	; 538 <__STACKSEAL_SIZE+0x538>
     534:	007a6932 	rsbseq	r6, sl, r2, lsr r9
     538:	63617266 	cmnvs	r1, #1610612742	; 0x60000006
     53c:	6c617600 	stclvs	6, cr7, [r1], #-0
     540:	5f006575 	svcpl	0x00006575
     544:	5f74756f 	svcpl	0x0074756f
     548:	00746366 	rsbseq	r6, r4, r6, ror #6
     54c:	65615f5f 	strbvs	r5, [r1, #-3935]!	; 0xfffff0a1
     550:	5f696261 	svcpl	0x00696261
     554:	69753264 	ldmdbvs	r5!, {r2, r5, r6, r9, ip, sp}^
     558:	7473007a 	ldrbtvc	r0, [r3], #-122	; 0xffffff86
     55c:	5f747261 	svcpl	0x00747261
     560:	00786469 	rsbseq	r6, r8, r9, ror #8
     564:	70746366 	rsbsvc	r6, r4, r6, ror #6
     568:	746e6972 	strbtvc	r6, [lr], #-2418	; 0xfffff68e
     56c:	656e0066 	strbvs	r0, [lr, #-102]!	; 0xffffff9a
     570:	69746167 	ldmdbvs	r4!, {r0, r1, r2, r5, r6, r8, sp, lr}^
     574:	5f006576 	svcpl	0x00006576
     578:	6165615f 	cmnvs	r5, pc, asr r1
     57c:	645f6962 	ldrbvs	r6, [pc], #-2402	; 584 <__STACKSEAL_SIZE+0x584>
     580:	00646461 	rsbeq	r6, r4, r1, ror #8
     584:	61765f5f 	cmnvs	r6, pc, asr pc
     588:	73696c5f 	cmnvc	r9, #24320	; 0x5f00
     58c:	2e2e0074 	mcrcs	0, 1, r0, cr14, cr4, {3}
     590:	726f432f 	rsbvc	r4, pc, #-1140850688	; 0xbc000000
     594:	72532f65 	subsvc	r2, r3, #404	; 0x194
     598:	72702f63 	rsbsvc	r2, r0, #396	; 0x18c
     59c:	66746e69 	ldrbtvs	r6, [r4], -r9, ror #28
     5a0:	5f00632e 	svcpl	0x0000632e
     5a4:	616f746e 	cmnvs	pc, lr, ror #8
     5a8:	726f665f 	rsbvc	r6, pc, #99614720	; 0x5f00000
     5ac:	0074616d 	rsbseq	r6, r4, sp, ror #2
     5b0:	6f74665f 	svcvs	0x0074665f
     5b4:	765f0061 	ldrbvc	r0, [pc], -r1, rrx
     5b8:	72706e73 	rsbsvc	r6, r0, #1840	; 0x730
     5bc:	66746e69 	ldrbtvs	r6, [r4], -r9, ror #28
     5c0:	756f5f00 	strbvc	r5, [pc, #-3840]!	; fffff6c8 <__StackTop+0xc7eff6c8>
     5c4:	756e5f74 	strbvc	r5, [lr, #-3956]!	; 0xfffff08c
     5c8:	6f006c6c 	svcvs	0x00006c6c
     5cc:	665f7475 			; <UNDEFINED> instruction: 0x665f7475
     5d0:	745f7463 	ldrbvc	r7, [pc], #-1123	; 5d8 <__STACKSEAL_SIZE+0x5d8>
     5d4:	00657079 	rsbeq	r7, r5, r9, ror r0
     5d8:	65615f5f 	strbvs	r5, [r1, #-3935]!	; 0xfffff0a1
     5dc:	5f696261 	svcpl	0x00696261
     5e0:	706d6364 	rsbvc	r6, sp, r4, ror #6
     5e4:	5f006567 	svcpl	0x00006567
     5e8:	616f746e 	cmnvs	pc, lr, ror #8
     5ec:	6e6f6c5f 	mcrvs	12, 3, r6, cr15, cr15, {2}
     5f0:	70730067 	rsbsvc	r0, r3, r7, rrx
     5f4:	746e6972 	strbtvc	r6, [lr], #-2418	; 0xfffff68e
     5f8:	5f5f0066 	svcpl	0x005f0066
     5fc:	62616561 	rsbvs	r6, r1, #406847488	; 0x18400000
     600:	69755f69 	ldmdbvs	r5!, {r0, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
     604:	66006432 			; <UNDEFINED> instruction: 0x66006432
     608:	7367616c 	cmnvc	r7, #108, 2
     60c:	615f5f00 	cmpvs	pc, r0, lsl #30
     610:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     614:	6d63645f 	cfstrdvs	mvd6, [r3, #-380]!	; 0xfffffe84
     618:	00746770 	rsbseq	r6, r4, r0, ror r7
     61c:	6c78616d 	ldfvse	f6, [r8], #-436	; 0xfffffe4c
     620:	5f006e65 	svcpl	0x00006e65
     624:	696f7461 	stmdbvs	pc!, {r0, r5, r6, sl, ip, sp, lr}^	; <UNPREDICTABLE>
     628:	74735f00 	ldrbtvc	r5, [r3], #-3840	; 0xfffff100
     62c:	656c6e72 	strbvs	r6, [ip, #-3698]!	; 0xfffff18e
     630:	00735f6e 	rsbseq	r5, r3, lr, ror #30
     634:	70615f5f 	rsbvc	r5, r1, pc, asr pc
     638:	615f5f00 	cmpvs	pc, r0, lsl #30
     63c:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     640:	756d645f 	strbvc	r6, [sp, #-1119]!	; 0xfffffba1
     644:	425f006c 	subsmi	r0, pc, #108	; 0x6c
     648:	006c6f6f 	rsbeq	r6, ip, pc, ror #30
     64c:	69755f5f 	ldmdbvs	r5!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, fp, ip, lr}^
     650:	3436746e 	ldrtcc	r7, [r6], #-1134	; 0xfffffb92
     654:	5f00745f 	svcpl	0x0000745f
     658:	645f7369 	ldrbvs	r7, [pc], #-873	; 660 <__STACKSEAL_SIZE+0x660>
     65c:	74696769 	strbtvc	r6, [r9], #-1897	; 0xfffff897
     660:	6e6f6300 	cdpvs	3, 6, cr6, cr15, cr0, {0}
     664:	5f5f0076 	svcpl	0x005f0076
     668:	62616561 	rsbvs	r6, r1, #406847488	; 0x18400000
     66c:	63645f69 	cmnvs	r4, #420	; 0x1a4
     670:	7165706d 	cmnvc	r5, sp, rrx
     674:	755f5f00 	ldrbvc	r5, [pc, #-3840]	; fffff77c <__StackTop+0xc7eff77c>
     678:	70746e69 	rsbsvc	r6, r4, r9, ror #28
     67c:	745f7274 	ldrbvc	r7, [pc], #-628	; 684 <__STACKSEAL_SIZE+0x684>
     680:	61686300 	cmnvs	r8, r0, lsl #6
     684:	74636172 	strbtvc	r6, [r3], #-370	; 0xfffffe8e
     688:	5f007265 	svcpl	0x00007265
     68c:	5f74756f 	svcpl	0x0074756f
     690:	00766572 	rsbseq	r6, r6, r2, ror r5
     694:	65615f5f 	strbvs	r5, [r1, #-3935]!	; 0xfffff0a1
     698:	5f696261 	svcpl	0x00696261
     69c:	62757364 	rsbsvs	r7, r5, #100, 6	; 0x90000001
     6a0:	615f5f00 	cmpvs	pc, r0, lsl #30
     6a4:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     6a8:	646c755f 	strbtvs	r7, [ip], #-1375	; 0xfffffaa1
     6ac:	6f6d7669 	svcvs	0x006d7669
     6b0:	5f5f0064 	svcpl	0x005f0064
     6b4:	62616561 	rsbvs	r6, r1, #406847488	; 0x18400000
     6b8:	63645f69 	cmnvs	r4, #420	; 0x1a4
     6bc:	656c706d 	strbvs	r7, [ip, #-109]!	; 0xffffff93
     6c0:	74756f00 	ldrbtvc	r6, [r5], #-3840	; 0xfffff100
     6c4:	7463665f 	strbtvc	r6, [r3], #-1631	; 0xfffff9a1
     6c8:	6172775f 	cmnvs	r2, pc, asr r7
     6cc:	79745f70 	ldmdbvc	r4!, {r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     6d0:	70006570 	andvc	r6, r0, r0, ror r5
     6d4:	00636572 	rsbeq	r6, r3, r2, ror r5
     6d8:	64697766 	strbtvs	r7, [r9], #-1894	; 0xfffff89a
     6dc:	5f006874 	svcpl	0x00006874
     6e0:	756e675f 	strbvc	r6, [lr, #-1887]!	; 0xfffff8a1
     6e4:	61765f63 	cmnvs	r6, r3, ror #30
     6e8:	73696c5f 	cmnvc	r9, #24320	; 0x5f00
     6ec:	5f5f0074 	svcpl	0x005f0074
     6f0:	62616561 	rsbvs	r6, r1, #406847488	; 0x18400000
     6f4:	63645f69 	cmnvs	r4, #420	; 0x1a4
     6f8:	746c706d 	strbtvc	r7, [ip], #-109	; 0xffffff93
     6fc:	746e5f00 	strbtvc	r5, [lr], #-3840	; 0xfffff100
     700:	6c5f616f 	ldfvse	f6, [pc], {111}	; 0x6f
     704:	5f676e6f 	svcpl	0x00676e6f
     708:	676e6f6c 	strbvs	r6, [lr, -ip, ror #30]!
     70c:	5f736900 	svcpl	0x00736900
     710:	70006c6c 	andvc	r6, r0, ip, ror #24
     714:	69636572 	stmdbvs	r3!, {r1, r4, r5, r6, r8, sl, sp, lr}^
     718:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
     71c:	66696400 	strbtvs	r6, [r9], -r0, lsl #8
     720:	2e2e0066 	cdpcs	0, 2, cr0, cr14, cr6, {3}
     724:	726f432f 	rsbvc	r4, pc, #-1140850688	; 0xbc000000
     728:	72532f65 	subsvc	r2, r3, #404	; 0x194
     72c:	61752f63 	cmnvs	r5, r3, ror #30
     730:	632e7472 			; <UNDEFINED> instruction: 0x632e7472
     734:	72747300 	rsbsvc	r7, r4, #0, 6
     738:	00676e69 	rsbeq	r6, r7, r9, ror #28
     73c:	74726175 	ldrbtvc	r6, [r2], #-373	; 0xfffffe8b
     740:	6365725f 	cmnvs	r5, #-268435451	; 0xf0000005
     744:	65670076 	strbvs	r0, [r7, #-118]!	; 0xffffff8a
     748:	61686374 	smcvs	34356	; 0x8634
     74c:	6e690072 	mcrvs	0, 3, r0, cr9, cr2, {3}
     750:	00786564 	rsbseq	r6, r8, r4, ror #10
     754:	74726175 	ldrbtvc	r6, [r2], #-373	; 0xfffffe8b
     758:	6e65735f 	mcrvs	3, 3, r7, cr5, cr15, {2}
     75c:	65670064 	strbvs	r0, [r7, #-100]!	; 0xffffff9c
     760:	68635f74 	stmdavs	r3!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     764:	66007261 	strvs	r7, [r0], -r1, ror #4
     768:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
     76c:	6d75645f 	cfldrdvs	mvd6, [r5, #-380]!	; 0xfffffe84
     770:	73705f70 	cmnvc	r0, #112, 30	; 0x1c0
     774:	74735f70 	ldrbtvc	r5, [r3], #-3952	; 0xfffff090
     778:	5f6b6361 	svcpl	0x006b6361
     77c:	73726170 	cmnvc	r2, #112, 2
     780:	73007265 	movwvc	r7, #613	; 0x265
     784:	6b636174 	blvs	18d8d5c <__RAM_SIZE+0x17d8d5c>
     788:	6973755f 	ldmdbvs	r3!, {r0, r1, r2, r3, r4, r6, r8, sl, ip, sp, lr}^
     78c:	6d5f676e 	ldclvs	7, cr6, [pc, #-440]	; 5dc <__STACKSEAL_SIZE+0x5dc>
     790:	66007073 			; <UNDEFINED> instruction: 0x66007073
     794:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
     798:	6d75645f 	cfldrdvs	mvd6, [r5, #-380]!	; 0xfffffe84
     79c:	78655f70 	stmdavc	r5!, {r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     7a0:	65725f63 	ldrbvs	r5, [r2, #-3939]!	; 0xfffff09d
     7a4:	6e727574 	mrcvs	5, 3, r7, cr2, cr4, {3}
     7a8:	63706f00 	cmnvs	r0, #0, 30
     7ac:	5f65646f 	svcpl	0x0065646f
     7b0:	625f7369 	subsvs	r7, pc, #-1543503871	; 0xa4000001
     7b4:	726f5f6c 	rsbvc	r5, pc, #108, 30	; 0x1b0
     7b8:	786c625f 	stmdavc	ip!, {r0, r1, r2, r3, r4, r6, r9, sp, lr}^
     7bc:	61747300 	cmnvs	r4, r0, lsl #6
     7c0:	665f6b63 	ldrbvs	r6, [pc], -r3, ror #22
     7c4:	656d6172 	strbvs	r6, [sp, #-370]!	; 0xfffffe8e
     7c8:	6600745f 			; <UNDEFINED> instruction: 0x6600745f
     7cc:	616d5f64 	cmnvs	sp, r4, ror #30
     7d0:	735f6e69 	cmpvc	pc, #1680	; 0x690
     7d4:	6b636174 	blvs	18d8dac <__RAM_SIZE+0x17d8dac>
     7d8:	6c75665f 	ldclvs	6, cr6, [r5], #-380	; 0xfffffe84
     7dc:	5f5f006c 	svcpl	0x005f006c
     7e0:	746e6975 	strbtvc	r6, [lr], #-2421	; 0xfffff68b
     7e4:	745f3631 	ldrbvc	r3, [pc], #-1585	; 7ec <__Vectors_Size+0x2c>
     7e8:	73735f00 	cmnvc	r3, #0, 30
     7ec:	6b636174 	blvs	18d8dc4 <__RAM_SIZE+0x17d8dc4>
     7f0:	75616600 	strbvc	r6, [r1, #-1536]!	; 0xfffffa00
     7f4:	645f746c 	ldrbvs	r7, [pc], #-1132	; 7fc <__Vectors_Size+0x3c>
     7f8:	5f706d75 	svcpl	0x00706d75
     7fc:	6f63706f 	svcvs	0x0063706f
     800:	5f006564 	svcpl	0x00006564
     804:	61747365 	cmnvs	r4, r5, ror #6
     808:	72006b63 	andvc	r6, r0, #101376	; 0x18c00
     80c:	6c757365 	ldclvs	3, cr7, [r5], #-404	; 0xfffffe6c
     810:	64660074 	strbtvs	r0, [r6], #-116	; 0xffffff8c
     814:	70736d5f 	rsbsvc	r6, r3, pc, asr sp
     818:	6174735f 	cmnvs	r4, pc, asr r3
     81c:	705f6b63 	subsvc	r6, pc, r3, ror #22
     820:	65737261 	ldrbvs	r7, [r3, #-609]!	; 0xfffffd9f
     824:	696c0072 	stmdbvs	ip!, {r1, r4, r5, r6}^
     828:	72656b6e 	rsbvc	r6, r5, #112640	; 0x1b800
     82c:	61747300 	cmnvs	r4, r0, lsl #6
     830:	665f6b63 	ldrbvs	r6, [pc], -r3, ror #22
     834:	656d6172 	strbvs	r6, [sp, #-370]!	; 0xfffffe8e
     838:	6e616d5f 	mcrvs	13, 3, r6, cr1, cr15, {2}
     83c:	5f6c6175 	svcpl	0x006c6175
     840:	706f0074 	rsbvc	r0, pc, r4, ror r0	; <UNPREDICTABLE>
     844:	65646f63 	strbvs	r6, [r4, #-3939]!	; 0xfffff09d
     848:	706f0031 	rsbvc	r0, pc, r1, lsr r0	; <UNPREDICTABLE>
     84c:	65646f63 	strbvs	r6, [r4, #-3939]!	; 0xfffff09d
     850:	74730032 	ldrbtvc	r0, [r3], #-50	; 0xffffffce
     854:	5f6b6361 	svcpl	0x006b6361
     858:	6d617266 	sfmvs	f7, 2, [r1, #-408]!	; 0xfffffe68
     85c:	616d5f65 	cmnvs	sp, r5, ror #30
     860:	6c61756e 	cfstr64vs	mvdx7, [r1], #-440	; 0xfffffe48
     864:	61747300 	cmnvs	r4, r0, lsl #6
     868:	665f6b63 	ldrbvs	r6, [pc], -r3, ror #22
     86c:	656d6172 	strbvs	r6, [sp, #-370]!	; 0xfffffe8e
     870:	61747300 	cmnvs	r4, r0, lsl #6
     874:	665f6b63 	ldrbvs	r6, [pc], -r3, ror #22
     878:	656d6172 	strbvs	r6, [sp, #-370]!	; 0xfffffe8e
     87c:	6378655f 	cmnvs	r8, #398458880	; 0x17c00000
     880:	5f747065 	svcpl	0x00747065
     884:	64660074 	strbtvs	r0, [r6], #-116	; 0xffffff8c
     888:	7073705f 	rsbsvc	r7, r3, pc, asr r0
     88c:	6174735f 	cmnvs	r4, pc, asr r3
     890:	705f6b63 	subsvc	r6, pc, r3, ror #22
     894:	65737261 	ldrbvs	r7, [r3, #-609]!	; 0xfffffd9f
     898:	2e2e0072 	mcrcs	0, 1, r0, cr14, cr2, {3}
     89c:	2f2e2e2f 	svccs	0x002e2e2f
     8a0:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 7f0 <__Vectors_Size+0x30>
     8a4:	74756269 	ldrbtvc	r6, [r5], #-617	; 0xfffffd97
     8a8:	2f736c69 	svccs	0x00736c69
     8ac:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
     8b0:	75642d74 	strbvc	r2, [r4, #-3444]!	; 0xfffff28c
     8b4:	732f706d 			; <UNDEFINED> instruction: 0x732f706d
     8b8:	662f6372 			; <UNDEFINED> instruction: 0x662f6372
     8bc:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
     8c0:	6d75642d 	cfldrdvs	mvd6, [r5, #-180]!	; 0xffffff4c
     8c4:	00632e70 	rsbeq	r2, r3, r0, ror lr
     8c8:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
     8cc:	75645f74 	strbvc	r5, [r4, #-3956]!	; 0xfffff08c
     8d0:	685f706d 	ldmdavs	pc, {r0, r2, r3, r5, r6, ip, sp, lr}^	; <UNPREDICTABLE>
     8d4:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
     8d8:	66007265 	strvs	r7, [r0], -r5, ror #4
     8dc:	616d5f64 	cmnvs	sp, r4, ror #30
     8e0:	735f6e69 	cmpvc	pc, #1680	; 0x690
     8e4:	6b636174 	blvs	18d8ebc <__RAM_SIZE+0x17d8ebc>
     8e8:	7361625f 	cmnvc	r1, #-268435451	; 0xf0000005
     8ec:	61660065 	cmnvs	r6, r5, rrx
     8f0:	5f746c75 	svcpl	0x00746c75
     8f4:	706d7564 	rsbvc	r7, sp, r4, ror #10
     8f8:	6973755f 	ldmdbvs	r3!, {r0, r1, r2, r3, r4, r6, r8, sl, ip, sp, lr}^
     8fc:	6d5f676e 	ldclvs	7, cr6, [pc, #-440]	; 74c <__STACKSEAL_SIZE+0x74c>
     900:	5f007073 	svcpl	0x00007073
     904:	78657473 	stmdavc	r5!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
     908:	74730074 	ldrbtvc	r0, [r3], #-116	; 0xffffff8c
     90c:	5f6b6361 	svcpl	0x006b6361
     910:	73726170 	cmnvc	r2, #112, 2
     914:	745f7265 	ldrbvc	r7, [pc], #-613	; 91c <__Vectors_Size+0x15c>
     918:	675f5f00 	ldrbvs	r5, [pc, -r0, lsl #30]
     91c:	4d5f7465 	cfldrdmi	mvd7, [pc, #-404]	; 790 <__STACKSEAL_SIZE+0x790>
     920:	73005053 	movwvc	r5, #83	; 0x53
     924:	6b636174 	blvs	18d8efc <__RAM_SIZE+0x17d8efc>
     928:	6172665f 	cmnvs	r2, pc, asr r6
     92c:	655f656d 	ldrbvs	r6, [pc, #-1389]	; 3c7 <__STACKSEAL_SIZE+0x3c7>
     930:	70656378 	rsbvc	r6, r5, r8, ror r3
     934:	655f0074 	ldrbvs	r0, [pc, #-116]	; 8c8 <__Vectors_Size+0x108>
     938:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
     93c:	64646100 	strbtvs	r6, [r4], #-256	; 0xffffff00
     940:	2e2e0072 	mcrcs	0, 1, r0, cr14, cr2, {3}
     944:	2f2e2e2f 	svccs	0x002e2e2f
     948:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 898 <__Vectors_Size+0xd8>
     94c:	74756269 	ldrbtvc	r6, [r5], #-617	; 0xfffffd97
     950:	2f736c69 	svccs	0x00736c69
     954:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
     958:	75642d74 	strbvc	r2, [r4, #-3444]!	; 0xfffff28c
     95c:	632f706d 			; <UNDEFINED> instruction: 0x632f706d
     960:	632f7570 			; <UNDEFINED> instruction: 0x632f7570
     964:	6574726f 	ldrbvs	r7, [r4, #-623]!	; 0xfffffd91
     968:	336d2d78 	cmncc	sp, #120, 26	; 0x1e00
     96c:	61662f33 	cmnvs	r6, r3, lsr pc
     970:	2d746c75 	ldclcs	12, cr6, [r4, #-468]!	; 0xfffffe2c
     974:	2e6c6168 	powcsez	f6, f4, #0.0
     978:	61660063 	cmnvs	r6, r3, rrx
     97c:	5f746c75 	svcpl	0x00746c75
     980:	706d7564 	rsbvc	r7, sp, r4, ror #10
     984:	7669645f 			; <UNDEFINED> instruction: 0x7669645f
     988:	72657a5f 	rsbvc	r7, r5, #389120	; 0x5f000
     98c:	7670006f 	ldrbtvc	r0, [r0], -pc, rrx
     990:	746e6f43 	strbtvc	r6, [lr], #-3907	; 0xfffff0bd
     994:	656e6961 	strbvs	r6, [lr, #-2401]!	; 0xfffff69f
     998:	69540072 	ldmdbvs	r4, {r1, r4, r5, r6}^
     99c:	79546b63 	ldmdbvc	r4, {r0, r1, r5, r6, r8, r9, fp, sp, lr}^
     9a0:	745f6570 	ldrbvc	r6, [pc], #-1392	; 9a8 <__Vectors_Size+0x1e8>
     9a4:	74497800 	strbvc	r7, [r9], #-2048	; 0xfffff800
     9a8:	61566d65 	cmpvs	r6, r5, ror #26
     9ac:	0065756c 	rsbeq	r7, r5, ip, ror #10
     9b0:	73694c78 	cmnvc	r9, #120, 24	; 0x7800
     9b4:	646e4574 	strbtvs	r4, [lr], #-1396	; 0xfffffa8c
     9b8:	4f767000 	svcmi	0x00767000
     9bc:	72656e77 	rsbvc	r6, r5, #1904	; 0x770
     9c0:	494c7800 	stmdbmi	ip, {fp, ip, sp, lr}^
     9c4:	495f5453 	ldmdbmi	pc, {r0, r1, r4, r6, sl, ip, lr}^	; <UNPREDICTABLE>
     9c8:	004d4554 	subeq	r4, sp, r4, asr r5
     9cc:	74497870 	strbvc	r7, [r9], #-2160	; 0xfffff790
     9d0:	6f546d65 	svcvs	0x00546d65
     9d4:	6f6d6552 	svcvs	0x006d6552
     9d8:	76006576 			; <UNDEFINED> instruction: 0x76006576
     9dc:	7473694c 	ldrbtvc	r6, [r3], #-2380	; 0xfffff6b4
     9e0:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xfffff1b7
     9e4:	696c6169 	stmdbvs	ip!, {r0, r3, r5, r6, r8, sp, lr}^
     9e8:	74496573 	strbvc	r6, [r9], #-1395	; 0xfffffa8d
     9ec:	75006d65 	strvc	r6, [r0, #-3429]	; 0xfffff29b
     9f0:	6d754e78 	ldclvs	14, cr4, [r5, #-480]!	; 0xfffffe20
     9f4:	4f726562 	svcmi	0x00726562
     9f8:	65744966 	ldrbvs	r4, [r4, #-2406]!	; 0xfffff69a
     9fc:	7600736d 	strvc	r7, [r0], -sp, ror #6
     a00:	7473694c 	ldrbtvc	r6, [r3], #-2380	; 0xfffff6b4
     a04:	65736e49 	ldrbvs	r6, [r3, #-3657]!	; 0xfffff1b7
     a08:	6e457472 	mcrvs	4, 2, r7, cr5, cr2, {3}
     a0c:	78700064 	ldmdavc	r0!, {r2, r5, r6}^
     a10:	7478654e 	ldrbtvc	r6, [r8], #-1358	; 0xfffffab2
     a14:	694c7600 	stmdbvs	ip, {r9, sl, ip, sp, lr}^
     a18:	6e497473 	mcrvs	4, 2, r7, cr9, cr3, {3}
     a1c:	61697469 	cmnvs	r9, r9, ror #8
     a20:	6573696c 	ldrbvs	r6, [r3, #-2412]!	; 0xfffff694
     a24:	61567800 	cmpvs	r6, r0, lsl #16
     a28:	4f65756c 	svcmi	0x0065756c
     a2c:	736e4966 	cmnvc	lr, #1671168	; 0x198000
     a30:	69747265 	ldmdbvs	r4!, {r0, r2, r5, r6, r9, ip, sp, lr}^
     a34:	70006e6f 	andvc	r6, r0, pc, ror #28
     a38:	65744978 	ldrbvs	r4, [r4, #-2424]!	; 0xfffff688
     a3c:	4255006d 	subsmi	r0, r5, #109	; 0x6d
     a40:	54657361 	strbtpl	r7, [r5], #-865	; 0xfffffc9f
     a44:	5f657079 	svcpl	0x00657079
     a48:	78700074 	ldmdavc	r0!, {r2, r4, r5, r6}^
     a4c:	72657449 	rsbvc	r7, r5, #1224736768	; 0x49000000
     a50:	726f7461 	rsbvc	r7, pc, #1627389952	; 0x61000000
     a54:	49787000 	ldmdbmi	r8!, {ip, sp, lr}^
     a58:	7865646e 	stmdavc	r5!, {r1, r2, r3, r5, r6, sl, sp, lr}^
     a5c:	50787000 	rsbspl	r7, r8, r0
     a60:	69766572 	ldmdbvs	r6!, {r1, r4, r5, r6, r8, sl, sp, lr}^
     a64:	0073756f 	rsbseq	r7, r3, pc, ror #10
     a68:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
     a6c:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
     a70:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
     a74:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
     a78:	6572462f 	ldrbvs	r4, [r2, #-1583]!	; 0xfffff9d1
     a7c:	4f545265 	svcmi	0x00545265
     a80:	696c2f53 	stmdbvs	ip!, {r0, r1, r4, r6, r8, r9, sl, fp, sp}^
     a84:	632e7473 			; <UNDEFINED> instruction: 0x632e7473
     a88:	4c787000 	ldclmi	0, cr7, [r8], #-0
     a8c:	00747369 	rsbseq	r7, r4, r9, ror #6
     a90:	53494c78 	movtpl	r4, #40056	; 0x9c78
     a94:	78750054 	ldmdavc	r5!, {r2, r4, r6}^
     a98:	7473694c 	ldrbtvc	r6, [r3], #-2380	; 0xfffff6b4
     a9c:	6f6d6552 	svcvs	0x006d6552
     aa0:	70006576 	andvc	r6, r0, r6, ror r5
     aa4:	77654e78 			; <UNDEFINED> instruction: 0x77654e78
     aa8:	7473694c 	ldrbtvc	r6, [r3], #-2380	; 0xfffff6b4
     aac:	6d657449 	cfstrdvs	mvd7, [r5, #-292]!	; 0xfffffedc
     ab0:	694c7600 	stmdbvs	ip, {r9, sl, ip, sp, lr}^
     ab4:	6e497473 	mcrvs	4, 2, r7, cr9, cr3, {3}
     ab8:	74726573 	ldrbtvc	r6, [r2], #-1395	; 0xfffffa8d
     abc:	6f507600 	svcvs	0x00507600
     ac0:	78457472 	stmdavc	r5, {r1, r4, r5, r6, sl, ip, sp, lr}^
     ac4:	72437469 	subvc	r7, r3, #1761607680	; 0x69000000
     ac8:	63697469 	cmnvs	r9, #1761607680	; 0x69000000
     acc:	70006c61 	andvc	r6, r0, r1, ror #24
     ad0:	6f4e7672 	svcvs	0x004e7672
     ad4:	79666974 	stmdbvc	r6!, {r2, r4, r5, r6, r8, fp, sp, lr}^
     ad8:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
     adc:	74655365 	strbtvc	r5, [r5], #-869	; 0xfffffc9b
     ae0:	746e6f43 	strbtvc	r6, [lr], #-3907	; 0xfffff0bd
     ae4:	656e6961 	strbvs	r6, [lr, #-2401]!	; 0xfffff69f
     ae8:	65530072 	ldrbvs	r0, [r3, #-114]	; 0xffffff8e
     aec:	6870616d 	ldmdavs	r0!, {r0, r2, r3, r5, r6, r8, sp, lr}^
     af0:	4465726f 	strbtmi	r7, [r5], #-623	; 0xfffffd91
     af4:	00617461 	rsbeq	r7, r1, r1, ror #8
     af8:	726f5076 	rsbvc	r5, pc, #118	; 0x76
     afc:	65695974 	strbvs	r5, [r9, #-2420]!	; 0xfffff68c
     b00:	5300646c 	movwpl	r6, #1132	; 0x46c
     b04:	70616d65 	rsbvc	r6, r1, r5, ror #26
     b08:	65726f68 	ldrbvs	r6, [r2, #-3944]!	; 0xfffff098
     b0c:	61746144 	cmnvs	r4, r4, asr #2
     b10:	7800745f 	stmdavc	r0, {r0, r1, r2, r3, r4, r6, sl, ip, sp, lr}
     b14:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
     b18:	6e654765 	cdpvs	7, 6, cr4, cr5, cr5, {3}
     b1c:	63697265 	cmnvs	r9, #1342177286	; 0x50000006
     b20:	53746547 	cmnpl	r4, #297795584	; 0x11c00000
     b24:	69746174 	ldmdbvs	r4!, {r2, r4, r5, r6, r8, sp, lr}^
     b28:	66754263 	ldrbtvs	r4, [r5], -r3, ror #4
     b2c:	73726566 	cmnvc	r2, #427819008	; 0x19800000
     b30:	75517800 	ldrbvc	r7, [r1, #-2048]	; 0xfffff800
     b34:	52657565 	rsbpl	r7, r5, #423624704	; 0x19400000
     b38:	69656365 	stmdbvs	r5!, {r0, r2, r5, r6, r8, r9, sp, lr}^
     b3c:	78006576 	stmdavc	r0, {r1, r2, r4, r5, r6, r8, sl, sp, lr}
     b40:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
     b44:	63655265 	cmnvs	r5, #1342177286	; 0x50000006
     b48:	65766965 	ldrbvs	r6, [r6, #-2405]!	; 0xfffff69b
     b4c:	6d6f7246 	sfmvs	f7, 2, [pc, #-280]!	; a3c <__Vectors_Size+0x27c>
     b50:	00525349 	subseq	r5, r2, r9, asr #6
     b54:	73615478 	cmnvc	r1, #120, 8	; 0x78000000
     b58:	6157736b 	cmpvs	r7, fp, ror #6
     b5c:	6e697469 	cdpvs	4, 6, cr7, cr9, cr9, {3}
     b60:	526f5467 	rsbpl	r5, pc, #1728053248	; 0x67000000
     b64:	69656365 	stmdbvs	r5!, {r0, r2, r5, r6, r8, r9, sp, lr}^
     b68:	70006576 	andvc	r6, r0, r6, ror r5
     b6c:	67694878 			; <UNDEFINED> instruction: 0x67694878
     b70:	50726568 	rsbspl	r6, r2, r8, ror #10
     b74:	726f6972 	rsbvc	r6, pc, #1867776	; 0x1c8000
     b78:	54797469 	ldrbtpl	r7, [r9], #-1129	; 0xfffffb97
     b7c:	576b7361 	strbpl	r7, [fp, -r1, ror #6]!
     b80:	6e656b6f 	vnmulvs.f64	d22, d5, d31
     b84:	4d787000 	ldclmi	0, cr7, [r8, #-0]
     b88:	78657475 	stmdavc	r5!, {r0, r2, r4, r5, r6, sl, ip, sp, lr}^
     b8c:	49547800 	ldmdbmi	r4, {fp, ip, sp, lr}^
     b90:	4f5f454d 	svcmi	0x005f454d
     b94:	78005455 	stmdavc	r0, {r0, r2, r4, r6, sl, ip, lr}
     b98:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
     b9c:	6b615465 	blvs	1855d38 <__RAM_SIZE+0x1755d38>
     ba0:	74754d65 	ldrbtvc	r4, [r5], #-3429	; 0xfffff29b
     ba4:	65527865 	ldrbvs	r7, [r2, #-2149]	; 0xfffff79b
     ba8:	73727563 	cmnvc	r2, #415236096	; 0x18c00000
     bac:	00657669 	rsbeq	r7, r5, r9, ror #12
     bb0:	65755178 	ldrbvs	r5, [r5, #-376]!	; 0xfffffe88
     bb4:	65536575 	ldrbvs	r6, [r3, #-1397]	; 0xfffffa8b
     bb8:	7463656c 	strbtvc	r6, [r3], #-1388	; 0xfffffa94
     bbc:	6d6f7246 	sfmvs	f7, 2, [pc, #-280]!	; aac <__Vectors_Size+0x2ec>
     bc0:	46746553 			; <UNDEFINED> instruction: 0x46746553
     bc4:	496d6f72 	stmdbmi	sp!, {r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
     bc8:	78005253 	stmdavc	r0, {r0, r1, r4, r6, r9, ip, lr}
     bcc:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
     bd0:	6e654765 	cdpvs	7, 6, cr4, cr5, cr5, {3}
     bd4:	63697265 	cmnvs	r9, #1342177286	; 0x50000006
     bd8:	646e6553 	strbtvs	r6, [lr], #-1363	; 0xfffffaad
     bdc:	6d6f7246 	sfmvs	f7, 2, [pc, #-280]!	; acc <__Vectors_Size+0x30c>
     be0:	00525349 	subseq	r5, r2, r9, asr #6
     be4:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
     be8:	694d6369 	stmdbvs	sp, {r0, r3, r5, r6, r8, r9, sp, lr}^
     bec:	694c696e 	stmdbvs	ip, {r1, r2, r3, r5, r6, r8, fp, sp, lr}^
     bf0:	74497473 	strbvc	r7, [r9], #-1139	; 0xfffffb8d
     bf4:	745f6d65 	ldrbvc	r6, [pc], #-3429	; bfc <__Vectors_Size+0x43c>
     bf8:	61577800 	cmpvs	r7, r0, lsl #16
     bfc:	6e497469 	cdpvs	4, 4, cr7, cr9, cr9, {3}
     c00:	69666564 	stmdbvs	r6!, {r2, r5, r6, r8, sl, sp, lr}^
     c04:	6574696e 	ldrbvs	r6, [r4, #-2414]!	; 0xfffff692
     c08:	7800796c 	stmdavc	r0, {r2, r3, r5, r6, r8, fp, ip, sp, lr}
     c0c:	6b736154 	blvs	1cd9164 <__RAM_SIZE+0x1bd9164>
     c10:	69615773 	stmdbvs	r1!, {r0, r1, r4, r5, r6, r8, r9, sl, ip, lr}^
     c14:	676e6974 			; <UNDEFINED> instruction: 0x676e6974
     c18:	65536f54 	ldrbvs	r6, [r3, #-3924]	; 0xfffff0ac
     c1c:	7500646e 	strvc	r6, [r0, #-1134]	; 0xfffffb92
     c20:	65755178 	ldrbvs	r5, [r5, #-376]!	; 0xfffffe88
     c24:	70536575 	subsvc	r6, r3, r5, ror r5
     c28:	73656361 	cmnvc	r5, #-2080374783	; 0x84000001
     c2c:	69617641 	stmdbvs	r1!, {r0, r6, r9, sl, ip, sp, lr}^
     c30:	6c62616c 	stfvse	f6, [r2], #-432	; 0xfffffe50
     c34:	54630065 	strbtpl	r0, [r3], #-101	; 0xffffff9b
     c38:	636f4c78 	cmnvs	pc, #120, 24	; 0x7800
     c3c:	4f78006b 	svcmi	0x0078006b
     c40:	66726576 			; <UNDEFINED> instruction: 0x66726576
     c44:	43776f6c 	cmnmi	r7, #108, 30	; 0x1b0
     c48:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
     c4c:	6f507600 	svcvs	0x00507600
     c50:	6e457472 	mcrvs	4, 2, r7, cr5, cr2, {3}
     c54:	43726574 	cmnmi	r2, #116, 10	; 0x1d000000
     c58:	69746972 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
     c5c:	006c6163 	rsbeq	r6, ip, r3, ror #2
     c60:	75625f5f 	strbvc	r5, [r2, #-3935]!	; 0xfffff0a1
     c64:	69746c69 	ldmdbvs	r4!, {r0, r3, r5, r6, sl, fp, sp, lr}^
     c68:	656d5f6e 	strbvs	r5, [sp, #-3950]!	; 0xfffff092
     c6c:	7970636d 	ldmdbvc	r0!, {r0, r2, r3, r5, r6, r8, r9, sp, lr}^
     c70:	6f437800 	svcvs	0x00437800
     c74:	6f507970 	svcvs	0x00507970
     c78:	69746973 	ldmdbvs	r4!, {r0, r1, r4, r5, r6, r8, fp, sp, lr}^
     c7c:	75006e6f 	strvc	r6, [r0, #-3695]	; 0xfffff191
     c80:	74655278 	strbtvc	r5, [r5], #-632	; 0xfffffd88
     c84:	006e7275 	rsbeq	r7, lr, r5, ror r2
     c88:	65755176 	ldrbvs	r5, [r5, #-374]!	; 0xfffffe8a
     c8c:	65446575 	strbvs	r6, [r4, #-1397]	; 0xfffffa8b
     c90:	6574656c 	ldrbvs	r6, [r4, #-1388]!	; 0xfffffa94
     c94:	52637000 	rsbpl	r7, r3, #0
     c98:	46646165 	strbtmi	r6, [r4], -r5, ror #2
     c9c:	006d6f72 	rsbeq	r6, sp, r2, ror pc
     ca0:	61537875 	cmpvs	r3, r5, ror r8
     ca4:	49646576 	stmdbmi	r4!, {r1, r2, r4, r5, r6, r8, sl, sp, lr}^
     ca8:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
     cac:	74707572 	ldrbtvc	r7, [r0], #-1394	; 0xfffffa8e
     cb0:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
     cb4:	70007375 	andvc	r7, r0, r5, ror r3
     cb8:	6e497672 	mcrvs	6, 2, r7, cr9, cr2, {3}
     cbc:	61697469 	cmnvs	r9, r9, ror #8
     cc0:	6573696c 	ldrbvs	r6, [r3, #-2412]!	; 0xfffff694
     cc4:	5177654e 	cmnpl	r7, lr, asr #10
     cc8:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
     ccc:	4d787500 	cfldr64mi	mvdx7, [r8, #-0]
     cd0:	78657475 	stmdavc	r5!, {r0, r2, r4, r5, r6, sl, ip, sp, lr}^
     cd4:	657a6953 	ldrbvs	r6, [sl, #-2387]!	; 0xfffff6ad
     cd8:	69597800 	ldmdbvs	r9, {fp, ip, sp, lr}^
     cdc:	52646c65 	rsbpl	r6, r4, #25856	; 0x6500
     ce0:	69757165 	ldmdbvs	r5!, {r0, r2, r5, r6, r8, ip, sp, lr}^
     ce4:	00646572 	rsbeq	r6, r4, r2, ror r5
     ce8:	654e7870 	strbvs	r7, [lr, #-2160]	; 0xfffff790
     cec:	65755177 	ldrbvs	r5, [r5, #-375]!	; 0xfffffe89
     cf0:	51006575 	tstpl	r0, r5, ror r5
     cf4:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
     cf8:	69666544 	stmdbvs	r6!, {r2, r6, r8, sl, sp, lr}^
     cfc:	6974696e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, fp, sp, lr}^
     d00:	76006e6f 	strvc	r6, [r0], -pc, ror #28
     d04:	61656c43 	cmnvs	r5, r3, asr #24
     d08:	746e4972 	strbtvc	r4, [lr], #-2418	; 0xfffff68e
     d0c:	75727265 	ldrbvc	r7, [r2, #-613]!	; 0xfffffd9b
     d10:	614d7470 	hvcvs	55104	; 0xd740
     d14:	70006b73 	andvc	r6, r0, r3, ror fp
     d18:	73497672 	movtvc	r7, #38514	; 0x9672
     d1c:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
     d20:	706d4565 	rsbvc	r4, sp, r5, ror #10
     d24:	70007974 	andvc	r7, r0, r4, ror r9
     d28:	66754276 			; <UNDEFINED> instruction: 0x66754276
     d2c:	00726566 	rsbseq	r6, r2, r6, ror #10
     d30:	47767270 			; <UNDEFINED> instruction: 0x47767270
     d34:	69447465 	stmdbvs	r4, {r0, r2, r5, r6, sl, ip, sp, lr}^
     d38:	686e6973 	stmdavs	lr!, {r0, r1, r4, r5, r6, r8, fp, sp, lr}^
     d3c:	74697265 	strbtvc	r7, [r9], #-613	; 0xfffffd9b
     d40:	6f697250 	svcvs	0x00697250
     d44:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
     d48:	65746641 	ldrbvs	r6, [r4, #-1601]!	; 0xfffff9bf
     d4c:	6d695472 	cfstrdvs	mvd5, [r9, #-456]!	; 0xfffffe38
     d50:	74756f65 	ldrbtvc	r6, [r5], #-3941	; 0xfffff09b
     d54:	4d787500 	cfldr64mi	mvdx7, [r8, #-0]
     d58:	61737365 	cmnvs	r3, r5, ror #6
     d5c:	57736567 	ldrbpl	r6, [r3, -r7, ror #10]!
     d60:	69746961 	ldmdbvs	r4!, {r0, r5, r6, r8, fp, sp, lr}^
     d64:	7800676e 	stmdavc	r0, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}
     d68:	616d6553 	cmnvs	sp, r3, asr r5
     d6c:	726f6870 	rsbvc	r6, pc, #112, 16	; 0x700000
     d70:	76700065 	ldrbtvc	r0, [r0], -r5, rrx
     d74:	74726f50 	ldrbtvc	r6, [r2], #-3920	; 0xfffff0b0
     d78:	6c6c614d 	stfvse	f6, [ip], #-308	; 0xfffffecc
     d7c:	7500636f 	strvc	r6, [r0, #-879]	; 0xfffffc91
     d80:	73615478 	cmnvc	r1, #120, 8	; 0x78000000
     d84:	7465476b 	strbtvc	r4, [r5], #-1899	; 0xfffff895
     d88:	626d754e 	rsbvs	r7, sp, #327155712	; 0x13800000
     d8c:	664f7265 	strbvs	r7, [pc], -r5, ror #4
     d90:	6b736154 	blvs	1cd92e8 <__RAM_SIZE+0x1bd92e8>
     d94:	54760073 	ldrbtpl	r0, [r6], #-115	; 0xffffff8d
     d98:	536b7361 	cmnpl	fp, #-2080374783	; 0x84000001
     d9c:	65707375 	ldrbvs	r7, [r0, #-885]!	; 0xfffffc8b
     da0:	6c41646e 	cfstrdvs	mvd6, [r1], {110}	; 0x6e
     da4:	5178006c 	cmnpl	r8, ip, rrx
     da8:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
     dac:	6b656550 	blvs	195a2f4 <__RAM_SIZE+0x185a2f4>
     db0:	6e457800 	cdpvs	8, 4, cr7, cr5, cr0, {0}
     db4:	54797274 	ldrbtpl	r7, [r9], #-628	; 0xfffffd8c
     db8:	53656d69 	cmnpl	r5, #6720	; 0x1a40
     dbc:	78007465 	stmdavc	r0, {r0, r2, r5, r6, sl, ip, sp, lr}
     dc0:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
     dc4:	5100656c 	tstpl	r0, ip, ror #10
     dc8:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
     dcc:	4d746553 	cfldr64mi	mvdx6, [r4, #-332]!	; 0xfffffeb4
     dd0:	65626d65 	strbvs	r6, [r2, #-3429]!	; 0xfffff29b
     dd4:	6e614872 	mcrvs	8, 3, r4, cr1, cr2, {3}
     dd8:	5f656c64 	svcpl	0x00656c64
     ddc:	78750074 	ldmdavc	r5!, {r2, r4, r5, r6}^
     de0:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xfffff1b7
     de4:	436c6169 	cmnmi	ip, #1073741850	; 0x4000001a
     de8:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
     dec:	75707000 	ldrbvc	r7, [r0, #-0]!
     df0:	65755163 	ldrbvs	r5, [r5, #-355]!	; 0xfffffe9d
     df4:	74536575 	ldrbvc	r6, [r3], #-1397	; 0xfffffa8b
     df8:	6761726f 	strbvs	r7, [r1, -pc, ror #4]!
     dfc:	75510065 	ldrbvc	r0, [r1, #-101]	; 0xffffff9b
     e00:	53657565 	cmnpl	r5, #423624704	; 0x19400000
     e04:	61487465 	cmpvs	r8, r5, ror #8
     e08:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
     e0c:	7800745f 	stmdavc	r0, {r0, r1, r2, r3, r4, r6, sl, ip, sp, lr}
     e10:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
     e14:	6d655365 	stclvs	3, cr5, [r5, #-404]!	; 0xfffffe6c
     e18:	6f687061 	svcvs	0x00687061
     e1c:	61546572 	cmpvs	r4, r2, ror r5
     e20:	7000656b 	andvc	r6, r0, fp, ror #10
     e24:	6d754476 	cfldrdvs	mvd4, [r5, #-472]!	; 0xfffffe28
     e28:	0031796d 	eorseq	r7, r1, sp, ror #18
     e2c:	75447670 	strbvc	r7, [r4, #-1648]	; 0xfffff990
     e30:	32796d6d 	rsbscc	r6, r9, #6976	; 0x1b40
     e34:	44767000 	ldrbtmi	r7, [r6], #-0
     e38:	796d6d75 	stmdbvc	sp!, {r0, r2, r4, r5, r6, r8, sl, fp, sp, lr}^
     e3c:	78750033 	ldmdavc	r5!, {r0, r1, r4, r5}^
     e40:	6d6d7544 	cfstr64vs	mvdx7, [sp, #-272]!	; 0xfffffef0
     e44:	70003279 	andvc	r3, r0, r9, ror r2
     e48:	6d754476 	cfldrdvs	mvd4, [r5, #-472]!	; 0xfffffe28
     e4c:	0037796d 	eorseq	r7, r7, sp, ror #18
     e50:	75447875 	strbvc	r7, [r4, #-2165]	; 0xfffff78b
     e54:	34796d6d 	ldrbtcc	r6, [r9], #-3437	; 0xfffff293
     e58:	76727000 	ldrbtvc	r7, [r2], -r0
     e5c:	79706f43 	ldmdbvc	r0!, {r0, r1, r6, r8, r9, sl, fp, sp, lr}^
     e60:	61746144 	cmnvs	r4, r4, asr #2
     e64:	75516f54 	ldrbvc	r6, [r1, #-3924]	; 0xfffff0ac
     e68:	00657565 	rsbeq	r7, r5, r5, ror #10
     e6c:	65755178 	ldrbvs	r5, [r5, #-376]!	; 0xfffffe88
     e70:	65476575 	strbvs	r6, [r7, #-1397]	; 0xfffffa8b
     e74:	6972656e 	ldmdbvs	r2!, {r1, r2, r3, r5, r6, r8, sl, sp, lr}^
     e78:	6e655363 	cdpvs	3, 6, cr5, cr5, cr3, {3}
     e7c:	63750064 	cmnvs	r5, #100	; 0x64
     e80:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
     e84:	6c616369 	stclvs	3, cr6, [r1], #-420	; 0xfffffe5c
     e88:	6c41796c 	mcrrvs	9, 6, r7, r1, cr12	; <UNPREDICTABLE>
     e8c:	61636f6c 	cmnvs	r3, ip, ror #30
     e90:	00646574 	rsbeq	r6, r4, r4, ror r5
     e94:	73615476 	cmnvc	r1, #1979711488	; 0x76000000
     e98:	616c506b 	cmnvs	ip, fp, rrx
     e9c:	6e4f6563 	cdpvs	5, 4, cr6, cr15, cr3, {3}
     ea0:	6e657645 	cdpvs	6, 6, cr7, cr5, cr5, {2}
     ea4:	73694c74 	cmnvc	r9, #116, 24	; 0x7400
     ea8:	76700074 			; <UNDEFINED> instruction: 0x76700074
     eac:	6b736154 	blvs	1cd9404 <__RAM_SIZE+0x1bd9404>
     eb0:	72636e49 	rsbvc	r6, r3, #1168	; 0x490
     eb4:	6e656d65 	cdpvs	13, 6, cr6, cr5, cr5, {3}
     eb8:	74754d74 	ldrbtvc	r4, [r5], #-3444	; 0xfffff28c
     ebc:	65487865 	strbvs	r7, [r8, #-2149]	; 0xfffff79b
     ec0:	6f43646c 	svcvs	0x0043646c
     ec4:	00746e75 	rsbseq	r6, r4, r5, ror lr
     ec8:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
     ecc:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
     ed0:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
     ed4:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
     ed8:	6572462f 	ldrbvs	r4, [r2, #-1583]!	; 0xfffff9d1
     edc:	4f545265 	svcmi	0x00545265
     ee0:	75712f53 	ldrbvc	r2, [r1, #-3923]!	; 0xfffff0ad
     ee4:	2e657565 	cdpcs	5, 6, cr7, cr5, cr5, {3}
     ee8:	78750063 	ldmdavc	r5!, {r0, r1, r5, r6}^
     eec:	6d657449 	cfstrdvs	mvd7, [r5, #-292]!	; 0xfffffedc
     ef0:	657a6953 	ldrbvs	r6, [sl, #-2387]!	; 0xfffff6ad
     ef4:	51787500 	cmnpl	r8, r0, lsl #10
     ef8:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
     efc:	7373654d 	cmnvc	r3, #322961408	; 0x13400000
     f00:	73656761 	cmnvc	r5, #25427968	; 0x1840000
     f04:	74696157 	strbtvc	r6, [r9], #-343	; 0xfffffea9
     f08:	46676e69 	strbtmi	r6, [r7], -r9, ror #28
     f0c:	496d6f72 	stmdbmi	sp!, {r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
     f10:	75005253 	strvc	r5, [r0, #-595]	; 0xfffffdad
     f14:	65725078 	ldrbvs	r5, [r2, #-120]!	; 0xffffff88
     f18:	756f6976 	strbvc	r6, [pc, #-2422]!	; 5aa <__STACKSEAL_SIZE+0x5aa>
     f1c:	73654d73 	cmnvc	r5, #7360	; 0x1cc0
     f20:	65676173 	strbvs	r6, [r7, #-371]!	; 0xfffffe8d
     f24:	69615773 	stmdbvs	r1!, {r0, r1, r4, r5, r6, r8, r9, sl, ip, lr}^
     f28:	676e6974 			; <UNDEFINED> instruction: 0x676e6974
     f2c:	61547800 	cmpvs	r4, r0, lsl #16
     f30:	72506b73 	subsvc	r6, r0, #117760	; 0x1cc00
     f34:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
     f38:	69447974 	stmdbvs	r4, {r2, r4, r5, r6, r8, fp, ip, sp, lr}^
     f3c:	686e6973 	stmdavs	lr!, {r0, r1, r4, r5, r6, r8, fp, sp, lr}^
     f40:	74697265 	strbtvc	r7, [r9], #-613	; 0xfffffd9b
     f44:	4d787500 	cfldr64mi	mvdx7, [r8, #-0]
     f48:	78657475 	stmdavc	r5!, {r0, r2, r4, r5, r6, sl, ip, sp, lr}^
     f4c:	676e654c 	strbvs	r6, [lr, -ip, asr #10]!
     f50:	70006874 	andvc	r6, r0, r4, ror r8
     f54:	73497672 	movtvc	r7, #38514	; 0x9672
     f58:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
     f5c:	6c754665 	ldclvs	6, cr4, [r5], #-404	; 0xfffffe6c
     f60:	7551006c 	ldrbvc	r0, [r1, #-108]	; 0xffffff94
     f64:	50657565 	rsbpl	r7, r5, r5, ror #10
     f68:	746e696f 	strbtvc	r6, [lr], #-2415	; 0xfffff691
     f6c:	00737265 	rsbseq	r7, r3, r5, ror #4
     f70:	65755178 	ldrbvs	r5, [r5, #-376]!	; 0xfffffe88
     f74:	69476575 	stmdbvs	r7, {r0, r2, r4, r5, r6, r8, sl, sp, lr}^
     f78:	72466576 	subvc	r6, r6, #494927872	; 0x1d800000
     f7c:	53496d6f 	movtpl	r6, #40303	; 0x9d6f
     f80:	75510052 	ldrbvc	r0, [r1, #-82]	; 0xffffffae
     f84:	48657565 	stmdami	r5!, {r0, r2, r5, r6, r8, sl, ip, sp, lr}^
     f88:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
     f8c:	00745f65 	rsbseq	r5, r4, r5, ror #30
     f90:	65755178 	ldrbvs	r5, [r5, #-376]!	; 0xfffffe88
     f94:	65536575 	ldrbvs	r6, [r3, #-1397]	; 0xfffffa8b
     f98:	54760074 	ldrbtpl	r0, [r6], #-116	; 0xffffff8c
     f9c:	506b7361 	rsbpl	r7, fp, r1, ror #6
     fa0:	6563616c 	strbvs	r6, [r3, #-364]!	; 0xfffffe94
     fa4:	76456e4f 	strbvc	r6, [r5], -pc, asr #28
     fa8:	4c746e65 	ldclmi	14, cr6, [r4], #-404	; 0xfffffe6c
     fac:	52747369 	rsbspl	r7, r4, #-1543503871	; 0xa4000001
     fb0:	72747365 	rsbsvc	r7, r4, #-1811939327	; 0x94000001
     fb4:	65746369 	ldrbvs	r6, [r4, #-873]!	; 0xfffffc97
     fb8:	78750064 	ldmdavc	r5!, {r2, r5, r6}^
     fbc:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
     fc0:	74654765 	strbtvc	r4, [r5], #-1893	; 0xfffff89b
     fc4:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
     fc8:	6e654c65 	cdpvs	12, 6, cr4, cr5, cr5, {3}
     fcc:	00687467 	rsbeq	r7, r8, r7, ror #8
     fd0:	53787070 	cmnpl	r8, #112	; 0x70
     fd4:	69746174 	ldmdbvs	r4!, {r2, r4, r5, r6, r8, sp, lr}^
     fd8:	65755163 	ldrbvs	r5, [r5, #-355]!	; 0xfffffe9d
     fdc:	78006575 	stmdavc	r0, {r0, r2, r4, r5, r6, r8, sl, sp, lr}
     fe0:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
     fe4:	65724365 	ldrbvs	r4, [r2, #-869]!	; 0xfffffc9b
     fe8:	4d657461 	cfstrdmi	mvd7, [r5, #-388]!	; 0xfffffe7c
     fec:	78657475 	stmdavc	r5!, {r0, r2, r4, r5, r6, sl, ip, sp, lr}^
     ff0:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
     ff4:	75006369 	strvc	r6, [r0, #-873]	; 0xfffffc97
     ff8:	7465536c 	strbtvc	r5, [r5], #-876	; 0xfffffc94
     ffc:	65746e49 	ldrbvs	r6, [r4, #-3657]!	; 0xfffff1b7
    1000:	70757272 	rsbsvc	r7, r5, r2, ror r2
    1004:	73614d74 	cmnvc	r1, #116, 26	; 0x1d00
    1008:	5178006b 	cmnpl	r8, fp, rrx
    100c:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
    1010:	656e6547 	strbvs	r6, [lr, #-1351]!	; 0xfffffab9
    1014:	43636972 	cmnmi	r3, #1867776	; 0x1c8000
    1018:	74616572 	strbtvc	r6, [r1], #-1394	; 0xfffffa8e
    101c:	51780065 	cmnpl	r8, r5, rrx
    1020:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
    1024:	61657243 	cmnvs	r5, r3, asr #4
    1028:	754d6574 	strbvc	r6, [sp, #-1396]	; 0xfffffa8c
    102c:	00786574 	rsbseq	r6, r8, r4, ror r5
    1030:	41545378 	cmpmi	r4, r8, ror r3
    1034:	5f434954 	svcpl	0x00434954
    1038:	5453494c 	ldrbpl	r4, [r3], #-2380	; 0xfffff6b4
    103c:	76727000 	ldrbtvc	r7, [r2], -r0
    1040:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xfffff1b7
    1044:	696c6169 	stmdbvs	ip!, {r0, r3, r5, r6, r8, sp, lr}^
    1048:	754d6573 	strbvc	r6, [sp, #-1395]	; 0xfffffa8d
    104c:	00786574 	rsbseq	r6, r8, r4, ror r5
    1050:	6d695478 	cfstrdvs	mvd5, [r9, #-480]!	; 0xfffffe20
    1054:	456e4f65 	strbmi	r4, [lr, #-3941]!	; 0xfffff09b
    1058:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
    105c:	00676e69 	rsbeq	r6, r7, r9, ror #28
    1060:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
    1064:	75516369 	ldrbvc	r6, [r1, #-873]	; 0xfffffc97
    1068:	5f657565 	svcpl	0x00657565
    106c:	51780074 	cmnpl	r8, r4, ror r0
    1070:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
    1074:	6f6d6552 	svcvs	0x006d6552
    1078:	72466576 	subvc	r6, r6, #494927872	; 0x1d800000
    107c:	65536d6f 	ldrbvs	r6, [r3, #-3439]	; 0xfffff291
    1080:	78750074 	ldmdavc	r5!, {r2, r4, r5, r6}^
    1084:	4378614d 	cmnmi	r8, #1073741843	; 0x40000013
    1088:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
    108c:	75517800 	ldrbvc	r7, [r1, #-2048]	; 0xfffff800
    1090:	43657565 	cmnmi	r5, #423624704	; 0x19400000
    1094:	74616572 	strbtvc	r6, [r1], #-1394	; 0xfffffa8e
    1098:	74655365 	strbtvc	r5, [r5], #-869	; 0xfffffc9b
    109c:	6d695400 	cfstrdvs	mvd5, [r9, #-0]
    10a0:	74754f65 	ldrbtvc	r4, [r5], #-3941	; 0xfffff09b
    10a4:	7600745f 			; <UNDEFINED> instruction: 0x7600745f
    10a8:	6b736154 	blvs	1cd9600 <__RAM_SIZE+0x1bd9600>
    10ac:	65746e49 	ldrbvs	r6, [r4, #-3657]!	; 0xfffff1b7
    10b0:	6c616e72 	stclvs	14, cr6, [r1], #-456	; 0xfffffe38
    10b4:	54746553 	ldrbtpl	r6, [r4], #-1363	; 0xfffffaad
    10b8:	4f656d69 	svcmi	0x00656d69
    10bc:	74537475 	ldrbvc	r7, [r3], #-1141	; 0xfffffb8b
    10c0:	00657461 	rsbeq	r7, r5, r1, ror #8
    10c4:	724f6370 	subvc	r6, pc, #112, 6	; 0xc0000001
    10c8:	6e696769 	cdpvs	7, 6, cr6, cr9, cr9, {3}
    10cc:	65526c61 	ldrbvs	r6, [r2, #-3169]	; 0xfffff39f
    10d0:	6f506461 	svcvs	0x00506461
    10d4:	69746973 	ldmdbvs	r4!, {r0, r1, r4, r5, r6, r8, fp, sp, lr}^
    10d8:	78006e6f 	stmdavc	r0, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}
    10dc:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
    10e0:	65724365 	ldrbvs	r4, [r2, #-869]!	; 0xfffffc9b
    10e4:	43657461 	cmnmi	r5, #1627389952	; 0x61000000
    10e8:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
    10ec:	53676e69 	cmnpl	r7, #1680	; 0x690
    10f0:	70616d65 	rsbvc	r6, r1, r5, ror #26
    10f4:	65726f68 	ldrbvs	r6, [r2, #-3944]!	; 0xfffff098
    10f8:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
    10fc:	75006369 	strvc	r6, [r0, #-873]	; 0xfffffc97
    1100:	67694878 			; <UNDEFINED> instruction: 0x67694878
    1104:	74736568 	ldrbtvc	r6, [r3], #-1384	; 0xfffffa98
    1108:	6f697250 	svcvs	0x00697250
    110c:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    1110:	6157664f 	cmpvs	r7, pc, asr #12
    1114:	6e697469 	cdpvs	4, 6, cr7, cr9, cr9, {3}
    1118:	73615467 	cmnvc	r1, #1728053248	; 0x67000000
    111c:	7500736b 	strvc	r7, [r0, #-875]	; 0xfffffc95
    1120:	65755163 	ldrbvs	r5, [r5, #-355]!	; 0xfffffe9d
    1124:	79546575 	ldmdbvc	r4, {r0, r2, r4, r5, r6, r8, sl, sp, lr}^
    1128:	75006570 	strvc	r6, [r0, #-1392]	; 0xfffffa90
    112c:	6d655378 	stclvs	3, cr5, [r5, #-480]!	; 0xfffffe20
    1130:	6f687061 	svcvs	0x00687061
    1134:	6f436572 	svcvs	0x00436572
    1138:	00746e75 	rsbseq	r6, r4, r5, ror lr
    113c:	72576370 	subsvc	r6, r7, #112, 6	; 0xc0000001
    1140:	54657469 	strbtpl	r7, [r5], #-1129	; 0xfffffb97
    1144:	5f5f006f 	svcpl	0x005f006f
    1148:	38746e69 	ldmdacc	r4!, {r0, r3, r5, r6, r9, sl, fp, sp, lr}^
    114c:	7500745f 	strvc	r7, [r0, #-1119]	; 0xfffffba1
    1150:	65755178 	ldrbvs	r5, [r5, #-376]!	; 0xfffffe88
    1154:	654c6575 	strbvs	r6, [ip, #-1397]	; 0xfffffa8b
    1158:	6874676e 	ldmdavs	r4!, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}^
    115c:	6e497800 	cdpvs	8, 4, cr7, cr9, cr0, {0}
    1160:	69726568 	ldmdbvs	r2!, {r3, r5, r6, r8, sl, sp, lr}^
    1164:	636e6174 	cmnvs	lr, #116, 2
    1168:	63634f65 	cmnvs	r3, #404	; 0x194
    116c:	65727275 	ldrbvs	r7, [r2, #-629]!	; 0xfffffd8b
    1170:	63750064 	cmnvs	r5, #100	; 0x64
    1174:	6d6d7544 	cfstr64vs	mvdx7, [sp, #-272]!	; 0xfffffef0
    1178:	75003579 	strvc	r3, [r0, #-1401]	; 0xfffffa87
    117c:	6d754463 	cfldrdvs	mvd4, [r5, #-396]!	; 0xfffffe74
    1180:	0036796d 	eorseq	r7, r6, sp, ror #18
    1184:	754e7875 	strbvc	r7, [lr, #-2165]	; 0xfffff78b
    1188:	7265626d 	rsbvc	r6, r5, #-805306362	; 0xd0000006
    118c:	6154664f 	cmpvs	r4, pc, asr #12
    1190:	00736b73 	rsbseq	r6, r3, r3, ror fp
    1194:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
    1198:	696f5065 	stmdbvs	pc!, {r0, r2, r5, r6, ip, lr}^	; <UNPREDICTABLE>
    119c:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
    11a0:	00745f73 	rsbseq	r5, r4, r3, ror pc
    11a4:	654c7875 	strbvs	r7, [ip, #-2165]	; 0xfffff78b
    11a8:	6874676e 	ldmdavs	r4!, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}^
    11ac:	75517600 	ldrbvc	r7, [r1, #-1536]	; 0xfffffa00
    11b0:	57657565 	strbpl	r7, [r5, -r5, ror #10]!
    11b4:	46746961 	ldrbtmi	r6, [r4], -r1, ror #18
    11b8:	654d726f 	strbvs	r7, [sp, #-623]	; 0xfffffd91
    11bc:	67617373 			; <UNDEFINED> instruction: 0x67617373
    11c0:	73655265 	cmnvc	r5, #1342177286	; 0x50000006
    11c4:	63697274 	cmnvs	r9, #116, 4	; 0x40000007
    11c8:	00646574 	rsbeq	r6, r4, r4, ror r5
    11cc:	75517870 	ldrbvc	r7, [r1, #-2160]	; 0xfffff790
    11d0:	4f657565 	svcmi	0x00657565
    11d4:	6d655372 	stclvs	3, cr5, [r5, #-456]!	; 0xfffffe38
    11d8:	6f687061 	svcvs	0x00687061
    11dc:	78006572 	stmdavc	r0, {r1, r4, r5, r6, r8, sl, sp, lr}
    11e0:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
    11e4:	7a695365 	bvc	1a55f80 <__RAM_SIZE+0x1955f80>
    11e8:	426e4965 	rsbmi	r4, lr, #1654784	; 0x194000
    11ec:	73657479 	cmnvc	r5, #2030043136	; 0x79000000
    11f0:	61547800 	cmpvs	r4, r0, lsl #16
    11f4:	65526b73 	ldrbvs	r6, [r2, #-2931]	; 0xfffff48d
    11f8:	656d7573 	strbvs	r7, [sp, #-1395]!	; 0xfffffa8d
    11fc:	006c6c41 	rsbeq	r6, ip, r1, asr #24
    1200:	75517875 	ldrbvc	r7, [r1, #-2165]	; 0xfffff78b
    1204:	47657565 	strbmi	r7, [r5, -r5, ror #10]!
    1208:	75517465 	ldrbvc	r7, [r1, #-1125]	; 0xfffffb9b
    120c:	49657565 	stmdbmi	r5!, {r0, r2, r5, r6, r8, sl, ip, sp, lr}^
    1210:	536d6574 	cmnpl	sp, #116, 10	; 0x1d000000
    1214:	00657a69 	rsbeq	r7, r5, r9, ror #20
    1218:	74497670 	strbvc	r7, [r9], #-1648	; 0xfffff990
    121c:	6f546d65 	svcvs	0x00546d65
    1220:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
    1224:	54780065 	ldrbtpl	r0, [r8], #-101	; 0xffffff9b
    1228:	436b7361 	cmnmi	fp, #-2080374783	; 0x84000001
    122c:	6b636568 	blvs	18da7d4 <__RAM_SIZE+0x17da7d4>
    1230:	54726f46 	ldrbtpl	r6, [r2], #-3910	; 0xfffff0ba
    1234:	4f656d69 	svcmi	0x00656d69
    1238:	76007475 			; <UNDEFINED> instruction: 0x76007475
    123c:	74726f50 	ldrbtvc	r6, [r2], #-3920	; 0xfffff0b0
    1240:	65657246 	strbvs	r7, [r5, #-582]!	; 0xfffffdba
    1244:	75517800 	ldrbvc	r7, [r1, #-2048]	; 0xfffff800
    1248:	49657565 	stmdbmi	r5!, {r0, r2, r5, r6, r8, sl, ip, sp, lr}^
    124c:	65755173 	ldrbvs	r5, [r5, #-371]!	; 0xfffffe8d
    1250:	75466575 	strbvc	r6, [r6, #-1397]	; 0xfffffa8b
    1254:	72466c6c 	subvc	r6, r6, #108, 24	; 0x6c00
    1258:	53496d6f 	movtpl	r6, #40303	; 0x9d6f
    125c:	78750052 	ldmdavc	r5!, {r1, r4, r6}^
    1260:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
    1264:	73654d65 	cmnvc	r5, #6464	; 0x1940
    1268:	65676173 	strbvs	r6, [r7, #-371]!	; 0xfffffe8d
    126c:	69615773 	stmdbvs	r1!, {r0, r1, r4, r5, r6, r8, r9, sl, ip, lr}^
    1270:	676e6974 			; <UNDEFINED> instruction: 0x676e6974
    1274:	54637000 	strbtpl	r7, [r3], #-0
    1278:	006c6961 	rsbeq	r6, ip, r1, ror #18
    127c:	65755178 	ldrbvs	r5, [r5, #-376]!	; 0xfffffe88
    1280:	65476575 	strbvs	r6, [r7, #-1397]	; 0xfffffa8b
    1284:	6972656e 	ldmdbvs	r2!, {r1, r2, r3, r5, r6, r8, sl, sp, lr}^
    1288:	65724363 	ldrbvs	r4, [r2, #-867]!	; 0xfffffc9d
    128c:	53657461 	cmnpl	r5, #1627389952	; 0x61000000
    1290:	69746174 	ldmdbvs	r4!, {r2, r4, r5, r6, r8, sp, lr}^
    1294:	78700063 	ldmdavc	r0!, {r0, r1, r5, r6}^
    1298:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
    129c:	53780065 	cmnpl	r8, #101	; 0x65
    12a0:	49544154 	ldmdbmi	r4, {r2, r4, r6, r8, lr}^
    12a4:	494c5f43 	stmdbmi	ip, {r0, r1, r6, r8, r9, sl, fp, ip, lr}^
    12a8:	495f5453 	ldmdbmi	pc, {r0, r1, r4, r6, sl, ip, lr}^	; <UNPREDICTABLE>
    12ac:	004d4554 	subeq	r4, sp, r4, asr r5
    12b0:	73615476 	cmnvc	r1, #1979711488	; 0x76000000
    12b4:	73694d6b 	cmnvc	r9, #6848	; 0x1ac0
    12b8:	59646573 	stmdbpl	r4!, {r0, r1, r4, r5, r6, r8, sl, sp, lr}^
    12bc:	646c6569 	strbtvs	r6, [ip], #-1385	; 0xfffffa97
    12c0:	61547800 	cmpvs	r4, r0, lsl #16
    12c4:	72506b73 	subsvc	r6, r0, #117760	; 0x1cc00
    12c8:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    12cc:	6e497974 			; <UNDEFINED> instruction: 0x6e497974
    12d0:	69726568 	ldmdbvs	r2!, {r3, r5, r6, r8, sl, sp, lr}^
    12d4:	78750074 	ldmdavc	r5!, {r2, r4, r5, r6}^
    12d8:	75636552 	strbvc	r6, [r3, #-1362]!	; 0xfffffaae
    12dc:	76697372 			; <UNDEFINED> instruction: 0x76697372
    12e0:	6c614365 	stclvs	3, cr4, [r1], #-404	; 0xfffffe6c
    12e4:	756f436c 	strbvc	r4, [pc, #-876]!	; f80 <__Vectors_Size+0x7c0>
    12e8:	7800746e 	stmdavc	r0, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
    12ec:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
    12f0:	6c655365 	stclvs	3, cr5, [r5], #-404	; 0xfffffe6c
    12f4:	46746365 	ldrbtmi	r6, [r4], -r5, ror #6
    12f8:	536d6f72 	cmnpl	sp, #456	; 0x1c8
    12fc:	78007465 	stmdavc	r0, {r0, r2, r5, r6, sl, ip, sp, lr}
    1300:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
    1304:	65655065 	strbvs	r5, [r5, #-101]!	; 0xffffff9b
    1308:	6f72466b 	svcvs	0x0072466b
    130c:	5253496d 	subspl	r4, r3, #1785856	; 0x1b4000
    1310:	48787500 	ldmdami	r8!, {r8, sl, ip, sp, lr}^
    1314:	65686769 	strbvs	r6, [r8, #-1897]!	; 0xfffff897
    1318:	61577473 	cmpvs	r7, r3, ror r4
    131c:	6e697469 	cdpvs	4, 6, cr7, cr9, cr9, {3}
    1320:	69725067 	ldmdbvs	r2!, {r0, r1, r2, r5, r6, ip, lr}^
    1324:	7469726f 	strbtvc	r7, [r9], #-623	; 0xfffffd91
    1328:	72700079 	rsbsvc	r0, r0, #121	; 0x79
    132c:	706f4376 	rsbvc	r4, pc, r6, ror r3	; <UNPREDICTABLE>
    1330:	74614479 	strbtvc	r4, [r1], #-1145	; 0xfffffb87
    1334:	6f724661 	svcvs	0x00724661
    1338:	6575516d 	ldrbvs	r5, [r5, #-365]!	; 0xfffffe93
    133c:	76006575 			; <UNDEFINED> instruction: 0x76006575
    1340:	6b736154 	blvs	1cd9898 <__RAM_SIZE+0x1bd9898>
    1344:	6f697250 	svcvs	0x00697250
    1348:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    134c:	69736944 	ldmdbvs	r3!, {r2, r6, r8, fp, sp, lr}^
    1350:	7265686e 	rsbvc	r6, r5, #7208960	; 0x6e0000
    1354:	66417469 	strbvs	r7, [r1], -r9, ror #8
    1358:	54726574 	ldrbtpl	r6, [r2], #-1396	; 0xfffffa8c
    135c:	6f656d69 	svcvs	0x00656d69
    1360:	78007475 	stmdavc	r0, {r0, r2, r4, r5, r6, sl, ip, sp, lr}
    1364:	6d6d7544 	cfstr64vs	mvdx7, [sp, #-272]!	; 0xfffffef0
    1368:	78003379 	stmdavc	r0, {r0, r3, r4, r5, r6, r8, r9, ip, sp}
    136c:	6b736154 	blvs	1cd98c4 <__RAM_SIZE+0x1bd98c4>
    1370:	43746547 	cmnmi	r4, #297795584	; 0x11c00000
    1374:	65727275 	ldrbvs	r7, [r2, #-629]!	; 0xfffffd8b
    1378:	6154746e 	cmpvs	r4, lr, ror #8
    137c:	61486b73 	hvcvs	34483	; 0x86b3
    1380:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
    1384:	48637000 	stmdami	r3!, {ip, sp, lr}^
    1388:	00646165 	rsbeq	r6, r4, r5, ror #2
    138c:	65755178 	ldrbvs	r5, [r5, #-376]!	; 0xfffffe88
    1390:	69476575 	stmdbvs	r7, {r0, r2, r4, r5, r6, r8, sl, sp, lr}^
    1394:	754d6576 	strbvc	r6, [sp, #-1398]	; 0xfffffa8a
    1398:	52786574 	rsbspl	r6, r8, #116, 10	; 0x1d000000
    139c:	72756365 	rsbsvc	r6, r5, #-1811939327	; 0x94000001
    13a0:	65766973 	ldrbvs	r6, [r6, #-2419]!	; 0xfffff68d
    13a4:	76727000 	ldrbtvc	r7, [r2], -r0
    13a8:	6f6c6e55 	svcvs	0x006c6e55
    13ac:	75516b63 	ldrbvc	r6, [r1, #-2915]	; 0xfffff49d
    13b0:	00657565 	rsbeq	r7, r5, r5, ror #10
    13b4:	65755178 	ldrbvs	r5, [r5, #-376]!	; 0xfffffe88
    13b8:	65476575 	strbvs	r6, [r7, #-1397]	; 0xfffffa8b
    13bc:	6972656e 	ldmdbvs	r2!, {r1, r2, r3, r5, r6, r8, sl, sp, lr}^
    13c0:	73655263 	cmnvc	r5, #805306374	; 0x30000006
    13c4:	78007465 	stmdavc	r0, {r0, r2, r5, r6, sl, ip, sp, lr}
    13c8:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
    13cc:	51734965 	cmnpl	r3, r5, ror #18
    13d0:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
    13d4:	74706d45 	ldrbtvc	r6, [r0], #-3397	; 0xfffff2bb
    13d8:	6f724679 	svcvs	0x00724679
    13dc:	5253496d 	subspl	r4, r3, #1785856	; 0x1b4000
    13e0:	55517800 	ldrbpl	r7, [r1, #-2048]	; 0xfffff800
    13e4:	00455545 	subeq	r5, r5, r5, asr #10
    13e8:	75517870 	ldrbvc	r7, [r1, #-2160]	; 0xfffff790
    13ec:	53657565 	cmnpl	r5, #423624704	; 0x19400000
    13f0:	6f437465 	svcvs	0x00437465
    13f4:	6961746e 	stmdbvs	r1!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
    13f8:	0072656e 	rsbseq	r6, r2, lr, ror #10
    13fc:	736f5078 	cmnvc	pc, #120	; 0x78
    1400:	6f697469 	svcvs	0x00697469
    1404:	5178006e 	cmnpl	r8, lr, rrx
    1408:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
    140c:	54646441 	strbtpl	r6, [r4], #-1089	; 0xfffffbbf
    1410:	7465536f 	strbtvc	r5, [r5], #-879	; 0xfffffc91
    1414:	78526300 	ldmdavc	r2, {r8, r9, sp, lr}^
    1418:	6b636f4c 	blvs	18dd150 <__RAM_SIZE+0x17dd150>
    141c:	54537800 	ldrbpl	r7, [r3], #-2048	; 0xfffff800
    1420:	43495441 	movtmi	r5, #37953	; 0x9441
    1424:	4555515f 	ldrbmi	r5, [r5, #-351]	; 0xfffffea1
    1428:	75004555 	strvc	r4, [r0, #-1365]	; 0xfffffaab
    142c:	65764578 	ldrbvs	r4, [r6, #-1400]!	; 0xfffffa88
    1430:	7551746e 	ldrbvc	r7, [r1, #-1134]	; 0xfffffb92
    1434:	4c657565 	cfstr64mi	mvdx7, [r5], #-404	; 0xfffffe6c
    1438:	74676e65 	strbtvc	r6, [r7], #-3685	; 0xfffff19b
    143c:	54780068 	ldrbtpl	r0, [r8], #-104	; 0xffffff98
    1440:	526b7361 	rsbpl	r7, fp, #-2080374783	; 0x84000001
    1444:	766f6d65 	strbtvc	r6, [pc], -r5, ror #26
    1448:	6f724665 	svcvs	0x00724665
    144c:	6576456d 	ldrbvs	r4, [r6, #-1389]!	; 0xfffffa93
    1450:	694c746e 	stmdbvs	ip, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
    1454:	53007473 	movwpl	r7, #1139	; 0x473
    1458:	69746174 	ldmdbvs	r4!, {r2, r4, r5, r6, r8, sp, lr}^
    145c:	73694c63 	cmnvc	r9, #25344	; 0x6300
    1460:	00745f74 	rsbseq	r5, r4, r4, ror pc
    1464:	65755178 	ldrbvs	r5, [r5, #-376]!	; 0xfffffe88
    1468:	72436575 	subvc	r6, r3, #490733568	; 0x1d400000
    146c:	65746165 	ldrbvs	r6, [r4, #-357]!	; 0xfffffe9b
    1470:	6e756f43 	cdpvs	15, 7, cr6, cr5, cr3, {2}
    1474:	676e6974 			; <UNDEFINED> instruction: 0x676e6974
    1478:	616d6553 	cmnvs	sp, r3, asr r5
    147c:	726f6870 	rsbvc	r6, pc, #112, 16	; 0x700000
    1480:	74530065 	ldrbvc	r0, [r3], #-101	; 0xffffff9b
    1484:	63697461 	cmnvs	r9, #1627389952	; 0x61000000
    1488:	6b736154 	blvs	1cd99e0 <__RAM_SIZE+0x1bd99e0>
    148c:	7800745f 	stmdavc	r0, {r0, r1, r2, r3, r4, r6, sl, ip, sp, lr}
    1490:	65726f43 	ldrbvs	r6, [r2, #-3907]!	; 0xfffff0bd
    1494:	70004449 	andvc	r4, r0, r9, asr #8
    1498:	73615463 	cmnvc	r1, #1660944384	; 0x63000000
    149c:	6d614e6b 	stclvs	14, cr4, [r1, #-428]!	; 0xfffffe54
    14a0:	54760065 	ldrbtpl	r0, [r6], #-101	; 0xffffff9b
    14a4:	506b7361 	rsbpl	r7, fp, r1, ror #6
    14a8:	6563616c 	strbvs	r6, [r3, #-364]!	; 0xfffffe94
    14ac:	6e556e4f 	cdpvs	14, 5, cr6, cr5, cr15, {2}
    14b0:	6564726f 	strbvs	r7, [r4, #-623]!	; 0xfffffd91
    14b4:	45646572 	strbmi	r6, [r4, #-1394]!	; 0xfffffa8e
    14b8:	746e6576 	strbtvc	r6, [lr], #-1398	; 0xfffffa8a
    14bc:	7473694c 	ldrbtvc	r6, [r3], #-2380	; 0xfffff6b4
    14c0:	78707000 	ldmdavc	r0!, {ip, sp, lr}^
    14c4:	656c6449 	strbvs	r6, [ip, #-1097]!	; 0xfffffbb7
    14c8:	6b736154 	blvs	1cd9a20 <__RAM_SIZE+0x1bd9a20>
    14cc:	63617453 	cmnvs	r1, #1392508928	; 0x53000000
    14d0:	6675426b 	ldrbtvs	r4, [r5], -fp, ror #4
    14d4:	00726566 	rsbseq	r6, r2, r6, ror #10
    14d8:	726f5078 	rsbvc	r5, pc, #120	; 0x78
    14dc:	61745374 	cmnvs	r4, r4, ror r3
    14e0:	63537472 	cmpvs	r3, #1912602624	; 0x72000000
    14e4:	75646568 	strbvc	r6, [r4, #-1384]!	; 0xfffffa98
    14e8:	0072656c 	rsbseq	r6, r2, ip, ror #10
    14ec:	72507875 	subsvc	r7, r0, #7667712	; 0x750000
    14f0:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    14f4:	70007974 	andvc	r7, r0, r4, ror r9
    14f8:	6e6f4378 	mcrvs	3, 3, r4, cr15, cr8, {3}
    14fc:	694c7473 	stmdbvs	ip, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
    1500:	78007473 	stmdavc	r0, {r0, r1, r4, r5, r6, sl, ip, sp, lr}
    1504:	6b736154 	blvs	1cd9a5c <__RAM_SIZE+0x1bd9a5c>
    1508:	49746547 	ldmdbmi	r4!, {r0, r1, r2, r6, r8, sl, sp, lr}^
    150c:	54656c64 	strbtpl	r6, [r5], #-3172	; 0xfffff39c
    1510:	486b7361 	stmdami	fp!, {r0, r5, r6, r8, r9, ip, sp, lr}^
    1514:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
    1518:	726f4665 	rsbvc	r4, pc, #105906176	; 0x6500000
    151c:	65726f43 	ldrbvs	r6, [r2, #-3907]!	; 0xfffff0bd
    1520:	53787000 	cmnpl	r8, #0
    1524:	65746174 	ldrbvs	r6, [r4, #-372]!	; 0xfffffe8c
    1528:	7473694c 	ldrbtvc	r6, [r3], #-2380	; 0xfffff6b4
    152c:	75536500 	ldrbvc	r6, [r3, #-1280]	; 0xfffffb00
    1530:	6e657073 	mcrvs	0, 3, r7, cr5, cr3, {3}
    1534:	00646564 	rsbeq	r6, r4, r4, ror #10
    1538:	75447875 	strbvc	r7, [r4, #-2165]	; 0xfffff78b
    153c:	31796d6d 	cmncc	r9, sp, ror #26
    1540:	54780032 	ldrbtpl	r0, [r8], #-50	; 0xffffffce
    1544:	446b7361 	strbtmi	r7, [fp], #-865	; 0xfffffc9f
    1548:	79616c65 	stmdbvc	r1!, {r0, r2, r5, r6, sl, fp, sp, lr}^
    154c:	69746e55 	ldmdbvs	r4!, {r0, r2, r4, r6, r9, sl, fp, sp, lr}^
    1550:	7875006c 	ldmdavc	r5!, {r2, r3, r5, r6}^
    1554:	796c6e4f 	stmdbvc	ip!, {r0, r1, r2, r3, r6, r9, sl, fp, sp, lr}^
    1558:	4d656e4f 	stclmi	14, cr6, [r5, #-316]!	; 0xfffffec4
    155c:	78657475 	stmdavc	r5!, {r0, r2, r4, r5, r6, sl, ip, sp, lr}^
    1560:	646c6548 	strbtvs	r6, [ip], #-1352	; 0xfffffab8
    1564:	426c7500 	rsbmi	r7, ip, #0, 10
    1568:	54737469 	ldrbtpl	r7, [r3], #-1129	; 0xfffffb97
    156c:	656c436f 	strbvs	r4, [ip, #-879]!	; 0xfffffc91
    1570:	6e4f7261 	cdpvs	2, 4, cr7, cr15, cr1, {3}
    1574:	74697845 	strbtvc	r7, [r9], #-2117	; 0xfffff7bb
    1578:	61547800 	cmpvs	r4, r0, lsl #16
    157c:	65476b73 	strbvs	r6, [r7, #-2931]	; 0xfffff48d
    1580:	68635374 	stmdavs	r3!, {r2, r4, r5, r6, r8, r9, ip, lr}^
    1584:	6c756465 	cfldrdvs	mvd6, [r5], #-404	; 0xfffffe6c
    1588:	74537265 	ldrbvc	r7, [r3], #-613	; 0xfffffd9b
    158c:	00657461 	rsbeq	r7, r5, r1, ror #8
    1590:	416f4e65 	cmnmi	pc, r5, ror #28
    1594:	6f697463 	svcvs	0x00697463
    1598:	7875006e 	ldmdavc	r5!, {r1, r2, r3, r5, r6}^
    159c:	52706f54 	rsbspl	r6, r0, #84, 30	; 0x150
    15a0:	79646165 	stmdbvc	r4!, {r0, r2, r5, r6, r8, sp, lr}^
    15a4:	6f697250 	svcvs	0x00697250
    15a8:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    15ac:	44787000 	ldrbtmi	r7, [r8], #-0
    15b0:	79616c65 	stmdbvc	r1!, {r0, r2, r5, r6, sl, fp, sp, lr}^
    15b4:	694c6465 	stmdbvs	ip, {r0, r2, r5, r6, sl, sp, lr}^
    15b8:	70007473 	andvc	r7, r0, r3, ror r4
    15bc:	65764578 	ldrbvs	r4, [r6, #-1400]!	; 0xfffffa88
    15c0:	694c746e 	stmdbvs	ip, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
    15c4:	78007473 	stmdavc	r0, {r0, r1, r4, r5, r6, sl, ip, sp, lr}
    15c8:	65686353 	strbvs	r6, [r8, #-851]!	; 0xfffffcad
    15cc:	656c7564 	strbvs	r7, [ip, #-1380]!	; 0xfffffa9c
    15d0:	6e755272 	mrcvs	2, 3, r5, cr5, cr2, {3}
    15d4:	676e696e 	strbvs	r6, [lr, -lr, ror #18]!
    15d8:	61745300 	cmnvs	r4, r0, lsl #6
    15dc:	79546b63 	ldmdbvc	r4, {r0, r1, r5, r6, r8, r9, fp, sp, lr}^
    15e0:	745f6570 	ldrbvc	r6, [pc], #-1392	; 15e8 <__HEAP_SIZE+0x5e8>
    15e4:	426c7500 	rsbmi	r7, ip, #0, 10
    15e8:	54737469 	ldrbtpl	r7, [r3], #-1129	; 0xfffffb97
    15ec:	656c436f 	strbvs	r4, [ip, #-879]!	; 0xfffffc91
    15f0:	75007261 	strvc	r7, [r0, #-609]	; 0xfffffd9f
    15f4:	6c654478 	cfstrdvs	mvd4, [r5], #-480	; 0xfffffe20
    15f8:	64657465 	strbtvs	r7, [r5], #-1125	; 0xfffffb9b
    15fc:	6b736154 	blvs	1cd9b54 <__RAM_SIZE+0x1bd9b54>
    1600:	69615773 	stmdbvs	r1!, {r0, r1, r4, r5, r6, r8, r9, sl, ip, lr}^
    1604:	676e6974 			; <UNDEFINED> instruction: 0x676e6974
    1608:	61656c43 	cmnvs	r5, r3, asr #24
    160c:	0070556e 	rsbseq	r5, r0, lr, ror #10
    1610:	6c654478 	cfstrdvs	mvd4, [r5], #-480	; 0xfffffe20
    1614:	54657465 	strbtpl	r7, [r5], #-1125	; 0xfffffb9b
    1618:	6e494243 	cdpvs	2, 4, cr4, cr9, cr3, {2}
    161c:	656c6449 	strbvs	r6, [ip, #-1097]!	; 0xfffffbb7
    1620:	6b736154 	blvs	1cd9b78 <__RAM_SIZE+0x1bd9b78>
    1624:	65507800 	ldrbvs	r7, [r0, #-2048]	; 0xfffff800
    1628:	6465646e 	strbtvs	r6, [r5], #-1134	; 0xfffffb92
    162c:	6e756f43 	cdpvs	15, 7, cr6, cr5, cr3, {2}
    1630:	70007374 	andvc	r7, r0, r4, ror r3
    1634:	61655278 	smcvs	21800	; 0x5528
    1638:	61547964 	cmpvs	r4, r4, ror #18
    163c:	4c736b73 			; <UNDEFINED> instruction: 0x4c736b73
    1640:	73747369 	cmnvc	r4, #-1543503871	; 0xa4000001
    1644:	78457800 	stmdavc	r5, {fp, ip, sp, lr}^
    1648:	74636570 	strbtvc	r6, [r3], #-1392	; 0xfffffa90
    164c:	64496465 	strbvs	r6, [r9], #-1125	; 0xfffffb9b
    1650:	6954656c 	ldmdbvs	r4, {r2, r3, r5, r6, r8, sl, sp, lr}^
    1654:	7500656d 	strvc	r6, [r0, #-1389]	; 0xfffffa93
    1658:	6d754478 	cfldrdvs	mvd4, [r5, #-480]!	; 0xfffffe20
    165c:	3032796d 	eorscc	r7, r2, sp, ror #18
    1660:	69547800 	ldmdbvs	r4, {fp, ip, sp, lr}^
    1664:	5472656d 	ldrbtpl	r6, [r2], #-1389	; 0xfffffa93
    1668:	546b7361 	strbtpl	r7, [fp], #-865	; 0xfffffc9f
    166c:	75004243 	strvc	r4, [r0, #-579]	; 0xfffffdbd
    1670:	69724f63 	ldmdbvs	r2!, {r0, r1, r5, r6, r8, r9, sl, fp, lr}^
    1674:	616e6967 	cmnvs	lr, r7, ror #18
    1678:	746f4e6c 	strbtvc	r4, [pc], #-3692	; 1680 <__HEAP_SIZE+0x680>
    167c:	53796669 	cmnpl	r9, #110100480	; 0x6900000
    1680:	65746174 	ldrbvs	r6, [r4, #-372]!	; 0xfffffe8c
    1684:	61547600 	cmpvs	r4, r0, lsl #12
    1688:	65536b73 	ldrbvs	r6, [r3, #-2931]	; 0xfffff48d
    168c:	6d695474 	cfstrdvs	mvd5, [r9, #-464]!	; 0xfffffe30
    1690:	74754f65 	ldrbtvc	r4, [r5], #-3941	; 0xfffff09b
    1694:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
    1698:	54780065 	ldrbtpl	r0, [r8], #-101	; 0xffffff9b
    169c:	476b7361 	strbmi	r7, [fp, -r1, ror #6]!
    16a0:	72656e65 	rsbvc	r6, r5, #1616	; 0x650
    16a4:	6f4e6369 	svcvs	0x004e6369
    16a8:	79666974 	stmdbvc	r6!, {r2, r4, r5, r6, r8, fp, sp, lr}^
    16ac:	6d6f7246 	sfmvs	f7, 2, [pc, #-280]!	; 159c <__HEAP_SIZE+0x59c>
    16b0:	00525349 	subseq	r5, r2, r9, asr #6
    16b4:	65695978 	strbvs	r5, [r9, #-2424]!	; 0xfffff688
    16b8:	6550646c 	ldrbvs	r6, [r0, #-1132]	; 0xfffffb94
    16bc:	6e69646e 	cdpvs	4, 6, cr6, cr9, cr14, {3}
    16c0:	70007367 	andvc	r7, r0, r7, ror #6
    16c4:	74536375 	ldrbvc	r6, [r3], #-885	; 0xfffffc8b
    16c8:	426b6361 	rsbmi	r6, fp, #-2080374783	; 0x84000001
    16cc:	00657479 	rsbeq	r7, r5, r9, ror r4
    16d0:	6c654478 	cfstrdvs	mvd4, [r5], #-480	; 0xfffffe20
    16d4:	64657961 	strbtvs	r7, [r5], #-2401	; 0xfffff69f
    16d8:	6b736154 	blvs	1cd9c30 <__RAM_SIZE+0x1bd9c30>
    16dc:	7473694c 	ldrbtvc	r6, [r3], #-2380	; 0xfffff6b4
    16e0:	44780031 	ldrbtmi	r0, [r8], #-49	; 0xffffffcf
    16e4:	79616c65 	stmdbvc	r1!, {r0, r2, r5, r6, sl, fp, sp, lr}^
    16e8:	61546465 	cmpvs	r4, r5, ror #8
    16ec:	694c6b73 	stmdbvs	ip, {r0, r1, r4, r5, r6, r8, r9, fp, sp, lr}^
    16f0:	00327473 	eorseq	r7, r2, r3, ror r4
    16f4:	764f7870 			; <UNDEFINED> instruction: 0x764f7870
    16f8:	6c667265 	sfmvs	f7, 2, [r6], #-404	; 0xfffffe6c
    16fc:	6465776f 	strbtvs	r7, [r5], #-1903	; 0xfffff891
    1700:	616c6544 	cmnvs	ip, r4, asr #10
    1704:	4c646579 	cfstr64mi	mvdx6, [r4], #-484	; 0xfffffe1c
    1708:	00747369 	rsbseq	r7, r4, r9, ror #6
    170c:	64705578 	ldrbtvs	r5, [r0], #-1400	; 0xfffffa88
    1710:	64657461 	strbtvs	r7, [r5], #-1121	; 0xfffffb9f
    1714:	6b636954 	blvs	18dbc6c <__RAM_SIZE+0x17dbc6c>
    1718:	6e756f43 	cdpvs	15, 7, cr6, cr5, cr3, {2}
    171c:	54780074 	ldrbtpl	r0, [r8], #-116	; 0xffffff8c
    1720:	436b7361 	cmnmi	fp, #-2080374783	; 0x84000001
    1724:	68637461 	stmdavs	r3!, {r0, r5, r6, sl, ip, sp, lr}^
    1728:	69547055 	ldmdbvs	r4, {r0, r2, r4, r6, ip, sp, lr}^
    172c:	00736b63 	rsbseq	r6, r3, r3, ror #22
    1730:	61506c75 	cmpvs	r0, r5, ror ip
    1734:	656d6172 	strbvs	r6, [sp, #-370]!	; 0xfffffe8e
    1738:	73726574 	cmnvc	r2, #116, 10	; 0x1d000000
    173c:	65526500 	ldrbvs	r6, [r2, #-1280]	; 0xfffffb00
    1740:	6e727574 	mrcvs	5, 3, r7, cr2, cr4, {3}
    1744:	61547800 	cmpvs	r4, r0, lsl #16
    1748:	6f546b73 	svcvs	0x00546b73
    174c:	75736552 	ldrbvc	r6, [r3, #-1362]!	; 0xfffffaae
    1750:	7500656d 	strvc	r6, [r0, #-1389]	; 0xfffffa93
    1754:	646e4978 	strbtvs	r4, [lr], #-2424	; 0xfffff688
    1758:	6f547865 	svcvs	0x00547865
    175c:	61656c43 	cmnvs	r5, r3, asr #24
    1760:	54760072 	ldrbtpl	r0, [r6], #-114	; 0xffffff8e
    1764:	536b7361 	cmnpl	fp, #-2080374783	; 0x84000001
    1768:	70417465 	subvc	r7, r1, r5, ror #8
    176c:	63696c70 	cmnvs	r9, #112, 24	; 0x7000
    1770:	6f697461 	svcvs	0x00697461
    1774:	7361546e 	cmnvc	r1, #1845493760	; 0x6e000000
    1778:	6761546b 	strbvs	r5, [r1, -fp, ror #8]!
    177c:	69547800 	ldmdbvs	r4, {fp, ip, sp, lr}^
    1780:	4372656d 	cmnmi	r2, #457179136	; 0x1b400000
    1784:	74616572 	strbtvc	r6, [r1], #-1394	; 0xfffffa8e
    1788:	6d695465 	cfstrdvs	mvd5, [r9, #-404]!	; 0xfffffe6c
    178c:	61547265 	cmpvs	r4, r5, ror #4
    1790:	65006b73 	strvs	r6, [r0, #-2931]	; 0xfffff48d
    1794:	65656c53 	strbvs	r6, [r5, #-3155]!	; 0xfffff3ad
    1798:	646f4d70 	strbtvs	r4, [pc], #-3440	; 17a0 <__HEAP_SIZE+0x7a0>
    179c:	61745365 	cmnvs	r4, r5, ror #6
    17a0:	00737574 	rsbseq	r7, r3, r4, ror r5
    17a4:	69487875 	stmdbvs	r8, {r0, r2, r4, r5, r6, fp, ip, sp, lr}^
    17a8:	72656867 	rsbvc	r6, r5, #6750208	; 0x670000
    17ac:	6f697250 	svcvs	0x00697250
    17b0:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    17b4:	64616552 	strbtvs	r6, [r1], #-1362	; 0xfffffaae
    17b8:	73615479 	cmnvc	r1, #2030043136	; 0x79000000
    17bc:	7800736b 	stmdavc	r0, {r0, r1, r3, r5, r6, r8, r9, ip, sp, lr}
    17c0:	6b736154 	blvs	1cd9d18 <__RAM_SIZE+0x1bd9d18>
    17c4:	61657243 	cmnvs	r5, r3, asr #4
    17c8:	74536574 	ldrbvc	r6, [r3], #-1396	; 0xfffffa8c
    17cc:	63697461 	cmnvs	r9, #1627389952	; 0x61000000
    17d0:	6b737400 	blvs	1cde7d8 <__RAM_SIZE+0x1bde7d8>
    17d4:	00424354 	subeq	r4, r2, r4, asr r3
    17d8:	6f4e6375 	svcvs	0x004e6375
    17dc:	79666974 	stmdbvc	r6!, {r2, r4, r5, r6, r8, fp, sp, lr}^
    17e0:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
    17e4:	41760065 	cmnmi	r6, r5, rrx
    17e8:	696c7070 	stmdbvs	ip!, {r4, r5, r6, ip, sp, lr}^
    17ec:	69746163 	ldmdbvs	r4!, {r0, r1, r5, r6, r8, sp, lr}^
    17f0:	65476e6f 	strbvs	r6, [r7, #-3695]	; 0xfffff191
    17f4:	6d695474 	cfstrdvs	mvd5, [r9, #-464]!	; 0xfffffe30
    17f8:	61547265 	cmpvs	r4, r5, ror #4
    17fc:	654d6b73 	strbvs	r6, [sp, #-2931]	; 0xfffff48d
    1800:	79726f6d 	ldmdbvc	r2!, {r0, r2, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    1804:	61547800 	cmpvs	r4, r0, lsl #16
    1808:	65476b73 	strbvs	r6, [r7, #-2931]	; 0xfffff48d
    180c:	6972656e 	ldmdbvs	r2!, {r1, r2, r3, r5, r6, r8, sl, sp, lr}^
    1810:	746f4e63 	strbtvc	r4, [pc], #-3683	; 1818 <__HEAP_SIZE+0x818>
    1814:	00796669 	rsbseq	r6, r9, r9, ror #12
    1818:	6e557870 	mrcvs	8, 2, r7, cr5, cr0, {3}
    181c:	636f6c62 	cmnvs	pc, #25088	; 0x6200
    1820:	5464656b 	strbtpl	r6, [r4], #-1387	; 0xfffffa95
    1824:	78004243 	stmdavc	r0, {r0, r1, r6, r9, lr}
    1828:	61656c43 	cmnvs	r5, r3, asr #24
    182c:	756f4372 	strbvc	r4, [pc, #-882]!	; 14c2 <__HEAP_SIZE+0x4c2>
    1830:	6e4f746e 	cdpvs	4, 4, cr7, cr15, cr14, {3}
    1834:	74697845 	strbtvc	r7, [r9], #-2117	; 0xfffff7bb
    1838:	76727000 	ldrbtvc	r7, [r2], -r0
    183c:	61657243 	cmnvs	r5, r3, asr #4
    1840:	61546574 	cmpvs	r4, r4, ror r5
    1844:	78006b73 	stmdavc	r0, {r0, r1, r4, r5, r6, r8, r9, fp, sp, lr}
    1848:	70616c45 	rsbvc	r6, r1, r5, asr #24
    184c:	54646573 	strbtpl	r6, [r4], #-1395	; 0xfffffa8d
    1850:	00656d69 	rsbeq	r6, r5, r9, ror #26
    1854:	6f624165 	svcvs	0x00624165
    1858:	6c537472 	cfldrdvs	mvd7, [r3], {114}	; 0x72
    185c:	00706565 	rsbseq	r6, r0, r5, ror #10
    1860:	74655365 	strbtvc	r5, [r5], #-869	; 0xfffffc9b
    1864:	756c6156 	strbvc	r6, [ip, #-342]!	; 0xfffffeaa
    1868:	74695765 	strbtvc	r5, [r9], #-1893	; 0xfffff89b
    186c:	65764f68 	ldrbvs	r4, [r6, #-3944]!	; 0xfffff098
    1870:	69727772 	ldmdbvs	r2!, {r1, r4, r5, r6, r8, r9, sl, ip, sp, lr}^
    1874:	78006574 	stmdavc	r0, {r2, r4, r5, r6, r8, sl, sp, lr}
    1878:	6b736154 	blvs	1cd9dd0 <__RAM_SIZE+0x1bd9dd0>
    187c:	54746547 	ldrbtpl	r6, [r4], #-1351	; 0xfffffab9
    1880:	436b6369 	cmnmi	fp, #-1543503871	; 0xa4000001
    1884:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
    1888:	6d6f7246 	sfmvs	f7, 2, [pc, #-280]!	; 1778 <__HEAP_SIZE+0x778>
    188c:	00525349 	subseq	r5, r2, r9, asr #6
    1890:	69426c75 	stmdbvs	r2, {r0, r2, r4, r5, r6, sl, fp, sp, lr}^
    1894:	6f547374 	svcvs	0x00547374
    1898:	61656c43 	cmnvs	r5, r3, asr #24
    189c:	456e4f72 	strbmi	r4, [lr, #-3954]!	; 0xfffff08e
    18a0:	7972746e 	ldmdbvc	r2!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
    18a4:	64497800 	strbvs	r7, [r9], #-2048	; 0xfffff800
    18a8:	6154656c 	cmpvs	r4, ip, ror #10
    18ac:	614e6b73 	hvcvs	59059	; 0xe6b3
    18b0:	6e49656d 	cdpvs	5, 4, cr6, cr9, cr13, {3}
    18b4:	00786564 	rsbseq	r6, r8, r4, ror #10
    18b8:	6e655078 	mcrvs	0, 3, r5, cr5, cr8, {3}
    18bc:	676e6964 	strbvs	r6, [lr, -r4, ror #18]!
    18c0:	64616552 	strbtvs	r6, [r1], #-1362	; 0xfffffaae
    18c4:	73694c79 	cmnvc	r9, #30976	; 0x7900
    18c8:	72700074 	rsbsvc	r0, r0, #116	; 0x74
    18cc:	65724376 	ldrbvs	r4, [r2, #-886]!	; 0xfffffc8a
    18d0:	53657461 	cmnpl	r5, #1627389952	; 0x61000000
    18d4:	69746174 	ldmdbvs	r4!, {r2, r4, r5, r6, r8, sp, lr}^
    18d8:	73615463 	cmnvc	r1, #1660944384	; 0x63000000
    18dc:	5478006b 	ldrbtpl	r0, [r8], #-107	; 0xffffff95
    18e0:	476b7361 	strbmi	r7, [fp, -r1, ror #6]!
    18e4:	70417465 	subvc	r7, r1, r5, ror #8
    18e8:	63696c70 	cmnvs	r9, #112, 24	; 0x7000
    18ec:	6f697461 	svcvs	0x00697461
    18f0:	7361546e 	cmnvc	r1, #1845493760	; 0x6e000000
    18f4:	6761546b 	strbvs	r5, [r1, -fp, ror #8]!
    18f8:	61547800 	cmpvs	r4, r0, lsl #16
    18fc:	57736b73 			; <UNDEFINED> instruction: 0x57736b73
    1900:	69746961 	ldmdbvs	r4!, {r0, r5, r6, r8, fp, sp, lr}^
    1904:	6554676e 	ldrbvs	r6, [r4, #-1902]	; 0xfffff892
    1908:	6e696d72 	mcrvs	13, 3, r6, cr9, cr2, {3}
    190c:	6f697461 	svcvs	0x00697461
    1910:	5476006e 	ldrbtpl	r0, [r6], #-110	; 0xffffff92
    1914:	526b7361 	rsbpl	r7, fp, #-2080374783	; 0x84000001
    1918:	74657365 	strbtvc	r7, [r5], #-869	; 0xfffffc9b
    191c:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
    1920:	78700065 	ldmdavc	r0!, {r0, r2, r5, r6}^
    1924:	706d6554 	rsbvc	r6, sp, r4, asr r5
    1928:	54787500 	ldrbtpl	r7, [r8], #-1280	; 0xfffffb00
    192c:	7355706f 	cmpvc	r5, #111	; 0x6f
    1930:	72506465 	subsvc	r6, r0, #1694498816	; 0x65000000
    1934:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    1938:	75007974 	strvc	r7, [r0, #-2420]	; 0xfffff68c
    193c:	73615478 	cmnvc	r1, #120, 8	; 0x78000000
    1940:	7465476b 	strbtvc	r4, [r5], #-1899	; 0xfffff895
    1944:	63617453 	cmnvs	r1, #1392508928	; 0x53000000
    1948:	6769486b 	strbvs	r4, [r9, -fp, ror #16]!
    194c:	74615768 	strbtvc	r5, [r1], #-1896	; 0xfffff898
    1950:	614d7265 	cmpvs	sp, r5, ror #4
    1954:	78006b72 	stmdavc	r0, {r1, r4, r5, r6, r8, r9, fp, sp, lr}
    1958:	6b736154 	blvs	1cd9eb0 <__RAM_SIZE+0x1bd9eb0>
    195c:	72636e49 	rsbvc	r6, r3, #1168	; 0x490
    1960:	6e656d65 	cdpvs	13, 6, cr6, cr5, cr5, {3}
    1964:	63695474 	cmnvs	r9, #116, 8	; 0x74000000
    1968:	5476006b 	ldrbtpl	r0, [r6], #-107	; 0xffffff95
    196c:	536b7361 	cmnpl	fp, #-2080374783	; 0x84000001
    1970:	54706574 	ldrbtpl	r6, [r0], #-1396	; 0xfffffa8c
    1974:	006b6369 	rsbeq	r6, fp, r9, ror #6
    1978:	74537875 	ldrbvc	r7, [r3], #-2165	; 0xfffff78b
    197c:	446b6361 	strbtmi	r6, [fp], #-865	; 0xfffffc9f
    1980:	68747065 	ldmdavs	r4!, {r0, r2, r5, r6, ip, sp, lr}^
    1984:	6f4e6500 	svcvs	0x004e6500
    1988:	79666974 	stmdbvc	r6!, {r2, r4, r5, r6, r8, fp, sp, lr}^
    198c:	69746341 	ldmdbvs	r4!, {r0, r6, r8, r9, sp, lr}^
    1990:	78006e6f 	stmdavc	r0, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}
    1994:	6b736154 	blvs	1cd9eec <__RAM_SIZE+0x1bd9eec>
    1998:	48746547 	ldmdami	r4!, {r0, r1, r2, r6, r8, sl, sp, lr}^
    199c:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
    19a0:	63750065 	cmnvs	r5, #101	; 0x65
    19a4:	616c6544 	cmnvs	ip, r4, asr #10
    19a8:	6f624179 	svcvs	0x00624179
    19ac:	64657472 	strbtvs	r7, [r5], #-1138	; 0xfffffb8e
    19b0:	61745300 	cmnvs	r4, r0, lsl #6
    19b4:	4c636974 			; <UNDEFINED> instruction: 0x4c636974
    19b8:	49747369 	ldmdbmi	r4!, {r0, r3, r5, r6, r8, r9, ip, sp, lr}^
    19bc:	5f6d6574 	svcpl	0x006d6574
    19c0:	54780074 	ldrbtpl	r0, [r8], #-116	; 0xffffff8c
    19c4:	436b6369 	cmnmi	fp, #-1543503871	; 0xa4000001
    19c8:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
    19cc:	61547600 	cmpvs	r4, r0, lsl #12
    19d0:	6e456b73 	vmovvs.8	d5[3], r6
    19d4:	68635364 	stmdavs	r3!, {r2, r5, r6, r8, r9, ip, lr}^
    19d8:	6c756465 	cfldrdvs	mvd6, [r5], #-404	; 0xfffffe6c
    19dc:	75007265 	strvc	r7, [r0, #-613]	; 0xfffffd9b
    19e0:	73615478 	cmnvc	r1, #120, 8	; 0x78000000
    19e4:	6972506b 	ldmdbvs	r2!, {r0, r1, r3, r5, r6, ip, lr}^
    19e8:	7469726f 	strbtvc	r7, [r9], #-623	; 0xfffffd91
    19ec:	74654779 	strbtvc	r4, [r5], #-1913	; 0xfffff887
    19f0:	6f437800 	svcvs	0x00437800
    19f4:	5474736e 	ldrbtpl	r7, [r4], #-878	; 0xfffffc92
    19f8:	436b6369 	cmnmi	fp, #-1543503871	; 0xa4000001
    19fc:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
    1a00:	75537800 	ldrbvc	r7, [r3, #-2048]	; 0xfffff800
    1a04:	6e657073 	mcrvs	0, 3, r7, cr5, cr3, {3}
    1a08:	54646564 	strbtpl	r6, [r4], #-1380	; 0xfffffa9c
    1a0c:	4c6b7361 	stclmi	3, cr7, [fp], #-388	; 0xfffffe7c
    1a10:	00747369 	rsbseq	r7, r4, r9, ror #6
    1a14:	614e6370 	hvcvs	58928	; 0xe630
    1a18:	7000656d 	andvc	r6, r0, sp, ror #10
    1a1c:	65764f78 	ldrbvs	r4, [r6, #-3960]!	; 0xfffff088
    1a20:	6f6c6672 	svcvs	0x006c6672
    1a24:	6c654477 	cfstrdvs	mvd4, [r5], #-476	; 0xfffffe24
    1a28:	64657961 	strbtvs	r7, [r5], #-2401	; 0xfffff69f
    1a2c:	6b736154 	blvs	1cd9f84 <__RAM_SIZE+0x1bd9f84>
    1a30:	7473694c 	ldrbtvc	r6, [r3], #-2380	; 0xfffff6b4
    1a34:	44787500 	ldrbtmi	r7, [r8], #-1280	; 0xfffffb00
    1a38:	796d6d75 	stmdbvc	sp!, {r0, r2, r4, r5, r6, r8, sl, fp, sp, lr}^
    1a3c:	72700035 	rsbsvc	r0, r0, #53	; 0x35
    1a40:	74654776 	strbtvc	r4, [r5], #-1910	; 0xfffff88a
    1a44:	65707845 	ldrbvs	r7, [r0, #-2117]!	; 0xfffff7bb
    1a48:	64657463 	strbtvs	r7, [r5], #-1123	; 0xfffffb9d
    1a4c:	656c6449 	strbvs	r6, [ip, #-1097]!	; 0xfffffbb7
    1a50:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    1a54:	64497800 	strbvs	r7, [r9], #-2048	; 0xfffff800
    1a58:	6154656c 	cmpvs	r4, ip, ror #10
    1a5c:	61486b73 	hvcvs	34483	; 0x86b3
    1a60:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
    1a64:	54650073 	strbtpl	r0, [r5], #-115	; 0xffffff8d
    1a68:	436b7361 	cmnmi	fp, #-2080374783	; 0x84000001
    1a6c:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
    1a70:	6c536d72 	mrrcvs	13, 7, r6, r3, cr2
    1a74:	4d706565 	cfldr64mi	mvdx6, [r0, #-404]!	; 0xfffffe6c
    1a78:	5365646f 	cmnpl	r5, #1862270976	; 0x6f000000
    1a7c:	75746174 	ldrbvc	r6, [r4, #-372]!	; 0xfffffe8c
    1a80:	6c750073 	ldclvs	0, cr0, [r5], #-460	; 0xfffffe34
    1a84:	69746f4e 	ldmdbvs	r4!, {r1, r2, r3, r6, r8, r9, sl, fp, sp, lr}^
    1a88:	64656966 	strbtvs	r6, [r5], #-2406	; 0xfffff69a
    1a8c:	756c6156 	strbvc	r6, [ip, #-342]!	; 0xfffffeaa
    1a90:	78700065 	ldmdavc	r0!, {r0, r2, r5, r6}^
    1a94:	75746552 	ldrbvc	r6, [r4, #-1362]!	; 0xfffffaae
    1a98:	76006e72 			; <UNDEFINED> instruction: 0x76006e72
    1a9c:	6b736154 	blvs	1cd9ff4 <__RAM_SIZE+0x1bd9ff4>
    1aa0:	6f6d6552 	svcvs	0x006d6552
    1aa4:	72466576 	subvc	r6, r6, #494927872	; 0x1d800000
    1aa8:	6e556d6f 	cdpvs	13, 5, cr6, cr5, cr15, {3}
    1aac:	6564726f 	strbvs	r7, [r4, #-623]!	; 0xfffffd91
    1ab0:	45646572 	strbmi	r6, [r4, #-1394]!	; 0xfffffa8e
    1ab4:	746e6576 	strbtvc	r6, [lr], #-1398	; 0xfffffa8a
    1ab8:	7473694c 	ldrbtvc	r6, [r3], #-2380	; 0xfffff6b4
    1abc:	4d787500 	cfldr64mi	mvdx7, [r8, #-0]
    1ac0:	78657475 	stmdavc	r5!, {r0, r2, r4, r5, r6, sl, ip, sp, lr}^
    1ac4:	65487365 	strbvs	r7, [r8, #-869]	; 0xfffffc9b
    1ac8:	6500646c 	strvs	r6, [r0, #-1132]	; 0xfffffb94
    1acc:	56746553 			; <UNDEFINED> instruction: 0x56746553
    1ad0:	65756c61 	ldrbvs	r6, [r5, #-3169]!	; 0xfffff39f
    1ad4:	68746957 	ldmdavs	r4!, {r0, r1, r2, r4, r6, r8, fp, sp, lr}^
    1ad8:	4f74756f 	svcmi	0x0074756f
    1adc:	77726576 			; <UNDEFINED> instruction: 0x77726576
    1ae0:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
    1ae4:	61547800 	cmpvs	r4, r0, lsl #16
    1ae8:	65476b73 	strbvs	r6, [r7, #-2931]	; 0xfffff48d
    1aec:	6972656e 	ldmdbvs	r2!, {r1, r2, r3, r5, r6, r8, sl, sp, lr}^
    1af0:	746f4e63 	strbtvc	r4, [pc], #-3683	; 1af8 <__HEAP_SIZE+0xaf8>
    1af4:	57796669 	ldrbpl	r6, [r9, -r9, ror #12]!
    1af8:	00746961 	rsbseq	r6, r4, r1, ror #18
    1afc:	6f685378 	svcvs	0x00685378
    1b00:	44646c75 	strbtmi	r6, [r4], #-3189	; 0xfffff38b
    1b04:	79616c65 	stmdbvc	r1!, {r0, r2, r5, r6, sl, fp, sp, lr}^
    1b08:	76727000 	ldrbtvc	r7, [r2], -r0
    1b0c:	656c6449 	strbvs	r6, [ip, #-1097]!	; 0xfffffbb7
    1b10:	6b736154 	blvs	1cda068 <__RAM_SIZE+0x1bda068>
    1b14:	76727000 	ldrbtvc	r7, [r2], -r0
    1b18:	72616553 	rsbvc	r6, r1, #348127232	; 0x14c00000
    1b1c:	6f466863 	svcvs	0x00466863
    1b20:	6d614e72 	stclvs	14, cr4, [r1, #-456]!	; 0xfffffe38
    1b24:	74695765 	strbtvc	r5, [r9], #-1893	; 0xfffff89b
    1b28:	536e6968 	cmnpl	lr, #104, 18	; 0x1a0000
    1b2c:	6c676e69 	stclvs	14, cr6, [r7], #-420	; 0xfffffe5c
    1b30:	73694c65 	cmnvc	r9, #25856	; 0x6500
    1b34:	6c750074 	ldclvs	0, cr0, [r5], #-464	; 0xfffffe30
    1b38:	6b736154 	blvs	1cda090 <__RAM_SIZE+0x1bda090>
    1b3c:	656e6547 	strbvs	r6, [lr, #-1351]!	; 0xfffffab9
    1b40:	4e636972 			; <UNDEFINED> instruction: 0x4e636972
    1b44:	6669746f 	strbtvs	r7, [r9], -pc, ror #8
    1b48:	6b615479 	blvs	1856d34 <__RAM_SIZE+0x1756d34>
    1b4c:	72700065 	rsbsvc	r0, r0, #101	; 0x65
    1b50:	64644176 	strbtvs	r4, [r4], #-374	; 0xfffffe8a
    1b54:	5477654e 	ldrbtpl	r6, [r7], #-1358	; 0xfffffab2
    1b58:	546b7361 	strbtpl	r7, [fp], #-865	; 0xfffffc9f
    1b5c:	6165526f 	cmnvs	r5, pc, ror #4
    1b60:	694c7964 	stmdbvs	ip, {r2, r5, r6, r8, fp, ip, sp, lr}^
    1b64:	70007473 	andvc	r7, r0, r3, ror r4
    1b68:	6f6f4878 	svcvs	0x006f4878
    1b6c:	6e75466b 	cdpvs	6, 7, cr4, cr5, cr11, {3}
    1b70:	6f697463 	svcvs	0x00697463
    1b74:	5265006e 	rsbpl	r0, r5, #110	; 0x6e
    1b78:	79646165 	stmdbvc	r4!, {r0, r2, r5, r6, r8, sp, lr}^
    1b7c:	76727000 	ldrbtvc	r7, [r2], -r0
    1b80:	61657243 	cmnvs	r5, r3, asr #4
    1b84:	64496574 	strbvs	r6, [r9], #-1396	; 0xfffffa8c
    1b88:	6154656c 	cmpvs	r4, ip, ror #10
    1b8c:	00736b73 	rsbseq	r6, r3, r3, ror fp
    1b90:	73615465 	cmnvc	r1, #1694498816	; 0x65000000
    1b94:	7465476b 	strbtvc	r4, [r5], #-1899	; 0xfffff895
    1b98:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
    1b9c:	70700065 	rsbsvc	r0, r0, r5, rrx
    1ba0:	74537875 	ldrbvc	r7, [r3], #-2165	; 0xfffff78b
    1ba4:	426b6361 	rsbmi	r6, fp, #-2080374783	; 0x84000001
    1ba8:	65666675 	strbvs	r6, [r6, #-1653]!	; 0xfffff98b
    1bac:	78700072 	ldmdavc	r0!, {r1, r4, r5, r6}^
    1bb0:	5477654e 	ldrbtpl	r6, [r7], #-1358	; 0xfffffab2
    1bb4:	75004243 	strvc	r4, [r0, #-579]	; 0xfffffdbd
    1bb8:	65755178 	ldrbvs	r5, [r5, #-376]!	; 0xfffffe88
    1bbc:	70006575 	andvc	r6, r0, r5, ror r5
    1bc0:	69547870 	ldmdbvs	r4, {r4, r5, r6, fp, ip, sp, lr}^
    1bc4:	5472656d 	ldrbtpl	r6, [r2], #-1389	; 0xfffffa93
    1bc8:	536b7361 	cmnpl	fp, #-2080374783	; 0x84000001
    1bcc:	6b636174 	blvs	18da1a4 <__RAM_SIZE+0x17da1a4>
    1bd0:	66667542 	strbtvs	r7, [r6], -r2, asr #10
    1bd4:	78007265 	stmdavc	r0, {r0, r2, r5, r6, r9, ip, sp, lr}
    1bd8:	6c656959 			; <UNDEFINED> instruction: 0x6c656959
    1bdc:	63634f64 	cmnvs	r3, #100, 30	; 0x190
    1be0:	65727275 	ldrbvs	r7, [r2, #-629]!	; 0xfffffd8b
    1be4:	654d0064 	strbvs	r0, [sp, #-100]	; 0xffffff9c
    1be8:	79726f6d 	ldmdbvc	r2!, {r0, r2, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    1bec:	69676552 	stmdbvs	r7!, {r1, r4, r6, r8, sl, sp, lr}^
    1bf0:	745f6e6f 	ldrbvc	r6, [pc], #-3695	; 1bf8 <__HEAP_SIZE+0xbf8>
    1bf4:	654e7800 	strbvs	r7, [lr, #-2048]	; 0xfffff800
    1bf8:	61547478 	cmpvs	r4, r8, ror r4
    1bfc:	6e556b73 	vmovvs.s8	r6, d5[3]
    1c00:	636f6c62 	cmnvs	pc, #25088	; 0x6200
    1c04:	6d69546b 	cfstrdvs	mvd5, [r9, #-428]!	; 0xfffffe54
    1c08:	78700065 	ldmdavc	r0!, {r0, r2, r5, r6}^
    1c0c:	74726f50 	ldrbtvc	r6, [r2], #-3920	; 0xfffff0b0
    1c10:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xfffff1b7
    1c14:	696c6169 	stmdbvs	ip!, {r0, r3, r5, r6, r8, sp, lr}^
    1c18:	74536573 	ldrbvc	r6, [r3], #-1395	; 0xfffffa8d
    1c1c:	006b6361 	rsbeq	r6, fp, r1, ror #6
    1c20:	75447870 	strbvc	r7, [r4, #-2160]	; 0xfffff790
    1c24:	31796d6d 	cmncc	r9, sp, ror #26
    1c28:	44637500 	strbtmi	r7, [r3], #-1280	; 0xfffffb00
    1c2c:	796d6d75 	stmdbvc	sp!, {r0, r2, r4, r5, r6, r8, sl, fp, sp, lr}^
    1c30:	70003931 	andvc	r3, r0, r1, lsr r9
    1c34:	6d754478 	cfldrdvs	mvd4, [r5, #-480]!	; 0xfffffe20
    1c38:	0036796d 	eorseq	r7, r6, sp, ror #18
    1c3c:	6c654465 	cfstrdvs	mvd4, [r5], #-404	; 0xfffffe6c
    1c40:	64657465 	strbtvs	r7, [r5], #-1125	; 0xfffffb9b
    1c44:	546c7500 	strbtpl	r7, [ip], #-1280	; 0xfffffb00
    1c48:	476b7361 	strbmi	r7, [fp, -r1, ror #6]!
    1c4c:	72656e65 	rsbvc	r6, r5, #1616	; 0x650
    1c50:	6f4e6369 	svcvs	0x004e6369
    1c54:	79666974 	stmdbvc	r6!, {r2, r4, r5, r6, r8, fp, sp, lr}^
    1c58:	756c6156 	strbvc	r6, [ip, #-342]!	; 0xfffffeaa
    1c5c:	656c4365 	strbvs	r4, [ip, #-869]!	; 0xfffffc9b
    1c60:	75007261 	strvc	r7, [r0, #-609]	; 0xfffffd9f
    1c64:	6e654c6c 	cdpvs	12, 6, cr4, cr5, cr12, {3}
    1c68:	49687467 	stmdbmi	r8!, {r0, r1, r2, r5, r6, sl, ip, sp, lr}^
    1c6c:	7479426e 	ldrbtvc	r4, [r9], #-622	; 0xfffffd92
    1c70:	70007365 	andvc	r7, r0, r5, ror #6
    1c74:	64497870 	strbvs	r7, [r9], #-2160	; 0xfffff790
    1c78:	6154656c 	cmpvs	r4, ip, ror #10
    1c7c:	43546b73 	cmpmi	r4, #117760	; 0x1cc00
    1c80:	66754242 	ldrbtvs	r4, [r5], -r2, asr #4
    1c84:	00726566 	rsbseq	r6, r2, r6, ror #10
    1c88:	52767270 	rsbspl	r7, r6, #112, 4
    1c8c:	74657365 	strbtvc	r7, [r5], #-869	; 0xfffffc9b
    1c90:	7478654e 	ldrbtvc	r6, [r8], #-1358	; 0xfffffab2
    1c94:	6b736154 	blvs	1cda1ec <__RAM_SIZE+0x1bda1ec>
    1c98:	6c626e55 	stclvs	14, cr6, [r2], #-340	; 0xfffffeac
    1c9c:	546b636f 	strbtpl	r6, [fp], #-879	; 0xfffffc91
    1ca0:	00656d69 	rsbeq	r6, r5, r9, ror #26
    1ca4:	654e7875 	strbvs	r7, [lr, #-2165]	; 0xfffff78b
    1ca8:	69725077 	ldmdbvs	r2!, {r0, r1, r2, r4, r5, r6, ip, lr}^
    1cac:	7469726f 	strbtvc	r7, [r9], #-623	; 0xfffffd91
    1cb0:	61540079 	cmpvs	r4, r9, ror r0
    1cb4:	75466b73 	strbvc	r6, [r6, #-2931]	; 0xfffff48d
    1cb8:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
    1cbc:	745f6e6f 	ldrbvc	r6, [pc], #-3695	; 1cc4 <__HEAP_SIZE+0xcc4>
    1cc0:	6c757000 	ldclvs	0, cr7, [r5], #-0
    1cc4:	76657250 			; <UNDEFINED> instruction: 0x76657250
    1cc8:	73756f69 	cmnvc	r5, #420	; 0x1a4
    1ccc:	69746f4e 	ldmdbvs	r4!, {r1, r2, r3, r6, r8, r9, sl, fp, sp, lr}^
    1cd0:	61636966 	cmnvs	r3, r6, ror #18
    1cd4:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    1cd8:	756c6156 	strbvc	r6, [ip, #-342]!	; 0xfffffeaa
    1cdc:	78700065 	ldmdavc	r0!, {r0, r2, r5, r6}^
    1ce0:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    1ce4:	0074754f 	rsbseq	r7, r4, pc, asr #10
    1ce8:	61547875 	cmpvs	r4, r5, ror r8
    1cec:	72506b73 	subsvc	r6, r0, #117760	; 0x1cc00
    1cf0:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    1cf4:	65477974 	strbvs	r7, [r7, #-2420]	; 0xfffff68c
    1cf8:	6f724674 	svcvs	0x00724674
    1cfc:	5253496d 	subspl	r4, r3, #1785856	; 0x1b4000
    1d00:	44637500 	strbtmi	r7, [r3], #-1280	; 0xfffffb00
    1d04:	796d6d75 	stmdbvc	sp!, {r0, r2, r4, r5, r6, r8, sl, fp, sp, lr}^
    1d08:	78003132 	stmdavc	r0, {r1, r4, r5, r8, ip, sp}
    1d0c:	6b736154 	blvs	1cda264 <__RAM_SIZE+0x1bda264>
    1d10:	54746547 	ldrbtpl	r6, [r4], #-1351	; 0xfffffab9
    1d14:	436b6369 	cmnmi	fp, #-1543503871	; 0xa4000001
    1d18:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
    1d1c:	69547800 	ldmdbvs	r4, {fp, ip, sp, lr}^
    1d20:	54736b63 	ldrbtpl	r6, [r3], #-2915	; 0xfffff49d
    1d24:	6d754a6f 	vldmdbvs	r5!, {s9-s119}
    1d28:	78750070 	ldmdavc	r5!, {r4, r5, r6}^
    1d2c:	6b736154 	blvs	1cda284 <__RAM_SIZE+0x1bda284>
    1d30:	626d754e 	rsbvs	r7, sp, #327155712	; 0x13800000
    1d34:	65007265 	strvs	r7, [r0, #-613]	; 0xfffffd9b
    1d38:	69746341 	ldmdbvs	r4!, {r0, r6, r8, r9, sp, lr}^
    1d3c:	75006e6f 	strvc	r6, [r0, #-3695]	; 0xfffff191
    1d40:	73615478 	cmnvc	r1, #120, 8	; 0x78000000
    1d44:	7365526b 	cmnvc	r5, #-1342177274	; 0xb0000006
    1d48:	76457465 	strbvc	r7, [r5], -r5, ror #8
    1d4c:	49746e65 	ldmdbmi	r4!, {r0, r2, r5, r6, r9, sl, fp, sp, lr}^
    1d50:	566d6574 			; <UNDEFINED> instruction: 0x566d6574
    1d54:	65756c61 	ldrbvs	r6, [r5, #-3169]!	; 0xfffff39f
    1d58:	61547600 	cmpvs	r4, r0, lsl #12
    1d5c:	72506b73 	subsvc	r6, r0, #117760	; 0x1cc00
    1d60:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    1d64:	65537974 	ldrbvs	r7, [r3, #-2420]	; 0xfffff68c
    1d68:	78750074 	ldmdavc	r5!, {r2, r4, r5, r6}^
    1d6c:	6b736154 	blvs	1cda2c4 <__RAM_SIZE+0x1bda2c4>
    1d70:	65736142 	ldrbvs	r6, [r3, #-322]!	; 0xfffffebe
    1d74:	6f697250 	svcvs	0x00697250
    1d78:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    1d7c:	46746547 	ldrbtmi	r6, [r4], -r7, asr #10
    1d80:	496d6f72 	stmdbmi	sp!, {r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
    1d84:	65005253 	strvs	r5, [r0, #-595]	; 0xfffffdad
    1d88:	6b736154 	blvs	1cda2e0 <__RAM_SIZE+0x1bda2e0>
    1d8c:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
    1d90:	70700065 	rsbsvc	r0, r0, r5, rrx
    1d94:	73615478 	cmnvc	r1, #120, 8	; 0x78000000
    1d98:	6675426b 	ldrbtvs	r4, [r5], -fp, ror #4
    1d9c:	00726566 	rsbseq	r6, r2, r6, ror #10
    1da0:	6e457870 	mcrvs	8, 2, r7, cr5, cr0, {3}
    1da4:	72614d64 	rsbvc	r4, r1, #100, 26	; 0x1900
    1da8:	0072656b 	rsbseq	r6, r2, fp, ror #10
    1dac:	49787570 	ldmdbmi	r8!, {r4, r5, r6, r8, sl, ip, sp, lr}^
    1db0:	54656c64 	strbtpl	r6, [r5], #-3172	; 0xfffff39c
    1db4:	536b7361 	cmnpl	fp, #-2080374783	; 0x84000001
    1db8:	6b636174 	blvs	18da390 <__RAM_SIZE+0x17da390>
    1dbc:	657a6953 	ldrbvs	r6, [sl, #-2387]!	; 0xfffff6ad
    1dc0:	61547800 	cmpvs	r4, r0, lsl #16
    1dc4:	6f546b73 	svcvs	0x00546b73
    1dc8:	69746f4e 	ldmdbvs	r4!, {r1, r2, r3, r6, r8, r9, sl, fp, sp, lr}^
    1dcc:	78007966 	stmdavc	r0, {r1, r2, r5, r6, r8, fp, ip, sp, lr}
    1dd0:	6b736154 	blvs	1cda328 <__RAM_SIZE+0x1bda328>
    1dd4:	44787000 	ldrbtmi	r7, [r8], #-0
    1dd8:	796d6d75 	stmdbvc	sp!, {r0, r2, r4, r5, r6, r8, sl, fp, sp, lr}^
    1ddc:	78003431 	stmdavc	r0, {r0, r4, r5, sl, ip, sp}
    1de0:	6b736154 	blvs	1cda338 <__RAM_SIZE+0x1bda338>
    1de4:	75516f54 	ldrbvc	r6, [r1, #-3924]	; 0xfffff0ac
    1de8:	00797265 	rsbseq	r7, r9, r5, ror #4
    1dec:	74655365 	strbtvc	r5, [r5], #-869	; 0xfffffc9b
    1df0:	73746942 	cmnvc	r4, #1081344	; 0x108000
    1df4:	454d7800 	strbmi	r7, [sp, #-2048]	; 0xfffff800
    1df8:	59524f4d 	ldmdbpl	r2, {r0, r2, r3, r6, r8, r9, sl, fp, lr}^
    1dfc:	4745525f 	smlsldmi	r5, r5, pc, r2	; <UNPREDICTABLE>
    1e00:	004e4f49 	subeq	r4, lr, r9, asr #30
    1e04:	75437875 	strbvc	r7, [r3, #-2165]	; 0xfffff78b
    1e08:	6e657272 	mcrvs	2, 3, r7, cr5, cr2, {3}
    1e0c:	73694c74 	cmnvc	r9, #116, 24	; 0x7400
    1e10:	6e654c74 	mcrvs	12, 3, r4, cr5, cr4, {3}
    1e14:	00687467 	rsbeq	r7, r8, r7, ror #8
    1e18:	73615476 	cmnvc	r1, #1979711488	; 0x76000000
    1e1c:	6c65446b 	cfstrdvs	mvd4, [r5], #-428	; 0xfffffe54
    1e20:	00657465 	rsbeq	r7, r5, r5, ror #8
    1e24:	75446375 	strbvc	r6, [r4, #-885]	; 0xfffffc8b
    1e28:	37796d6d 	ldrbcc	r6, [r9, -sp, ror #26]!
    1e2c:	61547800 	cmpvs	r4, r0, lsl #16
    1e30:	61436b73 	hvcvs	14003	; 0x36b3
    1e34:	70416c6c 	subvc	r6, r1, ip, ror #24
    1e38:	63696c70 	cmnvs	r9, #112, 24	; 0x7000
    1e3c:	6f697461 	svcvs	0x00697461
    1e40:	7361546e 	cmnvc	r1, #1845493760	; 0x6e000000
    1e44:	6f6f486b 	svcvs	0x006f486b
    1e48:	7875006b 	ldmdavc	r5!, {r0, r1, r3, r5, r6}^
    1e4c:	6f697250 	svcvs	0x00697250
    1e50:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    1e54:	73556f54 	cmpvc	r5, #84, 30	; 0x150
    1e58:	54760065 	ldrbtpl	r0, [r6], #-101	; 0xffffff9b
    1e5c:	536b7361 	cmnpl	fp, #-2080374783	; 0x84000001
    1e60:	63746977 	cmnvs	r4, #1949696	; 0x1dc000
    1e64:	6e6f4368 	cdpvs	3, 6, cr4, cr15, cr8, {3}
    1e68:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
    1e6c:	754e7800 	strbvc	r7, [lr, #-2048]	; 0xfffff800
    1e70:	4f664f6d 	svcmi	0x00664f6d
    1e74:	66726576 			; <UNDEFINED> instruction: 0x66726576
    1e78:	73776f6c 	cmnvc	r7, #108, 30	; 0x1b0
    1e7c:	72427800 	subvc	r7, r2, #0, 16
    1e80:	4c6b6165 	stfmie	f6, [fp], #-404	; 0xfffffe6c
    1e84:	00706f6f 	rsbseq	r6, r0, pc, ror #30
    1e88:	73615478 	cmnvc	r1, #120, 8	; 0x78000000
    1e8c:	7465476b 	strbtvc	r4, [r5], #-1899	; 0xfffff895
    1e90:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
    1e94:	75426369 	strbvc	r6, [r2, #-873]	; 0xfffffc97
    1e98:	72656666 	rsbvc	r6, r5, #106954752	; 0x6600000
    1e9c:	78700073 	ldmdavc	r0!, {r0, r1, r4, r5, r6}^
    1ea0:	72727543 	rsbsvc	r7, r2, #281018368	; 0x10c00000
    1ea4:	54746e65 	ldrbtpl	r6, [r4], #-3685	; 0xfffff19b
    1ea8:	75004243 	strvc	r4, [r0, #-579]	; 0xfffffdbd
    1eac:	67694878 			; <UNDEFINED> instruction: 0x67694878
    1eb0:	74736568 	ldrbtvc	r6, [r3], #-1384	; 0xfffffa98
    1eb4:	6f697250 	svcvs	0x00697250
    1eb8:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    1ebc:	74696157 	strbtvc	r6, [r9], #-343	; 0xfffffea9
    1ec0:	54676e69 	strbtpl	r6, [r7], #-3689	; 0xfffff197
    1ec4:	006b7361 	rsbeq	r7, fp, r1, ror #6
    1ec8:	6f685378 	svcvs	0x00685378
    1ecc:	42646c75 	rsbmi	r6, r4, #29952	; 0x7500
    1ed0:	6b636f6c 	blvs	18ddc88 <__RAM_SIZE+0x17ddc88>
    1ed4:	654e6300 	strbvs	r6, [lr, #-768]	; 0xfffffd00
    1ed8:	68437478 	stmdavs	r3, {r3, r4, r5, r6, sl, ip, sp, lr}^
    1edc:	70007261 	andvc	r7, r0, r1, ror #4
    1ee0:	73615478 	cmnvc	r1, #120, 8	; 0x78000000
    1ee4:	6761546b 	strbvs	r5, [r1, -fp, ror #8]!
    1ee8:	76727000 	ldrbtvc	r7, [r2], -r0
    1eec:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xfffff1b7
    1ef0:	696c6169 	stmdbvs	ip!, {r0, r3, r5, r6, r8, sp, lr}^
    1ef4:	654e6573 	strbvs	r6, [lr, #-1395]	; 0xfffffa8d
    1ef8:	73615477 	cmnvc	r1, #1996488704	; 0x77000000
    1efc:	7670006b 	ldrbtvc	r0, [r0], -fp, rrx
    1f00:	61726150 	cmnvs	r2, r0, asr r1
    1f04:	6574656d 	ldrbvs	r6, [r4, #-1389]!	; 0xfffffa93
    1f08:	70007372 	andvc	r7, r0, r2, ror r3
    1f0c:	6c654478 	cfstrdvs	mvd4, [r5], #-480	; 0xfffffe20
    1f10:	64657961 	strbtvs	r7, [r5], #-2401	; 0xfffff69f
    1f14:	6b736154 	blvs	1cda46c <__RAM_SIZE+0x1bda46c>
    1f18:	7473694c 	ldrbtvc	r6, [r3], #-2380	; 0xfffff6b4
    1f1c:	76727000 	ldrbtvc	r7, [r2], -r0
    1f20:	6b736154 	blvs	1cda478 <__RAM_SIZE+0x1bda478>
    1f24:	61547349 	cmpvs	r4, r9, asr #6
    1f28:	75536b73 	ldrbvc	r6, [r3, #-2931]	; 0xfffff48d
    1f2c:	6e657073 	mcrvs	0, 3, r7, cr5, cr3, {3}
    1f30:	00646564 	rsbeq	r6, r4, r4, ror #10
    1f34:	69775378 	ldmdbvs	r7!, {r3, r4, r5, r6, r8, r9, ip, lr}^
    1f38:	52686374 	rsbpl	r6, r8, #116, 6	; 0xd0000001
    1f3c:	69757165 	ldmdbvs	r5!, {r0, r2, r5, r6, r8, ip, sp, lr}^
    1f40:	00646572 	rsbeq	r6, r4, r2, ror r5
    1f44:	754d7870 	strbvc	r7, [sp, #-2160]	; 0xfffff790
    1f48:	48786574 	ldmdami	r8!, {r2, r4, r5, r6, r8, sl, sp, lr}^
    1f4c:	65646c6f 	strbvs	r6, [r4, #-3183]!	; 0xfffff391
    1f50:	78700072 	ldmdavc	r0!, {r1, r4, r5, r6}^
    1f54:	63617453 	cmnvs	r1, #1392508928	; 0x53000000
    1f58:	7070006b 	rsbsvc	r0, r0, fp, rrx
    1f5c:	6d695478 	cfstrdvs	mvd5, [r9, #-480]!	; 0xfffffe20
    1f60:	61547265 	cmpvs	r4, r5, ror #4
    1f64:	43546b73 	cmpmi	r4, #117760	; 0x1cc00
    1f68:	66754242 	ldrbtvs	r4, [r5], -r2, asr #4
    1f6c:	00726566 	rsbseq	r6, r2, r6, ror #10
    1f70:	73615478 	cmnvc	r1, #120, 8	; 0x78000000
    1f74:	446f546b 	strbtmi	r5, [pc], #-1131	; 1f7c <__HEAP_SIZE+0xf7c>
    1f78:	74656c65 	strbtvc	r6, [r5], #-3173	; 0xfffff39b
    1f7c:	6c750065 	ldclvs	0, cr0, [r5], #-404	; 0xfffffe6c
    1f80:	756c6156 	strbvc	r6, [ip, #-342]!	; 0xfffffeaa
    1f84:	54780065 	ldrbtpl	r0, [r8], #-101	; 0xffffff9b
    1f88:	546b7361 	strbtpl	r7, [fp], #-865	; 0xfffffc9f
    1f8c:	7375536f 	cmnvc	r5, #-1140850687	; 0xbc000001
    1f90:	646e6570 	strbtvs	r6, [lr], #-1392	; 0xfffffa90
    1f94:	6f507600 	svcvs	0x00507600
    1f98:	6e457472 	mcrvs	4, 2, r7, cr5, cr2, {3}
    1f9c:	68635364 	stmdavs	r3!, {r2, r5, r6, r8, r9, ip, lr}^
    1fa0:	6c756465 	cfldrdvs	mvd6, [r5], #-404	; 0xfffffe6c
    1fa4:	70007265 	andvc	r7, r0, r5, ror #4
    1fa8:	6c644978 			; <UNDEFINED> instruction: 0x6c644978
    1fac:	73615465 	cmnvc	r1, #1694498816	; 0x65000000
    1fb0:	6e75466b 	cdpvs	6, 7, cr4, cr5, cr11, {3}
    1fb4:	6f697463 	svcvs	0x00697463
    1fb8:	7870006e 	ldmdavc	r0!, {r1, r2, r3, r5, r6}^
    1fbc:	76657250 			; <UNDEFINED> instruction: 0x76657250
    1fc0:	73756f69 	cmnvc	r5, #420	; 0x1a4
    1fc4:	656b6157 	strbvs	r6, [fp, #-343]!	; 0xfffffea9
    1fc8:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    1fcc:	54537800 	ldrbpl	r7, [r3], #-2048	; 0xfffff800
    1fd0:	43495441 	movtmi	r5, #37953	; 0x9441
    1fd4:	4243545f 	submi	r5, r3, #1593835520	; 0x5f000000
    1fd8:	61547800 	cmpvs	r4, r0, lsl #16
    1fdc:	62416b73 	subvs	r6, r1, #117760	; 0x1cc00
    1fe0:	4474726f 	ldrbtmi	r7, [r4], #-623	; 0xfffffd91
    1fe4:	79616c65 	stmdbvc	r1!, {r0, r2, r5, r6, sl, fp, sp, lr}^
    1fe8:	61547800 	cmpvs	r4, r0, lsl #16
    1fec:	65526b73 	ldrbvs	r6, [r2, #-2931]	; 0xfffff48d
    1ff0:	656d7573 	strbvs	r7, [sp, #-1395]!	; 0xfffffa8d
    1ff4:	6d6f7246 	sfmvs	f7, 2, [pc, #-280]!	; 1ee4 <__HEAP_SIZE+0xee4>
    1ff8:	00525349 	subseq	r5, r2, r9, asr #6
    1ffc:	75446c75 	strbvc	r6, [r4, #-3189]	; 0xfffff38b
    2000:	31796d6d 	cmncc	r9, sp, ror #26
    2004:	75700038 	ldrbvc	r0, [r0, #-56]!	; 0xffffffc8
    2008:	746f4e6c 	strbtvc	r4, [pc], #-3692	; 2010 <__HEAP_SIZE+0x1010>
    200c:	63696669 	cmnvs	r9, #110100480	; 0x6900000
    2010:	6f697461 	svcvs	0x00697461
    2014:	6c61566e 	stclvs	6, cr5, [r1], #-440	; 0xfffffe48
    2018:	75006575 	strvc	r6, [r0, #-1397]	; 0xfffffa8b
    201c:	6c644978 			; <UNDEFINED> instruction: 0x6c644978
    2020:	73615465 	cmnvc	r1, #1694498816	; 0x65000000
    2024:	6174536b 	cmnvs	r4, fp, ror #6
    2028:	54006b63 	strpl	r6, [r0], #-2915	; 0xfffff49d
    202c:	486b7361 	stmdami	fp!, {r0, r5, r6, r8, r9, ip, sp, lr}^
    2030:	466b6f6f 	strbtmi	r6, [fp], -pc, ror #30
    2034:	74636e75 	strbtvc	r6, [r3], #-3701	; 0xfffff18b
    2038:	5f6e6f69 	svcpl	0x006e6f69
    203c:	53650074 	cmnpl	r5, #116	; 0x74
    2040:	646e6174 	strbtvs	r6, [lr], #-372	; 0xfffffe8c
    2044:	53647261 	cmnpl	r4, #268435462	; 0x10000006
    2048:	7065656c 	rsbvc	r6, r5, ip, ror #10
    204c:	43787500 	cmnmi	r8, #0, 10
    2050:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
    2054:	6f4e6500 	svcvs	0x004e6500
    2058:	6b736154 	blvs	1cda5b0 <__RAM_SIZE+0x1bda5b0>
    205c:	69615773 	stmdbvs	r1!, {r0, r1, r4, r5, r6, r8, r9, sl, ip, lr}^
    2060:	676e6974 			; <UNDEFINED> instruction: 0x676e6974
    2064:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    2068:	0074756f 	rsbseq	r7, r4, pc, ror #10
    206c:	45637570 	strbmi	r7, [r3, #-1392]!	; 0xfffffa90
    2070:	664f646e 	strbvs	r6, [pc], -lr, ror #8
    2074:	63617453 	cmnvs	r1, #1392508928	; 0x53000000
    2078:	7870006b 	ldmdavc	r0!, {r0, r1, r3, r5, r6}^
    207c:	6574754d 	ldrbvs	r7, [r4, #-1357]!	; 0xfffffab3
    2080:	6c6f4878 	stclvs	8, cr4, [pc], #-480	; 1ea8 <__HEAP_SIZE+0xea8>
    2084:	54726564 	ldrbtpl	r6, [r2], #-1380	; 0xfffffa9c
    2088:	70004243 	andvc	r4, r0, r3, asr #4
    208c:	73615463 	cmnvc	r1, #1660944384	; 0x63000000
    2090:	7465476b 	strbtvc	r4, [r5], #-1899	; 0xfffff895
    2094:	656d614e 	strbvs	r6, [sp, #-334]!	; 0xfffffeb2
    2098:	69547800 	ldmdbvs	r4, {fp, ip, sp, lr}^
    209c:	00736b63 	rsbseq	r6, r3, r3, ror #22
    20a0:	6e614378 	mcrvs	3, 3, r4, cr1, cr8, {3}
    20a4:	636f6c42 	cmnvs	pc, #16896	; 0x4200
    20a8:	646e496b 	strbtvs	r4, [lr], #-2411	; 0xfffff695
    20ac:	6e696665 	cdpvs	6, 6, cr6, cr9, cr5, {3}
    20b0:	6c657469 	cfstrdvs	mvd7, [r5], #-420	; 0xfffffe5c
    20b4:	52650079 	rsbpl	r0, r5, #121	; 0x79
    20b8:	696e6e75 	stmdbvs	lr!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
    20bc:	7000676e 	andvc	r6, r0, lr, ror #14
    20c0:	6d614e63 	stclvs	14, cr4, [r1, #-396]!	; 0xfffffe74
    20c4:	516f5465 	cmnpl	pc, r5, ror #8
    20c8:	79726575 	ldmdbvc	r2!, {r0, r2, r4, r5, r6, r8, sl, sp, lr}^
    20cc:	42767000 	rsbsmi	r7, r6, #0
    20d0:	41657361 	cmnmi	r5, r1, ror #6
    20d4:	65726464 	ldrbvs	r6, [r2, #-1124]!	; 0xfffffb9c
    20d8:	78007373 	stmdavc	r0, {r0, r1, r4, r5, r6, r8, r9, ip, sp, lr}
    20dc:	6b636954 	blvs	18dc634 <__RAM_SIZE+0x17dc634>
    20e0:	446f5473 	strbtmi	r5, [pc], #-1139	; 20e8 <__HEAP_SIZE+0x10e8>
    20e4:	79616c65 	stmdbvc	r1!, {r0, r2, r5, r6, sl, fp, sp, lr}^
    20e8:	61547600 	cmpvs	r4, r0, lsl #12
    20ec:	65476b73 	strbvs	r6, [r7, #-2931]	; 0xfffff48d
    20f0:	6972656e 	ldmdbvs	r2!, {r1, r2, r3, r5, r6, r8, sl, sp, lr}^
    20f4:	746f4e63 	strbtvc	r4, [pc], #-3683	; 20fc <__HEAP_SIZE+0x10fc>
    20f8:	47796669 	ldrbmi	r6, [r9, -r9, ror #12]!
    20fc:	46657669 	strbtmi	r7, [r5], -r9, ror #12
    2100:	496d6f72 	stmdbmi	sp!, {r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
    2104:	76005253 			; <UNDEFINED> instruction: 0x76005253
    2108:	74726f50 	ldrbtvc	r6, [r2], #-3920	; 0xfffff0b0
    210c:	70707553 	rsbsvc	r7, r0, r3, asr r5
    2110:	73736572 	cmnvc	r3, #478150656	; 0x1c800000
    2114:	6b636954 	blvs	18dc66c <__RAM_SIZE+0x17dc66c>
    2118:	646e4173 	strbtvs	r4, [lr], #-371	; 0xfffffe8d
    211c:	65656c53 	strbvs	r6, [r5, #-3155]!	; 0xfffff3ad
    2120:	75700070 	ldrbvc	r0, [r0, #-112]!	; 0xffffff90
    2124:	6d695478 	cfstrdvs	mvd5, [r9, #-480]!	; 0xfffffe20
    2128:	61547265 	cmpvs	r4, r5, ror #4
    212c:	74536b73 	ldrbvc	r6, [r3], #-2931	; 0xfffff48d
    2130:	536b6361 	cmnpl	fp, #-2080374783	; 0x84000001
    2134:	00657a69 	rsbeq	r7, r5, r9, ror #20
    2138:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    213c:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    2140:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    2144:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    2148:	6572462f 	ldrbvs	r4, [r2, #-1583]!	; 0xfffff9d1
    214c:	4f545265 	svcmi	0x00545265
    2150:	61742f53 	cmnvs	r4, r3, asr pc
    2154:	2e736b73 	vmovcs.s8	r6, d3[7]
    2158:	78700063 	ldmdavc	r0!, {r0, r1, r5, r6}^
    215c:	6b636954 	blvs	18dc6b4 <__RAM_SIZE+0x17dc6b4>
    2160:	576f5473 			; <UNDEFINED> instruction: 0x576f5473
    2164:	00746961 	rsbseq	r6, r4, r1, ror #18
    2168:	766e4965 	strbtvc	r4, [lr], -r5, ror #18
    216c:	64696c61 	strbtvs	r6, [r9], #-3169	; 0xfffff39f
    2170:	54787500 	ldrbtpl	r7, [r8], #-1280	; 0xfffffb00
    2174:	7250706f 	subsvc	r7, r0, #111	; 0x6f
    2178:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    217c:	75007974 	strvc	r7, [r0, #-2420]	; 0xfffff68c
    2180:	73614278 	cmnvc	r1, #120, 4	; 0x80000007
    2184:	69725065 	ldmdbvs	r2!, {r0, r2, r5, r6, ip, lr}^
    2188:	7469726f 	strbtvc	r7, [r9], #-623	; 0xfffffd91
    218c:	78750079 	ldmdavc	r5!, {r0, r3, r4, r5, r6}^
    2190:	6f697250 	svcvs	0x00697250
    2194:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    2198:	64657355 	strbtvs	r7, [r5], #-853	; 0xfffffcab
    219c:	6e456e4f 	cdpvs	14, 4, cr6, cr5, cr15, {2}
    21a0:	00797274 	rsbseq	r7, r9, r4, ror r2
    21a4:	5f424354 	svcpl	0x00424354
    21a8:	72700074 	rsbsvc	r0, r0, #116	; 0x74
    21ac:	6c654476 	cfstrdvs	mvd4, [r5], #-472	; 0xfffffe28
    21b0:	54657465 	strbtpl	r7, [r5], #-1125	; 0xfffffb9b
    21b4:	65004243 	strvs	r4, [r0, #-579]	; 0xfffffdbd
    21b8:	636f6c42 	cmnvs	pc, #16896	; 0x4200
    21bc:	0064656b 	rsbeq	r6, r4, fp, ror #10
    21c0:	73615476 	cmnvc	r1, #1979711488	; 0x76000000
    21c4:	7375536b 	cmnvc	r5, #-1409286143	; 0xac000001
    21c8:	646e6570 	strbtvs	r6, [lr], #-1392	; 0xfffffa90
    21cc:	6c417800 	mcrrvs	8, 0, r7, r1, cr0
    21d0:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    21d4:	65695979 	strbvs	r5, [r9, #-2425]!	; 0xfffff687
    21d8:	6465646c 	strbtvs	r6, [r5], #-1132	; 0xfffffb94
    21dc:	45787000 	ldrbmi	r7, [r8, #-0]!
    21e0:	746e6576 	strbtvc	r6, [lr], #-1398	; 0xfffffa8a
    21e4:	7473694c 	ldrbtvc	r6, [r3], #-2380	; 0xfffff6b4
    21e8:	6d657449 	cfstrdvs	mvd7, [r5, #-292]!	; 0xfffffedc
    21ec:	50767000 	rsbspl	r7, r6, r0
    21f0:	6d617261 	sfmvs	f7, 2, [r1, #-388]!	; 0xfffffe7c
    21f4:	72657465 	rsbvc	r7, r5, #1694498816	; 0x65000000
    21f8:	65507800 	ldrbvs	r7, [r0, #-2048]	; 0xfffff800
    21fc:	6465646e 	strbtvs	r6, [r5], #-1134	; 0xfffffb92
    2200:	6b636954 	blvs	18dc758 <__RAM_SIZE+0x17dc758>
    2204:	72700073 	rsbsvc	r0, r0, #115	; 0x73
    2208:	73615476 	cmnvc	r1, #1979711488	; 0x76000000
    220c:	6568436b 	strbvs	r4, [r8, #-875]!	; 0xfffffc95
    2210:	72466b63 	subvc	r6, r6, #101376	; 0x18c00
    2214:	74536565 	ldrbvc	r6, [r3], #-1381	; 0xfffffa9b
    2218:	536b6361 	cmnpl	fp, #-2080374783	; 0x84000001
    221c:	65636170 	strbvs	r6, [r3, #-368]!	; 0xfffffe90
    2220:	43787500 	cmnmi	r8, #0, 10
    2224:	65727275 	ldrbvs	r7, [r2, #-629]!	; 0xfffffd8b
    2228:	6142746e 	cmpvs	r2, lr, ror #8
    222c:	72506573 	subsvc	r6, r0, #482344960	; 0x1cc00000
    2230:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    2234:	78007974 	stmdavc	r0, {r2, r4, r5, r6, r8, fp, ip, sp, lr}
    2238:	6b636954 	blvs	18dc790 <__RAM_SIZE+0x17dc790>
    223c:	436f5473 	cmnmi	pc, #1929379840	; 0x73000000
    2240:	68637461 	stmdavs	r3!, {r0, r5, r6, sl, ip, sp, lr}^
    2244:	78007055 	stmdavc	r0, {r0, r2, r4, r6, ip, sp, lr}
    2248:	69676552 	stmdbvs	r7!, {r1, r4, r6, r8, sl, sp, lr}^
    224c:	00736e6f 	rsbseq	r6, r3, pc, ror #28
    2250:	41767270 	cmnmi	r6, r0, ror r2
    2254:	75436464 	strbvc	r6, [r3, #-1124]	; 0xfffffb9c
    2258:	6e657272 	mcrvs	2, 3, r7, cr5, cr2, {3}
    225c:	73615474 	cmnvc	r1, #116, 8	; 0x74000000
    2260:	446f546b 	strbtmi	r5, [pc], #-1131	; 2268 <__HEAP_SIZE+0x1268>
    2264:	79616c65 	stmdbvc	r1!, {r0, r2, r5, r6, sl, fp, sp, lr}^
    2268:	694c6465 	stmdbvs	ip, {r0, r2, r5, r6, sl, sp, lr}^
    226c:	75007473 	strvc	r7, [r0, #-1139]	; 0xfffffb8d
    2270:	6e6f4e78 	mcrvs	14, 3, r4, cr15, cr8, {3}
    2274:	6c707041 	ldclvs	0, cr7, [r0], #-260	; 0xfffffefc
    2278:	74616369 	strbtvc	r6, [r1], #-873	; 0xfffffc97
    227c:	546e6f69 	strbtpl	r6, [lr], #-3945	; 0xfffff097
    2280:	736b7361 	cmnvc	fp, #-2080374783	; 0x84000001
    2284:	64496300 	strbvs	r6, [r9], #-768	; 0xfffffd00
    2288:	614e656c 	cmpvs	lr, ip, ror #10
    228c:	7800656d 	stmdavc	r0, {r0, r2, r3, r5, r6, r8, sl, sp, lr}
    2290:	6b736154 	blvs	1cda7e8 <__RAM_SIZE+0x1bda7e8>
    2294:	43746547 	cmnmi	r4, #297795584	; 0x11c00000
    2298:	65727275 	ldrbvs	r7, [r2, #-629]!	; 0xfffffd8b
    229c:	6154746e 	cmpvs	r4, lr, ror #8
    22a0:	61486b73 	hvcvs	34483	; 0x86b3
    22a4:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
    22a8:	43726f46 	cmnmi	r2, #280	; 0x118
    22ac:	0065726f 	rsbeq	r7, r5, pc, ror #4
    22b0:	61547875 	cmpvs	r4, r5, ror r8
    22b4:	61426b73 	hvcvs	9907	; 0x26b3
    22b8:	72506573 	subsvc	r6, r0, #482344960	; 0x1cc00000
    22bc:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    22c0:	65477974 	strbvs	r7, [r7, #-2420]	; 0xfffff68c
    22c4:	78750074 	ldmdavc	r5!, {r2, r4, r5, r6}^
    22c8:	72727543 	rsbsvc	r7, r2, #281018368	; 0x10c00000
    22cc:	4e746e65 	cdpmi	14, 7, cr6, cr4, cr5, {3}
    22d0:	65626d75 	strbvs	r6, [r2, #-3445]!	; 0xfffff28b
    22d4:	54664f72 	strbtpl	r4, [r6], #-3954	; 0xfffff08e
    22d8:	736b7361 	cmnvc	fp, #-2080374783	; 0x84000001
    22dc:	69547800 	ldmdbvs	r4, {fp, ip, sp, lr}^
    22e0:	6e49656d 	cdpvs	5, 4, cr6, cr9, cr13, {3}
    22e4:	6d657263 	sfmvs	f7, 2, [r5, #-396]!	; 0xfffffe74
    22e8:	00746e65 	rsbseq	r6, r4, r5, ror #28
    22ec:	73615478 	cmnvc	r1, #120, 8	; 0x78000000
    22f0:	7465476b 	strbtvc	r4, [r5], #-1899	; 0xfffff895
    22f4:	656c6449 	strbvs	r6, [ip, #-1097]!	; 0xfffffbb7
    22f8:	6b736154 	blvs	1cda850 <__RAM_SIZE+0x1bda850>
    22fc:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
    2300:	7800656c 	stmdavc	r0, {r2, r3, r5, r6, r8, sl, sp, lr}
    2304:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    2308:	61576f54 	cmpvs	r7, r4, asr pc
    230c:	7800656b 	stmdavc	r0, {r0, r1, r3, r5, r6, r8, sl, sp, lr}
    2310:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
    2314:	73694c65 	cmnvc	r9, #25856	; 0x6500
    2318:	65744974 	ldrbvs	r4, [r4, #-2420]!	; 0xfffff68c
    231c:	4176006d 	cmnmi	r6, sp, rrx
    2320:	696c7070 	stmdbvs	ip!, {r4, r5, r6, ip, sp, lr}^
    2324:	69746163 	ldmdbvs	r4!, {r0, r1, r5, r6, r8, sp, lr}^
    2328:	65476e6f 	strbvs	r6, [r7, #-3695]	; 0xfffff191
    232c:	6c644974 			; <UNDEFINED> instruction: 0x6c644974
    2330:	73615465 	cmnvc	r1, #1694498816	; 0x65000000
    2334:	6d654d6b 	stclvs	13, cr4, [r5, #-428]!	; 0xfffffe54
    2338:	0079726f 	rsbseq	r7, r9, pc, ror #4
    233c:	43547870 	cmpmi	r4, #112, 16	; 0x700000
    2340:	54780042 	ldrbtpl	r0, [r8], #-66	; 0xffffffbe
    2344:	476b7361 	strbmi	r7, [fp, -r1, ror #6]!
    2348:	72656e65 	rsbvc	r6, r5, #1616	; 0x650
    234c:	6f4e6369 	svcvs	0x004e6369
    2350:	79666974 	stmdbvc	r6!, {r2, r4, r5, r6, r8, fp, sp, lr}^
    2354:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
    2358:	656c4365 	strbvs	r4, [ip, #-869]!	; 0xfffffc9b
    235c:	75007261 	strvc	r7, [r0, #-609]	; 0xfffffd9f
    2360:	6d695478 	cfstrdvs	mvd5, [r9, #-480]!	; 0xfffffe20
    2364:	61547265 	cmpvs	r4, r5, ror #4
    2368:	74536b73 	ldrbvc	r6, [r3], #-2931	; 0xfffff48d
    236c:	006b6361 	rsbeq	r6, fp, r1, ror #6
    2370:	61547870 	cmpvs	r4, r0, ror r8
    2374:	6f436b73 	svcvs	0x00436b73
    2378:	75006564 	strvc	r6, [r0, #-1380]	; 0xfffffa9c
    237c:	68635378 	stmdavs	r3!, {r3, r4, r5, r6, r8, r9, ip, lr}^
    2380:	6c756465 	cfldrdvs	mvd6, [r5], #-404	; 0xfffffe6c
    2384:	75537265 	ldrbvc	r7, [r3, #-613]	; 0xfffffd9b
    2388:	6e657073 	mcrvs	0, 3, r7, cr5, cr3, {3}
    238c:	00646564 	rsbeq	r6, r4, r4, ror #10
    2390:	6f547870 	svcvs	0x00547870
    2394:	53664f70 	cmnpl	r6, #112, 30	; 0x1c0
    2398:	6b636174 	blvs	18da970 <__RAM_SIZE+0x17da970>
    239c:	61547600 	cmpvs	r4, r0, lsl #12
    23a0:	65526b73 	ldrbvs	r6, [r2, #-2931]	; 0xfffff48d
    23a4:	656d7573 	strbvs	r7, [sp, #-1395]!	; 0xfffffa8d
    23a8:	69547800 	ldmdbvs	r4, {fp, ip, sp, lr}^
    23ac:	4772656d 	ldrbmi	r6, [r2, -sp, ror #10]!
    23b0:	69547465 	ldmdbvs	r4, {r0, r2, r5, r6, sl, ip, sp, lr}^
    23b4:	4472656d 	ldrbtmi	r6, [r2], #-1389	; 0xfffffa93
    23b8:	6f6d6561 	svcvs	0x006d6561
    23bc:	7361546e 	cmnvc	r1, #1845493760	; 0x6e000000
    23c0:	6e61486b 	cdpvs	8, 6, cr4, cr1, cr11, {3}
    23c4:	00656c64 	rsbeq	r6, r5, r4, ror #24
    23c8:	49767270 	ldmdbmi	r6!, {r4, r5, r6, r9, ip, sp, lr}^
    23cc:	6974696e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, fp, sp, lr}^
    23d0:	73696c61 	cmnvc	r9, #24832	; 0x6100
    23d4:	73615465 	cmnvc	r1, #1694498816	; 0x65000000
    23d8:	73694c6b 	cmnvc	r9, #27392	; 0x6b00
    23dc:	78007374 	stmdavc	r0, {r2, r4, r5, r6, r8, r9, ip, sp, lr}
    23e0:	656c6449 	strbvs	r6, [ip, #-1097]!	; 0xfffffbb7
    23e4:	6b736154 	blvs	1cda93c <__RAM_SIZE+0x1bda93c>
    23e8:	00424354 	subeq	r4, r2, r4, asr r3
    23ec:	6e497875 	mcrvs	8, 2, r7, cr9, cr5, {3}
    23f0:	54786564 	ldrbtpl	r6, [r8], #-1380	; 0xfffffa9c
    23f4:	746f4e6f 	strbtvc	r4, [pc], #-3695	; 23fc <__HEAP_SIZE+0x13fc>
    23f8:	00796669 	rsbseq	r6, r9, r9, ror #12
    23fc:	73615478 	cmnvc	r1, #120, 8	; 0x78000000
    2400:	7465476b 	strbtvc	r4, [r5], #-1899	; 0xfffff895
    2404:	6c707041 	ldclvs	0, cr7, [r0], #-260	; 0xfffffefc
    2408:	74616369 	strbtvc	r6, [r1], #-873	; 0xfffffc97
    240c:	546e6f69 	strbtpl	r6, [lr], #-3945	; 0xfffff097
    2410:	546b7361 	strbtpl	r7, [fp], #-865	; 0xfffffc9f
    2414:	72466761 	subvc	r6, r6, #25427968	; 0x1840000
    2418:	53496d6f 	movtpl	r6, #40303	; 0x9d6f
    241c:	78700052 	ldmdavc	r0!, {r1, r4, r6}^
    2420:	61657243 	cmnvs	r5, r3, asr #4
    2424:	54646574 	strbtpl	r6, [r4], #-1396	; 0xfffffa8c
    2428:	006b7361 	rsbeq	r7, fp, r1, ror #6
    242c:	43767270 	cmnmi	r6, #112, 4
    2430:	6b636568 	blvs	18db9d8 <__RAM_SIZE+0x17db9d8>
    2434:	6b736154 	blvs	1cda98c <__RAM_SIZE+0x1bda98c>
    2438:	69615773 	stmdbvs	r1!, {r0, r1, r4, r5, r6, r8, r9, sl, ip, lr}^
    243c:	676e6974 			; <UNDEFINED> instruction: 0x676e6974
    2440:	6d726554 	cfldr64vs	mvdx6, [r2, #-336]!	; 0xfffffeb0
    2444:	74616e69 	strbtvc	r6, [r1], #-3689	; 0xfffff197
    2448:	006e6f69 	rsbeq	r6, lr, r9, ror #30
    244c:	764f7870 			; <UNDEFINED> instruction: 0x764f7870
    2450:	6c667265 	sfmvs	f7, 2, [r6], #-404	; 0xfffffe6c
    2454:	6544776f 	strbvs	r7, [r4, #-1903]	; 0xfffff891
    2458:	6579616c 	ldrbvs	r6, [r9, #-364]!	; 0xfffffe94
    245c:	73694c64 	cmnvc	r9, #100, 24	; 0x6400
    2460:	6c750074 	ldclvs	0, cr0, [r5], #-464	; 0xfffffe30
    2464:	75746552 	ldrbvc	r6, [r4, #-1362]!	; 0xfffffaae
    2468:	78006e72 	stmdavc	r0, {r1, r4, r5, r6, r9, sl, fp, sp, lr}
    246c:	6b736154 	blvs	1cda9c4 <__RAM_SIZE+0x1bda9c4>
    2470:	75527349 	ldrbvc	r7, [r2, #-841]	; 0xfffffcb7
    2474:	6e696e6e 	cdpvs	14, 6, cr6, cr9, cr14, {3}
    2478:	59724f67 	ldmdbpl	r2!, {r0, r1, r2, r5, r6, r8, r9, sl, fp, lr}^
    247c:	646c6569 	strbtvs	r6, [ip], #-1385	; 0xfffffa97
    2480:	00676e69 	rsbeq	r6, r7, r9, ror #28
    2484:	6e497875 	mcrvs	8, 2, r7, cr9, cr5, {3}
    2488:	54786564 	ldrbtpl	r6, [r8], #-1380	; 0xfffffa9c
    248c:	6961576f 	stmdbvs	r1!, {r0, r1, r2, r3, r5, r6, r8, r9, sl, ip, lr}^
    2490:	006e4f74 	rsbeq	r4, lr, r4, ror pc
    2494:	6d6f4378 	stclvs	3, cr4, [pc, #-480]!	; 22bc <__HEAP_SIZE+0x12bc>
    2498:	646e616d 	strbtvs	r6, [lr], #-365	; 0xfffffe93
    249c:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    24a0:	69547800 	ldmdbvs	r4, {fp, ip, sp, lr}^
    24a4:	5072656d 	rsbspl	r6, r2, sp, ror #10
    24a8:	6f697265 	svcvs	0x00697265
    24ac:	546e4964 	strbtpl	r4, [lr], #-2404	; 0xfffff69c
    24b0:	736b6369 	cmnvc	fp, #-1543503871	; 0xa4000001
    24b4:	43787000 	cmnmi	r8, #0
    24b8:	626c6c61 	rsbvs	r6, ip, #24832	; 0x6100
    24bc:	466b6361 	strbtmi	r6, [fp], -r1, ror #6
    24c0:	74636e75 	strbtvc	r6, [r3], #-3701	; 0xfffff18b
    24c4:	006e6f69 	rsbeq	r6, lr, r9, ror #30
    24c8:	694c7870 	stmdbvs	ip, {r4, r5, r6, fp, ip, sp, lr}^
    24cc:	61577473 	cmpvs	r7, r3, ror r4
    24d0:	706d4573 	rsbvc	r4, sp, r3, ror r5
    24d4:	78007974 	stmdavc	r0, {r2, r4, r5, r6, r8, fp, ip, sp, lr}
    24d8:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    24dc:	00776f4e 	rsbseq	r6, r7, lr, asr #30
    24e0:	61745378 	cmnvs	r4, r8, ror r3
    24e4:	54636974 	strbtpl	r6, [r3], #-2420	; 0xfffff68c
    24e8:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    24ec:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
    24f0:	54780065 	ldrbtpl	r0, [r8], #-101	; 0xffffff9b
    24f4:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    24f8:	61726150 	cmnvs	r2, r0, asr r1
    24fc:	6574656d 	ldrbvs	r6, [r4, #-1389]!	; 0xfffffa93
    2500:	78007372 	stmdavc	r0, {r1, r4, r5, r6, r8, r9, ip, sp, lr}
    2504:	6974704f 	ldmdbvs	r4!, {r0, r1, r2, r3, r6, ip, sp, lr}^
    2508:	6c616e6f 	stclvs	14, cr6, [r1], #-444	; 0xfffffe44
    250c:	756c6156 	strbvc	r6, [ip, #-342]!	; 0xfffffeaa
    2510:	63700065 	cmnvs	r0, #101	; 0x65
    2514:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    2518:	6d614e72 	stclvs	14, cr4, [r1, #-456]!	; 0xfffffe38
    251c:	6c750065 	ldclvs	0, cr0, [r5], #-404	; 0xfffffe6c
    2520:	61726150 	cmnvs	r2, r0, asr r1
    2524:	6574656d 	ldrbvs	r6, [r4, #-1389]!	; 0xfffffa93
    2528:	78003272 	stmdavc	r0, {r1, r4, r5, r6, r9, ip, sp}
    252c:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    2530:	6e655072 	mcrvs	0, 3, r5, cr5, cr2, {3}
    2534:	6e754664 	cdpvs	6, 7, cr4, cr5, cr4, {3}
    2538:	6f697463 	svcvs	0x00697463
    253c:	6c61436e 	stclvs	3, cr4, [r1], #-440	; 0xfffffe48
    2540:	6954006c 	ldmdbvs	r4, {r2, r3, r5, r6}^
    2544:	5072656d 	rsbspl	r6, r2, sp, ror #10
    2548:	6d617261 	sfmvs	f7, 2, [r1, #-388]!	; 0xfffffe7c
    254c:	72657465 	rsbvc	r7, r5, #1694498816	; 0x65000000
    2550:	7800745f 	stmdavc	r0, {r0, r1, r2, r3, r4, r6, sl, ip, sp, lr}
    2554:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    2558:	65755172 	ldrbvs	r5, [r5, #-370]!	; 0xfffffe8e
    255c:	53006575 	movwpl	r6, #1397	; 0x575
    2560:	69746174 	ldmdbvs	r4!, {r2, r4, r5, r6, r8, sp, lr}^
    2564:	6d695463 	cfstrdvs	mvd5, [r9, #-396]!	; 0xfffffe74
    2568:	745f7265 	ldrbvc	r7, [pc], #-613	; 2570 <__HEAP_SIZE+0x1570>
    256c:	54537800 	ldrbpl	r7, [r3], #-2048	; 0xfffff800
    2570:	43495441 	movtmi	r5, #37953	; 0x9441
    2574:	4d49545f 	cfstrdmi	mvd5, [r9, #-380]	; 0xfffffe84
    2578:	78005245 	stmdavc	r0, {r0, r2, r6, r9, ip, lr}
    257c:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    2580:	74654772 	strbtvc	r4, [r5], #-1906	; 0xfffff88e
    2584:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
    2588:	75426369 	strbvc	r6, [r2, #-873]	; 0xfffffc97
    258c:	72656666 	rsbvc	r6, r5, #106954752	; 0x6600000
    2590:	6d695400 	cfstrdvs	mvd5, [r9, #-0]
    2594:	61437265 	cmpvs	r3, r5, ror #4
    2598:	61626c6c 	cmnvs	r2, ip, ror #24
    259c:	75466b63 	strbvc	r6, [r6, #-2915]	; 0xfffff49d
    25a0:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
    25a4:	745f6e6f 	ldrbvc	r6, [pc], #-3695	; 25ac <__HEAP_SIZE+0x15ac>
    25a8:	6f437800 	svcvs	0x00437800
    25ac:	6e616d6d 	cdpvs	13, 6, cr6, cr1, cr13, {3}
    25b0:	00444964 	subeq	r4, r4, r4, ror #18
    25b4:	6f725078 	svcvs	0x00725078
    25b8:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
    25bc:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    25c0:	776f4e72 			; <UNDEFINED> instruction: 0x776f4e72
    25c4:	76727000 	ldrbtvc	r7, [r2], -r0
    25c8:	63656843 	cmnvs	r5, #4390912	; 0x430000
    25cc:	726f466b 	rsbvc	r4, pc, #112197632	; 0x6b00000
    25d0:	696c6156 	stmdbvs	ip!, {r1, r2, r4, r6, r8, sp, lr}^
    25d4:	73694c64 	cmnvc	r9, #100, 24	; 0x6400
    25d8:	646e4174 	strbtvs	r4, [lr], #-372	; 0xfffffe8c
    25dc:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
    25e0:	2e2e0065 	cdpcs	0, 2, cr0, cr14, cr5, {3}
    25e4:	2f2e2e2f 	svccs	0x002e2e2f
    25e8:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 2538 <__HEAP_SIZE+0x1538>
    25ec:	74726269 	ldrbtvc	r6, [r2], #-617	; 0xfffffd97
    25f0:	462f736f 	strtmi	r7, [pc], -pc, ror #6
    25f4:	52656572 	rsbpl	r6, r5, #478150656	; 0x1c800000
    25f8:	2f534f54 	svccs	0x00534f54
    25fc:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
    2600:	632e7372 			; <UNDEFINED> instruction: 0x632e7372
    2604:	54787500 	ldrbtpl	r7, [r8], #-1280	; 0xfffffb00
    2608:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    260c:	52746547 	rsbspl	r6, r4, #297795584	; 0x11c00000
    2610:	616f6c65 	cmnvs	pc, r5, ror #24
    2614:	646f4d64 	strbtvs	r4, [pc], #-3428	; 261c <__HEAP_SIZE+0x161c>
    2618:	69540065 	ldmdbvs	r4, {r0, r2, r5, r6}^
    261c:	4872656d 	ldmdami	r2!, {r0, r2, r3, r5, r6, r8, sl, sp, lr}^
    2620:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
    2624:	00745f65 	rsbseq	r5, r4, r5, ror #30
    2628:	6d695478 	cfstrdvs	mvd5, [r9, #-480]!	; 0xfffffe20
    262c:	72437265 	subvc	r7, r3, #1342177286	; 0x50000006
    2630:	65746165 	ldrbvs	r6, [r4, #-357]!	; 0xfffffe9b
    2634:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
    2638:	70006369 	andvc	r6, r0, r9, ror #6
    263c:	72507672 	subsvc	r7, r0, #119537664	; 0x7200000
    2640:	7365636f 	cmnvc	r5, #-1140850687	; 0xbc000001
    2644:	70784573 	rsbsvc	r4, r8, r3, ror r5
    2648:	64657269 	strbtvs	r7, [r5], #-617	; 0xfffffd97
    264c:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    2650:	61430072 	hvcvs	12290	; 0x3002
    2654:	61626c6c 	cmnvs	r2, ip, ror #24
    2658:	61506b63 	cmpvs	r0, r3, ror #22
    265c:	656d6172 	strbvs	r6, [sp, #-370]!	; 0xfffffe8e
    2660:	73726574 	cmnvc	r2, #116, 10	; 0x1d000000
    2664:	7000745f 	andvc	r7, r0, pc, asr r4
    2668:	6d754476 	cfldrdvs	mvd4, [r5, #-472]!	; 0xfffffe28
    266c:	0036796d 	eorseq	r7, r6, sp, ror #18
    2670:	654e7870 	strbvs	r7, [lr, #-2160]	; 0xfffff790
    2674:	6d695477 	cfstrdvs	mvd5, [r9, #-476]!	; 0xfffffe24
    2678:	70007265 	andvc	r7, r0, r5, ror #4
    267c:	74655276 	strbtvc	r5, [r5], #-630	; 0xfffffd8a
    2680:	006e7275 	rsbeq	r7, lr, r5, ror r2
    2684:	6d695478 	cfstrdvs	mvd5, [r9, #-480]!	; 0xfffffe20
    2688:	73497265 	movtvc	r7, #37477	; 0x9265
    268c:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    2690:	74634172 	strbtvc	r4, [r3], #-370	; 0xfffffe8e
    2694:	00657669 	rsbeq	r7, r5, r9, ror #12
    2698:	70784578 	rsbsvc	r4, r8, r8, ror r5
    269c:	64657269 	strbtvs	r7, [r5], #-617	; 0xfffffd97
    26a0:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    26a4:	726d7400 	rsbvc	r7, sp, #0, 8
    26a8:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    26ac:	65755172 	ldrbvs	r5, [r5, #-370]!	; 0xfffffe8e
    26b0:	654d6575 	strbvs	r6, [sp, #-1397]	; 0xfffffa8b
    26b4:	67617373 			; <UNDEFINED> instruction: 0x67617373
    26b8:	76700065 	ldrbtvc	r0, [r0], -r5, rrx
    26bc:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    26c0:	74654772 	strbtvc	r4, [r5], #-1906	; 0xfffff88e
    26c4:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    26c8:	00444972 	subeq	r4, r4, r2, ror r9
    26cc:	74754178 	ldrbtvc	r4, [r5], #-376	; 0xfffffe88
    26d0:	6c65526f 	sfmvs	f5, 2, [r5], #-444	; 0xfffffe44
    26d4:	0064616f 	rsbeq	r6, r4, pc, ror #2
    26d8:	6d695478 	cfstrdvs	mvd5, [r9, #-480]!	; 0xfffffe20
    26dc:	65477265 	strbvs	r7, [r7, #-613]	; 0xfffffd9b
    26e0:	6972656e 	ldmdbvs	r2!, {r1, r2, r3, r5, r6, r8, sl, sp, lr}^
    26e4:	6d6f4363 	stclvs	3, cr4, [pc, #-396]!	; 2560 <__HEAP_SIZE+0x1560>
    26e8:	646e616d 	strbtvs	r6, [lr], #-365	; 0xfffffe93
    26ec:	6d6f7246 	sfmvs	f7, 2, [pc, #-280]!	; 25dc <__HEAP_SIZE+0x15dc>
    26f0:	00525349 	subseq	r5, r2, r9, asr #6
    26f4:	764f7870 			; <UNDEFINED> instruction: 0x764f7870
    26f8:	6c667265 	sfmvs	f7, 2, [r6], #-404	; 0xfffffe6c
    26fc:	6954776f 	ldmdbvs	r4, {r0, r1, r2, r3, r5, r6, r8, r9, sl, ip, sp, lr}^
    2700:	4c72656d 	cfldr64mi	mvdx6, [r2], #-436	; 0xfffffe4c
    2704:	00747369 	rsbseq	r7, r4, r9, ror #6
    2708:	49767270 	ldmdbmi	r6!, {r4, r5, r6, r9, ip, sp, lr}^
    270c:	6974696e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, fp, sp, lr}^
    2710:	73696c61 	cmnvc	r9, #24832	; 0x6100
    2714:	77654e65 	strbvc	r4, [r5, -r5, ror #28]!
    2718:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    271c:	76700072 			; <UNDEFINED> instruction: 0x76700072
    2720:	6d6d7544 	cfstr64vs	mvdx7, [sp, #-272]!	; 0xfffffef0
    2724:	78003579 	stmdavc	r0, {r0, r3, r4, r5, r6, r8, sl, ip, sp}
    2728:	454d4954 	strbmi	r4, [sp, #-2388]	; 0xfffff6ac
    272c:	41780052 	cmnmi	r8, r2, asr r0
    2730:	76697463 	strbtvc	r7, [r9], -r3, ror #8
    2734:	6d695465 	cfstrdvs	mvd5, [r9, #-404]!	; 0xfffffe6c
    2738:	694c7265 	stmdbvs	ip, {r0, r2, r5, r6, r9, ip, sp, lr}^
    273c:	00317473 	eorseq	r7, r1, r3, ror r4
    2740:	74634178 	strbtvc	r4, [r3], #-376	; 0xfffffe88
    2744:	54657669 	strbtpl	r7, [r5], #-1641	; 0xfffff997
    2748:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    274c:	7473694c 	ldrbtvc	r6, [r3], #-2380	; 0xfffff6b4
    2750:	72700032 	rsbsvc	r0, r0, #50	; 0x32
    2754:	736e4976 	cmnvc	lr, #1933312	; 0x1d8000
    2758:	54747265 	ldrbtpl	r7, [r4], #-613	; 0xfffffd9b
    275c:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    2760:	63416e49 	movtvs	r6, #7753	; 0x1e49
    2764:	65766974 	ldrbvs	r6, [r6, #-2420]!	; 0xfffff68c
    2768:	7473694c 	ldrbtvc	r6, [r3], #-2380	; 0xfffff6b4
    276c:	69547800 	ldmdbvs	r4, {fp, ip, sp, lr}^
    2770:	4772656d 	ldrbmi	r6, [r2, -sp, ror #10]!
    2774:	78457465 	stmdavc	r5, {r0, r2, r5, r6, sl, ip, sp, lr}^
    2778:	79726970 	ldmdbvc	r2!, {r4, r5, r6, r8, fp, sp, lr}^
    277c:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    2780:	726d7400 	rsbvc	r7, sp, #0, 8
    2784:	6c6c6143 	stfvse	f6, [ip], #-268	; 0xfffffef4
    2788:	6b636162 	blvs	18dad18 <__RAM_SIZE+0x17dad18>
    278c:	61726150 	cmnvs	r2, r0, asr r1
    2790:	6574656d 	ldrbvs	r6, [r4, #-1389]!	; 0xfffffa93
    2794:	78007372 	stmdavc	r0, {r1, r4, r5, r6, r8, r9, ip, sp, lr}
    2798:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    279c:	65724372 	ldrbvs	r4, [r2, #-882]!	; 0xfffffc8e
    27a0:	00657461 	rsbeq	r7, r5, r1, ror #8
    27a4:	53767270 	cmnpl	r6, #112, 4
    27a8:	6c706d61 	ldclvs	13, cr6, [r0], #-388	; 0xfffffe7c
    27ac:	6d695465 	cfstrdvs	mvd5, [r9, #-404]!	; 0xfffffe6c
    27b0:	776f4e65 	strbvc	r4, [pc, -r5, ror #28]!
    27b4:	61437800 	cmpvs	r3, r0, lsl #16
    27b8:	61626c6c 	cmnvs	r2, ip, ror #24
    27bc:	61506b63 	cmpvs	r0, r3, ror #22
    27c0:	656d6172 	strbvs	r6, [sp, #-370]!	; 0xfffffe8e
    27c4:	73726574 	cmnvc	r2, #116, 10	; 0x1d000000
    27c8:	69547600 	ldmdbvs	r4, {r9, sl, ip, sp, lr}^
    27cc:	5372656d 	cmnpl	r2, #457179136	; 0x1b400000
    27d0:	69547465 	ldmdbvs	r4, {r0, r2, r5, r6, sl, ip, sp, lr}^
    27d4:	4972656d 	ldmdbmi	r2!, {r0, r2, r3, r5, r6, r8, sl, sp, lr}^
    27d8:	54780044 	ldrbtpl	r0, [r8], #-68	; 0xffffffbc
    27dc:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    27e0:	7473694c 	ldrbtvc	r6, [r3], #-2380	; 0xfffff6b4
    27e4:	6d657449 	cfstrdvs	mvd7, [r5, #-292]!	; 0xfffffedc
    27e8:	4e767000 	cdpmi	0, 7, cr7, cr6, cr0, {0}
    27ec:	44497765 	strbmi	r7, [r9], #-1893	; 0xfffff89b
    27f0:	76727000 	ldrbtvc	r7, [r2], -r0
    27f4:	74697753 	strbtvc	r7, [r9], #-1875	; 0xfffff8ad
    27f8:	69546863 	ldmdbvs	r4, {r0, r1, r5, r6, fp, sp, lr}^
    27fc:	4c72656d 	cfldr64mi	mvdx6, [r2], #-436	; 0xfffffe4c
    2800:	73747369 	cmnvc	r4, #-1543503871	; 0xa4000001
    2804:	76727000 	ldrbtvc	r7, [r2], -r0
    2808:	6f6c6552 	svcvs	0x006c6552
    280c:	69546461 	ldmdbvs	r4, {r0, r5, r6, sl, sp, lr}^
    2810:	0072656d 	rsbseq	r6, r2, sp, ror #10
    2814:	74536375 	ldrbvc	r6, [r3], #-885	; 0xfffffc8b
    2818:	63697461 	cmnvs	r9, #1627389952	; 0x61000000
    281c:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    2820:	65755172 	ldrbvs	r5, [r5, #-370]!	; 0xfffffe8e
    2824:	74536575 	ldrbvc	r6, [r3], #-1397	; 0xfffffa8b
    2828:	6761726f 	strbvs	r7, [r1, -pc, ror #4]!
    282c:	76700065 	ldrbtvc	r0, [r0], -r5, rrx
    2830:	61726150 	cmnvs	r2, r0, asr r1
    2834:	6574656d 	ldrbvs	r6, [r4, #-1389]!	; 0xfffffa93
    2838:	75003172 	strvc	r3, [r0, #-370]	; 0xfffffe8e
    283c:	6d754463 	cfldrdvs	mvd4, [r5, #-396]!	; 0xfffffe74
    2840:	0038796d 	eorseq	r7, r8, sp, ror #18
    2844:	6d695478 	cfstrdvs	mvd5, [r9, #-480]!	; 0xfffffe20
    2848:	61547265 	cmpvs	r4, r5, ror #4
    284c:	61486b73 	hvcvs	34483	; 0x86b3
    2850:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
    2854:	76727000 	ldrbtvc	r7, [r2], -r0
    2858:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    285c:	73615472 	cmnvc	r1, #1912602624	; 0x72000000
    2860:	4e78006b 	cdpmi	0, 7, cr0, cr8, cr11, {3}
    2864:	45747865 	ldrbmi	r7, [r4, #-2149]!	; 0xfffff79b
    2868:	72697078 	rsbvc	r7, r9, #120	; 0x78
    286c:	6d695465 	cfstrdvs	mvd5, [r9, #-404]!	; 0xfffffe6c
    2870:	63750065 	cmnvs	r5, #101	; 0x65
    2874:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
    2878:	70007375 	andvc	r7, r0, r5, ror r3
    287c:	72507672 	subsvc	r7, r0, #119537664	; 0x7200000
    2880:	7365636f 	cmnvc	r5, #-1140850687	; 0xbc000001
    2884:	63655273 	cmnvs	r5, #805306375	; 0x30000007
    2888:	65766965 	ldrbvs	r6, [r6, #-2405]!	; 0xfffff69b
    288c:	6d6f4364 	stclvs	3, cr4, [pc, #-400]!	; 2704 <__HEAP_SIZE+0x1704>
    2890:	646e616d 	strbtvs	r6, [lr], #-365	; 0xfffffe93
    2894:	4c780073 	ldclmi	0, cr0, [r8], #-460	; 0xfffffe34
    2898:	54747361 	ldrbtpl	r7, [r4], #-865	; 0xfffffc9f
    289c:	00656d69 	rsbeq	r6, r5, r9, ror #26
    28a0:	646e6550 	strbtvs	r6, [lr], #-1360	; 0xfffffab0
    28a4:	75466465 	strbvc	r6, [r6, #-1125]	; 0xfffffb9b
    28a8:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
    28ac:	745f6e6f 	ldrbvc	r6, [pc], #-3695	; 28b4 <__HEAP_SIZE+0x18b4>
    28b0:	43787000 	cmnmi	r8, #0
    28b4:	65727275 	ldrbvs	r7, [r2, #-629]!	; 0xfffffd8b
    28b8:	6954746e 	ldmdbvs	r4, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
    28bc:	4c72656d 	cfldr64mi	mvdx6, [r2], #-436	; 0xfffffe4c
    28c0:	00747369 	rsbseq	r7, r4, r9, ror #6
    28c4:	73654d78 	cmnvc	r5, #120, 26	; 0x1e00
    28c8:	65676173 	strbvs	r6, [r7, #-371]!	; 0xfffffe8d
    28cc:	54767000 	ldrbtpl	r7, [r6], #-0
    28d0:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    28d4:	78004449 	stmdavc	r0, {r0, r3, r6, sl, lr}
    28d8:	7373654d 	cmnvc	r3, #322961408	; 0x13400000
    28dc:	49656761 	stmdbmi	r5!, {r0, r5, r6, r8, r9, sl, sp, lr}^
    28e0:	61440044 	cmpvs	r4, r4, asr #32
    28e4:	6e6f6d65 	cdpvs	13, 6, cr6, cr15, cr5, {3}
    28e8:	6b736154 	blvs	1cdae40 <__RAM_SIZE+0x1bdae40>
    28ec:	7373654d 	cmnvc	r3, #322961408	; 0x13400000
    28f0:	5f656761 	svcpl	0x00656761
    28f4:	54760074 	ldrbtpl	r0, [r6], #-116	; 0xffffff8c
    28f8:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    28fc:	65736552 	ldrbvs	r6, [r3, #-1362]!	; 0xfffffaae
    2900:	61745374 	cmnvs	r4, r4, ror r3
    2904:	78006574 	stmdavc	r0, {r2, r4, r5, r6, r8, sl, sp, lr}
    2908:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    290c:	74654772 	strbtvc	r4, [r5], #-1906	; 0xfffff88e
    2910:	69726550 	ldmdbvs	r2!, {r4, r6, r8, sl, sp, lr}^
    2914:	7000646f 	andvc	r6, r0, pc, ror #8
    2918:	6d695478 	cfstrdvs	mvd5, [r9, #-480]!	; 0xfffffe20
    291c:	78007265 	stmdavc	r0, {r0, r2, r5, r6, r9, ip, sp, lr}
    2920:	7373654d 	cmnvc	r3, #322961408	; 0x13400000
    2924:	56656761 	strbtpl	r6, [r5], -r1, ror #14
    2928:	65756c61 	ldrbvs	r6, [r5, #-3169]!	; 0xfffff39f
    292c:	75467800 	strbvc	r7, [r6, #-2048]	; 0xfffff800
    2930:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
    2934:	6f546e6f 	svcvs	0x00546e6f
    2938:	646e6550 	strbtvs	r6, [lr], #-1360	; 0xfffffab0
    293c:	726d7400 	rsbvc	r7, sp, #0, 8
    2940:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    2944:	6e6f4372 	mcrvs	3, 3, r4, cr15, cr2, {3}
    2948:	6c6f7274 	sfmvs	f7, 2, [pc], #-464	; 2780 <__HEAP_SIZE+0x1780>
    294c:	54637000 	strbtpl	r7, [r3], #-0
    2950:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    2954:	4e746547 	cdpmi	5, 7, cr6, cr4, cr7, {2}
    2958:	00656d61 	rsbeq	r6, r5, r1, ror #26
    295c:	6d695478 	cfstrdvs	mvd5, [r9, #-480]!	; 0xfffffe20
    2960:	65507265 	ldrbvs	r7, [r0, #-613]	; 0xfffffd9b
    2964:	7546646e 	strbvc	r6, [r6, #-1134]	; 0xfffffb92
    2968:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
    296c:	61436e6f 	cmpvs	r3, pc, ror #28
    2970:	72466c6c 	subvc	r6, r6, #108, 24	; 0x6c00
    2974:	53496d6f 	movtpl	r6, #40303	; 0x9d6f
    2978:	72700052 	rsbsvc	r0, r0, #82	; 0x52
    297c:	6f725076 	svcvs	0x00725076
    2980:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
    2984:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    2988:	42724f72 	rsbsmi	r4, r2, #456	; 0x1c8
    298c:	6b636f6c 	blvs	18de744 <__RAM_SIZE+0x17de744>
    2990:	6b736154 	blvs	1cdaee8 <__RAM_SIZE+0x1bdaee8>
    2994:	69547600 	ldmdbvs	r4, {r9, sl, ip, sp, lr}^
    2998:	5372656d 	cmnpl	r2, #457179136	; 0x1b400000
    299c:	65527465 	ldrbvs	r7, [r2, #-1125]	; 0xfffffb9b
    29a0:	64616f6c 	strbtvs	r6, [r1], #-3948	; 0xfffff094
    29a4:	65646f4d 	strbvs	r6, [r4, #-3917]!	; 0xfffff0b3
    29a8:	654e7800 	strbvs	r7, [lr, #-2048]	; 0xfffff800
    29ac:	78457478 	stmdavc	r5, {r3, r4, r5, r6, sl, ip, sp, lr}^
    29b0:	79726970 	ldmdbvc	r2!, {r4, r5, r6, r8, fp, sp, lr}^
    29b4:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    29b8:	69547800 	ldmdbvs	r4, {fp, ip, sp, lr}^
    29bc:	4772656d 	ldrbmi	r6, [r2, -sp, ror #10]!
    29c0:	72656e65 	rsbvc	r6, r5, #1616	; 0x650
    29c4:	6f436369 	svcvs	0x00436369
    29c8:	6e616d6d 	cdpvs	13, 6, cr6, cr1, cr13, {3}
    29cc:	6f724664 	svcvs	0x00724664
    29d0:	7361546d 	cmnvc	r1, #1828716544	; 0x6d000000
    29d4:	6d74006b 	ldclvs	0, cr0, [r4, #-428]!	; 0xfffffe54
    29d8:	6d695472 	cfstrdvs	mvd5, [r9, #-456]!	; 0xfffffe38
    29dc:	61507265 	cmpvs	r0, r5, ror #4
    29e0:	656d6172 	strbvs	r6, [sp, #-370]!	; 0xfffffe8e
    29e4:	73726574 	cmnvc	r2, #116, 10	; 0x1d000000
    29e8:	78707000 	ldmdavc	r0!, {ip, sp, lr}^
    29ec:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    29f0:	66754272 			; <UNDEFINED> instruction: 0x66754272
    29f4:	00726566 	rsbseq	r6, r2, r6, ror #10
    29f8:	61437870 	hvcvs	14208	; 0x3780
    29fc:	61626c6c 	cmnvs	r2, ip, ror #24
    2a00:	70006b63 	andvc	r6, r0, r3, ror #22
    2a04:	65477672 	strbvs	r7, [r7, #-1650]	; 0xfffff98e
    2a08:	78654e74 	stmdavc	r5!, {r2, r4, r5, r6, r9, sl, fp, lr}^
    2a0c:	70784574 	rsbsvc	r4, r8, r4, ror r5
    2a10:	54657269 	strbtpl	r7, [r5], #-617	; 0xfffffd97
    2a14:	00656d69 	rsbeq	r6, r5, r9, ror #26
    2a18:	69547870 	ldmdbvs	r4, {r4, r5, r6, fp, ip, sp, lr}^
    2a1c:	4c72656d 	cfldr64mi	mvdx6, [r2], #-436	; 0xfffffe4c
    2a20:	73747369 	cmnvc	r4, #-1543503871	; 0xa4000001
    2a24:	65726557 	ldrbvs	r6, [r2, #-1367]!	; 0xfffffaa9
    2a28:	74697753 	strbtvc	r7, [r9], #-1875	; 0xfffff8ad
    2a2c:	64656863 	strbtvs	r6, [r5], #-2147	; 0xfffff79d
    2a30:	50787000 	rsbspl	r7, r8, r0
    2a34:	69766572 	ldmdbvs	r6!, {r1, r4, r5, r6, r8, sl, sp, lr}^
    2a38:	4273756f 	rsbsmi	r7, r3, #465567744	; 0x1bc00000
    2a3c:	6b636f6c 	blvs	18de7f4 <__RAM_SIZE+0x17de7f4>
    2a40:	48787000 	ldmdami	r8!, {ip, sp, lr}^
    2a44:	53706165 	cmnpl	r0, #1073741849	; 0x40000019
    2a48:	73746174 	cmnvc	r4, #116, 2
    2a4c:	694d7800 	stmdbvs	sp, {fp, ip, sp, lr}^
    2a50:	756d696e 	strbvc	r6, [sp, #-2414]!	; 0xfffff692
    2a54:	6576456d 	ldrbvs	r4, [r6, #-1389]!	; 0xfffffa93
    2a58:	65724672 	ldrbvs	r4, [r2, #-1650]!	; 0xfffff98e
    2a5c:	74794265 	ldrbtvc	r4, [r9], #-613	; 0xfffffd9b
    2a60:	65527365 	ldrbvs	r7, [r2, #-869]	; 0xfffffc9b
    2a64:	6e69616d 	powvsez	f6, f1, #5.0
    2a68:	00676e69 	rsbeq	r6, r7, r9, ror #28
    2a6c:	70616548 	rsbvc	r6, r1, r8, asr #10
    2a70:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
    2a74:	00745f73 	rsbseq	r5, r4, r3, ror pc
    2a78:	654e7870 	strbvs	r7, [lr, #-2160]	; 0xfffff790
    2a7c:	72467478 	subvc	r7, r6, #120, 8	; 0x78000000
    2a80:	6c426565 	cfstr64vs	mvdx6, [r2], {101}	; 0x65
    2a84:	006b636f 	rsbeq	r6, fp, pc, ror #6
    2a88:	6c427870 	mcrrvs	8, 7, r7, r2, cr0
    2a8c:	006b636f 	rsbeq	r6, fp, pc, ror #6
    2a90:	6e694d78 	mcrvs	13, 3, r4, cr9, cr8, {3}
    2a94:	657a6953 	ldrbvs	r6, [sl, #-2387]!	; 0xfffff6ad
    2a98:	754e7800 	strbvc	r7, [lr, #-2048]	; 0xfffff800
    2a9c:	7265626d 	rsbvc	r6, r5, #-805306362	; 0xd0000006
    2aa0:	7246664f 	subvc	r6, r6, #82837504	; 0x4f00000
    2aa4:	6c426565 	cfstr64vs	mvdx6, [r2], {101}	; 0x65
    2aa8:	736b636f 	cmnvc	fp, #-1140850687	; 0xbc000001
    2aac:	45787000 	ldrbmi	r7, [r8, #-0]!
    2ab0:	7000646e 	andvc	r6, r0, lr, ror #8
    2ab4:	6e497672 	mcrvs	6, 2, r7, cr9, cr2, {3}
    2ab8:	74726573 	ldrbtvc	r6, [r2], #-1395	; 0xfffffa8d
    2abc:	636f6c42 	cmnvs	pc, #16896	; 0x4200
    2ac0:	746e496b 	strbtvc	r4, [lr], #-2411	; 0xfffff695
    2ac4:	6572466f 	ldrbvs	r4, [r2, #-1647]!	; 0xfffff991
    2ac8:	73694c65 	cmnvc	r9, #25856	; 0x6500
    2acc:	5f410074 	svcpl	0x00410074
    2ad0:	434f4c42 	movtmi	r4, #64578	; 0xfc42
    2ad4:	494c5f4b 	stmdbmi	ip, {r0, r1, r3, r6, r8, r9, sl, fp, ip, lr}^
    2ad8:	75004b4e 	strvc	r4, [r0, #-2894]	; 0xfffff4b2
    2adc:	61745378 	cmnvs	r4, r8, ror r3
    2ae0:	64417472 	strbvs	r7, [r1], #-1138	; 0xfffffb8e
    2ae4:	73657264 	cmnvc	r5, #100, 4	; 0x40000006
    2ae8:	53780073 	cmnpl	r8, #115	; 0x73
    2aec:	4f657a69 	svcmi	0x00657a69
    2af0:	616d5366 	cmnvs	sp, r6, ror #6
    2af4:	73656c6c 	cmnvc	r5, #108, 24	; 0x6c00
    2af8:	65724674 	ldrbvs	r4, [r2, #-1652]!	; 0xfffff98c
    2afc:	6f6c4265 	svcvs	0x006c4265
    2b00:	6e496b63 	vmlsvs.f64	d22, d9, d19
    2b04:	65747942 	ldrbvs	r7, [r4, #-2370]!	; 0xfffff6be
    2b08:	2e2e0073 	mcrcs	0, 1, r0, cr14, cr3, {3}
    2b0c:	2f2e2e2f 	svccs	0x002e2e2f
    2b10:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 2a60 <__HEAP_SIZE+0x1a60>
    2b14:	74726269 	ldrbtvc	r6, [r2], #-617	; 0xfffffd97
    2b18:	462f736f 	strtmi	r7, [pc], -pc, ror #6
    2b1c:	52656572 	rsbpl	r6, r5, #478150656	; 0x1c800000
    2b20:	2f534f54 	svccs	0x00534f54
    2b24:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
    2b28:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
    2b2c:	6d654d2f 	stclvs	13, cr4, [r5, #-188]!	; 0xffffff44
    2b30:	676e614d 	strbvs	r6, [lr, -sp, asr #2]!
    2b34:	6165682f 	cmnvs	r5, pc, lsr #16
    2b38:	2e345f70 	mrccs	15, 1, r5, cr4, cr0, {3}
    2b3c:	78750063 	ldmdavc	r5!, {r0, r1, r5, r6}^
    2b40:	41646e45 	cmnmi	r4, r5, asr #28
    2b44:	65726464 	ldrbvs	r6, [r2, #-1124]!	; 0xfffffb9c
    2b48:	70007373 	andvc	r7, r0, r3, ror r3
    2b4c:	77654e78 			; <UNDEFINED> instruction: 0x77654e78
    2b50:	636f6c42 	cmnvs	pc, #16896	; 0x4200
    2b54:	6e694c6b 	cdpvs	12, 6, cr4, cr9, cr11, {3}
    2b58:	5078006b 	rsbspl	r0, r8, fp, rrx
    2b5c:	4774726f 	ldrbmi	r7, [r4, -pc, ror #4]!
    2b60:	72467465 	subvc	r7, r6, #1694498816	; 0x65000000
    2b64:	65486565 	strbvs	r6, [r8, #-1381]	; 0xfffffa9b
    2b68:	69537061 	ldmdbvs	r3, {r0, r5, r6, ip, sp, lr}^
    2b6c:	7800657a 	stmdavc	r0, {r1, r3, r4, r5, r6, r8, sl, sp, lr}
    2b70:	69646441 	stmdbvs	r4!, {r0, r6, sl, sp, lr}^
    2b74:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    2b78:	65526c61 	ldrbvs	r6, [r2, #-3169]	; 0xfffff39f
    2b7c:	72697571 	rsbvc	r7, r9, #473956352	; 0x1c400000
    2b80:	69536465 	ldmdbvs	r3, {r0, r2, r5, r6, sl, sp, lr}^
    2b84:	7600657a 			; <UNDEFINED> instruction: 0x7600657a
    2b88:	74726f50 	ldrbtvc	r6, [r2], #-3920	; 0xfffff0b0
    2b8c:	70616548 	rsbvc	r6, r1, r8, asr #10
    2b90:	65736552 	ldrbvs	r6, [r3, #-1362]!	; 0xfffffaae
    2b94:	61745374 	cmnvs	r4, r4, ror r3
    2b98:	78006574 	stmdavc	r0, {r2, r4, r5, r6, r8, sl, sp, lr}
    2b9c:	5378614d 	cmnpl	r8, #1073741843	; 0x40000013
    2ba0:	00657a69 	rsbeq	r7, r5, r9, ror #20
    2ba4:	726f5078 	rsbvc	r5, pc, #120	; 0x78
    2ba8:	74654774 	strbtvc	r4, [r5], #-1908	; 0xfffff88c
    2bac:	696e694d 	stmdbvs	lr!, {r0, r2, r3, r6, r8, fp, sp, lr}^
    2bb0:	456d756d 	strbmi	r7, [sp, #-1389]!	; 0xfffffa93
    2bb4:	46726576 			; <UNDEFINED> instruction: 0x46726576
    2bb8:	48656572 	stmdami	r5!, {r1, r4, r5, r6, r8, sl, sp, lr}^
    2bbc:	53706165 	cmnpl	r0, #1073741849	; 0x40000019
    2bc0:	00657a69 	rsbeq	r7, r5, r9, ror #20
    2bc4:	636f6c42 	cmnvs	pc, #16896	; 0x4200
    2bc8:	6e694c6b 	cdpvs	12, 6, cr4, cr9, cr11, {3}
    2bcc:	00745f6b 	rsbseq	r5, r4, fp, ror #30
    2bd0:	6d754e78 	ldclvs	14, cr4, [r5, #-480]!	; 0xfffffe20
    2bd4:	4f726562 	svcmi	0x00726562
    2bd8:	63755366 	cmnvs	r5, #-1744830463	; 0x98000001
    2bdc:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
    2be0:	416c7566 	cmnmi	ip, r6, ror #10
    2be4:	636f6c6c 	cmnvs	pc, #108, 24	; 0x6c00
    2be8:	6f697461 	svcvs	0x00697461
    2bec:	7800736e 	stmdavc	r0, {r1, r2, r3, r5, r6, r8, r9, ip, sp, lr}
    2bf0:	69617641 	stmdbvs	r1!, {r0, r6, r9, sl, ip, sp, lr}^
    2bf4:	6c62616c 	stfvse	f6, [r2], #-432	; 0xfffffe50
    2bf8:	61654865 	cmnvs	r5, r5, ror #16
    2bfc:	61705370 	cmnvs	r0, r0, ror r3
    2c00:	6e496563 	cdpvs	5, 4, cr6, cr9, cr3, {3}
    2c04:	65747942 	ldrbvs	r7, [r4, #-2370]!	; 0xfffff6be
    2c08:	48780073 	ldmdami	r8!, {r0, r1, r4, r5, r6}^
    2c0c:	53706165 	cmnpl	r0, #1073741849	; 0x40000019
    2c10:	63757274 	cmnvs	r5, #116, 4	; 0x40000007
    2c14:	7a695374 	bvc	1a579ec <__RAM_SIZE+0x19579ec>
    2c18:	76700065 	ldrbtvc	r0, [r0], -r5, rrx
    2c1c:	74726f50 	ldrbtvc	r6, [r2], #-3920	; 0xfffff0b0
    2c20:	6c6c6143 	stfvse	f6, [ip], #-268	; 0xfffffef4
    2c24:	7800636f 	stmdavc	r0, {r0, r1, r2, r3, r5, r6, r8, r9, sp, lr}
    2c28:	65657246 	strbvs	r7, [r5, #-582]!	; 0xfffffdba
    2c2c:	65747942 	ldrbvs	r7, [r4, #-2370]!	; 0xfffff6be
    2c30:	6d655273 	sfmvs	f5, 2, [r5, #-460]!	; 0xfffffe34
    2c34:	696e6961 	stmdbvs	lr!, {r0, r5, r6, r8, fp, sp, lr}^
    2c38:	7800676e 	stmdavc	r0, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}
    2c3c:	657a6953 	ldrbvs	r6, [sl, #-2387]!	; 0xfffff6ad
    2c40:	614c664f 	cmpvs	ip, pc, asr #12
    2c44:	73656772 	cmnvc	r5, #29884416	; 0x1c80000
    2c48:	65724674 	ldrbvs	r4, [r2, #-1652]!	; 0xfffff98c
    2c4c:	6f6c4265 	svcvs	0x006c4265
    2c50:	6e496b63 	vmlsvs.f64	d22, d9, d19
    2c54:	65747942 	ldrbvs	r7, [r4, #-2370]!	; 0xfffff6be
    2c58:	72700073 	rsbsvc	r0, r0, #115	; 0x73
    2c5c:	61654876 	smcvs	21638	; 0x5486
    2c60:	696e4970 	stmdbvs	lr!, {r4, r5, r6, r8, fp, lr}^
    2c64:	78700074 	ldmdavc	r0!, {r2, r4, r5, r6}^
    2c68:	636f6c42 	cmnvs	pc, #16896	; 0x4200
    2c6c:	496f546b 	stmdbmi	pc!, {r0, r1, r3, r5, r6, sl, ip, lr}^	; <UNPREDICTABLE>
    2c70:	7265736e 	rsbvc	r7, r5, #-1207959551	; 0xb8000001
    2c74:	54780074 	ldrbtpl	r0, [r8], #-116	; 0xffffff8c
    2c78:	6c61746f 	cfstrdvs	mvd7, [r1], #-444	; 0xfffffe44
    2c7c:	70616548 	rsbvc	r6, r1, r8, asr #10
    2c80:	657a6953 	ldrbvs	r6, [sl, #-2387]!	; 0xfffff6ad
    2c84:	754e7800 	strbvc	r7, [lr, #-2048]	; 0xfffff800
    2c88:	7265626d 	rsbvc	r6, r5, #-805306362	; 0xd0000006
    2c8c:	7553664f 	ldrbvc	r6, [r3, #-1615]	; 0xfffff9b1
    2c90:	73656363 	cmnvc	r5, #-1946157055	; 0x8c000001
    2c94:	6c756673 	ldclvs	6, cr6, [r5], #-460	; 0xfffffe34
    2c98:	65657246 	strbvs	r7, [r5, #-582]!	; 0xfffffdba
    2c9c:	42780073 	rsbsmi	r0, r8, #115	; 0x73
    2ca0:	6b636f6c 	blvs	18dea58 <__RAM_SIZE+0x17dea58>
    2ca4:	657a6953 	ldrbvs	r6, [sl, #-2387]!	; 0xfffff6ad
    2ca8:	74537800 	ldrbvc	r7, [r3], #-2048	; 0xfffff800
    2cac:	00747261 	rsbseq	r7, r4, r1, ror #4
    2cb0:	6f6c4278 	svcvs	0x006c4278
    2cb4:	00736b63 	rsbseq	r6, r3, r3, ror #22
    2cb8:	6d754e78 	ldclvs	14, cr4, [r5, #-480]!	; 0xfffffe20
    2cbc:	46787000 	ldrbtmi	r7, [r8], -r0
    2cc0:	74737269 	ldrbtvc	r7, [r3], #-617	; 0xfffffd97
    2cc4:	65657246 	strbvs	r7, [r5, #-582]!	; 0xfffffdba
    2cc8:	636f6c42 	cmnvs	pc, #16896	; 0x4200
    2ccc:	5778006b 	ldrbpl	r0, [r8, -fp, rrx]!
    2cd0:	65746e61 	ldrbvs	r6, [r4, #-3681]!	; 0xfffff19f
    2cd4:	7a695364 	bvc	1a57a6c <__RAM_SIZE+0x1957a6c>
    2cd8:	50760065 	rsbspl	r0, r6, r5, rrx
    2cdc:	4974726f 	ldmdbmi	r4!, {r0, r1, r2, r3, r5, r6, r9, ip, sp, lr}^
    2ce0:	6974696e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, fp, sp, lr}^
    2ce4:	73696c61 	cmnvc	r9, #24832	; 0x6100
    2ce8:	6f6c4265 	svcvs	0x006c4265
    2cec:	00736b63 	rsbseq	r6, r3, r3, ror #22
    2cf0:	726f5076 	rsbvc	r5, pc, #118	; 0x76
    2cf4:	74654774 	strbtvc	r4, [r5], #-1908	; 0xfffff88c
    2cf8:	70616548 	rsbvc	r6, r1, r8, asr #10
    2cfc:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
    2d00:	78700073 	ldmdavc	r0!, {r0, r1, r4, r5, r6}^
    2d04:	6b6e694c 	blvs	1b9d23c <__RAM_SIZE+0x1a9d23c>
    2d08:	436c7500 	cmnmi	ip, #0, 10
    2d0c:	69746972 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    2d10:	4e6c6163 	powmiez	f6, f4, f3
    2d14:	69747365 	ldmdbvs	r4!, {r0, r2, r5, r6, r8, r9, ip, sp, lr}^
    2d18:	7500676e 	strvc	r6, [r0, #-1902]	; 0xfffff892
    2d1c:	6d75446c 	cfldrdvs	mvd4, [r5, #-432]!	; 0xfffffe50
    2d20:	7500796d 	strvc	r7, [r0, #-2413]	; 0xfffff693
    2d24:	0043506c 	subeq	r5, r3, ip, rrx
    2d28:	56536375 			; <UNDEFINED> instruction: 0x56536375
    2d2c:	6d754e43 	ldclvs	14, cr4, [r5, #-268]!	; 0xfffffef4
    2d30:	00726562 	rsbseq	r6, r2, r2, ror #10
    2d34:	61745376 	cmnvs	r4, r6, ror r3
    2d38:	69467472 	stmdbvs	r6, {r1, r4, r5, r6, sl, ip, sp, lr}^
    2d3c:	54747372 	ldrbtpl	r7, [r4], #-882	; 0xfffffc8e
    2d40:	006b7361 	rsbeq	r7, fp, r1, ror #6
    2d44:	65567870 	ldrbvs	r7, [r6, #-2160]	; 0xfffff790
    2d48:	726f7463 	rsbvc	r7, pc, #1660944384	; 0x63000000
    2d4c:	6c626154 	stfvse	f6, [r2], #-336	; 0xfffffeb0
    2d50:	50760065 	rsbspl	r0, r6, r5, rrx
    2d54:	5374726f 	cmnpl	r4, #-268435450	; 0xf0000006
    2d58:	61484356 	cmpvs	r8, r6, asr r3
    2d5c:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
    2d60:	00435f72 	subeq	r5, r3, r2, ror pc
    2d64:	6f436c75 	svcvs	0x00436c75
    2d68:	656c706d 	strbvs	r7, [ip, #-109]!	; 0xffffff93
    2d6c:	69546574 	ldmdbvs	r4, {r2, r4, r5, r6, r8, sl, sp, lr}^
    2d70:	65506b63 	ldrbvs	r6, [r0, #-2915]	; 0xfffff49d
    2d74:	646f6972 	strbtvs	r6, [pc], #-2418	; 2d7c <__HEAP_SIZE+0x1d7c>
    2d78:	2e2e0073 	mcrcs	0, 1, r0, cr14, cr3, {3}
    2d7c:	2f2e2e2f 	svccs	0x002e2e2f
    2d80:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 2cd0 <__HEAP_SIZE+0x1cd0>
    2d84:	74726269 	ldrbtvc	r6, [r2], #-617	; 0xfffffd97
    2d88:	462f736f 	strtmi	r7, [pc], -pc, ror #6
    2d8c:	52656572 	rsbpl	r6, r5, #478150656	; 0x1c800000
    2d90:	2f534f54 	svccs	0x00534f54
    2d94:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
    2d98:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
    2d9c:	4343472f 	movtmi	r4, #14127	; 0x372f
    2da0:	4d52412f 	ldfmie	f4, [r2, #-188]	; 0xffffff44
    2da4:	334d435f 	movtcc	r4, #54111	; 0xd35f
    2da8:	544e5f33 	strbpl	r5, [lr], #-3891	; 0xfffff0cd
    2dac:	6f6e2f5a 	svcvs	0x006e2f5a
    2db0:	65735f6e 	ldrbvs	r5, [r3, #-3950]!	; 0xfffff092
    2db4:	65727563 	ldrbvs	r7, [r2, #-1379]!	; 0xfffffa9d
    2db8:	726f702f 	rsbvc	r7, pc, #47	; 0x2f
    2dbc:	00632e74 	rsbeq	r2, r3, r4, ror lr
    2dc0:	6f436c75 	svcvs	0x00436c75
    2dc4:	656c706d 	strbvs	r7, [ip, #-109]!	; 0xffffff93
    2dc8:	53646574 	cmnpl	r4, #116, 10	; 0x1d000000
    2dcc:	69547379 	ldmdbvs	r4, {r0, r3, r4, r5, r6, r8, r9, ip, sp, lr}^
    2dd0:	65446b63 	strbvs	r6, [r4, #-2915]	; 0xfffff49d
    2dd4:	6d657263 	sfmvs	f7, 2, [r5, #-396]!	; 0xfffffe74
    2dd8:	73746e65 	cmnvc	r4, #1616	; 0x650
    2ddc:	6c757000 	ldclvs	0, cr7, [r5], #-0
    2de0:	6c6c6143 	stfvse	f6, [ip], #-268	; 0xfffffef4
    2de4:	74537265 	ldrbvc	r7, [r3], #-613	; 0xfffffd9b
    2de8:	416b6361 	cmnmi	fp, r1, ror #6
    2dec:	65726464 	ldrbvs	r6, [r2, #-1124]!	; 0xfffffb9c
    2df0:	75007373 	strvc	r7, [r0, #-883]	; 0xfffffc8d
    2df4:	6f74536c 	svcvs	0x0074536c
    2df8:	64657070 	strbtvs	r7, [r5], #-112	; 0xffffff90
    2dfc:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    2e00:	6d6f4372 	stclvs	3, cr4, [pc, #-456]!	; 2c40 <__HEAP_SIZE+0x1c40>
    2e04:	736e6570 	cmnvc	lr, #112, 10	; 0x1c000000
    2e08:	6f697461 	svcvs	0x00697461
    2e0c:	6c75006e 	ldclvs	0, cr0, [r5], #-440	; 0xfffffe48
    2e10:	54737953 	ldrbtpl	r7, [r3], #-2387	; 0xfffff6ad
    2e14:	446b6369 	strbtmi	r6, [fp], #-873	; 0xfffffc97
    2e18:	65726365 	ldrbvs	r6, [r2, #-869]!	; 0xfffffc9b
    2e1c:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
    2e20:	66654c73 			; <UNDEFINED> instruction: 0x66654c73
    2e24:	6c750074 	ldclvs	0, cr0, [r5], #-464	; 0xfffffe30
    2e28:	636c6143 	cmnvs	ip, #-1073741808	; 0xc0000010
    2e2c:	74616c75 	strbtvc	r6, [r1], #-3189	; 0xfffff38b
    2e30:	6f4c6465 	svcvs	0x004c6465
    2e34:	61566461 	cmpvs	r6, r1, ror #8
    2e38:	0065756c 	rsbeq	r7, r5, ip, ror #10
    2e3c:	646f4d78 	strbtvs	r4, [pc], #-3448	; 2e44 <__HEAP_SIZE+0x1e44>
    2e40:	61696669 	cmnvs	r9, r9, ror #12
    2e44:	49656c62 	stmdbmi	r5!, {r1, r5, r6, sl, fp, sp, lr}^
    2e48:	54656c64 	strbtpl	r6, [r5], #-3172	; 0xfffff39c
    2e4c:	00656d69 	rsbeq	r6, r5, r9, ror #26
    2e50:	6e457870 	mcrvs	8, 2, r7, cr5, cr0, {3}
    2e54:	53664f64 	cmnpl	r6, #100, 30	; 0x190
    2e58:	6b636174 	blvs	18db430 <__RAM_SIZE+0x17db430>
    2e5c:	614d7800 	cmpvs	sp, r0, lsl #16
    2e60:	756d6978 	strbvc	r6, [sp, #-2424]!	; 0xfffff688
    2e64:	736f506d 	cmnvc	pc, #109	; 0x6d
    2e68:	6c626973 			; <UNDEFINED> instruction: 0x6c626973
    2e6c:	70755365 	rsbsvc	r5, r5, r5, ror #6
    2e70:	73657270 	cmnvc	r5, #112, 4
    2e74:	54646573 	strbtpl	r6, [r4], #-1395	; 0xfffffa8d
    2e78:	736b6369 	cmnvc	fp, #-1543503871	; 0xa4000001
    2e7c:	76727000 	ldrbtvc	r7, [r2], -r0
    2e80:	6b736154 	blvs	1cdb3d8 <__RAM_SIZE+0x1bdb3d8>
    2e84:	74697845 	strbtvc	r7, [r9], #-2117	; 0xfffff7bb
    2e88:	6f727245 	svcvs	0x00727245
    2e8c:	50760072 	rsbspl	r0, r6, r2, ror r0
    2e90:	5374726f 	cmnpl	r4, #-268435450	; 0xf0000006
    2e94:	70757465 	rsbsvc	r7, r5, r5, ror #8
    2e98:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    2e9c:	746e4972 	strbtvc	r4, [lr], #-2418	; 0xfffff68e
    2ea0:	75727265 	ldrbvc	r7, [r2, #-613]!	; 0xfffffd9b
    2ea4:	70007470 	andvc	r7, r0, r0, ror r4
    2ea8:	646f4378 	strbtvs	r4, [pc], #-888	; 2eb0 <__HEAP_SIZE+0x1eb0>
    2eac:	50780065 	rsbspl	r0, r8, r5, rrx
    2eb0:	4974726f 	ldmdbmi	r4!, {r0, r1, r2, r3, r5, r6, r9, ip, sp, lr}^
    2eb4:	736e4973 	cmnvc	lr, #1884160	; 0x1cc000
    2eb8:	49656469 	stmdbmi	r5!, {r0, r3, r5, r6, sl, sp, lr}^
    2ebc:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
    2ec0:	74707572 	ldrbtvc	r7, [r0], #-1394	; 0xfffffa8e
    2ec4:	436c7500 	cmnmi	ip, #0, 10
    2ec8:	65727275 	ldrbvs	r7, [r2, #-629]!	; 0xfffffd8b
    2ecc:	6e49746e 	cdpvs	4, 4, cr7, cr9, cr14, {3}
    2ed0:	72726574 	rsbsvc	r6, r2, #116, 10	; 0x1d000000
    2ed4:	00747075 	rsbseq	r7, r4, r5, ror r0
    2ed8:	73655276 	cmnvc	r5, #1610612743	; 0x60000007
    2edc:	65726f74 	ldrbvs	r6, [r2, #-3956]!	; 0xfffff08c
    2ee0:	746e6f43 	strbtvc	r6, [lr], #-3907	; 0xfffff0bd
    2ee4:	4f747865 	svcmi	0x00747865
    2ee8:	72694666 	rsbvc	r4, r9, #106954752	; 0x6600000
    2eec:	61547473 	cmpvs	r4, r3, ror r4
    2ef0:	70006b73 	andvc	r6, r0, r3, ror fp
    2ef4:	4974726f 	ldmdbmi	r4!, {r0, r1, r2, r3, r5, r6, r9, ip, sp, lr}^
    2ef8:	745f5253 	ldrbvc	r5, [pc], #-595	; 2f00 <__HEAP_SIZE+0x1f00>
    2efc:	73795300 	cmnvc	r9, #0, 6
    2f00:	6b636954 	blvs	18dd458 <__RAM_SIZE+0x17dd458>
    2f04:	6e61485f 	mcrvs	8, 3, r4, cr1, cr15, {2}
    2f08:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
    2f0c:	526c7500 	rsbpl	r7, ip, #0, 10
    2f10:	616f6c65 	cmnvs	pc, r5, ror #24
    2f14:	6c615664 	stclvs	6, cr5, [r1], #-400	; 0xfffffe70
    2f18:	75006575 	strvc	r6, [r0, #-1397]	; 0xfffffa8b
    2f1c:	6d69546c 	cfstrdvs	mvd5, [r9, #-432]!	; 0xfffffe50
    2f20:	6f437265 	svcvs	0x00437265
    2f24:	73746e75 	cmnvc	r4, #1872	; 0x750
    2f28:	4f726f46 	svcmi	0x00726f46
    2f2c:	6954656e 	ldmdbvs	r4, {r1, r2, r3, r5, r6, r8, sl, sp, lr}^
    2f30:	75006b63 	strvc	r6, [r0, #-2915]	; 0xfffff49d
    2f34:	6572506c 	ldrbvs	r5, [r2, #-108]!	; 0xffffff94
    2f38:	756f6976 	strbvc	r6, [pc, #-2422]!	; 25ca <__HEAP_SIZE+0x15ca>
    2f3c:	73614d73 	cmnvc	r1, #7360	; 0x1cc0
    2f40:	6550006b 	ldrbvs	r0, [r0, #-107]	; 0xffffff95
    2f44:	5653646e 	ldrbpl	r6, [r3], -lr, ror #8
    2f48:	6e61485f 	mcrvs	8, 3, r4, cr1, cr15, {2}
    2f4c:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
    2f50:	2f2e2e00 	svccs	0x002e2e00
    2f54:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    2f58:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    2f5c:	6f747262 	svcvs	0x00747262
    2f60:	72462f73 	subvc	r2, r6, #460	; 0x1cc
    2f64:	54526565 	ldrbpl	r6, [r2], #-1381	; 0xfffffa9b
    2f68:	702f534f 	eorvc	r5, pc, pc, asr #6
    2f6c:	6174726f 	cmnvs	r4, pc, ror #4
    2f70:	2f656c62 	svccs	0x00656c62
    2f74:	2f434347 	svccs	0x00434347
    2f78:	5f4d5241 	svcpl	0x004d5241
    2f7c:	33334d43 	teqcc	r3, #4288	; 0x10c0
    2f80:	5a544e5f 	bpl	1516904 <__RAM_SIZE+0x1416904>
    2f84:	6e6f6e2f 	cdpvs	14, 6, cr6, cr15, cr15, {1}
    2f88:	6365735f 	cmnvs	r5, #2080374785	; 0x7c000001
    2f8c:	2f657275 	svccs	0x00657275
    2f90:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
    2f94:	2e6d7361 	cdpcs	3, 6, cr7, cr13, cr1, {3}
    2f98:	49780063 	ldmdbmi	r8!, {r0, r1, r5, r6}^
    2f9c:	69725073 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, ip, lr}^
    2fa0:	656c6976 	strbvs	r6, [ip, #-2422]!	; 0xfffff68a
    2fa4:	00646567 	rsbeq	r6, r4, r7, ror #10
    2fa8:	5f435653 	svcpl	0x00435653
    2fac:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
    2fb0:	0072656c 	rsbseq	r6, r2, ip, ror #10
    2fb4:	73655276 	cmnvc	r5, #1610612743	; 0x60000007
    2fb8:	72507465 	subsvc	r7, r0, #1694498816	; 0x65000000
    2fbc:	6c697669 	stclvs	6, cr7, [r9], #-420	; 0xfffffe5c
    2fc0:	00656765 	rsbeq	r6, r5, r5, ror #14
    2fc4:	614d6c75 	hvcvs	54981	; 0xd6c5
    2fc8:	76006b73 			; <UNDEFINED> instruction: 0x76006b73
    2fcc:	73696152 	cmnvc	r9, #-2147483628	; 0x80000014
    2fd0:	69725065 	ldmdbvs	r2!, {r0, r2, r5, r6, ip, lr}^
    2fd4:	656c6976 	strbvs	r6, [ip, #-2422]!	; 0xfffff68a
    2fd8:	2e006567 	cfsh32cs	mvfx6, mvfx0, #55
    2fdc:	6174732f 	cmnvs	r4, pc, lsr #6
    2fe0:	70757472 	rsbsvc	r7, r5, r2, ror r4
    2fe4:	6363672f 	cmnvs	r3, #12320768	; 0xbc0000
    2fe8:	6174732f 	cmnvs	r4, pc, lsr #6
    2fec:	70757472 	rsbsvc	r7, r5, r2, ror r4
    2ff0:	4d52415f 	ldfmie	f4, [r2, #-380]	; 0xfffffe84
    2ff4:	33334d43 	teqcc	r3, #4288	; 0x10c0
    2ff8:	4700732e 	strmi	r7, [r0, -lr, lsr #6]
    2ffc:	4120554e 			; <UNDEFINED> instruction: 0x4120554e
    3000:	2e322053 	mrccs	0, 1, r2, cr2, cr3, {2}
    3004:	312e3633 			; <UNDEFINED> instruction: 0x312e3633
    3008:	2f2e2e00 	svccs	0x002e2e00
    300c:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    3010:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    3014:	69747562 	ldmdbvs	r4!, {r1, r5, r6, r8, sl, ip, sp, lr}^
    3018:	662f736c 	strtvs	r7, [pc], -ip, ror #6
    301c:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
    3020:	6d75642d 	cfldrdvs	mvd6, [r5, #-180]!	; 0xffffff4c
    3024:	70632f70 	rsbvc	r2, r3, r0, ror pc
    3028:	6f632f75 	svcvs	0x00632f75
    302c:	78657472 	stmdavc	r5!, {r1, r4, r5, r6, sl, ip, sp, lr}^
    3030:	33336d2d 	teqcc	r3, #2880	; 0xb40
    3034:	7561662f 	strbvc	r6, [r1, #-1583]!	; 0xfffff9d1
    3038:	672d746c 	strvs	r7, [sp, -ip, ror #8]!
    303c:	732e6363 			; <UNDEFINED> instruction: 0x732e6363
	...

Disassembly of section .debug_frame:

00000000 <.debug_frame>:
    __asm volatile ( "mrs %0, ipsr" : "=r" ( ulCurrentInterrupt )::"memory" );
       0:	0000000c 	andeq	r0, r0, ip
    if( ulCurrentInterrupt == 0 )
       4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
        xReturn = pdFALSE;
       8:	7c020001 	stcvc	0, cr0, [r2], {1}
}
       c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
      10:	0000001c 	andeq	r0, r0, ip, lsl r0
      14:	00000000 	andeq	r0, r0, r0
        if(ch == '\n' || it >= size) {
      18:	10000800 	andne	r0, r0, r0, lsl #16
}
      1c:	00000044 	andeq	r0, r0, r4, asr #32
      20:	8e040e41 	cdphi	14, 0, cr0, cr4, cr1, {2}
      24:	100e4101 	andne	r4, lr, r1, lsl #2
      28:	040e0a52 	streq	r0, [lr], #-2642	; 0xfffff5ae
      2c:	00000b42 	andeq	r0, r0, r2, asr #22
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
      30:	00000014 	andeq	r0, r0, r4, lsl r0
	...
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
      3c:	00000010 	andeq	r0, r0, r0, lsl r0
      40:	83080e41 	movwhi	r0, #36417	; 0x8e41
        BaseType_t xReturn = pdFAIL;
      44:	00018e02 	andeq	r8, r1, r2, lsl #28
    }
      48:	00000014 	andeq	r0, r0, r4, lsl r0
	...
            while( pxBlock != pxEnd )
      54:	00000010 	andeq	r0, r0, r0, lsl r0
                if( pxBlock->xBlockSize > xMaxSize )
      58:	83080e41 	movwhi	r0, #36417	; 0x8e41
      5c:	00018e02 	andeq	r8, r1, r2, lsl #28
                if( pxBlock->xBlockSize < xMinSize )
      60:	0000001c 	andeq	r0, r0, ip, lsl r0
                    xMinSize = pxBlock->xBlockSize;
      64:	00000000 	andeq	r0, r0, r0
      68:	10000844 	andne	r0, r0, r4, asr #16
      6c:	00000068 	andeq	r0, r0, r8, rrx
      70:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
      74:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
      78:	900e4101 	andls	r4, lr, r1, lsl #2
      7c:	0c0e6902 			; <UNDEFINED> instruction: 0x0c0e6902
            prvUnlockQueue( pxQueue );
      80:	00000014 	andeq	r0, r0, r4, lsl r0
            ( void ) xTaskResumeAll();
      84:	00000000 	andeq	r0, r0, r0
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
      88:	100008ac 	andne	r0, r0, ip, lsr #17
      8c:	0000001c 	andeq	r0, r0, ip, lsl r0
      90:	83080e41 	movwhi	r0, #36417	; 0x8e41
        taskENTER_CRITICAL();
      94:	00018e02 	andeq	r8, r1, r2, lsl #28
            if( uxSemaphoreCount > ( UBaseType_t ) 0 )
      98:	00000014 	andeq	r0, r0, r4, lsl r0
                if( xTicksToWait == ( TickType_t ) 0 )
      9c:	00000000 	andeq	r0, r0, r0
      a0:	100008c8 	andne	r0, r0, r8, asr #17
                else if( xEntryTimeSet == pdFALSE )
      a4:	00000018 	andeq	r0, r0, r8, lsl r0
        taskEXIT_CRITICAL();
      a8:	83080e41 	movwhi	r0, #36417	; 0x8e41
        vTaskSuspendAll();
      ac:	00018e02 	andeq	r8, r1, r2, lsl #28
        prvLockQueue( pxQueue );
      b0:	00000014 	andeq	r0, r0, r4, lsl r0
      b4:	00000000 	andeq	r0, r0, r0
      b8:	100008e0 	andne	r0, r0, r0, ror #17
      bc:	00000018 	andeq	r0, r0, r8, lsl r0
      c0:	83080e41 	movwhi	r0, #36417	; 0x8e41
      c4:	00018e02 	andeq	r8, r1, r2, lsl #28
      c8:	00000014 	andeq	r0, r0, r4, lsl r0
      cc:	00000000 	andeq	r0, r0, r0
        if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
      d0:	100008f8 	strdne	r0, [r0], -r8
      d4:	00000018 	andeq	r0, r0, r8, lsl r0
      d8:	83080e41 	movwhi	r0, #36417	; 0x8e41
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
      dc:	00018e02 	andeq	r8, r1, r2, lsl #28
      e0:	00000014 	andeq	r0, r0, r4, lsl r0
                    if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
      e4:	00000000 	andeq	r0, r0, r0
      e8:	10000910 	andne	r0, r0, r0, lsl r9
                vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
      ec:	00000018 	andeq	r0, r0, r8, lsl r0
      f0:	83080e41 	movwhi	r0, #36417	; 0x8e41
                prvUnlockQueue( pxQueue );
      f4:	00018e02 	andeq	r8, r1, r2, lsl #28
      f8:	00000014 	andeq	r0, r0, r4, lsl r0
                if( xTaskResumeAll() == pdFALSE )
      fc:	00000000 	andeq	r0, r0, r0
     100:	10000928 	andne	r0, r0, r8, lsr #18
                    taskYIELD_WITHIN_API();
     104:	00000018 	andeq	r0, r0, r8, lsl r0
                    if( xInheritanceOccurred != pdFALSE )
     108:	83080e41 	movwhi	r0, #36417	; 0x8e41
                return errQUEUE_EMPTY;
     10c:	00018e02 	andeq	r8, r1, r2, lsl #28
                        taskENTER_CRITICAL();
     110:	00000014 	andeq	r0, r0, r4, lsl r0
                            uxHighestWaitingPriority = prvGetDisinheritPriorityAfterTimeout( pxQueue );
     114:	00000000 	andeq	r0, r0, r0
     118:	10000940 	andne	r0, r0, r0, asr #18
                            vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
     11c:	00000024 	andeq	r0, r0, r4, lsr #32
                        taskEXIT_CRITICAL();
     120:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     124:	00018e02 	andeq	r8, r1, r2, lsl #28
     128:	00000014 	andeq	r0, r0, r4, lsl r0
     12c:	00000000 	andeq	r0, r0, r0
     130:	10000964 	andne	r0, r0, r4, ror #18
     134:	0000002c 	andeq	r0, r0, ip, lsr #32
     138:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     13c:	00018e02 	andeq	r8, r1, r2, lsl #28
     140:	0000000c 	andeq	r0, r0, ip
     144:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     148:	7c020001 	stcvc	0, cr0, [r2], {1}
     14c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     150:	0000000c 	andeq	r0, r0, ip
     154:	00000140 	andeq	r0, r0, r0, asr #2
     158:	00000000 	andeq	r0, r0, r0
     15c:	00000010 	andeq	r0, r0, r0, lsl r0
     160:	0000000c 	andeq	r0, r0, ip
     164:	00000140 	andeq	r0, r0, r0, asr #2
     168:	10000990 	mulne	r0, r0, r9
     16c:	0000002c 	andeq	r0, r0, ip, lsr #32
     170:	0000000c 	andeq	r0, r0, ip
     174:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     178:	7c020001 	stcvc	0, cr0, [r2], {1}
     17c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     180:	0000000c 	andeq	r0, r0, ip
     184:	00000170 	andeq	r0, r0, r0, ror r1
     188:	00000000 	andeq	r0, r0, r0
     18c:	00000008 	andeq	r0, r0, r8
     190:	0000000c 	andeq	r0, r0, ip
     194:	00000170 	andeq	r0, r0, r0, ror r1
     198:	100009bc 			; <UNDEFINED> instruction: 0x100009bc
     19c:	00000002 	andeq	r0, r0, r2
     1a0:	00000018 	andeq	r0, r0, r8, lsl r0
     1a4:	00000170 	andeq	r0, r0, r0, ror r1
     1a8:	00000000 	andeq	r0, r0, r0
     1ac:	0000000e 	andeq	r0, r0, lr
     1b0:	83080e42 	movwhi	r0, #36418	; 0x8e42
     1b4:	44018e02 	strmi	r8, [r1], #-3586	; 0xfffff1fe
     1b8:	cec3000e 	cdpgt	0, 12, cr0, cr3, cr14, {0}
     1bc:	0000000c 	andeq	r0, r0, ip
     1c0:	00000170 	andeq	r0, r0, r0, ror r1
     1c4:	100009be 			; <UNDEFINED> instruction: 0x100009be
     1c8:	00000024 	andeq	r0, r0, r4, lsr #32
     1cc:	0000002c 	andeq	r0, r0, ip, lsr #32
     1d0:	00000170 	andeq	r0, r0, r0, ror r1
     1d4:	100009e2 	andne	r0, r0, r2, ror #19
     1d8:	0000007e 	andeq	r0, r0, lr, ror r0
     1dc:	84240e42 	strthi	r0, [r4], #-3650	; 0xfffff1be
     1e0:	86088509 	strhi	r8, [r8], -r9, lsl #10
     1e4:	88068707 	stmdahi	r6, {r0, r1, r2, r8, r9, sl, pc}
     1e8:	8a048905 	bhi	122604 <__RAM_SIZE+0x22604>
     1ec:	8e028b03 	vmlahi.f64	d8, d2, d3
     1f0:	300e4101 	andcc	r4, lr, r1, lsl #2
     1f4:	240e0a6f 	strcs	r0, [lr], #-2671	; 0xfffff591
     1f8:	00000b42 	andeq	r0, r0, r2, asr #22
     1fc:	00000028 	andeq	r0, r0, r8, lsr #32
     200:	00000170 	andeq	r0, r0, r0, ror r1
     204:	10000a60 	andne	r0, r0, r0, ror #20
     208:	00000138 	andeq	r0, r0, r8, lsr r1
     20c:	841c0e42 	ldrhi	r0, [ip], #-3650	; 0xfffff1be
     210:	86068507 	strhi	r8, [r6], -r7, lsl #10
     214:	88048705 	stmdahi	r4, {r0, r2, r8, r9, sl, pc}
     218:	8e028903 	vmlahi.f16	s16, s4, s6	; <UNPREDICTABLE>
     21c:	300e4101 	andcc	r4, lr, r1, lsl #2
     220:	0e0a5b02 	vmlaeq.f64	d5, d10, d2
     224:	000b421c 	andeq	r4, fp, ip, lsl r2
     228:	00000020 	andeq	r0, r0, r0, lsr #32
     22c:	00000170 	andeq	r0, r0, r0, ror r1
     230:	10000b98 	mulne	r0, r8, fp
     234:	00000094 	muleq	r0, r4, r0
     238:	84140e41 	ldrhi	r0, [r4], #-3649	; 0xfffff1bf
     23c:	86048505 	strhi	r8, [r4], -r5, lsl #10
     240:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
     244:	580e4101 	stmdapl	lr, {r0, r8, lr}
     248:	140e4702 	strne	r4, [lr], #-1794	; 0xfffff8fe
     24c:	00000028 	andeq	r0, r0, r8, lsr #32
     250:	00000170 	andeq	r0, r0, r0, ror r1
     254:	10000c2c 	andne	r0, r0, ip, lsr #24
     258:	000000c6 	andeq	r0, r0, r6, asr #1
     25c:	84240e42 	strthi	r0, [r4], #-3650	; 0xfffff1be
     260:	86088509 	strhi	r8, [r8], -r9, lsl #10
     264:	88068707 	stmdahi	r6, {r0, r1, r2, r8, r9, sl, pc}
     268:	8a048905 	bhi	122684 <__RAM_SIZE+0x22684>
     26c:	8e028b03 	vmlahi.f64	d8, d2, d3
     270:	780e4101 	stmdavc	lr, {r0, r8, lr}
     274:	240e5e02 	strcs	r5, [lr], #-3586	; 0xfffff1fe
     278:	0000003c 	andeq	r0, r0, ip, lsr r0
     27c:	00000170 	andeq	r0, r0, r0, ror r1
     280:	10000cf8 	strdne	r0, [r0], -r8
     284:	000003ea 	andeq	r0, r0, sl, ror #7
     288:	84240e42 	strthi	r0, [r4], #-3650	; 0xfffff1be
     28c:	86088509 	strhi	r8, [r8], -r9, lsl #10
     290:	88068707 	stmdahi	r6, {r0, r1, r2, r8, r9, sl, pc}
     294:	8a048905 	bhi	1226b0 <__RAM_SIZE+0x226b0>
     298:	8e028b03 	vmlahi.f64	d8, d2, d3
     29c:	2c0e4201 	sfmcs	f4, 4, [lr], {1}
     2a0:	050b5005 	streq	r5, [fp, #-5]
     2a4:	0e410a51 			; <UNDEFINED> instruction: 0x0e410a51
     2a8:	01250370 			; <UNDEFINED> instruction: 0x01250370
     2ac:	422c0e0a 	eormi	r0, ip, #10, 28	; 0xa0
     2b0:	51065006 	tstpl	r6, r6
     2b4:	0b42240e 	bleq	10892f4 <__RAM_SIZE+0xf892f4>
     2b8:	00000040 	andeq	r0, r0, r0, asr #32
     2bc:	00000170 	andeq	r0, r0, r0, ror r1
     2c0:	100010e8 	andne	r1, r0, r8, ror #1
     2c4:	00000396 	muleq	r0, r6, r3
     2c8:	84240e42 	strthi	r0, [r4], #-3650	; 0xfffff1be
     2cc:	86088509 	strhi	r8, [r8], -r9, lsl #10
     2d0:	88068707 	stmdahi	r6, {r0, r1, r2, r8, r9, sl, pc}
     2d4:	8a048905 	bhi	1226f0 <__RAM_SIZE+0x226f0>
     2d8:	8e028b03 	vmlahi.f64	d8, d2, d3
     2dc:	2c0e4201 	sfmcs	f4, 4, [lr], {1}
     2e0:	050b5005 	streq	r5, [fp, #-5]
     2e4:	0e410a51 			; <UNDEFINED> instruction: 0x0e410a51
     2e8:	8d030180 	stfhis	f0, [r3, #-512]	; 0xfffffe00
     2ec:	2c0e0a01 			; <UNDEFINED> instruction: 0x2c0e0a01
     2f0:	06500642 	ldrbeq	r0, [r0], -r2, asr #12
     2f4:	42240e51 	eormi	r0, r4, #1296	; 0x510
     2f8:	0000000b 	andeq	r0, r0, fp
     2fc:	0000002c 	andeq	r0, r0, ip, lsr #32
     300:	00000170 	andeq	r0, r0, r0, ror r1
     304:	10001480 	andne	r1, r0, r0, lsl #9
     308:	00000680 	andeq	r0, r0, r0, lsl #13
     30c:	84240e42 	strthi	r0, [r4], #-3650	; 0xfffff1be
     310:	86088509 	strhi	r8, [r8], -r9, lsl #10
     314:	88068707 	stmdahi	r6, {r0, r1, r2, r8, r9, sl, pc}
     318:	8a048905 	bhi	122734 <__RAM_SIZE+0x22734>
     31c:	8e028b03 	vmlahi.f64	d8, d2, d3
     320:	600e4101 	andvs	r4, lr, r1, lsl #2
     324:	0e033803 	cdpeq	8, 0, cr3, cr3, cr3, {0}
     328:	00000024 	andeq	r0, r0, r4, lsr #32
     32c:	00000014 	andeq	r0, r0, r4, lsl r0
     330:	00000170 	andeq	r0, r0, r0, ror r1
     334:	10001b00 	andne	r1, r0, r0, lsl #22
     338:	0000000c 	andeq	r0, r0, ip
     33c:	83080e43 	movwhi	r0, #36419	; 0x8e43
     340:	00018e02 	andeq	r8, r1, r2, lsl #28
     344:	00000030 	andeq	r0, r0, r0, lsr r0
     348:	00000170 	andeq	r0, r0, r0, ror r1
     34c:	10001b0c 	andne	r1, r0, ip, lsl #22
     350:	0000002c 	andeq	r0, r0, ip, lsr #32
     354:	80100e41 	andshi	r0, r0, r1, asr #28
     358:	82038104 	andhi	r8, r3, #4, 2
     35c:	41018302 	tstmi	r1, r2, lsl #6
     360:	058e140e 	streq	r1, [lr, #1038]	; 0x40e
     364:	4c280e41 	stcmi	14, cr0, [r8], #-260	; 0xfffffefc
     368:	ce42140e 	cdpgt	4, 4, cr1, cr2, cr14, {0}
     36c:	c341100e 	movtgt	r1, #4110	; 0x100e
     370:	0ec0c1c2 	acseqdm	f4, f2
     374:	00000000 	andeq	r0, r0, r0
     378:	0000002c 	andeq	r0, r0, ip, lsr #32
     37c:	00000170 	andeq	r0, r0, r0, ror r1
     380:	00000000 	andeq	r0, r0, r0
     384:	0000002c 	andeq	r0, r0, ip, lsr #32
     388:	810c0e41 	tsthi	ip, r1, asr #28
     38c:	83028203 	movwhi	r8, #8707	; 0x2203
     390:	100e4101 	andne	r4, lr, r1, lsl #2
     394:	0e41048e 	cdpeq	4, 4, cr0, cr1, cr14, {4}
     398:	100e4c20 	andne	r4, lr, r0, lsr #24
     39c:	0c0ece42 	stceq	14, cr12, [lr], {66}	; 0x42
     3a0:	c1c2c341 	bicgt	ip, r2, r1, asr #6
     3a4:	0000000e 	andeq	r0, r0, lr
     3a8:	0000002c 	andeq	r0, r0, ip, lsr #32
     3ac:	00000170 	andeq	r0, r0, r0, ror r1
     3b0:	00000000 	andeq	r0, r0, r0
     3b4:	00000028 	andeq	r0, r0, r8, lsr #32
     3b8:	82080e41 	andhi	r0, r8, #1040	; 0x410
     3bc:	41018302 	tstmi	r1, r2, lsl #6
     3c0:	0484100e 	streq	r1, [r4], #14
     3c4:	0e41038e 	cdpeq	3, 4, cr0, cr1, cr14, {4}
     3c8:	100e4b20 	andne	r4, lr, r0, lsr #22
     3cc:	0ec4ce42 	cdpeq	14, 12, cr12, cr4, cr2, {2}
     3d0:	c2c34108 	sbcgt	r4, r3, #8, 2
     3d4:	0000000e 	andeq	r0, r0, lr
     3d8:	00000018 	andeq	r0, r0, r8, lsl r0
     3dc:	00000170 	andeq	r0, r0, r0, ror r1
     3e0:	00000000 	andeq	r0, r0, r0
     3e4:	00000020 	andeq	r0, r0, r0, lsr #32
     3e8:	8e040e41 	cdphi	14, 0, cr0, cr4, cr1, {2}
     3ec:	180e4101 	stmdane	lr, {r0, r8, lr}
     3f0:	00040e49 	andeq	r0, r4, r9, asr #28
     3f4:	00000018 	andeq	r0, r0, r8, lsl r0
     3f8:	00000170 	andeq	r0, r0, r0, ror r1
     3fc:	00000000 	andeq	r0, r0, r0
     400:	0000001c 	andeq	r0, r0, ip, lsl r0
     404:	8e040e41 	cdphi	14, 0, cr0, cr4, cr1, {2}
     408:	100e4101 	andne	r4, lr, r1, lsl #2
     40c:	00040e48 	andeq	r0, r4, r8, asr #28
     410:	00000028 	andeq	r0, r0, r8, lsr #32
     414:	00000170 	andeq	r0, r0, r0, ror r1
     418:	00000000 	andeq	r0, r0, r0
     41c:	00000030 	andeq	r0, r0, r0, lsr r0
     420:	82080e41 	andhi	r0, r8, #1040	; 0x410
     424:	41018302 	tstmi	r1, r2, lsl #6
     428:	038e0c0e 	orreq	r0, lr, #3584	; 0xe00
     42c:	4e280e41 	cdpmi	14, 2, cr0, cr8, cr1, {2}
     430:	ce420c0e 	cdpgt	12, 4, cr0, cr2, cr14, {0}
     434:	c341080e 	movtgt	r0, #6158	; 0x180e
     438:	00000ec2 	andeq	r0, r0, r2, asr #29
     43c:	0000000c 	andeq	r0, r0, ip
     440:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     444:	7c020001 	stcvc	0, cr0, [r2], {1}
     448:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     44c:	0000000c 	andeq	r0, r0, ip
     450:	0000043c 	andeq	r0, r0, ip, lsr r4
     454:	10001b38 	andne	r1, r0, r8, lsr fp
     458:	00000014 	andeq	r0, r0, r4, lsl r0
     45c:	0000000c 	andeq	r0, r0, ip
     460:	0000043c 	andeq	r0, r0, ip, lsr r4
     464:	00000000 	andeq	r0, r0, r0
     468:	00000014 	andeq	r0, r0, r4, lsl r0
     46c:	00000018 	andeq	r0, r0, r8, lsl r0
     470:	0000043c 	andeq	r0, r0, ip, lsr r4
     474:	10001b4c 	andne	r1, r0, ip, asr #22
     478:	0000001e 	andeq	r0, r0, lr, lsl r0
     47c:	83100e41 	tsthi	r0, #1040	; 0x410
     480:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     484:	00018e02 	andeq	r8, r1, r2, lsl #28
     488:	0000000c 	andeq	r0, r0, ip
     48c:	0000043c 	andeq	r0, r0, ip, lsr r4
     490:	10001b6c 	andne	r1, r0, ip, ror #22
     494:	00000024 	andeq	r0, r0, r4, lsr #32
     498:	00000014 	andeq	r0, r0, r4, lsl r0
     49c:	0000043c 	andeq	r0, r0, ip, lsr r4
     4a0:	00000000 	andeq	r0, r0, r0
     4a4:	00000008 	andeq	r0, r0, r8
     4a8:	83080e41 	movwhi	r0, #36417	; 0x8e41
     4ac:	00018e02 	andeq	r8, r1, r2, lsl #28
     4b0:	00000018 	andeq	r0, r0, r8, lsl r0
     4b4:	0000043c 	andeq	r0, r0, ip, lsr r4
     4b8:	00000000 	andeq	r0, r0, r0
     4bc:	00000020 	andeq	r0, r0, r0, lsr #32
     4c0:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
     4c4:	86038504 	strhi	r8, [r3], -r4, lsl #10
     4c8:	00018e02 	andeq	r8, r1, r2, lsl #28
     4cc:	0000000c 	andeq	r0, r0, ip
     4d0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     4d4:	7c020001 	stcvc	0, cr0, [r2], {1}
     4d8:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     4dc:	00000014 	andeq	r0, r0, r4, lsl r0
     4e0:	000004cc 	andeq	r0, r0, ip, asr #9
     4e4:	10001b90 	mulne	r0, r0, fp
     4e8:	0000002c 	andeq	r0, r0, ip, lsr #32
     4ec:	54080e41 	strpl	r0, [r8], #-3649	; 0xfffff1bf
     4f0:	0000000e 	andeq	r0, r0, lr
     4f4:	0000000c 	andeq	r0, r0, ip
     4f8:	000004cc 	andeq	r0, r0, ip, asr #9
     4fc:	10001bbc 			; <UNDEFINED> instruction: 0x10001bbc
     500:	00000036 	andeq	r0, r0, r6, lsr r0
     504:	00000020 	andeq	r0, r0, r0, lsr #32
     508:	000004cc 	andeq	r0, r0, ip, asr #9
     50c:	10001bf4 	strdne	r1, [r0], -r4
     510:	0000007c 	andeq	r0, r0, ip, ror r0
     514:	83200e42 			; <UNDEFINED> instruction: 0x83200e42
     518:	85078408 	strhi	r8, [r7, #-1032]	; 0xfffffbf8
     51c:	87058606 	strhi	r8, [r5, -r6, lsl #12]
     520:	89038804 	stmdbhi	r3, {r2, fp, pc}
     524:	00018e02 	andeq	r8, r1, r2, lsl #28
     528:	00000014 	andeq	r0, r0, r4, lsl r0
     52c:	000004cc 	andeq	r0, r0, ip, asr #9
     530:	10001c70 	andne	r1, r0, r0, ror ip
     534:	00000018 	andeq	r0, r0, r8, lsl r0
     538:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     53c:	00018e02 	andeq	r8, r1, r2, lsl #28
     540:	00000014 	andeq	r0, r0, r4, lsl r0
     544:	000004cc 	andeq	r0, r0, ip, asr #9
     548:	10001c88 	andne	r1, r0, r8, lsl #25
     54c:	00000008 	andeq	r0, r0, r8
     550:	83080e41 	movwhi	r0, #36417	; 0x8e41
     554:	00018e02 	andeq	r8, r1, r2, lsl #28
     558:	00000014 	andeq	r0, r0, r4, lsl r0
     55c:	000004cc 	andeq	r0, r0, ip, asr #9
     560:	10001c90 	mulne	r0, r0, ip
     564:	00000050 	andeq	r0, r0, r0, asr r0
     568:	83080e41 	movwhi	r0, #36417	; 0x8e41
     56c:	00018e02 	andeq	r8, r1, r2, lsl #28
     570:	0000001c 	andeq	r0, r0, ip, lsl r0
     574:	000004cc 	andeq	r0, r0, ip, asr #9
     578:	10001ce0 	andne	r1, r0, r0, ror #25
     57c:	000001ac 	andeq	r0, r0, ip, lsr #3
     580:	83180e41 	tsthi	r8, #1040	; 0x410
     584:	85058406 	strhi	r8, [r5, #-1030]	; 0xfffffbfa
     588:	87038604 	strhi	r8, [r3, -r4, lsl #12]
     58c:	00018e02 	andeq	r8, r1, r2, lsl #28
     590:	0000000c 	andeq	r0, r0, ip
     594:	000004cc 	andeq	r0, r0, ip, asr #9
     598:	10001e8c 	andne	r1, r0, ip, lsl #29
     59c:	00000006 	andeq	r0, r0, r6
     5a0:	0000000c 	andeq	r0, r0, ip
     5a4:	000004cc 	andeq	r0, r0, ip, asr #9
     5a8:	10001e94 	mulne	r0, r4, lr
     5ac:	00000008 	andeq	r0, r0, r8
     5b0:	0000000c 	andeq	r0, r0, ip
     5b4:	000004cc 	andeq	r0, r0, ip, asr #9
     5b8:	00000000 	andeq	r0, r0, r0
     5bc:	00000014 	andeq	r0, r0, r4, lsl r0
     5c0:	0000000c 	andeq	r0, r0, ip
     5c4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     5c8:	7c020001 	stcvc	0, cr0, [r2], {1}
     5cc:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     5d0:	00000014 	andeq	r0, r0, r4, lsl r0
     5d4:	000005c0 	andeq	r0, r0, r0, asr #11
     5d8:	10001e9c 	mulne	r0, ip, lr
     5dc:	000000fc 	strdeq	r0, [r0], -ip
     5e0:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     5e4:	00018e02 	andeq	r8, r1, r2, lsl #28
     5e8:	0000000c 	andeq	r0, r0, ip
     5ec:	000005c0 	andeq	r0, r0, r0, asr #11
     5f0:	10001f98 	mulne	r0, r8, pc	; <UNPREDICTABLE>
     5f4:	0000000e 	andeq	r0, r0, lr
     5f8:	00000014 	andeq	r0, r0, r4, lsl r0
     5fc:	000005c0 	andeq	r0, r0, r0, asr #11
     600:	00000000 	andeq	r0, r0, r0
     604:	00000020 	andeq	r0, r0, r0, lsr #32
     608:	83080e41 	movwhi	r0, #36417	; 0x8e41
     60c:	00018e02 	andeq	r8, r1, r2, lsl #28
     610:	0000001c 	andeq	r0, r0, ip, lsl r0
     614:	000005c0 	andeq	r0, r0, r0, asr #11
     618:	10001fa8 	andne	r1, r0, r8, lsr #31
     61c:	0000004c 	andeq	r0, r0, ip, asr #32
     620:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
     624:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
     628:	180e4101 	stmdane	lr, {r0, r8, lr}
     62c:	000c0e5f 	andeq	r0, ip, pc, asr lr
     630:	0000000c 	andeq	r0, r0, ip
     634:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     638:	7c020001 	stcvc	0, cr0, [r2], {1}
     63c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     640:	0000000c 	andeq	r0, r0, ip
     644:	00000630 	andeq	r0, r0, r0, lsr r6
     648:	10001ff4 	strdne	r1, [r0], -r4
     64c:	0000001a 	andeq	r0, r0, sl, lsl r0
     650:	0000000c 	andeq	r0, r0, ip
     654:	00000630 	andeq	r0, r0, r0, lsr r6
     658:	1000200e 	andne	r2, r0, lr
     65c:	00000006 	andeq	r0, r0, r6
     660:	0000000c 	andeq	r0, r0, ip
     664:	00000630 	andeq	r0, r0, r0, lsr r6
     668:	00000000 	andeq	r0, r0, r0
     66c:	00000016 	andeq	r0, r0, r6, lsl r0
     670:	0000001c 	andeq	r0, r0, ip, lsl r0
     674:	00000630 	andeq	r0, r0, r0, lsr r6
     678:	10002014 	andne	r2, r0, r4, lsl r0
     67c:	00000032 	andeq	r0, r0, r2, lsr r0
     680:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     684:	55018502 	strpl	r8, [r1, #-1282]	; 0xfffffafe
     688:	0ec4c50a 	cdpeq	5, 12, cr12, cr4, cr10, {0}
     68c:	000b4100 	andeq	r4, fp, r0, lsl #2
     690:	0000000c 	andeq	r0, r0, ip
     694:	00000630 	andeq	r0, r0, r0, lsr r6
     698:	10002046 	andne	r2, r0, r6, asr #32
     69c:	00000024 	andeq	r0, r0, r4, lsr #32
     6a0:	0000000c 	andeq	r0, r0, ip
     6a4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     6a8:	7c020001 	stcvc	0, cr0, [r2], {1}
     6ac:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     6b0:	0000000c 	andeq	r0, r0, ip
     6b4:	000006a0 	andeq	r0, r0, r0, lsr #13
     6b8:	00000000 	andeq	r0, r0, r0
     6bc:	00000010 	andeq	r0, r0, r0, lsl r0
     6c0:	00000014 	andeq	r0, r0, r4, lsl r0
     6c4:	000006a0 	andeq	r0, r0, r0, lsr #13
     6c8:	00000000 	andeq	r0, r0, r0
     6cc:	0000001e 	andeq	r0, r0, lr, lsl r0
     6d0:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     6d4:	00018e02 	andeq	r8, r1, r2, lsl #28
     6d8:	00000014 	andeq	r0, r0, r4, lsl r0
     6dc:	000006a0 	andeq	r0, r0, r0, lsr #13
     6e0:	1000206a 	andne	r2, r0, sl, rrx
     6e4:	0000001a 	andeq	r0, r0, sl, lsl r0
     6e8:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     6ec:	00018e02 	andeq	r8, r1, r2, lsl #28
     6f0:	00000018 	andeq	r0, r0, r8, lsl r0
     6f4:	000006a0 	andeq	r0, r0, r0, lsr #13
     6f8:	10002084 	andne	r2, r0, r4, lsl #1
     6fc:	00000076 	andeq	r0, r0, r6, ror r0
     700:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
     704:	86038504 	strhi	r8, [r3], -r4, lsl #10
     708:	00018e02 	andeq	r8, r1, r2, lsl #28
     70c:	00000018 	andeq	r0, r0, r8, lsl r0
     710:	000006a0 	andeq	r0, r0, r0, lsr #13
     714:	100020fa 	strdne	r2, [r0], -sl
     718:	00000024 	andeq	r0, r0, r4, lsr #32
     71c:	84080e44 	strhi	r0, [r8], #-3652	; 0xfffff1bc
     720:	4d018e02 	stcmi	14, cr8, [r1, #-8]
     724:	cec4000e 	cdpgt	0, 12, cr0, cr4, cr14, {0}
     728:	00000020 	andeq	r0, r0, r0, lsr #32
     72c:	000006a0 	andeq	r0, r0, r0, lsr #13
     730:	1000211e 	andne	r2, r0, lr, lsl r1
     734:	00000058 	andeq	r0, r0, r8, asr r0
     738:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
     73c:	86038504 	strhi	r8, [r3], -r4, lsl #10
     740:	41018e02 	tstmi	r1, r2, lsl #28
     744:	0a49180e 	beq	1246784 <__RAM_SIZE+0x1146784>
     748:	0b41100e 	bleq	1044788 <__RAM_SIZE+0xf44788>
     74c:	00000018 	andeq	r0, r0, r8, lsl r0
     750:	000006a0 	andeq	r0, r0, r0, lsr #13
     754:	10002176 	andne	r2, r0, r6, ror r1
     758:	00000082 	andeq	r0, r0, r2, lsl #1
     75c:	83100e41 	tsthi	r0, #1040	; 0x410
     760:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     764:	00018e02 	andeq	r8, r1, r2, lsl #28
     768:	0000002c 	andeq	r0, r0, ip, lsr #32
     76c:	000006a0 	andeq	r0, r0, r0, lsr #13
     770:	100021f8 	strdne	r2, [r0], -r8
     774:	00000086 	andeq	r0, r0, r6, lsl #1
     778:	83100e43 	tsthi	r0, #1072	; 0x430
     77c:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     780:	7c018e02 	stcvc	14, cr8, [r1], {2}
     784:	c4c3000e 	strbgt	r0, [r3], #14
     788:	0e42cec5 	cdpeq	14, 4, cr12, cr2, cr5, {6}
     78c:	84048310 	strhi	r8, [r4], #-784	; 0xfffffcf0
     790:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
     794:	00000001 	andeq	r0, r0, r1
     798:	00000014 	andeq	r0, r0, r4, lsl r0
     79c:	000006a0 	andeq	r0, r0, r0, lsr #13
     7a0:	1000227e 	andne	r2, r0, lr, ror r2
     7a4:	00000020 	andeq	r0, r0, r0, lsr #32
     7a8:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     7ac:	00018e02 	andeq	r8, r1, r2, lsl #28
     7b0:	00000028 	andeq	r0, r0, r8, lsr #32
     7b4:	000006a0 	andeq	r0, r0, r0, lsr #13
     7b8:	1000229e 	mulne	r0, lr, r2
     7bc:	0000003e 	andeq	r0, r0, lr, lsr r0
     7c0:	84080e42 	strhi	r0, [r8], #-3650	; 0xfffff1be
     7c4:	41018e02 	tstmi	r1, r2, lsl #28
     7c8:	0a51100e 	beq	1444808 <__RAM_SIZE+0x1344808>
     7cc:	0b41080e 	bleq	104280c <__RAM_SIZE+0xf4280c>
     7d0:	c4000e44 	strgt	r0, [r0], #-3652	; 0xfffff1bc
     7d4:	100e42ce 	andne	r4, lr, lr, asr #5
     7d8:	018e0284 	orreq	r0, lr, r4, lsl #5
     7dc:	0000000c 	andeq	r0, r0, ip
     7e0:	000006a0 	andeq	r0, r0, r0, lsr #13
     7e4:	00000000 	andeq	r0, r0, r0
     7e8:	00000018 	andeq	r0, r0, r8, lsl r0
     7ec:	00000024 	andeq	r0, r0, r4, lsr #32
     7f0:	000006a0 	andeq	r0, r0, r0, lsr #13
     7f4:	00000000 	andeq	r0, r0, r0
     7f8:	00000056 	andeq	r0, r0, r6, asr r0
     7fc:	84140e41 	ldrhi	r0, [r4], #-3649	; 0xfffff1bf
     800:	86048505 	strhi	r8, [r4], -r5, lsl #10
     804:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
     808:	200e4101 	andcs	r4, lr, r1, lsl #2
     80c:	140e0a64 	strne	r0, [lr], #-2660	; 0xfffff59c
     810:	00000b41 	andeq	r0, r0, r1, asr #22
     814:	00000028 	andeq	r0, r0, r8, lsr #32
     818:	000006a0 	andeq	r0, r0, r0, lsr #13
     81c:	00000000 	andeq	r0, r0, r0
     820:	0000002a 	andeq	r0, r0, sl, lsr #32
     824:	84080e42 	strhi	r0, [r8], #-3650	; 0xfffff1be
     828:	41018e02 	tstmi	r1, r2, lsl #28
     82c:	0e4d100e 	cdpeq	0, 4, cr1, cr13, cr14, {0}
     830:	42cec400 	sbcmi	ip, lr, #0, 8
     834:	0284100e 	addeq	r1, r4, #14
     838:	0e42018e 	dvfeqd	f0, f2, #0.5
     83c:	00000008 	andeq	r0, r0, r8
     840:	00000020 	andeq	r0, r0, r0, lsr #32
     844:	000006a0 	andeq	r0, r0, r0, lsr #13
     848:	00000000 	andeq	r0, r0, r0
     84c:	00000020 	andeq	r0, r0, r0, lsr #32
     850:	84080e42 	strhi	r0, [r8], #-3650	; 0xfffff1be
     854:	4a018e02 	bmi	64064 <__HEAP_SIZE+0x63064>
     858:	cec4000e 	cdpgt	0, 12, cr0, cr4, cr14, {0}
     85c:	84080e42 	strhi	r0, [r8], #-3650	; 0xfffff1be
     860:	00018e02 	andeq	r8, r1, r2, lsl #28
     864:	00000024 	andeq	r0, r0, r4, lsr #32
     868:	000006a0 	andeq	r0, r0, r0, lsr #13
     86c:	00000000 	andeq	r0, r0, r0
     870:	0000010c 	andeq	r0, r0, ip, lsl #2
     874:	84140e41 	ldrhi	r0, [r4], #-3649	; 0xfffff1bf
     878:	86048505 	strhi	r8, [r4], -r5, lsl #10
     87c:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
     880:	280e4101 	stmdacs	lr, {r0, r8, lr}
     884:	140e0a59 	strne	r0, [lr], #-2649	; 0xfffff5a7
     888:	00000b41 	andeq	r0, r0, r1, asr #22
     88c:	00000018 	andeq	r0, r0, r8, lsl r0
     890:	000006a0 	andeq	r0, r0, r0, lsr #13
     894:	00000000 	andeq	r0, r0, r0
     898:	00000018 	andeq	r0, r0, r8, lsl r0
     89c:	83080e42 	movwhi	r0, #36418	; 0x8e42
     8a0:	49018e02 	stmdbmi	r1, {r1, r9, sl, fp, pc}
     8a4:	cec3000e 	cdpgt	0, 12, cr0, cr3, cr14, {0}
     8a8:	00000014 	andeq	r0, r0, r4, lsl r0
     8ac:	000006a0 	andeq	r0, r0, r0, lsr #13
     8b0:	00000000 	andeq	r0, r0, r0
     8b4:	00000016 	andeq	r0, r0, r6, lsl r0
     8b8:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     8bc:	00018e02 	andeq	r8, r1, r2, lsl #28
     8c0:	0000001c 	andeq	r0, r0, ip, lsl r0
     8c4:	000006a0 	andeq	r0, r0, r0, lsr #13
     8c8:	00000000 	andeq	r0, r0, r0
     8cc:	0000001e 	andeq	r0, r0, lr, lsl r0
     8d0:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     8d4:	41018e02 	tstmi	r1, r2, lsl #28
     8d8:	0e4c100e 	cdpeq	0, 4, cr1, cr12, cr14, {0}
     8dc:	00000008 	andeq	r0, r0, r8
     8e0:	00000018 	andeq	r0, r0, r8, lsl r0
     8e4:	000006a0 	andeq	r0, r0, r0, lsr #13
     8e8:	00000000 	andeq	r0, r0, r0
     8ec:	0000002c 	andeq	r0, r0, ip, lsr #32
     8f0:	83100e41 	tsthi	r0, #1040	; 0x410
     8f4:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     8f8:	00018e02 	andeq	r8, r1, r2, lsl #28
     8fc:	00000020 	andeq	r0, r0, r0, lsr #32
     900:	000006a0 	andeq	r0, r0, r0, lsr #13
     904:	00000000 	andeq	r0, r0, r0
     908:	000000bc 	strheq	r0, [r0], -ip
     90c:	84200e42 	strthi	r0, [r0], #-3650	; 0xfffff1be
     910:	86078508 	strhi	r8, [r7], -r8, lsl #10
     914:	88058706 	stmdahi	r5, {r1, r2, r8, r9, sl, pc}
     918:	8a038904 	bhi	e2d30 <__HEAP_SIZE+0xe1d30>
     91c:	00018e02 	andeq	r8, r1, r2, lsl #28
     920:	0000001c 	andeq	r0, r0, ip, lsl r0
     924:	000006a0 	andeq	r0, r0, r0, lsr #13
     928:	00000000 	andeq	r0, r0, r0
     92c:	00000086 	andeq	r0, r0, r6, lsl #1
     930:	83180e41 	tsthi	r8, #1040	; 0x410
     934:	85058406 	strhi	r8, [r5, #-1030]	; 0xfffffbfa
     938:	87038604 	strhi	r8, [r3, -r4, lsl #12]
     93c:	00018e02 	andeq	r8, r1, r2, lsl #28
     940:	00000024 	andeq	r0, r0, r4, lsr #32
     944:	000006a0 	andeq	r0, r0, r0, lsr #13
     948:	100022dc 	ldrdne	r2, [r0], -ip
     94c:	000000f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
     950:	84140e41 	ldrhi	r0, [r4], #-3649	; 0xfffff1bf
     954:	86048505 	strhi	r8, [r4], -r5, lsl #10
     958:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
     95c:	280e4101 	stmdacs	lr, {r0, r8, lr}
     960:	140e0a51 	strne	r0, [lr], #-2641	; 0xfffff5af
     964:	00000b41 	andeq	r0, r0, r1, asr #22
     968:	00000020 	andeq	r0, r0, r0, lsr #32
     96c:	000006a0 	andeq	r0, r0, r0, lsr #13
     970:	00000000 	andeq	r0, r0, r0
     974:	00000126 	andeq	r0, r0, r6, lsr #2
     978:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
     97c:	86038504 	strhi	r8, [r3], -r4, lsl #10
     980:	41018e02 	tstmi	r1, r2, lsl #28
     984:	0a4f200e 	beq	13c89c4 <__RAM_SIZE+0x12c89c4>
     988:	0b41100e 	bleq	10449c8 <__RAM_SIZE+0xf449c8>
     98c:	00000018 	andeq	r0, r0, r8, lsl r0
     990:	000006a0 	andeq	r0, r0, r0, lsr #13
     994:	00000000 	andeq	r0, r0, r0
     998:	0000002c 	andeq	r0, r0, ip, lsr #32
     99c:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
     9a0:	86038504 	strhi	r8, [r3], -r4, lsl #10
     9a4:	00018e02 	andeq	r8, r1, r2, lsl #28
     9a8:	00000020 	andeq	r0, r0, r0, lsr #32
     9ac:	000006a0 	andeq	r0, r0, r0, lsr #13
     9b0:	00000000 	andeq	r0, r0, r0
     9b4:	000000f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
     9b8:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
     9bc:	86038504 	strhi	r8, [r3], -r4, lsl #10
     9c0:	41018e02 	tstmi	r1, r2, lsl #28
     9c4:	0a51200e 	beq	1448a04 <__RAM_SIZE+0x1348a04>
     9c8:	0b41100e 	bleq	1044a08 <__RAM_SIZE+0xf44a08>
     9cc:	00000020 	andeq	r0, r0, r0, lsr #32
     9d0:	000006a0 	andeq	r0, r0, r0, lsr #13
     9d4:	00000000 	andeq	r0, r0, r0
     9d8:	00000080 	andeq	r0, r0, r0, lsl #1
     9dc:	83200e42 			; <UNDEFINED> instruction: 0x83200e42
     9e0:	85078408 	strhi	r8, [r7, #-1032]	; 0xfffffbf8
     9e4:	87058606 	strhi	r8, [r5, -r6, lsl #12]
     9e8:	89038804 	stmdbhi	r3, {r2, fp, pc}
     9ec:	00018e02 	andeq	r8, r1, r2, lsl #28
     9f0:	0000001c 	andeq	r0, r0, ip, lsl r0
     9f4:	000006a0 	andeq	r0, r0, r0, lsr #13
     9f8:	00000000 	andeq	r0, r0, r0
     9fc:	0000002c 	andeq	r0, r0, ip, lsr #32
     a00:	83180e41 	tsthi	r8, #1040	; 0x410
     a04:	85058406 	strhi	r8, [r5, #-1030]	; 0xfffffbfa
     a08:	87038604 	strhi	r8, [r3, -r4, lsl #12]
     a0c:	00018e02 	andeq	r8, r1, r2, lsl #28
     a10:	00000014 	andeq	r0, r0, r4, lsl r0
     a14:	000006a0 	andeq	r0, r0, r0, lsr #13
     a18:	00000000 	andeq	r0, r0, r0
     a1c:	00000012 	andeq	r0, r0, r2, lsl r0
     a20:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     a24:	00018e02 	andeq	r8, r1, r2, lsl #28
     a28:	00000014 	andeq	r0, r0, r4, lsl r0
     a2c:	000006a0 	andeq	r0, r0, r0, lsr #13
     a30:	00000000 	andeq	r0, r0, r0
     a34:	00000016 	andeq	r0, r0, r6, lsl r0
     a38:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     a3c:	00018e02 	andeq	r8, r1, r2, lsl #28
     a40:	0000000c 	andeq	r0, r0, ip
     a44:	000006a0 	andeq	r0, r0, r0, lsr #13
     a48:	00000000 	andeq	r0, r0, r0
     a4c:	00000004 	andeq	r0, r0, r4
     a50:	00000014 	andeq	r0, r0, r4, lsl r0
     a54:	000006a0 	andeq	r0, r0, r0, lsr #13
     a58:	00000000 	andeq	r0, r0, r0
     a5c:	00000010 	andeq	r0, r0, r0, lsl r0
     a60:	83080e41 	movwhi	r0, #36417	; 0x8e41
     a64:	00018e02 	andeq	r8, r1, r2, lsl #28
     a68:	0000000c 	andeq	r0, r0, ip
     a6c:	000006a0 	andeq	r0, r0, r0, lsr #13
     a70:	00000000 	andeq	r0, r0, r0
     a74:	00000004 	andeq	r0, r0, r4
     a78:	0000000c 	andeq	r0, r0, ip
     a7c:	000006a0 	andeq	r0, r0, r0, lsr #13
     a80:	00000000 	andeq	r0, r0, r0
     a84:	00000004 	andeq	r0, r0, r4
     a88:	0000000c 	andeq	r0, r0, ip
     a8c:	000006a0 	andeq	r0, r0, r0, lsr #13
     a90:	00000000 	andeq	r0, r0, r0
     a94:	0000000c 	andeq	r0, r0, ip
     a98:	0000000c 	andeq	r0, r0, ip
     a9c:	000006a0 	andeq	r0, r0, r0, lsr #13
     aa0:	00000000 	andeq	r0, r0, r0
     aa4:	00000010 	andeq	r0, r0, r0, lsl r0
     aa8:	00000018 	andeq	r0, r0, r8, lsl r0
     aac:	000006a0 	andeq	r0, r0, r0, lsr #13
     ab0:	100023cc 	andne	r2, r0, ip, asr #7
     ab4:	00000052 	andeq	r0, r0, r2, asr r0
     ab8:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
     abc:	86038504 	strhi	r8, [r3], -r4, lsl #10
     ac0:	00018e02 	andeq	r8, r1, r2, lsl #28
     ac4:	00000014 	andeq	r0, r0, r4, lsl r0
     ac8:	000006a0 	andeq	r0, r0, r0, lsr #13
     acc:	00000000 	andeq	r0, r0, r0
     ad0:	0000000c 	andeq	r0, r0, ip
     ad4:	83080e41 	movwhi	r0, #36417	; 0x8e41
     ad8:	00018e02 	andeq	r8, r1, r2, lsl #28
     adc:	00000018 	andeq	r0, r0, r8, lsl r0
     ae0:	000006a0 	andeq	r0, r0, r0, lsr #13
     ae4:	00000000 	andeq	r0, r0, r0
     ae8:	00000026 	andeq	r0, r0, r6, lsr #32
     aec:	83100e41 	tsthi	r0, #1040	; 0x410
     af0:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     af4:	00018e02 	andeq	r8, r1, r2, lsl #28
     af8:	00000014 	andeq	r0, r0, r4, lsl r0
     afc:	000006a0 	andeq	r0, r0, r0, lsr #13
     b00:	00000000 	andeq	r0, r0, r0
     b04:	00000026 	andeq	r0, r0, r6, lsr #32
     b08:	84080e46 	strhi	r0, [r8], #-3654	; 0xfffff1ba
     b0c:	00018e02 	andeq	r8, r1, r2, lsl #28
     b10:	00000018 	andeq	r0, r0, r8, lsl r0
     b14:	000006a0 	andeq	r0, r0, r0, lsr #13
     b18:	00000000 	andeq	r0, r0, r0
     b1c:	00000018 	andeq	r0, r0, r8, lsl r0
     b20:	8e040e41 	cdphi	14, 0, cr0, cr4, cr1, {2}
     b24:	100e4101 	andne	r4, lr, r1, lsl #2
     b28:	00040e48 	andeq	r0, r4, r8, asr #28
     b2c:	00000018 	andeq	r0, r0, r8, lsl r0
     b30:	000006a0 	andeq	r0, r0, r0, lsr #13
     b34:	00000000 	andeq	r0, r0, r0
     b38:	00000016 	andeq	r0, r0, r6, lsl r0
     b3c:	8e040e41 	cdphi	14, 0, cr0, cr4, cr1, {2}
     b40:	100e4101 	andne	r4, lr, r1, lsl #2
     b44:	00040e47 	andeq	r0, r4, r7, asr #28
     b48:	0000000c 	andeq	r0, r0, ip
     b4c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     b50:	7c020001 	stcvc	0, cr0, [r2], {1}
     b54:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     b58:	0000000c 	andeq	r0, r0, ip
     b5c:	00000b48 	andeq	r0, r0, r8, asr #22
     b60:	00000000 	andeq	r0, r0, r0
     b64:	00000044 	andeq	r0, r0, r4, asr #32
     b68:	0000000c 	andeq	r0, r0, ip
     b6c:	00000b48 	andeq	r0, r0, r8, asr #22
     b70:	10002420 	andne	r2, r0, r0, lsr #8
     b74:	00000040 	andeq	r0, r0, r0, asr #32
     b78:	00000018 	andeq	r0, r0, r8, lsl r0
     b7c:	00000b48 	andeq	r0, r0, r8, asr #22
     b80:	00000000 	andeq	r0, r0, r0
     b84:	0000003e 	andeq	r0, r0, lr, lsr r0
     b88:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
     b8c:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
     b90:	00000001 	andeq	r0, r0, r1
     b94:	0000000c 	andeq	r0, r0, ip
     b98:	00000b48 	andeq	r0, r0, r8, asr #22
     b9c:	00000000 	andeq	r0, r0, r0
     ba0:	00000012 	andeq	r0, r0, r2, lsl r0
     ba4:	0000000c 	andeq	r0, r0, ip
     ba8:	00000b48 	andeq	r0, r0, r8, asr #22
     bac:	10002460 	andne	r2, r0, r0, ror #8
     bb0:	00000028 	andeq	r0, r0, r8, lsr #32
     bb4:	00000020 	andeq	r0, r0, r0, lsr #32
     bb8:	00000b48 	andeq	r0, r0, r8, asr #22
     bbc:	10002488 	andne	r2, r0, r8, lsl #9
     bc0:	00000096 	muleq	r0, r6, r0
     bc4:	84200e42 	strthi	r0, [r0], #-3650	; 0xfffff1be
     bc8:	86078508 	strhi	r8, [r7], -r8, lsl #10
     bcc:	88058706 	stmdahi	r5, {r1, r2, r8, r9, sl, pc}
     bd0:	8a038904 	bhi	e2fe8 <__HEAP_SIZE+0xe1fe8>
     bd4:	00018e02 	andeq	r8, r1, r2, lsl #28
     bd8:	00000028 	andeq	r0, r0, r8, lsr #32
     bdc:	00000b48 	andeq	r0, r0, r8, asr #22
     be0:	1000251e 	andne	r2, r0, lr, lsl r5
     be4:	00000052 	andeq	r0, r0, r2, asr r0
     be8:	841c0e42 	ldrhi	r0, [ip], #-3650	; 0xfffff1be
     bec:	86068507 	strhi	r8, [r6], -r7, lsl #10
     bf0:	88048705 	stmdahi	r4, {r0, r2, r8, r9, sl, pc}
     bf4:	8e028903 	vmlahi.f16	s16, s4, s6	; <UNPREDICTABLE>
     bf8:	300e4101 	andcc	r4, lr, r1, lsl #2
     bfc:	1c0e0a60 			; <UNDEFINED> instruction: 0x1c0e0a60
     c00:	00000b42 	andeq	r0, r0, r2, asr #22
     c04:	00000018 	andeq	r0, r0, r8, lsl r0
     c08:	00000b48 	andeq	r0, r0, r8, asr #22
     c0c:	10002570 	andne	r2, r0, r0, ror r5
     c10:	00000068 	andeq	r0, r0, r8, rrx
     c14:	83100e41 	tsthi	r0, #1040	; 0x410
     c18:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     c1c:	00018e02 	andeq	r8, r1, r2, lsl #28
     c20:	00000014 	andeq	r0, r0, r4, lsl r0
     c24:	00000b48 	andeq	r0, r0, r8, asr #22
     c28:	100025d8 	ldrdne	r2, [r0], -r8
     c2c:	000000bc 	strheq	r0, [r0], -ip
     c30:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     c34:	00018e02 	andeq	r8, r1, r2, lsl #28
     c38:	00000028 	andeq	r0, r0, r8, lsr #32
     c3c:	00000b48 	andeq	r0, r0, r8, asr #22
     c40:	10002694 	mulne	r0, r4, r6
     c44:	00000062 	andeq	r0, r0, r2, rrx
     c48:	841c0e42 	ldrhi	r0, [ip], #-3650	; 0xfffff1be
     c4c:	86068507 	strhi	r8, [r6], -r7, lsl #10
     c50:	88048705 	stmdahi	r4, {r0, r2, r8, r9, sl, pc}
     c54:	8e028903 	vmlahi.f16	s16, s4, s6	; <UNPREDICTABLE>
     c58:	300e4101 	andcc	r4, lr, r1, lsl #2
     c5c:	1c0e0a66 			; <UNDEFINED> instruction: 0x1c0e0a66
     c60:	00000b42 	andeq	r0, r0, r2, asr #22
     c64:	00000014 	andeq	r0, r0, r4, lsl r0
     c68:	00000b48 	andeq	r0, r0, r8, asr #22
     c6c:	100026f6 	strdne	r2, [r0], -r6
     c70:	00000024 	andeq	r0, r0, r4, lsr #32
     c74:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     c78:	00018e02 	andeq	r8, r1, r2, lsl #28
     c7c:	00000018 	andeq	r0, r0, r8, lsl r0
     c80:	00000b48 	andeq	r0, r0, r8, asr #22
     c84:	1000271c 	andne	r2, r0, ip, lsl r7
     c88:	0000004c 	andeq	r0, r0, ip, asr #32
     c8c:	84080e44 	strhi	r0, [r8], #-3652	; 0xfffff1bc
     c90:	5a018e02 	bpl	644a0 <__HEAP_SIZE+0x634a0>
     c94:	cec4000e 	cdpgt	0, 12, cr0, cr4, cr14, {0}
     c98:	0000001c 	andeq	r0, r0, ip, lsl r0
     c9c:	00000b48 	andeq	r0, r0, r8, asr #22
     ca0:	10002768 	andne	r2, r0, r8, ror #14
     ca4:	000000a8 	andeq	r0, r0, r8, lsr #1
     ca8:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
     cac:	86058506 	strhi	r8, [r5], -r6, lsl #10
     cb0:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
     cb4:	00018e02 	andeq	r8, r1, r2, lsl #28
     cb8:	0000001c 	andeq	r0, r0, ip, lsl r0
     cbc:	00000b48 	andeq	r0, r0, r8, asr #22
     cc0:	10002810 	andne	r2, r0, r0, lsl r8
     cc4:	00000028 	andeq	r0, r0, r8, lsr #32
     cc8:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     ccc:	41018e02 	tstmi	r1, r2, lsl #28
     cd0:	0e51200e 	cdpeq	0, 5, cr2, cr1, cr14, {0}
     cd4:	00000008 	andeq	r0, r0, r8
     cd8:	0000001c 	andeq	r0, r0, ip, lsl r0
     cdc:	00000b48 	andeq	r0, r0, r8, asr #22
     ce0:	10002838 	andne	r2, r0, r8, lsr r8
     ce4:	00000022 	andeq	r0, r0, r2, lsr #32
     ce8:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     cec:	41018e02 	tstmi	r1, r2, lsl #28
     cf0:	0a4b100e 	beq	12c4d30 <__RAM_SIZE+0x11c4d30>
     cf4:	0b41080e 	bleq	1042d34 <__RAM_SIZE+0xf42d34>
     cf8:	00000018 	andeq	r0, r0, r8, lsl r0
     cfc:	00000b48 	andeq	r0, r0, r8, asr #22
     d00:	00000000 	andeq	r0, r0, r0
     d04:	0000009c 	muleq	r0, ip, r0
     d08:	83100e41 	tsthi	r0, #1040	; 0x410
     d0c:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     d10:	00018e02 	andeq	r8, r1, r2, lsl #28
     d14:	00000034 	andeq	r0, r0, r4, lsr r0
     d18:	00000b48 	andeq	r0, r0, r8, asr #22
     d1c:	00000000 	andeq	r0, r0, r0
     d20:	0000009c 	muleq	r0, ip, r0
     d24:	84180e46 	ldrhi	r0, [r8], #-3654	; 0xfffff1ba
     d28:	86058506 	strhi	r8, [r5], -r6, lsl #10
     d2c:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
     d30:	6f018e02 	svcvs	0x00018e02
     d34:	c5c4000e 	strbgt	r0, [r4, #14]
     d38:	cec8c7c6 	cdpgt	7, 12, cr12, cr8, cr6, {6}
     d3c:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
     d40:	86058506 	strhi	r8, [r5], -r6, lsl #10
     d44:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
     d48:	00018e02 	andeq	r8, r1, r2, lsl #28
     d4c:	00000014 	andeq	r0, r0, r4, lsl r0
     d50:	00000b48 	andeq	r0, r0, r8, asr #22
     d54:	00000000 	andeq	r0, r0, r0
     d58:	00000020 	andeq	r0, r0, r0, lsr #32
     d5c:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     d60:	00018e02 	andeq	r8, r1, r2, lsl #28
     d64:	00000014 	andeq	r0, r0, r4, lsl r0
     d68:	00000b48 	andeq	r0, r0, r8, asr #22
     d6c:	00000000 	andeq	r0, r0, r0
     d70:	00000020 	andeq	r0, r0, r0, lsr #32
     d74:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     d78:	00018e02 	andeq	r8, r1, r2, lsl #28
     d7c:	00000014 	andeq	r0, r0, r4, lsl r0
     d80:	00000b48 	andeq	r0, r0, r8, asr #22
     d84:	00000000 	andeq	r0, r0, r0
     d88:	00000020 	andeq	r0, r0, r0, lsr #32
     d8c:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     d90:	00018e02 	andeq	r8, r1, r2, lsl #28
     d94:	00000014 	andeq	r0, r0, r4, lsl r0
     d98:	00000b48 	andeq	r0, r0, r8, asr #22
     d9c:	00000000 	andeq	r0, r0, r0
     da0:	00000020 	andeq	r0, r0, r0, lsr #32
     da4:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     da8:	00018e02 	andeq	r8, r1, r2, lsl #28
     dac:	00000018 	andeq	r0, r0, r8, lsl r0
     db0:	00000b48 	andeq	r0, r0, r8, asr #22
     db4:	00000000 	andeq	r0, r0, r0
     db8:	000000d8 	ldrdeq	r0, [r0], -r8
     dbc:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
     dc0:	86038504 	strhi	r8, [r3], -r4, lsl #10
     dc4:	00018e02 	andeq	r8, r1, r2, lsl #28
     dc8:	00000018 	andeq	r0, r0, r8, lsl r0
     dcc:	00000b48 	andeq	r0, r0, r8, asr #22
     dd0:	00000000 	andeq	r0, r0, r0
     dd4:	00000084 	andeq	r0, r0, r4, lsl #1
     dd8:	83100e41 	tsthi	r0, #1040	; 0x410
     ddc:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     de0:	00018e02 	andeq	r8, r1, r2, lsl #28
     de4:	0000001c 	andeq	r0, r0, ip, lsl r0
     de8:	00000b48 	andeq	r0, r0, r8, asr #22
     dec:	00000000 	andeq	r0, r0, r0
     df0:	000000ac 	andeq	r0, r0, ip, lsr #1
     df4:	83180e41 	tsthi	r8, #1040	; 0x410
     df8:	85058406 	strhi	r8, [r5, #-1030]	; 0xfffffbfa
     dfc:	87038604 	strhi	r8, [r3, -r4, lsl #12]
     e00:	00018e02 	andeq	r8, r1, r2, lsl #28
     e04:	00000014 	andeq	r0, r0, r4, lsl r0
     e08:	00000b48 	andeq	r0, r0, r8, asr #22
     e0c:	00000000 	andeq	r0, r0, r0
     e10:	0000003c 	andeq	r0, r0, ip, lsr r0
     e14:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     e18:	00018e02 	andeq	r8, r1, r2, lsl #28
     e1c:	0000000c 	andeq	r0, r0, ip
     e20:	00000b48 	andeq	r0, r0, r8, asr #22
     e24:	1000285c 	andne	r2, r0, ip, asr r8
     e28:	00000010 	andeq	r0, r0, r0, lsl r0
     e2c:	0000000c 	andeq	r0, r0, ip
     e30:	00000b48 	andeq	r0, r0, r8, asr #22
     e34:	1000286c 	andne	r2, r0, ip, ror #16
     e38:	0000000c 	andeq	r0, r0, ip
     e3c:	0000000c 	andeq	r0, r0, ip
     e40:	00000b48 	andeq	r0, r0, r8, asr #22
     e44:	00000000 	andeq	r0, r0, r0
     e48:	0000000c 	andeq	r0, r0, ip
     e4c:	0000000c 	andeq	r0, r0, ip
     e50:	00000b48 	andeq	r0, r0, r8, asr #22
     e54:	10002878 	andne	r2, r0, r8, ror r8
     e58:	0000000c 	andeq	r0, r0, ip
     e5c:	0000000c 	andeq	r0, r0, ip
     e60:	00000b48 	andeq	r0, r0, r8, asr #22
     e64:	00000000 	andeq	r0, r0, r0
     e68:	00000014 	andeq	r0, r0, r4, lsl r0
     e6c:	0000000c 	andeq	r0, r0, ip
     e70:	00000b48 	andeq	r0, r0, r8, asr #22
     e74:	00000000 	andeq	r0, r0, r0
     e78:	00000034 	andeq	r0, r0, r4, lsr r0
     e7c:	0000000c 	andeq	r0, r0, ip
     e80:	00000b48 	andeq	r0, r0, r8, asr #22
     e84:	00000000 	andeq	r0, r0, r0
     e88:	0000000c 	andeq	r0, r0, ip
     e8c:	0000000c 	andeq	r0, r0, ip
     e90:	00000b48 	andeq	r0, r0, r8, asr #22
     e94:	00000000 	andeq	r0, r0, r0
     e98:	0000000c 	andeq	r0, r0, ip
     e9c:	00000014 	andeq	r0, r0, r4, lsl r0
     ea0:	00000b48 	andeq	r0, r0, r8, asr #22
     ea4:	10002884 	andne	r2, r0, r4, lsl #17
     ea8:	0000003c 	andeq	r0, r0, ip, lsr r0
     eac:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     eb0:	00018e02 	andeq	r8, r1, r2, lsl #28
     eb4:	0000002c 	andeq	r0, r0, ip, lsr #32
     eb8:	00000b48 	andeq	r0, r0, r8, asr #22
     ebc:	100028c0 	andne	r2, r0, r0, asr #17
     ec0:	00000160 	andeq	r0, r0, r0, ror #2
     ec4:	84100e46 	ldrhi	r0, [r0], #-3654	; 0xfffff1ba
     ec8:	86038504 	strhi	r8, [r3], -r4, lsl #10
     ecc:	02018e02 	andeq	r8, r1, #2, 28
     ed0:	c4000e8c 	strgt	r0, [r0], #-3724	; 0xfffff174
     ed4:	46cec6c5 	strbmi	ip, [lr], r5, asr #13
     ed8:	0484100e 	streq	r1, [r4], #14
     edc:	02860385 	addeq	r0, r6, #335544322	; 0x14000002
     ee0:	0000018e 	andeq	r0, r0, lr, lsl #3
     ee4:	00000014 	andeq	r0, r0, r4, lsl r0
     ee8:	00000b48 	andeq	r0, r0, r8, asr #22
     eec:	10002a20 	andne	r2, r0, r0, lsr #20
     ef0:	00000130 	andeq	r0, r0, r0, lsr r1
     ef4:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     ef8:	00018e02 	andeq	r8, r1, r2, lsl #28
     efc:	00000018 	andeq	r0, r0, r8, lsl r0
     f00:	00000b48 	andeq	r0, r0, r8, asr #22
     f04:	00000000 	andeq	r0, r0, r0
     f08:	0000005c 	andeq	r0, r0, ip, asr r0
     f0c:	83100e41 	tsthi	r0, #1040	; 0x410
     f10:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     f14:	00018e02 	andeq	r8, r1, r2, lsl #28
     f18:	00000014 	andeq	r0, r0, r4, lsl r0
     f1c:	00000b48 	andeq	r0, r0, r8, asr #22
     f20:	10002b50 	andne	r2, r0, r0, asr fp
     f24:	0000001e 	andeq	r0, r0, lr, lsl r0
     f28:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     f2c:	00018e02 	andeq	r8, r1, r2, lsl #28
     f30:	00000014 	andeq	r0, r0, r4, lsl r0
     f34:	00000b48 	andeq	r0, r0, r8, asr #22
     f38:	10002b70 	andne	r2, r0, r0, ror fp
     f3c:	00000038 	andeq	r0, r0, r8, lsr r0
     f40:	83080e41 	movwhi	r0, #36417	; 0x8e41
     f44:	00018e02 	andeq	r8, r1, r2, lsl #28
     f48:	00000018 	andeq	r0, r0, r8, lsl r0
     f4c:	00000b48 	andeq	r0, r0, r8, asr #22
     f50:	00000000 	andeq	r0, r0, r0
     f54:	0000007c 	andeq	r0, r0, ip, ror r0
     f58:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
     f5c:	86038504 	strhi	r8, [r3], -r4, lsl #10
     f60:	00018e02 	andeq	r8, r1, r2, lsl #28
     f64:	00000014 	andeq	r0, r0, r4, lsl r0
     f68:	00000b48 	andeq	r0, r0, r8, asr #22
     f6c:	00000000 	andeq	r0, r0, r0
     f70:	00000024 	andeq	r0, r0, r4, lsr #32
     f74:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     f78:	00018e02 	andeq	r8, r1, r2, lsl #28
     f7c:	00000018 	andeq	r0, r0, r8, lsl r0
     f80:	00000b48 	andeq	r0, r0, r8, asr #22
     f84:	00000000 	andeq	r0, r0, r0
     f88:	000000a4 	andeq	r0, r0, r4, lsr #1
     f8c:	83100e41 	tsthi	r0, #1040	; 0x410
     f90:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     f94:	00018e02 	andeq	r8, r1, r2, lsl #28
     f98:	00000018 	andeq	r0, r0, r8, lsl r0
     f9c:	00000b48 	andeq	r0, r0, r8, asr #22
     fa0:	00000000 	andeq	r0, r0, r0
     fa4:	00000020 	andeq	r0, r0, r0, lsr #32
     fa8:	83100e41 	tsthi	r0, #1040	; 0x410
     fac:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     fb0:	00018e02 	andeq	r8, r1, r2, lsl #28
     fb4:	00000014 	andeq	r0, r0, r4, lsl r0
     fb8:	00000b48 	andeq	r0, r0, r8, asr #22
     fbc:	00000000 	andeq	r0, r0, r0
     fc0:	00000020 	andeq	r0, r0, r0, lsr #32
     fc4:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     fc8:	00018e02 	andeq	r8, r1, r2, lsl #28
     fcc:	00000014 	andeq	r0, r0, r4, lsl r0
     fd0:	00000b48 	andeq	r0, r0, r8, asr #22
     fd4:	00000000 	andeq	r0, r0, r0
     fd8:	00000020 	andeq	r0, r0, r0, lsr #32
     fdc:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     fe0:	00018e02 	andeq	r8, r1, r2, lsl #28
     fe4:	00000014 	andeq	r0, r0, r4, lsl r0
     fe8:	00000b48 	andeq	r0, r0, r8, asr #22
     fec:	00000000 	andeq	r0, r0, r0
     ff0:	00000020 	andeq	r0, r0, r0, lsr #32
     ff4:	83080e41 	movwhi	r0, #36417	; 0x8e41
     ff8:	00018e02 	andeq	r8, r1, r2, lsl #28
     ffc:	0000000c 	andeq	r0, r0, ip
    1000:	00000b48 	andeq	r0, r0, r8, asr #22
    1004:	10002ba8 	andne	r2, r0, r8, lsr #23
    1008:	00000084 	andeq	r0, r0, r4, lsl #1
    100c:	00000018 	andeq	r0, r0, r8, lsl r0
    1010:	00000b48 	andeq	r0, r0, r8, asr #22
    1014:	00000000 	andeq	r0, r0, r0
    1018:	000000a4 	andeq	r0, r0, r4, lsr #1
    101c:	83100e41 	tsthi	r0, #1040	; 0x410
    1020:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    1024:	00018e02 	andeq	r8, r1, r2, lsl #28
    1028:	00000014 	andeq	r0, r0, r4, lsl r0
    102c:	00000b48 	andeq	r0, r0, r8, asr #22
    1030:	10002c2c 	andne	r2, r0, ip, lsr #24
    1034:	0000001c 	andeq	r0, r0, ip, lsl r0
    1038:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    103c:	00018e02 	andeq	r8, r1, r2, lsl #28
    1040:	00000018 	andeq	r0, r0, r8, lsl r0
    1044:	00000b48 	andeq	r0, r0, r8, asr #22
    1048:	00000000 	andeq	r0, r0, r0
    104c:	00000040 	andeq	r0, r0, r0, asr #32
    1050:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    1054:	86038504 	strhi	r8, [r3], -r4, lsl #10
    1058:	00018e02 	andeq	r8, r1, r2, lsl #28
    105c:	00000018 	andeq	r0, r0, r8, lsl r0
    1060:	00000b48 	andeq	r0, r0, r8, asr #22
    1064:	10002c48 	andne	r2, r0, r8, asr #24
    1068:	0000003c 	andeq	r0, r0, ip, lsr r0
    106c:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    1070:	86038504 	strhi	r8, [r3], -r4, lsl #10
    1074:	00018e02 	andeq	r8, r1, r2, lsl #28
    1078:	00000014 	andeq	r0, r0, r4, lsl r0
    107c:	00000b48 	andeq	r0, r0, r8, asr #22
    1080:	10002c84 	andne	r2, r0, r4, lsl #25
    1084:	000000e4 	andeq	r0, r0, r4, ror #1
    1088:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    108c:	00018e02 	andeq	r8, r1, r2, lsl #28
    1090:	00000014 	andeq	r0, r0, r4, lsl r0
    1094:	00000b48 	andeq	r0, r0, r8, asr #22
    1098:	00000000 	andeq	r0, r0, r0
    109c:	000000b8 	strheq	r0, [r0], -r8
    10a0:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    10a4:	00018e02 	andeq	r8, r1, r2, lsl #28
    10a8:	00000014 	andeq	r0, r0, r4, lsl r0
    10ac:	00000b48 	andeq	r0, r0, r8, asr #22
    10b0:	00000000 	andeq	r0, r0, r0
    10b4:	00000024 	andeq	r0, r0, r4, lsr #32
    10b8:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    10bc:	00018e02 	andeq	r8, r1, r2, lsl #28
    10c0:	0000000c 	andeq	r0, r0, ip
    10c4:	00000b48 	andeq	r0, r0, r8, asr #22
    10c8:	10002d68 	andne	r2, r0, r8, ror #26
    10cc:	00000018 	andeq	r0, r0, r8, lsl r0
    10d0:	0000001c 	andeq	r0, r0, ip, lsl r0
    10d4:	00000b48 	andeq	r0, r0, r8, asr #22
    10d8:	10002d80 	andne	r2, r0, r0, lsl #27
    10dc:	0000007c 	andeq	r0, r0, ip, ror r0
    10e0:	83180e41 	tsthi	r8, #1040	; 0x410
    10e4:	85058406 	strhi	r8, [r5, #-1030]	; 0xfffffbfa
    10e8:	87038604 	strhi	r8, [r3, -r4, lsl #12]
    10ec:	00018e02 	andeq	r8, r1, r2, lsl #28
    10f0:	0000000c 	andeq	r0, r0, ip
    10f4:	00000b48 	andeq	r0, r0, r8, asr #22
    10f8:	10002dfc 	strdne	r2, [r0], -ip
    10fc:	0000000c 	andeq	r0, r0, ip
    1100:	0000000c 	andeq	r0, r0, ip
    1104:	00000b48 	andeq	r0, r0, r8, asr #22
    1108:	10002e08 	andne	r2, r0, r8, lsl #28
    110c:	00000048 	andeq	r0, r0, r8, asr #32
    1110:	00000014 	andeq	r0, r0, r4, lsl r0
    1114:	00000b48 	andeq	r0, r0, r8, asr #22
    1118:	00000000 	andeq	r0, r0, r0
    111c:	00000018 	andeq	r0, r0, r8, lsl r0
    1120:	83080e41 	movwhi	r0, #36417	; 0x8e41
    1124:	00018e02 	andeq	r8, r1, r2, lsl #28
    1128:	0000000c 	andeq	r0, r0, ip
    112c:	00000b48 	andeq	r0, r0, r8, asr #22
    1130:	00000000 	andeq	r0, r0, r0
    1134:	0000000c 	andeq	r0, r0, ip
    1138:	0000000c 	andeq	r0, r0, ip
    113c:	00000b48 	andeq	r0, r0, r8, asr #22
    1140:	00000000 	andeq	r0, r0, r0
    1144:	00000010 	andeq	r0, r0, r0, lsl r0
    1148:	0000000c 	andeq	r0, r0, ip
    114c:	00000b48 	andeq	r0, r0, r8, asr #22
    1150:	00000000 	andeq	r0, r0, r0
    1154:	00000020 	andeq	r0, r0, r0, lsr #32
    1158:	0000002c 	andeq	r0, r0, ip, lsr #32
    115c:	00000b48 	andeq	r0, r0, r8, asr #22
    1160:	00000000 	andeq	r0, r0, r0
    1164:	000000b8 	strheq	r0, [r0], -r8
    1168:	83100e43 	tsthi	r0, #1072	; 0x430
    116c:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    1170:	02018e02 	andeq	r8, r1, #2, 28
    1174:	c3000e4e 	movwgt	r0, #3662	; 0xe4e
    1178:	42cec5c4 	sbcmi	ip, lr, #196, 10	; 0x31000000
    117c:	0483100e 	streq	r1, [r3], #14
    1180:	02850384 	addeq	r0, r5, #132, 6	; 0x10000002
    1184:	0000018e 	andeq	r0, r0, lr, lsl #3
    1188:	0000002c 	andeq	r0, r0, ip, lsr #32
    118c:	00000b48 	andeq	r0, r0, r8, asr #22
    1190:	10002e50 	andne	r2, r0, r0, asr lr
    1194:	00000080 	andeq	r0, r0, r0, lsl #1
    1198:	83100e43 	tsthi	r0, #1072	; 0x430
    119c:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    11a0:	74018e02 	strvc	r8, [r1], #-3586	; 0xfffff1fe
    11a4:	c4c3000e 	strbgt	r0, [r3], #14
    11a8:	0e42cec5 	cdpeq	14, 4, cr12, cr2, cr5, {6}
    11ac:	84048310 	strhi	r8, [r4], #-784	; 0xfffffcf0
    11b0:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
    11b4:	00000001 	andeq	r0, r0, r1
    11b8:	00000020 	andeq	r0, r0, r0, lsr #32
    11bc:	00000b48 	andeq	r0, r0, r8, asr #22
    11c0:	00000000 	andeq	r0, r0, r0
    11c4:	00000090 	muleq	r0, r0, r0
    11c8:	83100e43 	tsthi	r0, #1072	; 0x430
    11cc:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    11d0:	7f018e02 	svcvc	0x00018e02
    11d4:	c4c3000e 	strbgt	r0, [r3], #14
    11d8:	0000cec5 	andeq	ip, r0, r5, asr #29
    11dc:	0000000c 	andeq	r0, r0, ip
    11e0:	00000b48 	andeq	r0, r0, r8, asr #22
    11e4:	00000000 	andeq	r0, r0, r0
    11e8:	00000018 	andeq	r0, r0, r8, lsl r0
    11ec:	0000000c 	andeq	r0, r0, ip
    11f0:	00000b48 	andeq	r0, r0, r8, asr #22
    11f4:	00000000 	andeq	r0, r0, r0
    11f8:	00000014 	andeq	r0, r0, r4, lsl r0
    11fc:	00000018 	andeq	r0, r0, r8, lsl r0
    1200:	00000b48 	andeq	r0, r0, r8, asr #22
    1204:	00000000 	andeq	r0, r0, r0
    1208:	000000a8 	andeq	r0, r0, r8, lsr #1
    120c:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    1210:	86038504 	strhi	r8, [r3], -r4, lsl #10
    1214:	00018e02 	andeq	r8, r1, r2, lsl #28
    1218:	0000001c 	andeq	r0, r0, ip, lsl r0
    121c:	00000b48 	andeq	r0, r0, r8, asr #22
    1220:	00000000 	andeq	r0, r0, r0
    1224:	000000cc 	andeq	r0, r0, ip, asr #1
    1228:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
    122c:	86058506 	strhi	r8, [r5], -r6, lsl #10
    1230:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
    1234:	00018e02 	andeq	r8, r1, r2, lsl #28
    1238:	0000001c 	andeq	r0, r0, ip, lsl r0
    123c:	00000b48 	andeq	r0, r0, r8, asr #22
    1240:	00000000 	andeq	r0, r0, r0
    1244:	0000011c 	andeq	r0, r0, ip, lsl r1
    1248:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
    124c:	86058506 	strhi	r8, [r5], -r6, lsl #10
    1250:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
    1254:	00018e02 	andeq	r8, r1, r2, lsl #28
    1258:	0000001c 	andeq	r0, r0, ip, lsl r0
    125c:	00000b48 	andeq	r0, r0, r8, asr #22
    1260:	00000000 	andeq	r0, r0, r0
    1264:	00000158 	andeq	r0, r0, r8, asr r1
    1268:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
    126c:	86058506 	strhi	r8, [r5], -r6, lsl #10
    1270:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
    1274:	00018e02 	andeq	r8, r1, r2, lsl #28
    1278:	00000018 	andeq	r0, r0, r8, lsl r0
    127c:	00000b48 	andeq	r0, r0, r8, asr #22
    1280:	00000000 	andeq	r0, r0, r0
    1284:	000000ec 	andeq	r0, r0, ip, ror #1
    1288:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    128c:	86038504 	strhi	r8, [r3], -r4, lsl #10
    1290:	00018e02 	andeq	r8, r1, r2, lsl #28
    1294:	00000018 	andeq	r0, r0, r8, lsl r0
    1298:	00000b48 	andeq	r0, r0, r8, asr #22
    129c:	00000000 	andeq	r0, r0, r0
    12a0:	00000038 	andeq	r0, r0, r8, lsr r0
    12a4:	83100e41 	tsthi	r0, #1040	; 0x410
    12a8:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    12ac:	00018e02 	andeq	r8, r1, r2, lsl #28
    12b0:	00000018 	andeq	r0, r0, r8, lsl r0
    12b4:	00000b48 	andeq	r0, r0, r8, asr #22
    12b8:	00000000 	andeq	r0, r0, r0
    12bc:	00000034 	andeq	r0, r0, r4, lsr r0
    12c0:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    12c4:	86038504 	strhi	r8, [r3], -r4, lsl #10
    12c8:	00018e02 	andeq	r8, r1, r2, lsl #28
    12cc:	0000000c 	andeq	r0, r0, ip
    12d0:	00000b48 	andeq	r0, r0, r8, asr #22
    12d4:	10002ed0 	ldrdne	r2, [r0], -r0
    12d8:	00000018 	andeq	r0, r0, r8, lsl r0
    12dc:	00000020 	andeq	r0, r0, r0, lsr #32
    12e0:	00000b48 	andeq	r0, r0, r8, asr #22
    12e4:	10002ee8 	andne	r2, r0, r8, ror #29
    12e8:	0000006c 	andeq	r0, r0, ip, rrx
    12ec:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
    12f0:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
    12f4:	300e4101 	andcc	r4, lr, r1, lsl #2
    12f8:	0c0e0a52 			; <UNDEFINED> instruction: 0x0c0e0a52
    12fc:	00000b41 	andeq	r0, r0, r1, asr #22
    1300:	00000014 	andeq	r0, r0, r4, lsl r0
    1304:	00000b48 	andeq	r0, r0, r8, asr #22
    1308:	10002f54 	andne	r2, r0, r4, asr pc
    130c:	00000048 	andeq	r0, r0, r8, asr #32
    1310:	83080e41 	movwhi	r0, #36417	; 0x8e41
    1314:	00018e02 	andeq	r8, r1, r2, lsl #28
    1318:	0000000c 	andeq	r0, r0, ip
    131c:	00000b48 	andeq	r0, r0, r8, asr #22
    1320:	10002f9c 	mulne	r0, ip, pc	; <UNPREDICTABLE>
    1324:	00000018 	andeq	r0, r0, r8, lsl r0
    1328:	0000000c 	andeq	r0, r0, ip
    132c:	00000b48 	andeq	r0, r0, r8, asr #22
    1330:	00000000 	andeq	r0, r0, r0
    1334:	00000074 	andeq	r0, r0, r4, ror r0
    1338:	0000000c 	andeq	r0, r0, ip
    133c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1340:	7c020001 	stcvc	0, cr0, [r2], {1}
    1344:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1348:	0000000c 	andeq	r0, r0, ip
    134c:	00001338 	andeq	r1, r0, r8, lsr r3
    1350:	10002fb4 			; <UNDEFINED> instruction: 0x10002fb4
    1354:	00000020 	andeq	r0, r0, r0, lsr #32
    1358:	00000014 	andeq	r0, r0, r4, lsl r0
    135c:	00001338 	andeq	r1, r0, r8, lsr r3
    1360:	10002fd4 	ldrdne	r2, [r0], -r4
    1364:	00000048 	andeq	r0, r0, r8, asr #32
    1368:	83080e41 	movwhi	r0, #36417	; 0x8e41
    136c:	00018e02 	andeq	r8, r1, r2, lsl #28
    1370:	00000018 	andeq	r0, r0, r8, lsl r0
    1374:	00001338 	andeq	r1, r0, r8, lsr r3
    1378:	1000301c 	andne	r3, r0, ip, lsl r0
    137c:	00000028 	andeq	r0, r0, r8, lsr #32
    1380:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    1384:	86038504 	strhi	r8, [r3], -r4, lsl #10
    1388:	00018e02 	andeq	r8, r1, r2, lsl #28
    138c:	00000018 	andeq	r0, r0, r8, lsl r0
    1390:	00001338 	andeq	r1, r0, r8, lsr r3
    1394:	10003044 	andne	r3, r0, r4, asr #32
    1398:	00000040 	andeq	r0, r0, r0, asr #32
    139c:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    13a0:	86038504 	strhi	r8, [r3], -r4, lsl #10
    13a4:	00018e02 	andeq	r8, r1, r2, lsl #28
    13a8:	00000014 	andeq	r0, r0, r4, lsl r0
    13ac:	00001338 	andeq	r1, r0, r8, lsr r3
    13b0:	10003084 	andne	r3, r0, r4, lsl #1
    13b4:	00000030 	andeq	r0, r0, r0, lsr r0
    13b8:	83080e41 	movwhi	r0, #36417	; 0x8e41
    13bc:	00018e02 	andeq	r8, r1, r2, lsl #28
    13c0:	00000018 	andeq	r0, r0, r8, lsl r0
    13c4:	00001338 	andeq	r1, r0, r8, lsr r3
    13c8:	100030b4 	strhne	r3, [r0], -r4
    13cc:	0000002c 	andeq	r0, r0, ip, lsr #32
    13d0:	83100e41 	tsthi	r0, #1040	; 0x410
    13d4:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    13d8:	00018e02 	andeq	r8, r1, r2, lsl #28
    13dc:	00000020 	andeq	r0, r0, r0, lsr #32
    13e0:	00001338 	andeq	r1, r0, r8, lsr r3
    13e4:	100030e0 	andne	r3, r0, r0, ror #1
    13e8:	00000068 	andeq	r0, r0, r8, rrx
    13ec:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    13f0:	86038504 	strhi	r8, [r3], -r4, lsl #10
    13f4:	41018e02 	tstmi	r1, r2, lsl #28
    13f8:	0a5d180e 	beq	1747438 <__RAM_SIZE+0x1647438>
    13fc:	0b41100e 	bleq	104543c <__RAM_SIZE+0xf4543c>
    1400:	0000001c 	andeq	r0, r0, ip, lsl r0
    1404:	00001338 	andeq	r1, r0, r8, lsr r3
    1408:	10003148 	andne	r3, r0, r8, asr #2
    140c:	000000f8 	strdeq	r0, [r0], -r8
    1410:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
    1414:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
    1418:	280e4101 	stmdacs	lr, {r0, r8, lr}
    141c:	0c0e7702 	stceq	7, cr7, [lr], {2}
    1420:	00000014 	andeq	r0, r0, r4, lsl r0
    1424:	00001338 	andeq	r1, r0, r8, lsr r3
    1428:	10003240 	andne	r3, r0, r0, asr #4
    142c:	00000016 	andeq	r0, r0, r6, lsl r0
    1430:	8e040e41 	cdphi	14, 0, cr0, cr4, cr1, {2}
    1434:	100e4101 	andne	r4, lr, r1, lsl #2
    1438:	00000020 	andeq	r0, r0, r0, lsr #32
    143c:	00001338 	andeq	r1, r0, r8, lsr r3
    1440:	10003258 	andne	r3, r0, r8, asr r2
    1444:	00000060 	andeq	r0, r0, r0, rrx
    1448:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
    144c:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
    1450:	180e4101 	stmdane	lr, {r0, r8, lr}
    1454:	0c0e0a48 			; <UNDEFINED> instruction: 0x0c0e0a48
    1458:	00000b41 	andeq	r0, r0, r1, asr #22
    145c:	0000001c 	andeq	r0, r0, ip, lsl r0
    1460:	00001338 	andeq	r1, r0, r8, lsr r3
    1464:	00000000 	andeq	r0, r0, r0
    1468:	00000036 	andeq	r0, r0, r6, lsr r0
    146c:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
    1470:	86058506 	strhi	r8, [r5], -r6, lsl #10
    1474:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
    1478:	00018e02 	andeq	r8, r1, r2, lsl #28
    147c:	0000001c 	andeq	r0, r0, ip, lsl r0
    1480:	00001338 	andeq	r1, r0, r8, lsr r3
    1484:	100032b8 			; <UNDEFINED> instruction: 0x100032b8
    1488:	0000005c 	andeq	r0, r0, ip, asr r0
    148c:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    1490:	41018e02 	tstmi	r1, r2, lsl #28
    1494:	0e62280e 	cdpeq	8, 6, cr2, cr2, cr14, {0}
    1498:	00000008 	andeq	r0, r0, r8
    149c:	00000024 	andeq	r0, r0, r4, lsr #32
    14a0:	00001338 	andeq	r1, r0, r8, lsr r3
    14a4:	00000000 	andeq	r0, r0, r0
    14a8:	00000038 	andeq	r0, r0, r8, lsr r0
    14ac:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
    14b0:	86058506 	strhi	r8, [r5], -r6, lsl #10
    14b4:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
    14b8:	41018e02 	tstmi	r1, r2, lsl #28
    14bc:	0e57200e 	cdpeq	0, 5, cr2, cr7, cr14, {0}
    14c0:	00000018 	andeq	r0, r0, r8, lsl r0
    14c4:	0000001c 	andeq	r0, r0, ip, lsl r0
    14c8:	00001338 	andeq	r1, r0, r8, lsr r3
    14cc:	00000000 	andeq	r0, r0, r0
    14d0:	00000020 	andeq	r0, r0, r0, lsr #32
    14d4:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
    14d8:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
    14dc:	180e4101 	stmdane	lr, {r0, r8, lr}
    14e0:	000c0e4d 	andeq	r0, ip, sp, asr #28
    14e4:	00000020 	andeq	r0, r0, r0, lsr #32
    14e8:	00001338 	andeq	r1, r0, r8, lsr r3
    14ec:	00000000 	andeq	r0, r0, r0
    14f0:	0000004c 	andeq	r0, r0, ip, asr #32
    14f4:	8e040e44 	cdphi	14, 0, cr0, cr4, cr4, {2}
    14f8:	180e4101 	stmdane	lr, {r0, r8, lr}
    14fc:	040e0a47 	streq	r0, [lr], #-2631	; 0xfffff5b9
    1500:	0e540b42 	vnmlaeq.f64	d16, d4, d2
    1504:	0000ce00 	andeq	ip, r0, r0, lsl #28
    1508:	0000001c 	andeq	r0, r0, ip, lsl r0
    150c:	00001338 	andeq	r1, r0, r8, lsr r3
    1510:	00000000 	andeq	r0, r0, r0
    1514:	00000034 	andeq	r0, r0, r4, lsr r0
    1518:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    151c:	41018e02 	tstmi	r1, r2, lsl #28
    1520:	0a4b180e 	beq	12c7560 <__RAM_SIZE+0x11c7560>
    1524:	0b41080e 	bleq	1043564 <__RAM_SIZE+0xf43564>
    1528:	0000000c 	andeq	r0, r0, ip
    152c:	00001338 	andeq	r1, r0, r8, lsr r3
    1530:	00000000 	andeq	r0, r0, r0
    1534:	0000000c 	andeq	r0, r0, ip
    1538:	0000000c 	andeq	r0, r0, ip
    153c:	00001338 	andeq	r1, r0, r8, lsr r3
    1540:	00000000 	andeq	r0, r0, r0
    1544:	00000004 	andeq	r0, r0, r4
    1548:	00000018 	andeq	r0, r0, r8, lsl r0
    154c:	00001338 	andeq	r1, r0, r8, lsr r3
    1550:	00000000 	andeq	r0, r0, r0
    1554:	0000002c 	andeq	r0, r0, ip, lsr #32
    1558:	83100e41 	tsthi	r0, #1040	; 0x410
    155c:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    1560:	00018e02 	andeq	r8, r1, r2, lsl #28
    1564:	00000014 	andeq	r0, r0, r4, lsl r0
    1568:	00001338 	andeq	r1, r0, r8, lsr r3
    156c:	00000000 	andeq	r0, r0, r0
    1570:	00000020 	andeq	r0, r0, r0, lsr #32
    1574:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    1578:	00018e02 	andeq	r8, r1, r2, lsl #28
    157c:	00000014 	andeq	r0, r0, r4, lsl r0
    1580:	00001338 	andeq	r1, r0, r8, lsr r3
    1584:	00000000 	andeq	r0, r0, r0
    1588:	00000008 	andeq	r0, r0, r8
    158c:	83080e41 	movwhi	r0, #36417	; 0x8e41
    1590:	00018e02 	andeq	r8, r1, r2, lsl #28
    1594:	0000000c 	andeq	r0, r0, ip
    1598:	00001338 	andeq	r1, r0, r8, lsr r3
    159c:	00000000 	andeq	r0, r0, r0
    15a0:	00000004 	andeq	r0, r0, r4
    15a4:	0000000c 	andeq	r0, r0, ip
    15a8:	00001338 	andeq	r1, r0, r8, lsr r3
    15ac:	00000000 	andeq	r0, r0, r0
    15b0:	00000014 	andeq	r0, r0, r4, lsl r0
    15b4:	0000000c 	andeq	r0, r0, ip
    15b8:	00001338 	andeq	r1, r0, r8, lsr r3
    15bc:	00000000 	andeq	r0, r0, r0
    15c0:	00000004 	andeq	r0, r0, r4
    15c4:	00000014 	andeq	r0, r0, r4, lsl r0
    15c8:	00001338 	andeq	r1, r0, r8, lsr r3
    15cc:	00000000 	andeq	r0, r0, r0
    15d0:	00000020 	andeq	r0, r0, r0, lsr #32
    15d4:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    15d8:	00018e02 	andeq	r8, r1, r2, lsl #28
    15dc:	00000014 	andeq	r0, r0, r4, lsl r0
    15e0:	00001338 	andeq	r1, r0, r8, lsr r3
    15e4:	00000000 	andeq	r0, r0, r0
    15e8:	00000012 	andeq	r0, r0, r2, lsl r0
    15ec:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    15f0:	00018e02 	andeq	r8, r1, r2, lsl #28
    15f4:	00000018 	andeq	r0, r0, r8, lsl r0
    15f8:	00001338 	andeq	r1, r0, r8, lsr r3
    15fc:	00000000 	andeq	r0, r0, r0
    1600:	00000012 	andeq	r0, r0, r2, lsl r0
    1604:	83100e41 	tsthi	r0, #1040	; 0x410
    1608:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    160c:	00018e02 	andeq	r8, r1, r2, lsl #28
    1610:	0000001c 	andeq	r0, r0, ip, lsl r0
    1614:	00001338 	andeq	r1, r0, r8, lsr r3
    1618:	00000000 	andeq	r0, r0, r0
    161c:	00000028 	andeq	r0, r0, r8, lsr #32
    1620:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    1624:	41018e02 	tstmi	r1, r2, lsl #28
    1628:	0e4f180e 	cdpeq	8, 4, cr1, cr15, cr14, {0}
    162c:	00000008 	andeq	r0, r0, r8
    1630:	0000001c 	andeq	r0, r0, ip, lsl r0
    1634:	00001338 	andeq	r1, r0, r8, lsr r3
    1638:	00000000 	andeq	r0, r0, r0
    163c:	00000028 	andeq	r0, r0, r8, lsr #32
    1640:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    1644:	41018e02 	tstmi	r1, r2, lsl #28
    1648:	0e4f180e 	cdpeq	8, 4, cr1, cr15, cr14, {0}
    164c:	00000008 	andeq	r0, r0, r8
    1650:	0000000c 	andeq	r0, r0, ip
    1654:	00001338 	andeq	r1, r0, r8, lsr r3
    1658:	00000000 	andeq	r0, r0, r0
    165c:	00000014 	andeq	r0, r0, r4, lsl r0
    1660:	0000000c 	andeq	r0, r0, ip
    1664:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1668:	7c020001 	stcvc	0, cr0, [r2], {1}
    166c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1670:	0000000c 	andeq	r0, r0, ip
    1674:	00001660 	andeq	r1, r0, r0, ror #12
    1678:	10003314 	andne	r3, r0, r4, lsl r3
    167c:	00000058 	andeq	r0, r0, r8, asr r0
    1680:	0000001c 	andeq	r0, r0, ip, lsl r0
    1684:	00001660 	andeq	r1, r0, r0, ror #12
    1688:	1000336c 	andne	r3, r0, ip, ror #6
    168c:	00000064 	andeq	r0, r0, r4, rrx
    1690:	84040e5a 	strhi	r0, [r4], #-3674	; 0xfffff1a6
    1694:	c40a4f01 	strgt	r4, [sl], #-3841	; 0xfffff0ff
    1698:	0b41000e 	bleq	10416d8 <__RAM_SIZE+0xf416d8>
    169c:	c4000e42 	strgt	r0, [r0], #-3650	; 0xfffff1be
    16a0:	00000018 	andeq	r0, r0, r8, lsl r0
    16a4:	00001660 	andeq	r1, r0, r0, ror #12
    16a8:	100033d0 	ldrdne	r3, [r0], -r0
    16ac:	000000d4 	ldrdeq	r0, [r0], -r4
    16b0:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    16b4:	86038504 	strhi	r8, [r3], -r4, lsl #10
    16b8:	00018e02 	andeq	r8, r1, r2, lsl #28
    16bc:	00000020 	andeq	r0, r0, r0, lsr #32
    16c0:	00001660 	andeq	r1, r0, r0, ror #12
    16c4:	100034a4 	andne	r3, r0, r4, lsr #9
    16c8:	00000050 	andeq	r0, r0, r0, asr r0
    16cc:	83100e42 	tsthi	r0, #1056	; 0x420
    16d0:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    16d4:	61018e02 	tstvs	r1, r2, lsl #28
    16d8:	c4c3000e 	strbgt	r0, [r3], #14
    16dc:	0000cec5 	andeq	ip, r0, r5, asr #29
    16e0:	0000000c 	andeq	r0, r0, ip
    16e4:	00001660 	andeq	r1, r0, r0, ror #12
    16e8:	00000000 	andeq	r0, r0, r0
    16ec:	0000000c 	andeq	r0, r0, ip
    16f0:	0000000c 	andeq	r0, r0, ip
    16f4:	00001660 	andeq	r1, r0, r0, ror #12
    16f8:	00000000 	andeq	r0, r0, r0
    16fc:	0000000c 	andeq	r0, r0, ip
    1700:	0000000c 	andeq	r0, r0, ip
    1704:	00001660 	andeq	r1, r0, r0, ror #12
    1708:	00000000 	andeq	r0, r0, r0
    170c:	00000002 	andeq	r0, r0, r2
    1710:	00000018 	andeq	r0, r0, r8, lsl r0
    1714:	00001660 	andeq	r1, r0, r0, ror #12
    1718:	00000000 	andeq	r0, r0, r0
    171c:	00000032 	andeq	r0, r0, r2, lsr r0
    1720:	83100e41 	tsthi	r0, #1040	; 0x410
    1724:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    1728:	00018e02 	andeq	r8, r1, r2, lsl #28
    172c:	0000001c 	andeq	r0, r0, ip, lsl r0
    1730:	00001660 	andeq	r1, r0, r0, ror #12
    1734:	00000000 	andeq	r0, r0, r0
    1738:	00000080 	andeq	r0, r0, r0, lsl #1
    173c:	83180e41 	tsthi	r8, #1040	; 0x410
    1740:	85058406 	strhi	r8, [r5, #-1030]	; 0xfffffbfa
    1744:	87038604 	strhi	r8, [r3, -r4, lsl #12]
    1748:	00018e02 	andeq	r8, r1, r2, lsl #28
    174c:	0000000c 	andeq	r0, r0, ip
    1750:	00001660 	andeq	r1, r0, r0, ror #12
    1754:	00000000 	andeq	r0, r0, r0
    1758:	0000002c 	andeq	r0, r0, ip, lsr #32
    175c:	0000000c 	andeq	r0, r0, ip
    1760:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1764:	7c020001 	stcvc	0, cr0, [r2], {1}
    1768:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    176c:	00000018 	andeq	r0, r0, r8, lsl r0
    1770:	0000175c 	andeq	r1, r0, ip, asr r7
    1774:	100034f4 	strdne	r3, [r0], -r4
    1778:	00000018 	andeq	r0, r0, r8, lsl r0
    177c:	8e040e41 	cdphi	14, 0, cr0, cr4, cr1, {2}
    1780:	100e4101 	andne	r4, lr, r1, lsl #2
    1784:	00040e48 	andeq	r0, r4, r8, asr #28
    1788:	00000014 	andeq	r0, r0, r4, lsl r0
    178c:	0000175c 	andeq	r1, r0, ip, asr r7
    1790:	1000350c 	andne	r3, r0, ip, lsl #10
    1794:	00000114 	andeq	r0, r0, r4, lsl r1
    1798:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    179c:	00018e02 	andeq	r8, r1, r2, lsl #28
    17a0:	0000000c 	andeq	r0, r0, ip
    17a4:	0000175c 	andeq	r1, r0, ip, asr r7
    17a8:	10003620 	andne	r3, r0, r0, lsr #12
    17ac:	0000003c 	andeq	r0, r0, ip, lsr r0
    17b0:	0000000c 	andeq	r0, r0, ip
    17b4:	0000175c 	andeq	r1, r0, ip, asr r7
    17b8:	1000365c 	andne	r3, r0, ip, asr r6
    17bc:	00000016 	andeq	r0, r0, r6, lsl r0
    17c0:	00000014 	andeq	r0, r0, r4, lsl r0
    17c4:	0000175c 	andeq	r1, r0, ip, asr r7
    17c8:	10003674 	andne	r3, r0, r4, ror r6
    17cc:	0000001c 	andeq	r0, r0, ip, lsl r0
    17d0:	83080e41 	movwhi	r0, #36417	; 0x8e41
    17d4:	00018e02 	andeq	r8, r1, r2, lsl #28
    17d8:	00000014 	andeq	r0, r0, r4, lsl r0
    17dc:	0000175c 	andeq	r1, r0, ip, asr r7
    17e0:	10003690 	mulne	r0, r0, r6
    17e4:	0000001c 	andeq	r0, r0, ip, lsl r0
    17e8:	83080e41 	movwhi	r0, #36417	; 0x8e41
    17ec:	00018e02 	andeq	r8, r1, r2, lsl #28
    17f0:	00000014 	andeq	r0, r0, r4, lsl r0
    17f4:	0000175c 	andeq	r1, r0, ip, asr r7
    17f8:	100036ac 	andne	r3, r0, ip, lsr #13
    17fc:	00000022 	andeq	r0, r0, r2, lsr #32
    1800:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    1804:	00018e02 	andeq	r8, r1, r2, lsl #28
    1808:	00000014 	andeq	r0, r0, r4, lsl r0
    180c:	0000175c 	andeq	r1, r0, ip, asr r7
    1810:	100036ce 	andne	r3, r0, lr, asr #13
    1814:	00000014 	andeq	r0, r0, r4, lsl r0
    1818:	83080e41 	movwhi	r0, #36417	; 0x8e41
    181c:	00018e02 	andeq	r8, r1, r2, lsl #28
    1820:	00000018 	andeq	r0, r0, r8, lsl r0
    1824:	0000175c 	andeq	r1, r0, ip, asr r7
    1828:	100036e4 	andne	r3, r0, r4, ror #13
    182c:	00000090 	muleq	r0, r0, r0
    1830:	84040e41 	strhi	r0, [r4], #-3649	; 0xfffff1bf
    1834:	c4440201 	strbgt	r0, [r4], #-513	; 0xfffffdff
    1838:	0000000e 	andeq	r0, r0, lr
    183c:	00000014 	andeq	r0, r0, r4, lsl r0
    1840:	0000175c 	andeq	r1, r0, ip, asr r7
    1844:	10003774 	andne	r3, r0, r4, ror r7
    1848:	00000040 	andeq	r0, r0, r0, asr #32
    184c:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    1850:	00018e02 	andeq	r8, r1, r2, lsl #28
    1854:	0000000c 	andeq	r0, r0, ip
    1858:	0000175c 	andeq	r1, r0, ip, asr r7
    185c:	00000000 	andeq	r0, r0, r0
    1860:	00000002 	andeq	r0, r0, r2
    1864:	0000000c 	andeq	r0, r0, ip
    1868:	0000175c 	andeq	r1, r0, ip, asr r7
    186c:	00000000 	andeq	r0, r0, r0
    1870:	0000000e 	andeq	r0, r0, lr
    1874:	0000000c 	andeq	r0, r0, ip
    1878:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    187c:	7c020001 	stcvc	0, cr0, [r2], {1}
    1880:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1884:	0000000c 	andeq	r0, r0, ip
    1888:	00001874 	andeq	r1, r0, r4, ror r8
    188c:	100037b4 			; <UNDEFINED> instruction: 0x100037b4
    1890:	00000026 	andeq	r0, r0, r6, lsr #32
    1894:	0000000c 	andeq	r0, r0, ip
    1898:	00001874 	andeq	r1, r0, r4, ror r8
    189c:	00000000 	andeq	r0, r0, r0
    18a0:	00000010 	andeq	r0, r0, r0, lsl r0
    18a4:	0000000c 	andeq	r0, r0, ip
    18a8:	00001874 	andeq	r1, r0, r4, ror r8
    18ac:	00000000 	andeq	r0, r0, r0
    18b0:	0000000e 	andeq	r0, r0, lr
    18b4:	0000000c 	andeq	r0, r0, ip
    18b8:	00001874 	andeq	r1, r0, r4, ror r8
    18bc:	00000000 	andeq	r0, r0, r0
    18c0:	0000000e 	andeq	r0, r0, lr
    18c4:	0000000c 	andeq	r0, r0, ip
    18c8:	00001874 	andeq	r1, r0, r4, ror r8
    18cc:	100037e0 	andne	r3, r0, r0, ror #15
    18d0:	0000001a 	andeq	r0, r0, sl, lsl r0
    18d4:	0000000c 	andeq	r0, r0, ip
    18d8:	00001874 	andeq	r1, r0, r4, ror r8
    18dc:	10003800 	andne	r3, r0, r0, lsl #16
    18e0:	00000016 	andeq	r0, r0, r6, lsl r0
    18e4:	0000000c 	andeq	r0, r0, ip
    18e8:	00001874 	andeq	r1, r0, r4, ror r8
    18ec:	10003816 	andne	r3, r0, r6, lsl r8
    18f0:	0000000e 	andeq	r0, r0, lr
    18f4:	0000000c 	andeq	r0, r0, ip
    18f8:	00001874 	andeq	r1, r0, r4, ror r8
    18fc:	10003824 	andne	r3, r0, r4, lsr #16
    1900:	00000044 	andeq	r0, r0, r4, asr #32
    1904:	0000000c 	andeq	r0, r0, ip
    1908:	00001874 	andeq	r1, r0, r4, ror r8
    190c:	1000386c 	andne	r3, r0, ip, ror #16
    1910:	00000012 	andeq	r0, r0, r2, lsl r0
    1914:	0000000c 	andeq	r0, r0, ip
    1918:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    191c:	7c020001 	stcvc	0, cr0, [r2], {1}
    1920:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1924:	0000000c 	andeq	r0, r0, ip
    1928:	00001914 	andeq	r1, r0, r4, lsl r9
    192c:	1000395c 	andne	r3, r0, ip, asr r9
    1930:	0000000c 	andeq	r0, r0, ip
    1934:	0000000c 	andeq	r0, r0, ip
    1938:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    193c:	7c020001 	stcvc	0, cr0, [r2], {1}
    1940:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1944:	00000018 	andeq	r0, r0, r8, lsl r0
    1948:	00001934 	andeq	r1, r0, r4, lsr r9
    194c:	10003a54 	andne	r3, r0, r4, asr sl
    1950:	000000a4 	andeq	r0, r0, r4, lsr #1
    1954:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    1958:	86038504 	strhi	r8, [r3], -r4, lsl #10
    195c:	00018e02 	andeq	r8, r1, r2, lsl #28
    1960:	0000000c 	andeq	r0, r0, ip
    1964:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1968:	7c020001 	stcvc	0, cr0, [r2], {1}
    196c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1970:	0000000c 	andeq	r0, r0, ip
    1974:	00001960 	andeq	r1, r0, r0, ror #18
    1978:	10003af8 	strdne	r3, [r0], -r8
    197c:	00000014 	andeq	r0, r0, r4, lsl r0
    1980:	00000044 	andeq	r0, r0, r4, asr #32
    1984:	00001960 	andeq	r1, r0, r0, ror #18
    1988:	00000000 	andeq	r0, r0, r0
    198c:	000000c8 	andeq	r0, r0, r8, asr #1
    1990:	83280e42 			; <UNDEFINED> instruction: 0x83280e42
    1994:	8509840a 	strhi	r8, [r9, #-1034]	; 0xfffffbf6
    1998:	87078608 	strhi	r8, [r7, -r8, lsl #12]
    199c:	89058806 	stmdbhi	r5, {r1, r2, fp, pc}
    19a0:	8b038a04 	blhi	e41b8 <__HEAP_SIZE+0xe31b8>
    19a4:	46018e02 	strmi	r8, [r1], -r2, lsl #28
    19a8:	5005300e 	andpl	r3, r5, lr
    19ac:	0b51050c 	bleq	1442de4 <__RAM_SIZE+0x1342de4>
    19b0:	50060a60 	andpl	r0, r6, r0, ror #20
    19b4:	280e5106 	stmdacs	lr, {r1, r2, r8, ip, lr}
    19b8:	cacbce43 	bgt	ff2f52cc <__StackTop+0xc71f52cc>
    19bc:	c6c7c8c9 	strbgt	ip, [r7], r9, asr #17
    19c0:	0ec3c4c5 	cdpeq	4, 12, cr12, cr3, cr5, {6}
    19c4:	000b4200 	andeq	r4, fp, r0, lsl #4
    19c8:	0000000c 	andeq	r0, r0, ip
    19cc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    19d0:	7c020001 	stcvc	0, cr0, [r2], {1}
    19d4:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    19d8:	0000000c 	andeq	r0, r0, ip
    19dc:	000019c8 	andeq	r1, r0, r8, asr #19
    19e0:	10003b0c 	andne	r3, r0, ip, lsl #22
    19e4:	0000000c 	andeq	r0, r0, ip
    19e8:	0000000c 	andeq	r0, r0, ip
    19ec:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    19f0:	7c020001 	stcvc	0, cr0, [r2], {1}
    19f4:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    19f8:	00000020 	andeq	r0, r0, r0, lsr #32
    19fc:	000019e8 	andeq	r1, r0, r8, ror #19
    1a00:	10003b18 	andne	r3, r0, r8, lsl fp
    1a04:	0000002c 	andeq	r0, r0, ip, lsr #32
    1a08:	83100e41 	tsthi	r0, #1040	; 0x410
    1a0c:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    1a10:	4f018e02 	svcmi	0x00018e02
    1a14:	c3c4c5ce 	bicgt	ip, r4, #864026624	; 0x33800000
    1a18:	0000000e 	andeq	r0, r0, lr
    1a1c:	0000000c 	andeq	r0, r0, ip
    1a20:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1a24:	7c020001 	stcvc	0, cr0, [r2], {1}
    1a28:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1a2c:	0000000c 	andeq	r0, r0, ip
    1a30:	00001a1c 	andeq	r1, r0, ip, lsl sl
    1a34:	00000000 	andeq	r0, r0, r0
    1a38:	00000002 	andeq	r0, r0, r2
    1a3c:	0000000c 	andeq	r0, r0, ip
    1a40:	00001a1c 	andeq	r1, r0, ip, lsl sl
    1a44:	00000000 	andeq	r0, r0, r0
    1a48:	00000002 	andeq	r0, r0, r2
    1a4c:	0000000c 	andeq	r0, r0, ip
    1a50:	00001a1c 	andeq	r1, r0, ip, lsl sl
    1a54:	00000000 	andeq	r0, r0, r0
    1a58:	00000002 	andeq	r0, r0, r2
    1a5c:	0000000c 	andeq	r0, r0, ip
    1a60:	00001a1c 	andeq	r1, r0, ip, lsl sl
    1a64:	00000000 	andeq	r0, r0, r0
    1a68:	00000002 	andeq	r0, r0, r2
    1a6c:	0000000c 	andeq	r0, r0, ip
    1a70:	00001a1c 	andeq	r1, r0, ip, lsl sl
    1a74:	00000000 	andeq	r0, r0, r0
    1a78:	00000002 	andeq	r0, r0, r2
    1a7c:	0000000c 	andeq	r0, r0, ip
    1a80:	00001a1c 	andeq	r1, r0, ip, lsl sl
    1a84:	10003b44 	andne	r3, r0, r4, asr #22
    1a88:	00000002 	andeq	r0, r0, r2
    1a8c:	0000000c 	andeq	r0, r0, ip
    1a90:	00001a1c 	andeq	r1, r0, ip, lsl sl
    1a94:	00000000 	andeq	r0, r0, r0
    1a98:	00000004 	andeq	r0, r0, r4
    1a9c:	0000000c 	andeq	r0, r0, ip
    1aa0:	00001a1c 	andeq	r1, r0, ip, lsl sl
    1aa4:	00000000 	andeq	r0, r0, r0
    1aa8:	00000004 	andeq	r0, r0, r4
    1aac:	0000000c 	andeq	r0, r0, ip
    1ab0:	00001a1c 	andeq	r1, r0, ip, lsl sl
    1ab4:	00000000 	andeq	r0, r0, r0
    1ab8:	00000002 	andeq	r0, r0, r2
    1abc:	0000000c 	andeq	r0, r0, ip
    1ac0:	00001a1c 	andeq	r1, r0, ip, lsl sl
    1ac4:	10003b48 	andne	r3, r0, r8, asr #22
    1ac8:	00000002 	andeq	r0, r0, r2
    1acc:	0000000c 	andeq	r0, r0, ip
    1ad0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1ad4:	7c020001 	stcvc	0, cr0, [r2], {1}
    1ad8:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1adc:	00000020 	andeq	r0, r0, r0, lsr #32
    1ae0:	00001acc 	andeq	r1, r0, ip, asr #21
    1ae4:	10003b4c 	andne	r3, r0, ip, asr #22
    1ae8:	00000090 	muleq	r0, r0, r0
    1aec:	84200e42 	strthi	r0, [r0], #-3650	; 0xfffff1be
    1af0:	86078508 	strhi	r8, [r7], -r8, lsl #10
    1af4:	88058706 	stmdahi	r5, {r1, r2, r8, r9, sl, pc}
    1af8:	8a038904 	bhi	e3f10 <__HEAP_SIZE+0xe2f10>
    1afc:	00018e02 	andeq	r8, r1, r2, lsl #28
    1b00:	0000000c 	andeq	r0, r0, ip
    1b04:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1b08:	7c020001 	stcvc	0, cr0, [r2], {1}
    1b0c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1b10:	00000024 	andeq	r0, r0, r4, lsr #32
    1b14:	00001b00 	andeq	r1, r0, r0, lsl #22
    1b18:	00000000 	andeq	r0, r0, r0
    1b1c:	00000048 	andeq	r0, r0, r8, asr #32
    1b20:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
    1b24:	86058506 	strhi	r8, [r5], -r6, lsl #10
    1b28:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
    1b2c:	60018e02 	andvs	r8, r1, r2, lsl #28
    1b30:	c6c7c8ce 	strbgt	ip, [r7], lr, asr #17
    1b34:	000ec4c5 	andeq	ip, lr, r5, asr #9
    1b38:	00000028 	andeq	r0, r0, r8, lsr #32
    1b3c:	00001b00 	andeq	r1, r0, r0, lsl #22
    1b40:	00000000 	andeq	r0, r0, r0
    1b44:	00000090 	muleq	r0, r0, r0
    1b48:	84100e46 	ldrhi	r0, [r0], #-3654	; 0xfffff1ba
    1b4c:	86038504 	strhi	r8, [r3], -r4, lsl #10
    1b50:	7c018e02 	stcvc	14, cr8, [r1], {2}
    1b54:	c5c6ce0a 	strbgt	ip, [r6, #3594]	; 0xe0a
    1b58:	42000ec4 	andmi	r0, r0, #196, 28	; 0xc40
    1b5c:	000e410b 	andeq	r4, lr, fp, lsl #2
    1b60:	cec6c5c4 	cdpgt	5, 12, cr12, cr6, cr4, {6}
    1b64:	0000000c 	andeq	r0, r0, ip
    1b68:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1b6c:	7c020001 	stcvc	0, cr0, [r2], {1}
    1b70:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1b74:	0000001c 	andeq	r0, r0, ip, lsl r0
    1b78:	00001b64 	andeq	r1, r0, r4, ror #22
    1b7c:	10003bdc 	ldrdne	r3, [r0], -ip
    1b80:	00000282 	andeq	r0, r0, r2, lsl #5
    1b84:	0c0e470a 	stceq	7, cr4, [lr], {10}
    1b88:	02850384 	addeq	r0, r5, #132, 6	; 0x10000002
    1b8c:	3a03018e 	bcc	c21cc <__HEAP_SIZE+0xc11cc>
    1b90:	00000b01 	andeq	r0, r0, r1, lsl #22
    1b94:	00000018 	andeq	r0, r0, r8, lsl r0
    1b98:	00001b64 	andeq	r1, r0, r4, ror #22
    1b9c:	10003e60 	andne	r3, r0, r0, ror #28
    1ba0:	0000001e 	andeq	r0, r0, lr, lsl r0
    1ba4:	0c0e460a 	stceq	6, cr4, [lr], {10}
    1ba8:	02850384 	addeq	r0, r5, #132, 6	; 0x10000002
    1bac:	0b49018e 	bleq	12421ec <__RAM_SIZE+0x11421ec>
    1bb0:	00000018 	andeq	r0, r0, r8, lsl r0
    1bb4:	00001b64 	andeq	r1, r0, r4, ror #22
    1bb8:	10003e80 	andne	r3, r0, r0, lsl #29
    1bbc:	00000022 	andeq	r0, r0, r2, lsr #32
    1bc0:	0c0e460a 	stceq	6, cr4, [lr], {10}
    1bc4:	02850384 	addeq	r0, r5, #132, 6	; 0x10000002
    1bc8:	0b4b018e 	bleq	12c2208 <__RAM_SIZE+0x11c2208>
    1bcc:	00000018 	andeq	r0, r0, r8, lsl r0
    1bd0:	00001b64 	andeq	r1, r0, r4, ror #22
    1bd4:	10003ea4 	andne	r3, r0, r4, lsr #29
    1bd8:	00000042 	andeq	r0, r0, r2, asr #32
    1bdc:	0c0e5a0a 			; <UNDEFINED> instruction: 0x0c0e5a0a
    1be0:	02850384 	addeq	r0, r5, #132, 6	; 0x10000002
    1be4:	0b47018e 	bleq	11c2224 <__RAM_SIZE+0x10c2224>
    1be8:	00000024 	andeq	r0, r0, r4, lsr #32
    1bec:	00001b64 	andeq	r1, r0, r4, ror #22
    1bf0:	10003ee8 	andne	r3, r0, r8, ror #29
    1bf4:	0000006a 	andeq	r0, r0, sl, rrx
    1bf8:	0e450a0a 	vmlaeq.f32	s1, s10, s20
    1bfc:	8503840c 	strhi	r8, [r3, #-1036]	; 0xfffffbf4
    1c00:	43018e02 	movwmi	r8, #7682	; 0x1e02
    1c04:	0c0e450b 	cfstr32eq	mvfx4, [lr], {11}
    1c08:	02850384 	addeq	r0, r5, #132, 6	; 0x10000002
    1c0c:	0b68018e 	bleq	1a0224c <__RAM_SIZE+0x190224c>
    1c10:	0000000c 	andeq	r0, r0, ip
    1c14:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1c18:	7c020001 	stcvc	0, cr0, [r2], {1}
    1c1c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1c20:	0000001c 	andeq	r0, r0, ip, lsl r0
    1c24:	00001c10 	andeq	r1, r0, r0, lsl ip
    1c28:	10003f54 	andne	r3, r0, r4, asr pc
    1c2c:	00000254 	andeq	r0, r0, r4, asr r2
    1c30:	100e410a 	andne	r4, lr, sl, lsl #2
    1c34:	03850484 	orreq	r0, r5, #132, 8	; 0x84000000
    1c38:	018e0286 	orreq	r0, lr, r6, lsl #5
    1c3c:	0b012903 	bleq	4c050 <__HEAP_SIZE+0x4b050>
    1c40:	0000001c 	andeq	r0, r0, ip, lsl r0
    1c44:	00001c10 	andeq	r1, r0, r0, lsl ip
    1c48:	100041a8 	andne	r4, r0, r8, lsr #3
    1c4c:	000001d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    1c50:	100e410a 	andne	r4, lr, sl, lsl #2
    1c54:	03850484 	orreq	r0, r5, #132, 8	; 0x84000000
    1c58:	018e0286 	orreq	r0, lr, r6, lsl #5
    1c5c:	000be702 	andeq	lr, fp, r2, lsl #14
    1c60:	0000000c 	andeq	r0, r0, ip
    1c64:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1c68:	7c020001 	stcvc	0, cr0, [r2], {1}
    1c6c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1c70:	0000001c 	andeq	r0, r0, ip, lsl r0
    1c74:	00001c60 	andeq	r1, r0, r0, ror #24
    1c78:	10004378 	andne	r4, r0, r8, ror r3
    1c7c:	0000008a 	andeq	r0, r0, sl, lsl #1
    1c80:	040e4c0a 	streq	r4, [lr], #-3082	; 0xfffff3f6
    1c84:	0e410a4a 	vmlseq.f32	s1, s2, s20
    1c88:	520b5b00 	andpl	r5, fp, #0, 22
    1c8c:	0b41000e 	bleq	1041ccc <__RAM_SIZE+0xf41ccc>
    1c90:	00000018 	andeq	r0, r0, r8, lsl r0
    1c94:	00001c60 	andeq	r1, r0, r0, ror #24
    1c98:	10004404 	andne	r4, r0, r4, lsl #8
    1c9c:	00000020 	andeq	r0, r0, r0, lsr #32
    1ca0:	080e490a 	stmdaeq	lr, {r1, r3, r8, fp, lr}
    1ca4:	018e0280 	orreq	r0, lr, r0, lsl #5
    1ca8:	00000b47 	andeq	r0, r0, r7, asr #22
    1cac:	00000014 	andeq	r0, r0, r4, lsl r0
    1cb0:	00001c60 	andeq	r1, r0, r0, ror #24
    1cb4:	10004424 	andne	r4, r0, r4, lsr #8
    1cb8:	00000012 	andeq	r0, r0, r2, lsl r0
    1cbc:	080e420a 	stmdaeq	lr, {r1, r3, r9, lr}
    1cc0:	0b47028e 	bleq	11c2700 <__RAM_SIZE+0x10c2700>
    1cc4:	00000014 	andeq	r0, r0, r4, lsl r0
    1cc8:	00001c60 	andeq	r1, r0, r0, ror #24
    1ccc:	10004438 	andne	r4, r0, r8, lsr r4
    1cd0:	00000012 	andeq	r0, r0, r2, lsl r0
    1cd4:	080e420a 	stmdaeq	lr, {r1, r3, r9, lr}
    1cd8:	0b47028e 	bleq	11c2718 <__RAM_SIZE+0x10c2718>
    1cdc:	00000014 	andeq	r0, r0, r4, lsl r0
    1ce0:	00001c60 	andeq	r1, r0, r0, ror #24
    1ce4:	1000444c 	andne	r4, r0, ip, asr #8
    1ce8:	00000012 	andeq	r0, r0, r2, lsl r0
    1cec:	080e420a 	stmdaeq	lr, {r1, r3, r9, lr}
    1cf0:	0b47028e 	bleq	11c2730 <__RAM_SIZE+0x10c2730>
    1cf4:	00000014 	andeq	r0, r0, r4, lsl r0
    1cf8:	00001c60 	andeq	r1, r0, r0, ror #24
    1cfc:	10004460 	andne	r4, r0, r0, ror #8
    1d00:	00000012 	andeq	r0, r0, r2, lsl r0
    1d04:	080e420a 	stmdaeq	lr, {r1, r3, r9, lr}
    1d08:	0b47028e 	bleq	11c2748 <__RAM_SIZE+0x10c2748>
    1d0c:	00000014 	andeq	r0, r0, r4, lsl r0
    1d10:	00001c60 	andeq	r1, r0, r0, ror #24
    1d14:	10004474 	andne	r4, r0, r4, ror r4
    1d18:	00000012 	andeq	r0, r0, r2, lsl r0
    1d1c:	080e420a 	stmdaeq	lr, {r1, r3, r9, lr}
    1d20:	0b47028e 	bleq	11c2760 <__RAM_SIZE+0x10c2760>
    1d24:	0000000c 	andeq	r0, r0, ip
    1d28:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1d2c:	7c020001 	stcvc	0, cr0, [r2], {1}
    1d30:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1d34:	00000010 	andeq	r0, r0, r0, lsl r0
    1d38:	00001d24 	andeq	r1, r0, r4, lsr #26
    1d3c:	10004488 	andne	r4, r0, r8, lsl #9
    1d40:	0000004e 	andeq	r0, r0, lr, asr #32
    1d44:	000b670a 	andeq	r6, fp, sl, lsl #14
    1d48:	0000000c 	andeq	r0, r0, ip
    1d4c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1d50:	7c020001 	stcvc	0, cr0, [r2], {1}
    1d54:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1d58:	00000010 	andeq	r0, r0, r0, lsl r0
    1d5c:	00001d48 	andeq	r1, r0, r8, asr #26
    1d60:	100044d8 	ldrdne	r4, [r0], -r8
    1d64:	00000040 	andeq	r0, r0, r0, asr #32
    1d68:	000b600a 	andeq	r6, fp, sl
    1d6c:	0000000c 	andeq	r0, r0, ip
    1d70:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1d74:	7c020001 	stcvc	0, cr0, [r2], {1}
    1d78:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1d7c:	00000018 	andeq	r0, r0, r8, lsl r0
    1d80:	00001d6c 	andeq	r1, r0, ip, ror #26
    1d84:	10004518 	andne	r4, r0, r8, lsl r5
    1d88:	00000030 	andeq	r0, r0, r0, lsr r0
    1d8c:	8e100e50 	mrchi	14, 0, r0, cr0, cr0, {2}
    1d90:	0ece4703 	cdpeq	7, 12, cr4, cr14, cr3, {0}
    1d94:	00000010 	andeq	r0, r0, r0, lsl r0
    1d98:	0000000c 	andeq	r0, r0, ip
    1d9c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1da0:	7c020001 	stcvc	0, cr0, [r2], {1}
    1da4:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1da8:	00000024 	andeq	r0, r0, r4, lsr #32
    1dac:	00001d98 	muleq	r0, r8, sp
    1db0:	10004548 	andne	r4, r0, r8, asr #10
    1db4:	000002ec 	andeq	r0, r0, ip, ror #5
    1db8:	84240e42 	strthi	r0, [r4], #-3650	; 0xfffff1be
    1dbc:	86088509 	strhi	r8, [r8], -r9, lsl #10
    1dc0:	88068707 	stmdahi	r6, {r0, r1, r2, r8, r9, sl, pc}
    1dc4:	8a048905 	bhi	1241e0 <__RAM_SIZE+0x241e0>
    1dc8:	8e028b03 	vmlahi.f64	d8, d2, d3
    1dcc:	00000001 	andeq	r0, r0, r1
    1dd0:	0000000c 	andeq	r0, r0, ip
    1dd4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1dd8:	7c020001 	stcvc	0, cr0, [r2], {1}
    1ddc:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1de0:	0000000c 	andeq	r0, r0, ip
    1de4:	00001dd0 	ldrdeq	r1, [r0], -r0
    1de8:	10004834 	andne	r4, r0, r4, lsr r8
    1dec:	00000012 	andeq	r0, r0, r2, lsl r0
    1df0:	00000020 	andeq	r0, r0, r0, lsr #32
    1df4:	00001dd0 	ldrdeq	r1, [r0], -r0
    1df8:	10004848 	andne	r4, r0, r8, asr #16
    1dfc:	00000060 	andeq	r0, r0, r0, rrx
    1e00:	84200e42 	strthi	r0, [r0], #-3650	; 0xfffff1be
    1e04:	86078508 	strhi	r8, [r7], -r8, lsl #10
    1e08:	88058706 	stmdahi	r5, {r1, r2, r8, r9, sl, pc}
    1e0c:	8a038904 	bhi	e4224 <__HEAP_SIZE+0xe3224>
    1e10:	00018e02 	andeq	r8, r1, r2, lsl #28
    1e14:	0000000c 	andeq	r0, r0, ip
    1e18:	00001dd0 	ldrdeq	r1, [r0], -r0
    1e1c:	100048a8 	andne	r4, r0, r8, lsr #17
    1e20:	00000028 	andeq	r0, r0, r8, lsr #32
    1e24:	0000002c 	andeq	r0, r0, ip, lsr #32
    1e28:	00001dd0 	ldrdeq	r1, [r0], -r0
    1e2c:	100048d0 	ldrdne	r4, [r0], -r0
    1e30:	0000009c 	muleq	r0, ip, r0
    1e34:	840c0e42 	strhi	r0, [ip], #-3650	; 0xfffff1be
    1e38:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
    1e3c:	180e4201 	stmdane	lr, {r0, r9, lr}
    1e40:	0c0e0a65 			; <UNDEFINED> instruction: 0x0c0e0a65
    1e44:	0a440b41 	beq	1104b50 <__RAM_SIZE+0x1004b50>
    1e48:	0b410c0e 	bleq	1044e88 <__RAM_SIZE+0xf44e88>
    1e4c:	0c0e0a50 			; <UNDEFINED> instruction: 0x0c0e0a50
    1e50:	00000b41 	andeq	r0, r0, r1, asr #22
    1e54:	00000018 	andeq	r0, r0, r8, lsl r0
    1e58:	00001dd0 	ldrdeq	r1, [r0], -r0
    1e5c:	1000496c 	andne	r4, r0, ip, ror #18
    1e60:	00000058 	andeq	r0, r0, r8, asr r0
    1e64:	84080e43 	strhi	r0, [r8], #-3651	; 0xfffff1bd
    1e68:	67018e02 	strvs	r8, [r1, -r2, lsl #28]
    1e6c:	000ec4ce 	andeq	ip, lr, lr, asr #9
    1e70:	0000000c 	andeq	r0, r0, ip
    1e74:	00001dd0 	ldrdeq	r1, [r0], -r0
    1e78:	100049c4 	andne	r4, r0, r4, asr #19
    1e7c:	00000004 	andeq	r0, r0, r4
    1e80:	0000000c 	andeq	r0, r0, ip
    1e84:	00001dd0 	ldrdeq	r1, [r0], -r0
    1e88:	100049c8 	andne	r4, r0, r8, asr #19
    1e8c:	0000000a 	andeq	r0, r0, sl
    1e90:	0000000c 	andeq	r0, r0, ip
    1e94:	00001dd0 	ldrdeq	r1, [r0], -r0
    1e98:	100049d4 	ldrdne	r4, [r0], -r4	; <UNPREDICTABLE>
    1e9c:	00000002 	andeq	r0, r0, r2
    1ea0:	00000018 	andeq	r0, r0, r8, lsl r0
    1ea4:	00001dd0 	ldrdeq	r1, [r0], -r0
    1ea8:	100049d8 	ldrdne	r4, [r0], -r8
    1eac:	0000003e 	andeq	r0, r0, lr, lsr r0
    1eb0:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    1eb4:	86038504 	strhi	r8, [r3], -r4, lsl #10
    1eb8:	00018e02 	andeq	r8, r1, r2, lsl #28
    1ebc:	0000002c 	andeq	r0, r0, ip, lsr #32
    1ec0:	00001dd0 	ldrdeq	r1, [r0], -r0
    1ec4:	10004a18 	andne	r4, r0, r8, lsl sl
    1ec8:	000000da 	ldrdeq	r0, [r0], -sl
    1ecc:	84200e42 	strthi	r0, [r0], #-3650	; 0xfffff1be
    1ed0:	86078508 	strhi	r8, [r7], -r8, lsl #10
    1ed4:	88058706 	stmdahi	r5, {r1, r2, r8, r9, sl, pc}
    1ed8:	8a038904 	bhi	e42f0 <__HEAP_SIZE+0xe32f0>
    1edc:	44018e02 	strmi	r8, [r1], #-3586	; 0xfffff1fe
    1ee0:	0207f00e 	andeq	pc, r7, #14
    1ee4:	200e0a5b 	andcs	r0, lr, fp, asr sl
    1ee8:	00000b42 	andeq	r0, r0, r2, asr #22
    1eec:	0000000c 	andeq	r0, r0, ip
    1ef0:	00001dd0 	ldrdeq	r1, [r0], -r0
    1ef4:	10004af4 	strdne	r4, [r0], -r4	; <UNPREDICTABLE>
    1ef8:	00000004 	andeq	r0, r0, r4
    1efc:	00000024 	andeq	r0, r0, r4, lsr #32
    1f00:	00001dd0 	ldrdeq	r1, [r0], -r0
    1f04:	10004af8 	strdne	r4, [r0], -r8
    1f08:	00000066 	andeq	r0, r0, r6, rrx
    1f0c:	84140e41 	ldrhi	r0, [r4], #-3649	; 0xfffff1bf
    1f10:	86048505 	strhi	r8, [r4], -r5, lsl #10
    1f14:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
    1f18:	f80e4201 			; <UNDEFINED> instruction: 0xf80e4201
    1f1c:	0e0a6603 	cfmadd32eq	mvax0, mvfx6, mvfx10, mvfx3
    1f20:	000b4114 	andeq	r4, fp, r4, lsl r1
    1f24:	00000018 	andeq	r0, r0, r8, lsl r0
    1f28:	00001dd0 	ldrdeq	r1, [r0], -r0
    1f2c:	10004b60 	andne	r4, r0, r0, ror #22
    1f30:	00000012 	andeq	r0, r0, r2, lsl r0
    1f34:	84040e41 	strhi	r0, [r4], #-3649	; 0xfffff1bf
    1f38:	0ec44701 	cdpeq	7, 12, cr4, cr4, cr1, {0}
    1f3c:	00000000 	andeq	r0, r0, r0
    1f40:	00000018 	andeq	r0, r0, r8, lsl r0
    1f44:	00001dd0 	ldrdeq	r1, [r0], -r0
    1f48:	10004b74 	andne	r4, r0, r4, ror fp
    1f4c:	00000044 	andeq	r0, r0, r4, asr #32
    1f50:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    1f54:	86038504 	strhi	r8, [r3], -r4, lsl #10
    1f58:	00018e02 	andeq	r8, r1, r2, lsl #28
    1f5c:	0000000c 	andeq	r0, r0, ip
    1f60:	00001dd0 	ldrdeq	r1, [r0], -r0
    1f64:	10004bb8 			; <UNDEFINED> instruction: 0x10004bb8
    1f68:	00000012 	andeq	r0, r0, r2, lsl r0
    1f6c:	0000000c 	andeq	r0, r0, ip
    1f70:	00001dd0 	ldrdeq	r1, [r0], -r0
    1f74:	10004bcc 	andne	r4, r0, ip, asr #23
    1f78:	00000002 	andeq	r0, r0, r2
    1f7c:	0000000c 	andeq	r0, r0, ip
    1f80:	00001dd0 	ldrdeq	r1, [r0], -r0
    1f84:	10004bd0 	ldrdne	r4, [r0], -r0
    1f88:	0000000c 	andeq	r0, r0, ip
    1f8c:	0000000c 	andeq	r0, r0, ip
    1f90:	00001dd0 	ldrdeq	r1, [r0], -r0
    1f94:	10004bdc 	ldrdne	r4, [r0], -ip
    1f98:	00000034 	andeq	r0, r0, r4, lsr r0
    1f9c:	0000001c 	andeq	r0, r0, ip, lsl r0
    1fa0:	00001dd0 	ldrdeq	r1, [r0], -r0
    1fa4:	10004c10 	andne	r4, r0, r0, lsl ip
    1fa8:	00000018 	andeq	r0, r0, r8, lsl r0
    1fac:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    1fb0:	41018e02 	tstmi	r1, r2, lsl #28
    1fb4:	0e49180e 	cdpeq	8, 4, cr1, cr9, cr14, {0}
    1fb8:	00000008 	andeq	r0, r0, r8
    1fbc:	0000000c 	andeq	r0, r0, ip
    1fc0:	00001dd0 	ldrdeq	r1, [r0], -r0
    1fc4:	10004c28 	andne	r4, r0, r8, lsr #24
    1fc8:	00000034 	andeq	r0, r0, r4, lsr r0
    1fcc:	0000001c 	andeq	r0, r0, ip, lsl r0
    1fd0:	00001dd0 	ldrdeq	r1, [r0], -r0
    1fd4:	10004c5c 	andne	r4, r0, ip, asr ip
    1fd8:	00000018 	andeq	r0, r0, r8, lsl r0
    1fdc:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    1fe0:	41018e02 	tstmi	r1, r2, lsl #28
    1fe4:	0e49180e 	cdpeq	8, 4, cr1, cr9, cr14, {0}
    1fe8:	00000008 	andeq	r0, r0, r8
    1fec:	00000020 	andeq	r0, r0, r0, lsr #32
    1ff0:	00001dd0 	ldrdeq	r1, [r0], -r0
    1ff4:	10004c74 	andne	r4, r0, r4, ror ip
    1ff8:	0000007c 	andeq	r0, r0, ip, ror r0
    1ffc:	84140e41 	ldrhi	r0, [r4], #-3649	; 0xfffff1bf
    2000:	86048505 	strhi	r8, [r4], -r5, lsl #10
    2004:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
    2008:	d00e4301 	andle	r4, lr, r1, lsl #6
    200c:	140e7904 	strne	r7, [lr], #-2308	; 0xfffff6fc
    2010:	00000030 	andeq	r0, r0, r0, lsr r0
    2014:	00001dd0 	ldrdeq	r1, [r0], -r0
    2018:	10004cf0 	strdne	r4, [r0], -r0
    201c:	000002c8 	andeq	r0, r0, r8, asr #5
    2020:	84240e42 	strthi	r0, [r4], #-3650	; 0xfffff1be
    2024:	86088509 	strhi	r8, [r8], -r9, lsl #10
    2028:	88068707 	stmdahi	r6, {r0, r1, r2, r8, r9, sl, pc}
    202c:	8a048905 	bhi	124448 <__RAM_SIZE+0x24448>
    2030:	8e028b03 	vmlahi.f64	d8, d2, d3
    2034:	480e4201 	stmdami	lr, {r0, r9, lr}
    2038:	240e0a64 	strcs	r0, [lr], #-2660	; 0xfffff59c
    203c:	0a710b42 	beq	1c44d4c <__RAM_SIZE+0x1b44d4c>
    2040:	0b42240e 	bleq	108b080 <__RAM_SIZE+0xf8b080>
    2044:	0000000c 	andeq	r0, r0, ip
    2048:	00001dd0 	ldrdeq	r1, [r0], -r0
    204c:	10004fb8 			; <UNDEFINED> instruction: 0x10004fb8
    2050:	00000004 	andeq	r0, r0, r4
    2054:	0000000c 	andeq	r0, r0, ip
    2058:	00001dd0 	ldrdeq	r1, [r0], -r0
    205c:	10004fbc 			; <UNDEFINED> instruction: 0x10004fbc
    2060:	00000004 	andeq	r0, r0, r4
    2064:	0000000c 	andeq	r0, r0, ip
    2068:	00001dd0 	ldrdeq	r1, [r0], -r0
    206c:	10004fc0 	andne	r4, r0, r0, asr #31
    2070:	00000004 	andeq	r0, r0, r4
    2074:	0000003c 	andeq	r0, r0, ip, lsr r0
    2078:	00001dd0 	ldrdeq	r1, [r0], -r0
    207c:	10004fc4 	andne	r4, r0, r4, asr #31
    2080:	000002b4 			; <UNDEFINED> instruction: 0x000002b4
    2084:	841c0e42 	ldrhi	r0, [ip], #-3650	; 0xfffff1be
    2088:	86068507 	strhi	r8, [r6], -r7, lsl #10
    208c:	88048705 	stmdahi	r4, {r0, r2, r8, r9, sl, pc}
    2090:	8e028903 	vmlahi.f16	s16, s4, s6	; <UNPREDICTABLE>
    2094:	a80e4201 	stmdage	lr, {r0, r9, lr}
    2098:	0e0a7102 	adfeqe	f7, f2, f2
    209c:	6b0b421c 	blvs	2d2914 <__RAM_SIZE+0x1d2914>
    20a0:	421c0e0a 	andsmi	r0, ip, #10, 28	; 0xa0
    20a4:	0a48020b 	beq	12028d8 <__RAM_SIZE+0x11028d8>
    20a8:	0b421c0e 	bleq	10890e8 <__RAM_SIZE+0xf890e8>
    20ac:	1c0e0a5f 			; <UNDEFINED> instruction: 0x1c0e0a5f
    20b0:	00000b42 	andeq	r0, r0, r2, asr #22
    20b4:	0000000c 	andeq	r0, r0, ip
    20b8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    20bc:	7c020001 	stcvc	0, cr0, [r2], {1}
    20c0:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    20c4:	00000018 	andeq	r0, r0, r8, lsl r0
    20c8:	000020b4 	strheq	r2, [r0], -r4
    20cc:	10005424 	andne	r5, r0, r4, lsr #8
    20d0:	0000003c 	andeq	r0, r0, ip, lsr r0
    20d4:	84040e4a 	strhi	r0, [r4], #-3658	; 0xfffff1b6
    20d8:	0ec44901 	vdiveq.f16	s9, s8, s2	; <UNPREDICTABLE>
    20dc:	00000000 	andeq	r0, r0, r0
    20e0:	0000001c 	andeq	r0, r0, ip, lsl r0
    20e4:	000020b4 	strheq	r2, [r0], -r4
    20e8:	10005460 	andne	r5, r0, r0, ror #8
    20ec:	00000018 	andeq	r0, r0, r8, lsl r0
    20f0:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    20f4:	41018e02 	tstmi	r1, r2, lsl #28
    20f8:	0e49180e 	cdpeq	8, 4, cr1, cr9, cr14, {0}
    20fc:	00000008 	andeq	r0, r0, r8
    2100:	0000000c 	andeq	r0, r0, ip
    2104:	000020b4 	strheq	r2, [r0], -r4
    2108:	10005478 	andne	r5, r0, r8, ror r4
    210c:	00000002 	andeq	r0, r0, r2
    2110:	00000028 	andeq	r0, r0, r8, lsr #32
    2114:	000020b4 	strheq	r2, [r0], -r4
    2118:	1000547c 	andne	r5, r0, ip, ror r4
    211c:	000002ca 	andeq	r0, r0, sl, asr #5
    2120:	841c0e42 	ldrhi	r0, [ip], #-3650	; 0xfffff1be
    2124:	86068507 	strhi	r8, [r6], -r7, lsl #10
    2128:	88048705 	stmdahi	r4, {r0, r2, r8, r9, sl, pc}
    212c:	8e028903 	vmlahi.f16	s16, s4, s6	; <UNPREDICTABLE>
    2130:	300e4301 	andcc	r4, lr, r1, lsl #6
    2134:	1c0e0a6a 			; <UNDEFINED> instruction: 0x1c0e0a6a
    2138:	00000b42 	andeq	r0, r0, r2, asr #22
    213c:	00000018 	andeq	r0, r0, r8, lsl r0
    2140:	000020b4 	strheq	r2, [r0], -r4
    2144:	10005748 	andne	r5, r0, r8, asr #14
    2148:	00000030 	andeq	r0, r0, r0, lsr r0
    214c:	8e040e49 	cdphi	14, 0, cr0, cr4, cr9, {2}
    2150:	180e4101 	stmdane	lr, {r0, r8, lr}
    2154:	00040e4c 	andeq	r0, r4, ip, asr #28
    2158:	00000014 	andeq	r0, r0, r4, lsl r0
    215c:	000020b4 	strheq	r2, [r0], -r4
    2160:	10005778 	andne	r5, r0, r8, ror r7
    2164:	0000000a 	andeq	r0, r0, sl
    2168:	83080e41 	movwhi	r0, #36417	; 0x8e41
    216c:	00018e02 	andeq	r8, r1, r2, lsl #28
    2170:	00000014 	andeq	r0, r0, r4, lsl r0
    2174:	000020b4 	strheq	r2, [r0], -r4
    2178:	10005784 	andne	r5, r0, r4, lsl #15
    217c:	00000012 	andeq	r0, r0, r2, lsl r0
    2180:	83080e41 	movwhi	r0, #36417	; 0x8e41
    2184:	00018e02 	andeq	r8, r1, r2, lsl #28
    2188:	00000014 	andeq	r0, r0, r4, lsl r0
    218c:	000020b4 	strheq	r2, [r0], -r4
    2190:	00000000 	andeq	r0, r0, r0
    2194:	00000006 	andeq	r0, r0, r6
    2198:	83080e41 	movwhi	r0, #36417	; 0x8e41
    219c:	00018e02 	andeq	r8, r1, r2, lsl #28
    21a0:	00000014 	andeq	r0, r0, r4, lsl r0
    21a4:	000020b4 	strheq	r2, [r0], -r4
    21a8:	00000000 	andeq	r0, r0, r0
    21ac:	00000006 	andeq	r0, r0, r6
    21b0:	83080e41 	movwhi	r0, #36417	; 0x8e41
    21b4:	00018e02 	andeq	r8, r1, r2, lsl #28
    21b8:	0000000c 	andeq	r0, r0, ip
    21bc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    21c0:	7c020001 	stcvc	0, cr0, [r2], {1}
    21c4:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    21c8:	00000014 	andeq	r0, r0, r4, lsl r0
    21cc:	000021b8 			; <UNDEFINED> instruction: 0x000021b8
    21d0:	1000579c 	mulne	r0, ip, r7
    21d4:	0000000e 	andeq	r0, r0, lr
    21d8:	83080e42 	movwhi	r0, #36418	; 0x8e42
    21dc:	00018e02 	andeq	r8, r1, r2, lsl #28
    21e0:	0000000c 	andeq	r0, r0, ip
    21e4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    21e8:	7c020001 	stcvc	0, cr0, [r2], {1}
    21ec:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    21f0:	00000018 	andeq	r0, r0, r8, lsl r0
    21f4:	000021e0 	andeq	r2, r0, r0, ror #3
    21f8:	00000000 	andeq	r0, r0, r0
    21fc:	00000030 	andeq	r0, r0, r0, lsr r0
    2200:	83100e41 	tsthi	r0, #1040	; 0x410
    2204:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    2208:	00018e02 	andeq	r8, r1, r2, lsl #28
    220c:	0000001c 	andeq	r0, r0, ip, lsl r0
    2210:	000021e0 	andeq	r2, r0, r0, ror #3
    2214:	00000000 	andeq	r0, r0, r0
    2218:	0000004c 	andeq	r0, r0, ip, asr #32
    221c:	83180e42 	tsthi	r8, #1056	; 0x420
    2220:	85058406 	strhi	r8, [r5, #-1030]	; 0xfffffbfa
    2224:	87038604 	strhi	r8, [r3, -r4, lsl #12]
    2228:	00018e02 	andeq	r8, r1, r2, lsl #28
    222c:	00000024 	andeq	r0, r0, r4, lsr #32
    2230:	000021e0 	andeq	r2, r0, r0, ror #3
    2234:	00000000 	andeq	r0, r0, r0
    2238:	00000056 	andeq	r0, r0, r6, asr r0
    223c:	83100e42 	tsthi	r0, #1056	; 0x420
    2240:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    2244:	5c018e02 	stcpl	14, cr8, [r1], {2}
    2248:	c4c5ce0a 	strbgt	ip, [r5], #3594	; 0xe0a
    224c:	42000ec3 	andmi	r0, r0, #3120	; 0xc30
    2250:	0000000b 	andeq	r0, r0, fp
    2254:	00000020 	andeq	r0, r0, r0, lsr #32
    2258:	000021e0 	andeq	r2, r0, r0, ror #3
    225c:	00000000 	andeq	r0, r0, r0
    2260:	00000064 	andeq	r0, r0, r4, rrx
    2264:	83100e45 	tsthi	r0, #1104	; 0x450
    2268:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    226c:	6a018e02 	bvs	65a7c <__HEAP_SIZE+0x64a7c>
    2270:	c4c3000e 	strbgt	r0, [r3], #14
    2274:	0000cec5 	andeq	ip, r0, r5, asr #29
    2278:	00000024 	andeq	r0, r0, r4, lsr #32
    227c:	000021e0 	andeq	r2, r0, r0, ror #3
    2280:	100057ac 	andne	r5, r0, ip, lsr #15
    2284:	0000005c 	andeq	r0, r0, ip, asr r0
    2288:	83100e41 	tsthi	r0, #1040	; 0x410
    228c:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    2290:	5d018e02 	stcpl	14, cr8, [r1, #-8]
    2294:	c4c5ce0a 	strbgt	ip, [r5], #3594	; 0xe0a
    2298:	42000ec3 	andmi	r0, r0, #3120	; 0xc30
    229c:	0000000b 	andeq	r0, r0, fp
    22a0:	00000018 	andeq	r0, r0, r8, lsl r0
    22a4:	000021e0 	andeq	r2, r0, r0, ror #3
    22a8:	00000000 	andeq	r0, r0, r0
    22ac:	00000054 	andeq	r0, r0, r4, asr r0
    22b0:	84100e43 	ldrhi	r0, [r0], #-3651	; 0xfffff1bd
    22b4:	86038504 	strhi	r8, [r3], -r4, lsl #10
    22b8:	00018e02 	andeq	r8, r1, r2, lsl #28
    22bc:	00000018 	andeq	r0, r0, r8, lsl r0
    22c0:	000021e0 	andeq	r2, r0, r0, ror #3
    22c4:	00000000 	andeq	r0, r0, r0
    22c8:	00000038 	andeq	r0, r0, r8, lsr r0
    22cc:	83100e41 	tsthi	r0, #1040	; 0x410
    22d0:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    22d4:	00018e02 	andeq	r8, r1, r2, lsl #28
    22d8:	00000018 	andeq	r0, r0, r8, lsl r0
    22dc:	000021e0 	andeq	r2, r0, r0, ror #3
    22e0:	00000000 	andeq	r0, r0, r0
    22e4:	00000068 	andeq	r0, r0, r8, rrx
    22e8:	83100e41 	tsthi	r0, #1040	; 0x410
    22ec:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    22f0:	00018e02 	andeq	r8, r1, r2, lsl #28
    22f4:	0000000c 	andeq	r0, r0, ip
    22f8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    22fc:	7c020001 	stcvc	0, cr0, [r2], {1}
    2300:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    2304:	00000018 	andeq	r0, r0, r8, lsl r0
    2308:	000022f4 	strdeq	r2, [r0], -r4
    230c:	10005808 	andne	r5, r0, r8, lsl #16
    2310:	0000002c 	andeq	r0, r0, ip, lsr #32
    2314:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    2318:	86038504 	strhi	r8, [r3], -r4, lsl #10
    231c:	00018e02 	andeq	r8, r1, r2, lsl #28
    2320:	0000000c 	andeq	r0, r0, ip
    2324:	000022f4 	strdeq	r2, [r0], -r4
    2328:	10005834 	andne	r5, r0, r4, lsr r8
    232c:	00000004 	andeq	r0, r0, r4

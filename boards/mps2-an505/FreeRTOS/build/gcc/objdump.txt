
.\build\gcc/an505-qemu.elf:     file format elf32-littlearm


Disassembly of section .text:

10000000 <__Vectors>:
10000000:	38100000 	ldmdacc	r0, {}	; <UNPREDICTABLE>
10000004:	10003701 	andne	r3, r0, r1, lsl #14
10000008:	10003755 	andne	r3, r0, r5, asr r7
1000000c:	10003771 	andne	r3, r0, r1, ror r7
10000010:	10003755 	andne	r3, r0, r5, asr r7
10000014:	10003755 	andne	r3, r0, r5, asr r7
10000018:	10003755 	andne	r3, r0, r5, asr r7
1000001c:	10003755 	andne	r3, r0, r5, asr r7
	...
1000002c:	100036c9 	andne	r3, r0, r9, asr #13
10000030:	10003755 	andne	r3, r0, r5, asr r7
10000034:	00000000 	andeq	r0, r0, r0
10000038:	10003681 	andne	r3, r0, r1, lsl #13
1000003c:	10003509 	andne	r3, r0, r9, lsl #10
10000040:	10003755 	andne	r3, r0, r5, asr r7
10000044:	10003755 	andne	r3, r0, r5, asr r7
10000048:	10003755 	andne	r3, r0, r5, asr r7
1000004c:	10003755 	andne	r3, r0, r5, asr r7
10000050:	10003755 	andne	r3, r0, r5, asr r7
10000054:	10003755 	andne	r3, r0, r5, asr r7
10000058:	10003755 	andne	r3, r0, r5, asr r7
1000005c:	10003755 	andne	r3, r0, r5, asr r7
10000060:	10003755 	andne	r3, r0, r5, asr r7
10000064:	10003755 	andne	r3, r0, r5, asr r7
	...

100007c0 <__do_global_dtors_aux>:
100007c0:	b510      	push	{r4, lr}
100007c2:	4c05      	ldr	r4, [pc, #20]	; (100007d8 <__do_global_dtors_aux+0x18>)
100007c4:	7823      	ldrb	r3, [r4, #0]
100007c6:	b933      	cbnz	r3, 100007d6 <__do_global_dtors_aux+0x16>
100007c8:	4b04      	ldr	r3, [pc, #16]	; (100007dc <__do_global_dtors_aux+0x1c>)
100007ca:	b113      	cbz	r3, 100007d2 <__do_global_dtors_aux+0x12>
100007cc:	4804      	ldr	r0, [pc, #16]	; (100007e0 <__do_global_dtors_aux+0x20>)
100007ce:	e000      	b.n	100007d2 <__do_global_dtors_aux+0x12>
100007d0:	bf00      	nop
100007d2:	2301      	movs	r3, #1
100007d4:	7023      	strb	r3, [r4, #0]
100007d6:	bd10      	pop	{r4, pc}
100007d8:	38000448 	stmdacc	r0, {r3, r6, sl}
100007dc:	00000000 	andeq	r0, r0, r0
100007e0:	10005bac 	andne	r5, r0, ip, lsr #23

100007e4 <frame_dummy>:
100007e4:	b508      	push	{r3, lr}
100007e6:	4b03      	ldr	r3, [pc, #12]	; (100007f4 <frame_dummy+0x10>)
100007e8:	b11b      	cbz	r3, 100007f2 <frame_dummy+0xe>
100007ea:	4903      	ldr	r1, [pc, #12]	; (100007f8 <frame_dummy+0x14>)
100007ec:	4803      	ldr	r0, [pc, #12]	; (100007fc <frame_dummy+0x18>)
100007ee:	e000      	b.n	100007f2 <frame_dummy+0xe>
100007f0:	bf00      	nop
100007f2:	bd08      	pop	{r3, pc}
100007f4:	00000000 	andeq	r0, r0, r0
100007f8:	3800044c 	stmdacc	r0, {r2, r3, r6, sl}
100007fc:	10005bac 	andne	r5, r0, ip, lsr #23

10000800 <main_task_init>:
        vTaskDelay(1000);
        printf("hello this is FreeRTOS.\r\n");
    }
}

static void main_task_init(void) {
10000800:	b500      	push	{lr}
10000802:	b083      	sub	sp, #12
    static TaskHandle_t main_task = NULL;
    BaseType_t xReturn = pdPASS;
    xReturn = xTaskCreate(main_task_entry, "main_task", 2048, NULL, 1U, &main_task);
10000804:	4b0b      	ldr	r3, [pc, #44]	; (10000834 <main_task_init+0x34>)
10000806:	9301      	str	r3, [sp, #4]
10000808:	2301      	movs	r3, #1
1000080a:	9300      	str	r3, [sp, #0]
1000080c:	2300      	movs	r3, #0
1000080e:	f44f 6200 	mov.w	r2, #2048	; 0x800
10000812:	4909      	ldr	r1, [pc, #36]	; (10000838 <main_task_init+0x38>)
10000814:	4809      	ldr	r0, [pc, #36]	; (1000083c <main_task_init+0x3c>)
10000816:	f001 ff3d 	bl	10002694 <xTaskCreate>
    if (xReturn == pdPASS) {
1000081a:	2801      	cmp	r0, #1
1000081c:	d006      	beq.n	1000082c <main_task_init+0x2c>
1000081e:	4601      	mov	r1, r0
        vTaskStartScheduler();
    } else {
        printf("main task create failed(%d).\r\n", (int)(xReturn));
10000820:	4807      	ldr	r0, [pc, #28]	; (10000840 <main_task_init+0x40>)
10000822:	f001 f8ef 	bl	10001a04 <printf>
    }
}
10000826:	b003      	add	sp, #12
10000828:	f85d fb04 	ldr.w	pc, [sp], #4
        vTaskStartScheduler();
1000082c:	f002 fac0 	bl	10002db0 <vTaskStartScheduler>
10000830:	e7f9      	b.n	10000826 <main_task_init+0x26>
10000832:	bf00      	nop
10000834:	38000464 	stmdacc	r0, {r2, r5, r6, sl}
10000838:	100056ac 	andne	r5, r0, ip, lsr #13
1000083c:	10000845 	andne	r0, r0, r5, asr #16
10000840:	100056b8 			; <UNDEFINED> instruction: 0x100056b8

10000844 <main_task_entry>:
static void main_task_entry(void *parameters) {
10000844:	b508      	push	{r3, lr}
        vTaskDelay(1000);
10000846:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
1000084a:	f002 f8af 	bl	100029ac <vTaskDelay>
        printf("hello this is FreeRTOS.\r\n");
1000084e:	4802      	ldr	r0, [pc, #8]	; (10000858 <main_task_entry+0x14>)
10000850:	f001 f8f8 	bl	10001a44 <puts>
    while(1) {
10000854:	e7f7      	b.n	10000846 <main_task_entry+0x2>
10000856:	bf00      	nop
10000858:	100056d8 	ldrdne	r5, [r0], -r8

1000085c <main>:

int main(void) {
1000085c:	b510      	push	{r4, lr}
    int count = 0;
    uart_init();
1000085e:	f001 f901 	bl	10001a64 <uart_init>

    printf("Start\r\n");
10000862:	4807      	ldr	r0, [pc, #28]	; (10000880 <main+0x24>)
10000864:	f001 f8ee 	bl	10001a44 <puts>
    fault_dump_init();
10000868:	f001 f94c 	bl	10001b04 <fault_dump_init>
    main_task_init();
1000086c:	f7ff ffc8 	bl	10000800 <main_task_init>
    int count = 0;
10000870:	2100      	movs	r1, #0
    // test5();

    while (1) {
        __NOP();
10000872:	bf00      	nop
        printf("hello world - %d.\r\n", count++);
10000874:	1c4c      	adds	r4, r1, #1
10000876:	4803      	ldr	r0, [pc, #12]	; (10000884 <main+0x28>)
10000878:	f001 f8c4 	bl	10001a04 <printf>
1000087c:	4621      	mov	r1, r4
1000087e:	e7f8      	b.n	10000872 <main+0x16>
10000880:	100056f4 	strdne	r5, [r0], -r4
10000884:	100056fc 	strdne	r5, [r0], -ip

10000888 <SystemInit>:
 *----------------------------------------------------------------------------*/
void SystemInit (void)
{

#if defined (__VTOR_PRESENT) && (__VTOR_PRESENT == 1U)
  SCB->VTOR = (uint32_t) &(__VECTOR_TABLE[0]);
10000888:	4b06      	ldr	r3, [pc, #24]	; (100008a4 <SystemInit+0x1c>)
1000088a:	4a07      	ldr	r2, [pc, #28]	; (100008a8 <SystemInit+0x20>)
1000088c:	609a      	str	r2, [r3, #8]
#endif

#if defined (__FPU_USED) && (__FPU_USED == 1U)
  SCB->CPACR |= ((3U << 10U*2U) |           /* enable CP10 Full Access */
1000088e:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
10000892:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
10000896:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88

#if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
  TZ_SAU_Setup();
#endif

  SystemCoreClock = SYSTEM_CLOCK;
1000089a:	4b04      	ldr	r3, [pc, #16]	; (100008ac <SystemInit+0x24>)
1000089c:	4a04      	ldr	r2, [pc, #16]	; (100008b0 <SystemInit+0x28>)
1000089e:	601a      	str	r2, [r3, #0]
}
100008a0:	4770      	bx	lr
100008a2:	bf00      	nop
100008a4:	e000ed00 	and	lr, r0, r0, lsl #26
100008a8:	10000000 	andne	r0, r0, r0
100008ac:	38000000 	stmdacc	r0, {}	; <UNPREDICTABLE>
100008b0:	017d7840 	cmneq	sp, r0, asr #16

100008b4 <_out_null>:

// internal null output
static inline void _out_null(char character, void* buffer, size_t idx, size_t maxlen)
{
  (void)character; (void)buffer; (void)idx; (void)maxlen;
}
100008b4:	4770      	bx	lr

100008b6 <_atoi>:
}


// internal ASCII string to unsigned int conversion
static unsigned int _atoi(const char** str)
{
100008b6:	4601      	mov	r1, r0
  unsigned int i = 0U;
100008b8:	2000      	movs	r0, #0
  while (_is_digit(**str)) {
100008ba:	e007      	b.n	100008cc <_atoi+0x16>
    i = i * 10U + (unsigned int)(*((*str)++) - '0');
100008bc:	eb00 0080 	add.w	r0, r0, r0, lsl #2
100008c0:	1c53      	adds	r3, r2, #1
100008c2:	600b      	str	r3, [r1, #0]
100008c4:	7813      	ldrb	r3, [r2, #0]
100008c6:	eb03 0040 	add.w	r0, r3, r0, lsl #1
100008ca:	3830      	subs	r0, #48	; 0x30
  while (_is_digit(**str)) {
100008cc:	680a      	ldr	r2, [r1, #0]
100008ce:	7813      	ldrb	r3, [r2, #0]
  return (ch >= '0') && (ch <= '9');
100008d0:	3b30      	subs	r3, #48	; 0x30
100008d2:	b2db      	uxtb	r3, r3
  while (_is_digit(**str)) {
100008d4:	2b09      	cmp	r3, #9
100008d6:	d9f1      	bls.n	100008bc <_atoi+0x6>
  }
  return i;
}
100008d8:	4770      	bx	lr

100008da <_out_rev>:


// output the specified string in reverse, taking care of any zero-padding
static size_t _out_rev(out_fct_type out, char* buffer, size_t idx, size_t maxlen, const char* buf, size_t len, unsigned int width, unsigned int flags)
{
100008da:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
100008de:	b083      	sub	sp, #12
100008e0:	4605      	mov	r5, r0
100008e2:	460e      	mov	r6, r1
100008e4:	4693      	mov	fp, r2
100008e6:	461f      	mov	r7, r3
100008e8:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
100008ec:	9c0d      	ldr	r4, [sp, #52]	; 0x34
100008ee:	f8dd 9038 	ldr.w	r9, [sp, #56]	; 0x38
  const size_t start_idx = idx;

  // pad spaces up to given width
  if (!(flags & FLAGS_LEFT) && !(flags & FLAGS_ZEROPAD)) {
100008f2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
100008f4:	f013 0f03 	tst.w	r3, #3
100008f8:	d119      	bne.n	1000092e <_out_rev+0x54>
    for (size_t i = len; i < width; i++) {
100008fa:	46a0      	mov	r8, r4
100008fc:	9201      	str	r2, [sp, #4]
100008fe:	45c8      	cmp	r8, r9
10000900:	d209      	bcs.n	10000916 <_out_rev+0x3c>
      out(' ', buffer, idx++, maxlen);
10000902:	f102 0b01 	add.w	fp, r2, #1
10000906:	463b      	mov	r3, r7
10000908:	4631      	mov	r1, r6
1000090a:	2020      	movs	r0, #32
1000090c:	47a8      	blx	r5
    for (size_t i = len; i < width; i++) {
1000090e:	f108 0801 	add.w	r8, r8, #1
      out(' ', buffer, idx++, maxlen);
10000912:	465a      	mov	r2, fp
10000914:	e7f3      	b.n	100008fe <_out_rev+0x24>
10000916:	f8dd b004 	ldr.w	fp, [sp, #4]
1000091a:	e008      	b.n	1000092e <_out_rev+0x54>
    }
  }

  // reverse string
  while (len) {
    out(buf[--len], buffer, idx++, maxlen);
1000091c:	3c01      	subs	r4, #1
1000091e:	f102 0801 	add.w	r8, r2, #1
10000922:	463b      	mov	r3, r7
10000924:	4631      	mov	r1, r6
10000926:	f81a 0004 	ldrb.w	r0, [sl, r4]
1000092a:	47a8      	blx	r5
1000092c:	4642      	mov	r2, r8
  while (len) {
1000092e:	2c00      	cmp	r4, #0
10000930:	d1f4      	bne.n	1000091c <_out_rev+0x42>
  }

  // append pad spaces up to given width
  if (flags & FLAGS_LEFT) {
10000932:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
10000934:	f013 0f02 	tst.w	r3, #2
10000938:	d103      	bne.n	10000942 <_out_rev+0x68>
      out(' ', buffer, idx++, maxlen);
    }
  }

  return idx;
}
1000093a:	4610      	mov	r0, r2
1000093c:	b003      	add	sp, #12
1000093e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    while (idx - start_idx < width) {
10000942:	eba2 030b 	sub.w	r3, r2, fp
10000946:	454b      	cmp	r3, r9
10000948:	d2f7      	bcs.n	1000093a <_out_rev+0x60>
      out(' ', buffer, idx++, maxlen);
1000094a:	1c54      	adds	r4, r2, #1
1000094c:	463b      	mov	r3, r7
1000094e:	4631      	mov	r1, r6
10000950:	2020      	movs	r0, #32
10000952:	47a8      	blx	r5
10000954:	4622      	mov	r2, r4
10000956:	e7f4      	b.n	10000942 <_out_rev+0x68>

10000958 <_ntoa_format>:


// internal itoa format
static size_t _ntoa_format(out_fct_type out, char* buffer, size_t idx, size_t maxlen, char* buf, size_t len, bool negative, unsigned int base, unsigned int prec, unsigned int width, unsigned int flags)
{
10000958:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
1000095c:	b085      	sub	sp, #20
1000095e:	9d0c      	ldr	r5, [sp, #48]	; 0x30
10000960:	9c0d      	ldr	r4, [sp, #52]	; 0x34
10000962:	f89d 9038 	ldrb.w	r9, [sp, #56]	; 0x38
10000966:	f8dd 803c 	ldr.w	r8, [sp, #60]	; 0x3c
1000096a:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
1000096e:	9f11      	ldr	r7, [sp, #68]	; 0x44
10000970:	9e12      	ldr	r6, [sp, #72]	; 0x48
  // pad leading zeros
  if (!(flags & FLAGS_LEFT)) {
10000972:	f016 0f02 	tst.w	r6, #2
10000976:	d121      	bne.n	100009bc <_ntoa_format+0x64>
    if (width && (flags & FLAGS_ZEROPAD) && (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
10000978:	b17f      	cbz	r7, 1000099a <_ntoa_format+0x42>
1000097a:	f016 0f01 	tst.w	r6, #1
1000097e:	d00c      	beq.n	1000099a <_ntoa_format+0x42>
10000980:	f1b9 0f00 	cmp.w	r9, #0
10000984:	d102      	bne.n	1000098c <_ntoa_format+0x34>
10000986:	f016 0f0c 	tst.w	r6, #12
1000098a:	d006      	beq.n	1000099a <_ntoa_format+0x42>
      width--;
1000098c:	3f01      	subs	r7, #1
1000098e:	e004      	b.n	1000099a <_ntoa_format+0x42>
    }
    while ((len < prec) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
      buf[len++] = '0';
10000990:	f04f 0c30 	mov.w	ip, #48	; 0x30
10000994:	f805 c004 	strb.w	ip, [r5, r4]
10000998:	3401      	adds	r4, #1
    while ((len < prec) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
1000099a:	4574      	cmp	r4, lr
1000099c:	d201      	bcs.n	100009a2 <_ntoa_format+0x4a>
1000099e:	2c1f      	cmp	r4, #31
100009a0:	d9f6      	bls.n	10000990 <_ntoa_format+0x38>
    }
    while ((flags & FLAGS_ZEROPAD) && (len < width) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
100009a2:	f016 0f01 	tst.w	r6, #1
100009a6:	d009      	beq.n	100009bc <_ntoa_format+0x64>
100009a8:	42bc      	cmp	r4, r7
100009aa:	d207      	bcs.n	100009bc <_ntoa_format+0x64>
100009ac:	2c1f      	cmp	r4, #31
100009ae:	d805      	bhi.n	100009bc <_ntoa_format+0x64>
      buf[len++] = '0';
100009b0:	f04f 0c30 	mov.w	ip, #48	; 0x30
100009b4:	f805 c004 	strb.w	ip, [r5, r4]
100009b8:	3401      	adds	r4, #1
100009ba:	e7f2      	b.n	100009a2 <_ntoa_format+0x4a>
    }
  }

  // handle hash
  if (flags & FLAGS_HASH) {
100009bc:	f016 0f10 	tst.w	r6, #16
100009c0:	d017      	beq.n	100009f2 <_ntoa_format+0x9a>
    if (!(flags & FLAGS_PRECISION) && len && ((len == prec) || (len == width))) {
100009c2:	f416 6f80 	tst.w	r6, #1024	; 0x400
100009c6:	d104      	bne.n	100009d2 <_ntoa_format+0x7a>
100009c8:	b11c      	cbz	r4, 100009d2 <_ntoa_format+0x7a>
100009ca:	4574      	cmp	r4, lr
100009cc:	d024      	beq.n	10000a18 <_ntoa_format+0xc0>
100009ce:	42bc      	cmp	r4, r7
100009d0:	d022      	beq.n	10000a18 <_ntoa_format+0xc0>
      len--;
      if (len && (base == 16U)) {
        len--;
      }
    }
    if ((base == 16U) && !(flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
100009d2:	f1b8 0f10 	cmp.w	r8, #16
100009d6:	d02b      	beq.n	10000a30 <_ntoa_format+0xd8>
      buf[len++] = 'x';
    }
    else if ((base == 16U) && (flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
100009d8:	f1b8 0f10 	cmp.w	r8, #16
100009dc:	d033      	beq.n	10000a46 <_ntoa_format+0xee>
      buf[len++] = 'X';
    }
    else if ((base == 2U) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
100009de:	f1b8 0f02 	cmp.w	r8, #2
100009e2:	d03b      	beq.n	10000a5c <_ntoa_format+0x104>
      buf[len++] = 'b';
    }
    if (len < PRINTF_NTOA_BUFFER_SIZE) {
100009e4:	2c1f      	cmp	r4, #31
100009e6:	d804      	bhi.n	100009f2 <_ntoa_format+0x9a>
      buf[len++] = '0';
100009e8:	f04f 0c30 	mov.w	ip, #48	; 0x30
100009ec:	f805 c004 	strb.w	ip, [r5, r4]
100009f0:	3401      	adds	r4, #1
    }
  }

  if (len < PRINTF_NTOA_BUFFER_SIZE) {
100009f2:	2c1f      	cmp	r4, #31
100009f4:	d807      	bhi.n	10000a06 <_ntoa_format+0xae>
    if (negative) {
100009f6:	f1b9 0f00 	cmp.w	r9, #0
100009fa:	d037      	beq.n	10000a6c <_ntoa_format+0x114>
      buf[len++] = '-';
100009fc:	f04f 0c2d 	mov.w	ip, #45	; 0x2d
10000a00:	f805 c004 	strb.w	ip, [r5, r4]
10000a04:	3401      	adds	r4, #1
    else if (flags & FLAGS_SPACE) {
      buf[len++] = ' ';
    }
  }

  return _out_rev(out, buffer, idx, maxlen, buf, len, width, flags);
10000a06:	9603      	str	r6, [sp, #12]
10000a08:	9702      	str	r7, [sp, #8]
10000a0a:	9401      	str	r4, [sp, #4]
10000a0c:	9500      	str	r5, [sp, #0]
10000a0e:	f7ff ff64 	bl	100008da <_out_rev>
}
10000a12:	b005      	add	sp, #20
10000a14:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
      if (len && (base == 16U)) {
10000a18:	f1b4 0c01 	subs.w	ip, r4, #1
10000a1c:	d006      	beq.n	10000a2c <_ntoa_format+0xd4>
10000a1e:	f1b8 0f10 	cmp.w	r8, #16
10000a22:	d001      	beq.n	10000a28 <_ntoa_format+0xd0>
      len--;
10000a24:	4664      	mov	r4, ip
10000a26:	e7d4      	b.n	100009d2 <_ntoa_format+0x7a>
        len--;
10000a28:	3c02      	subs	r4, #2
10000a2a:	e7d2      	b.n	100009d2 <_ntoa_format+0x7a>
      len--;
10000a2c:	4664      	mov	r4, ip
10000a2e:	e7d0      	b.n	100009d2 <_ntoa_format+0x7a>
    if ((base == 16U) && !(flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
10000a30:	f016 0f20 	tst.w	r6, #32
10000a34:	d1d0      	bne.n	100009d8 <_ntoa_format+0x80>
10000a36:	2c1f      	cmp	r4, #31
10000a38:	d8ce      	bhi.n	100009d8 <_ntoa_format+0x80>
      buf[len++] = 'x';
10000a3a:	f04f 0c78 	mov.w	ip, #120	; 0x78
10000a3e:	f805 c004 	strb.w	ip, [r5, r4]
10000a42:	3401      	adds	r4, #1
10000a44:	e7ce      	b.n	100009e4 <_ntoa_format+0x8c>
    else if ((base == 16U) && (flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
10000a46:	f016 0f20 	tst.w	r6, #32
10000a4a:	d0c8      	beq.n	100009de <_ntoa_format+0x86>
10000a4c:	2c1f      	cmp	r4, #31
10000a4e:	d8c6      	bhi.n	100009de <_ntoa_format+0x86>
      buf[len++] = 'X';
10000a50:	f04f 0c58 	mov.w	ip, #88	; 0x58
10000a54:	f805 c004 	strb.w	ip, [r5, r4]
10000a58:	3401      	adds	r4, #1
10000a5a:	e7c3      	b.n	100009e4 <_ntoa_format+0x8c>
    else if ((base == 2U) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
10000a5c:	2c1f      	cmp	r4, #31
10000a5e:	d8c1      	bhi.n	100009e4 <_ntoa_format+0x8c>
      buf[len++] = 'b';
10000a60:	f04f 0c62 	mov.w	ip, #98	; 0x62
10000a64:	f805 c004 	strb.w	ip, [r5, r4]
10000a68:	3401      	adds	r4, #1
10000a6a:	e7bb      	b.n	100009e4 <_ntoa_format+0x8c>
    else if (flags & FLAGS_PLUS) {
10000a6c:	f016 0f04 	tst.w	r6, #4
10000a70:	d005      	beq.n	10000a7e <_ntoa_format+0x126>
      buf[len++] = '+';  // ignore the space if the '+' exists
10000a72:	f04f 0c2b 	mov.w	ip, #43	; 0x2b
10000a76:	f805 c004 	strb.w	ip, [r5, r4]
10000a7a:	3401      	adds	r4, #1
10000a7c:	e7c3      	b.n	10000a06 <_ntoa_format+0xae>
    else if (flags & FLAGS_SPACE) {
10000a7e:	f016 0f08 	tst.w	r6, #8
10000a82:	d0c0      	beq.n	10000a06 <_ntoa_format+0xae>
      buf[len++] = ' ';
10000a84:	f04f 0c20 	mov.w	ip, #32
10000a88:	f805 c004 	strb.w	ip, [r5, r4]
10000a8c:	3401      	adds	r4, #1
10000a8e:	e7ba      	b.n	10000a06 <_ntoa_format+0xae>

10000a90 <_ntoa_long>:


// internal itoa for 'long' type
static size_t _ntoa_long(out_fct_type out, char* buffer, size_t idx, size_t maxlen, unsigned long value, bool negative, unsigned long base, unsigned int prec, unsigned int width, unsigned int flags)
{
10000a90:	b5f0      	push	{r4, r5, r6, r7, lr}
10000a92:	b091      	sub	sp, #68	; 0x44
10000a94:	9c16      	ldr	r4, [sp, #88]	; 0x58
10000a96:	9d18      	ldr	r5, [sp, #96]	; 0x60
10000a98:	9e1b      	ldr	r6, [sp, #108]	; 0x6c
  char buf[PRINTF_NTOA_BUFFER_SIZE];
  size_t len = 0U;

  // no hash for 0 values
  if (!value) {
10000a9a:	b90c      	cbnz	r4, 10000aa0 <_ntoa_long+0x10>
    flags &= ~FLAGS_HASH;
10000a9c:	f026 0610 	bic.w	r6, r6, #16
  }

  // write if precision != 0 and value is != 0
  if (!(flags & FLAGS_PRECISION) || value) {
10000aa0:	f416 6e80 	ands.w	lr, r6, #1024	; 0x400
10000aa4:	d016      	beq.n	10000ad4 <_ntoa_long+0x44>
10000aa6:	b364      	cbz	r4, 10000b02 <_ntoa_long+0x72>
10000aa8:	f04f 0e00 	mov.w	lr, #0
10000aac:	e012      	b.n	10000ad4 <_ntoa_long+0x44>
    do {
      const char digit = (char)(value % base);
      buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
10000aae:	f10c 0c30 	add.w	ip, ip, #48	; 0x30
10000ab2:	fa5f fc8c 	uxtb.w	ip, ip
10000ab6:	f10e 0701 	add.w	r7, lr, #1
10000aba:	f10e 0e40 	add.w	lr, lr, #64	; 0x40
10000abe:	44ee      	add	lr, sp
10000ac0:	f80e cc20 	strb.w	ip, [lr, #-32]
      value /= base;
10000ac4:	fbb4 fcf5 	udiv	ip, r4, r5
    } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
10000ac8:	42ac      	cmp	r4, r5
10000aca:	d31b      	bcc.n	10000b04 <_ntoa_long+0x74>
10000acc:	2f1f      	cmp	r7, #31
10000ace:	d819      	bhi.n	10000b04 <_ntoa_long+0x74>
      buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
10000ad0:	46be      	mov	lr, r7
      value /= base;
10000ad2:	4664      	mov	r4, ip
      const char digit = (char)(value % base);
10000ad4:	fbb4 fcf5 	udiv	ip, r4, r5
10000ad8:	fb05 4c1c 	mls	ip, r5, ip, r4
10000adc:	fa5f fc8c 	uxtb.w	ip, ip
      buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
10000ae0:	f1bc 0f09 	cmp.w	ip, #9
10000ae4:	d9e3      	bls.n	10000aae <_ntoa_long+0x1e>
10000ae6:	f016 0f20 	tst.w	r6, #32
10000aea:	d008      	beq.n	10000afe <_ntoa_long+0x6e>
10000aec:	2741      	movs	r7, #65	; 0x41
10000aee:	44bc      	add	ip, r7
10000af0:	fa5f fc8c 	uxtb.w	ip, ip
10000af4:	f1ac 0c0a 	sub.w	ip, ip, #10
10000af8:	fa5f fc8c 	uxtb.w	ip, ip
10000afc:	e7db      	b.n	10000ab6 <_ntoa_long+0x26>
10000afe:	2761      	movs	r7, #97	; 0x61
10000b00:	e7f5      	b.n	10000aee <_ntoa_long+0x5e>
  size_t len = 0U;
10000b02:	4627      	mov	r7, r4
  }

  return _ntoa_format(out, buffer, idx, maxlen, buf, len, negative, (unsigned int)base, prec, width, flags);
10000b04:	9606      	str	r6, [sp, #24]
10000b06:	9c1a      	ldr	r4, [sp, #104]	; 0x68
10000b08:	9405      	str	r4, [sp, #20]
10000b0a:	9c19      	ldr	r4, [sp, #100]	; 0x64
10000b0c:	9404      	str	r4, [sp, #16]
10000b0e:	9503      	str	r5, [sp, #12]
10000b10:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
10000b14:	9402      	str	r4, [sp, #8]
10000b16:	9701      	str	r7, [sp, #4]
10000b18:	ac08      	add	r4, sp, #32
10000b1a:	9400      	str	r4, [sp, #0]
10000b1c:	f7ff ff1c 	bl	10000958 <_ntoa_format>
}
10000b20:	b011      	add	sp, #68	; 0x44
10000b22:	bdf0      	pop	{r4, r5, r6, r7, pc}

10000b24 <_ntoa_long_long>:


// internal itoa for 'long long' type
#if defined(PRINTF_SUPPORT_LONG_LONG)
static size_t _ntoa_long_long(out_fct_type out, char* buffer, size_t idx, size_t maxlen, unsigned long long value, bool negative, unsigned long long base, unsigned int prec, unsigned int width, unsigned int flags)
{
10000b24:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10000b28:	b095      	sub	sp, #84	; 0x54
10000b2a:	9009      	str	r0, [sp, #36]	; 0x24
10000b2c:	910a      	str	r1, [sp, #40]	; 0x28
10000b2e:	920b      	str	r2, [sp, #44]	; 0x2c
10000b30:	469b      	mov	fp, r3
10000b32:	9d1e      	ldr	r5, [sp, #120]	; 0x78
10000b34:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
10000b36:	9f22      	ldr	r7, [sp, #136]	; 0x88
10000b38:	f8dd 808c 	ldr.w	r8, [sp, #140]	; 0x8c
10000b3c:	f8dd a098 	ldr.w	sl, [sp, #152]	; 0x98
  char buf[PRINTF_NTOA_BUFFER_SIZE];
  size_t len = 0U;

  // no hash for 0 values
  if (!value) {
10000b40:	ea55 0306 	orrs.w	r3, r5, r6
10000b44:	d101      	bne.n	10000b4a <_ntoa_long_long+0x26>
    flags &= ~FLAGS_HASH;
10000b46:	f02a 0a10 	bic.w	sl, sl, #16
  }

  // write if precision != 0 and value is != 0
  if (!(flags & FLAGS_PRECISION) || value) {
10000b4a:	f41a 6480 	ands.w	r4, sl, #1024	; 0x400
10000b4e:	d01f      	beq.n	10000b90 <_ntoa_long_long+0x6c>
10000b50:	ea55 0306 	orrs.w	r3, r5, r6
10000b54:	d030      	beq.n	10000bb8 <_ntoa_long_long+0x94>
10000b56:	2400      	movs	r4, #0
10000b58:	e01a      	b.n	10000b90 <_ntoa_long_long+0x6c>
    do {
      const char digit = (char)(value % base);
      buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
10000b5a:	f103 0230 	add.w	r2, r3, #48	; 0x30
10000b5e:	b2d2      	uxtb	r2, r2
10000b60:	f104 0901 	add.w	r9, r4, #1
10000b64:	f104 0350 	add.w	r3, r4, #80	; 0x50
10000b68:	eb0d 0403 	add.w	r4, sp, r3
10000b6c:	f804 2c20 	strb.w	r2, [r4, #-32]
      value /= base;
10000b70:	463a      	mov	r2, r7
10000b72:	4643      	mov	r3, r8
10000b74:	4628      	mov	r0, r5
10000b76:	4631      	mov	r1, r6
10000b78:	f003 fbfc 	bl	10004374 <__aeabi_uldivmod>
    } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
10000b7c:	42bd      	cmp	r5, r7
10000b7e:	eb76 0308 	sbcs.w	r3, r6, r8
10000b82:	d31b      	bcc.n	10000bbc <_ntoa_long_long+0x98>
10000b84:	f1b9 0f1f 	cmp.w	r9, #31
10000b88:	d818      	bhi.n	10000bbc <_ntoa_long_long+0x98>
      buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
10000b8a:	464c      	mov	r4, r9
      value /= base;
10000b8c:	4605      	mov	r5, r0
10000b8e:	460e      	mov	r6, r1
      const char digit = (char)(value % base);
10000b90:	463a      	mov	r2, r7
10000b92:	4643      	mov	r3, r8
10000b94:	4628      	mov	r0, r5
10000b96:	4631      	mov	r1, r6
10000b98:	f003 fbec 	bl	10004374 <__aeabi_uldivmod>
10000b9c:	b2d3      	uxtb	r3, r2
      buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
10000b9e:	2b09      	cmp	r3, #9
10000ba0:	d9db      	bls.n	10000b5a <_ntoa_long_long+0x36>
10000ba2:	f01a 0f20 	tst.w	sl, #32
10000ba6:	d005      	beq.n	10000bb4 <_ntoa_long_long+0x90>
10000ba8:	2241      	movs	r2, #65	; 0x41
10000baa:	441a      	add	r2, r3
10000bac:	b2d2      	uxtb	r2, r2
10000bae:	3a0a      	subs	r2, #10
10000bb0:	b2d2      	uxtb	r2, r2
10000bb2:	e7d5      	b.n	10000b60 <_ntoa_long_long+0x3c>
10000bb4:	2261      	movs	r2, #97	; 0x61
10000bb6:	e7f8      	b.n	10000baa <_ntoa_long_long+0x86>
  size_t len = 0U;
10000bb8:	f04f 0900 	mov.w	r9, #0
  }

  return _ntoa_format(out, buffer, idx, maxlen, buf, len, negative, (unsigned int)base, prec, width, flags);
10000bbc:	f8cd a018 	str.w	sl, [sp, #24]
10000bc0:	9b25      	ldr	r3, [sp, #148]	; 0x94
10000bc2:	9305      	str	r3, [sp, #20]
10000bc4:	9b24      	ldr	r3, [sp, #144]	; 0x90
10000bc6:	9304      	str	r3, [sp, #16]
10000bc8:	9703      	str	r7, [sp, #12]
10000bca:	f89d 3080 	ldrb.w	r3, [sp, #128]	; 0x80
10000bce:	9302      	str	r3, [sp, #8]
10000bd0:	f8cd 9004 	str.w	r9, [sp, #4]
10000bd4:	ab0c      	add	r3, sp, #48	; 0x30
10000bd6:	9300      	str	r3, [sp, #0]
10000bd8:	465b      	mov	r3, fp
10000bda:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
10000bdc:	990a      	ldr	r1, [sp, #40]	; 0x28
10000bde:	9809      	ldr	r0, [sp, #36]	; 0x24
10000be0:	f7ff feba 	bl	10000958 <_ntoa_format>
}
10000be4:	b015      	add	sp, #84	; 0x54
10000be6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10000bea:	0000      	movs	r0, r0
10000bec:	0000      	movs	r0, r0
	...

10000bf0 <_etoa>:


#if defined(PRINTF_SUPPORT_EXPONENTIAL)
// internal ftoa variant for exponential floating-point type, contributed by Martijn Jasperse <m.jasperse@gmail.com>
static size_t _etoa(out_fct_type out, char* buffer, size_t idx, size_t maxlen, double value, unsigned int prec, unsigned int width, unsigned int flags)
{
10000bf0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10000bf4:	ed2d 8b02 	vpush	{d8}
10000bf8:	b091      	sub	sp, #68	; 0x44
10000bfa:	4682      	mov	sl, r0
10000bfc:	460c      	mov	r4, r1
10000bfe:	4693      	mov	fp, r2
10000c00:	461d      	mov	r5, r3
  // check for NaN and special values
  if ((value != value) || (value > DBL_MAX) || (value < -DBL_MAX)) {
10000c02:	e9dd 231c 	ldrd	r2, r3, [sp, #112]	; 0x70
10000c06:	4610      	mov	r0, r2
10000c08:	4619      	mov	r1, r3
10000c0a:	f003 fb39 	bl	10004280 <__aeabi_dcmpeq>
10000c0e:	2800      	cmp	r0, #0
10000c10:	f000 8107 	beq.w	10000e22 <_etoa+0x232>
10000c14:	f04f 32ff 	mov.w	r2, #4294967295
10000c18:	4bb1      	ldr	r3, [pc, #708]	; (10000ee0 <_etoa+0x2f0>)
10000c1a:	e9dd 011c 	ldrd	r0, r1, [sp, #112]	; 0x70
10000c1e:	f003 fb57 	bl	100042d0 <__aeabi_dcmpgt>
10000c22:	2800      	cmp	r0, #0
10000c24:	f040 80fd 	bne.w	10000e22 <_etoa+0x232>
10000c28:	f04f 32ff 	mov.w	r2, #4294967295
10000c2c:	f46f 1380 	mvn.w	r3, #1048576	; 0x100000
10000c30:	e9dd 011c 	ldrd	r0, r1, [sp, #112]	; 0x70
10000c34:	f003 fb2e 	bl	10004294 <__aeabi_dcmplt>
10000c38:	2800      	cmp	r0, #0
10000c3a:	f040 80f2 	bne.w	10000e22 <_etoa+0x232>
    return _ftoa(out, buffer, idx, maxlen, value, prec, width, flags);
  }

  // determine the sign
  const bool negative = value < 0;
  if (negative) {
10000c3e:	2200      	movs	r2, #0
10000c40:	2300      	movs	r3, #0
10000c42:	e9dd 011c 	ldrd	r0, r1, [sp, #112]	; 0x70
10000c46:	f003 fb25 	bl	10004294 <__aeabi_dcmplt>
10000c4a:	2800      	cmp	r0, #0
10000c4c:	f040 80fe 	bne.w	10000e4c <_etoa+0x25c>
10000c50:	ed9d 7b1c 	vldr	d7, [sp, #112]	; 0x70
10000c54:	ed8d 7b06 	vstr	d7, [sp, #24]
    value = -value;
  }

  // default precision
  if (!(flags & FLAGS_PRECISION)) {
10000c58:	9b20      	ldr	r3, [sp, #128]	; 0x80
10000c5a:	f413 6380 	ands.w	r3, r3, #1024	; 0x400
10000c5e:	930f      	str	r3, [sp, #60]	; 0x3c
10000c60:	d101      	bne.n	10000c66 <_etoa+0x76>
    prec = PRINTF_DEFAULT_FLOAT_PRECISION;
10000c62:	2306      	movs	r3, #6
10000c64:	931e      	str	r3, [sp, #120]	; 0x78
    uint64_t U;
    double   F;
  } conv;

  conv.F = value;
  int exp2 = (int)((conv.U >> 52U) & 0x07FFU) - 1023;           // effectively log2
10000c66:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
10000c6a:	4602      	mov	r2, r0
10000c6c:	f3c1 500a 	ubfx	r0, r1, #20, #11
  conv.U = (conv.U & ((1ULL << 52U) - 1U)) | (1023ULL << 52U);  // drop the exponent so conv.F is now in [1,2)
10000c70:	f3c1 0313 	ubfx	r3, r1, #0, #20
10000c74:	4690      	mov	r8, r2
10000c76:	f043 597f 	orr.w	r9, r3, #1069547520	; 0x3fc00000
10000c7a:	f449 1940 	orr.w	r9, r9, #3145728	; 0x300000
  // now approximate log10 from the log2 integer part and an expansion of ln around 1.5
  int expval = (int)(0.1760912590558 + exp2 * 0.301029995663981 + (conv.F - 1.5) * 0.289529654602168);
10000c7e:	f2a0 30ff 	subw	r0, r0, #1023	; 0x3ff
10000c82:	f003 f82b 	bl	10003cdc <__aeabi_i2d>
10000c86:	a384      	add	r3, pc, #528	; (adr r3, 10000e98 <_etoa+0x2a8>)
10000c88:	e9d3 2300 	ldrd	r2, r3, [r3]
10000c8c:	f003 f890 	bl	10003db0 <__aeabi_dmul>
10000c90:	a383      	add	r3, pc, #524	; (adr r3, 10000ea0 <_etoa+0x2b0>)
10000c92:	e9d3 2300 	ldrd	r2, r3, [r3]
10000c96:	f002 fed5 	bl	10003a44 <__adddf3>
10000c9a:	4606      	mov	r6, r0
10000c9c:	460f      	mov	r7, r1
10000c9e:	2200      	movs	r2, #0
10000ca0:	4b90      	ldr	r3, [pc, #576]	; (10000ee4 <_etoa+0x2f4>)
10000ca2:	4640      	mov	r0, r8
10000ca4:	4649      	mov	r1, r9
10000ca6:	f002 fecb 	bl	10003a40 <__aeabi_dsub>
10000caa:	a37f      	add	r3, pc, #508	; (adr r3, 10000ea8 <_etoa+0x2b8>)
10000cac:	e9d3 2300 	ldrd	r2, r3, [r3]
10000cb0:	f003 f87e 	bl	10003db0 <__aeabi_dmul>
10000cb4:	4602      	mov	r2, r0
10000cb6:	460b      	mov	r3, r1
10000cb8:	4630      	mov	r0, r6
10000cba:	4639      	mov	r1, r7
10000cbc:	f002 fec2 	bl	10003a44 <__adddf3>
10000cc0:	f003 fb10 	bl	100042e4 <__aeabi_d2iz>
10000cc4:	4606      	mov	r6, r0
  // now we want to compute 10^expval but we want to be sure it won't overflow
  exp2 = (int)(expval * 3.321928094887362 + 0.5);
10000cc6:	f003 f809 	bl	10003cdc <__aeabi_i2d>
10000cca:	4680      	mov	r8, r0
10000ccc:	4689      	mov	r9, r1
10000cce:	a378      	add	r3, pc, #480	; (adr r3, 10000eb0 <_etoa+0x2c0>)
10000cd0:	e9d3 2300 	ldrd	r2, r3, [r3]
10000cd4:	f003 f86c 	bl	10003db0 <__aeabi_dmul>
10000cd8:	2200      	movs	r2, #0
10000cda:	4b83      	ldr	r3, [pc, #524]	; (10000ee8 <_etoa+0x2f8>)
10000cdc:	f002 feb2 	bl	10003a44 <__adddf3>
10000ce0:	f003 fb00 	bl	100042e4 <__aeabi_d2iz>
10000ce4:	4607      	mov	r7, r0
  const double z  = expval * 2.302585092994046 - exp2 * 0.6931471805599453;
10000ce6:	a374      	add	r3, pc, #464	; (adr r3, 10000eb8 <_etoa+0x2c8>)
10000ce8:	e9d3 2300 	ldrd	r2, r3, [r3]
10000cec:	4640      	mov	r0, r8
10000cee:	4649      	mov	r1, r9
10000cf0:	f003 f85e 	bl	10003db0 <__aeabi_dmul>
10000cf4:	4680      	mov	r8, r0
10000cf6:	4689      	mov	r9, r1
10000cf8:	4638      	mov	r0, r7
10000cfa:	f002 ffef 	bl	10003cdc <__aeabi_i2d>
10000cfe:	a370      	add	r3, pc, #448	; (adr r3, 10000ec0 <_etoa+0x2d0>)
10000d00:	e9d3 2300 	ldrd	r2, r3, [r3]
10000d04:	f003 f854 	bl	10003db0 <__aeabi_dmul>
10000d08:	4602      	mov	r2, r0
10000d0a:	460b      	mov	r3, r1
10000d0c:	4640      	mov	r0, r8
10000d0e:	4649      	mov	r1, r9
10000d10:	f002 fe96 	bl	10003a40 <__aeabi_dsub>
10000d14:	4680      	mov	r8, r0
10000d16:	4689      	mov	r9, r1
  const double z2 = z * z;
10000d18:	4602      	mov	r2, r0
10000d1a:	460b      	mov	r3, r1
10000d1c:	f003 f848 	bl	10003db0 <__aeabi_dmul>
10000d20:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
  conv.U = (uint64_t)(exp2 + 1023) << 52U;
10000d24:	f207 37ff 	addw	r7, r7, #1023	; 0x3ff
10000d28:	2100      	movs	r1, #0
10000d2a:	2200      	movs	r2, #0
10000d2c:	e9cd 1208 	strd	r1, r2, [sp, #32]
10000d30:	053b      	lsls	r3, r7, #20
10000d32:	9309      	str	r3, [sp, #36]	; 0x24
10000d34:	2300      	movs	r3, #0
10000d36:	9308      	str	r3, [sp, #32]
  // compute exp(z) using continued fractions, see https://en.wikipedia.org/wiki/Exponential_function#Continued_fractions_for_ex
  conv.F *= 1 + 2 * z / (2 - z + (z2 / (6 + (z2 / (10 + z2 / 14)))));
10000d38:	4642      	mov	r2, r8
10000d3a:	464b      	mov	r3, r9
10000d3c:	4640      	mov	r0, r8
10000d3e:	4649      	mov	r1, r9
10000d40:	f002 fe80 	bl	10003a44 <__adddf3>
10000d44:	e9cd 010c 	strd	r0, r1, [sp, #48]	; 0x30
10000d48:	4642      	mov	r2, r8
10000d4a:	464b      	mov	r3, r9
10000d4c:	2000      	movs	r0, #0
10000d4e:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
10000d52:	f002 fe75 	bl	10003a40 <__aeabi_dsub>
10000d56:	4680      	mov	r8, r0
10000d58:	4689      	mov	r9, r1
10000d5a:	2200      	movs	r2, #0
10000d5c:	4b63      	ldr	r3, [pc, #396]	; (10000eec <_etoa+0x2fc>)
10000d5e:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
10000d62:	f003 f94f 	bl	10004004 <__aeabi_ddiv>
10000d66:	2200      	movs	r2, #0
10000d68:	4b61      	ldr	r3, [pc, #388]	; (10000ef0 <_etoa+0x300>)
10000d6a:	f002 fe6b 	bl	10003a44 <__adddf3>
10000d6e:	4602      	mov	r2, r0
10000d70:	460b      	mov	r3, r1
10000d72:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
10000d76:	f003 f945 	bl	10004004 <__aeabi_ddiv>
10000d7a:	2200      	movs	r2, #0
10000d7c:	4b5d      	ldr	r3, [pc, #372]	; (10000ef4 <_etoa+0x304>)
10000d7e:	f002 fe61 	bl	10003a44 <__adddf3>
10000d82:	4602      	mov	r2, r0
10000d84:	460b      	mov	r3, r1
10000d86:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
10000d8a:	f003 f93b 	bl	10004004 <__aeabi_ddiv>
10000d8e:	4602      	mov	r2, r0
10000d90:	460b      	mov	r3, r1
10000d92:	4640      	mov	r0, r8
10000d94:	4649      	mov	r1, r9
10000d96:	f002 fe55 	bl	10003a44 <__adddf3>
10000d9a:	4602      	mov	r2, r0
10000d9c:	460b      	mov	r3, r1
10000d9e:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
10000da2:	f003 f92f 	bl	10004004 <__aeabi_ddiv>
10000da6:	2200      	movs	r2, #0
10000da8:	4b53      	ldr	r3, [pc, #332]	; (10000ef8 <_etoa+0x308>)
10000daa:	f002 fe4b 	bl	10003a44 <__adddf3>
10000dae:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
10000db2:	f002 fffd 	bl	10003db0 <__aeabi_dmul>
10000db6:	4680      	mov	r8, r0
10000db8:	4689      	mov	r9, r1
10000dba:	ec49 8b18 	vmov	d8, r8, r9
  // correct for rounding errors
  if (value < conv.F) {
10000dbe:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
10000dc2:	f003 fa85 	bl	100042d0 <__aeabi_dcmpgt>
10000dc6:	b140      	cbz	r0, 10000dda <_etoa+0x1ea>
    expval--;
10000dc8:	3e01      	subs	r6, #1
    conv.F /= 10;
10000dca:	2200      	movs	r2, #0
10000dcc:	4b48      	ldr	r3, [pc, #288]	; (10000ef0 <_etoa+0x300>)
10000dce:	4640      	mov	r0, r8
10000dd0:	4649      	mov	r1, r9
10000dd2:	f003 f917 	bl	10004004 <__aeabi_ddiv>
10000dd6:	ec41 0b18 	vmov	d8, r0, r1
  }

  // the exponent format is "%+03d" and largest value is "307", so set aside 4-5 characters
  unsigned int minwidth = ((expval < 100) && (expval > -100)) ? 4U : 5U;
10000dda:	f106 0363 	add.w	r3, r6, #99	; 0x63
10000dde:	2bc6      	cmp	r3, #198	; 0xc6
10000de0:	d83f      	bhi.n	10000e62 <_etoa+0x272>
10000de2:	2704      	movs	r7, #4

  // in "%g" mode, "prec" is the number of *significant figures* not decimals
  if (flags & FLAGS_ADAPT_EXP) {
10000de4:	9b20      	ldr	r3, [sp, #128]	; 0x80
10000de6:	f413 6f00 	tst.w	r3, #2048	; 0x800
10000dea:	d044      	beq.n	10000e76 <_etoa+0x286>
    // do we want to fall-back to "%f" mode?
    if ((value >= 1e-4) && (value < 1e6)) {
10000dec:	a336      	add	r3, pc, #216	; (adr r3, 10000ec8 <_etoa+0x2d8>)
10000dee:	e9d3 2300 	ldrd	r2, r3, [r3]
10000df2:	e9dd 8906 	ldrd	r8, r9, [sp, #24]
10000df6:	4640      	mov	r0, r8
10000df8:	4649      	mov	r1, r9
10000dfa:	f003 fa5f 	bl	100042bc <__aeabi_dcmpge>
10000dfe:	2800      	cmp	r0, #0
10000e00:	d03f      	beq.n	10000e82 <_etoa+0x292>
10000e02:	a333      	add	r3, pc, #204	; (adr r3, 10000ed0 <_etoa+0x2e0>)
10000e04:	e9d3 2300 	ldrd	r2, r3, [r3]
10000e08:	4640      	mov	r0, r8
10000e0a:	4649      	mov	r1, r9
10000e0c:	f003 fa42 	bl	10004294 <__aeabi_dcmplt>
10000e10:	2800      	cmp	r0, #0
10000e12:	d036      	beq.n	10000e82 <_etoa+0x292>
      if ((int)prec > expval) {
10000e14:	9b1e      	ldr	r3, [sp, #120]	; 0x78
10000e16:	42b3      	cmp	r3, r6
10000e18:	dd25      	ble.n	10000e66 <_etoa+0x276>
        prec = (unsigned)((int)prec - expval - 1);
10000e1a:	1b9e      	subs	r6, r3, r6
10000e1c:	1e73      	subs	r3, r6, #1
10000e1e:	931e      	str	r3, [sp, #120]	; 0x78
10000e20:	e023      	b.n	10000e6a <_etoa+0x27a>
    return _ftoa(out, buffer, idx, maxlen, value, prec, width, flags);
10000e22:	9b20      	ldr	r3, [sp, #128]	; 0x80
10000e24:	9304      	str	r3, [sp, #16]
10000e26:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
10000e28:	9303      	str	r3, [sp, #12]
10000e2a:	9b1e      	ldr	r3, [sp, #120]	; 0x78
10000e2c:	9302      	str	r3, [sp, #8]
10000e2e:	ed9d 7b1c 	vldr	d7, [sp, #112]	; 0x70
10000e32:	ed8d 7b00 	vstr	d7, [sp]
10000e36:	462b      	mov	r3, r5
10000e38:	465a      	mov	r2, fp
10000e3a:	4621      	mov	r1, r4
10000e3c:	4650      	mov	r0, sl
10000e3e:	f000 f8cf 	bl	10000fe0 <_ftoa>
    if (flags & FLAGS_LEFT) {
      while (idx - start_idx < width) out(' ', buffer, idx++, maxlen);
    }
  }
  return idx;
}
10000e42:	b011      	add	sp, #68	; 0x44
10000e44:	ecbd 8b02 	vpop	{d8}
10000e48:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    value = -value;
10000e4c:	ed9f 7b22 	vldr	d7, [pc, #136]	; 10000ed8 <_etoa+0x2e8>
10000e50:	ed8d 7b06 	vstr	d7, [sp, #24]
10000e54:	9b1c      	ldr	r3, [sp, #112]	; 0x70
10000e56:	9306      	str	r3, [sp, #24]
10000e58:	9b1d      	ldr	r3, [sp, #116]	; 0x74
10000e5a:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
10000e5e:	9307      	str	r3, [sp, #28]
10000e60:	e6fa      	b.n	10000c58 <_etoa+0x68>
  unsigned int minwidth = ((expval < 100) && (expval > -100)) ? 4U : 5U;
10000e62:	2705      	movs	r7, #5
10000e64:	e7be      	b.n	10000de4 <_etoa+0x1f4>
        prec = 0;
10000e66:	2300      	movs	r3, #0
10000e68:	931e      	str	r3, [sp, #120]	; 0x78
      flags |= FLAGS_PRECISION;   // make sure _ftoa respects precision
10000e6a:	9b20      	ldr	r3, [sp, #128]	; 0x80
10000e6c:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
10000e70:	9320      	str	r3, [sp, #128]	; 0x80
      minwidth = 0U;
10000e72:	2700      	movs	r7, #0
      expval   = 0;
10000e74:	463e      	mov	r6, r7
  if (width > minwidth) {
10000e76:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
10000e78:	429f      	cmp	r7, r3
10000e7a:	d23f      	bcs.n	10000efc <_etoa+0x30c>
    fwidth -= minwidth;
10000e7c:	eba3 0807 	sub.w	r8, r3, r7
10000e80:	e03e      	b.n	10000f00 <_etoa+0x310>
      if ((prec > 0) && (flags & FLAGS_PRECISION)) {
10000e82:	9b1e      	ldr	r3, [sp, #120]	; 0x78
10000e84:	2b00      	cmp	r3, #0
10000e86:	d0f6      	beq.n	10000e76 <_etoa+0x286>
10000e88:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
10000e8a:	2b00      	cmp	r3, #0
10000e8c:	d0f3      	beq.n	10000e76 <_etoa+0x286>
        --prec;
10000e8e:	9b1e      	ldr	r3, [sp, #120]	; 0x78
10000e90:	3b01      	subs	r3, #1
10000e92:	931e      	str	r3, [sp, #120]	; 0x78
10000e94:	e7ef      	b.n	10000e76 <_etoa+0x286>
10000e96:	bf00      	nop
10000e98:	509f79fb 			; <UNDEFINED> instruction: 0x509f79fb
10000e9c:	3fd34413 	svccc	0x00d34413
10000ea0:	8b60c8b3 	blhi	11833174 <__copy_table_end__+0x182d4e0>
10000ea4:	3fc68a28 	svccc	0x00c68a28
10000ea8:	636f4361 	cmnvs	pc, #-2080374783	; 0x84000001
10000eac:	3fd287a7 	svccc	0x00d287a7
10000eb0:	0979a371 	ldmdbeq	r9!, {r0, r4, r5, r6, r8, r9, sp, pc}^
10000eb4:	400a934f 	andmi	r9, sl, pc, asr #6
10000eb8:	bbb55516 	bllt	ed56318 <__RAM_SIZE+0xec56318>
10000ebc:	40026bb1 			; <UNDEFINED> instruction: 0x40026bb1
10000ec0:	fefa39ef 			; <UNDEFINED> instruction: 0xfefa39ef
10000ec4:	3fe62e42 	svccc	0x00e62e42
10000ec8:	eb1c432d 	bl	10711b84 <__copy_table_end__+0x70bef0>
10000ecc:	3f1a36e2 	svccc	0x001a36e2
10000ed0:	00000000 	andeq	r0, r0, r0
10000ed4:	412e8480 	smlawbmi	lr, r0, r4, r8
	...
10000ee0:	7fefffff 	svcvc	0x00efffff
10000ee4:	3ff80000 	svccc	0x00f80000
10000ee8:	3fe00000 	svccc	0x00e00000
10000eec:	402c0000 	eormi	r0, ip, r0
10000ef0:	40240000 	eormi	r0, r4, r0
10000ef4:	40180000 	andsmi	r0, r8, r0
10000ef8:	3ff00000 	svccc	0x00f00000	; IMB
    fwidth = 0U;
10000efc:	f04f 0800 	mov.w	r8, #0
  if ((flags & FLAGS_LEFT) && minwidth) {
10000f00:	9b20      	ldr	r3, [sp, #128]	; 0x80
10000f02:	f013 0902 	ands.w	r9, r3, #2
10000f06:	d002      	beq.n	10000f0e <_etoa+0x31e>
10000f08:	b10f      	cbz	r7, 10000f0e <_etoa+0x31e>
    fwidth = 0U;
10000f0a:	f04f 0800 	mov.w	r8, #0
  if (expval) {
10000f0e:	b13e      	cbz	r6, 10000f20 <_etoa+0x330>
    value /= conv.F;
10000f10:	ec53 2b18 	vmov	r2, r3, d8
10000f14:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
10000f18:	f003 f874 	bl	10004004 <__aeabi_ddiv>
10000f1c:	e9cd 0106 	strd	r0, r1, [sp, #24]
  idx = _ftoa(out, buffer, idx, maxlen, negative ? -value : value, prec, fwidth, flags & ~FLAGS_ADAPT_EXP);
10000f20:	2200      	movs	r2, #0
10000f22:	2300      	movs	r3, #0
10000f24:	e9dd 011c 	ldrd	r0, r1, [sp, #112]	; 0x70
10000f28:	f003 f9b4 	bl	10004294 <__aeabi_dcmplt>
10000f2c:	2800      	cmp	r0, #0
10000f2e:	d13d      	bne.n	10000fac <_etoa+0x3bc>
10000f30:	9b20      	ldr	r3, [sp, #128]	; 0x80
10000f32:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
10000f36:	9304      	str	r3, [sp, #16]
10000f38:	f8cd 800c 	str.w	r8, [sp, #12]
10000f3c:	9b1e      	ldr	r3, [sp, #120]	; 0x78
10000f3e:	9302      	str	r3, [sp, #8]
10000f40:	ed9d 7b06 	vldr	d7, [sp, #24]
10000f44:	ed8d 7b00 	vstr	d7, [sp]
10000f48:	462b      	mov	r3, r5
10000f4a:	465a      	mov	r2, fp
10000f4c:	4621      	mov	r1, r4
10000f4e:	4650      	mov	r0, sl
10000f50:	f000 f846 	bl	10000fe0 <_ftoa>
  if (minwidth) {
10000f54:	2f00      	cmp	r7, #0
10000f56:	f43f af74 	beq.w	10000e42 <_etoa+0x252>
    out((flags & FLAGS_UPPERCASE) ? 'E' : 'e', buffer, idx++, maxlen);
10000f5a:	9b20      	ldr	r3, [sp, #128]	; 0x80
10000f5c:	f013 0f20 	tst.w	r3, #32
10000f60:	d02c      	beq.n	10000fbc <_etoa+0x3cc>
10000f62:	f04f 0c45 	mov.w	ip, #69	; 0x45
10000f66:	f100 0801 	add.w	r8, r0, #1
10000f6a:	462b      	mov	r3, r5
10000f6c:	4602      	mov	r2, r0
10000f6e:	4621      	mov	r1, r4
10000f70:	4660      	mov	r0, ip
10000f72:	47d0      	blx	sl
    idx = _ntoa_long(out, buffer, idx, maxlen, (expval < 0) ? -expval : expval, expval < 0, 10, 0, minwidth-1, FLAGS_ZEROPAD | FLAGS_PLUS);
10000f74:	ea86 73e6 	eor.w	r3, r6, r6, asr #31
10000f78:	eba3 73e6 	sub.w	r3, r3, r6, asr #31
10000f7c:	2205      	movs	r2, #5
10000f7e:	9205      	str	r2, [sp, #20]
10000f80:	3f01      	subs	r7, #1
10000f82:	9704      	str	r7, [sp, #16]
10000f84:	2200      	movs	r2, #0
10000f86:	9203      	str	r2, [sp, #12]
10000f88:	220a      	movs	r2, #10
10000f8a:	9202      	str	r2, [sp, #8]
10000f8c:	0ff0      	lsrs	r0, r6, #31
10000f8e:	9001      	str	r0, [sp, #4]
10000f90:	9300      	str	r3, [sp, #0]
10000f92:	462b      	mov	r3, r5
10000f94:	4642      	mov	r2, r8
10000f96:	4621      	mov	r1, r4
10000f98:	4650      	mov	r0, sl
10000f9a:	f7ff fd79 	bl	10000a90 <_ntoa_long>
    if (flags & FLAGS_LEFT) {
10000f9e:	f1b9 0f00 	cmp.w	r9, #0
10000fa2:	f43f af4e 	beq.w	10000e42 <_etoa+0x252>
10000fa6:	4602      	mov	r2, r0
10000fa8:	9f1f      	ldr	r7, [sp, #124]	; 0x7c
10000faa:	e010      	b.n	10000fce <_etoa+0x3de>
  idx = _ftoa(out, buffer, idx, maxlen, negative ? -value : value, prec, fwidth, flags & ~FLAGS_ADAPT_EXP);
10000fac:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
10000fb0:	4602      	mov	r2, r0
10000fb2:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
10000fb6:	e9cd 2306 	strd	r2, r3, [sp, #24]
10000fba:	e7b9      	b.n	10000f30 <_etoa+0x340>
    out((flags & FLAGS_UPPERCASE) ? 'E' : 'e', buffer, idx++, maxlen);
10000fbc:	f04f 0c65 	mov.w	ip, #101	; 0x65
10000fc0:	e7d1      	b.n	10000f66 <_etoa+0x376>
      while (idx - start_idx < width) out(' ', buffer, idx++, maxlen);
10000fc2:	1c56      	adds	r6, r2, #1
10000fc4:	462b      	mov	r3, r5
10000fc6:	4621      	mov	r1, r4
10000fc8:	2020      	movs	r0, #32
10000fca:	47d0      	blx	sl
10000fcc:	4632      	mov	r2, r6
10000fce:	eba2 030b 	sub.w	r3, r2, fp
10000fd2:	42bb      	cmp	r3, r7
10000fd4:	d3f5      	bcc.n	10000fc2 <_etoa+0x3d2>
10000fd6:	4610      	mov	r0, r2
10000fd8:	e733      	b.n	10000e42 <_etoa+0x252>
10000fda:	bf00      	nop
10000fdc:	0000      	movs	r0, r0
	...

10000fe0 <_ftoa>:
{
10000fe0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10000fe4:	ed2d 8b02 	vpush	{d8}
10000fe8:	b095      	sub	sp, #84	; 0x54
10000fea:	9007      	str	r0, [sp, #28]
10000fec:	910a      	str	r1, [sp, #40]	; 0x28
10000fee:	4692      	mov	sl, r2
10000ff0:	469b      	mov	fp, r3
10000ff2:	e9dd 8920 	ldrd	r8, r9, [sp, #128]	; 0x80
10000ff6:	9d22      	ldr	r5, [sp, #136]	; 0x88
  if (value != value)
10000ff8:	4642      	mov	r2, r8
10000ffa:	464b      	mov	r3, r9
10000ffc:	4640      	mov	r0, r8
10000ffe:	4649      	mov	r1, r9
10001000:	f003 f93e 	bl	10004280 <__aeabi_dcmpeq>
10001004:	2800      	cmp	r0, #0
10001006:	d040      	beq.n	1000108a <_ftoa+0xaa>
  if (value < -DBL_MAX)
10001008:	f04f 32ff 	mov.w	r2, #4294967295
1000100c:	f46f 1380 	mvn.w	r3, #1048576	; 0x100000
10001010:	4640      	mov	r0, r8
10001012:	4649      	mov	r1, r9
10001014:	f003 f93e 	bl	10004294 <__aeabi_dcmplt>
10001018:	2800      	cmp	r0, #0
1000101a:	d145      	bne.n	100010a8 <_ftoa+0xc8>
  if (value > DBL_MAX)
1000101c:	f04f 32ff 	mov.w	r2, #4294967295
10001020:	4b9f      	ldr	r3, [pc, #636]	; (100012a0 <_ftoa+0x2c0>)
10001022:	4640      	mov	r0, r8
10001024:	4649      	mov	r1, r9
10001026:	f003 f953 	bl	100042d0 <__aeabi_dcmpgt>
1000102a:	2800      	cmp	r0, #0
1000102c:	d14b      	bne.n	100010c6 <_ftoa+0xe6>
  if ((value > PRINTF_MAX_FLOAT) || (value < -PRINTF_MAX_FLOAT)) {
1000102e:	a398      	add	r3, pc, #608	; (adr r3, 10001290 <_ftoa+0x2b0>)
10001030:	e9d3 2300 	ldrd	r2, r3, [r3]
10001034:	4640      	mov	r0, r8
10001036:	4649      	mov	r1, r9
10001038:	f003 f94a 	bl	100042d0 <__aeabi_dcmpgt>
1000103c:	2800      	cmp	r0, #0
1000103e:	d15a      	bne.n	100010f6 <_ftoa+0x116>
10001040:	a395      	add	r3, pc, #596	; (adr r3, 10001298 <_ftoa+0x2b8>)
10001042:	e9d3 2300 	ldrd	r2, r3, [r3]
10001046:	4640      	mov	r0, r8
10001048:	4649      	mov	r1, r9
1000104a:	f003 f923 	bl	10004294 <__aeabi_dcmplt>
1000104e:	2800      	cmp	r0, #0
10001050:	d151      	bne.n	100010f6 <_ftoa+0x116>
  if (value < 0) {
10001052:	2200      	movs	r2, #0
10001054:	2300      	movs	r3, #0
10001056:	4640      	mov	r0, r8
10001058:	4649      	mov	r1, r9
1000105a:	f003 f91b 	bl	10004294 <__aeabi_dcmplt>
1000105e:	2800      	cmp	r0, #0
10001060:	d157      	bne.n	10001112 <_ftoa+0x132>
  bool negative = false;
10001062:	2300      	movs	r3, #0
10001064:	930b      	str	r3, [sp, #44]	; 0x2c
  if (!(flags & FLAGS_PRECISION)) {
10001066:	9b24      	ldr	r3, [sp, #144]	; 0x90
10001068:	f413 6f80 	tst.w	r3, #1024	; 0x400
1000106c:	d05c      	beq.n	10001128 <_ftoa+0x148>
    prec = PRINTF_DEFAULT_FLOAT_PRECISION;
1000106e:	2400      	movs	r4, #0
  while ((len < PRINTF_FTOA_BUFFER_SIZE) && (prec > 9U)) {
10001070:	2c1f      	cmp	r4, #31
10001072:	d85b      	bhi.n	1000112c <_ftoa+0x14c>
10001074:	2d09      	cmp	r5, #9
10001076:	d959      	bls.n	1000112c <_ftoa+0x14c>
    buf[len++] = '0';
10001078:	f104 0350 	add.w	r3, r4, #80	; 0x50
1000107c:	446b      	add	r3, sp
1000107e:	2230      	movs	r2, #48	; 0x30
10001080:	f803 2c20 	strb.w	r2, [r3, #-32]
    prec--;
10001084:	3d01      	subs	r5, #1
    buf[len++] = '0';
10001086:	3401      	adds	r4, #1
10001088:	e7f2      	b.n	10001070 <_ftoa+0x90>
    return _out_rev(out, buffer, idx, maxlen, "nan", 3, width, flags);
1000108a:	9b24      	ldr	r3, [sp, #144]	; 0x90
1000108c:	9303      	str	r3, [sp, #12]
1000108e:	9b23      	ldr	r3, [sp, #140]	; 0x8c
10001090:	9302      	str	r3, [sp, #8]
10001092:	2303      	movs	r3, #3
10001094:	9301      	str	r3, [sp, #4]
10001096:	4b83      	ldr	r3, [pc, #524]	; (100012a4 <_ftoa+0x2c4>)
10001098:	9300      	str	r3, [sp, #0]
1000109a:	465b      	mov	r3, fp
1000109c:	4652      	mov	r2, sl
1000109e:	990a      	ldr	r1, [sp, #40]	; 0x28
100010a0:	9807      	ldr	r0, [sp, #28]
100010a2:	f7ff fc1a 	bl	100008da <_out_rev>
100010a6:	e12c      	b.n	10001302 <_ftoa+0x322>
    return _out_rev(out, buffer, idx, maxlen, "fni-", 4, width, flags);
100010a8:	9b24      	ldr	r3, [sp, #144]	; 0x90
100010aa:	9303      	str	r3, [sp, #12]
100010ac:	9b23      	ldr	r3, [sp, #140]	; 0x8c
100010ae:	9302      	str	r3, [sp, #8]
100010b0:	2304      	movs	r3, #4
100010b2:	9301      	str	r3, [sp, #4]
100010b4:	4b7c      	ldr	r3, [pc, #496]	; (100012a8 <_ftoa+0x2c8>)
100010b6:	9300      	str	r3, [sp, #0]
100010b8:	465b      	mov	r3, fp
100010ba:	4652      	mov	r2, sl
100010bc:	990a      	ldr	r1, [sp, #40]	; 0x28
100010be:	9807      	ldr	r0, [sp, #28]
100010c0:	f7ff fc0b 	bl	100008da <_out_rev>
100010c4:	e11d      	b.n	10001302 <_ftoa+0x322>
    return _out_rev(out, buffer, idx, maxlen, (flags & FLAGS_PLUS) ? "fni+" : "fni", (flags & FLAGS_PLUS) ? 4U : 3U, width, flags);
100010c6:	9b24      	ldr	r3, [sp, #144]	; 0x90
100010c8:	f013 0304 	ands.w	r3, r3, #4
100010cc:	d00f      	beq.n	100010ee <_ftoa+0x10e>
100010ce:	4a77      	ldr	r2, [pc, #476]	; (100012ac <_ftoa+0x2cc>)
100010d0:	b17b      	cbz	r3, 100010f2 <_ftoa+0x112>
100010d2:	2304      	movs	r3, #4
100010d4:	9924      	ldr	r1, [sp, #144]	; 0x90
100010d6:	9103      	str	r1, [sp, #12]
100010d8:	9923      	ldr	r1, [sp, #140]	; 0x8c
100010da:	9102      	str	r1, [sp, #8]
100010dc:	9301      	str	r3, [sp, #4]
100010de:	9200      	str	r2, [sp, #0]
100010e0:	465b      	mov	r3, fp
100010e2:	4652      	mov	r2, sl
100010e4:	990a      	ldr	r1, [sp, #40]	; 0x28
100010e6:	9807      	ldr	r0, [sp, #28]
100010e8:	f7ff fbf7 	bl	100008da <_out_rev>
100010ec:	e109      	b.n	10001302 <_ftoa+0x322>
100010ee:	4a70      	ldr	r2, [pc, #448]	; (100012b0 <_ftoa+0x2d0>)
100010f0:	e7ee      	b.n	100010d0 <_ftoa+0xf0>
100010f2:	2303      	movs	r3, #3
100010f4:	e7ee      	b.n	100010d4 <_ftoa+0xf4>
    return _etoa(out, buffer, idx, maxlen, value, prec, width, flags);
100010f6:	9b24      	ldr	r3, [sp, #144]	; 0x90
100010f8:	9304      	str	r3, [sp, #16]
100010fa:	9b23      	ldr	r3, [sp, #140]	; 0x8c
100010fc:	9303      	str	r3, [sp, #12]
100010fe:	9502      	str	r5, [sp, #8]
10001100:	e9cd 8900 	strd	r8, r9, [sp]
10001104:	465b      	mov	r3, fp
10001106:	4652      	mov	r2, sl
10001108:	990a      	ldr	r1, [sp, #40]	; 0x28
1000110a:	9807      	ldr	r0, [sp, #28]
1000110c:	f7ff fd70 	bl	10000bf0 <_etoa>
10001110:	e0f7      	b.n	10001302 <_ftoa+0x322>
    value = 0 - value;
10001112:	4642      	mov	r2, r8
10001114:	464b      	mov	r3, r9
10001116:	2000      	movs	r0, #0
10001118:	2100      	movs	r1, #0
1000111a:	f002 fc91 	bl	10003a40 <__aeabi_dsub>
1000111e:	4680      	mov	r8, r0
10001120:	4689      	mov	r9, r1
    negative = true;
10001122:	2301      	movs	r3, #1
10001124:	930b      	str	r3, [sp, #44]	; 0x2c
10001126:	e79e      	b.n	10001066 <_ftoa+0x86>
    prec = PRINTF_DEFAULT_FLOAT_PRECISION;
10001128:	2506      	movs	r5, #6
1000112a:	e7a0      	b.n	1000106e <_ftoa+0x8e>
  int whole = (int)value;
1000112c:	4640      	mov	r0, r8
1000112e:	4649      	mov	r1, r9
10001130:	f003 f8d8 	bl	100042e4 <__aeabi_d2iz>
10001134:	4606      	mov	r6, r0
  double tmp = (value - whole) * pow10[prec];
10001136:	f002 fdd1 	bl	10003cdc <__aeabi_i2d>
1000113a:	4602      	mov	r2, r0
1000113c:	460b      	mov	r3, r1
1000113e:	4640      	mov	r0, r8
10001140:	4649      	mov	r1, r9
10001142:	f002 fc7d 	bl	10003a40 <__aeabi_dsub>
10001146:	4b5b      	ldr	r3, [pc, #364]	; (100012b4 <_ftoa+0x2d4>)
10001148:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
1000114c:	ed93 8b00 	vldr	d8, [r3]
10001150:	ec53 2b18 	vmov	r2, r3, d8
10001154:	f002 fe2c 	bl	10003db0 <__aeabi_dmul>
10001158:	4602      	mov	r2, r0
1000115a:	460b      	mov	r3, r1
1000115c:	e9cd 2308 	strd	r2, r3, [sp, #32]
  unsigned long frac = (unsigned long)tmp;
10001160:	f003 f8e8 	bl	10004334 <__aeabi_d2uiz>
10001164:	4607      	mov	r7, r0
  diff = tmp - frac;
10001166:	f002 fda9 	bl	10003cbc <__aeabi_ui2d>
1000116a:	4602      	mov	r2, r0
1000116c:	460b      	mov	r3, r1
1000116e:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
10001172:	f002 fc65 	bl	10003a40 <__aeabi_dsub>
10001176:	4602      	mov	r2, r0
10001178:	460b      	mov	r3, r1
1000117a:	e9cd 2308 	strd	r2, r3, [sp, #32]
  if (diff > 0.5) {
1000117e:	2200      	movs	r2, #0
10001180:	4b4d      	ldr	r3, [pc, #308]	; (100012b8 <_ftoa+0x2d8>)
10001182:	f003 f8a5 	bl	100042d0 <__aeabi_dcmpgt>
10001186:	b350      	cbz	r0, 100011de <_ftoa+0x1fe>
    ++frac;
10001188:	3701      	adds	r7, #1
    if (frac >= pow10[prec]) {
1000118a:	4638      	mov	r0, r7
1000118c:	f002 fd96 	bl	10003cbc <__aeabi_ui2d>
10001190:	4602      	mov	r2, r0
10001192:	460b      	mov	r3, r1
10001194:	ec51 0b18 	vmov	r0, r1, d8
10001198:	f003 f886 	bl	100042a8 <__aeabi_dcmple>
1000119c:	b108      	cbz	r0, 100011a2 <_ftoa+0x1c2>
      ++whole;
1000119e:	3601      	adds	r6, #1
      frac = 0;
100011a0:	2700      	movs	r7, #0
  if (prec == 0U) {
100011a2:	bb55      	cbnz	r5, 100011fa <_ftoa+0x21a>
    diff = value - (double)whole;
100011a4:	4630      	mov	r0, r6
100011a6:	f002 fd99 	bl	10003cdc <__aeabi_i2d>
100011aa:	4602      	mov	r2, r0
100011ac:	460b      	mov	r3, r1
100011ae:	4640      	mov	r0, r8
100011b0:	4649      	mov	r1, r9
100011b2:	f002 fc45 	bl	10003a40 <__aeabi_dsub>
100011b6:	4607      	mov	r7, r0
100011b8:	4688      	mov	r8, r1
    if ((!(diff < 0.5) || (diff > 0.5)) && (whole & 1)) {
100011ba:	2200      	movs	r2, #0
100011bc:	4b3e      	ldr	r3, [pc, #248]	; (100012b8 <_ftoa+0x2d8>)
100011be:	f003 f869 	bl	10004294 <__aeabi_dcmplt>
100011c2:	b138      	cbz	r0, 100011d4 <_ftoa+0x1f4>
100011c4:	2200      	movs	r2, #0
100011c6:	4b3c      	ldr	r3, [pc, #240]	; (100012b8 <_ftoa+0x2d8>)
100011c8:	4638      	mov	r0, r7
100011ca:	4641      	mov	r1, r8
100011cc:	f003 f880 	bl	100042d0 <__aeabi_dcmpgt>
100011d0:	2800      	cmp	r0, #0
100011d2:	d042      	beq.n	1000125a <_ftoa+0x27a>
100011d4:	f016 0f01 	tst.w	r6, #1
100011d8:	d03f      	beq.n	1000125a <_ftoa+0x27a>
      ++whole;
100011da:	3601      	adds	r6, #1
100011dc:	e03d      	b.n	1000125a <_ftoa+0x27a>
  else if (diff < 0.5) {
100011de:	2200      	movs	r2, #0
100011e0:	4b35      	ldr	r3, [pc, #212]	; (100012b8 <_ftoa+0x2d8>)
100011e2:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
100011e6:	f003 f855 	bl	10004294 <__aeabi_dcmplt>
100011ea:	2800      	cmp	r0, #0
100011ec:	d1d9      	bne.n	100011a2 <_ftoa+0x1c2>
  else if ((frac == 0U) || (frac & 1U)) {
100011ee:	b117      	cbz	r7, 100011f6 <_ftoa+0x216>
100011f0:	f017 0f01 	tst.w	r7, #1
100011f4:	d0d5      	beq.n	100011a2 <_ftoa+0x1c2>
    ++frac;
100011f6:	3701      	adds	r7, #1
100011f8:	e7d3      	b.n	100011a2 <_ftoa+0x1c2>
    while (len < PRINTF_FTOA_BUFFER_SIZE) {
100011fa:	2c1f      	cmp	r4, #31
100011fc:	d817      	bhi.n	1000122e <_ftoa+0x24e>
      --count;
100011fe:	3d01      	subs	r5, #1
      buf[len++] = (char)(48U + (frac % 10U));
10001200:	4b2e      	ldr	r3, [pc, #184]	; (100012bc <_ftoa+0x2dc>)
10001202:	fba3 2307 	umull	r2, r3, r3, r7
10001206:	08db      	lsrs	r3, r3, #3
10001208:	4619      	mov	r1, r3
1000120a:	eb03 0383 	add.w	r3, r3, r3, lsl #2
1000120e:	eba7 0343 	sub.w	r3, r7, r3, lsl #1
10001212:	1c62      	adds	r2, r4, #1
10001214:	3330      	adds	r3, #48	; 0x30
10001216:	f104 0050 	add.w	r0, r4, #80	; 0x50
1000121a:	eb0d 0400 	add.w	r4, sp, r0
1000121e:	f804 3c20 	strb.w	r3, [r4, #-32]
      if (!(frac /= 10U)) {
10001222:	2f09      	cmp	r7, #9
10001224:	d902      	bls.n	1000122c <_ftoa+0x24c>
10001226:	460f      	mov	r7, r1
      buf[len++] = (char)(48U + (frac % 10U));
10001228:	4614      	mov	r4, r2
1000122a:	e7e6      	b.n	100011fa <_ftoa+0x21a>
1000122c:	4614      	mov	r4, r2
    while ((len < PRINTF_FTOA_BUFFER_SIZE) && (count-- > 0U)) {
1000122e:	2c1f      	cmp	r4, #31
10001230:	d80a      	bhi.n	10001248 <_ftoa+0x268>
10001232:	1e6b      	subs	r3, r5, #1
10001234:	b145      	cbz	r5, 10001248 <_ftoa+0x268>
      buf[len++] = '0';
10001236:	f104 0250 	add.w	r2, r4, #80	; 0x50
1000123a:	446a      	add	r2, sp
1000123c:	2130      	movs	r1, #48	; 0x30
1000123e:	f802 1c20 	strb.w	r1, [r2, #-32]
    while ((len < PRINTF_FTOA_BUFFER_SIZE) && (count-- > 0U)) {
10001242:	461d      	mov	r5, r3
      buf[len++] = '0';
10001244:	3401      	adds	r4, #1
10001246:	e7f2      	b.n	1000122e <_ftoa+0x24e>
    if (len < PRINTF_FTOA_BUFFER_SIZE) {
10001248:	2c1f      	cmp	r4, #31
1000124a:	d806      	bhi.n	1000125a <_ftoa+0x27a>
      buf[len++] = '.';
1000124c:	f104 0350 	add.w	r3, r4, #80	; 0x50
10001250:	446b      	add	r3, sp
10001252:	222e      	movs	r2, #46	; 0x2e
10001254:	f803 2c20 	strb.w	r2, [r3, #-32]
10001258:	3401      	adds	r4, #1
  while (len < PRINTF_FTOA_BUFFER_SIZE) {
1000125a:	2c1f      	cmp	r4, #31
1000125c:	d833      	bhi.n	100012c6 <_ftoa+0x2e6>
    buf[len++] = (char)(48 + (whole % 10));
1000125e:	4a18      	ldr	r2, [pc, #96]	; (100012c0 <_ftoa+0x2e0>)
10001260:	fb82 3206 	smull	r3, r2, r2, r6
10001264:	17f3      	asrs	r3, r6, #31
10001266:	ebc3 03a2 	rsb	r3, r3, r2, asr #2
1000126a:	461a      	mov	r2, r3
1000126c:	eb03 0383 	add.w	r3, r3, r3, lsl #2
10001270:	eba6 0343 	sub.w	r3, r6, r3, lsl #1
10001274:	1c61      	adds	r1, r4, #1
10001276:	3330      	adds	r3, #48	; 0x30
10001278:	f104 0050 	add.w	r0, r4, #80	; 0x50
1000127c:	eb0d 0400 	add.w	r4, sp, r0
10001280:	f804 3c20 	strb.w	r3, [r4, #-32]
    if (!(whole /= 10)) {
10001284:	4616      	mov	r6, r2
10001286:	b1ea      	cbz	r2, 100012c4 <_ftoa+0x2e4>
    buf[len++] = (char)(48 + (whole % 10));
10001288:	460c      	mov	r4, r1
1000128a:	e7e6      	b.n	1000125a <_ftoa+0x27a>
1000128c:	f3af 8000 	nop.w
10001290:	00000000 	andeq	r0, r0, r0
10001294:	41cdcd65 	bicmi	ip, sp, r5, ror #26
10001298:	00000000 	andeq	r0, r0, r0
1000129c:	c1cdcd65 	bicgt	ip, sp, r5, ror #26
100012a0:	7fefffff 	svcvc	0x00efffff
100012a4:	1000571c 	andne	r5, r0, ip, lsl r7
100012a8:	10005720 	andne	r5, r0, r0, lsr #14
100012ac:	10005714 	andne	r5, r0, r4, lsl r7
100012b0:	10005710 	andne	r5, r0, r0, lsl r7
100012b4:	10005728 	andne	r5, r0, r8, lsr #14
100012b8:	3fe00000 	svccc	0x00e00000
100012bc:	cccccccd 	stclgt	12, cr12, [ip], {205}	; 0xcd
100012c0:	66666667 	strbtvs	r6, [r6], -r7, ror #12
100012c4:	460c      	mov	r4, r1
  if (!(flags & FLAGS_LEFT) && (flags & FLAGS_ZEROPAD)) {
100012c6:	9b24      	ldr	r3, [sp, #144]	; 0x90
100012c8:	f003 0303 	and.w	r3, r3, #3
100012cc:	2b01      	cmp	r3, #1
100012ce:	d01d      	beq.n	1000130c <_ftoa+0x32c>
  if (len < PRINTF_FTOA_BUFFER_SIZE) {
100012d0:	2c1f      	cmp	r4, #31
100012d2:	d809      	bhi.n	100012e8 <_ftoa+0x308>
    if (negative) {
100012d4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
100012d6:	2b00      	cmp	r3, #0
100012d8:	d035      	beq.n	10001346 <_ftoa+0x366>
      buf[len++] = '-';
100012da:	f104 0350 	add.w	r3, r4, #80	; 0x50
100012de:	446b      	add	r3, sp
100012e0:	222d      	movs	r2, #45	; 0x2d
100012e2:	f803 2c20 	strb.w	r2, [r3, #-32]
100012e6:	3401      	adds	r4, #1
  return _out_rev(out, buffer, idx, maxlen, buf, len, width, flags);
100012e8:	9b24      	ldr	r3, [sp, #144]	; 0x90
100012ea:	9303      	str	r3, [sp, #12]
100012ec:	9b23      	ldr	r3, [sp, #140]	; 0x8c
100012ee:	9302      	str	r3, [sp, #8]
100012f0:	9401      	str	r4, [sp, #4]
100012f2:	ab0c      	add	r3, sp, #48	; 0x30
100012f4:	9300      	str	r3, [sp, #0]
100012f6:	465b      	mov	r3, fp
100012f8:	4652      	mov	r2, sl
100012fa:	990a      	ldr	r1, [sp, #40]	; 0x28
100012fc:	9807      	ldr	r0, [sp, #28]
100012fe:	f7ff faec 	bl	100008da <_out_rev>
}
10001302:	b015      	add	sp, #84	; 0x54
10001304:	ecbd 8b02 	vpop	{d8}
10001308:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    if (width && (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
1000130c:	9b23      	ldr	r3, [sp, #140]	; 0x8c
1000130e:	b1b3      	cbz	r3, 1000133e <_ftoa+0x35e>
10001310:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
10001312:	b91b      	cbnz	r3, 1000131c <_ftoa+0x33c>
10001314:	9b24      	ldr	r3, [sp, #144]	; 0x90
10001316:	f013 0f0c 	tst.w	r3, #12
1000131a:	d012      	beq.n	10001342 <_ftoa+0x362>
      width--;
1000131c:	9b23      	ldr	r3, [sp, #140]	; 0x8c
1000131e:	3b01      	subs	r3, #1
10001320:	9323      	str	r3, [sp, #140]	; 0x8c
10001322:	4619      	mov	r1, r3
10001324:	e006      	b.n	10001334 <_ftoa+0x354>
      buf[len++] = '0';
10001326:	f104 0350 	add.w	r3, r4, #80	; 0x50
1000132a:	446b      	add	r3, sp
1000132c:	2230      	movs	r2, #48	; 0x30
1000132e:	f803 2c20 	strb.w	r2, [r3, #-32]
10001332:	3401      	adds	r4, #1
    while ((len < width) && (len < PRINTF_FTOA_BUFFER_SIZE)) {
10001334:	428c      	cmp	r4, r1
10001336:	d2cb      	bcs.n	100012d0 <_ftoa+0x2f0>
10001338:	2c1f      	cmp	r4, #31
1000133a:	d9f4      	bls.n	10001326 <_ftoa+0x346>
1000133c:	e7c8      	b.n	100012d0 <_ftoa+0x2f0>
1000133e:	9923      	ldr	r1, [sp, #140]	; 0x8c
10001340:	e7f8      	b.n	10001334 <_ftoa+0x354>
10001342:	9923      	ldr	r1, [sp, #140]	; 0x8c
10001344:	e7f6      	b.n	10001334 <_ftoa+0x354>
    else if (flags & FLAGS_PLUS) {
10001346:	9b24      	ldr	r3, [sp, #144]	; 0x90
10001348:	f013 0f04 	tst.w	r3, #4
1000134c:	d007      	beq.n	1000135e <_ftoa+0x37e>
      buf[len++] = '+';  // ignore the space if the '+' exists
1000134e:	f104 0350 	add.w	r3, r4, #80	; 0x50
10001352:	446b      	add	r3, sp
10001354:	222b      	movs	r2, #43	; 0x2b
10001356:	f803 2c20 	strb.w	r2, [r3, #-32]
1000135a:	3401      	adds	r4, #1
1000135c:	e7c4      	b.n	100012e8 <_ftoa+0x308>
    else if (flags & FLAGS_SPACE) {
1000135e:	9b24      	ldr	r3, [sp, #144]	; 0x90
10001360:	f013 0f08 	tst.w	r3, #8
10001364:	d0c0      	beq.n	100012e8 <_ftoa+0x308>
      buf[len++] = ' ';
10001366:	f104 0350 	add.w	r3, r4, #80	; 0x50
1000136a:	446b      	add	r3, sp
1000136c:	2220      	movs	r2, #32
1000136e:	f803 2c20 	strb.w	r2, [r3, #-32]
10001372:	3401      	adds	r4, #1
10001374:	e7b8      	b.n	100012e8 <_ftoa+0x308>
10001376:	bf00      	nop

10001378 <_vsnprintf>:
#endif  // PRINTF_SUPPORT_FLOAT


// internal vsnprintf
static int _vsnprintf(out_fct_type out, char* buffer, const size_t maxlen, const char* format, va_list va)
{
10001378:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
1000137c:	b08f      	sub	sp, #60	; 0x3c
1000137e:	4607      	mov	r7, r0
10001380:	4616      	mov	r6, r2
10001382:	930d      	str	r3, [sp, #52]	; 0x34
  unsigned int flags, width, precision, n;
  size_t idx = 0U;

  if (!buffer) {
10001384:	4688      	mov	r8, r1
10001386:	2900      	cmp	r1, #0
10001388:	f000 8324 	beq.w	100019d4 <_vsnprintf+0x65c>
          while (l++ < width) {
            out(' ', buffer, idx++, maxlen);
          }
        }
        format++;
        break;
1000138c:	2400      	movs	r4, #0
  while (*format)
1000138e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
10001390:	7818      	ldrb	r0, [r3, #0]
10001392:	2800      	cmp	r0, #0
10001394:	f000 8320 	beq.w	100019d8 <_vsnprintf+0x660>
    if (*format != '%') {
10001398:	2825      	cmp	r0, #37	; 0x25
1000139a:	d009      	beq.n	100013b0 <_vsnprintf+0x38>
      out(*format, buffer, idx++, maxlen);
1000139c:	1c65      	adds	r5, r4, #1
1000139e:	4633      	mov	r3, r6
100013a0:	4622      	mov	r2, r4
100013a2:	4641      	mov	r1, r8
100013a4:	47b8      	blx	r7
      format++;
100013a6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
100013a8:	3301      	adds	r3, #1
100013aa:	930d      	str	r3, [sp, #52]	; 0x34
      out(*format, buffer, idx++, maxlen);
100013ac:	462c      	mov	r4, r5
      continue;
100013ae:	e7ee      	b.n	1000138e <_vsnprintf+0x16>
      format++;
100013b0:	3301      	adds	r3, #1
100013b2:	930d      	str	r3, [sp, #52]	; 0x34
    flags = 0U;
100013b4:	2500      	movs	r5, #0
      switch (*format) {
100013b6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
100013b8:	7819      	ldrb	r1, [r3, #0]
100013ba:	f1a1 0220 	sub.w	r2, r1, #32
100013be:	2a10      	cmp	r2, #16
100013c0:	d80a      	bhi.n	100013d8 <_vsnprintf+0x60>
100013c2:	e8df f002 	tbb	[pc, r2]
100013c6:	3d090938 	vstrcc.16	s0, [r9, #-112]	; 0xffffff90	; <UNPREDICTABLE>
100013ca:	09090909 	stmdbeq	r9, {r0, r3, r8, fp}
100013ce:	33090909 	movwcc	r0, #39177	; 0x9909
100013d2:	09092e09 	stmdbeq	r9, {r0, r3, r9, sl, fp, sp}
100013d6:	f1a10029 			; <UNDEFINED> instruction: 0xf1a10029
  return (ch >= '0') && (ch <= '9');
100013da:	0330      	lsls	r0, r6, #12
100013dc:	b2db      	uxtb	r3, r3
    if (_is_digit(*format)) {
100013de:	2b09      	cmp	r3, #9
100013e0:	d933      	bls.n	1000144a <_vsnprintf+0xd2>
    else if (*format == '*') {
100013e2:	292a      	cmp	r1, #42	; 0x2a
100013e4:	d036      	beq.n	10001454 <_vsnprintf+0xdc>
    width = 0U;
100013e6:	2300      	movs	r3, #0
100013e8:	930a      	str	r3, [sp, #40]	; 0x28
    if (*format == '.') {
100013ea:	9b0d      	ldr	r3, [sp, #52]	; 0x34
100013ec:	781a      	ldrb	r2, [r3, #0]
100013ee:	2a2e      	cmp	r2, #46	; 0x2e
100013f0:	d040      	beq.n	10001474 <_vsnprintf+0xfc>
    precision = 0U;
100013f2:	f04f 0b00 	mov.w	fp, #0
    switch (*format) {
100013f6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
100013f8:	7813      	ldrb	r3, [r2, #0]
100013fa:	3b68      	subs	r3, #104	; 0x68
100013fc:	2b12      	cmp	r3, #18
100013fe:	d877      	bhi.n	100014f0 <_vsnprintf+0x178>
10001400:	e8df f003 	tbb	[pc, r3]
10001404:	76d37664 	ldrbvc	r7, [r3], r4, ror #12
10001408:	76767656 			; <UNDEFINED> instruction: 0x76767656
1000140c:	76767676 			; <UNDEFINED> instruction: 0x76767676
10001410:	76767672 			; <UNDEFINED> instruction: 0x76767672
10001414:	00d87676 	sbcseq	r7, r8, r6, ror r6
        case '0': flags |= FLAGS_ZEROPAD; format++; n = 1U; break;
10001418:	f045 0501 	orr.w	r5, r5, #1
1000141c:	3301      	adds	r3, #1
1000141e:	930d      	str	r3, [sp, #52]	; 0x34
    } while (n);
10001420:	e7c9      	b.n	100013b6 <_vsnprintf+0x3e>
        case '-': flags |= FLAGS_LEFT;    format++; n = 1U; break;
10001422:	f045 0502 	orr.w	r5, r5, #2
10001426:	3301      	adds	r3, #1
10001428:	930d      	str	r3, [sp, #52]	; 0x34
    } while (n);
1000142a:	e7c4      	b.n	100013b6 <_vsnprintf+0x3e>
        case '+': flags |= FLAGS_PLUS;    format++; n = 1U; break;
1000142c:	f045 0504 	orr.w	r5, r5, #4
10001430:	3301      	adds	r3, #1
10001432:	930d      	str	r3, [sp, #52]	; 0x34
    } while (n);
10001434:	e7bf      	b.n	100013b6 <_vsnprintf+0x3e>
        case ' ': flags |= FLAGS_SPACE;   format++; n = 1U; break;
10001436:	f045 0508 	orr.w	r5, r5, #8
1000143a:	3301      	adds	r3, #1
1000143c:	930d      	str	r3, [sp, #52]	; 0x34
    } while (n);
1000143e:	e7ba      	b.n	100013b6 <_vsnprintf+0x3e>
        case '#': flags |= FLAGS_HASH;    format++; n = 1U; break;
10001440:	f045 0510 	orr.w	r5, r5, #16
10001444:	3301      	adds	r3, #1
10001446:	930d      	str	r3, [sp, #52]	; 0x34
    } while (n);
10001448:	e7b5      	b.n	100013b6 <_vsnprintf+0x3e>
      width = _atoi(&format);
1000144a:	a80d      	add	r0, sp, #52	; 0x34
1000144c:	f7ff fa33 	bl	100008b6 <_atoi>
10001450:	900a      	str	r0, [sp, #40]	; 0x28
10001452:	e7ca      	b.n	100013ea <_vsnprintf+0x72>
      const int w = va_arg(va, int);
10001454:	9b18      	ldr	r3, [sp, #96]	; 0x60
10001456:	1d1a      	adds	r2, r3, #4
10001458:	9218      	str	r2, [sp, #96]	; 0x60
1000145a:	6818      	ldr	r0, [r3, #0]
      if (w < 0) {
1000145c:	2800      	cmp	r0, #0
1000145e:	db04      	blt.n	1000146a <_vsnprintf+0xf2>
        width = (unsigned int)w;
10001460:	900a      	str	r0, [sp, #40]	; 0x28
      format++;
10001462:	9b0d      	ldr	r3, [sp, #52]	; 0x34
10001464:	3301      	adds	r3, #1
10001466:	930d      	str	r3, [sp, #52]	; 0x34
10001468:	e7bf      	b.n	100013ea <_vsnprintf+0x72>
        flags |= FLAGS_LEFT;    // reverse padding
1000146a:	f045 0502 	orr.w	r5, r5, #2
        width = (unsigned int)-w;
1000146e:	4243      	negs	r3, r0
10001470:	930a      	str	r3, [sp, #40]	; 0x28
10001472:	e7f6      	b.n	10001462 <_vsnprintf+0xea>
      flags |= FLAGS_PRECISION;
10001474:	f445 6580 	orr.w	r5, r5, #1024	; 0x400
      format++;
10001478:	1c5a      	adds	r2, r3, #1
1000147a:	920d      	str	r2, [sp, #52]	; 0x34
      if (_is_digit(*format)) {
1000147c:	785a      	ldrb	r2, [r3, #1]
  return (ch >= '0') && (ch <= '9');
1000147e:	f1a2 0330 	sub.w	r3, r2, #48	; 0x30
10001482:	b2db      	uxtb	r3, r3
      if (_is_digit(*format)) {
10001484:	2b09      	cmp	r3, #9
10001486:	d904      	bls.n	10001492 <_vsnprintf+0x11a>
      else if (*format == '*') {
10001488:	2a2a      	cmp	r2, #42	; 0x2a
1000148a:	d007      	beq.n	1000149c <_vsnprintf+0x124>
    precision = 0U;
1000148c:	f04f 0b00 	mov.w	fp, #0
10001490:	e7b1      	b.n	100013f6 <_vsnprintf+0x7e>
        precision = _atoi(&format);
10001492:	a80d      	add	r0, sp, #52	; 0x34
10001494:	f7ff fa0f 	bl	100008b6 <_atoi>
10001498:	4683      	mov	fp, r0
1000149a:	e7ac      	b.n	100013f6 <_vsnprintf+0x7e>
        const int prec = (int)va_arg(va, int);
1000149c:	9b18      	ldr	r3, [sp, #96]	; 0x60
1000149e:	1d1a      	adds	r2, r3, #4
100014a0:	9218      	str	r2, [sp, #96]	; 0x60
100014a2:	681b      	ldr	r3, [r3, #0]
        precision = prec > 0 ? (unsigned int)prec : 0U;
100014a4:	ea23 7be3 	bic.w	fp, r3, r3, asr #31
        format++;
100014a8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
100014aa:	3301      	adds	r3, #1
100014ac:	930d      	str	r3, [sp, #52]	; 0x34
100014ae:	e7a2      	b.n	100013f6 <_vsnprintf+0x7e>
        flags |= FLAGS_LONG;
100014b0:	f445 7180 	orr.w	r1, r5, #256	; 0x100
        format++;
100014b4:	1c53      	adds	r3, r2, #1
100014b6:	930d      	str	r3, [sp, #52]	; 0x34
        if (*format == 'l') {
100014b8:	7852      	ldrb	r2, [r2, #1]
100014ba:	2a6c      	cmp	r2, #108	; 0x6c
100014bc:	d001      	beq.n	100014c2 <_vsnprintf+0x14a>
        flags |= FLAGS_LONG;
100014be:	460d      	mov	r5, r1
100014c0:	e016      	b.n	100014f0 <_vsnprintf+0x178>
          flags |= FLAGS_LONG_LONG;
100014c2:	f445 7540 	orr.w	r5, r5, #768	; 0x300
          format++;
100014c6:	3301      	adds	r3, #1
100014c8:	930d      	str	r3, [sp, #52]	; 0x34
100014ca:	e011      	b.n	100014f0 <_vsnprintf+0x178>
        flags |= FLAGS_SHORT;
100014cc:	f045 0180 	orr.w	r1, r5, #128	; 0x80
        format++;
100014d0:	1c53      	adds	r3, r2, #1
100014d2:	930d      	str	r3, [sp, #52]	; 0x34
        if (*format == 'h') {
100014d4:	7852      	ldrb	r2, [r2, #1]
100014d6:	2a68      	cmp	r2, #104	; 0x68
100014d8:	d001      	beq.n	100014de <_vsnprintf+0x166>
        flags |= FLAGS_SHORT;
100014da:	460d      	mov	r5, r1
100014dc:	e008      	b.n	100014f0 <_vsnprintf+0x178>
          flags |= FLAGS_CHAR;
100014de:	f045 05c0 	orr.w	r5, r5, #192	; 0xc0
          format++;
100014e2:	3301      	adds	r3, #1
100014e4:	930d      	str	r3, [sp, #52]	; 0x34
100014e6:	e003      	b.n	100014f0 <_vsnprintf+0x178>
        flags |= (sizeof(ptrdiff_t) == sizeof(long) ? FLAGS_LONG : FLAGS_LONG_LONG);
100014e8:	f445 7580 	orr.w	r5, r5, #256	; 0x100
        format++;
100014ec:	3201      	adds	r2, #1
100014ee:	920d      	str	r2, [sp, #52]	; 0x34
    switch (*format) {
100014f0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
100014f2:	7818      	ldrb	r0, [r3, #0]
100014f4:	f1a0 0325 	sub.w	r3, r0, #37	; 0x25
100014f8:	2b53      	cmp	r3, #83	; 0x53
100014fa:	f200 8261 	bhi.w	100019c0 <_vsnprintf+0x648>
100014fe:	e8df f013 	tbh	[pc, r3, lsl #1]
10001502:	025f0254 	subseq	r0, pc, #84, 4	; 0x40000005
10001506:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000150a:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000150e:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
10001512:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
10001516:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000151a:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000151e:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
10001522:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
10001526:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000152a:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000152e:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
10001532:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
10001536:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000153a:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000153e:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
10001542:	01540174 	cmpeq	r4, r4, ror r1
10001546:	025f0174 	subseq	r0, pc, #116, 2
1000154a:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000154e:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
10001552:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
10001556:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000155a:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000155e:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
10001562:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
10001566:	005e025f 	subseq	r0, lr, pc, asr r2
1000156a:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000156e:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
10001572:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
10001576:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000157a:	005e025f 	subseq	r0, lr, pc, asr r2
1000157e:	005e019b 			; <UNDEFINED> instruction: 0x005e019b
10001582:	01540174 	cmpeq	r4, r4, ror r1
10001586:	025f0174 	subseq	r0, pc, #116, 2
1000158a:	025f005e 	subseq	r0, pc, #94	; 0x5e
1000158e:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
10001592:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
10001596:	0239005e 	eorseq	r0, r9, #94	; 0x5e
1000159a:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000159e:	025f01d4 	subseq	r0, pc, #212, 2	; 0x35
100015a2:	025f005e 	subseq	r0, pc, #94	; 0x5e
100015a6:	005e025f 	subseq	r0, lr, pc, asr r2
        flags |= (sizeof(intmax_t) == sizeof(long) ? FLAGS_LONG : FLAGS_LONG_LONG);
100015aa:	f445 7500 	orr.w	r5, r5, #512	; 0x200
        format++;
100015ae:	3201      	adds	r2, #1
100015b0:	920d      	str	r2, [sp, #52]	; 0x34
        break;
100015b2:	e79d      	b.n	100014f0 <_vsnprintf+0x178>
        flags |= (sizeof(size_t) == sizeof(long) ? FLAGS_LONG : FLAGS_LONG_LONG);
100015b4:	f445 7580 	orr.w	r5, r5, #256	; 0x100
        format++;
100015b8:	3201      	adds	r2, #1
100015ba:	920d      	str	r2, [sp, #52]	; 0x34
        break;
100015bc:	e798      	b.n	100014f0 <_vsnprintf+0x178>
        if (*format == 'x' || *format == 'X') {
100015be:	2878      	cmp	r0, #120	; 0x78
100015c0:	d009      	beq.n	100015d6 <_vsnprintf+0x25e>
100015c2:	2858      	cmp	r0, #88	; 0x58
100015c4:	d03a      	beq.n	1000163c <_vsnprintf+0x2c4>
        else if (*format == 'o') {
100015c6:	286f      	cmp	r0, #111	; 0x6f
100015c8:	d03a      	beq.n	10001640 <_vsnprintf+0x2c8>
        else if (*format == 'b') {
100015ca:	2862      	cmp	r0, #98	; 0x62
100015cc:	d03a      	beq.n	10001644 <_vsnprintf+0x2cc>
          flags &= ~FLAGS_HASH;   // no hash for dec format
100015ce:	f025 0510 	bic.w	r5, r5, #16
          base = 10U;
100015d2:	230a      	movs	r3, #10
100015d4:	e000      	b.n	100015d8 <_vsnprintf+0x260>
          base = 16U;
100015d6:	2310      	movs	r3, #16
        if (*format == 'X') {
100015d8:	2858      	cmp	r0, #88	; 0x58
100015da:	d035      	beq.n	10001648 <_vsnprintf+0x2d0>
        if ((*format != 'i') && (*format != 'd')) {
100015dc:	2869      	cmp	r0, #105	; 0x69
100015de:	d003      	beq.n	100015e8 <_vsnprintf+0x270>
100015e0:	2864      	cmp	r0, #100	; 0x64
100015e2:	d001      	beq.n	100015e8 <_vsnprintf+0x270>
          flags &= ~(FLAGS_PLUS | FLAGS_SPACE);
100015e4:	f025 050c 	bic.w	r5, r5, #12
        if (flags & FLAGS_PRECISION) {
100015e8:	f415 6f80 	tst.w	r5, #1024	; 0x400
100015ec:	d001      	beq.n	100015f2 <_vsnprintf+0x27a>
          flags &= ~FLAGS_ZEROPAD;
100015ee:	f025 0501 	bic.w	r5, r5, #1
        if ((*format == 'i') || (*format == 'd')) {
100015f2:	2869      	cmp	r0, #105	; 0x69
100015f4:	d02b      	beq.n	1000164e <_vsnprintf+0x2d6>
100015f6:	2864      	cmp	r0, #100	; 0x64
100015f8:	d029      	beq.n	1000164e <_vsnprintf+0x2d6>
          if (flags & FLAGS_LONG_LONG) {
100015fa:	f415 7f00 	tst.w	r5, #512	; 0x200
100015fe:	f040 8096 	bne.w	1000172e <_vsnprintf+0x3b6>
          else if (flags & FLAGS_LONG) {
10001602:	f415 7f80 	tst.w	r5, #256	; 0x100
10001606:	f040 80ae 	bne.w	10001766 <_vsnprintf+0x3ee>
            const unsigned int value = (flags & FLAGS_CHAR) ? (unsigned char)va_arg(va, unsigned int) : (flags & FLAGS_SHORT) ? (unsigned short int)va_arg(va, unsigned int) : va_arg(va, unsigned int);
1000160a:	f015 0f40 	tst.w	r5, #64	; 0x40
1000160e:	f000 80bf 	beq.w	10001790 <_vsnprintf+0x418>
10001612:	9a18      	ldr	r2, [sp, #96]	; 0x60
10001614:	1d11      	adds	r1, r2, #4
10001616:	9118      	str	r1, [sp, #96]	; 0x60
10001618:	7812      	ldrb	r2, [r2, #0]
            idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base, precision, width, flags);
1000161a:	9505      	str	r5, [sp, #20]
1000161c:	990a      	ldr	r1, [sp, #40]	; 0x28
1000161e:	9104      	str	r1, [sp, #16]
10001620:	f8cd b00c 	str.w	fp, [sp, #12]
10001624:	9302      	str	r3, [sp, #8]
10001626:	2300      	movs	r3, #0
10001628:	9301      	str	r3, [sp, #4]
1000162a:	9200      	str	r2, [sp, #0]
1000162c:	4633      	mov	r3, r6
1000162e:	4622      	mov	r2, r4
10001630:	4641      	mov	r1, r8
10001632:	4638      	mov	r0, r7
10001634:	f7ff fa2c 	bl	10000a90 <_ntoa_long>
10001638:	4604      	mov	r4, r0
1000163a:	e029      	b.n	10001690 <_vsnprintf+0x318>
          base = 16U;
1000163c:	2310      	movs	r3, #16
1000163e:	e7cb      	b.n	100015d8 <_vsnprintf+0x260>
          base =  8U;
10001640:	2308      	movs	r3, #8
10001642:	e7c9      	b.n	100015d8 <_vsnprintf+0x260>
          base =  2U;
10001644:	2302      	movs	r3, #2
10001646:	e7c7      	b.n	100015d8 <_vsnprintf+0x260>
          flags |= FLAGS_UPPERCASE;
10001648:	f045 0520 	orr.w	r5, r5, #32
1000164c:	e7c6      	b.n	100015dc <_vsnprintf+0x264>
          if (flags & FLAGS_LONG_LONG) {
1000164e:	f415 7f00 	tst.w	r5, #512	; 0x200
10001652:	d121      	bne.n	10001698 <_vsnprintf+0x320>
          else if (flags & FLAGS_LONG) {
10001654:	f415 7f80 	tst.w	r5, #256	; 0x100
10001658:	d142      	bne.n	100016e0 <_vsnprintf+0x368>
            const int value = (flags & FLAGS_CHAR) ? (char)va_arg(va, int) : (flags & FLAGS_SHORT) ? (short int)va_arg(va, int) : va_arg(va, int);
1000165a:	f015 0f40 	tst.w	r5, #64	; 0x40
1000165e:	d058      	beq.n	10001712 <_vsnprintf+0x39a>
10001660:	9a18      	ldr	r2, [sp, #96]	; 0x60
10001662:	1d11      	adds	r1, r2, #4
10001664:	9118      	str	r1, [sp, #96]	; 0x60
10001666:	7812      	ldrb	r2, [r2, #0]
            idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned int)(value > 0 ? value : 0 - value), value < 0, base, precision, width, flags);
10001668:	ea82 71e2 	eor.w	r1, r2, r2, asr #31
1000166c:	eba1 71e2 	sub.w	r1, r1, r2, asr #31
10001670:	9505      	str	r5, [sp, #20]
10001672:	980a      	ldr	r0, [sp, #40]	; 0x28
10001674:	9004      	str	r0, [sp, #16]
10001676:	f8cd b00c 	str.w	fp, [sp, #12]
1000167a:	9302      	str	r3, [sp, #8]
1000167c:	0fd2      	lsrs	r2, r2, #31
1000167e:	9201      	str	r2, [sp, #4]
10001680:	9100      	str	r1, [sp, #0]
10001682:	4633      	mov	r3, r6
10001684:	4622      	mov	r2, r4
10001686:	4641      	mov	r1, r8
10001688:	4638      	mov	r0, r7
1000168a:	f7ff fa01 	bl	10000a90 <_ntoa_long>
1000168e:	4604      	mov	r4, r0
        format++;
10001690:	9b0d      	ldr	r3, [sp, #52]	; 0x34
10001692:	3301      	adds	r3, #1
10001694:	930d      	str	r3, [sp, #52]	; 0x34
        break;
10001696:	e67a      	b.n	1000138e <_vsnprintf+0x16>
            const long long value = va_arg(va, long long);
10001698:	9a18      	ldr	r2, [sp, #96]	; 0x60
1000169a:	3207      	adds	r2, #7
1000169c:	f022 0207 	bic.w	r2, r2, #7
100016a0:	f102 0108 	add.w	r1, r2, #8
100016a4:	9118      	str	r1, [sp, #96]	; 0x60
100016a6:	6851      	ldr	r1, [r2, #4]
            idx = _ntoa_long_long(out, buffer, idx, maxlen, (unsigned long long)(value > 0 ? value : 0 - value), value < 0, base, precision, width, flags);
100016a8:	6812      	ldr	r2, [r2, #0]
100016aa:	4608      	mov	r0, r1
100016ac:	2900      	cmp	r1, #0
100016ae:	db13      	blt.n	100016d8 <_vsnprintf+0x360>
100016b0:	9508      	str	r5, [sp, #32]
100016b2:	9d0a      	ldr	r5, [sp, #40]	; 0x28
100016b4:	9507      	str	r5, [sp, #28]
100016b6:	f8cd b018 	str.w	fp, [sp, #24]
100016ba:	9304      	str	r3, [sp, #16]
100016bc:	2300      	movs	r3, #0
100016be:	9305      	str	r3, [sp, #20]
100016c0:	0fc9      	lsrs	r1, r1, #31
100016c2:	9102      	str	r1, [sp, #8]
100016c4:	9200      	str	r2, [sp, #0]
100016c6:	9001      	str	r0, [sp, #4]
100016c8:	4633      	mov	r3, r6
100016ca:	4622      	mov	r2, r4
100016cc:	4641      	mov	r1, r8
100016ce:	4638      	mov	r0, r7
100016d0:	f7ff fa28 	bl	10000b24 <_ntoa_long_long>
100016d4:	4604      	mov	r4, r0
100016d6:	e7db      	b.n	10001690 <_vsnprintf+0x318>
100016d8:	4252      	negs	r2, r2
100016da:	eb61 0041 	sbc.w	r0, r1, r1, lsl #1
100016de:	e7e7      	b.n	100016b0 <_vsnprintf+0x338>
            const long value = va_arg(va, long);
100016e0:	9a18      	ldr	r2, [sp, #96]	; 0x60
100016e2:	1d11      	adds	r1, r2, #4
100016e4:	9118      	str	r1, [sp, #96]	; 0x60
100016e6:	6812      	ldr	r2, [r2, #0]
            idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned long)(value > 0 ? value : 0 - value), value < 0, base, precision, width, flags);
100016e8:	ea82 71e2 	eor.w	r1, r2, r2, asr #31
100016ec:	eba1 71e2 	sub.w	r1, r1, r2, asr #31
100016f0:	9505      	str	r5, [sp, #20]
100016f2:	980a      	ldr	r0, [sp, #40]	; 0x28
100016f4:	9004      	str	r0, [sp, #16]
100016f6:	f8cd b00c 	str.w	fp, [sp, #12]
100016fa:	9302      	str	r3, [sp, #8]
100016fc:	0fd2      	lsrs	r2, r2, #31
100016fe:	9201      	str	r2, [sp, #4]
10001700:	9100      	str	r1, [sp, #0]
10001702:	4633      	mov	r3, r6
10001704:	4622      	mov	r2, r4
10001706:	4641      	mov	r1, r8
10001708:	4638      	mov	r0, r7
1000170a:	f7ff f9c1 	bl	10000a90 <_ntoa_long>
1000170e:	4604      	mov	r4, r0
10001710:	e7be      	b.n	10001690 <_vsnprintf+0x318>
            const int value = (flags & FLAGS_CHAR) ? (char)va_arg(va, int) : (flags & FLAGS_SHORT) ? (short int)va_arg(va, int) : va_arg(va, int);
10001712:	f015 0f80 	tst.w	r5, #128	; 0x80
10001716:	d005      	beq.n	10001724 <_vsnprintf+0x3ac>
10001718:	9a18      	ldr	r2, [sp, #96]	; 0x60
1000171a:	1d11      	adds	r1, r2, #4
1000171c:	9118      	str	r1, [sp, #96]	; 0x60
1000171e:	f9b2 2000 	ldrsh.w	r2, [r2]
10001722:	e7a1      	b.n	10001668 <_vsnprintf+0x2f0>
10001724:	9a18      	ldr	r2, [sp, #96]	; 0x60
10001726:	1d11      	adds	r1, r2, #4
10001728:	9118      	str	r1, [sp, #96]	; 0x60
1000172a:	6812      	ldr	r2, [r2, #0]
1000172c:	e79c      	b.n	10001668 <_vsnprintf+0x2f0>
            idx = _ntoa_long_long(out, buffer, idx, maxlen, va_arg(va, unsigned long long), false, base, precision, width, flags);
1000172e:	9a18      	ldr	r2, [sp, #96]	; 0x60
10001730:	3207      	adds	r2, #7
10001732:	f022 0207 	bic.w	r2, r2, #7
10001736:	f102 0108 	add.w	r1, r2, #8
1000173a:	9118      	str	r1, [sp, #96]	; 0x60
1000173c:	9508      	str	r5, [sp, #32]
1000173e:	990a      	ldr	r1, [sp, #40]	; 0x28
10001740:	9107      	str	r1, [sp, #28]
10001742:	f8cd b018 	str.w	fp, [sp, #24]
10001746:	2100      	movs	r1, #0
10001748:	9304      	str	r3, [sp, #16]
1000174a:	9105      	str	r1, [sp, #20]
1000174c:	9102      	str	r1, [sp, #8]
1000174e:	e9d2 2300 	ldrd	r2, r3, [r2]
10001752:	e9cd 2300 	strd	r2, r3, [sp]
10001756:	4633      	mov	r3, r6
10001758:	4622      	mov	r2, r4
1000175a:	4641      	mov	r1, r8
1000175c:	4638      	mov	r0, r7
1000175e:	f7ff f9e1 	bl	10000b24 <_ntoa_long_long>
10001762:	4604      	mov	r4, r0
10001764:	e794      	b.n	10001690 <_vsnprintf+0x318>
            idx = _ntoa_long(out, buffer, idx, maxlen, va_arg(va, unsigned long), false, base, precision, width, flags);
10001766:	9a18      	ldr	r2, [sp, #96]	; 0x60
10001768:	1d11      	adds	r1, r2, #4
1000176a:	9118      	str	r1, [sp, #96]	; 0x60
1000176c:	9505      	str	r5, [sp, #20]
1000176e:	990a      	ldr	r1, [sp, #40]	; 0x28
10001770:	9104      	str	r1, [sp, #16]
10001772:	f8cd b00c 	str.w	fp, [sp, #12]
10001776:	9302      	str	r3, [sp, #8]
10001778:	2300      	movs	r3, #0
1000177a:	9301      	str	r3, [sp, #4]
1000177c:	6813      	ldr	r3, [r2, #0]
1000177e:	9300      	str	r3, [sp, #0]
10001780:	4633      	mov	r3, r6
10001782:	4622      	mov	r2, r4
10001784:	4641      	mov	r1, r8
10001786:	4638      	mov	r0, r7
10001788:	f7ff f982 	bl	10000a90 <_ntoa_long>
1000178c:	4604      	mov	r4, r0
1000178e:	e77f      	b.n	10001690 <_vsnprintf+0x318>
            const unsigned int value = (flags & FLAGS_CHAR) ? (unsigned char)va_arg(va, unsigned int) : (flags & FLAGS_SHORT) ? (unsigned short int)va_arg(va, unsigned int) : va_arg(va, unsigned int);
10001790:	f015 0f80 	tst.w	r5, #128	; 0x80
10001794:	d004      	beq.n	100017a0 <_vsnprintf+0x428>
10001796:	9a18      	ldr	r2, [sp, #96]	; 0x60
10001798:	1d11      	adds	r1, r2, #4
1000179a:	9118      	str	r1, [sp, #96]	; 0x60
1000179c:	8812      	ldrh	r2, [r2, #0]
1000179e:	e73c      	b.n	1000161a <_vsnprintf+0x2a2>
100017a0:	9a18      	ldr	r2, [sp, #96]	; 0x60
100017a2:	1d11      	adds	r1, r2, #4
100017a4:	9118      	str	r1, [sp, #96]	; 0x60
100017a6:	6812      	ldr	r2, [r2, #0]
100017a8:	e737      	b.n	1000161a <_vsnprintf+0x2a2>
        if (*format == 'F') flags |= FLAGS_UPPERCASE;
100017aa:	2846      	cmp	r0, #70	; 0x46
100017ac:	d01a      	beq.n	100017e4 <_vsnprintf+0x46c>
        idx = _ftoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
100017ae:	9b18      	ldr	r3, [sp, #96]	; 0x60
100017b0:	3307      	adds	r3, #7
100017b2:	f023 0307 	bic.w	r3, r3, #7
100017b6:	f103 0208 	add.w	r2, r3, #8
100017ba:	9218      	str	r2, [sp, #96]	; 0x60
100017bc:	9504      	str	r5, [sp, #16]
100017be:	9a0a      	ldr	r2, [sp, #40]	; 0x28
100017c0:	9203      	str	r2, [sp, #12]
100017c2:	f8cd b008 	str.w	fp, [sp, #8]
100017c6:	e9d3 2300 	ldrd	r2, r3, [r3]
100017ca:	e9cd 2300 	strd	r2, r3, [sp]
100017ce:	4633      	mov	r3, r6
100017d0:	4622      	mov	r2, r4
100017d2:	4641      	mov	r1, r8
100017d4:	4638      	mov	r0, r7
100017d6:	f7ff fc03 	bl	10000fe0 <_ftoa>
100017da:	4604      	mov	r4, r0
        format++;
100017dc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
100017de:	3301      	adds	r3, #1
100017e0:	930d      	str	r3, [sp, #52]	; 0x34
        break;
100017e2:	e5d4      	b.n	1000138e <_vsnprintf+0x16>
        if (*format == 'F') flags |= FLAGS_UPPERCASE;
100017e4:	f045 0520 	orr.w	r5, r5, #32
100017e8:	e7e1      	b.n	100017ae <_vsnprintf+0x436>
        if ((*format == 'g')||(*format == 'G')) flags |= FLAGS_ADAPT_EXP;
100017ea:	2867      	cmp	r0, #103	; 0x67
100017ec:	d001      	beq.n	100017f2 <_vsnprintf+0x47a>
100017ee:	2847      	cmp	r0, #71	; 0x47
100017f0:	d101      	bne.n	100017f6 <_vsnprintf+0x47e>
100017f2:	f445 6500 	orr.w	r5, r5, #2048	; 0x800
        if ((*format == 'E')||(*format == 'G')) flags |= FLAGS_UPPERCASE;
100017f6:	2845      	cmp	r0, #69	; 0x45
100017f8:	d001      	beq.n	100017fe <_vsnprintf+0x486>
100017fa:	2847      	cmp	r0, #71	; 0x47
100017fc:	d101      	bne.n	10001802 <_vsnprintf+0x48a>
100017fe:	f045 0520 	orr.w	r5, r5, #32
        idx = _etoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
10001802:	9b18      	ldr	r3, [sp, #96]	; 0x60
10001804:	3307      	adds	r3, #7
10001806:	f023 0307 	bic.w	r3, r3, #7
1000180a:	f103 0208 	add.w	r2, r3, #8
1000180e:	9218      	str	r2, [sp, #96]	; 0x60
10001810:	9504      	str	r5, [sp, #16]
10001812:	9a0a      	ldr	r2, [sp, #40]	; 0x28
10001814:	9203      	str	r2, [sp, #12]
10001816:	f8cd b008 	str.w	fp, [sp, #8]
1000181a:	e9d3 2300 	ldrd	r2, r3, [r3]
1000181e:	e9cd 2300 	strd	r2, r3, [sp]
10001822:	4633      	mov	r3, r6
10001824:	4622      	mov	r2, r4
10001826:	4641      	mov	r1, r8
10001828:	4638      	mov	r0, r7
1000182a:	f7ff f9e1 	bl	10000bf0 <_etoa>
1000182e:	4604      	mov	r4, r0
        format++;
10001830:	9b0d      	ldr	r3, [sp, #52]	; 0x34
10001832:	3301      	adds	r3, #1
10001834:	930d      	str	r3, [sp, #52]	; 0x34
        break;
10001836:	e5aa      	b.n	1000138e <_vsnprintf+0x16>
        if (!(flags & FLAGS_LEFT)) {
10001838:	f015 0502 	ands.w	r5, r5, #2
1000183c:	d01f      	beq.n	1000187e <_vsnprintf+0x506>
        unsigned int l = 1U;
1000183e:	f04f 0901 	mov.w	r9, #1
        out((char)va_arg(va, int), buffer, idx++, maxlen);
10001842:	9818      	ldr	r0, [sp, #96]	; 0x60
10001844:	1d03      	adds	r3, r0, #4
10001846:	9318      	str	r3, [sp, #96]	; 0x60
10001848:	f104 0a01 	add.w	sl, r4, #1
1000184c:	4633      	mov	r3, r6
1000184e:	4622      	mov	r2, r4
10001850:	4641      	mov	r1, r8
10001852:	7800      	ldrb	r0, [r0, #0]
10001854:	47b8      	blx	r7
        if (flags & FLAGS_LEFT) {
10001856:	b9bd      	cbnz	r5, 10001888 <_vsnprintf+0x510>
        format++;
10001858:	9b0d      	ldr	r3, [sp, #52]	; 0x34
1000185a:	3301      	adds	r3, #1
1000185c:	930d      	str	r3, [sp, #52]	; 0x34
        break;
1000185e:	4654      	mov	r4, sl
10001860:	e595      	b.n	1000138e <_vsnprintf+0x16>
            out(' ', buffer, idx++, maxlen);
10001862:	f102 0a01 	add.w	sl, r2, #1
10001866:	4633      	mov	r3, r6
10001868:	4641      	mov	r1, r8
1000186a:	2020      	movs	r0, #32
1000186c:	47b8      	blx	r7
          while (l++ < width) {
1000186e:	464b      	mov	r3, r9
            out(' ', buffer, idx++, maxlen);
10001870:	4652      	mov	r2, sl
          while (l++ < width) {
10001872:	f103 0901 	add.w	r9, r3, #1
10001876:	459b      	cmp	fp, r3
10001878:	d8f3      	bhi.n	10001862 <_vsnprintf+0x4ea>
1000187a:	4614      	mov	r4, r2
1000187c:	e7e1      	b.n	10001842 <_vsnprintf+0x4ca>
        unsigned int l = 1U;
1000187e:	2301      	movs	r3, #1
10001880:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
10001884:	4622      	mov	r2, r4
10001886:	e7f4      	b.n	10001872 <_vsnprintf+0x4fa>
10001888:	4652      	mov	r2, sl
1000188a:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
1000188e:	e006      	b.n	1000189e <_vsnprintf+0x526>
            out(' ', buffer, idx++, maxlen);
10001890:	1c55      	adds	r5, r2, #1
10001892:	4633      	mov	r3, r6
10001894:	4641      	mov	r1, r8
10001896:	2020      	movs	r0, #32
10001898:	47b8      	blx	r7
          while (l++ < width) {
1000189a:	46a1      	mov	r9, r4
            out(' ', buffer, idx++, maxlen);
1000189c:	462a      	mov	r2, r5
          while (l++ < width) {
1000189e:	f109 0401 	add.w	r4, r9, #1
100018a2:	45ca      	cmp	sl, r9
100018a4:	d8f4      	bhi.n	10001890 <_vsnprintf+0x518>
100018a6:	4692      	mov	sl, r2
100018a8:	e7d6      	b.n	10001858 <_vsnprintf+0x4e0>
      }

      case 's' : {
        const char* p = va_arg(va, char*);
100018aa:	9b18      	ldr	r3, [sp, #96]	; 0x60
100018ac:	1d1a      	adds	r2, r3, #4
100018ae:	9218      	str	r2, [sp, #96]	; 0x60
100018b0:	f8d3 a000 	ldr.w	sl, [r3]
        unsigned int l = _strnlen_s(p, precision ? precision : (size_t)-1);
100018b4:	f1bb 0f00 	cmp.w	fp, #0
100018b8:	d11e      	bne.n	100018f8 <_vsnprintf+0x580>
100018ba:	f04f 33ff 	mov.w	r3, #4294967295
100018be:	46d1      	mov	r9, sl
100018c0:	e002      	b.n	100018c8 <_vsnprintf+0x550>
  for (s = str; *s && maxsize--; ++s);
100018c2:	f109 0901 	add.w	r9, r9, #1
100018c6:	4613      	mov	r3, r2
100018c8:	f899 2000 	ldrb.w	r2, [r9]
100018cc:	b112      	cbz	r2, 100018d4 <_vsnprintf+0x55c>
100018ce:	1e5a      	subs	r2, r3, #1
100018d0:	2b00      	cmp	r3, #0
100018d2:	d1f6      	bne.n	100018c2 <_vsnprintf+0x54a>
  return (unsigned int)(s - str);
100018d4:	eba9 090a 	sub.w	r9, r9, sl
        // pre padding
        if (flags & FLAGS_PRECISION) {
100018d8:	f415 6380 	ands.w	r3, r5, #1024	; 0x400
100018dc:	930b      	str	r3, [sp, #44]	; 0x2c
100018de:	d002      	beq.n	100018e6 <_vsnprintf+0x56e>
          l = (l < precision ? l : precision);
100018e0:	45d9      	cmp	r9, fp
100018e2:	bf28      	it	cs
100018e4:	46d9      	movcs	r9, fp
        }
        if (!(flags & FLAGS_LEFT)) {
100018e6:	f015 0302 	ands.w	r3, r5, #2
100018ea:	930c      	str	r3, [sp, #48]	; 0x30
100018ec:	d006      	beq.n	100018fc <_vsnprintf+0x584>
100018ee:	4622      	mov	r2, r4
100018f0:	465c      	mov	r4, fp
100018f2:	46b3      	mov	fp, r6
100018f4:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
100018f6:	e01d      	b.n	10001934 <_vsnprintf+0x5bc>
        unsigned int l = _strnlen_s(p, precision ? precision : (size_t)-1);
100018f8:	465b      	mov	r3, fp
100018fa:	e7e0      	b.n	100018be <_vsnprintf+0x546>
100018fc:	4622      	mov	r2, r4
100018fe:	9c0a      	ldr	r4, [sp, #40]	; 0x28
10001900:	464b      	mov	r3, r9
10001902:	e007      	b.n	10001914 <_vsnprintf+0x59c>
          while (l++ < width) {
            out(' ', buffer, idx++, maxlen);
10001904:	f102 0901 	add.w	r9, r2, #1
10001908:	4633      	mov	r3, r6
1000190a:	4641      	mov	r1, r8
1000190c:	2020      	movs	r0, #32
1000190e:	47b8      	blx	r7
          while (l++ < width) {
10001910:	462b      	mov	r3, r5
            out(' ', buffer, idx++, maxlen);
10001912:	464a      	mov	r2, r9
          while (l++ < width) {
10001914:	1c5d      	adds	r5, r3, #1
10001916:	429c      	cmp	r4, r3
10001918:	d8f4      	bhi.n	10001904 <_vsnprintf+0x58c>
1000191a:	46a9      	mov	r9, r5
1000191c:	465c      	mov	r4, fp
1000191e:	46b3      	mov	fp, r6
10001920:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
10001922:	e007      	b.n	10001934 <_vsnprintf+0x5bc>
          }
        }
        // string output
        while ((*p != 0) && (!(flags & FLAGS_PRECISION) || precision--)) {
10001924:	461c      	mov	r4, r3
          out(*(p++), buffer, idx++, maxlen);
10001926:	f10a 0a01 	add.w	sl, sl, #1
1000192a:	1c55      	adds	r5, r2, #1
1000192c:	465b      	mov	r3, fp
1000192e:	4641      	mov	r1, r8
10001930:	47b8      	blx	r7
10001932:	462a      	mov	r2, r5
        while ((*p != 0) && (!(flags & FLAGS_PRECISION) || precision--)) {
10001934:	f89a 0000 	ldrb.w	r0, [sl]
10001938:	b120      	cbz	r0, 10001944 <_vsnprintf+0x5cc>
1000193a:	2e00      	cmp	r6, #0
1000193c:	d0f3      	beq.n	10001926 <_vsnprintf+0x5ae>
1000193e:	1e63      	subs	r3, r4, #1
10001940:	2c00      	cmp	r4, #0
10001942:	d1ef      	bne.n	10001924 <_vsnprintf+0x5ac>
        }
        // post padding
        if (flags & FLAGS_LEFT) {
10001944:	4614      	mov	r4, r2
10001946:	465e      	mov	r6, fp
10001948:	9b0c      	ldr	r3, [sp, #48]	; 0x30
1000194a:	b91b      	cbnz	r3, 10001954 <_vsnprintf+0x5dc>
          while (l++ < width) {
            out(' ', buffer, idx++, maxlen);
          }
        }
        format++;
1000194c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
1000194e:	3301      	adds	r3, #1
10001950:	930d      	str	r3, [sp, #52]	; 0x34
        break;
10001952:	e51c      	b.n	1000138e <_vsnprintf+0x16>
10001954:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
10001958:	e006      	b.n	10001968 <_vsnprintf+0x5f0>
            out(' ', buffer, idx++, maxlen);
1000195a:	1c55      	adds	r5, r2, #1
1000195c:	4633      	mov	r3, r6
1000195e:	4641      	mov	r1, r8
10001960:	2020      	movs	r0, #32
10001962:	47b8      	blx	r7
          while (l++ < width) {
10001964:	46a1      	mov	r9, r4
            out(' ', buffer, idx++, maxlen);
10001966:	462a      	mov	r2, r5
          while (l++ < width) {
10001968:	f109 0401 	add.w	r4, r9, #1
1000196c:	45ca      	cmp	sl, r9
1000196e:	d8f4      	bhi.n	1000195a <_vsnprintf+0x5e2>
10001970:	4614      	mov	r4, r2
10001972:	e7eb      	b.n	1000194c <_vsnprintf+0x5d4>
      }

      case 'p' : {
        width = sizeof(void*) * 2U;
        flags |= FLAGS_ZEROPAD | FLAGS_UPPERCASE;
10001974:	f045 0521 	orr.w	r5, r5, #33	; 0x21
        if (is_ll) {
          idx = _ntoa_long_long(out, buffer, idx, maxlen, (uintptr_t)va_arg(va, void*), false, 16U, precision, width, flags);
        }
        else {
#endif
          idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned long)((uintptr_t)va_arg(va, void*)), false, 16U, precision, width, flags);
10001978:	9b18      	ldr	r3, [sp, #96]	; 0x60
1000197a:	1d1a      	adds	r2, r3, #4
1000197c:	9218      	str	r2, [sp, #96]	; 0x60
1000197e:	681b      	ldr	r3, [r3, #0]
10001980:	9505      	str	r5, [sp, #20]
10001982:	2208      	movs	r2, #8
10001984:	9204      	str	r2, [sp, #16]
10001986:	f8cd b00c 	str.w	fp, [sp, #12]
1000198a:	2210      	movs	r2, #16
1000198c:	9202      	str	r2, [sp, #8]
1000198e:	2200      	movs	r2, #0
10001990:	9201      	str	r2, [sp, #4]
10001992:	9300      	str	r3, [sp, #0]
10001994:	4633      	mov	r3, r6
10001996:	4622      	mov	r2, r4
10001998:	4641      	mov	r1, r8
1000199a:	4638      	mov	r0, r7
1000199c:	f7ff f878 	bl	10000a90 <_ntoa_long>
100019a0:	4604      	mov	r4, r0
#if defined(PRINTF_SUPPORT_LONG_LONG)
        }
#endif
        format++;
100019a2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
100019a4:	3301      	adds	r3, #1
100019a6:	930d      	str	r3, [sp, #52]	; 0x34
        break;
100019a8:	e4f1      	b.n	1000138e <_vsnprintf+0x16>
      }

      case '%' :
        out('%', buffer, idx++, maxlen);
100019aa:	1c65      	adds	r5, r4, #1
100019ac:	4633      	mov	r3, r6
100019ae:	4622      	mov	r2, r4
100019b0:	4641      	mov	r1, r8
100019b2:	2025      	movs	r0, #37	; 0x25
100019b4:	47b8      	blx	r7
        format++;
100019b6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
100019b8:	3301      	adds	r3, #1
100019ba:	930d      	str	r3, [sp, #52]	; 0x34
        out('%', buffer, idx++, maxlen);
100019bc:	462c      	mov	r4, r5
        break;
100019be:	e4e6      	b.n	1000138e <_vsnprintf+0x16>

      default :
        out(*format, buffer, idx++, maxlen);
100019c0:	1c65      	adds	r5, r4, #1
100019c2:	4633      	mov	r3, r6
100019c4:	4622      	mov	r2, r4
100019c6:	4641      	mov	r1, r8
100019c8:	47b8      	blx	r7
        format++;
100019ca:	9b0d      	ldr	r3, [sp, #52]	; 0x34
100019cc:	3301      	adds	r3, #1
100019ce:	930d      	str	r3, [sp, #52]	; 0x34
        out(*format, buffer, idx++, maxlen);
100019d0:	462c      	mov	r4, r5
        break;
100019d2:	e4dc      	b.n	1000138e <_vsnprintf+0x16>
    out = _out_null;
100019d4:	4f07      	ldr	r7, [pc, #28]	; (100019f4 <_vsnprintf+0x67c>)
100019d6:	e4d9      	b.n	1000138c <_vsnprintf+0x14>
    }
  }

  // termination
  out((char)0, buffer, idx < maxlen ? idx : maxlen - 1U, maxlen);
100019d8:	42b4      	cmp	r4, r6
100019da:	d301      	bcc.n	100019e0 <_vsnprintf+0x668>
100019dc:	1e72      	subs	r2, r6, #1
100019de:	e000      	b.n	100019e2 <_vsnprintf+0x66a>
100019e0:	4622      	mov	r2, r4
100019e2:	4633      	mov	r3, r6
100019e4:	4641      	mov	r1, r8
100019e6:	2000      	movs	r0, #0
100019e8:	47b8      	blx	r7

  // return written chars without terminating \0
  return (int)idx;
}
100019ea:	4620      	mov	r0, r4
100019ec:	b00f      	add	sp, #60	; 0x3c
100019ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
100019f2:	bf00      	nop
100019f4:	100008b5 			; <UNDEFINED> instruction: 0x100008b5

100019f8 <_out_char>:
  if (character) {
100019f8:	b900      	cbnz	r0, 100019fc <_out_char+0x4>
100019fa:	4770      	bx	lr
{
100019fc:	b508      	push	{r3, lr}
    put_char(character);
100019fe:	f000 f817 	bl	10001a30 <put_char>
}
10001a02:	bd08      	pop	{r3, pc}

10001a04 <printf>:


///////////////////////////////////////////////////////////////////////////////

int printf(const char* format, ...)
{
10001a04:	b40f      	push	{r0, r1, r2, r3}
10001a06:	b500      	push	{lr}
10001a08:	b085      	sub	sp, #20
10001a0a:	aa06      	add	r2, sp, #24
10001a0c:	f852 3b04 	ldr.w	r3, [r2], #4
  va_list va;
  va_start(va, format);
10001a10:	9203      	str	r2, [sp, #12]
  char buffer[1];
  const int ret = _vsnprintf(_out_char, buffer, (size_t)-1, format, va);
10001a12:	9200      	str	r2, [sp, #0]
10001a14:	f04f 32ff 	mov.w	r2, #4294967295
10001a18:	a902      	add	r1, sp, #8
10001a1a:	4804      	ldr	r0, [pc, #16]	; (10001a2c <printf+0x28>)
10001a1c:	f7ff fcac 	bl	10001378 <_vsnprintf>
  va_end(va);
  return ret;
}
10001a20:	b005      	add	sp, #20
10001a22:	f85d eb04 	ldr.w	lr, [sp], #4
10001a26:	b004      	add	sp, #16
10001a28:	4770      	bx	lr
10001a2a:	bf00      	nop
10001a2c:	100019f9 	strdne	r1, [r0], -r9

10001a30 <put_char>:
#define UART_MIS(base)          (*((volatile uint32_t *)(base + 0x40)))
#define UART_ICR(base)          (*((volatile uint32_t *)(base + 0x44)))
#define UART_DMACR(base)        (*((volatile uint32_t *)(base + 0x48)))

int put_char(int ch) {
    while (UART_FLAG(UART0) & 0x20);
10001a30:	4b03      	ldr	r3, [pc, #12]	; (10001a40 <put_char+0x10>)
10001a32:	699b      	ldr	r3, [r3, #24]
10001a34:	f013 0f20 	tst.w	r3, #32
10001a38:	d1fa      	bne.n	10001a30 <put_char>
    UART_DATA(UART0) = ch;
10001a3a:	4b01      	ldr	r3, [pc, #4]	; (10001a40 <put_char+0x10>)
10001a3c:	6018      	str	r0, [r3, #0]
    return ch;
}
10001a3e:	4770      	bx	lr
10001a40:	40200000 	eormi	r0, r0, r0

10001a44 <puts>:
int get_char(void) {
    while ((UART_FLAG(UART0) & 0x40) == 0);
    return UART_DATA(UART0);
}

int puts(const char* string) {
10001a44:	b538      	push	{r3, r4, r5, lr}
10001a46:	4605      	mov	r5, r0
    int index = 0;
10001a48:	2400      	movs	r4, #0
    while (string[index] != '\0') {
10001a4a:	e002      	b.n	10001a52 <puts+0xe>
        put_char(string[index]);
10001a4c:	f7ff fff0 	bl	10001a30 <put_char>
        index++;
10001a50:	3401      	adds	r4, #1
    while (string[index] != '\0') {
10001a52:	5d28      	ldrb	r0, [r5, r4]
10001a54:	2800      	cmp	r0, #0
10001a56:	d1f9      	bne.n	10001a4c <puts+0x8>
    }
    put_char('\n');
10001a58:	200a      	movs	r0, #10
10001a5a:	f7ff ffe9 	bl	10001a30 <put_char>
    return index;
}
10001a5e:	4620      	mov	r0, r4
10001a60:	bd38      	pop	{r3, r4, r5, pc}
	...

10001a64 <uart_init>:

void uart_init(void) {
    UART_IBRD(UART0) = 40;
10001a64:	4b07      	ldr	r3, [pc, #28]	; (10001a84 <uart_init+0x20>)
10001a66:	2228      	movs	r2, #40	; 0x28
10001a68:	625a      	str	r2, [r3, #36]	; 0x24
    UART_FBRD(UART0) = 11;
10001a6a:	220b      	movs	r2, #11
10001a6c:	629a      	str	r2, [r3, #40]	; 0x28
    UART_LCRH(UART0) = 0x60;
10001a6e:	2260      	movs	r2, #96	; 0x60
10001a70:	62da      	str	r2, [r3, #44]	; 0x2c
    UART_CR(UART0)   = 0x301;
10001a72:	f240 3201 	movw	r2, #769	; 0x301
10001a76:	631a      	str	r2, [r3, #48]	; 0x30
    UART_RSR(UART0)  = 0x0A;
10001a78:	220a      	movs	r2, #10
10001a7a:	605a      	str	r2, [r3, #4]
    UART_CTRL(UART0) = 0x01;
10001a7c:	2201      	movs	r2, #1
10001a7e:	609a      	str	r2, [r3, #8]
}
10001a80:	4770      	bx	lr
10001a82:	bf00      	nop
10001a84:	40200000 	eormi	r0, r0, r0

10001a88 <fault_dump_opcode>:
    FD_CODE_TEXT_BASE,  FD_CODE_TEXT_ENDS,  FD_CODE_TEXT_SIZE );
    printf("Code Stack Growth Downward:%d\r\n", 
    FD_STACK_GROWTH_DOWNWARD);
}

static unsigned int fault_dump_opcode(unsigned int pc) {
10001a88:	b082      	sub	sp, #8
    uint16_t value[2] = {0};
10001a8a:	2300      	movs	r3, #0
10001a8c:	9301      	str	r3, [sp, #4]
    unsigned int opcode = 0;
    for (int i = 0; i < (sizeof(value) / sizeof(uint16_t)); i++) {
10001a8e:	e007      	b.n	10001aa0 <fault_dump_opcode+0x18>
        value[i] = *(uint16_t*)(pc + i * sizeof(uint16_t));
10001a90:	f830 1013 	ldrh.w	r1, [r0, r3, lsl #1]
10001a94:	aa02      	add	r2, sp, #8
10001a96:	eb02 0243 	add.w	r2, r2, r3, lsl #1
10001a9a:	f822 1c04 	strh.w	r1, [r2, #-4]
    for (int i = 0; i < (sizeof(value) / sizeof(uint16_t)); i++) {
10001a9e:	3301      	adds	r3, #1
10001aa0:	2b01      	cmp	r3, #1
10001aa2:	d9f5      	bls.n	10001a90 <fault_dump_opcode+0x8>
    }
    opcode = ((unsigned int)value[1] << 0x10) |
10001aa4:	f8bd 0006 	ldrh.w	r0, [sp, #6]
             ((unsigned int)value[0] << 0x00);
10001aa8:	f8bd 3004 	ldrh.w	r3, [sp, #4]
    return opcode;
}
10001aac:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
10001ab0:	b002      	add	sp, #8
10001ab2:	4770      	bx	lr

10001ab4 <opcode_is_bl_or_blx>:

static bool opcode_is_bl_or_blx(unsigned int ins) {
#define FD_BL_OPCODE_MASK   (0xF800)
#define FD_BL_OPCODE_BL     (0xF000)
#define FD_BL_OPCODE_BLX    (0xF800)
    uint16_t opcode1 = (((ins >> 0x00) & 0xFFFF) & FD_BL_OPCODE_MASK);
10001ab4:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
    uint16_t opcode2 = (((ins >> 0x10) & 0xFFFF) & FD_BL_OPCODE_MASK);
10001ab8:	0c00      	lsrs	r0, r0, #16
10001aba:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
    if ((opcode1 == FD_BL_OPCODE_BL) || (opcode1 == FD_BL_OPCODE_BLX)) {
10001abe:	f5b3 4f70 	cmp.w	r3, #61440	; 0xf000
10001ac2:	d00a      	beq.n	10001ada <opcode_is_bl_or_blx+0x26>
10001ac4:	f5b3 4f78 	cmp.w	r3, #63488	; 0xf800
10001ac8:	d009      	beq.n	10001ade <opcode_is_bl_or_blx+0x2a>
        return true;
    }
    if ((opcode2 == FD_BL_OPCODE_BL) || (opcode2 == FD_BL_OPCODE_BLX)) {
10001aca:	f5b0 4f70 	cmp.w	r0, #61440	; 0xf000
10001ace:	d008      	beq.n	10001ae2 <opcode_is_bl_or_blx+0x2e>
10001ad0:	f5b0 4f78 	cmp.w	r0, #63488	; 0xf800
10001ad4:	d007      	beq.n	10001ae6 <opcode_is_bl_or_blx+0x32>
        return true;
    }
    return false;
10001ad6:	2000      	movs	r0, #0
10001ad8:	4770      	bx	lr
        return true;
10001ada:	2001      	movs	r0, #1
10001adc:	4770      	bx	lr
10001ade:	2001      	movs	r0, #1
10001ae0:	4770      	bx	lr
        return true;
10001ae2:	2001      	movs	r0, #1
10001ae4:	4770      	bx	lr
10001ae6:	2001      	movs	r0, #1
}
10001ae8:	4770      	bx	lr
	...

10001aec <dump_exc_return>:

static void dump_exc_return(unsigned int exc_return) {
10001aec:	b510      	push	{r4, lr}
10001aee:	4604      	mov	r4, r0
    printf(" EXE_RETURN: 0x%08X \r\n", exc_return);
10001af0:	4601      	mov	r1, r0
10001af2:	4803      	ldr	r0, [pc, #12]	; (10001b00 <dump_exc_return+0x14>)
10001af4:	f7ff ff86 	bl	10001a04 <printf>
#if FD_DUMP_EXC_RETURN_VALUE
    extern void fault_dump_exc_return(unsigned int exc_return);
    fault_dump_exc_return(exc_return);
10001af8:	4620      	mov	r0, r4
10001afa:	f000 f92b 	bl	10001d54 <fault_dump_exc_return>
#endif
}
10001afe:	bd10      	pop	{r4, pc}
10001b00:	10005778 	andne	r5, r0, r8, ror r7

10001b04 <fault_dump_init>:
void fault_dump_init(void) {
10001b04:	b508      	push	{r3, lr}
    fd_main_stack_base = FD_CODE_STACK_BASE;
10001b06:	490a      	ldr	r1, [pc, #40]	; (10001b30 <fault_dump_init+0x2c>)
10001b08:	4b0a      	ldr	r3, [pc, #40]	; (10001b34 <fault_dump_init+0x30>)
10001b0a:	6019      	str	r1, [r3, #0]
    fd_main_stack_full = FD_CODE_STACK_FULL;
10001b0c:	4a0a      	ldr	r2, [pc, #40]	; (10001b38 <fault_dump_init+0x34>)
10001b0e:	4b0b      	ldr	r3, [pc, #44]	; (10001b3c <fault_dump_init+0x38>)
10001b10:	601a      	str	r2, [r3, #0]
    printf("Code Stack:[%08X - %08X], size:%d\r\n",
10001b12:	1a53      	subs	r3, r2, r1
10001b14:	480a      	ldr	r0, [pc, #40]	; (10001b40 <fault_dump_init+0x3c>)
10001b16:	f7ff ff75 	bl	10001a04 <printf>
    printf("Code Text :[%08X - %08X], size:%d\r\n",
10001b1a:	490a      	ldr	r1, [pc, #40]	; (10001b44 <fault_dump_init+0x40>)
10001b1c:	4a0a      	ldr	r2, [pc, #40]	; (10001b48 <fault_dump_init+0x44>)
10001b1e:	1a53      	subs	r3, r2, r1
10001b20:	480a      	ldr	r0, [pc, #40]	; (10001b4c <fault_dump_init+0x48>)
10001b22:	f7ff ff6f 	bl	10001a04 <printf>
    printf("Code Stack Growth Downward:%d\r\n", 
10001b26:	2101      	movs	r1, #1
10001b28:	4809      	ldr	r0, [pc, #36]	; (10001b50 <fault_dump_init+0x4c>)
10001b2a:	f7ff ff6b 	bl	10001a04 <printf>
}
10001b2e:	bd08      	pop	{r3, pc}
10001b30:	380ff000 	stmdacc	pc, {ip, sp, lr, pc}	; <UNPREDICTABLE>
10001b34:	38008568 	stmdacc	r0, {r3, r5, r6, r8, sl, pc}
10001b38:	38100000 	ldmdacc	r0, {}	; <UNPREDICTABLE>
10001b3c:	3800856c 	stmdacc	r0, {r2, r3, r5, r6, r8, sl, pc}
10001b40:	10005790 	mulne	r0, r0, r7
10001b44:	10000000 	andne	r0, r0, r0
10001b48:	10005bb0 			; <UNDEFINED> instruction: 0x10005bb0
10001b4c:	100057b4 			; <UNDEFINED> instruction: 0x100057b4
10001b50:	100057d8 	ldrdne	r5, [r0], -r8

10001b54 <fault_dump_callstack>:
    }
    printf("\r\n");
    while (1);
}

int fault_dump_callstack(unsigned int *buffer, size_t size, unsigned int *stack_point, unsigned int *stack_start) {
10001b54:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    int count = 0;
    unsigned int pc = 0, op = 0, *sp = NULL;
    if ((buffer == NULL) || (size <= 0)) {
10001b58:	b348      	cbz	r0, 10001bae <fault_dump_callstack+0x5a>
10001b5a:	460f      	mov	r7, r1
10001b5c:	4614      	mov	r4, r2
10001b5e:	461d      	mov	r5, r3
10001b60:	4680      	mov	r8, r0
10001b62:	b339      	cbz	r1, 10001bb4 <fault_dump_callstack+0x60>
        return -FD_EEMPTY;
    }
    FD_STACK_CHECKIT(stack_point, stack_start) {
10001b64:	b34a      	cbz	r2, 10001bba <fault_dump_callstack+0x66>
10001b66:	429a      	cmp	r2, r3
10001b68:	d82a      	bhi.n	10001bc0 <fault_dump_callstack+0x6c>
    int count = 0;
10001b6a:	2600      	movs	r6, #0
10001b6c:	e000      	b.n	10001b70 <fault_dump_callstack+0x1c>
        return -FD_EINVAL;
    }
    FD_STACK_FOREACH(stack_point, stack_start) {
10001b6e:	3404      	adds	r4, #4
10001b70:	b1d4      	cbz	r4, 10001ba8 <fault_dump_callstack+0x54>
10001b72:	42ac      	cmp	r4, r5
10001b74:	d818      	bhi.n	10001ba8 <fault_dump_callstack+0x54>
        // Read stack[x] value to pc.
        pc = *(unsigned int *)sp;
10001b76:	6822      	ldr	r2, [r4, #0]
        // PC must be in the code segment.
        if ((pc < FD_CODE_TEXT_BASE) || (pc > FD_CODE_TEXT_ENDS)) {
10001b78:	4813      	ldr	r0, [pc, #76]	; (10001bc8 <fault_dump_callstack+0x74>)
10001b7a:	4290      	cmp	r0, r2
10001b7c:	d8f7      	bhi.n	10001b6e <fault_dump_callstack+0x1a>
10001b7e:	4b13      	ldr	r3, [pc, #76]	; (10001bcc <fault_dump_callstack+0x78>)
10001b80:	4293      	cmp	r3, r2
10001b82:	d3f4      	bcc.n	10001b6e <fault_dump_callstack+0x1a>
            continue;
        }
        // The thumb instruction must be an odd number.
        if ((pc % 2) == 0) {
10001b84:	f012 0f01 	tst.w	r2, #1
10001b88:	d0f1      	beq.n	10001b6e <fault_dump_callstack+0x1a>
            continue;
        }
        // Fix thumb instruction set.
        pc = pc - 1;
        // Calculate the address of the instruction being executed before pushing on the stack.
        pc = pc - sizeof(unsigned int);
10001b8a:	f1a2 0905 	sub.w	r9, r2, #5
        // The thumb instruction is at least 2-byte aligned.
        if ((pc & 0x1) != 0) {
10001b8e:	d0ee      	beq.n	10001b6e <fault_dump_callstack+0x1a>
            continue;
        }
        // Read the instruction at the PC address.
        op = fault_dump_opcode(pc);
10001b90:	4648      	mov	r0, r9
10001b92:	f7ff ff79 	bl	10001a88 <fault_dump_opcode>
        // Only BL or BLX opcode need to be recorded.
        if (!opcode_is_bl_or_blx(op)) {
10001b96:	f7ff ff8d 	bl	10001ab4 <opcode_is_bl_or_blx>
10001b9a:	2800      	cmp	r0, #0
10001b9c:	d0e7      	beq.n	10001b6e <fault_dump_callstack+0x1a>
            continue;
        }
        // storage this address.
        buffer[count] = pc;
10001b9e:	f848 9026 	str.w	r9, [r8, r6, lsl #2]
        count = count + 1;
10001ba2:	3601      	adds	r6, #1
        if (count >= size) {
10001ba4:	42be      	cmp	r6, r7
10001ba6:	d3e2      	bcc.n	10001b6e <fault_dump_callstack+0x1a>
            break;
        }
    }
    return count;
}
10001ba8:	4630      	mov	r0, r6
10001baa:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
        return -FD_EEMPTY;
10001bae:	f06f 0601 	mvn.w	r6, #1
10001bb2:	e7f9      	b.n	10001ba8 <fault_dump_callstack+0x54>
10001bb4:	f06f 0601 	mvn.w	r6, #1
10001bb8:	e7f6      	b.n	10001ba8 <fault_dump_callstack+0x54>
        return -FD_EINVAL;
10001bba:	f06f 0602 	mvn.w	r6, #2
10001bbe:	e7f3      	b.n	10001ba8 <fault_dump_callstack+0x54>
10001bc0:	f06f 0602 	mvn.w	r6, #2
10001bc4:	e7f0      	b.n	10001ba8 <fault_dump_callstack+0x54>
10001bc6:	bf00      	nop
10001bc8:	10000000 	andne	r0, r0, r0
10001bcc:	10005bb0 			; <UNDEFINED> instruction: 0x10005bb0

10001bd0 <fault_dump_handler>:
void fault_dump_handler(unsigned int *stack, unsigned int linker) {
10001bd0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10001bd2:	4605      	mov	r5, r0
10001bd4:	460e      	mov	r6, r1
    frame.manual.r4  = FD_STACK_READVAL(point);
10001bd6:	6803      	ldr	r3, [r0, #0]
10001bd8:	4c46      	ldr	r4, [pc, #280]	; (10001cf4 <fault_dump_handler+0x124>)
10001bda:	6023      	str	r3, [r4, #0]
    frame.manual.r5  = FD_STACK_READVAL(point);
10001bdc:	6843      	ldr	r3, [r0, #4]
10001bde:	6063      	str	r3, [r4, #4]
    frame.manual.r6  = FD_STACK_READVAL(point);
10001be0:	6883      	ldr	r3, [r0, #8]
10001be2:	60a3      	str	r3, [r4, #8]
    frame.manual.r7  = FD_STACK_READVAL(point);
10001be4:	68c3      	ldr	r3, [r0, #12]
10001be6:	60e3      	str	r3, [r4, #12]
    frame.manual.r8  = FD_STACK_READVAL(point);
10001be8:	6903      	ldr	r3, [r0, #16]
10001bea:	6123      	str	r3, [r4, #16]
    frame.manual.r9  = FD_STACK_READVAL(point);
10001bec:	6943      	ldr	r3, [r0, #20]
10001bee:	6163      	str	r3, [r4, #20]
    frame.manual.r10 = FD_STACK_READVAL(point);
10001bf0:	6983      	ldr	r3, [r0, #24]
10001bf2:	61a3      	str	r3, [r4, #24]
    frame.manual.r11 = FD_STACK_READVAL(point);
10001bf4:	69c3      	ldr	r3, [r0, #28]
10001bf6:	61e3      	str	r3, [r4, #28]
    frame.except.r0  = FD_STACK_READVAL(point);
10001bf8:	6a03      	ldr	r3, [r0, #32]
10001bfa:	6223      	str	r3, [r4, #32]
    frame.except.r1  = FD_STACK_READVAL(point);
10001bfc:	6a43      	ldr	r3, [r0, #36]	; 0x24
10001bfe:	6263      	str	r3, [r4, #36]	; 0x24
    frame.except.r2  = FD_STACK_READVAL(point);
10001c00:	6a83      	ldr	r3, [r0, #40]	; 0x28
10001c02:	62a3      	str	r3, [r4, #40]	; 0x28
    frame.except.r3  = FD_STACK_READVAL(point);
10001c04:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
10001c06:	62e3      	str	r3, [r4, #44]	; 0x2c
    frame.except.r12 = FD_STACK_READVAL(point);
10001c08:	6b03      	ldr	r3, [r0, #48]	; 0x30
10001c0a:	6323      	str	r3, [r4, #48]	; 0x30
    frame.except.lr  = FD_STACK_READVAL(point);
10001c0c:	6b43      	ldr	r3, [r0, #52]	; 0x34
10001c0e:	6363      	str	r3, [r4, #52]	; 0x34
    frame.except.pc  = FD_STACK_READVAL(point);
10001c10:	6b83      	ldr	r3, [r0, #56]	; 0x38
10001c12:	63a3      	str	r3, [r4, #56]	; 0x38
    frame.except.psr = FD_STACK_READVAL(point);
10001c14:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
10001c16:	63e3      	str	r3, [r4, #60]	; 0x3c
    printf("\r\n");
10001c18:	4f37      	ldr	r7, [pc, #220]	; (10001cf8 <fault_dump_handler+0x128>)
10001c1a:	4638      	mov	r0, r7
10001c1c:	f7ff ff12 	bl	10001a44 <puts>
    printf(" HardFault Information Dump \r\n");
10001c20:	4836      	ldr	r0, [pc, #216]	; (10001cfc <fault_dump_handler+0x12c>)
10001c22:	f7ff ff0f 	bl	10001a44 <puts>
    printf(" Stack Frame   \r\n");
10001c26:	4836      	ldr	r0, [pc, #216]	; (10001d00 <fault_dump_handler+0x130>)
10001c28:	f7ff ff0c 	bl	10001a44 <puts>
    printf(" R0   = 0x%08X \r\n", (unsigned int)frame.except.r0);
10001c2c:	6a21      	ldr	r1, [r4, #32]
10001c2e:	4835      	ldr	r0, [pc, #212]	; (10001d04 <fault_dump_handler+0x134>)
10001c30:	f7ff fee8 	bl	10001a04 <printf>
    printf(" R1   = 0x%08X \r\n", (unsigned int)frame.except.r1);
10001c34:	6a61      	ldr	r1, [r4, #36]	; 0x24
10001c36:	4834      	ldr	r0, [pc, #208]	; (10001d08 <fault_dump_handler+0x138>)
10001c38:	f7ff fee4 	bl	10001a04 <printf>
    printf(" R2   = 0x%08X \r\n", (unsigned int)frame.except.r2);
10001c3c:	6aa1      	ldr	r1, [r4, #40]	; 0x28
10001c3e:	4833      	ldr	r0, [pc, #204]	; (10001d0c <fault_dump_handler+0x13c>)
10001c40:	f7ff fee0 	bl	10001a04 <printf>
    printf(" R3   = 0x%08X \r\n", (unsigned int)frame.except.r3);
10001c44:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
10001c46:	4832      	ldr	r0, [pc, #200]	; (10001d10 <fault_dump_handler+0x140>)
10001c48:	f7ff fedc 	bl	10001a04 <printf>
    printf(" R4   = 0x%08X \r\n", (unsigned int)frame.manual.r4);
10001c4c:	6821      	ldr	r1, [r4, #0]
10001c4e:	4831      	ldr	r0, [pc, #196]	; (10001d14 <fault_dump_handler+0x144>)
10001c50:	f7ff fed8 	bl	10001a04 <printf>
    printf(" R5   = 0x%08X \r\n", (unsigned int)frame.manual.r5);
10001c54:	6861      	ldr	r1, [r4, #4]
10001c56:	4830      	ldr	r0, [pc, #192]	; (10001d18 <fault_dump_handler+0x148>)
10001c58:	f7ff fed4 	bl	10001a04 <printf>
    printf(" R6   = 0x%08X \r\n", (unsigned int)frame.manual.r6);
10001c5c:	68a1      	ldr	r1, [r4, #8]
10001c5e:	482f      	ldr	r0, [pc, #188]	; (10001d1c <fault_dump_handler+0x14c>)
10001c60:	f7ff fed0 	bl	10001a04 <printf>
    printf(" R7   = 0x%08X \r\n", (unsigned int)frame.manual.r7);
10001c64:	68e1      	ldr	r1, [r4, #12]
10001c66:	482e      	ldr	r0, [pc, #184]	; (10001d20 <fault_dump_handler+0x150>)
10001c68:	f7ff fecc 	bl	10001a04 <printf>
    printf(" R8   = 0x%08X \r\n", (unsigned int)frame.manual.r8);
10001c6c:	6921      	ldr	r1, [r4, #16]
10001c6e:	482d      	ldr	r0, [pc, #180]	; (10001d24 <fault_dump_handler+0x154>)
10001c70:	f7ff fec8 	bl	10001a04 <printf>
    printf(" R9   = 0x%08X \r\n", (unsigned int)frame.manual.r9);
10001c74:	6961      	ldr	r1, [r4, #20]
10001c76:	482c      	ldr	r0, [pc, #176]	; (10001d28 <fault_dump_handler+0x158>)
10001c78:	f7ff fec4 	bl	10001a04 <printf>
    printf(" R10  = 0x%08X \r\n", (unsigned int)frame.manual.r10);
10001c7c:	69a1      	ldr	r1, [r4, #24]
10001c7e:	482b      	ldr	r0, [pc, #172]	; (10001d2c <fault_dump_handler+0x15c>)
10001c80:	f7ff fec0 	bl	10001a04 <printf>
    printf(" R11  = 0x%08X \r\n", (unsigned int)frame.manual.r11);
10001c84:	69e1      	ldr	r1, [r4, #28]
10001c86:	482a      	ldr	r0, [pc, #168]	; (10001d30 <fault_dump_handler+0x160>)
10001c88:	f7ff febc 	bl	10001a04 <printf>
    printf(" R12  = 0x%08X \r\n", (unsigned int)frame.except.r12);
10001c8c:	6b21      	ldr	r1, [r4, #48]	; 0x30
10001c8e:	4829      	ldr	r0, [pc, #164]	; (10001d34 <fault_dump_handler+0x164>)
10001c90:	f7ff feb8 	bl	10001a04 <printf>
    printf(" LR   = 0x%08X \r\n", (unsigned int)frame.except.lr);
10001c94:	6b61      	ldr	r1, [r4, #52]	; 0x34
10001c96:	4828      	ldr	r0, [pc, #160]	; (10001d38 <fault_dump_handler+0x168>)
10001c98:	f7ff feb4 	bl	10001a04 <printf>
    printf(" PC   = 0x%08X \r\n", (unsigned int)frame.except.pc);
10001c9c:	6ba1      	ldr	r1, [r4, #56]	; 0x38
10001c9e:	4827      	ldr	r0, [pc, #156]	; (10001d3c <fault_dump_handler+0x16c>)
10001ca0:	f7ff feb0 	bl	10001a04 <printf>
    printf(" PSR  = 0x%08X \r\n", (unsigned int)frame.except.psr);
10001ca4:	6be1      	ldr	r1, [r4, #60]	; 0x3c
10001ca6:	4826      	ldr	r0, [pc, #152]	; (10001d40 <fault_dump_handler+0x170>)
10001ca8:	f7ff feac 	bl	10001a04 <printf>
    printf("\r\n");
10001cac:	4638      	mov	r0, r7
10001cae:	f7ff fec9 	bl	10001a44 <puts>
    dump_exc_return(linker);
10001cb2:	4630      	mov	r0, r6
10001cb4:	f7ff ff1a 	bl	10001aec <dump_exc_return>
    count = fault_dump_callstack(buffer, FD_STACK_DUMP_DEPTH_MAX, 
10001cb8:	4b22      	ldr	r3, [pc, #136]	; (10001d44 <fault_dump_handler+0x174>)
10001cba:	f105 0240 	add.w	r2, r5, #64	; 0x40
10001cbe:	2140      	movs	r1, #64	; 0x40
10001cc0:	4821      	ldr	r0, [pc, #132]	; (10001d48 <fault_dump_handler+0x178>)
10001cc2:	f7ff ff47 	bl	10001b54 <fault_dump_callstack>
10001cc6:	4605      	mov	r5, r0
    printf(" Stack Call: ");
10001cc8:	4820      	ldr	r0, [pc, #128]	; (10001d4c <fault_dump_handler+0x17c>)
10001cca:	f7ff fe9b 	bl	10001a04 <printf>
    printf("%08X ", (unsigned int)frame.except.pc);
10001cce:	6ba1      	ldr	r1, [r4, #56]	; 0x38
10001cd0:	481f      	ldr	r0, [pc, #124]	; (10001d50 <fault_dump_handler+0x180>)
10001cd2:	f7ff fe97 	bl	10001a04 <printf>
    for (index = 0; index < count; index++) {
10001cd6:	2400      	movs	r4, #0
10001cd8:	e006      	b.n	10001ce8 <fault_dump_handler+0x118>
        printf("%08X ", buffer[index]);
10001cda:	4b1b      	ldr	r3, [pc, #108]	; (10001d48 <fault_dump_handler+0x178>)
10001cdc:	f853 1024 	ldr.w	r1, [r3, r4, lsl #2]
10001ce0:	481b      	ldr	r0, [pc, #108]	; (10001d50 <fault_dump_handler+0x180>)
10001ce2:	f7ff fe8f 	bl	10001a04 <printf>
    for (index = 0; index < count; index++) {
10001ce6:	3401      	adds	r4, #1
10001ce8:	42ac      	cmp	r4, r5
10001cea:	dbf6      	blt.n	10001cda <fault_dump_handler+0x10a>
    printf("\r\n");
10001cec:	4802      	ldr	r0, [pc, #8]	; (10001cf8 <fault_dump_handler+0x128>)
10001cee:	f7ff fea9 	bl	10001a44 <puts>
    while (1);
10001cf2:	e7fe      	b.n	10001cf2 <fault_dump_handler+0x122>
10001cf4:	38008570 	stmdacc	r0, {r4, r5, r6, r8, sl, pc}
10001cf8:	10005814 	andne	r5, r0, r4, lsl r8
10001cfc:	100057f8 	strdne	r5, [r0], -r8
10001d00:	10005818 	andne	r5, r0, r8, lsl r8
10001d04:	1000582c 	andne	r5, r0, ip, lsr #16
10001d08:	10005840 	andne	r5, r0, r0, asr #16
10001d0c:	10005854 	andne	r5, r0, r4, asr r8
10001d10:	10005868 	andne	r5, r0, r8, ror #16
10001d14:	1000587c 	andne	r5, r0, ip, ror r8
10001d18:	10005890 	mulne	r0, r0, r8
10001d1c:	100058a4 	andne	r5, r0, r4, lsr #17
10001d20:	100058b8 			; <UNDEFINED> instruction: 0x100058b8
10001d24:	100058cc 	andne	r5, r0, ip, asr #17
10001d28:	100058e0 	andne	r5, r0, r0, ror #17
10001d2c:	100058f4 	strdne	r5, [r0], -r4
10001d30:	10005908 	andne	r5, r0, r8, lsl #18
10001d34:	1000591c 	andne	r5, r0, ip, lsl r9
10001d38:	10005930 	andne	r5, r0, r0, lsr r9
10001d3c:	10005944 	andne	r5, r0, r4, asr #18
10001d40:	10005958 	andne	r5, r0, r8, asr r9
10001d44:	38100000 	ldmdacc	r0, {}	; <UNPREDICTABLE>
10001d48:	38008468 	stmdacc	r0, {r3, r5, r6, sl, pc}
10001d4c:	1000596c 	andne	r5, r0, ip, ror #18
10001d50:	1000597c 	andne	r5, r0, ip, ror r9

10001d54 <fault_dump_exc_return>:
  *
  ******************************************************************************
  */
#include "fault-dump.h"

void fault_dump_exc_return(unsigned int exc_return) {
10001d54:	b510      	push	{r4, lr}
10001d56:	4604      	mov	r4, r0
    printf(" \r\n");
10001d58:	482a      	ldr	r0, [pc, #168]	; (10001e04 <fault_dump_exc_return+0xb0>)
10001d5a:	f7ff fe73 	bl	10001a44 <puts>
    printf(" Bit0 Except Security State: ");
10001d5e:	482a      	ldr	r0, [pc, #168]	; (10001e08 <fault_dump_exc_return+0xb4>)
10001d60:	f7ff fe50 	bl	10001a04 <printf>
    if (FD_CHECK_BIT(exc_return, 0)) {
10001d64:	f014 0f01 	tst.w	r4, #1
10001d68:	d033      	beq.n	10001dd2 <fault_dump_exc_return+0x7e>
        printf("[Use Security State    ].\r\n");
10001d6a:	4828      	ldr	r0, [pc, #160]	; (10001e0c <fault_dump_exc_return+0xb8>)
10001d6c:	f7ff fe6a 	bl	10001a44 <puts>
    } else {
        printf("[Use Not Security State].\r\n");
    }
    printf(" Bit2 Stack Point Select:    ");
10001d70:	4827      	ldr	r0, [pc, #156]	; (10001e10 <fault_dump_exc_return+0xbc>)
10001d72:	f7ff fe47 	bl	10001a04 <printf>
    if (FD_CHECK_BIT(exc_return, 2)) {
10001d76:	f014 0f04 	tst.w	r4, #4
10001d7a:	d02e      	beq.n	10001dda <fault_dump_exc_return+0x86>
        printf("[Use PSP               ].\r\n");
10001d7c:	4825      	ldr	r0, [pc, #148]	; (10001e14 <fault_dump_exc_return+0xc0>)
10001d7e:	f7ff fe61 	bl	10001a44 <puts>
    } else {
        printf("[Use MSP               ].\r\n");
    }
    printf(" Bit3 Proc Mode Before IRQ:  ");
10001d82:	4825      	ldr	r0, [pc, #148]	; (10001e18 <fault_dump_exc_return+0xc4>)
10001d84:	f7ff fe3e 	bl	10001a04 <printf>
    if (FD_CHECK_BIT(exc_return, 3)) {
10001d88:	f014 0f08 	tst.w	r4, #8
10001d8c:	d029      	beq.n	10001de2 <fault_dump_exc_return+0x8e>
        printf("[Use Thread Mode       ].\r\n");
10001d8e:	4823      	ldr	r0, [pc, #140]	; (10001e1c <fault_dump_exc_return+0xc8>)
10001d90:	f7ff fe58 	bl	10001a44 <puts>
    } else {
        printf("[Use Process Mode      ].\r\n");
    }
    printf(" Bit4 Stack Frame Type:      ");
10001d94:	4822      	ldr	r0, [pc, #136]	; (10001e20 <fault_dump_exc_return+0xcc>)
10001d96:	f7ff fe35 	bl	10001a04 <printf>
    if (FD_CHECK_BIT(exc_return, 4)) {
10001d9a:	f014 0f10 	tst.w	r4, #16
10001d9e:	d024      	beq.n	10001dea <fault_dump_exc_return+0x96>
        printf("[Use Standard Frame    ].\r\n");
10001da0:	4820      	ldr	r0, [pc, #128]	; (10001e24 <fault_dump_exc_return+0xd0>)
10001da2:	f7ff fe4f 	bl	10001a44 <puts>
    } else {
        printf("[Use Extended Frame    ].\r\n");
    }
    printf(" Bit5 Default Call Rule:     ");
10001da6:	4820      	ldr	r0, [pc, #128]	; (10001e28 <fault_dump_exc_return+0xd4>)
10001da8:	f7ff fe2c 	bl	10001a04 <printf>
    if (FD_CHECK_BIT(exc_return, 5)) {
10001dac:	f014 0f20 	tst.w	r4, #32
10001db0:	d01f      	beq.n	10001df2 <fault_dump_exc_return+0x9e>
        printf("[Use Default Rule      ].\r\n");
10001db2:	481e      	ldr	r0, [pc, #120]	; (10001e2c <fault_dump_exc_return+0xd8>)
10001db4:	f7ff fe46 	bl	10001a44 <puts>
    } else {
        printf("[Use Not Default Rule  ].\r\n");
    }
    printf(" Bit6 Security Stack:        ");
10001db8:	481d      	ldr	r0, [pc, #116]	; (10001e30 <fault_dump_exc_return+0xdc>)
10001dba:	f7ff fe23 	bl	10001a04 <printf>
    if (FD_CHECK_BIT(exc_return, 6)) {
10001dbe:	f014 0f40 	tst.w	r4, #64	; 0x40
10001dc2:	d01a      	beq.n	10001dfa <fault_dump_exc_return+0xa6>
        printf("[Use Security Stack    ].\r\n");
10001dc4:	481b      	ldr	r0, [pc, #108]	; (10001e34 <fault_dump_exc_return+0xe0>)
10001dc6:	f7ff fe3d 	bl	10001a44 <puts>
    } else {
        printf("[Use Not Security Stack].\r\n");
    }
    printf(" \r\n");
10001dca:	480e      	ldr	r0, [pc, #56]	; (10001e04 <fault_dump_exc_return+0xb0>)
10001dcc:	f7ff fe3a 	bl	10001a44 <puts>
}
10001dd0:	bd10      	pop	{r4, pc}
        printf("[Use Not Security State].\r\n");
10001dd2:	4819      	ldr	r0, [pc, #100]	; (10001e38 <fault_dump_exc_return+0xe4>)
10001dd4:	f7ff fe36 	bl	10001a44 <puts>
10001dd8:	e7ca      	b.n	10001d70 <fault_dump_exc_return+0x1c>
        printf("[Use MSP               ].\r\n");
10001dda:	4818      	ldr	r0, [pc, #96]	; (10001e3c <fault_dump_exc_return+0xe8>)
10001ddc:	f7ff fe32 	bl	10001a44 <puts>
10001de0:	e7cf      	b.n	10001d82 <fault_dump_exc_return+0x2e>
        printf("[Use Process Mode      ].\r\n");
10001de2:	4817      	ldr	r0, [pc, #92]	; (10001e40 <fault_dump_exc_return+0xec>)
10001de4:	f7ff fe2e 	bl	10001a44 <puts>
10001de8:	e7d4      	b.n	10001d94 <fault_dump_exc_return+0x40>
        printf("[Use Extended Frame    ].\r\n");
10001dea:	4816      	ldr	r0, [pc, #88]	; (10001e44 <fault_dump_exc_return+0xf0>)
10001dec:	f7ff fe2a 	bl	10001a44 <puts>
10001df0:	e7d9      	b.n	10001da6 <fault_dump_exc_return+0x52>
        printf("[Use Not Default Rule  ].\r\n");
10001df2:	4815      	ldr	r0, [pc, #84]	; (10001e48 <fault_dump_exc_return+0xf4>)
10001df4:	f7ff fe26 	bl	10001a44 <puts>
10001df8:	e7de      	b.n	10001db8 <fault_dump_exc_return+0x64>
        printf("[Use Not Security Stack].\r\n");
10001dfa:	4814      	ldr	r0, [pc, #80]	; (10001e4c <fault_dump_exc_return+0xf8>)
10001dfc:	f7ff fe22 	bl	10001a44 <puts>
10001e00:	e7e3      	b.n	10001dca <fault_dump_exc_return+0x76>
10001e02:	bf00      	nop
10001e04:	10005984 	andne	r5, r0, r4, lsl #19
10001e08:	10005988 	andne	r5, r0, r8, lsl #19
10001e0c:	100059a8 	andne	r5, r0, r8, lsr #19
10001e10:	100059e0 	andne	r5, r0, r0, ror #19
10001e14:	10005a00 	andne	r5, r0, r0, lsl #20
10001e18:	10005a38 	andne	r5, r0, r8, lsr sl
10001e1c:	10005a58 	andne	r5, r0, r8, asr sl
10001e20:	10005a90 	mulne	r0, r0, sl
10001e24:	10005ab0 			; <UNDEFINED> instruction: 0x10005ab0
10001e28:	10005ae8 	andne	r5, r0, r8, ror #21
10001e2c:	10005b08 	andne	r5, r0, r8, lsl #22
10001e30:	10005b40 	andne	r5, r0, r0, asr #22
10001e34:	10005b60 	andne	r5, r0, r0, ror #22
10001e38:	100059c4 	andne	r5, r0, r4, asr #19
10001e3c:	10005a1c 	andne	r5, r0, ip, lsl sl
10001e40:	10005a74 	andne	r5, r0, r4, ror sl
10001e44:	10005acc 	andne	r5, r0, ip, asr #21
10001e48:	10005b24 	andne	r5, r0, r4, lsr #22
10001e4c:	10005b7c 	andne	r5, r0, ip, ror fp

10001e50 <vListInitialise>:
    traceENTER_vListInitialise( pxList );

    /* The list structure contains a list item which is used to mark the
     * end of the list.  To initialise the list the list end is inserted
     * as the only list entry. */
    pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );
10001e50:	f100 0308 	add.w	r3, r0, #8
10001e54:	6043      	str	r3, [r0, #4]

    listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( &( pxList->xListEnd ) );

    /* The list end value is the highest possible value in the list to
     * ensure it remains at the end of the list. */
    pxList->xListEnd.xItemValue = portMAX_DELAY;
10001e56:	f04f 32ff 	mov.w	r2, #4294967295
10001e5a:	6082      	str	r2, [r0, #8]

    /* The list end next and previous pointers point to itself so we know
     * when the list is empty. */
    pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );
10001e5c:	60c3      	str	r3, [r0, #12]
    pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );
10001e5e:	6103      	str	r3, [r0, #16]

    /* Initialize the remaining fields of xListEnd when it is a proper ListItem_t */
    #if ( configUSE_MINI_LIST_ITEM == 0 )
    {
        pxList->xListEnd.pvOwner = NULL;
10001e60:	2300      	movs	r3, #0
10001e62:	6143      	str	r3, [r0, #20]
        pxList->xListEnd.pxContainer = NULL;
10001e64:	6183      	str	r3, [r0, #24]
        listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( &( pxList->xListEnd ) );
    }
    #endif

    pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
10001e66:	6003      	str	r3, [r0, #0]
     * configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
    listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
    listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );

    traceRETURN_vListInitialise();
}
10001e68:	4770      	bx	lr

10001e6a <vListInitialiseItem>:
void vListInitialiseItem( ListItem_t * const pxItem )
{
    traceENTER_vListInitialiseItem( pxItem );

    /* Make sure the list item is not recorded as being on a list. */
    pxItem->pxContainer = NULL;
10001e6a:	2300      	movs	r3, #0
10001e6c:	6103      	str	r3, [r0, #16]
     * configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
    listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
    listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );

    traceRETURN_vListInitialiseItem();
}
10001e6e:	4770      	bx	lr

10001e70 <vListInsert>:
}
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList,
                  ListItem_t * const pxNewListItem )
{
10001e70:	b430      	push	{r4, r5}
    ListItem_t * pxIterator;
    const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
10001e72:	680d      	ldr	r5, [r1, #0]
     * new list item should be placed after it.  This ensures that TCBs which are
     * stored in ready lists (all of which have the same xItemValue value) get a
     * share of the CPU.  However, if the xItemValue is the same as the back marker
     * the iteration loop below will not end.  Therefore the value is checked
     * first, and the algorithm slightly modified if necessary. */
    if( xValueOfInsertion == portMAX_DELAY )
10001e74:	f1b5 3fff 	cmp.w	r5, #4294967295
10001e78:	d011      	beq.n	10001e9e <vListInsert+0x2e>
        *   5) If the FreeRTOS port supports interrupt nesting then ensure that
        *      the priority of the tick interrupt is at or below
        *      configMAX_SYSCALL_INTERRUPT_PRIORITY.
        **********************************************************************/

        for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext )
10001e7a:	f100 0308 	add.w	r3, r0, #8
10001e7e:	461c      	mov	r4, r3
10001e80:	685b      	ldr	r3, [r3, #4]
10001e82:	681a      	ldr	r2, [r3, #0]
10001e84:	42aa      	cmp	r2, r5
10001e86:	d9fa      	bls.n	10001e7e <vListInsert+0xe>
            /* There is nothing to do here, just iterating to the wanted
             * insertion position. */
        }
    }

    pxNewListItem->pxNext = pxIterator->pxNext;
10001e88:	6863      	ldr	r3, [r4, #4]
10001e8a:	604b      	str	r3, [r1, #4]
    pxNewListItem->pxNext->pxPrevious = pxNewListItem;
10001e8c:	6099      	str	r1, [r3, #8]
    pxNewListItem->pxPrevious = pxIterator;
10001e8e:	608c      	str	r4, [r1, #8]
    pxIterator->pxNext = pxNewListItem;
10001e90:	6061      	str	r1, [r4, #4]

    /* Remember which list the item is in.  This allows fast removal of the
     * item later. */
    pxNewListItem->pxContainer = pxList;
10001e92:	6108      	str	r0, [r1, #16]

    ( pxList->uxNumberOfItems ) = ( UBaseType_t ) ( pxList->uxNumberOfItems + 1U );
10001e94:	6803      	ldr	r3, [r0, #0]
10001e96:	3301      	adds	r3, #1
10001e98:	6003      	str	r3, [r0, #0]

    traceRETURN_vListInsert();
}
10001e9a:	bc30      	pop	{r4, r5}
10001e9c:	4770      	bx	lr
        pxIterator = pxList->xListEnd.pxPrevious;
10001e9e:	6904      	ldr	r4, [r0, #16]
10001ea0:	e7f2      	b.n	10001e88 <vListInsert+0x18>

10001ea2 <uxListRemove>:

UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
{
    /* The list item knows which list it is in.  Obtain the list from the list
     * item. */
    List_t * const pxList = pxItemToRemove->pxContainer;
10001ea2:	6903      	ldr	r3, [r0, #16]

    traceENTER_uxListRemove( pxItemToRemove );

    pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
10001ea4:	6841      	ldr	r1, [r0, #4]
10001ea6:	6882      	ldr	r2, [r0, #8]
10001ea8:	608a      	str	r2, [r1, #8]
    pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
10001eaa:	6841      	ldr	r1, [r0, #4]
10001eac:	6051      	str	r1, [r2, #4]

    /* Only used during decision coverage testing. */
    mtCOVERAGE_TEST_DELAY();

    /* Make sure the index is left pointing to a valid item. */
    if( pxList->pxIndex == pxItemToRemove )
10001eae:	685a      	ldr	r2, [r3, #4]
10001eb0:	4282      	cmp	r2, r0
10001eb2:	d005      	beq.n	10001ec0 <uxListRemove+0x1e>
    else
    {
        mtCOVERAGE_TEST_MARKER();
    }

    pxItemToRemove->pxContainer = NULL;
10001eb4:	2200      	movs	r2, #0
10001eb6:	6102      	str	r2, [r0, #16]
    ( pxList->uxNumberOfItems ) = ( UBaseType_t ) ( pxList->uxNumberOfItems - 1U );
10001eb8:	6818      	ldr	r0, [r3, #0]
10001eba:	3801      	subs	r0, #1
10001ebc:	6018      	str	r0, [r3, #0]

    traceRETURN_uxListRemove( pxList->uxNumberOfItems );

    return pxList->uxNumberOfItems;
}
10001ebe:	4770      	bx	lr
        pxList->pxIndex = pxItemToRemove->pxPrevious;
10001ec0:	6882      	ldr	r2, [r0, #8]
10001ec2:	605a      	str	r2, [r3, #4]
10001ec4:	e7f6      	b.n	10001eb4 <uxListRemove+0x12>

10001ec6 <prvIsQueueEmpty>:
    taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t * pxQueue )
{
10001ec6:	b510      	push	{r4, lr}
10001ec8:	4604      	mov	r4, r0
    BaseType_t xReturn;

    taskENTER_CRITICAL();
10001eca:	f001 fb01 	bl	100034d0 <vPortEnterCritical>
    {
        if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0 )
10001ece:	6ca3      	ldr	r3, [r4, #72]	; 0x48
10001ed0:	b923      	cbnz	r3, 10001edc <prvIsQueueEmpty+0x16>
        {
            xReturn = pdTRUE;
10001ed2:	2401      	movs	r4, #1
        else
        {
            xReturn = pdFALSE;
        }
    }
    taskEXIT_CRITICAL();
10001ed4:	f001 fb0a 	bl	100034ec <vPortExitCritical>

    return xReturn;
}
10001ed8:	4620      	mov	r0, r4
10001eda:	bd10      	pop	{r4, pc}
            xReturn = pdFALSE;
10001edc:	2400      	movs	r4, #0
10001ede:	e7f9      	b.n	10001ed4 <prvIsQueueEmpty+0xe>

10001ee0 <prvCopyDataToQueue>:
{
10001ee0:	b570      	push	{r4, r5, r6, lr}
10001ee2:	4604      	mov	r4, r0
10001ee4:	4615      	mov	r5, r2
    uxMessagesWaiting = pxQueue->uxMessagesWaiting;
10001ee6:	6c86      	ldr	r6, [r0, #72]	; 0x48
    if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
10001ee8:	6d02      	ldr	r2, [r0, #80]	; 0x50
10001eea:	b95a      	cbnz	r2, 10001f04 <prvCopyDataToQueue+0x24>
            if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
10001eec:	6803      	ldr	r3, [r0, #0]
10001eee:	b11b      	cbz	r3, 10001ef8 <prvCopyDataToQueue+0x18>
    BaseType_t xReturn = pdFALSE;
10001ef0:	2000      	movs	r0, #0
    pxQueue->uxMessagesWaiting = ( UBaseType_t ) ( uxMessagesWaiting + ( UBaseType_t ) 1 );
10001ef2:	3601      	adds	r6, #1
10001ef4:	64a6      	str	r6, [r4, #72]	; 0x48
}
10001ef6:	bd70      	pop	{r4, r5, r6, pc}
                xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
10001ef8:	6880      	ldr	r0, [r0, #8]
10001efa:	f000 fed7 	bl	10002cac <xTaskPriorityDisinherit>
                pxQueue->u.xSemaphore.xMutexHolder = NULL;
10001efe:	2300      	movs	r3, #0
10001f00:	60a3      	str	r3, [r4, #8]
10001f02:	e7f6      	b.n	10001ef2 <prvCopyDataToQueue+0x12>
    else if( xPosition == queueSEND_TO_BACK )
10001f04:	b96d      	cbnz	r5, 10001f22 <prvCopyDataToQueue+0x42>
        ( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize );
10001f06:	6840      	ldr	r0, [r0, #4]
10001f08:	f001 fc5c 	bl	100037c4 <memcpy>
        pxQueue->pcWriteTo += pxQueue->uxItemSize;
10001f0c:	6d22      	ldr	r2, [r4, #80]	; 0x50
10001f0e:	6863      	ldr	r3, [r4, #4]
10001f10:	4413      	add	r3, r2
10001f12:	6063      	str	r3, [r4, #4]
        if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail )
10001f14:	68a2      	ldr	r2, [r4, #8]
10001f16:	4293      	cmp	r3, r2
10001f18:	d319      	bcc.n	10001f4e <prvCopyDataToQueue+0x6e>
            pxQueue->pcWriteTo = pxQueue->pcHead;
10001f1a:	6823      	ldr	r3, [r4, #0]
10001f1c:	6063      	str	r3, [r4, #4]
    BaseType_t xReturn = pdFALSE;
10001f1e:	4628      	mov	r0, r5
10001f20:	e7e7      	b.n	10001ef2 <prvCopyDataToQueue+0x12>
        ( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize );
10001f22:	68c0      	ldr	r0, [r0, #12]
10001f24:	f001 fc4e 	bl	100037c4 <memcpy>
        pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
10001f28:	6d22      	ldr	r2, [r4, #80]	; 0x50
10001f2a:	4251      	negs	r1, r2
10001f2c:	68e3      	ldr	r3, [r4, #12]
10001f2e:	1a9b      	subs	r3, r3, r2
10001f30:	60e3      	str	r3, [r4, #12]
        if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead )
10001f32:	6822      	ldr	r2, [r4, #0]
10001f34:	4293      	cmp	r3, r2
10001f36:	d202      	bcs.n	10001f3e <prvCopyDataToQueue+0x5e>
            pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
10001f38:	68a3      	ldr	r3, [r4, #8]
10001f3a:	440b      	add	r3, r1
10001f3c:	60e3      	str	r3, [r4, #12]
        if( xPosition == queueOVERWRITE )
10001f3e:	2d02      	cmp	r5, #2
10001f40:	d001      	beq.n	10001f46 <prvCopyDataToQueue+0x66>
    BaseType_t xReturn = pdFALSE;
10001f42:	2000      	movs	r0, #0
10001f44:	e7d5      	b.n	10001ef2 <prvCopyDataToQueue+0x12>
            if( uxMessagesWaiting > ( UBaseType_t ) 0 )
10001f46:	b126      	cbz	r6, 10001f52 <prvCopyDataToQueue+0x72>
                --uxMessagesWaiting;
10001f48:	3e01      	subs	r6, #1
    BaseType_t xReturn = pdFALSE;
10001f4a:	2000      	movs	r0, #0
10001f4c:	e7d1      	b.n	10001ef2 <prvCopyDataToQueue+0x12>
10001f4e:	4628      	mov	r0, r5
10001f50:	e7cf      	b.n	10001ef2 <prvCopyDataToQueue+0x12>
10001f52:	2000      	movs	r0, #0
10001f54:	e7cd      	b.n	10001ef2 <prvCopyDataToQueue+0x12>

10001f56 <prvCopyDataFromQueue>:
{
10001f56:	4603      	mov	r3, r0
    if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
10001f58:	6d02      	ldr	r2, [r0, #80]	; 0x50
10001f5a:	b16a      	cbz	r2, 10001f78 <prvCopyDataFromQueue+0x22>
{
10001f5c:	b510      	push	{r4, lr}
10001f5e:	4608      	mov	r0, r1
        pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize;
10001f60:	68d9      	ldr	r1, [r3, #12]
10001f62:	4411      	add	r1, r2
10001f64:	60d9      	str	r1, [r3, #12]
        if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail )
10001f66:	689c      	ldr	r4, [r3, #8]
10001f68:	42a1      	cmp	r1, r4
10001f6a:	d301      	bcc.n	10001f70 <prvCopyDataFromQueue+0x1a>
            pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
10001f6c:	6819      	ldr	r1, [r3, #0]
10001f6e:	60d9      	str	r1, [r3, #12]
        ( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize );
10001f70:	68d9      	ldr	r1, [r3, #12]
10001f72:	f001 fc27 	bl	100037c4 <memcpy>
}
10001f76:	bd10      	pop	{r4, pc}
10001f78:	4770      	bx	lr

10001f7a <prvNotifyQueueSetContainer>:
/*-----------------------------------------------------------*/

#if ( configUSE_QUEUE_SETS == 1 )

    static BaseType_t prvNotifyQueueSetContainer( const Queue_t * const pxQueue )
    {
10001f7a:	b570      	push	{r4, r5, r6, lr}
10001f7c:	b082      	sub	sp, #8
10001f7e:	9001      	str	r0, [sp, #4]
        Queue_t * pxQueueSetContainer = pxQueue->pxQueueSetContainer;
10001f80:	6d84      	ldr	r4, [r0, #88]	; 0x58
         * to prvNotifyQueueSetContainer is preceded by a check that
         * pxQueueSetContainer != NULL */
        configASSERT( pxQueueSetContainer ); /* LCOV_EXCL_BR_LINE */
        configASSERT( pxQueueSetContainer->uxMessagesWaiting < pxQueueSetContainer->uxLength );

        if( pxQueueSetContainer->uxMessagesWaiting < pxQueueSetContainer->uxLength )
10001f82:	6ca2      	ldr	r2, [r4, #72]	; 0x48
10001f84:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
10001f86:	429a      	cmp	r2, r3
10001f88:	d303      	bcc.n	10001f92 <prvNotifyQueueSetContainer+0x18>
        BaseType_t xReturn = pdFALSE;
10001f8a:	2500      	movs	r5, #0
        {
            mtCOVERAGE_TEST_MARKER();
        }

        return xReturn;
    }
10001f8c:	4628      	mov	r0, r5
10001f8e:	b002      	add	sp, #8
10001f90:	bd70      	pop	{r4, r5, r6, pc}
            const int8_t cTxLock = pxQueueSetContainer->cTxLock;
10001f92:	f894 6055 	ldrb.w	r6, [r4, #85]	; 0x55
10001f96:	b276      	sxtb	r6, r6
            xReturn = prvCopyDataToQueue( pxQueueSetContainer, &pxQueue, queueSEND_TO_BACK );
10001f98:	2200      	movs	r2, #0
10001f9a:	a901      	add	r1, sp, #4
10001f9c:	4620      	mov	r0, r4
10001f9e:	f7ff ff9f 	bl	10001ee0 <prvCopyDataToQueue>
10001fa2:	4605      	mov	r5, r0
            if( cTxLock == queueUNLOCKED )
10001fa4:	f1b6 3fff 	cmp.w	r6, #4294967295
10001fa8:	d10a      	bne.n	10001fc0 <prvNotifyQueueSetContainer+0x46>
                if( listLIST_IS_EMPTY( &( pxQueueSetContainer->xTasksWaitingToReceive ) ) == pdFALSE )
10001faa:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
10001fac:	2b00      	cmp	r3, #0
10001fae:	d0ed      	beq.n	10001f8c <prvNotifyQueueSetContainer+0x12>
                    if( xTaskRemoveFromEventList( &( pxQueueSetContainer->xTasksWaitingToReceive ) ) != pdFALSE )
10001fb0:	f104 002c 	add.w	r0, r4, #44	; 0x2c
10001fb4:	f000 fd94 	bl	10002ae0 <xTaskRemoveFromEventList>
10001fb8:	2800      	cmp	r0, #0
10001fba:	d0e7      	beq.n	10001f8c <prvNotifyQueueSetContainer+0x12>
                        xReturn = pdTRUE;
10001fbc:	2501      	movs	r5, #1
        return xReturn;
10001fbe:	e7e5      	b.n	10001f8c <prvNotifyQueueSetContainer+0x12>
                prvIncrementQueueTxLock( pxQueueSetContainer, cTxLock );
10001fc0:	f000 fb88 	bl	100026d4 <uxTaskGetNumberOfTasks>
10001fc4:	4286      	cmp	r6, r0
10001fc6:	d2e1      	bcs.n	10001f8c <prvNotifyQueueSetContainer+0x12>
10001fc8:	3601      	adds	r6, #1
10001fca:	b276      	sxtb	r6, r6
10001fcc:	f884 6055 	strb.w	r6, [r4, #85]	; 0x55
10001fd0:	e7dc      	b.n	10001f8c <prvNotifyQueueSetContainer+0x12>

10001fd2 <prvUnlockQueue>:
{
10001fd2:	b538      	push	{r3, r4, r5, lr}
10001fd4:	4605      	mov	r5, r0
    taskENTER_CRITICAL();
10001fd6:	f001 fa7b 	bl	100034d0 <vPortEnterCritical>
        int8_t cTxLock = pxQueue->cTxLock;
10001fda:	f895 4055 	ldrb.w	r4, [r5, #85]	; 0x55
10001fde:	b264      	sxtb	r4, r4
        while( cTxLock > queueLOCKED_UNMODIFIED )
10001fe0:	e008      	b.n	10001ff4 <prvUnlockQueue+0x22>
                    if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
10001fe2:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
10001fe4:	b1b3      	cbz	r3, 10002014 <prvUnlockQueue+0x42>
                        if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
10001fe6:	f105 002c 	add.w	r0, r5, #44	; 0x2c
10001fea:	f000 fd79 	bl	10002ae0 <xTaskRemoveFromEventList>
10001fee:	b970      	cbnz	r0, 1000200e <prvUnlockQueue+0x3c>
            --cTxLock;
10001ff0:	3c01      	subs	r4, #1
10001ff2:	b264      	sxtb	r4, r4
        while( cTxLock > queueLOCKED_UNMODIFIED )
10001ff4:	2c00      	cmp	r4, #0
10001ff6:	dd0d      	ble.n	10002014 <prvUnlockQueue+0x42>
                if( pxQueue->pxQueueSetContainer != NULL )
10001ff8:	6dab      	ldr	r3, [r5, #88]	; 0x58
10001ffa:	2b00      	cmp	r3, #0
10001ffc:	d0f1      	beq.n	10001fe2 <prvUnlockQueue+0x10>
                    if( prvNotifyQueueSetContainer( pxQueue ) != pdFALSE )
10001ffe:	4628      	mov	r0, r5
10002000:	f7ff ffbb 	bl	10001f7a <prvNotifyQueueSetContainer>
10002004:	2800      	cmp	r0, #0
10002006:	d0f3      	beq.n	10001ff0 <prvUnlockQueue+0x1e>
                        vTaskMissedYield();
10002008:	f000 fe26 	bl	10002c58 <vTaskMissedYield>
1000200c:	e7f0      	b.n	10001ff0 <prvUnlockQueue+0x1e>
                            vTaskMissedYield();
1000200e:	f000 fe23 	bl	10002c58 <vTaskMissedYield>
10002012:	e7ed      	b.n	10001ff0 <prvUnlockQueue+0x1e>
        pxQueue->cTxLock = queueUNLOCKED;
10002014:	23ff      	movs	r3, #255	; 0xff
10002016:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
    taskEXIT_CRITICAL();
1000201a:	f001 fa67 	bl	100034ec <vPortExitCritical>
    taskENTER_CRITICAL();
1000201e:	f001 fa57 	bl	100034d0 <vPortEnterCritical>
        int8_t cRxLock = pxQueue->cRxLock;
10002022:	f895 4054 	ldrb.w	r4, [r5, #84]	; 0x54
10002026:	b264      	sxtb	r4, r4
        while( cRxLock > queueLOCKED_UNMODIFIED )
10002028:	e001      	b.n	1000202e <prvUnlockQueue+0x5c>
                --cRxLock;
1000202a:	3c01      	subs	r4, #1
1000202c:	b264      	sxtb	r4, r4
        while( cRxLock > queueLOCKED_UNMODIFIED )
1000202e:	2c00      	cmp	r4, #0
10002030:	dd0a      	ble.n	10002048 <prvUnlockQueue+0x76>
            if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
10002032:	692b      	ldr	r3, [r5, #16]
10002034:	b143      	cbz	r3, 10002048 <prvUnlockQueue+0x76>
                if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
10002036:	f105 0010 	add.w	r0, r5, #16
1000203a:	f000 fd51 	bl	10002ae0 <xTaskRemoveFromEventList>
1000203e:	2800      	cmp	r0, #0
10002040:	d0f3      	beq.n	1000202a <prvUnlockQueue+0x58>
                    vTaskMissedYield();
10002042:	f000 fe09 	bl	10002c58 <vTaskMissedYield>
10002046:	e7f0      	b.n	1000202a <prvUnlockQueue+0x58>
        pxQueue->cRxLock = queueUNLOCKED;
10002048:	23ff      	movs	r3, #255	; 0xff
1000204a:	f885 3054 	strb.w	r3, [r5, #84]	; 0x54
    taskEXIT_CRITICAL();
1000204e:	f001 fa4d 	bl	100034ec <vPortExitCritical>
}
10002052:	bd38      	pop	{r3, r4, r5, pc}

10002054 <xQueueGenericReset>:
    if( ( pxQueue != NULL ) &&
10002054:	2800      	cmp	r0, #0
10002056:	d03c      	beq.n	100020d2 <xQueueGenericReset+0x7e>
{
10002058:	b538      	push	{r3, r4, r5, lr}
1000205a:	460d      	mov	r5, r1
1000205c:	4604      	mov	r4, r0
        ( pxQueue->uxLength >= 1U ) &&
1000205e:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
    if( ( pxQueue != NULL ) &&
10002060:	2b00      	cmp	r3, #0
10002062:	d038      	beq.n	100020d6 <xQueueGenericReset+0x82>
        ( ( SIZE_MAX / pxQueue->uxLength ) >= pxQueue->uxItemSize ) )
10002064:	6d02      	ldr	r2, [r0, #80]	; 0x50
10002066:	2100      	movs	r1, #0
10002068:	fba3 2302 	umull	r2, r3, r3, r2
1000206c:	b913      	cbnz	r3, 10002074 <xQueueGenericReset+0x20>
        ( pxQueue->uxLength >= 1U ) &&
1000206e:	b119      	cbz	r1, 10002078 <xQueueGenericReset+0x24>
        xReturn = pdFAIL;
10002070:	2000      	movs	r0, #0
    return xReturn;
10002072:	e031      	b.n	100020d8 <xQueueGenericReset+0x84>
        ( ( SIZE_MAX / pxQueue->uxLength ) >= pxQueue->uxItemSize ) )
10002074:	2101      	movs	r1, #1
10002076:	e7fa      	b.n	1000206e <xQueueGenericReset+0x1a>
        taskENTER_CRITICAL();
10002078:	f001 fa2a 	bl	100034d0 <vPortEnterCritical>
            pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize );
1000207c:	6823      	ldr	r3, [r4, #0]
1000207e:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
10002080:	6d21      	ldr	r1, [r4, #80]	; 0x50
10002082:	fb01 3002 	mla	r0, r1, r2, r3
10002086:	60a0      	str	r0, [r4, #8]
            pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
10002088:	2000      	movs	r0, #0
1000208a:	64a0      	str	r0, [r4, #72]	; 0x48
            pxQueue->pcWriteTo = pxQueue->pcHead;
1000208c:	6063      	str	r3, [r4, #4]
            pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize );
1000208e:	3a01      	subs	r2, #1
10002090:	fb02 3301 	mla	r3, r2, r1, r3
10002094:	60e3      	str	r3, [r4, #12]
            pxQueue->cRxLock = queueUNLOCKED;
10002096:	23ff      	movs	r3, #255	; 0xff
10002098:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
            pxQueue->cTxLock = queueUNLOCKED;
1000209c:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
            if( xNewQueue == pdFALSE )
100020a0:	b975      	cbnz	r5, 100020c0 <xQueueGenericReset+0x6c>
                if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
100020a2:	6923      	ldr	r3, [r4, #16]
100020a4:	b91b      	cbnz	r3, 100020ae <xQueueGenericReset+0x5a>
        taskEXIT_CRITICAL();
100020a6:	f001 fa21 	bl	100034ec <vPortExitCritical>
    BaseType_t xReturn = pdPASS;
100020aa:	2001      	movs	r0, #1
        taskEXIT_CRITICAL();
100020ac:	e014      	b.n	100020d8 <xQueueGenericReset+0x84>
                    if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
100020ae:	f104 0010 	add.w	r0, r4, #16
100020b2:	f000 fd15 	bl	10002ae0 <xTaskRemoveFromEventList>
100020b6:	2800      	cmp	r0, #0
100020b8:	d0f5      	beq.n	100020a6 <xQueueGenericReset+0x52>
                        queueYIELD_IF_USING_PREEMPTION();
100020ba:	f001 f9fd 	bl	100034b8 <vPortYield>
100020be:	e7f2      	b.n	100020a6 <xQueueGenericReset+0x52>
                vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
100020c0:	f104 0010 	add.w	r0, r4, #16
100020c4:	f7ff fec4 	bl	10001e50 <vListInitialise>
                vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
100020c8:	f104 002c 	add.w	r0, r4, #44	; 0x2c
100020cc:	f7ff fec0 	bl	10001e50 <vListInitialise>
100020d0:	e7e9      	b.n	100020a6 <xQueueGenericReset+0x52>
        xReturn = pdFAIL;
100020d2:	2000      	movs	r0, #0
}
100020d4:	4770      	bx	lr
        xReturn = pdFAIL;
100020d6:	2000      	movs	r0, #0
}
100020d8:	bd38      	pop	{r3, r4, r5, pc}

100020da <prvInitialiseNewQueue>:
{
100020da:	b510      	push	{r4, lr}
100020dc:	9c02      	ldr	r4, [sp, #8]
    if( uxItemSize == ( UBaseType_t ) 0 )
100020de:	460b      	mov	r3, r1
100020e0:	b949      	cbnz	r1, 100020f6 <prvInitialiseNewQueue+0x1c>
        pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
100020e2:	6024      	str	r4, [r4, #0]
    pxNewQueue->uxLength = uxQueueLength;
100020e4:	64e0      	str	r0, [r4, #76]	; 0x4c
    pxNewQueue->uxItemSize = uxItemSize;
100020e6:	6523      	str	r3, [r4, #80]	; 0x50
    ( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
100020e8:	2101      	movs	r1, #1
100020ea:	4620      	mov	r0, r4
100020ec:	f7ff ffb2 	bl	10002054 <xQueueGenericReset>
        pxNewQueue->pxQueueSetContainer = NULL;
100020f0:	2300      	movs	r3, #0
100020f2:	65a3      	str	r3, [r4, #88]	; 0x58
}
100020f4:	bd10      	pop	{r4, pc}
        pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
100020f6:	6022      	str	r2, [r4, #0]
100020f8:	e7f4      	b.n	100020e4 <prvInitialiseNewQueue+0xa>

100020fa <xQueueGenericCreateStatic>:
        if( ( uxQueueLength > ( UBaseType_t ) 0 ) &&
100020fa:	b1b8      	cbz	r0, 1000212c <xQueueGenericCreateStatic+0x32>
    {
100020fc:	b510      	push	{r4, lr}
100020fe:	b082      	sub	sp, #8
10002100:	461c      	mov	r4, r3
10002102:	4684      	mov	ip, r0
        if( ( uxQueueLength > ( UBaseType_t ) 0 ) &&
10002104:	b1a3      	cbz	r3, 10002130 <xQueueGenericCreateStatic+0x36>
            ( pxStaticQueue != NULL ) &&
10002106:	b102      	cbz	r2, 1000210a <xQueueGenericCreateStatic+0x10>
            ( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0U ) ) ) &&
10002108:	b1a1      	cbz	r1, 10002134 <xQueueGenericCreateStatic+0x3a>
1000210a:	b15a      	cbz	r2, 10002124 <xQueueGenericCreateStatic+0x2a>
                pxNewQueue->ucStaticallyAllocated = pdTRUE;
1000210c:	2301      	movs	r3, #1
1000210e:	f884 3056 	strb.w	r3, [r4, #86]	; 0x56
            prvInitialiseNewQueue( uxQueueLength, uxItemSize, pucQueueStorage, ucQueueType, pxNewQueue );
10002112:	9400      	str	r4, [sp, #0]
10002114:	f89d 3010 	ldrb.w	r3, [sp, #16]
10002118:	4660      	mov	r0, ip
1000211a:	f7ff ffde 	bl	100020da <prvInitialiseNewQueue>
            pxNewQueue = ( Queue_t * ) pxStaticQueue;
1000211e:	4620      	mov	r0, r4
    }
10002120:	b002      	add	sp, #8
10002122:	bd10      	pop	{r4, pc}
            ( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0U ) ) ) )
10002124:	2900      	cmp	r1, #0
10002126:	d0f1      	beq.n	1000210c <xQueueGenericCreateStatic+0x12>
        Queue_t * pxNewQueue = NULL;
10002128:	4610      	mov	r0, r2
        return pxNewQueue;
1000212a:	e7f9      	b.n	10002120 <xQueueGenericCreateStatic+0x26>
        Queue_t * pxNewQueue = NULL;
1000212c:	2000      	movs	r0, #0
    }
1000212e:	4770      	bx	lr
        Queue_t * pxNewQueue = NULL;
10002130:	4618      	mov	r0, r3
10002132:	e7f5      	b.n	10002120 <xQueueGenericCreateStatic+0x26>
10002134:	2000      	movs	r0, #0
10002136:	e7f3      	b.n	10002120 <xQueueGenericCreateStatic+0x26>

10002138 <xQueueReceive>:
{
10002138:	b5f0      	push	{r4, r5, r6, r7, lr}
1000213a:	b085      	sub	sp, #20
1000213c:	4604      	mov	r4, r0
1000213e:	460f      	mov	r7, r1
10002140:	9201      	str	r2, [sp, #4]
    BaseType_t xEntryTimeSet = pdFALSE;
10002142:	2600      	movs	r6, #0
10002144:	e036      	b.n	100021b4 <xQueueReceive+0x7c>
                prvCopyDataFromQueue( pxQueue, pvBuffer );
10002146:	4639      	mov	r1, r7
10002148:	4620      	mov	r0, r4
1000214a:	f7ff ff04 	bl	10001f56 <prvCopyDataFromQueue>
                pxQueue->uxMessagesWaiting = ( UBaseType_t ) ( uxMessagesWaiting - ( UBaseType_t ) 1 );
1000214e:	3d01      	subs	r5, #1
10002150:	64a5      	str	r5, [r4, #72]	; 0x48
                if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
10002152:	6923      	ldr	r3, [r4, #16]
10002154:	b923      	cbnz	r3, 10002160 <xQueueReceive+0x28>
                taskEXIT_CRITICAL();
10002156:	f001 f9c9 	bl	100034ec <vPortExitCritical>
                return pdPASS;
1000215a:	2001      	movs	r0, #1
}
1000215c:	b005      	add	sp, #20
1000215e:	bdf0      	pop	{r4, r5, r6, r7, pc}
                    if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
10002160:	f104 0010 	add.w	r0, r4, #16
10002164:	f000 fcbc 	bl	10002ae0 <xTaskRemoveFromEventList>
10002168:	2800      	cmp	r0, #0
1000216a:	d0f4      	beq.n	10002156 <xQueueReceive+0x1e>
                        queueYIELD_IF_USING_PREEMPTION();
1000216c:	f001 f9a4 	bl	100034b8 <vPortYield>
10002170:	e7f1      	b.n	10002156 <xQueueReceive+0x1e>
                    taskEXIT_CRITICAL();
10002172:	f001 f9bb 	bl	100034ec <vPortExitCritical>
                    return errQUEUE_EMPTY;
10002176:	2000      	movs	r0, #0
10002178:	e7f0      	b.n	1000215c <xQueueReceive+0x24>
                    vTaskInternalSetTimeOutState( &xTimeOut );
1000217a:	a802      	add	r0, sp, #8
1000217c:	f000 fd22 	bl	10002bc4 <vTaskInternalSetTimeOutState>
                    xEntryTimeSet = pdTRUE;
10002180:	2601      	movs	r6, #1
10002182:	e021      	b.n	100021c8 <xQueueReceive+0x90>
        prvLockQueue( pxQueue );
10002184:	2300      	movs	r3, #0
10002186:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
1000218a:	e029      	b.n	100021e0 <xQueueReceive+0xa8>
1000218c:	2300      	movs	r3, #0
1000218e:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
10002192:	e02b      	b.n	100021ec <xQueueReceive+0xb4>
                prvUnlockQueue( pxQueue );
10002194:	4620      	mov	r0, r4
10002196:	f7ff ff1c 	bl	10001fd2 <prvUnlockQueue>
                ( void ) xTaskResumeAll();
1000219a:	f000 fb6f 	bl	1000287c <xTaskResumeAll>
1000219e:	e009      	b.n	100021b4 <xQueueReceive+0x7c>
            prvUnlockQueue( pxQueue );
100021a0:	4620      	mov	r0, r4
100021a2:	f7ff ff16 	bl	10001fd2 <prvUnlockQueue>
            ( void ) xTaskResumeAll();
100021a6:	f000 fb69 	bl	1000287c <xTaskResumeAll>
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
100021aa:	4620      	mov	r0, r4
100021ac:	f7ff fe8b 	bl	10001ec6 <prvIsQueueEmpty>
100021b0:	2800      	cmp	r0, #0
100021b2:	d137      	bne.n	10002224 <xQueueReceive+0xec>
        taskENTER_CRITICAL();
100021b4:	f001 f98c 	bl	100034d0 <vPortEnterCritical>
            const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
100021b8:	6ca5      	ldr	r5, [r4, #72]	; 0x48
            if( uxMessagesWaiting > ( UBaseType_t ) 0 )
100021ba:	2d00      	cmp	r5, #0
100021bc:	d1c3      	bne.n	10002146 <xQueueReceive+0xe>
                if( xTicksToWait == ( TickType_t ) 0 )
100021be:	9b01      	ldr	r3, [sp, #4]
100021c0:	2b00      	cmp	r3, #0
100021c2:	d0d6      	beq.n	10002172 <xQueueReceive+0x3a>
                else if( xEntryTimeSet == pdFALSE )
100021c4:	2e00      	cmp	r6, #0
100021c6:	d0d8      	beq.n	1000217a <xQueueReceive+0x42>
        taskEXIT_CRITICAL();
100021c8:	f001 f990 	bl	100034ec <vPortExitCritical>
        vTaskSuspendAll();
100021cc:	f000 fa74 	bl	100026b8 <vTaskSuspendAll>
        prvLockQueue( pxQueue );
100021d0:	f001 f97e 	bl	100034d0 <vPortEnterCritical>
100021d4:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
100021d8:	b25b      	sxtb	r3, r3
100021da:	f1b3 3fff 	cmp.w	r3, #4294967295
100021de:	d0d1      	beq.n	10002184 <xQueueReceive+0x4c>
100021e0:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
100021e4:	b25b      	sxtb	r3, r3
100021e6:	f1b3 3fff 	cmp.w	r3, #4294967295
100021ea:	d0cf      	beq.n	1000218c <xQueueReceive+0x54>
100021ec:	f001 f97e 	bl	100034ec <vPortExitCritical>
        if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
100021f0:	a901      	add	r1, sp, #4
100021f2:	a802      	add	r0, sp, #8
100021f4:	f000 fcf2 	bl	10002bdc <xTaskCheckForTimeOut>
100021f8:	2800      	cmp	r0, #0
100021fa:	d1d1      	bne.n	100021a0 <xQueueReceive+0x68>
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
100021fc:	4620      	mov	r0, r4
100021fe:	f7ff fe62 	bl	10001ec6 <prvIsQueueEmpty>
10002202:	2800      	cmp	r0, #0
10002204:	d0c6      	beq.n	10002194 <xQueueReceive+0x5c>
                vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
10002206:	9901      	ldr	r1, [sp, #4]
10002208:	f104 002c 	add.w	r0, r4, #44	; 0x2c
1000220c:	f000 fc3c 	bl	10002a88 <vTaskPlaceOnEventList>
                prvUnlockQueue( pxQueue );
10002210:	4620      	mov	r0, r4
10002212:	f7ff fede 	bl	10001fd2 <prvUnlockQueue>
                if( xTaskResumeAll() == pdFALSE )
10002216:	f000 fb31 	bl	1000287c <xTaskResumeAll>
1000221a:	2800      	cmp	r0, #0
1000221c:	d1ca      	bne.n	100021b4 <xQueueReceive+0x7c>
                    taskYIELD_WITHIN_API();
1000221e:	f001 f94b 	bl	100034b8 <vPortYield>
10002222:	e7c7      	b.n	100021b4 <xQueueReceive+0x7c>
                return errQUEUE_EMPTY;
10002224:	2000      	movs	r0, #0
10002226:	e799      	b.n	1000215c <xQueueReceive+0x24>

10002228 <vQueueWaitForMessageRestricted>:
    {
10002228:	b570      	push	{r4, r5, r6, lr}
1000222a:	4604      	mov	r4, r0
1000222c:	460d      	mov	r5, r1
1000222e:	4616      	mov	r6, r2
        prvLockQueue( pxQueue );
10002230:	f001 f94e 	bl	100034d0 <vPortEnterCritical>
10002234:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
10002238:	b25b      	sxtb	r3, r3
1000223a:	f1b3 3fff 	cmp.w	r3, #4294967295
1000223e:	d00d      	beq.n	1000225c <vQueueWaitForMessageRestricted+0x34>
10002240:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
10002244:	b25b      	sxtb	r3, r3
10002246:	f1b3 3fff 	cmp.w	r3, #4294967295
1000224a:	d00b      	beq.n	10002264 <vQueueWaitForMessageRestricted+0x3c>
1000224c:	f001 f94e 	bl	100034ec <vPortExitCritical>
        if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
10002250:	6ca3      	ldr	r3, [r4, #72]	; 0x48
10002252:	b15b      	cbz	r3, 1000226c <vQueueWaitForMessageRestricted+0x44>
        prvUnlockQueue( pxQueue );
10002254:	4620      	mov	r0, r4
10002256:	f7ff febc 	bl	10001fd2 <prvUnlockQueue>
    }
1000225a:	bd70      	pop	{r4, r5, r6, pc}
        prvLockQueue( pxQueue );
1000225c:	2300      	movs	r3, #0
1000225e:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
10002262:	e7ed      	b.n	10002240 <vQueueWaitForMessageRestricted+0x18>
10002264:	2300      	movs	r3, #0
10002266:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
1000226a:	e7ef      	b.n	1000224c <vQueueWaitForMessageRestricted+0x24>
            vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
1000226c:	4632      	mov	r2, r6
1000226e:	4629      	mov	r1, r5
10002270:	f104 002c 	add.w	r0, r4, #44	; 0x2c
10002274:	f000 fc16 	bl	10002aa4 <vTaskPlaceOnEventListRestricted>
10002278:	e7ec      	b.n	10002254 <vQueueWaitForMessageRestricted+0x2c>
	...

1000227c <prvGetExpectedIdleTime>:
         * configUSE_PREEMPTION is 0, so there may be tasks above the idle priority
         * task that are in the Ready state, even though the idle task is
         * running. */
        #if ( configUSE_PORT_OPTIMISED_TASK_SELECTION == 0 )
        {
            if( uxTopReadyPriority > tskIDLE_PRIORITY )
1000227c:	4b0a      	ldr	r3, [pc, #40]	; (100022a8 <prvGetExpectedIdleTime+0x2c>)
1000227e:	681b      	ldr	r3, [r3, #0]
10002280:	b103      	cbz	r3, 10002284 <prvGetExpectedIdleTime+0x8>
            {
                uxHigherPriorityReadyTasks = pdTRUE;
10002282:	2301      	movs	r3, #1
                uxHigherPriorityReadyTasks = pdTRUE;
            }
        }
        #endif /* if ( configUSE_PORT_OPTIMISED_TASK_SELECTION == 0 ) */

        if( pxCurrentTCB->uxPriority > tskIDLE_PRIORITY )
10002284:	4a09      	ldr	r2, [pc, #36]	; (100022ac <prvGetExpectedIdleTime+0x30>)
10002286:	6812      	ldr	r2, [r2, #0]
10002288:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
1000228a:	b950      	cbnz	r0, 100022a2 <prvGetExpectedIdleTime+0x26>
        {
            xReturn = 0;
        }
        else if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > 1U )
1000228c:	4a08      	ldr	r2, [pc, #32]	; (100022b0 <prvGetExpectedIdleTime+0x34>)
1000228e:	6812      	ldr	r2, [r2, #0]
10002290:	2a01      	cmp	r2, #1
10002292:	d807      	bhi.n	100022a4 <prvGetExpectedIdleTime+0x28>
            /* There are other idle priority tasks in the ready state.  If
             * time slicing is used then the very next tick interrupt must be
             * processed. */
            xReturn = 0;
        }
        else if( uxHigherPriorityReadyTasks != pdFALSE )
10002294:	b933      	cbnz	r3, 100022a4 <prvGetExpectedIdleTime+0x28>
             * configUSE_PREEMPTION is 0. */
            xReturn = 0;
        }
        else
        {
            xReturn = xNextTaskUnblockTime;
10002296:	4b07      	ldr	r3, [pc, #28]	; (100022b4 <prvGetExpectedIdleTime+0x38>)
10002298:	6818      	ldr	r0, [r3, #0]
            xReturn -= xTickCount;
1000229a:	4b07      	ldr	r3, [pc, #28]	; (100022b8 <prvGetExpectedIdleTime+0x3c>)
1000229c:	681b      	ldr	r3, [r3, #0]
1000229e:	1ac0      	subs	r0, r0, r3
100022a0:	4770      	bx	lr
            xReturn = 0;
100022a2:	2000      	movs	r0, #0
        }

        return xReturn;
    }
100022a4:	4770      	bx	lr
100022a6:	bf00      	nop
100022a8:	38008a58 	stmdacc	r0, {r3, r4, r6, r9, fp, pc}
100022ac:	380085b0 	stmdacc	r0, {r4, r5, r7, r8, sl, pc}
100022b0:	380085bc 	stmdacc	r0, {r2, r3, r4, r5, r7, r8, sl, pc}
100022b4:	38008ae4 	stmdacc	r0, {r2, r5, r6, r7, r9, fp, pc}
100022b8:	38008b48 	stmdacc	r0, {r3, r6, r8, r9, fp, pc}

100022bc <prvResetNextTaskUnblockTime>:
#endif /* INCLUDE_vTaskDelete */
/*-----------------------------------------------------------*/

static void prvResetNextTaskUnblockTime( void )
{
    if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
100022bc:	4b07      	ldr	r3, [pc, #28]	; (100022dc <prvResetNextTaskUnblockTime+0x20>)
100022be:	681b      	ldr	r3, [r3, #0]
100022c0:	681b      	ldr	r3, [r3, #0]
100022c2:	b923      	cbnz	r3, 100022ce <prvResetNextTaskUnblockTime+0x12>
    {
        /* The new current delayed list is empty.  Set xNextTaskUnblockTime to
         * the maximum possible value so it is  extremely unlikely that the
         * if( xTickCount >= xNextTaskUnblockTime ) test will pass until
         * there is an item in the delayed list. */
        xNextTaskUnblockTime = portMAX_DELAY;
100022c4:	4b06      	ldr	r3, [pc, #24]	; (100022e0 <prvResetNextTaskUnblockTime+0x24>)
100022c6:	f04f 32ff 	mov.w	r2, #4294967295
100022ca:	601a      	str	r2, [r3, #0]
100022cc:	4770      	bx	lr
    {
        /* The new current delayed list is not empty, get the value of
         * the item at the head of the delayed list.  This is the time at
         * which the task at the head of the delayed list should be removed
         * from the Blocked state. */
        xNextTaskUnblockTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxDelayedTaskList );
100022ce:	4b03      	ldr	r3, [pc, #12]	; (100022dc <prvResetNextTaskUnblockTime+0x20>)
100022d0:	681b      	ldr	r3, [r3, #0]
100022d2:	68db      	ldr	r3, [r3, #12]
100022d4:	681a      	ldr	r2, [r3, #0]
100022d6:	4b02      	ldr	r3, [pc, #8]	; (100022e0 <prvResetNextTaskUnblockTime+0x24>)
100022d8:	601a      	str	r2, [r3, #0]
    }
}
100022da:	4770      	bx	lr
100022dc:	380085b4 	stmdacc	r0, {r2, r4, r5, r7, r8, sl, pc}
100022e0:	38008ae4 	stmdacc	r0, {r2, r5, r6, r7, r9, fp, pc}

100022e4 <prvInitialiseNewTask>:
{
100022e4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
100022e8:	4680      	mov	r8, r0
100022ea:	460d      	mov	r5, r1
100022ec:	4617      	mov	r7, r2
100022ee:	4699      	mov	r9, r3
100022f0:	9e08      	ldr	r6, [sp, #32]
100022f2:	f8dd a024 	ldr.w	sl, [sp, #36]	; 0x24
100022f6:	9c0a      	ldr	r4, [sp, #40]	; 0x28
        ( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) uxStackDepth * sizeof( StackType_t ) );
100022f8:	0092      	lsls	r2, r2, #2
100022fa:	21a5      	movs	r1, #165	; 0xa5
100022fc:	6b20      	ldr	r0, [r4, #48]	; 0x30
100022fe:	f001 fad7 	bl	100038b0 <memset>
        pxTopOfStack = &( pxNewTCB->pxStack[ uxStackDepth - ( configSTACK_DEPTH_TYPE ) 1 ] );
10002302:	6b23      	ldr	r3, [r4, #48]	; 0x30
10002304:	f107 4280 	add.w	r2, r7, #1073741824	; 0x40000000
10002308:	3a01      	subs	r2, #1
1000230a:	eb03 0782 	add.w	r7, r3, r2, lsl #2
        pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) );
1000230e:	f027 0707 	bic.w	r7, r7, #7
    if( pcName != NULL )
10002312:	b19d      	cbz	r5, 1000233c <prvInitialiseNewTask+0x58>
        for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
10002314:	f04f 0c00 	mov.w	ip, #0
10002318:	f1bc 0f03 	cmp.w	ip, #3
1000231c:	d80b      	bhi.n	10002336 <prvInitialiseNewTask+0x52>
            pxNewTCB->pcTaskName[ x ] = pcName[ x ];
1000231e:	f815 200c 	ldrb.w	r2, [r5, ip]
10002322:	eb04 030c 	add.w	r3, r4, ip
10002326:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
            if( pcName[ x ] == ( char ) 0x00 )
1000232a:	f815 300c 	ldrb.w	r3, [r5, ip]
1000232e:	b113      	cbz	r3, 10002336 <prvInitialiseNewTask+0x52>
        for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
10002330:	f10c 0c01 	add.w	ip, ip, #1
10002334:	e7f0      	b.n	10002318 <prvInitialiseNewTask+0x34>
        pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1U ] = '\0';
10002336:	2300      	movs	r3, #0
10002338:	f884 3037 	strb.w	r3, [r4, #55]	; 0x37
    if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
1000233c:	2e04      	cmp	r6, #4
1000233e:	d900      	bls.n	10002342 <prvInitialiseNewTask+0x5e>
        uxPriority = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) 1U;
10002340:	2604      	movs	r6, #4
    pxNewTCB->uxPriority = uxPriority;
10002342:	62e6      	str	r6, [r4, #44]	; 0x2c
        pxNewTCB->uxBasePriority = uxPriority;
10002344:	63a6      	str	r6, [r4, #56]	; 0x38
    vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
10002346:	1d20      	adds	r0, r4, #4
10002348:	f7ff fd8f 	bl	10001e6a <vListInitialiseItem>
    vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
1000234c:	f104 0018 	add.w	r0, r4, #24
10002350:	f7ff fd8b 	bl	10001e6a <vListInitialiseItem>
    listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
10002354:	6124      	str	r4, [r4, #16]
    listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority );
10002356:	f1c6 0605 	rsb	r6, r6, #5
1000235a:	61a6      	str	r6, [r4, #24]
    listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
1000235c:	6264      	str	r4, [r4, #36]	; 0x24
                pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxNewTCB->pxStack, pxTaskCode, pvParameters );
1000235e:	464b      	mov	r3, r9
10002360:	4642      	mov	r2, r8
10002362:	6b21      	ldr	r1, [r4, #48]	; 0x30
10002364:	4638      	mov	r0, r7
10002366:	f001 f8eb 	bl	10003540 <pxPortInitialiseStack>
1000236a:	6020      	str	r0, [r4, #0]
    if( pxCreatedTask != NULL )
1000236c:	f1ba 0f00 	cmp.w	sl, #0
10002370:	d001      	beq.n	10002376 <prvInitialiseNewTask+0x92>
        *pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
10002372:	f8ca 4000 	str.w	r4, [sl]
}
10002376:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

1000237a <prvCreateStaticTask>:
    {
1000237a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
1000237e:	b085      	sub	sp, #20
10002380:	9e0d      	ldr	r6, [sp, #52]	; 0x34
10002382:	9c0e      	ldr	r4, [sp, #56]	; 0x38
        if( ( pxTaskBuffer != NULL ) && ( puxStackBuffer != NULL ) )
10002384:	b1f4      	cbz	r4, 100023c4 <prvCreateStaticTask+0x4a>
10002386:	4605      	mov	r5, r0
10002388:	4689      	mov	r9, r1
1000238a:	4690      	mov	r8, r2
1000238c:	461f      	mov	r7, r3
1000238e:	b1de      	cbz	r6, 100023c8 <prvCreateStaticTask+0x4e>
            ( void ) memset( ( void * ) pxNewTCB, 0x00, sizeof( TCB_t ) );
10002390:	224c      	movs	r2, #76	; 0x4c
10002392:	2100      	movs	r1, #0
10002394:	4620      	mov	r0, r4
10002396:	f001 fa8b 	bl	100038b0 <memset>
            pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
1000239a:	6326      	str	r6, [r4, #48]	; 0x30
                pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
1000239c:	2302      	movs	r3, #2
1000239e:	f884 3049 	strb.w	r3, [r4, #73]	; 0x49
            prvInitialiseNewTask( pxTaskCode, pcName, uxStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
100023a2:	2300      	movs	r3, #0
100023a4:	9303      	str	r3, [sp, #12]
100023a6:	9402      	str	r4, [sp, #8]
100023a8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
100023aa:	9301      	str	r3, [sp, #4]
100023ac:	9b0c      	ldr	r3, [sp, #48]	; 0x30
100023ae:	9300      	str	r3, [sp, #0]
100023b0:	463b      	mov	r3, r7
100023b2:	4642      	mov	r2, r8
100023b4:	4649      	mov	r1, r9
100023b6:	4628      	mov	r0, r5
100023b8:	f7ff ff94 	bl	100022e4 <prvInitialiseNewTask>
            pxNewTCB = ( TCB_t * ) pxTaskBuffer;
100023bc:	4620      	mov	r0, r4
    }
100023be:	b005      	add	sp, #20
100023c0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
            pxNewTCB = NULL;
100023c4:	4620      	mov	r0, r4
100023c6:	e7fa      	b.n	100023be <prvCreateStaticTask+0x44>
100023c8:	4630      	mov	r0, r6
        return pxNewTCB;
100023ca:	e7f8      	b.n	100023be <prvCreateStaticTask+0x44>

100023cc <prvInitialiseTaskLists>:
{
100023cc:	b538      	push	{r3, r4, r5, lr}
    for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
100023ce:	2400      	movs	r4, #0
100023d0:	e007      	b.n	100023e2 <prvInitialiseTaskLists+0x16>
        vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
100023d2:	ebc4 02c4 	rsb	r2, r4, r4, lsl #3
100023d6:	0093      	lsls	r3, r2, #2
100023d8:	480e      	ldr	r0, [pc, #56]	; (10002414 <prvInitialiseTaskLists+0x48>)
100023da:	4418      	add	r0, r3
100023dc:	f7ff fd38 	bl	10001e50 <vListInitialise>
    for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
100023e0:	3401      	adds	r4, #1
100023e2:	2c04      	cmp	r4, #4
100023e4:	d9f5      	bls.n	100023d2 <prvInitialiseTaskLists+0x6>
    vListInitialise( &xDelayedTaskList1 );
100023e6:	4d0c      	ldr	r5, [pc, #48]	; (10002418 <prvInitialiseTaskLists+0x4c>)
100023e8:	4628      	mov	r0, r5
100023ea:	f7ff fd31 	bl	10001e50 <vListInitialise>
    vListInitialise( &xDelayedTaskList2 );
100023ee:	4c0b      	ldr	r4, [pc, #44]	; (1000241c <prvInitialiseTaskLists+0x50>)
100023f0:	4620      	mov	r0, r4
100023f2:	f7ff fd2d 	bl	10001e50 <vListInitialise>
    vListInitialise( &xPendingReadyList );
100023f6:	480a      	ldr	r0, [pc, #40]	; (10002420 <prvInitialiseTaskLists+0x54>)
100023f8:	f7ff fd2a 	bl	10001e50 <vListInitialise>
        vListInitialise( &xTasksWaitingTermination );
100023fc:	4809      	ldr	r0, [pc, #36]	; (10002424 <prvInitialiseTaskLists+0x58>)
100023fe:	f7ff fd27 	bl	10001e50 <vListInitialise>
        vListInitialise( &xSuspendedTaskList );
10002402:	4809      	ldr	r0, [pc, #36]	; (10002428 <prvInitialiseTaskLists+0x5c>)
10002404:	f7ff fd24 	bl	10001e50 <vListInitialise>
    pxDelayedTaskList = &xDelayedTaskList1;
10002408:	4b08      	ldr	r3, [pc, #32]	; (1000242c <prvInitialiseTaskLists+0x60>)
1000240a:	601d      	str	r5, [r3, #0]
    pxOverflowDelayedTaskList = &xDelayedTaskList2;
1000240c:	4b08      	ldr	r3, [pc, #32]	; (10002430 <prvInitialiseTaskLists+0x64>)
1000240e:	601c      	str	r4, [r3, #0]
}
10002410:	bd38      	pop	{r3, r4, r5, pc}
10002412:	bf00      	nop
10002414:	380085bc 	stmdacc	r0, {r2, r3, r4, r5, r7, r8, sl, pc}
10002418:	38008a5c 	stmdacc	r0, {r2, r3, r4, r6, r9, fp, pc}
1000241c:	38008a78 	stmdacc	r0, {r3, r4, r5, r6, r9, fp, pc}
10002420:	38008af0 	stmdacc	r0, {r4, r5, r6, r7, r9, fp, pc}
10002424:	38008b2c 	stmdacc	r0, {r2, r3, r5, r8, r9, fp, pc}
10002428:	38008b10 	stmdacc	r0, {r4, r8, r9, fp, pc}
1000242c:	380085b4 	stmdacc	r0, {r2, r4, r5, r7, r8, sl, pc}
10002430:	380085b8 	stmdacc	r0, {r3, r4, r5, r7, r8, sl, pc}

10002434 <prvAddNewTaskToReadyList>:
    {
10002434:	b510      	push	{r4, lr}
10002436:	4604      	mov	r4, r0
        taskENTER_CRITICAL();
10002438:	f001 f84a 	bl	100034d0 <vPortEnterCritical>
            uxCurrentNumberOfTasks = ( UBaseType_t ) ( uxCurrentNumberOfTasks + 1U );
1000243c:	4a26      	ldr	r2, [pc, #152]	; (100024d8 <prvAddNewTaskToReadyList+0xa4>)
1000243e:	6813      	ldr	r3, [r2, #0]
10002440:	3301      	adds	r3, #1
10002442:	6013      	str	r3, [r2, #0]
            if( pxCurrentTCB == NULL )
10002444:	4b25      	ldr	r3, [pc, #148]	; (100024dc <prvAddNewTaskToReadyList+0xa8>)
10002446:	681b      	ldr	r3, [r3, #0]
10002448:	b15b      	cbz	r3, 10002462 <prvAddNewTaskToReadyList+0x2e>
                if( xSchedulerRunning == pdFALSE )
1000244a:	4b25      	ldr	r3, [pc, #148]	; (100024e0 <prvAddNewTaskToReadyList+0xac>)
1000244c:	681b      	ldr	r3, [r3, #0]
1000244e:	b96b      	cbnz	r3, 1000246c <prvAddNewTaskToReadyList+0x38>
                    if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
10002450:	4b22      	ldr	r3, [pc, #136]	; (100024dc <prvAddNewTaskToReadyList+0xa8>)
10002452:	681b      	ldr	r3, [r3, #0]
10002454:	6ada      	ldr	r2, [r3, #44]	; 0x2c
10002456:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
10002458:	429a      	cmp	r2, r3
1000245a:	d807      	bhi.n	1000246c <prvAddNewTaskToReadyList+0x38>
                        pxCurrentTCB = pxNewTCB;
1000245c:	4b1f      	ldr	r3, [pc, #124]	; (100024dc <prvAddNewTaskToReadyList+0xa8>)
1000245e:	601c      	str	r4, [r3, #0]
10002460:	e004      	b.n	1000246c <prvAddNewTaskToReadyList+0x38>
                pxCurrentTCB = pxNewTCB;
10002462:	4b1e      	ldr	r3, [pc, #120]	; (100024dc <prvAddNewTaskToReadyList+0xa8>)
10002464:	601c      	str	r4, [r3, #0]
                if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
10002466:	6813      	ldr	r3, [r2, #0]
10002468:	2b01      	cmp	r3, #1
1000246a:	d02f      	beq.n	100024cc <prvAddNewTaskToReadyList+0x98>
            uxTaskNumber++;
1000246c:	4a1d      	ldr	r2, [pc, #116]	; (100024e4 <prvAddNewTaskToReadyList+0xb0>)
1000246e:	6813      	ldr	r3, [r2, #0]
10002470:	3301      	adds	r3, #1
10002472:	6013      	str	r3, [r2, #0]
            prvAddTaskToReadyList( pxNewTCB );
10002474:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
10002476:	4a1c      	ldr	r2, [pc, #112]	; (100024e8 <prvAddNewTaskToReadyList+0xb4>)
10002478:	6812      	ldr	r2, [r2, #0]
1000247a:	4293      	cmp	r3, r2
1000247c:	d901      	bls.n	10002482 <prvAddNewTaskToReadyList+0x4e>
1000247e:	4a1a      	ldr	r2, [pc, #104]	; (100024e8 <prvAddNewTaskToReadyList+0xb4>)
10002480:	6013      	str	r3, [r2, #0]
10002482:	4a1a      	ldr	r2, [pc, #104]	; (100024ec <prvAddNewTaskToReadyList+0xb8>)
10002484:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
10002488:	eb02 0383 	add.w	r3, r2, r3, lsl #2
1000248c:	685b      	ldr	r3, [r3, #4]
1000248e:	60a3      	str	r3, [r4, #8]
10002490:	6898      	ldr	r0, [r3, #8]
10002492:	60e0      	str	r0, [r4, #12]
10002494:	1d21      	adds	r1, r4, #4
10002496:	6041      	str	r1, [r0, #4]
10002498:	6099      	str	r1, [r3, #8]
1000249a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
1000249c:	ebc3 01c3 	rsb	r1, r3, r3, lsl #3
100024a0:	eb02 0081 	add.w	r0, r2, r1, lsl #2
100024a4:	6160      	str	r0, [r4, #20]
100024a6:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
100024aa:	3101      	adds	r1, #1
100024ac:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
100024b0:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
        taskEXIT_CRITICAL();
100024b4:	f001 f81a 	bl	100034ec <vPortExitCritical>
        if( xSchedulerRunning != pdFALSE )
100024b8:	4b09      	ldr	r3, [pc, #36]	; (100024e0 <prvAddNewTaskToReadyList+0xac>)
100024ba:	681b      	ldr	r3, [r3, #0]
100024bc:	b12b      	cbz	r3, 100024ca <prvAddNewTaskToReadyList+0x96>
            taskYIELD_ANY_CORE_IF_USING_PREEMPTION( pxNewTCB );
100024be:	4b07      	ldr	r3, [pc, #28]	; (100024dc <prvAddNewTaskToReadyList+0xa8>)
100024c0:	681b      	ldr	r3, [r3, #0]
100024c2:	6ada      	ldr	r2, [r3, #44]	; 0x2c
100024c4:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
100024c6:	429a      	cmp	r2, r3
100024c8:	d303      	bcc.n	100024d2 <prvAddNewTaskToReadyList+0x9e>
    }
100024ca:	bd10      	pop	{r4, pc}
                    prvInitialiseTaskLists();
100024cc:	f7ff ff7e 	bl	100023cc <prvInitialiseTaskLists>
100024d0:	e7cc      	b.n	1000246c <prvAddNewTaskToReadyList+0x38>
            taskYIELD_ANY_CORE_IF_USING_PREEMPTION( pxNewTCB );
100024d2:	f000 fff1 	bl	100034b8 <vPortYield>
    }
100024d6:	e7f8      	b.n	100024ca <prvAddNewTaskToReadyList+0x96>
100024d8:	38008648 	stmdacc	r0, {r3, r6, r9, sl, pc}
100024dc:	380085b0 	stmdacc	r0, {r4, r5, r7, r8, sl, pc}
100024e0:	38008b0c 	stmdacc	r0, {r2, r3, r8, r9, fp, pc}
100024e4:	38008854 	stmdacc	r0, {r2, r4, r6, fp, pc}
100024e8:	38008a58 	stmdacc	r0, {r3, r4, r6, r9, fp, pc}
100024ec:	380085bc 	stmdacc	r0, {r2, r3, r4, r5, r7, r8, sl, pc}

100024f0 <prvCreateTask>:
    {
100024f0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
100024f4:	b085      	sub	sp, #20
100024f6:	4606      	mov	r6, r0
100024f8:	460f      	mov	r7, r1
100024fa:	4615      	mov	r5, r2
100024fc:	4698      	mov	r8, r3
            pxStack = pvPortMallocStack( ( ( ( size_t ) uxStackDepth ) * sizeof( StackType_t ) ) );
100024fe:	0090      	lsls	r0, r2, #2
10002500:	f000 fe94 	bl	1000322c <pvPortMalloc>
            if( pxStack != NULL )
10002504:	4681      	mov	r9, r0
10002506:	b310      	cbz	r0, 1000254e <prvCreateTask+0x5e>
                pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) );
10002508:	204c      	movs	r0, #76	; 0x4c
1000250a:	f000 fe8f 	bl	1000322c <pvPortMalloc>
                if( pxNewTCB != NULL )
1000250e:	4604      	mov	r4, r0
10002510:	b1c8      	cbz	r0, 10002546 <prvCreateTask+0x56>
                    ( void ) memset( ( void * ) pxNewTCB, 0x00, sizeof( TCB_t ) );
10002512:	224c      	movs	r2, #76	; 0x4c
10002514:	2100      	movs	r1, #0
10002516:	f001 f9cb 	bl	100038b0 <memset>
                    pxNewTCB->pxStack = pxStack;
1000251a:	f8c4 9030 	str.w	r9, [r4, #48]	; 0x30
        if( pxNewTCB != NULL )
1000251e:	b174      	cbz	r4, 1000253e <prvCreateTask+0x4e>
                pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
10002520:	2300      	movs	r3, #0
10002522:	f884 3049 	strb.w	r3, [r4, #73]	; 0x49
            prvInitialiseNewTask( pxTaskCode, pcName, uxStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
10002526:	9303      	str	r3, [sp, #12]
10002528:	9402      	str	r4, [sp, #8]
1000252a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
1000252c:	9301      	str	r3, [sp, #4]
1000252e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
10002530:	9300      	str	r3, [sp, #0]
10002532:	4643      	mov	r3, r8
10002534:	462a      	mov	r2, r5
10002536:	4639      	mov	r1, r7
10002538:	4630      	mov	r0, r6
1000253a:	f7ff fed3 	bl	100022e4 <prvInitialiseNewTask>
    }
1000253e:	4620      	mov	r0, r4
10002540:	b005      	add	sp, #20
10002542:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
                    vPortFreeStack( pxStack );
10002546:	4648      	mov	r0, r9
10002548:	f000 feda 	bl	10003300 <vPortFree>
1000254c:	e7e7      	b.n	1000251e <prvCreateTask+0x2e>
                pxNewTCB = NULL;
1000254e:	4604      	mov	r4, r0
        return pxNewTCB;
10002550:	e7f5      	b.n	1000253e <prvCreateTask+0x4e>

10002552 <prvDeleteTCB>:
    {
10002552:	b510      	push	{r4, lr}
10002554:	4604      	mov	r4, r0
            if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
10002556:	f890 3049 	ldrb.w	r3, [r0, #73]	; 0x49
1000255a:	b113      	cbz	r3, 10002562 <prvDeleteTCB+0x10>
            else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
1000255c:	2b01      	cmp	r3, #1
1000255e:	d007      	beq.n	10002570 <prvDeleteTCB+0x1e>
    }
10002560:	bd10      	pop	{r4, pc}
                vPortFreeStack( pxTCB->pxStack );
10002562:	6b00      	ldr	r0, [r0, #48]	; 0x30
10002564:	f000 fecc 	bl	10003300 <vPortFree>
                vPortFree( pxTCB );
10002568:	4620      	mov	r0, r4
1000256a:	f000 fec9 	bl	10003300 <vPortFree>
1000256e:	e7f7      	b.n	10002560 <prvDeleteTCB+0xe>
                vPortFree( pxTCB );
10002570:	f000 fec6 	bl	10003300 <vPortFree>
    }
10002574:	e7f4      	b.n	10002560 <prvDeleteTCB+0xe>
	...

10002578 <prvCheckTasksWaitingTermination>:
        while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
10002578:	4b0f      	ldr	r3, [pc, #60]	; (100025b8 <prvCheckTasksWaitingTermination+0x40>)
1000257a:	681b      	ldr	r3, [r3, #0]
1000257c:	b1d3      	cbz	r3, 100025b4 <prvCheckTasksWaitingTermination+0x3c>
{
1000257e:	b510      	push	{r4, lr}
                taskENTER_CRITICAL();
10002580:	f000 ffa6 	bl	100034d0 <vPortEnterCritical>
                        pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) );
10002584:	4b0d      	ldr	r3, [pc, #52]	; (100025bc <prvCheckTasksWaitingTermination+0x44>)
10002586:	68db      	ldr	r3, [r3, #12]
10002588:	68dc      	ldr	r4, [r3, #12]
                        ( void ) uxListRemove( &( pxTCB->xStateListItem ) );
1000258a:	1d20      	adds	r0, r4, #4
1000258c:	f7ff fc89 	bl	10001ea2 <uxListRemove>
                        --uxCurrentNumberOfTasks;
10002590:	4a0b      	ldr	r2, [pc, #44]	; (100025c0 <prvCheckTasksWaitingTermination+0x48>)
10002592:	6813      	ldr	r3, [r2, #0]
10002594:	3b01      	subs	r3, #1
10002596:	6013      	str	r3, [r2, #0]
                        --uxDeletedTasksWaitingCleanUp;
10002598:	4a07      	ldr	r2, [pc, #28]	; (100025b8 <prvCheckTasksWaitingTermination+0x40>)
1000259a:	6813      	ldr	r3, [r2, #0]
1000259c:	3b01      	subs	r3, #1
1000259e:	6013      	str	r3, [r2, #0]
                taskEXIT_CRITICAL();
100025a0:	f000 ffa4 	bl	100034ec <vPortExitCritical>
                prvDeleteTCB( pxTCB );
100025a4:	4620      	mov	r0, r4
100025a6:	f7ff ffd4 	bl	10002552 <prvDeleteTCB>
        while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
100025aa:	4b03      	ldr	r3, [pc, #12]	; (100025b8 <prvCheckTasksWaitingTermination+0x40>)
100025ac:	681b      	ldr	r3, [r3, #0]
100025ae:	2b00      	cmp	r3, #0
100025b0:	d1e6      	bne.n	10002580 <prvCheckTasksWaitingTermination+0x8>
}
100025b2:	bd10      	pop	{r4, pc}
100025b4:	4770      	bx	lr
100025b6:	bf00      	nop
100025b8:	3800864c 	stmdacc	r0, {r2, r3, r6, r9, sl, pc}
100025bc:	38008b2c 	stmdacc	r0, {r2, r3, r5, r8, r9, fp, pc}
100025c0:	38008648 	stmdacc	r0, {r3, r6, r9, sl, pc}

100025c4 <prvAddCurrentTaskToDelayedList>:
#endif /* if ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( INCLUDE_xTaskGetIdleTaskHandle == 1 ) ) */
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait,
                                            const BaseType_t xCanBlockIndefinitely )
{
100025c4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
100025c8:	4604      	mov	r4, r0
100025ca:	460d      	mov	r5, r1
    TickType_t xTimeToWake;
    const TickType_t xConstTickCount = xTickCount;
100025cc:	4b21      	ldr	r3, [pc, #132]	; (10002654 <prvAddCurrentTaskToDelayedList+0x90>)
100025ce:	681e      	ldr	r6, [r3, #0]
    List_t * const pxDelayedList = pxDelayedTaskList;
100025d0:	4b21      	ldr	r3, [pc, #132]	; (10002658 <prvAddCurrentTaskToDelayedList+0x94>)
100025d2:	681f      	ldr	r7, [r3, #0]
    List_t * const pxOverflowDelayedList = pxOverflowDelayedTaskList;
100025d4:	4b21      	ldr	r3, [pc, #132]	; (1000265c <prvAddCurrentTaskToDelayedList+0x98>)
100025d6:	f8d3 8000 	ldr.w	r8, [r3]
    #if ( INCLUDE_xTaskAbortDelay == 1 )
    {
        /* About to enter a delayed list, so ensure the ucDelayAborted flag is
         * reset to pdFALSE so it can be detected as having been set to pdTRUE
         * when the task leaves the Blocked state. */
        pxCurrentTCB->ucDelayAborted = ( uint8_t ) pdFALSE;
100025da:	4b21      	ldr	r3, [pc, #132]	; (10002660 <prvAddCurrentTaskToDelayedList+0x9c>)
100025dc:	681a      	ldr	r2, [r3, #0]
100025de:	2100      	movs	r1, #0
100025e0:	f882 104a 	strb.w	r1, [r2, #74]	; 0x4a
    }
    #endif

    /* Remove the task from the ready list before adding it to the blocked list
     * as the same list item is used for both lists. */
    if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
100025e4:	6818      	ldr	r0, [r3, #0]
100025e6:	3004      	adds	r0, #4
100025e8:	f7ff fc5b 	bl	10001ea2 <uxListRemove>
        mtCOVERAGE_TEST_MARKER();
    }

    #if ( INCLUDE_vTaskSuspend == 1 )
    {
        if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
100025ec:	f1b4 3fff 	cmp.w	r4, #4294967295
100025f0:	d00d      	beq.n	1000260e <prvAddCurrentTaskToDelayedList+0x4a>
        else
        {
            /* Calculate the time at which the task should be woken if the event
             * does not occur.  This may overflow but this doesn't matter, the
             * kernel will manage it correctly. */
            xTimeToWake = xConstTickCount + xTicksToWait;
100025f2:	4434      	add	r4, r6

            /* The list item will be inserted in wake time order. */
            listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
100025f4:	4b1a      	ldr	r3, [pc, #104]	; (10002660 <prvAddCurrentTaskToDelayedList+0x9c>)
100025f6:	681b      	ldr	r3, [r3, #0]
100025f8:	605c      	str	r4, [r3, #4]

            if( xTimeToWake < xConstTickCount )
100025fa:	42a6      	cmp	r6, r4
100025fc:	d91d      	bls.n	1000263a <prvAddCurrentTaskToDelayedList+0x76>
            {
                /* Wake time has overflowed.  Place this item in the overflow
                 * list. */
                traceMOVED_TASK_TO_OVERFLOW_DELAYED_LIST();
                vListInsert( pxOverflowDelayedList, &( pxCurrentTCB->xStateListItem ) );
100025fe:	4b18      	ldr	r3, [pc, #96]	; (10002660 <prvAddCurrentTaskToDelayedList+0x9c>)
10002600:	6819      	ldr	r1, [r3, #0]
10002602:	3104      	adds	r1, #4
10002604:	4640      	mov	r0, r8
10002606:	f7ff fc33 	bl	10001e70 <vListInsert>

        /* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
        ( void ) xCanBlockIndefinitely;
    }
    #endif /* INCLUDE_vTaskSuspend */
}
1000260a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
1000260e:	2d00      	cmp	r5, #0
10002610:	d0ef      	beq.n	100025f2 <prvAddCurrentTaskToDelayedList+0x2e>
            listINSERT_END( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
10002612:	4a14      	ldr	r2, [pc, #80]	; (10002664 <prvAddCurrentTaskToDelayedList+0xa0>)
10002614:	6851      	ldr	r1, [r2, #4]
10002616:	4b12      	ldr	r3, [pc, #72]	; (10002660 <prvAddCurrentTaskToDelayedList+0x9c>)
10002618:	6818      	ldr	r0, [r3, #0]
1000261a:	6081      	str	r1, [r0, #8]
1000261c:	6818      	ldr	r0, [r3, #0]
1000261e:	688c      	ldr	r4, [r1, #8]
10002620:	60c4      	str	r4, [r0, #12]
10002622:	6818      	ldr	r0, [r3, #0]
10002624:	3004      	adds	r0, #4
10002626:	6060      	str	r0, [r4, #4]
10002628:	6818      	ldr	r0, [r3, #0]
1000262a:	3004      	adds	r0, #4
1000262c:	6088      	str	r0, [r1, #8]
1000262e:	681b      	ldr	r3, [r3, #0]
10002630:	615a      	str	r2, [r3, #20]
10002632:	6813      	ldr	r3, [r2, #0]
10002634:	3301      	adds	r3, #1
10002636:	6013      	str	r3, [r2, #0]
10002638:	e7e7      	b.n	1000260a <prvAddCurrentTaskToDelayedList+0x46>
                vListInsert( pxDelayedList, &( pxCurrentTCB->xStateListItem ) );
1000263a:	4b09      	ldr	r3, [pc, #36]	; (10002660 <prvAddCurrentTaskToDelayedList+0x9c>)
1000263c:	6819      	ldr	r1, [r3, #0]
1000263e:	3104      	adds	r1, #4
10002640:	4638      	mov	r0, r7
10002642:	f7ff fc15 	bl	10001e70 <vListInsert>
                if( xTimeToWake < xNextTaskUnblockTime )
10002646:	4b08      	ldr	r3, [pc, #32]	; (10002668 <prvAddCurrentTaskToDelayedList+0xa4>)
10002648:	681b      	ldr	r3, [r3, #0]
1000264a:	42a3      	cmp	r3, r4
1000264c:	d9dd      	bls.n	1000260a <prvAddCurrentTaskToDelayedList+0x46>
                    xNextTaskUnblockTime = xTimeToWake;
1000264e:	4b06      	ldr	r3, [pc, #24]	; (10002668 <prvAddCurrentTaskToDelayedList+0xa4>)
10002650:	601c      	str	r4, [r3, #0]
}
10002652:	e7da      	b.n	1000260a <prvAddCurrentTaskToDelayedList+0x46>
10002654:	38008b48 	stmdacc	r0, {r3, r6, r8, r9, fp, pc}
10002658:	380085b4 	stmdacc	r0, {r2, r4, r5, r7, r8, sl, pc}
1000265c:	380085b8 	stmdacc	r0, {r3, r4, r5, r7, r8, sl, pc}
10002660:	380085b0 	stmdacc	r0, {r4, r5, r7, r8, sl, pc}
10002664:	38008b10 	stmdacc	r0, {r4, r8, r9, fp, pc}
10002668:	38008ae4 	stmdacc	r0, {r2, r5, r6, r7, r9, fp, pc}

1000266c <xTaskCreateStatic>:
    {
1000266c:	b510      	push	{r4, lr}
1000266e:	b086      	sub	sp, #24
        TaskHandle_t xReturn = NULL;
10002670:	2400      	movs	r4, #0
10002672:	9405      	str	r4, [sp, #20]
        pxNewTCB = prvCreateStaticTask( pxTaskCode, pcName, uxStackDepth, pvParameters, uxPriority, puxStackBuffer, pxTaskBuffer, &xReturn );
10002674:	ac05      	add	r4, sp, #20
10002676:	9403      	str	r4, [sp, #12]
10002678:	9c0a      	ldr	r4, [sp, #40]	; 0x28
1000267a:	9402      	str	r4, [sp, #8]
1000267c:	9c09      	ldr	r4, [sp, #36]	; 0x24
1000267e:	9401      	str	r4, [sp, #4]
10002680:	9c08      	ldr	r4, [sp, #32]
10002682:	9400      	str	r4, [sp, #0]
10002684:	f7ff fe79 	bl	1000237a <prvCreateStaticTask>
        if( pxNewTCB != NULL )
10002688:	b108      	cbz	r0, 1000268e <xTaskCreateStatic+0x22>
            prvAddNewTaskToReadyList( pxNewTCB );
1000268a:	f7ff fed3 	bl	10002434 <prvAddNewTaskToReadyList>
    }
1000268e:	9805      	ldr	r0, [sp, #20]
10002690:	b006      	add	sp, #24
10002692:	bd10      	pop	{r4, pc}

10002694 <xTaskCreate>:
    {
10002694:	b510      	push	{r4, lr}
10002696:	b082      	sub	sp, #8
        pxNewTCB = prvCreateTask( pxTaskCode, pcName, uxStackDepth, pvParameters, uxPriority, pxCreatedTask );
10002698:	9c05      	ldr	r4, [sp, #20]
1000269a:	9401      	str	r4, [sp, #4]
1000269c:	9c04      	ldr	r4, [sp, #16]
1000269e:	9400      	str	r4, [sp, #0]
100026a0:	f7ff ff26 	bl	100024f0 <prvCreateTask>
        if( pxNewTCB != NULL )
100026a4:	b120      	cbz	r0, 100026b0 <xTaskCreate+0x1c>
            prvAddNewTaskToReadyList( pxNewTCB );
100026a6:	f7ff fec5 	bl	10002434 <prvAddNewTaskToReadyList>
            xReturn = pdPASS;
100026aa:	2001      	movs	r0, #1
    }
100026ac:	b002      	add	sp, #8
100026ae:	bd10      	pop	{r4, pc}
            xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
100026b0:	f04f 30ff 	mov.w	r0, #4294967295
        return xReturn;
100026b4:	e7fa      	b.n	100026ac <xTaskCreate+0x18>
	...

100026b8 <vTaskSuspendAll>:
        uxSchedulerSuspended = ( UBaseType_t ) ( uxSchedulerSuspended + 1U );
100026b8:	4a02      	ldr	r2, [pc, #8]	; (100026c4 <vTaskSuspendAll+0xc>)
100026ba:	6813      	ldr	r3, [r2, #0]
100026bc:	3301      	adds	r3, #1
100026be:	6013      	str	r3, [r2, #0]
}
100026c0:	4770      	bx	lr
100026c2:	bf00      	nop
100026c4:	38008850 	stmdacc	r0, {r4, r6, fp, pc}

100026c8 <xTaskGetTickCount>:
        xTicks = xTickCount;
100026c8:	4b01      	ldr	r3, [pc, #4]	; (100026d0 <xTaskGetTickCount+0x8>)
100026ca:	6818      	ldr	r0, [r3, #0]
}
100026cc:	4770      	bx	lr
100026ce:	bf00      	nop
100026d0:	38008b48 	stmdacc	r0, {r3, r6, r8, r9, fp, pc}

100026d4 <uxTaskGetNumberOfTasks>:
    return uxCurrentNumberOfTasks;
100026d4:	4b01      	ldr	r3, [pc, #4]	; (100026dc <uxTaskGetNumberOfTasks+0x8>)
100026d6:	6818      	ldr	r0, [r3, #0]
}
100026d8:	4770      	bx	lr
100026da:	bf00      	nop
100026dc:	38008648 	stmdacc	r0, {r3, r6, r9, sl, pc}

100026e0 <vTaskStepTick>:
    {
100026e0:	b510      	push	{r4, lr}
100026e2:	4604      	mov	r4, r0
        xUpdatedTickCount = xTickCount + xTicksToJump;
100026e4:	4b0a      	ldr	r3, [pc, #40]	; (10002710 <vTaskStepTick+0x30>)
100026e6:	681b      	ldr	r3, [r3, #0]
100026e8:	4403      	add	r3, r0
        if( xUpdatedTickCount == xNextTaskUnblockTime )
100026ea:	4a0a      	ldr	r2, [pc, #40]	; (10002714 <vTaskStepTick+0x34>)
100026ec:	6812      	ldr	r2, [r2, #0]
100026ee:	429a      	cmp	r2, r3
100026f0:	d004      	beq.n	100026fc <vTaskStepTick+0x1c>
        xTickCount += xTicksToJump;
100026f2:	4b07      	ldr	r3, [pc, #28]	; (10002710 <vTaskStepTick+0x30>)
100026f4:	6818      	ldr	r0, [r3, #0]
100026f6:	4404      	add	r4, r0
100026f8:	601c      	str	r4, [r3, #0]
    }
100026fa:	bd10      	pop	{r4, pc}
            taskENTER_CRITICAL();
100026fc:	f000 fee8 	bl	100034d0 <vPortEnterCritical>
                xPendedTicks++;
10002700:	4a05      	ldr	r2, [pc, #20]	; (10002718 <vTaskStepTick+0x38>)
10002702:	6813      	ldr	r3, [r2, #0]
10002704:	3301      	adds	r3, #1
10002706:	6013      	str	r3, [r2, #0]
            taskEXIT_CRITICAL();
10002708:	f000 fef0 	bl	100034ec <vPortExitCritical>
            xTicksToJump--;
1000270c:	3c01      	subs	r4, #1
1000270e:	e7f0      	b.n	100026f2 <vTaskStepTick+0x12>
10002710:	38008b48 	stmdacc	r0, {r3, r6, r8, r9, fp, pc}
10002714:	38008ae4 	stmdacc	r0, {r2, r5, r6, r7, r9, fp, pc}
10002718:	38008aec 	stmdacc	r0, {r2, r3, r5, r6, r7, r9, fp, pc}

1000271c <xTaskIncrementTick>:
    if( uxSchedulerSuspended == ( UBaseType_t ) 0U )
1000271c:	4b4c      	ldr	r3, [pc, #304]	; (10002850 <xTaskIncrementTick+0x134>)
1000271e:	681b      	ldr	r3, [r3, #0]
10002720:	2b00      	cmp	r3, #0
10002722:	f040 808d 	bne.w	10002840 <xTaskIncrementTick+0x124>
{
10002726:	b570      	push	{r4, r5, r6, lr}
        const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
10002728:	4b4a      	ldr	r3, [pc, #296]	; (10002854 <xTaskIncrementTick+0x138>)
1000272a:	681c      	ldr	r4, [r3, #0]
1000272c:	3401      	adds	r4, #1
        xTickCount = xConstTickCount;
1000272e:	601c      	str	r4, [r3, #0]
        if( xConstTickCount == ( TickType_t ) 0U )
10002730:	b1a4      	cbz	r4, 1000275c <xTaskIncrementTick+0x40>
        if( xConstTickCount >= xNextTaskUnblockTime )
10002732:	4b49      	ldr	r3, [pc, #292]	; (10002858 <xTaskIncrementTick+0x13c>)
10002734:	681b      	ldr	r3, [r3, #0]
10002736:	42a3      	cmp	r3, r4
10002738:	d91d      	bls.n	10002776 <xTaskIncrementTick+0x5a>
    BaseType_t xSwitchRequired = pdFALSE;
1000273a:	2000      	movs	r0, #0
                if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > 1U )
1000273c:	4b47      	ldr	r3, [pc, #284]	; (1000285c <xTaskIncrementTick+0x140>)
1000273e:	681b      	ldr	r3, [r3, #0]
10002740:	6adb      	ldr	r3, [r3, #44]	; 0x2c
10002742:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
10002746:	009a      	lsls	r2, r3, #2
10002748:	4b45      	ldr	r3, [pc, #276]	; (10002860 <xTaskIncrementTick+0x144>)
1000274a:	589b      	ldr	r3, [r3, r2]
1000274c:	2b01      	cmp	r3, #1
1000274e:	d900      	bls.n	10002752 <xTaskIncrementTick+0x36>
                    xSwitchRequired = pdTRUE;
10002750:	2001      	movs	r0, #1
                if( xYieldPendings[ 0 ] != pdFALSE )
10002752:	4b44      	ldr	r3, [pc, #272]	; (10002864 <xTaskIncrementTick+0x148>)
10002754:	681b      	ldr	r3, [r3, #0]
10002756:	2b00      	cmp	r3, #0
10002758:	d178      	bne.n	1000284c <xTaskIncrementTick+0x130>
}
1000275a:	bd70      	pop	{r4, r5, r6, pc}
            taskSWITCH_DELAYED_LISTS();
1000275c:	4a42      	ldr	r2, [pc, #264]	; (10002868 <xTaskIncrementTick+0x14c>)
1000275e:	6811      	ldr	r1, [r2, #0]
10002760:	4b42      	ldr	r3, [pc, #264]	; (1000286c <xTaskIncrementTick+0x150>)
10002762:	6818      	ldr	r0, [r3, #0]
10002764:	6010      	str	r0, [r2, #0]
10002766:	6019      	str	r1, [r3, #0]
10002768:	4a41      	ldr	r2, [pc, #260]	; (10002870 <xTaskIncrementTick+0x154>)
1000276a:	6813      	ldr	r3, [r2, #0]
1000276c:	3301      	adds	r3, #1
1000276e:	6013      	str	r3, [r2, #0]
10002770:	f7ff fda4 	bl	100022bc <prvResetNextTaskUnblockTime>
10002774:	e7dd      	b.n	10002732 <xTaskIncrementTick+0x16>
    BaseType_t xSwitchRequired = pdFALSE;
10002776:	2000      	movs	r0, #0
10002778:	e037      	b.n	100027ea <xTaskIncrementTick+0xce>
                    xNextTaskUnblockTime = portMAX_DELAY;
1000277a:	4b37      	ldr	r3, [pc, #220]	; (10002858 <xTaskIncrementTick+0x13c>)
1000277c:	f04f 32ff 	mov.w	r2, #4294967295
10002780:	601a      	str	r2, [r3, #0]
                    break;
10002782:	e7db      	b.n	1000273c <xTaskIncrementTick+0x20>
                        xNextTaskUnblockTime = xItemValue;
10002784:	4b34      	ldr	r3, [pc, #208]	; (10002858 <xTaskIncrementTick+0x13c>)
10002786:	601a      	str	r2, [r3, #0]
                        break;
10002788:	e7d8      	b.n	1000273c <xTaskIncrementTick+0x20>
                    listREMOVE_ITEM( &( pxTCB->xStateListItem ) );
1000278a:	68d9      	ldr	r1, [r3, #12]
1000278c:	6051      	str	r1, [r2, #4]
1000278e:	e042      	b.n	10002816 <xTaskIncrementTick+0xfa>
                        listREMOVE_ITEM( &( pxTCB->xEventListItem ) );
10002790:	2100      	movs	r1, #0
10002792:	6299      	str	r1, [r3, #40]	; 0x28
10002794:	6811      	ldr	r1, [r2, #0]
10002796:	3901      	subs	r1, #1
10002798:	6011      	str	r1, [r2, #0]
                    prvAddTaskToReadyList( pxTCB );
1000279a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
1000279c:	4935      	ldr	r1, [pc, #212]	; (10002874 <xTaskIncrementTick+0x158>)
1000279e:	6809      	ldr	r1, [r1, #0]
100027a0:	428a      	cmp	r2, r1
100027a2:	d901      	bls.n	100027a8 <xTaskIncrementTick+0x8c>
100027a4:	4933      	ldr	r1, [pc, #204]	; (10002874 <xTaskIncrementTick+0x158>)
100027a6:	600a      	str	r2, [r1, #0]
100027a8:	492d      	ldr	r1, [pc, #180]	; (10002860 <xTaskIncrementTick+0x144>)
100027aa:	ebc2 02c2 	rsb	r2, r2, r2, lsl #3
100027ae:	ea4f 0c82 	mov.w	ip, r2, lsl #2
100027b2:	448c      	add	ip, r1
100027b4:	f8dc 2004 	ldr.w	r2, [ip, #4]
100027b8:	609a      	str	r2, [r3, #8]
100027ba:	6896      	ldr	r6, [r2, #8]
100027bc:	60de      	str	r6, [r3, #12]
100027be:	6075      	str	r5, [r6, #4]
100027c0:	6095      	str	r5, [r2, #8]
100027c2:	6ada      	ldr	r2, [r3, #44]	; 0x2c
100027c4:	ebc2 0cc2 	rsb	ip, r2, r2, lsl #3
100027c8:	ea4f 058c 	mov.w	r5, ip, lsl #2
100027cc:	194e      	adds	r6, r1, r5
100027ce:	615e      	str	r6, [r3, #20]
100027d0:	594d      	ldr	r5, [r1, r5]
100027d2:	3501      	adds	r5, #1
100027d4:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
100027d8:	f841 500c 	str.w	r5, [r1, ip]
                            if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
100027dc:	6ada      	ldr	r2, [r3, #44]	; 0x2c
100027de:	4b1f      	ldr	r3, [pc, #124]	; (1000285c <xTaskIncrementTick+0x140>)
100027e0:	681b      	ldr	r3, [r3, #0]
100027e2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
100027e4:	429a      	cmp	r2, r3
100027e6:	d900      	bls.n	100027ea <xTaskIncrementTick+0xce>
                                xSwitchRequired = pdTRUE;
100027e8:	2001      	movs	r0, #1
                if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
100027ea:	4b1f      	ldr	r3, [pc, #124]	; (10002868 <xTaskIncrementTick+0x14c>)
100027ec:	681b      	ldr	r3, [r3, #0]
100027ee:	681b      	ldr	r3, [r3, #0]
100027f0:	2b00      	cmp	r3, #0
100027f2:	d0c2      	beq.n	1000277a <xTaskIncrementTick+0x5e>
                    pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList );
100027f4:	4b1c      	ldr	r3, [pc, #112]	; (10002868 <xTaskIncrementTick+0x14c>)
100027f6:	681b      	ldr	r3, [r3, #0]
100027f8:	68db      	ldr	r3, [r3, #12]
100027fa:	68db      	ldr	r3, [r3, #12]
                    xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
100027fc:	685a      	ldr	r2, [r3, #4]
                    if( xConstTickCount < xItemValue )
100027fe:	4294      	cmp	r4, r2
10002800:	d3c0      	bcc.n	10002784 <xTaskIncrementTick+0x68>
                    listREMOVE_ITEM( &( pxTCB->xStateListItem ) );
10002802:	695a      	ldr	r2, [r3, #20]
10002804:	689d      	ldr	r5, [r3, #8]
10002806:	68d9      	ldr	r1, [r3, #12]
10002808:	60a9      	str	r1, [r5, #8]
1000280a:	689d      	ldr	r5, [r3, #8]
1000280c:	604d      	str	r5, [r1, #4]
1000280e:	6851      	ldr	r1, [r2, #4]
10002810:	1d1d      	adds	r5, r3, #4
10002812:	42a9      	cmp	r1, r5
10002814:	d0b9      	beq.n	1000278a <xTaskIncrementTick+0x6e>
10002816:	2100      	movs	r1, #0
10002818:	6159      	str	r1, [r3, #20]
1000281a:	6811      	ldr	r1, [r2, #0]
1000281c:	3901      	subs	r1, #1
1000281e:	6011      	str	r1, [r2, #0]
                    if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
10002820:	6a9a      	ldr	r2, [r3, #40]	; 0x28
10002822:	2a00      	cmp	r2, #0
10002824:	d0b9      	beq.n	1000279a <xTaskIncrementTick+0x7e>
                        listREMOVE_ITEM( &( pxTCB->xEventListItem ) );
10002826:	69de      	ldr	r6, [r3, #28]
10002828:	6a19      	ldr	r1, [r3, #32]
1000282a:	60b1      	str	r1, [r6, #8]
1000282c:	69de      	ldr	r6, [r3, #28]
1000282e:	604e      	str	r6, [r1, #4]
10002830:	6856      	ldr	r6, [r2, #4]
10002832:	f103 0118 	add.w	r1, r3, #24
10002836:	428e      	cmp	r6, r1
10002838:	d1aa      	bne.n	10002790 <xTaskIncrementTick+0x74>
1000283a:	6a19      	ldr	r1, [r3, #32]
1000283c:	6051      	str	r1, [r2, #4]
1000283e:	e7a7      	b.n	10002790 <xTaskIncrementTick+0x74>
        xPendedTicks += 1U;
10002840:	4a0d      	ldr	r2, [pc, #52]	; (10002878 <xTaskIncrementTick+0x15c>)
10002842:	6813      	ldr	r3, [r2, #0]
10002844:	3301      	adds	r3, #1
10002846:	6013      	str	r3, [r2, #0]
    BaseType_t xSwitchRequired = pdFALSE;
10002848:	2000      	movs	r0, #0
}
1000284a:	4770      	bx	lr
                    xSwitchRequired = pdTRUE;
1000284c:	2001      	movs	r0, #1
    return xSwitchRequired;
1000284e:	e784      	b.n	1000275a <xTaskIncrementTick+0x3e>
10002850:	38008850 	stmdacc	r0, {r4, r6, fp, pc}
10002854:	38008b48 	stmdacc	r0, {r3, r6, r8, r9, fp, pc}
10002858:	38008ae4 	stmdacc	r0, {r2, r5, r6, r7, r9, fp, pc}
1000285c:	380085b0 	stmdacc	r0, {r4, r5, r7, r8, sl, pc}
10002860:	380085bc 	stmdacc	r0, {r2, r3, r4, r5, r7, r8, sl, pc}
10002864:	38008b98 	stmdacc	r0, {r3, r4, r7, r8, r9, fp, pc}
10002868:	380085b4 	stmdacc	r0, {r2, r4, r5, r7, r8, sl, pc}
1000286c:	380085b8 	stmdacc	r0, {r3, r4, r5, r7, r8, sl, pc}
10002870:	38008ae8 	stmdacc	r0, {r3, r5, r6, r7, r9, fp, pc}
10002874:	38008a58 	stmdacc	r0, {r3, r4, r6, r9, fp, pc}
10002878:	38008aec 	stmdacc	r0, {r2, r3, r5, r6, r7, r9, fp, pc}

1000287c <xTaskResumeAll>:
{
1000287c:	b510      	push	{r4, lr}
        taskENTER_CRITICAL();
1000287e:	f000 fe27 	bl	100034d0 <vPortEnterCritical>
            uxSchedulerSuspended = ( UBaseType_t ) ( uxSchedulerSuspended - 1U );
10002882:	4b42      	ldr	r3, [pc, #264]	; (1000298c <xTaskResumeAll+0x110>)
10002884:	681a      	ldr	r2, [r3, #0]
10002886:	3a01      	subs	r2, #1
10002888:	601a      	str	r2, [r3, #0]
            if( uxSchedulerSuspended == ( UBaseType_t ) 0U )
1000288a:	681b      	ldr	r3, [r3, #0]
1000288c:	2b00      	cmp	r3, #0
1000288e:	d177      	bne.n	10002980 <xTaskResumeAll+0x104>
                if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
10002890:	4b3f      	ldr	r3, [pc, #252]	; (10002990 <xTaskResumeAll+0x114>)
10002892:	681b      	ldr	r3, [r3, #0]
10002894:	b93b      	cbnz	r3, 100028a6 <xTaskResumeAll+0x2a>
    BaseType_t xAlreadyYielded = pdFALSE;
10002896:	2400      	movs	r4, #0
10002898:	e073      	b.n	10002982 <xTaskResumeAll+0x106>
                        listREMOVE_ITEM( &( pxTCB->xEventListItem ) );
1000289a:	6a19      	ldr	r1, [r3, #32]
1000289c:	6051      	str	r1, [r2, #4]
1000289e:	e015      	b.n	100028cc <xTaskResumeAll+0x50>
                        listREMOVE_ITEM( &( pxTCB->xStateListItem ) );
100028a0:	68d9      	ldr	r1, [r3, #12]
100028a2:	6051      	str	r1, [r2, #4]
100028a4:	e021      	b.n	100028ea <xTaskResumeAll+0x6e>
    TCB_t * pxTCB = NULL;
100028a6:	2300      	movs	r3, #0
                    while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
100028a8:	4a3a      	ldr	r2, [pc, #232]	; (10002994 <xTaskResumeAll+0x118>)
100028aa:	6812      	ldr	r2, [r2, #0]
100028ac:	2a00      	cmp	r2, #0
100028ae:	d04a      	beq.n	10002946 <xTaskResumeAll+0xca>
                        pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) );
100028b0:	4b38      	ldr	r3, [pc, #224]	; (10002994 <xTaskResumeAll+0x118>)
100028b2:	68db      	ldr	r3, [r3, #12]
100028b4:	68db      	ldr	r3, [r3, #12]
                        listREMOVE_ITEM( &( pxTCB->xEventListItem ) );
100028b6:	6a9a      	ldr	r2, [r3, #40]	; 0x28
100028b8:	69d8      	ldr	r0, [r3, #28]
100028ba:	6a19      	ldr	r1, [r3, #32]
100028bc:	6081      	str	r1, [r0, #8]
100028be:	69d8      	ldr	r0, [r3, #28]
100028c0:	6048      	str	r0, [r1, #4]
100028c2:	6850      	ldr	r0, [r2, #4]
100028c4:	f103 0118 	add.w	r1, r3, #24
100028c8:	4288      	cmp	r0, r1
100028ca:	d0e6      	beq.n	1000289a <xTaskResumeAll+0x1e>
100028cc:	2100      	movs	r1, #0
100028ce:	6299      	str	r1, [r3, #40]	; 0x28
100028d0:	6811      	ldr	r1, [r2, #0]
100028d2:	3901      	subs	r1, #1
100028d4:	6011      	str	r1, [r2, #0]
                        listREMOVE_ITEM( &( pxTCB->xStateListItem ) );
100028d6:	695a      	ldr	r2, [r3, #20]
100028d8:	6898      	ldr	r0, [r3, #8]
100028da:	68d9      	ldr	r1, [r3, #12]
100028dc:	6081      	str	r1, [r0, #8]
100028de:	6898      	ldr	r0, [r3, #8]
100028e0:	6048      	str	r0, [r1, #4]
100028e2:	6851      	ldr	r1, [r2, #4]
100028e4:	1d18      	adds	r0, r3, #4
100028e6:	4281      	cmp	r1, r0
100028e8:	d0da      	beq.n	100028a0 <xTaskResumeAll+0x24>
100028ea:	2100      	movs	r1, #0
100028ec:	6159      	str	r1, [r3, #20]
100028ee:	6811      	ldr	r1, [r2, #0]
100028f0:	3901      	subs	r1, #1
100028f2:	6011      	str	r1, [r2, #0]
                        prvAddTaskToReadyList( pxTCB );
100028f4:	6ada      	ldr	r2, [r3, #44]	; 0x2c
100028f6:	4928      	ldr	r1, [pc, #160]	; (10002998 <xTaskResumeAll+0x11c>)
100028f8:	6809      	ldr	r1, [r1, #0]
100028fa:	428a      	cmp	r2, r1
100028fc:	d901      	bls.n	10002902 <xTaskResumeAll+0x86>
100028fe:	4926      	ldr	r1, [pc, #152]	; (10002998 <xTaskResumeAll+0x11c>)
10002900:	600a      	str	r2, [r1, #0]
10002902:	4926      	ldr	r1, [pc, #152]	; (1000299c <xTaskResumeAll+0x120>)
10002904:	ebc2 02c2 	rsb	r2, r2, r2, lsl #3
10002908:	eb01 0282 	add.w	r2, r1, r2, lsl #2
1000290c:	6852      	ldr	r2, [r2, #4]
1000290e:	609a      	str	r2, [r3, #8]
10002910:	6894      	ldr	r4, [r2, #8]
10002912:	60dc      	str	r4, [r3, #12]
10002914:	6060      	str	r0, [r4, #4]
10002916:	6090      	str	r0, [r2, #8]
10002918:	6ada      	ldr	r2, [r3, #44]	; 0x2c
1000291a:	ebc2 00c2 	rsb	r0, r2, r2, lsl #3
1000291e:	eb01 0480 	add.w	r4, r1, r0, lsl #2
10002922:	615c      	str	r4, [r3, #20]
10002924:	f851 0020 	ldr.w	r0, [r1, r0, lsl #2]
10002928:	3001      	adds	r0, #1
1000292a:	ebc2 02c2 	rsb	r2, r2, r2, lsl #3
1000292e:	f841 0022 	str.w	r0, [r1, r2, lsl #2]
                            if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
10002932:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
10002934:	4a1a      	ldr	r2, [pc, #104]	; (100029a0 <xTaskResumeAll+0x124>)
10002936:	6812      	ldr	r2, [r2, #0]
10002938:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
1000293a:	4291      	cmp	r1, r2
1000293c:	d9b4      	bls.n	100028a8 <xTaskResumeAll+0x2c>
                                xYieldPendings[ xCoreID ] = pdTRUE;
1000293e:	4a19      	ldr	r2, [pc, #100]	; (100029a4 <xTaskResumeAll+0x128>)
10002940:	2101      	movs	r1, #1
10002942:	6011      	str	r1, [r2, #0]
10002944:	e7b0      	b.n	100028a8 <xTaskResumeAll+0x2c>
                    if( pxTCB != NULL )
10002946:	b10b      	cbz	r3, 1000294c <xTaskResumeAll+0xd0>
                        prvResetNextTaskUnblockTime();
10002948:	f7ff fcb8 	bl	100022bc <prvResetNextTaskUnblockTime>
                        TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
1000294c:	4b16      	ldr	r3, [pc, #88]	; (100029a8 <xTaskResumeAll+0x12c>)
1000294e:	681c      	ldr	r4, [r3, #0]
                        if( xPendedCounts > ( TickType_t ) 0U )
10002950:	b954      	cbnz	r4, 10002968 <xTaskResumeAll+0xec>
                    if( xYieldPendings[ xCoreID ] != pdFALSE )
10002952:	4b14      	ldr	r3, [pc, #80]	; (100029a4 <xTaskResumeAll+0x128>)
10002954:	681c      	ldr	r4, [r3, #0]
10002956:	b1a4      	cbz	r4, 10002982 <xTaskResumeAll+0x106>
                            taskYIELD_TASK_CORE_IF_USING_PREEMPTION( pxCurrentTCB );
10002958:	4b11      	ldr	r3, [pc, #68]	; (100029a0 <xTaskResumeAll+0x124>)
1000295a:	681b      	ldr	r3, [r3, #0]
1000295c:	f000 fdac 	bl	100034b8 <vPortYield>
                            xAlreadyYielded = pdTRUE;
10002960:	2401      	movs	r4, #1
10002962:	e00e      	b.n	10002982 <xTaskResumeAll+0x106>
                            } while( xPendedCounts > ( TickType_t ) 0U );
10002964:	3c01      	subs	r4, #1
10002966:	d007      	beq.n	10002978 <xTaskResumeAll+0xfc>
                                if( xTaskIncrementTick() != pdFALSE )
10002968:	f7ff fed8 	bl	1000271c <xTaskIncrementTick>
1000296c:	2800      	cmp	r0, #0
1000296e:	d0f9      	beq.n	10002964 <xTaskResumeAll+0xe8>
                                    xYieldPendings[ xCoreID ] = pdTRUE;
10002970:	4b0c      	ldr	r3, [pc, #48]	; (100029a4 <xTaskResumeAll+0x128>)
10002972:	2201      	movs	r2, #1
10002974:	601a      	str	r2, [r3, #0]
10002976:	e7f5      	b.n	10002964 <xTaskResumeAll+0xe8>
                            xPendedTicks = 0;
10002978:	4b0b      	ldr	r3, [pc, #44]	; (100029a8 <xTaskResumeAll+0x12c>)
1000297a:	2200      	movs	r2, #0
1000297c:	601a      	str	r2, [r3, #0]
1000297e:	e7e8      	b.n	10002952 <xTaskResumeAll+0xd6>
    BaseType_t xAlreadyYielded = pdFALSE;
10002980:	2400      	movs	r4, #0
        taskEXIT_CRITICAL();
10002982:	f000 fdb3 	bl	100034ec <vPortExitCritical>
}
10002986:	4620      	mov	r0, r4
10002988:	bd10      	pop	{r4, pc}
1000298a:	bf00      	nop
1000298c:	38008850 	stmdacc	r0, {r4, r6, fp, pc}
10002990:	38008648 	stmdacc	r0, {r3, r6, r9, sl, pc}
10002994:	38008af0 	stmdacc	r0, {r4, r5, r6, r7, r9, fp, pc}
10002998:	38008a58 	stmdacc	r0, {r3, r4, r6, r9, fp, pc}
1000299c:	380085bc 	stmdacc	r0, {r2, r3, r4, r5, r7, r8, sl, pc}
100029a0:	380085b0 	stmdacc	r0, {r4, r5, r7, r8, sl, pc}
100029a4:	38008b98 	stmdacc	r0, {r3, r4, r7, r8, r9, fp, pc}
100029a8:	38008aec 	stmdacc	r0, {r2, r3, r5, r6, r7, r9, fp, pc}

100029ac <vTaskDelay>:
    {
100029ac:	b510      	push	{r4, lr}
        if( xTicksToDelay > ( TickType_t ) 0U )
100029ae:	b148      	cbz	r0, 100029c4 <vTaskDelay+0x18>
100029b0:	4604      	mov	r4, r0
            vTaskSuspendAll();
100029b2:	f7ff fe81 	bl	100026b8 <vTaskSuspendAll>
                prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
100029b6:	2100      	movs	r1, #0
100029b8:	4620      	mov	r0, r4
100029ba:	f7ff fe03 	bl	100025c4 <prvAddCurrentTaskToDelayedList>
            xAlreadyYielded = xTaskResumeAll();
100029be:	f7ff ff5d 	bl	1000287c <xTaskResumeAll>
        if( xAlreadyYielded == pdFALSE )
100029c2:	b908      	cbnz	r0, 100029c8 <vTaskDelay+0x1c>
            taskYIELD_WITHIN_API();
100029c4:	f000 fd78 	bl	100034b8 <vPortYield>
    }
100029c8:	bd10      	pop	{r4, pc}
	...

100029cc <prvIdleTask>:
{
100029cc:	b508      	push	{r3, lr}
100029ce:	e003      	b.n	100029d8 <prvIdleTask+0xc>
            xExpectedIdleTime = prvGetExpectedIdleTime();
100029d0:	f7ff fc54 	bl	1000227c <prvGetExpectedIdleTime>
            if( xExpectedIdleTime >= ( TickType_t ) configEXPECTED_IDLE_TIME_BEFORE_SLEEP )
100029d4:	2801      	cmp	r0, #1
100029d6:	d808      	bhi.n	100029ea <prvIdleTask+0x1e>
        prvCheckTasksWaitingTermination();
100029d8:	f7ff fdce 	bl	10002578 <prvCheckTasksWaitingTermination>
            if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) configNUMBER_OF_CORES )
100029dc:	4b08      	ldr	r3, [pc, #32]	; (10002a00 <prvIdleTask+0x34>)
100029de:	681b      	ldr	r3, [r3, #0]
100029e0:	2b01      	cmp	r3, #1
100029e2:	d9f5      	bls.n	100029d0 <prvIdleTask+0x4>
                taskYIELD();
100029e4:	f000 fd68 	bl	100034b8 <vPortYield>
100029e8:	e7f2      	b.n	100029d0 <prvIdleTask+0x4>
                vTaskSuspendAll();
100029ea:	f7ff fe65 	bl	100026b8 <vTaskSuspendAll>
                    xExpectedIdleTime = prvGetExpectedIdleTime();
100029ee:	f7ff fc45 	bl	1000227c <prvGetExpectedIdleTime>
                    if( xExpectedIdleTime >= ( TickType_t ) configEXPECTED_IDLE_TIME_BEFORE_SLEEP )
100029f2:	2801      	cmp	r0, #1
100029f4:	d901      	bls.n	100029fa <prvIdleTask+0x2e>
                        portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime );
100029f6:	f000 fcb7 	bl	10003368 <vPortSuppressTicksAndSleep>
                ( void ) xTaskResumeAll();
100029fa:	f7ff ff3f 	bl	1000287c <xTaskResumeAll>
100029fe:	e7eb      	b.n	100029d8 <prvIdleTask+0xc>
10002a00:	380085bc 	stmdacc	r0, {r2, r3, r4, r5, r7, r8, sl, pc}

10002a04 <vTaskSwitchContext>:
        if( uxSchedulerSuspended != ( UBaseType_t ) 0U )
10002a04:	4b1b      	ldr	r3, [pc, #108]	; (10002a74 <vTaskSwitchContext+0x70>)
10002a06:	681b      	ldr	r3, [r3, #0]
10002a08:	b11b      	cbz	r3, 10002a12 <vTaskSwitchContext+0xe>
            xYieldPendings[ 0 ] = pdTRUE;
10002a0a:	4b1b      	ldr	r3, [pc, #108]	; (10002a78 <vTaskSwitchContext+0x74>)
10002a0c:	2201      	movs	r2, #1
10002a0e:	601a      	str	r2, [r3, #0]
10002a10:	4770      	bx	lr
            xYieldPendings[ 0 ] = pdFALSE;
10002a12:	4b19      	ldr	r3, [pc, #100]	; (10002a78 <vTaskSwitchContext+0x74>)
10002a14:	2200      	movs	r2, #0
10002a16:	601a      	str	r2, [r3, #0]
            taskSELECT_HIGHEST_PRIORITY_TASK();
10002a18:	4b18      	ldr	r3, [pc, #96]	; (10002a7c <vTaskSwitchContext+0x78>)
10002a1a:	681b      	ldr	r3, [r3, #0]
10002a1c:	e000      	b.n	10002a20 <vTaskSwitchContext+0x1c>
10002a1e:	3b01      	subs	r3, #1
10002a20:	ebc3 01c3 	rsb	r1, r3, r3, lsl #3
10002a24:	008a      	lsls	r2, r1, #2
10002a26:	4916      	ldr	r1, [pc, #88]	; (10002a80 <vTaskSwitchContext+0x7c>)
10002a28:	588a      	ldr	r2, [r1, r2]
10002a2a:	2a00      	cmp	r2, #0
10002a2c:	d0f7      	beq.n	10002a1e <vTaskSwitchContext+0x1a>
10002a2e:	ebc3 00c3 	rsb	r0, r3, r3, lsl #3
10002a32:	0082      	lsls	r2, r0, #2
10002a34:	440a      	add	r2, r1
10002a36:	6850      	ldr	r0, [r2, #4]
10002a38:	6840      	ldr	r0, [r0, #4]
10002a3a:	6050      	str	r0, [r2, #4]
10002a3c:	ebc3 0cc3 	rsb	ip, r3, r3, lsl #3
10002a40:	ea4f 028c 	mov.w	r2, ip, lsl #2
10002a44:	3208      	adds	r2, #8
10002a46:	4411      	add	r1, r2
10002a48:	4288      	cmp	r0, r1
10002a4a:	d00c      	beq.n	10002a66 <vTaskSwitchContext+0x62>
10002a4c:	ebc3 02c3 	rsb	r2, r3, r3, lsl #3
10002a50:	0091      	lsls	r1, r2, #2
10002a52:	4a0b      	ldr	r2, [pc, #44]	; (10002a80 <vTaskSwitchContext+0x7c>)
10002a54:	440a      	add	r2, r1
10002a56:	6852      	ldr	r2, [r2, #4]
10002a58:	68d1      	ldr	r1, [r2, #12]
10002a5a:	4a0a      	ldr	r2, [pc, #40]	; (10002a84 <vTaskSwitchContext+0x80>)
10002a5c:	6011      	str	r1, [r2, #0]
10002a5e:	4907      	ldr	r1, [pc, #28]	; (10002a7c <vTaskSwitchContext+0x78>)
10002a60:	600b      	str	r3, [r1, #0]
            portTASK_SWITCH_HOOK( pxCurrentTCB );
10002a62:	6813      	ldr	r3, [r2, #0]
    }
10002a64:	4770      	bx	lr
            taskSELECT_HIGHEST_PRIORITY_TASK();
10002a66:	4662      	mov	r2, ip
10002a68:	0091      	lsls	r1, r2, #2
10002a6a:	4a05      	ldr	r2, [pc, #20]	; (10002a80 <vTaskSwitchContext+0x7c>)
10002a6c:	440a      	add	r2, r1
10002a6e:	68d1      	ldr	r1, [r2, #12]
10002a70:	6051      	str	r1, [r2, #4]
10002a72:	e7eb      	b.n	10002a4c <vTaskSwitchContext+0x48>
10002a74:	38008850 	stmdacc	r0, {r4, r6, fp, pc}
10002a78:	38008b98 	stmdacc	r0, {r3, r4, r7, r8, r9, fp, pc}
10002a7c:	38008a58 	stmdacc	r0, {r3, r4, r6, r9, fp, pc}
10002a80:	380085bc 	stmdacc	r0, {r2, r3, r4, r5, r7, r8, sl, pc}
10002a84:	380085b0 	stmdacc	r0, {r4, r5, r7, r8, sl, pc}

10002a88 <vTaskPlaceOnEventList>:
{
10002a88:	b510      	push	{r4, lr}
10002a8a:	460c      	mov	r4, r1
    vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
10002a8c:	4b04      	ldr	r3, [pc, #16]	; (10002aa0 <vTaskPlaceOnEventList+0x18>)
10002a8e:	6819      	ldr	r1, [r3, #0]
10002a90:	3118      	adds	r1, #24
10002a92:	f7ff f9ed 	bl	10001e70 <vListInsert>
    prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
10002a96:	2101      	movs	r1, #1
10002a98:	4620      	mov	r0, r4
10002a9a:	f7ff fd93 	bl	100025c4 <prvAddCurrentTaskToDelayedList>
}
10002a9e:	bd10      	pop	{r4, pc}
10002aa0:	380085b0 	stmdacc	r0, {r4, r5, r7, r8, sl, pc}

10002aa4 <vTaskPlaceOnEventListRestricted>:
    {
10002aa4:	b570      	push	{r4, r5, r6, lr}
10002aa6:	4603      	mov	r3, r0
10002aa8:	4608      	mov	r0, r1
        listINSERT_END( pxEventList, &( pxCurrentTCB->xEventListItem ) );
10002aaa:	6859      	ldr	r1, [r3, #4]
10002aac:	4c0b      	ldr	r4, [pc, #44]	; (10002adc <vTaskPlaceOnEventListRestricted+0x38>)
10002aae:	6825      	ldr	r5, [r4, #0]
10002ab0:	61e9      	str	r1, [r5, #28]
10002ab2:	6825      	ldr	r5, [r4, #0]
10002ab4:	688e      	ldr	r6, [r1, #8]
10002ab6:	622e      	str	r6, [r5, #32]
10002ab8:	6825      	ldr	r5, [r4, #0]
10002aba:	3518      	adds	r5, #24
10002abc:	6075      	str	r5, [r6, #4]
10002abe:	6825      	ldr	r5, [r4, #0]
10002ac0:	3518      	adds	r5, #24
10002ac2:	608d      	str	r5, [r1, #8]
10002ac4:	6821      	ldr	r1, [r4, #0]
10002ac6:	628b      	str	r3, [r1, #40]	; 0x28
10002ac8:	6819      	ldr	r1, [r3, #0]
10002aca:	3101      	adds	r1, #1
10002acc:	6019      	str	r1, [r3, #0]
        if( xWaitIndefinitely != pdFALSE )
10002ace:	4611      	mov	r1, r2
10002ad0:	b10a      	cbz	r2, 10002ad6 <vTaskPlaceOnEventListRestricted+0x32>
            xTicksToWait = portMAX_DELAY;
10002ad2:	f04f 30ff 	mov.w	r0, #4294967295
        prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
10002ad6:	f7ff fd75 	bl	100025c4 <prvAddCurrentTaskToDelayedList>
    }
10002ada:	bd70      	pop	{r4, r5, r6, pc}
10002adc:	380085b0 	stmdacc	r0, {r4, r5, r7, r8, sl, pc}

10002ae0 <xTaskRemoveFromEventList>:
{
10002ae0:	b510      	push	{r4, lr}
    pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList );
10002ae2:	68c3      	ldr	r3, [r0, #12]
10002ae4:	68dc      	ldr	r4, [r3, #12]
    listREMOVE_ITEM( &( pxUnblockedTCB->xEventListItem ) );
10002ae6:	6aa3      	ldr	r3, [r4, #40]	; 0x28
10002ae8:	69e1      	ldr	r1, [r4, #28]
10002aea:	6a22      	ldr	r2, [r4, #32]
10002aec:	608a      	str	r2, [r1, #8]
10002aee:	69e1      	ldr	r1, [r4, #28]
10002af0:	6051      	str	r1, [r2, #4]
10002af2:	685a      	ldr	r2, [r3, #4]
10002af4:	f104 0118 	add.w	r1, r4, #24
10002af8:	428a      	cmp	r2, r1
10002afa:	d042      	beq.n	10002b82 <xTaskRemoveFromEventList+0xa2>
10002afc:	2200      	movs	r2, #0
10002afe:	62a2      	str	r2, [r4, #40]	; 0x28
10002b00:	681a      	ldr	r2, [r3, #0]
10002b02:	3a01      	subs	r2, #1
10002b04:	601a      	str	r2, [r3, #0]
    if( uxSchedulerSuspended == ( UBaseType_t ) 0U )
10002b06:	4b29      	ldr	r3, [pc, #164]	; (10002bac <xTaskRemoveFromEventList+0xcc>)
10002b08:	681b      	ldr	r3, [r3, #0]
10002b0a:	2b00      	cmp	r3, #0
10002b0c:	d13f      	bne.n	10002b8e <xTaskRemoveFromEventList+0xae>
        listREMOVE_ITEM( &( pxUnblockedTCB->xStateListItem ) );
10002b0e:	6963      	ldr	r3, [r4, #20]
10002b10:	68a1      	ldr	r1, [r4, #8]
10002b12:	68e2      	ldr	r2, [r4, #12]
10002b14:	608a      	str	r2, [r1, #8]
10002b16:	68a1      	ldr	r1, [r4, #8]
10002b18:	6051      	str	r1, [r2, #4]
10002b1a:	685a      	ldr	r2, [r3, #4]
10002b1c:	1d21      	adds	r1, r4, #4
10002b1e:	428a      	cmp	r2, r1
10002b20:	d032      	beq.n	10002b88 <xTaskRemoveFromEventList+0xa8>
10002b22:	2200      	movs	r2, #0
10002b24:	6162      	str	r2, [r4, #20]
10002b26:	681a      	ldr	r2, [r3, #0]
10002b28:	3a01      	subs	r2, #1
10002b2a:	601a      	str	r2, [r3, #0]
        prvAddTaskToReadyList( pxUnblockedTCB );
10002b2c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
10002b2e:	4a20      	ldr	r2, [pc, #128]	; (10002bb0 <xTaskRemoveFromEventList+0xd0>)
10002b30:	6812      	ldr	r2, [r2, #0]
10002b32:	4293      	cmp	r3, r2
10002b34:	d901      	bls.n	10002b3a <xTaskRemoveFromEventList+0x5a>
10002b36:	4a1e      	ldr	r2, [pc, #120]	; (10002bb0 <xTaskRemoveFromEventList+0xd0>)
10002b38:	6013      	str	r3, [r2, #0]
10002b3a:	4a1e      	ldr	r2, [pc, #120]	; (10002bb4 <xTaskRemoveFromEventList+0xd4>)
10002b3c:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
10002b40:	eb02 0383 	add.w	r3, r2, r3, lsl #2
10002b44:	685b      	ldr	r3, [r3, #4]
10002b46:	60a3      	str	r3, [r4, #8]
10002b48:	6898      	ldr	r0, [r3, #8]
10002b4a:	60e0      	str	r0, [r4, #12]
10002b4c:	6041      	str	r1, [r0, #4]
10002b4e:	6099      	str	r1, [r3, #8]
10002b50:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
10002b52:	ebc3 01c3 	rsb	r1, r3, r3, lsl #3
10002b56:	eb02 0081 	add.w	r0, r2, r1, lsl #2
10002b5a:	6160      	str	r0, [r4, #20]
10002b5c:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
10002b60:	3101      	adds	r1, #1
10002b62:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
10002b66:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
            prvResetNextTaskUnblockTime();
10002b6a:	f7ff fba7 	bl	100022bc <prvResetNextTaskUnblockTime>
        if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
10002b6e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
10002b70:	4b11      	ldr	r3, [pc, #68]	; (10002bb8 <xTaskRemoveFromEventList+0xd8>)
10002b72:	681b      	ldr	r3, [r3, #0]
10002b74:	6adb      	ldr	r3, [r3, #44]	; 0x2c
10002b76:	429a      	cmp	r2, r3
10002b78:	d915      	bls.n	10002ba6 <xTaskRemoveFromEventList+0xc6>
            xYieldPendings[ 0 ] = pdTRUE;
10002b7a:	2001      	movs	r0, #1
10002b7c:	4b0f      	ldr	r3, [pc, #60]	; (10002bbc <xTaskRemoveFromEventList+0xdc>)
10002b7e:	6018      	str	r0, [r3, #0]
}
10002b80:	bd10      	pop	{r4, pc}
    listREMOVE_ITEM( &( pxUnblockedTCB->xEventListItem ) );
10002b82:	6a22      	ldr	r2, [r4, #32]
10002b84:	605a      	str	r2, [r3, #4]
10002b86:	e7b9      	b.n	10002afc <xTaskRemoveFromEventList+0x1c>
        listREMOVE_ITEM( &( pxUnblockedTCB->xStateListItem ) );
10002b88:	68e2      	ldr	r2, [r4, #12]
10002b8a:	605a      	str	r2, [r3, #4]
10002b8c:	e7c9      	b.n	10002b22 <xTaskRemoveFromEventList+0x42>
        listINSERT_END( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
10002b8e:	4b0c      	ldr	r3, [pc, #48]	; (10002bc0 <xTaskRemoveFromEventList+0xe0>)
10002b90:	685a      	ldr	r2, [r3, #4]
10002b92:	61e2      	str	r2, [r4, #28]
10002b94:	6890      	ldr	r0, [r2, #8]
10002b96:	6220      	str	r0, [r4, #32]
10002b98:	6041      	str	r1, [r0, #4]
10002b9a:	6091      	str	r1, [r2, #8]
10002b9c:	62a3      	str	r3, [r4, #40]	; 0x28
10002b9e:	681a      	ldr	r2, [r3, #0]
10002ba0:	3201      	adds	r2, #1
10002ba2:	601a      	str	r2, [r3, #0]
10002ba4:	e7e3      	b.n	10002b6e <xTaskRemoveFromEventList+0x8e>
            xReturn = pdFALSE;
10002ba6:	2000      	movs	r0, #0
    return xReturn;
10002ba8:	e7ea      	b.n	10002b80 <xTaskRemoveFromEventList+0xa0>
10002baa:	bf00      	nop
10002bac:	38008850 	stmdacc	r0, {r4, r6, fp, pc}
10002bb0:	38008a58 	stmdacc	r0, {r3, r4, r6, r9, fp, pc}
10002bb4:	380085bc 	stmdacc	r0, {r2, r3, r4, r5, r7, r8, sl, pc}
10002bb8:	380085b0 	stmdacc	r0, {r4, r5, r7, r8, sl, pc}
10002bbc:	38008b98 	stmdacc	r0, {r3, r4, r7, r8, r9, fp, pc}
10002bc0:	38008af0 	stmdacc	r0, {r4, r5, r6, r7, r9, fp, pc}

10002bc4 <vTaskInternalSetTimeOutState>:
    pxTimeOut->xOverflowCount = xNumOfOverflows;
10002bc4:	4b03      	ldr	r3, [pc, #12]	; (10002bd4 <vTaskInternalSetTimeOutState+0x10>)
10002bc6:	681b      	ldr	r3, [r3, #0]
10002bc8:	6003      	str	r3, [r0, #0]
    pxTimeOut->xTimeOnEntering = xTickCount;
10002bca:	4b03      	ldr	r3, [pc, #12]	; (10002bd8 <vTaskInternalSetTimeOutState+0x14>)
10002bcc:	681b      	ldr	r3, [r3, #0]
10002bce:	6043      	str	r3, [r0, #4]
}
10002bd0:	4770      	bx	lr
10002bd2:	bf00      	nop
10002bd4:	38008ae8 	stmdacc	r0, {r3, r5, r6, r7, r9, fp, pc}
10002bd8:	38008b48 	stmdacc	r0, {r3, r6, r8, r9, fp, pc}

10002bdc <xTaskCheckForTimeOut>:
{
10002bdc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10002bde:	4604      	mov	r4, r0
10002be0:	460d      	mov	r5, r1
    taskENTER_CRITICAL();
10002be2:	f000 fc75 	bl	100034d0 <vPortEnterCritical>
        const TickType_t xConstTickCount = xTickCount;
10002be6:	4b19      	ldr	r3, [pc, #100]	; (10002c4c <xTaskCheckForTimeOut+0x70>)
10002be8:	681a      	ldr	r2, [r3, #0]
        const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
10002bea:	6863      	ldr	r3, [r4, #4]
10002bec:	1ad0      	subs	r0, r2, r3
            if( pxCurrentTCB->ucDelayAborted != ( uint8_t ) pdFALSE )
10002bee:	4918      	ldr	r1, [pc, #96]	; (10002c50 <xTaskCheckForTimeOut+0x74>)
10002bf0:	6809      	ldr	r1, [r1, #0]
10002bf2:	f891 104a 	ldrb.w	r1, [r1, #74]	; 0x4a
10002bf6:	b149      	cbz	r1, 10002c0c <xTaskCheckForTimeOut+0x30>
                pxCurrentTCB->ucDelayAborted = ( uint8_t ) pdFALSE;
10002bf8:	4b15      	ldr	r3, [pc, #84]	; (10002c50 <xTaskCheckForTimeOut+0x74>)
10002bfa:	681b      	ldr	r3, [r3, #0]
10002bfc:	2200      	movs	r2, #0
10002bfe:	f883 204a 	strb.w	r2, [r3, #74]	; 0x4a
                xReturn = pdTRUE;
10002c02:	2401      	movs	r4, #1
    taskEXIT_CRITICAL();
10002c04:	f000 fc72 	bl	100034ec <vPortExitCritical>
}
10002c08:	4620      	mov	r0, r4
10002c0a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
            if( *pxTicksToWait == portMAX_DELAY )
10002c0c:	6829      	ldr	r1, [r5, #0]
10002c0e:	f1b1 3fff 	cmp.w	r1, #4294967295
10002c12:	d018      	beq.n	10002c46 <xTaskCheckForTimeOut+0x6a>
        if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) )
10002c14:	4e0f      	ldr	r6, [pc, #60]	; (10002c54 <xTaskCheckForTimeOut+0x78>)
10002c16:	6836      	ldr	r6, [r6, #0]
10002c18:	6827      	ldr	r7, [r4, #0]
10002c1a:	42b7      	cmp	r7, r6
10002c1c:	d005      	beq.n	10002c2a <xTaskCheckForTimeOut+0x4e>
10002c1e:	4293      	cmp	r3, r2
10002c20:	d803      	bhi.n	10002c2a <xTaskCheckForTimeOut+0x4e>
            *pxTicksToWait = ( TickType_t ) 0;
10002c22:	2300      	movs	r3, #0
10002c24:	602b      	str	r3, [r5, #0]
            xReturn = pdTRUE;
10002c26:	2401      	movs	r4, #1
            *pxTicksToWait = ( TickType_t ) 0;
10002c28:	e7ec      	b.n	10002c04 <xTaskCheckForTimeOut+0x28>
        else if( xElapsedTime < *pxTicksToWait )
10002c2a:	4281      	cmp	r1, r0
10002c2c:	d803      	bhi.n	10002c36 <xTaskCheckForTimeOut+0x5a>
            *pxTicksToWait = ( TickType_t ) 0;
10002c2e:	2300      	movs	r3, #0
10002c30:	602b      	str	r3, [r5, #0]
            xReturn = pdTRUE;
10002c32:	2401      	movs	r4, #1
10002c34:	e7e6      	b.n	10002c04 <xTaskCheckForTimeOut+0x28>
            *pxTicksToWait -= xElapsedTime;
10002c36:	1a9b      	subs	r3, r3, r2
10002c38:	440b      	add	r3, r1
10002c3a:	602b      	str	r3, [r5, #0]
            vTaskInternalSetTimeOutState( pxTimeOut );
10002c3c:	4620      	mov	r0, r4
10002c3e:	f7ff ffc1 	bl	10002bc4 <vTaskInternalSetTimeOutState>
            xReturn = pdFALSE;
10002c42:	2400      	movs	r4, #0
10002c44:	e7de      	b.n	10002c04 <xTaskCheckForTimeOut+0x28>
                xReturn = pdFALSE;
10002c46:	2400      	movs	r4, #0
10002c48:	e7dc      	b.n	10002c04 <xTaskCheckForTimeOut+0x28>
10002c4a:	bf00      	nop
10002c4c:	38008b48 	stmdacc	r0, {r3, r6, r8, r9, fp, pc}
10002c50:	380085b0 	stmdacc	r0, {r4, r5, r7, r8, sl, pc}
10002c54:	38008ae8 	stmdacc	r0, {r3, r5, r6, r7, r9, fp, pc}

10002c58 <vTaskMissedYield>:
    xYieldPendings[ portGET_CORE_ID() ] = pdTRUE;
10002c58:	4b01      	ldr	r3, [pc, #4]	; (10002c60 <vTaskMissedYield+0x8>)
10002c5a:	2201      	movs	r2, #1
10002c5c:	601a      	str	r2, [r3, #0]
}
10002c5e:	4770      	bx	lr
10002c60:	38008b98 	stmdacc	r0, {r3, r4, r7, r8, r9, fp, pc}

10002c64 <eTaskConfirmSleepModeStatus>:
        if( listCURRENT_LIST_LENGTH( &xPendingReadyList ) != 0U )
10002c64:	4b0c      	ldr	r3, [pc, #48]	; (10002c98 <eTaskConfirmSleepModeStatus+0x34>)
10002c66:	681b      	ldr	r3, [r3, #0]
10002c68:	b973      	cbnz	r3, 10002c88 <eTaskConfirmSleepModeStatus+0x24>
        else if( xYieldPendings[ portGET_CORE_ID() ] != pdFALSE )
10002c6a:	4b0c      	ldr	r3, [pc, #48]	; (10002c9c <eTaskConfirmSleepModeStatus+0x38>)
10002c6c:	681b      	ldr	r3, [r3, #0]
10002c6e:	b96b      	cbnz	r3, 10002c8c <eTaskConfirmSleepModeStatus+0x28>
        else if( xPendedTicks != 0U )
10002c70:	4b0b      	ldr	r3, [pc, #44]	; (10002ca0 <eTaskConfirmSleepModeStatus+0x3c>)
10002c72:	681b      	ldr	r3, [r3, #0]
10002c74:	b963      	cbnz	r3, 10002c90 <eTaskConfirmSleepModeStatus+0x2c>
            else if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList ) == ( uxCurrentNumberOfTasks - uxNonApplicationTasks ) )
10002c76:	4b0b      	ldr	r3, [pc, #44]	; (10002ca4 <eTaskConfirmSleepModeStatus+0x40>)
10002c78:	681a      	ldr	r2, [r3, #0]
10002c7a:	4b0b      	ldr	r3, [pc, #44]	; (10002ca8 <eTaskConfirmSleepModeStatus+0x44>)
10002c7c:	681b      	ldr	r3, [r3, #0]
10002c7e:	3b01      	subs	r3, #1
10002c80:	429a      	cmp	r2, r3
10002c82:	d007      	beq.n	10002c94 <eTaskConfirmSleepModeStatus+0x30>
        eSleepModeStatus eReturn = eStandardSleep;
10002c84:	2001      	movs	r0, #1
10002c86:	4770      	bx	lr
            eReturn = eAbortSleep;
10002c88:	2000      	movs	r0, #0
10002c8a:	4770      	bx	lr
            eReturn = eAbortSleep;
10002c8c:	2000      	movs	r0, #0
10002c8e:	4770      	bx	lr
            eReturn = eAbortSleep;
10002c90:	2000      	movs	r0, #0
10002c92:	4770      	bx	lr
                eReturn = eNoTasksWaitingTimeout;
10002c94:	2002      	movs	r0, #2
    }
10002c96:	4770      	bx	lr
10002c98:	38008af0 	stmdacc	r0, {r4, r5, r6, r7, r9, fp, pc}
10002c9c:	38008b98 	stmdacc	r0, {r3, r4, r7, r8, r9, fp, pc}
10002ca0:	38008aec 	stmdacc	r0, {r2, r3, r5, r6, r7, r9, fp, pc}
10002ca4:	38008b10 	stmdacc	r0, {r4, r8, r9, fp, pc}
10002ca8:	38008648 	stmdacc	r0, {r3, r6, r9, sl, pc}

10002cac <xTaskPriorityDisinherit>:
        if( pxMutexHolder != NULL )
10002cac:	2800      	cmp	r0, #0
10002cae:	d034      	beq.n	10002d1a <xTaskPriorityDisinherit+0x6e>
    {
10002cb0:	b538      	push	{r3, r4, r5, lr}
10002cb2:	4604      	mov	r4, r0
            ( pxTCB->uxMutexesHeld )--;
10002cb4:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
10002cb6:	3b01      	subs	r3, #1
10002cb8:	63c3      	str	r3, [r0, #60]	; 0x3c
            if( pxTCB->uxPriority != pxTCB->uxBasePriority )
10002cba:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
10002cbc:	6b82      	ldr	r2, [r0, #56]	; 0x38
10002cbe:	4291      	cmp	r1, r2
10002cc0:	d02d      	beq.n	10002d1e <xTaskPriorityDisinherit+0x72>
                if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
10002cc2:	b10b      	cbz	r3, 10002cc8 <xTaskPriorityDisinherit+0x1c>
        BaseType_t xReturn = pdFALSE;
10002cc4:	2000      	movs	r0, #0
    }
10002cc6:	bd38      	pop	{r3, r4, r5, pc}
                    if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
10002cc8:	1d05      	adds	r5, r0, #4
10002cca:	4628      	mov	r0, r5
10002ccc:	f7ff f8e9 	bl	10001ea2 <uxListRemove>
                    pxTCB->uxPriority = pxTCB->uxBasePriority;
10002cd0:	6ba3      	ldr	r3, [r4, #56]	; 0x38
10002cd2:	62e3      	str	r3, [r4, #44]	; 0x2c
                    listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority );
10002cd4:	f1c3 0205 	rsb	r2, r3, #5
10002cd8:	61a2      	str	r2, [r4, #24]
                    prvAddTaskToReadyList( pxTCB );
10002cda:	4a12      	ldr	r2, [pc, #72]	; (10002d24 <xTaskPriorityDisinherit+0x78>)
10002cdc:	6812      	ldr	r2, [r2, #0]
10002cde:	4293      	cmp	r3, r2
10002ce0:	d901      	bls.n	10002ce6 <xTaskPriorityDisinherit+0x3a>
10002ce2:	4a10      	ldr	r2, [pc, #64]	; (10002d24 <xTaskPriorityDisinherit+0x78>)
10002ce4:	6013      	str	r3, [r2, #0]
10002ce6:	4a10      	ldr	r2, [pc, #64]	; (10002d28 <xTaskPriorityDisinherit+0x7c>)
10002ce8:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
10002cec:	eb02 0383 	add.w	r3, r2, r3, lsl #2
10002cf0:	685b      	ldr	r3, [r3, #4]
10002cf2:	60a3      	str	r3, [r4, #8]
10002cf4:	6899      	ldr	r1, [r3, #8]
10002cf6:	60e1      	str	r1, [r4, #12]
10002cf8:	604d      	str	r5, [r1, #4]
10002cfa:	609d      	str	r5, [r3, #8]
10002cfc:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
10002cfe:	ebc3 01c3 	rsb	r1, r3, r3, lsl #3
10002d02:	eb02 0081 	add.w	r0, r2, r1, lsl #2
10002d06:	6160      	str	r0, [r4, #20]
10002d08:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
10002d0c:	3101      	adds	r1, #1
10002d0e:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
10002d12:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
                    xReturn = pdTRUE;
10002d16:	2001      	movs	r0, #1
10002d18:	e7d5      	b.n	10002cc6 <xTaskPriorityDisinherit+0x1a>
        BaseType_t xReturn = pdFALSE;
10002d1a:	2000      	movs	r0, #0
    }
10002d1c:	4770      	bx	lr
        BaseType_t xReturn = pdFALSE;
10002d1e:	2000      	movs	r0, #0
10002d20:	e7d1      	b.n	10002cc6 <xTaskPriorityDisinherit+0x1a>
10002d22:	bf00      	nop
10002d24:	38008a58 	stmdacc	r0, {r3, r4, r6, r9, fp, pc}
10002d28:	380085bc 	stmdacc	r0, {r2, r3, r4, r5, r7, r8, sl, pc}

10002d2c <vApplicationGetIdleTaskMemory>:
                                        configSTACK_DEPTH_TYPE * puxIdleTaskStackSize )
    {
        static StaticTask_t xIdleTaskTCB;
        static StackType_t uxIdleTaskStack[ configMINIMAL_STACK_SIZE ];

        *ppxIdleTaskTCBBuffer = &( xIdleTaskTCB );
10002d2c:	4b03      	ldr	r3, [pc, #12]	; (10002d3c <vApplicationGetIdleTaskMemory+0x10>)
10002d2e:	6003      	str	r3, [r0, #0]
        *ppxIdleTaskStackBuffer = &( uxIdleTaskStack[ 0 ] );
10002d30:	4b03      	ldr	r3, [pc, #12]	; (10002d40 <vApplicationGetIdleTaskMemory+0x14>)
10002d32:	600b      	str	r3, [r1, #0]
        *puxIdleTaskStackSize = configMINIMAL_STACK_SIZE;
10002d34:	2380      	movs	r3, #128	; 0x80
10002d36:	6013      	str	r3, [r2, #0]
    }
10002d38:	4770      	bx	lr
10002d3a:	bf00      	nop
10002d3c:	38008a98 	stmdacc	r0, {r3, r4, r7, r9, fp, pc}
10002d40:	38008650 	stmdacc	r0, {r4, r6, r9, sl, pc}

10002d44 <prvCreateIdleTasks>:
{
10002d44:	b530      	push	{r4, r5, lr}
10002d46:	b089      	sub	sp, #36	; 0x24
    for( xIdleTaskNameIndex = ( BaseType_t ) 0; xIdleTaskNameIndex < ( BaseType_t ) configMAX_TASK_NAME_LEN; xIdleTaskNameIndex++ )
10002d48:	2300      	movs	r3, #0
10002d4a:	2b03      	cmp	r3, #3
10002d4c:	dc09      	bgt.n	10002d62 <prvCreateIdleTasks+0x1e>
        cIdleName[ xIdleTaskNameIndex ] = configIDLE_TASK_NAME[ xIdleTaskNameIndex ];
10002d4e:	4a15      	ldr	r2, [pc, #84]	; (10002da4 <prvCreateIdleTasks+0x60>)
10002d50:	5cd2      	ldrb	r2, [r2, r3]
10002d52:	f103 0120 	add.w	r1, r3, #32
10002d56:	4469      	add	r1, sp
10002d58:	f801 2c04 	strb.w	r2, [r1, #-4]
        if( cIdleName[ xIdleTaskNameIndex ] == ( char ) 0x00 )
10002d5c:	b10a      	cbz	r2, 10002d62 <prvCreateIdleTasks+0x1e>
    for( xIdleTaskNameIndex = ( BaseType_t ) 0; xIdleTaskNameIndex < ( BaseType_t ) configMAX_TASK_NAME_LEN; xIdleTaskNameIndex++ )
10002d5e:	3301      	adds	r3, #1
10002d60:	e7f3      	b.n	10002d4a <prvCreateIdleTasks+0x6>
10002d62:	2400      	movs	r4, #0
    for( xCoreID = ( BaseType_t ) 0; xCoreID < ( BaseType_t ) configNUMBER_OF_CORES; xCoreID++ )
10002d64:	2c00      	cmp	r4, #0
10002d66:	dd02      	ble.n	10002d6e <prvCreateIdleTasks+0x2a>
10002d68:	2001      	movs	r0, #1
}
10002d6a:	b009      	add	sp, #36	; 0x24
10002d6c:	bd30      	pop	{r4, r5, pc}
            StaticTask_t * pxIdleTaskTCBBuffer = NULL;
10002d6e:	2500      	movs	r5, #0
10002d70:	9504      	str	r5, [sp, #16]
            StackType_t * pxIdleTaskStackBuffer = NULL;
10002d72:	9505      	str	r5, [sp, #20]
                vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &uxIdleTaskStackSize );
10002d74:	aa06      	add	r2, sp, #24
10002d76:	a905      	add	r1, sp, #20
10002d78:	a804      	add	r0, sp, #16
10002d7a:	f7ff ffd7 	bl	10002d2c <vApplicationGetIdleTaskMemory>
            xIdleTaskHandles[ xCoreID ] = xTaskCreateStatic( pxIdleTaskFunction,
10002d7e:	9b04      	ldr	r3, [sp, #16]
10002d80:	9302      	str	r3, [sp, #8]
10002d82:	9b05      	ldr	r3, [sp, #20]
10002d84:	9301      	str	r3, [sp, #4]
10002d86:	9500      	str	r5, [sp, #0]
10002d88:	462b      	mov	r3, r5
10002d8a:	9a06      	ldr	r2, [sp, #24]
10002d8c:	a907      	add	r1, sp, #28
10002d8e:	4806      	ldr	r0, [pc, #24]	; (10002da8 <prvCreateIdleTasks+0x64>)
10002d90:	f7ff fc6c 	bl	1000266c <xTaskCreateStatic>
10002d94:	4b05      	ldr	r3, [pc, #20]	; (10002dac <prvCreateIdleTasks+0x68>)
10002d96:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
            if( xIdleTaskHandles[ xCoreID ] != NULL )
10002d9a:	b108      	cbz	r0, 10002da0 <prvCreateIdleTasks+0x5c>
    for( xCoreID = ( BaseType_t ) 0; xCoreID < ( BaseType_t ) configNUMBER_OF_CORES; xCoreID++ )
10002d9c:	3401      	adds	r4, #1
10002d9e:	e7e1      	b.n	10002d64 <prvCreateIdleTasks+0x20>
                xReturn = pdFAIL;
10002da0:	2000      	movs	r0, #0
10002da2:	e7e2      	b.n	10002d6a <prvCreateIdleTasks+0x26>
10002da4:	10005b98 	mulne	r0, r8, fp
10002da8:	100029cd 	andne	r2, r0, sp, asr #19
10002dac:	38008a94 	stmdacc	r0, {r2, r4, r7, r9, fp, pc}

10002db0 <vTaskStartScheduler>:
{
10002db0:	b508      	push	{r3, lr}
    xReturn = prvCreateIdleTasks();
10002db2:	f7ff ffc7 	bl	10002d44 <prvCreateIdleTasks>
        if( xReturn == pdPASS )
10002db6:	2801      	cmp	r0, #1
10002db8:	d004      	beq.n	10002dc4 <vTaskStartScheduler+0x14>
    if( xReturn == pdPASS )
10002dba:	2801      	cmp	r0, #1
10002dbc:	d005      	beq.n	10002dca <vTaskStartScheduler+0x1a>
    ( void ) uxTopUsedPriority;
10002dbe:	4b0a      	ldr	r3, [pc, #40]	; (10002de8 <vTaskStartScheduler+0x38>)
10002dc0:	681b      	ldr	r3, [r3, #0]
}
10002dc2:	bd08      	pop	{r3, pc}
            xReturn = xTimerCreateTimerTask();
10002dc4:	f000 f9a6 	bl	10003114 <xTimerCreateTimerTask>
10002dc8:	e7f7      	b.n	10002dba <vTaskStartScheduler+0xa>
        portDISABLE_INTERRUPTS();
10002dca:	f000 fc47 	bl	1000365c <ulSetInterruptMask>
        xNextTaskUnblockTime = portMAX_DELAY;
10002dce:	4b07      	ldr	r3, [pc, #28]	; (10002dec <vTaskStartScheduler+0x3c>)
10002dd0:	f04f 32ff 	mov.w	r2, #4294967295
10002dd4:	601a      	str	r2, [r3, #0]
        xSchedulerRunning = pdTRUE;
10002dd6:	4b06      	ldr	r3, [pc, #24]	; (10002df0 <vTaskStartScheduler+0x40>)
10002dd8:	2201      	movs	r2, #1
10002dda:	601a      	str	r2, [r3, #0]
        xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
10002ddc:	4b05      	ldr	r3, [pc, #20]	; (10002df4 <vTaskStartScheduler+0x44>)
10002dde:	2200      	movs	r2, #0
10002de0:	601a      	str	r2, [r3, #0]
        ( void ) xPortStartScheduler();
10002de2:	f000 fbf5 	bl	100035d0 <xPortStartScheduler>
10002de6:	e7ea      	b.n	10002dbe <vTaskStartScheduler+0xe>
10002de8:	38000004 	stmdacc	r0, {r2}
10002dec:	38008ae4 	stmdacc	r0, {r2, r5, r6, r7, r9, fp, pc}
10002df0:	38008b0c 	stmdacc	r0, {r2, r3, r8, r9, fp, pc}
10002df4:	38008b48 	stmdacc	r0, {r3, r6, r8, r9, fp, pc}

10002df8 <vApplicationGetTimerTaskMemory>:
                                         configSTACK_DEPTH_TYPE * puxTimerTaskStackSize )
    {
        static StaticTask_t xTimerTaskTCB;
        static StackType_t uxTimerTaskStack[ configTIMER_TASK_STACK_DEPTH ];

        *ppxTimerTaskTCBBuffer = &( xTimerTaskTCB );
10002df8:	4b03      	ldr	r3, [pc, #12]	; (10002e08 <vApplicationGetTimerTaskMemory+0x10>)
10002dfa:	6003      	str	r3, [r0, #0]
        *ppxTimerTaskStackBuffer = &( uxTimerTaskStack[ 0 ] );
10002dfc:	4b03      	ldr	r3, [pc, #12]	; (10002e0c <vApplicationGetTimerTaskMemory+0x14>)
10002dfe:	600b      	str	r3, [r1, #0]
        *puxTimerTaskStackSize = configTIMER_TASK_STACK_DEPTH;
10002e00:	2380      	movs	r3, #128	; 0x80
10002e02:	6013      	str	r3, [r2, #0]
    }
10002e04:	4770      	bx	lr
10002e06:	bf00      	nop
10002e08:	38008b4c 	stmdacc	r0, {r2, r3, r6, r8, r9, fp, pc}
10002e0c:	38008858 	stmdacc	r0, {r3, r4, r6, fp, pc}

10002e10 <prvGetNextExpireTime>:
         * the timer with the nearest expiry time will expire.  If there are no
         * active timers then just set the next expire time to 0.  That will cause
         * this task to unblock when the tick count overflows, at which point the
         * timer lists will be switched and the next expiry time can be
         * re-assessed.  */
        *pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
10002e10:	4b06      	ldr	r3, [pc, #24]	; (10002e2c <prvGetNextExpireTime+0x1c>)
10002e12:	681a      	ldr	r2, [r3, #0]
10002e14:	6813      	ldr	r3, [r2, #0]
10002e16:	b92b      	cbnz	r3, 10002e24 <prvGetNextExpireTime+0x14>
10002e18:	2301      	movs	r3, #1
10002e1a:	6003      	str	r3, [r0, #0]

        if( *pxListWasEmpty == pdFALSE )
10002e1c:	b923      	cbnz	r3, 10002e28 <prvGetNextExpireTime+0x18>
        {
            xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
10002e1e:	68d3      	ldr	r3, [r2, #12]
10002e20:	6818      	ldr	r0, [r3, #0]
10002e22:	4770      	bx	lr
        *pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
10002e24:	2300      	movs	r3, #0
10002e26:	e7f8      	b.n	10002e1a <prvGetNextExpireTime+0xa>
        }
        else
        {
            /* Ensure the task unblocks when the tick count rolls over. */
            xNextExpireTime = ( TickType_t ) 0U;
10002e28:	2000      	movs	r0, #0
        }

        return xNextExpireTime;
    }
10002e2a:	4770      	bx	lr
10002e2c:	38008b9c 	stmdacc	r0, {r2, r3, r4, r7, r8, r9, fp, pc}

10002e30 <prvInsertTimerInActiveList>:

    static BaseType_t prvInsertTimerInActiveList( Timer_t * const pxTimer,
                                                  const TickType_t xNextExpiryTime,
                                                  const TickType_t xTimeNow,
                                                  const TickType_t xCommandTime )
    {
10002e30:	b508      	push	{r3, lr}
        BaseType_t xProcessTimerNow = pdFALSE;

        listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
10002e32:	6041      	str	r1, [r0, #4]
        listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
10002e34:	6100      	str	r0, [r0, #16]

        if( xNextExpiryTime <= xTimeNow )
10002e36:	4291      	cmp	r1, r2
10002e38:	d80c      	bhi.n	10002e54 <prvInsertTimerInActiveList+0x24>
        {
            /* Has the expiry time elapsed between the command to start/reset a
             * timer was issued, and the time the command was processed? */
            if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks )
10002e3a:	1ad2      	subs	r2, r2, r3
10002e3c:	6983      	ldr	r3, [r0, #24]
10002e3e:	429a      	cmp	r2, r3
10002e40:	d301      	bcc.n	10002e46 <prvInsertTimerInActiveList+0x16>
            {
                /* The time between a command being issued and the command being
                 * processed actually exceeds the timers period.  */
                xProcessTimerNow = pdTRUE;
10002e42:	2001      	movs	r0, #1
                vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
            }
        }

        return xProcessTimerNow;
    }
10002e44:	bd08      	pop	{r3, pc}
                vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
10002e46:	1d01      	adds	r1, r0, #4
10002e48:	4b09      	ldr	r3, [pc, #36]	; (10002e70 <prvInsertTimerInActiveList+0x40>)
10002e4a:	6818      	ldr	r0, [r3, #0]
10002e4c:	f7ff f810 	bl	10001e70 <vListInsert>
        BaseType_t xProcessTimerNow = pdFALSE;
10002e50:	2000      	movs	r0, #0
10002e52:	e7f7      	b.n	10002e44 <prvInsertTimerInActiveList+0x14>
            if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
10002e54:	429a      	cmp	r2, r3
10002e56:	d201      	bcs.n	10002e5c <prvInsertTimerInActiveList+0x2c>
10002e58:	4299      	cmp	r1, r3
10002e5a:	d206      	bcs.n	10002e6a <prvInsertTimerInActiveList+0x3a>
                vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
10002e5c:	1d01      	adds	r1, r0, #4
10002e5e:	4b05      	ldr	r3, [pc, #20]	; (10002e74 <prvInsertTimerInActiveList+0x44>)
10002e60:	6818      	ldr	r0, [r3, #0]
10002e62:	f7ff f805 	bl	10001e70 <vListInsert>
        BaseType_t xProcessTimerNow = pdFALSE;
10002e66:	2000      	movs	r0, #0
10002e68:	e7ec      	b.n	10002e44 <prvInsertTimerInActiveList+0x14>
                xProcessTimerNow = pdTRUE;
10002e6a:	2001      	movs	r0, #1
        return xProcessTimerNow;
10002e6c:	e7ea      	b.n	10002e44 <prvInsertTimerInActiveList+0x14>
10002e6e:	bf00      	nop
10002e70:	38008ba0 	stmdacc	r0, {r5, r7, r8, r9, fp, pc}
10002e74:	38008b9c 	stmdacc	r0, {r2, r3, r4, r7, r8, r9, fp, pc}

10002e78 <prvReloadTimer>:
    {
10002e78:	b570      	push	{r4, r5, r6, lr}
10002e7a:	4604      	mov	r4, r0
10002e7c:	460d      	mov	r5, r1
10002e7e:	4616      	mov	r6, r2
        while( prvInsertTimerInActiveList( pxTimer, ( xExpiredTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xExpiredTime ) != pdFALSE )
10002e80:	e004      	b.n	10002e8c <prvReloadTimer+0x14>
            xExpiredTime += pxTimer->xTimerPeriodInTicks;
10002e82:	69a3      	ldr	r3, [r4, #24]
10002e84:	441d      	add	r5, r3
            pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
10002e86:	6a23      	ldr	r3, [r4, #32]
10002e88:	4620      	mov	r0, r4
10002e8a:	4798      	blx	r3
        while( prvInsertTimerInActiveList( pxTimer, ( xExpiredTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xExpiredTime ) != pdFALSE )
10002e8c:	69a1      	ldr	r1, [r4, #24]
10002e8e:	462b      	mov	r3, r5
10002e90:	4632      	mov	r2, r6
10002e92:	4429      	add	r1, r5
10002e94:	4620      	mov	r0, r4
10002e96:	f7ff ffcb 	bl	10002e30 <prvInsertTimerInActiveList>
10002e9a:	2800      	cmp	r0, #0
10002e9c:	d1f1      	bne.n	10002e82 <prvReloadTimer+0xa>
    }
10002e9e:	bd70      	pop	{r4, r5, r6, pc}

10002ea0 <prvProcessExpiredTimer>:
    {
10002ea0:	b570      	push	{r4, r5, r6, lr}
10002ea2:	4605      	mov	r5, r0
10002ea4:	460e      	mov	r6, r1
        Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList );
10002ea6:	4b0d      	ldr	r3, [pc, #52]	; (10002edc <prvProcessExpiredTimer+0x3c>)
10002ea8:	681b      	ldr	r3, [r3, #0]
10002eaa:	68db      	ldr	r3, [r3, #12]
10002eac:	68dc      	ldr	r4, [r3, #12]
        ( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
10002eae:	1d20      	adds	r0, r4, #4
10002eb0:	f7fe fff7 	bl	10001ea2 <uxListRemove>
        if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0U )
10002eb4:	f894 3024 	ldrb.w	r3, [r4, #36]	; 0x24
10002eb8:	f013 0f04 	tst.w	r3, #4
10002ebc:	d107      	bne.n	10002ece <prvProcessExpiredTimer+0x2e>
            pxTimer->ucStatus &= ( ( uint8_t ) ~tmrSTATUS_IS_ACTIVE );
10002ebe:	f023 0301 	bic.w	r3, r3, #1
10002ec2:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
        pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
10002ec6:	6a23      	ldr	r3, [r4, #32]
10002ec8:	4620      	mov	r0, r4
10002eca:	4798      	blx	r3
    }
10002ecc:	bd70      	pop	{r4, r5, r6, pc}
            prvReloadTimer( pxTimer, xNextExpireTime, xTimeNow );
10002ece:	4632      	mov	r2, r6
10002ed0:	4629      	mov	r1, r5
10002ed2:	4620      	mov	r0, r4
10002ed4:	f7ff ffd0 	bl	10002e78 <prvReloadTimer>
10002ed8:	e7f5      	b.n	10002ec6 <prvProcessExpiredTimer+0x26>
10002eda:	bf00      	nop
10002edc:	38008b9c 	stmdacc	r0, {r2, r3, r4, r7, r8, r9, fp, pc}

10002ee0 <prvSwitchTimerLists>:
        }
    }
/*-----------------------------------------------------------*/

    static void prvSwitchTimerLists( void )
    {
10002ee0:	b508      	push	{r3, lr}

        /* The tick count has overflowed.  The timer lists must be switched.
         * If there are any timers still referenced from the current timer list
         * then they must have expired and should be processed before the lists
         * are switched. */
        while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
10002ee2:	e005      	b.n	10002ef0 <prvSwitchTimerLists+0x10>
        {
            xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
10002ee4:	68db      	ldr	r3, [r3, #12]

            /* Process the expired timer.  For auto-reload timers, be careful to
             * process only expirations that occur on the current list.  Further
             * expirations must wait until after the lists are switched. */
            prvProcessExpiredTimer( xNextExpireTime, tmrMAX_TIME_BEFORE_OVERFLOW );
10002ee6:	f04f 31ff 	mov.w	r1, #4294967295
10002eea:	6818      	ldr	r0, [r3, #0]
10002eec:	f7ff ffd8 	bl	10002ea0 <prvProcessExpiredTimer>
        while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
10002ef0:	4b05      	ldr	r3, [pc, #20]	; (10002f08 <prvSwitchTimerLists+0x28>)
10002ef2:	681b      	ldr	r3, [r3, #0]
10002ef4:	681a      	ldr	r2, [r3, #0]
10002ef6:	2a00      	cmp	r2, #0
10002ef8:	d1f4      	bne.n	10002ee4 <prvSwitchTimerLists+0x4>
        }

        pxTemp = pxCurrentTimerList;
        pxCurrentTimerList = pxOverflowTimerList;
10002efa:	4a04      	ldr	r2, [pc, #16]	; (10002f0c <prvSwitchTimerLists+0x2c>)
10002efc:	6810      	ldr	r0, [r2, #0]
10002efe:	4902      	ldr	r1, [pc, #8]	; (10002f08 <prvSwitchTimerLists+0x28>)
10002f00:	6008      	str	r0, [r1, #0]
        pxOverflowTimerList = pxTemp;
10002f02:	6013      	str	r3, [r2, #0]
    }
10002f04:	bd08      	pop	{r3, pc}
10002f06:	bf00      	nop
10002f08:	38008b9c 	stmdacc	r0, {r2, r3, r4, r7, r8, r9, fp, pc}
10002f0c:	38008ba0 	stmdacc	r0, {r5, r7, r8, r9, fp, pc}

10002f10 <prvSampleTimeNow>:
    {
10002f10:	b538      	push	{r3, r4, r5, lr}
10002f12:	4605      	mov	r5, r0
        xTimeNow = xTaskGetTickCount();
10002f14:	f7ff fbd8 	bl	100026c8 <xTaskGetTickCount>
10002f18:	4604      	mov	r4, r0
        if( xTimeNow < xLastTime )
10002f1a:	4b07      	ldr	r3, [pc, #28]	; (10002f38 <prvSampleTimeNow+0x28>)
10002f1c:	681b      	ldr	r3, [r3, #0]
10002f1e:	4283      	cmp	r3, r0
10002f20:	d805      	bhi.n	10002f2e <prvSampleTimeNow+0x1e>
            *pxTimerListsWereSwitched = pdFALSE;
10002f22:	2300      	movs	r3, #0
10002f24:	602b      	str	r3, [r5, #0]
        xLastTime = xTimeNow;
10002f26:	4b04      	ldr	r3, [pc, #16]	; (10002f38 <prvSampleTimeNow+0x28>)
10002f28:	601c      	str	r4, [r3, #0]
    }
10002f2a:	4620      	mov	r0, r4
10002f2c:	bd38      	pop	{r3, r4, r5, pc}
            prvSwitchTimerLists();
10002f2e:	f7ff ffd7 	bl	10002ee0 <prvSwitchTimerLists>
            *pxTimerListsWereSwitched = pdTRUE;
10002f32:	2301      	movs	r3, #1
10002f34:	602b      	str	r3, [r5, #0]
10002f36:	e7f6      	b.n	10002f26 <prvSampleTimeNow+0x16>
10002f38:	38008c7c 	stmdacc	r0, {r2, r3, r4, r5, r6, sl, fp, pc}

10002f3c <prvProcessTimerOrBlockTask>:
    {
10002f3c:	b570      	push	{r4, r5, r6, lr}
10002f3e:	b082      	sub	sp, #8
10002f40:	4606      	mov	r6, r0
10002f42:	460c      	mov	r4, r1
        vTaskSuspendAll();
10002f44:	f7ff fbb8 	bl	100026b8 <vTaskSuspendAll>
            xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
10002f48:	a801      	add	r0, sp, #4
10002f4a:	f7ff ffe1 	bl	10002f10 <prvSampleTimeNow>
            if( xTimerListsWereSwitched == pdFALSE )
10002f4e:	9b01      	ldr	r3, [sp, #4]
10002f50:	bb03      	cbnz	r3, 10002f94 <prvProcessTimerOrBlockTask+0x58>
10002f52:	4605      	mov	r5, r0
                if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
10002f54:	b90c      	cbnz	r4, 10002f5a <prvProcessTimerOrBlockTask+0x1e>
10002f56:	42b0      	cmp	r0, r6
10002f58:	d210      	bcs.n	10002f7c <prvProcessTimerOrBlockTask+0x40>
                    if( xListWasEmpty != pdFALSE )
10002f5a:	b124      	cbz	r4, 10002f66 <prvProcessTimerOrBlockTask+0x2a>
                        xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
10002f5c:	4a0f      	ldr	r2, [pc, #60]	; (10002f9c <prvProcessTimerOrBlockTask+0x60>)
10002f5e:	6812      	ldr	r2, [r2, #0]
10002f60:	6812      	ldr	r2, [r2, #0]
10002f62:	b992      	cbnz	r2, 10002f8a <prvProcessTimerOrBlockTask+0x4e>
10002f64:	2401      	movs	r4, #1
                    vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
10002f66:	4622      	mov	r2, r4
10002f68:	1b71      	subs	r1, r6, r5
10002f6a:	4b0d      	ldr	r3, [pc, #52]	; (10002fa0 <prvProcessTimerOrBlockTask+0x64>)
10002f6c:	6818      	ldr	r0, [r3, #0]
10002f6e:	f7ff f95b 	bl	10002228 <vQueueWaitForMessageRestricted>
                    if( xTaskResumeAll() == pdFALSE )
10002f72:	f7ff fc83 	bl	1000287c <xTaskResumeAll>
10002f76:	b150      	cbz	r0, 10002f8e <prvProcessTimerOrBlockTask+0x52>
    }
10002f78:	b002      	add	sp, #8
10002f7a:	bd70      	pop	{r4, r5, r6, pc}
                    ( void ) xTaskResumeAll();
10002f7c:	f7ff fc7e 	bl	1000287c <xTaskResumeAll>
                    prvProcessExpiredTimer( xNextExpireTime, xTimeNow );
10002f80:	4629      	mov	r1, r5
10002f82:	4630      	mov	r0, r6
10002f84:	f7ff ff8c 	bl	10002ea0 <prvProcessExpiredTimer>
10002f88:	e7f6      	b.n	10002f78 <prvProcessTimerOrBlockTask+0x3c>
                        xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
10002f8a:	461c      	mov	r4, r3
10002f8c:	e7eb      	b.n	10002f66 <prvProcessTimerOrBlockTask+0x2a>
                        taskYIELD_WITHIN_API();
10002f8e:	f000 fa93 	bl	100034b8 <vPortYield>
10002f92:	e7f1      	b.n	10002f78 <prvProcessTimerOrBlockTask+0x3c>
                ( void ) xTaskResumeAll();
10002f94:	f7ff fc72 	bl	1000287c <xTaskResumeAll>
    }
10002f98:	e7ee      	b.n	10002f78 <prvProcessTimerOrBlockTask+0x3c>
10002f9a:	bf00      	nop
10002f9c:	38008ba0 	stmdacc	r0, {r5, r7, r8, r9, fp, pc}
10002fa0:	38008cdc 	stmdacc	r0, {r2, r3, r4, r6, r7, sl, fp, pc}

10002fa4 <prvProcessReceivedCommands>:
    {
10002fa4:	b530      	push	{r4, r5, lr}
10002fa6:	b087      	sub	sp, #28
        DaemonTaskMessage_t xMessage = { 0 };
10002fa8:	2300      	movs	r3, #0
10002faa:	9302      	str	r3, [sp, #8]
10002fac:	9303      	str	r3, [sp, #12]
10002fae:	9304      	str	r3, [sp, #16]
10002fb0:	9305      	str	r3, [sp, #20]
        while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL )
10002fb2:	e002      	b.n	10002fba <prvProcessReceivedCommands+0x16>
            if( xMessage.xMessageID >= ( BaseType_t ) 0 )
10002fb4:	9b02      	ldr	r3, [sp, #8]
10002fb6:	2b00      	cmp	r3, #0
10002fb8:	da0f      	bge.n	10002fda <prvProcessReceivedCommands+0x36>
        while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL )
10002fba:	2200      	movs	r2, #0
10002fbc:	a902      	add	r1, sp, #8
10002fbe:	4b36      	ldr	r3, [pc, #216]	; (10003098 <prvProcessReceivedCommands+0xf4>)
10002fc0:	6818      	ldr	r0, [r3, #0]
10002fc2:	f7ff f8b9 	bl	10002138 <xQueueReceive>
10002fc6:	2800      	cmp	r0, #0
10002fc8:	d064      	beq.n	10003094 <prvProcessReceivedCommands+0xf0>
                if( xMessage.xMessageID < ( BaseType_t ) 0 )
10002fca:	9b02      	ldr	r3, [sp, #8]
10002fcc:	2b00      	cmp	r3, #0
10002fce:	daf1      	bge.n	10002fb4 <prvProcessReceivedCommands+0x10>
                    pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
10002fd0:	9905      	ldr	r1, [sp, #20]
10002fd2:	9804      	ldr	r0, [sp, #16]
10002fd4:	9b03      	ldr	r3, [sp, #12]
10002fd6:	4798      	blx	r3
10002fd8:	e7ec      	b.n	10002fb4 <prvProcessReceivedCommands+0x10>
                pxTimer = xMessage.u.xTimerParameters.pxTimer;
10002fda:	9c04      	ldr	r4, [sp, #16]
                if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE )
10002fdc:	6963      	ldr	r3, [r4, #20]
10002fde:	b113      	cbz	r3, 10002fe6 <prvProcessReceivedCommands+0x42>
                    ( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
10002fe0:	1d20      	adds	r0, r4, #4
10002fe2:	f7fe ff5e 	bl	10001ea2 <uxListRemove>
                xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
10002fe6:	a801      	add	r0, sp, #4
10002fe8:	f7ff ff92 	bl	10002f10 <prvSampleTimeNow>
10002fec:	4605      	mov	r5, r0
                switch( xMessage.xMessageID )
10002fee:	9b02      	ldr	r3, [sp, #8]
10002ff0:	3b01      	subs	r3, #1
10002ff2:	2b08      	cmp	r3, #8
10002ff4:	d8e1      	bhi.n	10002fba <prvProcessReceivedCommands+0x16>
10002ff6:	e8df f003 	tbb	[pc, r3]
10002ffa:	30290505 	eorcc	r0, r9, r5, lsl #10
10002ffe:	2905053f 	stmdbcs	r5, {r0, r1, r2, r3, r4, r5, r8, sl}
10003002:	f8940030 			; <UNDEFINED> instruction: 0xf8940030
                        pxTimer->ucStatus |= ( uint8_t ) tmrSTATUS_IS_ACTIVE;
10003006:	3024      	adds	r0, #36	; 0x24
10003008:	f043 0301 	orr.w	r3, r3, #1
1000300c:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
                        if( prvInsertTimerInActiveList( pxTimer, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
10003010:	9b03      	ldr	r3, [sp, #12]
10003012:	69a1      	ldr	r1, [r4, #24]
10003014:	4602      	mov	r2, r0
10003016:	4419      	add	r1, r3
10003018:	4620      	mov	r0, r4
1000301a:	f7ff ff09 	bl	10002e30 <prvInsertTimerInActiveList>
1000301e:	2800      	cmp	r0, #0
10003020:	d0cb      	beq.n	10002fba <prvProcessReceivedCommands+0x16>
                            if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0U )
10003022:	f894 3024 	ldrb.w	r3, [r4, #36]	; 0x24
10003026:	f013 0f04 	tst.w	r3, #4
1000302a:	d107      	bne.n	1000303c <prvProcessReceivedCommands+0x98>
                                pxTimer->ucStatus &= ( ( uint8_t ) ~tmrSTATUS_IS_ACTIVE );
1000302c:	f023 0301 	bic.w	r3, r3, #1
10003030:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
                            pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
10003034:	6a23      	ldr	r3, [r4, #32]
10003036:	4620      	mov	r0, r4
10003038:	4798      	blx	r3
1000303a:	e7be      	b.n	10002fba <prvProcessReceivedCommands+0x16>
                                prvReloadTimer( pxTimer, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow );
1000303c:	69a3      	ldr	r3, [r4, #24]
1000303e:	462a      	mov	r2, r5
10003040:	9903      	ldr	r1, [sp, #12]
10003042:	4419      	add	r1, r3
10003044:	4620      	mov	r0, r4
10003046:	f7ff ff17 	bl	10002e78 <prvReloadTimer>
1000304a:	e7f3      	b.n	10003034 <prvProcessReceivedCommands+0x90>
                        pxTimer->ucStatus &= ( ( uint8_t ) ~tmrSTATUS_IS_ACTIVE );
1000304c:	f894 3024 	ldrb.w	r3, [r4, #36]	; 0x24
10003050:	f023 0301 	bic.w	r3, r3, #1
10003054:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
                        break;
10003058:	e7af      	b.n	10002fba <prvProcessReceivedCommands+0x16>
                        pxTimer->ucStatus |= ( uint8_t ) tmrSTATUS_IS_ACTIVE;
1000305a:	f894 3024 	ldrb.w	r3, [r4, #36]	; 0x24
1000305e:	f043 0301 	orr.w	r3, r3, #1
10003062:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
                        pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
10003066:	9903      	ldr	r1, [sp, #12]
10003068:	61a1      	str	r1, [r4, #24]
                        ( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
1000306a:	4603      	mov	r3, r0
1000306c:	4602      	mov	r2, r0
1000306e:	4401      	add	r1, r0
10003070:	4620      	mov	r0, r4
10003072:	f7ff fedd 	bl	10002e30 <prvInsertTimerInActiveList>
                        break;
10003076:	e7a0      	b.n	10002fba <prvProcessReceivedCommands+0x16>
                            if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
10003078:	f894 3024 	ldrb.w	r3, [r4, #36]	; 0x24
1000307c:	f013 0f02 	tst.w	r3, #2
10003080:	d004      	beq.n	1000308c <prvProcessReceivedCommands+0xe8>
                                pxTimer->ucStatus &= ( ( uint8_t ) ~tmrSTATUS_IS_ACTIVE );
10003082:	f023 0301 	bic.w	r3, r3, #1
10003086:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
1000308a:	e796      	b.n	10002fba <prvProcessReceivedCommands+0x16>
                                vPortFree( pxTimer );
1000308c:	4620      	mov	r0, r4
1000308e:	f000 f937 	bl	10003300 <vPortFree>
10003092:	e792      	b.n	10002fba <prvProcessReceivedCommands+0x16>
    }
10003094:	b007      	add	sp, #28
10003096:	bd30      	pop	{r4, r5, pc}
10003098:	38008cdc 	stmdacc	r0, {r2, r3, r4, r6, r7, sl, fp, pc}

1000309c <prvTimerTask>:
    {
1000309c:	b500      	push	{lr}
1000309e:	b083      	sub	sp, #12
            xNextExpireTime = prvGetNextExpireTime( &xListWasEmpty );
100030a0:	a801      	add	r0, sp, #4
100030a2:	f7ff feb5 	bl	10002e10 <prvGetNextExpireTime>
            prvProcessTimerOrBlockTask( xNextExpireTime, xListWasEmpty );
100030a6:	9901      	ldr	r1, [sp, #4]
100030a8:	f7ff ff48 	bl	10002f3c <prvProcessTimerOrBlockTask>
            prvProcessReceivedCommands();
100030ac:	f7ff ff7a 	bl	10002fa4 <prvProcessReceivedCommands>
        for( ; configCONTROL_INFINITE_LOOP(); )
100030b0:	e7f6      	b.n	100030a0 <prvTimerTask+0x4>
	...

100030b4 <prvCheckForValidListAndQueue>:
/*-----------------------------------------------------------*/

    static void prvCheckForValidListAndQueue( void )
    {
100030b4:	b530      	push	{r4, r5, lr}
100030b6:	b083      	sub	sp, #12
        /* Check that the list from which active timers are referenced, and the
         * queue used to communicate with the timer service, have been
         * initialised. */
        taskENTER_CRITICAL();
100030b8:	f000 fa0a 	bl	100034d0 <vPortEnterCritical>
        {
            if( xTimerQueue == NULL )
100030bc:	4b0e      	ldr	r3, [pc, #56]	; (100030f8 <prvCheckForValidListAndQueue+0x44>)
100030be:	681b      	ldr	r3, [r3, #0]
100030c0:	b11b      	cbz	r3, 100030ca <prvCheckForValidListAndQueue+0x16>
            else
            {
                mtCOVERAGE_TEST_MARKER();
            }
        }
        taskEXIT_CRITICAL();
100030c2:	f000 fa13 	bl	100034ec <vPortExitCritical>
    }
100030c6:	b003      	add	sp, #12
100030c8:	bd30      	pop	{r4, r5, pc}
                vListInitialise( &xActiveTimerList1 );
100030ca:	4d0c      	ldr	r5, [pc, #48]	; (100030fc <prvCheckForValidListAndQueue+0x48>)
100030cc:	4628      	mov	r0, r5
100030ce:	f7fe febf 	bl	10001e50 <vListInitialise>
                vListInitialise( &xActiveTimerList2 );
100030d2:	4c0b      	ldr	r4, [pc, #44]	; (10003100 <prvCheckForValidListAndQueue+0x4c>)
100030d4:	4620      	mov	r0, r4
100030d6:	f7fe febb 	bl	10001e50 <vListInitialise>
                pxCurrentTimerList = &xActiveTimerList1;
100030da:	4b0a      	ldr	r3, [pc, #40]	; (10003104 <prvCheckForValidListAndQueue+0x50>)
100030dc:	601d      	str	r5, [r3, #0]
                pxOverflowTimerList = &xActiveTimerList2;
100030de:	4b0a      	ldr	r3, [pc, #40]	; (10003108 <prvCheckForValidListAndQueue+0x54>)
100030e0:	601c      	str	r4, [r3, #0]
                    xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
100030e2:	2300      	movs	r3, #0
100030e4:	9300      	str	r3, [sp, #0]
100030e6:	4b09      	ldr	r3, [pc, #36]	; (1000310c <prvCheckForValidListAndQueue+0x58>)
100030e8:	4a09      	ldr	r2, [pc, #36]	; (10003110 <prvCheckForValidListAndQueue+0x5c>)
100030ea:	2110      	movs	r1, #16
100030ec:	200a      	movs	r0, #10
100030ee:	f7ff f804 	bl	100020fa <xQueueGenericCreateStatic>
100030f2:	4b01      	ldr	r3, [pc, #4]	; (100030f8 <prvCheckForValidListAndQueue+0x44>)
100030f4:	6018      	str	r0, [r3, #0]
100030f6:	e7e4      	b.n	100030c2 <prvCheckForValidListAndQueue+0xe>
100030f8:	38008cdc 	stmdacc	r0, {r2, r3, r4, r6, r7, sl, fp, pc}
100030fc:	38008c44 	stmdacc	r0, {r2, r6, sl, fp, pc}
10003100:	38008c60 	stmdacc	r0, {r5, r6, sl, fp, pc}
10003104:	38008b9c 	stmdacc	r0, {r2, r3, r4, r7, r8, r9, fp, pc}
10003108:	38008ba0 	stmdacc	r0, {r5, r7, r8, r9, fp, pc}
1000310c:	38008c80 	stmdacc	r0, {r7, sl, fp, pc}
10003110:	38008ba4 	stmdacc	r0, {r2, r5, r7, r8, r9, fp, pc}

10003114 <xTimerCreateTimerTask>:
    {
10003114:	b510      	push	{r4, lr}
10003116:	b088      	sub	sp, #32
        prvCheckForValidListAndQueue();
10003118:	f7ff ffcc 	bl	100030b4 <prvCheckForValidListAndQueue>
        if( xTimerQueue != NULL )
1000311c:	4b10      	ldr	r3, [pc, #64]	; (10003160 <xTimerCreateTimerTask+0x4c>)
1000311e:	681b      	ldr	r3, [r3, #0]
10003120:	b1d3      	cbz	r3, 10003158 <xTimerCreateTimerTask+0x44>
                    StaticTask_t * pxTimerTaskTCBBuffer = NULL;
10003122:	2400      	movs	r4, #0
10003124:	9405      	str	r4, [sp, #20]
                    StackType_t * pxTimerTaskStackBuffer = NULL;
10003126:	9406      	str	r4, [sp, #24]
                    vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &uxTimerTaskStackSize );
10003128:	aa07      	add	r2, sp, #28
1000312a:	a906      	add	r1, sp, #24
1000312c:	a805      	add	r0, sp, #20
1000312e:	f7ff fe63 	bl	10002df8 <vApplicationGetTimerTaskMemory>
                    xTimerTaskHandle = xTaskCreateStatic( prvTimerTask,
10003132:	9b05      	ldr	r3, [sp, #20]
10003134:	9302      	str	r3, [sp, #8]
10003136:	9b06      	ldr	r3, [sp, #24]
10003138:	9301      	str	r3, [sp, #4]
1000313a:	2304      	movs	r3, #4
1000313c:	9300      	str	r3, [sp, #0]
1000313e:	4623      	mov	r3, r4
10003140:	9a07      	ldr	r2, [sp, #28]
10003142:	4908      	ldr	r1, [pc, #32]	; (10003164 <xTimerCreateTimerTask+0x50>)
10003144:	4808      	ldr	r0, [pc, #32]	; (10003168 <xTimerCreateTimerTask+0x54>)
10003146:	f7ff fa91 	bl	1000266c <xTaskCreateStatic>
1000314a:	4b08      	ldr	r3, [pc, #32]	; (1000316c <xTimerCreateTimerTask+0x58>)
1000314c:	6018      	str	r0, [r3, #0]
                    if( xTimerTaskHandle != NULL )
1000314e:	b108      	cbz	r0, 10003154 <xTimerCreateTimerTask+0x40>
                        xReturn = pdPASS;
10003150:	2001      	movs	r0, #1
10003152:	e002      	b.n	1000315a <xTimerCreateTimerTask+0x46>
        BaseType_t xReturn = pdFAIL;
10003154:	4620      	mov	r0, r4
10003156:	e000      	b.n	1000315a <xTimerCreateTimerTask+0x46>
10003158:	2000      	movs	r0, #0
    }
1000315a:	b008      	add	sp, #32
1000315c:	bd10      	pop	{r4, pc}
1000315e:	bf00      	nop
10003160:	38008cdc 	stmdacc	r0, {r2, r3, r4, r6, r7, sl, fp, pc}
10003164:	10005ba0 	andne	r5, r0, r0, lsr #23
10003168:	1000309d 	mulne	r0, sp, r0
1000316c:	38008ce0 	stmdacc	r0, {r5, r6, r7, sl, fp, pc}

10003170 <prvHeapInit>:
    BlockLink_t * pxFirstFreeBlock;
    portPOINTER_SIZE_TYPE uxStartAddress, uxEndAddress;
    size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;

    /* Ensure the heap starts on a correctly aligned boundary. */
    uxStartAddress = ( portPOINTER_SIZE_TYPE ) ucHeap;
10003170:	4a10      	ldr	r2, [pc, #64]	; (100031b4 <prvHeapInit+0x44>)

    if( ( uxStartAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
10003172:	f012 0f07 	tst.w	r2, #7
10003176:	d01a      	beq.n	100031ae <prvHeapInit+0x3e>
    {
        uxStartAddress += ( portBYTE_ALIGNMENT - 1 );
10003178:	1dd1      	adds	r1, r2, #7
        uxStartAddress &= ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK );
1000317a:	f021 0107 	bic.w	r1, r1, #7
        xTotalHeapSize -= ( size_t ) ( uxStartAddress - ( portPOINTER_SIZE_TYPE ) ucHeap );
1000317e:	f5c1 4300 	rsb	r3, r1, #32768	; 0x8000
10003182:	4413      	add	r3, r2
        uxStartAddress &= ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK );
10003184:	460a      	mov	r2, r1
    }
    #endif

    /* xStart is used to hold a pointer to the first item in the list of free
     * blocks.  The void cast is used to prevent compiler warnings. */
    xStart.pxNextFreeBlock = ( void * ) heapPROTECT_BLOCK_POINTER( uxStartAddress );
10003186:	480c      	ldr	r0, [pc, #48]	; (100031b8 <prvHeapInit+0x48>)
10003188:	6002      	str	r2, [r0, #0]
    xStart.xBlockSize = ( size_t ) 0;
1000318a:	2100      	movs	r1, #0
1000318c:	6041      	str	r1, [r0, #4]

    /* pxEnd is used to mark the end of the list of free blocks and is inserted
     * at the end of the heap space. */
    uxEndAddress = uxStartAddress + ( portPOINTER_SIZE_TYPE ) xTotalHeapSize;
1000318e:	4413      	add	r3, r2
    uxEndAddress -= ( portPOINTER_SIZE_TYPE ) xHeapStructSize;
10003190:	3b08      	subs	r3, #8
    uxEndAddress &= ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK );
10003192:	f023 0307 	bic.w	r3, r3, #7
    pxEnd = ( BlockLink_t * ) uxEndAddress;
10003196:	4809      	ldr	r0, [pc, #36]	; (100031bc <prvHeapInit+0x4c>)
10003198:	6003      	str	r3, [r0, #0]
    pxEnd->xBlockSize = 0;
1000319a:	6059      	str	r1, [r3, #4]
    pxEnd->pxNextFreeBlock = heapPROTECT_BLOCK_POINTER( NULL );
1000319c:	6019      	str	r1, [r3, #0]

    /* To start with there is a single free block that is sized to take up the
     * entire heap space, minus the space taken by pxEnd. */
    pxFirstFreeBlock = ( BlockLink_t * ) uxStartAddress;
    pxFirstFreeBlock->xBlockSize = ( size_t ) ( uxEndAddress - ( portPOINTER_SIZE_TYPE ) pxFirstFreeBlock );
1000319e:	1a99      	subs	r1, r3, r2
100031a0:	6051      	str	r1, [r2, #4]
    pxFirstFreeBlock->pxNextFreeBlock = heapPROTECT_BLOCK_POINTER( pxEnd );
100031a2:	6013      	str	r3, [r2, #0]

    /* Only one block exists - and it covers the entire usable heap space. */
    xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
100031a4:	4b06      	ldr	r3, [pc, #24]	; (100031c0 <prvHeapInit+0x50>)
100031a6:	6019      	str	r1, [r3, #0]
    xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
100031a8:	4b06      	ldr	r3, [pc, #24]	; (100031c4 <prvHeapInit+0x54>)
100031aa:	6019      	str	r1, [r3, #0]
}
100031ac:	4770      	bx	lr
    size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;
100031ae:	f44f 4300 	mov.w	r3, #32768	; 0x8000
100031b2:	e7e8      	b.n	10003186 <prvHeapInit+0x16>
100031b4:	38000468 	stmdacc	r0, {r3, r5, r6, sl}
100031b8:	38008cf8 	stmdacc	r0, {r3, r4, r5, r6, r7, sl, fp, pc}
100031bc:	38008ce4 	stmdacc	r0, {r2, r5, r6, r7, sl, fp, pc}
100031c0:	38008cec 	stmdacc	r0, {r2, r3, r5, r6, r7, sl, fp, pc}
100031c4:	38008ce8 	stmdacc	r0, {r3, r5, r6, r7, sl, fp, pc}

100031c8 <prvInsertBlockIntoFreeList>:
    BlockLink_t * pxIterator;
    uint8_t * puc;

    /* Iterate through the list until a block is found that has a higher address
     * than the block being inserted. */
    for( pxIterator = &xStart; heapPROTECT_BLOCK_POINTER( pxIterator->pxNextFreeBlock ) < pxBlockToInsert; pxIterator = heapPROTECT_BLOCK_POINTER( pxIterator->pxNextFreeBlock ) )
100031c8:	4b16      	ldr	r3, [pc, #88]	; (10003224 <prvInsertBlockIntoFreeList+0x5c>)
100031ca:	461a      	mov	r2, r3
100031cc:	681b      	ldr	r3, [r3, #0]
100031ce:	4283      	cmp	r3, r0
100031d0:	d3fb      	bcc.n	100031ca <prvInsertBlockIntoFreeList+0x2>

    /* Do the block being inserted, and the block it is being inserted after
     * make a contiguous block of memory? */
    puc = ( uint8_t * ) pxIterator;

    if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
100031d2:	6851      	ldr	r1, [r2, #4]
100031d4:	eb02 0c01 	add.w	ip, r2, r1
100031d8:	4584      	cmp	ip, r0
100031da:	d009      	beq.n	100031f0 <prvInsertBlockIntoFreeList+0x28>

    /* Do the block being inserted, and the block it is being inserted before
     * make a contiguous block of memory? */
    puc = ( uint8_t * ) pxBlockToInsert;

    if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) heapPROTECT_BLOCK_POINTER( pxIterator->pxNextFreeBlock ) )
100031dc:	6841      	ldr	r1, [r0, #4]
100031de:	eb00 0c01 	add.w	ip, r0, r1
100031e2:	4563      	cmp	r3, ip
100031e4:	d009      	beq.n	100031fa <prvInsertBlockIntoFreeList+0x32>
            pxBlockToInsert->pxNextFreeBlock = heapPROTECT_BLOCK_POINTER( pxEnd );
        }
    }
    else
    {
        pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;
100031e6:	6003      	str	r3, [r0, #0]

    /* If the block being inserted plugged a gab, so was merged with the block
     * before and the block after, then it's pxNextFreeBlock pointer will have
     * already been set, and should not be set here as that would make it point
     * to itself. */
    if( pxIterator != pxBlockToInsert )
100031e8:	4290      	cmp	r0, r2
100031ea:	d019      	beq.n	10003220 <prvInsertBlockIntoFreeList+0x58>
    {
        pxIterator->pxNextFreeBlock = heapPROTECT_BLOCK_POINTER( pxBlockToInsert );
100031ec:	6010      	str	r0, [r2, #0]
    }
    else
    {
        mtCOVERAGE_TEST_MARKER();
100031ee:	4770      	bx	lr
        pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
100031f0:	6840      	ldr	r0, [r0, #4]
100031f2:	4401      	add	r1, r0
100031f4:	6051      	str	r1, [r2, #4]
        pxBlockToInsert = pxIterator;
100031f6:	4610      	mov	r0, r2
100031f8:	e7f0      	b.n	100031dc <prvInsertBlockIntoFreeList+0x14>
{
100031fa:	b410      	push	{r4}
        if( heapPROTECT_BLOCK_POINTER( pxIterator->pxNextFreeBlock ) != pxEnd )
100031fc:	4c0a      	ldr	r4, [pc, #40]	; (10003228 <prvInsertBlockIntoFreeList+0x60>)
100031fe:	6824      	ldr	r4, [r4, #0]
10003200:	42a3      	cmp	r3, r4
10003202:	d00b      	beq.n	1000321c <prvInsertBlockIntoFreeList+0x54>
            pxBlockToInsert->xBlockSize += heapPROTECT_BLOCK_POINTER( pxIterator->pxNextFreeBlock )->xBlockSize;
10003204:	685b      	ldr	r3, [r3, #4]
10003206:	4419      	add	r1, r3
10003208:	6041      	str	r1, [r0, #4]
            pxBlockToInsert->pxNextFreeBlock = heapPROTECT_BLOCK_POINTER( pxIterator->pxNextFreeBlock )->pxNextFreeBlock;
1000320a:	6813      	ldr	r3, [r2, #0]
1000320c:	681b      	ldr	r3, [r3, #0]
1000320e:	6003      	str	r3, [r0, #0]
    if( pxIterator != pxBlockToInsert )
10003210:	4290      	cmp	r0, r2
10003212:	d000      	beq.n	10003216 <prvInsertBlockIntoFreeList+0x4e>
        pxIterator->pxNextFreeBlock = heapPROTECT_BLOCK_POINTER( pxBlockToInsert );
10003214:	6010      	str	r0, [r2, #0]
    }
}
10003216:	f85d 4b04 	ldr.w	r4, [sp], #4
1000321a:	4770      	bx	lr
            pxBlockToInsert->pxNextFreeBlock = heapPROTECT_BLOCK_POINTER( pxEnd );
1000321c:	6004      	str	r4, [r0, #0]
1000321e:	e7f7      	b.n	10003210 <prvInsertBlockIntoFreeList+0x48>
10003220:	4770      	bx	lr
10003222:	bf00      	nop
10003224:	38008cf8 	stmdacc	r0, {r3, r4, r5, r6, r7, sl, fp, pc}
10003228:	38008ce4 	stmdacc	r0, {r2, r5, r6, r7, sl, fp, pc}

1000322c <pvPortMalloc>:
{
1000322c:	b570      	push	{r4, r5, r6, lr}
    if( xWantedSize > 0 )
1000322e:	4604      	mov	r4, r0
10003230:	b170      	cbz	r0, 10003250 <pvPortMalloc+0x24>
        if( heapADD_WILL_OVERFLOW( xWantedSize, xHeapStructSize ) == 0 )
10003232:	f110 0f09 	cmn.w	r0, #9
10003236:	d80a      	bhi.n	1000324e <pvPortMalloc+0x22>
            xWantedSize += xHeapStructSize;
10003238:	3408      	adds	r4, #8
            if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
1000323a:	f014 0307 	ands.w	r3, r4, #7
1000323e:	d007      	beq.n	10003250 <pvPortMalloc+0x24>
                xAdditionalRequiredSize = portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK );
10003240:	f1c3 0308 	rsb	r3, r3, #8
                if( heapADD_WILL_OVERFLOW( xWantedSize, xAdditionalRequiredSize ) == 0 )
10003244:	43da      	mvns	r2, r3
10003246:	42a2      	cmp	r2, r4
10003248:	d312      	bcc.n	10003270 <pvPortMalloc+0x44>
                    xWantedSize += xAdditionalRequiredSize;
1000324a:	441c      	add	r4, r3
1000324c:	e000      	b.n	10003250 <pvPortMalloc+0x24>
            xWantedSize = 0;
1000324e:	2400      	movs	r4, #0
    vTaskSuspendAll();
10003250:	f7ff fa32 	bl	100026b8 <vTaskSuspendAll>
        if( pxEnd == NULL )
10003254:	4b25      	ldr	r3, [pc, #148]	; (100032ec <pvPortMalloc+0xc0>)
10003256:	681b      	ldr	r3, [r3, #0]
10003258:	b163      	cbz	r3, 10003274 <pvPortMalloc+0x48>
        if( heapBLOCK_SIZE_IS_VALID( xWantedSize ) != 0 )
1000325a:	2c00      	cmp	r4, #0
1000325c:	db3e      	blt.n	100032dc <pvPortMalloc+0xb0>
            if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
1000325e:	2c00      	cmp	r4, #0
10003260:	d03e      	beq.n	100032e0 <pvPortMalloc+0xb4>
10003262:	4b23      	ldr	r3, [pc, #140]	; (100032f0 <pvPortMalloc+0xc4>)
10003264:	681e      	ldr	r6, [r3, #0]
10003266:	42a6      	cmp	r6, r4
10003268:	d33c      	bcc.n	100032e4 <pvPortMalloc+0xb8>
                pxBlock = heapPROTECT_BLOCK_POINTER( xStart.pxNextFreeBlock );
1000326a:	4922      	ldr	r1, [pc, #136]	; (100032f4 <pvPortMalloc+0xc8>)
1000326c:	680b      	ldr	r3, [r1, #0]
                while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != heapPROTECT_BLOCK_POINTER( NULL ) ) )
1000326e:	e006      	b.n	1000327e <pvPortMalloc+0x52>
                    xWantedSize = 0;
10003270:	2400      	movs	r4, #0
10003272:	e7ed      	b.n	10003250 <pvPortMalloc+0x24>
            prvHeapInit();
10003274:	f7ff ff7c 	bl	10003170 <prvHeapInit>
10003278:	e7ef      	b.n	1000325a <pvPortMalloc+0x2e>
                    pxPreviousBlock = pxBlock;
1000327a:	4619      	mov	r1, r3
                    pxBlock = heapPROTECT_BLOCK_POINTER( pxBlock->pxNextFreeBlock );
1000327c:	4613      	mov	r3, r2
                while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != heapPROTECT_BLOCK_POINTER( NULL ) ) )
1000327e:	685a      	ldr	r2, [r3, #4]
10003280:	42a2      	cmp	r2, r4
10003282:	d202      	bcs.n	1000328a <pvPortMalloc+0x5e>
10003284:	681a      	ldr	r2, [r3, #0]
10003286:	2a00      	cmp	r2, #0
10003288:	d1f7      	bne.n	1000327a <pvPortMalloc+0x4e>
                if( pxBlock != pxEnd )
1000328a:	4a18      	ldr	r2, [pc, #96]	; (100032ec <pvPortMalloc+0xc0>)
1000328c:	6812      	ldr	r2, [r2, #0]
1000328e:	429a      	cmp	r2, r3
10003290:	d02a      	beq.n	100032e8 <pvPortMalloc+0xbc>
                    pvReturn = ( void * ) ( ( ( uint8_t * ) heapPROTECT_BLOCK_POINTER( pxPreviousBlock->pxNextFreeBlock ) ) + xHeapStructSize );
10003292:	680d      	ldr	r5, [r1, #0]
10003294:	3508      	adds	r5, #8
                    pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
10003296:	681a      	ldr	r2, [r3, #0]
10003298:	600a      	str	r2, [r1, #0]
                    if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
1000329a:	6858      	ldr	r0, [r3, #4]
1000329c:	1b00      	subs	r0, r0, r4
1000329e:	2810      	cmp	r0, #16
100032a0:	d905      	bls.n	100032ae <pvPortMalloc+0x82>
                        pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
100032a2:	191a      	adds	r2, r3, r4
                        pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
100032a4:	6050      	str	r0, [r2, #4]
                        pxBlock->xBlockSize = xWantedSize;
100032a6:	605c      	str	r4, [r3, #4]
                        pxNewBlockLink->pxNextFreeBlock = pxPreviousBlock->pxNextFreeBlock;
100032a8:	6808      	ldr	r0, [r1, #0]
100032aa:	5118      	str	r0, [r3, r4]
                        pxPreviousBlock->pxNextFreeBlock = heapPROTECT_BLOCK_POINTER( pxNewBlockLink );
100032ac:	600a      	str	r2, [r1, #0]
                    xFreeBytesRemaining -= pxBlock->xBlockSize;
100032ae:	6859      	ldr	r1, [r3, #4]
100032b0:	1a76      	subs	r6, r6, r1
100032b2:	480f      	ldr	r0, [pc, #60]	; (100032f0 <pvPortMalloc+0xc4>)
100032b4:	6006      	str	r6, [r0, #0]
                    if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
100032b6:	4810      	ldr	r0, [pc, #64]	; (100032f8 <pvPortMalloc+0xcc>)
100032b8:	6800      	ldr	r0, [r0, #0]
100032ba:	4286      	cmp	r6, r0
100032bc:	d201      	bcs.n	100032c2 <pvPortMalloc+0x96>
                        xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
100032be:	480e      	ldr	r0, [pc, #56]	; (100032f8 <pvPortMalloc+0xcc>)
100032c0:	6006      	str	r6, [r0, #0]
                    heapALLOCATE_BLOCK( pxBlock );
100032c2:	f041 4100 	orr.w	r1, r1, #2147483648	; 0x80000000
100032c6:	6059      	str	r1, [r3, #4]
                    pxBlock->pxNextFreeBlock = NULL;
100032c8:	2200      	movs	r2, #0
100032ca:	601a      	str	r2, [r3, #0]
                    xNumberOfSuccessfulAllocations++;
100032cc:	4a0b      	ldr	r2, [pc, #44]	; (100032fc <pvPortMalloc+0xd0>)
100032ce:	6813      	ldr	r3, [r2, #0]
100032d0:	3301      	adds	r3, #1
100032d2:	6013      	str	r3, [r2, #0]
    ( void ) xTaskResumeAll();
100032d4:	f7ff fad2 	bl	1000287c <xTaskResumeAll>
}
100032d8:	4628      	mov	r0, r5
100032da:	bd70      	pop	{r4, r5, r6, pc}
    void * pvReturn = NULL;
100032dc:	2500      	movs	r5, #0
100032de:	e7f9      	b.n	100032d4 <pvPortMalloc+0xa8>
100032e0:	2500      	movs	r5, #0
100032e2:	e7f7      	b.n	100032d4 <pvPortMalloc+0xa8>
100032e4:	2500      	movs	r5, #0
100032e6:	e7f5      	b.n	100032d4 <pvPortMalloc+0xa8>
100032e8:	2500      	movs	r5, #0
100032ea:	e7f3      	b.n	100032d4 <pvPortMalloc+0xa8>
100032ec:	38008ce4 	stmdacc	r0, {r2, r5, r6, r7, sl, fp, pc}
100032f0:	38008ce8 	stmdacc	r0, {r3, r5, r6, r7, sl, fp, pc}
100032f4:	38008cf8 	stmdacc	r0, {r3, r4, r5, r6, r7, sl, fp, pc}
100032f8:	38008cec 	stmdacc	r0, {r2, r3, r5, r6, r7, sl, fp, pc}
100032fc:	38008cf0 	stmdacc	r0, {r4, r5, r6, r7, sl, fp, pc}

10003300 <vPortFree>:
    if( pv != NULL )
10003300:	b308      	cbz	r0, 10003346 <vPortFree+0x46>
{
10003302:	b538      	push	{r3, r4, r5, lr}
10003304:	4604      	mov	r4, r0
        puc -= xHeapStructSize;
10003306:	f1a0 0508 	sub.w	r5, r0, #8
        if( heapBLOCK_IS_ALLOCATED( pxLink ) != 0 )
1000330a:	f850 3c04 	ldr.w	r3, [r0, #-4]
1000330e:	2b00      	cmp	r3, #0
10003310:	da02      	bge.n	10003318 <vPortFree+0x18>
            if( pxLink->pxNextFreeBlock == NULL )
10003312:	f850 2c08 	ldr.w	r2, [r0, #-8]
10003316:	b102      	cbz	r2, 1000331a <vPortFree+0x1a>
}
10003318:	bd38      	pop	{r3, r4, r5, pc}
                heapFREE_BLOCK( pxLink );
1000331a:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
1000331e:	f840 3c04 	str.w	r3, [r0, #-4]
                vTaskSuspendAll();
10003322:	f7ff f9c9 	bl	100026b8 <vTaskSuspendAll>
                    xFreeBytesRemaining += pxLink->xBlockSize;
10003326:	f854 1c04 	ldr.w	r1, [r4, #-4]
1000332a:	4a07      	ldr	r2, [pc, #28]	; (10003348 <vPortFree+0x48>)
1000332c:	6813      	ldr	r3, [r2, #0]
1000332e:	440b      	add	r3, r1
10003330:	6013      	str	r3, [r2, #0]
                    prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
10003332:	4628      	mov	r0, r5
10003334:	f7ff ff48 	bl	100031c8 <prvInsertBlockIntoFreeList>
                    xNumberOfSuccessfulFrees++;
10003338:	4a04      	ldr	r2, [pc, #16]	; (1000334c <vPortFree+0x4c>)
1000333a:	6813      	ldr	r3, [r2, #0]
1000333c:	3301      	adds	r3, #1
1000333e:	6013      	str	r3, [r2, #0]
                ( void ) xTaskResumeAll();
10003340:	f7ff fa9c 	bl	1000287c <xTaskResumeAll>
}
10003344:	e7e8      	b.n	10003318 <vPortFree+0x18>
10003346:	4770      	bx	lr
10003348:	38008ce8 	stmdacc	r0, {r3, r5, r6, r7, sl, fp, pc}
1000334c:	38008cf4 	stmdacc	r0, {r2, r4, r5, r6, r7, sl, fp, pc}

10003350 <prvTaskExitError>:
    portNVIC_SYSTICK_CTRL_REG = portNVIC_SYSTICK_CLK_BIT_CONFIG | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT;
}
/*-----------------------------------------------------------*/

static void prvTaskExitError( void )
{
10003350:	b500      	push	{lr}
10003352:	b083      	sub	sp, #12
    volatile uint32_t ulDummy = 0UL;
10003354:	2300      	movs	r3, #0
10003356:	9301      	str	r3, [sp, #4]
     * its caller as there is nothing to return to. If a task wants to exit it
     * should instead call vTaskDelete( NULL ). Artificially force an assert()
     * to be triggered if configASSERT() is defined, then stop here so
     * application writers can catch the error. */
    configASSERT( ulCriticalNesting == ~0UL );
    portDISABLE_INTERRUPTS();
10003358:	f000 f980 	bl	1000365c <ulSetInterruptMask>

    while( ulDummy == 0 )
1000335c:	9b01      	ldr	r3, [sp, #4]
1000335e:	2b00      	cmp	r3, #0
10003360:	d0fc      	beq.n	1000335c <prvTaskExitError+0xc>
         * warnings about code appearing after this function is called - making
         * ulDummy volatile makes the compiler think the function could return
         * and therefore not output an 'unreachable code' warning for code that
         * appears after it. */
    }
}
10003362:	b003      	add	sp, #12
10003364:	f85d fb04 	ldr.w	pc, [sp], #4

10003368 <vPortSuppressTicksAndSleep>:
    {
10003368:	b510      	push	{r4, lr}
        if( xExpectedIdleTime > xMaximumPossibleSuppressedTicks )
1000336a:	4b41      	ldr	r3, [pc, #260]	; (10003470 <vPortSuppressTicksAndSleep+0x108>)
1000336c:	681c      	ldr	r4, [r3, #0]
1000336e:	4284      	cmp	r4, r0
10003370:	d300      	bcc.n	10003374 <vPortSuppressTicksAndSleep+0xc>
10003372:	4604      	mov	r4, r0
        __asm volatile ( "cpsid i" ::: "memory" );
10003374:	b672      	cpsid	i
        __asm volatile ( "dsb" );
10003376:	f3bf 8f4f 	dsb	sy
        __asm volatile ( "isb" );
1000337a:	f3bf 8f6f 	isb	sy
        if( eTaskConfirmSleepModeStatus() == eAbortSleep )
1000337e:	f7ff fc71 	bl	10002c64 <eTaskConfirmSleepModeStatus>
10003382:	b908      	cbnz	r0, 10003388 <vPortSuppressTicksAndSleep+0x20>
            __asm volatile ( "cpsie i" ::: "memory" );
10003384:	b662      	cpsie	i
    }
10003386:	bd10      	pop	{r4, pc}
            portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT_CONFIG | portNVIC_SYSTICK_INT_BIT );
10003388:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
1000338c:	2206      	movs	r2, #6
1000338e:	611a      	str	r2, [r3, #16]
            ulSysTickDecrementsLeft = portNVIC_SYSTICK_CURRENT_VALUE_REG;
10003390:	699b      	ldr	r3, [r3, #24]
            if( ulSysTickDecrementsLeft == 0 )
10003392:	b90b      	cbnz	r3, 10003398 <vPortSuppressTicksAndSleep+0x30>
                ulSysTickDecrementsLeft = ulTimerCountsForOneTick;
10003394:	4b37      	ldr	r3, [pc, #220]	; (10003474 <vPortSuppressTicksAndSleep+0x10c>)
10003396:	681b      	ldr	r3, [r3, #0]
            ulReloadValue = ulSysTickDecrementsLeft + ( ulTimerCountsForOneTick * ( xExpectedIdleTime - 1UL ) );
10003398:	1e60      	subs	r0, r4, #1
1000339a:	4a36      	ldr	r2, [pc, #216]	; (10003474 <vPortSuppressTicksAndSleep+0x10c>)
1000339c:	6812      	ldr	r2, [r2, #0]
1000339e:	fb02 3300 	mla	r3, r2, r0, r3
            if( ( portNVIC_INT_CTRL_REG & portNVIC_PEND_SYSTICK_SET_BIT ) != 0 )
100033a2:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
100033a6:	f8d2 2d04 	ldr.w	r2, [r2, #3332]	; 0xd04
100033aa:	f012 6f80 	tst.w	r2, #67108864	; 0x4000000
100033ae:	d008      	beq.n	100033c2 <vPortSuppressTicksAndSleep+0x5a>
                portNVIC_INT_CTRL_REG = portNVIC_PEND_SYSTICK_CLEAR_BIT;
100033b0:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
100033b4:	f04f 7100 	mov.w	r1, #33554432	; 0x2000000
100033b8:	f8c2 1d04 	str.w	r1, [r2, #3332]	; 0xd04
                ulReloadValue -= ulTimerCountsForOneTick;
100033bc:	4a2d      	ldr	r2, [pc, #180]	; (10003474 <vPortSuppressTicksAndSleep+0x10c>)
100033be:	6812      	ldr	r2, [r2, #0]
100033c0:	1a9b      	subs	r3, r3, r2
            if( ulReloadValue > ulStoppedTimerCompensation )
100033c2:	4a2d      	ldr	r2, [pc, #180]	; (10003478 <vPortSuppressTicksAndSleep+0x110>)
100033c4:	6812      	ldr	r2, [r2, #0]
100033c6:	429a      	cmp	r2, r3
100033c8:	d200      	bcs.n	100033cc <vPortSuppressTicksAndSleep+0x64>
                ulReloadValue -= ulStoppedTimerCompensation;
100033ca:	1a9b      	subs	r3, r3, r2
            portNVIC_SYSTICK_LOAD_REG = ulReloadValue;
100033cc:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
100033d0:	6153      	str	r3, [r2, #20]
            portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
100033d2:	2100      	movs	r1, #0
100033d4:	6191      	str	r1, [r2, #24]
            portNVIC_SYSTICK_CTRL_REG |= portNVIC_SYSTICK_ENABLE_BIT;
100033d6:	6911      	ldr	r1, [r2, #16]
100033d8:	f041 0101 	orr.w	r1, r1, #1
100033dc:	6111      	str	r1, [r2, #16]
            if( xModifiableIdleTime > 0 )
100033de:	b124      	cbz	r4, 100033ea <vPortSuppressTicksAndSleep+0x82>
                __asm volatile ( "dsb" ::: "memory" );
100033e0:	f3bf 8f4f 	dsb	sy
                __asm volatile ( "wfi" );
100033e4:	bf30      	wfi
                __asm volatile ( "isb" );
100033e6:	f3bf 8f6f 	isb	sy
            __asm volatile ( "cpsie i" ::: "memory" );
100033ea:	b662      	cpsie	i
            __asm volatile ( "dsb" );
100033ec:	f3bf 8f4f 	dsb	sy
            __asm volatile ( "isb" );
100033f0:	f3bf 8f6f 	isb	sy
            __asm volatile ( "cpsid i" ::: "memory" );
100033f4:	b672      	cpsid	i
            __asm volatile ( "dsb" );
100033f6:	f3bf 8f4f 	dsb	sy
            __asm volatile ( "isb" );
100033fa:	f3bf 8f6f 	isb	sy
            portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT_CONFIG | portNVIC_SYSTICK_INT_BIT );
100033fe:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
10003402:	2106      	movs	r1, #6
10003404:	6111      	str	r1, [r2, #16]
            if( ( portNVIC_SYSTICK_CTRL_REG & portNVIC_SYSTICK_COUNT_FLAG_BIT ) != 0 )
10003406:	6912      	ldr	r2, [r2, #16]
10003408:	f412 3f80 	tst.w	r2, #65536	; 0x10000
1000340c:	d01f      	beq.n	1000344e <vPortSuppressTicksAndSleep+0xe6>
                ulCalculatedLoadValue = ( ulTimerCountsForOneTick - 1UL ) - ( ulReloadValue - portNVIC_SYSTICK_CURRENT_VALUE_REG );
1000340e:	4a19      	ldr	r2, [pc, #100]	; (10003474 <vPortSuppressTicksAndSleep+0x10c>)
10003410:	6811      	ldr	r1, [r2, #0]
10003412:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
10003416:	6992      	ldr	r2, [r2, #24]
10003418:	1ad3      	subs	r3, r2, r3
1000341a:	440b      	add	r3, r1
1000341c:	3b01      	subs	r3, #1
                if( ( ulCalculatedLoadValue <= ulStoppedTimerCompensation ) || ( ulCalculatedLoadValue > ulTimerCountsForOneTick ) )
1000341e:	4a16      	ldr	r2, [pc, #88]	; (10003478 <vPortSuppressTicksAndSleep+0x110>)
10003420:	6812      	ldr	r2, [r2, #0]
10003422:	429a      	cmp	r2, r3
10003424:	d201      	bcs.n	1000342a <vPortSuppressTicksAndSleep+0xc2>
10003426:	4299      	cmp	r1, r3
10003428:	d200      	bcs.n	1000342c <vPortSuppressTicksAndSleep+0xc4>
                    ulCalculatedLoadValue = ( ulTimerCountsForOneTick - 1UL );
1000342a:	1e4b      	subs	r3, r1, #1
                portNVIC_SYSTICK_LOAD_REG = ulCalculatedLoadValue;
1000342c:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
10003430:	6153      	str	r3, [r2, #20]
            portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
10003432:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
10003436:	2200      	movs	r2, #0
10003438:	619a      	str	r2, [r3, #24]
            portNVIC_SYSTICK_CTRL_REG = portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT;
1000343a:	2207      	movs	r2, #7
1000343c:	611a      	str	r2, [r3, #16]
                portNVIC_SYSTICK_LOAD_REG = ulTimerCountsForOneTick - 1UL;
1000343e:	4a0d      	ldr	r2, [pc, #52]	; (10003474 <vPortSuppressTicksAndSleep+0x10c>)
10003440:	6812      	ldr	r2, [r2, #0]
10003442:	3a01      	subs	r2, #1
10003444:	615a      	str	r2, [r3, #20]
            vTaskStepTick( ulCompleteTickPeriods );
10003446:	f7ff f94b 	bl	100026e0 <vTaskStepTick>
            __asm volatile ( "cpsie i" ::: "memory" );
1000344a:	b662      	cpsie	i
    }
1000344c:	e79b      	b.n	10003386 <vPortSuppressTicksAndSleep+0x1e>
                ulSysTickDecrementsLeft = portNVIC_SYSTICK_CURRENT_VALUE_REG;
1000344e:	f04f 21e0 	mov.w	r1, #3758153728	; 0xe000e000
10003452:	698b      	ldr	r3, [r1, #24]
                ulCompletedSysTickDecrements = ( xExpectedIdleTime * ulTimerCountsForOneTick ) - ulSysTickDecrementsLeft;
10003454:	4a07      	ldr	r2, [pc, #28]	; (10003474 <vPortSuppressTicksAndSleep+0x10c>)
10003456:	6812      	ldr	r2, [r2, #0]
10003458:	fb02 f404 	mul.w	r4, r2, r4
1000345c:	1ae0      	subs	r0, r4, r3
                ulCompleteTickPeriods = ulCompletedSysTickDecrements / ulTimerCountsForOneTick;
1000345e:	fbb0 f0f2 	udiv	r0, r0, r2
                portNVIC_SYSTICK_LOAD_REG = ( ( ulCompleteTickPeriods + 1UL ) * ulTimerCountsForOneTick ) - ulCompletedSysTickDecrements;
10003462:	fb00 2202 	mla	r2, r0, r2, r2
10003466:	1b1c      	subs	r4, r3, r4
10003468:	4414      	add	r4, r2
1000346a:	614c      	str	r4, [r1, #20]
1000346c:	e7e1      	b.n	10003432 <vPortSuppressTicksAndSleep+0xca>
1000346e:	bf00      	nop
10003470:	38008d08 	stmdacc	r0, {r3, r8, sl, fp, pc}
10003474:	38008d04 	stmdacc	r0, {r2, r8, sl, fp, pc}
10003478:	38008d00 	stmdacc	r0, {r8, sl, fp, pc}

1000347c <vPortSetupTimerInterrupt>:
        ulTimerCountsForOneTick = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ );
1000347c:	4b09      	ldr	r3, [pc, #36]	; (100034a4 <vPortSetupTimerInterrupt+0x28>)
1000347e:	4a0a      	ldr	r2, [pc, #40]	; (100034a8 <vPortSetupTimerInterrupt+0x2c>)
10003480:	601a      	str	r2, [r3, #0]
        xMaximumPossibleSuppressedTicks = portMAX_24_BIT_NUMBER / ulTimerCountsForOneTick;
10003482:	4b0a      	ldr	r3, [pc, #40]	; (100034ac <vPortSetupTimerInterrupt+0x30>)
10003484:	2253      	movs	r2, #83	; 0x53
10003486:	601a      	str	r2, [r3, #0]
        ulStoppedTimerCompensation = portMISSED_COUNTS_FACTOR / ( configCPU_CLOCK_HZ / configSYSTICK_CLOCK_HZ );
10003488:	4b09      	ldr	r3, [pc, #36]	; (100034b0 <vPortSetupTimerInterrupt+0x34>)
1000348a:	225e      	movs	r2, #94	; 0x5e
1000348c:	601a      	str	r2, [r3, #0]
    portNVIC_SYSTICK_CTRL_REG = portNVIC_SYSTICK_CLK_BIT_CONFIG;
1000348e:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
10003492:	2204      	movs	r2, #4
10003494:	611a      	str	r2, [r3, #16]
    portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
10003496:	2200      	movs	r2, #0
10003498:	619a      	str	r2, [r3, #24]
    portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
1000349a:	4a06      	ldr	r2, [pc, #24]	; (100034b4 <vPortSetupTimerInterrupt+0x38>)
1000349c:	615a      	str	r2, [r3, #20]
    portNVIC_SYSTICK_CTRL_REG = portNVIC_SYSTICK_CLK_BIT_CONFIG | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT;
1000349e:	2207      	movs	r2, #7
100034a0:	611a      	str	r2, [r3, #16]
}
100034a2:	4770      	bx	lr
100034a4:	38008d04 	stmdacc	r0, {r2, r8, sl, fp, pc}
100034a8:	00030d40 	andeq	r0, r3, r0, asr #26
100034ac:	38008d08 	stmdacc	r0, {r3, r8, sl, fp, pc}
100034b0:	38008d00 	stmdacc	r0, {r8, sl, fp, pc}
100034b4:	00030d3f 	andeq	r0, r3, pc, lsr sp

100034b8 <vPortYield>:
/*-----------------------------------------------------------*/

void vPortYield( void ) /* PRIVILEGED_FUNCTION */
{
    /* Set a PendSV to request a context switch. */
    portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
100034b8:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
100034bc:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
100034c0:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04

    /* Barriers are normally not required but do ensure the code is
     * completely within the specified behaviour for the architecture. */
    __asm volatile ( "dsb" ::: "memory" );
100034c4:	f3bf 8f4f 	dsb	sy
    __asm volatile ( "isb" );
100034c8:	f3bf 8f6f 	isb	sy
}
100034cc:	4770      	bx	lr
	...

100034d0 <vPortEnterCritical>:
/*-----------------------------------------------------------*/

void vPortEnterCritical( void ) /* PRIVILEGED_FUNCTION */
{
100034d0:	b508      	push	{r3, lr}
    portDISABLE_INTERRUPTS();
100034d2:	f000 f8c3 	bl	1000365c <ulSetInterruptMask>
    ulCriticalNesting++;
100034d6:	4a04      	ldr	r2, [pc, #16]	; (100034e8 <vPortEnterCritical+0x18>)
100034d8:	6813      	ldr	r3, [r2, #0]
100034da:	3301      	adds	r3, #1
100034dc:	6013      	str	r3, [r2, #0]

    /* Barriers are normally not required but do ensure the code is
     * completely within the specified behaviour for the architecture. */
    __asm volatile ( "dsb" ::: "memory" );
100034de:	f3bf 8f4f 	dsb	sy
    __asm volatile ( "isb" );
100034e2:	f3bf 8f6f 	isb	sy
}
100034e6:	bd08      	pop	{r3, pc}
100034e8:	38000008 	stmdacc	r0, {r3}

100034ec <vPortExitCritical>:
/*-----------------------------------------------------------*/

void vPortExitCritical( void ) /* PRIVILEGED_FUNCTION */
{
100034ec:	b508      	push	{r3, lr}
    configASSERT( ulCriticalNesting );
    ulCriticalNesting--;
100034ee:	4b05      	ldr	r3, [pc, #20]	; (10003504 <vPortExitCritical+0x18>)
100034f0:	681a      	ldr	r2, [r3, #0]
100034f2:	3a01      	subs	r2, #1
100034f4:	601a      	str	r2, [r3, #0]

    if( ulCriticalNesting == 0 )
100034f6:	681b      	ldr	r3, [r3, #0]
100034f8:	b103      	cbz	r3, 100034fc <vPortExitCritical+0x10>
    {
        portENABLE_INTERRUPTS();
    }
}
100034fa:	bd08      	pop	{r3, pc}
        portENABLE_INTERRUPTS();
100034fc:	2000      	movs	r0, #0
100034fe:	f000 f8b8 	bl	10003672 <vClearInterruptMask>
}
10003502:	e7fa      	b.n	100034fa <vPortExitCritical+0xe>
10003504:	38000008 	stmdacc	r0, {r3}

10003508 <SysTick_Handler>:
/*-----------------------------------------------------------*/

void SysTick_Handler( void ) /* PRIVILEGED_FUNCTION */
{
10003508:	b510      	push	{r4, lr}
    uint32_t ulPreviousMask;

    ulPreviousMask = portSET_INTERRUPT_MASK_FROM_ISR();
1000350a:	f000 f8a7 	bl	1000365c <ulSetInterruptMask>
1000350e:	4604      	mov	r4, r0
    traceISR_ENTER();
    {
        /* Increment the RTOS tick. */
        if( xTaskIncrementTick() != pdFALSE )
10003510:	f7ff f904 	bl	1000271c <xTaskIncrementTick>
10003514:	b128      	cbz	r0, 10003522 <SysTick_Handler+0x1a>
        {
            traceISR_EXIT_TO_SCHEDULER();
            /* Pend a context switch. */
            portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
10003516:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
1000351a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
1000351e:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
        else
        {
            traceISR_EXIT();
        }
    }
    portCLEAR_INTERRUPT_MASK_FROM_ISR( ulPreviousMask );
10003522:	4620      	mov	r0, r4
10003524:	f000 f8a5 	bl	10003672 <vClearInterruptMask>
}
10003528:	bd10      	pop	{r4, pc}

1000352a <vPortSVCHandler_C>:
/*-----------------------------------------------------------*/

void vPortSVCHandler_C( uint32_t * pulCallerStackAddress ) /* PRIVILEGED_FUNCTION portDONT_DISCARD */
{
1000352a:	b508      	push	{r3, lr}
    #endif /* configENABLE_TRUSTZONE */
    uint8_t ucSVCNumber;

    /* Register are stored on the stack in the following order - R0, R1, R2, R3,
     * R12, LR, PC, xPSR. */
    ulPC = pulCallerStackAddress[ portOFFSET_TO_PC ];
1000352c:	6983      	ldr	r3, [r0, #24]
    ucSVCNumber = ( ( uint8_t * ) ulPC )[ -2 ];
1000352e:	f813 3c02 	ldrb.w	r3, [r3, #-2]

    switch( ucSVCNumber )
10003532:	2b66      	cmp	r3, #102	; 0x66
10003534:	d000      	beq.n	10003538 <vPortSVCHandler_C+0xe>

        default:
            /* Incorrect SVC call. */
            configASSERT( pdFALSE );
    }
}
10003536:	bd08      	pop	{r3, pc}
            vRestoreContextOfFirstTask();
10003538:	f000 f86a 	bl	10003610 <vRestoreContextOfFirstTask>
}
1000353c:	e7fb      	b.n	10003536 <vPortSVCHandler_C+0xc>
	...

10003540 <pxPortInitialiseStack>:

    StackType_t * pxPortInitialiseStack( StackType_t * pxTopOfStack,
                                         StackType_t * pxEndOfStack,
                                         TaskFunction_t pxCode,
                                         void * pvParameters ) /* PRIVILEGED_FUNCTION */
    {
10003540:	b410      	push	{r4}
            #endif /* configENABLE_TRUSTZONE */
        }
        #else /* portPRELOAD_REGISTERS */
        {
            pxTopOfStack--;                                          /* Offset added to account for the way the MCU uses the stack on entry/exit of interrupts. */
            *pxTopOfStack = portINITIAL_XPSR;                        /* xPSR. */
10003542:	f04f 7480 	mov.w	r4, #16777216	; 0x1000000
10003546:	f840 4c04 	str.w	r4, [r0, #-4]
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) pxCode;                  /* PC. */
1000354a:	f840 2c08 	str.w	r2, [r0, #-8]
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS; /* LR. */
1000354e:	4a1f      	ldr	r2, [pc, #124]	; (100035cc <pxPortInitialiseStack+0x8c>)
10003550:	f840 2c0c 	str.w	r2, [r0, #-12]
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x12121212UL;            /* R12. */
10003554:	f04f 3212 	mov.w	r2, #303174162	; 0x12121212
10003558:	f840 2c10 	str.w	r2, [r0, #-16]
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x03030303UL;            /* R3. */
1000355c:	f04f 3203 	mov.w	r2, #50529027	; 0x3030303
10003560:	f840 2c14 	str.w	r2, [r0, #-20]
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x02020202UL;            /* R2. */
10003564:	f04f 3202 	mov.w	r2, #33686018	; 0x2020202
10003568:	f840 2c18 	str.w	r2, [r0, #-24]
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x01010101UL;            /* R1. */
1000356c:	f04f 3201 	mov.w	r2, #16843009	; 0x1010101
10003570:	f840 2c1c 	str.w	r2, [r0, #-28]
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) pvParameters;            /* R0. */
10003574:	f840 3c20 	str.w	r3, [r0, #-32]
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x11111111UL;            /* R11. */
10003578:	f04f 3311 	mov.w	r3, #286331153	; 0x11111111
1000357c:	f840 3c24 	str.w	r3, [r0, #-36]
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x10101010UL;            /* R10. */
10003580:	f04f 3310 	mov.w	r3, #269488144	; 0x10101010
10003584:	f840 3c28 	str.w	r3, [r0, #-40]
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x09090909UL;            /* R09. */
10003588:	f04f 3309 	mov.w	r3, #151587081	; 0x9090909
1000358c:	f840 3c2c 	str.w	r3, [r0, #-44]
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x08080808UL;            /* R08. */
10003590:	f04f 3308 	mov.w	r3, #134744072	; 0x8080808
10003594:	f840 3c30 	str.w	r3, [r0, #-48]
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x07070707UL;            /* R07. */
10003598:	f04f 3307 	mov.w	r3, #117901063	; 0x7070707
1000359c:	f840 3c34 	str.w	r3, [r0, #-52]
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x06060606UL;            /* R06. */
100035a0:	f04f 3306 	mov.w	r3, #101058054	; 0x6060606
100035a4:	f840 3c38 	str.w	r3, [r0, #-56]
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x05050505UL;            /* R05. */
100035a8:	f04f 3305 	mov.w	r3, #84215045	; 0x5050505
100035ac:	f840 3c3c 	str.w	r3, [r0, #-60]
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) 0x04040404UL;            /* R04. */
100035b0:	f04f 3304 	mov.w	r3, #67372036	; 0x4040404
100035b4:	f840 3c40 	str.w	r3, [r0, #-64]
            pxTopOfStack--;
            *pxTopOfStack = portINITIAL_EXC_RETURN;                  /* EXC_RETURN. */
100035b8:	f06f 0343 	mvn.w	r3, #67	; 0x43
100035bc:	f840 3c44 	str.w	r3, [r0, #-68]
            pxTopOfStack--;
            *pxTopOfStack = ( StackType_t ) pxEndOfStack;            /* Slot used to hold this task's PSPLIM value. */
100035c0:	f840 1c48 	str.w	r1, [r0, #-72]
            #endif /* configENABLE_TRUSTZONE */
        }
        #endif /* portPRELOAD_REGISTERS */

        return pxTopOfStack;
    }
100035c4:	3848      	subs	r0, #72	; 0x48
100035c6:	f85d 4b04 	ldr.w	r4, [sp], #4
100035ca:	4770      	bx	lr
100035cc:	10003351 	andne	r3, r0, r1, asr r3

100035d0 <xPortStartScheduler>:

#endif /* configENABLE_MPU */
/*-----------------------------------------------------------*/

BaseType_t xPortStartScheduler( void ) /* PRIVILEGED_FUNCTION */
{
100035d0:	b510      	push	{r4, lr}
    }
    #endif /* #if ( ( configASSERT_DEFINED == 1 ) && ( portHAS_ARMV8M_MAIN_EXTENSION == 1 ) ) */

    /* Make PendSV and SysTick the lowest priority interrupts, and make SVCall
     * the highest priority. */
    portNVIC_SHPR3_REG |= portNVIC_PENDSV_PRI;
100035d2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
100035d6:	f8d3 2d20 	ldr.w	r2, [r3, #3360]	; 0xd20
100035da:	f442 027f 	orr.w	r2, r2, #16711680	; 0xff0000
100035de:	f8c3 2d20 	str.w	r2, [r3, #3360]	; 0xd20
    portNVIC_SHPR3_REG |= portNVIC_SYSTICK_PRI;
100035e2:	f8d3 2d20 	ldr.w	r2, [r3, #3360]	; 0xd20
100035e6:	f042 427f 	orr.w	r2, r2, #4278190080	; 0xff000000
100035ea:	f8c3 2d20 	str.w	r2, [r3, #3360]	; 0xd20
    portNVIC_SHPR2_REG = 0;
100035ee:	2400      	movs	r4, #0
100035f0:	f8c3 4d1c 	str.w	r4, [r3, #3356]	; 0xd1c
    }
    #endif /* configENABLE_MPU */

    /* Start the timer that generates the tick ISR. Interrupts are disabled
     * here already. */
    vPortSetupTimerInterrupt();
100035f4:	f7ff ff42 	bl	1000347c <vPortSetupTimerInterrupt>

    /* Initialize the critical nesting count ready for the first task. */
    ulCriticalNesting = 0;
100035f8:	4b04      	ldr	r3, [pc, #16]	; (1000360c <xPortStartScheduler+0x3c>)
100035fa:	601c      	str	r4, [r3, #0]
        xSchedulerRunning = pdTRUE;
    }
    #endif /* ( ( configENABLE_MPU == 1 ) && ( configUSE_MPU_WRAPPERS_V1 == 0 ) ) */

    /* Start the first task. */
    vStartFirstTask();
100035fc:	f000 f81e 	bl	1000363c <vStartFirstTask>
     * exit error function to prevent compiler warnings about a static function
     * not being called in the case that the application writer overrides this
     * functionality by defining configTASK_RETURN_ADDRESS. Call
     * vTaskSwitchContext() so link time optimization does not remove the
     * symbol. */
    vTaskSwitchContext();
10003600:	f7ff fa00 	bl	10002a04 <vTaskSwitchContext>
    prvTaskExitError();
10003604:	f7ff fea4 	bl	10003350 <prvTaskExitError>

    /* Should not get here. */
    return 0;
}
10003608:	4620      	mov	r0, r4
1000360a:	bd10      	pop	{r4, pc}
1000360c:	38000008 	stmdacc	r0, {r3}

10003610 <vRestoreContextOfFirstTask>:

#else /* configENABLE_MPU */

    void vRestoreContextOfFirstTask( void ) /* __attribute__ (( naked )) PRIVILEGED_FUNCTION */
    {
        __asm volatile
10003610:	4a09      	ldr	r2, [pc, #36]	; (10003638 <vRestoreContextOfFirstTask+0x28>)
10003612:	6811      	ldr	r1, [r2, #0]
10003614:	6808      	ldr	r0, [r1, #0]
10003616:	c806      	ldmia	r0!, {r1, r2}
10003618:	f381 880b 	msr	PSPLIM, r1
1000361c:	2102      	movs	r1, #2
1000361e:	f381 8814 	msr	CONTROL, r1
10003622:	3020      	adds	r0, #32
10003624:	f380 8809 	msr	PSP, r0
10003628:	f3bf 8f6f 	isb	sy
1000362c:	f04f 0000 	mov.w	r0, #0
10003630:	f380 8811 	msr	BASEPRI, r0
10003634:	4710      	bx	r2
            "   isb                                             \n"
            "   mov  r0, #0                                     \n"
            "   msr  basepri, r0                                \n" /* Ensure that interrupts are enabled when the first task starts. */
            "   bx   r2                                         \n" /* Finally, branch to EXC_RETURN. */
        );
    }
10003636:	85b00000 	ldrhi	r0, [r0, #0]!
1000363a:	 	stmdami	r6, {fp, ip, sp}

1000363c <vStartFirstTask>:
}
/*-----------------------------------------------------------*/

void vStartFirstTask( void ) /* __attribute__ (( naked )) PRIVILEGED_FUNCTION */
{
    __asm volatile
1000363c:	4806      	ldr	r0, [pc, #24]	; (10003658 <vStartFirstTask+0x1c>)
1000363e:	6800      	ldr	r0, [r0, #0]
10003640:	6800      	ldr	r0, [r0, #0]
10003642:	f380 8808 	msr	MSP, r0
10003646:	b662      	cpsie	i
10003648:	b661      	cpsie	f
1000364a:	f3bf 8f4f 	dsb	sy
1000364e:	f3bf 8f6f 	isb	sy
10003652:	df66      	svc	102	; 0x66
10003654:	bf00      	nop
        "   isb                                             \n"
        "   svc %0                                          \n" /* System call to start the first task. */
        "   nop                                             \n"
        ::"i" ( portSVC_START_SCHEDULER ) : "memory"
    );
}
10003656:	ed080000 	stc	0, cr0, [r8, #-0]
1000365a:	 	vaddl.u32	q15, d15, d0

1000365c <ulSetInterruptMask>:
/*-----------------------------------------------------------*/

uint32_t ulSetInterruptMask( void ) /* __attribute__(( naked )) PRIVILEGED_FUNCTION */
{
    __asm volatile
1000365c:	f3ef 8011 	mrs	r0, BASEPRI
10003660:	f04f 01bf 	mov.w	r1, #191	; 0xbf
10003664:	f381 8811 	msr	BASEPRI, r1
10003668:	f3bf 8f4f 	dsb	sy
1000366c:	f3bf 8f6f 	isb	sy
10003670:	4770      	bx	lr

10003672 <vClearInterruptMask>:
}
/*-----------------------------------------------------------*/

void vClearInterruptMask( __attribute__( ( unused ) ) uint32_t ulMask ) /* __attribute__(( naked )) PRIVILEGED_FUNCTION */
{
    __asm volatile
10003672:	f380 8811 	msr	BASEPRI, r0
10003676:	f3bf 8f4f 	dsb	sy
1000367a:	f3bf 8f6f 	isb	sy
1000367e:	4770      	bx	lr

10003680 <PendSV_Handler>:

#else /* configENABLE_MPU */

    void PendSV_Handler( void ) /* __attribute__ (( naked )) PRIVILEGED_FUNCTION */
    {
        __asm volatile
10003680:	f3ef 8009 	mrs	r0, PSP
10003684:	f3ef 820b 	mrs	r2, PSPLIM
10003688:	4673      	mov	r3, lr
1000368a:	e920 0ffc 	stmdb	r0!, {r2, r3, r4, r5, r6, r7, r8, r9, sl, fp}
1000368e:	4a0d      	ldr	r2, [pc, #52]	; (100036c4 <PendSV_Handler+0x44>)
10003690:	6811      	ldr	r1, [r2, #0]
10003692:	6008      	str	r0, [r1, #0]
10003694:	f04f 00bf 	mov.w	r0, #191	; 0xbf
10003698:	f380 8811 	msr	BASEPRI, r0
1000369c:	f3bf 8f4f 	dsb	sy
100036a0:	f3bf 8f6f 	isb	sy
100036a4:	f7ff f9ae 	bl	10002a04 <vTaskSwitchContext>
100036a8:	f04f 0000 	mov.w	r0, #0
100036ac:	f380 8811 	msr	BASEPRI, r0
100036b0:	4a04      	ldr	r2, [pc, #16]	; (100036c4 <PendSV_Handler+0x44>)
100036b2:	6811      	ldr	r1, [r2, #0]
100036b4:	6808      	ldr	r0, [r1, #0]
100036b6:	e8b0 0ffc 	ldmia.w	r0!, {r2, r3, r4, r5, r6, r7, r8, r9, sl, fp}
100036ba:	f382 880b 	msr	PSPLIM, r2
100036be:	f380 8809 	msr	PSP, r0
100036c2:	4718      	bx	r3
            "   msr psplim, r2                                  \n" /* Restore the PSPLIM register value for the task. */
            "   msr psp, r0                                     \n" /* Remember the new top of stack for the task. */
            "   bx r3                                           \n"
            ::"i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY )
        );
    }
100036c4:	380085b0 	stmdacc	r0, {r4, r5, r7, r8, sl, pc}

100036c8 <SVC_Handler>:

#else /* ( configENABLE_MPU == 1 ) && ( configUSE_MPU_WRAPPERS_V1 == 0 ) */

    void SVC_Handler( void ) /* __attribute__ (( naked )) PRIVILEGED_FUNCTION */
    {
        __asm volatile
100036c8:	f01e 0f04 	tst.w	lr, #4
100036cc:	bf0c      	ite	eq
100036ce:	f3ef 8008 	mrseq	r0, MSP
100036d2:	f3ef 8009 	mrsne	r0, PSP
100036d6:	4901      	ldr	r1, [pc, #4]	; (100036dc <SVC_Handler+0x14>)
100036d8:	4708      	bx	r1
            "   mrseq r0, msp                                   \n"
            "   mrsne r0, psp                                   \n"
            "   ldr r1, =vPortSVCHandler_C                      \n"
            "   bx r1                                           \n"
        );
    }
100036da:	352b0000 	strcc	r0, [fp, #-0]!
100036de:	 	andcs	r1, r1, r0

100036e0 <_getpid>:
100036e0:	2001      	movs	r0, #1
100036e2:	4770      	bx	lr

100036e4 <_kill>:
100036e4:	b508      	push	{r3, lr}
100036e6:	f000 f867 	bl	100037b8 <__errno>
100036ea:	2316      	movs	r3, #22
100036ec:	6003      	str	r3, [r0, #0]
100036ee:	f04f 30ff 	mov.w	r0, #4294967295
100036f2:	bd08      	pop	{r3, pc}

100036f4 <_exit>:
100036f4:	b508      	push	{r3, lr}
100036f6:	f04f 31ff 	mov.w	r1, #4294967295
100036fa:	f7ff fff3 	bl	100036e4 <_kill>
100036fe:	e7fe      	b.n	100036fe <_exit+0xa>

10003700 <Reset_Handler>:
                .thumb_func
                .type    Reset_Handler, %function
                .globl   Reset_Handler
                .fnstart
Reset_Handler:
                ldr      r0, =__INITIAL_SP
10003700:	4815      	ldr	r0, [pc, #84]	; (10003758 <BusFault_Handler+0x4>)
                msr      psp, r0
10003702:	f380 8809 	msr	PSP, r0

                ldr      r0, =__STACK_LIMIT
10003706:	4815      	ldr	r0, [pc, #84]	; (1000375c <BusFault_Handler+0x8>)
                msr      msplim, r0
10003708:	f380 880a 	msr	MSPLIM, r0
                msr      psplim, r0
1000370c:	f380 880b 	msr	PSPLIM, r0
                ldr      r0, =__STACK_SEAL
                ldr      r1, =0xFEF5EDA5U
                strd     r1,r1,[r0,#0]
                #endif

                bl       SystemInit
10003710:	f7fd f8ba 	bl	10000888 <SystemInit>

                ldr      r4, =__copy_table_start__
10003714:	4c12      	ldr	r4, [pc, #72]	; (10003760 <BusFault_Handler+0xc>)
                ldr      r5, =__copy_table_end__
10003716:	4d13      	ldr	r5, [pc, #76]	; (10003764 <BusFault_Handler+0x10>)

.L_loop0:
                cmp      r4, r5
10003718:	42ac      	cmp	r4, r5
                bge      .L_loop0_done
1000371a:	da0a      	bge.n	10003732 <Reset_Handler+0x32>
                ldr      r1, [r4]                /* source address */
1000371c:	6821      	ldr	r1, [r4, #0]
                ldr      r2, [r4, #4]            /* destination address */
1000371e:	6862      	ldr	r2, [r4, #4]
                ldr      r3, [r4, #8]            /* word count */
10003720:	68a3      	ldr	r3, [r4, #8]
                lsls     r3, r3, #2              /* byte count */
10003722:	009b      	lsls	r3, r3, #2

.L_loop0_0:
                subs     r3, #4                  /* decrement byte count */
10003724:	3b04      	subs	r3, #4
                ittt     ge
10003726:	bfa2      	ittt	ge
                ldrge    r0, [r1, r3]
10003728:	58c8      	ldrge	r0, [r1, r3]
                strge    r0, [r2, r3]
1000372a:	50d0      	strge	r0, [r2, r3]
                bge      .L_loop0_0
1000372c:	e7fa      	bge.n	10003724 <Reset_Handler+0x24>

                adds     r4, #12
1000372e:	340c      	adds	r4, #12
                b        .L_loop0
10003730:	e7f2      	b.n	10003718 <Reset_Handler+0x18>
.L_loop0_done:

                ldr      r3, =__zero_table_start__
10003732:	4b0d      	ldr	r3, [pc, #52]	; (10003768 <BusFault_Handler+0x14>)
                ldr      r4, =__zero_table_end__
10003734:	4c0d      	ldr	r4, [pc, #52]	; (1000376c <BusFault_Handler+0x18>)

.L_loop2:
                cmp      r3, r4
10003736:	42a3      	cmp	r3, r4
                bge      .L_loop2_done
10003738:	da09      	bge.n	1000374e <Reset_Handler+0x4e>
                ldr      r1, [r3]                /* destination address */
1000373a:	6819      	ldr	r1, [r3, #0]
                ldr      r2, [r3, #4]            /* word count */
1000373c:	685a      	ldr	r2, [r3, #4]
                lsls     r2, r2, #2              /* byte count */
1000373e:	0092      	lsls	r2, r2, #2
                movs     r0, 0
10003740:	2000      	movs	r0, #0

.L_loop2_0:
                subs     r2, #4                  /* decrement byte count */
10003742:	3a04      	subs	r2, #4
                itt      ge
10003744:	bfa4      	itt	ge
                strge    r0, [r1, r2]
10003746:	5088      	strge	r0, [r1, r2]
                bge      .L_loop2_0
10003748:	e7fb      	bge.n	10003742 <Reset_Handler+0x42>

                adds     r3, #8
1000374a:	3308      	adds	r3, #8
                b        .L_loop2
1000374c:	e7f3      	b.n	10003736 <Reset_Handler+0x36>
.L_loop2_done:

                bl       main
1000374e:	f7fd f885 	bl	1000085c <main>
                .thumb_func
                .type    HardFault_Handler, %function
                .weak    HardFault_Handler
                .fnstart
HardFault_Handler:
                b        .
10003752:	e7fe      	b.n	10003752 <Reset_Handler+0x52>

10003754 <BusFault_Handler>:
                .thumb_func
                .type    Default_Handler, %function
                .weak    Default_Handler
                .fnstart
Default_Handler:
                b        .
10003754:	e7fe      	b.n	10003754 <BusFault_Handler>
10003756:	00000000 	andeq	r0, r0, r0
                ldr      r0, =__INITIAL_SP
1000375a:	f0003810 			; <UNDEFINED> instruction: 0xf0003810
                ldr      r0, =__STACK_LIMIT
1000375e:	5c88380f 	stcpl	8, cr3, [r8], {15}
                ldr      r4, =__copy_table_start__
10003762:	5c941000 	ldcpl	0, cr1, [r4], {0}
                ldr      r5, =__copy_table_end__
10003766:	5c941000 	ldcpl	0, cr1, [r4], {0}
                ldr      r3, =__zero_table_start__
1000376a:	5c941000 	ldcpl	0, cr1, [r4], {0}
                ldr      r4, =__zero_table_end__
1000376e:	 	ldrbtlt	r1, [r2], -r0

10003770 <HardFault_Handler>:
.global fault_dump_handler

.global HardFault_Handler
.type HardFault_Handler, % function
HardFault_Handler:
    cpsid   i                           /* disable interrupts */
10003770:	b672      	cpsid	i
    ldr     r3, =fd_main_stack_base     /* r3 = &fd_main_stack_base */
10003772:	4b0e      	ldr	r3, [pc, #56]	; (100037ac <stack_invalid+0xe>)
    ldr     r1, [r3]                    /* r1 = fd_main_stack_base  */
10003774:	6819      	ldr	r1, [r3, #0]
    ldr     r3, =fd_main_stack_full     /* r3 = &fd_main_stack_full */
10003776:	4b0e      	ldr	r3, [pc, #56]	; (100037b0 <stack_invalid+0x12>)
    ldr     r2, [r3]                    /* r2 = fd_main_stack_full  */
10003778:	681a      	ldr	r2, [r3, #0]

    tst     lr, #4                      /* use exc_return value get sp value */
1000377a:	f01e 0f04 	tst.w	lr, #4
    bne     stack_checked               /* if (sp != msp), jump to stack_checked */
1000377e:	d105      	bne.n	1000378c <stack_checked>

    mrs     r0, msp                     /* else (sp == msp), r0 = sp = msp */
10003780:	f3ef 8008 	mrs	r0, MSP
    cmp     r0, r1                      /* compare msp and stack base addr */
10003784:	4288      	cmp	r0, r1
    blt     stack_invalid               /* msp < stack_base_addr, msp is invalid */
10003786:	db0a      	blt.n	1000379e <stack_invalid>
    cmp     r0, r2                      /* compare msp and stack full addr */
10003788:	4290      	cmp	r0, r2
    bgt     stack_invalid               /* msp > stack_base_addr, msp is invalid */
1000378a:	dc08      	bgt.n	1000379e <stack_invalid>

1000378c <stack_checked>:
    
stack_checked:
    push    {r4 - r11}                  /* sp value is in stack range, push r4 - r11 to stack */
1000378c:	e92d 0ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}

    tst     lr, #4                      /* update sp value to r0 */
10003790:	f01e 0f04 	tst.w	lr, #4
    ite     eq
10003794:	bf0c      	ite	eq
    mrseq   r0, msp                     /* lr & 0x04 == 1, r0 = sp = msp */
10003796:	f3ef 8008 	mrseq	r0, MSP
    mrsne   r0, psp                     /* lr & 0x04 == 0, r0 = sp = psp */
1000379a:	f3ef 8009 	mrsne	r0, PSP

1000379e <stack_invalid>:

stack_invalid:
    mov     r1, lr                      /* now, r0 = sp, r1 = lr */
1000379e:	4671      	mov	r1, lr
    ldr     r2, =fault_dump_handler     /* now, r2 = fault_dump_handler */
100037a0:	4a04      	ldr	r2, [pc, #16]	; (100037b4 <stack_invalid+0x16>)
    dsb                                 /* wait for memory access to complete */
100037a2:	f3bf 8f4f 	dsb	sy
    cpsie   i                           /* enable interrupts */
100037a6:	b662      	cpsie	i
    bx      r2                          /* jump to fault_dump_handler */
100037a8:	4710      	bx	r2
100037aa:	85680000 	strbhi	r0, [r8, #-0]!
    ldr     r3, =fd_main_stack_base     /* r3 = &fd_main_stack_base */
100037ae:	856c3800 	strbhi	r3, [ip, #-2048]!	; 0xfffff800
    ldr     r3, =fd_main_stack_full     /* r3 = &fd_main_stack_full */
100037b2:	1bd13800 	blne	f4517ba <__RAM_SIZE+0xf3517ba>
    ldr     r2, =fault_dump_handler     /* now, r2 = fault_dump_handler */
100037b6:	 	blmi	100477be <__copy_table_end__+0x41b2a>

100037b8 <__errno>:
100037b8:	4b01      	ldr	r3, [pc, #4]	; (100037c0 <__errno+0x8>)
100037ba:	6818      	ldr	r0, [r3, #0]
100037bc:	4770      	bx	lr
100037be:	bf00      	nop
100037c0:	3800000c 	stmdacc	r0, {r2, r3}

100037c4 <memcpy>:
100037c4:	4684      	mov	ip, r0
100037c6:	ea41 0300 	orr.w	r3, r1, r0
100037ca:	f013 0303 	ands.w	r3, r3, #3
100037ce:	d149      	bne.n	10003864 <memcpy+0xa0>
100037d0:	3a40      	subs	r2, #64	; 0x40
100037d2:	d323      	bcc.n	1000381c <memcpy+0x58>
100037d4:	680b      	ldr	r3, [r1, #0]
100037d6:	6003      	str	r3, [r0, #0]
100037d8:	684b      	ldr	r3, [r1, #4]
100037da:	6043      	str	r3, [r0, #4]
100037dc:	688b      	ldr	r3, [r1, #8]
100037de:	6083      	str	r3, [r0, #8]
100037e0:	68cb      	ldr	r3, [r1, #12]
100037e2:	60c3      	str	r3, [r0, #12]
100037e4:	690b      	ldr	r3, [r1, #16]
100037e6:	6103      	str	r3, [r0, #16]
100037e8:	694b      	ldr	r3, [r1, #20]
100037ea:	6143      	str	r3, [r0, #20]
100037ec:	698b      	ldr	r3, [r1, #24]
100037ee:	6183      	str	r3, [r0, #24]
100037f0:	69cb      	ldr	r3, [r1, #28]
100037f2:	61c3      	str	r3, [r0, #28]
100037f4:	6a0b      	ldr	r3, [r1, #32]
100037f6:	6203      	str	r3, [r0, #32]
100037f8:	6a4b      	ldr	r3, [r1, #36]	; 0x24
100037fa:	6243      	str	r3, [r0, #36]	; 0x24
100037fc:	6a8b      	ldr	r3, [r1, #40]	; 0x28
100037fe:	6283      	str	r3, [r0, #40]	; 0x28
10003800:	6acb      	ldr	r3, [r1, #44]	; 0x2c
10003802:	62c3      	str	r3, [r0, #44]	; 0x2c
10003804:	6b0b      	ldr	r3, [r1, #48]	; 0x30
10003806:	6303      	str	r3, [r0, #48]	; 0x30
10003808:	6b4b      	ldr	r3, [r1, #52]	; 0x34
1000380a:	6343      	str	r3, [r0, #52]	; 0x34
1000380c:	6b8b      	ldr	r3, [r1, #56]	; 0x38
1000380e:	6383      	str	r3, [r0, #56]	; 0x38
10003810:	6bcb      	ldr	r3, [r1, #60]	; 0x3c
10003812:	63c3      	str	r3, [r0, #60]	; 0x3c
10003814:	3040      	adds	r0, #64	; 0x40
10003816:	3140      	adds	r1, #64	; 0x40
10003818:	3a40      	subs	r2, #64	; 0x40
1000381a:	d2db      	bcs.n	100037d4 <memcpy+0x10>
1000381c:	3230      	adds	r2, #48	; 0x30
1000381e:	d30b      	bcc.n	10003838 <memcpy+0x74>
10003820:	680b      	ldr	r3, [r1, #0]
10003822:	6003      	str	r3, [r0, #0]
10003824:	684b      	ldr	r3, [r1, #4]
10003826:	6043      	str	r3, [r0, #4]
10003828:	688b      	ldr	r3, [r1, #8]
1000382a:	6083      	str	r3, [r0, #8]
1000382c:	68cb      	ldr	r3, [r1, #12]
1000382e:	60c3      	str	r3, [r0, #12]
10003830:	3010      	adds	r0, #16
10003832:	3110      	adds	r1, #16
10003834:	3a10      	subs	r2, #16
10003836:	d2f3      	bcs.n	10003820 <memcpy+0x5c>
10003838:	320c      	adds	r2, #12
1000383a:	d305      	bcc.n	10003848 <memcpy+0x84>
1000383c:	f851 3b04 	ldr.w	r3, [r1], #4
10003840:	f840 3b04 	str.w	r3, [r0], #4
10003844:	3a04      	subs	r2, #4
10003846:	d2f9      	bcs.n	1000383c <memcpy+0x78>
10003848:	3204      	adds	r2, #4
1000384a:	d008      	beq.n	1000385e <memcpy+0x9a>
1000384c:	07d2      	lsls	r2, r2, #31
1000384e:	bf1c      	itt	ne
10003850:	f811 3b01 	ldrbne.w	r3, [r1], #1
10003854:	f800 3b01 	strbne.w	r3, [r0], #1
10003858:	d301      	bcc.n	1000385e <memcpy+0x9a>
1000385a:	880b      	ldrh	r3, [r1, #0]
1000385c:	8003      	strh	r3, [r0, #0]
1000385e:	4660      	mov	r0, ip
10003860:	4770      	bx	lr
10003862:	bf00      	nop
10003864:	2a08      	cmp	r2, #8
10003866:	d313      	bcc.n	10003890 <memcpy+0xcc>
10003868:	078b      	lsls	r3, r1, #30
1000386a:	d0b1      	beq.n	100037d0 <memcpy+0xc>
1000386c:	f010 0303 	ands.w	r3, r0, #3
10003870:	d0ae      	beq.n	100037d0 <memcpy+0xc>
10003872:	f1c3 0304 	rsb	r3, r3, #4
10003876:	1ad2      	subs	r2, r2, r3
10003878:	07db      	lsls	r3, r3, #31
1000387a:	bf1c      	itt	ne
1000387c:	f811 3b01 	ldrbne.w	r3, [r1], #1
10003880:	f800 3b01 	strbne.w	r3, [r0], #1
10003884:	d3a4      	bcc.n	100037d0 <memcpy+0xc>
10003886:	f831 3b02 	ldrh.w	r3, [r1], #2
1000388a:	f820 3b02 	strh.w	r3, [r0], #2
1000388e:	e79f      	b.n	100037d0 <memcpy+0xc>
10003890:	3a04      	subs	r2, #4
10003892:	d3d9      	bcc.n	10003848 <memcpy+0x84>
10003894:	3a01      	subs	r2, #1
10003896:	f811 3b01 	ldrb.w	r3, [r1], #1
1000389a:	f800 3b01 	strb.w	r3, [r0], #1
1000389e:	d2f9      	bcs.n	10003894 <memcpy+0xd0>
100038a0:	780b      	ldrb	r3, [r1, #0]
100038a2:	7003      	strb	r3, [r0, #0]
100038a4:	784b      	ldrb	r3, [r1, #1]
100038a6:	7043      	strb	r3, [r0, #1]
100038a8:	788b      	ldrb	r3, [r1, #2]
100038aa:	7083      	strb	r3, [r0, #2]
100038ac:	4660      	mov	r0, ip
100038ae:	4770      	bx	lr

100038b0 <memset>:
100038b0:	b570      	push	{r4, r5, r6, lr}
100038b2:	0786      	lsls	r6, r0, #30
100038b4:	d048      	beq.n	10003948 <memset+0x98>
100038b6:	1e54      	subs	r4, r2, #1
100038b8:	2a00      	cmp	r2, #0
100038ba:	d03f      	beq.n	1000393c <memset+0x8c>
100038bc:	b2ca      	uxtb	r2, r1
100038be:	4603      	mov	r3, r0
100038c0:	e001      	b.n	100038c6 <memset+0x16>
100038c2:	3c01      	subs	r4, #1
100038c4:	d33a      	bcc.n	1000393c <memset+0x8c>
100038c6:	f803 2b01 	strb.w	r2, [r3], #1
100038ca:	079d      	lsls	r5, r3, #30
100038cc:	d1f9      	bne.n	100038c2 <memset+0x12>
100038ce:	2c03      	cmp	r4, #3
100038d0:	d92d      	bls.n	1000392e <memset+0x7e>
100038d2:	b2cd      	uxtb	r5, r1
100038d4:	2c0f      	cmp	r4, #15
100038d6:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
100038da:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
100038de:	d936      	bls.n	1000394e <memset+0x9e>
100038e0:	f1a4 0c10 	sub.w	ip, r4, #16
100038e4:	f103 0e20 	add.w	lr, r3, #32
100038e8:	f103 0210 	add.w	r2, r3, #16
100038ec:	f02c 060f 	bic.w	r6, ip, #15
100038f0:	ea4f 1c1c 	mov.w	ip, ip, lsr #4
100038f4:	44b6      	add	lr, r6
100038f6:	e942 5504 	strd	r5, r5, [r2, #-16]
100038fa:	e942 5502 	strd	r5, r5, [r2, #-8]
100038fe:	3210      	adds	r2, #16
10003900:	4572      	cmp	r2, lr
10003902:	d1f8      	bne.n	100038f6 <memset+0x46>
10003904:	f10c 0201 	add.w	r2, ip, #1
10003908:	f014 0f0c 	tst.w	r4, #12
1000390c:	f004 0c0f 	and.w	ip, r4, #15
10003910:	eb03 1202 	add.w	r2, r3, r2, lsl #4
10003914:	d013      	beq.n	1000393e <memset+0x8e>
10003916:	f1ac 0304 	sub.w	r3, ip, #4
1000391a:	f023 0303 	bic.w	r3, r3, #3
1000391e:	3304      	adds	r3, #4
10003920:	4413      	add	r3, r2
10003922:	f842 5b04 	str.w	r5, [r2], #4
10003926:	4293      	cmp	r3, r2
10003928:	d1fb      	bne.n	10003922 <memset+0x72>
1000392a:	f00c 0403 	and.w	r4, ip, #3
1000392e:	b12c      	cbz	r4, 1000393c <memset+0x8c>
10003930:	b2ca      	uxtb	r2, r1
10003932:	441c      	add	r4, r3
10003934:	f803 2b01 	strb.w	r2, [r3], #1
10003938:	429c      	cmp	r4, r3
1000393a:	d1fb      	bne.n	10003934 <memset+0x84>
1000393c:	bd70      	pop	{r4, r5, r6, pc}
1000393e:	4664      	mov	r4, ip
10003940:	4613      	mov	r3, r2
10003942:	2c00      	cmp	r4, #0
10003944:	d1f4      	bne.n	10003930 <memset+0x80>
10003946:	e7f9      	b.n	1000393c <memset+0x8c>
10003948:	4603      	mov	r3, r0
1000394a:	4614      	mov	r4, r2
1000394c:	e7bf      	b.n	100038ce <memset+0x1e>
1000394e:	461a      	mov	r2, r3
10003950:	46a4      	mov	ip, r4
10003952:	e7e0      	b.n	10003916 <memset+0x66>

10003954 <register_fini>:
10003954:	4b02      	ldr	r3, [pc, #8]	; (10003960 <register_fini+0xc>)
10003956:	b113      	cbz	r3, 1000395e <register_fini+0xa>
10003958:	4802      	ldr	r0, [pc, #8]	; (10003964 <register_fini+0x10>)
1000395a:	f000 b805 	b.w	10003968 <atexit>
1000395e:	4770      	bx	lr
10003960:	00000000 	andeq	r0, r0, r0
10003964:	10003975 	andne	r3, r0, r5, ror r9

10003968 <atexit>:
10003968:	2300      	movs	r3, #0
1000396a:	4601      	mov	r1, r0
1000396c:	461a      	mov	r2, r3
1000396e:	4618      	mov	r0, r3
10003970:	f000 b81a 	b.w	100039a8 <__register_exitproc>

10003974 <__libc_fini_array>:
10003974:	b538      	push	{r3, r4, r5, lr}
10003976:	4b08      	ldr	r3, [pc, #32]	; (10003998 <__libc_fini_array+0x24>)
10003978:	4d08      	ldr	r5, [pc, #32]	; (1000399c <__libc_fini_array+0x28>)
1000397a:	1b5b      	subs	r3, r3, r5
1000397c:	109c      	asrs	r4, r3, #2
1000397e:	d007      	beq.n	10003990 <__libc_fini_array+0x1c>
10003980:	3b04      	subs	r3, #4
10003982:	441d      	add	r5, r3
10003984:	3c01      	subs	r4, #1
10003986:	f855 3904 	ldr.w	r3, [r5], #-4
1000398a:	4798      	blx	r3
1000398c:	2c00      	cmp	r4, #0
1000398e:	d1f9      	bne.n	10003984 <__libc_fini_array+0x10>
10003990:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
10003994:	f001 be84 	b.w	100056a0 <_fini>
10003998:	38000448 	stmdacc	r0, {r3, r6, sl}
1000399c:	38000444 	stmdacc	r0, {r2, r6, sl}

100039a0 <__retarget_lock_acquire_recursive>:
100039a0:	4770      	bx	lr
100039a2:	bf00      	nop

100039a4 <__retarget_lock_release_recursive>:
100039a4:	4770      	bx	lr
100039a6:	bf00      	nop

100039a8 <__register_exitproc>:
100039a8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
100039ac:	f8df a084 	ldr.w	sl, [pc, #132]	; 10003a34 <__register_exitproc+0x8c>
100039b0:	4606      	mov	r6, r0
100039b2:	4698      	mov	r8, r3
100039b4:	460f      	mov	r7, r1
100039b6:	f8da 0000 	ldr.w	r0, [sl]
100039ba:	4691      	mov	r9, r2
100039bc:	f7ff fff0 	bl	100039a0 <__retarget_lock_acquire_recursive>
100039c0:	4b1b      	ldr	r3, [pc, #108]	; (10003a30 <__register_exitproc+0x88>)
100039c2:	681b      	ldr	r3, [r3, #0]
100039c4:	f8d3 4148 	ldr.w	r4, [r3, #328]	; 0x148
100039c8:	b334      	cbz	r4, 10003a18 <__register_exitproc+0x70>
100039ca:	6865      	ldr	r5, [r4, #4]
100039cc:	2d1f      	cmp	r5, #31
100039ce:	dc28      	bgt.n	10003a22 <__register_exitproc+0x7a>
100039d0:	b95e      	cbnz	r6, 100039ea <__register_exitproc+0x42>
100039d2:	1c6b      	adds	r3, r5, #1
100039d4:	3502      	adds	r5, #2
100039d6:	f8da 0000 	ldr.w	r0, [sl]
100039da:	6063      	str	r3, [r4, #4]
100039dc:	f844 7025 	str.w	r7, [r4, r5, lsl #2]
100039e0:	f7ff ffe0 	bl	100039a4 <__retarget_lock_release_recursive>
100039e4:	2000      	movs	r0, #0
100039e6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
100039ea:	eb04 0185 	add.w	r1, r4, r5, lsl #2
100039ee:	2301      	movs	r3, #1
100039f0:	2e02      	cmp	r6, #2
100039f2:	f8c1 9088 	str.w	r9, [r1, #136]	; 0x88
100039f6:	fa03 f305 	lsl.w	r3, r3, r5
100039fa:	f8d4 2188 	ldr.w	r2, [r4, #392]	; 0x188
100039fe:	ea42 0203 	orr.w	r2, r2, r3
10003a02:	f8c4 2188 	str.w	r2, [r4, #392]	; 0x188
10003a06:	f8c1 8108 	str.w	r8, [r1, #264]	; 0x108
10003a0a:	d1e2      	bne.n	100039d2 <__register_exitproc+0x2a>
10003a0c:	f8d4 218c 	ldr.w	r2, [r4, #396]	; 0x18c
10003a10:	4313      	orrs	r3, r2
10003a12:	f8c4 318c 	str.w	r3, [r4, #396]	; 0x18c
10003a16:	e7dc      	b.n	100039d2 <__register_exitproc+0x2a>
10003a18:	f503 74a6 	add.w	r4, r3, #332	; 0x14c
10003a1c:	f8c3 4148 	str.w	r4, [r3, #328]	; 0x148
10003a20:	e7d3      	b.n	100039ca <__register_exitproc+0x22>
10003a22:	f8da 0000 	ldr.w	r0, [sl]
10003a26:	f7ff ffbd 	bl	100039a4 <__retarget_lock_release_recursive>
10003a2a:	f04f 30ff 	mov.w	r0, #4294967295
10003a2e:	e7da      	b.n	100039e6 <__register_exitproc+0x3e>
10003a30:	10005ba8 	andne	r5, r0, r8, lsr #23
10003a34:	38000438 	stmdacc	r0, {r3, r4, r5, sl}

10003a38 <__aeabi_drsub>:
10003a38:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
10003a3c:	e002      	b.n	10003a44 <__adddf3>
10003a3e:	bf00      	nop

10003a40 <__aeabi_dsub>:
10003a40:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

10003a44 <__adddf3>:
10003a44:	b530      	push	{r4, r5, lr}
10003a46:	ea4f 0441 	mov.w	r4, r1, lsl #1
10003a4a:	ea4f 0543 	mov.w	r5, r3, lsl #1
10003a4e:	ea94 0f05 	teq	r4, r5
10003a52:	bf08      	it	eq
10003a54:	ea90 0f02 	teqeq	r0, r2
10003a58:	bf1f      	itttt	ne
10003a5a:	ea54 0c00 	orrsne.w	ip, r4, r0
10003a5e:	ea55 0c02 	orrsne.w	ip, r5, r2
10003a62:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
10003a66:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
10003a6a:	f000 80e2 	beq.w	10003c32 <__adddf3+0x1ee>
10003a6e:	ea4f 5454 	mov.w	r4, r4, lsr #21
10003a72:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
10003a76:	bfb8      	it	lt
10003a78:	426d      	neglt	r5, r5
10003a7a:	dd0c      	ble.n	10003a96 <__adddf3+0x52>
10003a7c:	442c      	add	r4, r5
10003a7e:	ea80 0202 	eor.w	r2, r0, r2
10003a82:	ea81 0303 	eor.w	r3, r1, r3
10003a86:	ea82 0000 	eor.w	r0, r2, r0
10003a8a:	ea83 0101 	eor.w	r1, r3, r1
10003a8e:	ea80 0202 	eor.w	r2, r0, r2
10003a92:	ea81 0303 	eor.w	r3, r1, r3
10003a96:	2d36      	cmp	r5, #54	; 0x36
10003a98:	bf88      	it	hi
10003a9a:	bd30      	pophi	{r4, r5, pc}
10003a9c:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
10003aa0:	ea4f 3101 	mov.w	r1, r1, lsl #12
10003aa4:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
10003aa8:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
10003aac:	d002      	beq.n	10003ab4 <__adddf3+0x70>
10003aae:	4240      	negs	r0, r0
10003ab0:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
10003ab4:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
10003ab8:	ea4f 3303 	mov.w	r3, r3, lsl #12
10003abc:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
10003ac0:	d002      	beq.n	10003ac8 <__adddf3+0x84>
10003ac2:	4252      	negs	r2, r2
10003ac4:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
10003ac8:	ea94 0f05 	teq	r4, r5
10003acc:	f000 80a7 	beq.w	10003c1e <__adddf3+0x1da>
10003ad0:	f1a4 0401 	sub.w	r4, r4, #1
10003ad4:	f1d5 0e20 	rsbs	lr, r5, #32
10003ad8:	db0d      	blt.n	10003af6 <__adddf3+0xb2>
10003ada:	fa02 fc0e 	lsl.w	ip, r2, lr
10003ade:	fa22 f205 	lsr.w	r2, r2, r5
10003ae2:	1880      	adds	r0, r0, r2
10003ae4:	f141 0100 	adc.w	r1, r1, #0
10003ae8:	fa03 f20e 	lsl.w	r2, r3, lr
10003aec:	1880      	adds	r0, r0, r2
10003aee:	fa43 f305 	asr.w	r3, r3, r5
10003af2:	4159      	adcs	r1, r3
10003af4:	e00e      	b.n	10003b14 <__adddf3+0xd0>
10003af6:	f1a5 0520 	sub.w	r5, r5, #32
10003afa:	f10e 0e20 	add.w	lr, lr, #32
10003afe:	2a01      	cmp	r2, #1
10003b00:	fa03 fc0e 	lsl.w	ip, r3, lr
10003b04:	bf28      	it	cs
10003b06:	f04c 0c02 	orrcs.w	ip, ip, #2
10003b0a:	fa43 f305 	asr.w	r3, r3, r5
10003b0e:	18c0      	adds	r0, r0, r3
10003b10:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
10003b14:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
10003b18:	d507      	bpl.n	10003b2a <__adddf3+0xe6>
10003b1a:	f04f 0e00 	mov.w	lr, #0
10003b1e:	f1dc 0c00 	rsbs	ip, ip, #0
10003b22:	eb7e 0000 	sbcs.w	r0, lr, r0
10003b26:	eb6e 0101 	sbc.w	r1, lr, r1
10003b2a:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
10003b2e:	d31b      	bcc.n	10003b68 <__adddf3+0x124>
10003b30:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
10003b34:	d30c      	bcc.n	10003b50 <__adddf3+0x10c>
10003b36:	0849      	lsrs	r1, r1, #1
10003b38:	ea5f 0030 	movs.w	r0, r0, rrx
10003b3c:	ea4f 0c3c 	mov.w	ip, ip, rrx
10003b40:	f104 0401 	add.w	r4, r4, #1
10003b44:	ea4f 5244 	mov.w	r2, r4, lsl #21
10003b48:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
10003b4c:	f080 809a 	bcs.w	10003c84 <__adddf3+0x240>
10003b50:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
10003b54:	bf08      	it	eq
10003b56:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
10003b5a:	f150 0000 	adcs.w	r0, r0, #0
10003b5e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
10003b62:	ea41 0105 	orr.w	r1, r1, r5
10003b66:	bd30      	pop	{r4, r5, pc}
10003b68:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
10003b6c:	4140      	adcs	r0, r0
10003b6e:	eb41 0101 	adc.w	r1, r1, r1
10003b72:	3c01      	subs	r4, #1
10003b74:	bf28      	it	cs
10003b76:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
10003b7a:	d2e9      	bcs.n	10003b50 <__adddf3+0x10c>
10003b7c:	f091 0f00 	teq	r1, #0
10003b80:	bf04      	itt	eq
10003b82:	4601      	moveq	r1, r0
10003b84:	2000      	moveq	r0, #0
10003b86:	fab1 f381 	clz	r3, r1
10003b8a:	bf08      	it	eq
10003b8c:	3320      	addeq	r3, #32
10003b8e:	f1a3 030b 	sub.w	r3, r3, #11
10003b92:	f1b3 0220 	subs.w	r2, r3, #32
10003b96:	da0c      	bge.n	10003bb2 <__adddf3+0x16e>
10003b98:	320c      	adds	r2, #12
10003b9a:	dd08      	ble.n	10003bae <__adddf3+0x16a>
10003b9c:	f102 0c14 	add.w	ip, r2, #20
10003ba0:	f1c2 020c 	rsb	r2, r2, #12
10003ba4:	fa01 f00c 	lsl.w	r0, r1, ip
10003ba8:	fa21 f102 	lsr.w	r1, r1, r2
10003bac:	e00c      	b.n	10003bc8 <__adddf3+0x184>
10003bae:	f102 0214 	add.w	r2, r2, #20
10003bb2:	bfd8      	it	le
10003bb4:	f1c2 0c20 	rsble	ip, r2, #32
10003bb8:	fa01 f102 	lsl.w	r1, r1, r2
10003bbc:	fa20 fc0c 	lsr.w	ip, r0, ip
10003bc0:	bfdc      	itt	le
10003bc2:	ea41 010c 	orrle.w	r1, r1, ip
10003bc6:	4090      	lslle	r0, r2
10003bc8:	1ae4      	subs	r4, r4, r3
10003bca:	bfa2      	ittt	ge
10003bcc:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
10003bd0:	4329      	orrge	r1, r5
10003bd2:	bd30      	popge	{r4, r5, pc}
10003bd4:	ea6f 0404 	mvn.w	r4, r4
10003bd8:	3c1f      	subs	r4, #31
10003bda:	da1c      	bge.n	10003c16 <__adddf3+0x1d2>
10003bdc:	340c      	adds	r4, #12
10003bde:	dc0e      	bgt.n	10003bfe <__adddf3+0x1ba>
10003be0:	f104 0414 	add.w	r4, r4, #20
10003be4:	f1c4 0220 	rsb	r2, r4, #32
10003be8:	fa20 f004 	lsr.w	r0, r0, r4
10003bec:	fa01 f302 	lsl.w	r3, r1, r2
10003bf0:	ea40 0003 	orr.w	r0, r0, r3
10003bf4:	fa21 f304 	lsr.w	r3, r1, r4
10003bf8:	ea45 0103 	orr.w	r1, r5, r3
10003bfc:	bd30      	pop	{r4, r5, pc}
10003bfe:	f1c4 040c 	rsb	r4, r4, #12
10003c02:	f1c4 0220 	rsb	r2, r4, #32
10003c06:	fa20 f002 	lsr.w	r0, r0, r2
10003c0a:	fa01 f304 	lsl.w	r3, r1, r4
10003c0e:	ea40 0003 	orr.w	r0, r0, r3
10003c12:	4629      	mov	r1, r5
10003c14:	bd30      	pop	{r4, r5, pc}
10003c16:	fa21 f004 	lsr.w	r0, r1, r4
10003c1a:	4629      	mov	r1, r5
10003c1c:	bd30      	pop	{r4, r5, pc}
10003c1e:	f094 0f00 	teq	r4, #0
10003c22:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
10003c26:	bf06      	itte	eq
10003c28:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
10003c2c:	3401      	addeq	r4, #1
10003c2e:	3d01      	subne	r5, #1
10003c30:	e74e      	b.n	10003ad0 <__adddf3+0x8c>
10003c32:	ea7f 5c64 	mvns.w	ip, r4, asr #21
10003c36:	bf18      	it	ne
10003c38:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
10003c3c:	d029      	beq.n	10003c92 <__adddf3+0x24e>
10003c3e:	ea94 0f05 	teq	r4, r5
10003c42:	bf08      	it	eq
10003c44:	ea90 0f02 	teqeq	r0, r2
10003c48:	d005      	beq.n	10003c56 <__adddf3+0x212>
10003c4a:	ea54 0c00 	orrs.w	ip, r4, r0
10003c4e:	bf04      	itt	eq
10003c50:	4619      	moveq	r1, r3
10003c52:	4610      	moveq	r0, r2
10003c54:	bd30      	pop	{r4, r5, pc}
10003c56:	ea91 0f03 	teq	r1, r3
10003c5a:	bf1e      	ittt	ne
10003c5c:	2100      	movne	r1, #0
10003c5e:	2000      	movne	r0, #0
10003c60:	bd30      	popne	{r4, r5, pc}
10003c62:	ea5f 5c54 	movs.w	ip, r4, lsr #21
10003c66:	d105      	bne.n	10003c74 <__adddf3+0x230>
10003c68:	0040      	lsls	r0, r0, #1
10003c6a:	4149      	adcs	r1, r1
10003c6c:	bf28      	it	cs
10003c6e:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
10003c72:	bd30      	pop	{r4, r5, pc}
10003c74:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
10003c78:	bf3c      	itt	cc
10003c7a:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
10003c7e:	bd30      	popcc	{r4, r5, pc}
10003c80:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
10003c84:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
10003c88:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
10003c8c:	f04f 0000 	mov.w	r0, #0
10003c90:	bd30      	pop	{r4, r5, pc}
10003c92:	ea7f 5c64 	mvns.w	ip, r4, asr #21
10003c96:	bf1a      	itte	ne
10003c98:	4619      	movne	r1, r3
10003c9a:	4610      	movne	r0, r2
10003c9c:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
10003ca0:	bf1c      	itt	ne
10003ca2:	460b      	movne	r3, r1
10003ca4:	4602      	movne	r2, r0
10003ca6:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
10003caa:	bf06      	itte	eq
10003cac:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
10003cb0:	ea91 0f03 	teqeq	r1, r3
10003cb4:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
10003cb8:	bd30      	pop	{r4, r5, pc}
10003cba:	bf00      	nop

10003cbc <__aeabi_ui2d>:
10003cbc:	f090 0f00 	teq	r0, #0
10003cc0:	bf04      	itt	eq
10003cc2:	2100      	moveq	r1, #0
10003cc4:	4770      	bxeq	lr
10003cc6:	b530      	push	{r4, r5, lr}
10003cc8:	f44f 6480 	mov.w	r4, #1024	; 0x400
10003ccc:	f104 0432 	add.w	r4, r4, #50	; 0x32
10003cd0:	f04f 0500 	mov.w	r5, #0
10003cd4:	f04f 0100 	mov.w	r1, #0
10003cd8:	e750      	b.n	10003b7c <__adddf3+0x138>
10003cda:	bf00      	nop

10003cdc <__aeabi_i2d>:
10003cdc:	f090 0f00 	teq	r0, #0
10003ce0:	bf04      	itt	eq
10003ce2:	2100      	moveq	r1, #0
10003ce4:	4770      	bxeq	lr
10003ce6:	b530      	push	{r4, r5, lr}
10003ce8:	f44f 6480 	mov.w	r4, #1024	; 0x400
10003cec:	f104 0432 	add.w	r4, r4, #50	; 0x32
10003cf0:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
10003cf4:	bf48      	it	mi
10003cf6:	4240      	negmi	r0, r0
10003cf8:	f04f 0100 	mov.w	r1, #0
10003cfc:	e73e      	b.n	10003b7c <__adddf3+0x138>
10003cfe:	bf00      	nop

10003d00 <__aeabi_f2d>:
10003d00:	0042      	lsls	r2, r0, #1
10003d02:	ea4f 01e2 	mov.w	r1, r2, asr #3
10003d06:	ea4f 0131 	mov.w	r1, r1, rrx
10003d0a:	ea4f 7002 	mov.w	r0, r2, lsl #28
10003d0e:	bf1f      	itttt	ne
10003d10:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
10003d14:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
10003d18:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
10003d1c:	4770      	bxne	lr
10003d1e:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
10003d22:	bf08      	it	eq
10003d24:	4770      	bxeq	lr
10003d26:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
10003d2a:	bf04      	itt	eq
10003d2c:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
10003d30:	4770      	bxeq	lr
10003d32:	b530      	push	{r4, r5, lr}
10003d34:	f44f 7460 	mov.w	r4, #896	; 0x380
10003d38:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
10003d3c:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
10003d40:	e71c      	b.n	10003b7c <__adddf3+0x138>
10003d42:	bf00      	nop

10003d44 <__aeabi_ul2d>:
10003d44:	ea50 0201 	orrs.w	r2, r0, r1
10003d48:	bf08      	it	eq
10003d4a:	4770      	bxeq	lr
10003d4c:	b530      	push	{r4, r5, lr}
10003d4e:	f04f 0500 	mov.w	r5, #0
10003d52:	e00a      	b.n	10003d6a <__aeabi_l2d+0x16>

10003d54 <__aeabi_l2d>:
10003d54:	ea50 0201 	orrs.w	r2, r0, r1
10003d58:	bf08      	it	eq
10003d5a:	4770      	bxeq	lr
10003d5c:	b530      	push	{r4, r5, lr}
10003d5e:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
10003d62:	d502      	bpl.n	10003d6a <__aeabi_l2d+0x16>
10003d64:	4240      	negs	r0, r0
10003d66:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
10003d6a:	f44f 6480 	mov.w	r4, #1024	; 0x400
10003d6e:	f104 0432 	add.w	r4, r4, #50	; 0x32
10003d72:	ea5f 5c91 	movs.w	ip, r1, lsr #22
10003d76:	f43f aed8 	beq.w	10003b2a <__adddf3+0xe6>
10003d7a:	f04f 0203 	mov.w	r2, #3
10003d7e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
10003d82:	bf18      	it	ne
10003d84:	3203      	addne	r2, #3
10003d86:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
10003d8a:	bf18      	it	ne
10003d8c:	3203      	addne	r2, #3
10003d8e:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
10003d92:	f1c2 0320 	rsb	r3, r2, #32
10003d96:	fa00 fc03 	lsl.w	ip, r0, r3
10003d9a:	fa20 f002 	lsr.w	r0, r0, r2
10003d9e:	fa01 fe03 	lsl.w	lr, r1, r3
10003da2:	ea40 000e 	orr.w	r0, r0, lr
10003da6:	fa21 f102 	lsr.w	r1, r1, r2
10003daa:	4414      	add	r4, r2
10003dac:	e6bd      	b.n	10003b2a <__adddf3+0xe6>
10003dae:	bf00      	nop

10003db0 <__aeabi_dmul>:
10003db0:	b570      	push	{r4, r5, r6, lr}
10003db2:	f04f 0cff 	mov.w	ip, #255	; 0xff
10003db6:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
10003dba:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
10003dbe:	bf1d      	ittte	ne
10003dc0:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
10003dc4:	ea94 0f0c 	teqne	r4, ip
10003dc8:	ea95 0f0c 	teqne	r5, ip
10003dcc:	f000 f8de 	bleq	10003f8c <__aeabi_dmul+0x1dc>
10003dd0:	442c      	add	r4, r5
10003dd2:	ea81 0603 	eor.w	r6, r1, r3
10003dd6:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
10003dda:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
10003dde:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
10003de2:	bf18      	it	ne
10003de4:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
10003de8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
10003dec:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
10003df0:	d038      	beq.n	10003e64 <__aeabi_dmul+0xb4>
10003df2:	fba0 ce02 	umull	ip, lr, r0, r2
10003df6:	f04f 0500 	mov.w	r5, #0
10003dfa:	fbe1 e502 	umlal	lr, r5, r1, r2
10003dfe:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
10003e02:	fbe0 e503 	umlal	lr, r5, r0, r3
10003e06:	f04f 0600 	mov.w	r6, #0
10003e0a:	fbe1 5603 	umlal	r5, r6, r1, r3
10003e0e:	f09c 0f00 	teq	ip, #0
10003e12:	bf18      	it	ne
10003e14:	f04e 0e01 	orrne.w	lr, lr, #1
10003e18:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
10003e1c:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
10003e20:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
10003e24:	d204      	bcs.n	10003e30 <__aeabi_dmul+0x80>
10003e26:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
10003e2a:	416d      	adcs	r5, r5
10003e2c:	eb46 0606 	adc.w	r6, r6, r6
10003e30:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
10003e34:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
10003e38:	ea4f 20c5 	mov.w	r0, r5, lsl #11
10003e3c:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
10003e40:	ea4f 2ece 	mov.w	lr, lr, lsl #11
10003e44:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
10003e48:	bf88      	it	hi
10003e4a:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
10003e4e:	d81e      	bhi.n	10003e8e <__aeabi_dmul+0xde>
10003e50:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
10003e54:	bf08      	it	eq
10003e56:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
10003e5a:	f150 0000 	adcs.w	r0, r0, #0
10003e5e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
10003e62:	bd70      	pop	{r4, r5, r6, pc}
10003e64:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
10003e68:	ea46 0101 	orr.w	r1, r6, r1
10003e6c:	ea40 0002 	orr.w	r0, r0, r2
10003e70:	ea81 0103 	eor.w	r1, r1, r3
10003e74:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
10003e78:	bfc2      	ittt	gt
10003e7a:	ebd4 050c 	rsbsgt	r5, r4, ip
10003e7e:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
10003e82:	bd70      	popgt	{r4, r5, r6, pc}
10003e84:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
10003e88:	f04f 0e00 	mov.w	lr, #0
10003e8c:	3c01      	subs	r4, #1
10003e8e:	f300 80ab 	bgt.w	10003fe8 <__aeabi_dmul+0x238>
10003e92:	f114 0f36 	cmn.w	r4, #54	; 0x36
10003e96:	bfde      	ittt	le
10003e98:	2000      	movle	r0, #0
10003e9a:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
10003e9e:	bd70      	pople	{r4, r5, r6, pc}
10003ea0:	f1c4 0400 	rsb	r4, r4, #0
10003ea4:	3c20      	subs	r4, #32
10003ea6:	da35      	bge.n	10003f14 <__aeabi_dmul+0x164>
10003ea8:	340c      	adds	r4, #12
10003eaa:	dc1b      	bgt.n	10003ee4 <__aeabi_dmul+0x134>
10003eac:	f104 0414 	add.w	r4, r4, #20
10003eb0:	f1c4 0520 	rsb	r5, r4, #32
10003eb4:	fa00 f305 	lsl.w	r3, r0, r5
10003eb8:	fa20 f004 	lsr.w	r0, r0, r4
10003ebc:	fa01 f205 	lsl.w	r2, r1, r5
10003ec0:	ea40 0002 	orr.w	r0, r0, r2
10003ec4:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
10003ec8:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
10003ecc:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
10003ed0:	fa21 f604 	lsr.w	r6, r1, r4
10003ed4:	eb42 0106 	adc.w	r1, r2, r6
10003ed8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
10003edc:	bf08      	it	eq
10003ede:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
10003ee2:	bd70      	pop	{r4, r5, r6, pc}
10003ee4:	f1c4 040c 	rsb	r4, r4, #12
10003ee8:	f1c4 0520 	rsb	r5, r4, #32
10003eec:	fa00 f304 	lsl.w	r3, r0, r4
10003ef0:	fa20 f005 	lsr.w	r0, r0, r5
10003ef4:	fa01 f204 	lsl.w	r2, r1, r4
10003ef8:	ea40 0002 	orr.w	r0, r0, r2
10003efc:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
10003f00:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
10003f04:	f141 0100 	adc.w	r1, r1, #0
10003f08:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
10003f0c:	bf08      	it	eq
10003f0e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
10003f12:	bd70      	pop	{r4, r5, r6, pc}
10003f14:	f1c4 0520 	rsb	r5, r4, #32
10003f18:	fa00 f205 	lsl.w	r2, r0, r5
10003f1c:	ea4e 0e02 	orr.w	lr, lr, r2
10003f20:	fa20 f304 	lsr.w	r3, r0, r4
10003f24:	fa01 f205 	lsl.w	r2, r1, r5
10003f28:	ea43 0302 	orr.w	r3, r3, r2
10003f2c:	fa21 f004 	lsr.w	r0, r1, r4
10003f30:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
10003f34:	fa21 f204 	lsr.w	r2, r1, r4
10003f38:	ea20 0002 	bic.w	r0, r0, r2
10003f3c:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
10003f40:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
10003f44:	bf08      	it	eq
10003f46:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
10003f4a:	bd70      	pop	{r4, r5, r6, pc}
10003f4c:	f094 0f00 	teq	r4, #0
10003f50:	d10f      	bne.n	10003f72 <__aeabi_dmul+0x1c2>
10003f52:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
10003f56:	0040      	lsls	r0, r0, #1
10003f58:	eb41 0101 	adc.w	r1, r1, r1
10003f5c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
10003f60:	bf08      	it	eq
10003f62:	3c01      	subeq	r4, #1
10003f64:	d0f7      	beq.n	10003f56 <__aeabi_dmul+0x1a6>
10003f66:	ea41 0106 	orr.w	r1, r1, r6
10003f6a:	f095 0f00 	teq	r5, #0
10003f6e:	bf18      	it	ne
10003f70:	4770      	bxne	lr
10003f72:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
10003f76:	0052      	lsls	r2, r2, #1
10003f78:	eb43 0303 	adc.w	r3, r3, r3
10003f7c:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
10003f80:	bf08      	it	eq
10003f82:	3d01      	subeq	r5, #1
10003f84:	d0f7      	beq.n	10003f76 <__aeabi_dmul+0x1c6>
10003f86:	ea43 0306 	orr.w	r3, r3, r6
10003f8a:	4770      	bx	lr
10003f8c:	ea94 0f0c 	teq	r4, ip
10003f90:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
10003f94:	bf18      	it	ne
10003f96:	ea95 0f0c 	teqne	r5, ip
10003f9a:	d00c      	beq.n	10003fb6 <__aeabi_dmul+0x206>
10003f9c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
10003fa0:	bf18      	it	ne
10003fa2:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
10003fa6:	d1d1      	bne.n	10003f4c <__aeabi_dmul+0x19c>
10003fa8:	ea81 0103 	eor.w	r1, r1, r3
10003fac:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
10003fb0:	f04f 0000 	mov.w	r0, #0
10003fb4:	bd70      	pop	{r4, r5, r6, pc}
10003fb6:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
10003fba:	bf06      	itte	eq
10003fbc:	4610      	moveq	r0, r2
10003fbe:	4619      	moveq	r1, r3
10003fc0:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
10003fc4:	d019      	beq.n	10003ffa <__aeabi_dmul+0x24a>
10003fc6:	ea94 0f0c 	teq	r4, ip
10003fca:	d102      	bne.n	10003fd2 <__aeabi_dmul+0x222>
10003fcc:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
10003fd0:	d113      	bne.n	10003ffa <__aeabi_dmul+0x24a>
10003fd2:	ea95 0f0c 	teq	r5, ip
10003fd6:	d105      	bne.n	10003fe4 <__aeabi_dmul+0x234>
10003fd8:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
10003fdc:	bf1c      	itt	ne
10003fde:	4610      	movne	r0, r2
10003fe0:	4619      	movne	r1, r3
10003fe2:	d10a      	bne.n	10003ffa <__aeabi_dmul+0x24a>
10003fe4:	ea81 0103 	eor.w	r1, r1, r3
10003fe8:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
10003fec:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
10003ff0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
10003ff4:	f04f 0000 	mov.w	r0, #0
10003ff8:	bd70      	pop	{r4, r5, r6, pc}
10003ffa:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
10003ffe:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
10004002:	bd70      	pop	{r4, r5, r6, pc}

10004004 <__aeabi_ddiv>:
10004004:	b570      	push	{r4, r5, r6, lr}
10004006:	f04f 0cff 	mov.w	ip, #255	; 0xff
1000400a:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
1000400e:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
10004012:	bf1d      	ittte	ne
10004014:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
10004018:	ea94 0f0c 	teqne	r4, ip
1000401c:	ea95 0f0c 	teqne	r5, ip
10004020:	f000 f8a7 	bleq	10004172 <__aeabi_ddiv+0x16e>
10004024:	eba4 0405 	sub.w	r4, r4, r5
10004028:	ea81 0e03 	eor.w	lr, r1, r3
1000402c:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
10004030:	ea4f 3101 	mov.w	r1, r1, lsl #12
10004034:	f000 8088 	beq.w	10004148 <__aeabi_ddiv+0x144>
10004038:	ea4f 3303 	mov.w	r3, r3, lsl #12
1000403c:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
10004040:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
10004044:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
10004048:	ea4f 2202 	mov.w	r2, r2, lsl #8
1000404c:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
10004050:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
10004054:	ea4f 2600 	mov.w	r6, r0, lsl #8
10004058:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
1000405c:	429d      	cmp	r5, r3
1000405e:	bf08      	it	eq
10004060:	4296      	cmpeq	r6, r2
10004062:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
10004066:	f504 7440 	add.w	r4, r4, #768	; 0x300
1000406a:	d202      	bcs.n	10004072 <__aeabi_ddiv+0x6e>
1000406c:	085b      	lsrs	r3, r3, #1
1000406e:	ea4f 0232 	mov.w	r2, r2, rrx
10004072:	1ab6      	subs	r6, r6, r2
10004074:	eb65 0503 	sbc.w	r5, r5, r3
10004078:	085b      	lsrs	r3, r3, #1
1000407a:	ea4f 0232 	mov.w	r2, r2, rrx
1000407e:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
10004082:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
10004086:	ebb6 0e02 	subs.w	lr, r6, r2
1000408a:	eb75 0e03 	sbcs.w	lr, r5, r3
1000408e:	bf22      	ittt	cs
10004090:	1ab6      	subcs	r6, r6, r2
10004092:	4675      	movcs	r5, lr
10004094:	ea40 000c 	orrcs.w	r0, r0, ip
10004098:	085b      	lsrs	r3, r3, #1
1000409a:	ea4f 0232 	mov.w	r2, r2, rrx
1000409e:	ebb6 0e02 	subs.w	lr, r6, r2
100040a2:	eb75 0e03 	sbcs.w	lr, r5, r3
100040a6:	bf22      	ittt	cs
100040a8:	1ab6      	subcs	r6, r6, r2
100040aa:	4675      	movcs	r5, lr
100040ac:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
100040b0:	085b      	lsrs	r3, r3, #1
100040b2:	ea4f 0232 	mov.w	r2, r2, rrx
100040b6:	ebb6 0e02 	subs.w	lr, r6, r2
100040ba:	eb75 0e03 	sbcs.w	lr, r5, r3
100040be:	bf22      	ittt	cs
100040c0:	1ab6      	subcs	r6, r6, r2
100040c2:	4675      	movcs	r5, lr
100040c4:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
100040c8:	085b      	lsrs	r3, r3, #1
100040ca:	ea4f 0232 	mov.w	r2, r2, rrx
100040ce:	ebb6 0e02 	subs.w	lr, r6, r2
100040d2:	eb75 0e03 	sbcs.w	lr, r5, r3
100040d6:	bf22      	ittt	cs
100040d8:	1ab6      	subcs	r6, r6, r2
100040da:	4675      	movcs	r5, lr
100040dc:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
100040e0:	ea55 0e06 	orrs.w	lr, r5, r6
100040e4:	d018      	beq.n	10004118 <__aeabi_ddiv+0x114>
100040e6:	ea4f 1505 	mov.w	r5, r5, lsl #4
100040ea:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
100040ee:	ea4f 1606 	mov.w	r6, r6, lsl #4
100040f2:	ea4f 03c3 	mov.w	r3, r3, lsl #3
100040f6:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
100040fa:	ea4f 02c2 	mov.w	r2, r2, lsl #3
100040fe:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
10004102:	d1c0      	bne.n	10004086 <__aeabi_ddiv+0x82>
10004104:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
10004108:	d10b      	bne.n	10004122 <__aeabi_ddiv+0x11e>
1000410a:	ea41 0100 	orr.w	r1, r1, r0
1000410e:	f04f 0000 	mov.w	r0, #0
10004112:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
10004116:	e7b6      	b.n	10004086 <__aeabi_ddiv+0x82>
10004118:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
1000411c:	bf04      	itt	eq
1000411e:	4301      	orreq	r1, r0
10004120:	2000      	moveq	r0, #0
10004122:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
10004126:	bf88      	it	hi
10004128:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
1000412c:	f63f aeaf 	bhi.w	10003e8e <__aeabi_dmul+0xde>
10004130:	ebb5 0c03 	subs.w	ip, r5, r3
10004134:	bf04      	itt	eq
10004136:	ebb6 0c02 	subseq.w	ip, r6, r2
1000413a:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
1000413e:	f150 0000 	adcs.w	r0, r0, #0
10004142:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
10004146:	bd70      	pop	{r4, r5, r6, pc}
10004148:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
1000414c:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
10004150:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
10004154:	bfc2      	ittt	gt
10004156:	ebd4 050c 	rsbsgt	r5, r4, ip
1000415a:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
1000415e:	bd70      	popgt	{r4, r5, r6, pc}
10004160:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
10004164:	f04f 0e00 	mov.w	lr, #0
10004168:	3c01      	subs	r4, #1
1000416a:	e690      	b.n	10003e8e <__aeabi_dmul+0xde>
1000416c:	ea45 0e06 	orr.w	lr, r5, r6
10004170:	e68d      	b.n	10003e8e <__aeabi_dmul+0xde>
10004172:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
10004176:	ea94 0f0c 	teq	r4, ip
1000417a:	bf08      	it	eq
1000417c:	ea95 0f0c 	teqeq	r5, ip
10004180:	f43f af3b 	beq.w	10003ffa <__aeabi_dmul+0x24a>
10004184:	ea94 0f0c 	teq	r4, ip
10004188:	d10a      	bne.n	100041a0 <__aeabi_ddiv+0x19c>
1000418a:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
1000418e:	f47f af34 	bne.w	10003ffa <__aeabi_dmul+0x24a>
10004192:	ea95 0f0c 	teq	r5, ip
10004196:	f47f af25 	bne.w	10003fe4 <__aeabi_dmul+0x234>
1000419a:	4610      	mov	r0, r2
1000419c:	4619      	mov	r1, r3
1000419e:	e72c      	b.n	10003ffa <__aeabi_dmul+0x24a>
100041a0:	ea95 0f0c 	teq	r5, ip
100041a4:	d106      	bne.n	100041b4 <__aeabi_ddiv+0x1b0>
100041a6:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
100041aa:	f43f aefd 	beq.w	10003fa8 <__aeabi_dmul+0x1f8>
100041ae:	4610      	mov	r0, r2
100041b0:	4619      	mov	r1, r3
100041b2:	e722      	b.n	10003ffa <__aeabi_dmul+0x24a>
100041b4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
100041b8:	bf18      	it	ne
100041ba:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
100041be:	f47f aec5 	bne.w	10003f4c <__aeabi_dmul+0x19c>
100041c2:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
100041c6:	f47f af0d 	bne.w	10003fe4 <__aeabi_dmul+0x234>
100041ca:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
100041ce:	f47f aeeb 	bne.w	10003fa8 <__aeabi_dmul+0x1f8>
100041d2:	e712      	b.n	10003ffa <__aeabi_dmul+0x24a>

100041d4 <__gedf2>:
100041d4:	f04f 3cff 	mov.w	ip, #4294967295
100041d8:	e006      	b.n	100041e8 <__cmpdf2+0x4>
100041da:	bf00      	nop

100041dc <__ledf2>:
100041dc:	f04f 0c01 	mov.w	ip, #1
100041e0:	e002      	b.n	100041e8 <__cmpdf2+0x4>
100041e2:	bf00      	nop

100041e4 <__cmpdf2>:
100041e4:	f04f 0c01 	mov.w	ip, #1
100041e8:	f84d cd04 	str.w	ip, [sp, #-4]!
100041ec:	ea4f 0c41 	mov.w	ip, r1, lsl #1
100041f0:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
100041f4:	ea4f 0c43 	mov.w	ip, r3, lsl #1
100041f8:	bf18      	it	ne
100041fa:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
100041fe:	d01b      	beq.n	10004238 <__cmpdf2+0x54>
10004200:	b001      	add	sp, #4
10004202:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
10004206:	bf0c      	ite	eq
10004208:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
1000420c:	ea91 0f03 	teqne	r1, r3
10004210:	bf02      	ittt	eq
10004212:	ea90 0f02 	teqeq	r0, r2
10004216:	2000      	moveq	r0, #0
10004218:	4770      	bxeq	lr
1000421a:	f110 0f00 	cmn.w	r0, #0
1000421e:	ea91 0f03 	teq	r1, r3
10004222:	bf58      	it	pl
10004224:	4299      	cmppl	r1, r3
10004226:	bf08      	it	eq
10004228:	4290      	cmpeq	r0, r2
1000422a:	bf2c      	ite	cs
1000422c:	17d8      	asrcs	r0, r3, #31
1000422e:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
10004232:	f040 0001 	orr.w	r0, r0, #1
10004236:	4770      	bx	lr
10004238:	ea4f 0c41 	mov.w	ip, r1, lsl #1
1000423c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
10004240:	d102      	bne.n	10004248 <__cmpdf2+0x64>
10004242:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
10004246:	d107      	bne.n	10004258 <__cmpdf2+0x74>
10004248:	ea4f 0c43 	mov.w	ip, r3, lsl #1
1000424c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
10004250:	d1d6      	bne.n	10004200 <__cmpdf2+0x1c>
10004252:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
10004256:	d0d3      	beq.n	10004200 <__cmpdf2+0x1c>
10004258:	f85d 0b04 	ldr.w	r0, [sp], #4
1000425c:	4770      	bx	lr
1000425e:	bf00      	nop

10004260 <__aeabi_cdrcmple>:
10004260:	4684      	mov	ip, r0
10004262:	4610      	mov	r0, r2
10004264:	4662      	mov	r2, ip
10004266:	468c      	mov	ip, r1
10004268:	4619      	mov	r1, r3
1000426a:	4663      	mov	r3, ip
1000426c:	e000      	b.n	10004270 <__aeabi_cdcmpeq>
1000426e:	bf00      	nop

10004270 <__aeabi_cdcmpeq>:
10004270:	b501      	push	{r0, lr}
10004272:	f7ff ffb7 	bl	100041e4 <__cmpdf2>
10004276:	2800      	cmp	r0, #0
10004278:	bf48      	it	mi
1000427a:	f110 0f00 	cmnmi.w	r0, #0
1000427e:	bd01      	pop	{r0, pc}

10004280 <__aeabi_dcmpeq>:
10004280:	f84d ed08 	str.w	lr, [sp, #-8]!
10004284:	f7ff fff4 	bl	10004270 <__aeabi_cdcmpeq>
10004288:	bf0c      	ite	eq
1000428a:	2001      	moveq	r0, #1
1000428c:	2000      	movne	r0, #0
1000428e:	f85d fb08 	ldr.w	pc, [sp], #8
10004292:	bf00      	nop

10004294 <__aeabi_dcmplt>:
10004294:	f84d ed08 	str.w	lr, [sp, #-8]!
10004298:	f7ff ffea 	bl	10004270 <__aeabi_cdcmpeq>
1000429c:	bf34      	ite	cc
1000429e:	2001      	movcc	r0, #1
100042a0:	2000      	movcs	r0, #0
100042a2:	f85d fb08 	ldr.w	pc, [sp], #8
100042a6:	bf00      	nop

100042a8 <__aeabi_dcmple>:
100042a8:	f84d ed08 	str.w	lr, [sp, #-8]!
100042ac:	f7ff ffe0 	bl	10004270 <__aeabi_cdcmpeq>
100042b0:	bf94      	ite	ls
100042b2:	2001      	movls	r0, #1
100042b4:	2000      	movhi	r0, #0
100042b6:	f85d fb08 	ldr.w	pc, [sp], #8
100042ba:	bf00      	nop

100042bc <__aeabi_dcmpge>:
100042bc:	f84d ed08 	str.w	lr, [sp, #-8]!
100042c0:	f7ff ffce 	bl	10004260 <__aeabi_cdrcmple>
100042c4:	bf94      	ite	ls
100042c6:	2001      	movls	r0, #1
100042c8:	2000      	movhi	r0, #0
100042ca:	f85d fb08 	ldr.w	pc, [sp], #8
100042ce:	bf00      	nop

100042d0 <__aeabi_dcmpgt>:
100042d0:	f84d ed08 	str.w	lr, [sp, #-8]!
100042d4:	f7ff ffc4 	bl	10004260 <__aeabi_cdrcmple>
100042d8:	bf34      	ite	cc
100042da:	2001      	movcc	r0, #1
100042dc:	2000      	movcs	r0, #0
100042de:	f85d fb08 	ldr.w	pc, [sp], #8
100042e2:	bf00      	nop

100042e4 <__aeabi_d2iz>:
100042e4:	ea4f 0241 	mov.w	r2, r1, lsl #1
100042e8:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
100042ec:	d215      	bcs.n	1000431a <__aeabi_d2iz+0x36>
100042ee:	d511      	bpl.n	10004314 <__aeabi_d2iz+0x30>
100042f0:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
100042f4:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
100042f8:	d912      	bls.n	10004320 <__aeabi_d2iz+0x3c>
100042fa:	ea4f 23c1 	mov.w	r3, r1, lsl #11
100042fe:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
10004302:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
10004306:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
1000430a:	fa23 f002 	lsr.w	r0, r3, r2
1000430e:	bf18      	it	ne
10004310:	4240      	negne	r0, r0
10004312:	4770      	bx	lr
10004314:	f04f 0000 	mov.w	r0, #0
10004318:	4770      	bx	lr
1000431a:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
1000431e:	d105      	bne.n	1000432c <__aeabi_d2iz+0x48>
10004320:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
10004324:	bf08      	it	eq
10004326:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
1000432a:	4770      	bx	lr
1000432c:	f04f 0000 	mov.w	r0, #0
10004330:	4770      	bx	lr
10004332:	bf00      	nop

10004334 <__aeabi_d2uiz>:
10004334:	004a      	lsls	r2, r1, #1
10004336:	d211      	bcs.n	1000435c <__aeabi_d2uiz+0x28>
10004338:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
1000433c:	d211      	bcs.n	10004362 <__aeabi_d2uiz+0x2e>
1000433e:	d50d      	bpl.n	1000435c <__aeabi_d2uiz+0x28>
10004340:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
10004344:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
10004348:	d40e      	bmi.n	10004368 <__aeabi_d2uiz+0x34>
1000434a:	ea4f 23c1 	mov.w	r3, r1, lsl #11
1000434e:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
10004352:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
10004356:	fa23 f002 	lsr.w	r0, r3, r2
1000435a:	4770      	bx	lr
1000435c:	f04f 0000 	mov.w	r0, #0
10004360:	4770      	bx	lr
10004362:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
10004366:	d102      	bne.n	1000436e <__aeabi_d2uiz+0x3a>
10004368:	f04f 30ff 	mov.w	r0, #4294967295
1000436c:	4770      	bx	lr
1000436e:	f04f 0000 	mov.w	r0, #0
10004372:	4770      	bx	lr

10004374 <__aeabi_uldivmod>:
10004374:	b953      	cbnz	r3, 1000438c <__aeabi_uldivmod+0x18>
10004376:	b94a      	cbnz	r2, 1000438c <__aeabi_uldivmod+0x18>
10004378:	2900      	cmp	r1, #0
1000437a:	bf08      	it	eq
1000437c:	2800      	cmpeq	r0, #0
1000437e:	bf1c      	itt	ne
10004380:	f04f 31ff 	movne.w	r1, #4294967295
10004384:	f04f 30ff 	movne.w	r0, #4294967295
10004388:	f001 b934 	b.w	100055f4 <__aeabi_idiv0>
1000438c:	f1ad 0c08 	sub.w	ip, sp, #8
10004390:	e96d ce04 	strd	ip, lr, [sp, #-16]!
10004394:	f000 f806 	bl	100043a4 <__udivmoddi4>
10004398:	f8dd e004 	ldr.w	lr, [sp, #4]
1000439c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
100043a0:	b004      	add	sp, #16
100043a2:	4770      	bx	lr

100043a4 <__udivmoddi4>:
100043a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
100043a8:	9d09      	ldr	r5, [sp, #36]	; 0x24
100043aa:	4604      	mov	r4, r0
100043ac:	460f      	mov	r7, r1
100043ae:	2b00      	cmp	r3, #0
100043b0:	d148      	bne.n	10004444 <__udivmoddi4+0xa0>
100043b2:	428a      	cmp	r2, r1
100043b4:	4694      	mov	ip, r2
100043b6:	d961      	bls.n	1000447c <__udivmoddi4+0xd8>
100043b8:	fab2 f382 	clz	r3, r2
100043bc:	b143      	cbz	r3, 100043d0 <__udivmoddi4+0x2c>
100043be:	f1c3 0120 	rsb	r1, r3, #32
100043c2:	409f      	lsls	r7, r3
100043c4:	fa02 fc03 	lsl.w	ip, r2, r3
100043c8:	409c      	lsls	r4, r3
100043ca:	fa20 f101 	lsr.w	r1, r0, r1
100043ce:	430f      	orrs	r7, r1
100043d0:	ea4f 411c 	mov.w	r1, ip, lsr #16
100043d4:	fa1f fe8c 	uxth.w	lr, ip
100043d8:	0c22      	lsrs	r2, r4, #16
100043da:	fbb7 f6f1 	udiv	r6, r7, r1
100043de:	fb01 7716 	mls	r7, r1, r6, r7
100043e2:	fb06 f00e 	mul.w	r0, r6, lr
100043e6:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
100043ea:	4290      	cmp	r0, r2
100043ec:	d908      	bls.n	10004400 <__udivmoddi4+0x5c>
100043ee:	eb1c 0202 	adds.w	r2, ip, r2
100043f2:	f106 37ff 	add.w	r7, r6, #4294967295
100043f6:	d202      	bcs.n	100043fe <__udivmoddi4+0x5a>
100043f8:	4290      	cmp	r0, r2
100043fa:	f200 8137 	bhi.w	1000466c <__udivmoddi4+0x2c8>
100043fe:	463e      	mov	r6, r7
10004400:	1a12      	subs	r2, r2, r0
10004402:	b2a4      	uxth	r4, r4
10004404:	fbb2 f0f1 	udiv	r0, r2, r1
10004408:	fb01 2210 	mls	r2, r1, r0, r2
1000440c:	fb00 fe0e 	mul.w	lr, r0, lr
10004410:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
10004414:	45a6      	cmp	lr, r4
10004416:	d908      	bls.n	1000442a <__udivmoddi4+0x86>
10004418:	eb1c 0404 	adds.w	r4, ip, r4
1000441c:	f100 32ff 	add.w	r2, r0, #4294967295
10004420:	d202      	bcs.n	10004428 <__udivmoddi4+0x84>
10004422:	45a6      	cmp	lr, r4
10004424:	f200 811c 	bhi.w	10004660 <__udivmoddi4+0x2bc>
10004428:	4610      	mov	r0, r2
1000442a:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
1000442e:	eba4 040e 	sub.w	r4, r4, lr
10004432:	2600      	movs	r6, #0
10004434:	b11d      	cbz	r5, 1000443e <__udivmoddi4+0x9a>
10004436:	40dc      	lsrs	r4, r3
10004438:	2300      	movs	r3, #0
1000443a:	e9c5 4300 	strd	r4, r3, [r5]
1000443e:	4631      	mov	r1, r6
10004440:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10004444:	428b      	cmp	r3, r1
10004446:	d909      	bls.n	1000445c <__udivmoddi4+0xb8>
10004448:	2d00      	cmp	r5, #0
1000444a:	f000 80fd 	beq.w	10004648 <__udivmoddi4+0x2a4>
1000444e:	2600      	movs	r6, #0
10004450:	e9c5 0100 	strd	r0, r1, [r5]
10004454:	4630      	mov	r0, r6
10004456:	4631      	mov	r1, r6
10004458:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1000445c:	fab3 f683 	clz	r6, r3
10004460:	2e00      	cmp	r6, #0
10004462:	d14b      	bne.n	100044fc <__udivmoddi4+0x158>
10004464:	428b      	cmp	r3, r1
10004466:	f0c0 80f2 	bcc.w	1000464e <__udivmoddi4+0x2aa>
1000446a:	4282      	cmp	r2, r0
1000446c:	f240 80ef 	bls.w	1000464e <__udivmoddi4+0x2aa>
10004470:	4630      	mov	r0, r6
10004472:	2d00      	cmp	r5, #0
10004474:	d0e3      	beq.n	1000443e <__udivmoddi4+0x9a>
10004476:	e9c5 4700 	strd	r4, r7, [r5]
1000447a:	e7e0      	b.n	1000443e <__udivmoddi4+0x9a>
1000447c:	b902      	cbnz	r2, 10004480 <__udivmoddi4+0xdc>
1000447e:	deff      	udf	#255	; 0xff
10004480:	fab2 f382 	clz	r3, r2
10004484:	2b00      	cmp	r3, #0
10004486:	f040 809d 	bne.w	100045c4 <__udivmoddi4+0x220>
1000448a:	1a89      	subs	r1, r1, r2
1000448c:	ea4f 4e12 	mov.w	lr, r2, lsr #16
10004490:	b297      	uxth	r7, r2
10004492:	2601      	movs	r6, #1
10004494:	0c20      	lsrs	r0, r4, #16
10004496:	fbb1 f2fe 	udiv	r2, r1, lr
1000449a:	fb0e 1112 	mls	r1, lr, r2, r1
1000449e:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
100044a2:	fb07 f002 	mul.w	r0, r7, r2
100044a6:	4288      	cmp	r0, r1
100044a8:	d90f      	bls.n	100044ca <__udivmoddi4+0x126>
100044aa:	eb1c 0101 	adds.w	r1, ip, r1
100044ae:	f102 38ff 	add.w	r8, r2, #4294967295
100044b2:	bf2c      	ite	cs
100044b4:	f04f 0901 	movcs.w	r9, #1
100044b8:	f04f 0900 	movcc.w	r9, #0
100044bc:	4288      	cmp	r0, r1
100044be:	d903      	bls.n	100044c8 <__udivmoddi4+0x124>
100044c0:	f1b9 0f00 	cmp.w	r9, #0
100044c4:	f000 80cf 	beq.w	10004666 <__udivmoddi4+0x2c2>
100044c8:	4642      	mov	r2, r8
100044ca:	1a09      	subs	r1, r1, r0
100044cc:	b2a4      	uxth	r4, r4
100044ce:	fbb1 f0fe 	udiv	r0, r1, lr
100044d2:	fb0e 1110 	mls	r1, lr, r0, r1
100044d6:	fb00 f707 	mul.w	r7, r0, r7
100044da:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
100044de:	42a7      	cmp	r7, r4
100044e0:	d908      	bls.n	100044f4 <__udivmoddi4+0x150>
100044e2:	eb1c 0404 	adds.w	r4, ip, r4
100044e6:	f100 31ff 	add.w	r1, r0, #4294967295
100044ea:	d202      	bcs.n	100044f2 <__udivmoddi4+0x14e>
100044ec:	42a7      	cmp	r7, r4
100044ee:	f200 80b4 	bhi.w	1000465a <__udivmoddi4+0x2b6>
100044f2:	4608      	mov	r0, r1
100044f4:	1be4      	subs	r4, r4, r7
100044f6:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
100044fa:	e79b      	b.n	10004434 <__udivmoddi4+0x90>
100044fc:	f1c6 0720 	rsb	r7, r6, #32
10004500:	40b3      	lsls	r3, r6
10004502:	fa01 f406 	lsl.w	r4, r1, r6
10004506:	fa22 fc07 	lsr.w	ip, r2, r7
1000450a:	40f9      	lsrs	r1, r7
1000450c:	40b2      	lsls	r2, r6
1000450e:	ea4c 0c03 	orr.w	ip, ip, r3
10004512:	fa20 f307 	lsr.w	r3, r0, r7
10004516:	ea4f 491c 	mov.w	r9, ip, lsr #16
1000451a:	431c      	orrs	r4, r3
1000451c:	fa1f fe8c 	uxth.w	lr, ip
10004520:	fa00 f306 	lsl.w	r3, r0, r6
10004524:	0c20      	lsrs	r0, r4, #16
10004526:	fbb1 f8f9 	udiv	r8, r1, r9
1000452a:	fb09 1118 	mls	r1, r9, r8, r1
1000452e:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
10004532:	fb08 f00e 	mul.w	r0, r8, lr
10004536:	4288      	cmp	r0, r1
10004538:	d90f      	bls.n	1000455a <__udivmoddi4+0x1b6>
1000453a:	eb1c 0101 	adds.w	r1, ip, r1
1000453e:	f108 3aff 	add.w	sl, r8, #4294967295
10004542:	bf2c      	ite	cs
10004544:	f04f 0b01 	movcs.w	fp, #1
10004548:	f04f 0b00 	movcc.w	fp, #0
1000454c:	4288      	cmp	r0, r1
1000454e:	d903      	bls.n	10004558 <__udivmoddi4+0x1b4>
10004550:	f1bb 0f00 	cmp.w	fp, #0
10004554:	f000 808d 	beq.w	10004672 <__udivmoddi4+0x2ce>
10004558:	46d0      	mov	r8, sl
1000455a:	1a09      	subs	r1, r1, r0
1000455c:	b2a4      	uxth	r4, r4
1000455e:	fbb1 f0f9 	udiv	r0, r1, r9
10004562:	fb09 1110 	mls	r1, r9, r0, r1
10004566:	fb00 fe0e 	mul.w	lr, r0, lr
1000456a:	ea44 4101 	orr.w	r1, r4, r1, lsl #16
1000456e:	458e      	cmp	lr, r1
10004570:	d907      	bls.n	10004582 <__udivmoddi4+0x1de>
10004572:	eb1c 0101 	adds.w	r1, ip, r1
10004576:	f100 34ff 	add.w	r4, r0, #4294967295
1000457a:	d201      	bcs.n	10004580 <__udivmoddi4+0x1dc>
1000457c:	458e      	cmp	lr, r1
1000457e:	d87f      	bhi.n	10004680 <__udivmoddi4+0x2dc>
10004580:	4620      	mov	r0, r4
10004582:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
10004586:	eba1 010e 	sub.w	r1, r1, lr
1000458a:	fba0 9802 	umull	r9, r8, r0, r2
1000458e:	4541      	cmp	r1, r8
10004590:	464c      	mov	r4, r9
10004592:	46c6      	mov	lr, r8
10004594:	d302      	bcc.n	1000459c <__udivmoddi4+0x1f8>
10004596:	d106      	bne.n	100045a6 <__udivmoddi4+0x202>
10004598:	454b      	cmp	r3, r9
1000459a:	d204      	bcs.n	100045a6 <__udivmoddi4+0x202>
1000459c:	3801      	subs	r0, #1
1000459e:	ebb9 0402 	subs.w	r4, r9, r2
100045a2:	eb68 0e0c 	sbc.w	lr, r8, ip
100045a6:	2d00      	cmp	r5, #0
100045a8:	d070      	beq.n	1000468c <__udivmoddi4+0x2e8>
100045aa:	1b1a      	subs	r2, r3, r4
100045ac:	eb61 010e 	sbc.w	r1, r1, lr
100045b0:	fa22 f306 	lsr.w	r3, r2, r6
100045b4:	fa01 f707 	lsl.w	r7, r1, r7
100045b8:	40f1      	lsrs	r1, r6
100045ba:	2600      	movs	r6, #0
100045bc:	431f      	orrs	r7, r3
100045be:	e9c5 7100 	strd	r7, r1, [r5]
100045c2:	e73c      	b.n	1000443e <__udivmoddi4+0x9a>
100045c4:	fa02 fc03 	lsl.w	ip, r2, r3
100045c8:	f1c3 0020 	rsb	r0, r3, #32
100045cc:	fa01 f203 	lsl.w	r2, r1, r3
100045d0:	fa21 f600 	lsr.w	r6, r1, r0
100045d4:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
100045d8:	fa24 f100 	lsr.w	r1, r4, r0
100045dc:	fa1f f78c 	uxth.w	r7, ip
100045e0:	409c      	lsls	r4, r3
100045e2:	4311      	orrs	r1, r2
100045e4:	fbb6 f0fe 	udiv	r0, r6, lr
100045e8:	0c0a      	lsrs	r2, r1, #16
100045ea:	fb0e 6610 	mls	r6, lr, r0, r6
100045ee:	ea42 4206 	orr.w	r2, r2, r6, lsl #16
100045f2:	fb00 f607 	mul.w	r6, r0, r7
100045f6:	4296      	cmp	r6, r2
100045f8:	d90e      	bls.n	10004618 <__udivmoddi4+0x274>
100045fa:	eb1c 0202 	adds.w	r2, ip, r2
100045fe:	f100 38ff 	add.w	r8, r0, #4294967295
10004602:	bf2c      	ite	cs
10004604:	f04f 0901 	movcs.w	r9, #1
10004608:	f04f 0900 	movcc.w	r9, #0
1000460c:	4296      	cmp	r6, r2
1000460e:	d902      	bls.n	10004616 <__udivmoddi4+0x272>
10004610:	f1b9 0f00 	cmp.w	r9, #0
10004614:	d031      	beq.n	1000467a <__udivmoddi4+0x2d6>
10004616:	4640      	mov	r0, r8
10004618:	1b92      	subs	r2, r2, r6
1000461a:	b289      	uxth	r1, r1
1000461c:	fbb2 f6fe 	udiv	r6, r2, lr
10004620:	fb0e 2216 	mls	r2, lr, r6, r2
10004624:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
10004628:	fb06 f207 	mul.w	r2, r6, r7
1000462c:	428a      	cmp	r2, r1
1000462e:	d907      	bls.n	10004640 <__udivmoddi4+0x29c>
10004630:	eb1c 0101 	adds.w	r1, ip, r1
10004634:	f106 38ff 	add.w	r8, r6, #4294967295
10004638:	d201      	bcs.n	1000463e <__udivmoddi4+0x29a>
1000463a:	428a      	cmp	r2, r1
1000463c:	d823      	bhi.n	10004686 <__udivmoddi4+0x2e2>
1000463e:	4646      	mov	r6, r8
10004640:	1a89      	subs	r1, r1, r2
10004642:	ea46 4600 	orr.w	r6, r6, r0, lsl #16
10004646:	e725      	b.n	10004494 <__udivmoddi4+0xf0>
10004648:	462e      	mov	r6, r5
1000464a:	4628      	mov	r0, r5
1000464c:	e6f7      	b.n	1000443e <__udivmoddi4+0x9a>
1000464e:	1a84      	subs	r4, r0, r2
10004650:	eb61 0303 	sbc.w	r3, r1, r3
10004654:	2001      	movs	r0, #1
10004656:	461f      	mov	r7, r3
10004658:	e70b      	b.n	10004472 <__udivmoddi4+0xce>
1000465a:	4464      	add	r4, ip
1000465c:	3802      	subs	r0, #2
1000465e:	e749      	b.n	100044f4 <__udivmoddi4+0x150>
10004660:	4464      	add	r4, ip
10004662:	3802      	subs	r0, #2
10004664:	e6e1      	b.n	1000442a <__udivmoddi4+0x86>
10004666:	3a02      	subs	r2, #2
10004668:	4461      	add	r1, ip
1000466a:	e72e      	b.n	100044ca <__udivmoddi4+0x126>
1000466c:	3e02      	subs	r6, #2
1000466e:	4462      	add	r2, ip
10004670:	e6c6      	b.n	10004400 <__udivmoddi4+0x5c>
10004672:	f1a8 0802 	sub.w	r8, r8, #2
10004676:	4461      	add	r1, ip
10004678:	e76f      	b.n	1000455a <__udivmoddi4+0x1b6>
1000467a:	3802      	subs	r0, #2
1000467c:	4462      	add	r2, ip
1000467e:	e7cb      	b.n	10004618 <__udivmoddi4+0x274>
10004680:	3802      	subs	r0, #2
10004682:	4461      	add	r1, ip
10004684:	e77d      	b.n	10004582 <__udivmoddi4+0x1de>
10004686:	3e02      	subs	r6, #2
10004688:	4461      	add	r1, ip
1000468a:	e7d9      	b.n	10004640 <__udivmoddi4+0x29c>
1000468c:	462e      	mov	r6, r5
1000468e:	e6d6      	b.n	1000443e <__udivmoddi4+0x9a>

10004690 <selfrel_offset31>:
10004690:	6803      	ldr	r3, [r0, #0]
10004692:	005a      	lsls	r2, r3, #1
10004694:	bf4c      	ite	mi
10004696:	f043 4300 	orrmi.w	r3, r3, #2147483648	; 0x80000000
1000469a:	f023 4300 	bicpl.w	r3, r3, #2147483648	; 0x80000000
1000469e:	4418      	add	r0, r3
100046a0:	4770      	bx	lr
100046a2:	bf00      	nop

100046a4 <search_EIT_table>:
100046a4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
100046a8:	b339      	cbz	r1, 100046fa <search_EIT_table+0x56>
100046aa:	f101 38ff 	add.w	r8, r1, #4294967295
100046ae:	4606      	mov	r6, r0
100046b0:	4617      	mov	r7, r2
100046b2:	f04f 0900 	mov.w	r9, #0
100046b6:	4645      	mov	r5, r8
100046b8:	eb19 0105 	adds.w	r1, r9, r5
100046bc:	bf48      	it	mi
100046be:	3101      	addmi	r1, #1
100046c0:	1049      	asrs	r1, r1, #1
100046c2:	eb06 0ac1 	add.w	sl, r6, r1, lsl #3
100046c6:	00cc      	lsls	r4, r1, #3
100046c8:	4650      	mov	r0, sl
100046ca:	f7ff ffe1 	bl	10004690 <selfrel_offset31>
100046ce:	3408      	adds	r4, #8
100046d0:	4588      	cmp	r8, r1
100046d2:	4603      	mov	r3, r0
100046d4:	eb06 0004 	add.w	r0, r6, r4
100046d8:	d009      	beq.n	100046ee <search_EIT_table+0x4a>
100046da:	42bb      	cmp	r3, r7
100046dc:	d809      	bhi.n	100046f2 <search_EIT_table+0x4e>
100046de:	f7ff ffd7 	bl	10004690 <selfrel_offset31>
100046e2:	3801      	subs	r0, #1
100046e4:	f101 0901 	add.w	r9, r1, #1
100046e8:	42b8      	cmp	r0, r7
100046ea:	d3e5      	bcc.n	100046b8 <search_EIT_table+0x14>
100046ec:	e007      	b.n	100046fe <search_EIT_table+0x5a>
100046ee:	42bb      	cmp	r3, r7
100046f0:	d905      	bls.n	100046fe <search_EIT_table+0x5a>
100046f2:	4589      	cmp	r9, r1
100046f4:	f101 35ff 	add.w	r5, r1, #4294967295
100046f8:	d1de      	bne.n	100046b8 <search_EIT_table+0x14>
100046fa:	f04f 0a00 	mov.w	sl, #0
100046fe:	4650      	mov	r0, sl
10004700:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

10004704 <__gnu_unwind_get_pr_addr>:
10004704:	2801      	cmp	r0, #1
10004706:	d007      	beq.n	10004718 <__gnu_unwind_get_pr_addr+0x14>
10004708:	2802      	cmp	r0, #2
1000470a:	d007      	beq.n	1000471c <__gnu_unwind_get_pr_addr+0x18>
1000470c:	2800      	cmp	r0, #0
1000470e:	4b04      	ldr	r3, [pc, #16]	; (10004720 <__gnu_unwind_get_pr_addr+0x1c>)
10004710:	bf14      	ite	ne
10004712:	2000      	movne	r0, #0
10004714:	4618      	moveq	r0, r3
10004716:	4770      	bx	lr
10004718:	4802      	ldr	r0, [pc, #8]	; (10004724 <__gnu_unwind_get_pr_addr+0x20>)
1000471a:	4770      	bx	lr
1000471c:	4802      	ldr	r0, [pc, #8]	; (10004728 <__gnu_unwind_get_pr_addr+0x24>)
1000471e:	4770      	bx	lr
10004720:	10004e15 	andne	r4, r0, r5, lsl lr
10004724:	10004e19 	andne	r4, r0, r9, lsl lr
10004728:	10004e1d 	andne	r4, r0, sp, lsl lr

1000472c <get_eit_entry>:
1000472c:	4b23      	ldr	r3, [pc, #140]	; (100047bc <get_eit_entry+0x90>)
1000472e:	b530      	push	{r4, r5, lr}
10004730:	4604      	mov	r4, r0
10004732:	b083      	sub	sp, #12
10004734:	1e8d      	subs	r5, r1, #2
10004736:	b343      	cbz	r3, 1000478a <get_eit_entry+0x5e>
10004738:	a901      	add	r1, sp, #4
1000473a:	4628      	mov	r0, r5
1000473c:	e000      	b.n	10004740 <get_eit_entry+0x14>
1000473e:	bf00      	nop
10004740:	b1f0      	cbz	r0, 10004780 <get_eit_entry+0x54>
10004742:	9901      	ldr	r1, [sp, #4]
10004744:	462a      	mov	r2, r5
10004746:	f7ff ffad 	bl	100046a4 <search_EIT_table>
1000474a:	4601      	mov	r1, r0
1000474c:	b1c0      	cbz	r0, 10004780 <get_eit_entry+0x54>
1000474e:	f7ff ff9f 	bl	10004690 <selfrel_offset31>
10004752:	684b      	ldr	r3, [r1, #4]
10004754:	64a0      	str	r0, [r4, #72]	; 0x48
10004756:	2b01      	cmp	r3, #1
10004758:	d02c      	beq.n	100047b4 <get_eit_entry+0x88>
1000475a:	2b00      	cmp	r3, #0
1000475c:	f101 0004 	add.w	r0, r1, #4
10004760:	db24      	blt.n	100047ac <get_eit_entry+0x80>
10004762:	f7ff ff95 	bl	10004690 <selfrel_offset31>
10004766:	2300      	movs	r3, #0
10004768:	e9c4 0313 	strd	r0, r3, [r4, #76]	; 0x4c
1000476c:	6803      	ldr	r3, [r0, #0]
1000476e:	2b00      	cmp	r3, #0
10004770:	db11      	blt.n	10004796 <get_eit_entry+0x6a>
10004772:	f7ff ff8d 	bl	10004690 <selfrel_offset31>
10004776:	4603      	mov	r3, r0
10004778:	2000      	movs	r0, #0
1000477a:	6123      	str	r3, [r4, #16]
1000477c:	b003      	add	sp, #12
1000477e:	bd30      	pop	{r4, r5, pc}
10004780:	2300      	movs	r3, #0
10004782:	2009      	movs	r0, #9
10004784:	6123      	str	r3, [r4, #16]
10004786:	b003      	add	sp, #12
10004788:	bd30      	pop	{r4, r5, pc}
1000478a:	480d      	ldr	r0, [pc, #52]	; (100047c0 <get_eit_entry+0x94>)
1000478c:	490d      	ldr	r1, [pc, #52]	; (100047c4 <get_eit_entry+0x98>)
1000478e:	1a09      	subs	r1, r1, r0
10004790:	10c9      	asrs	r1, r1, #3
10004792:	9101      	str	r1, [sp, #4]
10004794:	e7d6      	b.n	10004744 <get_eit_entry+0x18>
10004796:	f3c3 6003 	ubfx	r0, r3, #24, #4
1000479a:	f7ff ffb3 	bl	10004704 <__gnu_unwind_get_pr_addr>
1000479e:	2800      	cmp	r0, #0
100047a0:	6120      	str	r0, [r4, #16]
100047a2:	bf14      	ite	ne
100047a4:	2000      	movne	r0, #0
100047a6:	2009      	moveq	r0, #9
100047a8:	b003      	add	sp, #12
100047aa:	bd30      	pop	{r4, r5, pc}
100047ac:	2301      	movs	r3, #1
100047ae:	e9c4 0313 	strd	r0, r3, [r4, #76]	; 0x4c
100047b2:	e7db      	b.n	1000476c <get_eit_entry+0x40>
100047b4:	2300      	movs	r3, #0
100047b6:	2005      	movs	r0, #5
100047b8:	6123      	str	r3, [r4, #16]
100047ba:	e7df      	b.n	1000477c <get_eit_entry+0x50>
100047bc:	00000000 	andeq	r0, r0, r0
100047c0:	10005bc8 	andne	r5, r0, r8, asr #23
100047c4:	10005c88 	andne	r5, r0, r8, lsl #25

100047c8 <restore_non_core_regs>:
100047c8:	6803      	ldr	r3, [r0, #0]
100047ca:	07da      	lsls	r2, r3, #31
100047cc:	b510      	push	{r4, lr}
100047ce:	4604      	mov	r4, r0
100047d0:	d406      	bmi.n	100047e0 <restore_non_core_regs+0x18>
100047d2:	079b      	lsls	r3, r3, #30
100047d4:	f100 0048 	add.w	r0, r0, #72	; 0x48
100047d8:	d509      	bpl.n	100047ee <restore_non_core_regs+0x26>
100047da:	f000 fc8f 	bl	100050fc <__gnu_Unwind_Restore_VFP_D>
100047de:	6823      	ldr	r3, [r4, #0]
100047e0:	0759      	lsls	r1, r3, #29
100047e2:	d509      	bpl.n	100047f8 <restore_non_core_regs+0x30>
100047e4:	071a      	lsls	r2, r3, #28
100047e6:	d50e      	bpl.n	10004806 <restore_non_core_regs+0x3e>
100047e8:	06db      	lsls	r3, r3, #27
100047ea:	d513      	bpl.n	10004814 <restore_non_core_regs+0x4c>
100047ec:	bd10      	pop	{r4, pc}
100047ee:	f000 fc7d 	bl	100050ec <__gnu_Unwind_Restore_VFP>
100047f2:	6823      	ldr	r3, [r4, #0]
100047f4:	0759      	lsls	r1, r3, #29
100047f6:	d4f5      	bmi.n	100047e4 <restore_non_core_regs+0x1c>
100047f8:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
100047fc:	f000 fc86 	bl	1000510c <__gnu_Unwind_Restore_VFP_D_16_to_31>
10004800:	6823      	ldr	r3, [r4, #0]
10004802:	071a      	lsls	r2, r3, #28
10004804:	d4f0      	bmi.n	100047e8 <restore_non_core_regs+0x20>
10004806:	f504 70a8 	add.w	r0, r4, #336	; 0x150
1000480a:	f000 fc87 	bl	1000511c <__gnu_Unwind_Restore_WMMXD>
1000480e:	6823      	ldr	r3, [r4, #0]
10004810:	06db      	lsls	r3, r3, #27
10004812:	d4eb      	bmi.n	100047ec <restore_non_core_regs+0x24>
10004814:	f504 70e8 	add.w	r0, r4, #464	; 0x1d0
10004818:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
1000481c:	f000 bcc2 	b.w	100051a4 <__gnu_Unwind_Restore_WMMXC>

10004820 <__gnu_unwind_24bit.constprop.0>:
10004820:	2009      	movs	r0, #9
10004822:	4770      	bx	lr

10004824 <_Unwind_decode_typeinfo_ptr.constprop.0>:
10004824:	4603      	mov	r3, r0
10004826:	6800      	ldr	r0, [r0, #0]
10004828:	b100      	cbz	r0, 1000482c <_Unwind_decode_typeinfo_ptr.constprop.0+0x8>
1000482a:	4418      	add	r0, r3
1000482c:	4770      	bx	lr
1000482e:	bf00      	nop

10004830 <_Unwind_DebugHook>:
10004830:	4770      	bx	lr
10004832:	bf00      	nop

10004834 <unwind_phase2>:
10004834:	b570      	push	{r4, r5, r6, lr}
10004836:	4604      	mov	r4, r0
10004838:	460e      	mov	r6, r1
1000483a:	6c31      	ldr	r1, [r6, #64]	; 0x40
1000483c:	4620      	mov	r0, r4
1000483e:	f7ff ff75 	bl	1000472c <get_eit_entry>
10004842:	4605      	mov	r5, r0
10004844:	b998      	cbnz	r0, 1000486e <unwind_phase2+0x3a>
10004846:	f8d6 c040 	ldr.w	ip, [r6, #64]	; 0x40
1000484a:	4632      	mov	r2, r6
1000484c:	6923      	ldr	r3, [r4, #16]
1000484e:	4621      	mov	r1, r4
10004850:	2001      	movs	r0, #1
10004852:	f8c4 c014 	str.w	ip, [r4, #20]
10004856:	4798      	blx	r3
10004858:	2808      	cmp	r0, #8
1000485a:	d0ee      	beq.n	1000483a <unwind_phase2+0x6>
1000485c:	2807      	cmp	r0, #7
1000485e:	d106      	bne.n	1000486e <unwind_phase2+0x3a>
10004860:	4628      	mov	r0, r5
10004862:	6c31      	ldr	r1, [r6, #64]	; 0x40
10004864:	f7ff ffe4 	bl	10004830 <_Unwind_DebugHook>
10004868:	1d30      	adds	r0, r6, #4
1000486a:	f000 fc33 	bl	100050d4 <__restore_core_regs>
1000486e:	f000 fec3 	bl	100055f8 <abort>
10004872:	bf00      	nop

10004874 <unwind_phase2_forced>:
10004874:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
10004878:	f101 0c04 	add.w	ip, r1, #4
1000487c:	f5ad 7d74 	sub.w	sp, sp, #976	; 0x3d0
10004880:	68c7      	ldr	r7, [r0, #12]
10004882:	4606      	mov	r6, r0
10004884:	f8d0 8018 	ldr.w	r8, [r0, #24]
10004888:	4614      	mov	r4, r2
1000488a:	f10d 0e14 	add.w	lr, sp, #20
1000488e:	ad04      	add	r5, sp, #16
10004890:	f04f 0900 	mov.w	r9, #0
10004894:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
10004898:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
1000489c:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
100048a0:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
100048a4:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
100048a8:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
100048ac:	e89c 000f 	ldmia.w	ip, {r0, r1, r2, r3}
100048b0:	e88e 000f 	stmia.w	lr, {r0, r1, r2, r3}
100048b4:	f8c5 9000 	str.w	r9, [r5]
100048b8:	e023      	b.n	10004902 <unwind_phase2_forced+0x8e>
100048ba:	6c2b      	ldr	r3, [r5, #64]	; 0x40
100048bc:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
100048c0:	4629      	mov	r1, r5
100048c2:	a87c      	add	r0, sp, #496	; 0x1f0
100048c4:	6173      	str	r3, [r6, #20]
100048c6:	f7fe ff7d 	bl	100037c4 <memcpy>
100048ca:	aa7c      	add	r2, sp, #496	; 0x1f0
100048cc:	4631      	mov	r1, r6
100048ce:	6933      	ldr	r3, [r6, #16]
100048d0:	4650      	mov	r0, sl
100048d2:	4798      	blx	r3
100048d4:	9b8a      	ldr	r3, [sp, #552]	; 0x228
100048d6:	4621      	mov	r1, r4
100048d8:	4681      	mov	r9, r0
100048da:	9303      	str	r3, [sp, #12]
100048dc:	4632      	mov	r2, r6
100048de:	9c03      	ldr	r4, [sp, #12]
100048e0:	4633      	mov	r3, r6
100048e2:	2001      	movs	r0, #1
100048e4:	646c      	str	r4, [r5, #68]	; 0x44
100048e6:	e9cd 5800 	strd	r5, r8, [sp]
100048ea:	47b8      	blx	r7
100048ec:	4604      	mov	r4, r0
100048ee:	b9e8      	cbnz	r0, 1000492c <unwind_phase2_forced+0xb8>
100048f0:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
100048f4:	a97c      	add	r1, sp, #496	; 0x1f0
100048f6:	4628      	mov	r0, r5
100048f8:	f7fe ff64 	bl	100037c4 <memcpy>
100048fc:	f1b9 0f08 	cmp.w	r9, #8
10004900:	d11b      	bne.n	1000493a <unwind_phase2_forced+0xc6>
10004902:	3409      	adds	r4, #9
10004904:	6c29      	ldr	r1, [r5, #64]	; 0x40
10004906:	4630      	mov	r0, r6
10004908:	f7ff ff10 	bl	1000472c <get_eit_entry>
1000490c:	4681      	mov	r9, r0
1000490e:	fa5f fa84 	uxtb.w	sl, r4
10004912:	2800      	cmp	r0, #0
10004914:	d0d1      	beq.n	100048ba <unwind_phase2_forced+0x46>
10004916:	6bac      	ldr	r4, [r5, #56]	; 0x38
10004918:	4633      	mov	r3, r6
1000491a:	4632      	mov	r2, r6
1000491c:	f04a 0110 	orr.w	r1, sl, #16
10004920:	646c      	str	r4, [r5, #68]	; 0x44
10004922:	2001      	movs	r0, #1
10004924:	e9cd 5800 	strd	r5, r8, [sp]
10004928:	47b8      	blx	r7
1000492a:	b108      	cbz	r0, 10004930 <unwind_phase2_forced+0xbc>
1000492c:	f04f 0909 	mov.w	r9, #9
10004930:	4648      	mov	r0, r9
10004932:	f50d 7d74 	add.w	sp, sp, #976	; 0x3d0
10004936:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
1000493a:	f1b9 0f07 	cmp.w	r9, #7
1000493e:	d1f5      	bne.n	1000492c <unwind_phase2_forced+0xb8>
10004940:	4620      	mov	r0, r4
10004942:	6c29      	ldr	r1, [r5, #64]	; 0x40
10004944:	f7ff ff74 	bl	10004830 <_Unwind_DebugHook>
10004948:	a805      	add	r0, sp, #20
1000494a:	f000 fbc3 	bl	100050d4 <__restore_core_regs>
1000494e:	bf00      	nop

10004950 <_Unwind_GetCFA>:
10004950:	6c40      	ldr	r0, [r0, #68]	; 0x44
10004952:	4770      	bx	lr

10004954 <__gnu_Unwind_RaiseException>:
10004954:	b5f0      	push	{r4, r5, r6, r7, lr}
10004956:	6bcb      	ldr	r3, [r1, #60]	; 0x3c
10004958:	b0f9      	sub	sp, #484	; 0x1e4
1000495a:	f101 0c04 	add.w	ip, r1, #4
1000495e:	460e      	mov	r6, r1
10004960:	640b      	str	r3, [r1, #64]	; 0x40
10004962:	ac01      	add	r4, sp, #4
10004964:	4605      	mov	r5, r0
10004966:	f04f 37ff 	mov.w	r7, #4294967295
1000496a:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
1000496e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
10004970:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
10004974:	c40f      	stmia	r4!, {r0, r1, r2, r3}
10004976:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
1000497a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
1000497c:	e89c 000f 	ldmia.w	ip, {r0, r1, r2, r3}
10004980:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
10004984:	9700      	str	r7, [sp, #0]
10004986:	e006      	b.n	10004996 <__gnu_Unwind_RaiseException+0x42>
10004988:	692b      	ldr	r3, [r5, #16]
1000498a:	466a      	mov	r2, sp
1000498c:	4629      	mov	r1, r5
1000498e:	4798      	blx	r3
10004990:	2808      	cmp	r0, #8
10004992:	4604      	mov	r4, r0
10004994:	d108      	bne.n	100049a8 <__gnu_Unwind_RaiseException+0x54>
10004996:	9910      	ldr	r1, [sp, #64]	; 0x40
10004998:	4628      	mov	r0, r5
1000499a:	f7ff fec7 	bl	1000472c <get_eit_entry>
1000499e:	2800      	cmp	r0, #0
100049a0:	d0f2      	beq.n	10004988 <__gnu_Unwind_RaiseException+0x34>
100049a2:	2009      	movs	r0, #9
100049a4:	b079      	add	sp, #484	; 0x1e4
100049a6:	bdf0      	pop	{r4, r5, r6, r7, pc}
100049a8:	4668      	mov	r0, sp
100049aa:	f7ff ff0d 	bl	100047c8 <restore_non_core_regs>
100049ae:	2c06      	cmp	r4, #6
100049b0:	d1f7      	bne.n	100049a2 <__gnu_Unwind_RaiseException+0x4e>
100049b2:	4631      	mov	r1, r6
100049b4:	4628      	mov	r0, r5
100049b6:	f7ff ff3d 	bl	10004834 <unwind_phase2>
100049ba:	bf00      	nop

100049bc <__gnu_Unwind_ForcedUnwind>:
100049bc:	b410      	push	{r4}
100049be:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
100049c0:	60c1      	str	r1, [r0, #12]
100049c2:	4619      	mov	r1, r3
100049c4:	6182      	str	r2, [r0, #24]
100049c6:	2200      	movs	r2, #0
100049c8:	641c      	str	r4, [r3, #64]	; 0x40
100049ca:	bc10      	pop	{r4}
100049cc:	e752      	b.n	10004874 <unwind_phase2_forced>
100049ce:	bf00      	nop

100049d0 <__gnu_Unwind_Resume>:
100049d0:	b570      	push	{r4, r5, r6, lr}
100049d2:	6943      	ldr	r3, [r0, #20]
100049d4:	68c6      	ldr	r6, [r0, #12]
100049d6:	640b      	str	r3, [r1, #64]	; 0x40
100049d8:	b9ae      	cbnz	r6, 10004a06 <__gnu_Unwind_Resume+0x36>
100049da:	6903      	ldr	r3, [r0, #16]
100049dc:	460a      	mov	r2, r1
100049de:	4604      	mov	r4, r0
100049e0:	460d      	mov	r5, r1
100049e2:	4601      	mov	r1, r0
100049e4:	2002      	movs	r0, #2
100049e6:	4798      	blx	r3
100049e8:	2807      	cmp	r0, #7
100049ea:	d005      	beq.n	100049f8 <__gnu_Unwind_Resume+0x28>
100049ec:	2808      	cmp	r0, #8
100049ee:	d10f      	bne.n	10004a10 <__gnu_Unwind_Resume+0x40>
100049f0:	4629      	mov	r1, r5
100049f2:	4620      	mov	r0, r4
100049f4:	f7ff ff1e 	bl	10004834 <unwind_phase2>
100049f8:	4630      	mov	r0, r6
100049fa:	6c29      	ldr	r1, [r5, #64]	; 0x40
100049fc:	f7ff ff18 	bl	10004830 <_Unwind_DebugHook>
10004a00:	1d28      	adds	r0, r5, #4
10004a02:	f000 fb67 	bl	100050d4 <__restore_core_regs>
10004a06:	2201      	movs	r2, #1
10004a08:	f7ff ff34 	bl	10004874 <unwind_phase2_forced>
10004a0c:	f000 fdf4 	bl	100055f8 <abort>
10004a10:	f000 fdf2 	bl	100055f8 <abort>

10004a14 <__gnu_Unwind_Resume_or_Rethrow>:
10004a14:	68c2      	ldr	r2, [r0, #12]
10004a16:	b12a      	cbz	r2, 10004a24 <__gnu_Unwind_Resume_or_Rethrow+0x10>
10004a18:	f8d1 c03c 	ldr.w	ip, [r1, #60]	; 0x3c
10004a1c:	2200      	movs	r2, #0
10004a1e:	f8c1 c040 	str.w	ip, [r1, #64]	; 0x40
10004a22:	e727      	b.n	10004874 <unwind_phase2_forced>
10004a24:	e796      	b.n	10004954 <__gnu_Unwind_RaiseException>
10004a26:	bf00      	nop

10004a28 <_Unwind_Complete>:
10004a28:	4770      	bx	lr
10004a2a:	bf00      	nop

10004a2c <_Unwind_DeleteException>:
10004a2c:	6883      	ldr	r3, [r0, #8]
10004a2e:	4601      	mov	r1, r0
10004a30:	b10b      	cbz	r3, 10004a36 <_Unwind_DeleteException+0xa>
10004a32:	2001      	movs	r0, #1
10004a34:	4718      	bx	r3
10004a36:	4770      	bx	lr

10004a38 <_Unwind_VRS_Get>:
10004a38:	2901      	cmp	r1, #1
10004a3a:	d015      	beq.n	10004a68 <_Unwind_VRS_Get+0x30>
10004a3c:	d80c      	bhi.n	10004a58 <_Unwind_VRS_Get+0x20>
10004a3e:	b98b      	cbnz	r3, 10004a64 <_Unwind_VRS_Get+0x2c>
10004a40:	2a0f      	cmp	r2, #15
10004a42:	bf94      	ite	ls
10004a44:	2100      	movls	r1, #0
10004a46:	2101      	movhi	r1, #1
10004a48:	b961      	cbnz	r1, 10004a64 <_Unwind_VRS_Get+0x2c>
10004a4a:	eb00 0282 	add.w	r2, r0, r2, lsl #2
10004a4e:	4608      	mov	r0, r1
10004a50:	6853      	ldr	r3, [r2, #4]
10004a52:	9a00      	ldr	r2, [sp, #0]
10004a54:	6013      	str	r3, [r2, #0]
10004a56:	4770      	bx	lr
10004a58:	3903      	subs	r1, #3
10004a5a:	2901      	cmp	r1, #1
10004a5c:	bf94      	ite	ls
10004a5e:	2001      	movls	r0, #1
10004a60:	2002      	movhi	r0, #2
10004a62:	4770      	bx	lr
10004a64:	2002      	movs	r0, #2
10004a66:	4770      	bx	lr
10004a68:	4608      	mov	r0, r1
10004a6a:	4770      	bx	lr

10004a6c <_Unwind_GetGR>:
10004a6c:	b510      	push	{r4, lr}
10004a6e:	b084      	sub	sp, #16
10004a70:	2300      	movs	r3, #0
10004a72:	460a      	mov	r2, r1
10004a74:	ac03      	add	r4, sp, #12
10004a76:	4619      	mov	r1, r3
10004a78:	9400      	str	r4, [sp, #0]
10004a7a:	f7ff ffdd 	bl	10004a38 <_Unwind_VRS_Get>
10004a7e:	9803      	ldr	r0, [sp, #12]
10004a80:	b004      	add	sp, #16
10004a82:	bd10      	pop	{r4, pc}

10004a84 <_Unwind_VRS_Set>:
10004a84:	2901      	cmp	r1, #1
10004a86:	d015      	beq.n	10004ab4 <_Unwind_VRS_Set+0x30>
10004a88:	d80c      	bhi.n	10004aa4 <_Unwind_VRS_Set+0x20>
10004a8a:	b98b      	cbnz	r3, 10004ab0 <_Unwind_VRS_Set+0x2c>
10004a8c:	2a0f      	cmp	r2, #15
10004a8e:	bf94      	ite	ls
10004a90:	2100      	movls	r1, #0
10004a92:	2101      	movhi	r1, #1
10004a94:	b961      	cbnz	r1, 10004ab0 <_Unwind_VRS_Set+0x2c>
10004a96:	9b00      	ldr	r3, [sp, #0]
10004a98:	eb00 0282 	add.w	r2, r0, r2, lsl #2
10004a9c:	4608      	mov	r0, r1
10004a9e:	681b      	ldr	r3, [r3, #0]
10004aa0:	6053      	str	r3, [r2, #4]
10004aa2:	4770      	bx	lr
10004aa4:	3903      	subs	r1, #3
10004aa6:	2901      	cmp	r1, #1
10004aa8:	bf94      	ite	ls
10004aaa:	2001      	movls	r0, #1
10004aac:	2002      	movhi	r0, #2
10004aae:	4770      	bx	lr
10004ab0:	2002      	movs	r0, #2
10004ab2:	4770      	bx	lr
10004ab4:	4608      	mov	r0, r1
10004ab6:	4770      	bx	lr

10004ab8 <_Unwind_SetGR>:
10004ab8:	b510      	push	{r4, lr}
10004aba:	b084      	sub	sp, #16
10004abc:	2300      	movs	r3, #0
10004abe:	ac03      	add	r4, sp, #12
10004ac0:	9203      	str	r2, [sp, #12]
10004ac2:	460a      	mov	r2, r1
10004ac4:	4619      	mov	r1, r3
10004ac6:	9400      	str	r4, [sp, #0]
10004ac8:	f7ff ffdc 	bl	10004a84 <_Unwind_VRS_Set>
10004acc:	b004      	add	sp, #16
10004ace:	bd10      	pop	{r4, pc}

10004ad0 <__gnu_Unwind_Backtrace>:
10004ad0:	b5f0      	push	{r4, r5, r6, r7, lr}
10004ad2:	6bd3      	ldr	r3, [r2, #60]	; 0x3c
10004ad4:	f5ad 7d0f 	sub.w	sp, sp, #572	; 0x23c
10004ad8:	1d14      	adds	r4, r2, #4
10004ada:	4606      	mov	r6, r0
10004adc:	6413      	str	r3, [r2, #64]	; 0x40
10004ade:	f10d 0c5c 	add.w	ip, sp, #92	; 0x5c
10004ae2:	460d      	mov	r5, r1
10004ae4:	f04f 37ff 	mov.w	r7, #4294967295
10004ae8:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
10004aea:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
10004aee:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
10004af0:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
10004af4:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
10004af6:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
10004afa:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
10004afe:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}
10004b02:	9716      	str	r7, [sp, #88]	; 0x58
10004b04:	e010      	b.n	10004b28 <__gnu_Unwind_Backtrace+0x58>
10004b06:	f7ff ffd7 	bl	10004ab8 <_Unwind_SetGR>
10004b0a:	4629      	mov	r1, r5
10004b0c:	a816      	add	r0, sp, #88	; 0x58
10004b0e:	47b0      	blx	r6
10004b10:	4603      	mov	r3, r0
10004b12:	aa16      	add	r2, sp, #88	; 0x58
10004b14:	4669      	mov	r1, sp
10004b16:	2008      	movs	r0, #8
10004b18:	b983      	cbnz	r3, 10004b3c <__gnu_Unwind_Backtrace+0x6c>
10004b1a:	9b04      	ldr	r3, [sp, #16]
10004b1c:	4798      	blx	r3
10004b1e:	2805      	cmp	r0, #5
10004b20:	4604      	mov	r4, r0
10004b22:	d00c      	beq.n	10004b3e <__gnu_Unwind_Backtrace+0x6e>
10004b24:	2809      	cmp	r0, #9
10004b26:	d00a      	beq.n	10004b3e <__gnu_Unwind_Backtrace+0x6e>
10004b28:	9926      	ldr	r1, [sp, #152]	; 0x98
10004b2a:	4668      	mov	r0, sp
10004b2c:	f7ff fdfe 	bl	1000472c <get_eit_entry>
10004b30:	4603      	mov	r3, r0
10004b32:	466a      	mov	r2, sp
10004b34:	210c      	movs	r1, #12
10004b36:	a816      	add	r0, sp, #88	; 0x58
10004b38:	2b00      	cmp	r3, #0
10004b3a:	d0e4      	beq.n	10004b06 <__gnu_Unwind_Backtrace+0x36>
10004b3c:	2409      	movs	r4, #9
10004b3e:	a816      	add	r0, sp, #88	; 0x58
10004b40:	f7ff fe42 	bl	100047c8 <restore_non_core_regs>
10004b44:	4620      	mov	r0, r4
10004b46:	f50d 7d0f 	add.w	sp, sp, #572	; 0x23c
10004b4a:	bdf0      	pop	{r4, r5, r6, r7, pc}

10004b4c <__gnu_unwind_pr_common>:
10004b4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10004b50:	6ccc      	ldr	r4, [r1, #76]	; 0x4c
10004b52:	b089      	sub	sp, #36	; 0x24
10004b54:	461e      	mov	r6, r3
10004b56:	460d      	mov	r5, r1
10004b58:	f854 3b04 	ldr.w	r3, [r4], #4
10004b5c:	4617      	mov	r7, r2
10004b5e:	f000 0803 	and.w	r8, r0, #3
10004b62:	9406      	str	r4, [sp, #24]
10004b64:	2e00      	cmp	r6, #0
10004b66:	d07f      	beq.n	10004c68 <__gnu_unwind_pr_common+0x11c>
10004b68:	0c1a      	lsrs	r2, r3, #16
10004b6a:	041b      	lsls	r3, r3, #16
10004b6c:	f88d 201d 	strb.w	r2, [sp, #29]
10004b70:	b2d2      	uxtb	r2, r2
10004b72:	9305      	str	r3, [sp, #20]
10004b74:	2302      	movs	r3, #2
10004b76:	eb04 0482 	add.w	r4, r4, r2, lsl #2
10004b7a:	f88d 301c 	strb.w	r3, [sp, #28]
10004b7e:	f1b8 0f02 	cmp.w	r8, #2
10004b82:	6d2b      	ldr	r3, [r5, #80]	; 0x50
10004b84:	bf08      	it	eq
10004b86:	6bac      	ldreq	r4, [r5, #56]	; 0x38
10004b88:	f013 0301 	ands.w	r3, r3, #1
10004b8c:	d008      	beq.n	10004ba0 <__gnu_unwind_pr_common+0x54>
10004b8e:	a905      	add	r1, sp, #20
10004b90:	4638      	mov	r0, r7
10004b92:	f000 fba1 	bl	100052d8 <__gnu_unwind_execute>
10004b96:	bb90      	cbnz	r0, 10004bfe <__gnu_unwind_pr_common+0xb2>
10004b98:	2008      	movs	r0, #8
10004b9a:	b009      	add	sp, #36	; 0x24
10004b9c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10004ba0:	f8d4 a000 	ldr.w	sl, [r4]
10004ba4:	f1ba 0f00 	cmp.w	sl, #0
10004ba8:	d0f1      	beq.n	10004b8e <__gnu_unwind_pr_common+0x42>
10004baa:	9301      	str	r3, [sp, #4]
10004bac:	f000 0308 	and.w	r3, r0, #8
10004bb0:	9302      	str	r3, [sp, #8]
10004bb2:	2e02      	cmp	r6, #2
10004bb4:	d054      	beq.n	10004c60 <__gnu_unwind_pr_common+0x114>
10004bb6:	f8b4 a000 	ldrh.w	sl, [r4]
10004bba:	3404      	adds	r4, #4
10004bbc:	f834 9c02 	ldrh.w	r9, [r4, #-2]
10004bc0:	6cab      	ldr	r3, [r5, #72]	; 0x48
10004bc2:	f029 0b01 	bic.w	fp, r9, #1
10004bc6:	210f      	movs	r1, #15
10004bc8:	4638      	mov	r0, r7
10004bca:	449b      	add	fp, r3
10004bcc:	f7ff ff4e 	bl	10004a6c <_Unwind_GetGR>
10004bd0:	4583      	cmp	fp, r0
10004bd2:	d818      	bhi.n	10004c06 <__gnu_unwind_pr_common+0xba>
10004bd4:	f02a 0301 	bic.w	r3, sl, #1
10004bd8:	449b      	add	fp, r3
10004bda:	4583      	cmp	fp, r0
10004bdc:	d913      	bls.n	10004c06 <__gnu_unwind_pr_common+0xba>
10004bde:	ea4f 0349 	mov.w	r3, r9, lsl #1
10004be2:	f00a 0a01 	and.w	sl, sl, #1
10004be6:	f003 0302 	and.w	r3, r3, #2
10004bea:	ea43 030a 	orr.w	r3, r3, sl
10004bee:	2b01      	cmp	r3, #1
10004bf0:	f000 80bf 	beq.w	10004d72 <__gnu_unwind_pr_common+0x226>
10004bf4:	2b02      	cmp	r3, #2
10004bf6:	f000 8089 	beq.w	10004d0c <__gnu_unwind_pr_common+0x1c0>
10004bfa:	2b00      	cmp	r3, #0
10004bfc:	d04d      	beq.n	10004c9a <__gnu_unwind_pr_common+0x14e>
10004bfe:	2009      	movs	r0, #9
10004c00:	b009      	add	sp, #36	; 0x24
10004c02:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10004c06:	ea4f 0349 	mov.w	r3, r9, lsl #1
10004c0a:	f00a 0a01 	and.w	sl, sl, #1
10004c0e:	f003 0302 	and.w	r3, r3, #2
10004c12:	ea43 030a 	orr.w	r3, r3, sl
10004c16:	2b01      	cmp	r3, #1
10004c18:	d03a      	beq.n	10004c90 <__gnu_unwind_pr_common+0x144>
10004c1a:	2b02      	cmp	r3, #2
10004c1c:	d02a      	beq.n	10004c74 <__gnu_unwind_pr_common+0x128>
10004c1e:	2b00      	cmp	r3, #0
10004c20:	d1ed      	bne.n	10004bfe <__gnu_unwind_pr_common+0xb2>
10004c22:	3404      	adds	r4, #4
10004c24:	f8d4 a000 	ldr.w	sl, [r4]
10004c28:	f1ba 0f00 	cmp.w	sl, #0
10004c2c:	d1c1      	bne.n	10004bb2 <__gnu_unwind_pr_common+0x66>
10004c2e:	a905      	add	r1, sp, #20
10004c30:	4638      	mov	r0, r7
10004c32:	f000 fb51 	bl	100052d8 <__gnu_unwind_execute>
10004c36:	2800      	cmp	r0, #0
10004c38:	d1e1      	bne.n	10004bfe <__gnu_unwind_pr_common+0xb2>
10004c3a:	9b01      	ldr	r3, [sp, #4]
10004c3c:	2b00      	cmp	r3, #0
10004c3e:	d0ab      	beq.n	10004b98 <__gnu_unwind_pr_common+0x4c>
10004c40:	210f      	movs	r1, #15
10004c42:	4638      	mov	r0, r7
10004c44:	f7ff ff12 	bl	10004a6c <_Unwind_GetGR>
10004c48:	210e      	movs	r1, #14
10004c4a:	4602      	mov	r2, r0
10004c4c:	4638      	mov	r0, r7
10004c4e:	f7ff ff33 	bl	10004ab8 <_Unwind_SetGR>
10004c52:	4638      	mov	r0, r7
10004c54:	4a6e      	ldr	r2, [pc, #440]	; (10004e10 <__gnu_unwind_pr_common+0x2c4>)
10004c56:	210f      	movs	r1, #15
10004c58:	f7ff ff2e 	bl	10004ab8 <_Unwind_SetGR>
10004c5c:	2007      	movs	r0, #7
10004c5e:	e7cf      	b.n	10004c00 <__gnu_unwind_pr_common+0xb4>
10004c60:	f8d4 9004 	ldr.w	r9, [r4, #4]
10004c64:	3408      	adds	r4, #8
10004c66:	e7ab      	b.n	10004bc0 <__gnu_unwind_pr_common+0x74>
10004c68:	021b      	lsls	r3, r3, #8
10004c6a:	9305      	str	r3, [sp, #20]
10004c6c:	2303      	movs	r3, #3
10004c6e:	f8ad 301c 	strh.w	r3, [sp, #28]
10004c72:	e784      	b.n	10004b7e <__gnu_unwind_pr_common+0x32>
10004c74:	6823      	ldr	r3, [r4, #0]
10004c76:	f023 4b00 	bic.w	fp, r3, #2147483648	; 0x80000000
10004c7a:	f1b8 0f00 	cmp.w	r8, #0
10004c7e:	d121      	bne.n	10004cc4 <__gnu_unwind_pr_common+0x178>
10004c80:	2b00      	cmp	r3, #0
10004c82:	da00      	bge.n	10004c86 <__gnu_unwind_pr_common+0x13a>
10004c84:	3404      	adds	r4, #4
10004c86:	f10b 0b01 	add.w	fp, fp, #1
10004c8a:	eb04 048b 	add.w	r4, r4, fp, lsl #2
10004c8e:	e7c9      	b.n	10004c24 <__gnu_unwind_pr_common+0xd8>
10004c90:	f1b8 0f00 	cmp.w	r8, #0
10004c94:	d120      	bne.n	10004cd8 <__gnu_unwind_pr_common+0x18c>
10004c96:	3408      	adds	r4, #8
10004c98:	e7c4      	b.n	10004c24 <__gnu_unwind_pr_common+0xd8>
10004c9a:	f1b8 0f00 	cmp.w	r8, #0
10004c9e:	d0c0      	beq.n	10004c22 <__gnu_unwind_pr_common+0xd6>
10004ca0:	4620      	mov	r0, r4
10004ca2:	3404      	adds	r4, #4
10004ca4:	f7ff fcf4 	bl	10004690 <selfrel_offset31>
10004ca8:	4606      	mov	r6, r0
10004caa:	63ac      	str	r4, [r5, #56]	; 0x38
10004cac:	4628      	mov	r0, r5
10004cae:	e000      	b.n	10004cb2 <__gnu_unwind_pr_common+0x166>
10004cb0:	bf00      	nop
10004cb2:	2800      	cmp	r0, #0
10004cb4:	d0a3      	beq.n	10004bfe <__gnu_unwind_pr_common+0xb2>
10004cb6:	4638      	mov	r0, r7
10004cb8:	4632      	mov	r2, r6
10004cba:	210f      	movs	r1, #15
10004cbc:	f7ff fefc 	bl	10004ab8 <_Unwind_SetGR>
10004cc0:	2007      	movs	r0, #7
10004cc2:	e79d      	b.n	10004c00 <__gnu_unwind_pr_common+0xb4>
10004cc4:	f8d5 9020 	ldr.w	r9, [r5, #32]
10004cc8:	210d      	movs	r1, #13
10004cca:	4638      	mov	r0, r7
10004ccc:	f7ff fece 	bl	10004a6c <_Unwind_GetGR>
10004cd0:	4581      	cmp	r9, r0
10004cd2:	d079      	beq.n	10004dc8 <__gnu_unwind_pr_common+0x27c>
10004cd4:	6823      	ldr	r3, [r4, #0]
10004cd6:	e7d3      	b.n	10004c80 <__gnu_unwind_pr_common+0x134>
10004cd8:	f8d5 9020 	ldr.w	r9, [r5, #32]
10004cdc:	210d      	movs	r1, #13
10004cde:	4638      	mov	r0, r7
10004ce0:	f7ff fec4 	bl	10004a6c <_Unwind_GetGR>
10004ce4:	4581      	cmp	r9, r0
10004ce6:	d1d6      	bne.n	10004c96 <__gnu_unwind_pr_common+0x14a>
10004ce8:	6aab      	ldr	r3, [r5, #40]	; 0x28
10004cea:	429c      	cmp	r4, r3
10004cec:	d1d3      	bne.n	10004c96 <__gnu_unwind_pr_common+0x14a>
10004cee:	4620      	mov	r0, r4
10004cf0:	210f      	movs	r1, #15
10004cf2:	f7ff fccd 	bl	10004690 <selfrel_offset31>
10004cf6:	4602      	mov	r2, r0
10004cf8:	4638      	mov	r0, r7
10004cfa:	f7ff fedd 	bl	10004ab8 <_Unwind_SetGR>
10004cfe:	4638      	mov	r0, r7
10004d00:	462a      	mov	r2, r5
10004d02:	2100      	movs	r1, #0
10004d04:	f7ff fed8 	bl	10004ab8 <_Unwind_SetGR>
10004d08:	2007      	movs	r0, #7
10004d0a:	e779      	b.n	10004c00 <__gnu_unwind_pr_common+0xb4>
10004d0c:	6823      	ldr	r3, [r4, #0]
10004d0e:	f023 4b00 	bic.w	fp, r3, #2147483648	; 0x80000000
10004d12:	f1b8 0f00 	cmp.w	r8, #0
10004d16:	d1d5      	bne.n	10004cc4 <__gnu_unwind_pr_common+0x178>
10004d18:	9a02      	ldr	r2, [sp, #8]
10004d1a:	b112      	cbz	r2, 10004d22 <__gnu_unwind_pr_common+0x1d6>
10004d1c:	f1bb 0f00 	cmp.w	fp, #0
10004d20:	d1ae      	bne.n	10004c80 <__gnu_unwind_pr_common+0x134>
10004d22:	f105 0358 	add.w	r3, r5, #88	; 0x58
10004d26:	f8cd 800c 	str.w	r8, [sp, #12]
10004d2a:	f104 0a04 	add.w	sl, r4, #4
10004d2e:	46b0      	mov	r8, r6
10004d30:	f04f 0900 	mov.w	r9, #0
10004d34:	461e      	mov	r6, r3
10004d36:	e00d      	b.n	10004d54 <__gnu_unwind_pr_common+0x208>
10004d38:	4650      	mov	r0, sl
10004d3a:	9604      	str	r6, [sp, #16]
10004d3c:	2200      	movs	r2, #0
10004d3e:	f7ff fd71 	bl	10004824 <_Unwind_decode_typeinfo_ptr.constprop.0>
10004d42:	ab04      	add	r3, sp, #16
10004d44:	4601      	mov	r1, r0
10004d46:	4628      	mov	r0, r5
10004d48:	f10a 0a04 	add.w	sl, sl, #4
10004d4c:	e000      	b.n	10004d50 <__gnu_unwind_pr_common+0x204>
10004d4e:	bf00      	nop
10004d50:	2800      	cmp	r0, #0
10004d52:	d14a      	bne.n	10004dea <__gnu_unwind_pr_common+0x29e>
10004d54:	45d9      	cmp	r9, fp
10004d56:	f109 0901 	add.w	r9, r9, #1
10004d5a:	d1ed      	bne.n	10004d38 <__gnu_unwind_pr_common+0x1ec>
10004d5c:	210d      	movs	r1, #13
10004d5e:	4638      	mov	r0, r7
10004d60:	f7ff fe84 	bl	10004a6c <_Unwind_GetGR>
10004d64:	9b04      	ldr	r3, [sp, #16]
10004d66:	4602      	mov	r2, r0
10004d68:	2006      	movs	r0, #6
10004d6a:	622a      	str	r2, [r5, #32]
10004d6c:	e9c5 3409 	strd	r3, r4, [r5, #36]	; 0x24
10004d70:	e746      	b.n	10004c00 <__gnu_unwind_pr_common+0xb4>
10004d72:	f1b8 0f00 	cmp.w	r8, #0
10004d76:	d1af      	bne.n	10004cd8 <__gnu_unwind_pr_common+0x18c>
10004d78:	6863      	ldr	r3, [r4, #4]
10004d7a:	6822      	ldr	r2, [r4, #0]
10004d7c:	1c99      	adds	r1, r3, #2
10004d7e:	ea4f 72d2 	mov.w	r2, r2, lsr #31
10004d82:	f43f af3c 	beq.w	10004bfe <__gnu_unwind_pr_common+0xb2>
10004d86:	f105 0158 	add.w	r1, r5, #88	; 0x58
10004d8a:	3301      	adds	r3, #1
10004d8c:	9104      	str	r1, [sp, #16]
10004d8e:	d031      	beq.n	10004df4 <__gnu_unwind_pr_common+0x2a8>
10004d90:	1d20      	adds	r0, r4, #4
10004d92:	f7ff fd47 	bl	10004824 <_Unwind_decode_typeinfo_ptr.constprop.0>
10004d96:	ab04      	add	r3, sp, #16
10004d98:	4601      	mov	r1, r0
10004d9a:	4628      	mov	r0, r5
10004d9c:	e000      	b.n	10004da0 <__gnu_unwind_pr_common+0x254>
10004d9e:	bf00      	nop
10004da0:	2800      	cmp	r0, #0
10004da2:	f43f af78 	beq.w	10004c96 <__gnu_unwind_pr_common+0x14a>
10004da6:	4681      	mov	r9, r0
10004da8:	210d      	movs	r1, #13
10004daa:	4638      	mov	r0, r7
10004dac:	f7ff fe5e 	bl	10004a6c <_Unwind_GetGR>
10004db0:	f1b9 0f02 	cmp.w	r9, #2
10004db4:	6228      	str	r0, [r5, #32]
10004db6:	d122      	bne.n	10004dfe <__gnu_unwind_pr_common+0x2b2>
10004db8:	462b      	mov	r3, r5
10004dba:	9a04      	ldr	r2, [sp, #16]
10004dbc:	f843 2f2c 	str.w	r2, [r3, #44]!
10004dc0:	626b      	str	r3, [r5, #36]	; 0x24
10004dc2:	2006      	movs	r0, #6
10004dc4:	62ac      	str	r4, [r5, #40]	; 0x28
10004dc6:	e71b      	b.n	10004c00 <__gnu_unwind_pr_common+0xb4>
10004dc8:	6aab      	ldr	r3, [r5, #40]	; 0x28
10004dca:	429c      	cmp	r4, r3
10004dcc:	d182      	bne.n	10004cd4 <__gnu_unwind_pr_common+0x188>
10004dce:	2304      	movs	r3, #4
10004dd0:	2200      	movs	r2, #0
10004dd2:	f8c5 b028 	str.w	fp, [r5, #40]	; 0x28
10004dd6:	e9c5 230b 	strd	r2, r3, [r5, #44]	; 0x2c
10004dda:	18e3      	adds	r3, r4, r3
10004ddc:	636b      	str	r3, [r5, #52]	; 0x34
10004dde:	6823      	ldr	r3, [r4, #0]
10004de0:	2b00      	cmp	r3, #0
10004de2:	db0f      	blt.n	10004e04 <__gnu_unwind_pr_common+0x2b8>
10004de4:	2301      	movs	r3, #1
10004de6:	9301      	str	r3, [sp, #4]
10004de8:	e74d      	b.n	10004c86 <__gnu_unwind_pr_common+0x13a>
10004dea:	4646      	mov	r6, r8
10004dec:	6823      	ldr	r3, [r4, #0]
10004dee:	f8dd 800c 	ldr.w	r8, [sp, #12]
10004df2:	e745      	b.n	10004c80 <__gnu_unwind_pr_common+0x134>
10004df4:	210d      	movs	r1, #13
10004df6:	4638      	mov	r0, r7
10004df8:	f7ff fe38 	bl	10004a6c <_Unwind_GetGR>
10004dfc:	6228      	str	r0, [r5, #32]
10004dfe:	9b04      	ldr	r3, [sp, #16]
10004e00:	626b      	str	r3, [r5, #36]	; 0x24
10004e02:	e7de      	b.n	10004dc2 <__gnu_unwind_pr_common+0x276>
10004e04:	f10b 0001 	add.w	r0, fp, #1
10004e08:	210f      	movs	r1, #15
10004e0a:	eb04 0080 	add.w	r0, r4, r0, lsl #2
10004e0e:	e770      	b.n	10004cf2 <__gnu_unwind_pr_common+0x1a6>
10004e10:	00000000 	andeq	r0, r0, r0

10004e14 <__aeabi_unwind_cpp_pr0>:
10004e14:	2300      	movs	r3, #0
10004e16:	e699      	b.n	10004b4c <__gnu_unwind_pr_common>

10004e18 <__aeabi_unwind_cpp_pr1>:
10004e18:	2301      	movs	r3, #1
10004e1a:	e697      	b.n	10004b4c <__gnu_unwind_pr_common>

10004e1c <__aeabi_unwind_cpp_pr2>:
10004e1c:	2302      	movs	r3, #2
10004e1e:	e695      	b.n	10004b4c <__gnu_unwind_pr_common>

10004e20 <_Unwind_VRS_Pop>:
10004e20:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
10004e24:	4606      	mov	r6, r0
10004e26:	b0c3      	sub	sp, #268	; 0x10c
10004e28:	4615      	mov	r5, r2
10004e2a:	461c      	mov	r4, r3
10004e2c:	2904      	cmp	r1, #4
10004e2e:	f200 80c2 	bhi.w	10004fb6 <_Unwind_VRS_Pop+0x196>
10004e32:	e8df f001 	tbb	[pc, r1]
10004e36:	2cc059a3 			; <UNDEFINED> instruction: 0x2cc059a3
10004e3a:	2c000003 	stccs	0, cr0, [r0], {3}
10004e3e:	f040 80ba 	bne.w	10004fb6 <_Unwind_VRS_Pop+0x196>
10004e42:	2a10      	cmp	r2, #16
10004e44:	f200 80b7 	bhi.w	10004fb6 <_Unwind_VRS_Pop+0x196>
10004e48:	6803      	ldr	r3, [r0, #0]
10004e4a:	06df      	lsls	r7, r3, #27
10004e4c:	f100 80b7 	bmi.w	10004fbe <_Unwind_VRS_Pop+0x19e>
10004e50:	af20      	add	r7, sp, #128	; 0x80
10004e52:	4638      	mov	r0, r7
10004e54:	f000 f9b0 	bl	100051b8 <__gnu_Unwind_Save_WMMXC>
10004e58:	6bb4      	ldr	r4, [r6, #56]	; 0x38
10004e5a:	4639      	mov	r1, r7
10004e5c:	2300      	movs	r3, #0
10004e5e:	f04f 0c01 	mov.w	ip, #1
10004e62:	fa0c f203 	lsl.w	r2, ip, r3
10004e66:	4620      	mov	r0, r4
10004e68:	3301      	adds	r3, #1
10004e6a:	422a      	tst	r2, r5
10004e6c:	d003      	beq.n	10004e76 <_Unwind_VRS_Pop+0x56>
10004e6e:	f850 2b04 	ldr.w	r2, [r0], #4
10004e72:	4604      	mov	r4, r0
10004e74:	600a      	str	r2, [r1, #0]
10004e76:	2b04      	cmp	r3, #4
10004e78:	f101 0104 	add.w	r1, r1, #4
10004e7c:	d1f1      	bne.n	10004e62 <_Unwind_VRS_Pop+0x42>
10004e7e:	4638      	mov	r0, r7
10004e80:	63b4      	str	r4, [r6, #56]	; 0x38
10004e82:	f000 f98f 	bl	100051a4 <__gnu_Unwind_Restore_WMMXC>
10004e86:	2000      	movs	r0, #0
10004e88:	b043      	add	sp, #268	; 0x10c
10004e8a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
10004e8e:	2c03      	cmp	r4, #3
10004e90:	f040 8091 	bne.w	10004fb6 <_Unwind_VRS_Pop+0x196>
10004e94:	fa1f f882 	uxth.w	r8, r2
10004e98:	0c14      	lsrs	r4, r2, #16
10004e9a:	eb08 4512 	add.w	r5, r8, r2, lsr #16
10004e9e:	2d10      	cmp	r5, #16
10004ea0:	f200 8089 	bhi.w	10004fb6 <_Unwind_VRS_Pop+0x196>
10004ea4:	6803      	ldr	r3, [r0, #0]
10004ea6:	071a      	lsls	r2, r3, #28
10004ea8:	f100 80cd 	bmi.w	10005046 <_Unwind_VRS_Pop+0x226>
10004eac:	af20      	add	r7, sp, #128	; 0x80
10004eae:	4638      	mov	r0, r7
10004eb0:	f000 f956 	bl	10005160 <__gnu_Unwind_Save_WMMXD>
10004eb4:	6bb5      	ldr	r5, [r6, #56]	; 0x38
10004eb6:	eb07 01c4 	add.w	r1, r7, r4, lsl #3
10004eba:	f1b8 0f00 	cmp.w	r8, #0
10004ebe:	d00b      	beq.n	10004ed8 <_Unwind_VRS_Pop+0xb8>
10004ec0:	460b      	mov	r3, r1
10004ec2:	eb01 01c8 	add.w	r1, r1, r8, lsl #3
10004ec6:	ea4f 08c8 	mov.w	r8, r8, lsl #3
10004eca:	1ae8      	subs	r0, r5, r3
10004ecc:	581a      	ldr	r2, [r3, r0]
10004ece:	f843 2b04 	str.w	r2, [r3], #4
10004ed2:	428b      	cmp	r3, r1
10004ed4:	d1fa      	bne.n	10004ecc <_Unwind_VRS_Pop+0xac>
10004ed6:	4445      	add	r5, r8
10004ed8:	4638      	mov	r0, r7
10004eda:	63b5      	str	r5, [r6, #56]	; 0x38
10004edc:	f000 f91e 	bl	1000511c <__gnu_Unwind_Restore_WMMXD>
10004ee0:	2000      	movs	r0, #0
10004ee2:	b043      	add	sp, #268	; 0x10c
10004ee4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
10004ee8:	f004 03fb 	and.w	r3, r4, #251	; 0xfb
10004eec:	ea4f 4812 	mov.w	r8, r2, lsr #16
10004ef0:	b295      	uxth	r5, r2
10004ef2:	2b01      	cmp	r3, #1
10004ef4:	d15f      	bne.n	10004fb6 <_Unwind_VRS_Pop+0x196>
10004ef6:	2c01      	cmp	r4, #1
10004ef8:	eb08 0905 	add.w	r9, r8, r5
10004efc:	d058      	beq.n	10004fb0 <_Unwind_VRS_Pop+0x190>
10004efe:	f1b9 0f20 	cmp.w	r9, #32
10004f02:	d858      	bhi.n	10004fb6 <_Unwind_VRS_Pop+0x196>
10004f04:	f1b8 0f0f 	cmp.w	r8, #15
10004f08:	d975      	bls.n	10004ff6 <_Unwind_VRS_Pop+0x1d6>
10004f0a:	2c05      	cmp	r4, #5
10004f0c:	46a9      	mov	r9, r5
10004f0e:	f000 80a4 	beq.w	1000505a <_Unwind_VRS_Pop+0x23a>
10004f12:	2d00      	cmp	r5, #0
10004f14:	d14f      	bne.n	10004fb6 <_Unwind_VRS_Pop+0x196>
10004f16:	6bb3      	ldr	r3, [r6, #56]	; 0x38
10004f18:	b365      	cbz	r5, 10004f74 <_Unwind_VRS_Pop+0x154>
10004f1a:	af20      	add	r7, sp, #128	; 0x80
10004f1c:	f04f 0900 	mov.w	r9, #0
10004f20:	eb07 07c8 	add.w	r7, r7, r8, lsl #3
10004f24:	eb03 05c5 	add.w	r5, r3, r5, lsl #3
10004f28:	3f04      	subs	r7, #4
10004f2a:	f853 1b04 	ldr.w	r1, [r3], #4
10004f2e:	429d      	cmp	r5, r3
10004f30:	f847 1f04 	str.w	r1, [r7, #4]!
10004f34:	d1f9      	bne.n	10004f2a <_Unwind_VRS_Pop+0x10a>
10004f36:	f1b9 0f00 	cmp.w	r9, #0
10004f3a:	d00f      	beq.n	10004f5c <_Unwind_VRS_Pop+0x13c>
10004f3c:	466f      	mov	r7, sp
10004f3e:	4641      	mov	r1, r8
10004f40:	eb03 05c9 	add.w	r5, r3, r9, lsl #3
10004f44:	2910      	cmp	r1, #16
10004f46:	bf38      	it	cc
10004f48:	2110      	movcc	r1, #16
10004f4a:	eb07 01c1 	add.w	r1, r7, r1, lsl #3
10004f4e:	3984      	subs	r1, #132	; 0x84
10004f50:	f853 0b04 	ldr.w	r0, [r3], #4
10004f54:	429d      	cmp	r5, r3
10004f56:	f841 0f04 	str.w	r0, [r1, #4]!
10004f5a:	d1f9      	bne.n	10004f50 <_Unwind_VRS_Pop+0x130>
10004f5c:	2c01      	cmp	r4, #1
10004f5e:	d07a      	beq.n	10005056 <_Unwind_VRS_Pop+0x236>
10004f60:	f1b8 0f0f 	cmp.w	r8, #15
10004f64:	63b5      	str	r5, [r6, #56]	; 0x38
10004f66:	d96a      	bls.n	1000503e <_Unwind_VRS_Pop+0x21e>
10004f68:	f1b9 0f00 	cmp.w	r9, #0
10004f6c:	d002      	beq.n	10004f74 <_Unwind_VRS_Pop+0x154>
10004f6e:	4668      	mov	r0, sp
10004f70:	f000 f8cc 	bl	1000510c <__gnu_Unwind_Restore_VFP_D_16_to_31>
10004f74:	2000      	movs	r0, #0
10004f76:	b043      	add	sp, #268	; 0x10c
10004f78:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
10004f7c:	b9dc      	cbnz	r4, 10004fb6 <_Unwind_VRS_Pop+0x196>
10004f7e:	6b87      	ldr	r7, [r0, #56]	; 0x38
10004f80:	4623      	mov	r3, r4
10004f82:	fa1f fc82 	uxth.w	ip, r2
10004f86:	2001      	movs	r0, #1
10004f88:	1d34      	adds	r4, r6, #4
10004f8a:	fa00 f103 	lsl.w	r1, r0, r3
10004f8e:	463a      	mov	r2, r7
10004f90:	ea11 0f0c 	tst.w	r1, ip
10004f94:	d004      	beq.n	10004fa0 <_Unwind_VRS_Pop+0x180>
10004f96:	f852 1b04 	ldr.w	r1, [r2], #4
10004f9a:	4617      	mov	r7, r2
10004f9c:	f844 1023 	str.w	r1, [r4, r3, lsl #2]
10004fa0:	3301      	adds	r3, #1
10004fa2:	2b10      	cmp	r3, #16
10004fa4:	d1f1      	bne.n	10004f8a <_Unwind_VRS_Pop+0x16a>
10004fa6:	f415 5000 	ands.w	r0, r5, #8192	; 0x2000
10004faa:	d1e3      	bne.n	10004f74 <_Unwind_VRS_Pop+0x154>
10004fac:	63b7      	str	r7, [r6, #56]	; 0x38
10004fae:	e003      	b.n	10004fb8 <_Unwind_VRS_Pop+0x198>
10004fb0:	f1b9 0f10 	cmp.w	r9, #16
10004fb4:	d90b      	bls.n	10004fce <_Unwind_VRS_Pop+0x1ae>
10004fb6:	2002      	movs	r0, #2
10004fb8:	b043      	add	sp, #268	; 0x10c
10004fba:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
10004fbe:	f023 0310 	bic.w	r3, r3, #16
10004fc2:	f500 70e8 	add.w	r0, r0, #464	; 0x1d0
10004fc6:	6033      	str	r3, [r6, #0]
10004fc8:	f000 f8f6 	bl	100051b8 <__gnu_Unwind_Save_WMMXC>
10004fcc:	e740      	b.n	10004e50 <_Unwind_VRS_Pop+0x30>
10004fce:	f1b8 0f0f 	cmp.w	r8, #15
10004fd2:	d8f0      	bhi.n	10004fb6 <_Unwind_VRS_Pop+0x196>
10004fd4:	6803      	ldr	r3, [r0, #0]
10004fd6:	07d8      	lsls	r0, r3, #31
10004fd8:	d450      	bmi.n	1000507c <_Unwind_VRS_Pop+0x25c>
10004fda:	af20      	add	r7, sp, #128	; 0x80
10004fdc:	4638      	mov	r0, r7
10004fde:	f000 f889 	bl	100050f4 <__gnu_Unwind_Save_VFP>
10004fe2:	6bb3      	ldr	r3, [r6, #56]	; 0x38
10004fe4:	2d00      	cmp	r5, #0
10004fe6:	d199      	bne.n	10004f1c <_Unwind_VRS_Pop+0xfc>
10004fe8:	461d      	mov	r5, r3
10004fea:	3504      	adds	r5, #4
10004fec:	4638      	mov	r0, r7
10004fee:	63b5      	str	r5, [r6, #56]	; 0x38
10004ff0:	f000 f87c 	bl	100050ec <__gnu_Unwind_Restore_VFP>
10004ff4:	e7be      	b.n	10004f74 <_Unwind_VRS_Pop+0x154>
10004ff6:	f1b9 0f10 	cmp.w	r9, #16
10004ffa:	d958      	bls.n	100050ae <_Unwind_VRS_Pop+0x28e>
10004ffc:	2c05      	cmp	r4, #5
10004ffe:	d1da      	bne.n	10004fb6 <_Unwind_VRS_Pop+0x196>
10005000:	6833      	ldr	r3, [r6, #0]
10005002:	f1a9 0910 	sub.w	r9, r9, #16
10005006:	07dd      	lsls	r5, r3, #31
10005008:	d509      	bpl.n	1000501e <_Unwind_VRS_Pop+0x1fe>
1000500a:	f023 0301 	bic.w	r3, r3, #1
1000500e:	4630      	mov	r0, r6
10005010:	f043 0302 	orr.w	r3, r3, #2
10005014:	f840 3b48 	str.w	r3, [r0], #72
10005018:	f000 f874 	bl	10005104 <__gnu_Unwind_Save_VFP_D>
1000501c:	6833      	ldr	r3, [r6, #0]
1000501e:	0759      	lsls	r1, r3, #29
10005020:	d421      	bmi.n	10005066 <_Unwind_VRS_Pop+0x246>
10005022:	a820      	add	r0, sp, #128	; 0x80
10005024:	f000 f86e 	bl	10005104 <__gnu_Unwind_Save_VFP_D>
10005028:	466f      	mov	r7, sp
1000502a:	f1c8 0510 	rsb	r5, r8, #16
1000502e:	4638      	mov	r0, r7
10005030:	f000 f870 	bl	10005114 <__gnu_Unwind_Save_VFP_D_16_to_31>
10005034:	2d00      	cmp	r5, #0
10005036:	6bb3      	ldr	r3, [r6, #56]	; 0x38
10005038:	dd81      	ble.n	10004f3e <_Unwind_VRS_Pop+0x11e>
1000503a:	af20      	add	r7, sp, #128	; 0x80
1000503c:	e770      	b.n	10004f20 <_Unwind_VRS_Pop+0x100>
1000503e:	a820      	add	r0, sp, #128	; 0x80
10005040:	f000 f85c 	bl	100050fc <__gnu_Unwind_Restore_VFP_D>
10005044:	e790      	b.n	10004f68 <_Unwind_VRS_Pop+0x148>
10005046:	f023 0308 	bic.w	r3, r3, #8
1000504a:	f500 70a8 	add.w	r0, r0, #336	; 0x150
1000504e:	6033      	str	r3, [r6, #0]
10005050:	f000 f886 	bl	10005160 <__gnu_Unwind_Save_WMMXD>
10005054:	e72a      	b.n	10004eac <_Unwind_VRS_Pop+0x8c>
10005056:	af20      	add	r7, sp, #128	; 0x80
10005058:	e7c7      	b.n	10004fea <_Unwind_VRS_Pop+0x1ca>
1000505a:	2d00      	cmp	r5, #0
1000505c:	f43f af5b 	beq.w	10004f16 <_Unwind_VRS_Pop+0xf6>
10005060:	6833      	ldr	r3, [r6, #0]
10005062:	075a      	lsls	r2, r3, #29
10005064:	d5e0      	bpl.n	10005028 <_Unwind_VRS_Pop+0x208>
10005066:	f023 0304 	bic.w	r3, r3, #4
1000506a:	4630      	mov	r0, r6
1000506c:	f840 3bd0 	str.w	r3, [r0], #208
10005070:	f000 f850 	bl	10005114 <__gnu_Unwind_Save_VFP_D_16_to_31>
10005074:	f1b8 0f0f 	cmp.w	r8, #15
10005078:	d8d6      	bhi.n	10005028 <_Unwind_VRS_Pop+0x208>
1000507a:	e7d2      	b.n	10005022 <_Unwind_VRS_Pop+0x202>
1000507c:	f023 0303 	bic.w	r3, r3, #3
10005080:	4630      	mov	r0, r6
10005082:	f840 3b48 	str.w	r3, [r0], #72
10005086:	f000 f835 	bl	100050f4 <__gnu_Unwind_Save_VFP>
1000508a:	2c01      	cmp	r4, #1
1000508c:	d0a5      	beq.n	10004fda <_Unwind_VRS_Pop+0x1ba>
1000508e:	f1b8 0f0f 	cmp.w	r8, #15
10005092:	f63f af40 	bhi.w	10004f16 <_Unwind_VRS_Pop+0xf6>
10005096:	af20      	add	r7, sp, #128	; 0x80
10005098:	4638      	mov	r0, r7
1000509a:	f000 f833 	bl	10005104 <__gnu_Unwind_Save_VFP_D>
1000509e:	6bb3      	ldr	r3, [r6, #56]	; 0x38
100050a0:	2d00      	cmp	r5, #0
100050a2:	f47f af3b 	bne.w	10004f1c <_Unwind_VRS_Pop+0xfc>
100050a6:	4638      	mov	r0, r7
100050a8:	f000 f828 	bl	100050fc <__gnu_Unwind_Restore_VFP_D>
100050ac:	e762      	b.n	10004f74 <_Unwind_VRS_Pop+0x154>
100050ae:	6833      	ldr	r3, [r6, #0]
100050b0:	07d9      	lsls	r1, r3, #31
100050b2:	d5ea      	bpl.n	1000508a <_Unwind_VRS_Pop+0x26a>
100050b4:	2c05      	cmp	r4, #5
100050b6:	d1e1      	bne.n	1000507c <_Unwind_VRS_Pop+0x25c>
100050b8:	f023 0301 	bic.w	r3, r3, #1
100050bc:	4630      	mov	r0, r6
100050be:	af20      	add	r7, sp, #128	; 0x80
100050c0:	f043 0302 	orr.w	r3, r3, #2
100050c4:	f840 3b48 	str.w	r3, [r0], #72
100050c8:	f000 f81c 	bl	10005104 <__gnu_Unwind_Save_VFP_D>
100050cc:	4638      	mov	r0, r7
100050ce:	f000 f819 	bl	10005104 <__gnu_Unwind_Save_VFP_D>
100050d2:	e7e4      	b.n	1000509e <_Unwind_VRS_Pop+0x27e>

100050d4 <__restore_core_regs>:
100050d4:	f100 0134 	add.w	r1, r0, #52	; 0x34
100050d8:	e891 0038 	ldmia.w	r1, {r3, r4, r5}
100050dc:	469c      	mov	ip, r3
100050de:	46a6      	mov	lr, r4
100050e0:	f84c 5d04 	str.w	r5, [ip, #-4]!
100050e4:	e890 0fff 	ldmia.w	r0, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp}
100050e8:	46e5      	mov	sp, ip
100050ea:	bd00      	pop	{pc}

100050ec <__gnu_Unwind_Restore_VFP>:
100050ec:	ec90 0b21 	fldmiax	r0, {d0-d15}	;@ Deprecated
100050f0:	4770      	bx	lr
100050f2:	bf00      	nop

100050f4 <__gnu_Unwind_Save_VFP>:
100050f4:	ec80 0b21 	fstmiax	r0, {d0-d15}	;@ Deprecated
100050f8:	4770      	bx	lr
100050fa:	bf00      	nop

100050fc <__gnu_Unwind_Restore_VFP_D>:
100050fc:	ec90 0b20 	vldmia	r0, {d0-d15}
10005100:	4770      	bx	lr
10005102:	bf00      	nop

10005104 <__gnu_Unwind_Save_VFP_D>:
10005104:	ec80 0b20 	vstmia	r0, {d0-d15}
10005108:	4770      	bx	lr
1000510a:	bf00      	nop

1000510c <__gnu_Unwind_Restore_VFP_D_16_to_31>:
1000510c:	ecd0 0b20 	vldmia	r0, {d16-d31}
10005110:	4770      	bx	lr
10005112:	bf00      	nop

10005114 <__gnu_Unwind_Save_VFP_D_16_to_31>:
10005114:	ecc0 0b20 	vstmia	r0, {d16-d31}
10005118:	4770      	bx	lr
1000511a:	bf00      	nop

1000511c <__gnu_Unwind_Restore_WMMXD>:
1000511c:	ecf0 0102 	ldfe	f0, [r0], #8
10005120:	ecf0 1102 	ldfe	f1, [r0], #8
10005124:	ecf0 2102 	ldfe	f2, [r0], #8
10005128:	ecf0 3102 	ldfe	f3, [r0], #8
1000512c:	ecf0 4102 	ldfe	f4, [r0], #8
10005130:	ecf0 5102 	ldfe	f5, [r0], #8
10005134:	ecf0 6102 	ldfe	f6, [r0], #8
10005138:	ecf0 7102 	ldfe	f7, [r0], #8
1000513c:	ecf0 8102 	ldfp	f0, [r0], #8
10005140:	ecf0 9102 	ldfp	f1, [r0], #8
10005144:	ecf0 a102 	ldfp	f2, [r0], #8
10005148:	ecf0 b102 	ldfp	f3, [r0], #8
1000514c:	ecf0 c102 	ldfp	f4, [r0], #8
10005150:	ecf0 d102 	ldfp	f5, [r0], #8
10005154:	ecf0 e102 	ldfp	f6, [r0], #8
10005158:	ecf0 f102 	ldfp	f7, [r0], #8
1000515c:	4770      	bx	lr
1000515e:	bf00      	nop

10005160 <__gnu_Unwind_Save_WMMXD>:
10005160:	ece0 0102 	stfe	f0, [r0], #8
10005164:	ece0 1102 	stfe	f1, [r0], #8
10005168:	ece0 2102 	stfe	f2, [r0], #8
1000516c:	ece0 3102 	stfe	f3, [r0], #8
10005170:	ece0 4102 	stfe	f4, [r0], #8
10005174:	ece0 5102 	stfe	f5, [r0], #8
10005178:	ece0 6102 	stfe	f6, [r0], #8
1000517c:	ece0 7102 	stfe	f7, [r0], #8
10005180:	ece0 8102 	stfp	f0, [r0], #8
10005184:	ece0 9102 	stfp	f1, [r0], #8
10005188:	ece0 a102 	stfp	f2, [r0], #8
1000518c:	ece0 b102 	stfp	f3, [r0], #8
10005190:	ece0 c102 	stfp	f4, [r0], #8
10005194:	ece0 d102 	stfp	f5, [r0], #8
10005198:	ece0 e102 	stfp	f6, [r0], #8
1000519c:	ece0 f102 	stfp	f7, [r0], #8
100051a0:	4770      	bx	lr
100051a2:	bf00      	nop

100051a4 <__gnu_Unwind_Restore_WMMXC>:
100051a4:	fcb0 8101 	ldc2	1, cr8, [r0], #4
100051a8:	fcb0 9101 	ldc2	1, cr9, [r0], #4
100051ac:	fcb0 a101 	ldc2	1, cr10, [r0], #4
100051b0:	fcb0 b101 	ldc2	1, cr11, [r0], #4
100051b4:	4770      	bx	lr
100051b6:	bf00      	nop

100051b8 <__gnu_Unwind_Save_WMMXC>:
100051b8:	fca0 8101 	stc2	1, cr8, [r0], #4
100051bc:	fca0 9101 	stc2	1, cr9, [r0], #4
100051c0:	fca0 a101 	stc2	1, cr10, [r0], #4
100051c4:	fca0 b101 	stc2	1, cr11, [r0], #4
100051c8:	4770      	bx	lr
100051ca:	bf00      	nop

100051cc <_Unwind_RaiseException>:
100051cc:	46ec      	mov	ip, sp
100051ce:	b500      	push	{lr}
100051d0:	e92d 5000 	stmdb	sp!, {ip, lr}
100051d4:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
100051d8:	f04f 0300 	mov.w	r3, #0
100051dc:	e92d 000c 	stmdb	sp!, {r2, r3}
100051e0:	a901      	add	r1, sp, #4
100051e2:	f7ff fbb7 	bl	10004954 <__gnu_Unwind_RaiseException>
100051e6:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
100051ea:	b012      	add	sp, #72	; 0x48
100051ec:	4770      	bx	lr
100051ee:	bf00      	nop

100051f0 <_Unwind_Resume>:
100051f0:	46ec      	mov	ip, sp
100051f2:	b500      	push	{lr}
100051f4:	e92d 5000 	stmdb	sp!, {ip, lr}
100051f8:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
100051fc:	f04f 0300 	mov.w	r3, #0
10005200:	e92d 000c 	stmdb	sp!, {r2, r3}
10005204:	a901      	add	r1, sp, #4
10005206:	f7ff fbe3 	bl	100049d0 <__gnu_Unwind_Resume>
1000520a:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
1000520e:	b012      	add	sp, #72	; 0x48
10005210:	4770      	bx	lr
10005212:	bf00      	nop

10005214 <_Unwind_Resume_or_Rethrow>:
10005214:	46ec      	mov	ip, sp
10005216:	b500      	push	{lr}
10005218:	e92d 5000 	stmdb	sp!, {ip, lr}
1000521c:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
10005220:	f04f 0300 	mov.w	r3, #0
10005224:	e92d 000c 	stmdb	sp!, {r2, r3}
10005228:	a901      	add	r1, sp, #4
1000522a:	f7ff fbf3 	bl	10004a14 <__gnu_Unwind_Resume_or_Rethrow>
1000522e:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
10005232:	b012      	add	sp, #72	; 0x48
10005234:	4770      	bx	lr
10005236:	bf00      	nop

10005238 <_Unwind_ForcedUnwind>:
10005238:	46ec      	mov	ip, sp
1000523a:	b500      	push	{lr}
1000523c:	e92d 5000 	stmdb	sp!, {ip, lr}
10005240:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
10005244:	f04f 0300 	mov.w	r3, #0
10005248:	e92d 000c 	stmdb	sp!, {r2, r3}
1000524c:	ab01      	add	r3, sp, #4
1000524e:	f7ff fbb5 	bl	100049bc <__gnu_Unwind_ForcedUnwind>
10005252:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
10005256:	b012      	add	sp, #72	; 0x48
10005258:	4770      	bx	lr
1000525a:	bf00      	nop

1000525c <_Unwind_Backtrace>:
1000525c:	46ec      	mov	ip, sp
1000525e:	b500      	push	{lr}
10005260:	e92d 5000 	stmdb	sp!, {ip, lr}
10005264:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
10005268:	f04f 0300 	mov.w	r3, #0
1000526c:	e92d 000c 	stmdb	sp!, {r2, r3}
10005270:	aa01      	add	r2, sp, #4
10005272:	f7ff fc2d 	bl	10004ad0 <__gnu_Unwind_Backtrace>
10005276:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
1000527a:	b012      	add	sp, #72	; 0x48
1000527c:	4770      	bx	lr
1000527e:	bf00      	nop

10005280 <next_unwind_byte>:
10005280:	7a02      	ldrb	r2, [r0, #8]
10005282:	4603      	mov	r3, r0
10005284:	b98a      	cbnz	r2, 100052aa <next_unwind_byte+0x2a>
10005286:	7a42      	ldrb	r2, [r0, #9]
10005288:	b1b2      	cbz	r2, 100052b8 <next_unwind_byte+0x38>
1000528a:	6841      	ldr	r1, [r0, #4]
1000528c:	3a01      	subs	r2, #1
1000528e:	f04f 0c03 	mov.w	ip, #3
10005292:	b410      	push	{r4}
10005294:	7242      	strb	r2, [r0, #9]
10005296:	1d0c      	adds	r4, r1, #4
10005298:	6808      	ldr	r0, [r1, #0]
1000529a:	f883 c008 	strb.w	ip, [r3, #8]
1000529e:	0202      	lsls	r2, r0, #8
100052a0:	605c      	str	r4, [r3, #4]
100052a2:	0e00      	lsrs	r0, r0, #24
100052a4:	bc10      	pop	{r4}
100052a6:	601a      	str	r2, [r3, #0]
100052a8:	4770      	bx	lr
100052aa:	6800      	ldr	r0, [r0, #0]
100052ac:	3a01      	subs	r2, #1
100052ae:	721a      	strb	r2, [r3, #8]
100052b0:	0202      	lsls	r2, r0, #8
100052b2:	0e00      	lsrs	r0, r0, #24
100052b4:	601a      	str	r2, [r3, #0]
100052b6:	4770      	bx	lr
100052b8:	20b0      	movs	r0, #176	; 0xb0
100052ba:	4770      	bx	lr

100052bc <_Unwind_GetGR.constprop.0>:
100052bc:	b510      	push	{r4, lr}
100052be:	b084      	sub	sp, #16
100052c0:	2300      	movs	r3, #0
100052c2:	220c      	movs	r2, #12
100052c4:	ac03      	add	r4, sp, #12
100052c6:	4619      	mov	r1, r3
100052c8:	9400      	str	r4, [sp, #0]
100052ca:	f7ff fbb5 	bl	10004a38 <_Unwind_VRS_Get>
100052ce:	9803      	ldr	r0, [sp, #12]
100052d0:	b004      	add	sp, #16
100052d2:	bd10      	pop	{r4, pc}

100052d4 <unwind_UCB_from_context>:
100052d4:	e7f2      	b.n	100052bc <_Unwind_GetGR.constprop.0>
100052d6:	bf00      	nop

100052d8 <__gnu_unwind_execute>:
100052d8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
100052dc:	f04f 0800 	mov.w	r8, #0
100052e0:	b085      	sub	sp, #20
100052e2:	4606      	mov	r6, r0
100052e4:	460d      	mov	r5, r1
100052e6:	4628      	mov	r0, r5
100052e8:	f7ff ffca 	bl	10005280 <next_unwind_byte>
100052ec:	28b0      	cmp	r0, #176	; 0xb0
100052ee:	4604      	mov	r4, r0
100052f0:	f000 80bc 	beq.w	1000546c <__gnu_unwind_execute+0x194>
100052f4:	0607      	lsls	r7, r0, #24
100052f6:	d520      	bpl.n	1000533a <__gnu_unwind_execute+0x62>
100052f8:	f000 03f0 	and.w	r3, r0, #240	; 0xf0
100052fc:	2b80      	cmp	r3, #128	; 0x80
100052fe:	d04e      	beq.n	1000539e <__gnu_unwind_execute+0xc6>
10005300:	2b90      	cmp	r3, #144	; 0x90
10005302:	d037      	beq.n	10005374 <__gnu_unwind_execute+0x9c>
10005304:	2ba0      	cmp	r3, #160	; 0xa0
10005306:	d061      	beq.n	100053cc <__gnu_unwind_execute+0xf4>
10005308:	2bb0      	cmp	r3, #176	; 0xb0
1000530a:	d076      	beq.n	100053fa <__gnu_unwind_execute+0x122>
1000530c:	2bc0      	cmp	r3, #192	; 0xc0
1000530e:	f000 808d 	beq.w	1000542c <__gnu_unwind_execute+0x154>
10005312:	f000 03f8 	and.w	r3, r0, #248	; 0xf8
10005316:	2bd0      	cmp	r3, #208	; 0xd0
10005318:	d10b      	bne.n	10005332 <__gnu_unwind_execute+0x5a>
1000531a:	f000 0207 	and.w	r2, r0, #7
1000531e:	2305      	movs	r3, #5
10005320:	2101      	movs	r1, #1
10005322:	4630      	mov	r0, r6
10005324:	3201      	adds	r2, #1
10005326:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
1000532a:	f7ff fd79 	bl	10004e20 <_Unwind_VRS_Pop>
1000532e:	2800      	cmp	r0, #0
10005330:	d0d9      	beq.n	100052e6 <__gnu_unwind_execute+0xe>
10005332:	2009      	movs	r0, #9
10005334:	b005      	add	sp, #20
10005336:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
1000533a:	0083      	lsls	r3, r0, #2
1000533c:	f10d 090c 	add.w	r9, sp, #12
10005340:	220d      	movs	r2, #13
10005342:	4630      	mov	r0, r6
10005344:	b2db      	uxtb	r3, r3
10005346:	f8cd 9000 	str.w	r9, [sp]
1000534a:	1d1f      	adds	r7, r3, #4
1000534c:	2300      	movs	r3, #0
1000534e:	4619      	mov	r1, r3
10005350:	f7ff fb72 	bl	10004a38 <_Unwind_VRS_Get>
10005354:	9b03      	ldr	r3, [sp, #12]
10005356:	0660      	lsls	r0, r4, #25
10005358:	f04f 020d 	mov.w	r2, #13
1000535c:	4630      	mov	r0, r6
1000535e:	f8cd 9000 	str.w	r9, [sp]
10005362:	bf4c      	ite	mi
10005364:	1bdf      	submi	r7, r3, r7
10005366:	18ff      	addpl	r7, r7, r3
10005368:	2300      	movs	r3, #0
1000536a:	9703      	str	r7, [sp, #12]
1000536c:	4619      	mov	r1, r3
1000536e:	f7ff fb89 	bl	10004a84 <_Unwind_VRS_Set>
10005372:	e7b8      	b.n	100052e6 <__gnu_unwind_execute+0xe>
10005374:	f000 030d 	and.w	r3, r0, #13
10005378:	2b0d      	cmp	r3, #13
1000537a:	d0da      	beq.n	10005332 <__gnu_unwind_execute+0x5a>
1000537c:	af03      	add	r7, sp, #12
1000537e:	2300      	movs	r3, #0
10005380:	f000 020f 	and.w	r2, r0, #15
10005384:	4630      	mov	r0, r6
10005386:	4619      	mov	r1, r3
10005388:	9700      	str	r7, [sp, #0]
1000538a:	f7ff fb55 	bl	10004a38 <_Unwind_VRS_Get>
1000538e:	2300      	movs	r3, #0
10005390:	220d      	movs	r2, #13
10005392:	4630      	mov	r0, r6
10005394:	4619      	mov	r1, r3
10005396:	9700      	str	r7, [sp, #0]
10005398:	f7ff fb74 	bl	10004a84 <_Unwind_VRS_Set>
1000539c:	e7a3      	b.n	100052e6 <__gnu_unwind_execute+0xe>
1000539e:	0224      	lsls	r4, r4, #8
100053a0:	4628      	mov	r0, r5
100053a2:	f7ff ff6d 	bl	10005280 <next_unwind_byte>
100053a6:	4320      	orrs	r0, r4
100053a8:	f5b0 4f00 	cmp.w	r0, #32768	; 0x8000
100053ac:	d0c1      	beq.n	10005332 <__gnu_unwind_execute+0x5a>
100053ae:	0104      	lsls	r4, r0, #4
100053b0:	2300      	movs	r3, #0
100053b2:	4630      	mov	r0, r6
100053b4:	b2a2      	uxth	r2, r4
100053b6:	4619      	mov	r1, r3
100053b8:	f7ff fd32 	bl	10004e20 <_Unwind_VRS_Pop>
100053bc:	2800      	cmp	r0, #0
100053be:	d1b8      	bne.n	10005332 <__gnu_unwind_execute+0x5a>
100053c0:	f414 4f00 	tst.w	r4, #32768	; 0x8000
100053c4:	bf18      	it	ne
100053c6:	f04f 0801 	movne.w	r8, #1
100053ca:	e78c      	b.n	100052e6 <__gnu_unwind_execute+0xe>
100053cc:	43c2      	mvns	r2, r0
100053ce:	0701      	lsls	r1, r0, #28
100053d0:	4630      	mov	r0, r6
100053d2:	f002 0307 	and.w	r3, r2, #7
100053d6:	f44f 627f 	mov.w	r2, #4080	; 0xff0
100053da:	fa42 f203 	asr.w	r2, r2, r3
100053de:	f04f 0300 	mov.w	r3, #0
100053e2:	f402 627f 	and.w	r2, r2, #4080	; 0xff0
100053e6:	4619      	mov	r1, r3
100053e8:	bf48      	it	mi
100053ea:	f442 4280 	orrmi.w	r2, r2, #16384	; 0x4000
100053ee:	f7ff fd17 	bl	10004e20 <_Unwind_VRS_Pop>
100053f2:	2800      	cmp	r0, #0
100053f4:	f43f af77 	beq.w	100052e6 <__gnu_unwind_execute+0xe>
100053f8:	e79b      	b.n	10005332 <__gnu_unwind_execute+0x5a>
100053fa:	28b1      	cmp	r0, #177	; 0xb1
100053fc:	d03b      	beq.n	10005476 <__gnu_unwind_execute+0x19e>
100053fe:	28b2      	cmp	r0, #178	; 0xb2
10005400:	f000 80a1 	beq.w	10005546 <__gnu_unwind_execute+0x26e>
10005404:	28b3      	cmp	r0, #179	; 0xb3
10005406:	d041      	beq.n	1000548c <__gnu_unwind_execute+0x1b4>
10005408:	f000 03fc 	and.w	r3, r0, #252	; 0xfc
1000540c:	2bb4      	cmp	r3, #180	; 0xb4
1000540e:	d090      	beq.n	10005332 <__gnu_unwind_execute+0x5a>
10005410:	f000 0207 	and.w	r2, r0, #7
10005414:	2301      	movs	r3, #1
10005416:	441a      	add	r2, r3
10005418:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
1000541c:	4619      	mov	r1, r3
1000541e:	4630      	mov	r0, r6
10005420:	f7ff fcfe 	bl	10004e20 <_Unwind_VRS_Pop>
10005424:	2800      	cmp	r0, #0
10005426:	f43f af5e 	beq.w	100052e6 <__gnu_unwind_execute+0xe>
1000542a:	e782      	b.n	10005332 <__gnu_unwind_execute+0x5a>
1000542c:	28c6      	cmp	r0, #198	; 0xc6
1000542e:	d051      	beq.n	100054d4 <__gnu_unwind_execute+0x1fc>
10005430:	28c7      	cmp	r0, #199	; 0xc7
10005432:	d062      	beq.n	100054fa <__gnu_unwind_execute+0x222>
10005434:	f000 03f8 	and.w	r3, r0, #248	; 0xf8
10005438:	2bc0      	cmp	r3, #192	; 0xc0
1000543a:	d071      	beq.n	10005520 <__gnu_unwind_execute+0x248>
1000543c:	28c8      	cmp	r0, #200	; 0xc8
1000543e:	d076      	beq.n	1000552e <__gnu_unwind_execute+0x256>
10005440:	28c9      	cmp	r0, #201	; 0xc9
10005442:	f47f af76 	bne.w	10005332 <__gnu_unwind_execute+0x5a>
10005446:	4628      	mov	r0, r5
10005448:	f7ff ff1a 	bl	10005280 <next_unwind_byte>
1000544c:	0302      	lsls	r2, r0, #12
1000544e:	f000 000f 	and.w	r0, r0, #15
10005452:	f402 2270 	and.w	r2, r2, #983040	; 0xf0000
10005456:	3001      	adds	r0, #1
10005458:	4302      	orrs	r2, r0
1000545a:	2101      	movs	r1, #1
1000545c:	2305      	movs	r3, #5
1000545e:	4630      	mov	r0, r6
10005460:	f7ff fcde 	bl	10004e20 <_Unwind_VRS_Pop>
10005464:	2800      	cmp	r0, #0
10005466:	f43f af3e 	beq.w	100052e6 <__gnu_unwind_execute+0xe>
1000546a:	e762      	b.n	10005332 <__gnu_unwind_execute+0x5a>
1000546c:	f1b8 0f00 	cmp.w	r8, #0
10005470:	d01f      	beq.n	100054b2 <__gnu_unwind_execute+0x1da>
10005472:	2000      	movs	r0, #0
10005474:	e75e      	b.n	10005334 <__gnu_unwind_execute+0x5c>
10005476:	4628      	mov	r0, r5
10005478:	f7ff ff02 	bl	10005280 <next_unwind_byte>
1000547c:	4602      	mov	r2, r0
1000547e:	2800      	cmp	r0, #0
10005480:	f43f af57 	beq.w	10005332 <__gnu_unwind_execute+0x5a>
10005484:	f010 03f0 	ands.w	r3, r0, #240	; 0xf0
10005488:	d0c8      	beq.n	1000541c <__gnu_unwind_execute+0x144>
1000548a:	e752      	b.n	10005332 <__gnu_unwind_execute+0x5a>
1000548c:	4628      	mov	r0, r5
1000548e:	f7ff fef7 	bl	10005280 <next_unwind_byte>
10005492:	f000 030f 	and.w	r3, r0, #15
10005496:	0302      	lsls	r2, r0, #12
10005498:	4630      	mov	r0, r6
1000549a:	3301      	adds	r3, #1
1000549c:	f402 2270 	and.w	r2, r2, #983040	; 0xf0000
100054a0:	431a      	orrs	r2, r3
100054a2:	2301      	movs	r3, #1
100054a4:	4619      	mov	r1, r3
100054a6:	f7ff fcbb 	bl	10004e20 <_Unwind_VRS_Pop>
100054aa:	2800      	cmp	r0, #0
100054ac:	f43f af1b 	beq.w	100052e6 <__gnu_unwind_execute+0xe>
100054b0:	e73f      	b.n	10005332 <__gnu_unwind_execute+0x5a>
100054b2:	ac03      	add	r4, sp, #12
100054b4:	4643      	mov	r3, r8
100054b6:	220e      	movs	r2, #14
100054b8:	4641      	mov	r1, r8
100054ba:	4630      	mov	r0, r6
100054bc:	9400      	str	r4, [sp, #0]
100054be:	f7ff fabb 	bl	10004a38 <_Unwind_VRS_Get>
100054c2:	4643      	mov	r3, r8
100054c4:	220f      	movs	r2, #15
100054c6:	4630      	mov	r0, r6
100054c8:	4641      	mov	r1, r8
100054ca:	9400      	str	r4, [sp, #0]
100054cc:	f7ff fada 	bl	10004a84 <_Unwind_VRS_Set>
100054d0:	4640      	mov	r0, r8
100054d2:	e72f      	b.n	10005334 <__gnu_unwind_execute+0x5c>
100054d4:	4628      	mov	r0, r5
100054d6:	f7ff fed3 	bl	10005280 <next_unwind_byte>
100054da:	f000 030f 	and.w	r3, r0, #15
100054de:	0302      	lsls	r2, r0, #12
100054e0:	4630      	mov	r0, r6
100054e2:	3301      	adds	r3, #1
100054e4:	f402 2270 	and.w	r2, r2, #983040	; 0xf0000
100054e8:	431a      	orrs	r2, r3
100054ea:	2303      	movs	r3, #3
100054ec:	4619      	mov	r1, r3
100054ee:	f7ff fc97 	bl	10004e20 <_Unwind_VRS_Pop>
100054f2:	2800      	cmp	r0, #0
100054f4:	f43f aef7 	beq.w	100052e6 <__gnu_unwind_execute+0xe>
100054f8:	e71b      	b.n	10005332 <__gnu_unwind_execute+0x5a>
100054fa:	4628      	mov	r0, r5
100054fc:	f7ff fec0 	bl	10005280 <next_unwind_byte>
10005500:	4602      	mov	r2, r0
10005502:	2800      	cmp	r0, #0
10005504:	f43f af15 	beq.w	10005332 <__gnu_unwind_execute+0x5a>
10005508:	f010 03f0 	ands.w	r3, r0, #240	; 0xf0
1000550c:	f47f af11 	bne.w	10005332 <__gnu_unwind_execute+0x5a>
10005510:	2104      	movs	r1, #4
10005512:	4630      	mov	r0, r6
10005514:	f7ff fc84 	bl	10004e20 <_Unwind_VRS_Pop>
10005518:	2800      	cmp	r0, #0
1000551a:	f43f aee4 	beq.w	100052e6 <__gnu_unwind_execute+0xe>
1000551e:	e708      	b.n	10005332 <__gnu_unwind_execute+0x5a>
10005520:	f000 020f 	and.w	r2, r0, #15
10005524:	2303      	movs	r3, #3
10005526:	3201      	adds	r2, #1
10005528:	f442 2220 	orr.w	r2, r2, #655360	; 0xa0000
1000552c:	e776      	b.n	1000541c <__gnu_unwind_execute+0x144>
1000552e:	4628      	mov	r0, r5
10005530:	f7ff fea6 	bl	10005280 <next_unwind_byte>
10005534:	f000 02f0 	and.w	r2, r0, #240	; 0xf0
10005538:	f000 030f 	and.w	r3, r0, #15
1000553c:	3210      	adds	r2, #16
1000553e:	3301      	adds	r3, #1
10005540:	ea43 3202 	orr.w	r2, r3, r2, lsl #12
10005544:	e789      	b.n	1000545a <__gnu_unwind_execute+0x182>
10005546:	2300      	movs	r3, #0
10005548:	f10d 090c 	add.w	r9, sp, #12
1000554c:	220d      	movs	r2, #13
1000554e:	4630      	mov	r0, r6
10005550:	4619      	mov	r1, r3
10005552:	f8cd 9000 	str.w	r9, [sp]
10005556:	f7ff fa6f 	bl	10004a38 <_Unwind_VRS_Get>
1000555a:	4628      	mov	r0, r5
1000555c:	f7ff fe90 	bl	10005280 <next_unwind_byte>
10005560:	0602      	lsls	r2, r0, #24
10005562:	f04f 0402 	mov.w	r4, #2
10005566:	d50b      	bpl.n	10005580 <__gnu_unwind_execute+0x2a8>
10005568:	f000 007f 	and.w	r0, r0, #127	; 0x7f
1000556c:	9b03      	ldr	r3, [sp, #12]
1000556e:	40a0      	lsls	r0, r4
10005570:	3407      	adds	r4, #7
10005572:	4418      	add	r0, r3
10005574:	9003      	str	r0, [sp, #12]
10005576:	4628      	mov	r0, r5
10005578:	f7ff fe82 	bl	10005280 <next_unwind_byte>
1000557c:	0603      	lsls	r3, r0, #24
1000557e:	d4f3      	bmi.n	10005568 <__gnu_unwind_execute+0x290>
10005580:	9b03      	ldr	r3, [sp, #12]
10005582:	f000 027f 	and.w	r2, r0, #127	; 0x7f
10005586:	f8cd 9000 	str.w	r9, [sp]
1000558a:	4630      	mov	r0, r6
1000558c:	40a2      	lsls	r2, r4
1000558e:	f503 7301 	add.w	r3, r3, #516	; 0x204
10005592:	441a      	add	r2, r3
10005594:	2300      	movs	r3, #0
10005596:	9203      	str	r2, [sp, #12]
10005598:	4619      	mov	r1, r3
1000559a:	220d      	movs	r2, #13
1000559c:	f7ff fa72 	bl	10004a84 <_Unwind_VRS_Set>
100055a0:	e6a1      	b.n	100052e6 <__gnu_unwind_execute+0xe>
100055a2:	bf00      	nop

100055a4 <__gnu_unwind_frame>:
100055a4:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
100055a6:	460b      	mov	r3, r1
100055a8:	f04f 0c03 	mov.w	ip, #3
100055ac:	4618      	mov	r0, r3
100055ae:	3208      	adds	r2, #8
100055b0:	f852 3c04 	ldr.w	r3, [r2, #-4]
100055b4:	b500      	push	{lr}
100055b6:	b085      	sub	sp, #20
100055b8:	9202      	str	r2, [sp, #8]
100055ba:	a901      	add	r1, sp, #4
100055bc:	0e1a      	lsrs	r2, r3, #24
100055be:	f88d c00c 	strb.w	ip, [sp, #12]
100055c2:	021b      	lsls	r3, r3, #8
100055c4:	f88d 200d 	strb.w	r2, [sp, #13]
100055c8:	9301      	str	r3, [sp, #4]
100055ca:	f7ff fe85 	bl	100052d8 <__gnu_unwind_execute>
100055ce:	b005      	add	sp, #20
100055d0:	f85d fb04 	ldr.w	pc, [sp], #4

100055d4 <_Unwind_GetRegionStart>:
100055d4:	b508      	push	{r3, lr}
100055d6:	f7ff fe7d 	bl	100052d4 <unwind_UCB_from_context>
100055da:	6c80      	ldr	r0, [r0, #72]	; 0x48
100055dc:	bd08      	pop	{r3, pc}
100055de:	bf00      	nop

100055e0 <_Unwind_GetLanguageSpecificData>:
100055e0:	b508      	push	{r3, lr}
100055e2:	f7ff fe77 	bl	100052d4 <unwind_UCB_from_context>
100055e6:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
100055e8:	79c3      	ldrb	r3, [r0, #7]
100055ea:	3302      	adds	r3, #2
100055ec:	eb00 0083 	add.w	r0, r0, r3, lsl #2
100055f0:	bd08      	pop	{r3, pc}
100055f2:	bf00      	nop

100055f4 <__aeabi_idiv0>:
100055f4:	4770      	bx	lr
100055f6:	bf00      	nop

100055f8 <abort>:
100055f8:	2006      	movs	r0, #6
100055fa:	b508      	push	{r3, lr}
100055fc:	f000 f804 	bl	10005608 <raise>
10005600:	2001      	movs	r0, #1
10005602:	f7fe f877 	bl	100036f4 <_exit>
10005606:	bf00      	nop

10005608 <raise>:
10005608:	b538      	push	{r3, r4, r5, lr}
1000560a:	281f      	cmp	r0, #31
1000560c:	4b14      	ldr	r3, [pc, #80]	; (10005660 <raise+0x58>)
1000560e:	681d      	ldr	r5, [r3, #0]
10005610:	d820      	bhi.n	10005654 <raise+0x4c>
10005612:	f8d5 22dc 	ldr.w	r2, [r5, #732]	; 0x2dc
10005616:	4604      	mov	r4, r0
10005618:	b162      	cbz	r2, 10005634 <raise+0x2c>
1000561a:	f852 3020 	ldr.w	r3, [r2, r0, lsl #2]
1000561e:	b14b      	cbz	r3, 10005634 <raise+0x2c>
10005620:	2b01      	cmp	r3, #1
10005622:	d015      	beq.n	10005650 <raise+0x48>
10005624:	1c59      	adds	r1, r3, #1
10005626:	d00f      	beq.n	10005648 <raise+0x40>
10005628:	2500      	movs	r5, #0
1000562a:	f842 5020 	str.w	r5, [r2, r0, lsl #2]
1000562e:	4798      	blx	r3
10005630:	4628      	mov	r0, r5
10005632:	bd38      	pop	{r3, r4, r5, pc}
10005634:	4628      	mov	r0, r5
10005636:	f000 f82b 	bl	10005690 <_getpid_r>
1000563a:	4622      	mov	r2, r4
1000563c:	4601      	mov	r1, r0
1000563e:	4628      	mov	r0, r5
10005640:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
10005644:	f000 b80e 	b.w	10005664 <_kill_r>
10005648:	2316      	movs	r3, #22
1000564a:	2001      	movs	r0, #1
1000564c:	602b      	str	r3, [r5, #0]
1000564e:	bd38      	pop	{r3, r4, r5, pc}
10005650:	2000      	movs	r0, #0
10005652:	bd38      	pop	{r3, r4, r5, pc}
10005654:	2316      	movs	r3, #22
10005656:	f04f 30ff 	mov.w	r0, #4294967295
1000565a:	602b      	str	r3, [r5, #0]
1000565c:	bd38      	pop	{r3, r4, r5, pc}
1000565e:	bf00      	nop
10005660:	3800000c 	stmdacc	r0, {r2, r3}

10005664 <_kill_r>:
10005664:	b570      	push	{r4, r5, r6, lr}
10005666:	460c      	mov	r4, r1
10005668:	4603      	mov	r3, r0
1000566a:	4d08      	ldr	r5, [pc, #32]	; (1000568c <_kill_r+0x28>)
1000566c:	2600      	movs	r6, #0
1000566e:	4620      	mov	r0, r4
10005670:	4611      	mov	r1, r2
10005672:	461c      	mov	r4, r3
10005674:	602e      	str	r6, [r5, #0]
10005676:	f7fe f835 	bl	100036e4 <_kill>
1000567a:	1c43      	adds	r3, r0, #1
1000567c:	d000      	beq.n	10005680 <_kill_r+0x1c>
1000567e:	bd70      	pop	{r4, r5, r6, pc}
10005680:	682b      	ldr	r3, [r5, #0]
10005682:	2b00      	cmp	r3, #0
10005684:	d0fb      	beq.n	1000567e <_kill_r+0x1a>
10005686:	6023      	str	r3, [r4, #0]
10005688:	bd70      	pop	{r4, r5, r6, pc}
1000568a:	bf00      	nop
1000568c:	38008d10 	stmdacc	r0, {r4, r8, sl, fp, pc}

10005690 <_getpid_r>:
10005690:	f7fe b826 	b.w	100036e0 <_getpid>

10005694 <_init>:
10005694:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10005696:	bf00      	nop
10005698:	bcf8      	pop	{r3, r4, r5, r6, r7}
1000569a:	bc08      	pop	{r3}
1000569c:	469e      	mov	lr, r3
1000569e:	4770      	bx	lr

100056a0 <_fini>:
100056a0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
100056a2:	bf00      	nop
100056a4:	bcf8      	pop	{r3, r4, r5, r6, r7}
100056a6:	bc08      	pop	{r3}
100056a8:	469e      	mov	lr, r3
100056aa:	4770      	bx	lr
100056ac:	6e69616d 	powvsez	f6, f1, #5.0
100056b0:	7361745f 	cmnvc	r1, #1593835520	; 0x5f000000
100056b4:	0000006b 	andeq	r0, r0, fp, rrx
100056b8:	6e69616d 	powvsez	f6, f1, #5.0
100056bc:	73617420 	cmnvc	r1, #32, 8	; 0x20000000
100056c0:	7263206b 	rsbvc	r2, r3, #107	; 0x6b
100056c4:	65746165 	ldrbvs	r6, [r4, #-357]!	; 0xfffffe9b
100056c8:	69616620 	stmdbvs	r1!, {r5, r9, sl, sp, lr}^
100056cc:	2864656c 	stmdacs	r4!, {r2, r3, r5, r6, r8, sl, sp, lr}^
100056d0:	2e296425 	cdpcs	4, 2, cr6, cr9, cr5, {1}
100056d4:	00000a0d 	andeq	r0, r0, sp, lsl #20
100056d8:	6c6c6568 	cfstr64vs	mvdx6, [ip], #-416	; 0xfffffe60
100056dc:	6874206f 	ldmdavs	r4!, {r0, r1, r2, r3, r5, r6, sp}^
100056e0:	69207369 	stmdbvs	r0!, {r0, r3, r5, r6, r8, r9, ip, sp, lr}
100056e4:	72462073 	subvc	r2, r6, #115	; 0x73
100056e8:	54526565 	ldrbpl	r6, [r2], #-1381	; 0xfffffa9b
100056ec:	0d2e534f 	stceq	3, cr5, [lr, #-316]!	; 0xfffffec4
100056f0:	00000000 	andeq	r0, r0, r0
100056f4:	72617453 	rsbvc	r7, r1, #1392508928	; 0x53000000
100056f8:	00000d74 	andeq	r0, r0, r4, ror sp
100056fc:	6c6c6568 	cfstr64vs	mvdx6, [ip], #-416	; 0xfffffe60
10005700:	6f77206f 	svcvs	0x0077206f
10005704:	20646c72 	rsbcs	r6, r4, r2, ror ip
10005708:	6425202d 	strtvs	r2, [r5], #-45	; 0xffffffd3
1000570c:	000a0d2e 	andeq	r0, sl, lr, lsr #26
10005710:	00696e66 	rsbeq	r6, r9, r6, ror #28
10005714:	2b696e66 	blcs	11a610b4 <__copy_table_end__+0x1a5b420>
10005718:	00000000 	andeq	r0, r0, r0
1000571c:	006e616e 	rsbeq	r6, lr, lr, ror #2
10005720:	2d696e66 	stclcs	14, cr6, [r9, #-408]!	; 0xfffffe68
10005724:	00000000 	andeq	r0, r0, r0

10005728 <pow10.0>:
10005728:	00000000 	andeq	r0, r0, r0
1000572c:	3ff00000 	svccc	0x00f00000	; IMB
10005730:	00000000 	andeq	r0, r0, r0
10005734:	40240000 	eormi	r0, r4, r0
10005738:	00000000 	andeq	r0, r0, r0
1000573c:	40590000 	subsmi	r0, r9, r0
10005740:	00000000 	andeq	r0, r0, r0
10005744:	408f4000 	addmi	r4, pc, r0
10005748:	00000000 	andeq	r0, r0, r0
1000574c:	40c38800 	sbcmi	r8, r3, r0, lsl #16
10005750:	00000000 	andeq	r0, r0, r0
10005754:	40f86a00 	rscsmi	r6, r8, r0, lsl #20
10005758:	00000000 	andeq	r0, r0, r0
1000575c:	412e8480 	smlawbmi	lr, r0, r4, r8
10005760:	00000000 	andeq	r0, r0, r0
10005764:	416312d0 	ldrdmi	r1, [r3, #-32]!	; 0xffffffe0
10005768:	00000000 	andeq	r0, r0, r0
1000576c:	4197d784 	orrsmi	sp, r7, r4, lsl #15
10005770:	00000000 	andeq	r0, r0, r0
10005774:	41cdcd65 	bicmi	ip, sp, r5, ror #26
10005778:	45584520 	ldrbmi	r4, [r8, #-1312]	; 0xfffffae0
1000577c:	5445525f 	strbpl	r5, [r5], #-607	; 0xfffffda1
10005780:	3a4e5255 	bcc	1139a0dc <__copy_table_end__+0x1394448>
10005784:	25783020 	ldrbcs	r3, [r8, #-32]!	; 0xffffffe0
10005788:	20583830 	subscs	r3, r8, r0, lsr r8
1000578c:	00000a0d 	andeq	r0, r0, sp, lsl #20
10005790:	65646f43 	strbvs	r6, [r4, #-3907]!	; 0xfffff0bd
10005794:	61745320 	cmnvs	r4, r0, lsr #6
10005798:	5b3a6b63 	blpl	10ea052c <__copy_table_end__+0xe9a898>
1000579c:	58383025 	ldmdapl	r8!, {r0, r2, r5, ip, sp}
100057a0:	25202d20 	strcs	r2, [r0, #-3360]!	; 0xfffff2e0
100057a4:	5d583830 	ldclpl	8, cr3, [r8, #-192]	; 0xffffff40
100057a8:	6973202c 	ldmdbvs	r3!, {r2, r3, r5, sp}^
100057ac:	253a657a 	ldrcs	r6, [sl, #-1402]!	; 0xfffffa86
100057b0:	000a0d64 	andeq	r0, sl, r4, ror #26
100057b4:	65646f43 	strbvs	r6, [r4, #-3907]!	; 0xfffff0bd
100057b8:	78655420 	stmdavc	r5!, {r5, sl, ip, lr}^
100057bc:	5b3a2074 	blpl	10e8d994 <__copy_table_end__+0xe87d00>
100057c0:	58383025 	ldmdapl	r8!, {r0, r2, r5, ip, sp}
100057c4:	25202d20 	strcs	r2, [r0, #-3360]!	; 0xfffff2e0
100057c8:	5d583830 	ldclpl	8, cr3, [r8, #-192]	; 0xffffff40
100057cc:	6973202c 	ldmdbvs	r3!, {r2, r3, r5, sp}^
100057d0:	253a657a 	ldrcs	r6, [sl, #-1402]!	; 0xfffffa86
100057d4:	000a0d64 	andeq	r0, sl, r4, ror #26
100057d8:	65646f43 	strbvs	r6, [r4, #-3907]!	; 0xfffff0bd
100057dc:	61745320 	cmnvs	r4, r0, lsr #6
100057e0:	47206b63 	strmi	r6, [r0, -r3, ror #22]!
100057e4:	74776f72 	ldrbtvc	r6, [r7], #-3954	; 0xfffff08e
100057e8:	6f442068 	svcvs	0x00442068
100057ec:	61776e77 	cmnvs	r7, r7, ror lr
100057f0:	253a6472 	ldrcs	r6, [sl, #-1138]!	; 0xfffffb8e
100057f4:	000a0d64 	andeq	r0, sl, r4, ror #26
100057f8:	72614820 	rsbvc	r4, r1, #32, 16	; 0x200000
100057fc:	75614664 	strbvc	r4, [r1, #-1636]!	; 0xfffff99c
10005800:	4920746c 	stmdbmi	r0!, {r2, r3, r5, r6, sl, ip, sp, lr}
10005804:	726f666e 	rsbvc	r6, pc, #115343360	; 0x6e00000
10005808:	6974616d 	ldmdbvs	r4!, {r0, r2, r3, r5, r6, r8, sp, lr}^
1000580c:	44206e6f 	strtmi	r6, [r0], #-3695	; 0xfffff191
10005810:	20706d75 	rsbscs	r6, r0, r5, ror sp
10005814:	0000000d 	andeq	r0, r0, sp
10005818:	61745320 	cmnvs	r4, r0, lsr #6
1000581c:	46206b63 	strtmi	r6, [r0], -r3, ror #22
10005820:	656d6172 	strbvs	r6, [sp, #-370]!	; 0xfffffe8e
10005824:	0d202020 	stceq	0, cr2, [r0, #-128]!	; 0xffffff80
10005828:	00000000 	andeq	r0, r0, r0
1000582c:	20305220 	eorscs	r5, r0, r0, lsr #4
10005830:	203d2020 	eorscs	r2, sp, r0, lsr #32
10005834:	30257830 	eorcc	r7, r5, r0, lsr r8
10005838:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
1000583c:	0000000a 	andeq	r0, r0, sl
10005840:	20315220 	eorscs	r5, r1, r0, lsr #4
10005844:	203d2020 	eorscs	r2, sp, r0, lsr #32
10005848:	30257830 	eorcc	r7, r5, r0, lsr r8
1000584c:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
10005850:	0000000a 	andeq	r0, r0, sl
10005854:	20325220 	eorscs	r5, r2, r0, lsr #4
10005858:	203d2020 	eorscs	r2, sp, r0, lsr #32
1000585c:	30257830 	eorcc	r7, r5, r0, lsr r8
10005860:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
10005864:	0000000a 	andeq	r0, r0, sl
10005868:	20335220 	eorscs	r5, r3, r0, lsr #4
1000586c:	203d2020 	eorscs	r2, sp, r0, lsr #32
10005870:	30257830 	eorcc	r7, r5, r0, lsr r8
10005874:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
10005878:	0000000a 	andeq	r0, r0, sl
1000587c:	20345220 	eorscs	r5, r4, r0, lsr #4
10005880:	203d2020 	eorscs	r2, sp, r0, lsr #32
10005884:	30257830 	eorcc	r7, r5, r0, lsr r8
10005888:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
1000588c:	0000000a 	andeq	r0, r0, sl
10005890:	20355220 	eorscs	r5, r5, r0, lsr #4
10005894:	203d2020 	eorscs	r2, sp, r0, lsr #32
10005898:	30257830 	eorcc	r7, r5, r0, lsr r8
1000589c:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
100058a0:	0000000a 	andeq	r0, r0, sl
100058a4:	20365220 	eorscs	r5, r6, r0, lsr #4
100058a8:	203d2020 	eorscs	r2, sp, r0, lsr #32
100058ac:	30257830 	eorcc	r7, r5, r0, lsr r8
100058b0:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
100058b4:	0000000a 	andeq	r0, r0, sl
100058b8:	20375220 	eorscs	r5, r7, r0, lsr #4
100058bc:	203d2020 	eorscs	r2, sp, r0, lsr #32
100058c0:	30257830 	eorcc	r7, r5, r0, lsr r8
100058c4:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
100058c8:	0000000a 	andeq	r0, r0, sl
100058cc:	20385220 	eorscs	r5, r8, r0, lsr #4
100058d0:	203d2020 	eorscs	r2, sp, r0, lsr #32
100058d4:	30257830 	eorcc	r7, r5, r0, lsr r8
100058d8:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
100058dc:	0000000a 	andeq	r0, r0, sl
100058e0:	20395220 	eorscs	r5, r9, r0, lsr #4
100058e4:	203d2020 	eorscs	r2, sp, r0, lsr #32
100058e8:	30257830 	eorcc	r7, r5, r0, lsr r8
100058ec:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
100058f0:	0000000a 	andeq	r0, r0, sl
100058f4:	30315220 	eorscc	r5, r1, r0, lsr #4
100058f8:	203d2020 	eorscs	r2, sp, r0, lsr #32
100058fc:	30257830 	eorcc	r7, r5, r0, lsr r8
10005900:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
10005904:	0000000a 	andeq	r0, r0, sl
10005908:	31315220 	teqcc	r1, r0, lsr #4
1000590c:	203d2020 	eorscs	r2, sp, r0, lsr #32
10005910:	30257830 	eorcc	r7, r5, r0, lsr r8
10005914:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
10005918:	0000000a 	andeq	r0, r0, sl
1000591c:	32315220 	eorscc	r5, r1, #32, 4
10005920:	203d2020 	eorscs	r2, sp, r0, lsr #32
10005924:	30257830 	eorcc	r7, r5, r0, lsr r8
10005928:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
1000592c:	0000000a 	andeq	r0, r0, sl
10005930:	20524c20 	subscs	r4, r2, r0, lsr #24
10005934:	203d2020 	eorscs	r2, sp, r0, lsr #32
10005938:	30257830 	eorcc	r7, r5, r0, lsr r8
1000593c:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
10005940:	0000000a 	andeq	r0, r0, sl
10005944:	20435020 	subcs	r5, r3, r0, lsr #32
10005948:	203d2020 	eorscs	r2, sp, r0, lsr #32
1000594c:	30257830 	eorcc	r7, r5, r0, lsr r8
10005950:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
10005954:	0000000a 	andeq	r0, r0, sl
10005958:	52535020 	subspl	r5, r3, #32
1000595c:	203d2020 	eorscs	r2, sp, r0, lsr #32
10005960:	30257830 	eorcc	r7, r5, r0, lsr r8
10005964:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
10005968:	0000000a 	andeq	r0, r0, sl
1000596c:	61745320 	cmnvs	r4, r0, lsr #6
10005970:	43206b63 			; <UNDEFINED> instruction: 0x43206b63
10005974:	3a6c6c61 	bcc	11b20b00 <__copy_table_end__+0x1b1ae6c>
10005978:	00000020 	andeq	r0, r0, r0, lsr #32
1000597c:	58383025 	ldmdapl	r8!, {r0, r2, r5, ip, sp}
10005980:	00000020 	andeq	r0, r0, r0, lsr #32
10005984:	00000d20 	andeq	r0, r0, r0, lsr #26
10005988:	74694220 	strbtvc	r4, [r9], #-544	; 0xfffffde0
1000598c:	78452030 	stmdavc	r5, {r4, r5, sp}^
10005990:	74706563 	ldrbtvc	r6, [r0], #-1379	; 0xfffffa9d
10005994:	63655320 	cmnvs	r5, #32, 6	; 0x80000000
10005998:	74697275 	strbtvc	r7, [r9], #-629	; 0xfffffd8b
1000599c:	74532079 	ldrbvc	r2, [r3], #-121	; 0xffffff87
100059a0:	3a657461 	bcc	11962b2c <__copy_table_end__+0x195ce98>
100059a4:	00000020 	andeq	r0, r0, r0, lsr #32
100059a8:	6573555b 	ldrbvs	r5, [r3, #-1371]!	; 0xfffffaa5
100059ac:	63655320 	cmnvs	r5, #32, 6	; 0x80000000
100059b0:	74697275 	strbtvc	r7, [r9], #-629	; 0xfffffd8b
100059b4:	74532079 	ldrbvc	r2, [r3], #-121	; 0xffffff87
100059b8:	20657461 	rsbcs	r7, r5, r1, ror #8
100059bc:	5d202020 	stcpl	0, cr2, [r0, #-128]!	; 0xffffff80
100059c0:	00000d2e 	andeq	r0, r0, lr, lsr #26
100059c4:	6573555b 	ldrbvs	r5, [r3, #-1371]!	; 0xfffffaa5
100059c8:	746f4e20 	strbtvc	r4, [pc], #-3616	; 100059d0 <pow10.0+0x2a8>
100059cc:	63655320 	cmnvs	r5, #32, 6	; 0x80000000
100059d0:	74697275 	strbtvc	r7, [r9], #-629	; 0xfffffd8b
100059d4:	74532079 	ldrbvc	r2, [r3], #-121	; 0xffffff87
100059d8:	5d657461 	cfstrdpl	mvd7, [r5, #-388]!	; 0xfffffe7c
100059dc:	00000d2e 	andeq	r0, r0, lr, lsr #26
100059e0:	74694220 	strbtvc	r4, [r9], #-544	; 0xfffffde0
100059e4:	74532032 	ldrbvc	r2, [r3], #-50	; 0xffffffce
100059e8:	206b6361 	rsbcs	r6, fp, r1, ror #6
100059ec:	6e696f50 	mcrvs	15, 3, r6, cr9, cr0, {2}
100059f0:	65532074 	ldrbvs	r2, [r3, #-116]	; 0xffffff8c
100059f4:	7463656c 	strbtvc	r6, [r3], #-1388	; 0xfffffa94
100059f8:	2020203a 	eorcs	r2, r0, sl, lsr r0
100059fc:	00000020 	andeq	r0, r0, r0, lsr #32
10005a00:	6573555b 	ldrbvs	r5, [r3, #-1371]!	; 0xfffffaa5
10005a04:	50535020 	subspl	r5, r3, r0, lsr #32
10005a08:	20202020 	eorcs	r2, r0, r0, lsr #32
10005a0c:	20202020 	eorcs	r2, r0, r0, lsr #32
10005a10:	20202020 	eorcs	r2, r0, r0, lsr #32
10005a14:	5d202020 	stcpl	0, cr2, [r0, #-128]!	; 0xffffff80
10005a18:	00000d2e 	andeq	r0, r0, lr, lsr #26
10005a1c:	6573555b 	ldrbvs	r5, [r3, #-1371]!	; 0xfffffaa5
10005a20:	50534d20 	subspl	r4, r3, r0, lsr #26
10005a24:	20202020 	eorcs	r2, r0, r0, lsr #32
10005a28:	20202020 	eorcs	r2, r0, r0, lsr #32
10005a2c:	20202020 	eorcs	r2, r0, r0, lsr #32
10005a30:	5d202020 	stcpl	0, cr2, [r0, #-128]!	; 0xffffff80
10005a34:	00000d2e 	andeq	r0, r0, lr, lsr #26
10005a38:	74694220 	strbtvc	r4, [r9], #-544	; 0xfffffde0
10005a3c:	72502033 	subsvc	r2, r0, #51	; 0x33
10005a40:	4d20636f 	stcmi	3, cr6, [r0, #-444]!	; 0xfffffe44
10005a44:	2065646f 	rsbcs	r6, r5, pc, ror #8
10005a48:	6f666542 	svcvs	0x00666542
10005a4c:	49206572 	stmdbmi	r0!, {r1, r4, r5, r6, r8, sl, sp, lr}
10005a50:	203a5152 	eorscs	r5, sl, r2, asr r1
10005a54:	00000020 	andeq	r0, r0, r0, lsr #32
10005a58:	6573555b 	ldrbvs	r5, [r3, #-1371]!	; 0xfffffaa5
10005a5c:	72685420 	rsbvc	r5, r8, #32, 8	; 0x20000000
10005a60:	20646165 	rsbcs	r6, r4, r5, ror #2
10005a64:	65646f4d 	strbvs	r6, [r4, #-3917]!	; 0xfffff0b3
10005a68:	20202020 	eorcs	r2, r0, r0, lsr #32
10005a6c:	5d202020 	stcpl	0, cr2, [r0, #-128]!	; 0xffffff80
10005a70:	00000d2e 	andeq	r0, r0, lr, lsr #26
10005a74:	6573555b 	ldrbvs	r5, [r3, #-1371]!	; 0xfffffaa5
10005a78:	6f725020 	svcvs	0x00725020
10005a7c:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
10005a80:	646f4d20 	strbtvs	r4, [pc], #-3360	; 10005a88 <pow10.0+0x360>
10005a84:	20202065 	eorcs	r2, r0, r5, rrx
10005a88:	5d202020 	stcpl	0, cr2, [r0, #-128]!	; 0xffffff80
10005a8c:	00000d2e 	andeq	r0, r0, lr, lsr #26
10005a90:	74694220 	strbtvc	r4, [r9], #-544	; 0xfffffde0
10005a94:	74532034 	ldrbvc	r2, [r3], #-52	; 0xffffffcc
10005a98:	206b6361 	rsbcs	r6, fp, r1, ror #6
10005a9c:	6d617246 	sfmvs	f7, 2, [r1, #-280]!	; 0xfffffee8
10005aa0:	79542065 	ldmdbvc	r4, {r0, r2, r5, r6, sp}^
10005aa4:	203a6570 	eorscs	r6, sl, r0, ror r5
10005aa8:	20202020 	eorcs	r2, r0, r0, lsr #32
10005aac:	00000020 	andeq	r0, r0, r0, lsr #32
10005ab0:	6573555b 	ldrbvs	r5, [r3, #-1371]!	; 0xfffffaa5
10005ab4:	61745320 	cmnvs	r4, r0, lsr #6
10005ab8:	7261646e 	rsbvc	r6, r1, #1845493760	; 0x6e000000
10005abc:	72462064 	subvc	r2, r6, #100	; 0x64
10005ac0:	20656d61 	rsbcs	r6, r5, r1, ror #26
10005ac4:	5d202020 	stcpl	0, cr2, [r0, #-128]!	; 0xffffff80
10005ac8:	00000d2e 	andeq	r0, r0, lr, lsr #26
10005acc:	6573555b 	ldrbvs	r5, [r3, #-1371]!	; 0xfffffaa5
10005ad0:	74784520 	ldrbtvc	r4, [r8], #-1312	; 0xfffffae0
10005ad4:	65646e65 	strbvs	r6, [r4, #-3685]!	; 0xfffff19b
10005ad8:	72462064 	subvc	r2, r6, #100	; 0x64
10005adc:	20656d61 	rsbcs	r6, r5, r1, ror #26
10005ae0:	5d202020 	stcpl	0, cr2, [r0, #-128]!	; 0xffffff80
10005ae4:	00000d2e 	andeq	r0, r0, lr, lsr #26
10005ae8:	74694220 	strbtvc	r4, [r9], #-544	; 0xfffffde0
10005aec:	65442035 	strbvs	r2, [r4, #-53]	; 0xffffffcb
10005af0:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
10005af4:	61432074 	hvcvs	12804	; 0x3204
10005af8:	52206c6c 	eorpl	r6, r0, #108, 24	; 0x6c00
10005afc:	3a656c75 	bcc	11960cd8 <__copy_table_end__+0x195b044>
10005b00:	20202020 	eorcs	r2, r0, r0, lsr #32
10005b04:	00000020 	andeq	r0, r0, r0, lsr #32
10005b08:	6573555b 	ldrbvs	r5, [r3, #-1371]!	; 0xfffffaa5
10005b0c:	66654420 	strbtvs	r4, [r5], -r0, lsr #8
10005b10:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
10005b14:	6c755220 	lfmvs	f5, 2, [r5], #-128	; 0xffffff80
10005b18:	20202065 	eorcs	r2, r0, r5, rrx
10005b1c:	5d202020 	stcpl	0, cr2, [r0, #-128]!	; 0xffffff80
10005b20:	00000d2e 	andeq	r0, r0, lr, lsr #26
10005b24:	6573555b 	ldrbvs	r5, [r3, #-1371]!	; 0xfffffaa5
10005b28:	746f4e20 	strbtvc	r4, [pc], #-3616	; 10005b30 <pow10.0+0x408>
10005b2c:	66654420 	strbtvs	r4, [r5], -r0, lsr #8
10005b30:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
10005b34:	6c755220 	lfmvs	f5, 2, [r5], #-128	; 0xffffff80
10005b38:	5d202065 	stcpl	0, cr2, [r0, #-404]!	; 0xfffffe6c
10005b3c:	00000d2e 	andeq	r0, r0, lr, lsr #26
10005b40:	74694220 	strbtvc	r4, [r9], #-544	; 0xfffffde0
10005b44:	65532036 	ldrbvs	r2, [r3, #-54]	; 0xffffffca
10005b48:	69727563 	ldmdbvs	r2!, {r0, r1, r5, r6, r8, sl, ip, sp, lr}^
10005b4c:	53207974 			; <UNDEFINED> instruction: 0x53207974
10005b50:	6b636174 	blvs	118de128 <__copy_table_end__+0x18d8494>
10005b54:	2020203a 	eorcs	r2, r0, sl, lsr r0
10005b58:	20202020 	eorcs	r2, r0, r0, lsr #32
10005b5c:	00000020 	andeq	r0, r0, r0, lsr #32
10005b60:	6573555b 	ldrbvs	r5, [r3, #-1371]!	; 0xfffffaa5
10005b64:	63655320 	cmnvs	r5, #32, 6	; 0x80000000
10005b68:	74697275 	strbtvc	r7, [r9], #-629	; 0xfffffd8b
10005b6c:	74532079 	ldrbvc	r2, [r3], #-121	; 0xffffff87
10005b70:	206b6361 	rsbcs	r6, fp, r1, ror #6
10005b74:	5d202020 	stcpl	0, cr2, [r0, #-128]!	; 0xffffff80
10005b78:	00000d2e 	andeq	r0, r0, lr, lsr #26
10005b7c:	6573555b 	ldrbvs	r5, [r3, #-1371]!	; 0xfffffaa5
10005b80:	746f4e20 	strbtvc	r4, [pc], #-3616	; 10005b88 <pow10.0+0x460>
10005b84:	63655320 	cmnvs	r5, #32, 6	; 0x80000000
10005b88:	74697275 	strbtvc	r7, [r9], #-629	; 0xfffffd8b
10005b8c:	74532079 	ldrbvc	r2, [r3], #-121	; 0xffffff87
10005b90:	5d6b6361 	stclpl	3, cr6, [fp, #-388]!	; 0xfffffe7c
10005b94:	00000d2e 	andeq	r0, r0, lr, lsr #26
10005b98:	454c4449 	strbmi	r4, [ip, #-1097]	; 0xfffffbb7
10005b9c:	00000000 	andeq	r0, r0, r0
10005ba0:	20726d54 	rsbscs	r6, r2, r4, asr sp
10005ba4:	00637653 	rsbeq	r7, r3, r3, asr r6

10005ba8 <_global_impure_ptr>:
10005ba8:	38000010 	stmdacc	r0, {r4}

10005bac <__EH_FRAME_BEGIN__>:
10005bac:	00000000 	andeq	r0, r0, r0

Disassembly of section .ARM.extab:

10005bb0 <__exidx_start-0x18>:
10005bb0:	8101b108 	tsthi	r1, r8, lsl #2
10005bb4:	8400b0b0 	strhi	fp, [r0], #-176	; 0xffffff50
10005bb8:	00000000 	andeq	r0, r0, r0
10005bbc:	8101b108 	tsthi	r1, r8, lsl #2
10005bc0:	8400b0b0 	strhi	fp, [r0], #-176	; 0xffffff50
10005bc4:	00000000 	andeq	r0, r0, r0

Disassembly of section .ARM.exidx:

10005bc8 <__exidx_end-0xc0>:
10005bc8:	7fffdb38 	svcvc	0x00ffdb38
10005bcc:	80b0b0b0 	ldrhthi	fp, [r0], r0
10005bd0:	7fffdba0 	svcvc	0x00ffdba0
10005bd4:	00000001 	andeq	r0, r0, r1
10005bd8:	7fffeb54 	svcvc	0x00ffeb54
10005bdc:	8002a9b0 			; <UNDEFINED> instruction: 0x8002a9b0
10005be0:	7fffebe8 	svcvc	0x00ffebe8
10005be4:	80a8b0b0 	strhthi	fp, [r8], r0
10005be8:	7fffec38 	svcvc	0x00ffec38
10005bec:	00000001 	andeq	r0, r0, r1
10005bf0:	7fffec44 	svcvc	0x00ffec44
10005bf4:	80aab0b0 	strhthi	fp, [sl], r0
10005bf8:	7fffec7c 	svcvc	0x00ffec7c
10005bfc:	80b273ae 	adcshi	r7, r2, lr, lsr #7
10005c00:	7fffed50 	svcvc	0x00ffed50
10005c04:	00000001 	andeq	r0, r0, r1
10005c08:	7fffed4c 	svcvc	0x00ffed4c
10005c0c:	80383fab 	eorshi	r3, r8, fp, lsr #31
10005c10:	7fffedac 	svcvc	0x00ffedac
10005c14:	00000001 	andeq	r0, r0, r1
10005c18:	7fffedb8 	svcvc	0x00ffedb8
10005c1c:	80aab0b0 	strhthi	fp, [sl], r0
10005c20:	7fffedf4 	svcvc	0x00ffedf4
10005c24:	00000001 	andeq	r0, r0, r1
10005c28:	7fffeea8 	svcvc	0x00ffeea8
10005c2c:	80b20eab 	adcshi	r0, r2, fp, lsr #29
10005c30:	7fffef1c 	svcvc	0x00ffef1c
10005c34:	8008afb0 			; <UNDEFINED> instruction: 0x8008afb0
10005c38:	7ffff1dc 	svcvc	0x00fff1dc
10005c3c:	00000001 	andeq	r0, r0, r1
10005c40:	7ffff1e0 	svcvc	0x00fff1e0
10005c44:	80023fad 	andhi	r3, r2, sp, lsr #31
10005c48:	7ffff48c 	svcvc	0x00fff48c
10005c4c:	00000001 	andeq	r0, r0, r1
10005c50:	7ffff66c 	svcvc	0x00fff66c
10005c54:	8003a8b0 			; <UNDEFINED> instruction: 0x8003a8b0
10005c58:	7ffff67c 	svcvc	0x00fff67c
10005c5c:	00000001 	andeq	r0, r0, r1
10005c60:	7ffff678 	svcvc	0x00fff678
10005c64:	8004adb0 			; <UNDEFINED> instruction: 0x8004adb0
10005c68:	7ffff93c 	svcvc	0x00fff93c
10005c6c:	80048400 	andhi	r8, r4, r0, lsl #8
10005c70:	7ffff964 	svcvc	0x00fff964
10005c74:	7fffff3c 	svcvc	0x00ffff3c
10005c78:	7ffff968 	svcvc	0x00fff968
10005c7c:	7fffff40 	svcvc	0x00ffff40
10005c80:	7ffff974 	svcvc	0x00fff974
10005c84:	00000001 	andeq	r0, r0, r1

Disassembly of section .copy.table:

10005c88 <__copy_table_start__>:
10005c88:	10005c94 	mulne	r0, r4, ip
10005c8c:	38000000 	stmdacc	r0, {}	; <UNPREDICTABLE>
10005c90:	00000112 	andeq	r0, r0, r2, lsl r1

Disassembly of section .data:

38000000 <SystemCoreClock>:
38000000:	017d7840 	cmneq	sp, r0, asr #16

38000004 <uxTopUsedPriority>:
static const volatile UBaseType_t uxTopUsedPriority = configMAX_PRIORITIES - 1U;
38000004:	00000004 	andeq	r0, r0, r4

38000008 <ulCriticalNesting>:
PRIVILEGED_DATA static volatile uint32_t ulCriticalNesting = 0xaaaaaaaaUL;
38000008:	aaaaaaaa 	bge	36aaaab8 <__copy_table_end__+0x26aa4e24>

3800000c <_impure_ptr>:
3800000c:	38000010 	stmdacc	r0, {r4}

38000010 <impure_data>:
38000010:	00000000 	andeq	r0, r0, r0
38000014:	380002fc 	stmdacc	r0, {r2, r3, r4, r5, r6, r7, r9}
38000018:	38000364 	stmdacc	r0, {r2, r5, r6, r8, r9}
3800001c:	380003cc 	stmdacc	r0, {r2, r3, r6, r7, r8, r9}
	...
380000b8:	00000001 	andeq	r0, r0, r1
380000bc:	00000000 	andeq	r0, r0, r0
380000c0:	abcd330e 	blge	3734cd00 <__copy_table_end__+0x2734706c>
380000c4:	e66d1234 			; <UNDEFINED> instruction: 0xe66d1234
380000c8:	0005deec 	andeq	sp, r5, ip, ror #29
380000cc:	0000000b 	andeq	r0, r0, fp
	...

38000438 <__atexit_recursive_mutex>:
38000438:	38008d0c 	stmdacc	r0, {r2, r3, r8, sl, fp, pc}

3800043c <__init_array_start>:
3800043c:	10003955 	andne	r3, r0, r5, asr r9

38000440 <__frame_dummy_init_array_entry>:
38000440:	100007e5 	andne	r0, r0, r5, ror #15

38000444 <__do_global_dtors_aux_fini_array_entry>:
38000444:	100007c1 	andne	r0, r0, r1, asr #15

Disassembly of section .bss:

38000448 <__bss_start__>:
38000448:	00000000 	andeq	r0, r0, r0

3800044c <object.0>:
	...

38000464 <main_task.0>:
38000464:	00000000 	andeq	r0, r0, r0

38000468 <ucHeap>:
	...

38008468 <buffer.0>:
	...

38008568 <fd_main_stack_base>:
volatile unsigned int fd_main_stack_base = 0;
38008568:	00000000 	andeq	r0, r0, r0

3800856c <fd_main_stack_full>:
volatile unsigned int fd_main_stack_full = 0;
3800856c:	00000000 	andeq	r0, r0, r0

38008570 <frame.1>:
	...

380085b0 <pxCurrentTCB>:
    portDONT_DISCARD PRIVILEGED_DATA TCB_t * volatile pxCurrentTCB = NULL;
380085b0:	00000000 	andeq	r0, r0, r0

380085b4 <pxDelayedTaskList>:
PRIVILEGED_DATA static List_t * volatile pxDelayedTaskList;              /**< Points to the delayed task list currently being used. */
380085b4:	00000000 	andeq	r0, r0, r0

380085b8 <pxOverflowDelayedTaskList>:
PRIVILEGED_DATA static List_t * volatile pxOverflowDelayedTaskList;      /**< Points to the delayed task list currently being used to hold tasks that have overflowed the current tick count. */
380085b8:	00000000 	andeq	r0, r0, r0

380085bc <pxReadyTasksLists>:
	...

38008648 <uxCurrentNumberOfTasks>:
PRIVILEGED_DATA static volatile UBaseType_t uxCurrentNumberOfTasks = ( UBaseType_t ) 0U;
38008648:	00000000 	andeq	r0, r0, r0

3800864c <uxDeletedTasksWaitingCleanUp>:
    PRIVILEGED_DATA static volatile UBaseType_t uxDeletedTasksWaitingCleanUp = ( UBaseType_t ) 0U;
3800864c:	00000000 	andeq	r0, r0, r0

38008650 <uxIdleTaskStack.2>:
	...

38008850 <uxSchedulerSuspended>:
PRIVILEGED_DATA static volatile UBaseType_t uxSchedulerSuspended = ( UBaseType_t ) 0U;
38008850:	00000000 	andeq	r0, r0, r0

38008854 <uxTaskNumber>:
PRIVILEGED_DATA static UBaseType_t uxTaskNumber = ( UBaseType_t ) 0U;
38008854:	00000000 	andeq	r0, r0, r0

38008858 <uxTimerTaskStack.0>:
	...

38008a58 <uxTopReadyPriority>:
PRIVILEGED_DATA static volatile UBaseType_t uxTopReadyPriority = tskIDLE_PRIORITY;
38008a58:	00000000 	andeq	r0, r0, r0

38008a5c <xDelayedTaskList1>:
	...

38008a78 <xDelayedTaskList2>:
	...

38008a94 <xIdleTaskHandles>:
PRIVILEGED_DATA static TaskHandle_t xIdleTaskHandles[ configNUMBER_OF_CORES ];       /**< Holds the handles of the idle tasks.  The idle tasks are created automatically when the scheduler is started. */
38008a94:	00000000 	andeq	r0, r0, r0

38008a98 <xIdleTaskTCB.3>:
	...

38008ae4 <xNextTaskUnblockTime>:
PRIVILEGED_DATA static volatile TickType_t xNextTaskUnblockTime = ( TickType_t ) 0U; /* Initialised to portMAX_DELAY before the scheduler starts. */
38008ae4:	00000000 	andeq	r0, r0, r0

38008ae8 <xNumOfOverflows>:
PRIVILEGED_DATA static volatile BaseType_t xNumOfOverflows = ( BaseType_t ) 0;
38008ae8:	00000000 	andeq	r0, r0, r0

38008aec <xPendedTicks>:
PRIVILEGED_DATA static volatile TickType_t xPendedTicks = ( TickType_t ) 0U;
38008aec:	00000000 	andeq	r0, r0, r0

38008af0 <xPendingReadyList>:
	...

38008b0c <xSchedulerRunning>:
PRIVILEGED_DATA static volatile BaseType_t xSchedulerRunning = pdFALSE;
38008b0c:	00000000 	andeq	r0, r0, r0

38008b10 <xSuspendedTaskList>:
	...

38008b2c <xTasksWaitingTermination>:
	...

38008b48 <xTickCount>:
PRIVILEGED_DATA static volatile TickType_t xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
38008b48:	00000000 	andeq	r0, r0, r0

38008b4c <xTimerTaskTCB.1>:
	...

38008b98 <xYieldPendings>:
PRIVILEGED_DATA static volatile BaseType_t xYieldPendings[ configNUMBER_OF_CORES ] = { pdFALSE };
38008b98:	00000000 	andeq	r0, r0, r0

38008b9c <pxCurrentTimerList>:
    PRIVILEGED_DATA static List_t * pxCurrentTimerList;
38008b9c:	00000000 	andeq	r0, r0, r0

38008ba0 <pxOverflowTimerList>:
    PRIVILEGED_DATA static List_t * pxOverflowTimerList;
38008ba0:	00000000 	andeq	r0, r0, r0

38008ba4 <ucStaticTimerQueueStorage.1>:
	...

38008c44 <xActiveTimerList1>:
	...

38008c60 <xActiveTimerList2>:
	...

38008c7c <xLastTime.2>:
38008c7c:	00000000 	andeq	r0, r0, r0

38008c80 <xStaticTimerQueue.0>:
	...

38008cdc <xTimerQueue>:
    PRIVILEGED_DATA static QueueHandle_t xTimerQueue = NULL;
38008cdc:	00000000 	andeq	r0, r0, r0

38008ce0 <xTimerTaskHandle>:
    PRIVILEGED_DATA static TaskHandle_t xTimerTaskHandle = NULL;
38008ce0:	00000000 	andeq	r0, r0, r0

38008ce4 <pxEnd>:
PRIVILEGED_DATA static BlockLink_t * pxEnd = NULL;
38008ce4:	00000000 	andeq	r0, r0, r0

38008ce8 <xFreeBytesRemaining>:
PRIVILEGED_DATA static size_t xFreeBytesRemaining = ( size_t ) 0U;
38008ce8:	00000000 	andeq	r0, r0, r0

38008cec <xMinimumEverFreeBytesRemaining>:
PRIVILEGED_DATA static size_t xMinimumEverFreeBytesRemaining = ( size_t ) 0U;
38008cec:	00000000 	andeq	r0, r0, r0

38008cf0 <xNumberOfSuccessfulAllocations>:
PRIVILEGED_DATA static size_t xNumberOfSuccessfulAllocations = ( size_t ) 0U;
38008cf0:	00000000 	andeq	r0, r0, r0

38008cf4 <xNumberOfSuccessfulFrees>:
PRIVILEGED_DATA static size_t xNumberOfSuccessfulFrees = ( size_t ) 0U;
38008cf4:	00000000 	andeq	r0, r0, r0

38008cf8 <xStart>:
	...

38008d00 <ulStoppedTimerCompensation>:
    PRIVILEGED_DATA static uint32_t ulStoppedTimerCompensation = 0;
38008d00:	00000000 	andeq	r0, r0, r0

38008d04 <ulTimerCountsForOneTick>:
    PRIVILEGED_DATA static uint32_t ulTimerCountsForOneTick = 0;
38008d04:	00000000 	andeq	r0, r0, r0

38008d08 <xMaximumPossibleSuppressedTicks>:
    PRIVILEGED_DATA static uint32_t xMaximumPossibleSuppressedTicks = 0;
38008d08:	00000000 	andeq	r0, r0, r0

38008d0c <__lock___atexit_recursive_mutex>:
38008d0c:	00000000 	andeq	r0, r0, r0

38008d10 <errno>:
38008d10:	00000000 	andeq	r0, r0, r0

Disassembly of section .heap:

38008d14 <__end__-0x4>:
38008d14:	00000000 	andeq	r0, r0, r0

38008d18 <__end__>:
	...

Disassembly of section .stack:

380ff000 <__StackLimit>:
	...

Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
    return __get_MSP();
}

unsigned int fault_dump_bm_stack_start(void) {
    return FD_STACK_START;
}
   0:	00003541 	andeq	r3, r0, r1, asr #10
   4:	61656100 	cmnvs	r5, r0, lsl #2
     * exception or zero for Thread mode.*/
    __asm volatile ( "mrs %0, ipsr" : "=r" ( ulCurrentInterrupt )::"memory" );

    if( ulCurrentInterrupt == 0 )
    {
        xReturn = pdFALSE;
   8:	01006962 	tsteq	r0, r2, ror #18
    {
        xReturn = pdTRUE;
    }

    return xReturn;
}
   c:	0000002b 	andeq	r0, r0, fp, lsr #32
    ( pxList->uxNumberOfItems ) = ( UBaseType_t ) ( pxList->uxNumberOfItems + 1U );
  10:	4d2d3805 	stcmi	8, cr3, [sp, #-20]!	; 0xffffffec
}
  14:	49414d2e 	stmdbmi	r1, {r1, r2, r3, r5, r8, sl, fp, lr}^
size_t uart_recv(uint8_t* buffer, size_t size) {
    uint8_t ch = 0;
    size_t it = 0;
    while (1) {
        ch = getchar();
        if(ch == '\n' || it >= size) {
  18:	1106004e 	tstne	r6, lr, asr #32
        }
        buffer[it] = ch;
        it = it + 1;
    }
    return (it + 1);
}
  1c:	03094d07 	movweq	r4, #40199	; 0x9d07
  va_start(va, format);
  const out_fct_wrap_type out_fct_wrap = { out, arg };
  const int ret = _vsnprintf(_out_fct, (char*)(uintptr_t)&out_fct_wrap, (size_t)-1, format, va);
  va_end(va);
  return ret;
}
  20:	0412080a 	ldreq	r0, [r2], #-2058	; 0xfffff7f6
  24:	01150114 	tsteq	r5, r4, lsl r1
  28:	01180317 	tsteq	r8, r7, lsl r3
  2c:	011b011a 	tsteq	fp, sl, lsl r1
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
  30:	0122011c 			; <UNDEFINED> instruction: 0x0122011c
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
  34:	Address 0x00000034 is out of bounds.


Disassembly of section .comment:

00000000 <.comment>:
   0:	3a434347 	bcc	10d0d24 <__RAM_SIZE+0xfd0d24>
   4:	4e472820 	cdpmi	8, 4, cr2, cr7, cr0, {1}
        xReturn = pdFALSE;
   8:	72412055 	subvc	r2, r1, #85	; 0x55
}
   c:	6d45206d 	stclvs	0, cr2, [r5, #-436]	; 0xfffffe4c
    ( pxList->uxNumberOfItems ) = ( UBaseType_t ) ( pxList->uxNumberOfItems + 1U );
  10:	64646562 	strbtvs	r6, [r4], #-1378	; 0xfffffa9e
}
  14:	54206465 	strtpl	r6, [r0], #-1125	; 0xfffffb9b
        if(ch == '\n' || it >= size) {
  18:	636c6f6f 	cmnvs	ip, #444	; 0x1bc
}
  1c:	6e696168 	powvsez	f6, f1, #0.0
  20:	2e303120 	rsfcssp	f3, f0, f0
  24:	30322d33 	eorscc	r2, r2, r3, lsr sp
  28:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
  2c:	31202930 			; <UNDEFINED> instruction: 0x31202930
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
  30:	2e332e30 	mrccs	14, 1, r2, cr3, cr0, {1}
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
  34:	30322031 	eorscc	r2, r2, r1, lsr r0
  38:	38303132 	ldmdacc	r0!, {r1, r4, r5, r8, ip, sp}
  3c:	28203432 	stmdacs	r0!, {r1, r4, r5, sl, ip, sp}
  40:	656c6572 	strbvs	r6, [ip, #-1394]!	; 0xfffffa8e
        BaseType_t xReturn = pdFAIL;
  44:	29657361 	stmdbcs	r5!, {r0, r5, r6, r8, r9, ip, sp, lr}^
	...

Disassembly of section .debug_info:

00000000 <.debug_info>:
       0:	00000bb6 			; <UNDEFINED> instruction: 0x00000bb6
       4:	00000002 	andeq	r0, r0, r2
        xReturn = pdFALSE;
       8:	01040000 	mrseq	r0, (UNDEF: 4)
}
       c:	00000189 	andeq	r0, r0, r9, lsl #3
    ( pxList->uxNumberOfItems ) = ( UBaseType_t ) ( pxList->uxNumberOfItems + 1U );
      10:	00014e0c 	andeq	r4, r1, ip, lsl #28
}
      14:	00038500 	andeq	r8, r3, r0, lsl #10
        if(ch == '\n' || it >= size) {
      18:	00001800 	andeq	r1, r0, r0, lsl #16
	...
      28:	06010200 	streq	r0, [r1], -r0, lsl #4
      2c:	00000273 	andeq	r0, r0, r3, ror r2
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
      30:	00017f03 	andeq	r7, r1, r3, lsl #30
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
      34:	182b0200 	stmdane	fp!, {r9}
      38:	0000003c 	andeq	r0, r0, ip, lsr r0
      3c:	71080102 	tstvc	r8, r2, lsl #2
      40:	02000002 	andeq	r0, r0, #2
        BaseType_t xReturn = pdFAIL;
      44:	00320502 	eorseq	r0, r2, r2, lsl #10
    }
      48:	02020000 	andeq	r0, r2, #0
        for (int i = 0; i < count; i++) {
      4c:	00031a07 	andeq	r1, r3, r7, lsl #20
        printf("] \r\n");
      50:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
}
      54:	0000012c 	andeq	r0, r0, ip, lsr #2
      58:	00006f03 	andeq	r6, r0, r3, lsl #30
      5c:	194f0200 	stmdbne	pc, {r9}^	; <UNPREDICTABLE>
      60:	00000064 	andeq	r0, r0, r4, rrx
      64:	c2070402 	andgt	r0, r7, #33554432	; 0x2000000
                    xMaxSize = pxBlock->xBlockSize;
                }

                if( pxBlock->xBlockSize < xMinSize )
                {
                    xMinSize = pxBlock->xBlockSize;
      68:	02000002 	andeq	r0, r0, #2
      6c:	01270508 			; <UNDEFINED> instruction: 0x01270508
      70:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
      74:	0002bd07 	andeq	fp, r2, r7, lsl #26
      78:	05040400 	streq	r0, [r4, #-1024]	; 0xfffffc00
      7c:	00746e69 	rsbseq	r6, r4, r9, ror #28
            prvUnlockQueue( pxQueue );
      80:	00007905 	andeq	r7, r0, r5, lsl #18
            ( void ) xTaskResumeAll();
      84:	07040200 	streq	r0, [r4, -r0, lsl #4]
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
      88:	000002c7 	andeq	r0, r0, r7, asr #5
      8c:	00018103 	andeq	r8, r1, r3, lsl #2
      90:	13180300 	tstne	r8, #0, 6
        taskENTER_CRITICAL();
      94:	00000030 	andeq	r0, r0, r0, lsr r0
            if( uxSemaphoreCount > ( UBaseType_t ) 0 )
      98:	00008c05 	andeq	r8, r0, r5, lsl #24
                if( xTicksToWait == ( TickType_t ) 0 )
      9c:	00710300 	rsbseq	r0, r1, r0, lsl #6
      a0:	30030000 	andcc	r0, r3, r0
                else if( xEntryTimeSet == pdFALSE )
      a4:	00005814 	andeq	r5, r0, r4, lsl r8
        taskEXIT_CRITICAL();
      a8:	009d0500 	addseq	r0, sp, r0, lsl #10
        vTaskSuspendAll();
      ac:	a9060000 	stmdbge	r6, {}	; <UNPREDICTABLE>
        prvLockQueue( pxQueue );
      b0:	02000000 	andeq	r0, r0, #0
      b4:	00630408 	rsbeq	r0, r3, r8, lsl #8
      b8:	04070000 	streq	r0, [r7], #-0
      bc:	7a080102 	bvc	2004cc <__RAM_SIZE+0x1004cc>
      c0:	06000002 	streq	r0, [r0], -r2
      c4:	000000bc 	strheq	r0, [r0], -ip
      c8:	04027c08 	streq	r7, [r2], #-3080	; 0xfffff3f8
      cc:	cd0901f8 	stfgts	f0, [r9, #-992]	; 0xfffffc20
        if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
      d0:	09000003 	stmdbeq	r0, {r0, r1}
      d4:	00000092 	muleq	r0, r2, r0
      d8:	1201fa04 	andne	pc, r1, #4, 20	; 0x4000
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
      dc:	000000ae 	andeq	r0, r0, lr, lsr #1
      e0:	09002302 	stmdbeq	r0, {r1, r8, r9, sp}
                    if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
      e4:	00000442 	andeq	r0, r0, r2, asr #8
      e8:	1201fb04 	andne	pc, r1, #4, 22	; 0x1000
                vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
      ec:	000000a9 	andeq	r0, r0, r9, lsr #1
      f0:	09042302 	stmdbeq	r4, {r1, r8, r9, sp}
                prvUnlockQueue( pxQueue );
      f4:	0000034c 	andeq	r0, r0, ip, asr #6
      f8:	1201fc04 	andne	pc, r1, #4, 24	; 0x400
                if( xTaskResumeAll() == pdFALSE )
      fc:	000000a9 	andeq	r0, r0, r9, lsr #1
     100:	09082302 	stmdbeq	r8, {r1, r8, r9, sp}
                    taskYIELD_WITHIN_API();
     104:	0000044d 	andeq	r0, r0, sp, asr #8
                    if( xInheritanceOccurred != pdFALSE )
     108:	1201fd04 	andne	pc, r1, #4, 26	; 0x100
                return errQUEUE_EMPTY;
     10c:	000000a9 	andeq	r0, r0, r9, lsr #1
                        taskENTER_CRITICAL();
     110:	0a0c2302 	beq	308d20 <__RAM_SIZE+0x208d20>
                            uxHighestWaitingPriority = prvGetDisinheritPriorityAfterTimeout( pxQueue );
     114:	00524353 	subseq	r4, r2, r3, asr r3
     118:	1201fe04 	andne	pc, r1, #4, 28	; 0x40
                            vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
     11c:	000000a9 	andeq	r0, r0, r9, lsr #1
                        taskEXIT_CRITICAL();
     120:	0a102302 	beq	408d30 <__RAM_SIZE+0x308d30>
     124:	00524343 	subseq	r4, r2, r3, asr #6
                    listINSERT_END( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
     128:	1201ff04 	andne	pc, r1, #4, 30
     12c:	000000a9 	andeq	r0, r0, r9, lsr #1
     130:	09142302 	ldmdbeq	r4, {r1, r8, r9, sp}
     134:	000002b8 			; <UNDEFINED> instruction: 0x000002b8
     138:	12020004 	andne	r0, r2, #4
     13c:	000003dd 	ldrdeq	r0, [r0], -sp
     140:	09182302 	ldmdbeq	r8, {r1, r8, r9, sp}
     144:	00000304 	andeq	r0, r0, r4, lsl #6
     148:	12020104 	andne	r0, r2, #4, 2
     14c:	000000a9 	andeq	r0, r0, r9, lsr #1
     150:	09242302 	stmdbeq	r4!, {r1, r8, r9, sp}
     154:	0000025c 	andeq	r0, r0, ip, asr r2
     158:	12020204 	andne	r0, r2, #4, 4	; 0x40000000
     15c:	000000a9 	andeq	r0, r0, r9, lsr #1
     160:	09282302 	stmdbeq	r8!, {r1, r8, r9, sp}
     164:	0000036c 	andeq	r0, r0, ip, ror #6
     168:	12020304 	andne	r0, r2, #4, 6	; 0x10000000
     16c:	000000a9 	andeq	r0, r0, r9, lsr #1
     170:	092c2302 	stmdbeq	ip!, {r1, r8, r9, sp}
     174:	00000351 	andeq	r0, r0, r1, asr r3
     178:	12020404 	andne	r0, r2, #4, 8	; 0x4000000
     17c:	000000a9 	andeq	r0, r0, r9, lsr #1
     180:	09302302 	ldmdbeq	r0!, {r1, r8, r9, sp}
     184:	0000002c 	andeq	r0, r0, ip, lsr #32
     188:	12020504 	andne	r0, r2, #4, 10	; 0x1000000
     18c:	000000a9 	andeq	r0, r0, r9, lsr #1
     190:	09342302 	ldmdbeq	r4!, {r1, r8, r9, sp}
     194:	00000135 	andeq	r0, r0, r5, lsr r1
     198:	12020604 	andne	r0, r2, #4, 12	; 0x400000
     19c:	000000a9 	andeq	r0, r0, r9, lsr #1
     1a0:	09382302 	ldmdbeq	r8!, {r1, r8, r9, sp}
     1a4:	0000042f 	andeq	r0, r0, pc, lsr #8
     1a8:	12020704 	andne	r0, r2, #4, 14	; 0x100000
     1ac:	000000a9 	andeq	r0, r0, r9, lsr #1
     1b0:	093c2302 	ldmdbeq	ip!, {r1, r8, r9, sp}
     1b4:	0000004c 	andeq	r0, r0, ip, asr #32
     1b8:	12020804 	andne	r0, r2, #4, 16	; 0x40000
     1bc:	000003f7 	strdeq	r0, [r0], -r7
     1c0:	09402302 	stmdbeq	r0, {r1, r8, r9, sp}^
     1c4:	0000043b 	andeq	r0, r0, fp, lsr r4
     1c8:	12020904 	andne	r0, r2, #4, 18	; 0x10000
     1cc:	000000ae 	andeq	r0, r0, lr, lsr #1
     1d0:	09482302 	stmdbeq	r8, {r1, r8, r9, sp}^
     1d4:	000000e0 	andeq	r0, r0, r0, ror #1
     1d8:	12020a04 	andne	r0, r2, #4, 20	; 0x4000
     1dc:	000000ae 	andeq	r0, r0, lr, lsr #1
     1e0:	094c2302 	stmdbeq	ip, {r1, r8, r9, sp}^
     1e4:	00000163 	andeq	r0, r0, r3, ror #2
     1e8:	12020b04 	andne	r0, r2, #4, 22	; 0x1000
     1ec:	00000411 	andeq	r0, r0, r1, lsl r4
     1f0:	09502302 	ldmdbeq	r0, {r1, r8, r9, sp}^
     1f4:	00000297 	muleq	r0, r7, r2
     1f8:	12020c04 	andne	r0, r2, #4, 24	; 0x400
     1fc:	0000042b 	andeq	r0, r0, fp, lsr #8
     200:	09602302 	stmdbeq	r0!, {r1, r8, r9, sp}^
     204:	000003f7 	strdeq	r0, [r0], -r7
     208:	12020d04 	andne	r0, r2, #4, 26	; 0x100
     20c:	000000ae 	andeq	r0, r0, lr, lsr #1
     210:	0a782302 	beq	1e08e20 <__RAM_SIZE+0x1d08e20>
     214:	00525443 	subseq	r5, r2, r3, asr #8
     218:	12020e04 	andne	r0, r2, #4, 28	; 0x40
     21c:	000000ae 	andeq	r0, r0, lr, lsr #1
     220:	097c2302 	ldmdbeq	ip!, {r1, r8, r9, sp}^
     224:	0000032d 	andeq	r0, r0, sp, lsr #6
     228:	12020f04 	andne	r0, r2, #4, 30
     22c:	000000ae 	andeq	r0, r0, lr, lsr #1
     230:	01802303 	orreq	r2, r0, r3, lsl #6
     234:	00031309 	andeq	r1, r3, r9, lsl #6
     238:	02100400 	andseq	r0, r0, #0, 8
     23c:	0000a912 	andeq	sl, r0, r2, lsl r9
     240:	84230300 	strthi	r0, [r3], #-768	; 0xfffffd00
     244:	04470901 	strbeq	r0, [r7], #-2305	; 0xfffff6ff
     248:	11040000 	mrsne	r0, (UNDEF: 4)
     24c:	00a91202 	adceq	r1, r9, r2, lsl #4
     250:	23030000 	movwcs	r0, #12288	; 0x3000
     254:	53090188 	movwpl	r0, #37256	; 0x9188
     258:	04000004 	streq	r0, [r0], #-4
     25c:	a9120212 	ldmdbge	r2, {r1, r4, r9}
     260:	03000000 	movweq	r0, #0
     264:	09018c23 	stmdbeq	r1, {r0, r1, r5, sl, fp, pc}
     268:	000003ed 	andeq	r0, r0, sp, ror #7
     26c:	12021304 	andne	r1, r2, #4, 6	; 0x10000000
     270:	00000430 	andeq	r0, r0, r0, lsr r4
     274:	01902303 	orrseq	r2, r0, r3, lsl #6
     278:	0002f709 	andeq	pc, r2, r9, lsl #14
     27c:	02140400 	andseq	r0, r4, #0, 8
     280:	0000a912 	andeq	sl, r0, r2, lsl r9
     284:	e4230300 	strt	r0, [r3], #-768	; 0xfffffd00
     288:	03ca0901 	biceq	r0, sl, #16384	; 0x4000
     28c:	15040000 	strne	r0, [r4, #-0]
     290:	00a91202 	adceq	r1, r9, r2, lsl #4
     294:	23030000 	movwcs	r0, #12288	; 0x3000
     298:	710901e8 	smlattvc	r9, r8, r1, r0
     29c:	04000003 	streq	r0, [r0], #-3
     2a0:	40120216 	andsmi	r0, r2, r6, lsl r2
     2a4:	03000004 	movweq	r0, #4
     2a8:	0901ec23 	stmdbeq	r1, {r0, r1, r5, sl, fp, sp, lr, pc}
     2ac:	000000db 	ldrdeq	r0, [r0], -fp
     2b0:	12021704 	andne	r1, r2, #4, 14	; 0x100000
     2b4:	000000a9 	andeq	r0, r0, r9, lsr #1
     2b8:	04802303 	streq	r2, [r0], #771	; 0x303
     2bc:	00037b09 	andeq	r7, r3, r9, lsl #22
     2c0:	02180400 	andseq	r0, r8, #0, 8
     2c4:	00045012 	andeq	r5, r4, r2, lsl r0
     2c8:	84230300 	strthi	r0, [r3], #-768	; 0xfffffd00
     2cc:	00980904 	addseq	r0, r8, r4, lsl #18
     2d0:	19040000 	stmdbne	r4, {}	; <UNPREDICTABLE>
     2d4:	00ae1202 	adceq	r1, lr, r2, lsl #4
     2d8:	23030000 	movwcs	r0, #12288	; 0x3000
     2dc:	3c0904c0 	cfstrscc	mvf0, [r9], {192}	; 0xc0
     2e0:	04000000 	streq	r0, [r0], #-0
     2e4:	ae12021a 	mrcge	2, 0, r0, cr2, cr10, {0}
     2e8:	03000000 	movweq	r0, #0
     2ec:	0904c423 	stmdbeq	r4, {r0, r1, r5, sl, lr, pc}
     2f0:	00000121 	andeq	r0, r0, r1, lsr #2
     2f4:	12021b04 	andne	r1, r2, #4, 22	; 0x1000
     2f8:	000000ae 	andeq	r0, r0, lr, lsr #1
     2fc:	04c82303 	strbeq	r2, [r8], #771	; 0x303
     300:	0000b509 	andeq	fp, r0, r9, lsl #10
     304:	021c0400 	andseq	r0, ip, #0, 8
     308:	00046012 	andeq	r6, r4, r2, lsl r0
     30c:	cc230300 	stcgt	3, cr0, [r3], #-0
     310:	02610904 	rsbeq	r0, r1, #4, 18	; 0x10000
     314:	1d040000 	stcne	0, cr0, [r4, #-0]
     318:	00a91202 	adceq	r1, r9, r2, lsl #4
     31c:	23030000 	movwcs	r0, #12288	; 0x3000
     320:	bf0904d0 	svclt	0x000904d0
     324:	04000000 	streq	r0, [r0], #-0
     328:	6012021e 	andsvs	r0, r2, lr, lsl r2
     32c:	03000004 	movweq	r0, #4
     330:	0904d423 	stmdbeq	r4, {r0, r1, r5, sl, ip, lr, pc}
     334:	0000027f 	andeq	r0, r0, pc, ror r2
     338:	12021f04 	andne	r1, r2, #4, 30
     33c:	000000a9 	andeq	r0, r0, r9, lsr #1
     340:	04d82303 	ldrbeq	r2, [r8], #771	; 0x303
     344:	00026909 	andeq	r6, r2, r9, lsl #18
     348:	02200400 	eoreq	r0, r0, #0, 8
     34c:	0000a912 	andeq	sl, r0, r2, lsl r9
     350:	dc230300 	stcle	3, cr0, [r3], #-0
     354:	01010904 	tsteq	r1, r4, lsl #18
     358:	21040000 	mrscs	r0, (UNDEF: 4)
     35c:	00a91202 	adceq	r1, r9, r2, lsl #4
     360:	23030000 	movwcs	r0, #12288	; 0x3000
     364:	340904e0 	strcc	r0, [r9], #-1248	; 0xfffffb20
     368:	04000003 	streq	r0, [r0], #-3
     36c:	a9120222 	ldmdbge	r2, {r1, r5, r9}
     370:	03000000 	movweq	r0, #0
     374:	0904e423 	stmdbeq	r4, {r0, r1, r5, sl, sp, lr, pc}
     378:	000002fc 	strdeq	r0, [r0], -ip
     37c:	12022304 	andne	r2, r2, #4, 6	; 0x10000000
     380:	000000a9 	andeq	r0, r0, r9, lsr #1
     384:	04e82303 	strbteq	r2, [r8], #771	; 0x303
     388:	00000009 	andeq	r0, r0, r9
     38c:	02240400 	eoreq	r0, r4, #0, 8
     390:	0000a912 	andeq	sl, r0, r2, lsl r9
     394:	ec230300 	stc	3, cr0, [r3], #-0
     398:	007a0904 	rsbseq	r0, sl, r4, lsl #18
     39c:	25040000 	strcs	r0, [r4, #-0]
     3a0:	00a91202 	adceq	r1, r9, r2, lsl #4
     3a4:	23030000 	movwcs	r0, #12288	; 0x3000
     3a8:	e60904f0 			; <UNDEFINED> instruction: 0xe60904f0
     3ac:	04000003 	streq	r0, [r0], #-3
     3b0:	a9120226 	ldmdbge	r2, {r1, r2, r5, r9}
     3b4:	03000000 	movweq	r0, #0
     3b8:	0904f423 	stmdbeq	r4, {r0, r1, r5, sl, ip, sp, lr, pc}
     3bc:	00000434 	andeq	r0, r0, r4, lsr r4
     3c0:	12022704 	andne	r2, r2, #4, 14	; 0x100000
     3c4:	000000a9 	andeq	r0, r0, r9, lsr #1
     3c8:	04f82303 	ldrbteq	r2, [r8], #771	; 0x303
     3cc:	00980b00 	addseq	r0, r8, r0, lsl #22
     3d0:	03dd0000 	bicseq	r0, sp, #0
     3d4:	850c0000 	strhi	r0, [ip, #-0]
     3d8:	0b000000 	bleq	3e0 <__STACKSEAL_SIZE+0x3e0>
     3dc:	03cd0500 	biceq	r0, sp, #0, 10
     3e0:	ae0b0000 	cdpge	0, 0, cr0, cr11, cr0, {0}
     3e4:	f2000000 	vhadd.s8	d0, d0, d0
     3e8:	0c000003 	stceq	0, cr0, [r0], {3}
     3ec:	00000085 	andeq	r0, r0, r5, lsl #1
     3f0:	e2060001 	and	r0, r6, #1
     3f4:	05000003 	streq	r0, [r0, #-3]
     3f8:	000003f2 	strdeq	r0, [r0], -r2
     3fc:	0000ae0b 	andeq	sl, r0, fp, lsl #28
     400:	00040c00 	andeq	r0, r4, r0, lsl #24
     404:	00850c00 	addeq	r0, r5, r0, lsl #24
     408:	00030000 	andeq	r0, r3, r0
     40c:	0003fc06 	andeq	pc, r3, r6, lsl #24
     410:	040c0500 	streq	r0, [ip], #-1280	; 0xfffffb00
     414:	ae0b0000 	cdpge	0, 0, cr0, cr11, cr0, {0}
     418:	26000000 	strcs	r0, [r0], -r0
     41c:	0c000004 	stceq	0, cr0, [r0], {4}
     420:	00000085 	andeq	r0, r0, r5, lsl #1
     424:	16060005 	strne	r0, [r6], -r5
     428:	05000004 	streq	r0, [r0, #-4]
     42c:	00000426 	andeq	r0, r0, r6, lsr #8
     430:	00009d0b 	andeq	r9, r0, fp, lsl #26
     434:	00044000 	andeq	r4, r4, r0
     438:	00850c00 	addeq	r0, r5, r0, lsl #24
     43c:	00140000 	andseq	r0, r4, r0
     440:	00009d0b 	andeq	r9, r0, fp, lsl #26
     444:	00045000 	andeq	r5, r4, r0
     448:	00850c00 	addeq	r0, r5, r0, lsl #24
     44c:	00440000 	subeq	r0, r4, r0
     450:	00009d0b 	andeq	r9, r0, fp, lsl #26
     454:	00046000 	andeq	r6, r4, r0
     458:	00850c00 	addeq	r0, r5, r0, lsl #24
     45c:	000e0000 	andeq	r0, lr, r0
     460:	00009d0b 	andeq	r9, r0, fp, lsl #26
     464:	00047000 	andeq	r7, r4, r0
     468:	00850c00 	addeq	r0, r5, r0, lsl #24
     46c:	00000000 	andeq	r0, r0, r0
     470:	0002af0d 	andeq	sl, r2, sp, lsl #30
     474:	02280400 	eoreq	r0, r8, #0, 8
     478:	0000c803 	andeq	ip, r0, r3, lsl #16
     47c:	09c50300 	stmibeq	r5, {r8, r9}^
     480:	4a050000 	bmi	140488 <__RAM_SIZE+0x40488>
     484:	0000511a 	andeq	r5, r0, sl, lsl r1
     488:	02ea0300 	rsceq	r0, sl, #0, 6
     48c:	5c060000 	stcpl	0, cr0, [r6], {-0}
     490:	0004952e 	andeq	r9, r4, lr, lsr #10
     494:	9b040e00 	blls	103c9c <__RAM_SIZE+0x3c9c>
     498:	0f000004 	svceq	0x00000004
     49c:	0000016b 	andeq	r0, r0, fp, ror #2
     4a0:	008c0b01 	addeq	r0, ip, r1, lsl #22
     4a4:	04b20000 	ldrteq	r0, [r2], #0
     4a8:	85100000 	ldrhi	r0, [r0, #-0]
     4ac:	ff000000 			; <UNDEFINED> instruction: 0xff000000
     4b0:	2511007f 	ldrcs	r0, [r1, #-127]	; 0xffffff81
     4b4:	01000000 	mrseq	r0, (UNDEF: 0)
     4b8:	04a1090d 	strteq	r0, [r1], #2317	; 0x90d
     4bc:	05010000 	streq	r0, [r1, #-0]
     4c0:	00046803 	andeq	r6, r4, r3, lsl #16
     4c4:	5e011238 	mcrpl	2, 0, r1, cr1, cr8, {1}
     4c8:	01000000 	mrseq	r0, (UNDEF: 0)
     4cc:	79010571 	stmdbvc	r1, {r0, r4, r5, r6, r8, sl}
     4d0:	5c000000 	stcpl	0, cr0, [r0], {-0}
     4d4:	88100008 	ldmdahi	r0, {r3}
     4d8:	00100008 	andseq	r0, r0, r8
     4dc:	01000000 	mrseq	r0, (UNDEF: 0)
     4e0:	00000544 	andeq	r0, r0, r4, asr #10
     4e4:	0003fd13 	andeq	pc, r3, r3, lsl sp	; <UNPREDICTABLE>
     4e8:	09720100 	ldmdbeq	r2!, {r8}^
     4ec:	00000079 	andeq	r0, r0, r9, ror r0
     4f0:	00000026 	andeq	r0, r0, r6, lsr #32
     4f4:	00000020 	andeq	r0, r0, r0, lsr #32
     4f8:	00086214 	andeq	r6, r8, r4, lsl r2
     4fc:	000b1e10 	andeq	r1, fp, r0, lsl lr
     500:	08681500 	stmdaeq	r8!, {r8, sl, ip}^
     504:	0b2c1000 	bleq	b0450c <__RAM_SIZE+0xa0450c>
     508:	05180000 	ldreq	r0, [r8, #-0]
     50c:	01160000 	tsteq	r6, r0
     510:	f4030550 	vst3.16	{d0,d2,d4}, [r3 :64], r0
     514:	00100056 	andseq	r0, r0, r6, asr r0
     518:	00086c14 	andeq	r6, r8, r4, lsl ip
     51c:	000b3910 	andeq	r3, fp, r0, lsl r9
     520:	08701400 	ldmdaeq	r0!, {sl, ip}^
     524:	05441000 	strbeq	r1, [r4, #-0]
     528:	7c170000 	ldcvc	0, cr0, [r7], {-0}
     52c:	47100008 	ldrmi	r0, [r0, -r8]
     530:	1600000b 	strne	r0, [r0], -fp
     534:	03055001 	movweq	r5, #20481	; 0x5001
     538:	100056fc 	strdne	r5, [r0], -ip
     53c:	02510116 	subseq	r0, r1, #-2147483643	; 0x80000005
     540:	00007f74 	andeq	r7, r0, r4, ror pc
     544:	00008318 	andeq	r8, r0, r8, lsl r3
     548:	0d660100 	stfeqe	f0, [r6, #-0]
     54c:	00080001 	andeq	r0, r8, r1
     550:	00084410 	andeq	r4, r8, r0, lsl r4
     554:	00005010 	andeq	r5, r0, r0, lsl r0
     558:	05e10100 	strbeq	r0, [r1, #256]!	; 0x100
     55c:	42190000 	andsmi	r0, r9, #0
     560:	01000000 	mrseq	r0, (UNDEF: 0)
     564:	04891967 	streq	r1, [r9], #2407	; 0x967
     568:	03050000 	movweq	r0, #20480	; 0x5000
     56c:	38000464 	stmdacc	r0, {r2, r5, r6, sl}
     570:	001a1913 	andseq	r1, sl, r3, lsl r9
     574:	10680100 	rsbne	r0, r8, r0, lsl #2
     578:	0000047d 	andeq	r0, r0, sp, ror r4
     57c:	0000009c 	muleq	r0, ip, r0
     580:	00000094 	muleq	r0, r4, r0
     584:	00081a15 	andeq	r1, r8, r5, lsl sl
     588:	000b5510 	andeq	r5, fp, r0, lsl r5
     58c:	0005c000 	andeq	ip, r5, r0
     590:	50011600 	andpl	r1, r1, r0, lsl #12
     594:	08450305 	stmdaeq	r5, {r0, r2, r8, r9}^
     598:	01161000 	tsteq	r6, r0
     59c:	ac030551 	cfstr32ge	mvfx0, [r3], {81}	; 0x51
     5a0:	16100056 			; <UNDEFINED> instruction: 0x16100056
     5a4:	0a035201 	beq	d4db0 <__HEAP_SIZE+0xd3db0>
     5a8:	01160800 	tsteq	r6, r0, lsl #16
     5ac:	16300153 			; <UNDEFINED> instruction: 0x16300153
     5b0:	01007d02 	tsteq	r0, r2, lsl #26
     5b4:	7d021631 	stcvc	6, cr1, [r2, #-196]	; 0xffffff3c
     5b8:	64030504 	strvs	r0, [r3], #-1284	; 0xfffffafc
     5bc:	00380004 	eorseq	r0, r8, r4
     5c0:	00082615 	andeq	r2, r8, r5, lsl r6
     5c4:	000b4710 	andeq	r4, fp, r0, lsl r7
     5c8:	0005d700 	andeq	sp, r5, r0, lsl #14
     5cc:	50011600 	andpl	r1, r1, r0, lsl #12
     5d0:	56b80305 	ldrtpl	r0, [r8], r5, lsl #6
     5d4:	14001000 	strne	r1, [r0], #-0
     5d8:	10000830 	andne	r0, r0, r0, lsr r8
     5dc:	00000b64 	andeq	r0, r0, r4, ror #22
     5e0:	02871800 	addeq	r1, r7, #0, 16
     5e4:	5f010000 	svcpl	0x00010000
     5e8:	0844010d 	stmdaeq	r4, {r0, r2, r3, r8}^
     5ec:	085c1000 	ldmdaeq	ip, {ip}^
     5f0:	00d11000 	sbcseq	r1, r1, r0
     5f4:	38010000 	stmdacc	r1, {}	; <UNPREDICTABLE>
     5f8:	1a000006 	bne	618 <__STACKSEAL_SIZE+0x618>
     5fc:	00000006 	andeq	r0, r0, r6
     600:	ba235f01 	blt	8d820c <__RAM_SIZE+0x7d820c>
     604:	f5000000 			; <UNDEFINED> instruction: 0xf5000000
     608:	f1000000 	cps	#0
     60c:	15000000 	strne	r0, [r0, #-0]
     610:	1000084e 	andne	r0, r0, lr, asr #16
     614:	00000b73 	andeq	r0, r0, r3, ror fp
     618:	00000624 	andeq	r0, r0, r4, lsr #12
     61c:	03500116 	cmpeq	r0, #-2147483643	; 0x80000005
     620:	0003e80a 	andeq	lr, r3, sl, lsl #16
     624:	00085417 	andeq	r5, r8, r7, lsl r4
     628:	000b2c10 	andeq	r2, fp, r0, lsl ip
     62c:	50011600 	andpl	r1, r1, r0, lsl #12
     630:	56d80305 	ldrbpl	r0, [r8], r5, lsl #6
     634:	00001000 	andeq	r1, r0, r0
     638:	0429011b 	strteq	r0, [r9], #-283	; 0xfffffee5
     63c:	5a010000 	bpl	40644 <__HEAP_SIZE+0x3f644>
     640:	00000106 	andeq	r0, r0, r6, lsl #2
     644:	00000000 	andeq	r0, r0, r0
     648:	01160000 	tsteq	r6, r0
     64c:	8d010000 	stchi	0, cr0, [r1, #-0]
     650:	1c000006 	stcne	0, cr0, [r0], {6}
     654:	0000030a 	andeq	r0, r0, sl, lsl #6
     658:	0000069d 	muleq	r0, sp, r6
     65c:	00030501 	andeq	r0, r3, r1, lsl #10
     660:	15000000 	strne	r0, [r0, #-0]
     664:	00000000 	andeq	r0, r0, r0
     668:	00000b47 	andeq	r0, r0, r7, asr #22
     66c:	00000683 	andeq	r0, r0, r3, lsl #13
     670:	05500116 	ldrbeq	r0, [r0, #-278]	; 0xfffffeea
     674:	00000003 	andeq	r0, r0, r3
     678:	51011600 	tstpl	r1, r0, lsl #12
     67c:	00000305 	andeq	r0, r0, r5, lsl #6
     680:	14000000 	strne	r0, [r0], #-0
     684:	00000000 	andeq	r0, r0, r0
     688:	000006a2 	andeq	r0, r0, r2, lsr #13
     68c:	00c30b00 	sbceq	r0, r3, r0, lsl #22
     690:	069d0000 	ldreq	r0, [sp], r0
     694:	850c0000 	strhi	r0, [ip, #-0]
     698:	05000000 	streq	r0, [r0, #-0]
     69c:	068d0600 	streq	r0, [sp], r0, lsl #12
     6a0:	011b0000 	tsteq	fp, r0
     6a4:	00000423 	andeq	r0, r0, r3, lsr #8
     6a8:	01065501 	tsteq	r6, r1, lsl #10
	...
     6b4:	00000136 	andeq	r0, r0, r6, lsr r1
     6b8:	0006f701 	andeq	pc, r6, r1, lsl #14
     6bc:	030a1c00 	movweq	r1, #44032	; 0xac00
     6c0:	069d0000 	ldreq	r0, [sp], r0
     6c4:	05010000 	streq	r0, [r1, #-0]
     6c8:	00000003 	andeq	r0, r0, r3
     6cc:	00001500 	andeq	r1, r0, r0, lsl #10
     6d0:	0b470000 	bleq	11c06d8 <__RAM_SIZE+0x10c06d8>
     6d4:	06ed0000 	strbteq	r0, [sp], r0
     6d8:	01160000 	tsteq	r6, r0
     6dc:	00030550 	andeq	r0, r3, r0, asr r5
     6e0:	16000000 	strne	r0, [r0], -r0
     6e4:	03055101 	movweq	r5, #20737	; 0x5101
     6e8:	00000000 	andeq	r0, r0, r0
     6ec:	00001400 	andeq	r1, r0, r0, lsl #8
     6f0:	06f70000 	ldrbteq	r0, [r7], r0
     6f4:	1b000000 	blne	6fc <__STACKSEAL_SIZE+0x6fc>
     6f8:	0000d501 	andeq	sp, r0, r1, lsl #10
     6fc:	06500100 	ldrbeq	r0, [r0], -r0, lsl #2
     700:	00000001 	andeq	r0, r0, r1
     704:	00000000 	andeq	r0, r0, r0
     708:	00015600 	andeq	r5, r1, r0, lsl #12
     70c:	074c0100 	strbeq	r0, [ip, -r0, lsl #2]
     710:	0a1c0000 	beq	700718 <__RAM_SIZE+0x600718>
     714:	9d000003 	stcls	0, cr0, [r0, #-12]
     718:	01000006 	tsteq	r0, r6
     71c:	00000305 	andeq	r0, r0, r5, lsl #6
     720:	00150000 	andseq	r0, r5, r0
     724:	47000000 	strmi	r0, [r0, -r0]
     728:	4200000b 	andmi	r0, r0, #11
     72c:	16000007 	strne	r0, [r0], -r7
     730:	03055001 	movweq	r5, #20481	; 0x5001
     734:	00000000 	andeq	r0, r0, r0
     738:	05510116 	ldrbeq	r0, [r1, #-278]	; 0xfffffeea
     73c:	00000003 	andeq	r0, r0, r3
     740:	00140000 	andseq	r0, r4, r0
     744:	4c000000 	stcmi	0, cr0, [r0], {-0}
     748:	00000007 	andeq	r0, r0, r7
     74c:	00cf011b 	sbceq	r0, pc, fp, lsl r1	; <UNPREDICTABLE>
     750:	4b010000 	blmi	40758 <__HEAP_SIZE+0x3f758>
     754:	00000106 	andeq	r0, r0, r6, lsl #2
     758:	00000000 	andeq	r0, r0, r0
     75c:	01760000 	cmneq	r6, r0
     760:	a1010000 	mrsge	r0, (UNDEF: 1)
     764:	1c000007 	stcne	0, cr0, [r0], {7}
     768:	0000030a 	andeq	r0, r0, sl, lsl #6
     76c:	0000069d 	muleq	r0, sp, r6
     770:	00030501 	andeq	r0, r3, r1, lsl #10
     774:	15000000 	strne	r0, [r0, #-0]
     778:	00000000 	andeq	r0, r0, r0
     77c:	00000b47 	andeq	r0, r0, r7, asr #22
     780:	00000797 	muleq	r0, r7, r7
     784:	05500116 	ldrbeq	r0, [r0, #-278]	; 0xfffffeea
     788:	00000003 	andeq	r0, r0, r3
     78c:	51011600 	tstpl	r1, r0, lsl #12
     790:	00000305 	andeq	r0, r0, r5, lsl #6
     794:	14000000 	strne	r0, [r0], #-0
     798:	00000000 	andeq	r0, r0, r0
     79c:	000007a1 	andeq	r0, r0, r1, lsr #15
     7a0:	c9011b00 	stmdbgt	r1, {r8, r9, fp, ip}
     7a4:	01000000 	mrseq	r0, (UNDEF: 0)
     7a8:	00010646 	andeq	r0, r1, r6, asr #12
     7ac:	00000000 	andeq	r0, r0, r0
     7b0:	96000000 	strls	r0, [r0], -r0
     7b4:	01000001 	tsteq	r0, r1
     7b8:	000007f6 	strdeq	r0, [r0], -r6
     7bc:	00030a1c 	andeq	r0, r3, ip, lsl sl
     7c0:	00069d00 	andeq	r9, r6, r0, lsl #26
     7c4:	03050100 	movweq	r0, #20736	; 0x5100
     7c8:	00000000 	andeq	r0, r0, r0
     7cc:	00000015 	andeq	r0, r0, r5, lsl r0
     7d0:	000b4700 	andeq	r4, fp, r0, lsl #14
     7d4:	0007ec00 	andeq	lr, r7, r0, lsl #24
     7d8:	50011600 	andpl	r1, r1, r0, lsl #12
     7dc:	00000305 	andeq	r0, r0, r5, lsl #6
     7e0:	01160000 	tsteq	r6, r0
     7e4:	00030551 	andeq	r0, r3, r1, asr r5
     7e8:	00000000 	andeq	r0, r0, r0
     7ec:	00000014 	andeq	r0, r0, r4, lsl r0
     7f0:	0007f600 	andeq	pc, r7, r0, lsl #12
     7f4:	011b0000 	tsteq	fp, r0
     7f8:	00000403 	andeq	r0, r0, r3, lsl #8
     7fc:	01063f01 	tsteq	r6, r1, lsl #30
	...
     808:	000001b6 			; <UNDEFINED> instruction: 0x000001b6
     80c:	00085401 	andeq	r5, r8, r1, lsl #8
     810:	030a1c00 	movweq	r1, #44032	; 0xac00
     814:	069d0000 	ldreq	r0, [sp], r0
     818:	05010000 	streq	r0, [r1, #-0]
     81c:	00000003 	andeq	r0, r0, r3
     820:	00001500 	andeq	r1, r0, r0, lsl #10
     824:	0b470000 	bleq	11c082c <__RAM_SIZE+0x10c082c>
     828:	08410000 	stmdaeq	r1, {}^	; <UNPREDICTABLE>
     82c:	01160000 	tsteq	r6, r0
     830:	00030550 	andeq	r0, r3, r0, asr r5
     834:	16000000 	strne	r0, [r0], -r0
     838:	03055101 	movweq	r5, #20737	; 0x5101
     83c:	00000000 	andeq	r0, r0, r0
     840:	00001400 	andeq	r1, r0, r0, lsl #8
     844:	08540000 	ldmdaeq	r4, {}^	; <UNPREDICTABLE>
     848:	00140000 	andseq	r0, r4, r0
     84c:	94000000 	strls	r0, [r0], #-0
     850:	00000009 	andeq	r0, r0, r9
     854:	024d011b 	subeq	r0, sp, #-1073741818	; 0xc0000006
     858:	2f010000 	svccs	0x00010000
     85c:	00000106 	andeq	r0, r0, r6, lsl #2
     860:	00000000 	andeq	r0, r0, r0
     864:	01d60000 	bicseq	r0, r6, r0
     868:	84010000 	strhi	r0, [r1], #-0
     86c:	19000009 	stmdbne	r0, {r0, r3}
     870:	000004f5 	strdeq	r0, [r0], -r5
     874:	84123001 	ldrhi	r3, [r2], #-1
     878:	03000009 	movweq	r0, #9
     87c:	137df091 	cmnne	sp, #145	; 0x91	; <UNPREDICTABLE>
     880:	000000fb 	strdeq	r0, [r0], -fp
     884:	85123101 	ldrhi	r3, [r2, #-257]	; 0xfffffeff
     888:	15000000 	strne	r0, [r0, #-0]
     88c:	0f000002 	svceq	0x00000002
     890:	13000002 	movwne	r0, #2
     894:	0000041d 	andeq	r0, r0, sp, lsl r4
     898:	85123201 	ldrhi	r3, [r2, #-513]	; 0xfffffdff
     89c:	42000000 	andmi	r0, r0, #0
     8a0:	3e000002 	cdpcc	0, 0, cr0, cr0, cr2, {0}
     8a4:	13000002 	movwne	r0, #2
     8a8:	000003fd 	strdeq	r0, [r0], -sp
     8ac:	79093301 	stmdbvc	r9, {r0, r8, r9, ip, sp}
     8b0:	68000000 	stmdavs	r0, {}	; <UNPREDICTABLE>
     8b4:	60000002 	andvs	r0, r0, r2
     8b8:	1d000002 	stcne	0, cr0, [r0, #-8]
     8bc:	00000000 	andeq	r0, r0, r0
     8c0:	000008ea 	andeq	r0, r0, sl, ror #17
     8c4:	0100691e 	tsteq	r0, lr, lsl r9
     8c8:	00791238 	rsbseq	r1, r9, r8, lsr r2
     8cc:	02a00000 	adceq	r0, r0, #0
     8d0:	029c0000 	addseq	r0, ip, #0
     8d4:	00170000 	andseq	r0, r7, r0
     8d8:	47000000 	strmi	r0, [r0, -r0]
     8dc:	1600000b 	strne	r0, [r0], -fp
     8e0:	03055001 	movweq	r5, #20481	; 0x5001
     8e4:	00000000 	andeq	r0, r0, r0
     8e8:	00150000 	andseq	r0, r5, r0
     8ec:	82000000 	andhi	r0, r0, #0
     8f0:	0a00000b 	beq	924 <__Vectors_Size+0x164>
     8f4:	16000009 	strne	r0, [r0], -r9
     8f8:	7d025001 	stcvc	0, cr5, [r2, #-4]
     8fc:	51011600 	tstpl	r1, r0, lsl #12
     900:	01163001 	tsteq	r6, r1
     904:	000a0352 	andeq	r0, sl, r2, asr r3
     908:	00140001 	andseq	r0, r4, r1
     90c:	8f000000 	svchi	0x00000000
     910:	1400000b 	strne	r0, [r0], #-11
     914:	00000000 	andeq	r0, r0, r0
     918:	00000b9d 	muleq	r0, sp, fp
     91c:	00000015 	andeq	r0, r0, r5, lsl r0
     920:	000bab00 	andeq	sl, fp, r0, lsl #22
     924:	00093c00 	andeq	r3, r9, r0, lsl #24
     928:	50011600 	andpl	r1, r1, r0, lsl #12
     92c:	16007d02 	strne	r7, [r0], -r2, lsl #26
     930:	08025101 	stmdaeq	r2, {r0, r8, ip, lr}
     934:	52011640 	andpl	r1, r1, #64, 12	; 0x4000000
     938:	00007402 	andeq	r7, r0, r2, lsl #8
     93c:	00000015 	andeq	r0, r0, r5, lsl r0
     940:	000b4700 	andeq	r4, fp, r0, lsl #14
     944:	00095300 	andeq	r5, r9, r0, lsl #6
     948:	50011600 	andpl	r1, r1, r0, lsl #12
     94c:	00000305 	andeq	r0, r0, r5, lsl #6
     950:	15000000 	strne	r0, [r0, #-0]
     954:	00000000 	andeq	r0, r0, r0
     958:	00000b47 	andeq	r0, r0, r7, asr #22
     95c:	00000970 	andeq	r0, r0, r0, ror r9
     960:	05500116 	ldrbeq	r0, [r0, #-278]	; 0xfffffeea
     964:	00000003 	andeq	r0, r0, r3
     968:	51011600 	tstpl	r1, r0, lsl #12
     96c:	00007502 	andeq	r7, r0, r2, lsl #10
     970:	00000017 	andeq	r0, r0, r7, lsl r0
     974:	000b2c00 	andeq	r2, fp, r0, lsl #24
     978:	50011600 	andpl	r1, r1, r0, lsl #12
     97c:	00000305 	andeq	r0, r0, r5, lsl #6
     980:	00000000 	andeq	r0, r0, r0
     984:	0000850b 	andeq	r8, r0, fp, lsl #10
     988:	00099400 	andeq	r9, r9, r0, lsl #8
     98c:	00850c00 	addeq	r0, r5, r0, lsl #24
     990:	003f0000 	eorseq	r0, pc, r0
     994:	02d4011b 	sbcseq	r0, r4, #-1073741818	; 0xc0000006
     998:	1f010000 	svcne	0x00010000
     99c:	00000106 	andeq	r0, r0, r6, lsl #2
     9a0:	00000000 	andeq	r0, r0, r0
     9a4:	02bf0000 	adcseq	r0, pc, #0
     9a8:	1b010000 	blne	409b0 <__HEAP_SIZE+0x3f9b0>
     9ac:	1300000a 	movwne	r0, #10
     9b0:	00000020 	andeq	r0, r0, r0, lsr #32
     9b4:	1b132001 	blne	4c89c0 <__RAM_SIZE+0x3c89c0>
     9b8:	fd00000a 	stc2	0, cr0, [r0, #-40]	; 0xffffffd8
     9bc:	f7000002 			; <UNDEFINED> instruction: 0xf7000002
     9c0:	19000002 	stmdbne	r0, {r1}
     9c4:	0000009e 	muleq	r0, lr, r0
     9c8:	80122101 	andshi	r2, r2, r1, lsl #2
     9cc:	02000000 	andeq	r0, r0, #0
     9d0:	00156c91 	mulseq	r5, r1, ip
     9d4:	47000000 	strmi	r0, [r0, -r0]
     9d8:	ec00000b 	stc	0, cr0, [r0], {11}
     9dc:	16000009 	strne	r0, [r0], -r9
     9e0:	75025001 	strvc	r5, [r2, #-1]
     9e4:	51011600 	tstpl	r1, r0, lsl #12
     9e8:	00007402 	andeq	r7, r0, r2, lsl #8
     9ec:	00000015 	andeq	r0, r0, r5, lsl r0
     9f0:	000b4700 	andeq	r4, fp, r0, lsl #14
     9f4:	000a0500 	andeq	r0, sl, r0, lsl #10
     9f8:	50011600 	andpl	r1, r1, r0, lsl #12
     9fc:	16007502 	strne	r7, [r0], -r2, lsl #10
     a00:	34015101 	strcc	r5, [r1], #-257	; 0xfffffeff
     a04:	00001700 	andeq	r1, r0, r0, lsl #14
     a08:	0b470000 	bleq	11c0a10 <__RAM_SIZE+0x10c0a10>
     a0c:	01160000 	tsteq	r6, r0
     a10:	00750250 	rsbseq	r0, r5, r0, asr r2
     a14:	01510116 	cmpeq	r1, r6, lsl r1
     a18:	0e000033 	mcreq	0, 0, r0, cr0, cr3, {1}
     a1c:	00008004 	andeq	r8, r0, r4
     a20:	cf011b00 	svcgt	0x00011b00
     a24:	01000003 	tsteq	r0, r3
     a28:	00010617 	andeq	r0, r1, r7, lsl r6
     a2c:	00000000 	andeq	r0, r0, r0
     a30:	29000000 	stmdbcs	r0, {}	; <UNPREDICTABLE>
     a34:	01000003 	tsteq	r0, r3
     a38:	00000a76 	andeq	r0, r0, r6, ror sl
     a3c:	0100611f 	tsteq	r0, pc, lsl r1
     a40:	00790918 	rsbseq	r0, r9, r8, lsl r9
     a44:	1f000000 	svcne	0x00000000
     a48:	18010062 	stmdane	r1, {r1, r5, r6}
     a4c:	00007910 	andeq	r7, r0, r0, lsl r9
     a50:	631f0000 	tstvs	pc, #0
     a54:	17180100 	ldrne	r0, [r8, -r0, lsl #2]
     a58:	00000079 	andeq	r0, r0, r9, ror r0
     a5c:	00001700 	andeq	r1, r0, r0, lsl #14
     a60:	0b470000 	bleq	11c0a68 <__RAM_SIZE+0x10c0a68>
     a64:	01160000 	tsteq	r6, r0
     a68:	00030550 	andeq	r0, r3, r0, asr r5
     a6c:	16000000 	strne	r0, [r0], -r0
     a70:	30015101 	andcc	r5, r1, r1, lsl #2
     a74:	011b0000 	tsteq	fp, r0
     a78:	0000033c 	andeq	r0, r0, ip, lsr r3
     a7c:	01061301 	tsteq	r6, r1, lsl #6
	...
     a88:	00000349 	andeq	r0, r0, r9, asr #6
     a8c:	000ab501 	andeq	fp, sl, r1, lsl #10
     a90:	030a1c00 	movweq	r1, #44032	; 0xac00
     a94:	0ac50000 	beq	ff140a9c <__StackTop+0xc7040a9c>
     a98:	05010000 	streq	r0, [r1, #-0]
     a9c:	00000003 	andeq	r0, r0, r3
     aa0:	00001700 	andeq	r1, r0, r0, lsl #14
     aa4:	0b2c0000 	bleq	b00aac <__RAM_SIZE+0xa00aac>
     aa8:	01160000 	tsteq	r6, r0
     aac:	00030550 	andeq	r0, r3, r0, asr r5
     ab0:	00000000 	andeq	r0, r0, r0
     ab4:	00c30b00 	sbceq	r0, r3, r0, lsl #22
     ab8:	0ac50000 	beq	ff140ac0 <__StackTop+0xc7040ac0>
     abc:	850c0000 	strhi	r0, [ip, #-0]
     ac0:	0f000000 	svceq	0x00000000
     ac4:	0ab50600 	beq	fed422cc <__StackTop+0xc6c422cc>
     ac8:	011b0000 	tsteq	fp, r0
     acc:	00000107 	andeq	r0, r0, r7, lsl #2
     ad0:	01060f01 	tsteq	r6, r1, lsl #30
	...
     adc:	00000369 	andeq	r0, r0, r9, ror #6
     ae0:	000b0901 	andeq	r0, fp, r1, lsl #18
     ae4:	030a1c00 	movweq	r1, #44032	; 0xac00
     ae8:	0b190000 	bleq	640af0 <__RAM_SIZE+0x540af0>
     aec:	05010000 	streq	r0, [r1, #-0]
     af0:	00000003 	andeq	r0, r0, r3
     af4:	00001700 	andeq	r1, r0, r0, lsl #14
     af8:	0b2c0000 	bleq	b00b00 <__RAM_SIZE+0xa00b00>
     afc:	01160000 	tsteq	r6, r0
     b00:	00030550 	andeq	r0, r3, r0, asr r5
     b04:	00000000 	andeq	r0, r0, r0
     b08:	00c30b00 	sbceq	r0, r3, r0, lsl #22
     b0c:	0b190000 	bleq	640b14 <__RAM_SIZE+0x540b14>
     b10:	850c0000 	strhi	r0, [ip, #-0]
     b14:	19000000 	stmdbne	r0, {}	; <UNPREDICTABLE>
     b18:	0b090600 	bleq	242320 <__RAM_SIZE+0x142320>
     b1c:	01200000 			; <UNDEFINED> instruction: 0x01200000
     b20:	00035601 	andeq	r5, r3, r1, lsl #12
     b24:	00035600 	andeq	r5, r3, r0, lsl #12
     b28:	06070700 	streq	r0, [r7], -r0, lsl #14
     b2c:	1b010121 	blne	40fb8 <__HEAP_SIZE+0x3ffb8>
     b30:	11000000 	mrsne	r0, (UNDEF: 0)
     b34:	0a000000 	beq	b3c <__Vectors_Size+0x37c>
     b38:	01012000 	mrseq	r2, (UNDEF: 1)
     b3c:	0000029f 	muleq	r0, pc, r2	; <UNPREDICTABLE>
     b40:	0000029f 	muleq	r0, pc, r2	; <UNPREDICTABLE>
     b44:	20064608 	andcs	r4, r6, r8, lsl #12
     b48:	05d10101 	ldrbeq	r0, [r1, #257]	; 0x101
     b4c:	05d10000 	ldrbeq	r0, [r1]
     b50:	c8090000 	stmdagt	r9, {}	; <UNPREDICTABLE>
     b54:	01012205 	tsteq	r1, r5, lsl #4
     b58:	00000360 	andeq	r0, r0, r0, ror #6
     b5c:	00000360 	andeq	r0, r0, r0, ror #6
     b60:	10017e06 	andne	r7, r1, r6, lsl #28
     b64:	3a010122 	bcc	40ff4 <__HEAP_SIZE+0x3fff4>
     b68:	3a000001 	bcc	b74 <__Vectors_Size+0x3b4>
     b6c:	06000001 	streq	r0, [r0], -r1
     b70:	220605ec 	andcs	r0, r6, #236, 10	; 0x3b000000
     b74:	00530101 	subseq	r0, r3, r1, lsl #2
     b78:	00530000 	subseq	r0, r3, r0
     b7c:	58060000 	stmdapl	r6, {}	; <UNPREDICTABLE>
     b80:	01210603 			; <UNDEFINED> instruction: 0x01210603
     b84:	0000ae01 	andeq	sl, r0, r1, lsl #28
     b88:	0000a400 	andeq	sl, r0, r0, lsl #8
     b8c:	20000a00 	andcs	r0, r0, r0, lsl #20
     b90:	00e70101 	rsceq	r0, r7, r1, lsl #2
     b94:	00e70000 	rsceq	r0, r7, r0
     b98:	4a080000 	bmi	200ba0 <__RAM_SIZE+0x100ba0>
     b9c:	0101200e 	tsteq	r1, lr
     ba0:	00000409 	andeq	r0, r0, r9, lsl #8
     ba4:	00000409 	andeq	r0, r0, r9, lsl #8
     ba8:	200e4b08 	andcs	r4, lr, r8, lsl #22
     bac:	02470101 	subeq	r0, r7, #1073741824	; 0x40000000
     bb0:	02470000 	subeq	r0, r7, #0
     bb4:	48080000 	stmdami	r8, {}	; <UNPREDICTABLE>
     bb8:	04e50006 	strbteq	r0, [r5], #6
     bbc:	00020000 	andeq	r0, r2, r0
     bc0:	00000201 	andeq	r0, r0, r1, lsl #4
     bc4:	01890104 	orreq	r0, r9, r4, lsl #2
     bc8:	590c0000 	stmdbpl	ip, {}	; <UNPREDICTABLE>
     bcc:	85000004 	strhi	r0, [r0, #-4]
     bd0:	90000003 	andls	r0, r0, r3
	...
     bdc:	d7000000 	strle	r0, [r0, -r0]
     be0:	02000004 	andeq	r0, r0, #4
     be4:	02730601 	rsbseq	r0, r3, #1048576	; 0x100000
     be8:	7f030000 	svcvc	0x00030000
     bec:	02000001 	andeq	r0, r0, #1
     bf0:	003c182b 	eorseq	r1, ip, fp, lsr #16
     bf4:	01020000 	mrseq	r0, (UNDEF: 2)
     bf8:	00027108 	andeq	r7, r2, r8, lsl #2
     bfc:	05020200 	streq	r0, [r2, #-512]	; 0xfffffe00
     c00:	00000032 	andeq	r0, r0, r2, lsr r0
     c04:	1a070202 	bne	1c1414 <__RAM_SIZE+0xc1414>
     c08:	02000003 	andeq	r0, r0, #3
     c0c:	012c0504 			; <UNDEFINED> instruction: 0x012c0504
     c10:	6f030000 	svcvs	0x00030000
     c14:	02000000 	andeq	r0, r0, #0
     c18:	0064194f 	rsbeq	r1, r4, pc, asr #18
     c1c:	04020000 	streq	r0, [r2], #-0
     c20:	0002c207 	andeq	ip, r2, r7, lsl #4
     c24:	05080200 	streq	r0, [r8, #-512]	; 0xfffffe00
     c28:	00000127 	andeq	r0, r0, r7, lsr #2
     c2c:	bd070802 	stclt	8, cr0, [r7, #-8]
     c30:	04000002 	streq	r0, [r0], #-2
     c34:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
     c38:	04020074 	streq	r0, [r2], #-116	; 0xffffff8c
     c3c:	0002c707 	andeq	ip, r2, r7, lsl #14
     c40:	01810300 	orreq	r0, r1, r0, lsl #6
     c44:	18030000 	stmdane	r3, {}	; <UNPREDICTABLE>
     c48:	00003013 	andeq	r3, r0, r3, lsl r0
     c4c:	00870500 	addeq	r0, r7, r0, lsl #10
     c50:	71030000 	mrsvc	r0, (UNDEF: 3)
     c54:	03000000 	movweq	r0, #0
     c58:	00581430 	subseq	r1, r8, r0, lsr r4
     c5c:	98050000 	stmdals	r5, {}	; <UNPREDICTABLE>
     c60:	06000000 	streq	r0, [r0], -r0
     c64:	000000a4 	andeq	r0, r0, r4, lsr #1
     c68:	04027c07 	streq	r7, [r2], #-3079	; 0xfffff3f9
     c6c:	b30901f8 	movwlt	r0, #37368	; 0x91f8
     c70:	08000003 	stmdaeq	r0, {r0, r1}
     c74:	00000092 	muleq	r0, r2, r0
     c78:	1201fa04 	andne	pc, r1, #4, 20	; 0x4000
     c7c:	000000a9 	andeq	r0, r0, r9, lsr #1
     c80:	08002302 	stmdaeq	r0, {r1, r8, r9, sp}
     c84:	00000442 	andeq	r0, r0, r2, asr #8
     c88:	1201fb04 	andne	pc, r1, #4, 22	; 0x1000
     c8c:	000000a4 	andeq	r0, r0, r4, lsr #1
     c90:	08042302 	stmdaeq	r4, {r1, r8, r9, sp}
     c94:	0000034c 	andeq	r0, r0, ip, asr #6
     c98:	1201fc04 	andne	pc, r1, #4, 24	; 0x400
     c9c:	000000a4 	andeq	r0, r0, r4, lsr #1
     ca0:	08082302 	stmdaeq	r8, {r1, r8, r9, sp}
     ca4:	0000044d 	andeq	r0, r0, sp, asr #8
     ca8:	1201fd04 	andne	pc, r1, #4, 26	; 0x100
     cac:	000000a4 	andeq	r0, r0, r4, lsr #1
     cb0:	090c2302 	stmdbeq	ip, {r1, r8, r9, sp}
     cb4:	00524353 	subseq	r4, r2, r3, asr r3
     cb8:	1201fe04 	andne	pc, r1, #4, 28	; 0x40
     cbc:	000000a4 	andeq	r0, r0, r4, lsr #1
     cc0:	09102302 	ldmdbeq	r0, {r1, r8, r9, sp}
     cc4:	00524343 	subseq	r4, r2, r3, asr #6
     cc8:	1201ff04 	andne	pc, r1, #4, 30
     ccc:	000000a4 	andeq	r0, r0, r4, lsr #1
     cd0:	08142302 	ldmdaeq	r4, {r1, r8, r9, sp}
     cd4:	000002b8 			; <UNDEFINED> instruction: 0x000002b8
     cd8:	12020004 	andne	r0, r2, #4
     cdc:	000003c3 	andeq	r0, r0, r3, asr #7
     ce0:	08182302 	ldmdaeq	r8, {r1, r8, r9, sp}
     ce4:	00000304 	andeq	r0, r0, r4, lsl #6
     ce8:	12020104 	andne	r0, r2, #4, 2
     cec:	000000a4 	andeq	r0, r0, r4, lsr #1
     cf0:	08242302 	stmdaeq	r4!, {r1, r8, r9, sp}
     cf4:	0000025c 	andeq	r0, r0, ip, asr r2
     cf8:	12020204 	andne	r0, r2, #4, 4	; 0x40000000
     cfc:	000000a4 	andeq	r0, r0, r4, lsr #1
     d00:	08282302 	stmdaeq	r8!, {r1, r8, r9, sp}
     d04:	0000036c 	andeq	r0, r0, ip, ror #6
     d08:	12020304 	andne	r0, r2, #4, 6	; 0x10000000
     d0c:	000000a4 	andeq	r0, r0, r4, lsr #1
     d10:	082c2302 	stmdaeq	ip!, {r1, r8, r9, sp}
     d14:	00000351 	andeq	r0, r0, r1, asr r3
     d18:	12020404 	andne	r0, r2, #4, 8	; 0x4000000
     d1c:	000000a4 	andeq	r0, r0, r4, lsr #1
     d20:	08302302 	ldmdaeq	r0!, {r1, r8, r9, sp}
     d24:	0000002c 	andeq	r0, r0, ip, lsr #32
     d28:	12020504 	andne	r0, r2, #4, 10	; 0x1000000
     d2c:	000000a4 	andeq	r0, r0, r4, lsr #1
     d30:	08342302 	ldmdaeq	r4!, {r1, r8, r9, sp}
     d34:	00000135 	andeq	r0, r0, r5, lsr r1
     d38:	12020604 	andne	r0, r2, #4, 12	; 0x400000
     d3c:	000000a4 	andeq	r0, r0, r4, lsr #1
     d40:	08382302 	ldmdaeq	r8!, {r1, r8, r9, sp}
     d44:	0000042f 	andeq	r0, r0, pc, lsr #8
     d48:	12020704 	andne	r0, r2, #4, 14	; 0x100000
     d4c:	000000a4 	andeq	r0, r0, r4, lsr #1
     d50:	083c2302 	ldmdaeq	ip!, {r1, r8, r9, sp}
     d54:	0000004c 	andeq	r0, r0, ip, asr #32
     d58:	12020804 	andne	r0, r2, #4, 16	; 0x40000
     d5c:	000003dd 	ldrdeq	r0, [r0], -sp
     d60:	08402302 	stmdaeq	r0, {r1, r8, r9, sp}^
     d64:	0000043b 	andeq	r0, r0, fp, lsr r4
     d68:	12020904 	andne	r0, r2, #4, 18	; 0x10000
     d6c:	000000a9 	andeq	r0, r0, r9, lsr #1
     d70:	08482302 	stmdaeq	r8, {r1, r8, r9, sp}^
     d74:	000000e0 	andeq	r0, r0, r0, ror #1
     d78:	12020a04 	andne	r0, r2, #4, 20	; 0x4000
     d7c:	000000a9 	andeq	r0, r0, r9, lsr #1
     d80:	084c2302 	stmdaeq	ip, {r1, r8, r9, sp}^
     d84:	00000163 	andeq	r0, r0, r3, ror #2
     d88:	12020b04 	andne	r0, r2, #4, 22	; 0x1000
     d8c:	000003f7 	strdeq	r0, [r0], -r7
     d90:	08502302 	ldmdaeq	r0, {r1, r8, r9, sp}^
     d94:	00000297 	muleq	r0, r7, r2
     d98:	12020c04 	andne	r0, r2, #4, 24	; 0x400
     d9c:	00000411 	andeq	r0, r0, r1, lsl r4
     da0:	08602302 	stmdaeq	r0!, {r1, r8, r9, sp}^
     da4:	000003f7 	strdeq	r0, [r0], -r7
     da8:	12020d04 	andne	r0, r2, #4, 26	; 0x100
     dac:	000000a9 	andeq	r0, r0, r9, lsr #1
     db0:	09782302 	ldmdbeq	r8!, {r1, r8, r9, sp}^
     db4:	00525443 	subseq	r5, r2, r3, asr #8
     db8:	12020e04 	andne	r0, r2, #4, 28	; 0x40
     dbc:	000000a9 	andeq	r0, r0, r9, lsr #1
     dc0:	087c2302 	ldmdaeq	ip!, {r1, r8, r9, sp}^
     dc4:	0000032d 	andeq	r0, r0, sp, lsr #6
     dc8:	12020f04 	andne	r0, r2, #4, 30
     dcc:	000000a9 	andeq	r0, r0, r9, lsr #1
     dd0:	01802303 	orreq	r2, r0, r3, lsl #6
     dd4:	00031308 	andeq	r1, r3, r8, lsl #6
     dd8:	02100400 	andseq	r0, r0, #0, 8
     ddc:	0000a412 	andeq	sl, r0, r2, lsl r4
     de0:	84230300 	strthi	r0, [r3], #-768	; 0xfffffd00
     de4:	04470801 	strbeq	r0, [r7], #-2049	; 0xfffff7ff
     de8:	11040000 	mrsne	r0, (UNDEF: 4)
     dec:	00a41202 	adceq	r1, r4, r2, lsl #4
     df0:	23030000 	movwcs	r0, #12288	; 0x3000
     df4:	53080188 	movwpl	r0, #33160	; 0x8188
     df8:	04000004 	streq	r0, [r0], #-4
     dfc:	a4120212 	ldrge	r0, [r2], #-530	; 0xfffffdee
     e00:	03000000 	movweq	r0, #0
     e04:	08018c23 	stmdaeq	r1, {r0, r1, r5, sl, fp, pc}
     e08:	000003ed 	andeq	r0, r0, sp, ror #7
     e0c:	12021304 	andne	r1, r2, #4, 6	; 0x10000000
     e10:	00000416 	andeq	r0, r0, r6, lsl r4
     e14:	01902303 	orrseq	r2, r0, r3, lsl #6
     e18:	0002f708 	andeq	pc, r2, r8, lsl #14
     e1c:	02140400 	andseq	r0, r4, #0, 8
     e20:	0000a412 	andeq	sl, r0, r2, lsl r4
     e24:	e4230300 	strt	r0, [r3], #-768	; 0xfffffd00
     e28:	03ca0801 	biceq	r0, sl, #65536	; 0x10000
     e2c:	15040000 	strne	r0, [r4, #-0]
     e30:	00a41202 	adceq	r1, r4, r2, lsl #4
     e34:	23030000 	movwcs	r0, #12288	; 0x3000
     e38:	710801e8 	smlattvc	r8, r8, r1, r0
     e3c:	04000003 	streq	r0, [r0], #-3
     e40:	26120216 			; <UNDEFINED> instruction: 0x26120216
     e44:	03000004 	movweq	r0, #4
     e48:	0801ec23 	stmdaeq	r1, {r0, r1, r5, sl, fp, sp, lr, pc}
     e4c:	000000db 	ldrdeq	r0, [r0], -fp
     e50:	12021704 	andne	r1, r2, #4, 14	; 0x100000
     e54:	000000a4 	andeq	r0, r0, r4, lsr #1
     e58:	04802303 	streq	r2, [r0], #771	; 0x303
     e5c:	00037b08 	andeq	r7, r3, r8, lsl #22
     e60:	02180400 	andseq	r0, r8, #0, 8
     e64:	00043612 	andeq	r3, r4, r2, lsl r6
     e68:	84230300 	strthi	r0, [r3], #-768	; 0xfffffd00
     e6c:	00980804 	addseq	r0, r8, r4, lsl #16
     e70:	19040000 	stmdbne	r4, {}	; <UNPREDICTABLE>
     e74:	00a91202 	adceq	r1, r9, r2, lsl #4
     e78:	23030000 	movwcs	r0, #12288	; 0x3000
     e7c:	3c0804c0 	cfstrscc	mvf0, [r8], {192}	; 0xc0
     e80:	04000000 	streq	r0, [r0], #-0
     e84:	a912021a 	ldmdbge	r2, {r1, r3, r4, r9}
     e88:	03000000 	movweq	r0, #0
     e8c:	0804c423 	stmdaeq	r4, {r0, r1, r5, sl, lr, pc}
     e90:	00000121 	andeq	r0, r0, r1, lsr #2
     e94:	12021b04 	andne	r1, r2, #4, 22	; 0x1000
     e98:	000000a9 	andeq	r0, r0, r9, lsr #1
     e9c:	04c82303 	strbeq	r2, [r8], #771	; 0x303
     ea0:	0000b508 	andeq	fp, r0, r8, lsl #10
     ea4:	021c0400 	andseq	r0, ip, #0, 8
     ea8:	00044612 	andeq	r4, r4, r2, lsl r6
     eac:	cc230300 	stcgt	3, cr0, [r3], #-0
     eb0:	02610804 	rsbeq	r0, r1, #4, 16	; 0x40000
     eb4:	1d040000 	stcne	0, cr0, [r4, #-0]
     eb8:	00a41202 	adceq	r1, r4, r2, lsl #4
     ebc:	23030000 	movwcs	r0, #12288	; 0x3000
     ec0:	bf0804d0 	svclt	0x000804d0
     ec4:	04000000 	streq	r0, [r0], #-0
     ec8:	4612021e 			; <UNDEFINED> instruction: 0x4612021e
     ecc:	03000004 	movweq	r0, #4
     ed0:	0804d423 	stmdaeq	r4, {r0, r1, r5, sl, ip, lr, pc}
     ed4:	0000027f 	andeq	r0, r0, pc, ror r2
     ed8:	12021f04 	andne	r1, r2, #4, 30
     edc:	000000a4 	andeq	r0, r0, r4, lsr #1
     ee0:	04d82303 	ldrbeq	r2, [r8], #771	; 0x303
     ee4:	00026908 	andeq	r6, r2, r8, lsl #18
     ee8:	02200400 	eoreq	r0, r0, #0, 8
     eec:	0000a412 	andeq	sl, r0, r2, lsl r4
     ef0:	dc230300 	stcle	3, cr0, [r3], #-0
     ef4:	01010804 	tsteq	r1, r4, lsl #16
     ef8:	21040000 	mrscs	r0, (UNDEF: 4)
     efc:	00a41202 	adceq	r1, r4, r2, lsl #4
     f00:	23030000 	movwcs	r0, #12288	; 0x3000
     f04:	340804e0 	strcc	r0, [r8], #-1248	; 0xfffffb20
     f08:	04000003 	streq	r0, [r0], #-3
     f0c:	a4120222 	ldrge	r0, [r2], #-546	; 0xfffffdde
     f10:	03000000 	movweq	r0, #0
     f14:	0804e423 	stmdaeq	r4, {r0, r1, r5, sl, sp, lr, pc}
     f18:	000002fc 	strdeq	r0, [r0], -ip
     f1c:	12022304 	andne	r2, r2, #4, 6	; 0x10000000
     f20:	000000a4 	andeq	r0, r0, r4, lsr #1
     f24:	04e82303 	strbteq	r2, [r8], #771	; 0x303
     f28:	00000008 	andeq	r0, r0, r8
     f2c:	02240400 	eoreq	r0, r4, #0, 8
     f30:	0000a412 	andeq	sl, r0, r2, lsl r4
     f34:	ec230300 	stc	3, cr0, [r3], #-0
     f38:	007a0804 	rsbseq	r0, sl, r4, lsl #16
     f3c:	25040000 	strcs	r0, [r4, #-0]
     f40:	00a41202 	adceq	r1, r4, r2, lsl #4
     f44:	23030000 	movwcs	r0, #12288	; 0x3000
     f48:	e60804f0 			; <UNDEFINED> instruction: 0xe60804f0
     f4c:	04000003 	streq	r0, [r0], #-3
     f50:	a4120226 	ldrge	r0, [r2], #-550	; 0xfffffdda
     f54:	03000000 	movweq	r0, #0
     f58:	0804f423 	stmdaeq	r4, {r0, r1, r5, sl, ip, sp, lr, pc}
     f5c:	00000434 	andeq	r0, r0, r4, lsr r4
     f60:	12022704 	andne	r2, r2, #4, 14	; 0x100000
     f64:	000000a4 	andeq	r0, r0, r4, lsr #1
     f68:	04f82303 	ldrbteq	r2, [r8], #771	; 0x303
     f6c:	00930a00 	addseq	r0, r3, r0, lsl #20
     f70:	03c30000 	biceq	r0, r3, #0
     f74:	800b0000 	andhi	r0, fp, r0
     f78:	0b000000 	bleq	f80 <__Vectors_Size+0x7c0>
     f7c:	03b30500 			; <UNDEFINED> instruction: 0x03b30500
     f80:	a90a0000 	stmdbge	sl, {}	; <UNPREDICTABLE>
     f84:	d8000000 	stmdale	r0, {}	; <UNPREDICTABLE>
     f88:	0b000003 	bleq	f9c <__Vectors_Size+0x7dc>
     f8c:	00000080 	andeq	r0, r0, r0, lsl #1
     f90:	c8060001 	stmdagt	r6, {r0}
     f94:	05000003 	streq	r0, [r0, #-3]
     f98:	000003d8 	ldrdeq	r0, [r0], -r8
     f9c:	0000a90a 	andeq	sl, r0, sl, lsl #18
     fa0:	0003f200 	andeq	pc, r3, r0, lsl #4
     fa4:	00800b00 	addeq	r0, r0, r0, lsl #22
     fa8:	00030000 	andeq	r0, r3, r0
     fac:	0003e206 	andeq	lr, r3, r6, lsl #4
     fb0:	03f20500 	mvnseq	r0, #0, 10
     fb4:	a90a0000 	stmdbge	sl, {}	; <UNPREDICTABLE>
     fb8:	0c000000 	stceq	0, cr0, [r0], {-0}
     fbc:	0b000004 	bleq	fd4 <__Vectors_Size+0x814>
     fc0:	00000080 	andeq	r0, r0, r0, lsl #1
     fc4:	fc060005 	stc2	0, cr0, [r6], {5}
     fc8:	05000003 	streq	r0, [r0, #-3]
     fcc:	0000040c 	andeq	r0, r0, ip, lsl #8
     fd0:	0000980a 	andeq	r9, r0, sl, lsl #16
     fd4:	00042600 	andeq	r2, r4, r0, lsl #12
     fd8:	00800b00 	addeq	r0, r0, r0, lsl #22
     fdc:	00140000 	andseq	r0, r4, r0
     fe0:	0000980a 	andeq	r9, r0, sl, lsl #16
     fe4:	00043600 	andeq	r3, r4, r0, lsl #12
     fe8:	00800b00 	addeq	r0, r0, r0, lsl #22
     fec:	00440000 	subeq	r0, r4, r0
     ff0:	0000980a 	andeq	r9, r0, sl, lsl #16
     ff4:	00044600 	andeq	r4, r4, r0, lsl #12
     ff8:	00800b00 	addeq	r0, r0, r0, lsl #22
     ffc:	000e0000 	andeq	r0, lr, r0
    1000:	0000980a 	andeq	r9, r0, sl, lsl #16
    1004:	00045600 	andeq	r5, r4, r0, lsl #12
    1008:	00800b00 	addeq	r0, r0, r0, lsl #22
    100c:	00000000 	andeq	r0, r0, r0
    1010:	0002af0c 	andeq	sl, r2, ip, lsl #30
    1014:	02280400 	eoreq	r0, r8, #0, 8
    1018:	0000ae03 	andeq	sl, r0, r3, lsl #28
    101c:	04b30300 	ldrteq	r0, [r3], #768	; 0x300
    1020:	24050000 	strcs	r0, [r5], #-0
    1024:	0004740f 	andeq	r7, r4, pc, lsl #8
    1028:	04630600 	strbteq	r0, [r3], #-1536	; 0xfffffa00
    102c:	040d0000 	streq	r0, [sp], #-0
    1030:	0000047a 	andeq	r0, r0, sl, ror r4
    1034:	8e0f010e 	adfhie	f0, f7, #0.5
    1038:	05000004 	streq	r0, [r0, #-4]
    103c:	00981129 	addseq	r1, r8, r9, lsr #2
    1040:	01010000 	mrseq	r0, (UNDEF: 1)
    1044:	00046f0a 	andeq	r6, r4, sl, lsl #30
    1048:	00049b00 	andeq	r9, r4, r0, lsl #22
    104c:	00801000 	addeq	r1, r0, r0
    1050:	01ef0000 	mvneq	r0, r0
    1054:	048a0600 	streq	r0, [sl], #1536	; 0x600
    1058:	9e0f0000 	cdpls	0, 0, cr0, cr15, cr0, {0}
    105c:	01000004 	tsteq	r0, r4
    1060:	049b2038 	ldreq	r2, [fp], #56	; 0x38
    1064:	01010000 	mrseq	r0, (UNDEF: 1)
    1068:	00047c11 	andeq	r7, r4, r1, lsl ip
    106c:	0a3e0100 	beq	f81474 <__RAM_SIZE+0xe81474>
    1070:	00000305 	andeq	r0, r0, r5, lsl #6
    1074:	01123800 	tsteq	r2, r0, lsl #16
    1078:	000004a8 	andeq	r0, r0, r8, lsr #9
    107c:	01064c01 	tsteq	r6, r1, lsl #24
    1080:	10000888 	andne	r0, r0, r8, lsl #17
    1084:	100008b4 			; <UNDEFINED> instruction: 0x100008b4
    1088:	01007d02 	tsteq	r0, r2, lsl #26
    108c:	04780112 	ldrbteq	r0, [r8], #-274	; 0xfffffeee
    1090:	44010000 	strmi	r0, [r1], #-0
    1094:	00000106 	andeq	r0, r0, r6, lsl #2
    1098:	00000000 	andeq	r0, r0, r0
    109c:	7d020000 	stcvc	0, cr0, [r2, #-0]
    10a0:	c1000100 	mrsgt	r0, (UNDEF: 16)
    10a4:	0200001b 	andeq	r0, r0, #27
    10a8:	0002f100 	andeq	pc, r2, r0, lsl #2
    10ac:	89010400 	stmdbhi	r1, {sl}
    10b0:	0c000001 	stceq	0, cr0, [r0], {1}
    10b4:	000005a5 	andeq	r0, r0, r5, lsr #11
    10b8:	00000385 	andeq	r0, r0, r5, lsl #7
    10bc:	00000160 	andeq	r0, r0, r0, ror #2
	...
    10c8:	000006ac 	andeq	r0, r0, ip, lsr #13
    10cc:	68040802 	stmdavs	r4, {r1, fp}
    10d0:	02000000 	andeq	r0, r0, #0
    10d4:	02c70704 	sbceq	r0, r7, #4, 14	; 0x100000
    10d8:	01020000 	mrseq	r0, (UNDEF: 2)
    10dc:	00027306 	andeq	r7, r2, r6, lsl #6
    10e0:	08010200 	stmdaeq	r1, {r9}
    10e4:	00000271 	andeq	r0, r0, r1, ror r2
    10e8:	32050202 	andcc	r0, r5, #536870912	; 0x20000000
    10ec:	02000000 	andeq	r0, r0, #0
    10f0:	031a0702 	tsteq	sl, #524288	; 0x80000
    10f4:	04020000 	streq	r0, [r2], #-0
    10f8:	00012c05 	andeq	r2, r1, r5, lsl #24
    10fc:	00530300 	subseq	r0, r3, r0, lsl #6
    1100:	04020000 	streq	r0, [r2], #-0
    1104:	0002c207 	andeq	ip, r2, r7, lsl #4
    1108:	05080200 	streq	r0, [r8, #-512]	; 0xfffffe00
    110c:	00000127 	andeq	r0, r0, r7, lsr #2
    1110:	00006603 	andeq	r6, r0, r3, lsl #12
    1114:	06630400 	strbteq	r0, [r3], -r0, lsl #8
    1118:	69020000 	stmdbvs	r2, {}	; <UNPREDICTABLE>
    111c:	00007e19 	andeq	r7, r0, r9, lsl lr
    1120:	07080200 	streq	r0, [r8, -r0, lsl #4]
    1124:	000002bd 			; <UNDEFINED> instruction: 0x000002bd
    1128:	69050405 	stmdbvs	r5, {r0, r2, sl}
    112c:	0300746e 	movweq	r7, #1134	; 0x46e
    1130:	00000085 	andeq	r0, r0, r5, lsl #1
    1134:	00068c04 	andeq	r8, r6, r4, lsl #24
    1138:	1ae80200 	bne	ffa01940 <__StackTop+0xc7901940>
    113c:	00000030 	andeq	r0, r0, r0, lsr r0
    1140:	00003003 	andeq	r3, r0, r3
    1144:	06650400 	strbteq	r0, [r5], -r0, lsl #8
    1148:	3c030000 	stccc	0, cr0, [r3], {-0}
    114c:	00007214 	andeq	r7, r0, r4, lsl r2
    1150:	068e0400 	streq	r0, [lr], r0, lsl #8
    1154:	52030000 	andpl	r0, r3, #0
    1158:	00009115 	andeq	r9, r0, r5, lsl r1
    115c:	06f60400 	ldrbteq	r0, [r6], r0, lsl #8
    1160:	28040000 	stmdacs	r4, {}	; <UNPREDICTABLE>
    1164:	0000c61b 	andeq	ip, r0, fp, lsl r6
    1168:	059b0600 	ldreq	r0, [fp, #1536]	; 0x600
    116c:	06040000 	streq	r0, [r4], -r0
    1170:	0000e000 	andeq	lr, r0, r0
    1174:	064b0700 	strbeq	r0, [fp], -r0, lsl #14
    1178:	00e00000 	rsceq	r0, r0, r0
    117c:	23020000 	movwcs	r0, #8192	; 0x2000
    1180:	08000100 	stmdaeq	r0, {r8}
    1184:	059d0404 	ldreq	r0, [sp, #1028]	; 0x404
    1188:	63040000 	movwvs	r0, #16384	; 0x4000
    118c:	0000ba18 	andeq	fp, r0, r8, lsl sl
    1190:	05040400 	streq	r0, [r4, #-1024]	; 0xfffffc00
    1194:	d1050000 	mrsle	r0, (UNDEF: 5)
    1198:	00003017 	andeq	r3, r0, r7, lsl r0
    119c:	00ee0300 	rsceq	r0, lr, r0, lsl #6
    11a0:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    11a4:	00006304 	andeq	r6, r0, r4, lsl #6
    11a8:	05e20400 	strbeq	r0, [r2, #1024]!	; 0x400
    11ac:	7a010000 	bvc	411b4 <__HEAP_SIZE+0x401b4>
    11b0:	00011210 	andeq	r1, r1, r0, lsl r2
    11b4:	18040900 	stmdane	r4, {r8, fp}
    11b8:	0a000001 	beq	11c4 <__HEAP_SIZE+0x1c4>
    11bc:	00013301 	andeq	r3, r1, r1, lsl #6
    11c0:	01330b00 	teqeq	r3, r0, lsl #22
    11c4:	e00b0000 	and	r0, fp, r0
    11c8:	0b000000 	bleq	11d0 <__HEAP_SIZE+0x1d0>
    11cc:	000000ee 	andeq	r0, r0, lr, ror #1
    11d0:	0000ee0b 	andeq	lr, r0, fp, lsl #28
    11d4:	01020000 	mrseq	r0, (UNDEF: 2)
    11d8:	00027a08 	andeq	r7, r2, r8, lsl #20
    11dc:	01330300 	teqeq	r3, r0, lsl #6
    11e0:	080c0000 	stmdaeq	ip, {}	; <UNPREDICTABLE>
    11e4:	67097e01 	strvs	r7, [r9, -r1, lsl #28]
    11e8:	0d000001 	stceq	0, cr0, [r0, #-4]
    11ec:	00746366 	rsbseq	r6, r4, r6, ror #6
    11f0:	780b7f01 	stmdavc	fp, {r0, r8, r9, sl, fp, ip, sp, lr}
    11f4:	02000001 	andeq	r0, r0, #1
    11f8:	610d0023 	tstvs	sp, r3, lsr #32
    11fc:	01006772 	tsteq	r0, r2, ror r7
    1200:	00e00980 	rsceq	r0, r0, r0, lsl #19
    1204:	23020000 	movwcs	r0, #8192	; 0x2000
    1208:	010a0004 	tsteq	sl, r4
    120c:	00000178 	andeq	r0, r0, r8, ror r1
    1210:	0001330b 	andeq	r3, r1, fp, lsl #6
    1214:	00e00b00 	rsceq	r0, r0, r0, lsl #22
    1218:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    121c:	00016704 	andeq	r6, r1, r4, lsl #14
    1220:	06d80400 	ldrbeq	r0, [r8], r0, lsl #8
    1224:	81010000 	mrshi	r0, (UNDEF: 1)
    1228:	00013f03 	andeq	r3, r1, r3, lsl #30
    122c:	017e0300 	cmneq	lr, r0, lsl #6
    1230:	010e0000 	mrseq	r0, (UNDEF: 14)
    1234:	0000057b 	andeq	r0, r0, fp, ror r5
    1238:	05038a01 	streq	r8, [r3, #-2561]	; 0xfffff5ff
    123c:	00008501 	andeq	r8, r0, r1, lsl #10
	...
    1248:	00038900 	andeq	r8, r3, r0, lsl #18
    124c:	024c0100 	subeq	r0, ip, #0, 2
    1250:	6f0f0000 	svcvs	0x000f0000
    1254:	01007475 	tsteq	r0, r5, ror r4
    1258:	7816038a 	ldmdavc	r6, {r1, r3, r7, r8, r9}
    125c:	eb000001 	bl	1268 <__HEAP_SIZE+0x268>
    1260:	e5000003 	str	r0, [r0, #-3]
    1264:	0f000003 	svceq	0x00000003
    1268:	00677261 	rsbeq	r7, r7, r1, ror #4
    126c:	3d038a01 	vstrcc	s16, [r3, #-4]
    1270:	000000e0 	andeq	r0, r0, r0, ror #1
    1274:	0000041c 	andeq	r0, r0, ip, lsl r4
    1278:	00000418 	andeq	r0, r0, r8, lsl r4
    127c:	0005c010 	andeq	ip, r5, r0, lsl r0
    1280:	038a0100 	orreq	r0, sl, #0, 2
    1284:	00024c4e 	andeq	r4, r2, lr, asr #24
    1288:	78910200 	ldmvc	r1, {r9}
    128c:	61761211 	cmnvs	r6, r1, lsl r2
    1290:	038c0100 	orreq	r0, ip, #0, 2
    1294:	0000e20b 	andeq	lr, r0, fp, lsl #4
    1298:	6c910200 	lfmvs	f0, 4, [r1], {0}
    129c:	0004dc13 	andeq	sp, r4, r3, lsl ip
    12a0:	038e0100 	orreq	r0, lr, #0, 2
    12a4:	00018a1b 	andeq	r8, r1, fp, lsl sl
    12a8:	64910200 	ldrvs	r0, [r1], #512	; 0x200
    12ac:	74657214 	strbtvc	r7, [r5], #-532	; 0xfffffdec
    12b0:	038f0100 	orreq	r0, pc, #0, 2
    12b4:	00008c0d 	andeq	r8, r0, sp, lsl #24
    12b8:	00043f00 	andeq	r3, r4, r0, lsl #30
    12bc:	00043d00 	andeq	r3, r4, r0, lsl #26
    12c0:	00001500 	andeq	r1, r0, r0, lsl #10
    12c4:	055f0000 	ldrbeq	r0, [pc, #-0]	; 12cc <__HEAP_SIZE+0x2cc>
    12c8:	01160000 	tsteq	r6, r0
    12cc:	00030550 	andeq	r0, r3, r0, asr r5
    12d0:	16000000 	strne	r0, [r0], -r0
    12d4:	91025101 	tstls	r2, r1, lsl #2
    12d8:	52011654 	andpl	r1, r1, #84, 12	; 0x5400000
    12dc:	16ff0902 	ldrbtne	r0, [pc], r2, lsl #18
    12e0:	91035301 	tstls	r3, r1, lsl #6
    12e4:	02160668 	andseq	r0, r6, #104, 12	; 0x6800000
    12e8:	9102007d 	tstls	r2, sp, ror r0
    12ec:	0900006c 	stmdbeq	r0, {r2, r3, r5, r6}
    12f0:	00013a04 	andeq	r3, r1, r4, lsl #20
    12f4:	ce010e00 	cdpgt	14, 0, cr0, cr1, cr0, {0}
    12f8:	01000005 	tsteq	r0, r5
    12fc:	01050384 	smlabbeq	r5, r4, r3, r0
    1300:	00000085 	andeq	r0, r0, r5, lsl #1
	...
    130c:	00000452 	andeq	r0, r0, r2, asr r4
    1310:	0002ee01 	andeq	lr, r2, r1, lsl #28
    1314:	04f51700 	ldrbteq	r1, [r5], #1792	; 0x700
    1318:	84010000 	strhi	r0, [r1], #-0
    131c:	02ee1503 	rsceq	r1, lr, #12582912	; 0xc00000
    1320:	04900000 	ldreq	r0, [r0], #0
    1324:	048a0000 	streq	r0, [sl], #0
    1328:	fd170000 	ldc2	0, cr0, [r7, #-0]
    132c:	01000003 	tsteq	r0, r3
    1330:	ee240384 	cdp	3, 2, cr0, cr4, cr4, {4}
    1334:	c2000000 	andgt	r0, r0, #0
    1338:	bc000004 	stclt	0, cr0, [r0], {4}
    133c:	17000004 	strne	r0, [r0, -r4]
    1340:	000005c0 	andeq	r0, r0, r0, asr #11
    1344:	37038401 	strcc	r8, [r3, -r1, lsl #8]
    1348:	0000024c 	andeq	r0, r0, ip, asr #4
    134c:	000004f4 	strdeq	r0, [r0], -r4
    1350:	000004ee 	andeq	r0, r0, lr, ror #9
    1354:	0061760f 	rsbeq	r7, r1, pc, lsl #12
    1358:	47038401 	strmi	r8, [r3, -r1, lsl #8]
    135c:	000000e2 	andeq	r0, r0, r2, ror #1
    1360:	00000522 	andeq	r0, r0, r2, lsr #10
    1364:	00000520 	andeq	r0, r0, r0, lsr #10
    1368:	00000015 	andeq	r0, r0, r5, lsl r0
    136c:	00055f00 	andeq	r5, r5, r0, lsl #30
    1370:	50011600 	andpl	r1, r1, r0, lsl #12
    1374:	00000305 	andeq	r0, r0, r5, lsl #6
    1378:	01160000 	tsteq	r6, r0
    137c:	01f30351 	mvnseq	r0, r1, asr r3
    1380:	52011650 	andpl	r1, r1, #80, 12	; 0x5000000
    1384:	5101f303 	tstpl	r1, r3, lsl #6	; <UNPREDICTABLE>
    1388:	03530116 	cmpeq	r3, #-2147483643	; 0x80000005
    138c:	005201f3 	ldrsheq	r0, [r2], #-19	; 0xffffffed
    1390:	33040900 	movwcc	r0, #18688	; 0x4900
    1394:	0e000001 	cdpeq	0, 0, cr0, cr0, cr1, {0}
    1398:	0004fc01 	andeq	pc, r4, r1, lsl #24
    139c:	037d0100 	cmneq	sp, #0, 2
    13a0:	00850105 	addeq	r0, r5, r5, lsl #2
	...
    13ac:	05350000 	ldreq	r0, [r5, #-0]!
    13b0:	74010000 	strvc	r0, [r1], #-0
    13b4:	17000003 	strne	r0, [r0, -r3]
    13b8:	000005c0 	andeq	r0, r0, r0, asr #11
    13bc:	19037d01 	stmdbne	r3, {r0, r8, sl, fp, ip, sp, lr}
    13c0:	0000024c 	andeq	r0, r0, ip, asr #4
    13c4:	00000573 	andeq	r0, r0, r3, ror r5
    13c8:	0000056d 	andeq	r0, r0, sp, ror #10
    13cc:	0061760f 	rsbeq	r7, r1, pc, lsl #12
    13d0:	29037d01 	stmdbcs	r3, {r0, r8, sl, fp, ip, sp, lr}
    13d4:	000000e2 	andeq	r0, r0, r2, ror #1
    13d8:	000005a1 	andeq	r0, r0, r1, lsr #11
    13dc:	0000059f 	muleq	r0, pc, r5	; <UNPREDICTABLE>
    13e0:	0004f513 	andeq	pc, r4, r3, lsl r5	; <UNPREDICTABLE>
    13e4:	037f0100 	cmneq	pc, #0, 2
    13e8:	00037408 	andeq	r7, r3, r8, lsl #8
    13ec:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    13f0:	00000015 	andeq	r0, r0, r5, lsl r0
    13f4:	00055f00 	andeq	r5, r5, r0, lsl #30
    13f8:	50011600 	andpl	r1, r1, r0, lsl #12
    13fc:	19f90305 	ldmibne	r9!, {r0, r2, r8, r9}^
    1400:	01161000 	tsteq	r6, r0
    1404:	74910251 	ldrvc	r0, [r1], #593	; 0x251
    1408:	02520116 	subseq	r0, r2, #-2147483643	; 0x80000005
    140c:	0116ff09 	tsteq	r6, r9, lsl #30	; <UNPREDICTABLE>
    1410:	01f30353 	mvnseq	r0, r3, asr r3
    1414:	18000050 	stmdane	r0, {r4, r6}
    1418:	00000133 	andeq	r0, r0, r3, lsr r1
    141c:	00000384 	andeq	r0, r0, r4, lsl #7
    1420:	00003019 	andeq	r3, r0, r9, lsl r0
    1424:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
    1428:	0005cf01 	andeq	ip, r5, r1, lsl #30
    142c:	03730100 	cmneq	r3, #0, 2
    1430:	00850105 	addeq	r0, r5, r5, lsl #2
	...
    143c:	05b40000 	ldreq	r0, [r4, #0]!
    1440:	33010000 	movwcc	r0, #4096	; 0x1000
    1444:	17000004 	strne	r0, [r0, -r4]
    1448:	000004f5 	strdeq	r0, [r0], -r5
    144c:	14037301 	strne	r7, [r3], #-769	; 0xfffffcff
    1450:	000002ee 	andeq	r0, r0, lr, ror #5
    1454:	00000616 	andeq	r0, r0, r6, lsl r6
    1458:	00000610 	andeq	r0, r0, r0, lsl r6
    145c:	0003fd17 	andeq	pc, r3, r7, lsl sp	; <UNPREDICTABLE>
    1460:	03730100 	cmneq	r3, #0, 2
    1464:	0000ee23 	andeq	lr, r0, r3, lsr #28
    1468:	00064800 	andeq	r4, r6, r0, lsl #16
    146c:	00064200 	andeq	r4, r6, r0, lsl #4
    1470:	05c01000 	strbeq	r1, [r0]
    1474:	73010000 	movwvc	r0, #4096	; 0x1000
    1478:	024c3603 	subeq	r3, ip, #3145728	; 0x300000
    147c:	91020000 	mrsls	r0, (UNDEF: 2)
    1480:	76121178 			; <UNDEFINED> instruction: 0x76121178
    1484:	75010061 	strvc	r0, [r1, #-97]	; 0xffffff9f
    1488:	00e20b03 	rsceq	r0, r2, r3, lsl #22
    148c:	91020000 	mrsls	r0, (UNDEF: 2)
    1490:	6572146c 	ldrbvs	r1, [r2, #-1132]!	; 0xfffffb94
    1494:	77010074 	smlsdxvc	r1, r4, r0, r0
    1498:	008c0d03 	addeq	r0, ip, r3, lsl #26
    149c:	06760000 	ldrbteq	r0, [r6], -r0
    14a0:	06740000 	ldrbteq	r0, [r4], -r0
    14a4:	00150000 	andseq	r0, r5, r0
    14a8:	5f000000 	svcpl	0x00000000
    14ac:	16000005 	strne	r0, [r0], -r5
    14b0:	03055001 	movweq	r5, #20481	; 0x5001
    14b4:	00000000 	andeq	r0, r0, r0
    14b8:	03510116 	cmpeq	r1, #-2147483643	; 0x80000005
    14bc:	165001f3 			; <UNDEFINED> instruction: 0x165001f3
    14c0:	f3035201 	vhsub.u8	d5, d3, d1
    14c4:	01165101 	tsteq	r6, r1, lsl #2
    14c8:	68910353 	ldmvs	r1, {r0, r1, r4, r6, r8, r9}
    14cc:	7d021606 	stcvc	6, cr1, [r2, #-24]	; 0xffffffe8
    14d0:	6c910200 	lfmvs	f0, 4, [r1], {0}
    14d4:	010e0000 	mrseq	r0, (UNDEF: 14)
    14d8:	00000609 	andeq	r0, r0, r9, lsl #12
    14dc:	05036901 	streq	r6, [r3, #-2305]	; 0xfffff6ff
    14e0:	00008501 	andeq	r8, r0, r1, lsl #10
	...
    14ec:	00068900 	andeq	r8, r6, r0, lsl #18
    14f0:	04cc0100 	strbeq	r0, [ip], #256	; 0x100
    14f4:	f5170000 			; <UNDEFINED> instruction: 0xf5170000
    14f8:	01000004 	tsteq	r0, r4
    14fc:	ee130369 	cdp	3, 1, cr0, cr3, cr9, {3}
    1500:	eb000002 	bl	1510 <__HEAP_SIZE+0x510>
    1504:	e5000006 	str	r0, [r0, #-6]
    1508:	10000006 	andne	r0, r0, r6
    150c:	000005c0 	andeq	r0, r0, r0, asr #11
    1510:	27036901 	strcs	r6, [r3, -r1, lsl #18]
    1514:	0000024c 	andeq	r0, r0, ip, asr #4
    1518:	11749102 	cmnne	r4, r2, lsl #2
    151c:	00617612 	rsbeq	r7, r1, r2, lsl r6
    1520:	0b036b01 	bleq	dc12c <__HEAP_SIZE+0xdb12c>
    1524:	000000e2 	andeq	r0, r0, r2, ror #1
    1528:	146c9102 	strbtne	r9, [ip], #-258	; 0xfffffefe
    152c:	00746572 	rsbseq	r6, r4, r2, ror r5
    1530:	0d036d01 	stceq	13, cr6, [r3, #-4]
    1534:	0000008c 	andeq	r0, r0, ip, lsl #1
    1538:	00000719 	andeq	r0, r0, r9, lsl r7
    153c:	00000717 	andeq	r0, r0, r7, lsl r7
    1540:	00000015 	andeq	r0, r0, r5, lsl r0
    1544:	00055f00 	andeq	r5, r5, r0, lsl #30
    1548:	50011600 	andpl	r1, r1, r0, lsl #12
    154c:	00000305 	andeq	r0, r0, r5, lsl #6
    1550:	01160000 	tsteq	r6, r0
    1554:	01f30351 	mvnseq	r0, r1, asr r3
    1558:	52011650 	andpl	r1, r1, #80, 12	; 0x5000000
    155c:	16ff0902 	ldrbtne	r0, [pc], r2, lsl #18
    1560:	91035301 	tstls	r3, r1, lsl #6
    1564:	0216065c 	andseq	r0, r6, #92, 12	; 0x5c00000
    1568:	9102007d 	tstls	r2, sp, ror r0
    156c:	0e000060 	cdpeq	0, 0, cr0, cr0, cr0, {3}
    1570:	0005d101 	andeq	sp, r5, r1, lsl #2
    1574:	035e0100 	cmpeq	lr, #0, 2
    1578:	00850105 	addeq	r0, r5, r5, lsl #2
    157c:	1a040000 	bne	101584 <__RAM_SIZE+0x1584>
    1580:	1a301000 	bne	c05588 <__RAM_SIZE+0xb05588>
    1584:	072c1000 	streq	r1, [ip, -r0]!
    1588:	5f010000 	svcpl	0x00010000
    158c:	10000005 	andne	r0, r0, r5
    1590:	000005c0 	andeq	r0, r0, r0, asr #11
    1594:	18035e01 	stmdane	r3, {r0, r9, sl, fp, ip, lr}
    1598:	0000024c 	andeq	r0, r0, ip, asr #4
    159c:	11709102 	cmnne	r0, r2, lsl #2
    15a0:	00617612 	rsbeq	r7, r1, r2, lsl r6
    15a4:	0b036001 	bleq	d95b0 <__HEAP_SIZE+0xd85b0>
    15a8:	000000e2 	andeq	r0, r0, r2, ror #1
    15ac:	13649102 	cmnne	r4, #-2147483648	; 0x80000000
    15b0:	000004f5 	strdeq	r0, [r0], -r5
    15b4:	08036201 	stmdaeq	r3, {r0, r9, sp, lr}
    15b8:	00000374 	andeq	r0, r0, r4, ror r3
    15bc:	14609102 	strbtne	r9, [r0], #-258	; 0xfffffefe
    15c0:	00746572 	rsbseq	r6, r4, r2, ror r5
    15c4:	0d036301 	stceq	3, cr6, [r3, #-4]
    15c8:	0000008c 	andeq	r0, r0, ip, lsl #1
    15cc:	0000078a 	andeq	r0, r0, sl, lsl #15
    15d0:	00000788 	andeq	r0, r0, r8, lsl #15
    15d4:	001a2015 	andseq	r2, sl, r5, lsl r0
    15d8:	00055f10 	andeq	r5, r5, r0, lsl pc
    15dc:	50011600 	andpl	r1, r1, r0, lsl #12
    15e0:	19f90305 	ldmibne	r9!, {r0, r2, r8, r9}^
    15e4:	01161000 	tsteq	r6, r0
    15e8:	40910251 	addsmi	r0, r1, r1, asr r2
    15ec:	02520116 	subseq	r0, r2, #-2147483643	; 0x80000005
    15f0:	0116ff09 	tsteq	r6, r9, lsl #30	; <UNPREDICTABLE>
    15f4:	50910353 	addspl	r0, r1, r3, asr r3
    15f8:	7d021606 	stcvc	6, cr1, [r2, #-24]	; 0xffffffe8
    15fc:	54910200 	ldrpl	r0, [r1], #512	; 0x200
    1600:	cd1a0000 	ldcgt	0, cr0, [sl, #-0]
    1604:	01000005 	tsteq	r0, r5
    1608:	010c0241 	tsteq	ip, r1, asr #4
    160c:	00000085 	andeq	r0, r0, r5, lsl #1
    1610:	10001378 	andne	r1, r0, r8, ror r3
    1614:	100019f8 	strdne	r1, [r0], -r8
    1618:	0000079d 	muleq	r0, sp, r7
    161c:	000b7d01 	andeq	r7, fp, r1, lsl #26
    1620:	756f0f00 	strbvc	r0, [pc, #-3840]!	; 728 <__STACKSEAL_SIZE+0x728>
    1624:	41010074 	tstmi	r1, r4, ror r0
    1628:	01062402 	tsteq	r6, r2, lsl #8
    162c:	07de0000 	ldrbeq	r0, [lr, r0]
    1630:	07d60000 	ldrbeq	r0, [r6, r0]
    1634:	f5170000 			; <UNDEFINED> instruction: 0xf5170000
    1638:	01000004 	tsteq	r0, r4
    163c:	ee2f0241 	cdp	2, 2, cr0, cr15, cr1, {2}
    1640:	1c000002 	stcne	0, cr0, [r0], {2}
    1644:	12000008 	andne	r0, r0, #8
    1648:	17000008 	strne	r0, [r0, -r8]
    164c:	00000633 	andeq	r0, r0, r3, lsr r6
    1650:	44024101 	strmi	r4, [r2], #-257	; 0xfffffeff
    1654:	000000fa 	strdeq	r0, [r0], -sl
    1658:	00000870 	andeq	r0, r0, r0, ror r8
    165c:	0000085e 	andeq	r0, r0, lr, asr r8
    1660:	0005c017 	andeq	ip, r5, r7, lsl r0
    1664:	02410100 	subeq	r0, r1, #0, 2
    1668:	00024c58 	andeq	r4, r2, r8, asr ip
    166c:	0008e200 	andeq	lr, r8, r0, lsl #4
    1670:	0008de00 	andeq	sp, r8, r0, lsl #28
    1674:	61761b00 	cmnvs	r6, r0, lsl #22
    1678:	02410100 	subeq	r0, r1, #0, 2
    167c:	0000e268 	andeq	lr, r0, r8, ror #4
    1680:	00910200 	addseq	r0, r1, r0, lsl #4
    1684:	00061e1c 	andeq	r1, r6, ip, lsl lr
    1688:	02430100 	subeq	r0, r3, #0, 2
    168c:	00003010 	andeq	r3, r0, r0, lsl r0
    1690:	00091800 	andeq	r1, r9, r0, lsl #16
    1694:	00090000 	andeq	r0, r9, r0
    1698:	06f01c00 	ldrbteq	r1, [r0], r0, lsl #24
    169c:	43010000 	movwmi	r0, #4096	; 0x1000
    16a0:	00301702 	eorseq	r1, r0, r2, lsl #14
    16a4:	09bc0000 	ldmibeq	ip!, {}	; <UNPREDICTABLE>
    16a8:	09a60000 	stmibeq	r6!, {}	; <UNPREDICTABLE>
    16ac:	2a1c0000 	bcs	7016b4 <__RAM_SIZE+0x6016b4>
    16b0:	01000007 	tsteq	r0, r7
    16b4:	301e0243 	andscc	r0, lr, r3, asr #4
    16b8:	64000000 	strvs	r0, [r0], #-0
    16bc:	4600000a 	strmi	r0, [r0], -sl
    16c0:	1400000a 	strne	r0, [r0], #-10
    16c4:	4301006e 	movwmi	r0, #4206	; 0x106e
    16c8:	00302902 	eorseq	r2, r0, r2, lsl #18
    16cc:	0b220000 	bleq	8816d4 <__RAM_SIZE+0x7816d4>
    16d0:	0b140000 	bleq	5016d8 <__RAM_SIZE+0x4016d8>
    16d4:	69140000 	ldmdbvs	r4, {}	; <UNPREDICTABLE>
    16d8:	01007864 	tsteq	r0, r4, ror #16
    16dc:	ee0a0244 	cdp	2, 0, cr0, cr10, cr4, {2}
    16e0:	de000000 	cdple	0, 0, cr0, cr0, cr0, {0}
    16e4:	7e00000b 	cdpvc	0, 0, cr0, cr0, cr11, {0}
    16e8:	1d00000b 	stcne	0, cr0, [r0, #-44]	; 0xffffffd4
    16ec:	10001454 	andne	r1, r0, r4, asr r4
    16f0:	10001474 	andne	r1, r0, r4, ror r4
    16f4:	00000663 	andeq	r0, r0, r3, ror #12
    16f8:	01007712 	tsteq	r0, r2, lsl r7
    16fc:	8c11026c 	lfmhi	f0, 4, [r1], {108}	; 0x6c
    1700:	01000000 	mrseq	r0, (UNDEF: 0)
    1704:	9c1d0050 	ldcls	0, cr0, [sp], {80}	; 0x50
    1708:	b0100014 	andslt	r0, r0, r4, lsl r0
    170c:	80100014 	andshi	r0, r0, r4, lsl r0
    1710:	13000006 	movwne	r0, #6
    1714:	000006ea 	andeq	r0, r0, sl, ror #13
    1718:	13028001 	movwne	r8, #8193	; 0x2001
    171c:	0000008c 	andeq	r0, r0, ip, lsl #1
    1720:	1d005301 	stcne	3, cr5, [r0, #-4]
    1724:	100015be 			; <UNDEFINED> instruction: 0x100015be
    1728:	100017aa 	andne	r1, r0, sl, lsr #15
    172c:	00000873 	andeq	r0, r0, r3, ror r8
    1730:	0008551c 	andeq	r5, r8, ip, lsl r5
    1734:	02b40100 	adcseq	r0, r4, #0, 2
    1738:	00003016 	andeq	r3, r0, r6, lsl r0
    173c:	000e1400 	andeq	r1, lr, r0, lsl #8
    1740:	000df800 	andeq	pc, sp, r0, lsl #16
    1744:	01481e00 	cmpeq	r8, r0, lsl #28
    1748:	06e90000 	strbteq	r0, [r9], r0
    174c:	9e1f0000 	cdpls	0, 1, cr0, cr15, cr0, {0}
    1750:	01000000 	mrseq	r0, (UNDEF: 0)
    1754:	6d1d02d6 	lfmvs	f0, 4, [sp, #-856]	; 0xfffffca8
    1758:	15000000 	strne	r0, [r0, #-0]
    175c:	100016d4 	ldrdne	r1, [r0], -r4
    1760:	0000137c 	andeq	r1, r0, ip, ror r3
    1764:	02500116 	subseq	r0, r0, #-2147483643	; 0x80000005
    1768:	01160077 	tsteq	r6, r7, ror r0
    176c:	00780251 	rsbseq	r0, r8, r1, asr r2
    1770:	02520116 	subseq	r0, r2, #-2147483643	; 0x80000005
    1774:	01160074 	tsteq	r6, r4, ror r0
    1778:	00760253 	rsbseq	r0, r6, r3, asr r2
    177c:	187d0216 	ldmdane	sp!, {r1, r2, r4, r9}^
    1780:	16007b02 	strne	r7, [r0], -r2, lsl #22
    1784:	021c7d02 	andseq	r7, ip, #2, 26	; 0x80
    1788:	00000075 	andeq	r0, r0, r5, ror r0
    178c:	0016e01d 	andseq	lr, r6, sp, lsl r0
    1790:	00171010 	andseq	r1, r7, r0, lsl r0
    1794:	00073e10 	andeq	r3, r7, r0, lsl lr
    1798:	009e1300 	addseq	r1, lr, r0, lsl #6
    179c:	db010000 	blle	417a4 <__HEAP_SIZE+0x407a4>
    17a0:	005a1802 	subseq	r1, sl, r2, lsl #16
    17a4:	52010000 	andpl	r0, r1, #0
    17a8:	00170e15 	andseq	r0, r7, r5, lsl lr
    17ac:	00150f10 	andseq	r0, r5, r0, lsl pc
    17b0:	50011600 	andpl	r1, r1, r0, lsl #12
    17b4:	16007702 	strne	r7, [r0], -r2, lsl #14
    17b8:	78025101 	stmdavc	r2, {r0, r8, ip, lr}
    17bc:	52011600 	andpl	r1, r1, #0, 12
    17c0:	16007402 	strne	r7, [r0], -r2, lsl #8
    17c4:	76025301 	strvc	r5, [r2], -r1, lsl #6
    17c8:	7d021600 	stcvc	6, cr1, [r2, #-0]
    17cc:	007b020c 	rsbseq	r0, fp, ip, lsl #4
    17d0:	107d0216 	rsbsne	r0, sp, r6, lsl r2
    17d4:	06489103 	strbeq	r9, [r8], -r3, lsl #2
    17d8:	147d0216 	ldrbtne	r0, [sp], #-534	; 0xfffffdea
    17dc:	00007502 	andeq	r7, r0, r2, lsl #10
    17e0:	01301e00 	teqeq	r0, r0, lsl #28
    17e4:	07950000 	ldreq	r0, [r5, r0]
    17e8:	9e1c0000 	cdpls	0, 1, cr0, cr12, cr0, {0}
    17ec:	01000000 	mrseq	r0, (UNDEF: 0)
    17f0:	8c1702df 	lfmhi	f0, 4, [r7], {223}	; 0xdf
    17f4:	c5000000 	strgt	r0, [r0, #-0]
    17f8:	c300000e 	movwgt	r0, #14
    17fc:	1500000e 	strne	r0, [r0, #-14]
    1800:	1000168e 	andne	r1, r0, lr, lsl #13
    1804:	0000150f 	andeq	r1, r0, pc, lsl #10
    1808:	02500116 	subseq	r0, r0, #-2147483643	; 0x80000005
    180c:	01160077 	tsteq	r6, r7, ror r0
    1810:	00780251 	rsbseq	r0, r8, r1, asr r2
    1814:	02520116 	subseq	r0, r2, #-2147483643	; 0x80000005
    1818:	01160074 	tsteq	r6, r4, ror r0
    181c:	00760253 	rsbseq	r0, r6, r3, asr r2
    1820:	0c7d0216 	lfmeq	f0, 2, [sp], #-88	; 0xffffffa8
    1824:	16007b02 	strne	r7, [r0], -r2, lsl #22
    1828:	03107d02 	tsteq	r0, #2, 26	; 0x80
    182c:	16064891 			; <UNDEFINED> instruction: 0x16064891
    1830:	02147d02 	andseq	r7, r4, #2, 26	; 0x80
    1834:	00000075 	andeq	r0, r0, r5, ror r0
    1838:	0001181e 	andeq	r1, r1, lr, lsl r8
    183c:	0007f200 	andeq	pc, r7, r0, lsl #4
    1840:	009e1c00 	addseq	r1, lr, r0, lsl #24
    1844:	ee010000 	cdp	0, 0, cr0, cr1, cr0, {0}
    1848:	009d2002 	addseq	r2, sp, r2
    184c:	0edc0000 	cdpeq	0, 13, cr0, cr12, cr0, {0}
    1850:	0ed80000 	cdpeq	0, 13, cr0, cr8, cr0, {0}
    1854:	38150000 	ldmdacc	r5, {}	; <UNPREDICTABLE>
    1858:	0f100016 	svceq	0x00100016
    185c:	16000015 			; <UNDEFINED> instruction: 0x16000015
    1860:	77025001 	strvc	r5, [r2, -r1]
    1864:	51011600 	tstpl	r1, r0, lsl #12
    1868:	16007802 	strne	r7, [r0], -r2, lsl #16
    186c:	74025201 	strvc	r5, [r2], #-513	; 0xfffffdff
    1870:	53011600 	movwpl	r1, #5632	; 0x1600
    1874:	16007602 	strne	r7, [r0], -r2, lsl #12
    1878:	01047d02 	tsteq	r4, r2, lsl #26
    187c:	7d021630 	stcvc	6, cr1, [r2, #-192]	; 0xffffff40
    1880:	007b020c 	rsbseq	r0, fp, ip, lsl #4
    1884:	107d0216 	rsbsne	r0, sp, r6, lsl r2
    1888:	06489103 	strbeq	r9, [r8], -r3, lsl #2
    188c:	147d0216 	ldrbtne	r0, [sp], #-534	; 0xfffffdea
    1890:	00007502 	andeq	r7, r0, r2, lsl #10
    1894:	17622000 	strbne	r2, [r2, -r0]!
    1898:	137c1000 	cmnne	ip, #0
    189c:	08340000 	ldmdaeq	r4!, {}	; <UNPREDICTABLE>
    18a0:	01160000 	tsteq	r6, r0
    18a4:	00770250 	rsbseq	r0, r7, r0, asr r2
    18a8:	02510116 	subseq	r0, r1, #-2147483643	; 0x80000005
    18ac:	01160078 	tsteq	r6, r8, ror r0
    18b0:	00740252 	rsbseq	r0, r4, r2, asr r2
    18b4:	02530116 	subseq	r0, r3, #-2147483643	; 0x80000005
    18b8:	02160076 	andseq	r0, r6, #118	; 0x76
    18bc:	3001087d 	andcc	r0, r1, sp, ror r8
    18c0:	187d0216 	ldmdane	sp!, {r1, r2, r4, r9}^
    18c4:	16007b02 	strne	r7, [r0], -r2, lsl #22
    18c8:	031c7d02 	tsteq	ip, #2, 26	; 0x80
    18cc:	16064891 			; <UNDEFINED> instruction: 0x16064891
    18d0:	02207d02 	eoreq	r7, r0, #2, 26	; 0x80
    18d4:	15000075 	strne	r0, [r0, #-117]	; 0xffffff8b
    18d8:	1000178c 	andne	r1, r0, ip, lsl #15
    18dc:	0000150f 	andeq	r1, r0, pc, lsl #10
    18e0:	02500116 	subseq	r0, r0, #-2147483643	; 0x80000005
    18e4:	01160077 	tsteq	r6, r7, ror r0
    18e8:	00780251 	rsbseq	r0, r8, r1, asr r2
    18ec:	02520116 	subseq	r0, r2, #-2147483643	; 0x80000005
    18f0:	01160074 	tsteq	r6, r4, ror r0
    18f4:	00760253 	rsbseq	r0, r6, r3, asr r2
    18f8:	047d0216 	ldrbteq	r0, [sp], #-534	; 0xfffffdea
    18fc:	02163001 	andseq	r3, r6, #1
    1900:	7b020c7d 	blvc	84afc <__HEAP_SIZE+0x83afc>
    1904:	7d021600 	stcvc	6, cr1, [r2, #-0]
    1908:	48910310 	ldmmi	r1, {r4, r8, r9}
    190c:	7d021606 	stcvc	6, cr1, [r2, #-24]	; 0xffffffe8
    1910:	00750214 	rsbseq	r0, r5, r4, lsl r2
    1914:	001e0000 	andseq	r0, lr, r0
    1918:	ec000001 	stc	0, cr0, [r0], {1}
    191c:	14000008 	strne	r0, [r0], #-8
    1920:	0901006c 	stmdbeq	r1, {r2, r3, r5, r6}
    1924:	00301603 	eorseq	r1, r0, r3, lsl #12
    1928:	0f0f0000 	svceq	0x000f0000
    192c:	0efb0000 	cdpeq	0, 15, cr0, cr11, cr0, {0}
    1930:	56210000 	strtpl	r0, [r1], -r0
    1934:	ab100018 	blge	40199c <__RAM_SIZE+0x30199c>
    1938:	16000008 	strne	r0, [r0], -r8
    193c:	78025101 	stmdavc	r2, {r0, r8, ip, lr}
    1940:	52011600 	andpl	r1, r1, #0, 12
    1944:	16007402 	strne	r7, [r0], -r2, lsl #8
    1948:	76025301 	strvc	r5, [r2], -r1, lsl #6
    194c:	6e210000 	cdpvs	0, 2, cr0, cr1, cr0, {0}
    1950:	cd100018 	ldcgt	0, cr0, [r0, #-96]	; 0xffffffa0
    1954:	16000008 	strne	r0, [r0], -r8
    1958:	08025001 	stmdaeq	r2, {r0, ip, lr}
    195c:	51011620 	tstpl	r1, r0, lsr #12
    1960:	16007802 	strne	r7, [r0], -r2, lsl #16
    1964:	7a025201 	bvc	96170 <__HEAP_SIZE+0x95170>
    1968:	5301167f 	movwpl	r1, #5759	; 0x167f
    196c:	00007602 	andeq	r7, r0, r2, lsl #12
    1970:	00189a22 	andseq	r9, r8, r2, lsr #20
    1974:	50011610 	andpl	r1, r1, r0, lsl r6
    1978:	16200802 	strtne	r0, [r0], -r2, lsl #16
    197c:	78025101 	stmdavc	r2, {r0, r8, ip, lr}
    1980:	52011600 	andpl	r1, r1, #0, 12
    1984:	167f7502 	ldrbtne	r7, [pc], -r2, lsl #10
    1988:	76025301 	strvc	r5, [r2], -r1, lsl #6
    198c:	1d000000 	stcne	0, cr0, [r0, #-0]
    1990:	100018aa 	andne	r1, r0, sl, lsr #17
    1994:	10001974 	andne	r1, r0, r4, ror r9
    1998:	000009b1 			; <UNDEFINED> instruction: 0x000009b1
    199c:	01007014 	tsteq	r0, r4, lsl r0
    19a0:	4c15031d 	ldcmi	3, cr0, [r5], {29}
    19a4:	8b000002 	blhi	19b4 <__HEAP_SIZE+0x9b4>
    19a8:	8700000f 	strhi	r0, [r0, -pc]
    19ac:	1400000f 	strne	r0, [r0], #-15
    19b0:	1e01006c 	cdpne	0, 0, cr0, cr1, cr12, {3}
    19b4:	00301603 	eorseq	r1, r0, r3, lsl #12
    19b8:	0fbf0000 	svceq	0x00bf0000
    19bc:	0fa90000 	svceq	0x00a90000
    19c0:	64230000 	strtvs	r0, [r3], #-0
    19c4:	c2000019 	andgt	r0, r0, #25
    19c8:	d8100018 	ldmdale	r0, {r3, r4}
    19cc:	01100018 	tsteq	r0, r8, lsl r0
    19d0:	541a031e 	ldrpl	r0, [sl], #-798	; 0xfffffce2
    19d4:	24000009 	strcs	r0, [r0], #-9
    19d8:	00001982 	andeq	r1, r0, r2, lsl #19
    19dc:	00001048 	andeq	r1, r0, r8, asr #32
    19e0:	00001042 	andeq	r1, r0, r2, asr #32
    19e4:	00197625 	andseq	r7, r9, r5, lsr #12
    19e8:	198e2600 	stmibne	lr, {r9, sl, sp}
    19ec:	10730000 	rsbsne	r0, r3, r0
    19f0:	10710000 	rsbsne	r0, r1, r0
    19f4:	21000000 	mrscs	r0, (UNDEF: 0)
    19f8:	10001910 	andne	r1, r0, r0, lsl r9
    19fc:	00000976 	andeq	r0, r0, r6, ror r9
    1a00:	02500116 	subseq	r0, r0, #-2147483643	; 0x80000005
    1a04:	01162008 	tsteq	r6, r8
    1a08:	00780251 	rsbseq	r0, r8, r1, asr r2
    1a0c:	02520116 	subseq	r0, r2, #-2147483643	; 0x80000005
    1a10:	01167f79 	tsteq	r6, r9, ror pc
    1a14:	00760253 	rsbseq	r0, r6, r3, asr r2
    1a18:	19322100 	ldmdbne	r2!, {r8, sp}
    1a1c:	09921000 	ldmibeq	r2, {ip}
    1a20:	01160000 	tsteq	r6, r0
    1a24:	00780251 	rsbseq	r0, r8, r1, asr r2
    1a28:	02520116 	subseq	r0, r2, #-2147483643	; 0x80000005
    1a2c:	01167f75 	tsteq	r6, r5, ror pc
    1a30:	007b0253 	rsbseq	r0, fp, r3, asr r2
    1a34:	19642200 	stmdbne	r4!, {r9, sp}^
    1a38:	01161000 	tsteq	r6, r0
    1a3c:	20080250 	andcs	r0, r8, r0, asr r2
    1a40:	02510116 	subseq	r0, r1, #-2147483643	; 0x80000005
    1a44:	01160078 	tsteq	r6, r8, ror r0
    1a48:	7f750252 	svcvc	0x00750252
    1a4c:	02530116 	subseq	r0, r3, #-2147483643	; 0x80000005
    1a50:	00000076 	andeq	r0, r0, r6, ror r0
    1a54:	0019741d 	andseq	r7, r9, sp, lsl r4
    1a58:	0019aa10 	andseq	sl, r9, r0, lsl sl
    1a5c:	000a1610 	andeq	r1, sl, r0, lsl r6
    1a60:	07241c00 	streq	r1, [r4, -r0, lsl #24]!
    1a64:	3a010000 	bcc	41a6c <__HEAP_SIZE+0x40a6c>
    1a68:	0b841403 	bleq	fe106a7c <__StackTop+0xc6006a7c>
    1a6c:	10880000 	addne	r0, r8, r0
    1a70:	10860000 	addne	r0, r6, r0
    1a74:	a0150000 	andsge	r0, r5, r0
    1a78:	0f100019 	svceq	0x00100019
    1a7c:	16000015 			; <UNDEFINED> instruction: 0x16000015
    1a80:	77025001 	strvc	r5, [r2, -r1]
    1a84:	51011600 	tstpl	r1, r0, lsl #12
    1a88:	16007802 	strne	r7, [r0], -r2, lsl #16
    1a8c:	74025201 	strvc	r5, [r2], #-513	; 0xfffffdff
    1a90:	53011600 	movwpl	r1, #5632	; 0x1600
    1a94:	16007602 	strne	r7, [r0], -r2, lsl #12
    1a98:	01047d02 	tsteq	r4, r2, lsl #26
    1a9c:	7d021630 	stcvc	6, cr1, [r2, #-192]	; 0xffffff40
    1aa0:	16400108 	strbne	r0, [r0], -r8, lsl #2
    1aa4:	020c7d02 	andeq	r7, ip, #2, 26	; 0x80
    1aa8:	0216007b 	andseq	r0, r6, #123	; 0x7b
    1aac:	3801107d 	stmdacc	r1, {r0, r2, r3, r4, r5, r6, ip}
    1ab0:	147d0216 	ldrbtne	r0, [sp], #-534	; 0xfffffdea
    1ab4:	00007502 	andeq	r7, r0, r2, lsl #10
    1ab8:	19462700 	stmdbne	r6, {r8, r9, sl, sp}^
    1abc:	13d80000 	bicsne	r0, r8, #0
    1ac0:	00031000 	andeq	r1, r3, r0
    1ac4:	100013d8 	ldrdne	r1, [r0], -r8
    1ac8:	100013de 	ldrdne	r1, [r0], -lr
    1acc:	09026801 	stmdbeq	r2, {r0, fp, sp, lr}
    1ad0:	00000a3f 	andeq	r0, r0, pc, lsr sl
    1ad4:	00195824 	andseq	r5, r9, r4, lsr #16
    1ad8:	00109e00 	andseq	r9, r0, r0, lsl #28
    1adc:	00109c00 	andseq	r9, r0, r0, lsl #24
    1ae0:	46270000 	strtmi	r0, [r7], -r0
    1ae4:	7e000019 	mcrvc	0, 0, r0, cr0, cr9, {0}
    1ae8:	00100014 	andseq	r0, r0, r4, lsl r0
    1aec:	00147e00 	andseq	r7, r4, r0, lsl #28
    1af0:	00148410 	andseq	r8, r4, r0, lsl r4
    1af4:	027c0110 	rsbseq	r0, ip, #16, 2
    1af8:	000a680b 	andeq	r6, sl, fp, lsl #16
    1afc:	19582400 	ldmdbne	r8, {sl, sp}^
    1b00:	10b30000 	adcsne	r0, r3, r0
    1b04:	10b10000 	adcsne	r0, r1, r0
    1b08:	28000000 	stmdacs	r0, {}	; <UNPREDICTABLE>
    1b0c:	100013a6 	andne	r1, r0, r6, lsr #7
    1b10:	87007702 	strhi	r7, [r0, -r2, lsl #14]
    1b14:	1600000a 	strne	r0, [r0], -sl
    1b18:	78025101 	stmdavc	r2, {r0, r8, ip, lr}
    1b1c:	52011600 	andpl	r1, r1, #0, 12
    1b20:	16007402 	strne	r7, [r0], -r2, lsl #8
    1b24:	76025301 	strvc	r5, [r2], -r1, lsl #6
    1b28:	50200000 	eorpl	r0, r0, r0
    1b2c:	d8100014 	ldmdale	r0, {r2, r4}
    1b30:	9b000018 	blls	1b98 <__HEAP_SIZE+0xb98>
    1b34:	1600000a 	strne	r0, [r0], -sl
    1b38:	91025001 	tstls	r2, r1
    1b3c:	98200054 	stmdals	r0!, {r2, r4, r6}
    1b40:	d8100014 	ldmdale	r0, {r2, r4}
    1b44:	af000018 	svcge	0x00000018
    1b48:	1600000a 	strne	r0, [r0], -sl
    1b4c:	91025001 	tstls	r2, r1
    1b50:	da200054 	ble	801ca8 <__RAM_SIZE+0x701ca8>
    1b54:	a8100017 	ldmdage	r0, {r0, r1, r2, r4}
    1b58:	eb00000f 	bl	1b9c <__HEAP_SIZE+0xb9c>
    1b5c:	1600000a 	strne	r0, [r0], -sl
    1b60:	77025001 	strvc	r5, [r2, -r1]
    1b64:	51011600 	tstpl	r1, r0, lsl #12
    1b68:	16007802 	strne	r7, [r0], -r2, lsl #16
    1b6c:	74025201 	strvc	r5, [r2], #-513	; 0xfffffdff
    1b70:	53011600 	movwpl	r1, #5632	; 0x1600
    1b74:	16007602 	strne	r7, [r0], -r2, lsl #12
    1b78:	02087d02 	andeq	r7, r8, #2, 26	; 0x80
    1b7c:	0216007b 	andseq	r0, r6, #123	; 0x7b
    1b80:	91030c7d 	tstls	r3, sp, ror ip
    1b84:	02160648 	andseq	r0, r6, #72, 12	; 0x4800000
    1b88:	7502107d 	strvc	r1, [r2, #-125]	; 0xffffff83
    1b8c:	2e200000 	cdpcs	0, 2, cr0, cr0, cr0, {0}
    1b90:	89100018 	ldmdbhi	r0, {r3, r4}
    1b94:	2700000b 	strcs	r0, [r0, -fp]
    1b98:	1600000b 	strne	r0, [r0], -fp
    1b9c:	77025001 	strvc	r5, [r2, -r1]
    1ba0:	51011600 	tstpl	r1, r0, lsl #12
    1ba4:	16007802 	strne	r7, [r0], -r2, lsl #16
    1ba8:	74025201 	strvc	r5, [r2], #-513	; 0xfffffdff
    1bac:	53011600 	movwpl	r1, #5632	; 0x1600
    1bb0:	16007602 	strne	r7, [r0], -r2, lsl #12
    1bb4:	02087d02 	andeq	r7, r8, #2, 26	; 0x80
    1bb8:	0216007b 	andseq	r0, r6, #123	; 0x7b
    1bbc:	91030c7d 	tstls	r3, sp, ror ip
    1bc0:	02160648 	andseq	r0, r6, #72, 12	; 0x4800000
    1bc4:	7502107d 	strvc	r1, [r2, #-125]	; 0xffffff83
    1bc8:	b6210000 	strtlt	r0, [r1], -r0
    1bcc:	49100019 	ldmdbmi	r0, {r0, r3, r4}
    1bd0:	1600000b 	strne	r0, [r0], -fp
    1bd4:	08025001 	stmdaeq	r2, {r0, ip, lr}
    1bd8:	51011625 	tstpl	r1, r5, lsr #12
    1bdc:	16007802 	strne	r7, [r0], -r2, lsl #16
    1be0:	74025201 	strvc	r5, [r2], #-513	; 0xfffffdff
    1be4:	53011600 	movwpl	r1, #5632	; 0x1600
    1be8:	00007602 	andeq	r7, r0, r2, lsl #12
    1bec:	0019ca21 	andseq	ip, r9, r1, lsr #20
    1bf0:	000b6510 	andeq	r6, fp, r0, lsl r5
    1bf4:	51011600 	tstpl	r1, r0, lsl #12
    1bf8:	16007802 	strne	r7, [r0], -r2, lsl #16
    1bfc:	74025201 	strvc	r5, [r2], #-513	; 0xfffffdff
    1c00:	53011600 	movwpl	r1, #5632	; 0x1600
    1c04:	00007602 	andeq	r7, r0, r2, lsl #12
    1c08:	0019ea22 	andseq	lr, r9, r2, lsr #20
    1c0c:	50011610 	andpl	r1, r1, r0, lsl r6
    1c10:	01163001 	tsteq	r6, r1
    1c14:	00780251 	rsbseq	r0, r8, r1, asr r2
    1c18:	02530116 	subseq	r0, r3, #-2147483643	; 0x80000005
    1c1c:	00000076 	andeq	r0, r0, r6, ror r0
    1c20:	5d020102 	stfpls	f0, [r2, #-8]
    1c24:	03000006 	movweq	r0, #6
    1c28:	00000b7d 	andeq	r0, r0, sp, ror fp
    1c2c:	0005211a 	andeq	r2, r5, sl, lsl r1
    1c30:	01d30100 	bicseq	r0, r3, r0, lsl #2
    1c34:	00ee010f 	rsceq	r0, lr, pc, lsl #2
    1c38:	0bf00000 	bleq	ffc01c40 <__StackTop+0xc7b01c40>
    1c3c:	0fda1000 	svceq	0x00da1000
    1c40:	10c61000 	sbcne	r1, r6, r0
    1c44:	a3010000 	movwge	r0, #4096	; 0x1000
    1c48:	0f00000f 	svceq	0x0000000f
    1c4c:	0074756f 	rsbseq	r7, r4, pc, ror #10
    1c50:	2201d301 	andcs	sp, r1, #67108864	; 0x4000000
    1c54:	00000106 	andeq	r0, r0, r6, lsl #2
    1c58:	00001128 	andeq	r1, r0, r8, lsr #2
    1c5c:	00001124 	andeq	r1, r0, r4, lsr #2
    1c60:	0004f517 	andeq	pc, r4, r7, lsl r5	; <UNPREDICTABLE>
    1c64:	01d30100 	bicseq	r0, r3, r0, lsl #2
    1c68:	0002ee2d 	andeq	lr, r2, sp, lsr #28
    1c6c:	00114a00 	andseq	r4, r1, r0, lsl #20
    1c70:	00114600 	andseq	r4, r1, r0, lsl #12
    1c74:	64690f00 	strbtvs	r0, [r9], #-3840	; 0xfffff100
    1c78:	d3010078 	movwle	r0, #4216	; 0x1078
    1c7c:	00ee3c01 	rsceq	r3, lr, r1, lsl #24
    1c80:	117e0000 	cmnne	lr, r0
    1c84:	11680000 	cmnne	r8, r0
    1c88:	33170000 	tstcc	r7, #0
    1c8c:	01000006 	tsteq	r0, r6
    1c90:	ee4801d3 	mcr	1, 2, r0, cr8, cr3, {6}
    1c94:	03000000 	movweq	r0, #0
    1c98:	ff000012 			; <UNDEFINED> instruction: 0xff000012
    1c9c:	17000011 	smladne	r0, r1, r0, r0
    1ca0:	0000009e 	muleq	r0, lr, r0
    1ca4:	5701d301 	strpl	sp, [r1, -r1, lsl #6]
    1ca8:	00000029 	andeq	r0, r0, r9, lsr #32
    1cac:	0000122d 	andeq	r1, r0, sp, lsr #4
    1cb0:	00001221 	andeq	r1, r0, r1, lsr #4
    1cb4:	0006ea17 	andeq	lr, r6, r7, lsl sl
    1cb8:	01d30100 	bicseq	r0, r3, r0, lsl #2
    1cbc:	0000306b 	andeq	r3, r0, fp, rrx
    1cc0:	00128c00 	andseq	r8, r2, r0, lsl #24
    1cc4:	00128000 	andseq	r8, r2, r0
    1cc8:	06f01700 	ldrbteq	r1, [r0], r0, lsl #14
    1ccc:	d3010000 	movwle	r0, #4096	; 0x1000
    1cd0:	00307e01 	eorseq	r7, r0, r1, lsl #28
    1cd4:	12de0000 	sbcsne	r0, lr, #0
    1cd8:	12da0000 	sbcsne	r0, sl, #0
    1cdc:	1e170000 	cdpne	0, 1, cr0, cr7, cr0, {0}
    1ce0:	01000006 	tsteq	r0, r6
    1ce4:	309201d3 			; <UNDEFINED> instruction: 0x309201d3
    1ce8:	06000000 	streq	r0, [r0], -r0
    1cec:	fe000013 	mcr2	0, 0, r0, cr0, cr3, {0}
    1cf0:	1c000012 	stcne	0, cr0, [r0], {18}
    1cf4:	00000585 	andeq	r0, r0, r5, lsl #11
    1cf8:	0e01db01 	vmlaeq.f64	d13, d1, d1
    1cfc:	00000b84 	andeq	r0, r0, r4, lsl #23
    1d00:	00001341 	andeq	r1, r0, r1, asr #6
    1d04:	0000133d 	andeq	r1, r0, sp, lsr r3
    1d08:	e7010829 	str	r0, [r1, -r9, lsr #16]
    1d0c:	0c860301 	stceq	3, cr0, [r6], {1}
    1d10:	552a0000 	strpl	r0, [sl, #-0]!
    1d14:	01e80100 	mvneq	r0, r0, lsl #2
    1d18:	0000a20e 	andeq	sl, r0, lr, lsl #4
    1d1c:	00462a00 	subeq	r2, r6, r0, lsl #20
    1d20:	0e01e901 	vmlaeq.f16	s28, s2, s2	; <UNPREDICTABLE>
    1d24:	00000029 	andeq	r0, r0, r9, lsr #32
    1d28:	06781c00 	ldrbteq	r1, [r8], -r0, lsl #24
    1d2c:	ea010000 	b	41d34 <__HEAP_SIZE+0x40d34>
    1d30:	0c650501 	cfstr64eq	mvdx0, [r5], #-4
    1d34:	13850000 	orrne	r0, r5, #0
    1d38:	13810000 	orrne	r0, r1, #0
    1d3c:	d71c0000 	ldrle	r0, [ip, -r0]
    1d40:	01000004 	tsteq	r0, r4
    1d44:	850701ed 	strhi	r0, [r7, #-493]	; 0xfffffe13
    1d48:	bd000000 	stclt	0, cr0, [r0, #-0]
    1d4c:	b1000013 	tstlt	r0, r3, lsl r0
    1d50:	1c000013 	stcne	0, cr0, [r0], {19}
    1d54:	000004e9 	andeq	r0, r0, r9, ror #9
    1d58:	0701f001 	streq	pc, [r1, -r1]
    1d5c:	00000085 	andeq	r0, r0, r5, lsl #1
    1d60:	0000141a 	andeq	r1, r0, sl, lsl r4
    1d64:	00001410 	andeq	r1, r0, r0, lsl r4
    1d68:	01007a14 	tsteq	r0, r4, lsl sl
    1d6c:	a31001f3 	tstge	r0, #-1073741764	; 0xc000003c
    1d70:	5c00000f 	stcpl	0, cr0, [r0], {15}
    1d74:	5a000014 	bpl	1dcc <__HEAP_SIZE+0xdcc>
    1d78:	14000014 	strne	r0, [r0], #-20	; 0xffffffec
    1d7c:	0100327a 	tsteq	r0, sl, ror r2
    1d80:	a31001f4 	tstge	r0, #244, 2	; 0x3d
    1d84:	7a00000f 	bvc	1dc8 <__HEAP_SIZE+0xdc8>
    1d88:	74000014 	strvc	r0, [r0], #-20	; 0xffffffec
    1d8c:	1c000014 	stcne	0, cr0, [r0], {20}
    1d90:	0000050b 	andeq	r0, r0, fp, lsl #10
    1d94:	1001ff01 	andne	pc, r1, r1, lsl #30
    1d98:	00000030 	andeq	r0, r0, r0, lsr r0
    1d9c:	000014b8 			; <UNDEFINED> instruction: 0x000014b8
    1da0:	000014ac 	andeq	r1, r0, ip, lsr #9
    1da4:	0006ef1c 	andeq	lr, r6, ip, lsl pc
    1da8:	02190100 	andseq	r0, r9, #0, 2
    1dac:	00003010 	andeq	r3, r0, r0, lsl r0
    1db0:	00150f00 	andseq	r0, r5, r0, lsl #30
    1db4:	00150500 	andseq	r0, r5, r0, lsl #10
    1db8:	05711c00 	ldrbeq	r1, [r1, #-3072]!	; 0xfffff400
    1dbc:	2c010000 	stccs	0, cr0, [r1], {-0}
    1dc0:	00fa1002 	rscseq	r1, sl, r2
    1dc4:	15510000 	ldrbne	r0, [r1, #-0]
    1dc8:	154f0000 	strbne	r0, [pc, #-0]	; 1dd0 <__HEAP_SIZE+0xdd0>
    1dcc:	0e2b0000 	cdpeq	0, 2, cr0, cr11, cr0, {0}
    1dd0:	1c10000c 	ldcne	0, cr0, [r0], {12}
    1dd4:	2b00001b 	blcs	1e48 <__HEAP_SIZE+0xe48>
    1dd8:	10000c22 	andne	r0, r0, r2, lsr #24
    1ddc:	00001b27 	andeq	r1, r0, r7, lsr #22
    1de0:	000c382b 	andeq	r3, ip, fp, lsr #16
    1de4:	001b3210 	andseq	r3, fp, r0, lsl r2
    1de8:	0c4a2b00 	mcrreq	11, 0, r2, sl, cr0
    1dec:	1b321000 	blne	c85df4 <__RAM_SIZE+0xb85df4>
    1df0:	862b0000 	strthi	r0, [fp], -r0
    1df4:	3d10000c 	ldccc	0, cr0, [r0, #-48]	; 0xffffffd0
    1df8:	2b00001b 	blcs	1e6c <__HEAP_SIZE+0xe6c>
    1dfc:	10000c90 	mulne	r0, r0, ip
    1e00:	00001b48 	andeq	r1, r0, r8, asr #22
    1e04:	000c9a2b 	andeq	r9, ip, fp, lsr #20
    1e08:	001b5310 	andseq	r5, fp, r0, lsl r3
    1e0c:	0caa2b00 	vstmiaeq	sl!, {d2-d1}
    1e10:	1b5e1000 	blne	1785e18 <__RAM_SIZE+0x1685e18>
    1e14:	b42b0000 	strtlt	r0, [fp], #-0
    1e18:	4810000c 	ldmdami	r0, {r2, r3}
    1e1c:	2b00001b 	blcs	1e90 <__HEAP_SIZE+0xe90>
    1e20:	10000cc0 	andne	r0, r0, r0, asr #25
    1e24:	00001b53 	andeq	r1, r0, r3, asr fp
    1e28:	000cc42b 	andeq	ip, ip, fp, lsr #8
    1e2c:	001b6910 	andseq	r6, fp, r0, lsl r9
    1e30:	0cca2b00 	vstmiaeq	sl, {d18-d17}
    1e34:	1b3d1000 	blne	f45e3c <__RAM_SIZE+0xe45e3c>
    1e38:	d82b0000 	stmdale	fp!, {}	; <UNPREDICTABLE>
    1e3c:	4810000c 	ldmdami	r0, {r2, r3}
    1e40:	2b00001b 	blcs	1eb4 <__HEAP_SIZE+0xeb4>
    1e44:	10000ce0 	andne	r0, r0, r0, ror #25
    1e48:	00001b53 	andeq	r1, r0, r3, asr fp
    1e4c:	000ce42b 	andeq	lr, ip, fp, lsr #8
    1e50:	001b6910 	andseq	r6, fp, r0, lsl r9
    1e54:	0cf42b00 	vldmiaeq	r4!, {d18-d17}
    1e58:	1b481000 	blne	1205e60 <__RAM_SIZE+0x1105e60>
    1e5c:	fe2b0000 	cdp2	0, 2, cr0, cr11, cr0, {0}
    1e60:	3d10000c 	ldccc	0, cr0, [r0, #-48]	; 0xffffffd0
    1e64:	2b00001b 	blcs	1ed8 <__HEAP_SIZE+0xed8>
    1e68:	10000d08 	andne	r0, r0, r8, lsl #26
    1e6c:	00001b48 	andeq	r1, r0, r8, asr #22
    1e70:	000d142b 	andeq	r1, sp, fp, lsr #8
    1e74:	001b5e10 	andseq	r5, fp, r0, lsl lr
    1e78:	0d202b00 	vstmdbeq	r0!, {d2-d1}
    1e7c:	1b481000 	blne	1205e84 <__RAM_SIZE+0x1105e84>
    1e80:	442b0000 	strtmi	r0, [fp], #-0
    1e84:	5310000d 	tstpl	r0, #13
    1e88:	2b00001b 	blcs	1efc <__HEAP_SIZE+0xefc>
    1e8c:	10000d56 	andne	r0, r0, r6, asr sp
    1e90:	00001b5e 	andeq	r1, r0, lr, asr fp
    1e94:	000d662b 	andeq	r6, sp, fp, lsr #12
    1e98:	001b7410 	andseq	r7, fp, r0, lsl r4
    1e9c:	0d6e2b00 	vstmdbeq	lr!, {d18-d17}
    1ea0:	1b531000 	blne	14c5ea8 <__RAM_SIZE+0x13c5ea8>
    1ea4:	7a2b0000 	bvc	ac1eac <__RAM_SIZE+0x9c1eac>
    1ea8:	7410000d 	ldrvc	r0, [r0], #-13
    1eac:	2b00001b 	blcs	1f20 <__HEAP_SIZE+0xf20>
    1eb0:	10000d82 	andne	r0, r0, r2, lsl #27
    1eb4:	00001b53 	andeq	r1, r0, r3, asr fp
    1eb8:	000d8e2b 	andeq	r8, sp, fp, lsr #28
    1ebc:	001b7410 	andseq	r7, fp, r0, lsl r4
    1ec0:	0d9a2b00 	vldreq	d2, [sl]
    1ec4:	1b531000 	blne	14c5ecc <__RAM_SIZE+0x13c5ecc>
    1ec8:	a62b0000 	strtge	r0, [fp], -r0
    1ecc:	7410000d 	ldrvc	r0, [r0], #-13
    1ed0:	2b00001b 	blcs	1f44 <__HEAP_SIZE+0xf44>
    1ed4:	10000dae 	andne	r0, r0, lr, lsr #27
    1ed8:	00001b53 	andeq	r1, r0, r3, asr fp
    1edc:	000db62b 	andeq	fp, sp, fp, lsr #12
    1ee0:	001b4810 	andseq	r4, fp, r0, lsl r8
    1ee4:	0dc62b00 	vstreq	d18, [r6]
    1ee8:	1b271000 	blne	9c5ef0 <__RAM_SIZE+0x8c5ef0>
    1eec:	d62b0000 	strtle	r0, [fp], -r0
    1ef0:	7410000d 	ldrvc	r0, [r0], #-13
    1ef4:	2b00001b 	blcs	1f68 <__HEAP_SIZE+0xf68>
    1ef8:	10000dfe 	strdne	r0, [r0], -lr
    1efc:	00001b7f 	andeq	r1, r0, pc, ror fp
    1f00:	000e102b 	andeq	r1, lr, fp, lsr #32
    1f04:	001b3210 	andseq	r3, fp, r0, lsl r2
    1f08:	0e422000 	cdpeq	0, 4, cr2, cr2, cr0, {0}
    1f0c:	0fa81000 	svceq	0x00a81000
    1f10:	0eae0000 	cdpeq	0, 10, cr0, cr14, cr0, {0}
    1f14:	01160000 	tsteq	r6, r0
    1f18:	007a0250 	rsbseq	r0, sl, r0, asr r2
    1f1c:	02510116 	subseq	r0, r1, #-2147483643	; 0x80000005
    1f20:	01160074 	tsteq	r6, r4, ror r0
    1f24:	007b0252 	rsbseq	r0, fp, r2, asr r2
    1f28:	02530116 	subseq	r0, r3, #-2147483643	; 0x80000005
    1f2c:	02160075 	andseq	r0, r6, #117	; 0x75
    1f30:	9105007d 	tstls	r5, sp, ror r0
    1f34:	2908f600 	stmdbcs	r8, {r9, sl, ip, sp, lr, pc}
    1f38:	087d0216 	ldmdaeq	sp!, {r1, r2, r4, r9}^
    1f3c:	06089103 	streq	r9, [r8], -r3, lsl #2
    1f40:	0c7d0216 	lfmeq	f0, 2, [sp], #-88	; 0xffffffa8
    1f44:	060c9103 	streq	r9, [ip], -r3, lsl #2
    1f48:	107d0216 	rsbsne	r0, sp, r6, lsl r2
    1f4c:	06109103 	ldreq	r9, [r0], -r3, lsl #2
    1f50:	0f1c2b00 	svceq	0x001c2b00
    1f54:	1b741000 	blne	1d05f5c <__RAM_SIZE+0x1c05f5c>
    1f58:	2c2b0000 	stccs	0, cr0, [fp], #-0
    1f5c:	3210000f 	andscc	r0, r0, #15
    1f60:	2000001b 	andcs	r0, r0, fp, lsl r0
    1f64:	10000f54 	andne	r0, r0, r4, asr pc
    1f68:	00000fa8 	andeq	r0, r0, r8, lsr #31
    1f6c:	00000f0c 	andeq	r0, r0, ip, lsl #30
    1f70:	02500116 	subseq	r0, r0, #-2147483643	; 0x80000005
    1f74:	0116007a 	tsteq	r6, sl, ror r0
    1f78:	00740251 	rsbseq	r0, r4, r1, asr r2
    1f7c:	02520116 	subseq	r0, r2, #-2147483643	; 0x80000005
    1f80:	0116007b 	tsteq	r6, fp, ror r0
    1f84:	00750253 	rsbseq	r0, r5, r3, asr r2
    1f88:	007d0216 	rsbseq	r0, sp, r6, lsl r2
    1f8c:	7fa89106 	svcvc	0x00a89106
    1f90:	162908f6 			; <UNDEFINED> instruction: 0x162908f6
    1f94:	03087d02 	movweq	r7, #36098	; 0x8d02
    1f98:	16060891 			; <UNDEFINED> instruction: 0x16060891
    1f9c:	020c7d02 	andeq	r7, ip, #2, 26	; 0x80
    1fa0:	02160078 	andseq	r0, r6, #120	; 0x78
    1fa4:	9107107d 	tstls	r7, sp, ror r0
    1fa8:	ff0b0610 			; <UNDEFINED> instruction: 0xff0b0610
    1fac:	21001af7 	strdcs	r1, [r0, -r7]
    1fb0:	10000f74 	andne	r0, r0, r4, ror pc
    1fb4:	00000f28 	andeq	r0, r0, r8, lsr #30
    1fb8:	02510116 	subseq	r0, r1, #-2147483643	; 0x80000005
    1fbc:	01160074 	tsteq	r6, r4, ror r0
    1fc0:	7f780252 	svcvc	0x00780252
    1fc4:	02530116 	subseq	r0, r3, #-2147483643	; 0x80000005
    1fc8:	20000075 	andcs	r0, r0, r5, ror r0
    1fcc:	10000f9e 	mulne	r0, lr, pc	; <UNPREDICTABLE>
    1fd0:	0000150f 	andeq	r1, r0, pc, lsl #10
    1fd4:	00000f84 	andeq	r0, r0, r4, lsl #31
    1fd8:	02500116 	subseq	r0, r0, #-2147483643	; 0x80000005
    1fdc:	0116007a 	tsteq	r6, sl, ror r0
    1fe0:	00740251 	rsbseq	r0, r4, r1, asr r2
    1fe4:	02520116 	subseq	r0, r2, #-2147483643	; 0x80000005
    1fe8:	01160078 	tsteq	r6, r8, ror r0
    1fec:	00750253 	rsbseq	r0, r5, r3, asr r2
    1ff0:	007d0216 	rsbseq	r0, sp, r6, lsl r2
    1ff4:	4f00760c 	svcmi	0x0000760c
    1ff8:	27007626 	strcs	r7, [r0, -r6, lsr #12]
    1ffc:	264f0076 			; <UNDEFINED> instruction: 0x264f0076
    2000:	7d02161c 	stcvc	6, cr1, [r2, #-112]	; 0xffffff90
    2004:	00760404 	rsbseq	r0, r6, r4, lsl #8
    2008:	0216254f 	andseq	r2, r6, #331350016	; 0x13c00000
    200c:	3a01087d 	bcc	44208 <__HEAP_SIZE+0x43208>
    2010:	0c7d0216 	lfmeq	f0, 2, [sp], #-88	; 0xffffffa8
    2014:	7fb09104 	svcvc	0x00b09104
    2018:	7d021606 	stcvc	6, cr1, [r2, #-24]	; 0xffffffe8
    201c:	00770210 	rsbseq	r0, r7, r0, lsl r2
    2020:	147d0216 	ldrbtne	r0, [sp], #-534	; 0xfffffdea
    2024:	22003501 	andcs	r3, r0, #4194304	; 0x400000
    2028:	10000fcc 	andne	r0, r0, ip, asr #31
    202c:	02500116 	subseq	r0, r0, #-2147483643	; 0x80000005
    2030:	01162008 	tsteq	r6, r8
    2034:	00740251 	rsbseq	r0, r4, r1, asr r2
    2038:	02520116 	subseq	r0, r2, #-2147483643	; 0x80000005
    203c:	01167f76 	tsteq	r6, r6, ror pc
    2040:	00750253 	rsbseq	r0, r5, r3, asr r2
    2044:	29030000 	stmdbcs	r3, {}	; <UNPREDICTABLE>
    2048:	1a000000 	bne	2050 <__HEAP_SIZE+0x1050>
    204c:	000005c7 	andeq	r0, r0, r7, asr #11
    2050:	0f015301 	svceq	0x00015301
    2054:	0000ee01 	andeq	lr, r0, r1, lsl #28
    2058:	000fe000 	andeq	lr, pc, r0
    205c:	00137610 	andseq	r7, r3, r0, lsl r6
    2060:	00156410 	andseq	r6, r5, r0, lsl r4
    2064:	13570100 	cmpne	r7, #0, 2
    2068:	6f0f0000 	svcvs	0x000f0000
    206c:	01007475 	tsteq	r0, r5, ror r4
    2070:	06220153 			; <UNDEFINED> instruction: 0x06220153
    2074:	c6000001 	strgt	r0, [r0], -r1
    2078:	c2000015 	andgt	r0, r0, #21
    207c:	17000015 	smladne	r0, r5, r0, r0
    2080:	000004f5 	strdeq	r0, [r0], -r5
    2084:	2d015301 	stccs	3, cr5, [r1, #-4]
    2088:	000002ee 	andeq	r0, r0, lr, ror #5
    208c:	000015ea 	andeq	r1, r0, sl, ror #11
    2090:	000015e6 	andeq	r1, r0, r6, ror #11
    2094:	7864690f 	stmdavc	r4!, {r0, r1, r2, r3, r8, fp, sp, lr}^
    2098:	01530100 	cmpeq	r3, r0, lsl #2
    209c:	0000ee3c 	andeq	lr, r0, ip, lsr lr
    20a0:	00160e00 	andseq	r0, r6, r0, lsl #28
    20a4:	00160a00 	andseq	r0, r6, r0, lsl #20
    20a8:	06331700 	ldrteq	r1, [r3], -r0, lsl #14
    20ac:	53010000 	movwpl	r0, #4096	; 0x1000
    20b0:	00ee4801 	rsceq	r4, lr, r1, lsl #16
    20b4:	16300000 	ldrtne	r0, [r0], -r0
    20b8:	162c0000 	strtne	r0, [ip], -r0
    20bc:	9e170000 	cdpls	0, 1, cr0, cr7, cr0, {0}
    20c0:	01000000 	mrseq	r0, (UNDEF: 0)
    20c4:	29570153 	ldmdbcs	r7, {r0, r1, r4, r6, r8}^
    20c8:	58000000 	stmdapl	r0, {}	; <UNPREDICTABLE>
    20cc:	4e000016 	mcrmi	0, 0, r0, cr0, cr6, {0}
    20d0:	17000016 	smladne	r0, r6, r0, r0
    20d4:	000006ea 	andeq	r0, r0, sl, ror #13
    20d8:	6b015301 	blvs	56ce4 <__HEAP_SIZE+0x55ce4>
    20dc:	00000030 	andeq	r0, r0, r0, lsr r0
    20e0:	000016b0 			; <UNDEFINED> instruction: 0x000016b0
    20e4:	000016a8 	andeq	r1, r0, r8, lsr #13
    20e8:	0006f017 	andeq	pc, r6, r7, lsl r0	; <UNPREDICTABLE>
    20ec:	01530100 	cmpeq	r3, r0, lsl #2
    20f0:	0000307e 	andeq	r3, r0, lr, ror r0
    20f4:	0016f000 	andseq	pc, r6, r0
    20f8:	0016e600 	andseq	lr, r6, r0, lsl #12
    20fc:	061e1700 	ldreq	r1, [lr], -r0, lsl #14
    2100:	53010000 	movwpl	r0, #4096	; 0x1000
    2104:	00309201 	eorseq	r9, r0, r1, lsl #4
    2108:	17360000 	ldrne	r0, [r6, -r0]!
    210c:	17320000 	ldrne	r0, [r2, -r0]!
    2110:	62120000 	andsvs	r0, r2, #0
    2114:	01006675 	tsteq	r0, r5, ror r6
    2118:	57080155 	smlsdpl	r8, r5, r1, r0
    211c:	03000013 	movweq	r0, #19
    2120:	147fb091 	ldrbtne	fp, [pc], #-145	; 2128 <__HEAP_SIZE+0x1128>
    2124:	006e656c 	rsbeq	r6, lr, ip, ror #10
    2128:	0a015601 	beq	57934 <__HEAP_SIZE+0x56934>
    212c:	000000ee 	andeq	r0, r0, lr, ror #1
    2130:	00001784 	andeq	r1, r0, r4, lsl #15
    2134:	00001756 	andeq	r1, r0, r6, asr r7
    2138:	0007341c 	andeq	r3, r7, ip, lsl r4
    213c:	01570100 	cmpeq	r7, r0, lsl #2
    2140:	0000290a 	andeq	r2, r0, sl, lsl #18
    2144:	0018a300 	andseq	sl, r8, r0, lsl #6
    2148:	00189900 	andseq	r9, r8, r0, lsl #18
    214c:	04d11300 	ldrbeq	r1, [r1], #768	; 0x300
    2150:	5a010000 	bpl	42158 <__HEAP_SIZE+0x41158>
    2154:	13771701 	cmnne	r7, #262144	; 0x40000
    2158:	03050000 	movweq	r0, #20480	; 0x5000
    215c:	10005728 	andne	r5, r0, r8, lsr #14
    2160:	0005851c 	andeq	r8, r5, ip, lsl r5
    2164:	016f0100 	cmneq	pc, r0, lsl #2
    2168:	000b7d08 	andeq	r7, fp, r8, lsl #26
    216c:	00190500 	andseq	r0, r9, r0, lsl #10
    2170:	0018f900 	andseq	pc, r8, r0, lsl #18
    2174:	05421c00 	strbeq	r1, [r2, #-3072]	; 0xfffff400
    2178:	7f010000 	svcvc	0x00010000
    217c:	00850701 	addeq	r0, r5, r1, lsl #14
    2180:	19620000 	stmdbne	r2!, {}^	; <UNPREDICTABLE>
    2184:	19580000 	ldmdbne	r8, {}^	; <UNPREDICTABLE>
    2188:	74140000 	ldrvc	r0, [r4], #-0
    218c:	0100706d 	tsteq	r0, sp, rrx
    2190:	290a0180 	stmdbcs	sl, {r7, r8}
    2194:	a5000000 	strge	r0, [r0, #-0]
    2198:	a1000019 	tstge	r0, r9, lsl r0
    219c:	1c000019 	stcne	0, cr0, [r0], {25}
    21a0:	00000555 	andeq	r0, r0, r5, asr r5
    21a4:	11018101 	tstne	r1, r1, lsl #2
    21a8:	0000005f 	andeq	r0, r0, pc, asr r0
    21ac:	000019d6 	ldrdeq	r1, [r0], -r6
    21b0:	000019ca 	andeq	r1, r0, sl, asr #19
    21b4:	0011fa1d 	andseq	pc, r1, sp, lsl sl	; <UNPREDICTABLE>
    21b8:	00125a10 	andseq	r5, r2, r0, lsl sl
    21bc:	00113410 	andseq	r3, r1, r0, lsl r4
    21c0:	03fd1c00 	mvnseq	r1, #0, 24
    21c4:	9c010000 	stcls	0, cr0, [r1], {-0}
    21c8:	00301201 	eorseq	r1, r0, r1, lsl #4
    21cc:	1a250000 	bne	9421d4 <__RAM_SIZE+0x8421d4>
    21d0:	1a210000 	bne	8421d8 <__RAM_SIZE+0x7421d8>
    21d4:	2b000000 	blcs	21dc <__HEAP_SIZE+0x11dc>
    21d8:	10001004 	andne	r1, r0, r4
    21dc:	00001b1c 	andeq	r1, r0, ip, lsl fp
    21e0:	0010182b 	andseq	r1, r0, fp, lsr #16
    21e4:	001b3210 	andseq	r3, fp, r0, lsl r2
    21e8:	102a2b00 	eorne	r2, sl, r0, lsl #22
    21ec:	1b271000 	blne	9c61f4 <__RAM_SIZE+0x8c61f4>
    21f0:	3c2b0000 	stccc	0, cr0, [fp], #-0
    21f4:	27100010 			; <UNDEFINED> instruction: 0x27100010
    21f8:	2b00001b 	blcs	226c <__HEAP_SIZE+0x126c>
    21fc:	1000104e 	andne	r1, r0, lr, asr #32
    2200:	00001b32 	andeq	r1, r0, r2, lsr fp
    2204:	00105e2b 	andseq	r5, r0, fp, lsr #28
    2208:	001b3210 	andseq	r3, fp, r0, lsl r2
    220c:	10a62000 	adcne	r2, r6, r0
    2210:	17911000 	ldrne	r1, [r1, r0]
    2214:	11b40000 			; <UNDEFINED> instruction: 0x11b40000
    2218:	01160000 	tsteq	r6, r0
    221c:	9c910450 	cfldrsls	mvf0, [r1], {80}	; 0x50
    2220:	0116067f 	tsteq	r6, pc, ror r6
    2224:	a8910451 	ldmge	r1, {r0, r4, r6, sl}
    2228:	0116067f 	tsteq	r6, pc, ror r6
    222c:	007a0252 	rsbseq	r0, sl, r2, asr r2
    2230:	02530116 	subseq	r0, r3, #-2147483643	; 0x80000005
    2234:	0216007b 	andseq	r0, r6, #123	; 0x7b
    2238:	0305007d 	movweq	r0, #20605	; 0x507d
    223c:	1000571c 	andne	r5, r0, ip, lsl r7
    2240:	047d0216 	ldrbteq	r0, [sp], #-534	; 0xfffffdea
    2244:	02163301 	andseq	r3, r6, #67108864	; 0x4000000
    2248:	9103087d 	tstls	r3, sp, ror r8
    224c:	0216060c 	andseq	r0, r6, #12, 12	; 0xc00000
    2250:	91030c7d 	tstls	r3, sp, ror ip
    2254:	20000610 	andcs	r0, r0, r0, lsl r6
    2258:	100010c4 	andne	r1, r0, r4, asr #1
    225c:	00001791 	muleq	r0, r1, r7
    2260:	000011fe 	strdeq	r1, [r0], -lr
    2264:	04500116 	ldrbeq	r0, [r0], #-278	; 0xfffffeea
    2268:	067f9c91 			; <UNDEFINED> instruction: 0x067f9c91
    226c:	04510116 	ldrbeq	r0, [r1], #-278	; 0xfffffeea
    2270:	067fa891 			; <UNDEFINED> instruction: 0x067fa891
    2274:	02520116 	subseq	r0, r2, #-2147483643	; 0x80000005
    2278:	0116007a 	tsteq	r6, sl, ror r0
    227c:	007b0253 	rsbseq	r0, fp, r3, asr r2
    2280:	007d0216 	rsbseq	r0, sp, r6, lsl r2
    2284:	57200305 	strpl	r0, [r0, -r5, lsl #6]!
    2288:	02161000 	andseq	r1, r6, #0
    228c:	3401047d 	strcc	r0, [r1], #-1149	; 0xfffffb83
    2290:	087d0216 	ldmdaeq	sp!, {r1, r2, r4, r9}^
    2294:	060c9103 	streq	r9, [ip], -r3, lsl #2
    2298:	0c7d0216 	lfmeq	f0, 2, [sp], #-88	; 0xffffffa8
    229c:	06109103 	ldreq	r9, [r0], -r3, lsl #2
    22a0:	10ec2000 	rscne	r2, ip, r0
    22a4:	17911000 	ldrne	r1, [r1, r0]
    22a8:	12380000 	eorsne	r0, r8, #0
    22ac:	01160000 	tsteq	r6, r0
    22b0:	9c910450 	cfldrsls	mvf0, [r1], {80}	; 0x50
    22b4:	0116067f 	tsteq	r6, pc, ror r6
    22b8:	a8910451 	ldmge	r1, {r0, r4, r6, sl}
    22bc:	0116067f 	tsteq	r6, pc, ror r6
    22c0:	007a0252 	rsbseq	r0, sl, r2, asr r2
    22c4:	02530116 	subseq	r0, r3, #-2147483643	; 0x80000005
    22c8:	0216007b 	andseq	r0, r6, #123	; 0x7b
    22cc:	9103087d 	tstls	r3, sp, ror r8
    22d0:	0216060c 	andseq	r0, r6, #12, 12	; 0xc00000
    22d4:	91030c7d 	tstls	r3, sp, ror ip
    22d8:	20000610 	andcs	r0, r0, r0, lsl r6
    22dc:	10001110 	andne	r1, r0, r0, lsl r1
    22e0:	00000b89 	andeq	r0, r0, r9, lsl #23
    22e4:	00001281 	andeq	r1, r0, r1, lsl #5
    22e8:	04500116 	ldrbeq	r0, [r0], #-278	; 0xfffffeea
    22ec:	067f9c91 			; <UNDEFINED> instruction: 0x067f9c91
    22f0:	04510116 	ldrbeq	r0, [r1], #-278	; 0xfffffeea
    22f4:	067fa891 			; <UNDEFINED> instruction: 0x067fa891
    22f8:	02520116 	subseq	r0, r2, #-2147483643	; 0x80000005
    22fc:	0116007a 	tsteq	r6, sl, ror r0
    2300:	007b0253 	rsbseq	r0, fp, r3, asr r2
    2304:	007d0216 	rsbseq	r0, sp, r6, lsl r2
    2308:	2908f503 	stmdbcs	r8, {r0, r1, r8, sl, ip, sp, lr, pc}
    230c:	087d0216 	ldmdaeq	sp!, {r1, r2, r4, r9}^
    2310:	16007502 	strne	r7, [r0], -r2, lsl #10
    2314:	030c7d02 	movweq	r7, #52482	; 0xcd02
    2318:	16060c91 			; <UNDEFINED> instruction: 0x16060c91
    231c:	03107d02 	tsteq	r0, #2, 26	; 0x80
    2320:	00061091 	muleq	r6, r1, r0
    2324:	00111e2b 	andseq	r1, r1, fp, lsr #28
    2328:	001b5e10 	andseq	r5, fp, r0, lsl lr
    232c:	11342b00 	teqne	r4, r0, lsl #22
    2330:	1b691000 	blne	1a46338 <__RAM_SIZE+0x1946338>
    2334:	3a2b0000 	bcc	ac233c <__RAM_SIZE+0x9c233c>
    2338:	3d100011 	ldccc	0, cr0, [r0, #-68]	; 0xffffffbc
    233c:	2b00001b 	blcs	23b0 <__HEAP_SIZE+0x13b0>
    2340:	10001146 	andne	r1, r0, r6, asr #2
    2344:	00001b5e 	andeq	r1, r0, lr, asr fp
    2348:	0011582b 	andseq	r5, r1, fp, lsr #16
    234c:	001b4810 	andseq	r4, fp, r0, lsl r8
    2350:	11642b00 	cmnne	r4, r0, lsl #22
    2354:	1b8a1000 	blne	fe28635c <__StackTop+0xc618635c>
    2358:	6a2b0000 	bvs	ac2360 <__RAM_SIZE+0x9c2360>
    235c:	95100011 	ldrls	r0, [r0, #-17]	; 0xffffffef
    2360:	2b00001b 	blcs	23d4 <__HEAP_SIZE+0x13d4>
    2364:	10001176 	andne	r1, r0, r6, ror r1
    2368:	00001b5e 	andeq	r1, r0, lr, asr fp
    236c:	0011862b 	andseq	r8, r1, fp, lsr #12
    2370:	001b2710 	andseq	r2, fp, r0, lsl r7
    2374:	11902b00 	orrsne	r2, r0, r0, lsl #22
    2378:	1b951000 	blne	fe546380 <__StackTop+0xc6446380>
    237c:	9c2b0000 	stcls	0, cr0, [fp], #-0
    2380:	a0100011 	andsge	r0, r0, r1, lsl r0
    2384:	2b00001b 	blcs	23f8 <__HEAP_SIZE+0x13f8>
    2388:	100011aa 	andne	r1, r0, sl, lsr #3
    238c:	00001b3d 	andeq	r1, r0, sp, lsr fp
    2390:	0011b62b 	andseq	fp, r1, fp, lsr #12
    2394:	001b5e10 	andseq	r5, fp, r0, lsl lr
    2398:	11c22b00 	bicne	r2, r2, r0, lsl #22
    239c:	1b321000 	blne	c863a4 <__RAM_SIZE+0xb863a4>
    23a0:	d02b0000 	eorle	r0, fp, r0
    23a4:	27100011 			; <UNDEFINED> instruction: 0x27100011
    23a8:	2b00001b 	blcs	241c <__HEAP_SIZE+0x141c>
    23ac:	100011ea 	andne	r1, r0, sl, ror #3
    23b0:	00001b32 	andeq	r1, r0, r2, lsr fp
    23b4:	00130215 	andseq	r0, r3, r5, lsl r2
    23b8:	00179110 	andseq	r9, r7, r0, lsl r1
    23bc:	50011600 	andpl	r1, r1, r0, lsl #12
    23c0:	7f9c9104 	svcvc	0x009c9104
    23c4:	51011606 	tstpl	r1, r6, lsl #12
    23c8:	7fa89104 	svcvc	0x00a89104
    23cc:	52011606 	andpl	r1, r1, #6291456	; 0x600000
    23d0:	16007a02 	strne	r7, [r0], -r2, lsl #20
    23d4:	7b025301 	blvc	96fe0 <__HEAP_SIZE+0x95fe0>
    23d8:	7d021600 	stcvc	6, cr1, [r2, #-0]
    23dc:	b0910300 	addslt	r0, r1, r0, lsl #6
    23e0:	7d02167f 	stcvc	6, cr1, [r2, #-508]	; 0xfffffe04
    23e4:	00740204 	rsbseq	r0, r4, r4, lsl #4
    23e8:	087d0216 	ldmdaeq	sp!, {r1, r2, r4, r9}^
    23ec:	060c9103 	streq	r9, [ip], -r3, lsl #2
    23f0:	0c7d0216 	lfmeq	f0, 2, [sp], #-88	; 0xffffffa8
    23f4:	06109103 	ldreq	r9, [r0], -r3, lsl #2
    23f8:	33180000 	tstcc	r8, #0
    23fc:	67000001 	strvs	r0, [r0, -r1]
    2400:	19000013 	stmdbne	r0, {r0, r1, r4}
    2404:	00000030 	andeq	r0, r0, r0, lsr r0
    2408:	a318001f 	tstge	r8, #31
    240c:	7700000f 	strvc	r0, [r0, -pc]
    2410:	19000013 	stmdbne	r0, {r0, r1, r4}
    2414:	00000030 	andeq	r0, r0, r0, lsr r0
    2418:	67030009 	strvs	r0, [r3, -r9]
    241c:	1a000013 	bne	2470 <__HEAP_SIZE+0x1470>
    2420:	00000714 	andeq	r0, r0, r4, lsl r7
    2424:	0f013201 	svceq	0x00013201
    2428:	0000ee01 	andeq	lr, r0, r1, lsl #28
    242c:	000b2400 	andeq	r2, fp, r0, lsl #8
    2430:	000bea10 	andeq	lr, fp, r0, lsl sl
    2434:	001a4310 	andseq	r4, sl, r0, lsl r3
    2438:	150f0100 	strne	r0, [pc, #-256]	; 2340 <__HEAP_SIZE+0x1340>
    243c:	6f0f0000 	svcvs	0x000f0000
    2440:	01007475 	tsteq	r0, r5, ror r4
    2444:	062c0132 			; <UNDEFINED> instruction: 0x062c0132
    2448:	84000001 	strhi	r0, [r0], #-1
    244c:	7c00001a 	stcvc	0, cr0, [r0], {26}
    2450:	1700001a 	smladne	r0, sl, r0, r0
    2454:	000004f5 	strdeq	r0, [r0], -r5
    2458:	37013201 	strcc	r3, [r1, -r1, lsl #4]
    245c:	000002ee 	andeq	r0, r0, lr, ror #5
    2460:	00001ac4 	andeq	r1, r0, r4, asr #21
    2464:	00001abc 			; <UNDEFINED> instruction: 0x00001abc
    2468:	7864690f 	stmdavc	r4!, {r0, r1, r2, r3, r8, fp, sp, lr}^
    246c:	01320100 	teqeq	r2, r0, lsl #2
    2470:	0000ee46 	andeq	lr, r0, r6, asr #28
    2474:	001b0400 	andseq	r0, fp, r0, lsl #8
    2478:	001afc00 	andseq	pc, sl, r0, lsl #24
    247c:	06331700 	ldrteq	r1, [r3], -r0, lsl #14
    2480:	32010000 	andcc	r0, r1, #0
    2484:	00ee5201 	rsceq	r5, lr, r1, lsl #4
    2488:	1b400000 	blne	1002490 <__RAM_SIZE+0xf02490>
    248c:	1b3c0000 	blne	f02494 <__RAM_SIZE+0xe02494>
    2490:	9e170000 	cdpls	0, 1, cr0, cr7, cr0, {0}
    2494:	01000000 	mrseq	r0, (UNDEF: 0)
    2498:	7e6d0132 	mcrvc	1, 3, r0, cr13, cr2, {1}
    249c:	68000000 	stmdavs	r0, {}	; <UNPREDICTABLE>
    24a0:	5e00001b 	mcrpl	0, 0, r0, cr0, cr11, {0}
    24a4:	1000001b 	andne	r0, r0, fp, lsl r0
    24a8:	00000585 	andeq	r0, r0, r5, lsl #11
    24ac:	79013201 	stmdbvc	r1, {r0, r9, ip, sp}
    24b0:	00000b7d 	andeq	r0, r0, sp, ror fp
    24b4:	10089102 	andne	r9, r8, r2, lsl #2
    24b8:	00000855 	andeq	r0, r0, r5, asr r8
    24bc:	96013201 	strls	r3, [r1], -r1, lsl #4
    24c0:	0000007e 	andeq	r0, r0, lr, ror r0
    24c4:	10109102 	andsne	r9, r0, r2, lsl #2
    24c8:	000006ea 	andeq	r0, r0, sl, ror #13
    24cc:	a9013201 	stmdbge	r1, {r0, r9, ip, sp}
    24d0:	00000030 	andeq	r0, r0, r0, lsr r0
    24d4:	10189102 	andsne	r9, r8, r2, lsl #2
    24d8:	000006f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    24dc:	bc013201 	sfmlt	f3, 4, [r1], {1}
    24e0:	00000030 	andeq	r0, r0, r0, lsr r0
    24e4:	171c9102 	ldrne	r9, [ip, -r2, lsl #2]
    24e8:	0000061e 	andeq	r0, r0, lr, lsl r6
    24ec:	d0013201 	andle	r3, r1, r1, lsl #4
    24f0:	00000030 	andeq	r0, r0, r0, lsr r0
    24f4:	00001bbc 			; <UNDEFINED> instruction: 0x00001bbc
    24f8:	00001bb8 			; <UNDEFINED> instruction: 0x00001bb8
    24fc:	66756212 			; <UNDEFINED> instruction: 0x66756212
    2500:	01340100 	teqeq	r4, r0, lsl #2
    2504:	00135708 	andseq	r5, r3, r8, lsl #14
    2508:	b8910300 	ldmlt	r1, {r8, r9}
    250c:	656c147f 	strbvs	r1, [ip, #-1151]!	; 0xfffffb81
    2510:	3501006e 	strcc	r0, [r1, #-110]	; 0xffffff92
    2514:	00ee0a01 	rsceq	r0, lr, r1, lsl #20
    2518:	1be70000 	blne	ff9c2520 <__StackTop+0xc78c2520>
    251c:	1bdb0000 	blne	ff6c2524 <__StackTop+0xc75c2524>
    2520:	e01e0000 	ands	r0, lr, r0
    2524:	b0000000 	andlt	r0, r0, r0
    2528:	1c000014 	stcne	0, cr0, [r0], {20}
    252c:	00000672 	andeq	r0, r0, r2, ror r6
    2530:	12013f01 	andne	r3, r1, #1, 30
    2534:	0000013a 	andeq	r0, r0, sl, lsr r1
    2538:	00001c37 	andeq	r1, r0, r7, lsr ip
    253c:	00001c33 	andeq	r1, r0, r3, lsr ip
    2540:	000b7c2b 	andeq	r7, fp, fp, lsr #24
    2544:	001bab10 	andseq	sl, fp, r0, lsl fp
    2548:	0b9c2b00 	bleq	fe70d150 <__StackTop+0xc660d150>
    254c:	1bab1000 	blne	feac6554 <__StackTop+0xc69c6554>
    2550:	15000000 	strne	r0, [r0, #-0]
    2554:	10000be4 	andne	r0, r0, r4, ror #23
    2558:	00001670 	andeq	r1, r0, r0, ror r6
    255c:	04500116 	ldrbeq	r0, [r0], #-278	; 0xfffffeea
    2560:	067fac91 			; <UNDEFINED> instruction: 0x067fac91
    2564:	04510116 	ldrbeq	r0, [r1], #-278	; 0xfffffeea
    2568:	067fb091 			; <UNDEFINED> instruction: 0x067fb091
    256c:	04520116 	ldrbeq	r0, [r2], #-278	; 0xfffffeea
    2570:	067fb491 			; <UNDEFINED> instruction: 0x067fb491
    2574:	02530116 	subseq	r0, r3, #-2147483643	; 0x80000005
    2578:	0216007b 	andseq	r0, r6, #123	; 0x7b
    257c:	9103007d 	tstls	r3, sp, ror r0
    2580:	02167fb8 	andseq	r7, r6, #184, 30	; 0x2e0
    2584:	7902047d 	stmdbvc	r2, {r0, r2, r3, r4, r5, r6, sl}
    2588:	7d021600 	stcvc	6, cr1, [r2, #-0]
    258c:	08910408 	ldmeq	r1, {r3, sl}
    2590:	02160194 	andseq	r0, r6, #148, 2	; 0x25
    2594:	77020c7d 	smlsdxvc	r2, sp, ip, r0
    2598:	7d021600 	stcvc	6, cr1, [r2, #-0]
    259c:	18910310 	ldmne	r1, {r4, r8, r9}
    25a0:	7d021606 	stcvc	6, cr1, [r2, #-24]	; 0xffffffe8
    25a4:	1c910314 	ldcne	3, cr0, [r1], {20}
    25a8:	7d021606 	stcvc	6, cr1, [r2, #-24]	; 0xffffffe8
    25ac:	007a0218 	rsbseq	r0, sl, r8, lsl r2
    25b0:	fe1a0000 	cdp2	0, 1, cr0, cr10, cr0, {0}
    25b4:	01000005 	tsteq	r0, r5
    25b8:	010f0119 	tsteq	pc, r9, lsl r1	; <UNPREDICTABLE>
    25bc:	000000ee 	andeq	r0, r0, lr, ror #1
    25c0:	10000a90 	mulne	r0, r0, sl
    25c4:	10000b24 	andne	r0, r0, r4, lsr #22
    25c8:	00001c55 	andeq	r1, r0, r5, asr ip
    25cc:	00167001 	andseq	r7, r6, r1
    25d0:	756f0f00 	strbvc	r0, [pc, #-3840]!	; 16d8 <__HEAP_SIZE+0x6d8>
    25d4:	19010074 	stmdbne	r1, {r2, r4, r5, r6}
    25d8:	01062701 	tsteq	r6, r1, lsl #14
    25dc:	1c920000 	ldcne	0, cr0, [r2], {0}
    25e0:	1c8e0000 	stcne	0, cr0, [lr], {0}
    25e4:	f5170000 			; <UNDEFINED> instruction: 0xf5170000
    25e8:	01000004 	tsteq	r0, r4
    25ec:	ee320119 	mrc	1, 1, r0, cr2, cr9, {0}
    25f0:	b7000002 	strlt	r0, [r0, -r2]
    25f4:	b300001c 	movwlt	r0, #28
    25f8:	0f00001c 	svceq	0x0000001c
    25fc:	00786469 	rsbseq	r6, r8, r9, ror #8
    2600:	41011901 	tstmi	r1, r1, lsl #18
    2604:	000000ee 	andeq	r0, r0, lr, ror #1
    2608:	00001cdc 	ldrdeq	r1, [r0], -ip
    260c:	00001cd8 	ldrdeq	r1, [r0], -r8
    2610:	00063317 	andeq	r3, r6, r7, lsl r3
    2614:	01190100 	tsteq	r9, r0, lsl #2
    2618:	0000ee4d 	andeq	lr, r0, sp, asr #28
    261c:	001d0100 	andseq	r0, sp, r0, lsl #2
    2620:	001cfd00 	andseq	pc, ip, r0, lsl #26
    2624:	009e1700 	addseq	r1, lr, r0, lsl #14
    2628:	19010000 	stmdbne	r1, {}	; <UNPREDICTABLE>
    262c:	005f6301 	subseq	r6, pc, r1, lsl #6
    2630:	1d2c0000 	stcne	0, cr0, [ip, #-0]
    2634:	1d220000 	stcne	0, cr0, [r2, #-0]
    2638:	85100000 	ldrhi	r0, [r0, #-0]
    263c:	01000005 	tsteq	r0, r5
    2640:	7d6f0119 	stfvce	f0, [pc, #-100]!	; 25e4 <__HEAP_SIZE+0x15e4>
    2644:	0200000b 	andeq	r0, r0, #11
    2648:	55100491 	ldrpl	r0, [r0, #-1169]	; 0xfffffb6f
    264c:	01000008 	tsteq	r0, r8
    2650:	5f870119 	svcpl	0x00870119
    2654:	02000000 	andeq	r0, r0, #0
    2658:	ea100891 	b	4048a4 <__RAM_SIZE+0x3048a4>
    265c:	01000006 	tsteq	r0, r6
    2660:	309a0119 	addscc	r0, sl, r9, lsl r1
    2664:	02000000 	andeq	r0, r0, #0
    2668:	f0100c91 			; <UNDEFINED> instruction: 0xf0100c91
    266c:	01000006 	tsteq	r0, r6
    2670:	30ad0119 	adccc	r0, sp, r9, lsl r1
    2674:	02000000 	andeq	r0, r0, #0
    2678:	1e171091 	mrcne	0, 0, r1, cr7, cr1, {4}
    267c:	01000006 	tsteq	r0, r6
    2680:	30c10119 	sbccc	r0, r1, r9, lsl r1
    2684:	71000000 	mrsvc	r0, (UNDEF: 0)
    2688:	6d00001d 	stcvs	0, cr0, [r0, #-116]	; 0xffffff8c
    268c:	1200001d 	andne	r0, r0, #29
    2690:	00667562 	rsbeq	r7, r6, r2, ror #10
    2694:	08011b01 	stmdaeq	r1, {r0, r8, r9, fp, ip}
    2698:	00001357 	andeq	r1, r0, r7, asr r3
    269c:	14489102 	strbne	r9, [r8], #-258	; 0xfffffefe
    26a0:	006e656c 	rsbeq	r6, lr, ip, ror #10
    26a4:	0a011c01 	beq	496b0 <__HEAP_SIZE+0x486b0>
    26a8:	000000ee 	andeq	r0, r0, lr, ror #1
    26ac:	00001d9c 	muleq	r0, ip, sp
    26b0:	00001d90 	muleq	r0, r0, sp
    26b4:	0000c01e 	andeq	ip, r0, lr, lsl r0
    26b8:	00163000 	andseq	r3, r6, r0
    26bc:	06721c00 	ldrbteq	r1, [r2], -r0, lsl #24
    26c0:	26010000 	strcs	r0, [r1], -r0
    26c4:	013a1201 	teqeq	sl, r1, lsl #4
    26c8:	1df40000 	ldclne	0, cr0, [r4]
    26cc:	1de80000 	stclne	0, cr0, [r8]
    26d0:	15000000 	strne	r0, [r0, #-0]
    26d4:	10000b20 	andne	r0, r0, r0, lsr #22
    26d8:	00001670 	andeq	r1, r0, r0, ror r6
    26dc:	007d0216 	rsbseq	r0, sp, r6, lsl r2
    26e0:	16007402 	strne	r7, [r0], -r2, lsl #8
    26e4:	02047d02 	andeq	r7, r4, #2, 26	; 0x80
    26e8:	02160077 	andseq	r0, r6, #119	; 0x77
    26ec:	9104087d 	tstls	r4, sp, ror r8
    26f0:	16019404 	strne	r9, [r1], -r4, lsl #8
    26f4:	020c7d02 	andeq	r7, ip, #2, 26	; 0x80
    26f8:	02160075 	andseq	r0, r6, #117	; 0x75
    26fc:	9103107d 	tstls	r3, sp, ror r0
    2700:	0216060c 	andseq	r0, r6, #12, 12	; 0xc00000
    2704:	9103147d 	tstls	r3, sp, ror r4
    2708:	02160610 	andseq	r0, r6, #16, 12	; 0x1000000
    270c:	7602187d 			; <UNDEFINED> instruction: 0x7602187d
    2710:	2c000000 	stccs	0, cr0, [r0], {-0}
    2714:	000005ba 			; <UNDEFINED> instruction: 0x000005ba
    2718:	010fe301 	tsteq	pc, r1, lsl #6
    271c:	000000ee 	andeq	r0, r0, lr, ror #1
    2720:	10000958 	andne	r0, r0, r8, asr r9
    2724:	10000a90 	mulne	r0, r0, sl
    2728:	00001e62 	andeq	r1, r0, r2, ror #28
    272c:	00179101 	andseq	r9, r7, r1, lsl #2
    2730:	756f2d00 	strbvc	r2, [pc, #-3328]!	; 1a38 <__HEAP_SIZE+0xa38>
    2734:	e3010074 	movw	r0, #4212	; 0x1074
    2738:	00010629 	andeq	r0, r1, r9, lsr #12
    273c:	001eac00 	andseq	sl, lr, r0, lsl #24
    2740:	001ea600 	andseq	sl, lr, r0, lsl #12
    2744:	04f52e00 	ldrbteq	r2, [r5], #3584	; 0xe00
    2748:	e3010000 	movw	r0, #4096	; 0x1000
    274c:	0002ee34 	andeq	lr, r2, r4, lsr lr
    2750:	001ede00 	andseq	sp, lr, r0, lsl #28
    2754:	001ed800 	andseq	sp, lr, r0, lsl #16
    2758:	64692d00 	strbtvs	r2, [r9], #-3328	; 0xfffff300
    275c:	e3010078 	movw	r0, #4216	; 0x1078
    2760:	0000ee43 	andeq	lr, r0, r3, asr #28
    2764:	001f1000 	andseq	r1, pc, r0
    2768:	001f0a00 	andseq	r0, pc, r0, lsl #20
    276c:	06332e00 	ldrteq	r2, [r3], -r0, lsl #28
    2770:	e3010000 	movw	r0, #4096	; 0x1000
    2774:	0000ee4f 	andeq	lr, r0, pc, asr #28
    2778:	001f4200 	andseq	r4, pc, r0, lsl #4
    277c:	001f3c00 	andseq	r3, pc, r0, lsl #24
    2780:	75622d00 	strbvc	r2, [r2, #-3328]!	; 0xfffff300
    2784:	e3010066 	movw	r0, #4198	; 0x1066
    2788:	0002ee5d 	andeq	lr, r2, sp, asr lr
    278c:	001f7200 	andseq	r7, pc, r0, lsl #4
    2790:	001f6e00 	andseq	r6, pc, r0, lsl #28
    2794:	656c2d00 	strbvs	r2, [ip, #-3328]!	; 0xfffff300
    2798:	e301006e 	movw	r0, #4206	; 0x106e
    279c:	0000ee69 	andeq	lr, r0, r9, ror #28
    27a0:	001fc400 	andseq	ip, pc, r0, lsl #8
    27a4:	001f9200 	andseq	r9, pc, r0, lsl #4
    27a8:	05852e00 	streq	r2, [r5, #3584]	; 0xe00
    27ac:	e3010000 	movw	r0, #4096	; 0x1000
    27b0:	000b7d73 	andeq	r7, fp, r3, ror sp
    27b4:	0020f800 	eoreq	pc, r0, r0, lsl #16
    27b8:	0020f400 	eoreq	pc, r0, r0, lsl #8
    27bc:	08552e00 	ldmdaeq	r5, {r9, sl, fp, sp}^
    27c0:	e3010000 	movw	r0, #4096	; 0x1000
    27c4:	0000308a 	andeq	r3, r0, sl, lsl #1
    27c8:	00211c00 	eoreq	r1, r1, r0, lsl #24
    27cc:	00211800 	eoreq	r1, r1, r0, lsl #16
    27d0:	06ea2e00 	strbteq	r2, [sl], r0, lsl #28
    27d4:	e3010000 	movw	r0, #4096	; 0x1000
    27d8:	0000309d 	muleq	r0, sp, r0
    27dc:	00214000 	eoreq	r4, r1, r0
    27e0:	00213c00 	eoreq	r3, r1, r0, lsl #24
    27e4:	06f02e00 	ldrbteq	r2, [r0], r0, lsl #28
    27e8:	e3010000 	movw	r0, #4096	; 0x1000
    27ec:	000030b0 	strheq	r3, [r0], -r0
    27f0:	00216400 	eoreq	r6, r1, r0, lsl #8
    27f4:	00216000 	eoreq	r6, r1, r0
    27f8:	061e2e00 	ldreq	r2, [lr], -r0, lsl #28
    27fc:	e3010000 	movw	r0, #4096	; 0x1000
    2800:	000030c4 	andeq	r3, r0, r4, asr #1
    2804:	00218700 	eoreq	r8, r1, r0, lsl #14
    2808:	00218300 	eoreq	r8, r1, r0, lsl #6
    280c:	0a121500 	beq	487c14 <__RAM_SIZE+0x387c14>
    2810:	17911000 	ldrne	r1, [r1, r0]
    2814:	02160000 	andseq	r0, r6, #0
    2818:	7502007d 	strvc	r0, [r2, #-125]	; 0xffffff83
    281c:	7d021600 	stcvc	6, cr1, [r2, #-0]
    2820:	00740204 	rsbseq	r0, r4, r4, lsl #4
    2824:	087d0216 	ldmdaeq	sp!, {r1, r2, r4, r9}^
    2828:	16007702 	strne	r7, [r0], -r2, lsl #14
    282c:	020c7d02 	andeq	r7, ip, #2, 26	; 0x80
    2830:	00000076 	andeq	r0, r0, r6, ror r0
    2834:	0006a22c 	andeq	sl, r6, ip, lsr #4
    2838:	0fc70100 	svceq	0x00c70100
    283c:	0000ee01 	andeq	lr, r0, r1, lsl #28
    2840:	0008da00 	andeq	sp, r8, r0, lsl #20
    2844:	00095810 	andeq	r5, r9, r0, lsl r8
    2848:	0021a710 	eoreq	sl, r1, r0, lsl r7
    284c:	18d80100 	ldmne	r8, {r8}^
    2850:	6f2d0000 	svcvs	0x002d0000
    2854:	01007475 	tsteq	r0, r5, ror r4
    2858:	010625c7 	smlabteq	r6, r7, r5, r2
    285c:	21ef0000 	mvncs	r0, r0
    2860:	21eb0000 	mvncs	r0, r0
    2864:	f52e0000 			; <UNDEFINED> instruction: 0xf52e0000
    2868:	01000004 	tsteq	r0, r4
    286c:	02ee30c7 	rsceq	r3, lr, #199	; 0xc7
    2870:	22110000 	andscs	r0, r1, #0
    2874:	220d0000 	andcs	r0, sp, #0
    2878:	692d0000 	pushvs	{}	; <UNPREDICTABLE>
    287c:	01007864 	tsteq	r0, r4, ror #16
    2880:	00ee3fc7 	rsceq	r3, lr, r7, asr #31
    2884:	223b0000 	eorscs	r0, fp, #0
    2888:	222f0000 	eorcs	r0, pc, #0
    288c:	332e0000 			; <UNDEFINED> instruction: 0x332e0000
    2890:	01000006 	tsteq	r0, r6
    2894:	00ee4bc7 	rsceq	r4, lr, r7, asr #23
    2898:	22890000 	addcs	r0, r9, #0
    289c:	22850000 	addcs	r0, r5, #0
    28a0:	622d0000 	eorvs	r0, sp, #0
    28a4:	01006675 	tsteq	r0, r5, ror r6
    28a8:	024c5fc7 	subeq	r5, ip, #796	; 0x31c
    28ac:	22ab0000 	adccs	r0, fp, #0
    28b0:	22a70000 	adccs	r0, r7, #0
    28b4:	6c2d0000 	stcvs	0, cr0, [sp], #-0
    28b8:	01006e65 	tsteq	r0, r5, ror #28
    28bc:	00ee6bc7 	rsceq	r6, lr, r7, asr #23
    28c0:	22cf0000 	sbccs	r0, pc, #0
    28c4:	22cb0000 	sbccs	r0, fp, #0
    28c8:	f02e0000 			; <UNDEFINED> instruction: 0xf02e0000
    28cc:	01000006 	tsteq	r0, r6
    28d0:	00307dc7 	eorseq	r7, r0, r7, asr #27
    28d4:	22f20000 	rscscs	r0, r2, #0
    28d8:	22ee0000 	rsccs	r0, lr, #0
    28dc:	1e2e0000 	cdpne	0, 2, cr0, cr14, cr0, {0}
    28e0:	01000006 	tsteq	r0, r6
    28e4:	003091c7 	eorseq	r9, r0, r7, asr #3
    28e8:	23160000 	tstcs	r6, #0
    28ec:	23120000 	tstcs	r2, #0
    28f0:	712f0000 			; <UNDEFINED> instruction: 0x712f0000
    28f4:	01000005 	tsteq	r0, r5
    28f8:	00fa10c9 	rscseq	r1, sl, r9, asr #1
    28fc:	233c0000 	teqcs	ip, #0
    2900:	23360000 	teqcs	r6, #0
    2904:	a81e0000 	ldmdage	lr, {}	; <UNPREDICTABLE>
    2908:	9d000000 	stcls	0, cr0, [r0, #-0]
    290c:	30000018 	andcc	r0, r0, r8, lsl r0
    2910:	cd010069 	stcgt	0, cr0, [r1, #-420]	; 0xfffffe5c
    2914:	0000ee11 	andeq	lr, r0, r1, lsl lr
    2918:	00236b00 	eoreq	r6, r3, r0, lsl #22
    291c:	00236900 	eoreq	r6, r3, r0, lsl #18
    2920:	090e2200 	stmdbeq	lr, {r9, sp}
    2924:	01161000 	tsteq	r6, r0
    2928:	20080250 	andcs	r0, r8, r0, asr r2
    292c:	02510116 	subseq	r0, r1, #-2147483643	; 0x80000005
    2930:	01160076 	tsteq	r6, r6, ror r0
    2934:	7f7b0252 	svcvc	0x007b0252
    2938:	02530116 	subseq	r0, r3, #-2147483643	; 0x80000005
    293c:	00000077 	andeq	r0, r0, r7, ror r0
    2940:	00092c21 	andeq	r2, r9, r1, lsr #24
    2944:	0018b910 	andseq	fp, r8, r0, lsl r9
    2948:	51011600 	tstpl	r1, r0, lsl #12
    294c:	16007602 	strne	r7, [r0], -r2, lsl #12
    2950:	78025201 	stmdavc	r2, {r0, r9, ip, lr}
    2954:	5301167f 	movwpl	r1, #5759	; 0x167f
    2958:	00007702 	andeq	r7, r0, r2, lsl #14
    295c:	00095422 	andeq	r5, r9, r2, lsr #8
    2960:	50011610 	andpl	r1, r1, r0, lsl r6
    2964:	16200802 	strtne	r0, [r0], -r2, lsl #16
    2968:	76025101 	strvc	r5, [r2], -r1, lsl #2
    296c:	52011600 	andpl	r1, r1, #0, 12
    2970:	167f7402 	ldrbtne	r7, [pc], -r2, lsl #8
    2974:	77025301 	strvc	r5, [r2, -r1, lsl #6]
    2978:	31000000 	mrscc	r0, (UNDEF: 0)
    297c:	0000063a 	andeq	r0, r0, sl, lsr r6
    2980:	0115bc01 	tsteq	r5, r1, lsl #24
    2984:	00000030 	andeq	r0, r0, r0, lsr r0
    2988:	100008b6 			; <UNDEFINED> instruction: 0x100008b6
    298c:	100008da 	ldrdne	r0, [r0], -sl
    2990:	01007d02 	tsteq	r0, r2, lsl #26
    2994:	00001940 	andeq	r1, r0, r0, asr #18
    2998:	7274732d 	rsbsvc	r7, r4, #-1275068416	; 0xb4000000
    299c:	28bc0100 	ldmcs	ip!, {r8}
    29a0:	00001940 	andeq	r1, r0, r0, asr #18
    29a4:	00002382 	andeq	r2, r0, r2, lsl #7
    29a8:	0000237e 	andeq	r2, r0, lr, ror r3
    29ac:	01006930 	tsteq	r0, r0, lsr r9
    29b0:	003010be 	ldrhteq	r1, [r0], -lr
    29b4:	23a60000 			; <UNDEFINED> instruction: 0x23a60000
    29b8:	23a00000 	movcs	r0, #0
    29bc:	46320000 	ldrtmi	r0, [r2], -r0
    29c0:	d0000019 	andle	r0, r0, r9, lsl r0
    29c4:	00100008 	andseq	r0, r0, r8
    29c8:	0008d000 	andeq	sp, r8, r0
    29cc:	0008d410 	andeq	sp, r8, r0, lsl r4
    29d0:	0abf0110 	beq	fefc2e18 <__StackTop+0xc6ec2e18>
    29d4:	00195824 	andseq	r5, r9, r4, lsr #16
    29d8:	0023d400 	eoreq	sp, r3, r0, lsl #8
    29dc:	0023d000 	eoreq	sp, r3, r0
    29e0:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    29e4:	00024c04 	andeq	r4, r2, r4, lsl #24
    29e8:	066e3300 	strbteq	r3, [lr], -r0, lsl #6
    29ec:	b5010000 	strlt	r0, [r1, #-0]
    29f0:	0b7d0114 	bleq	1f42e48 <__RAM_SIZE+0x1e42e48>
    29f4:	64030000 	strvs	r0, [r3], #-0
    29f8:	34000019 	strcc	r0, [r0], #-25	; 0xffffffe7
    29fc:	01006863 	tsteq	r0, r3, ror #16
    2a00:	013323b5 	teqeq	r3, r5	; <illegal shifter operand>
    2a04:	33000000 	movwcc	r0, #0
    2a08:	00000640 	andeq	r0, r0, r0, asr #12
    2a0c:	011cab01 	tsteq	ip, r1, lsl #22
    2a10:	00000030 	andeq	r0, r0, r0, lsr r0
    2a14:	00199903 	andseq	r9, r9, r3, lsl #18
    2a18:	74733400 	ldrbtvc	r3, [r3], #-1024	; 0xfffffc00
    2a1c:	ab010072 	blge	42bec <__HEAP_SIZE+0x41bec>
    2a20:	00024c33 	andeq	r4, r2, r3, lsr ip
    2a24:	053a3500 	ldreq	r3, [sl, #-1280]!	; 0xfffffb00
    2a28:	ab010000 	blge	42a30 <__HEAP_SIZE+0x41a30>
    2a2c:	0000ee3f 	andeq	lr, r0, pc, lsr lr
    2a30:	00733600 	rsbseq	r3, r3, r0, lsl #12
    2a34:	4c0fad01 	stcmi	13, cr10, [pc], {1}
    2a38:	00000002 	andeq	r0, r0, r2
    2a3c:	00055a37 	andeq	r5, r5, r7, lsr sl
    2a40:	149f0100 	ldrne	r0, [pc], #256	; 2a48 <__HEAP_SIZE+0x1a48>
    2a44:	00000001 	andeq	r0, r0, r1
    2a48:	00000000 	andeq	r0, r0, r0
    2a4c:	0023f400 	eoreq	pc, r3, r0, lsl #8
    2a50:	1a040100 	bne	102e58 <__RAM_SIZE+0x2e58>
    2a54:	982e0000 	stmdals	lr!, {}	; <UNPREDICTABLE>
    2a58:	01000006 	tsteq	r0, r6
    2a5c:	0133229f 	teqeq	r3, pc	; <illegal shifter operand>
    2a60:	24260000 	strtcs	r0, [r6], #-0
    2a64:	24200000 	strtcs	r0, [r0], #-0
    2a68:	f52e0000 			; <UNDEFINED> instruction: 0xf52e0000
    2a6c:	01000004 	tsteq	r0, r4
    2a70:	00e0339f 	smlaleq	r3, r0, pc, r3	; <UNPREDICTABLE>
    2a74:	24580000 	ldrbcs	r0, [r8], #-0
    2a78:	24520000 	ldrbcs	r0, [r2], #-0
    2a7c:	692d0000 	pushvs	{}	; <UNPREDICTABLE>
    2a80:	01007864 	tsteq	r0, r4, ror #16
    2a84:	00ee429f 	smlaleq	r4, lr, pc, r2	; <UNPREDICTABLE>
    2a88:	248a0000 	strcs	r0, [sl], #0
    2a8c:	24840000 	strcs	r0, [r4], #0
    2a90:	332e0000 			; <UNDEFINED> instruction: 0x332e0000
    2a94:	01000006 	tsteq	r0, r6
    2a98:	00ee4e9f 	smlaleq	r4, lr, pc, lr	; <UNPREDICTABLE>
    2a9c:	24bc0000 	ldrtcs	r0, [ip], #0
    2aa0:	24b60000 	ldrtcs	r0, [r6], #0
    2aa4:	38000000 	stmdacc	r0, {}	; <UNPREDICTABLE>
    2aa8:	00000530 	andeq	r0, r0, r0, lsr r5
    2aac:	01149501 	tsteq	r4, r1, lsl #10
    2ab0:	100019f8 	strdne	r1, [r0], -r8
    2ab4:	10001a04 	andne	r1, r0, r4, lsl #20
    2ab8:	000024e8 	andeq	r2, r0, r8, ror #9
    2abc:	001a7801 	andseq	r7, sl, r1, lsl #16
    2ac0:	06982e00 	ldreq	r2, [r8], r0, lsl #28
    2ac4:	95010000 	strls	r0, [r1, #-0]
    2ac8:	00013323 	andeq	r3, r1, r3, lsr #6
    2acc:	00250c00 	eoreq	r0, r5, r0, lsl #24
    2ad0:	00250800 	eoreq	r0, r5, r0, lsl #16
    2ad4:	04f52e00 	ldrbteq	r2, [r5], #3584	; 0xe00
    2ad8:	95010000 	strls	r0, [r1, #-0]
    2adc:	0000e034 	andeq	lr, r0, r4, lsr r0
    2ae0:	00253100 	eoreq	r3, r5, r0, lsl #2
    2ae4:	00252d00 	eoreq	r2, r5, r0, lsl #26
    2ae8:	64692d00 	strbtvs	r2, [r9], #-3328	; 0xfffff300
    2aec:	95010078 	strls	r0, [r1, #-120]	; 0xffffff88
    2af0:	0000ee43 	andeq	lr, r0, r3, asr #28
    2af4:	00255600 	eoreq	r5, r5, r0, lsl #12
    2af8:	00255200 	eoreq	r5, r5, r0, lsl #4
    2afc:	06332e00 	ldrteq	r2, [r3], -r0, lsl #28
    2b00:	95010000 	strls	r0, [r1, #-0]
    2b04:	0000ee4f 	andeq	lr, r0, pc, asr #28
    2b08:	00257b00 	eoreq	r7, r5, r0, lsl #22
    2b0c:	00257700 	eoreq	r7, r5, r0, lsl #14
    2b10:	1a022b00 	bne	8d718 <__HEAP_SIZE+0x8c718>
    2b14:	1bb61000 	blne	fed86b1c <__StackTop+0xc6c86b1c>
    2b18:	39000000 	stmdbcc	r0, {}	; <UNPREDICTABLE>
    2b1c:	000005d8 	ldrdeq	r0, [r0], -r8
    2b20:	01148e01 	tsteq	r4, r1, lsl #28
    2b24:	100008b4 			; <UNDEFINED> instruction: 0x100008b4
    2b28:	100008b6 			; <UNDEFINED> instruction: 0x100008b6
    2b2c:	01007d02 	tsteq	r0, r2, lsl #26
    2b30:	00001aca 	andeq	r1, r0, sl, asr #21
    2b34:	0006983a 	andeq	r9, r6, sl, lsr r8
    2b38:	238e0100 	orrcs	r0, lr, #0, 2
    2b3c:	00000133 	andeq	r0, r0, r3, lsr r1
    2b40:	f53a5001 			; <UNDEFINED> instruction: 0xf53a5001
    2b44:	01000004 	tsteq	r0, r4
    2b48:	00e0348e 	rsceq	r3, r0, lr, lsl #9
    2b4c:	51010000 	mrspl	r0, (UNDEF: 1)
    2b50:	7864693b 	stmdavc	r4!, {r0, r1, r3, r4, r5, r8, fp, sp, lr}^
    2b54:	438e0100 	orrmi	r0, lr, #0, 2
    2b58:	000000ee 	andeq	r0, r0, lr, ror #1
    2b5c:	333a5201 	teqcc	sl, #268435456	; 0x10000000
    2b60:	01000006 	tsteq	r0, r6
    2b64:	00ee4f8e 	rsceq	r4, lr, lr, lsl #31
    2b68:	53010000 	movwpl	r0, #4096	; 0x1000
    2b6c:	04f03900 	ldrbteq	r3, [r0], #2304	; 0x900
    2b70:	85010000 	strhi	r0, [r1, #-0]
    2b74:	00000114 	andeq	r0, r0, r4, lsl r1
    2b78:	00000000 	andeq	r0, r0, r0
    2b7c:	7d020000 	stcvc	0, cr0, [r2, #-0]
    2b80:	1b1c0100 	blne	702f88 <__RAM_SIZE+0x602f88>
    2b84:	983a0000 	ldmdals	sl!, {}	; <UNPREDICTABLE>
    2b88:	01000006 	tsteq	r0, r6
    2b8c:	01332585 	teqeq	r3, r5, lsl #11
    2b90:	50010000 	andpl	r0, r1, r0
    2b94:	0004f53a 	andeq	pc, r4, sl, lsr r5	; <UNPREDICTABLE>
    2b98:	36850100 	strcc	r0, [r5], r0, lsl #2
    2b9c:	000000e0 	andeq	r0, r0, r0, ror #1
    2ba0:	693b5101 	ldmdbvs	fp!, {r0, r8, ip, lr}
    2ba4:	01007864 	tsteq	r0, r4, ror #16
    2ba8:	00ee4585 	rsceq	r4, lr, r5, lsl #11
    2bac:	52010000 	andpl	r0, r1, #0
    2bb0:	0006333a 	andeq	r3, r6, sl, lsr r3
    2bb4:	51850100 	orrpl	r0, r5, r0, lsl #2
    2bb8:	000000ee 	andeq	r0, r0, lr, ror #1
    2bbc:	3c005301 	stccc	3, cr5, [r0], {1}
    2bc0:	067d0101 	ldrbteq	r0, [sp], -r1, lsl #2
    2bc4:	067d0000 	ldrbteq	r0, [sp], -r0
    2bc8:	013c0000 	teqeq	ip, r0
    2bcc:	00062401 	andeq	r2, r6, r1, lsl #8
    2bd0:	00062400 	andeq	r2, r6, r0, lsl #8
    2bd4:	01013c00 	tsteq	r1, r0, lsl #24
    2bd8:	00000705 	andeq	r0, r0, r5, lsl #14
    2bdc:	00000705 	andeq	r0, r0, r5, lsl #14
    2be0:	c501013c 	strgt	r0, [r1, #-316]	; 0xfffffec4
    2be4:	c5000004 	strgt	r0, [r0, #-4]
    2be8:	3c000004 	stccc	0, cr0, [r0], {4}
    2bec:	06500101 	ldrbeq	r0, [r0], -r1, lsl #2
    2bf0:	06500000 	ldrbeq	r0, [r0], -r0
    2bf4:	013c0000 	teqeq	ip, r0
    2bf8:	00058e01 	andeq	r8, r5, r1, lsl #28
    2bfc:	00058e00 	andeq	r8, r5, r0, lsl #28
    2c00:	01013c00 	tsteq	r1, r0, lsl #24
    2c04:	000006ab 	andeq	r0, r0, fp, lsr #13
    2c08:	000006ab 	andeq	r0, r0, fp, lsr #13
    2c0c:	4801013c 	stmdami	r1, {r2, r3, r4, r5, r8}
    2c10:	48000005 	stmdami	r0, {r0, r2}
    2c14:	3c000005 	stccc	0, cr0, [r0], {5}
    2c18:	05140101 	ldreq	r0, [r4, #-257]	; 0xfffffeff
    2c1c:	05140000 	ldreq	r0, [r4, #-0]
    2c20:	013c0000 	teqeq	ip, r0
    2c24:	0005ef01 	andeq	lr, r5, r1, lsl #30
    2c28:	0005ef00 	andeq	lr, r5, r0, lsl #30
    2c2c:	01013c00 	tsteq	r1, r0, lsl #24
    2c30:	00000563 	andeq	r0, r0, r3, ror #10
    2c34:	00000563 	andeq	r0, r0, r3, ror #10
    2c38:	1101013c 	tstne	r1, ip, lsr r1
    2c3c:	11000006 	tstne	r0, r6
    2c40:	3c000006 	stccc	0, cr0, [r0], {6}
    2c44:	06c90101 	strbeq	r0, [r9], r1, lsl #2
    2c48:	06c90000 	strbeq	r0, [r9], r0
    2c4c:	013c0000 	teqeq	ip, r0
    2c50:	0006b801 	andeq	fp, r6, r1, lsl #16
    2c54:	0006b800 	andeq	fp, r6, r0, lsl #16
    2c58:	01013d00 	tsteq	r1, r0, lsl #26
    2c5c:	00000527 	andeq	r0, r0, r7, lsr #10
    2c60:	00000527 	andeq	r0, r0, r7, lsr #10
    2c64:	00053107 	andeq	r3, r5, r7, lsl #2
    2c68:	0000024f 	andeq	r0, r0, pc, asr #4
    2c6c:	06c20002 	strbeq	r0, [r2], r2
    2c70:	01040000 	mrseq	r0, (UNDEF: 4)
    2c74:	00000189 	andeq	r0, r0, r9, lsl #3
    2c78:	0007390c 	andeq	r3, r7, ip, lsl #18
    2c7c:	00038500 	andeq	r8, r3, r0, lsl #10
    2c80:	0001f800 	andeq	pc, r1, r0, lsl #16
	...
    2c8c:	0018bd00 	andseq	fp, r8, r0, lsl #26
    2c90:	06010200 	streq	r0, [r1], -r0, lsl #4
    2c94:	00000273 	andeq	r0, r0, r3, ror r2
    2c98:	00017f03 	andeq	r7, r1, r3, lsl #30
    2c9c:	182b0200 	stmdane	fp!, {r9}
    2ca0:	0000003c 	andeq	r0, r0, ip, lsr r0
    2ca4:	71080102 	tstvc	r8, r2, lsl #2
    2ca8:	02000002 	andeq	r0, r0, #2
    2cac:	00320502 	eorseq	r0, r2, r2, lsl #10
    2cb0:	02020000 	andeq	r0, r2, #0
    2cb4:	00031a07 	andeq	r1, r3, r7, lsl #20
    2cb8:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
    2cbc:	0000012c 	andeq	r0, r0, ip, lsr #2
    2cc0:	00006f03 	andeq	r6, r0, r3, lsl #30
    2cc4:	194f0200 	stmdbne	pc, {r9}^	; <UNPREDICTABLE>
    2cc8:	00000064 	andeq	r0, r0, r4, rrx
    2ccc:	c2070402 	andgt	r0, r7, #33554432	; 0x2000000
    2cd0:	02000002 	andeq	r0, r0, #2
    2cd4:	01270508 			; <UNDEFINED> instruction: 0x01270508
    2cd8:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    2cdc:	0002bd07 	andeq	fp, r2, r7, lsl #26
    2ce0:	05040400 	streq	r0, [r4, #-1024]	; 0xfffffc00
    2ce4:	00746e69 	rsbseq	r6, r4, r9, ror #28
    2ce8:	c7070402 	strgt	r0, [r7, -r2, lsl #8]
    2cec:	03000002 	movweq	r0, #2
    2cf0:	00000504 	andeq	r0, r0, r4, lsl #10
    2cf4:	8017d103 	andshi	sp, r7, r3, lsl #2
    2cf8:	02000000 	andeq	r0, r0, #0
    2cfc:	00630408 	rsbeq	r0, r3, r8, lsl #8
    2d00:	01020000 	mrseq	r0, (UNDEF: 2)
    2d04:	00027a08 	andeq	r7, r2, r8, lsl #20
    2d08:	009a0500 	addseq	r0, sl, r0, lsl #10
    2d0c:	04060000 	streq	r0, [r6], #-0
    2d10:	000000a1 	andeq	r0, r0, r1, lsr #1
    2d14:	00018103 	andeq	r8, r1, r3, lsl #2
    2d18:	13180400 	tstne	r8, #0, 8
    2d1c:	00000030 	andeq	r0, r0, r0, lsr r0
    2d20:	00007103 	andeq	r7, r0, r3, lsl #2
    2d24:	14300400 	ldrtne	r0, [r0], #-1024	; 0xfffffc00
    2d28:	00000058 	andeq	r0, r0, r8, asr r0
    2d2c:	07530107 	ldrbeq	r0, [r3, -r7, lsl #2]
    2d30:	3f010000 	svccc	0x00010000
    2d34:	00870108 	addeq	r0, r7, r8, lsl #2
	...
    2d40:	259c0000 	ldrcs	r0, [ip]
    2d44:	3b010000 	blcc	42d4c <__HEAP_SIZE+0x41d4c>
    2d48:	08000001 	stmdaeq	r0, {r0}
    2d4c:	000004f5 	strdeq	r0, [r0], -r5
    2d50:	3b1b3f01 	blcc	6d295c <__RAM_SIZE+0x5d295c>
    2d54:	c0000001 	andgt	r0, r0, r1
    2d58:	bc000025 	stclt	0, cr0, [r0], {37}	; 0x25
    2d5c:	08000025 	stmdaeq	r0, {r0, r2, r5}
    2d60:	0000053d 	andeq	r0, r0, sp, lsr r5
    2d64:	872a3f01 	strhi	r3, [sl, -r1, lsl #30]!
    2d68:	e2000000 	and	r0, r0, #0
    2d6c:	de000025 	cdple	0, 0, cr0, cr0, cr5, {1}
    2d70:	09000025 	stmdbeq	r0, {r0, r2, r5}
    2d74:	01006863 	tsteq	r0, r3, ror #16
    2d78:	00ac0d40 	adceq	r0, ip, r0, asr #26
    2d7c:	26060000 	strcs	r0, [r6], -r0
    2d80:	26000000 	strcs	r0, [r0], -r0
    2d84:	69090000 	stmdbvs	r9, {}	; <UNPREDICTABLE>
    2d88:	41010074 	tstmi	r1, r4, ror r0
    2d8c:	0000870c 	andeq	r8, r0, ip, lsl #14
    2d90:	00263400 	eoreq	r3, r6, r0, lsl #8
    2d94:	00263000 	eoreq	r3, r6, r0
    2d98:	00000a00 	andeq	r0, r0, r0, lsl #20
    2d9c:	02440000 	subeq	r0, r4, #0
    2da0:	06000000 	streq	r0, [r0], -r0
    2da4:	0000ac04 	andeq	sl, r0, r4, lsl #24
    2da8:	6b010b00 	blvs	459b0 <__HEAP_SIZE+0x449b0>
    2dac:	01000007 	tsteq	r0, r7
    2db0:	0001063b 	andeq	r0, r1, fp, lsr r6
    2db4:	00000000 	andeq	r0, r0, r0
    2db8:	53000000 	movwpl	r0, #0
    2dbc:	01000026 	tsteq	r0, r6, lsr #32
    2dc0:	00000182 	andeq	r0, r0, r2, lsl #3
    2dc4:	00074c08 	andeq	r4, r7, r8, lsl #24
    2dc8:	1c3b0100 	ldfnes	f0, [fp], #-0
    2dcc:	000000a6 	andeq	r0, r0, r6, lsr #1
    2dd0:	00002677 	andeq	r2, r0, r7, ror r6
    2dd4:	00002673 	andeq	r2, r0, r3, ror r6
    2dd8:	0000000c 	andeq	r0, r0, ip
    2ddc:	00019800 	andeq	r9, r1, r0, lsl #16
    2de0:	50010d00 	andpl	r0, r1, r0, lsl #26
    2de4:	5001f303 	andpl	pc, r1, r3, lsl #6
    2de8:	010e0000 	mrseq	r0, (UNDEF: 14)
    2dec:	00000356 	andeq	r0, r0, r6, asr r3
    2df0:	01063201 	tsteq	r6, r1, lsl #4
    2df4:	10001a64 	andne	r1, r0, r4, ror #20
    2df8:	10001a88 	andne	r1, r0, r8, lsl #21
    2dfc:	01007d02 	tsteq	r0, r2, lsl #26
    2e00:	001b0107 	andseq	r0, fp, r7, lsl #2
    2e04:	dd050000 	stcle	0, cr0, [r5, #-0]
    2e08:	00790105 	rsbseq	r0, r9, r5, lsl #2
    2e0c:	1a440000 	bne	1102e14 <__RAM_SIZE+0x1002e14>
    2e10:	1a621000 	bne	1886e18 <__RAM_SIZE+0x1786e18>
    2e14:	26981000 	ldrcs	r1, [r8], r0
    2e18:	f8010000 			; <UNDEFINED> instruction: 0xf8010000
    2e1c:	08000001 	stmdaeq	r0, {r0}
    2e20:	0000074c 	andeq	r0, r0, ip, asr #14
    2e24:	a6162801 	ldrge	r2, [r6], -r1, lsl #16
    2e28:	bc000000 	stclt	0, cr0, [r0], {-0}
    2e2c:	b8000026 	stmdalt	r0, {r1, r2, r5}
    2e30:	0f000026 	svceq	0x00000026
    2e34:	00000765 	andeq	r0, r0, r5, ror #14
    2e38:	79092901 	stmdbvc	r9, {r0, r8, fp, sp}
    2e3c:	de000000 	cdple	0, 0, cr0, cr0, cr0, {0}
    2e40:	da000026 	ble	2ee0 <__HEAP_SIZE+0x1ee0>
    2e44:	0a000026 	beq	2ee4 <__HEAP_SIZE+0x1ee4>
    2e48:	10001a50 	andne	r1, r0, r0, asr sl
    2e4c:	00000212 	andeq	r0, r0, r2, lsl r2
    2e50:	001a5e0c 	andseq	r5, sl, ip, lsl #28
    2e54:	00021210 	andeq	r1, r2, r0, lsl r2
    2e58:	50010d00 	andpl	r0, r1, r0, lsl #26
    2e5c:	00003a01 	andeq	r3, r0, r1, lsl #20
    2e60:	07750110 			; <UNDEFINED> instruction: 0x07750110
    2e64:	23010000 	movwcs	r0, #4096	; 0x1000
    2e68:	00790105 	rsbseq	r0, r9, r5, lsl #2
	...
    2e74:	7d020000 	stcvc	0, cr0, [r2, #-0]
    2e78:	01110100 	tsteq	r1, r0, lsl #2
    2e7c:	00000527 	andeq	r0, r0, r7, lsr #10
    2e80:	01051d01 	tsteq	r5, r1, lsl #26
    2e84:	00000079 	andeq	r0, r0, r9, ror r0
    2e88:	10001a30 	andne	r1, r0, r0, lsr sl
    2e8c:	10001a44 	andne	r1, r0, r4, asr #20
    2e90:	01007d02 	tsteq	r0, r2, lsl #26
    2e94:	00000244 	andeq	r0, r0, r4, asr #4
    2e98:	00686312 	rsbeq	r6, r8, r2, lsl r3
    2e9c:	79121d01 	ldmdbvc	r2, {r0, r8, sl, fp, ip}
    2ea0:	ff000000 			; <UNDEFINED> instruction: 0xff000000
    2ea4:	fd000026 	stc2	0, cr0, [r0, #-152]	; 0xffffff68
    2ea8:	00000026 	andeq	r0, r0, r6, lsr #32
    2eac:	5d010113 	stfpls	f0, [r1, #-76]	; 0xffffffb4
    2eb0:	5d000007 	stcpl	0, cr0, [r0, #-28]	; 0xffffffe4
    2eb4:	05000007 	streq	r0, [r0, #-7]
    2eb8:	ae0005d9 	mcrge	5, 0, r0, cr0, cr9, {6}
    2ebc:	02000008 	andeq	r0, r0, #8
    2ec0:	00082100 	andeq	r2, r8, r0, lsl #2
    2ec4:	89010400 	stmdbhi	r1, {sl}
    2ec8:	0c000001 	stceq	0, cr0, [r0], {1}
    2ecc:	0000085a 	andeq	r0, r0, sl, asr r8
    2ed0:	00000385 	andeq	r0, r0, r5, lsl #7
    2ed4:	00000230 	andeq	r0, r0, r0, lsr r2
	...
    2ee0:	00001bf9 	strdeq	r1, [r0], -r9
    2ee4:	73060102 	movwvc	r0, #24834	; 0x6102
    2ee8:	02000002 	andeq	r0, r0, #2
    2eec:	02710801 	rsbseq	r0, r1, #65536	; 0x10000
    2ef0:	02020000 	andeq	r0, r2, #0
    2ef4:	00003205 	andeq	r3, r0, r5, lsl #4
    2ef8:	07b30300 	ldreq	r0, [r3, r0, lsl #6]!
    2efc:	39030000 	stmdbcc	r3, {}	; <UNPREDICTABLE>
    2f00:	00004a19 	andeq	r4, r0, r9, lsl sl
    2f04:	07020200 	streq	r0, [r2, -r0, lsl #4]
    2f08:	0000031a 	andeq	r0, r0, sl, lsl r3
    2f0c:	2c050402 	cfstrscs	mvf0, [r5], {2}
    2f10:	03000001 	movweq	r0, #1
    2f14:	0000006f 	andeq	r0, r0, pc, rrx
    2f18:	64194f03 	ldrvs	r4, [r9], #-3843	; 0xfffff0fd
    2f1c:	02000000 	andeq	r0, r0, #0
    2f20:	02c20704 	sbceq	r0, r2, #4, 14	; 0x100000
    2f24:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    2f28:	00012705 	andeq	r2, r1, r5, lsl #14
    2f2c:	07080200 	streq	r0, [r8, -r0, lsl #4]
    2f30:	000002bd 			; <UNDEFINED> instruction: 0x000002bd
    2f34:	69050404 	stmdbvs	r5, {r2, sl}
    2f38:	0200746e 	andeq	r7, r0, #1845493760	; 0x6e000000
    2f3c:	02c70704 	sbceq	r0, r7, #4, 14	; 0x100000
    2f40:	80050000 	andhi	r0, r5, r0
    2f44:	03000000 	movweq	r0, #0
    2f48:	00000504 	andeq	r0, r0, r4, lsl #10
    2f4c:	8017d104 	andshi	sp, r7, r4, lsl #2
    2f50:	02000000 	andeq	r0, r0, #0
    2f54:	00630408 	rsbeq	r0, r3, r8, lsl #8
    2f58:	01020000 	mrseq	r0, (UNDEF: 2)
    2f5c:	00027a08 	andeq	r7, r2, r8, lsl #20
    2f60:	07b50300 	ldreq	r0, [r5, r0, lsl #6]!
    2f64:	24050000 	strcs	r0, [r5], #-0
    2f68:	00003e14 	andeq	r3, r0, r4, lsl lr
    2f6c:	00710300 	rsbseq	r0, r1, r0, lsl #6
    2f70:	30050000 	andcc	r0, r5, r0
    2f74:	00005814 	andeq	r5, r0, r4, lsl r8
    2f78:	08320300 	ldmdaeq	r2!, {r8, r9}
    2f7c:	28060000 	stmdacs	r6, {}	; <UNPREDICTABLE>
    2f80:	0000ca23 	andeq	ip, r0, r3, lsr #20
    2f84:	08c20600 	stmiaeq	r2, {r9, sl}^
    2f88:	06200000 	strteq	r0, [r0], -r0
    2f8c:	014a0829 	cmpeq	sl, r9, lsr #16
    2f90:	72070000 	andvc	r0, r7, #0
    2f94:	2a060030 	bcs	18305c <__RAM_SIZE+0x8305c>
    2f98:	00008012 	andeq	r8, r0, r2, lsl r0
    2f9c:	00230200 	eoreq	r0, r3, r0, lsl #4
    2fa0:	00317207 	eorseq	r7, r1, r7, lsl #4
    2fa4:	80122b06 	andshi	r2, r2, r6, lsl #22
    2fa8:	02000000 	andeq	r0, r0, #0
    2fac:	72070423 	andvc	r0, r7, #587202560	; 0x23000000
    2fb0:	2c060032 	stccs	0, cr0, [r6], {50}	; 0x32
    2fb4:	00008012 	andeq	r8, r0, r2, lsl r0
    2fb8:	08230200 	stmdaeq	r3!, {r9}
    2fbc:	00337207 	eorseq	r7, r3, r7, lsl #4
    2fc0:	80122d06 	andshi	r2, r2, r6, lsl #26
    2fc4:	02000000 	andeq	r0, r0, #0
    2fc8:	72070c23 	andvc	r0, r7, #8960	; 0x2300
    2fcc:	06003231 			; <UNDEFINED> instruction: 0x06003231
    2fd0:	0080122e 	addeq	r1, r0, lr, lsr #4
    2fd4:	23020000 	movwcs	r0, #8192	; 0x2000
    2fd8:	726c0710 	rsbvc	r0, ip, #16, 14	; 0x400000
    2fdc:	122f0600 	eorne	r0, pc, #0, 12
    2fe0:	00000080 	andeq	r0, r0, r0, lsl #1
    2fe4:	07142302 	ldreq	r2, [r4, -r2, lsl #6]
    2fe8:	06006370 			; <UNDEFINED> instruction: 0x06006370
    2fec:	00801230 	addeq	r1, r0, r0, lsr r2
    2ff0:	23020000 	movwcs	r0, #8192	; 0x2000
    2ff4:	73700718 	cmnvc	r0, #24, 14	; 0x600000
    2ff8:	31060072 	tstcc	r6, r2, ror r0
    2ffc:	00008012 	andeq	r8, r0, r2, lsl r0
    3000:	1c230200 	sfmne	f0, 4, [r3], #-0
    3004:	07ee0300 	strbeq	r0, [lr, r0, lsl #6]!
    3008:	34060000 	strcc	r0, [r6], #-0
    300c:	00015623 	andeq	r5, r1, r3, lsr #12
    3010:	08130600 	ldmdaeq	r3, {r9, sl}
    3014:	06200000 	strteq	r0, [r0], -r0
    3018:	01d60835 	bicseq	r0, r6, r5, lsr r8
    301c:	72070000 	andvc	r0, r7, #0
    3020:	36060034 			; <UNDEFINED> instruction: 0x36060034
    3024:	00008012 	andeq	r8, r0, r2, lsl r0
    3028:	00230200 	eoreq	r0, r3, r0, lsl #4
    302c:	00357207 	eorseq	r7, r5, r7, lsl #4
    3030:	80123706 	andshi	r3, r2, r6, lsl #14
    3034:	02000000 	andeq	r0, r0, #0
    3038:	72070423 	andvc	r0, r7, #587202560	; 0x23000000
    303c:	38060036 	stmdacc	r6, {r1, r2, r4, r5}
    3040:	00008012 	andeq	r8, r0, r2, lsl r0
    3044:	08230200 	stmdaeq	r3!, {r9}
    3048:	00377207 	eorseq	r7, r7, r7, lsl #4
    304c:	80123906 	andshi	r3, r2, r6, lsl #18
    3050:	02000000 	andeq	r0, r0, #0
    3054:	72070c23 	andvc	r0, r7, #8960	; 0x2300
    3058:	3a060038 	bcc	183140 <__RAM_SIZE+0x83140>
    305c:	00008012 	andeq	r8, r0, r2, lsl r0
    3060:	10230200 	eorne	r0, r3, r0, lsl #4
    3064:	00397207 	eorseq	r7, r9, r7, lsl #4
    3068:	80123b06 	andshi	r3, r2, r6, lsl #22
    306c:	02000000 	andeq	r0, r0, #0
    3070:	72071423 	andvc	r1, r7, #587202560	; 0x23000000
    3074:	06003031 			; <UNDEFINED> instruction: 0x06003031
    3078:	0080123c 	addeq	r1, r0, ip, lsr r2
    307c:	23020000 	movwcs	r0, #8192	; 0x2000
    3080:	31720718 	cmncc	r2, r8, lsl r7
    3084:	3d060031 	stccc	0, cr0, [r6, #-196]	; 0xffffff3c
    3088:	00008012 	andeq	r8, r0, r2, lsl r0
    308c:	1c230200 	sfmne	f0, 4, [r3], #-0
    3090:	07920300 	ldreq	r0, [r2, r0, lsl #6]
    3094:	40060000 	andmi	r0, r6, r0
    3098:	0001e21c 	andeq	lr, r1, ip, lsl r2
    309c:	08260600 	stmdaeq	r6!, {r9, sl}
    30a0:	06400000 	strbeq	r0, [r0], -r0
    30a4:	020e0841 	andeq	r0, lr, #4259840	; 0x410000
    30a8:	1f080000 	svcne	0x00080000
    30ac:	06000008 	streq	r0, [r0], -r8
    30b0:	014a1a42 	cmpeq	sl, r2, asr #20
    30b4:	23020000 	movwcs	r0, #8192	; 0x2000
    30b8:	08ce0800 	stmiaeq	lr, {fp}^
    30bc:	43060000 	movwmi	r0, #24576	; 0x6000
    30c0:	0000be1a 	andeq	fp, r0, sl, lsl lr
    30c4:	20230200 	eorcs	r0, r3, r0, lsl #4
    30c8:	08b10900 	ldmeq	r1!, {r8, fp}
    30cc:	1d010000 	stcne	0, cr0, [r1, #-0]
    30d0:	00008015 	andeq	r8, r0, r5, lsl r0
    30d4:	09010100 	stmdbeq	r1, {r8}
    30d8:	000008d5 	ldrdeq	r0, [r0], -r5
    30dc:	80151e01 	andshi	r1, r5, r1, lsl #28
    30e0:	01000000 	mrseq	r0, (UNDEF: 0)
    30e4:	07be0901 	ldreq	r0, [lr, r1, lsl #18]!
    30e8:	1f010000 	svcne	0x00010000
    30ec:	00008015 	andeq	r8, r0, r5, lsl r0
    30f0:	09010100 	stmdbeq	r1, {r8}
    30f4:	000007d8 	ldrdeq	r0, [r0], -r8
    30f8:	80152001 	andshi	r2, r5, r1
    30fc:	01000000 	mrseq	r0, (UNDEF: 0)
    3100:	08470a01 	stmdaeq	r7, {r0, r9, fp}^
    3104:	71010000 	mrsvc	r0, (UNDEF: 1)
    3108:	00008717 	andeq	r8, r0, r7, lsl r7
    310c:	03050100 	movweq	r0, #20736	; 0x5100
    3110:	38008568 	stmdacc	r0, {r3, r5, r6, r8, sl, pc}
    3114:	0007a00a 	andeq	sl, r7, sl
    3118:	17720100 	ldrbne	r0, [r2, -r0, lsl #2]!
    311c:	00000087 	andeq	r0, r0, r7, lsl #1
    3120:	6c030501 	cfstr32vs	mvfx0, [r3], {1}
    3124:	0b380085 	bleq	e03340 <__RAM_SIZE+0xd03340>
    3128:	00040901 	andeq	r0, r4, r1, lsl #18
    312c:	010c0100 	mrseq	r0, (UNDEF: 28)
    3130:	0080010e 	addeq	r0, r0, lr, lsl #2
	...
    313c:	7d020000 	stcvc	0, cr0, [r2, #-0]
    3140:	010c0100 	mrseq	r0, (UNDEF: 28)
    3144:	000000e7 	andeq	r0, r0, r7, ror #1
    3148:	0e010801 	cdpeq	8, 0, cr0, cr1, cr1, {0}
    314c:	00008001 	andeq	r8, r0, r1
	...
    3158:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    315c:	0002cb01 	andeq	ip, r2, r1, lsl #22
    3160:	08670d00 	stmdaeq	r7!, {r8, sl, fp}^
    3164:	00000000 	andeq	r0, r0, r0
    3168:	00020000 	andeq	r0, r2, r0
    316c:	00000000 	andeq	r0, r0, r0
    3170:	01000000 	mrseq	r0, (UNDEF: 0)
    3174:	0e0c0109 	adfeqe	f0, f4, #1.0
    3178:	0000087a 	andeq	r0, r0, sl, ror r8
    317c:	00002714 	andeq	r2, r0, r4, lsl r7
    3180:	00002712 	andeq	r2, r0, r2, lsl r7
    3184:	010f0000 	mrseq	r0, CPSR
    3188:	00000247 	andeq	r0, r0, r7, asr #4
    318c:	0105dc01 	tsteq	r5, r1, lsl #24
    3190:	00000079 	andeq	r0, r0, r9, ror r0
    3194:	10001b54 	andne	r1, r0, r4, asr fp
    3198:	10001bd0 	ldrdne	r1, [r0], -r0
    319c:	00002727 	andeq	r2, r0, r7, lsr #14
    31a0:	0003a501 	andeq	sl, r3, r1, lsl #10
    31a4:	04f51000 	ldrbteq	r1, [r5], #0
    31a8:	dc010000 	stcle	0, cr0, [r1], {-0}
    31ac:	0003a528 	andeq	sl, r3, r8, lsr #10
    31b0:	00274f00 	eoreq	r4, r7, r0, lsl #30
    31b4:	00274700 	eoreq	r4, r7, r0, lsl #14
    31b8:	053d1000 	ldreq	r1, [sp, #-0]!
    31bc:	dc010000 	stcle	0, cr0, [r1], {-0}
    31c0:	00008c37 	andeq	r8, r0, r7, lsr ip
    31c4:	00278e00 	eoreq	r8, r7, r0, lsl #28
    31c8:	00278600 	eoreq	r8, r7, r0, lsl #12
    31cc:	00f51000 	rscseq	r1, r5, r0
    31d0:	dc010000 	stcle	0, cr0, [r1], {-0}
    31d4:	0003a54b 	andeq	sl, r3, fp, asr #10
    31d8:	0027cb00 	eoreq	ip, r7, r0, lsl #22
    31dc:	0027c500 	eoreq	ip, r7, r0, lsl #10
    31e0:	04171000 	ldreq	r1, [r7], #-0
    31e4:	dc010000 	stcle	0, cr0, [r1], {-0}
    31e8:	0003a566 	andeq	sl, r3, r6, ror #10
    31ec:	0027ff00 	eoreq	pc, r7, r0, lsl #30
    31f0:	0027f700 	eoreq	pc, r7, r0, lsl #14
    31f4:	03fd1100 	mvnseq	r1, #0, 2
    31f8:	dd010000 	stcle	0, cr0, [r1, #-0]
    31fc:	00007909 	andeq	r7, r0, r9, lsl #18
    3200:	00283c00 	eoreq	r3, r8, r0, lsl #24
    3204:	00283600 	eoreq	r3, r8, r0, lsl #12
    3208:	63701200 	cmnvs	r0, #0, 4
    320c:	12de0100 	sbcsne	r0, lr, #0, 2
    3210:	00000080 	andeq	r0, r0, r0, lsl #1
    3214:	00002871 	andeq	r2, r0, r1, ror r8
    3218:	00002867 	andeq	r2, r0, r7, ror #16
    321c:	00706f12 	rsbseq	r6, r0, r2, lsl pc
    3220:	801ade01 	andshi	sp, sl, r1, lsl #28
    3224:	ba000000 	blt	322c <__HEAP_SIZE+0x222c>
    3228:	b4000028 	strlt	r0, [r0], #-40	; 0xffffffd8
    322c:	12000028 	andne	r0, r0, #40	; 0x28
    3230:	01007073 	tsteq	r0, r3, ror r0
    3234:	03a523de 			; <UNDEFINED> instruction: 0x03a523de
    3238:	28eb0000 	stmiacs	fp!, {}^	; <UNPREDICTABLE>
    323c:	28e50000 	stmiacs	r5!, {}^	; <UNPREDICTABLE>
    3240:	96130000 	ldrls	r0, [r3], -r0
    3244:	8410001b 	ldrhi	r0, [r0], #-27	; 0xffffffe5
    3248:	9b000007 	blls	326c <__HEAP_SIZE+0x226c>
    324c:	14000003 	strne	r0, [r0], #-3
    3250:	79025001 	stmdbvc	r2, {r0, ip, lr}
    3254:	9a150000 	bls	54325c <__RAM_SIZE+0x44325c>
    3258:	2310001b 	tstcs	r0, #27
    325c:	00000007 	andeq	r0, r0, r7
    3260:	00800416 	addeq	r0, r0, r6, lsl r4
    3264:	01170000 	tsteq	r7, r0
    3268:	00000888 	andeq	r0, r0, r8, lsl #17
    326c:	0106a101 	tsteq	r6, r1, lsl #2
    3270:	10001bd0 	ldrdne	r1, [r0], -r0
    3274:	10001d54 	andne	r1, r0, r4, asr sp
    3278:	00002916 	andeq	r2, r0, r6, lsl r9
    327c:	0006a201 	andeq	sl, r6, r1, lsl #4
    3280:	07da1000 	ldrbeq	r1, [sl, r0]
    3284:	a1010000 	mrsge	r0, (UNDEF: 1)
    3288:	0003a527 	andeq	sl, r3, r7, lsr #10
    328c:	00293c00 	eoreq	r3, r9, r0, lsl #24
    3290:	00293600 	eoreq	r3, r9, r0, lsl #12
    3294:	07e71000 	strbeq	r1, [r7, r0]!
    3298:	a1010000 	mrsge	r0, (UNDEF: 1)
    329c:	0000803b 	andeq	r8, r0, fp, lsr r0
    32a0:	00296c00 	eoreq	r6, r9, r0, lsl #24
    32a4:	00296800 	eoreq	r6, r9, r0, lsl #16
    32a8:	03fd1100 	mvnseq	r1, #0, 2
    32ac:	a2010000 	andge	r0, r1, #0
    32b0:	00007909 	andeq	r7, r0, r9, lsl #18
    32b4:	00299000 	eoreq	r9, r9, r0
    32b8:	00298a00 	eoreq	r8, r9, r0, lsl #20
    32bc:	07651100 	strbeq	r1, [r5, -r0, lsl #2]!
    32c0:	a2010000 	andge	r0, r1, #0
    32c4:	00007914 	andeq	r7, r0, r4, lsl r9
    32c8:	0029c200 	eoreq	ip, r9, r0, lsl #4
    32cc:	0029ba00 	eoreq	fp, r9, r0, lsl #20
    32d0:	00fb1100 	rscseq	r1, fp, r0, lsl #2
    32d4:	a3010000 	movwge	r0, #4096	; 0x1000
    32d8:	0003a513 	andeq	sl, r3, r3, lsl r5
    32dc:	002a1f00 	eoreq	r1, sl, r0, lsl #30
    32e0:	0029f900 	eoreq	pc, r9, r0, lsl #18
    32e4:	082c1800 	stmdaeq	ip!, {fp, ip}
    32e8:	a4010000 	strge	r0, [r1], #-0
    32ec:	0001d61a 	andeq	sp, r1, sl, lsl r6
    32f0:	70030500 	andvc	r0, r3, r0, lsl #10
    32f4:	18380085 	ldmdane	r8!, {r0, r2, r7}
    32f8:	000004f5 	strdeq	r0, [r0], -r5
    32fc:	a219a501 	andsge	sl, r9, #4194304	; 0x400000
    3300:	05000006 	streq	r0, [r0, #-6]
    3304:	00846803 	addeq	r6, r4, r3, lsl #16
    3308:	1c201338 	stcne	3, cr1, [r0], #-224	; 0xffffff20
    330c:	08881000 	stmeq	r8, {ip}
    3310:	04620000 	strbteq	r0, [r2], #-0
    3314:	01140000 	tsteq	r4, r0
    3318:	00770250 	rsbseq	r0, r7, r0, asr r2
    331c:	1c261300 	stcne	3, cr1, [r6], #-0
    3320:	08881000 	stmeq	r8, {ip}
    3324:	04790000 	ldrbteq	r0, [r9], #-0
    3328:	01140000 	tsteq	r4, r0
    332c:	f8030550 			; <UNDEFINED> instruction: 0xf8030550
    3330:	00100057 	andseq	r0, r0, r7, asr r0
    3334:	001c2c13 	andseq	r2, ip, r3, lsl ip
    3338:	00088810 	andeq	r8, r8, r0, lsl r8
    333c:	00049000 	andeq	r9, r4, r0
    3340:	50011400 	andpl	r1, r1, r0, lsl #8
    3344:	58180305 	ldmdapl	r8, {r0, r2, r8, r9}
    3348:	13001000 	movwne	r1, #0
    334c:	10001c34 	andne	r1, r0, r4, lsr ip
    3350:	00000895 	muleq	r0, r5, r8
    3354:	000004a7 	andeq	r0, r0, r7, lsr #9
    3358:	05500114 	ldrbeq	r0, [r0, #-276]	; 0xfffffeec
    335c:	00582c03 	subseq	r2, r8, r3, lsl #24
    3360:	3c130010 	ldccc	0, cr0, [r3], {16}
    3364:	9510001c 	ldrls	r0, [r0, #-28]	; 0xffffffe4
    3368:	be000008 	cdplt	0, 0, cr0, cr0, cr8, {0}
    336c:	14000004 	strne	r0, [r0], #-4
    3370:	03055001 	movweq	r5, #20481	; 0x5001
    3374:	10005840 	andne	r5, r0, r0, asr #16
    3378:	1c441300 	mcrrne	3, 0, r1, r4, cr0
    337c:	08951000 	ldmeq	r5, {ip}
    3380:	04d50000 	ldrbeq	r0, [r5], #0
    3384:	01140000 	tsteq	r4, r0
    3388:	54030550 	strpl	r0, [r3], #-1360	; 0xfffffab0
    338c:	00100058 	andseq	r0, r0, r8, asr r0
    3390:	001c4c13 	andseq	r4, ip, r3, lsl ip
    3394:	00089510 	andeq	r9, r8, r0, lsl r5
    3398:	0004ec00 	andeq	lr, r4, r0, lsl #24
    339c:	50011400 	andpl	r1, r1, r0, lsl #8
    33a0:	58680305 	stmdapl	r8!, {r0, r2, r8, r9}^
    33a4:	13001000 	movwne	r1, #0
    33a8:	10001c54 	andne	r1, r0, r4, asr ip
    33ac:	00000895 	muleq	r0, r5, r8
    33b0:	00000503 	andeq	r0, r0, r3, lsl #10
    33b4:	05500114 	ldrbeq	r0, [r0, #-276]	; 0xfffffeec
    33b8:	00587c03 	subseq	r7, r8, r3, lsl #24
    33bc:	5c130010 	ldcpl	0, cr0, [r3], {16}
    33c0:	9510001c 	ldrls	r0, [r0, #-28]	; 0xffffffe4
    33c4:	1a000008 	bne	33ec <__HEAP_SIZE+0x23ec>
    33c8:	14000005 	strne	r0, [r0], #-5
    33cc:	03055001 	movweq	r5, #20481	; 0x5001
    33d0:	10005890 	mulne	r0, r0, r8
    33d4:	1c641300 	stclne	3, cr1, [r4], #-0
    33d8:	08951000 	ldmeq	r5, {ip}
    33dc:	05310000 	ldreq	r0, [r1, #-0]!
    33e0:	01140000 	tsteq	r4, r0
    33e4:	a4030550 	strge	r0, [r3], #-1360	; 0xfffffab0
    33e8:	00100058 	andseq	r0, r0, r8, asr r0
    33ec:	001c6c13 	andseq	r6, ip, r3, lsl ip
    33f0:	00089510 	andeq	r9, r8, r0, lsl r5
    33f4:	00054800 	andeq	r4, r5, r0, lsl #16
    33f8:	50011400 	andpl	r1, r1, r0, lsl #8
    33fc:	58b80305 	ldmpl	r8!, {r0, r2, r8, r9}
    3400:	13001000 	movwne	r1, #0
    3404:	10001c74 	andne	r1, r0, r4, ror ip
    3408:	00000895 	muleq	r0, r5, r8
    340c:	0000055f 	andeq	r0, r0, pc, asr r5
    3410:	05500114 	ldrbeq	r0, [r0, #-276]	; 0xfffffeec
    3414:	0058cc03 	subseq	ip, r8, r3, lsl #24
    3418:	7c130010 	ldcvc	0, cr0, [r3], {16}
    341c:	9510001c 	ldrls	r0, [r0, #-28]	; 0xffffffe4
    3420:	76000008 	strvc	r0, [r0], -r8
    3424:	14000005 	strne	r0, [r0], #-5
    3428:	03055001 	movweq	r5, #20481	; 0x5001
    342c:	100058e0 	andne	r5, r0, r0, ror #17
    3430:	1c841300 	stcne	3, cr1, [r4], {0}
    3434:	08951000 	ldmeq	r5, {ip}
    3438:	058d0000 	streq	r0, [sp]
    343c:	01140000 	tsteq	r4, r0
    3440:	f4030550 	vst3.16	{d0,d2,d4}, [r3 :64], r0
    3444:	00100058 	andseq	r0, r0, r8, asr r0
    3448:	001c8c13 	andseq	r8, ip, r3, lsl ip
    344c:	00089510 	andeq	r9, r8, r0, lsl r5
    3450:	0005a400 	andeq	sl, r5, r0, lsl #8
    3454:	50011400 	andpl	r1, r1, r0, lsl #8
    3458:	59080305 	stmdbpl	r8, {r0, r2, r8, r9}
    345c:	13001000 	movwne	r1, #0
    3460:	10001c94 	mulne	r0, r4, ip
    3464:	00000895 	muleq	r0, r5, r8
    3468:	000005bb 			; <UNDEFINED> instruction: 0x000005bb
    346c:	05500114 	ldrbeq	r0, [r0, #-276]	; 0xfffffeec
    3470:	00591c03 	subseq	r1, r9, r3, lsl #24
    3474:	9c130010 	ldcls	0, cr0, [r3], {16}
    3478:	9510001c 	ldrls	r0, [r0, #-28]	; 0xffffffe4
    347c:	d2000008 	andle	r0, r0, #8
    3480:	14000005 	strne	r0, [r0], #-5
    3484:	03055001 	movweq	r5, #20481	; 0x5001
    3488:	10005930 	andne	r5, r0, r0, lsr r9
    348c:	1ca41300 	stcne	3, cr1, [r4]
    3490:	08951000 	ldmeq	r5, {ip}
    3494:	05e90000 	strbeq	r0, [r9, #0]!
    3498:	01140000 	tsteq	r4, r0
    349c:	44030550 	strmi	r0, [r3], #-1360	; 0xfffffab0
    34a0:	00100059 	andseq	r0, r0, r9, asr r0
    34a4:	001cac13 	andseq	sl, ip, r3, lsl ip
    34a8:	00089510 	andeq	r9, r8, r0, lsl r5
    34ac:	00060000 	andeq	r0, r6, r0
    34b0:	50011400 	andpl	r1, r1, r0, lsl #8
    34b4:	59580305 	ldmdbpl	r8, {r0, r2, r8, r9}^
    34b8:	13001000 	movwne	r1, #0
    34bc:	10001cb2 			; <UNDEFINED> instruction: 0x10001cb2
    34c0:	00000888 	andeq	r0, r0, r8, lsl #17
    34c4:	00000614 	andeq	r0, r0, r4, lsl r6
    34c8:	02500114 	subseq	r0, r0, #20, 2
    34cc:	13000077 	movwne	r0, #119	; 0x77
    34d0:	10001cb8 			; <UNDEFINED> instruction: 0x10001cb8
    34d4:	000006b2 			; <UNDEFINED> instruction: 0x000006b2
    34d8:	00000628 	andeq	r0, r0, r8, lsr #12
    34dc:	02500114 	subseq	r0, r0, #20, 2
    34e0:	13000076 	movwne	r0, #118	; 0x76
    34e4:	10001cc6 	andne	r1, r0, r6, asr #25
    34e8:	000002cb 	andeq	r0, r0, fp, asr #5
    34ec:	0000064c 	andeq	r0, r0, ip, asr #12
    34f0:	05500114 	ldrbeq	r0, [r0, #-276]	; 0xfffffeec
    34f4:	00846803 	addeq	r6, r4, r3, lsl #16
    34f8:	51011438 	tstpl	r1, r8, lsr r4
    34fc:	14400802 	strbne	r0, [r0], #-2050	; 0xfffff7fe
    3500:	75035201 	strvc	r5, [r3, #-513]	; 0xfffffdff
    3504:	130000c0 	movwne	r0, #192	; 0xc0
    3508:	10001cce 	andne	r1, r0, lr, asr #25
    350c:	00000895 	muleq	r0, r5, r8
    3510:	00000663 	andeq	r0, r0, r3, ror #12
    3514:	05500114 	ldrbeq	r0, [r0, #-276]	; 0xfffffeec
    3518:	00596c03 	subseq	r6, r9, r3, lsl #24
    351c:	d6130010 			; <UNDEFINED> instruction: 0xd6130010
    3520:	9510001c 	ldrls	r0, [r0, #-28]	; 0xffffffe4
    3524:	7a000008 	bvc	354c <__HEAP_SIZE+0x254c>
    3528:	14000006 	strne	r0, [r0], #-6
    352c:	03055001 	movweq	r5, #20481	; 0x5001
    3530:	1000597c 	andne	r5, r0, ip, ror r9
    3534:	1ce61300 	stclne	3, cr1, [r6]
    3538:	08951000 	ldmeq	r5, {ip}
    353c:	06910000 	ldreq	r0, [r1], r0
    3540:	01140000 	tsteq	r4, r0
    3544:	7c030550 	cfstr32vc	mvfx0, [r3], {80}	; 0x50
    3548:	00100059 	andseq	r0, r0, r9, asr r0
    354c:	001cf219 	andseq	pc, ip, r9, lsl r2	; <UNPREDICTABLE>
    3550:	00088810 	andeq	r8, r8, r0, lsl r8
    3554:	50011400 	andpl	r1, r1, r0, lsl #8
    3558:	00007702 	andeq	r7, r0, r2, lsl #14
    355c:	00801a00 	addeq	r1, r0, r0, lsl #20
    3560:	06b20000 	ldrteq	r0, [r2], r0
    3564:	801b0000 	andshi	r0, fp, r0
    3568:	3f000000 	svccc	0x00000000
    356c:	08a11c00 	stmiaeq	r1!, {sl, fp, ip}
    3570:	99010000 	stmdbls	r1, {}	; <UNPREDICTABLE>
    3574:	1aec010d 	bne	ffb039b0 <__StackTop+0xc7a039b0>
    3578:	1b041000 	blne	107580 <__RAM_SIZE+0x7580>
    357c:	2b211000 	blcs	847584 <__RAM_SIZE+0x747584>
    3580:	23010000 	movwcs	r0, #4096	; 0x1000
    3584:	10000007 	andne	r0, r0, r7
    3588:	000008a6 	andeq	r0, r0, r6, lsr #17
    358c:	802a9901 	eorhi	r9, sl, r1, lsl #18
    3590:	49000000 	stmdbmi	r0, {}	; <UNPREDICTABLE>
    3594:	4100002b 	tstmi	r0, fp, lsr #32
    3598:	1d00002b 	stcne	0, cr0, [r0, #-172]	; 0xffffff54
    359c:	00089b01 	andeq	r9, r8, r1, lsl #22
    35a0:	119c0100 	orrsne	r0, ip, r0, lsl #2
    35a4:	06f50101 	ldrbteq	r0, [r5], r1, lsl #2
    35a8:	801e0000 	andshi	r0, lr, r0
    35ac:	00000000 	andeq	r0, r0, r0
    35b0:	001af813 	andseq	pc, sl, r3, lsl r8	; <UNPREDICTABLE>
    35b4:	00089510 	andeq	r9, r8, r0, lsl r5
    35b8:	00071200 	andeq	r1, r7, r0, lsl #4
    35bc:	50011400 	andpl	r1, r1, r0, lsl #8
    35c0:	57780305 	ldrbpl	r0, [r8, -r5, lsl #6]!
    35c4:	01141000 	tsteq	r4, r0
    35c8:	00740251 	rsbseq	r0, r4, r1, asr r2
    35cc:	1afe1900 	bne	fff899d4 <__StackTop+0xc7e899d4>
    35d0:	08a31000 	stmiaeq	r3!, {ip}
    35d4:	01140000 	tsteq	r4, r0
    35d8:	00740250 	rsbseq	r0, r4, r0, asr r2
    35dc:	7e1f0000 	cdpvc	0, 1, cr0, cr15, cr0, {0}
    35e0:	01000007 	tsteq	r0, r7
    35e4:	7d010d8a 	stcvc	13, cr0, [r1, #-552]	; 0xfffffdd8
    35e8:	b4000007 	strlt	r0, [r0], #-7
    35ec:	ea10001a 	b	40365c <__RAM_SIZE+0x30365c>
    35f0:	0210001a 	andseq	r0, r0, #26
    35f4:	7d01007d 	stcvc	0, cr0, [r1, #-500]	; 0xfffffe0c
    35f8:	20000007 	andcs	r0, r0, r7
    35fc:	00736e69 	rsbseq	r6, r3, r9, ror #28
    3600:	802e8a01 	eorhi	r8, lr, r1, lsl #20
    3604:	84000000 	strhi	r0, [r0], #-0
    3608:	8000002b 	andhi	r0, r0, fp, lsr #32
    360c:	1100002b 	tstne	r0, fp, lsr #32
    3610:	00000803 	andeq	r0, r0, r3, lsl #16
    3614:	a60e8e01 	strge	r8, [lr], -r1, lsl #28
    3618:	a7000000 	strge	r0, [r0, -r0]
    361c:	a500002b 	strge	r0, [r0, #-43]	; 0xffffffd5
    3620:	1100002b 	tstne	r0, fp, lsr #32
    3624:	0000080b 	andeq	r0, r0, fp, lsl #16
    3628:	a60e8f01 	strge	r8, [lr], -r1, lsl #30
    362c:	ce000000 	cdpgt	0, 0, cr0, cr0, cr0, {0}
    3630:	ba00002b 	blt	36e4 <__HEAP_SIZE+0x26e4>
    3634:	0000002b 	andeq	r0, r0, fp, lsr #32
    3638:	5d020102 	stfpls	f0, [r2, #-8]
    363c:	21000006 	tstcs	r0, r6
    3640:	000007c6 	andeq	r0, r0, r6, asr #15
    3644:	01157f01 	tsteq	r5, r1, lsl #30
    3648:	00000080 	andeq	r0, r0, r0, lsl #1
    364c:	10001a88 	andne	r1, r0, r8, lsl #21
    3650:	10001ab4 			; <UNDEFINED> instruction: 0x10001ab4
    3654:	00002c71 	andeq	r2, r0, r1, ror ip
    3658:	0007f501 	andeq	pc, r7, r1, lsl #10
    365c:	63702000 	cmnvs	r0, #0
    3660:	347f0100 	ldrbtcc	r0, [pc], #-256	; 3668 <__HEAP_SIZE+0x2668>
    3664:	00000080 	andeq	r0, r0, r0, lsl #1
    3668:	00002ca1 	andeq	r2, r0, r1, lsr #25
    366c:	00002c9d 	muleq	r0, sp, ip
    3670:	00009e18 	andeq	r9, r0, r8, lsl lr
    3674:	0e800100 	rmfeqs	f0, f0, f0
    3678:	000007f5 	strdeq	r0, [r0], -r5
    367c:	117c9102 	cmnne	ip, r2, lsl #2
    3680:	000007d1 	ldrdeq	r0, [r0], -r1
    3684:	80128101 	andshi	r8, r2, r1, lsl #2
    3688:	c8000000 	stmdagt	r0, {}	; <UNPREDICTABLE>
    368c:	c200002c 	andgt	r0, r0, #44	; 0x2c
    3690:	2200002c 	andcs	r0, r0, #44	; 0x2c
    3694:	10001a8e 	andne	r1, r0, lr, lsl #21
    3698:	10001aa4 	andne	r1, r0, r4, lsr #21
    369c:	01006912 	tsteq	r0, r2, lsl r9
    36a0:	00790e82 	rsbseq	r0, r9, r2, lsl #29
    36a4:	2cfd0000 	ldclcs	0, cr0, [sp]
    36a8:	2cf90000 	ldclcs	0, cr0, [r9]
    36ac:	00000000 	andeq	r0, r0, r0
    36b0:	0000a61a 	andeq	sl, r0, sl, lsl r6
    36b4:	00080500 	andeq	r0, r8, r0, lsl #10
    36b8:	00801b00 	addeq	r1, r0, r0, lsl #22
    36bc:	00010000 	andeq	r0, r1, r0
    36c0:	029f0117 	addseq	r0, pc, #-1073741819	; 0xc0000005
    36c4:	74010000 	strvc	r0, [r1], #-0
    36c8:	1b040106 	blne	103ae8 <__RAM_SIZE+0x3ae8>
    36cc:	1b541000 	blne	15076d4 <__RAM_SIZE+0x14076d4>
    36d0:	2d1c1000 	ldccs	0, cr1, [ip, #-0]
    36d4:	67010000 	strvs	r0, [r1, -r0]
    36d8:	13000008 	movwne	r0, #8
    36dc:	10001b1a 	andne	r1, r0, sl, lsl fp
    36e0:	00000895 	muleq	r0, r5, r8
    36e4:	00000837 	andeq	r0, r0, r7, lsr r8
    36e8:	05500114 	ldrbeq	r0, [r0, #-276]	; 0xfffffeec
    36ec:	00579003 	subseq	r9, r7, r3
    36f0:	26130010 			; <UNDEFINED> instruction: 0x26130010
    36f4:	9510001b 	ldrls	r0, [r0, #-27]	; 0xffffffe5
    36f8:	4e000008 	cdpmi	0, 0, cr0, cr0, cr8, {0}
    36fc:	14000008 	strne	r0, [r0], #-8
    3700:	03055001 	movweq	r5, #20481	; 0x5001
    3704:	100057b4 			; <UNDEFINED> instruction: 0x100057b4
    3708:	1b2e1900 	blne	b89b10 <__RAM_SIZE+0xa89b10>
    370c:	08951000 	ldmeq	r5, {ip}
    3710:	01140000 	tsteq	r4, r0
    3714:	d8030550 	stmdale	r3, {r4, r6, r8, sl}
    3718:	14100057 	ldrne	r0, [r0], #-87	; 0xffffffa9
    371c:	31015101 	tstcc	r1, r1, lsl #2
    3720:	b8230000 	stmdalt	r3!, {}	; <UNPREDICTABLE>
    3724:	02000008 	andeq	r0, r0, #8
    3728:	011f0463 	tsteq	pc, r3, ror #8
    372c:	000000b2 	strheq	r0, [r0], -r2
    3730:	00088803 	andeq	r8, r8, r3, lsl #16
    3734:	07e02400 	strbeq	r2, [r0, r0, lsl #8]!
    3738:	65020000 	strvs	r0, [r2, #-0]
    373c:	00b20c04 	adcseq	r0, r2, r4, lsl #24
    3740:	25000000 	strcs	r0, [r0, #-0]
    3744:	001b0101 	andseq	r0, fp, r1, lsl #2
    3748:	00110000 	andseq	r0, r1, r0
    374c:	00080000 	andeq	r0, r8, r0
    3750:	d1010126 	tstle	r1, r6, lsr #2
    3754:	d1000005 	tstle	r0, r5
    3758:	07000005 	streq	r0, [r0, -r5]
    375c:	012605c8 	smlawteq	r6, r8, r5, r0
    3760:	00089b01 	andeq	r9, r8, r1, lsl #22
    3764:	00089b00 	andeq	r9, r8, r0, lsl #22
    3768:	119c0100 	orrsne	r0, ip, r0, lsl #2
    376c:	00028d00 	andeq	r8, r2, r0, lsl #26
    3770:	be000200 	cdplt	2, 0, cr0, cr0, cr0, {0}
    3774:	0400000a 	streq	r0, [r0], #-10
    3778:	00018901 	andeq	r8, r1, r1, lsl #18
    377c:	08dc0c00 	ldmeq	ip, {sl, fp}^
    3780:	03850000 	orreq	r0, r5, #0
    3784:	02780000 	rsbseq	r0, r8, #0
	...
    3790:	21a10000 			; <UNDEFINED> instruction: 0x21a10000
    3794:	01020000 	mrseq	r0, (UNDEF: 2)
    3798:	00027306 	andeq	r7, r2, r6, lsl #6
    379c:	08010200 	stmdaeq	r1, {r9}
    37a0:	00000271 	andeq	r0, r0, r1, ror r2
    37a4:	32050202 	andcc	r0, r5, #536870912	; 0x20000000
    37a8:	02000000 	andeq	r0, r0, #0
    37ac:	031a0702 	tsteq	sl, #524288	; 0x80000
    37b0:	04020000 	streq	r0, [r2], #-0
    37b4:	00012c05 	andeq	r2, r1, r5, lsl #24
    37b8:	07040200 	streq	r0, [r4, -r0, lsl #4]
    37bc:	000002c2 	andeq	r0, r0, r2, asr #5
    37c0:	27050802 	strcs	r0, [r5, -r2, lsl #16]
    37c4:	02000001 	andeq	r0, r0, #1
    37c8:	02bd0708 	adcseq	r0, sp, #8, 14	; 0x200000
    37cc:	04030000 	streq	r0, [r3], #-0
    37d0:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    37d4:	07040200 	streq	r0, [r4, -r0, lsl #4]
    37d8:	000002c7 	andeq	r0, r0, r7, asr #5
    37dc:	63040802 	movwvs	r0, #18434	; 0x4802
    37e0:	02000000 	andeq	r0, r0, #0
    37e4:	027a0801 	rsbseq	r0, sl, #65536	; 0x10000
    37e8:	01040000 	mrseq	r0, (UNDEF: 4)
    37ec:	0000089b 	muleq	r0, fp, r8
    37f0:	01060f01 	tsteq	r6, r1, lsl #30
    37f4:	10001d54 	andne	r1, r0, r4, asr sp
    37f8:	10001e50 	andne	r1, r0, r0, asr lr
    37fc:	00002d3c 	andeq	r2, r0, ip, lsr sp
    3800:	00027501 	andeq	r7, r2, r1, lsl #10
    3804:	08a60500 	stmiaeq	r6!, {r8, sl}
    3808:	0f010000 	svceq	0x00010000
    380c:	00006829 	andeq	r6, r0, r9, lsr #16
    3810:	002d6000 	eoreq	r6, sp, r0
    3814:	002d5c00 	eoreq	r5, sp, r0, lsl #24
    3818:	1d5e0600 	ldclne	6, cr0, [lr, #-0]
    381c:	02751000 	rsbseq	r1, r5, #0
    3820:	00c30000 	sbceq	r0, r3, r0
    3824:	01070000 	mrseq	r0, (UNDEF: 7)
    3828:	84030550 	strhi	r0, [r3], #-1360	; 0xfffffab0
    382c:	00100059 	andseq	r0, r0, r9, asr r0
    3830:	001d6406 	andseq	r6, sp, r6, lsl #8
    3834:	00028210 	andeq	r8, r2, r0, lsl r2
    3838:	0000da00 	andeq	sp, r0, r0, lsl #20
    383c:	50010700 	andpl	r0, r1, r0, lsl #14
    3840:	59880305 	stmibpl	r8, {r0, r2, r8, r9}
    3844:	06001000 	streq	r1, [r0], -r0
    3848:	10001d70 	andne	r1, r0, r0, ror sp
    384c:	00000275 	andeq	r0, r0, r5, ror r2
    3850:	000000f1 	strdeq	r0, [r0], -r1
    3854:	05500107 	ldrbeq	r0, [r0, #-263]	; 0xfffffef9
    3858:	0059a803 	subseq	sl, r9, r3, lsl #16
    385c:	76060010 			; <UNDEFINED> instruction: 0x76060010
    3860:	8210001d 	andshi	r0, r0, #29
    3864:	08000002 	stmdaeq	r0, {r1}
    3868:	07000001 	streq	r0, [r0, -r1]
    386c:	03055001 	movweq	r5, #20481	; 0x5001
    3870:	100059e0 	andne	r5, r0, r0, ror #19
    3874:	1d820600 	stcne	6, cr0, [r2]
    3878:	02751000 	rsbseq	r1, r5, #0
    387c:	011f0000 	tsteq	pc, r0
    3880:	01070000 	mrseq	r0, (UNDEF: 7)
    3884:	00030550 	andeq	r0, r3, r0, asr r5
    3888:	0010005a 	andseq	r0, r0, sl, asr r0
    388c:	001d8806 	andseq	r8, sp, r6, lsl #16
    3890:	00028210 	andeq	r8, r2, r0, lsl r2
    3894:	00013600 	andeq	r3, r1, r0, lsl #12
    3898:	50010700 	andpl	r0, r1, r0, lsl #14
    389c:	5a380305 	bpl	e044b8 <__RAM_SIZE+0xd044b8>
    38a0:	06001000 	streq	r1, [r0], -r0
    38a4:	10001d94 	mulne	r0, r4, sp
    38a8:	00000275 	andeq	r0, r0, r5, ror r2
    38ac:	0000014d 	andeq	r0, r0, sp, asr #2
    38b0:	05500107 	ldrbeq	r0, [r0, #-263]	; 0xfffffef9
    38b4:	005a5803 	subseq	r5, sl, r3, lsl #16
    38b8:	9a060010 	bls	183900 <__RAM_SIZE+0x83900>
    38bc:	8210001d 	andshi	r0, r0, #29
    38c0:	64000002 	strvs	r0, [r0], #-2
    38c4:	07000001 	streq	r0, [r0, -r1]
    38c8:	03055001 	movweq	r5, #20481	; 0x5001
    38cc:	10005a90 	mulne	r0, r0, sl
    38d0:	1da60600 	stcne	6, cr0, [r6]
    38d4:	02751000 	rsbseq	r1, r5, #0
    38d8:	017b0000 	cmneq	fp, r0
    38dc:	01070000 	mrseq	r0, (UNDEF: 7)
    38e0:	b0030550 	andlt	r0, r3, r0, asr r5
    38e4:	0010005a 	andseq	r0, r0, sl, asr r0
    38e8:	001dac06 	andseq	sl, sp, r6, lsl #24
    38ec:	00028210 	andeq	r8, r2, r0, lsl r2
    38f0:	00019200 	andeq	r9, r1, r0, lsl #4
    38f4:	50010700 	andpl	r0, r1, r0, lsl #14
    38f8:	5ae80305 	bpl	ffa04514 <__StackTop+0xc7904514>
    38fc:	06001000 	streq	r1, [r0], -r0
    3900:	10001db8 			; <UNDEFINED> instruction: 0x10001db8
    3904:	00000275 	andeq	r0, r0, r5, ror r2
    3908:	000001a9 	andeq	r0, r0, r9, lsr #3
    390c:	05500107 	ldrbeq	r0, [r0, #-263]	; 0xfffffef9
    3910:	005b0803 	subseq	r0, fp, r3, lsl #16
    3914:	be060010 	mcrlt	0, 0, r0, cr6, cr0, {0}
    3918:	8210001d 	andshi	r0, r0, #29
    391c:	c0000002 	andgt	r0, r0, r2
    3920:	07000001 	streq	r0, [r0, -r1]
    3924:	03055001 	movweq	r5, #20481	; 0x5001
    3928:	10005b40 	andne	r5, r0, r0, asr #22
    392c:	1dca0600 	stclne	6, cr0, [sl]
    3930:	02751000 	rsbseq	r1, r5, #0
    3934:	01d70000 	bicseq	r0, r7, r0
    3938:	01070000 	mrseq	r0, (UNDEF: 7)
    393c:	60030550 	andvs	r0, r3, r0, asr r5
    3940:	0010005b 	andseq	r0, r0, fp, asr r0
    3944:	001dd006 	andseq	sp, sp, r6
    3948:	00027510 	andeq	r7, r2, r0, lsl r5
    394c:	0001ee00 	andeq	lr, r1, r0, lsl #28
    3950:	50010700 	andpl	r0, r1, r0, lsl #14
    3954:	59840305 	stmibpl	r4, {r0, r2, r8, r9}
    3958:	06001000 	streq	r1, [r0], -r0
    395c:	10001dd8 	ldrdne	r1, [r0], -r8
    3960:	00000275 	andeq	r0, r0, r5, ror r2
    3964:	00000205 	andeq	r0, r0, r5, lsl #4
    3968:	05500107 	ldrbeq	r0, [r0, #-263]	; 0xfffffef9
    396c:	0059c403 	subseq	ip, r9, r3, lsl #8
    3970:	e0060010 	and	r0, r6, r0, lsl r0
    3974:	7510001d 	ldrvc	r0, [r0, #-29]	; 0xffffffe3
    3978:	1c000002 	stcne	0, cr0, [r0], {2}
    397c:	07000002 	streq	r0, [r0, -r2]
    3980:	03055001 	movweq	r5, #20481	; 0x5001
    3984:	10005a1c 	andne	r5, r0, ip, lsl sl
    3988:	1de80600 	stclne	6, cr0, [r8]
    398c:	02751000 	rsbseq	r1, r5, #0
    3990:	02330000 	eorseq	r0, r3, #0
    3994:	01070000 	mrseq	r0, (UNDEF: 7)
    3998:	74030550 	strvc	r0, [r3], #-1360	; 0xfffffab0
    399c:	0010005a 	andseq	r0, r0, sl, asr r0
    39a0:	001df006 	andseq	pc, sp, r6
    39a4:	00027510 	andeq	r7, r2, r0, lsl r5
    39a8:	00024a00 	andeq	r4, r2, r0, lsl #20
    39ac:	50010700 	andpl	r0, r1, r0, lsl #14
    39b0:	5acc0305 	bpl	ff3045cc <__StackTop+0xc72045cc>
    39b4:	06001000 	streq	r1, [r0], -r0
    39b8:	10001df8 	strdne	r1, [r0], -r8
    39bc:	00000275 	andeq	r0, r0, r5, ror r2
    39c0:	00000261 	andeq	r0, r0, r1, ror #4
    39c4:	05500107 	ldrbeq	r0, [r0, #-263]	; 0xfffffef9
    39c8:	005b2403 	subseq	r2, fp, r3, lsl #8
    39cc:	00080010 	andeq	r0, r8, r0, lsl r0
    39d0:	7510001e 	ldrvc	r0, [r0, #-30]	; 0xffffffe2
    39d4:	07000002 	streq	r0, [r0, -r2]
    39d8:	03055001 	movweq	r5, #20481	; 0x5001
    39dc:	10005b7c 	andne	r5, r0, ip, ror fp
    39e0:	01090000 	mrseq	r0, (UNDEF: 9)
    39e4:	00001b01 	andeq	r1, r0, r1, lsl #22
    39e8:	00001100 	andeq	r1, r0, r0, lsl #2
    39ec:	0a000200 	beq	41f4 <__HEAP_SIZE+0x31f4>
    39f0:	05d10101 	ldrbeq	r0, [r1, #257]	; 0x101
    39f4:	05d10000 	ldrbeq	r0, [r1]
    39f8:	c8030000 	stmdagt	r3, {}	; <UNPREDICTABLE>
    39fc:	02cb0005 	sbceq	r0, fp, #5
    3a00:	00020000 	andeq	r0, r2, r0
    3a04:	00000b64 	andeq	r0, r0, r4, ror #22
    3a08:	01890104 	orreq	r0, r9, r4, lsl #2
    3a0c:	ee0c0000 	cdp	0, 0, cr0, cr12, cr0, {0}
    3a10:	85000009 	strhi	r0, [r0, #-9]
    3a14:	88000003 	stmdahi	r0, {r0, r1}
    3a18:	00000002 	andeq	r0, r0, r2
    3a1c:	00000000 	andeq	r0, r0, r0
    3a20:	d8000000 	stmdale	r0, {}	; <UNPREDICTABLE>
    3a24:	02000022 	andeq	r0, r0, #34	; 0x22
    3a28:	02c70704 	sbceq	r0, r7, #4, 14	; 0x100000
    3a2c:	04030000 	streq	r0, [r3], #-0
    3a30:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    3a34:	05080200 	streq	r0, [r8, #-512]	; 0xfffffe00
    3a38:	00000127 	andeq	r0, r0, r7, lsr #2
    3a3c:	63040802 	movwvs	r0, #18434	; 0x4802
    3a40:	02000000 	andeq	r0, r0, #0
    3a44:	02730601 	rsbseq	r0, r3, #1048576	; 0x100000
    3a48:	01020000 	mrseq	r0, (UNDEF: 2)
    3a4c:	00027108 	andeq	r7, r2, r8, lsl #2
    3a50:	05020200 	streq	r0, [r2, #-512]	; 0xfffffe00
    3a54:	00000032 	andeq	r0, r0, r2, lsr r0
    3a58:	1a070202 	bne	1c4268 <__RAM_SIZE+0xc4268>
    3a5c:	02000003 	andeq	r0, r0, #3
    3a60:	012c0504 			; <UNDEFINED> instruction: 0x012c0504
    3a64:	6f040000 	svcvs	0x00040000
    3a68:	02000000 	andeq	r0, r0, #0
    3a6c:	0074194f 	rsbseq	r1, r4, pc, asr #18
    3a70:	04020000 	streq	r0, [r2], #-0
    3a74:	0002c207 	andeq	ip, r2, r7, lsl #4
    3a78:	07080200 	streq	r0, [r8, -r0, lsl #4]
    3a7c:	000002bd 			; <UNDEFINED> instruction: 0x000002bd
    3a80:	01020405 	tsteq	r2, r5, lsl #8
    3a84:	00027a08 	andeq	r7, r2, r8, lsl #20
    3a88:	00710400 	rsbseq	r0, r1, r0, lsl #8
    3a8c:	30030000 	andcc	r0, r3, r0
    3a90:	00006814 	andeq	r6, r0, r4, lsl r8
    3a94:	09c40400 	stmibeq	r4, {sl}^
    3a98:	4b040000 	blmi	103aa0 <__RAM_SIZE+0x3aa0>
    3a9c:	0000741a 	andeq	r7, r0, sl, lsl r4
    3aa0:	09200400 	stmdbeq	r0!, {sl}
    3aa4:	51040000 	mrspl	r0, (UNDEF: 4)
    3aa8:	00008b1a 	andeq	r8, r0, sl, lsl fp
    3aac:	00a30600 	adceq	r0, r3, r0, lsl #12
    3ab0:	47070000 	strmi	r0, [r7, -r0]
    3ab4:	14000009 	strne	r0, [r0], #-9
    3ab8:	0d089005 	stceq	0, cr9, [r8, #-20]	; 0xffffffec
    3abc:	08000001 	stmdaeq	r0, {r0}
    3ac0:	0000092b 	andeq	r0, r0, fp, lsr #18
    3ac4:	a3249305 			; <UNDEFINED> instruction: 0xa3249305
    3ac8:	02000000 	andeq	r0, r0, #0
    3acc:	94080023 	strls	r0, [r8], #-35	; 0xffffffdd
    3ad0:	05000009 	streq	r0, [r0, #-9]
    3ad4:	010d2d94 			; <UNDEFINED> instruction: 0x010d2d94
    3ad8:	23020000 	movwcs	r0, #8192	; 0x2000
    3adc:	09e30804 	stmibeq	r3!, {r2, fp}^
    3ae0:	95050000 	strls	r0, [r5, #-0]
    3ae4:	00010d2d 	andeq	r0, r1, sp, lsr #26
    3ae8:	08230200 	stmdaeq	r3!, {r9}
    3aec:	00093f08 	andeq	r3, r9, r8, lsl #30
    3af0:	0c960500 	cfldr32eq	mvfx0, [r6], {0}
    3af4:	00000082 	andeq	r0, r0, r2, lsl #1
    3af8:	080c2302 	stmdaeq	ip, {r1, r8, r9, sp}
    3afc:	00000914 	andeq	r0, r0, r4, lsl r9
    3b00:	4e289705 	cdpmi	7, 2, cr9, cr8, cr5, {0}
    3b04:	02000001 	andeq	r0, r0, #1
    3b08:	09001023 	stmdbeq	r0, {r0, r1, r5, ip}
    3b0c:	0000b404 	andeq	fp, r0, r4, lsl #8
    3b10:	0a160700 	beq	585718 <__RAM_SIZE+0x485718>
    3b14:	051c0000 	ldreq	r0, [ip, #-0]
    3b18:	014e10ac 	smlaltbeq	r1, lr, ip, r0
    3b1c:	75080000 	strvc	r0, [r8, #-0]
    3b20:	05000009 	streq	r0, [r0, #-9]
    3b24:	009725af 	addseq	r2, r7, pc, lsr #11
    3b28:	23020000 	movwcs	r0, #8192	; 0x2000
    3b2c:	09db0800 	ldmibeq	fp, {fp}^
    3b30:	b0050000 	andlt	r0, r5, r0
    3b34:	00016c26 	andeq	r6, r1, r6, lsr #24
    3b38:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    3b3c:	00093608 	andeq	r3, r9, r8, lsl #12
    3b40:	14b10500 	ldrtne	r0, [r1], #1280	; 0x500
    3b44:	00000160 	andeq	r0, r0, r0, ror #2
    3b48:	00082302 	andeq	r2, r8, r2, lsl #6
    3b4c:	01130409 	tsteq	r3, r9, lsl #8
    3b50:	3d040000 	stccc	0, cr0, [r4, #-0]
    3b54:	05000019 	streq	r0, [r0, #-25]	; 0xffffffe7
    3b58:	00b41b9a 	umlalseq	r1, r4, sl, fp
    3b5c:	70040000 	andvc	r0, r4, r0
    3b60:	0500000b 	streq	r0, [r0, #-11]
    3b64:	00b424a6 	adcseq	r2, r4, r6, lsr #9
    3b68:	04090000 	streq	r0, [r9], #-0
    3b6c:	00000154 	andeq	r0, r0, r4, asr r1
    3b70:	00016c06 	andeq	r6, r1, r6, lsl #24
    3b74:	13e30400 	mvnne	r0, #0, 8
    3b78:	b3050000 	movwlt	r0, #20480	; 0x5000
    3b7c:	00011303 	andeq	r1, r1, r3, lsl #6
    3b80:	1c010a00 			; <UNDEFINED> instruction: 0x1c010a00
    3b84:	0100000a 	tsteq	r0, sl
    3b88:	97010dd7 			; <UNDEFINED> instruction: 0x97010dd7
    3b8c:	a2000000 	andge	r0, r0, #0
    3b90:	c610001e 			; <UNDEFINED> instruction: 0xc610001e
    3b94:	0210001e 	andseq	r0, r0, #30
    3b98:	ca01007d 	bgt	43d94 <__HEAP_SIZE+0x42d94>
    3b9c:	0b000001 	bleq	3ba8 <__HEAP_SIZE+0x2ba8>
    3ba0:	00000952 	andeq	r0, r0, r2, asr r9
    3ba4:	722ed701 	eorvc	sp, lr, #262144	; 0x40000
    3ba8:	84000001 	strhi	r0, [r0], #-1
    3bac:	7e00002d 	cdpvc	0, 0, cr0, cr0, cr13, {1}
    3bb0:	0c00002d 	stceq	0, cr0, [r0], {45}	; 0x2d
    3bb4:	00000a0f 	andeq	r0, r0, pc, lsl #20
    3bb8:	d014db01 	andsle	sp, r4, r1, lsl #22
    3bbc:	b2000001 	andlt	r0, r0, #1
    3bc0:	b000002d 	andlt	r0, r0, sp, lsr #32
    3bc4:	0000002d 	andeq	r0, r0, sp, lsr #32
    3bc8:	01770409 	cmneq	r7, r9, lsl #8
    3bcc:	ca060000 	bgt	183bd4 <__RAM_SIZE+0x83bd4>
    3bd0:	0d000001 	stceq	0, cr0, [r0, #-4]
    3bd4:	000a3701 	andeq	r3, sl, r1, lsl #14
    3bd8:	068b0100 	streq	r0, [fp], r0, lsl #2
    3bdc:	001e7001 	andseq	r7, lr, r1
    3be0:	001ea210 	andseq	sl, lr, r0, lsl r2
    3be4:	002dc510 	eoreq	ip, sp, r0, lsl r5
    3be8:	02350100 	eorseq	r0, r5, #0, 2
    3bec:	0f0e0000 	svceq	0x000e0000
    3bf0:	0100000a 	tsteq	r0, sl
    3bf4:	01d0228b 	bicseq	r2, r0, fp, lsl #5
    3bf8:	50010000 	andpl	r0, r1, r0
    3bfc:	000a290e 	andeq	r2, sl, lr, lsl #18
    3c00:	268c0100 	strcs	r0, [ip], r0, lsl #2
    3c04:	00000172 	andeq	r0, r0, r2, ror r1
    3c08:	d00c5101 	andle	r5, ip, r1, lsl #2
    3c0c:	01000009 	tsteq	r0, r9
    3c10:	016c128e 	cmneq	ip, lr, lsl #5
    3c14:	2e030000 	cdpcs	0, 0, cr0, cr3, cr0, {0}
    3c18:	2dfd0000 	ldclcs	0, cr0, [sp]
    3c1c:	ab0c0000 	blge	303c24 <__RAM_SIZE+0x203c24>
    3c20:	01000009 	tsteq	r0, r9
    3c24:	00af168f 	adceq	r1, pc, pc, lsl #13
    3c28:	2e300000 	cdpcs	0, 3, cr0, cr0, cr0, {0}
    3c2c:	2e2c0000 	cdpcs	0, 2, cr0, cr12, cr0, {0}
    3c30:	0f000000 	svceq	0x00000000
    3c34:	00098501 	andeq	r8, r9, r1, lsl #10
    3c38:	06690100 	strbteq	r0, [r9], -r0, lsl #2
    3c3c:	00000001 	andeq	r0, r0, r1
    3c40:	00000000 	andeq	r0, r0, r0
    3c44:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    3c48:	00028001 	andeq	r8, r2, r1
    3c4c:	0a0f0e00 	beq	3c7454 <__RAM_SIZE+0x2c7454>
    3c50:	69010000 	stmdbvs	r1, {}	; <UNPREDICTABLE>
    3c54:	0001d025 	andeq	sp, r1, r5, lsr #32
    3c58:	0e500100 	rdfeqs	f0, f0, f0
    3c5c:	00000a29 	andeq	r0, r0, r9, lsr #20
    3c60:	72296a01 	eorvc	r6, r9, #4096	; 0x1000
    3c64:	01000001 	tsteq	r0, r1
    3c68:	09db0c51 	ldmibeq	fp, {r0, r4, r6, sl, fp}^
    3c6c:	6c010000 	stcvs	0, cr0, [r1], {-0}
    3c70:	00017218 	andeq	r7, r1, r8, lsl r2
    3c74:	002e5000 	eoreq	r5, lr, r0
    3c78:	002e4e00 	eoreq	r4, lr, r0, lsl #28
    3c7c:	010f0000 	mrseq	r0, CPSR
    3c80:	00000961 	andeq	r0, r0, r1, ror #18
    3c84:	01065901 	tsteq	r6, r1, lsl #18
    3c88:	10001e6a 	andne	r1, r0, sl, ror #28
    3c8c:	10001e70 	andne	r1, r0, r0, ror lr
    3c90:	01007d02 	tsteq	r0, r2, lsl #26
    3c94:	000002a9 	andeq	r0, r0, r9, lsr #5
    3c98:	0009bd0e 	andeq	fp, r9, lr, lsl #26
    3c9c:	2e590100 	rdfcse	f0, f1, f0
    3ca0:	00000172 	andeq	r0, r0, r2, ror r1
    3ca4:	10005001 	andne	r5, r0, r1
    3ca8:	00099b01 	andeq	r9, r9, r1, lsl #22
    3cac:	06310100 	ldrteq	r0, [r1], -r0, lsl #2
    3cb0:	001e5001 	andseq	r5, lr, r1
    3cb4:	001e6a10 	andseq	r6, lr, r0, lsl sl
    3cb8:	007d0210 	rsbseq	r0, sp, r0, lsl r2
    3cbc:	0a0f0e01 	beq	3c74c8 <__RAM_SIZE+0x2c74c8>
    3cc0:	31010000 	mrscc	r0, (UNDEF: 1)
    3cc4:	0001d026 	andeq	sp, r1, r6, lsr #32
    3cc8:	00500100 	subseq	r0, r0, r0, lsl #2
    3ccc:	0024bd00 	eoreq	fp, r4, r0, lsl #26
    3cd0:	81000200 	mrshi	r0, R8_usr
    3cd4:	0400000c 	streq	r0, [r0], #-12
    3cd8:	00018901 	andeq	r8, r1, r1, lsl #18
    3cdc:	0e4e0c00 	cdpeq	12, 4, cr0, cr14, cr0, {0}
    3ce0:	03850000 	orreq	r0, r5, #0
    3ce4:	03900000 	orrseq	r0, r0, #0
	...
    3cf0:	26750000 	ldrbtcs	r0, [r5], -r0
    3cf4:	04020000 	streq	r0, [r2], #-0
    3cf8:	02000005 	andeq	r0, r0, #5
    3cfc:	003517d1 	ldrsbteq	r1, [r5], -r1
    3d00:	04030000 	streq	r0, [r3], #-0
    3d04:	0002c707 	andeq	ip, r2, r7, lsl #14
    3d08:	05040400 	streq	r0, [r4, #-1024]	; 0xfffffc00
    3d0c:	00746e69 	rsbseq	r6, r4, r9, ror #28
    3d10:	27050803 	strcs	r0, [r5, -r3, lsl #16]
    3d14:	03000001 	movweq	r0, #1
    3d18:	00630408 	rsbeq	r0, r3, r8, lsl #8
    3d1c:	cc020000 	stcgt	0, cr0, [r2], {-0}
    3d20:	03000010 	movweq	r0, #16
    3d24:	005d1729 	subseq	r1, sp, r9, lsr #14
    3d28:	01030000 	mrseq	r0, (UNDEF: 3)
    3d2c:	00027306 	andeq	r7, r2, r6, lsl #6
    3d30:	017f0200 	cmneq	pc, r0, lsl #4
    3d34:	2b030000 	blcs	c3d3c <__HEAP_SIZE+0xc2d3c>
    3d38:	00007018 	andeq	r7, r0, r8, lsl r0
    3d3c:	08010300 	stmdaeq	r1, {r8, r9}
    3d40:	00000271 	andeq	r0, r0, r1, ror r2
    3d44:	32050203 	andcc	r0, r5, #805306368	; 0x30000000
    3d48:	03000000 	movweq	r0, #0
    3d4c:	031a0702 	tsteq	sl, #524288	; 0x80000
    3d50:	04030000 	streq	r0, [r3], #-0
    3d54:	00012c05 	andeq	r2, r1, r5, lsl #24
    3d58:	006f0200 	rsbeq	r0, pc, r0, lsl #4
    3d5c:	4f030000 	svcmi	0x00030000
    3d60:	00009819 	andeq	r9, r0, r9, lsl r8
    3d64:	07040300 	streq	r0, [r4, -r0, lsl #6]
    3d68:	000002c2 	andeq	r0, r0, r2, asr #5
    3d6c:	bd070803 	stclt	8, cr0, [r7, #-12]
    3d70:	05000002 	streq	r0, [r0, #-2]
    3d74:	00a60604 	adceq	r0, r6, r4, lsl #12
    3d78:	01030000 	mrseq	r0, (UNDEF: 3)
    3d7c:	00027a08 	andeq	r7, r2, r8, lsl #20
    3d80:	bf040700 	svclt	0x00040700
    3d84:	06000000 	streq	r0, [r0], -r0
    3d88:	000000b4 	strheq	r0, [r0], -r4
    3d8c:	10ce0208 	sbcne	r0, lr, r8, lsl #4
    3d90:	14040000 	strne	r0, [r4], #-0
    3d94:	00005112 	andeq	r5, r0, r2, lsl r1
    3d98:	00c00900 	sbceq	r0, r0, r0, lsl #18
    3d9c:	c0060000 	andgt	r0, r6, r0
    3da0:	02000000 	andeq	r0, r0, #0
    3da4:	00000181 	andeq	r0, r0, r1, lsl #3
    3da8:	64131804 	ldrvs	r1, [r3], #-2052	; 0xfffff7fc
    3dac:	06000000 	streq	r0, [r0], -r0
    3db0:	000000d6 	ldrdeq	r0, [r0], -r6
    3db4:	00007102 	andeq	r7, r0, r2, lsl #2
    3db8:	14300400 	ldrtne	r0, [r0], #-1024	; 0xfffffc00
    3dbc:	0000008c 	andeq	r0, r0, ip, lsl #1
    3dc0:	0009c502 	andeq	ip, r9, r2, lsl #10
    3dc4:	1a4a0500 	bne	12851cc <__RAM_SIZE+0x11851cc>
    3dc8:	00000085 	andeq	r0, r0, r5, lsl #1
    3dcc:	0000f306 	andeq	pc, r0, r6, lsl #6
    3dd0:	09c40200 	stmibeq	r4, {r9}^
    3dd4:	4b050000 	blmi	143ddc <__RAM_SIZE+0x43ddc>
    3dd8:	0000981a 	andeq	r9, r0, sl, lsl r8
    3ddc:	01040900 	tsteq	r4, r0, lsl #18
    3de0:	04060000 	streq	r0, [r6], #-0
    3de4:	02000001 	andeq	r0, r0, #1
    3de8:	00000920 	andeq	r0, r0, r0, lsr #18
    3dec:	e71a5105 	ldr	r5, [sl, -r5, lsl #2]
    3df0:	06000000 	streq	r0, [r0], -r0
    3df4:	0000011a 	andeq	r0, r0, sl, lsl r1
    3df8:	00d60407 	sbcseq	r0, r6, r7, lsl #8
    3dfc:	240a0000 	strcs	r0, [sl], #-0
    3e00:	14000012 	strne	r0, [r0], #-18	; 0xffffffee
    3e04:	080c0c06 	stmdaeq	ip, {r1, r2, sl, fp}
    3e08:	00000160 	andeq	r0, r0, r0, ror #2
    3e0c:	000dc50b 	andeq	ip, sp, fp, lsl #10
    3e10:	0c110600 	ldceq	6, cr0, [r1], {-0}
    3e14:	00011a10 	andeq	r1, r1, r0, lsl sl
    3e18:	00230200 	eoreq	r0, r3, r0, lsl #4
    3e1c:	000dbb0b 	andeq	fp, sp, fp, lsl #22
    3e20:	0c120600 	ldceq	6, cr0, [r2], {-0}
    3e24:	0001600c 	andeq	r6, r1, ip
    3e28:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    3e2c:	00a60c00 	adceq	r0, r6, r0, lsl #24
    3e30:	01700000 	cmneq	r0, r0
    3e34:	350d0000 	strcc	r0, [sp, #-0]
    3e38:	03000000 	movweq	r0, #0
    3e3c:	0b6a0e00 	bleq	1a87644 <__RAM_SIZE+0x1987644>
    3e40:	25060000 	strcs	r0, [r6, #-0]
    3e44:	01312b0c 	teqeq	r1, ip, lsl #22
    3e48:	b60a0000 	strlt	r0, [sl], -r0
    3e4c:	1c00000f 	stcne	0, cr0, [r0], {15}
    3e50:	100c2906 	andne	r2, ip, r6, lsl #18
    3e54:	000001bc 			; <UNDEFINED> instruction: 0x000001bc
    3e58:	000dc40b 	andeq	ip, sp, fp, lsl #8
    3e5c:	0c2e0600 	stceq	6, cr0, [lr], #-0
    3e60:	00010411 	andeq	r0, r1, r1, lsl r4
    3e64:	00230200 	eoreq	r0, r3, r0, lsl #4
    3e68:	000dbb0b 	andeq	fp, sp, fp, lsl #22
    3e6c:	0c2f0600 	stceq	6, cr0, [pc], #-0	; 3e74 <__HEAP_SIZE+0x2e74>
    3e70:	0000a60c 	andeq	sl, r0, ip, lsl #12
    3e74:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    3e78:	000dd70b 	andeq	sp, sp, fp, lsl #14
    3e7c:	0c300600 	ldceq	6, cr0, [r0], #-0
    3e80:	0001701a 	andeq	r7, r1, sl, lsl r0
    3e84:	08230200 	stmdaeq	r3!, {r9}
    3e88:	13dd0e00 	bicsne	r0, sp, #0, 28
    3e8c:	34060000 	strcc	r0, [r6], #-0
    3e90:	017d030c 	cmneq	sp, ip, lsl #6
    3e94:	040f0000 	streq	r0, [pc], #-0	; 3e9c <__HEAP_SIZE+0x2e9c>
    3e98:	050c9106 	streq	r9, [ip, #-262]	; 0xfffffefa
    3e9c:	000001ee 	andeq	r0, r0, lr, ror #3
    3ea0:	000db210 	andeq	fp, sp, r0, lsl r2
    3ea4:	0c930600 	ldceq	6, cr0, [r3], {0}
    3ea8:	0000a610 	andeq	sl, r0, r0, lsl r6
    3eac:	0dc41000 	stcleq	0, cr1, [r4]
    3eb0:	94060000 	strls	r0, [r6], #-0
    3eb4:	0104150c 	tsteq	r4, ip, lsl #10
    3eb8:	0a000000 	beq	3ec0 <__HEAP_SIZE+0x2ec0>
    3ebc:	000013a3 	andeq	r1, r0, r3, lsr #7
    3ec0:	0c8d065c 	stceq	6, cr0, [sp], {92}	; 0x5c
    3ec4:	00026b10 	andeq	r6, r2, r0, lsl fp
    3ec8:	0da90b00 			; <UNDEFINED> instruction: 0x0da90b00
    3ecc:	8f060000 	svchi	0x00060000
    3ed0:	026b0c0c 	rsbeq	r0, fp, #12, 24	; 0xc00
    3ed4:	23020000 	movwcs	r0, #8192	; 0x2000
    3ed8:	00751100 	rsbseq	r1, r5, r0, lsl #2
    3edc:	070c9506 	streq	r9, [ip, -r6, lsl #10]
    3ee0:	000001c9 	andeq	r0, r0, r9, asr #3
    3ee4:	0b0c2302 	bleq	30caf4 <__RAM_SIZE+0x20caf4>
    3ee8:	000012e9 	andeq	r1, r0, r9, ror #5
    3eec:	120c9706 	andne	r9, ip, #1572864	; 0x180000
    3ef0:	0000027b 	andeq	r0, r0, fp, ror r2
    3ef4:	0b102302 	bleq	40cb04 <__RAM_SIZE+0x30cb04>
    3ef8:	00000dd6 	ldrdeq	r0, [r0], -r6
    3efc:	110c9806 	tstne	ip, r6, lsl #16
    3f00:	0000028b 	andeq	r0, r0, fp, lsl #5
    3f04:	0b482302 	bleq	120cb14 <__RAM_SIZE+0x110cb14>
    3f08:	000010f8 	strdeq	r1, [r0], -r8
    3f0c:	0d0c9906 	vstreq.16	s18, [ip, #-12]	; <UNPREDICTABLE>
    3f10:	0000029b 	muleq	r0, fp, r2
    3f14:	0b542302 	bleq	150cb24 <__RAM_SIZE+0x140cb24>
    3f18:	00001101 	andeq	r1, r0, r1, lsl #2
    3f1c:	110c9c06 	tstne	ip, r6, lsl #24
    3f20:	000000d6 	ldrdeq	r0, [r0], -r6
    3f24:	0b562302 	bleq	158cb34 <__RAM_SIZE+0x148cb34>
    3f28:	00000dcd 	andeq	r0, r0, sp, asr #27
    3f2c:	100ca006 	andne	sl, ip, r6
    3f30:	000000a6 	andeq	r0, r0, r6, lsr #1
    3f34:	00582302 	subseq	r2, r8, r2, lsl #6
    3f38:	0000a60c 	andeq	sl, r0, ip, lsl #12
    3f3c:	00027b00 	andeq	r7, r2, r0, lsl #22
    3f40:	00350d00 	eorseq	r0, r5, r0, lsl #26
    3f44:	00020000 	andeq	r0, r2, r0
    3f48:	0001bc0c 	andeq	fp, r1, ip, lsl #24
    3f4c:	00028b00 	andeq	r8, r2, r0, lsl #22
    3f50:	00350d00 	eorseq	r0, r5, r0, lsl #26
    3f54:	00010000 	andeq	r0, r1, r0
    3f58:	0001040c 	andeq	r0, r1, ip, lsl #8
    3f5c:	00029b00 	andeq	r9, r2, r0, lsl #22
    3f60:	00350d00 	eorseq	r0, r5, r0, lsl #26
    3f64:	00020000 	andeq	r0, r2, r0
    3f68:	0000d60c 	andeq	sp, r0, ip, lsl #12
    3f6c:	0002ab00 	andeq	sl, r2, r0, lsl #22
    3f70:	00350d00 	eorseq	r0, r5, r0, lsl #26
    3f74:	00010000 	andeq	r0, r1, r0
    3f78:	000fe60e 	andeq	lr, pc, lr, lsl #12
    3f7c:	0ca70600 	stceq	6, cr0, [r7]
    3f80:	0001ee03 	andeq	lr, r1, r3, lsl #28
    3f84:	09471200 	stmdbeq	r7, {r9, ip}^
    3f88:	07140000 	ldreq	r0, [r4, -r0]
    3f8c:	03110890 	tsteq	r1, #144, 16	; 0x900000
    3f90:	2b130000 	blcs	4c3f98 <__RAM_SIZE+0x3c3f98>
    3f94:	07000009 	streq	r0, [r0, -r9]
    3f98:	011a2493 			; <UNDEFINED> instruction: 0x011a2493
    3f9c:	23020000 	movwcs	r0, #8192	; 0x2000
    3fa0:	09941300 	ldmibeq	r4, {r8, r9, ip}
    3fa4:	94070000 	strls	r0, [r7], #-0
    3fa8:	0003112d 	andeq	r1, r3, sp, lsr #2
    3fac:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    3fb0:	0009e313 	andeq	lr, r9, r3, lsl r3
    3fb4:	2d950700 	ldccs	7, cr0, [r5]
    3fb8:	00000311 	andeq	r0, r0, r1, lsl r3
    3fbc:	13082302 	movwne	r2, #33538	; 0x8302
    3fc0:	0000093f 	andeq	r0, r0, pc, lsr r9
    3fc4:	a60c9607 	strge	r9, [ip], -r7, lsl #12
    3fc8:	02000000 	andeq	r0, r0, #0
    3fcc:	14130c23 	ldrne	r0, [r3], #-3107	; 0xfffff3dd
    3fd0:	07000009 	streq	r0, [r0, -r9]
    3fd4:	03522897 	cmpeq	r2, #9895936	; 0x970000
    3fd8:	23020000 	movwcs	r0, #8192	; 0x2000
    3fdc:	04070010 	streq	r0, [r7], #-16
    3fe0:	000002b8 			; <UNDEFINED> instruction: 0x000002b8
    3fe4:	000a1612 	andeq	r1, sl, r2, lsl r6
    3fe8:	ac071c00 	stcge	12, cr1, [r7], {-0}
    3fec:	00035210 	andeq	r5, r3, r0, lsl r2
    3ff0:	09751300 	ldmdbeq	r5!, {r8, r9, ip}^
    3ff4:	af070000 	svcge	0x00070000
    3ff8:	00010425 	andeq	r0, r1, r5, lsr #8
    3ffc:	00230200 	eoreq	r0, r3, r0, lsl #4
    4000:	0009db13 	andeq	sp, r9, r3, lsl fp
    4004:	26b00700 	ldrtcs	r0, [r0], r0, lsl #14
    4008:	00000370 	andeq	r0, r0, r0, ror r3
    400c:	13042302 	movwne	r2, #17154	; 0x4302
    4010:	00000936 	andeq	r0, r0, r6, lsr r9
    4014:	6414b107 	ldrvs	fp, [r4], #-263	; 0xfffffef9
    4018:	02000003 	andeq	r0, r0, #3
    401c:	07000823 	streq	r0, [r0, -r3, lsr #16]
    4020:	00031704 	andeq	r1, r3, r4, lsl #14
    4024:	193d0200 	ldmdbne	sp!, {r9}
    4028:	9a070000 	bls	1c4030 <__RAM_SIZE+0xc4030>
    402c:	0002b81b 	andeq	fp, r2, fp, lsl r8
    4030:	0b700200 	bleq	1c04838 <__RAM_SIZE+0x1b04838>
    4034:	a6070000 	strge	r0, [r7], -r0
    4038:	0002b824 	andeq	fp, r2, r4, lsr #16
    403c:	58040700 	stmdapl	r4, {r8, r9, sl}
    4040:	02000003 	andeq	r0, r0, #3
    4044:	000013e3 	andeq	r1, r0, r3, ror #7
    4048:	1703b307 	strne	fp, [r3, -r7, lsl #6]
    404c:	02000003 	andeq	r0, r0, #3
    4050:	000002ea 	andeq	r0, r0, sl, ror #5
    4054:	8e2e5c08 	cdphi	12, 2, cr5, cr14, cr8, {0}
    4058:	07000003 	streq	r0, [r0, -r3]
    405c:	00039404 	andeq	r9, r3, r4, lsl #8
    4060:	016b1400 	cmneq	fp, r0, lsl #8
    4064:	12010000 	andne	r0, r1, #0
    4068:	00000b13 	andeq	r0, r0, r3, lsl fp
    406c:	107d0808 	rsbsne	r0, sp, r8, lsl #16
    4070:	000003c6 	andeq	r0, r0, r6, asr #7
    4074:	000bc413 	andeq	ip, fp, r3, lsl r4
    4078:	107f0800 	rsbsne	r0, pc, r0, lsl #16
    407c:	000000f3 	strdeq	r0, [r0], -r3
    4080:	13002302 	movwne	r2, #770	; 0x302
    4084:	00000fd6 	ldrdeq	r0, [r0], -r6
    4088:	1a108008 	bne	4240b0 <__RAM_SIZE+0x3240b0>
    408c:	02000001 	andeq	r0, r0, #1
    4090:	02000423 	andeq	r0, r0, #587202560	; 0x23000000
    4094:	00001023 	andeq	r1, r0, r3, lsr #32
    4098:	9a038108 	bls	e44c0 <__HEAP_SIZE+0xe34c0>
    409c:	02000003 	andeq	r0, r0, #3
    40a0:	00000f08 	andeq	r0, r0, r8, lsl #30
    40a4:	e3243309 			; <UNDEFINED> instruction: 0xe3243309
    40a8:	06000003 	streq	r0, [r0], -r3
    40ac:	000003d2 	ldrdeq	r0, [r0], -r2
    40b0:	03e90407 	mvneq	r0, #117440512	; 0x7000000
    40b4:	79120000 	ldmdbvc	r2, {}	; <UNPREDICTABLE>
    40b8:	5c00000c 	stcpl	0, cr0, [r0], {12}
    40bc:	a9106701 	ldmdbge	r0, {r0, r8, r9, sl, sp, lr}
    40c0:	13000004 	movwne	r0, #4
    40c4:	0000130b 	andeq	r1, r0, fp, lsl #6
    40c8:	ed0e6901 	vstr.16	s12, [lr, #-2]
    40cc:	02000004 	andeq	r0, r0, #4
    40d0:	c2130023 	andsgt	r0, r3, #35	; 0x23
    40d4:	01000010 	tsteq	r0, r0, lsl r0
    40d8:	04ed0e6a 	strbteq	r0, [sp], #3690	; 0xe6a
    40dc:	23020000 	movwcs	r0, #8192	; 0x2000
    40e0:	00751504 	rsbseq	r1, r5, r4, lsl #10
    40e4:	37077001 	strcc	r7, [r7, -r1]
    40e8:	02000005 	andeq	r0, r0, #5
    40ec:	91130823 	tstls	r3, r3, lsr #16
    40f0:	0100000b 	tsteq	r0, fp
    40f4:	03760c72 	cmneq	r6, #29184	; 0x7200
    40f8:	23020000 	movwcs	r0, #8192	; 0x2000
    40fc:	0ada1310 	beq	ff688d44 <__StackTop+0xc7588d44>
    4100:	73010000 	movwvc	r0, #4096	; 0x1000
    4104:	0003760c 	andeq	r7, r3, ip, lsl #12
    4108:	2c230200 	sfmcs	f0, 4, [r3], #-0
    410c:	000cdb13 	andeq	sp, ip, r3, lsl fp
    4110:	1a750100 	bne	1d44518 <__RAM_SIZE+0x1c44518>
    4114:	00000110 	andeq	r0, r0, r0, lsl r1
    4118:	13482302 	movtne	r2, #33538	; 0x8302
    411c:	0000112a 	andeq	r1, r0, sl, lsr #2
    4120:	04117601 	ldreq	r7, [r1], #-1537	; 0xfffff9ff
    4124:	02000001 	andeq	r0, r0, #1
    4128:	70134c23 	andsvc	r4, r3, r3, lsr #24
    412c:	0100000e 	tsteq	r0, lr
    4130:	01041177 	tsteq	r4, r7, ror r1
    4134:	23020000 	movwcs	r0, #8192	; 0x2000
    4138:	139b1350 	orrsne	r1, fp, #80, 6	; 0x40000001
    413c:	79010000 	stmdbvc	r1, {}	; <UNPREDICTABLE>
    4140:	0000cc15 	andeq	ip, r0, r5, lsl ip
    4144:	54230200 	strtpl	r0, [r3], #-512	; 0xfffffe00
    4148:	000bbc13 	andeq	fp, fp, r3, lsl ip
    414c:	157a0100 	ldrbne	r0, [sl, #-256]!	; 0xffffff00
    4150:	000000cc 	andeq	r0, r0, ip, asr #1
    4154:	13552302 	cmpne	r5, #134217728	; 0x8000000
    4158:	00000e04 	andeq	r0, r0, r4, lsl #28
    415c:	d6117d01 	ldrle	r7, [r1], -r1, lsl #26
    4160:	02000000 	andeq	r0, r0, #0
    4164:	6e135623 	cfmsub32vs	mvax1, mvfx5, mvfx3, mvfx3
    4168:	01000013 	tsteq	r0, r3, lsl r0
    416c:	03e32281 	mvneq	r2, #268435464	; 0x10000008
    4170:	23020000 	movwcs	r0, #8192	; 0x2000
    4174:	84020058 	strhi	r0, [r2], #-88	; 0xffffffa8
    4178:	0900000d 	stmdbeq	r0, {r0, r2, r3}
    417c:	03e3243a 	mvneq	r2, #973078528	; 0x3a000000
    4180:	4d020000 	stcmi	0, cr0, [r2, #-0]
    4184:	0900000d 	stmdbeq	r0, {r0, r2, r3}
    4188:	03e32441 	mvneq	r2, #1090519040	; 0x41000000
    418c:	e8120000 	ldmda	r2, {}	; <UNPREDICTABLE>
    4190:	0800000e 	stmdaeq	r0, {r1, r2, r3}
    4194:	ed104401 	cfldrs	mvf4, [r0, #-4]
    4198:	13000004 	movwne	r0, #4
    419c:	000011fb 	strdeq	r1, [r0], -fp
    41a0:	ed0e4601 	stc	6, cr4, [lr, #-4]
    41a4:	02000004 	andeq	r0, r0, #4
    41a8:	1b130023 	blne	4c423c <__RAM_SIZE+0x3c423c>
    41ac:	0100000c 	tsteq	r0, ip
    41b0:	04ed0e47 	strbteq	r0, [sp], #3655	; 0xe47
    41b4:	23020000 	movwcs	r0, #8192	; 0x2000
    41b8:	04070004 	streq	r0, [r7], #-4
    41bc:	000000c0 	andeq	r0, r0, r0, asr #1
    41c0:	00111a02 	andseq	r1, r1, r2, lsl #20
    41c4:	03480100 	movteq	r0, #33024	; 0x8100
    41c8:	000004c1 	andeq	r0, r0, r1, asr #9
    41cc:	000a7012 	andeq	r7, sl, r2, lsl r0
    41d0:	4a010800 	bmi	461d8 <__HEAP_SIZE+0x451d8>
    41d4:	00052b10 	andeq	r2, r5, r0, lsl fp
    41d8:	1ecb1300 	cdpne	3, 12, cr1, cr11, cr0, {0}
    41dc:	4c010000 	stcmi	0, cr0, [r1], {-0}
    41e0:	00038212 	andeq	r8, r3, r2, lsl r2
    41e4:	00230200 	eoreq	r0, r3, r0, lsl #4
    41e8:	00125c13 	andseq	r5, r2, r3, lsl ip
    41ec:	114d0100 	mrsne	r0, (UNDEF: 93)
    41f0:	00000104 	andeq	r0, r0, r4, lsl #2
    41f4:	00042302 	andeq	r2, r4, r2, lsl #6
    41f8:	000a8902 	andeq	r8, sl, r2, lsl #18
    41fc:	034e0100 	movteq	r0, #57600	; 0xe100
    4200:	000004ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    4204:	6c010816 	stcvs	8, cr0, [r1], {22}
    4208:	00055905 	andeq	r5, r5, r5, lsl #18
    420c:	121d1700 	andsne	r1, sp, #0, 14
    4210:	6e010000 	cdpvs	0, 0, cr0, cr1, cr0, {0}
    4214:	0004f319 	andeq	pc, r4, r9, lsl r3	; <UNPREDICTABLE>
    4218:	0ced1700 	stcleq	7, cr1, [sp]
    421c:	6f010000 	svcvs	0x00010000
    4220:	00052b19 	andeq	r2, r5, r9, lsl fp
    4224:	67020000 	strvs	r0, [r2, -r0]
    4228:	01000013 	tsteq	r0, r3, lsl r0
    422c:	03e90388 	mvneq	r0, #136, 6	; 0x20000002
    4230:	ec020000 	stc	0, cr0, [r2], {-0}
    4234:	0100000f 	tsteq	r0, pc
    4238:	0559108c 	ldrbeq	r1, [r9, #-140]	; 0xffffff74
    423c:	65060000 	strvs	r0, [r6, #-0]
    4240:	18000005 	stmdane	r0, {r0, r2}
    4244:	00000a55 	andeq	r0, r0, r5, asr sl
    4248:	170cee01 	strne	lr, [ip, -r1, lsl #28]
    424c:	0000f301 	andeq	pc, r0, r1, lsl #6
    4250:	001f7a00 	andseq	r7, pc, r0, lsl #20
    4254:	001fd210 	andseq	sp, pc, r0, lsl r2	; <UNPREDICTABLE>
    4258:	002e6310 	eoreq	r6, lr, r0, lsl r3
    425c:	064b0100 	strbeq	r0, [fp], -r0, lsl #2
    4260:	1c190000 	ldcne	0, cr0, [r9], {-0}
    4264:	01000012 	tsteq	r0, r2, lsl r0
    4268:	51490cee 	smlalttpl	r0, r9, lr, ip
    426c:	ad000006 	stcge	0, cr0, [r0, #-24]	; 0xffffffe8
    4270:	a700002e 	strge	r0, [r0, -lr, lsr #32]
    4274:	1a00002e 	bne	4334 <__HEAP_SIZE+0x3334>
    4278:	0000136e 	andeq	r1, r0, lr, ror #6
    427c:	130cf001 	movwne	pc, #49153	; 0xc001	; <UNPREDICTABLE>
    4280:	00000656 	andeq	r0, r0, r6, asr r6
    4284:	00002ed9 	ldrdeq	r2, [r0], -r9
    4288:	00002ed7 	ldrdeq	r2, [r0], -r7
    428c:	001a191a 	andseq	r1, sl, sl, lsl r9
    4290:	0cf10100 	ldfeqe	f0, [r1]
    4294:	0000f314 	andeq	pc, r0, r4, lsl r3	; <UNPREDICTABLE>
    4298:	002efa00 	eoreq	pc, lr, r0, lsl #20
    429c:	002eec00 	eoreq	lr, lr, r0, lsl #24
    42a0:	02b81b00 	adcseq	r1, r8, #0, 22
    42a4:	bc1a0000 	ldclt	0, cr0, [sl], {-0}
    42a8:	0100000b 	tsteq	r0, fp
    42ac:	d11a0cfd 			; <UNDEFINED> instruction: 0xd11a0cfd
    42b0:	56000000 	strpl	r0, [r0], -r0
    42b4:	5200002f 	andpl	r0, r0, #47	; 0x2f
    42b8:	1c00002f 	stcne	0, cr0, [r0], {47}	; 0x2f
    42bc:	10001fc0 	andne	r1, r0, r0, asr #31
    42c0:	10001fd2 	ldrdne	r1, [r0], -r2
    42c4:	0000061a 	andeq	r0, r0, sl, lsl r6
    42c8:	00110a1a 	andseq	r0, r1, sl, lsl sl
    42cc:	0d190100 	ldfeqs	f0, [r9, #-0]
    42d0:	00011511 	andeq	r1, r1, r1, lsl r5
    42d4:	002f7800 	eoreq	r7, pc, r0, lsl #16
    42d8:	002f7600 	eoreq	r7, pc, r0, lsl #12
    42dc:	1fc41d00 	svcne	0x00c41d00
    42e0:	23701000 	cmncs	r0, #0
    42e4:	1e000000 	cdpne	0, 0, cr0, cr0, cr0, {0}
    42e8:	10001fa2 	andne	r1, r0, r2, lsr #31
    42ec:	00000bfe 	strdeq	r0, [r0], -lr
    42f0:	00000639 	andeq	r0, r0, r9, lsr r6
    42f4:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    42f8:	011f0074 	tsteq	pc, r4, ror r0	; <UNPREDICTABLE>
    42fc:	6c910251 	lfmvs	f0, 4, [r1], {81}	; 0x51
    4300:	0152011f 	cmpeq	r2, pc, lsl r1
    4304:	b8200030 	stmdalt	r0!, {r4, r5}
    4308:	7f10001f 	svcvc	0x0010001f
    430c:	1f000023 	svcne	0x00000023
    4310:	74025001 	strvc	r5, [r2], #-1
    4314:	0000002c 	andeq	r0, r0, ip, lsr #32
    4318:	05710407 	ldrbeq	r0, [r1, #-1031]!	; 0xfffffbf9
    431c:	4b060000 	blmi	184324 <__RAM_SIZE+0x84324>
    4320:	07000006 	streq	r0, [r0, -r6]
    4324:	00056504 	andeq	r6, r5, r4, lsl #10
    4328:	06560600 	ldrbeq	r0, [r6], -r0, lsl #12
    432c:	01210000 			; <UNDEFINED> instruction: 0x01210000
    4330:	00000b36 	andeq	r0, r0, r6, lsr fp
    4334:	1c0cdc01 	stcne	12, cr13, [ip], {1}
    4338:	0004b501 	andeq	fp, r4, r1, lsl #10
	...
    4344:	002f8b00 	eoreq	r8, pc, r0, lsl #22
    4348:	06c30100 	strbeq	r0, [r3], r0, lsl #2
    434c:	16190000 	ldrne	r0, [r9], -r0
    4350:	0100000f 	tsteq	r0, pc
    4354:	a9490cdc 	stmdbge	r9, {r2, r3, r4, r6, r7, sl, fp}^
    4358:	c7000004 	strgt	r0, [r0, -r4]
    435c:	c300002f 	movwgt	r0, #47	; 0x2f
    4360:	2200002f 	andcs	r0, r0, #47	; 0x2f
    4364:	00001a19 	andeq	r1, r0, r9, lsl sl
    4368:	200cde01 	andcs	sp, ip, r1, lsl #28
    436c:	000004b5 			; <UNDEFINED> instruction: 0x000004b5
    4370:	20749102 	rsbscs	r9, r4, r2, lsl #2
    4374:	00000000 	andeq	r0, r0, r0
    4378:	00000fa5 	andeq	r0, r0, r5, lsr #31
    437c:	0350011f 	cmpeq	r0, #-1073741817	; 0xc0000007
    4380:	1f5001f3 	svcne	0x005001f3
    4384:	91025101 	tstls	r2, r1, lsl #2
    4388:	52011f74 	andpl	r1, r1, #116, 30	; 0x1d0
    438c:	00003001 	andeq	r3, r0, r1
    4390:	12710121 	rsbsne	r0, r1, #1073741832	; 0x40000008
    4394:	c9010000 	stmdbgt	r1, {}	; <UNPREDICTABLE>
    4398:	b5011c0c 	strlt	r1, [r1, #-3084]	; 0xfffff3f4
    439c:	00000004 	andeq	r0, r0, r4
    43a0:	00000000 	andeq	r0, r0, r0
    43a4:	e8000000 	stmda	r0, {}	; <UNPREDICTABLE>
    43a8:	0100002f 	tsteq	r0, pc, lsr #32
    43ac:	0000073c 	andeq	r0, r0, ip, lsr r7
    43b0:	000f1619 	andeq	r1, pc, r9, lsl r6	; <UNPREDICTABLE>
    43b4:	0cc90100 	stfeqe	f0, [r9], {0}
    43b8:	0004a942 	andeq	sl, r4, r2, asr #18
    43bc:	00302400 	eorseq	r2, r0, r0, lsl #8
    43c0:	00302000 	eorseq	r2, r0, r0
    43c4:	20e11900 	rsccs	r1, r1, r0, lsl #18
    43c8:	ca010000 	bgt	443d0 <__HEAP_SIZE+0x433d0>
    43cc:	0126420c 			; <UNDEFINED> instruction: 0x0126420c
    43d0:	304b0000 	subcc	r0, fp, r0
    43d4:	30450000 	subcc	r0, r5, r0
    43d8:	19220000 	stmdbne	r2!, {}	; <UNPREDICTABLE>
    43dc:	0100001a 	tsteq	r0, sl, lsl r0
    43e0:	b5200ccc 	strlt	r0, [r0, #-3276]!	; 0xfffff334
    43e4:	02000004 	andeq	r0, r0, #4
    43e8:	00207491 	mlaeq	r0, r1, r4, r7
    43ec:	57000000 	strpl	r0, [r0, -r0]
    43f0:	1f000015 	svcne	0x00000015
    43f4:	f3035001 	vhadd.u8	d5, d3, d1
    43f8:	011f5001 	tsteq	pc, r1
    43fc:	74910251 	ldrvc	r0, [r1], #593	; 0x251
    4400:	0352011f 	cmpeq	r2, #-1073741817	; 0xc0000007
    4404:	005101f3 	ldrsheq	r0, [r1], #-19	; 0xffffffed
    4408:	f4012100 	vst4.8	{d2,d4,d6,d8}, [r1], r0
    440c:	0100000f 	tsteq	r0, pc
    4410:	01100ca0 	tsteq	r0, r0, lsr #25
    4414:	000000f3 	strdeq	r0, [r0], -r3
	...
    4420:	00003077 	andeq	r3, r0, r7, ror r0
    4424:	0007c301 	andeq	ip, r7, r1, lsl #6
    4428:	11531900 	cmpne	r3, r0, lsl #18
    442c:	a0010000 	andge	r0, r1, r0
    4430:	04b53c0c 	ldrteq	r3, [r5], #3084	; 0xc0c
    4434:	30a30000 	adccc	r0, r3, r0
    4438:	30970000 	addscc	r0, r7, r0
    443c:	16190000 	ldrne	r0, [r9], -r0
    4440:	0100000f 	tsteq	r0, pc
    4444:	a9360ca1 	ldmdbge	r6!, {r0, r5, r7, sl, fp}
    4448:	f8000004 			; <UNDEFINED> instruction: 0xf8000004
    444c:	f0000030 			; <UNDEFINED> instruction: 0xf0000030
    4450:	1a000030 	bne	4518 <__HEAP_SIZE+0x3518>
    4454:	00001a19 	andeq	r1, r0, r9, lsl sl
    4458:	140ca301 	strne	sl, [ip], #-769	; 0xfffffcff
    445c:	000000f3 	strdeq	r0, [r0], -r3
    4460:	00003136 	andeq	r3, r0, r6, lsr r1
    4464:	00003132 	andeq	r3, r0, r2, lsr r1
    4468:	0011521a 	andseq	r5, r1, sl, lsl r2
    446c:	0ca40100 	stfeqs	f0, [r4]
    4470:	00065c19 	andeq	r5, r6, r9, lsl ip
    4474:	00316200 	eorseq	r6, r1, r0, lsl #4
    4478:	00315600 	eorseq	r5, r1, r0, lsl #12
    447c:	00001d00 	andeq	r1, r0, r0, lsl #26
    4480:	238e0000 	orrcs	r0, lr, #0
    4484:	001d0000 	andseq	r0, sp, r0
    4488:	9c000000 	stcls	0, cr0, [r0], {-0}
    448c:	00000023 	andeq	r0, r0, r3, lsr #32
    4490:	138c0121 	orrne	r0, ip, #1073741832	; 0x40000008
    4494:	7a010000 	bvc	4449c <__HEAP_SIZE+0x4349c>
    4498:	f301100c 	vhadd.u8	d1, d1, d12
	...
    44a4:	af000000 	svcge	0x00000000
    44a8:	01000031 	tsteq	r0, r1, lsr r0
    44ac:	00000835 	andeq	r0, r0, r5, lsr r8
    44b0:	00115319 	andseq	r5, r1, r9, lsl r3
    44b4:	0c7a0100 	ldfeqe	f0, [sl], #-0
    44b8:	0004b537 	andeq	fp, r4, r7, lsr r5
    44bc:	0031dd00 	eorseq	sp, r1, r0, lsl #26
    44c0:	0031cf00 	eorseq	ip, r1, r0, lsl #30
    44c4:	0f161900 	svceq	0x00161900
    44c8:	7b010000 	blvc	444d0 <__HEAP_SIZE+0x434d0>
    44cc:	04a9310c 	strteq	r3, [r9], #268	; 0x10c
    44d0:	323f0000 	eorscc	r0, pc, #0
    44d4:	323b0000 	eorscc	r0, fp, #0
    44d8:	191a0000 	ldmdbne	sl, {}	; <UNPREDICTABLE>
    44dc:	0100001a 	tsteq	r0, sl, lsl r0
    44e0:	f3140c7d 	vqrdmlsh.s16	q0, q2, <illegal reg q14.5>
    44e4:	61000000 	mrsvs	r0, (UNDEF: 0)
    44e8:	5d000032 	stcpl	0, cr0, [r0, #-200]	; 0xffffff38
    44ec:	1d000032 	stcne	0, cr0, [r0, #-200]	; 0xffffff38
    44f0:	00000000 	andeq	r0, r0, r0
    44f4:	0000238e 	andeq	r2, r0, lr, lsl #7
    44f8:	0000001d 	andeq	r0, r0, sp, lsl r0
    44fc:	00239c00 	eoreq	r9, r3, r0, lsl #24
    4500:	01210000 			; <UNDEFINED> instruction: 0x01210000
    4504:	00001013 	andeq	r1, r0, r3, lsl r0
    4508:	160c6801 	strne	r6, [ip], -r1, lsl #16
    450c:	0004a901 	andeq	sl, r4, r1, lsl #18
	...
    4518:	00328000 	eorseq	r8, r2, r0
    451c:	089b0100 	ldmeq	fp, {r8}
    4520:	b1190000 	tstlt	r9, r0
    4524:	01000013 	tsteq	r0, r3, lsl r0
    4528:	15390c68 	ldrne	r0, [r9, #-3176]!	; 0xfffff398
    452c:	a4000001 	strge	r0, [r0], #-1
    4530:	a0000032 	andge	r0, r0, r2, lsr r0
    4534:	1a000032 	bne	4604 <__HEAP_SIZE+0x3604>
    4538:	0000121c 	andeq	r1, r0, ip, lsl r2
    453c:	1a0c6a01 	bne	31ed48 <__RAM_SIZE+0x21ed48>
    4540:	000004a9 	andeq	r0, r0, r9, lsr #9
    4544:	000032c7 	andeq	r3, r0, r7, asr #5
    4548:	000032c5 	andeq	r3, r0, r5, asr #5
    454c:	00000020 	andeq	r0, r0, r0, lsr #32
    4550:	00207e00 	eoreq	r7, r0, r0, lsl #28
    4554:	50011f00 	andpl	r1, r1, r0, lsl #30
    4558:	5001f303 	andpl	pc, r1, r3, lsl #6
    455c:	0151011f 	cmpeq	r1, pc, lsl r1
    4560:	52011f34 	andpl	r1, r1, #52, 30	; 0xd0
    4564:	00003001 	andeq	r3, r0, r1
    4568:	11330123 	teqne	r3, r3, lsr #2
    456c:	3c010000 	stccc	0, cr0, [r1], {-0}
    4570:	28010a0c 	stmdacs	r1, {r2, r3, r9, fp}
    4574:	7a100022 	bvc	404604 <__RAM_SIZE+0x304604>
    4578:	da100022 	ble	404608 <__RAM_SIZE+0x304608>
    457c:	01000032 	tsteq	r0, r2, lsr r0
    4580:	0000094e 	andeq	r0, r0, lr, asr #18
    4584:	00121d19 	andseq	r1, r2, r9, lsl sp
    4588:	0c3c0100 	ldfeqs	f0, [ip], #-0
    458c:	0003d238 	andeq	sp, r3, r8, lsr r2
    4590:	0032fe00 	eorseq	pc, r2, r0, lsl #28
    4594:	0032fa00 	eorseq	pc, r2, r0, lsl #20
    4598:	20e11900 	rsccs	r1, r1, r0, lsl #18
    459c:	3d010000 	stccc	0, cr0, [r1, #-0]
    45a0:	011a350c 	tsteq	sl, ip, lsl #10
    45a4:	33200000 	nopcc	{0}	; <UNPREDICTABLE>
    45a8:	331c0000 	tstcc	ip, #0
    45ac:	7f190000 	svcvc	0x00190000
    45b0:	0100000b 	tsteq	r0, fp
    45b4:	ff3b0c3e 			; <UNDEFINED> instruction: 0xff3b0c3e
    45b8:	42000000 	andmi	r0, r0, #0
    45bc:	3e000033 	mcrcc	0, 0, r0, cr0, cr3, {1}
    45c0:	1a000033 	bne	4694 <__HEAP_SIZE+0x3694>
    45c4:	0000121c 	andeq	r1, r0, ip, lsl r2
    45c8:	190c4001 	stmdbne	ip, {r0, lr}
    45cc:	0000065c 	andeq	r0, r0, ip, asr r6
    45d0:	00003364 	andeq	r3, r0, r4, ror #6
    45d4:	00003360 	andeq	r3, r0, r0, ror #6
    45d8:	0022341d 	eoreq	r3, r2, sp, lsl r4
    45dc:	00238e10 	eoreq	r8, r3, r0, lsl lr
    45e0:	22501d00 	subscs	r1, r0, #0, 26
    45e4:	239c1000 	orrscs	r1, ip, #0
    45e8:	5a1e0000 	bpl	7845f0 <__RAM_SIZE+0x6845f0>
    45ec:	bd100022 	ldclt	0, cr0, [r0, #-136]	; 0xffffff78
    45f0:	3100000a 	tstcc	r0, sl
    45f4:	1f000009 	svcne	0x00000009
    45f8:	74025001 	strvc	r5, [r2], #-1
    45fc:	78200000 	stmdavc	r0!, {}	; <UNPREDICTABLE>
    4600:	aa100022 	bge	404690 <__RAM_SIZE+0x304690>
    4604:	1f000023 	svcne	0x00000023
    4608:	74025001 	strvc	r5, [r2], #-1
    460c:	51011f2c 	tstpl	r1, ip, lsr #30
    4610:	1f007502 	svcne	0x00007502
    4614:	76025201 	strvc	r5, [r2], -r1, lsl #4
    4618:	24000000 	strcs	r0, [r0], #-0
    461c:	0011cb01 	andseq	ip, r1, r1, lsl #22
    4620:	0a780100 	beq	1e04a28 <__RAM_SIZE+0x1d04a28>
    4624:	00f3010c 	rscseq	r0, r3, ip, lsl #2
	...
    4630:	7d020000 	stcvc	0, cr0, [r2, #-0]
    4634:	09ad0100 	stmibeq	sp!, {r8}
    4638:	1d190000 	ldcne	0, cr0, [r9, #-0]
    463c:	01000012 	tsteq	r0, r2, lsl r0
    4640:	de3a0a78 			; <UNDEFINED> instruction: 0xde3a0a78
    4644:	8a000003 	bhi	4658 <__HEAP_SIZE+0x3658>
    4648:	82000033 	andhi	r0, r0, #51	; 0x33
    464c:	1a000033 	bne	4720 <__HEAP_SIZE+0x3720>
    4650:	00001a19 	andeq	r1, r0, r9, lsl sl
    4654:	100a7a01 	andne	r7, sl, r1, lsl #20
    4658:	000000f3 	strdeq	r0, [r0], -r3
    465c:	000033c6 	andeq	r3, r0, r6, asr #7
    4660:	000033c4 	andeq	r3, r0, r4, asr #7
    4664:	00121c1a 	andseq	r1, r2, sl, lsl ip
    4668:	0a7b0100 	beq	1ec4a70 <__RAM_SIZE+0x1dc4a70>
    466c:	00065c15 	andeq	r5, r6, r5, lsl ip
    4670:	0033e200 	eorseq	lr, r3, r0, lsl #4
    4674:	0033da00 	eorseq	sp, r3, r0, lsl #20
    4678:	d9180000 	ldmdble	r8, {}	; <UNPREDICTABLE>
    467c:	0100000e 	tsteq	r0, lr
    4680:	01130a63 	tsteq	r3, r3, ror #20
    4684:	000000f3 	strdeq	r0, [r0], -r3
	...
    4690:	0000341c 	andeq	r3, r0, ip, lsl r4
    4694:	000a0901 	andeq	r0, sl, r1, lsl #18
    4698:	121c1900 	andsne	r1, ip, #0, 18
    469c:	63010000 	movwvs	r0, #4096	; 0x1000
    46a0:	064b330a 	strbeq	r3, [fp], -sl, lsl #6
    46a4:	34460000 	strbcc	r0, [r6], #-0
    46a8:	343c0000 	ldrtcc	r0, [ip], #-0
    46ac:	191a0000 	ldmdbne	sl, {}	; <UNPREDICTABLE>
    46b0:	0100001a 	tsteq	r0, sl, lsl r0
    46b4:	f3100a65 	vpmax.u16	q0, q0, <illegal reg q10.5>
    46b8:	8d000000 	stchi	0, cr0, [r0, #-0]
    46bc:	8b000034 	blhi	4794 <__HEAP_SIZE+0x3794>
    46c0:	1d000034 	stcne	0, cr0, [r0, #-208]	; 0xffffff30
    46c4:	00000000 	andeq	r0, r0, r0
    46c8:	0000238e 	andeq	r2, r0, lr, lsl #7
    46cc:	0000001d 	andeq	r0, r0, sp, lsl r0
    46d0:	00239c00 	eoreq	r9, r3, r0, lsl #24
    46d4:	01240000 			; <UNDEFINED> instruction: 0x01240000
    46d8:	0000134d 	andeq	r1, r0, sp, asr #6
    46dc:	0c0a4b01 			; <UNDEFINED> instruction: 0x0c0a4b01
    46e0:	0000f301 	andeq	pc, r0, r1, lsl #6
	...
    46ec:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    46f0:	000a6101 	andeq	r6, sl, r1, lsl #2
    46f4:	121d1900 	andsne	r1, sp, #0, 18
    46f8:	4b010000 	blmi	44700 <__HEAP_SIZE+0x43700>
    46fc:	03de3b0a 	bicseq	r3, lr, #10240	; 0x2800
    4700:	34a80000 	strtcc	r0, [r8], #0
    4704:	34a00000 	strtcc	r0, [r0], #0
    4708:	19250000 	stmdbne	r5!, {}	; <UNPREDICTABLE>
    470c:	0100001a 	tsteq	r0, sl, lsl r0
    4710:	f3100a4d 	vpmax.u16	q0, q0, <illegal reg q6.5>
    4714:	00000000 	andeq	r0, r0, r0
    4718:	00121c1a 	andseq	r1, r2, sl, lsl ip
    471c:	0a4e0100 	beq	1384b24 <__RAM_SIZE+0x1284b24>
    4720:	00065c15 	andeq	r5, r6, r5, lsl ip
    4724:	0034ea00 	eorseq	lr, r4, r0, lsl #20
    4728:	0034e200 	eorseq	lr, r4, r0, lsl #4
    472c:	9d180000 	ldcls	0, cr0, [r8, #-0]
    4730:	0100000c 	tsteq	r0, ip
    4734:	01130a36 	tsteq	r3, r6, lsr sl
    4738:	000000f3 	strdeq	r0, [r0], -r3
    473c:	10001ec6 	andne	r1, r0, r6, asr #29
    4740:	10001ee0 	andne	r1, r0, r0, ror #29
    4744:	00003524 	andeq	r3, r0, r4, lsr #10
    4748:	000abd01 	andeq	fp, sl, r1, lsl #26
    474c:	121c1900 	andsne	r1, ip, #0, 18
    4750:	36010000 	strcc	r0, [r1], -r0
    4754:	064b340a 	strbeq	r3, [fp], -sl, lsl #8
    4758:	354e0000 	strbcc	r0, [lr, #-0]
    475c:	35440000 	strbcc	r0, [r4, #-0]
    4760:	191a0000 	ldmdbne	sl, {}	; <UNPREDICTABLE>
    4764:	0100001a 	tsteq	r0, sl, lsl r0
    4768:	f3100a38 	vpmin.u16	d0, d0, d24
    476c:	95000000 	strls	r0, [r0, #-0]
    4770:	93000035 	movwls	r0, #53	; 0x35
    4774:	1d000035 	stcne	0, cr0, [r0, #-212]	; 0xffffff2c
    4778:	10001ece 	andne	r1, r0, lr, asr #29
    477c:	0000238e 	andeq	r2, r0, lr, lsl #7
    4780:	001ed81d 	andseq	sp, lr, sp, lsl r8
    4784:	00239c10 	eoreq	r9, r3, r0, lsl ip
    4788:	2b260000 	blcs	984790 <__RAM_SIZE+0x884790>
    478c:	01000013 	tsteq	r0, r3, lsl r0
    4790:	010d09be 			; <UNDEFINED> instruction: 0x010d09be
    4794:	10001fd2 	ldrdne	r1, [r0], -r2
    4798:	10002054 	andne	r2, r0, r4, asr r0
    479c:	000035a8 	andeq	r3, r0, r8, lsr #11
    47a0:	000baf01 	andeq	sl, fp, r1, lsl #30
    47a4:	121c1900 	andsne	r1, ip, #0, 18
    47a8:	be010000 	cdplt	0, 0, cr0, cr1, cr0, {0}
    47ac:	065c2d09 	ldrbeq	r2, [ip], -r9, lsl #26
    47b0:	35cc0000 	strbcc	r0, [ip]
    47b4:	35c80000 	strbcc	r0, [r8]
    47b8:	da1c0000 	ble	7047c0 <__RAM_SIZE+0x6047c0>
    47bc:	1a10001f 	bne	404840 <__RAM_SIZE+0x304840>
    47c0:	4a100020 	bmi	404848 <__RAM_SIZE+0x304848>
    47c4:	1a00000b 	bne	47f8 <__HEAP_SIZE+0x37f8>
    47c8:	00000bbc 			; <UNDEFINED> instruction: 0x00000bbc
    47cc:	1009c801 	andne	ip, r9, r1, lsl #16
    47d0:	000000c0 	andeq	r0, r0, r0, asr #1
    47d4:	000035ee 	andeq	r3, r0, lr, ror #11
    47d8:	000035ea 	andeq	r3, r0, sl, ror #11
    47dc:	001fee1e 	andseq	lr, pc, lr, lsl lr	; <UNPREDICTABLE>
    47e0:	00237f10 	eoreq	r7, r3, r0, lsl pc
    47e4:	000b2300 	andeq	r2, fp, r0, lsl #6
    47e8:	50011f00 	andpl	r1, r1, r0, lsl #30
    47ec:	002c7502 	eoreq	r7, ip, r2, lsl #10
    47f0:	0020041e 	eoreq	r0, r0, lr, lsl r4
    47f4:	00057610 	andeq	r7, r5, r0, lsl r6
    47f8:	000b3700 	andeq	r3, fp, r0, lsl #14
    47fc:	50011f00 	andpl	r1, r1, r0, lsl #30
    4800:	00007502 	andeq	r7, r0, r2, lsl #10
    4804:	00200c1d 	eoreq	r0, r0, sp, lsl ip
    4808:	0023b910 	eoreq	fp, r3, r0, lsl r9
    480c:	20121d00 	andscs	r1, r2, r0, lsl #26
    4810:	23b91000 			; <UNDEFINED> instruction: 0x23b91000
    4814:	1c000000 	stcne	0, cr0, [r0], {-0}
    4818:	10002022 	andne	r2, r0, r2, lsr #32
    481c:	1000204e 	andne	r2, r0, lr, asr #32
    4820:	00000b8a 	andeq	r0, r0, sl, lsl #23
    4824:	00139b1a 	andseq	r9, r3, sl, lsl fp
    4828:	0a190100 	beq	644c30 <__RAM_SIZE+0x544c30>
    482c:	0000c010 	andeq	ip, r0, r0, lsl r0
    4830:	00361000 	eorseq	r1, r6, r0
    4834:	00360c00 	eorseq	r0, r6, r0, lsl #24
    4838:	203e1e00 	eorscs	r1, lr, r0, lsl #28
    483c:	237f1000 	cmncs	pc, #0
    4840:	0b800000 	bleq	fe004848 <__StackTop+0xc5f04848>
    4844:	011f0000 	tsteq	pc, r0
    4848:	10750250 	rsbsne	r0, r5, r0, asr r2
    484c:	20461d00 	subcs	r1, r6, r0, lsl #26
    4850:	23b91000 			; <UNDEFINED> instruction: 0x23b91000
    4854:	1d000000 	stcne	0, cr0, [r0, #-0]
    4858:	10001fda 	ldrdne	r1, [r0], -sl
    485c:	0000238e 	andeq	r2, r0, lr, lsl #7
    4860:	00201e1d 	eoreq	r1, r0, sp, lsl lr
    4864:	00239c10 	eoreq	r9, r3, r0, lsl ip
    4868:	20221d00 	eorcs	r1, r2, r0, lsl #26
    486c:	238e1000 	orrcs	r1, lr, #0
    4870:	521d0000 	andspl	r0, sp, #0
    4874:	9c100020 	ldcls	0, cr0, [r0], {32}
    4878:	00000023 	andeq	r0, r0, r3, lsr #32
    487c:	0012b026 	andseq	fp, r2, r6, lsr #32
    4880:	09a90100 	stmibeq	r9!, {r8}
    4884:	1f56010d 	svcne	0x0056010d
    4888:	1f7a1000 	svcne	0x007a1000
    488c:	362e1000 	strtcc	r1, [lr], -r0
    4890:	fe010000 	cdp2	0, 0, cr0, cr1, cr0, {0}
    4894:	1900000b 	stmdbne	r0, {r0, r1, r3}
    4898:	0000121c 	andeq	r1, r0, ip, lsl r2
    489c:	3309a901 	movwcc	sl, #39169	; 0x9901
    48a0:	0000065c 	andeq	r0, r0, ip, asr r6
    48a4:	00003662 	andeq	r3, r0, r2, ror #12
    48a8:	0000365a 	andeq	r3, r0, sl, asr r6
    48ac:	000cad19 	andeq	sl, ip, r9, lsl sp
    48b0:	09aa0100 	stmibeq	sl!, {r8}
    48b4:	0000a830 	andeq	sl, r0, r0, lsr r8
    48b8:	0036a100 	eorseq	sl, r6, r0, lsl #2
    48bc:	00369900 	eorseq	r9, r6, r0, lsl #18
    48c0:	1f761d00 	svcne	0x00761d00
    48c4:	23c81000 	biccs	r1, r8, #0
    48c8:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    48cc:	00000ddf 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    48d0:	13095601 	movwne	r5, #38401	; 0x9601
    48d4:	0000f301 	andeq	pc, r0, r1, lsl #6
    48d8:	001ee000 	andseq	lr, lr, r0
    48dc:	001f5610 	andseq	r5, pc, r0, lsl r6	; <UNPREDICTABLE>
    48e0:	0036d810 	eorseq	sp, r6, r0, lsl r8
    48e4:	0ca20100 	stfeqs	f0, [r2]
    48e8:	1c190000 	ldcne	0, cr0, [r9], {-0}
    48ec:	01000012 	tsteq	r0, r2, lsl r0
    48f0:	5c370956 			; <UNDEFINED> instruction: 0x5c370956
    48f4:	08000006 	stmdaeq	r0, {r1, r2}
    48f8:	f8000037 			; <UNDEFINED> instruction: 0xf8000037
    48fc:	19000036 	stmdbne	r0, {r1, r2, r4, r5}
    4900:	0000119e 	muleq	r0, lr, r1
    4904:	34095701 	strcc	r5, [r9], #-1793	; 0xfffff8ff
    4908:	000000b4 	strheq	r0, [r0], -r4
    490c:	00003778 	andeq	r3, r0, r8, ror r7
    4910:	00003768 	andeq	r3, r0, r8, ror #14
    4914:	00138219 	andseq	r8, r3, r9, lsl r2
    4918:	09580100 	ldmdbeq	r8, {r8}^
    491c:	0000ff38 	andeq	pc, r0, r8, lsr pc	; <UNPREDICTABLE>
    4920:	0037e800 	eorseq	lr, r7, r0, lsl #16
    4924:	0037e400 	eorseq	lr, r7, r0, lsl #8
    4928:	1a191a00 	bne	64b130 <__RAM_SIZE+0x54b130>
    492c:	5a010000 	bpl	44934 <__HEAP_SIZE+0x43934>
    4930:	00f31009 	rscseq	r1, r3, r9
    4934:	38100000 	ldmdacc	r0, {}	; <UNPREDICTABLE>
    4938:	38060000 	stmdacc	r6, {}	; <UNPREDICTABLE>
    493c:	db1a0000 	blle	684944 <__RAM_SIZE+0x584944>
    4940:	0100000c 	tsteq	r0, ip
    4944:	0411095b 	ldreq	r0, [r1], #-2395	; 0xfffff6a5
    4948:	58000001 	stmdapl	r0, {r0}
    494c:	52000038 	andpl	r0, r0, #56	; 0x38
    4950:	1d000038 	stcne	0, cr0, [r0, #-224]	; 0xffffff20
    4954:	10001efe 	strdne	r1, [r0], -lr
    4958:	000023d5 	ldrdeq	r2, [r0], -r5
    495c:	001f0c1d 	andseq	r0, pc, sp, lsl ip	; <UNPREDICTABLE>
    4960:	0023c810 	eoreq	ip, r3, r0, lsl r8
    4964:	1f281d00 	svcne	0x00281d00
    4968:	23c81000 	biccs	r1, r8, #0
    496c:	27000000 	strcs	r0, [r0, -r0]
    4970:	00000cb6 			; <UNDEFINED> instruction: 0x00000cb6
    4974:	18093d01 	stmdane	r9, {r0, r8, sl, fp, ip, sp}
    4978:	00010401 	andeq	r0, r1, r1, lsl #8
	...
    4984:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    4988:	000ceb01 	andeq	lr, ip, r1, lsl #22
    498c:	121c1900 	andsne	r1, ip, #0, 18
    4990:	3d010000 	stccc	0, cr0, [r1, #-0]
    4994:	06515409 	ldrbeq	r5, [r1], -r9, lsl #8
    4998:	38890000 	stmcc	r9, {}	; <UNPREDICTABLE>
    499c:	38830000 	stmcc	r3, {}	; <UNPREDICTABLE>
    49a0:	851a0000 	ldrhi	r0, [sl, #-0]
    49a4:	01000010 	tsteq	r0, r0, lsl r0
    49a8:	0415093f 	ldreq	r0, [r5], #-2367	; 0xfffff6c1
    49ac:	b7000001 	strlt	r0, [r0, -r1]
    49b0:	b5000038 	strlt	r0, [r0, #-56]	; 0xffffffc8
    49b4:	00000038 	andeq	r0, r0, r8, lsr r0
    49b8:	0f400124 	svceq	0x00400124
    49bc:	31010000 	mrscc	r0, (UNDEF: 1)
    49c0:	04010d09 	streq	r0, [r1], #-3337	; 0xfffff2f7
    49c4:	00000001 	andeq	r0, r0, r1
    49c8:	00000000 	andeq	r0, r0, r0
    49cc:	02000000 	andeq	r0, r0, #0
    49d0:	2001007d 	andcs	r0, r1, sp, ror r0
    49d4:	1900000d 	stmdbne	r0, {r0, r2, r3}
    49d8:	0000121d 	andeq	r1, r0, sp, lsl r2
    49dc:	32093101 	andcc	r3, r9, #1073741824	; 0x40000000
    49e0:	000003d2 	ldrdeq	r0, [r0], -r2
    49e4:	000038ce 	andeq	r3, r0, lr, asr #17
    49e8:	000038ca 	andeq	r3, r0, sl, asr #17
    49ec:	86012400 	strhi	r2, [r1], -r0, lsl #8
    49f0:	01000011 	tsteq	r0, r1, lsl r0
    49f4:	010d0927 	tsteq	sp, r7, lsr #18
    49f8:	00000104 	andeq	r0, r0, r4, lsl #2
	...
    4a04:	01007d02 	tsteq	r0, r2, lsl #26
    4a08:	00000d55 	andeq	r0, r0, r5, asr sp
    4a0c:	00121d19 	andseq	r1, r2, r9, lsl sp
    4a10:	09270100 	stmdbeq	r7!, {r8}
    4a14:	0003d234 	andeq	sp, r3, r4, lsr r2
    4a18:	0038f300 	eorseq	pc, r8, r0, lsl #6
    4a1c:	0038ef00 	eorseq	lr, r8, r0, lsl #30
    4a20:	01230000 			; <UNDEFINED> instruction: 0x01230000
    4a24:	00000c0e 	andeq	r0, r0, lr, lsl #24
    4a28:	0608ce01 	streq	ip, [r8], -r1, lsl #28
    4a2c:	00000001 	andeq	r0, r0, r1
    4a30:	00000000 	andeq	r0, r0, r0
    4a34:	00391400 	eorseq	r1, r9, r0, lsl #8
    4a38:	0da50100 	stfeqs	f0, [r5]
    4a3c:	1d190000 	ldcne	0, cr0, [r9, #-0]
    4a40:	01000012 	tsteq	r0, r2, lsl r0
    4a44:	d22208ce 	eorle	r0, r2, #13500416	; 0xce0000
    4a48:	3c000003 	stccc	0, cr0, [r0], {3}
    4a4c:	34000039 	strcc	r0, [r0], #-57	; 0xffffffc7
    4a50:	1a000039 	bne	4b3c <__HEAP_SIZE+0x3b3c>
    4a54:	0000121c 	andeq	r1, r0, ip, lsl r2
    4a58:	1508d001 	strne	sp, [r8, #-1]
    4a5c:	0000065c 	andeq	r0, r0, ip, asr r6
    4a60:	0000397e 	andeq	r3, r0, lr, ror r9
    4a64:	00003976 	andeq	r3, r0, r6, ror r9
    4a68:	0000001d 	andeq	r0, r0, sp, lsl r0
    4a6c:	0023e400 	eoreq	lr, r3, r0, lsl #8
    4a70:	01240000 			; <UNDEFINED> instruction: 0x01240000
    4a74:	00000e7b 	andeq	r0, r0, fp, ror lr
    4a78:	0d08be01 	stceq	14, cr11, [r8, #-4]
    4a7c:	00010401 	andeq	r0, r1, r1, lsl #8
	...
    4a88:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    4a8c:	000e0401 	andeq	r0, lr, r1, lsl #8
    4a90:	121d1900 	andsne	r1, sp, #0, 18
    4a94:	be010000 	cdplt	0, 0, cr0, cr1, cr0, {0}
    4a98:	03de4008 	bicseq	r4, lr, #8
    4a9c:	39bc0000 	ldmibcc	ip!, {}	; <UNPREDICTABLE>
    4aa0:	39b80000 	ldmibcc	r8!, {}	; <UNPREDICTABLE>
    4aa4:	051a0000 	ldreq	r0, [sl, #-0]
    4aa8:	0100000c 	tsteq	r0, ip
    4aac:	041108c0 	ldreq	r0, [r1], #-2240	; 0xfffff740
    4ab0:	df000001 	svcle	0x00000001
    4ab4:	dd000039 	stcle	0, cr0, [r0, #-228]	; 0xffffff1c
    4ab8:	1a000039 	bne	4ba4 <__HEAP_SIZE+0x3ba4>
    4abc:	0000121c 	andeq	r1, r0, ip, lsl r2
    4ac0:	1508c101 	strne	ip, [r8, #-257]	; 0xfffffeff
    4ac4:	0000065c 	andeq	r0, r0, ip, asr r6
    4ac8:	000039f6 	strdeq	r3, [r0], -r6
    4acc:	000039f2 	strdeq	r3, [r0], -r2
    4ad0:	a5012100 	strge	r2, [r1, #-256]	; 0xffffff00
    4ad4:	0100000b 	tsteq	r0, fp
    4ad8:	010d08a9 	smlatbeq	sp, r9, r8, r0
    4adc:	00000104 	andeq	r0, r0, r4, lsl #2
	...
    4ae8:	00003a17 	andeq	r3, r0, r7, lsl sl
    4aec:	000e7601 	andeq	r7, lr, r1, lsl #12
    4af0:	121d1900 	andsne	r1, sp, #0, 18
    4af4:	a9010000 	stmdbge	r1, {}	; <UNPREDICTABLE>
    4af8:	03de3908 	bicseq	r3, lr, #8, 18	; 0x20000
    4afc:	3a3d0000 	bcc	f44b04 <__RAM_SIZE+0xe44b04>
    4b00:	3a370000 	bcc	dc4b08 <__RAM_SIZE+0xcc4b08>
    4b04:	051a0000 	ldreq	r0, [sl, #-0]
    4b08:	0100000c 	tsteq	r0, ip
    4b0c:	041108ab 	ldreq	r0, [r1], #-2219	; 0xfffff755
    4b10:	6b000001 	blvs	4b1c <__HEAP_SIZE+0x3b1c>
    4b14:	6900003a 	stmdbvs	r0, {r1, r3, r4, r5}
    4b18:	1a00003a 	bne	4c08 <__HEAP_SIZE+0x3c08>
    4b1c:	0000121c 	andeq	r1, r0, ip, lsl r2
    4b20:	1508ac01 	strne	sl, [r8, #-3073]	; 0xfffff3ff
    4b24:	0000065c 	andeq	r0, r0, ip, asr r6
    4b28:	00003a84 	andeq	r3, r0, r4, lsl #21
    4b2c:	00003a7e 	andeq	r3, r0, lr, ror sl
    4b30:	0000001d 	andeq	r0, r0, sp, lsl r0
    4b34:	00238e00 	eoreq	r8, r3, r0, lsl #28
    4b38:	00001d00 	andeq	r1, r0, r0, lsl #26
    4b3c:	239c0000 	orrscs	r0, ip, #0
    4b40:	21000000 	mrscs	r0, (UNDEF: 0)
    4b44:	0011e401 	andseq	lr, r1, r1, lsl #8
    4b48:	08950100 	ldmeq	r5, {r8}
    4b4c:	0104010d 	tsteq	r4, sp, lsl #2
	...
    4b58:	3ab00000 	bcc	fec04b60 <__StackTop+0xc6b04b60>
    4b5c:	d3010000 	movwle	r0, #4096	; 0x1000
    4b60:	1900000e 	stmdbne	r0, {r1, r2, r3}
    4b64:	0000121d 	andeq	r1, r0, sp, lsl r2
    4b68:	39089501 	stmdbcc	r8, {r0, r8, sl, ip, pc}
    4b6c:	000003de 	ldrdeq	r0, [r0], -lr
    4b70:	00003ad6 	ldrdeq	r3, [r0], -r6
    4b74:	00003ad0 	ldrdeq	r3, [r0], -r0
    4b78:	000c051a 	andeq	r0, ip, sl, lsl r5
    4b7c:	08970100 	ldmeq	r7, {r8}
    4b80:	00010411 	andeq	r0, r1, r1, lsl r4
    4b84:	003b0400 	eorseq	r0, fp, r0, lsl #8
    4b88:	003b0200 	eorseq	r0, fp, r0, lsl #4
    4b8c:	00001d00 	andeq	r1, r0, r0, lsl #26
    4b90:	238e0000 	orrcs	r0, lr, #0
    4b94:	001d0000 	andseq	r0, sp, r0
    4b98:	9c000000 	stcls	0, cr0, [r0], {-0}
    4b9c:	00000023 	andeq	r0, r0, r3, lsr #32
    4ba0:	12850121 	addne	r0, r5, #1073741832	; 0x40000008
    4ba4:	57010000 	strpl	r0, [r1, -r0]
    4ba8:	f3010c08 			; <UNDEFINED> instruction: 0xf3010c08
	...
    4bb4:	17000000 	strne	r0, [r0, -r0]
    4bb8:	0100003b 	tsteq	r0, fp, lsr r0
    4bbc:	00000fa5 	andeq	r0, r0, r5, lsr #31
    4bc0:	00121d19 	andseq	r1, r2, r9, lsl sp
    4bc4:	08570100 	ldmdaeq	r7, {r8}^
    4bc8:	0003d22d 	andeq	sp, r3, sp, lsr #4
    4bcc:	003b4100 	eorseq	r4, fp, r0, lsl #2
    4bd0:	003b3700 	eorseq	r3, fp, r0, lsl #14
    4bd4:	0cad1900 			; <UNDEFINED> instruction: 0x0cad1900
    4bd8:	58010000 	stmdapl	r1, {}	; <UNPREDICTABLE>
    4bdc:	00a82c08 	adceq	r2, r8, r8, lsl #24
    4be0:	3b8a0000 	blcc	fe284be8 <__StackTop+0xc6184be8>
    4be4:	3b860000 	blcc	fe184bec <__StackTop+0xc6084bec>
    4be8:	191a0000 	ldmdbne	sl, {}	; <UNPREDICTABLE>
    4bec:	0100001a 	tsteq	r0, sl, lsl r0
    4bf0:	f310085a 	vceq.i16	q0, q0, q5
    4bf4:	ac000000 	stcge	0, cr0, [r0], {-0}
    4bf8:	a800003b 	stmdage	r0, {r0, r1, r3, r4, r5}
    4bfc:	1a00003b 	bne	4cf0 <__HEAP_SIZE+0x3cf0>
    4c00:	00000c26 	andeq	r0, r0, r6, lsr #24
    4c04:	11085b01 	tstne	r8, r1, lsl #22
    4c08:	00000104 	andeq	r0, r0, r4, lsl #2
    4c0c:	00003bd3 	ldrdeq	r3, [r0], -r3	; <UNPREDICTABLE>
    4c10:	00003bcb 	andeq	r3, r0, fp, asr #23
    4c14:	00104a1a 	andseq	r4, r0, sl, lsl sl
    4c18:	085c0100 	ldmdaeq	ip, {r8}^
    4c1c:	0004ed0e 	andeq	lr, r4, lr, lsl #26
    4c20:	003c0900 	eorseq	r0, ip, r0, lsl #18
    4c24:	003c0700 	eorseq	r0, ip, r0, lsl #14
    4c28:	121c1a00 	andsne	r1, ip, #0, 20
    4c2c:	5d010000 	stcpl	0, cr0, [r1, #-0]
    4c30:	065c1508 	ldrbeq	r1, [ip], -r8, lsl #10
    4c34:	3c260000 	stccc	0, cr0, [r6], #-0
    4c38:	3c1c0000 	ldccc	0, cr0, [ip], {-0}
    4c3c:	001d0000 	andseq	r0, sp, r0
    4c40:	f2000000 	vhadd.s8	d0, d0, d0
    4c44:	1e000023 	cdpne	0, 0, cr0, cr0, cr3, {1}
    4c48:	00000000 	andeq	r0, r0, r0
    4c4c:	00002400 	andeq	r2, r0, r0, lsl #8
    4c50:	00000f8e 	andeq	r0, r0, lr, lsl #31
    4c54:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    4c58:	20000075 	andcs	r0, r0, r5, ror r0
    4c5c:	00000000 	andeq	r0, r0, r0
    4c60:	00000baf 	andeq	r0, r0, pc, lsr #23
    4c64:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    4c68:	011f0074 	tsteq	pc, r4, ror r0	; <UNPREDICTABLE>
    4c6c:	00760251 	rsbseq	r0, r6, r1, asr r2
    4c70:	01210000 			; <UNDEFINED> instruction: 0x01210000
    4c74:	00000ac5 	andeq	r0, r0, r5, asr #21
    4c78:	0c07f301 	stceq	3, cr15, [r7], {1}
    4c7c:	0000f301 	andeq	pc, r0, r1, lsl #6
	...
    4c88:	003c6b00 	eorseq	r6, ip, r0, lsl #22
    4c8c:	10f10100 	rscsne	r0, r1, r0, lsl #2
    4c90:	1d190000 	ldcne	0, cr0, [r9, #-0]
    4c94:	01000012 	tsteq	r0, r2, lsl r0
    4c98:	d23007f3 	eorsle	r0, r0, #63700992	; 0x3cc0000
    4c9c:	a9000003 	stmdbge	r0, {r0, r1}
    4ca0:	8b00003c 	blhi	4d98 <__HEAP_SIZE+0x3d98>
    4ca4:	1900003c 	stmdbne	r0, {r2, r3, r4, r5}
    4ca8:	00000cad 	andeq	r0, r0, sp, lsr #25
    4cac:	2f07f401 	svccs	0x0007f401
    4cb0:	000000a8 	andeq	r0, r0, r8, lsr #1
    4cb4:	00003d6f 	andeq	r3, r0, pc, ror #26
    4cb8:	00003d6b 	andeq	r3, r0, fp, ror #26
    4cbc:	000af119 	andeq	pc, sl, r9, lsl r1	; <UNPREDICTABLE>
    4cc0:	07f50100 	ldrbeq	r0, [r5, r0, lsl #2]!
    4cc4:	0010f735 	andseq	pc, r0, r5, lsr r7	; <UNPREDICTABLE>
    4cc8:	003d9100 	eorseq	r9, sp, r0, lsl #2
    4ccc:	003d8d00 	eorseq	r8, sp, r0, lsl #26
    4cd0:	1a191a00 	bne	64b4d8 <__RAM_SIZE+0x54b4d8>
    4cd4:	f7010000 			; <UNDEFINED> instruction: 0xf7010000
    4cd8:	00f31007 	rscseq	r1, r3, r7
    4cdc:	3db10000 	ldccc	0, cr0, [r1]
    4ce0:	3daf0000 	stccc	0, cr0, [pc]	; 4ce8 <__HEAP_SIZE+0x3ce8>
    4ce4:	261a0000 	ldrcs	r0, [sl], -r0
    4ce8:	0100000c 	tsteq	r0, ip
    4cec:	041107f8 	ldreq	r0, [r1], #-2040	; 0xfffff808
    4cf0:	cc000001 	stcgt	0, cr0, [r0], {1}
    4cf4:	c400003d 	strgt	r0, [r0], #-61	; 0xffffffc3
    4cf8:	1a00003d 	bne	4df4 <__HEAP_SIZE+0x3df4>
    4cfc:	0000121c 	andeq	r1, r0, ip, lsl r2
    4d00:	1507f901 	strne	pc, [r7, #-2305]	; 0xfffff6ff
    4d04:	0000065c 	andeq	r0, r0, ip, asr r6
    4d08:	00003e1e 	andeq	r3, r0, lr, lsl lr
    4d0c:	00003e00 	andeq	r3, r0, r0, lsl #28
    4d10:	00037828 	andeq	r7, r3, r8, lsr #16
    4d14:	0010d700 	andseq	sp, r0, r0, lsl #14
    4d18:	0cdb1a00 	vldmiaeq	fp, {s3-s2}
    4d1c:	15010000 	strne	r0, [r1, #-0]
    4d20:	01151b08 	tsteq	r5, r8, lsl #22
    4d24:	3ee60000 	cdpcc	0, 14, cr0, cr6, cr0, {0}
    4d28:	3ee00000 	cdpcc	0, 14, cr0, cr0, cr0, {0}
    4d2c:	00290000 	eoreq	r0, r9, r0
    4d30:	00000000 	andeq	r0, r0, r0
    4d34:	1a000000 	bne	4d3c <__HEAP_SIZE+0x3d3c>
    4d38:	0000139b 	muleq	r0, fp, r3
    4d3c:	1a081a01 	bne	20b548 <__RAM_SIZE+0x10b548>
    4d40:	000000d1 	ldrdeq	r0, [r0], -r1
    4d44:	00003f17 	andeq	r3, r0, r7, lsl pc
    4d48:	00003f11 	andeq	r3, r0, r1, lsl pc
    4d4c:	0000001c 	andeq	r0, r0, ip, lsl r0
    4d50:	00000000 	andeq	r0, r0, r0
    4d54:	0010ab00 	andseq	sl, r0, r0, lsl #22
    4d58:	110a1a00 	tstne	sl, r0, lsl #20
    4d5c:	44010000 	strmi	r0, [r1], #-0
    4d60:	01151108 	tsteq	r5, r8, lsl #2
    4d64:	3f460000 	svccc	0x00460000
    4d68:	3f420000 	svccc	0x00420000
    4d6c:	001d0000 	andseq	r0, sp, r0
    4d70:	70000000 	andvc	r0, r0, r0
    4d74:	00000023 	andeq	r0, r0, r3, lsr #32
    4d78:	0000001e 	andeq	r0, r0, lr, lsl r0
    4d7c:	000baf00 	andeq	sl, fp, r0, lsl #30
    4d80:	0010c500 	andseq	ip, r0, r0, lsl #10
    4d84:	50011f00 	andpl	r1, r1, r0, lsl #30
    4d88:	1f007402 	svcne	0x00007402
    4d8c:	77025101 	strvc	r5, [r2, -r1, lsl #2]
    4d90:	00200000 	eoreq	r0, r0, r0
    4d94:	7f000000 	svcvc	0x00000000
    4d98:	1f000023 	svcne	0x00000023
    4d9c:	74025001 	strvc	r5, [r2], #-1
    4da0:	00000010 	andeq	r0, r0, r0, lsl r0
    4da4:	0000001d 	andeq	r0, r0, sp, lsl r0
    4da8:	0023f200 	eoreq	pc, r3, r0, lsl #4
    4dac:	00002000 	andeq	r2, r0, r0
    4db0:	24000000 	strcs	r0, [r0], #-0
    4db4:	011f0000 	tsteq	pc, r0
    4db8:	00750250 	rsbseq	r0, r5, r0, asr r2
    4dbc:	04070000 	streq	r0, [r7], #-0
    4dc0:	000000f3 	strdeq	r0, [r0], -r3
    4dc4:	0010f106 	andseq	pc, r0, r6, lsl #2
    4dc8:	2c012100 	stfcss	f2, [r1], {-0}
    4dcc:	0100000d 	tsteq	r0, sp
    4dd0:	010c0755 	tsteq	ip, r5, asr r7
    4dd4:	000000f3 	strdeq	r0, [r0], -r3
	...
    4de0:	00003f64 	andeq	r3, r0, r4, ror #30
    4de4:	00130601 	andseq	r0, r3, r1, lsl #12
    4de8:	121d1900 	andsne	r1, sp, #0, 18
    4dec:	55010000 	strpl	r0, [r1, #-0]
    4df0:	03d22607 	bicseq	r2, r2, #7340032	; 0x700000
    4df4:	3fac0000 	svccc	0x00ac0000
    4df8:	3fa80000 	svccc	0x00a80000
    4dfc:	ad190000 	ldcge	0, cr0, [r9, #-0]
    4e00:	0100000c 	tsteq	r0, ip
    4e04:	a8250756 	stmdage	r5!, {r1, r2, r4, r6, r8, r9, sl}
    4e08:	ce000000 	cdpgt	0, 0, cr0, cr0, cr0, {0}
    4e0c:	ca00003f 	bgt	4f10 <__HEAP_SIZE+0x3f10>
    4e10:	1900003f 	stmdbne	r0, {r0, r1, r2, r3, r4, r5}
    4e14:	000020e1 	andeq	r2, r0, r1, ror #1
    4e18:	23075701 	movwcs	r5, #30465	; 0x7701
    4e1c:	0000011a 	andeq	r0, r0, sl, lsl r1
    4e20:	00003fee 	andeq	r3, r0, lr, ror #31
    4e24:	00003fec 	andeq	r3, r0, ip, ror #31
    4e28:	000d371a 	andeq	r3, sp, sl, lsl r7
    4e2c:	07590100 	ldrbeq	r0, [r9, -r0, lsl #2]
    4e30:	0000f310 	andeq	pc, r0, r0, lsl r3	; <UNPREDICTABLE>
    4e34:	00400b00 	subeq	r0, r0, r0, lsl #22
    4e38:	00400100 	subeq	r0, r0, r0, lsl #2
    4e3c:	1c652200 	sfmne	f2, 2, [r5], #-0
    4e40:	5a010000 	bpl	44e48 <__HEAP_SIZE+0x43e48>
    4e44:	03c60f07 	biceq	r0, r6, #7, 30
    4e48:	91020000 	mrsls	r0, (UNDEF: 2)
    4e4c:	104a1a68 	subne	r1, sl, r8, ror #20
    4e50:	5b010000 	blpl	44e58 <__HEAP_SIZE+0x43e58>
    4e54:	04ed0e07 	strbteq	r0, [sp], #3591	; 0xe07
    4e58:	40500000 	subsmi	r0, r0, r0
    4e5c:	404c0000 	submi	r0, ip, r0
    4e60:	1c1a0000 	ldcne	0, cr0, [sl], {-0}
    4e64:	01000012 	tsteq	r0, r2, lsl r0
    4e68:	5c15075c 	ldcpl	7, cr0, [r5], {92}	; 0x5c
    4e6c:	72000006 	andvc	r0, r0, #6
    4e70:	6e000040 	cdpvs	0, 0, cr0, cr0, cr0, {2}
    4e74:	28000040 	stmdacs	r0, {r6}
    4e78:	00000358 	andeq	r0, r0, r8, asr r3
    4e7c:	00001222 	andeq	r1, r0, r2, lsr #4
    4e80:	000cdb1a 	andeq	sp, ip, sl, lsl fp
    4e84:	07720100 	ldrbeq	r0, [r2, -r0, lsl #2]!
    4e88:	0001151f 	andeq	r1, r1, pc, lsl r5
    4e8c:	00409400 	subeq	r9, r0, r0, lsl #8
    4e90:	00409000 	subeq	r9, r0, r0
    4e94:	00001e00 	andeq	r1, r0, r0, lsl #28
    4e98:	0baf0000 	bleq	febc4ea0 <__StackTop+0xc6ac4ea0>
    4e9c:	11e20000 	mvnne	r0, r0
    4ea0:	011f0000 	tsteq	pc, r0
    4ea4:	00740250 	rsbseq	r0, r4, r0, asr r2
    4ea8:	0251011f 	subseq	r0, r1, #-1073741817	; 0xc0000007
    4eac:	1d000076 	stcne	0, cr0, [r0, #-472]	; 0xfffffe28
    4eb0:	00000000 	andeq	r0, r0, r0
    4eb4:	0000239c 	muleq	r0, ip, r3
    4eb8:	0000001e 	andeq	r0, r0, lr, lsl r0
    4ebc:	00237f00 	eoreq	r7, r3, r0, lsl #30
    4ec0:	0011ff00 	andseq	pc, r1, r0, lsl #30
    4ec4:	50011f00 	andpl	r1, r1, r0, lsl #30
    4ec8:	002c7402 	eoreq	r7, ip, r2, lsl #8
    4ecc:	0000001d 	andeq	r0, r0, sp, lsl r0
    4ed0:	00240e00 	eoreq	r0, r4, r0, lsl #28
    4ed4:	00001d00 	andeq	r1, r0, r0, lsl #26
    4ed8:	239c0000 	orrscs	r0, ip, #0
    4edc:	00200000 	eoreq	r0, r0, r0
    4ee0:	1c000000 	stcne	0, cr0, [r0], {-0}
    4ee4:	1f000024 	svcne	0x00000024
    4ee8:	91025001 	tstls	r2, r1
    4eec:	1e000068 	cdpne	0, 0, cr0, cr0, cr8, {3}
    4ef0:	00000000 	andeq	r0, r0, r0
    4ef4:	00000abd 			; <UNDEFINED> instruction: 0x00000abd
    4ef8:	00001236 	andeq	r1, r0, r6, lsr r2
    4efc:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    4f00:	1d000074 	stcne	0, cr0, [r0, #-464]	; 0xfffffe30
    4f04:	00000000 	andeq	r0, r0, r0
    4f08:	0000242b 	andeq	r2, r0, fp, lsr #8
    4f0c:	0000001e 	andeq	r0, r0, lr, lsl r0
    4f10:	000abd00 	andeq	fp, sl, r0, lsl #26
    4f14:	00125300 	andseq	r5, r2, r0, lsl #6
    4f18:	50011f00 	andpl	r1, r1, r0, lsl #30
    4f1c:	00007402 	andeq	r7, r0, r2, lsl #8
    4f20:	0000001d 	andeq	r0, r0, sp, lsl r0
    4f24:	00242b00 	eoreq	r2, r4, r0, lsl #22
    4f28:	00001e00 	andeq	r1, r0, r0, lsl #28
    4f2c:	0a610000 	beq	1844f34 <__RAM_SIZE+0x1744f34>
    4f30:	12700000 	rsbsne	r0, r0, #0
    4f34:	011f0000 	tsteq	pc, r0
    4f38:	00740250 	rsbseq	r0, r4, r0, asr r2
    4f3c:	00001d00 	andeq	r1, r0, r0, lsl #26
    4f40:	238e0000 	orrcs	r0, lr, #0
    4f44:	001d0000 	andseq	r0, sp, r0
    4f48:	9c000000 	stcls	0, cr0, [r0], {-0}
    4f4c:	1d000023 	stcne	0, cr0, [r0, #-140]	; 0xffffff74
    4f50:	00000000 	andeq	r0, r0, r0
    4f54:	0000243a 	andeq	r2, r0, sl, lsr r4
    4f58:	0000001d 	andeq	r0, r0, sp, lsl r0
    4f5c:	00238e00 	eoreq	r8, r3, r0, lsl #28
    4f60:	00001d00 	andeq	r1, r0, r0, lsl #26
    4f64:	239c0000 	orrscs	r0, ip, #0
    4f68:	001e0000 	andseq	r0, lr, r0
    4f6c:	49000000 	stmdbmi	r0, {}	; <UNPREDICTABLE>
    4f70:	b7000024 	strlt	r0, [r0, -r4, lsr #32]
    4f74:	1f000012 	svcne	0x00000012
    4f78:	91025001 	tstls	r2, r1
    4f7c:	51011f68 	tstpl	r1, r8, ror #30
    4f80:	00649102 	rsbeq	r9, r4, r2, lsl #2
    4f84:	0000001e 	andeq	r0, r0, lr, lsl r0
    4f88:	000a6100 	andeq	r6, sl, r0, lsl #2
    4f8c:	0012cb00 	andseq	ip, r2, r0, lsl #22
    4f90:	50011f00 	andpl	r1, r1, r0, lsl #30
    4f94:	00007402 	andeq	r7, r0, r2, lsl #8
    4f98:	0000001e 	andeq	r0, r0, lr, lsl r0
    4f9c:	00245800 	eoreq	r5, r4, r0, lsl #16
    4fa0:	0012df00 	andseq	sp, r2, r0, lsl #30
    4fa4:	50011f00 	andpl	r1, r1, r0, lsl #30
    4fa8:	002c7402 	eoreq	r7, ip, r2, lsl #8
    4fac:	0000001e 	andeq	r0, r0, lr, lsl r0
    4fb0:	000abd00 	andeq	fp, sl, r0, lsl #26
    4fb4:	0012f300 	andseq	pc, r2, r0, lsl #6
    4fb8:	50011f00 	andpl	r1, r1, r0, lsl #30
    4fbc:	00007402 	andeq	r7, r0, r2, lsl #8
    4fc0:	0000001d 	andeq	r0, r0, sp, lsl r0
    4fc4:	00242b00 	eoreq	r2, r4, r0, lsl #22
    4fc8:	00001d00 	andeq	r1, r0, r0, lsl #26
    4fcc:	240e0000 	strcs	r0, [lr], #-0
    4fd0:	21000000 	mrscs	r0, (UNDEF: 0)
    4fd4:	000d9501 	andeq	r9, sp, r1, lsl #10
    4fd8:	06740100 	ldrbteq	r0, [r4], -r0, lsl #2
    4fdc:	00f3010c 	rscseq	r0, r3, ip, lsl #2
	...
    4fe8:	40b20000 	adcsmi	r0, r2, r0
    4fec:	57010000 	strpl	r0, [r1, -r0]
    4ff0:	19000015 	stmdbne	r0, {r0, r2, r4}
    4ff4:	0000121d 	andeq	r1, r0, sp, lsl r2
    4ff8:	2f067401 	svccs	0x00067401
    4ffc:	000003d2 	ldrdeq	r0, [r0], -r2
    5000:	000040fa 	strdeq	r4, [r0], -sl
    5004:	000040f6 	strdeq	r4, [r0], -r6
    5008:	0020e119 	eoreq	lr, r0, r9, lsl r1
    500c:	06750100 	ldrbteq	r0, [r5], -r0, lsl #2
    5010:	00011a2c 	andeq	r1, r1, ip, lsr #20
    5014:	00411a00 	subeq	r1, r1, r0, lsl #20
    5018:	00411800 	subeq	r1, r1, r0, lsl #16
    501c:	0d371a00 	vldmdbeq	r7!, {s2-s1}
    5020:	77010000 	strvc	r0, [r1, -r0]
    5024:	00f31006 	rscseq	r1, r3, r6
    5028:	41350000 	teqmi	r5, r0
    502c:	412d0000 			; <UNDEFINED> instruction: 0x412d0000
    5030:	65220000 	strvs	r0, [r2, #-0]!
    5034:	0100001c 	tsteq	r0, ip, lsl r0
    5038:	c60f0678 			; <UNDEFINED> instruction: 0xc60f0678
    503c:	02000003 	andeq	r0, r0, #3
    5040:	1c1a6891 	ldcne	8, cr6, [sl], {145}	; 0x91
    5044:	01000012 	tsteq	r0, r2, lsl r0
    5048:	5c150679 	ldcpl	6, cr0, [r5], {121}	; 0x79
    504c:	6f000006 	svcvs	0x00000006
    5050:	6b000041 	blvs	515c <__HEAP_SIZE+0x415c>
    5054:	1a000041 	bne	5160 <__HEAP_SIZE+0x4160>
    5058:	000010e3 	andeq	r1, r0, r3, ror #1
    505c:	14067c01 	strne	r7, [r6], #-3073	; 0xfffff3ff
    5060:	000000f3 	strdeq	r0, [r0], -r3
    5064:	00004195 	muleq	r0, r5, r1
    5068:	0000418d 	andeq	r4, r0, sp, lsl #3
    506c:	00033828 	andeq	r3, r3, r8, lsr #16
    5070:	00140600 	andseq	r0, r4, r0, lsl #12
    5074:	10b11a00 	adcsne	r1, r1, r0, lsl #20
    5078:	95010000 	strls	r0, [r1, #-0]
    507c:	01151f06 	tsteq	r5, r6, lsl #30
    5080:	41d40000 	bicsmi	r0, r4, r0
    5084:	41ca0000 	bicmi	r0, sl, r0
    5088:	001d0000 	andseq	r0, sp, r0
    508c:	9c000000 	stcls	0, cr0, [r0], {-0}
    5090:	1d000023 	stcne	0, cr0, [r0, #-140]	; 0xffffff74
    5094:	00000000 	andeq	r0, r0, r0
    5098:	00002467 	andeq	r2, r0, r7, ror #8
    509c:	0000001e 	andeq	r0, r0, lr, lsl r0
    50a0:	00237f00 	eoreq	r7, r3, r0, lsl #30
    50a4:	0013e300 	andseq	lr, r3, r0, lsl #6
    50a8:	50011f00 	andpl	r1, r1, r0, lsl #30
    50ac:	00107402 	andseq	r7, r0, r2, lsl #8
    50b0:	0000001d 	andeq	r0, r0, sp, lsl r0
    50b4:	00240e00 	eoreq	r0, r4, r0, lsl #28
    50b8:	00001d00 	andeq	r1, r0, r0, lsl #26
    50bc:	239c0000 	orrscs	r0, ip, #0
    50c0:	00200000 	eoreq	r0, r0, r0
    50c4:	1c000000 	stcne	0, cr0, [r0], {-0}
    50c8:	1f000024 	svcne	0x00000024
    50cc:	91025001 	tstls	r2, r1
    50d0:	1c000068 	stcne	0, cr0, [r0], {104}	; 0x68
	...
    50dc:	00001446 	andeq	r1, r0, r6, asr #8
    50e0:	0012971a 	andseq	r9, r2, sl, lsl r7
    50e4:	07300100 	ldreq	r0, [r0, -r0, lsl #2]!
    50e8:	00010429 	andeq	r0, r1, r9, lsr #8
    50ec:	00422500 	subeq	r2, r2, r0, lsl #10
    50f0:	00422100 	subeq	r2, r2, r0, lsl #2
    50f4:	00001e00 	andeq	r1, r0, r0, lsl #28
    50f8:	0ca20000 	stceq	0, cr0, [r2]
    50fc:	143c0000 	ldrtne	r0, [ip], #-0
    5100:	011f0000 	tsteq	pc, r0
    5104:	00740250 	rsbseq	r0, r4, r0, asr r2
    5108:	00001d00 	andeq	r1, r0, r0, lsl #26
    510c:	24760000 	ldrbtcs	r0, [r6], #-0
    5110:	1d000000 	stcne	0, cr0, [r0, #-0]
    5114:	00000000 	andeq	r0, r0, r0
    5118:	0000238e 	andeq	r2, r0, lr, lsl #7
    511c:	0000001d 	andeq	r0, r0, sp, lsl r0
    5120:	00248500 	eoreq	r8, r4, r0, lsl #10
    5124:	00001d00 	andeq	r1, r0, r0, lsl #26
    5128:	239c0000 	orrscs	r0, ip, #0
    512c:	001e0000 	andseq	r0, lr, r0
    5130:	bd000000 	stclt	0, cr0, [r0, #-0]
    5134:	7500000a 	strvc	r0, [r0, #-10]
    5138:	1f000014 	svcne	0x00000014
    513c:	74025001 	strvc	r5, [r2], #-1
    5140:	001d0000 	andseq	r0, sp, r0
    5144:	2b000000 	blcs	514c <__HEAP_SIZE+0x414c>
    5148:	1e000024 	cdpne	0, 0, cr0, cr0, cr4, {1}
    514c:	00000000 	andeq	r0, r0, r0
    5150:	00000abd 			; <UNDEFINED> instruction: 0x00000abd
    5154:	00001492 	muleq	r0, r2, r4
    5158:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    515c:	1d000074 	stcne	0, cr0, [r0, #-464]	; 0xfffffe30
    5160:	00000000 	andeq	r0, r0, r0
    5164:	0000242b 	andeq	r2, r0, fp, lsr #8
    5168:	0000001e 	andeq	r0, r0, lr, lsl r0
    516c:	000a6100 	andeq	r6, sl, r0, lsl #2
    5170:	0014af00 	andseq	sl, r4, r0, lsl #30
    5174:	50011f00 	andpl	r1, r1, r0, lsl #30
    5178:	00007402 	andeq	r7, r0, r2, lsl #8
    517c:	0000001d 	andeq	r0, r0, sp, lsl r0
    5180:	00238e00 	eoreq	r8, r3, r0, lsl #28
    5184:	00001d00 	andeq	r1, r0, r0, lsl #26
    5188:	239c0000 	orrscs	r0, ip, #0
    518c:	001d0000 	andseq	r0, sp, r0
    5190:	3a000000 	bcc	5198 <__HEAP_SIZE+0x4198>
    5194:	1d000024 	stcne	0, cr0, [r0, #-144]	; 0xffffff70
    5198:	00000000 	andeq	r0, r0, r0
    519c:	0000238e 	andeq	r2, r0, lr, lsl #7
    51a0:	0000001d 	andeq	r0, r0, sp, lsl r0
    51a4:	00239c00 	eoreq	r9, r3, r0, lsl #24
    51a8:	00001e00 	andeq	r1, r0, r0, lsl #28
    51ac:	24490000 	strbcs	r0, [r9], #-0
    51b0:	14f60000 	ldrbtne	r0, [r6], #0
    51b4:	011f0000 	tsteq	pc, r0
    51b8:	68910250 	ldmvs	r1, {r4, r6, r9}
    51bc:	0251011f 	subseq	r0, r1, #-1073741817	; 0xc0000007
    51c0:	1e006491 	mcrne	4, 0, r6, cr0, cr1, {4}
    51c4:	00000000 	andeq	r0, r0, r0
    51c8:	00000a61 	andeq	r0, r0, r1, ror #20
    51cc:	0000150a 	andeq	r1, r0, sl, lsl #10
    51d0:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    51d4:	1e000074 	mcrne	0, 0, r0, cr0, cr4, {3}
    51d8:	00000000 	andeq	r0, r0, r0
    51dc:	00002458 	andeq	r2, r0, r8, asr r4
    51e0:	0000151e 	andeq	r1, r0, lr, lsl r5
    51e4:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    51e8:	1e002c74 	mcrne	12, 0, r2, cr0, cr4, {3}
    51ec:	00000000 	andeq	r0, r0, r0
    51f0:	00000abd 			; <UNDEFINED> instruction: 0x00000abd
    51f4:	00001532 	andeq	r1, r0, r2, lsr r5
    51f8:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    51fc:	1d000074 	stcne	0, cr0, [r0, #-464]	; 0xfffffe30
    5200:	00000000 	andeq	r0, r0, r0
    5204:	0000242b 	andeq	r2, r0, fp, lsr #8
    5208:	0000001d 	andeq	r0, r0, sp, lsl r0
    520c:	00240e00 	eoreq	r0, r4, r0, lsl #28
    5210:	00001d00 	andeq	r1, r0, r0, lsl #26
    5214:	238e0000 	orrcs	r0, lr, #0
    5218:	001d0000 	andseq	r0, sp, r0
    521c:	9c000000 	stcls	0, cr0, [r0], {-0}
    5220:	00000023 	andeq	r0, r0, r3, lsr #32
    5224:	0ab70121 	beq	fedc56b0 <__StackTop+0xc6cc56b0>
    5228:	de010000 	cdple	0, 0, cr0, cr1, cr0, {0}
    522c:	f3010c05 			; <UNDEFINED> instruction: 0xf3010c05
    5230:	38000000 	stmdacc	r0, {}	; <UNPREDICTABLE>
    5234:	28100021 	ldmdacs	r0, {r0, r5}
    5238:	43100022 	tstmi	r0, #34	; 0x22
    523c:	01000042 	tsteq	r0, r2, asr #32
    5240:	0000174c 	andeq	r1, r0, ip, asr #14
    5244:	00121d19 	andseq	r1, r2, r9, lsl sp
    5248:	05de0100 	ldrbeq	r0, [lr, #256]	; 0x100
    524c:	0003d229 	andeq	sp, r3, r9, lsr #4
    5250:	00428b00 	subeq	r8, r2, r0, lsl #22
    5254:	00428700 	subeq	r8, r2, r0, lsl #14
    5258:	0cad1900 			; <UNDEFINED> instruction: 0x0cad1900
    525c:	df010000 	svcle	0x00010000
    5260:	00a82805 	adceq	r2, r8, r5, lsl #16
    5264:	42ad0000 	adcmi	r0, sp, #0
    5268:	42a90000 	adcmi	r0, r9, #0
    526c:	e1190000 	tst	r9, r0
    5270:	01000020 	tsteq	r0, r0, lsr #32
    5274:	1a2605e0 	bne	9869fc <__RAM_SIZE+0x8869fc>
    5278:	cd000001 	stcgt	0, cr0, [r0, #-4]
    527c:	cb000042 	blgt	538c <__HEAP_SIZE+0x438c>
    5280:	1a000042 	bne	5390 <__HEAP_SIZE+0x4390>
    5284:	00000d37 	andeq	r0, r0, r7, lsr sp
    5288:	1005e201 	andne	lr, r5, r1, lsl #4
    528c:	000000f3 	strdeq	r0, [r0], -r3
    5290:	000042e8 	andeq	r4, r0, r8, ror #5
    5294:	000042e0 	andeq	r4, r0, r0, ror #5
    5298:	001c6522 	andseq	r6, ip, r2, lsr #10
    529c:	05e30100 	strbeq	r0, [r3, #256]!	; 0x100
    52a0:	0003c60f 	andeq	ip, r3, pc, lsl #12
    52a4:	60910200 	addsvs	r0, r1, r0, lsl #4
    52a8:	00121c1a 	andseq	r1, r2, sl, lsl ip
    52ac:	05e40100 	strbeq	r0, [r4, #256]!	; 0x100
    52b0:	00065c15 	andeq	r5, r6, r5, lsl ip
    52b4:	00432200 	subeq	r2, r3, r0, lsl #4
    52b8:	00431e00 	subeq	r1, r3, r0, lsl #28
    52bc:	03182800 	tsteq	r8, #0, 16
    52c0:	16680000 	strbtne	r0, [r8], -r0
    52c4:	db1a0000 	blle	6852cc <__RAM_SIZE+0x5852cc>
    52c8:	0100000c 	tsteq	r0, ip
    52cc:	151f05fa 	ldrne	r0, [pc, #-1530]	; 4cda <__HEAP_SIZE+0x3cda>
    52d0:	4a000001 	bmi	52dc <__HEAP_SIZE+0x42dc>
    52d4:	40000043 	andmi	r0, r0, r3, asr #32
    52d8:	1e000043 	cdpne	0, 0, cr0, cr0, cr3, {2}
    52dc:	1000214e 	andne	r2, r0, lr, asr #2
    52e0:	00000baf 	andeq	r0, r0, pc, lsr #23
    52e4:	00001628 	andeq	r1, r0, r8, lsr #12
    52e8:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    52ec:	011f0074 	tsteq	pc, r4, ror r0	; <UNPREDICTABLE>
    52f0:	00770251 	rsbseq	r0, r7, r1, asr r2
    52f4:	215a1d00 	cmpcs	sl, r0, lsl #26
    52f8:	239c1000 	orrscs	r1, ip, #0
    52fc:	681e0000 	ldmdavs	lr, {}	; <UNPREDICTABLE>
    5300:	7f100021 	svcvc	0x00100021
    5304:	45000023 	strmi	r0, [r0, #-35]	; 0xffffffdd
    5308:	1f000016 	svcne	0x00000016
    530c:	74025001 	strvc	r5, [r2], #-1
    5310:	701d0010 	andsvc	r0, sp, r0, lsl r0
    5314:	0e100021 	cdpeq	0, 1, cr0, cr0, cr1, {1}
    5318:	1d000024 	stcne	0, cr0, [r0, #-144]	; 0xffffff70
    531c:	10002176 	andne	r2, r0, r6, ror r1
    5320:	0000239c 	muleq	r0, ip, r3
    5324:	00218020 	eoreq	r8, r1, r0, lsr #32
    5328:	00241c10 	eoreq	r1, r4, r0, lsl ip
    532c:	50011f00 	andpl	r1, r1, r0, lsl #30
    5330:	00609102 	rsbeq	r9, r0, r2, lsl #2
    5334:	219a1e00 	orrscs	r1, sl, r0, lsl #28
    5338:	0abd1000 	beq	fef49340 <__StackTop+0xc6e49340>
    533c:	167c0000 	ldrbtne	r0, [ip], -r0
    5340:	011f0000 	tsteq	pc, r0
    5344:	00740250 	rsbseq	r0, r4, r0, asr r2
    5348:	219e1d00 	orrscs	r1, lr, r0, lsl #26
    534c:	242b1000 	strtcs	r1, [fp], #-0
    5350:	a61e0000 	ldrge	r0, [lr], -r0
    5354:	bd100021 	ldclt	0, cr0, [r0, #-132]	; 0xffffff7c
    5358:	9900000a 	stmdbls	r0, {r1, r3}
    535c:	1f000016 	svcne	0x00000016
    5360:	74025001 	strvc	r5, [r2], #-1
    5364:	aa1d0000 	bge	74536c <__RAM_SIZE+0x64536c>
    5368:	2b100021 	blcs	4053f4 <__RAM_SIZE+0x3053f4>
    536c:	1e000024 	cdpne	0, 0, cr0, cr0, cr4, {1}
    5370:	100021b0 			; <UNDEFINED> instruction: 0x100021b0
    5374:	00000a61 	andeq	r0, r0, r1, ror #20
    5378:	000016b6 			; <UNDEFINED> instruction: 0x000016b6
    537c:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    5380:	1d000074 	stcne	0, cr0, [r0, #-464]	; 0xfffffe30
    5384:	100021b8 			; <UNDEFINED> instruction: 0x100021b8
    5388:	0000238e 	andeq	r2, r0, lr, lsl #7
    538c:	0021cc1d 	eoreq	ip, r1, sp, lsl ip
    5390:	00239c10 	eoreq	r9, r3, r0, lsl ip
    5394:	21d01d00 	bicscs	r1, r0, r0, lsl #26
    5398:	243a1000 	ldrtcs	r1, [sl], #-0
    539c:	d41d0000 	ldrle	r0, [sp], #-0
    53a0:	8e100021 	cdphi	0, 1, cr0, cr0, cr1, {1}
    53a4:	1d000023 	stcne	0, cr0, [r0, #-140]	; 0xffffff74
    53a8:	100021f0 	strdne	r2, [r0], -r0
    53ac:	0000239c 	muleq	r0, ip, r3
    53b0:	0021f81e 	eoreq	pc, r1, lr, lsl r8	; <UNPREDICTABLE>
    53b4:	00244910 	eoreq	r4, r4, r0, lsl r9
    53b8:	0016fd00 	andseq	pc, r6, r0, lsl #26
    53bc:	50011f00 	andpl	r1, r1, r0, lsl #30
    53c0:	1f609102 	svcne	0x00609102
    53c4:	91025101 	tstls	r2, r1, lsl #2
    53c8:	021e005c 	andseq	r0, lr, #92	; 0x5c
    53cc:	61100022 	tstvs	r0, r2, lsr #32
    53d0:	1100000a 	tstne	r0, sl
    53d4:	1f000017 	svcne	0x00000017
    53d8:	74025001 	strvc	r5, [r2], #-1
    53dc:	101e0000 	andsne	r0, lr, r0
    53e0:	58100022 	ldmdapl	r0, {r1, r5}
    53e4:	25000024 	strcs	r0, [r0, #-36]	; 0xffffffdc
    53e8:	1f000017 	svcne	0x00000017
    53ec:	74025001 	strvc	r5, [r2], #-1
    53f0:	161e002c 	ldrne	r0, [lr], -ip, lsr #32
    53f4:	bd100022 	ldclt	0, cr0, [r0, #-136]	; 0xffffff78
    53f8:	3900000a 	stmdbcc	r0, {r1, r3}
    53fc:	1f000017 	svcne	0x00000017
    5400:	74025001 	strvc	r5, [r2], #-1
    5404:	1a1d0000 	bne	74540c <__RAM_SIZE+0x64540c>
    5408:	2b100022 	blcs	405498 <__RAM_SIZE+0x305498>
    540c:	1d000024 	stcne	0, cr0, [r0, #-144]	; 0xffffff70
    5410:	10002222 	andne	r2, r0, r2, lsr #4
    5414:	0000240e 	andeq	r2, r0, lr, lsl #8
    5418:	f6012100 			; <UNDEFINED> instruction: 0xf6012100
    541c:	0100000e 	tsteq	r0, lr
    5420:	010c0531 	tsteq	ip, r1, lsr r5
    5424:	000000f3 	strdeq	r0, [r0], -r3
	...
    5430:	0000438d 	andeq	r4, r0, sp, lsl #7
    5434:	00187901 	andseq	r7, r8, r1, lsl #18
    5438:	121d1900 	andsne	r1, sp, #0, 18
    543c:	31010000 	mrscc	r0, (UNDEF: 1)
    5440:	03d22d05 	bicseq	r2, r2, #320	; 0x140
    5444:	43d70000 	bicsmi	r0, r7, #0
    5448:	43ad0000 			; <UNDEFINED> instruction: 0x43ad0000
    544c:	f1190000 			; <UNDEFINED> instruction: 0xf1190000
    5450:	0100000a 	tsteq	r0, sl
    5454:	f7320532 			; <UNDEFINED> instruction: 0xf7320532
    5458:	e8000010 	stmda	r0, {r4}
    545c:	e4000044 	str	r0, [r0], #-68	; 0xffffffbc
    5460:	1a000044 	bne	5578 <__HEAP_SIZE+0x4578>
    5464:	00001a19 	andeq	r1, r0, r9, lsl sl
    5468:	10053401 	andne	r3, r5, r1, lsl #8
    546c:	000000f3 	strdeq	r0, [r0], -r3
    5470:	00004508 	andeq	r4, r0, r8, lsl #10
    5474:	00004506 	andeq	r4, r0, r6, lsl #10
    5478:	000c261a 	andeq	r2, ip, sl, lsl r6
    547c:	05350100 	ldreq	r0, [r5, #-256]!	; 0xffffff00
    5480:	00010411 	andeq	r0, r1, r1, lsl r4
    5484:	00452b00 	subeq	r2, r5, r0, lsl #22
    5488:	00451b00 	subeq	r1, r5, r0, lsl #22
    548c:	121c1a00 	andsne	r1, ip, #0, 20
    5490:	36010000 	strcc	r0, [r1], -r0
    5494:	065c1505 	ldrbeq	r1, [ip], -r5, lsl #10
    5498:	45b50000 	ldrmi	r0, [r5, #0]!
    549c:	458b0000 	strmi	r0, [fp]
    54a0:	e8280000 	stmda	r8!, {}	; <UNPREDICTABLE>
    54a4:	5f000002 	svcpl	0x00000002
    54a8:	1a000018 	bne	5510 <__HEAP_SIZE+0x4510>
    54ac:	00000cdb 	ldrdeq	r0, [r0], -fp
    54b0:	1b056001 	blne	15d4bc <__RAM_SIZE+0x5d4bc>
    54b4:	00000115 	andeq	r0, r0, r5, lsl r1
    54b8:	000046d2 	ldrdeq	r4, [r0], -r2
    54bc:	000046c2 	andeq	r4, r0, r2, asr #13
    54c0:	0003001b 	andeq	r0, r3, fp, lsl r0
    54c4:	0bbc1a00 	bleq	fef0bccc <__StackTop+0xc6e0bccc>
    54c8:	67010000 	strvs	r0, [r1, -r0]
    54cc:	00d11a05 	sbcseq	r1, r1, r5, lsl #20
    54d0:	47560000 	ldrbmi	r0, [r6, -r0]
    54d4:	47500000 	ldrbmi	r0, [r0, -r0]
    54d8:	001c0000 	andseq	r0, ip, r0
    54dc:	00000000 	andeq	r0, r0, r0
    54e0:	39000000 	stmdbcc	r0, {}	; <UNPREDICTABLE>
    54e4:	1a000018 	bne	554c <__HEAP_SIZE+0x454c>
    54e8:	0000110a 	andeq	r1, r0, sl, lsl #2
    54ec:	1105cb01 	tstne	r5, r1, lsl #22
    54f0:	00000115 	andeq	r0, r0, r5, lsl r1
    54f4:	00004785 	andeq	r4, r0, r5, lsl #15
    54f8:	00004781 	andeq	r4, r0, r1, lsl #15
    54fc:	0000001d 	andeq	r0, r0, sp, lsl r0
    5500:	00237000 	eoreq	r7, r3, r0
    5504:	001e0000 	andseq	r0, lr, r0
    5508:	76000000 	strvc	r0, [r0], -r0
    550c:	4d000005 	stcmi	0, cr0, [r0, #-20]	; 0xffffffec
    5510:	1f000018 	svcne	0x00000018
    5514:	74025001 	strvc	r5, [r2], #-1
    5518:	00200000 	eoreq	r0, r0, r0
    551c:	7f000000 	svcvc	0x00000000
    5520:	1f000023 	svcne	0x00000023
    5524:	74025001 	strvc	r5, [r2], #-1
    5528:	0000002c 	andeq	r0, r0, ip, lsr #32
    552c:	0000001d 	andeq	r0, r0, sp, lsl r0
    5530:	0023f200 	eoreq	pc, r3, r0, lsl #4
    5534:	00002000 	andeq	r2, r0, r0
    5538:	24000000 	strcs	r0, [r0], #-0
    553c:	011f0000 	tsteq	pc, r0
    5540:	00750250 	rsbseq	r0, r5, r0, asr r2
    5544:	01210000 			; <UNDEFINED> instruction: 0x01210000
    5548:	00000b51 	andeq	r0, r0, r1, asr fp
    554c:	0c048501 	cfstr32eq	mvfx8, [r4], {1}
    5550:	0000f301 	andeq	pc, r0, r1, lsl #6
	...
    555c:	0047a300 	subeq	sl, r7, r0, lsl #6
    5560:	19ee0100 	stmibne	lr!, {r8}^
    5564:	1d190000 	ldcne	0, cr0, [r9, #-0]
    5568:	01000012 	tsteq	r0, r2, lsl r0
    556c:	d2340485 	eorsle	r0, r4, #-2063597568	; 0x85000000
    5570:	f1000003 	cps	#3
    5574:	c3000047 	movwgt	r0, #71	; 0x47
    5578:	19000047 	stmdbne	r0, {r0, r1, r2, r6}
    557c:	0000119e 	muleq	r0, lr, r1
    5580:	39048601 	stmdbcc	r4, {r0, r9, sl, pc}
    5584:	000000ba 	strheq	r0, [r0], -sl
    5588:	0000491b 	andeq	r4, r0, fp, lsl r9
    558c:	00004917 	andeq	r4, r0, r7, lsl r9
    5590:	000af119 	andeq	pc, sl, r9, lsl r1	; <UNPREDICTABLE>
    5594:	04870100 	streq	r0, [r7], #256	; 0x100
    5598:	0010f739 	andseq	pc, r0, r9, lsr r7	; <UNPREDICTABLE>
    559c:	00493d00 	subeq	r3, r9, r0, lsl #26
    55a0:	00493900 	subeq	r3, r9, r0, lsl #18
    55a4:	0bf71900 	bleq	ffdcb9ac <__StackTop+0xc7ccb9ac>
    55a8:	88010000 	stmdahi	r1, {}	; <UNPREDICTABLE>
    55ac:	00ff3704 	rscseq	r3, pc, r4, lsl #14
    55b0:	495f0000 	ldmdbmi	pc, {}^	; <UNPREDICTABLE>
    55b4:	495b0000 	ldmdbmi	fp, {}^	; <UNPREDICTABLE>
    55b8:	191a0000 	ldmdbne	sl, {}	; <UNPREDICTABLE>
    55bc:	0100001a 	tsteq	r0, sl, lsl r0
    55c0:	f310048a 	vshl.u16	d0, d10, d16
    55c4:	7f000000 	svcvc	0x00000000
    55c8:	7d000049 	stcvc	0, cr0, [r0, #-292]	; 0xfffffedc
    55cc:	1a000049 	bne	56f8 <__HEAP_SIZE+0x46f8>
    55d0:	00000c26 	andeq	r0, r0, r6, lsr #24
    55d4:	11048b01 	tstne	r4, r1, lsl #22
    55d8:	00000104 	andeq	r0, r0, r4, lsl #2
    55dc:	0000499a 	muleq	r0, sl, r9
    55e0:	00004992 	muleq	r0, r2, r9
    55e4:	00121c1a 	andseq	r1, r2, sl, lsl ip
    55e8:	048c0100 	streq	r0, [ip], #256	; 0x100
    55ec:	00065c15 	andeq	r5, r6, r5, lsl ip
    55f0:	0049fc00 	subeq	pc, r9, r0, lsl #24
    55f4:	0049ce00 	subeq	ip, r9, r0, lsl #28
    55f8:	00001c00 	andeq	r1, r0, r0, lsl #24
    55fc:	00000000 	andeq	r0, r0, r0
    5600:	19d40000 	ldmibne	r4, {}^	; <UNPREDICTABLE>
    5604:	bc1a0000 	ldclt	0, cr0, [sl], {-0}
    5608:	0100000b 	tsteq	r0, fp
    560c:	d11a04b0 			; <UNDEFINED> instruction: 0xd11a04b0
    5610:	28000000 	stmdacs	r0, {}	; <UNPREDICTABLE>
    5614:	2200004b 	andcs	r0, r0, #75	; 0x4b
    5618:	1a00004b 	bne	574c <__HEAP_SIZE+0x474c>
    561c:	00000e99 	muleq	r0, r9, lr
    5620:	1f04b101 	svcne	0x0004b101
    5624:	00000115 	andeq	r0, r0, r5, lsl r1
    5628:	00004b55 	andeq	r4, r0, r5, asr fp
    562c:	00004b53 	andeq	r4, r0, r3, asr fp
    5630:	0000001c 	andeq	r0, r0, ip, lsl r0
    5634:	00000000 	andeq	r0, r0, r0
    5638:	00198f00 	andseq	r8, r9, r0, lsl #30
    563c:	110a1a00 	tstne	sl, r0, lsl #20
    5640:	1e010000 	cdpne	0, 0, cr0, cr1, cr0, {0}
    5644:	01151105 	tsteq	r5, r5, lsl #2
    5648:	4b6c0000 	blmi	1b05650 <__RAM_SIZE+0x1a05650>
    564c:	4b680000 	blmi	1a05654 <__RAM_SIZE+0x1905654>
    5650:	001d0000 	andseq	r0, sp, r0
    5654:	70000000 	andvc	r0, r0, r0
    5658:	00000023 	andeq	r0, r0, r3, lsr #32
    565c:	0000001e 	andeq	r0, r0, lr, lsl r0
    5660:	000bfe00 	andeq	pc, fp, r0, lsl #28
    5664:	0019af00 	andseq	sl, r9, r0, lsl #30
    5668:	50011f00 	andpl	r1, r1, r0, lsl #30
    566c:	1f007402 	svcne	0x00007402
    5670:	77025101 	strvc	r5, [r2, -r1, lsl #2]
    5674:	52011f00 	andpl	r1, r1, #0, 30
    5678:	00007502 	andeq	r7, r0, r2, lsl #10
    567c:	0000001e 	andeq	r0, r0, lr, lsl r0
    5680:	00057600 	andeq	r7, r5, r0, lsl #12
    5684:	0019c300 	andseq	ip, r9, r0, lsl #6
    5688:	50011f00 	andpl	r1, r1, r0, lsl #30
    568c:	00007402 	andeq	r7, r0, r2, lsl #8
    5690:	00000020 	andeq	r0, r0, r0, lsr #32
    5694:	00237f00 	eoreq	r7, r3, r0, lsl #30
    5698:	50011f00 	andpl	r1, r1, r0, lsl #30
    569c:	002c7402 	eoreq	r7, ip, r2, lsl #8
    56a0:	00001d00 	andeq	r1, r0, r0, lsl #26
    56a4:	23f20000 	mvnscs	r0, #0
    56a8:	00200000 	eoreq	r0, r0, r0
    56ac:	00000000 	andeq	r0, r0, r0
    56b0:	1f000024 	svcne	0x00000024
    56b4:	76025001 	strvc	r5, [r2], -r1
    56b8:	21000000 	mrscs	r0, (UNDEF: 0)
    56bc:	000df201 	andeq	pc, sp, r1, lsl #4
    56c0:	03ab0100 			; <UNDEFINED> instruction: 0x03ab0100
    56c4:	00f3010c 	rscseq	r0, r3, ip, lsl #2
	...
    56d0:	4b8a0000 	blmi	fe2856d8 <__StackTop+0xc61856d8>
    56d4:	29010000 	stmdbcs	r1, {}	; <UNPREDICTABLE>
    56d8:	1900001c 	stmdbne	r0, {r2, r3, r4}
    56dc:	0000121d 	andeq	r1, r0, sp, lsl r2
    56e0:	2d03ab01 	vstrcs	d10, [r3, #-4]
    56e4:	000003d2 	ldrdeq	r0, [r0], -r2
    56e8:	00004bd2 	ldrdeq	r4, [r0], -r2
    56ec:	00004bce 	andeq	r4, r0, lr, asr #23
    56f0:	00119e19 	andseq	r9, r1, r9, lsl lr
    56f4:	03ac0100 			; <UNDEFINED> instruction: 0x03ac0100
    56f8:	0000ba32 	andeq	fp, r0, r2, lsr sl
    56fc:	004bf400 	subeq	pc, fp, r0, lsl #8
    5700:	004bf000 	subeq	pc, fp, r0
    5704:	20e11900 	rsccs	r1, r1, r0, lsl #18
    5708:	ad010000 	stcge	0, cr0, [r1, #-0]
    570c:	011a2a03 	tsteq	sl, r3, lsl #20
    5710:	4c140000 	ldcmi	0, cr0, [r4], {-0}
    5714:	4c120000 	ldcmi	0, cr0, [r2], {-0}
    5718:	f7190000 			; <UNDEFINED> instruction: 0xf7190000
    571c:	0100000b 	tsteq	r0, fp
    5720:	ff3003ae 			; <UNDEFINED> instruction: 0xff3003ae
    5724:	2b000000 	blcs	572c <__HEAP_SIZE+0x472c>
    5728:	2700004c 	strcs	r0, [r0, -ip, asr #32]
    572c:	1a00004c 	bne	5864 <__HEAP_SIZE+0x4864>
    5730:	00000d37 	andeq	r0, r0, r7, lsr sp
    5734:	1003b001 	andne	fp, r3, r1
    5738:	000000f3 	strdeq	r0, [r0], -r3
    573c:	00004c53 	andeq	r4, r0, r3, asr ip
    5740:	00004c49 	andeq	r4, r0, r9, asr #24
    5744:	000c5f1a 	andeq	r5, ip, sl, lsl pc
    5748:	03b00100 	movseq	r0, #0, 2
    574c:	0000f329 	andeq	pc, r0, r9, lsr #6
    5750:	004c9a00 	subeq	r9, ip, r0, lsl #20
    5754:	004c9400 	subeq	r9, ip, r0, lsl #8
    5758:	1c652200 	sfmne	f2, 2, [r5], #-0
    575c:	b1010000 	mrslt	r0, (UNDEF: 1)
    5760:	03c60f03 	biceq	r0, r6, #3, 30
    5764:	91020000 	mrsls	r0, (UNDEF: 2)
    5768:	121c1a60 	andsne	r1, ip, #96, 20	; 0x60000
    576c:	b2010000 	andlt	r0, r1, #0
    5770:	065c1503 	ldrbeq	r1, [ip], -r3, lsl #10
    5774:	4cc70000 	stclmi	0, cr0, [r7], {0}
    5778:	4cc30000 	stclmi	0, cr0, [r3], {0}
    577c:	d0280000 	eorle	r0, r8, r0
    5780:	33000002 	movwcc	r0, #2
    5784:	1a00001b 	bne	57f8 <__HEAP_SIZE+0x47f8>
    5788:	00000e99 	muleq	r0, r9, lr
    578c:	2703cd01 	strcs	ip, [r3, -r1, lsl #26]
    5790:	00000115 	andeq	r0, r0, r5, lsl r1
    5794:	00004ce9 	andeq	r4, r0, r9, ror #25
    5798:	00004ce5 	andeq	r4, r0, r5, ror #25
    579c:	0000001e 	andeq	r0, r0, lr, lsl r0
    57a0:	000bfe00 	andeq	pc, fp, r0, lsl #28
    57a4:	001aef00 	andseq	lr, sl, r0, lsl #30
    57a8:	50011f00 	andpl	r1, r1, r0, lsl #30
    57ac:	1f007402 	svcne	0x00007402
    57b0:	77025101 	strvc	r5, [r2, -r1, lsl #2]
    57b4:	52011f00 	andpl	r1, r1, #0, 30
    57b8:	00007502 	andeq	r7, r0, r2, lsl #10
    57bc:	0000001e 	andeq	r0, r0, lr, lsl r0
    57c0:	00057600 	andeq	r7, r5, r0, lsl #12
    57c4:	001b0300 	andseq	r0, fp, r0, lsl #6
    57c8:	50011f00 	andpl	r1, r1, r0, lsl #30
    57cc:	00007402 	andeq	r7, r0, r2, lsl #8
    57d0:	0000001d 	andeq	r0, r0, sp, lsl r0
    57d4:	00240e00 	eoreq	r0, r4, r0, lsl #28
    57d8:	00001d00 	andeq	r1, r0, r0, lsl #26
    57dc:	240e0000 	strcs	r0, [lr], #-0
    57e0:	001e0000 	andseq	r0, lr, r0
    57e4:	7f000000 	svcvc	0x00000000
    57e8:	29000023 	stmdbcs	r0, {r0, r1, r5}
    57ec:	1f00001b 	svcne	0x0000001b
    57f0:	74025001 	strvc	r5, [r2], #-1
    57f4:	001d002c 	andseq	r0, sp, ip, lsr #32
    57f8:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
    57fc:	00000024 	andeq	r0, r0, r4, lsr #32
    5800:	0000001d 	andeq	r0, r0, sp, lsl r0
    5804:	00239c00 	eoreq	r9, r3, r0, lsl #24
    5808:	00001d00 	andeq	r1, r0, r0, lsl #26
    580c:	239c0000 	orrscs	r0, ip, #0
    5810:	001e0000 	andseq	r0, lr, r0
    5814:	1c000000 	stcne	0, cr0, [r0], {-0}
    5818:	59000024 	stmdbpl	r0, {r2, r5}
    581c:	1f00001b 	svcne	0x0000001b
    5820:	91025001 	tstls	r2, r1
    5824:	001e0060 	andseq	r0, lr, r0, rrx
    5828:	bd000000 	stclt	0, cr0, [r0, #-0]
    582c:	6d00000a 	stcvs	0, cr0, [r0, #-40]	; 0xffffffd8
    5830:	1f00001b 	svcne	0x0000001b
    5834:	74025001 	strvc	r5, [r2], #-1
    5838:	001d0000 	andseq	r0, sp, r0
    583c:	2b000000 	blcs	5844 <__HEAP_SIZE+0x4844>
    5840:	1d000024 	stcne	0, cr0, [r0, #-144]	; 0xffffff70
    5844:	00000000 	andeq	r0, r0, r0
    5848:	0000238e 	andeq	r2, r0, lr, lsl #7
    584c:	0000001d 	andeq	r0, r0, sp, lsl r0
    5850:	00239c00 	eoreq	r9, r3, r0, lsl #24
    5854:	00001d00 	andeq	r1, r0, r0, lsl #26
    5858:	243a0000 	ldrtcs	r0, [sl], #-0
    585c:	001d0000 	andseq	r0, sp, r0
    5860:	8e000000 	cdphi	0, 0, cr0, cr0, cr0, {0}
    5864:	1d000023 	stcne	0, cr0, [r0, #-140]	; 0xffffff74
    5868:	00000000 	andeq	r0, r0, r0
    586c:	0000239c 	muleq	r0, ip, r3
    5870:	0000001e 	andeq	r0, r0, lr, lsl r0
    5874:	00244900 	eoreq	r4, r4, r0, lsl #18
    5878:	001bbd00 	andseq	fp, fp, r0, lsl #26
    587c:	50011f00 	andpl	r1, r1, r0, lsl #30
    5880:	1f609102 	svcne	0x00609102
    5884:	91025101 	tstls	r2, r1, lsl #2
    5888:	001e005c 	andseq	r0, lr, ip, asr r0
    588c:	ad000000 	stcge	0, cr0, [r0, #-0]
    5890:	d1000009 	tstle	r0, r9
    5894:	1f00001b 	svcne	0x0000001b
    5898:	74025001 	strvc	r5, [r2], #-1
    589c:	001e0000 	andseq	r0, lr, r0
    58a0:	58000000 	stmdapl	r0, {}	; <UNPREDICTABLE>
    58a4:	e5000024 	str	r0, [r0, #-36]	; 0xffffffdc
    58a8:	1f00001b 	svcne	0x0000001b
    58ac:	74025001 	strvc	r5, [r2], #-1
    58b0:	001e0010 	andseq	r0, lr, r0, lsl r0
    58b4:	bd000000 	stclt	0, cr0, [r0, #-0]
    58b8:	f900000a 			; <UNDEFINED> instruction: 0xf900000a
    58bc:	1f00001b 	svcne	0x0000001b
    58c0:	74025001 	strvc	r5, [r2], #-1
    58c4:	001d0000 	andseq	r0, sp, r0
    58c8:	2b000000 	blcs	58d0 <__HEAP_SIZE+0x48d0>
    58cc:	1d000024 	stcne	0, cr0, [r0, #-144]	; 0xffffff70
    58d0:	00000000 	andeq	r0, r0, r0
    58d4:	0000240e 	andeq	r2, r0, lr, lsl #8
    58d8:	0000001e 	andeq	r0, r0, lr, lsl r0
    58dc:	000abd00 	andeq	fp, sl, r0, lsl #26
    58e0:	001c1f00 	andseq	r1, ip, r0, lsl #30
    58e4:	50011f00 	andpl	r1, r1, r0, lsl #30
    58e8:	00007402 	andeq	r7, r0, r2, lsl #8
    58ec:	0000001d 	andeq	r0, r0, sp, lsl r0
    58f0:	00242b00 	eoreq	r2, r4, r0, lsl #22
    58f4:	01210000 			; <UNDEFINED> instruction: 0x01210000
    58f8:	000013ea 	andeq	r1, r0, sl, ror #7
    58fc:	13038601 	movwne	r8, #13825	; 0x3601
    5900:	0003d201 	andeq	sp, r3, r1, lsl #4
	...
    590c:	004d0700 	subeq	r0, sp, r0, lsl #14
    5910:	1ca40100 	stfnes	f0, [r4]
    5914:	08190000 	ldmdaeq	r9, {}	; <UNPREDICTABLE>
    5918:	01000010 	tsteq	r0, r0, lsl r0
    591c:	15440386 	strbne	r0, [r4, #-902]	; 0xfffffc7a
    5920:	4b000001 	blmi	592c <__HEAP_SIZE+0x492c>
    5924:	3f00004d 	svccc	0x0000004d
    5928:	1900004d 	stmdbne	r0, {r0, r2, r3, r6}
    592c:	00000d64 	andeq	r0, r0, r4, ror #26
    5930:	44038701 	strmi	r8, [r3], #-1793	; 0xfffff8ff
    5934:	00000115 	andeq	r0, r0, r5, lsl r1
    5938:	00004da6 	andeq	r4, r0, r6, lsr #27
    593c:	00004d9e 	muleq	r0, lr, sp
    5940:	000d451a 	andeq	r4, sp, sl, lsl r5
    5944:	03890100 	orreq	r0, r9, #0, 2
    5948:	0003d217 	andeq	sp, r3, r7, lsl r2
    594c:	004de000 	subeq	lr, sp, r0
    5950:	004dda00 	subeq	sp, sp, r0, lsl #20
    5954:	00002000 	andeq	r2, r0, r0
    5958:	207e0000 	rsbscs	r0, lr, r0
    595c:	011f0000 	tsteq	pc, r0
    5960:	01f30350 	mvnseq	r0, r0, asr r3
    5964:	51011f50 	tstpl	r1, r0, asr pc
    5968:	011f3001 	tsteq	pc, r1
    596c:	00320152 	eorseq	r0, r2, r2, asr r1
    5970:	61012100 	mrsvs	r2, (UNDEF: 17)
    5974:	01000010 	tsteq	r0, r0, lsl r0
    5978:	0113035e 	tsteq	r3, lr, asr r3
    597c:	000003d2 	ldrdeq	r0, [r0], -r2
	...
    5988:	00004e0b 	andeq	r4, r0, fp, lsl #28
    598c:	001d4101 	andseq	r4, sp, r1, lsl #2
    5990:	10081900 	andne	r1, r8, r0, lsl #18
    5994:	5e010000 	cdppl	0, 0, cr0, cr1, cr0, {0}
    5998:	01154a03 	tsteq	r5, r3, lsl #20
    599c:	4e670000 	cdpmi	0, 6, cr0, cr7, cr0, {0}
    59a0:	4e5b0000 	cdpmi	0, 5, cr0, cr11, cr0, {0}
    59a4:	64190000 	ldrvs	r0, [r9], #-0
    59a8:	0100000d 	tsteq	r0, sp
    59ac:	154a035f 	strbne	r0, [sl, #-863]	; 0xfffffca1
    59b0:	c2000001 	andgt	r0, r0, #1
    59b4:	ba00004e 	blt	5af4 <__HEAP_SIZE+0x4af4>
    59b8:	1900004e 	stmdbne	r0, {r1, r2, r3, r6}
    59bc:	00000f57 	andeq	r0, r0, r7, asr pc
    59c0:	48036001 	stmdami	r3, {r0, sp, lr}
    59c4:	00001d41 	andeq	r1, r0, r1, asr #26
    59c8:	00004f00 	andeq	r4, r0, r0, lsl #30
    59cc:	00004ef6 	strdeq	r4, [r0], -r6
    59d0:	000d451a 	andeq	r4, sp, sl, lsl r5
    59d4:	03620100 	cmneq	r2, #0, 2
    59d8:	0003d217 	andeq	sp, r3, r7, lsl r2
    59dc:	004f4b00 	subeq	r4, pc, r0, lsl #22
    59e0:	004f4500 	subeq	r4, pc, r0, lsl #10
    59e4:	00002000 	andeq	r2, r0, r0
    59e8:	21e90000 	mvncs	r0, r0
    59ec:	011f0000 	tsteq	pc, r0
    59f0:	01f30350 	mvnseq	r0, r0, asr r3
    59f4:	51011f50 	tstpl	r1, r0, asr pc
    59f8:	011f3001 	tsteq	pc, r1
    59fc:	1f300152 	svcne	0x00300152
    5a00:	f3035301 	vcgt.u8	d5, d3, d1
    5a04:	021f5201 	andseq	r5, pc, #268435456	; 0x10000000
    5a08:	3201007d 	andcc	r0, r1, #125	; 0x7d
    5a0c:	04070000 	streq	r0, [r7], #-0
    5a10:	000002ab 	andeq	r0, r0, fp, lsr #5
    5a14:	0b1d0121 	bleq	745ea0 <__RAM_SIZE+0x645ea0>
    5a18:	2f010000 	svccs	0x00010000
    5a1c:	f3011003 	vhadd.u8	d1, d1, d3
	...
    5a28:	76000000 	strvc	r0, [r0], -r0
    5a2c:	0100004f 	tsteq	r0, pc, asr #32
    5a30:	00001ddb 	ldrdeq	r1, [r0], -fp
    5a34:	000b0c19 	andeq	r0, fp, r9, lsl ip
    5a38:	032f0100 			; <UNDEFINED> instruction: 0x032f0100
    5a3c:	0003d238 	andeq	sp, r3, r8, lsr r2
    5a40:	004f9a00 	subeq	r9, pc, r0, lsl #20
    5a44:	004f9600 	subeq	r9, pc, r0, lsl #12
    5a48:	20e11900 	rsccs	r1, r1, r0, lsl #18
    5a4c:	30010000 	andcc	r0, r1, r0
    5a50:	011a3503 	tsteq	sl, r3, lsl #10
    5a54:	4fbc0000 	svcmi	0x00bc0000
    5a58:	4fb80000 	svcmi	0x00b80000
    5a5c:	191a0000 	ldmdbne	sl, {}	; <UNPREDICTABLE>
    5a60:	0100001a 	tsteq	r0, sl, lsl r0
    5a64:	f3140332 	vcge.u16	d0, d4, d18
    5a68:	de000000 	cdple	0, 0, cr0, cr0, cr0, {0}
    5a6c:	da00004f 	ble	5bb0 <__HEAP_SIZE+0x4bb0>
    5a70:	1a00004f 	bne	5bb4 <__HEAP_SIZE+0x4bb4>
    5a74:	00000b0b 	andeq	r0, r0, fp, lsl #22
    5a78:	19033301 	stmdbne	r3, {r0, r8, r9, ip, sp}
    5a7c:	0000065c 	andeq	r0, r0, ip, asr r6
    5a80:	00005001 	andeq	r5, r0, r1
    5a84:	00004ffd 	strdeq	r4, [r0], -sp
    5a88:	0000001d 	andeq	r0, r0, sp, lsl r0
    5a8c:	00249400 	eoreq	r9, r4, r0, lsl #8
    5a90:	00002000 	andeq	r2, r0, r0
    5a94:	13060000 	movwne	r0, #24576	; 0x6000
    5a98:	011f0000 	tsteq	pc, r0
    5a9c:	00740250 	rsbseq	r0, r4, r0, asr r2
    5aa0:	0251011f 	subseq	r0, r1, #-1073741817	; 0xc0000007
    5aa4:	00000075 	andeq	r0, r0, r5, ror r0
    5aa8:	13120121 	tstne	r2, #1073741832	; 0x40000008
    5aac:	f4010000 	vst4.8	{d0-d3}, [r1], r0
    5ab0:	f3011002 	vhadd.u8	d1, d1, d2
	...
    5abc:	1f000000 	svcne	0x00000000
    5ac0:	01000050 	qaddeq	r0, r0, r0
    5ac4:	00001e54 	andeq	r1, r0, r4, asr lr
    5ac8:	000b0c19 	andeq	r0, fp, r9, lsl ip
    5acc:	02f40100 	rscseq	r0, r4, #0, 2
    5ad0:	0003d238 	andeq	sp, r3, r8, lsr r2
    5ad4:	00504300 	subseq	r4, r0, r0, lsl #6
    5ad8:	00503f00 	subseq	r3, r0, r0, lsl #30
    5adc:	1a191a00 	bne	64c2e4 <__RAM_SIZE+0x54c2e4>
    5ae0:	f6010000 			; <UNDEFINED> instruction: 0xf6010000
    5ae4:	00f31402 	rscseq	r1, r3, r2, lsl #8
    5ae8:	50630000 	rsbpl	r0, r3, r0
    5aec:	50610000 	rsbpl	r0, r1, r0
    5af0:	0b1a0000 	bleq	685af8 <__RAM_SIZE+0x585af8>
    5af4:	0100000b 	tsteq	r0, fp
    5af8:	5c1902f7 	lfmpl	f0, 4, [r9], {247}	; 0xf7
    5afc:	7b000006 	blvc	5b1c <__HEAP_SIZE+0x4b1c>
    5b00:	77000050 	smlsdvc	r0, r0, r0, r0
    5b04:	1d000050 	stcne	0, cr0, [r0, #-320]	; 0xfffffec0
    5b08:	00000000 	andeq	r0, r0, r0
    5b0c:	00002494 	muleq	r0, r4, r4
    5b10:	00000020 	andeq	r0, r0, r0, lsr #32
    5b14:	0019ee00 	andseq	lr, r9, r0, lsl #28
    5b18:	50011f00 	andpl	r1, r1, r0, lsl #30
    5b1c:	00007402 	andeq	r7, r0, r2, lsl #8
    5b20:	65012100 	strvs	r2, [r1, #-256]	; 0xffffff00
    5b24:	0100000f 	tsteq	r0, pc
    5b28:	01130298 			; <UNDEFINED> instruction: 0x01130298
    5b2c:	000003d2 	ldrdeq	r0, [r0], -r2
	...
    5b38:	00005099 	muleq	r0, r9, r0
    5b3c:	001f0401 	andseq	r0, pc, r1, lsl #8
    5b40:	10a51900 	adcne	r1, r5, r0, lsl #18
    5b44:	98010000 	stmdals	r1, {}	; <UNPREDICTABLE>
    5b48:	00e23a02 	rsceq	r3, r2, r2, lsl #20
    5b4c:	50d50000 	sbcspl	r0, r5, r0
    5b50:	50d10000 	sbcspl	r0, r1, r0
    5b54:	57190000 	ldrpl	r0, [r9, -r0]
    5b58:	0100000f 	tsteq	r0, pc
    5b5c:	413c0299 	teqmi	ip, r9	; <illegal shifter operand>
    5b60:	fc00001d 	stc2	0, cr0, [r0], {29}
    5b64:	f6000050 			; <UNDEFINED> instruction: 0xf6000050
    5b68:	1a000050 	bne	5cb0 <__HEAP_SIZE+0x4cb0>
    5b6c:	00000c6f 	andeq	r0, r0, pc, ror #24
    5b70:	17029b01 	strne	r9, [r2, -r1, lsl #22]
    5b74:	000003d2 	ldrdeq	r0, [r0], -r2
    5b78:	0000512c 	andeq	r5, r0, ip, lsr #2
    5b7c:	00005128 	andeq	r5, r0, r8, lsr #2
    5b80:	000ecb25 	andeq	ip, lr, r5, lsr #22
    5b84:	029c0100 	addseq	r0, ip, #0, 2
    5b88:	0001151b 	andeq	r1, r1, fp, lsl r5
    5b8c:	53250100 			; <UNDEFINED> instruction: 0x53250100
    5b90:	0100000c 	tsteq	r0, ip
    5b94:	153e029c 	ldrne	r0, [lr, #-668]!	; 0xfffffd64
    5b98:	00000001 	andeq	r0, r0, r1
    5b9c:	0000001e 	andeq	r0, r0, lr, lsl r0
    5ba0:	0021e900 	eoreq	lr, r1, r0, lsl #18
    5ba4:	001ef300 	andseq	pc, lr, r0, lsl #6
    5ba8:	50011f00 	andpl	r1, r1, r0, lsl #30
    5bac:	011f3101 	tsteq	pc, r1, lsl #2
    5bb0:	1f300151 	svcne	0x00300151
    5bb4:	30015201 	andcc	r5, r1, r1, lsl #4
    5bb8:	0353011f 	cmpeq	r3, #-1073741817	; 0xc0000007
    5bbc:	005101f3 	ldrsheq	r0, [r1], #-19	; 0xffffffed
    5bc0:	00000020 	andeq	r0, r0, r0, lsr #32
    5bc4:	001f9300 	andseq	r9, pc, r0, lsl #6
    5bc8:	50011f00 	andpl	r1, r1, r0, lsl #30
    5bcc:	00007402 	andeq	r7, r0, r2, lsl #8
    5bd0:	a4012100 	strge	r2, [r1], #-256	; 0xffffff00
    5bd4:	0100000f 	tsteq	r0, pc
    5bd8:	01130284 	tsteq	r3, r4, lsl #5
    5bdc:	000003d2 	ldrdeq	r0, [r0], -r2
	...
    5be8:	0000514a 	andeq	r5, r0, sl, asr #2
    5bec:	001f9301 	andseq	r9, pc, r1, lsl #6
    5bf0:	10a51900 	adcne	r1, r5, r0, lsl #18
    5bf4:	84010000 	strhi	r0, [r1], #-0
    5bf8:	00e23402 	rsceq	r3, r2, r2, lsl #8
    5bfc:	516e0000 	cmnpl	lr, r0
    5c00:	516a0000 	cmnpl	sl, r0
    5c04:	6f1a0000 	svcvs	0x001a0000
    5c08:	0100000c 	tsteq	r0, ip
    5c0c:	d2170286 	andsle	r0, r7, #1610612744	; 0x60000008
    5c10:	93000003 	movwls	r0, #3
    5c14:	8f000051 	svchi	0x00000051
    5c18:	25000051 	strcs	r0, [r0, #-81]	; 0xffffffaf
    5c1c:	00000ecb 	andeq	r0, r0, fp, asr #29
    5c20:	1b028701 	blne	a782c <__HEAP_SIZE+0xa682c>
    5c24:	00000115 	andeq	r0, r0, r5, lsl r1
    5c28:	0c532501 	cfldr64eq	mvdx2, [r3], {1}
    5c2c:	87010000 	strhi	r0, [r1, -r0]
    5c30:	01153e02 	tsteq	r5, r2, lsl #28
    5c34:	1e000000 	cdpne	0, 0, cr0, cr0, cr0, {0}
    5c38:	00000000 	andeq	r0, r0, r0
    5c3c:	0000207e 	andeq	r2, r0, lr, ror r0
    5c40:	00001f82 	andeq	r1, r0, r2, lsl #31
    5c44:	0150011f 	cmpeq	r0, pc, lsl r1
    5c48:	51011f31 	tstpl	r1, r1, lsr pc
    5c4c:	20003001 	andcs	r3, r0, r1
    5c50:	00000000 	andeq	r0, r0, r0
    5c54:	00001f93 	muleq	r0, r3, pc	; <UNPREDICTABLE>
    5c58:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    5c5c:	00000074 	andeq	r0, r0, r4, ror r0
    5c60:	000fc326 	andeq	ip, pc, r6, lsr #6
    5c64:	02660100 	rsbeq	r0, r6, #0, 2
    5c68:	00000111 	andeq	r0, r0, r1, lsl r1
    5c6c:	00000000 	andeq	r0, r0, r0
    5c70:	51b10000 			; <UNDEFINED> instruction: 0x51b10000
    5c74:	e4010000 	str	r0, [r1], #-0
    5c78:	1900001f 	stmdbne	r0, {r0, r1, r2, r3, r4}
    5c7c:	00000c6e 	andeq	r0, r0, lr, ror #24
    5c80:	2f026601 	svccs	0x00026601
    5c84:	00000656 	andeq	r0, r0, r6, asr r6
    5c88:	000051e3 	andeq	r5, r0, r3, ror #3
    5c8c:	000051dd 	ldrdeq	r5, [r0], -sp
    5c90:	00000020 	andeq	r0, r0, r0, lsr #32
    5c94:	0019ee00 	andseq	lr, r9, r0, lsl #28
    5c98:	50011f00 	andpl	r1, r1, r0, lsl #30
    5c9c:	5001f303 	andpl	pc, r1, r3, lsl #6
    5ca0:	0151011f 	cmpeq	r1, pc, lsl r1
    5ca4:	52011f30 	andpl	r1, r1, #48, 30	; 0xc0
    5ca8:	011f3001 	tsteq	pc, r1
    5cac:	00300153 	eorseq	r0, r0, r3, asr r1
    5cb0:	0c3d2600 	ldceq	6, cr2, [sp], #-0
    5cb4:	36010000 	strcc	r0, [r1], -r0
    5cb8:	da010d02 	ble	490c8 <__HEAP_SIZE+0x480c8>
    5cbc:	fa100020 	blx	405d44 <__RAM_SIZE+0x305d44>
    5cc0:	0f100020 	svceq	0x00100020
    5cc4:	01000052 	qaddeq	r0, r2, r0
    5cc8:	0000207e 	andeq	r2, r0, lr, ror r0
    5ccc:	0010d519 	andseq	sp, r0, r9, lsl r5
    5cd0:	02360100 	eorseq	r0, r6, #0, 2
    5cd4:	00011536 	andeq	r1, r1, r6, lsr r5
    5cd8:	00523700 	subseq	r3, r2, r0, lsl #14
    5cdc:	00522f00 	subseq	r2, r2, r0, lsl #30
    5ce0:	0e701900 	vaddeq.f16	s3, s0, s0	; <UNPREDICTABLE>
    5ce4:	37010000 	strcc	r0, [r1, -r0]
    5ce8:	01153602 	tsteq	r5, r2, lsl #12
    5cec:	52780000 	rsbspl	r0, r8, #0
    5cf0:	52700000 	rsbspl	r0, r0, #0
    5cf4:	74190000 	ldrvc	r0, [r9], #-0
    5cf8:	0100000d 	tsteq	r0, sp
    5cfc:	2b2e0238 	blcs	b865e4 <__RAM_SIZE+0xa865e4>
    5d00:	b5000001 	strlt	r0, [r0, #-1]
    5d04:	af000052 	svcge	0x00000052
    5d08:	19000052 	stmdbne	r0, {r1, r4, r6}
    5d0c:	000010a5 	andeq	r1, r0, r5, lsr #1
    5d10:	32023901 	andcc	r3, r2, #16384	; 0x4000
    5d14:	000000e2 	andeq	r0, r0, r2, ror #1
    5d18:	000052e5 	andeq	r5, r0, r5, ror #5
    5d1c:	000052e1 	andeq	r5, r0, r1, ror #5
    5d20:	000c6e19 	andeq	r6, ip, r9, lsl lr
    5d24:	023a0100 	eorseq	r0, sl, #0, 2
    5d28:	0006562e 	andeq	r5, r6, lr, lsr #12
    5d2c:	00530a00 	subseq	r0, r3, r0, lsl #20
    5d30:	00530600 	subseq	r0, r3, r0, lsl #12
    5d34:	20f02000 	rscscs	r2, r0, r0
    5d38:	22a81000 	adccs	r1, r8, #0
    5d3c:	011f0000 	tsteq	pc, r0
    5d40:	00740250 	rsbseq	r0, r4, r0, asr r2
    5d44:	0151011f 	cmpeq	r1, pc, lsl r1
    5d48:	21000031 	tstcs	r0, r1, lsr r0
    5d4c:	000f9001 	andeq	r9, pc, r1
    5d50:	01f60100 	mvnseq	r0, r0, lsl #2
    5d54:	03d20113 	bicseq	r0, r2, #-1073741820	; 0xc0000004
	...
    5d60:	532a0000 			; <UNDEFINED> instruction: 0x532a0000
    5d64:	60010000 	andvs	r0, r1, r0
    5d68:	19000021 	stmdbne	r0, {r0, r5}
    5d6c:	000010d5 	ldrdeq	r1, [r0], -r5
    5d70:	3a01f601 	bcc	8357c <__HEAP_SIZE+0x8257c>
    5d74:	00000115 	andeq	r0, r0, r5, lsl r1
    5d78:	0000537a 	andeq	r5, r0, sl, ror r3
    5d7c:	0000536e 	andeq	r5, r0, lr, ror #6
    5d80:	000e7019 	andeq	r7, lr, r9, lsl r0
    5d84:	01f70100 	mvnseq	r0, r0, lsl #2
    5d88:	0001153a 	andeq	r1, r1, sl, lsr r5
    5d8c:	0053d100 	subseq	sp, r3, r0, lsl #2
    5d90:	0053c700 	subseq	ip, r3, r0, lsl #14
    5d94:	10a51900 	adcne	r1, r5, r0, lsl #18
    5d98:	f8010000 			; <UNDEFINED> instruction: 0xf8010000
    5d9c:	00e23601 	rsceq	r3, r2, r1, lsl #12
    5da0:	541b0000 	ldrpl	r0, [fp], #-0
    5da4:	54130000 	ldrpl	r0, [r3], #-0
    5da8:	6e1a0000 	cdpvs	0, 1, cr0, cr10, cr0, {0}
    5dac:	0100000c 	tsteq	r0, ip
    5db0:	561301fa 			; <UNDEFINED> instruction: 0x561301fa
    5db4:	5f000006 	svcpl	0x00000006
    5db8:	55000054 	strpl	r0, [r0, #-84]	; 0xffffffac
    5dbc:	1a000054 	bne	5f14 <__HEAP_SIZE+0x4f14>
    5dc0:	00001165 	andeq	r1, r0, r5, ror #2
    5dc4:	1001fb01 	andne	pc, r1, r1, lsl #22
    5dc8:	00000029 	andeq	r0, r0, r9, lsr #32
    5dcc:	000054a7 	andeq	r5, r0, r7, lsr #9
    5dd0:	000054a1 	andeq	r5, r0, r1, lsr #9
    5dd4:	000d741a 	andeq	r7, sp, sl, lsl r4
    5dd8:	01fc0100 	mvnseq	r0, r0, lsl #2
    5ddc:	00012b13 	andeq	r2, r1, r3, lsl fp
    5de0:	0054e000 	subseq	lr, r4, r0
    5de4:	0054d800 	subseq	sp, r4, r0, lsl #16
    5de8:	00001e00 	andeq	r1, r0, r0, lsl #28
    5dec:	24a30000 	strtcs	r0, [r3], #0
    5df0:	21350000 	teqcs	r5, r0
    5df4:	011f0000 	tsteq	pc, r0
    5df8:	00740750 	rsbseq	r0, r4, r0, asr r7
    5dfc:	231e0076 	tstcs	lr, #118	; 0x76
    5e00:	0020005c 	eoreq	r0, r0, ip, asr r0
    5e04:	e4000000 	str	r0, [r0], #-0
    5e08:	1f00001f 	svcne	0x0000001f
    5e0c:	76025001 	strvc	r5, [r2], -r1
    5e10:	51011f00 	tstpl	r1, r0, lsl #30
    5e14:	1f007402 	svcne	0x00007402
    5e18:	75035201 	strvc	r5, [r3, #-513]	; 0xfffffdff
    5e1c:	011f00dc 	ldrsbeq	r0, [pc, -ip]
    5e20:	00770253 	rsbseq	r0, r7, r3, asr r2
    5e24:	007d021f 	rsbseq	r0, sp, pc, lsl r2
    5e28:	00007502 	andeq	r7, r0, r2, lsl #10
    5e2c:	99012400 	stmdbls	r1, {sl, sp}
    5e30:	0100000a 	tsteq	r0, sl
    5e34:	011001be 			; <UNDEFINED> instruction: 0x011001be
    5e38:	000000f3 	strdeq	r0, [r0], -r3
	...
    5e44:	01007d02 	tsteq	r0, r2, lsl #26
    5e48:	000021dd 	ldrdeq	r2, [r0], -sp
    5e4c:	00121d19 	andseq	r1, r2, r9, lsl sp
    5e50:	01be0100 			; <UNDEFINED> instruction: 0x01be0100
    5e54:	0003d23d 	andeq	sp, r3, sp, lsr r2
    5e58:	00552200 	subseq	r2, r5, r0, lsl #4
    5e5c:	00551a00 	subseq	r1, r5, r0, lsl #20
    5e60:	0d732a00 	vldmdbeq	r3!, {s5-s4}
    5e64:	bf010000 	svclt	0x00010000
    5e68:	21dd3a01 	bicscs	r3, sp, r1, lsl #20
    5e6c:	51010000 	mrspl	r0, (UNDEF: 1)
    5e70:	000f562a 	andeq	r5, pc, sl, lsr #12
    5e74:	01c00100 	biceq	r0, r0, r0, lsl #2
    5e78:	0021e340 	eoreq	lr, r1, r0, asr #6
    5e7c:	1a520100 	bne	1486284 <__RAM_SIZE+0x1386284>
    5e80:	00001a19 	andeq	r1, r0, r9, lsl sl
    5e84:	1401c201 	strne	ip, [r1], #-513	; 0xfffffdff
    5e88:	000000f3 	strdeq	r0, [r0], -r3
    5e8c:	0000555e 	andeq	r5, r0, lr, asr r5
    5e90:	0000555a 	andeq	r5, r0, sl, asr r5
    5e94:	00121c1a 	andseq	r1, r2, sl, lsl ip
    5e98:	01c30100 	biceq	r0, r3, r0, lsl #2
    5e9c:	00065c19 	andeq	r5, r6, r9, lsl ip
    5ea0:	00558600 	subseq	r8, r5, r0, lsl #12
    5ea4:	00557e00 	subseq	r7, r5, r0, lsl #28
    5ea8:	04070000 	streq	r0, [r7], #-0
    5eac:	0000012b 	andeq	r0, r0, fp, lsr #2
    5eb0:	1d410407 	cfstrdne	mvd0, [r1, #-28]	; 0xffffffe4
    5eb4:	01210000 			; <UNDEFINED> instruction: 0x01210000
    5eb8:	00001202 	andeq	r1, r0, r2, lsl #4
    5ebc:	13017801 	movwne	r7, #6145	; 0x1801
    5ec0:	0003d201 	andeq	sp, r3, r1, lsl #4
    5ec4:	0020fa00 	eoreq	pc, r0, r0, lsl #20
    5ec8:	00213810 	eoreq	r3, r1, r0, lsl r8
    5ecc:	0055be10 	subseq	fp, r5, r0, lsl lr
    5ed0:	22a80100 	adccs	r0, r8, #0, 2
    5ed4:	d5190000 	ldrle	r0, [r9, #-0]
    5ed8:	01000010 	tsteq	r0, r0, lsl r0
    5edc:	15400178 	strbne	r0, [r0, #-376]	; 0xfffffe88
    5ee0:	30000001 	andcc	r0, r0, r1
    5ee4:	1a000056 	bne	6044 <__HEAP_SIZE+0x5044>
    5ee8:	19000056 	stmdbne	r0, {r1, r2, r4, r6}
    5eec:	00000e70 	andeq	r0, r0, r0, ror lr
    5ef0:	40017901 	andmi	r7, r1, r1, lsl #18
    5ef4:	00000115 	andeq	r0, r0, r5, lsl r1
    5ef8:	000056bd 			; <UNDEFINED> instruction: 0x000056bd
    5efc:	000056b7 			; <UNDEFINED> instruction: 0x000056b7
    5f00:	000d7419 	andeq	r7, sp, r9, lsl r4
    5f04:	017a0100 	cmneq	sl, r0, lsl #2
    5f08:	00012b38 	andeq	r2, r1, r8, lsr fp
    5f0c:	0056ef00 	subseq	lr, r6, r0, lsl #30
    5f10:	0056e900 	subseq	lr, r6, r0, lsl #18
    5f14:	0f571900 	svceq	0x00571900
    5f18:	7b010000 	blvc	45f20 <__HEAP_SIZE+0x44f20>
    5f1c:	1d413e01 	stclne	14, cr3, [r1, #-4]
    5f20:	57210000 	strpl	r0, [r1, -r0]!
    5f24:	571b0000 	ldrpl	r0, [fp, -r0]
    5f28:	a5190000 	ldrge	r0, [r9, #-0]
    5f2c:	01000010 	tsteq	r0, r0, lsl r0
    5f30:	e23c017c 	eors	r0, ip, #124, 2
    5f34:	4e000000 	cdpmi	0, 0, cr0, cr0, cr0, {0}
    5f38:	4a000057 	bmi	609c <__HEAP_SIZE+0x509c>
    5f3c:	1a000057 	bne	60a0 <__HEAP_SIZE+0x50a0>
    5f40:	00000c6e 	andeq	r0, r0, lr, ror #24
    5f44:	13017e01 	movwne	r7, #7681	; 0x1e01
    5f48:	00000656 	andeq	r0, r0, r6, asr r6
    5f4c:	0000577a 	andeq	r5, r0, sl, ror r7
    5f50:	0000576e 	andeq	r5, r0, lr, ror #14
    5f54:	00211e20 	eoreq	r1, r1, r0, lsr #28
    5f58:	001fe410 	andseq	lr, pc, r0, lsl r4	; <UNPREDICTABLE>
    5f5c:	50011f00 	andpl	r1, r1, r0, lsl #30
    5f60:	5001f303 	andpl	pc, r1, r3, lsl #6
    5f64:	0453011f 	ldrbeq	r0, [r3], #-287	; 0xfffffee1
    5f68:	01940091 			; <UNDEFINED> instruction: 0x01940091
    5f6c:	007d021f 	rsbseq	r0, sp, pc, lsl r2
    5f70:	00007402 	andeq	r7, r0, r2, lsl #8
    5f74:	3a012100 	bcc	4e37c <__HEAP_SIZE+0x4d37c>
    5f78:	01000013 	tsteq	r0, r3, lsl r0
    5f7c:	010c012f 	tsteq	ip, pc, lsr #2
    5f80:	000000f3 	strdeq	r0, [r0], -r3
    5f84:	10002054 	andne	r2, r0, r4, asr r0
    5f88:	100020da 	ldrdne	r2, [r0], -sl
    5f8c:	000057c7 	andeq	r5, r0, r7, asr #15
    5f90:	00237001 	eoreq	r7, r3, r1
    5f94:	121d1900 	andsne	r1, sp, #0, 18
    5f98:	2f010000 	svccs	0x00010000
    5f9c:	03d22e01 	bicseq	r2, r2, #1, 28
    5fa0:	580f0000 	stmdapl	pc, {}	; <UNPREDICTABLE>
    5fa4:	57ff0000 	ldrbpl	r0, [pc, r0]!
    5fa8:	6f190000 	svcvs	0x00190000
    5fac:	0100000c 	tsteq	r0, ip
    5fb0:	f32b0130 	vbit	d0, d11, d16
    5fb4:	7a000000 	bvc	5fbc <__HEAP_SIZE+0x4fbc>
    5fb8:	72000058 	andvc	r0, r0, #88	; 0x58
    5fbc:	1a000058 	bne	6124 <__HEAP_SIZE+0x5124>
    5fc0:	00001a19 	andeq	r1, r0, r9, lsl sl
    5fc4:	10013201 	andne	r3, r1, r1, lsl #4
    5fc8:	000000f3 	strdeq	r0, [r0], -r3
    5fcc:	000058b4 			; <UNDEFINED> instruction: 0x000058b4
    5fd0:	000058ae 	andeq	r5, r0, lr, lsr #17
    5fd4:	00121c1a 	andseq	r1, r2, sl, lsl ip
    5fd8:	01330100 	teqeq	r3, r0, lsl #2
    5fdc:	00065c15 	andeq	r5, r6, r5, lsl ip
    5fe0:	0058f000 	subseq	pc, r8, r0
    5fe4:	0058e000 	subseq	lr, r8, r0
    5fe8:	207c1d00 	rsbscs	r1, ip, r0, lsl #26
    5fec:	238e1000 	orrcs	r1, lr, #0
    5ff0:	aa1d0000 	bge	745ff8 <__RAM_SIZE+0x645ff8>
    5ff4:	9c100020 	ldcls	0, cr0, [r0], {32}
    5ff8:	1e000023 	cdpne	0, 0, cr0, cr0, cr3, {1}
    5ffc:	100020b6 	strhne	r2, [r0], -r6
    6000:	0000237f 	andeq	r2, r0, pc, ror r3
    6004:	00002342 	andeq	r2, r0, r2, asr #6
    6008:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    600c:	1d001074 	stcne	0, cr1, [r0, #-464]	; 0xfffffe30
    6010:	100020be 	strhne	r2, [r0], -lr
    6014:	0000240e 	andeq	r2, r0, lr, lsl #8
    6018:	0020c81e 	eoreq	ip, r0, lr, lsl r8
    601c:	0024b110 	eoreq	fp, r4, r0, lsl r1
    6020:	00235f00 	eoreq	r5, r3, r0, lsl #30
    6024:	50011f00 	andpl	r1, r1, r0, lsl #30
    6028:	00107402 	andseq	r7, r0, r2, lsl #8
    602c:	0020d020 	eoreq	sp, r0, r0, lsr #32
    6030:	0024b110 	eoreq	fp, r4, r0, lsl r1
    6034:	50011f00 	andpl	r1, r1, r0, lsl #30
    6038:	002c7402 	eoreq	r7, ip, r2, lsl #8
    603c:	01012b00 	tsteq	r1, r0, lsl #22
    6040:	00000d05 	andeq	r0, r0, r5, lsl #26
    6044:	00000d05 	andeq	r0, r0, r5, lsl #26
    6048:	0d06c608 	stceq	6, cr12, [r6, #-32]	; 0xffffffe0
    604c:	c401012b 	strgt	r0, [r1], #-299	; 0xfffffed5
    6050:	c4000013 	strgt	r0, [r0], #-19	; 0xffffffed
    6054:	08000013 	stmdaeq	r0, {r0, r1, r4}
    6058:	2c0c0de8 	stccs	13, cr0, [ip], {232}	; 0xe8
    605c:	0bd30101 	bleq	ff4c6468 <__StackTop+0xc73c6468>
    6060:	0bd30000 	bleq	ff4c6068 <__StackTop+0xc73c6068>
    6064:	71050000 	mrsvc	r0, (UNDEF: 5)
    6068:	01012c0d 	tsteq	r1, sp, lsl #24
    606c:	00000a43 	andeq	r0, r0, r3, asr #20
    6070:	00000a43 	andeq	r0, r0, r3, asr #20
    6074:	2b0d7205 	blcs	362890 <__RAM_SIZE+0x262890>
    6078:	0f200101 	svceq	0x00200101
    607c:	0f200000 	svceq	0x00200000
    6080:	cc080000 	stcgt	0, cr0, [r8], {-0}
    6084:	012b060d 			; <UNDEFINED> instruction: 0x012b060d
    6088:	00123601 	andseq	r3, r2, r1, lsl #12
    608c:	00123600 	andseq	r3, r2, r0, lsl #12
    6090:	0e0e0800 	cdpeq	8, 0, cr0, cr14, cr0, {0}
    6094:	01012d06 	tsteq	r1, r6, lsl #26
    6098:	00000bf0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    609c:	00000be6 	andeq	r0, r0, r6, ror #23
    60a0:	012b000b 			; <UNDEFINED> instruction: 0x012b000b
    60a4:	000eb301 	andeq	fp, lr, r1, lsl #6
    60a8:	000eb300 	andeq	fp, lr, r0, lsl #6
    60ac:	0e200800 	cdpeq	8, 2, cr0, cr0, cr0, {0}
    60b0:	01012c0c 	tsteq	r1, ip, lsl #24
    60b4:	000011c1 	andeq	r1, r0, r1, asr #3
    60b8:	000011c1 	andeq	r1, r0, r1, asr #3
    60bc:	2c06b80a 	stccs	8, cr11, [r6], {10}
    60c0:	0f7d0101 	svceq	0x007d0101
    60c4:	0f7d0000 	svceq	0x007d0000
    60c8:	74050000 	strvc	r0, [r5], #-0
    60cc:	01012c11 	tsteq	r1, r1, lsl ip
    60d0:	00000c89 	andeq	r0, r0, r9, lsl #25
    60d4:	00000c89 	andeq	r0, r0, r9, lsl #25
    60d8:	2c0d7505 	cfstr32cs	mvfx7, [sp], {5}
    60dc:	0a7e0101 	beq	1f864e8 <__RAM_SIZE+0x1e864e8>
    60e0:	0a7e0000 	beq	1f860e8 <__RAM_SIZE+0x1e860e8>
    60e4:	6f050000 	svcvs	0x00050000
    60e8:	01012b0d 	tsteq	r1, sp, lsl #22
    60ec:	0000102d 	andeq	r1, r0, sp, lsr #32
    60f0:	0000102d 	andeq	r1, r0, sp, lsr #32
    60f4:	060e6508 	streq	r6, [lr], -r8, lsl #10
    60f8:	7701012b 	strvc	r0, [r1, -fp, lsr #2]
    60fc:	77000011 	smladvc	r0, r1, r0, r0
    6100:	08000011 	stmdaeq	r0, {r0, r4}
    6104:	2b0c0693 	blcs	307b58 <__RAM_SIZE+0x207b58>
    6108:	0d1c0101 	ldfeqs	f0, [ip, #-4]
    610c:	0d1c0000 	ldceq	0, cr0, [ip, #-0]
    6110:	5b080000 	blpl	206118 <__RAM_SIZE+0x106118>
    6114:	012b0606 			; <UNDEFINED> instruction: 0x012b0606
    6118:	0011ac01 	andseq	sl, r1, r1, lsl #24
    611c:	0011ac00 	andseq	sl, r1, r0, lsl #24
    6120:	0d530800 	ldcleq	8, cr0, [r3, #-0]
    6124:	01012b0c 	tsteq	r1, ip, lsl #22
    6128:	00000e1a 	andeq	r0, r0, sl, lsl lr
    612c:	00000e1a 	andeq	r0, r0, sl, lsl lr
    6130:	060dbb08 	streq	fp, [sp], -r8, lsl #22
    6134:	3001012b 	andcc	r0, r1, fp, lsr #2
    6138:	3000000e 	andcc	r0, r0, lr
    613c:	0800000e 	stmdaeq	r0, {r1, r2, r3}
    6140:	2b0e0e5f 	blcs	389ac4 <__RAM_SIZE+0x289ac4>
    6144:	12c50101 	sbcne	r0, r5, #1073741824	; 0x40000000
    6148:	12c50000 	sbcne	r0, r5, #0
    614c:	2a080000 	bcs	206154 <__RAM_SIZE+0x106154>
    6150:	012b060e 			; <UNDEFINED> instruction: 0x012b060e
    6154:	00124701 	andseq	r4, r2, r1, lsl #14
    6158:	00124700 	andseq	r4, r2, r0, lsl #14
    615c:	0e1a0800 	cdpeq	8, 1, cr0, cr10, cr0, {0}
    6160:	01012b0c 	tsteq	r1, ip, lsl #22
    6164:	000012f1 	strdeq	r1, [r0], -r1	; <UNPREDICTABLE>
    6168:	000012f1 	strdeq	r1, [r0], -r1	; <UNPREDICTABLE>
    616c:	0e0e0308 	cdpeq	3, 0, cr0, cr14, cr8, {0}
    6170:	f801012c 			; <UNDEFINED> instruction: 0xf801012c
    6174:	f800000c 			; <UNDEFINED> instruction: 0xf800000c
    6178:	0a00000c 	beq	61b0 <__HEAP_SIZE+0x51b0>
    617c:	012b08b5 			; <UNDEFINED> instruction: 0x012b08b5
    6180:	00099b01 	andeq	r9, r9, r1, lsl #22
    6184:	00099b00 	andeq	r9, r9, r0, lsl #22
    6188:	01b90700 			; <UNDEFINED> instruction: 0x01b90700
    618c:	38f00006 	ldmcc	r0!, {r1, r2}^
    6190:	00020000 	andeq	r0, r2, r0
    6194:	00000f3d 	andeq	r0, r0, sp, lsr pc
    6198:	01890104 	orreq	r0, r9, r4, lsl #2
    619c:	be0c0000 	cdplt	0, 0, cr0, cr12, cr0, {0}
    61a0:	85000020 	strhi	r0, [r0, #-32]	; 0xffffffe0
    61a4:	90000003 	andls	r0, r0, r3
    61a8:	00000007 	andeq	r0, r0, r7
    61ac:	00000000 	andeq	r0, r0, r0
    61b0:	9c000000 	stcls	0, cr0, [r0], {-0}
    61b4:	0200003d 	andeq	r0, r0, #61	; 0x3d
    61b8:	00000504 	andeq	r0, r0, r4, lsl #10
    61bc:	3a17d102 	bcc	5fa5cc <__RAM_SIZE+0x4fa5cc>
    61c0:	03000000 	movweq	r0, #0
    61c4:	00000029 	andeq	r0, r0, r9, lsr #32
    61c8:	c7070404 	strgt	r0, [r7, -r4, lsl #8]
    61cc:	05000002 	streq	r0, [r0, #-2]
    61d0:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
    61d4:	08040074 	stmdaeq	r4, {r2, r4, r5, r6}
    61d8:	00012705 	andeq	r2, r1, r5, lsl #14
    61dc:	04080400 	streq	r0, [r8], #-1024	; 0xfffffc00
    61e0:	00000063 	andeq	r0, r0, r3, rrx
    61e4:	73060104 	movwvc	r0, #24836	; 0x6104
    61e8:	02000002 	andeq	r0, r0, #2
    61ec:	0000017f 	andeq	r0, r0, pc, ror r1
    61f0:	69182b03 	ldmdbvs	r8, {r0, r1, r8, r9, fp, sp}
    61f4:	04000000 	streq	r0, [r0], #-0
    61f8:	02710801 	rsbseq	r0, r1, #65536	; 0x10000
    61fc:	02040000 	andeq	r0, r4, #0
    6200:	00003205 	andeq	r3, r0, r5, lsl #4
    6204:	07020400 	streq	r0, [r2, -r0, lsl #8]
    6208:	0000031a 	andeq	r0, r0, sl, lsl r3
    620c:	2c050404 	cfstrscs	mvf0, [r5], {4}
    6210:	02000001 	andeq	r0, r0, #1
    6214:	0000006f 	andeq	r0, r0, pc, rrx
    6218:	91194f03 	tstls	r9, r3, lsl #30
    621c:	04000000 	streq	r0, [r0], #-0
    6220:	02c20704 	sbceq	r0, r2, #4, 14	; 0x100000
    6224:	08040000 	stmdaeq	r4, {}	; <UNPREDICTABLE>
    6228:	0002bd07 	andeq	fp, r2, r7, lsl #26
    622c:	03040600 	movweq	r0, #17920	; 0x4600
    6230:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    6234:	00ac0407 	adceq	r0, ip, r7, lsl #8
    6238:	01040000 	mrseq	r0, (UNDEF: 4)
    623c:	00027a08 	andeq	r7, r2, r8, lsl #20
    6240:	00ac0300 	adceq	r0, ip, r0, lsl #6
    6244:	04070000 	streq	r0, [r7], #-0
    6248:	000000b3 	strheq	r0, [r0], -r3
    624c:	0000b803 	andeq	fp, r0, r3, lsl #16
    6250:	01810200 	orreq	r0, r1, r0, lsl #4
    6254:	18040000 	stmdane	r4, {}	; <UNPREDICTABLE>
    6258:	00005d13 	andeq	r5, r0, r3, lsl sp
    625c:	00c30800 	sbceq	r0, r3, r0, lsl #16
    6260:	c3030000 	movwgt	r0, #12288	; 0x3000
    6264:	02000000 	andeq	r0, r0, #0
    6268:	00000071 	andeq	r0, r0, r1, ror r0
    626c:	85143004 	ldrhi	r3, [r4, #-4]
    6270:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    6274:	000000d9 	ldrdeq	r0, [r0], -r9
    6278:	001c3802 	andseq	r3, ip, r2, lsl #16
    627c:	11240500 			; <UNDEFINED> instruction: 0x11240500
    6280:	000000f6 	strdeq	r0, [r0], -r6
    6284:	00fc0407 	rscseq	r0, ip, r7, lsl #8
    6288:	01090000 	mrseq	r0, (UNDEF: 9)
    628c:	00000108 	andeq	r0, r0, r8, lsl #2
    6290:	00009f0a 	andeq	r9, r0, sl, lsl #30
    6294:	5f020000 	svcpl	0x00020000
    6298:	06000015 			; <UNDEFINED> instruction: 0x06000015
    629c:	00d91a49 	sbcseq	r1, r9, r9, asr #20
    62a0:	08080000 	stmdaeq	r8, {}	; <UNPREDICTABLE>
    62a4:	02000001 	andeq	r0, r0, #1
    62a8:	000009c5 	andeq	r0, r0, r5, asr #19
    62ac:	7e1a4a06 	vnmlsvc.f32	s8, s20, s12
    62b0:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    62b4:	00000119 	andeq	r0, r0, r9, lsl r1
    62b8:	00011903 	andeq	r1, r1, r3, lsl #18
    62bc:	09c40200 	stmibeq	r4, {r9}^
    62c0:	4b060000 	blmi	1862c8 <__RAM_SIZE+0x862c8>
    62c4:	0000911a 	andeq	r9, r0, sl, lsl r1
    62c8:	012f0800 			; <UNDEFINED> instruction: 0x012f0800
    62cc:	3b030000 	blcc	c62d4 <__HEAP_SIZE+0xc52d4>
    62d0:	03000001 	movweq	r0, #1
    62d4:	0000012f 	andeq	r0, r0, pc, lsr #2
    62d8:	00092002 	andeq	r2, r9, r2
    62dc:	1a510600 	bne	1447ae4 <__RAM_SIZE+0x1347ae4>
    62e0:	000000d9 	ldrdeq	r0, [r0], -r9
    62e4:	00014a08 	andeq	r4, r1, r8, lsl #20
    62e8:	014a0300 	mrseq	r0, (UNDEF: 122)
    62ec:	04070000 	streq	r0, [r7], #-0
    62f0:	000000c3 	andeq	r0, r0, r3, asr #1
    62f4:	0012240b 	andseq	r2, r2, fp, lsl #8
    62f8:	0c071400 	cfstrseq	mvf1, [r7], {-0}
    62fc:	0195080c 	orrseq	r0, r5, ip, lsl #16
    6300:	c50c0000 	strgt	r0, [ip, #-0]
    6304:	0700000d 	streq	r0, [r0, -sp]
    6308:	4a100c11 	bmi	409354 <__RAM_SIZE+0x309354>
    630c:	02000001 	andeq	r0, r0, #1
    6310:	bb0c0023 	bllt	3063a4 <__RAM_SIZE+0x2063a4>
    6314:	0700000d 	streq	r0, [r0, -sp]
    6318:	950c0c12 	strls	r0, [ip, #-3090]	; 0xfffff3ee
    631c:	02000001 	andeq	r0, r0, #1
    6320:	0d000423 	cfstrseq	mvf0, [r0, #-140]	; 0xffffff74
    6324:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    6328:	000001a5 	andeq	r0, r0, r5, lsr #3
    632c:	00003a0e 	andeq	r3, r0, lr, lsl #20
    6330:	0f000300 	svceq	0x00000300
    6334:	00001937 	andeq	r1, r0, r7, lsr r9
    6338:	220c1707 	andcs	r1, ip, #1835008	; 0x1c0000
    633c:	00000166 	andeq	r0, r0, r6, ror #2
    6340:	001f530b 	andseq	r5, pc, fp, lsl #6
    6344:	43074c00 	movwmi	r4, #31744	; 0x7c00
    6348:	0271100c 	rsbseq	r1, r1, #12
    634c:	a60c0000 	strge	r0, [ip], -r0
    6350:	0700001b 	smladeq	r0, fp, r0, r0
    6354:	9f0c0c45 	svcls	0x000c0c45
    6358:	02000000 	andeq	r0, r0, #0
    635c:	e90c0023 	stmdb	ip, {r0, r1, r5}
    6360:	07000012 	smladeq	r0, r2, r0, r0
    6364:	71160c4c 	tstvc	r6, ip, asr #24
    6368:	02000002 	andeq	r0, r0, #2
    636c:	bb0c0423 	bllt	307400 <__RAM_SIZE+0x207400>
    6370:	07000019 	smladeq	r0, r9, r0, r0
    6374:	2f110c4d 	svccs	0x00110c4d
    6378:	02000001 	andeq	r0, r0, #1
    637c:	b90c2c23 	stmdblt	ip, {r0, r1, r5, sl, fp, sp}
    6380:	0700001b 	smladeq	r0, fp, r0, r0
    6384:	9f0c0c4e 	svcls	0x000c0c4e
    6388:	02000000 	andeq	r0, r0, #0
    638c:	aa0c3023 	bge	312420 <__RAM_SIZE+0x212420>
    6390:	0700001d 	smladeq	r0, sp, r0, r0
    6394:	810d0c53 	tsthi	sp, r3, asr ip
    6398:	02000002 	andeq	r0, r0, #2
    639c:	be0c3423 	cdplt	4, 0, cr3, cr12, cr3, {1}
    63a0:	07000014 	smladeq	r0, r4, r0, r0
    63a4:	91150c61 	tstls	r5, r1, ror #24
    63a8:	02000002 	andeq	r0, r0, #2
    63ac:	5b0c3823 	blpl	314440 <__RAM_SIZE+0x214440>
    63b0:	0700001d 	smladeq	r0, sp, r0, r0
    63b4:	9f100c64 	svcls	0x00100c64
    63b8:	02000000 	andeq	r0, r0, #0
    63bc:	820c4023 	andhi	r4, ip, #35	; 0x23
    63c0:	0700001f 	smladeq	r0, pc, r0, r0	; <UNPREDICTABLE>
    63c4:	a1120c70 	tstge	r2, r0, ror ip
    63c8:	02000002 	andeq	r0, r0, #2
    63cc:	af0c4423 	svcge	0x000c4423
    63d0:	0700001b 	smladeq	r0, fp, r0, r0
    63d4:	b1110c71 	tstlt	r1, r1, ror ip
    63d8:	02000002 	andeq	r0, r0, #2
    63dc:	dd0c4823 	stcle	8, cr4, [ip, #-140]	; 0xffffff74
    63e0:	07000015 	smladeq	r0, r5, r0, r0
    63e4:	c3110c74 	tstgt	r1, #116, 24	; 0x7400
    63e8:	02000000 	andeq	r0, r0, #0
    63ec:	870c4923 	strhi	r4, [ip, -r3, lsr #18]
    63f0:	0700001c 	smladeq	r0, ip, r0, r0
    63f4:	c3110c78 	tstgt	r1, #120, 24	; 0x7800
    63f8:	02000000 	andeq	r0, r0, #0
    63fc:	0d004a23 	vstreq	s8, [r0, #-140]	; 0xffffff74
    6400:	000001a5 	andeq	r0, r0, r5, lsr #3
    6404:	00000281 	andeq	r0, r0, r1, lsl #5
    6408:	00003a0e 	andeq	r3, r0, lr, lsl #20
    640c:	0d000100 	stfeqs	f0, [r0, #-0]
    6410:	000000c3 	andeq	r0, r0, r3, asr #1
    6414:	00000291 	muleq	r0, r1, r2
    6418:	00003a0e 	andeq	r3, r0, lr, lsl #20
    641c:	0d000300 	stceq	3, cr0, [r0, #-0]
    6420:	0000012f 	andeq	r0, r0, pc, lsr #2
    6424:	000002a1 	andeq	r0, r0, r1, lsr #5
    6428:	00003a0e 	andeq	r3, r0, lr, lsl #20
    642c:	0d000100 	stfeqs	f0, [r0, #-0]
    6430:	000000d9 	ldrdeq	r0, [r0], -r9
    6434:	000002b1 			; <UNDEFINED> instruction: 0x000002b1
    6438:	00003a0e 	andeq	r3, r0, lr, lsl #20
    643c:	0d000000 	stceq	0, cr0, [r0, #-0]
    6440:	000000c3 	andeq	r0, r0, r3, asr #1
    6444:	000002c1 	andeq	r0, r0, r1, asr #5
    6448:	00003a0e 	andeq	r3, r0, lr, lsl #20
    644c:	0f000000 	svceq	0x00000000
    6450:	00001408 	andeq	r1, r0, r8, lsl #8
    6454:	030c7d07 	movweq	r7, #52487	; 0xcd07
    6458:	000001b2 			; <UNDEFINED> instruction: 0x000001b2
    645c:	00094710 	andeq	r4, r9, r0, lsl r7
    6460:	90081400 	andls	r1, r8, r0, lsl #8
    6464:	00032708 	andeq	r2, r3, r8, lsl #14
    6468:	092b1100 	stmdbeq	fp!, {r8, ip}
    646c:	93080000 	movwls	r0, #32768	; 0x8000
    6470:	00014a24 	andeq	r4, r1, r4, lsr #20
    6474:	00230200 	eoreq	r0, r3, r0, lsl #4
    6478:	00099411 	andeq	r9, r9, r1, lsl r4
    647c:	2d940800 	ldccs	8, cr0, [r4]
    6480:	00000327 	andeq	r0, r0, r7, lsr #6
    6484:	11042302 	tstne	r4, r2, lsl #6
    6488:	000009e3 	andeq	r0, r0, r3, ror #19
    648c:	272d9508 	strcs	r9, [sp, -r8, lsl #10]!
    6490:	02000003 	andeq	r0, r0, #3
    6494:	3f110823 	svccc	0x00110823
    6498:	08000009 	stmdaeq	r0, {r0, r3}
    649c:	009f0c96 	umullseq	r0, pc, r6, ip	; <UNPREDICTABLE>
    64a0:	23020000 	movwcs	r0, #8192	; 0x2000
    64a4:	0914110c 	ldmdbeq	r4, {r2, r3, r8, ip}
    64a8:	97080000 	strls	r0, [r8, -r0]
    64ac:	00036828 	andeq	r6, r3, r8, lsr #16
    64b0:	10230200 	eorne	r0, r3, r0, lsl #4
    64b4:	ce040700 	cdpgt	7, 0, cr0, cr4, cr0, {0}
    64b8:	10000002 	andne	r0, r0, r2
    64bc:	00000a16 	andeq	r0, r0, r6, lsl sl
    64c0:	10ac081c 	adcne	r0, ip, ip, lsl r8
    64c4:	00000368 	andeq	r0, r0, r8, ror #6
    64c8:	00097511 	andeq	r7, r9, r1, lsl r5
    64cc:	25af0800 	strcs	r0, [pc, #2048]!	; 6cd4 <__HEAP_SIZE+0x5cd4>
    64d0:	0000012f 	andeq	r0, r0, pc, lsr #2
    64d4:	11002302 	tstne	r0, r2, lsl #6
    64d8:	000009db 	ldrdeq	r0, [r0], -fp
    64dc:	8b26b008 	blhi	9b2504 <__RAM_SIZE+0x8b2504>
    64e0:	02000003 	andeq	r0, r0, #3
    64e4:	36110423 	ldrcc	r0, [r1], -r3, lsr #8
    64e8:	08000009 	stmdaeq	r0, {r0, r3}
    64ec:	037f14b1 	cmneq	pc, #-1325400064	; 0xb1000000
    64f0:	23020000 	movwcs	r0, #8192	; 0x2000
    64f4:	04070008 	streq	r0, [r7], #-8
    64f8:	0000032d 	andeq	r0, r0, sp, lsr #6
    64fc:	00193d02 	andseq	r3, r9, r2, lsl #26
    6500:	1b9a0800 	blne	fe688508 <__StackTop+0xc6588508>
    6504:	000002ce 	andeq	r0, r0, lr, asr #5
    6508:	00036e03 	andeq	r6, r3, r3, lsl #28
    650c:	0b700200 	bleq	1c06d14 <__RAM_SIZE+0x1b06d14>
    6510:	a6080000 	strge	r0, [r8], -r0
    6514:	0002ce24 	andeq	ip, r2, r4, lsr #28
    6518:	6e040700 	cdpvs	7, 0, cr0, cr4, cr0, {0}
    651c:	03000003 	movweq	r0, #3
    6520:	0000038b 	andeq	r0, r0, fp, lsl #7
    6524:	0013e302 	andseq	lr, r3, r2, lsl #6
    6528:	03b30800 			; <UNDEFINED> instruction: 0x03b30800
    652c:	0000032d 	andeq	r0, r0, sp, lsr #6
    6530:	00039603 	andeq	r9, r3, r3, lsl #12
    6534:	02ea0200 	rsceq	r0, sl, #0, 4
    6538:	5c090000 	stcpl	0, cr0, [r9], {-0}
    653c:	0003b82e 	andeq	fp, r3, lr, lsr #16
    6540:	03a70300 			; <UNDEFINED> instruction: 0x03a70300
    6544:	04070000 	streq	r0, [r7], #-0
    6548:	000003be 			; <UNDEFINED> instruction: 0x000003be
    654c:	00016b0b 	andeq	r6, r1, fp, lsl #22
    6550:	66014c00 	strvs	r4, [r1], -r0, lsl #24
    6554:	049d1001 	ldreq	r1, [sp], #1
    6558:	160c0000 	strne	r0, [ip], -r0
    655c:	01000023 	tsteq	r0, r3, lsr #32
    6560:	f31c0168 	vrhadd.u16	q0, q6, q12
    6564:	02000005 	andeq	r0, r0, #5
    6568:	950c0023 	strls	r0, [ip, #-35]	; 0xffffffdd
    656c:	01000022 	tsteq	r0, r2, lsr #32
    6570:	6e100172 	fixvsz	r0, f2
    6574:	02000003 	andeq	r0, r0, #3
    6578:	640c0423 	strvs	r0, [ip], #-1059	; 0xfffffbdd
    657c:	01000021 	tsteq	r0, r1, lsr #32
    6580:	6e100173 	fixvsz	r0, f3
    6584:	02000003 	andeq	r0, r0, #3
    6588:	720c1823 	andvc	r1, ip, #2293760	; 0x230000
    658c:	01000014 	tsteq	r0, r4, lsl r0
    6590:	2f110174 	svccs	0x00110174
    6594:	02000001 	andeq	r0, r0, #1
    6598:	d80c2c23 	stmdale	ip, {r0, r1, r5, sl, fp, sp}
    659c:	0100001e 	tsteq	r0, lr, lsl r0
    65a0:	bb130175 	bllt	4c6b7c <__RAM_SIZE+0x3c6b7c>
    65a4:	02000005 	andeq	r0, r0, #5
    65a8:	1d0c3023 	stcne	0, cr3, [ip, #-140]	; 0xffffff74
    65ac:	01000014 	tsteq	r0, r4, lsl r0
    65b0:	f90a017a 			; <UNDEFINED> instruction: 0xf90a017a
    65b4:	02000005 	andeq	r0, r0, #5
    65b8:	050c3423 	streq	r3, [ip, #-1059]	; 0xfffffbdd
    65bc:	01000021 	tsteq	r0, r1, lsr #32
    65c0:	2f15018e 	svccs	0x0015018e
    65c4:	02000001 	andeq	r0, r0, #1
    65c8:	430c3823 	movwmi	r3, #51235	; 0xc823
    65cc:	0100001a 	tsteq	r0, sl, lsl r0
    65d0:	2f15018f 	svccs	0x0015018f
    65d4:	02000001 	andeq	r0, r0, #1
    65d8:	650c3c23 	strvs	r3, [ip, #-3107]	; 0xfffff3dd
    65dc:	0100001e 	tsteq	r0, lr, lsl r0
    65e0:	9d1c0193 	ldflss	f0, [ip, #-588]	; 0xfffffdb4
    65e4:	02000004 	andeq	r0, r0, #4
    65e8:	080c4023 	stmdaeq	ip, {r0, r1, r5, lr}
    65ec:	0100001a 	tsteq	r0, sl, lsl r0
    65f0:	191b01a3 	ldmdbne	fp, {r0, r1, r5, r7, r8}
    65f4:	02000006 	andeq	r0, r0, #6
    65f8:	5e0c4423 	cdppl	4, 0, cr4, cr12, cr3, {1}
    65fc:	01000017 	tsteq	r0, r7, lsl r0
    6600:	2e1a01a4 	mufcs<illegal precision>p	f0, f2, f4
    6604:	02000006 	andeq	r0, r0, #6
    6608:	040c4823 	streq	r4, [ip], #-2083	; 0xfffff7dd
    660c:	0100000e 	tsteq	r0, lr
    6610:	c31101aa 	tstgt	r1, #-2147483606	; 0x8000002a
    6614:	02000000 	andeq	r0, r0, #0
    6618:	280c4923 	stmdacs	ip, {r0, r1, r5, r8, fp, lr}
    661c:	01000019 	tsteq	r0, r9, lsl r0
    6620:	c31101ae 	tstgt	r1, #-2147483605	; 0x8000002b
    6624:	02000000 	andeq	r0, r0, #0
    6628:	02004a23 	andeq	r4, r0, #143360	; 0x23000
    662c:	00001fb1 			; <UNDEFINED> instruction: 0x00001fb1
    6630:	a9176309 	ldmdbge	r7, {r0, r3, r8, r9, sp, lr}
    6634:	07000004 	streq	r0, [r0, -r4]
    6638:	0004af04 	andeq	sl, r4, r4, lsl #30
    663c:	19011200 	stmdbne	r1, {r9, ip}
    6640:	bf000001 	svclt	0x00000001
    6644:	0a000004 	beq	665c <__HEAP_SIZE+0x565c>
    6648:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    664c:	01071300 	mrseq	r1, SP_und
    6650:	00000069 	andeq	r0, r0, r9, rrx
    6654:	f2016709 	vabd.s8	d6, d1, d9
    6658:	14000004 	strne	r0, [r0], #-4
    665c:	0000203c 	andeq	r2, r0, ip, lsr r0
    6660:	1afc1400 	bne	fff0b668 <__StackTop+0xc7e0b668>
    6664:	14010000 	strne	r0, [r1], #-0
    6668:	0000213d 	andeq	r2, r0, sp, lsr r1
    666c:	14b31402 	ldrtne	r1, [r3], #1026	; 0x402
    6670:	14030000 	strne	r0, [r3], #-0
    6674:	00001bc2 	andeq	r1, r0, r2, asr #23
    6678:	20ee1404 	rsccs	r1, lr, r4, lsl #8
    667c:	00050000 	andeq	r0, r5, r0
    6680:	001d0d02 	andseq	r0, sp, r2, lsl #26
    6684:	036e0900 	cmneq	lr, #0, 18
    6688:	000004bf 			; <UNDEFINED> instruction: 0x000004bf
    668c:	69010713 	stmdbvs	r1, {r0, r1, r4, r8, r9, sl}
    6690:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    6694:	052b0172 	streq	r0, [fp, #-370]!	; 0xfffffe8e
    6698:	16140000 	ldrne	r0, [r4], -r0
    669c:	00000015 	andeq	r0, r0, r5, lsl r0
    66a0:	001d7214 	andseq	r7, sp, r4, lsl r2
    66a4:	67140100 	ldrvs	r0, [r4, -r0, lsl #2]
    66a8:	02000022 	andeq	r0, r0, #34	; 0x22
    66ac:	0017e614 	andseq	lr, r7, r4, lsl r6
    66b0:	51140300 	tstpl	r4, r0, lsl #6
    66b4:	0400001a 	streq	r0, [r0], #-26	; 0xffffffe6
    66b8:	190b0200 	stmdbne	fp, {r9}
    66bc:	78090000 	stmdavc	r9, {}	; <UNPREDICTABLE>
    66c0:	0004fe03 	andeq	pc, r4, r3, lsl #28
    66c4:	0b131000 	bleq	4ca6cc <__RAM_SIZE+0x3ca6cc>
    66c8:	09080000 	stmdbeq	r8, {}	; <UNPREDICTABLE>
    66cc:	0563107d 	strbeq	r1, [r3, #-125]!	; 0xffffff83
    66d0:	c4110000 	ldrgt	r0, [r1], #-0
    66d4:	0900000b 	stmdbeq	r0, {r0, r1, r3}
    66d8:	0119107f 	tsteq	r9, pc, ror r0
    66dc:	23020000 	movwcs	r0, #8192	; 0x2000
    66e0:	0fd61100 	svceq	0x00d61100
    66e4:	80090000 	andhi	r0, r9, r0
    66e8:	00014a10 	andeq	r4, r1, r0, lsl sl
    66ec:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    66f0:	10230200 	eorne	r0, r3, r0, lsl #4
    66f4:	81090000 	mrshi	r0, (UNDEF: 9)
    66f8:	00053703 	andeq	r3, r5, r3, lsl #14
    66fc:	1d7b1000 	ldclne	0, cr1, [fp, #-0]
    6700:	090c0000 	stmdbeq	ip, {}	; <UNPREDICTABLE>
    6704:	05aa1086 	streq	r1, [sl, #134]!	; 0x86
    6708:	53110000 	tstpl	r1, #0
    670c:	09000020 	stmdbeq	r0, {r5}
    6710:	009f0c88 	addseq	r0, pc, r8, lsl #25
    6714:	23020000 	movwcs	r0, #8192	; 0x2000
    6718:	1be91100 	blne	ffa4ab20 <__StackTop+0xc794ab20>
    671c:	89090000 	stmdbhi	r9, {}	; <UNPREDICTABLE>
    6720:	0000d90e 	andeq	sp, r0, lr, lsl #18
    6724:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    6728:	0016b611 	andseq	fp, r6, r1, lsl r6
    672c:	0e8a0900 	vdiveq.f16	s0, s20, s0	; <UNPREDICTABLE>
    6730:	000000d9 	ldrdeq	r0, [r0], -r9
    6734:	00082302 	andeq	r2, r8, r2, lsl #6
    6738:	001b6c02 	andseq	r6, fp, r2, lsl #24
    673c:	038b0900 	orreq	r0, fp, #0, 18
    6740:	0000056f 	andeq	r0, r0, pc, ror #10
    6744:	0005aa03 	andeq	sl, r5, r3, lsl #20
    6748:	08040700 	stmdaeq	r4, {r8, r9, sl}
    674c:	03000001 	movweq	r0, #1
    6750:	000005bb 			; <UNDEFINED> instruction: 0x000005bb
    6754:	69010713 	stmdbvs	r1, {r0, r1, r4, r8, r9, sl}
    6758:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    675c:	05e701b6 	strbeq	r0, [r7, #438]!	; 0x1b6
    6760:	da140000 	ble	506768 <__RAM_SIZE+0x406768>
    6764:	00000017 	andeq	r0, r0, r7, lsl r0
    6768:	001fc414 	andseq	ip, pc, r4, lsl r4	; <UNPREDICTABLE>
    676c:	db140100 	blle	506b74 <__RAM_SIZE+0x406b74>
    6770:	0200001f 	andeq	r0, r0, #31
    6774:	17190200 	ldrne	r0, [r9, -r0, lsl #4]
    6778:	bd090000 	stclt	0, cr0, [r9, #-0]
    677c:	0005c603 	andeq	ip, r5, r3, lsl #12
    6780:	14040700 	strne	r0, [r4], #-1792	; 0xfffff900
    6784:	0d000001 	stceq	0, cr0, [r0, #-4]
    6788:	000000ac 	andeq	r0, r0, ip, lsr #1
    678c:	00000609 	andeq	r0, r0, r9, lsl #12
    6790:	00003a0e 	andeq	r3, r0, lr, lsl #20
    6794:	0d000300 	stceq	3, cr0, [r0, #-0]
    6798:	000000e5 	andeq	r0, r0, r5, ror #1
    679c:	00000619 	andeq	r0, r0, r9, lsl r6
    67a0:	00003a0e 	andeq	r3, r0, lr, lsl #20
    67a4:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    67a8:	00000609 	andeq	r0, r0, r9, lsl #12
    67ac:	0000cf0d 	andeq	ip, r0, sp, lsl #30
    67b0:	00062e00 	andeq	r2, r6, r0, lsl #28
    67b4:	003a0e00 	eorseq	r0, sl, r0, lsl #28
    67b8:	00000000 	andeq	r0, r0, r0
    67bc:	00061e08 	andeq	r1, r6, r8, lsl #28
    67c0:	17570f00 	ldrbne	r0, [r7, -r0, lsl #30]
    67c4:	b4010000 	strlt	r0, [r1], #-0
    67c8:	03be0301 			; <UNDEFINED> instruction: 0x03be0301
    67cc:	2a0f0000 	bcs	3c67d4 <__RAM_SIZE+0x2c67d4>
    67d0:	01000021 	tsteq	r0, r1, lsr #32
    67d4:	331001b8 	tstcc	r0, #184, 2	; 0x2e
    67d8:	03000006 	movweq	r0, #6
    67dc:	00000640 	andeq	r0, r0, r0, asr #12
    67e0:	001e2415 	andseq	r2, lr, r5, lsl r4
    67e4:	01be0100 			; <UNDEFINED> instruction: 0x01be0100
    67e8:	00066c37 	andeq	r6, r6, r7, lsr ip
    67ec:	03050100 	movweq	r0, #20736	; 0x5100
    67f0:	380085b0 	stmdacc	r0, {r4, r5, r7, r8, sl, pc}
    67f4:	06400407 	strbeq	r0, [r0], -r7, lsl #8
    67f8:	66080000 	strvs	r0, [r8], -r0
    67fc:	03000006 	movweq	r0, #6
    6800:	00000666 	andeq	r0, r0, r6, ror #12
    6804:	0003960d 	andeq	r9, r3, sp, lsl #12
    6808:	00068600 	andeq	r8, r6, r0, lsl #12
    680c:	003a0e00 	eorseq	r0, sl, r0, lsl #28
    6810:	00040000 	andeq	r0, r4, r0
    6814:	0015b916 	andseq	fp, r5, r6, lsl r9
    6818:	01cb0100 	biceq	r0, fp, r0, lsl #2
    681c:	0006761f 	andeq	r7, r6, pc, lsl r6
    6820:	bc030500 	cfstr32lt	mvfx0, [r3], {-0}
    6824:	16380085 	ldrtne	r0, [r8], -r5, lsl #1
    6828:	00001656 	andeq	r1, r0, r6, asr r6
    682c:	1f01cc01 	svcne	0x0001cc01
    6830:	00000396 	muleq	r0, r6, r3
    6834:	8a5c0305 	bhi	1707450 <__RAM_SIZE+0x1607450>
    6838:	68163800 	ldmdavs	r6, {fp, ip, sp}
    683c:	01000016 	tsteq	r0, r6, lsl r0
    6840:	961f01cd 	ldrls	r0, [pc], -sp, asr #3
    6844:	05000003 	streq	r0, [r0, #-3]
    6848:	008a7803 	addeq	r7, sl, r3, lsl #16
    684c:	1e911638 	mrcne	6, 4, r1, cr1, cr8, {1}
    6850:	ce010000 	cdpgt	0, 0, cr0, cr1, cr0, {0}
    6854:	06d82a01 	ldrbeq	r2, [r8], r1, lsl #20
    6858:	03050000 	movweq	r0, #20480	; 0x5000
    685c:	380085b4 	stmdacc	r0, {r2, r4, r5, r7, r8, sl, pc}
    6860:	03960407 	orrseq	r0, r6, #117440512	; 0x7000000
    6864:	d2080000 	andle	r0, r8, #0
    6868:	03000006 	movweq	r0, #6
    686c:	000006d2 	ldrdeq	r0, [r0], -r2
    6870:	0019a116 	andseq	sl, r9, r6, lsl r1
    6874:	01cf0100 	biceq	r0, pc, r0, lsl #2
    6878:	0006d82a 	andeq	sp, r6, sl, lsr #16
    687c:	b8030500 	stmdalt	r3, {r8, sl}
    6880:	16380085 	ldrtne	r0, [r8], -r5, lsl #1
    6884:	0000183e 	andeq	r1, r0, lr, lsr r8
    6888:	1f01d001 	svcne	0x0001d001
    688c:	00000396 	muleq	r0, r6, r3
    6890:	8af00305 	bhi	ffc074ac <__StackTop+0xc7b074ac>
    6894:	7f163800 	svcvc	0x00163800
    6898:	01000018 	tsteq	r0, r8, lsl r0
    689c:	962301d4 			; <UNDEFINED> instruction: 0x962301d4
    68a0:	05000003 	streq	r0, [r0, #-3]
    68a4:	008b2c03 	addeq	r2, fp, r3, lsl #24
    68a8:	15791638 	ldrbne	r1, [r9, #-1592]!	; 0xfffff9c8
    68ac:	d5010000 	strle	r0, [r1, #-0]
    68b0:	013b3101 	teqeq	fp, r1, lsl #2
    68b4:	03050000 	movweq	r0, #20480	; 0x5000
    68b8:	3800864c 	stmdacc	r0, {r2, r3, r6, r9, sl, pc}
    68bc:	00198716 	andseq	r8, r9, r6, lsl r7
    68c0:	01db0100 	bicseq	r0, fp, r0, lsl #2
    68c4:	00039623 	andeq	r9, r3, r3, lsr #12
    68c8:	10030500 	andne	r0, r3, r0, lsl #10
    68cc:	1638008b 	ldrtne	r0, [r8], -fp, lsl #1
    68d0:	0000224c 	andeq	r2, r0, ip, asr #4
    68d4:	2d01e601 	stccs	6, cr14, [r1, #-4]
    68d8:	0000013b 	andeq	r0, r0, fp, lsr r1
    68dc:	86480305 	strbhi	r0, [r8], -r5, lsl #6
    68e0:	48163800 	ldmdami	r6, {fp, ip, sp}
    68e4:	01000019 	tsteq	r0, r9, lsl r0
    68e8:	562c01e7 	strtpl	r0, [ip], -r7, ror #3
    68ec:	05000001 	streq	r0, [r0, #-1]
    68f0:	008b4803 	addeq	r4, fp, r3, lsl #16
    68f4:	15201638 	strne	r1, [r0, #-1592]!	; 0xfffff9c8
    68f8:	e8010000 	stmda	r1, {}	; <UNPREDICTABLE>
    68fc:	013b2d01 	teqeq	fp, r1, lsl #26
    6900:	03050000 	movweq	r0, #20480	; 0x5000
    6904:	38008a58 	stmdacc	r0, {r3, r4, r6, r9, fp, pc}
    6908:	00154d16 	andseq	r4, r5, r6, lsl sp
    690c:	01e90100 	mvneq	r0, r0, lsl #2
    6910:	0001252c 	andeq	r2, r1, ip, lsr #10
    6914:	0c030500 	cfstr32eq	mvfx0, [r3], {-0}
    6918:	1638008b 	ldrtne	r0, [r8], -fp, lsl #1
    691c:	0000217f 	andeq	r2, r0, pc, ror r1
    6920:	2c01ea01 			; <UNDEFINED> instruction: 0x2c01ea01
    6924:	00000156 	andeq	r0, r0, r6, asr r1
    6928:	8aec0305 	bhi	ffb07544 <__StackTop+0xc7a07544>
    692c:	250d3800 	strcs	r3, [sp, #-2048]	; 0xfffff800
    6930:	b0000001 	andlt	r0, r0, r1
    6934:	0e000007 	cdpeq	0, 0, cr0, cr0, cr7, {0}
    6938:	0000003a 	andeq	r0, r0, sl, lsr r0
    693c:	a0080000 	andge	r0, r8, r0
    6940:	16000007 	strne	r0, [r0], -r7
    6944:	0000163a 	andeq	r1, r0, sl, lsr r6
    6948:	2c01eb01 			; <UNDEFINED> instruction: 0x2c01eb01
    694c:	000007b0 			; <UNDEFINED> instruction: 0x000007b0
    6950:	8b980305 	blhi	fe60756c <__StackTop+0xc650756c>
    6954:	f3163800 	vsub.i16	d3, d6, d0
    6958:	0100001d 	tsteq	r0, sp, lsl r0
    695c:	252c01ec 	strcs	r0, [ip, #-492]!	; 0xfffffe14
    6960:	05000001 	streq	r0, [r0, #-1]
    6964:	008ae803 	addeq	lr, sl, r3, lsl #16
    6968:	1cb01638 	ldcne	6, cr1, [r0], #224	; 0xe0
    696c:	ed010000 	stc	0, cr0, [r1, #-0]
    6970:	012f2401 			; <UNDEFINED> instruction: 0x012f2401
    6974:	03050000 	movweq	r0, #20480	; 0x5000
    6978:	38008854 	stmdacc	r0, {r2, r4, r6, fp, pc}
    697c:	001b7b16 	andseq	r7, fp, r6, lsl fp
    6980:	01ee0100 	mvneq	r0, r0, lsl #2
    6984:	0001562c 	andeq	r5, r1, ip, lsr #12
    6988:	e4030500 	str	r0, [r3], #-1280	; 0xfffffb00
    698c:	0d38008a 	ldceq	0, cr0, [r8, #-552]!	; 0xfffffdd8
    6990:	000003a7 	andeq	r0, r0, r7, lsr #7
    6994:	00000811 	andeq	r0, r0, r1, lsl r8
    6998:	00003a0e 	andeq	r3, r0, lr, lsl #20
    699c:	16000000 	strne	r0, [r0], -r0
    69a0:	000019db 	ldrdeq	r1, [r0], -fp
    69a4:	2501ef01 	strcs	lr, [r1, #-3841]	; 0xfffff0ff
    69a8:	00000801 	andeq	r0, r0, r1, lsl #16
    69ac:	8a940305 	bhi	fe5075c8 <__StackTop+0xc64075c8>
    69b0:	af163800 	svcge	0x00163800
    69b4:	01000018 	tsteq	r0, r8, lsl r0
    69b8:	402301f4 	strdmi	r0, [r3], -r4	; <UNPREDICTABLE>
    69bc:	05000001 	streq	r0, [r0, #-1]
    69c0:	00000403 	andeq	r0, r0, r3, lsl #8
    69c4:	23011638 	movwcs	r1, #5688	; 0x1638
    69c8:	02010000 	andeq	r0, r1, #0
    69cc:	013b2d02 	teqeq	fp, r2, lsl #26
    69d0:	03050000 	movweq	r0, #20480	; 0x5000
    69d4:	38008850 	stmdacc	r0, {r4, r6, fp, pc}
    69d8:	18980117 	ldmne	r8, {r0, r1, r2, r4, r8}
    69dc:	c5010000 	strgt	r0, [r1, #-0]
    69e0:	00010621 	andeq	r0, r1, r1, lsr #12
    69e4:	00000000 	andeq	r0, r0, r0
    69e8:	02000000 	andeq	r0, r0, #0
    69ec:	7b01007d 	blvc	46be8 <__HEAP_SIZE+0x45be8>
    69f0:	18000008 	stmdane	r0, {r3}
    69f4:	00001415 	andeq	r1, r0, r5, lsl r4
    69f8:	1021c701 	eorne	ip, r1, r1, lsl #14
    69fc:	00000119 	andeq	r0, r0, r9, lsl r1
    6a00:	00005957 	andeq	r5, r0, r7, asr r9
    6a04:	00005953 	andeq	r5, r0, r3, asr r9
    6a08:	6c011700 	stcvs	7, cr1, [r1], {-0}
    6a0c:	01000017 	tsteq	r0, r7, lsl r0
    6a10:	010a21b1 			; <UNDEFINED> instruction: 0x010a21b1
    6a14:	10002df8 	strdne	r2, [r0], -r8
    6a18:	10002e10 	andne	r2, r0, r0, lsl lr
    6a1c:	01007d02 	tsteq	r0, r2, lsl #26
    6a20:	000008ea 	andeq	r0, r0, sl, ror #17
    6a24:	001ee019 	andseq	lr, lr, r9, lsl r0
    6a28:	21b10100 			; <UNDEFINED> instruction: 0x21b10100
    6a2c:	0008ea3a 	andeq	lr, r8, sl, lsr sl
    6a30:	19500100 	ldmdbne	r0, {r8}^
    6a34:	00001b45 	andeq	r1, r0, r5, asr #22
    6a38:	3921b201 	stmdbcc	r1!, {r0, r9, ip, sp, pc}
    6a3c:	000008fb 	strdeq	r0, [r0], -fp
    6a40:	a8195101 	ldmdage	r9, {r0, r8, ip, lr}
    6a44:	01000020 	tsteq	r0, r0, lsr #32
    6a48:	014321b3 	strheq	r2, [r3, #-19]	; 0xffffffed
    6a4c:	01000009 	tsteq	r0, r9
    6a50:	15e71652 	strbne	r1, [r7, #1618]!	; 0x652
    6a54:	b5010000 	strlt	r0, [r1, #-0]
    6a58:	02c11d21 	sbceq	r1, r1, #2112	; 0x840
    6a5c:	03050000 	movweq	r0, #20480	; 0x5000
    6a60:	38008b4c 	stmdacc	r0, {r2, r3, r6, r8, r9, fp, pc}
    6a64:	0022e516 	eoreq	lr, r2, r6, lsl r5
    6a68:	21b60100 			; <UNDEFINED> instruction: 0x21b60100
    6a6c:	0009071c 	andeq	r0, r9, ip, lsl r7
    6a70:	58030500 	stmdapl	r3, {r8, sl}
    6a74:	00380088 	eorseq	r0, r8, r8, lsl #1
    6a78:	08f00407 	ldmeq	r0!, {r0, r1, r2, sl}^
    6a7c:	04070000 	streq	r0, [r7], #-0
    6a80:	000002c1 	andeq	r0, r0, r1, asr #5
    6a84:	0008f003 	andeq	pc, r8, r3
    6a88:	bb040700 	bllt	108690 <__RAM_SIZE+0x8690>
    6a8c:	07000005 	streq	r0, [r0, -r5]
    6a90:	00002904 	andeq	r2, r0, r4, lsl #18
    6a94:	01080d00 	tsteq	r8, r0, lsl #26
    6a98:	09170000 	ldmdbeq	r7, {}	; <UNPREDICTABLE>
    6a9c:	3a0e0000 	bcc	386aa4 <__RAM_SIZE+0x286aa4>
    6aa0:	7f000000 	svcvc	0x00000000
    6aa4:	a4011700 	strge	r1, [r1], #-1792	; 0xfffff900
    6aa8:	01000022 	tsteq	r0, r2, lsr #32
    6aac:	010a2188 	smlabbeq	sl, r8, r1, r2
    6ab0:	10002d2c 	andne	r2, r0, ip, lsr #26
    6ab4:	10002d44 	andne	r2, r0, r4, asr #26
    6ab8:	01007d02 	tsteq	r0, r2, lsl #26
    6abc:	00000986 	andeq	r0, r0, r6, lsl #19
    6ac0:	001bf919 	andseq	pc, fp, r9, lsl r9	; <UNPREDICTABLE>
    6ac4:	21880100 	orrcs	r0, r8, r0, lsl #2
    6ac8:	0008ea39 	andeq	lr, r8, r9, lsr sl
    6acc:	19500100 	ldmdbne	r0, {r8}^
    6ad0:	00001447 	andeq	r1, r0, r7, asr #8
    6ad4:	38218901 	stmdacc	r1!, {r0, r8, fp, pc}
    6ad8:	000008fb 	strdeq	r0, [r0], -fp
    6adc:	32195101 	andscc	r5, r9, #1073741824	; 0x40000000
    6ae0:	0100001d 	tsteq	r0, sp, lsl r0
    6ae4:	0142218a 	smlalbbeq	r2, r2, sl, r1	; <UNPREDICTABLE>
    6ae8:	01000009 	tsteq	r0, r9
    6aec:	23651652 	cmncs	r5, #85983232	; 0x5200000
    6af0:	8c010000 	stchi	0, cr0, [r1], {-0}
    6af4:	02c11d21 	sbceq	r1, r1, #2112	; 0x840
    6af8:	03050000 	movweq	r0, #20480	; 0x5000
    6afc:	38008a98 	stmdacc	r0, {r3, r4, r7, r9, fp, pc}
    6b00:	001fa116 	andseq	sl, pc, r6, lsl r1	; <UNPREDICTABLE>
    6b04:	218d0100 	orrcs	r0, sp, r0, lsl #2
    6b08:	0009071c 	andeq	r0, r9, ip, lsl r7
    6b0c:	50030500 	andpl	r0, r3, r0, lsl #10
    6b10:	00380086 	eorseq	r0, r8, r6, lsl #1
    6b14:	0021d61a 	eoreq	sp, r1, sl, lsl r6
    6b18:	20df0100 	sbcscs	r0, pc, r0, lsl #2
    6b1c:	25c4010d 	strbcs	r0, [r4, #269]	; 0x10d
    6b20:	266c1000 	strbtcs	r1, [ip], -r0
    6b24:	59751000 	ldmdbpl	r5!, {ip}^
    6b28:	70010000 	andvc	r0, r1, r0
    6b2c:	1b00000a 	blne	6b5c <__HEAP_SIZE+0x5b5c>
    6b30:	000020e1 	andeq	r2, r0, r1, ror #1
    6b34:	3820df01 	stmdacc	r0!, {r0, r8, r9, sl, fp, ip, lr, pc}
    6b38:	0000014a 	andeq	r0, r0, sl, asr #2
    6b3c:	0000599f 	muleq	r0, pc, r9	; <UNPREDICTABLE>
    6b40:	00005995 	muleq	r0, r5, r9
    6b44:	0020261b 	eoreq	r2, r0, fp, lsl r6
    6b48:	20e00100 	rsccs	r0, r0, r0, lsl #2
    6b4c:	00012a3e 	andeq	r2, r1, lr, lsr sl
    6b50:	0059e800 	subseq	lr, r9, r0, lsl #16
    6b54:	0059e400 	subseq	lr, r9, r0, lsl #8
    6b58:	22891800 	addcs	r1, r9, #0, 16
    6b5c:	e2010000 	and	r0, r1, #0
    6b60:	014a1020 	cmpeq	sl, r0, lsr #32
    6b64:	5a0a0000 	bpl	286b6c <__RAM_SIZE+0x186b6c>
    6b68:	5a060000 	bpl	186b70 <__RAM_SIZE+0x86b70>
    6b6c:	77180000 	ldrvc	r0, [r8, -r0]
    6b70:	01000019 	tsteq	r0, r9, lsl r0
    6b74:	5b1620e3 	blpl	58ef08 <__RAM_SIZE+0x48ef08>
    6b78:	2a000001 	bcs	6b84 <__HEAP_SIZE+0x5b84>
    6b7c:	2800005a 	stmdacs	r0, {r1, r3, r4, r6}
    6b80:	1800005a 	stmdane	r0, {r1, r3, r4, r6}
    6b84:	00001533 	andeq	r1, r0, r3, lsr r5
    6b88:	1420e401 	strtne	lr, [r0], #-1025	; 0xfffffbff
    6b8c:	000006dd 	ldrdeq	r0, [r0], -sp
    6b90:	00005a3f 	andeq	r5, r0, pc, lsr sl
    6b94:	00005a3d 	andeq	r5, r0, sp, lsr sl
    6b98:	0023d218 	eoreq	sp, r3, r8, lsl r2
    6b9c:	20e50100 	rsccs	r0, r5, r0, lsl #2
    6ba0:	0006dd14 	andeq	sp, r6, r4, lsl sp
    6ba4:	005a5400 	subseq	r5, sl, r0, lsl #8
    6ba8:	005a5200 	subseq	r5, sl, r0, lsl #4
    6bac:	26121c00 	ldrcs	r1, [r2], -r0, lsl #24
    6bb0:	26381000 	ldrtcs	r1, [r8], -r0
    6bb4:	0a421000 	beq	108abbc <__RAM_SIZE+0xf8abbc>
    6bb8:	db180000 	blle	606bc0 <__RAM_SIZE+0x506bc0>
    6bbc:	01000009 	tsteq	r0, r9
    6bc0:	910d2104 	tstls	sp, r4, lsl #2
    6bc4:	69000003 	stmdbvs	r0, {r0, r1}
    6bc8:	6700005a 	smlsdvs	r0, sl, r0, r0
    6bcc:	0000005a 	andeq	r0, r0, sl, asr r0
    6bd0:	0025ec1d 	eoreq	lr, r5, sp, lsl ip
    6bd4:	0037d410 	eorseq	sp, r7, r0, lsl r4
    6bd8:	260a1e00 	strcs	r1, [sl], -r0, lsl #28
    6bdc:	37e31000 	strbcc	r1, [r3, r0]!
    6be0:	0a5f0000 	beq	17c6be8 <__RAM_SIZE+0x16c6be8>
    6be4:	011f0000 	tsteq	pc, r0
    6be8:	00780250 	rsbseq	r0, r8, r0, asr r2
    6bec:	26462000 	strbcs	r2, [r6], -r0
    6bf0:	37e31000 	strbcc	r1, [r3, r0]!
    6bf4:	011f0000 	tsteq	pc, r0
    6bf8:	00770250 	rsbseq	r0, r7, r0, asr r2
    6bfc:	01210000 			; <UNDEFINED> instruction: 0x01210000
    6c00:	00001bcb 	andeq	r1, r0, fp, asr #23
    6c04:	0e205001 	cdpeq	0, 2, cr5, cr0, cr1, {0}
    6c08:	0000d901 	andeq	sp, r0, r1, lsl #18
	...
    6c14:	005a7c00 	subseq	r7, sl, r0, lsl #24
    6c18:	0b0c0100 	bleq	307020 <__RAM_SIZE+0x207020>
    6c1c:	551b0000 	ldrpl	r0, [fp, #-0]
    6c20:	0100001d 	tsteq	r0, sp, lsl r0
    6c24:	a73a2050 			; <UNDEFINED> instruction: 0xa73a2050
    6c28:	a0000003 	andge	r0, r0, r3
    6c2c:	9c00005a 	stcls	0, cr0, [r0], {90}	; 0x5a
    6c30:	1b00005a 	blne	6da0 <__HEAP_SIZE+0x5da0>
    6c34:	000016d9 	ldrdeq	r1, [r0], -r9
    6c38:	39205101 	stmdbcc	r0!, {r0, r8, ip, lr}
    6c3c:	0000012f 	andeq	r0, r0, pc, lsr #2
    6c40:	00005ac4 	andeq	r5, r0, r4, asr #21
    6c44:	00005abe 			; <UNDEFINED> instruction: 0x00005abe
    6c48:	00156b1b 	andseq	r6, r5, fp, lsl fp
    6c4c:	20520100 	subscs	r0, r2, r0, lsl #2
    6c50:	0000d936 	andeq	sp, r0, r6, lsr r9
    6c54:	005af300 	subseq	pc, sl, r0, lsl #6
    6c58:	005aed00 	subseq	lr, sl, r0, lsl #26
    6c5c:	22c21800 	sbccs	r1, r2, #0, 16
    6c60:	54010000 	strpl	r0, [r1], #-0
    6c64:	06661120 	strbteq	r1, [r6], -r0, lsr #2
    6c68:	5b1e0000 	blpl	786c70 <__RAM_SIZE+0x686c70>
    6c6c:	5b1c0000 	blpl	706c74 <__RAM_SIZE+0x606c74>
    6c70:	e8180000 	ldmda	r8, {}	; <UNPREDICTABLE>
    6c74:	01000023 	tsteq	r0, r3, lsr #32
    6c78:	d9122055 	ldmdble	r2, {r0, r2, r4, r6, sp}
    6c7c:	33000000 	movwcc	r0, #0
    6c80:	3100005b 	qaddcc	r0, fp, r0
    6c84:	1d00005b 	stcne	0, cr0, [r0, #-364]	; 0xfffffe94
    6c88:	00000000 	andeq	r0, r0, r0
    6c8c:	000037f2 	strdeq	r3, [r0], -r2
    6c90:	0000001d 	andeq	r0, r0, sp, lsl r0
    6c94:	00380000 	eorseq	r0, r8, r0
    6c98:	01210000 			; <UNDEFINED> instruction: 0x01210000
    6c9c:	000022c8 	andeq	r2, r0, r8, asr #5
    6ca0:	10202a01 	eorne	r2, r0, r1, lsl #20
    6ca4:	00011901 	andeq	r1, r1, r1, lsl #18
	...
    6cb0:	005b4600 	subseq	r4, fp, r0, lsl #12
    6cb4:	0b930100 	bleq	fe4c70bc <__StackTop+0xc63c70bc>
    6cb8:	551b0000 	ldrpl	r0, [fp, #-0]
    6cbc:	0100001d 	tsteq	r0, sp, lsl r0
    6cc0:	a73b202a 	ldrge	r2, [fp, -sl, lsr #32]!
    6cc4:	6a000003 	bvs	6cd8 <__HEAP_SIZE+0x5cd8>
    6cc8:	6600005b 			; <UNDEFINED> instruction: 0x6600005b
    6ccc:	1b00005b 	blne	6e40 <__HEAP_SIZE+0x5e40>
    6cd0:	000016d9 	ldrdeq	r1, [r0], -r9
    6cd4:	3a202b01 	bcc	8118e0 <__RAM_SIZE+0x7118e0>
    6cd8:	0000012f 	andeq	r0, r0, pc, lsr #2
    6cdc:	00005b94 	muleq	r0, r4, fp
    6ce0:	00005b88 	andeq	r5, r0, r8, lsl #23
    6ce4:	0022c218 	eoreq	ip, r2, r8, lsl r2
    6ce8:	202d0100 	eorcs	r0, sp, r0, lsl #2
    6cec:	00066611 	andeq	r6, r6, r1, lsl r6
    6cf0:	005be800 	subseq	lr, fp, r0, lsl #16
    6cf4:	005be400 	subseq	lr, fp, r0, lsl #8
    6cf8:	1a191800 	bne	64cd00 <__RAM_SIZE+0x54cd00>
    6cfc:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
    6d00:	01191420 	tsteq	r9, r0, lsr #8
    6d04:	5c0a0000 	stcpl	0, cr0, [sl], {-0}
    6d08:	5c060000 	stcpl	0, cr0, [r6], {-0}
    6d0c:	001d0000 	andseq	r0, sp, r0
    6d10:	f2000000 	vhadd.s8	d0, d0, d0
    6d14:	1d000037 	stcne	0, cr0, [r0, #-220]	; 0xffffff24
    6d18:	00000000 	andeq	r0, r0, r0
    6d1c:	00003800 	andeq	r3, r0, r0, lsl #16
    6d20:	6f012200 	svcvs	0x00012200
    6d24:	01000020 	tsteq	r0, r0, lsr #32
    6d28:	010a1fb6 			; <UNDEFINED> instruction: 0x010a1fb6
	...
    6d34:	00005c29 	andeq	r5, r0, r9, lsr #24
    6d38:	000ca501 	andeq	sl, ip, r1, lsl #10
    6d3c:	1d471b00 	vstrne	d17, [r7, #-0]
    6d40:	b6010000 	strlt	r0, [r1], -r0
    6d44:	03a7361f 			; <UNDEFINED> instruction: 0x03a7361f
    6d48:	5c4d0000 	marpl	acc0, r0, sp
    6d4c:	5c490000 	marpl	acc0, r0, r9
    6d50:	721b0000 	andsvc	r0, fp, #0
    6d54:	01000023 	tsteq	r0, r3, lsr #32
    6d58:	2f351fb7 	svccs	0x00351fb7
    6d5c:	73000001 	movwvc	r0, #1
    6d60:	6b00005c 	blvs	6ed8 <__HEAP_SIZE+0x5ed8>
    6d64:	1b00005c 	blne	6edc <__HEAP_SIZE+0x5edc>
    6d68:	00000af1 	strdeq	r0, [r0], -r1
    6d6c:	361fb801 	ldrcc	fp, [pc], -r1, lsl #16
    6d70:	00000ca5 	andeq	r0, r0, r5, lsr #25
    6d74:	00005cb0 			; <UNDEFINED> instruction: 0x00005cb0
    6d78:	00005cac 	andeq	r5, r0, ip, lsr #25
    6d7c:	0022c218 	eoreq	ip, r2, r8, lsl r2
    6d80:	1fba0100 	svcne	0x00ba0100
    6d84:	00066611 	andeq	r6, r6, r1, lsl r6
    6d88:	005cd200 	subseq	sp, ip, r0, lsl #4
    6d8c:	005cce00 	subseq	ip, ip, r0, lsl #28
    6d90:	15f51800 	ldrbne	r1, [r5, #2048]!	; 0x800
    6d94:	bb010000 	bllt	46d9c <__HEAP_SIZE+0x45d9c>
    6d98:	00c3111f 	sbceq	r1, r3, pc, lsl r1
    6d9c:	5cf40000 	ldclpl	0, cr0, [r4]
    6da0:	5cf00000 	ldclpl	0, cr0, [r0]
    6da4:	26180000 	ldrcs	r0, [r8], -r0
    6da8:	0100000c 	tsteq	r0, ip
    6dac:	2f151fbc 	svccs	0x00151fbc
    6db0:	16000001 	strne	r0, [r0], -r1
    6db4:	1200005d 	andne	r0, r0, #93	; 0x5d
    6db8:	2300005d 	movwcs	r0, #93	; 0x5d
    6dbc:	00000758 	andeq	r0, r0, r8, asr r7
    6dc0:	00000c4c 	andeq	r0, r0, ip, asr #24
    6dc4:	000a0f18 	andeq	r0, sl, r8, lsl pc
    6dc8:	1fee0100 	svcne	0x00ee0100
    6dcc:	0006dd15 	andeq	sp, r6, r5, lsl sp
    6dd0:	005d3800 	subseq	r3, sp, r0, lsl #16
    6dd4:	005d3400 	subseq	r3, sp, r0, lsl #8
    6dd8:	001c0000 	andseq	r0, ip, r0
    6ddc:	00000000 	andeq	r0, r0, r0
    6de0:	6f000000 	svcvs	0x00000000
    6de4:	1800000c 	stmdane	r0, {r2, r3}
    6de8:	000009db 	ldrdeq	r0, [r0], -fp
    6dec:	151fef01 	ldrne	lr, [pc, #-3841]	; 5ef3 <__HEAP_SIZE+0x4ef3>
    6df0:	00000391 	muleq	r0, r1, r3
    6df4:	00005d58 	andeq	r5, r0, r8, asr sp
    6df8:	00005d56 	andeq	r5, r0, r6, asr sp
    6dfc:	00001c00 	andeq	r1, r0, r0, lsl #24
    6e00:	00000000 	andeq	r0, r0, r0
    6e04:	0c920000 	ldceq	0, cr0, [r2], {0}
    6e08:	db180000 	blle	606e10 <__RAM_SIZE+0x506e10>
    6e0c:	01000009 	tsteq	r0, r9
    6e10:	91151ff5 			; <UNDEFINED> instruction: 0x91151ff5
    6e14:	6d000003 	stcvs	0, cr0, [r0, #-12]
    6e18:	6b00005d 	blvs	6f94 <__HEAP_SIZE+0x5f94>
    6e1c:	0000005d 	andeq	r0, r0, sp, asr r0
    6e20:	0000001d 	andeq	r0, r0, sp, lsl r0
    6e24:	00380e00 	eorseq	r0, r8, r0, lsl #28
    6e28:	00001d00 	andeq	r1, r0, r0, lsl #26
    6e2c:	381c0000 	ldmdacc	ip, {}	; <UNPREDICTABLE>
    6e30:	07000000 	streq	r0, [r0, -r0]
    6e34:	00011904 	andeq	r1, r1, r4, lsl #18
    6e38:	20012100 	andcs	r2, r1, r0, lsl #2
    6e3c:	01000016 	tsteq	r0, r6, lsl r0
    6e40:	01101f10 	tsteq	r0, r0, lsl pc
    6e44:	00000119 	andeq	r0, r0, r9, lsl r1
	...
    6e50:	00005d80 	andeq	r5, r0, r0, lsl #27
    6e54:	000e1501 	andeq	r1, lr, r1, lsl #10
    6e58:	1d471b00 	vstrne	d17, [r7, #-0]
    6e5c:	10010000 	andne	r0, r1, r0
    6e60:	03a7381f 			; <UNDEFINED> instruction: 0x03a7381f
    6e64:	5da40000 	stcpl	0, cr0, [r4]
    6e68:	5da00000 	stcpl	0, cr0, [r0]
    6e6c:	721b0000 	andsvc	r0, fp, #0
    6e70:	01000023 	tsteq	r0, r3, lsr #32
    6e74:	2f371f11 	svccs	0x00371f11
    6e78:	e4000001 	str	r0, [r0], #-1
    6e7c:	c200005d 	andgt	r0, r0, #93	; 0x5d
    6e80:	1b00005d 	blne	6ffc <__HEAP_SIZE+0x5ffc>
    6e84:	00001f04 	andeq	r1, r0, r4, lsl #30
    6e88:	341f1201 	ldrcc	r1, [pc], #-513	; 6e90 <__HEAP_SIZE+0x5e90>
    6e8c:	000000d9 	ldrdeq	r0, [r0], -r9
    6e90:	00005ecb 	andeq	r5, r0, fp, asr #29
    6e94:	00005ec1 	andeq	r5, r0, r1, asr #29
    6e98:	001cbd1b 	andseq	fp, ip, fp, lsl sp
    6e9c:	1f130100 	svcne	0x00130100
    6ea0:	00052b39 	andeq	r2, r5, r9, lsr fp
    6ea4:	005f1400 	subseq	r1, pc, r0, lsl #8
    6ea8:	005f1000 	subseq	r1, pc, r0
    6eac:	1c471b00 	mcrrne	11, 0, r1, r7, cr0
    6eb0:	14010000 	strne	r0, [r1], #-0
    6eb4:	0e15361f 	mrceq	6, 0, r3, cr5, cr15, {0}
    6eb8:	5f390000 	svcpl	0x00390000
    6ebc:	5f350000 	svcpl	0x00350000
    6ec0:	f11b0000 			; <UNDEFINED> instruction: 0xf11b0000
    6ec4:	0100000a 	tsteq	r0, sl
    6ec8:	a5381f15 	ldrge	r1, [r8, #-3861]!	; 0xfffff0eb
    6ecc:	5d00000c 	stcpl	0, cr0, [r0, #-48]	; 0xffffffd0
    6ed0:	5900005f 	stmdbpl	r0, {r0, r1, r2, r3, r4, r6}
    6ed4:	1800005f 	stmdane	r0, {r0, r1, r2, r3, r4, r6}
    6ed8:	000022c2 	andeq	r2, r0, r2, asr #5
    6edc:	111f1701 	tstne	pc, r1, lsl #14
    6ee0:	00000666 	andeq	r0, r0, r6, ror #12
    6ee4:	00005f81 	andeq	r5, r0, r1, lsl #31
    6ee8:	00005f7d 	andeq	r5, r0, sp, ror pc
    6eec:	0015f518 	andseq	pc, r5, r8, lsl r5	; <UNPREDICTABLE>
    6ef0:	1f180100 	svcne	0x00180100
    6ef4:	0000c311 	andeq	ip, r0, r1, lsl r3
    6ef8:	005fa300 	subseq	sl, pc, r0, lsl #6
    6efc:	005f9f00 	subseq	r9, pc, r0, lsl #30
    6f00:	1a191800 	bne	64cf08 <__RAM_SIZE+0x54cf08>
    6f04:	19010000 	stmdbne	r1, {}	; <UNPREDICTABLE>
    6f08:	0119141f 	tsteq	r9, pc, lsl r4
    6f0c:	5fc90000 	svcpl	0x00c90000
    6f10:	5fc10000 	svcpl	0x00c10000
    6f14:	26180000 	ldrcs	r0, [r8], -r0
    6f18:	0100000c 	tsteq	r0, ip
    6f1c:	2f151f1a 	svccs	0x00151f1a
    6f20:	03000001 	movweq	r0, #1
    6f24:	ff000060 			; <UNDEFINED> instruction: 0xff000060
    6f28:	2300005f 	movwcs	r0, #95	; 0x5f
    6f2c:	00000740 	andeq	r0, r0, r0, asr #14
    6f30:	00000dbc 			; <UNDEFINED> instruction: 0x00000dbc
    6f34:	000a0f18 	andeq	r0, sl, r8, lsl pc
    6f38:	1f780100 	svcne	0x00780100
    6f3c:	0006dd15 	andeq	sp, r6, r5, lsl sp
    6f40:	00602500 	rsbeq	r2, r0, r0, lsl #10
    6f44:	00602100 	rsbeq	r2, r0, r0, lsl #2
    6f48:	001c0000 	andseq	r0, ip, r0
    6f4c:	00000000 	andeq	r0, r0, r0
    6f50:	df000000 	svcle	0x00000000
    6f54:	1800000d 	stmdane	r0, {r0, r2, r3}
    6f58:	000009db 	ldrdeq	r0, [r0], -fp
    6f5c:	151f7901 	ldrne	r7, [pc, #-2305]	; 6663 <__HEAP_SIZE+0x5663>
    6f60:	00000391 	muleq	r0, r1, r3
    6f64:	00006045 	andeq	r6, r0, r5, asr #32
    6f68:	00006043 	andeq	r6, r0, r3, asr #32
    6f6c:	00001c00 	andeq	r1, r0, r0, lsl #24
    6f70:	00000000 	andeq	r0, r0, r0
    6f74:	0e020000 	cdpeq	0, 0, cr0, cr2, cr0, {0}
    6f78:	db180000 	blle	606f80 <__RAM_SIZE+0x506f80>
    6f7c:	01000009 	tsteq	r0, r9
    6f80:	91151f7f 	tstls	r5, pc, ror pc
    6f84:	5a000003 	bpl	6f98 <__HEAP_SIZE+0x5f98>
    6f88:	58000060 	stmdapl	r0, {r5, r6}
    6f8c:	00000060 	andeq	r0, r0, r0, rrx
    6f90:	0000001d 	andeq	r0, r0, sp, lsl r0
    6f94:	00380e00 	eorseq	r0, r8, r0, lsl #28
    6f98:	00001d00 	andeq	r1, r0, r0, lsl #26
    6f9c:	381c0000 	ldmdacc	ip, {}	; <UNPREDICTABLE>
    6fa0:	07000000 	streq	r0, [r0, -r0]
    6fa4:	0000d904 	andeq	sp, r0, r4, lsl #18
    6fa8:	8b012100 	blhi	4f3b0 <__HEAP_SIZE+0x4e3b0>
    6fac:	01000017 	tsteq	r0, r7, lsl r0
    6fb0:	01101e98 			; <UNDEFINED> instruction: 0x01101e98
    6fb4:	00000119 	andeq	r0, r0, r9, lsl r1
	...
    6fc0:	0000606d 	andeq	r6, r0, sp, rrx
    6fc4:	000f4a01 	andeq	r4, pc, r1, lsl #20
    6fc8:	1d471b00 	vstrne	d17, [r7, #-0]
    6fcc:	98010000 	stmdals	r1, {}	; <UNPREDICTABLE>
    6fd0:	03a7311e 			; <UNDEFINED> instruction: 0x03a7311e
    6fd4:	60910000 	addsvs	r0, r1, r0
    6fd8:	608d0000 	addvs	r0, sp, r0
    6fdc:	721b0000 	andsvc	r0, fp, #0
    6fe0:	01000023 	tsteq	r0, r3, lsr #32
    6fe4:	2f301e99 	svccs	0x00301e99
    6fe8:	d1000001 	tstle	r0, r1
    6fec:	af000060 	svcge	0x00000060
    6ff0:	1b000060 	blne	7178 <__HEAP_SIZE+0x6178>
    6ff4:	00001f04 	andeq	r1, r0, r4, lsl #30
    6ff8:	2d1e9a01 	vldrcs	s18, [lr, #-4]
    6ffc:	000000d9 	ldrdeq	r0, [r0], -r9
    7000:	000061b8 			; <UNDEFINED> instruction: 0x000061b8
    7004:	000061ae 	andeq	r6, r0, lr, lsr #3
    7008:	001cbd1b 	andseq	fp, ip, fp, lsl sp
    700c:	1e9b0100 	fmlnee	f0, f3, f0
    7010:	00052b32 	andeq	r2, r5, r2, lsr fp
    7014:	00620100 	rsbeq	r0, r2, r0, lsl #2
    7018:	0061fd00 	rsbeq	pc, r1, r0, lsl #26
    701c:	1c471b00 	mcrrne	11, 0, r1, r7, cr0
    7020:	9c010000 	stcls	0, cr0, [r1], {-0}
    7024:	0e152f1e 	mrceq	15, 0, r2, cr5, cr14, {0}
    7028:	62260000 	eorvs	r0, r6, #0
    702c:	62220000 	eorvs	r0, r2, #0
    7030:	c2180000 	andsgt	r0, r8, #0
    7034:	01000022 	tsteq	r0, r2, lsr #32
    7038:	66111e9e 			; <UNDEFINED> instruction: 0x66111e9e
    703c:	4a000006 	bmi	705c <__HEAP_SIZE+0x605c>
    7040:	46000062 	strmi	r0, [r0], -r2, rrx
    7044:	18000062 	stmdane	r0, {r1, r5, r6}
    7048:	00001a19 	andeq	r1, r0, r9, lsl sl
    704c:	141e9f01 	ldrne	r9, [lr], #-3841	; 0xfffff0ff
    7050:	00000119 	andeq	r0, r0, r9, lsl r1
    7054:	00006270 	andeq	r6, r0, r0, ror r2
    7058:	00006268 	andeq	r6, r0, r8, ror #4
    705c:	0015f518 	andseq	pc, r5, r8, lsl r5	; <UNPREDICTABLE>
    7060:	1ea00100 	fdvnes	f0, f0, f0
    7064:	0000c311 	andeq	ip, r0, r1, lsl r3
    7068:	0062ac00 	rsbeq	sl, r2, r0, lsl #24
    706c:	0062a600 	rsbeq	sl, r2, r0, lsl #12
    7070:	07282300 	streq	r2, [r8, -r0, lsl #6]!
    7074:	0f020000 	svceq	0x00020000
    7078:	0f180000 	svceq	0x00180000
    707c:	0100000a 	tsteq	r0, sl
    7080:	dd111ee5 	ldcle	14, cr1, [r1, #-916]	; 0xfffffc6c
    7084:	d9000006 	stmdble	r0, {r1, r2}
    7088:	d5000062 	strle	r0, [r0, #-98]	; 0xffffff9e
    708c:	00000062 	andeq	r0, r0, r2, rrx
    7090:	0000001c 	andeq	r0, r0, ip, lsl r0
    7094:	00000000 	andeq	r0, r0, r0
    7098:	000f2500 	andeq	r2, pc, r0, lsl #10
    709c:	09db1800 	ldmibeq	fp, {fp, ip}^
    70a0:	e6010000 	str	r0, [r1], -r0
    70a4:	0391111e 	orrseq	r1, r1, #-2147483641	; 0x80000007
    70a8:	62f90000 	rscsvs	r0, r9, #0
    70ac:	62f70000 	rscsvs	r0, r7, #0
    70b0:	1d000000 	stcne	0, cr0, [r0, #-0]
    70b4:	00000000 	andeq	r0, r0, r0
    70b8:	000037f2 	strdeq	r3, [r0], -r2
    70bc:	0000001d 	andeq	r0, r0, sp, lsl r0
    70c0:	00380000 	eorseq	r0, r8, r0
    70c4:	00001d00 	andeq	r1, r0, r0, lsl #26
    70c8:	14910000 	ldrne	r0, [r1], #0
    70cc:	001d0000 	andseq	r0, sp, r0
    70d0:	2a000000 	bcs	70d8 <__HEAP_SIZE+0x60d8>
    70d4:	00000038 	andeq	r0, r0, r8, lsr r0
    70d8:	1a6b0121 	bne	1ac7564 <__RAM_SIZE+0x19c7564>
    70dc:	25010000 	strcs	r0, [r1, #-0]
    70e0:	1901101e 	stmdbne	r1, {r1, r2, r3, r4, ip}
    70e4:	00000001 	andeq	r0, r0, r1
    70e8:	00000000 	andeq	r0, r0, r0
    70ec:	0c000000 	stceq	0, cr0, [r0], {-0}
    70f0:	01000063 	tsteq	r0, r3, rrx
    70f4:	0000107d 	andeq	r1, r0, sp, ror r0
    70f8:	00240a1b 	eoreq	r0, r4, fp, lsl sl
    70fc:	1e250100 	sufnes	f0, f5, f0
    7100:	00012f34 	andeq	r2, r1, r4, lsr pc
    7104:	00633400 	rsbeq	r3, r3, r0, lsl #8
    7108:	00632c00 	rsbeq	r2, r3, r0, lsl #24
    710c:	18161b00 	ldmdane	r6, {r8, r9, fp, ip}
    7110:	26010000 	strcs	r0, [r1], -r0
    7114:	00d9311e 	sbcseq	r3, r9, lr, lsl r1
    7118:	636f0000 	cmnvs	pc, #0
    711c:	636b0000 	cmnvs	fp, #0
    7120:	eb1b0000 	bl	6c7128 <__RAM_SIZE+0x5c7128>
    7124:	01000014 	tsteq	r0, r4, lsl r0
    7128:	d9311e27 	ldmdble	r1!, {r0, r1, r2, r5, r9, sl, fp, ip}
    712c:	97000000 	strls	r0, [r0, -r0]
    7130:	8d000063 	stchi	0, cr0, [r0, #-396]	; 0xfffffe74
    7134:	1b000063 	blne	72c8 <__HEAP_SIZE+0x62c8>
    7138:	00001f8c 	andeq	r1, r0, ip, lsl #31
    713c:	331e2801 	tstcc	lr, #65536	; 0x10000
    7140:	00000e15 	andeq	r0, r0, r5, lsl lr
    7144:	000063e6 	andeq	r6, r0, r6, ror #7
    7148:	000063dc 	ldrdeq	r6, [r0], -ip
    714c:	0020e11b 	eoreq	lr, r0, fp, lsl r1
    7150:	1e290100 	sufnee	f0, f1, f0
    7154:	00014a33 	andeq	r4, r1, r3, lsr sl
    7158:	00642f00 	rsbeq	r2, r4, r0, lsl #30
    715c:	00642b00 	rsbeq	r2, r4, r0, lsl #22
    7160:	1a191800 	bne	64d168 <__RAM_SIZE+0x54d168>
    7164:	2b010000 	blcs	4716c <__HEAP_SIZE+0x4616c>
    7168:	0119141e 	tsteq	r9, lr, lsl r4
    716c:	64530000 	ldrbvs	r0, [r3], #-0
    7170:	644f0000 	strbvs	r0, [pc], #-0	; 7178 <__HEAP_SIZE+0x6178>
    7174:	53180000 	tstpl	r8, #0
    7178:	01000021 	tsteq	r0, r1, lsr #32
    717c:	191d1e2b 	ldmdbne	sp, {r0, r1, r3, r5, r9, sl, fp, ip}
    7180:	76000001 	strvc	r0, [r0], -r1
    7184:	72000064 	andvc	r0, r0, #100	; 0x64
    7188:	18000064 	stmdane	r0, {r2, r5, r6}
    718c:	00001e4e 	andeq	r1, r0, lr, asr #28
    7190:	2e1e2b01 	vnmlscs.f64	d2, d14, d1
    7194:	00000119 	andeq	r0, r0, r9, lsl r1
    7198:	0000649a 	muleq	r0, sl, r4
    719c:	00006494 	muleq	r0, r4, r4
    71a0:	0000001d 	andeq	r0, r0, sp, lsl r0
    71a4:	00262800 	eoreq	r2, r6, r0, lsl #16
    71a8:	00001d00 	andeq	r1, r0, r0, lsl #26
    71ac:	37f20000 	ldrbcc	r0, [r2, r0]!
    71b0:	001d0000 	andseq	r0, sp, r0
    71b4:	00000000 	andeq	r0, r0, r0
    71b8:	1d000038 	stcne	0, cr0, [r0, #-224]	; 0xffffff20
    71bc:	00000000 	andeq	r0, r0, r0
    71c0:	000024cf 	andeq	r2, r0, pc, asr #9
    71c4:	0000001d 	andeq	r0, r0, sp, lsl r0
    71c8:	0037f200 	eorseq	pc, r7, r0, lsl #4
    71cc:	00001d00 	andeq	r1, r0, r0, lsl #26
    71d0:	38000000 	stmdacc	r0, {}	; <UNPREDICTABLE>
    71d4:	001d0000 	andseq	r0, sp, r0
    71d8:	00000000 	andeq	r0, r0, r0
    71dc:	1d000038 	stcne	0, cr0, [r0, #-224]	; 0xffffff20
    71e0:	00000000 	andeq	r0, r0, r0
    71e4:	00003800 	andeq	r3, r0, r0, lsl #16
    71e8:	0000001e 	andeq	r0, r0, lr, lsl r0
    71ec:	00098600 	andeq	r8, r9, r0, lsl #12
    71f0:	00107300 	andseq	r7, r0, r0, lsl #6
    71f4:	50011f00 	andpl	r1, r1, r0, lsl #30
    71f8:	1f007702 	svcne	0x00007702
    71fc:	31015101 	tstcc	r1, r1, lsl #2
    7200:	00001d00 	andeq	r1, r0, r0, lsl #26
    7204:	382a0000 	stmdacc	sl!, {}	; <UNPREDICTABLE>
    7208:	21000000 	mrscs	r0, (UNDEF: 0)
    720c:	001abc01 	andseq	fp, sl, r1, lsl #24
    7210:	1dbe0100 	ldfnes	f0, [lr]
    7214:	00d9010e 	sbcseq	r0, r9, lr, lsl #2
	...
    7220:	64c60000 	strbvs	r0, [r6], #0
    7224:	86010000 	strhi	r0, [r1], -r0
    7228:	1b000011 	blne	7274 <__HEAP_SIZE+0x6274>
    722c:	0000240a 	andeq	r2, r0, sl, lsl #8
    7230:	331dbe01 	tstcc	sp, #1, 28
    7234:	0000012f 	andeq	r0, r0, pc, lsr #2
    7238:	000064ee 	andeq	r6, r0, lr, ror #9
    723c:	000064e6 	andeq	r6, r0, r6, ror #9
    7240:	0017ad1b 	andseq	sl, r7, fp, lsl sp
    7244:	1dbf0100 	ldfnes	f0, [pc]	; 724c <__HEAP_SIZE+0x624c>
    7248:	00011932 	andeq	r1, r1, r2, lsr r9
    724c:	00652900 	rsbeq	r2, r5, r0, lsl #18
    7250:	00652500 	rsbeq	r2, r5, r0, lsl #10
    7254:	20e11b00 	rsccs	r1, r1, r0, lsl #22
    7258:	c0010000 	andgt	r0, r1, r0
    725c:	014a321d 	cmpeq	sl, sp, lsl r2
    7260:	65550000 	ldrbvs	r0, [r5, #-0]
    7264:	65470000 	strbvs	r0, [r7, #-0]
    7268:	e8180000 	ldmda	r8, {}	; <UNPREDICTABLE>
    726c:	01000023 	tsteq	r0, r3, lsr #32
    7270:	d9121dc2 	ldmdble	r2, {r1, r6, r7, r8, sl, fp, ip}
    7274:	b7000000 	strlt	r0, [r0, -r0]
    7278:	b3000065 	movwlt	r0, #101	; 0x65
    727c:	18000065 	stmdane	r0, {r0, r2, r5, r6}
    7280:	00002153 	andeq	r2, r0, r3, asr r1
    7284:	141dc301 	ldrne	ip, [sp], #-769	; 0xfffffcff
    7288:	00000119 	andeq	r0, r0, r9, lsl r1
    728c:	000065d9 	ldrdeq	r6, [r0], -r9
    7290:	000065d5 	ldrdeq	r6, [r0], -r5
    7294:	001e4e18 	andseq	r4, lr, r8, lsl lr
    7298:	1dc30100 	stfnee	f0, [r3]
    729c:	00011925 	andeq	r1, r1, r5, lsr #18
    72a0:	0065fd00 	rsbeq	pc, r5, r0, lsl #26
    72a4:	0065f700 	rsbeq	pc, r5, r0, lsl #14
    72a8:	00001d00 	andeq	r1, r0, r0, lsl #26
    72ac:	26280000 	strtcs	r0, [r8], -r0
    72b0:	001d0000 	andseq	r0, sp, r0
    72b4:	f2000000 	vhadd.s8	d0, d0, d0
    72b8:	1d000037 	stcne	0, cr0, [r0, #-220]	; 0xffffff24
    72bc:	00000000 	andeq	r0, r0, r0
    72c0:	00003800 	andeq	r3, r0, r0, lsl #16
    72c4:	0000001d 	andeq	r0, r0, sp, lsl r0
    72c8:	0024cf00 	eoreq	ip, r4, r0, lsl #30
    72cc:	00001d00 	andeq	r1, r0, r0, lsl #26
    72d0:	37f20000 	ldrbcc	r0, [r2, r0]!
    72d4:	001d0000 	andseq	r0, sp, r0
    72d8:	00000000 	andeq	r0, r0, r0
    72dc:	1d000038 	stcne	0, cr0, [r0, #-224]	; 0xffffff20
    72e0:	00000000 	andeq	r0, r0, r0
    72e4:	00003800 	andeq	r3, r0, r0, lsl #16
    72e8:	0000001d 	andeq	r0, r0, sp, lsl r0
    72ec:	00380000 	eorseq	r0, r8, r0
    72f0:	00001e00 	andeq	r1, r0, r0, lsl #28
    72f4:	09860000 	stmibeq	r6, {}	; <UNPREDICTABLE>
    72f8:	117c0000 	cmnne	ip, r0
    72fc:	011f0000 	tsteq	pc, r0
    7300:	00750250 	rsbseq	r0, r5, r0, asr r2
    7304:	0151011f 	cmpeq	r1, pc, lsl r1
    7308:	001d0031 	andseq	r0, sp, r1, lsr r0
    730c:	2a000000 	bcs	7314 <__HEAP_SIZE+0x6314>
    7310:	00000038 	andeq	r0, r0, r8, lsr r0
    7314:	0e300124 	rsfeqsp	f0, f0, f4
    7318:	a5010000 	strge	r0, [r1, #-0]
    731c:	a701121d 	smladge	r1, sp, r2, r1
    7320:	00000003 	andeq	r0, r0, r3
    7324:	00000000 	andeq	r0, r0, r0
    7328:	02000000 	andeq	r0, r0, #0
    732c:	bb01007d 	bllt	47528 <__HEAP_SIZE+0x46528>
    7330:	18000011 	stmdane	r0, {r0, r4}
    7334:	000022c2 	andeq	r2, r0, r2, asr #5
    7338:	111da701 	tstne	sp, r1, lsl #14
    733c:	00000666 	andeq	r0, r0, r6, ror #12
    7340:	0000662b 	andeq	r6, r0, fp, lsr #12
    7344:	00006629 	andeq	r6, r0, r9, lsr #12
    7348:	c5012400 	strgt	r2, [r1, #-1024]	; 0xfffffc00
    734c:	0100001c 	tsteq	r0, ip, lsl r0
    7350:	010c1d91 			; <UNDEFINED> instruction: 0x010c1d91
    7354:	0000014a 	andeq	r0, r0, sl, asr #2
	...
    7360:	01007d02 	tsteq	r0, r2, lsl #26
    7364:	000011f0 	strdeq	r1, [r0], -r0
    7368:	000c0518 	andeq	r0, ip, r8, lsl r5
    736c:	1d930100 	ldfnes	f0, [r3]
    7370:	00014a10 	andeq	r4, r1, r0, lsl sl
    7374:	00664000 	rsbeq	r4, r6, r0
    7378:	00663e00 	rsbeq	r3, r6, r0, lsl #28
    737c:	01220000 			; <UNDEFINED> instruction: 0x01220000
    7380:	000012c5 	andeq	r1, r0, r5, asr #5
    7384:	0a1a7901 	beq	6a5790 <__RAM_SIZE+0x5a5790>
    7388:	00000001 	andeq	r0, r0, r1
    738c:	00000000 	andeq	r0, r0, r0
    7390:	00665300 	rsbeq	r5, r6, r0, lsl #6
    7394:	12b70100 	adcsne	r0, r7, #0, 2
    7398:	ca1b0000 	bgt	6c73a0 <__RAM_SIZE+0x5c73a0>
    739c:	0100001e 	tsteq	r0, lr, lsl r0
    73a0:	b3421a79 	movtlt	r1, #10873	; 0x2a79
    73a4:	89000003 	stmdbhi	r0, {r0, r1}
    73a8:	7f000066 	svcvc	0x00000066
    73ac:	1b000066 	blne	754c <__HEAP_SIZE+0x654c>
    73b0:	00001e31 	andeq	r1, r0, r1, lsr lr
    73b4:	3b1a7a01 	blcc	6a5bc0 <__RAM_SIZE+0x5a5bc0>
    73b8:	0000012f 	andeq	r0, r0, pc, lsr #2
    73bc:	000066ce 	andeq	r6, r0, lr, asr #13
    73c0:	000066c8 	andeq	r6, r0, r8, asr #13
    73c4:	0022c218 	eoreq	ip, r2, r8, lsl r2
    73c8:	1a7c0100 	bne	1f077d0 <__RAM_SIZE+0x1e077d0>
    73cc:	00067117 	andeq	r7, r6, r7, lsl r1
    73d0:	00670400 	rsbeq	r0, r7, r0, lsl #8
    73d4:	0066fa00 	rsbeq	pc, r6, r0, lsl #20
    73d8:	21141800 	tstcs	r4, r0, lsl #16
    73dc:	7d010000 	stcvc	0, cr0, [r1, #-0]
    73e0:	012f151a 			; <UNDEFINED> instruction: 0x012f151a
    73e4:	67450000 	strbvs	r0, [r5, -r0]
    73e8:	67430000 	strbvs	r0, [r3, -r0]
    73ec:	d0180000 	andsle	r0, r8, r0
    73f0:	0100001d 	tsteq	r0, sp, lsl r0
    73f4:	2f2c1a7d 	svccs	0x002c1a7d
    73f8:	60000001 	andvs	r0, r0, r1
    73fc:	58000067 	stmdapl	r0, {r0, r1, r2, r5, r6}
    7400:	25000067 	strcs	r0, [r0, #-103]	; 0xffffff99
    7404:	000014d8 	ldrdeq	r1, [r0], -r8
    7408:	1b1a7e01 	blne	6a6c14 <__RAM_SIZE+0x5a6c14>
    740c:	00000145 	andeq	r0, r0, r5, asr #2
    7410:	00001c01 	andeq	r1, r0, r1, lsl #24
    7414:	00000000 	andeq	r0, r0, r0
    7418:	12a60000 	adcne	r0, r6, #0
    741c:	db180000 	blle	607424 <__RAM_SIZE+0x507424>
    7420:	01000009 	tsteq	r0, r9
    7424:	91191ac9 	tstls	r9, r9, asr #21
    7428:	98000003 	stmdals	r0, {r0, r1}
    742c:	96000067 	strls	r0, [r0], -r7, rrx
    7430:	00000067 	andeq	r0, r0, r7, rrx
    7434:	00000020 	andeq	r0, r0, r0, lsr #32
    7438:	0037d400 	eorseq	sp, r7, r0, lsl #8
    743c:	50011f00 	andpl	r1, r1, r0, lsl #30
    7440:	00007502 	andeq	r7, r0, r2, lsl #10
    7444:	b3012100 	movwlt	r2, #4352	; 0x1100
    7448:	0100000e 	tsteq	r0, lr
    744c:	01101a1b 	tsteq	r0, fp, lsl sl
    7450:	00000119 	andeq	r0, r0, r9, lsl r1
    7454:	10002cac 	andne	r2, r0, ip, lsr #25
    7458:	10002d2c 	andne	r2, r0, ip, lsr #26
    745c:	000067ab 	andeq	r6, r0, fp, lsr #15
    7460:	00134a01 	andseq	r4, r3, r1, lsl #20
    7464:	1eca1b00 	vdivne.f64	d17, d10, d0
    7468:	1b010000 	blne	47470 <__HEAP_SIZE+0x46470>
    746c:	03b33c1a 			; <UNDEFINED> instruction: 0x03b33c1a
    7470:	67f30000 	ldrbvs	r0, [r3, r0]!
    7474:	67e30000 	strbvs	r0, [r3, r0]!
    7478:	c2180000 	andsgt	r0, r8, #0
    747c:	01000022 	tsteq	r0, r2, lsr #32
    7480:	71171a1d 	tstvc	r7, sp, lsl sl
    7484:	66000006 	strvs	r0, [r0], -r6
    7488:	56000068 	strpl	r0, [r0], -r8, rrx
    748c:	18000068 	stmdane	r0, {r3, r5, r6}
    7490:	00001a19 	andeq	r1, r0, r9, lsl sl
    7494:	141a1e01 	ldrne	r1, [sl], #-3585	; 0xfffff1ff
    7498:	00000119 	andeq	r0, r0, r9, lsl r1
    749c:	000068d1 	ldrdeq	r6, [r0], -r1
    74a0:	000068c9 	andeq	r6, r0, r9, asr #17
    74a4:	002ce61c 	eoreq	lr, ip, ip, lsl r6
    74a8:	002d1610 	eoreq	r1, sp, r0, lsl r6
    74ac:	00133910 	andseq	r3, r3, r0, lsl r9
    74b0:	09db1800 	ldmibeq	fp, {fp, ip}^
    74b4:	4a010000 	bmi	474bc <__HEAP_SIZE+0x464bc>
    74b8:	0391151a 	orrseq	r1, r1, #109051904	; 0x6800000
    74bc:	690b0000 	stmdbvs	fp, {}	; <UNPREDICTABLE>
    74c0:	69090000 	stmdbvs	r9, {}	; <UNPREDICTABLE>
    74c4:	20000000 	andcs	r0, r0, r0
    74c8:	10002cd0 	ldrdne	r2, [r0], -r0
    74cc:	000037d4 	ldrdeq	r3, [r0], -r4
    74d0:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    74d4:	00000075 	andeq	r0, r0, r5, ror r0
    74d8:	12470121 	subne	r0, r7, #1073741832	; 0x40000008
    74dc:	b4010000 	strlt	r0, [r1], #-0
    74e0:	19011019 	stmdbne	r1, {r0, r3, r4, ip}
    74e4:	00000001 	andeq	r0, r0, r1
    74e8:	00000000 	andeq	r0, r0, r0
    74ec:	1e000000 	cdpne	0, 0, cr0, cr0, cr0, {0}
    74f0:	01000069 	tsteq	r0, r9, rrx
    74f4:	000013dd 	ldrdeq	r1, [r0], -sp
    74f8:	001eca1b 	andseq	ip, lr, fp, lsl sl
    74fc:	19b40100 	ldmibne	r4!, {r8}
    7500:	0003b339 	andeq	fp, r3, r9, lsr r3
    7504:	00696a00 	rsbeq	r6, r9, r0, lsl #20
    7508:	00695600 	rsbeq	r5, r9, r0, lsl #12
    750c:	20001800 	andcs	r1, r0, r0, lsl #16
    7510:	b6010000 	strlt	r0, [r1], -r0
    7514:	06711719 			; <UNDEFINED> instruction: 0x06711719
    7518:	69f70000 	ldmibvs	r7!, {}^	; <UNPREDICTABLE>
    751c:	69e30000 	stmibvs	r3!, {}^	; <UNPREDICTABLE>
    7520:	19180000 	ldmdbne	r8, {}	; <UNPREDICTABLE>
    7524:	0100001a 	tsteq	r0, sl, lsl r0
    7528:	191419b7 	ldmdbne	r4, {r0, r1, r2, r4, r5, r7, r8, fp, ip}
    752c:	76000001 	strvc	r0, [r0], -r1
    7530:	7000006a 	andvc	r0, r0, sl, rrx
    7534:	1c00006a 	stcne	0, cr0, [r0], {106}	; 0x6a
	...
    7540:	000013cc 	andeq	r1, r0, ip, asr #7
    7544:	0009db18 	andeq	sp, r9, r8, lsl fp
    7548:	19e20100 	stmibne	r2!, {r8}^
    754c:	00039115 	andeq	r9, r3, r5, lsl r1
    7550:	006aa400 	rsbeq	sl, sl, r0, lsl #8
    7554:	006aa200 	rsbeq	sl, sl, r0, lsl #4
    7558:	00200000 	eoreq	r0, r0, r0
    755c:	d4000000 	strle	r0, [r0], #-0
    7560:	1f000037 	svcne	0x00000037
    7564:	75025001 	strvc	r5, [r2, #-1]
    7568:	24000000 	strcs	r0, [r0], #-0
    756c:	0014ff01 	andseq	pc, r4, r1, lsl #30
    7570:	198c0100 	stmibne	ip, {r8}
    7574:	01190110 	tsteq	r9, r0, lsl r1
	...
    7580:	7d020000 	stcvc	0, cr0, [r2, #-0]
    7584:	14120100 	ldrne	r0, [r2], #-256	; 0xffffff00
    7588:	19180000 	ldmdbne	r8, {}	; <UNPREDICTABLE>
    758c:	0100001a 	tsteq	r0, sl, lsl r0
    7590:	1914198e 	ldmdbne	r4, {r1, r2, r3, r7, r8, fp, ip}
    7594:	b9000001 	stmdblt	r0, {r0}
    7598:	b700006a 	strlt	r0, [r0, -sl, rrx]
    759c:	0000006a 	andeq	r0, r0, sl, rrx
    75a0:	22150124 	andscs	r0, r5, #36, 2
    75a4:	73010000 	movwvc	r0, #4096	; 0x1000
    75a8:	a7011219 	smladge	r1, r9, r2, r1
    75ac:	00000003 	andeq	r0, r0, r3
    75b0:	00000000 	andeq	r0, r0, r0
    75b4:	02000000 	andeq	r0, r0, #0
    75b8:	5c01007d 	stcpl	0, cr0, [r1], {125}	; 0x7d
    75bc:	1b000014 	blne	7614 <__HEAP_SIZE+0x6614>
    75c0:	00001415 	andeq	r1, r0, r5, lsl r4
    75c4:	3f197301 	svccc	0x00197301
    75c8:	00000119 	andeq	r0, r0, r9, lsl r1
    75cc:	00006ad5 	ldrdeq	r6, [r0], -r5
    75d0:	00006acd 	andeq	r6, r0, sp, asr #21
    75d4:	001a1918 	andseq	r1, sl, r8, lsl r9
    75d8:	19750100 	ldmdbne	r5!, {r8}^
    75dc:	0003a716 	andeq	sl, r3, r6, lsl r7
    75e0:	006b1500 	rsbeq	r1, fp, r0, lsl #10
    75e4:	006b0f00 	rsbeq	r0, fp, r0, lsl #30
    75e8:	01240000 			; <UNDEFINED> instruction: 0x01240000
    75ec:	000012f1 	strdeq	r1, [r0], -r1	; <UNPREDICTABLE>
    75f0:	16195001 	ldrne	r5, [r9], -r1
    75f4:	0003a701 	andeq	sl, r3, r1, lsl #14
	...
    7600:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    7604:	00149101 	andseq	r9, r4, r1, lsl #2
    7608:	1a191800 	bne	64d610 <__RAM_SIZE+0x54d610>
    760c:	52010000 	andpl	r0, r1, #0
    7610:	03a71a19 			; <UNDEFINED> instruction: 0x03a71a19
    7614:	6b420000 	blvs	108761c <__RAM_SIZE+0xf8761c>
    7618:	6b400000 	blvs	1007620 <__RAM_SIZE+0xf07620>
    761c:	26000000 	strcs	r0, [r0], -r0
    7620:	00001c0e 	andeq	r1, r0, lr, lsl #24
    7624:	0d193801 	ldceq	8, cr3, [r9, #-4]
    7628:	0022bc01 	eoreq	fp, r2, r1, lsl #24
    762c:	0022e410 	eoreq	lr, r2, r0, lsl r4
    7630:	007d0210 	rsbseq	r0, sp, r0, lsl r2
    7634:	21301a01 	teqcs	r0, r1, lsl #20
    7638:	03010000 	movweq	r0, #4096	; 0x1000
    763c:	52011119 	andpl	r1, r1, #1073741830	; 0x40000006
    7640:	76100025 	ldrvc	r0, [r0], -r5, lsr #32
    7644:	55100025 	ldrpl	r0, [r0, #-37]	; 0xffffffdb
    7648:	0100006b 	tsteq	r0, fp, rrx
    764c:	000014fe 	strdeq	r1, [r0], -lr
    7650:	0022c21b 	eoreq	ip, r2, fp, lsl r2
    7654:	19030100 	stmdbne	r3, {r8}
    7658:	00066627 	andeq	r6, r6, r7, lsr #12
    765c:	006b8100 	rsbeq	r8, fp, r0, lsl #2
    7660:	006b7500 	rsbeq	r7, fp, r0, lsl #10
    7664:	25681d00 	strbcs	r1, [r8, #-3328]!	; 0xfffff300
    7668:	38381000 	ldmdacc	r8!, {ip}
    766c:	6e1e0000 	cdpvs	0, 1, cr0, cr14, cr0, {0}
    7670:	38100025 	ldmdacc	r0, {r0, r2, r5}
    7674:	f4000038 	vst4.8	{d0-d3}, [r0 :256], r8
    7678:	1f000014 	svcne	0x00000014
    767c:	74025001 	strvc	r5, [r2], #-1
    7680:	741d0000 	ldrvc	r0, [sp], #-0
    7684:	38100025 	ldmdacc	r0, {r0, r2, r5}
    7688:	00000038 	andeq	r0, r0, r8, lsr r0
    768c:	18c10121 	stmiane	r1, {r0, r5, r8}^
    7690:	e3010000 	movw	r0, #4096	; 0x1000
    7694:	2f011118 	svccs	0x00011118
    7698:	00000001 	andeq	r0, r0, r1
    769c:	00000000 	andeq	r0, r0, r0
    76a0:	cb000000 	blgt	76a8 <__HEAP_SIZE+0x66a8>
    76a4:	0100006b 	tsteq	r0, fp, rrx
    76a8:	0000157c 	andeq	r1, r0, ip, ror r5
    76ac:	001d551b 	andseq	r5, sp, fp, lsl r5
    76b0:	18e30100 	stmiane	r3!, {r8}^
    76b4:	0003a73b 	andeq	sl, r3, fp, lsr r7
    76b8:	006bef00 	rsbeq	lr, fp, r0, lsl #30
    76bc:	006beb00 	rsbeq	lr, fp, r0, lsl #22
    76c0:	22c21800 	sbccs	r1, r2, #0, 16
    76c4:	e5010000 	str	r0, [r1, #-0]
    76c8:	06661118 			; <UNDEFINED> instruction: 0x06661118
    76cc:	6c0f0000 	stcvs	0, cr0, [pc], {-0}
    76d0:	6c0d0000 	stcvs	0, cr0, [sp], {-0}
    76d4:	f2180000 	vhadd.s16	d0, d8, d0
    76d8:	0100001f 	tsteq	r0, pc, lsl r0
    76dc:	601318e6 	andsvs	r1, r3, r6, ror #17
    76e0:	24000001 	strcs	r0, [r0], #-1
    76e4:	2200006c 	andcs	r0, r0, #108	; 0x6c
    76e8:	1800006c 	stmdane	r0, {r2, r3, r5, r6}
    76ec:	00000c05 	andeq	r0, r0, r5, lsl #24
    76f0:	1518e701 	ldrne	lr, [r8, #-1793]	; 0xfffff8ff
    76f4:	0000012f 	andeq	r0, r0, pc, lsr #2
    76f8:	00006c3a 	andeq	r6, r0, sl, lsr ip
    76fc:	00006c38 	andeq	r6, r0, r8, lsr ip
    7700:	0000001d 	andeq	r0, r0, sp, lsl r0
    7704:	00157c00 	andseq	r7, r5, r0, lsl #24
    7708:	8c270000 	stchi	0, cr0, [r7], #-0
    770c:	01000021 	tsteq	r0, r1, lsr #32
    7710:	012318a3 			; <UNDEFINED> instruction: 0x012318a3
    7714:	00000029 	andeq	r0, r0, r9, lsr #32
	...
    7720:	01007d02 	tsteq	r0, r2, lsl #26
    7724:	000015c5 	andeq	r1, r0, r5, asr #11
    7728:	0016491b 	andseq	r4, r6, fp, lsl r9
    772c:	18a30100 	stmiane	r3!, {r8}
    7730:	0015c54f 	andseq	ip, r5, pc, asr #10
    7734:	006c5100 	rsbeq	r5, ip, r0, lsl #2
    7738:	006c4d00 	rsbeq	r4, ip, r0, lsl #26
    773c:	1fd31800 	svcne	0x00d31800
    7740:	a5010000 	strge	r0, [r1, #-0]
    7744:	00292018 	eoreq	r2, r9, r8, lsl r0
    7748:	6c770000 	ldclvs	0, cr0, [r7], #-0
    774c:	6c6f0000 	stclvs	0, cr0, [pc], #-0	; 7754 <__HEAP_SIZE+0x6754>
    7750:	07000000 	streq	r0, [r0, -r0]
    7754:	0000d404 	andeq	sp, r0, r4, lsl #8
    7758:	23b21a00 			; <UNDEFINED> instruction: 0x23b21a00
    775c:	9b010000 	blls	47764 <__HEAP_SIZE+0x46764>
    7760:	78010d17 	stmdavc	r1, {r0, r1, r2, r4, r8, sl, fp}
    7764:	c4100025 	ldrgt	r0, [r0], #-37	; 0xffffffdb
    7768:	b0100025 	andslt	r0, r0, r5, lsr #32
    776c:	0100006c 	tsteq	r0, ip, rrx
    7770:	00001638 	andeq	r1, r0, r8, lsr r6
    7774:	0004f828 	andeq	pc, r4, r8, lsr #16
    7778:	22c21800 	sbccs	r1, r2, #0, 16
    777c:	a1010000 	mrsge	r0, (UNDEF: 1)
    7780:	06661117 			; <UNDEFINED> instruction: 0x06661117
    7784:	6cde0000 	ldclvs	0, cr0, [lr], {0}
    7788:	6cdc0000 	ldclvs	0, cr0, [ip], {0}
    778c:	841d0000 	ldrhi	r0, [sp], #-0
    7790:	f2100025 	vhadd.s16	d0, d0, d21
    7794:	1e000037 	mcrne	0, 0, r0, cr0, cr7, {1}
    7798:	10002590 	mulne	r0, r0, r5
    779c:	000037d4 	ldrdeq	r3, [r0], -r4
    77a0:	0000161d 	andeq	r1, r0, sp, lsl r6
    77a4:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    77a8:	1d000474 	cfstrsne	mvf0, [r0, #-464]	; 0xfffffe30
    77ac:	100025a4 	andne	r2, r0, r4, lsr #11
    77b0:	00003800 	andeq	r3, r0, r0, lsl #16
    77b4:	0025aa20 	eoreq	sl, r5, r0, lsr #20
    77b8:	0014a710 	andseq	sl, r4, r0, lsl r7
    77bc:	50011f00 	andpl	r1, r1, r0, lsl #30
    77c0:	00007402 	andeq	r7, r0, r2, lsl #8
    77c4:	4e1a0000 	cdpmi	0, 1, cr0, cr10, cr0, {0}
    77c8:	01000023 	tsteq	r0, r3, lsr #32
    77cc:	010d177b 	tsteq	sp, fp, ror r7
    77d0:	100023cc 	andne	r2, r0, ip, asr #7
    77d4:	10002434 	andne	r2, r0, r4, lsr r4
    77d8:	00006cf1 	strdeq	r6, [r0], -r1
    77dc:	0016f301 	andseq	pc, r6, r1, lsl #6
    77e0:	14721800 	ldrbtne	r1, [r2], #-2048	; 0xfffff800
    77e4:	7d010000 	stcvc	0, cr0, [r1, #-0]
    77e8:	012f1117 			; <UNDEFINED> instruction: 0x012f1117
    77ec:	6d150000 	ldcvs	0, cr0, [r5, #-0]
    77f0:	6d110000 	ldcvs	0, cr0, [r1, #-0]
    77f4:	e01e0000 	ands	r0, lr, r0
    77f8:	46100023 	ldrmi	r0, [r0], -r3, lsr #32
    77fc:	89000038 	stmdbhi	r0, {r3, r4, r5}
    7800:	1f000016 	svcne	0x00000016
    7804:	740f5001 	strvc	r5, [pc], #-1	; 780c <__HEAP_SIZE+0x680c>
    7808:	74243300 	strtvc	r3, [r4], #-768	; 0xfffffd00
    780c:	24321c00 	ldrtcs	r1, [r2], #-3072	; 0xfffff400
    7810:	0085bc03 	addeq	fp, r5, r3, lsl #24
    7814:	1e002238 	mcrne	2, 0, r2, cr0, cr8, {1}
    7818:	100023ee 	andne	r2, r0, lr, ror #7
    781c:	00003846 	andeq	r3, r0, r6, asr #16
    7820:	0000169d 	muleq	r0, sp, r6
    7824:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    7828:	1e000075 	mcrne	0, 0, r0, cr0, cr5, {3}
    782c:	100023f6 	strdne	r2, [r0], -r6
    7830:	00003846 	andeq	r3, r0, r6, asr #16
    7834:	000016b1 			; <UNDEFINED> instruction: 0x000016b1
    7838:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    783c:	1e000074 	mcrne	0, 0, r0, cr0, cr4, {3}
    7840:	100023fc 	strdne	r2, [r0], -ip
    7844:	00003846 	andeq	r3, r0, r6, asr #16
    7848:	000016c8 	andeq	r1, r0, r8, asr #13
    784c:	0550011f 	ldrbeq	r0, [r0, #-287]	; 0xfffffee1
    7850:	008af003 	addeq	pc, sl, r3
    7854:	021e0038 	andseq	r0, lr, #56	; 0x38
    7858:	46100024 	ldrmi	r0, [r0], -r4, lsr #32
    785c:	df000038 	svcle	0x00000038
    7860:	1f000016 	svcne	0x00000016
    7864:	03055001 	movweq	r5, #20481	; 0x5001
    7868:	38008b2c 	stmdacc	r0, {r2, r3, r5, r8, r9, fp, pc}
    786c:	24082000 	strcs	r2, [r8], #-0
    7870:	38461000 	stmdacc	r6, {ip}^
    7874:	011f0000 	tsteq	pc, r0
    7878:	10030550 	andne	r0, r3, r0, asr r5
    787c:	0038008b 	eorseq	r0, r8, fp, lsl #1
    7880:	ec012400 	cfstrs	mvf2, [r1], {-0}
    7884:	01000019 	tsteq	r0, r9, lsl r0
    7888:	011616fc 			; <UNDEFINED> instruction: 0x011616fc
    788c:	000005e7 	andeq	r0, r0, r7, ror #11
    7890:	10002c64 	andne	r2, r0, r4, ror #24
    7894:	10002cac 	andne	r2, r0, ip, lsr #25
    7898:	01007d02 	tsteq	r0, r2, lsl #26
    789c:	00001736 	andeq	r1, r0, r6, lsr r7
    78a0:	0021f525 	eoreq	pc, r1, r5, lsr #10
    78a4:	17000100 	strne	r0, [r0, -r0, lsl #2]
    78a8:	0001451f 	andeq	r4, r1, pc, lsl r5
    78ac:	c3180100 	tstgt	r8, #0, 2
    78b0:	01000016 	tsteq	r0, r6, lsl r0
    78b4:	e71a1703 	ldr	r1, [sl, -r3, lsl #14]
    78b8:	38000005 	stmdacc	r0, {r0, r2}
    78bc:	3400006d 	strcc	r0, [r0], #-109	; 0xffffff93
    78c0:	0000006d 	andeq	r0, r0, sp, rrx
    78c4:	001a8f1a 	andseq	r8, sl, sl, lsl pc
    78c8:	16740100 	ldrbtne	r0, [r4], -r0, lsl #2
    78cc:	29cc0108 	stmibcs	ip, {r3, r8}^
    78d0:	2a041000 	bcs	10b8d8 <__RAM_SIZE+0xb8d8>
    78d4:	6d571000 	ldclvs	0, cr1, [r7, #-0]
    78d8:	c5010000 	strgt	r0, [r1, #-0]
    78dc:	1b000017 	blne	7940 <__HEAP_SIZE+0x6940>
    78e0:	00001e84 	andeq	r1, r0, r4, lsl #29
    78e4:	08167401 	ldmdaeq	r6, {r0, sl, ip, sp, lr}
    78e8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    78ec:	00006d7b 	andeq	r6, r0, fp, ror sp
    78f0:	00006d77 	andeq	r6, r0, r7, ror sp
    78f4:	00063823 	andeq	r3, r6, r3, lsr #16
    78f8:	0017b200 	andseq	fp, r7, r0, lsl #4
    78fc:	15cb1800 	strbne	r1, [fp, #2048]	; 0x800
    7900:	bd010000 	stclt	0, cr0, [r1, #-0]
    7904:	014a1816 	cmpeq	sl, r6, lsl r8
    7908:	6da20000 	stcvs	0, cr0, [r2]
    790c:	6d9c0000 	ldcvs	0, cr0, [ip]
    7910:	d41d0000 	ldrle	r0, [sp], #-0
    7914:	df100029 	svcle	0x00100029
    7918:	1d000025 	stcne	0, cr0, [r0, #-148]	; 0xffffff6c
    791c:	100029ee 	andne	r2, r0, lr, ror #19
    7920:	00002628 	andeq	r2, r0, r8, lsr #12
    7924:	0029f21d 	eoreq	pc, r9, sp, lsl r2	; <UNPREDICTABLE>
    7928:	0025df10 	eoreq	sp, r5, r0, lsl pc
    792c:	29fa1d00 	ldmibcs	sl!, {r8, sl, fp, ip}^
    7930:	38551000 	ldmdacc	r5, {ip}^
    7934:	fe1d0000 	cdp2	0, 1, cr0, cr13, cr0, {0}
    7938:	cf100029 	svcgt	0x00100029
    793c:	00000024 	andeq	r0, r0, r4, lsr #32
    7940:	0029dc1d 	eoreq	sp, r9, sp, lsl ip
    7944:	0015cb10 	andseq	ip, r5, r0, lsl fp
    7948:	29e81d00 	stmibcs	r8!, {r8, sl, fp, ip}^
    794c:	382a1000 	stmdacc	sl!, {ip}
    7950:	29000000 	stmdbcs	r0, {}	; <UNPREDICTABLE>
    7954:	00123601 	andseq	r3, r2, r1, lsl #12
    7958:	15e30100 	strbne	r0, [r3, #256]!	; 0x100
    795c:	2c580106 	ldfcse	f0, [r8], {6}
    7960:	2c641000 	stclcs	0, cr1, [r4], #-0
    7964:	7d021000 	stcvc	0, cr1, [r2, #-0]
    7968:	01210100 			; <UNDEFINED> instruction: 0x01210100
    796c:	000011ac 	andeq	r1, r0, ip, lsr #3
    7970:	0c159e01 	ldceq	14, cr9, [r5], {1}
    7974:	00011901 	andeq	r1, r1, r1, lsl #18
    7978:	002bdc00 	eoreq	sp, fp, r0, lsl #24
    797c:	002c5810 	eoreq	r5, ip, r0, lsl r8
    7980:	006dcb10 	rsbeq	ip, sp, r0, lsl fp
    7984:	18920100 	ldmne	r2, {r8}
    7988:	641b0000 	ldrvs	r0, [fp], #-0
    798c:	0100001c 	tsteq	r0, ip, lsl r0
    7990:	9834159e 	ldmdals	r4!, {r1, r2, r3, r4, r7, r8, sl, ip}
    7994:	01000018 	tsteq	r0, r8, lsl r0
    7998:	eb00006e 	bl	7b58 <__HEAP_SIZE+0x6b58>
    799c:	1b00006d 	blne	7b58 <__HEAP_SIZE+0x6b58>
    79a0:	000020e0 	andeq	r2, r0, r0, ror #1
    79a4:	35159f01 	ldrcc	r9, [r5, #-3841]	; 0xfffff0ff
    79a8:	000018a3 	andeq	r1, r0, r3, lsr #17
    79ac:	00006e95 	muleq	r0, r5, lr
    79b0:	00006e91 	muleq	r0, r1, lr
    79b4:	001a1918 	andseq	r1, sl, r8, lsl r9
    79b8:	15a10100 	strne	r0, [r1, #256]!	; 0x100
    79bc:	00011910 	andeq	r1, r1, r0, lsl r9
    79c0:	006ebd00 	rsbeq	fp, lr, r0, lsl #26
    79c4:	006eb300 	rsbeq	fp, lr, r0, lsl #6
    79c8:	07102300 	ldreq	r2, [r0, -r0, lsl #6]
    79cc:	187f0000 	ldmdane	pc!, {}^	; <UNPREDICTABLE>
    79d0:	77180000 	ldrvc	r0, [r8, -r0]
    79d4:	01000019 	tsteq	r0, r9, lsl r0
    79d8:	5b1a15ab 	blpl	68d08c <__RAM_SIZE+0x58d08c>
    79dc:	06000001 	streq	r0, [r0], -r1
    79e0:	0000006f 	andeq	r0, r0, pc, rrx
    79e4:	1800006f 	stmdane	r0, {r0, r1, r2, r3, r5, r6}
    79e8:	000017cd 	andeq	r1, r0, sp, asr #15
    79ec:	1a15ac01 	bne	5729f8 <__RAM_SIZE+0x4729f8>
    79f0:	0000015b 	andeq	r0, r0, fp, asr r1
    79f4:	00006f35 	andeq	r6, r0, r5, lsr pc
    79f8:	00006f2f 	andeq	r6, r0, pc, lsr #30
    79fc:	002c4220 	eoreq	r4, ip, r0, lsr #4
    7a00:	0018a810 	andseq	sl, r8, r0, lsl r8
    7a04:	50011f00 	andpl	r1, r1, r0, lsl #30
    7a08:	00007402 	andeq	r7, r0, r2, lsl #8
    7a0c:	2be61d00 	blcs	ff98ee14 <__StackTop+0xc788ee14>
    7a10:	37f21000 	ldrbcc	r1, [r2, r0]!
    7a14:	081d0000 	ldmdaeq	sp, {}	; <UNPREDICTABLE>
    7a18:	0010002c 	andseq	r0, r0, ip, lsr #32
    7a1c:	00000038 	andeq	r0, r0, r8, lsr r0
    7a20:	05630407 	strbeq	r0, [r3, #-1031]!	; 0xfffffbf9
    7a24:	92030000 	andls	r0, r3, #0
    7a28:	07000018 	smladeq	r0, r8, r0, r0
    7a2c:	00014a04 	andeq	r4, r1, r4, lsl #20
    7a30:	189d0300 	ldmne	sp, {r8, r9}
    7a34:	01170000 	tsteq	r7, r0
    7a38:	0000102d 	andeq	r1, r0, sp, lsr #32
    7a3c:	06159201 	ldreq	r9, [r5], -r1, lsl #4
    7a40:	002bc401 	eoreq	ip, fp, r1, lsl #8
    7a44:	002bdc10 	eoreq	sp, fp, r0, lsl ip
    7a48:	007d0210 	rsbseq	r0, sp, r0, lsl r2
    7a4c:	0018d301 	andseq	sp, r8, r1, lsl #6
    7a50:	1c641900 			; <UNDEFINED> instruction: 0x1c641900
    7a54:	92010000 	andls	r0, r1, #0
    7a58:	18983615 	ldmne	r8, {r0, r2, r4, r9, sl, ip, sp}
    7a5c:	50010000 	andpl	r0, r1, r0
    7a60:	0b012200 	bleq	50268 <__HEAP_SIZE+0x4f268>
    7a64:	01000016 	tsteq	r0, r6, lsl r0
    7a68:	01061582 	smlabbeq	r6, r2, r5, r1
	...
    7a74:	00006f5e 	andeq	r6, r0, lr, asr pc
    7a78:	00191701 	andseq	r1, r9, r1, lsl #14
    7a7c:	1c641b00 			; <UNDEFINED> instruction: 0x1c641b00
    7a80:	82010000 	andhi	r0, r1, #0
    7a84:	18982e15 	ldmne	r8, {r0, r2, r4, r9, sl, fp, sp}
    7a88:	6f840000 	svcvs	0x00840000
    7a8c:	6f7e0000 	svcvs	0x007e0000
    7a90:	001d0000 	andseq	r0, sp, r0
    7a94:	f2000000 	vhadd.s8	d0, d0, d0
    7a98:	1d000037 	stcne	0, cr0, [r0, #-220]	; 0xffffff24
    7a9c:	00000000 	andeq	r0, r0, r0
    7aa0:	00003800 	andeq	r3, r0, r0, lsl #16
    7aa4:	21012200 	mrscs	r2, R9_usr
    7aa8:	0100001a 	tsteq	r0, sl, lsl r0
    7aac:	0106153a 	tsteq	r6, sl, lsr r5
	...
    7ab8:	00006fb0 			; <UNDEFINED> instruction: 0x00006fb0
    7abc:	0019dd01 	andseq	sp, r9, r1, lsl #26
    7ac0:	21631b00 	cmncs	r3, r0, lsl #22
    7ac4:	3a010000 	bcc	47acc <__HEAP_SIZE+0x46acc>
    7ac8:	038b3615 	orreq	r3, fp, #22020096	; 0x1500000
    7acc:	6fd80000 	svcvs	0x00d80000
    7ad0:	6fd00000 	svcvs	0x00d00000
    7ad4:	2b1b0000 	blcs	6c7adc <__RAM_SIZE+0x5c7adc>
    7ad8:	01000009 	tsteq	r0, r9
    7adc:	5b3a153b 	blpl	e8cfd0 <__RAM_SIZE+0xd8cfd0>
    7ae0:	16000001 	strne	r0, [r0], -r1
    7ae4:	12000070 	andne	r0, r0, #112	; 0x70
    7ae8:	18000070 	stmdane	r0, {r4, r5, r6}
    7aec:	0000179e 	muleq	r0, lr, r7
    7af0:	0d153d01 	ldceq	13, cr3, [r5, #-4]
    7af4:	00000666 	andeq	r0, r0, r6, ror #12
    7af8:	00007039 	andeq	r7, r0, r9, lsr r0
    7afc:	00007037 	andeq	r7, r0, r7, lsr r0
    7b00:	0006e023 	andeq	lr, r6, r3, lsr #32
    7b04:	00199100 	andseq	r9, r9, r0, lsl #2
    7b08:	0a0f1800 	beq	3cdb10 <__RAM_SIZE+0x2cdb10>
    7b0c:	4f010000 	svcmi	0x00010000
    7b10:	06dd0515 			; <UNDEFINED> instruction: 0x06dd0515
    7b14:	70500000 	subsvc	r0, r0, r0
    7b18:	704c0000 	subvc	r0, ip, r0
    7b1c:	23000000 	movwcs	r0, #0
    7b20:	000006f8 	strdeq	r0, [r0], -r8
    7b24:	000019b0 			; <UNDEFINED> instruction: 0x000019b0
    7b28:	000a0f18 	andeq	r0, sl, r8, lsl pc
    7b2c:	15620100 	strbne	r0, [r2, #-256]!	; 0xffffff00
    7b30:	0006dd05 	andeq	sp, r6, r5, lsl #26
    7b34:	00707200 	rsbseq	r7, r0, r0, lsl #4
    7b38:	00706e00 	rsbseq	r6, r0, r0, lsl #28
    7b3c:	001c0000 	andseq	r0, ip, r0
    7b40:	00000000 	andeq	r0, r0, r0
    7b44:	d3000000 	movwle	r0, #0
    7b48:	18000019 	stmdane	r0, {r0, r3, r4}
    7b4c:	000009db 	ldrdeq	r0, [r0], -fp
    7b50:	05156301 	ldreq	r6, [r5, #-769]	; 0xfffffcff
    7b54:	00000391 	muleq	r0, r1, r3
    7b58:	00007092 	muleq	r0, r2, r0
    7b5c:	00007090 	muleq	r0, r0, r0
    7b60:	00001d00 	andeq	r1, r0, r0, lsl #26
    7b64:	14910000 	ldrne	r0, [r1], #0
    7b68:	21000000 	mrscs	r0, (UNDEF: 0)
    7b6c:	0013c401 	andseq	ip, r3, r1, lsl #8
    7b70:	14dd0100 	ldrbne	r0, [sp], #256	; 0x100
    7b74:	0119010c 	tsteq	r9, ip, lsl #2
    7b78:	2ae00000 	bcs	ff807b80 <__StackTop+0xc7707b80>
    7b7c:	2bc41000 	blcs	ff10bb84 <__StackTop+0xc700bb84>
    7b80:	70a51000 	adcvc	r1, r5, r0
    7b84:	ca010000 	bgt	47b8c <__HEAP_SIZE+0x46b8c>
    7b88:	1b00001a 	blne	7bf8 <__HEAP_SIZE+0x6bf8>
    7b8c:	00001541 	andeq	r1, r0, r1, asr #10
    7b90:	3b14dd01 	blcc	53ef9c <__RAM_SIZE+0x43ef9c>
    7b94:	00001ad0 	ldrdeq	r1, [r0], -r0
    7b98:	000070cd 	andeq	r7, r0, sp, asr #1
    7b9c:	000070c5 	andeq	r7, r0, r5, asr #1
    7ba0:	00179e18 	andseq	r9, r7, r8, lsl lr
    7ba4:	14df0100 	ldrbne	r0, [pc], #256	; 7bac <__HEAP_SIZE+0x6bac>
    7ba8:	0006660d 	andeq	r6, r6, sp, lsl #12
    7bac:	00710900 	rsbseq	r0, r1, r0, lsl #18
    7bb0:	00710700 	rsbseq	r0, r1, r0, lsl #14
    7bb4:	1a191800 	bne	64dbbc <__RAM_SIZE+0x54dbbc>
    7bb8:	e0010000 	and	r0, r1, r0
    7bbc:	01191014 	tsteq	r9, r4, lsl r0
    7bc0:	71200000 			; <UNDEFINED> instruction: 0x71200000
    7bc4:	711c0000 	tstvc	ip, r0
    7bc8:	b0230000 	eorlt	r0, r3, r0
    7bcc:	5b000006 	blpl	7bec <__HEAP_SIZE+0x6bec>
    7bd0:	1800001a 	stmdane	r0, {r1, r3, r4}
    7bd4:	00000a0f 	andeq	r0, r0, pc, lsl #20
    7bd8:	0514f601 	ldreq	pc, [r4, #-1537]	; 0xfffff9ff
    7bdc:	000006dd 	ldrdeq	r0, [r0], -sp
    7be0:	00007144 	andeq	r7, r0, r4, asr #2
    7be4:	00007140 	andeq	r7, r0, r0, asr #2
    7be8:	06c82300 	strbeq	r2, [r8], r0, lsl #6
    7bec:	1a7a0000 	bne	1e87bf4 <__RAM_SIZE+0x1d87bf4>
    7bf0:	0f180000 	svceq	0x00180000
    7bf4:	0100000a 	tsteq	r0, sl
    7bf8:	dd0914fa 	cfstrsle	mvf1, [r9, #-1000]	; 0xfffffc18
    7bfc:	66000006 	strvs	r0, [r0], -r6
    7c00:	62000071 	andvs	r0, r0, #113	; 0x71
    7c04:	00000071 	andeq	r0, r0, r1, ror r0
    7c08:	002b3a1c 	eoreq	r3, fp, ip, lsl sl
    7c0c:	002b6a10 	eoreq	r6, fp, r0, lsl sl
    7c10:	001a9d10 	andseq	r9, sl, r0, lsl sp
    7c14:	09db1800 	ldmibeq	fp, {fp, ip}^
    7c18:	fb010000 	blx	47c22 <__HEAP_SIZE+0x46c22>
    7c1c:	03910914 	orrseq	r0, r1, #20, 18	; 0x50000
    7c20:	71860000 	orrvc	r0, r6, r0
    7c24:	71840000 	orrvc	r0, r4, r0
    7c28:	1c000000 	stcne	0, cr0, [r0], {-0}
    7c2c:	10002b8e 	andne	r2, r0, lr, lsl #23
    7c30:	10002ba6 	andne	r2, r0, r6, lsr #23
    7c34:	00001ac0 	andeq	r1, r0, r0, asr #21
    7c38:	0009db18 	andeq	sp, r9, r8, lsl fp
    7c3c:	150f0100 	strne	r0, [pc, #-256]	; 7b44 <__HEAP_SIZE+0x6b44>
    7c40:	00039109 	andeq	r9, r3, r9, lsl #2
    7c44:	00719b00 	rsbseq	r9, r1, r0, lsl #22
    7c48:	00719900 	rsbseq	r9, r1, r0, lsl #18
    7c4c:	6e1d0000 	cdpvs	0, 1, cr0, cr13, cr0, {0}
    7c50:	9110002b 	tstls	r0, fp, lsr #32
    7c54:	00000014 	andeq	r0, r0, r4, lsl r0
    7c58:	03a20407 			; <UNDEFINED> instruction: 0x03a20407
    7c5c:	ca030000 	bgt	c7c64 <__HEAP_SIZE+0xc6c64>
    7c60:	2200001a 	andcs	r0, r0, #26
    7c64:	000f2001 	andeq	r2, pc, r1
    7c68:	14b80100 	ldrtne	r0, [r8], #256	; 0x100
    7c6c:	2aa4010a 	bcs	fe90809c <__StackTop+0xc680809c>
    7c70:	2ae01000 	bcs	ff80bc78 <__StackTop+0xc770bc78>
    7c74:	71ae1000 			; <UNDEFINED> instruction: 0x71ae1000
    7c78:	5d010000 	stcpl	0, cr0, [r1, #-0]
    7c7c:	1b00001b 	blne	7cf0 <__HEAP_SIZE+0x6cf0>
    7c80:	00001541 	andeq	r1, r0, r1, asr #10
    7c84:	3a14b801 	bcc	535c90 <__RAM_SIZE+0x435c90>
    7c88:	000006dd 	ldrdeq	r0, [r0], -sp
    7c8c:	000071d4 	ldrdeq	r7, [r0], -r4
    7c90:	000071ce 	andeq	r7, r0, lr, asr #3
    7c94:	0020e11b 	eoreq	lr, r0, fp, lsl r1
    7c98:	14b90100 	ldrtne	r0, [r9], #256	; 0x100
    7c9c:	00014a36 	andeq	r4, r1, r6, lsr sl
    7ca0:	00720400 	rsbseq	r0, r2, r0, lsl #8
    7ca4:	00720000 	rsbseq	r0, r2, r0
    7ca8:	0b7f1b00 	bleq	1fce8b0 <__RAM_SIZE+0x1ece8b0>
    7cac:	ba010000 	blt	47cb4 <__HEAP_SIZE+0x46cb4>
    7cb0:	012a3c14 			; <UNDEFINED> instruction: 0x012a3c14
    7cb4:	72260000 	eorvc	r0, r6, #0
    7cb8:	72220000 	eorvc	r0, r2, #0
    7cbc:	aa1c0000 	bge	707cc4 <__RAM_SIZE+0x607cc4>
    7cc0:	ce10002a 	cdpgt	0, 1, cr0, cr0, cr10, {1}
    7cc4:	5310002a 	tstpl	r0, #42	; 0x2a
    7cc8:	1800001b 	stmdane	r0, {r0, r1, r3, r4}
    7ccc:	000009db 	ldrdeq	r0, [r0], -fp
    7cd0:	0914ca01 	ldmdbeq	r4, {r0, r9, fp, lr, pc}
    7cd4:	00000391 	muleq	r0, r1, r3
    7cd8:	00007249 	andeq	r7, r0, r9, asr #4
    7cdc:	00007247 	andeq	r7, r0, r7, asr #4
    7ce0:	2ada1d00 	bcs	ff68f0e8 <__StackTop+0xc758f0e8>
    7ce4:	09861000 	stmibeq	r6, {ip}
    7ce8:	22000000 	andcs	r0, r0, #0
    7cec:	00142801 	andseq	r2, r4, r1, lsl #16
    7cf0:	14980100 	ldrne	r0, [r8], #256	; 0x100
    7cf4:	00000106 	andeq	r0, r0, r6, lsl #2
    7cf8:	00000000 	andeq	r0, r0, r0
    7cfc:	725c0000 	subsvc	r0, ip, #0
    7d00:	f2010000 	vhadd.s8	d0, d1, d0
    7d04:	1b00001b 	blne	7d78 <__HEAP_SIZE+0x6d78>
    7d08:	00001541 	andeq	r1, r0, r1, asr #10
    7d0c:	2f149801 	svccs	0x00149801
    7d10:	000006d2 	ldrdeq	r0, [r0], -r2
    7d14:	00007282 	andeq	r7, r0, r2, lsl #5
    7d18:	0000727c 	andeq	r7, r0, ip, ror r2
    7d1c:	00092b1b 	andeq	r2, r9, fp, lsl fp
    7d20:	14990100 	ldrne	r0, [r9], #256	; 0x100
    7d24:	00015b37 	andeq	r5, r1, r7, lsr fp
    7d28:	0072b200 	rsbseq	fp, r2, r0, lsl #4
    7d2c:	0072ae00 	rsbseq	sl, r2, r0, lsl #28
    7d30:	20e11b00 	rsccs	r1, r1, r0, lsl #22
    7d34:	9a010000 	bls	47d3c <__HEAP_SIZE+0x46d3c>
    7d38:	015b3714 	cmpeq	fp, r4, lsl r7
    7d3c:	72d70000 	sbcsvc	r0, r7, #0
    7d40:	72d30000 	sbcsvc	r0, r3, #0
    7d44:	001c0000 	andseq	r0, ip, r0
    7d48:	00000000 	andeq	r0, r0, r0
    7d4c:	db000000 	blle	7d54 <__HEAP_SIZE+0x6d54>
    7d50:	1800001b 	stmdane	r0, {r0, r1, r3, r4}
    7d54:	000009db 	ldrdeq	r0, [r0], -fp
    7d58:	0514ae01 	ldreq	sl, [r4, #-3585]	; 0xfffff1ff
    7d5c:	00000391 	muleq	r0, r1, r3
    7d60:	000072fa 	strdeq	r7, [r0], -sl
    7d64:	000072f8 	strdeq	r7, [r0], -r8
    7d68:	00002000 	andeq	r2, r0, r0
    7d6c:	09860000 	stmibeq	r6, {}	; <UNPREDICTABLE>
    7d70:	011f0000 	tsteq	pc, r0
    7d74:	01f30350 	mvnseq	r0, r0, asr r3
    7d78:	51011f52 	tstpl	r1, r2, asr pc
    7d7c:	00003101 	andeq	r3, r0, r1, lsl #2
    7d80:	0e1a0122 	mufeqep	f0, f2, f2
    7d84:	7b010000 	blvc	47d8c <__HEAP_SIZE+0x46d8c>
    7d88:	88010614 	stmdahi	r1, {r2, r4, r9, sl}
    7d8c:	a410002a 	ldrge	r0, [r0], #-42	; 0xffffffd6
    7d90:	0d10002a 	ldceq	0, cr0, [r0, #-168]	; 0xffffff58
    7d94:	01000073 	tsteq	r0, r3, ror r0
    7d98:	00001c63 	andeq	r1, r0, r3, ror #24
    7d9c:	0015411b 	andseq	r4, r5, fp, lsl r1
    7da0:	147b0100 	ldrbtne	r0, [fp], #-256	; 0xffffff00
    7da4:	0006dd2c 	andeq	sp, r6, ip, lsr #26
    7da8:	00733100 	rsbseq	r3, r3, r0, lsl #2
    7dac:	00732d00 	rsbseq	r2, r3, r0, lsl #26
    7db0:	20e11b00 	rsccs	r1, r1, r0, lsl #22
    7db4:	7c010000 	stcvc	0, cr0, [r1], {-0}
    7db8:	015b2e14 	cmpeq	fp, r4, lsl lr
    7dbc:	73580000 	cmpvc	r8, #0
    7dc0:	73520000 	cmpvc	r2, #0
    7dc4:	961e0000 	ldrls	r0, [lr], -r0
    7dc8:	e310002a 	tst	r0, #42	; 0x2a
    7dcc:	4d000037 	stcmi	0, cr0, [r0, #-220]	; 0xffffff24
    7dd0:	1f00001c 	svcne	0x0000001c
    7dd4:	f3035001 	vhadd.u8	d5, d3, d1
    7dd8:	20005001 	andcs	r5, r0, r1
    7ddc:	10002a9e 	mulne	r0, lr, sl
    7de0:	00000986 	andeq	r0, r0, r6, lsl #19
    7de4:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    7de8:	011f0074 	tsteq	pc, r4, ror r0	; <UNPREDICTABLE>
    7dec:	00310151 	eorseq	r0, r1, r1, asr r1
    7df0:	e0011700 	and	r1, r1, r0, lsl #14
    7df4:	0100001d 	tsteq	r0, sp, lsl r0
    7df8:	010a13c0 	smlabteq	sl, r0, r3, r1
    7dfc:	10002a04 	andne	r2, r0, r4, lsl #20
    7e00:	10002a88 	andne	r2, r0, r8, lsl #21
    7e04:	01007d02 	tsteq	r0, r2, lsl #26
    7e08:	00001cb5 			; <UNDEFINED> instruction: 0x00001cb5
    7e0c:	00065028 	andeq	r5, r6, r8, lsr #32
    7e10:	20f71800 	rscscs	r1, r7, r0, lsl #16
    7e14:	fa010000 	blx	47e1c <__HEAP_SIZE+0x46e1c>
    7e18:	012f0d13 			; <UNDEFINED> instruction: 0x012f0d13
    7e1c:	738a0000 	orrvc	r0, sl, #0
    7e20:	73840000 	orrvc	r0, r4, #0
    7e24:	68280000 	stmdavs	r8!, {}	; <UNPREDICTABLE>
    7e28:	18000006 	stmdane	r0, {r1, r2}
    7e2c:	0000147d 	andeq	r1, r0, sp, ror r4
    7e30:	0d13fa01 	vldreq	s30, [r3, #-4]
    7e34:	000006dd 	ldrdeq	r0, [r0], -sp
    7e38:	000073bd 			; <UNDEFINED> instruction: 0x000073bd
    7e3c:	000073b7 			; <UNDEFINED> instruction: 0x000073b7
    7e40:	21000000 	mrscs	r0, (UNDEF: 0)
    7e44:	001db301 	andseq	fp, sp, r1, lsl #6
    7e48:	139c0100 	orrsne	r0, ip, #0, 2
    7e4c:	01190110 	tsteq	r9, r0, lsl r1
	...
    7e58:	74080000 	strvc	r0, [r8], #-0
    7e5c:	37010000 	strcc	r0, [r1, -r0]
    7e60:	1b00001d 	blne	7edc <__HEAP_SIZE+0x6edc>
    7e64:	00001d55 	andeq	r1, r0, r5, asr sp
    7e68:	3b139c01 	blcc	4eee74 <__RAM_SIZE+0x3eee74>
    7e6c:	000003a7 	andeq	r0, r0, r7, lsr #7
    7e70:	0000742c 	andeq	r7, r0, ip, lsr #8
    7e74:	00007428 	andeq	r7, r0, r8, lsr #8
    7e78:	0021731b 	eoreq	r7, r1, fp, lsl r3
    7e7c:	139d0100 	orrsne	r0, sp, #0, 2
    7e80:	00009f35 	andeq	r9, r0, r5, lsr pc
    7e84:	00745000 	rsbseq	r5, r4, r0
    7e88:	00744a00 	rsbseq	r4, r4, r0, lsl #20
    7e8c:	22c31800 	sbccs	r1, r3, #0, 16
    7e90:	9f010000 	svcls	0x00010000
    7e94:	06661113 			; <UNDEFINED> instruction: 0x06661113
    7e98:	74800000 	strvc	r0, [r0], #0
    7e9c:	747c0000 	ldrbtvc	r0, [ip], #-0
    7ea0:	19180000 	ldmdbne	r8, {}	; <UNPREDICTABLE>
    7ea4:	0100001a 	tsteq	r0, sl, lsl r0
    7ea8:	191413a0 	ldmdbne	r4, {r5, r7, r8, r9, ip}
    7eac:	a0000001 	andge	r0, r0, r1
    7eb0:	9e000074 	mcrls	0, 0, r0, cr0, cr4, {3}
    7eb4:	2a000074 	bcs	808c <__HEAP_SIZE+0x708c>
    7eb8:	00000000 	andeq	r0, r0, r0
    7ebc:	0350011f 	cmpeq	r0, #-1073741817	; 0xc0000007
    7ec0:	005101f3 	ldrsheq	r0, [r1], #-19	; 0xffffffed
    7ec4:	82012100 	andhi	r2, r1, #0, 2
    7ec8:	01000023 	tsteq	r0, r3, lsr #32
    7ecc:	0118137c 	tsteq	r8, ip, ror r3
    7ed0:	0000049d 	muleq	r0, sp, r4
	...
    7edc:	000074b4 			; <UNDEFINED> instruction: 0x000074b4
    7ee0:	001dbe01 	andseq	fp, sp, r1, lsl #28
    7ee4:	1d551b00 	vldrne	d17, [r5, #-0]
    7ee8:	7c010000 	stcvc	0, cr0, [r1], {-0}
    7eec:	03a74813 			; <UNDEFINED> instruction: 0x03a74813
    7ef0:	74d80000 	ldrbvc	r0, [r8], #0
    7ef4:	74d40000 	ldrbvc	r0, [r4], #0
    7ef8:	c2180000 	andsgt	r0, r8, #0
    7efc:	01000022 	tsteq	r0, r2, lsr #32
    7f00:	6611137e 			; <UNDEFINED> instruction: 0x6611137e
    7f04:	f8000006 			; <UNDEFINED> instruction: 0xf8000006
    7f08:	f6000074 			; <UNDEFINED> instruction: 0xf6000074
    7f0c:	18000074 	stmdane	r0, {r2, r4, r5, r6}
    7f10:	00001a19 	andeq	r1, r0, r9, lsl sl
    7f14:	1c137f01 	ldcne	15, cr7, [r3], {1}
    7f18:	0000049d 	muleq	r0, sp, r4
    7f1c:	0000750d 	andeq	r7, r0, sp, lsl #10
    7f20:	0000750b 	andeq	r7, r0, fp, lsl #10
    7f24:	000c2618 	andeq	r2, ip, r8, lsl r6
    7f28:	13800100 	orrne	r0, r0, #0, 2
    7f2c:	00012f15 	andeq	r2, r1, r5, lsl pc
    7f30:	00752200 	rsbseq	r2, r5, r0, lsl #4
    7f34:	00752000 	rsbseq	r2, r5, r0
    7f38:	00001d00 	andeq	r1, r0, r0, lsl #26
    7f3c:	380e0000 	stmdacc	lr, {}	; <UNPREDICTABLE>
    7f40:	001d0000 	andseq	r0, sp, r0
    7f44:	1c000000 	stcne	0, cr0, [r0], {-0}
    7f48:	00000038 	andeq	r0, r0, r8, lsr r0
    7f4c:	18640121 	stmdane	r4!, {r0, r5, r8}^
    7f50:	60010000 	andvs	r0, r1, r0
    7f54:	9d011813 	stcls	8, cr1, [r1, #-76]	; 0xffffffb4
    7f58:	00000004 	andeq	r0, r0, r4
    7f5c:	00000000 	andeq	r0, r0, r0
    7f60:	35000000 	strcc	r0, [r0, #-0]
    7f64:	01000075 	tsteq	r0, r5, ror r0
    7f68:	00001e30 	andeq	r1, r0, r0, lsr lr
    7f6c:	001d551b 	andseq	r5, sp, fp, lsl r5
    7f70:	13600100 	cmnne	r0, #0, 2
    7f74:	0003a741 	andeq	sl, r3, r1, asr #14
    7f78:	00755900 	rsbseq	r5, r5, r0, lsl #18
    7f7c:	00755500 	rsbseq	r5, r5, r0, lsl #10
    7f80:	22c21800 	sbccs	r1, r2, #0, 16
    7f84:	62010000 	andvs	r0, r1, #0
    7f88:	06661113 			; <UNDEFINED> instruction: 0x06661113
    7f8c:	75790000 	ldrbvc	r0, [r9, #-0]!
    7f90:	75770000 	ldrbvc	r0, [r7, #-0]!
    7f94:	19180000 	ldmdbne	r8, {}	; <UNPREDICTABLE>
    7f98:	0100001a 	tsteq	r0, sl, lsl r0
    7f9c:	9d1c1363 	ldcls	3, cr1, [ip, #-396]	; 0xfffffe74
    7fa0:	8e000004 	cdphi	0, 0, cr0, cr0, cr4, {0}
    7fa4:	8c000075 	stchi	0, cr0, [r0], {117}	; 0x75
    7fa8:	1d000075 	stcne	0, cr0, [r0, #-468]	; 0xfffffe2c
    7fac:	00000000 	andeq	r0, r0, r0
    7fb0:	000037f2 	strdeq	r3, [r0], -r2
    7fb4:	0000001d 	andeq	r0, r0, sp, lsl r0
    7fb8:	00380000 	eorseq	r0, r8, r0
    7fbc:	01220000 			; <UNDEFINED> instruction: 0x01220000
    7fc0:	000016e8 	andeq	r1, r0, r8, ror #13
    7fc4:	0a133e01 	beq	4d77d0 <__RAM_SIZE+0x3d77d0>
    7fc8:	00000001 	andeq	r0, r0, r1
    7fcc:	00000000 	andeq	r0, r0, r0
    7fd0:	0075a100 	rsbseq	sl, r5, r0, lsl #2
    7fd4:	1e9e0100 	fmlnee	f0, f6, f0
    7fd8:	551b0000 	ldrpl	r0, [fp, #-0]
    7fdc:	0100001d 	tsteq	r0, sp, lsl r0
    7fe0:	a733133e 			; <UNDEFINED> instruction: 0xa733133e
    7fe4:	c5000003 	strgt	r0, [r0, #-3]
    7fe8:	c1000075 	tstgt	r0, r5, ror r0
    7fec:	1b000075 	blne	81c8 <__HEAP_SIZE+0x71c8>
    7ff0:	00001aed 	andeq	r1, r0, sp, ror #21
    7ff4:	39133f01 	ldmdbcc	r3, {r0, r8, r9, sl, fp, ip, sp}
    7ff8:	0000049d 	muleq	r0, sp, r4
    7ffc:	000075e9 	andeq	r7, r0, r9, ror #11
    8000:	000075e3 	andeq	r7, r0, r3, ror #11
    8004:	0022c318 	eoreq	ip, r2, r8, lsl r3
    8008:	13410100 	movtne	r0, #4352	; 0x1100
    800c:	00066611 	andeq	r6, r6, r1, lsl r6
    8010:	00761600 	rsbseq	r1, r6, r0, lsl #12
    8014:	00761200 	rsbseq	r1, r6, r0, lsl #4
    8018:	00001d00 	andeq	r1, r0, r0, lsl #26
    801c:	37f20000 	ldrbcc	r0, [r2, r0]!
    8020:	001d0000 	andseq	r0, sp, r0
    8024:	00000000 	andeq	r0, r0, r0
    8028:	00000038 	andeq	r0, r0, r8, lsr r0
    802c:	18dd0121 	ldmne	sp, {r0, r5, r8}^
    8030:	3e010000 	cdpcc	0, 0, cr0, cr1, cr0, {0}
    8034:	19010c12 	stmdbne	r1, {r1, r4, sl, fp}
    8038:	1c000001 	stcne	0, cr0, [r0], {1}
    803c:	7c100027 	ldcvc	0, cr0, [r0], {39}	; 0x27
    8040:	34100028 	ldrcc	r0, [r0], #-40	; 0xffffffd8
    8044:	01000076 	tsteq	r0, r6, ror r0
    8048:	00001fa2 	andeq	r1, r0, r2, lsr #31
    804c:	0022c218 	eoreq	ip, r2, r8, lsl r2
    8050:	12400100 	subne	r0, r0, #0, 2
    8054:	0006660d 	andeq	r6, r6, sp, lsl #12
    8058:	00767200 	rsbseq	r7, r6, r0, lsl #4
    805c:	00766c00 	rsbseq	r6, r6, r0, lsl #24
    8060:	092b1800 	stmdbeq	fp!, {fp, ip}
    8064:	41010000 	mrsmi	r0, (UNDEF: 1)
    8068:	014a1012 	cmpeq	sl, r2, lsl r0
    806c:	76a10000 	strtvc	r0, [r1], r0
    8070:	769b0000 	ldrvc	r0, [fp], r0
    8074:	ba180000 	blt	60807c <__RAM_SIZE+0x50807c>
    8078:	0100001e 	tsteq	r0, lr, lsl r0
    807c:	19101242 	ldmdbne	r0, {r1, r6, r9, ip}
    8080:	d9000001 	stmdble	r0, {r0}
    8084:	cb000076 	blgt	8264 <__HEAP_SIZE+0x7264>
    8088:	28000076 	stmdacs	r0, {r1, r2, r4, r5, r6}
    808c:	00000540 	andeq	r0, r0, r0, asr #10
    8090:	00197718 	andseq	r7, r9, r8, lsl r7
    8094:	12570100 	subsne	r0, r7, #0, 2
    8098:	00015b1a 	andeq	r5, r1, sl, lsl fp
    809c:	00773600 	rsbseq	r3, r7, r0, lsl #12
    80a0:	00773200 	rsbseq	r3, r7, r0, lsl #4
    80a4:	275c1c00 	ldrbcs	r1, [ip, -r0, lsl #24]
    80a8:	27741000 	ldrbcs	r1, [r4, -r0]!
    80ac:	1f431000 	svcne	0x00431000
    80b0:	a8180000 	ldmdage	r8, {}	; <UNPREDICTABLE>
    80b4:	01000018 	tsteq	r0, r8, lsl r0
    80b8:	d20d125f 	andle	r1, sp, #-268435451	; 0xf0000005
    80bc:	56000006 	strpl	r0, [r0], -r6
    80c0:	54000077 	strpl	r0, [r0], #-119	; 0xffffff89
    80c4:	1d000077 	stcne	0, cr0, [r0, #-476]	; 0xfffffe24
    80c8:	10002774 	andne	r2, r0, r4, ror r7
    80cc:	00001491 	muleq	r0, r1, r4
    80d0:	05702300 	ldrbeq	r2, [r0, #-768]!	; 0xfffffd00
    80d4:	1f620000 	svcne	0x00620000
    80d8:	0f180000 	svceq	0x00180000
    80dc:	0100000a 	tsteq	r0, sl
    80e0:	dd151294 	lfmle	f1, 4, [r5, #-592]	; 0xfffffdb0
    80e4:	6d000006 	stcvs	0, cr0, [r0, #-24]	; 0xffffffe8
    80e8:	69000077 	stmdbvs	r0, {r0, r1, r2, r4, r5, r6}
    80ec:	00000077 	andeq	r0, r0, r7, ror r0
    80f0:	00058823 	andeq	r8, r5, r3, lsr #16
    80f4:	001f8100 	andseq	r8, pc, r0, lsl #2
    80f8:	0a0f1800 	beq	3ce100 <__RAM_SIZE+0x2ce100>
    80fc:	9a010000 	bls	48104 <__HEAP_SIZE+0x47104>
    8100:	06dd1912 			; <UNDEFINED> instruction: 0x06dd1912
    8104:	778f0000 	strvc	r0, [pc, r0]
    8108:	778b0000 	strvc	r0, [fp, r0]
    810c:	2b000000 	blcs	8114 <__HEAP_SIZE+0x7114>
    8110:	100027a8 	andne	r2, r0, r8, lsr #15
    8114:	100027dc 	ldrdne	r2, [r0], -ip
    8118:	0009db18 	andeq	sp, r9, r8, lsl fp
    811c:	12a30100 	adcne	r0, r3, #0, 2
    8120:	00039115 	andeq	r9, r3, r5, lsl r1
    8124:	0077af00 	rsbseq	sl, r7, r0, lsl #30
    8128:	0077ad00 	rsbseq	sl, r7, r0, lsl #26
    812c:	00000000 	andeq	r0, r0, r0
    8130:	1f5f0121 	svcne	0x005f0121
    8134:	e0010000 	and	r0, r1, r0
    8138:	19011011 	stmdbne	r1, {r0, r4, ip}
    813c:	00000001 	andeq	r0, r0, r1
    8140:	00000000 	andeq	r0, r0, r0
    8144:	c2000000 	andgt	r0, r0, #0
    8148:	01000077 	tsteq	r0, r7, ror r0
    814c:	00002085 	andeq	r2, r0, r5, lsl #1
    8150:	001d551b 	andseq	r5, sp, fp, lsl r5
    8154:	11e00100 	mvnne	r0, r0, lsl #2
    8158:	0003a72e 	andeq	sl, r3, lr, lsr #14
    815c:	0077f000 	rsbseq	pc, r7, r0
    8160:	0077e200 	rsbseq	lr, r7, r0, lsl #4
    8164:	22c21800 	sbccs	r1, r2, #0, 16
    8168:	e2010000 	and	r0, r1, #0
    816c:	06661111 			; <UNDEFINED> instruction: 0x06661111
    8170:	785a0000 	ldmdavc	sl, {}^	; <UNPREDICTABLE>
    8174:	784c0000 	stmdavc	ip, {}^	; <UNPREDICTABLE>
    8178:	19180000 	ldmdbne	r8, {}	; <UNPREDICTABLE>
    817c:	0100001a 	tsteq	r0, sl, lsl r0
    8180:	191411e3 	ldmdbne	r4, {r0, r1, r5, r6, r7, r8, ip}
    8184:	ba000001 	blt	8190 <__HEAP_SIZE+0x7190>
    8188:	b6000078 			; <UNDEFINED> instruction: 0xb6000078
    818c:	1c000078 	stcne	0, cr0, [r0], {120}	; 0x78
	...
    8198:	00002024 	andeq	r2, r0, r4, lsr #32
    819c:	0009db18 	andeq	sp, r9, r8, lsl fp
    81a0:	120d0100 	andne	r0, sp, #0, 2
    81a4:	00039111 	andeq	r9, r3, r1, lsl r1
    81a8:	0078db00 	rsbseq	sp, r8, r0, lsl #22
    81ac:	0078d900 	rsbseq	sp, r8, r0, lsl #18
    81b0:	001d0000 	andseq	r0, sp, r0
    81b4:	28000000 	stmdacs	r0, {}	; <UNPREDICTABLE>
    81b8:	1e000026 	cdpne	0, 0, cr0, cr0, cr6, {1}
    81bc:	00000000 	andeq	r0, r0, r0
    81c0:	00002e16 	andeq	r2, r0, r6, lsl lr
    81c4:	00002041 	andeq	r2, r0, r1, asr #32
    81c8:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    81cc:	1d000074 	stcne	0, cr0, [r0, #-464]	; 0xfffffe30
    81d0:	00000000 	andeq	r0, r0, r0
    81d4:	000024cf 	andeq	r2, r0, pc, asr #9
    81d8:	0000001e 	andeq	r0, r0, lr, lsl r0
    81dc:	0037d400 	eorseq	sp, r7, r0, lsl #8
    81e0:	00205e00 	eoreq	r5, r0, r0, lsl #28
    81e4:	50011f00 	andpl	r1, r1, r0, lsl #30
    81e8:	00007502 	andeq	r7, r0, r2, lsl #10
    81ec:	0000001d 	andeq	r0, r0, sp, lsl r0
    81f0:	0037f200 	eorseq	pc, r7, r0, lsl #4
    81f4:	00001e00 	andeq	r1, r0, r0, lsl #28
    81f8:	37d40000 	ldrbcc	r0, [r4, r0]
    81fc:	207b0000 	rsbscs	r0, fp, r0
    8200:	011f0000 	tsteq	pc, r0
    8204:	18740250 	ldmdane	r4!, {r4, r6, r9}^
    8208:	00001d00 	andeq	r1, r0, r0, lsl #26
    820c:	38000000 	stmdacc	r0, {}	; <UNPREDICTABLE>
    8210:	21000000 	mrscs	r0, (UNDEF: 0)
    8214:	0016a401 	andseq	sl, r6, r1, lsl #8
    8218:	11c20100 	bicne	r0, r2, r0, lsl #2
    821c:	0119010c 	tsteq	r9, ip, lsl #2
	...
    8228:	78ee0000 	stmiavc	lr!, {}^	; <UNPREDICTABLE>
    822c:	f4010000 	vst4.8	{d0-d3}, [r1], r0
    8230:	1b000020 	blne	82b8 <__HEAP_SIZE+0x72b8>
    8234:	000021bd 			; <UNDEFINED> instruction: 0x000021bd
    8238:	2a11c201 	bcs	478a44 <__RAM_SIZE+0x378a44>
    823c:	0000014a 	andeq	r0, r0, sl, asr #2
    8240:	00007914 	andeq	r7, r0, r4, lsl r9
    8244:	0000790e 	andeq	r7, r0, lr, lsl #18
    8248:	001b5d18 	andseq	r5, fp, r8, lsl sp
    824c:	11c40100 	bicne	r0, r4, r0, lsl #2
    8250:	00011910 	andeq	r1, r1, r0, lsl r9
    8254:	00794200 	rsbseq	r4, r9, r0, lsl #4
    8258:	00794000 	rsbseq	r4, r9, r0
    825c:	00001d00 	andeq	r1, r0, r0, lsl #26
    8260:	26280000 	strtcs	r0, [r8], -r0
    8264:	001d0000 	andseq	r0, sp, r0
    8268:	f2000000 	vhadd.s8	d0, d0, d0
    826c:	1d000037 	stcne	0, cr0, [r0, #-220]	; 0xffffff24
    8270:	00000000 	andeq	r0, r0, r0
    8274:	00003800 	andeq	r3, r0, r0, lsl #16
    8278:	0000001d 	andeq	r0, r0, sp, lsl r0
    827c:	0024cf00 	eoreq	ip, r4, r0, lsl #30
    8280:	01220000 			; <UNDEFINED> instruction: 0x01220000
    8284:	000018f0 	strdeq	r1, [r0], -r0
    8288:	0a119801 	beq	46e294 <__RAM_SIZE+0x36e294>
    828c:	0026e001 	eoreq	lr, r6, r1
    8290:	00271c10 	eoreq	r1, r7, r0, lsl ip
    8294:	00795510 	rsbseq	r5, r9, r0, lsl r5
    8298:	214d0100 	mrscs	r0, (UNDEF: 93)
    829c:	a31b0000 	tstge	fp, #0
    82a0:	0100001c 	tsteq	r0, ip, lsl r0
    82a4:	4a241198 	bmi	90c90c <__RAM_SIZE+0x80c90c>
    82a8:	7d000001 	stcvc	0, cr0, [r0, #-4]
    82ac:	75000079 	strvc	r0, [r0, #-121]	; 0xffffff87
    82b0:	18000079 	stmdane	r0, {r0, r3, r4, r5, r6}
    82b4:	00001692 	muleq	r0, r2, r6
    82b8:	14119a01 	ldrne	r9, [r1], #-2561	; 0xfffff5ff
    82bc:	0000014a 	andeq	r0, r0, sl, asr #2
    82c0:	000079b5 			; <UNDEFINED> instruction: 0x000079b5
    82c4:	000079b1 			; <UNDEFINED> instruction: 0x000079b1
    82c8:	0027001d 	eoreq	r0, r7, sp, lsl r0
    82cc:	0037f210 	eorseq	pc, r7, r0, lsl r2	; <UNPREDICTABLE>
    82d0:	270c1d00 	strcs	r1, [ip, -r0, lsl #26]
    82d4:	38001000 	stmdacc	r0, {ip}
    82d8:	24000000 	strcs	r0, [r0], #-0
    82dc:	00148901 	andseq	r8, r4, r1, lsl #18
    82e0:	117f0100 	cmnne	pc, r0, lsl #2
    82e4:	03a70112 			; <UNDEFINED> instruction: 0x03a70112
	...
    82f0:	7d020000 	stcvc	0, cr0, [r2, #-0]
    82f4:	21820100 	orrcs	r0, r2, r0, lsl #2
    82f8:	151b0000 	ldrne	r0, [fp, #-0]
    82fc:	01000014 	tsteq	r0, r4, lsl r0
    8300:	193c117f 	ldmdbne	ip!, {r0, r1, r2, r3, r4, r5, r6, r8, ip}
    8304:	d7000001 	strle	r0, [r0, -r1]
    8308:	d3000079 	movwle	r0, #121	; 0x79
    830c:	00000079 	andeq	r0, r0, r9, ror r0
    8310:	2272012c 	rsbscs	r0, r2, #44, 2
    8314:	71010000 	mrsvc	r0, (UNDEF: 1)
    8318:	a7011611 	smladge	r1, r1, r6, r1
    831c:	00000003 	andeq	r0, r0, r3
    8320:	00000000 	andeq	r0, r0, r0
    8324:	02000000 	andeq	r0, r0, #0
    8328:	2401007d 	strcs	r0, [r1], #-125	; 0xffffff83
    832c:	001e0e01 	andseq	r0, lr, r1, lsl #28
    8330:	10eb0100 	rscne	r0, fp, r0, lsl #2
    8334:	01190110 	tsteq	r9, r0, lsl r1
	...
    8340:	7d020000 	stcvc	0, cr0, [r2, #-0]
    8344:	221a0100 	andscs	r0, sl, #0, 2
    8348:	551b0000 	ldrpl	r0, [fp, #-0]
    834c:	0100001d 	tsteq	r0, sp, lsl r0
    8350:	a73410eb 	ldrge	r1, [r4, -fp, ror #1]!
    8354:	fc000003 	stc2	0, cr0, [r0], {3}
    8358:	f8000079 			; <UNDEFINED> instruction: 0xf8000079
    835c:	19000079 	stmdbne	r0, {r0, r3, r4, r5, r6}
    8360:	00001b24 	andeq	r1, r0, r4, lsr #22
    8364:	3610ec01 	ldrcc	lr, [r0], -r1, lsl #24
    8368:	000008fb 	strdeq	r0, [r0], -fp
    836c:	18195101 	ldmdane	r9, {r0, r8, ip, lr}
    8370:	0100001d 	tsteq	r0, sp, lsl r0
    8374:	ea3710ed 	b	dcc730 <__RAM_SIZE+0xccc730>
    8378:	01000008 	tsteq	r0, r8
    837c:	1a191852 	bne	64e4cc <__RAM_SIZE+0x54e4cc>
    8380:	ef010000 	svc	0x00010000
    8384:	01191410 	tsteq	r9, r0, lsl r4
    8388:	7a200000 	bvc	808390 <__RAM_SIZE+0x708390>
    838c:	7a1a0000 	bvc	688394 <__RAM_SIZE+0x588394>
    8390:	c2180000 	andsgt	r0, r8, #0
    8394:	01000022 	tsteq	r0, r2, lsr #32
    8398:	661110f0 			; <UNDEFINED> instruction: 0x661110f0
    839c:	50000006 	andpl	r0, r0, r6
    83a0:	4c00007a 	stcmi	0, cr0, [r0], {122}	; 0x7a
    83a4:	0000007a 	andeq	r0, r0, sl, ror r0
    83a8:	19190121 	ldmdbne	r9, {r0, r5, r8}
    83ac:	a7010000 	strge	r0, [r1, -r0]
    83b0:	a7011210 	smladge	r1, r0, r2, r1
    83b4:	00000003 	andeq	r0, r0, r3
    83b8:	00000000 	andeq	r0, r0, r0
    83bc:	6e000000 	cdpvs	0, 0, cr0, cr0, cr0, {0}
    83c0:	0100007a 	tsteq	r0, sl, ror r0
    83c4:	00002311 	andeq	r2, r0, r1, lsl r3
    83c8:	0020451b 	eoreq	r4, r0, fp, lsl r5
    83cc:	10a70100 	adcne	r0, r7, r0, lsl #2
    83d0:	0000b82f 	andeq	fp, r0, pc, lsr #16
    83d4:	007a9200 	rsbseq	r9, sl, r0, lsl #4
    83d8:	007a8e00 	rsbseq	r8, sl, r0, lsl #28
    83dc:	1b3d1800 	blne	f4e3e4 <__RAM_SIZE+0xe4e3e4>
    83e0:	a9010000 	stmdbge	r1, {}	; <UNPREDICTABLE>
    83e4:	012f1510 			; <UNDEFINED> instruction: 0x012f1510
    83e8:	7ab40000 	bvc	fed083f0 <__StackTop+0xc6c083f0>
    83ec:	7ab00000 	bvc	fec083f4 <__StackTop+0xc6b083f4>
    83f0:	c2180000 	andsgt	r0, r8, #0
    83f4:	01000022 	tsteq	r0, r2, lsr #32
    83f8:	661110aa 	ldrvs	r1, [r1], -sl, lsr #1
    83fc:	e9000006 	stmdb	r0, {r1, r2}
    8400:	d300007a 	movwle	r0, #122	; 0x7a
    8404:	1d00007a 	stcne	0, cr0, [r0, #-488]	; 0xfffffe18
    8408:	00000000 	andeq	r0, r0, r0
    840c:	00002628 	andeq	r2, r0, r8, lsr #12
    8410:	0000001e 	andeq	r0, r0, lr, lsl r0
    8414:	00231100 	eoreq	r1, r3, r0, lsl #2
    8418:	0022a900 	eoreq	sl, r2, r0, lsl #18
    841c:	50011f00 	andpl	r1, r1, r0, lsl #30
    8420:	3300740f 	movwcc	r7, #1039	; 0x40f
    8424:	1c007424 	cfstrsne	mvf7, [r0], {36}	; 0x24
    8428:	bc032432 	cfstrslt	mvf2, [r3], {50}	; 0x32
    842c:	22380085 	eorscs	r0, r8, #133	; 0x85
    8430:	0251011f 	subseq	r0, r1, #-1073741817	; 0xc0000007
    8434:	1d000076 	stcne	0, cr0, [r0, #-472]	; 0xfffffe28
    8438:	00000000 	andeq	r0, r0, r0
    843c:	000024cf 	andeq	r2, r0, pc, asr #9
    8440:	0000001e 	andeq	r0, r0, lr, lsl r0
    8444:	00231100 	eoreq	r1, r3, r0, lsl #2
    8448:	0022c600 	eoreq	ip, r2, r0, lsl #12
    844c:	51011f00 	tstpl	r1, r0, lsl #30
    8450:	00007602 	andeq	r7, r0, r2, lsl #12
    8454:	0000001e 	andeq	r0, r0, lr, lsl r0
    8458:	00231100 	eoreq	r1, r3, r0, lsl #2
    845c:	0022da00 	eoreq	sp, r2, r0, lsl #20
    8460:	51011f00 	tstpl	r1, r0, lsl #30
    8464:	00007602 	andeq	r7, r0, r2, lsl #12
    8468:	0000001e 	andeq	r0, r0, lr, lsl r0
    846c:	00231100 	eoreq	r1, r3, r0, lsl #2
    8470:	0022f700 	eoreq	pc, r2, r0, lsl #14
    8474:	50011f00 	andpl	r1, r1, r0, lsl #30
    8478:	8b100305 	blhi	409094 <__RAM_SIZE+0x309094>
    847c:	011f3800 	tsteq	pc, r0, lsl #16
    8480:	00760251 	rsbseq	r0, r6, r1, asr r2
    8484:	00002000 	andeq	r2, r0, r0
    8488:	23110000 	tstcs	r1, #0
    848c:	011f0000 	tsteq	pc, r0
    8490:	2c030550 	cfstr32cs	mvfx0, [r3], {80}	; 0x50
    8494:	1f38008b 	svcne	0x0038008b
    8498:	76025101 	strvc	r5, [r2], -r1, lsl #2
    849c:	2d000000 	stccs	0, cr0, [r0, #-0]
    84a0:	00001a9b 	muleq	r0, fp, sl
    84a4:	14105e01 	ldrne	r5, [r0], #-3585	; 0xfffff1ff
    84a8:	00066601 	andeq	r6, r6, r1, lsl #12
	...
    84b4:	007b6a00 	rsbseq	r6, fp, r0, lsl #20
    84b8:	23ec0100 	mvncs	r0, #0, 2
    84bc:	0f1b0000 	svceq	0x001b0000
    84c0:	0100000a 	tsteq	r0, sl
    84c4:	d23f105e 	eorsle	r1, pc, #94	; 0x5e
    84c8:	92000006 	andls	r0, r0, #6
    84cc:	8a00007b 	bhi	86c0 <__HEAP_SIZE+0x76c0>
    84d0:	1b00007b 	blne	86c4 <__HEAP_SIZE+0x76c4>
    84d4:	00002045 	andeq	r2, r0, r5, asr #32
    84d8:	41105f01 	tstmi	r0, r1, lsl #30
    84dc:	000000b8 	strheq	r0, [r0], -r8
    84e0:	00007bd2 	ldrdeq	r7, [r0], -r2
    84e4:	00007bca 	andeq	r7, r0, sl, asr #23
    84e8:	001a1818 	andseq	r1, sl, r8, lsl r8
    84ec:	10610100 	rsbne	r0, r1, r0, lsl #2
    84f0:	00066611 	andeq	r6, r6, r1, lsl r6
    84f4:	007c0f00 	rsbseq	r0, ip, r0, lsl #30
    84f8:	007c0900 	rsbseq	r0, ip, r0, lsl #18
    84fc:	22c21800 	sbccs	r1, r2, #0, 16
    8500:	62010000 	andvs	r0, r1, #0
    8504:	06661110 			; <UNDEFINED> instruction: 0x06661110
    8508:	7c420000 	marvc	acc0, r0, r2
    850c:	7c3a0000 	ldcvc	0, cr0, [sl], #-0
    8510:	782e0000 	stmdavc	lr!, {}	; <UNPREDICTABLE>
    8514:	10630100 	rsbne	r0, r3, r0, lsl #2
    8518:	00012f15 	andeq	r2, r1, r5, lsl pc
    851c:	007c7e00 	rsbseq	r7, ip, r0, lsl #28
    8520:	007c7800 	rsbseq	r7, ip, r0, lsl #16
    8524:	1e5b1800 	cdpne	8, 5, cr1, cr11, cr0, {0}
    8528:	64010000 	strvs	r0, [r1], #-0
    852c:	00ac0e10 	adceq	r0, ip, r0, lsl lr
    8530:	7cac0000 	stcvc	0, cr0, [ip]
    8534:	7ca80000 	stcvc	0, cr0, [r8]
    8538:	03180000 	tsteq	r8, #0
    853c:	0100001e 	tsteq	r0, lr, lsl r0
    8540:	19141065 	ldmdbne	r4, {r0, r2, r5, r6, ip}
    8544:	ce000001 	cdpgt	0, 0, cr0, cr0, cr1, {0}
    8548:	ca00007c 	bgt	8740 <__HEAP_SIZE+0x7740>
    854c:	1800007c 	stmdane	r0, {r2, r3, r4, r5, r6}
    8550:	00001d26 	andeq	r1, r0, r6, lsr #26
    8554:	1c106601 	ldcne	6, cr6, [r0], {1}
    8558:	000023ec 	andeq	r2, r0, ip, ror #7
    855c:	00007cf2 	strdeq	r7, [r0], -r2
    8560:	00007cee 	andeq	r7, r0, lr, ror #25
    8564:	0009d018 	andeq	sp, r9, r8, lsl r0
    8568:	10670100 	rsbne	r0, r7, r0, lsl #2
    856c:	00038b16 	andeq	r8, r3, r6, lsl fp
    8570:	007d1400 	rsbseq	r1, sp, r0, lsl #8
    8574:	007d1200 	rsbseq	r1, sp, r0, lsl #4
    8578:	04070000 	streq	r0, [r7], #-0
    857c:	0000037a 	andeq	r0, r0, sl, ror r3
    8580:	20110124 	andscs	r0, r1, r4, lsr #2
    8584:	4c010000 	stcmi	0, cr0, [r1], {-0}
    8588:	a6010810 			; <UNDEFINED> instruction: 0xa6010810
	...
    8594:	02000000 	andeq	r0, r0, #0
    8598:	3c01007d 	stccc	0, cr0, [r1], {125}	; 0x7d
    859c:	1b000024 	blne	8634 <__HEAP_SIZE+0x7634>
    85a0:	00001d65 	andeq	r1, r0, r5, ror #26
    85a4:	24104c01 	ldrcs	r4, [r0], #-3073	; 0xfffff3ff
    85a8:	000003a7 	andeq	r0, r0, r7, lsr #7
    85ac:	00007d2b 	andeq	r7, r0, fp, lsr #26
    85b0:	00007d27 	andeq	r7, r0, r7, lsr #26
    85b4:	0022c218 	eoreq	ip, r2, r8, lsl r2
    85b8:	104e0100 	subne	r0, lr, r0, lsl #2
    85bc:	0006660d 	andeq	r6, r6, sp, lsl #12
    85c0:	007d4b00 	rsbseq	r4, sp, r0, lsl #22
    85c4:	007d4900 	rsbseq	r4, sp, r0, lsl #18
    85c8:	012c0000 			; <UNDEFINED> instruction: 0x012c0000
    85cc:	00000d05 	andeq	r0, r0, r5, lsl #26
    85d0:	0d104001 	ldceq	0, cr4, [r0, #-4]
    85d4:	00012f01 	andeq	r2, r1, r1, lsl #30
    85d8:	0026d400 	eoreq	sp, r6, r0, lsl #8
    85dc:	0026e010 	eoreq	lr, r6, r0, lsl r0
    85e0:	007d0210 	rsbseq	r0, sp, r0, lsl r2
    85e4:	fd012401 	stc2	4, cr2, [r1, #-4]
    85e8:	01000017 	tsteq	r0, r7, lsl r0
    85ec:	010c101d 	tsteq	ip, sp, lsl r0
    85f0:	0000014a 	andeq	r0, r0, sl, asr #2
	...
    85fc:	01007d02 	tsteq	r0, r2, lsl #26
    8600:	0000249a 	muleq	r0, sl, r4
    8604:	001a1918 	andseq	r1, sl, r8, lsl r9
    8608:	101f0100 	andsne	r0, pc, r0, lsl #2
    860c:	00014a10 	andeq	r4, r1, r0, lsl sl
    8610:	007d6000 	rsbseq	r6, sp, r0
    8614:	007d5e00 	rsbseq	r5, sp, r0, lsl #28
    8618:	0c262500 	cfstr32eq	mvfx2, [r6], #-0
    861c:	20010000 	andcs	r0, r1, r0
    8620:	012f1110 			; <UNDEFINED> instruction: 0x012f1110
    8624:	00000000 	andeq	r0, r0, r0
    8628:	1c910124 	ldfnes	f0, [r1], {36}	; 0x24
    862c:	0a010000 	beq	48634 <__HEAP_SIZE+0x47634>
    8630:	4a010c10 	bmi	4b678 <__HEAP_SIZE+0x4a678>
    8634:	c8000001 	stmdagt	r0, {r0}
    8638:	d4100026 	ldrle	r0, [r0], #-38	; 0xffffffda
    863c:	02100026 	andseq	r0, r0, #38	; 0x26
    8640:	cf01007d 	svcgt	0x0001007d
    8644:	18000024 	stmdane	r0, {r2, r5}
    8648:	0000201f 	andeq	r2, r0, pc, lsl r0
    864c:	10100c01 	andsne	r0, r0, r1, lsl #24
    8650:	0000014a 	andeq	r0, r0, sl, asr #2
    8654:	00007d75 	andeq	r7, r0, r5, ror sp
    8658:	00007d73 	andeq	r7, r0, r3, ror sp
    865c:	77012100 	strvc	r2, [r1, -r0, lsl #2]
    8660:	01000011 	tsteq	r0, r1, lsl r0
    8664:	010c0f74 	tsteq	ip, r4, ror pc
    8668:	00000119 	andeq	r0, r0, r9, lsl r1
    866c:	1000287c 	andne	r2, r0, ip, ror r8
    8670:	100029ac 	andne	r2, r0, ip, lsr #19
    8674:	00007d88 	andeq	r7, r0, r8, lsl #27
    8678:	0025df01 	eoreq	sp, r5, r1, lsl #30
    867c:	22c21800 	sbccs	r1, r2, #0, 16
    8680:	76010000 	strvc	r0, [r1], -r0
    8684:	06660d0f 	strbteq	r0, [r6], -pc, lsl #26
    8688:	7db40000 	ldcvc	0, cr0, [r4]
    868c:	7da80000 	stcvc	0, cr0, [r8]
    8690:	53180000 	tstpl	r8, #0
    8694:	01000021 	tsteq	r0, r1, lsr #32
    8698:	19100f77 	ldmdbne	r0, {r0, r1, r2, r4, r5, r6, r8, r9, sl, fp}
    869c:	0b000001 	bleq	86a8 <__HEAP_SIZE+0x76a8>
    86a0:	0100007e 	tsteq	r0, lr, ror r0
    86a4:	2300007e 	movwcs	r0, #126	; 0x7e
    86a8:	000005a0 	andeq	r0, r0, r0, lsr #11
    86ac:	000025cc 	andeq	r2, r0, ip, asr #11
    86b0:	00141525 	andseq	r1, r4, r5, lsr #10
    86b4:	0f860100 	svceq	0x00860100
    86b8:	00011918 	andeq	r1, r1, r8, lsl r9
    86bc:	c8230000 	stmdagt	r3!, {}	; <UNPREDICTABLE>
    86c0:	4f000005 	svcmi	0x00000005
    86c4:	18000025 	stmdane	r0, {r0, r2, r5}
    86c8:	00000a0f 	andeq	r0, r0, pc, lsl #20
    86cc:	190f9c01 	stmdbne	pc, {r0, sl, fp, ip, pc}	; <UNPREDICTABLE>
    86d0:	000006dd 	ldrdeq	r0, [r0], -sp
    86d4:	00007e51 	andeq	r7, r0, r1, asr lr
    86d8:	00007e4d 	andeq	r7, r0, sp, asr #28
    86dc:	05e02300 	strbeq	r2, [r0, #768]!	; 0x300
    86e0:	256e0000 	strbcs	r0, [lr, #-0]!
    86e4:	0f180000 	svceq	0x00180000
    86e8:	0100000a 	tsteq	r0, sl
    86ec:	dd190f9e 	ldcle	15, cr0, [r9, #-632]	; 0xfffffd88
    86f0:	73000006 	movwvc	r0, #6
    86f4:	6f00007e 	svcvs	0x0000007e
    86f8:	0000007e 	andeq	r0, r0, lr, ror r0
    86fc:	0029021c 	eoreq	r0, r9, ip, lsl r2
    8700:	00293210 	eoreq	r3, r9, r0, lsl r2
    8704:	00259110 	eoreq	r9, r5, r0, lsl r1
    8708:	09db1800 	ldmibeq	fp, {fp, ip}^
    870c:	9f010000 	svcls	0x00010000
    8710:	0391190f 	orrseq	r1, r1, #245760	; 0x3c000
    8714:	7e930000 	cdpvc	0, 9, cr0, cr3, cr0, {0}
    8718:	7e910000 	cdpvc	0, 9, cr0, cr1, cr0, {0}
    871c:	23000000 	movwcs	r0, #0
    8720:	000005f8 	strdeq	r0, [r0], -r8
    8724:	000025b9 			; <UNDEFINED> instruction: 0x000025b9
    8728:	0015ab18 	andseq	sl, r5, r8, lsl fp
    872c:	0fcc0100 	svceq	0x00cc0100
    8730:	00014a24 	andeq	r4, r1, r4, lsr #20
    8734:	007eae00 	rsbseq	sl, lr, r0, lsl #28
    8738:	007ea600 	rsbseq	sl, lr, r0, lsl #12
    873c:	296c1d00 	stmdbcs	ip!, {r8, sl, fp, ip}^
    8740:	1e9e1000 	cdpne	0, 9, cr1, cr14, cr0, {0}
    8744:	1d000000 	stcne	0, cr0, [r0, #-0]
    8748:	1000294c 	andne	r2, r0, ip, asr #18
    874c:	00001491 	muleq	r0, r1, r4
    8750:	0029601d 	eoreq	r6, r9, sp, lsl r0
    8754:	00382a10 	eorseq	r2, r8, r0, lsl sl
    8758:	821d0000 	andshi	r0, sp, #0
    875c:	f2100028 	vhadd.s16	d0, d0, d24
    8760:	1d000037 	stcne	0, cr0, [r0, #-220]	; 0xffffff24
    8764:	10002986 	andne	r2, r0, r6, lsl #19
    8768:	00003800 	andeq	r3, r0, r0, lsl #16
    876c:	19c42700 	stmibne	r4, {r8, r9, sl, sp}^
    8770:	36010000 	strcc	r0, [r1], -r0
    8774:	4a01170f 	bmi	4e3b8 <__HEAP_SIZE+0x4d3b8>
    8778:	7c000001 	stcvc	0, cr0, [r0], {1}
    877c:	bc100022 	ldclt	0, cr0, [r0], {34}	; 0x22
    8780:	02100022 	andseq	r0, r0, #34	; 0x22
    8784:	2801007d 	stmdacs	r1, {r0, r2, r3, r4, r5, r6}
    8788:	18000026 	stmdane	r0, {r1, r2, r5}
    878c:	00001a19 	andeq	r1, r0, r9, lsl sl
    8790:	140f3801 	strne	r3, [pc], #-2049	; 8798 <__HEAP_SIZE+0x7798>
    8794:	0000014a 	andeq	r0, r0, sl, asr #2
    8798:	00007ee8 	andeq	r7, r0, r8, ror #29
    879c:	00007ee4 	andeq	r7, r0, r4, ror #29
    87a0:	00172a18 	andseq	r2, r7, r8, lsl sl
    87a4:	0f390100 	svceq	0x00390100
    87a8:	00012f15 	andeq	r2, r1, r5, lsl pc
    87ac:	007f0d00 	rsbseq	r0, pc, r0, lsl #26
    87b0:	007f0700 	rsbseq	r0, pc, r0, lsl #14
    87b4:	01290000 			; <UNDEFINED> instruction: 0x01290000
    87b8:	00000d1c 	andeq	r0, r0, ip, lsl sp
    87bc:	060ee301 	streq	lr, [lr], -r1, lsl #6
    87c0:	0026b801 	eoreq	fp, r6, r1, lsl #16
    87c4:	0026c810 	eoreq	ip, r6, r0, lsl r8
    87c8:	007d0210 	rsbseq	r0, sp, r0, lsl r2
    87cc:	53012201 	movwpl	r2, #4609	; 0x1201
    87d0:	01000019 	tsteq	r0, r9, lsl r0
    87d4:	01060eb8 			; <UNDEFINED> instruction: 0x01060eb8
	...
    87e0:	00007f37 	andeq	r7, r0, r7, lsr pc
    87e4:	0026b101 	eoreq	fp, r6, r1, lsl #2
    87e8:	05282300 	streq	r2, [r8, #-768]!	; 0xfffffd00
    87ec:	269e0000 	ldrcs	r0, [lr], r0
    87f0:	15180000 	ldrne	r0, [r8, #-0]
    87f4:	01000014 	tsteq	r0, r4, lsl r0
    87f8:	19140ebe 	ldmdbne	r4, {r1, r2, r3, r4, r5, r7, r9, sl, fp}
    87fc:	5b000001 	blpl	8808 <__HEAP_SIZE+0x7808>
    8800:	5700007f 	smlsdxpl	r0, pc, r0, r0	; <UNPREDICTABLE>
    8804:	1d00007f 	stcne	0, cr0, [r0, #-508]	; 0xfffffe04
    8808:	00000000 	andeq	r0, r0, r0
    880c:	00003864 	andeq	r3, r0, r4, ror #16
    8810:	0000001d 	andeq	r0, r0, sp, lsl r0
    8814:	00304700 	eorseq	r4, r0, r0, lsl #14
    8818:	00001d00 	andeq	r1, r0, r0, lsl #26
    881c:	15cb0000 	strbne	r0, [fp]
    8820:	001d0000 	andseq	r0, sp, r0
    8824:	47000000 	strmi	r0, [r0, -r0]
    8828:	00000030 	andeq	r0, r0, r0, lsr r0
    882c:	0000001d 	andeq	r0, r0, sp, lsl r0
    8830:	00380e00 	eorseq	r0, r8, r0, lsl #28
    8834:	00001d00 	andeq	r1, r0, r0, lsl #26
    8838:	38730000 	ldmdacc	r3!, {}^	; <UNPREDICTABLE>
    883c:	22000000 	andcs	r0, r0, #0
    8840:	00013a01 	andeq	r3, r1, r1, lsl #20
    8844:	0e510100 	rdfeqs	f0, f1, f0
    8848:	2db00106 	ldfcss	f0, [r0, #24]!
    884c:	2df81000 	ldclcs	0, cr1, [r8]
    8850:	7f7a1000 	svcvc	0x007a1000
    8854:	07010000 	streq	r0, [r1, -r0]
    8858:	18000027 	stmdane	r0, {r0, r1, r2, r5}
    885c:	00001a19 	andeq	r1, r0, r9, lsl sl
    8860:	100e5301 	andne	r5, lr, r1, lsl #6
    8864:	00000119 	andeq	r0, r0, r9, lsl r1
    8868:	00007fa0 	andeq	r7, r0, r0, lsr #31
    886c:	00007f9a 	muleq	r0, sl, pc	; <UNPREDICTABLE>
    8870:	002db61d 	eoreq	fp, sp, sp, lsl r6
    8874:	00270710 	eoreq	r0, r7, r0, lsl r7
    8878:	2dc81d00 	stclcs	13, cr1, [r8]
    887c:	38811000 	stmcc	r1, {ip}
    8880:	ce1d0000 	cdpgt	0, 1, cr0, cr13, cr0, {0}
    8884:	0e10002d 	cdpeq	0, 1, cr0, cr0, cr13, {1}
    8888:	1d000038 	stcne	0, cr0, [r0, #-224]	; 0xffffff20
    888c:	10002de6 	andne	r2, r0, r6, ror #27
    8890:	00003890 	muleq	r0, r0, r8
    8894:	1b032d00 	blne	d3c9c <__HEAP_SIZE+0xd2c9c>
    8898:	b7010000 	strlt	r0, [r1, -r0]
    889c:	1901130d 	stmdbne	r1, {r0, r2, r3, r8, r9, ip}
    88a0:	44000001 	strmi	r0, [r0], #-1
    88a4:	b010002d 	andslt	r0, r0, sp, lsr #32
    88a8:	c910002d 	ldmdbgt	r0, {r0, r2, r3, r5}
    88ac:	0100007f 	tsteq	r0, pc, ror r0
    88b0:	00002807 	andeq	r2, r0, r7, lsl #16
    88b4:	001a1918 	andseq	r1, sl, r8, lsl r9
    88b8:	0db90100 	ldfeqs	f0, [r9]
    88bc:	00011910 	andeq	r1, r1, r0, lsl r9
    88c0:	00801300 	addeq	r1, r0, r0, lsl #6
    88c4:	00800d00 	addeq	r0, r0, r0, lsl #26
    88c8:	14151800 	ldrne	r1, [r5], #-2048	; 0xfffff800
    88cc:	ba010000 	blt	488d4 <__HEAP_SIZE+0x478d4>
    88d0:	0119100d 	tsteq	r9, sp
    88d4:	80410000 	subhi	r0, r1, r0
    88d8:	803f0000 	eorshi	r0, pc, r0
    88dc:	0b160000 	bleq	5888e4 <__RAM_SIZE+0x4888e4>
    88e0:	01000022 	tsteq	r0, r2, lsr #32
    88e4:	f90a0dbb 			; <UNDEFINED> instruction: 0xf90a0dbb
    88e8:	02000005 	andeq	r0, r0, #5
    88ec:	2d186c91 	ldccs	12, cr6, [r8, #-580]	; 0xfffffdbc
    88f0:	0100001f 	tsteq	r0, pc, lsl r0
    88f4:	ea140dbc 	b	50bfec <__RAM_SIZE+0x40bfec>
    88f8:	56000000 	strpl	r0, [r0], -r0
    88fc:	54000080 	strpl	r0, [r0], #-128	; 0xffffff80
    8900:	18000080 	stmdane	r0, {r7}
    8904:	0000182b 	andeq	r1, r0, fp, lsr #16
    8908:	100dbd01 	andne	fp, sp, r1, lsl #26
    890c:	00000119 	andeq	r0, r0, r9, lsl r1
    8910:	0000806e 	andeq	r8, r0, lr, rrx
    8914:	0000806a 	andeq	r8, r0, sl, rrx
    8918:	00077028 	andeq	r7, r7, r8, lsr #32
    891c:	1bfa1600 	blne	ffe8e124 <__StackTop+0xc7d8e124>
    8920:	04010000 	streq	r0, [r1], #-0
    8924:	08f01c0e 	ldmeq	r0!, {r1, r2, r3, sl, fp, ip}^
    8928:	91020000 	mrsls	r0, (UNDEF: 2)
    892c:	14481660 	strbne	r1, [r8], #-1632	; 0xfffff9a0
    8930:	05010000 	streq	r0, [r1, #-0]
    8934:	05bb1b0e 	ldreq	r1, [fp, #2830]!	; 0xb0e
    8938:	91020000 	mrsls	r0, (UNDEF: 2)
    893c:	1d331664 	ldcne	6, cr1, [r3, #-400]!	; 0xfffffe70
    8940:	06010000 	streq	r0, [r1], -r0
    8944:	0029240e 	eoreq	r2, r9, lr, lsl #8
    8948:	91020000 	mrsls	r0, (UNDEF: 2)
    894c:	2d7e1e68 	ldclcs	14, cr1, [lr, #-416]!	; 0xfffffe60
    8950:	09171000 	ldmdbeq	r7, {ip}
    8954:	27df0000 	ldrbcs	r0, [pc, r0]
    8958:	011f0000 	tsteq	pc, r0
    895c:	60910250 	addsvs	r0, r1, r0, asr r2
    8960:	0251011f 	subseq	r0, r1, #-1073741817	; 0xc0000007
    8964:	011f6491 			; <UNDEFINED> instruction: 0x011f6491
    8968:	68910252 	ldmvs	r1, {r1, r4, r6, r9}
    896c:	2d942000 	ldccs	0, cr2, [r4]
    8970:	357e1000 	ldrbcc	r1, [lr, #-0]!
    8974:	011f0000 	tsteq	pc, r0
    8978:	cd030550 	cfstr32gt	mvfx0, [r3, #-320]	; 0xfffffec0
    897c:	1f100029 	svcne	0x00100029
    8980:	91025101 	tstls	r2, r1, lsl #2
    8984:	53011f6c 	movwpl	r1, #8044	; 0x1f6c
    8988:	1f007502 	svcne	0x00007502
    898c:	02007d02 	andeq	r7, r0, #2, 26	; 0x80
    8990:	00000075 	andeq	r0, r0, r5, ror r0
    8994:	6f012100 	svcvs	0x00012100
    8998:	0100001f 	tsteq	r0, pc, lsl r0
    899c:	01100d56 	tsteq	r0, r6, asr sp
    89a0:	00000119 	andeq	r0, r0, r9, lsl r1
	...
    89ac:	0000808d 	andeq	r8, r0, sp, lsl #1
    89b0:	0028fd01 	eoreq	pc, r8, r1, lsl #26
    89b4:	16cb1b00 	strbne	r1, [fp], r0, lsl #22
    89b8:	56010000 	strpl	r0, [r1], -r0
    89bc:	03a7310d 			; <UNDEFINED> instruction: 0x03a7310d
    89c0:	80b10000 	adcshi	r0, r1, r0
    89c4:	80ad0000 	adchi	r0, sp, r0
    89c8:	5f180000 	svcpl	0x00180000
    89cc:	0100000c 	tsteq	r0, ip
    89d0:	19140d58 	ldmdbne	r4, {r3, r4, r6, r8, sl, fp}
    89d4:	d7000001 	strle	r0, [r0, -r1]
    89d8:	cf000080 	svcgt	0x00000080
    89dc:	18000080 	stmdane	r0, {r7}
    89e0:	000022c2 	andeq	r2, r0, r2, asr #5
    89e4:	170d5901 	strne	r5, [sp, -r1, lsl #18]
    89e8:	00000671 	andeq	r0, r0, r1, ror r6
    89ec:	00008112 	andeq	r8, r0, r2, lsl r1
    89f0:	0000810e 	andeq	r8, r0, lr, lsl #2
    89f4:	000c2618 	andeq	r2, ip, r8, lsl r6
    89f8:	0d5a0100 	ldfeqe	f0, [sl, #-0]
    89fc:	00012f15 	andeq	r2, r1, r5, lsl pc
    8a00:	00813400 	addeq	r3, r1, r0, lsl #8
    8a04:	00813000 	addeq	r3, r1, r0
    8a08:	00001c00 	andeq	r1, r0, r0, lsl #24
    8a0c:	00000000 	andeq	r0, r0, r0
    8a10:	289e0000 	ldmcs	lr, {}	; <UNPREDICTABLE>
    8a14:	db180000 	blle	608a1c <__RAM_SIZE+0x508a1c>
    8a18:	01000009 	tsteq	r0, r9
    8a1c:	91150d93 			; <UNDEFINED> instruction: 0x91150d93
    8a20:	54000003 	strpl	r0, [r0], #-3
    8a24:	52000081 	andpl	r0, r0, #129	; 0x81
    8a28:	00000081 	andeq	r0, r0, r1, lsl #1
    8a2c:	0000001d 	andeq	r0, r0, sp, lsl r0
    8a30:	00380e00 	eorseq	r0, r8, r0, lsl #28
    8a34:	00001e00 	andeq	r1, r0, r0, lsl #28
    8a38:	29aa0000 	stmibcs	sl!, {}	; <UNPREDICTABLE>
    8a3c:	28bb0000 	ldmcs	fp!, {}	; <UNPREDICTABLE>
    8a40:	011f0000 	tsteq	pc, r0
    8a44:	00740250 	rsbseq	r0, r4, r0, asr r2
    8a48:	00001e00 	andeq	r1, r0, r0, lsl #28
    8a4c:	37d40000 	ldrbcc	r0, [r4, r0]
    8a50:	28cf0000 	stmiacs	pc, {}^	; <UNPREDICTABLE>
    8a54:	011f0000 	tsteq	pc, r0
    8a58:	00770250 	rsbseq	r0, r7, r0, asr r2
    8a5c:	00001e00 	andeq	r1, r0, r0, lsl #28
    8a60:	381c0000 	ldmdacc	ip, {}	; <UNPREDICTABLE>
    8a64:	28e30000 	stmiacs	r3!, {}^	; <UNPREDICTABLE>
    8a68:	011f0000 	tsteq	pc, r0
    8a6c:	00750250 	rsbseq	r0, r5, r0, asr r2
    8a70:	00002000 	andeq	r2, r0, r0
    8a74:	389e0000 	ldmcc	lr, {}	; <UNPREDICTABLE>
    8a78:	011f0000 	tsteq	pc, r0
    8a7c:	f0030550 			; <UNDEFINED> instruction: 0xf0030550
    8a80:	1f38008a 	svcne	0x0038008a
    8a84:	74025101 	strvc	r5, [r2], #-257	; 0xfffffeff
    8a88:	22000018 	andcs	r0, r0, #24
    8a8c:	00232301 	eoreq	r2, r3, r1, lsl #6
    8a90:	0d190100 	ldfeqs	f0, [r9, #-0]
    8a94:	0000010a 	andeq	r0, r0, sl, lsl #2
    8a98:	00000000 	andeq	r0, r0, r0
    8a9c:	81670000 	cmnhi	r7, r0
    8aa0:	aa010000 	bge	48aa8 <__HEAP_SIZE+0x47aa8>
    8aa4:	1b000029 	blne	8b50 <__HEAP_SIZE+0x7b50>
    8aa8:	000016cb 	andeq	r1, r0, fp, asr #13
    8aac:	240d1901 	strcs	r1, [sp], #-2305	; 0xfffff6ff
    8ab0:	000003a7 	andeq	r0, r0, r7, lsr #7
    8ab4:	0000818f 	andeq	r8, r0, pc, lsl #3
    8ab8:	00008187 	andeq	r8, r0, r7, lsl #3
    8abc:	0022c218 	eoreq	ip, r2, r8, lsl r2
    8ac0:	0d1b0100 	ldfeqs	f0, [fp, #-0]
    8ac4:	00067117 	andeq	r7, r6, r7, lsl r1
    8ac8:	0081ce00 	addeq	ip, r1, r0, lsl #28
    8acc:	0081c600 	addeq	ip, r1, r0, lsl #12
    8ad0:	00001c00 	andeq	r1, r0, r0, lsl #24
    8ad4:	00000000 	andeq	r0, r0, r0
    8ad8:	29660000 	stmdbcs	r6!, {}^	; <UNPREDICTABLE>
    8adc:	db180000 	blle	608ae4 <__RAM_SIZE+0x508ae4>
    8ae0:	01000009 	tsteq	r0, r9
    8ae4:	91150d3a 	tstls	r5, sl, lsr sp
    8ae8:	07000003 	streq	r0, [r0, -r3]
    8aec:	05000082 	streq	r0, [r0, #-130]	; 0xffffff7e
    8af0:	00000082 	andeq	r0, r0, r2, lsl #1
    8af4:	0000001d 	andeq	r0, r0, sp, lsl r0
    8af8:	0037f200 	eorseq	pc, r7, r0, lsl #4
    8afc:	00001e00 	andeq	r1, r0, r0, lsl #28
    8b00:	29aa0000 	stmibcs	sl!, {}	; <UNPREDICTABLE>
    8b04:	29830000 	stmibcs	r3, {}	; <UNPREDICTABLE>
    8b08:	011f0000 	tsteq	pc, r0
    8b0c:	00740250 	rsbseq	r0, r4, r0, asr r2
    8b10:	00001d00 	andeq	r1, r0, r0, lsl #26
    8b14:	38000000 	stmdacc	r0, {}	; <UNPREDICTABLE>
    8b18:	001e0000 	andseq	r0, lr, r0
    8b1c:	d4000000 	strle	r0, [r0], #-0
    8b20:	a0000037 	andge	r0, r0, r7, lsr r0
    8b24:	1f000029 	svcne	0x00000029
    8b28:	75025001 	strvc	r5, [r2, #-1]
    8b2c:	001d0000 	andseq	r0, sp, r0
    8b30:	2a000000 	bcs	8b38 <__HEAP_SIZE+0x7b38>
    8b34:	00000038 	andeq	r0, r0, r8, lsr r0
    8b38:	001ea327 	andseq	sl, lr, r7, lsr #6
    8b3c:	0cd30100 	ldfeqe	f0, [r3], {0}
    8b40:	01190117 	tsteq	r9, r7, lsl r1
	...
    8b4c:	7d020000 	stcvc	0, cr0, [r2, #-0]
    8b50:	2a250100 	bcs	948f58 <__RAM_SIZE+0x848f58>
    8b54:	551b0000 	ldrpl	r0, [fp, #-0]
    8b58:	0100001d 	tsteq	r0, sp, lsl r0
    8b5c:	b3420cd3 	movtlt	r0, #11475	; 0x2cd3
    8b60:	2e000003 	cdpcs	0, 0, cr0, cr0, cr3, {0}
    8b64:	1a000082 	bne	8d74 <__HEAP_SIZE+0x7d74>
    8b68:	18000082 	stmdane	r0, {r1, r7}
    8b6c:	00001a19 	andeq	r1, r0, r9, lsl sl
    8b70:	140cd501 	strne	sp, [ip], #-1281	; 0xfffffaff
    8b74:	00000119 	andeq	r0, r0, r9, lsl r1
    8b78:	000082b9 			; <UNDEFINED> instruction: 0x000082b9
    8b7c:	000082b3 			; <UNDEFINED> instruction: 0x000082b3
    8b80:	0022c218 	eoreq	ip, r2, r8, lsl r2
    8b84:	0cd60100 	ldfeqe	f0, [r6], {0}
    8b88:	002a2b1d 	eoreq	r2, sl, sp, lsl fp
    8b8c:	0082f900 	addeq	pc, r2, r0, lsl #18
    8b90:	0082e500 	addeq	lr, r2, r0, lsl #10
    8b94:	00002b00 	andeq	r2, r0, r0, lsl #22
    8b98:	00000000 	andeq	r0, r0, r0
    8b9c:	782e0000 	stmdavc	lr!, {}	; <UNPREDICTABLE>
    8ba0:	0cea0100 	stfeqe	f0, [sl]
    8ba4:	00011924 	andeq	r1, r1, r4, lsr #18
    8ba8:	00838200 	addeq	r8, r3, r0, lsl #4
    8bac:	00837e00 	addeq	r7, r3, r0, lsl #28
    8bb0:	07000000 	streq	r0, [r0, -r0]
    8bb4:	00064d04 	andeq	r4, r6, r4, lsl #26
    8bb8:	2a250300 	bcs	9497c0 <__RAM_SIZE+0x8497c0>
    8bbc:	01220000 			; <UNDEFINED> instruction: 0x01220000
    8bc0:	00002146 	andeq	r2, r0, r6, asr #2
    8bc4:	0a0c3101 	beq	314fd0 <__RAM_SIZE+0x214fd0>
    8bc8:	00000001 	andeq	r0, r0, r1
    8bcc:	00000000 	andeq	r0, r0, r0
    8bd0:	0083a000 	addeq	sl, r3, r0
    8bd4:	2b370100 	blcs	dc8fdc <__RAM_SIZE+0xcc8fdc>
    8bd8:	0c1b0000 	ldceq	0, cr0, [fp], {-0}
    8bdc:	0100001f 	tsteq	r0, pc, lsl r0
    8be0:	a7250c31 			; <UNDEFINED> instruction: 0xa7250c31
    8be4:	c6000003 	strgt	r0, [r0], -r3
    8be8:	c0000083 	andgt	r0, r0, r3, lsl #1
    8bec:	18000083 	stmdane	r0, {r0, r1, r7}
    8bf0:	000022c2 	andeq	r2, r0, r2, asr #5
    8bf4:	110c3301 	tstne	ip, r1, lsl #6
    8bf8:	00000666 	andeq	r0, r0, r6, ror #12
    8bfc:	000083f3 	strdeq	r8, [r0], -r3
    8c00:	000083ef 	andeq	r8, r0, pc, ror #7
    8c04:	00068023 	andeq	r8, r6, r3, lsr #32
    8c08:	002a9300 	eoreq	r9, sl, r0, lsl #6
    8c0c:	00782e00 	rsbseq	r2, r8, r0, lsl #28
    8c10:	1c0c5801 	stcne	8, cr5, [ip], {1}
    8c14:	00000119 	andeq	r0, r0, r9, lsl r1
    8c18:	00008417 	andeq	r8, r0, r7, lsl r4
    8c1c:	00008411 	andeq	r8, r0, r1, lsl r4
    8c20:	06982300 	ldreq	r2, [r8], r0, lsl #6
    8c24:	2adf0000 	bcs	ff7c8c2c <__StackTop+0xc76c8c2c>
    8c28:	8a180000 	bhi	608c30 <__RAM_SIZE+0x508c30>
    8c2c:	0100001d 	tsteq	r0, sp, lsl r0
    8c30:	2f190c92 	svccs	0x00190c92
    8c34:	47000001 	strmi	r0, [r0, -r1]
    8c38:	41000084 	smlabbmi	r0, r4, r0, r0
    8c3c:	1d000084 	stcne	0, cr0, [r0, #-528]	; 0xfffffdf0
    8c40:	00000000 	andeq	r0, r0, r0
    8c44:	000037f2 	strdeq	r3, [r0], -r2
    8c48:	0000001d 	andeq	r0, r0, sp, lsl r0
    8c4c:	00149100 	andseq	r9, r4, r0, lsl #2
    8c50:	00001d00 	andeq	r1, r0, r0, lsl #26
    8c54:	38000000 	stmdacc	r0, {}	; <UNPREDICTABLE>
    8c58:	001d0000 	andseq	r0, sp, r0
    8c5c:	2a000000 	bcs	8c64 <__HEAP_SIZE+0x7c64>
    8c60:	1d000038 	stcne	0, cr0, [r0, #-224]	; 0xffffff20
    8c64:	00000000 	andeq	r0, r0, r0
    8c68:	00001c63 	andeq	r1, r0, r3, ror #24
    8c6c:	00001d00 	andeq	r1, r0, r0, lsl #26
    8c70:	37f20000 	ldrbcc	r0, [r2, r0]!
    8c74:	001e0000 	andseq	r0, lr, r0
    8c78:	d4000000 	strle	r0, [r0], #-0
    8c7c:	fc000037 	stc2	0, cr0, [r0], {55}	; 0x37
    8c80:	1f00002a 	svcne	0x0000002a
    8c84:	75025001 	strvc	r5, [r2, #-1]
    8c88:	001e0000 	andseq	r0, lr, r0
    8c8c:	d4000000 	strle	r0, [r0], #-0
    8c90:	10000037 	andne	r0, r0, r7, lsr r0
    8c94:	1f00002b 	svcne	0x0000002b
    8c98:	74025001 	strvc	r5, [r2], #-1
    8c9c:	001e0018 	andseq	r0, lr, r8, lsl r0
    8ca0:	9e000000 	cdpls	0, 0, cr0, cr0, cr0, {0}
    8ca4:	2d000038 	stccs	0, cr0, [r0, #-224]	; 0xffffff20
    8ca8:	1f00002b 	svcne	0x0000002b
    8cac:	03055001 	movweq	r5, #20481	; 0x5001
    8cb0:	38008b10 	stmdacc	r0, {r4, r8, r9, fp, pc}
    8cb4:	0251011f 	subseq	r0, r1, #-1073741817	; 0xc0000007
    8cb8:	1d000075 	stcne	0, cr0, [r0, #-468]	; 0xfffffe2c
    8cbc:	00000000 	andeq	r0, r0, r0
    8cc0:	00003800 	andeq	r3, r0, r0, lsl #16
    8cc4:	df012200 	svcle	0x00012200
    8cc8:	0100001c 	tsteq	r0, ip, lsl r0
    8ccc:	010a0acd 	smlabteq	sl, sp, sl, r0
	...
    8cd8:	00008474 	andeq	r8, r0, r4, ror r4
    8cdc:	002c2401 	eoreq	r2, ip, r1, lsl #8
    8ce0:	1d551b00 	vldrne	d17, [r5, #-0]
    8ce4:	cd010000 	stcgt	0, cr0, [r1, #-0]
    8ce8:	03a7290a 			; <UNDEFINED> instruction: 0x03a7290a
    8cec:	849a0000 	ldrhi	r0, [sl], #0
    8cf0:	84940000 	ldrhi	r0, [r4], #0
    8cf4:	2a1b0000 	bcs	6c8cfc <__RAM_SIZE+0x5c8cfc>
    8cf8:	0100001c 	tsteq	r0, ip, lsl r0
    8cfc:	2f280ace 	svccs	0x00280ace
    8d00:	cd000001 	stcgt	0, cr0, [r0, #-4]
    8d04:	c3000084 	movwgt	r0, #132	; 0x84
    8d08:	18000084 	stmdane	r0, {r2, r7}
    8d0c:	000022c2 	andeq	r2, r0, r2, asr #5
    8d10:	110ad001 	tstne	sl, r1
    8d14:	00000666 	andeq	r0, r0, r6, ror #12
    8d18:	00008512 	andeq	r8, r0, r2, lsl r5
    8d1c:	0000850e 	andeq	r8, r0, lr, lsl #10
    8d20:	0021a718 	eoreq	sl, r1, r8, lsl r7
    8d24:	0ad10100 	beq	ff44912c <__StackTop+0xc734912c>
    8d28:	00012f15 	andeq	r2, r1, r5, lsl pc
    8d2c:	00853600 	addeq	r3, r5, r0, lsl #12
    8d30:	00853000 	addeq	r3, r5, r0
    8d34:	21141800 	tstcs	r4, r0, lsl #16
    8d38:	d1010000 	mrsle	r0, (UNDEF: 1)
    8d3c:	012f2c0a 			; <UNDEFINED> instruction: 0x012f2c0a
    8d40:	85610000 	strbhi	r0, [r1, #-0]!
    8d44:	855f0000 	ldrbhi	r0, [pc, #-0]	; 8d4c <__HEAP_SIZE+0x7d4c>
    8d48:	5f180000 	svcpl	0x00180000
    8d4c:	0100000c 	tsteq	r0, ip
    8d50:	19140ad2 	ldmdbne	r4, {r1, r4, r6, r7, r9, fp}
    8d54:	7c000001 	stcvc	0, cr0, [r0], {1}
    8d58:	74000085 	strvc	r0, [r0], #-133	; 0xffffff7b
    8d5c:	1c000085 	stcne	0, cr0, [r0], {133}	; 0x85
	...
    8d68:	00002bf4 	strdeq	r2, [r0], -r4
    8d6c:	0009db18 	andeq	sp, r9, r8, lsl fp
    8d70:	0b6c0100 	bleq	1b09178 <__RAM_SIZE+0x1a09178>
    8d74:	00039115 	andeq	r9, r3, r5, lsl r1
    8d78:	0085b400 	addeq	fp, r5, r0, lsl #8
    8d7c:	0085b200 	addeq	fp, r5, r0, lsl #4
    8d80:	001d0000 	andseq	r0, sp, r0
    8d84:	f2000000 	vhadd.s8	d0, d0, d0
    8d88:	1d000037 	stcne	0, cr0, [r0, #-220]	; 0xffffff24
    8d8c:	00000000 	andeq	r0, r0, r0
    8d90:	00003800 	andeq	r3, r0, r0, lsl #16
    8d94:	0000001e 	andeq	r0, r0, lr, lsl r0
    8d98:	0037d400 	eorseq	sp, r7, r0, lsl #8
    8d9c:	002c1a00 	eoreq	r1, ip, r0, lsl #20
    8da0:	50011f00 	andpl	r1, r1, r0, lsl #30
    8da4:	00007502 	andeq	r7, r0, r2, lsl #10
    8da8:	0000001d 	andeq	r0, r0, sp, lsl r0
    8dac:	00382a00 	eorseq	r2, r8, r0, lsl #20
    8db0:	01210000 			; <UNDEFINED> instruction: 0x01210000
    8db4:	00001cf0 	strdeq	r1, [r0], -r0
    8db8:	110a9d01 	tstne	sl, r1, lsl #26
    8dbc:	00012f01 	andeq	r2, r1, r1, lsl #30
	...
    8dc8:	0085c700 	addeq	ip, r5, r0, lsl #14
    8dcc:	2cab0100 	stfcss	f0, [fp]
    8dd0:	551b0000 	ldrpl	r0, [fp, #-0]
    8dd4:	0100001d 	tsteq	r0, sp, lsl r0
    8dd8:	b3420a9d 	movtlt	r0, #10909	; 0x2a9d
    8ddc:	ed000003 	stc	0, cr0, [r0, #-12]
    8de0:	e7000085 	str	r0, [r0, -r5, lsl #1]
    8de4:	18000085 	stmdane	r0, {r0, r2, r7}
    8de8:	000022c2 	andeq	r2, r0, r2, asr #5
    8dec:	170a9f01 	strne	r9, [sl, -r1, lsl #30]
    8df0:	00002a25 	andeq	r2, r0, r5, lsr #20
    8df4:	00008618 	andeq	r8, r0, r8, lsl r6
    8df8:	00008616 	andeq	r8, r0, r6, lsl r6
    8dfc:	000c0518 	andeq	r0, ip, r8, lsl r5
    8e00:	0aa00100 	beq	fe809208 <__StackTop+0xc6709208>
    8e04:	00012f15 	andeq	r2, r1, r5, lsl pc
    8e08:	00862d00 	addeq	r2, r6, r0, lsl #26
    8e0c:	00862b00 	addeq	r2, r6, r0, lsl #22
    8e10:	0c261800 	stceq	8, cr1, [r6], #-0
    8e14:	a1010000 	mrsge	r0, (UNDEF: 1)
    8e18:	012f150a 			; <UNDEFINED> instruction: 0x012f150a
    8e1c:	86440000 	strbhi	r0, [r4], -r0
    8e20:	86400000 	strbhi	r0, [r0], -r0
    8e24:	001d0000 	andseq	r0, sp, r0
    8e28:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
    8e2c:	1d000038 	stcne	0, cr0, [r0, #-224]	; 0xffffff20
    8e30:	00000000 	andeq	r0, r0, r0
    8e34:	0000381c 	andeq	r3, r0, ip, lsl r8
    8e38:	36012100 	strcc	r2, [r1], -r0, lsl #2
    8e3c:	01000022 	tsteq	r0, r2, lsr #32
    8e40:	01110a83 	tsteq	r1, r3, lsl #21
    8e44:	0000012f 	andeq	r0, r0, pc, lsr #2
	...
    8e50:	00008662 	andeq	r8, r0, r2, ror #12
    8e54:	002d1d01 	eoreq	r1, sp, r1, lsl #26
    8e58:	1d551b00 	vldrne	d17, [r5, #-0]
    8e5c:	83010000 	movwhi	r0, #4096	; 0x1000
    8e60:	03b33b0a 			; <UNDEFINED> instruction: 0x03b33b0a
    8e64:	86880000 	strhi	r0, [r8], r0
    8e68:	86820000 	strhi	r0, [r2], r0
    8e6c:	c2180000 	andsgt	r0, r8, #0
    8e70:	01000022 	tsteq	r0, r2, lsr #32
    8e74:	25170a85 	ldrcs	r0, [r7, #-2693]	; 0xfffff57b
    8e78:	b300002a 	movwlt	r0, #42	; 0x2a
    8e7c:	b1000086 	smlabblt	r0, r6, r0, r0
    8e80:	18000086 	stmdane	r0, {r1, r2, r7}
    8e84:	00000c05 	andeq	r0, r0, r5, lsl #24
    8e88:	150a8601 	strne	r8, [sl, #-1537]	; 0xfffff9ff
    8e8c:	0000012f 	andeq	r0, r0, pc, lsr #2
    8e90:	000086c8 	andeq	r8, r0, r8, asr #13
    8e94:	000086c6 	andeq	r8, r0, r6, asr #13
    8e98:	0000001d 	andeq	r0, r0, sp, lsl r0
    8e9c:	0037f200 	eorseq	pc, r7, r0, lsl #4
    8ea0:	00001d00 	andeq	r1, r0, r0, lsl #26
    8ea4:	38000000 	stmdacc	r0, {}	; <UNPREDICTABLE>
    8ea8:	21000000 	mrscs	r0, (UNDEF: 0)
    8eac:	001c6e01 	andseq	r6, ip, r1, lsl #28
    8eb0:	0a530100 	beq	14c92b8 <__RAM_SIZE+0x13c92b8>
    8eb4:	012f0111 			; <UNDEFINED> instruction: 0x012f0111
	...
    8ec0:	86db0000 	ldrbhi	r0, [fp], r0
    8ec4:	a4010000 	strge	r0, [r1], #-0
    8ec8:	1b00002d 	blne	8f84 <__HEAP_SIZE+0x7f84>
    8ecc:	00001d55 	andeq	r1, r0, r5, asr sp
    8ed0:	3e0a5301 	cdpcc	3, 0, cr5, cr10, cr1, {0}
    8ed4:	000003b3 			; <UNDEFINED> instruction: 0x000003b3
    8ed8:	00008701 	andeq	r8, r0, r1, lsl #14
    8edc:	000086fb 	strdeq	r8, [r0], -fp
    8ee0:	0022c218 	eoreq	ip, r2, r8, lsl r2
    8ee4:	0a550100 	beq	15492ec <__RAM_SIZE+0x14492ec>
    8ee8:	002a2517 	eoreq	r2, sl, r7, lsl r5
    8eec:	00872c00 	addeq	r2, r7, r0, lsl #24
    8ef0:	00872a00 	addeq	r2, r7, r0, lsl #20
    8ef4:	0c051800 	stceq	8, cr1, [r5], {-0}
    8ef8:	56010000 	strpl	r0, [r1], -r0
    8efc:	012f150a 			; <UNDEFINED> instruction: 0x012f150a
    8f00:	87410000 	strbhi	r0, [r1, -r0]
    8f04:	873f0000 	ldrhi	r0, [pc, -r0]!
    8f08:	26180000 	ldrcs	r0, [r8], -r0
    8f0c:	0100000c 	tsteq	r0, ip
    8f10:	2f150a57 	svccs	0x00150a57
    8f14:	58000001 	stmdapl	r0, {r0}
    8f18:	54000087 	strpl	r0, [r0], #-135	; 0xffffff79
    8f1c:	1d000087 	stcne	0, cr0, [r0, #-540]	; 0xfffffde4
    8f20:	00000000 	andeq	r0, r0, r0
    8f24:	0000380e 	andeq	r3, r0, lr, lsl #16
    8f28:	0000001d 	andeq	r0, r0, sp, lsl r0
    8f2c:	00381c00 	eorseq	r1, r8, r0, lsl #24
    8f30:	01210000 			; <UNDEFINED> instruction: 0x01210000
    8f34:	00001965 	andeq	r1, r0, r5, ror #18
    8f38:	110a3901 	tstne	sl, r1, lsl #18
    8f3c:	00012f01 	andeq	r2, r1, r1, lsl #30
	...
    8f48:	00877600 	addeq	r7, r7, r0, lsl #12
    8f4c:	2e160100 	mufcss	f0, f6, f0
    8f50:	551b0000 	ldrpl	r0, [fp, #-0]
    8f54:	0100001d 	tsteq	r0, sp, lsl r0
    8f58:	b3370a39 	teqlt	r7, #233472	; 0x39000
    8f5c:	9c000003 	stcls	0, cr0, [r0], {3}
    8f60:	96000087 	strls	r0, [r0], -r7, lsl #1
    8f64:	18000087 	stmdane	r0, {r0, r1, r2, r7}
    8f68:	000022c2 	andeq	r2, r0, r2, asr #5
    8f6c:	170a3b01 	strne	r3, [sl, -r1, lsl #22]
    8f70:	00002a25 	andeq	r2, r0, r5, lsr #20
    8f74:	000087c7 	andeq	r8, r0, r7, asr #15
    8f78:	000087c5 	andeq	r8, r0, r5, asr #15
    8f7c:	000c0518 	andeq	r0, ip, r8, lsl r5
    8f80:	0a3c0100 	beq	f09388 <__RAM_SIZE+0xe09388>
    8f84:	00012f15 	andeq	r2, r1, r5, lsl pc
    8f88:	0087dc00 	addeq	sp, r7, r0, lsl #24
    8f8c:	0087da00 	addeq	sp, r7, r0, lsl #20
    8f90:	00001d00 	andeq	r1, r0, r0, lsl #26
    8f94:	37f20000 	ldrbcc	r0, [r2, r0]!
    8f98:	001d0000 	andseq	r0, sp, r0
    8f9c:	00000000 	andeq	r0, r0, r0
    8fa0:	00000038 	andeq	r0, r0, r8, lsr r0
    8fa4:	1b160121 	blne	589430 <__RAM_SIZE+0x489430>
    8fa8:	b5010000 	strlt	r0, [r1, #-0]
    8fac:	f2011009 	vhadd.s8	d1, d1, d9
    8fb0:	00000004 	andeq	r0, r0, r4
    8fb4:	00000000 	andeq	r0, r0, r0
    8fb8:	ef000000 	svc	0x00000000
    8fbc:	01000087 	smlabbeq	r0, r7, r0, r0
    8fc0:	00002ef9 	strdeq	r2, [r0], -r9
    8fc4:	001d551b 	andseq	r5, sp, fp, lsl r5
    8fc8:	09b50100 	ldmibeq	r5!, {r8}
    8fcc:	0003a72c 	andeq	sl, r3, ip, lsr #14
    8fd0:	00883100 	addeq	r3, r8, r0, lsl #2
    8fd4:	00882700 	addeq	r2, r8, r0, lsl #14
    8fd8:	16c31800 	strbne	r1, [r3], r0, lsl #16
    8fdc:	b7010000 	strlt	r0, [r1, -r0]
    8fe0:	04f21409 	ldrbteq	r1, [r2], #1033	; 0x409
    8fe4:	88770000 	ldmdahi	r7!, {}^	; <UNPREDICTABLE>
    8fe8:	88730000 	ldmdahi	r3!, {}^	; <UNPREDICTABLE>
    8fec:	a7180000 	ldrge	r0, [r8, -r0]
    8ff0:	01000014 	tsteq	r0, r4, lsl r0
    8ff4:	ca1809b8 	bgt	60b6dc <__RAM_SIZE+0x50b6dc>
    8ff8:	9900001a 	stmdbls	r0, {r1, r3, r4}
    8ffc:	95000088 	strls	r0, [r0, #-136]	; 0xffffff78
    9000:	18000088 	stmdane	r0, {r3, r7}
    9004:	00001541 	andeq	r1, r0, r1, asr #10
    9008:	1809b901 	stmdane	r9, {r0, r8, fp, ip, sp, pc}
    900c:	00001aca 	andeq	r1, r0, sl, asr #21
    9010:	000088bb 			; <UNDEFINED> instruction: 0x000088bb
    9014:	000088b7 			; <UNDEFINED> instruction: 0x000088b7
    9018:	00153318 	andseq	r3, r5, r8, lsl r3
    901c:	09ba0100 	ldmibeq	sl!, {r8}
    9020:	001aca18 	andseq	ip, sl, r8, lsl sl
    9024:	0088dd00 	addeq	sp, r8, r0, lsl #26
    9028:	0088d900 	addeq	sp, r8, r0, lsl #18
    902c:	167a1800 	ldrbtne	r1, [sl], -r0, lsl #16
    9030:	bb010000 	bllt	49038 <__HEAP_SIZE+0x48038>
    9034:	1aca1809 	bne	ff28f060 <__StackTop+0xc718f060>
    9038:	88ff0000 	ldmhi	pc!, {}^	; <UNPREDICTABLE>
    903c:	88fb0000 	ldmhi	fp!, {}^	; <UNPREDICTABLE>
    9040:	c2180000 	andsgt	r0, r8, #0
    9044:	01000022 	tsteq	r0, r2, lsr #32
    9048:	2b1d09bc 	blcs	74b740 <__RAM_SIZE+0x64b740>
    904c:	2700002a 	strcs	r0, [r0, -sl, lsr #32]
    9050:	1d000089 	stcne	0, cr0, [r0, #-548]	; 0xfffffddc
    9054:	23000089 	movwcs	r0, #137	; 0x89
    9058:	00000510 	andeq	r0, r0, r0, lsl r5
    905c:	00002ee6 	andeq	r2, r0, r6, ror #29
    9060:	0100782e 	tsteq	r0, lr, lsr #16
    9064:	192809ec 	stmdbne	r8!, {r2, r3, r5, r6, r7, r8, fp}
    9068:	6f000001 	svcvs	0x00000001
    906c:	69000089 	stmdbvs	r0, {r0, r3, r7}
    9070:	00000089 	andeq	r0, r0, r9, lsl #1
    9074:	0000001d 	andeq	r0, r0, sp, lsl r0
    9078:	0037f200 	eorseq	pc, r7, r0, lsl #4
    907c:	00001d00 	andeq	r1, r0, r0, lsl #26
    9080:	38000000 	stmdacc	r0, {}	; <UNPREDICTABLE>
    9084:	22000000 	andcs	r0, r0, #0
    9088:	00005301 	andeq	r5, r0, r1, lsl #6
    908c:	09830100 	stmibeq	r3, {r8}
    9090:	29ac010a 	stmibcs	ip!, {r1, r3, r8}
    9094:	29ca1000 	stmibcs	sl, {ip}^
    9098:	89981000 	ldmibhi	r8, {ip}
    909c:	74010000 	strvc	r0, [r1], #-0
    90a0:	1b00002f 	blne	9164 <__HEAP_SIZE+0x8164>
    90a4:	00002061 	andeq	r2, r0, r1, rrx
    90a8:	27098301 	strcs	r8, [r9, -r1, lsl #6]
    90ac:	0000015b 	andeq	r0, r0, fp, asr r1
    90b0:	000089be 			; <UNDEFINED> instruction: 0x000089be
    90b4:	000089b8 			; <UNDEFINED> instruction: 0x000089b8
    90b8:	00215318 	eoreq	r5, r1, r8, lsl r3
    90bc:	09850100 	stmibeq	r5, {r8}
    90c0:	00011914 	andeq	r1, r1, r4, lsl r9
    90c4:	0089ee00 	addeq	lr, r9, r0, lsl #28
    90c8:	0089ea00 	addeq	lr, r9, r0, lsl #20
    90cc:	29b61d00 	ldmibcs	r6!, {r8, sl, fp, ip}
    90d0:	26281000 	strtcs	r1, [r8], -r0
    90d4:	be1e0000 	cdplt	0, 1, cr0, cr14, cr0, {0}
    90d8:	86100029 	ldrhi	r0, [r0], -r9, lsr #32
    90dc:	61000009 	tstvs	r0, r9
    90e0:	1f00002f 	svcne	0x0000002f
    90e4:	74025001 	strvc	r5, [r2], #-1
    90e8:	51011f00 	tstpl	r1, r0, lsl #30
    90ec:	1d003001 	stcne	0, cr3, [r0, #-4]
    90f0:	100029c2 	andne	r2, r0, r2, asr #19
    90f4:	000024cf 	andeq	r2, r0, pc, asr #9
    90f8:	0029c81d 	eoreq	ip, r9, sp, lsl r8
    90fc:	00382a10 	eorseq	r2, r8, r0, lsl sl
    9100:	01210000 			; <UNDEFINED> instruction: 0x01210000
    9104:	000014c8 	andeq	r1, r0, r8, asr #9
    9108:	10092701 	andne	r2, r9, r1, lsl #14
    910c:	00011901 	andeq	r1, r1, r1, lsl #18
	...
    9118:	008a0d00 	addeq	r0, sl, r0, lsl #26
    911c:	30470100 	subcc	r0, r7, r0, lsl #2
    9120:	401b0000 	andsmi	r0, fp, r0
    9124:	0100001f 	tsteq	r0, pc, lsl r0
    9128:	a3340927 	teqge	r4, #638976	; 0x9c000
    912c:	31000018 	tstcc	r0, r8, lsl r0
    9130:	2d00008a 	stccs	0, cr0, [r0, #-552]	; 0xfffffdd8
    9134:	1b00008a 	blne	9364 <__HEAP_SIZE+0x8364>
    9138:	00002263 	andeq	r2, r0, r3, ror #4
    913c:	32092801 	andcc	r2, r9, #65536	; 0x10000
    9140:	0000015b 	andeq	r0, r0, fp, asr r1
    9144:	00008a55 	andeq	r8, r0, r5, asr sl
    9148:	00008a4f 	andeq	r8, r0, pc, asr #20
    914c:	00228918 	eoreq	r8, r2, r8, lsl r9
    9150:	092a0100 	stmdbeq	sl!, {r8}
    9154:	00014a14 	andeq	r4, r1, r4, lsl sl
    9158:	008a8f00 	addeq	r8, sl, r0, lsl #30
    915c:	008a8100 	addeq	r8, sl, r0, lsl #2
    9160:	21531800 	cmpcs	r3, r0, lsl #16
    9164:	2b010000 	blcs	4916c <__HEAP_SIZE+0x4816c>
    9168:	01191409 	tsteq	r9, r9, lsl #8
    916c:	8aeb0000 	bhi	ffac9174 <__StackTop+0xc79c9174>
    9170:	8ae70000 	bhi	ff9c9178 <__StackTop+0xc78c9178>
    9174:	82180000 	andshi	r0, r8, #0
    9178:	0100001a 	tsteq	r0, sl, lsl r0
    917c:	1925092b 	stmdbne	r5!, {r0, r1, r3, r5, r8, fp}
    9180:	13000001 	movwne	r0, #1
    9184:	0900008b 	stmdbeq	r0, {r0, r1, r3, r7}
    9188:	2300008b 	movwcs	r0, #139	; 0x8b
    918c:	00000610 	andeq	r0, r0, r0, lsl r6
    9190:	0000302b 	andeq	r3, r0, fp, lsr #32
    9194:	00197718 	andseq	r7, r9, r8, lsl r7
    9198:	09360100 	ldmdbeq	r6!, {r8}
    919c:	00015b1e 	andeq	r5, r1, lr, lsl fp
    91a0:	008b5b00 	addeq	r5, fp, r0, lsl #22
    91a4:	008b5700 	addeq	r5, fp, r0, lsl #14
    91a8:	00002000 	andeq	r2, r0, r0
    91ac:	09860000 	stmibeq	r6, {}	; <UNPREDICTABLE>
    91b0:	011f0000 	tsteq	pc, r0
    91b4:	00300151 	eorseq	r0, r0, r1, asr r1
    91b8:	00001d00 	andeq	r1, r0, r0, lsl #26
    91bc:	26280000 	strtcs	r0, [r8], -r0
    91c0:	001d0000 	andseq	r0, sp, r0
    91c4:	cf000000 	svcgt	0x00000000
    91c8:	1d000024 	stcne	0, cr0, [r0, #-144]	; 0xffffff70
    91cc:	00000000 	andeq	r0, r0, r0
    91d0:	0000382a 	andeq	r3, r0, sl, lsr #16
    91d4:	9e012200 	cdpls	2, 0, cr2, cr1, cr0, {0}
    91d8:	0100001d 	tsteq	r0, sp, lsl r0
    91dc:	010a088f 	smlabbeq	sl, pc, r8, r0	; <UNPREDICTABLE>
	...
    91e8:	00008b79 	andeq	r8, r0, r9, ror fp
    91ec:	00313e01 	eorseq	r3, r1, r1, lsl #28
    91f0:	1ef61b00 	vmovne.f64	d17, #96	; 0x3f000000  0.5
    91f4:	8f010000 	svchi	0x00010000
    91f8:	03a72408 			; <UNDEFINED> instruction: 0x03a72408
    91fc:	8b9f0000 	blhi	fe7c9204 <__StackTop+0xc66c9204>
    9200:	8b990000 	blhi	fe649208 <__StackTop+0xc6549208>
    9204:	c2180000 	andsgt	r0, r8, #0
    9208:	01000022 	tsteq	r0, r2, lsr #32
    920c:	66110891 			; <UNDEFINED> instruction: 0x66110891
    9210:	cc000006 	stcgt	0, cr0, [r0], {6}
    9214:	c800008b 	stmdagt	r0, {r0, r1, r3, r7}
    9218:	1800008b 	stmdane	r0, {r0, r1, r3, r7}
    921c:	00001596 	muleq	r0, r6, r5
    9220:	14089201 	strne	r9, [r8], #-513	; 0xfffffdff
    9224:	00000119 	andeq	r0, r0, r9, lsl r1
    9228:	00008bf0 	strdeq	r8, [r0], -r0
    922c:	00008bea 	andeq	r8, r0, sl, ror #23
    9230:	0023f118 	eoreq	pc, r3, r8, lsl r1	; <UNPREDICTABLE>
    9234:	08930100 	ldmeq	r3, {r8}
    9238:	00011914 	andeq	r1, r1, r4, lsl r9
    923c:	008c2000 	addeq	r2, ip, r0
    9240:	008c1c00 	addeq	r1, ip, r0, lsl #24
    9244:	00001d00 	andeq	r1, r0, r0, lsl #26
    9248:	37f20000 	ldrbcc	r0, [r2, r0]!
    924c:	001e0000 	andseq	r0, lr, r0
    9250:	d4000000 	strle	r0, [r0], #-0
    9254:	d4000037 	strle	r0, [r0], #-55	; 0xffffffc9
    9258:	1f000030 	svcne	0x00000030
    925c:	75025001 	strvc	r5, [r2, #-1]
    9260:	001e0000 	andseq	r0, lr, r0
    9264:	d4000000 	strle	r0, [r0], #-0
    9268:	e8000037 	stmda	r0, {r0, r1, r2, r4, r5}
    926c:	1f000030 	svcne	0x00000030
    9270:	74025001 	strvc	r5, [r2], #-1
    9274:	001d0018 	andseq	r0, sp, r8, lsl r0
    9278:	91000000 	mrsls	r0, (UNDEF: 0)
    927c:	1d000014 	stcne	0, cr0, [r0, #-80]	; 0xffffffb0
    9280:	00000000 	andeq	r0, r0, r0
    9284:	00003800 	andeq	r3, r0, r0, lsl #16
    9288:	0000001e 	andeq	r0, r0, lr, lsl r0
    928c:	0014a700 	andseq	sl, r4, r0, lsl #14
    9290:	00310e00 	eorseq	r0, r1, r0, lsl #28
    9294:	50011f00 	andpl	r1, r1, r0, lsl #30
    9298:	00007402 	andeq	r7, r0, r2, lsl #8
    929c:	0000001e 	andeq	r0, r0, lr, lsl r0
    92a0:	00389e00 	eorseq	r9, r8, r0, lsl #28
    92a4:	00312b00 	eorseq	r2, r1, r0, lsl #22
    92a8:	50011f00 	andpl	r1, r1, r0, lsl #30
    92ac:	8b2c0305 	blhi	b09ec8 <__RAM_SIZE+0xa09ec8>
    92b0:	011f3800 	tsteq	pc, r0, lsl #16
    92b4:	00750251 	rsbseq	r0, r5, r1, asr r2
    92b8:	00001d00 	andeq	r1, r0, r0, lsl #26
    92bc:	38000000 	stmdacc	r0, {}	; <UNPREDICTABLE>
    92c0:	001d0000 	andseq	r0, sp, r0
    92c4:	2a000000 	bcs	92cc <__HEAP_SIZE+0x82cc>
    92c8:	00000038 	andeq	r0, r0, r8, lsr r0
    92cc:	001ad41a 	andseq	sp, sl, sl, lsl r4
    92d0:	07e30100 	strbeq	r0, [r3, r0, lsl #2]!
    92d4:	24340111 	ldrtcs	r0, [r4], #-273	; 0xfffffeef
    92d8:	24f01000 	ldrbtcs	r1, [r0], #0
    92dc:	8c3e1000 	ldchi	0, cr1, [lr], #-0
    92e0:	b6010000 	strlt	r0, [r1], -r0
    92e4:	1b000031 	blne	93b0 <__HEAP_SIZE+0x83b0>
    92e8:	00001b34 	andeq	r1, r0, r4, lsr fp
    92ec:	3307e301 	movwcc	lr, #29441	; 0x7301
    92f0:	00000666 	andeq	r0, r0, r6, ror #12
    92f4:	00008c62 	andeq	r8, r0, r2, ror #24
    92f8:	00008c5e 	andeq	r8, r0, lr, asr ip
    92fc:	0024821c 	eoreq	r8, r4, ip, lsl r2
    9300:	0024b410 	eoreq	fp, r4, r0, lsl r4
    9304:	00319110 	eorseq	r9, r1, r0, lsl r1
    9308:	09db1800 	ldmibeq	fp, {fp, ip}^
    930c:	1d010000 	stcne	0, cr0, [r1, #-0]
    9310:	03910d08 	orrseq	r0, r1, #8, 26	; 0x200
    9314:	8c820000 	stchi	0, cr0, [r2], {0}
    9318:	8c800000 	stchi	0, cr0, [r0], {0}
    931c:	1d000000 	stcne	0, cr0, [r0, #-0]
    9320:	1000243c 	andne	r2, r0, ip, lsr r4
    9324:	000037f2 	strdeq	r3, [r0], -r2
    9328:	0024b81d 	eoreq	fp, r4, sp, lsl r8
    932c:	00380010 	eorseq	r0, r8, r0, lsl r0
    9330:	24d01d00 	ldrbcs	r1, [r0], #3328	; 0xd00
    9334:	16381000 	ldrtne	r1, [r8], -r0
    9338:	d61d0000 	ldrle	r0, [sp], -r0
    933c:	2a100024 	bcs	4093d4 <__RAM_SIZE+0x3093d4>
    9340:	00000038 	andeq	r0, r0, r8, lsr r0
    9344:	001e6f1a 	andseq	r6, lr, sl, lsl pc
    9348:	07010100 	streq	r0, [r1, -r0, lsl #2]
    934c:	22e4010d 	rsccs	r0, r4, #1073741827	; 0x40000003
    9350:	237a1000 	cmncs	sl, #0
    9354:	8c951000 	ldchi	0, cr1, [r5], {0}
    9358:	f3010000 	vhadd.u8	d0, d1, d0
    935c:	1b000032 	blne	942c <__HEAP_SIZE+0x842c>
    9360:	000022f6 	strdeq	r2, [r0], -r6
    9364:	32070101 	andcc	r0, r7, #1073741824	; 0x40000000
    9368:	000000ea 	andeq	r0, r0, sl, ror #1
    936c:	00008cb9 			; <UNDEFINED> instruction: 0x00008cb9
    9370:	00008cb5 			; <UNDEFINED> instruction: 0x00008cb5
    9374:	00199a1b 	andseq	r9, r9, fp, lsl sl
    9378:	07020100 	streq	r0, [r2, -r0, lsl #2]
    937c:	0000be36 	andeq	fp, r0, r6, lsr lr
    9380:	008cdb00 	addeq	sp, ip, r0, lsl #22
    9384:	008cd700 	addeq	sp, ip, r0, lsl #14
    9388:	18fe1b00 	ldmne	lr!, {r8, r9, fp, ip}^
    938c:	03010000 	movweq	r0, #4096	; 0x1000
    9390:	00354007 	eorseq	r4, r5, r7
    9394:	8d010000 	stchi	0, cr0, [r1, #-0]
    9398:	8cf90000 	ldclhi	0, cr0, [r9]
    939c:	841b0000 	ldrhi	r0, [fp], #-0
    93a0:	0100001e 	tsteq	r0, lr, lsl r0
    93a4:	a1300704 	teqge	r0, r4, lsl #14
    93a8:	42000000 	andmi	r0, r0, #0
    93ac:	3e00008d 	cdpcc	0, 0, cr0, cr0, cr13, {4}
    93b0:	1b00008d 	blne	95ec <__HEAP_SIZE+0x85ec>
    93b4:	00001472 	andeq	r1, r0, r2, ror r4
    93b8:	2f070501 	svccs	0x00070501
    93bc:	0000012f 	andeq	r0, r0, pc, lsr #2
    93c0:	00008d64 	andeq	r8, r0, r4, ror #26
    93c4:	00008d60 	andeq	r8, r0, r0, ror #26
    93c8:	0023a419 	eoreq	sl, r3, r9, lsl r4
    93cc:	07060100 	streq	r0, [r6, -r0, lsl #2]
    93d0:	0032f938 	eorseq	pc, r2, r8, lsr r9	; <UNPREDICTABLE>
    93d4:	04910200 	ldreq	r0, [r1], #512	; 0x200
    93d8:	001b3419 	andseq	r3, fp, r9, lsl r4
    93dc:	07070100 	streq	r0, [r7, -r0, lsl #2]
    93e0:	0006662b 	andeq	r6, r6, fp, lsr #12
    93e4:	08910200 	ldmeq	r1, {r9}
    93e8:	0021cd19 	eoreq	ip, r1, r9, lsl sp
    93ec:	07080100 	streq	r0, [r8, -r0, lsl #2]
    93f0:	00330440 	eorseq	r0, r3, r0, asr #8
    93f4:	0c910200 	lfmeq	f0, 4, [r1], {0}
    93f8:	00231618 	eoreq	r1, r3, r8, lsl r6
    93fc:	070a0100 	streq	r0, [sl, -r0, lsl #2]
    9400:	0005bb13 	andeq	fp, r5, r3, lsl fp
    9404:	008d8500 	addeq	r8, sp, r0, lsl #10
    9408:	008d8300 	addeq	r8, sp, r0, lsl #6
    940c:	00782e00 	rsbseq	r2, r8, r0, lsl #28
    9410:	11070b01 	tstne	r7, r1, lsl #22
    9414:	0000012f 	andeq	r0, r0, pc, lsr #2
    9418:	00008d9a 	muleq	r0, sl, sp
    941c:	00008d98 	muleq	r0, r8, sp
    9420:	0023021e 	eoreq	r0, r3, lr, lsl r2
    9424:	0038ad10 	eorseq	sl, r8, r0, lsl sp
    9428:	0032ae00 	eorseq	sl, r2, r0, lsl #28
    942c:	51011f00 	tstpl	r1, r0, lsl #30
    9430:	1fa50802 	svcne	0x00a50802
    9434:	77045201 	strvc	r5, [r4, -r1, lsl #4]
    9438:	00243200 	eoreq	r3, r4, r0, lsl #4
    943c:	00234c1e 	eoreq	r4, r3, lr, lsl ip
    9440:	0038bb10 	eorseq	fp, r8, r0, lsl fp
    9444:	0032c200 	eorseq	ip, r2, r0, lsl #4
    9448:	50011f00 	andpl	r1, r1, r0, lsl #30
    944c:	00047402 	andeq	r7, r4, r2, lsl #8
    9450:	0023541e 	eoreq	r5, r3, lr, lsl r4
    9454:	0038bb10 	eorseq	fp, r8, r0, lsl fp
    9458:	0032d600 	eorseq	sp, r2, r0, lsl #12
    945c:	50011f00 	andpl	r1, r1, r0, lsl #30
    9460:	00187402 	andseq	r7, r8, r2, lsl #8
    9464:	00236a20 	eoreq	r6, r3, r0, lsr #20
    9468:	0038ca10 	eorseq	ip, r8, r0, lsl sl
    946c:	50011f00 	andpl	r1, r1, r0, lsl #30
    9470:	1f007702 	svcne	0x00007702
    9474:	78025201 	stmdavc	r2, {r0, r9, ip, lr}
    9478:	53011f00 	movwpl	r1, #7936	; 0x1f00
    947c:	00007902 	andeq	r7, r0, r2, lsl #18
    9480:	a7040700 	strge	r0, [r4, -r0, lsl #14]
    9484:	03000003 	movweq	r0, #3
    9488:	000032f3 	strdeq	r3, [r0], -r3	; <UNPREDICTABLE>
    948c:	05b60407 	ldreq	r0, [r6, #1031]!	; 0x407
    9490:	fe030000 	cdp2	0, 0, cr0, cr3, cr0, {0}
    9494:	21000032 	tstcs	r0, r2, lsr r0
    9498:	00036001 	andeq	r6, r3, r1
    949c:	06b60100 	ldrteq	r0, [r6], r0, lsl #2
    94a0:	01190110 	tsteq	r9, r0, lsl r1
    94a4:	26940000 	ldrcs	r0, [r4], r0
    94a8:	26b61000 	ldrtcs	r1, [r6], r0
    94ac:	8dad1000 	stchi	0, cr1, [sp]
    94b0:	14010000 	strne	r0, [r1], #-0
    94b4:	1b000034 	blne	958c <__HEAP_SIZE+0x858c>
    94b8:	000022f6 	strdeq	r2, [r0], -r6
    94bc:	2c06b601 	stccs	6, cr11, [r6], {1}
    94c0:	000000ea 	andeq	r0, r0, sl, ror #1
    94c4:	00008df5 	strdeq	r8, [r0], -r5
    94c8:	00008df1 	strdeq	r8, [r0], -r1
    94cc:	00199a1b 	andseq	r9, r9, fp, lsl sl
    94d0:	06b70100 	ldrteq	r0, [r7], r0, lsl #2
    94d4:	0000be30 	andeq	fp, r0, r0, lsr lr
    94d8:	008e1a00 	addeq	r1, lr, r0, lsl #20
    94dc:	008e1600 	addeq	r1, lr, r0, lsl #12
    94e0:	18fe1b00 	ldmne	lr!, {r8, r9, fp, ip}^
    94e4:	b8010000 	stmdalt	r1, {}	; <UNPREDICTABLE>
    94e8:	00353a06 	eorseq	r3, r5, r6, lsl #20
    94ec:	8e3f0000 	cdphi	0, 3, cr0, cr15, cr0, {0}
    94f0:	8e3b0000 	cdphi	0, 3, cr0, cr11, cr0, {0}
    94f4:	841b0000 	ldrhi	r0, [fp], #-0
    94f8:	0100001e 	tsteq	r0, lr, lsl r0
    94fc:	a12a06b9 			; <UNDEFINED> instruction: 0xa12a06b9
    9500:	64000000 	strvs	r0, [r0], #-0
    9504:	6000008e 	andvs	r0, r0, lr, lsl #1
    9508:	1b00008e 	blne	9748 <__HEAP_SIZE+0x8748>
    950c:	00001472 	andeq	r1, r0, r2, ror r4
    9510:	2906ba01 	stmdbcs	r6, {r0, r9, fp, ip, sp, pc}
    9514:	0000012f 	andeq	r0, r0, pc, lsr #2
    9518:	00008e89 	andeq	r8, r0, r9, lsl #29
    951c:	00008e85 	andeq	r8, r0, r5, lsl #29
    9520:	0023a41b 	eoreq	sl, r3, fp, lsl r4
    9524:	06bb0100 	ldrteq	r0, [fp], r0, lsl #2
    9528:	0032f932 	eorseq	pc, r2, r2, lsr r9	; <UNPREDICTABLE>
    952c:	008ead00 	addeq	sl, lr, r0, lsl #26
    9530:	008ea900 	addeq	sl, lr, r0, lsl #18
    9534:	1b341800 	blne	d0f53c <__RAM_SIZE+0xc0f53c>
    9538:	bd010000 	stclt	0, cr0, [r1, #-0]
    953c:	06661106 	strbteq	r1, [r6], -r6, lsl #2
    9540:	8ed10000 	cdphi	0, 13, cr0, cr1, cr0, {0}
    9544:	8ecd0000 	cdphi	0, 12, cr0, cr13, cr0, {0}
    9548:	19180000 	ldmdbne	r8, {}	; <UNPREDICTABLE>
    954c:	0100001a 	tsteq	r0, sl, lsl r0
    9550:	191406be 	ldmdbne	r4, {r1, r2, r3, r4, r5, r7, r9, sl}
    9554:	f3000001 	vhadd.u8	d0, d0, d1
    9558:	ef00008e 	svc	0x0000008e
    955c:	1e00008e 	cdpne	0, 0, cr0, cr0, cr14, {4}
    9560:	100026a4 	andne	r2, r0, r4, lsr #13
    9564:	00003414 	andeq	r3, r0, r4, lsl r4
    9568:	0000340a 	andeq	r3, r0, sl, lsl #8
    956c:	0350011f 	cmpeq	r0, #-1073741817	; 0xc0000007
    9570:	1f5001f3 	svcne	0x005001f3
    9574:	f3035101 	vrhadd.u8	d5, d3, d1
    9578:	011f5101 	tsteq	pc, r1, lsl #2
    957c:	01f30352 	mvnseq	r0, r2, asr r3
    9580:	53011f52 	movwpl	r1, #8018	; 0x1f52
    9584:	5301f303 	movwpl	pc, #4867	; 0x1303	; <UNPREDICTABLE>
    9588:	007d021f 	rsbseq	r0, sp, pc, lsl r2
    958c:	1f007402 	svcne	0x00007402
    9590:	03047d02 	movweq	r7, #19714	; 0x4d02
    9594:	00060491 	muleq	r6, r1, r4
    9598:	0026aa1d 	eoreq	sl, r6, sp, lsl sl
    959c:	00313e10 	eorseq	r3, r1, r0, lsl lr
    95a0:	bf2d0000 	svclt	0x002d0000
    95a4:	01000017 	tsteq	r0, r7, lsl r0
    95a8:	01140654 	tsteq	r4, r4, asr r6
    95ac:	00000666 	andeq	r0, r0, r6, ror #12
    95b0:	100024f0 	strdne	r2, [r0], -r0
    95b4:	10002552 	andne	r2, r0, r2, asr r5
    95b8:	00008f14 	andeq	r8, r0, r4, lsl pc
    95bc:	00357e01 	eorseq	r7, r5, r1, lsl #28
    95c0:	22f61b00 	rscscs	r1, r6, #0, 22
    95c4:	54010000 	strpl	r0, [r1], #-0
    95c8:	00ea3206 	rsceq	r3, sl, r6, lsl #4
    95cc:	8f5c0000 	svchi	0x005c0000
    95d0:	8f580000 	svchi	0x00580000
    95d4:	9a1b0000 	bls	6c95dc <__RAM_SIZE+0x5c95dc>
    95d8:	01000019 	tsteq	r0, r9, lsl r0
    95dc:	be360655 	mrclt	6, 1, r0, cr6, cr5, {2}
    95e0:	7e000000 	cdpvc	0, 0, cr0, cr0, cr0, {0}
    95e4:	7a00008f 	bvc	9828 <__HEAP_SIZE+0x8828>
    95e8:	1b00008f 	blne	982c <__HEAP_SIZE+0x882c>
    95ec:	000018fe 	strdeq	r1, [r0], -lr
    95f0:	40065601 	andmi	r5, r6, r1, lsl #12
    95f4:	00000035 	andeq	r0, r0, r5, lsr r0
    95f8:	00008fa0 	andeq	r8, r0, r0, lsr #31
    95fc:	00008f9c 	muleq	r0, ip, pc	; <UNPREDICTABLE>
    9600:	001e841b 	andseq	r8, lr, fp, lsl r4
    9604:	06570100 	ldrbeq	r0, [r7], -r0, lsl #2
    9608:	0000a130 	andeq	sl, r0, r0, lsr r1
    960c:	008fc200 	addeq	ip, pc, r0, lsl #4
    9610:	008fbe00 	addeq	fp, pc, r0, lsl #28
    9614:	14721b00 	ldrbtne	r1, [r2], #-2816	; 0xfffff500
    9618:	58010000 	stmdapl	r1, {}	; <UNPREDICTABLE>
    961c:	012f2f06 			; <UNDEFINED> instruction: 0x012f2f06
    9620:	8fe40000 	svchi	0x00e40000
    9624:	8fe00000 	svchi	0x00e00000
    9628:	a41b0000 	ldrge	r0, [fp], #-0
    962c:	01000023 	tsteq	r0, r3, lsr #32
    9630:	f9380659 			; <UNDEFINED> instruction: 0xf9380659
    9634:	08000032 	stmdaeq	r0, {r1, r4, r5}
    9638:	04000090 	streq	r0, [r0], #-144	; 0xffffff70
    963c:	18000090 	stmdane	r0, {r4, r7}
    9640:	00001b34 	andeq	r1, r0, r4, lsr fp
    9644:	11065b01 	tstne	r6, r1, lsl #22
    9648:	00000666 	andeq	r0, r0, r6, ror #12
    964c:	00009030 	andeq	r9, r0, r0, lsr r0
    9650:	00009028 	andeq	r9, r0, r8, lsr #32
    9654:	0004e023 	andeq	lr, r4, r3, lsr #32
    9658:	00353e00 	eorseq	r3, r5, r0, lsl #28
    965c:	1ed81800 	cdpne	8, 13, cr1, cr8, cr0, {0}
    9660:	80010000 	andhi	r0, r1, r0
    9664:	05bb1b06 	ldreq	r1, [fp, #2822]!	; 0xb06
    9668:	906a0000 	rsbls	r0, sl, r0
    966c:	90640000 	rsbls	r0, r4, r0
    9670:	041e0000 	ldreq	r0, [lr], #-0
    9674:	d8100025 	ldmdale	r0, {r0, r2, r5}
    9678:	fa000038 	blx	9760 <__HEAP_SIZE+0x8760>
    967c:	1f000034 	svcne	0x00000034
    9680:	75045001 	strvc	r5, [r4, #-1]
    9684:	00243200 	eoreq	r3, r4, r0, lsl #4
    9688:	00250e1e 	eoreq	r0, r5, lr, lsl lr
    968c:	0038d810 	eorseq	sp, r8, r0, lsl r8
    9690:	00350e00 	eorseq	r0, r5, r0, lsl #28
    9694:	50011f00 	andpl	r1, r1, r0, lsl #30
    9698:	004c0802 	subeq	r0, ip, r2, lsl #16
    969c:	00251a1e 	eoreq	r1, r5, lr, lsl sl
    96a0:	0038e610 	eorseq	lr, r8, r0, lsl r6
    96a4:	00352d00 	eorseq	r2, r5, r0, lsl #26
    96a8:	50011f00 	andpl	r1, r1, r0, lsl #30
    96ac:	1f007402 	svcne	0x00007402
    96b0:	30015101 	andcc	r5, r1, r1, lsl #2
    96b4:	0252011f 	subseq	r0, r2, #-1073741817	; 0xc0000007
    96b8:	20004c08 	andcs	r4, r0, r8, lsl #24
    96bc:	1000254c 	andne	r2, r0, ip, asr #10
    96c0:	00003838 	andeq	r3, r0, r8, lsr r8
    96c4:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    96c8:	00000079 	andeq	r0, r0, r9, ror r0
    96cc:	00253e20 	eoreq	r3, r5, r0, lsr #28
    96d0:	0031b610 	eorseq	fp, r1, r0, lsl r6
    96d4:	50011f00 	andpl	r1, r1, r0, lsl #30
    96d8:	1f007602 	svcne	0x00007602
    96dc:	77025101 	strvc	r5, [r2, -r1, lsl #2]
    96e0:	52011f00 	andpl	r1, r1, #0, 30
    96e4:	1f007502 	svcne	0x00007502
    96e8:	78025301 	stmdavc	r2, {r0, r8, r9, ip, lr}
    96ec:	7d021f00 	stcvc	15, cr1, [r2, #-0]
    96f0:	00910300 	addseq	r0, r1, r0, lsl #6
    96f4:	7d021f06 	stcvc	15, cr1, [r2, #-24]	; 0xffffffe8
    96f8:	04910304 	ldreq	r0, [r1], #772	; 0x304
    96fc:	7d021f06 	stcvc	15, cr1, [r2, #-24]	; 0xffffffe8
    9700:	00740208 	rsbseq	r0, r4, r8, lsl #4
    9704:	0c7d021f 	lfmeq	f0, 2, [sp], #-124	; 0xffffff84
    9708:	00003001 	andeq	r3, r0, r1
    970c:	17450121 	strbne	r0, [r5, -r1, lsr #2]
    9710:	1d010000 	stcne	0, cr0, [r1, #-0]
    9714:	a7011205 	strge	r1, [r1, -r5, lsl #4]
    9718:	6c000003 	stcvs	0, cr0, [r0], {3}
    971c:	94100026 	ldrls	r0, [r0], #-38	; 0xffffffda
    9720:	93100026 	tstls	r0, #38	; 0x26
    9724:	01000090 	swpeq	r0, r0, [r0]	; <UNPREDICTABLE>
    9728:	00003699 	muleq	r0, r9, r6
    972c:	0022f61b 	eoreq	pc, r2, fp, lsl r6	; <UNPREDICTABLE>
    9730:	051d0100 	ldreq	r0, [sp, #-256]	; 0xffffff00
    9734:	0000ea34 	andeq	lr, r0, r4, lsr sl
    9738:	0090cf00 	addseq	ip, r0, r0, lsl #30
    973c:	0090cb00 	addseq	ip, r0, r0, lsl #22
    9740:	199a1b00 	ldmibne	sl, {r8, r9, fp, ip}
    9744:	1e010000 	cdpne	0, 0, cr0, cr1, cr0, {0}
    9748:	00be3805 	adcseq	r3, lr, r5, lsl #16
    974c:	90f40000 	rscsls	r0, r4, r0
    9750:	90f00000 	rscsls	r0, r0, r0
    9754:	fe1b0000 	cdp2	0, 1, cr0, cr11, cr0, {0}
    9758:	01000018 	tsteq	r0, r8, lsl r0
    975c:	3542051f 	strbcc	r0, [r2, #-1311]	; 0xfffffae1
    9760:	19000000 	stmdbne	r0, {}	; <UNPREDICTABLE>
    9764:	15000091 	strne	r0, [r0, #-145]	; 0xffffff6f
    9768:	1b000091 	blne	99b4 <__HEAP_SIZE+0x89b4>
    976c:	00001e84 	andeq	r1, r0, r4, lsl #29
    9770:	32052001 	andcc	r2, r5, #1
    9774:	000000a1 	andeq	r0, r0, r1, lsr #1
    9778:	0000913e 	andeq	r9, r0, lr, lsr r1
    977c:	0000913a 	andeq	r9, r0, sl, lsr r1
    9780:	00147219 	andseq	r7, r4, r9, lsl r2
    9784:	05210100 	streq	r0, [r1, #-256]!	; 0xffffff00
    9788:	00012f31 	andeq	r2, r1, r1, lsr pc
    978c:	00910200 	addseq	r0, r1, r0, lsl #4
    9790:	001b2519 	andseq	r2, fp, r9, lsl r5
    9794:	05220100 	streq	r0, [r2, #-256]!	; 0xffffff00
    9798:	0005c139 	andeq	ip, r5, r9, lsr r1
    979c:	04910200 	ldreq	r0, [r1], #512	; 0x200
    97a0:	001d1919 	andseq	r1, sp, r9, lsl r9
    97a4:	05230100 	streq	r0, [r3, #-256]!	; 0xffffff00
    97a8:	0008f63a 	andeq	pc, r8, sl, lsr r6	; <UNPREDICTABLE>
    97ac:	08910200 	ldmeq	r1, {r9}
    97b0:	001a1916 	andseq	r1, sl, r6, lsl r9
    97b4:	05250100 	streq	r0, [r5, #-256]!	; 0xffffff00
    97b8:	0003a716 	andeq	sl, r3, r6, lsl r7
    97bc:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    97c0:	001b3418 	andseq	r3, fp, r8, lsl r4
    97c4:	05260100 	streq	r0, [r6, #-256]!	; 0xffffff00
    97c8:	00066611 	andeq	r6, r6, r1, lsl r6
    97cc:	00916100 	addseq	r6, r1, r0, lsl #2
    97d0:	00915f00 	addseq	r5, r1, r0, lsl #30
    97d4:	26881e00 	strcs	r1, [r8], r0, lsl #28
    97d8:	36991000 	ldrcc	r1, [r9], r0
    97dc:	368f0000 	strcc	r0, [pc], r0
    97e0:	011f0000 	tsteq	pc, r0
    97e4:	01f30350 	mvnseq	r0, r0, asr r3
    97e8:	51011f50 	tstpl	r1, r0, asr pc
    97ec:	5101f303 	tstpl	r1, r3, lsl #6	; <UNPREDICTABLE>
    97f0:	0352011f 	cmpeq	r2, #-1073741817	; 0xc0000007
    97f4:	1f5201f3 	svcne	0x005201f3
    97f8:	f3035301 	vcgt.u8	d5, d3, d1
    97fc:	021f5301 	andseq	r5, pc, #67108864	; 0x4000000
    9800:	7402007d 	strvc	r0, [r2], #-125	; 0xffffff83
    9804:	7d021f00 	stcvc	15, cr1, [r2, #-0]
    9808:	04910304 	ldreq	r0, [r1], #772	; 0x304
    980c:	7d021f06 	stcvc	15, cr1, [r2, #-24]	; 0xffffffe8
    9810:	08910308 	ldmeq	r1, {r3, r8, r9}
    9814:	7d021f06 	stcvc	15, cr1, [r2, #-24]	; 0xffffffe8
    9818:	7491020c 	ldrvc	r0, [r1], #524	; 0x20c
    981c:	268e1d00 	strcs	r1, [lr], r0, lsl #26
    9820:	313e1000 	teqcc	lr, r0
    9824:	2d000000 	stccs	0, cr0, [r0, #-0]
    9828:	00001850 	andeq	r1, r0, r0, asr r8
    982c:	1404e601 	strne	lr, [r4], #-1537	; 0xfffff9ff
    9830:	00066601 	andeq	r6, r6, r1, lsl #12
    9834:	00237a00 	eoreq	r7, r3, r0, lsl #20
    9838:	0023cc10 	eoreq	ip, r3, r0, lsl ip
    983c:	00917410 	addseq	r7, r1, r0, lsl r4
    9840:	37d40100 	ldrbcc	r0, [r4, r0, lsl #2]
    9844:	f61b0000 			; <UNDEFINED> instruction: 0xf61b0000
    9848:	01000022 	tsteq	r0, r2, lsr #32
    984c:	ea3804e6 	b	e0abec <__RAM_SIZE+0xd0abec>
    9850:	c6000000 	strgt	r0, [r0], -r0
    9854:	b8000091 	stmdalt	r0, {r0, r4, r7}
    9858:	1b000091 	blne	9aa4 <__HEAP_SIZE+0x8aa4>
    985c:	0000199a 	muleq	r0, sl, r9
    9860:	3c04e701 	stccc	7, cr14, [r4], {1}
    9864:	000000be 	strheq	r0, [r0], -lr
    9868:	00009229 	andeq	r9, r0, r9, lsr #4
    986c:	00009221 	andeq	r9, r0, r1, lsr #4
    9870:	0018fe1b 	andseq	pc, r8, fp, lsl lr	; <UNPREDICTABLE>
    9874:	04e80100 	strbteq	r0, [r8], #256	; 0x100
    9878:	00003546 	andeq	r3, r0, r6, asr #10
    987c:	00926800 	addseq	r6, r2, r0, lsl #16
    9880:	00926000 	addseq	r6, r2, r0
    9884:	1e841b00 	vdivne.f64	d1, d4, d0
    9888:	e9010000 	stmdb	r1, {}	; <UNPREDICTABLE>
    988c:	00a13604 	adceq	r3, r1, r4, lsl #12
    9890:	92a70000 	adcls	r0, r7, #0
    9894:	929f0000 	addsls	r0, pc, #0
    9898:	721b0000 	andsvc	r0, fp, #0
    989c:	01000014 	tsteq	r0, r4, lsl r0
    98a0:	2f3504ea 	svccs	0x003504ea
    98a4:	e2000001 	and	r0, r0, #1
    98a8:	de000092 	mcrle	0, 0, r0, cr0, cr2, {4}
    98ac:	1b000092 	blne	9afc <__HEAP_SIZE+0x8afc>
    98b0:	00001b25 	andeq	r1, r0, r5, lsr #22
    98b4:	3d04eb01 	vstrcc	d14, [r4, #-4]
    98b8:	000005c1 	andeq	r0, r0, r1, asr #11
    98bc:	00009306 	andeq	r9, r0, r6, lsl #6
    98c0:	00009302 	andeq	r9, r0, r2, lsl #6
    98c4:	001d191b 	andseq	r1, sp, fp, lsl r9
    98c8:	04ec0100 	strbteq	r0, [ip], #256	; 0x100
    98cc:	0008f63e 	andeq	pc, r8, lr, lsr r6	; <UNPREDICTABLE>
    98d0:	00932a00 	addseq	r2, r3, r0, lsl #20
    98d4:	00932600 	addseq	r2, r3, r0, lsl #12
    98d8:	23a41b00 			; <UNDEFINED> instruction: 0x23a41b00
    98dc:	ed010000 	stc	0, cr0, [r1, #-0]
    98e0:	32f93e04 	rscscc	r3, r9, #4, 28	; 0x40
    98e4:	934e0000 	movtls	r0, #57344	; 0xe000
    98e8:	934a0000 	movtls	r0, #40960	; 0xa000
    98ec:	34180000 	ldrcc	r0, [r8], #-0
    98f0:	0100001b 	tsteq	r0, fp, lsl r0
    98f4:	661104ef 	ldrvs	r0, [r1], -pc, ror #9
    98f8:	72000006 	andvc	r0, r0, #6
    98fc:	6e000093 	mcrvs	0, 0, r0, cr0, cr3, {4}
    9900:	1e000093 	mcrne	0, 0, r0, cr0, cr3, {4}
    9904:	1000239a 	mulne	r0, sl, r3
    9908:	000038e6 	andeq	r3, r0, r6, ror #17
    990c:	00003794 	muleq	r0, r4, r7
    9910:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    9914:	011f0074 	tsteq	pc, r4, ror r0	; <UNPREDICTABLE>
    9918:	1f300151 	svcne	0x00300151
    991c:	08025201 	stmdaeq	r2, {r0, r9, ip, lr}
    9920:	bc20004c 	stclt	0, cr0, [r0], #-304	; 0xfffffed0
    9924:	b6100023 	ldrlt	r0, [r0], -r3, lsr #32
    9928:	1f000031 	svcne	0x00000031
    992c:	75025001 	strvc	r5, [r2, #-1]
    9930:	51011f00 	tstpl	r1, r0, lsl #30
    9934:	1f007902 	svcne	0x00007902
    9938:	78025201 	stmdavc	r2, {r0, r9, ip, lr}
    993c:	53011f00 	movwpl	r1, #7936	; 0x1f00
    9940:	1f007702 	svcne	0x00007702
    9944:	03007d02 	movweq	r7, #3330	; 0xd02
    9948:	1f060091 	svcne	0x00060091
    994c:	03047d02 	movweq	r7, #19714	; 0x4d02
    9950:	1f060c91 	svcne	0x00060c91
    9954:	02087d02 	andeq	r7, r8, #2, 26	; 0x80
    9958:	021f0074 	andseq	r0, pc, #116	; 0x74
    995c:	30010c7d 	andcc	r0, r1, sp, ror ip
    9960:	012f0000 			; <UNDEFINED> instruction: 0x012f0000
    9964:	000a1c01 	andeq	r1, sl, r1, lsl #24
    9968:	000a1c00 	andeq	r1, sl, r0, lsl #24
    996c:	01f70800 	mvnseq	r0, r0, lsl #16
    9970:	01012f0d 	tsteq	r1, sp, lsl #30
    9974:	00000a37 	andeq	r0, r0, r7, lsr sl
    9978:	00000a37 	andeq	r0, r0, r7, lsr sl
    997c:	0601d108 	streq	sp, [r1], -r8, lsl #2
    9980:	d3010130 	movwle	r0, #4400	; 0x1130
    9984:	d300000b 	movwle	r0, #11
    9988:	0600000b 	streq	r0, [r0], -fp
    998c:	01300d71 	teqeq	r0, r1, ror sp
    9990:	000a4301 	andeq	r4, sl, r1, lsl #6
    9994:	000a4300 	andeq	r4, sl, r0, lsl #6
    9998:	0d720600 	ldcleq	6, cr0, [r2, #-0]
    999c:	7d010130 	stfvcs	f0, [r1, #-192]	; 0xffffff40
    99a0:	7d00000f 	stcvc	0, cr0, [r0, #-60]	; 0xffffffc4
    99a4:	0600000f 	streq	r0, [r0], -pc
    99a8:	01301174 	teqeq	r0, r4, ror r1
    99ac:	000c8901 	andeq	r8, ip, r1, lsl #18
    99b0:	000c8900 	andeq	r8, ip, r0, lsl #18
    99b4:	0d750600 	ldcleq	6, cr0, [r5, #-0]
    99b8:	7e010130 	fltvcsp	f1, r0
    99bc:	7e00000a 	cdpvc	0, 0, cr0, cr0, cr10, {0}
    99c0:	0600000a 	streq	r0, [r0], -sl
    99c4:	01300d6f 	teqeq	r0, pc, ror #26
    99c8:	0011c101 	andseq	ip, r1, r1, lsl #2
    99cc:	0011c100 	andseq	ip, r1, r0, lsl #2
    99d0:	06b80a00 	ldrteq	r0, [r8], r0, lsl #20
    99d4:	9b01012f 	blls	49e98 <__HEAP_SIZE+0x48e98>
    99d8:	9b000009 	blls	9a04 <__HEAP_SIZE+0x8a04>
    99dc:	08000009 	stmdaeq	r0, {r0, r3}
    99e0:	2f0601b9 	svccs	0x000601b9
    99e4:	208d0101 	addcs	r0, sp, r1, lsl #2
    99e8:	208d0000 	addcs	r0, sp, r0
    99ec:	77060000 	strvc	r0, [r6, -r0]
    99f0:	012f1101 			; <UNDEFINED> instruction: 0x012f1101
    99f4:	00232f01 	eoreq	r2, r3, r1, lsl #30
    99f8:	00232f00 	eoreq	r2, r3, r0, lsl #30
    99fc:	01c70b00 	biceq	r0, r7, r0, lsl #22
    9a00:	0101300e 	tsteq	r1, lr
    9a04:	00001f1b 	andeq	r1, r0, fp, lsl pc
    9a08:	00001f1b 	andeq	r1, r0, fp, lsl pc
    9a0c:	2f06e30a 	svccs	0x0006e30a
    9a10:	17030101 	strne	r0, [r3, -r1, lsl #2]
    9a14:	17030000 	strne	r0, [r3, -r0]
    9a18:	480b0000 	stmdami	fp, {}	; <UNPREDICTABLE>
    9a1c:	01300c05 	teqeq	r0, r5, lsl #24
    9a20:	00145e01 	andseq	r5, r4, r1, lsl #28
    9a24:	00145e00 	andseq	r5, r4, r0, lsl #28
    9a28:	0cdc0a00 	vldmiaeq	ip, {s1-s0}
    9a2c:	8501012f 	strhi	r0, [r1, #-303]	; 0xfffffed1
    9a30:	85000009 	strhi	r0, [r0, #-9]
    9a34:	08000009 	stmdaeq	r0, {r0, r3}
    9a38:	300601e7 	andcc	r0, r6, r7, ror #3
    9a3c:	00ae0101 	adceq	r0, lr, r1, lsl #2
    9a40:	00ae0000 	adceq	r0, lr, r0
    9a44:	210c0000 	mrscs	r0, (UNDEF: 12)
    9a48:	01012f09 	tsteq	r1, r9, lsl #30
    9a4c:	00000961 	andeq	r0, r0, r1, ror #18
    9a50:	00000961 	andeq	r0, r0, r1, ror #18
    9a54:	0601c408 	streq	ip, [r1], -r8, lsl #8
    9a58:	90010130 	andls	r0, r1, r0, lsr r1
    9a5c:	9000001b 	andls	r0, r0, fp, lsl r0
    9a60:	0a00001b 	beq	9ad4 <__HEAP_SIZE+0x8ad4>
    9a64:	01301780 	teqeq	r0, r0, lsl #15
    9a68:	000cf801 	andeq	pc, ip, r1, lsl #16
    9a6c:	000cf800 	andeq	pc, ip, r0, lsl #16
    9a70:	08b50a00 	ldmeq	r5!, {r9, fp}
    9a74:	ae010131 	mcrge	1, 0, r0, cr1, cr1, {1}
    9a78:	a4000000 	strge	r0, [r0], #-0
    9a7c:	0d000000 	stceq	0, cr0, [r0, #-0]
    9a80:	198c0000 	stmibne	ip, {}	; <UNPREDICTABLE>
    9a84:	00020000 	andeq	r0, r2, r0
    9a88:	0000125e 	andeq	r1, r0, lr, asr r2
    9a8c:	01890104 	orreq	r0, r9, r4, lsl #2
    9a90:	680c0000 	stmdavs	ip, {}	; <UNPREDICTABLE>
    9a94:	85000025 	strhi	r0, [r0, #-37]	; 0xffffffdb
    9a98:	10000003 	andne	r0, r0, r3
    9a9c:	0000000a 	andeq	r0, r0, sl
    9aa0:	00000000 	andeq	r0, r0, r0
    9aa4:	c4000000 	strgt	r0, [r0], #-0
    9aa8:	0200006f 	andeq	r0, r0, #111	; 0x6f
    9aac:	00000504 	andeq	r0, r0, r4, lsl #10
    9ab0:	3517d102 	ldrcc	sp, [r7, #-258]	; 0xfffffefe
    9ab4:	03000000 	movweq	r0, #0
    9ab8:	02c70704 	sbceq	r0, r7, #4, 14	; 0x100000
    9abc:	04040000 	streq	r0, [r4], #-0
    9ac0:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    9ac4:	05080300 	streq	r0, [r8, #-768]	; 0xfffffd00
    9ac8:	00000127 	andeq	r0, r0, r7, lsr #2
    9acc:	63040803 	movwvs	r0, #18435	; 0x4803
    9ad0:	03000000 	movweq	r0, #0
    9ad4:	02730601 	rsbseq	r0, r3, #1048576	; 0x100000
    9ad8:	7f020000 	svcvc	0x00020000
    9adc:	03000001 	movweq	r0, #1
    9ae0:	0064182b 	rsbeq	r1, r4, fp, lsr #16
    9ae4:	01030000 	mrseq	r0, (UNDEF: 3)
    9ae8:	00027108 	andeq	r7, r2, r8, lsl #2
    9aec:	05020300 	streq	r0, [r2, #-768]	; 0xfffffd00
    9af0:	00000032 	andeq	r0, r0, r2, lsr r0
    9af4:	1a070203 	bne	1ca308 <__RAM_SIZE+0xca308>
    9af8:	03000003 	movweq	r0, #3
    9afc:	012c0504 			; <UNDEFINED> instruction: 0x012c0504
    9b00:	6f020000 	svcvs	0x00020000
    9b04:	03000000 	movweq	r0, #0
    9b08:	008c194f 	addeq	r1, ip, pc, asr #18
    9b0c:	04030000 	streq	r0, [r3], #-0
    9b10:	0002c207 	andeq	ip, r2, r7, lsl #4
    9b14:	07080300 	streq	r0, [r8, -r0, lsl #6]
    9b18:	000002bd 			; <UNDEFINED> instruction: 0x000002bd
    9b1c:	9a060405 	bls	18ab38 <__RAM_SIZE+0x8ab38>
    9b20:	03000000 	movweq	r0, #0
    9b24:	027a0801 	rsbseq	r0, sl, #65536	; 0x10000
    9b28:	a1060000 	mrsge	r0, (UNDEF: 6)
    9b2c:	07000000 	streq	r0, [r0, -r0]
    9b30:	0000a804 	andeq	sl, r0, r4, lsl #16
    9b34:	00ad0600 	adceq	r0, sp, r0, lsl #12
    9b38:	81020000 	mrshi	r0, (UNDEF: 2)
    9b3c:	04000001 	streq	r0, [r0], #-1
    9b40:	00581318 	subseq	r1, r8, r8, lsl r3
    9b44:	71020000 	mrsvc	r0, (UNDEF: 2)
    9b48:	04000000 	streq	r0, [r0], #-0
    9b4c:	00801430 	addeq	r1, r0, r0, lsr r4
    9b50:	38020000 	stmdacc	r2, {}	; <UNPREDICTABLE>
    9b54:	0500001c 	streq	r0, [r0, #-28]	; 0xffffffe4
    9b58:	00dc1124 	sbcseq	r1, ip, r4, lsr #2
    9b5c:	04070000 	streq	r0, [r7], #-0
    9b60:	000000e2 	andeq	r0, r0, r2, ror #1
    9b64:	00ee0108 	rsceq	r0, lr, r8, lsl #2
    9b68:	9a090000 	bls	249b70 <__RAM_SIZE+0x149b70>
    9b6c:	00000000 	andeq	r0, r0, r0
    9b70:	00155f02 	andseq	r5, r5, r2, lsl #30
    9b74:	1a490600 	bne	124b37c <__RAM_SIZE+0x114b37c>
    9b78:	000000c4 	andeq	r0, r0, r4, asr #1
    9b7c:	0009c502 	andeq	ip, r9, r2, lsl #10
    9b80:	1a4a0600 	bne	128b388 <__RAM_SIZE+0x118b388>
    9b84:	00000079 	andeq	r0, r0, r9, ror r0
    9b88:	0000fa06 	andeq	pc, r0, r6, lsl #20
    9b8c:	09c40200 	stmibeq	r4, {r9}^
    9b90:	4b060000 	blmi	189b98 <__RAM_SIZE+0x89b98>
    9b94:	00008c1a 	andeq	r8, r0, sl, lsl ip
    9b98:	09200200 	stmdbeq	r0!, {r9}
    9b9c:	51060000 	mrspl	r0, (UNDEF: 6)
    9ba0:	0000c41a 	andeq	ip, r0, sl, lsl r4
    9ba4:	01170600 	tsteq	r7, r0, lsl #12
    9ba8:	240a0000 	strcs	r0, [sl], #-0
    9bac:	14000012 	strne	r0, [r0], #-18	; 0xffffffee
    9bb0:	080c0c07 	stmdaeq	ip, {r0, r1, r2, sl, fp}
    9bb4:	00000157 	andeq	r0, r0, r7, asr r1
    9bb8:	000dc50b 	andeq	ip, sp, fp, lsl #10
    9bbc:	0c110700 	ldceq	7, cr0, [r1], {-0}
    9bc0:	00011710 	andeq	r1, r1, r0, lsl r7
    9bc4:	00230200 	eoreq	r0, r3, r0, lsl #4
    9bc8:	000dbb0b 	andeq	fp, sp, fp, lsl #22
    9bcc:	0c120700 	ldceq	7, cr0, [r2], {-0}
    9bd0:	0001570c 	andeq	r5, r1, ip, lsl #14
    9bd4:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    9bd8:	009a0c00 	addseq	r0, sl, r0, lsl #24
    9bdc:	01670000 	cmneq	r7, r0
    9be0:	350d0000 	strcc	r0, [sp, #-0]
    9be4:	03000000 	movweq	r0, #0
    9be8:	19370e00 	ldmdbne	r7!, {r9, sl, fp}
    9bec:	17070000 	strne	r0, [r7, -r0]
    9bf0:	0128220c 			; <UNDEFINED> instruction: 0x0128220c
    9bf4:	6a0e0000 	bvs	389bfc <__RAM_SIZE+0x289bfc>
    9bf8:	0700000b 	streq	r0, [r0, -fp]
    9bfc:	282b0c25 	stmdacs	fp!, {r0, r2, r5, sl, fp}
    9c00:	0a000001 	beq	9c0c <__HEAP_SIZE+0x8c0c>
    9c04:	00000fb6 			; <UNDEFINED> instruction: 0x00000fb6
    9c08:	0c29071c 	stceq	7, cr0, [r9], #-112	; 0xffffff90
    9c0c:	0001c010 	andeq	ip, r1, r0, lsl r0
    9c10:	0dc40b00 	vstreq	d16, [r4]
    9c14:	2e070000 	cdpcs	0, 0, cr0, cr7, cr0, {0}
    9c18:	010b110c 	tsteq	fp, ip, lsl #2
    9c1c:	23020000 	movwcs	r0, #8192	; 0x2000
    9c20:	0dbb0b00 			; <UNDEFINED> instruction: 0x0dbb0b00
    9c24:	2f070000 	svccs	0x00070000
    9c28:	009a0c0c 	addseq	r0, sl, ip, lsl #24
    9c2c:	23020000 	movwcs	r0, #8192	; 0x2000
    9c30:	0dd70b04 	vldreq	d16, [r7, #16]
    9c34:	30070000 	andcc	r0, r7, r0
    9c38:	01741a0c 	cmneq	r4, ip, lsl #20
    9c3c:	23020000 	movwcs	r0, #8192	; 0x2000
    9c40:	dd0e0008 	stcle	0, cr0, [lr, #-32]	; 0xffffffe0
    9c44:	07000013 	smladeq	r0, r3, r0, r0
    9c48:	81030c34 	tsthi	r3, r4, lsr ip
    9c4c:	0a000001 	beq	9c58 <__HEAP_SIZE+0x8c58>
    9c50:	00001f53 	andeq	r1, r0, r3, asr pc
    9c54:	0c43074c 	mcrreq	7, 4, r0, r3, cr12
    9c58:	00028c10 	andeq	r8, r2, r0, lsl ip
    9c5c:	1ba60b00 	blne	fe98c864 <__StackTop+0xc688c864>
    9c60:	45070000 	strmi	r0, [r7, #-0]
    9c64:	009a0c0c 	addseq	r0, sl, ip, lsl #24
    9c68:	23020000 	movwcs	r0, #8192	; 0x2000
    9c6c:	12e90b00 	rscne	r0, r9, #0, 22
    9c70:	4c070000 	stcmi	0, cr0, [r7], {-0}
    9c74:	028c160c 	addeq	r1, ip, #12, 12	; 0xc00000
    9c78:	23020000 	movwcs	r0, #8192	; 0x2000
    9c7c:	19bb0b04 	ldmibne	fp!, {r2, r8, r9, fp}
    9c80:	4d070000 	stcmi	0, cr0, [r7, #-0]
    9c84:	010b110c 	tsteq	fp, ip, lsl #2
    9c88:	23020000 	movwcs	r0, #8192	; 0x2000
    9c8c:	1bb90b2c 	blne	fee4c944 <__StackTop+0xc6d4c944>
    9c90:	4e070000 	cdpmi	0, 0, cr0, cr7, cr0, {0}
    9c94:	009a0c0c 	addseq	r0, sl, ip, lsl #24
    9c98:	23020000 	movwcs	r0, #8192	; 0x2000
    9c9c:	1daa0b30 			; <UNDEFINED> instruction: 0x1daa0b30
    9ca0:	53070000 	movwpl	r0, #28672	; 0x7000
    9ca4:	029c0d0c 	addseq	r0, ip, #12, 26	; 0x300
    9ca8:	23020000 	movwcs	r0, #8192	; 0x2000
    9cac:	14be0b34 	ldrtne	r0, [lr], #2868	; 0xb34
    9cb0:	61070000 	mrsvs	r0, (UNDEF: 7)
    9cb4:	02ac150c 	adceq	r1, ip, #12, 10	; 0x3000000
    9cb8:	23020000 	movwcs	r0, #8192	; 0x2000
    9cbc:	1d5b0b38 	vldrne	d16, [fp, #-224]	; 0xffffff20
    9cc0:	64070000 	strvs	r0, [r7], #-0
    9cc4:	009a100c 	addseq	r1, sl, ip
    9cc8:	23020000 	movwcs	r0, #8192	; 0x2000
    9ccc:	1f820b40 	svcne	0x00820b40
    9cd0:	70070000 	andvc	r0, r7, r0
    9cd4:	02bc120c 	adcseq	r1, ip, #12, 4	; 0xc0000000
    9cd8:	23020000 	movwcs	r0, #8192	; 0x2000
    9cdc:	1baf0b44 	blne	febcc9f4 <__StackTop+0xc6acc9f4>
    9ce0:	71070000 	mrsvc	r0, (UNDEF: 7)
    9ce4:	02cc110c 	sbceq	r1, ip, #12, 2
    9ce8:	23020000 	movwcs	r0, #8192	; 0x2000
    9cec:	15dd0b48 	ldrbne	r0, [sp, #2888]	; 0xb48
    9cf0:	74070000 	strvc	r0, [r7], #-0
    9cf4:	00b8110c 	adcseq	r1, r8, ip, lsl #2
    9cf8:	23020000 	movwcs	r0, #8192	; 0x2000
    9cfc:	1c870b49 	fstmiaxne	r7, {d0-d35}	;@ Deprecated
    9d00:	78070000 	stmdavc	r7, {}	; <UNPREDICTABLE>
    9d04:	00b8110c 	adcseq	r1, r8, ip, lsl #2
    9d08:	23020000 	movwcs	r0, #8192	; 0x2000
    9d0c:	670c004a 	strvs	r0, [ip, -sl, asr #32]
    9d10:	9c000001 	stcls	0, cr0, [r0], {1}
    9d14:	0d000002 	stceq	0, cr0, [r0, #-8]
    9d18:	00000035 	andeq	r0, r0, r5, lsr r0
    9d1c:	b80c0001 	stmdalt	ip, {r0}
    9d20:	ac000000 	stcge	0, cr0, [r0], {-0}
    9d24:	0d000002 	stceq	0, cr0, [r0, #-8]
    9d28:	00000035 	andeq	r0, r0, r5, lsr r0
    9d2c:	0b0c0003 	bleq	309d40 <__RAM_SIZE+0x209d40>
    9d30:	bc000001 	stclt	0, cr0, [r0], {1}
    9d34:	0d000002 	stceq	0, cr0, [r0, #-8]
    9d38:	00000035 	andeq	r0, r0, r5, lsr r0
    9d3c:	c40c0001 	strgt	r0, [ip], #-1
    9d40:	cc000000 	stcgt	0, cr0, [r0], {-0}
    9d44:	0d000002 	stceq	0, cr0, [r0, #-8]
    9d48:	00000035 	andeq	r0, r0, r5, lsr r0
    9d4c:	b80c0000 	stmdalt	ip, {}	; <UNPREDICTABLE>
    9d50:	dc000000 	stcle	0, cr0, [r0], {-0}
    9d54:	0d000002 	stceq	0, cr0, [r0, #-8]
    9d58:	00000035 	andeq	r0, r0, r5, lsr r0
    9d5c:	080e0000 	stmdaeq	lr, {}	; <UNPREDICTABLE>
    9d60:	07000014 	smladeq	r0, r4, r0, r0
    9d64:	cd030c7d 	stcgt	12, cr0, [r3, #-500]	; 0xfffffe0c
    9d68:	0f000001 	svceq	0x00000001
    9d6c:	0c910704 	ldceq	7, cr0, [r1], {4}
    9d70:	00030e05 	andeq	r0, r3, r5, lsl #28
    9d74:	0db21000 	ldceq	0, cr1, [r2]
    9d78:	93070000 	movwls	r0, #28672	; 0x7000
    9d7c:	009a100c 	addseq	r1, sl, ip
    9d80:	c4100000 	ldrgt	r0, [r0], #-0
    9d84:	0700000d 	streq	r0, [r0, -sp]
    9d88:	0b150c94 	bleq	54cfe0 <__RAM_SIZE+0x44cfe0>
    9d8c:	00000001 	andeq	r0, r0, r1
    9d90:	0013a30a 	andseq	sl, r3, sl, lsl #6
    9d94:	8d075c00 	stchi	12, cr5, [r7, #-0]
    9d98:	038b100c 	orreq	r1, fp, #12
    9d9c:	a90b0000 	stmdbge	fp, {}	; <UNPREDICTABLE>
    9da0:	0700000d 	streq	r0, [r0, -sp]
    9da4:	8b0c0c8f 	blhi	30cfe8 <__RAM_SIZE+0x20cfe8>
    9da8:	02000003 	andeq	r0, r0, #3
    9dac:	75110023 	ldrvc	r0, [r1, #-35]	; 0xffffffdd
    9db0:	0c950700 	ldceq	7, cr0, [r5], {0}
    9db4:	0002e907 	andeq	lr, r2, r7, lsl #18
    9db8:	0c230200 	sfmeq	f0, 4, [r3], #-0
    9dbc:	0012e90b 	andseq	lr, r2, fp, lsl #18
    9dc0:	0c970700 	ldceq	7, cr0, [r7], {0}
    9dc4:	00039b12 	andeq	r9, r3, r2, lsl fp
    9dc8:	10230200 	eorne	r0, r3, r0, lsl #4
    9dcc:	000dd60b 	andeq	sp, sp, fp, lsl #12
    9dd0:	0c980700 	ldceq	7, cr0, [r8], {0}
    9dd4:	0003ab11 	andeq	sl, r3, r1, lsl fp
    9dd8:	48230200 	stmdami	r3!, {r9}
    9ddc:	0010f80b 	andseq	pc, r0, fp, lsl #16
    9de0:	0c990700 	ldceq	7, cr0, [r9], {0}
    9de4:	0003bb0d 	andeq	fp, r3, sp, lsl #22
    9de8:	54230200 	strtpl	r0, [r3], #-512	; 0xfffffe00
    9dec:	0011010b 	andseq	r0, r1, fp, lsl #2
    9df0:	0c9c0700 	ldceq	7, cr0, [ip], {0}
    9df4:	0000b811 	andeq	fp, r0, r1, lsl r8
    9df8:	56230200 	strtpl	r0, [r3], -r0, lsl #4
    9dfc:	000dcd0b 	andeq	ip, sp, fp, lsl #26
    9e00:	0ca00700 	stceq	7, cr0, [r0]
    9e04:	00009a10 	andeq	r9, r0, r0, lsl sl
    9e08:	58230200 	stmdapl	r3!, {r9}
    9e0c:	009a0c00 	addseq	r0, sl, r0, lsl #24
    9e10:	039b0000 	orrseq	r0, fp, #0
    9e14:	350d0000 	strcc	r0, [sp, #-0]
    9e18:	02000000 	andeq	r0, r0, #0
    9e1c:	01c00c00 	biceq	r0, r0, r0, lsl #24
    9e20:	03ab0000 			; <UNDEFINED> instruction: 0x03ab0000
    9e24:	350d0000 	strcc	r0, [sp, #-0]
    9e28:	01000000 	mrseq	r0, (UNDEF: 0)
    9e2c:	010b0c00 	tsteq	fp, r0, lsl #24
    9e30:	03bb0000 			; <UNDEFINED> instruction: 0x03bb0000
    9e34:	350d0000 	strcc	r0, [sp, #-0]
    9e38:	02000000 	andeq	r0, r0, #0
    9e3c:	00b80c00 	adcseq	r0, r8, r0, lsl #24
    9e40:	03cb0000 	biceq	r0, fp, #0
    9e44:	350d0000 	strcc	r0, [sp, #-0]
    9e48:	01000000 	mrseq	r0, (UNDEF: 0)
    9e4c:	0fe60e00 	svceq	0x00e60e00
    9e50:	a7070000 	strge	r0, [r7, -r0]
    9e54:	030e030c 	movweq	r0, #58124	; 0xe30c
    9e58:	f30a0000 	vhadd.u8	d0, d10, d0
    9e5c:	28000024 	stmdacs	r0, {r2, r5}
    9e60:	100cd407 	andne	sp, ip, r7, lsl #8
    9e64:	00000447 	andeq	r0, r0, r7, asr #8
    9e68:	000da90b 	andeq	sl, sp, fp, lsl #18
    9e6c:	0cd60700 	ldcleq	7, cr0, [r6], {0}
    9e70:	00009a0c 	andeq	r9, r0, ip, lsl #20
    9e74:	00230200 	eoreq	r0, r3, r0, lsl #4
    9e78:	000dc50b 	andeq	ip, sp, fp, lsl #10
    9e7c:	0cd70700 	ldcleq	7, cr0, [r7], {0}
    9e80:	00016716 	andeq	r6, r1, r6, lsl r7
    9e84:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    9e88:	0012e90b 	andseq	lr, r2, fp, lsl #18
    9e8c:	0cd80700 	ldcleq	7, cr0, [r8], {0}
    9e90:	00011710 	andeq	r1, r1, r0, lsl r7
    9e94:	18230200 	stmdane	r3!, {r9}
    9e98:	0026a40b 	eoreq	sl, r6, fp, lsl #8
    9e9c:	0cd90700 	ldcleq	7, cr0, [r9], {0}
    9ea0:	00009a0c 	andeq	r9, r0, ip, lsl #20
    9ea4:	1c230200 	sfmne	f0, 4, [r3], #-0
    9ea8:	0025ed0b 	eoreq	lr, r5, fp, lsl #26
    9eac:	0cda0700 	ldcleq	7, cr0, [sl], {0}
    9eb0:	0000d014 	andeq	sp, r0, r4, lsl r0
    9eb4:	20230200 	eorcs	r0, r3, r0, lsl #4
    9eb8:	0027c10b 	eoreq	ip, r7, fp, lsl #2
    9ebc:	0cde0700 	ldcleq	7, cr0, [lr], {0}
    9ec0:	0000b80d 	andeq	fp, r0, sp, lsl #16
    9ec4:	24230200 	strtcs	r0, [r3], #-512	; 0xfffffe00
    9ec8:	24e50e00 	strbtcs	r0, [r5], #3584	; 0xe00
    9ecc:	df070000 	svcle	0x00070000
    9ed0:	03d8030c 	bicseq	r0, r8, #12, 6	; 0x30000000
    9ed4:	47120000 	ldrmi	r0, [r2, -r0]
    9ed8:	14000009 	strne	r0, [r0], #-9
    9edc:	ad089008 	stcge	0, cr9, [r8, #-32]	; 0xffffffe0
    9ee0:	13000004 	movwne	r0, #4
    9ee4:	0000092b 	andeq	r0, r0, fp, lsr #18
    9ee8:	17249308 	strne	r9, [r4, -r8, lsl #6]!
    9eec:	02000001 	andeq	r0, r0, #1
    9ef0:	94130023 	ldrls	r0, [r3], #-35	; 0xffffffdd
    9ef4:	08000009 	stmdaeq	r0, {r0, r3}
    9ef8:	04ad2d94 	strteq	r2, [sp], #3476	; 0xd94
    9efc:	23020000 	movwcs	r0, #8192	; 0x2000
    9f00:	09e31304 	stmibeq	r3!, {r2, r8, r9, ip}^
    9f04:	95080000 	strls	r0, [r8, #-0]
    9f08:	0004ad2d 	andeq	sl, r4, sp, lsr #26
    9f0c:	08230200 	stmdaeq	r3!, {r9}
    9f10:	00093f13 	andeq	r3, r9, r3, lsl pc
    9f14:	0c960800 	ldceq	8, cr0, [r6], {0}
    9f18:	0000009a 	muleq	r0, sl, r0
    9f1c:	130c2302 	movwne	r2, #49922	; 0xc302
    9f20:	00000914 	andeq	r0, r0, r4, lsl r9
    9f24:	ee289708 	cdp	7, 2, cr9, cr8, cr8, {0}
    9f28:	02000004 	andeq	r0, r0, #4
    9f2c:	07001023 	streq	r1, [r0, -r3, lsr #32]
    9f30:	00045404 	andeq	r5, r4, r4, lsl #8
    9f34:	0a161200 	beq	58e73c <__RAM_SIZE+0x48e73c>
    9f38:	081c0000 	ldmdaeq	ip, {}	; <UNPREDICTABLE>
    9f3c:	04ee10ac 	strbteq	r1, [lr], #172	; 0xac
    9f40:	75130000 	ldrvc	r0, [r3, #-0]
    9f44:	08000009 	stmdaeq	r0, {r0, r3}
    9f48:	010b25af 	smlatbeq	fp, pc, r5, r2	; <UNPREDICTABLE>
    9f4c:	23020000 	movwcs	r0, #8192	; 0x2000
    9f50:	09db1300 	ldmibeq	fp, {r8, r9, ip}^
    9f54:	b0080000 	andlt	r0, r8, r0
    9f58:	00050c26 	andeq	r0, r5, r6, lsr #24
    9f5c:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    9f60:	00093613 	andeq	r3, r9, r3, lsl r6
    9f64:	14b10800 	ldrtne	r0, [r1], #2048	; 0x800
    9f68:	00000500 	andeq	r0, r0, r0, lsl #10
    9f6c:	00082302 	andeq	r2, r8, r2, lsl #6
    9f70:	04b30407 	ldrteq	r0, [r3], #1031	; 0x407
    9f74:	3d020000 	stccc	0, cr0, [r2, #-0]
    9f78:	08000019 	stmdaeq	r0, {r0, r3, r4}
    9f7c:	04541b9a 	ldrbeq	r1, [r4], #-2970	; 0xfffff466
    9f80:	70020000 	andvc	r0, r2, r0
    9f84:	0800000b 	stmdaeq	r0, {r0, r1, r3}
    9f88:	045424a6 	ldrbeq	r2, [r4], #-1190	; 0xfffffb5a
    9f8c:	04070000 	streq	r0, [r7], #-0
    9f90:	000004f4 	strdeq	r0, [r0], -r4
    9f94:	0013e302 	andseq	lr, r3, r2, lsl #6
    9f98:	03b30800 			; <UNDEFINED> instruction: 0x03b30800
    9f9c:	000004b3 			; <UNDEFINED> instruction: 0x000004b3
    9fa0:	0002ea02 	andeq	lr, r2, r2, lsl #20
    9fa4:	2e5c0900 	vnmlscs.f16	s1, s24, s0	; <UNPREDICTABLE>
    9fa8:	0000052a 	andeq	r0, r0, sl, lsr #10
    9fac:	05300407 	ldreq	r0, [r0, #-1031]!	; 0xfffffbf9
    9fb0:	6b140000 	blvs	509fb8 <__RAM_SIZE+0x409fb8>
    9fb4:	01000001 	tsteq	r0, r1
    9fb8:	00ee0407 	rsceq	r0, lr, r7, lsl #8
    9fbc:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    9fc0:	0a00000f 	beq	a004 <__HEAP_SIZE+0x9004>
    9fc4:	05482433 	strbeq	r2, [r8, #-1075]	; 0xfffffbcd
    9fc8:	04070000 	streq	r0, [r7], #-0
    9fcc:	0000054e 	andeq	r0, r0, lr, asr #10
    9fd0:	000c7914 	andeq	r7, ip, r4, lsl r9
    9fd4:	a0020100 	andge	r0, r2, r0, lsl #2
    9fd8:	0b000025 	bleq	a074 <__HEAP_SIZE+0x9074>
    9fdc:	0565224e 	strbeq	r2, [r5, #-590]!	; 0xfffffdb2
    9fe0:	54060000 	strpl	r0, [r6], #-0
    9fe4:	07000005 	streq	r0, [r0, -r5]
    9fe8:	00056b04 	andeq	r6, r5, r4, lsl #22
    9fec:	28c31200 	stmiacs	r3, {r9, ip}^
    9ff0:	01280000 			; <UNDEFINED> instruction: 0x01280000
    9ff4:	05d31453 	ldrbeq	r1, [r3, #1107]	; 0x453
    9ff8:	98130000 	ldmdals	r3, {}	; <UNPREDICTABLE>
    9ffc:	01000024 	tsteq	r0, r4, lsr #32
    a000:	00ad1655 	adceq	r1, sp, r5, asr r6
    a004:	23020000 	movwcs	r0, #8192	; 0x2000
    a008:	27601300 	strbcs	r1, [r0, -r0, lsl #6]!
    a00c:	56010000 	strpl	r0, [r1], -r0
    a010:	0004f414 	andeq	pc, r4, r4, lsl r4	; <UNPREDICTABLE>
    a014:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    a018:	00242713 	eoreq	r2, r4, r3, lsl r7
    a01c:	14570100 	ldrbne	r0, [r7], #-256	; 0xffffff00
    a020:	00000117 	andeq	r0, r0, r7, lsl r1
    a024:	13182302 	tstne	r8, #134217728	; 0x8000000
    a028:	00002853 	andeq	r2, r0, r3, asr r8
    a02c:	9a105801 	bls	420038 <__RAM_SIZE+0x320038>
    a030:	02000000 	andeq	r0, r0, #0
    a034:	3b131c23 	blcc	4d10c8 <__RAM_SIZE+0x3d10c8>
    a038:	01000024 	tsteq	r0, r4, lsr #32
    a03c:	05d33e59 	ldrbeq	r3, [r3, #3673]	; 0xe59
    a040:	23020000 	movwcs	r0, #8192	; 0x2000
    a044:	27f81320 	ldrbcs	r1, [r8, r0, lsr #6]!
    a048:	5d010000 	stcpl	0, cr0, [r1, #-0]
    a04c:	0000b811 	andeq	fp, r0, r1, lsl r8
    a050:	24230200 	strtcs	r0, [r3], #-512	; 0xfffffe00
    a054:	25170200 	ldrcs	r0, [r7, #-512]	; 0xfffffe00
    a058:	530b0000 	movwpl	r0, #45056	; 0xb000
    a05c:	0005df11 	andeq	sp, r5, r1, lsl pc
    a060:	e5040700 	str	r0, [r4, #-1792]	; 0xfffff900
    a064:	08000005 	stmdaeq	r0, {r0, r2}
    a068:	0005f101 	andeq	pc, r5, r1, lsl #2
    a06c:	05540900 	ldrbeq	r0, [r4, #-2304]	; 0xfffff700
    a070:	02000000 	andeq	r0, r0, #0
    a074:	00002826 	andeq	r2, r0, r6, lsr #16
    a078:	fd11590b 	ldc2	9, cr5, [r1, #-22]	; 0xffffffea	; <UNPREDICTABLE>
    a07c:	07000005 	streq	r0, [r0, -r5]
    a080:	00060304 	andeq	r0, r6, r4, lsl #6
    a084:	14010800 	strne	r0, [r1], #-2048	; 0xfffff800
    a088:	09000006 	stmdbeq	r0, {r1, r2}
    a08c:	0000009a 	muleq	r0, sl, r0
    a090:	0000c409 	andeq	ip, r0, r9, lsl #8
    a094:	ad020000 	stcge	0, cr0, [r2, #-0]
    a098:	01000026 	tsteq	r0, r6, lsr #32
    a09c:	056b075e 	strbeq	r0, [fp, #-1886]!	; 0xfffff8a2
    a0a0:	eb020000 	bl	8a0a8 <__HEAP_SIZE+0x890a8>
    a0a4:	01000024 	tsteq	r0, r4, lsr #32
    a0a8:	06141462 	ldreq	r1, [r4], -r2, ror #8
    a0ac:	5c120000 	ldcpl	0, cr0, [r2], {-0}
    a0b0:	08000029 	stmdaeq	r0, {r0, r3, r5}
    a0b4:	58146901 	ldmdapl	r4, {r0, r8, fp, sp, lr}
    a0b8:	13000006 	movwne	r0, #6
    a0bc:	000028a5 	andeq	r2, r0, r5, lsr #17
    a0c0:	17146b01 	ldrne	r6, [r4, -r1, lsl #22]
    a0c4:	02000001 	andeq	r0, r0, #1
    a0c8:	9d130023 	ldcls	0, cr0, [r3, #-140]	; 0xffffff74
    a0cc:	01000028 	tsteq	r0, r8, lsr #32
    a0d0:	0658136c 	ldrbeq	r1, [r8], -ip, ror #6
    a0d4:	23020000 	movwcs	r0, #8192	; 0x2000
    a0d8:	04070004 	streq	r0, [r7], #-4
    a0dc:	00000620 	andeq	r0, r0, r0, lsr #12
    a0e0:	00065806 	andeq	r5, r6, r6, lsl #16
    a0e4:	24c80200 	strbcs	r0, [r8], #512	; 0x200
    a0e8:	6d010000 	stcvs	0, cr0, [r1, #-0]
    a0ec:	00062c07 	andeq	r2, r6, r7, lsl #24
    a0f0:	27071200 	strcs	r1, [r7, -r0, lsl #4]
    a0f4:	010c0000 	mrseq	r0, (UNDEF: 12)
    a0f8:	06aa1470 	sxtabeq	r1, sl, r0, ror #8
    a0fc:	3b130000 	blcc	4ca104 <__RAM_SIZE+0x3ca104>
    a100:	01000024 	tsteq	r0, r4, lsr #32
    a104:	05f11a73 	ldrbeq	r1, [r1, #2675]!	; 0xa73
    a108:	23020000 	movwcs	r0, #8192	; 0x2000
    a10c:	27b41300 	ldrcs	r1, [r4, r0, lsl #6]!
    a110:	74010000 	strvc	r0, [r1], #-0
    a114:	00009a10 	andeq	r9, r0, r0, lsl sl
    a118:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    a11c:	0024a413 	eoreq	sl, r4, r3, lsl r4
    a120:	12750100 	rsbsne	r0, r5, #0, 2
    a124:	000000c4 	andeq	r0, r0, r4, asr #1
    a128:	00082302 	andeq	r2, r8, r2, lsl #6
    a12c:	0025d802 	eoreq	sp, r5, r2, lsl #16
    a130:	07760100 	ldrbeq	r0, [r6, -r0, lsl #2]!
    a134:	0000066f 	andeq	r0, r0, pc, ror #12
    a138:	0006aa06 	andeq	sl, r6, r6, lsl #20
    a13c:	010c1500 	tsteq	ip, r0, lsl #10
    a140:	06dd097d 			; <UNDEFINED> instruction: 0x06dd097d
    a144:	78160000 	ldmdavc	r6, {}	; <UNPREDICTABLE>
    a148:	01000024 	tsteq	r0, r4, lsr #32
    a14c:	06631e7f 			; <UNDEFINED> instruction: 0x06631e7f
    a150:	3b160000 	blcc	58a158 <__RAM_SIZE+0x48a158>
    a154:	01000027 	tsteq	r0, r7, lsr #32
    a158:	06aa2684 	strteq	r2, [sl], r4, lsl #13
    a15c:	12000000 	andne	r0, r0, #0
    a160:	0000262b 	andeq	r2, r0, fp, lsr #12
    a164:	147a0110 	ldrbtne	r0, [sl], #-272	; 0xfffffef0
    a168:	00000707 	andeq	r0, r0, r7, lsl #14
    a16c:	00285d13 	eoreq	r5, r8, r3, lsl sp
    a170:	147c0100 	ldrbtne	r0, [ip], #-256	; 0xffffff00
    a174:	000000fa 	strdeq	r0, [r0], -sl
    a178:	17002302 	strne	r2, [r0, -r2, lsl #6]
    a17c:	86010075 			; <UNDEFINED> instruction: 0x86010075
    a180:	0006bb0b 	andeq	fp, r6, fp, lsl #22
    a184:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    a188:	28680200 	stmdacs	r8!, {r9}^
    a18c:	87010000 	strhi	r0, [r1, -r0]
    a190:	0006dd07 	andeq	sp, r6, r7, lsl #26
    a194:	26b41800 	ldrtcs	r1, [r4], r0, lsl #16
    a198:	8f010000 	svchi	0x00010000
    a19c:	00051223 	andeq	r1, r5, r3, lsr #4
    a1a0:	44030500 	strmi	r0, [r3], #-1280	; 0xfffffb00
    a1a4:	1838008c 	ldmdane	r8!, {r2, r3, r7}
    a1a8:	000026c6 	andeq	r2, r0, r6, asr #13
    a1ac:	12239001 	eorne	r9, r3, #1
    a1b0:	05000005 	streq	r0, [r0, #-5]
    a1b4:	008c6003 	addeq	r6, ip, r3
    a1b8:	28371838 	ldmdacs	r7!, {r3, r4, r5, fp, ip}
    a1bc:	91010000 	mrsls	r0, (UNDEF: 1)
    a1c0:	00074925 	andeq	r4, r7, r5, lsr #18
    a1c4:	9c030500 	cfstr32ls	mvfx0, [r3], {-0}
    a1c8:	0738008b 	ldreq	r0, [r8, -fp, lsl #1]!
    a1cc:	00051204 	andeq	r1, r5, r4, lsl #4
    a1d0:	267a1800 	ldrbtcs	r1, [sl], -r0, lsl #16
    a1d4:	92010000 	andls	r0, r1, #0
    a1d8:	00074925 	andeq	r4, r7, r5, lsr #18
    a1dc:	a0030500 	andge	r0, r3, r0, lsl #10
    a1e0:	1838008b 	ldmdane	r8!, {r0, r1, r3, r7}
    a1e4:	000024d9 	ldrdeq	r2, [r0], -r9
    a1e8:	3c2a9501 	cfstr32cc	mvfx9, [sl], #-4
    a1ec:	05000005 	streq	r0, [r0, #-5]
    a1f0:	008cdc03 	addeq	sp, ip, r3, lsl #24
    a1f4:	27ca1838 			; <UNDEFINED> instruction: 0x27ca1838
    a1f8:	96010000 	strls	r0, [r1], -r0
    a1fc:	00051e29 	andeq	r1, r5, r9, lsr #28
    a200:	e0030500 	and	r0, r3, r0, lsl #10
    a204:	1938008c 	ldmdbne	r8!, {r2, r3, r7}
    a208:	00287c01 	eoreq	r7, r8, r1, lsl #24
    a20c:	05320100 	ldreq	r0, [r2, #-256]!	; 0xffffff00
    a210:	0000010a 	andeq	r0, r0, sl, lsl #2
    a214:	00000000 	andeq	r0, r0, r0
    a218:	7d020000 	stcvc	0, cr0, [r2, #-0]
    a21c:	011a0100 	tsteq	sl, r0, lsl #2
    a220:	000024b1 			; <UNDEFINED> instruction: 0x000024b1
    a224:	1404ef01 	strne	lr, [r4], #-3841	; 0xfffff0ff
    a228:	0000fa01 	andeq	pc, r0, r1, lsl #20
	...
    a234:	00939000 	addseq	r9, r3, r0
    a238:	08520100 	ldmdaeq	r2, {r8}^
    a23c:	b31b0000 	tstlt	fp, #0
    a240:	01000028 	tsteq	r0, r8, lsr #32
    a244:	f13d04ef 			; <UNDEFINED> instruction: 0xf13d04ef
    a248:	ce000005 	cdpgt	0, 0, cr0, cr0, cr5, {0}
    a24c:	c8000093 	stmdagt	r0, {r0, r1, r4, r7}
    a250:	1b000093 	blne	a4a4 <__HEAP_SIZE+0x94a4>
    a254:	000027b4 			; <UNDEFINED> instruction: 0x000027b4
    a258:	3304f001 	movwcc	pc, #16385	; 0x4001	; <UNPREDICTABLE>
    a25c:	0000009a 	muleq	r0, sl, r0
    a260:	00009401 	andeq	r9, r0, r1, lsl #8
    a264:	000093fb 	strdeq	r9, [r0], -fp
    a268:	0024a41b 	eoreq	sl, r4, fp, lsl r4
    a26c:	04f10100 	ldrbteq	r0, [r1], #256	; 0x100
    a270:	0000c435 	andeq	ip, r0, r5, lsr r4
    a274:	00943400 	addseq	r3, r4, r0, lsl #8
    a278:	00942e00 	addseq	r2, r4, r0, lsl #28
    a27c:	20e11b00 	rsccs	r1, r1, r0, lsl #22
    a280:	f2010000 	vhadd.s8	d0, d1, d0
    a284:	01173704 	tsteq	r7, r4, lsl #14
    a288:	94660000 	strbtls	r0, [r6], #-0
    a28c:	94600000 	strbtls	r0, [r0], #-0
    a290:	4a1c0000 	bmi	70a298 <__RAM_SIZE+0x60a298>
    a294:	01000028 	tsteq	r0, r8, lsr #32
    a298:	072104f4 			; <UNDEFINED> instruction: 0x072104f4
    a29c:	02000007 	andeq	r0, r0, #7
    a2a0:	191d6891 	ldmdbne	sp, {r0, r4, r7, fp, sp, lr}
    a2a4:	0100001a 	tsteq	r0, sl, lsl r0
    a2a8:	fa1804f5 	blx	60b684 <__RAM_SIZE+0x50b684>
    a2ac:	94000000 	strls	r0, [r0], #-0
    a2b0:	92000094 	andls	r0, r0, #148	; 0x94
    a2b4:	1e000094 	mcrne	0, 0, r0, cr0, cr4, {4}
    a2b8:	00000000 	andeq	r0, r0, r0
    a2bc:	00001868 	andeq	r1, r0, r8, ror #16
    a2c0:	0251011f 	subseq	r0, r1, #-1073741817	; 0xc0000007
    a2c4:	011f007d 	tsteq	pc, sp, ror r0	; <UNPREDICTABLE>
    a2c8:	01f30352 	mvnseq	r0, r2, asr r3
    a2cc:	53011f53 	movwpl	r1, #8019	; 0x1f53
    a2d0:	00003001 	andeq	r3, r0, r1
    a2d4:	28e2011a 	stmiacs	r2!, {r1, r3, r4, r8}^
    a2d8:	d1010000 	mrsle	r0, (UNDEF: 1)
    a2dc:	fa011404 	blx	4f2f4 <__HEAP_SIZE+0x4e2f4>
	...
    a2e8:	a7000000 	strge	r0, [r0, -r0]
    a2ec:	01000094 	swpeq	r0, r4, [r0]	; <UNPREDICTABLE>
    a2f0:	00000908 	andeq	r0, r0, r8, lsl #18
    a2f4:	0028b31b 	eoreq	fp, r8, fp, lsl r3
    a2f8:	04d10100 	ldrbeq	r0, [r1], #256	; 0x100
    a2fc:	0005f144 	andeq	pc, r5, r4, asr #2
    a300:	0094e500 	addseq	lr, r4, r0, lsl #10
    a304:	0094df00 	addseq	sp, r4, r0, lsl #30
    a308:	27b41b00 	ldrcs	r1, [r4, r0, lsl #22]!
    a30c:	d2010000 	andle	r0, r1, #0
    a310:	009a3a04 	addseq	r3, sl, r4, lsl #20
    a314:	95180000 	ldrls	r0, [r8, #-0]
    a318:	95120000 	ldrls	r0, [r2, #-0]
    a31c:	a41b0000 	ldrge	r0, [fp], #-0
    a320:	01000024 	tsteq	r0, r4, lsr #32
    a324:	c43c04d3 	ldrtgt	r0, [ip], #-1235	; 0xfffffb2d
    a328:	4b000000 	blmi	a330 <__HEAP_SIZE+0x9330>
    a32c:	45000095 	strmi	r0, [r0, #-149]	; 0xffffff6b
    a330:	1b000095 	blne	a58c <__HEAP_SIZE+0x958c>
    a334:	00000af1 	strdeq	r0, [r0], -r1
    a338:	4004d401 	andmi	sp, r4, r1, lsl #8
    a33c:	00000908 	andeq	r0, r0, r8, lsl #18
    a340:	0000957d 	andeq	r9, r0, sp, ror r5
    a344:	00009577 	andeq	r9, r0, r7, ror r5
    a348:	00284a1c 	eoreq	r4, r8, ip, lsl sl
    a34c:	04d60100 	ldrbeq	r0, [r6], #256	; 0x100
    a350:	00070721 	andeq	r0, r7, r1, lsr #14
    a354:	68910200 	ldmvs	r1, {r9}
    a358:	001a191d 	andseq	r1, sl, sp, lsl r9
    a35c:	04d70100 	ldrbeq	r0, [r7], #256	; 0x100
    a360:	0000fa18 	andeq	pc, r0, r8, lsl sl	; <UNPREDICTABLE>
    a364:	0095ab00 	addseq	sl, r5, r0, lsl #22
    a368:	0095a900 	addseq	sl, r5, r0, lsl #18
    a36c:	00001e00 	andeq	r1, r0, r0, lsl #28
    a370:	18770000 	ldmdane	r7!, {}^	; <UNPREDICTABLE>
    a374:	011f0000 	tsteq	pc, r0
    a378:	007d0251 	rsbseq	r0, sp, r1, asr r2
    a37c:	0352011f 	cmpeq	r2, #-1073741817	; 0xc0000007
    a380:	1f5301f3 	svcne	0x005301f3
    a384:	30015301 	andcc	r5, r1, r1, lsl #6
    a388:	04070000 	streq	r0, [r7], #-0
    a38c:	000000fa 	strdeq	r0, [r0], -sl
    a390:	00090806 	andeq	r0, r9, r6, lsl #16
    a394:	4f012000 	svcmi	0x00012000
    a398:	01000027 	tsteq	r0, r7, lsr #32
    a39c:	010a04bc 			; <UNDEFINED> instruction: 0x010a04bc
	...
    a3a8:	000095be 			; <UNDEFINED> instruction: 0x000095be
    a3ac:	00098101 	andeq	r8, r9, r1, lsl #2
    a3b0:	289e1b00 	ldmcs	lr, {r8, r9, fp, ip}
    a3b4:	bc010000 	stclt	0, cr0, [r1], {-0}
    a3b8:	05542a04 	ldrbeq	r2, [r4, #-2564]	; 0xfffff5fc
    a3bc:	95e20000 	strbls	r0, [r2, #0]!
    a3c0:	95de0000 	ldrbls	r0, [lr]
    a3c4:	6f1b0000 	svcvs	0x001b0000
    a3c8:	01000027 	tsteq	r0, r7, lsr #32
    a3cc:	9a2304bd 	bls	8cb6c8 <__RAM_SIZE+0x7cb6c8>
    a3d0:	04000000 	streq	r0, [r0], #-0
    a3d4:	00000096 	muleq	r0, r6, r0
    a3d8:	1d000096 	stcne	0, cr0, [r0, #-600]	; 0xfffffda8
    a3dc:	0000289d 	muleq	r0, sp, r8
    a3e0:	1904bf01 	stmdbne	r4, {r0, r8, r9, sl, fp, ip, sp, pc}
    a3e4:	0000065e 	andeq	r0, r0, lr, asr r6
    a3e8:	00009626 	andeq	r9, r0, r6, lsr #12
    a3ec:	00009622 	andeq	r9, r0, r2, lsr #12
    a3f0:	00000021 	andeq	r0, r0, r1, lsr #32
    a3f4:	00188600 	andseq	r8, r8, r0, lsl #12
    a3f8:	00002100 	andeq	r2, r0, r0, lsl #2
    a3fc:	18940000 	ldmne	r4, {}	; <UNPREDICTABLE>
    a400:	1a000000 	bne	a408 <__HEAP_SIZE+0x9408>
    a404:	00264001 	eoreq	r4, r6, r1
    a408:	04a70100 	strteq	r0, [r7], #256	; 0x100
    a40c:	009a010c 	addseq	r0, sl, ip, lsl #2
	...
    a418:	96440000 	strbls	r0, [r4], -r0
    a41c:	f3010000 	vhadd.u8	d0, d1, d0
    a420:	1b000009 	blne	a44c <__HEAP_SIZE+0x944c>
    a424:	0000289e 	muleq	r0, lr, r8
    a428:	3304a701 	movwcc	sl, #18177	; 0x4701
    a42c:	00000560 	andeq	r0, r0, r0, ror #10
    a430:	0000966a 	andeq	r9, r0, sl, ror #12
    a434:	00009664 	andeq	r9, r0, r4, ror #12
    a438:	00289d1d 	eoreq	r9, r8, sp, lsl sp
    a43c:	04a90100 	strteq	r0, [r9], #256	; 0x100
    a440:	00065e19 	andeq	r5, r6, r9, lsl lr
    a444:	00969c00 	addseq	r9, r6, r0, lsl #24
    a448:	00969600 	addseq	r9, r6, r0, lsl #12
    a44c:	26011d00 	strcs	r1, [r1], -r0, lsl #26
    a450:	aa010000 	bge	4a458 <__HEAP_SIZE+0x49458>
    a454:	009a1004 	addseq	r1, sl, r4
    a458:	96ca0000 	strbls	r0, [sl], r0
    a45c:	96c80000 	strbls	r0, [r8], r0
    a460:	00210000 	eoreq	r0, r1, r0
    a464:	86000000 	strhi	r0, [r0], -r0
    a468:	21000018 	tstcs	r0, r8, lsl r0
    a46c:	00000000 	andeq	r0, r0, r0
    a470:	00001894 	muleq	r0, r4, r8
    a474:	0a011a00 	beq	50c7c <__HEAP_SIZE+0x4fc7c>
    a478:	01000026 	tsteq	r0, r6, lsr #32
    a47c:	0110048a 	tsteq	r0, sl, lsl #9
    a480:	000000fa 	strdeq	r0, [r0], -sl
	...
    a48c:	000096dd 	ldrdeq	r9, [r0], -sp
    a490:	000a6501 	andeq	r6, sl, r1, lsl #10
    a494:	289e1b00 	ldmcs	lr, {r8, r9, fp, ip}
    a498:	8a010000 	bhi	4a4a0 <__HEAP_SIZE+0x494a0>
    a49c:	05543304 	ldrbeq	r3, [r4, #-772]	; 0xfffffcfc
    a4a0:	97070000 	strls	r0, [r7, -r0]
    a4a4:	96fd0000 	ldrbtls	r0, [sp], r0
    a4a8:	191d0000 	ldmdbne	sp, {}	; <UNPREDICTABLE>
    a4ac:	0100001a 	tsteq	r0, sl, lsl r0
    a4b0:	fa14048c 	blx	50b6e8 <__RAM_SIZE+0x40b6e8>
    a4b4:	4e000000 	cdpmi	0, 0, cr0, cr0, cr0, {0}
    a4b8:	4c000097 	stcmi	0, cr0, [r0], {151}	; 0x97
    a4bc:	1d000097 	stcne	0, cr0, [r0, #-604]	; 0xfffffda4
    a4c0:	0000289d 	muleq	r0, sp, r8
    a4c4:	13048d01 	movwne	r8, #19713	; 0x4d01
    a4c8:	00000658 	andeq	r0, r0, r8, asr r6
    a4cc:	0000976b 	andeq	r9, r0, fp, ror #14
    a4d0:	00009761 	andeq	r9, r0, r1, ror #14
    a4d4:	00000021 	andeq	r0, r0, r1, lsr #32
    a4d8:	00188600 	andseq	r8, r8, r0, lsl #12
    a4dc:	00002100 	andeq	r2, r0, r0, lsl #2
    a4e0:	18940000 	ldmne	r4, {}	; <UNPREDICTABLE>
    a4e4:	22000000 	andcs	r0, r0, #0
    a4e8:	0000254b 	andeq	r2, r0, fp, asr #10
    a4ec:	11045701 	tstne	r4, r1, lsl #14
    a4f0:	0030b401 	eorseq	fp, r0, r1, lsl #8
    a4f4:	00311410 	eorseq	r1, r1, r0, lsl r4
    a4f8:	0097b010 	addseq	fp, r7, r0, lsl r0
    a4fc:	0b170100 	bleq	5ca904 <__RAM_SIZE+0x4ca904>
    a500:	e2230000 	eor	r0, r3, #0
    a504:	f6100030 			; <UNDEFINED> instruction: 0xf6100030
    a508:	e0100030 	ands	r0, r0, r0, lsr r0
    a50c:	1c00000a 	stcne	0, cr0, [r0], {10}
    a510:	00002466 	andeq	r2, r0, r6, ror #8
    a514:	3a046901 	bcc	124920 <__RAM_SIZE+0x24920>
    a518:	000003cb 	andeq	r0, r0, fp, asr #7
    a51c:	8c800305 	stchi	3, cr0, [r0], {5}
    a520:	9a1c3800 	bls	718528 <__RAM_SIZE+0x618528>
    a524:	01000027 	tsteq	r0, r7, lsr #32
    a528:	1734046a 	ldrne	r0, [r4, -sl, ror #8]!
    a52c:	0500000b 	streq	r0, [r0, #-11]
    a530:	008ba403 	addeq	sl, fp, r3, lsl #8
    a534:	30f21e38 	rscscc	r1, r2, r8, lsr lr
    a538:	18a21000 	stmiane	r2!, {ip}
    a53c:	011f0000 	tsteq	pc, r0
    a540:	1f3a0150 	svcne	0x003a0150
    a544:	40015101 	andmi	r5, r1, r1, lsl #2
    a548:	0552011f 	ldrbeq	r0, [r2, #-287]	; 0xfffffee1
    a54c:	008ba403 	addeq	sl, fp, r3, lsl #8
    a550:	53011f38 	movwpl	r1, #7992	; 0x1f38
    a554:	8c800305 	stchi	3, cr0, [r0], {5}
    a558:	021f3800 	andseq	r3, pc, #0, 16
    a55c:	3001007d 	andcc	r0, r1, sp, ror r0
    a560:	bc210000 	stclt	0, cr0, [r1], #-0
    a564:	86100030 			; <UNDEFINED> instruction: 0x86100030
    a568:	21000018 	tstcs	r0, r8, lsl r0
    a56c:	100030c6 	andne	r3, r0, r6, asr #1
    a570:	00001894 	muleq	r0, r4, r8
    a574:	0030d224 	eorseq	sp, r0, r4, lsr #4
    a578:	0018b110 	andseq	fp, r8, r0, lsl r1
    a57c:	000b0600 	andeq	r0, fp, r0, lsl #12
    a580:	50011f00 	andpl	r1, r1, r0, lsl #30
    a584:	00007502 	andeq	r7, r0, r2, lsl #10
    a588:	0030da1e 	eorseq	sp, r0, lr, lsl sl
    a58c:	0018b110 	andseq	fp, r8, r0, lsl r1
    a590:	50011f00 	andpl	r1, r1, r0, lsl #30
    a594:	00007402 	andeq	r7, r0, r2, lsl #8
    a598:	00b80c00 	adcseq	r0, r8, r0, lsl #24
    a59c:	0b270000 	bleq	9ca5a4 <__RAM_SIZE+0x8ca5a4>
    a5a0:	350d0000 	strcc	r0, [sp, #-0]
    a5a4:	9f000000 	svcls	0x00000000
    a5a8:	27772200 	ldrbcs	r2, [r7, -r0, lsl #4]!
    a5ac:	3e010000 	cdpcc	0, 0, cr0, cr1, cr0, {0}
    a5b0:	e0011104 	and	r1, r1, r4, lsl #2
    a5b4:	1010002e 	andsne	r0, r0, lr, lsr #32
    a5b8:	f410002f 			; <UNDEFINED> instruction: 0xf410002f
    a5bc:	01000097 	swpeq	r0, r7, [r0]	; <UNPREDICTABLE>
    a5c0:	00000b7d 	andeq	r0, r0, sp, ror fp
    a5c4:	0027e81d 	eoreq	lr, r7, sp, lsl r8
    a5c8:	04400100 	strbeq	r0, [r0], #-256	; 0xffffff00
    a5cc:	00011714 	andeq	r1, r1, r4, lsl r7
    a5d0:	00981600 	addseq	r1, r8, r0, lsl #12
    a5d4:	00981400 	addseq	r1, r8, r0, lsl #8
    a5d8:	18a81d00 	stmiane	r8!, {r8, sl, fp, ip}
    a5dc:	41010000 	mrsmi	r0, (UNDEF: 1)
    a5e0:	07491204 	strbeq	r1, [r9, -r4, lsl #4]
    a5e4:	982e0000 	stmdals	lr!, {}	; <UNPREDICTABLE>
    a5e8:	982a0000 	stmdals	sl!, {}	; <UNPREDICTABLE>
    a5ec:	f01e0000 			; <UNDEFINED> instruction: 0xf01e0000
    a5f0:	9010002e 	andsls	r0, r0, lr, lsr #32
    a5f4:	1f00000f 	svcne	0x0000000f
    a5f8:	09025101 	stmdbeq	r2, {r0, r8, ip, lr}
    a5fc:	250000ff 	strcs	r0, [r0, #-255]	; 0xffffff01
    a600:	00002801 	andeq	r2, r0, r1, lsl #16
    a604:	1103aa01 	tstne	r3, r1, lsl #20
    a608:	002fa401 	eoreq	sl, pc, r1, lsl #8
    a60c:	00309c10 	eorseq	r9, r0, r0, lsl ip
    a610:	00985010 	addseq	r5, r8, r0, lsl r0
    a614:	0cbb0100 	ldfeqs	f0, [fp]
    a618:	4a1c0000 	bmi	70a620 <__RAM_SIZE+0x60a620>
    a61c:	01000028 	tsteq	r0, r8, lsr #32
    a620:	071d03ac 	ldreq	r0, [sp, -ip, lsr #7]
    a624:	02000007 	andeq	r0, r0, #7
    a628:	9d1d6091 	ldcls	0, cr6, [sp, #-580]	; 0xfffffdbc
    a62c:	01000028 	tsteq	r0, r8, lsr #32
    a630:	581303ad 	ldmdapl	r3, {r0, r2, r3, r5, r7, r8, r9}
    a634:	8a000006 	bhi	a654 <__HEAP_SIZE+0x9654>
    a638:	88000098 	stmdahi	r0, {r3, r4, r7}
    a63c:	1c000098 	stcne	0, cr0, [r0], {152}	; 0x98
    a640:	0000299f 	muleq	r0, pc, r9	; <UNPREDICTABLE>
    a644:	1403ae01 	strne	sl, [r3], #-3585	; 0xfffff1ff
    a648:	000000fa 	strdeq	r0, [r0], -sl
    a64c:	1d5c9102 	ldfnep	f1, [ip, #-8]
    a650:	0000245d 	andeq	r2, r0, sp, asr r4
    a654:	1403af01 	strne	sl, [r3], #-3841	; 0xfffff0ff
    a658:	00000117 	andeq	r0, r0, r7, lsl r1
    a65c:	000098a9 	andeq	r9, r0, r9, lsr #17
    a660:	0000989d 	muleq	r0, sp, r8
    a664:	002fd023 	eoreq	sp, pc, r3, lsr #32
    a668:	002fd810 	eoreq	sp, pc, r0, lsl r8	; <UNPREDICTABLE>
    a66c:	000c0510 	andeq	r0, ip, r0, lsl r5
    a670:	297e1d00 	ldmdbcs	lr!, {r8, sl, fp, ip}^
    a674:	b9010000 	stmdblt	r1, {}	; <UNPREDICTABLE>
    a678:	0cc13803 	stcleq	8, cr3, [r1], {3}
    a67c:	98f50000 	ldmls	r5!, {}^	; <UNPREDICTABLE>
    a680:	98f30000 	ldmls	r3!, {}^	; <UNPREDICTABLE>
    a684:	24000000 	strcs	r0, [r0], #-0
    a688:	10002fc6 	andne	r2, r0, r6, asr #31
    a68c:	000018c0 	andeq	r1, r0, r0, asr #17
    a690:	00000c1e 	andeq	r0, r0, lr, lsl ip
    a694:	0251011f 	subseq	r0, r1, #-1073741817	; 0xc0000007
    a698:	011f6091 			; <UNDEFINED> instruction: 0x011f6091
    a69c:	00300152 	eorseq	r0, r0, r2, asr r1
    a6a0:	002fe624 	eoreq	lr, pc, r4, lsr #12
    a6a4:	0018cf10 	andseq	ip, r8, r0, lsl pc
    a6a8:	000c3200 	andeq	r3, ip, r0, lsl #4
    a6ac:	50011f00 	andpl	r1, r1, r0, lsl #30
    a6b0:	00047402 	andeq	r7, r4, r2, lsl #8
    a6b4:	002fec24 	eoreq	lr, pc, r4, lsr #24
    a6b8:	000d7910 	andeq	r7, sp, r0, lsl r9
    a6bc:	000c4600 	andeq	r4, ip, r0, lsl #12
    a6c0:	50011f00 	andpl	r1, r1, r0, lsl #30
    a6c4:	005c9102 	subseq	r9, ip, r2, lsl #2
    a6c8:	00301e24 	eorseq	r1, r0, r4, lsr #28
    a6cc:	000cc610 	andeq	ip, ip, r0, lsl r6
    a6d0:	000c6000 	andeq	r6, ip, r0
    a6d4:	50011f00 	andpl	r1, r1, r0, lsl #30
    a6d8:	1f007402 	svcne	0x00007402
    a6dc:	75025201 	strvc	r5, [r2, #-513]	; 0xfffffdff
    a6e0:	3a260000 	bcc	98a6e8 <__RAM_SIZE+0x88a6e8>
    a6e4:	70100030 	andsvc	r0, r0, r0, lsr r0
    a6e8:	1f00000c 	svcne	0x0000000c
    a6ec:	74025001 	strvc	r5, [r2], #-1
    a6f0:	4a240000 	bmi	90a6f8 <__RAM_SIZE+0x80a6f8>
    a6f4:	2b100030 	blcs	40a7bc <__RAM_SIZE+0x30a7bc>
    a6f8:	8a000010 	bhi	a740 <__HEAP_SIZE+0x9740>
    a6fc:	1f00000c 	svcne	0x0000000c
    a700:	74025001 	strvc	r5, [r2], #-1
    a704:	52011f00 	andpl	r1, r1, #0, 30
    a708:	00007502 	andeq	r7, r0, r2, lsl #10
    a70c:	00307624 	eorseq	r7, r0, r4, lsr #12
    a710:	000cc610 	andeq	ip, ip, r0, lsl r6
    a714:	000caa00 	andeq	sl, ip, r0, lsl #20
    a718:	50011f00 	andpl	r1, r1, r0, lsl #30
    a71c:	1f007402 	svcne	0x00007402
    a720:	75025201 	strvc	r5, [r2, #-513]	; 0xfffffdff
    a724:	53011f00 	movwpl	r1, #7936	; 0x1f00
    a728:	00007502 	andeq	r7, r0, r2, lsl #10
    a72c:	0030921e 	eorseq	r9, r0, lr, lsl r2
    a730:	0018de10 	andseq	sp, r8, r0, lsl lr
    a734:	50011f00 	andpl	r1, r1, r0, lsl #30
    a738:	00007402 	andeq	r7, r0, r2, lsl #8
    a73c:	b6040700 	strlt	r0, [r4], -r0, lsl #14
    a740:	06000006 	streq	r0, [r0], -r6
    a744:	00000cbb 			; <UNDEFINED> instruction: 0x00000cbb
    a748:	0026d827 	eoreq	sp, r6, r7, lsr #16
    a74c:	037e0100 	cmneq	lr, #0, 2
    a750:	00fa0117 	rscseq	r0, sl, r7, lsl r1
    a754:	2e300000 	cdpcs	0, 3, cr0, cr0, cr0, {0}
    a758:	2e781000 	cdpcs	0, 7, cr1, cr8, cr0, {0}
    a75c:	990a1000 	stmdbls	sl, {ip}
    a760:	79010000 	stmdbvc	r1, {}	; <UNPREDICTABLE>
    a764:	1b00000d 	blne	a7a0 <__HEAP_SIZE+0x97a0>
    a768:	0000289d 	muleq	r0, sp, r8
    a76c:	43037e01 	movwmi	r7, #15873	; 0x3e01
    a770:	0000065e 	andeq	r0, r0, lr, asr r6
    a774:	0000993e 	andeq	r9, r0, lr, lsr r9
    a778:	0000992a 	andeq	r9, r0, sl, lsr #18
    a77c:	00292f1b 	eoreq	r2, r9, fp, lsl pc
    a780:	037f0100 	cmneq	pc, #0, 2
    a784:	00012344 	andeq	r2, r1, r4, asr #6
    a788:	0099da00 	addseq	sp, r9, r0, lsl #20
    a78c:	0099c400 	addseq	ip, r9, r0, lsl #8
    a790:	245d1b00 	ldrbcs	r1, [sp], #-2816	; 0xfffff500
    a794:	80010000 	andhi	r0, r1, r0
    a798:	01234403 			; <UNDEFINED> instruction: 0x01234403
    a79c:	9a720000 	bls	1c8a7a4 <__RAM_SIZE+0x1b8a7a4>
    a7a0:	9a680000 	bls	1a0a7a8 <__RAM_SIZE+0x190a7a8>
    a7a4:	1a1b0000 	bne	6ca7ac <__RAM_SIZE+0x5ca7ac>
    a7a8:	01000024 	tsteq	r0, r4, lsr #32
    a7ac:	23440381 	movtcs	r0, #17281	; 0x4381
    a7b0:	c1000001 	tstgt	r0, r1
    a7b4:	b700009a 			; <UNDEFINED> instruction: 0xb700009a
    a7b8:	1d00009a 	stcne	0, cr0, [r0, #-616]	; 0xfffffd98
    a7bc:	0000253a 	andeq	r2, r0, sl, lsr r5
    a7c0:	14038301 	strne	r8, [r3], #-769	; 0xfffffcff
    a7c4:	000000fa 	strdeq	r0, [r0], -sl
    a7c8:	00009b0c 	andeq	r9, r0, ip, lsl #22
    a7cc:	00009b06 	andeq	r9, r0, r6, lsl #22
    a7d0:	002e5024 	eoreq	r5, lr, r4, lsr #32
    a7d4:	0018ec10 	andseq	lr, r8, r0, lsl ip
    a7d8:	000d6500 	andeq	r6, sp, r0, lsl #10
    a7dc:	51011f00 	tstpl	r1, r0, lsl #30
    a7e0:	5001f305 	andpl	pc, r1, r5, lsl #6
    a7e4:	1e000423 	cdpne	4, 0, cr0, cr0, cr3, {1}
    a7e8:	10002e66 	andne	r2, r0, r6, ror #28
    a7ec:	000018ec 	andeq	r1, r0, ip, ror #17
    a7f0:	0551011f 	ldrbeq	r0, [r1, #-287]	; 0xfffffee1
    a7f4:	235001f3 	cmpcs	r0, #-1073741764	; 0xc000003c
    a7f8:	27000004 	strcs	r0, [r0, -r4]
    a7fc:	0000272a 	andeq	r2, r0, sl, lsr #14
    a800:	17036701 	strne	r6, [r3, -r1, lsl #14]
    a804:	00011701 	andeq	r1, r1, r1, lsl #14
    a808:	002f1000 	eoreq	r1, pc, r0
    a80c:	002f3c10 	eoreq	r3, pc, r0, lsl ip	; <UNPREDICTABLE>
    a810:	009b3810 	addseq	r3, fp, r0, lsl r8
    a814:	0de80100 	stfeqe	f0, [r8]
    a818:	9e1b0000 	cdpls	0, 1, cr0, cr11, cr0, {0}
    a81c:	01000029 	tsteq	r0, r9, lsr #32
    a820:	0e3c0367 	cdpeq	3, 3, cr0, cr12, cr7, {3}
    a824:	5c000009 	stcpl	0, cr0, [r0], {9}
    a828:	5800009b 	stmdapl	r0, {r0, r1, r3, r4, r7}
    a82c:	1d00009b 	stcne	0, cr0, [r0, #-620]	; 0xfffffd94
    a830:	0000245d 	andeq	r2, r0, sp, asr r4
    a834:	14036901 	strne	r6, [r3], #-2305	; 0xfffff6ff
    a838:	00000117 	andeq	r0, r0, r7, lsl r1
    a83c:	00009b82 	andeq	r9, r0, r2, lsl #23
    a840:	00009b7a 	andeq	r9, r0, sl, ror fp
    a844:	00281c1c 	eoreq	r1, r8, ip, lsl ip
    a848:	036a0100 	cmneq	sl, #0, 2
    a84c:	0001172b 	andeq	r1, r1, fp, lsr #14
    a850:	7c030500 	cfstr32vc	mvfx0, [r3], {-0}
    a854:	2138008c 	teqcs	r8, ip, lsl #1
    a858:	10002f18 	andne	r2, r0, r8, lsl pc
    a85c:	000018fb 	strdeq	r1, [r0], -fp
    a860:	002f3221 	eoreq	r3, pc, r1, lsr #4
    a864:	000b2710 	andeq	r2, fp, r0, lsl r7
    a868:	89280000 	stmdbhi	r8!, {}	; <UNPREDICTABLE>
    a86c:	01000029 	tsteq	r0, r9, lsr #32
    a870:	0117034c 	tsteq	r7, ip, asr #6
    a874:	00000117 	andeq	r0, r0, r7, lsl r1
    a878:	10002e10 	andne	r2, r0, r0, lsl lr
    a87c:	10002e30 	andne	r2, r0, r0, lsr lr
    a880:	01007d02 	tsteq	r0, r2, lsl #26
    a884:	00000e31 	andeq	r0, r0, r1, lsr lr
    a888:	00244e1b 	eoreq	r4, r4, fp, lsl lr
    a88c:	034c0100 	movteq	r0, #49408	; 0xc100
    a890:	00090e40 	andeq	r0, r9, r0, asr #28
    a894:	009bbe00 	addseq	fp, fp, r0, lsl #28
    a898:	009bb600 	addseq	fp, fp, r0, lsl #12
    a89c:	27e81d00 	strbcs	r1, [r8, r0, lsl #26]!
    a8a0:	4e010000 	cdpmi	0, 0, cr0, cr1, cr0, {0}
    a8a4:	01171403 	tsteq	r7, r3, lsl #8
    a8a8:	9bfc0000 	blls	fff0a8b0 <__StackTop+0xc7e0a8b0>
    a8ac:	9bf80000 	blls	ffe0a8b4 <__StackTop+0xc7d0a8b4>
    a8b0:	22000000 	andcs	r0, r0, #0
    a8b4:	00002900 	andeq	r2, r0, r0, lsl #18
    a8b8:	11030e01 	tstne	r3, r1, lsl #28
    a8bc:	002f3c01 	eoreq	r3, pc, r1, lsl #24
    a8c0:	002fa410 	eoreq	sl, pc, r0, lsl r4	; <UNPREDICTABLE>
    a8c4:	009c1b10 	addseq	r1, ip, r0, lsl fp
    a8c8:	0f140100 	svceq	0x00140100
    a8cc:	e81b0000 	ldmda	fp, {}	; <UNPREDICTABLE>
    a8d0:	01000027 	tsteq	r0, r7, lsr #32
    a8d4:	233e030e 	teqcs	lr, #939524096	; 0x38000000
    a8d8:	63000001 	movwvs	r0, #1
    a8dc:	5f00009c 	svcpl	0x0000009c
    a8e0:	1b00009c 	blne	ab58 <__HEAP_SIZE+0x9b58>
    a8e4:	0000244f 	andeq	r2, r0, pc, asr #8
    a8e8:	38030f01 	stmdacc	r3, {r0, r8, r9, sl, fp}
    a8ec:	000000fa 	strdeq	r0, [r0], -sl
    a8f0:	00009c89 	andeq	r9, r0, r9, lsl #25
    a8f4:	00009c81 	andeq	r9, r0, r1, lsl #25
    a8f8:	00245d1d 	eoreq	r5, r4, sp, lsl sp
    a8fc:	03110100 	tsteq	r1, #0, 2
    a900:	00011714 	andeq	r1, r1, r4, lsl r7
    a904:	009cce00 	addseq	ip, ip, r0, lsl #28
    a908:	009cc000 	addseq	ip, ip, r0
    a90c:	299f1c00 	ldmibcs	pc, {sl, fp, ip}	; <UNPREDICTABLE>
    a910:	12010000 	andne	r0, r1, #0
    a914:	00fa1403 	rscseq	r1, sl, r3, lsl #8
    a918:	91020000 	mrsls	r0, (UNDEF: 2)
    a91c:	2f48216c 	svccs	0x0048216c
    a920:	190a1000 	stmdbne	sl, {ip}
    a924:	4e240000 	cdpmi	0, 2, cr0, cr4, cr0, {0}
    a928:	7910002f 	ldmdbvc	r0, {r0, r1, r2, r3, r5}
    a92c:	b800000d 	stmdalt	r0, {r0, r2, r3}
    a930:	1f00000e 	svcne	0x0000000e
    a934:	91025001 	tstls	r2, r1
    a938:	7224006c 	eorvc	r0, r4, #108	; 0x6c
    a93c:	1910002f 	ldmdbne	r0, {r0, r1, r2, r3, r5}
    a940:	d5000019 	strle	r0, [r0, #-25]	; 0xffffffe7
    a944:	1f00000e 	svcne	0x0000000e
    a948:	76055101 	strvc	r5, [r5], -r1, lsl #2
    a94c:	1c007500 	cfstr32ne	mvfx7, [r0], {-0}
    a950:	0252011f 	subseq	r0, r2, #-1073741817	; 0xc0000007
    a954:	21000074 	tstcs	r0, r4, ror r0
    a958:	10002f76 	andne	r2, r0, r6, ror pc
    a95c:	00001928 	andeq	r1, r0, r8, lsr #18
    a960:	002f8021 	eoreq	r8, pc, r1, lsr #32
    a964:	00192810 	andseq	r2, r9, r0, lsl r8
    a968:	2f882400 	svccs	0x00882400
    a96c:	0f901000 	svceq	0x00901000
    a970:	0f010000 	svceq	0x00010000
    a974:	011f0000 	tsteq	pc, r0
    a978:	00760250 	rsbseq	r0, r6, r0, asr r2
    a97c:	0251011f 	subseq	r0, r1, #-1073741817	; 0xc0000007
    a980:	21000075 	tstcs	r0, r5, ror r0
    a984:	10002f92 	mulne	r0, r2, pc	; <UNPREDICTABLE>
    a988:	00001937 	andeq	r1, r0, r7, lsr r9
    a98c:	002f9821 	eoreq	r9, pc, r1, lsr #16
    a990:	00192810 	andseq	r2, r9, r0, lsl r8
    a994:	db220000 	blle	88a99c <__RAM_SIZE+0x78a99c>
    a998:	01000027 	tsteq	r0, r7, lsr #32
    a99c:	010c02ec 	smlatteq	ip, ip, r2, r0
    a9a0:	1000309c 	mulne	r0, ip, r0
    a9a4:	100030b2 	strhne	r3, [r0], -r2
    a9a8:	00009d23 	andeq	r9, r0, r3, lsr #26
    a9ac:	000f9001 	andeq	r9, pc, r1
    a9b0:	1e841b00 	vdivne.f64	d1, d4, d0
    a9b4:	ec010000 	stc	0, cr0, [r1], {-0}
    a9b8:	009a0c02 	addseq	r0, sl, r2, lsl #24
    a9bc:	9d530000 	ldclls	0, cr0, [r3, #-0]
    a9c0:	9d4f0000 	stclls	0, cr0, [pc, #-0]	; a9c8 <__HEAP_SIZE+0x99c8>
    a9c4:	e81d0000 	ldmda	sp, {}	; <UNPREDICTABLE>
    a9c8:	01000027 	tsteq	r0, r7, lsr #32
    a9cc:	171402ee 	ldrne	r0, [r4, -lr, ror #5]
    a9d0:	76000001 	strvc	r0, [r0], -r1
    a9d4:	7400009d 	strvc	r0, [r0], #-157	; 0xffffff63
    a9d8:	1c00009d 	stcne	0, cr0, [r0], {157}	; 0x9d
    a9dc:	0000244f 	andeq	r2, r0, pc, asr #8
    a9e0:	1402ef01 	strne	lr, [r2], #-3841	; 0xfffff0ff
    a9e4:	000000fa 	strdeq	r0, [r0], -sl
    a9e8:	24749102 	ldrbtcs	r9, [r4], #-258	; 0xfffffefe
    a9ec:	100030a6 	andne	r3, r0, r6, lsr #1
    a9f0:	00000de8 	andeq	r0, r0, r8, ror #27
    a9f4:	00000f7d 	andeq	r0, r0, sp, ror pc
    a9f8:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    a9fc:	21007491 			; <UNDEFINED> instruction: 0x21007491
    aa00:	100030ac 	andne	r3, r0, ip, lsr #1
    aa04:	00000e31 	andeq	r0, r0, r1, lsr lr
    aa08:	0030b021 	eorseq	fp, r0, r1, lsr #32
    aa0c:	000b7d10 	andeq	r7, fp, r0, lsl sp
    aa10:	c1220000 			; <UNDEFINED> instruction: 0xc1220000
    aa14:	01000025 	tsteq	r0, r5, lsr #32
    aa18:	011102ce 	tsteq	r1, lr, asr #5
    aa1c:	10002ea0 	andne	r2, r0, r0, lsr #29
    aa20:	10002ee0 	andne	r2, r0, r0, ror #29
    aa24:	00009d89 	andeq	r9, r0, r9, lsl #27
    aa28:	00102b01 	andseq	r2, r0, r1, lsl #22
    aa2c:	27e81b00 	strbcs	r1, [r8, r0, lsl #22]!
    aa30:	ce010000 	cdpgt	0, 0, cr0, cr1, cr0, {0}
    aa34:	01233a02 			; <UNDEFINED> instruction: 0x01233a02
    aa38:	9dad0000 	stcls	0, cr0, [sp]
    aa3c:	9da90000 	stcls	0, cr0, [r9]
    aa40:	5d1b0000 	ldcpl	0, cr0, [fp, #-0]
    aa44:	01000024 	tsteq	r0, r4, lsr #32
    aa48:	233a02cf 	teqcs	sl, #-268435444	; 0xf000000c
    aa4c:	cf000001 	svcgt	0x00000001
    aa50:	cb00009d 	blgt	accc <__HEAP_SIZE+0x9ccc>
    aa54:	1d00009d 	stcne	0, cr0, [r0, #-628]	; 0xfffffd8c
    aa58:	0000289d 	muleq	r0, sp, r8
    aa5c:	1902d401 	stmdbne	r2, {r0, sl, ip, lr, pc}
    aa60:	0000065e 	andeq	r0, r0, lr, asr r6
    aa64:	00009def 	andeq	r9, r0, pc, ror #27
    aa68:	00009ded 	andeq	r9, r0, sp, ror #27
    aa6c:	002eb424 	eoreq	fp, lr, r4, lsr #8
    aa70:	0018cf10 	andseq	ip, r8, r0, lsl pc
    aa74:	000ffe00 	andeq	pc, pc, r0, lsl #28
    aa78:	50011f00 	andpl	r1, r1, r0, lsl #30
    aa7c:	00047402 	andeq	r7, r4, r2, lsl #8
    aa80:	002ecc26 	eoreq	ip, lr, r6, lsr #24
    aa84:	00100e10 	andseq	r0, r0, r0, lsl lr
    aa88:	50011f00 	andpl	r1, r1, r0, lsl #30
    aa8c:	00007402 	andeq	r7, r0, r2, lsl #8
    aa90:	002ed81e 	eoreq	sp, lr, lr, lsl r8
    aa94:	00102b10 	andseq	r2, r0, r0, lsl fp
    aa98:	50011f00 	andpl	r1, r1, r0, lsl #30
    aa9c:	1f007402 	svcne	0x00007402
    aaa0:	75025101 	strvc	r5, [r2, #-257]	; 0xfffffeff
    aaa4:	52011f00 	andpl	r1, r1, #0, 30
    aaa8:	00007602 	andeq	r7, r0, r2, lsl #12
    aaac:	278b2200 	strcs	r2, [fp, r0, lsl #4]
    aab0:	bb010000 	bllt	4aab8 <__HEAP_SIZE+0x49ab8>
    aab4:	78011102 	stmdavc	r1, {r1, r8, ip}
    aab8:	a010002e 	andsge	r0, r0, lr, lsr #32
    aabc:	0210002e 	andseq	r0, r0, #46	; 0x2e
    aac0:	0100009e 	swpeq	r0, lr, [r0]	; <UNPREDICTABLE>
    aac4:	000010b2 	strheq	r1, [r0], -r2
    aac8:	00289d1b 	eoreq	r9, r8, fp, lsl sp
    aacc:	02bb0100 	adcseq	r0, fp, #0, 2
    aad0:	00065e31 	andeq	r5, r6, r1, lsr lr
    aad4:	009e2600 	addseq	r2, lr, r0, lsl #12
    aad8:	009e2200 	addseq	r2, lr, r0, lsl #4
    aadc:	261e1b00 	ldrcs	r1, [lr], -r0, lsl #22
    aae0:	bc010000 	stclt	0, cr0, [r1], {-0}
    aae4:	01172c02 	tsteq	r7, r2, lsl #24
    aae8:	9e480000 	cdpls	0, 4, cr0, cr8, cr0, {0}
    aaec:	9e440000 	cdpls	0, 4, cr0, cr4, cr0, {0}
    aaf0:	5d1b0000 	ldcpl	0, cr0, [fp, #-0]
    aaf4:	01000024 	tsteq	r0, r4, lsr #32
    aaf8:	233202bd 	teqcs	r2, #-805306357	; 0xd000000b
    aafc:	6a000001 	bvs	ab08 <__HEAP_SIZE+0x9b08>
    ab00:	6600009e 			; <UNDEFINED> instruction: 0x6600009e
    ab04:	2600009e 			; <UNDEFINED> instruction: 0x2600009e
    ab08:	10002e8c 	andne	r2, r0, ip, lsl #29
    ab0c:	00001095 	muleq	r0, r5, r0
    ab10:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    ab14:	1e000074 	mcrne	0, 0, r0, cr0, cr4, {3}
    ab18:	10002e9a 	mulne	r0, sl, lr
    ab1c:	00000cc6 	andeq	r0, r0, r6, asr #25
    ab20:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    ab24:	011f0074 	tsteq	pc, r4, ror r0	; <UNPREDICTABLE>
    ab28:	00760252 	rsbseq	r0, r6, r2, asr r2
    ab2c:	0253011f 	subseq	r0, r3, #-1073741817	; 0xc0000007
    ab30:	00000075 	andeq	r0, r0, r5, ror r0
    ab34:	28d30129 	ldmcs	r3, {r0, r3, r5, r8}^
    ab38:	ad010000 	stcge	0, cr0, [r1, #-0]
    ab3c:	ad011202 	sfmge	f1, 4, [r1, #-8]
	...
    ab48:	02000000 	andeq	r0, r0, #0
    ab4c:	fc01007d 	stc2	0, cr0, [r1], {125}	; 0x7d
    ab50:	1b000010 	blne	ab98 <__HEAP_SIZE+0x9b98>
    ab54:	0000289e 	muleq	r0, lr, r8
    ab58:	3002ad01 	andcc	sl, r2, r1, lsl #26
    ab5c:	00000554 	andeq	r0, r0, r4, asr r5
    ab60:	00009e8c 	andeq	r9, r0, ip, lsl #29
    ab64:	00009e88 	andeq	r9, r0, r8, lsl #29
    ab68:	00289d1d 	eoreq	r9, r8, sp, lsl sp
    ab6c:	02af0100 	adceq	r0, pc, #0, 2
    ab70:	00065813 	andeq	r5, r6, r3, lsl r8
    ab74:	009eb100 	addseq	fp, lr, r0, lsl #2
    ab78:	009ead00 	addseq	sl, lr, r0, lsl #26
    ab7c:	01290000 			; <UNDEFINED> instruction: 0x01290000
    ab80:	00002501 	andeq	r2, r0, r1, lsl #10
    ab84:	14028f01 	strne	r8, [r2], #-3841	; 0xfffff0ff
    ab88:	0000fa01 	andeq	pc, r0, r1, lsl #20
	...
    ab94:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    ab98:	00116a01 	andseq	r6, r1, r1, lsl #20
    ab9c:	289e1b00 	ldmcs	lr, {r8, r9, fp, ip}
    aba0:	8f010000 	svchi	0x00010000
    aba4:	05543902 	ldrbeq	r3, [r4, #-2306]	; 0xfffff6fe
    aba8:	9eda0000 	cdpls	0, 13, cr0, cr10, cr0, {0}
    abac:	9ed20000 	cdpls	0, 13, cr0, cr2, cr0, {0}
    abb0:	6f2a0000 	svcvs	0x002a0000
    abb4:	01000029 	tsteq	r0, r9, lsr #32
    abb8:	6a3c0290 	bvs	f0b600 <__RAM_SIZE+0xe0b600>
    abbc:	01000011 	tsteq	r0, r1, lsl r0
    abc0:	1a191d51 	bne	65210c <__RAM_SIZE+0x55210c>
    abc4:	92010000 	andls	r0, r1, #0
    abc8:	00fa1802 	rscseq	r1, sl, r2, lsl #16
    abcc:	9f160000 	svcls	0x00160000
    abd0:	9f120000 	svcls	0x00120000
    abd4:	9d1d0000 	ldcls	0, cr0, [sp, #-0]
    abd8:	01000028 	tsteq	r0, r8, lsr #32
    abdc:	58170293 	ldmdapl	r7, {r0, r1, r4, r7, r9}
    abe0:	3e000006 	cdpcc	0, 0, cr0, cr0, cr6, {0}
    abe4:	3600009f 			; <UNDEFINED> instruction: 0x3600009f
    abe8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    abec:	11700407 	cmnne	r0, r7, lsl #8
    abf0:	04070000 	streq	r0, [r7], #-0
    abf4:	00000447 	andeq	r0, r0, r7, asr #8
    abf8:	26f30129 	ldrbtcs	r0, [r3], r9, lsr #2
    abfc:	7e010000 	cdpvc	0, 0, cr0, cr1, cr0, {0}
    ac00:	17011002 	strne	r1, [r1, -r2]
    ac04:	00000001 	andeq	r0, r0, r1
    ac08:	00000000 	andeq	r0, r0, r0
    ac0c:	02000000 	andeq	r0, r0, #0
    ac10:	d501007d 	strle	r0, [r1, #-125]	; 0xffffff83
    ac14:	1b000011 	blne	ac60 <__HEAP_SIZE+0x9c60>
    ac18:	0000289e 	muleq	r0, lr, r8
    ac1c:	33027e01 	movwcc	r7, #11777	; 0x2e01
    ac20:	00000554 	andeq	r0, r0, r4, asr r5
    ac24:	00009f7a 	andeq	r9, r0, sl, ror pc
    ac28:	00009f76 	andeq	r9, r0, r6, ror pc
    ac2c:	00289d1d 	eoreq	r9, r8, sp, lsl sp
    ac30:	02800100 	addeq	r0, r0, #0, 2
    ac34:	00065813 	andeq	r5, r6, r3, lsl r8
    ac38:	009f9f00 	addseq	r9, pc, r0, lsl #30
    ac3c:	009f9b00 	addseq	r9, pc, r0, lsl #22
    ac40:	1a191d00 	bne	652048 <__RAM_SIZE+0x552048>
    ac44:	81010000 	mrshi	r0, (UNDEF: 1)
    ac48:	01171402 	tsteq	r7, r2, lsl #8
    ac4c:	9fc40000 	svcls	0x00c40000
    ac50:	9fc00000 	svcls	0x00c00000
    ac54:	1a000000 	bne	ac5c <__HEAP_SIZE+0x9c5c>
    ac58:	00258b01 	eoreq	r8, r5, r1, lsl #22
    ac5c:	02700100 	rsbseq	r0, r0, #0, 2
    ac60:	010b0111 	tsteq	fp, r1, lsl r1
	...
    ac6c:	9fe30000 	svcls	0x00e30000
    ac70:	31010000 	mrscc	r0, (UNDEF: 1)
    ac74:	1b000012 	blne	acc4 <__HEAP_SIZE+0x9cc4>
    ac78:	0000289e 	muleq	r0, lr, r8
    ac7c:	35027001 	strcc	r7, [r2, #-1]
    ac80:	00000554 	andeq	r0, r0, r4, asr r5
    ac84:	0000a007 	andeq	sl, r0, r7
    ac88:	0000a003 	andeq	sl, r0, r3
    ac8c:	000c051d 	andeq	r0, ip, sp, lsl r5
    ac90:	02720100 	rsbseq	r0, r2, #0, 2
    ac94:	00010b15 	andeq	r0, r1, r5, lsl fp
    ac98:	00a02a00 	adceq	r2, r0, r0, lsl #20
    ac9c:	00a02800 	adceq	r2, r0, r0, lsl #16
    aca0:	00001e00 	andeq	r1, r0, r0, lsl #28
    aca4:	12310000 	eorsne	r0, r1, #0
    aca8:	011f0000 	tsteq	pc, r0
    acac:	01f30350 	mvnseq	r0, r0, asr r3
    acb0:	1a000050 	bne	adf8 <__HEAP_SIZE+0x9df8>
    acb4:	00258c01 	eoreq	r8, r5, r1, lsl #24
    acb8:	02540100 	subseq	r0, r4, #0, 2
    acbc:	00fa0110 	rscseq	r0, sl, r0, lsl r1
	...
    acc8:	a03d0000 	eorsge	r0, sp, r0
    accc:	a3010000 	movwge	r0, #4096	; 0x1000
    acd0:	1b000012 	blne	ad20 <__HEAP_SIZE+0x9d20>
    acd4:	0000289e 	muleq	r0, lr, r8
    acd8:	33025401 	movwcc	r5, #9217	; 0x2401
    acdc:	00000554 	andeq	r0, r0, r4, asr r5
    ace0:	0000a067 	andeq	sl, r0, r7, rrx
    ace4:	0000a05d 	andeq	sl, r0, sp, asr r0
    ace8:	00289d1d 	eoreq	r9, r8, sp, lsl sp
    acec:	02560100 	subseq	r0, r6, #0, 2
    acf0:	00065813 	andeq	r5, r6, r3, lsl r8
    acf4:	00a0b600 	adceq	fp, r0, r0, lsl #12
    acf8:	00a0ac00 	adceq	sl, r0, r0, lsl #24
    acfc:	1a191d00 	bne	652104 <__RAM_SIZE+0x552104>
    ad00:	57010000 	strpl	r0, [r1, -r0]
    ad04:	00fa1402 	rscseq	r1, sl, r2, lsl #8
    ad08:	a0fd0000 	rscsge	r0, sp, r0
    ad0c:	a0fb0000 	rscsge	r0, fp, r0
    ad10:	00210000 	eoreq	r0, r1, r0
    ad14:	86000000 	strhi	r0, [r0], -r0
    ad18:	21000018 	tstcs	r0, r8, lsl r0
    ad1c:	00000000 	andeq	r0, r0, r0
    ad20:	00001894 	muleq	r0, r4, r8
    ad24:	1b012000 	blne	52d2c <__HEAP_SIZE+0x51d2c>
    ad28:	01000029 	tsteq	r0, r9, lsr #32
    ad2c:	010a023b 	tsteq	sl, fp, lsr r2
	...
    ad38:	0000a110 	andeq	sl, r0, r0, lsl r1
    ad3c:	00131101 	andseq	r1, r3, r1, lsl #2
    ad40:	289e1b00 	ldmcs	lr, {r8, r9, fp, ip}
    ad44:	3b010000 	blcc	4ad4c <__HEAP_SIZE+0x49d4c>
    ad48:	05542d02 	ldrbeq	r2, [r4, #-3330]	; 0xfffff2fe
    ad4c:	a1340000 	teqge	r4, r0
    ad50:	a1300000 	teqge	r0, r0
    ad54:	521b0000 	andspl	r0, fp, #0
    ad58:	01000026 	tsteq	r0, r6, lsr #32
    ad5c:	0630023c 			; <UNDEFINED> instruction: 0x0630023c
    ad60:	56000001 	strpl	r0, [r0], -r1
    ad64:	520000a1 	andpl	r0, r0, #161	; 0xa1
    ad68:	1d0000a1 	stcne	0, cr0, [r0, #-644]	; 0xfffffd7c
    ad6c:	0000289d 	muleq	r0, sp, r8
    ad70:	13023e01 	movwne	r3, #11777	; 0x2e01
    ad74:	00000658 	andeq	r0, r0, r8, asr r6
    ad78:	0000a178 	andeq	sl, r0, r8, ror r1
    ad7c:	0000a174 	andeq	sl, r0, r4, ror r1
    ad80:	00000021 	andeq	r0, r0, r1, lsr #32
    ad84:	00188600 	andseq	r8, r8, r0, lsl #12
    ad88:	00002100 	andeq	r2, r0, r0, lsl #2
    ad8c:	18940000 	ldmne	r4, {}	; <UNPREDICTABLE>
    ad90:	29000000 	stmdbcs	r0, {}	; <UNPREDICTABLE>
    ad94:	00288d01 	eoreq	r8, r8, r1, lsl #26
    ad98:	022d0100 	eoreq	r0, sp, #0, 2
    ad9c:	01170110 	tsteq	r7, r0, lsl r1
	...
    ada8:	7d020000 	stcvc	0, cr0, [r2, #-0]
    adac:	135b0100 	cmpne	fp, #0, 2
    adb0:	9e1b0000 	cdpls	0, 1, cr0, cr11, cr0, {0}
    adb4:	01000028 	tsteq	r0, r8, lsr #32
    adb8:	542f022d 	strtpl	r0, [pc], #-557	; adc0 <__HEAP_SIZE+0x9dc0>
    adbc:	9a000005 	bls	add8 <__HEAP_SIZE+0x9dd8>
    adc0:	960000a1 	strls	r0, [r0], -r1, lsr #1
    adc4:	1d0000a1 	stcne	0, cr0, [r0, #-644]	; 0xfffffd7c
    adc8:	0000289d 	muleq	r0, sp, r8
    adcc:	13022f01 	movwne	r2, #12033	; 0x2f01
    add0:	00000658 	andeq	r0, r0, r8, asr r6
    add4:	0000a1bf 			; <UNDEFINED> instruction: 0x0000a1bf
    add8:	0000a1bb 			; <UNDEFINED> instruction: 0x0000a1bb
    addc:	2f012b00 	svccs	0x00012b00
    ade0:	01000023 	tsteq	r0, r3, lsr #32
    ade4:	0112021f 	tsteq	r2, pc, lsl r2
    ade8:	0000051e 	andeq	r0, r0, lr, lsl r5
	...
    adf4:	01007d02 	tsteq	r0, r2, lsl #26
    adf8:	265e011a 			; <UNDEFINED> instruction: 0x265e011a
    adfc:	f3010000 	vhadd.u8	d0, d1, d0
    ae00:	fa011001 	blx	4ee0c <__HEAP_SIZE+0x4de0c>
	...
    ae0c:	e0000000 	and	r0, r0, r0
    ae10:	010000a1 	smlatbeq	r0, r1, r0, r0
    ae14:	00001447 	andeq	r1, r0, r7, asr #8
    ae18:	00289e1b 	eoreq	r9, r8, fp, lsl lr
    ae1c:	01f30100 	mvnseq	r0, r0, lsl #2
    ae20:	0005543b 	andeq	r5, r5, fp, lsr r4
    ae24:	00a23400 	adceq	r3, r2, r0, lsl #8
    ae28:	00a22400 	adceq	r2, r2, r0, lsl #8
    ae2c:	252f1b00 	strcs	r1, [pc, #-2816]!	; a334 <__HEAP_SIZE+0x9334>
    ae30:	f4010000 	vst4.8	{d0-d3}, [r1], r0
    ae34:	01063e01 	tsteq	r6, r1, lsl #28
    ae38:	a2ab0000 	adcge	r0, fp, #0
    ae3c:	a29f0000 	addsge	r0, pc, #0
    ae40:	891b0000 	ldmdbhi	fp, {}	; <UNPREDICTABLE>
    ae44:	01000024 	tsteq	r0, r4, lsr #32
    ae48:	233e01f5 	teqcs	lr, #1073741885	; 0x4000003d
    ae4c:	08000001 	stmdaeq	r0, {r0}
    ae50:	fc0000a3 	stc2	0, cr0, [r0], {163}	; 0xa3
    ae54:	1b0000a2 	blne	b0e4 <__HEAP_SIZE+0xa0e4>
    ae58:	00000af1 	strdeq	r0, [r0], -r1
    ae5c:	4001f601 	andmi	pc, r1, r1, lsl #12
    ae60:	0000090e 	andeq	r0, r0, lr, lsl #18
    ae64:	0000a365 	andeq	sl, r0, r5, ror #6
    ae68:	0000a359 	andeq	sl, r0, r9, asr r3
    ae6c:	0020e11b 	eoreq	lr, r0, fp, lsl r1
    ae70:	01f70100 	mvnseq	r0, r0, lsl #2
    ae74:	0001233e 	andeq	r2, r1, lr, lsr r3
    ae78:	00a3b900 	adceq	fp, r3, r0, lsl #18
    ae7c:	00a3b500 	adceq	fp, r3, r0, lsl #10
    ae80:	1a191d00 	bne	652288 <__RAM_SIZE+0x552288>
    ae84:	f9010000 			; <UNDEFINED> instruction: 0xf9010000
    ae88:	00fa1401 	rscseq	r1, sl, r1, lsl #8
    ae8c:	a3e10000 	mvnge	r0, #0
    ae90:	a3d90000 	bicsge	r0, r9, #0
    ae94:	4a1c0000 	bmi	70ae9c <__RAM_SIZE+0x60ae9c>
    ae98:	01000028 	tsteq	r0, r8, lsr #32
    ae9c:	071d01fa 			; <UNDEFINED> instruction: 0x071d01fa
    aea0:	02000007 	andeq	r0, r0, #7
    aea4:	001e6891 	mulseq	lr, r1, r8
    aea8:	77000000 	strvc	r0, [r0, -r0]
    aeac:	1f000018 	svcne	0x00000018
    aeb0:	74025001 	strvc	r5, [r2], #-1
    aeb4:	51011f00 	tstpl	r1, r0, lsl #30
    aeb8:	1f007d02 	svcne	0x00007d02
    aebc:	f3035201 	vhsub.u8	d5, d3, d1
    aec0:	011f5301 	tsteq	pc, r1, lsl #6
    aec4:	00300153 	eorseq	r0, r0, r3, asr r1
    aec8:	3f011a00 	svccc	0x00011a00
    aecc:	01000029 	tsteq	r0, r9, lsr #32
    aed0:	011001c0 	tsteq	r0, r0, asr #3
    aed4:	000000fa 	strdeq	r0, [r0], -sl
	...
    aee0:	0000a418 	andeq	sl, r0, r8, lsl r4
    aee4:	00153901 	andseq	r3, r5, r1, lsl #18
    aee8:	289e1b00 	ldmcs	lr, {r8, r9, fp, ip}
    aeec:	c0010000 	andgt	r0, r1, r0
    aef0:	05543c01 	ldrbeq	r3, [r4, #-3073]	; 0xfffff3ff
    aef4:	a4760000 	ldrbtge	r0, [r6], #-0
    aef8:	a4680000 	strbtge	r0, [r8], #-0
    aefc:	2f1b0000 	svccs	0x001b0000
    af00:	01000025 	tsteq	r0, r5, lsr #32
    af04:	063f01c1 	ldrteq	r0, [pc], -r1, asr #3
    af08:	df000001 	svcle	0x00000001
    af0c:	d50000a4 	strle	r0, [r0, #-164]	; 0xffffff5c
    af10:	1b0000a4 	blne	b1a8 <__HEAP_SIZE+0xa1a8>
    af14:	00002489 	andeq	r2, r0, r9, lsl #9
    af18:	3f01c201 	svccc	0x0001c201
    af1c:	00000123 	andeq	r0, r0, r3, lsr #2
    af20:	0000a52e 	andeq	sl, r0, lr, lsr #10
    af24:	0000a524 	andeq	sl, r0, r4, lsr #10
    af28:	000af11b 	andeq	pc, sl, fp, lsl r1	; <UNPREDICTABLE>
    af2c:	01c30100 	biceq	r0, r3, r0, lsl #2
    af30:	00090e41 	andeq	r0, r9, r1, asr #28
    af34:	00a57700 	adceq	r7, r5, r0, lsl #14
    af38:	00a57300 	adceq	r7, r5, r0, lsl #6
    af3c:	20e11b00 	rsccs	r1, r1, r0, lsl #22
    af40:	c4010000 	strgt	r0, [r1], #-0
    af44:	01233f01 			; <UNDEFINED> instruction: 0x01233f01
    af48:	a59c0000 	ldrge	r0, [ip]
    af4c:	a5980000 	ldrge	r0, [r8]
    af50:	191d0000 	ldmdbne	sp, {}	; <UNPREDICTABLE>
    af54:	0100001a 	tsteq	r0, sl, lsl r0
    af58:	fa1401c6 	blx	50b678 <__RAM_SIZE+0x40b678>
    af5c:	c8000000 	stmdagt	r0, {}	; <UNPREDICTABLE>
    af60:	bc0000a5 	stclt	0, cr0, [r0], {165}	; 0xa5
    af64:	1c0000a5 	stcne	0, cr0, [r0], {165}	; 0xa5
    af68:	0000284a 	andeq	r2, r0, sl, asr #16
    af6c:	1d01c701 	stcne	7, cr12, [r1, #-4]
    af70:	00000707 	andeq	r0, r0, r7, lsl #14
    af74:	21689102 	cmncs	r8, r2, lsl #2
    af78:	00000000 	andeq	r0, r0, r0
    af7c:	00001945 	andeq	r1, r0, r5, asr #18
    af80:	00000024 	andeq	r0, r0, r4, lsr #32
    af84:	00186800 	andseq	r6, r8, r0, lsl #16
    af88:	00151c00 	andseq	r1, r5, r0, lsl #24
    af8c:	51011f00 	tstpl	r1, r0, lsl #30
    af90:	1f007d02 	svcne	0x00007d02
    af94:	30015201 	andcc	r5, r1, r1, lsl #4
    af98:	0153011f 	cmpeq	r3, pc, lsl r1
    af9c:	001e0030 	andseq	r0, lr, r0, lsr r0
    afa0:	68000000 	stmdavs	r0, {}	; <UNPREDICTABLE>
    afa4:	1f000018 	svcne	0x00000018
    afa8:	7d025101 	stfvcs	f5, [r2, #-4]
    afac:	52011f00 	andpl	r1, r1, #0, 30
    afb0:	06009103 	streq	r9, [r0], -r3, lsl #2
    afb4:	0153011f 	cmpeq	r3, pc, lsl r1
    afb8:	22000030 	andcs	r0, r0, #48	; 0x30
    afbc:	0000268e 	andeq	r2, r0, lr, lsl #13
    afc0:	1101a101 	tstne	r1, r1, lsl #2
    afc4:	00000001 	andeq	r0, r0, r1
    afc8:	00000000 	andeq	r0, r0, r0
    afcc:	00a61600 	adceq	r1, r6, r0, lsl #12
    afd0:	15e20100 	strbne	r0, [r2, #256]!	; 0x100
    afd4:	981b0000 	ldmdals	fp, {}	; <UNPREDICTABLE>
    afd8:	01000024 	tsteq	r0, r4, lsr #32
    afdc:	b33b01a1 	teqlt	fp, #1073741864	; 0x40000028
    afe0:	3a000000 	bcc	afe8 <__HEAP_SIZE+0x9fe8>
    afe4:	360000a6 	strcc	r0, [r0], -r6, lsr #1
    afe8:	1b0000a6 	blne	b288 <__HEAP_SIZE+0xa288>
    afec:	00002427 	andeq	r2, r0, r7, lsr #8
    aff0:	3901a201 	stmdbcc	r1, {r0, r9, sp, pc}
    aff4:	00000123 	andeq	r0, r0, r3, lsr #2
    aff8:	0000a65c 	andeq	sl, r0, ip, asr r6
    affc:	0000a658 	andeq	sl, r0, r8, asr r6
    b000:	0026521b 	eoreq	r5, r6, fp, lsl r2
    b004:	01a30100 			; <UNDEFINED> instruction: 0x01a30100
    b008:	00010639 	andeq	r0, r1, r9, lsr r6
    b00c:	00a67e00 	adceq	r7, r6, r0, lsl #28
    b010:	00a67a00 	adceq	r7, r6, r0, lsl #20
    b014:	28531b00 	ldmdacs	r3, {r8, r9, fp, ip}^
    b018:	a4010000 	strge	r0, [r1], #-0
    b01c:	009c3501 	addseq	r3, ip, r1, lsl #10
    b020:	a6a00000 	strtge	r0, [r0], r0
    b024:	a69c0000 	ldrge	r0, [ip], r0
    b028:	3b2a0000 	blcc	a8b030 <__RAM_SIZE+0x98b030>
    b02c:	01000024 	tsteq	r0, r4, lsr #32
    b030:	d34001a5 	movtle	r0, #421	; 0x1a5
    b034:	02000005 	andeq	r0, r0, #5
    b038:	f62a0091 			; <UNDEFINED> instruction: 0xf62a0091
    b03c:	01000025 	tsteq	r0, r5, lsr #32
    b040:	583201a6 	ldmdapl	r2!, {r1, r2, r5, r7, r8}
    b044:	02000006 	andeq	r0, r0, #6
    b048:	00210491 	mlaeq	r1, r1, r4, r0
    b04c:	65000000 	strvs	r0, [r0, #-0]
    b050:	1e00000a 	cdpne	0, 0, cr0, cr0, cr10, {0}
    b054:	00000000 	andeq	r0, r0, r0
    b058:	00001954 	andeq	r1, r0, r4, asr r9
    b05c:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    b060:	00000474 	andeq	r0, r0, r4, ror r4
    b064:	25ae011a 	strcs	r0, [lr, #282]!	; 0x11a
    b068:	72010000 	andvc	r0, r1, #0
    b06c:	54011701 	strpl	r1, [r1], #-1793	; 0xfffff8ff
    b070:	00000005 	andeq	r0, r0, r5
    b074:	00000000 	andeq	r0, r0, r0
    b078:	be000000 	cdplt	0, 0, cr0, cr0, cr0, {0}
    b07c:	010000a6 	smlatbeq	r0, r6, r0, r0
    b080:	000016c0 	andeq	r1, r0, r0, asr #13
    b084:	0024981b 	eoreq	r9, r4, fp, lsl r8
    b088:	01720100 	cmneq	r2, r0, lsl #2
    b08c:	0000b33e 	andeq	fp, r0, lr, lsr r3
    b090:	00a6fa00 	adceq	pc, r6, r0, lsl #20
    b094:	00a6f600 	adceq	pc, r6, r0, lsl #12
    b098:	24271b00 	strtcs	r1, [r7], #-2816	; 0xfffff500
    b09c:	73010000 	movwvc	r0, #4096	; 0x1000
    b0a0:	01233c01 			; <UNDEFINED> instruction: 0x01233c01
    b0a4:	a71f0000 	ldrge	r0, [pc, -r0]
    b0a8:	a71b0000 	ldrge	r0, [fp, -r0]
    b0ac:	521b0000 	andspl	r0, fp, #0
    b0b0:	01000026 	tsteq	r0, r6, lsr #32
    b0b4:	063c0174 			; <UNDEFINED> instruction: 0x063c0174
    b0b8:	44000001 	strmi	r0, [r0], #-1
    b0bc:	400000a7 	andmi	r0, r0, r7, lsr #1
    b0c0:	1b0000a7 	blne	b364 <__HEAP_SIZE+0xa364>
    b0c4:	00002853 	andeq	r2, r0, r3, asr r8
    b0c8:	38017501 	stmdacc	r1, {r0, r8, sl, ip, sp, lr}
    b0cc:	0000009c 	muleq	r0, ip, r0
    b0d0:	0000a769 	andeq	sl, r0, r9, ror #14
    b0d4:	0000a765 	andeq	sl, r0, r5, ror #14
    b0d8:	00243b2a 	eoreq	r3, r4, sl, lsr #22
    b0dc:	01760100 	cmneq	r6, r0, lsl #2
    b0e0:	0005d343 	andeq	sp, r5, r3, asr #6
    b0e4:	00910200 	addseq	r0, r1, r0, lsl #4
    b0e8:	0029702a 	eoreq	r7, r9, sl, lsr #32
    b0ec:	01770100 	cmneq	r7, r0, lsl #2
    b0f0:	0011703b 	andseq	r7, r1, fp, lsr r0
    b0f4:	04910200 	ldreq	r0, [r1], #512	; 0x200
    b0f8:	0025f61d 	eoreq	pc, r5, sp, lsl r6	; <UNPREDICTABLE>
    b0fc:	01790100 	cmneq	r9, r0, lsl #2
    b100:	00065817 	andeq	r5, r6, r7, lsl r8
    b104:	00a78c00 	adceq	r8, r7, r0, lsl #24
    b108:	00a78a00 	adceq	r8, r7, r0, lsl #20
    b10c:	00001e00 	andeq	r1, r0, r0, lsl #28
    b110:	15390000 	ldrne	r0, [r9, #-0]!
    b114:	011f0000 	tsteq	pc, r0
    b118:	01f30350 	mvnseq	r0, r0, asr r3
    b11c:	51011f50 	tstpl	r1, r0, asr pc
    b120:	5101f303 	tstpl	r1, r3, lsl #6	; <UNPREDICTABLE>
    b124:	0352011f 	cmpeq	r2, #-1073741817	; 0xc0000007
    b128:	1f5201f3 	svcne	0x005201f3
    b12c:	f3035301 	vcgt.u8	d5, d3, d1
    b130:	021f5301 	andseq	r5, pc, #67108864	; 0x4000000
    b134:	7502007d 	strvc	r0, [r2, #-125]	; 0xffffff83
    b138:	7d021f00 	stcvc	15, cr1, [r2, #-0]
    b13c:	00740204 	rsbseq	r0, r4, r4, lsl #4
    b140:	011a0000 	tsteq	sl, r0
    b144:	0000271d 	andeq	r2, r0, sp, lsl r7
    b148:	17015001 	strne	r5, [r1, -r1]
    b14c:	00055401 	andeq	r5, r5, r1, lsl #8
	...
    b158:	00a79f00 	adceq	r9, r7, r0, lsl #30
    b15c:	179f0100 	ldrne	r0, [pc, r0, lsl #2]
    b160:	981b0000 	ldmdals	fp, {}	; <UNPREDICTABLE>
    b164:	01000024 	tsteq	r0, r4, lsr #32
    b168:	b3380150 	teqlt	r8, #80, 2
    b16c:	db000000 	blle	b174 <__HEAP_SIZE+0xa174>
    b170:	d70000a7 	strle	r0, [r0, -r7, lsr #1]
    b174:	1b0000a7 	blne	b418 <__HEAP_SIZE+0xa418>
    b178:	00002427 	andeq	r2, r0, r7, lsr #8
    b17c:	36015101 	strcc	r5, [r1], -r1, lsl #2
    b180:	00000123 	andeq	r0, r0, r3, lsr #2
    b184:	0000a7fd 	strdeq	sl, [r0], -sp
    b188:	0000a7f9 	strdeq	sl, [r0], -r9
    b18c:	0026521b 	eoreq	r5, r6, fp, lsl r2
    b190:	01520100 	cmpeq	r2, r0, lsl #2
    b194:	00010636 	andeq	r0, r1, r6, lsr r6
    b198:	00a81f00 	adceq	r1, r8, r0, lsl #30
    b19c:	00a81b00 	adceq	r1, r8, r0, lsl #22
    b1a0:	28531b00 	ldmdacs	r3, {r8, r9, fp, ip}^
    b1a4:	53010000 	movwpl	r0, #4096	; 0x1000
    b1a8:	009c3201 	addseq	r3, ip, r1, lsl #4
    b1ac:	a8410000 	stmdage	r1, {}^	; <UNPREDICTABLE>
    b1b0:	a83d0000 	ldmdage	sp!, {}	; <UNPREDICTABLE>
    b1b4:	3b2a0000 	blcc	a8b1bc <__RAM_SIZE+0x98b1bc>
    b1b8:	01000024 	tsteq	r0, r4, lsr #32
    b1bc:	d33d0154 	teqle	sp, #84, 2
    b1c0:	02000005 	andeq	r0, r0, #5
    b1c4:	f61d0091 			; <UNDEFINED> instruction: 0xf61d0091
    b1c8:	01000025 	tsteq	r0, r5, lsr #32
    b1cc:	58170156 	ldmdapl	r7, {r1, r2, r4, r6, r8}
    b1d0:	63000006 	movwvs	r0, #6
    b1d4:	5f0000a8 	svcpl	0x000000a8
    b1d8:	240000a8 	strcs	r0, [r0], #-168	; 0xffffff58
    b1dc:	00000000 	andeq	r0, r0, r0
    b1e0:	00001963 	andeq	r1, r0, r3, ror #18
    b1e4:	0000176d 	andeq	r1, r0, sp, ror #14
    b1e8:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    b1ec:	1e002808 	cdpne	8, 0, cr2, cr0, cr8, {0}
    b1f0:	00000000 	andeq	r0, r0, r0
    b1f4:	00001539 	andeq	r1, r0, r9, lsr r5
    b1f8:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    b1fc:	011f0074 	tsteq	pc, r4, ror r0	; <UNPREDICTABLE>
    b200:	00780251 	rsbseq	r0, r8, r1, asr r2
    b204:	0252011f 	subseq	r0, r2, #-1073741817	; 0xc0000007
    b208:	011f0077 	tsteq	pc, r7, ror r0	; <UNPREDICTABLE>
    b20c:	00750253 	rsbseq	r0, r5, r3, asr r2
    b210:	007d021f 	rsbseq	r0, sp, pc, lsl r2
    b214:	06009103 	streq	r9, [r0], -r3, lsl #2
    b218:	047d021f 	ldrbteq	r0, [sp], #-543	; 0xfffffde1
    b21c:	00007602 	andeq	r7, r0, r2, lsl #12
    b220:	03012c00 	movweq	r2, #7168	; 0x1c00
    b224:	01000017 	tsteq	r0, r7, lsl r0
    b228:	fa0110ed 	blx	4f5e4 <__HEAP_SIZE+0x4e5e4>
    b22c:	14000000 	strne	r0, [r0], #-0
    b230:	70100031 	andsvc	r0, r0, r1, lsr r0
    b234:	81100031 	tsthi	r0, r1, lsr r0
    b238:	010000a8 	smlatbeq	r0, r8, r0, r0
    b23c:	00001862 	andeq	r1, r0, r2, ror #16
    b240:	001a192d 	andseq	r1, sl, sp, lsr #18
    b244:	14ef0100 	strbtne	r0, [pc], #256	; b24c <__HEAP_SIZE+0xa24c>
    b248:	000000fa 	strdeq	r0, [r0], -sl
    b24c:	0000a8bf 			; <UNDEFINED> instruction: 0x0000a8bf
    b250:	0000a8b9 			; <UNDEFINED> instruction: 0x0000a8b9
    b254:	00312223 	eorseq	r2, r1, r3, lsr #4
    b258:	00315410 	eorseq	r5, r1, r0, lsl r4
    b25c:	00185810 	andseq	r5, r8, r0, lsl r8
    b260:	1ee11c00 	cdpne	12, 14, cr1, cr1, cr0, {0}
    b264:	22010000 	andcs	r0, r1, #0
    b268:	18622401 	stmdane	r2!, {r0, sl, sp}^
    b26c:	91020000 	mrsls	r0, (UNDEF: 2)
    b270:	1b461c6c 	blne	1192428 <__RAM_SIZE+0x1092428>
    b274:	23010000 	movwcs	r0, #4096	; 0x1000
    b278:	05362301 	ldreq	r2, [r6, #-769]!	; 0xfffffcff
    b27c:	91020000 	mrsls	r0, (UNDEF: 2)
    b280:	20a91c70 	adccs	r1, r9, r0, ror ip
    b284:	24010000 	strcs	r0, [r1], #-0
    b288:	00292c01 	eoreq	r2, r9, r1, lsl #24
    b28c:	91020000 	mrsls	r0, (UNDEF: 2)
    b290:	31322474 	teqcc	r2, r4, ror r4
    b294:	19711000 	ldmdbne	r1!, {ip}^
    b298:	182f0000 	stmdane	pc!, {}	; <UNPREDICTABLE>
    b29c:	011f0000 	tsteq	pc, r0
    b2a0:	6c910250 	lfmvs	f0, 4, [r1], {80}	; 0x50
    b2a4:	0251011f 	subseq	r0, r1, #-1073741817	; 0xc0000007
    b2a8:	011f7091 			; <UNDEFINED> instruction: 0x011f7091
    b2ac:	74910252 	ldrvc	r0, [r1], #594	; 0x252
    b2b0:	314a1e00 	cmpcc	sl, r0, lsl #28
    b2b4:	19801000 	stmibne	r0, {ip}
    b2b8:	011f0000 	tsteq	pc, r0
    b2bc:	9d030550 	cfstr32ls	mvfx0, [r3, #-320]	; 0xfffffec0
    b2c0:	1f100030 	svcne	0x00100030
    b2c4:	03055101 	movweq	r5, #20737	; 0x5101
    b2c8:	10005ba0 	andne	r5, r0, r0, lsr #23
    b2cc:	0253011f 	subseq	r0, r3, #-1073741817	; 0xc0000007
    b2d0:	021f0074 	andseq	r0, pc, #116	; 0x74
    b2d4:	3401007d 	strcc	r0, [r1], #-125	; 0xffffff83
    b2d8:	1c210000 	stcne	0, cr0, [r1], #-0
    b2dc:	65100031 	ldrvs	r0, [r0, #-49]	; 0xffffffcf
    b2e0:	0000000a 	andeq	r0, r0, sl
    b2e4:	02dc0407 	sbcseq	r0, ip, #117440512	; 0x7000000
    b2e8:	012e0000 			; <UNDEFINED> instruction: 0x012e0000
    b2ec:	000df201 	andeq	pc, sp, r1, lsl #4
    b2f0:	000df200 	andeq	pc, sp, r0, lsl #4
    b2f4:	02ae0a00 	adceq	r0, lr, #0, 20
    b2f8:	01012e0c 	tsteq	r1, ip, lsl #28
    b2fc:	00000b51 	andeq	r0, r0, r1, asr fp
    b300:	00000b51 	andeq	r0, r0, r1, asr fp
    b304:	0c05510a 	stfeqs	f5, [r5], {10}
    b308:	d301012f 	movwle	r0, #4399	; 0x112f
    b30c:	d300000b 	movwle	r0, #11
    b310:	0600000b 	streq	r0, [r0], -fp
    b314:	012f0d71 			; <UNDEFINED> instruction: 0x012f0d71
    b318:	000a4301 	andeq	r4, sl, r1, lsl #6
    b31c:	000a4300 	andeq	r4, sl, r0, lsl #6
    b320:	0d720600 	ldcleq	6, cr0, [r2, #-0]
    b324:	0201012e 	andeq	r0, r1, #-2147483637	; 0x8000000b
    b328:	02000012 	andeq	r0, r0, #18
    b32c:	0a000012 	beq	b37c <__HEAP_SIZE+0xa37c>
    b330:	2e13064f 	cfmsub32cs	mvax2, mvfx0, mvfx3, mvfx15
    b334:	099b0101 	ldmibeq	fp, {r0, r8}
    b338:	099b0000 	ldmibeq	fp, {}	; <UNPREDICTABLE>
    b33c:	b9080000 	stmdblt	r8, {}	; <UNPREDICTABLE>
    b340:	012e0601 			; <UNDEFINED> instruction: 0x012e0601
    b344:	000ab701 	andeq	fp, sl, r1, lsl #14
    b348:	000ab700 	andeq	fp, sl, r0, lsl #14
    b34c:	03910a00 	orrseq	r0, r1, #0, 20
    b350:	01012e0c 	tsteq	r1, ip, lsl #28
    b354:	00000a1c 	andeq	r0, r0, ip, lsl sl
    b358:	00000a1c 	andeq	r0, r0, ip, lsl sl
    b35c:	0d01f708 	stceq	7, cr15, [r1, #-32]	; 0xffffffe0
    b360:	c101012f 	tstgt	r1, pc, lsr #2
    b364:	c1000011 	tstgt	r0, r1, lsl r0
    b368:	0c000011 	stceq	0, cr0, [r0], {17}
    b36c:	012e06b8 			; <UNDEFINED> instruction: 0x012e06b8
    b370:	000a3701 	andeq	r3, sl, r1, lsl #14
    b374:	000a3700 	andeq	r3, sl, r0, lsl #14
    b378:	01d10800 	bicseq	r0, r1, r0, lsl #16
    b37c:	01012e06 	tsteq	r1, r6, lsl #28
    b380:	00001c91 	muleq	r0, r1, ip
    b384:	00001c91 	muleq	r0, r1, ip
    b388:	0c06a409 	cfstrseq	mvf10, [r6], {9}
    b38c:	1c01012e 	stfnes	f0, [r1], {46}	; 0x2e
    b390:	1c00000d 	stcne	0, cr0, [r0], {13}
    b394:	0900000d 	stmdbeq	r0, {r0, r2, r3}
    b398:	2e06065b 	mcrcs	6, 0, r0, cr6, cr11, {2}
    b39c:	11330101 	teqne	r3, r1, lsl #2
    b3a0:	11330000 	teqne	r3, r0
    b3a4:	f60a0000 			; <UNDEFINED> instruction: 0xf60a0000
    b3a8:	012e0606 			; <UNDEFINED> instruction: 0x012e0606
    b3ac:	00117701 	andseq	r7, r1, r1, lsl #14
    b3b0:	00117700 	andseq	r7, r1, r0, lsl #14
    b3b4:	06930900 	ldreq	r0, [r3], r0, lsl #18
    b3b8:	01012f0c 	tsteq	r1, ip, lsl #30
    b3bc:	00000a7e 	andeq	r0, r0, lr, ror sl
    b3c0:	00000a7e 	andeq	r0, r0, lr, ror sl
    b3c4:	2e0d6f06 	cdpcs	15, 0, cr6, cr13, cr6, {0}
    b3c8:	14ff0101 	ldrbtne	r0, [pc], #257	; b3d0 <__HEAP_SIZE+0xa3d0>
    b3cc:	14ff0000 	ldrbtne	r0, [pc], #0	; b3d4 <__HEAP_SIZE+0xa3d4>
    b3d0:	14090000 	strne	r0, [r9], #-0
    b3d4:	012e0c0e 			; <UNDEFINED> instruction: 0x012e0c0e
    b3d8:	00096101 	andeq	r6, r9, r1, lsl #2
    b3dc:	00096100 	andeq	r6, r9, r0, lsl #2
    b3e0:	01c40800 	biceq	r0, r4, r0, lsl #16
    b3e4:	01012f06 	tsteq	r1, r6, lsl #30
    b3e8:	00000cf8 	strdeq	r0, [r0], -r8
    b3ec:	00000cf8 	strdeq	r0, [r0], -r8
    b3f0:	2e08b50c 	cfsh32cs	mvfx11, mvfx8, #12
    b3f4:	176c0101 	strbne	r0, [ip, -r1, lsl #2]!
    b3f8:	176c0000 	strbne	r0, [ip, -r0]!
    b3fc:	750b0000 	strvc	r0, [fp, #-0]
    b400:	012e0a05 			; <UNDEFINED> instruction: 0x012e0a05
    b404:	00174501 	andseq	r4, r7, r1, lsl #10
    b408:	00174500 	andseq	r4, r7, r0, lsl #10
    b40c:	01fd0900 	mvnseq	r0, r0, lsl #18
    b410:	06150012 			; <UNDEFINED> instruction: 0x06150012
    b414:	00020000 	andeq	r0, r2, r0
    b418:	00001580 	andeq	r1, r0, r0, lsl #11
    b41c:	01890104 	orreq	r0, r9, r4, lsl #2
    b420:	900c0000 	andls	r0, ip, r0
    b424:	8500002a 	strhi	r0, [r0, #-42]	; 0xffffffd6
    b428:	08000003 	stmdaeq	r0, {r0, r1}
    b42c:	0000000b 	andeq	r0, r0, fp
    b430:	00000000 	andeq	r0, r0, r0
    b434:	9c000000 	stcls	0, cr0, [r0], {-0}
    b438:	0200007b 	andeq	r0, r0, #123	; 0x7b
    b43c:	00000504 	andeq	r0, r0, r4, lsl #10
    b440:	3a17d102 	bcc	5ff850 <__RAM_SIZE+0x4ff850>
    b444:	03000000 	movweq	r0, #0
    b448:	00000029 	andeq	r0, r0, r9, lsr #32
    b44c:	c7070404 	strgt	r0, [r7, -r4, lsl #8]
    b450:	05000002 	streq	r0, [r0, #-2]
    b454:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
    b458:	08040074 	stmdaeq	r4, {r2, r4, r5, r6}
    b45c:	00012705 	andeq	r2, r1, r5, lsl #14
    b460:	04080400 	streq	r0, [r8], #-1024	; 0xfffffc00
    b464:	00000063 	andeq	r0, r0, r3, rrx
    b468:	73060104 	movwvc	r0, #24836	; 0x6104
    b46c:	02000002 	andeq	r0, r0, #2
    b470:	0000017f 	andeq	r0, r0, pc, ror r1
    b474:	69182b03 	ldmdbvs	r8, {r0, r1, r8, r9, fp, sp}
    b478:	04000000 	streq	r0, [r0], #-0
    b47c:	02710801 	rsbseq	r0, r1, #65536	; 0x10000
    b480:	02040000 	andeq	r0, r4, #0
    b484:	00003205 	andeq	r3, r0, r5, lsl #4
    b488:	07020400 	streq	r0, [r2, -r0, lsl #8]
    b48c:	0000031a 	andeq	r0, r0, sl, lsl r3
    b490:	2c050404 	cfstrscs	mvf0, [r5], {4}
    b494:	02000001 	andeq	r0, r0, #1
    b498:	0000006f 	andeq	r0, r0, pc, rrx
    b49c:	91194f03 	tstls	r9, r3, lsl #30
    b4a0:	04000000 	streq	r0, [r0], #-0
    b4a4:	02c20704 	sbceq	r0, r2, #4, 14	; 0x100000
    b4a8:	08040000 	stmdaeq	r4, {}	; <UNPREDICTABLE>
    b4ac:	0002bd07 	andeq	fp, r2, r7, lsl #26
    b4b0:	04040600 	streq	r0, [r4], #-1536	; 0xfffffa00
    b4b4:	027a0801 	rsbseq	r0, sl, #65536	; 0x10000
    b4b8:	81020000 	mrshi	r0, (UNDEF: 2)
    b4bc:	04000001 	streq	r0, [r0], #-1
    b4c0:	005d1318 	subseq	r1, sp, r8, lsl r3
    b4c4:	71020000 	mrsvc	r0, (UNDEF: 2)
    b4c8:	04000000 	streq	r0, [r0], #-0
    b4cc:	00851430 	addeq	r1, r5, r0, lsr r4
    b4d0:	20020000 	andcs	r0, r2, r0
    b4d4:	05000009 	streq	r0, [r0, #-9]
    b4d8:	00b41a51 	adcseq	r1, r4, r1, asr sl
    b4dc:	04070000 	streq	r0, [r7], #-0
    b4e0:	000000a8 	andeq	r0, r0, r8, lsr #1
    b4e4:	0029c808 	eoreq	ip, r9, r8, lsl #16
    b4e8:	94061c00 	strls	r1, [r6], #-3072	; 0xfffff400
    b4ec:	00014910 	andeq	r4, r1, r0, lsl r9
    b4f0:	2b750900 	blcs	1d4d8f8 <__RAM_SIZE+0x1c4d8f8>
    b4f4:	96060000 	strls	r0, [r6], -r0
    b4f8:	0000290c 	andeq	r2, r0, ip, lsl #18
    b4fc:	00230200 	eoreq	r0, r3, r0, lsl #4
    b500:	002bc109 	eoreq	ip, fp, r9, lsl #2
    b504:	0c970600 	ldceq	6, cr0, [r7], {0}
    b508:	00000029 	andeq	r0, r0, r9, lsr #32
    b50c:	09042302 	stmdbeq	r4, {r1, r8, r9, sp}
    b510:	00002a70 	andeq	r2, r0, r0, ror sl
    b514:	290c9806 	stmdbcs	ip, {r1, r2, fp, ip, pc}
    b518:	02000000 	andeq	r0, r0, #0
    b51c:	1f090823 	svcne	0x00090823
    b520:	0600002a 	streq	r0, [r0], -sl, lsr #32
    b524:	00290c99 	mlaeq	r9, r9, ip, r0
    b528:	23020000 	movwcs	r0, #8192	; 0x2000
    b52c:	29d3090c 	ldmibcs	r3, {r2, r3, r8, fp}^
    b530:	9a060000 	bls	18b538 <__RAM_SIZE+0x8b538>
    b534:	0000290c 	andeq	r2, r0, ip, lsl #18
    b538:	10230200 	eorne	r0, r3, r0, lsl #4
    b53c:	002b5609 	eoreq	r5, fp, r9, lsl #12
    b540:	0c9b0600 	ldceq	6, cr0, [fp], {0}
    b544:	00000029 	andeq	r0, r0, r9, lsr #32
    b548:	09142302 	ldmdbeq	r4, {r1, r8, r9, sp}
    b54c:	00002c0b 	andeq	r2, r0, fp, lsl #24
    b550:	290c9c06 	stmdbcs	ip, {r1, r2, sl, fp, ip, pc}
    b554:	02000000 	andeq	r0, r0, #0
    b558:	02001823 	andeq	r1, r0, #2293760	; 0x230000
    b55c:	000029f2 	strdeq	r2, [r0], -r2	; <UNPREDICTABLE>
    b560:	d2039d06 	andle	r9, r3, #384	; 0x180
    b564:	0a000000 	beq	b56c <__HEAP_SIZE+0xa56c>
    b568:	000000a8 	andeq	r0, r0, r8, lsr #1
    b56c:	00000166 	andeq	r0, r0, r6, ror #2
    b570:	00003a0b 	andeq	r3, r0, fp, lsl #20
    b574:	007fff00 	rsbseq	pc, pc, r0, lsl #30
    b578:	0000250c 	andeq	r2, r0, ip, lsl #10
    b57c:	145d0100 	ldrbne	r0, [sp], #-256	; 0xffffff00
    b580:	00000155 	andeq	r0, r0, r5, asr r1
    b584:	54080101 	strpl	r0, [r8], #-257	; 0xfffffeff
    b588:	0800002a 	stmdaeq	r0, {r1, r3, r5}
    b58c:	a0106401 	andsge	r6, r0, r1, lsl #8
    b590:	09000001 	stmdbeq	r0, {r0}
    b594:	000029fe 	strdeq	r2, [r0], -lr
    b598:	a01b6601 	andsge	r6, fp, r1, lsl #12
    b59c:	02000001 	andeq	r0, r0, #1
    b5a0:	24090023 	strcs	r0, [r9], #-35	; 0xffffffdd
    b5a4:	0100002c 	tsteq	r0, ip, lsr #32
    b5a8:	00290c67 	eoreq	r0, r9, r7, ror #24
    b5ac:	23020000 	movwcs	r0, #8192	; 0x2000
    b5b0:	04070004 	streq	r0, [r7], #-4
    b5b4:	00000174 	andeq	r0, r0, r4, ror r1
    b5b8:	002b4a02 	eoreq	r4, fp, r2, lsl #20
    b5bc:	03680100 	cmneq	r8, #0, 2
    b5c0:	00000174 	andeq	r0, r0, r4, ror r1
    b5c4:	002b900d 	eoreq	r9, fp, sp
    b5c8:	159e0100 	ldrne	r0, [lr, #256]	; 0x100
    b5cc:	00000035 	andeq	r0, r0, r5, lsr r0
    b5d0:	2c2f0e08 	stccs	14, cr0, [pc], #-32	; b5b8 <__HEAP_SIZE+0xa5b8>
    b5d4:	a1010000 	mrsge	r0, (UNDEF: 1)
    b5d8:	0001a624 	andeq	sl, r1, r4, lsr #12
    b5dc:	f8030500 			; <UNDEFINED> instruction: 0xf8030500
    b5e0:	0e38008c 	cdpeq	0, 3, cr0, cr8, cr12, {4}
    b5e4:	00002a33 	andeq	r2, r0, r3, lsr sl
    b5e8:	e326a201 			; <UNDEFINED> instruction: 0xe326a201
    b5ec:	05000001 	streq	r0, [r0, #-1]
    b5f0:	008ce403 	addeq	lr, ip, r3, lsl #8
    b5f4:	a6040738 			; <UNDEFINED> instruction: 0xa6040738
    b5f8:	0e000001 	cdpeq	0, 0, cr0, cr0, cr1, {0}
    b5fc:	00002bad 	andeq	r2, r0, sp, lsr #23
    b600:	291fa601 	ldmdbcs	pc, {r0, r9, sl, sp, pc}	; <UNPREDICTABLE>
    b604:	05000000 	streq	r0, [r0, #-0]
    b608:	008ce803 	addeq	lr, ip, r3, lsl #16
    b60c:	29d30e38 	ldmibcs	r3, {r3, r4, r5, r9, sl, fp}^
    b610:	a7010000 	strge	r0, [r1, -r0]
    b614:	0000291f 	andeq	r2, r0, pc, lsl r9
    b618:	ec030500 	cfstr32	mvfx0, [r3], {-0}
    b61c:	0e38008c 	cdpeq	0, 3, cr0, cr8, cr12, {4}
    b620:	00002b56 	andeq	r2, r0, r6, asr fp
    b624:	291fa801 	ldmdbcs	pc, {r0, fp, sp, pc}	; <UNPREDICTABLE>
    b628:	05000000 	streq	r0, [r0, #-0]
    b62c:	008cf003 	addeq	pc, ip, r3
    b630:	2c0b0e38 	stccs	14, cr0, [fp], {56}	; 0x38
    b634:	a9010000 	stmdbge	r1, {}	; <UNPREDICTABLE>
    b638:	0000291f 	andeq	r2, r0, pc, lsl r9
    b63c:	f4030500 	vst3.8	{d0,d2,d4}, [r3], r0
    b640:	0f38008c 	svceq	0x0038008c
    b644:	002b0d01 	eoreq	r0, fp, r1, lsl #26
    b648:	02690100 	rsbeq	r0, r9, #0, 2
    b64c:	00000106 	andeq	r0, r0, r6, lsl #2
    b650:	00000000 	andeq	r0, r0, r0
    b654:	7d020000 	stcvc	0, cr0, [r2, #-0]
    b658:	01100100 	tsteq	r0, r0, lsl #2
    b65c:	00002c76 	andeq	r2, r0, r6, ror ip
    b660:	06023001 	streq	r3, [r2], -r1
    b664:	00000001 	andeq	r0, r0, r1
    b668:	00000000 	andeq	r0, r0, r0
    b66c:	00a8eb00 	adceq	lr, r8, r0, lsl #22
    b670:	02f20100 	rscseq	r0, r2, #0, 2
    b674:	c7110000 	ldrgt	r0, [r1, -r0]
    b678:	01000029 	tsteq	r0, r9, lsr #32
    b67c:	f2270230 	vqsub.s32	d0, d7, d16
    b680:	0f000002 	svceq	0x00000002
    b684:	0b0000a9 	bleq	b930 <__HEAP_SIZE+0xa930>
    b688:	120000a9 	andne	r0, r0, #169	; 0xa9
    b68c:	00002a0e 	andeq	r2, r0, lr, lsl #20
    b690:	13023201 	movwne	r3, #8705	; 0x2201
    b694:	000001e3 	andeq	r0, r0, r3, ror #3
    b698:	0000a931 	andeq	sl, r0, r1, lsr r9
    b69c:	0000a92d 	andeq	sl, r0, sp, lsr #18
    b6a0:	002c3612 	eoreq	r3, ip, r2, lsl r6
    b6a4:	02330100 	eorseq	r0, r3, #0, 2
    b6a8:	0000290c 	andeq	r2, r0, ip, lsl #18
    b6ac:	00a95300 	adceq	r5, r9, r0, lsl #6
    b6b0:	00a94f00 	adceq	r4, r9, r0, lsl #30
    b6b4:	2b211200 	blcs	84febc <__RAM_SIZE+0x74febc>
    b6b8:	33010000 	movwcc	r0, #4096	; 0x1000
    b6bc:	00291902 	eoreq	r1, r9, r2, lsl #18
    b6c0:	a9760000 	ldmdbge	r6!, {}^	; <UNPREDICTABLE>
    b6c4:	a9720000 	ldmdbge	r2!, {}^	; <UNPREDICTABLE>
    b6c8:	16120000 	ldrne	r0, [r2], -r0
    b6cc:	0100002a 	tsteq	r0, sl, lsr #32
    b6d0:	29270233 	stmdbcs	r7!, {r0, r1, r4, r5, r9}
    b6d4:	99000000 	stmdbls	r0, {}	; <UNPREDICTABLE>
    b6d8:	950000a9 	strls	r0, [r0, #-169]	; 0xffffff57
    b6dc:	130000a9 	movwne	r0, #169	; 0xa9
    b6e0:	00000000 	andeq	r0, r0, r0
    b6e4:	000005d1 	ldrdeq	r0, [r0], -r1
    b6e8:	00000013 	andeq	r0, r0, r3, lsl r0
    b6ec:	0005e000 	andeq	lr, r5, r0
    b6f0:	00001300 	andeq	r1, r0, r0, lsl #6
    b6f4:	05ef0000 	strbeq	r0, [pc, #0]!	; b6fc <__HEAP_SIZE+0xa6fc>
    b6f8:	00130000 	andseq	r0, r3, r0
    b6fc:	fd000000 	stc2	0, cr0, [r0, #-0]
    b700:	00000005 	andeq	r0, r0, r5
    b704:	01490407 	cmpeq	r9, r7, lsl #8
    b708:	39140000 	ldmdbcc	r4, {}	; <UNPREDICTABLE>
    b70c:	0100002a 	tsteq	r0, sl, lsr #32
    b710:	010d01ec 	smlatteq	sp, ip, r1, r0
    b714:	100031c8 	andne	r3, r0, r8, asr #3
    b718:	1000322c 	andne	r3, r0, ip, lsr #4
    b71c:	0000a9b9 			; <UNDEFINED> instruction: 0x0000a9b9
    b720:	00035301 	andeq	r5, r3, r1, lsl #6
    b724:	2bec1100 	blcs	ffb0fb2c <__StackTop+0xc7a0fb2c>
    b728:	ec010000 	stc	0, cr0, [r1], {-0}
    b72c:	01e33701 	mvneq	r3, r1, lsl #14
    b730:	aa050000 	bge	14b738 <__RAM_SIZE+0x4b738>
    b734:	a9fd0000 	ldmibge	sp!, {}^	; <UNPREDICTABLE>
    b738:	d0120000 	andsle	r0, r2, r0
    b73c:	01000009 	tsteq	r0, r9
    b740:	e31301ee 	tst	r3, #-2147483589	; 0x8000003b
    b744:	42000001 	andmi	r0, r0, #1
    b748:	3c0000aa 	stccc	0, cr0, [r0], {170}	; 0xaa
    b74c:	150000aa 	strne	r0, [r0, #-170]	; 0xffffff56
    b750:	00637570 	rsbeq	r7, r3, r0, ror r5
    b754:	0f01ef01 	svceq	0x0001ef01
    b758:	000000cc 	andeq	r0, r0, ip, asr #1
    b75c:	0000aa78 	andeq	sl, r0, r8, ror sl
    b760:	0000aa70 	andeq	sl, r0, r0, ror sl
    b764:	2be01600 	blcs	ff810f6c <__StackTop+0xc7710f6c>
    b768:	bc010000 	stclt	0, cr0, [r1], {-0}
    b76c:	70010d01 	andvc	r0, r1, r1, lsl #26
    b770:	c8100031 	ldmdagt	r0, {r0, r4, r5}
    b774:	02100031 	andseq	r0, r0, #49	; 0x31
    b778:	c201007d 	andgt	r0, r1, #125	; 0x7d
    b77c:	12000003 	andne	r0, r0, #3
    b780:	00002c43 	andeq	r2, r0, r3, asr #24
    b784:	1301be01 	movwne	fp, #7681	; 0x1e01
    b788:	000001e3 	andeq	r0, r0, r3, ror #3
    b78c:	0000aaae 	andeq	sl, r0, lr, lsr #21
    b790:	0000aaac 	andeq	sl, r0, ip, lsr #21
    b794:	002a6112 	eoreq	r6, sl, r2, lsl r1
    b798:	01bf0100 			; <UNDEFINED> instruction: 0x01bf0100
    b79c:	0000b41b 	andeq	fp, r0, fp, lsl r4
    b7a0:	00aac500 	adceq	ip, sl, r0, lsl #10
    b7a4:	00aac100 	adceq	ip, sl, r0, lsl #2
    b7a8:	2ac41200 	bcs	ff10ffb0 <__StackTop+0xc700ffb0>
    b7ac:	bf010000 	svclt	0x00010000
    b7b0:	00b42b01 	adcseq	r2, r4, r1, lsl #22
    b7b4:	aae70000 	bge	ff9cb7bc <__StackTop+0xc78cb7bc>
    b7b8:	aae30000 	bge	ff8cb7c0 <__StackTop+0xc77cb7c0>
    b7bc:	fc120000 	ldc2	0, cr0, [r2], {-0}
    b7c0:	0100002b 	tsteq	r0, fp, lsr #32
    b7c4:	290c01c0 	stmdbcs	ip, {r6, r7, r8}
    b7c8:	0c000000 	stceq	0, cr0, [r0], {-0}
    b7cc:	060000ab 	streq	r0, [r0], -fp, lsr #1
    b7d0:	000000ab 	andeq	r0, r0, fp, lsr #1
    b7d4:	2ba00117 	blcs	fe80bc38 <__StackTop+0xc670bc38>
    b7d8:	a9010000 	stmdbge	r1, {}	; <UNPREDICTABLE>
    b7dc:	9f010801 	svcls	0x00010801
	...
    b7e8:	3b000000 	blcc	b7f0 <__HEAP_SIZE+0xa7f0>
    b7ec:	010000ab 	smlatbeq	r0, fp, r0, r0
    b7f0:	00000450 	andeq	r0, r0, r0, asr r4
    b7f4:	002c3e11 	eoreq	r3, ip, r1, lsl lr
    b7f8:	01a90100 			; <UNDEFINED> instruction: 0x01a90100
    b7fc:	0000291d 	andeq	r2, r0, sp, lsl r9
    b800:	00ab6300 	adceq	r6, fp, r0, lsl #6
    b804:	00ab5b00 	adceq	r5, fp, r0, lsl #22
    b808:	2b241100 	blcs	90fc10 <__RAM_SIZE+0x80fc10>
    b80c:	aa010000 	bge	4b814 <__HEAP_SIZE+0x4a814>
    b810:	00291d01 	eoreq	r1, r9, r1, lsl #26
    b814:	aba00000 	blge	fe80b81c <__StackTop+0xc670b81c>
    b818:	ab9a0000 	blge	fe68b820 <__StackTop+0xc658b820>
    b81c:	70150000 	andsvc	r0, r5, r0
    b820:	ac010076 	stcge	0, cr0, [r1], {118}	; 0x76
    b824:	009f0c01 	addseq	r0, pc, r1, lsl #24
    b828:	abd40000 	blge	ff50b830 <__StackTop+0xc740b830>
    b82c:	abcc0000 	blge	ff30b834 <__StackTop+0xc720b834>
    b830:	00180000 	andseq	r0, r8, r0
    b834:	1e000000 	cdpne	0, 0, cr0, cr0, cr0, {0}
    b838:	34000005 	strcc	r0, [r0], #-5
    b83c:	19000004 	stmdbne	r0, {r2}
    b840:	74025001 	strvc	r5, [r2], #-1
    b844:	001a0000 	andseq	r0, sl, r0
    b848:	0b000000 	bleq	b850 <__HEAP_SIZE+0xa850>
    b84c:	19000006 	stmdbne	r0, {r1, r2}
    b850:	75025001 	strvc	r5, [r2, #-1]
    b854:	51011900 	tstpl	r1, r0, lsl #18
    b858:	01193001 	tsteq	r9, r1
    b85c:	00740252 	rsbseq	r0, r4, r2, asr r2
    b860:	010f0000 	mrseq	r0, CPSR
    b864:	00002c60 	andeq	r2, r0, r0, ror #24
    b868:	0601a301 	streq	sl, [r1], -r1, lsl #6
    b86c:	00000001 	andeq	r0, r0, r1
    b870:	00000000 	andeq	r0, r0, r0
    b874:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    b878:	2a011b01 	bcs	52484 <__HEAP_SIZE+0x51484>
    b87c:	0100002b 	tsteq	r0, fp, lsr #32
    b880:	0108019d 			; <UNDEFINED> instruction: 0x0108019d
    b884:	00000029 	andeq	r0, r0, r9, lsr #32
	...
    b890:	01007d02 	tsteq	r0, r2, lsl #26
    b894:	2ae0011b 	bcs	ff80bd08 <__StackTop+0xc770bd08>
    b898:	97010000 	strls	r0, [r1, -r0]
    b89c:	29010801 	stmdbcs	r1, {r0, fp}
	...
    b8a8:	02000000 	andeq	r0, r0, #0
    b8ac:	1001007d 	andne	r0, r1, sp, ror r0
    b8b0:	0011c101 	andseq	ip, r1, r1, lsl #2
    b8b4:	015c0100 	cmpeq	ip, r0, lsl #2
    b8b8:	33000106 	movwcc	r0, #262	; 0x106
    b8bc:	33501000 	cmpcc	r0, #0
    b8c0:	ac0a1000 	stcge	0, cr1, [sl], {-0}
    b8c4:	1e010000 	cdpne	0, 0, cr0, cr1, cr0, {0}
    b8c8:	1c000005 	stcne	0, cr0, [r0], {5}
    b8cc:	01007670 	tsteq	r0, r0, ror r6
    b8d0:	9f18015c 	svcls	0x0018015c
    b8d4:	40000000 	andmi	r0, r0, r0
    b8d8:	360000ac 	strcc	r0, [r0], -ip, lsr #1
    b8dc:	150000ac 	strne	r0, [r0, #-172]	; 0xffffff54
    b8e0:	00637570 	rsbeq	r7, r3, r0, ror r5
    b8e4:	0f015e01 	svceq	0x00015e01
    b8e8:	000000cc 	andeq	r0, r0, ip, asr #1
    b8ec:	0000ac85 	andeq	sl, r0, r5, lsl #25
    b8f0:	0000ac7f 	andeq	sl, r0, pc, ror ip
    b8f4:	002c8812 	eoreq	r8, ip, r2, lsl r8
    b8f8:	015f0100 	cmpeq	pc, r0, lsl #2
    b8fc:	0001e313 	andeq	lr, r1, r3, lsl r3
    b900:	00acb000 	adceq	fp, ip, r0
    b904:	00acae00 	adceq	sl, ip, r0, lsl #28
    b908:	33261300 			; <UNDEFINED> instruction: 0x33261300
    b90c:	05d11000 	ldrbeq	r1, [r1]
    b910:	38180000 	ldmdacc	r8, {}	; <UNPREDICTABLE>
    b914:	f8100033 			; <UNDEFINED> instruction: 0xf8100033
    b918:	14000002 	strne	r0, [r0], #-2
    b91c:	19000005 	stmdbne	r0, {r0, r2}
    b920:	75025001 	strvc	r5, [r2, #-1]
    b924:	44130000 	ldrmi	r0, [r3], #-0
    b928:	e0100033 	ands	r0, r0, r3, lsr r0
    b92c:	00000005 	andeq	r0, r0, r5
    b930:	0cf8011d 	ldfeqe	f0, [r8], #116	; 0x74
    b934:	ad010000 	stcge	0, cr0, [r1, #-0]
    b938:	009f0108 	addseq	r0, pc, r8, lsl #2
    b93c:	322c0000 	eorcc	r0, ip, #0
    b940:	33001000 	movwcc	r1, #0
    b944:	acc31000 	stclge	0, cr1, [r3], {0}
    b948:	d1010000 	mrsle	r0, (UNDEF: 1)
    b94c:	1e000005 	cdpne	0, 0, cr0, cr0, cr5, {0}
    b950:	00002c54 	andeq	r2, r0, r4, asr ip
    b954:	291dad01 	ldmdbcs	sp, {r0, r8, sl, fp, sp, pc}
    b958:	ef000000 	svc	0x00000000
    b95c:	e30000ac 	movw	r0, #172	; 0xac
    b960:	1f0000ac 	svcne	0x000000ac
    b964:	00002a0e 	andeq	r2, r0, lr, lsl #20
    b968:	e313af01 	tst	r3, #1, 30
    b96c:	41000001 	tstmi	r0, r1
    b970:	3b0000ad 	blcc	bc2c <__HEAP_SIZE+0xac2c>
    b974:	1f0000ad 	svcne	0x000000ad
    b978:	000029b7 			; <UNDEFINED> instruction: 0x000029b7
    b97c:	e313b001 	tst	r3, #1
    b980:	72000001 	andvc	r0, r0, #1
    b984:	6a0000ad 	bvs	bc40 <__HEAP_SIZE+0xac40>
    b988:	1f0000ad 	svcne	0x000000ad
    b98c:	00002ad1 	ldrdeq	r2, [r0], -r1
    b990:	e313b101 	tst	r3, #1073741824	; 0x40000000
    b994:	ad000001 	stcge	0, cr0, [r0, #-4]
    b998:	ab0000ad 	blge	bc54 <__HEAP_SIZE+0xac54>
    b99c:	1f0000ad 	svcne	0x000000ad
    b9a0:	00002601 	andeq	r2, r0, r1, lsl #12
    b9a4:	9f0cb201 	svcls	0x000cb201
    b9a8:	c6000000 	strgt	r0, [r0], -r0
    b9ac:	c00000ad 	andgt	r0, r0, sp, lsr #1
    b9b0:	1f0000ad 	svcne	0x000000ad
    b9b4:	00002af5 	strdeq	r2, [r0], -r5
    b9b8:	290cb301 	stmdbcs	ip, {r0, r8, r9, ip, sp, pc}
    b9bc:	f5000000 			; <UNDEFINED> instruction: 0xf5000000
    b9c0:	f10000ad 			; <UNDEFINED> instruction: 0xf10000ad
    b9c4:	130000ad 	movwne	r0, #173	; 0xad
    b9c8:	10003254 	andne	r3, r0, r4, asr r2
    b9cc:	000005d1 	ldrdeq	r0, [r0], -r1
    b9d0:	00327813 	eorseq	r7, r2, r3, lsl r8
    b9d4:	00035310 	andeq	r5, r3, r0, lsl r3
    b9d8:	32d81300 	sbcscc	r1, r8, #0, 6
    b9dc:	05e01000 	strbeq	r1, [r0, #0]!
    b9e0:	20000000 	andcs	r0, r0, r0
    b9e4:	0d1c0101 	ldfeqs	f0, [ip, #-4]
    b9e8:	0d1c0000 	ldceq	0, cr0, [ip, #-0]
    b9ec:	5b070000 	blpl	1cb9f4 <__RAM_SIZE+0xcb9f4>
    b9f0:	01200606 			; <UNDEFINED> instruction: 0x01200606
    b9f4:	00117701 	andseq	r7, r1, r1, lsl #14
    b9f8:	00117700 	andseq	r7, r1, r0, lsl #14
    b9fc:	06930700 	ldreq	r0, [r3], r0, lsl #14
    ba00:	0101210c 	tsteq	r1, ip, lsl #2
    ba04:	00000bd3 	ldrdeq	r0, [r0], -r3
    ba08:	00000bd3 	ldrdeq	r0, [r0], -r3
    ba0c:	210d7105 	tstcs	sp, r5, lsl #2
    ba10:	0a430101 	beq	10cbe1c <__RAM_SIZE+0xfcbe1c>
    ba14:	0a430000 	beq	10cba1c <__RAM_SIZE+0xfcba1c>
    ba18:	72050000 	andvc	r0, r5, #0
    ba1c:	0101220d 	tsteq	r1, sp, lsl #4
    ba20:	000000ae 	andeq	r0, r0, lr, lsr #1
    ba24:	000000a4 	andeq	r0, r0, r4, lsr #1
    ba28:	63000008 	movwvs	r0, #8
    ba2c:	02000005 	andeq	r0, r0, #5
    ba30:	0017de00 	andseq	sp, r7, r0, lsl #28
    ba34:	89010400 	stmdbhi	r1, {sl}
    ba38:	0c000001 	stceq	0, cr0, [r0], {1}
    ba3c:	00002d00 	andeq	r2, r0, r0, lsl #26
    ba40:	00000385 	andeq	r0, r0, r5, lsl #7
    ba44:	00000b60 	andeq	r0, r0, r0, ror #22
	...
    ba50:	000082ed 	andeq	r8, r0, sp, ror #5
    ba54:	69050402 	stmdbvs	r5, {r1, sl}
    ba58:	0300746e 	movweq	r7, #1134	; 0x46e
    ba5c:	02c70704 	sbceq	r0, r7, #4, 14	; 0x100000
    ba60:	08030000 	stmdaeq	r3, {}	; <UNPREDICTABLE>
    ba64:	00012705 	andeq	r2, r1, r5, lsl #14
    ba68:	04080300 	streq	r0, [r8], #-768	; 0xfffffd00
    ba6c:	00000063 	andeq	r0, r0, r3, rrx
    ba70:	73060103 	movwvc	r0, #24835	; 0x6103
    ba74:	04000002 	streq	r0, [r0], #-2
    ba78:	0000017f 	andeq	r0, r0, pc, ror r1
    ba7c:	58182b02 	ldmdapl	r8, {r1, r8, r9, fp, sp}
    ba80:	03000000 	movweq	r0, #0
    ba84:	02710801 	rsbseq	r0, r1, #65536	; 0x10000
    ba88:	02030000 	andeq	r0, r3, #0
    ba8c:	00003205 	andeq	r3, r0, r5, lsl #4
    ba90:	07020300 	streq	r0, [r2, -r0, lsl #6]
    ba94:	0000031a 	andeq	r0, r0, sl, lsl r3
    ba98:	2c050403 	cfstrscs	mvf0, [r5], {3}
    ba9c:	04000001 	streq	r0, [r0], #-1
    baa0:	0000006f 	andeq	r0, r0, pc, rrx
    baa4:	80194f02 	andshi	r4, r9, r2, lsl #30
    baa8:	03000000 	movweq	r0, #0
    baac:	02c20704 	sbceq	r0, r2, #4, 14	; 0x100000
    bab0:	08030000 	stmdaeq	r3, {}	; <UNPREDICTABLE>
    bab4:	0002bd07 	andeq	fp, r2, r7, lsl #26
    bab8:	01810400 	orreq	r0, r1, r0, lsl #8
    babc:	18030000 	stmdane	r3, {}	; <UNPREDICTABLE>
    bac0:	00004c13 	andeq	r4, r0, r3, lsl ip
    bac4:	00710400 	rsbseq	r0, r1, r0, lsl #8
    bac8:	30030000 	andcc	r0, r3, r0
    bacc:	00007414 	andeq	r7, r0, r4, lsl r4
    bad0:	009a0500 	addseq	r0, sl, r0, lsl #10
    bad4:	38040000 	stmdacc	r4, {}	; <UNPREDICTABLE>
    bad8:	0400001c 	streq	r0, [r0], #-28	; 0xffffffe4
    badc:	00b71124 	adcseq	r1, r7, r4, lsr #2
    bae0:	04060000 	streq	r0, [r6], #-0
    bae4:	000000bd 	strheq	r0, [r0], -sp
    bae8:	00c90107 	sbceq	r0, r9, r7, lsl #2
    baec:	c9080000 	stmdbgt	r8, {}	; <UNPREDICTABLE>
    baf0:	00000000 	andeq	r0, r0, r0
    baf4:	5f040409 	svcpl	0x00040409
    baf8:	05000015 	streq	r0, [r0, #-21]	; 0xffffffeb
    bafc:	009a1a49 	addseq	r1, sl, r9, asr #20
    bb00:	c5040000 	strgt	r0, [r4, #-0]
    bb04:	05000009 	streq	r0, [r0, #-9]
    bb08:	006d1a4a 	rsbeq	r1, sp, sl, asr #20
    bb0c:	20040000 	andcs	r0, r4, r0
    bb10:	05000009 	streq	r0, [r0, #-9]
    bb14:	009a1a51 	addseq	r1, sl, r1, asr sl
    bb18:	01030000 	mrseq	r0, (UNDEF: 3)
    bb1c:	00027a08 	andeq	r7, r2, r8, lsl #20
    bb20:	cb040600 	blgt	10d328 <__RAM_SIZE+0xd328>
    bb24:	0a000000 	beq	bb2c <__HEAP_SIZE+0xab2c>
    bb28:	00580107 	subseq	r0, r8, r7, lsl #2
    bb2c:	b6070000 	strlt	r0, [r7], -r0
    bb30:	00011d01 	andeq	r1, r1, r1, lsl #26
    bb34:	17da0b00 	ldrbne	r0, [sl, r0, lsl #22]
    bb38:	0b000000 	bleq	bb40 <__HEAP_SIZE+0xab40>
    bb3c:	00001fc4 	andeq	r1, r0, r4, asr #31
    bb40:	1fdb0b01 	svcne	0x00db0b01
    bb44:	00020000 	andeq	r0, r2, r0
    bb48:	002e7904 	eoreq	r7, lr, r4, lsl #18
    bb4c:	12560100 	subsne	r0, r6, #0, 2
    bb50:	0000012e 	andeq	r0, r0, lr, lsr #2
    bb54:	00011d0c 	andeq	r1, r1, ip, lsl #26
    bb58:	34040600 	strcc	r0, [r4], #-1536	; 0xfffffa00
    bb5c:	0d000001 	stceq	0, cr0, [r0, #-4]
    bb60:	2c8f0e01 	stccs	14, cr0, [pc], {1}
    bb64:	00010000 	andeq	r0, r1, r0
    bb68:	00a62a02 	adceq	r2, r6, r2, lsl #20
    bb6c:	03050000 	movweq	r0, #20480	; 0x5000
    bb70:	38000008 	stmdacc	r0, {r3}
    bb74:	002ea10e 	eoreq	sl, lr, lr, lsl #2
    bb78:	021d0100 	andseq	r0, sp, #0, 2
    bb7c:	00009a25 	andeq	r9, r0, r5, lsr #20
    bb80:	04030500 	streq	r0, [r3], #-1280	; 0xfffffb00
    bb84:	0e38008d 	cdpeq	0, 3, cr0, cr8, cr13, {4}
    bb88:	00002de3 	andeq	r2, r0, r3, ror #27
    bb8c:	25022301 	strcs	r2, [r2, #-769]	; 0xfffffcff
    bb90:	0000009a 	muleq	r0, sl, r0
    bb94:	8d080305 	stchi	3, cr0, [r8, #-20]	; 0xffffffec
    bb98:	790e3800 	stmdbvc	lr, {fp, ip, sp}
    bb9c:	0100002d 	tsteq	r0, sp, lsr #32
    bba0:	9a250229 	bls	94c44c <__RAM_SIZE+0x84c44c>
    bba4:	05000000 	streq	r0, [r0, #-0]
    bba8:	008d0003 	addeq	r0, sp, r3
    bbac:	34010f38 	strcc	r0, [r1], #-3896	; 0xfffff0c8
    bbb0:	0100002e 	tsteq	r0, lr, lsr #32
    bbb4:	010c07af 	smlatbeq	ip, pc, r7, r0	; <UNPREDICTABLE>
    bbb8:	000000d7 	ldrdeq	r0, [r0], -r7
	...
    bbc4:	01007d02 	tsteq	r0, r2, lsl #26
    bbc8:	000001c5 	andeq	r0, r0, r5, asr #3
    bbcc:	002e4b10 	eoreq	r4, lr, r0, lsl fp
    bbd0:	07b10100 	ldreq	r0, [r1, r0, lsl #2]!
    bbd4:	00009a0e 	andeq	r9, r0, lr, lsl #20
    bbd8:	00ae1500 	adceq	r1, lr, r0, lsl #10
    bbdc:	00ae1300 	adceq	r1, lr, r0, lsl #6
    bbe0:	1a191100 	bne	64ffe8 <__RAM_SIZE+0x54ffe8>
    bbe4:	b2010000 	andlt	r0, r1, #0
    bbe8:	00d71007 	sbcseq	r1, r7, r7
    bbec:	00010000 	andeq	r0, r1, r0
    bbf0:	1f1b0112 	svcne	0x001b0112
    bbf4:	ee010000 	cdp	0, 0, cr0, cr1, cr0, {0}
    bbf8:	00010606 	andeq	r0, r1, r6, lsl #12
    bbfc:	00000000 	andeq	r0, r0, r0
    bc00:	02000000 	andeq	r0, r0, #0
    bc04:	1301007d 	movwne	r0, #4221	; 0x107d
    bc08:	00145e01 	andseq	r5, r4, r1, lsl #28
    bc0c:	06550100 	ldrbeq	r0, [r5], -r0, lsl #2
    bc10:	00d7010c 	sbcseq	r0, r7, ip, lsl #2
    bc14:	35d00000 	ldrbcc	r0, [r0]
    bc18:	36101000 	ldrcc	r1, [r0], -r0
    bc1c:	ae281000 	cdpge	0, 2, cr1, cr8, cr0, {0}
    bc20:	34010000 	strcc	r0, [r1], #-0
    bc24:	14000002 	strne	r0, [r0], #-2
    bc28:	0000020f 	andeq	r0, r0, pc, lsl #4
    bc2c:	002cca15 	eoreq	ip, ip, r5, lsl sl
    bc30:	06650100 	strbteq	r0, [r5], -r0, lsl #2
    bc34:	00023a21 	andeq	r3, r2, r1, lsr #20
    bc38:	f8160000 			; <UNDEFINED> instruction: 0xf8160000
    bc3c:	0b100035 	bleq	40bd18 <__RAM_SIZE+0x30bd18>
    bc40:	16000004 	strne	r0, [r0], -r4
    bc44:	10003600 	andne	r3, r0, r0, lsl #12
    bc48:	000004f2 	strdeq	r0, [r0], -r2
    bc4c:	00360416 	eorseq	r0, r6, r6, lsl r4
    bc50:	00050010 	andeq	r0, r5, r0, lsl r0
    bc54:	36081600 	strcc	r1, [r8], -r0, lsl #12
    bc58:	03d61000 	bicseq	r1, r6, #0
    bc5c:	06000000 	streq	r0, [r0], -r0
    bc60:	00012904 	andeq	r2, r1, r4, lsl #18
    bc64:	02340c00 	eorseq	r0, r4, #0, 24
    bc68:	01130000 	tsteq	r3, r0
    bc6c:	00001b90 	muleq	r0, r0, fp
    bc70:	13060201 	movwne	r0, #25089	; 0x6201
    bc74:	0000f601 	andeq	pc, r0, r1, lsl #12
    bc78:	00354000 	eorseq	r4, r5, r0
    bc7c:	0035d010 	eorseq	sp, r5, r0, lsl r0
    bc80:	00ae4810 	adceq	r4, lr, r0, lsl r8
    bc84:	02ae0100 	adceq	r0, lr, #0, 2
    bc88:	16170000 	ldrne	r0, [r7], -r0
    bc8c:	01000023 	tsteq	r0, r3, lsr #32
    bc90:	f6380602 			; <UNDEFINED> instruction: 0xf6380602
    bc94:	9c000000 	stcls	0, cr0, [r0], {-0}
    bc98:	740000ae 	strvc	r0, [r0], #-174	; 0xffffff52
    bc9c:	180000ae 	stmdane	r0, {r1, r2, r3, r5, r7}
    bca0:	00002dd6 	ldrdeq	r2, [r0], -r6
    bca4:	38060301 	stmdacc	r6, {r0, r8, r9}
    bca8:	000000f6 	strdeq	r0, [r0], -r6
    bcac:	2d175101 	ldfcss	f5, [r7, #-4]
    bcb0:	0100002e 	tsteq	r0, lr, lsr #32
    bcb4:	ab390604 	blge	e4d4cc <__RAM_SIZE+0xd4d4cc>
    bcb8:	ac000000 	stcge	0, cr0, [r0], {-0}
    bcbc:	a60000af 	strge	r0, [r0], -pc, lsr #1
    bcc0:	170000af 	strne	r0, [r0, -pc, lsr #1]
    bcc4:	00001e84 	andeq	r1, r0, r4, lsl #29
    bcc8:	31060501 	tstcc	r6, r1, lsl #10
    bccc:	000000c9 	andeq	r0, r0, r9, asr #1
    bcd0:	0000afde 	ldrdeq	sl, [r0], -lr
    bcd4:	0000afd8 	ldrdeq	sl, [r0], -r8
    bcd8:	d8011900 	stmdale	r1, {r8, fp, ip}
    bcdc:	0100002c 	tsteq	r0, ip, lsr #32
    bce0:	01060409 	tsteq	r6, r9, lsl #8
    bce4:	1000352a 	andne	r3, r0, sl, lsr #10
    bce8:	1000353e 	andne	r3, r0, lr, lsr r5
    bcec:	0000b009 	andeq	fp, r0, r9
    bcf0:	00031301 	andeq	r1, r3, r1, lsl #6
    bcf4:	2d631700 	stclcs	7, cr1, [r3, #-0]
    bcf8:	09010000 	stmdbeq	r1, {}	; <UNPREDICTABLE>
    bcfc:	03132404 	tsteq	r3, #4, 8	; 0x4000000
    bd00:	b0310000 	eorslt	r0, r1, r0
    bd04:	b0290000 	eorlt	r0, r9, r0
    bd08:	a9100000 	ldmdbge	r0, {}	; <UNPREDICTABLE>
    bd0c:	0100002c 	tsteq	r0, ip, lsr #32
    bd10:	9a0e0419 	bls	38cd7c <__RAM_SIZE+0x28cd7c>
    bd14:	71000000 	mrsvc	r0, (UNDEF: 0)
    bd18:	6b0000b0 	blvs	bfe0 <__HEAP_SIZE+0xafe0>
    bd1c:	100000b0 	strhne	r0, [r0], -r0	; <UNPREDICTABLE>
    bd20:	00002cae 	andeq	r2, r0, lr, lsr #25
    bd24:	0d042201 	sfmeq	f2, 4, [r4, #-4]
    bd28:	0000008e 	andeq	r0, r0, lr, lsl #1
    bd2c:	0000b0a0 	andeq	fp, r0, r0, lsr #1
    bd30:	0000b09c 	muleq	r0, ip, r0
    bd34:	00353c16 	eorseq	r3, r5, r6, lsl ip
    bd38:	00050f10 	andeq	r0, r5, r0, lsl pc
    bd3c:	04060000 	streq	r0, [r6], #-0
    bd40:	0000009a 	muleq	r0, sl, r0
    bd44:	2e830119 	mcrcs	1, 4, r0, cr3, cr9, {0}
    bd48:	f2010000 	vhadd.s8	d0, d1, d0
    bd4c:	08010603 	stmdaeq	r1, {r0, r1, r9, sl}
    bd50:	2a100035 	bcs	40be2c <__RAM_SIZE+0x30be2c>
    bd54:	be100035 	mrclt	0, 0, r0, cr0, cr5, {1}
    bd58:	010000b0 	strheq	r0, [r0, -r0]
    bd5c:	0000036d 	andeq	r0, r0, sp, ror #6
    bd60:	002eb910 	eoreq	fp, lr, r0, lsl r9
    bd64:	03f40100 	mvnseq	r0, #0, 2
    bd68:	00009a0e 	andeq	r9, r0, lr, lsl #20
    bd6c:	00b0e200 	adcseq	lr, r0, r0, lsl #4
    bd70:	00b0de00 	adcseq	sp, r0, r0, lsl #28
    bd74:	350e1600 	strcc	r1, [lr, #-1536]	; 0xfffffa00
    bd78:	051d1000 	ldreq	r1, [sp, #-0]
    bd7c:	14160000 	ldrne	r0, [r6], #-0
    bd80:	2b100035 	blcs	40be5c <__RAM_SIZE+0x30be5c>
    bd84:	1a000005 	bne	bda0 <__HEAP_SIZE+0xada0>
    bd88:	10003528 	andne	r3, r0, r8, lsr #10
    bd8c:	0000053a 	andeq	r0, r0, sl, lsr r5
    bd90:	0250011b 	subseq	r0, r0, #-1073741818	; 0xc0000006
    bd94:	00000074 	andeq	r0, r0, r4, ror r0
    bd98:	0a430119 	beq	10cc204 <__RAM_SIZE+0xfcc204>
    bd9c:	e6010000 	str	r0, [r1], -r0
    bda0:	ec010603 	stc	6, cr0, [r1], {3}
    bda4:	08100034 	ldmdaeq	r0, {r2, r4, r5}
    bda8:	00100035 	andseq	r0, r0, r5, lsr r0
    bdac:	010000b1 	strheq	r0, [r0, -r1]
    bdb0:	00000399 	muleq	r0, r9, r3
    bdb4:	0035021a 	eorseq	r0, r5, sl, lsl r2
    bdb8:	00053a10 	andeq	r3, r5, r0, lsl sl
    bdbc:	50011b00 	andpl	r1, r1, r0, lsl #22
    bdc0:	00003001 	andeq	r3, r0, r1
    bdc4:	0bd30119 	bleq	ff4cc230 <__StackTop+0xc73cc230>
    bdc8:	da010000 	ble	4bdd0 <__HEAP_SIZE+0x4add0>
    bdcc:	d0010603 	andle	r0, r1, r3, lsl #12
    bdd0:	ec100034 	ldc	0, cr0, [r0], {52}	; 0x34
    bdd4:	20100034 	andscs	r0, r0, r4, lsr r0
    bdd8:	010000b1 	strheq	r0, [r0, -r1]
    bddc:	000003bf 			; <UNDEFINED> instruction: 0x000003bf
    bde0:	0034d616 	eorseq	sp, r4, r6, lsl r6
    bde4:	00051d10 	andeq	r1, r5, r0, lsl sp
    bde8:	01120000 	tsteq	r2, r0
    bdec:	00000a7e 	andeq	r0, r0, lr, ror sl
    bdf0:	0603ce01 	streq	ip, [r3], -r1, lsl #28
    bdf4:	0034b801 	eorseq	fp, r4, r1, lsl #16
    bdf8:	0034ce10 	eorseq	ip, r4, r0, lsl lr
    bdfc:	007d0210 	rsbseq	r0, sp, r0, lsl r2
    be00:	2e031c01 	cdpcs	12, 0, cr1, cr3, cr1, {0}
    be04:	26010000 	strcs	r0, [r1], -r0
    be08:	50010d03 	andpl	r0, r1, r3, lsl #26
    be0c:	68100033 	ldmdavs	r0, {r0, r1, r4, r5}
    be10:	40100033 	andsmi	r0, r0, r3, lsr r0
    be14:	010000b1 	strheq	r0, [r0, -r1]
    be18:	0000040b 	andeq	r0, r0, fp, lsl #8
    be1c:	002ca10e 	eoreq	sl, ip, lr, lsl #2
    be20:	03280100 			; <UNDEFINED> instruction: 0x03280100
    be24:	0000a617 	andeq	sl, r0, r7, lsl r6
    be28:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    be2c:	00335c16 	eorseq	r5, r3, r6, lsl ip
    be30:	00051d10 	andeq	r1, r5, r0, lsl sp
    be34:	01120000 	tsteq	r2, r0
    be38:	00002e14 	andeq	r2, r0, r4, lsl lr
    be3c:	20030a01 	andcs	r0, r3, r1, lsl #20
    be40:	00347c01 	eorseq	r7, r4, r1, lsl #24
    be44:	0034b810 	eorseq	fp, r4, r0, lsl r8
    be48:	007d0210 	rsbseq	r0, sp, r0, lsl r2
    be4c:	8d011901 	vstrhi.16	s2, [r1, #-2]	; <UNPREDICTABLE>
    be50:	01000020 	tsteq	r0, r0, lsr #32
    be54:	0124022f 			; <UNDEFINED> instruction: 0x0124022f
    be58:	10003368 	andne	r3, r0, r8, ror #6
    be5c:	1000347c 	andne	r3, r0, ip, ror r4
    be60:	0000b178 	andeq	fp, r0, r8, ror r1
    be64:	0004f201 	andeq	pc, r4, r1, lsl #4
    be68:	15cb1700 	strbne	r1, [fp, #1792]	; 0x700
    be6c:	2f010000 	svccs	0x00010000
    be70:	00e34b02 	rsceq	r4, r3, r2, lsl #22
    be74:	b1a20000 			; <UNDEFINED> instruction: 0xb1a20000
    be78:	b1980000 	orrslt	r0, r8, r0
    be7c:	93100000 	tstls	r0, #0
    be80:	0100002e 	tsteq	r0, lr, lsr #32
    be84:	9a120231 	bls	48c750 <__RAM_SIZE+0x38c750>
    be88:	e7000000 	str	r0, [r0, -r0]
    be8c:	e30000b1 	movw	r0, #177	; 0xb1
    be90:	100000b1 	strhne	r0, [r0], -r1
    be94:	00002cea 	andeq	r2, r0, sl, ror #25
    be98:	21023101 	tstcs	r2, r1, lsl #2
    be9c:	0000009a 	muleq	r0, sl, r0
    bea0:	0000b209 	andeq	fp, r0, r9, lsl #4
    bea4:	0000b205 	andeq	fp, r0, r5, lsl #4
    bea8:	002d4610 	eoreq	r4, sp, r0, lsl r6
    beac:	02310100 	eorseq	r0, r1, #0, 2
    beb0:	00009a38 	andeq	r9, r0, r8, lsr sl
    beb4:	00b22b00 	adcseq	r2, r2, r0, lsl #22
    beb8:	00b22700 	adcseq	r2, r2, r0, lsl #14
    bebc:	2d941000 	ldccs	0, cr1, [r4]
    bec0:	31010000 	mrscc	r0, (UNDEF: 1)
    bec4:	009a5602 	addseq	r5, sl, r2, lsl #12
    bec8:	b2540000 	subslt	r0, r4, #0
    becc:	b24e0000 	sublt	r0, lr, #0
    bed0:	c2100000 	andsgt	r0, r0, #0
    bed4:	0100002d 	tsteq	r0, sp, lsr #32
    bed8:	e3140232 	tst	r4, #536870915	; 0x20000003
    bedc:	83000000 	movwhi	r0, #0
    bee0:	7d0000b2 	stcvc	0, cr0, [r0, #-712]	; 0xfffffd38
    bee4:	1d0000b2 	stcne	0, cr0, [r0, #-712]	; 0xfffffd38
    bee8:	1000340e 	andne	r3, r0, lr, lsl #8
    beec:	10003432 	andne	r3, r0, r2, lsr r4
    bef0:	000004df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    bef4:	002dac10 	eoreq	sl, sp, r0, lsl ip
    bef8:	02a50100 	adceq	r0, r5, #0, 2
    befc:	00009a1a 	andeq	r9, r0, sl, lsl sl
    bf00:	00b2b000 	adcseq	fp, r2, r0
    bf04:	00b2ae00 	adcseq	sl, r2, r0, lsl #28
    bf08:	82160000 	andshi	r0, r6, #0
    bf0c:	48100033 	ldmdami	r0, {r0, r1, r4, r5}
    bf10:	16000005 	strne	r0, [r0], -r5
    bf14:	1000344a 	andne	r3, r0, sl, asr #8
    bf18:	00000557 	andeq	r0, r0, r7, asr r5
    bf1c:	01011e00 	tsteq	r1, r0, lsl #28
    bf20:	00002cba 			; <UNDEFINED> instruction: 0x00002cba
    bf24:	00002cba 			; <UNDEFINED> instruction: 0x00002cba
    bf28:	1f064d06 	svcne	0x00064d06
    bf2c:	1de00101 	stfnee	f0, [r0, #4]!
    bf30:	1de00000 	stclne	0, cr0, [r0]
    bf34:	f5070000 			; <UNDEFINED> instruction: 0xf5070000
    bf38:	011e1b0d 	tsteq	lr, sp, lsl #22
    bf3c:	002e5e01 	eoreq	r5, lr, r1, lsl #28
    bf40:	002e5e00 	eoreq	r5, lr, r0, lsl #28
    bf44:	062a0600 	strteq	r0, [sl], -r0, lsl #12
    bf48:	7d01011e 	stfvcs	f0, [r1, #-120]	; 0xffffff88
    bf4c:	7d00000f 	stcvc	0, cr0, [r0, #-60]	; 0xffffffc4
    bf50:	0600000f 	streq	r0, [r0], -pc
    bf54:	011f0a52 	tsteq	pc, r2, asr sl	; <UNPREDICTABLE>
    bf58:	0018dd01 	andseq	sp, r8, r1, lsl #26
    bf5c:	0018dd00 	andseq	sp, r8, r0, lsl #26
    bf60:	0d9a0700 	ldceq	7, cr0, [sl]
    bf64:	01011e0c 	tsteq	r1, ip, lsl #28
    bf68:	00000c89 	andeq	r0, r0, r9, lsl #25
    bf6c:	00000c89 	andeq	r0, r0, r9, lsl #25
    bf70:	1f065706 	svcne	0x00065706
    bf74:	19ec0101 	stmibne	ip!, {r0, r8}^
    bf78:	19ec0000 	stmibne	ip!, {}^	; <UNPREDICTABLE>
    bf7c:	58070000 	stmdapl	r7, {}	; <UNPREDICTABLE>
    bf80:	011f160e 	tsteq	pc, lr, lsl #12
    bf84:	0018f001 	andseq	pc, r8, r1
    bf88:	0018f000 	andseq	pc, r8, r0
    bf8c:	0e460700 	cdpeq	7, 4, cr0, cr6, cr0, {0}
    bf90:	017a000a 	cmneq	sl, sl
    bf94:	00020000 	andeq	r0, r2, r0
    bf98:	000019bc 			; <UNDEFINED> instruction: 0x000019bc
    bf9c:	01890104 	orreq	r0, r9, r4, lsl #2
    bfa0:	d70c0000 	strle	r0, [ip, -r0]
    bfa4:	8500002e 	strhi	r0, [r0, #-46]	; 0xffffffd2
    bfa8:	c8000003 	stmdagt	r0, {r0, r1}
    bfac:	0000000b 	andeq	r0, r0, fp
    bfb0:	00000000 	andeq	r0, r0, r0
    bfb4:	e3000000 	movw	r0, #0
    bfb8:	02000088 	andeq	r0, r0, #136	; 0x88
    bfbc:	02730601 	rsbseq	r0, r3, #1048576	; 0x100000
    bfc0:	01020000 	mrseq	r0, (UNDEF: 2)
    bfc4:	00027108 	andeq	r7, r2, r8, lsl #2
    bfc8:	05020200 	streq	r0, [r2, #-512]	; 0xfffffe00
    bfcc:	00000032 	andeq	r0, r0, r2, lsr r0
    bfd0:	1a070202 	bne	1cc7e0 <__RAM_SIZE+0xcc7e0>
    bfd4:	02000003 	andeq	r0, r0, #3
    bfd8:	012c0504 			; <UNDEFINED> instruction: 0x012c0504
    bfdc:	6f030000 	svcvs	0x00030000
    bfe0:	02000000 	andeq	r0, r0, #0
    bfe4:	0058194f 	subseq	r1, r8, pc, asr #18
    bfe8:	04020000 	streq	r0, [r2], #-0
    bfec:	0002c207 	andeq	ip, r2, r7, lsl #4
    bff0:	05080200 	streq	r0, [r8, #-512]	; 0xfffffe00
    bff4:	00000127 	andeq	r0, r0, r7, lsr #2
    bff8:	bd070802 	stclt	8, cr0, [r7, #-8]
    bffc:	04000002 	streq	r0, [r0], #-2
    c000:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
    c004:	04020074 	streq	r0, [r2], #-116	; 0xffffff8c
    c008:	0002c707 	andeq	ip, r2, r7, lsl #14
    c00c:	00710300 	rsbseq	r0, r1, r0, lsl #6
    c010:	30030000 	andcc	r0, r3, r0
    c014:	00004c14 	andeq	r4, r0, r4, lsl ip
    c018:	04080200 	streq	r0, [r8], #-512	; 0xfffffe00
    c01c:	00000063 	andeq	r0, r0, r3, rrx
    c020:	0009c503 	andeq	ip, r9, r3, lsl #10
    c024:	1a4a0400 	bne	128d02c <__RAM_SIZE+0x118d02c>
    c028:	00000045 	andeq	r0, r0, r5, asr #32
    c02c:	2f2e0105 	svccs	0x002e0105
    c030:	c7010000 	strgt	r0, [r1, -r0]
    c034:	c8010a01 	stmdagt	r1, {r0, r9, fp}
    c038:	da100036 	ble	40c118 <__RAM_SIZE+0x30c118>
    c03c:	02100036 	andseq	r0, r0, #54	; 0x36
    c040:	0501007d 	streq	r0, [r1, #-125]	; 0xffffff83
    c044:	002ec801 	eoreq	ip, lr, r1, lsl #16
    c048:	016b0100 	cmneq	fp, r0, lsl #2
    c04c:	3680010a 	strcc	r0, [r0], sl, lsl #2
    c050:	36c41000 	strbcc	r1, [r4], r0
    c054:	7d021000 	stcvc	0, cr1, [r2, #-0]
    c058:	01060100 	mrseq	r0, (UNDEF: 22)
    c05c:	00000c89 	andeq	r0, r0, r9, lsl #25
    c060:	0106e801 	tsteq	r6, r1, lsl #16
    c064:	10003672 	andne	r3, r0, r2, ror r6
    c068:	10003680 	andne	r3, r0, r0, lsl #13
    c06c:	01007d02 	tsteq	r0, r2, lsl #26
    c070:	000000f1 	strdeq	r0, [r0], -r1
    c074:	002f4a07 	eoreq	r4, pc, r7, lsl #20
    c078:	40e80100 	rscmi	r0, r8, r0, lsl #2
    c07c:	0000007b 	andeq	r0, r0, fp, ror r0
    c080:	08005001 	stmdaeq	r0, {r0, ip, lr}
    c084:	000f7d01 	andeq	r7, pc, r1, lsl #26
    c088:	0ad70100 	beq	ff5cc490 <__StackTop+0xc74cc490>
    c08c:	00007b01 	andeq	r7, r0, r1, lsl #22
    c090:	00365c00 	eorseq	r5, r6, r0, lsl #24
    c094:	00367210 	eorseq	r7, r6, r0, lsl r2
    c098:	007d0210 	rsbseq	r0, sp, r0, lsl r2
    c09c:	ba010901 	blt	4e4a8 <__HEAP_SIZE+0x4d4a8>
    c0a0:	0100002c 	tsteq	r0, ip, lsr #32
    c0a4:	3c0106c2 	stccc	6, cr0, [r1], {194}	; 0xc2
    c0a8:	56100036 			; <UNDEFINED> instruction: 0x56100036
    c0ac:	02100036 	andseq	r0, r0, #54	; 0x36
    c0b0:	0901007d 	stmdbeq	r1, {r0, r2, r3, r4, r5, r6}
    c0b4:	002f3a01 	eoreq	r3, pc, r1, lsl #20
    c0b8:	06b30100 	ldrteq	r0, [r3], r0, lsl #2
    c0bc:	00000001 	andeq	r0, r0, r1
    c0c0:	00000000 	andeq	r0, r0, r0
    c0c4:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    c0c8:	51010901 	tstpl	r1, r1, lsl #18
    c0cc:	0100002f 	tsteq	r0, pc, lsr #32
    c0d0:	000106a4 	andeq	r0, r1, r4, lsr #13
    c0d4:	00000000 	andeq	r0, r0, r0
    c0d8:	02000000 	andeq	r0, r0, #0
    c0dc:	0801007d 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6}
    c0e0:	002f2001 	eoreq	r2, pc, r1
    c0e4:	0c930100 	ldfeqs	f0, [r3], {0}
    c0e8:	00008e01 	andeq	r8, r0, r1, lsl #28
	...
    c0f4:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    c0f8:	5e010901 	vmlapl.f16	s0, s2, s2	; <UNPREDICTABLE>
    c0fc:	0100002e 	tsteq	r0, lr, lsr #32
    c100:	10010a79 	andne	r0, r1, r9, ror sl
    c104:	36100036 			; <UNDEFINED> instruction: 0x36100036
    c108:	02100036 	andseq	r0, r0, #54	; 0x36
    c10c:	0001007d 	andeq	r0, r1, sp, ror r0
    c110:	00000022 	andeq	r0, r0, r2, lsr #32
    c114:	1a740002 	bne	1d0c124 <__RAM_SIZE+0x1c0c124>
    c118:	01040000 	mrseq	r0, (UNDEF: 4)
    c11c:	00008b22 	andeq	r8, r0, r2, lsr #22
    c120:	10003700 	andne	r3, r0, r0, lsl #14
    c124:	10003770 	andne	r3, r0, r0, ror r7
    c128:	00002f61 	andeq	r2, r0, r1, ror #30
    c12c:	00000385 	andeq	r0, r0, r5, lsl #7
    c130:	00002f81 	andeq	r2, r0, r1, lsl #31
    c134:	00228001 	eoreq	r8, r2, r1
    c138:	00020000 	andeq	r0, r2, r0
    c13c:	00001a88 	andeq	r1, r0, r8, lsl #21
    c140:	8ba80104 	blhi	fea0c558 <__StackTop+0xc690c558>
    c144:	37700000 	ldrbcc	r0, [r0, -r0]!
    c148:	37b81000 	ldrcc	r1, [r8, r0]!
    c14c:	2f8f1000 	svccs	0x008f1000
    c150:	03850000 	orreq	r0, r5, #0
    c154:	2f810000 	svccs	0x00810000
    c158:	80010000 	andhi	r0, r1, r0

Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
       0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
       4:	030b130e 	movweq	r1, #45838	; 0xb30e
        xReturn = pdFALSE;
       8:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
}
       c:	52011106 	andpl	r1, r1, #-2147483647	; 0x80000001
    ( pxList->uxNumberOfItems ) = ( UBaseType_t ) ( pxList->uxNumberOfItems + 1U );
      10:	00061001 	andeq	r1, r6, r1
}
      14:	00240200 	eoreq	r0, r4, r0, lsl #4
      18:	0b3e0b0b 	bleq	f82c4c <__RAM_SIZE+0xe82c4c>
}
      1c:	00000e03 	andeq	r0, r0, r3, lsl #28
      20:	03001603 	movweq	r1, #1539	; 0x603
      24:	3b0b3a0e 	blcc	2ce864 <__RAM_SIZE+0x1ce864>
      28:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
      2c:	04000013 	streq	r0, [r0], #-19	; 0xffffffed
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
      30:	0b0b0024 	bleq	2c00c8 <__RAM_SIZE+0x1c00c8>
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
      34:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
      38:	35050000 	strcc	r0, [r5, #-0]
      3c:	00134900 	andseq	r4, r3, r0, lsl #18
      40:	00260600 	eoreq	r0, r6, r0, lsl #12
        BaseType_t xReturn = pdFAIL;
      44:	00001349 	andeq	r1, r0, r9, asr #6
    }
      48:	0b000f07 	bleq	3c6c <__HEAP_SIZE+0x2c6c>
        for (int i = 0; i < count; i++) {
      4c:	0800000b 	stmdaeq	r0, {r0, r1, r3}
        printf("] \r\n");
      50:	050b0113 	streq	r0, [fp, #-275]	; 0xfffffeed
}
      54:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
      58:	13010b39 	movwne	r0, #6969	; 0x1b39
      5c:	0d090000 	stceq	0, cr0, [r9, #-0]
      60:	3a0e0300 	bcc	380c68 <__RAM_SIZE+0x280c68>
      64:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
      68:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
      6c:	0a00000a 	beq	9c <__STACKSEAL_SIZE+0x9c>
      70:	0803000d 	stmdaeq	r3, {r0, r2, r3}
      74:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
      78:	13490b39 	movtne	r0, #39737	; 0x9b39
      7c:	00000a38 	andeq	r0, r0, r8, lsr sl
            prvUnlockQueue( pxQueue );
      80:	4901010b 	stmdbmi	r1, {r0, r1, r3, r8}
            ( void ) xTaskResumeAll();
      84:	00130113 	andseq	r0, r3, r3, lsl r1
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
      88:	00210c00 	eoreq	r0, r1, r0, lsl #24
      8c:	0b2f1349 	bleq	bc4db8 <__RAM_SIZE+0xac4db8>
      90:	160d0000 	strne	r0, [sp], -r0
        taskENTER_CRITICAL();
      94:	3a0e0300 	bcc	380c9c <__RAM_SIZE+0x280c9c>
            if( uxSemaphoreCount > ( UBaseType_t ) 0 )
      98:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
                if( xTicksToWait == ( TickType_t ) 0 )
      9c:	0013490b 	andseq	r4, r3, fp, lsl #18
      a0:	000f0e00 	andeq	r0, pc, r0, lsl #28
                else if( xEntryTimeSet == pdFALSE )
      a4:	13490b0b 	movtne	r0, #39691	; 0x9b0b
        taskEXIT_CRITICAL();
      a8:	130f0000 	movwne	r0, #61440	; 0xf000
        vTaskSuspendAll();
      ac:	3c0e0300 	stccc	3, cr0, [lr], {-0}
        prvLockQueue( pxQueue );
      b0:	1000000c 	andne	r0, r0, ip
      b4:	13490021 	movtne	r0, #36897	; 0x9021
      b8:	0000052f 	andeq	r0, r0, pc, lsr #10
      bc:	03003411 	movweq	r3, #1041	; 0x411
      c0:	3b0b3a0e 	blcc	2ce900 <__RAM_SIZE+0x1ce900>
      c4:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
      c8:	020c3f13 	andeq	r3, ip, #19, 30	; 0x4c
      cc:	1200000a 	andne	r0, r0, #10
        if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
      d0:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 20 <__STACKSEAL_SIZE+0x20>
      d4:	0b3a0e03 	bleq	e838e8 <__RAM_SIZE+0xd838e8>
      d8:	0b390b3b 	bleq	e42dcc <__RAM_SIZE+0xd42dcc>
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
      dc:	13490c27 	movtne	r0, #39975	; 0x9c27
      e0:	01120111 	tsteq	r2, r1, lsl r1
                    if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
      e4:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
      e8:	0013010c 	andseq	r0, r3, ip, lsl #2
                vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
      ec:	00341300 	eorseq	r1, r4, r0, lsl #6
      f0:	0b3a0e03 	bleq	e83904 <__RAM_SIZE+0xd83904>
                prvUnlockQueue( pxQueue );
      f4:	0b390b3b 	bleq	e42de8 <__RAM_SIZE+0xd42de8>
      f8:	06021349 	streq	r1, [r2], -r9, asr #6
                if( xTaskResumeAll() == pdFALSE )
      fc:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
     100:	82891400 	addhi	r1, r9, #0, 8
                    taskYIELD_WITHIN_API();
     104:	01110001 	tsteq	r1, r1
                    if( xInheritanceOccurred != pdFALSE )
     108:	00001331 	andeq	r1, r0, r1, lsr r3
                return errQUEUE_EMPTY;
     10c:	01828915 	orreq	r8, r2, r5, lsl r9
                        taskENTER_CRITICAL();
     110:	31011101 	tstcc	r1, r1, lsl #2
                            uxHighestWaitingPriority = prvGetDisinheritPriorityAfterTimeout( pxQueue );
     114:	00130113 	andseq	r0, r3, r3, lsl r1
     118:	828a1600 	addhi	r1, sl, #0, 12
                            vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
     11c:	0a020001 	beq	80128 <__HEAP_SIZE+0x7f128>
                        taskEXIT_CRITICAL();
     120:	000a4291 	muleq	sl, r1, r2
     124:	82891700 	addhi	r1, r9, #0, 14
     128:	01110101 	tsteq	r1, r1, lsl #2
     12c:	00001331 	andeq	r1, r0, r1, lsr r3
     130:	03012e18 	movweq	r2, #7704	; 0x1e18
     134:	3b0b3a0e 	blcc	2ce974 <__RAM_SIZE+0x1ce974>
     138:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
     13c:	1201110c 	andne	r1, r1, #12, 2
     140:	97064001 	strls	r4, [r6, -r1]
     144:	13010c42 	movwne	r0, #7234	; 0x1c42
     148:	34190000 	ldrcc	r0, [r9], #-0
     14c:	3a0e0300 	bcc	380d54 <__RAM_SIZE+0x280d54>
     150:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     154:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     158:	1a00000a 	bne	188 <__STACKSEAL_SIZE+0x188>
     15c:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
     160:	0b3b0b3a 	bleq	ec2e50 <__RAM_SIZE+0xdc2e50>
     164:	13490b39 	movtne	r0, #39737	; 0x9b39
     168:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
     16c:	1b000006 	blne	18c <__STACKSEAL_SIZE+0x18c>
     170:	0c3f012e 	ldfeqs	f0, [pc], #-184	; c0 <__STACKSEAL_SIZE+0xc0>
     174:	0b3a0e03 	bleq	e83988 <__RAM_SIZE+0xd83988>
     178:	0b390b3b 	bleq	e42e6c <__RAM_SIZE+0xd42e6c>
     17c:	01110c27 	tsteq	r1, r7, lsr #24
     180:	06400112 			; <UNDEFINED> instruction: 0x06400112
     184:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
     188:	1c000013 	stcne	0, cr0, [r0], {19}
     18c:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     190:	0c341349 	ldceq	3, cr1, [r4], #-292	; 0xfffffedc
     194:	00000a02 	andeq	r0, r0, r2, lsl #20
     198:	55010b1d 	strpl	r0, [r1, #-2845]	; 0xfffff4e3
     19c:	00130106 	andseq	r0, r3, r6, lsl #2
     1a0:	00341e00 	eorseq	r1, r4, r0, lsl #28
     1a4:	0b3a0803 	bleq	e821b8 <__RAM_SIZE+0xd821b8>
     1a8:	0b390b3b 	bleq	e42e9c <__RAM_SIZE+0xd42e9c>
     1ac:	06021349 	streq	r1, [r2], -r9, asr #6
     1b0:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
     1b4:	00341f00 	eorseq	r1, r4, r0, lsl #30
     1b8:	0b3a0803 	bleq	e821cc <__RAM_SIZE+0xd821cc>
     1bc:	0b390b3b 	bleq	e42eb0 <__RAM_SIZE+0xd42eb0>
     1c0:	0b1c1349 	bleq	704eec <__RAM_SIZE+0x604eec>
     1c4:	2e200000 	cdpcs	0, 2, cr0, cr0, cr0, {0}
     1c8:	3c0c3f00 	stccc	15, cr3, [ip], {-0}
     1cc:	0e40870c 	cdpeq	7, 4, cr8, cr0, cr12, {0}
     1d0:	0b3a0e03 	bleq	e839e4 <__RAM_SIZE+0xd839e4>
     1d4:	0b390b3b 	bleq	e42ec8 <__RAM_SIZE+0xd42ec8>
     1d8:	2e210000 	cdpcs	0, 2, cr0, cr1, cr0, {0}
     1dc:	3c0c3f00 	stccc	15, cr3, [ip], {-0}
     1e0:	0e40870c 	cdpeq	7, 4, cr8, cr0, cr12, {0}
     1e4:	0b3a0e03 	bleq	e839f8 <__RAM_SIZE+0xd839f8>
     1e8:	00000b3b 	andeq	r0, r0, fp, lsr fp
     1ec:	3f002e22 	svccc	0x00002e22
     1f0:	870c3c0c 	strhi	r3, [ip, -ip, lsl #24]
     1f4:	0e030e40 	cdpeq	14, 0, cr0, cr3, cr0, {2}
     1f8:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     1fc:	00000b39 	andeq	r0, r0, r9, lsr fp
     200:	01110100 	tsteq	r1, r0, lsl #2
     204:	0b130e25 	bleq	4c3aa0 <__RAM_SIZE+0x3c3aa0>
     208:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
     20c:	01110655 	tsteq	r1, r5, asr r6
     210:	06100152 			; <UNDEFINED> instruction: 0x06100152
     214:	24020000 	strcs	r0, [r2], #-0
     218:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     21c:	000e030b 	andeq	r0, lr, fp, lsl #6
     220:	00160300 	andseq	r0, r6, r0, lsl #6
     224:	0b3a0e03 	bleq	e83a38 <__RAM_SIZE+0xd83a38>
     228:	0b390b3b 	bleq	e42f1c <__RAM_SIZE+0xd42f1c>
     22c:	00001349 	andeq	r1, r0, r9, asr #6
     230:	0b002404 	bleq	9248 <__HEAP_SIZE+0x8248>
     234:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
     238:	05000008 	streq	r0, [r0, #-8]
     23c:	13490035 	movtne	r0, #36917	; 0x9035
     240:	26060000 	strcs	r0, [r6], -r0
     244:	00134900 	andseq	r4, r3, r0, lsl #18
     248:	01130700 	tsteq	r3, r0, lsl #14
     24c:	0b3a050b 	bleq	e81680 <__RAM_SIZE+0xd81680>
     250:	0b39053b 	bleq	e41744 <__RAM_SIZE+0xd41744>
     254:	00001301 	andeq	r1, r0, r1, lsl #6
     258:	03000d08 	movweq	r0, #3336	; 0xd08
     25c:	3b0b3a0e 	blcc	2cea9c <__RAM_SIZE+0x1cea9c>
     260:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     264:	000a3813 	andeq	r3, sl, r3, lsl r8
     268:	000d0900 	andeq	r0, sp, r0, lsl #18
     26c:	0b3a0803 	bleq	e82280 <__RAM_SIZE+0xd82280>
     270:	0b39053b 	bleq	e41764 <__RAM_SIZE+0xd41764>
     274:	0a381349 	beq	e04fa0 <__RAM_SIZE+0xd04fa0>
     278:	010a0000 	mrseq	r0, (UNDEF: 10)
     27c:	01134901 	tsteq	r3, r1, lsl #18
     280:	0b000013 	bleq	2d4 <__STACKSEAL_SIZE+0x2d4>
     284:	13490021 	movtne	r0, #36897	; 0x9021
     288:	00000b2f 	andeq	r0, r0, pc, lsr #22
     28c:	0300160c 	movweq	r1, #1548	; 0x60c
     290:	3b0b3a0e 	blcc	2cead0 <__RAM_SIZE+0x1cead0>
     294:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     298:	0d000013 	stceq	0, cr0, [r0, #-76]	; 0xffffffb4
     29c:	0b0b000f 	bleq	2c02e0 <__RAM_SIZE+0x1c02e0>
     2a0:	00001349 	andeq	r1, r0, r9, asr #6
     2a4:	2700150e 	strcs	r1, [r0, -lr, lsl #10]
     2a8:	0f00000c 	svceq	0x0000000c
     2ac:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     2b0:	0b3b0b3a 	bleq	ec2fa0 <__RAM_SIZE+0xdc2fa0>
     2b4:	13490b39 	movtne	r0, #39737	; 0x9b39
     2b8:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
     2bc:	21100000 	tstcs	r0, r0
     2c0:	2f134900 	svccs	0x00134900
     2c4:	11000005 	tstne	r0, r5
     2c8:	13470034 	movtne	r0, #28724	; 0x7034
     2cc:	0b3b0b3a 	bleq	ec2fbc <__RAM_SIZE+0xdc2fbc>
     2d0:	0a020b39 	beq	82fbc <__HEAP_SIZE+0x81fbc>
     2d4:	2e120000 	cdpcs	0, 1, cr0, cr2, cr0, {0}
     2d8:	030c3f00 	movweq	r3, #52992	; 0xcf00
     2dc:	3b0b3a0e 	blcc	2ceb1c <__RAM_SIZE+0x1ceb1c>
     2e0:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
     2e4:	1201110c 	andne	r1, r1, #12, 2
     2e8:	970a4001 	strls	r4, [sl, -r1]
     2ec:	00000c42 	andeq	r0, r0, r2, asr #24
     2f0:	01110100 	tsteq	r1, r0, lsl #2
     2f4:	0b130e25 	bleq	4c3b90 <__RAM_SIZE+0x3c3b90>
     2f8:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
     2fc:	01110655 	tsteq	r1, r5, asr r6
     300:	06100152 			; <UNDEFINED> instruction: 0x06100152
     304:	24020000 	strcs	r0, [r2], #-0
     308:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     30c:	000e030b 	andeq	r0, lr, fp, lsl #6
     310:	00260300 	eoreq	r0, r6, r0, lsl #6
     314:	00001349 	andeq	r1, r0, r9, asr #6
     318:	03001604 	movweq	r1, #1540	; 0x604
     31c:	3b0b3a0e 	blcc	2ceb5c <__RAM_SIZE+0x1ceb5c>
     320:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     324:	05000013 	streq	r0, [r0, #-19]	; 0xffffffed
     328:	0b0b0024 	bleq	2c03c0 <__RAM_SIZE+0x1c03c0>
     32c:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
     330:	13060000 	movwne	r0, #24576	; 0x6000
     334:	0b0e0301 	bleq	380f40 <__RAM_SIZE+0x280f40>
     338:	3b0b3a0b 	blcc	2ceb6c <__RAM_SIZE+0x1ceb6c>
     33c:	0013010b 	andseq	r0, r3, fp, lsl #2
     340:	000d0700 	andeq	r0, sp, r0, lsl #14
     344:	13490e03 	movtne	r0, #40451	; 0x9e03
     348:	0c340a38 			; <UNDEFINED> instruction: 0x0c340a38
     34c:	0f080000 	svceq	0x00080000
     350:	000b0b00 	andeq	r0, fp, r0, lsl #22
     354:	000f0900 	andeq	r0, pc, r0, lsl #18
     358:	13490b0b 	movtne	r0, #39691	; 0x9b0b
     35c:	150a0000 	strne	r0, [sl, #-0]
     360:	010c2701 	tsteq	ip, r1, lsl #14
     364:	0b000013 	bleq	3b8 <__STACKSEAL_SIZE+0x3b8>
     368:	13490005 	movtne	r0, #36869	; 0x9005
     36c:	130c0000 	movwne	r0, #49152	; 0xc000
     370:	3a0b0b01 	bcc	2c2f7c <__RAM_SIZE+0x1c2f7c>
     374:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     378:	0013010b 	andseq	r0, r3, fp, lsl #2
     37c:	000d0d00 	andeq	r0, sp, r0, lsl #26
     380:	0b3a0803 	bleq	e82394 <__RAM_SIZE+0xd82394>
     384:	0b390b3b 	bleq	e43078 <__RAM_SIZE+0xd43078>
     388:	0a381349 	beq	e050b4 <__RAM_SIZE+0xd050b4>
     38c:	2e0e0000 	cdpcs	0, 0, cr0, cr14, cr0, {0}
     390:	030c3f01 	movweq	r3, #52993	; 0xcf01
     394:	3b0b3a0e 	blcc	2cebd4 <__RAM_SIZE+0x1cebd4>
     398:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
     39c:	1113490c 	tstne	r3, ip, lsl #18
     3a0:	40011201 	andmi	r1, r1, r1, lsl #4
     3a4:	0c429706 	mcrreq	7, 0, r9, r2, cr6
     3a8:	00001301 	andeq	r1, r0, r1, lsl #6
     3ac:	0300050f 	movweq	r0, #1295	; 0x50f
     3b0:	3b0b3a08 	blcc	2cebd8 <__RAM_SIZE+0x1cebd8>
     3b4:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     3b8:	b7060213 	smladlt	r6, r3, r2, r0
     3bc:	00000642 	andeq	r0, r0, r2, asr #12
     3c0:	03000510 	movweq	r0, #1296	; 0x510
     3c4:	3b0b3a0e 	blcc	2cec04 <__RAM_SIZE+0x1cec04>
     3c8:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     3cc:	000a0213 	andeq	r0, sl, r3, lsl r2
     3d0:	00181100 	andseq	r1, r8, r0, lsl #2
     3d4:	34120000 	ldrcc	r0, [r2], #-0
     3d8:	3a080300 	bcc	200fe0 <__RAM_SIZE+0x100fe0>
     3dc:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     3e0:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     3e4:	1300000a 	movwne	r0, #10
     3e8:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     3ec:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     3f0:	13490b39 	movtne	r0, #39737	; 0x9b39
     3f4:	00000a02 	andeq	r0, r0, r2, lsl #20
     3f8:	03003414 	movweq	r3, #1044	; 0x414
     3fc:	3b0b3a08 	blcc	2cec24 <__RAM_SIZE+0x1cec24>
     400:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     404:	b7060213 	smladlt	r6, r3, r2, r0
     408:	00000642 	andeq	r0, r0, r2, asr #12
     40c:	01828915 	orreq	r8, r2, r5, lsl r9
     410:	31011101 	tstcc	r1, r1, lsl #2
     414:	16000013 			; <UNDEFINED> instruction: 0x16000013
     418:	0001828a 	andeq	r8, r1, sl, lsl #5
     41c:	42910a02 	addsmi	r0, r1, #8192	; 0x2000
     420:	1700000a 	strne	r0, [r0, -sl]
     424:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
     428:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     42c:	13490b39 	movtne	r0, #39737	; 0x9b39
     430:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
     434:	18000006 	stmdane	r0, {r1, r2}
     438:	13490101 	movtne	r0, #37121	; 0x9101
     43c:	00001301 	andeq	r1, r0, r1, lsl #6
     440:	49002119 	stmdbmi	r0, {r0, r3, r4, r8, sp}
     444:	000b2f13 	andeq	r2, fp, r3, lsl pc
     448:	012e1a00 			; <UNDEFINED> instruction: 0x012e1a00
     44c:	0b3a0e03 	bleq	e83c60 <__RAM_SIZE+0xd83c60>
     450:	0b39053b 	bleq	e41944 <__RAM_SIZE+0xd41944>
     454:	13490c27 	movtne	r0, #39975	; 0x9c27
     458:	01120111 	tsteq	r2, r1, lsl r1
     45c:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
     460:	0013010c 	andseq	r0, r3, ip, lsl #2
     464:	00051b00 	andeq	r1, r5, r0, lsl #22
     468:	0b3a0803 	bleq	e8247c <__RAM_SIZE+0xd8247c>
     46c:	0b39053b 	bleq	e41960 <__RAM_SIZE+0xd41960>
     470:	0a021349 	beq	8519c <__HEAP_SIZE+0x8419c>
     474:	341c0000 	ldrcc	r0, [ip], #-0
     478:	3a0e0300 	bcc	381080 <__RAM_SIZE+0x281080>
     47c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     480:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     484:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
     488:	0b1d0000 	bleq	740490 <__RAM_SIZE+0x640490>
     48c:	12011101 	andne	r1, r1, #1073741824	; 0x40000000
     490:	00130101 	andseq	r0, r3, r1, lsl #2
     494:	010b1e00 	tsteq	fp, r0, lsl #28
     498:	13010655 	movwne	r0, #5717	; 0x1655
     49c:	341f0000 	ldrcc	r0, [pc], #-0	; 4a4 <__STACKSEAL_SIZE+0x4a4>
     4a0:	3a0e0300 	bcc	3810a8 <__RAM_SIZE+0x2810a8>
     4a4:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     4a8:	0013490b 	andseq	r4, r3, fp, lsl #18
     4ac:	82892000 	addhi	r2, r9, #0
     4b0:	01110101 	tsteq	r1, r1, lsl #2
     4b4:	13011331 	movwne	r1, #4913	; 0x1331
     4b8:	89210000 	stmdbhi	r1!, {}	; <UNPREDICTABLE>
     4bc:	11010182 	smlabbne	r1, r2, r1, r0
     4c0:	00130101 	andseq	r0, r3, r1, lsl #2
     4c4:	82892200 	addhi	r2, r9, #0, 4
     4c8:	01110101 	tsteq	r1, r1, lsl #2
     4cc:	1d230000 	stcne	0, cr0, [r3, #-0]
     4d0:	11133101 	tstne	r3, r1, lsl #2
     4d4:	58011201 	stmdapl	r1, {r0, r9, ip}
     4d8:	5705590b 	strpl	r5, [r5, -fp, lsl #18]
     4dc:	0013010b 	andseq	r0, r3, fp, lsl #2
     4e0:	00052400 	andeq	r2, r5, r0, lsl #8
     4e4:	06021331 			; <UNDEFINED> instruction: 0x06021331
     4e8:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
     4ec:	00052500 	andeq	r2, r5, r0, lsl #10
     4f0:	00001331 	andeq	r1, r0, r1, lsr r3
     4f4:	31003426 	tstcc	r0, r6, lsr #8
     4f8:	b7060213 	smladlt	r6, r3, r2, r0
     4fc:	00000642 	andeq	r0, r0, r2, asr #12
     500:	31011d27 	tstcc	r1, r7, lsr #26
     504:	b8015213 	stmdalt	r1, {r0, r1, r4, r9, ip, lr}
     508:	01110542 	tsteq	r1, r2, asr #10
     50c:	0b580112 	bleq	160095c <__RAM_SIZE+0x150095c>
     510:	0b570559 	bleq	15c1a7c <__RAM_SIZE+0x14c1a7c>
     514:	00001301 	andeq	r1, r0, r1, lsl #6
     518:	01828928 	orreq	r8, r2, r8, lsr #18
     51c:	93011101 	movwls	r1, #4353	; 0x1101
     520:	13010a42 	movwne	r0, #6722	; 0x1a42
     524:	17290000 	strne	r0, [r9, -r0]!
     528:	3a0b0b01 	bcc	2c3134 <__RAM_SIZE+0x1c3134>
     52c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     530:	0013010b 	andseq	r0, r3, fp, lsl #2
     534:	000d2a00 	andeq	r2, sp, r0, lsl #20
     538:	0b3a0803 	bleq	e8254c <__RAM_SIZE+0xd8254c>
     53c:	0b39053b 	bleq	e41a30 <__RAM_SIZE+0xd41a30>
     540:	00001349 	andeq	r1, r0, r9, asr #6
     544:	0182892b 	orreq	r8, r2, fp, lsr #18
     548:	31011100 	mrscc	r1, (UNDEF: 17)
     54c:	2c000013 	stccs	0, cr0, [r0], {19}
     550:	0e03012e 	adfeqsp	f0, f3, #0.5
     554:	0b3b0b3a 	bleq	ec3244 <__RAM_SIZE+0xdc3244>
     558:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     55c:	01111349 	tsteq	r1, r9, asr #6
     560:	06400112 			; <UNDEFINED> instruction: 0x06400112
     564:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
     568:	2d000013 	stccs	0, cr0, [r0, #-76]	; 0xffffffb4
     56c:	08030005 	stmdaeq	r3, {r0, r2}
     570:	0b3b0b3a 	bleq	ec3260 <__RAM_SIZE+0xdc3260>
     574:	13490b39 	movtne	r0, #39737	; 0x9b39
     578:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
     57c:	2e000006 	cdpcs	0, 0, cr0, cr0, cr6, {0}
     580:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
     584:	0b3b0b3a 	bleq	ec3274 <__RAM_SIZE+0xdc3274>
     588:	13490b39 	movtne	r0, #39737	; 0x9b39
     58c:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
     590:	2f000006 	svccs	0x00000006
     594:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     598:	0b3b0b3a 	bleq	ec3288 <__RAM_SIZE+0xdc3288>
     59c:	13490b39 	movtne	r0, #39737	; 0x9b39
     5a0:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
     5a4:	30000006 	andcc	r0, r0, r6
     5a8:	08030034 	stmdaeq	r3, {r2, r4, r5}
     5ac:	0b3b0b3a 	bleq	ec329c <__RAM_SIZE+0xdc329c>
     5b0:	13490b39 	movtne	r0, #39737	; 0x9b39
     5b4:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
     5b8:	31000006 	tstcc	r0, r6
     5bc:	0e03012e 	adfeqsp	f0, f3, #0.5
     5c0:	0b3b0b3a 	bleq	ec32b0 <__RAM_SIZE+0xdc32b0>
     5c4:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     5c8:	01111349 	tsteq	r1, r9, asr #6
     5cc:	0a400112 	beq	1000a1c <__RAM_SIZE+0xf00a1c>
     5d0:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
     5d4:	32000013 	andcc	r0, r0, #19
     5d8:	1331011d 	teqne	r1, #1073741831	; 0x40000007
     5dc:	42b80152 	adcsmi	r0, r8, #-2147483628	; 0x80000014
     5e0:	12011105 	andne	r1, r1, #1073741825	; 0x40000001
     5e4:	590b5801 	stmdbpl	fp, {r0, fp, ip, lr}
     5e8:	000b570b 	andeq	r5, fp, fp, lsl #14
     5ec:	012e3300 			; <UNDEFINED> instruction: 0x012e3300
     5f0:	0b3a0e03 	bleq	e83e04 <__RAM_SIZE+0xd83e04>
     5f4:	0b390b3b 	bleq	e432e8 <__RAM_SIZE+0xd432e8>
     5f8:	13490c27 	movtne	r0, #39975	; 0x9c27
     5fc:	13010b20 	movwne	r0, #6944	; 0x1b20
     600:	05340000 	ldreq	r0, [r4, #-0]!
     604:	3a080300 	bcc	20120c <__RAM_SIZE+0x10120c>
     608:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     60c:	0013490b 	andseq	r4, r3, fp, lsl #18
     610:	00053500 	andeq	r3, r5, r0, lsl #10
     614:	0b3a0e03 	bleq	e83e28 <__RAM_SIZE+0xd83e28>
     618:	0b390b3b 	bleq	e4330c <__RAM_SIZE+0xd4330c>
     61c:	00001349 	andeq	r1, r0, r9, asr #6
     620:	03003436 	movweq	r3, #1078	; 0x436
     624:	3b0b3a08 	blcc	2cee4c <__RAM_SIZE+0x1cee4c>
     628:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     62c:	37000013 	smladcc	r0, r3, r0, r0
     630:	0e03012e 	adfeqsp	f0, f3, #0.5
     634:	0b3b0b3a 	bleq	ec3324 <__RAM_SIZE+0xdc3324>
     638:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     63c:	01120111 	tsteq	r2, r1, lsl r1
     640:	42960640 	addsmi	r0, r6, #64, 12	; 0x4000000
     644:	0013010c 	andseq	r0, r3, ip, lsl #2
     648:	012e3800 			; <UNDEFINED> instruction: 0x012e3800
     64c:	0b3a0e03 	bleq	e83e60 <__RAM_SIZE+0xd83e60>
     650:	0b390b3b 	bleq	e43344 <__RAM_SIZE+0xd43344>
     654:	01110c27 	tsteq	r1, r7, lsr #24
     658:	06400112 			; <UNDEFINED> instruction: 0x06400112
     65c:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
     660:	39000013 	stmdbcc	r0, {r0, r1, r4}
     664:	0e03012e 	adfeqsp	f0, f3, #0.5
     668:	0b3b0b3a 	bleq	ec3358 <__RAM_SIZE+0xdc3358>
     66c:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     670:	01120111 	tsteq	r2, r1, lsl r1
     674:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
     678:	0013010c 	andseq	r0, r3, ip, lsl #2
     67c:	00053a00 	andeq	r3, r5, r0, lsl #20
     680:	0b3a0e03 	bleq	e83e94 <__RAM_SIZE+0xd83e94>
     684:	0b390b3b 	bleq	e43378 <__RAM_SIZE+0xd43378>
     688:	0a021349 	beq	853b4 <__HEAP_SIZE+0x843b4>
     68c:	053b0000 	ldreq	r0, [fp, #-0]!
     690:	3a080300 	bcc	201298 <__RAM_SIZE+0x101298>
     694:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     698:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     69c:	3c00000a 	stccc	0, cr0, [r0], {10}
     6a0:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 5f0 <__STACKSEAL_SIZE+0x5f0>
     6a4:	40870c3c 	addmi	r0, r7, ip, lsr ip
     6a8:	000e030e 	andeq	r0, lr, lr, lsl #6
     6ac:	002e3d00 	eoreq	r3, lr, r0, lsl #26
     6b0:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
     6b4:	030e4087 	movweq	r4, #57479	; 0xe087
     6b8:	3b0b3a0e 	blcc	2ceef8 <__RAM_SIZE+0x1ceef8>
     6bc:	000b390b 	andeq	r3, fp, fp, lsl #18
     6c0:	11010000 	mrsne	r0, (UNDEF: 1)
     6c4:	130e2501 	movwne	r2, #58625	; 0xe501
     6c8:	1b0e030b 	blne	3812fc <__RAM_SIZE+0x2812fc>
     6cc:	1106550e 	tstne	r6, lr, lsl #10
     6d0:	10015201 	andne	r5, r1, r1, lsl #4
     6d4:	02000006 	andeq	r0, r0, #6
     6d8:	0b0b0024 	bleq	2c0770 <__RAM_SIZE+0x1c0770>
     6dc:	0e030b3e 	vmoveq.16	d3[0], r0
     6e0:	16030000 	strne	r0, [r3], -r0
     6e4:	3a0e0300 	bcc	3812ec <__RAM_SIZE+0x2812ec>
     6e8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     6ec:	0013490b 	andseq	r4, r3, fp, lsl #18
     6f0:	00240400 	eoreq	r0, r4, r0, lsl #8
     6f4:	0b3e0b0b 	bleq	f83328 <__RAM_SIZE+0xe83328>
     6f8:	00000803 	andeq	r0, r0, r3, lsl #16
     6fc:	49002605 	stmdbmi	r0, {r0, r2, r9, sl, sp}
     700:	06000013 			; <UNDEFINED> instruction: 0x06000013
     704:	0b0b000f 	bleq	2c0748 <__RAM_SIZE+0x1c0748>
     708:	00001349 	andeq	r1, r0, r9, asr #6
     70c:	3f012e07 	svccc	0x00012e07
     710:	3a0e030c 	bcc	381348 <__RAM_SIZE+0x281348>
     714:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     718:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
     71c:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
     720:	97064001 	strls	r4, [r6, -r1]
     724:	13010c42 	movwne	r0, #7234	; 0x1c42
     728:	05080000 	streq	r0, [r8, #-0]
     72c:	3a0e0300 	bcc	381334 <__RAM_SIZE+0x281334>
     730:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     734:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     738:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
     73c:	34090000 	strcc	r0, [r9], #-0
     740:	3a080300 	bcc	201348 <__RAM_SIZE+0x101348>
     744:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     748:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     74c:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
     750:	890a0000 	stmdbhi	sl, {}	; <UNPREDICTABLE>
     754:	11000182 	smlabbne	r0, r2, r1, r0
     758:	00133101 	andseq	r3, r3, r1, lsl #2
     75c:	012e0b00 			; <UNDEFINED> instruction: 0x012e0b00
     760:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
     764:	0b3b0b3a 	bleq	ec3454 <__RAM_SIZE+0xdc3454>
     768:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     76c:	01120111 	tsteq	r2, r1, lsl r1
     770:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
     774:	0013010c 	andseq	r0, r3, ip, lsl #2
     778:	82890c00 	addhi	r0, r9, #0, 24
     77c:	01110101 	tsteq	r1, r1, lsl #2
     780:	00001331 	andeq	r1, r0, r1, lsr r3
     784:	01828a0d 	orreq	r8, r2, sp, lsl #20
     788:	910a0200 	mrsls	r0, R10_fiq
     78c:	00000a42 	andeq	r0, r0, r2, asr #20
     790:	3f002e0e 	svccc	0x00002e0e
     794:	3a0e030c 	bcc	3813cc <__RAM_SIZE+0x2813cc>
     798:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     79c:	110c270b 	tstne	ip, fp, lsl #14
     7a0:	40011201 	andmi	r1, r1, r1, lsl #4
     7a4:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
     7a8:	340f0000 	strcc	r0, [pc], #-0	; 7b0 <__STACKSEAL_SIZE+0x7b0>
     7ac:	3a0e0300 	bcc	3813b4 <__RAM_SIZE+0x2813b4>
     7b0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     7b4:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     7b8:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
     7bc:	2e100000 	cdpcs	0, 1, cr0, cr0, cr0, {0}
     7c0:	030c3f00 	movweq	r3, #52992	; 0xcf00
     7c4:	3b0b3a0e 	blcc	2cf004 <__RAM_SIZE+0x1cf004>
     7c8:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
     7cc:	1113490c 	tstne	r3, ip, lsl #18
     7d0:	40011201 	andmi	r1, r1, r1, lsl #4
     7d4:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
     7d8:	2e110000 	cdpcs	0, 1, cr0, cr1, cr0, {0}
     7dc:	030c3f01 	movweq	r3, #52993	; 0xcf01
     7e0:	3b0b3a0e 	blcc	2cf020 <__RAM_SIZE+0x1cf020>
     7e4:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
     7e8:	1113490c 	tstne	r3, ip, lsl #18
     7ec:	40011201 	andmi	r1, r1, r1, lsl #4
     7f0:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
     7f4:	00001301 	andeq	r1, r0, r1, lsl #6
     7f8:	03000512 	movweq	r0, #1298	; 0x512
     7fc:	3b0b3a08 	blcc	2cf024 <__RAM_SIZE+0x1cf024>
     800:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     804:	b7060213 	smladlt	r6, r3, r2, r0
     808:	00000642 	andeq	r0, r0, r2, asr #12
     80c:	3f002e13 	svccc	0x00002e13
     810:	870c3c0c 	strhi	r3, [ip, -ip, lsl #24]
     814:	0e030e40 	cdpeq	14, 0, cr0, cr3, cr0, {2}
     818:	0b3b0b3a 	bleq	ec3508 <__RAM_SIZE+0xdc3508>
     81c:	00000b39 	andeq	r0, r0, r9, lsr fp
     820:	01110100 	tsteq	r1, r0, lsl #2
     824:	0b130e25 	bleq	4c40c0 <__RAM_SIZE+0x3c40c0>
     828:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
     82c:	01110655 	tsteq	r1, r5, asr r6
     830:	06100152 			; <UNDEFINED> instruction: 0x06100152
     834:	24020000 	strcs	r0, [r2], #-0
     838:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     83c:	000e030b 	andeq	r0, lr, fp, lsl #6
     840:	00160300 	andseq	r0, r6, r0, lsl #6
     844:	0b3a0e03 	bleq	e84058 <__RAM_SIZE+0xd84058>
     848:	0b390b3b 	bleq	e4353c <__RAM_SIZE+0xd4353c>
     84c:	00001349 	andeq	r1, r0, r9, asr #6
     850:	0b002404 	bleq	9868 <__HEAP_SIZE+0x8868>
     854:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
     858:	05000008 	streq	r0, [r0, #-8]
     85c:	13490035 	movtne	r0, #36917	; 0x9035
     860:	13060000 	movwne	r0, #24576	; 0x6000
     864:	0b0e0301 	bleq	381470 <__RAM_SIZE+0x281470>
     868:	3b0b3a0b 	blcc	2cf09c <__RAM_SIZE+0x1cf09c>
     86c:	010b390b 	tsteq	fp, fp, lsl #18
     870:	07000013 	smladeq	r0, r3, r0, r0
     874:	0803000d 	stmdaeq	r3, {r0, r2, r3}
     878:	0b3b0b3a 	bleq	ec3568 <__RAM_SIZE+0xdc3568>
     87c:	13490b39 	movtne	r0, #39737	; 0x9b39
     880:	00000a38 	andeq	r0, r0, r8, lsr sl
     884:	03000d08 	movweq	r0, #3336	; 0xd08
     888:	3b0b3a0e 	blcc	2cf0c8 <__RAM_SIZE+0x1cf0c8>
     88c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     890:	000a3813 	andeq	r3, sl, r3, lsl r8
     894:	00340900 	eorseq	r0, r4, r0, lsl #18
     898:	0b3a0e03 	bleq	e840ac <__RAM_SIZE+0xd840ac>
     89c:	0b390b3b 	bleq	e43590 <__RAM_SIZE+0xd43590>
     8a0:	0c3f1349 	ldceq	3, cr1, [pc], #-292	; 784 <__STACKSEAL_SIZE+0x784>
     8a4:	00000c3c 	andeq	r0, r0, ip, lsr ip
     8a8:	0300340a 	movweq	r3, #1034	; 0x40a
     8ac:	3b0b3a0e 	blcc	2cf0ec <__RAM_SIZE+0x1cf0ec>
     8b0:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     8b4:	020c3f13 	andeq	r3, ip, #19, 30	; 0x4c
     8b8:	0b00000a 	bleq	8e8 <__Vectors_Size+0x128>
     8bc:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 80c <__Vectors_Size+0x4c>
     8c0:	0b3a0e03 	bleq	e840d4 <__RAM_SIZE+0xd840d4>
     8c4:	0b39053b 	bleq	e41db8 <__RAM_SIZE+0xd41db8>
     8c8:	13490c27 	movtne	r0, #39975	; 0x9c27
     8cc:	01120111 	tsteq	r2, r1, lsl r1
     8d0:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
     8d4:	0c00000c 	stceq	0, cr0, [r0], {12}
     8d8:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 828 <__Vectors_Size+0x68>
     8dc:	0b3a0e03 	bleq	e840f0 <__RAM_SIZE+0xd840f0>
     8e0:	0b39053b 	bleq	e41dd4 <__RAM_SIZE+0xd41dd4>
     8e4:	13490c27 	movtne	r0, #39975	; 0x9c27
     8e8:	01120111 	tsteq	r2, r1, lsl r1
     8ec:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
     8f0:	0013010c 	andseq	r0, r3, ip, lsl #2
     8f4:	011d0d00 	tsteq	sp, r0, lsl #26
     8f8:	01521331 	cmpeq	r2, r1, lsr r3
     8fc:	110b42b8 			; <UNDEFINED> instruction: 0x110b42b8
     900:	58011201 	stmdapl	r1, {r0, r9, ip}
     904:	5705590b 	strpl	r5, [r5, -fp, lsl #18]
     908:	0e00000b 	cdpeq	0, 0, cr0, cr0, cr11, {0}
     90c:	13310034 	teqne	r1, #52	; 0x34
     910:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
     914:	0f000006 	svceq	0x00000006
     918:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 868 <__Vectors_Size+0xa8>
     91c:	0b3a0e03 	bleq	e84130 <__RAM_SIZE+0xd84130>
     920:	0b390b3b 	bleq	e43614 <__RAM_SIZE+0xd43614>
     924:	13490c27 	movtne	r0, #39975	; 0x9c27
     928:	01120111 	tsteq	r2, r1, lsl r1
     92c:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
     930:	0013010c 	andseq	r0, r3, ip, lsl #2
     934:	00051000 	andeq	r1, r5, r0
     938:	0b3a0e03 	bleq	e8414c <__RAM_SIZE+0xd8414c>
     93c:	0b390b3b 	bleq	e43630 <__RAM_SIZE+0xd43630>
     940:	06021349 	streq	r1, [r2], -r9, asr #6
     944:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
     948:	00341100 	eorseq	r1, r4, r0, lsl #2
     94c:	0b3a0e03 	bleq	e84160 <__RAM_SIZE+0xd84160>
     950:	0b390b3b 	bleq	e43644 <__RAM_SIZE+0xd43644>
     954:	06021349 	streq	r1, [r2], -r9, asr #6
     958:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
     95c:	00341200 	eorseq	r1, r4, r0, lsl #4
     960:	0b3a0803 	bleq	e82974 <__RAM_SIZE+0xd82974>
     964:	0b390b3b 	bleq	e43658 <__RAM_SIZE+0xd43658>
     968:	06021349 	streq	r1, [r2], -r9, asr #6
     96c:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
     970:	82891300 	addhi	r1, r9, #0, 6
     974:	01110101 	tsteq	r1, r1, lsl #2
     978:	13011331 	movwne	r1, #4913	; 0x1331
     97c:	8a140000 	bhi	500984 <__RAM_SIZE+0x400984>
     980:	02000182 	andeq	r0, r0, #-2147483616	; 0x80000020
     984:	0a42910a 	beq	10a4db4 <__RAM_SIZE+0xfa4db4>
     988:	89150000 	ldmdbhi	r5, {}	; <UNPREDICTABLE>
     98c:	11000182 	smlabbne	r0, r2, r1, r0
     990:	00133101 	andseq	r3, r3, r1, lsl #2
     994:	000f1600 	andeq	r1, pc, r0, lsl #12
     998:	13490b0b 	movtne	r0, #39691	; 0x9b0b
     99c:	2e170000 	cdpcs	0, 1, cr0, cr7, cr0, {0}
     9a0:	030c3f01 	movweq	r3, #52993	; 0xcf01
     9a4:	3b0b3a0e 	blcc	2cf1e4 <__RAM_SIZE+0x1cf1e4>
     9a8:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
     9ac:	1201110c 	andne	r1, r1, #12, 2
     9b0:	97064001 	strls	r4, [r6, -r1]
     9b4:	13010c42 	movwne	r0, #7234	; 0x1c42
     9b8:	34180000 	ldrcc	r0, [r8], #-0
     9bc:	3a0e0300 	bcc	3815c4 <__RAM_SIZE+0x2815c4>
     9c0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     9c4:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     9c8:	1900000a 	stmdbne	r0, {r1, r3}
     9cc:	01018289 	smlabbeq	r1, r9, r2, r8
     9d0:	13310111 	teqne	r1, #1073741828	; 0x40000004
     9d4:	011a0000 	tsteq	sl, r0
     9d8:	01134901 	tsteq	r3, r1, lsl #18
     9dc:	1b000013 	blne	a30 <__Vectors_Size+0x270>
     9e0:	13490021 	movtne	r0, #36897	; 0x9021
     9e4:	00000b2f 	andeq	r0, r0, pc, lsr #22
     9e8:	03012e1c 	movweq	r2, #7708	; 0x1e1c
     9ec:	3b0b3a0e 	blcc	2cf22c <__RAM_SIZE+0x1cf22c>
     9f0:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
     9f4:	1201110c 	andne	r1, r1, #12, 2
     9f8:	97064001 	strls	r4, [r6, -r1]
     9fc:	13010c42 	movwne	r0, #7234	; 0x1c42
     a00:	2e1d0000 	cdpcs	0, 1, cr0, cr13, cr0, {0}
     a04:	030c3f01 	movweq	r3, #52993	; 0xcf01
     a08:	3b0b3a0e 	blcc	2cf248 <__RAM_SIZE+0x1cf248>
     a0c:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
     a10:	010c3c0c 	tsteq	ip, ip, lsl #24
     a14:	1e000013 	mcrne	0, 0, r0, cr0, cr3, {0}
     a18:	13490005 	movtne	r0, #36869	; 0x9005
     a1c:	2e1f0000 	cdpcs	0, 1, cr0, cr15, cr0, {0}
     a20:	3a0e0301 	bcc	38162c <__RAM_SIZE+0x28162c>
     a24:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     a28:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
     a2c:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
     a30:	970a4001 	strls	r4, [sl, -r1]
     a34:	13010c42 	movwne	r0, #7234	; 0x1c42
     a38:	05200000 	streq	r0, [r0, #-0]!
     a3c:	3a080300 	bcc	201644 <__RAM_SIZE+0x101644>
     a40:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     a44:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     a48:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
     a4c:	2e210000 	cdpcs	0, 2, cr0, cr1, cr0, {0}
     a50:	3a0e0301 	bcc	38165c <__RAM_SIZE+0x28165c>
     a54:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     a58:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
     a5c:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
     a60:	97064001 	strls	r4, [r6, -r1]
     a64:	13010c42 	movwne	r0, #7234	; 0x1c42
     a68:	0b220000 	bleq	880a70 <__RAM_SIZE+0x780a70>
     a6c:	12011101 	andne	r1, r1, #1073741824	; 0x40000000
     a70:	23000001 	movwcs	r0, #1
     a74:	0e03012e 	adfeqsp	f0, f3, #0.5
     a78:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     a7c:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     a80:	0b201349 	bleq	8057ac <__RAM_SIZE+0x7057ac>
     a84:	00001301 	andeq	r1, r0, r1, lsl #6
     a88:	03003424 	movweq	r3, #1060	; 0x424
     a8c:	3b0b3a0e 	blcc	2cf2cc <__RAM_SIZE+0x1cf2cc>
     a90:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     a94:	25000013 	strcs	r0, [r0, #-19]	; 0xffffffed
     a98:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 9e8 <__Vectors_Size+0x228>
     a9c:	40870c3c 	addmi	r0, r7, ip, lsr ip
     aa0:	3a0e030e 	bcc	3816e0 <__RAM_SIZE+0x2816e0>
     aa4:	000b3b0b 	andeq	r3, fp, fp, lsl #22
     aa8:	002e2600 	eoreq	r2, lr, r0, lsl #12
     aac:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
     ab0:	030e4087 	movweq	r4, #57479	; 0xe087
     ab4:	3b0b3a0e 	blcc	2cf2f4 <__RAM_SIZE+0x1cf2f4>
     ab8:	000b390b 	andeq	r3, fp, fp, lsl #18
     abc:	11010000 	mrsne	r0, (UNDEF: 1)
     ac0:	130e2501 	movwne	r2, #58625	; 0xe501
     ac4:	1b0e030b 	blne	3816f8 <__RAM_SIZE+0x2816f8>
     ac8:	1106550e 	tstne	r6, lr, lsl #10
     acc:	10015201 	andne	r5, r1, r1, lsl #4
     ad0:	02000006 	andeq	r0, r0, #6
     ad4:	0b0b0024 	bleq	2c0b6c <__RAM_SIZE+0x1c0b6c>
     ad8:	0e030b3e 	vmoveq.16	d3[0], r0
     adc:	24030000 	strcs	r0, [r3], #-0
     ae0:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     ae4:	0008030b 	andeq	r0, r8, fp, lsl #6
     ae8:	012e0400 			; <UNDEFINED> instruction: 0x012e0400
     aec:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
     af0:	0b3b0b3a 	bleq	ec37e0 <__RAM_SIZE+0xdc37e0>
     af4:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     af8:	01120111 	tsteq	r2, r1, lsl r1
     afc:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
     b00:	0013010c 	andseq	r0, r3, ip, lsl #2
     b04:	00050500 	andeq	r0, r5, r0, lsl #10
     b08:	0b3a0e03 	bleq	e8431c <__RAM_SIZE+0xd8431c>
     b0c:	0b390b3b 	bleq	e43800 <__RAM_SIZE+0xd43800>
     b10:	06021349 	streq	r1, [r2], -r9, asr #6
     b14:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
     b18:	82890600 	addhi	r0, r9, #0, 12
     b1c:	01110101 	tsteq	r1, r1, lsl #2
     b20:	13011331 	movwne	r1, #4913	; 0x1331
     b24:	8a070000 	bhi	1c0b2c <__RAM_SIZE+0xc0b2c>
     b28:	02000182 	andeq	r0, r0, #-2147483616	; 0x80000020
     b2c:	0a42910a 	beq	10a4f5c <__RAM_SIZE+0xfa4f5c>
     b30:	89080000 	stmdbhi	r8, {}	; <UNPREDICTABLE>
     b34:	11010182 	smlabbne	r1, r2, r1, r0
     b38:	00133101 	andseq	r3, r3, r1, lsl #2
     b3c:	002e0900 	eoreq	r0, lr, r0, lsl #18
     b40:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
     b44:	030e4087 	movweq	r4, #57479	; 0xe087
     b48:	3b0b3a0e 	blcc	2cf388 <__RAM_SIZE+0x1cf388>
     b4c:	0a00000b 	beq	b80 <__Vectors_Size+0x3c0>
     b50:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; aa0 <__Vectors_Size+0x2e0>
     b54:	40870c3c 	addmi	r0, r7, ip, lsr ip
     b58:	3a0e030e 	bcc	381798 <__RAM_SIZE+0x281798>
     b5c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     b60:	0000000b 	andeq	r0, r0, fp
     b64:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
     b68:	030b130e 	movweq	r1, #45838	; 0xb30e
     b6c:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
     b70:	52011106 	andpl	r1, r1, #-2147483647	; 0x80000001
     b74:	00061001 	andeq	r1, r6, r1
     b78:	00240200 	eoreq	r0, r4, r0, lsl #4
     b7c:	0b3e0b0b 	bleq	f837b0 <__RAM_SIZE+0xe837b0>
     b80:	00000e03 	andeq	r0, r0, r3, lsl #28
     b84:	0b002403 	bleq	9b98 <__HEAP_SIZE+0x8b98>
     b88:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
     b8c:	04000008 	streq	r0, [r0], #-8
     b90:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
     b94:	0b3b0b3a 	bleq	ec3884 <__RAM_SIZE+0xdc3884>
     b98:	13490b39 	movtne	r0, #39737	; 0x9b39
     b9c:	0f050000 	svceq	0x00050000
     ba0:	000b0b00 	andeq	r0, fp, r0, lsl #22
     ba4:	00260600 	eoreq	r0, r6, r0, lsl #12
     ba8:	00001349 	andeq	r1, r0, r9, asr #6
     bac:	03011307 	movweq	r1, #4871	; 0x1307
     bb0:	3a0b0b0e 	bcc	2c37f0 <__RAM_SIZE+0x1c37f0>
     bb4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     bb8:	0013010b 	andseq	r0, r3, fp, lsl #2
     bbc:	000d0800 	andeq	r0, sp, r0, lsl #16
     bc0:	0b3a0e03 	bleq	e843d4 <__RAM_SIZE+0xd843d4>
     bc4:	0b390b3b 	bleq	e438b8 <__RAM_SIZE+0xd438b8>
     bc8:	0a381349 	beq	e058f4 <__RAM_SIZE+0xd058f4>
     bcc:	0f090000 	svceq	0x00090000
     bd0:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
     bd4:	0a000013 	beq	c28 <__Vectors_Size+0x468>
     bd8:	0c3f012e 	ldfeqs	f0, [pc], #-184	; b28 <__Vectors_Size+0x368>
     bdc:	0b3a0e03 	bleq	e843f0 <__RAM_SIZE+0xd843f0>
     be0:	0b390b3b 	bleq	e438d4 <__RAM_SIZE+0xd438d4>
     be4:	13490c27 	movtne	r0, #39975	; 0x9c27
     be8:	01120111 	tsteq	r2, r1, lsl r1
     bec:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
     bf0:	0013010c 	andseq	r0, r3, ip, lsl #2
     bf4:	00050b00 	andeq	r0, r5, r0, lsl #22
     bf8:	0b3a0e03 	bleq	e8440c <__RAM_SIZE+0xd8440c>
     bfc:	0b390b3b 	bleq	e438f0 <__RAM_SIZE+0xd438f0>
     c00:	06021349 	streq	r1, [r2], -r9, asr #6
     c04:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
     c08:	00340c00 	eorseq	r0, r4, r0, lsl #24
     c0c:	0b3a0e03 	bleq	e84420 <__RAM_SIZE+0xd84420>
     c10:	0b390b3b 	bleq	e43904 <__RAM_SIZE+0xd43904>
     c14:	06021349 	streq	r1, [r2], -r9, asr #6
     c18:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
     c1c:	012e0d00 			; <UNDEFINED> instruction: 0x012e0d00
     c20:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
     c24:	0b3b0b3a 	bleq	ec3914 <__RAM_SIZE+0xdc3914>
     c28:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     c2c:	01120111 	tsteq	r2, r1, lsl r1
     c30:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
     c34:	0013010c 	andseq	r0, r3, ip, lsl #2
     c38:	00050e00 	andeq	r0, r5, r0, lsl #28
     c3c:	0b3a0e03 	bleq	e84450 <__RAM_SIZE+0xd84450>
     c40:	0b390b3b 	bleq	e43934 <__RAM_SIZE+0xd43934>
     c44:	0a021349 	beq	85970 <__HEAP_SIZE+0x84970>
     c48:	2e0f0000 	cdpcs	0, 0, cr0, cr15, cr0, {0}
     c4c:	030c3f01 	movweq	r3, #52993	; 0xcf01
     c50:	3b0b3a0e 	blcc	2cf490 <__RAM_SIZE+0x1cf490>
     c54:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
     c58:	1201110c 	andne	r1, r1, #12, 2
     c5c:	970a4001 	strls	r4, [sl, -r1]
     c60:	13010c42 	movwne	r0, #7234	; 0x1c42
     c64:	2e100000 	cdpcs	0, 1, cr0, cr0, cr0, {0}
     c68:	030c3f01 	movweq	r3, #52993	; 0xcf01
     c6c:	3b0b3a0e 	blcc	2cf4ac <__RAM_SIZE+0x1cf4ac>
     c70:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
     c74:	1201110c 	andne	r1, r1, #12, 2
     c78:	970a4001 	strls	r4, [sl, -r1]
     c7c:	00000c42 	andeq	r0, r0, r2, asr #24
     c80:	01110100 	tsteq	r1, r0, lsl #2
     c84:	0b130e25 	bleq	4c4520 <__RAM_SIZE+0x3c4520>
     c88:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
     c8c:	01110655 	tsteq	r1, r5, asr r6
     c90:	06100152 			; <UNDEFINED> instruction: 0x06100152
     c94:	16020000 	strne	r0, [r2], -r0
     c98:	3a0e0300 	bcc	3818a0 <__RAM_SIZE+0x2818a0>
     c9c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     ca0:	0013490b 	andseq	r4, r3, fp, lsl #18
     ca4:	00240300 	eoreq	r0, r4, r0, lsl #6
     ca8:	0b3e0b0b 	bleq	f838dc <__RAM_SIZE+0xe838dc>
     cac:	00000e03 	andeq	r0, r0, r3, lsl #28
     cb0:	0b002404 	bleq	9cc8 <__HEAP_SIZE+0x8cc8>
     cb4:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
     cb8:	05000008 	streq	r0, [r0, #-8]
     cbc:	0b0b000f 	bleq	2c0d00 <__RAM_SIZE+0x1c0d00>
     cc0:	26060000 	strcs	r0, [r6], -r0
     cc4:	00134900 	andseq	r4, r3, r0, lsl #18
     cc8:	000f0700 	andeq	r0, pc, r0, lsl #14
     ccc:	13490b0b 	movtne	r0, #39691	; 0x9b0b
     cd0:	26080000 	strcs	r0, [r8], -r0
     cd4:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
     cd8:	13490035 	movtne	r0, #36917	; 0x9035
     cdc:	130a0000 	movwne	r0, #40960	; 0xa000
     ce0:	0b0e0301 	bleq	3818ec <__RAM_SIZE+0x2818ec>
     ce4:	3b0b3a0b 	blcc	2cf518 <__RAM_SIZE+0x1cf518>
     ce8:	010b3905 	tsteq	fp, r5, lsl #18
     cec:	0b000013 	bleq	d40 <__Vectors_Size+0x580>
     cf0:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
     cf4:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     cf8:	13490b39 	movtne	r0, #39737	; 0x9b39
     cfc:	00000a38 	andeq	r0, r0, r8, lsr sl
     d00:	4901010c 	stmdbmi	r1, {r2, r3, r8}
     d04:	00130113 	andseq	r0, r3, r3, lsl r1
     d08:	00210d00 	eoreq	r0, r1, r0, lsl #26
     d0c:	0b2f1349 	bleq	bc5a38 <__RAM_SIZE+0xac5a38>
     d10:	160e0000 	strne	r0, [lr], -r0
     d14:	3a0e0300 	bcc	38191c <__RAM_SIZE+0x28191c>
     d18:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     d1c:	0013490b 	andseq	r4, r3, fp, lsl #18
     d20:	01170f00 	tsteq	r7, r0, lsl #30
     d24:	0b3a0b0b 	bleq	e83958 <__RAM_SIZE+0xd83958>
     d28:	0b39053b 	bleq	e4221c <__RAM_SIZE+0xd4221c>
     d2c:	00001301 	andeq	r1, r0, r1, lsl #6
     d30:	03000d10 	movweq	r0, #3344	; 0xd10
     d34:	3b0b3a0e 	blcc	2cf574 <__RAM_SIZE+0x1cf574>
     d38:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     d3c:	11000013 	tstne	r0, r3, lsl r0
     d40:	0803000d 	stmdaeq	r3, {r0, r2, r3}
     d44:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     d48:	13490b39 	movtne	r0, #39737	; 0x9b39
     d4c:	00000a38 	andeq	r0, r0, r8, lsr sl
     d50:	03011312 	movweq	r1, #4882	; 0x1312
     d54:	3a0b0b0e 	bcc	2c3994 <__RAM_SIZE+0x1c3994>
     d58:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     d5c:	0013010b 	andseq	r0, r3, fp, lsl #2
     d60:	000d1300 	andeq	r1, sp, r0, lsl #6
     d64:	0b3a0e03 	bleq	e84578 <__RAM_SIZE+0xd84578>
     d68:	0b390b3b 	bleq	e43a5c <__RAM_SIZE+0xd43a5c>
     d6c:	0a381349 	beq	e05a98 <__RAM_SIZE+0xd05a98>
     d70:	13140000 	tstne	r4, #0
     d74:	3c0e0300 	stccc	3, cr0, [lr], {-0}
     d78:	1500000c 	strne	r0, [r0, #-12]
     d7c:	0803000d 	stmdaeq	r3, {r0, r2, r3}
     d80:	0b3b0b3a 	bleq	ec3a70 <__RAM_SIZE+0xdc3a70>
     d84:	13490b39 	movtne	r0, #39737	; 0x9b39
     d88:	00000a38 	andeq	r0, r0, r8, lsr sl
     d8c:	0b011716 	bleq	469ec <__HEAP_SIZE+0x459ec>
     d90:	3b0b3a0b 	blcc	2cf5c4 <__RAM_SIZE+0x1cf5c4>
     d94:	010b390b 	tsteq	fp, fp, lsl #18
     d98:	17000013 	smladne	r0, r3, r0, r0
     d9c:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
     da0:	0b3b0b3a 	bleq	ec3a90 <__RAM_SIZE+0xdc3a90>
     da4:	13490b39 	movtne	r0, #39737	; 0x9b39
     da8:	2e180000 	cdpcs	0, 1, cr0, cr8, cr0, {0}
     dac:	3a0e0301 	bcc	3819b8 <__RAM_SIZE+0x2819b8>
     db0:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     db4:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
     db8:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
     dbc:	97064001 	strls	r4, [r6, -r1]
     dc0:	13010c42 	movwne	r0, #7234	; 0x1c42
     dc4:	05190000 	ldreq	r0, [r9, #-0]
     dc8:	3a0e0300 	bcc	3819d0 <__RAM_SIZE+0x2819d0>
     dcc:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     dd0:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     dd4:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
     dd8:	341a0000 	ldrcc	r0, [sl], #-0
     ddc:	3a0e0300 	bcc	3819e4 <__RAM_SIZE+0x2819e4>
     de0:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     de4:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     de8:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
     dec:	0b1b0000 	bleq	6c0df4 <__RAM_SIZE+0x5c0df4>
     df0:	00065501 	andeq	r5, r6, r1, lsl #10
     df4:	010b1c00 	tsteq	fp, r0, lsl #24
     df8:	01120111 	tsteq	r2, r1, lsl r1
     dfc:	00001301 	andeq	r1, r0, r1, lsl #6
     e00:	0182891d 	orreq	r8, r2, sp, lsl r9
     e04:	31011100 	mrscc	r1, (UNDEF: 17)
     e08:	1e000013 	mcrne	0, 0, r0, cr0, cr3, {0}
     e0c:	01018289 	smlabbeq	r1, r9, r2, r8
     e10:	13310111 	teqne	r1, #1073741828	; 0x40000004
     e14:	00001301 	andeq	r1, r0, r1, lsl #6
     e18:	01828a1f 	orreq	r8, r2, pc, lsl sl
     e1c:	910a0200 	mrsls	r0, R10_fiq
     e20:	00000a42 	andeq	r0, r0, r2, asr #20
     e24:	01828920 	orreq	r8, r2, r0, lsr #18
     e28:	31011101 	tstcc	r1, r1, lsl #2
     e2c:	21000013 	tstcs	r0, r3, lsl r0
     e30:	0c3f012e 	ldfeqs	f0, [pc], #-184	; d80 <__Vectors_Size+0x5c0>
     e34:	0b3a0e03 	bleq	e84648 <__RAM_SIZE+0xd84648>
     e38:	0b39053b 	bleq	e4232c <__RAM_SIZE+0xd4232c>
     e3c:	13490c27 	movtne	r0, #39975	; 0x9c27
     e40:	01120111 	tsteq	r2, r1, lsl r1
     e44:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
     e48:	0013010c 	andseq	r0, r3, ip, lsl #2
     e4c:	00342200 	eorseq	r2, r4, r0, lsl #4
     e50:	0b3a0e03 	bleq	e84664 <__RAM_SIZE+0xd84664>
     e54:	0b39053b 	bleq	e42348 <__RAM_SIZE+0xd42348>
     e58:	0a021349 	beq	85b84 <__HEAP_SIZE+0x84b84>
     e5c:	2e230000 	cdpcs	0, 2, cr0, cr3, cr0, {0}
     e60:	030c3f01 	movweq	r3, #52993	; 0xcf01
     e64:	3b0b3a0e 	blcc	2cf6a4 <__RAM_SIZE+0x1cf6a4>
     e68:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
     e6c:	1201110c 	andne	r1, r1, #12, 2
     e70:	97064001 	strls	r4, [r6, -r1]
     e74:	13010c42 	movwne	r0, #7234	; 0x1c42
     e78:	2e240000 	cdpcs	0, 2, cr0, cr4, cr0, {0}
     e7c:	030c3f01 	movweq	r3, #52993	; 0xcf01
     e80:	3b0b3a0e 	blcc	2cf6c0 <__RAM_SIZE+0x1cf6c0>
     e84:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
     e88:	1113490c 	tstne	r3, ip, lsl #18
     e8c:	40011201 	andmi	r1, r1, r1, lsl #4
     e90:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
     e94:	00001301 	andeq	r1, r0, r1, lsl #6
     e98:	03003425 	movweq	r3, #1061	; 0x425
     e9c:	3b0b3a0e 	blcc	2cf6dc <__RAM_SIZE+0x1cf6dc>
     ea0:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     ea4:	000b1c13 	andeq	r1, fp, r3, lsl ip
     ea8:	012e2600 			; <UNDEFINED> instruction: 0x012e2600
     eac:	0b3a0e03 	bleq	e846c0 <__RAM_SIZE+0xd846c0>
     eb0:	0b39053b 	bleq	e423a4 <__RAM_SIZE+0xd423a4>
     eb4:	01110c27 	tsteq	r1, r7, lsr #24
     eb8:	06400112 			; <UNDEFINED> instruction: 0x06400112
     ebc:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
     ec0:	27000013 	smladcs	r0, r3, r0, r0
     ec4:	0e03012e 	adfeqsp	f0, f3, #0.5
     ec8:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     ecc:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     ed0:	01111349 	tsteq	r1, r9, asr #6
     ed4:	0a400112 	beq	1001324 <__RAM_SIZE+0xf01324>
     ed8:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
     edc:	28000013 	stmdacs	r0, {r0, r1, r4}
     ee0:	0655010b 	ldrbeq	r0, [r5], -fp, lsl #2
     ee4:	00001301 	andeq	r1, r0, r1, lsl #6
     ee8:	11010b29 	tstne	r1, r9, lsr #22
     eec:	00011201 	andeq	r1, r1, r1, lsl #4
     ef0:	00052a00 	andeq	r2, r5, r0, lsl #20
     ef4:	0b3a0e03 	bleq	e84708 <__RAM_SIZE+0xd84708>
     ef8:	0b39053b 	bleq	e423ec <__RAM_SIZE+0xd423ec>
     efc:	0a021349 	beq	85c28 <__HEAP_SIZE+0x84c28>
     f00:	2e2b0000 	cdpcs	0, 2, cr0, cr11, cr0, {0}
     f04:	3c0c3f00 	stccc	15, cr3, [ip], {-0}
     f08:	0e40870c 	cdpeq	7, 4, cr8, cr0, cr12, {0}
     f0c:	0b3a0e03 	bleq	e84720 <__RAM_SIZE+0xd84720>
     f10:	0b39053b 	bleq	e42404 <__RAM_SIZE+0xd42404>
     f14:	2e2c0000 	cdpcs	0, 2, cr0, cr12, cr0, {0}
     f18:	3c0c3f00 	stccc	15, cr3, [ip], {-0}
     f1c:	0e40870c 	cdpeq	7, 4, cr8, cr0, cr12, {0}
     f20:	0b3a0e03 	bleq	e84734 <__RAM_SIZE+0xd84734>
     f24:	0b390b3b 	bleq	e43c18 <__RAM_SIZE+0xd43c18>
     f28:	2e2d0000 	cdpcs	0, 2, cr0, cr13, cr0, {0}
     f2c:	3c0c3f00 	stccc	15, cr3, [ip], {-0}
     f30:	0e40870c 	cdpeq	7, 4, cr8, cr0, cr12, {0}
     f34:	0b3a0e03 	bleq	e84748 <__RAM_SIZE+0xd84748>
     f38:	00000b3b 	andeq	r0, r0, fp, lsr fp
     f3c:	01110100 	tsteq	r1, r0, lsl #2
     f40:	0b130e25 	bleq	4c47dc <__RAM_SIZE+0x3c47dc>
     f44:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
     f48:	01110655 	tsteq	r1, r5, asr r6
     f4c:	06100152 			; <UNDEFINED> instruction: 0x06100152
     f50:	16020000 	strne	r0, [r2], -r0
     f54:	3a0e0300 	bcc	381b5c <__RAM_SIZE+0x281b5c>
     f58:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     f5c:	0013490b 	andseq	r4, r3, fp, lsl #18
     f60:	00260300 	eoreq	r0, r6, r0, lsl #6
     f64:	00001349 	andeq	r1, r0, r9, asr #6
     f68:	0b002404 	bleq	9f80 <__HEAP_SIZE+0x8f80>
     f6c:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
     f70:	0500000e 	streq	r0, [r0, #-14]
     f74:	0b0b0024 	bleq	2c100c <__RAM_SIZE+0x1c100c>
     f78:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
     f7c:	0f060000 	svceq	0x00060000
     f80:	000b0b00 	andeq	r0, fp, r0, lsl #22
     f84:	000f0700 	andeq	r0, pc, r0, lsl #14
     f88:	13490b0b 	movtne	r0, #39691	; 0x9b0b
     f8c:	35080000 	strcc	r0, [r8, #-0]
     f90:	00134900 	andseq	r4, r3, r0, lsl #18
     f94:	01150900 	tsteq	r5, r0, lsl #18
     f98:	13010c27 	movwne	r0, #7207	; 0x1c27
     f9c:	050a0000 	streq	r0, [sl, #-0]
     fa0:	00134900 	andseq	r4, r3, r0, lsl #18
     fa4:	01130b00 	tsteq	r3, r0, lsl #22
     fa8:	0b0b0e03 	bleq	2c47bc <__RAM_SIZE+0x1c47bc>
     fac:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     fb0:	13010b39 	movwne	r0, #6969	; 0x1b39
     fb4:	0d0c0000 	stceq	0, cr0, [ip, #-0]
     fb8:	3a0e0300 	bcc	381bc0 <__RAM_SIZE+0x281bc0>
     fbc:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     fc0:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
     fc4:	0d00000a 	stceq	0, cr0, [r0, #-40]	; 0xffffffd8
     fc8:	13490101 	movtne	r0, #37121	; 0x9101
     fcc:	00001301 	andeq	r1, r0, r1, lsl #6
     fd0:	4900210e 	stmdbmi	r0, {r1, r2, r3, r8, sp}
     fd4:	000b2f13 	andeq	r2, fp, r3, lsl pc
     fd8:	00160f00 	andseq	r0, r6, r0, lsl #30
     fdc:	0b3a0e03 	bleq	e847f0 <__RAM_SIZE+0xd847f0>
     fe0:	0b39053b 	bleq	e424d4 <__RAM_SIZE+0xd424d4>
     fe4:	00001349 	andeq	r1, r0, r9, asr #6
     fe8:	03011310 	movweq	r1, #4880	; 0x1310
     fec:	3a0b0b0e 	bcc	2c3c2c <__RAM_SIZE+0x1c3c2c>
     ff0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     ff4:	0013010b 	andseq	r0, r3, fp, lsl #2
     ff8:	000d1100 	andeq	r1, sp, r0, lsl #2
     ffc:	0b3a0e03 	bleq	e84810 <__RAM_SIZE+0xd84810>
    1000:	0b390b3b 	bleq	e43cf4 <__RAM_SIZE+0xd43cf4>
    1004:	0a381349 	beq	e05d30 <__RAM_SIZE+0xd05d30>
    1008:	15120000 	ldrne	r0, [r2, #-0]
    100c:	490c2701 	stmdbmi	ip, {r0, r8, r9, sl, sp}
    1010:	00130113 	andseq	r0, r3, r3, lsl r1
    1014:	01041300 	mrseq	r1, LR_abt
    1018:	0b0b0b3e 	bleq	2c3d18 <__RAM_SIZE+0x1c3d18>
    101c:	0b3a1349 	bleq	e85d48 <__RAM_SIZE+0xd85d48>
    1020:	0b390b3b 	bleq	e43d14 <__RAM_SIZE+0xd43d14>
    1024:	00001301 	andeq	r1, r0, r1, lsl #6
    1028:	03002814 	movweq	r2, #2068	; 0x814
    102c:	000b1c0e 	andeq	r1, fp, lr, lsl #24
    1030:	00341500 	eorseq	r1, r4, r0, lsl #10
    1034:	0b3a0e03 	bleq	e84848 <__RAM_SIZE+0xd84848>
    1038:	0b39053b 	bleq	e4252c <__RAM_SIZE+0xd4252c>
    103c:	0c3f1349 	ldceq	3, cr1, [pc], #-292	; f20 <__Vectors_Size+0x760>
    1040:	00000a02 	andeq	r0, r0, r2, lsl #20
    1044:	03003416 	movweq	r3, #1046	; 0x416
    1048:	3b0b3a0e 	blcc	2cf888 <__RAM_SIZE+0x1cf888>
    104c:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    1050:	000a0213 	andeq	r0, sl, r3, lsl r2
    1054:	012e1700 			; <UNDEFINED> instruction: 0x012e1700
    1058:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    105c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1060:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    1064:	01120111 	tsteq	r2, r1, lsl r1
    1068:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
    106c:	0013010c 	andseq	r0, r3, ip, lsl #2
    1070:	00341800 	eorseq	r1, r4, r0, lsl #16
    1074:	0b3a0e03 	bleq	e84888 <__RAM_SIZE+0xd84888>
    1078:	0b39053b 	bleq	e4256c <__RAM_SIZE+0xd4256c>
    107c:	06021349 	streq	r1, [r2], -r9, asr #6
    1080:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
    1084:	00051900 	andeq	r1, r5, r0, lsl #18
    1088:	0b3a0e03 	bleq	e8489c <__RAM_SIZE+0xd8489c>
    108c:	0b39053b 	bleq	e42580 <__RAM_SIZE+0xd42580>
    1090:	0a021349 	beq	85dbc <__HEAP_SIZE+0x84dbc>
    1094:	2e1a0000 	cdpcs	0, 1, cr0, cr10, cr0, {0}
    1098:	3a0e0301 	bcc	381ca4 <__RAM_SIZE+0x281ca4>
    109c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    10a0:	110c270b 	tstne	ip, fp, lsl #14
    10a4:	40011201 	andmi	r1, r1, r1, lsl #4
    10a8:	0c429706 	mcrreq	7, 0, r9, r2, cr6
    10ac:	00001301 	andeq	r1, r0, r1, lsl #6
    10b0:	0300051b 	movweq	r0, #1307	; 0x51b
    10b4:	3b0b3a0e 	blcc	2cf8f4 <__RAM_SIZE+0x1cf8f4>
    10b8:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    10bc:	b7060213 	smladlt	r6, r3, r2, r0
    10c0:	00000642 	andeq	r0, r0, r2, asr #12
    10c4:	11010b1c 	tstne	r1, ip, lsl fp
    10c8:	01011201 	tsteq	r1, r1, lsl #4
    10cc:	1d000013 	stcne	0, cr0, [r0, #-76]	; 0xffffffb4
    10d0:	00018289 	andeq	r8, r1, r9, lsl #5
    10d4:	13310111 	teqne	r1, #1073741828	; 0x40000004
    10d8:	891e0000 	ldmdbhi	lr, {}	; <UNPREDICTABLE>
    10dc:	11010182 	smlabbne	r1, r2, r1, r0
    10e0:	01133101 	tsteq	r3, r1, lsl #2
    10e4:	1f000013 	svcne	0x00000013
    10e8:	0001828a 	andeq	r8, r1, sl, lsl #5
    10ec:	42910a02 	addsmi	r0, r1, #8192	; 0x2000
    10f0:	2000000a 	andcs	r0, r0, sl
    10f4:	01018289 	smlabbeq	r1, r9, r2, r8
    10f8:	13310111 	teqne	r1, #1073741828	; 0x40000004
    10fc:	2e210000 	cdpcs	0, 2, cr0, cr1, cr0, {0}
    1100:	030c3f01 	movweq	r3, #52993	; 0xcf01
    1104:	3b0b3a0e 	blcc	2cf944 <__RAM_SIZE+0x1cf944>
    1108:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    110c:	1113490c 	tstne	r3, ip, lsl #18
    1110:	40011201 	andmi	r1, r1, r1, lsl #4
    1114:	0c429706 	mcrreq	7, 0, r9, r2, cr6
    1118:	00001301 	andeq	r1, r0, r1, lsl #6
    111c:	3f012e22 	svccc	0x00012e22
    1120:	3a0e030c 	bcc	381d58 <__RAM_SIZE+0x281d58>
    1124:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1128:	110c270b 	tstne	ip, fp, lsl #14
    112c:	40011201 	andmi	r1, r1, r1, lsl #4
    1130:	0c429706 	mcrreq	7, 0, r9, r2, cr6
    1134:	00001301 	andeq	r1, r0, r1, lsl #6
    1138:	55010b23 	strpl	r0, [r1, #-2851]	; 0xfffff4dd
    113c:	00130106 	andseq	r0, r3, r6, lsl #2
    1140:	012e2400 			; <UNDEFINED> instruction: 0x012e2400
    1144:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    1148:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    114c:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    1150:	01111349 	tsteq	r1, r9, asr #6
    1154:	0a400112 	beq	10015a4 <__RAM_SIZE+0xf015a4>
    1158:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
    115c:	25000013 	strcs	r0, [r0, #-19]	; 0xffffffed
    1160:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    1164:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1168:	13490b39 	movtne	r0, #39737	; 0x9b39
    116c:	00000b1c 	andeq	r0, r0, ip, lsl fp
    1170:	03002e26 	movweq	r2, #3622	; 0xe26
    1174:	3b0b3a0e 	blcc	2cf9b4 <__RAM_SIZE+0x1cf9b4>
    1178:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    117c:	1201110c 	andne	r1, r1, #12, 2
    1180:	970a4001 	strls	r4, [sl, -r1]
    1184:	00000c42 	andeq	r0, r0, r2, asr #24
    1188:	03012e27 	movweq	r2, #7719	; 0x1e27
    118c:	3b0b3a0e 	blcc	2cf9cc <__RAM_SIZE+0x1cf9cc>
    1190:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    1194:	1113490c 	tstne	r3, ip, lsl #18
    1198:	40011201 	andmi	r1, r1, r1, lsl #4
    119c:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
    11a0:	00001301 	andeq	r1, r0, r1, lsl #6
    11a4:	55010b28 	strpl	r0, [r1, #-2856]	; 0xfffff4d8
    11a8:	29000006 	stmdbcs	r0, {r1, r2}
    11ac:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 10fc <__HEAP_SIZE+0xfc>
    11b0:	0b3a0e03 	bleq	e849c4 <__RAM_SIZE+0xd849c4>
    11b4:	0b39053b 	bleq	e426a8 <__RAM_SIZE+0xd426a8>
    11b8:	01110c27 	tsteq	r1, r7, lsr #24
    11bc:	0a400112 	beq	100160c <__RAM_SIZE+0xf0160c>
    11c0:	000c4297 	muleq	ip, r7, r2
    11c4:	82892a00 	addhi	r2, r9, #0, 20
    11c8:	01110101 	tsteq	r1, r1, lsl #2
    11cc:	0b2b0000 	bleq	ac11d4 <__RAM_SIZE+0x9c11d4>
    11d0:	12011101 	andne	r1, r1, #1073741824	; 0x40000000
    11d4:	2c000001 	stccs	0, cr0, [r0], {1}
    11d8:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 1128 <__HEAP_SIZE+0x128>
    11dc:	0b3a0e03 	bleq	e849f0 <__RAM_SIZE+0xd849f0>
    11e0:	0b39053b 	bleq	e426d4 <__RAM_SIZE+0xd426d4>
    11e4:	13490c27 	movtne	r0, #39975	; 0x9c27
    11e8:	01120111 	tsteq	r2, r1, lsl r1
    11ec:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
    11f0:	2d00000c 	stccs	0, cr0, [r0, #-48]	; 0xffffffd0
    11f4:	0e03012e 	adfeqsp	f0, f3, #0.5
    11f8:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    11fc:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    1200:	01111349 	tsteq	r1, r9, asr #6
    1204:	06400112 			; <UNDEFINED> instruction: 0x06400112
    1208:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
    120c:	2e000013 	mcrcs	0, 0, r0, cr0, cr3, {0}
    1210:	08030034 	stmdaeq	r3, {r2, r4, r5}
    1214:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1218:	13490b39 	movtne	r0, #39737	; 0x9b39
    121c:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    1220:	2f000006 	svccs	0x00000006
    1224:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 1174 <__HEAP_SIZE+0x174>
    1228:	40870c3c 	addmi	r0, r7, ip, lsr ip
    122c:	3a0e030e 	bcc	381e6c <__RAM_SIZE+0x281e6c>
    1230:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1234:	3000000b 	andcc	r0, r0, fp
    1238:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 1188 <__HEAP_SIZE+0x188>
    123c:	40870c3c 	addmi	r0, r7, ip, lsr ip
    1240:	3a0e030e 	bcc	381e80 <__RAM_SIZE+0x281e80>
    1244:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1248:	3100000b 	tstcc	r0, fp
    124c:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 119c <__HEAP_SIZE+0x19c>
    1250:	40870c3c 	addmi	r0, r7, ip, lsr ip
    1254:	3a0e030e 	bcc	381e94 <__RAM_SIZE+0x281e94>
    1258:	000b3b0b 	andeq	r3, fp, fp, lsl #22
    125c:	11010000 	mrsne	r0, (UNDEF: 1)
    1260:	130e2501 	movwne	r2, #58625	; 0xe501
    1264:	1b0e030b 	blne	381e98 <__RAM_SIZE+0x281e98>
    1268:	1106550e 	tstne	r6, lr, lsl #10
    126c:	10015201 	andne	r5, r1, r1, lsl #4
    1270:	02000006 	andeq	r0, r0, #6
    1274:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
    1278:	0b3b0b3a 	bleq	ec3f68 <__RAM_SIZE+0xdc3f68>
    127c:	13490b39 	movtne	r0, #39737	; 0x9b39
    1280:	24030000 	strcs	r0, [r3], #-0
    1284:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    1288:	000e030b 	andeq	r0, lr, fp, lsl #6
    128c:	00240400 	eoreq	r0, r4, r0, lsl #8
    1290:	0b3e0b0b 	bleq	f83ec4 <__RAM_SIZE+0xe83ec4>
    1294:	00000803 	andeq	r0, r0, r3, lsl #16
    1298:	0b000f05 	bleq	4eb4 <__HEAP_SIZE+0x3eb4>
    129c:	0600000b 	streq	r0, [r0], -fp
    12a0:	13490026 	movtne	r0, #36902	; 0x9026
    12a4:	0f070000 	svceq	0x00070000
    12a8:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
    12ac:	08000013 	stmdaeq	r0, {r0, r1, r4}
    12b0:	0c270115 	stfeqs	f0, [r7], #-84	; 0xffffffac
    12b4:	00001301 	andeq	r1, r0, r1, lsl #6
    12b8:	49000509 	stmdbmi	r0, {r0, r3, r8, sl}
    12bc:	0a000013 	beq	1310 <__HEAP_SIZE+0x310>
    12c0:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
    12c4:	0b3a0b0b 	bleq	e83ef8 <__RAM_SIZE+0xd83ef8>
    12c8:	0b39053b 	bleq	e427bc <__RAM_SIZE+0xd427bc>
    12cc:	00001301 	andeq	r1, r0, r1, lsl #6
    12d0:	03000d0b 	movweq	r0, #3339	; 0xd0b
    12d4:	3b0b3a0e 	blcc	2cfb14 <__RAM_SIZE+0x1cfb14>
    12d8:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    12dc:	000a3813 	andeq	r3, sl, r3, lsl r8
    12e0:	01010c00 	tsteq	r1, r0, lsl #24
    12e4:	13011349 	movwne	r1, #4937	; 0x1349
    12e8:	210d0000 	mrscs	r0, (UNDEF: 13)
    12ec:	2f134900 	svccs	0x00134900
    12f0:	0e00000b 	cdpeq	0, 0, cr0, cr0, cr11, {0}
    12f4:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
    12f8:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    12fc:	13490b39 	movtne	r0, #39737	; 0x9b39
    1300:	170f0000 	strne	r0, [pc, -r0]
    1304:	3a0b0b01 	bcc	2c3f10 <__RAM_SIZE+0x1c3f10>
    1308:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    130c:	0013010b 	andseq	r0, r3, fp, lsl #2
    1310:	000d1000 	andeq	r1, sp, r0
    1314:	0b3a0e03 	bleq	e84b28 <__RAM_SIZE+0xd84b28>
    1318:	0b39053b 	bleq	e4280c <__RAM_SIZE+0xd4280c>
    131c:	00001349 	andeq	r1, r0, r9, asr #6
    1320:	03000d11 	movweq	r0, #3345	; 0xd11
    1324:	3b0b3a08 	blcc	2cfb4c <__RAM_SIZE+0x1cfb4c>
    1328:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    132c:	000a3813 	andeq	r3, sl, r3, lsl r8
    1330:	01131200 	tsteq	r3, r0, lsl #4
    1334:	0b0b0e03 	bleq	2c4b48 <__RAM_SIZE+0x1c4b48>
    1338:	0b3b0b3a 	bleq	ec4028 <__RAM_SIZE+0xdc4028>
    133c:	13010b39 	movwne	r0, #6969	; 0x1b39
    1340:	0d130000 	ldceq	0, cr0, [r3, #-0]
    1344:	3a0e0300 	bcc	381f4c <__RAM_SIZE+0x281f4c>
    1348:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    134c:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    1350:	1400000a 	strne	r0, [r0], #-10
    1354:	0e030013 	mcreq	0, 0, r0, cr3, cr3, {0}
    1358:	00000c3c 	andeq	r0, r0, ip, lsr ip
    135c:	0b011715 	bleq	46fb8 <__HEAP_SIZE+0x45fb8>
    1360:	3b0b3a0b 	blcc	2cfb94 <__RAM_SIZE+0x1cfb94>
    1364:	010b390b 	tsteq	fp, fp, lsl #18
    1368:	16000013 			; <UNDEFINED> instruction: 0x16000013
    136c:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
    1370:	0b3b0b3a 	bleq	ec4060 <__RAM_SIZE+0xdc4060>
    1374:	13490b39 	movtne	r0, #39737	; 0x9b39
    1378:	0d170000 	ldceq	0, cr0, [r7, #-0]
    137c:	3a080300 	bcc	201f84 <__RAM_SIZE+0x101f84>
    1380:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1384:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    1388:	1800000a 	stmdane	r0, {r1, r3}
    138c:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    1390:	0b3b0b3a 	bleq	ec4080 <__RAM_SIZE+0xdc4080>
    1394:	13490b39 	movtne	r0, #39737	; 0x9b39
    1398:	00000a02 	andeq	r0, r0, r2, lsl #20
    139c:	3f002e19 	svccc	0x00002e19
    13a0:	3a0e030c 	bcc	381fd8 <__RAM_SIZE+0x281fd8>
    13a4:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    13a8:	110c270b 	tstne	ip, fp, lsl #14
    13ac:	40011201 	andmi	r1, r1, r1, lsl #4
    13b0:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
    13b4:	2e1a0000 	cdpcs	0, 1, cr0, cr10, cr0, {0}
    13b8:	030c3f01 	movweq	r3, #52993	; 0xcf01
    13bc:	3b0b3a0e 	blcc	2cfbfc <__RAM_SIZE+0x1cfbfc>
    13c0:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    13c4:	1113490c 	tstne	r3, ip, lsl #18
    13c8:	40011201 	andmi	r1, r1, r1, lsl #4
    13cc:	0c429706 	mcrreq	7, 0, r9, r2, cr6
    13d0:	00001301 	andeq	r1, r0, r1, lsl #6
    13d4:	0300051b 	movweq	r0, #1307	; 0x51b
    13d8:	3b0b3a0e 	blcc	2cfc18 <__RAM_SIZE+0x1cfc18>
    13dc:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    13e0:	b7060213 	smladlt	r6, r3, r2, r0
    13e4:	00000642 	andeq	r0, r0, r2, asr #12
    13e8:	0300341c 	movweq	r3, #1052	; 0x41c
    13ec:	3b0b3a0e 	blcc	2cfc2c <__RAM_SIZE+0x1cfc2c>
    13f0:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    13f4:	000a0213 	andeq	r0, sl, r3, lsl r2
    13f8:	00341d00 	eorseq	r1, r4, r0, lsl #26
    13fc:	0b3a0e03 	bleq	e84c10 <__RAM_SIZE+0xd84c10>
    1400:	0b39053b 	bleq	e428f4 <__RAM_SIZE+0xd428f4>
    1404:	06021349 	streq	r1, [r2], -r9, asr #6
    1408:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
    140c:	82891e00 	addhi	r1, r9, #0, 28
    1410:	01110101 	tsteq	r1, r1, lsl #2
    1414:	00001331 	andeq	r1, r0, r1, lsr r3
    1418:	01828a1f 	orreq	r8, r2, pc, lsl sl
    141c:	910a0200 	mrsls	r0, R10_fiq
    1420:	00000a42 	andeq	r0, r0, r2, asr #20
    1424:	3f012e20 	svccc	0x00012e20
    1428:	3a0e030c 	bcc	382060 <__RAM_SIZE+0x282060>
    142c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1430:	110c270b 	tstne	ip, fp, lsl #14
    1434:	40011201 	andmi	r1, r1, r1, lsl #4
    1438:	0c429706 	mcrreq	7, 0, r9, r2, cr6
    143c:	00001301 	andeq	r1, r0, r1, lsl #6
    1440:	01828921 	orreq	r8, r2, r1, lsr #18
    1444:	31011100 	mrscc	r1, (UNDEF: 17)
    1448:	22000013 	andcs	r0, r0, #19
    144c:	0e03012e 	adfeqsp	f0, f3, #0.5
    1450:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1454:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    1458:	01120111 	tsteq	r2, r1, lsl r1
    145c:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
    1460:	0013010c 	andseq	r0, r3, ip, lsl #2
    1464:	010b2300 	mrseq	r2, (UNDEF: 59)
    1468:	01120111 	tsteq	r2, r1, lsl r1
    146c:	00001301 	andeq	r1, r0, r1, lsl #6
    1470:	01828924 	orreq	r8, r2, r4, lsr #18
    1474:	31011101 	tstcc	r1, r1, lsl #2
    1478:	00130113 	andseq	r0, r3, r3, lsl r1
    147c:	012e2500 			; <UNDEFINED> instruction: 0x012e2500
    1480:	0b3a0e03 	bleq	e84c94 <__RAM_SIZE+0xd84c94>
    1484:	0b39053b 	bleq	e42978 <__RAM_SIZE+0xd42978>
    1488:	01110c27 	tsteq	r1, r7, lsr #24
    148c:	06400112 			; <UNDEFINED> instruction: 0x06400112
    1490:	010c4296 			; <UNDEFINED> instruction: 0x010c4296
    1494:	26000013 			; <UNDEFINED> instruction: 0x26000013
    1498:	01018289 	smlabbeq	r1, r9, r2, r8
    149c:	13010111 	movwne	r0, #4369	; 0x1111
    14a0:	2e270000 	cdpcs	0, 2, cr0, cr7, cr0, {0}
    14a4:	3a0e0301 	bcc	3820b0 <__RAM_SIZE+0x2820b0>
    14a8:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    14ac:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
    14b0:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    14b4:	97064001 	strls	r4, [r6, -r1]
    14b8:	13010c42 	movwne	r0, #7234	; 0x1c42
    14bc:	2e280000 	cdpcs	0, 2, cr0, cr8, cr0, {0}
    14c0:	3a0e0301 	bcc	3820cc <__RAM_SIZE+0x2820cc>
    14c4:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    14c8:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
    14cc:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    14d0:	970a4001 	strls	r4, [sl, -r1]
    14d4:	13010c42 	movwne	r0, #7234	; 0x1c42
    14d8:	2e290000 	cdpcs	0, 2, cr0, cr9, cr0, {0}
    14dc:	030c3f01 	movweq	r3, #52993	; 0xcf01
    14e0:	3b0b3a0e 	blcc	2cfd20 <__RAM_SIZE+0x1cfd20>
    14e4:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    14e8:	1113490c 	tstne	r3, ip, lsl #18
    14ec:	40011201 	andmi	r1, r1, r1, lsl #4
    14f0:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
    14f4:	00001301 	andeq	r1, r0, r1, lsl #6
    14f8:	0300052a 	movweq	r0, #1322	; 0x52a
    14fc:	3b0b3a0e 	blcc	2cfd3c <__RAM_SIZE+0x1cfd3c>
    1500:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    1504:	000a0213 	andeq	r0, sl, r3, lsl r2
    1508:	002e2b00 	eoreq	r2, lr, r0, lsl #22
    150c:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    1510:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1514:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    1518:	01111349 	tsteq	r1, r9, asr #6
    151c:	0a400112 	beq	100196c <__RAM_SIZE+0xf0196c>
    1520:	000c4297 	muleq	ip, r7, r2
    1524:	012e2c00 			; <UNDEFINED> instruction: 0x012e2c00
    1528:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    152c:	0b3b0b3a 	bleq	ec421c <__RAM_SIZE+0xdc421c>
    1530:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    1534:	01111349 	tsteq	r1, r9, asr #6
    1538:	06400112 			; <UNDEFINED> instruction: 0x06400112
    153c:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
    1540:	2d000013 	stccs	0, cr0, [r0, #-76]	; 0xffffffb4
    1544:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    1548:	0b3b0b3a 	bleq	ec4238 <__RAM_SIZE+0xdc4238>
    154c:	13490b39 	movtne	r0, #39737	; 0x9b39
    1550:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    1554:	2e000006 	cdpcs	0, 0, cr0, cr0, cr6, {0}
    1558:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 14a8 <__HEAP_SIZE+0x4a8>
    155c:	40870c3c 	addmi	r0, r7, ip, lsr ip
    1560:	3a0e030e 	bcc	3821a0 <__RAM_SIZE+0x2821a0>
    1564:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1568:	2f00000b 	svccs	0x0000000b
    156c:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 14bc <__HEAP_SIZE+0x4bc>
    1570:	40870c3c 	addmi	r0, r7, ip, lsr ip
    1574:	3a0e030e 	bcc	3821b4 <__RAM_SIZE+0x2821b4>
    1578:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    157c:	0000000b 	andeq	r0, r0, fp
    1580:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
    1584:	030b130e 	movweq	r1, #45838	; 0xb30e
    1588:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
    158c:	52011106 	andpl	r1, r1, #-2147483647	; 0x80000001
    1590:	00061001 	andeq	r1, r6, r1
    1594:	00160200 	andseq	r0, r6, r0, lsl #4
    1598:	0b3a0e03 	bleq	e84dac <__RAM_SIZE+0xd84dac>
    159c:	0b390b3b 	bleq	e44290 <__RAM_SIZE+0xd44290>
    15a0:	00001349 	andeq	r1, r0, r9, asr #6
    15a4:	49002603 	stmdbmi	r0, {r0, r1, r9, sl, sp}
    15a8:	04000013 	streq	r0, [r0], #-19	; 0xffffffed
    15ac:	0b0b0024 	bleq	2c1644 <__RAM_SIZE+0x1c1644>
    15b0:	0e030b3e 	vmoveq.16	d3[0], r0
    15b4:	24050000 	strcs	r0, [r5], #-0
    15b8:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    15bc:	0008030b 	andeq	r0, r8, fp, lsl #6
    15c0:	000f0600 	andeq	r0, pc, r0, lsl #12
    15c4:	00000b0b 	andeq	r0, r0, fp, lsl #22
    15c8:	0b000f07 	bleq	51ec <__HEAP_SIZE+0x41ec>
    15cc:	0013490b 	andseq	r4, r3, fp, lsl #18
    15d0:	01130800 	tsteq	r3, r0, lsl #16
    15d4:	0b0b0e03 	bleq	2c4de8 <__RAM_SIZE+0x1c4de8>
    15d8:	0b3b0b3a 	bleq	ec42c8 <__RAM_SIZE+0xdc42c8>
    15dc:	13010b39 	movwne	r0, #6969	; 0x1b39
    15e0:	0d090000 	stceq	0, cr0, [r9, #-0]
    15e4:	3a0e0300 	bcc	3821ec <__RAM_SIZE+0x2821ec>
    15e8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    15ec:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    15f0:	0a00000a 	beq	1620 <__HEAP_SIZE+0x620>
    15f4:	13490101 	movtne	r0, #37121	; 0x9101
    15f8:	00001301 	andeq	r1, r0, r1, lsl #6
    15fc:	4900210b 	stmdbmi	r0, {r0, r1, r3, r8, sp}
    1600:	00052f13 	andeq	r2, r5, r3, lsl pc
    1604:	00340c00 	eorseq	r0, r4, r0, lsl #24
    1608:	0b3a0e03 	bleq	e84e1c <__RAM_SIZE+0xd84e1c>
    160c:	0b390b3b 	bleq	e44300 <__RAM_SIZE+0xd44300>
    1610:	0c3f1349 	ldceq	3, cr1, [pc], #-292	; 14f4 <__HEAP_SIZE+0x4f4>
    1614:	00000c3c 	andeq	r0, r0, ip, lsr ip
    1618:	0300340d 	movweq	r3, #1037	; 0x40d
    161c:	3b0b3a0e 	blcc	2cfe5c <__RAM_SIZE+0x1cfe5c>
    1620:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1624:	000b1c13 	andeq	r1, fp, r3, lsl ip
    1628:	00340e00 	eorseq	r0, r4, r0, lsl #28
    162c:	0b3a0e03 	bleq	e84e40 <__RAM_SIZE+0xd84e40>
    1630:	0b390b3b 	bleq	e44324 <__RAM_SIZE+0xd44324>
    1634:	0a021349 	beq	86360 <__HEAP_SIZE+0x85360>
    1638:	2e0f0000 	cdpcs	0, 0, cr0, cr15, cr0, {0}
    163c:	030c3f00 	movweq	r3, #52992	; 0xcf00
    1640:	3b0b3a0e 	blcc	2cfe80 <__RAM_SIZE+0x1cfe80>
    1644:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    1648:	1201110c 	andne	r1, r1, #12, 2
    164c:	970a4001 	strls	r4, [sl, -r1]
    1650:	00000c42 	andeq	r0, r0, r2, asr #24
    1654:	3f012e10 	svccc	0x00012e10
    1658:	3a0e030c 	bcc	382290 <__RAM_SIZE+0x282290>
    165c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1660:	110c270b 	tstne	ip, fp, lsl #14
    1664:	40011201 	andmi	r1, r1, r1, lsl #4
    1668:	0c429706 	mcrreq	7, 0, r9, r2, cr6
    166c:	00001301 	andeq	r1, r0, r1, lsl #6
    1670:	03000511 	movweq	r0, #1297	; 0x511
    1674:	3b0b3a0e 	blcc	2cfeb4 <__RAM_SIZE+0x1cfeb4>
    1678:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    167c:	b7060213 	smladlt	r6, r3, r2, r0
    1680:	00000642 	andeq	r0, r0, r2, asr #12
    1684:	03003412 	movweq	r3, #1042	; 0x412
    1688:	3b0b3a0e 	blcc	2cfec8 <__RAM_SIZE+0x1cfec8>
    168c:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    1690:	b7060213 	smladlt	r6, r3, r2, r0
    1694:	00000642 	andeq	r0, r0, r2, asr #12
    1698:	01828913 	orreq	r8, r2, r3, lsl r9
    169c:	31011100 	mrscc	r1, (UNDEF: 17)
    16a0:	14000013 	strne	r0, [r0], #-19	; 0xffffffed
    16a4:	0e03012e 	adfeqsp	f0, f3, #0.5
    16a8:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    16ac:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    16b0:	01120111 	tsteq	r2, r1, lsl r1
    16b4:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
    16b8:	0013010c 	andseq	r0, r3, ip, lsl #2
    16bc:	00341500 	eorseq	r1, r4, r0, lsl #10
    16c0:	0b3a0803 	bleq	e836d4 <__RAM_SIZE+0xd836d4>
    16c4:	0b39053b 	bleq	e42bb8 <__RAM_SIZE+0xd42bb8>
    16c8:	06021349 	streq	r1, [r2], -r9, asr #6
    16cc:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
    16d0:	012e1600 			; <UNDEFINED> instruction: 0x012e1600
    16d4:	0b3a0e03 	bleq	e84ee8 <__RAM_SIZE+0xd84ee8>
    16d8:	0b39053b 	bleq	e42bcc <__RAM_SIZE+0xd42bcc>
    16dc:	01110c27 	tsteq	r1, r7, lsr #24
    16e0:	0a400112 	beq	1001b30 <__RAM_SIZE+0xf01b30>
    16e4:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
    16e8:	17000013 	smladne	r0, r3, r0, r0
    16ec:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 163c <__HEAP_SIZE+0x63c>
    16f0:	0b3a0e03 	bleq	e84f04 <__RAM_SIZE+0xd84f04>
    16f4:	0b39053b 	bleq	e42be8 <__RAM_SIZE+0xd42be8>
    16f8:	13490c27 	movtne	r0, #39975	; 0x9c27
    16fc:	01120111 	tsteq	r2, r1, lsl r1
    1700:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
    1704:	0013010c 	andseq	r0, r3, ip, lsl #2
    1708:	82891800 	addhi	r1, r9, #0, 16
    170c:	01110101 	tsteq	r1, r1, lsl #2
    1710:	13011331 	movwne	r1, #4913	; 0x1331
    1714:	8a190000 	bhi	64171c <__RAM_SIZE+0x54171c>
    1718:	02000182 	andeq	r0, r0, #-2147483616	; 0x80000020
    171c:	0a42910a 	beq	10a5b4c <__RAM_SIZE+0xfa5b4c>
    1720:	891a0000 	ldmdbhi	sl, {}	; <UNPREDICTABLE>
    1724:	11010182 	smlabbne	r1, r2, r1, r0
    1728:	00133101 	andseq	r3, r3, r1, lsl #2
    172c:	002e1b00 	eoreq	r1, lr, r0, lsl #22
    1730:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    1734:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1738:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    173c:	01111349 	tsteq	r1, r9, asr #6
    1740:	0a400112 	beq	1001b90 <__RAM_SIZE+0xf01b90>
    1744:	000c4297 	muleq	ip, r7, r2
    1748:	00051c00 	andeq	r1, r5, r0, lsl #24
    174c:	0b3a0803 	bleq	e83760 <__RAM_SIZE+0xd83760>
    1750:	0b39053b 	bleq	e42c44 <__RAM_SIZE+0xd42c44>
    1754:	06021349 	streq	r1, [r2], -r9, asr #6
    1758:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
    175c:	012e1d00 			; <UNDEFINED> instruction: 0x012e1d00
    1760:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    1764:	0b3b0b3a 	bleq	ec4454 <__RAM_SIZE+0xdc4454>
    1768:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    176c:	01111349 	tsteq	r1, r9, asr #6
    1770:	06400112 			; <UNDEFINED> instruction: 0x06400112
    1774:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
    1778:	1e000013 	mcrne	0, 0, r0, cr0, cr3, {0}
    177c:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
    1780:	0b3b0b3a 	bleq	ec4470 <__RAM_SIZE+0xdc4470>
    1784:	13490b39 	movtne	r0, #39737	; 0x9b39
    1788:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    178c:	1f000006 	svcne	0x00000006
    1790:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    1794:	0b3b0b3a 	bleq	ec4484 <__RAM_SIZE+0xdc4484>
    1798:	13490b39 	movtne	r0, #39737	; 0x9b39
    179c:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    17a0:	20000006 	andcs	r0, r0, r6
    17a4:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 16f4 <__HEAP_SIZE+0x6f4>
    17a8:	40870c3c 	addmi	r0, r7, ip, lsr ip
    17ac:	3a0e030e 	bcc	3823ec <__RAM_SIZE+0x2823ec>
    17b0:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    17b4:	2100000b 	tstcs	r0, fp
    17b8:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 1708 <__HEAP_SIZE+0x708>
    17bc:	40870c3c 	addmi	r0, r7, ip, lsr ip
    17c0:	3a0e030e 	bcc	382400 <__RAM_SIZE+0x282400>
    17c4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    17c8:	2200000b 	andcs	r0, r0, #11
    17cc:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 171c <__HEAP_SIZE+0x71c>
    17d0:	40870c3c 	addmi	r0, r7, ip, lsr ip
    17d4:	3a0e030e 	bcc	382414 <__RAM_SIZE+0x282414>
    17d8:	000b3b0b 	andeq	r3, fp, fp, lsl #22
    17dc:	11010000 	mrsne	r0, (UNDEF: 1)
    17e0:	130e2501 	movwne	r2, #58625	; 0xe501
    17e4:	1b0e030b 	blne	382418 <__RAM_SIZE+0x282418>
    17e8:	1106550e 	tstne	r6, lr, lsl #10
    17ec:	10015201 	andne	r5, r1, r1, lsl #4
    17f0:	02000006 	andeq	r0, r0, #6
    17f4:	0b0b0024 	bleq	2c188c <__RAM_SIZE+0x1c188c>
    17f8:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
    17fc:	24030000 	strcs	r0, [r3], #-0
    1800:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    1804:	000e030b 	andeq	r0, lr, fp, lsl #6
    1808:	00160400 	andseq	r0, r6, r0, lsl #8
    180c:	0b3a0e03 	bleq	e85020 <__RAM_SIZE+0xd85020>
    1810:	0b390b3b 	bleq	e44504 <__RAM_SIZE+0xd44504>
    1814:	00001349 	andeq	r1, r0, r9, asr #6
    1818:	49003505 	stmdbmi	r0, {r0, r2, r8, sl, ip, sp}
    181c:	06000013 			; <UNDEFINED> instruction: 0x06000013
    1820:	0b0b000f 	bleq	2c1864 <__RAM_SIZE+0x1c1864>
    1824:	00001349 	andeq	r1, r0, r9, asr #6
    1828:	27011507 	strcs	r1, [r1, -r7, lsl #10]
    182c:	0013010c 	andseq	r0, r3, ip, lsl #2
    1830:	00050800 	andeq	r0, r5, r0, lsl #16
    1834:	00001349 	andeq	r1, r0, r9, asr #6
    1838:	0b000f09 	bleq	5464 <__HEAP_SIZE+0x4464>
    183c:	0a00000b 	beq	1870 <__HEAP_SIZE+0x870>
    1840:	0b3e0104 	bleq	f81c58 <__RAM_SIZE+0xe81c58>
    1844:	13490b0b 	movtne	r0, #39691	; 0x9b0b
    1848:	0b3b0b3a 	bleq	ec4538 <__RAM_SIZE+0xdc4538>
    184c:	13010b39 	movwne	r0, #6969	; 0x1b39
    1850:	280b0000 	stmdacs	fp, {}	; <UNPREDICTABLE>
    1854:	1c0e0300 	stcne	3, cr0, [lr], {-0}
    1858:	0c00000b 	stceq	0, cr0, [r0], {11}
    185c:	13490026 	movtne	r0, #36902	; 0x9026
    1860:	150d0000 	strne	r0, [sp, #-0]
    1864:	000c2700 	andeq	r2, ip, r0, lsl #14
    1868:	00340e00 	eorseq	r0, r4, r0, lsl #28
    186c:	0b3a0e03 	bleq	e85080 <__RAM_SIZE+0xd85080>
    1870:	0b39053b 	bleq	e42d64 <__RAM_SIZE+0xd42d64>
    1874:	0a021349 	beq	865a0 <__HEAP_SIZE+0x855a0>
    1878:	2e0f0000 	cdpcs	0, 0, cr0, cr15, cr0, {0}
    187c:	030c3f01 	movweq	r3, #52993	; 0xcf01
    1880:	3b0b3a0e 	blcc	2d00c0 <__RAM_SIZE+0x1d00c0>
    1884:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    1888:	1113490c 	tstne	r3, ip, lsl #18
    188c:	40011201 	andmi	r1, r1, r1, lsl #4
    1890:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
    1894:	00001301 	andeq	r1, r0, r1, lsl #6
    1898:	03003410 	movweq	r3, #1040	; 0x410
    189c:	3b0b3a0e 	blcc	2d00dc <__RAM_SIZE+0x1d00dc>
    18a0:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    18a4:	b7060213 	smladlt	r6, r3, r2, r0
    18a8:	00000642 	andeq	r0, r0, r2, asr #12
    18ac:	03003411 	movweq	r3, #1041	; 0x411
    18b0:	3b0b3a0e 	blcc	2d00f0 <__RAM_SIZE+0x1d00f0>
    18b4:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    18b8:	000b1c13 	andeq	r1, fp, r3, lsl ip
    18bc:	002e1200 	eoreq	r1, lr, r0, lsl #4
    18c0:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    18c4:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    18c8:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    18cc:	01120111 	tsteq	r2, r1, lsl r1
    18d0:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
    18d4:	1300000c 	movwne	r0, #12
    18d8:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 1828 <__HEAP_SIZE+0x828>
    18dc:	0b3a0e03 	bleq	e850f0 <__RAM_SIZE+0xd850f0>
    18e0:	0b39053b 	bleq	e42dd4 <__RAM_SIZE+0xd42dd4>
    18e4:	13490c27 	movtne	r0, #39975	; 0x9c27
    18e8:	01120111 	tsteq	r2, r1, lsl r1
    18ec:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
    18f0:	0013010c 	andseq	r0, r3, ip, lsl #2
    18f4:	010b1400 	tsteq	fp, r0, lsl #8
    18f8:	00001301 	andeq	r1, r0, r1, lsl #6
    18fc:	03003415 	movweq	r3, #1045	; 0x415
    1900:	3b0b3a0e 	blcc	2d0140 <__RAM_SIZE+0x1d0140>
    1904:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    1908:	16000013 			; <UNDEFINED> instruction: 0x16000013
    190c:	00018289 	andeq	r8, r1, r9, lsl #5
    1910:	13310111 	teqne	r1, #1073741828	; 0x40000004
    1914:	05170000 	ldreq	r0, [r7, #-0]
    1918:	3a0e0300 	bcc	382520 <__RAM_SIZE+0x282520>
    191c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1920:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    1924:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
    1928:	05180000 	ldreq	r0, [r8, #-0]
    192c:	3a0e0300 	bcc	382534 <__RAM_SIZE+0x282534>
    1930:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1934:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    1938:	1900000a 	stmdbne	r0, {r1, r3}
    193c:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 188c <__HEAP_SIZE+0x88c>
    1940:	0b3a0e03 	bleq	e85154 <__RAM_SIZE+0xd85154>
    1944:	0b39053b 	bleq	e42e38 <__RAM_SIZE+0xd42e38>
    1948:	01110c27 	tsteq	r1, r7, lsr #24
    194c:	06400112 			; <UNDEFINED> instruction: 0x06400112
    1950:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
    1954:	1a000013 	bne	19a8 <__HEAP_SIZE+0x9a8>
    1958:	01018289 	smlabbeq	r1, r9, r2, r8
    195c:	13310111 	teqne	r1, #1073741828	; 0x40000004
    1960:	8a1b0000 	bhi	6c1968 <__RAM_SIZE+0x5c1968>
    1964:	02000182 	andeq	r0, r0, #-2147483616	; 0x80000020
    1968:	0a42910a 	beq	10a5d98 <__RAM_SIZE+0xfa5d98>
    196c:	2e1c0000 	cdpcs	0, 1, cr0, cr12, cr0, {0}
    1970:	3a0e0301 	bcc	38257c <__RAM_SIZE+0x28257c>
    1974:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1978:	110c270b 	tstne	ip, fp, lsl #14
    197c:	40011201 	andmi	r1, r1, r1, lsl #4
    1980:	0c429706 	mcrreq	7, 0, r9, r2, cr6
    1984:	00001301 	andeq	r1, r0, r1, lsl #6
    1988:	11010b1d 	tstne	r1, sp, lsl fp
    198c:	01011201 	tsteq	r1, r1, lsl #4
    1990:	1e000013 	mcrne	0, 0, r0, cr0, cr3, {0}
    1994:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 18e4 <__HEAP_SIZE+0x8e4>
    1998:	40870c3c 	addmi	r0, r7, ip, lsr ip
    199c:	3a0e030e 	bcc	3825dc <__RAM_SIZE+0x2825dc>
    19a0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    19a4:	1f00000b 	svcne	0x0000000b
    19a8:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 18f8 <__HEAP_SIZE+0x8f8>
    19ac:	40870c3c 	addmi	r0, r7, ip, lsr ip
    19b0:	3a0e030e 	bcc	3825f0 <__RAM_SIZE+0x2825f0>
    19b4:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    19b8:	0000000b 	andeq	r0, r0, fp
    19bc:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
    19c0:	030b130e 	movweq	r1, #45838	; 0xb30e
    19c4:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
    19c8:	52011106 	andpl	r1, r1, #-2147483647	; 0x80000001
    19cc:	00061001 	andeq	r1, r6, r1
    19d0:	00240200 	eoreq	r0, r4, r0, lsl #4
    19d4:	0b3e0b0b 	bleq	f84608 <__RAM_SIZE+0xe84608>
    19d8:	00000e03 	andeq	r0, r0, r3, lsl #28
    19dc:	03001603 	movweq	r1, #1539	; 0x603
    19e0:	3b0b3a0e 	blcc	2d0220 <__RAM_SIZE+0x1d0220>
    19e4:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    19e8:	04000013 	streq	r0, [r0], #-19	; 0xffffffed
    19ec:	0b0b0024 	bleq	2c1a84 <__RAM_SIZE+0x1c1a84>
    19f0:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
    19f4:	2e050000 	cdpcs	0, 0, cr0, cr5, cr0, {0}
    19f8:	030c3f00 	movweq	r3, #52992	; 0xcf00
    19fc:	3b0b3a0e 	blcc	2d023c <__RAM_SIZE+0x1d023c>
    1a00:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    1a04:	1201110c 	andne	r1, r1, #12, 2
    1a08:	970a4001 	strls	r4, [sl, -r1]
    1a0c:	00000c42 	andeq	r0, r0, r2, asr #24
    1a10:	3f012e06 	svccc	0x00012e06
    1a14:	3a0e030c 	bcc	38264c <__RAM_SIZE+0x28264c>
    1a18:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1a1c:	110c270b 	tstne	ip, fp, lsl #14
    1a20:	40011201 	andmi	r1, r1, r1, lsl #4
    1a24:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
    1a28:	00001301 	andeq	r1, r0, r1, lsl #6
    1a2c:	03000507 	movweq	r0, #1287	; 0x507
    1a30:	3b0b3a0e 	blcc	2d0270 <__RAM_SIZE+0x1d0270>
    1a34:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1a38:	000a0213 	andeq	r0, sl, r3, lsl r2
    1a3c:	002e0800 	eoreq	r0, lr, r0, lsl #16
    1a40:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    1a44:	0b3b0b3a 	bleq	ec4734 <__RAM_SIZE+0xdc4734>
    1a48:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    1a4c:	01111349 	tsteq	r1, r9, asr #6
    1a50:	0a400112 	beq	1001ea0 <__RAM_SIZE+0xf01ea0>
    1a54:	000c4297 	muleq	ip, r7, r2
    1a58:	002e0900 	eoreq	r0, lr, r0, lsl #18
    1a5c:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    1a60:	0b3b0b3a 	bleq	ec4750 <__RAM_SIZE+0xdc4750>
    1a64:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    1a68:	01120111 	tsteq	r2, r1, lsl r1
    1a6c:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
    1a70:	0000000c 	andeq	r0, r0, ip
    1a74:	10001101 	andne	r1, r0, r1, lsl #2
    1a78:	12011106 	andne	r1, r1, #-2147483647	; 0x80000001
    1a7c:	1b0e0301 	blne	382688 <__RAM_SIZE+0x282688>
    1a80:	130e250e 	movwne	r2, #58638	; 0xe50e
    1a84:	00000005 	andeq	r0, r0, r5
    1a88:	10001101 	andne	r1, r0, r1, lsl #2
    1a8c:	12011106 	andne	r1, r1, #-2147483647	; 0x80000001
    1a90:	1b0e0301 	blne	38269c <__RAM_SIZE+0x28269c>
    1a94:	130e250e 	movwne	r2, #58638	; 0xe50e
    1a98:	00000005 	andeq	r0, r0, r5

Disassembly of section .debug_loc:

00000000 <.debug_loc>:
       0:	1000085c 	andne	r0, r0, ip, asr r8
       4:	1000085e 	andne	r0, r0, lr, asr r8
        xReturn = pdFALSE;
       8:	007d0002 	rsbseq	r0, sp, r2
}
       c:	1000085e 	andne	r0, r0, lr, asr r8
    ( pxList->uxNumberOfItems ) = ( UBaseType_t ) ( pxList->uxNumberOfItems + 1U );
      10:	10000888 	andne	r0, r0, r8, lsl #17
}
      14:	087d0002 	ldmdaeq	sp!, {r1}^
	...
      20:	00000001 	andeq	r0, r0, r1
      24:	085e0000 	ldmdaeq	lr, {}^	; <UNPREDICTABLE>
      28:	08721000 	ldmdaeq	r2!, {ip}^
      2c:	00021000 	andeq	r1, r2, r0
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
      30:	08729f30 	ldmdaeq	r2!, {r4, r5, r8, r9, sl, fp, ip, pc}^
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
      34:	08761000 	ldmdaeq	r6!, {ip}^
      38:	00011000 	andeq	r1, r1, r0
      3c:	00087651 	andeq	r7, r8, r1, asr r6
      40:	00088810 	andeq	r8, r8, r0, lsl r8
        BaseType_t xReturn = pdFAIL;
      44:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
	...
        printf("] \r\n");
      50:	10000800 	andne	r0, r0, r0, lsl #16
}
      54:	10000802 	andne	r0, r0, r2, lsl #16
      58:	007d0002 	rsbseq	r0, sp, r2
      5c:	10000802 	andne	r0, r0, r2, lsl #16
      60:	10000804 	andne	r0, r0, r4, lsl #16
      64:	047d0002 	ldrbteq	r0, [sp], #-2
      68:	10000804 	andne	r0, r0, r4, lsl #16
      6c:	10000828 	andne	r0, r0, r8, lsr #16
      70:	107d0002 	rsbsne	r0, sp, r2
      74:	10000828 	andne	r0, r0, r8, lsr #16
      78:	1000082c 	andne	r0, r0, ip, lsr #16
      7c:	047d0002 	ldrbteq	r0, [sp], #-2
            prvUnlockQueue( pxQueue );
      80:	1000082c 	andne	r0, r0, ip, lsr #16
            ( void ) xTaskResumeAll();
      84:	10000844 	andne	r0, r0, r4, asr #16
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
      88:	107d0002 	rsbsne	r0, sp, r2
	...
        taskENTER_CRITICAL();
      94:	00000002 	andeq	r0, r0, r2
            if( uxSemaphoreCount > ( UBaseType_t ) 0 )
      98:	00000000 	andeq	r0, r0, r0
                if( xTicksToWait == ( TickType_t ) 0 )
      9c:	10000804 	andne	r0, r0, r4, lsl #16
      a0:	1000081a 	andne	r0, r0, sl, lsl r8
                else if( xEntryTimeSet == pdFALSE )
      a4:	9f310002 	svcls	0x00310002
        taskEXIT_CRITICAL();
      a8:	1000081a 	andne	r0, r0, sl, lsl r8
        vTaskSuspendAll();
      ac:	10000822 	andne	r0, r0, r2, lsr #16
        prvLockQueue( pxQueue );
      b0:	22500001 	subscs	r0, r0, #1
      b4:	25100008 	ldrcs	r0, [r0, #-8]
      b8:	01100008 	tsteq	r0, r8
      bc:	082c5100 	stmdaeq	ip!, {r8, ip, lr}
      c0:	082f1000 	stmdaeq	pc!, {ip}	; <UNPREDICTABLE>
      c4:	00011000 	andeq	r1, r1, r0
      c8:	00000050 	andeq	r0, r0, r0, asr r0
      cc:	00000000 	andeq	r0, r0, r0
        if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
      d0:	00084400 	andeq	r4, r8, r0, lsl #8
      d4:	00084610 	andeq	r4, r8, r0, lsl r6
      d8:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
      dc:	00084600 	andeq	r4, r8, r0, lsl #12
      e0:	00085c10 	andeq	r5, r8, r0, lsl ip
                    if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
      e4:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
      e8:	00000008 	andeq	r0, r0, r8
                vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
      ec:	00000000 	andeq	r0, r0, r0
      f0:	00000100 	andeq	r0, r0, r0, lsl #2
                prvUnlockQueue( pxQueue );
      f4:	00084400 	andeq	r4, r8, r0, lsl #8
      f8:	00084610 	andeq	r4, r8, r0, lsl r6
                if( xTaskResumeAll() == pdFALSE )
      fc:	50000110 	andpl	r0, r0, r0, lsl r1
     100:	10000846 	andne	r0, r0, r6, asr #16
                    taskYIELD_WITHIN_API();
     104:	1000085c 	andne	r0, r0, ip, asr r8
                    if( xInheritanceOccurred != pdFALSE )
     108:	01f30004 	mvnseq	r0, r4
                return errQUEUE_EMPTY;
     10c:	00009f50 	andeq	r9, r0, r0, asr pc
	...
                            vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
     11c:	00020000 	andeq	r0, r2, r0
                        taskEXIT_CRITICAL();
     120:	0000007d 	andeq	r0, r0, sp, ror r0
     124:	00000000 	andeq	r0, r0, r0
     128:	00020000 	andeq	r0, r2, r0
     12c:	0000087d 	andeq	r0, r0, sp, ror r8
	...
     13c:	00020000 	andeq	r0, r2, r0
     140:	0000007d 	andeq	r0, r0, sp, ror r0
     144:	00000000 	andeq	r0, r0, r0
     148:	00020000 	andeq	r0, r2, r0
     14c:	0000087d 	andeq	r0, r0, sp, ror r8
	...
     15c:	00020000 	andeq	r0, r2, r0
     160:	0000007d 	andeq	r0, r0, sp, ror r0
     164:	00000000 	andeq	r0, r0, r0
     168:	00020000 	andeq	r0, r2, r0
     16c:	0000087d 	andeq	r0, r0, sp, ror r8
	...
     17c:	00020000 	andeq	r0, r2, r0
     180:	0000007d 	andeq	r0, r0, sp, ror r0
     184:	00000000 	andeq	r0, r0, r0
     188:	00020000 	andeq	r0, r2, r0
     18c:	0000087d 	andeq	r0, r0, sp, ror r8
	...
     19c:	00020000 	andeq	r0, r2, r0
     1a0:	0000007d 	andeq	r0, r0, sp, ror r0
     1a4:	00000000 	andeq	r0, r0, r0
     1a8:	00020000 	andeq	r0, r2, r0
     1ac:	0000087d 	andeq	r0, r0, sp, ror r8
	...
     1bc:	00020000 	andeq	r0, r2, r0
     1c0:	0000007d 	andeq	r0, r0, sp, ror r0
     1c4:	00000000 	andeq	r0, r0, r0
     1c8:	00020000 	andeq	r0, r2, r0
     1cc:	0000087d 	andeq	r0, r0, sp, ror r8
	...
     1dc:	00020000 	andeq	r0, r2, r0
     1e0:	0000007d 	andeq	r0, r0, sp, ror r0
     1e4:	00000000 	andeq	r0, r0, r0
     1e8:	00020000 	andeq	r0, r2, r0
     1ec:	00000c7d 	andeq	r0, r0, sp, ror ip
     1f0:	00000000 	andeq	r0, r0, r0
     1f4:	00030000 	andeq	r0, r3, r0
     1f8:	0002907d 	andeq	r9, r2, sp, ror r0
     1fc:	00000000 	andeq	r0, r0, r0
     200:	02000000 	andeq	r0, r0, #0
     204:	000c7d00 	andeq	r7, ip, r0, lsl #26
	...
     21c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
     228:	00540001 	subseq	r0, r4, r1
     22c:	00000000 	andeq	r0, r0, r0
     230:	01000000 	mrseq	r0, (UNDEF: 0)
     234:	00005400 	andeq	r5, r0, r0, lsl #8
	...
     248:	00010000 	andeq	r0, r1, r0
     24c:	00000050 	andeq	r0, r0, r0, asr r0
     250:	00000000 	andeq	r0, r0, r0
     254:	53000100 	movwpl	r0, #256	; 0x100
	...
     270:	00500001 	subseq	r0, r0, r1
     274:	00000000 	andeq	r0, r0, r0
     278:	01000000 	mrseq	r0, (UNDEF: 0)
     27c:	00005500 	andeq	r5, r0, r0, lsl #10
     280:	00000000 	andeq	r0, r0, r0
     284:	00010000 	andeq	r0, r1, r0
     288:	00000050 	andeq	r0, r0, r0, asr r0
     28c:	00000000 	andeq	r0, r0, r0
     290:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
     29c:	00000002 	andeq	r0, r0, r2
	...
     2a8:	9f300002 	svcls	0x00300002
	...
     2b4:	00540001 	subseq	r0, r4, r1
	...
     2c4:	02000000 	andeq	r0, r0, #0
     2c8:	00007d00 	andeq	r7, r0, r0, lsl #26
     2cc:	00000000 	andeq	r0, r0, r0
     2d0:	02000000 	andeq	r0, r0, #0
     2d4:	000c7d00 	andeq	r7, ip, r0, lsl #26
     2d8:	00000000 	andeq	r0, r0, r0
     2dc:	02000000 	andeq	r0, r0, #0
     2e0:	00187d00 	andseq	r7, r8, r0, lsl #26
     2e4:	00000000 	andeq	r0, r0, r0
     2e8:	02000000 	andeq	r0, r0, #0
     2ec:	000c7d00 	andeq	r7, ip, r0, lsl #26
     2f0:	00000000 	andeq	r0, r0, r0
     2f4:	01000000 	mrseq	r0, (UNDEF: 0)
     2f8:	01010101 	tsteq	r1, r1, lsl #2
	...
     304:	30000200 	andcc	r0, r0, r0, lsl #4
     308:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     30c:	00000000 	andeq	r0, r0, r0
     310:	34000200 	strcc	r0, [r0], #-512	; 0xfffffe00
     314:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     318:	00000000 	andeq	r0, r0, r0
     31c:	33000200 	movwcc	r0, #512	; 0x200
     320:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
     330:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
     33c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     340:	00000008 	andeq	r0, r0, r8
	...
     350:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
     35c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     360:	00000008 	andeq	r0, r0, r8
	...
     370:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
     37c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     380:	00000008 	andeq	r0, r0, r8
	...
     390:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
     39c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     3a0:	00000008 	andeq	r0, r0, r8
     3a4:	00000000 	andeq	r0, r0, r0
     3a8:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     3ac:	0000000c 	andeq	r0, r0, ip
     3b0:	00000000 	andeq	r0, r0, r0
     3b4:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     3b8:	00000028 	andeq	r0, r0, r8, lsr #32
     3bc:	00000000 	andeq	r0, r0, r0
     3c0:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     3c4:	0000000c 	andeq	r0, r0, ip
     3c8:	00000000 	andeq	r0, r0, r0
     3cc:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     3d0:	00000008 	andeq	r0, r0, r8
     3d4:	00000000 	andeq	r0, r0, r0
     3d8:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
     3f0:	01000000 	mrseq	r0, (UNDEF: 0)
     3f4:	00005000 	andeq	r5, r0, r0
     3f8:	00000000 	andeq	r0, r0, r0
     3fc:	00020000 	andeq	r0, r2, r0
     400:	00005491 	muleq	r0, r1, r4
     404:	00000000 	andeq	r0, r0, r0
     408:	00040000 	andeq	r0, r4, r0
     40c:	9f5001f3 	svcls	0x005001f3
	...
     424:	00510001 	subseq	r0, r1, r1
     428:	00000000 	andeq	r0, r0, r0
     42c:	04000000 	streq	r0, [r0], #-0
     430:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
     434:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
     444:	01000000 	mrseq	r0, (UNDEF: 0)
     448:	00005000 	andeq	r5, r0, r0
	...
     458:	00020000 	andeq	r0, r2, r0
     45c:	0000007d 	andeq	r0, r0, sp, ror r0
     460:	00000000 	andeq	r0, r0, r0
     464:	00020000 	andeq	r0, r2, r0
     468:	0000047d 	andeq	r0, r0, sp, ror r4
     46c:	00000000 	andeq	r0, r0, r0
     470:	00020000 	andeq	r0, r2, r0
     474:	0000107d 	andeq	r1, r0, sp, ror r0
     478:	00000000 	andeq	r0, r0, r0
     47c:	00020000 	andeq	r0, r2, r0
     480:	0000047d 	andeq	r0, r0, sp, ror r4
	...
     498:	00500001 	subseq	r0, r0, r1
     49c:	00000000 	andeq	r0, r0, r0
     4a0:	01000000 	mrseq	r0, (UNDEF: 0)
     4a4:	00005100 	andeq	r5, r0, r0, lsl #2
     4a8:	00000000 	andeq	r0, r0, r0
     4ac:	00040000 	andeq	r0, r4, r0
     4b0:	9f5001f3 	svcls	0x005001f3
	...
     4c8:	00010000 	andeq	r0, r1, r0
     4cc:	00000051 	andeq	r0, r0, r1, asr r0
     4d0:	00000000 	andeq	r0, r0, r0
     4d4:	52000100 	andpl	r0, r0, #0, 2
	...
     4e0:	01f30004 	mvnseq	r0, r4
     4e4:	00009f51 	andeq	r9, r0, r1, asr pc
	...
     4fc:	00520001 	subseq	r0, r2, r1
     500:	00000000 	andeq	r0, r0, r0
     504:	01000000 	mrseq	r0, (UNDEF: 0)
     508:	00005300 	andeq	r5, r0, r0, lsl #6
     50c:	00000000 	andeq	r0, r0, r0
     510:	00040000 	andeq	r0, r4, r0
     514:	9f5201f3 	svcls	0x005201f3
	...
     528:	00010000 	andeq	r0, r1, r0
     52c:	00000053 	andeq	r0, r0, r3, asr r0
	...
     53c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
     548:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     54c:	00000004 	andeq	r0, r0, r4
     550:	00000000 	andeq	r0, r0, r0
     554:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     558:	00000018 	andeq	r0, r0, r8, lsl r0
     55c:	00000000 	andeq	r0, r0, r0
     560:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     564:	00000004 	andeq	r0, r0, r4
	...
     578:	01000000 	mrseq	r0, (UNDEF: 0)
     57c:	00005000 	andeq	r5, r0, r0
     580:	00000000 	andeq	r0, r0, r0
     584:	00010000 	andeq	r0, r1, r0
     588:	00000053 	andeq	r0, r0, r3, asr r0
     58c:	00000000 	andeq	r0, r0, r0
     590:	f3000400 	vshl.u8	d0, d0, d0
     594:	009f5001 	addseq	r5, pc, r1
	...
     5a8:	51000100 	mrspl	r0, (UNDEF: 16)
	...
     5bc:	007d0002 	rsbseq	r0, sp, r2
	...
     5c8:	087d0002 	ldmdaeq	sp!, {r1}^
	...
     5d4:	107d0002 	rsbsne	r0, sp, r2
	...
     5e0:	207d0002 	rsbscs	r0, sp, r2
	...
     5ec:	107d0002 	rsbsne	r0, sp, r2
	...
     5f8:	087d0002 	ldmdaeq	sp!, {r1}^
	...
     604:	007d0002 	rsbseq	r0, sp, r2
	...
     61c:	00010000 	andeq	r0, r1, r0
     620:	00000050 	andeq	r0, r0, r0, asr r0
     624:	00000000 	andeq	r0, r0, r0
     628:	51000100 	mrspl	r0, (UNDEF: 16)
	...
     634:	01f30004 	mvnseq	r0, r4
     638:	00009f50 	andeq	r9, r0, r0, asr pc
	...
     650:	00510001 	subseq	r0, r1, r1
     654:	00000000 	andeq	r0, r0, r0
     658:	01000000 	mrseq	r0, (UNDEF: 0)
     65c:	00005200 	andeq	r5, r0, r0, lsl #4
     660:	00000000 	andeq	r0, r0, r0
     664:	00040000 	andeq	r0, r4, r0
     668:	9f5101f3 	svcls	0x005101f3
	...
     67c:	00010000 	andeq	r0, r1, r0
     680:	00000050 	andeq	r0, r0, r0, asr r0
	...
     690:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
     69c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     6a0:	0000000c 	andeq	r0, r0, ip
     6a4:	00000000 	andeq	r0, r0, r0
     6a8:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     6ac:	00000010 	andeq	r0, r0, r0, lsl r0
     6b0:	00000000 	andeq	r0, r0, r0
     6b4:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     6b8:	00000020 	andeq	r0, r0, r0, lsr #32
     6bc:	00000000 	andeq	r0, r0, r0
     6c0:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     6c4:	00000010 	andeq	r0, r0, r0, lsl r0
     6c8:	00000000 	andeq	r0, r0, r0
     6cc:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     6d0:	0000000c 	andeq	r0, r0, ip
     6d4:	00000000 	andeq	r0, r0, r0
     6d8:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
     6f0:	01000000 	mrseq	r0, (UNDEF: 0)
     6f4:	00005000 	andeq	r5, r0, r0
     6f8:	00000000 	andeq	r0, r0, r0
     6fc:	00010000 	andeq	r0, r1, r0
     700:	00000051 	andeq	r0, r0, r1, asr r0
     704:	00000000 	andeq	r0, r0, r0
     708:	f3000400 	vshl.u8	d0, d0, d0
     70c:	009f5001 	addseq	r5, pc, r1
	...
     720:	50000100 	andpl	r0, r0, r0, lsl #2
	...
     72c:	10001a04 	andne	r1, r0, r4, lsl #20
     730:	10001a06 	andne	r1, r0, r6, lsl #20
     734:	007d0002 	rsbseq	r0, sp, r2
     738:	10001a06 	andne	r1, r0, r6, lsl #20
     73c:	10001a08 	andne	r1, r0, r8, lsl #20
     740:	107d0002 	rsbsne	r0, sp, r2
     744:	10001a08 	andne	r1, r0, r8, lsl #20
     748:	10001a0a 	andne	r1, r0, sl, lsl #20
     74c:	147d0002 	ldrbtne	r0, [sp], #-2
     750:	10001a0a 	andne	r1, r0, sl, lsl #20
     754:	10001a22 	andne	r1, r0, r2, lsr #20
     758:	287d0002 	ldmdacs	sp!, {r1}^
     75c:	10001a22 	andne	r1, r0, r2, lsr #20
     760:	10001a26 	andne	r1, r0, r6, lsr #20
     764:	147d0002 	ldrbtne	r0, [sp], #-2
     768:	10001a26 	andne	r1, r0, r6, lsr #20
     76c:	10001a28 	andne	r1, r0, r8, lsr #20
     770:	107d0002 	rsbsne	r0, sp, r2
     774:	10001a28 	andne	r1, r0, r8, lsr #20
     778:	10001a30 	andne	r1, r0, r0, lsr sl
     77c:	007d0002 	rsbseq	r0, sp, r2
	...
     788:	1a200000 	bne	800790 <__RAM_SIZE+0x700790>
     78c:	1a301000 	bne	c04794 <__RAM_SIZE+0xb04794>
     790:	00011000 	andeq	r1, r1, r0
     794:	00000050 	andeq	r0, r0, r0, asr r0
     798:	00000000 	andeq	r0, r0, r0
     79c:	00137800 	andseq	r7, r3, r0, lsl #16
     7a0:	00137c10 	andseq	r7, r3, r0, lsl ip
     7a4:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
     7a8:	00137c00 	andseq	r7, r3, r0, lsl #24
     7ac:	00137e10 	andseq	r7, r3, r0, lsl lr
     7b0:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
     7b4:	00137e24 	andseq	r7, r3, r4, lsr #28
     7b8:	0019ee10 	andseq	lr, r9, r0, lsl lr
     7bc:	7d000310 	stcvc	3, cr0, [r0, #-64]	; 0xffffffc0
     7c0:	19ee00e0 	stmibne	lr!, {r5, r6, r7}^
     7c4:	19f81000 	ldmibne	r8!, {ip}^
     7c8:	00021000 	andeq	r1, r2, r0
     7cc:	0000247d 	andeq	r2, r0, sp, ror r4
	...
     7dc:	13780000 	cmnne	r8, #0
     7e0:	138c1000 	orrne	r1, ip, #0
     7e4:	00011000 	andeq	r1, r1, r0
     7e8:	00138e50 	andseq	r8, r3, r0, asr lr
     7ec:	0019d410 	andseq	sp, r9, r0, lsl r4
     7f0:	57000110 	smladpl	r0, r0, r1, r0
     7f4:	100019d4 	ldrdne	r1, [r0], -r4
     7f8:	100019d8 	ldrdne	r1, [r0], -r8
     7fc:	d8500001 	ldmdale	r0, {r0}^
     800:	f2100019 	vqadd.s16	d0, d0, d9
     804:	01100019 	tsteq	r0, r9, lsl r0
     808:	00005700 	andeq	r5, r0, r0, lsl #14
	...
     81c:	10001378 	andne	r1, r0, r8, ror r3
     820:	1000138e 	andne	r1, r0, lr, lsl #7
     824:	8e510001 	cdphi	0, 5, cr0, cr1, cr1, {0}
     828:	d4100013 	ldrle	r0, [r0], #-19	; 0xffffffed
     82c:	01100019 	tsteq	r0, r9, lsl r0
     830:	19d45800 	ldmibne	r4, {fp, ip, lr}^
     834:	19d81000 	ldmibne	r8, {ip}^
     838:	00011000 	andeq	r1, r1, r0
     83c:	0019d851 	andseq	sp, r9, r1, asr r8
     840:	0019f210 	andseq	pc, r9, r0, lsl r2	; <UNPREDICTABLE>
     844:	58000110 	stmdapl	r0, {r4, r8}
     848:	100019f2 	strdne	r1, [r0], -r2
     84c:	100019f8 	strdne	r1, [r0], -r8
     850:	01f30004 	mvnseq	r0, r4
     854:	00009f51 	andeq	r9, r0, r1, asr pc
	...
     870:	10001378 	andne	r1, r0, r8, ror r3
     874:	1000138e 	andne	r1, r0, lr, lsl #7
     878:	8e520001 	cdphi	0, 5, cr0, cr2, cr1, {0}
     87c:	f6100013 			; <UNDEFINED> instruction: 0xf6100013
     880:	01100018 	tsteq	r0, r8, lsl r0
     884:	18f65600 	ldmne	r6!, {r9, sl, ip, lr}^
     888:	18f81000 	ldmne	r8!, {ip}^
     88c:	00011000 	andeq	r1, r1, r0
     890:	0018f85b 	andseq	pc, r8, fp, asr r8	; <UNPREDICTABLE>
     894:	00192210 	andseq	r2, r9, r0, lsl r2
     898:	56000110 			; <UNDEFINED> instruction: 0x56000110
     89c:	10001922 	andne	r1, r0, r2, lsr #18
     8a0:	1000194c 	andne	r1, r0, ip, asr #18
     8a4:	4c5b0001 	mrrcmi	0, 0, r0, fp, cr1
     8a8:	d4100019 	ldrle	r0, [r0], #-25	; 0xffffffe7
     8ac:	01100019 	tsteq	r0, r9, lsl r0
     8b0:	19d45600 	ldmibne	r4, {r9, sl, ip, lr}^
     8b4:	19d81000 	ldmibne	r8, {ip}^
     8b8:	00011000 	andeq	r1, r1, r0
     8bc:	0019d852 	andseq	sp, r9, r2, asr r8
     8c0:	0019f210 	andseq	pc, r9, r0, lsl r2	; <UNPREDICTABLE>
     8c4:	56000110 			; <UNDEFINED> instruction: 0x56000110
     8c8:	100019f2 	strdne	r1, [r0], -r2
     8cc:	100019f8 	strdne	r1, [r0], -r8
     8d0:	01f30004 	mvnseq	r0, r4
     8d4:	00009f52 	andeq	r9, r0, r2, asr pc
	...
     8e0:	13780000 	cmnne	r8, #0
     8e4:	138e1000 	orrne	r1, lr, #0
     8e8:	00011000 	andeq	r1, r1, r0
     8ec:	0019d453 	andseq	sp, r9, r3, asr r4
     8f0:	0019d810 	andseq	sp, r9, r0, lsl r8
     8f4:	53000110 	movwpl	r0, #272	; 0x110
	...
     900:	00000001 	andeq	r0, r0, r1
	...
     918:	100013b4 			; <UNDEFINED> instruction: 0x100013b4
     91c:	100013b6 			; <UNDEFINED> instruction: 0x100013b6
     920:	9f300002 	svcls	0x00300002
     924:	100013b6 			; <UNDEFINED> instruction: 0x100013b6
     928:	100014b4 			; <UNDEFINED> instruction: 0x100014b4
     92c:	b4550001 	ldrblt	r0, [r5], #-1
     930:	c6100014 			; <UNDEFINED> instruction: 0xc6100014
     934:	01100014 	tsteq	r0, r4, lsl r0
     938:	14c65100 	strbne	r5, [r6], #256	; 0x100
     93c:	14d01000 	ldrbne	r1, [r0], #0
     940:	00011000 	andeq	r1, r1, r0
     944:	0014d055 	andseq	sp, r4, r5, asr r0
     948:	0014e210 	andseq	lr, r4, r0, lsl r2
     94c:	51000110 	tstpl	r0, r0, lsl r1
     950:	100014e2 	andne	r1, r0, r2, ror #9
     954:	10001690 	mulne	r0, r0, r6
     958:	98550001 	ldmdals	r5, {r0}^
     95c:	b4100016 	ldrlt	r0, [r0], #-22	; 0xffffffea
     960:	01100016 	tsteq	r0, r6, lsl r0
     964:	16b45500 	ldrtne	r5, [r4], r0, lsl #10
     968:	16d31000 	ldrbne	r1, [r3], r0
     96c:	00021000 	andeq	r1, r2, r0
     970:	16d84091 			; <UNDEFINED> instruction: 0x16d84091
     974:	183c1000 	ldmdane	ip!, {ip}
     978:	00011000 	andeq	r1, r1, r0
     97c:	0018aa55 	andseq	sl, r8, r5, asr sl
     980:	00190410 	andseq	r0, r9, r0, lsl r4
     984:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
     988:	10001974 	andne	r1, r0, r4, ror r9
     98c:	100019ac 	andne	r1, r0, ip, lsr #19
     990:	c0550001 	subsgt	r0, r5, r1
     994:	c2100019 	andsgt	r0, r0, #25
     998:	01100019 	tsteq	r0, r9, lsl r0
     99c:	00005500 	andeq	r5, r0, r0, lsl #10
     9a0:	00000000 	andeq	r0, r0, r0
     9a4:	00020000 	andeq	r0, r2, r0
	...
     9b4:	02000000 	andeq	r0, r0, #0
     9b8:	00000002 	andeq	r0, r0, r2
     9bc:	100013d8 	ldrdne	r1, [r0], -r8
     9c0:	100013ea 	andne	r1, r0, sl, ror #7
     9c4:	9f300002 	svcls	0x00300002
     9c8:	100013ea 	andne	r1, r0, sl, ror #7
     9cc:	10001417 	andne	r1, r0, r7, lsl r4
     9d0:	48910002 	ldmmi	r1, {r1}
     9d4:	1000144a 	andne	r1, r0, sl, asr #8
     9d8:	10001452 	andne	r1, r0, r2, asr r4
     9dc:	9f300002 	svcls	0x00300002
     9e0:	10001452 	andne	r1, r0, r2, asr r4
     9e4:	10001454 	andne	r1, r0, r4, asr r4
     9e8:	54500001 	ldrbpl	r0, [r0], #-1
     9ec:	62100014 	andsvs	r0, r0, #20
     9f0:	02100014 	andseq	r0, r0, #20
     9f4:	629f3000 	addsvs	r3, pc, #0
     9f8:	6a100014 	bvs	400a50 <__RAM_SIZE+0x300a50>
     9fc:	02100014 	andseq	r0, r0, #20
     a00:	6a489100 	bvs	1224e08 <__RAM_SIZE+0x1124e08>
     a04:	72100014 	andsvc	r0, r0, #20
     a08:	02100014 	andseq	r0, r0, #20
     a0c:	729f3000 	addsvc	r3, pc, #0
     a10:	74100014 	ldrvc	r0, [r0], #-20	; 0xffffffec
     a14:	01100014 	tsteq	r0, r4, lsl r0
     a18:	14745300 	ldrbtne	r5, [r4], #-768	; 0xfffffd00
     a1c:	19741000 	ldmdbne	r4!, {ip}^
     a20:	00021000 	andeq	r1, r2, r0
     a24:	19744891 	ldmdbne	r4!, {r0, r4, r7, fp, lr}^
     a28:	19aa1000 	stmibne	sl!, {ip}
     a2c:	00021000 	andeq	r1, r2, r0
     a30:	19aa9f38 	stmibne	sl!, {r3, r4, r5, r8, r9, sl, fp, ip, pc}
     a34:	19d41000 	ldmibne	r4, {ip}^
     a38:	00021000 	andeq	r1, r2, r0
     a3c:	00004891 	muleq	r0, r1, r8
     a40:	00000000 	andeq	r0, r0, r0
     a44:	00010000 	andeq	r0, r1, r0
	...
     a64:	100013ea 	andne	r1, r0, sl, ror #7
     a68:	100013f6 	strdne	r1, [r0], -r6
     a6c:	9f300002 	svcls	0x00300002
     a70:	100013f6 	strdne	r1, [r0], -r6
     a74:	10001417 	andne	r1, r0, r7, lsl r4
     a78:	745b0001 	ldrbvc	r0, [fp], #-1
     a7c:	9a100014 	bls	400ad4 <__RAM_SIZE+0x300ad4>
     a80:	02100014 	andseq	r0, r0, #20
     a84:	9a9f3000 	bls	fe7cca8c <__StackTop+0xc66cca8c>
     a88:	9c100014 	ldcls	0, cr0, [r0], {20}
     a8c:	01100014 	tsteq	r0, r4, lsl r0
     a90:	149c5000 	ldrne	r5, [ip], #0
     a94:	14a81000 	strtne	r1, [r8], #0
     a98:	00021000 	andeq	r1, r2, r0
     a9c:	14a89f30 	strtne	r9, [r8], #3888	; 0xf30
     aa0:	18421000 	stmdane	r2, {ip}^
     aa4:	00011000 	andeq	r1, r1, r0
     aa8:	00187e5b 	andseq	r7, r8, fp, asr lr
     aac:	00188410 	andseq	r8, r8, r0, lsl r4
     ab0:	5b000110 	blpl	ef8 <__Vectors_Size+0x738>
     ab4:	100018aa 	andne	r1, r0, sl, lsr #17
     ab8:	100018f4 	strdne	r1, [r0], -r4
     abc:	f45b0001 			; <UNDEFINED> instruction: 0xf45b0001
     ac0:	f8100018 			; <UNDEFINED> instruction: 0xf8100018
     ac4:	01100018 	tsteq	r0, r8, lsl r0
     ac8:	18f85400 	ldmne	r8!, {sl, ip, lr}^
     acc:	19201000 	stmdbne	r0!, {ip}
     ad0:	00011000 	andeq	r1, r1, r0
     ad4:	0019205b 	andseq	r2, r9, fp, asr r0
     ad8:	00192410 	andseq	r2, r9, r0, lsl r4
     adc:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
     ae0:	10001924 	andne	r1, r0, r4, lsr #18
     ae4:	10001926 	andne	r1, r0, r6, lsr #18
     ae8:	26530001 	ldrbcs	r0, [r3], -r1
     aec:	40100019 	andsmi	r0, r0, r9, lsl r0
     af0:	01100019 	tsteq	r0, r9, lsl r0
     af4:	19405400 	stmdbne	r0, {sl, ip, lr}^
     af8:	19441000 	stmdbne	r4, {ip}^
     afc:	00011000 	andeq	r1, r1, r0
     b00:	00197453 	andseq	r7, r9, r3, asr r4
     b04:	0019d410 	andseq	sp, r9, r0, lsl r4
     b08:	5b000110 	blpl	f50 <__Vectors_Size+0x790>
	...
     b14:	00010000 	andeq	r0, r1, r0
     b18:	00010001 	andeq	r0, r1, r1
     b1c:	00010001 	andeq	r0, r1, r1
     b20:	13d80000 	bicsne	r0, r8, #0
     b24:	14171000 	ldrne	r1, [r7], #-0
     b28:	00021000 	andeq	r1, r2, r0
     b2c:	14209f30 	strtne	r9, [r0], #-3888	; 0xfffff0d0
     b30:	14221000 	strtne	r1, [r2], #-0
     b34:	00021000 	andeq	r1, r2, r0
     b38:	142a9f31 	strtne	r9, [sl], #-3889	; 0xfffff0cf
     b3c:	142c1000 	strtne	r1, [ip], #-0
     b40:	00021000 	andeq	r1, r2, r0
     b44:	14349f31 	ldrtne	r9, [r4], #-3889	; 0xfffff0cf
     b48:	14361000 	ldrtne	r1, [r6], #-0
     b4c:	00021000 	andeq	r1, r2, r0
     b50:	143e9f31 	ldrtne	r9, [lr], #-3889	; 0xfffff0cf
     b54:	14401000 	strbne	r1, [r0], #-0
     b58:	00021000 	andeq	r1, r2, r0
     b5c:	14489f31 	strbne	r9, [r8], #-3889	; 0xfffff0cf
     b60:	144a1000 	strbne	r1, [sl], #-0
     b64:	00021000 	andeq	r1, r2, r0
     b68:	144a9f31 	strbne	r9, [sl], #-3889	; 0xfffff0cf
     b6c:	19d41000 	ldmibne	r4, {ip}^
     b70:	00021000 	andeq	r1, r2, r0
     b74:	00009f30 	andeq	r9, r0, r0, lsr pc
     b78:	00000000 	andeq	r0, r0, r0
     b7c:	00020000 	andeq	r0, r2, r0
	...
     bdc:	13840000 	orrne	r0, r4, #0
     be0:	138e1000 	orrne	r1, lr, #0
     be4:	00021000 	andeq	r1, r2, r0
     be8:	138e9f30 	orrne	r9, lr, #48, 30	; 0xc0
     bec:	139e1000 	orrsne	r1, lr, #0
     bf0:	00011000 	andeq	r1, r1, r0
     bf4:	00139e54 	andseq	r9, r3, r4, asr lr
     bf8:	0013b010 	andseq	fp, r3, r0, lsl r0
     bfc:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
     c00:	100013b0 			; <UNDEFINED> instruction: 0x100013b0
     c04:	1000163a 	andne	r1, r0, sl, lsr r6
     c08:	3a540001 	bcc	1500c14 <__RAM_SIZE+0x1400c14>
     c0c:	3c100016 	ldccc	0, cr0, [r0], {22}
     c10:	01100016 	tsteq	r0, r6, lsl r0
     c14:	163c5000 	ldrtne	r5, [ip], -r0
     c18:	16901000 	ldrne	r1, [r0], r0
     c1c:	00011000 	andeq	r1, r1, r0
     c20:	00169054 	andseq	r9, r6, r4, asr r0
     c24:	00169810 	andseq	r9, r6, r0, lsl r8
     c28:	50000110 	andpl	r0, r0, r0, lsl r1
     c2c:	10001698 	mulne	r0, r8, r6
     c30:	100016d6 	ldrdne	r1, [r0], -r6
     c34:	d6540001 	ldrble	r0, [r4], -r1
     c38:	d8100016 	ldmdale	r0, {r1, r2, r4}
     c3c:	01100016 	tsteq	r0, r6, lsl r0
     c40:	16d85000 	ldrbne	r5, [r8], r0
     c44:	17101000 	ldrne	r1, [r0, -r0]
     c48:	00011000 	andeq	r1, r1, r0
     c4c:	00171054 	andseq	r1, r7, r4, asr r0
     c50:	00171210 	andseq	r1, r7, r0, lsl r2
     c54:	50000110 	andpl	r0, r0, r0, lsl r1
     c58:	10001712 	andne	r1, r0, r2, lsl r7
     c5c:	10001764 	andne	r1, r0, r4, ror #14
     c60:	64540001 	ldrbvs	r0, [r4], #-1
     c64:	66100017 			; <UNDEFINED> instruction: 0x66100017
     c68:	01100017 	tsteq	r0, r7, lsl r0
     c6c:	17665000 	strbne	r5, [r6, -r0]!
     c70:	178e1000 	strne	r1, [lr, r0]
     c74:	00011000 	andeq	r1, r1, r0
     c78:	00178e54 	andseq	r8, r7, r4, asr lr
     c7c:	00179010 	andseq	r9, r7, r0, lsl r0
     c80:	50000110 	andpl	r0, r0, r0, lsl r1
     c84:	10001790 	mulne	r0, r0, r7
     c88:	100017dc 	ldrdne	r1, [r0], -ip
     c8c:	dc540001 	mrrcle	0, 0, r0, r4, cr1
     c90:	e4100017 	ldr	r0, [r0], #-23	; 0xffffffe9
     c94:	01100017 	tsteq	r0, r7, lsl r0
     c98:	17e45000 	strbne	r5, [r4, r0]!
     c9c:	18301000 	ldmdane	r0!, {ip}
     ca0:	00011000 	andeq	r1, r1, r0
     ca4:	00183054 	andseq	r3, r8, r4, asr r0
     ca8:	00183810 	andseq	r3, r8, r0, lsl r8
     cac:	50000110 	andpl	r0, r0, r0, lsl r1
     cb0:	10001838 	andne	r1, r0, r8, lsr r8
     cb4:	1000184c 	andne	r1, r0, ip, asr #16
     cb8:	4c540001 	mrrcmi	0, 0, r0, r4, cr1
     cbc:	62100018 	andsvs	r0, r0, #24
     cc0:	01100018 	tsteq	r0, r8, lsl r0
     cc4:	18625a00 	stmdane	r2!, {r9, fp, ip, lr}^
     cc8:	18661000 	stmdane	r6!, {ip}^
     ccc:	00011000 	andeq	r1, r1, r0
     cd0:	00186652 	andseq	r6, r8, r2, asr r6
     cd4:	00187210 	andseq	r7, r8, r0, lsl r2
     cd8:	5a000110 	bpl	1120 <__HEAP_SIZE+0x120>
     cdc:	10001872 	andne	r1, r0, r2, ror r8
     ce0:	1000187e 	andne	r1, r0, lr, ror r8
     ce4:	7e520001 	cdpvc	0, 5, cr0, cr2, cr1, {0}
     ce8:	88100018 	ldmdahi	r0, {r3, r4}
     cec:	01100018 	tsteq	r0, r8, lsl r0
     cf0:	18885400 	stmne	r8, {sl, ip, lr}
     cf4:	188e1000 	stmne	lr, {ip}
     cf8:	00011000 	andeq	r1, r1, r0
     cfc:	00188e5a 	andseq	r8, r8, sl, asr lr
     d00:	00189210 	andseq	r9, r8, r0, lsl r2
     d04:	52000110 	andpl	r0, r0, #16, 2
     d08:	10001892 	mulne	r0, r2, r8
     d0c:	1000189e 	mulne	r0, lr, r8
     d10:	9e550001 	cdpls	0, 5, cr0, cr5, cr1, {0}
     d14:	aa100018 	bge	400d7c <__RAM_SIZE+0x300d7c>
     d18:	01100018 	tsteq	r0, r8, lsl r0
     d1c:	18aa5200 	stmiane	sl!, {r9, ip, lr}
     d20:	18f21000 	ldmne	r2!, {ip}^
     d24:	00011000 	andeq	r1, r1, r0
     d28:	0018f254 	andseq	pc, r8, r4, asr r2	; <UNPREDICTABLE>
     d2c:	0018f810 	andseq	pc, r8, r0, lsl r8	; <UNPREDICTABLE>
     d30:	52000110 	andpl	r0, r0, #16, 2
     d34:	100018f8 	strdne	r1, [r0], -r8
     d38:	10001900 	andne	r1, r0, r0, lsl #18
     d3c:	00540001 	subseq	r0, r4, r1
     d40:	08100019 	ldmdaeq	r0, {r0, r3, r4}
     d44:	01100019 	tsteq	r0, r9, lsl r0
     d48:	19085200 	stmdbne	r8, {r9, ip, lr}
     d4c:	19141000 	ldmdbne	r4, {ip}
     d50:	00011000 	andeq	r1, r1, r0
     d54:	00191459 	andseq	r1, r9, r9, asr r4
     d58:	00192c10 	andseq	r2, r9, r0, lsl ip
     d5c:	52000110 	andpl	r0, r0, #16, 2
     d60:	1000192c 	andne	r1, r0, ip, lsr #18
     d64:	10001934 	andne	r1, r0, r4, lsr r9
     d68:	34550001 	ldrbcc	r0, [r5], #-1
     d6c:	5c100019 	ldcpl	0, cr0, [r0], {25}
     d70:	01100019 	tsteq	r0, r9, lsl r0
     d74:	195c5200 	ldmdbne	ip, {r9, ip, lr}^
     d78:	19681000 	stmdbne	r8!, {ip}^
     d7c:	00011000 	andeq	r1, r1, r0
     d80:	00196855 	andseq	r6, r9, r5, asr r8
     d84:	00197410 	andseq	r7, r9, r0, lsl r4
     d88:	52000110 	andpl	r0, r0, #16, 2
     d8c:	10001974 	andne	r1, r0, r4, ror r9
     d90:	100019a2 	andne	r1, r0, r2, lsr #19
     d94:	a2540001 	subsge	r0, r4, #1
     d98:	aa100019 	bge	400e04 <__RAM_SIZE+0x300e04>
     d9c:	01100019 	tsteq	r0, r9, lsl r0
     da0:	19aa5000 	stmibne	sl!, {ip, lr}
     da4:	19ac1000 	stmibne	ip!, {ip}
     da8:	00011000 	andeq	r1, r1, r0
     dac:	0019ac54 	andseq	sl, r9, r4, asr ip
     db0:	0019c010 	andseq	ip, r9, r0, lsl r0
     db4:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
     db8:	100019c0 	andne	r1, r0, r0, asr #19
     dbc:	100019c2 	andne	r1, r0, r2, asr #19
     dc0:	c2540001 	subsgt	r0, r4, #1
     dc4:	d4100019 	ldrle	r0, [r0], #-25	; 0xffffffe7
     dc8:	01100019 	tsteq	r0, r9, lsl r0
     dcc:	19d45500 	ldmibne	r4, {r8, sl, ip, lr}^
     dd0:	19d81000 	ldmibne	r8, {ip}^
     dd4:	00021000 	andeq	r1, r2, r0
     dd8:	19d89f30 	ldmibne	r8, {r4, r5, r8, r9, sl, fp, ip, pc}^
     ddc:	19f21000 	ldmibne	r2!, {ip}^
     de0:	00011000 	andeq	r1, r1, r0
     de4:	0019f254 	andseq	pc, r9, r4, asr r2	; <UNPREDICTABLE>
     de8:	0019f810 	andseq	pc, r9, r0, lsl r8	; <UNPREDICTABLE>
     dec:	50000110 	andpl	r0, r0, r0, lsl r1
	...
     df8:	00000001 	andeq	r0, r0, r1
	...
     e14:	100015ce 	andne	r1, r0, lr, asr #11
     e18:	100015d6 	ldrdne	r1, [r0], -r6
     e1c:	9f3a0002 	svcls	0x003a0002
     e20:	100015d8 	ldrdne	r1, [r0], -r8
     e24:	10001628 	andne	r1, r0, r8, lsr #12
     e28:	28530001 	ldmdacs	r3, {r0}^
     e2c:	37100016 			; <UNDEFINED> instruction: 0x37100016
     e30:	03100016 	tsteq	r0, #22
     e34:	7fa89100 	svcvc	0x00a89100
     e38:	10001648 	andne	r1, r0, r8, asr #12
     e3c:	10001684 	andne	r1, r0, r4, lsl #13
     e40:	84530001 	ldrbhi	r0, [r3], #-1
     e44:	8d100016 	ldchi	0, cr0, [r0, #-88]	; 0xffffffa8
     e48:	03100016 	tsteq	r0, #22
     e4c:	7fa89100 	svcvc	0x00a89100
     e50:	10001698 	mulne	r0, r8, r6
     e54:	100016be 			; <UNDEFINED> instruction: 0x100016be
     e58:	be530001 	cdplt	0, 5, cr0, cr3, cr1, {0}
     e5c:	d3100016 	tstle	r0, #22
     e60:	03100016 	tsteq	r0, #22
     e64:	7fb09100 	svcvc	0x00b09100
     e68:	100016d8 	ldrdne	r1, [r0], -r8
     e6c:	10001704 	andne	r1, r0, r4, lsl #14
     e70:	04530001 	ldrbeq	r0, [r3], #-1
     e74:	0d100017 	ldceq	0, cr0, [r0, #-92]	; 0xffffffa4
     e78:	03100017 	tsteq	r0, #23
     e7c:	7fa89100 	svcvc	0x00a89100
     e80:	10001712 	andne	r1, r0, r2, lsl r7
     e84:	10001758 	andne	r1, r0, r8, asr r7
     e88:	58530001 	ldmdapl	r3, {r0}^
     e8c:	61100017 	tstvs	r0, r7, lsl r0
     e90:	03100017 	tsteq	r0, #23
     e94:	7fb09100 	svcvc	0x00b09100
     e98:	10001766 	andne	r1, r0, r6, ror #14
     e9c:	1000177a 	andne	r1, r0, sl, ror r7
     ea0:	7a530001 	bvc	14c0eac <__RAM_SIZE+0x13c0eac>
     ea4:	8b100017 	blhi	400f08 <__RAM_SIZE+0x300f08>
     ea8:	03100017 	tsteq	r0, #23
     eac:	7fa89100 	svcvc	0x00a89100
     eb0:	10001790 	mulne	r0, r0, r7
     eb4:	100017aa 	andne	r1, r0, sl, lsr #15
     eb8:	00530001 	subseq	r0, r3, r1
	...
     ec4:	00166800 	andseq	r6, r6, r0, lsl #16
     ec8:	00167e10 	andseq	r7, r6, r0, lsl lr
     ecc:	52000110 	andpl	r0, r0, #16, 2
	...
     edc:	1000161a 	andne	r1, r0, sl, lsl r6
     ee0:	10001630 	andne	r1, r0, r0, lsr r6
     ee4:	30520001 	subscc	r0, r2, r1
     ee8:	37100016 			; <UNDEFINED> instruction: 0x37100016
     eec:	02100016 	andseq	r0, r0, #22
     ef0:	00007d00 	andeq	r7, r0, r0, lsl #26
     ef4:	00000000 	andeq	r0, r0, r0
     ef8:	01000000 	mrseq	r0, (UNDEF: 0)
	...
     f0c:	38000000 	stmdacc	r0, {}	; <UNPREDICTABLE>
     f10:	42100018 	andsmi	r0, r0, #24
     f14:	02100018 	andseq	r0, r0, #24
     f18:	429f3100 	addsmi	r3, pc, #0, 2
     f1c:	58100018 	ldmdapl	r0, {r3, r4}
     f20:	01100018 	tsteq	r0, r8, lsl r0
     f24:	18625900 	stmdane	r2!, {r8, fp, ip, lr}^
     f28:	18721000 	ldmdane	r2!, {ip}^
     f2c:	00011000 	andeq	r1, r1, r0
     f30:	00187259 	andseq	r7, r8, r9, asr r2
     f34:	00187610 	andseq	r7, r8, r0, lsl r6
     f38:	53000110 	movwpl	r0, #272	; 0x110
     f3c:	10001876 	andne	r1, r0, r6, ror r8
     f40:	1000187e 	andne	r1, r0, lr, ror r8
     f44:	7e590001 	cdpvc	0, 5, cr0, cr9, cr1, {0}
     f48:	88100018 	ldmdahi	r0, {r3, r4}
     f4c:	02100018 	andseq	r0, r0, #24
     f50:	889f3100 	ldmhi	pc, {r8, ip, sp}	; <UNPREDICTABLE>
     f54:	90100018 	andsls	r0, r0, r8, lsl r0
     f58:	01100018 	tsteq	r0, r8, lsl r0
     f5c:	18905900 	ldmne	r0, {r8, fp, ip, lr}
     f60:	189e1000 	ldmne	lr, {ip}
     f64:	00011000 	andeq	r1, r1, r0
     f68:	00189e54 	andseq	r9, r8, r4, asr lr
     f6c:	0018a210 	andseq	sl, r8, r0, lsl r2
     f70:	59000110 	stmdbpl	r0, {r4, r8}
     f74:	100018a2 	andne	r1, r0, r2, lsr #17
     f78:	100018aa 	andne	r1, r0, sl, lsr #17
     f7c:	00540001 	subseq	r0, r4, r1
	...
     f88:	24000000 	strcs	r0, [r0], #-0
     f8c:	4c100019 	ldcmi	0, cr0, [r0], {25}
     f90:	01100019 	tsteq	r0, r9, lsl r0
     f94:	19545a00 	ldmdbne	r4, {r9, fp, ip, lr}^
     f98:	19581000 	ldmdbne	r8, {ip}^
     f9c:	00011000 	andeq	r1, r1, r0
     fa0:	0000005a 	andeq	r0, r0, sl, asr r0
	...
     fbc:	d8000000 	stmdale	r0, {}	; <UNPREDICTABLE>
     fc0:	f8100018 			; <UNDEFINED> instruction: 0xf8100018
     fc4:	01100018 	tsteq	r0, r8, lsl r0
     fc8:	18fc5900 	ldmne	ip!, {r8, fp, ip, lr}^
     fcc:	19041000 	stmdbne	r4, {ip}
     fd0:	00011000 	andeq	r1, r1, r0
     fd4:	00190459 	andseq	r0, r9, r9, asr r4
     fd8:	00191410 	andseq	r1, r9, r0, lsl r4
     fdc:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
     fe0:	10001914 	andne	r1, r0, r4, lsl r9
     fe4:	10001916 	andne	r1, r0, r6, lsl r9
     fe8:	16530001 	ldrbne	r0, [r3], -r1
     fec:	24100019 	ldrcs	r0, [r0], #-25	; 0xffffffe7
     ff0:	01100019 	tsteq	r0, r9, lsl r0
     ff4:	19245500 	stmdbne	r4!, {r8, sl, ip, lr}
     ff8:	194c1000 	stmdbne	ip, {ip}^
     ffc:	00011000 	andeq	r1, r1, r0
    1000:	00195459 	andseq	r5, r9, r9, asr r4
    1004:	00195a10 	andseq	r5, r9, r0, lsl sl
    1008:	59000110 	stmdbpl	r0, {r4, r8}
    100c:	1000195a 	andne	r1, r0, sl, asr r9
    1010:	10001968 	andne	r1, r0, r8, ror #18
    1014:	68540001 	ldmdavs	r4, {r0}^
    1018:	6c100019 	ldcvs	0, cr0, [r0], {25}
    101c:	01100019 	tsteq	r0, r9, lsl r0
    1020:	196c5900 	stmdbne	ip!, {r8, fp, ip, lr}^
    1024:	19721000 	ldmdbne	r2!, {ip}^
    1028:	00011000 	andeq	r1, r1, r0
    102c:	00197254 	andseq	r7, r9, r4, asr r2
    1030:	00197410 	andseq	r7, r9, r0, lsl r4
    1034:	79000310 	stmdbvc	r0, {r4, r8, r9}
    1038:	00009f01 	andeq	r9, r0, r1, lsl #30
	...
    1048:	100018c2 	andne	r1, r0, r2, asr #17
    104c:	100018c8 	andne	r1, r0, r8, asr #17
    1050:	c8520001 	ldmdagt	r2, {r0}^
    1054:	d0100018 	andsle	r0, r0, r8, lsl r0
    1058:	01100018 	tsteq	r0, r8, lsl r0
    105c:	18d05300 	ldmne	r0, {r8, r9, ip, lr}^
    1060:	18d41000 	ldmne	r4, {ip}^
    1064:	00011000 	andeq	r1, r1, r0
    1068:	00000052 	andeq	r0, r0, r2, asr r0
    106c:	00000000 	andeq	r0, r0, r0
    1070:	c2000000 	andgt	r0, r0, #0
    1074:	d8100018 	ldmdale	r0, {r3, r4}
    1078:	01100018 	tsteq	r0, r8, lsl r0
    107c:	00005900 	andeq	r5, r0, r0, lsl #18
    1080:	00000000 	andeq	r0, r0, r0
    1084:	00010000 	andeq	r0, r1, r0
    1088:	10001978 	andne	r1, r0, r8, ror r9
    108c:	100019aa 	andne	r1, r0, sl, lsr #19
    1090:	9f300002 	svcls	0x00300002
	...
    109c:	13d80003 	bicsne	r0, r8, #3
    10a0:	13de1000 	bicsne	r1, lr, #0
    10a4:	00011000 	andeq	r1, r1, r0
    10a8:	00000051 	andeq	r0, r0, r1, asr r0
    10ac:	00000000 	andeq	r0, r0, r0
    10b0:	7e000000 	cdpvc	0, 0, cr0, cr0, cr0, {0}
    10b4:	84100014 	ldrhi	r0, [r0], #-20	; 0xffffffec
    10b8:	01100014 	tsteq	r0, r4, lsl r0
    10bc:	00005200 	andeq	r5, r0, r0, lsl #4
    10c0:	00000000 	andeq	r0, r0, r0
    10c4:	0bf00000 	bleq	ffc010cc <__StackTop+0xc7b010cc>
    10c8:	0bf41000 	bleq	ffd050d0 <__StackTop+0xc7c050d0>
    10cc:	00021000 	andeq	r1, r2, r0
    10d0:	0bf4007d 	bleq	ffd012cc <__StackTop+0xc7c012cc>
    10d4:	0bf81000 	bleq	ffe050dc <__StackTop+0xc7d050dc>
    10d8:	00021000 	andeq	r1, r2, r0
    10dc:	0bf8247d 	bleq	ffe0a2d8 <__StackTop+0xc7d0a2d8>
    10e0:	0bfa1000 	bleq	ffe850e8 <__StackTop+0xc7d850e8>
    10e4:	00021000 	andeq	r1, r2, r0
    10e8:	0bfa2c7d 	bleq	ffe8c2e4 <__StackTop+0xc7d8c2e4>
    10ec:	0e441000 	cdpeq	0, 4, cr1, cr4, cr0, {0}
    10f0:	00031000 	andeq	r1, r3, r0
    10f4:	4400f07d 	strmi	pc, [r0], #-125	; 0xffffff83
    10f8:	4810000e 	ldmdami	r0, {r1, r2, r3}
    10fc:	0210000e 	andseq	r0, r0, #14
    1100:	482c7d00 	stmdami	ip!, {r8, sl, fp, ip, sp, lr}
    1104:	4c10000e 	ldcmi	0, cr0, [r0], {14}
    1108:	0210000e 	andseq	r0, r0, #14
    110c:	4c247d00 	stcmi	13, cr7, [r4], #-0
    1110:	da10000e 	ble	401150 <__RAM_SIZE+0x301150>
    1114:	0310000f 	tsteq	r0, #15
    1118:	00f07d00 	rscseq	r7, r0, r0, lsl #26
	...
    1128:	10000bf0 	strdne	r0, [r0], -r0	; <UNPREDICTABLE>
    112c:	10000c08 	andne	r0, r0, r8, lsl #24
    1130:	08500001 	ldmdaeq	r0, {r0}^
    1134:	da10000c 	ble	40116c <__RAM_SIZE+0x30116c>
    1138:	0110000f 	tsteq	r0, pc
    113c:	00005a00 	andeq	r5, r0, r0, lsl #20
	...
    1148:	0bf00000 	bleq	ffc01150 <__StackTop+0xc7b01150>
    114c:	0c0a1000 	stceq	0, cr1, [sl], {-0}
    1150:	00011000 	andeq	r1, r1, r0
    1154:	000c0a51 	andeq	r0, ip, r1, asr sl
    1158:	000fda10 	andeq	sp, pc, r0, lsl sl	; <UNPREDICTABLE>
    115c:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
	...
    117c:	0bf00000 	bleq	ffc01184 <__StackTop+0xc7b01184>
    1180:	0c061000 	stceq	0, cr1, [r6], {-0}
    1184:	00011000 	andeq	r1, r1, r0
    1188:	000c0652 	andeq	r0, ip, r2, asr r6
    118c:	000e4210 	andeq	r4, lr, r0, lsl r2
    1190:	5b000110 	blpl	15d8 <__HEAP_SIZE+0x5d8>
    1194:	10000e4c 	andne	r0, r0, ip, asr #28
    1198:	10000f54 	andne	r0, r0, r4, asr pc
    119c:	545b0001 	ldrbpl	r0, [fp], #-1
    11a0:	6a10000f 	bvs	4011e4 <__RAM_SIZE+0x3011e4>
    11a4:	0110000f 	tsteq	r0, pc
    11a8:	0f6a5000 	svceq	0x006a5000
    11ac:	0f9e1000 	svceq	0x009e1000
    11b0:	00011000 	andeq	r1, r1, r0
    11b4:	000f9e58 	andeq	r9, pc, r8, asr lr	; <UNPREDICTABLE>
    11b8:	000fac10 	andeq	sl, pc, r0, lsl ip	; <UNPREDICTABLE>
    11bc:	50000110 	andpl	r0, r0, r0, lsl r1
    11c0:	10000fac 	andne	r0, r0, ip, lsr #31
    11c4:	10000fbc 			; <UNDEFINED> instruction: 0x10000fbc
    11c8:	bc5b0001 	mrrclt	0, 0, r0, fp, cr1
    11cc:	c210000f 	andsgt	r0, r0, #15
    11d0:	0110000f 	tsteq	r0, pc
    11d4:	0fc25000 	svceq	0x00c25000
    11d8:	0fc41000 	svceq	0x00c41000
    11dc:	00011000 	andeq	r1, r1, r0
    11e0:	000fc452 	andeq	ip, pc, r2, asr r4	; <UNPREDICTABLE>
    11e4:	000fce10 	andeq	ip, pc, r0, lsl lr	; <UNPREDICTABLE>
    11e8:	56000110 			; <UNDEFINED> instruction: 0x56000110
    11ec:	10000fce 	andne	r0, r0, lr, asr #31
    11f0:	10000fda 	ldrdne	r0, [r0], -sl
    11f4:	00520001 	subseq	r0, r2, r1
	...
    1200:	f0000000 			; <UNDEFINED> instruction: 0xf0000000
    1204:	0d10000b 	ldceq	0, cr0, [r0, #-44]	; 0xffffffd4
    1208:	0110000c 	tsteq	r0, ip
    120c:	0c0d5300 	stceq	3, cr5, [sp], {-0}
    1210:	0fda1000 	svceq	0x00da1000
    1214:	00011000 	andeq	r1, r1, r0
    1218:	00000055 	andeq	r0, r0, r5, asr r0
	...
    122c:	000bf000 	andeq	pc, fp, r0
    1230:	000c5810 	andeq	r5, ip, r0, lsl r8
    1234:	91000210 	tstls	r0, r0, lsl r2
    1238:	000c5800 	andeq	r5, ip, r0, lsl #16
    123c:	000e2210 	andeq	r2, lr, r0, lsl r2
    1240:	91000310 	tstls	r0, r0, lsl r3
    1244:	0e227fa8 	cdpeq	15, 2, cr7, cr2, cr8, {5}
    1248:	0e421000 	cdpeq	0, 4, cr1, cr2, cr0, {0}
    124c:	00021000 	andeq	r1, r2, r0
    1250:	0e4c0091 	mcreq	0, 2, r0, cr12, cr1, {4}
    1254:	0e601000 	cdpeq	0, 6, cr1, cr0, cr0, {0}
    1258:	00021000 	andeq	r1, r2, r0
    125c:	0e600091 	mcreq	0, 3, r0, cr0, cr1, {4}
    1260:	0f301000 	svceq	0x00301000
    1264:	00031000 	andeq	r1, r3, r0
    1268:	ac7fa891 	ldclge	8, cr10, [pc], #-580	; 102c <__HEAP_SIZE+0x2c>
    126c:	ba10000f 	blt	4012b0 <__RAM_SIZE+0x3012b0>
    1270:	0310000f 	tsteq	r0, #15
    1274:	7fa89100 	svcvc	0x00a89100
	...
    128c:	10000bf0 	strdne	r0, [r0], -r0	; <UNPREDICTABLE>
    1290:	10000c66 	andne	r0, r0, r6, ror #24
    1294:	08910002 	ldmeq	r1, {r1}
    1298:	10000c66 	andne	r0, r0, r6, ror #24
    129c:	10000e20 	andne	r0, r0, r0, lsr #28
    12a0:	08910002 	ldmeq	r1, {r1}
    12a4:	10000e20 	andne	r0, r0, r0, lsr #28
    12a8:	10000e22 	andne	r0, r0, r2, lsr #28
    12ac:	22530001 	subscs	r0, r3, #1
    12b0:	9410000e 	ldrls	r0, [r0], #-14
    12b4:	0210000e 	andseq	r0, r0, #14
    12b8:	94089100 	strls	r9, [r8], #-256	; 0xffffff00
    12bc:	fc10000e 	ldc2	0, cr0, [r0], {14}
    12c0:	0110000e 	tsteq	r0, lr
    12c4:	0efc5300 	cdpeq	3, 15, cr5, cr12, cr0, {0}
    12c8:	0fda1000 	svceq	0x00da1000
    12cc:	00021000 	andeq	r1, r2, r0
    12d0:	00000891 	muleq	r0, r1, r8
	...
    12dc:	0bf00000 	bleq	ffc012e4 <__StackTop+0xc7b012e4>
    12e0:	0e4c1000 	cdpeq	0, 4, cr1, cr12, cr0, {0}
    12e4:	00021000 	andeq	r1, r2, r0
    12e8:	0e4c0c91 	mcreq	12, 2, r0, cr12, cr1, {4}
    12ec:	0fda1000 	svceq	0x00da1000
    12f0:	00021000 	andeq	r1, r2, r0
    12f4:	00000c91 	muleq	r0, r1, ip
	...
    1304:	0bf00000 	bleq	ffc0130c <__StackTop+0xc7b0130c>
    1308:	0e4c1000 	cdpeq	0, 4, cr1, cr12, cr0, {0}
    130c:	00021000 	andeq	r1, r2, r0
    1310:	0e4c1091 	mcreq	0, 2, r1, cr12, cr1, {4}
    1314:	0e721000 	cdpeq	0, 7, cr1, cr2, cr0, {0}
    1318:	00021000 	andeq	r1, r2, r0
    131c:	0e721091 	mrceq	0, 3, r1, cr2, cr1, {4}
    1320:	0e761000 	cdpeq	0, 7, cr1, cr6, cr0, {0}
    1324:	00011000 	andeq	r1, r1, r0
    1328:	000e7653 	andeq	r7, lr, r3, asr r6
    132c:	000fda10 	andeq	sp, pc, r0, lsl sl	; <UNPREDICTABLE>
    1330:	91000210 	tstls	r0, r0, lsl r2
    1334:	00000010 	andeq	r0, r0, r0, lsl r0
    1338:	00000000 	andeq	r0, r0, r0
    133c:	00000100 	andeq	r0, r0, r0, lsl #2
    1340:	000c3e00 	andeq	r3, ip, r0, lsl #28
    1344:	000e2210 	andeq	r2, lr, r0, lsl r2
    1348:	91001210 	tstls	r0, r0, lsl r2
    134c:	2908f600 	stmdbcs	r8, {r9, sl, ip, sp, lr, pc}
    1350:	000829f4 	strdeq	r2, [r8], -r4
    1354:	00000000 	andeq	r0, r0, r0
    1358:	2d000000 	stccs	0, cr0, [r0, #-0]
    135c:	000e4c9f 	muleq	lr, pc, ip	; <UNPREDICTABLE>
    1360:	000fda10 	andeq	sp, pc, r0, lsl sl	; <UNPREDICTABLE>
    1364:	91001210 	tstls	r0, r0, lsl r2
    1368:	2908f600 	stmdbcs	r8, {r9, sl, ip, sp, lr, pc}
    136c:	000829f4 	strdeq	r2, [r8], -r4
    1370:	00000000 	andeq	r0, r0, r0
    1374:	2d000000 	stccs	0, cr0, [r0, #-0]
    1378:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    137c:	00000000 	andeq	r0, r0, r0
    1380:	01000000 	mrseq	r0, (UNDEF: 0)
    1384:	000e4200 	andeq	r4, lr, r0, lsl #4
    1388:	000e4810 	andeq	r4, lr, r0, lsl r8
    138c:	90000810 	andls	r0, r0, r0, lsl r8
    1390:	90049350 	andls	r9, r4, r0, asr r3
    1394:	10049351 	andne	r9, r4, r1, asr r3
    1398:	da10000f 	ble	4013dc <__RAM_SIZE+0x3013dc>
    139c:	0810000f 	ldmdaeq	r0, {r0, r1, r2, r3}
    13a0:	93509000 	cmpls	r0, #0
    13a4:	93519004 	cmpls	r1, #4
    13a8:	00000004 	andeq	r0, r0, r4
	...
    13bc:	000c7000 	andeq	r7, ip, r0
    13c0:	000c8210 	andeq	r8, ip, r0, lsl r2
    13c4:	70000410 	andvc	r0, r0, r0, lsl r4
    13c8:	829f7881 	addshi	r7, pc, #8454144	; 0x810000
    13cc:	8510000c 	ldrhi	r0, [r0, #-12]
    13d0:	0110000c 	tsteq	r0, ip
    13d4:	0ce65000 	stcleq	0, cr5, [r6]
    13d8:	0cee1000 	stcleq	0, cr1, [lr]
    13dc:	00011000 	andeq	r1, r1, r0
    13e0:	000cee50 	andeq	lr, ip, r0, asr lr
    13e4:	000d2810 	andeq	r2, sp, r0, lsl r8
    13e8:	57000110 	smladpl	r0, r0, r1, r0
    13ec:	10000d28 	andne	r0, r0, r8, lsr #26
    13f0:	10000de4 	andne	r0, r0, r4, ror #27
    13f4:	81770004 	cmnhi	r7, r4
    13f8:	0e629f78 	mcreq	15, 3, r9, cr2, cr8, {3}
    13fc:	0e641000 	cdpeq	0, 6, cr1, cr4, cr0, {0}
    1400:	00041000 	andeq	r1, r4, r0
    1404:	9f788177 	svcls	0x00788177
	...
    1414:	00020000 	andeq	r0, r2, r0
    1418:	0cc60000 	stcleq	0, cr0, [r6], {0}
    141c:	0cc91000 	stcleq	0, cr1, [r9], {0}
    1420:	00011000 	andeq	r1, r1, r0
    1424:	000cc950 	andeq	ip, ip, r0, asr r9
    1428:	000e1c10 	andeq	r1, lr, r0, lsl ip
    142c:	56000110 			; <UNDEFINED> instruction: 0x56000110
    1430:	10000e62 	andne	r0, r0, r2, ror #28
    1434:	10000e6a 	andne	r0, r0, sl, ror #28
    1438:	72560001 	subsvc	r0, r6, #1
    143c:	7610000e 	ldrvc	r0, [r0], -lr
    1440:	0210000e 	andseq	r0, r0, #14
    1444:	769f3000 	ldrvc	r3, [pc], r0
    1448:	c210000e 	andsgt	r0, r0, #14
    144c:	0110000f 	tsteq	r0, pc
    1450:	00005600 	andeq	r5, r0, r0, lsl #12
	...
    145c:	10000d18 	andne	r0, r0, r8, lsl sp
    1460:	10000d58 	andne	r0, r0, r8, asr sp
    1464:	93580006 	cmpls	r8, #6
    1468:	04935904 	ldreq	r5, [r3], #2308	; 0x904
	...
    1478:	0d240000 	stceq	0, cr0, [r4, #-0]
    147c:	0d3e1000 	ldceq	0, cr1, [lr, #-0]
    1480:	00061000 	andeq	r1, r6, r0
    1484:	51049350 	tstpl	r4, r0, asr r3
    1488:	0d3e0493 	cfldrseq	mvf0, [lr, #-588]!	; 0xfffffdb4
    148c:	0e221000 	cdpeq	0, 2, cr1, cr2, cr0, {0}
    1490:	00031000 	andeq	r1, r3, r0
    1494:	627fb891 	rsbsvs	fp, pc, #9502720	; 0x910000
    1498:	da10000e 	ble	4014d8 <__RAM_SIZE+0x3014d8>
    149c:	0310000f 	tsteq	r0, #15
    14a0:	7fb89100 	svcvc	0x00b89100
	...
    14ac:	01000000 	mrseq	r0, (UNDEF: 0)
    14b0:	00000001 	andeq	r0, r0, r1
    14b4:	00000000 	andeq	r0, r0, r0
    14b8:	10000de4 	andne	r0, r0, r4, ror #27
    14bc:	10000e22 	andne	r0, r0, r2, lsr #28
    14c0:	66570001 	ldrbvs	r0, [r7], -r1
    14c4:	7210000e 	andsvc	r0, r0, #14
    14c8:	0110000e 	tsteq	r0, lr
    14cc:	0e725700 	cdpeq	7, 7, cr5, cr2, cr0, {0}
    14d0:	0e761000 	cdpeq	0, 7, cr1, cr6, cr0, {0}
    14d4:	00021000 	andeq	r1, r2, r0
    14d8:	0e769f30 	mrceq	15, 3, r9, cr6, cr0, {1}
    14dc:	0f821000 	svceq	0x00821000
    14e0:	00011000 	andeq	r1, r1, r0
    14e4:	000f8257 	andeq	r8, pc, r7, asr r2	; <UNPREDICTABLE>
    14e8:	000faa10 	andeq	sl, pc, r0, lsl sl	; <UNPREDICTABLE>
    14ec:	77000310 	smladvc	r0, r0, r3, r0
    14f0:	0fac9f01 	svceq	0x00ac9f01
    14f4:	0fc21000 	svceq	0x00c21000
    14f8:	00011000 	andeq	r1, r1, r0
    14fc:	00000057 	andeq	r0, r0, r7, asr r0
    1500:	00000000 	andeq	r0, r0, r0
    1504:	00000100 	andeq	r0, r0, r0, lsl #2
    1508:	00000000 	andeq	r0, r0, r0
    150c:	76000000 	strvc	r0, [r0], -r0
    1510:	8010000e 	andshi	r0, r0, lr
    1514:	0210000e 	andseq	r0, r0, #14
    1518:	800c9100 	andhi	r9, ip, r0, lsl #2
    151c:	8210000e 	andshi	r0, r0, #14
    1520:	0110000e 	tsteq	r0, lr
    1524:	0efc5800 	cdpeq	8, 15, cr5, cr12, cr0, {0}
    1528:	0f001000 	svceq	0x00001000
    152c:	00011000 	andeq	r1, r1, r0
    1530:	000f0053 	andeq	r0, pc, r3, asr r0	; <UNPREDICTABLE>
    1534:	000f6a10 	andeq	r6, pc, r0, lsl sl	; <UNPREDICTABLE>
    1538:	58000110 	stmdapl	r0, {r4, r8}
    153c:	10000fac 	andne	r0, r0, ip, lsr #31
    1540:	10000fc2 	andne	r0, r0, r2, asr #31
    1544:	00580001 	subseq	r0, r8, r1
    1548:	00000000 	andeq	r0, r0, r0
    154c:	01000000 	mrseq	r0, (UNDEF: 0)
    1550:	000f2000 	andeq	r2, pc, r0
    1554:	000fda10 	andeq	sp, pc, r0, lsl sl	; <UNPREDICTABLE>
    1558:	5b000110 	blpl	19a0 <__HEAP_SIZE+0x9a0>
	...
    1564:	10000fe0 	andne	r0, r0, r0, ror #31
    1568:	10000fe4 	andne	r0, r0, r4, ror #31
    156c:	007d0002 	rsbseq	r0, sp, r2
    1570:	10000fe4 	andne	r0, r0, r4, ror #31
    1574:	10000fe8 	andne	r0, r0, r8, ror #31
    1578:	247d0002 	ldrbtcs	r0, [sp], #-2
    157c:	10000fe8 	andne	r0, r0, r8, ror #31
    1580:	10000fea 	andne	r0, r0, sl, ror #31
    1584:	2c7d0002 	ldclcs	0, cr0, [sp], #-8
    1588:	10000fea 	andne	r0, r0, sl, ror #31
    158c:	10001304 	andne	r1, r0, r4, lsl #6
    1590:	807d0003 	rsbshi	r0, sp, r3
    1594:	00130401 	andseq	r0, r3, r1, lsl #8
    1598:	00130810 	andseq	r0, r3, r0, lsl r8
    159c:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    15a0:	0013082c 	andseq	r0, r3, ip, lsr #16
    15a4:	00130c10 	andseq	r0, r3, r0, lsl ip
    15a8:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    15ac:	00130c24 	andseq	r0, r3, r4, lsr #24
    15b0:	00137610 	andseq	r7, r3, r0, lsl r6
    15b4:	7d000310 	stcvc	3, cr0, [r0, #-64]	; 0xffffffc0
    15b8:	00000180 	andeq	r0, r0, r0, lsl #3
	...
    15c4:	0fe00000 	svceq	0x00e00000
    15c8:	0ffe1000 	svceq	0x00fe1000
    15cc:	00011000 	andeq	r1, r1, r0
    15d0:	000ffe50 	andeq	pc, pc, r0, asr lr	; <UNPREDICTABLE>
    15d4:	00137610 	andseq	r7, r3, r0, lsl r6
    15d8:	91000310 	tstls	r0, r0, lsl r3
    15dc:	00007f9c 	muleq	r0, ip, pc	; <UNPREDICTABLE>
	...
    15e8:	0fe00000 	svceq	0x00e00000
    15ec:	10001000 	andne	r1, r0, r0
    15f0:	00011000 	andeq	r1, r1, r0
    15f4:	00100051 	andseq	r0, r0, r1, asr r0
    15f8:	00137610 	andseq	r7, r3, r0, lsl r6
    15fc:	91000310 	tstls	r0, r0, lsl r3
    1600:	00007fa8 	andeq	r7, r0, r8, lsr #31
	...
    160c:	0fe00000 	svceq	0x00e00000
    1610:	0ffa1000 	svceq	0x00fa1000
    1614:	00011000 	andeq	r1, r1, r0
    1618:	000ffa52 	andeq	pc, pc, r2, asr sl	; <UNPREDICTABLE>
    161c:	00137610 	andseq	r7, r3, r0, lsl r6
    1620:	5a000110 	bpl	1a68 <__HEAP_SIZE+0xa68>
	...
    1630:	10000fe0 	andne	r0, r0, r0, ror #31
    1634:	10000ffc 	strdne	r0, [r0], -ip
    1638:	fc530001 	mrrc2	0, 0, r0, r3, cr1
    163c:	7610000f 	ldrvc	r0, [r0], -pc
    1640:	01100013 	tsteq	r0, r3, lsl r0
    1644:	00005b00 	andeq	r5, r0, r0, lsl #22
	...
    1658:	10000fe0 	andne	r0, r0, r0, ror #31
    165c:	10001066 	andne	r1, r0, r6, rrx
    1660:	00910002 	addseq	r0, r1, r2
    1664:	10001066 	andne	r1, r0, r6, rrx
    1668:	1000108a 	andne	r1, r0, sl, lsl #1
    166c:	93580006 	cmpls	r8, #6
    1670:	04935904 	ldreq	r5, [r3], #2308	; 0x904
    1674:	1000108a 	andne	r1, r0, sl, lsl #1
    1678:	10001122 	andne	r1, r0, r2, lsr #2
    167c:	00910002 	addseq	r0, r1, r2
    1680:	10001122 	andne	r1, r0, r2, lsr #2
    1684:	100011ba 			; <UNDEFINED> instruction: 0x100011ba
    1688:	93580006 	cmpls	r8, #6
    168c:	04935904 	ldreq	r5, [r3], #2308	; 0x904
    1690:	100011de 	ldrdne	r1, [r0], -lr
    1694:	1000125a 	andne	r1, r0, sl, asr r2
    1698:	93580006 	cmpls	r8, #6
    169c:	04935904 	ldreq	r5, [r3], #2308	; 0x904
	...
    16b0:	10000fe0 	andne	r0, r0, r0, ror #31
    16b4:	1000106e 	andne	r1, r0, lr, rrx
    16b8:	08910002 	ldmeq	r1, {r1}
    16bc:	10001070 	andne	r1, r0, r0, ror r0
    16c0:	1000108a 	andne	r1, r0, sl, lsl #1
    16c4:	8a550001 	bhi	15416d0 <__RAM_SIZE+0x14416d0>
    16c8:	2c100010 	ldccs	0, cr0, [r0], {16}
    16cc:	02100011 	andseq	r0, r0, #17
    16d0:	2c089100 	stfcsd	f1, [r8], {-0}
    16d4:	fa100011 	blx	401720 <__RAM_SIZE+0x301720>
    16d8:	01100011 	tsteq	r0, r1, lsl r0
    16dc:	00005500 	andeq	r5, r0, r0, lsl #10
	...
    16f0:	10000fe0 	andne	r0, r0, r0, ror #31
    16f4:	100012d0 	ldrdne	r1, [r0], -r0
    16f8:	0c910002 	ldceq	0, cr0, [r1], {2}
    16fc:	100012d0 	ldrdne	r1, [r0], -r0
    1700:	10001322 	andne	r1, r0, r2, lsr #6
    1704:	0c910002 	ldceq	0, cr0, [r1], {2}
    1708:	10001322 	andne	r1, r0, r2, lsr #6
    170c:	10001326 	andne	r1, r0, r6, lsr #6
    1710:	26530001 	ldrbcs	r0, [r3], -r1
    1714:	3e100013 	mrccc	0, 0, r0, cr0, cr3, {0}
    1718:	01100013 	tsteq	r0, r3, lsl r0
    171c:	133e5100 	teqne	lr, #0, 2
    1720:	13761000 	cmnne	r6, #0
    1724:	00021000 	andeq	r1, r2, r0
    1728:	00000c91 	muleq	r0, r1, ip
	...
    1734:	0fe00000 	svceq	0x00e00000
    1738:	130c1000 	movwne	r1, #49152	; 0xc000
    173c:	00021000 	andeq	r1, r2, r0
    1740:	130c1091 	movwne	r1, #49297	; 0xc091
    1744:	13761000 	cmnne	r6, #0
    1748:	00021000 	andeq	r1, r2, r0
    174c:	00001091 	muleq	r0, r1, r0
    1750:	00000000 	andeq	r0, r0, r0
    1754:	00020000 	andeq	r0, r2, r0
    1758:	00010100 	andeq	r0, r1, r0, lsl #2
	...
    1764:	00010100 	andeq	r0, r1, r0, lsl #2
    1768:	00010100 	andeq	r0, r1, r0, lsl #2
    176c:	00000000 	andeq	r0, r0, r0
    1770:	00010100 	andeq	r0, r1, r0, lsl #2
    1774:	01000000 	mrseq	r0, (UNDEF: 0)
    1778:	01000001 	tsteq	r0, r1
    177c:	01000001 	tsteq	r0, r1
    1780:	00000001 	andeq	r0, r0, r1
    1784:	10000ff8 	strdne	r0, [r0], -r8
    1788:	10001070 	andne	r1, r0, r0, ror r0
    178c:	9f300002 	svcls	0x00300002
    1790:	10001070 	andne	r1, r0, r0, ror r0
    1794:	10001078 	andne	r1, r0, r8, ror r0
    1798:	78540001 	ldmdavc	r4, {r0}^
    179c:	88100010 	ldmdahi	r0, {r4}
    17a0:	03100010 	tsteq	r0, #16
    17a4:	9f017400 	svcls	0x00017400
    17a8:	10001088 	andne	r1, r0, r8, lsl #1
    17ac:	1000108a 	andne	r1, r0, sl, lsl #1
    17b0:	8a540001 	bhi	15017bc <__RAM_SIZE+0x14017bc>
    17b4:	2c100010 	ldccs	0, cr0, [r0], {16}
    17b8:	02100011 	andseq	r0, r0, #17
    17bc:	2c9f3000 	ldccs	0, cr3, [pc], {0}
    17c0:	14100011 	ldrne	r0, [r0], #-17	; 0xffffffef
    17c4:	01100012 	tsteq	r0, r2, lsl r0
    17c8:	12145400 	andsne	r5, r4, #0, 8
    17cc:	122e1000 	eorne	r1, lr, #0
    17d0:	00011000 	andeq	r1, r1, r0
    17d4:	00122e52 	andseq	r2, r2, r2, asr lr
    17d8:	00123610 	andseq	r3, r2, r0, lsl r6
    17dc:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    17e0:	10001236 	andne	r1, r0, r6, lsr r2
    17e4:	10001246 	andne	r1, r0, r6, asr #4
    17e8:	01740003 	cmneq	r4, r3
    17ec:	0012469f 	mulseq	r2, pc, r6	; <UNPREDICTABLE>
    17f0:	00124c10 	andseq	r4, r2, r0, lsl ip
    17f4:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    17f8:	1000124c 	andne	r1, r0, ip, asr #4
    17fc:	1000125a 	andne	r1, r0, sl, asr r2
    1800:	01740003 	cmneq	r4, r3
    1804:	00125a9f 	mulseq	r2, pc, sl	; <UNPREDICTABLE>
    1808:	00127610 	andseq	r7, r2, r0, lsl r6
    180c:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    1810:	10001276 	andne	r1, r0, r6, ror r2
    1814:	100012c6 	andne	r1, r0, r6, asr #5
    1818:	c6510001 	ldrbgt	r0, [r1], -r1
    181c:	da100012 	ble	40186c <__RAM_SIZE+0x30186c>
    1820:	01100012 	tsteq	r0, r2, lsl r0
    1824:	12da5400 	sbcsne	r5, sl, #0, 8
    1828:	12e81000 	rscne	r1, r8, #0
    182c:	00031000 	andeq	r1, r3, r0
    1830:	e89f0174 	ldm	pc, {r2, r4, r5, r6, r8}	; <UNPREDICTABLE>
    1834:	02100012 	andseq	r0, r0, #18
    1838:	01100013 	tsteq	r0, r3, lsl r0
    183c:	130c5400 	movwne	r5, #50176	; 0xc400
    1840:	13261000 			; <UNDEFINED> instruction: 0x13261000
    1844:	00011000 	andeq	r1, r1, r0
    1848:	00132654 	andseq	r2, r3, r4, asr r6
    184c:	00133410 	andseq	r3, r3, r0, lsl r4
    1850:	74000310 	strvc	r0, [r0], #-784	; 0xfffffcf0
    1854:	13349f01 	teqne	r4, #1, 30
    1858:	134e1000 	movtne	r1, #57344	; 0xe000
    185c:	00011000 	andeq	r1, r1, r0
    1860:	00134e54 	andseq	r4, r3, r4, asr lr
    1864:	00135c10 	andseq	r5, r3, r0, lsl ip
    1868:	74000310 	strvc	r0, [r0], #-784	; 0xfffffcf0
    186c:	135c9f01 	cmpne	ip, #1, 30
    1870:	13661000 	cmnne	r6, #0
    1874:	00011000 	andeq	r1, r1, r0
    1878:	00136654 	andseq	r6, r3, r4, asr r6
    187c:	00137410 	andseq	r7, r3, r0, lsl r4
    1880:	74000310 	strvc	r0, [r0], #-784	; 0xfffffcf0
    1884:	13749f01 	cmnne	r4, #1, 30
    1888:	13761000 	cmnne	r6, #0
    188c:	00011000 	andeq	r1, r1, r0
    1890:	00000054 	andeq	r0, r0, r4, asr r0
    1894:	00000000 	andeq	r0, r0, r0
    1898:	00000300 	andeq	r0, r0, r0, lsl #6
    189c:	00000000 	andeq	r0, r0, r0
    18a0:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
    18a4:	7e10000f 	cdpvc	0, 1, cr0, cr0, cr15, {0}
    18a8:	0a100011 	beq	4018f4 <__RAM_SIZE+0x3018f4>
    18ac:	00089e00 	andeq	r9, r8, r0, lsl #28
    18b0:	00000000 	andeq	r0, r0, r0
    18b4:	7e000000 	cdpvc	0, 0, cr0, cr0, cr0, {0}
    18b8:	80100011 	andshi	r0, r0, r1, lsl r0
    18bc:	06100011 			; <UNDEFINED> instruction: 0x06100011
    18c0:	04935200 	ldreq	r5, [r3], #512	; 0x200
    18c4:	80049353 	andhi	r9, r4, r3, asr r3
    18c8:	ba100011 	blt	401914 <__RAM_SIZE+0x301914>
    18cc:	03100011 	tsteq	r0, #17
    18d0:	7fa09100 	svcvc	0x00a09100
    18d4:	100011ba 			; <UNDEFINED> instruction: 0x100011ba
    18d8:	100011de 	ldrdne	r1, [r0], -lr
    18dc:	93570006 	cmpls	r7, #6
    18e0:	04935804 	ldreq	r5, [r3], #2052	; 0x804
    18e4:	100011de 	ldrdne	r1, [r0], -lr
    18e8:	1000125a 	andne	r1, r0, sl, asr r2
    18ec:	a0910003 	addsge	r0, r1, r3
    18f0:	0000007f 	andeq	r0, r0, pc, ror r0
    18f4:	00000000 	andeq	r0, r0, r0
    18f8:	00000100 	andeq	r0, r0, r0, lsl #2
    18fc:	01010000 	mrseq	r0, (UNDEF: 1)
    1900:	00000000 	andeq	r0, r0, r0
    1904:	00105200 	andseq	r5, r0, r0, lsl #4
    1908:	00106610 	andseq	r6, r0, r0, lsl r6
    190c:	30000210 	andcc	r0, r0, r0, lsl r2
    1910:	0010669f 	mulseq	r0, pc, r6	; <UNPREDICTABLE>
    1914:	00108a10 	andseq	r8, r0, r0, lsl sl
    1918:	91000310 	tstls	r0, r0, lsl r3
    191c:	11127fac 	tstne	r2, ip, lsr #31
    1920:	11121000 	tstne	r2, r0
    1924:	00021000 	andeq	r1, r2, r0
    1928:	11129f30 	tstne	r2, r0, lsr pc
    192c:	11281000 			; <UNDEFINED> instruction: 0x11281000
    1930:	00021000 	andeq	r1, r2, r0
    1934:	11289f31 			; <UNDEFINED> instruction: 0x11289f31
    1938:	13021000 	movwne	r1, #8192	; 0x2000
    193c:	00031000 	andeq	r1, r3, r0
    1940:	0c7fac91 	ldcleq	12, cr10, [pc], #-580	; 1704 <__HEAP_SIZE+0x704>
    1944:	76100013 			; <UNDEFINED> instruction: 0x76100013
    1948:	03100013 	tsteq	r0, #19
    194c:	7fac9100 	svcvc	0x00ac9100
	...
    1960:	11360000 	teqne	r6, r0
    1964:	11391000 	teqne	r9, r0
    1968:	00011000 	andeq	r1, r1, r0
    196c:	00113950 	andseq	r3, r1, r0, asr r9
    1970:	00128610 	andseq	r8, r2, r0, lsl r6
    1974:	56000110 			; <UNDEFINED> instruction: 0x56000110
    1978:	10001286 	andne	r1, r0, r6, lsl #5
    197c:	100012c6 	andne	r1, r0, r6, asr #5
    1980:	c6520001 	ldrbgt	r0, [r2], -r1
    1984:	02100012 	andseq	r0, r0, #18
    1988:	01100013 	tsteq	r0, r3, lsl r0
    198c:	130c5600 	movwne	r5, #50688	; 0xc600
    1990:	13761000 	cmnne	r6, #0
    1994:	00011000 	andeq	r1, r1, r0
    1998:	00000056 	andeq	r0, r0, r6, asr r0
	...
    19a4:	00116000 	andseq	r6, r1, r0
    19a8:	00116310 	andseq	r6, r1, r0, lsl r3
    19ac:	52000610 	andpl	r0, r0, #16, 12	; 0x1000000
    19b0:	93530493 	cmpls	r3, #-1828716544	; 0x93000000
    19b4:	00116304 	andseq	r6, r1, r4, lsl #6
    19b8:	00117e10 	andseq	r7, r1, r0, lsl lr
    19bc:	91000310 	tstls	r0, r0, lsl r3
    19c0:	00007fa0 	andeq	r7, r0, r0, lsr #31
	...
    19cc:	00010100 	andeq	r0, r1, r0, lsl #2
    19d0:	01000000 	mrseq	r0, (UNDEF: 0)
    19d4:	11660001 	cmnne	r6, r1
    19d8:	11691000 	cmnne	r9, r0
    19dc:	00011000 	andeq	r1, r1, r0
    19e0:	00116950 	andseq	r6, r1, r0, asr r9
    19e4:	00119e10 	andseq	r9, r1, r0, lsl lr
    19e8:	57000110 	smladpl	r0, r0, r1, r0
    19ec:	1000119e 	mulne	r0, lr, r1
    19f0:	100011a2 	andne	r1, r0, r2, lsr #3
    19f4:	9f300002 	svcls	0x00300002
    19f8:	100011a2 	andne	r1, r0, r2, lsr #3
    19fc:	100011b8 			; <UNDEFINED> instruction: 0x100011b8
    1a00:	de570001 	cdple	0, 5, cr0, cr7, cr1, {0}
    1a04:	22100011 	andscs	r0, r0, #17
    1a08:	01100012 	tsteq	r0, r2, lsl r0
    1a0c:	12225700 	eorne	r5, r2, #0, 14
    1a10:	122e1000 	eorne	r1, lr, #0
    1a14:	00011000 	andeq	r1, r1, r0
    1a18:	00000051 	andeq	r0, r0, r1, asr r0
	...
    1a24:	0011fa00 	andseq	pc, r1, r0, lsl #20
    1a28:	00123410 	andseq	r3, r2, r0, lsl r4
    1a2c:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
    1a30:	10001234 	andne	r1, r0, r4, lsr r2
    1a34:	10001248 	andne	r1, r0, r8, asr #4
    1a38:	00530001 	subseq	r0, r3, r1
    1a3c:	00000000 	andeq	r0, r0, r0
    1a40:	24000000 	strcs	r0, [r0], #-0
    1a44:	2810000b 	ldmdacs	r0, {r0, r1, r3}
    1a48:	0210000b 	andseq	r0, r0, #11
    1a4c:	28007d00 	stmdacs	r0, {r8, sl, fp, ip, sp, lr}
    1a50:	2a10000b 	bcs	401a84 <__RAM_SIZE+0x301a84>
    1a54:	0210000b 	andseq	r0, r0, #11
    1a58:	2a247d00 	bcs	920e60 <__RAM_SIZE+0x820e60>
    1a5c:	e610000b 	ldr	r0, [r0], -fp
    1a60:	0310000b 	tsteq	r0, #11
    1a64:	00f87d00 	rscseq	r7, r8, r0, lsl #26
    1a68:	10000be6 	andne	r0, r0, r6, ror #23
    1a6c:	10000bea 	andne	r0, r0, sl, ror #23
    1a70:	247d0002 	ldrbtcs	r0, [sp], #-2
	...
    1a84:	10000b24 	andne	r0, r0, r4, lsr #22
    1a88:	10000b5a 	andne	r0, r0, sl, asr fp
    1a8c:	5a500001 	bpl	1401a98 <__RAM_SIZE+0x1301a98>
    1a90:	b810000b 	ldmdalt	r0, {r0, r1, r3}
    1a94:	0310000b 	tsteq	r0, #11
    1a98:	7fac9100 	svcvc	0x00ac9100
    1a9c:	10000bb8 			; <UNDEFINED> instruction: 0x10000bb8
    1aa0:	10000bbc 			; <UNDEFINED> instruction: 0x10000bbc
    1aa4:	bc500001 	mrrclt	0, 0, r0, r0, cr1	; <UNPREDICTABLE>
    1aa8:	ea10000b 	b	401adc <__RAM_SIZE+0x301adc>
    1aac:	0310000b 	tsteq	r0, #11
    1ab0:	7fac9100 	svcvc	0x00ac9100
	...
    1ac4:	10000b24 	andne	r0, r0, r4, lsr #22
    1ac8:	10000b5a 	andne	r0, r0, sl, asr fp
    1acc:	5a510001 	bpl	1441ad8 <__RAM_SIZE+0x1341ad8>
    1ad0:	b810000b 	ldmdalt	r0, {r0, r1, r3}
    1ad4:	0310000b 	tsteq	r0, #11
    1ad8:	7fb09100 	svcvc	0x00b09100
    1adc:	10000bb8 			; <UNDEFINED> instruction: 0x10000bb8
    1ae0:	10000bbc 			; <UNDEFINED> instruction: 0x10000bbc
    1ae4:	bc510001 	mrrclt	0, 0, r0, r1, cr1
    1ae8:	ea10000b 	b	401b1c <__RAM_SIZE+0x301b1c>
    1aec:	0310000b 	tsteq	r0, #11
    1af0:	7fb09100 	svcvc	0x00b09100
	...
    1b04:	10000b24 	andne	r0, r0, r4, lsr #22
    1b08:	10000b5a 	andne	r0, r0, sl, asr fp
    1b0c:	5a520001 	bpl	1481b18 <__RAM_SIZE+0x1381b18>
    1b10:	b810000b 	ldmdalt	r0, {r0, r1, r3}
    1b14:	0310000b 	tsteq	r0, #11
    1b18:	7fb49100 	svcvc	0x00b49100
    1b1c:	10000bb8 			; <UNDEFINED> instruction: 0x10000bb8
    1b20:	10000bbc 			; <UNDEFINED> instruction: 0x10000bbc
    1b24:	bc520001 	mrrclt	0, 0, r0, r2, cr1
    1b28:	ea10000b 	b	401b5c <__RAM_SIZE+0x301b5c>
    1b2c:	0310000b 	tsteq	r0, #11
    1b30:	7fb49100 	svcvc	0x00b49100
	...
    1b40:	10000b24 	andne	r0, r0, r4, lsr #22
    1b44:	10000b44 	andne	r0, r0, r4, asr #22
    1b48:	44530001 	ldrbmi	r0, [r3], #-1
    1b4c:	ea10000b 	b	401b80 <__RAM_SIZE+0x301b80>
    1b50:	0110000b 	tsteq	r0, fp
    1b54:	00005b00 	andeq	r5, r0, r0, lsl #22
	...
    1b68:	10000b24 	andne	r0, r0, r4, lsr #22
    1b6c:	10000b5a 	andne	r0, r0, sl, asr fp
    1b70:	00910002 	addseq	r0, r1, r2
    1b74:	10000b5a 	andne	r0, r0, sl, asr fp
    1b78:	10000b7c 	andne	r0, r0, ip, ror fp
    1b7c:	93550006 	cmpls	r5, #6
    1b80:	04935604 	ldreq	r5, [r3], #1540	; 0x604
    1b84:	10000b7c 	andne	r0, r0, ip, ror fp
    1b88:	10000b90 	mulne	r0, r0, fp
    1b8c:	93500006 	cmpls	r0, #6
    1b90:	04935104 	ldreq	r5, [r3], #260	; 0x104
    1b94:	10000b90 	mulne	r0, r0, fp
    1b98:	10000bb8 			; <UNDEFINED> instruction: 0x10000bb8
    1b9c:	93550006 	cmpls	r5, #6
    1ba0:	04935604 	ldreq	r5, [r3], #1540	; 0x604
    1ba4:	10000bb8 			; <UNDEFINED> instruction: 0x10000bb8
    1ba8:	10000bbc 			; <UNDEFINED> instruction: 0x10000bbc
    1bac:	00910002 	addseq	r0, r1, r2
	...
    1bbc:	10000b24 	andne	r0, r0, r4, lsr #22
    1bc0:	10000b4a 	andne	r0, r0, sl, asr #22
    1bc4:	20910002 	addscs	r0, r1, r2
    1bc8:	10000b4a 	andne	r0, r0, sl, asr #22
    1bcc:	10000bea 	andne	r0, r0, sl, ror #23
    1bd0:	005a0001 	subseq	r0, sl, r1
    1bd4:	00000000 	andeq	r0, r0, r0
    1bd8:	02000000 	andeq	r0, r0, #0
	...
    1be4:	40000000 	andmi	r0, r0, r0
    1be8:	5a10000b 	bpl	401c1c <__RAM_SIZE+0x301c1c>
    1bec:	0210000b 	andseq	r0, r0, #11
    1bf0:	5a9f3000 	bpl	fe7cdbf8 <__StackTop+0xc66cdbf8>
    1bf4:	6410000b 	ldrvs	r0, [r0], #-11
    1bf8:	0110000b 	tsteq	r0, fp
    1bfc:	0b645400 	bleq	1916c04 <__RAM_SIZE+0x1816c04>
    1c00:	0b901000 	bleq	fe405c08 <__StackTop+0xc6305c08>
    1c04:	00011000 	andeq	r1, r1, r0
    1c08:	000b9059 	andeq	r9, fp, r9, asr r0
    1c0c:	000bb810 	andeq	fp, fp, r0, lsl r8
    1c10:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    1c14:	10000bb8 			; <UNDEFINED> instruction: 0x10000bb8
    1c18:	10000bbc 			; <UNDEFINED> instruction: 0x10000bbc
    1c1c:	9f300002 	svcls	0x00300002
    1c20:	10000bbc 			; <UNDEFINED> instruction: 0x10000bbc
    1c24:	10000bea 	andne	r0, r0, sl, ror #23
    1c28:	00590001 	subseq	r0, r9, r1
	...
    1c34:	5a000000 	bpl	1c3c <__HEAP_SIZE+0xc3c>
    1c38:	6810000b 	ldmdavs	r0, {r0, r1, r3}
    1c3c:	0110000b 	tsteq	r0, fp
    1c40:	0b9e5300 	bleq	fe796848 <__StackTop+0xc6696848>
    1c44:	0bb81000 	bleq	fee05c4c <__StackTop+0xc6d05c4c>
    1c48:	00011000 	andeq	r1, r1, r0
    1c4c:	00000053 	andeq	r0, r0, r3, asr r0
    1c50:	00000000 	andeq	r0, r0, r0
    1c54:	000a9000 	andeq	r9, sl, r0
    1c58:	000a9210 	andeq	r9, sl, r0, lsl r2
    1c5c:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    1c60:	000a9200 	andeq	r9, sl, r0, lsl #4
    1c64:	000a9410 	andeq	r9, sl, r0, lsl r4
    1c68:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    1c6c:	000a9414 	andeq	r9, sl, r4, lsl r4
    1c70:	000b2210 	andeq	r2, fp, r0, lsl r2
    1c74:	7d000310 	stcvc	3, cr0, [r0, #-64]	; 0xffffffc0
    1c78:	0b2200d8 	bleq	881fe0 <__RAM_SIZE+0x781fe0>
    1c7c:	0b241000 	bleq	905c84 <__RAM_SIZE+0x805c84>
    1c80:	00021000 	andeq	r1, r2, r0
    1c84:	0000147d 	andeq	r1, r0, sp, ror r4
	...
    1c90:	0a900000 	beq	fe401c98 <__StackTop+0xc6301c98>
    1c94:	0b1f1000 	bleq	7c5c9c <__RAM_SIZE+0x6c5c9c>
    1c98:	00011000 	andeq	r1, r1, r0
    1c9c:	000b1f50 	andeq	r1, fp, r0, asr pc
    1ca0:	000b2410 	andeq	r2, fp, r0, lsl r4
    1ca4:	f3000410 	vqshl.u8	d0, d0, d0
    1ca8:	009f5001 	addseq	r5, pc, r1
	...
    1cb4:	90000000 	andls	r0, r0, r0
    1cb8:	1f10000a 	svcne	0x0010000a
    1cbc:	0110000b 	tsteq	r0, fp
    1cc0:	0b1f5100 	bleq	7d60c8 <__RAM_SIZE+0x6d60c8>
    1cc4:	0b241000 	bleq	905ccc <__RAM_SIZE+0x805ccc>
    1cc8:	00041000 	andeq	r1, r4, r0
    1ccc:	9f5101f3 	svcls	0x005101f3
	...
    1cdc:	10000a90 	mulne	r0, r0, sl
    1ce0:	10000b1f 	andne	r0, r0, pc, lsl fp
    1ce4:	1f520001 	svcne	0x00520001
    1ce8:	2410000b 	ldrcs	r0, [r0], #-11
    1cec:	0410000b 	ldreq	r0, [r0], #-11
    1cf0:	5201f300 	andpl	pc, r1, #0, 6
    1cf4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    1d00:	000a9000 	andeq	r9, sl, r0
    1d04:	000b1f10 	andeq	r1, fp, r0, lsl pc
    1d08:	53000110 	movwpl	r0, #272	; 0x110
    1d0c:	10000b1f 	andne	r0, r0, pc, lsl fp
    1d10:	10000b24 	andne	r0, r0, r4, lsr #22
    1d14:	01f30004 	mvnseq	r0, r4
    1d18:	00009f53 	andeq	r9, r0, r3, asr pc
	...
    1d2c:	10000a90 	mulne	r0, r0, sl
    1d30:	10000aae 	andne	r0, r0, lr, lsr #21
    1d34:	00910002 	addseq	r0, r1, r2
    1d38:	10000aae 	andne	r0, r0, lr, lsr #21
    1d3c:	10000ac8 	andne	r0, r0, r8, asr #21
    1d40:	c8540001 	ldmdagt	r4, {r0}^
    1d44:	d410000a 	ldrle	r0, [r0], #-10
    1d48:	0110000a 	tsteq	r0, sl
    1d4c:	0ad45c00 	beq	ff518d54 <__StackTop+0xc7418d54>
    1d50:	0b021000 	bleq	85d58 <__HEAP_SIZE+0x84d58>
    1d54:	00011000 	andeq	r1, r1, r0
    1d58:	000b0254 	andeq	r0, fp, r4, asr r2
    1d5c:	000b0410 	andeq	r0, fp, r0, lsl r4
    1d60:	91000210 	tstls	r0, r0, lsl r2
	...
    1d70:	000a9000 	andeq	r9, sl, r0
    1d74:	000aa010 	andeq	sl, sl, r0, lsl r0
    1d78:	91000210 	tstls	r0, r0, lsl r2
    1d7c:	000aa014 	andeq	sl, sl, r4, lsl r0
    1d80:	000b2410 	andeq	r2, fp, r0, lsl r4
    1d84:	56000110 			; <UNDEFINED> instruction: 0x56000110
	...
    1d90:	00000002 	andeq	r0, r0, r2
	...
    1d9c:	10000a9a 	mulne	r0, sl, sl
    1da0:	10000aae 	andne	r0, r0, lr, lsr #21
    1da4:	9f300002 	svcls	0x00300002
    1da8:	10000aae 	andne	r0, r0, lr, lsr #21
    1dac:	10000aba 			; <UNDEFINED> instruction: 0x10000aba
    1db0:	ba5e0001 	blt	1781dbc <__RAM_SIZE+0x1681dbc>
    1db4:	d410000a 	ldrle	r0, [r0], #-10
    1db8:	0110000a 	tsteq	r0, sl
    1dbc:	0ad45700 	beq	ff5179c4 <__StackTop+0xc74179c4>
    1dc0:	0b021000 	bleq	85dc8 <__HEAP_SIZE+0x84dc8>
    1dc4:	00011000 	andeq	r1, r1, r0
    1dc8:	000b025e 	andeq	r0, fp, lr, asr r2
    1dcc:	000b0410 	andeq	r0, fp, r0, lsl r4
    1dd0:	30000210 	andcc	r0, r0, r0, lsl r2
    1dd4:	000b049f 	muleq	fp, pc, r4	; <UNPREDICTABLE>
    1dd8:	000b2410 	andeq	r2, fp, r0, lsl r4
    1ddc:	57000110 	smladpl	r0, r0, r1, r0
	...
    1df4:	10000aae 	andne	r0, r0, lr, lsr #21
    1df8:	10000ab2 			; <UNDEFINED> instruction: 0x10000ab2
    1dfc:	b25c0001 	subslt	r0, ip, #1
    1e00:	b610000a 	ldrlt	r0, [r0], -sl
    1e04:	0310000a 	tsteq	r0, #10
    1e08:	9f507c00 	svcls	0x00507c00
    1e0c:	10000ab6 			; <UNDEFINED> instruction: 0x10000ab6
    1e10:	10000ad4 	ldrdne	r0, [r0], -r4
    1e14:	00740012 	rsbseq	r0, r4, r2, lsl r0
    1e18:	30f70074 	rscscc	r0, r7, r4, ror r0
    1e1c:	30f70075 	rscscc	r0, r7, r5, ror r0
    1e20:	7500f71b 	strvc	pc, [r0, #-1819]	; 0xfffff8e5
    1e24:	9f1c1e00 	svcls	0x001c1e00
    1e28:	10000ae0 	andne	r0, r0, r0, ror #21
    1e2c:	10000af0 	strdne	r0, [r0], -r0	; <UNPREDICTABLE>
    1e30:	f05c0001 			; <UNDEFINED> instruction: 0xf05c0001
    1e34:	fe10000a 	cdp2	0, 1, cr0, cr0, cr10, {0}
    1e38:	1210000a 	andsne	r0, r0, #10
    1e3c:	74007400 	strvc	r7, [r0], #-1024	; 0xfffffc00
    1e40:	7530f700 	ldrvc	pc, [r0, #-1792]!	; 0xfffff900
    1e44:	1b30f700 	blne	c3fa4c <__RAM_SIZE+0xb3fa4c>
    1e48:	007500f7 	ldrshteq	r0, [r5], #-7
    1e4c:	fe9f1c1e 	mrc2	12, 4, r1, cr15, cr14, {0}
    1e50:	0210000a 	andseq	r0, r0, #10
    1e54:	0110000b 	tsteq	r0, fp
    1e58:	00005c00 	andeq	r5, r0, r0, lsl #24
    1e5c:	00000000 	andeq	r0, r0, r0
    1e60:	09580000 	ldmdbeq	r8, {}^	; <UNPREDICTABLE>
    1e64:	095c1000 	ldmdbeq	ip, {ip}^
    1e68:	00021000 	andeq	r1, r2, r0
    1e6c:	095c007d 	ldmdbeq	ip, {r0, r2, r3, r4, r5, r6}^
    1e70:	095e1000 	ldmdbeq	lr, {ip}^
    1e74:	00021000 	andeq	r1, r2, r0
    1e78:	095e1c7d 	ldmdbeq	lr, {r0, r2, r3, r4, r5, r6, sl, fp, ip}^
    1e7c:	0a141000 	beq	505e84 <__RAM_SIZE+0x405e84>
    1e80:	00021000 	andeq	r1, r2, r0
    1e84:	0a14307d 	beq	50e080 <__RAM_SIZE+0x40e080>
    1e88:	0a181000 	beq	605e90 <__RAM_SIZE+0x505e90>
    1e8c:	00021000 	andeq	r1, r2, r0
    1e90:	0a181c7d 	beq	60908c <__RAM_SIZE+0x50908c>
    1e94:	0a901000 	beq	fe405e9c <__StackTop+0xc6305e9c>
    1e98:	00021000 	andeq	r1, r2, r0
    1e9c:	0000307d 	andeq	r3, r0, sp, ror r0
	...
    1eac:	10000958 	andne	r0, r0, r8, asr r9
    1eb0:	10000a11 	andne	r0, r0, r1, lsl sl
    1eb4:	11500001 	cmpne	r0, r1
    1eb8:	1810000a 	ldmdane	r0, {r1, r3}
    1ebc:	0410000a 	ldreq	r0, [r0], #-10
    1ec0:	5001f300 	andpl	pc, r1, r0, lsl #6
    1ec4:	000a189f 	muleq	sl, pc, r8	; <UNPREDICTABLE>
    1ec8:	000a9010 	andeq	r9, sl, r0, lsl r0
    1ecc:	50000110 	andpl	r0, r0, r0, lsl r1
	...
    1edc:	09580000 	ldmdbeq	r8, {}^	; <UNPREDICTABLE>
    1ee0:	0a111000 	beq	445ee8 <__RAM_SIZE+0x345ee8>
    1ee4:	00011000 	andeq	r1, r1, r0
    1ee8:	000a1151 	andeq	r1, sl, r1, asr r1
    1eec:	000a1810 	andeq	r1, sl, r0, lsl r8
    1ef0:	f3000410 	vqshl.u8	d0, d0, d0
    1ef4:	189f5101 	ldmne	pc, {r0, r8, ip, lr}	; <UNPREDICTABLE>
    1ef8:	9010000a 	andsls	r0, r0, sl
    1efc:	0110000a 	tsteq	r0, sl
    1f00:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    1f10:	10000958 	andne	r0, r0, r8, asr r9
    1f14:	10000a11 	andne	r0, r0, r1, lsl sl
    1f18:	11520001 	cmpne	r2, r1
    1f1c:	1810000a 	ldmdane	r0, {r1, r3}
    1f20:	0410000a 	ldreq	r0, [r0], #-10
    1f24:	5201f300 	andpl	pc, r1, #0, 6
    1f28:	000a189f 	muleq	sl, pc, r8	; <UNPREDICTABLE>
    1f2c:	000a9010 	andeq	r9, sl, r0, lsl r0
    1f30:	52000110 	andpl	r0, r0, #16, 2
	...
    1f40:	09580000 	ldmdbeq	r8, {}^	; <UNPREDICTABLE>
    1f44:	0a111000 	beq	445f4c <__RAM_SIZE+0x345f4c>
    1f48:	00011000 	andeq	r1, r1, r0
    1f4c:	000a1153 	andeq	r1, sl, r3, asr r1
    1f50:	000a1810 	andeq	r1, sl, r0, lsl r8
    1f54:	f3000410 	vqshl.u8	d0, d0, d0
    1f58:	189f5301 	ldmne	pc, {r0, r8, r9, ip, lr}	; <UNPREDICTABLE>
    1f5c:	9010000a 	andsls	r0, r0, sl
    1f60:	0110000a 	tsteq	r0, sl
    1f64:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    1f70:	09580000 	ldmdbeq	r8, {}^	; <UNPREDICTABLE>
    1f74:	0a181000 	beq	605f7c <__RAM_SIZE+0x505f7c>
    1f78:	00021000 	andeq	r1, r2, r0
    1f7c:	0a180091 	beq	6021c8 <__RAM_SIZE+0x5021c8>
    1f80:	0a901000 	beq	fe405f88 <__StackTop+0xc6305f88>
    1f84:	00021000 	andeq	r1, r2, r0
    1f88:	00000091 	muleq	r0, r1, r0
	...
    1f94:	00010100 	andeq	r0, r1, r0, lsl #2
    1f98:	00010100 	andeq	r0, r1, r0, lsl #2
    1f9c:	00010100 	andeq	r0, r1, r0, lsl #2
    1fa0:	00010100 	andeq	r0, r1, r0, lsl #2
    1fa4:	00010100 	andeq	r0, r1, r0, lsl #2
    1fa8:	00000000 	andeq	r0, r0, r0
    1fac:	01000000 	mrseq	r0, (UNDEF: 0)
    1fb0:	01000001 	tsteq	r0, r1
    1fb4:	01000001 	tsteq	r0, r1
    1fb8:	01000001 	tsteq	r0, r1
    1fbc:	01000001 	tsteq	r0, r1
    1fc0:	00000001 	andeq	r0, r0, r1
    1fc4:	10000958 	andne	r0, r0, r8, asr r9
    1fc8:	10000990 	mulne	r0, r0, r9
    1fcc:	04910002 	ldreq	r0, [r1], #2
    1fd0:	10000990 	mulne	r0, r0, r9
    1fd4:	10000990 	mulne	r0, r0, r9
    1fd8:	90540001 	subsls	r0, r4, r1
    1fdc:	9a100009 	bls	402008 <__RAM_SIZE+0x302008>
    1fe0:	03100009 	tsteq	r0, #9
    1fe4:	9f017400 	svcls	0x00017400
    1fe8:	1000099a 	mulne	r0, sl, r9
    1fec:	100009b0 			; <UNDEFINED> instruction: 0x100009b0
    1ff0:	b0540001 	subslt	r0, r4, r1
    1ff4:	ba100009 	blt	402020 <__RAM_SIZE+0x302020>
    1ff8:	03100009 	tsteq	r0, #9
    1ffc:	9f017400 	svcls	0x00017400
    2000:	100009ba 			; <UNDEFINED> instruction: 0x100009ba
    2004:	100009e8 	andne	r0, r0, r8, ror #19
    2008:	e8540001 	ldmda	r4, {r0}^
    200c:	f2100009 	vhadd.s16	d0, d0, d9
    2010:	03100009 	tsteq	r0, #9
    2014:	9f017400 	svcls	0x00017400
    2018:	100009f2 	strdne	r0, [r0], -r2
    201c:	100009fc 	strdne	r0, [r0], -ip
    2020:	fc540001 	mrrc2	0, 0, r0, r4, cr1
    2024:	06100009 	ldreq	r0, [r0], -r9
    2028:	0310000a 	tsteq	r0, #10
    202c:	9f017400 	svcls	0x00017400
    2030:	10000a06 	andne	r0, r0, r6, lsl #20
    2034:	10000a18 	andne	r0, r0, r8, lsl sl
    2038:	18540001 	ldmdane	r4, {r0}^
    203c:	1c10000a 	ldcne	0, cr0, [r0], {10}
    2040:	0310000a 	tsteq	r0, #10
    2044:	9f7f7400 	svcls	0x007f7400
    2048:	10000a1c 	andne	r0, r0, ip, lsl sl
    204c:	10000a2a 	andne	r0, r0, sl, lsr #20
    2050:	2a5c0001 	bcs	170205c <__RAM_SIZE+0x160205c>
    2054:	2c10000a 	ldccs	0, cr0, [r0], {10}
    2058:	0110000a 	tsteq	r0, sl
    205c:	0a2c5400 	beq	b17064 <__RAM_SIZE+0xa17064>
    2060:	0a301000 	beq	c06068 <__RAM_SIZE+0xb06068>
    2064:	00011000 	andeq	r1, r1, r0
    2068:	000a305c 	andeq	r3, sl, ip, asr r0
    206c:	000a3a10 	andeq	r3, sl, r0, lsl sl
    2070:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    2074:	10000a3a 	andne	r0, r0, sl, lsr sl
    2078:	10000a44 	andne	r0, r0, r4, asr #20
    207c:	01740003 	cmneq	r4, r3
    2080:	000a449f 	muleq	sl, pc, r4	; <UNPREDICTABLE>
    2084:	000a5010 	andeq	r5, sl, r0, lsl r0
    2088:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    208c:	10000a50 	andne	r0, r0, r0, asr sl
    2090:	10000a5a 	andne	r0, r0, sl, asr sl
    2094:	01740003 	cmneq	r4, r3
    2098:	000a5a9f 	muleq	sl, pc, sl	; <UNPREDICTABLE>
    209c:	000a6010 	andeq	r6, sl, r0, lsl r0
    20a0:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    20a4:	10000a60 	andne	r0, r0, r0, ror #20
    20a8:	10000a6a 	andne	r0, r0, sl, ror #20
    20ac:	01740003 	cmneq	r4, r3
    20b0:	000a6a9f 	muleq	sl, pc, sl	; <UNPREDICTABLE>
    20b4:	000a7210 	andeq	r7, sl, r0, lsl r2
    20b8:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    20bc:	10000a72 	andne	r0, r0, r2, ror sl
    20c0:	10000a7c 	andne	r0, r0, ip, ror sl
    20c4:	01740003 	cmneq	r4, r3
    20c8:	000a7c9f 	muleq	sl, pc, ip	; <UNPREDICTABLE>
    20cc:	000a8410 	andeq	r8, sl, r0, lsl r4
    20d0:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    20d4:	10000a84 	andne	r0, r0, r4, lsl #21
    20d8:	10000a8e 	andne	r0, r0, lr, lsl #21
    20dc:	01740003 	cmneq	r4, r3
    20e0:	000a8e9f 	muleq	sl, pc, lr	; <UNPREDICTABLE>
    20e4:	000a9010 	andeq	r9, sl, r0, lsl r0
    20e8:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
	...
    20f8:	10000958 	andne	r0, r0, r8, asr r9
    20fc:	10000a18 	andne	r0, r0, r8, lsl sl
    2100:	08910002 	ldmeq	r1, {r1}
    2104:	10000a18 	andne	r0, r0, r8, lsl sl
    2108:	10000a90 	mulne	r0, r0, sl
    210c:	08910002 	ldmeq	r1, {r1}
	...
    211c:	10000958 	andne	r0, r0, r8, asr r9
    2120:	10000a18 	andne	r0, r0, r8, lsl sl
    2124:	0c910002 	ldceq	0, cr0, [r1], {2}
    2128:	10000a18 	andne	r0, r0, r8, lsl sl
    212c:	10000a90 	mulne	r0, r0, sl
    2130:	0c910002 	ldceq	0, cr0, [r1], {2}
	...
    2140:	10000958 	andne	r0, r0, r8, asr r9
    2144:	10000a18 	andne	r0, r0, r8, lsl sl
    2148:	10910002 	addsne	r0, r1, r2
    214c:	10000a18 	andne	r0, r0, r8, lsl sl
    2150:	10000a90 	mulne	r0, r0, sl
    2154:	10910002 	addsne	r0, r1, r2
	...
    2164:	10000958 	andne	r0, r0, r8, asr r9
    2168:	1000098e 	andne	r0, r0, lr, lsl #19
    216c:	14910002 	ldrne	r0, [r1], #2
    2170:	1000098e 	andne	r0, r0, lr, lsl #19
    2174:	10000a90 	mulne	r0, r0, sl
    2178:	00570001 	subseq	r0, r7, r1
	...
    2184:	58000000 	stmdapl	r0, {}	; <UNPREDICTABLE>
    2188:	18100009 	ldmdane	r0, {r0, r3}
    218c:	0210000a 	andseq	r0, r0, #10
    2190:	18189100 	ldmdane	r8, {r8, ip, pc}
    2194:	9010000a 	andsls	r0, r0, sl
    2198:	0210000a 	andseq	r0, r0, #10
    219c:	00189100 	andseq	r9, r8, r0, lsl #2
    21a0:	00000000 	andeq	r0, r0, r0
    21a4:	da000000 	ble	21ac <__HEAP_SIZE+0x11ac>
    21a8:	de100008 	cdple	0, 1, cr0, cr0, cr8, {0}
    21ac:	02100008 	andseq	r0, r0, #8
    21b0:	de007d00 	cdple	13, 0, cr7, cr0, cr0, {0}
    21b4:	e0100008 	ands	r0, r0, r8
    21b8:	02100008 	andseq	r0, r0, #8
    21bc:	e0247d00 	eor	r7, r4, r0, lsl #26
    21c0:	3e100008 	cdpcc	0, 1, cr0, cr0, cr8, {0}
    21c4:	02100009 	andseq	r0, r0, #9
    21c8:	3e307d00 	cdpcc	13, 3, cr7, cr0, cr0, {0}
    21cc:	42100009 	andsmi	r0, r0, #9
    21d0:	02100009 	andseq	r0, r0, #9
    21d4:	42247d00 	eormi	r7, r4, #0, 26
    21d8:	58100009 	ldmdapl	r0, {r0, r3}
    21dc:	02100009 	andseq	r0, r0, #9
    21e0:	00307d00 	eorseq	r7, r0, r0, lsl #26
	...
    21ec:	da000000 	ble	21f4 <__HEAP_SIZE+0x11f4>
    21f0:	fe100008 	cdp2	0, 1, cr0, cr0, cr8, {0}
    21f4:	01100008 	tsteq	r0, r8
    21f8:	08fe5000 	ldmeq	lr!, {ip, lr}^
    21fc:	09581000 	ldmdbeq	r8, {ip}^
    2200:	00011000 	andeq	r1, r1, r0
    2204:	00000055 	andeq	r0, r0, r5, asr r0
	...
    2210:	0008da00 	andeq	sp, r8, r0, lsl #20
    2214:	0008fe10 	andeq	pc, r8, r0, lsl lr	; <UNPREDICTABLE>
    2218:	51000110 	tstpl	r0, r0, lsl r1
    221c:	100008fe 	strdne	r0, [r0], -lr
    2220:	10000958 	andne	r0, r0, r8, asr r9
    2224:	00560001 	subseq	r0, r6, r1
	...
    2238:	da000000 	ble	2240 <__HEAP_SIZE+0x1240>
    223c:	06100008 	ldreq	r0, [r0], -r8
    2240:	01100009 	tsteq	r0, r9
    2244:	09065200 	stmdbeq	r6, {r9, ip, lr}
    2248:	09161000 	ldmdbeq	r6, {ip}
    224c:	00011000 	andeq	r1, r1, r0
    2250:	0009165b 	andeq	r1, r9, fp, asr r6
    2254:	00092210 	andeq	r2, r9, r0, lsl r2
    2258:	52000110 	andpl	r0, r0, #16, 2
    225c:	10000922 	andne	r0, r0, r2, lsr #18
    2260:	1000092e 	andne	r0, r0, lr, lsr #18
    2264:	2e580001 	cdpcs	0, 5, cr0, cr8, cr1, {0}
    2268:	4c100009 	ldcmi	0, cr0, [r0], {9}
    226c:	01100009 	tsteq	r0, r9
    2270:	094c5200 	stmdbeq	ip, {r9, ip, lr}^
    2274:	09581000 	ldmdbeq	r8, {ip}^
    2278:	00011000 	andeq	r1, r1, r0
    227c:	00000054 	andeq	r0, r0, r4, asr r0
	...
    2288:	0008da00 	andeq	sp, r8, r0, lsl #20
    228c:	0008f410 	andeq	pc, r8, r0, lsl r4	; <UNPREDICTABLE>
    2290:	53000110 	movwpl	r0, #272	; 0x110
    2294:	100008f4 	strdne	r0, [r0], -r4
    2298:	10000958 	andne	r0, r0, r8, asr r9
    229c:	00570001 	subseq	r0, r7, r1
	...
    22a8:	da000000 	ble	22b0 <__HEAP_SIZE+0x12b0>
    22ac:	42100008 	andsmi	r0, r0, #8
    22b0:	02100009 	andseq	r0, r0, #9
    22b4:	42009100 	andmi	r9, r0, #0, 2
    22b8:	58100009 	ldmdapl	r0, {r0, r3}
    22bc:	02100009 	andseq	r0, r0, #9
    22c0:	00009100 	andeq	r9, r0, r0, lsl #2
	...
    22cc:	da000000 	ble	22d4 <__HEAP_SIZE+0x12d4>
    22d0:	1c100008 	ldcne	0, cr0, [r0], {8}
    22d4:	02100009 	andseq	r0, r0, #9
    22d8:	1c049100 	stfned	f1, [r4], {-0}
    22dc:	3a100009 	bcc	402308 <__RAM_SIZE+0x302308>
    22e0:	01100009 	tsteq	r0, r9
    22e4:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    22f0:	08da0000 	ldmeq	sl, {}^	; <UNPREDICTABLE>
    22f4:	09421000 	stmdbeq	r2, {ip}^
    22f8:	00021000 	andeq	r1, r2, r0
    22fc:	09420891 	stmdbeq	r2, {r0, r4, r7, fp}^
    2300:	09581000 	ldmdbeq	r8, {ip}^
    2304:	00021000 	andeq	r1, r2, r0
    2308:	00000891 	muleq	r0, r1, r8
	...
    2314:	08da0000 	ldmeq	sl, {}^	; <UNPREDICTABLE>
    2318:	09421000 	stmdbeq	r2, {ip}^
    231c:	00021000 	andeq	r1, r2, r0
    2320:	09420c91 	stmdbeq	r2, {r0, r4, r7, sl, fp}^
    2324:	09581000 	ldmdbeq	r8, {ip}^
    2328:	00021000 	andeq	r1, r2, r0
    232c:	00000c91 	muleq	r0, r1, ip
    2330:	00000000 	andeq	r0, r0, r0
    2334:	00010000 	andeq	r0, r1, r0
    2338:	00000000 	andeq	r0, r0, r0
    233c:	100008f2 	strdne	r0, [r0], -r2
    2340:	100008fe 	strdne	r0, [r0], -lr
    2344:	fe520001 	cdp2	0, 5, cr0, cr2, cr1, {0}
    2348:	1c100008 	ldcne	0, cr0, [r0], {8}
    234c:	02100009 	andseq	r0, r0, #9
    2350:	1c549100 	ldfnep	f1, [r4], {-0}
    2354:	58100009 	ldmdapl	r0, {r0, r3}
    2358:	04100009 	ldreq	r0, [r0], #-9
    235c:	5201f300 	andpl	pc, r1, #0, 6
    2360:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    2364:	00000000 	andeq	r0, r0, r0
    2368:	fe000000 	cdp2	0, 0, cr0, cr0, cr0, {0}
    236c:	1c100008 	ldcne	0, cr0, [r0], {8}
    2370:	01100009 	tsteq	r0, r9
    2374:	00005800 	andeq	r5, r0, r0, lsl #16
	...
    2380:	08b60000 	ldmeq	r6!, {}	; <UNPREDICTABLE>
    2384:	08ba1000 	ldmeq	sl!, {ip}
    2388:	00011000 	andeq	r1, r1, r0
    238c:	0008ba50 	andeq	fp, r8, r0, asr sl
    2390:	0008da10 	andeq	sp, r8, r0, lsl sl
    2394:	51000110 	tstpl	r0, r0, lsl r1
	...
    23a0:	00000001 	andeq	r0, r0, r1
    23a4:	08b80000 	ldmeq	r8!, {}	; <UNPREDICTABLE>
    23a8:	08bc1000 	ldmeq	ip!, {ip}
    23ac:	00021000 	andeq	r1, r2, r0
    23b0:	08bc9f30 	ldmeq	ip!, {r4, r5, r8, r9, sl, fp, ip, pc}
    23b4:	08c01000 	stmiaeq	r0, {ip}^
    23b8:	00011000 	andeq	r1, r1, r0
    23bc:	0008cc50 	andeq	ip, r8, r0, asr ip
    23c0:	0008da10 	andeq	sp, r8, r0, lsl sl
    23c4:	50000110 	andpl	r0, r0, r0, lsl r1
	...
    23d4:	100008d0 	ldrdne	r0, [r0], -r0	; <UNPREDICTABLE>
    23d8:	100008d2 	ldrdne	r0, [r0], -r2
    23dc:	d2530001 	subsle	r0, r3, #1
    23e0:	d4100008 	ldrle	r0, [r0], #-8
    23e4:	03100008 	tsteq	r0, #8
    23e8:	9f307300 	svcls	0x00307300
	...
    23fc:	007d0002 	rsbseq	r0, sp, r2
	...
    2408:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    2414:	007d0002 	rsbseq	r0, sp, r2
	...
    242c:	00010000 	andeq	r0, r1, r0
    2430:	00000050 	andeq	r0, r0, r0, asr r0
    2434:	00000000 	andeq	r0, r0, r0
    2438:	f3000400 	vshl.u8	d0, d0, d0
    243c:	009f5001 	addseq	r5, pc, r1
    2440:	00000000 	andeq	r0, r0, r0
    2444:	01000000 	mrseq	r0, (UNDEF: 0)
    2448:	00005000 	andeq	r5, r0, r0
	...
    2460:	00510001 	subseq	r0, r1, r1
    2464:	00000000 	andeq	r0, r0, r0
    2468:	04000000 	streq	r0, [r0], #-0
    246c:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    2470:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    2474:	00000000 	andeq	r0, r0, r0
    2478:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    2490:	00010000 	andeq	r0, r1, r0
    2494:	00000052 	andeq	r0, r0, r2, asr r0
    2498:	00000000 	andeq	r0, r0, r0
    249c:	f3000400 	vshl.u8	d0, d0, d0
    24a0:	009f5201 	addseq	r5, pc, r1, lsl #4
    24a4:	00000000 	andeq	r0, r0, r0
    24a8:	01000000 	mrseq	r0, (UNDEF: 0)
    24ac:	00005200 	andeq	r5, r0, r0, lsl #4
	...
    24c4:	00530001 	subseq	r0, r3, r1
    24c8:	00000000 	andeq	r0, r0, r0
    24cc:	04000000 	streq	r0, [r0], #-0
    24d0:	5301f300 	movwpl	pc, #4864	; 0x1300	; <UNPREDICTABLE>
    24d4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    24d8:	00000000 	andeq	r0, r0, r0
    24dc:	53000100 	movwpl	r0, #256	; 0x100
	...
    24e8:	100019f8 	strdne	r1, [r0], -r8
    24ec:	100019fe 	strdne	r1, [r0], -lr
    24f0:	007d0002 	rsbseq	r0, sp, r2
    24f4:	100019fe 	strdne	r1, [r0], -lr
    24f8:	10001a04 	andne	r1, r0, r4, lsl #20
    24fc:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    250c:	100019f8 	strdne	r1, [r0], -r8
    2510:	10001a01 	andne	r1, r0, r1, lsl #20
    2514:	01500001 	cmpeq	r0, r1
    2518:	0410001a 	ldreq	r0, [r0], #-26	; 0xffffffe6
    251c:	0410001a 	ldreq	r0, [r0], #-26	; 0xffffffe6
    2520:	5001f300 	andpl	pc, r1, r0, lsl #6
    2524:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    2530:	0019f800 	andseq	pc, r9, r0, lsl #16
    2534:	001a0110 	andseq	r0, sl, r0, lsl r1
    2538:	51000110 	tstpl	r0, r0, lsl r1
    253c:	10001a01 	andne	r1, r0, r1, lsl #20
    2540:	10001a04 	andne	r1, r0, r4, lsl #20
    2544:	01f30004 	mvnseq	r0, r4
    2548:	00009f51 	andeq	r9, r0, r1, asr pc
	...
    2554:	19f80000 	ldmibne	r8!, {}^	; <UNPREDICTABLE>
    2558:	1a011000 	bne	46560 <__HEAP_SIZE+0x45560>
    255c:	00011000 	andeq	r1, r1, r0
    2560:	001a0152 	andseq	r0, sl, r2, asr r1
    2564:	001a0410 	andseq	r0, sl, r0, lsl r4
    2568:	f3000410 	vqshl.u8	d0, d0, d0
    256c:	009f5201 	addseq	r5, pc, r1, lsl #4
	...
    2578:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
    257c:	01100019 	tsteq	r0, r9, lsl r0
    2580:	0110001a 	tsteq	r0, sl, lsl r0
    2584:	1a015300 	bne	5718c <__HEAP_SIZE+0x5618c>
    2588:	1a041000 	bne	106590 <__RAM_SIZE+0x6590>
    258c:	00041000 	andeq	r1, r4, r0
    2590:	9f5301f3 	svcls	0x005301f3
	...
    25a4:	007d0002 	rsbseq	r0, sp, r2
	...
    25b0:	107d0002 	rsbsne	r0, sp, r2
	...
    25c8:	00500001 	subseq	r0, r0, r1
    25cc:	00000000 	andeq	r0, r0, r0
    25d0:	01000000 	mrseq	r0, (UNDEF: 0)
    25d4:	00005600 	andeq	r5, r0, r0, lsl #12
	...
    25e8:	00010000 	andeq	r0, r1, r0
    25ec:	00000051 	andeq	r0, r0, r1, asr r0
    25f0:	00000000 	andeq	r0, r0, r0
    25f4:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    2600:	01000001 	tsteq	r0, r1
	...
    260c:	00020000 	andeq	r0, r2, r0
    2610:	00009f30 	andeq	r9, r0, r0, lsr pc
    2614:	00000000 	andeq	r0, r0, r0
    2618:	00010000 	andeq	r0, r1, r0
    261c:	00000050 	andeq	r0, r0, r0, asr r0
    2620:	00000000 	andeq	r0, r0, r0
    2624:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    2630:	00000002 	andeq	r0, r0, r2
	...
    263c:	9f300002 	svcls	0x00300002
	...
    2648:	00540001 	subseq	r0, r4, r1
	...
    2658:	02000000 	andeq	r0, r0, #0
    265c:	00007d00 	andeq	r7, r0, r0, lsl #26
    2660:	00000000 	andeq	r0, r0, r0
    2664:	02000000 	andeq	r0, r0, #0
    2668:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    267c:	01000000 	mrseq	r0, (UNDEF: 0)
    2680:	00005000 	andeq	r5, r0, r0
    2684:	00000000 	andeq	r0, r0, r0
    2688:	00040000 	andeq	r0, r4, r0
    268c:	9f5001f3 	svcls	0x005001f3
	...
    2698:	10001a44 	andne	r1, r0, r4, asr #20
    269c:	10001a46 	andne	r1, r0, r6, asr #20
    26a0:	007d0002 	rsbseq	r0, sp, r2
    26a4:	10001a46 	andne	r1, r0, r6, asr #20
    26a8:	10001a62 	andne	r1, r0, r2, ror #20
    26ac:	107d0002 	rsbsne	r0, sp, r2
	...
    26bc:	10001a44 	andne	r1, r0, r4, asr #20
    26c0:	10001a4c 	andne	r1, r0, ip, asr #20
    26c4:	4c500001 	mrrcmi	0, 0, r0, r0, cr1	; <UNPREDICTABLE>
    26c8:	6210001a 	andsvs	r0, r0, #26
    26cc:	0110001a 	tsteq	r0, sl, lsl r0
    26d0:	00005500 	andeq	r5, r0, r0, lsl #10
    26d4:	00000000 	andeq	r0, r0, r0
    26d8:	00010000 	andeq	r0, r1, r0
    26dc:	1a480000 	bne	12026e4 <__RAM_SIZE+0x11026e4>
    26e0:	1a4c1000 	bne	13066e8 <__RAM_SIZE+0x12066e8>
    26e4:	00021000 	andeq	r1, r2, r0
    26e8:	1a4c9f30 	bne	132a3b0 <__RAM_SIZE+0x122a3b0>
    26ec:	1a621000 	bne	18866f4 <__RAM_SIZE+0x17866f4>
    26f0:	00011000 	andeq	r1, r1, r0
    26f4:	00000054 	andeq	r0, r0, r4, asr r0
    26f8:	00000000 	andeq	r0, r0, r0
    26fc:	30000100 	andcc	r0, r0, r0, lsl #2
    2700:	4410001a 	ldrmi	r0, [r0], #-26	; 0xffffffe6
    2704:	0110001a 	tsteq	r0, sl, lsl r0
    2708:	00005000 	andeq	r5, r0, r0
    270c:	00000000 	andeq	r0, r0, r0
    2710:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    271c:	00500001 	subseq	r0, r0, r1
    2720:	00000000 	andeq	r0, r0, r0
    2724:	54000000 	strpl	r0, [r0], #-0
    2728:	5810001b 	ldmdapl	r0, {r0, r1, r3, r4}
    272c:	0210001b 	andseq	r0, r0, #27
    2730:	58007d00 	stmdapl	r0, {r8, sl, fp, ip, sp, lr}
    2734:	d010001b 	andsle	r0, r0, fp, lsl r0
    2738:	0210001b 	andseq	r0, r0, #27
    273c:	00207d00 	eoreq	r7, r0, r0, lsl #26
	...
    274c:	54000000 	strpl	r0, [r0], #-0
    2750:	6e10001b 	mrcvs	0, 0, r0, cr0, cr11, {0}
    2754:	0110001b 	tsteq	r0, fp, lsl r0
    2758:	1b6e5000 	blne	1b96760 <__RAM_SIZE+0x1a96760>
    275c:	1ba81000 	blne	fea06764 <__StackTop+0xc6906764>
    2760:	00011000 	andeq	r1, r1, r0
    2764:	001ba858 	andseq	sl, fp, r8, asr r8
    2768:	001bae10 	andseq	sl, fp, r0, lsl lr
    276c:	f3000410 	vqshl.u8	d0, d0, d0
    2770:	ae9f5001 	cdpge	0, 9, cr5, cr15, cr1, {0}
    2774:	d010001b 	andsle	r0, r0, fp, lsl r0
    2778:	0110001b 	tsteq	r0, fp, lsl r0
    277c:	00005000 	andeq	r5, r0, r0
	...
    278c:	1b540000 	blne	1502794 <__RAM_SIZE+0x1402794>
    2790:	1b6e1000 	blne	1b86798 <__RAM_SIZE+0x1a86798>
    2794:	00011000 	andeq	r1, r1, r0
    2798:	001b6e51 	andseq	r6, fp, r1, asr lr
    279c:	001ba810 	andseq	sl, fp, r0, lsl r8
    27a0:	57000110 	smladpl	r0, r0, r1, r0
    27a4:	10001ba8 	andne	r1, r0, r8, lsr #23
    27a8:	10001bae 	andne	r1, r0, lr, lsr #23
    27ac:	01f30004 	mvnseq	r0, r4
    27b0:	1bae9f51 	blne	febaa4fc <__StackTop+0xc6aaa4fc>
    27b4:	1bd01000 	blne	ff4067bc <__StackTop+0xc73067bc>
    27b8:	00011000 	andeq	r1, r1, r0
    27bc:	00000051 	andeq	r0, r0, r1, asr r0
	...
    27c8:	54000000 	strpl	r0, [r0], #-0
    27cc:	6e10001b 	mrcvs	0, 0, r0, cr0, cr11, {0}
    27d0:	0110001b 	tsteq	r0, fp, lsl r0
    27d4:	1b6e5200 	blne	1b96fdc <__RAM_SIZE+0x1a96fdc>
    27d8:	1bae1000 	blne	feb867e0 <__StackTop+0xc6a867e0>
    27dc:	00041000 	andeq	r1, r4, r0
    27e0:	9f5201f3 	svcls	0x005201f3
    27e4:	10001bae 	andne	r1, r0, lr, lsr #23
    27e8:	10001bd0 	ldrdne	r1, [r0], -r0
    27ec:	00520001 	subseq	r0, r2, r1
	...
    27fc:	54000000 	strpl	r0, [r0], #-0
    2800:	6e10001b 	mrcvs	0, 0, r0, cr0, cr11, {0}
    2804:	0110001b 	tsteq	r0, fp, lsl r0
    2808:	1b6e5300 	blne	1b97410 <__RAM_SIZE+0x1a97410>
    280c:	1ba81000 	blne	fea06814 <__StackTop+0xc6906814>
    2810:	00011000 	andeq	r1, r1, r0
    2814:	001ba855 	andseq	sl, fp, r5, asr r8
    2818:	001bae10 	andseq	sl, fp, r0, lsl lr
    281c:	f3000410 	vqshl.u8	d0, d0, d0
    2820:	ae9f5301 	cdpge	3, 9, cr5, cr15, cr1, {0}
    2824:	d010001b 	andsle	r0, r0, fp, lsl r0
    2828:	0110001b 	tsteq	r0, fp, lsl r0
    282c:	00005300 	andeq	r5, r0, r0, lsl #6
    2830:	00000000 	andeq	r0, r0, r0
    2834:	00010000 	andeq	r0, r1, r0
    2838:	00000000 	andeq	r0, r0, r0
    283c:	10001b58 	andne	r1, r0, r8, asr fp
    2840:	10001b6e 	andne	r1, r0, lr, ror #22
    2844:	9f300002 	svcls	0x00300002
    2848:	10001b6e 	andne	r1, r0, lr, ror #22
    284c:	10001ba8 	andne	r1, r0, r8, lsr #23
    2850:	ae560001 	cdpge	0, 5, cr0, cr6, cr1, {0}
    2854:	c410001b 	ldrgt	r0, [r0], #-27	; 0xffffffe5
    2858:	0210001b 	andseq	r0, r0, #27
    285c:	009f3000 	addseq	r3, pc, r0
    2860:	00000000 	andeq	r0, r0, r0
    2864:	02000000 	andeq	r0, r0, #0
    2868:	01010000 	mrseq	r0, (UNDEF: 1)
    286c:	00000000 	andeq	r0, r0, r0
    2870:	001b5800 	andseq	r5, fp, r0, lsl #16
    2874:	001b6e10 	andseq	r6, fp, r0, lsl lr
    2878:	30000210 	andcc	r0, r0, r0, lsl r2
    287c:	001b789f 	mulseq	fp, pc, r8	; <UNPREDICTABLE>
    2880:	001b8a10 	andseq	r8, fp, r0, lsl sl
    2884:	52000110 	andpl	r0, r0, #16, 2
    2888:	10001b8a 	andne	r1, r0, sl, lsl #23
    288c:	10001b8e 	andne	r1, r0, lr, lsl #23
    2890:	7f720003 	svcvc	0x00720003
    2894:	001b8e9f 	mulseq	fp, pc, lr	; <UNPREDICTABLE>
    2898:	001ba810 	andseq	sl, fp, r0, lsl r8
    289c:	59000110 	stmdbpl	r0, {r4, r8}
    28a0:	10001bae 	andne	r1, r0, lr, lsr #23
    28a4:	10001bd0 	ldrdne	r1, [r0], -r0
    28a8:	9f300002 	svcls	0x00300002
	...
    28b4:	00000002 	andeq	r0, r0, r2
    28b8:	1b580000 	blne	16028c0 <__RAM_SIZE+0x15028c0>
    28bc:	1b6e1000 	blne	1b868c4 <__RAM_SIZE+0x1a868c4>
    28c0:	00021000 	andeq	r1, r2, r0
    28c4:	1b969f30 	blne	fe5aa58c <__StackTop+0xc64aa58c>
    28c8:	1b991000 	blne	fe6468d0 <__StackTop+0xc65468d0>
    28cc:	00011000 	andeq	r1, r1, r0
    28d0:	001bae50 	andseq	sl, fp, r0, asr lr
    28d4:	001bd010 	andseq	sp, fp, r0, lsl r0
    28d8:	30000210 	andcc	r0, r0, r0, lsl r2
    28dc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    28e0:	00000000 	andeq	r0, r0, r0
    28e4:	00000200 	andeq	r0, r0, r0, lsl #4
    28e8:	58000000 	stmdapl	r0, {}	; <UNPREDICTABLE>
    28ec:	6e10001b 	mrcvs	0, 0, r0, cr0, cr11, {0}
    28f0:	0210001b 	andseq	r0, r0, #27
    28f4:	6e9f3000 	cdpvs	0, 9, cr3, cr15, cr0, {0}
    28f8:	a810001b 	ldmdage	r0, {r0, r1, r3, r4}
    28fc:	0110001b 	tsteq	r0, fp, lsl r0
    2900:	1bae5400 	blne	feb97908 <__StackTop+0xc6a97908>
    2904:	1bd01000 	blne	ff40690c <__StackTop+0xc730690c>
    2908:	00021000 	andeq	r1, r2, r0
    290c:	00009f30 	andeq	r9, r0, r0, lsr pc
    2910:	00000000 	andeq	r0, r0, r0
    2914:	1bd00000 	blne	ff40291c <__StackTop+0xc730291c>
    2918:	1bd21000 	blne	ff486920 <__StackTop+0xc7386920>
    291c:	00021000 	andeq	r1, r2, r0
    2920:	1bd2007d 	blne	ff482b1c <__StackTop+0xc7382b1c>
    2924:	1d541000 	ldclne	0, cr1, [r4, #-0]
    2928:	00021000 	andeq	r1, r2, r0
    292c:	0000187d 	andeq	r1, r0, sp, ror r8
	...
    293c:	10001bd0 	ldrdne	r1, [r0], -r0
    2940:	10001c1c 	andne	r1, r0, ip, lsl ip
    2944:	1c500001 	mrrcne	0, 0, r0, r0, cr1	; <UNPREDICTABLE>
    2948:	c810001c 	ldmdagt	r0, {r2, r3, r4}
    294c:	0110001c 	tsteq	r0, ip, lsl r0
    2950:	1cc85500 	cfstr64ne	mvdx5, [r8], {0}
    2954:	1d541000 	ldclne	0, cr1, [r4, #-0]
    2958:	00041000 	andeq	r1, r4, r0
    295c:	9f5001f3 	svcls	0x005001f3
	...
    296c:	10001bd0 	ldrdne	r1, [r0], -r0
    2970:	10001c1f 	andne	r1, r0, pc, lsl ip
    2974:	1f510001 	svcne	0x00510001
    2978:	5410001c 	ldrpl	r0, [r0], #-28	; 0xffffffe4
    297c:	0110001d 	tsteq	r0, sp, lsl r0
    2980:	00005600 	andeq	r5, r0, r0, lsl #12
    2984:	00000000 	andeq	r0, r0, r0
    2988:	00010000 	andeq	r0, r1, r0
    298c:	00000000 	andeq	r0, r0, r0
    2990:	10001bd6 	ldrdne	r1, [r0], -r6
    2994:	10001cc8 	andne	r1, r0, r8, asr #25
    2998:	9f300002 	svcls	0x00300002
    299c:	10001cc8 	andne	r1, r0, r8, asr #25
    29a0:	10001cca 	andne	r1, r0, sl, asr #25
    29a4:	ca500001 	bgt	14029b0 <__RAM_SIZE+0x13029b0>
    29a8:	5410001c 	ldrpl	r0, [r0], #-28	; 0xffffffe4
    29ac:	0110001d 	tsteq	r0, sp, lsl r0
    29b0:	00005500 	andeq	r5, r0, r0, lsl #10
    29b4:	00000000 	andeq	r0, r0, r0
    29b8:	01010000 	mrseq	r0, (UNDEF: 1)
    29bc:	00010101 	andeq	r0, r1, r1, lsl #2
    29c0:	1bd60000 	blne	ff5829c8 <__StackTop+0xc74829c8>
    29c4:	1cb81000 	ldcne	0, cr1, [r8]
    29c8:	00021000 	andeq	r1, r2, r0
    29cc:	1cb89f30 	ldcne	15, cr9, [r8], #192	; 0xc0
    29d0:	1cd61000 	ldclne	0, cr1, [r6], {0}
    29d4:	00021000 	andeq	r1, r2, r0
    29d8:	1cd69f40 	ldclne	15, cr9, [r6], {64}	; 0x40
    29dc:	1cda1000 	ldclne	0, cr1, [sl], {0}
    29e0:	00021000 	andeq	r1, r2, r0
    29e4:	1cda9f30 	ldclne	15, cr9, [sl], {48}	; 0x30
    29e8:	1d541000 	ldclne	0, cr1, [r4, #-0]
    29ec:	00011000 	andeq	r1, r1, r0
    29f0:	00000054 	andeq	r0, r0, r4, asr r0
    29f4:	00000000 	andeq	r0, r0, r0
    29f8:	05050200 	streq	r0, [r5, #-512]	; 0xfffffe00
    29fc:	01010101 	tsteq	r1, r1, lsl #2
    2a00:	01010101 	tsteq	r1, r1, lsl #2
    2a04:	01010101 	tsteq	r1, r1, lsl #2
    2a08:	01010101 	tsteq	r1, r1, lsl #2
    2a0c:	01010101 	tsteq	r1, r1, lsl #2
    2a10:	01010101 	tsteq	r1, r1, lsl #2
    2a14:	01010101 	tsteq	r1, r1, lsl #2
    2a18:	00000101 	andeq	r0, r0, r1, lsl #2
    2a1c:	d6000000 	strle	r0, [r0], -r0
    2a20:	d610001b 			; <UNDEFINED> instruction: 0xd610001b
    2a24:	0110001b 	tsteq	r0, fp, lsl r0
    2a28:	1bd65000 	blne	ff596a30 <__StackTop+0xc7496a30>
    2a2c:	1bdc1000 	blne	ff706a34 <__StackTop+0xc7606a34>
    2a30:	00031000 	andeq	r1, r3, r0
    2a34:	dc9f0470 	cfldrsle	mvf0, [pc], {112}	; 0x70
    2a38:	e010001b 	ands	r0, r0, fp, lsl r0
    2a3c:	0310001b 	tsteq	r0, #27
    2a40:	9f087000 	svcls	0x00087000
    2a44:	10001be0 	andne	r1, r0, r0, ror #23
    2a48:	10001be4 	andne	r1, r0, r4, ror #23
    2a4c:	0c700003 	ldcleq	0, cr0, [r0], #-12
    2a50:	001be49f 	mulseq	fp, pc, r4	; <UNPREDICTABLE>
    2a54:	001be810 	andseq	lr, fp, r0, lsl r8
    2a58:	70000310 	andvc	r0, r0, r0, lsl r3
    2a5c:	1be89f10 	blne	ffa2a6a4 <__StackTop+0xc792a6a4>
    2a60:	1bec1000 	blne	ffb06a68 <__StackTop+0xc7a06a68>
    2a64:	00031000 	andeq	r1, r3, r0
    2a68:	ec9f1470 	cfldrs	mvf1, [pc], {112}	; 0x70
    2a6c:	f010001b 			; <UNDEFINED> instruction: 0xf010001b
    2a70:	0310001b 	tsteq	r0, #27
    2a74:	9f187000 	svcls	0x00187000
    2a78:	10001bf0 	strdne	r1, [r0], -r0
    2a7c:	10001bf4 	strdne	r1, [r0], -r4
    2a80:	1c700003 	ldclne	0, cr0, [r0], #-12
    2a84:	001bf49f 	mulseq	fp, pc, r4	; <UNPREDICTABLE>
    2a88:	001bf810 	andseq	pc, fp, r0, lsl r8	; <UNPREDICTABLE>
    2a8c:	70000310 	andvc	r0, r0, r0, lsl r3
    2a90:	1bf89f20 	blne	ffe2a718 <__StackTop+0xc7d2a718>
    2a94:	1bfc1000 	blne	fff06a9c <__StackTop+0xc7e06a9c>
    2a98:	00031000 	andeq	r1, r3, r0
    2a9c:	fc9f2470 	ldc2	4, cr2, [pc], {112}	; 0x70
    2aa0:	0010001b 	andseq	r0, r0, fp, lsl r0
    2aa4:	0310001c 	tsteq	r0, #28
    2aa8:	9f287000 	svcls	0x00287000
    2aac:	10001c00 	andne	r1, r0, r0, lsl #24
    2ab0:	10001c04 	andne	r1, r0, r4, lsl #24
    2ab4:	2c700003 	ldclcs	0, cr0, [r0], #-12
    2ab8:	001c049f 	mulseq	ip, pc, r4	; <UNPREDICTABLE>
    2abc:	001c0810 	andseq	r0, ip, r0, lsl r8
    2ac0:	70000310 	andvc	r0, r0, r0, lsl r3
    2ac4:	1c089f30 	stcne	15, cr9, [r8], {48}	; 0x30
    2ac8:	1c0c1000 	stcne	0, cr1, [ip], {-0}
    2acc:	00031000 	andeq	r1, r3, r0
    2ad0:	0c9f3470 	cfldrseq	mvf3, [pc], {112}	; 0x70
    2ad4:	1010001c 	andsne	r0, r0, ip, lsl r0
    2ad8:	0310001c 	tsteq	r0, #28
    2adc:	9f387000 	svcls	0x00387000
    2ae0:	10001c10 	andne	r1, r0, r0, lsl ip
    2ae4:	10001c14 	andne	r1, r0, r4, lsl ip
    2ae8:	3c700003 	ldclcc	0, cr0, [r0], #-12
    2aec:	001c149f 	mulseq	ip, pc, r4	; <UNPREDICTABLE>
    2af0:	001c1c10 	andseq	r1, ip, r0, lsl ip
    2af4:	70000410 	andvc	r0, r0, r0, lsl r4
    2af8:	1c9f00c0 	ldcne	0, cr0, [pc], {192}	; 0xc0
    2afc:	c810001c 	ldmdagt	r0, {r2, r3, r4}
    2b00:	0410001c 	ldreq	r0, [r0], #-28	; 0xffffffe4
    2b04:	00c07500 	sbceq	r7, r0, r0, lsl #10
    2b08:	001cc89f 	mulseq	ip, pc, r8	; <UNPREDICTABLE>
    2b0c:	001d5410 	andseq	r5, sp, r0, lsl r4
    2b10:	f3000610 	vmin.u8	d0, d0, d0
    2b14:	40235001 	eormi	r5, r3, r1
    2b18:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    2b1c:	00000000 	andeq	r0, r0, r0
    2b20:	001aec00 	andseq	lr, sl, r0, lsl #24
    2b24:	001aee10 	andseq	lr, sl, r0, lsl lr
    2b28:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    2b2c:	001aee00 	andseq	lr, sl, r0, lsl #28
    2b30:	001b0410 	andseq	r0, fp, r0, lsl r4
    2b34:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    2b38:	00000008 	andeq	r0, r0, r8
	...
    2b48:	001aec00 	andseq	lr, sl, r0, lsl #24
    2b4c:	001af410 	andseq	pc, sl, r0, lsl r4	; <UNPREDICTABLE>
    2b50:	50000110 	andpl	r0, r0, r0, lsl r1
    2b54:	10001af4 	strdne	r1, [r0], -r4
    2b58:	10001af7 	strdne	r1, [r0], -r7
    2b5c:	f7510001 			; <UNDEFINED> instruction: 0xf7510001
    2b60:	0010001a 	andseq	r0, r0, sl, lsl r0
    2b64:	0110001b 	tsteq	r0, fp, lsl r0
    2b68:	1b005400 	blne	17b70 <__HEAP_SIZE+0x16b70>
    2b6c:	1b041000 	blne	106b74 <__RAM_SIZE+0x6b74>
    2b70:	00041000 	andeq	r1, r4, r0
    2b74:	9f5001f3 	svcls	0x005001f3
	...
    2b84:	10001ab4 			; <UNDEFINED> instruction: 0x10001ab4
    2b88:	10001aba 			; <UNDEFINED> instruction: 0x10001aba
    2b8c:	ba500001 	blt	1402b98 <__RAM_SIZE+0x1302b98>
    2b90:	ea10001a 	b	402c00 <__RAM_SIZE+0x302c00>
    2b94:	0410001a 	ldreq	r0, [r0], #-26	; 0xffffffe6
    2b98:	5001f300 	andpl	pc, r1, r0, lsl #6
    2b9c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    2ba0:	00000000 	andeq	r0, r0, r0
    2ba4:	b8000000 	stmdalt	r0, {}	; <UNPREDICTABLE>
    2ba8:	ea10001a 	b	402c18 <__RAM_SIZE+0x302c18>
    2bac:	0110001a 	tsteq	r0, sl, lsl r0
    2bb0:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    2bcc:	1abe0000 	bne	fef82bd4 <__StackTop+0xc6e82bd4>
    2bd0:	1ad81000 	bne	ff606bd8 <__StackTop+0xc7506bd8>
    2bd4:	00011000 	andeq	r1, r1, r0
    2bd8:	001ad850 	andseq	sp, sl, r0, asr r8
    2bdc:	001ada10 	andseq	sp, sl, r0, lsl sl
    2be0:	f3000a10 	vpmin.u8	d0, d0, d0
    2be4:	25405001 	strbcs	r5, [r0, #-1]
    2be8:	1af8000a 	bne	ffe02c18 <__StackTop+0xc7d02c18>
    2bec:	001ada9f 	mulseq	sl, pc, sl	; <UNPREDICTABLE>
    2bf0:	001adc10 	andseq	sp, sl, r0, lsl ip
    2bf4:	50000110 	andpl	r0, r0, r0, lsl r1
    2bf8:	10001adc 	ldrdne	r1, [r0], -ip
    2bfc:	10001ade 	ldrdne	r1, [r0], -lr
    2c00:	01f3000a 	mvnseq	r0, sl
    2c04:	0a254050 	beq	952d4c <__RAM_SIZE+0x852d4c>
    2c08:	9f1af800 	svcls	0x001af800
    2c0c:	10001ade 	ldrdne	r1, [r0], -lr
    2c10:	10001ae0 	andne	r1, r0, r0, ror #21
    2c14:	e0500001 	subs	r0, r0, r1
    2c18:	e210001a 	ands	r0, r0, #26
    2c1c:	0a10001a 	beq	402c8c <__RAM_SIZE+0x302c8c>
    2c20:	5001f300 	andpl	pc, r1, r0, lsl #6
    2c24:	000a2540 	andeq	r2, sl, r0, asr #10
    2c28:	e29f1af8 	adds	r1, pc, #248, 20	; 0xf8000
    2c2c:	e410001a 	ldr	r0, [r0], #-26	; 0xffffffe6
    2c30:	0110001a 	tsteq	r0, sl, lsl r0
    2c34:	1ae45000 	bne	ff916c3c <__StackTop+0xc7816c3c>
    2c38:	1ae61000 	bne	ff986c40 <__StackTop+0xc7886c40>
    2c3c:	000a1000 	andeq	r1, sl, r0
    2c40:	405001f3 	ldrshmi	r0, [r0], #-19	; 0xffffffed
    2c44:	f8000a25 			; <UNDEFINED> instruction: 0xf8000a25
    2c48:	1ae69f1a 	bne	ff9aa8b8 <__StackTop+0xc78aa8b8>
    2c4c:	1ae81000 	bne	ffa06c54 <__StackTop+0xc7906c54>
    2c50:	00011000 	andeq	r1, r1, r0
    2c54:	001ae850 	andseq	lr, sl, r0, asr r8
    2c58:	001aea10 	andseq	lr, sl, r0, lsl sl
    2c5c:	f3000a10 	vpmin.u8	d0, d0, d0
    2c60:	25405001 	strbcs	r5, [r0, #-1]
    2c64:	1af8000a 	bne	ffe02c94 <__StackTop+0xc7d02c94>
    2c68:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    2c6c:	00000000 	andeq	r0, r0, r0
    2c70:	001a8800 	andseq	r8, sl, r0, lsl #16
    2c74:	001a8a10 	andseq	r8, sl, r0, lsl sl
    2c78:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    2c7c:	001a8a00 	andseq	r8, sl, r0, lsl #20
    2c80:	001ab210 	andseq	fp, sl, r0, lsl r2
    2c84:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    2c88:	001ab208 	andseq	fp, sl, r8, lsl #4
    2c8c:	001ab410 	andseq	fp, sl, r0, lsl r4
    2c90:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
	...
    2ca0:	001a8800 	andseq	r8, sl, r0, lsl #16
    2ca4:	001aa810 	andseq	sl, sl, r0, lsl r8
    2ca8:	50000110 	andpl	r0, r0, r0, lsl r1
    2cac:	10001aa8 	andne	r1, r0, r8, lsr #21
    2cb0:	10001ab4 			; <UNDEFINED> instruction: 0x10001ab4
    2cb4:	01f30004 	mvnseq	r0, r4
    2cb8:	00009f50 	andeq	r9, r0, r0, asr pc
    2cbc:	00000000 	andeq	r0, r0, r0
    2cc0:	00010000 	andeq	r0, r1, r0
    2cc4:	00000000 	andeq	r0, r0, r0
    2cc8:	10001a8e 	andne	r1, r0, lr, lsl #21
    2ccc:	10001aac 	andne	r1, r0, ip, lsr #21
    2cd0:	9f300002 	svcls	0x00300002
    2cd4:	10001aac 	andne	r1, r0, ip, lsr #21
    2cd8:	10001ab0 			; <UNDEFINED> instruction: 0x10001ab0
    2cdc:	00700008 	rsbseq	r0, r0, r8
    2ce0:	00732440 	rsbseq	r2, r3, r0, asr #8
    2ce4:	1ab09f21 	bne	fec2a970 <__StackTop+0xc6b2a970>
    2ce8:	1ab41000 	bne	fed06cf0 <__StackTop+0xc6c06cf0>
    2cec:	00011000 	andeq	r1, r1, r0
    2cf0:	00000050 	andeq	r0, r0, r0, asr r0
    2cf4:	00000000 	andeq	r0, r0, r0
    2cf8:	00000300 	andeq	r0, r0, r0, lsl #6
    2cfc:	001a8e00 	andseq	r8, sl, r0, lsl #28
    2d00:	001a9010 	andseq	r9, sl, r0, lsl r0
    2d04:	30000210 	andcc	r0, r0, r0, lsl r2
    2d08:	001a909f 	mulseq	sl, pc, r0	; <UNPREDICTABLE>
    2d0c:	001aac10 	andseq	sl, sl, r0, lsl ip
    2d10:	53000110 	movwpl	r0, #272	; 0x110
	...
    2d1c:	10001b04 	andne	r1, r0, r4, lsl #22
    2d20:	10001b06 	andne	r1, r0, r6, lsl #22
    2d24:	007d0002 	rsbseq	r0, sp, r2
    2d28:	10001b06 	andne	r1, r0, r6, lsl #22
    2d2c:	10001b54 	andne	r1, r0, r4, asr fp
    2d30:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    2d3c:	10001d54 	andne	r1, r0, r4, asr sp
    2d40:	10001d56 	andne	r1, r0, r6, asr sp
    2d44:	007d0002 	rsbseq	r0, sp, r2
    2d48:	10001d56 	andne	r1, r0, r6, asr sp
    2d4c:	10001e50 	andne	r1, r0, r0, asr lr
    2d50:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    2d60:	10001d54 	andne	r1, r0, r4, asr sp
    2d64:	10001d5a 	andne	r1, r0, sl, asr sp
    2d68:	5a500001 	bpl	1402d74 <__RAM_SIZE+0x1302d74>
    2d6c:	5010001d 	andspl	r0, r0, sp, lsl r0
    2d70:	0110001e 	tsteq	r0, lr, lsl r0
    2d74:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    2d84:	10001ea2 	andne	r1, r0, r2, lsr #29
    2d88:	10001eba 			; <UNDEFINED> instruction: 0x10001eba
    2d8c:	ba500001 	blt	1402d98 <__RAM_SIZE+0x1302d98>
    2d90:	c010001e 	andsgt	r0, r0, lr, lsl r0
    2d94:	0410001e 	ldreq	r0, [r0], #-30	; 0xffffffe2
    2d98:	5001f300 	andpl	pc, r1, r0, lsl #6
    2d9c:	001ec09f 	mulseq	lr, pc, r0	; <UNPREDICTABLE>
    2da0:	001ec610 	andseq	ip, lr, r0, lsl r6
    2da4:	50000110 	andpl	r0, r0, r0, lsl r1
	...
    2db0:	1ea40000 	cdpne	0, 10, cr0, cr4, cr0, {0}
    2db4:	1ec61000 	cdpne	0, 12, cr1, cr6, cr0, {0}
    2db8:	00011000 	andeq	r1, r1, r0
    2dbc:	00000053 	andeq	r0, r0, r3, asr r0
    2dc0:	00000000 	andeq	r0, r0, r0
    2dc4:	001e7000 	andseq	r7, lr, r0
    2dc8:	001e7210 	andseq	r7, lr, r0, lsl r2
    2dcc:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    2dd0:	001e7200 	andseq	r7, lr, r0, lsl #4
    2dd4:	001e9c10 	andseq	r9, lr, r0, lsl ip
    2dd8:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    2ddc:	001e9c08 	andseq	r9, lr, r8, lsl #24
    2de0:	001e9e10 	andseq	r9, lr, r0, lsl lr
    2de4:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    2de8:	001e9e00 	andseq	r9, lr, r0, lsl #28
    2dec:	001ea210 	andseq	sl, lr, r0, lsl r2
    2df0:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    2df4:	00000008 	andeq	r0, r0, r8
	...
    2e00:	7e000000 	cdpvc	0, 0, cr0, cr0, cr0, {0}
    2e04:	8210001e 	andshi	r0, r0, #30
    2e08:	0110001e 	tsteq	r0, lr, lsl r0
    2e0c:	1e825300 	cdpne	3, 8, cr5, cr2, cr0, {0}
    2e10:	1e9c1000 	cdpne	0, 9, cr1, cr12, cr0, {0}
    2e14:	00011000 	andeq	r1, r1, r0
    2e18:	001ea054 	andseq	sl, lr, r4, asr r0
    2e1c:	001ea210 	andseq	sl, lr, r0, lsl r2
    2e20:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
	...
    2e30:	10001e74 	andne	r1, r0, r4, ror lr
    2e34:	10001e9c 	mulne	r0, ip, lr
    2e38:	9e550001 	cdpls	0, 5, cr0, cr5, cr1, {0}
    2e3c:	a210001e 	andsge	r0, r0, #30
    2e40:	0110001e 	tsteq	r0, lr, lsl r0
    2e44:	00005500 	andeq	r5, r0, r0, lsl #10
	...
    2e58:	00530001 	subseq	r0, r3, r1
    2e5c:	00000000 	andeq	r0, r0, r0
    2e60:	7a000000 	bvc	2e68 <__HEAP_SIZE+0x1e68>
    2e64:	7c10001f 	ldcvc	0, cr0, [r0], {31}
    2e68:	0210001f 	andseq	r0, r0, #31
    2e6c:	7c007d00 	stcvc	13, cr7, [r0], {-0}
    2e70:	7e10001f 	mrcvc	0, 0, r0, cr0, cr15, {0}
    2e74:	0210001f 	andseq	r0, r0, #31
    2e78:	7e107d00 	cdpvc	13, 1, cr7, cr0, cr0, {0}
    2e7c:	9010001f 	andsls	r0, r0, pc, lsl r0
    2e80:	0210001f 	andseq	r0, r0, #31
    2e84:	90187d00 	andsls	r7, r8, r0, lsl #26
    2e88:	9210001f 	andsls	r0, r0, #31
    2e8c:	0210001f 	andseq	r0, r0, #31
    2e90:	92107d00 	andsls	r7, r0, #0, 26
    2e94:	d210001f 	andsle	r0, r0, #31
    2e98:	0210001f 	andseq	r0, r0, #31
    2e9c:	00187d00 	andseq	r7, r8, r0, lsl #26
	...
    2eac:	001f7a00 	andseq	r7, pc, r0, lsl #20
    2eb0:	001f8c10 	andseq	r8, pc, r0, lsl ip	; <UNPREDICTABLE>
    2eb4:	50000110 	andpl	r0, r0, r0, lsl r1
    2eb8:	10001f92 	mulne	r0, r2, pc	; <UNPREDICTABLE>
    2ebc:	10001f9e 	mulne	r0, lr, pc	; <UNPREDICTABLE>
    2ec0:	9e500001 	cdpls	0, 5, cr0, cr0, cr1, {0}
    2ec4:	a110001f 	tstge	r0, pc, lsl r0
    2ec8:	0210001f 	andseq	r0, r0, #31
    2ecc:	00007100 	andeq	r7, r0, r0, lsl #2
	...
    2ed8:	001f8200 	andseq	r8, pc, r0, lsl #4
    2edc:	001fd210 	andseq	sp, pc, r0, lsl r2	; <UNPREDICTABLE>
    2ee0:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
	...
    2eec:	00000001 	andeq	r0, r0, r1
	...
    2ef8:	1f820000 	svcne	0x00820000
    2efc:	1f8c1000 	svcne	0x008c1000
    2f00:	00021000 	andeq	r1, r2, r0
    2f04:	1f929f30 	svcne	0x00929f30
    2f08:	1fa41000 	svcne	0x00a41000
    2f0c:	00021000 	andeq	r1, r2, r0
    2f10:	1fa49f30 	svcne	0x00a49f30
    2f14:	1fb41000 	svcne	0x00b41000
    2f18:	00011000 	andeq	r1, r1, r0
    2f1c:	001fb450 	andseq	fp, pc, r0, asr r4	; <UNPREDICTABLE>
    2f20:	001fbe10 	andseq	fp, pc, r0, lsl lr	; <UNPREDICTABLE>
    2f24:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
    2f28:	10001fbe 			; <UNDEFINED> instruction: 0x10001fbe
    2f2c:	10001fc0 	andne	r1, r0, r0, asr #31
    2f30:	9f310002 	svcls	0x00310002
    2f34:	10001fc0 	andne	r1, r0, r0, asr #31
    2f38:	10001fc3 	andne	r1, r0, r3, asr #31
    2f3c:	c3500001 	cmpgt	r0, #1
    2f40:	d210001f 	andsle	r0, r0, #31
    2f44:	0110001f 	tsteq	r0, pc, lsl r0
    2f48:	00005500 	andeq	r5, r0, r0, lsl #10
	...
    2f54:	1f980000 	svcne	0x00980000
    2f58:	1fca1000 	svcne	0x00ca1000
    2f5c:	00011000 	andeq	r1, r1, r0
    2f60:	001fca56 	andseq	ip, pc, r6, asr sl	; <UNPREDICTABLE>
    2f64:	001fcc10 	andseq	ip, pc, r0, lsl ip	; <UNPREDICTABLE>
    2f68:	76000310 			; <UNDEFINED> instruction: 0x76000310
    2f6c:	00009f7f 	andeq	r9, r0, pc, ror pc
	...
    2f78:	10001fc4 	andne	r1, r0, r4, asr #31
    2f7c:	10001fd2 	ldrdne	r1, [r0], -r2
    2f80:	00500001 	subseq	r0, r0, r1
	...
    2f90:	02000000 	andeq	r0, r0, #0
    2f94:	00007d00 	andeq	r7, r0, r0, lsl #26
    2f98:	00000000 	andeq	r0, r0, r0
    2f9c:	02000000 	andeq	r0, r0, #0
    2fa0:	00047d00 	andeq	r7, r4, r0, lsl #26
    2fa4:	00000000 	andeq	r0, r0, r0
    2fa8:	02000000 	andeq	r0, r0, #0
    2fac:	00107d00 	andseq	r7, r0, r0, lsl #26
    2fb0:	00000000 	andeq	r0, r0, r0
    2fb4:	02000000 	andeq	r0, r0, #0
    2fb8:	00047d00 	andeq	r7, r4, r0, lsl #26
	...
    2fcc:	01000000 	mrseq	r0, (UNDEF: 0)
    2fd0:	00005000 	andeq	r5, r0, r0
    2fd4:	00000000 	andeq	r0, r0, r0
    2fd8:	00040000 	andeq	r0, r4, r0
    2fdc:	9f5001f3 	svcls	0x005001f3
	...
    2ff0:	007d0002 	rsbseq	r0, sp, r2
	...
    2ffc:	047d0002 	ldrbteq	r0, [sp], #-2
	...
    3008:	107d0002 	rsbsne	r0, sp, r2
	...
    3014:	047d0002 	ldrbteq	r0, [sp], #-2
	...
    302c:	00500001 	subseq	r0, r0, r1
    3030:	00000000 	andeq	r0, r0, r0
    3034:	04000000 	streq	r0, [r0], #-0
    3038:	5001f300 	andpl	pc, r1, r0, lsl #6
    303c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    3050:	01000000 	mrseq	r0, (UNDEF: 0)
    3054:	00005100 	andeq	r5, r0, r0, lsl #2
    3058:	00000000 	andeq	r0, r0, r0
    305c:	00010000 	andeq	r0, r1, r0
    3060:	00000052 	andeq	r0, r0, r2, asr r0
    3064:	00000000 	andeq	r0, r0, r0
    3068:	f3000400 	vshl.u8	d0, d0, d0
    306c:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
    307c:	02000000 	andeq	r0, r0, #0
    3080:	00007d00 	andeq	r7, r0, r0, lsl #26
    3084:	00000000 	andeq	r0, r0, r0
    3088:	02000000 	andeq	r0, r0, #0
    308c:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    30a8:	01000000 	mrseq	r0, (UNDEF: 0)
    30ac:	00005000 	andeq	r5, r0, r0
    30b0:	00000000 	andeq	r0, r0, r0
    30b4:	00040000 	andeq	r0, r4, r0
    30b8:	9f5001f3 	svcls	0x005001f3
	...
    30c4:	00500001 	subseq	r0, r0, r1
    30c8:	00000000 	andeq	r0, r0, r0
    30cc:	01000000 	mrseq	r0, (UNDEF: 0)
    30d0:	00005400 	andeq	r5, r0, r0, lsl #8
    30d4:	00000000 	andeq	r0, r0, r0
    30d8:	00010000 	andeq	r0, r1, r0
    30dc:	00000050 	andeq	r0, r0, r0, asr r0
    30e0:	00000000 	andeq	r0, r0, r0
    30e4:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    30f0:	00020200 	andeq	r0, r2, r0, lsl #4
	...
    3100:	00510001 	subseq	r0, r1, r1
    3104:	00000000 	andeq	r0, r0, r0
    3108:	04000000 	streq	r0, [r0], #-0
    310c:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    3110:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3114:	00000000 	andeq	r0, r0, r0
    3118:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    3124:	01f30004 	mvnseq	r0, r4
    3128:	00009f51 	andeq	r9, r0, r1, asr pc
    312c:	00000000 	andeq	r0, r0, r0
    3130:	02000000 	andeq	r0, r0, #0
    3134:	00000001 	andeq	r0, r0, r1
    3138:	00000000 	andeq	r0, r0, r0
    313c:	00020000 	andeq	r0, r2, r0
    3140:	00009f30 	andeq	r9, r0, r0, lsr pc
    3144:	00000000 	andeq	r0, r0, r0
    3148:	00020000 	andeq	r0, r2, r0
    314c:	00009f31 	andeq	r9, r0, r1, lsr pc
    3150:	00000000 	andeq	r0, r0, r0
    3154:	00030000 	andeq	r0, r3, r0
	...
    3168:	00010000 	andeq	r0, r1, r0
    316c:	00000050 	andeq	r0, r0, r0, asr r0
    3170:	00000000 	andeq	r0, r0, r0
    3174:	f3000400 	vshl.u8	d0, d0, d0
    3178:	009f5001 	addseq	r5, pc, r1
    317c:	00000000 	andeq	r0, r0, r0
    3180:	01000000 	mrseq	r0, (UNDEF: 0)
    3184:	00005000 	andeq	r5, r0, r0
    3188:	00000000 	andeq	r0, r0, r0
    318c:	00010000 	andeq	r0, r1, r0
    3190:	00000054 	andeq	r0, r0, r4, asr r0
    3194:	00000000 	andeq	r0, r0, r0
    3198:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    31a4:	00540001 	subseq	r0, r4, r1
	...
    31b4:	02000000 	andeq	r0, r0, #0
    31b8:	00007d00 	andeq	r7, r0, r0, lsl #26
    31bc:	00000000 	andeq	r0, r0, r0
    31c0:	02000000 	andeq	r0, r0, #0
    31c4:	00107d00 	andseq	r7, r0, r0, lsl #26
	...
    31e4:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    31f0:	00540001 	subseq	r0, r4, r1
    31f4:	00000000 	andeq	r0, r0, r0
    31f8:	04000000 	streq	r0, [r0], #-0
    31fc:	5001f300 	andpl	pc, r1, r0, lsl #6
    3200:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3204:	00000000 	andeq	r0, r0, r0
    3208:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    3214:	01f30004 	mvnseq	r0, r4
    3218:	00009f50 	andeq	r9, r0, r0, asr pc
    321c:	00000000 	andeq	r0, r0, r0
    3220:	00010000 	andeq	r0, r1, r0
    3224:	00000054 	andeq	r0, r0, r4, asr r0
    3228:	00000000 	andeq	r0, r0, r0
    322c:	f3000400 	vshl.u8	d0, d0, d0
    3230:	009f5001 	addseq	r5, pc, r1
	...
    3244:	01000000 	mrseq	r0, (UNDEF: 0)
    3248:	00005100 	andeq	r5, r0, r0, lsl #2
    324c:	00000000 	andeq	r0, r0, r0
    3250:	00010000 	andeq	r0, r1, r0
    3254:	00000055 	andeq	r0, r0, r5, asr r0
    3258:	00000000 	andeq	r0, r0, r0
    325c:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    3268:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    3274:	9f310002 	svcls	0x00310002
	...
    3288:	007d0002 	rsbseq	r0, sp, r2
	...
    3294:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    32ac:	00500001 	subseq	r0, r0, r1
    32b0:	00000000 	andeq	r0, r0, r0
    32b4:	04000000 	streq	r0, [r0], #-0
    32b8:	5001f300 	andpl	pc, r1, r0, lsl #6
    32bc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    32cc:	01000000 	mrseq	r0, (UNDEF: 0)
    32d0:	00005000 	andeq	r5, r0, r0
    32d4:	00000000 	andeq	r0, r0, r0
    32d8:	22280000 	eorcs	r0, r8, #0
    32dc:	222a1000 	eorcs	r1, sl, #0
    32e0:	00021000 	andeq	r1, r2, r0
    32e4:	222a007d 	eorcs	r0, sl, #125	; 0x7d
    32e8:	227a1000 	rsbscs	r1, sl, #0
    32ec:	00021000 	andeq	r1, r2, r0
    32f0:	0000107d 	andeq	r1, r0, sp, ror r0
	...
    32fc:	22280000 	eorcs	r0, r8, #0
    3300:	22331000 	eorscs	r1, r3, #0
    3304:	00011000 	andeq	r1, r1, r0
    3308:	00223350 	eoreq	r3, r2, r0, asr r3
    330c:	00227a10 	eoreq	r7, r2, r0, lsl sl
    3310:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
	...
    3320:	10002228 	andne	r2, r0, r8, lsr #4
    3324:	10002233 	andne	r2, r0, r3, lsr r2
    3328:	33510001 	cmpcc	r1, #1
    332c:	7a100022 	bvc	4033bc <__RAM_SIZE+0x3033bc>
    3330:	01100022 	tsteq	r0, r2, lsr #32
    3334:	00005500 	andeq	r5, r0, r0, lsl #10
	...
    3340:	22280000 	eorcs	r0, r8, #0
    3344:	22331000 	eorscs	r1, r3, #0
    3348:	00011000 	andeq	r1, r1, r0
    334c:	00223352 	eoreq	r3, r2, r2, asr r3
    3350:	00227a10 	eoreq	r7, r2, r0, lsl sl
    3354:	56000110 			; <UNDEFINED> instruction: 0x56000110
	...
    3360:	00000001 	andeq	r0, r0, r1
    3364:	10002230 	andne	r2, r0, r0, lsr r2
    3368:	10002233 	andne	r2, r0, r3, lsr r2
    336c:	33500001 	cmpcc	r0, #1
    3370:	7a100022 	bvc	403400 <__RAM_SIZE+0x303400>
    3374:	01100022 	tsteq	r0, r2, lsr #32
    3378:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    3390:	00010000 	andeq	r0, r1, r0
    3394:	00000050 	andeq	r0, r0, r0, asr r0
    3398:	00000000 	andeq	r0, r0, r0
    339c:	f3000400 	vshl.u8	d0, d0, d0
    33a0:	009f5001 	addseq	r5, pc, r1
    33a4:	00000000 	andeq	r0, r0, r0
    33a8:	01000000 	mrseq	r0, (UNDEF: 0)
    33ac:	00005000 	andeq	r5, r0, r0
    33b0:	00000000 	andeq	r0, r0, r0
    33b4:	00040000 	andeq	r0, r4, r0
    33b8:	9f5001f3 	svcls	0x005001f3
	...
    33cc:	00020000 	andeq	r0, r2, r0
    33d0:	00009f30 	andeq	r9, r0, r0, lsr pc
    33d4:	00000000 	andeq	r0, r0, r0
    33d8:	00030000 	andeq	r0, r3, r0
	...
    33e8:	00010000 	andeq	r0, r1, r0
    33ec:	00000050 	andeq	r0, r0, r0, asr r0
    33f0:	00000000 	andeq	r0, r0, r0
    33f4:	f3000400 	vshl.u8	d0, d0, d0
    33f8:	009f5001 	addseq	r5, pc, r1
    33fc:	00000000 	andeq	r0, r0, r0
    3400:	01000000 	mrseq	r0, (UNDEF: 0)
    3404:	00005000 	andeq	r5, r0, r0
    3408:	00000000 	andeq	r0, r0, r0
    340c:	00040000 	andeq	r0, r4, r0
    3410:	9f5001f3 	svcls	0x005001f3
	...
    3424:	007d0002 	rsbseq	r0, sp, r2
	...
    3430:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    344c:	00010000 	andeq	r0, r1, r0
    3450:	00000050 	andeq	r0, r0, r0, asr r0
    3454:	00000000 	andeq	r0, r0, r0
    3458:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    3464:	01f30004 	mvnseq	r0, r4
    3468:	00009f50 	andeq	r9, r0, r0, asr pc
    346c:	00000000 	andeq	r0, r0, r0
    3470:	00010000 	andeq	r0, r1, r0
    3474:	00000054 	andeq	r0, r0, r4, asr r0
    3478:	00000000 	andeq	r0, r0, r0
    347c:	f3000400 	vshl.u8	d0, d0, d0
    3480:	009f5001 	addseq	r5, pc, r1
	...
    3494:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    34b0:	00500001 	subseq	r0, r0, r1
    34b4:	00000000 	andeq	r0, r0, r0
    34b8:	04000000 	streq	r0, [r0], #-0
    34bc:	5001f300 	andpl	pc, r1, r0, lsl #6
    34c0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    34c4:	00000000 	andeq	r0, r0, r0
    34c8:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    34d4:	01f30004 	mvnseq	r0, r4
    34d8:	00009f50 	andeq	r9, r0, r0, asr pc
    34dc:	00000000 	andeq	r0, r0, r0
    34e0:	00030000 	andeq	r0, r3, r0
	...
    34f0:	00010000 	andeq	r0, r1, r0
    34f4:	00000050 	andeq	r0, r0, r0, asr r0
    34f8:	00000000 	andeq	r0, r0, r0
    34fc:	f3000400 	vshl.u8	d0, d0, d0
    3500:	009f5001 	addseq	r5, pc, r1
    3504:	00000000 	andeq	r0, r0, r0
    3508:	01000000 	mrseq	r0, (UNDEF: 0)
    350c:	00005000 	andeq	r5, r0, r0
    3510:	00000000 	andeq	r0, r0, r0
    3514:	00040000 	andeq	r0, r4, r0
    3518:	9f5001f3 	svcls	0x005001f3
	...
    3524:	10001ec6 	andne	r1, r0, r6, asr #29
    3528:	10001ec8 	andne	r1, r0, r8, asr #29
    352c:	007d0002 	rsbseq	r0, sp, r2
    3530:	10001ec8 	andne	r1, r0, r8, asr #29
    3534:	10001ee0 	andne	r1, r0, r0, ror #29
    3538:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    354c:	1ec60000 	cdpne	0, 12, cr0, cr6, cr0, {0}
    3550:	1ecd1000 	cdpne	0, 12, cr1, cr13, cr0, {0}
    3554:	00011000 	andeq	r1, r1, r0
    3558:	001ecd50 	andseq	ip, lr, r0, asr sp
    355c:	001ed410 	andseq	sp, lr, r0, lsl r4
    3560:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    3564:	10001ed4 	ldrdne	r1, [r0], -r4
    3568:	10001edc 	ldrdne	r1, [r0], -ip
    356c:	01f30004 	mvnseq	r0, r4
    3570:	1edc9f50 	mrcne	15, 6, r9, cr12, cr0, {2}
    3574:	1ede1000 	cdpne	0, 13, cr1, cr14, cr0, {0}
    3578:	00011000 	andeq	r1, r1, r0
    357c:	001ede54 	andseq	sp, lr, r4, asr lr
    3580:	001ee010 	andseq	lr, lr, r0, lsl r0
    3584:	f3000410 	vqshl.u8	d0, d0, d0
    3588:	009f5001 	addseq	r5, pc, r1
	...
    3594:	001ed400 	andseq	sp, lr, r0, lsl #8
    3598:	001edc10 	andseq	sp, lr, r0, lsl ip
    359c:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
	...
    35a8:	10001fd2 	ldrdne	r1, [r0], -r2
    35ac:	10001fd4 	ldrdne	r1, [r0], -r4
    35b0:	007d0002 	rsbseq	r0, sp, r2
    35b4:	10001fd4 	ldrdne	r1, [r0], -r4
    35b8:	10002054 	andne	r2, r0, r4, asr r0
    35bc:	107d0002 	rsbsne	r0, sp, r2
	...
    35cc:	10001fd2 	ldrdne	r1, [r0], -r2
    35d0:	10001fd9 	ldrdne	r1, [r0], -r9
    35d4:	d9500001 	ldmdble	r0, {r0}^
    35d8:	5410001f 	ldrpl	r0, [r0], #-31	; 0xffffffe1
    35dc:	01100020 	tsteq	r0, r0, lsr #32
    35e0:	00005500 	andeq	r5, r0, r0, lsl #10
	...
    35ec:	1fe00000 	svcne	0x00e00000
    35f0:	1ff21000 	svcne	0x00f21000
    35f4:	00011000 	andeq	r1, r1, r0
    35f8:	001ff454 	andseq	pc, pc, r4, asr r4	; <UNPREDICTABLE>
    35fc:	00202610 	eoreq	r2, r0, r0, lsl r6
    3600:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
	...
    3610:	10002028 	andne	r2, r0, r8, lsr #32
    3614:	1000202c 	andne	r2, r0, ip, lsr #32
    3618:	2e540001 	cdpcs	0, 5, cr0, cr4, cr1, {0}
    361c:	54100020 	ldrpl	r0, [r0], #-32	; 0xffffffe0
    3620:	01100020 	tsteq	r0, r0, lsr #32
    3624:	00005400 	andeq	r5, r0, r0, lsl #8
    3628:	00000000 	andeq	r0, r0, r0
    362c:	1f560000 	svcne	0x00560000
    3630:	1f5e1000 	svcne	0x005e1000
    3634:	00021000 	andeq	r1, r2, r0
    3638:	1f5e007d 	svcne	0x005e007d
    363c:	1f781000 	svcne	0x00781000
    3640:	00021000 	andeq	r1, r2, r0
    3644:	1f78087d 	svcne	0x0078087d
    3648:	1f7a1000 	svcne	0x007a1000
    364c:	00021000 	andeq	r1, r2, r0
    3650:	0000007d 	andeq	r0, r0, sp, ror r0
	...
    3660:	1f560000 	svcne	0x00560000
    3664:	1f601000 	svcne	0x00601000
    3668:	00011000 	andeq	r1, r1, r0
    366c:	001f6050 	andseq	r6, pc, r0, asr r0	; <UNPREDICTABLE>
    3670:	001f7510 	andseq	r7, pc, r0, lsl r5	; <UNPREDICTABLE>
    3674:	53000110 	movwpl	r0, #272	; 0x110
    3678:	10001f75 	andne	r1, r0, r5, ror pc
    367c:	10001f78 	andne	r1, r0, r8, ror pc
    3680:	01f30004 	mvnseq	r0, r4
    3684:	1f789f50 	svcne	0x00789f50
    3688:	1f7a1000 	svcne	0x007a1000
    368c:	00011000 	andeq	r1, r1, r0
    3690:	00000050 	andeq	r0, r0, r0, asr r0
	...
    36a0:	001f5600 	andseq	r5, pc, r0, lsl #12
    36a4:	001f6210 	andseq	r6, pc, r0, lsl r2	; <UNPREDICTABLE>
    36a8:	51000110 	tstpl	r0, r0, lsl r1
    36ac:	10001f62 	andne	r1, r0, r2, ror #30
    36b0:	10001f75 	andne	r1, r0, r5, ror pc
    36b4:	75500001 	ldrbvc	r0, [r0, #-1]
    36b8:	7810001f 	ldmdavc	r0, {r0, r1, r2, r3, r4}
    36bc:	0410001f 	ldreq	r0, [r0], #-31	; 0xffffffe1
    36c0:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    36c4:	001f789f 	mulseq	pc, pc, r8	; <UNPREDICTABLE>
    36c8:	001f7a10 	andseq	r7, pc, r0, lsl sl	; <UNPREDICTABLE>
    36cc:	51000110 	tstpl	r0, r0, lsl r1
	...
    36d8:	10001ee0 	andne	r1, r0, r0, ror #29
    36dc:	10001ee2 	andne	r1, r0, r2, ror #29
    36e0:	007d0002 	rsbseq	r0, sp, r2
    36e4:	10001ee2 	andne	r1, r0, r2, ror #29
    36e8:	10001f56 	andne	r1, r0, r6, asr pc
    36ec:	107d0002 	rsbsne	r0, sp, r2
	...
    3708:	10001ee0 	andne	r1, r0, r0, ror #29
    370c:	10001ef2 	strdne	r1, [r0], -r2
    3710:	f2500001 	vhadd.s16	d16, d0, d1
    3714:	f810001e 			; <UNDEFINED> instruction: 0xf810001e
    3718:	0110001e 	tsteq	r0, lr, lsl r0
    371c:	1ef85400 	cdpne	4, 15, cr5, cr8, cr0, {0}
    3720:	1efa1000 	cdpne	0, 15, cr1, cr10, cr0, {0}
    3724:	00011000 	andeq	r1, r1, r0
    3728:	001efa50 	andseq	pc, lr, r0, asr sl	; <UNPREDICTABLE>
    372c:	001f0410 	andseq	r0, pc, r0, lsl r4	; <UNPREDICTABLE>
    3730:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    3734:	10001f04 	andne	r1, r0, r4, lsl #30
    3738:	10001f08 	andne	r1, r0, r8, lsl #30
    373c:	08500001 	ldmdaeq	r0, {r0}^
    3740:	2210001f 	andscs	r0, r0, #31
    3744:	0110001f 	tsteq	r0, pc, lsl r0
    3748:	1f225400 	svcne	0x00225400
    374c:	1f241000 	svcne	0x00241000
    3750:	00011000 	andeq	r1, r1, r0
    3754:	001f2450 	andseq	r2, pc, r0, asr r4	; <UNPREDICTABLE>
    3758:	001f5610 	andseq	r5, pc, r0, lsl r6	; <UNPREDICTABLE>
    375c:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
	...
    3778:	10001ee0 	andne	r1, r0, r0, ror #29
    377c:	10001ef2 	strdne	r1, [r0], -r2
    3780:	f2510001 	vhadd.s16	d16, d1, d1
    3784:	f810001e 			; <UNDEFINED> instruction: 0xf810001e
    3788:	0410001e 	ldreq	r0, [r0], #-30	; 0xffffffe2
    378c:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    3790:	001ef89f 	mulseq	lr, pc, r8	; <UNPREDICTABLE>
    3794:	001efd10 	andseq	pc, lr, r0, lsl sp	; <UNPREDICTABLE>
    3798:	51000110 	tstpl	r0, r0, lsl r1
    379c:	10001efd 	strdne	r1, [r0], -sp
    37a0:	10001f04 	andne	r1, r0, r4, lsl #30
    37a4:	01f30004 	mvnseq	r0, r4
    37a8:	1f049f51 	svcne	0x00049f51
    37ac:	1f0b1000 	svcne	0x000b1000
    37b0:	00011000 	andeq	r1, r1, r0
    37b4:	001f0b51 	andseq	r0, pc, r1, asr fp	; <UNPREDICTABLE>
    37b8:	001f2210 	andseq	r2, pc, r0, lsl r2	; <UNPREDICTABLE>
    37bc:	f3000410 	vqshl.u8	d0, d0, d0
    37c0:	229f5101 	addscs	r5, pc, #1073741824	; 0x40000000
    37c4:	2710001f 			; <UNDEFINED> instruction: 0x2710001f
    37c8:	0110001f 	tsteq	r0, pc, lsl r0
    37cc:	1f275100 	svcne	0x00275100
    37d0:	1f561000 	svcne	0x00561000
    37d4:	00041000 	andeq	r1, r4, r0
    37d8:	9f5101f3 	svcls	0x005101f3
	...
    37e8:	10001ee0 	andne	r1, r0, r0, ror #29
    37ec:	10001eea 	andne	r1, r0, sl, ror #29
    37f0:	ea520001 	b	14837fc <__RAM_SIZE+0x13837fc>
    37f4:	5610001e 			; <UNDEFINED> instruction: 0x5610001e
    37f8:	0110001f 	tsteq	r0, pc, lsl r0
    37fc:	00005500 	andeq	r5, r0, r0, lsl #10
    3800:	00000000 	andeq	r0, r0, r0
    3804:	00010000 	andeq	r0, r1, r0
	...
    3810:	10001ee6 	andne	r1, r0, r6, ror #29
    3814:	10001ef2 	strdne	r1, [r0], -r2
    3818:	9f300002 	svcls	0x00300002
    381c:	10001ef2 	strdne	r1, [r0], -r2
    3820:	10001ef8 	strdne	r1, [r0], -r8
    3824:	f8500001 			; <UNDEFINED> instruction: 0xf8500001
    3828:	fe10001e 	mrc2	0, 0, r0, cr0, cr14, {0}
    382c:	0210001e 	andseq	r0, r0, #30
    3830:	fe9f3000 	cdp2	0, 9, cr3, cr15, cr0, {0}
    3834:	0410001e 	ldreq	r0, [r0], #-30	; 0xffffffe2
    3838:	0110001f 	tsteq	r0, pc, lsl r0
    383c:	1f045000 	svcne	0x00045000
    3840:	1f561000 	svcne	0x00561000
    3844:	00021000 	andeq	r1, r2, r0
    3848:	00009f30 	andeq	r9, r0, r0, lsr pc
	...
    3858:	10001ee8 	andne	r1, r0, r8, ror #29
    385c:	10001ef4 	strdne	r1, [r0], -r4
    3860:	f4560001 			; <UNDEFINED> instruction: 0xf4560001
    3864:	f810001e 			; <UNDEFINED> instruction: 0xf810001e
    3868:	0310001e 	tsteq	r0, #30
    386c:	9f7f7600 	svcls	0x007f7600
    3870:	10001ef8 	strdne	r1, [r0], -r8
    3874:	10001f56 	andne	r1, r0, r6, asr pc
    3878:	00560001 	subseq	r0, r6, r1
	...
    3890:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    389c:	00530001 	subseq	r0, r3, r1
    38a0:	00000000 	andeq	r0, r0, r0
    38a4:	04000000 	streq	r0, [r0], #-0
    38a8:	5001f300 	andpl	pc, r1, r0, lsl #6
    38ac:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    38b0:	00000000 	andeq	r0, r0, r0
    38b4:	00010000 	andeq	r0, r1, r0
    38b8:	00000000 	andeq	r0, r0, r0
    38bc:	01000000 	mrseq	r0, (UNDEF: 0)
    38c0:	00005000 	andeq	r5, r0, r0
	...
    38d4:	00010000 	andeq	r0, r1, r0
    38d8:	00000050 	andeq	r0, r0, r0, asr r0
    38dc:	00000000 	andeq	r0, r0, r0
    38e0:	f3000400 	vshl.u8	d0, d0, d0
    38e4:	009f5001 	addseq	r5, pc, r1
	...
    38f8:	01000000 	mrseq	r0, (UNDEF: 0)
    38fc:	00005000 	andeq	r5, r0, r0
    3900:	00000000 	andeq	r0, r0, r0
    3904:	00040000 	andeq	r0, r4, r0
    3908:	9f5001f3 	svcls	0x005001f3
	...
    391c:	007d0002 	rsbseq	r0, sp, r2
	...
    3928:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    3944:	00500001 	subseq	r0, r0, r1
    3948:	00000000 	andeq	r0, r0, r0
    394c:	04000000 	streq	r0, [r0], #-0
    3950:	5001f300 	andpl	pc, r1, r0, lsl #6
    3954:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3958:	00000000 	andeq	r0, r0, r0
    395c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    3968:	01f30004 	mvnseq	r0, r4
    396c:	00009f50 	andeq	r9, r0, r0, asr pc
    3970:	00000000 	andeq	r0, r0, r0
    3974:	00010000 	andeq	r0, r1, r0
	...
    3984:	00010000 	andeq	r0, r1, r0
    3988:	00000050 	andeq	r0, r0, r0, asr r0
    398c:	00000000 	andeq	r0, r0, r0
    3990:	f3000400 	vshl.u8	d0, d0, d0
    3994:	009f5001 	addseq	r5, pc, r1
    3998:	00000000 	andeq	r0, r0, r0
    399c:	01000000 	mrseq	r0, (UNDEF: 0)
    39a0:	00005000 	andeq	r5, r0, r0
    39a4:	00000000 	andeq	r0, r0, r0
    39a8:	00040000 	andeq	r0, r4, r0
    39ac:	9f5001f3 	svcls	0x005001f3
	...
    39c4:	00500001 	subseq	r0, r0, r1
    39c8:	00000000 	andeq	r0, r0, r0
    39cc:	04000000 	streq	r0, [r0], #-0
    39d0:	5001f300 	andpl	pc, r1, r0, lsl #6
    39d4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    39e4:	01000000 	mrseq	r0, (UNDEF: 0)
    39e8:	00005000 	andeq	r5, r0, r0
    39ec:	00000000 	andeq	r0, r0, r0
    39f0:	00030000 	andeq	r0, r3, r0
	...
    39fc:	00010000 	andeq	r0, r1, r0
    3a00:	00000050 	andeq	r0, r0, r0, asr r0
    3a04:	00000000 	andeq	r0, r0, r0
    3a08:	f3000400 	vshl.u8	d0, d0, d0
    3a0c:	009f5001 	addseq	r5, pc, r1
	...
    3a1c:	02000000 	andeq	r0, r0, #0
    3a20:	00007d00 	andeq	r7, r0, r0, lsl #26
    3a24:	00000000 	andeq	r0, r0, r0
    3a28:	02000000 	andeq	r0, r0, #0
    3a2c:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    3a44:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    3a50:	00540001 	subseq	r0, r4, r1
    3a54:	00000000 	andeq	r0, r0, r0
    3a58:	04000000 	streq	r0, [r0], #-0
    3a5c:	5001f300 	andpl	pc, r1, r0, lsl #6
    3a60:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    3a70:	01000000 	mrseq	r0, (UNDEF: 0)
    3a74:	00005400 	andeq	r5, r0, r0, lsl #8
    3a78:	00000000 	andeq	r0, r0, r0
    3a7c:	00020000 	andeq	r0, r2, r0
	...
    3a8c:	00500001 	subseq	r0, r0, r1
    3a90:	00000000 	andeq	r0, r0, r0
    3a94:	01000000 	mrseq	r0, (UNDEF: 0)
    3a98:	00005400 	andeq	r5, r0, r0, lsl #8
    3a9c:	00000000 	andeq	r0, r0, r0
    3aa0:	00040000 	andeq	r0, r4, r0
    3aa4:	9f5001f3 	svcls	0x005001f3
	...
    3ab8:	007d0002 	rsbseq	r0, sp, r2
	...
    3ac4:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    3adc:	00010000 	andeq	r0, r1, r0
    3ae0:	00000050 	andeq	r0, r0, r0, asr r0
    3ae4:	00000000 	andeq	r0, r0, r0
    3ae8:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    3af4:	01f30004 	mvnseq	r0, r4
    3af8:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    3b0c:	00540001 	subseq	r0, r4, r1
	...
    3b1c:	02000000 	andeq	r0, r0, #0
    3b20:	00007d00 	andeq	r7, r0, r0, lsl #26
    3b24:	00000000 	andeq	r0, r0, r0
    3b28:	02000000 	andeq	r0, r0, #0
    3b2c:	00187d00 	andseq	r7, r8, r0, lsl #26
	...
    3b48:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    3b54:	00540001 	subseq	r0, r4, r1
    3b58:	00000000 	andeq	r0, r0, r0
    3b5c:	04000000 	streq	r0, [r0], #-0
    3b60:	5001f300 	andpl	pc, r1, r0, lsl #6
    3b64:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3b68:	00000000 	andeq	r0, r0, r0
    3b6c:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    3b78:	01f30004 	mvnseq	r0, r4
    3b7c:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    3b90:	00010000 	andeq	r0, r1, r0
    3b94:	00000051 	andeq	r0, r0, r1, asr r0
    3b98:	00000000 	andeq	r0, r0, r0
    3b9c:	56000100 	strpl	r0, [r0], -r0, lsl #2
	...
    3ba8:	00010000 	andeq	r0, r1, r0
	...
    3bb4:	00540001 	subseq	r0, r4, r1
    3bb8:	00000000 	andeq	r0, r0, r0
    3bbc:	02000000 	andeq	r0, r0, #0
    3bc0:	009f3100 	addseq	r3, pc, r0, lsl #2
	...
    3bd8:	01000000 	mrseq	r0, (UNDEF: 0)
    3bdc:	00005000 	andeq	r5, r0, r0
    3be0:	00000000 	andeq	r0, r0, r0
    3be4:	00010000 	andeq	r0, r1, r0
    3be8:	00000055 	andeq	r0, r0, r5, asr r0
    3bec:	00000000 	andeq	r0, r0, r0
    3bf0:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    3bfc:	00550001 	subseq	r0, r5, r1
	...
    3c10:	57000100 	strpl	r0, [r0, -r0, lsl #2]
	...
    3c1c:	00000004 	andeq	r0, r0, r4
	...
    3c2c:	00010000 	andeq	r0, r1, r0
    3c30:	00000050 	andeq	r0, r0, r0, asr r0
    3c34:	00000000 	andeq	r0, r0, r0
    3c38:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    3c44:	01f30004 	mvnseq	r0, r4
    3c48:	00009f50 	andeq	r9, r0, r0, asr pc
    3c4c:	00000000 	andeq	r0, r0, r0
    3c50:	00010000 	andeq	r0, r1, r0
    3c54:	00000054 	andeq	r0, r0, r4, asr r0
    3c58:	00000000 	andeq	r0, r0, r0
    3c5c:	f3000400 	vshl.u8	d0, d0, d0
    3c60:	009f5001 	addseq	r5, pc, r1
	...
    3c70:	02000000 	andeq	r0, r0, #0
    3c74:	00007d00 	andeq	r7, r0, r0, lsl #26
    3c78:	00000000 	andeq	r0, r0, r0
    3c7c:	02000000 	andeq	r0, r0, #0
    3c80:	00207d00 	eoreq	r7, r0, r0, lsl #26
	...
    3cb0:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    3cbc:	00540001 	subseq	r0, r4, r1
    3cc0:	00000000 	andeq	r0, r0, r0
    3cc4:	04000000 	streq	r0, [r0], #-0
    3cc8:	5001f300 	andpl	pc, r1, r0, lsl #6
    3ccc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3cd0:	00000000 	andeq	r0, r0, r0
    3cd4:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    3ce0:	01f30004 	mvnseq	r0, r4
    3ce4:	00009f50 	andeq	r9, r0, r0, asr pc
    3ce8:	00000000 	andeq	r0, r0, r0
    3cec:	00010000 	andeq	r0, r1, r0
    3cf0:	00000054 	andeq	r0, r0, r4, asr r0
    3cf4:	00000000 	andeq	r0, r0, r0
    3cf8:	f3000400 	vshl.u8	d0, d0, d0
    3cfc:	009f5001 	addseq	r5, pc, r1
    3d00:	00000000 	andeq	r0, r0, r0
    3d04:	01000000 	mrseq	r0, (UNDEF: 0)
    3d08:	00005400 	andeq	r5, r0, r0, lsl #8
    3d0c:	00000000 	andeq	r0, r0, r0
    3d10:	00040000 	andeq	r0, r4, r0
    3d14:	9f5001f3 	svcls	0x005001f3
	...
    3d20:	00540001 	subseq	r0, r4, r1
    3d24:	00000000 	andeq	r0, r0, r0
    3d28:	04000000 	streq	r0, [r0], #-0
    3d2c:	5001f300 	andpl	pc, r1, r0, lsl #6
    3d30:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3d34:	00000000 	andeq	r0, r0, r0
    3d38:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    3d44:	01f30004 	mvnseq	r0, r4
    3d48:	00009f50 	andeq	r9, r0, r0, asr pc
    3d4c:	00000000 	andeq	r0, r0, r0
    3d50:	00010000 	andeq	r0, r1, r0
    3d54:	00000054 	andeq	r0, r0, r4, asr r0
    3d58:	00000000 	andeq	r0, r0, r0
    3d5c:	f3000400 	vshl.u8	d0, d0, d0
    3d60:	009f5001 	addseq	r5, pc, r1
	...
    3d74:	01000000 	mrseq	r0, (UNDEF: 0)
    3d78:	00005100 	andeq	r5, r0, r0, lsl #2
    3d7c:	00000000 	andeq	r0, r0, r0
    3d80:	00010000 	andeq	r0, r1, r0
    3d84:	00000057 	andeq	r0, r0, r7, asr r0
	...
    3d98:	52000100 	andpl	r0, r0, #0, 2
	...
    3da4:	00580001 	subseq	r0, r8, r1
	...
    3db8:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    3dd4:	00500001 	subseq	r0, r0, r1
    3dd8:	00000000 	andeq	r0, r0, r0
    3ddc:	01000000 	mrseq	r0, (UNDEF: 0)
    3de0:	00005500 	andeq	r5, r0, r0, lsl #10
    3de4:	00000000 	andeq	r0, r0, r0
    3de8:	00010000 	andeq	r0, r1, r0
    3dec:	00000050 	andeq	r0, r0, r0, asr r0
    3df0:	00000000 	andeq	r0, r0, r0
    3df4:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    3e00:	00000003 	andeq	r0, r0, r3
	...
    3e24:	00010000 	andeq	r0, r1, r0
    3e28:	00000050 	andeq	r0, r0, r0, asr r0
    3e2c:	00000000 	andeq	r0, r0, r0
    3e30:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    3e3c:	01f30004 	mvnseq	r0, r4
    3e40:	00009f50 	andeq	r9, r0, r0, asr pc
    3e44:	00000000 	andeq	r0, r0, r0
    3e48:	00010000 	andeq	r0, r1, r0
    3e4c:	00000054 	andeq	r0, r0, r4, asr r0
    3e50:	00000000 	andeq	r0, r0, r0
    3e54:	f3000400 	vshl.u8	d0, d0, d0
    3e58:	009f5001 	addseq	r5, pc, r1
    3e5c:	00000000 	andeq	r0, r0, r0
    3e60:	01000000 	mrseq	r0, (UNDEF: 0)
    3e64:	00005400 	andeq	r5, r0, r0, lsl #8
    3e68:	00000000 	andeq	r0, r0, r0
    3e6c:	00040000 	andeq	r0, r4, r0
    3e70:	9f5001f3 	svcls	0x005001f3
	...
    3e7c:	00540001 	subseq	r0, r4, r1
    3e80:	00000000 	andeq	r0, r0, r0
    3e84:	04000000 	streq	r0, [r0], #-0
    3e88:	5001f300 	andpl	pc, r1, r0, lsl #6
    3e8c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3e90:	00000000 	andeq	r0, r0, r0
    3e94:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    3ea0:	01f30004 	mvnseq	r0, r4
    3ea4:	00009f50 	andeq	r9, r0, r0, asr pc
    3ea8:	00000000 	andeq	r0, r0, r0
    3eac:	00010000 	andeq	r0, r1, r0
    3eb0:	00000054 	andeq	r0, r0, r4, asr r0
    3eb4:	00000000 	andeq	r0, r0, r0
    3eb8:	f3000400 	vshl.u8	d0, d0, d0
    3ebc:	009f5001 	addseq	r5, pc, r1
    3ec0:	00000000 	andeq	r0, r0, r0
    3ec4:	01000000 	mrseq	r0, (UNDEF: 0)
    3ec8:	00005400 	andeq	r5, r0, r0, lsl #8
    3ecc:	00000000 	andeq	r0, r0, r0
    3ed0:	00040000 	andeq	r0, r4, r0
    3ed4:	9f5001f3 	svcls	0x005001f3
	...
    3eec:	00010000 	andeq	r0, r1, r0
    3ef0:	00000056 	andeq	r0, r0, r6, asr r0
    3ef4:	00000000 	andeq	r0, r0, r0
    3ef8:	56000100 	strpl	r0, [r0], -r0, lsl #2
	...
    3f04:	01760003 	cmneq	r6, r3
    3f08:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    3f1c:	01000000 	mrseq	r0, (UNDEF: 0)
    3f20:	00005900 	andeq	r5, r0, r0, lsl #18
    3f24:	00000000 	andeq	r0, r0, r0
    3f28:	00030000 	andeq	r0, r3, r0
    3f2c:	009f7f79 	addseq	r7, pc, r9, ror pc	; <UNPREDICTABLE>
    3f30:	00000000 	andeq	r0, r0, r0
    3f34:	01000000 	mrseq	r0, (UNDEF: 0)
    3f38:	00005900 	andeq	r5, r0, r0, lsl #18
	...
    3f4c:	00010000 	andeq	r0, r1, r0
    3f50:	00000050 	andeq	r0, r0, r0, asr r0
    3f54:	00000000 	andeq	r0, r0, r0
    3f58:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    3f6c:	007d0002 	rsbseq	r0, sp, r2
	...
    3f78:	107d0002 	rsbsne	r0, sp, r2
	...
    3f84:	207d0002 	rsbscs	r0, sp, r2
	...
    3f90:	107d0002 	rsbsne	r0, sp, r2
	...
    3f9c:	207d0002 	rsbscs	r0, sp, r2
	...
    3fb4:	00500001 	subseq	r0, r0, r1
    3fb8:	00000000 	andeq	r0, r0, r0
    3fbc:	01000000 	mrseq	r0, (UNDEF: 0)
    3fc0:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    3fd4:	00010000 	andeq	r0, r1, r0
    3fd8:	00000051 	andeq	r0, r0, r1, asr r0
    3fdc:	00000000 	andeq	r0, r0, r0
    3fe0:	56000100 	strpl	r0, [r0], -r0, lsl #2
	...
    3ff4:	00010000 	andeq	r0, r1, r0
    3ff8:	00000052 	andeq	r0, r0, r2, asr r0
    3ffc:	00000000 	andeq	r0, r0, r0
    4000:	00000100 	andeq	r0, r0, r0, lsl #2
    4004:	01010000 	mrseq	r0, (UNDEF: 1)
	...
    4010:	02000000 	andeq	r0, r0, #0
    4014:	009f3000 	addseq	r3, pc, r0
    4018:	00000000 	andeq	r0, r0, r0
    401c:	01000000 	mrseq	r0, (UNDEF: 0)
    4020:	00005500 	andeq	r5, r0, r0, lsl #10
    4024:	00000000 	andeq	r0, r0, r0
    4028:	00010000 	andeq	r0, r1, r0
    402c:	00000055 	andeq	r0, r0, r5, asr r0
    4030:	00000000 	andeq	r0, r0, r0
    4034:	31000200 	mrscc	r0, R8_usr
    4038:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    403c:	00000000 	andeq	r0, r0, r0
    4040:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    4058:	00550001 	subseq	r0, r5, r1
    405c:	00000000 	andeq	r0, r0, r0
    4060:	01000000 	mrseq	r0, (UNDEF: 0)
    4064:	00005500 	andeq	r5, r0, r0, lsl #10
    4068:	00000000 	andeq	r0, r0, r0
    406c:	00040000 	andeq	r0, r4, r0
	...
    4078:	00010000 	andeq	r0, r1, r0
    407c:	00000050 	andeq	r0, r0, r0, asr r0
    4080:	00000000 	andeq	r0, r0, r0
    4084:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    409c:	00530001 	subseq	r0, r3, r1
    40a0:	00000000 	andeq	r0, r0, r0
    40a4:	01000000 	mrseq	r0, (UNDEF: 0)
    40a8:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    40b8:	00020000 	andeq	r0, r2, r0
    40bc:	0000007d 	andeq	r0, r0, sp, ror r0
    40c0:	00000000 	andeq	r0, r0, r0
    40c4:	00020000 	andeq	r0, r2, r0
    40c8:	0000107d 	andeq	r1, r0, sp, ror r0
    40cc:	00000000 	andeq	r0, r0, r0
    40d0:	00020000 	andeq	r0, r2, r0
    40d4:	0000207d 	andeq	r2, r0, sp, ror r0
    40d8:	00000000 	andeq	r0, r0, r0
    40dc:	00020000 	andeq	r0, r2, r0
    40e0:	0000107d 	andeq	r1, r0, sp, ror r0
    40e4:	00000000 	andeq	r0, r0, r0
    40e8:	00020000 	andeq	r0, r2, r0
    40ec:	0000207d 	andeq	r2, r0, sp, ror r0
	...
    4100:	00010000 	andeq	r0, r1, r0
    4104:	00000050 	andeq	r0, r0, r0, asr r0
    4108:	00000000 	andeq	r0, r0, r0
    410c:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    4120:	00010000 	andeq	r0, r1, r0
    4124:	00000051 	andeq	r0, r0, r1, asr r0
    4128:	00000000 	andeq	r0, r0, r0
    412c:	00000100 	andeq	r0, r0, r0, lsl #2
    4130:	00000101 	andeq	r0, r0, r1, lsl #2
	...
    413c:	30000200 	andcc	r0, r0, r0, lsl #4
    4140:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4144:	00000000 	andeq	r0, r0, r0
    4148:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    4154:	9f310002 	svcls	0x00310002
	...
    4160:	00550001 	subseq	r0, r5, r1
    4164:	00000000 	andeq	r0, r0, r0
    4168:	03000000 	movweq	r0, #0
	...
    4174:	01000000 	mrseq	r0, (UNDEF: 0)
    4178:	00005000 	andeq	r5, r0, r0
    417c:	00000000 	andeq	r0, r0, r0
    4180:	00010000 	andeq	r0, r1, r0
    4184:	00000054 	andeq	r0, r0, r4, asr r0
    4188:	00000000 	andeq	r0, r0, r0
    418c:	00000400 	andeq	r0, r0, r0, lsl #8
	...
    419c:	30000200 	andcc	r0, r0, r0, lsl #4
    41a0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    41a4:	00000000 	andeq	r0, r0, r0
    41a8:	56000100 	strpl	r0, [r0], -r0, lsl #2
	...
    41b4:	00500001 	subseq	r0, r0, r1
    41b8:	00000000 	andeq	r0, r0, r0
    41bc:	01000000 	mrseq	r0, (UNDEF: 0)
    41c0:	00005600 	andeq	r5, r0, r0, lsl #12
	...
    41dc:	00530001 	subseq	r0, r3, r1
    41e0:	00000000 	andeq	r0, r0, r0
    41e4:	03000000 	movweq	r0, #0
    41e8:	9f017300 	svcls	0x00017300
	...
    41f4:	c8740007 	ldmdagt	r4!, {r0, r1, r2}^
    41f8:	01230600 			; <UNDEFINED> instruction: 0x01230600
    41fc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4200:	00000000 	andeq	r0, r0, r0
    4204:	74000700 	strvc	r0, [r0], #-1792	; 0xfffff900
    4208:	230600c8 	movwcs	r0, #24776	; 0x60c8
    420c:	00009f01 	andeq	r9, r0, r1, lsl #30
    4210:	00000000 	andeq	r0, r0, r0
    4214:	00010000 	andeq	r0, r1, r0
    4218:	00000053 	andeq	r0, r0, r3, asr r0
	...
    422c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    4238:	00510001 	subseq	r0, r1, r1
    423c:	00000000 	andeq	r0, r0, r0
    4240:	38000000 	stmdacc	r0, {}	; <UNPREDICTABLE>
    4244:	3a100021 	bcc	4042d0 <__RAM_SIZE+0x3042d0>
    4248:	02100021 	andseq	r0, r0, #33	; 0x21
    424c:	3a007d00 	bcc	23654 <__HEAP_SIZE+0x22654>
    4250:	3c100021 	ldccc	0, cr0, [r0], {33}	; 0x21
    4254:	02100021 	andseq	r0, r0, #33	; 0x21
    4258:	3c147d00 	ldccc	13, cr7, [r4], {-0}
    425c:	5e100021 	cdppl	0, 1, cr0, cr0, cr1, {1}
    4260:	02100021 	andseq	r0, r0, #33	; 0x21
    4264:	5e287d00 	cdppl	13, 2, cr7, cr8, cr0, {0}
    4268:	60100021 	andsvs	r0, r0, r1, lsr #32
    426c:	02100021 	andseq	r0, r0, #33	; 0x21
    4270:	60147d00 	andsvs	r7, r4, r0, lsl #26
    4274:	28100021 	ldmdacs	r0, {r0, r5}
    4278:	02100022 	andseq	r0, r0, #34	; 0x22
    427c:	00287d00 	eoreq	r7, r8, r0, lsl #26
	...
    4288:	38000000 	stmdacc	r0, {}	; <UNPREDICTABLE>
    428c:	46100021 	ldrmi	r0, [r0], -r1, lsr #32
    4290:	01100021 	tsteq	r0, r1, lsr #32
    4294:	21465000 	mrscs	r5, (UNDEF: 70)
    4298:	22281000 	eorcs	r1, r8, #0
    429c:	00011000 	andeq	r1, r1, r0
    42a0:	00000054 	andeq	r0, r0, r4, asr r0
	...
    42ac:	00213800 	eoreq	r3, r1, r0, lsl #16
    42b0:	00214610 	eoreq	r4, r1, r0, lsl r6
    42b4:	51000110 	tstpl	r0, r0, lsl r1
    42b8:	10002146 	andne	r2, r0, r6, asr #2
    42bc:	10002228 	andne	r2, r0, r8, lsr #4
    42c0:	00570001 	subseq	r0, r7, r1
	...
    42cc:	00213800 	eoreq	r3, r1, r0, lsl #16
    42d0:	00214610 	eoreq	r4, r1, r0, lsl r6
    42d4:	52000110 	andpl	r0, r0, #16, 2
	...
    42e0:	01000001 	tsteq	r0, r1
    42e4:	00000001 	andeq	r0, r0, r1
    42e8:	10002142 	andne	r2, r0, r2, asr #2
    42ec:	10002146 	andne	r2, r0, r6, asr #2
    42f0:	9f300002 	svcls	0x00300002
    42f4:	10002146 	andne	r2, r0, r6, asr #2
    42f8:	10002180 	andne	r2, r0, r0, lsl #3
    42fc:	80560001 	subshi	r0, r6, r1
    4300:	84100021 	ldrhi	r0, [r0], #-33	; 0xffffffdf
    4304:	02100021 	andseq	r0, r0, #33	; 0x21
    4308:	849f3100 	ldrhi	r3, [pc], #256	; 4310 <__HEAP_SIZE+0x3310>
    430c:	28100021 	ldmdacs	r0, {r0, r5}
    4310:	01100022 	tsteq	r0, r2, lsr #32
    4314:	00005600 	andeq	r5, r0, r0, lsl #12
    4318:	00000000 	andeq	r0, r0, r0
    431c:	00030000 	andeq	r0, r3, r0
    4320:	21420000 	mrscs	r0, (UNDEF: 66)
    4324:	21461000 	mrscs	r1, (UNDEF: 70)
    4328:	00011000 	andeq	r1, r1, r0
    432c:	00214650 	eoreq	r4, r1, r0, asr r6
    4330:	00222810 	eoreq	r2, r2, r0, lsl r8
    4334:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
	...
    4348:	21460000 	mrscs	r0, (UNDEF: 70)
    434c:	21501000 	cmpcs	r0, r0
    4350:	00011000 	andeq	r1, r1, r0
    4354:	00215055 	eoreq	r5, r1, r5, asr r0
    4358:	00215c10 	eoreq	r5, r1, r0, lsl ip
    435c:	75000310 	strvc	r0, [r0, #-784]	; 0xfffffcf0
    4360:	21609f01 	cmncs	r0, r1, lsl #30
    4364:	21721000 	cmncs	r2, r0
    4368:	00031000 	andeq	r1, r3, r0
    436c:	729f0175 	addsvc	r0, pc, #1073741853	; 0x4000001d
    4370:	b4100021 	ldrlt	r0, [r0], #-33	; 0xffffffdf
    4374:	01100021 	tsteq	r0, r1, lsr #32
    4378:	21ba5500 			; <UNDEFINED> instruction: 0x21ba5500
    437c:	22281000 	eorcs	r1, r8, #0
    4380:	00011000 	andeq	r1, r1, r0
    4384:	00000055 	andeq	r0, r0, r5, asr r0
	...
    4394:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    43a0:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    43a4:	00000018 	andeq	r0, r0, r8, lsl r0
	...
    43dc:	01000000 	mrseq	r0, (UNDEF: 0)
    43e0:	00005000 	andeq	r5, r0, r0
    43e4:	00000000 	andeq	r0, r0, r0
    43e8:	00010000 	andeq	r0, r1, r0
    43ec:	00000054 	andeq	r0, r0, r4, asr r0
    43f0:	00000000 	andeq	r0, r0, r0
    43f4:	f3000400 	vshl.u8	d0, d0, d0
    43f8:	009f5001 	addseq	r5, pc, r1
    43fc:	00000000 	andeq	r0, r0, r0
    4400:	01000000 	mrseq	r0, (UNDEF: 0)
    4404:	00005400 	andeq	r5, r0, r0, lsl #8
    4408:	00000000 	andeq	r0, r0, r0
    440c:	00040000 	andeq	r0, r4, r0
    4410:	9f5001f3 	svcls	0x005001f3
	...
    441c:	00540001 	subseq	r0, r4, r1
    4420:	00000000 	andeq	r0, r0, r0
    4424:	04000000 	streq	r0, [r0], #-0
    4428:	5001f300 	andpl	pc, r1, r0, lsl #6
    442c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4430:	00000000 	andeq	r0, r0, r0
    4434:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    4440:	01f30004 	mvnseq	r0, r4
    4444:	00009f50 	andeq	r9, r0, r0, asr pc
    4448:	00000000 	andeq	r0, r0, r0
    444c:	00010000 	andeq	r0, r1, r0
    4450:	00000054 	andeq	r0, r0, r4, asr r0
    4454:	00000000 	andeq	r0, r0, r0
    4458:	f3000400 	vshl.u8	d0, d0, d0
    445c:	009f5001 	addseq	r5, pc, r1
    4460:	00000000 	andeq	r0, r0, r0
    4464:	01000000 	mrseq	r0, (UNDEF: 0)
    4468:	00005400 	andeq	r5, r0, r0, lsl #8
    446c:	00000000 	andeq	r0, r0, r0
    4470:	00040000 	andeq	r0, r4, r0
    4474:	9f5001f3 	svcls	0x005001f3
	...
    4480:	00540001 	subseq	r0, r4, r1
    4484:	00000000 	andeq	r0, r0, r0
    4488:	04000000 	streq	r0, [r0], #-0
    448c:	5001f300 	andpl	pc, r1, r0, lsl #6
    4490:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4494:	00000000 	andeq	r0, r0, r0
    4498:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    44a4:	01f30004 	mvnseq	r0, r4
    44a8:	00009f50 	andeq	r9, r0, r0, asr pc
    44ac:	00000000 	andeq	r0, r0, r0
    44b0:	00010000 	andeq	r0, r1, r0
    44b4:	00000054 	andeq	r0, r0, r4, asr r0
    44b8:	00000000 	andeq	r0, r0, r0
    44bc:	f3000400 	vshl.u8	d0, d0, d0
    44c0:	009f5001 	addseq	r5, pc, r1
    44c4:	00000000 	andeq	r0, r0, r0
    44c8:	01000000 	mrseq	r0, (UNDEF: 0)
    44cc:	00005400 	andeq	r5, r0, r0, lsl #8
    44d0:	00000000 	andeq	r0, r0, r0
    44d4:	00040000 	andeq	r0, r4, r0
    44d8:	9f5001f3 	svcls	0x005001f3
	...
    44f0:	00510001 	subseq	r0, r1, r1
    44f4:	00000000 	andeq	r0, r0, r0
    44f8:	01000000 	mrseq	r0, (UNDEF: 0)
    44fc:	00005600 	andeq	r5, r0, r0, lsl #12
	...
    4510:	00540001 	subseq	r0, r4, r1
	...
    4530:	01000000 	mrseq	r0, (UNDEF: 0)
    4534:	00005000 	andeq	r5, r0, r0
    4538:	00000000 	andeq	r0, r0, r0
    453c:	00010000 	andeq	r0, r1, r0
    4540:	00000055 	andeq	r0, r0, r5, asr r0
    4544:	00000000 	andeq	r0, r0, r0
    4548:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    4554:	00550001 	subseq	r0, r5, r1
    4558:	00000000 	andeq	r0, r0, r0
    455c:	01000000 	mrseq	r0, (UNDEF: 0)
    4560:	00005000 	andeq	r5, r0, r0
    4564:	00000000 	andeq	r0, r0, r0
    4568:	00010000 	andeq	r0, r1, r0
    456c:	00000055 	andeq	r0, r0, r5, asr r0
    4570:	00000000 	andeq	r0, r0, r0
    4574:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    4580:	00550001 	subseq	r0, r5, r1
    4584:	00000000 	andeq	r0, r0, r0
    4588:	03000000 	movweq	r0, #0
	...
    45bc:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    45c8:	00540001 	subseq	r0, r4, r1
    45cc:	00000000 	andeq	r0, r0, r0
    45d0:	04000000 	streq	r0, [r0], #-0
    45d4:	5001f300 	andpl	pc, r1, r0, lsl #6
    45d8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    45dc:	00000000 	andeq	r0, r0, r0
    45e0:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    45ec:	01f30004 	mvnseq	r0, r4
    45f0:	00009f50 	andeq	r9, r0, r0, asr pc
    45f4:	00000000 	andeq	r0, r0, r0
    45f8:	00010000 	andeq	r0, r1, r0
    45fc:	00000054 	andeq	r0, r0, r4, asr r0
    4600:	00000000 	andeq	r0, r0, r0
    4604:	f3000400 	vshl.u8	d0, d0, d0
    4608:	009f5001 	addseq	r5, pc, r1
    460c:	00000000 	andeq	r0, r0, r0
    4610:	01000000 	mrseq	r0, (UNDEF: 0)
    4614:	00005400 	andeq	r5, r0, r0, lsl #8
    4618:	00000000 	andeq	r0, r0, r0
    461c:	00040000 	andeq	r0, r4, r0
    4620:	9f5001f3 	svcls	0x005001f3
	...
    462c:	00540001 	subseq	r0, r4, r1
    4630:	00000000 	andeq	r0, r0, r0
    4634:	04000000 	streq	r0, [r0], #-0
    4638:	5001f300 	andpl	pc, r1, r0, lsl #6
    463c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4640:	00000000 	andeq	r0, r0, r0
    4644:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    4650:	01f30004 	mvnseq	r0, r4
    4654:	00009f50 	andeq	r9, r0, r0, asr pc
    4658:	00000000 	andeq	r0, r0, r0
    465c:	00010000 	andeq	r0, r1, r0
    4660:	00000054 	andeq	r0, r0, r4, asr r0
    4664:	00000000 	andeq	r0, r0, r0
    4668:	f3000400 	vshl.u8	d0, d0, d0
    466c:	009f5001 	addseq	r5, pc, r1
    4670:	00000000 	andeq	r0, r0, r0
    4674:	01000000 	mrseq	r0, (UNDEF: 0)
    4678:	00005400 	andeq	r5, r0, r0, lsl #8
    467c:	00000000 	andeq	r0, r0, r0
    4680:	00040000 	andeq	r0, r4, r0
    4684:	9f5001f3 	svcls	0x005001f3
	...
    4690:	00540001 	subseq	r0, r4, r1
    4694:	00000000 	andeq	r0, r0, r0
    4698:	04000000 	streq	r0, [r0], #-0
    469c:	5001f300 	andpl	pc, r1, r0, lsl #6
    46a0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    46a4:	00000000 	andeq	r0, r0, r0
    46a8:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    46b4:	01f30004 	mvnseq	r0, r4
    46b8:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    46d8:	00010000 	andeq	r0, r1, r0
    46dc:	00000053 	andeq	r0, r0, r3, asr r0
    46e0:	00000000 	andeq	r0, r0, r0
    46e4:	73000300 	movwvc	r0, #768	; 0x300
    46e8:	00009f7f 	andeq	r9, r0, pc, ror pc
    46ec:	00000000 	andeq	r0, r0, r0
    46f0:	00070000 	andeq	r0, r7, r0
    46f4:	0600c874 			; <UNDEFINED> instruction: 0x0600c874
    46f8:	009f1c31 	addseq	r1, pc, r1, lsr ip	; <UNPREDICTABLE>
    46fc:	00000000 	andeq	r0, r0, r0
    4700:	07000000 	streq	r0, [r0, -r0]
    4704:	00c87400 	sbceq	r7, r8, r0, lsl #8
    4708:	9f1c3106 	svcls	0x001c3106
	...
    4714:	01f30009 	mvnseq	r0, r9
    4718:	06482350 			; <UNDEFINED> instruction: 0x06482350
    471c:	009f1c31 	addseq	r1, pc, r1, lsr ip	; <UNPREDICTABLE>
    4720:	00000000 	andeq	r0, r0, r0
    4724:	07000000 	streq	r0, [r0, -r0]
    4728:	00c87400 	sbceq	r7, r8, r0, lsl #8
    472c:	9f1c3106 	svcls	0x001c3106
	...
    4738:	7f730003 	svcvc	0x00730003
    473c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4740:	00000000 	andeq	r0, r0, r0
    4744:	53000100 	movwpl	r0, #256	; 0x100
	...
    475c:	00010000 	andeq	r0, r1, r0
    4760:	00000057 	andeq	r0, r0, r7, asr r0
    4764:	00000000 	andeq	r0, r0, r0
    4768:	77000300 	strvc	r0, [r0, -r0, lsl #6]
    476c:	00009f7f 	andeq	r9, r0, pc, ror pc
    4770:	00000000 	andeq	r0, r0, r0
    4774:	00010000 	andeq	r0, r1, r0
    4778:	00000057 	andeq	r0, r0, r7, asr r0
	...
    478c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    4798:	00500001 	subseq	r0, r0, r1
	...
    47a8:	02000000 	andeq	r0, r0, #0
    47ac:	00007d00 	andeq	r7, r0, r0, lsl #26
    47b0:	00000000 	andeq	r0, r0, r0
    47b4:	02000000 	andeq	r0, r0, #0
    47b8:	00207d00 	eoreq	r7, r0, r0, lsl #26
	...
    47f8:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    4804:	00540001 	subseq	r0, r4, r1
    4808:	00000000 	andeq	r0, r0, r0
    480c:	04000000 	streq	r0, [r0], #-0
    4810:	5001f300 	andpl	pc, r1, r0, lsl #6
    4814:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4818:	00000000 	andeq	r0, r0, r0
    481c:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    4828:	01f30004 	mvnseq	r0, r4
    482c:	00009f50 	andeq	r9, r0, r0, asr pc
    4830:	00000000 	andeq	r0, r0, r0
    4834:	00010000 	andeq	r0, r1, r0
    4838:	00000054 	andeq	r0, r0, r4, asr r0
    483c:	00000000 	andeq	r0, r0, r0
    4840:	f3000400 	vshl.u8	d0, d0, d0
    4844:	009f5001 	addseq	r5, pc, r1
    4848:	00000000 	andeq	r0, r0, r0
    484c:	01000000 	mrseq	r0, (UNDEF: 0)
    4850:	00005400 	andeq	r5, r0, r0, lsl #8
    4854:	00000000 	andeq	r0, r0, r0
    4858:	00040000 	andeq	r0, r4, r0
    485c:	9f5001f3 	svcls	0x005001f3
	...
    4868:	00540001 	subseq	r0, r4, r1
    486c:	00000000 	andeq	r0, r0, r0
    4870:	04000000 	streq	r0, [r0], #-0
    4874:	5001f300 	andpl	pc, r1, r0, lsl #6
    4878:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    487c:	00000000 	andeq	r0, r0, r0
    4880:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    488c:	01f30004 	mvnseq	r0, r4
    4890:	00009f50 	andeq	r9, r0, r0, asr pc
    4894:	00000000 	andeq	r0, r0, r0
    4898:	00010000 	andeq	r0, r1, r0
    489c:	00000054 	andeq	r0, r0, r4, asr r0
    48a0:	00000000 	andeq	r0, r0, r0
    48a4:	f3000400 	vshl.u8	d0, d0, d0
    48a8:	009f5001 	addseq	r5, pc, r1
    48ac:	00000000 	andeq	r0, r0, r0
    48b0:	01000000 	mrseq	r0, (UNDEF: 0)
    48b4:	00005400 	andeq	r5, r0, r0, lsl #8
    48b8:	00000000 	andeq	r0, r0, r0
    48bc:	00040000 	andeq	r0, r4, r0
    48c0:	9f5001f3 	svcls	0x005001f3
	...
    48cc:	00540001 	subseq	r0, r4, r1
    48d0:	00000000 	andeq	r0, r0, r0
    48d4:	04000000 	streq	r0, [r0], #-0
    48d8:	5001f300 	andpl	pc, r1, r0, lsl #6
    48dc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    48e0:	00000000 	andeq	r0, r0, r0
    48e4:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    48f0:	01f30004 	mvnseq	r0, r4
    48f4:	00009f50 	andeq	r9, r0, r0, asr pc
    48f8:	00000000 	andeq	r0, r0, r0
    48fc:	00010000 	andeq	r0, r1, r0
    4900:	00000054 	andeq	r0, r0, r4, asr r0
    4904:	00000000 	andeq	r0, r0, r0
    4908:	f3000400 	vshl.u8	d0, d0, d0
    490c:	009f5001 	addseq	r5, pc, r1
	...
    4920:	01000000 	mrseq	r0, (UNDEF: 0)
    4924:	00005100 	andeq	r5, r0, r0, lsl #2
    4928:	00000000 	andeq	r0, r0, r0
    492c:	00010000 	andeq	r0, r1, r0
    4930:	00000057 	andeq	r0, r0, r7, asr r0
	...
    4944:	52000100 	andpl	r0, r0, #0, 2
	...
    4950:	00590001 	subseq	r0, r9, r1
	...
    4964:	01000000 	mrseq	r0, (UNDEF: 0)
    4968:	00005300 	andeq	r5, r0, r0, lsl #6
    496c:	00000000 	andeq	r0, r0, r0
    4970:	00010000 	andeq	r0, r1, r0
    4974:	00000055 	andeq	r0, r0, r5, asr r0
	...
    4984:	01000000 	mrseq	r0, (UNDEF: 0)
    4988:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    49a0:	00010000 	andeq	r0, r1, r0
    49a4:	00000050 	andeq	r0, r0, r0, asr r0
    49a8:	00000000 	andeq	r0, r0, r0
    49ac:	56000100 	strpl	r0, [r0], -r0, lsl #2
	...
    49b8:	00500001 	subseq	r0, r0, r1
    49bc:	00000000 	andeq	r0, r0, r0
    49c0:	01000000 	mrseq	r0, (UNDEF: 0)
    49c4:	00005600 	andeq	r5, r0, r0, lsl #12
    49c8:	00000000 	andeq	r0, r0, r0
    49cc:	00030000 	andeq	r0, r3, r0
	...
    4a04:	00500001 	subseq	r0, r0, r1
    4a08:	00000000 	andeq	r0, r0, r0
    4a0c:	01000000 	mrseq	r0, (UNDEF: 0)
    4a10:	00005400 	andeq	r5, r0, r0, lsl #8
    4a14:	00000000 	andeq	r0, r0, r0
    4a18:	00040000 	andeq	r0, r4, r0
    4a1c:	9f5001f3 	svcls	0x005001f3
	...
    4a28:	00540001 	subseq	r0, r4, r1
    4a2c:	00000000 	andeq	r0, r0, r0
    4a30:	04000000 	streq	r0, [r0], #-0
    4a34:	5001f300 	andpl	pc, r1, r0, lsl #6
    4a38:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4a3c:	00000000 	andeq	r0, r0, r0
    4a40:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    4a4c:	01f30004 	mvnseq	r0, r4
    4a50:	00009f50 	andeq	r9, r0, r0, asr pc
    4a54:	00000000 	andeq	r0, r0, r0
    4a58:	00010000 	andeq	r0, r1, r0
    4a5c:	00000054 	andeq	r0, r0, r4, asr r0
    4a60:	00000000 	andeq	r0, r0, r0
    4a64:	f3000400 	vshl.u8	d0, d0, d0
    4a68:	009f5001 	addseq	r5, pc, r1
    4a6c:	00000000 	andeq	r0, r0, r0
    4a70:	01000000 	mrseq	r0, (UNDEF: 0)
    4a74:	00005400 	andeq	r5, r0, r0, lsl #8
    4a78:	00000000 	andeq	r0, r0, r0
    4a7c:	00040000 	andeq	r0, r4, r0
    4a80:	9f5001f3 	svcls	0x005001f3
	...
    4a8c:	00540001 	subseq	r0, r4, r1
    4a90:	00000000 	andeq	r0, r0, r0
    4a94:	04000000 	streq	r0, [r0], #-0
    4a98:	5001f300 	andpl	pc, r1, r0, lsl #6
    4a9c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4aa0:	00000000 	andeq	r0, r0, r0
    4aa4:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    4ab0:	01f30004 	mvnseq	r0, r4
    4ab4:	00009f50 	andeq	r9, r0, r0, asr pc
    4ab8:	00000000 	andeq	r0, r0, r0
    4abc:	00010000 	andeq	r0, r1, r0
    4ac0:	00000054 	andeq	r0, r0, r4, asr r0
    4ac4:	00000000 	andeq	r0, r0, r0
    4ac8:	f3000400 	vshl.u8	d0, d0, d0
    4acc:	009f5001 	addseq	r5, pc, r1
    4ad0:	00000000 	andeq	r0, r0, r0
    4ad4:	01000000 	mrseq	r0, (UNDEF: 0)
    4ad8:	00005400 	andeq	r5, r0, r0, lsl #8
    4adc:	00000000 	andeq	r0, r0, r0
    4ae0:	00040000 	andeq	r0, r4, r0
    4ae4:	9f5001f3 	svcls	0x005001f3
	...
    4af0:	00540001 	subseq	r0, r4, r1
    4af4:	00000000 	andeq	r0, r0, r0
    4af8:	04000000 	streq	r0, [r0], #-0
    4afc:	5001f300 	andpl	pc, r1, r0, lsl #6
    4b00:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4b04:	00000000 	andeq	r0, r0, r0
    4b08:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    4b14:	01f30004 	mvnseq	r0, r4
    4b18:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    4b30:	00580001 	subseq	r0, r8, r1
    4b34:	00000000 	andeq	r0, r0, r0
    4b38:	03000000 	movweq	r0, #0
    4b3c:	9f7f7800 	svcls	0x007f7800
	...
    4b48:	00580001 	subseq	r0, r8, r1
	...
    4b5c:	5a000100 	bpl	4f64 <__HEAP_SIZE+0x3f64>
	...
    4b74:	00500001 	subseq	r0, r0, r1
    4b78:	00000000 	andeq	r0, r0, r0
    4b7c:	01000000 	mrseq	r0, (UNDEF: 0)
    4b80:	00005000 	andeq	r5, r0, r0
	...
    4b90:	00020000 	andeq	r0, r2, r0
    4b94:	0000007d 	andeq	r0, r0, sp, ror r0
    4b98:	00000000 	andeq	r0, r0, r0
    4b9c:	00020000 	andeq	r0, r2, r0
    4ba0:	0000147d 	andeq	r1, r0, sp, ror r4
    4ba4:	00000000 	andeq	r0, r0, r0
    4ba8:	00020000 	andeq	r0, r2, r0
    4bac:	0000287d 	andeq	r2, r0, sp, ror r8
    4bb0:	00000000 	andeq	r0, r0, r0
    4bb4:	00020000 	andeq	r0, r2, r0
    4bb8:	0000147d 	andeq	r1, r0, sp, ror r4
    4bbc:	00000000 	andeq	r0, r0, r0
    4bc0:	00020000 	andeq	r0, r2, r0
    4bc4:	0000287d 	andeq	r2, r0, sp, ror r8
	...
    4bd8:	00010000 	andeq	r0, r1, r0
    4bdc:	00000050 	andeq	r0, r0, r0, asr r0
    4be0:	00000000 	andeq	r0, r0, r0
    4be4:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    4bfc:	00510001 	subseq	r0, r1, r1
    4c00:	00000000 	andeq	r0, r0, r0
    4c04:	01000000 	mrseq	r0, (UNDEF: 0)
    4c08:	00005700 	andeq	r5, r0, r0, lsl #14
	...
    4c1c:	00520001 	subseq	r0, r2, r1
	...
    4c30:	01000000 	mrseq	r0, (UNDEF: 0)
    4c34:	00005300 	andeq	r5, r0, r0, lsl #6
    4c38:	00000000 	andeq	r0, r0, r0
    4c3c:	00010000 	andeq	r0, r1, r0
    4c40:	00000055 	andeq	r0, r0, r5, asr r0
    4c44:	00000000 	andeq	r0, r0, r0
    4c48:	00000100 	andeq	r0, r0, r0, lsl #2
    4c4c:	01010000 	mrseq	r0, (UNDEF: 1)
	...
    4c58:	02000000 	andeq	r0, r0, #0
    4c5c:	009f3000 	addseq	r3, pc, r0
    4c60:	00000000 	andeq	r0, r0, r0
    4c64:	01000000 	mrseq	r0, (UNDEF: 0)
    4c68:	00005600 	andeq	r5, r0, r0, lsl #12
    4c6c:	00000000 	andeq	r0, r0, r0
    4c70:	00010000 	andeq	r0, r1, r0
    4c74:	00000056 	andeq	r0, r0, r6, asr r0
    4c78:	00000000 	andeq	r0, r0, r0
    4c7c:	31000200 	mrscc	r0, R8_usr
    4c80:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4c84:	00000000 	andeq	r0, r0, r0
    4c88:	56000100 	strpl	r0, [r0], -r0, lsl #2
	...
    4ca0:	00010000 	andeq	r0, r1, r0
    4ca4:	00000050 	andeq	r0, r0, r0, asr r0
    4ca8:	00000000 	andeq	r0, r0, r0
    4cac:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    4cb8:	00500001 	subseq	r0, r0, r1
    4cbc:	00000000 	andeq	r0, r0, r0
    4cc0:	03000000 	movweq	r0, #0
	...
    4ccc:	01000000 	mrseq	r0, (UNDEF: 0)
    4cd0:	00005000 	andeq	r5, r0, r0
    4cd4:	00000000 	andeq	r0, r0, r0
    4cd8:	00010000 	andeq	r0, r1, r0
    4cdc:	00000054 	andeq	r0, r0, r4, asr r0
	...
    4cf0:	56000100 	strpl	r0, [r0], -r0, lsl #2
	...
    4cfc:	00560001 	subseq	r0, r6, r1
	...
    4d0c:	02000000 	andeq	r0, r0, #0
    4d10:	00007d00 	andeq	r7, r0, r0, lsl #26
    4d14:	00000000 	andeq	r0, r0, r0
    4d18:	02000000 	andeq	r0, r0, #0
    4d1c:	00087d00 	andeq	r7, r8, r0, lsl #26
    4d20:	00000000 	andeq	r0, r0, r0
    4d24:	02000000 	andeq	r0, r0, #0
    4d28:	00007d00 	andeq	r7, r0, r0, lsl #26
    4d2c:	00000000 	andeq	r0, r0, r0
    4d30:	02000000 	andeq	r0, r0, #0
    4d34:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    4d50:	01000000 	mrseq	r0, (UNDEF: 0)
    4d54:	00005000 	andeq	r5, r0, r0
    4d58:	00000000 	andeq	r0, r0, r0
    4d5c:	00040000 	andeq	r0, r4, r0
    4d60:	9f5001f3 	svcls	0x005001f3
	...
    4d6c:	00500001 	subseq	r0, r0, r1
    4d70:	00000000 	andeq	r0, r0, r0
    4d74:	04000000 	streq	r0, [r0], #-0
    4d78:	5001f300 	andpl	pc, r1, r0, lsl #6
    4d7c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4d80:	00000000 	andeq	r0, r0, r0
    4d84:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    4d90:	01f30004 	mvnseq	r0, r4
    4d94:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    4da0:	04000000 	streq	r0, [r0], #-0
    4da4:	00000004 	andeq	r0, r0, r4
    4da8:	00000000 	andeq	r0, r0, r0
    4dac:	00010000 	andeq	r0, r1, r0
    4db0:	00000051 	andeq	r0, r0, r1, asr r0
    4db4:	00000000 	andeq	r0, r0, r0
    4db8:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    4dc4:	00510001 	subseq	r0, r1, r1
    4dc8:	00000000 	andeq	r0, r0, r0
    4dcc:	01000000 	mrseq	r0, (UNDEF: 0)
    4dd0:	00005400 	andeq	r5, r0, r0, lsl #8
    4dd4:	00000000 	andeq	r0, r0, r0
    4dd8:	00020000 	andeq	r0, r2, r0
    4ddc:	04000000 	streq	r0, [r0], #-0
	...
    4de8:	9f300002 	svcls	0x00300002
	...
    4df4:	00500001 	subseq	r0, r0, r1
    4df8:	00000000 	andeq	r0, r0, r0
    4dfc:	02000000 	andeq	r0, r0, #0
    4e00:	009f3000 	addseq	r3, pc, r0
	...
    4e10:	02000000 	andeq	r0, r0, #0
    4e14:	00007d00 	andeq	r7, r0, r0, lsl #26
    4e18:	00000000 	andeq	r0, r0, r0
    4e1c:	02000000 	andeq	r0, r0, #0
    4e20:	00087d00 	andeq	r7, r8, r0, lsl #26
    4e24:	00000000 	andeq	r0, r0, r0
    4e28:	02000000 	andeq	r0, r0, #0
    4e2c:	00107d00 	andseq	r7, r0, r0, lsl #26
    4e30:	00000000 	andeq	r0, r0, r0
    4e34:	02000000 	andeq	r0, r0, #0
    4e38:	00007d00 	andeq	r7, r0, r0, lsl #26
    4e3c:	00000000 	andeq	r0, r0, r0
    4e40:	02000000 	andeq	r0, r0, #0
    4e44:	00107d00 	andseq	r7, r0, r0, lsl #26
    4e48:	00000000 	andeq	r0, r0, r0
    4e4c:	02000000 	andeq	r0, r0, #0
    4e50:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    4e6c:	01000000 	mrseq	r0, (UNDEF: 0)
    4e70:	00005000 	andeq	r5, r0, r0
    4e74:	00000000 	andeq	r0, r0, r0
    4e78:	00040000 	andeq	r0, r4, r0
    4e7c:	9f5001f3 	svcls	0x005001f3
	...
    4e88:	00500001 	subseq	r0, r0, r1
    4e8c:	00000000 	andeq	r0, r0, r0
    4e90:	04000000 	streq	r0, [r0], #-0
    4e94:	5001f300 	andpl	pc, r1, r0, lsl #6
    4e98:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4e9c:	00000000 	andeq	r0, r0, r0
    4ea0:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    4eac:	01f30004 	mvnseq	r0, r4
    4eb0:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    4ebc:	04000000 	streq	r0, [r0], #-0
    4ec0:	00000004 	andeq	r0, r0, r4
    4ec4:	00000000 	andeq	r0, r0, r0
    4ec8:	00010000 	andeq	r0, r1, r0
    4ecc:	00000051 	andeq	r0, r0, r1, asr r0
    4ed0:	00000000 	andeq	r0, r0, r0
    4ed4:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    4ee0:	00510001 	subseq	r0, r1, r1
    4ee4:	00000000 	andeq	r0, r0, r0
    4ee8:	01000000 	mrseq	r0, (UNDEF: 0)
    4eec:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    4efc:	00040400 	andeq	r0, r4, r0, lsl #8
	...
    4f08:	00520001 	subseq	r0, r2, r1
    4f0c:	00000000 	andeq	r0, r0, r0
    4f10:	01000000 	mrseq	r0, (UNDEF: 0)
    4f14:	00005300 	andeq	r5, r0, r0, lsl #6
    4f18:	00000000 	andeq	r0, r0, r0
    4f1c:	00040000 	andeq	r0, r4, r0
    4f20:	9f5201f3 	svcls	0x005201f3
	...
    4f2c:	00520001 	subseq	r0, r2, r1
    4f30:	00000000 	andeq	r0, r0, r0
    4f34:	04000000 	streq	r0, [r0], #-0
    4f38:	5201f300 	andpl	pc, r1, #0, 6
    4f3c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4f40:	00000000 	andeq	r0, r0, r0
    4f44:	00000200 	andeq	r0, r0, r0, lsl #4
    4f48:	00040000 	andeq	r0, r4, r0
    4f4c:	00000000 	andeq	r0, r0, r0
    4f50:	02000000 	andeq	r0, r0, #0
    4f54:	009f3000 	addseq	r3, pc, r0
    4f58:	00000000 	andeq	r0, r0, r0
    4f5c:	01000000 	mrseq	r0, (UNDEF: 0)
    4f60:	00005000 	andeq	r5, r0, r0
    4f64:	00000000 	andeq	r0, r0, r0
    4f68:	00020000 	andeq	r0, r2, r0
    4f6c:	00009f30 	andeq	r9, r0, r0, lsr pc
	...
    4f7c:	00020000 	andeq	r0, r2, r0
    4f80:	0000007d 	andeq	r0, r0, sp, ror r0
    4f84:	00000000 	andeq	r0, r0, r0
    4f88:	00020000 	andeq	r0, r2, r0
    4f8c:	0000107d 	andeq	r1, r0, sp, ror r0
	...
    4fa0:	00010000 	andeq	r0, r1, r0
    4fa4:	00000050 	andeq	r0, r0, r0, asr r0
    4fa8:	00000000 	andeq	r0, r0, r0
    4fac:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    4fc4:	00510001 	subseq	r0, r1, r1
    4fc8:	00000000 	andeq	r0, r0, r0
    4fcc:	01000000 	mrseq	r0, (UNDEF: 0)
    4fd0:	00005500 	andeq	r5, r0, r0, lsl #10
	...
    4fdc:	00000001 	andeq	r0, r0, r1
    4fe0:	00000000 	andeq	r0, r0, r0
    4fe4:	00010000 	andeq	r0, r1, r0
    4fe8:	00000050 	andeq	r0, r0, r0, asr r0
    4fec:	00000000 	andeq	r0, r0, r0
    4ff0:	31000200 	mrscc	r0, R8_usr
    4ff4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4ff8:	00000000 	andeq	r0, r0, r0
    4ffc:	00000200 	andeq	r0, r0, r0, lsl #4
	...
    5008:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    5014:	00540001 	subseq	r0, r4, r1
	...
    5024:	02000000 	andeq	r0, r0, #0
    5028:	00007d00 	andeq	r7, r0, r0, lsl #26
    502c:	00000000 	andeq	r0, r0, r0
    5030:	02000000 	andeq	r0, r0, #0
    5034:	00107d00 	andseq	r7, r0, r0, lsl #26
	...
    5048:	01000000 	mrseq	r0, (UNDEF: 0)
    504c:	00005000 	andeq	r5, r0, r0
    5050:	00000000 	andeq	r0, r0, r0
    5054:	00010000 	andeq	r0, r1, r0
    5058:	00000054 	andeq	r0, r0, r4, asr r0
	...
    5068:	02000000 	andeq	r0, r0, #0
    506c:	009f3100 	addseq	r3, pc, r0, lsl #2
    5070:	00000000 	andeq	r0, r0, r0
    5074:	02000000 	andeq	r0, r0, #0
	...
    5080:	01000000 	mrseq	r0, (UNDEF: 0)
    5084:	00005000 	andeq	r5, r0, r0
    5088:	00000000 	andeq	r0, r0, r0
    508c:	00010000 	andeq	r0, r1, r0
    5090:	00000054 	andeq	r0, r0, r4, asr r0
	...
    50a0:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    50ac:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    50b0:	00000008 	andeq	r0, r0, r8
    50b4:	00000000 	andeq	r0, r0, r0
    50b8:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    50bc:	00000010 	andeq	r0, r0, r0, lsl r0
    50c0:	00000000 	andeq	r0, r0, r0
    50c4:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    50c8:	00000008 	andeq	r0, r0, r8
	...
    50dc:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    50e8:	01f30004 	mvnseq	r0, r4
    50ec:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    5104:	00510001 	subseq	r0, r1, r1
    5108:	00000000 	andeq	r0, r0, r0
    510c:	01000000 	mrseq	r0, (UNDEF: 0)
    5110:	00005300 	andeq	r5, r0, r0, lsl #6
    5114:	00000000 	andeq	r0, r0, r0
    5118:	00040000 	andeq	r0, r4, r0
    511c:	9f5101f3 	svcls	0x005101f3
	...
    5134:	00500001 	subseq	r0, r0, r1
    5138:	00000000 	andeq	r0, r0, r0
    513c:	01000000 	mrseq	r0, (UNDEF: 0)
    5140:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    5150:	00020000 	andeq	r0, r2, r0
    5154:	0000007d 	andeq	r0, r0, sp, ror r0
    5158:	00000000 	andeq	r0, r0, r0
    515c:	00020000 	andeq	r0, r2, r0
    5160:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    5174:	00010000 	andeq	r0, r1, r0
    5178:	00000050 	andeq	r0, r0, r0, asr r0
    517c:	00000000 	andeq	r0, r0, r0
    5180:	f3000400 	vshl.u8	d0, d0, d0
    5184:	009f5001 	addseq	r5, pc, r1
	...
    5198:	01000000 	mrseq	r0, (UNDEF: 0)
    519c:	00005000 	andeq	r5, r0, r0
    51a0:	00000000 	andeq	r0, r0, r0
    51a4:	00010000 	andeq	r0, r1, r0
    51a8:	00000054 	andeq	r0, r0, r4, asr r0
	...
    51b8:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    51c4:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    51c8:	00000008 	andeq	r0, r0, r8
    51cc:	00000000 	andeq	r0, r0, r0
    51d0:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    51e8:	01000000 	mrseq	r0, (UNDEF: 0)
    51ec:	00005000 	andeq	r5, r0, r0
    51f0:	00000000 	andeq	r0, r0, r0
    51f4:	00040000 	andeq	r0, r4, r0
    51f8:	9f5001f3 	svcls	0x005001f3
	...
    5204:	00500001 	subseq	r0, r0, r1
    5208:	00000000 	andeq	r0, r0, r0
    520c:	da000000 	ble	5214 <__HEAP_SIZE+0x4214>
    5210:	dc100020 	ldcle	0, cr0, [r0], {32}
    5214:	02100020 	andseq	r0, r0, #32
    5218:	dc007d00 	stcle	13, cr7, [r0], {-0}
    521c:	fa100020 	blx	4052a4 <__RAM_SIZE+0x3052a4>
    5220:	02100020 	andseq	r0, r0, #32
    5224:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    5234:	da000000 	ble	523c <__HEAP_SIZE+0x423c>
    5238:	ec100020 	ldc	0, cr0, [r0], {32}
    523c:	01100020 	tsteq	r0, r0, lsr #32
    5240:	20ec5000 	rsccs	r5, ip, r0
    5244:	20ef1000 	rsccs	r1, pc, r0
    5248:	00031000 	andeq	r1, r3, r0
    524c:	ef00cc70 	svc	0x0000cc70
    5250:	f6100020 			; <UNDEFINED> instruction: 0xf6100020
    5254:	04100020 	ldreq	r0, [r0], #-32	; 0xffffffe0
    5258:	5001f300 	andpl	pc, r1, r0, lsl #6
    525c:	0020f69f 	mlaeq	r0, pc, r6, pc	; <UNPREDICTABLE>
    5260:	0020fa10 	eoreq	pc, r0, r0, lsl sl	; <UNPREDICTABLE>
    5264:	50000110 	andpl	r0, r0, r0, lsl r1
	...
    5278:	100020da 	ldrdne	r2, [r0], -sl
    527c:	100020ea 	andne	r2, r0, sl, ror #1
    5280:	ea510001 	b	144528c <__RAM_SIZE+0x134528c>
    5284:	ef100020 	svc	0x00100020
    5288:	01100020 	tsteq	r0, r0, lsr #32
    528c:	20ef5300 	rsccs	r5, pc, r0, lsl #6
    5290:	20f61000 	rscscs	r1, r6, r0
    5294:	00041000 	andeq	r1, r4, r0
    5298:	9f5101f3 	svcls	0x005101f3
    529c:	100020f6 	strdne	r2, [r0], -r6
    52a0:	100020fa 	strdne	r2, [r0], -sl
    52a4:	00510001 	subseq	r0, r1, r1
	...
    52b4:	0020da00 	eoreq	sp, r0, r0, lsl #20
    52b8:	0020ef10 	eoreq	lr, r0, r0, lsl pc
    52bc:	52000110 	andpl	r0, r0, #16, 2
    52c0:	100020ef 	andne	r2, r0, pc, ror #1
    52c4:	100020f6 	strdne	r2, [r0], -r6
    52c8:	01f30004 	mvnseq	r0, r4
    52cc:	20f69f52 	rscscs	r9, r6, r2, asr pc
    52d0:	20fa1000 	rscscs	r1, sl, r0
    52d4:	00011000 	andeq	r1, r1, r0
    52d8:	00000052 	andeq	r0, r0, r2, asr r0
	...
    52e4:	0020da00 	eoreq	sp, r0, r0, lsl #20
    52e8:	0020e010 	eoreq	lr, r0, r0, lsl r0
    52ec:	53000110 	movwpl	r0, #272	; 0x110
    52f0:	100020e0 	andne	r2, r0, r0, ror #1
    52f4:	100020fa 	strdne	r2, [r0], -sl
    52f8:	01f30004 	mvnseq	r0, r4
    52fc:	00009f53 	andeq	r9, r0, r3, asr pc
	...
    5308:	20da0000 	sbcscs	r0, sl, r0
    530c:	20f61000 	rscscs	r1, r6, r0
    5310:	00021000 	andeq	r1, r2, r0
    5314:	20f60091 	smlalscs	r0, r6, r1, r0
    5318:	20fa1000 	rscscs	r1, sl, r0
    531c:	00021000 	andeq	r1, r2, r0
    5320:	00000091 	muleq	r0, r1, r0
	...
    5330:	00020000 	andeq	r0, r2, r0
    5334:	0000007d 	andeq	r0, r0, sp, ror r0
    5338:	00000000 	andeq	r0, r0, r0
    533c:	00020000 	andeq	r0, r2, r0
    5340:	0000147d 	andeq	r1, r0, sp, ror r4
    5344:	00000000 	andeq	r0, r0, r0
    5348:	00020000 	andeq	r0, r2, r0
    534c:	0000207d 	andeq	r2, r0, sp, ror r0
    5350:	00000000 	andeq	r0, r0, r0
    5354:	00020000 	andeq	r0, r2, r0
    5358:	0000147d 	andeq	r1, r0, sp, ror r4
    535c:	00000000 	andeq	r0, r0, r0
    5360:	00020000 	andeq	r0, r2, r0
    5364:	0000207d 	andeq	r2, r0, sp, ror r0
	...
    5380:	00010000 	andeq	r0, r1, r0
    5384:	00000050 	andeq	r0, r0, r0, asr r0
    5388:	00000000 	andeq	r0, r0, r0
    538c:	56000100 	strpl	r0, [r0], -r0, lsl #2
	...
    5398:	00500001 	subseq	r0, r0, r1
    539c:	00000000 	andeq	r0, r0, r0
    53a0:	04000000 	streq	r0, [r0], #-0
    53a4:	5001f300 	andpl	pc, r1, r0, lsl #6
    53a8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    53ac:	00000000 	andeq	r0, r0, r0
    53b0:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    53bc:	00560001 	subseq	r0, r6, r1
	...
    53d8:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    53e4:	00540001 	subseq	r0, r4, r1
    53e8:	00000000 	andeq	r0, r0, r0
    53ec:	01000000 	mrseq	r0, (UNDEF: 0)
    53f0:	00005100 	andeq	r5, r0, r0, lsl #2
    53f4:	00000000 	andeq	r0, r0, r0
    53f8:	00040000 	andeq	r0, r4, r0
    53fc:	9f5101f3 	svcls	0x005101f3
	...
    5408:	00540001 	subseq	r0, r4, r1
	...
    5420:	01000000 	mrseq	r0, (UNDEF: 0)
    5424:	00005200 	andeq	r5, r0, r0, lsl #4
    5428:	00000000 	andeq	r0, r0, r0
    542c:	00040000 	andeq	r0, r4, r0
    5430:	9f5201f3 	svcls	0x005201f3
	...
    543c:	00520001 	subseq	r0, r2, r1
    5440:	00000000 	andeq	r0, r0, r0
    5444:	04000000 	streq	r0, [r0], #-0
    5448:	5201f300 	andpl	pc, r1, #0, 6
    544c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    5450:	00000000 	andeq	r0, r0, r0
    5454:	00000100 	andeq	r0, r0, r0, lsl #2
	...
    5464:	02000000 	andeq	r0, r0, #0
    5468:	009f3000 	addseq	r3, pc, r0
    546c:	00000000 	andeq	r0, r0, r0
    5470:	01000000 	mrseq	r0, (UNDEF: 0)
    5474:	00005000 	andeq	r5, r0, r0
    5478:	00000000 	andeq	r0, r0, r0
    547c:	00010000 	andeq	r0, r1, r0
    5480:	00000055 	andeq	r0, r0, r5, asr r0
    5484:	00000000 	andeq	r0, r0, r0
    5488:	30000200 	andcc	r0, r0, r0, lsl #4
    548c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    5490:	00000000 	andeq	r0, r0, r0
    5494:	30000200 	andcc	r0, r0, r0, lsl #4
    5498:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    549c:	00000000 	andeq	r0, r0, r0
    54a0:	00000100 	andeq	r0, r0, r0, lsl #2
	...
    54ac:	01000000 	mrseq	r0, (UNDEF: 0)
    54b0:	00005000 	andeq	r5, r0, r0
    54b4:	00000000 	andeq	r0, r0, r0
    54b8:	00040000 	andeq	r0, r4, r0
    54bc:	9f7fa470 	svcls	0x007fa470
	...
    54c8:	00740006 	rsbseq	r0, r4, r6
    54cc:	9f1e0076 	svcls	0x001e0076
	...
    54d8:	00020201 	andeq	r0, r2, r1, lsl #4
	...
    54e8:	00500001 	subseq	r0, r0, r1
    54ec:	00000000 	andeq	r0, r0, r0
    54f0:	04000000 	streq	r0, [r0], #-0
    54f4:	00dc7000 	sbcseq	r7, ip, r0
    54f8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    54fc:	00000000 	andeq	r0, r0, r0
    5500:	52000100 	andpl	r0, r0, #0, 2
	...
    550c:	dc750004 	ldclle	0, cr0, [r5], #-16
    5510:	00009f00 	andeq	r9, r0, r0, lsl #30
	...
    5528:	00010000 	andeq	r0, r1, r0
    552c:	00000050 	andeq	r0, r0, r0, asr r0
    5530:	00000000 	andeq	r0, r0, r0
    5534:	f3000400 	vshl.u8	d0, d0, d0
    5538:	009f5001 	addseq	r5, pc, r1
    553c:	00000000 	andeq	r0, r0, r0
    5540:	01000000 	mrseq	r0, (UNDEF: 0)
    5544:	00005000 	andeq	r5, r0, r0
    5548:	00000000 	andeq	r0, r0, r0
    554c:	00020000 	andeq	r0, r2, r0
    5550:	00000072 	andeq	r0, r0, r2, ror r0
	...
    555c:	00000001 	andeq	r0, r0, r1
    5560:	00000000 	andeq	r0, r0, r0
    5564:	00020000 	andeq	r0, r2, r0
    5568:	00009f30 	andeq	r9, r0, r0, lsr pc
    556c:	00000000 	andeq	r0, r0, r0
    5570:	00020000 	andeq	r0, r2, r0
    5574:	00009f31 	andeq	r9, r0, r1, lsr pc
    5578:	00000000 	andeq	r0, r0, r0
    557c:	00030000 	andeq	r0, r3, r0
	...
    558c:	00010000 	andeq	r0, r1, r0
    5590:	00000050 	andeq	r0, r0, r0, asr r0
    5594:	00000000 	andeq	r0, r0, r0
    5598:	f3000400 	vshl.u8	d0, d0, d0
    559c:	009f5001 	addseq	r5, pc, r1
    55a0:	00000000 	andeq	r0, r0, r0
    55a4:	01000000 	mrseq	r0, (UNDEF: 0)
    55a8:	00005000 	andeq	r5, r0, r0
    55ac:	00000000 	andeq	r0, r0, r0
    55b0:	00020000 	andeq	r0, r2, r0
    55b4:	00000072 	andeq	r0, r0, r2, ror r0
    55b8:	00000000 	andeq	r0, r0, r0
    55bc:	20fa0000 	rscscs	r0, sl, r0
    55c0:	20fe1000 	rscscs	r1, lr, r0
    55c4:	00021000 	andeq	r1, r2, r0
    55c8:	20fe007d 	rscscs	r0, lr, sp, ror r0
    55cc:	21001000 	mrscs	r1, (UNDEF: 0)
    55d0:	00021000 	andeq	r1, r2, r0
    55d4:	2100087d 	tstcs	r0, sp, ror r8
    55d8:	21221000 			; <UNDEFINED> instruction: 0x21221000
    55dc:	00021000 	andeq	r1, r2, r0
    55e0:	2122107d 			; <UNDEFINED> instruction: 0x2122107d
    55e4:	21241000 			; <UNDEFINED> instruction: 0x21241000
    55e8:	00021000 	andeq	r1, r2, r0
    55ec:	2124087d 			; <UNDEFINED> instruction: 0x2124087d
    55f0:	212c1000 			; <UNDEFINED> instruction: 0x212c1000
    55f4:	00021000 	andeq	r1, r2, r0
    55f8:	212c107d 			; <UNDEFINED> instruction: 0x212c107d
    55fc:	21301000 	teqcs	r0, r0
    5600:	00021000 	andeq	r1, r2, r0
    5604:	2130007d 	teqcs	r0, sp, ror r0
    5608:	21381000 	teqcs	r8, r0
    560c:	00021000 	andeq	r1, r2, r0
    5610:	0000107d 	andeq	r1, r0, sp, ror r0
	...
    5630:	100020fa 	strdne	r2, [r0], -sl
    5634:	1000211a 	andne	r2, r0, sl, lsl r1
    5638:	1a500001 	bne	1405644 <__RAM_SIZE+0x1305644>
    563c:	1d100021 	ldcne	0, cr0, [r0, #-132]	; 0xffffff7c
    5640:	01100021 	tsteq	r0, r1, lsr #32
    5644:	211d5c00 	tstcs	sp, r0, lsl #24
    5648:	21241000 			; <UNDEFINED> instruction: 0x21241000
    564c:	00041000 	andeq	r1, r4, r0
    5650:	9f5001f3 	svcls	0x005001f3
    5654:	10002124 	andne	r2, r0, r4, lsr #2
    5658:	1000212a 	andne	r2, r0, sl, lsr #2
    565c:	2a500001 	bcs	1405668 <__RAM_SIZE+0x1305668>
    5660:	2c100021 	ldccs	0, cr0, [r0], {33}	; 0x21
    5664:	01100021 	tsteq	r0, r1, lsr #32
    5668:	212c5c00 			; <UNDEFINED> instruction: 0x212c5c00
    566c:	212e1000 			; <UNDEFINED> instruction: 0x212e1000
    5670:	00011000 	andeq	r1, r1, r0
    5674:	00212e50 	eoreq	r2, r1, r0, asr lr
    5678:	00213010 	eoreq	r3, r1, r0, lsl r0
    567c:	f3000410 	vqshl.u8	d0, d0, d0
    5680:	309f5001 	addscc	r5, pc, r1
    5684:	32100021 	andscc	r0, r0, #33	; 0x21
    5688:	01100021 	tsteq	r0, r1, lsr #32
    568c:	21325000 	teqcs	r2, r0
    5690:	21341000 	teqcs	r4, r0
    5694:	00011000 	andeq	r1, r1, r0
    5698:	0021345c 	eoreq	r3, r1, ip, asr r4
    569c:	00213610 	eoreq	r3, r1, r0, lsl r6
    56a0:	50000110 	andpl	r0, r0, r0, lsl r1
    56a4:	10002136 	andne	r2, r0, r6, lsr r1
    56a8:	10002138 	andne	r2, r0, r8, lsr r1
    56ac:	005c0001 	subseq	r0, ip, r1
	...
    56bc:	0020fa00 	eoreq	pc, r0, r0, lsl #20
    56c0:	00211d10 	eoreq	r1, r1, r0, lsl sp
    56c4:	51000110 	tstpl	r0, r0, lsl r1
    56c8:	1000211d 	andne	r2, r0, sp, lsl r1
    56cc:	10002124 	andne	r2, r0, r4, lsr #2
    56d0:	01f30004 	mvnseq	r0, r4
    56d4:	21249f51 			; <UNDEFINED> instruction: 0x21249f51
    56d8:	21381000 	teqcs	r8, r0
    56dc:	00011000 	andeq	r1, r1, r0
    56e0:	00000051 	andeq	r0, r0, r1, asr r0
	...
    56ec:	fa000000 	blx	56f4 <__HEAP_SIZE+0x46f4>
    56f0:	1d100020 	ldcne	0, cr0, [r0, #-128]	; 0xffffff80
    56f4:	01100021 	tsteq	r0, r1, lsr #32
    56f8:	211d5200 	tstcs	sp, r0, lsl #4
    56fc:	21241000 			; <UNDEFINED> instruction: 0x21241000
    5700:	00041000 	andeq	r1, r4, r0
    5704:	9f5201f3 	svcls	0x005201f3
    5708:	10002124 	andne	r2, r0, r4, lsr #2
    570c:	10002138 	andne	r2, r0, r8, lsr r1
    5710:	00520001 	subseq	r0, r2, r1
	...
    5720:	0020fa00 	eoreq	pc, r0, r0, lsl #20
    5724:	00210e10 	eoreq	r0, r1, r0, lsl lr
    5728:	53000110 	movwpl	r0, #272	; 0x110
    572c:	1000210e 	andne	r2, r0, lr, lsl #2
    5730:	10002124 	andne	r2, r0, r4, lsr #2
    5734:	24540001 	ldrbcs	r0, [r4], #-1
    5738:	38100021 	ldmdacc	r0, {r0, r5}
    573c:	01100021 	tsteq	r0, r1, lsr #32
    5740:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    574c:	20fa0000 	rscscs	r0, sl, r0
    5750:	21241000 			; <UNDEFINED> instruction: 0x21241000
    5754:	00021000 	andeq	r1, r2, r0
    5758:	21240091 			; <UNDEFINED> instruction: 0x21240091
    575c:	21381000 	teqcs	r8, r0
    5760:	00021000 	andeq	r1, r2, r0
    5764:	00000091 	muleq	r0, r1, r0
    5768:	00000000 	andeq	r0, r0, r0
    576c:	01020000 	mrseq	r0, (UNDEF: 2)
    5770:	00000001 	andeq	r0, r0, r1
    5774:	00000000 	andeq	r0, r0, r0
    5778:	20fa0000 	rscscs	r0, sl, r0
    577c:	210c1000 	mrscs	r1, (UNDEF: 12)
    5780:	00021000 	andeq	r1, r2, r0
    5784:	210c9f30 	tstcs	ip, r0, lsr pc
    5788:	210e1000 	mrscs	r1, (UNDEF: 14)
    578c:	00011000 	andeq	r1, r1, r0
    5790:	00210e53 	eoreq	r0, r1, r3, asr lr
    5794:	00212010 	eoreq	r2, r1, r0, lsl r0
    5798:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    579c:	10002124 	andne	r2, r0, r4, lsr #2
    57a0:	1000212a 	andne	r2, r0, sl, lsr #2
    57a4:	9f300002 	svcls	0x00300002
    57a8:	1000212a 	andne	r2, r0, sl, lsr #2
    57ac:	1000212c 	andne	r2, r0, ip, lsr #2
    57b0:	2c500001 	mrrccs	0, 0, r0, r0, cr1	; <UNPREDICTABLE>
    57b4:	38100021 	ldmdacc	r0, {r0, r5}
    57b8:	02100021 	andseq	r0, r0, #33	; 0x21
    57bc:	009f3000 	addseq	r3, pc, r0
    57c0:	00000000 	andeq	r0, r0, r0
    57c4:	54000000 	strpl	r0, [r0], #-0
    57c8:	5a100020 	bpl	405850 <__RAM_SIZE+0x305850>
    57cc:	02100020 	andseq	r0, r0, #32
    57d0:	5a007d00 	bpl	24bd8 <__HEAP_SIZE+0x23bd8>
    57d4:	d2100020 	andsle	r0, r0, #32
    57d8:	02100020 	andseq	r0, r0, #32
    57dc:	d2107d00 	andsle	r7, r0, #0, 26
    57e0:	d6100020 	ldrle	r0, [r0], -r0, lsr #32
    57e4:	02100020 	andseq	r0, r0, #32
    57e8:	d6007d00 	strle	r7, [r0], -r0, lsl #26
    57ec:	da100020 	ble	405874 <__RAM_SIZE+0x305874>
    57f0:	02100020 	andseq	r0, r0, #32
    57f4:	00107d00 	andseq	r7, r0, r0, lsl #26
	...
    580c:	54000000 	strpl	r0, [r0], #-0
    5810:	72100020 	andsvc	r0, r0, #32
    5814:	01100020 	tsteq	r0, r0, lsr #32
    5818:	20725000 	rsbscs	r5, r2, r0
    581c:	20741000 	rsbscs	r1, r4, r0
    5820:	00011000 	andeq	r1, r1, r0
    5824:	00207454 	eoreq	r7, r0, r4, asr r4
    5828:	00207b10 	eoreq	r7, r0, r0, lsl fp
    582c:	50000110 	andpl	r0, r0, r0, lsl r1
    5830:	1000207b 	andne	r2, r0, fp, ror r0
    5834:	100020d2 	ldrdne	r2, [r0], -r2	; <UNPREDICTABLE>
    5838:	d2540001 	subsle	r0, r4, #1
    583c:	d4100020 	ldrle	r0, [r0], #-32	; 0xffffffe0
    5840:	01100020 	tsteq	r0, r0, lsr #32
    5844:	20d45000 	sbcscs	r5, r4, r0
    5848:	20d61000 	sbcscs	r1, r6, r0
    584c:	00041000 	andeq	r1, r4, r0
    5850:	9f5001f3 	svcls	0x005001f3
    5854:	100020d6 	ldrdne	r2, [r0], -r6
    5858:	100020d8 	ldrdne	r2, [r0], -r8
    585c:	d8500001 	ldmdale	r0, {r0}^
    5860:	da100020 	ble	4058e8 <__RAM_SIZE+0x3058e8>
    5864:	01100020 	tsteq	r0, r0, lsr #32
    5868:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    5878:	20540000 	subscs	r0, r4, r0
    587c:	20681000 	rsbcs	r1, r8, r0
    5880:	00011000 	andeq	r1, r1, r0
    5884:	00206851 	eoreq	r6, r0, r1, asr r8
    5888:	0020d210 	eoreq	sp, r0, r0, lsl r2
    588c:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
    5890:	100020d2 	ldrdne	r2, [r0], -r2	; <UNPREDICTABLE>
    5894:	100020d8 	ldrdne	r2, [r0], -r8
    5898:	d8510001 	ldmdale	r1, {r0}^
    589c:	da100020 	ble	405924 <__RAM_SIZE+0x305924>
    58a0:	01100020 	tsteq	r0, r0, lsr #32
    58a4:	00005500 	andeq	r5, r0, r0, lsl #10
    58a8:	00000000 	andeq	r0, r0, r0
    58ac:	00020000 	andeq	r0, r2, r0
    58b0:	00000000 	andeq	r0, r0, r0
    58b4:	10002054 	andne	r2, r0, r4, asr r0
    58b8:	10002072 	andne	r2, r0, r2, ror r0
    58bc:	9f310002 	svcls	0x00310002
    58c0:	10002072 	andne	r2, r0, r2, ror r0
    58c4:	10002074 	andne	r2, r0, r4, ror r0
    58c8:	9f300002 	svcls	0x00300002
    58cc:	10002074 	andne	r2, r0, r4, ror r0
    58d0:	100020d8 	ldrdne	r2, [r0], -r8
    58d4:	9f310002 	svcls	0x00310002
	...
    58e0:	00000003 	andeq	r0, r0, r3
	...
    58f0:	10002054 	andne	r2, r0, r4, asr r0
    58f4:	10002072 	andne	r2, r0, r2, ror r0
    58f8:	72500001 	subsvc	r0, r0, #1
    58fc:	74100020 	ldrvc	r0, [r0], #-32	; 0xffffffe0
    5900:	01100020 	tsteq	r0, r0, lsr #32
    5904:	20745400 	rsbscs	r5, r4, r0, lsl #8
    5908:	207b1000 	rsbscs	r1, fp, r0
    590c:	00011000 	andeq	r1, r1, r0
    5910:	00207b50 	eoreq	r7, r0, r0, asr fp
    5914:	0020d210 	eoreq	sp, r0, r0, lsl r2
    5918:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    591c:	100020d2 	ldrdne	r2, [r0], -r2	; <UNPREDICTABLE>
    5920:	100020d4 	ldrdne	r2, [r0], -r4
    5924:	d4500001 	ldrble	r0, [r0], #-1
    5928:	d6100020 	ldrle	r0, [r0], -r0, lsr #32
    592c:	04100020 	ldreq	r0, [r0], #-32	; 0xffffffe0
    5930:	5001f300 	andpl	pc, r1, r0, lsl #6
    5934:	0020d69f 	mlaeq	r0, pc, r6, sp	; <UNPREDICTABLE>
    5938:	0020d810 	eoreq	sp, r0, r0, lsl r8
    593c:	50000110 	andpl	r0, r0, r0, lsl r1
    5940:	100020d8 	ldrdne	r2, [r0], -r8
    5944:	100020da 	ldrdne	r2, [r0], -sl
    5948:	00540001 	subseq	r0, r4, r1
    594c:	00000000 	andeq	r0, r0, r0
    5950:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    595c:	01000000 	mrseq	r0, (UNDEF: 0)
    5960:	00005300 	andeq	r5, r0, r0, lsl #6
    5964:	00000000 	andeq	r0, r0, r0
    5968:	00010000 	andeq	r0, r1, r0
    596c:	00000053 	andeq	r0, r0, r3, asr r0
    5970:	00000000 	andeq	r0, r0, r0
    5974:	0025c400 	eoreq	ip, r5, r0, lsl #8
    5978:	0025c810 	eoreq	ip, r5, r0, lsl r8
    597c:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    5980:	0025c800 	eoreq	ip, r5, r0, lsl #16
    5984:	00266c10 	eoreq	r6, r6, r0, lsl ip
    5988:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    598c:	00000018 	andeq	r0, r0, r8, lsl r0
	...
    599c:	c4000000 	strgt	r0, [r0], #-0
    59a0:	e6100025 	ldr	r0, [r0], -r5, lsr #32
    59a4:	01100025 	tsteq	r0, r5, lsr #32
    59a8:	25e65000 	strbcs	r5, [r6, #0]!
    59ac:	25f41000 	ldrbcs	r1, [r4, #0]!
    59b0:	00011000 	andeq	r1, r1, r0
    59b4:	0025f454 	eoreq	pc, r5, r4, asr r4	; <UNPREDICTABLE>
    59b8:	00260e10 	eoreq	r0, r6, r0, lsl lr
    59bc:	f3000410 	vqshl.u8	d0, d0, d0
    59c0:	0e9f5001 	cdpeq	0, 9, cr5, cr15, cr1, {0}
    59c4:	20100026 	andscs	r0, r0, r6, lsr #32
    59c8:	01100026 	tsteq	r0, r6, lsr #32
    59cc:	26205400 	strtcs	r5, [r0], -r0, lsl #8
    59d0:	266c1000 	strbtcs	r1, [ip], -r0
    59d4:	00041000 	andeq	r1, r4, r0
    59d8:	9f5001f3 	svcls	0x005001f3
	...
    59e8:	100025c4 	andne	r2, r0, r4, asr #11
    59ec:	100025e0 	andne	r2, r0, r0, ror #11
    59f0:	e0510001 	subs	r0, r1, r1
    59f4:	6c100025 	ldcvs	0, cr0, [r0], {37}	; 0x25
    59f8:	01100026 	tsteq	r0, r6, lsr #32
    59fc:	00005500 	andeq	r5, r0, r0, lsl #10
	...
    5a08:	25f40000 	ldrbcs	r0, [r4, #0]!
    5a0c:	260a1000 	strcs	r1, [sl], -r0
    5a10:	00011000 	andeq	r1, r1, r0
    5a14:	00263a54 	eoreq	r3, r6, r4, asr sl
    5a18:	00266c10 	eoreq	r6, r6, r0, lsl ip
    5a1c:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
	...
    5a28:	25d00000 	ldrbcs	r0, [r0]
    5a2c:	266c1000 	strbtcs	r1, [ip], -r0
    5a30:	00011000 	andeq	r1, r1, r0
    5a34:	00000056 	andeq	r0, r0, r6, asr r0
    5a38:	00000000 	andeq	r0, r0, r0
    5a3c:	d4000000 	strle	r0, [r0], #-0
    5a40:	6c100025 	ldcvs	0, cr0, [r0], {37}	; 0x25
    5a44:	01100026 	tsteq	r0, r6, lsr #32
    5a48:	00005700 	andeq	r5, r0, r0, lsl #14
	...
    5a54:	100025da 	ldrdne	r2, [r0], -sl
    5a58:	1000266c 	andne	r2, r0, ip, ror #12
    5a5c:	00580001 	subseq	r0, r8, r1
	...
    5a68:	00261600 	eoreq	r1, r6, r0, lsl #12
    5a6c:	00263a10 	eoreq	r3, r6, r0, lsl sl
    5a70:	51000110 	tstpl	r0, r0, lsl r1
	...
    5a84:	007d0002 	rsbseq	r0, sp, r2
	...
    5a90:	107d0002 	rsbsne	r0, sp, r2
	...
    5aa8:	00500001 	subseq	r0, r0, r1
    5aac:	00000000 	andeq	r0, r0, r0
    5ab0:	01000000 	mrseq	r0, (UNDEF: 0)
    5ab4:	00005000 	andeq	r5, r0, r0
	...
    5acc:	00510001 	subseq	r0, r1, r1
    5ad0:	00000000 	andeq	r0, r0, r0
    5ad4:	01000000 	mrseq	r0, (UNDEF: 0)
    5ad8:	00005500 	andeq	r5, r0, r0, lsl #10
    5adc:	00000000 	andeq	r0, r0, r0
    5ae0:	00010000 	andeq	r0, r1, r0
    5ae4:	00000051 	andeq	r0, r0, r1, asr r0
	...
    5af8:	01000000 	mrseq	r0, (UNDEF: 0)
    5afc:	00005200 	andeq	r5, r0, r0, lsl #4
    5b00:	00000000 	andeq	r0, r0, r0
    5b04:	00010000 	andeq	r0, r1, r0
    5b08:	00000056 	andeq	r0, r0, r6, asr r0
    5b0c:	00000000 	andeq	r0, r0, r0
    5b10:	52000100 	andpl	r0, r0, #0, 2
	...
    5b24:	00010000 	andeq	r0, r1, r0
    5b28:	00000054 	andeq	r0, r0, r4, asr r0
	...
    5b38:	01000000 	mrseq	r0, (UNDEF: 0)
    5b3c:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    5b4c:	00020000 	andeq	r0, r2, r0
    5b50:	0000007d 	andeq	r0, r0, sp, ror r0
    5b54:	00000000 	andeq	r0, r0, r0
    5b58:	00020000 	andeq	r0, r2, r0
    5b5c:	0000107d 	andeq	r1, r0, sp, ror r0
	...
    5b70:	00010000 	andeq	r0, r1, r0
    5b74:	00000050 	andeq	r0, r0, r0, asr r0
    5b78:	00000000 	andeq	r0, r0, r0
    5b7c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    5b9c:	00510001 	subseq	r0, r1, r1
    5ba0:	00000000 	andeq	r0, r0, r0
    5ba4:	01000000 	mrseq	r0, (UNDEF: 0)
    5ba8:	00005400 	andeq	r5, r0, r0, lsl #8
    5bac:	00000000 	andeq	r0, r0, r0
    5bb0:	00040000 	andeq	r0, r4, r0
    5bb4:	9f5101f3 	svcls	0x005101f3
	...
    5bc0:	00510001 	subseq	r0, r1, r1
    5bc4:	00000000 	andeq	r0, r0, r0
    5bc8:	01000000 	mrseq	r0, (UNDEF: 0)
    5bcc:	00005400 	andeq	r5, r0, r0, lsl #8
    5bd0:	00000000 	andeq	r0, r0, r0
    5bd4:	00040000 	andeq	r0, r4, r0
    5bd8:	9f5101f3 	svcls	0x005101f3
	...
    5bf0:	00550001 	subseq	r0, r5, r1
    5bf4:	00000000 	andeq	r0, r0, r0
    5bf8:	01000000 	mrseq	r0, (UNDEF: 0)
    5bfc:	00005500 	andeq	r5, r0, r0, lsl #10
	...
    5c08:	00000001 	andeq	r0, r0, r1
    5c0c:	00000000 	andeq	r0, r0, r0
    5c10:	00010000 	andeq	r0, r1, r0
    5c14:	00000054 	andeq	r0, r0, r4, asr r0
    5c18:	00000000 	andeq	r0, r0, r0
    5c1c:	31000200 	mrscc	r0, R8_usr
    5c20:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    5c30:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    5c3c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    5c40:	00000010 	andeq	r0, r0, r0, lsl r0
	...
    5c54:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    5c60:	00550001 	subseq	r0, r5, r1
	...
    5c78:	01000000 	mrseq	r0, (UNDEF: 0)
    5c7c:	00005100 	andeq	r5, r0, r0, lsl #2
    5c80:	00000000 	andeq	r0, r0, r0
    5c84:	00010000 	andeq	r0, r1, r0
    5c88:	00000054 	andeq	r0, r0, r4, asr r0
    5c8c:	00000000 	andeq	r0, r0, r0
    5c90:	74000300 	strvc	r0, [r0], #-768	; 0xfffffd00
    5c94:	00009f70 	andeq	r9, r0, r0, ror pc
    5c98:	00000000 	andeq	r0, r0, r0
    5c9c:	00040000 	andeq	r0, r4, r0
    5ca0:	9f5101f3 	svcls	0x005101f3
	...
    5cb8:	00520001 	subseq	r0, r2, r1
    5cbc:	00000000 	andeq	r0, r0, r0
    5cc0:	01000000 	mrseq	r0, (UNDEF: 0)
    5cc4:	00005600 	andeq	r5, r0, r0, lsl #12
    5cc8:	00000000 	andeq	r0, r0, r0
    5ccc:	00080000 	andeq	r0, r8, r0
	...
    5cd8:	00010000 	andeq	r0, r1, r0
    5cdc:	00000050 	andeq	r0, r0, r0, asr r0
    5ce0:	00000000 	andeq	r0, r0, r0
    5ce4:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    5cfc:	00530001 	subseq	r0, r3, r1
    5d00:	00000000 	andeq	r0, r0, r0
    5d04:	01000000 	mrseq	r0, (UNDEF: 0)
    5d08:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    5d1c:	00010000 	andeq	r0, r1, r0
    5d20:	00000050 	andeq	r0, r0, r0, asr r0
    5d24:	00000000 	andeq	r0, r0, r0
    5d28:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    5d40:	00530001 	subseq	r0, r3, r1
    5d44:	00000000 	andeq	r0, r0, r0
    5d48:	01000000 	mrseq	r0, (UNDEF: 0)
    5d4c:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    5d60:	00530001 	subseq	r0, r3, r1
	...
    5d74:	52000100 	andpl	r0, r0, #0, 2
	...
    5d88:	007d0002 	rsbseq	r0, sp, r2
	...
    5d94:	187d0002 	ldmdane	sp!, {r1}^
	...
    5dac:	00500001 	subseq	r0, r0, r1
    5db0:	00000000 	andeq	r0, r0, r0
    5db4:	01000000 	mrseq	r0, (UNDEF: 0)
    5db8:	00005600 	andeq	r5, r0, r0, lsl #12
	...
    5dec:	00510001 	subseq	r0, r1, r1
    5df0:	00000000 	andeq	r0, r0, r0
    5df4:	01000000 	mrseq	r0, (UNDEF: 0)
    5df8:	00005400 	andeq	r5, r0, r0, lsl #8
    5dfc:	00000000 	andeq	r0, r0, r0
    5e00:	00030000 	andeq	r0, r3, r0
    5e04:	009f7074 	addseq	r7, pc, r4, ror r0	; <UNPREDICTABLE>
    5e08:	00000000 	andeq	r0, r0, r0
    5e0c:	04000000 	streq	r0, [r0], #-0
    5e10:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    5e14:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    5e18:	00000000 	andeq	r0, r0, r0
    5e1c:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    5e28:	70740003 	rsbsvc	r0, r4, r3
    5e2c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    5e30:	00000000 	andeq	r0, r0, r0
    5e34:	f3000400 	vshl.u8	d0, d0, d0
    5e38:	009f5101 	addseq	r5, pc, r1, lsl #2
    5e3c:	00000000 	andeq	r0, r0, r0
    5e40:	01000000 	mrseq	r0, (UNDEF: 0)
    5e44:	00005400 	andeq	r5, r0, r0, lsl #8
    5e48:	00000000 	andeq	r0, r0, r0
    5e4c:	00030000 	andeq	r0, r3, r0
    5e50:	009f7074 	addseq	r7, pc, r4, ror r0	; <UNPREDICTABLE>
    5e54:	00000000 	andeq	r0, r0, r0
    5e58:	04000000 	streq	r0, [r0], #-0
    5e5c:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    5e60:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    5e64:	00000000 	andeq	r0, r0, r0
    5e68:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    5e74:	70740003 	rsbsvc	r0, r4, r3
    5e78:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    5e7c:	00000000 	andeq	r0, r0, r0
    5e80:	f3000400 	vshl.u8	d0, d0, d0
    5e84:	009f5101 	addseq	r5, pc, r1, lsl #2
    5e88:	00000000 	andeq	r0, r0, r0
    5e8c:	01000000 	mrseq	r0, (UNDEF: 0)
    5e90:	00005400 	andeq	r5, r0, r0, lsl #8
    5e94:	00000000 	andeq	r0, r0, r0
    5e98:	00040000 	andeq	r0, r4, r0
    5e9c:	9f5101f3 	svcls	0x005101f3
	...
    5ea8:	00540001 	subseq	r0, r4, r1
    5eac:	00000000 	andeq	r0, r0, r0
    5eb0:	04000000 	streq	r0, [r0], #-0
    5eb4:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    5eb8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    5ed0:	01000000 	mrseq	r0, (UNDEF: 0)
    5ed4:	00005200 	andeq	r5, r0, r0, lsl #4
    5ed8:	00000000 	andeq	r0, r0, r0
    5edc:	00010000 	andeq	r0, r1, r0
    5ee0:	00000057 	andeq	r0, r0, r7, asr r0
    5ee4:	00000000 	andeq	r0, r0, r0
    5ee8:	f3000400 	vshl.u8	d0, d0, d0
    5eec:	009f5201 	addseq	r5, pc, r1, lsl #4
    5ef0:	00000000 	andeq	r0, r0, r0
    5ef4:	01000000 	mrseq	r0, (UNDEF: 0)
    5ef8:	00005700 	andeq	r5, r0, r0, lsl #14
    5efc:	00000000 	andeq	r0, r0, r0
    5f00:	00040000 	andeq	r0, r4, r0
    5f04:	9f5201f3 	svcls	0x005201f3
	...
    5f1c:	00530001 	subseq	r0, r3, r1
    5f20:	00000000 	andeq	r0, r0, r0
    5f24:	04000000 	streq	r0, [r0], #-0
    5f28:	5301f300 	movwpl	pc, #4864	; 0x1300	; <UNPREDICTABLE>
    5f2c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    5f40:	91000200 	mrsls	r0, R8_usr
	...
    5f4c:	91000200 	mrsls	r0, R8_usr
	...
    5f64:	91000200 	mrsls	r0, R8_usr
    5f68:	00000004 	andeq	r0, r0, r4
    5f6c:	00000000 	andeq	r0, r0, r0
    5f70:	91000200 	mrsls	r0, R8_usr
    5f74:	00000004 	andeq	r0, r0, r4
    5f78:	00000000 	andeq	r0, r0, r0
    5f7c:	00000900 	andeq	r0, r0, r0, lsl #18
	...
    5f88:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    5f94:	00560001 	subseq	r0, r6, r1
	...
    5fa8:	01000000 	mrseq	r0, (UNDEF: 0)
    5fac:	00005c00 	andeq	r5, r0, r0, lsl #24
    5fb0:	00000000 	andeq	r0, r0, r0
    5fb4:	00010000 	andeq	r0, r1, r0
    5fb8:	0000005c 	andeq	r0, r0, ip, asr r0
    5fbc:	00000000 	andeq	r0, r0, r0
    5fc0:	00000300 	andeq	r0, r0, r0, lsl #6
	...
    5fd0:	31000200 	mrscc	r0, R8_usr
    5fd4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    5fd8:	00000000 	andeq	r0, r0, r0
    5fdc:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    5fe8:	9f310002 	svcls	0x00310002
	...
    5ff4:	00540001 	subseq	r0, r4, r1
	...
    6008:	01000000 	mrseq	r0, (UNDEF: 0)
    600c:	00005000 	andeq	r5, r0, r0
    6010:	00000000 	andeq	r0, r0, r0
    6014:	00010000 	andeq	r0, r1, r0
    6018:	00000050 	andeq	r0, r0, r0, asr r0
	...
    602c:	53000100 	movwpl	r0, #256	; 0x100
	...
    6038:	00530001 	subseq	r0, r3, r1
	...
    604c:	53000100 	movwpl	r0, #256	; 0x100
	...
    6060:	00010000 	andeq	r0, r1, r0
    6064:	00000052 	andeq	r0, r0, r2, asr r0
	...
    6074:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    6080:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    6084:	00000018 	andeq	r0, r0, r8, lsl r0
	...
    6098:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    60a4:	00540001 	subseq	r0, r4, r1
	...
    60d8:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    60e4:	00550001 	subseq	r0, r5, r1
    60e8:	00000000 	andeq	r0, r0, r0
    60ec:	03000000 	movweq	r0, #0
    60f0:	9f707500 	svcls	0x00707500
	...
    60fc:	01f30004 	mvnseq	r0, r4
    6100:	00009f51 	andeq	r9, r0, r1, asr pc
    6104:	00000000 	andeq	r0, r0, r0
    6108:	00010000 	andeq	r0, r1, r0
    610c:	00000055 	andeq	r0, r0, r5, asr r0
    6110:	00000000 	andeq	r0, r0, r0
    6114:	75000300 	strvc	r0, [r0, #-768]	; 0xfffffd00
    6118:	00009f70 	andeq	r9, r0, r0, ror pc
    611c:	00000000 	andeq	r0, r0, r0
    6120:	00040000 	andeq	r0, r4, r0
    6124:	9f5101f3 	svcls	0x005101f3
	...
    6130:	00550001 	subseq	r0, r5, r1
    6134:	00000000 	andeq	r0, r0, r0
    6138:	03000000 	movweq	r0, #0
    613c:	9f707500 	svcls	0x00707500
	...
    6148:	01f30004 	mvnseq	r0, r4
    614c:	00009f51 	andeq	r9, r0, r1, asr pc
    6150:	00000000 	andeq	r0, r0, r0
    6154:	00010000 	andeq	r0, r1, r0
    6158:	00000055 	andeq	r0, r0, r5, asr r0
    615c:	00000000 	andeq	r0, r0, r0
    6160:	75000300 	strvc	r0, [r0, #-768]	; 0xfffffd00
    6164:	00009f70 	andeq	r9, r0, r0, ror pc
    6168:	00000000 	andeq	r0, r0, r0
    616c:	00040000 	andeq	r0, r4, r0
    6170:	9f5101f3 	svcls	0x005101f3
	...
    617c:	00550001 	subseq	r0, r5, r1
    6180:	00000000 	andeq	r0, r0, r0
    6184:	04000000 	streq	r0, [r0], #-0
    6188:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    618c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    6190:	00000000 	andeq	r0, r0, r0
    6194:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    61a0:	01f30004 	mvnseq	r0, r4
    61a4:	00009f51 	andeq	r9, r0, r1, asr pc
	...
    61c0:	00520001 	subseq	r0, r2, r1
    61c4:	00000000 	andeq	r0, r0, r0
    61c8:	01000000 	mrseq	r0, (UNDEF: 0)
    61cc:	00005700 	andeq	r5, r0, r0, lsl #14
    61d0:	00000000 	andeq	r0, r0, r0
    61d4:	00040000 	andeq	r0, r4, r0
    61d8:	9f5201f3 	svcls	0x005201f3
	...
    61e4:	00570001 	subseq	r0, r7, r1
    61e8:	00000000 	andeq	r0, r0, r0
    61ec:	04000000 	streq	r0, [r0], #-0
    61f0:	5201f300 	andpl	pc, r1, #0, 6
    61f4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    6208:	53000100 	movwpl	r0, #256	; 0x100
	...
    6214:	01f30004 	mvnseq	r0, r4
    6218:	00009f53 	andeq	r9, r0, r3, asr pc
	...
    622c:	00020000 	andeq	r0, r2, r0
    6230:	00000091 	muleq	r0, r1, r0
    6234:	00000000 	andeq	r0, r0, r0
    6238:	00020000 	andeq	r0, r2, r0
    623c:	00000091 	muleq	r0, r1, r0
    6240:	00000000 	andeq	r0, r0, r0
    6244:	00070000 	andeq	r0, r7, r0
	...
    6250:	00010000 	andeq	r0, r1, r0
    6254:	00000050 	andeq	r0, r0, r0, asr r0
    6258:	00000000 	andeq	r0, r0, r0
    625c:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    6268:	00000002 	andeq	r0, r0, r2
	...
    6278:	9f310002 	svcls	0x00310002
	...
    6284:	00550001 	subseq	r0, r5, r1
    6288:	00000000 	andeq	r0, r0, r0
    628c:	02000000 	andeq	r0, r0, #0
    6290:	009f3100 	addseq	r3, pc, r0, lsl #2
    6294:	00000000 	andeq	r0, r0, r0
    6298:	01000000 	mrseq	r0, (UNDEF: 0)
    629c:	00005500 	andeq	r5, r0, r0, lsl #10
	...
    62b4:	00500001 	subseq	r0, r0, r1
    62b8:	00000000 	andeq	r0, r0, r0
    62bc:	01000000 	mrseq	r0, (UNDEF: 0)
    62c0:	00005000 	andeq	r5, r0, r0
    62c4:	00000000 	andeq	r0, r0, r0
    62c8:	00010000 	andeq	r0, r1, r0
    62cc:	00000050 	andeq	r0, r0, r0, asr r0
	...
    62e0:	53000100 	movwpl	r0, #256	; 0x100
	...
    62ec:	00530001 	subseq	r0, r3, r1
	...
    6300:	53000100 	movwpl	r0, #256	; 0x100
	...
    6314:	007d0002 	rsbseq	r0, sp, r2
	...
    6320:	187d0002 	ldmdane	sp!, {r1}^
	...
    633c:	00500001 	subseq	r0, r0, r1
    6340:	00000000 	andeq	r0, r0, r0
    6344:	01000000 	mrseq	r0, (UNDEF: 0)
    6348:	00005400 	andeq	r5, r0, r0, lsl #8
    634c:	00000000 	andeq	r0, r0, r0
    6350:	00040000 	andeq	r0, r4, r0
    6354:	9f5001f3 	svcls	0x005001f3
	...
    6360:	00540001 	subseq	r0, r4, r1
	...
    6374:	01000000 	mrseq	r0, (UNDEF: 0)
    6378:	00005100 	andeq	r5, r0, r0, lsl #2
    637c:	00000000 	andeq	r0, r0, r0
    6380:	00010000 	andeq	r0, r1, r0
    6384:	00000058 	andeq	r0, r0, r8, asr r0
	...
    639c:	01000000 	mrseq	r0, (UNDEF: 0)
    63a0:	00005200 	andeq	r5, r0, r0, lsl #4
    63a4:	00000000 	andeq	r0, r0, r0
    63a8:	00010000 	andeq	r0, r1, r0
    63ac:	00000056 	andeq	r0, r0, r6, asr r0
    63b0:	00000000 	andeq	r0, r0, r0
    63b4:	f3000400 	vshl.u8	d0, d0, d0
    63b8:	009f5201 	addseq	r5, pc, r1, lsl #4
    63bc:	00000000 	andeq	r0, r0, r0
    63c0:	01000000 	mrseq	r0, (UNDEF: 0)
    63c4:	00005600 	andeq	r5, r0, r0, lsl #12
    63c8:	00000000 	andeq	r0, r0, r0
    63cc:	00040000 	andeq	r0, r4, r0
    63d0:	9f5201f3 	svcls	0x005201f3
	...
    63ec:	00010000 	andeq	r0, r1, r0
    63f0:	00000053 	andeq	r0, r0, r3, asr r0
    63f4:	00000000 	andeq	r0, r0, r0
    63f8:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    6404:	01f30004 	mvnseq	r0, r4
    6408:	00009f53 	andeq	r9, r0, r3, asr pc
    640c:	00000000 	andeq	r0, r0, r0
    6410:	00010000 	andeq	r0, r1, r0
    6414:	00000055 	andeq	r0, r0, r5, asr r0
    6418:	00000000 	andeq	r0, r0, r0
    641c:	f3000400 	vshl.u8	d0, d0, d0
    6420:	009f5301 	addseq	r5, pc, r1, lsl #6
	...
    6434:	02000000 	andeq	r0, r0, #0
    6438:	00009100 	andeq	r9, r0, r0, lsl #2
    643c:	00000000 	andeq	r0, r0, r0
    6440:	02000000 	andeq	r0, r0, #0
    6444:	00009100 	andeq	r9, r0, r0, lsl #2
	...
    6450:	00000100 	andeq	r0, r0, r0, lsl #2
    6454:	00000000 	andeq	r0, r0, r0
    6458:	01000000 	mrseq	r0, (UNDEF: 0)
    645c:	00005500 	andeq	r5, r0, r0, lsl #10
    6460:	00000000 	andeq	r0, r0, r0
    6464:	00020000 	andeq	r0, r2, r0
    6468:	00009f31 	andeq	r9, r0, r1, lsr pc
	...
    647c:	00010000 	andeq	r0, r1, r0
    6480:	00000050 	andeq	r0, r0, r0, asr r0
    6484:	00000000 	andeq	r0, r0, r0
    6488:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    6494:	01000101 	tsteq	r0, r1, lsl #2
    6498:	00000001 	andeq	r0, r0, r1
    649c:	00000000 	andeq	r0, r0, r0
    64a0:	00020000 	andeq	r0, r2, r0
    64a4:	00009f30 	andeq	r9, r0, r0, lsr pc
    64a8:	00000000 	andeq	r0, r0, r0
    64ac:	00020000 	andeq	r0, r2, r0
    64b0:	00009f30 	andeq	r9, r0, r0, lsr pc
    64b4:	00000000 	andeq	r0, r0, r0
    64b8:	00020000 	andeq	r0, r2, r0
    64bc:	00009f31 	andeq	r9, r0, r1, lsr pc
	...
    64cc:	00020000 	andeq	r0, r2, r0
    64d0:	0000007d 	andeq	r0, r0, sp, ror r0
    64d4:	00000000 	andeq	r0, r0, r0
    64d8:	00020000 	andeq	r0, r2, r0
    64dc:	0000107d 	andeq	r1, r0, sp, ror r0
	...
    64f4:	00010000 	andeq	r0, r1, r0
    64f8:	00000050 	andeq	r0, r0, r0, asr r0
    64fc:	00000000 	andeq	r0, r0, r0
    6500:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    650c:	01f30004 	mvnseq	r0, r4
    6510:	00009f50 	andeq	r9, r0, r0, asr pc
    6514:	00000000 	andeq	r0, r0, r0
    6518:	00010000 	andeq	r0, r1, r0
    651c:	00000054 	andeq	r0, r0, r4, asr r0
	...
    6530:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    653c:	00560001 	subseq	r0, r6, r1
	...
    6548:	01010000 	mrseq	r0, (UNDEF: 1)
	...
    655c:	52000100 	andpl	r0, r0, #0, 2
	...
    6568:	00550001 	subseq	r0, r5, r1
    656c:	00000000 	andeq	r0, r0, r0
    6570:	04000000 	streq	r0, [r0], #-0
    6574:	5201f300 	andpl	pc, r1, #0, 6
    6578:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    657c:	00000000 	andeq	r0, r0, r0
    6580:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    658c:	01f30004 	mvnseq	r0, r4
    6590:	00009f52 	andeq	r9, r0, r2, asr pc
    6594:	00000000 	andeq	r0, r0, r0
    6598:	00010000 	andeq	r0, r1, r0
    659c:	00000055 	andeq	r0, r0, r5, asr r0
    65a0:	00000000 	andeq	r0, r0, r0
    65a4:	f3000400 	vshl.u8	d0, d0, d0
    65a8:	009f5201 	addseq	r5, pc, r1, lsl #4
	...
    65bc:	01000000 	mrseq	r0, (UNDEF: 0)
    65c0:	00005500 	andeq	r5, r0, r0, lsl #10
    65c4:	00000000 	andeq	r0, r0, r0
    65c8:	00010000 	andeq	r0, r1, r0
    65cc:	00000055 	andeq	r0, r0, r5, asr r0
	...
    65e0:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    65ec:	00500001 	subseq	r0, r0, r1
    65f0:	00000000 	andeq	r0, r0, r0
    65f4:	02000000 	andeq	r0, r0, #0
    65f8:	01010001 	tsteq	r1, r1
	...
    6604:	30000200 	andcc	r0, r0, r0, lsl #4
    6608:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    660c:	00000000 	andeq	r0, r0, r0
    6610:	30000200 	andcc	r0, r0, r0, lsl #4
    6614:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    6618:	00000000 	andeq	r0, r0, r0
    661c:	31000200 	mrscc	r0, R8_usr
    6620:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    6630:	01000000 	mrseq	r0, (UNDEF: 0)
    6634:	00005000 	andeq	r5, r0, r0
	...
    6648:	00500001 	subseq	r0, r0, r1
	...
    6658:	02000000 	andeq	r0, r0, #0
    665c:	00007d00 	andeq	r7, r0, r0, lsl #26
    6660:	00000000 	andeq	r0, r0, r0
    6664:	02000000 	andeq	r0, r0, #0
    6668:	00107d00 	andseq	r7, r0, r0, lsl #26
    666c:	00000000 	andeq	r0, r0, r0
    6670:	02000000 	andeq	r0, r0, #0
    6674:	00007d00 	andeq	r7, r0, r0, lsl #26
	...
    6690:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    669c:	00540001 	subseq	r0, r4, r1
    66a0:	00000000 	andeq	r0, r0, r0
    66a4:	01000000 	mrseq	r0, (UNDEF: 0)
    66a8:	00005000 	andeq	r5, r0, r0
    66ac:	00000000 	andeq	r0, r0, r0
    66b0:	00010000 	andeq	r0, r1, r0
    66b4:	00000054 	andeq	r0, r0, r4, asr r0
    66b8:	00000000 	andeq	r0, r0, r0
    66bc:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    66d4:	00010000 	andeq	r0, r1, r0
    66d8:	00000051 	andeq	r0, r0, r1, asr r0
    66dc:	00000000 	andeq	r0, r0, r0
    66e0:	f3000400 	vshl.u8	d0, d0, d0
    66e4:	009f5101 	addseq	r5, pc, r1, lsl #2
    66e8:	00000000 	andeq	r0, r0, r0
    66ec:	01000000 	mrseq	r0, (UNDEF: 0)
    66f0:	00005100 	andeq	r5, r0, r0, lsl #2
    66f4:	00000000 	andeq	r0, r0, r0
    66f8:	00020000 	andeq	r0, r2, r0
	...
    670c:	00500001 	subseq	r0, r0, r1
    6710:	00000000 	andeq	r0, r0, r0
    6714:	01000000 	mrseq	r0, (UNDEF: 0)
    6718:	00005400 	andeq	r5, r0, r0, lsl #8
    671c:	00000000 	andeq	r0, r0, r0
    6720:	00010000 	andeq	r0, r1, r0
    6724:	00000050 	andeq	r0, r0, r0, asr r0
    6728:	00000000 	andeq	r0, r0, r0
    672c:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    6738:	00500001 	subseq	r0, r0, r1
    673c:	00000000 	andeq	r0, r0, r0
    6740:	03000000 	movweq	r0, #0
	...
    674c:	52000100 	andpl	r0, r0, #0, 2
	...
    6768:	00530001 	subseq	r0, r3, r1
    676c:	00000000 	andeq	r0, r0, r0
    6770:	01000000 	mrseq	r0, (UNDEF: 0)
    6774:	00005300 	andeq	r5, r0, r0, lsl #6
    6778:	00000000 	andeq	r0, r0, r0
    677c:	00020000 	andeq	r0, r2, r0
    6780:	00002c70 	andeq	r2, r0, r0, ror ip
    6784:	00000000 	andeq	r0, r0, r0
    6788:	00020000 	andeq	r0, r2, r0
    678c:	00002c74 	andeq	r2, r0, r4, ror ip
	...
    67a0:	00530001 	subseq	r0, r3, r1
    67a4:	00000000 	andeq	r0, r0, r0
    67a8:	ac000000 	stcge	0, cr0, [r0], {-0}
    67ac:	b210002c 	andslt	r0, r0, #44	; 0x2c
    67b0:	0210002c 	andseq	r0, r0, #44	; 0x2c
    67b4:	b2007d00 	andlt	r7, r0, #0, 26
    67b8:	1a10002c 	bne	406870 <__RAM_SIZE+0x306870>
    67bc:	0210002d 	andseq	r0, r0, #45	; 0x2d
    67c0:	1a107d00 	bne	425bc8 <__RAM_SIZE+0x325bc8>
    67c4:	1e10002d 	cdpne	0, 1, cr0, cr0, cr13, {1}
    67c8:	0210002d 	andseq	r0, r0, #45	; 0x2d
    67cc:	1e007d00 	cdpne	13, 0, cr7, cr0, cr0, {0}
    67d0:	2c10002d 	ldccs	0, cr0, [r0], {45}	; 0x2d
    67d4:	0210002d 	andseq	r0, r0, #45	; 0x2d
    67d8:	00107d00 	andseq	r7, r0, r0, lsl #26
	...
    67f0:	ac000000 	stcge	0, cr0, [r0], {-0}
    67f4:	c610002c 	ldrgt	r0, [r0], -ip, lsr #32
    67f8:	0110002c 	tsteq	r0, ip, lsr #32
    67fc:	2cc65000 	stclcs	0, cr5, [r6], {0}
    6800:	2cc81000 	stclcs	0, cr1, [r8], {0}
    6804:	00011000 	andeq	r1, r1, r0
    6808:	002cc854 	eoreq	ip, ip, r4, asr r8
    680c:	002ccc10 	eoreq	ip, ip, r0, lsl ip
    6810:	50000110 	andpl	r0, r0, r0, lsl r1
    6814:	10002ccc 	andne	r2, r0, ip, asr #25
    6818:	10002d1a 	andne	r2, r0, sl, lsl sp
    681c:	1a540001 	bne	1506828 <__RAM_SIZE+0x1406828>
    6820:	1c10002d 	ldcne	0, cr0, [r0], {45}	; 0x2d
    6824:	0110002d 	tsteq	r0, sp, lsr #32
    6828:	2d1c5000 	ldccs	0, cr5, [ip, #-0]
    682c:	2d1e1000 	ldccs	0, cr1, [lr, #-0]
    6830:	00041000 	andeq	r1, r4, r0
    6834:	9f5001f3 	svcls	0x005001f3
    6838:	10002d1e 	andne	r2, r0, lr, lsl sp
    683c:	10002d20 	andne	r2, r0, r0, lsr #26
    6840:	20500001 	subscs	r0, r0, r1
    6844:	2c10002d 	ldccs	0, cr0, [r0], {45}	; 0x2d
    6848:	0110002d 	tsteq	r0, sp, lsr #32
    684c:	00005400 	andeq	r5, r0, r0, lsl #8
    6850:	00000000 	andeq	r0, r0, r0
    6854:	00020000 	andeq	r0, r2, r0
	...
    6864:	2cac0000 	stccs	0, cr0, [ip]
    6868:	2cc61000 	stclcs	0, cr1, [r6], {0}
    686c:	00011000 	andeq	r1, r1, r0
    6870:	002cc650 	eoreq	ip, ip, r0, asr r6
    6874:	002cc810 	eoreq	ip, ip, r0, lsl r8
    6878:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    687c:	10002cc8 	andne	r2, r0, r8, asr #25
    6880:	10002ccc 	andne	r2, r0, ip, asr #25
    6884:	cc500001 	mrrcgt	0, 0, r0, r0, cr1	; <UNPREDICTABLE>
    6888:	1a10002c 	bne	406940 <__RAM_SIZE+0x306940>
    688c:	0110002d 	tsteq	r0, sp, lsr #32
    6890:	2d1a5400 	cfldrscs	mvf5, [sl, #-0]
    6894:	2d1c1000 	ldccs	0, cr1, [ip, #-0]
    6898:	00011000 	andeq	r1, r1, r0
    689c:	002d1c50 	eoreq	r1, sp, r0, asr ip
    68a0:	002d1e10 	eoreq	r1, sp, r0, lsl lr
    68a4:	f3000410 	vqshl.u8	d0, d0, d0
    68a8:	1e9f5001 	cdpne	0, 9, cr5, cr15, cr1, {0}
    68ac:	2010002d 	andscs	r0, r0, sp, lsr #32
    68b0:	0110002d 	tsteq	r0, sp, lsr #32
    68b4:	2d205000 	stccs	0, cr5, [r0, #-0]
    68b8:	2d2c1000 	stccs	0, cr1, [ip, #-0]
    68bc:	00011000 	andeq	r1, r1, r0
    68c0:	00000054 	andeq	r0, r0, r4, asr r0
    68c4:	00000000 	andeq	r0, r0, r0
    68c8:	00030300 	andeq	r0, r3, r0, lsl #6
    68cc:	00000404 	andeq	r0, r0, r4, lsl #8
    68d0:	002cac00 	eoreq	sl, ip, r0, lsl #24
    68d4:	002cc610 	eoreq	ip, ip, r0, lsl r6
    68d8:	30000210 	andcc	r0, r0, r0, lsl r2
    68dc:	002cc89f 	mlaeq	ip, pc, r8, ip	; <UNPREDICTABLE>
    68e0:	002d1610 	eoreq	r1, sp, r0, lsl r6
    68e4:	30000210 	andcc	r0, r0, r0, lsl r2
    68e8:	002d169f 	mlaeq	sp, pc, r6, r1	; <UNPREDICTABLE>
    68ec:	002d1a10 	eoreq	r1, sp, r0, lsl sl
    68f0:	31000210 	tstcc	r0, r0, lsl r2
    68f4:	002d1a9f 	mlaeq	sp, pc, sl, r1	; <UNPREDICTABLE>
    68f8:	002d2c10 	eoreq	r2, sp, r0, lsl ip
    68fc:	30000210 	andcc	r0, r0, r0, lsl r2
    6900:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    6904:	00000000 	andeq	r0, r0, r0
    6908:	f2000000 	vhadd.s8	d0, d0, d0
    690c:	fe10002c 	cdp2	0, 1, cr0, cr0, cr12, {1}
    6910:	0110002c 	tsteq	r0, ip, lsr #32
    6914:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    6924:	00020000 	andeq	r0, r2, r0
    6928:	0000007d 	andeq	r0, r0, sp, ror r0
    692c:	00000000 	andeq	r0, r0, r0
    6930:	00020000 	andeq	r0, r2, r0
    6934:	0000107d 	andeq	r1, r0, sp, ror r0
    6938:	00000000 	andeq	r0, r0, r0
    693c:	00020000 	andeq	r0, r2, r0
    6940:	0000007d 	andeq	r0, r0, sp, ror r0
    6944:	00000000 	andeq	r0, r0, r0
    6948:	00020000 	andeq	r0, r2, r0
    694c:	0000107d 	andeq	r1, r0, sp, ror r0
	...
    6970:	00010000 	andeq	r0, r1, r0
    6974:	00000050 	andeq	r0, r0, r0, asr r0
    6978:	00000000 	andeq	r0, r0, r0
    697c:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    6988:	00500001 	subseq	r0, r0, r1
    698c:	00000000 	andeq	r0, r0, r0
    6990:	01000000 	mrseq	r0, (UNDEF: 0)
    6994:	00005400 	andeq	r5, r0, r0, lsl #8
    6998:	00000000 	andeq	r0, r0, r0
    699c:	00010000 	andeq	r0, r1, r0
    69a0:	00000050 	andeq	r0, r0, r0, asr r0
    69a4:	00000000 	andeq	r0, r0, r0
    69a8:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    69b4:	00500001 	subseq	r0, r0, r1
    69b8:	00000000 	andeq	r0, r0, r0
    69bc:	04000000 	streq	r0, [r0], #-0
    69c0:	5001f300 	andpl	pc, r1, r0, lsl #6
    69c4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    69c8:	00000000 	andeq	r0, r0, r0
    69cc:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    69d8:	00540001 	subseq	r0, r4, r1
    69dc:	00000000 	andeq	r0, r0, r0
    69e0:	02000000 	andeq	r0, r0, #0
	...
    69fc:	01000000 	mrseq	r0, (UNDEF: 0)
    6a00:	00005000 	andeq	r5, r0, r0
    6a04:	00000000 	andeq	r0, r0, r0
    6a08:	00010000 	andeq	r0, r1, r0
    6a0c:	00000054 	andeq	r0, r0, r4, asr r0
    6a10:	00000000 	andeq	r0, r0, r0
    6a14:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    6a20:	00540001 	subseq	r0, r4, r1
    6a24:	00000000 	andeq	r0, r0, r0
    6a28:	01000000 	mrseq	r0, (UNDEF: 0)
    6a2c:	00005000 	andeq	r5, r0, r0
    6a30:	00000000 	andeq	r0, r0, r0
    6a34:	00010000 	andeq	r0, r1, r0
    6a38:	00000054 	andeq	r0, r0, r4, asr r0
    6a3c:	00000000 	andeq	r0, r0, r0
    6a40:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    6a4c:	01f30004 	mvnseq	r0, r4
    6a50:	00009f50 	andeq	r9, r0, r0, asr pc
    6a54:	00000000 	andeq	r0, r0, r0
    6a58:	00010000 	andeq	r0, r1, r0
    6a5c:	00000050 	andeq	r0, r0, r0, asr r0
    6a60:	00000000 	andeq	r0, r0, r0
    6a64:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    6a70:	00000003 	andeq	r0, r0, r3
	...
    6a7c:	00020000 	andeq	r0, r2, r0
    6a80:	00009f30 	andeq	r9, r0, r0, lsr pc
    6a84:	00000000 	andeq	r0, r0, r0
    6a88:	00020000 	andeq	r0, r2, r0
    6a8c:	00009f30 	andeq	r9, r0, r0, lsr pc
    6a90:	00000000 	andeq	r0, r0, r0
    6a94:	00020000 	andeq	r0, r2, r0
    6a98:	00009f31 	andeq	r9, r0, r1, lsr pc
	...
    6aac:	00530001 	subseq	r0, r3, r1
	...
    6ac0:	30000200 	andcc	r0, r0, r0, lsl #4
    6ac4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    6adc:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    6ae8:	01f30004 	mvnseq	r0, r4
    6aec:	00009f50 	andeq	r9, r0, r0, asr pc
    6af0:	00000000 	andeq	r0, r0, r0
    6af4:	00010000 	andeq	r0, r1, r0
    6af8:	00000050 	andeq	r0, r0, r0, asr r0
    6afc:	00000000 	andeq	r0, r0, r0
    6b00:	f3000400 	vshl.u8	d0, d0, d0
    6b04:	009f5001 	addseq	r5, pc, r1
    6b08:	00000000 	andeq	r0, r0, r0
    6b0c:	02000000 	andeq	r0, r0, #0
	...
    6b1c:	30000200 	andcc	r0, r0, r0, lsl #4
    6b20:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    6b24:	00000000 	andeq	r0, r0, r0
    6b28:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    6b34:	9f300002 	svcls	0x00300002
	...
    6b48:	00010000 	andeq	r0, r1, r0
    6b4c:	00000050 	andeq	r0, r0, r0, asr r0
    6b50:	00000000 	andeq	r0, r0, r0
    6b54:	00255200 	eoreq	r5, r5, r0, lsl #4
    6b58:	00255410 	eoreq	r5, r5, r0, lsl r4
    6b5c:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    6b60:	00255400 	eoreq	r5, r5, r0, lsl #8
    6b64:	00257610 	eoreq	r7, r5, r0, lsl r6
    6b68:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    6b6c:	00000008 	andeq	r0, r0, r8
	...
    6b80:	00255200 	eoreq	r5, r5, r0, lsl #4
    6b84:	00256010 	eoreq	r6, r5, r0, lsl r0
    6b88:	50000110 	andpl	r0, r0, r0, lsl r1
    6b8c:	10002560 	andne	r2, r0, r0, ror #10
    6b90:	10002562 	andne	r2, r0, r2, ror #10
    6b94:	62540001 	subsvs	r0, r4, #1
    6b98:	64100025 	ldrvs	r0, [r0], #-37	; 0xffffffdb
    6b9c:	01100025 	tsteq	r0, r5, lsr #32
    6ba0:	25645000 	strbcs	r5, [r4, #-0]!
    6ba4:	25701000 	ldrbcs	r1, [r0, #-0]!
    6ba8:	00011000 	andeq	r1, r1, r0
    6bac:	00257054 	eoreq	r7, r5, r4, asr r0
    6bb0:	00257310 	eoreq	r7, r5, r0, lsl r3
    6bb4:	50000110 	andpl	r0, r0, r0, lsl r1
    6bb8:	10002573 	andne	r2, r0, r3, ror r5
    6bbc:	10002576 	andne	r2, r0, r6, ror r5
    6bc0:	00540001 	subseq	r0, r4, r1
	...
    6bd0:	02000000 	andeq	r0, r0, #0
    6bd4:	00007d00 	andeq	r7, r0, r0, lsl #26
    6bd8:	00000000 	andeq	r0, r0, r0
    6bdc:	02000000 	andeq	r0, r0, #0
    6be0:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    6bf4:	01000000 	mrseq	r0, (UNDEF: 0)
    6bf8:	00005000 	andeq	r5, r0, r0
    6bfc:	00000000 	andeq	r0, r0, r0
    6c00:	00010000 	andeq	r0, r1, r0
    6c04:	00000050 	andeq	r0, r0, r0, asr r0
	...
    6c14:	01000000 	mrseq	r0, (UNDEF: 0)
    6c18:	00005300 	andeq	r5, r0, r0, lsl #6
    6c1c:	00000000 	andeq	r0, r0, r0
    6c20:	00010000 	andeq	r0, r1, r0
	...
    6c2c:	30730002 	rsbscc	r0, r3, r2
	...
    6c40:	00010000 	andeq	r0, r1, r0
    6c44:	00000050 	andeq	r0, r0, r0, asr r0
	...
    6c58:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    6c64:	00500001 	subseq	r0, r0, r1
    6c68:	00000000 	andeq	r0, r0, r0
    6c6c:	02000000 	andeq	r0, r0, #0
    6c70:	01010000 	mrseq	r0, (UNDEF: 1)
	...
    6c7c:	02000000 	andeq	r0, r0, #0
    6c80:	009f3000 	addseq	r3, pc, r0
    6c84:	00000000 	andeq	r0, r0, r0
    6c88:	01000000 	mrseq	r0, (UNDEF: 0)
    6c8c:	00005300 	andeq	r5, r0, r0, lsl #6
    6c90:	00000000 	andeq	r0, r0, r0
    6c94:	00050000 	andeq	r0, r5, r0
    6c98:	25320073 	ldrcs	r0, [r2, #-115]!	; 0xffffff8d
    6c9c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    6ca0:	00000000 	andeq	r0, r0, r0
    6ca4:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    6cb0:	10002578 	andne	r2, r0, r8, ror r5
    6cb4:	10002580 	andne	r2, r0, r0, lsl #11
    6cb8:	007d0002 	rsbseq	r0, sp, r2
    6cbc:	10002580 	andne	r2, r0, r0, lsl #11
    6cc0:	100025b4 			; <UNDEFINED> instruction: 0x100025b4
    6cc4:	087d0002 	ldmdaeq	sp!, {r1}^
    6cc8:	100025b4 			; <UNDEFINED> instruction: 0x100025b4
    6ccc:	100025c4 	andne	r2, r0, r4, asr #11
    6cd0:	007d0002 	rsbseq	r0, sp, r2
	...
    6cdc:	258a0000 	strcs	r0, [sl]
    6ce0:	25b41000 	ldrcs	r1, [r4, #0]!
    6ce4:	00011000 	andeq	r1, r1, r0
    6ce8:	00000054 	andeq	r0, r0, r4, asr r0
    6cec:	00000000 	andeq	r0, r0, r0
    6cf0:	0023cc00 	eoreq	ip, r3, r0, lsl #24
    6cf4:	0023ce10 	eoreq	ip, r3, r0, lsl lr
    6cf8:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    6cfc:	0023ce00 	eoreq	ip, r3, r0, lsl #28
    6d00:	00243410 	eoreq	r3, r4, r0, lsl r4
    6d04:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    6d08:	00000010 	andeq	r0, r0, r0, lsl r0
    6d0c:	00000000 	andeq	r0, r0, r0
    6d10:	00000200 	andeq	r0, r0, r0, lsl #4
    6d14:	0023ce00 	eoreq	ip, r3, r0, lsl #28
    6d18:	0023d210 	eoreq	sp, r3, r0, lsl r2
    6d1c:	30000210 	andcc	r0, r0, r0, lsl r2
    6d20:	0023d29f 	mlaeq	r3, pc, r2, sp	; <UNPREDICTABLE>
    6d24:	0023f010 	eoreq	pc, r3, r0, lsl r0	; <UNPREDICTABLE>
    6d28:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
	...
    6d34:	00000003 	andeq	r0, r0, r3
    6d38:	10002c64 	andne	r2, r0, r4, ror #24
    6d3c:	10002c96 	mulne	r0, r6, ip
    6d40:	9f310002 	svcls	0x00310002
    6d44:	10002c96 	mulne	r0, r6, ip
    6d48:	10002cac 	andne	r2, r0, ip, lsr #25
    6d4c:	00500001 	subseq	r0, r0, r1
    6d50:	00000000 	andeq	r0, r0, r0
    6d54:	cc000000 	stcgt	0, cr0, [r0], {-0}
    6d58:	ce100029 	cdpgt	0, 1, cr0, cr0, cr9, {1}
    6d5c:	02100029 	andseq	r0, r0, #41	; 0x29
    6d60:	ce007d00 	cdpgt	13, 0, cr7, cr0, cr0, {0}
    6d64:	04100029 	ldreq	r0, [r0], #-41	; 0xffffffd7
    6d68:	0210002a 	andseq	r0, r0, #42	; 0x2a
    6d6c:	00087d00 	andeq	r7, r8, r0, lsl #26
    6d70:	00000000 	andeq	r0, r0, r0
    6d74:	01000000 	mrseq	r0, (UNDEF: 0)
    6d78:	cc000000 	stcgt	0, cr0, [r0], {-0}
    6d7c:	d0100029 	andsle	r0, r0, r9, lsr #32
    6d80:	01100029 	tsteq	r0, r9, lsr #32
    6d84:	29d05000 	ldmibcs	r0, {ip, lr}^
    6d88:	2a041000 	bcs	10ad90 <__RAM_SIZE+0xad90>
    6d8c:	00041000 	andeq	r1, r4, r0
    6d90:	9f5001f3 	svcls	0x005001f3
	...
    6da0:	29d40000 	ldmibcs	r4, {}^	; <UNPREDICTABLE>
    6da4:	29d81000 	ldmibcs	r8, {ip}^
    6da8:	00011000 	andeq	r1, r1, r0
    6dac:	0029ea50 	eoreq	lr, r9, r0, asr sl
    6db0:	0029ed10 	eoreq	lr, r9, r0, lsl sp
    6db4:	50000110 	andpl	r0, r0, r0, lsl r1
    6db8:	100029f2 	strdne	r2, [r0], -r2	; <UNPREDICTABLE>
    6dbc:	100029f9 	strdne	r2, [r0], -r9
    6dc0:	00500001 	subseq	r0, r0, r1
    6dc4:	00000000 	andeq	r0, r0, r0
    6dc8:	dc000000 	stcle	0, cr0, [r0], {-0}
    6dcc:	de10002b 	cdple	0, 1, cr0, cr0, cr11, {1}
    6dd0:	0210002b 	andseq	r0, r0, #43	; 0x2b
    6dd4:	de007d00 	cdple	13, 0, cr7, cr0, cr0, {0}
    6dd8:	5810002b 	ldmdapl	r0, {r0, r1, r3, r5}
    6ddc:	0210002c 	andseq	r0, r0, #44	; 0x2c
    6de0:	00187d00 	andseq	r7, r8, r0, lsl #26
	...
    6e00:	002bdc00 	eoreq	sp, fp, r0, lsl #24
    6e04:	002be510 	eoreq	lr, fp, r0, lsl r5
    6e08:	50000110 	andpl	r0, r0, r0, lsl r1
    6e0c:	10002be5 	andne	r2, r0, r5, ror #23
    6e10:	10002c04 	andne	r2, r0, r4, lsl #24
    6e14:	04540001 	ldrbeq	r0, [r4], #-1
    6e18:	0c10002c 	ldceq	0, cr0, [r0], {44}	; 0x2c
    6e1c:	0410002c 	ldreq	r0, [r0], #-44	; 0xffffffd4
    6e20:	5001f300 	andpl	pc, r1, r0, lsl #6
    6e24:	002c0c9f 	mlaeq	ip, pc, ip, r0	; <UNPREDICTABLE>
    6e28:	002c2810 	eoreq	r2, ip, r0, lsl r8
    6e2c:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    6e30:	10002c28 	andne	r2, r0, r8, lsr #24
    6e34:	10002c2a 	andne	r2, r0, sl, lsr #24
    6e38:	01f30004 	mvnseq	r0, r4
    6e3c:	2c2a9f50 	stccs	15, cr9, [sl], #-320	; 0xfffffec0
    6e40:	2c341000 	ldccs	0, cr1, [r4], #-0
    6e44:	00011000 	andeq	r1, r1, r0
    6e48:	002c3454 	eoreq	r3, ip, r4, asr r4
    6e4c:	002c3610 	eoreq	r3, ip, r0, lsl r6
    6e50:	f3000410 	vqshl.u8	d0, d0, d0
    6e54:	369f5001 	ldrcc	r5, [pc], r1
    6e58:	4410002c 	ldrmi	r0, [r0], #-44	; 0xffffffd4
    6e5c:	0110002c 	tsteq	r0, ip, lsr #32
    6e60:	2c445400 	cfstrdcs	mvd5, [r4], {-0}
    6e64:	2c461000 	marcs	acc0, r1, r6
    6e68:	00041000 	andeq	r1, r4, r0
    6e6c:	9f5001f3 	svcls	0x005001f3
    6e70:	10002c46 	andne	r2, r0, r6, asr #24
    6e74:	10002c48 	andne	r2, r0, r8, asr #24
    6e78:	48540001 	ldmdami	r4, {r0}^
    6e7c:	5810002c 	ldmdapl	r0, {r2, r3, r5}
    6e80:	0410002c 	ldreq	r0, [r0], #-44	; 0xffffffd4
    6e84:	5001f300 	andpl	pc, r1, r0, lsl #6
    6e88:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    6e94:	002bdc00 	eoreq	sp, fp, r0, lsl #24
    6e98:	002be510 	eoreq	lr, fp, r0, lsl r5
    6e9c:	51000110 	tstpl	r0, r0, lsl r1
    6ea0:	10002be5 	andne	r2, r0, r5, ror #23
    6ea4:	10002c58 	andne	r2, r0, r8, asr ip
    6ea8:	00550001 	subseq	r0, r5, r1
    6eac:	00000000 	andeq	r0, r0, r0
    6eb0:	01000000 	mrseq	r0, (UNDEF: 0)
    6eb4:	01000000 	mrseq	r0, (UNDEF: 0)
    6eb8:	01000100 	mrseq	r0, (UNDEF: 16)
    6ebc:	002c0200 	eoreq	r0, ip, r0, lsl #4
    6ec0:	002c0410 	eoreq	r0, ip, r0, lsl r4
    6ec4:	31000210 	tstcc	r0, r0, lsl r2
    6ec8:	002c049f 	mlaeq	ip, pc, r4, r0	; <UNPREDICTABLE>
    6ecc:	002c0c10 	eoreq	r0, ip, r0, lsl ip
    6ed0:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    6ed4:	10002c22 	andne	r2, r0, r2, lsr #24
    6ed8:	10002c2a 	andne	r2, r0, sl, lsr #24
    6edc:	9f310002 	svcls	0x00310002
    6ee0:	10002c32 	andne	r2, r0, r2, lsr ip
    6ee4:	10002c36 	andne	r2, r0, r6, lsr ip
    6ee8:	9f310002 	svcls	0x00310002
    6eec:	10002c42 	andne	r2, r0, r2, asr #24
    6ef0:	10002c46 	andne	r2, r0, r6, asr #24
    6ef4:	9f300002 	svcls	0x00300002
	...
    6f04:	2bea0000 	blcs	ffa86f0c <__StackTop+0xc7986f0c>
    6f08:	2bfe1000 	blcs	fff8af10 <__StackTop+0xc7e8af10>
    6f0c:	00011000 	andeq	r1, r1, r0
    6f10:	002c0c52 	eoreq	r0, ip, r2, asr ip
    6f14:	002c4110 	eoreq	r4, ip, r0, lsl r1
    6f18:	52000110 	andpl	r0, r0, #16, 2
    6f1c:	10002c46 	andne	r2, r0, r6, asr #24
    6f20:	10002c58 	andne	r2, r0, r8, asr ip
    6f24:	00520001 	subseq	r0, r2, r1
	...
    6f34:	002bee00 	eoreq	lr, fp, r0, lsl #28
    6f38:	002c0410 	eoreq	r0, ip, r0, lsl r4
    6f3c:	50000110 	andpl	r0, r0, r0, lsl r1
    6f40:	10002c0c 	andne	r2, r0, ip, lsl #24
    6f44:	10002c3e 	andne	r2, r0, lr, lsr ip
    6f48:	46500001 	ldrbmi	r0, [r0], -r1
    6f4c:	5810002c 	ldmdapl	r0, {r2, r3, r5}
    6f50:	0110002c 	tsteq	r0, ip, lsr #32
    6f54:	00005000 	andeq	r5, r0, r0
	...
    6f64:	00020000 	andeq	r0, r2, r0
    6f68:	0000007d 	andeq	r0, r0, sp, ror r0
    6f6c:	00000000 	andeq	r0, r0, r0
    6f70:	00020000 	andeq	r0, r2, r0
    6f74:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    6f8c:	00500001 	subseq	r0, r0, r1
    6f90:	00000000 	andeq	r0, r0, r0
    6f94:	01000000 	mrseq	r0, (UNDEF: 0)
    6f98:	00005400 	andeq	r5, r0, r0, lsl #8
    6f9c:	00000000 	andeq	r0, r0, r0
    6fa0:	00040000 	andeq	r0, r4, r0
    6fa4:	9f5001f3 	svcls	0x005001f3
	...
    6fb8:	007d0002 	rsbseq	r0, sp, r2
	...
    6fc4:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    6fe0:	00500001 	subseq	r0, r0, r1
    6fe4:	00000000 	andeq	r0, r0, r0
    6fe8:	04000000 	streq	r0, [r0], #-0
    6fec:	5001f300 	andpl	pc, r1, r0, lsl #6
    6ff0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    6ff4:	00000000 	andeq	r0, r0, r0
    6ff8:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    7004:	01f30004 	mvnseq	r0, r4
    7008:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    701c:	00010000 	andeq	r0, r1, r0
    7020:	00000051 	andeq	r0, r0, r1, asr r0
    7024:	00000000 	andeq	r0, r0, r0
    7028:	f3000400 	vshl.u8	d0, d0, d0
    702c:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
    7040:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    7058:	00530001 	subseq	r0, r3, r1
    705c:	00000000 	andeq	r0, r0, r0
    7060:	01000000 	mrseq	r0, (UNDEF: 0)
    7064:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    7078:	00010000 	andeq	r0, r1, r0
    707c:	00000053 	andeq	r0, r0, r3, asr r0
    7080:	00000000 	andeq	r0, r0, r0
    7084:	53000100 	movwpl	r0, #256	; 0x100
	...
    7098:	00010000 	andeq	r0, r1, r0
    709c:	00000053 	andeq	r0, r0, r3, asr r0
    70a0:	00000000 	andeq	r0, r0, r0
    70a4:	002ae000 	eoreq	lr, sl, r0
    70a8:	002ae210 	eoreq	lr, sl, r0, lsl r2
    70ac:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    70b0:	002ae200 	eoreq	lr, sl, r0, lsl #4
    70b4:	002bc410 	eoreq	ip, fp, r0, lsl r4
    70b8:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    70bc:	00000008 	andeq	r0, r0, r8
	...
    70cc:	002ae000 	eoreq	lr, sl, r0
    70d0:	002b4a10 	eoreq	r4, fp, r0, lsl sl
    70d4:	50000110 	andpl	r0, r0, r0, lsl r1
    70d8:	10002b4a 	andne	r2, r0, sl, asr #22
    70dc:	10002b82 	andne	r2, r0, r2, lsl #23
    70e0:	01f30004 	mvnseq	r0, r4
    70e4:	2b829f50 	blcs	fe0aee2c <__StackTop+0xc5faee2c>
    70e8:	2b961000 	blcs	fe58b0f0 <__StackTop+0xc648b0f0>
    70ec:	00011000 	andeq	r1, r1, r0
    70f0:	002b9650 	eoreq	r9, fp, r0, asr r6
    70f4:	002bc410 	eoreq	ip, fp, r0, lsl r4
    70f8:	f3000410 	vqshl.u8	d0, d0, d0
    70fc:	009f5001 	addseq	r5, pc, r1
	...
    7108:	002ae600 	eoreq	lr, sl, r0, lsl #12
    710c:	002bc410 	eoreq	ip, fp, r0, lsl r4
    7110:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
	...
    711c:	00000001 	andeq	r0, r0, r1
    7120:	10002b7a 	andne	r2, r0, sl, ror fp
    7124:	10002b80 	andne	r2, r0, r0, lsl #23
    7128:	9f310002 	svcls	0x00310002
    712c:	10002ba8 	andne	r2, r0, r8, lsr #23
    7130:	10002bc4 	andne	r2, r0, r4, asr #23
    7134:	9f300002 	svcls	0x00300002
	...
    7144:	10002ae8 	andne	r2, r0, r8, ror #21
    7148:	10002b08 	andne	r2, r0, r8, lsl #22
    714c:	82530001 	subshi	r0, r3, #1
    7150:	8810002b 	ldmdahi	r0, {r0, r1, r3, r5}
    7154:	0110002b 	tsteq	r0, fp, lsr #32
    7158:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    7164:	2b100000 	blcs	40716c <__RAM_SIZE+0x30716c>
    7168:	2b2e1000 	blcs	b8b170 <__RAM_SIZE+0xa8b170>
    716c:	00011000 	andeq	r1, r1, r0
    7170:	002b8853 	eoreq	r8, fp, r3, asr r8
    7174:	002b8e10 	eoreq	r8, fp, r0, lsl lr
    7178:	53000110 	movwpl	r0, #272	; 0x110
	...
    7184:	2b460000 	blcs	118718c <__RAM_SIZE+0x108718c>
    7188:	2b521000 	blcs	148b190 <__RAM_SIZE+0x138b190>
    718c:	00011000 	andeq	r1, r1, r0
    7190:	00000053 	andeq	r0, r0, r3, asr r0
    7194:	00000000 	andeq	r0, r0, r0
    7198:	92000000 	andls	r0, r0, #0
    719c:	a010002b 	andsge	r0, r0, fp, lsr #32
    71a0:	0110002b 	tsteq	r0, fp, lsr #32
    71a4:	00005200 	andeq	r5, r0, r0, lsl #4
    71a8:	00000000 	andeq	r0, r0, r0
    71ac:	2aa40000 	bcs	fe9071b4 <__StackTop+0xc68071b4>
    71b0:	2aa61000 	bcs	fe98b1b8 <__StackTop+0xc688b1b8>
    71b4:	00021000 	andeq	r1, r2, r0
    71b8:	2aa6007d 	bcs	fe9873b4 <__StackTop+0xc68873b4>
    71bc:	2ae01000 	bcs	ff80b1c4 <__StackTop+0xc770b1c4>
    71c0:	00021000 	andeq	r1, r2, r0
    71c4:	0000107d 	andeq	r1, r0, sp, ror r0
	...
    71d4:	10002aa4 	andne	r2, r0, r4, lsr #21
    71d8:	10002aaa 	andne	r2, r0, sl, lsr #21
    71dc:	aa500001 	bge	14071e8 <__RAM_SIZE+0x13071e8>
    71e0:	d910002a 	ldmdble	r0, {r1, r3, r5}
    71e4:	0110002a 	tsteq	r0, sl, lsr #32
    71e8:	2ad95300 	bcs	ff65bdf0 <__StackTop+0xc755bdf0>
    71ec:	2ae01000 	bcs	ff80b1f4 <__StackTop+0xc770b1f4>
    71f0:	00041000 	andeq	r1, r4, r0
    71f4:	9f5001f3 	svcls	0x005001f3
	...
    7204:	10002aa4 	andne	r2, r0, r4, lsr #21
    7208:	10002aac 	andne	r2, r0, ip, lsr #21
    720c:	ac510001 	mrrcge	0, 0, r0, r1, cr1
    7210:	d910002a 	ldmdble	r0, {r1, r3, r5}
    7214:	0110002a 	tsteq	r0, sl, lsr #32
    7218:	00005000 	andeq	r5, r0, r0
	...
    7224:	2aa40000 	bcs	fe90722c <__StackTop+0xc680722c>
    7228:	2ad91000 	bcs	ff64b230 <__StackTop+0xc754b230>
    722c:	00011000 	andeq	r1, r1, r0
    7230:	002ad952 	eoreq	sp, sl, r2, asr r9
    7234:	002ae010 	eoreq	lr, sl, r0, lsl r0
    7238:	f3000410 	vqshl.u8	d0, d0, d0
    723c:	009f5201 	addseq	r5, pc, r1, lsl #4
	...
    7248:	002aac00 	eoreq	sl, sl, r0, lsl #24
    724c:	002ac610 	eoreq	ip, sl, r0, lsl r6
    7250:	51000110 	tstpl	r0, r0, lsl r1
	...
    7264:	007d0002 	rsbseq	r0, sp, r2
	...
    7270:	107d0002 	rsbsne	r0, sp, r2
	...
    7288:	00010000 	andeq	r0, r1, r0
    728c:	00000050 	andeq	r0, r0, r0, asr r0
    7290:	00000000 	andeq	r0, r0, r0
    7294:	53000100 	movwpl	r0, #256	; 0x100
	...
    72a0:	01f30004 	mvnseq	r0, r4
    72a4:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    72b8:	00010000 	andeq	r0, r1, r0
    72bc:	00000051 	andeq	r0, r0, r1, asr r0
    72c0:	00000000 	andeq	r0, r0, r0
    72c4:	f3000400 	vshl.u8	d0, d0, d0
    72c8:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
    72dc:	01000000 	mrseq	r0, (UNDEF: 0)
    72e0:	00005200 	andeq	r5, r0, r0, lsl #4
    72e4:	00000000 	andeq	r0, r0, r0
    72e8:	00040000 	andeq	r0, r4, r0
    72ec:	9f5201f3 	svcls	0x005201f3
	...
    7300:	00010000 	andeq	r0, r1, r0
    7304:	00000051 	andeq	r0, r0, r1, asr r0
    7308:	00000000 	andeq	r0, r0, r0
    730c:	002a8800 	eoreq	r8, sl, r0, lsl #16
    7310:	002a8a10 	eoreq	r8, sl, r0, lsl sl
    7314:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    7318:	002a8a00 	eoreq	r8, sl, r0, lsl #20
    731c:	002aa410 	eoreq	sl, sl, r0, lsl r4
    7320:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    7324:	00000008 	andeq	r0, r0, r8
	...
    7330:	002a8800 	eoreq	r8, sl, r0, lsl #16
    7334:	002a9510 	eoreq	r9, sl, r0, lsl r5
    7338:	50000110 	andpl	r0, r0, r0, lsl r1
    733c:	10002a95 	mulne	r0, r5, sl
    7340:	10002aa4 	andne	r2, r0, r4, lsr #21
    7344:	01f30004 	mvnseq	r0, r4
    7348:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    7358:	10002a88 	andne	r2, r0, r8, lsl #21
    735c:	10002a90 	mulne	r0, r0, sl
    7360:	90510001 	subsls	r0, r1, r1
    7364:	a010002a 	andsge	r0, r0, sl, lsr #32
    7368:	0110002a 	tsteq	r0, sl, lsr #32
    736c:	2aa05400 	bcs	fe81c374 <__StackTop+0xc671c374>
    7370:	2aa41000 	bcs	fe90b378 <__StackTop+0xc680b378>
    7374:	00041000 	andeq	r1, r4, r0
    7378:	9f5101f3 	svcls	0x005101f3
	...
    7388:	2a1c0000 	bcs	707390 <__RAM_SIZE+0x607390>
    738c:	2a641000 	bcs	190b394 <__RAM_SIZE+0x180b394>
    7390:	00011000 	andeq	r1, r1, r0
    7394:	002a6453 	eoreq	r6, sl, r3, asr r4
    7398:	002a6610 	eoreq	r6, sl, r0, lsl r6
    739c:	03000510 	movweq	r0, #1296	; 0x510
    73a0:	38008a58 	stmdacc	r0, {r3, r4, r6, r9, fp, pc}
    73a4:	10002a66 	andne	r2, r0, r6, ror #20
    73a8:	10002a88 	andne	r2, r0, r8, lsl #21
    73ac:	00530001 	subseq	r0, r3, r1
    73b0:	00000000 	andeq	r0, r0, r0
    73b4:	02000000 	andeq	r0, r0, #0
    73b8:	00000000 	andeq	r0, r0, r0
    73bc:	002a2e00 	eoreq	r2, sl, r0, lsl #28
    73c0:	002a6410 	eoreq	r6, sl, r0, lsl r4
    73c4:	73000b10 	movwvc	r0, #2832	; 0xb10
    73c8:	031e4c00 	tsteq	lr, #0, 24
    73cc:	380085bc 	stmdacc	r0, {r2, r3, r4, r5, r7, r8, sl, pc}
    73d0:	2a649f22 	bcs	192f060 <__RAM_SIZE+0x182f060>
    73d4:	2a661000 	bcs	198b3dc <__RAM_SIZE+0x188b3dc>
    73d8:	000f1000 	andeq	r1, pc, r0
    73dc:	008a5803 	addeq	r5, sl, r3, lsl #16
    73e0:	1e4c0638 	mcrne	6, 2, r0, cr12, cr8, {1}
    73e4:	0085bc03 	addeq	fp, r5, r3, lsl #24
    73e8:	669f2238 			; <UNDEFINED> instruction: 0x669f2238
    73ec:	8810002a 	ldmdahi	r0, {r1, r3, r5}
    73f0:	0b10002a 	bleq	4074a0 <__RAM_SIZE+0x3074a0>
    73f4:	4c007300 	stcmi	3, cr7, [r0], {-0}
    73f8:	85bc031e 	ldrhi	r0, [ip, #798]!	; 0x31e
    73fc:	9f223800 	svcls	0x00223800
	...
    7410:	007d0002 	rsbseq	r0, sp, r2
	...
    741c:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    7434:	00500001 	subseq	r0, r0, r1
    7438:	00000000 	andeq	r0, r0, r0
    743c:	01000000 	mrseq	r0, (UNDEF: 0)
    7440:	00005000 	andeq	r5, r0, r0
	...
    7458:	00510001 	subseq	r0, r1, r1
    745c:	00000000 	andeq	r0, r0, r0
    7460:	04000000 	streq	r0, [r0], #-0
    7464:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    7468:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    746c:	00000000 	andeq	r0, r0, r0
    7470:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    7488:	00530001 	subseq	r0, r3, r1
    748c:	00000000 	andeq	r0, r0, r0
    7490:	01000000 	mrseq	r0, (UNDEF: 0)
    7494:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    74a8:	9f300002 	svcls	0x00300002
	...
    74bc:	007d0002 	rsbseq	r0, sp, r2
	...
    74c8:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    74e0:	00500001 	subseq	r0, r0, r1
    74e4:	00000000 	andeq	r0, r0, r0
    74e8:	01000000 	mrseq	r0, (UNDEF: 0)
    74ec:	00005000 	andeq	r5, r0, r0
	...
    7500:	00540001 	subseq	r0, r4, r1
	...
    7514:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    7528:	00010000 	andeq	r0, r1, r0
    752c:	00000050 	andeq	r0, r0, r0, asr r0
	...
    753c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    7548:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    754c:	00000008 	andeq	r0, r0, r8
	...
    7560:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    756c:	00500001 	subseq	r0, r0, r1
	...
    7580:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    7594:	00010000 	andeq	r0, r1, r0
    7598:	00000054 	andeq	r0, r0, r4, asr r0
	...
    75a8:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    75b4:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    75b8:	00000010 	andeq	r0, r0, r0, lsl r0
	...
    75cc:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    75d8:	00500001 	subseq	r0, r0, r1
	...
    75f0:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    75fc:	00540001 	subseq	r0, r4, r1
    7600:	00000000 	andeq	r0, r0, r0
    7604:	01000000 	mrseq	r0, (UNDEF: 0)
    7608:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    761c:	00010000 	andeq	r0, r1, r0
    7620:	00000055 	andeq	r0, r0, r5, asr r0
    7624:	00000000 	andeq	r0, r0, r0
    7628:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    7634:	1000271c 	andne	r2, r0, ip, lsl r7
    7638:	10002728 	andne	r2, r0, r8, lsr #14
    763c:	007d0002 	rsbseq	r0, sp, r2
    7640:	10002728 	andne	r2, r0, r8, lsr #14
    7644:	10002840 	andne	r2, r0, r0, asr #16
    7648:	107d0002 	rsbsne	r0, sp, r2
    764c:	10002840 	andne	r2, r0, r0, asr #16
    7650:	1000284c 	andne	r2, r0, ip, asr #16
    7654:	007d0002 	rsbseq	r0, sp, r2
    7658:	1000284c 	andne	r2, r0, ip, asr #16
    765c:	1000287c 	andne	r2, r0, ip, ror r8
    7660:	107d0002 	rsbsne	r0, sp, r2
	...
    7670:	27840000 	strcs	r0, [r4, r0]
    7674:	27861000 	strcs	r1, [r6, r0]
    7678:	00011000 	andeq	r1, r1, r0
    767c:	00278a53 	eoreq	r8, r7, r3, asr sl
    7680:	0027e010 	eoreq	lr, r7, r0, lsl r0
    7684:	53000110 	movwpl	r0, #272	; 0x110
    7688:	100027fc 	strdne	r2, [r0], -ip
    768c:	10002840 	andne	r2, r0, r0, asr #16
    7690:	00530001 	subseq	r0, r3, r1
	...
    76a0:	00278400 	eoreq	r8, r7, r0, lsl #8
    76a4:	00278a10 	eoreq	r8, r7, r0, lsl sl
    76a8:	52000110 	andpl	r0, r0, #16, 2
    76ac:	100027fe 	strdne	r2, [r0], -lr
    76b0:	10002804 	andne	r2, r0, r4, lsl #16
    76b4:	04520001 	ldrbeq	r0, [r2], #-1
    76b8:	0a100028 	beq	407760 <__RAM_SIZE+0x307760>
    76bc:	02100028 	andseq	r0, r0, #40	; 0x28
    76c0:	00047300 	andeq	r7, r4, r0, lsl #6
    76c4:	00000000 	andeq	r0, r0, r0
    76c8:	04000000 	streq	r0, [r0], #-0
	...
    76d8:	00271c00 	eoreq	r1, r7, r0, lsl #24
    76dc:	00273c10 	eoreq	r3, r7, r0, lsl ip
    76e0:	30000210 	andcc	r0, r0, r0, lsl r2
    76e4:	00273c9f 	mlaeq	r7, pc, ip, r3	; <UNPREDICTABLE>
    76e8:	00275a10 	eoreq	r5, r7, r0, lsl sl
    76ec:	50000110 	andpl	r0, r0, r0, lsl r1
    76f0:	1000275c 	andne	r2, r0, ip, asr r7
    76f4:	1000277a 	andne	r2, r0, sl, ror r7
    76f8:	9f300002 	svcls	0x00300002
    76fc:	1000277a 	andne	r2, r0, sl, ror r7
    7700:	10002840 	andne	r2, r0, r0, asr #16
    7704:	40500001 	subsmi	r0, r0, r1
    7708:	4c100028 	ldcmi	0, cr0, [r0], {40}	; 0x28
    770c:	02100028 	andseq	r0, r0, #40	; 0x28
    7710:	4c9f3000 	ldcmi	0, cr3, [pc], {0}
    7714:	4e100028 	cdpmi	0, 1, cr0, cr0, cr8, {1}
    7718:	01100028 	tsteq	r0, r8, lsr #32
    771c:	284e5000 	stmdacs	lr, {ip, lr}^
    7720:	287c1000 	ldmdacs	ip!, {ip}^
    7724:	00021000 	andeq	r1, r2, r0
    7728:	00009f31 	andeq	r9, r0, r1, lsr pc
	...
    7734:	272e0000 	strcs	r0, [lr, -r0]!
    7738:	28401000 	stmdacs	r0, {ip}^
    773c:	00011000 	andeq	r1, r1, r0
    7740:	00284c54 	eoreq	r4, r8, r4, asr ip
    7744:	00287c10 	eoreq	r7, r8, r0, lsl ip
    7748:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
	...
    7754:	27600000 	strbcs	r0, [r0, -r0]!
    7758:	27731000 	ldrbcs	r1, [r3, -r0]!
    775c:	00011000 	andeq	r1, r1, r0
    7760:	00000051 	andeq	r0, r0, r1, asr r0
	...
    776c:	00278a00 	eoreq	r8, r7, r0, lsl #20
    7770:	00279010 	eoreq	r9, r7, r0, lsl r0
    7774:	52000110 	andpl	r0, r0, #16, 2
    7778:	10002804 	andne	r2, r0, r4, lsl #16
    777c:	10002822 	andne	r2, r0, r2, lsr #16
    7780:	00520001 	subseq	r0, r2, r1
	...
    778c:	90000201 	andls	r0, r0, r1, lsl #4
    7790:	9a100027 	bls	407834 <__RAM_SIZE+0x307834>
    7794:	01100027 	tsteq	r0, r7, lsr #32
    7798:	28265200 	stmdacs	r6!, {r9, ip, lr}
    779c:	28401000 	stmdacs	r0, {ip}^
    77a0:	00011000 	andeq	r1, r1, r0
    77a4:	00000052 	andeq	r0, r0, r2, asr r0
    77a8:	00000000 	andeq	r0, r0, r0
    77ac:	b8000000 	stmdalt	r0, {}	; <UNPREDICTABLE>
    77b0:	c4100027 	ldrgt	r0, [r0], #-39	; 0xffffffd9
    77b4:	01100027 	tsteq	r0, r7, lsr #32
    77b8:	00005200 	andeq	r5, r0, r0, lsl #4
	...
    77c8:	00020000 	andeq	r0, r2, r0
    77cc:	0000007d 	andeq	r0, r0, sp, ror r0
    77d0:	00000000 	andeq	r0, r0, r0
    77d4:	00020000 	andeq	r0, r2, r0
    77d8:	0000107d 	andeq	r1, r0, sp, ror r0
	...
    77f8:	00500001 	subseq	r0, r0, r1
    77fc:	00000000 	andeq	r0, r0, r0
    7800:	01000000 	mrseq	r0, (UNDEF: 0)
    7804:	00005400 	andeq	r5, r0, r0, lsl #8
    7808:	00000000 	andeq	r0, r0, r0
    780c:	00040000 	andeq	r0, r4, r0
    7810:	9f5001f3 	svcls	0x005001f3
	...
    781c:	00540001 	subseq	r0, r4, r1
    7820:	00000000 	andeq	r0, r0, r0
    7824:	03000000 	movweq	r0, #0
    7828:	9f7c7500 	svcls	0x007c7500
	...
    7834:	00540001 	subseq	r0, r4, r1
    7838:	00000000 	andeq	r0, r0, r0
    783c:	03000000 	movweq	r0, #0
    7840:	9f7c7500 	svcls	0x007c7500
	...
    784c:	00000001 	andeq	r0, r0, r1
	...
    7860:	00010000 	andeq	r0, r1, r0
    7864:	00000050 	andeq	r0, r0, r0, asr r0
    7868:	00000000 	andeq	r0, r0, r0
    786c:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    7878:	01f30004 	mvnseq	r0, r4
    787c:	00009f50 	andeq	r9, r0, r0, asr pc
    7880:	00000000 	andeq	r0, r0, r0
    7884:	00010000 	andeq	r0, r1, r0
    7888:	00000054 	andeq	r0, r0, r4, asr r0
    788c:	00000000 	andeq	r0, r0, r0
    7890:	75000300 	strvc	r0, [r0, #-768]	; 0xfffffd00
    7894:	00009f7c 	andeq	r9, r0, ip, ror pc
    7898:	00000000 	andeq	r0, r0, r0
    789c:	00010000 	andeq	r0, r1, r0
    78a0:	00000054 	andeq	r0, r0, r4, asr r0
    78a4:	00000000 	andeq	r0, r0, r0
    78a8:	75000300 	strvc	r0, [r0, #-768]	; 0xfffffd00
    78ac:	00009f7c 	andeq	r9, r0, ip, ror pc
	...
    78b8:	00000001 	andeq	r0, r0, r1
    78bc:	00000000 	andeq	r0, r0, r0
    78c0:	00010000 	andeq	r0, r1, r0
    78c4:	00000054 	andeq	r0, r0, r4, asr r0
    78c8:	00000000 	andeq	r0, r0, r0
    78cc:	31000200 	mrscc	r0, R8_usr
    78d0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    78e0:	01000000 	mrseq	r0, (UNDEF: 0)
    78e4:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    78f4:	00020000 	andeq	r0, r2, r0
    78f8:	0000007d 	andeq	r0, r0, sp, ror r0
    78fc:	00000000 	andeq	r0, r0, r0
    7900:	00020000 	andeq	r0, r2, r0
    7904:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    791c:	00500001 	subseq	r0, r0, r1
    7920:	00000000 	andeq	r0, r0, r0
    7924:	01000000 	mrseq	r0, (UNDEF: 0)
    7928:	00005400 	andeq	r5, r0, r0, lsl #8
    792c:	00000000 	andeq	r0, r0, r0
    7930:	00040000 	andeq	r0, r4, r0
    7934:	9f5001f3 	svcls	0x005001f3
	...
    7948:	00010000 	andeq	r0, r1, r0
    794c:	00000050 	andeq	r0, r0, r0, asr r0
    7950:	00000000 	andeq	r0, r0, r0
    7954:	0026e000 	eoreq	lr, r6, r0
    7958:	0026e210 	eoreq	lr, r6, r0, lsl r2
    795c:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    7960:	0026e200 	eoreq	lr, r6, r0, lsl #4
    7964:	00271c10 	eoreq	r1, r7, r0, lsl ip
    7968:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    796c:	00000008 	andeq	r0, r0, r8
	...
    797c:	0026e000 	eoreq	lr, r6, r0
    7980:	0026f210 	eoreq	pc, r6, r0, lsl r2	; <UNPREDICTABLE>
    7984:	50000110 	andpl	r0, r0, r0, lsl r1
    7988:	100026f2 	strdne	r2, [r0], -r2	; <UNPREDICTABLE>
    798c:	100026f8 	strdne	r2, [r0], -r8
    7990:	fc540001 	mrrc2	0, 0, r0, r4, cr1
    7994:	ff100026 			; <UNDEFINED> instruction: 0xff100026
    7998:	01100026 	tsteq	r0, r6, lsr #32
    799c:	26ff5000 	ldrbtcs	r5, [pc], r0
    79a0:	271c1000 	ldrcs	r1, [ip, -r0]
    79a4:	00011000 	andeq	r1, r1, r0
    79a8:	00000054 	andeq	r0, r0, r4, asr r0
	...
    79b4:	0026ea00 	eoreq	lr, r6, r0, lsl #20
    79b8:	0026f210 	eoreq	pc, r6, r0, lsl r2	; <UNPREDICTABLE>
    79bc:	53000110 	movwpl	r0, #272	; 0x110
    79c0:	100026fc 	strdne	r2, [r0], -ip
    79c4:	100026ff 	strdne	r2, [r0], -pc	; <UNPREDICTABLE>
    79c8:	00530001 	subseq	r0, r3, r1
	...
    79dc:	01000000 	mrseq	r0, (UNDEF: 0)
    79e0:	00005000 	andeq	r5, r0, r0
    79e4:	00000000 	andeq	r0, r0, r0
    79e8:	00040000 	andeq	r0, r4, r0
    79ec:	9f5001f3 	svcls	0x005001f3
	...
    7a04:	00500001 	subseq	r0, r0, r1
    7a08:	00000000 	andeq	r0, r0, r0
    7a0c:	01000000 	mrseq	r0, (UNDEF: 0)
    7a10:	00005000 	andeq	r5, r0, r0
	...
    7a1c:	00010001 	andeq	r0, r1, r1
	...
    7a28:	9f300002 	svcls	0x00300002
	...
    7a34:	9f310002 	svcls	0x00310002
	...
    7a40:	9f310002 	svcls	0x00310002
	...
    7a58:	00530001 	subseq	r0, r3, r1
    7a5c:	00000000 	andeq	r0, r0, r0
    7a60:	01000000 	mrseq	r0, (UNDEF: 0)
    7a64:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    7a74:	00020000 	andeq	r0, r2, r0
    7a78:	0000007d 	andeq	r0, r0, sp, ror r0
    7a7c:	00000000 	andeq	r0, r0, r0
    7a80:	00020000 	andeq	r0, r2, r0
    7a84:	0000107d 	andeq	r1, r0, sp, ror r0
	...
    7a98:	00010000 	andeq	r0, r1, r0
    7a9c:	00000050 	andeq	r0, r0, r0, asr r0
    7aa0:	00000000 	andeq	r0, r0, r0
    7aa4:	56000100 	strpl	r0, [r0], -r0, lsl #2
	...
    7ab0:	00000001 	andeq	r0, r0, r1
	...
    7abc:	9f350002 	svcls	0x00350002
	...
    7ac8:	00540001 	subseq	r0, r4, r1
	...
    7af0:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    7afc:	00550001 	subseq	r0, r5, r1
    7b00:	00000000 	andeq	r0, r0, r0
    7b04:	01000000 	mrseq	r0, (UNDEF: 0)
    7b08:	00005000 	andeq	r5, r0, r0
    7b0c:	00000000 	andeq	r0, r0, r0
    7b10:	00010000 	andeq	r0, r1, r0
    7b14:	00000055 	andeq	r0, r0, r5, asr r0
    7b18:	00000000 	andeq	r0, r0, r0
    7b1c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    7b28:	00550001 	subseq	r0, r5, r1
    7b2c:	00000000 	andeq	r0, r0, r0
    7b30:	01000000 	mrseq	r0, (UNDEF: 0)
    7b34:	00005000 	andeq	r5, r0, r0
    7b38:	00000000 	andeq	r0, r0, r0
    7b3c:	00010000 	andeq	r0, r1, r0
    7b40:	00000055 	andeq	r0, r0, r5, asr r0
    7b44:	00000000 	andeq	r0, r0, r0
    7b48:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    7b54:	00550001 	subseq	r0, r5, r1
    7b58:	00000000 	andeq	r0, r0, r0
    7b5c:	01000000 	mrseq	r0, (UNDEF: 0)
    7b60:	00005000 	andeq	r5, r0, r0
	...
    7b70:	00020000 	andeq	r0, r2, r0
    7b74:	0000007d 	andeq	r0, r0, sp, ror r0
    7b78:	00000000 	andeq	r0, r0, r0
    7b7c:	00020000 	andeq	r0, r2, r0
    7b80:	00000c7d 	andeq	r0, r0, sp, ror ip
	...
    7b98:	00010000 	andeq	r0, r1, r0
    7b9c:	00000050 	andeq	r0, r0, r0, asr r0
    7ba0:	00000000 	andeq	r0, r0, r0
    7ba4:	75000300 	strvc	r0, [r0, #-768]	; 0xfffffd00
    7ba8:	00009f78 	andeq	r9, r0, r8, ror pc
    7bac:	00000000 	andeq	r0, r0, r0
    7bb0:	00010000 	andeq	r0, r1, r0
    7bb4:	00000050 	andeq	r0, r0, r0, asr r0
    7bb8:	00000000 	andeq	r0, r0, r0
    7bbc:	75000300 	strvc	r0, [r0, #-768]	; 0xfffffd00
    7bc0:	00009f78 	andeq	r9, r0, r8, ror pc
	...
    7bcc:	02000000 	andeq	r0, r0, #0
    7bd0:	00000002 	andeq	r0, r0, r2
    7bd4:	00000000 	andeq	r0, r0, r0
    7bd8:	00010000 	andeq	r0, r1, r0
    7bdc:	00000051 	andeq	r0, r0, r1, asr r0
    7be0:	00000000 	andeq	r0, r0, r0
    7be4:	5e000100 	adfpls	f0, f0, f0
	...
    7bf0:	00510001 	subseq	r0, r1, r1
    7bf4:	00000000 	andeq	r0, r0, r0
    7bf8:	04000000 	streq	r0, [r0], #-0
    7bfc:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    7c00:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    7c04:	00000000 	andeq	r0, r0, r0
    7c08:	00000100 	andeq	r0, r0, r0, lsl #2
    7c0c:	00020000 	andeq	r0, r2, r0
    7c10:	00000000 	andeq	r0, r0, r0
    7c14:	02000000 	andeq	r0, r0, #0
    7c18:	009f3000 	addseq	r3, pc, r0
    7c1c:	00000000 	andeq	r0, r0, r0
    7c20:	01000000 	mrseq	r0, (UNDEF: 0)
    7c24:	00005000 	andeq	r5, r0, r0
    7c28:	00000000 	andeq	r0, r0, r0
    7c2c:	00020000 	andeq	r0, r2, r0
    7c30:	00009f30 	andeq	r9, r0, r0, lsr pc
    7c34:	00000000 	andeq	r0, r0, r0
    7c38:	00020000 	andeq	r0, r2, r0
    7c3c:	00000000 	andeq	r0, r0, r0
    7c40:	00000200 	andeq	r0, r0, r0, lsl #4
    7c44:	00000000 	andeq	r0, r0, r0
    7c48:	00020000 	andeq	r0, r2, r0
    7c4c:	00009f30 	andeq	r9, r0, r0, lsr pc
    7c50:	00000000 	andeq	r0, r0, r0
    7c54:	00010000 	andeq	r0, r1, r0
    7c58:	00000051 	andeq	r0, r0, r1, asr r0
    7c5c:	00000000 	andeq	r0, r0, r0
    7c60:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    7c6c:	9f300002 	svcls	0x00300002
	...
    7c78:	00020000 	andeq	r0, r2, r0
	...
    7c84:	00010000 	andeq	r0, r1, r0
    7c88:	00000053 	andeq	r0, r0, r3, asr r0
    7c8c:	00000000 	andeq	r0, r0, r0
    7c90:	30000200 	andcc	r0, r0, r0, lsl #4
    7c94:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    7c98:	00000000 	andeq	r0, r0, r0
    7c9c:	53000100 	movwpl	r0, #256	; 0x100
	...
    7cb4:	00520001 	subseq	r0, r2, r1
    7cb8:	00000000 	andeq	r0, r0, r0
    7cbc:	01000000 	mrseq	r0, (UNDEF: 0)
    7cc0:	00005200 	andeq	r5, r0, r0, lsl #4
	...
    7ccc:	00000001 	andeq	r0, r0, r1
    7cd0:	00000000 	andeq	r0, r0, r0
    7cd4:	00020000 	andeq	r0, r2, r0
    7cd8:	00009f30 	andeq	r9, r0, r0, lsr pc
    7cdc:	00000000 	andeq	r0, r0, r0
    7ce0:	00020000 	andeq	r0, r2, r0
    7ce4:	00009f30 	andeq	r9, r0, r0, lsr pc
	...
    7cf8:	00030000 	andeq	r0, r3, r0
    7cfc:	009f0870 	addseq	r0, pc, r0, ror r8	; <UNPREDICTABLE>
    7d00:	00000000 	andeq	r0, r0, r0
    7d04:	01000000 	mrseq	r0, (UNDEF: 0)
    7d08:	00005500 	andeq	r5, r0, r0, lsl #10
	...
    7d1c:	00540001 	subseq	r0, r4, r1
	...
    7d30:	01000000 	mrseq	r0, (UNDEF: 0)
    7d34:	00005000 	andeq	r5, r0, r0
    7d38:	00000000 	andeq	r0, r0, r0
    7d3c:	00010000 	andeq	r0, r1, r0
    7d40:	00000050 	andeq	r0, r0, r0, asr r0
	...
    7d50:	01000000 	mrseq	r0, (UNDEF: 0)
    7d54:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    7d68:	00500001 	subseq	r0, r0, r1
	...
    7d74:	0026cc00 	eoreq	ip, r6, r0, lsl #24
    7d78:	0026d410 	eoreq	sp, r6, r0, lsl r4
    7d7c:	50000110 	andpl	r0, r0, r0, lsl r1
	...
    7d88:	1000287c 	andne	r2, r0, ip, ror r8
    7d8c:	1000287e 	andne	r2, r0, lr, ror r8
    7d90:	007d0002 	rsbseq	r0, sp, r2
    7d94:	1000287e 	andne	r2, r0, lr, ror r8
    7d98:	100029ac 	andne	r2, r0, ip, lsr #19
    7d9c:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    7da8:	00000001 	andeq	r0, r0, r1
	...
    7db4:	1000287e 	andne	r2, r0, lr, ror r8
    7db8:	1000289a 	mulne	r0, sl, r8
    7dbc:	9f300002 	svcls	0x00300002
    7dc0:	1000289a 	mulne	r0, sl, r8
    7dc4:	100028a6 	andne	r2, r0, r6, lsr #17
    7dc8:	a6530001 	ldrbge	r0, [r3], -r1
    7dcc:	a8100028 	ldmdage	r0, {r3, r5}
    7dd0:	02100028 	andseq	r0, r0, #40	; 0x28
    7dd4:	a89f3000 	ldmge	pc, {ip, sp}	; <UNPREDICTABLE>
    7dd8:	b2100028 	andslt	r0, r0, #40	; 0x28
    7ddc:	01100028 	tsteq	r0, r8, lsr #32
    7de0:	28b65300 	ldmcs	r6!, {r8, r9, ip, lr}
    7de4:	294b1000 	stmdbcs	fp, {ip}^
    7de8:	00011000 	andeq	r1, r1, r0
    7dec:	00298053 	eoreq	r8, r9, r3, asr r0
    7df0:	00298210 	eoreq	r8, r9, r0, lsl r2
    7df4:	30000210 	andcc	r0, r0, r0, lsl r2
    7df8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    7dfc:	00000000 	andeq	r0, r0, r0
    7e00:	01010200 	mrseq	r0, R9_usr
    7e04:	00000000 	andeq	r0, r0, r0
    7e08:	7e000000 	cdpvc	0, 0, cr0, cr0, cr0, {0}
    7e0c:	58100028 	ldmdapl	r0, {r3, r5}
    7e10:	02100029 	andseq	r0, r0, #41	; 0x29
    7e14:	589f3000 	ldmpl	pc, {ip, sp}	; <UNPREDICTABLE>
    7e18:	64100029 	ldrvs	r0, [r0], #-41	; 0xffffffd7
    7e1c:	02100029 	andseq	r0, r0, #41	; 0x29
    7e20:	649f3100 	ldrvs	r3, [pc], #256	; 7e28 <__HEAP_SIZE+0x6e28>
    7e24:	82100029 	andshi	r0, r0, #41	; 0x29
    7e28:	02100029 	andseq	r0, r0, #41	; 0x29
    7e2c:	829f3000 	addshi	r3, pc, #0
    7e30:	8a100029 	bhi	407edc <__RAM_SIZE+0x307edc>
    7e34:	01100029 	tsteq	r0, r9, lsr #32
    7e38:	298a5400 	stmibcs	sl, {sl, ip, lr}
    7e3c:	29ac1000 	stmibcs	ip!, {ip}
    7e40:	00011000 	andeq	r1, r1, r0
    7e44:	00000050 	andeq	r0, r0, r0, asr r0
	...
    7e50:	00289a00 	eoreq	r9, r8, r0, lsl #20
    7e54:	0028a010 	eoreq	sl, r8, r0, lsl r0
    7e58:	52000110 	andpl	r0, r0, #16, 2
    7e5c:	100028b8 			; <UNDEFINED> instruction: 0x100028b8
    7e60:	100028d8 	ldrdne	r2, [r0], -r8
    7e64:	00520001 	subseq	r0, r2, r1
	...
    7e70:	a0000000 	andge	r0, r0, r0
    7e74:	a6100028 	ldrge	r0, [r0], -r8, lsr #32
    7e78:	01100028 	tsteq	r0, r8, lsr #32
    7e7c:	28d85200 	ldmcs	r8, {r9, ip, lr}^
    7e80:	28f61000 	ldmcs	r6!, {ip}^
    7e84:	00011000 	andeq	r1, r1, r0
    7e88:	00000052 	andeq	r0, r0, r2, asr r0
    7e8c:	00000000 	andeq	r0, r0, r0
    7e90:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
    7e94:	1a100029 	bne	407f40 <__RAM_SIZE+0x307f40>
    7e98:	01100029 	tsteq	r0, r9, lsr #32
    7e9c:	00005200 	andeq	r5, r0, r0, lsl #4
	...
    7ea8:	00020200 	andeq	r0, r2, r0, lsl #4
    7eac:	29500000 	ldmdbcs	r0, {}^	; <UNPREDICTABLE>
    7eb0:	29561000 	ldmdbcs	r6, {ip}^
    7eb4:	00011000 	andeq	r1, r1, r0
    7eb8:	00296454 	eoreq	r6, r9, r4, asr r4
    7ebc:	00296410 	eoreq	r6, r9, r0, lsl r4
    7ec0:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    7ec4:	10002964 	andne	r2, r0, r4, ror #18
    7ec8:	10002966 	andne	r2, r0, r6, ror #18
    7ecc:	7f740003 	svcvc	0x00740003
    7ed0:	0029669f 	mlaeq	r9, pc, r6, r6	; <UNPREDICTABLE>
    7ed4:	00298010 	eoreq	r8, r9, r0, lsl r0
    7ed8:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
	...
    7ee4:	01000000 	mrseq	r0, (UNDEF: 0)
    7ee8:	1000229a 	mulne	r0, sl, r2
    7eec:	100022a2 	andne	r2, r0, r2, lsr #5
    7ef0:	a4500001 	ldrbge	r0, [r0], #-1
    7ef4:	a4100022 	ldrge	r0, [r0], #-34	; 0xffffffde
    7ef8:	02100022 	andseq	r0, r0, #34	; 0x22
    7efc:	009f3000 	addseq	r3, pc, r0
    7f00:	00000000 	andeq	r0, r0, r0
    7f04:	03000000 	movweq	r0, #0
    7f08:	00000000 	andeq	r0, r0, r0
    7f0c:	00227c00 	eoreq	r7, r2, r0, lsl #24
    7f10:	00228010 	eoreq	r8, r2, r0, lsl r0
    7f14:	30000210 	andcc	r0, r0, r0, lsl r2
    7f18:	0022849f 	mlaeq	r2, pc, r4, r8	; <UNPREDICTABLE>
    7f1c:	00229810 	eoreq	r9, r2, r0, lsl r8
    7f20:	53000110 	movwpl	r0, #272	; 0x110
    7f24:	100022a2 	andne	r2, r0, r2, lsr #5
    7f28:	100022bc 			; <UNDEFINED> instruction: 0x100022bc
    7f2c:	00530001 	subseq	r0, r3, r1
	...
    7f3c:	02000000 	andeq	r0, r0, #0
    7f40:	00007d00 	andeq	r7, r0, r0, lsl #26
    7f44:	00000000 	andeq	r0, r0, r0
    7f48:	02000000 	andeq	r0, r0, #0
    7f4c:	00087d00 	andeq	r7, r8, r0, lsl #26
    7f50:	00000000 	andeq	r0, r0, r0
    7f54:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    7f60:	02000000 	andeq	r0, r0, #0
    7f64:	009f3000 	addseq	r3, pc, r0
    7f68:	00000000 	andeq	r0, r0, r0
    7f6c:	01000000 	mrseq	r0, (UNDEF: 0)
    7f70:	00005400 	andeq	r5, r0, r0, lsl #8
    7f74:	00000000 	andeq	r0, r0, r0
    7f78:	2db00000 	ldccs	0, cr0, [r0]
    7f7c:	2db21000 	ldccs	0, cr1, [r2]
    7f80:	00021000 	andeq	r1, r2, r0
    7f84:	2db2007d 	ldccs	0, cr0, [r2, #500]!	; 0x1f4
    7f88:	2df81000 	ldclcs	0, cr1, [r8]
    7f8c:	00021000 	andeq	r1, r2, r0
    7f90:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    7fa0:	10002db6 			; <UNDEFINED> instruction: 0x10002db6
    7fa4:	10002dbe 			; <UNDEFINED> instruction: 0x10002dbe
    7fa8:	c4500001 	ldrbgt	r0, [r0], #-1
    7fac:	c710002d 	ldrgt	r0, [r0, -sp, lsr #32]
    7fb0:	0110002d 	tsteq	r0, sp, lsr #32
    7fb4:	2dc85000 	stclcs	0, cr5, [r8]
    7fb8:	2dcd1000 	stclcs	0, cr1, [sp]
    7fbc:	00011000 	andeq	r1, r1, r0
    7fc0:	00000050 	andeq	r0, r0, r0, asr r0
    7fc4:	00000000 	andeq	r0, r0, r0
    7fc8:	002d4400 	eoreq	r4, sp, r0, lsl #8
    7fcc:	002d4610 	eoreq	r4, sp, r0, lsl r6
    7fd0:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    7fd4:	002d4600 	eoreq	r4, sp, r0, lsl #12
    7fd8:	002d4810 	eoreq	r4, sp, r0, lsl r8
    7fdc:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    7fe0:	002d480c 	eoreq	r4, sp, ip, lsl #16
    7fe4:	002d6c10 	eoreq	r6, sp, r0, lsl ip
    7fe8:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    7fec:	002d6c30 	eoreq	r6, sp, r0, lsr ip
    7ff0:	002d6e10 	eoreq	r6, sp, r0, lsl lr
    7ff4:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    7ff8:	002d6e0c 	eoreq	r6, sp, ip, lsl #28
    7ffc:	002db010 	eoreq	fp, sp, r0, lsl r0
    8000:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    8004:	00000030 	andeq	r0, r0, r0, lsr r0
    8008:	00000000 	andeq	r0, r0, r0
    800c:	00010100 	andeq	r0, r1, r0, lsl #2
    8010:	48000101 	stmdami	r0, {r0, r8}
    8014:	6a10002d 	bvs	4080d0 <__RAM_SIZE+0x3080d0>
    8018:	0210002d 	andseq	r0, r0, #45	; 0x2d
    801c:	6e9f3100 	fmlvse	f3, f7, f0
    8020:	a010002d 	andsge	r0, r0, sp, lsr #32
    8024:	0210002d 	andseq	r0, r0, #45	; 0x2d
    8028:	a09f3100 	addsge	r3, pc, r0, lsl #2
    802c:	b010002d 	andslt	r0, r0, sp, lsr #32
    8030:	0210002d 	andseq	r0, r0, #45	; 0x2d
    8034:	009f3000 	addseq	r3, pc, r0
	...
    8040:	002d6400 	eoreq	r6, sp, r0, lsl #8
    8044:	002db010 	eoreq	fp, sp, r0, lsl r0
    8048:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
	...
    8054:	2d480004 	stclcs	0, cr0, [r8, #-16]
    8058:	2d641000 	stclcs	0, cr1, [r4, #-0]
    805c:	00021000 	andeq	r1, r2, r0
    8060:	00009f30 	andeq	r9, r0, r0, lsr pc
    8064:	00000000 	andeq	r0, r0, r0
    8068:	00060000 	andeq	r0, r6, r0
    806c:	2d480000 	stclcs	0, cr0, [r8, #-0]
    8070:	2d4a1000 	stclcs	0, cr1, [sl, #-0]
    8074:	00021000 	andeq	r1, r2, r0
    8078:	2d4a9f30 	stclcs	15, cr9, [sl, #-192]	; 0xffffff40
    807c:	2d641000 	stclcs	0, cr1, [r4, #-0]
    8080:	00011000 	andeq	r1, r1, r0
    8084:	00000053 	andeq	r0, r0, r3, asr r0
	...
    8094:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    80a0:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    80a4:	00000018 	andeq	r0, r0, r8, lsl r0
	...
    80b8:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    80c4:	00540001 	subseq	r0, r4, r1
    80c8:	00000000 	andeq	r0, r0, r0
    80cc:	01000000 	mrseq	r0, (UNDEF: 0)
    80d0:	00000101 	andeq	r0, r0, r1, lsl #2
	...
    80dc:	02000000 	andeq	r0, r0, #0
    80e0:	009f3000 	addseq	r3, pc, r0
    80e4:	00000000 	andeq	r0, r0, r0
    80e8:	02000000 	andeq	r0, r0, #0
    80ec:	009f3100 	addseq	r3, pc, r0, lsl #2
    80f0:	00000000 	andeq	r0, r0, r0
    80f4:	01000000 	mrseq	r0, (UNDEF: 0)
    80f8:	00005600 	andeq	r5, r0, r0, lsl #12
    80fc:	00000000 	andeq	r0, r0, r0
    8100:	00020000 	andeq	r0, r2, r0
    8104:	00009f30 	andeq	r9, r0, r0, lsr pc
    8108:	00000000 	andeq	r0, r0, r0
    810c:	00020000 	andeq	r0, r2, r0
	...
    8118:	00010000 	andeq	r0, r1, r0
    811c:	00000050 	andeq	r0, r0, r0, asr r0
    8120:	00000000 	andeq	r0, r0, r0
    8124:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    813c:	00500001 	subseq	r0, r0, r1
    8140:	00000000 	andeq	r0, r0, r0
    8144:	01000000 	mrseq	r0, (UNDEF: 0)
    8148:	00005500 	andeq	r5, r0, r0, lsl #10
	...
    815c:	00530001 	subseq	r0, r3, r1
	...
    816c:	02000000 	andeq	r0, r0, #0
    8170:	00007d00 	andeq	r7, r0, r0, lsl #26
    8174:	00000000 	andeq	r0, r0, r0
    8178:	02000000 	andeq	r0, r0, #0
    817c:	00107d00 	andseq	r7, r0, r0, lsl #26
	...
    8188:	02020000 	andeq	r0, r2, #0
	...
    8194:	01000000 	mrseq	r0, (UNDEF: 0)
    8198:	00005000 	andeq	r5, r0, r0
    819c:	00000000 	andeq	r0, r0, r0
    81a0:	00010000 	andeq	r0, r1, r0
    81a4:	00000054 	andeq	r0, r0, r4, asr r0
    81a8:	00000000 	andeq	r0, r0, r0
    81ac:	f3000400 	vshl.u8	d0, d0, d0
    81b0:	009f5001 	addseq	r5, pc, r1
    81b4:	00000000 	andeq	r0, r0, r0
    81b8:	01000000 	mrseq	r0, (UNDEF: 0)
    81bc:	00005400 	andeq	r5, r0, r0, lsl #8
    81c0:	00000000 	andeq	r0, r0, r0
    81c4:	00010000 	andeq	r0, r1, r0
    81c8:	00020200 	andeq	r0, r2, r0, lsl #4
	...
    81d4:	00010000 	andeq	r0, r1, r0
    81d8:	00000050 	andeq	r0, r0, r0, asr r0
    81dc:	00000000 	andeq	r0, r0, r0
    81e0:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    81ec:	01f30004 	mvnseq	r0, r4
    81f0:	00009f50 	andeq	r9, r0, r0, asr pc
    81f4:	00000000 	andeq	r0, r0, r0
    81f8:	00010000 	andeq	r0, r1, r0
    81fc:	00000054 	andeq	r0, r0, r4, asr r0
	...
    820c:	01000000 	mrseq	r0, (UNDEF: 0)
    8210:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    8234:	00010000 	andeq	r0, r1, r0
    8238:	00000050 	andeq	r0, r0, r0, asr r0
    823c:	00000000 	andeq	r0, r0, r0
    8240:	f3000400 	vshl.u8	d0, d0, d0
    8244:	009f5001 	addseq	r5, pc, r1
    8248:	00000000 	andeq	r0, r0, r0
    824c:	01000000 	mrseq	r0, (UNDEF: 0)
    8250:	00005000 	andeq	r5, r0, r0
    8254:	00000000 	andeq	r0, r0, r0
    8258:	00040000 	andeq	r0, r4, r0
    825c:	9f5001f3 	svcls	0x005001f3
	...
    8268:	00500001 	subseq	r0, r0, r1
    826c:	00000000 	andeq	r0, r0, r0
    8270:	04000000 	streq	r0, [r0], #-0
    8274:	5001f300 	andpl	pc, r1, r0, lsl #6
    8278:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    827c:	00000000 	andeq	r0, r0, r0
    8280:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    828c:	01f30004 	mvnseq	r0, r4
    8290:	00009f50 	andeq	r9, r0, r0, asr pc
    8294:	00000000 	andeq	r0, r0, r0
    8298:	00010000 	andeq	r0, r1, r0
    829c:	00000050 	andeq	r0, r0, r0, asr r0
    82a0:	00000000 	andeq	r0, r0, r0
    82a4:	f3000400 	vshl.u8	d0, d0, d0
    82a8:	009f5001 	addseq	r5, pc, r1
    82ac:	00000000 	andeq	r0, r0, r0
    82b0:	02000000 	andeq	r0, r0, #0
	...
    82c0:	30000200 	andcc	r0, r0, r0, lsl #4
    82c4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    82c8:	00000000 	andeq	r0, r0, r0
    82cc:	30000200 	andcc	r0, r0, r0, lsl #4
    82d0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    82d4:	00000000 	andeq	r0, r0, r0
    82d8:	30000200 	andcc	r0, r0, r0, lsl #4
    82dc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    82e0:	00000000 	andeq	r0, r0, r0
    82e4:	00000300 	andeq	r0, r0, r0, lsl #6
	...
    8300:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    830c:	01f30004 	mvnseq	r0, r4
    8310:	00009f50 	andeq	r9, r0, r0, asr pc
    8314:	00000000 	andeq	r0, r0, r0
    8318:	00010000 	andeq	r0, r1, r0
    831c:	00000050 	andeq	r0, r0, r0, asr r0
    8320:	00000000 	andeq	r0, r0, r0
    8324:	f3000400 	vshl.u8	d0, d0, d0
    8328:	009f5001 	addseq	r5, pc, r1
    832c:	00000000 	andeq	r0, r0, r0
    8330:	01000000 	mrseq	r0, (UNDEF: 0)
    8334:	00005000 	andeq	r5, r0, r0
    8338:	00000000 	andeq	r0, r0, r0
    833c:	00040000 	andeq	r0, r4, r0
    8340:	9f5001f3 	svcls	0x005001f3
	...
    834c:	00500001 	subseq	r0, r0, r1
    8350:	00000000 	andeq	r0, r0, r0
    8354:	04000000 	streq	r0, [r0], #-0
    8358:	5001f300 	andpl	pc, r1, r0, lsl #6
    835c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    8360:	00000000 	andeq	r0, r0, r0
    8364:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    8370:	01f30004 	mvnseq	r0, r4
    8374:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    8388:	00010000 	andeq	r0, r1, r0
    838c:	00000053 	andeq	r0, r0, r3, asr r0
    8390:	00000000 	andeq	r0, r0, r0
    8394:	53000100 	movwpl	r0, #256	; 0x100
	...
    83a8:	007d0002 	rsbseq	r0, sp, r2
	...
    83b4:	107d0002 	rsbsne	r0, sp, r2
	...
    83cc:	00010000 	andeq	r0, r1, r0
    83d0:	00000050 	andeq	r0, r0, r0, asr r0
    83d4:	00000000 	andeq	r0, r0, r0
    83d8:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    83e4:	00540001 	subseq	r0, r4, r1
	...
    83f8:	01000000 	mrseq	r0, (UNDEF: 0)
    83fc:	00005400 	andeq	r5, r0, r0, lsl #8
    8400:	00000000 	andeq	r0, r0, r0
    8404:	00010000 	andeq	r0, r1, r0
    8408:	00000054 	andeq	r0, r0, r4, asr r0
    840c:	00000000 	andeq	r0, r0, r0
    8410:	00000200 	andeq	r0, r0, r0, lsl #4
	...
    841c:	02000000 	andeq	r0, r0, #0
    8420:	009f3000 	addseq	r3, pc, r0
    8424:	00000000 	andeq	r0, r0, r0
    8428:	01000000 	mrseq	r0, (UNDEF: 0)
    842c:	00005300 	andeq	r5, r0, r0, lsl #6
    8430:	00000000 	andeq	r0, r0, r0
    8434:	00010000 	andeq	r0, r1, r0
    8438:	00000053 	andeq	r0, r0, r3, asr r0
	...
    844c:	01000000 	mrseq	r0, (UNDEF: 0)
    8450:	00005300 	andeq	r5, r0, r0, lsl #6
    8454:	00000000 	andeq	r0, r0, r0
    8458:	00050000 	andeq	r0, r5, r0
    845c:	008b1003 	addeq	r1, fp, r3
    8460:	00000038 	andeq	r0, r0, r8, lsr r0
    8464:	00000000 	andeq	r0, r0, r0
    8468:	53000100 	movwpl	r0, #256	; 0x100
	...
    847c:	007d0002 	rsbseq	r0, sp, r2
	...
    8488:	107d0002 	rsbsne	r0, sp, r2
	...
    84a0:	00010000 	andeq	r0, r1, r0
    84a4:	00000050 	andeq	r0, r0, r0, asr r0
    84a8:	00000000 	andeq	r0, r0, r0
    84ac:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    84b8:	00540001 	subseq	r0, r4, r1
	...
    84d4:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    84e0:	00550001 	subseq	r0, r5, r1
    84e4:	00000000 	andeq	r0, r0, r0
    84e8:	02000000 	andeq	r0, r0, #0
    84ec:	00387400 	eorseq	r7, r8, r0, lsl #8
    84f0:	00000000 	andeq	r0, r0, r0
    84f4:	01000000 	mrseq	r0, (UNDEF: 0)
    84f8:	00005500 	andeq	r5, r0, r0, lsl #10
    84fc:	00000000 	andeq	r0, r0, r0
    8500:	00020000 	andeq	r0, r2, r0
    8504:	00003874 	andeq	r3, r0, r4, ror r8
	...
    8518:	00010000 	andeq	r0, r1, r0
    851c:	00000054 	andeq	r0, r0, r4, asr r0
    8520:	00000000 	andeq	r0, r0, r0
    8524:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    853c:	00010000 	andeq	r0, r1, r0
    8540:	00000052 	andeq	r0, r0, r2, asr r0
    8544:	00000000 	andeq	r0, r0, r0
    8548:	52000100 	andpl	r0, r0, #0, 2
	...
    8554:	00520001 	subseq	r0, r2, r1
	...
    8568:	53000100 	movwpl	r0, #256	; 0x100
	...
    8574:	00000003 	andeq	r0, r0, r3
	...
    8584:	9f300002 	svcls	0x00300002
	...
    8590:	00560001 	subseq	r0, r6, r1
    8594:	00000000 	andeq	r0, r0, r0
    8598:	02000000 	andeq	r0, r0, #0
    859c:	009f3000 	addseq	r3, pc, r0
    85a0:	00000000 	andeq	r0, r0, r0
    85a4:	01000000 	mrseq	r0, (UNDEF: 0)
    85a8:	00005600 	andeq	r5, r0, r0, lsl #12
	...
    85bc:	00530001 	subseq	r0, r3, r1
	...
    85cc:	02000000 	andeq	r0, r0, #0
    85d0:	00007d00 	andeq	r7, r0, r0, lsl #26
    85d4:	00000000 	andeq	r0, r0, r0
    85d8:	02000000 	andeq	r0, r0, #0
    85dc:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    85f4:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    8600:	00540001 	subseq	r0, r4, r1
    8604:	00000000 	andeq	r0, r0, r0
    8608:	01000000 	mrseq	r0, (UNDEF: 0)
    860c:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    8620:	00540001 	subseq	r0, r4, r1
	...
    8634:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    864c:	00500001 	subseq	r0, r0, r1
    8650:	00000000 	andeq	r0, r0, r0
    8654:	01000000 	mrseq	r0, (UNDEF: 0)
    8658:	00005000 	andeq	r5, r0, r0
	...
    8668:	00020000 	andeq	r0, r2, r0
    866c:	0000007d 	andeq	r0, r0, sp, ror r0
    8670:	00000000 	andeq	r0, r0, r0
    8674:	00020000 	andeq	r0, r2, r0
    8678:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    8690:	00500001 	subseq	r0, r0, r1
    8694:	00000000 	andeq	r0, r0, r0
    8698:	01000000 	mrseq	r0, (UNDEF: 0)
    869c:	00005400 	andeq	r5, r0, r0, lsl #8
    86a0:	00000000 	andeq	r0, r0, r0
    86a4:	00010000 	andeq	r0, r1, r0
    86a8:	00000054 	andeq	r0, r0, r4, asr r0
	...
    86b8:	01000000 	mrseq	r0, (UNDEF: 0)
    86bc:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    86d0:	00540001 	subseq	r0, r4, r1
	...
    86e0:	02000000 	andeq	r0, r0, #0
    86e4:	00007d00 	andeq	r7, r0, r0, lsl #26
    86e8:	00000000 	andeq	r0, r0, r0
    86ec:	02000000 	andeq	r0, r0, #0
    86f0:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    8708:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    8714:	00540001 	subseq	r0, r4, r1
    8718:	00000000 	andeq	r0, r0, r0
    871c:	01000000 	mrseq	r0, (UNDEF: 0)
    8720:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    8734:	00540001 	subseq	r0, r4, r1
	...
    8748:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    8760:	00500001 	subseq	r0, r0, r1
    8764:	00000000 	andeq	r0, r0, r0
    8768:	01000000 	mrseq	r0, (UNDEF: 0)
    876c:	00005000 	andeq	r5, r0, r0
	...
    877c:	00020000 	andeq	r0, r2, r0
    8780:	0000007d 	andeq	r0, r0, sp, ror r0
    8784:	00000000 	andeq	r0, r0, r0
    8788:	00020000 	andeq	r0, r2, r0
    878c:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    87a4:	00500001 	subseq	r0, r0, r1
    87a8:	00000000 	andeq	r0, r0, r0
    87ac:	01000000 	mrseq	r0, (UNDEF: 0)
    87b0:	00005400 	andeq	r5, r0, r0, lsl #8
    87b4:	00000000 	andeq	r0, r0, r0
    87b8:	00010000 	andeq	r0, r1, r0
    87bc:	00000054 	andeq	r0, r0, r4, asr r0
	...
    87cc:	01000000 	mrseq	r0, (UNDEF: 0)
    87d0:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    87e4:	00540001 	subseq	r0, r4, r1
	...
    87f4:	02000000 	andeq	r0, r0, #0
    87f8:	00007d00 	andeq	r7, r0, r0, lsl #26
    87fc:	00000000 	andeq	r0, r0, r0
    8800:	02000000 	andeq	r0, r0, #0
    8804:	00187d00 	andseq	r7, r8, r0, lsl #26
    8808:	00000000 	andeq	r0, r0, r0
    880c:	02000000 	andeq	r0, r0, #0
    8810:	00007d00 	andeq	r7, r0, r0, lsl #26
    8814:	00000000 	andeq	r0, r0, r0
    8818:	02000000 	andeq	r0, r0, #0
    881c:	00187d00 	andseq	r7, r8, r0, lsl #26
	...
    8838:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    8844:	00540001 	subseq	r0, r4, r1
    8848:	00000000 	andeq	r0, r0, r0
    884c:	01000000 	mrseq	r0, (UNDEF: 0)
    8850:	00005000 	andeq	r5, r0, r0
    8854:	00000000 	andeq	r0, r0, r0
    8858:	00040000 	andeq	r0, r4, r0
    885c:	9f5001f3 	svcls	0x005001f3
	...
    8868:	00540001 	subseq	r0, r4, r1
	...
    887c:	01000000 	mrseq	r0, (UNDEF: 0)
    8880:	00005000 	andeq	r5, r0, r0
    8884:	00000000 	andeq	r0, r0, r0
    8888:	00010000 	andeq	r0, r1, r0
    888c:	00000050 	andeq	r0, r0, r0, asr r0
	...
    88a0:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    88ac:	00550001 	subseq	r0, r5, r1
	...
    88c0:	01000000 	mrseq	r0, (UNDEF: 0)
    88c4:	00005600 	andeq	r5, r0, r0, lsl #12
    88c8:	00000000 	andeq	r0, r0, r0
    88cc:	00010000 	andeq	r0, r1, r0
    88d0:	00000056 	andeq	r0, r0, r6, asr r0
	...
    88e4:	57000100 	strpl	r0, [r0, -r0, lsl #2]
	...
    88f0:	00570001 	subseq	r0, r7, r1
	...
    8904:	01000000 	mrseq	r0, (UNDEF: 0)
    8908:	00005800 	andeq	r5, r0, r0, lsl #16
    890c:	00000000 	andeq	r0, r0, r0
    8910:	00010000 	andeq	r0, r1, r0
    8914:	00000058 	andeq	r0, r0, r8, asr r0
    8918:	00000000 	andeq	r0, r0, r0
    891c:	00000700 	andeq	r0, r0, r0, lsl #14
	...
    892c:	01000000 	mrseq	r0, (UNDEF: 0)
    8930:	00005000 	andeq	r5, r0, r0
    8934:	00000000 	andeq	r0, r0, r0
    8938:	00010000 	andeq	r0, r1, r0
    893c:	00000054 	andeq	r0, r0, r4, asr r0
    8940:	00000000 	andeq	r0, r0, r0
    8944:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    8950:	01f30004 	mvnseq	r0, r4
    8954:	00009f50 	andeq	r9, r0, r0, asr pc
    8958:	00000000 	andeq	r0, r0, r0
    895c:	00010000 	andeq	r0, r1, r0
    8960:	00000054 	andeq	r0, r0, r4, asr r0
	...
    8974:	01000000 	mrseq	r0, (UNDEF: 0)
    8978:	00005300 	andeq	r5, r0, r0, lsl #6
    897c:	00000000 	andeq	r0, r0, r0
    8980:	00010000 	andeq	r0, r1, r0
    8984:	00000053 	andeq	r0, r0, r3, asr r0
    8988:	00000000 	andeq	r0, r0, r0
    898c:	53000100 	movwpl	r0, #256	; 0x100
	...
    8998:	100029ac 	andne	r2, r0, ip, lsr #19
    899c:	100029ae 	andne	r2, r0, lr, lsr #19
    89a0:	007d0002 	rsbseq	r0, sp, r2
    89a4:	100029ae 	andne	r2, r0, lr, lsr #19
    89a8:	100029ca 	andne	r2, r0, sl, asr #19
    89ac:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    89bc:	29ac0000 	stmibcs	ip!, {}	; <UNPREDICTABLE>
    89c0:	29b51000 	ldmibcs	r5!, {ip}
    89c4:	00011000 	andeq	r1, r1, r0
    89c8:	0029b550 	eoreq	fp, r9, r0, asr r5
    89cc:	0029c410 	eoreq	ip, r9, r0, lsl r4
    89d0:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    89d4:	100029c4 	andne	r2, r0, r4, asr #19
    89d8:	100029ca 	andne	r2, r0, sl, asr #19
    89dc:	01f30004 	mvnseq	r0, r4
    89e0:	00009f50 	andeq	r9, r0, r0, asr pc
    89e4:	00000000 	andeq	r0, r0, r0
    89e8:	00010000 	andeq	r0, r1, r0
    89ec:	29ae0000 	stmibcs	lr!, {}	; <UNPREDICTABLE>
    89f0:	29c21000 	stmibcs	r2, {ip}^
    89f4:	00021000 	andeq	r1, r2, r0
    89f8:	29c29f30 	stmibcs	r2, {r4, r5, r8, r9, sl, fp, ip, pc}^
    89fc:	29c41000 	stmibcs	r4, {ip}^
    8a00:	00011000 	andeq	r1, r1, r0
    8a04:	00000050 	andeq	r0, r0, r0, asr r0
	...
    8a14:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    8a20:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    8a24:	00000010 	andeq	r0, r0, r0, lsl r0
	...
    8a38:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    8a44:	00550001 	subseq	r0, r5, r1
	...
    8a5c:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    8a68:	00540001 	subseq	r0, r4, r1
    8a6c:	00000000 	andeq	r0, r0, r0
    8a70:	04000000 	streq	r0, [r0], #-0
    8a74:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    8a78:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    8a94:	01000000 	mrseq	r0, (UNDEF: 0)
    8a98:	00005400 	andeq	r5, r0, r0, lsl #8
    8a9c:	00000000 	andeq	r0, r0, r0
    8aa0:	00020000 	andeq	r0, r2, r0
    8aa4:	00000075 	andeq	r0, r0, r5, ror r0
    8aa8:	00000000 	andeq	r0, r0, r0
    8aac:	00010000 	andeq	r0, r1, r0
    8ab0:	00000054 	andeq	r0, r0, r4, asr r0
    8ab4:	00000000 	andeq	r0, r0, r0
    8ab8:	75000200 	strvc	r0, [r0, #-512]	; 0xfffffe00
	...
    8ac4:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    8ad0:	00540001 	subseq	r0, r4, r1
    8ad4:	00000000 	andeq	r0, r0, r0
    8ad8:	02000000 	andeq	r0, r0, #0
    8adc:	00007500 	andeq	r7, r0, r0, lsl #10
	...
    8af0:	01000000 	mrseq	r0, (UNDEF: 0)
    8af4:	00005000 	andeq	r5, r0, r0
    8af8:	00000000 	andeq	r0, r0, r0
    8afc:	00010000 	andeq	r0, r1, r0
    8b00:	00000050 	andeq	r0, r0, r0, asr r0
    8b04:	00000000 	andeq	r0, r0, r0
    8b08:	01010200 	mrseq	r0, R9_usr
    8b0c:	01010000 	mrseq	r0, (UNDEF: 1)
	...
    8b18:	02000000 	andeq	r0, r0, #0
    8b1c:	009f3000 	addseq	r3, pc, r0
    8b20:	00000000 	andeq	r0, r0, r0
    8b24:	02000000 	andeq	r0, r0, #0
    8b28:	009f3100 	addseq	r3, pc, r0, lsl #2
    8b2c:	00000000 	andeq	r0, r0, r0
    8b30:	02000000 	andeq	r0, r0, #0
    8b34:	009f3000 	addseq	r3, pc, r0
    8b38:	00000000 	andeq	r0, r0, r0
    8b3c:	02000000 	andeq	r0, r0, #0
    8b40:	009f3100 	addseq	r3, pc, r0, lsl #2
    8b44:	00000000 	andeq	r0, r0, r0
    8b48:	02000000 	andeq	r0, r0, #0
    8b4c:	009f3000 	addseq	r3, pc, r0
	...
    8b60:	01000000 	mrseq	r0, (UNDEF: 0)
    8b64:	00005000 	andeq	r5, r0, r0
    8b68:	00000000 	andeq	r0, r0, r0
    8b6c:	00010000 	andeq	r0, r1, r0
    8b70:	00000050 	andeq	r0, r0, r0, asr r0
	...
    8b80:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    8b8c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    8b90:	00000010 	andeq	r0, r0, r0, lsl r0
	...
    8ba4:	01000000 	mrseq	r0, (UNDEF: 0)
    8ba8:	00005000 	andeq	r5, r0, r0
    8bac:	00000000 	andeq	r0, r0, r0
    8bb0:	00010000 	andeq	r0, r1, r0
    8bb4:	00000054 	andeq	r0, r0, r4, asr r0
    8bb8:	00000000 	andeq	r0, r0, r0
    8bbc:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    8bd4:	00540001 	subseq	r0, r4, r1
    8bd8:	00000000 	andeq	r0, r0, r0
    8bdc:	01000000 	mrseq	r0, (UNDEF: 0)
    8be0:	00005400 	andeq	r5, r0, r0, lsl #8
    8be4:	00000000 	andeq	r0, r0, r0
    8be8:	00020000 	andeq	r0, r2, r0
    8bec:	00020200 	andeq	r0, r2, r0, lsl #4
	...
    8bf8:	9f300002 	svcls	0x00300002
	...
    8c04:	9f300002 	svcls	0x00300002
	...
    8c10:	9f310002 	svcls	0x00310002
	...
    8c28:	00520001 	subseq	r0, r2, r1
    8c2c:	00000000 	andeq	r0, r0, r0
    8c30:	01000000 	mrseq	r0, (UNDEF: 0)
    8c34:	00005200 	andeq	r5, r0, r0, lsl #4
    8c38:	00000000 	andeq	r0, r0, r0
    8c3c:	24340000 	ldrtcs	r0, [r4], #-0
    8c40:	24361000 	ldrtcs	r1, [r6], #-0
    8c44:	00021000 	andeq	r1, r2, r0
    8c48:	2436007d 	ldrtcs	r0, [r6], #-125	; 0xffffff83
    8c4c:	24f01000 	ldrbtcs	r1, [r0], #0
    8c50:	00021000 	andeq	r1, r2, r0
    8c54:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    8c60:	24340000 	ldrtcs	r0, [r4], #-0
    8c64:	243b1000 	ldrtcs	r1, [fp], #-0
    8c68:	00011000 	andeq	r1, r1, r0
    8c6c:	00243b50 	eoreq	r3, r4, r0, asr fp
    8c70:	0024f010 	eoreq	pc, r4, r0, lsl r0	; <UNPREDICTABLE>
    8c74:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
	...
    8c80:	248e0000 	strcs	r0, [lr], #0
    8c84:	249c1000 	ldrcs	r1, [ip], #0
    8c88:	00011000 	andeq	r1, r1, r0
    8c8c:	00000053 	andeq	r0, r0, r3, asr r0
    8c90:	00000000 	andeq	r0, r0, r0
    8c94:	0022e400 	eoreq	lr, r2, r0, lsl #8
    8c98:	0022e810 	eoreq	lr, r2, r0, lsl r8
    8c9c:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    8ca0:	0022e800 	eoreq	lr, r2, r0, lsl #16
    8ca4:	00237a10 	eoreq	r7, r3, r0, lsl sl
    8ca8:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    8cac:	00000020 	andeq	r0, r0, r0, lsr #32
	...
    8cb8:	0022e400 	eoreq	lr, r2, r0, lsl #8
    8cbc:	0022fe10 	eoreq	pc, r2, r0, lsl lr	; <UNPREDICTABLE>
    8cc0:	50000110 	andpl	r0, r0, r0, lsl r1
    8cc4:	100022fe 	strdne	r2, [r0], -lr
    8cc8:	1000237a 	andne	r2, r0, sl, ror r3
    8ccc:	00580001 	subseq	r0, r8, r1
	...
    8cd8:	e4000000 	str	r0, [r0], #-0
    8cdc:	fc100022 	ldc2	0, cr0, [r0], {34}	; 0x22
    8ce0:	01100022 	tsteq	r0, r2, lsr #32
    8ce4:	22fc5100 	rscscs	r5, ip, #0, 2
    8ce8:	237a1000 	cmncs	sl, #0
    8cec:	00011000 	andeq	r1, r1, r0
    8cf0:	00000055 	andeq	r0, r0, r5, asr r0
	...
    8d00:	0022e400 	eoreq	lr, r2, r0, lsl #8
    8d04:	0022fa10 	eoreq	pc, r2, r0, lsl sl	; <UNPREDICTABLE>
    8d08:	52000110 	andpl	r0, r0, #16, 2
    8d0c:	100022fa 	strdne	r2, [r0], -sl
    8d10:	1000230e 	andne	r2, r0, lr, lsl #6
    8d14:	0e570001 	cdpeq	0, 5, cr0, cr7, cr1, {0}
    8d18:	18100023 	ldmdane	r0, {r0, r1, r5}
    8d1c:	07100023 	ldreq	r0, [r0, -r3, lsr #32]
    8d20:	80817200 	addhi	r7, r1, r0, lsl #4
    8d24:	9f7c8080 	svcls	0x007c8080
    8d28:	10002318 	andne	r2, r0, r8, lsl r3
    8d2c:	1000237a 	andne	r2, r0, sl, ror r3
    8d30:	01f30004 	mvnseq	r0, r4
    8d34:	00009f52 	andeq	r9, r0, r2, asr pc
	...
    8d40:	22e40000 	rsccs	r0, r4, #0
    8d44:	23011000 	movwcs	r1, #4096	; 0x1000
    8d48:	00011000 	andeq	r1, r1, r0
    8d4c:	00230153 	eoreq	r0, r3, r3, asr r1
    8d50:	00237a10 	eoreq	r7, r3, r0, lsl sl
    8d54:	59000110 	stmdbpl	r0, {r4, r8}
	...
    8d64:	100022e4 	andne	r2, r0, r4, ror #5
    8d68:	10002342 	andne	r2, r0, r2, asr #6
    8d6c:	00910002 	addseq	r0, r1, r2
    8d70:	10002342 	andne	r2, r0, r2, asr #6
    8d74:	1000235a 	andne	r2, r0, sl, asr r3
    8d78:	00560001 	subseq	r0, r6, r1
	...
    8d84:	00230e00 	eoreq	r0, r3, r0, lsl #28
    8d88:	00237a10 	eoreq	r7, r3, r0, lsl sl
    8d8c:	57000110 	smladpl	r0, r0, r1, r0
	...
    8d98:	23180000 	tstcs	r8, #0
    8d9c:	233c1000 	teqcs	ip, #0
    8da0:	00011000 	andeq	r1, r1, r0
    8da4:	0000005c 	andeq	r0, r0, ip, asr r0
    8da8:	00000000 	andeq	r0, r0, r0
    8dac:	00269400 	eoreq	r9, r6, r0, lsl #8
    8db0:	00269610 	eoreq	r9, r6, r0, lsl r6
    8db4:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    8db8:	00269600 	eoreq	r9, r6, r0, lsl #12
    8dbc:	00269810 	eoreq	r9, r6, r0, lsl r8
    8dc0:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    8dc4:	00269808 	eoreq	r9, r6, r8, lsl #16
    8dc8:	0026ae10 	eoreq	sl, r6, r0, lsl lr
    8dcc:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    8dd0:	0026ae10 	eoreq	sl, r6, r0, lsl lr
    8dd4:	0026b010 	eoreq	fp, r6, r0, lsl r0
    8dd8:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    8ddc:	0026b008 	eoreq	fp, r6, r8
    8de0:	0026b610 	eoreq	fp, r6, r0, lsl r6
    8de4:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    8de8:	00000010 	andeq	r0, r0, r0, lsl r0
	...
    8df4:	00269400 	eoreq	r9, r6, r0, lsl #8
    8df8:	0026a310 	eoreq	sl, r6, r0, lsl r3
    8dfc:	50000110 	andpl	r0, r0, r0, lsl r1
    8e00:	100026a3 	andne	r2, r0, r3, lsr #13
    8e04:	100026b6 			; <UNDEFINED> instruction: 0x100026b6
    8e08:	01f30004 	mvnseq	r0, r4
    8e0c:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    8e18:	26940000 	ldrcs	r0, [r4], r0
    8e1c:	26a31000 	strtcs	r1, [r3], r0
    8e20:	00011000 	andeq	r1, r1, r0
    8e24:	0026a351 	eoreq	sl, r6, r1, asr r3
    8e28:	0026b610 	eoreq	fp, r6, r0, lsl r6
    8e2c:	f3000410 	vqshl.u8	d0, d0, d0
    8e30:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
    8e3c:	94000000 	strls	r0, [r0], #-0
    8e40:	a3100026 	tstge	r0, #38	; 0x26
    8e44:	01100026 	tsteq	r0, r6, lsr #32
    8e48:	26a35200 	strtcs	r5, [r3], r0, lsl #4
    8e4c:	26b61000 	ldrtcs	r1, [r6], r0
    8e50:	00041000 	andeq	r1, r4, r0
    8e54:	9f5201f3 	svcls	0x005201f3
	...
    8e64:	10002694 	mulne	r0, r4, r6
    8e68:	100026a3 	andne	r2, r0, r3, lsr #13
    8e6c:	a3530001 	cmpge	r3, #1
    8e70:	b6100026 	ldrlt	r0, [r0], -r6, lsr #32
    8e74:	04100026 	ldreq	r0, [r0], #-38	; 0xffffffda
    8e78:	5301f300 	movwpl	pc, #4864	; 0x1300	; <UNPREDICTABLE>
    8e7c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    8e88:	00269400 	eoreq	r9, r6, r0, lsl #8
    8e8c:	0026b010 	eoreq	fp, r6, r0, lsl r0
    8e90:	91000210 	tstls	r0, r0, lsl r2
    8e94:	0026b000 	eoreq	fp, r6, r0
    8e98:	0026b610 	eoreq	fp, r6, r0, lsl r6
    8e9c:	91000210 	tstls	r0, r0, lsl r2
	...
    8eac:	00269400 	eoreq	r9, r6, r0, lsl #8
    8eb0:	0026b010 	eoreq	fp, r6, r0, lsl r0
    8eb4:	91000210 	tstls	r0, r0, lsl r2
    8eb8:	0026b004 	eoreq	fp, r6, r4
    8ebc:	0026b610 	eoreq	fp, r6, r0, lsl r6
    8ec0:	91000210 	tstls	r0, r0, lsl r2
    8ec4:	00000004 	andeq	r0, r0, r4
	...
    8ed0:	0026a400 	eoreq	sl, r6, r0, lsl #8
    8ed4:	0026a910 	eoreq	sl, r6, r0, lsl r9
    8ed8:	50000110 	andpl	r0, r0, r0, lsl r1
    8edc:	100026b0 			; <UNDEFINED> instruction: 0x100026b0
    8ee0:	100026b4 			; <UNDEFINED> instruction: 0x100026b4
    8ee4:	00500001 	subseq	r0, r0, r1
    8ee8:	00000000 	andeq	r0, r0, r0
    8eec:	01000000 	mrseq	r0, (UNDEF: 0)
    8ef0:	aa000000 	bge	8ef8 <__HEAP_SIZE+0x7ef8>
    8ef4:	ac100026 	ldcge	0, cr0, [r0], {38}	; 0x26
    8ef8:	02100026 	andseq	r0, r0, #38	; 0x26
    8efc:	b49f3100 	ldrlt	r3, [pc], #256	; 8f04 <__HEAP_SIZE+0x7f04>
    8f00:	b6100026 	ldrlt	r0, [r0], -r6, lsr #32
    8f04:	03100026 	tsteq	r0, #38	; 0x26
    8f08:	9fff0900 	svcls	0x00ff0900
	...
    8f14:	100024f0 	strdne	r2, [r0], -r0
    8f18:	100024f4 	strdne	r2, [r0], -r4
    8f1c:	007d0002 	rsbseq	r0, sp, r2
    8f20:	100024f4 	strdne	r2, [r0], -r4
    8f24:	100024f6 	strdne	r2, [r0], -r6
    8f28:	1c7d0002 	ldclne	0, cr0, [sp], #-8
    8f2c:	100024f6 	strdne	r2, [r0], -r6
    8f30:	10002542 	andne	r2, r0, r2, asr #10
    8f34:	307d0002 	rsbscc	r0, sp, r2
    8f38:	10002542 	andne	r2, r0, r2, asr #10
    8f3c:	10002546 	andne	r2, r0, r6, asr #10
    8f40:	1c7d0002 	ldclne	0, cr0, [sp], #-8
    8f44:	10002546 	andne	r2, r0, r6, asr #10
    8f48:	10002552 	andne	r2, r0, r2, asr r5
    8f4c:	307d0002 	rsbscc	r0, sp, r2
	...
    8f5c:	100024f0 	strdne	r2, [r0], -r0
    8f60:	10002500 	andne	r2, r0, r0, lsl #10
    8f64:	00500001 	subseq	r0, r0, r1
    8f68:	52100025 	andspl	r0, r0, #37	; 0x25
    8f6c:	01100025 	tsteq	r0, r5, lsr #32
    8f70:	00005600 	andeq	r5, r0, r0, lsl #12
	...
    8f7c:	24f00000 	ldrbtcs	r0, [r0], #0
    8f80:	25031000 	strcs	r1, [r3, #-0]
    8f84:	00011000 	andeq	r1, r1, r0
    8f88:	00250351 	eoreq	r0, r5, r1, asr r3
    8f8c:	00255210 	eoreq	r5, r5, r0, lsl r2
    8f90:	57000110 	smladpl	r0, r0, r1, r0
	...
    8fa0:	100024f0 	strdne	r2, [r0], -r0
    8fa4:	10002503 	andne	r2, r0, r3, lsl #10
    8fa8:	03520001 	cmpeq	r2, #1
    8fac:	52100025 	andspl	r0, r0, #37	; 0x25
    8fb0:	01100025 	tsteq	r0, r5, lsr #32
    8fb4:	00005500 	andeq	r5, r0, r0, lsl #10
	...
    8fc0:	24f00000 	ldrbtcs	r0, [r0], #0
    8fc4:	25031000 	strcs	r1, [r3, #-0]
    8fc8:	00011000 	andeq	r1, r1, r0
    8fcc:	00250353 	eoreq	r0, r5, r3, asr r3
    8fd0:	00255210 	eoreq	r5, r5, r0, lsl r2
    8fd4:	58000110 	stmdapl	r0, {r4, r8}
	...
    8fe4:	100024f0 	strdne	r2, [r0], -r0
    8fe8:	10002546 	andne	r2, r0, r6, asr #10
    8fec:	00910002 	addseq	r0, r1, r2
    8ff0:	10002546 	andne	r2, r0, r6, asr #10
    8ff4:	10002552 	andne	r2, r0, r2, asr r5
    8ff8:	00910002 	addseq	r0, r1, r2
	...
    9008:	100024f0 	strdne	r2, [r0], -r0
    900c:	10002546 	andne	r2, r0, r6, asr #10
    9010:	04910002 	ldreq	r0, [r1], #2
    9014:	10002546 	andne	r2, r0, r6, asr #10
    9018:	10002552 	andne	r2, r0, r2, asr r5
    901c:	04910002 	ldreq	r0, [r1], #2
	...
    9030:	1000250e 	andne	r2, r0, lr, lsl #10
    9034:	10002519 	andne	r2, r0, r9, lsl r5
    9038:	19500001 	ldmdbne	r0, {r0}^
    903c:	3e100025 	cdpcc	0, 1, cr0, cr0, cr5, {1}
    9040:	01100025 	tsteq	r0, r5, lsr #32
    9044:	25465400 	strbcs	r5, [r6, #-1024]	; 0xfffffc00
    9048:	25481000 	strbcs	r1, [r8, #-0]
    904c:	00011000 	andeq	r1, r1, r0
    9050:	00254850 	eoreq	r4, r5, r0, asr r8
    9054:	00254e10 	eoreq	r4, r5, r0, lsl lr
    9058:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
	...
    9068:	25040000 	strcs	r0, [r4, #-0]
    906c:	250a1000 	strcs	r1, [sl, #-0]
    9070:	00011000 	andeq	r1, r1, r0
    9074:	00250a50 	eoreq	r0, r5, r0, asr sl
    9078:	00254e10 	eoreq	r4, r5, r0, lsl lr
    907c:	59000110 	stmdbpl	r0, {r4, r8}
    9080:	1000254e 	andne	r2, r0, lr, asr #10
    9084:	10002552 	andne	r2, r0, r2, asr r5
    9088:	00500001 	subseq	r0, r0, r1
    908c:	00000000 	andeq	r0, r0, r0
    9090:	6c000000 	stcvs	0, cr0, [r0], {-0}
    9094:	6e100026 	cdpvs	0, 1, cr0, cr0, cr6, {1}
    9098:	02100026 	andseq	r0, r0, #38	; 0x26
    909c:	6e007d00 	cdpvs	13, 0, cr7, cr0, cr0, {0}
    90a0:	70100026 	andsvc	r0, r0, r6, lsr #32
    90a4:	02100026 	andseq	r0, r0, #38	; 0x26
    90a8:	70087d00 	andvc	r7, r8, r0, lsl #26
    90ac:	92100026 	andsls	r0, r0, #38	; 0x26
    90b0:	02100026 	andseq	r0, r0, #38	; 0x26
    90b4:	92207d00 	eorls	r7, r0, #0, 26
    90b8:	94100026 	ldrls	r0, [r0], #-38	; 0xffffffda
    90bc:	02100026 	andseq	r0, r0, #38	; 0x26
    90c0:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    90cc:	6c000000 	stcvs	0, cr0, [r0], {-0}
    90d0:	87100026 	ldrhi	r0, [r0, -r6, lsr #32]
    90d4:	01100026 	tsteq	r0, r6, lsr #32
    90d8:	26875000 	strcs	r5, [r7], r0
    90dc:	26941000 	ldrcs	r1, [r4], r0
    90e0:	00041000 	andeq	r1, r4, r0
    90e4:	9f5001f3 	svcls	0x005001f3
	...
    90f4:	1000266c 	andne	r2, r0, ip, ror #12
    90f8:	10002687 	andne	r2, r0, r7, lsl #13
    90fc:	87510001 	ldrbhi	r0, [r1, -r1]
    9100:	94100026 	ldrls	r0, [r0], #-38	; 0xffffffda
    9104:	04100026 	ldreq	r0, [r0], #-38	; 0xffffffda
    9108:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    910c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    9118:	00266c00 	eoreq	r6, r6, r0, lsl #24
    911c:	00268710 	eoreq	r8, r6, r0, lsl r7
    9120:	52000110 	andpl	r0, r0, #16, 2
    9124:	10002687 	andne	r2, r0, r7, lsl #13
    9128:	10002694 	mulne	r0, r4, r6
    912c:	01f30004 	mvnseq	r0, r4
    9130:	00009f52 	andeq	r9, r0, r2, asr pc
	...
    913c:	266c0000 	strbtcs	r0, [ip], -r0
    9140:	26871000 	strcs	r1, [r7], r0
    9144:	00011000 	andeq	r1, r1, r0
    9148:	00268753 	eoreq	r8, r6, r3, asr r7
    914c:	00269410 	eoreq	r9, r6, r0, lsl r4
    9150:	f3000410 	vqshl.u8	d0, d0, d0
    9154:	009f5301 	addseq	r5, pc, r1, lsl #6
	...
    9160:	00268800 	eoreq	r8, r6, r0, lsl #16
    9164:	00268d10 	eoreq	r8, r6, r0, lsl sp
    9168:	50000110 	andpl	r0, r0, r0, lsl r1
	...
    9174:	1000237a 	andne	r2, r0, sl, ror r3
    9178:	1000237e 	andne	r2, r0, lr, ror r3
    917c:	007d0002 	rsbseq	r0, sp, r2
    9180:	1000237e 	andne	r2, r0, lr, ror r3
    9184:	10002380 	andne	r2, r0, r0, lsl #7
    9188:	1c7d0002 	ldclne	0, cr0, [sp], #-8
    918c:	10002380 	andne	r2, r0, r0, lsl #7
    9190:	100023c0 	andne	r2, r0, r0, asr #7
    9194:	307d0002 	rsbscc	r0, sp, r2
    9198:	100023c0 	andne	r2, r0, r0, asr #7
    919c:	100023c4 	andne	r2, r0, r4, asr #7
    91a0:	1c7d0002 	ldclne	0, cr0, [sp], #-8
    91a4:	100023c4 	andne	r2, r0, r4, asr #7
    91a8:	100023cc 	andne	r2, r0, ip, asr #7
    91ac:	307d0002 	rsbscc	r0, sp, r2
	...
    91c4:	237a0000 	cmncs	sl, #0
    91c8:	23961000 	orrscs	r1, r6, #0
    91cc:	00011000 	andeq	r1, r1, r0
    91d0:	00239650 	eoreq	r9, r3, r0, asr r6
    91d4:	0023be10 	eoreq	fp, r3, r0, lsl lr
    91d8:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
    91dc:	100023be 			; <UNDEFINED> instruction: 0x100023be
    91e0:	100023c4 	andne	r2, r0, r4, asr #7
    91e4:	01f30004 	mvnseq	r0, r4
    91e8:	23c49f50 	biccs	r9, r4, #80, 30	; 0x140
    91ec:	23c61000 	biccs	r1, r6, #0
    91f0:	00011000 	andeq	r1, r1, r0
    91f4:	0023c650 	eoreq	ip, r3, r0, asr r6
    91f8:	0023c810 	eoreq	ip, r3, r0, lsl r8
    91fc:	f3000410 	vqshl.u8	d0, d0, d0
    9200:	c89f5001 	ldmgt	pc, {r0, ip, lr}	; <UNPREDICTABLE>
    9204:	ca100023 	bgt	409298 <__RAM_SIZE+0x309298>
    9208:	01100023 	tsteq	r0, r3, lsr #32
    920c:	23ca5000 	biccs	r5, sl, #0
    9210:	23cc1000 	biccs	r1, ip, #0
    9214:	00011000 	andeq	r1, r1, r0
    9218:	00000055 	andeq	r0, r0, r5, asr r0
	...
    9228:	00237a00 	eoreq	r7, r3, r0, lsl #20
    922c:	00239410 	eoreq	r9, r3, r0, lsl r4
    9230:	51000110 	tstpl	r0, r0, lsl r1
    9234:	10002394 	mulne	r0, r4, r3
    9238:	100023be 			; <UNDEFINED> instruction: 0x100023be
    923c:	be590001 	cdplt	0, 5, cr0, cr9, cr1, {0}
    9240:	c4100023 	ldrgt	r0, [r0], #-35	; 0xffffffdd
    9244:	04100023 	ldreq	r0, [r0], #-35	; 0xffffffdd
    9248:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    924c:	0023c49f 	mlaeq	r3, pc, r4, ip	; <UNPREDICTABLE>
    9250:	0023cc10 	eoreq	ip, r3, r0, lsl ip
    9254:	51000110 	tstpl	r0, r0, lsl r1
	...
    9268:	1000237a 	andne	r2, r0, sl, ror r3
    926c:	10002392 	mulne	r0, r2, r3
    9270:	92520001 	subsls	r0, r2, #1
    9274:	be100023 	cdplt	0, 1, cr0, cr0, cr3, {1}
    9278:	01100023 	tsteq	r0, r3, lsr #32
    927c:	23be5800 			; <UNDEFINED> instruction: 0x23be5800
    9280:	23c41000 	biccs	r1, r4, #0
    9284:	00041000 	andeq	r1, r4, r0
    9288:	9f5201f3 	svcls	0x005201f3
    928c:	100023c4 	andne	r2, r0, r4, asr #7
    9290:	100023cc 	andne	r2, r0, ip, asr #7
    9294:	00520001 	subseq	r0, r2, r1
	...
    92a4:	7a000000 	bvc	92ac <__HEAP_SIZE+0x82ac>
    92a8:	99100023 	ldmdbls	r0, {r0, r1, r5}
    92ac:	01100023 	tsteq	r0, r3, lsr #32
    92b0:	23995300 	orrscs	r5, r9, #0, 6
    92b4:	23be1000 			; <UNDEFINED> instruction: 0x23be1000
    92b8:	00011000 	andeq	r1, r1, r0
    92bc:	0023be57 	eoreq	fp, r3, r7, asr lr
    92c0:	0023c410 	eoreq	ip, r3, r0, lsl r4
    92c4:	f3000410 	vqshl.u8	d0, d0, d0
    92c8:	c49f5301 	ldrgt	r5, [pc], #769	; 92d0 <__HEAP_SIZE+0x82d0>
    92cc:	cc100023 	ldcgt	0, cr0, [r0], {35}	; 0x23
    92d0:	01100023 	tsteq	r0, r3, lsr #32
    92d4:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    92e0:	237a0000 	cmncs	sl, #0
    92e4:	23c41000 	biccs	r1, r4, #0
    92e8:	00021000 	andeq	r1, r2, r0
    92ec:	23c40091 	biccs	r0, r4, #145	; 0x91
    92f0:	23cc1000 	biccs	r1, ip, #0
    92f4:	00021000 	andeq	r1, r2, r0
    92f8:	00000091 	muleq	r0, r1, r0
	...
    9304:	237a0000 	cmncs	sl, #0
    9308:	23c41000 	biccs	r1, r4, #0
    930c:	00021000 	andeq	r1, r2, r0
    9310:	23c40491 	biccs	r0, r4, #-1862270976	; 0x91000000
    9314:	23cc1000 	biccs	r1, ip, #0
    9318:	00021000 	andeq	r1, r2, r0
    931c:	00000491 	muleq	r0, r1, r4
	...
    9328:	237a0000 	cmncs	sl, #0
    932c:	23c41000 	biccs	r1, r4, #0
    9330:	00021000 	andeq	r1, r2, r0
    9334:	23c40891 	biccs	r0, r4, #9502720	; 0x910000
    9338:	23cc1000 	biccs	r1, ip, #0
    933c:	00021000 	andeq	r1, r2, r0
    9340:	00000891 	muleq	r0, r1, r8
	...
    934c:	237a0000 	cmncs	sl, #0
    9350:	23c41000 	biccs	r1, r4, #0
    9354:	00021000 	andeq	r1, r2, r0
    9358:	23c40c91 	biccs	r0, r4, #37120	; 0x9100
    935c:	23cc1000 	biccs	r1, ip, #0
    9360:	00021000 	andeq	r1, r2, r0
    9364:	00000c91 	muleq	r0, r1, ip
    9368:	00000000 	andeq	r0, r0, r0
    936c:	00010000 	andeq	r0, r1, r0
    9370:	23900000 	orrscs	r0, r0, #0
    9374:	23be1000 			; <UNDEFINED> instruction: 0x23be1000
    9378:	00011000 	andeq	r1, r1, r0
    937c:	0023ca54 	eoreq	ip, r3, r4, asr sl
    9380:	0023cc10 	eoreq	ip, r3, r0, lsl ip
    9384:	50000110 	andpl	r0, r0, r0, lsl r1
	...
    9398:	007d0002 	rsbseq	r0, sp, r2
	...
    93a4:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    93b0:	187d0002 	ldmdane	sp!, {r1}^
	...
    93bc:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    93d4:	00010000 	andeq	r0, r1, r0
    93d8:	00000050 	andeq	r0, r0, r0, asr r0
    93dc:	00000000 	andeq	r0, r0, r0
    93e0:	91000200 	mrsls	r0, R8_usr
    93e4:	0000006c 	andeq	r0, r0, ip, rrx
    93e8:	00000000 	andeq	r0, r0, r0
    93ec:	f3000400 	vshl.u8	d0, d0, d0
    93f0:	009f5001 	addseq	r5, pc, r1
	...
    9408:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    9414:	70910002 	addsvc	r0, r1, r2
	...
    9420:	01f30004 	mvnseq	r0, r4
    9424:	00009f51 	andeq	r9, r0, r1, asr pc
	...
    943c:	00520001 	subseq	r0, r2, r1
    9440:	00000000 	andeq	r0, r0, r0
    9444:	01000000 	mrseq	r0, (UNDEF: 0)
    9448:	00005400 	andeq	r5, r0, r0, lsl #8
    944c:	00000000 	andeq	r0, r0, r0
    9450:	00040000 	andeq	r0, r4, r0
    9454:	9f5201f3 	svcls	0x005201f3
	...
    946c:	00010000 	andeq	r0, r1, r0
    9470:	00000053 	andeq	r0, r0, r3, asr r0
    9474:	00000000 	andeq	r0, r0, r0
    9478:	52000100 	andpl	r0, r0, #0, 2
	...
    9484:	01f30004 	mvnseq	r0, r4
    9488:	00009f53 	andeq	r9, r0, r3, asr pc
	...
    949c:	00500001 	subseq	r0, r0, r1
	...
    94ac:	02000000 	andeq	r0, r0, #0
    94b0:	00007d00 	andeq	r7, r0, r0, lsl #26
    94b4:	00000000 	andeq	r0, r0, r0
    94b8:	02000000 	andeq	r0, r0, #0
    94bc:	00087d00 	andeq	r7, r8, r0, lsl #26
    94c0:	00000000 	andeq	r0, r0, r0
    94c4:	02000000 	andeq	r0, r0, #0
    94c8:	00187d00 	andseq	r7, r8, r0, lsl #26
    94cc:	00000000 	andeq	r0, r0, r0
    94d0:	02000000 	andeq	r0, r0, #0
    94d4:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    94ec:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    94f8:	6c910002 	ldcvs	0, cr0, [r1], {2}
	...
    9504:	01f30004 	mvnseq	r0, r4
    9508:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    9520:	00510001 	subseq	r0, r1, r1
    9524:	00000000 	andeq	r0, r0, r0
    9528:	02000000 	andeq	r0, r0, #0
    952c:	00709100 	rsbseq	r9, r0, r0, lsl #2
    9530:	00000000 	andeq	r0, r0, r0
    9534:	04000000 	streq	r0, [r0], #-0
    9538:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    953c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    9550:	01000000 	mrseq	r0, (UNDEF: 0)
    9554:	00005200 	andeq	r5, r0, r0, lsl #4
    9558:	00000000 	andeq	r0, r0, r0
    955c:	00010000 	andeq	r0, r1, r0
    9560:	00000054 	andeq	r0, r0, r4, asr r0
    9564:	00000000 	andeq	r0, r0, r0
    9568:	f3000400 	vshl.u8	d0, d0, d0
    956c:	009f5201 	addseq	r5, pc, r1, lsl #4
	...
    9584:	53000100 	movwpl	r0, #256	; 0x100
	...
    9590:	00520001 	subseq	r0, r2, r1
    9594:	00000000 	andeq	r0, r0, r0
    9598:	04000000 	streq	r0, [r0], #-0
    959c:	5301f300 	movwpl	pc, #4864	; 0x1300	; <UNPREDICTABLE>
    95a0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    95b0:	01000000 	mrseq	r0, (UNDEF: 0)
    95b4:	00005000 	andeq	r5, r0, r0
	...
    95c4:	00020000 	andeq	r0, r2, r0
    95c8:	0000007d 	andeq	r0, r0, sp, ror r0
    95cc:	00000000 	andeq	r0, r0, r0
    95d0:	00020000 	andeq	r0, r2, r0
    95d4:	0000107d 	andeq	r1, r0, sp, ror r0
	...
    95e8:	00010000 	andeq	r0, r1, r0
    95ec:	00000050 	andeq	r0, r0, r0, asr r0
    95f0:	00000000 	andeq	r0, r0, r0
    95f4:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    960c:	00510001 	subseq	r0, r1, r1
    9610:	00000000 	andeq	r0, r0, r0
    9614:	01000000 	mrseq	r0, (UNDEF: 0)
    9618:	00005500 	andeq	r5, r0, r0, lsl #10
    961c:	00000000 	andeq	r0, r0, r0
    9620:	00010000 	andeq	r0, r1, r0
	...
    962c:	00010000 	andeq	r0, r1, r0
    9630:	00000050 	andeq	r0, r0, r0, asr r0
    9634:	00000000 	andeq	r0, r0, r0
    9638:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    964c:	007d0002 	rsbseq	r0, sp, r2
	...
    9658:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    9670:	00010000 	andeq	r0, r1, r0
    9674:	00000050 	andeq	r0, r0, r0, asr r0
    9678:	00000000 	andeq	r0, r0, r0
    967c:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    9688:	01f30004 	mvnseq	r0, r4
    968c:	00009f50 	andeq	r9, r0, r0, asr pc
    9690:	00000000 	andeq	r0, r0, r0
    9694:	00010000 	andeq	r0, r1, r0
	...
    96a4:	00500001 	subseq	r0, r0, r1
    96a8:	00000000 	andeq	r0, r0, r0
    96ac:	01000000 	mrseq	r0, (UNDEF: 0)
    96b0:	00005400 	andeq	r5, r0, r0, lsl #8
    96b4:	00000000 	andeq	r0, r0, r0
    96b8:	00040000 	andeq	r0, r4, r0
    96bc:	9f5001f3 	svcls	0x005001f3
	...
    96d0:	00010000 	andeq	r0, r1, r0
    96d4:	00000054 	andeq	r0, r0, r4, asr r0
	...
    96e4:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    96f0:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    96f4:	00000008 	andeq	r0, r0, r8
	...
    970c:	01000000 	mrseq	r0, (UNDEF: 0)
    9710:	00005000 	andeq	r5, r0, r0
    9714:	00000000 	andeq	r0, r0, r0
    9718:	00010000 	andeq	r0, r1, r0
    971c:	00000054 	andeq	r0, r0, r4, asr r0
    9720:	00000000 	andeq	r0, r0, r0
    9724:	f3000400 	vshl.u8	d0, d0, d0
    9728:	009f5001 	addseq	r5, pc, r1
    972c:	00000000 	andeq	r0, r0, r0
    9730:	01000000 	mrseq	r0, (UNDEF: 0)
    9734:	00005400 	andeq	r5, r0, r0, lsl #8
    9738:	00000000 	andeq	r0, r0, r0
    973c:	00040000 	andeq	r0, r4, r0
    9740:	9f5001f3 	svcls	0x005001f3
	...
    9754:	00010000 	andeq	r0, r1, r0
    9758:	00000054 	andeq	r0, r0, r4, asr r0
    975c:	00000000 	andeq	r0, r0, r0
    9760:	00000200 	andeq	r0, r0, r0, lsl #4
	...
    9770:	01000000 	mrseq	r0, (UNDEF: 0)
    9774:	00005000 	andeq	r5, r0, r0
    9778:	00000000 	andeq	r0, r0, r0
    977c:	00010000 	andeq	r0, r1, r0
    9780:	00000054 	andeq	r0, r0, r4, asr r0
    9784:	00000000 	andeq	r0, r0, r0
    9788:	f3000400 	vshl.u8	d0, d0, d0
    978c:	009f5001 	addseq	r5, pc, r1
    9790:	00000000 	andeq	r0, r0, r0
    9794:	01000000 	mrseq	r0, (UNDEF: 0)
    9798:	00005400 	andeq	r5, r0, r0, lsl #8
    979c:	00000000 	andeq	r0, r0, r0
    97a0:	00040000 	andeq	r0, r4, r0
    97a4:	9f5001f3 	svcls	0x005001f3
	...
    97b0:	100030b4 	strhne	r3, [r0], -r4
    97b4:	100030b6 	strhne	r3, [r0], -r6
    97b8:	007d0002 	rsbseq	r0, sp, r2
    97bc:	100030b6 	strhne	r3, [r0], -r6
    97c0:	100030b8 	strhne	r3, [r0], -r8
    97c4:	0c7d0002 	ldcleq	0, cr0, [sp], #-8
    97c8:	100030b8 	strhne	r3, [r0], -r8
    97cc:	100030c8 	andne	r3, r0, r8, asr #1
    97d0:	187d0002 	ldmdane	sp!, {r1}^
    97d4:	100030c8 	andne	r3, r0, r8, asr #1
    97d8:	100030ca 	andne	r3, r0, sl, asr #1
    97dc:	0c7d0002 	ldcleq	0, cr0, [sp], #-8
    97e0:	100030ca 	andne	r3, r0, sl, asr #1
    97e4:	10003114 	andne	r3, r0, r4, lsl r1
    97e8:	187d0002 	ldmdane	sp!, {r1}^
	...
    97f4:	10002ee0 	andne	r2, r0, r0, ror #29
    97f8:	10002ee2 	andne	r2, r0, r2, ror #29
    97fc:	007d0002 	rsbseq	r0, sp, r2
    9800:	10002ee2 	andne	r2, r0, r2, ror #29
    9804:	10002f10 	andne	r2, r0, r0, lsl pc
    9808:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    9814:	2ee60000 	cdpcs	0, 14, cr0, cr6, cr0, {0}
    9818:	2eef1000 	cdpcs	0, 14, cr1, cr15, cr0, {0}
    981c:	00021000 	andeq	r1, r2, r0
    9820:	00000073 	andeq	r0, r0, r3, ror r0
    9824:	00000000 	andeq	r0, r0, r0
    9828:	00010000 	andeq	r0, r1, r0
    982c:	2efa0000 	cdpcs	0, 15, cr0, cr10, cr0, {0}
    9830:	2f061000 	svccs	0x00061000
    9834:	00011000 	andeq	r1, r1, r0
    9838:	002f0653 	eoreq	r0, pc, r3, asr r6	; <UNPREDICTABLE>
    983c:	002f1010 	eoreq	r1, pc, r0, lsl r0	; <UNPREDICTABLE>
    9840:	03000510 	movweq	r0, #1296	; 0x510
    9844:	38008ba0 	stmdacc	r0, {r5, r7, r8, r9, fp, pc}
	...
    9850:	10002fa4 	andne	r2, r0, r4, lsr #31
    9854:	10002fa6 	andne	r2, r0, r6, lsr #31
    9858:	007d0002 	rsbseq	r0, sp, r2
    985c:	10002fa6 	andne	r2, r0, r6, lsr #31
    9860:	10002fa8 	andne	r2, r0, r8, lsr #31
    9864:	0c7d0002 	ldcleq	0, cr0, [sp], #-8
    9868:	10002fa8 	andne	r2, r0, r8, lsr #31
    986c:	10003096 	mulne	r0, r6, r0
    9870:	287d0002 	ldmdacs	sp!, {r1}^
    9874:	10003096 	mulne	r0, r6, r0
    9878:	1000309c 	mulne	r0, ip, r0
    987c:	0c7d0002 	ldcleq	0, cr0, [sp], #-8
	...
    9888:	2fdc0000 	svccs	0x00dc0000
    988c:	30941000 	addscc	r1, r4, r0
    9890:	00011000 	andeq	r1, r1, r0
    9894:	00000054 	andeq	r0, r0, r4, asr r0
	...
    98a8:	002fee00 	eoreq	lr, pc, r0, lsl #28
    98ac:	00301a10 	eorseq	r1, r0, r0, lsl sl
    98b0:	50000110 	andpl	r0, r0, r0, lsl r1
    98b4:	1000301a 	andne	r3, r0, sl, lsl r0
    98b8:	1000304c 	andne	r3, r0, ip, asr #32
    98bc:	4c550001 	mrrcmi	0, 0, r0, r5, cr1
    98c0:	72100030 	andsvc	r0, r0, #48	; 0x30
    98c4:	01100030 	tsteq	r0, r0, lsr r0
    98c8:	30725000 	rsbscc	r5, r2, r0
    98cc:	30781000 	rsbscc	r1, r8, r0
    98d0:	00011000 	andeq	r1, r1, r0
    98d4:	00307855 	eorseq	r7, r0, r5, asr r8
    98d8:	00308e10 	eorseq	r8, r0, r0, lsl lr
    98dc:	50000110 	andpl	r0, r0, r0, lsl r1
    98e0:	1000308e 	andne	r3, r0, lr, lsl #1
    98e4:	10003094 	mulne	r0, r4, r0
    98e8:	00550001 	subseq	r0, r5, r1
    98ec:	00000000 	andeq	r0, r0, r0
    98f0:	01000000 	mrseq	r0, (UNDEF: 0)
    98f4:	002fd000 	eoreq	sp, pc, r0
    98f8:	002fda10 	eoreq	sp, pc, r0, lsl sl	; <UNPREDICTABLE>
    98fc:	91000310 	tstls	r0, r0, lsl r3
    9900:	00009f64 	andeq	r9, r0, r4, ror #30
    9904:	00000000 	andeq	r0, r0, r0
    9908:	2e300000 	cdpcs	0, 3, cr0, cr0, cr0, {0}
    990c:	2e321000 	cdpcs	0, 3, cr1, cr2, cr0, {0}
    9910:	00021000 	andeq	r1, r2, r0
    9914:	2e32007d 	mrccs	0, 1, r0, cr2, cr13, {3}
    9918:	2e781000 	cdpcs	0, 7, cr1, cr8, cr0, {0}
    991c:	00021000 	andeq	r1, r2, r0
    9920:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    993c:	2e300000 	cdpcs	0, 3, cr0, cr0, cr0, {0}
    9940:	2e441000 	cdpcs	0, 4, cr1, cr4, cr0, {0}
    9944:	00011000 	andeq	r1, r1, r0
    9948:	002e4450 	eoreq	r4, lr, r0, asr r4
    994c:	002e4610 	eoreq	r4, lr, r0, lsl r6
    9950:	f3000410 	vqshl.u8	d0, d0, d0
    9954:	469f5001 	ldrmi	r5, [pc], r1
    9958:	4c10002e 	ldcmi	0, cr0, [r0], {46}	; 0x2e
    995c:	0110002e 	tsteq	r0, lr, lsr #32
    9960:	2e4c5000 	cdpcs	0, 4, cr5, cr12, cr0, {0}
    9964:	2e4f1000 	cdpcs	0, 4, cr1, cr15, cr0, {0}
    9968:	00031000 	andeq	r1, r3, r0
    996c:	4f9f7c71 	svcmi	0x009f7c71
    9970:	5410002e 	ldrpl	r0, [r0], #-46	; 0xffffffd2
    9974:	0410002e 	ldreq	r0, [r0], #-46	; 0xffffffd2
    9978:	5001f300 	andpl	pc, r1, r0, lsl #6
    997c:	002e549f 	mlaeq	lr, pc, r4, r5	; <UNPREDICTABLE>
    9980:	002e6210 	eoreq	r6, lr, r0, lsl r2
    9984:	50000110 	andpl	r0, r0, r0, lsl r1
    9988:	10002e62 	andne	r2, r0, r2, ror #28
    998c:	10002e65 	andne	r2, r0, r5, ror #28
    9990:	7c710003 	ldclvc	0, cr0, [r1], #-12
    9994:	002e659f 	mlaeq	lr, pc, r5, r6	; <UNPREDICTABLE>
    9998:	002e6a10 	eoreq	r6, lr, r0, lsl sl
    999c:	f3000410 	vqshl.u8	d0, d0, d0
    99a0:	6a9f5001 	bvs	fe7dd9ac <__StackTop+0xc66dd9ac>
    99a4:	6c10002e 	ldcvs	0, cr0, [r0], {46}	; 0x2e
    99a8:	0110002e 	tsteq	r0, lr, lsr #32
    99ac:	2e6c5000 	cdpcs	0, 6, cr5, cr12, cr0, {0}
    99b0:	2e781000 	cdpcs	0, 7, cr1, cr8, cr0, {0}
    99b4:	00041000 	andeq	r1, r4, r0
    99b8:	9f5001f3 	svcls	0x005001f3
	...
    99d8:	2e300000 	cdpcs	0, 3, cr0, cr0, cr0, {0}
    99dc:	2e441000 	cdpcs	0, 4, cr1, cr4, cr0, {0}
    99e0:	00011000 	andeq	r1, r1, r0
    99e4:	002e4451 	eoreq	r4, lr, r1, asr r4
    99e8:	002e4610 	eoreq	r4, lr, r0, lsl r6
    99ec:	f3000410 	vqshl.u8	d0, d0, d0
    99f0:	469f5101 	ldrmi	r5, [pc], r1, lsl #2
    99f4:	4810002e 	ldmdami	r0, {r1, r2, r3, r5}
    99f8:	0110002e 	tsteq	r0, lr, lsr #32
    99fc:	2e485100 	dvfcse	f5, f0, f0
    9a00:	2e4c1000 	cdpcs	0, 4, cr1, cr12, cr0, {0}
    9a04:	00021000 	andeq	r1, r2, r0
    9a08:	2e4c0470 	mcrcs	4, 2, r0, cr12, cr0, {3}
    9a0c:	2e4f1000 	cdpcs	0, 4, cr1, cr15, cr0, {0}
    9a10:	00021000 	andeq	r1, r2, r0
    9a14:	2e4f0071 	mcrcs	0, 2, r0, cr15, cr1, {3}
    9a18:	2e541000 	cdpcs	0, 5, cr1, cr4, cr0, {0}
    9a1c:	00041000 	andeq	r1, r4, r0
    9a20:	9f5101f3 	svcls	0x005101f3
    9a24:	10002e54 	andne	r2, r0, r4, asr lr
    9a28:	10002e5e 	andne	r2, r0, lr, asr lr
    9a2c:	5e510001 	cdppl	0, 5, cr0, cr1, cr1, {0}
    9a30:	6210002e 	andsvs	r0, r0, #46	; 0x2e
    9a34:	0210002e 	andseq	r0, r0, #46	; 0x2e
    9a38:	62047000 	andvs	r7, r4, #0
    9a3c:	6510002e 	ldrvs	r0, [r0, #-46]	; 0xffffffd2
    9a40:	0210002e 	andseq	r0, r0, #46	; 0x2e
    9a44:	65007100 	strvs	r7, [r0, #-256]	; 0xffffff00
    9a48:	6a10002e 	bvs	409b08 <__RAM_SIZE+0x309b08>
    9a4c:	0410002e 	ldreq	r0, [r0], #-46	; 0xffffffd2
    9a50:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    9a54:	002e6a9f 	mlaeq	lr, pc, sl, r6	; <UNPREDICTABLE>
    9a58:	002e7810 	eoreq	r7, lr, r0, lsl r8
    9a5c:	51000110 	tstpl	r0, r0, lsl r1
	...
    9a70:	2e300000 	cdpcs	0, 3, cr0, cr0, cr0, {0}
    9a74:	2e3c1000 	cdpcs	0, 3, cr1, cr12, cr0, {0}
    9a78:	00011000 	andeq	r1, r1, r0
    9a7c:	002e3c52 	eoreq	r3, lr, r2, asr ip
    9a80:	002e5410 	eoreq	r5, lr, r0, lsl r4
    9a84:	f3000410 	vqshl.u8	d0, d0, d0
    9a88:	549f5201 	ldrpl	r5, [pc], #513	; 9a90 <__HEAP_SIZE+0x8a90>
    9a8c:	6510002e 	ldrvs	r0, [r0, #-46]	; 0xffffffd2
    9a90:	0110002e 	tsteq	r0, lr, lsr #32
    9a94:	2e655200 	cdpcs	2, 6, cr5, cr5, cr0, {0}
    9a98:	2e6a1000 	cdpcs	0, 6, cr1, cr10, cr0, {0}
    9a9c:	00041000 	andeq	r1, r4, r0
    9aa0:	9f5201f3 	svcls	0x005201f3
    9aa4:	10002e6a 	andne	r2, r0, sl, ror #28
    9aa8:	10002e78 	andne	r2, r0, r8, ror lr
    9aac:	00520001 	subseq	r0, r2, r1
	...
    9ac0:	002e3000 	eoreq	r3, lr, r0
    9ac4:	002e3e10 	eoreq	r3, lr, r0, lsl lr
    9ac8:	53000110 	movwpl	r0, #272	; 0x110
    9acc:	10002e3e 	andne	r2, r0, lr, lsr lr
    9ad0:	10002e54 	andne	r2, r0, r4, asr lr
    9ad4:	01f30004 	mvnseq	r0, r4
    9ad8:	2e549f53 	mrccs	15, 2, r9, cr4, cr3, {2}
    9adc:	2e601000 	cdpcs	0, 6, cr1, cr0, cr0, {0}
    9ae0:	00011000 	andeq	r1, r1, r0
    9ae4:	002e6053 	eoreq	r6, lr, r3, asr r0
    9ae8:	002e6a10 	eoreq	r6, lr, r0, lsl sl
    9aec:	f3000410 	vqshl.u8	d0, d0, d0
    9af0:	6a9f5301 	bvs	fe7de6fc <__StackTop+0xc66de6fc>
    9af4:	7810002e 	ldmdavc	r0, {r1, r2, r3, r5}
    9af8:	0110002e 	tsteq	r0, lr, lsr #32
    9afc:	00005300 	andeq	r5, r0, r0, lsl #6
    9b00:	00000000 	andeq	r0, r0, r0
    9b04:	00010000 	andeq	r0, r1, r0
    9b08:	00000000 	andeq	r0, r0, r0
    9b0c:	10002e32 	andne	r2, r0, r2, lsr lr
    9b10:	10002e44 	andne	r2, r0, r4, asr #28
    9b14:	9f300002 	svcls	0x00300002
    9b18:	10002e46 	andne	r2, r0, r6, asr #28
    9b1c:	10002e6c 	andne	r2, r0, ip, ror #28
    9b20:	9f300002 	svcls	0x00300002
    9b24:	10002e6c 	andne	r2, r0, ip, ror #28
    9b28:	10002e78 	andne	r2, r0, r8, ror lr
    9b2c:	9f310002 	svcls	0x00310002
	...
    9b38:	10002f10 	andne	r2, r0, r0, lsl pc
    9b3c:	10002f12 	andne	r2, r0, r2, lsl pc
    9b40:	007d0002 	rsbseq	r0, sp, r2
    9b44:	10002f12 	andne	r2, r0, r2, lsl pc
    9b48:	10002f3c 	andne	r2, r0, ip, lsr pc
    9b4c:	107d0002 	rsbsne	r0, sp, r2
	...
    9b5c:	10002f10 	andne	r2, r0, r0, lsl pc
    9b60:	10002f17 	andne	r2, r0, r7, lsl pc
    9b64:	17500001 	ldrbne	r0, [r0, -r1]
    9b68:	3c10002f 	ldccc	0, cr0, [r0], {47}	; 0x2f
    9b6c:	0110002f 	tsteq	r0, pc, lsr #32
    9b70:	00005500 	andeq	r5, r0, r0, lsl #10
	...
    9b80:	2f1a0000 	svccs	0x001a0000
    9b84:	2f261000 	svccs	0x00261000
    9b88:	00011000 	andeq	r1, r1, r0
    9b8c:	002f2650 	eoreq	r2, pc, r0, asr r6	; <UNPREDICTABLE>
    9b90:	002f2e10 	eoreq	r2, pc, r0, lsl lr	; <UNPREDICTABLE>
    9b94:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    9b98:	10002f2e 	andne	r2, r0, lr, lsr #30
    9b9c:	10002f31 	andne	r2, r0, r1, lsr pc
    9ba0:	31500001 	cmpcc	r0, r1
    9ba4:	3c10002f 	ldccc	0, cr0, [r0], {47}	; 0x2f
    9ba8:	0110002f 	tsteq	r0, pc, lsr #32
    9bac:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    9bbc:	2e100000 	cdpcs	0, 1, cr0, cr0, cr0, {0}
    9bc0:	2e221000 	cdpcs	0, 2, cr1, cr2, cr0, {0}
    9bc4:	00011000 	andeq	r1, r1, r0
    9bc8:	002e2250 	eoreq	r2, lr, r0, asr r2
    9bcc:	002e2410 	eoreq	r2, lr, r0, lsl r4
    9bd0:	f3000410 	vqshl.u8	d0, d0, d0
    9bd4:	249f5001 	ldrcs	r5, [pc], #1	; 9bdc <__HEAP_SIZE+0x8bdc>
    9bd8:	2a10002e 	bcs	409c98 <__RAM_SIZE+0x309c98>
    9bdc:	0110002e 	tsteq	r0, lr, lsr #32
    9be0:	2e2a5000 	cdpcs	0, 2, cr5, cr10, cr0, {0}
    9be4:	2e301000 	cdpcs	0, 3, cr1, cr0, cr0, {0}
    9be8:	00041000 	andeq	r1, r4, r0
    9bec:	9f5001f3 	svcls	0x005001f3
	...
    9bfc:	10002e22 	andne	r2, r0, r2, lsr #28
    9c00:	10002e24 	andne	r2, r0, r4, lsr #28
    9c04:	2a500001 	bcs	1409c10 <__RAM_SIZE+0x1309c10>
    9c08:	3010002e 	andscc	r0, r0, lr, lsr #32
    9c0c:	0210002e 	andseq	r0, r0, #46	; 0x2e
    9c10:	009f3000 	addseq	r3, pc, r0
    9c14:	00000000 	andeq	r0, r0, r0
    9c18:	3c000000 	stccc	0, cr0, [r0], {-0}
    9c1c:	3e10002f 	cdpcc	0, 1, cr0, cr0, cr15, {1}
    9c20:	0210002f 	andseq	r0, r0, #47	; 0x2f
    9c24:	3e007d00 	cdpcc	13, 0, cr7, cr0, cr0, {0}
    9c28:	4010002f 	andsmi	r0, r0, pc, lsr #32
    9c2c:	0210002f 	andseq	r0, r0, #47	; 0x2f
    9c30:	40107d00 	andsmi	r7, r0, r0, lsl #26
    9c34:	7a10002f 	bvc	409cf8 <__RAM_SIZE+0x309cf8>
    9c38:	0210002f 	andseq	r0, r0, #47	; 0x2f
    9c3c:	7a187d00 	bvc	629044 <__RAM_SIZE+0x529044>
    9c40:	7c10002f 	ldcvc	0, cr0, [r0], {47}	; 0x2f
    9c44:	0210002f 	andseq	r0, r0, #47	; 0x2f
    9c48:	7c107d00 	ldcvc	13, cr7, [r0], {-0}
    9c4c:	a410002f 	ldrge	r0, [r0], #-47	; 0xffffffd1
    9c50:	0210002f 	andseq	r0, r0, #47	; 0x2f
    9c54:	00187d00 	andseq	r7, r8, r0, lsl #26
	...
    9c60:	3c000000 	stccc	0, cr0, [r0], {-0}
    9c64:	4710002f 	ldrmi	r0, [r0, -pc, lsr #32]
    9c68:	0110002f 	tsteq	r0, pc, lsr #32
    9c6c:	2f475000 	svccs	0x00475000
    9c70:	2fa41000 	svccs	0x00a41000
    9c74:	00011000 	andeq	r1, r1, r0
    9c78:	00000056 	andeq	r0, r0, r6, asr r0
	...
    9c88:	002f3c00 	eoreq	r3, pc, r0, lsl #24
    9c8c:	002f4710 	eoreq	r4, pc, r0, lsl r7	; <UNPREDICTABLE>
    9c90:	51000110 	tstpl	r0, r0, lsl r1
    9c94:	10002f47 	andne	r2, r0, r7, asr #30
    9c98:	10002f8c 	andne	r2, r0, ip, lsl #31
    9c9c:	8c540001 	mrrchi	0, 0, r0, r4, cr1
    9ca0:	8e10002f 	cdphi	0, 1, cr0, cr0, cr15, {1}
    9ca4:	0410002f 	ldreq	r0, [r0], #-47	; 0xffffffd1
    9ca8:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    9cac:	002f8e9f 	mlaeq	pc, pc, lr, r8	; <UNPREDICTABLE>
    9cb0:	002fa410 	eoreq	sl, pc, r0, lsl r4	; <UNPREDICTABLE>
    9cb4:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
	...
    9ccc:	2f4e0000 	svccs	0x004e0000
    9cd0:	2f6e1000 	svccs	0x006e1000
    9cd4:	00011000 	andeq	r1, r1, r0
    9cd8:	002f6e50 	eoreq	r6, pc, r0, asr lr	; <UNPREDICTABLE>
    9cdc:	002f7810 	eoreq	r7, pc, r0, lsl r8	; <UNPREDICTABLE>
    9ce0:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
    9ce4:	10002f7c 	andne	r2, r0, ip, ror pc
    9ce8:	10002f7f 	andne	r2, r0, pc, ror pc
    9cec:	7f500001 	svcvc	0x00500001
    9cf0:	8a10002f 	bhi	409db4 <__RAM_SIZE+0x309db4>
    9cf4:	0110002f 	tsteq	r0, pc, lsr #32
    9cf8:	2f8a5500 	svccs	0x008a5500
    9cfc:	2f8e1000 	svccs	0x008e1000
    9d00:	00011000 	andeq	r1, r1, r0
    9d04:	002f8e50 	eoreq	r8, pc, r0, asr lr	; <UNPREDICTABLE>
    9d08:	002f9410 	eoreq	r9, pc, r0, lsl r4	; <UNPREDICTABLE>
    9d0c:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
    9d10:	10002f94 	mulne	r0, r4, pc	; <UNPREDICTABLE>
    9d14:	10002f97 	mulne	r0, r7, pc	; <UNPREDICTABLE>
    9d18:	00500001 	subseq	r0, r0, r1
    9d1c:	00000000 	andeq	r0, r0, r0
    9d20:	9c000000 	stcls	0, cr0, [r0], {-0}
    9d24:	9e100030 	mrcls	0, 0, r0, cr0, cr0, {1}
    9d28:	02100030 	andseq	r0, r0, #48	; 0x30
    9d2c:	9e007d00 	cdpls	13, 0, cr7, cr0, cr0, {0}
    9d30:	a0100030 	andsge	r0, r0, r0, lsr r0
    9d34:	02100030 	andseq	r0, r0, #48	; 0x30
    9d38:	a0047d00 	andge	r7, r4, r0, lsl #26
    9d3c:	b2100030 	andslt	r0, r0, #48	; 0x30
    9d40:	02100030 	andseq	r0, r0, #48	; 0x30
    9d44:	00107d00 	andseq	r7, r0, r0, lsl #26
    9d48:	00000000 	andeq	r0, r0, r0
    9d4c:	01000000 	mrseq	r0, (UNDEF: 0)
    9d50:	9c000000 	stcls	0, cr0, [r0], {-0}
    9d54:	a0100030 	andsge	r0, r0, r0, lsr r0
    9d58:	01100030 	tsteq	r0, r0, lsr r0
    9d5c:	30a05000 	adccc	r5, r0, r0
    9d60:	30b21000 	adcscc	r1, r2, r0
    9d64:	00041000 	andeq	r1, r4, r0
    9d68:	9f5001f3 	svcls	0x005001f3
	...
    9d74:	30a60000 	adccc	r0, r6, r0
    9d78:	30ab1000 	adccc	r1, fp, r0
    9d7c:	00011000 	andeq	r1, r1, r0
    9d80:	00000050 	andeq	r0, r0, r0, asr r0
    9d84:	00000000 	andeq	r0, r0, r0
    9d88:	002ea000 	eoreq	sl, lr, r0
    9d8c:	002ea210 	eoreq	sl, lr, r0, lsl r2
    9d90:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    9d94:	002ea200 	eoreq	sl, lr, r0, lsl #4
    9d98:	002ee010 	eoreq	lr, lr, r0, lsl r0
    9d9c:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    9da0:	00000010 	andeq	r0, r0, r0, lsl r0
	...
    9dac:	002ea000 	eoreq	sl, lr, r0
    9db0:	002eb010 	eoreq	fp, lr, r0, lsl r0
    9db4:	50000110 	andpl	r0, r0, r0, lsl r1
    9db8:	10002eb0 			; <UNDEFINED> instruction: 0x10002eb0
    9dbc:	10002ee0 	andne	r2, r0, r0, ror #29
    9dc0:	00550001 	subseq	r0, r5, r1
	...
    9dcc:	a0000000 	andge	r0, r0, r0
    9dd0:	b310002e 	tstlt	r0, #46	; 0x2e
    9dd4:	0110002e 	tsteq	r0, lr, lsr #32
    9dd8:	2eb35100 	frdcss	f5, f3, f0
    9ddc:	2ee01000 	cdpcs	0, 14, cr1, cr0, cr0, {0}
    9de0:	00011000 	andeq	r1, r1, r0
    9de4:	00000056 	andeq	r0, r0, r6, asr r0
    9de8:	00000000 	andeq	r0, r0, r0
    9dec:	ae000000 	cdpge	0, 0, cr0, cr0, cr0, {0}
    9df0:	e010002e 	ands	r0, r0, lr, lsr #32
    9df4:	0110002e 	tsteq	r0, lr, lsr #32
    9df8:	00005400 	andeq	r5, r0, r0, lsl #8
    9dfc:	00000000 	andeq	r0, r0, r0
    9e00:	2e780000 	cdpcs	0, 7, cr0, cr8, cr0, {0}
    9e04:	2e7a1000 	cdpcs	0, 7, cr1, cr10, cr0, {0}
    9e08:	00021000 	andeq	r1, r2, r0
    9e0c:	2e7a007d 	mrccs	0, 3, r0, cr10, cr13, {3}
    9e10:	2ea01000 	cdpcs	0, 10, cr1, cr0, cr0, {0}
    9e14:	00021000 	andeq	r1, r2, r0
    9e18:	0000107d 	andeq	r1, r0, sp, ror r0
	...
    9e24:	2e780000 	cdpcs	0, 7, cr0, cr8, cr0, {0}
    9e28:	2e821000 	cdpcs	0, 8, cr1, cr2, cr0, {0}
    9e2c:	00011000 	andeq	r1, r1, r0
    9e30:	002e8250 	eoreq	r8, lr, r0, asr r2
    9e34:	002ea010 	eoreq	sl, lr, r0, lsl r0
    9e38:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
	...
    9e48:	10002e78 	andne	r2, r0, r8, ror lr
    9e4c:	10002e82 	andne	r2, r0, r2, lsl #29
    9e50:	82510001 	subshi	r0, r1, #1
    9e54:	a010002e 	andsge	r0, r0, lr, lsr #32
    9e58:	0110002e 	tsteq	r0, lr, lsr #32
    9e5c:	00005500 	andeq	r5, r0, r0, lsl #10
	...
    9e68:	2e780000 	cdpcs	0, 7, cr0, cr8, cr0, {0}
    9e6c:	2e821000 	cdpcs	0, 8, cr1, cr2, cr0, {0}
    9e70:	00011000 	andeq	r1, r1, r0
    9e74:	002e8252 	eoreq	r8, lr, r2, asr r2
    9e78:	002ea010 	eoreq	sl, lr, r0, lsl r0
    9e7c:	56000110 			; <UNDEFINED> instruction: 0x56000110
	...
    9e94:	00500001 	subseq	r0, r0, r1
    9e98:	00000000 	andeq	r0, r0, r0
    9e9c:	04000000 	streq	r0, [r0], #-0
    9ea0:	5001f300 	andpl	pc, r1, r0, lsl #6
    9ea4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    9ea8:	00000000 	andeq	r0, r0, r0
    9eac:	00000200 	andeq	r0, r0, r0, lsl #4
	...
    9eb8:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    9ec4:	01f30004 	mvnseq	r0, r4
    9ec8:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    9ee0:	00010000 	andeq	r0, r1, r0
    9ee4:	00000050 	andeq	r0, r0, r0, asr r0
    9ee8:	00000000 	andeq	r0, r0, r0
    9eec:	71000200 	mrsvc	r0, R8_usr
	...
    9ef8:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    9f04:	01f30004 	mvnseq	r0, r4
    9f08:	00009f50 	andeq	r9, r0, r0, asr pc
    9f0c:	00000000 	andeq	r0, r0, r0
    9f10:	00010000 	andeq	r0, r1, r0
	...
    9f1c:	00020000 	andeq	r0, r2, r0
    9f20:	00009f31 	andeq	r9, r0, r1, lsr pc
    9f24:	00000000 	andeq	r0, r0, r0
    9f28:	00020000 	andeq	r0, r2, r0
    9f2c:	00009f30 	andeq	r9, r0, r0, lsr pc
    9f30:	00000000 	andeq	r0, r0, r0
    9f34:	00030000 	andeq	r0, r3, r0
	...
    9f44:	00010000 	andeq	r0, r1, r0
    9f48:	00000050 	andeq	r0, r0, r0, asr r0
    9f4c:	00000000 	andeq	r0, r0, r0
    9f50:	71000200 	mrsvc	r0, R8_usr
	...
    9f5c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    9f68:	01f30004 	mvnseq	r0, r4
    9f6c:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    9f80:	00010000 	andeq	r0, r1, r0
    9f84:	00000050 	andeq	r0, r0, r0, asr r0
    9f88:	00000000 	andeq	r0, r0, r0
    9f8c:	f3000400 	vshl.u8	d0, d0, d0
    9f90:	009f5001 	addseq	r5, pc, r1
    9f94:	00000000 	andeq	r0, r0, r0
    9f98:	02000000 	andeq	r0, r0, #0
	...
    9fa4:	01000000 	mrseq	r0, (UNDEF: 0)
    9fa8:	00005000 	andeq	r5, r0, r0
    9fac:	00000000 	andeq	r0, r0, r0
    9fb0:	00040000 	andeq	r0, r4, r0
    9fb4:	9f5001f3 	svcls	0x005001f3
	...
    9fc0:	00000006 	andeq	r0, r0, r6
	...
    9fcc:	04700002 	ldrbteq	r0, [r0], #-2
	...
    9fd8:	00500001 	subseq	r0, r0, r1
	...
    9fe8:	02000000 	andeq	r0, r0, #0
    9fec:	00007d00 	andeq	r7, r0, r0, lsl #26
    9ff0:	00000000 	andeq	r0, r0, r0
    9ff4:	02000000 	andeq	r0, r0, #0
    9ff8:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    a00c:	01000000 	mrseq	r0, (UNDEF: 0)
    a010:	00005000 	andeq	r5, r0, r0
    a014:	00000000 	andeq	r0, r0, r0
    a018:	00040000 	andeq	r0, r4, r0
    a01c:	9f5001f3 	svcls	0x005001f3
	...
    a030:	00010000 	andeq	r0, r1, r0
    a034:	00000050 	andeq	r0, r0, r0, asr r0
	...
    a044:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    a050:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    a054:	00000008 	andeq	r0, r0, r8
	...
    a06c:	01000000 	mrseq	r0, (UNDEF: 0)
    a070:	00005000 	andeq	r5, r0, r0
    a074:	00000000 	andeq	r0, r0, r0
    a078:	00010000 	andeq	r0, r1, r0
    a07c:	00000054 	andeq	r0, r0, r4, asr r0
    a080:	00000000 	andeq	r0, r0, r0
    a084:	f3000400 	vshl.u8	d0, d0, d0
    a088:	009f5001 	addseq	r5, pc, r1
    a08c:	00000000 	andeq	r0, r0, r0
    a090:	01000000 	mrseq	r0, (UNDEF: 0)
    a094:	00005400 	andeq	r5, r0, r0, lsl #8
    a098:	00000000 	andeq	r0, r0, r0
    a09c:	00040000 	andeq	r0, r4, r0
    a0a0:	9f5001f3 	svcls	0x005001f3
	...
    a0ac:	00000001 	andeq	r0, r0, r1
	...
    a0bc:	00010000 	andeq	r0, r1, r0
    a0c0:	00000050 	andeq	r0, r0, r0, asr r0
    a0c4:	00000000 	andeq	r0, r0, r0
    a0c8:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    a0d4:	01f30004 	mvnseq	r0, r4
    a0d8:	00009f50 	andeq	r9, r0, r0, asr pc
    a0dc:	00000000 	andeq	r0, r0, r0
    a0e0:	00010000 	andeq	r0, r1, r0
    a0e4:	00000054 	andeq	r0, r0, r4, asr r0
    a0e8:	00000000 	andeq	r0, r0, r0
    a0ec:	f3000400 	vshl.u8	d0, d0, d0
    a0f0:	009f5001 	addseq	r5, pc, r1
	...
    a104:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    a118:	007d0002 	rsbseq	r0, sp, r2
	...
    a124:	107d0002 	rsbsne	r0, sp, r2
	...
    a13c:	00500001 	subseq	r0, r0, r1
    a140:	00000000 	andeq	r0, r0, r0
    a144:	01000000 	mrseq	r0, (UNDEF: 0)
    a148:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    a15c:	00010000 	andeq	r0, r1, r0
    a160:	00000051 	andeq	r0, r0, r1, asr r0
    a164:	00000000 	andeq	r0, r0, r0
    a168:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    a174:	00000001 	andeq	r0, r0, r1
	...
    a180:	00500001 	subseq	r0, r0, r1
    a184:	00000000 	andeq	r0, r0, r0
    a188:	01000000 	mrseq	r0, (UNDEF: 0)
    a18c:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    a1a0:	00010000 	andeq	r0, r1, r0
    a1a4:	00000050 	andeq	r0, r0, r0, asr r0
    a1a8:	00000000 	andeq	r0, r0, r0
    a1ac:	f3000400 	vshl.u8	d0, d0, d0
    a1b0:	009f5001 	addseq	r5, pc, r1
    a1b4:	00000000 	andeq	r0, r0, r0
    a1b8:	02000000 	andeq	r0, r0, #0
	...
    a1c4:	01000000 	mrseq	r0, (UNDEF: 0)
    a1c8:	00005000 	andeq	r5, r0, r0
    a1cc:	00000000 	andeq	r0, r0, r0
    a1d0:	00040000 	andeq	r0, r4, r0
    a1d4:	9f5001f3 	svcls	0x005001f3
	...
    a1e8:	007d0002 	rsbseq	r0, sp, r2
	...
    a1f4:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    a200:	187d0002 	ldmdane	sp!, {r1}^
	...
    a20c:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    a218:	187d0002 	ldmdane	sp!, {r1}^
	...
    a224:	03000000 	movweq	r0, #0
    a228:	00000003 	andeq	r0, r0, r3
	...
    a23c:	00500001 	subseq	r0, r0, r1
    a240:	00000000 	andeq	r0, r0, r0
    a244:	02000000 	andeq	r0, r0, #0
    a248:	00709100 	rsbseq	r9, r0, r0, lsl #2
    a24c:	00000000 	andeq	r0, r0, r0
    a250:	04000000 	streq	r0, [r0], #-0
    a254:	5001f300 	andpl	pc, r1, r0, lsl #6
    a258:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    a25c:	00000000 	andeq	r0, r0, r0
    a260:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    a26c:	70910002 	addsvc	r0, r1, r2
	...
    a278:	01f30004 	mvnseq	r0, r4
    a27c:	00009f50 	andeq	r9, r0, r0, asr pc
    a280:	00000000 	andeq	r0, r0, r0
    a284:	00010000 	andeq	r0, r1, r0
    a288:	00000050 	andeq	r0, r0, r0, asr r0
    a28c:	00000000 	andeq	r0, r0, r0
    a290:	f3000400 	vshl.u8	d0, d0, d0
    a294:	009f5001 	addseq	r5, pc, r1
	...
    a2a0:	00000303 	andeq	r0, r0, r3, lsl #6
	...
    a2b0:	01000000 	mrseq	r0, (UNDEF: 0)
    a2b4:	00005100 	andeq	r5, r0, r0, lsl #2
    a2b8:	00000000 	andeq	r0, r0, r0
    a2bc:	00040000 	andeq	r0, r4, r0
    a2c0:	9f5101f3 	svcls	0x005101f3
	...
    a2cc:	00510001 	subseq	r0, r1, r1
    a2d0:	00000000 	andeq	r0, r0, r0
    a2d4:	02000000 	andeq	r0, r0, #0
    a2d8:	00007100 	andeq	r7, r0, r0, lsl #2
    a2dc:	00000000 	andeq	r0, r0, r0
    a2e0:	04000000 	streq	r0, [r0], #-0
    a2e4:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    a2e8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    a2ec:	00000000 	andeq	r0, r0, r0
    a2f0:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    a2fc:	00030300 	andeq	r0, r3, r0, lsl #6
	...
    a310:	00520001 	subseq	r0, r2, r1
    a314:	00000000 	andeq	r0, r0, r0
    a318:	04000000 	streq	r0, [r0], #-0
    a31c:	5201f300 	andpl	pc, r1, #0, 6
    a320:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    a324:	00000000 	andeq	r0, r0, r0
    a328:	52000100 	andpl	r0, r0, #0, 2
	...
    a334:	6c910002 	ldcvs	0, cr0, [r1], {2}
	...
    a340:	01f30004 	mvnseq	r0, r4
    a344:	00009f52 	andeq	r9, r0, r2, asr pc
    a348:	00000000 	andeq	r0, r0, r0
    a34c:	00010000 	andeq	r0, r1, r0
    a350:	00000052 	andeq	r0, r0, r2, asr r0
	...
    a35c:	00000303 	andeq	r0, r0, r3, lsl #6
	...
    a36c:	53000100 	movwpl	r0, #256	; 0x100
	...
    a378:	005c0001 	subseq	r0, ip, r1
    a37c:	00000000 	andeq	r0, r0, r0
    a380:	04000000 	streq	r0, [r0], #-0
    a384:	5301f300 	movwpl	pc, #4864	; 0x1300	; <UNPREDICTABLE>
    a388:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    a38c:	00000000 	andeq	r0, r0, r0
    a390:	5c000100 	stfpls	f0, [r0], {-0}
	...
    a39c:	01f30004 	mvnseq	r0, r4
    a3a0:	00009f53 	andeq	r9, r0, r3, asr pc
    a3a4:	00000000 	andeq	r0, r0, r0
    a3a8:	00010000 	andeq	r0, r1, r0
    a3ac:	0000005c 	andeq	r0, r0, ip, asr r0
	...
    a3c0:	91000200 	mrsls	r0, R8_usr
	...
    a3cc:	91000200 	mrsls	r0, R8_usr
	...
    a3d8:	00030100 	andeq	r0, r3, r0, lsl #2
	...
    a3e8:	30000200 	andcc	r0, r0, r0, lsl #4
    a3ec:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    a3f0:	00000000 	andeq	r0, r0, r0
    a3f4:	30000200 	andcc	r0, r0, r0, lsl #4
    a3f8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    a3fc:	00000000 	andeq	r0, r0, r0
    a400:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    a40c:	9f300002 	svcls	0x00300002
	...
    a420:	007d0002 	rsbseq	r0, sp, r2
	...
    a42c:	047d0002 	ldrbteq	r0, [sp], #-2
	...
    a438:	187d0002 	ldmdane	sp!, {r1}^
	...
    a444:	047d0002 	ldrbteq	r0, [sp], #-2
	...
    a450:	187d0002 	ldmdane	sp!, {r1}^
	...
    a45c:	007d0002 	rsbseq	r0, sp, r2
	...
    a468:	03000000 	movweq	r0, #0
    a46c:	00000003 	andeq	r0, r0, r3
	...
    a47c:	00010000 	andeq	r0, r1, r0
    a480:	00000050 	andeq	r0, r0, r0, asr r0
    a484:	00000000 	andeq	r0, r0, r0
    a488:	91000200 	mrsls	r0, R8_usr
    a48c:	00000070 	andeq	r0, r0, r0, ror r0
    a490:	00000000 	andeq	r0, r0, r0
    a494:	f3000400 	vshl.u8	d0, d0, d0
    a498:	009f5001 	addseq	r5, pc, r1
    a49c:	00000000 	andeq	r0, r0, r0
    a4a0:	01000000 	mrseq	r0, (UNDEF: 0)
    a4a4:	00005000 	andeq	r5, r0, r0
    a4a8:	00000000 	andeq	r0, r0, r0
    a4ac:	00040000 	andeq	r0, r4, r0
    a4b0:	9f5001f3 	svcls	0x005001f3
	...
    a4bc:	00500001 	subseq	r0, r0, r1
    a4c0:	00000000 	andeq	r0, r0, r0
    a4c4:	04000000 	streq	r0, [r0], #-0
    a4c8:	5001f300 	andpl	pc, r1, r0, lsl #6
    a4cc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    a4d0:	00000000 	andeq	r0, r0, r0
    a4d4:	03030000 	movweq	r0, #12288	; 0x3000
	...
    a4e4:	01000000 	mrseq	r0, (UNDEF: 0)
    a4e8:	00005100 	andeq	r5, r0, r0, lsl #2
    a4ec:	00000000 	andeq	r0, r0, r0
    a4f0:	00040000 	andeq	r0, r4, r0
    a4f4:	9f5101f3 	svcls	0x005101f3
	...
    a500:	00510001 	subseq	r0, r1, r1
    a504:	00000000 	andeq	r0, r0, r0
    a508:	04000000 	streq	r0, [r0], #-0
    a50c:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    a510:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    a514:	00000000 	andeq	r0, r0, r0
    a518:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    a524:	00030300 	andeq	r0, r3, r0, lsl #6
	...
    a534:	00010000 	andeq	r0, r1, r0
    a538:	00000052 	andeq	r0, r0, r2, asr r0
    a53c:	00000000 	andeq	r0, r0, r0
    a540:	f3000400 	vshl.u8	d0, d0, d0
    a544:	009f5201 	addseq	r5, pc, r1, lsl #4
    a548:	00000000 	andeq	r0, r0, r0
    a54c:	01000000 	mrseq	r0, (UNDEF: 0)
    a550:	00005200 	andeq	r5, r0, r0, lsl #4
    a554:	00000000 	andeq	r0, r0, r0
    a558:	00040000 	andeq	r0, r4, r0
    a55c:	9f5201f3 	svcls	0x005201f3
	...
    a568:	00520001 	subseq	r0, r2, r1
	...
    a57c:	01000000 	mrseq	r0, (UNDEF: 0)
    a580:	00005300 	andeq	r5, r0, r0, lsl #6
    a584:	00000000 	andeq	r0, r0, r0
    a588:	00040000 	andeq	r0, r4, r0
    a58c:	9f5301f3 	svcls	0x005301f3
	...
    a5a4:	00910002 	addseq	r0, r1, r2
	...
    a5b0:	00910002 	addseq	r0, r1, r2
	...
    a5bc:	00000302 	andeq	r0, r0, r2, lsl #6
	...
    a5d0:	9f300002 	svcls	0x00300002
	...
    a5dc:	9f300002 	svcls	0x00300002
	...
    a5e8:	00500001 	subseq	r0, r0, r1
    a5ec:	00000000 	andeq	r0, r0, r0
    a5f0:	02000000 	andeq	r0, r0, #0
    a5f4:	009f3000 	addseq	r3, pc, r0
    a5f8:	00000000 	andeq	r0, r0, r0
    a5fc:	01000000 	mrseq	r0, (UNDEF: 0)
    a600:	00005000 	andeq	r5, r0, r0
    a604:	00000000 	andeq	r0, r0, r0
    a608:	00020000 	andeq	r0, r2, r0
    a60c:	00009f30 	andeq	r9, r0, r0, lsr pc
	...
    a61c:	00020000 	andeq	r0, r2, r0
    a620:	0000007d 	andeq	r0, r0, sp, ror r0
    a624:	00000000 	andeq	r0, r0, r0
    a628:	00020000 	andeq	r0, r2, r0
    a62c:	0000187d 	andeq	r1, r0, sp, ror r8
	...
    a640:	00010000 	andeq	r0, r1, r0
    a644:	00000050 	andeq	r0, r0, r0, asr r0
    a648:	00000000 	andeq	r0, r0, r0
    a64c:	58000100 	stmdapl	r0, {r8}
	...
    a664:	00510001 	subseq	r0, r1, r1
    a668:	00000000 	andeq	r0, r0, r0
    a66c:	01000000 	mrseq	r0, (UNDEF: 0)
    a670:	00005700 	andeq	r5, r0, r0, lsl #14
	...
    a684:	00010000 	andeq	r0, r1, r0
    a688:	00000052 	andeq	r0, r0, r2, asr r0
    a68c:	00000000 	andeq	r0, r0, r0
    a690:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    a6a8:	00530001 	subseq	r0, r3, r1
    a6ac:	00000000 	andeq	r0, r0, r0
    a6b0:	01000000 	mrseq	r0, (UNDEF: 0)
    a6b4:	00005600 	andeq	r5, r0, r0, lsl #12
	...
    a6c4:	00020000 	andeq	r0, r2, r0
    a6c8:	0000007d 	andeq	r0, r0, sp, ror r0
    a6cc:	00000000 	andeq	r0, r0, r0
    a6d0:	00020000 	andeq	r0, r2, r0
    a6d4:	00000c7d 	andeq	r0, r0, sp, ror ip
    a6d8:	00000000 	andeq	r0, r0, r0
    a6dc:	00020000 	andeq	r0, r2, r0
    a6e0:	0000187d 	andeq	r1, r0, sp, ror r8
    a6e4:	00000000 	andeq	r0, r0, r0
    a6e8:	00020000 	andeq	r0, r2, r0
    a6ec:	00000c7d 	andeq	r0, r0, sp, ror ip
	...
    a700:	00010000 	andeq	r0, r1, r0
    a704:	00000050 	andeq	r0, r0, r0, asr r0
    a708:	00000000 	andeq	r0, r0, r0
    a70c:	f3000400 	vshl.u8	d0, d0, d0
    a710:	009f5001 	addseq	r5, pc, r1
	...
    a724:	01000000 	mrseq	r0, (UNDEF: 0)
    a728:	00005100 	andeq	r5, r0, r0, lsl #2
    a72c:	00000000 	andeq	r0, r0, r0
    a730:	00040000 	andeq	r0, r4, r0
    a734:	9f5101f3 	svcls	0x005101f3
	...
    a74c:	00520001 	subseq	r0, r2, r1
    a750:	00000000 	andeq	r0, r0, r0
    a754:	04000000 	streq	r0, [r0], #-0
    a758:	5201f300 	andpl	pc, r1, #0, 6
    a75c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    a770:	53000100 	movwpl	r0, #256	; 0x100
	...
    a77c:	01f30004 	mvnseq	r0, r4
    a780:	00009f53 	andeq	r9, r0, r3, asr pc
    a784:	00000000 	andeq	r0, r0, r0
    a788:	00040000 	andeq	r0, r4, r0
	...
    a794:	00540001 	subseq	r0, r4, r1
	...
    a7a4:	02000000 	andeq	r0, r0, #0
    a7a8:	00007d00 	andeq	r7, r0, r0, lsl #26
    a7ac:	00000000 	andeq	r0, r0, r0
    a7b0:	02000000 	andeq	r0, r0, #0
    a7b4:	00187d00 	andseq	r7, r8, r0, lsl #26
    a7b8:	00000000 	andeq	r0, r0, r0
    a7bc:	02000000 	andeq	r0, r0, #0
    a7c0:	00207d00 	eoreq	r7, r0, r0, lsl #26
    a7c4:	00000000 	andeq	r0, r0, r0
    a7c8:	02000000 	andeq	r0, r0, #0
    a7cc:	00187d00 	andseq	r7, r8, r0, lsl #26
	...
    a7e0:	01000000 	mrseq	r0, (UNDEF: 0)
    a7e4:	00005000 	andeq	r5, r0, r0
    a7e8:	00000000 	andeq	r0, r0, r0
    a7ec:	00010000 	andeq	r0, r1, r0
    a7f0:	00000054 	andeq	r0, r0, r4, asr r0
	...
    a804:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    a810:	00580001 	subseq	r0, r8, r1
	...
    a824:	01000000 	mrseq	r0, (UNDEF: 0)
    a828:	00005200 	andeq	r5, r0, r0, lsl #4
    a82c:	00000000 	andeq	r0, r0, r0
    a830:	00010000 	andeq	r0, r1, r0
    a834:	00000057 	andeq	r0, r0, r7, asr r0
	...
    a848:	53000100 	movwpl	r0, #256	; 0x100
	...
    a854:	00550001 	subseq	r0, r5, r1
	...
    a868:	01000000 	mrseq	r0, (UNDEF: 0)
    a86c:	00005000 	andeq	r5, r0, r0
    a870:	00000000 	andeq	r0, r0, r0
    a874:	00010000 	andeq	r0, r1, r0
    a878:	00000056 	andeq	r0, r0, r6, asr r0
    a87c:	00000000 	andeq	r0, r0, r0
    a880:	00311400 	eorseq	r1, r1, r0, lsl #8
    a884:	00311610 	eorseq	r1, r1, r0, lsl r6
    a888:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    a88c:	00311600 	eorseq	r1, r1, r0, lsl #12
    a890:	00311810 	eorseq	r1, r1, r0, lsl r8
    a894:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    a898:	00311808 	eorseq	r1, r1, r8, lsl #16
    a89c:	00315c10 	eorseq	r5, r1, r0, lsl ip
    a8a0:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    a8a4:	00315c28 	eorseq	r5, r1, r8, lsr #24
    a8a8:	00317010 	eorseq	r7, r1, r0, lsl r0
    a8ac:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    a8b0:	00000008 	andeq	r0, r0, r8
    a8b4:	00000000 	andeq	r0, r0, r0
    a8b8:	00000100 	andeq	r0, r0, r0, lsl #2
    a8bc:	18040000 	stmdane	r4, {}	; <UNPREDICTABLE>
    a8c0:	52100031 	andspl	r0, r0, #49	; 0x31
    a8c4:	02100031 	andseq	r0, r0, #49	; 0x31
    a8c8:	529f3000 	addspl	r3, pc, #0
    a8cc:	54100031 	ldrpl	r0, [r0], #-49	; 0xffffffcf
    a8d0:	02100031 	andseq	r0, r0, #49	; 0x31
    a8d4:	549f3100 	ldrpl	r3, [pc], #256	; a8dc <__HEAP_SIZE+0x98dc>
    a8d8:	5a100031 	bpl	40a9a4 <__RAM_SIZE+0x30a9a4>
    a8dc:	02100031 	andseq	r0, r0, #49	; 0x31
    a8e0:	009f3000 	addseq	r3, pc, r0
	...
    a8f0:	02000000 	andeq	r0, r0, #0
    a8f4:	00007d00 	andeq	r7, r0, r0, lsl #26
    a8f8:	00000000 	andeq	r0, r0, r0
    a8fc:	02000000 	andeq	r0, r0, #0
    a900:	00187d00 	andseq	r7, r8, r0, lsl #26
	...
    a914:	01000000 	mrseq	r0, (UNDEF: 0)
    a918:	00005000 	andeq	r5, r0, r0
    a91c:	00000000 	andeq	r0, r0, r0
    a920:	00010000 	andeq	r0, r1, r0
    a924:	00000057 	andeq	r0, r0, r7, asr r0
	...
    a938:	53000100 	movwpl	r0, #256	; 0x100
	...
    a944:	00530001 	subseq	r0, r3, r1
    a948:	00000000 	andeq	r0, r0, r0
    a94c:	02000000 	andeq	r0, r0, #0
	...
    a958:	02000000 	andeq	r0, r0, #0
    a95c:	009f3000 	addseq	r3, pc, r0
    a960:	00000000 	andeq	r0, r0, r0
    a964:	01000000 	mrseq	r0, (UNDEF: 0)
    a968:	00005400 	andeq	r5, r0, r0, lsl #8
    a96c:	00000000 	andeq	r0, r0, r0
    a970:	00020000 	andeq	r0, r2, r0
	...
    a97c:	00020000 	andeq	r0, r2, r0
    a980:	00009f30 	andeq	r9, r0, r0, lsr pc
    a984:	00000000 	andeq	r0, r0, r0
    a988:	00010000 	andeq	r0, r1, r0
    a98c:	00000055 	andeq	r0, r0, r5, asr r0
    a990:	00000000 	andeq	r0, r0, r0
    a994:	00000200 	andeq	r0, r0, r0, lsl #4
	...
    a9a0:	09000300 	stmdbeq	r0, {r8, r9}
    a9a4:	00009fff 	strdeq	r9, [r0], -pc	; <UNPREDICTABLE>
    a9a8:	00000000 	andeq	r0, r0, r0
    a9ac:	00010000 	andeq	r0, r1, r0
    a9b0:	00000056 	andeq	r0, r0, r6, asr r0
    a9b4:	00000000 	andeq	r0, r0, r0
    a9b8:	0031c800 	eorseq	ip, r1, r0, lsl #16
    a9bc:	0031fc10 	eorseq	pc, r1, r0, lsl ip	; <UNPREDICTABLE>
    a9c0:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    a9c4:	0031fc00 	eorseq	pc, r1, r0, lsl #24
    a9c8:	00321a10 	eorseq	r1, r2, r0, lsl sl
    a9cc:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    a9d0:	00321a04 	eorseq	r1, r2, r4, lsl #20
    a9d4:	00321c10 	eorseq	r1, r2, r0, lsl ip
    a9d8:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    a9dc:	00321c00 	eorseq	r1, r2, r0, lsl #24
    a9e0:	00322010 	eorseq	r2, r2, r0, lsl r0
    a9e4:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    a9e8:	00322004 	eorseq	r2, r2, r4
    a9ec:	00322c10 	eorseq	r2, r2, r0, lsl ip
    a9f0:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
	...
    aa00:	00000101 	andeq	r0, r0, r1, lsl #2
    aa04:	0031c800 	eorseq	ip, r1, r0, lsl #16
    aa08:	0031f210 	eorseq	pc, r1, r0, lsl r2	; <UNPREDICTABLE>
    aa0c:	50000110 	andpl	r0, r0, r0, lsl r1
    aa10:	100031f2 	strdne	r3, [r0], -r2
    aa14:	100031f6 	strdne	r3, [r0], -r6
    aa18:	01f30004 	mvnseq	r0, r4
    aa1c:	31f69f50 	mvnscc	r9, r0, asr pc
    aa20:	31fa1000 	mvnscc	r1, r0
    aa24:	00011000 	andeq	r1, r1, r0
    aa28:	0031fa52 	eorseq	pc, r1, r2, asr sl	; <UNPREDICTABLE>
    aa2c:	00322c10 	eorseq	r2, r2, r0, lsl ip
    aa30:	50000110 	andpl	r0, r0, r0, lsl r1
	...
    aa3c:	00000004 	andeq	r0, r0, r4
    aa40:	31c80000 	biccc	r0, r8, r0
    aa44:	31ca1000 	biccc	r1, sl, r0
    aa48:	00061000 	andeq	r1, r6, r0
    aa4c:	008cf803 	addeq	pc, ip, r3, lsl #16
    aa50:	31ca9f38 	biccc	r9, sl, r8, lsr pc
    aa54:	31ce1000 	biccc	r1, lr, r0
    aa58:	00011000 	andeq	r1, r1, r0
    aa5c:	0031ce53 	eorseq	ip, r1, r3, asr lr
    aa60:	00322c10 	eorseq	r2, r2, r0, lsl ip
    aa64:	52000110 	andpl	r0, r0, #16, 2
	...
    aa70:	00020203 	andeq	r0, r2, r3, lsl #4
    aa74:	00000000 	andeq	r0, r0, r0
    aa78:	100031d2 	ldrdne	r3, [r0], -r2
    aa7c:	100031dc 	ldrdne	r3, [r0], -ip
    aa80:	dc520001 	mrrcle	0, 0, r0, r2, cr1
    aa84:	f0100031 			; <UNDEFINED> instruction: 0xf0100031
    aa88:	01100031 	tsteq	r0, r1, lsr r0
    aa8c:	31f05000 	mvnscc	r5, r0
    aa90:	31fa1000 	mvnscc	r1, r0
    aa94:	00011000 	andeq	r1, r1, r0
    aa98:	0031fa52 	eorseq	pc, r1, r2, asr sl	; <UNPREDICTABLE>
    aa9c:	00322c10 	eorseq	r2, r2, r0, lsl ip
    aaa0:	50000110 	andpl	r0, r0, r0, lsl r1
	...
    aaac:	319e0001 	orrscc	r0, lr, r1
    aab0:	31ae1000 			; <UNDEFINED> instruction: 0x31ae1000
    aab4:	00011000 	andeq	r1, r1, r0
    aab8:	00000052 	andeq	r0, r0, r2, asr r0
	...
    aac4:	00317a00 	eorseq	r7, r1, r0, lsl #20
    aac8:	00318610 	eorseq	r8, r1, r0, lsl r6
    aacc:	51000110 	tstpl	r0, r0, lsl r1
    aad0:	10003186 	andne	r3, r0, r6, lsl #3
    aad4:	100031ae 	andne	r3, r0, lr, lsr #3
    aad8:	00520001 	subseq	r0, r2, r1
	...
    aae4:	90000000 	andls	r0, r0, r0
    aae8:	a6100031 			; <UNDEFINED> instruction: 0xa6100031
    aaec:	01100031 	tsteq	r0, r1, lsr r0
    aaf0:	31a65300 			; <UNDEFINED> instruction: 0x31a65300
    aaf4:	31ae1000 			; <UNDEFINED> instruction: 0x31ae1000
    aaf8:	00021000 	andeq	r1, r2, r0
    aafc:	00000072 	andeq	r0, r0, r2, ror r0
    ab00:	00000000 	andeq	r0, r0, r0
    ab04:	00040000 	andeq	r0, r4, r0
    ab08:	00000000 	andeq	r0, r0, r0
    ab0c:	10003170 	andne	r3, r0, r0, ror r1
    ab10:	10003184 	andne	r3, r0, r4, lsl #3
    ab14:	000a0004 	andeq	r0, sl, r4
    ab18:	31849f80 	orrcc	r9, r4, r0, lsl #31
    ab1c:	31901000 	orrscc	r1, r0, r0
    ab20:	00011000 	andeq	r1, r1, r0
    ab24:	0031ae53 	eorseq	sl, r1, r3, asr lr
    ab28:	0031c810 	eorseq	ip, r1, r0, lsl r8
    ab2c:	0a000410 	beq	bb74 <__HEAP_SIZE+0xab74>
    ab30:	009f8000 	addseq	r8, pc, r0
	...
    ab40:	02000000 	andeq	r0, r0, #0
    ab44:	00007d00 	andeq	r7, r0, r0, lsl #26
    ab48:	00000000 	andeq	r0, r0, r0
    ab4c:	02000000 	andeq	r0, r0, #0
    ab50:	00107d00 	andseq	r7, r0, r0, lsl #26
	...
    ab68:	01000000 	mrseq	r0, (UNDEF: 0)
    ab6c:	00005000 	andeq	r5, r0, r0
    ab70:	00000000 	andeq	r0, r0, r0
    ab74:	00010000 	andeq	r0, r1, r0
    ab78:	00000053 	andeq	r0, r0, r3, asr r0
    ab7c:	00000000 	andeq	r0, r0, r0
    ab80:	f3000400 	vshl.u8	d0, d0, d0
    ab84:	009f5001 	addseq	r5, pc, r1
    ab88:	00000000 	andeq	r0, r0, r0
    ab8c:	01000000 	mrseq	r0, (UNDEF: 0)
    ab90:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    aba8:	00510001 	subseq	r0, r1, r1
    abac:	00000000 	andeq	r0, r0, r0
    abb0:	04000000 	streq	r0, [r0], #-0
    abb4:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    abb8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    abbc:	00000000 	andeq	r0, r0, r0
    abc0:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    abcc:	00000001 	andeq	r0, r0, r1
	...
    abdc:	9f300002 	svcls	0x00300002
	...
    abe8:	00500001 	subseq	r0, r0, r1
    abec:	00000000 	andeq	r0, r0, r0
    abf0:	01000000 	mrseq	r0, (UNDEF: 0)
    abf4:	00005500 	andeq	r5, r0, r0, lsl #10
    abf8:	00000000 	andeq	r0, r0, r0
    abfc:	00020000 	andeq	r0, r2, r0
    ac00:	00009f30 	andeq	r9, r0, r0, lsr pc
    ac04:	00000000 	andeq	r0, r0, r0
    ac08:	33000000 	movwcc	r0, #0
    ac0c:	33041000 	movwcc	r1, #16384	; 0x4000
    ac10:	00021000 	andeq	r1, r2, r0
    ac14:	3304007d 	movwcc	r0, #16509	; 0x407d
    ac18:	33461000 	movtcc	r1, #24576	; 0x6000
    ac1c:	00021000 	andeq	r1, r2, r0
    ac20:	3346107d 	movtcc	r1, #24701	; 0x607d
    ac24:	33501000 	cmpcc	r0, #0
    ac28:	00021000 	andeq	r1, r2, r0
    ac2c:	0000007d 	andeq	r0, r0, sp, ror r0
	...
    ac40:	10003300 	andne	r3, r0, r0, lsl #6
    ac44:	10003318 	andne	r3, r0, r8, lsl r3
    ac48:	18500001 	ldmdane	r0, {r0}^
    ac4c:	1a100033 	bne	40ad20 <__RAM_SIZE+0x30ad20>
    ac50:	01100033 	tsteq	r0, r3, lsr r0
    ac54:	331a5400 	tstcc	sl, #0, 8
    ac58:	33251000 			; <UNDEFINED> instruction: 0x33251000
    ac5c:	00011000 	andeq	r1, r1, r0
    ac60:	00332550 	eorseq	r2, r3, r0, asr r5
    ac64:	00334610 	eorseq	r4, r3, r0, lsl r6
    ac68:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    ac6c:	10003346 	andne	r3, r0, r6, asr #6
    ac70:	10003350 	andne	r3, r0, r0, asr r3
    ac74:	00500001 	subseq	r0, r0, r1
    ac78:	00000000 	andeq	r0, r0, r0
    ac7c:	02000000 	andeq	r0, r0, #0
    ac80:	00000000 	andeq	r0, r0, r0
    ac84:	00330000 	eorseq	r0, r3, r0
    ac88:	00330a10 	eorseq	r0, r3, r0, lsl sl
    ac8c:	50000110 	andpl	r0, r0, r0, lsl r1
    ac90:	1000330a 	andne	r3, r0, sl, lsl #6
    ac94:	10003346 	andne	r3, r0, r6, asr #6
    ac98:	46550001 	ldrbmi	r0, [r5], -r1
    ac9c:	50100033 	andspl	r0, r0, r3, lsr r0
    aca0:	01100033 	tsteq	r0, r3, lsr r0
    aca4:	00005000 	andeq	r5, r0, r0
    aca8:	00000000 	andeq	r0, r0, r0
    acac:	00010000 	andeq	r0, r1, r0
    acb0:	1000330a 	andne	r3, r0, sl, lsl #6
    acb4:	10003346 	andne	r3, r0, r6, asr #6
    acb8:	00550001 	subseq	r0, r5, r1
    acbc:	00000000 	andeq	r0, r0, r0
    acc0:	2c000000 	stccs	0, cr0, [r0], {-0}
    acc4:	2e100032 	mrccs	0, 0, r0, cr0, cr2, {1}
    acc8:	02100032 	andseq	r0, r0, #50	; 0x32
    accc:	2e007d00 	cdpcs	13, 0, cr7, cr0, cr0, {0}
    acd0:	00100032 	andseq	r0, r0, r2, lsr r0
    acd4:	02100033 	andseq	r0, r0, #51	; 0x33
    acd8:	00107d00 	andseq	r7, r0, r0, lsl #26
	...
    acec:	2c000000 	stccs	0, cr0, [r0], {-0}
    acf0:	3a100032 	bcc	40adc0 <__RAM_SIZE+0x30adc0>
    acf4:	01100032 	tsteq	r0, r2, lsr r0
    acf8:	323a5000 	eorscc	r5, sl, #0
    acfc:	324e1000 	subcc	r1, lr, #0
    ad00:	00011000 	andeq	r1, r1, r0
    ad04:	00324e54 	eorseq	r4, r2, r4, asr lr
    ad08:	00325010 	eorseq	r5, r2, r0, lsl r0
    ad0c:	50000110 	andpl	r0, r0, r0, lsl r1
    ad10:	10003250 	andne	r3, r0, r0, asr r2
    ad14:	10003272 	andne	r3, r0, r2, ror r2
    ad18:	72540001 	subsvc	r0, r4, #1
    ad1c:	74100032 	ldrvc	r0, [r0], #-50	; 0xffffffce
    ad20:	03100032 	tsteq	r0, #50	; 0x32
    ad24:	9f087000 	svcls	0x00087000
    ad28:	10003274 	andne	r3, r0, r4, ror r2
    ad2c:	10003300 	andne	r3, r0, r0, lsl #6
    ad30:	00540001 	subseq	r0, r4, r1
	...
    ad40:	00326e00 	eorseq	r6, r2, r0, lsl #28
    ad44:	00327010 	eorseq	r7, r2, r0, lsl r0
    ad48:	53000110 	movwpl	r0, #272	; 0x110
    ad4c:	1000327a 	andne	r3, r0, sl, ror r2
    ad50:	100032d0 	ldrdne	r3, [r0], -r0
    ad54:	e8530001 	ldmda	r3, {r0}^
    ad58:	00100032 	andseq	r0, r0, r2, lsr r0
    ad5c:	01100033 	tsteq	r0, r3, lsr r0
    ad60:	00005300 	andeq	r5, r0, r0, lsl #6
    ad64:	00000000 	andeq	r0, r0, r0
    ad68:	00010000 	andeq	r0, r1, r0
    ad6c:	00000000 	andeq	r0, r0, r0
    ad70:	326a0000 	rsbcc	r0, sl, #0
    ad74:	32701000 	rsbscc	r1, r0, #0
    ad78:	00061000 	andeq	r1, r6, r0
    ad7c:	008cf803 	addeq	pc, ip, r3, lsl #16
    ad80:	327a9f38 	rsbscc	r9, sl, #56, 30	; 0xe0
    ad84:	327c1000 	rsbscc	r1, ip, #0
    ad88:	00011000 	andeq	r1, r1, r0
    ad8c:	00327e51 	eorseq	r7, r2, r1, asr lr
    ad90:	0032b010 	eorseq	fp, r2, r0, lsl r0
    ad94:	51000110 	tstpl	r0, r0, lsl r1
    ad98:	100032e8 	andne	r3, r0, r8, ror #5
    ad9c:	10003300 	andne	r3, r0, r0, lsl #6
    ada0:	00510001 	subseq	r0, r1, r1
	...
    adac:	0032a400 	eorseq	sl, r2, r0, lsl #8
    adb0:	0032ae10 	eorseq	sl, r2, r0, lsl lr
    adb4:	52000110 	andpl	r0, r0, #16, 2
	...
    adc0:	00000004 	andeq	r0, r0, r4
    adc4:	322e0000 	eorcc	r0, lr, #0
    adc8:	32961000 	addscc	r1, r6, #0
    adcc:	00021000 	andeq	r1, r2, r0
    add0:	32969f30 	addscc	r9, r6, #48, 30	; 0xc0
    add4:	32dc1000 	sbcscc	r1, ip, #0
    add8:	00011000 	andeq	r1, r1, r0
    addc:	0032dc55 	eorseq	sp, r2, r5, asr ip
    ade0:	00330010 	eorseq	r0, r3, r0, lsl r0
    ade4:	30000210 	andcc	r0, r0, r0, lsl r2
    ade8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    adf4:	00324400 	eorseq	r4, r2, r0, lsl #8
    adf8:	00324e10 	eorseq	r4, r2, r0, lsl lr
    adfc:	53000110 	movwpl	r0, #272	; 0x110
    ae00:	10003270 	andne	r3, r0, r0, ror r2
    ae04:	10003274 	andne	r3, r0, r4, ror r2
    ae08:	00530001 	subseq	r0, r3, r1
	...
    ae1c:	53000100 	movwpl	r0, #256	; 0x100
	...
    ae28:	100035d0 	ldrdne	r3, [r0], -r0
    ae2c:	100035d2 	ldrdne	r3, [r0], -r2
    ae30:	007d0002 	rsbseq	r0, sp, r2
    ae34:	100035d2 	ldrdne	r3, [r0], -r2
    ae38:	10003610 	andne	r3, r0, r0, lsl r6
    ae3c:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    ae48:	10003540 	andne	r3, r0, r0, asr #10
    ae4c:	10003542 	andne	r3, r0, r2, asr #10
    ae50:	007d0002 	rsbseq	r0, sp, r2
    ae54:	10003542 	andne	r3, r0, r2, asr #10
    ae58:	100035ca 	andne	r3, r0, sl, asr #11
    ae5c:	047d0002 	ldrbteq	r0, [sp], #-2
    ae60:	100035ca 	andne	r3, r0, sl, asr #11
    ae64:	100035d0 	ldrdne	r3, [r0], -r0
    ae68:	007d0002 	rsbseq	r0, sp, r2
	...
    ae74:	01010100 	mrseq	r0, (UNDEF: 17)
    ae78:	01010101 	tsteq	r1, r1, lsl #2
    ae7c:	01010101 	tsteq	r1, r1, lsl #2
    ae80:	01010101 	tsteq	r1, r1, lsl #2
    ae84:	01010101 	tsteq	r1, r1, lsl #2
    ae88:	01010101 	tsteq	r1, r1, lsl #2
    ae8c:	01010101 	tsteq	r1, r1, lsl #2
    ae90:	01010101 	tsteq	r1, r1, lsl #2
    ae94:	01010101 	tsteq	r1, r1, lsl #2
    ae98:	00000001 	andeq	r0, r0, r1
    ae9c:	10003540 	andne	r3, r0, r0, asr #10
    aea0:	10003542 	andne	r3, r0, r2, asr #10
    aea4:	42500001 	subsmi	r0, r0, #1
    aea8:	4a100035 	bmi	40af84 <__RAM_SIZE+0x30af84>
    aeac:	03100035 	tsteq	r0, #53	; 0x35
    aeb0:	9f7c7000 	svcls	0x007c7000
    aeb4:	1000354a 	andne	r3, r0, sl, asr #10
    aeb8:	1000354e 	andne	r3, r0, lr, asr #10
    aebc:	78700003 	ldmdavc	r0!, {r0, r1}^
    aec0:	00354e9f 	mlaseq	r5, pc, lr, r4	; <UNPREDICTABLE>
    aec4:	00355410 	eorseq	r5, r5, r0, lsl r4
    aec8:	70000310 	andvc	r0, r0, r0, lsl r3
    aecc:	35549f74 	ldrbcc	r9, [r4, #-3956]	; 0xfffff08c
    aed0:	355c1000 	ldrbcc	r1, [ip, #-0]
    aed4:	00031000 	andeq	r1, r3, r0
    aed8:	5c9f7070 	ldcpl	0, cr7, [pc], {112}	; 0x70
    aedc:	64100035 	ldrvs	r0, [r0], #-53	; 0xffffffcb
    aee0:	03100035 	tsteq	r0, #53	; 0x35
    aee4:	9f6c7000 	svcls	0x006c7000
    aee8:	10003564 	andne	r3, r0, r4, ror #10
    aeec:	1000356c 	andne	r3, r0, ip, ror #10
    aef0:	68700003 	ldmdavs	r0!, {r0, r1}^
    aef4:	00356c9f 	mlaseq	r5, pc, ip, r6	; <UNPREDICTABLE>
    aef8:	00357410 	eorseq	r7, r5, r0, lsl r4
    aefc:	70000310 	andvc	r0, r0, r0, lsl r3
    af00:	35749f64 	ldrbcc	r9, [r4, #-3940]!	; 0xfffff09c
    af04:	35781000 	ldrbcc	r1, [r8, #-0]!
    af08:	00031000 	andeq	r1, r3, r0
    af0c:	789f6070 	ldmvc	pc, {r4, r5, r6, sp, lr}	; <UNPREDICTABLE>
    af10:	80100035 	andshi	r0, r0, r5, lsr r0
    af14:	03100035 	tsteq	r0, #53	; 0x35
    af18:	9f5c7000 	svcls	0x005c7000
    af1c:	10003580 	andne	r3, r0, r0, lsl #11
    af20:	10003588 	andne	r3, r0, r8, lsl #11
    af24:	58700003 	ldmdapl	r0!, {r0, r1}^
    af28:	0035889f 	mlaseq	r5, pc, r8, r8	; <UNPREDICTABLE>
    af2c:	00359010 	eorseq	r9, r5, r0, lsl r0
    af30:	70000310 	andvc	r0, r0, r0, lsl r3
    af34:	35909f54 	ldrcc	r9, [r0, #3924]	; 0xf54
    af38:	35981000 	ldrcc	r1, [r8]
    af3c:	00031000 	andeq	r1, r3, r0
    af40:	989f5070 	ldmls	pc, {r4, r5, r6, ip, lr}	; <UNPREDICTABLE>
    af44:	a0100035 	andsge	r0, r0, r5, lsr r0
    af48:	03100035 	tsteq	r0, #53	; 0x35
    af4c:	9f4c7000 	svcls	0x004c7000
    af50:	100035a0 	andne	r3, r0, r0, lsr #11
    af54:	100035a8 	andne	r3, r0, r8, lsr #11
    af58:	48700003 	ldmdami	r0!, {r0, r1}^
    af5c:	0035a89f 	mlaseq	r5, pc, r8, sl	; <UNPREDICTABLE>
    af60:	0035b010 	eorseq	fp, r5, r0, lsl r0
    af64:	70000310 	andvc	r0, r0, r0, lsl r3
    af68:	35b09f44 	ldrcc	r9, [r0, #3908]!	; 0xf44
    af6c:	35b81000 	ldrcc	r1, [r8, #0]!
    af70:	00031000 	andeq	r1, r3, r0
    af74:	b89f4070 	ldmlt	pc, {r4, r5, r6, lr}	; <UNPREDICTABLE>
    af78:	c0100035 	andsgt	r0, r0, r5, lsr r0
    af7c:	04100035 	ldreq	r0, [r0], #-53	; 0xffffffcb
    af80:	7fbc7000 	svcvc	0x00bc7000
    af84:	0035c09f 	mlaseq	r5, pc, r0, ip	; <UNPREDICTABLE>
    af88:	0035c610 	eorseq	ip, r5, r0, lsl r6
    af8c:	70000410 	andvc	r0, r0, r0, lsl r4
    af90:	c69f7fb8 			; <UNDEFINED> instruction: 0xc69f7fb8
    af94:	d0100035 	andsle	r0, r0, r5, lsr r0
    af98:	01100035 	tsteq	r0, r5, lsr r0
    af9c:	00005000 	andeq	r5, r0, r0
	...
    afac:	10003540 	andne	r3, r0, r0, asr #10
    afb0:	10003550 	andne	r3, r0, r0, asr r5
    afb4:	50520001 	subspl	r0, r2, r1
    afb8:	c6100035 			; <UNDEFINED> instruction: 0xc6100035
    afbc:	02100035 	andseq	r0, r0, #53	; 0x35
    afc0:	c6787000 	ldrbtgt	r7, [r8], -r0
    afc4:	d0100035 	andsle	r0, r0, r5, lsr r0
    afc8:	03100035 	tsteq	r0, #53	; 0x35
    afcc:	00c07000 	sbceq	r7, r0, r0
	...
    afdc:	35400000 	strbcc	r0, [r0, #-0]
    afe0:	357c1000 	ldrbcc	r1, [ip, #-0]!
    afe4:	00011000 	andeq	r1, r1, r0
    afe8:	00357c53 	eorseq	r7, r5, r3, asr ip
    afec:	0035c610 	eorseq	ip, r5, r0, lsl r6
    aff0:	70000210 	andvc	r0, r0, r0, lsl r2
    aff4:	0035c660 	eorseq	ip, r5, r0, ror #12
    aff8:	0035d010 	eorseq	sp, r5, r0, lsl r0
    affc:	70000210 	andvc	r0, r0, r0, lsl r2
    b000:	00000028 	andeq	r0, r0, r8, lsr #32
    b004:	00000000 	andeq	r0, r0, r0
    b008:	00352a00 	eorseq	r2, r5, r0, lsl #20
    b00c:	00352c10 	eorseq	r2, r5, r0, lsl ip
    b010:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    b014:	00352c00 	eorseq	r2, r5, r0, lsl #24
    b018:	00353e10 	eorseq	r3, r5, r0, lsl lr
    b01c:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    b020:	00000008 	andeq	r0, r0, r8
	...
    b030:	00352a00 	eorseq	r2, r5, r0, lsl #20
    b034:	00353610 	eorseq	r3, r5, r0, lsl r6
    b038:	50000110 	andpl	r0, r0, r0, lsl r1
    b03c:	10003536 	andne	r3, r0, r6, lsr r5
    b040:	10003538 	andne	r3, r0, r8, lsr r5
    b044:	01f30004 	mvnseq	r0, r4
    b048:	35389f50 	ldrcc	r9, [r8, #-3920]!	; 0xfffff0b0
    b04c:	353b1000 	ldrcc	r1, [fp, #-0]!
    b050:	00011000 	andeq	r1, r1, r0
    b054:	00353b50 	eorseq	r3, r5, r0, asr fp
    b058:	00353e10 	eorseq	r3, r5, r0, lsl lr
    b05c:	f3000410 	vqshl.u8	d0, d0, d0
    b060:	009f5001 	addseq	r5, pc, r1
	...
    b070:	00352e00 	eorseq	r2, r5, r0, lsl #28
    b074:	00353210 	eorseq	r3, r5, r0, lsl r2
    b078:	53000110 	movwpl	r0, #272	; 0x110
    b07c:	10003532 	andne	r3, r0, r2, lsr r5
    b080:	10003536 	andne	r3, r0, r6, lsr r5
    b084:	18700002 	ldmdane	r0!, {r1}^
    b088:	10003538 	andne	r3, r0, r8, lsr r5
    b08c:	1000353b 	andne	r3, r0, fp, lsr r5
    b090:	18700002 	ldmdane	r0!, {r1}^
	...
    b0a0:	10003532 	andne	r3, r0, r2, lsr r5
    b0a4:	10003536 	andne	r3, r0, r6, lsr r5
    b0a8:	38530001 	ldmdacc	r3, {r0}^
    b0ac:	3b100035 	blcc	40b188 <__RAM_SIZE+0x30b188>
    b0b0:	01100035 	tsteq	r0, r5, lsr r0
    b0b4:	00005300 	andeq	r5, r0, r0, lsl #6
    b0b8:	00000000 	andeq	r0, r0, r0
    b0bc:	35080000 	strcc	r0, [r8, #-0]
    b0c0:	350a1000 	strcc	r1, [sl, #-0]
    b0c4:	00021000 	andeq	r1, r2, r0
    b0c8:	350a007d 	strcc	r0, [sl, #-125]	; 0xffffff83
    b0cc:	352a1000 	strcc	r1, [sl, #-0]!
    b0d0:	00021000 	andeq	r1, r2, r0
    b0d4:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    b0e0:	35100000 	ldrcc	r0, [r0, #-0]
    b0e4:	35131000 	ldrcc	r1, [r3, #-0]
    b0e8:	00011000 	andeq	r1, r1, r0
    b0ec:	00351350 	eorseq	r1, r5, r0, asr r3
    b0f0:	00352a10 	eorseq	r2, r5, r0, lsl sl
    b0f4:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
	...
    b100:	100034ec 	andne	r3, r0, ip, ror #9
    b104:	100034ee 	andne	r3, r0, lr, ror #9
    b108:	007d0002 	rsbseq	r0, sp, r2
    b10c:	100034ee 	andne	r3, r0, lr, ror #9
    b110:	10003508 	andne	r3, r0, r8, lsl #10
    b114:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    b120:	100034d0 	ldrdne	r3, [r0], -r0
    b124:	100034d2 	ldrdne	r3, [r0], -r2
    b128:	007d0002 	rsbseq	r0, sp, r2
    b12c:	100034d2 	ldrdne	r3, [r0], -r2
    b130:	100034ec 	andne	r3, r0, ip, ror #9
    b134:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    b140:	10003350 	andne	r3, r0, r0, asr r3
    b144:	10003352 	andne	r3, r0, r2, asr r3
    b148:	007d0002 	rsbseq	r0, sp, r2
    b14c:	10003352 	andne	r3, r0, r2, asr r3
    b150:	10003354 	andne	r3, r0, r4, asr r3
    b154:	047d0002 	ldrbteq	r0, [sp], #-2
    b158:	10003354 	andne	r3, r0, r4, asr r3
    b15c:	10003364 	andne	r3, r0, r4, ror #6
    b160:	107d0002 	rsbsne	r0, sp, r2
    b164:	10003364 	andne	r3, r0, r4, ror #6
    b168:	10003368 	andne	r3, r0, r8, ror #6
    b16c:	047d0002 	ldrbteq	r0, [sp], #-2
	...
    b178:	10003368 	andne	r3, r0, r8, ror #6
    b17c:	1000336a 	andne	r3, r0, sl, ror #6
    b180:	007d0002 	rsbseq	r0, sp, r2
    b184:	1000336a 	andne	r3, r0, sl, ror #6
    b188:	1000347c 	andne	r3, r0, ip, ror r4
    b18c:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    b19c:	00000100 	andeq	r0, r0, r0, lsl #2
    b1a0:	33680000 	cmncc	r8, #0
    b1a4:	33741000 	cmncc	r4, #0
    b1a8:	00011000 	andeq	r1, r1, r0
    b1ac:	00337450 	eorseq	r7, r3, r0, asr r4
    b1b0:	00338610 	eorseq	r8, r3, r0, lsl r6
    b1b4:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    b1b8:	10003388 	andne	r3, r0, r8, lsl #7
    b1bc:	10003432 	andne	r3, r0, r2, lsr r4
    b1c0:	4e540001 	cdpmi	0, 5, cr0, cr4, cr1, {0}
    b1c4:	5c100034 	ldcpl	0, cr0, [r0], {52}	; 0x34
    b1c8:	01100034 	tsteq	r0, r4, lsr r0
    b1cc:	345c5400 	ldrbcc	r5, [ip], #-1024	; 0xfffffc00
    b1d0:	345e1000 	ldrbcc	r1, [lr], #-0
    b1d4:	00031000 	andeq	r1, r3, r0
    b1d8:	009f0170 	addseq	r0, pc, r0, ror r1	; <UNPREDICTABLE>
	...
    b1e4:	a2000000 	andge	r0, r0, #0
    b1e8:	1a100033 	bne	40b2bc <__RAM_SIZE+0x30b2bc>
    b1ec:	01100034 	tsteq	r0, r4, lsr r0
    b1f0:	344e5300 	strbcc	r5, [lr], #-768	; 0xfffffd00
    b1f4:	34541000 	ldrbcc	r1, [r4], #-0
    b1f8:	00011000 	andeq	r1, r1, r0
    b1fc:	00000053 	andeq	r0, r0, r3, asr r0
    b200:	00000000 	andeq	r0, r0, r0
    b204:	00000100 	andeq	r0, r0, r0, lsl #2
    b208:	00343200 	eorseq	r3, r4, r0, lsl #4
    b20c:	00344910 	eorseq	r4, r4, r0, lsl r9
    b210:	50000110 	andpl	r0, r0, r0, lsl r1
    b214:	10003462 	andne	r3, r0, r2, ror #8
    b218:	1000347c 	andne	r3, r0, ip, ror r4
    b21c:	00500001 	subseq	r0, r0, r1
	...
    b228:	5e000000 	cdppl	0, 0, cr0, cr0, cr0, {0}
    b22c:	62100034 	andsvs	r0, r0, #52	; 0x34
    b230:	01100034 	tsteq	r0, r4, lsr r0
    b234:	34625000 	strbtcc	r5, [r2], #-0
    b238:	34681000 	strbtcc	r1, [r8], #-0
    b23c:	00061000 	andeq	r1, r6, r0
    b240:	00730074 	rsbseq	r0, r3, r4, ror r0
    b244:	00009f1c 	andeq	r9, r0, ip, lsl pc
	...
    b254:	10003392 	mulne	r0, r2, r3
    b258:	10003396 	mulne	r0, r6, r3
    b25c:	98530001 	ldmdals	r3, {r0}^
    b260:	a2100033 	andsge	r0, r0, #51	; 0x33
    b264:	01100033 	tsteq	r0, r3, lsr r0
    b268:	34545300 	ldrbcc	r5, [r4], #-768	; 0xfffffd00
    b26c:	347c1000 	ldrbtcc	r1, [ip], #-0
    b270:	00011000 	andeq	r1, r1, r0
    b274:	00000053 	andeq	r0, r0, r3, asr r0
    b278:	00000000 	andeq	r0, r0, r0
    b27c:	00010100 	andeq	r0, r1, r0, lsl #2
    b280:	de000000 	cdple	0, 0, cr0, cr0, cr0, {0}
    b284:	32100033 	andscc	r0, r0, #51	; 0x33
    b288:	01100034 	tsteq	r0, r4, lsr r0
    b28c:	344e5400 	strbcc	r5, [lr], #-1024	; 0xfffffc00
    b290:	345c1000 	ldrbcc	r1, [ip], #-0
    b294:	00011000 	andeq	r1, r1, r0
    b298:	00345c54 	eorseq	r5, r4, r4, asr ip
    b29c:	00345e10 	eorseq	r5, r4, r0, lsl lr
    b2a0:	70000310 	andvc	r0, r0, r0, lsl r3
    b2a4:	00009f01 	andeq	r9, r0, r1, lsl #30
    b2a8:	00000000 	andeq	r0, r0, r0
    b2ac:	01000000 	mrseq	r0, (UNDEF: 0)
    b2b0:	1000341e 	andne	r3, r0, lr, lsl r4
    b2b4:	10003432 	andne	r3, r0, r2, lsr r4
    b2b8:	00530001 	subseq	r0, r3, r1
    b2bc:	00000000 	andeq	r0, r0, r0
    b2c0:	Address 0x0000b2c0 is out of bounds.


Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	00000084 	andeq	r0, r0, r4, lsl #1
   4:	00000002 	andeq	r0, r0, r2
        xReturn = pdFALSE;
   8:	00040000 	andeq	r0, r4, r0
}
   c:	00000000 	andeq	r0, r0, r0
    ( pxList->uxNumberOfItems ) = ( UBaseType_t ) ( pxList->uxNumberOfItems + 1U );
  10:	10000800 	andne	r0, r0, r0, lsl #16
}
  14:	00000044 	andeq	r0, r0, r4, asr #32
        if(ch == '\n' || it >= size) {
  18:	10000844 	andne	r0, r0, r4, asr #16
}
  1c:	00000018 	andeq	r0, r0, r8, lsl r0
  20:	00000000 	andeq	r0, r0, r0
  24:	00000010 	andeq	r0, r0, r0, lsl r0
  28:	00000000 	andeq	r0, r0, r0
  2c:	00000010 	andeq	r0, r0, r0, lsl r0
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
  30:	00000000 	andeq	r0, r0, r0
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
  34:	00000020 	andeq	r0, r0, r0, lsr #32
  38:	00000000 	andeq	r0, r0, r0
  3c:	0000004c 	andeq	r0, r0, ip, asr #32
  40:	00000000 	andeq	r0, r0, r0
        BaseType_t xReturn = pdFAIL;
  44:	00000068 	andeq	r0, r0, r8, rrx
    }
  48:	00000000 	andeq	r0, r0, r0
        for (int i = 0; i < count; i++) {
  4c:	0000001c 	andeq	r0, r0, ip, lsl r0
        printf("] \r\n");
  50:	00000000 	andeq	r0, r0, r0
}
  54:	00000018 	andeq	r0, r0, r8, lsl r0
  58:	00000000 	andeq	r0, r0, r0
  5c:	00000018 	andeq	r0, r0, r8, lsl r0
  60:	00000000 	andeq	r0, r0, r0
  64:	00000018 	andeq	r0, r0, r8, lsl r0
  68:	00000000 	andeq	r0, r0, r0
  6c:	00000018 	andeq	r0, r0, r8, lsl r0
  70:	00000000 	andeq	r0, r0, r0
  74:	00000018 	andeq	r0, r0, r8, lsl r0
  78:	1000085c 	andne	r0, r0, ip, asr r8
  7c:	0000002c 	andeq	r0, r0, ip, lsr #32
	...
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
  88:	00000024 	andeq	r0, r0, r4, lsr #32
  8c:	0bba0002 	bleq	fee8009c <__StackTop+0xc6d8009c>
  90:	00040000 	andeq	r0, r4, r0
	...
                if( xTicksToWait == ( TickType_t ) 0 )
  9c:	00000010 	andeq	r0, r0, r0, lsl r0
  a0:	10000888 	andne	r0, r0, r8, lsl #17
                else if( xEntryTimeSet == pdFALSE )
  a4:	0000002c 	andeq	r0, r0, ip, lsr #32
	...
        prvLockQueue( pxQueue );
  b0:	000000a4 	andeq	r0, r0, r4, lsr #1
  b4:	10a30002 	adcne	r0, r3, r2
  b8:	00040000 	andeq	r0, r4, r0
	...
  c4:	00000008 	andeq	r0, r0, r8
  c8:	100008b4 			; <UNDEFINED> instruction: 0x100008b4
  cc:	00000002 	andeq	r0, r0, r2
        if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
  d0:	00000000 	andeq	r0, r0, r0
  d4:	0000000e 	andeq	r0, r0, lr
  d8:	100008b6 			; <UNDEFINED> instruction: 0x100008b6
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
  dc:	00000024 	andeq	r0, r0, r4, lsr #32
  e0:	100008da 	ldrdne	r0, [r0], -sl
                    if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
  e4:	0000007e 	andeq	r0, r0, lr, ror r0
  e8:	10000958 	andne	r0, r0, r8, asr r9
                vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
  ec:	00000138 	andeq	r0, r0, r8, lsr r1
  f0:	10000a90 	mulne	r0, r0, sl
                prvUnlockQueue( pxQueue );
  f4:	00000094 	muleq	r0, r4, r0
  f8:	10000b24 	andne	r0, r0, r4, lsr #22
                if( xTaskResumeAll() == pdFALSE )
  fc:	000000c6 	andeq	r0, r0, r6, asr #1
 100:	10000bf0 	strdne	r0, [r0], -r0	; <UNPREDICTABLE>
                    taskYIELD_WITHIN_API();
 104:	000003ea 	andeq	r0, r0, sl, ror #7
                    if( xInheritanceOccurred != pdFALSE )
 108:	10000fe0 	andne	r0, r0, r0, ror #31
                return errQUEUE_EMPTY;
 10c:	00000396 	muleq	r0, r6, r3
                        taskENTER_CRITICAL();
 110:	10001378 	andne	r1, r0, r8, ror r3
                            uxHighestWaitingPriority = prvGetDisinheritPriorityAfterTimeout( pxQueue );
 114:	00000680 	andeq	r0, r0, r0, lsl #13
 118:	100019f8 	strdne	r1, [r0], -r8
                            vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 11c:	0000000c 	andeq	r0, r0, ip
                        taskEXIT_CRITICAL();
 120:	10001a04 	andne	r1, r0, r4, lsl #20
 124:	0000002c 	andeq	r0, r0, ip, lsr #32
 128:	00000000 	andeq	r0, r0, r0
 12c:	0000002c 	andeq	r0, r0, ip, lsr #32
 130:	00000000 	andeq	r0, r0, r0
 134:	00000028 	andeq	r0, r0, r8, lsr #32
 138:	00000000 	andeq	r0, r0, r0
 13c:	00000020 	andeq	r0, r0, r0, lsr #32
 140:	00000000 	andeq	r0, r0, r0
 144:	0000001c 	andeq	r0, r0, ip, lsl r0
 148:	00000000 	andeq	r0, r0, r0
 14c:	00000030 	andeq	r0, r0, r0, lsr r0
	...
 158:	00000044 	andeq	r0, r0, r4, asr #32
 15c:	2c680002 	stclcs	0, cr0, [r8], #-8
 160:	00040000 	andeq	r0, r4, r0
 164:	00000000 	andeq	r0, r0, r0
 168:	10001a30 	andne	r1, r0, r0, lsr sl
 16c:	00000014 	andeq	r0, r0, r4, lsl r0
 170:	00000000 	andeq	r0, r0, r0
 174:	00000014 	andeq	r0, r0, r4, lsl r0
 178:	10001a44 	andne	r1, r0, r4, asr #20
 17c:	0000001e 	andeq	r0, r0, lr, lsl r0
 180:	10001a64 	andne	r1, r0, r4, ror #20
 184:	00000024 	andeq	r0, r0, r4, lsr #32
 188:	00000000 	andeq	r0, r0, r0
 18c:	00000008 	andeq	r0, r0, r8
 190:	00000000 	andeq	r0, r0, r0
 194:	00000020 	andeq	r0, r0, r0, lsr #32
	...
 1a0:	00000054 	andeq	r0, r0, r4, asr r0
 1a4:	2ebb0002 	cdpcs	0, 11, cr0, cr11, cr2, {0}
 1a8:	00040000 	andeq	r0, r4, r0
 1ac:	00000000 	andeq	r0, r0, r0
 1b0:	10001a88 	andne	r1, r0, r8, lsl #21
 1b4:	0000002c 	andeq	r0, r0, ip, lsr #32
 1b8:	10001ab4 			; <UNDEFINED> instruction: 0x10001ab4
 1bc:	00000036 	andeq	r0, r0, r6, lsr r0
 1c0:	10001aec 	andne	r1, r0, ip, ror #21
 1c4:	00000018 	andeq	r0, r0, r8, lsl r0
 1c8:	10001b04 	andne	r1, r0, r4, lsl #22
 1cc:	00000050 	andeq	r0, r0, r0, asr r0
 1d0:	10001b54 	andne	r1, r0, r4, asr fp
 1d4:	0000007c 	andeq	r0, r0, ip, ror r0
 1d8:	10001bd0 	ldrdne	r1, [r0], -r0
 1dc:	00000184 	andeq	r0, r0, r4, lsl #3
 1e0:	00000000 	andeq	r0, r0, r0
 1e4:	00000006 	andeq	r0, r0, r6
 1e8:	00000000 	andeq	r0, r0, r0
 1ec:	00000008 	andeq	r0, r0, r8
	...
 1f8:	0000001c 	andeq	r0, r0, ip, lsl r0
 1fc:	376d0002 	strbcc	r0, [sp, -r2]!
 200:	00040000 	andeq	r0, r4, r0
 204:	00000000 	andeq	r0, r0, r0
 208:	10001d54 	andne	r1, r0, r4, asr sp
 20c:	000000fc 	strdeq	r0, [r0], -ip
	...
 218:	0000003c 	andeq	r0, r0, ip, lsr r0
 21c:	39fe0002 	ldmibcc	lr!, {r1}^
 220:	00040000 	andeq	r0, r4, r0
 224:	00000000 	andeq	r0, r0, r0
 228:	10001e50 	andne	r1, r0, r0, asr lr
 22c:	0000001a 	andeq	r0, r0, sl, lsl r0
 230:	10001e6a 	andne	r1, r0, sl, ror #28
 234:	00000006 	andeq	r0, r0, r6
 238:	00000000 	andeq	r0, r0, r0
 23c:	00000016 	andeq	r0, r0, r6, lsl r0
 240:	10001e70 	andne	r1, r0, r0, ror lr
 244:	00000032 	andeq	r0, r0, r2, lsr r0
 248:	10001ea2 	andne	r1, r0, r2, lsr #29
 24c:	00000024 	andeq	r0, r0, r4, lsr #32
	...
 258:	0000015c 	andeq	r0, r0, ip, asr r1
 25c:	3ccd0002 	stclcc	0, cr0, [sp], {2}
 260:	00040000 	andeq	r0, r4, r0
	...
 26c:	00000010 	andeq	r0, r0, r0, lsl r0
 270:	00000000 	andeq	r0, r0, r0
 274:	0000001e 	andeq	r0, r0, lr, lsl r0
 278:	10001ec6 	andne	r1, r0, r6, asr #29
 27c:	0000001a 	andeq	r0, r0, sl, lsl r0
 280:	10001ee0 	andne	r1, r0, r0, ror #29
 284:	00000076 	andeq	r0, r0, r6, ror r0
 288:	10001f56 	andne	r1, r0, r6, asr pc
 28c:	00000024 	andeq	r0, r0, r4, lsr #32
 290:	10001f7a 	andne	r1, r0, sl, ror pc
 294:	00000058 	andeq	r0, r0, r8, asr r0
 298:	10001fd2 	ldrdne	r1, [r0], -r2
 29c:	00000082 	andeq	r0, r0, r2, lsl #1
 2a0:	10002054 	andne	r2, r0, r4, asr r0
 2a4:	00000086 	andeq	r0, r0, r6, lsl #1
 2a8:	100020da 	ldrdne	r2, [r0], -sl
 2ac:	00000020 	andeq	r0, r0, r0, lsr #32
 2b0:	100020fa 	strdne	r2, [r0], -sl
 2b4:	0000003e 	andeq	r0, r0, lr, lsr r0
 2b8:	00000000 	andeq	r0, r0, r0
 2bc:	00000018 	andeq	r0, r0, r8, lsl r0
 2c0:	00000000 	andeq	r0, r0, r0
 2c4:	00000056 	andeq	r0, r0, r6, asr r0
 2c8:	00000000 	andeq	r0, r0, r0
 2cc:	0000002a 	andeq	r0, r0, sl, lsr #32
 2d0:	00000000 	andeq	r0, r0, r0
 2d4:	00000020 	andeq	r0, r0, r0, lsr #32
 2d8:	00000000 	andeq	r0, r0, r0
 2dc:	0000010c 	andeq	r0, r0, ip, lsl #2
 2e0:	00000000 	andeq	r0, r0, r0
 2e4:	00000018 	andeq	r0, r0, r8, lsl r0
 2e8:	00000000 	andeq	r0, r0, r0
 2ec:	00000016 	andeq	r0, r0, r6, lsl r0
 2f0:	00000000 	andeq	r0, r0, r0
 2f4:	0000001e 	andeq	r0, r0, lr, lsl r0
 2f8:	00000000 	andeq	r0, r0, r0
 2fc:	0000002c 	andeq	r0, r0, ip, lsr #32
 300:	00000000 	andeq	r0, r0, r0
 304:	000000bc 	strheq	r0, [r0], -ip
 308:	00000000 	andeq	r0, r0, r0
 30c:	00000086 	andeq	r0, r0, r6, lsl #1
 310:	10002138 	andne	r2, r0, r8, lsr r1
 314:	000000f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
 318:	00000000 	andeq	r0, r0, r0
 31c:	00000126 	andeq	r0, r0, r6, lsr #2
 320:	00000000 	andeq	r0, r0, r0
 324:	0000002c 	andeq	r0, r0, ip, lsr #32
 328:	00000000 	andeq	r0, r0, r0
 32c:	000000f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
 330:	00000000 	andeq	r0, r0, r0
 334:	00000080 	andeq	r0, r0, r0, lsl #1
 338:	00000000 	andeq	r0, r0, r0
 33c:	0000002c 	andeq	r0, r0, ip, lsr #32
 340:	00000000 	andeq	r0, r0, r0
 344:	00000012 	andeq	r0, r0, r2, lsl r0
 348:	00000000 	andeq	r0, r0, r0
 34c:	00000016 	andeq	r0, r0, r6, lsl r0
 350:	00000000 	andeq	r0, r0, r0
 354:	00000004 	andeq	r0, r0, r4
 358:	00000000 	andeq	r0, r0, r0
 35c:	00000010 	andeq	r0, r0, r0, lsl r0
 360:	00000000 	andeq	r0, r0, r0
 364:	00000004 	andeq	r0, r0, r4
 368:	00000000 	andeq	r0, r0, r0
 36c:	00000004 	andeq	r0, r0, r4
 370:	00000000 	andeq	r0, r0, r0
 374:	0000000c 	andeq	r0, r0, ip
 378:	00000000 	andeq	r0, r0, r0
 37c:	00000010 	andeq	r0, r0, r0, lsl r0
 380:	10002228 	andne	r2, r0, r8, lsr #4
 384:	00000052 	andeq	r0, r0, r2, asr r0
 388:	00000000 	andeq	r0, r0, r0
 38c:	0000000c 	andeq	r0, r0, ip
 390:	00000000 	andeq	r0, r0, r0
 394:	00000026 	andeq	r0, r0, r6, lsr #32
 398:	00000000 	andeq	r0, r0, r0
 39c:	00000026 	andeq	r0, r0, r6, lsr #32
 3a0:	00000000 	andeq	r0, r0, r0
 3a4:	00000018 	andeq	r0, r0, r8, lsl r0
 3a8:	00000000 	andeq	r0, r0, r0
 3ac:	00000016 	andeq	r0, r0, r6, lsl r0
	...
 3b8:	0000028c 	andeq	r0, r0, ip, lsl #5
 3bc:	618e0002 	orrvs	r0, lr, r2
 3c0:	00040000 	andeq	r0, r4, r0
	...
 3cc:	00000044 	andeq	r0, r0, r4, asr #32
 3d0:	1000227c 	andne	r2, r0, ip, ror r2
 3d4:	00000040 	andeq	r0, r0, r0, asr #32
 3d8:	00000000 	andeq	r0, r0, r0
 3dc:	0000003e 	andeq	r0, r0, lr, lsr r0
 3e0:	00000000 	andeq	r0, r0, r0
 3e4:	00000012 	andeq	r0, r0, r2, lsl r0
 3e8:	100022bc 			; <UNDEFINED> instruction: 0x100022bc
 3ec:	00000028 	andeq	r0, r0, r8, lsr #32
 3f0:	100022e4 	andne	r2, r0, r4, ror #5
 3f4:	00000096 	muleq	r0, r6, r0
 3f8:	1000237a 	andne	r2, r0, sl, ror r3
 3fc:	00000052 	andeq	r0, r0, r2, asr r0
 400:	100023cc 	andne	r2, r0, ip, asr #7
 404:	00000068 	andeq	r0, r0, r8, rrx
 408:	10002434 	andne	r2, r0, r4, lsr r4
 40c:	000000bc 	strheq	r0, [r0], -ip
 410:	100024f0 	strdne	r2, [r0], -r0
 414:	00000062 	andeq	r0, r0, r2, rrx
 418:	10002552 	andne	r2, r0, r2, asr r5
 41c:	00000024 	andeq	r0, r0, r4, lsr #32
 420:	10002578 	andne	r2, r0, r8, ror r5
 424:	0000004c 	andeq	r0, r0, ip, asr #32
 428:	100025c4 	andne	r2, r0, r4, asr #11
 42c:	000000a8 	andeq	r0, r0, r8, lsr #1
 430:	1000266c 	andne	r2, r0, ip, ror #12
 434:	00000028 	andeq	r0, r0, r8, lsr #32
 438:	10002694 	mulne	r0, r4, r6
 43c:	00000022 	andeq	r0, r0, r2, lsr #32
 440:	00000000 	andeq	r0, r0, r0
 444:	0000009c 	muleq	r0, ip, r0
 448:	00000000 	andeq	r0, r0, r0
 44c:	0000009c 	muleq	r0, ip, r0
 450:	00000000 	andeq	r0, r0, r0
 454:	00000020 	andeq	r0, r0, r0, lsr #32
 458:	00000000 	andeq	r0, r0, r0
 45c:	00000020 	andeq	r0, r0, r0, lsr #32
 460:	00000000 	andeq	r0, r0, r0
 464:	00000020 	andeq	r0, r0, r0, lsr #32
 468:	00000000 	andeq	r0, r0, r0
 46c:	00000020 	andeq	r0, r0, r0, lsr #32
 470:	00000000 	andeq	r0, r0, r0
 474:	000000d8 	ldrdeq	r0, [r0], -r8
 478:	00000000 	andeq	r0, r0, r0
 47c:	00000084 	andeq	r0, r0, r4, lsl #1
 480:	00000000 	andeq	r0, r0, r0
 484:	000000ac 	andeq	r0, r0, ip, lsr #1
 488:	00000000 	andeq	r0, r0, r0
 48c:	0000003c 	andeq	r0, r0, ip, lsr r0
 490:	100026b8 			; <UNDEFINED> instruction: 0x100026b8
 494:	00000010 	andeq	r0, r0, r0, lsl r0
 498:	100026c8 	andne	r2, r0, r8, asr #13
 49c:	0000000c 	andeq	r0, r0, ip
 4a0:	00000000 	andeq	r0, r0, r0
 4a4:	0000000c 	andeq	r0, r0, ip
 4a8:	100026d4 	ldrdne	r2, [r0], -r4
 4ac:	0000000c 	andeq	r0, r0, ip
 4b0:	00000000 	andeq	r0, r0, r0
 4b4:	00000014 	andeq	r0, r0, r4, lsl r0
 4b8:	00000000 	andeq	r0, r0, r0
 4bc:	00000034 	andeq	r0, r0, r4, lsr r0
 4c0:	00000000 	andeq	r0, r0, r0
 4c4:	0000000c 	andeq	r0, r0, ip
 4c8:	00000000 	andeq	r0, r0, r0
 4cc:	0000000c 	andeq	r0, r0, ip
 4d0:	100026e0 	andne	r2, r0, r0, ror #13
 4d4:	0000003c 	andeq	r0, r0, ip, lsr r0
 4d8:	1000271c 	andne	r2, r0, ip, lsl r7
 4dc:	00000160 	andeq	r0, r0, r0, ror #2
 4e0:	1000287c 	andne	r2, r0, ip, ror r8
 4e4:	00000130 	andeq	r0, r0, r0, lsr r1
 4e8:	00000000 	andeq	r0, r0, r0
 4ec:	0000005c 	andeq	r0, r0, ip, asr r0
 4f0:	100029ac 	andne	r2, r0, ip, lsr #19
 4f4:	0000001e 	andeq	r0, r0, lr, lsl r0
 4f8:	100029cc 	andne	r2, r0, ip, asr #19
 4fc:	00000038 	andeq	r0, r0, r8, lsr r0
 500:	00000000 	andeq	r0, r0, r0
 504:	0000007c 	andeq	r0, r0, ip, ror r0
 508:	00000000 	andeq	r0, r0, r0
 50c:	00000024 	andeq	r0, r0, r4, lsr #32
 510:	00000000 	andeq	r0, r0, r0
 514:	000000a4 	andeq	r0, r0, r4, lsr #1
 518:	00000000 	andeq	r0, r0, r0
 51c:	00000020 	andeq	r0, r0, r0, lsr #32
 520:	00000000 	andeq	r0, r0, r0
 524:	00000020 	andeq	r0, r0, r0, lsr #32
 528:	00000000 	andeq	r0, r0, r0
 52c:	00000020 	andeq	r0, r0, r0, lsr #32
 530:	00000000 	andeq	r0, r0, r0
 534:	00000020 	andeq	r0, r0, r0, lsr #32
 538:	10002a04 	andne	r2, r0, r4, lsl #20
 53c:	00000084 	andeq	r0, r0, r4, lsl #1
 540:	00000000 	andeq	r0, r0, r0
 544:	000000a4 	andeq	r0, r0, r4, lsr #1
 548:	10002a88 	andne	r2, r0, r8, lsl #21
 54c:	0000001c 	andeq	r0, r0, ip, lsl r0
 550:	00000000 	andeq	r0, r0, r0
 554:	00000040 	andeq	r0, r0, r0, asr #32
 558:	10002aa4 	andne	r2, r0, r4, lsr #21
 55c:	0000003c 	andeq	r0, r0, ip, lsr r0
 560:	10002ae0 	andne	r2, r0, r0, ror #21
 564:	000000e4 	andeq	r0, r0, r4, ror #1
 568:	00000000 	andeq	r0, r0, r0
 56c:	000000b8 	strheq	r0, [r0], -r8
 570:	00000000 	andeq	r0, r0, r0
 574:	00000024 	andeq	r0, r0, r4, lsr #32
 578:	10002bc4 	andne	r2, r0, r4, asr #23
 57c:	00000018 	andeq	r0, r0, r8, lsl r0
 580:	10002bdc 	ldrdne	r2, [r0], -ip
 584:	0000007c 	andeq	r0, r0, ip, ror r0
 588:	10002c58 	andne	r2, r0, r8, asr ip
 58c:	0000000c 	andeq	r0, r0, ip
 590:	10002c64 	andne	r2, r0, r4, ror #24
 594:	00000048 	andeq	r0, r0, r8, asr #32
 598:	00000000 	andeq	r0, r0, r0
 59c:	00000018 	andeq	r0, r0, r8, lsl r0
 5a0:	00000000 	andeq	r0, r0, r0
 5a4:	0000000c 	andeq	r0, r0, ip
 5a8:	00000000 	andeq	r0, r0, r0
 5ac:	00000010 	andeq	r0, r0, r0, lsl r0
 5b0:	00000000 	andeq	r0, r0, r0
 5b4:	00000020 	andeq	r0, r0, r0, lsr #32
 5b8:	00000000 	andeq	r0, r0, r0
 5bc:	000000b8 	strheq	r0, [r0], -r8
 5c0:	10002cac 	andne	r2, r0, ip, lsr #25
 5c4:	00000080 	andeq	r0, r0, r0, lsl #1
 5c8:	00000000 	andeq	r0, r0, r0
 5cc:	00000090 	muleq	r0, r0, r0
 5d0:	00000000 	andeq	r0, r0, r0
 5d4:	00000018 	andeq	r0, r0, r8, lsl r0
 5d8:	00000000 	andeq	r0, r0, r0
 5dc:	00000014 	andeq	r0, r0, r4, lsl r0
 5e0:	00000000 	andeq	r0, r0, r0
 5e4:	000000a8 	andeq	r0, r0, r8, lsr #1
 5e8:	00000000 	andeq	r0, r0, r0
 5ec:	000000cc 	andeq	r0, r0, ip, asr #1
 5f0:	00000000 	andeq	r0, r0, r0
 5f4:	0000011c 	andeq	r0, r0, ip, lsl r1
 5f8:	00000000 	andeq	r0, r0, r0
 5fc:	00000158 	andeq	r0, r0, r8, asr r1
 600:	00000000 	andeq	r0, r0, r0
 604:	000000ec 	andeq	r0, r0, ip, ror #1
 608:	00000000 	andeq	r0, r0, r0
 60c:	00000038 	andeq	r0, r0, r8, lsr r0
 610:	00000000 	andeq	r0, r0, r0
 614:	00000034 	andeq	r0, r0, r4, lsr r0
 618:	10002d2c 	andne	r2, r0, ip, lsr #26
 61c:	00000018 	andeq	r0, r0, r8, lsl r0
 620:	10002d44 	andne	r2, r0, r4, asr #26
 624:	0000006c 	andeq	r0, r0, ip, rrx
 628:	10002db0 			; <UNDEFINED> instruction: 0x10002db0
 62c:	00000048 	andeq	r0, r0, r8, asr #32
 630:	10002df8 	strdne	r2, [r0], -r8
 634:	00000018 	andeq	r0, r0, r8, lsl r0
 638:	00000000 	andeq	r0, r0, r0
 63c:	00000074 	andeq	r0, r0, r4, ror r0
	...
 648:	00000104 	andeq	r0, r0, r4, lsl #2
 64c:	9a820002 	bls	fe08065c <__StackTop+0xc5f8065c>
 650:	00040000 	andeq	r0, r4, r0
 654:	00000000 	andeq	r0, r0, r0
 658:	10002e10 	andne	r2, r0, r0, lsl lr
 65c:	00000020 	andeq	r0, r0, r0, lsr #32
 660:	10002e30 	andne	r2, r0, r0, lsr lr
 664:	00000048 	andeq	r0, r0, r8, asr #32
 668:	10002e78 	andne	r2, r0, r8, ror lr
 66c:	00000028 	andeq	r0, r0, r8, lsr #32
 670:	10002ea0 	andne	r2, r0, r0, lsr #29
 674:	00000040 	andeq	r0, r0, r0, asr #32
 678:	10002ee0 	andne	r2, r0, r0, ror #29
 67c:	00000030 	andeq	r0, r0, r0, lsr r0
 680:	10002f10 	andne	r2, r0, r0, lsl pc
 684:	0000002c 	andeq	r0, r0, ip, lsr #32
 688:	10002f3c 	andne	r2, r0, ip, lsr pc
 68c:	00000068 	andeq	r0, r0, r8, rrx
 690:	10002fa4 	andne	r2, r0, r4, lsr #31
 694:	000000f8 	strdeq	r0, [r0], -r8
 698:	1000309c 	mulne	r0, ip, r0
 69c:	00000016 	andeq	r0, r0, r6, lsl r0
 6a0:	100030b4 	strhne	r3, [r0], -r4
 6a4:	00000060 	andeq	r0, r0, r0, rrx
 6a8:	00000000 	andeq	r0, r0, r0
 6ac:	00000036 	andeq	r0, r0, r6, lsr r0
 6b0:	10003114 	andne	r3, r0, r4, lsl r1
 6b4:	0000005c 	andeq	r0, r0, ip, asr r0
 6b8:	00000000 	andeq	r0, r0, r0
 6bc:	00000038 	andeq	r0, r0, r8, lsr r0
 6c0:	00000000 	andeq	r0, r0, r0
 6c4:	00000020 	andeq	r0, r0, r0, lsr #32
 6c8:	00000000 	andeq	r0, r0, r0
 6cc:	0000004c 	andeq	r0, r0, ip, asr #32
 6d0:	00000000 	andeq	r0, r0, r0
 6d4:	00000034 	andeq	r0, r0, r4, lsr r0
 6d8:	00000000 	andeq	r0, r0, r0
 6dc:	0000000c 	andeq	r0, r0, ip
 6e0:	00000000 	andeq	r0, r0, r0
 6e4:	00000004 	andeq	r0, r0, r4
 6e8:	00000000 	andeq	r0, r0, r0
 6ec:	0000002c 	andeq	r0, r0, ip, lsr #32
 6f0:	00000000 	andeq	r0, r0, r0
 6f4:	00000020 	andeq	r0, r0, r0, lsr #32
 6f8:	00000000 	andeq	r0, r0, r0
 6fc:	00000008 	andeq	r0, r0, r8
 700:	00000000 	andeq	r0, r0, r0
 704:	00000004 	andeq	r0, r0, r4
 708:	00000000 	andeq	r0, r0, r0
 70c:	00000014 	andeq	r0, r0, r4, lsl r0
 710:	00000000 	andeq	r0, r0, r0
 714:	00000004 	andeq	r0, r0, r4
 718:	00000000 	andeq	r0, r0, r0
 71c:	00000020 	andeq	r0, r0, r0, lsr #32
 720:	00000000 	andeq	r0, r0, r0
 724:	00000012 	andeq	r0, r0, r2, lsl r0
 728:	00000000 	andeq	r0, r0, r0
 72c:	00000012 	andeq	r0, r0, r2, lsl r0
 730:	00000000 	andeq	r0, r0, r0
 734:	00000028 	andeq	r0, r0, r8, lsr #32
 738:	00000000 	andeq	r0, r0, r0
 73c:	00000028 	andeq	r0, r0, r8, lsr #32
 740:	00000000 	andeq	r0, r0, r0
 744:	00000014 	andeq	r0, r0, r4, lsl r0
	...
 750:	00000064 	andeq	r0, r0, r4, rrx
 754:	b4120002 	ldrlt	r0, [r2], #-2
 758:	00040000 	andeq	r0, r4, r0
 75c:	00000000 	andeq	r0, r0, r0
 760:	10003170 	andne	r3, r0, r0, ror r1
 764:	00000058 	andeq	r0, r0, r8, asr r0
 768:	100031c8 	andne	r3, r0, r8, asr #3
 76c:	00000064 	andeq	r0, r0, r4, rrx
 770:	1000322c 	andne	r3, r0, ip, lsr #4
 774:	000000d4 	ldrdeq	r0, [r0], -r4
 778:	10003300 	andne	r3, r0, r0, lsl #6
 77c:	00000050 	andeq	r0, r0, r0, asr r0
 780:	00000000 	andeq	r0, r0, r0
 784:	0000000c 	andeq	r0, r0, ip
 788:	00000000 	andeq	r0, r0, r0
 78c:	0000000c 	andeq	r0, r0, ip
 790:	00000000 	andeq	r0, r0, r0
 794:	00000002 	andeq	r0, r0, r2
 798:	00000000 	andeq	r0, r0, r0
 79c:	00000032 	andeq	r0, r0, r2, lsr r0
 7a0:	00000000 	andeq	r0, r0, r0
 7a4:	00000080 	andeq	r0, r0, r0, lsl #1
 7a8:	00000000 	andeq	r0, r0, r0
 7ac:	0000002c 	andeq	r0, r0, ip, lsr #32
	...
 7b8:	00000074 	andeq	r0, r0, r4, ror r0
 7bc:	ba2b0002 	blt	ac07cc <__RAM_SIZE+0x9c07cc>
 7c0:	00040000 	andeq	r0, r4, r0
 7c4:	00000000 	andeq	r0, r0, r0
 7c8:	10003350 	andne	r3, r0, r0, asr r3
 7cc:	00000018 	andeq	r0, r0, r8, lsl r0
 7d0:	10003368 	andne	r3, r0, r8, ror #6
 7d4:	00000114 	andeq	r0, r0, r4, lsl r1
 7d8:	1000347c 	andne	r3, r0, ip, ror r4
 7dc:	0000003c 	andeq	r0, r0, ip, lsr r0
 7e0:	100034b8 			; <UNDEFINED> instruction: 0x100034b8
 7e4:	00000016 	andeq	r0, r0, r6, lsl r0
 7e8:	100034d0 	ldrdne	r3, [r0], -r0
 7ec:	0000001c 	andeq	r0, r0, ip, lsl r0
 7f0:	100034ec 	andne	r3, r0, ip, ror #9
 7f4:	0000001c 	andeq	r0, r0, ip, lsl r0
 7f8:	10003508 	andne	r3, r0, r8, lsl #10
 7fc:	00000022 	andeq	r0, r0, r2, lsr #32
 800:	1000352a 	andne	r3, r0, sl, lsr #10
 804:	00000014 	andeq	r0, r0, r4, lsl r0
 808:	10003540 	andne	r3, r0, r0, asr #10
 80c:	00000090 	muleq	r0, r0, r0
 810:	100035d0 	ldrdne	r3, [r0], -r0
 814:	00000040 	andeq	r0, r0, r0, asr #32
 818:	00000000 	andeq	r0, r0, r0
 81c:	00000002 	andeq	r0, r0, r2
 820:	00000000 	andeq	r0, r0, r0
 824:	0000000e 	andeq	r0, r0, lr
	...
 830:	0000005c 	andeq	r0, r0, ip, asr r0
 834:	bf920002 	svclt	0x00920002
 838:	00040000 	andeq	r0, r4, r0
 83c:	00000000 	andeq	r0, r0, r0
 840:	10003610 	andne	r3, r0, r0, lsl r6
 844:	00000026 	andeq	r0, r0, r6, lsr #32
 848:	00000000 	andeq	r0, r0, r0
 84c:	00000010 	andeq	r0, r0, r0, lsl r0
 850:	00000000 	andeq	r0, r0, r0
 854:	0000000e 	andeq	r0, r0, lr
 858:	00000000 	andeq	r0, r0, r0
 85c:	0000000e 	andeq	r0, r0, lr
 860:	1000363c 	andne	r3, r0, ip, lsr r6
 864:	0000001a 	andeq	r0, r0, sl, lsl r0
 868:	1000365c 	andne	r3, r0, ip, asr r6
 86c:	00000016 	andeq	r0, r0, r6, lsl r0
 870:	10003672 	andne	r3, r0, r2, ror r6
 874:	0000000e 	andeq	r0, r0, lr
 878:	10003680 	andne	r3, r0, r0, lsl #13
 87c:	00000044 	andeq	r0, r0, r4, asr #32
 880:	100036c8 	andne	r3, r0, r8, asr #13
 884:	00000012 	andeq	r0, r0, r2, lsl r0
	...
 890:	0000001c 	andeq	r0, r0, ip, lsl r0
 894:	c1100002 	tstgt	r0, r2
 898:	00040000 	andeq	r0, r4, r0
 89c:	00000000 	andeq	r0, r0, r0
 8a0:	10003700 	andne	r3, r0, r0, lsl #14
 8a4:	00000070 	andeq	r0, r0, r0, ror r0
	...
 8b0:	0000001c 	andeq	r0, r0, ip, lsl r0
 8b4:	c1360002 	teqgt	r6, r2
 8b8:	00040000 	andeq	r0, r4, r0
 8bc:	00000000 	andeq	r0, r0, r0
 8c0:	10003770 	andne	r3, r0, r0, ror r7
 8c4:	00000048 	andeq	r0, r0, r8, asr #32
	...

Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
   0:	00000001 	andeq	r0, r0, r1
   4:	00000001 	andeq	r0, r0, r1
        xReturn = pdFALSE;
   8:	00000001 	andeq	r0, r0, r1
}
   c:	00000001 	andeq	r0, r0, r1
	...
        if(ch == '\n' || it >= size) {
  18:	10000800 	andne	r0, r0, r0, lsl #16
}
  1c:	10000844 	andne	r0, r0, r4, asr #16
  20:	10000844 	andne	r0, r0, r4, asr #16
  24:	1000085c 	andne	r0, r0, ip, asr r8
  28:	00000001 	andeq	r0, r0, r1
  2c:	00000001 	andeq	r0, r0, r1
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
  30:	00000001 	andeq	r0, r0, r1
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
  34:	00000001 	andeq	r0, r0, r1
  38:	00000001 	andeq	r0, r0, r1
  3c:	00000001 	andeq	r0, r0, r1
  40:	00000001 	andeq	r0, r0, r1
        BaseType_t xReturn = pdFAIL;
  44:	00000001 	andeq	r0, r0, r1
    }
  48:	00000001 	andeq	r0, r0, r1
        for (int i = 0; i < count; i++) {
  4c:	00000001 	andeq	r0, r0, r1
        printf("] \r\n");
  50:	00000001 	andeq	r0, r0, r1
}
  54:	00000001 	andeq	r0, r0, r1
  58:	00000001 	andeq	r0, r0, r1
  5c:	00000001 	andeq	r0, r0, r1
  60:	00000001 	andeq	r0, r0, r1
  64:	00000001 	andeq	r0, r0, r1
  68:	00000001 	andeq	r0, r0, r1
  6c:	00000001 	andeq	r0, r0, r1
  70:	00000001 	andeq	r0, r0, r1
  74:	00000001 	andeq	r0, r0, r1
  78:	00000001 	andeq	r0, r0, r1
  7c:	00000001 	andeq	r0, r0, r1
            prvUnlockQueue( pxQueue );
  80:	1000085c 	andne	r0, r0, ip, asr r8
            ( void ) xTaskResumeAll();
  84:	10000888 	andne	r0, r0, r8, lsl #17
	...
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
  90:	00000001 	andeq	r0, r0, r1
        taskENTER_CRITICAL();
  94:	00000001 	andeq	r0, r0, r1
            if( uxSemaphoreCount > ( UBaseType_t ) 0 )
  98:	10000888 	andne	r0, r0, r8, lsl #17
                if( xTicksToWait == ( TickType_t ) 0 )
  9c:	100008b4 			; <UNDEFINED> instruction: 0x100008b4
	...
        taskEXIT_CRITICAL();
  a8:	100008fa 	strdne	r0, [r0], -sl
        vTaskSuspendAll();
  ac:	100008fc 	strdne	r0, [r0], -ip
        prvLockQueue( pxQueue );
  b0:	100008fe 	strdne	r0, [r0], -lr
  b4:	1000091c 	andne	r0, r0, ip, lsl r9
	...
  c0:	10000aae 	andne	r0, r0, lr, lsr #21
  c4:	10000ac8 	andne	r0, r0, r8, asr #21
  c8:	10000ad0 	ldrdne	r0, [r0], -r0	; <UNPREDICTABLE>
  cc:	10000ad4 	ldrdne	r0, [r0], -r4
        if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
  d0:	10000ad4 	ldrdne	r0, [r0], -r4
  d4:	10000b02 	andne	r0, r0, r2, lsl #22
	...
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
  e0:	10000b5a 	andne	r0, r0, sl, asr fp
                    if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
  e4:	10000b7c 	andne	r0, r0, ip, ror fp
  e8:	10000b8a 	andne	r0, r0, sl, lsl #23
                vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
  ec:	10000b90 	mulne	r0, r0, fp
  f0:	10000b90 	mulne	r0, r0, fp
                prvUnlockQueue( pxQueue );
  f4:	10000bb8 			; <UNDEFINED> instruction: 0x10000bb8
	...
                if( xTaskResumeAll() == pdFALSE )
 100:	1000138c 	andne	r1, r0, ip, lsl #7
                    taskYIELD_WITHIN_API();
 104:	1000138e 	andne	r1, r0, lr, lsl #7
                    if( xInheritanceOccurred != pdFALSE )
 108:	10001838 	andne	r1, r0, r8, lsr r8
                return errQUEUE_EMPTY;
 10c:	100018aa 	andne	r1, r0, sl, lsr #17
	...
                            uxHighestWaitingPriority = prvGetDisinheritPriorityAfterTimeout( pxQueue );
 118:	1000160a 	andne	r1, r0, sl, lsl #12
                            vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 11c:	1000163c 	andne	r1, r0, ip, lsr r6
                        taskEXIT_CRITICAL();
 120:	10001790 	mulne	r0, r0, r7
 124:	100017aa 	andne	r1, r0, sl, lsr #15
	...
 130:	1000165a 	andne	r1, r0, sl, asr r6
 134:	10001690 	mulne	r0, r0, r6
 138:	10001712 	andne	r1, r0, r2, lsl r7
 13c:	1000172e 	andne	r1, r0, lr, lsr #14
	...
 148:	10001698 	mulne	r0, r8, r6
 14c:	100016d6 	ldrdne	r1, [r0], -r6
 150:	100016d8 	ldrdne	r1, [r0], -r8
 154:	100016e0 	andne	r1, r0, r0, ror #13
	...
 160:	00000001 	andeq	r0, r0, r1
 164:	00000001 	andeq	r0, r0, r1
 168:	100008b4 			; <UNDEFINED> instruction: 0x100008b4
 16c:	100008b6 			; <UNDEFINED> instruction: 0x100008b6
 170:	00000001 	andeq	r0, r0, r1
 174:	00000001 	andeq	r0, r0, r1
 178:	100008b6 			; <UNDEFINED> instruction: 0x100008b6
 17c:	100008da 	ldrdne	r0, [r0], -sl
 180:	100008da 	ldrdne	r0, [r0], -sl
 184:	10000958 	andne	r0, r0, r8, asr r9
 188:	10000958 	andne	r0, r0, r8, asr r9
 18c:	10000a90 	mulne	r0, r0, sl
 190:	10000a90 	mulne	r0, r0, sl
 194:	10000b24 	andne	r0, r0, r4, lsr #22
 198:	10000b24 	andne	r0, r0, r4, lsr #22
 19c:	10000bea 	andne	r0, r0, sl, ror #23
 1a0:	10000bf0 	strdne	r0, [r0], -r0	; <UNPREDICTABLE>
 1a4:	10000fda 	ldrdne	r0, [r0], -sl
 1a8:	10000fe0 	andne	r0, r0, r0, ror #31
 1ac:	10001376 	andne	r1, r0, r6, ror r3
 1b0:	10001378 	andne	r1, r0, r8, ror r3
 1b4:	100019f8 	strdne	r1, [r0], -r8
 1b8:	100019f8 	strdne	r1, [r0], -r8
 1bc:	10001a04 	andne	r1, r0, r4, lsl #20
 1c0:	10001a04 	andne	r1, r0, r4, lsl #20
 1c4:	10001a30 	andne	r1, r0, r0, lsr sl
 1c8:	00000001 	andeq	r0, r0, r1
 1cc:	00000001 	andeq	r0, r0, r1
 1d0:	00000001 	andeq	r0, r0, r1
 1d4:	00000001 	andeq	r0, r0, r1
 1d8:	00000001 	andeq	r0, r0, r1
 1dc:	00000001 	andeq	r0, r0, r1
 1e0:	00000001 	andeq	r0, r0, r1
 1e4:	00000001 	andeq	r0, r0, r1
 1e8:	00000001 	andeq	r0, r0, r1
 1ec:	00000001 	andeq	r0, r0, r1
	...
 1f8:	10001a30 	andne	r1, r0, r0, lsr sl
 1fc:	10001a44 	andne	r1, r0, r4, asr #20
 200:	00000001 	andeq	r0, r0, r1
 204:	00000001 	andeq	r0, r0, r1
 208:	10001a44 	andne	r1, r0, r4, asr #20
 20c:	10001a62 	andne	r1, r0, r2, ror #20
 210:	10001a64 	andne	r1, r0, r4, ror #20
 214:	10001a88 	andne	r1, r0, r8, lsl #21
 218:	00000001 	andeq	r0, r0, r1
 21c:	00000001 	andeq	r0, r0, r1
 220:	00000001 	andeq	r0, r0, r1
 224:	00000001 	andeq	r0, r0, r1
	...
 230:	10001a88 	andne	r1, r0, r8, lsl #21
 234:	10001ab4 			; <UNDEFINED> instruction: 0x10001ab4
 238:	10001ab4 			; <UNDEFINED> instruction: 0x10001ab4
 23c:	10001aea 	andne	r1, r0, sl, ror #21
 240:	10001aec 	andne	r1, r0, ip, ror #21
 244:	10001b04 	andne	r1, r0, r4, lsl #22
 248:	10001b04 	andne	r1, r0, r4, lsl #22
 24c:	10001b54 	andne	r1, r0, r4, asr fp
 250:	10001b54 	andne	r1, r0, r4, asr fp
 254:	10001bd0 	ldrdne	r1, [r0], -r0
 258:	10001bd0 	ldrdne	r1, [r0], -r0
 25c:	10001d54 	andne	r1, r0, r4, asr sp
 260:	00000001 	andeq	r0, r0, r1
 264:	00000001 	andeq	r0, r0, r1
 268:	00000001 	andeq	r0, r0, r1
 26c:	00000001 	andeq	r0, r0, r1
	...
 278:	10001d54 	andne	r1, r0, r4, asr sp
 27c:	10001e50 	andne	r1, r0, r0, asr lr
	...
 288:	10001e50 	andne	r1, r0, r0, asr lr
 28c:	10001e6a 	andne	r1, r0, sl, ror #28
 290:	10001e6a 	andne	r1, r0, sl, ror #28
 294:	10001e70 	andne	r1, r0, r0, ror lr
 298:	00000001 	andeq	r0, r0, r1
 29c:	00000001 	andeq	r0, r0, r1
 2a0:	10001e70 	andne	r1, r0, r0, ror lr
 2a4:	10001ea2 	andne	r1, r0, r2, lsr #29
 2a8:	10001ea2 	andne	r1, r0, r2, lsr #29
 2ac:	10001ec6 	andne	r1, r0, r6, asr #29
	...
 2b8:	10001f92 	mulne	r0, r2, pc	; <UNPREDICTABLE>
 2bc:	10001fbe 			; <UNDEFINED> instruction: 0x10001fbe
 2c0:	10001fc0 	andne	r1, r0, r0, asr #31
 2c4:	10001fd2 	ldrdne	r1, [r0], -r2
	...
 2d0:	00000001 	andeq	r0, r0, r1
 2d4:	00000001 	andeq	r0, r0, r1
 2d8:	00000001 	andeq	r0, r0, r1
 2dc:	00000001 	andeq	r0, r0, r1
	...
 2e8:	00000001 	andeq	r0, r0, r1
 2ec:	00000001 	andeq	r0, r0, r1
 2f0:	00000001 	andeq	r0, r0, r1
 2f4:	00000001 	andeq	r0, r0, r1
	...
 300:	00000001 	andeq	r0, r0, r1
 304:	00000001 	andeq	r0, r0, r1
 308:	00000001 	andeq	r0, r0, r1
 30c:	00000001 	andeq	r0, r0, r1
	...
 318:	10002146 	andne	r2, r0, r6, asr #2
 31c:	1000215c 	andne	r2, r0, ip, asr r1
 320:	10002160 	andne	r2, r0, r0, ror #2
 324:	10002184 	andne	r2, r0, r4, lsl #3
 328:	100021b8 			; <UNDEFINED> instruction: 0x100021b8
 32c:	100021c8 	andne	r2, r0, r8, asr #3
	...
 338:	00000001 	andeq	r0, r0, r1
 33c:	00000001 	andeq	r0, r0, r1
 340:	00000001 	andeq	r0, r0, r1
 344:	00000001 	andeq	r0, r0, r1
 348:	00000001 	andeq	r0, r0, r1
 34c:	00000001 	andeq	r0, r0, r1
	...
 358:	00000001 	andeq	r0, r0, r1
 35c:	00000001 	andeq	r0, r0, r1
 360:	00000001 	andeq	r0, r0, r1
 364:	00000001 	andeq	r0, r0, r1
 368:	00000001 	andeq	r0, r0, r1
 36c:	00000001 	andeq	r0, r0, r1
	...
 378:	00000001 	andeq	r0, r0, r1
 37c:	00000001 	andeq	r0, r0, r1
 380:	00000001 	andeq	r0, r0, r1
 384:	00000001 	andeq	r0, r0, r1
	...
 390:	00000001 	andeq	r0, r0, r1
 394:	00000001 	andeq	r0, r0, r1
 398:	00000001 	andeq	r0, r0, r1
 39c:	00000001 	andeq	r0, r0, r1
 3a0:	10001ec6 	andne	r1, r0, r6, asr #29
 3a4:	10001ee0 	andne	r1, r0, r0, ror #29
 3a8:	10001ee0 	andne	r1, r0, r0, ror #29
 3ac:	10001f56 	andne	r1, r0, r6, asr pc
 3b0:	10001f56 	andne	r1, r0, r6, asr pc
 3b4:	10001f7a 	andne	r1, r0, sl, ror pc
 3b8:	10001f7a 	andne	r1, r0, sl, ror pc
 3bc:	10001fd2 	ldrdne	r1, [r0], -r2
 3c0:	10001fd2 	ldrdne	r1, [r0], -r2
 3c4:	10002054 	andne	r2, r0, r4, asr r0
 3c8:	10002054 	andne	r2, r0, r4, asr r0
 3cc:	100020da 	ldrdne	r2, [r0], -sl
 3d0:	100020da 	ldrdne	r2, [r0], -sl
 3d4:	100020fa 	strdne	r2, [r0], -sl
 3d8:	100020fa 	strdne	r2, [r0], -sl
 3dc:	10002138 	andne	r2, r0, r8, lsr r1
 3e0:	00000001 	andeq	r0, r0, r1
 3e4:	00000001 	andeq	r0, r0, r1
 3e8:	00000001 	andeq	r0, r0, r1
 3ec:	00000001 	andeq	r0, r0, r1
 3f0:	00000001 	andeq	r0, r0, r1
 3f4:	00000001 	andeq	r0, r0, r1
 3f8:	00000001 	andeq	r0, r0, r1
 3fc:	00000001 	andeq	r0, r0, r1
 400:	00000001 	andeq	r0, r0, r1
 404:	00000001 	andeq	r0, r0, r1
 408:	00000001 	andeq	r0, r0, r1
 40c:	00000001 	andeq	r0, r0, r1
 410:	00000001 	andeq	r0, r0, r1
 414:	00000001 	andeq	r0, r0, r1
 418:	00000001 	andeq	r0, r0, r1
 41c:	00000001 	andeq	r0, r0, r1
 420:	00000001 	andeq	r0, r0, r1
 424:	00000001 	andeq	r0, r0, r1
 428:	00000001 	andeq	r0, r0, r1
 42c:	00000001 	andeq	r0, r0, r1
 430:	00000001 	andeq	r0, r0, r1
 434:	00000001 	andeq	r0, r0, r1
 438:	10002138 	andne	r2, r0, r8, lsr r1
 43c:	10002228 	andne	r2, r0, r8, lsr #4
 440:	00000001 	andeq	r0, r0, r1
 444:	00000001 	andeq	r0, r0, r1
 448:	00000001 	andeq	r0, r0, r1
 44c:	00000001 	andeq	r0, r0, r1
 450:	00000001 	andeq	r0, r0, r1
 454:	00000001 	andeq	r0, r0, r1
 458:	00000001 	andeq	r0, r0, r1
 45c:	00000001 	andeq	r0, r0, r1
 460:	00000001 	andeq	r0, r0, r1
 464:	00000001 	andeq	r0, r0, r1
 468:	00000001 	andeq	r0, r0, r1
 46c:	00000001 	andeq	r0, r0, r1
 470:	00000001 	andeq	r0, r0, r1
 474:	00000001 	andeq	r0, r0, r1
 478:	00000001 	andeq	r0, r0, r1
 47c:	00000001 	andeq	r0, r0, r1
 480:	00000001 	andeq	r0, r0, r1
 484:	00000001 	andeq	r0, r0, r1
 488:	00000001 	andeq	r0, r0, r1
 48c:	00000001 	andeq	r0, r0, r1
 490:	00000001 	andeq	r0, r0, r1
 494:	00000001 	andeq	r0, r0, r1
 498:	00000001 	andeq	r0, r0, r1
 49c:	00000001 	andeq	r0, r0, r1
 4a0:	00000001 	andeq	r0, r0, r1
 4a4:	00000001 	andeq	r0, r0, r1
 4a8:	10002228 	andne	r2, r0, r8, lsr #4
 4ac:	1000227a 	andne	r2, r0, sl, ror r2
 4b0:	00000001 	andeq	r0, r0, r1
 4b4:	00000001 	andeq	r0, r0, r1
 4b8:	00000001 	andeq	r0, r0, r1
 4bc:	00000001 	andeq	r0, r0, r1
 4c0:	00000001 	andeq	r0, r0, r1
 4c4:	00000001 	andeq	r0, r0, r1
 4c8:	00000001 	andeq	r0, r0, r1
 4cc:	00000001 	andeq	r0, r0, r1
 4d0:	00000001 	andeq	r0, r0, r1
 4d4:	00000001 	andeq	r0, r0, r1
	...
 4e0:	100024fe 	strdne	r2, [r0], -lr
 4e4:	1000251e 	andne	r2, r0, lr, lsl r5
 4e8:	10002546 	andne	r2, r0, r6, asr #10
 4ec:	10002550 	andne	r2, r0, r0, asr r5
	...
 4f8:	10002578 	andne	r2, r0, r8, ror r5
 4fc:	1000257e 	andne	r2, r0, lr, ror r5
 500:	10002580 	andne	r2, r0, r0, lsl #11
 504:	100025b2 			; <UNDEFINED> instruction: 0x100025b2
	...
 510:	00000001 	andeq	r0, r0, r1
 514:	00000001 	andeq	r0, r0, r1
 518:	00000001 	andeq	r0, r0, r1
 51c:	00000001 	andeq	r0, r0, r1
	...
 528:	00000001 	andeq	r0, r0, r1
 52c:	00000001 	andeq	r0, r0, r1
 530:	00000001 	andeq	r0, r0, r1
 534:	00000001 	andeq	r0, r0, r1
	...
 540:	10002728 	andne	r2, r0, r8, lsr #14
 544:	1000273a 	andne	r2, r0, sl, lsr r7
 548:	1000273c 	andne	r2, r0, ip, lsr r7
 54c:	1000275a 	andne	r2, r0, sl, asr r7
 550:	1000275c 	andne	r2, r0, ip, asr r7
 554:	10002776 	andne	r2, r0, r6, ror r7
 558:	1000277a 	andne	r2, r0, sl, ror r7
 55c:	10002840 	andne	r2, r0, r0, asr #16
 560:	1000284c 	andne	r2, r0, ip, asr #16
 564:	1000284e 	andne	r2, r0, lr, asr #16
	...
 570:	1000278a 	andne	r2, r0, sl, lsl #15
 574:	10002790 	mulne	r0, r0, r7
 578:	10002802 	andne	r2, r0, r2, lsl #16
 57c:	10002820 	andne	r2, r0, r0, lsr #16
	...
 588:	10002790 	mulne	r0, r0, r7
 58c:	1000279a 	mulne	r0, sl, r7
 590:	10002826 	andne	r2, r0, r6, lsr #16
 594:	10002840 	andne	r2, r0, r0, asr #16
	...
 5a0:	10002882 	andne	r2, r0, r2, lsl #17
 5a4:	10002896 	mulne	r0, r6, r8
 5a8:	1000289a 	mulne	r0, sl, r8
 5ac:	100028a6 	andne	r2, r0, r6, lsr #17
 5b0:	100028a8 	andne	r2, r0, r8, lsr #17
 5b4:	10002980 	andne	r2, r0, r0, lsl #19
 5b8:	10002982 	andne	r2, r0, r2, lsl #19
 5bc:	10002982 	andne	r2, r0, r2, lsl #19
	...
 5c8:	1000289a 	mulne	r0, sl, r8
 5cc:	100028a0 	andne	r2, r0, r0, lsr #17
 5d0:	100028b6 			; <UNDEFINED> instruction: 0x100028b6
 5d4:	100028d6 	ldrdne	r2, [r0], -r6
	...
 5e0:	100028a0 	andne	r2, r0, r0, lsr #17
 5e4:	100028a6 	andne	r2, r0, r6, lsr #17
 5e8:	100028d6 	ldrdne	r2, [r0], -r6
 5ec:	100028f4 	strdne	r2, [r0], -r4
	...
 5f8:	1000294c 	andne	r2, r0, ip, asr #18
 5fc:	10002952 	andne	r2, r0, r2, asr r9
 600:	10002964 	andne	r2, r0, r4, ror #18
 604:	10002980 	andne	r2, r0, r0, lsl #19
	...
 610:	00000001 	andeq	r0, r0, r1
 614:	00000001 	andeq	r0, r0, r1
 618:	00000001 	andeq	r0, r0, r1
 61c:	00000001 	andeq	r0, r0, r1
 620:	00000001 	andeq	r0, r0, r1
 624:	00000001 	andeq	r0, r0, r1
 628:	00000001 	andeq	r0, r0, r1
 62c:	00000001 	andeq	r0, r0, r1
	...
 638:	100029d0 	ldrdne	r2, [r0], -r0
 63c:	100029d8 	ldrdne	r2, [r0], -r8
 640:	100029ea 	andne	r2, r0, sl, ror #19
 644:	10002a04 	andne	r2, r0, r4, lsl #20
	...
 650:	10002a18 	andne	r2, r0, r8, lsl sl
 654:	10002a62 	andne	r2, r0, r2, ror #20
 658:	10002a66 	andne	r2, r0, r6, ror #20
 65c:	10002a88 	andne	r2, r0, r8, lsl #21
	...
 668:	10002a2e 	andne	r2, r0, lr, lsr #20
 66c:	10002a5e 	andne	r2, r0, lr, asr sl
 670:	10002a66 	andne	r2, r0, r6, ror #20
 674:	10002a88 	andne	r2, r0, r8, lsl #21
	...
 680:	00000001 	andeq	r0, r0, r1
 684:	00000001 	andeq	r0, r0, r1
 688:	00000001 	andeq	r0, r0, r1
 68c:	00000001 	andeq	r0, r0, r1
	...
 698:	00000001 	andeq	r0, r0, r1
 69c:	00000001 	andeq	r0, r0, r1
 6a0:	00000001 	andeq	r0, r0, r1
 6a4:	00000001 	andeq	r0, r0, r1
	...
 6b0:	10002ae6 	andne	r2, r0, r6, ror #21
 6b4:	10002b06 	andne	r2, r0, r6, lsl #22
 6b8:	10002b82 	andne	r2, r0, r2, lsl #23
 6bc:	10002b88 	andne	r2, r0, r8, lsl #23
	...
 6c8:	10002b0e 	andne	r2, r0, lr, lsl #22
 6cc:	10002b2c 	andne	r2, r0, ip, lsr #22
 6d0:	10002b88 	andne	r2, r0, r8, lsl #23
 6d4:	10002b8e 	andne	r2, r0, lr, lsl #23
	...
 6e0:	00000001 	andeq	r0, r0, r1
 6e4:	00000001 	andeq	r0, r0, r1
 6e8:	00000001 	andeq	r0, r0, r1
 6ec:	00000001 	andeq	r0, r0, r1
	...
 6f8:	00000001 	andeq	r0, r0, r1
 6fc:	00000001 	andeq	r0, r0, r1
 700:	00000001 	andeq	r0, r0, r1
 704:	00000001 	andeq	r0, r0, r1
	...
 710:	10002be6 	andne	r2, r0, r6, ror #23
 714:	10002c04 	andne	r2, r0, r4, lsl #24
 718:	10002c0c 	andne	r2, r0, ip, lsl #24
 71c:	10002c58 	andne	r2, r0, r8, asr ip
	...
 728:	00000001 	andeq	r0, r0, r1
 72c:	00000001 	andeq	r0, r0, r1
 730:	00000001 	andeq	r0, r0, r1
 734:	00000001 	andeq	r0, r0, r1
	...
 740:	00000001 	andeq	r0, r0, r1
 744:	00000001 	andeq	r0, r0, r1
 748:	00000001 	andeq	r0, r0, r1
 74c:	00000001 	andeq	r0, r0, r1
	...
 758:	00000001 	andeq	r0, r0, r1
 75c:	00000001 	andeq	r0, r0, r1
 760:	00000001 	andeq	r0, r0, r1
 764:	00000001 	andeq	r0, r0, r1
	...
 770:	10002d6e 	andne	r2, r0, lr, ror #26
 774:	10002d9c 	mulne	r0, ip, sp
 778:	10002da0 	andne	r2, r0, r0, lsr #27
 77c:	10002da0 	andne	r2, r0, r0, lsr #27
 780:	10002da0 	andne	r2, r0, r0, lsr #27
 784:	10002db0 			; <UNDEFINED> instruction: 0x10002db0
	...
 790:	00000001 	andeq	r0, r0, r1
 794:	00000001 	andeq	r0, r0, r1
 798:	1000227c 	andne	r2, r0, ip, ror r2
 79c:	100022bc 			; <UNDEFINED> instruction: 0x100022bc
 7a0:	00000001 	andeq	r0, r0, r1
 7a4:	00000001 	andeq	r0, r0, r1
 7a8:	00000001 	andeq	r0, r0, r1
 7ac:	00000001 	andeq	r0, r0, r1
 7b0:	100022bc 			; <UNDEFINED> instruction: 0x100022bc
 7b4:	100022e4 	andne	r2, r0, r4, ror #5
 7b8:	100022e4 	andne	r2, r0, r4, ror #5
 7bc:	1000237a 	andne	r2, r0, sl, ror r3
 7c0:	1000237a 	andne	r2, r0, sl, ror r3
 7c4:	100023cc 	andne	r2, r0, ip, asr #7
 7c8:	100023cc 	andne	r2, r0, ip, asr #7
 7cc:	10002434 	andne	r2, r0, r4, lsr r4
 7d0:	10002434 	andne	r2, r0, r4, lsr r4
 7d4:	100024f0 	strdne	r2, [r0], -r0
 7d8:	100024f0 	strdne	r2, [r0], -r0
 7dc:	10002552 	andne	r2, r0, r2, asr r5
 7e0:	10002552 	andne	r2, r0, r2, asr r5
 7e4:	10002576 	andne	r2, r0, r6, ror r5
 7e8:	10002578 	andne	r2, r0, r8, ror r5
 7ec:	100025c4 	andne	r2, r0, r4, asr #11
 7f0:	100025c4 	andne	r2, r0, r4, asr #11
 7f4:	1000266c 	andne	r2, r0, ip, ror #12
 7f8:	1000266c 	andne	r2, r0, ip, ror #12
 7fc:	10002694 	mulne	r0, r4, r6
 800:	10002694 	mulne	r0, r4, r6
 804:	100026b6 			; <UNDEFINED> instruction: 0x100026b6
 808:	00000001 	andeq	r0, r0, r1
 80c:	00000001 	andeq	r0, r0, r1
 810:	00000001 	andeq	r0, r0, r1
 814:	00000001 	andeq	r0, r0, r1
 818:	00000001 	andeq	r0, r0, r1
 81c:	00000001 	andeq	r0, r0, r1
 820:	00000001 	andeq	r0, r0, r1
 824:	00000001 	andeq	r0, r0, r1
 828:	00000001 	andeq	r0, r0, r1
 82c:	00000001 	andeq	r0, r0, r1
 830:	00000001 	andeq	r0, r0, r1
 834:	00000001 	andeq	r0, r0, r1
 838:	00000001 	andeq	r0, r0, r1
 83c:	00000001 	andeq	r0, r0, r1
 840:	00000001 	andeq	r0, r0, r1
 844:	00000001 	andeq	r0, r0, r1
 848:	00000001 	andeq	r0, r0, r1
 84c:	00000001 	andeq	r0, r0, r1
 850:	00000001 	andeq	r0, r0, r1
 854:	00000001 	andeq	r0, r0, r1
 858:	100026b8 			; <UNDEFINED> instruction: 0x100026b8
 85c:	100026c8 	andne	r2, r0, r8, asr #13
 860:	100026c8 	andne	r2, r0, r8, asr #13
 864:	100026d4 	ldrdne	r2, [r0], -r4
 868:	00000001 	andeq	r0, r0, r1
 86c:	00000001 	andeq	r0, r0, r1
 870:	100026d4 	ldrdne	r2, [r0], -r4
 874:	100026e0 	andne	r2, r0, r0, ror #13
 878:	00000001 	andeq	r0, r0, r1
 87c:	00000001 	andeq	r0, r0, r1
 880:	00000001 	andeq	r0, r0, r1
 884:	00000001 	andeq	r0, r0, r1
 888:	00000001 	andeq	r0, r0, r1
 88c:	00000001 	andeq	r0, r0, r1
 890:	00000001 	andeq	r0, r0, r1
 894:	00000001 	andeq	r0, r0, r1
 898:	100026e0 	andne	r2, r0, r0, ror #13
 89c:	1000271c 	andne	r2, r0, ip, lsl r7
 8a0:	1000271c 	andne	r2, r0, ip, lsl r7
 8a4:	1000287c 	andne	r2, r0, ip, ror r8
 8a8:	1000287c 	andne	r2, r0, ip, ror r8
 8ac:	100029ac 	andne	r2, r0, ip, lsr #19
 8b0:	00000001 	andeq	r0, r0, r1
 8b4:	00000001 	andeq	r0, r0, r1
 8b8:	100029ac 	andne	r2, r0, ip, lsr #19
 8bc:	100029ca 	andne	r2, r0, sl, asr #19
 8c0:	100029cc 	andne	r2, r0, ip, asr #19
 8c4:	10002a04 	andne	r2, r0, r4, lsl #20
 8c8:	00000001 	andeq	r0, r0, r1
 8cc:	00000001 	andeq	r0, r0, r1
 8d0:	00000001 	andeq	r0, r0, r1
 8d4:	00000001 	andeq	r0, r0, r1
 8d8:	00000001 	andeq	r0, r0, r1
 8dc:	00000001 	andeq	r0, r0, r1
 8e0:	00000001 	andeq	r0, r0, r1
 8e4:	00000001 	andeq	r0, r0, r1
 8e8:	00000001 	andeq	r0, r0, r1
 8ec:	00000001 	andeq	r0, r0, r1
 8f0:	00000001 	andeq	r0, r0, r1
 8f4:	00000001 	andeq	r0, r0, r1
 8f8:	00000001 	andeq	r0, r0, r1
 8fc:	00000001 	andeq	r0, r0, r1
 900:	10002a04 	andne	r2, r0, r4, lsl #20
 904:	10002a88 	andne	r2, r0, r8, lsl #21
 908:	00000001 	andeq	r0, r0, r1
 90c:	00000001 	andeq	r0, r0, r1
 910:	10002a88 	andne	r2, r0, r8, lsl #21
 914:	10002aa4 	andne	r2, r0, r4, lsr #21
 918:	00000001 	andeq	r0, r0, r1
 91c:	00000001 	andeq	r0, r0, r1
 920:	10002aa4 	andne	r2, r0, r4, lsr #21
 924:	10002ae0 	andne	r2, r0, r0, ror #21
 928:	10002ae0 	andne	r2, r0, r0, ror #21
 92c:	10002bc4 	andne	r2, r0, r4, asr #23
 930:	00000001 	andeq	r0, r0, r1
 934:	00000001 	andeq	r0, r0, r1
 938:	00000001 	andeq	r0, r0, r1
 93c:	00000001 	andeq	r0, r0, r1
 940:	10002bc4 	andne	r2, r0, r4, asr #23
 944:	10002bdc 	ldrdne	r2, [r0], -ip
 948:	10002bdc 	ldrdne	r2, [r0], -ip
 94c:	10002c58 	andne	r2, r0, r8, asr ip
 950:	10002c58 	andne	r2, r0, r8, asr ip
 954:	10002c64 	andne	r2, r0, r4, ror #24
 958:	10002c64 	andne	r2, r0, r4, ror #24
 95c:	10002cac 	andne	r2, r0, ip, lsr #25
 960:	00000001 	andeq	r0, r0, r1
 964:	00000001 	andeq	r0, r0, r1
 968:	00000001 	andeq	r0, r0, r1
 96c:	00000001 	andeq	r0, r0, r1
 970:	00000001 	andeq	r0, r0, r1
 974:	00000001 	andeq	r0, r0, r1
 978:	00000001 	andeq	r0, r0, r1
 97c:	00000001 	andeq	r0, r0, r1
 980:	00000001 	andeq	r0, r0, r1
 984:	00000001 	andeq	r0, r0, r1
 988:	10002cac 	andne	r2, r0, ip, lsr #25
 98c:	10002d2c 	andne	r2, r0, ip, lsr #26
 990:	00000001 	andeq	r0, r0, r1
 994:	00000001 	andeq	r0, r0, r1
 998:	00000001 	andeq	r0, r0, r1
 99c:	00000001 	andeq	r0, r0, r1
 9a0:	00000001 	andeq	r0, r0, r1
 9a4:	00000001 	andeq	r0, r0, r1
 9a8:	00000001 	andeq	r0, r0, r1
 9ac:	00000001 	andeq	r0, r0, r1
 9b0:	00000001 	andeq	r0, r0, r1
 9b4:	00000001 	andeq	r0, r0, r1
 9b8:	00000001 	andeq	r0, r0, r1
 9bc:	00000001 	andeq	r0, r0, r1
 9c0:	00000001 	andeq	r0, r0, r1
 9c4:	00000001 	andeq	r0, r0, r1
 9c8:	00000001 	andeq	r0, r0, r1
 9cc:	00000001 	andeq	r0, r0, r1
 9d0:	00000001 	andeq	r0, r0, r1
 9d4:	00000001 	andeq	r0, r0, r1
 9d8:	00000001 	andeq	r0, r0, r1
 9dc:	00000001 	andeq	r0, r0, r1
 9e0:	10002d2c 	andne	r2, r0, ip, lsr #26
 9e4:	10002d44 	andne	r2, r0, r4, asr #26
 9e8:	10002d44 	andne	r2, r0, r4, asr #26
 9ec:	10002db0 			; <UNDEFINED> instruction: 0x10002db0
 9f0:	10002db0 			; <UNDEFINED> instruction: 0x10002db0
 9f4:	10002df8 	strdne	r2, [r0], -r8
 9f8:	10002df8 	strdne	r2, [r0], -r8
 9fc:	10002e10 	andne	r2, r0, r0, lsl lr
 a00:	00000001 	andeq	r0, r0, r1
 a04:	00000001 	andeq	r0, r0, r1
	...
 a10:	10002e10 	andne	r2, r0, r0, lsl lr
 a14:	10002e30 	andne	r2, r0, r0, lsr lr
 a18:	10002e30 	andne	r2, r0, r0, lsr lr
 a1c:	10002e78 	andne	r2, r0, r8, ror lr
 a20:	10002e78 	andne	r2, r0, r8, ror lr
 a24:	10002ea0 	andne	r2, r0, r0, lsr #29
 a28:	10002ea0 	andne	r2, r0, r0, lsr #29
 a2c:	10002ee0 	andne	r2, r0, r0, ror #29
 a30:	10002ee0 	andne	r2, r0, r0, ror #29
 a34:	10002f10 	andne	r2, r0, r0, lsl pc
 a38:	10002f10 	andne	r2, r0, r0, lsl pc
 a3c:	10002f3c 	andne	r2, r0, ip, lsr pc
 a40:	10002f3c 	andne	r2, r0, ip, lsr pc
 a44:	10002fa4 	andne	r2, r0, r4, lsr #31
 a48:	10002fa4 	andne	r2, r0, r4, lsr #31
 a4c:	1000309c 	mulne	r0, ip, r0
 a50:	1000309c 	mulne	r0, ip, r0
 a54:	100030b2 	strhne	r3, [r0], -r2
 a58:	100030b4 	strhne	r3, [r0], -r4
 a5c:	10003114 	andne	r3, r0, r4, lsl r1
 a60:	00000001 	andeq	r0, r0, r1
 a64:	00000001 	andeq	r0, r0, r1
 a68:	10003114 	andne	r3, r0, r4, lsl r1
 a6c:	10003170 	andne	r3, r0, r0, ror r1
 a70:	00000001 	andeq	r0, r0, r1
 a74:	00000001 	andeq	r0, r0, r1
 a78:	00000001 	andeq	r0, r0, r1
 a7c:	00000001 	andeq	r0, r0, r1
 a80:	00000001 	andeq	r0, r0, r1
 a84:	00000001 	andeq	r0, r0, r1
 a88:	00000001 	andeq	r0, r0, r1
 a8c:	00000001 	andeq	r0, r0, r1
 a90:	00000001 	andeq	r0, r0, r1
 a94:	00000001 	andeq	r0, r0, r1
 a98:	00000001 	andeq	r0, r0, r1
 a9c:	00000001 	andeq	r0, r0, r1
 aa0:	00000001 	andeq	r0, r0, r1
 aa4:	00000001 	andeq	r0, r0, r1
 aa8:	00000001 	andeq	r0, r0, r1
 aac:	00000001 	andeq	r0, r0, r1
 ab0:	00000001 	andeq	r0, r0, r1
 ab4:	00000001 	andeq	r0, r0, r1
 ab8:	00000001 	andeq	r0, r0, r1
 abc:	00000001 	andeq	r0, r0, r1
 ac0:	00000001 	andeq	r0, r0, r1
 ac4:	00000001 	andeq	r0, r0, r1
 ac8:	00000001 	andeq	r0, r0, r1
 acc:	00000001 	andeq	r0, r0, r1
 ad0:	00000001 	andeq	r0, r0, r1
 ad4:	00000001 	andeq	r0, r0, r1
 ad8:	00000001 	andeq	r0, r0, r1
 adc:	00000001 	andeq	r0, r0, r1
 ae0:	00000001 	andeq	r0, r0, r1
 ae4:	00000001 	andeq	r0, r0, r1
 ae8:	00000001 	andeq	r0, r0, r1
 aec:	00000001 	andeq	r0, r0, r1
 af0:	00000001 	andeq	r0, r0, r1
 af4:	00000001 	andeq	r0, r0, r1
 af8:	00000001 	andeq	r0, r0, r1
 afc:	00000001 	andeq	r0, r0, r1
	...
 b08:	10003170 	andne	r3, r0, r0, ror r1
 b0c:	100031c8 	andne	r3, r0, r8, asr #3
 b10:	100031c8 	andne	r3, r0, r8, asr #3
 b14:	1000322c 	andne	r3, r0, ip, lsr #4
 b18:	1000322c 	andne	r3, r0, ip, lsr #4
 b1c:	10003300 	andne	r3, r0, r0, lsl #6
 b20:	10003300 	andne	r3, r0, r0, lsl #6
 b24:	10003350 	andne	r3, r0, r0, asr r3
 b28:	00000001 	andeq	r0, r0, r1
 b2c:	00000001 	andeq	r0, r0, r1
 b30:	00000001 	andeq	r0, r0, r1
 b34:	00000001 	andeq	r0, r0, r1
 b38:	00000001 	andeq	r0, r0, r1
 b3c:	00000001 	andeq	r0, r0, r1
 b40:	00000001 	andeq	r0, r0, r1
 b44:	00000001 	andeq	r0, r0, r1
 b48:	00000001 	andeq	r0, r0, r1
 b4c:	00000001 	andeq	r0, r0, r1
 b50:	00000001 	andeq	r0, r0, r1
 b54:	00000001 	andeq	r0, r0, r1
	...
 b60:	10003350 	andne	r3, r0, r0, asr r3
 b64:	10003368 	andne	r3, r0, r8, ror #6
 b68:	10003368 	andne	r3, r0, r8, ror #6
 b6c:	1000347c 	andne	r3, r0, ip, ror r4
 b70:	1000347c 	andne	r3, r0, ip, ror r4
 b74:	100034b8 			; <UNDEFINED> instruction: 0x100034b8
 b78:	100034b8 			; <UNDEFINED> instruction: 0x100034b8
 b7c:	100034ce 	andne	r3, r0, lr, asr #9
 b80:	100034d0 	ldrdne	r3, [r0], -r0
 b84:	100034ec 	andne	r3, r0, ip, ror #9
 b88:	100034ec 	andne	r3, r0, ip, ror #9
 b8c:	10003508 	andne	r3, r0, r8, lsl #10
 b90:	10003508 	andne	r3, r0, r8, lsl #10
 b94:	1000352a 	andne	r3, r0, sl, lsr #10
 b98:	1000352a 	andne	r3, r0, sl, lsr #10
 b9c:	1000353e 	andne	r3, r0, lr, lsr r5
 ba0:	10003540 	andne	r3, r0, r0, asr #10
 ba4:	100035d0 	ldrdne	r3, [r0], -r0
 ba8:	100035d0 	ldrdne	r3, [r0], -r0
 bac:	10003610 	andne	r3, r0, r0, lsl r6
 bb0:	00000001 	andeq	r0, r0, r1
 bb4:	00000001 	andeq	r0, r0, r1
 bb8:	00000001 	andeq	r0, r0, r1
 bbc:	00000001 	andeq	r0, r0, r1
	...
 bc8:	10003610 	andne	r3, r0, r0, lsl r6
 bcc:	10003636 	andne	r3, r0, r6, lsr r6
 bd0:	00000001 	andeq	r0, r0, r1
 bd4:	00000001 	andeq	r0, r0, r1
 bd8:	00000001 	andeq	r0, r0, r1
 bdc:	00000001 	andeq	r0, r0, r1
 be0:	00000001 	andeq	r0, r0, r1
 be4:	00000001 	andeq	r0, r0, r1
 be8:	1000363c 	andne	r3, r0, ip, lsr r6
 bec:	10003656 	andne	r3, r0, r6, asr r6
 bf0:	1000365c 	andne	r3, r0, ip, asr r6
 bf4:	10003672 	andne	r3, r0, r2, ror r6
 bf8:	10003672 	andne	r3, r0, r2, ror r6
 bfc:	10003680 	andne	r3, r0, r0, lsl #13
 c00:	10003680 	andne	r3, r0, r0, lsl #13
 c04:	100036c4 	andne	r3, r0, r4, asr #13
 c08:	100036c8 	andne	r3, r0, r8, asr #13
 c0c:	100036da 	ldrdne	r3, [r0], -sl
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
       0:	000004d3 	ldrdeq	r0, [r0], -r3
       4:	02690003 	rsbeq	r0, r9, #3
        xReturn = pdFALSE;
       8:	01020000 	mrseq	r0, (UNDEF: 2)
}
       c:	000d0efb 	strdeq	r0, [sp], -fp
    ( pxList->uxNumberOfItems ) = ( UBaseType_t ) ( pxList->uxNumberOfItems + 1U );
      10:	01010101 	tsteq	r1, r1, lsl #2
}
      14:	01000000 	mrseq	r0, (UNDEF: 0)
        if(ch == '\n' || it >= size) {
      18:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
}
      1c:	7070612f 	rsbsvc	r6, r0, pc, lsr #2
      20:	6163696c 	cmnvs	r3, ip, ror #18
      24:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
      28:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
      2c:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
      30:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
      34:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
      38:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
      3c:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
      40:	5f6d7261 	svcpl	0x006d7261
        BaseType_t xReturn = pdFAIL;
      44:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
    }
      48:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
        for (int i = 0; i < count; i++) {
      4c:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
        printf("] \r\n");
      50:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
}
      54:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
      58:	30312d69 	eorscc	r2, r1, r9, ror #26
      5c:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
      60:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
      64:	615c3031 	cmpvs	ip, r1, lsr r0
      68:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
      6c:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
      70:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
      74:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
      78:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
      7c:	63616d5c 	cmnvs	r1, #92, 26	; 0x1700
            prvUnlockQueue( pxQueue );
      80:	656e6968 	strbvs	r6, [lr, #-2408]!	; 0xfffff698
            ( void ) xTaskResumeAll();
      84:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
      88:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
      8c:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
      90:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
        taskENTER_CRITICAL();
      94:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
            if( uxSemaphoreCount > ( UBaseType_t ) 0 )
      98:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
                if( xTicksToWait == ( TickType_t ) 0 )
      9c:	5f6d7261 	svcpl	0x006d7261
      a0:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
                else if( xEntryTimeSet == pdFALSE )
      a4:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
        taskEXIT_CRITICAL();
      a8:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
        vTaskSuspendAll();
      ac:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
        prvLockQueue( pxQueue );
      b0:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
      b4:	30312d69 	eorscc	r2, r1, r9, ror #26
      b8:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
      bc:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
      c0:	615c3031 	cmpvs	ip, r1, lsr r0
      c4:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
      c8:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
      cc:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
        if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
      d0:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
      d4:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
      d8:	7379735c 	cmnvc	r9, #92, 6	; 0x70000001
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
      dc:	2f2e2e00 	svccs	0x002e2e00
      e0:	76697244 	strbtvc	r7, [r9], -r4, asr #4
                    if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
      e4:	2f737265 	svccs	0x00737265
      e8:	49534d43 	ldmdbmi	r3, {r0, r1, r6, r8, sl, fp, lr}^
                vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
      ec:	2f355f53 	svccs	0x00355f53
      f0:	49534d43 	ldmdbmi	r3, {r0, r1, r6, r8, sl, fp, lr}^
                prvUnlockQueue( pxQueue );
      f4:	6f432f53 	svcvs	0x00432f53
      f8:	492f6572 	stmdbmi	pc!, {r1, r4, r5, r6, r8, sl, sp, lr}	; <UNPREDICTABLE>
                if( xTaskResumeAll() == pdFALSE )
      fc:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
     100:	2e006564 	cfsh32cs	mvfx6, mvfx0, #52
                    taskYIELD_WITHIN_API();
     104:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
                    if( xInheritanceOccurred != pdFALSE )
     108:	2f2e2e2f 	svccs	0x002e2e2f
                return errQUEUE_EMPTY;
     10c:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
                        taskENTER_CRITICAL();
     110:	2f736f74 	svccs	0x00736f74
                            uxHighestWaitingPriority = prvGetDisinheritPriorityAfterTimeout( pxQueue );
     114:	65657246 	strbvs	r7, [r5, #-582]!	; 0xfffffdba
     118:	534f5452 	movtpl	r5, #62546	; 0xf452
                            vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
     11c:	726f702f 	rsbvc	r7, pc, #47	; 0x2f
                        taskEXIT_CRITICAL();
     120:	6c626174 	stfvse	f6, [r2], #-464	; 0xfffffe30
     124:	43472f65 	movtmi	r2, #32613	; 0x7f65
     128:	52412f43 	subpl	r2, r1, #268	; 0x10c
     12c:	4d435f4d 	stclmi	15, cr5, [r3, #-308]	; 0xfffffecc
     130:	4e5f3333 	mrcmi	3, 2, r3, cr15, cr3, {1}
     134:	6e2f5a54 			; <UNDEFINED> instruction: 0x6e2f5a54
     138:	735f6e6f 	cmpvc	pc, #1776	; 0x6f0
     13c:	72756365 	rsbsvc	r6, r5, #-1811939327	; 0x94000001
     140:	2e2e0065 	cdpcs	0, 2, cr0, cr14, cr5, {3}
     144:	2f2e2e2f 	svccs	0x002e2e2f
     148:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 98 <__STACKSEAL_SIZE+0x98>
     14c:	74726269 	ldrbtvc	r6, [r2], #-617	; 0xfffffd97
     150:	462f736f 	strtmi	r7, [pc], -pc, ror #6
     154:	52656572 	rsbpl	r6, r5, #478150656	; 0x1c800000
     158:	2f534f54 	svccs	0x00534f54
     15c:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
     160:	00656475 	rsbeq	r6, r5, r5, ror r4
     164:	432f2e2e 			; <UNDEFINED> instruction: 0x432f2e2e
     168:	2f65726f 	svccs	0x0065726f
     16c:	00636e49 	rsbeq	r6, r3, r9, asr #28
     170:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
     174:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
     178:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
     17c:	6c697475 	cfstrdvs	mvd7, [r9], #-468	; 0xfffffe2c
     180:	61662f73 	smcvs	25331	; 0x62f3
     184:	2d746c75 	ldclcs	12, cr6, [r4, #-468]!	; 0xfffffe2c
     188:	706d7564 	rsbvc	r7, sp, r4, ror #10
     18c:	636e692f 	cmnvs	lr, #770048	; 0xbc000
     190:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
     194:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
     198:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
     19c:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
     1a0:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
     1a4:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
     1a8:	5f6d7261 	svcpl	0x006d7261
     1ac:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
     1b0:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
     1b4:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
     1b8:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
     1bc:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
     1c0:	30312d69 	eorscc	r2, r1, r9, ror #26
     1c4:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
     1c8:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
     1cc:	615c3031 	cmpvs	ip, r1, lsr r0
     1d0:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
     1d4:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
     1d8:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     1dc:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
     1e0:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
     1e4:	616d0000 	cmnvs	sp, r0
     1e8:	632e6e69 			; <UNDEFINED> instruction: 0x632e6e69
     1ec:	00000100 	andeq	r0, r0, r0, lsl #2
     1f0:	6665645f 			; <UNDEFINED> instruction: 0x6665645f
     1f4:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
     1f8:	7079745f 	rsbsvc	r7, r9, pc, asr r4
     1fc:	682e7365 	stmdavs	lr!, {r0, r2, r5, r6, r8, r9, ip, sp, lr}
     200:	00000200 	andeq	r0, r0, r0, lsl #4
     204:	6474735f 	ldrbtvs	r7, [r4], #-863	; 0xfffffca1
     208:	2e746e69 	cdpcs	14, 7, cr6, cr4, cr9, {3}
     20c:	00030068 	andeq	r0, r3, r8, rrx
     210:	726f6300 	rsbvc	r6, pc, #0, 6
     214:	6d635f65 	stclvs	15, cr5, [r3, #-404]!	; 0xfffffe6c
     218:	682e3333 	stmdavs	lr!, {r0, r1, r4, r5, r8, r9, ip, sp}
     21c:	00000400 	andeq	r0, r0, r0, lsl #8
     220:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
     224:	7263616d 	rsbvc	r6, r3, #1073741851	; 0x4000001b
     228:	6d6f636f 	stclvs	3, cr6, [pc, #-444]!	; 74 <__STACKSEAL_SIZE+0x74>
     22c:	2e6e6f6d 	cdpcs	15, 6, cr6, cr14, cr13, {3}
     230:	00050068 	andeq	r0, r5, r8, rrx
     234:	73617400 	cmnvc	r1, #0, 8
     238:	00682e6b 	rsbeq	r2, r8, fp, ror #28
     23c:	75000006 	strvc	r0, [r0, #-6]
     240:	2e747261 	cdpcs	2, 7, cr7, cr4, cr1, {3}
     244:	00070068 	andeq	r0, r7, r8, rrx
     248:	75616600 	strbvc	r6, [r1, #-1536]!	; 0xfffffa00
     24c:	642d746c 	strtvs	r7, [sp], #-1132	; 0xfffffb94
     250:	2e706d75 	mrccs	13, 3, r6, cr0, cr5, {3}
     254:	00080068 	andeq	r0, r8, r8, rrx
     258:	64747300 	ldrbtvs	r7, [r4], #-768	; 0xfffffd00
     25c:	682e6f69 	stmdavs	lr!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}
     260:	00000900 	andeq	r0, r0, r0, lsl #18
     264:	6975623c 	ldmdbvs	r5!, {r2, r3, r4, r5, r9, sp, lr}^
     268:	692d746c 	pushvs	{r2, r3, r5, r6, sl, ip, sp, lr}
     26c:	00003e6e 	andeq	r3, r0, lr, ror #28
     270:	05000000 	streq	r0, [r0, #-0]
     274:	02050022 	andeq	r0, r5, #34	; 0x22
     278:	10000800 	andne	r0, r0, r0, lsl #16
     27c:	0100e503 	tsteq	r0, r3, lsl #10
     280:	132f0505 			; <UNDEFINED> instruction: 0x132f0505
     284:	060f0513 			; <UNDEFINED> instruction: 0x060f0513
     288:	06050501 	streq	r0, [r5], -r1, lsl #10
     28c:	060805ad 	streq	r0, [r8], -sp, lsr #11
     290:	06090501 	streq	r0, [r9], -r1, lsl #10
     294:	0520063f 	streq	r0, [r0, #-1599]!	; 0xfffff9c1
     298:	09053001 	stmdbeq	r5, {r0, ip, sp}
     29c:	2e063806 	cdpcs	8, 0, cr3, cr6, cr6, {0}
     2a0:	01000a02 	tsteq	r0, r2, lsl #20
     2a4:	002f0501 	eoreq	r0, pc, r1, lsl #10
     2a8:	08440205 	stmdaeq	r4, {r0, r2, r9}^
     2ac:	de031000 	cdple	0, 0, cr1, cr3, cr0, {0}
     2b0:	01060100 	mrseq	r0, (UNDEF: 22)
     2b4:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
     2b8:	21060104 	tstcs	r6, r4, lsl #2
     2bc:	02000905 	andeq	r0, r0, #81920	; 0x14000
     2c0:	00130104 	andseq	r0, r3, r4, lsl #2
     2c4:	4b010402 	blmi	412d4 <__HEAP_SIZE+0x402d4>
     2c8:	02000a05 	andeq	r0, r0, #20480	; 0x5000
     2cc:	023a0104 	eorseq	r0, sl, #4, 2
     2d0:	01010004 	tsteq	r1, r4
     2d4:	05002605 	streq	r2, [r0, #-1541]	; 0xfffff9fb
     2d8:	00000002 	andeq	r0, r0, r2
     2dc:	010e0300 	mrseq	r0, ELR_hyp
     2e0:	05210505 	streq	r0, [r1, #-1285]!	; 0xfffffafb
     2e4:	023d0601 	eorseq	r0, sp, #1048576	; 0x100000
     2e8:	01010004 	tsteq	r1, r4
     2ec:	05001c05 	streq	r1, [r0, #-3077]	; 0xfffff3fb
     2f0:	00000002 	andeq	r0, r0, r2
     2f4:	01120300 	tsteq	r2, r0, lsl #6
     2f8:	05210505 	streq	r0, [r1, #-1285]!	; 0xfffffafb
     2fc:	023d0601 	eorseq	r0, sp, #1048576	; 0x100000
     300:	01010004 	tsteq	r1, r4
     304:	05002305 	streq	r2, [r0, #-773]	; 0xfffffcfb
     308:	00000002 	andeq	r0, r0, r2
     30c:	01160300 	tsteq	r6, r0, lsl #6
     310:	14210505 	strtne	r0, [r1], #-1285	; 0xfffffafb
     314:	01060e05 	tsteq	r6, r5, lsl #28
     318:	59060505 	stmdbpl	r6, {r0, r2, r8, sl}
     31c:	06010513 			; <UNDEFINED> instruction: 0x06010513
     320:	0006024b 	andeq	r0, r6, fp, asr #4
     324:	22050101 	andcs	r0, r5, #1073741824	; 0x40000000
     328:	00020500 	andeq	r0, r2, r0, lsl #10
     32c:	03000000 	movweq	r0, #0
     330:	0505011e 	streq	r0, [r5, #-286]	; 0xfffffee2
     334:	1205132f 	andne	r1, r5, #-1140850688	; 0xbc000000
     338:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     33c:	0e052f06 	cdpeq	15, 0, cr2, cr5, cr6, {0}
     340:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     344:	05135a06 	ldreq	r5, [r3, #-2566]	; 0xfffff5fa
     348:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
     34c:	0505200b 	streq	r2, [r5, #-11]
     350:	13672106 	cmnne	r7, #-2147483647	; 0x80000001
     354:	01060d05 	tsteq	r6, r5, lsl #26
     358:	05200b05 	streq	r0, [r0, #-2821]!	; 0xfffff4fb
     35c:	59210605 	stmdbpl	r1!, {r0, r2, r9, sl}
     360:	060d0513 			; <UNDEFINED> instruction: 0x060d0513
     364:	2e0b0501 	cfsh32cs	mvfx0, mvfx11, #1
     368:	21060505 	tstcs	r6, r5, lsl #10
     36c:	59060105 	stmdbpl	r6, {r0, r2, r8}
     370:	01000602 	tsteq	r0, r2, lsl #12
     374:	001b0501 	andseq	r0, fp, r1, lsl #10
     378:	00000205 	andeq	r0, r0, r5, lsl #4
     37c:	2e030000 	cdpcs	0, 0, cr0, cr3, cr0, {0}
     380:	2f050501 	svccs	0x00050501
     384:	01061205 	tsteq	r6, r5, lsl #4
     388:	67060505 	strvs	r0, [r6, -r5, lsl #10]
     38c:	01061a05 	tsteq	r6, r5, lsl #20
     390:	3d060505 	cfstr32cc	mvfx0, [r6, #-20]	; 0xffffffec
     394:	01061a05 	tsteq	r6, r5, lsl #20
     398:	0605052e 	streq	r0, [r5], -lr, lsr #10
     39c:	06110521 	ldreq	r0, [r1], -r1, lsr #10
     3a0:	05053c01 	streq	r3, [r5, #-3073]	; 0xfffff3ff
     3a4:	08052f06 	stmdaeq	r5, {r1, r2, r8, r9, sl, fp, sp}
     3a8:	09050106 	stmdbeq	r5, {r1, r2, r8}
     3ac:	20063106 	andcs	r3, r6, r6, lsl #2
     3b0:	0e052f06 	cdpeq	15, 0, cr2, cr5, cr6, {0}
     3b4:	06120501 	ldreq	r0, [r2], -r1, lsl #10
     3b8:	20090501 	andcs	r0, r9, r1, lsl #10
     3bc:	060f0620 	streq	r0, [pc], -r0, lsr #12
     3c0:	000d052e 	andeq	r0, sp, lr, lsr #10
     3c4:	06030402 	streq	r0, [r3], -r2, lsl #8
     3c8:	00240540 	eoreq	r0, r4, r0, asr #10
     3cc:	57030402 	strpl	r0, [r3, -r2, lsl #8]
     3d0:	02002505 	andeq	r2, r0, #20971520	; 0x1400000
     3d4:	01060304 	tsteq	r6, r4, lsl #6
     3d8:	02001905 	andeq	r1, r0, #81920	; 0x14000
     3dc:	20060104 	andcs	r0, r6, r4, lsl #2
     3e0:	02000905 	andeq	r0, r0, #81920	; 0x14000
     3e4:	01060104 	tsteq	r6, r4, lsl #2
     3e8:	01053106 	tsteq	r5, r6, lsl #2
     3ec:	022e3e06 	eoreq	r3, lr, #6, 28	; 0x60
     3f0:	01010008 	tsteq	r1, r8
     3f4:	05001205 	streq	r1, [r0, #-517]	; 0xfffffdfb
     3f8:	00000002 	andeq	r0, r0, r2
     3fc:	013e0300 	teqeq	lr, r0, lsl #6
     400:	4b210505 	blmi	84181c <__RAM_SIZE+0x74181c>
     404:	06010530 			; <UNDEFINED> instruction: 0x06010530
     408:	0005022f 	andeq	r0, r5, pc, lsr #4
     40c:	12050101 	andne	r0, r5, #1073741824	; 0x40000000
     410:	00020500 	andeq	r0, r2, r0, lsl #10
     414:	03000000 	movweq	r0, #0
     418:	050100c5 	streq	r0, [r1, #-197]	; 0xffffff3b
     41c:	054b2105 	strbeq	r2, [fp, #-261]	; 0xfffffefb
     420:	022f0601 	eoreq	r0, pc, #1048576	; 0x100000
     424:	01010005 	tsteq	r1, r5
     428:	05001205 	streq	r1, [r0, #-517]	; 0xfffffdfb
     42c:	00000002 	andeq	r0, r0, r2
     430:	00ca0300 	sbceq	r0, sl, r0, lsl #6
     434:	21050501 	tstcs	r5, r1, lsl #10
     438:	0601054b 	streq	r0, [r1], -fp, asr #10
     43c:	0005022f 	andeq	r0, r5, pc, lsr #4
     440:	12050101 	andne	r0, r5, #1073741824	; 0x40000000
     444:	00020500 	andeq	r0, r2, r0, lsl #10
     448:	03000000 	movweq	r0, #0
     44c:	050100cf 	streq	r0, [r1, #-207]	; 0xffffff31
     450:	054b2105 	strbeq	r2, [fp, #-261]	; 0xfffffefb
     454:	022f0601 	eoreq	r0, pc, #1048576	; 0x100000
     458:	01010005 	tsteq	r1, r5
     45c:	05001205 	streq	r1, [r0, #-517]	; 0xfffffdfb
     460:	00000002 	andeq	r0, r0, r2
     464:	00d40300 	sbcseq	r0, r4, r0, lsl #6
     468:	21050501 	tstcs	r5, r1, lsl #10
     46c:	0601054b 	streq	r0, [r1], -fp, asr #10
     470:	0005022f 	andeq	r0, r5, pc, lsr #4
     474:	12050101 	andne	r0, r5, #1073741824	; 0x40000000
     478:	00020500 	andeq	r0, r2, r0, lsl #10
     47c:	03000000 	movweq	r0, #0
     480:	050100d9 	streq	r0, [r1, #-217]	; 0xffffff27
     484:	054b2105 	strbeq	r2, [fp, #-261]	; 0xfffffefb
     488:	022f0601 	eoreq	r0, pc, #1048576	; 0x100000
     48c:	01010005 	tsteq	r1, r5
     490:	05001005 	streq	r1, [r0, #-5]
     494:	00085c02 	andeq	r5, r8, r2, lsl #24
     498:	00f00310 	rscseq	r0, r0, r0, lsl r3
     49c:	21050501 	tstcs	r5, r1, lsl #10
     4a0:	2f3d3013 	svccs	0x003d3013
     4a4:	29060905 	stmdbcs	r6, {r0, r2, r8, fp}
     4a8:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
     4ac:	28060104 	stmdacs	r6, {r2, r8}
     4b0:	02000905 	andeq	r0, r0, #81920	; 0x14000
     4b4:	00130104 	andseq	r0, r3, r4, lsl #2
     4b8:	21010402 	tstcs	r1, r2, lsl #8
     4bc:	01040200 	mrseq	r0, R12_usr
     4c0:	0b052006 	bleq	1484e0 <__RAM_SIZE+0x484e0>
     4c4:	01040200 	mrseq	r0, R12_usr
     4c8:	09053a06 	stmdbeq	r5, {r1, r2, r9, fp, ip, sp}
     4cc:	01040200 	mrseq	r0, R12_usr
     4d0:	06021406 	streq	r1, [r2], -r6, lsl #8
     4d4:	d1010100 	mrsle	r0, (UNDEF: 17)
     4d8:	03000001 	movweq	r0, #1
     4dc:	00018100 	andeq	r8, r1, r0, lsl #2
     4e0:	fb010200 	blx	40cea <__HEAP_SIZE+0x3fcea>
     4e4:	01000d0e 	tsteq	r0, lr, lsl #26
     4e8:	00010101 	andeq	r0, r1, r1, lsl #2
     4ec:	00010000 	andeq	r0, r1, r0
     4f0:	2f2e0100 	svccs	0x002e0100
     4f4:	6c707061 	ldclvs	0, cr7, [r0], #-388	; 0xfffffe7c
     4f8:	74616369 	strbtvc	r6, [r1], #-873	; 0xfffffc97
     4fc:	006e6f69 	rsbeq	r6, lr, r9, ror #30
     500:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
     504:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
     508:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
     50c:	705c6e6f 	subsvc	r6, ip, pc, ror #28
     510:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
     514:	615c6d61 	cmpvs	ip, r1, ror #26
     518:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
     51c:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
     520:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
     524:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
     528:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
     52c:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     530:	2e30312d 	rsfcssp	f3, f0, #5.0
     534:	30322d33 	eorscc	r2, r2, r3, lsr sp
     538:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
     53c:	72615c30 	rsbvc	r5, r1, #48, 24	; 0x3000
     540:	6f6e2d6d 	svcvs	0x006e2d6d
     544:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
     548:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
     54c:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
     550:	5c656475 	cfstrdpl	mvd6, [r5], #-468	; 0xfffffe2c
     554:	6863616d 	stmdavs	r3!, {r0, r2, r3, r5, r6, r8, sp, lr}^
     558:	00656e69 	rsbeq	r6, r5, r9, ror #28
     55c:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
     560:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
     564:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
     568:	705c6e6f 	subsvc	r6, ip, pc, ror #28
     56c:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
     570:	615c6d61 	cmpvs	ip, r1, ror #26
     574:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
     578:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
     57c:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
     580:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
     584:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
     588:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     58c:	2e30312d 	rsfcssp	f3, f0, #5.0
     590:	30322d33 	eorscc	r2, r2, r3, lsr sp
     594:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
     598:	72615c30 	rsbvc	r5, r1, #48, 24	; 0x3000
     59c:	6f6e2d6d 	svcvs	0x006e2d6d
     5a0:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
     5a4:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
     5a8:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
     5ac:	5c656475 	cfstrdpl	mvd6, [r5], #-468	; 0xfffffe2c
     5b0:	00737973 	rsbseq	r7, r3, r3, ror r9
     5b4:	442f2e2e 	strtmi	r2, [pc], #-3630	; 5bc <__STACKSEAL_SIZE+0x5bc>
     5b8:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
     5bc:	432f7372 			; <UNDEFINED> instruction: 0x432f7372
     5c0:	5349534d 	movtpl	r5, #37709	; 0x934d
     5c4:	432f355f 			; <UNDEFINED> instruction: 0x432f355f
     5c8:	5349534d 	movtpl	r5, #37709	; 0x934d
     5cc:	726f432f 	rsbvc	r4, pc, #-1140850688	; 0xbc000000
     5d0:	6e492f65 	cdpvs	15, 4, cr2, cr9, cr5, {3}
     5d4:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
     5d8:	2e2e0065 	cdpcs	0, 2, cr0, cr14, cr5, {3}
     5dc:	6972442f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, sl, lr}^
     5e0:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
     5e4:	534d432f 	movtpl	r4, #54063	; 0xd32f
     5e8:	355f5349 	ldrbcc	r5, [pc, #-841]	; 2a7 <__STACKSEAL_SIZE+0x2a7>
     5ec:	7665442f 	strbtvc	r4, [r5], -pc, lsr #8
     5f0:	2f656369 	svccs	0x00656369
     5f4:	2f4d5241 	svccs	0x004d5241
     5f8:	434d5241 	movtmi	r5, #53825	; 0xd241
     5fc:	2f33334d 	svccs	0x0033334d
     600:	6c636e49 	stclvs	14, cr6, [r3], #-292	; 0xfffffedc
     604:	00656475 	rsbeq	r6, r5, r5, ror r4
     608:	73797300 	cmnvc	r9, #0, 6
     60c:	5f6d6574 	svcpl	0x006d6574
     610:	434d5241 	movtmi	r5, #53825	; 0xd241
     614:	2e33334d 	cdpcs	3, 3, cr3, cr3, cr13, {2}
     618:	00010063 	andeq	r0, r1, r3, rrx
     61c:	65645f00 	strbvs	r5, [r4, #-3840]!	; 0xfffff100
     620:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
     624:	79745f74 	ldmdbvc	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     628:	2e736570 	mrccs	5, 3, r6, cr3, cr0, {3}
     62c:	00020068 	andeq	r0, r2, r8, rrx
     630:	74735f00 	ldrbtvc	r5, [r3], #-3840	; 0xfffff100
     634:	746e6964 	strbtvc	r6, [lr], #-2404	; 0xfffff69c
     638:	0300682e 	movweq	r6, #2094	; 0x82e
     63c:	6f630000 	svcvs	0x00630000
     640:	635f6572 	cmpvs	pc, #478150656	; 0x1c800000
     644:	2e33336d 	cdpcs	3, 3, cr3, cr3, cr13, {3}
     648:	00040068 	andeq	r0, r4, r8, rrx
     64c:	73797300 	cmnvc	r9, #0, 6
     650:	5f6d6574 	svcpl	0x006d6574
     654:	434d5241 	movtmi	r5, #53825	; 0xd241
     658:	2e33334d 	cdpcs	3, 3, cr3, cr3, cr13, {2}
     65c:	00050068 	andeq	r0, r5, r8, rrx
     660:	01050000 	mrseq	r0, (UNDEF: 5)
     664:	00020500 	andeq	r0, r2, r0, lsl #10
     668:	03000000 	movweq	r0, #0
     66c:	050100c4 	streq	r0, [r1, #-196]	; 0xffffff3c
     670:	13051303 	movwne	r1, #21251	; 0x5303
     674:	01050106 	tsteq	r5, r6, lsl #2
     678:	0005023d 	andeq	r0, r5, sp, lsr r2
     67c:	01050101 	tsteq	r5, r1, lsl #2
     680:	88020500 	stmdahi	r2, {r8, sl}
     684:	03100008 	tsteq	r0, #8
     688:	050100cc 	streq	r0, [r1, #-204]	; 0xffffff34
     68c:	0d051503 	cfstr32eq	mvfx1, [r5, #-12]
     690:	03050106 	movweq	r0, #20742	; 0x5106
     694:	0e054006 	cdpeq	0, 0, cr4, cr5, cr6, {0}
     698:	03050106 	movweq	r0, #20742	; 0x5106
     69c:	660c0306 	strvs	r0, [ip], -r6, lsl #6
     6a0:	01061305 	tsteq	r6, r5, lsl #6
     6a4:	023d0105 	eorseq	r0, sp, #1073741825	; 0x40000001
     6a8:	0101000a 	tsteq	r1, sl
     6ac:	0000120d 	andeq	r1, r0, sp, lsl #4
     6b0:	01a10003 			; <UNDEFINED> instruction: 0x01a10003
     6b4:	01020000 	mrseq	r0, (UNDEF: 2)
     6b8:	000d0efb 	strdeq	r0, [sp], -fp
     6bc:	01010101 	tsteq	r1, r1, lsl #2
     6c0:	01000000 	mrseq	r0, (UNDEF: 0)
     6c4:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
     6c8:	6f432f2e 	svcvs	0x00432f2e
     6cc:	532f6572 			; <UNDEFINED> instruction: 0x532f6572
     6d0:	63006372 	movwvs	r6, #882	; 0x372
     6d4:	73755c3a 	cmnvc	r5, #14848	; 0x3a00
     6d8:	5c737265 	lfmpl	f7, 2, [r3], #-404	; 0xfffffe6c
     6dc:	6f646978 	svcvs	0x00646978
     6e0:	72705c6e 	rsbsvc	r5, r0, #28160	; 0x6e00
     6e4:	6172676f 	cmnvs	r2, pc, ror #14
     6e8:	72615c6d 	rsbvc	r5, r1, #27904	; 0x6d00
     6ec:	63675f6d 	cmnvs	r7, #436	; 0x1b4
     6f0:	63675c63 	cmnvs	r7, #25344	; 0x6300
     6f4:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
     6f8:	6f6e2d6d 	svcvs	0x006e2d6d
     6fc:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
     700:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
     704:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
     708:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
     70c:	30312e31 	eorscc	r2, r1, r1, lsr lr
     710:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
     714:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
     718:	61652d65 	cmnvs	r5, r5, ror #26
     71c:	695c6962 	ldmdbvs	ip, {r1, r5, r6, r8, fp, sp, lr}^
     720:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
     724:	6d5c6564 	cfldr64vs	mvdx6, [ip, #-400]	; 0xfffffe70
     728:	69686361 	stmdbvs	r8!, {r0, r5, r6, r8, r9, sp, lr}^
     72c:	6300656e 	movwvs	r6, #1390	; 0x56e
     730:	73755c3a 	cmnvc	r5, #14848	; 0x3a00
     734:	5c737265 	lfmpl	f7, 2, [r3], #-404	; 0xfffffe6c
     738:	6f646978 	svcvs	0x00646978
     73c:	72705c6e 	rsbsvc	r5, r0, #28160	; 0x6e00
     740:	6172676f 	cmnvs	r2, pc, ror #14
     744:	72615c6d 	rsbvc	r5, r1, #27904	; 0x6d00
     748:	63675f6d 	cmnvs	r7, #436	; 0x1b4
     74c:	63675c63 	cmnvs	r7, #25344	; 0x6300
     750:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
     754:	6f6e2d6d 	svcvs	0x006e2d6d
     758:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
     75c:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
     760:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
     764:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
     768:	30312e31 	eorscc	r2, r1, r1, lsr lr
     76c:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
     770:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
     774:	61652d65 	cmnvs	r5, r5, ror #26
     778:	695c6962 	ldmdbvs	ip, {r1, r5, r6, r8, fp, sp, lr}^
     77c:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
     780:	735c6564 	cmpvc	ip, #100, 10	; 0x19000000
     784:	63007379 	movwvs	r7, #889	; 0x379
     788:	73755c3a 	cmnvc	r5, #14848	; 0x3a00
     78c:	5c737265 	lfmpl	f7, 2, [r3], #-404	; 0xfffffe6c
     790:	6f646978 	svcvs	0x00646978
     794:	72705c6e 	rsbsvc	r5, r0, #28160	; 0x6e00
     798:	6172676f 	cmnvs	r2, pc, ror #14
     79c:	72615c6d 	rsbvc	r5, r1, #27904	; 0x6d00
     7a0:	63675f6d 	cmnvs	r7, #436	; 0x1b4
     7a4:	63675c63 	cmnvs	r7, #25344	; 0x6300
     7a8:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
     7ac:	6f6e2d6d 	svcvs	0x006e2d6d
     7b0:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
     7b4:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
     7b8:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
     7bc:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
     7c0:	30312e31 	eorscc	r2, r1, r1, lsr lr
     7c4:	62696c5c 	rsbvs	r6, r9, #92, 24	; 0x5c00
     7c8:	6363675c 	cmnvs	r3, #92, 14	; 0x1700000
     7cc:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
     7d0:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
     7d4:	61652d65 	cmnvs	r5, r5, ror #26
     7d8:	315c6962 	cmpcc	ip, r2, ror #18
     7dc:	2e332e30 	mrccs	14, 1, r2, cr3, cr0, {1}
     7e0:	6e695c31 	mcrvs	12, 3, r5, cr9, cr1, {1}
     7e4:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
     7e8:	2e2e0065 	cdpcs	0, 2, cr0, cr14, cr5, {3}
     7ec:	726f432f 	rsbvc	r4, pc, #-1140850688	; 0xbc000000
     7f0:	6e492f65 	cdpvs	15, 4, cr2, cr9, cr5, {3}
     7f4:	70000063 	andvc	r0, r0, r3, rrx
     7f8:	746e6972 	strbtvc	r6, [lr], #-2418	; 0xfffff68e
     7fc:	00632e66 	rsbeq	r2, r3, r6, ror #28
     800:	5f000001 	svcpl	0x00000001
     804:	61666564 	cmnvs	r6, r4, ror #10
     808:	5f746c75 	svcpl	0x00746c75
     80c:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
     810:	00682e73 	rsbeq	r2, r8, r3, ror lr
     814:	5f000002 	svcpl	0x00000002
     818:	69647473 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
     81c:	682e746e 	stmdavs	lr!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
     820:	00000300 	andeq	r0, r0, r0, lsl #6
     824:	61647473 	smcvs	18243	; 0x4743
     828:	682e6772 	stmdavs	lr!, {r1, r4, r5, r6, r8, r9, sl, sp, lr}
     82c:	00000400 	andeq	r0, r0, r0, lsl #8
     830:	64647473 	strbtvs	r7, [r4], #-1139	; 0xfffffb8d
     834:	682e6665 	stmdavs	lr!, {r0, r2, r5, r6, r9, sl, sp, lr}
     838:	00000400 	andeq	r0, r0, r0, lsl #8
     83c:	6975623c 	ldmdbvs	r5!, {r2, r3, r4, r5, r9, sp, lr}^
     840:	692d746c 	pushvs	{r2, r3, r5, r6, sl, ip, sp, lr}
     844:	00003e6e 	andeq	r3, r0, lr, ror #28
     848:	72700000 	rsbsvc	r0, r0, #0
     84c:	66746e69 	ldrbtvs	r6, [r4], -r9, ror #28
     850:	0500682e 	streq	r6, [r0, #-2094]	; 0xfffff7d2
     854:	05000000 	streq	r0, [r0, #-0]
     858:	02050001 	andeq	r0, r5, #1
     85c:	00000000 	andeq	r0, r0, r0
     860:	01018503 	tsteq	r1, r3, lsl #10
     864:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
     868:	05010606 	streq	r0, [r1, #-1542]	; 0xfffff9fa
     86c:	052f0605 	streq	r0, [pc, #-1541]!	; 26f <__STACKSEAL_SIZE+0x26f>
     870:	0501061a 	streq	r0, [r1, #-1562]	; 0xfffff9e6
     874:	01022201 	tsteq	r2, r1, lsl #4
     878:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
     87c:	02050001 	andeq	r0, r5, #1
     880:	100008b4 			; <UNDEFINED> instruction: 0x100008b4
     884:	01018e03 	tsteq	r1, r3, lsl #28
     888:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
     88c:	22050114 	andcs	r0, r5, #20, 2
     890:	012d0501 			; <UNDEFINED> instruction: 0x012d0501
     894:	13060105 	movwne	r0, #24837	; 0x6105
     898:	01000102 	tsteq	r0, r2, lsl #2
     89c:	00010501 	andeq	r0, r1, r1, lsl #10
     8a0:	00000205 	andeq	r0, r0, r5, lsl #4
     8a4:	9f030000 	svcls	0x00030000
     8a8:	03050101 	movweq	r0, #20737	; 0x5101
     8ac:	010e0513 	tsteq	lr, r3, lsl r5
     8b0:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
     8b4:	05010606 	streq	r0, [r1, #-1542]	; 0xfffff9fa
     8b8:	05051e01 	streq	r1, [r5, #-3585]	; 0xfffff1ff
     8bc:	21052406 	tstcs	r5, r6, lsl #8
     8c0:	06050106 	streq	r0, [r5], -r6, lsl #2
     8c4:	01052020 	tsteq	r5, r0, lsr #32
     8c8:	01022022 	tsteq	r2, r2, lsr #32
     8cc:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
     8d0:	02050001 	andeq	r0, r5, #1
     8d4:	100008b6 			; <UNDEFINED> instruction: 0x100008b6
     8d8:	0101bc03 	tsteq	r1, r3, lsl #24
     8dc:	03050106 	movweq	r0, #20742	; 0x5106
     8e0:	05132106 	ldreq	r2, [r3, #-262]	; 0xfffffefa
     8e4:	05110610 	ldreq	r0, [r1, #-1552]	; 0xfffff9f0
     8e8:	05052109 	streq	r2, [r5, #-265]	; 0xfffffef7
     8ec:	0b052106 	bleq	148d0c <__RAM_SIZE+0x48d0c>
     8f0:	2a050106 	bcs	140d10 <__RAM_SIZE+0x40d10>
     8f4:	2e22052e 	cfsh64cs	mvdx0, mvdx2, #30
     8f8:	05201105 	streq	r1, [r0, #-261]!	; 0xfffffefb
     8fc:	09052e07 	stmdbeq	r5, {r0, r1, r2, r9, sl, fp, sp}
     900:	15051f06 	strne	r1, [r5, #-3846]	; 0xfffff0fa
     904:	0a050106 	beq	140d24 <__RAM_SIZE+0x40d24>
     908:	06140520 	ldreq	r0, [r4], -r0, lsr #10
     90c:	05207603 	streq	r7, [r0, #-1539]!	; 0xfffff9fd
     910:	16051403 	strne	r1, [r5], -r3, lsl #8
     914:	20200106 	eorcs	r0, r0, r6, lsl #2
     918:	051a0905 	ldreq	r0, [sl, #-2309]	; 0xfffff6fb
     91c:	05310603 	ldreq	r0, [r1, #-1539]!	; 0xfffff9fd
     920:	02130601 	andseq	r0, r3, #1048576	; 0x100000
     924:	01010001 	tsteq	r1, r1
     928:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
     92c:	0008da02 	andeq	sp, r8, r2, lsl #20
     930:	01c70310 	biceq	r0, r7, r0, lsl r3
     934:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
     938:	15bb0603 	ldrne	r0, [fp, #1539]!	; 0x603
     93c:	01060605 	tsteq	r6, r5, lsl #12
     940:	3d110520 	cfldr32cc	mvfx0, [r1, #-128]	; 0xffffff80
     944:	02001a05 	andeq	r1, r0, #20480	; 0x5000
     948:	2e060104 	adfcss	f0, f6, f4
     94c:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
     950:	01060104 	tsteq	r6, r4, lsl #2
     954:	02000705 	andeq	r0, r0, #1310720	; 0x140000
     958:	2f060304 	svccs	0x00060304
     95c:	03040200 	movweq	r0, #16896	; 0x4200
     960:	25052e06 	strcs	r2, [r5, #-3590]	; 0xfffff1fa
     964:	03040200 	movweq	r0, #16896	; 0x4200
     968:	26054906 	strcs	r4, [r5], -r6, lsl #18
     96c:	03040200 	movweq	r0, #16896	; 0x4200
     970:	07050106 	streq	r0, [r5, -r6, lsl #2]
     974:	03040200 	movweq	r0, #16896	; 0x4200
     978:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
     97c:	02002e03 	andeq	r2, r0, #3, 28	; 0x30
     980:	053c0304 	ldreq	r0, [ip, #-772]!	; 0xfffffcfc
     984:	06180605 	ldreq	r0, [r8], -r5, lsl #12
     988:	09052e20 	stmdbeq	r5, {r5, r9, sl, fp, sp}
     98c:	03056506 	movweq	r6, #21766	; 0x5506
     990:	06060533 			; <UNDEFINED> instruction: 0x06060533
     994:	51010501 	tstpl	r1, r1, lsl #10
     998:	03060b05 	movweq	r0, #27397	; 0x6b05
     99c:	10054a7a 	andne	r4, r5, sl, ror sl
     9a0:	0b050106 	bleq	140dc0 <__RAM_SIZE+0x40dc0>
     9a4:	0607052e 	streq	r0, [r7], -lr, lsr #10
     9a8:	0220062f 	eoreq	r0, r0, #49283072	; 0x2f00000
     9ac:	01010006 	tsteq	r1, r6
     9b0:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
     9b4:	00095802 	andeq	r5, r9, r2, lsl #16
     9b8:	01e30310 	mvneq	r0, r0, lsl r3
     9bc:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
     9c0:	05ca0603 	strbeq	r0, [sl, #1539]	; 0x603
     9c4:	05010606 	streq	r0, [r1, #-1542]	; 0xfffff9fa
     9c8:	053d0605 	ldreq	r0, [sp, #-1541]!	; 0xfffff9fb
     9cc:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
     9d0:	0402000f 	streq	r0, [r2], #-15
     9d4:	2a052001 	bcs	1489e0 <__RAM_SIZE+0x489e0>
     9d8:	02040200 	andeq	r0, r4, #0, 4
     9dc:	0037053c 	eorseq	r0, r7, ip, lsr r5
     9e0:	3c030402 	cfstrscc	mvf0, [r3], {2}
     9e4:	3d060705 	stccc	7, cr0, [r6, #-20]	; 0xffffffec
     9e8:	01060c05 	tsteq	r6, r5, lsl #24
     9ec:	06070520 	streq	r0, [r7], -r0, lsr #10
     9f0:	06120523 	ldreq	r0, [r2], -r3, lsr #10
     9f4:	4a0e0501 	bmi	381e00 <__RAM_SIZE+0x281e00>
     9f8:	1f060b05 	svcne	0x00060b05
     9fc:	02001905 	andeq	r1, r0, #81920	; 0x14000
     a00:	2e060104 	adfcss	f0, f6, f4
     a04:	31060b05 	tstcc	r6, r5, lsl #22
     a08:	02002405 	andeq	r2, r0, #83886080	; 0x5000000
     a0c:	3c060104 	stfccs	f0, [r6], {4}
     a10:	02003505 	andeq	r3, r0, #20971520	; 0x1400000
     a14:	052e0204 	streq	r0, [lr, #-516]!	; 0xfffffdfc
     a18:	052f0607 	streq	r0, [pc, #-1543]!	; 419 <__STACKSEAL_SIZE+0x419>
     a1c:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
     a20:	05204a0e 	streq	r4, [r0, #-2574]!	; 0xfffff5f2
     a24:	05250603 	streq	r0, [r5, #-1539]!	; 0xfffff9fd
     a28:	05010606 	streq	r0, [r1, #-1542]	; 0xfffff9fa
     a2c:	053d0605 	ldreq	r0, [sp, #-1541]!	; 0xfffff9fb
     a30:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
     a34:	04020024 	streq	r0, [r2], #-36	; 0xffffffdc
     a38:	2b053c01 	blcs	14fa44 <__RAM_SIZE+0x4fa44>
     a3c:	02040200 	andeq	r0, r4, #0, 4
     a40:	003d0520 	eorseq	r0, sp, r0, lsr #10
     a44:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
     a48:	34060505 	strcc	r0, [r6], #-1285	; 0xfffffafb
     a4c:	01060805 	tsteq	r6, r5, lsl #16
     a50:	3f060a05 	svccc	0x00060a05
     a54:	01060d05 	tsteq	r6, r5, lsl #26
     a58:	3f060a05 	svccc	0x00060a05
     a5c:	01060d05 	tsteq	r6, r5, lsl #26
     a60:	3f060505 	svccc	0x00060505
     a64:	01060805 	tsteq	r6, r5, lsl #16
     a68:	2f060705 	svccs	0x00060705
     a6c:	01061205 	tsteq	r6, r5, lsl #4
     a70:	054a0e05 	strbeq	r0, [sl, #-3589]	; 0xfffff1fb
     a74:	05240603 	streq	r0, [r4, #-1539]!	; 0xfffff9fd
     a78:	05010606 	streq	r0, [r1, #-1542]	; 0xfffff9fa
     a7c:	052f0605 	streq	r0, [pc, #-1541]!	; 47f <__STACKSEAL_SIZE+0x47f>
     a80:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
     a84:	053d0607 	ldreq	r0, [sp, #-1543]!	; 0xfffff9f9
     a88:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
     a8c:	03054a0e 	movweq	r4, #23054	; 0x5a0e
     a90:	200a0306 	andcs	r0, sl, r6, lsl #6
     a94:	01060a05 	tsteq	r6, r5, lsl #20
     a98:	05670105 	strbeq	r0, [r7, #-261]!	; 0xfffffefb
     a9c:	60030607 	andvs	r0, r3, r7, lsl #12
     aa0:	0a05133c 	beq	145798 <__RAM_SIZE+0x45798>
     aa4:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
     aa8:	0402000f 	streq	r0, [r2], #-15
     aac:	0a052001 	beq	148ab8 <__RAM_SIZE+0x48ab8>
     ab0:	0609053b 			; <UNDEFINED> instruction: 0x0609053b
     ab4:	060c0530 			; <UNDEFINED> instruction: 0x060c0530
     ab8:	0a052001 	beq	148ac4 <__RAM_SIZE+0x48ac4>
     abc:	0017051e 	andseq	r0, r7, lr, lsl r5
     ac0:	33010402 	movwcc	r0, #5122	; 0x1402
     ac4:	02003505 	andeq	r3, r0, #20971520	; 0x1400000
     ac8:	053c0204 	ldreq	r0, [ip, #-516]!	; 0xfffffdfc
     acc:	052f0607 	streq	r0, [pc, #-1543]!	; 4cd <__STACKSEAL_SIZE+0x4cd>
     ad0:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
     ad4:	12054a0e 	andne	r4, r5, #57344	; 0xe000
     ad8:	001c0520 	andseq	r0, ip, r0, lsr #10
     adc:	22010402 	andcs	r0, r1, #33554432	; 0x2000000
     ae0:	02003905 	andeq	r3, r0, #81920	; 0x14000
     ae4:	053c0204 	ldreq	r0, [ip, #-516]!	; 0xfffffdfc
     ae8:	052f0607 	streq	r0, [pc, #-1543]!	; 4e9 <__STACKSEAL_SIZE+0x4e9>
     aec:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
     af0:	12054a0e 	andne	r4, r5, #57344	; 0xe000
     af4:	001b0520 	andseq	r0, fp, r0, lsr #10
     af8:	22010402 	andcs	r0, r1, #33554432	; 0x2000000
     afc:	2f060705 	svccs	0x00060705
     b00:	01061205 	tsteq	r6, r5, lsl #4
     b04:	204a0e05 	subcs	r0, sl, r5, lsl #28
     b08:	03060a05 	movweq	r0, #27141	; 0x6a05
     b0c:	0d05200b 	stceq	0, cr2, [r5, #-44]	; 0xffffffd4
     b10:	07050106 	streq	r0, [r5, -r6, lsl #2]
     b14:	12053d06 	andne	r3, r5, #384	; 0x180
     b18:	0e050106 	adfeqs	f0, f5, f6
     b1c:	0a05204a 	beq	148c4c <__RAM_SIZE+0x48c4c>
     b20:	0d052206 	sfmeq	f2, 4, [r5, #-24]	; 0xffffffe8
     b24:	07050106 	streq	r0, [r5, -r6, lsl #2]
     b28:	12053d06 	andne	r3, r5, #384	; 0x180
     b2c:	0e050106 	adfeqs	f0, f5, f6
     b30:	0102204a 	tsteq	r2, sl, asr #32
     b34:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
     b38:	02050001 	andeq	r0, r5, #1
     b3c:	10000a90 	mulne	r0, r0, sl
     b40:	01029903 	tsteq	r2, r3, lsl #18
     b44:	03050106 	movweq	r0, #20742	; 0x5106
     b48:	15135906 	ldrne	r5, [r3, #-2310]	; 0xfffff6fa
     b4c:	01060605 	tsteq	r6, r5, lsl #12
     b50:	21060505 	tstcs	r6, r5, lsl #10
     b54:	01060b05 	tsteq	r6, r5, lsl #22
     b58:	32060305 	andcc	r0, r6, #335544320	; 0x14000000
     b5c:	01060605 	tsteq	r6, r5, lsl #12
     b60:	02002205 	andeq	r2, r0, #1342177280	; 0x50000000
     b64:	053c0104 	ldreq	r0, [ip, #-260]!	; 0xfffffefc
     b68:	04020012 	streq	r0, [r2], #-18	; 0xffffffee
     b6c:	02004d01 	andeq	r4, r0, #1, 26	; 0x40
     b70:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
     b74:	0402000e 	streq	r0, [r2], #-14
     b78:	12052e08 	andne	r2, r5, #8, 28	; 0x80
     b7c:	08040200 	stmdaeq	r4, {r9}
     b80:	0007052e 	andeq	r0, r7, lr, lsr #10
     b84:	06080402 	streq	r0, [r8], -r2, lsl #8
     b88:	000d0559 	andeq	r0, sp, r9, asr r5
     b8c:	06080402 	streq	r0, [r8], -r2, lsl #8
     b90:	04020001 	streq	r0, [r2], #-1
     b94:	02002e08 	andeq	r2, r0, #8, 28	; 0x80
     b98:	13060804 	movwne	r0, #26628	; 0x6804
     b9c:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
     ba0:	01060804 	tsteq	r6, r4, lsl #16
     ba4:	02001405 	andeq	r1, r0, #83886080	; 0x5000000
     ba8:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
     bac:	0d052c0e 	stceq	12, cr2, [r5, #-56]	; 0xffffffc8
     bb0:	05052021 	streq	r2, [r5, #-33]	; 0xffffffdf
     bb4:	07050f06 	streq	r0, [r5, -r6, lsl #30]
     bb8:	06270513 			; <UNDEFINED> instruction: 0x06270513
     bbc:	4a120501 	bmi	481fc8 <__RAM_SIZE+0x381fc8>
     bc0:	2f060705 	svccs	0x00060705
     bc4:	01061205 	tsteq	r6, r5, lsl #4
     bc8:	02005505 	andeq	r5, r0, #20971520	; 0x1400000
     bcc:	3c3c0204 	lfmcc	f0, 4, [ip], #-16
     bd0:	07040200 	streq	r0, [r4, -r0, lsl #4]
     bd4:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
     bd8:	12052007 	andne	r2, r5, #7
     bdc:	07040200 	streq	r0, [r4, -r0, lsl #4]
     be0:	5855052e 	ldmdapl	r5, {r1, r2, r3, r5, r8, sl}^
     be4:	030a052e 	movweq	r0, #42286	; 0xa52e
     be8:	03050175 	movweq	r0, #20853	; 0x5175
     bec:	20100306 	andscs	r0, r0, r6, lsl #6
     bf0:	01060a05 	tsteq	r6, r5, lsl #20
     bf4:	2ed70105 	cdpcs	1, 13, cr0, cr7, cr5, {0}
     bf8:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
     bfc:	02050001 	andeq	r0, r5, #1
     c00:	10000b24 	andne	r0, r0, r4, lsr #22
     c04:	0102b203 	tsteq	r2, r3, lsl #4
     c08:	03050106 	movweq	r0, #20742	; 0x5106
     c0c:	1513d706 	ldrne	sp, [r3, #-1798]	; 0xfffff8fa
     c10:	01060605 	tsteq	r6, r5, lsl #12
     c14:	0605052e 	streq	r0, [r5], -lr, lsr #10
     c18:	060b0521 	streq	r0, [fp], -r1, lsr #10
     c1c:	06030501 	streq	r0, [r3], -r1, lsl #10
     c20:	06060532 			; <UNDEFINED> instruction: 0x06060532
     c24:	00220501 	eoreq	r0, r2, r1, lsl #10
     c28:	3c010402 	cfstrscc	mvf0, [r1], {2}
     c2c:	02001205 	andeq	r1, r0, #1342177280	; 0x50000000
     c30:	055b0104 	ldrbeq	r0, [fp, #-260]	; 0xfffffefc
     c34:	0402000e 	streq	r0, [r2], #-14
     c38:	12053c08 	andne	r3, r5, #8, 24	; 0x800
     c3c:	08040200 	stmdaeq	r4, {r9}
     c40:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
     c44:	07052e08 	streq	r2, [r5, -r8, lsl #28]
     c48:	08040200 	stmdaeq	r4, {r9}
     c4c:	0d054b06 	vstreq	d4, [r5, #-24]	; 0xffffffe8
     c50:	08040200 	stmdaeq	r4, {r9}
     c54:	02000106 	andeq	r0, r0, #-2147483647	; 0x80000001
     c58:	00660804 	rsbeq	r0, r6, r4, lsl #16
     c5c:	06080402 	streq	r0, [r8], -r2, lsl #8
     c60:	00050513 	andeq	r0, r5, r3, lsl r5
     c64:	06080402 	streq	r0, [r8], -r2, lsl #8
     c68:	00140501 	andseq	r0, r4, r1, lsl #10
     c6c:	4a010402 	bmi	41c7c <__HEAP_SIZE+0x40c7c>
     c70:	053a0e05 	ldreq	r0, [sl, #-3589]!	; 0xfffff1fb
     c74:	052e210d 	streq	r2, [lr, #-269]!	; 0xfffffef3
     c78:	050f0605 	streq	r0, [pc, #-1541]	; 67b <__STACKSEAL_SIZE+0x67b>
     c7c:	27051307 	strcs	r1, [r5, -r7, lsl #6]
     c80:	12050106 	andne	r0, r5, #-2147483647	; 0x80000001
     c84:	06070566 	streq	r0, [r7], -r6, ror #10
     c88:	06120521 	ldreq	r0, [r2], -r1, lsr #10
     c8c:	00550501 	subseq	r0, r5, r1, lsl #10
     c90:	2e020402 	cdpcs	4, 0, cr0, cr2, cr2, {0}
     c94:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
     c98:	12052007 	andne	r2, r5, #7
     c9c:	07040200 	streq	r0, [r4, -r0, lsl #4]
     ca0:	3c55052e 	cfldr64cc	mvdx0, [r5], {46}	; 0x2e
     ca4:	030a052e 	movweq	r0, #42286	; 0xa52e
     ca8:	03050175 	movweq	r0, #20853	; 0x5175
     cac:	2e100306 	cdpcs	3, 1, cr0, cr0, cr6, {0}
     cb0:	01060a05 	tsteq	r6, r5, lsl #20
     cb4:	3d080105 	stfccs	f0, [r8, #-20]	; 0xffffffec
     cb8:	0101003c 	tsteq	r1, ip, lsr r0
     cbc:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
     cc0:	000bf002 	andeq	pc, fp, r2
     cc4:	03d30310 	bicseq	r0, r3, #16, 6	; 0x40000000
     cc8:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
     ccc:	05920603 	ldreq	r0, [r2, #1539]	; 0x603
     cd0:	2e010606 	cfmadd32cs	mvax0, mvfx0, mvfx1, mvfx6
     cd4:	052e2020 	streq	r2, [lr, #-32]!	; 0xffffffe0
     cd8:	04020018 	streq	r0, [r2], #-24	; 0xffffffe8
     cdc:	2d053c01 	stccs	12, cr3, [r5, #-4]
     ce0:	02040200 	andeq	r0, r4, #0, 4
     ce4:	0603059e 			; <UNDEFINED> instruction: 0x0603059e
     ce8:	060513b1 			; <UNDEFINED> instruction: 0x060513b1
     cec:	03050106 	movweq	r0, #20742	; 0x5106
     cf0:	0605cd06 	streq	ip, [r5], -r6, lsl #26
     cf4:	0a050106 	beq	141114 <__RAM_SIZE+0x41114>
     cf8:	06030559 			; <UNDEFINED> instruction: 0x06030559
     cfc:	05131733 	ldreq	r1, [r3, #-1843]	; 0xfffff8cd
     d00:	053c060e 	ldreq	r0, [ip, #-1550]!	; 0xfffff9f2
     d04:	052f0603 	streq	r0, [pc, #-1539]!	; 709 <__STACKSEAL_SIZE+0x709>
     d08:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
     d0c:	03052e2c 	movweq	r2, #24108	; 0x5e2c
     d10:	2d055a06 	vstrcs	s10, [r5, #-24]	; 0xffffffe8
     d14:	2e2e0106 	sufcse	f0, f6, f6
     d18:	05582605 	ldrbeq	r2, [r8, #-1541]	; 0xfffff9fb
     d1c:	5205744b 	andpl	r7, r5, #1258291200	; 0x4b000000
     d20:	74410566 	strbvc	r0, [r1], #-1382	; 0xfffffa9a
     d24:	054a0705 	strbeq	r0, [sl, #-1797]	; 0xfffff8fb
     d28:	053e0603 	ldreq	r0, [lr, #-1539]!	; 0xfffff9fd
     d2c:	2e010617 	mcrcs	6, 0, r0, cr1, cr7, {0}
     d30:	05742b05 	ldrbeq	r2, [r4, #-2821]!	; 0xfffff4fb
     d34:	03054a08 	movweq	r4, #23048	; 0x5a08
     d38:	1c053d06 	stcne	13, cr3, [r5], {6}
     d3c:	054a0106 	strbeq	r0, [sl, #-262]	; 0xfffffefa
     d40:	10055837 	andne	r5, r5, r7, lsr r8
     d44:	0603059e 			; <UNDEFINED> instruction: 0x0603059e
     d48:	06100567 	ldreq	r0, [r0], -r7, ror #10
     d4c:	06030501 	streq	r0, [r3], -r1, lsl #10
     d50:	061c0567 	ldreq	r0, [ip], -r7, ror #10
     d54:	2e240501 	cfsh64cs	mvdx0, mvdx4, #1
     d58:	84060305 	strhi	r0, [r6], #-773	; 0xfffffcfb
     d5c:	01061305 	tsteq	r6, r5, lsl #6
     d60:	581c053c 	ldmdapl	ip, {r2, r3, r4, r5, r8, sl}
     d64:	203c0582 	eorscs	r0, ip, r2, lsl #11
     d68:	05663705 	strbeq	r3, [r6, #-1797]!	; 0xfffff8fb
     d6c:	2b056631 	blcs	15a638 <__RAM_SIZE+0x5a638>
     d70:	6626054a 	strtvs	r0, [r6], -sl, asr #10
     d74:	05662005 	strbeq	r2, [r6, #-5]!
     d78:	0f056617 	svceq	0x00056617
     d7c:	4a0a054a 	bmi	2822ac <__RAM_SIZE+0x1822ac>
     d80:	84060305 	strhi	r0, [r6], #-773	; 0xfffffcfb
     d84:	01060605 	tsteq	r6, r5, lsl #12
     d88:	59060505 	stmdbpl	r6, {r0, r2, r8, sl}
     d8c:	01060b05 	tsteq	r6, r5, lsl #22
     d90:	21060505 	tstcs	r6, r5, lsl #10
     d94:	01060c05 	tsteq	r6, r5, lsl #24
     d98:	86060305 	strhi	r0, [r6], -r5, lsl #6
     d9c:	01062b05 	tsteq	r6, r5, lsl #22
     da0:	2e2e4405 	cdpcs	4, 2, cr4, cr14, cr5, {0}
     da4:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
     da8:	23060404 	movwcs	r0, #25604	; 0x6404
     dac:	02000605 	andeq	r0, r0, #5242880	; 0x500000
     db0:	01060404 	tsteq	r6, r4, lsl #8
     db4:	4c060505 	cfstr32mi	mvfx0, [r6], {5}
     db8:	01060805 	tsteq	r6, r5, lsl #16
     dbc:	02001905 	andeq	r1, r0, #81920	; 0x14000
     dc0:	05ac0104 	streq	r0, [ip, #260]!	; 0x104
     dc4:	05910607 	ldreq	r0, [r1, #1543]	; 0x607
     dc8:	0501060a 	streq	r0, [r1, #-1546]	; 0xfffff9f6
     dcc:	053d0609 	ldreq	r0, [sp, #-1545]!	; 0xfffff9f7
     dd0:	05010625 	streq	r0, [r1, #-1573]	; 0xfffff9db
     dd4:	052e202e 	streq	r2, [lr, #-46]!	; 0xffffffd2
     dd8:	51030605 	tstpl	r3, r5, lsl #12
     ddc:	060c0520 	streq	r0, [ip], -r0, lsr #10
     de0:	03010501 	movweq	r0, #5377	; 0x1501
     de4:	3cf200e4 	ldclcc	0, cr0, [r2], #912	; 0x390
     de8:	03060505 	movweq	r0, #25861	; 0x6505
     dec:	052e7fa2 	streq	r7, [lr, #-4002]!	; 0xfffff05e
     df0:	9e01060b 	cfmadd32ls	mvax0, mvfx0, mvfx1, mvfx11
     df4:	22034405 	andcs	r4, r3, #83886080	; 0x5000000
     df8:	0e052020 	cdpeq	0, 0, cr2, cr5, cr0, {1}
     dfc:	05200a03 	streq	r0, [r0, #-2563]!	; 0xfffff5fd
     e00:	05300607 	ldreq	r0, [r0, #-1543]!	; 0xfffff9f9
     e04:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
     e08:	134c0607 	movtne	r0, #50695	; 0xc607
     e0c:	11061005 	tstne	r6, r5
     e10:	06030521 	streq	r0, [r3], -r1, lsr #10
     e14:	13200b03 			; <UNDEFINED> instruction: 0x13200b03
     e18:	01060605 	tsteq	r6, r5, lsl #12
     e1c:	3e060505 	cfsh32cc	mvfx0, mvfx6, #5
     e20:	01060c05 	tsteq	r6, r5, lsl #24
     e24:	0607052e 	streq	r0, [r7], -lr, lsr #10
     e28:	05207603 	streq	r7, [r0, #-1539]!	; 0xfffff9fd
     e2c:	0501060a 	streq	r0, [r1, #-1546]	; 0xfffff9f6
     e30:	04020016 	streq	r0, [r2], #-22	; 0xffffffea
     e34:	09053c01 	stmdbeq	r5, {r0, sl, fp, ip, sp}
     e38:	3c063d06 	stccc	13, cr3, [r6], {6}
     e3c:	0c030c05 	stceq	12, cr0, [r3], {5}
     e40:	05013402 	streq	r3, [r1, #-1026]	; 0xfffffbfe
     e44:	05300603 	ldreq	r0, [r0, #-1539]!	; 0xfffff9fd
     e48:	05010606 	streq	r0, [r1, #-1542]	; 0xfffff9fa
     e4c:	0402001c 	streq	r0, [r2], #-28	; 0xffffffe4
     e50:	0c054a01 			; <UNDEFINED> instruction: 0x0c054a01
     e54:	06030522 	streq	r0, [r3], -r2, lsr #10
     e58:	06060532 			; <UNDEFINED> instruction: 0x06060532
     e5c:	06050501 	streq	r0, [r5], -r1, lsl #10
     e60:	06120521 	ldreq	r0, [r2], -r1, lsr #10
     e64:	2e0b0501 	cfsh32cs	mvfx0, mvfx11, #1
     e68:	6a060305 	bvs	181a84 <__RAM_SIZE+0x81a84>
     e6c:	06090513 			; <UNDEFINED> instruction: 0x06090513
     e70:	04020001 	streq	r0, [r2], #-1
     e74:	03058204 	movweq	r8, #20996	; 0x5204
     e78:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
     e7c:	05230806 	streq	r0, [r3, #-2054]!	; 0xfffff7fa
     e80:	04020006 	streq	r0, [r2], #-6
     e84:	05010604 	streq	r0, [r1, #-1540]	; 0xfffff9fc
     e88:	003e0605 	eorseq	r0, lr, r5, lsl #12
     e8c:	06040402 	streq	r0, [r4], -r2, lsl #8
     e90:	04020066 	streq	r0, [r2], #-102	; 0xffffff9a
     e94:	02002e04 	andeq	r2, r0, #4, 28	; 0x40
     e98:	5a060404 	bpl	181eb0 <__RAM_SIZE+0x81eb0>
     e9c:	02004705 	andeq	r4, r0, #1310720	; 0x140000
     ea0:	01060404 	tsteq	r6, r4, lsl #8
     ea4:	02000b05 	andeq	r0, r0, #5120	; 0x1400
     ea8:	004a0404 	subeq	r0, sl, r4, lsl #8
     eac:	3c040402 	cfstrscc	mvf0, [r4], {2}
     eb0:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
     eb4:	d8060404 	stmdale	r6, {r2, sl}
     eb8:	02000805 	andeq	r0, r0, #327680	; 0x50000
     ebc:	01060404 	tsteq	r6, r4, lsl #8
     ec0:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
     ec4:	00090566 	andeq	r0, r9, r6, ror #10
     ec8:	03010402 	movweq	r0, #5122	; 0x1402
     ecc:	02002077 	andeq	r2, r0, #119	; 0x77
     ed0:	05740104 	ldrbeq	r0, [r4, #-260]!	; 0xfffffefc
     ed4:	27052505 	strcs	r2, [r5, -r5, lsl #10]
     ed8:	02040200 	andeq	r0, r4, #0, 4
     edc:	02004106 	andeq	r4, r0, #-2147483647	; 0x80000001
     ee0:	20060204 	andcs	r0, r6, r4, lsl #4
     ee4:	02000d05 	andeq	r0, r0, #320	; 0x140
     ee8:	58060104 	stmdapl	r6, {r2, r8}
     eec:	02001205 	andeq	r1, r0, #1342177280	; 0x50000000
     ef0:	01060104 	tsteq	r6, r4, lsl #2
     ef4:	02000d05 	andeq	r0, r0, #320	; 0x140
     ef8:	002e0104 	eoreq	r0, lr, r4, lsl #2
     efc:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
     f00:	01000202 	tsteq	r0, r2, lsl #4
     f04:	00010501 	andeq	r0, r1, r1, lsl #10
     f08:	0fe00205 	svceq	0x00e00205
     f0c:	d3031000 	movwle	r1, #12288	; 0x3000
     f10:	01060102 	tsteq	r6, r2, lsl #2
     f14:	bb060305 	bllt	181b30 <__RAM_SIZE+0x81b30>
     f18:	15151313 	ldrne	r1, [r5, #-787]	; 0xfffffced
     f1c:	01060605 	tsteq	r6, r5, lsl #12
     f20:	20202020 	eorcs	r2, r0, r0, lsr #32
     f24:	4c060305 	stcmi	3, cr0, [r6], {5}
     f28:	01060605 	tsteq	r6, r5, lsl #12
     f2c:	a0060305 	andge	r0, r6, r5, lsl #6
     f30:	01060605 	tsteq	r6, r5, lsl #12
     f34:	95060305 	strls	r0, [r6, #-773]	; 0xfffffcfb
     f38:	01060605 	tsteq	r6, r5, lsl #12
     f3c:	02002205 	andeq	r2, r0, #1342177280	; 0x50000000
     f40:	05900104 	ldreq	r0, [r0, #260]	; 0x104
     f44:	09030603 	stmdbeq	r3, {r0, r1, r9, sl}
     f48:	06051390 			; <UNDEFINED> instruction: 0x06051390
     f4c:	08050106 	stmdaeq	r5, {r1, r2, r8}
     f50:	06030581 	streq	r0, [r3], -r1, lsl #11
     f54:	06060535 			; <UNDEFINED> instruction: 0x06060535
     f58:	4b0a0501 	blmi	282364 <__RAM_SIZE+0x182364>
     f5c:	23060905 	movwcs	r0, #26885	; 0x6905
     f60:	02002a05 	andeq	r2, r0, #20480	; 0x5000
     f64:	2e060104 	adfcss	f0, f6, f4
     f68:	2f060505 	svccs	0x00060505
     f6c:	01061005 	tsteq	r6, r5
     f70:	67060505 	strvs	r0, [r6, -r5, lsl #10]
     f74:	01060905 	tsteq	r6, r5, lsl #18
     f78:	201f0c05 	andscs	r0, pc, r5, lsl #24
     f7c:	03060505 	movweq	r0, #25861	; 0x6505
     f80:	0c052063 	stceq	0, cr2, [r5], {99}	; 0x63
     f84:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     f88:	0c05e606 	stceq	6, cr14, [r5], {6}
     f8c:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     f90:	0c05e606 	stceq	6, cr14, [r5], {6}
     f94:	02000106 	andeq	r0, r0, #-2147483647	; 0x80000001
     f98:	20580404 	subscs	r0, r8, r4, lsl #8
     f9c:	08040200 	stmdaeq	r4, {r9}
     fa0:	0505c820 	streq	ip, [r5, #-2080]	; 0xfffff7e0
     fa4:	0c055006 	stceq	0, cr5, [r5], {6}
     fa8:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     fac:	d6090306 	strle	r0, [r9], -r6, lsl #6
     fb0:	060b0513 			; <UNDEFINED> instruction: 0x060b0513
     fb4:	810e0501 	tsthi	lr, r1, lsl #10
     fb8:	05420a05 	strbeq	r0, [r2, #-2565]	; 0xfffff5fb
     fbc:	05360603 	ldreq	r0, [r6, #-1539]!	; 0xfffff9fd
     fc0:	05010607 	streq	r0, [r1, #-1543]	; 0xfffff9f9
     fc4:	05590603 	ldrbeq	r0, [r9, #-1539]	; 0xfffff9fd
     fc8:	2e010617 	mcrcs	6, 0, r0, cr1, cr7, {0}
     fcc:	05662705 	strbeq	r2, [r6, #-1797]!	; 0xfffff8fb
     fd0:	0305580a 	movweq	r5, #22538	; 0x580a
     fd4:	11058306 	tstne	r5, r6, lsl #6
     fd8:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
     fdc:	05210603 	streq	r0, [r1, #-1539]!	; 0xfffff9fd
     fe0:	2e01060e 	cfmadd32cs	mvax0, mvfx0, mvfx1, mvfx14
     fe4:	052e0805 	streq	r0, [lr, #-2053]!	; 0xfffff7fb
     fe8:	05840603 	streq	r0, [r4, #1539]	; 0x603
     fec:	20010606 	andcs	r0, r1, r6, lsl #12
     ff0:	4b060505 	blmi	18240c <__RAM_SIZE+0x8240c>
     ff4:	060e0522 	streq	r0, [lr], -r2, lsr #10
     ff8:	58080501 	stmdapl	r8, {r0, r8, sl}
     ffc:	59060705 	stmdbpl	r6, {r0, r2, r8, r9, sl}
    1000:	060c0513 			; <UNDEFINED> instruction: 0x060c0513
    1004:	0603051f 			; <UNDEFINED> instruction: 0x0603051f
    1008:	05200b03 	streq	r0, [r0, #-2819]!	; 0xfffff4fd
    100c:	05010606 	streq	r0, [r1, #-1542]	; 0xfffff9fa
    1010:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
    1014:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
    1018:	0558580a 	ldrbeq	r5, [r8, #-2058]	; 0xfffff7f6
    101c:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
    1020:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
    1024:	04020018 	streq	r0, [r2], #-24	; 0xffffffe8
    1028:	29055802 	stmdbcs	r5, {r1, fp, ip, lr}
    102c:	03040200 	movweq	r0, #16896	; 0x4200
    1030:	06070582 	streq	r0, [r7], -r2, lsl #11
    1034:	0520063f 	streq	r0, [r0, #-1599]!	; 0xfffff9c1
    1038:	74030608 	strvc	r0, [r3], #-1544	; 0xfffff9f8
    103c:	060b0520 	streq	r0, [fp], -r0, lsr #10
    1040:	06080501 	streq	r0, [r8], -r1, lsl #10
    1044:	060b0584 	streq	r0, [fp], -r4, lsl #11
    1048:	00190501 	andseq	r0, r9, r1, lsl #10
    104c:	20010402 	andcs	r0, r1, r2, lsl #8
    1050:	3e060505 	cfsh32cc	mvfx0, mvfx6, #5
    1054:	0b052006 	bleq	149074 <__RAM_SIZE+0x49074>
    1058:	200e0306 	andcs	r0, lr, r6, lsl #6
    105c:	212f0705 			; <UNDEFINED> instruction: 0x212f0705
    1060:	01062705 	tsteq	r6, r5, lsl #14
    1064:	05900e05 	ldreq	r0, [r0, #3589]	; 0xe05
    1068:	12052014 	andne	r2, r5, #20
    106c:	06070520 	streq	r0, [r7], -r0, lsr #10
    1070:	060a0567 	streq	r0, [sl], -r7, ror #10
    1074:	2e120501 	cfmul32cs	mvfx0, mvfx2, mvfx1
    1078:	2e1f0e05 	cdpcs	14, 1, cr0, cr15, cr5, {0}
    107c:	26060b05 	strcs	r0, [r6], -r5, lsl #22
    1080:	02003505 	andeq	r3, r0, #20971520	; 0x1400000
    1084:	2e060104 	adfcss	f0, f6, f4
    1088:	02002c05 	andeq	r2, r0, #1280	; 0x500
    108c:	05200104 	streq	r0, [r0, #-260]!	; 0xfffffefc
    1090:	05210607 	streq	r0, [r1, #-1543]!	; 0xfffff9f9
    1094:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
    1098:	0e056535 	mcreq	5, 0, r6, cr5, cr5, {1}
    109c:	05052021 	streq	r2, [r5, #-33]	; 0xffffffdf
    10a0:	08052206 	stmdaeq	r5, {r1, r2, r9, sp}
    10a4:	07050106 	streq	r0, [r5, -r6, lsl #2]
    10a8:	12053006 	andne	r3, r5, #6
    10ac:	0e050106 	adfeqs	f0, f5, f6
    10b0:	09052066 	stmdbeq	r5, {r1, r2, r5, r6, sp}
    10b4:	05051706 	streq	r1, [r5, #-1798]	; 0xfffff8fa
    10b8:	0625052f 	strteq	r0, [r5], -pc, lsr #10
    10bc:	ac0c0501 	cfstr32ge	mvfx0, [ip], {1}
    10c0:	05201205 	streq	r1, [r0, #-517]!	; 0xfffffdfb
    10c4:	05052010 	streq	r2, [r5, #-16]
    10c8:	11056706 	tstne	r5, r6, lsl #14
    10cc:	08050106 	stmdaeq	r5, {r1, r2, r8}
    10d0:	1f0c0520 	svcne	0x000c0520
    10d4:	0305c808 	movweq	ip, #22536	; 0x5808
    10d8:	1d052706 	stcne	7, cr2, [r5, #-24]	; 0xffffffe8
    10dc:	06050106 	streq	r0, [r5], -r6, lsl #2
    10e0:	0603053c 			; <UNDEFINED> instruction: 0x0603053c
    10e4:	052e0903 	streq	r0, [lr, #-2307]!	; 0xfffff6fd
    10e8:	05010606 	streq	r0, [r1, #-1542]	; 0xfffff9fa
    10ec:	052f0605 	streq	r0, [pc, #-1541]!	; aef <__Vectors_Size+0x32f>
    10f0:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
    10f4:	053d0607 	ldreq	r0, [sp, #-1543]!	; 0xfffff9f9
    10f8:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
    10fc:	0305660e 	movweq	r6, #22030	; 0x560e
    1100:	200a0306 	andcs	r0, sl, r6, lsl #6
    1104:	01060a05 	tsteq	r6, r5, lsl #20
    1108:	05c90105 	strbeq	r0, [r9, #261]	; 0x105
    110c:	6b030605 	blvs	c2928 <__HEAP_SIZE+0xc1928>
    1110:	06080558 			; <UNDEFINED> instruction: 0x06080558
    1114:	000f0501 	andeq	r0, pc, r1, lsl #10
    1118:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    111c:	02001c05 	andeq	r1, r0, #1280	; 0x500
    1120:	052e0204 	streq	r0, [lr, #-516]!	; 0xfffffdfc
    1124:	054b0607 	strbeq	r0, [fp, #-1543]	; 0xfffff9f9
    1128:	3c01060c 	stccc	6, cr0, [r1], {12}
    112c:	31060705 	tstcc	r6, r5, lsl #14
    1130:	01061205 	tsteq	r6, r5, lsl #4
    1134:	05660e05 	strbeq	r0, [r6, #-3589]!	; 0xfffff1fb
    1138:	051f060b 	ldreq	r0, [pc, #-1547]	; b35 <__Vectors_Size+0x375>
    113c:	0402001a 	streq	r0, [r2], #-26	; 0xffffffe6
    1140:	002e0601 	eoreq	r0, lr, r1, lsl #12
    1144:	3c010402 	cfstrscc	mvf0, [r1], {2}
    1148:	03060a05 	movweq	r0, #27141	; 0x6a05
    114c:	0d054a09 	vstreq	s8, [r5, #-36]	; 0xffffffdc
    1150:	07050106 	streq	r0, [r5, -r6, lsl #2]
    1154:	12054b06 	andne	r4, r5, #6144	; 0x1800
    1158:	0e050106 	adfeqs	f0, f5, f6
    115c:	0a052066 	beq	1492fc <__RAM_SIZE+0x492fc>
    1160:	0d052206 	sfmeq	f2, 4, [r5, #-24]	; 0xffffffe8
    1164:	07050106 	streq	r0, [r5, -r6, lsl #2]
    1168:	12054b06 	andne	r4, r5, #6144	; 0x1800
    116c:	0e050106 	adfeqs	f0, f5, f6
    1170:	01022066 	tsteq	r2, r6, rrx
    1174:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    1178:	02050001 	andeq	r0, r5, #1
    117c:	10001378 	andne	r1, r0, r8, ror r3
    1180:	0104c103 	tsteq	r4, r3, lsl #2
    1184:	03050106 	movweq	r0, #20742	; 0x5106
    1188:	14136706 	ldrne	r6, [r3], #-1798	; 0xfffff8fa
    118c:	01060605 	tsteq	r6, r5, lsl #12
    1190:	d3030905 	movwle	r0, #14597	; 0x3905
    1194:	06204a01 	strteq	r4, [r0], -r1, lsl #20
    1198:	017eb203 	cmneq	lr, r3, lsl #4
    119c:	01060a05 	tsteq	r6, r5, lsl #20
    11a0:	052e0905 	streq	r0, [lr, #-2309]!	; 0xfffff6fb
    11a4:	053f0605 	ldreq	r0, [pc, #-1541]!	; ba7 <__Vectors_Size+0x3e7>
    11a8:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
    11ac:	06300607 	ldrteq	r0, [r0], -r7, lsl #12
    11b0:	054b0620 	strbeq	r0, [fp, #-1568]	; 0xfffff9e0
    11b4:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
    11b8:	063d0607 	ldrteq	r0, [sp], -r7, lsl #12
    11bc:	24062210 	strcs	r2, [r6], #-528	; 0xfffffdf0
    11c0:	01060d05 	tsteq	r6, r5, lsl #26
    11c4:	32060505 	andcc	r0, r6, #20971520	; 0x1400000
    11c8:	01060b05 	tsteq	r6, r5, lsl #22
    11cc:	21060505 	tstcs	r6, r5, lsl #10
    11d0:	05130705 	ldreq	r0, [r3, #-1797]	; 0xfffff8fb
    11d4:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    11d8:	0d052e07 	stceq	14, cr2, [r5, #-28]	; 0xffffffe4
    11dc:	0505ec06 	streq	lr, [r5, #-3078]	; 0xfffff3fa
    11e0:	14051315 	strne	r1, [r5], #-789	; 0xfffffceb
    11e4:	017ccd03 	cmneq	ip, r3, lsl #26
    11e8:	05140305 	ldreq	r0, [r4, #-773]	; 0xfffffcfb
    11ec:	3c010616 	stccc	6, cr0, [r1], {22}
    11f0:	b1030805 	tstlt	r3, r5, lsl #16
    11f4:	0a050103 	beq	141608 <__RAM_SIZE+0x41608>
    11f8:	0d053106 	stfeqs	f3, [r5, #-24]	; 0xffffffe8
    11fc:	0b050106 	bleq	14161c <__RAM_SIZE+0x4161c>
    1200:	0605052a 	streq	r0, [r5], -sl, lsr #10
    1204:	132e1103 			; <UNDEFINED> instruction: 0x132e1103
    1208:	01060905 	tsteq	r6, r5, lsl #18
    120c:	052e0805 	streq	r0, [lr, #-2053]!	; 0xfffff7fb
    1210:	05052d0f 	streq	r2, [r5, #-3343]	; 0xfffff2f1
    1214:	2e0f0306 	cdpcs	3, 0, cr0, cr15, cr6, {0}
    1218:	01060d05 	tsteq	r6, r5, lsl #26
    121c:	052e0505 	streq	r0, [lr, #-1285]!	; 0xfffffafb
    1220:	56030613 			; <UNDEFINED> instruction: 0x56030613
    1224:	061905e4 	ldreq	r0, [r9], -r4, ror #11
    1228:	062b0501 	strteq	r0, [fp], -r1, lsl #10
    122c:	0631052e 	ldrteq	r0, [r1], -lr, lsr #10
    1230:	06350501 	ldrteq	r0, [r5], -r1, lsl #10
    1234:	013d052e 	teqeq	sp, lr, lsr #10
    1238:	05190d05 	ldreq	r0, [r9, #-3333]	; 0xfffff2fb
    123c:	207a0313 	rsbscs	r0, sl, r3, lsl r3
    1240:	01061905 	tsteq	r6, r5, lsl #18
    1244:	2e062b05 	vmlacs.f64	d2, d6, d5
    1248:	01063105 	tsteq	r6, r5, lsl #2
    124c:	2e063505 	cfsh32cs	mvfx3, mvfx6, #5
    1250:	05013d05 	streq	r3, [r1, #-3333]	; 0xfffff2fb
    1254:	1305180d 	movwne	r1, #22541	; 0x580d
    1258:	0619051b 			; <UNDEFINED> instruction: 0x0619051b
    125c:	062b0501 	strteq	r0, [fp], -r1, lsl #10
    1260:	0631052e 	ldrteq	r0, [r1], -lr, lsr #10
    1264:	06350501 	ldrteq	r0, [r5], -r1, lsl #10
    1268:	013d052e 	teqeq	sp, lr, lsr #10
    126c:	05170d05 	ldreq	r0, [r7, #-3333]	; 0xfffff2fb
    1270:	19051c13 	stmdbne	r5, {r0, r1, r4, sl, fp, ip}
    1274:	2b050106 	blcs	141694 <__RAM_SIZE+0x41694>
    1278:	31052e06 	tstcc	r5, r6, lsl #28
    127c:	35050106 	strcc	r0, [r5, #-262]	; 0xfffffefa
    1280:	3d052e06 	stccc	14, cr2, [r5, #-24]	; 0xffffffe8
    1284:	160d0501 	strne	r0, [sp], -r1, lsl #10
    1288:	051d1305 	ldreq	r1, [sp, #-773]	; 0xfffffcfb
    128c:	05010619 	streq	r0, [r1, #-1561]	; 0xfffff9e7
    1290:	052e062b 	streq	r0, [lr, #-1579]!	; 0xfffff9d5
    1294:	05010631 	streq	r0, [r1, #-1585]	; 0xfffff9cf
    1298:	052e0635 	streq	r0, [lr, #-1589]!	; 0xfffff9cb
    129c:	0d05013d 	stfeqs	f0, [r5, #-244]	; 0xffffff0c
    12a0:	25070515 	strcs	r0, [r7, #-1301]	; 0xfffffaeb
    12a4:	01060f05 	tsteq	r6, r5, lsl #30
    12a8:	0607054a 	streq	r0, [r7], -sl, asr #10
    12ac:	06110523 	ldreq	r0, [r1], -r3, lsr #10
    12b0:	06070501 	streq	r0, [r7], -r1, lsl #10
    12b4:	060a054b 	streq	r0, [sl], -fp, asr #10
    12b8:	06090501 	streq	r0, [r9], -r1, lsl #10
    12bc:	060f0533 			; <UNDEFINED> instruction: 0x060f0533
    12c0:	06070501 	streq	r0, [r7], -r1, lsl #10
    12c4:	060d0522 	streq	r0, [sp], -r2, lsr #10
    12c8:	06090501 	streq	r0, [r9], -r1, lsl #10
    12cc:	054a7a03 	strbeq	r7, [sl, #-2563]	; 0xfffff5fd
    12d0:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    12d4:	052f0609 	streq	r0, [pc, #-1545]!	; cd3 <__Vectors_Size+0x513>
    12d8:	2e01061f 	mcrcs	6, 0, r0, cr1, cr15, {0}
    12dc:	06070520 	streq	r0, [r7], -r0, lsr #10
    12e0:	05010b03 	streq	r0, [r1, #-2819]	; 0xfffff4fd
    12e4:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
    12e8:	052f0607 	streq	r0, [pc, #-1543]!	; ce9 <__Vectors_Size+0x529>
    12ec:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
    12f0:	052f0607 	streq	r0, [pc, #-1543]!	; cf1 <__Vectors_Size+0x531>
    12f4:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
    12f8:	b9030614 	stmdblt	r3, {r2, r4, r9, sl}
    12fc:	0305207c 	movweq	r2, #20604	; 0x507c
    1300:	06160514 			; <UNDEFINED> instruction: 0x06160514
    1304:	0a053c01 	beq	150310 <__RAM_SIZE+0x50310>
    1308:	0103c503 	tsteq	r3, r3, lsl #10
    130c:	31060c05 	tstcc	r6, r5, lsl #24
    1310:	01060f05 	tsteq	r6, r5, lsl #30
    1314:	052e7903 	streq	r7, [lr, #-2307]!	; 0xfffff6fd
    1318:	05410609 	strbeq	r0, [r1, #-1545]	; 0xfffff9f7
    131c:	4a010615 	bmi	42b78 <__HEAP_SIZE+0x41b78>
    1320:	23060905 	movwcs	r0, #26885	; 0x6905
    1324:	01061305 	tsteq	r6, r5, lsl #6
    1328:	4b060905 	blmi	183744 <__RAM_SIZE+0x83744>
    132c:	01063305 	tsteq	r6, r5, lsl #6
    1330:	2f060905 	svccs	0x00060905
    1334:	01060f05 	tsteq	r6, r5, lsl #30
    1338:	0609054a 	streq	r0, [r9], -sl, asr #10
    133c:	060f0519 			; <UNDEFINED> instruction: 0x060f0519
    1340:	06090501 	streq	r0, [r9], -r1, lsl #10
    1344:	060f052f 	streq	r0, [pc], -pc, lsr #10
    1348:	06090501 	streq	r0, [r9], -r1, lsl #10
    134c:	060d052f 	streq	r0, [sp], -pc, lsr #10
    1350:	200c0501 	andcs	r0, ip, r1, lsl #10
    1354:	052c0f05 	streq	r0, [ip, #-3845]!	; 0xfffff0fb
    1358:	0531060b 	ldreq	r0, [r1, #-1547]!	; 0xfffff9f5
    135c:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    1360:	052f060b 	streq	r0, [pc, #-1547]!	; d5d <__Vectors_Size+0x59d>
    1364:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    1368:	05400609 	strbeq	r0, [r0, #-1545]	; 0xfffff9f7
    136c:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    1370:	052f0609 	streq	r0, [pc, #-1545]!	; d6f <__Vectors_Size+0x5af>
    1374:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    1378:	052f0609 	streq	r0, [pc, #-1545]!	; d77 <__Vectors_Size+0x5b7>
    137c:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
    1380:	0f05200c 	svceq	0x0005200c
    1384:	060b052c 	streq	r0, [fp], -ip, lsr #10
    1388:	06110531 			; <UNDEFINED> instruction: 0x06110531
    138c:	060b0501 	streq	r0, [fp], -r1, lsl #10
    1390:	0611052f 	ldreq	r0, [r1], -pc, lsr #10
    1394:	06090501 	streq	r0, [r9], -r1, lsl #10
    1398:	060f0541 	streq	r0, [pc], -r1, asr #10
    139c:	06090501 	streq	r0, [r9], -r1, lsl #10
    13a0:	060f052f 	streq	r0, [pc], -pc, lsr #10
    13a4:	06090501 	streq	r0, [r9], -r1, lsl #10
    13a8:	0305052f 	movweq	r0, #21807	; 0x552f
    13ac:	0d05010f 	stfeqs	f0, [r5, #-60]	; 0xffffffc4
    13b0:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    13b4:	0609052e 	streq	r0, [r9], -lr, lsr #10
    13b8:	5b027403 	blpl	9e3cc <__HEAP_SIZE+0x9d3cc>
    13bc:	060f0501 	streq	r0, [pc], -r1, lsl #10
    13c0:	06090501 	streq	r0, [r9], -r1, lsl #10
    13c4:	060f052f 	streq	r0, [pc], -pc, lsr #10
    13c8:	06090501 	streq	r0, [r9], -r1, lsl #10
    13cc:	0f05222f 	svceq	0x0005222f
    13d0:	09050106 	stmdbeq	r5, {r1, r2, r8}
    13d4:	0f052f06 	svceq	0x00052f06
    13d8:	09050106 	stmdbeq	r5, {r1, r2, r8}
    13dc:	0f032f06 	svceq	0x00032f06
    13e0:	0c051320 	stceq	3, cr1, [r5], {32}
    13e4:	1c050106 	stfnes	f0, [r5], {6}
    13e8:	01040200 	mrseq	r0, R12_usr
    13ec:	060e052e 	streq	r0, [lr], -lr, lsr #10
    13f0:	06110531 			; <UNDEFINED> instruction: 0x06110531
    13f4:	060e0501 	streq	r0, [lr], -r1, lsl #10
    13f8:	06110531 			; <UNDEFINED> instruction: 0x06110531
    13fc:	060b0501 	streq	r0, [fp], -r1, lsl #10
    1400:	11051332 	tstne	r5, r2, lsr r3
    1404:	10050106 	andne	r0, r5, r6, lsl #2
    1408:	2e77032d 	cdpcs	3, 7, cr0, cr7, cr13, {1}
    140c:	03060905 	movweq	r0, #26885	; 0x6905
    1410:	0c05200d 	stceq	0, cr2, [r5], {13}
    1414:	09050106 	stmdbeq	r5, {r1, r2, r8}
    1418:	0c053306 	stceq	3, cr3, [r5], {6}
    141c:	1e050106 	adfnes	f0, f5, f6
    1420:	01040200 	mrseq	r0, R12_usr
    1424:	060b052e 	streq	r0, [fp], -lr, lsr #10
    1428:	0611052f 	ldreq	r0, [r1], -pc, lsr #10
    142c:	06090501 	streq	r0, [r9], -r1, lsl #10
    1430:	060c0532 			; <UNDEFINED> instruction: 0x060c0532
    1434:	060b0501 	streq	r0, [fp], -r1, lsl #10
    1438:	0611053d 			; <UNDEFINED> instruction: 0x0611053d
    143c:	06090501 	streq	r0, [r9], -r1, lsl #10
    1440:	060c0532 			; <UNDEFINED> instruction: 0x060c0532
    1444:	001e0501 	andseq	r0, lr, r1, lsl #10
    1448:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    144c:	03060b05 	movweq	r0, #27397	; 0x6b05
    1450:	0e052e13 	mcreq	14, 0, r2, cr5, cr3, {0}
    1454:	10050106 	andne	r0, r5, r6, lsl #2
    1458:	13054f06 	movwne	r4, #24326	; 0x5f06
    145c:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    1460:	67054e06 	strvs	r4, [r5, -r6, lsl #28]
    1464:	4e050106 	adfmis	f0, f5, f6
    1468:	000d054a 	andeq	r0, sp, sl, asr #10
    146c:	06080402 	streq	r0, [r8], -r2, lsl #8
    1470:	0013054b 	andseq	r0, r3, fp, asr #10
    1474:	06080402 	streq	r0, [r8], -r2, lsl #8
    1478:	04020001 	streq	r0, [r2], #-1
    147c:	02007408 	andeq	r7, r0, #8, 8	; 0x8000000
    1480:	004a0804 	subeq	r0, sl, r4, lsl #16
    1484:	4a080402 	bmi	202494 <__RAM_SIZE+0x102494>
    1488:	08040200 	stmdaeq	r4, {r9}
    148c:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    1490:	10052008 	andne	r2, r5, r8
    1494:	31014703 	tstcc	r1, r3, lsl #14
    1498:	060b0531 			; <UNDEFINED> instruction: 0x060b0531
    149c:	06110536 			; <UNDEFINED> instruction: 0x06110536
    14a0:	0b052e01 	bleq	14ccac <__RAM_SIZE+0x4ccac>
    14a4:	20100306 	andscs	r0, r0, r6, lsl #6
    14a8:	01060e05 	tsteq	r6, r5, lsl #28
    14ac:	42061005 	andmi	r1, r6, #5
    14b0:	01061305 	tsteq	r6, r5, lsl #6
    14b4:	41060d05 	tstmi	r6, r5, lsl #26
    14b8:	01064c05 	tsteq	r6, r5, lsl #24
    14bc:	053c3c05 	ldreq	r3, [ip, #-3077]!	; 0xfffff3fb
    14c0:	0402000d 	streq	r0, [r2], #-13
    14c4:	054b0608 	strbeq	r0, [fp, #-1544]	; 0xfffff9f8
    14c8:	04020038 	streq	r0, [r2], #-56	; 0xffffffc8
    14cc:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
    14d0:	04020013 	streq	r0, [r2], #-19	; 0xffffffed
    14d4:	02004a08 	andeq	r4, r0, #8, 20	; 0x8000
    14d8:	00740804 	rsbseq	r0, r4, r4, lsl #16
    14dc:	3c080402 	cfstrscc	mvf0, [r8], {2}
    14e0:	08040200 	stmdaeq	r4, {r9}
    14e4:	04020058 	streq	r0, [r2], #-88	; 0xffffffa8
    14e8:	09052008 	stmdbeq	r5, {r3, sp}
    14ec:	01120306 	tsteq	r2, r6, lsl #6
    14f0:	01060f05 	tsteq	r6, r5, lsl #30
    14f4:	3d060905 	vstrcc.16	s0, [r6, #-10]	; <UNPREDICTABLE>
    14f8:	63030d05 	movwvs	r0, #15621	; 0x3d05
    14fc:	061d0520 	ldreq	r0, [sp], -r0, lsr #10
    1500:	060d0501 	streq	r0, [sp], -r1, lsl #10
    1504:	063d0583 	ldrteq	r0, [sp], -r3, lsl #11
    1508:	4a130501 	bmi	4c2914 <__RAM_SIZE+0x3c2914>
    150c:	20ac582e 	adccs	r5, ip, lr, lsr #16
    1510:	05203d05 	streq	r3, [r0, #-3333]!	; 0xfffff2fb
    1514:	054e060d 	strbeq	r0, [lr, #-1549]	; 0xfffff9f3
    1518:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    151c:	054b060d 	strbeq	r0, [fp, #-1549]	; 0xfffff9f3
    1520:	05010638 	streq	r0, [r1, #-1592]	; 0xfffff9c8
    1524:	589e4a13 	ldmpl	lr, {r0, r1, r4, r9, fp, lr}
    1528:	01810520 	orreq	r0, r1, r0, lsr #10
    152c:	02040200 	andeq	r0, r4, #0, 4
    1530:	3c710523 	cfldr64cc	mvdx0, [r1], #-140	; 0xffffff74
    1534:	053c6605 	ldreq	r6, [ip, #-1541]!	; 0xfffff9fb
    1538:	583c0181 	ldmdapl	ip!, {r0, r7, r8}
    153c:	1a060d05 	bne	184958 <__RAM_SIZE+0x84958>
    1540:	01061305 	tsteq	r6, r5, lsl #6
    1544:	20584a08 	subscs	r4, r8, r8, lsl #20
    1548:	24060d05 	strcs	r0, [r6], #-3333	; 0xfffff2fb
    154c:	01061305 	tsteq	r6, r5, lsl #6
    1550:	0520909e 	streq	r9, [r0, #-158]!	; 0xffffff62
    1554:	020001ae 	andeq	r0, r0, #-2147483605	; 0x8000002b
    1558:	05230204 	streq	r0, [r3, #-516]!	; 0xfffffdfc
    155c:	053c0195 	ldreq	r0, [ip, #-405]!	; 0xfffffe6b
    1560:	585801ae 	ldmdapl	r8, {r1, r2, r3, r5, r7, r8}^
    1564:	03060905 	movweq	r0, #26885	; 0x6905
    1568:	0c05010a 	stfeqs	f0, [r5], {10}
    156c:	09050106 	stmdbeq	r5, {r1, r2, r8}
    1570:	0f052f06 	svceq	0x00052f06
    1574:	09050106 	stmdbeq	r5, {r1, r2, r8}
    1578:	05670806 	strbeq	r0, [r7, #-2054]!	; 0xfffff7fa
    157c:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    1580:	053d0609 	ldreq	r0, [sp, #-1545]!	; 0xfffff9f7
    1584:	0402001d 	streq	r0, [r2], #-29	; 0xffffffe3
    1588:	23051d01 	movwcs	r1, #23809	; 0x5d01
    158c:	01040200 	mrseq	r0, R12_usr
    1590:	02000106 	andeq	r0, r0, #-2147483647	; 0x80000001
    1594:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
    1598:	09030609 	stmdbeq	r3, {r0, r3, r9, sl}
    159c:	060c0520 	streq	r0, [ip], -r0, lsr #10
    15a0:	001d0501 	andseq	r0, sp, r1, lsl #10
    15a4:	2e020402 	cdpcs	4, 0, cr0, cr2, cr2, {0}
    15a8:	02003105 	andeq	r3, r0, #1073741825	; 0x40000001
    15ac:	2e060304 	cdpcs	3, 0, cr0, cr6, cr4, {0}
    15b0:	02003705 	andeq	r3, r0, #1310720	; 0x140000
    15b4:	01060304 	tsteq	r6, r4, lsl #6
    15b8:	2f060905 	svccs	0x00060905
    15bc:	01060c05 	tsteq	r6, r5, lsl #24
    15c0:	02001d05 	andeq	r1, r0, #320	; 0x140
    15c4:	052e0204 	streq	r0, [lr, #-516]!	; 0xfffffdfc
    15c8:	04020031 	streq	r0, [r2], #-49	; 0xffffffcf
    15cc:	052e0603 	streq	r0, [lr, #-1539]!	; 0xfffff9fd
    15d0:	04020037 	streq	r0, [r2], #-55	; 0xffffffc9
    15d4:	05010603 	streq	r0, [r1, #-1539]	; 0xfffff9fd
    15d8:	052f0609 	streq	r0, [pc, #-1545]!	; fd7 <__Vectors_Size+0x817>
    15dc:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    15e0:	67080609 	strvs	r0, [r8, -r9, lsl #12]
    15e4:	01060f05 	tsteq	r6, r5, lsl #30
    15e8:	3d060905 	vstrcc.16	s0, [r6, #-10]	; <UNPREDICTABLE>
    15ec:	0c051424 	cfstrseq	mvf1, [r5], {36}	; 0x24
    15f0:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
    15f4:	09051e16 	stmdbeq	r5, {r1, r2, r4, r9, sl, fp, ip}
    15f8:	13053606 	movwne	r3, #22022	; 0x5606
    15fc:	09050106 	stmdbeq	r5, {r1, r2, r8}
    1600:	5a062e3c 	bpl	18cef8 <__RAM_SIZE+0x8cef8>
    1604:	01060c05 	tsteq	r6, r5, lsl #24
    1608:	25060905 	strcs	r0, [r6, #-2309]	; 0xfffff6fb
    160c:	01060f05 	tsteq	r6, r5, lsl #30
    1610:	3d060905 	vstrcc.16	s0, [r6, #-10]	; <UNPREDICTABLE>
    1614:	74030d05 	strvc	r0, [r3], #-3333	; 0xfffff2fb
    1618:	052e062e 	streq	r0, [lr, #-1582]!	; 0xfffff9d2
    161c:	0d054913 	vstreq.16	s8, [r5, #-38]	; 0xffffffda	; <UNPREDICTABLE>
    1620:	06110521 	ldreq	r0, [r1], -r1, lsr #10
    1624:	0613051f 			; <UNDEFINED> instruction: 0x0613051f
    1628:	2e110501 	cfmul32cs	mvfx0, mvfx1, mvfx1
    162c:	2b16052e 	blcs	582aec <__RAM_SIZE+0x482aec>
    1630:	053c2e3c 	ldreq	r2, [ip, #-3644]!	; 0xfffff1c4
    1634:	0c03060d 	stceq	6, cr0, [r3], {13}
    1638:	05200620 	streq	r0, [r0, #-1568]!	; 0xfffff9e0
    163c:	0d054913 	vstreq.16	s8, [r5, #-38]	; 0xffffffda	; <UNPREDICTABLE>
    1640:	06110521 	ldreq	r0, [r1], -r1, lsr #10
    1644:	0613051f 			; <UNDEFINED> instruction: 0x0613051f
    1648:	2e110501 	cfmul32cs	mvfx0, mvfx1, mvfx1
    164c:	09052e2e 	stmdbeq	r5, {r1, r2, r3, r5, r9, sl, fp, sp}
    1650:	01090306 	tsteq	r9, r6, lsl #6
    1654:	01061505 	tsteq	r6, r5, lsl #10
    1658:	59060905 	stmdbpl	r6, {r0, r2, r8, fp}
    165c:	01061a05 	tsteq	r6, r5, lsl #20
    1660:	03062605 	movweq	r2, #26117	; 0x6605
    1664:	05747b90 	ldrbeq	r7, [r4, #-2960]!	; 0xfffff470
    1668:	1e050122 	adfnesp	f0, f5, f2
    166c:	11052e06 	tstne	r5, r6, lsl #28
    1670:	03052006 	movweq	r2, #20486	; 0x5006
    1674:	1e052e06 	cdpne	14, 0, cr2, cr5, cr6, {0}
    1678:	20140520 	andscs	r0, r4, r0, lsr #10
    167c:	2f060305 	svccs	0x00060305
    1680:	01061b05 	tsteq	r6, r5, lsl #22
    1684:	0609052e 	streq	r0, [r9], -lr, lsr #10
    1688:	0104f103 	tsteq	r4, r3, lsl #2	; <UNPREDICTABLE>
    168c:	01060c05 	tsteq	r6, r5, lsl #24
    1690:	4b060b05 	blmi	1842ac <__RAM_SIZE+0x842ac>
    1694:	01060d05 	tsteq	r6, r5, lsl #26
    1698:	3e060905 	vmlacc.f16	s0, s12, s10	; <UNPREDICTABLE>
    169c:	01060c05 	tsteq	r6, r5, lsl #24
    16a0:	20202e4a 	eorcs	r2, r0, sl, asr #28
    16a4:	2e1b1a05 	vnmlscs.f32	s2, s22, s10
    16a8:	060d052e 	streq	r0, [sp], -lr, lsr #10
    16ac:	052e0635 	streq	r0, [lr, #-1589]!	; 0xfffff9cb
    16b0:	0d054913 	vstreq.16	s8, [r5, #-38]	; 0xffffffda	; <UNPREDICTABLE>
    16b4:	06110521 	ldreq	r0, [r1], -r1, lsr #10
    16b8:	0613051f 			; <UNDEFINED> instruction: 0x0613051f
    16bc:	20110501 	andscs	r0, r1, r1, lsl #10
    16c0:	3c2e1305 	stccc	3, cr1, [lr], #-20	; 0xffffffec
    16c4:	25450520 	strbcs	r0, [r5, #-1312]	; 0xfffffae0
    16c8:	21060b05 	tstcs	r6, r5, lsl #22
    16cc:	01061205 	tsteq	r6, r5, lsl #4
    16d0:	202e0b05 	eorcs	r0, lr, r5, lsl #22
    16d4:	49060f05 	stmdbmi	r6, {r0, r2, r8, r9, sl, fp}
    16d8:	01061105 	tsteq	r6, r5, lsl #2
    16dc:	052e0f05 	streq	r0, [lr, #-3845]!	; 0xfffff0fb
    16e0:	0402001a 	streq	r0, [r2], #-26	; 0xffffffe6
    16e4:	45052001 	strmi	r2, [r5, #-1]
    16e8:	02040200 	andeq	r0, r4, #0, 4
    16ec:	0039052e 	eorseq	r0, r9, lr, lsr #10
    16f0:	20020402 	andcs	r0, r2, r2, lsl #8
    16f4:	05320c05 	ldreq	r0, [r2, #-3077]!	; 0xfffff3fb
    16f8:	052e0609 	streq	r0, [lr, #-1545]!	; 0xfffff9f7
    16fc:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    1700:	05330609 	ldreq	r0, [r3, #-1545]!	; 0xfffff9f7
    1704:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    1708:	063d0609 	ldrteq	r0, [sp], -r9, lsl #12
    170c:	0d052e20 	stceq	14, cr2, [r5, #-128]	; 0xffffff80
    1710:	20061c06 	andcs	r1, r6, r6, lsl #24
    1714:	05491305 	strbeq	r1, [r9, #-773]	; 0xfffffcfb
    1718:	1105210d 	tstne	r5, sp, lsl #2
    171c:	13051f06 	movwne	r1, #24326	; 0x5f06
    1720:	11050106 	tstne	r5, r6, lsl #2
    1724:	20202e2e 	eorcs	r2, r0, lr, lsr #28
    1728:	03060905 	movweq	r0, #26885	; 0x6905
    172c:	05130109 	ldreq	r0, [r3, #-265]	; 0xfffffef7
    1730:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    1734:	13300609 	teqne	r0, #9437184	; 0x900000
    1738:	05170b05 	ldreq	r0, [r7, #-2821]	; 0xfffff4fb
    173c:	05010651 	streq	r0, [r1, #-1617]	; 0xfffff9af
    1740:	09054a11 	stmdbeq	r5, {r0, r4, r9, fp, lr}
    1744:	05160806 	ldreq	r0, [r6, #-2054]	; 0xfffff7fa
    1748:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    174c:	063d0609 	ldrteq	r0, [sp], -r9, lsl #12
    1750:	06160620 	ldreq	r0, [r6], -r0, lsr #12
    1754:	05590620 	ldrbeq	r0, [r9, #-1568]	; 0xfffff9e0
    1758:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    175c:	063d0609 	ldrteq	r0, [sp], -r9, lsl #12
    1760:	23062210 	movwcs	r2, #25104	; 0x6210
    1764:	4b062006 	blmi	189784 <__RAM_SIZE+0x89784>
    1768:	01060f05 	tsteq	r6, r5, lsl #30
    176c:	3d060905 	vstrcc.16	s0, [r6, #-10]	; <UNPREDICTABLE>
    1770:	03221006 			; <UNDEFINED> instruction: 0x03221006
    1774:	05207df8 	streq	r7, [r0, #-3576]!	; 0xfffff208
    1778:	8d030603 	stchi	6, cr0, [r3, #-12]
    177c:	02002e02 	andeq	r2, r0, #2, 28
    1780:	2e060104 	adfcss	f0, f6, f4
    1784:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    1788:	02002004 	andeq	r2, r0, #4
    178c:	4d060404 	cfstrsmi	mvf0, [r6, #-16]
    1790:	02000105 	andeq	r0, r0, #1073741825	; 0x40000001
    1794:	13060404 	movwne	r0, #25604	; 0x6404
    1798:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    179c:	0003024a 	andeq	r0, r3, sl, asr #4
    17a0:	01050101 	tsteq	r5, r1, lsl #2
    17a4:	f8020500 			; <UNDEFINED> instruction: 0xf8020500
    17a8:	03100019 	tsteq	r0, #25
    17ac:	05010195 	streq	r0, [r1, #-405]	; 0xfffffe6b
    17b0:	11051303 	tstne	r5, r3, lsl #6
    17b4:	011c0501 	tsteq	ip, r1, lsl #10
    17b8:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
    17bc:	05010606 	streq	r0, [r1, #-1542]	; 0xfffff9fa
    17c0:	05052c01 	streq	r2, [r5, #-3073]	; 0xfffff3ff
    17c4:	01052306 	tsteq	r5, r6, lsl #6
    17c8:	01023006 	tsteq	r2, r6
    17cc:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    17d0:	02050001 	andeq	r0, r5, #1
    17d4:	10001a04 	andne	r1, r0, r4, lsl #20
    17d8:	0106de03 	tsteq	r6, r3, lsl #28
    17dc:	03050106 	movweq	r0, #20742	; 0x5106
    17e0:	21136706 	tstcs	r3, r6, lsl #14
    17e4:	06130513 			; <UNDEFINED> instruction: 0x06130513
    17e8:	06030501 	streq	r0, [r3], -r1, lsl #10
    17ec:	01051375 	tsteq	r5, r5, ror r3
    17f0:	08021306 	stmdaeq	r2, {r1, r2, r8, r9, ip}
    17f4:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    17f8:	02050001 	andeq	r0, r5, #1
    17fc:	00000000 	andeq	r0, r0, r0
    1800:	0106e903 	tsteq	r6, r3, lsl #18
    1804:	03050106 	movweq	r0, #20742	; 0x5106
    1808:	21137506 	tstcs	r3, r6, lsl #10
    180c:	01061305 	tsteq	r6, r5, lsl #6
    1810:	0603054a 	streq	r0, [r3], -sl, asr #10
    1814:	0105132f 	tsteq	r5, pc, lsr #6
    1818:	08021306 	stmdaeq	r2, {r1, r2, r8, r9, ip}
    181c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    1820:	02050001 	andeq	r0, r5, #1
    1824:	00000000 	andeq	r0, r0, r0
    1828:	0106f303 	tsteq	r6, r3, lsl #6	; <UNPREDICTABLE>
    182c:	03050106 	movweq	r0, #20742	; 0x5106
    1830:	21137506 	tstcs	r3, r6, lsl #10
    1834:	01061305 	tsteq	r6, r5, lsl #6
    1838:	0305202e 	movweq	r2, #20526	; 0x502e
    183c:	05132f06 	ldreq	r2, [r3, #-3846]	; 0xfffff0fa
    1840:	02130601 	andseq	r0, r3, #1048576	; 0x100000
    1844:	01010007 	tsteq	r1, r7
    1848:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    184c:	00000002 	andeq	r0, r0, r2
    1850:	06fd0300 	ldrbteq	r0, [sp], r0, lsl #6
    1854:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    1858:	133d0603 	teqne	sp, #3145728	; 0x300000
    185c:	01060a05 	tsteq	r6, r5, lsl #20
    1860:	0105204a 	tsteq	r5, sl, asr #32
    1864:	0006022f 	andeq	r0, r6, pc, lsr #4
    1868:	01050101 	tsteq	r5, r1, lsl #2
    186c:	00020500 	andeq	r0, r2, r0, lsl #10
    1870:	03000000 	movweq	r0, #0
    1874:	06010784 	streq	r0, [r1], -r4, lsl #15
    1878:	06030501 	streq	r0, [r3], -r1, lsl #10
    187c:	060a052f 	streq	r0, [sl], -pc, lsr #10
    1880:	20202e01 	eorcs	r2, r0, r1, lsl #28
    1884:	2f010520 	svccs	0x00010520
    1888:	01000502 	tsteq	r0, r2, lsl #10
    188c:	00010501 	andeq	r0, r1, r1, lsl #10
    1890:	00000205 	andeq	r0, r0, r5, lsl #4
    1894:	8a030000 	bhi	c189c <__HEAP_SIZE+0xc089c>
    1898:	01060107 	tsteq	r6, r7, lsl #2
    189c:	67060305 	strvs	r0, [r6, -r5, lsl #6]
    18a0:	1b052113 	blne	149cf4 <__RAM_SIZE+0x49cf4>
    18a4:	03050106 	movweq	r0, #20742	; 0x5106
    18a8:	13052f06 	movwne	r2, #24326	; 0x5f06
    18ac:	05580106 	ldrbeq	r0, [r8, #-262]	; 0xfffffefa
    18b0:	132f0603 			; <UNDEFINED> instruction: 0x132f0603
    18b4:	13060105 	movwne	r0, #24837	; 0x6105
    18b8:	01000802 	tsteq	r0, r2, lsl #16
    18bc:	00033801 	andeq	r3, r3, r1, lsl #16
    18c0:	cc000300 	stcgt	3, cr0, [r0], {-0}
    18c4:	02000001 	andeq	r0, r0, #1
    18c8:	0d0efb01 	vstreq	d15, [lr, #-4]
    18cc:	01010100 	mrseq	r0, (UNDEF: 17)
    18d0:	00000001 	andeq	r0, r0, r1
    18d4:	01000001 	tsteq	r0, r1
    18d8:	432f2e2e 			; <UNDEFINED> instruction: 0x432f2e2e
    18dc:	2f65726f 	svccs	0x0065726f
    18e0:	00637253 	rsbeq	r7, r3, r3, asr r2
    18e4:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
    18e8:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    18ec:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
    18f0:	705c6e6f 	subsvc	r6, ip, pc, ror #28
    18f4:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
    18f8:	615c6d61 	cmpvs	ip, r1, ror #26
    18fc:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
    1900:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
    1904:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
    1908:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    190c:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    1910:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    1914:	2e30312d 	rsfcssp	f3, f0, #5.0
    1918:	30322d33 	eorscc	r2, r2, r3, lsr sp
    191c:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
    1920:	72615c30 	rsbvc	r5, r1, #48, 24	; 0x3000
    1924:	6f6e2d6d 	svcvs	0x006e2d6d
    1928:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    192c:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
    1930:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    1934:	5c656475 	cfstrdpl	mvd6, [r5], #-468	; 0xfffffe2c
    1938:	6863616d 	stmdavs	r3!, {r0, r2, r3, r5, r6, r8, sp, lr}^
    193c:	00656e69 	rsbeq	r6, r5, r9, ror #28
    1940:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
    1944:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    1948:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
    194c:	705c6e6f 	subsvc	r6, ip, pc, ror #28
    1950:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
    1954:	615c6d61 	cmpvs	ip, r1, ror #26
    1958:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
    195c:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
    1960:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
    1964:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    1968:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    196c:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    1970:	2e30312d 	rsfcssp	f3, f0, #5.0
    1974:	30322d33 	eorscc	r2, r2, r3, lsr sp
    1978:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
    197c:	696c5c30 	stmdbvs	ip!, {r4, r5, sl, fp, ip, lr}^
    1980:	63675c62 	cmnvs	r7, #25088	; 0x6200
    1984:	72615c63 	rsbvc	r5, r1, #25344	; 0x6300
    1988:	6f6e2d6d 	svcvs	0x006e2d6d
    198c:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    1990:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
    1994:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
    1998:	695c312e 	ldmdbvs	ip, {r1, r2, r3, r5, r8, ip, sp}^
    199c:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    19a0:	63006564 	movwvs	r6, #1380	; 0x564
    19a4:	73755c3a 	cmnvc	r5, #14848	; 0x3a00
    19a8:	5c737265 	lfmpl	f7, 2, [r3], #-404	; 0xfffffe6c
    19ac:	6f646978 	svcvs	0x00646978
    19b0:	72705c6e 	rsbsvc	r5, r0, #28160	; 0x6e00
    19b4:	6172676f 	cmnvs	r2, pc, ror #14
    19b8:	72615c6d 	rsbvc	r5, r1, #27904	; 0x6d00
    19bc:	63675f6d 	cmnvs	r7, #436	; 0x1b4
    19c0:	63675c63 	cmnvs	r7, #25344	; 0x6300
    19c4:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
    19c8:	6f6e2d6d 	svcvs	0x006e2d6d
    19cc:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    19d0:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
    19d4:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
    19d8:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
    19dc:	30312e31 	eorscc	r2, r1, r1, lsr lr
    19e0:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    19e4:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    19e8:	61652d65 	cmnvs	r5, r5, ror #26
    19ec:	695c6962 	ldmdbvs	ip, {r1, r5, r6, r8, fp, sp, lr}^
    19f0:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    19f4:	735c6564 	cmpvc	ip, #100, 10	; 0x19000000
    19f8:	63007379 	movwvs	r7, #889	; 0x379
    19fc:	73755c3a 	cmnvc	r5, #14848	; 0x3a00
    1a00:	5c737265 	lfmpl	f7, 2, [r3], #-404	; 0xfffffe6c
    1a04:	6f646978 	svcvs	0x00646978
    1a08:	72705c6e 	rsbsvc	r5, r0, #28160	; 0x6e00
    1a0c:	6172676f 	cmnvs	r2, pc, ror #14
    1a10:	72615c6d 	rsbvc	r5, r1, #27904	; 0x6d00
    1a14:	63675f6d 	cmnvs	r7, #436	; 0x1b4
    1a18:	63675c63 	cmnvs	r7, #25344	; 0x6300
    1a1c:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
    1a20:	6f6e2d6d 	svcvs	0x006e2d6d
    1a24:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    1a28:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
    1a2c:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
    1a30:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
    1a34:	30312e31 	eorscc	r2, r1, r1, lsr lr
    1a38:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    1a3c:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    1a40:	61652d65 	cmnvs	r5, r5, ror #26
    1a44:	695c6962 	ldmdbvs	ip, {r1, r5, r6, r8, fp, sp, lr}^
    1a48:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    1a4c:	00006564 	andeq	r6, r0, r4, ror #10
    1a50:	74726175 	ldrbtvc	r6, [r2], #-373	; 0xfffffe8b
    1a54:	0100632e 	tsteq	r0, lr, lsr #6
    1a58:	645f0000 	ldrbvs	r0, [pc], #-0	; 1a60 <__HEAP_SIZE+0xa60>
    1a5c:	75616665 	strbvc	r6, [r1, #-1637]!	; 0xfffff99b
    1a60:	745f746c 	ldrbvc	r7, [pc], #-1132	; 1a68 <__HEAP_SIZE+0xa68>
    1a64:	73657079 	cmnvc	r5, #121	; 0x79
    1a68:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    1a6c:	74730000 	ldrbtvc	r0, [r3], #-0
    1a70:	66656464 	strbtvs	r6, [r5], -r4, ror #8
    1a74:	0300682e 	movweq	r6, #2094	; 0x82e
    1a78:	735f0000 	cmpvc	pc, #0
    1a7c:	6e696474 	mcrvs	4, 3, r6, cr9, cr4, {3}
    1a80:	00682e74 	rsbeq	r2, r8, r4, ror lr
    1a84:	73000004 	movwvc	r0, #4
    1a88:	6f696474 	svcvs	0x00696474
    1a8c:	0500682e 	streq	r6, [r0, #-2094]	; 0xfffff7d2
    1a90:	05000000 	streq	r0, [r0, #-0]
    1a94:	02050016 	andeq	r0, r5, #22
    1a98:	10001a30 	andne	r1, r0, r0, lsr sl
    1a9c:	05011c03 	streq	r1, [r1, #-3075]	; 0xfffff3fd
    1aa0:	04020024 	streq	r0, [r2], #-36	; 0xffffffdc
    1aa4:	0b051301 	bleq	1466b0 <__RAM_SIZE+0x466b0>
    1aa8:	01040200 	mrseq	r0, R12_usr
    1aac:	000c0501 	andeq	r0, ip, r1, lsl #10
    1ab0:	06010402 	streq	r0, [r1], -r2, lsl #8
    1ab4:	000b0501 	andeq	r0, fp, r1, lsl #10
    1ab8:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    1abc:	3d060505 	cfstr32cc	mvfx0, [r6, #-20]	; 0xffffffec
    1ac0:	01061605 	tsteq	r6, r5, lsl #12
    1ac4:	2f060505 	svccs	0x00060505
    1ac8:	13060105 	movwne	r0, #24837	; 0x6105
    1acc:	01000302 	tsteq	r0, r2, lsl #6
    1ad0:	00140501 	andseq	r0, r4, r1, lsl #10
    1ad4:	00000205 	andeq	r0, r0, r5, lsl #4
    1ad8:	22030000 	andcs	r0, r3, #0
    1adc:	002b0501 	eoreq	r0, fp, r1, lsl #10
    1ae0:	13010402 	movwne	r0, #5122	; 0x1402
    1ae4:	02000b05 	andeq	r0, r0, #5120	; 0x1400
    1ae8:	05010104 	streq	r0, [r1, #-260]	; 0xfffffefc
    1aec:	0402000d 	streq	r0, [r2], #-13
    1af0:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    1af4:	0402000b 	streq	r0, [r2], #-11
    1af8:	05052e01 	streq	r2, [r5, #-3585]	; 0xfffff1ff
    1afc:	0c053d06 	stceq	13, cr3, [r5], {6}
    1b00:	01050106 	tsteq	r5, r6, lsl #2
    1b04:	0003022f 	andeq	r0, r3, pc, lsr #4
    1b08:	1e050101 	adfnes	f0, f5, f1
    1b0c:	44020500 	strmi	r0, [r2], #-1280	; 0xfffffb00
    1b10:	0310001a 	tsteq	r0, #26
    1b14:	01060127 	tsteq	r6, r7, lsr #2
    1b18:	2f060505 	svccs	0x00060505
    1b1c:	06090513 			; <UNDEFINED> instruction: 0x06090513
    1b20:	210b0511 	tstcs	fp, r1, lsl r5
    1b24:	21060905 	tstcs	r6, r5, lsl #18
    1b28:	060e052f 	streq	r0, [lr], -pc, lsr #10
    1b2c:	060b0501 	streq	r0, [fp], -r1, lsl #10
    1b30:	0612051e 			; <UNDEFINED> instruction: 0x0612051e
    1b34:	200b0501 	andcs	r0, fp, r1, lsl #10
    1b38:	32060505 	andcc	r0, r6, #20971520	; 0x1400000
    1b3c:	0601053d 			; <UNDEFINED> instruction: 0x0601053d
    1b40:	01002e13 	tsteq	r0, r3, lsl lr
    1b44:	00160501 	andseq	r0, r6, r1, lsl #10
    1b48:	1a640205 	bne	1902364 <__RAM_SIZE+0x1802364>
    1b4c:	31031000 	mrscc	r1, (UNDEF: 3)
    1b50:	13050501 	movwne	r0, #21761	; 0x5501
    1b54:	01061605 	tsteq	r6, r5, lsl #12
    1b58:	3d060505 	cfstr32cc	mvfx0, [r6, #-20]	; 0xffffffec
    1b5c:	01061605 	tsteq	r6, r5, lsl #12
    1b60:	2f060505 	svccs	0x00060505
    1b64:	01061605 	tsteq	r6, r5, lsl #12
    1b68:	2f060505 	svccs	0x00060505
    1b6c:	01061605 	tsteq	r6, r5, lsl #12
    1b70:	3d060505 	cfstr32cc	mvfx0, [r6, #-20]	; 0xffffffec
    1b74:	01061605 	tsteq	r6, r5, lsl #12
    1b78:	2f060505 	svccs	0x00060505
    1b7c:	01061605 	tsteq	r6, r5, lsl #12
    1b80:	022f0105 	eoreq	r0, pc, #1073741825	; 0x40000001
    1b84:	01010004 	tsteq	r1, r4
    1b88:	05002405 	streq	r2, [r0, #-1029]	; 0xfffffbfb
    1b8c:	00000002 	andeq	r0, r0, r2
    1b90:	013a0300 	teqeq	sl, r0, lsl #6
    1b94:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    1b98:	01052106 	tsteq	r5, r6, lsl #2
    1b9c:	01022f06 	tsteq	r2, r6, lsl #30
    1ba0:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    1ba4:	02050030 	andeq	r0, r5, #48	; 0x30
    1ba8:	00000000 	andeq	r0, r0, r0
    1bac:	06013e03 	streq	r3, [r1], -r3, lsl #28
    1bb0:	06050501 	streq	r0, [r5], -r1, lsl #10
    1bb4:	0c05133d 	stceq	3, cr1, [r5], {61}	; 0x3d
    1bb8:	09050106 	stmdbeq	r5, {r1, r2, r8}
    1bbc:	14053406 	strne	r3, [r5], #-1030	; 0xfffffbfa
    1bc0:	09050106 	stmdbeq	r5, {r1, r2, r8}
    1bc4:	0c052106 	stfeqs	f2, [r5], {6}
    1bc8:	0b050106 	bleq	141fe8 <__RAM_SIZE+0x41fe8>
    1bcc:	207a0306 	rsbscs	r0, sl, r6, lsl #6
    1bd0:	05010505 	streq	r0, [r1, #-1285]	; 0xfffffafb
    1bd4:	0e051309 	cdpeq	3, 0, cr1, cr5, cr9, {0}
    1bd8:	0c050106 	stfeqs	f0, [r5], {6}
    1bdc:	0609052e 	streq	r0, [r9], -lr, lsr #10
    1be0:	060b0521 	streq	r0, [fp], -r1, lsr #10
    1be4:	00170501 	andseq	r0, r7, r1, lsl #10
    1be8:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    1bec:	34060505 	strcc	r0, [r6], #-1285	; 0xfffffafb
    1bf0:	13060105 	movwne	r0, #24837	; 0x6105
    1bf4:	01002020 	tsteq	r0, r0, lsr #32
    1bf8:	0005a401 	andeq	sl, r5, r1, lsl #8
    1bfc:	5b000300 	blpl	2804 <__HEAP_SIZE+0x1804>
    1c00:	02000002 	andeq	r0, r0, #2
    1c04:	0d0efb01 	vstreq	d15, [lr, #-4]
    1c08:	01010100 	mrseq	r0, (UNDEF: 17)
    1c0c:	00000001 	andeq	r0, r0, r1
    1c10:	01000001 	tsteq	r0, r1
    1c14:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    1c18:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    1c1c:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    1c20:	6c697475 	cfstrdvs	mvd7, [r9], #-468	; 0xfffffe2c
    1c24:	61662f73 	smcvs	25331	; 0x62f3
    1c28:	2d746c75 	ldclcs	12, cr6, [r4, #-468]!	; 0xfffffe2c
    1c2c:	706d7564 	rsbvc	r7, sp, r4, ror #10
    1c30:	6372732f 	cmnvs	r2, #-1140850688	; 0xbc000000
    1c34:	2f2e2e00 	svccs	0x002e2e00
    1c38:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    1c3c:	2f737265 	svccs	0x00737265
    1c40:	49534d43 	ldmdbmi	r3, {r0, r1, r6, r8, sl, fp, lr}^
    1c44:	2f355f53 	svccs	0x00355f53
    1c48:	49534d43 	ldmdbmi	r3, {r0, r1, r6, r8, sl, fp, lr}^
    1c4c:	6f432f53 	svcvs	0x00432f53
    1c50:	492f6572 	stmdbmi	pc!, {r1, r4, r5, r6, r8, sl, sp, lr}	; <UNPREDICTABLE>
    1c54:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    1c58:	63006564 	movwvs	r6, #1380	; 0x564
    1c5c:	73755c3a 	cmnvc	r5, #14848	; 0x3a00
    1c60:	5c737265 	lfmpl	f7, 2, [r3], #-404	; 0xfffffe6c
    1c64:	6f646978 	svcvs	0x00646978
    1c68:	72705c6e 	rsbsvc	r5, r0, #28160	; 0x6e00
    1c6c:	6172676f 	cmnvs	r2, pc, ror #14
    1c70:	72615c6d 	rsbvc	r5, r1, #27904	; 0x6d00
    1c74:	63675f6d 	cmnvs	r7, #436	; 0x1b4
    1c78:	63675c63 	cmnvs	r7, #25344	; 0x6300
    1c7c:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
    1c80:	6f6e2d6d 	svcvs	0x006e2d6d
    1c84:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    1c88:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
    1c8c:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
    1c90:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
    1c94:	30312e31 	eorscc	r2, r1, r1, lsr lr
    1c98:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    1c9c:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    1ca0:	61652d65 	cmnvs	r5, r5, ror #26
    1ca4:	695c6962 	ldmdbvs	ip, {r1, r5, r6, r8, fp, sp, lr}^
    1ca8:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    1cac:	6d5c6564 	cfldr64vs	mvdx6, [ip, #-400]	; 0xfffffe70
    1cb0:	69686361 	stmdbvs	r8!, {r0, r5, r6, r8, r9, sp, lr}^
    1cb4:	6300656e 	movwvs	r6, #1390	; 0x56e
    1cb8:	73755c3a 	cmnvc	r5, #14848	; 0x3a00
    1cbc:	5c737265 	lfmpl	f7, 2, [r3], #-404	; 0xfffffe6c
    1cc0:	6f646978 	svcvs	0x00646978
    1cc4:	72705c6e 	rsbsvc	r5, r0, #28160	; 0x6e00
    1cc8:	6172676f 	cmnvs	r2, pc, ror #14
    1ccc:	72615c6d 	rsbvc	r5, r1, #27904	; 0x6d00
    1cd0:	63675f6d 	cmnvs	r7, #436	; 0x1b4
    1cd4:	63675c63 	cmnvs	r7, #25344	; 0x6300
    1cd8:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
    1cdc:	6f6e2d6d 	svcvs	0x006e2d6d
    1ce0:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    1ce4:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
    1ce8:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
    1cec:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
    1cf0:	30312e31 	eorscc	r2, r1, r1, lsr lr
    1cf4:	62696c5c 	rsbvs	r6, r9, #92, 24	; 0x5c00
    1cf8:	6363675c 	cmnvs	r3, #92, 14	; 0x1700000
    1cfc:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    1d00:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    1d04:	61652d65 	cmnvs	r5, r5, ror #26
    1d08:	315c6962 	cmpcc	ip, r2, ror #18
    1d0c:	2e332e30 	mrccs	14, 1, r2, cr3, cr0, {1}
    1d10:	6e695c31 	mcrvs	12, 3, r5, cr9, cr1, {1}
    1d14:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    1d18:	3a630065 	bcc	18c1eb4 <__RAM_SIZE+0x17c1eb4>
    1d1c:	6573755c 	ldrbvs	r7, [r3, #-1372]!	; 0xfffffaa4
    1d20:	785c7372 	ldmdavc	ip, {r1, r4, r5, r6, r8, r9, ip, sp, lr}^
    1d24:	6e6f6469 	cdpvs	4, 6, cr6, cr15, cr9, {3}
    1d28:	6f72705c 	svcvs	0x0072705c
    1d2c:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
    1d30:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    1d34:	6363675f 	cmnvs	r3, #24903680	; 0x17c0000
    1d38:	6363675c 	cmnvs	r3, #92, 14	; 0x1700000
    1d3c:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
    1d40:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    1d44:	61652d65 	cmnvs	r5, r5, ror #26
    1d48:	312d6962 			; <UNDEFINED> instruction: 0x312d6962
    1d4c:	2d332e30 	ldccs	14, cr2, [r3, #-192]!	; 0xffffff40
    1d50:	31323032 	teqcc	r2, r2, lsr r0
    1d54:	5c30312e 	ldfpls	f3, [r0], #-184	; 0xffffff48
    1d58:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    1d5c:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    1d60:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    1d64:	6e695c69 	cdpvs	12, 6, cr5, cr9, cr9, {3}
    1d68:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    1d6c:	79735c65 	ldmdbvc	r3!, {r0, r2, r5, r6, sl, fp, ip, lr}^
    1d70:	2e2e0073 	mcrcs	0, 1, r0, cr14, cr3, {3}
    1d74:	2f2e2e2f 	svccs	0x002e2e2f
    1d78:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 1cc8 <__HEAP_SIZE+0xcc8>
    1d7c:	74756269 	ldrbtvc	r6, [r5], #-617	; 0xfffffd97
    1d80:	2f736c69 	svccs	0x00736c69
    1d84:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
    1d88:	75642d74 	strbvc	r2, [r4, #-3444]!	; 0xfffff28c
    1d8c:	692f706d 	stmdbvs	pc!, {r0, r2, r3, r5, r6, ip, sp, lr}	; <UNPREDICTABLE>
    1d90:	6300636e 	movwvs	r6, #878	; 0x36e
    1d94:	73755c3a 	cmnvc	r5, #14848	; 0x3a00
    1d98:	5c737265 	lfmpl	f7, 2, [r3], #-404	; 0xfffffe6c
    1d9c:	6f646978 	svcvs	0x00646978
    1da0:	72705c6e 	rsbsvc	r5, r0, #28160	; 0x6e00
    1da4:	6172676f 	cmnvs	r2, pc, ror #14
    1da8:	72615c6d 	rsbvc	r5, r1, #27904	; 0x6d00
    1dac:	63675f6d 	cmnvs	r7, #436	; 0x1b4
    1db0:	63675c63 	cmnvs	r7, #25344	; 0x6300
    1db4:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
    1db8:	6f6e2d6d 	svcvs	0x006e2d6d
    1dbc:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    1dc0:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
    1dc4:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
    1dc8:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
    1dcc:	30312e31 	eorscc	r2, r1, r1, lsr lr
    1dd0:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    1dd4:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    1dd8:	61652d65 	cmnvs	r5, r5, ror #26
    1ddc:	695c6962 	ldmdbvs	ip, {r1, r5, r6, r8, fp, sp, lr}^
    1de0:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    1de4:	00006564 	andeq	r6, r0, r4, ror #10
    1de8:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
    1dec:	75642d74 	strbvc	r2, [r4, #-3444]!	; 0xfffff28c
    1df0:	632e706d 			; <UNDEFINED> instruction: 0x632e706d
    1df4:	00000100 	andeq	r0, r0, r0, lsl #2
    1df8:	69736d63 	ldmdbvs	r3!, {r0, r1, r5, r6, r8, sl, fp, sp, lr}^
    1dfc:	63675f73 	cmnvs	r7, #460	; 0x1cc
    1e00:	00682e63 	rsbeq	r2, r8, r3, ror #28
    1e04:	5f000002 	svcpl	0x00000002
    1e08:	61666564 	cmnvs	r6, r4, ror #10
    1e0c:	5f746c75 	svcpl	0x00746c75
    1e10:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
    1e14:	00682e73 	rsbeq	r2, r8, r3, ror lr
    1e18:	73000003 	movwvc	r0, #3
    1e1c:	65646474 	strbvs	r6, [r4, #-1140]!	; 0xfffffb8c
    1e20:	00682e66 	rsbeq	r2, r8, r6, ror #28
    1e24:	5f000004 	svcpl	0x00000004
    1e28:	69647473 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
    1e2c:	682e746e 	stmdavs	lr!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
    1e30:	00000500 	andeq	r0, r0, r0, lsl #10
    1e34:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
    1e38:	75642d74 	strbvc	r2, [r4, #-3444]!	; 0xfffff28c
    1e3c:	682e706d 	stmdavs	lr!, {r0, r2, r3, r5, r6, ip, sp, lr}
    1e40:	00000600 	andeq	r0, r0, r0, lsl #12
    1e44:	69647473 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
    1e48:	00682e6f 	rsbeq	r2, r8, pc, ror #28
    1e4c:	3c000007 	stccc	0, cr0, [r0], {7}
    1e50:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	; 0xfffffe78
    1e54:	6e692d74 	mcrvs	13, 3, r2, cr9, cr4, {3}
    1e58:	0000003e 	andeq	r0, r0, lr, lsr r0
    1e5c:	38050000 	stmdacc	r5, {}	; <UNPREDICTABLE>
    1e60:	88020500 	stmdahi	r2, {r8, sl}
    1e64:	0310001a 	tsteq	r0, #26
    1e68:	060100fe 			; <UNDEFINED> instruction: 0x060100fe
    1e6c:	06050501 	streq	r0, [r5], -r1, lsl #10
    1e70:	060e0521 	streq	r0, [lr], -r1, lsr #10
    1e74:	06050501 	streq	r0, [r5], -r1, lsl #10
    1e78:	0a05132f 	beq	146b3c <__RAM_SIZE+0x46b3c>
    1e7c:	06050501 	streq	r0, [r5], -r1, lsl #10
    1e80:	00090501 	andeq	r0, r9, r1, lsl #10
    1e84:	06030402 	streq	r0, [r3], -r2, lsl #8
    1e88:	00140521 	andseq	r0, r4, r1, lsr #10
    1e8c:	06030402 	streq	r0, [r3], -r2, lsl #8
    1e90:	00120501 	andseq	r0, r2, r1, lsl #10
    1e94:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
    1e98:	02003d05 	andeq	r3, r0, #320	; 0x140
    1e9c:	57060304 	strpl	r0, [r6, -r4, lsl #6]
    1ea0:	02003e05 	andeq	r3, r0, #5, 28	; 0x50
    1ea4:	01060304 	tsteq	r6, r4, lsl #6
    1ea8:	02001505 	andeq	r1, r0, #20971520	; 0x1400000
    1eac:	20060104 	andcs	r0, r6, r4, lsl #2
    1eb0:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    1eb4:	01060104 	tsteq	r6, r4, lsl #2
    1eb8:	22053106 	andcs	r3, r5, #-2147483647	; 0x80000001
    1ebc:	052f0106 	streq	r0, [pc, #-262]!	; 1dbe <__HEAP_SIZE+0xdbe>
    1ec0:	052f0605 	streq	r0, [pc, #-1541]!	; 18c3 <__HEAP_SIZE+0x8c3>
    1ec4:	2e130601 	cfmsub32cs	mvax0, mvfx0, mvfx3, mvfx1
    1ec8:	01000202 	tsteq	r0, r2, lsl #4
    1ecc:	00330501 	eorseq	r0, r3, r1, lsl #10
    1ed0:	1ab40205 	bne	fed026ec <__StackTop+0xc6c026ec>
    1ed4:	89031000 	stmdbhi	r3, {ip}
    1ed8:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    1edc:	060e0516 			; <UNDEFINED> instruction: 0x060e0516
    1ee0:	06050501 	streq	r0, [r5], -r1, lsl #10
    1ee4:	0632052f 	ldrteq	r0, [r2], -pc, lsr #10
    1ee8:	200e0501 	andcs	r0, lr, r1, lsl #10
    1eec:	2f060505 	svccs	0x00060505
    1ef0:	01060805 	tsteq	r6, r5, lsl #16
    1ef4:	02002605 	andeq	r2, r0, #5242880	; 0x500000
    1ef8:	053c0104 	ldreq	r0, [ip, #-260]!	; 0xfffffefc
    1efc:	053f0605 	ldreq	r0, [pc, #-1541]!	; 18ff <__HEAP_SIZE+0x8ff>
    1f00:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
    1f04:	04020026 	streq	r0, [r2], #-38	; 0xffffffda
    1f08:	0c053c01 	stceq	12, cr3, [r5], {1}
    1f0c:	1005203f 	andne	r2, r5, pc, lsr r0
    1f10:	2020201b 	eorcs	r2, r0, fp, lsl r0
    1f14:	05202023 	streq	r2, [r0, #-35]!	; 0xffffffdd
    1f18:	01022301 	tsteq	r2, r1, lsl #6
    1f1c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    1f20:	02050036 	andeq	r0, r5, #54	; 0x36
    1f24:	10001aec 	andne	r1, r0, ip, ror #21
    1f28:	01019803 	tsteq	r1, r3, lsl #16
    1f2c:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    1f30:	2e062f06 	cdpcs	15, 0, cr2, cr6, cr6, {0}
    1f34:	05133006 	ldreq	r3, [r3, #-6]
    1f38:	203e0601 	eorscs	r0, lr, r1, lsl #12
    1f3c:	01000202 	tsteq	r0, r2, lsl #4
    1f40:	001c0501 	andseq	r0, ip, r1, lsl #10
    1f44:	1b040205 	blne	102760 <__RAM_SIZE+0x2760>
    1f48:	f3031000 	vhadd.u8	d1, d3, d0
    1f4c:	05050100 	streq	r0, [r5, #-256]	; 0xffffff00
    1f50:	061a0521 	ldreq	r0, [sl], -r1, lsr #10
    1f54:	20180501 	andscs	r0, r8, r1, lsl #10
    1f58:	2f060505 	svccs	0x00060505
    1f5c:	01061a05 	tsteq	r6, r5, lsl #20
    1f60:	05201805 	streq	r1, [r0, #-2053]!	; 0xfffff7fb
    1f64:	4c2f0605 	stcmi	6, cr0, [pc], #-20	; 1f58 <__HEAP_SIZE+0xf58>
    1f68:	06010568 	streq	r0, [r1], -r8, ror #10
    1f6c:	0013024c 	andseq	r0, r3, ip, asr #4
    1f70:	73050101 	movwvc	r0, #20737	; 0x5101
    1f74:	54020500 	strpl	r0, [r2], #-1280	; 0xfffffb00
    1f78:	0310001b 	tsteq	r0, #27
    1f7c:	060101db 			; <UNDEFINED> instruction: 0x060101db
    1f80:	06050501 	streq	r0, [r5], -r1, lsl #10
    1f84:	0513132f 	ldreq	r1, [r3, #-815]	; 0xfffffcd1
    1f88:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
    1f8c:	0402001a 	streq	r0, [r2], #-26	; 0xffffffe6
    1f90:	05055801 	streq	r5, [r5, #-2049]	; 0xfffff7ff
    1f94:	02002306 	andeq	r2, r0, #402653184	; 0x18000000
    1f98:	20060104 	andcs	r0, r6, r4, lsl #2
    1f9c:	05290905 	streq	r0, [r9, #-2309]!	; 0xfffff6fb
    1fa0:	04020005 	streq	r0, [r2], #-5
    1fa4:	00360602 	eorseq	r0, r6, r2, lsl #12
    1fa8:	20010402 	andcs	r0, r1, r2, lsl #8
    1fac:	03040200 	movweq	r0, #16896	; 0x4200
    1fb0:	09052006 	stmdbeq	r5, {r1, r2, sp}
    1fb4:	0c053006 	stceq	0, cr3, [r5], {6}
    1fb8:	09050106 	stmdbeq	r5, {r1, r2, r8}
    1fbc:	13052206 	movwne	r2, #20998	; 0x5206
    1fc0:	0c050106 	stfeqs	f0, [r5], {6}
    1fc4:	002f0520 	eoreq	r0, pc, r0, lsr #10
    1fc8:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    1fcc:	02002605 	andeq	r2, r0, #5242880	; 0x500000
    1fd0:	05200104 	streq	r0, [r0, #-260]!	; 0xfffffefc
    1fd4:	05320609 	ldreq	r0, [r2, #-1545]!	; 0xfffff9f7
    1fd8:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    1fdc:	14400609 	strbne	r0, [r0], #-1545	; 0xfffff9f7
    1fe0:	01060c05 	tsteq	r6, r5, lsl #24
    1fe4:	30060905 	andcc	r0, r6, r5, lsl #18
    1fe8:	01060c05 	tsteq	r6, r5, lsl #24
    1fec:	24060905 	strcs	r0, [r6], #-2309	; 0xfffff6fb
    1ff0:	01060e05 	tsteq	r6, r5, lsl #28
    1ff4:	3e060905 	vmlacc.f16	s0, s12, s10	; <UNPREDICTABLE>
    1ff8:	01060e05 	tsteq	r6, r5, lsl #28
    1ffc:	052e0c05 	streq	r0, [lr, #-3077]!	; 0xfffff3fb
    2000:	05320609 	ldreq	r0, [r2, #-1545]!	; 0xfffff9f7
    2004:	05010617 	streq	r0, [r1, #-1559]	; 0xfffff9e9
    2008:	052f0609 	streq	r0, [pc, #-1545]!	; 1a07 <__HEAP_SIZE+0xa07>
    200c:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    2010:	05210609 	streq	r0, [r1, #-1545]!	; 0xfffff9f7
    2014:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    2018:	10053301 	andne	r3, r5, r1, lsl #6
    201c:	3c3c5a03 			; <UNDEFINED> instruction: 0x3c3c5a03
    2020:	0602583f 			; <UNDEFINED> instruction: 0x0602583f
    2024:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    2028:	02050043 	andeq	r0, r5, #67	; 0x43
    202c:	10001bd0 	ldrdne	r1, [r0], -r0
    2030:	0101a003 	tsteq	r1, r3
    2034:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    2038:	13133d06 	tstne	r3, #384	; 0x180
    203c:	18051413 	stmdane	r5, {r0, r1, r4, sl, ip}
    2040:	16050106 	strne	r0, [r5], -r6, lsl #2
    2044:	06050520 	streq	r0, [r5], -r0, lsr #10
    2048:	0618052f 	ldreq	r0, [r8], -pc, lsr #10
    204c:	20160501 	andscs	r0, r6, r1, lsl #10
    2050:	21060505 	tstcs	r6, r5, lsl #10
    2054:	01061805 	tsteq	r6, r5, lsl #16
    2058:	05201605 	streq	r1, [r0, #-1541]!	; 0xfffff9fb
    205c:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
    2060:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    2064:	05052016 	streq	r2, [r5, #-22]	; 0xffffffea
    2068:	18052106 	stmdane	r5, {r1, r2, r8, sp}
    206c:	16050106 	strne	r0, [r5], -r6, lsl #2
    2070:	06050520 	streq	r0, [r5], -r0, lsr #10
    2074:	06180521 	ldreq	r0, [r8], -r1, lsr #10
    2078:	20160501 	andscs	r0, r6, r1, lsl #10
    207c:	21060505 	tstcs	r6, r5, lsl #10
    2080:	01061805 	tsteq	r6, r5, lsl #16
    2084:	05201605 	streq	r1, [r0, #-1541]!	; 0xfffff9fb
    2088:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
    208c:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    2090:	05052016 	streq	r2, [r5, #-22]	; 0xffffffea
    2094:	18052106 	stmdane	r5, {r1, r2, r8, sp}
    2098:	16050106 	strne	r0, [r5], -r6, lsl #2
    209c:	06050520 	streq	r0, [r5], -r0, lsr #10
    20a0:	06180521 	ldreq	r0, [r8], -r1, lsr #10
    20a4:	20160501 	andscs	r0, r6, r1, lsl #10
    20a8:	21060505 	tstcs	r6, r5, lsl #10
    20ac:	01061805 	tsteq	r6, r5, lsl #16
    20b0:	05201605 	streq	r1, [r0, #-1541]!	; 0xfffff9fb
    20b4:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
    20b8:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    20bc:	05052016 	streq	r2, [r5, #-22]	; 0xffffffea
    20c0:	18052106 	stmdane	r5, {r1, r2, r8, sp}
    20c4:	16050106 	strne	r0, [r5], -r6, lsl #2
    20c8:	06050520 	streq	r0, [r5], -r0, lsr #10
    20cc:	06180521 	ldreq	r0, [r8], -r1, lsr #10
    20d0:	20160501 	andscs	r0, r6, r1, lsl #10
    20d4:	21060505 	tstcs	r6, r5, lsl #10
    20d8:	01061805 	tsteq	r6, r5, lsl #16
    20dc:	05201605 	streq	r1, [r0, #-1541]!	; 0xfffff9fb
    20e0:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
    20e4:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    20e8:	05052016 	streq	r2, [r5, #-22]	; 0xffffffea
    20ec:	2e062206 	cdpcs	2, 0, cr2, cr6, cr6, {0}
    20f0:	3d3d2f06 	ldccc	15, cr2, [sp, #-24]!	; 0xffffffe8
    20f4:	4b4b4b4b 	blmi	12d4e28 <__RAM_SIZE+0x11d4e28>
    20f8:	4b4b4b4b 	blmi	12d4e2c <__RAM_SIZE+0x11d4e2c>
    20fc:	4b4b4b4b 	blmi	12d4e30 <__RAM_SIZE+0x11d4e30>
    2100:	4b4b4b4b 	blmi	12d4e34 <__RAM_SIZE+0x11d4e34>
    2104:	05133e3d 	ldreq	r3, [r3, #-3645]	; 0xfffff1c3
    2108:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
    210c:	06860605 	streq	r0, [r6], r5, lsl #12
    2110:	4b2f0620 	blmi	bc3998 <__RAM_SIZE+0xac3998>
    2114:	01061005 	tsteq	r6, r5
    2118:	05200505 	streq	r0, [r0, #-1285]!	; 0xfffffafb
    211c:	04020009 	streq	r0, [r2], #-9
    2120:	05210603 	streq	r0, [r1, #-1539]!	; 0xfffff9fd
    2124:	04020024 	streq	r0, [r2], #-36	; 0xffffffdc
    2128:	29056503 	stmdbcs	r5, {r0, r1, r8, sl, sp, lr}
    212c:	03040200 	movweq	r0, #16896	; 0x4200
    2130:	15050106 	strne	r0, [r5, #-262]	; 0xfffffefa
    2134:	01040200 	mrseq	r0, R12_usr
    2138:	05052006 	streq	r2, [r5, #-6]
    213c:	01040200 	mrseq	r0, R12_usr
    2140:	31060106 	tstcc	r6, r6, lsl #2
    2144:	01040200 	mrseq	r0, R12_usr
    2148:	000e053d 	andeq	r0, lr, sp, lsr r5
    214c:	01010402 	tsteq	r1, r2, lsl #8
    2150:	02000b05 	andeq	r0, r0, #5120	; 0x1400
    2154:	02010104 	andeq	r0, r1, #4, 2
    2158:	01010031 	tsteq	r1, r1, lsr r0
    215c:	05002e05 	streq	r2, [r0, #-3589]	; 0xfffff1fb
    2160:	00000002 	andeq	r0, r0, r2
    2164:	02870300 	addeq	r0, r7, #0, 6
    2168:	13050501 	movwne	r0, #21761	; 0x5501
    216c:	1f050204 	svcne	0x00050204
    2170:	0106da03 	tsteq	r6, r3, lsl #20
    2174:	14140305 	ldrne	r0, [r4], #-773	; 0xfffffcfb
    2178:	0401062f 	streq	r0, [r1], #-1583	; 0xfffff9d1
    217c:	03010501 	movweq	r0, #5377	; 0x1501
    2180:	020179a2 	andeq	r7, r1, #2654208	; 0x288000
    2184:	01010001 	tsteq	r1, r1
    2188:	05002e05 	streq	r2, [r0, #-3589]	; 0xfffff1fb
    218c:	00000002 	andeq	r0, r0, r2
    2190:	028b0300 	addeq	r0, fp, #0, 6
    2194:	13050501 	movwne	r0, #21761	; 0x5501
    2198:	13060105 	movwne	r0, #24837	; 0x6105
    219c:	01000402 	tsteq	r0, r2, lsl #8
    21a0:	00013301 	andeq	r3, r1, r1, lsl #6
    21a4:	bb000300 	bllt	2dac <__HEAP_SIZE+0x1dac>
    21a8:	02000000 	andeq	r0, r0, #0
    21ac:	0d0efb01 	vstreq	d15, [lr, #-4]
    21b0:	01010100 	mrseq	r0, (UNDEF: 17)
    21b4:	00000001 	andeq	r0, r0, r1
    21b8:	01000001 	tsteq	r0, r1
    21bc:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    21c0:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    21c4:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    21c8:	6c697475 	cfstrdvs	mvd7, [r9], #-468	; 0xfffffe2c
    21cc:	61662f73 	smcvs	25331	; 0x62f3
    21d0:	2d746c75 	ldclcs	12, cr6, [r4, #-468]!	; 0xfffffe2c
    21d4:	706d7564 	rsbvc	r7, sp, r4, ror #10
    21d8:	7570632f 	ldrbvc	r6, [r0, #-815]!	; 0xfffffcd1
    21dc:	726f632f 	rsbvc	r6, pc, #-1140850688	; 0xbc000000
    21e0:	2d786574 	cfldr64cs	mvdx6, [r8, #-464]!	; 0xfffffe30
    21e4:	0033336d 	eorseq	r3, r3, sp, ror #6
    21e8:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
    21ec:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    21f0:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
    21f4:	705c6e6f 	subsvc	r6, ip, pc, ror #28
    21f8:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
    21fc:	615c6d61 	cmpvs	ip, r1, ror #26
    2200:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
    2204:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
    2208:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
    220c:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    2210:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    2214:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    2218:	2e30312d 	rsfcssp	f3, f0, #5.0
    221c:	30322d33 	eorscc	r2, r2, r3, lsr sp
    2220:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
    2224:	72615c30 	rsbvc	r5, r1, #48, 24	; 0x3000
    2228:	6f6e2d6d 	svcvs	0x006e2d6d
    222c:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    2230:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
    2234:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    2238:	00656475 	rsbeq	r6, r5, r5, ror r4
    223c:	75616600 	strbvc	r6, [r1, #-1536]!	; 0xfffffa00
    2240:	682d746c 	stmdavs	sp!, {r2, r3, r5, r6, sl, ip, sp, lr}
    2244:	632e6c61 			; <UNDEFINED> instruction: 0x632e6c61
    2248:	00000100 	andeq	r0, r0, r0, lsl #2
    224c:	6975623c 	ldmdbvs	r5!, {r2, r3, r4, r5, r9, sp, lr}^
    2250:	692d746c 	pushvs	{r2, r3, r5, r6, sl, ip, sp, lr}
    2254:	00003e6e 	andeq	r3, r0, lr, ror #28
    2258:	74730000 	ldrbtvc	r0, [r3], #-0
    225c:	2e6f6964 	vnmulcs.f16	s13, s30, s9	; <UNPREDICTABLE>
    2260:	00020068 	andeq	r0, r2, r8, rrx
    2264:	35050000 	strcc	r0, [r5, #-0]
    2268:	54020500 	strpl	r0, [r2], #-1280	; 0xfffffb00
    226c:	0310001d 	tsteq	r0, #29
    2270:	0106010e 	tsteq	r6, lr, lsl #2
    2274:	2f060505 	svccs	0x00060505
    2278:	2f062006 	svccs	0x00062006
    227c:	0608053d 			; <UNDEFINED> instruction: 0x0608053d
    2280:	06090501 	streq	r0, [r9], -r1, lsl #10
    2284:	4005053d 	andmi	r0, r5, sp, lsr r5
    2288:	0608053d 			; <UNDEFINED> instruction: 0x0608053d
    228c:	06090501 	streq	r0, [r9], -r1, lsl #10
    2290:	4005053d 	andmi	r0, r5, sp, lsr r5
    2294:	0608053d 			; <UNDEFINED> instruction: 0x0608053d
    2298:	06090501 	streq	r0, [r9], -r1, lsl #10
    229c:	4005053d 	andmi	r0, r5, sp, lsr r5
    22a0:	0608053d 			; <UNDEFINED> instruction: 0x0608053d
    22a4:	06090501 	streq	r0, [r9], -r1, lsl #10
    22a8:	4005053d 	andmi	r0, r5, sp, lsr r5
    22ac:	0608053d 			; <UNDEFINED> instruction: 0x0608053d
    22b0:	06090501 	streq	r0, [r9], -r1, lsl #10
    22b4:	4005053d 	andmi	r0, r5, sp, lsr r5
    22b8:	0608053d 			; <UNDEFINED> instruction: 0x0608053d
    22bc:	06090501 	streq	r0, [r9], -r1, lsl #10
    22c0:	4005053d 	andmi	r0, r5, sp, lsr r5
    22c4:	3d060105 	stfccs	f0, [r6, #-20]	; 0xffffffec
    22c8:	03060905 	movweq	r0, #26885	; 0x6905
    22cc:	5050205f 	subspl	r2, r0, pc, asr r0
    22d0:	02505050 	subseq	r5, r0, #80	; 0x50
    22d4:	0101002b 	tsteq	r1, fp, lsr #32
    22d8:	00000399 	muleq	r0, r9, r3
    22dc:	018c0003 	orreq	r0, ip, r3
    22e0:	01020000 	mrseq	r0, (UNDEF: 2)
    22e4:	000d0efb 	strdeq	r0, [sp], -fp
    22e8:	01010101 	tsteq	r1, r1, lsl #2
    22ec:	01000000 	mrseq	r0, (UNDEF: 0)
    22f0:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
    22f4:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    22f8:	2f2e2e2f 	svccs	0x002e2e2f
    22fc:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
    2300:	2f736f74 	svccs	0x00736f74
    2304:	65657246 	strbvs	r7, [r5, #-582]!	; 0xfffffdba
    2308:	534f5452 	movtpl	r5, #62546	; 0xf452
    230c:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
    2310:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
    2314:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
    2318:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
    231c:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
    2320:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
    2324:	5f6d7261 	svcpl	0x006d7261
    2328:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
    232c:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
    2330:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    2334:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    2338:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    233c:	30312d69 	eorscc	r2, r1, r9, ror #26
    2340:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
    2344:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
    2348:	615c3031 	cmpvs	ip, r1, lsr r0
    234c:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    2350:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    2354:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    2358:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
    235c:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    2360:	63616d5c 	cmnvs	r1, #92, 26	; 0x1700
    2364:	656e6968 	strbvs	r6, [lr, #-2408]!	; 0xfffff698
    2368:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
    236c:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
    2370:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
    2374:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
    2378:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
    237c:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
    2380:	5f6d7261 	svcpl	0x006d7261
    2384:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
    2388:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
    238c:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    2390:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    2394:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    2398:	30312d69 	eorscc	r2, r1, r9, ror #26
    239c:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
    23a0:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
    23a4:	615c3031 	cmpvs	ip, r1, lsr r0
    23a8:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    23ac:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    23b0:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    23b4:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
    23b8:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    23bc:	7379735c 	cmnvc	r9, #92, 6	; 0x70000001
    23c0:	2f2e2e00 	svccs	0x002e2e00
    23c4:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    23c8:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    23cc:	6f747262 	svcvs	0x00747262
    23d0:	72462f73 	subvc	r2, r6, #460	; 0x1cc
    23d4:	54526565 	ldrbpl	r6, [r2], #-1381	; 0xfffffa9b
    23d8:	702f534f 	eorvc	r5, pc, pc, asr #6
    23dc:	6174726f 	cmnvs	r4, pc, ror #4
    23e0:	2f656c62 	svccs	0x00656c62
    23e4:	2f434347 	svccs	0x00434347
    23e8:	5f4d5241 	svcpl	0x004d5241
    23ec:	33334d43 	teqcc	r3, #4288	; 0x10c0
    23f0:	5a544e5f 	bpl	1515d74 <__RAM_SIZE+0x1415d74>
    23f4:	6e6f6e2f 	cdpvs	14, 6, cr6, cr15, cr15, {1}
    23f8:	6365735f 	cmnvs	r5, #2080374785	; 0x7c000001
    23fc:	00657275 	rsbeq	r7, r5, r5, ror r2
    2400:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    2404:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    2408:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    240c:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    2410:	6572462f 	ldrbvs	r4, [r2, #-1583]!	; 0xfffff9d1
    2414:	4f545265 	svcmi	0x00545265
    2418:	6e692f53 	mcrvs	15, 3, r2, cr9, cr3, {2}
    241c:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    2420:	6c000065 	stcvs	0, cr0, [r0], {101}	; 0x65
    2424:	2e747369 	cdpcs	3, 7, cr7, cr4, cr9, {3}
    2428:	00010063 	andeq	r0, r1, r3, rrx
    242c:	65645f00 	strbvs	r5, [r4, #-3840]!	; 0xfffff100
    2430:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
    2434:	79745f74 	ldmdbvc	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    2438:	2e736570 	mrccs	5, 3, r6, cr3, cr0, {3}
    243c:	00020068 	andeq	r0, r2, r8, rrx
    2440:	74735f00 	ldrbtvc	r5, [r3], #-3840	; 0xfffff100
    2444:	746e6964 	strbtvc	r6, [lr], #-2404	; 0xfffff69c
    2448:	0300682e 	movweq	r6, #2094	; 0x82e
    244c:	6f700000 	svcvs	0x00700000
    2450:	616d7472 	smcvs	55106	; 0xd742
    2454:	636f7263 	cmnvs	pc, #805306374	; 0x30000006
    2458:	6f6d6d6f 	svcvs	0x006d6d6f
    245c:	00682e6e 	rsbeq	r2, r8, lr, ror #28
    2460:	6c000004 	stcvs	0, cr0, [r0], {4}
    2464:	2e747369 	cdpcs	3, 7, cr7, cr4, cr9, {3}
    2468:	00050068 	andeq	r0, r5, r8, rrx
    246c:	01050000 	mrseq	r0, (UNDEF: 5)
    2470:	50020500 	andpl	r0, r2, r0, lsl #10
    2474:	0310001e 	tsteq	r0, #30
    2478:	29050131 	stmdbcs	r5, {r0, r4, r5, r8}
    247c:	17050513 	smladne	r5, r3, r5, r0
    2480:	01062805 	tsteq	r6, r5, lsl #16
    2484:	052e1505 	streq	r1, [lr, #-1285]!	; 0xfffffafb
    2488:	0522064b 	streq	r0, [r2, #-1611]!	; 0xfffff9b5
    248c:	21051605 	tstcs	r5, r5, lsl #12
    2490:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    2494:	1d054006 	stcne	0, cr4, [r5, #-24]	; 0xffffffe8
    2498:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    249c:	21052106 	tstcs	r5, r6, lsl #2
    24a0:	09050106 	stmdbeq	r5, {r1, r2, r8}
    24a4:	22052506 	andcs	r2, r5, #25165824	; 0x1800000
    24a8:	09050106 	stmdbeq	r5, {r1, r2, r8}
    24ac:	26052f06 	strcs	r2, [r5], -r6, lsl #30
    24b0:	50050106 	andpl	r0, r5, r6, lsl #2
    24b4:	05052106 	streq	r2, [r5, #-262]	; 0xfffffefa
    24b8:	061d0516 			; <UNDEFINED> instruction: 0x061d0516
    24bc:	06330501 	ldrteq	r0, [r3], -r1, lsl #10
    24c0:	22051324 	andcs	r1, r5, #36, 6	; 0x90000000
    24c4:	06010514 			; <UNDEFINED> instruction: 0x06010514
    24c8:	00010213 	andeq	r0, r1, r3, lsl r2
    24cc:	01050101 	tsteq	r5, r1, lsl #2
    24d0:	6a020500 	bvs	838d8 <__HEAP_SIZE+0x828d8>
    24d4:	0310001e 	tsteq	r0, #30
    24d8:	050100d9 	streq	r0, [r1, #-217]	; 0xffffff27
    24dc:	0505132d 	streq	r1, [r5, #-813]	; 0xfffffcd3
    24e0:	06190515 			; <UNDEFINED> instruction: 0x06190515
    24e4:	063c0501 	ldrteq	r0, [ip], -r1, lsl #10
    24e8:	133d0532 	teqne	sp, #209715200	; 0xc800000
    24ec:	05142605 	ldreq	r2, [r4, #-1541]	; 0xfffff9fb
    24f0:	02130601 	andseq	r0, r3, #1048576	; 0x100000
    24f4:	01010001 	tsteq	r1, r1
    24f8:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    24fc:	00000002 	andeq	r0, r0, r2
    2500:	00ea0300 	rsceq	r0, sl, r0, lsl #6
    2504:	13050501 	movwne	r0, #21761	; 0x5501
    2508:	01061805 	tsteq	r6, r5, lsl #16
    250c:	22063705 	andcs	r3, r6, #1310720	; 0x140000
    2510:	05172605 	ldreq	r2, [r7, #-1541]	; 0xfffff9fb
    2514:	05051332 	streq	r1, [r5, #-818]	; 0xfffffcce
    2518:	061b0517 			; <UNDEFINED> instruction: 0x061b0517
    251c:	06050501 	streq	r0, [r5], -r1, lsl #10
    2520:	06280521 	strteq	r0, [r8], -r1, lsr #10
    2524:	201f0501 	andscs	r0, pc, r1, lsl #10
    2528:	23061c05 	movwcs	r1, #27653	; 0x6c05
    252c:	05140505 	ldreq	r0, [r4, #-1285]	; 0xfffffafb
    2530:	05010621 	streq	r0, [r1, #-1569]	; 0xfffff9df
    2534:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
    2538:	05010619 	streq	r0, [r1, #-1561]	; 0xfffff9e7
    253c:	05230605 	streq	r0, [r3, #-1541]!	; 0xfffff9fb
    2540:	05010620 	streq	r0, [r1, #-1568]	; 0xfffff9e0
    2544:	05220605 	streq	r0, [r2, #-1541]!	; 0xfffff9fb
    2548:	0501063b 	streq	r0, [r1, #-1595]	; 0xfffff9c5
    254c:	21052023 	tstcs	r5, r3, lsr #32
    2550:	05220620 	streq	r0, [r2, #-1568]!	; 0xfffff9e0
    2554:	02130601 	andseq	r0, r3, #1048576	; 0x100000
    2558:	01010001 	tsteq	r1, r1
    255c:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    2560:	001e7002 	andseq	r7, lr, r2
    2564:	018c0310 	orreq	r0, ip, r0, lsl r3
    2568:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    256c:	13210605 			; <UNDEFINED> instruction: 0x13210605
    2570:	01061605 	tsteq	r6, r5, lsl #12
    2574:	22063405 	andcs	r3, r6, #83886080	; 0x5000000
    2578:	05172605 	ldreq	r2, [r7, #-1541]	; 0xfffff9fb
    257c:	05051332 	streq	r1, [r5, #-818]	; 0xfffffcce
    2580:	05010a03 	streq	r0, [r1, #-2563]	; 0xfffff5fd
    2584:	05010607 	streq	r0, [r1, #-1543]	; 0xfffff9f9
    2588:	1f030609 	svcne	0x00030609
    258c:	0619053c 			; <UNDEFINED> instruction: 0x0619053c
    2590:	00430501 	subeq	r0, r3, r1, lsl #10
    2594:	06010402 	streq	r0, [r1], -r2, lsl #8
    2598:	004d052e 	subeq	r0, sp, lr, lsr #10
    259c:	06010402 	streq	r0, [r1], -r2, lsl #8
    25a0:	00550520 	subseq	r0, r5, r0, lsr #10
    25a4:	20010402 	andcs	r0, r1, r2, lsl #8
    25a8:	02000905 	andeq	r0, r0, #81920	; 0x14000
    25ac:	05200104 	streq	r0, [r0, #-260]!	; 0xfffffefc
    25b0:	05350605 	ldreq	r0, [r5, #-1541]!	; 0xfffff9fb
    25b4:	05010627 	streq	r0, [r1, #-1575]	; 0xfffff9d9
    25b8:	0505201b 	streq	r2, [r5, #-27]	; 0xffffffe5
    25bc:	27052106 	strcs	r2, [r5, -r6, lsl #2]
    25c0:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    25c4:	1f052106 	svcne	0x00052106
    25c8:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    25cc:	18052106 	stmdane	r5, {r1, r2, r8, sp}
    25d0:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    25d4:	20052406 	andcs	r2, r5, r6, lsl #8
    25d8:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    25dc:	3b052206 	blcc	14adfc <__RAM_SIZE+0x4adfc>
    25e0:	23050106 	movwcs	r0, #20742	; 0x5106
    25e4:	20210520 	eorcs	r0, r1, r0, lsr #10
    25e8:	22061e05 	andcs	r1, r6, #5, 28	; 0x50
    25ec:	13060105 	movwne	r0, #24837	; 0x6105
    25f0:	06090520 	streq	r0, [r9], -r0, lsr #10
    25f4:	05205003 	streq	r5, [r0, #-3]!
    25f8:	20010614 	andcs	r0, r1, r4, lsl r6
    25fc:	01000102 	tsteq	r0, r2, lsl #2
    2600:	00010501 	andeq	r0, r1, r1, lsl #10
    2604:	1ea20205 	cdpne	2, 10, cr0, cr2, cr5, {0}
    2608:	d7031000 	strle	r1, [r3, -r0]
    260c:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    2610:	06140515 			; <UNDEFINED> instruction: 0x06140515
    2614:	062e0501 	strteq	r0, [lr], -r1, lsl #10
    2618:	14050522 	strne	r0, [r5], #-1314	; 0xfffffade
    261c:	01061305 	tsteq	r6, r5, lsl #6
    2620:	05203805 	streq	r3, [r0, #-2053]!	; 0xfffff7fb
    2624:	05052028 	streq	r2, [r5, #-40]	; 0xffffffd8
    2628:	38052106 	stmdacc	r5, {r1, r2, r8, sp}
    262c:	28050106 	stmdacs	r5, {r1, r2, r8}
    2630:	061c0520 	ldreq	r0, [ip], -r0, lsr #10
    2634:	15050523 	strne	r0, [r5, #-1315]	; 0xfffffadd
    2638:	01060f05 	tsteq	r6, r5, lsl #30
    263c:	05200705 	streq	r0, [r0, #-1797]!	; 0xfffff8fb
    2640:	05340621 	ldreq	r0, [r4, #-1569]!	; 0xfffff9df
    2644:	21051505 	tstcs	r5, r5, lsl #10
    2648:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    264c:	3b052f06 	blcc	14e26c <__RAM_SIZE+0x4e26c>
    2650:	23050106 	movwcs	r0, #20742	; 0x5106
    2654:	20210520 	eorcs	r0, r1, r0, lsr #10
    2658:	22063805 	andcs	r3, r6, #327680	; 0x50000
    265c:	05140505 	ldreq	r0, [r4, #-1285]	; 0xfffffafb
    2660:	05130601 	ldreq	r0, [r3, #-1537]	; 0xfffff9ff
    2664:	73030609 	movwvc	r0, #13833	; 0x3609
    2668:	06290520 	strteq	r0, [r9], -r0, lsr #10
    266c:	20190501 	andscs	r0, r9, r1, lsl #10
    2670:	01000202 	tsteq	r0, r2, lsl #4
    2674:	00172301 	andseq	r2, r7, r1, lsl #6
    2678:	3b000300 	blcc	3280 <__HEAP_SIZE+0x2280>
    267c:	02000002 	andeq	r0, r0, #2
    2680:	0d0efb01 	vstreq	d15, [lr, #-4]
    2684:	01010100 	mrseq	r0, (UNDEF: 17)
    2688:	00000001 	andeq	r0, r0, r1
    268c:	01000001 	tsteq	r0, r1
    2690:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    2694:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    2698:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    269c:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    26a0:	6572462f 	ldrbvs	r4, [r2, #-1583]!	; 0xfffff9d1
    26a4:	4f545265 	svcmi	0x00545265
    26a8:	3a630053 	bcc	18c27fc <__RAM_SIZE+0x17c27fc>
    26ac:	6573755c 	ldrbvs	r7, [r3, #-1372]!	; 0xfffffaa4
    26b0:	785c7372 	ldmdavc	ip, {r1, r4, r5, r6, r8, r9, ip, sp, lr}^
    26b4:	6e6f6469 	cdpvs	4, 6, cr6, cr15, cr9, {3}
    26b8:	6f72705c 	svcvs	0x0072705c
    26bc:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
    26c0:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    26c4:	6363675f 	cmnvs	r3, #24903680	; 0x17c0000
    26c8:	6363675c 	cmnvs	r3, #92, 14	; 0x1700000
    26cc:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
    26d0:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    26d4:	61652d65 	cmnvs	r5, r5, ror #26
    26d8:	312d6962 			; <UNDEFINED> instruction: 0x312d6962
    26dc:	2d332e30 	ldccs	14, cr2, [r3, #-192]!	; 0xffffff40
    26e0:	31323032 	teqcc	r2, r2, lsr r0
    26e4:	5c30312e 	ldfpls	f3, [r0], #-184	; 0xffffff48
    26e8:	5c62696c 			; <UNDEFINED> instruction: 0x5c62696c
    26ec:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
    26f0:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    26f4:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    26f8:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    26fc:	30315c69 	eorscc	r5, r1, r9, ror #24
    2700:	312e332e 			; <UNDEFINED> instruction: 0x312e332e
    2704:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
    2708:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    270c:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
    2710:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
    2714:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
    2718:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
    271c:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
    2720:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
    2724:	5f6d7261 	svcpl	0x006d7261
    2728:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
    272c:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
    2730:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    2734:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    2738:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    273c:	30312d69 	eorscc	r2, r1, r9, ror #26
    2740:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
    2744:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
    2748:	615c3031 	cmpvs	ip, r1, lsr r0
    274c:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    2750:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    2754:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    2758:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
    275c:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    2760:	63616d5c 	cmnvs	r1, #92, 26	; 0x1700
    2764:	656e6968 	strbvs	r6, [lr, #-2408]!	; 0xfffff698
    2768:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
    276c:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
    2770:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
    2774:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
    2778:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
    277c:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
    2780:	5f6d7261 	svcpl	0x006d7261
    2784:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
    2788:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
    278c:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    2790:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    2794:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    2798:	30312d69 	eorscc	r2, r1, r9, ror #26
    279c:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
    27a0:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
    27a4:	615c3031 	cmpvs	ip, r1, lsr r0
    27a8:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    27ac:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    27b0:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    27b4:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
    27b8:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    27bc:	7379735c 	cmnvc	r9, #92, 6	; 0x70000001
    27c0:	2f2e2e00 	svccs	0x002e2e00
    27c4:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    27c8:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    27cc:	6f747262 	svcvs	0x00747262
    27d0:	72462f73 	subvc	r2, r6, #460	; 0x1cc
    27d4:	54526565 	ldrbpl	r6, [r2], #-1381	; 0xfffffa9b
    27d8:	702f534f 	eorvc	r5, pc, pc, asr #6
    27dc:	6174726f 	cmnvs	r4, pc, ror #4
    27e0:	2f656c62 	svccs	0x00656c62
    27e4:	2f434347 	svccs	0x00434347
    27e8:	5f4d5241 	svcpl	0x004d5241
    27ec:	33334d43 	teqcc	r3, #4288	; 0x10c0
    27f0:	5a544e5f 	bpl	1516174 <__RAM_SIZE+0x1416174>
    27f4:	6e6f6e2f 	cdpvs	14, 6, cr6, cr15, cr15, {1}
    27f8:	6365735f 	cmnvs	r5, #2080374785	; 0x7c000001
    27fc:	00657275 	rsbeq	r7, r5, r5, ror r2
    2800:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    2804:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    2808:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    280c:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    2810:	6572462f 	ldrbvs	r4, [r2, #-1583]!	; 0xfffff9d1
    2814:	4f545265 	svcmi	0x00545265
    2818:	6e692f53 	mcrvs	15, 3, r2, cr9, cr3, {2}
    281c:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    2820:	71000065 	tstvc	r0, r5, rrx
    2824:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
    2828:	0100632e 	tsteq	r0, lr, lsr #6
    282c:	74730000 	ldrbtvc	r0, [r3], #-0
    2830:	66656464 	strbtvs	r6, [r5], -r4, ror #8
    2834:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    2838:	645f0000 	ldrbvs	r0, [pc], #-0	; 2840 <__HEAP_SIZE+0x1840>
    283c:	75616665 	strbvc	r6, [r1, #-1637]!	; 0xfffff99b
    2840:	745f746c 	ldrbvc	r7, [pc], #-1132	; 2848 <__HEAP_SIZE+0x1848>
    2844:	73657079 	cmnvc	r5, #121	; 0x79
    2848:	0300682e 	movweq	r6, #2094	; 0x82e
    284c:	735f0000 	cmpvc	pc, #0
    2850:	6e696474 	mcrvs	4, 3, r6, cr9, cr4, {3}
    2854:	00682e74 	rsbeq	r2, r8, r4, ror lr
    2858:	70000004 	andvc	r0, r0, r4
    285c:	6d74726f 	lfmvs	f7, 2, [r4, #-444]!	; 0xfffffe44
    2860:	6f726361 	svcvs	0x00726361
    2864:	6d6d6f63 	stclvs	15, cr6, [sp, #-396]!	; 0xfffffe74
    2868:	682e6e6f 	stmdavs	lr!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}
    286c:	00000500 	andeq	r0, r0, r0, lsl #10
    2870:	65657246 	strbvs	r7, [r5, #-582]!	; 0xfffffdba
    2874:	534f5452 	movtpl	r5, #62546	; 0xf452
    2878:	0600682e 	streq	r6, [r0], -lr, lsr #16
    287c:	696c0000 	stmdbvs	ip!, {}^	; <UNPREDICTABLE>
    2880:	682e7473 	stmdavs	lr!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}
    2884:	00000600 	andeq	r0, r0, r0, lsl #12
    2888:	6b736174 	blvs	1cdae60 <__RAM_SIZE+0x1bdae60>
    288c:	0600682e 	streq	r6, [r0], -lr, lsr #16
    2890:	75710000 	ldrbvc	r0, [r1, #-0]!
    2894:	2e657565 	cdpcs	5, 6, cr7, cr5, cr5, {3}
    2898:	00060068 	andeq	r0, r6, r8, rrx
    289c:	726f7000 	rsbvc	r7, pc, #0
    28a0:	6c626174 	stfvse	f6, [r2], #-464	; 0xfffffe30
    28a4:	00682e65 	rsbeq	r2, r8, r5, ror #28
    28a8:	3c000006 	stccc	0, cr0, [r0], {6}
    28ac:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	; 0xfffffe78
    28b0:	6e692d74 	mcrvs	13, 3, r2, cr9, cr4, {3}
    28b4:	0000003e 	andeq	r0, r0, lr, lsr r0
    28b8:	05050000 	streq	r0, [r5, #-0]
    28bc:	00020500 	andeq	r0, r2, r0, lsl #10
    28c0:	03000000 	movweq	r0, #0
    28c4:	060112bd 			; <UNDEFINED> instruction: 0x060112bd
    28c8:	06090501 	streq	r0, [r9], -r1, lsl #10
    28cc:	0d051a21 	vstreq	s2, [r5, #-132]	; 0xffffff7c
    28d0:	0b050106 	bleq	142cf0 <__RAM_SIZE+0x42cf0>
    28d4:	060d0520 	streq	r0, [sp], -r0, lsr #10
    28d8:	06780522 	ldrbteq	r0, [r8], -r2, lsr #10
    28dc:	2d052001 	stccs	0, cr2, [r5, #-4]
    28e0:	06090520 	streq	r0, [r9], -r0, lsr #10
    28e4:	06050535 			; <UNDEFINED> instruction: 0x06050535
    28e8:	00010213 	andeq	r0, r1, r3, lsl r2
    28ec:	01050101 	tsteq	r5, r1, lsl #2
    28f0:	00020500 	andeq	r0, r2, r0, lsl #10
    28f4:	03000000 	movweq	r0, #0
    28f8:	060114e3 	streq	r1, [r1], -r3, ror #9
    28fc:	06050501 	streq	r0, [r5], -r1, lsl #10
    2900:	0905142f 	stmdbeq	r5, {r0, r1, r2, r3, r5, sl, ip}
    2904:	06140530 			; <UNDEFINED> instruction: 0x06140530
    2908:	20320501 	eorscs	r0, r2, r1, lsl #10
    290c:	05200b05 	streq	r0, [r0, #-2821]!	; 0xfffff4fb
    2910:	05053415 	streq	r3, [r5, #-1045]	; 0xfffffbeb
    2914:	05302306 	ldreq	r2, [r0, #-774]!	; 0xfffffcfa
    2918:	05130601 	ldreq	r0, [r3, #-1537]	; 0xfffff9ff
    291c:	2e760315 	mrccs	3, 3, r0, cr6, cr5, {0}
    2920:	00010220 	andeq	r0, r1, r0, lsr #4
    2924:	01050101 	tsteq	r5, r1, lsl #2
    2928:	c6020500 	strgt	r0, [r2], -r0, lsl #10
    292c:	0310001e 	tsteq	r0, #30
    2930:	060114b6 			; <UNDEFINED> instruction: 0x060114b6
    2934:	06050501 	streq	r0, [r5], -r1, lsl #10
    2938:	0905142f 	stmdbeq	r5, {r0, r1, r2, r3, r5, sl, ip}
    293c:	06140530 			; <UNDEFINED> instruction: 0x06140530
    2940:	200b0501 	andcs	r0, fp, r1, lsl #10
    2944:	05221505 	streq	r1, [r2, #-1285]!	; 0xfffffafb
    2948:	30270605 	eorcc	r0, r7, r5, lsl #12
    294c:	13060105 	movwne	r0, #24837	; 0x6105
    2950:	7a031505 	bvc	c7d6c <__HEAP_SIZE+0xc6d6c>
    2954:	0102202e 	tsteq	r2, lr, lsr #32
    2958:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    295c:	02050001 	andeq	r0, r5, #1
    2960:	10001ee0 	andne	r1, r0, r0, ror #29
    2964:	0112d803 	tsteq	r2, r3, lsl #16
    2968:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    296c:	16133d06 	ldrne	r3, [r3], -r6, lsl #26
    2970:	01061705 	tsteq	r6, r5, lsl #14
    2974:	22060505 	andcs	r0, r6, #20971520	; 0x1400000
    2978:	01061005 	tsteq	r6, r5
    297c:	05200705 	streq	r0, [r0, #-1797]!	; 0xfffff8fb
    2980:	0524060d 	streq	r0, [r4, #-1549]!	; 0xfffff9f3
    2984:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    2988:	1005200f 	andne	r2, r5, pc
    298c:	05207503 	streq	r7, [r0, #-1283]!	; 0xfffffafd
    2990:	c5030625 	strgt	r0, [r3, #-1573]	; 0xfffff9db
    2994:	05052000 	streq	r2, [r5, #-0]
    2998:	06220516 			; <UNDEFINED> instruction: 0x06220516
    299c:	20200501 	eorcs	r0, r0, r1, lsl #10
    29a0:	22060505 	andcs	r0, r6, #20971520	; 0x1400000
    29a4:	13060105 	movwne	r0, #24837	; 0x6105
    29a8:	03061105 	movweq	r1, #24837	; 0x6105
    29ac:	1b052042 	blne	14aabc <__RAM_SIZE+0x4aabc>
    29b0:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    29b4:	052f0611 	streq	r0, [pc, #-1553]!	; 23ab <__HEAP_SIZE+0x13ab>
    29b8:	05010634 	streq	r0, [r1, #-1588]	; 0xfffff9cc
    29bc:	0903060a 	stmdbeq	r3, {r1, r3, r9, sl}
    29c0:	060c053c 			; <UNDEFINED> instruction: 0x060c053c
    29c4:	06090501 	streq	r0, [r9], -r1, lsl #10
    29c8:	06120522 	ldreq	r0, [r2], -r2, lsr #10
    29cc:	09052001 	stmdbeq	r5, {r0, sp}
    29d0:	26052f06 	strcs	r2, [r5], -r6, lsl #30
    29d4:	1c050106 	stfnes	f0, [r5], {6}
    29d8:	06090520 	streq	r0, [r9], -r0, lsr #10
    29dc:	0634053e 			; <UNDEFINED> instruction: 0x0634053e
    29e0:	200b0501 	andcs	r0, fp, r1, lsl #10
    29e4:	30060d05 	andcc	r0, r6, r5, lsl #26
    29e8:	01062905 	tsteq	r6, r5, lsl #18
    29ec:	05202005 	streq	r2, [r0, #-5]!
    29f0:	20610310 	rsbcs	r0, r1, r0, lsl r3
    29f4:	03060905 	movweq	r0, #26885	; 0x6905
    29f8:	12052e28 	andne	r2, r5, #40, 28	; 0x280
    29fc:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    2a00:	052f0609 	streq	r0, [pc, #-1545]!	; 23ff <__HEAP_SIZE+0x13ff>
    2a04:	05010630 	streq	r0, [r1, #-1584]	; 0xfffff9d0
    2a08:	09052026 	stmdbeq	r5, {r1, r2, r5, sp}
    2a0c:	33054c06 	movwcc	r4, #23558	; 0x5c06
    2a10:	0b050106 	bleq	142e30 <__RAM_SIZE+0x42e30>
    2a14:	060d0520 	streq	r0, [sp], -r0, lsr #10
    2a18:	063f0530 			; <UNDEFINED> instruction: 0x063f0530
    2a1c:	20470501 	subcs	r0, r7, r1, lsl #10
    2a20:	05202a05 	streq	r2, [r0, #-2565]!	; 0xfffff5fb
    2a24:	05240625 	streq	r0, [r4, #-1573]!	; 0xfffff9db
    2a28:	0b051509 	bleq	147e54 <__RAM_SIZE+0x47e54>
    2a2c:	10050106 	andne	r0, r5, r6, lsl #2
    2a30:	052e4c03 	streq	r4, [lr, #-3075]!	; 0xfffff3fd
    2a34:	3603060d 	strcc	r0, [r3], -sp, lsl #12
    2a38:	060f052e 	streq	r0, [pc], -lr, lsr #10
    2a3c:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    2a40:	06100526 	ldreq	r0, [r0], -r6, lsr #10
    2a44:	2e204403 	cdpcs	4, 2, cr4, cr0, cr3, {0}
    2a48:	0002022e 	andeq	r0, r2, lr, lsr #4
    2a4c:	01050101 	tsteq	r5, r1, lsl #2
    2a50:	56020500 	strpl	r0, [r2], -r0, lsl #10
    2a54:	0310001f 	tsteq	r0, #31
    2a58:	060113aa 	streq	r1, [r1], -sl, lsr #7
    2a5c:	06050501 	streq	r0, [r5], -r1, lsl #10
    2a60:	06100521 	ldreq	r0, [r0], -r1, lsr #10
    2a64:	20070501 	andcs	r0, r7, r1, lsl #10
    2a68:	051f0105 	ldreq	r0, [pc, #-261]	; 296b <__HEAP_SIZE+0x196b>
    2a6c:	05310609 	ldreq	r0, [r1, #-1545]!	; 0xfffff9f7
    2a70:	20010626 	andcs	r0, r1, r6, lsr #12
    2a74:	30060905 	andcc	r0, r6, r5, lsl #18
    2a78:	01060b05 	tsteq	r6, r5, lsl #22
    2a7c:	3e060d05 	cdpcc	13, 0, cr0, cr6, cr5, {0}
    2a80:	01063305 	tsteq	r6, r5, lsl #6
    2a84:	05202a05 	streq	r2, [r0, #-2565]!	; 0xfffff5fb
    2a88:	05240625 	streq	r0, [r4, #-1573]!	; 0xfffff9db
    2a8c:	12051509 	andne	r1, r5, #37748736	; 0x2400000
    2a90:	01050106 	tsteq	r5, r6, lsl #2
    2a94:	0102203e 	tsteq	r2, lr, lsr r0
    2a98:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    2a9c:	02050005 	andeq	r0, r5, #5
    2aa0:	10001f7a 	andne	r1, r0, sl, ror pc
    2aa4:	0119ee03 	tsteq	r9, r3, lsl #28
    2aa8:	09050106 	stmdbeq	r5, {r1, r2, r8}
    2aac:	13053d06 	movwne	r3, #23814	; 0x5d06
    2ab0:	09050106 	stmdbeq	r5, {r1, r2, r8}
    2ab4:	2c052106 	stfcss	f2, [r5], {6}
    2ab8:	135f0519 	cmpne	pc, #104857600	; 0x6400000
    2abc:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    2ac0:	05010620 	streq	r0, [r1, #-1568]	; 0xfffff9e0
    2ac4:	0b052049 	bleq	14abf0 <__RAM_SIZE+0x4abf0>
    2ac8:	03140520 	tsteq	r4, #32, 10	; 0x8000000
    2acc:	05052e76 	streq	r2, [r5, #-3702]	; 0xfffff18a
    2ad0:	05203103 	streq	r3, [r0, #-259]!	; 0xfffffefd
    2ad4:	5b03060d 	blpl	c4310 <__HEAP_SIZE+0xc3310>
    2ad8:	061a053c 			; <UNDEFINED> instruction: 0x061a053c
    2adc:	06370501 	ldrteq	r0, [r7], -r1, lsl #10
    2ae0:	150d053e 	strne	r0, [sp, #-1342]	; 0xfffffac2
    2ae4:	01061705 	tsteq	r6, r5, lsl #14
    2ae8:	0d052e3c 	stceq	14, cr2, [r5, #-240]	; 0xffffff10
    2aec:	0f052206 	svceq	0x00052206
    2af0:	11050106 	tstne	r5, r6, lsl #2
    2af4:	15053e06 	strne	r3, [r5, #-3590]	; 0xfffff1fa
    2af8:	13050106 	movwne	r0, #20742	; 0x5106
    2afc:	06150520 	ldreq	r0, [r5], -r0, lsr #10
    2b00:	06190530 			; <UNDEFINED> instruction: 0x06190530
    2b04:	17052e01 	strne	r2, [r5, -r1, lsl #28]
    2b08:	3121052e 			; <UNDEFINED> instruction: 0x3121052e
    2b0c:	06250520 	strteq	r0, [r5], -r0, lsr #10
    2b10:	05011303 	streq	r1, [r1, #-771]	; 0xfffffcfd
    2b14:	10051509 	andne	r1, r5, r9, lsl #10
    2b18:	11050106 	tstne	r5, r6, lsl #2
    2b1c:	02040200 	andeq	r0, r4, #0, 4
    2b20:	20780306 	rsbscs	r0, r8, r6, lsl #6
    2b24:	02040200 	andeq	r0, r4, #0, 4
    2b28:	04020001 	streq	r0, [r2], #-1
    2b2c:	02002e02 	andeq	r2, r0, #2, 28
    2b30:	002e0104 	eoreq	r0, lr, r4, lsl #2
    2b34:	01010402 	tsteq	r1, r2, lsl #8
    2b38:	01040200 	mrseq	r0, R12_usr
    2b3c:	02002006 	andeq	r2, r0, #6
    2b40:	02200104 	eoreq	r0, r0, #4, 2
    2b44:	01010003 	tsteq	r1, r3
    2b48:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    2b4c:	001fd202 	andseq	sp, pc, r2, lsl #4
    2b50:	13be0310 			; <UNDEFINED> instruction: 0x13be0310
    2b54:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    2b58:	05350605 	ldreq	r0, [r5, #-1541]!	; 0xfffff9fb
    2b5c:	10053009 	andne	r3, r5, r9
    2b60:	09050106 	stmdbeq	r5, {r1, r2, r8}
    2b64:	0e053f06 	cdpeq	15, 0, cr3, cr5, cr6, {0}
    2b68:	15050106 	strne	r0, [r5, #-262]	; 0xfffffefa
    2b6c:	20190306 	andscs	r0, r9, r6, lsl #6
    2b70:	01061905 	tsteq	r6, r5, lsl #18
    2b74:	05201705 	streq	r1, [r0, #-1797]!	; 0xfffff8fb
    2b78:	05220619 	streq	r0, [r2, #-1561]!	; 0xfffff9e7
    2b7c:	0501061d 	streq	r0, [r1, #-1565]	; 0xfffff9e3
    2b80:	35054a1b 	strcc	r4, [r5, #-2587]	; 0xfffff5e5
    2b84:	0d052806 	stceq	8, cr2, [r5, #-24]	; 0xffffffe8
    2b88:	06012103 	streq	r2, [r1], -r3, lsl #2
    2b8c:	060e0520 	streq	r0, [lr], -r0, lsr #10
    2b90:	207fbc03 	rsbscs	fp, pc, r3, lsl #24
    2b94:	05341105 	ldreq	r1, [r4, #-261]!	; 0xfffffefb
    2b98:	0501061c 	streq	r0, [r1, #-1564]	; 0xfffff9e4
    2b9c:	15052013 	strne	r2, [r5, #-19]	; 0xffffffed
    2ba0:	19053006 	stmdbne	r5, {r1, r2, ip, sp}
    2ba4:	17050106 	strne	r0, [r5, -r6, lsl #2]
    2ba8:	0619053c 			; <UNDEFINED> instruction: 0x0619053c
    2bac:	031d0533 	tsteq	sp, #213909504	; 0xcc00000
    2bb0:	09053c12 	stmdbeq	r5, {r1, r4, sl, fp, ip, sp}
    2bb4:	053c2803 	ldreq	r2, [ip, #-2051]!	; 0xfffff7fd
    2bb8:	0501061a 	streq	r0, [r1, #-1562]	; 0xfffff9e6
    2bbc:	313e0605 	teqcc	lr, r5, lsl #12
    2bc0:	05300905 	ldreq	r0, [r0, #-2309]!	; 0xfffff6fb
    2bc4:	2e010610 	mcrcs	6, 0, r0, cr1, cr0, {0}
    2bc8:	22060905 	andcs	r0, r6, #81920	; 0x14000
    2bcc:	01060e05 	tsteq	r6, r5, lsl #28
    2bd0:	03062d05 	movweq	r2, #27909	; 0x6d05
    2bd4:	1105200a 	tstne	r5, sl
    2bd8:	05200615 	streq	r0, [r0, #-1557]!	; 0xfffff9eb
    2bdc:	7303060e 	movwvc	r0, #13838	; 0x360e
    2be0:	300d0520 	andcc	r0, sp, r0, lsr #10
    2be4:	01061105 	tsteq	r6, r5, lsl #2
    2be8:	05200f05 	streq	r0, [r0, #-3845]!	; 0xfffff0fb
    2bec:	05220611 	streq	r0, [r2, #-1553]!	; 0xfffff9ef
    2bf0:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    2bf4:	15054a13 	strne	r4, [r5, #-2579]	; 0xfffff5ed
    2bf8:	09053006 	stmdbeq	r5, {r1, r2, ip, sp}
    2bfc:	053c0f03 	ldreq	r0, [ip, #-3843]!	; 0xfffff0fd
    2c00:	0501061a 	streq	r0, [r1, #-1562]	; 0xfffff9e6
    2c04:	053e0605 	ldreq	r0, [lr, #-1541]!	; 0xfffff9fb
    2c08:	202f0601 	eorcs	r0, pc, r1, lsl #12
    2c0c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    2c10:	02050001 	andeq	r0, r5, #1
    2c14:	10002054 	andne	r2, r0, r4, asr r0
    2c18:	0102b003 	tsteq	r2, r3
    2c1c:	13130505 	tstne	r3, #20971520	; 0x1400000
    2c20:	05143705 	ldreq	r3, [r4, #-1797]	; 0xfffff8fb
    2c24:	0505141c 	streq	r1, [r5, #-1052]	; 0xfffffbe4
    2c28:	06070514 			; <UNDEFINED> instruction: 0x06070514
    2c2c:	00010501 	andeq	r0, r1, r1, lsl #10
    2c30:	03010402 	movweq	r0, #5122	; 0x1402
    2c34:	12052e78 	andne	r2, r5, #120, 28	; 0x780
    2c38:	01040200 	mrseq	r0, R12_usr
    2c3c:	053c0903 	ldreq	r0, [ip, #-2307]!	; 0xfffff6fd
    2c40:	0402001d 	streq	r0, [r2], #-29	; 0xffffffe3
    2c44:	36051f01 	strcc	r1, [r5], -r1, lsl #30
    2c48:	202c0531 	eorcs	r0, ip, r1, lsr r5
    2c4c:	3a250520 	bcc	9440d4 <__RAM_SIZE+0x8440d4>
    2c50:	2f031105 	svccs	0x00031105
    2c54:	06260520 	strteq	r0, [r6], -r0, lsr #10
    2c58:	162e0523 	strtne	r0, [lr], -r3, lsr #10
    2c5c:	05140505 	ldreq	r0, [r4, #-1285]	; 0xfffffafb
    2c60:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    2c64:	204a032c 	subcs	r0, sl, ip, lsr #6
    2c68:	30060905 	andcc	r0, r6, r5, lsl #18
    2c6c:	05300d05 	ldreq	r0, [r0, #-3333]!	; 0xfffff2fb
    2c70:	0501062f 	streq	r0, [r1, #-1583]	; 0xfffff9d1
    2c74:	57052043 	strpl	r2, [r5, -r3, asr #32]
    2c78:	20380520 	eorscs	r0, r8, r0, lsr #10
    2c7c:	052e2605 	streq	r2, [lr, #-1541]!	; 0xfffff9fb
    2c80:	0521060d 	streq	r0, [r1, #-1549]!	; 0xfffff9f3
    2c84:	05010628 	streq	r0, [r1, #-1576]	; 0xfffff9d8
    2c88:	052f060d 	streq	r0, [pc, #-1549]!	; 2683 <__HEAP_SIZE+0x1683>
    2c8c:	05010620 	streq	r0, [r1, #-1568]	; 0xfffff9e0
    2c90:	0521060d 	streq	r0, [r1, #-1549]!	; 0xfffff9f3
    2c94:	05010654 	streq	r0, [r1, #-1620]	; 0xfffff9ac
    2c98:	2a05203c 	bcs	14ad90 <__RAM_SIZE+0x4ad90>
    2c9c:	060d052e 	streq	r0, [sp], -lr, lsr #10
    2ca0:	061e0521 	ldreq	r0, [lr], -r1, lsr #10
    2ca4:	060d0501 	streq	r0, [sp], -r1, lsl #10
    2ca8:	061e053d 			; <UNDEFINED> instruction: 0x061e053d
    2cac:	060d0501 	streq	r0, [sp], -r1, lsl #10
    2cb0:	060f0530 			; <UNDEFINED> instruction: 0x060f0530
    2cb4:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    2cb8:	06150527 	ldreq	r0, [r5], -r7, lsr #10
    2cbc:	20130501 	andscs	r0, r3, r1, lsl #10
    2cc0:	03060905 	movweq	r0, #26885	; 0x6905
    2cc4:	10052017 	andne	r2, r5, r7, lsl r0
    2cc8:	2e4d0306 	cdpcs	3, 4, cr0, cr13, cr6, {0}
    2ccc:	33030905 	movwcc	r0, #14597	; 0x3905
    2cd0:	06150520 	ldreq	r0, [r5], -r0, lsr #10
    2cd4:	05206b03 	streq	r6, [r0, #-2819]!	; 0xfffff4fd
    2cd8:	05010619 	streq	r0, [r1, #-1561]	; 0xfffff9e7
    2cdc:	19054a17 	stmdbne	r5, {r0, r1, r2, r4, r9, fp, lr}
    2ce0:	11053006 	tstne	r5, r6
    2ce4:	4b3c0f03 	blmi	f068f8 <__RAM_SIZE+0xe068f8>
    2ce8:	01055f06 	tsteq	r5, r6, lsl #30
    2cec:	05200a03 	streq	r0, [r0, #-2563]!	; 0xfffff5fd
    2cf0:	20760311 	rsbscs	r0, r6, r1, lsl r3
    2cf4:	0a030105 	beq	c3110 <__HEAP_SIZE+0xc2110>
    2cf8:	01002020 	tsteq	r0, r0, lsr #32
    2cfc:	00010501 	andeq	r0, r1, r1, lsl #10
    2d00:	20da0205 	sbcscs	r0, sl, r5, lsl #4
    2d04:	ba031000 	blt	c6d0c <__HEAP_SIZE+0xc5d0c>
    2d08:	01060104 	tsteq	r6, r4, lsl #2
    2d0c:	31060505 	tstcc	r6, r5, lsl #10
    2d10:	06070514 			; <UNDEFINED> instruction: 0x06070514
    2d14:	09052001 	stmdbeq	r5, {r0, sp}
    2d18:	1c052606 	stcne	6, cr2, [r5], {6}
    2d1c:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    2d20:	200a0306 	andcs	r0, sl, r6, lsl #6
    2d24:	01061a05 	tsteq	r6, r5, lsl #20
    2d28:	21060505 	tstcs	r6, r5, lsl #10
    2d2c:	01061c05 	tsteq	r6, r5, lsl #24
    2d30:	21060505 	tstcs	r6, r5, lsl #10
    2d34:	01060e05 	tsteq	r6, r5, lsl #28
    2d38:	09052020 	stmdbeq	r5, {r5, sp}
    2d3c:	2e0a0306 	cdpcs	3, 0, cr0, cr10, cr6, {0}
    2d40:	01062905 	tsteq	r6, r5, lsl #18
    2d44:	32062405 	andcc	r2, r6, #83886080	; 0x5000000
    2d48:	13060105 	movwne	r0, #24837	; 0x6105
    2d4c:	03060905 	movweq	r0, #26885	; 0x6905
    2d50:	1c05206a 	stcne	0, cr2, [r5], {106}	; 0x6a
    2d54:	02020106 	andeq	r0, r2, #-2147483647	; 0x80000001
    2d58:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    2d5c:	02050005 	andeq	r0, r5, #5
    2d60:	100020fa 	strdne	r2, [r0], -sl
    2d64:	0102fc03 	tsteq	r2, r3, lsl #24	; <UNPREDICTABLE>
    2d68:	05130905 	ldreq	r0, [r3, #-2309]	; 0xfffff6fb
    2d6c:	26051477 			; <UNDEFINED> instruction: 0x26051477
    2d70:	14090516 	strne	r0, [r9], #-1302	; 0xfffffaea
    2d74:	01060b05 	tsteq	r6, r5, lsl #22
    2d78:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    2d7c:	77030104 	strvc	r0, [r3, -r4, lsl #2]
    2d80:	00330520 	eorseq	r0, r3, r0, lsr #10
    2d84:	03010402 	movweq	r0, #5122	; 0x1402
    2d88:	27054a09 	strcs	r4, [r5, -r9, lsl #20]
    2d8c:	240f0521 	strcs	r0, [pc], #-1313	; 2d94 <__HEAP_SIZE+0x1d94>
    2d90:	02004a05 	andeq	r4, r0, #20480	; 0x5000
    2d94:	05200104 	streq	r0, [r0, #-260]!	; 0xfffffefc
    2d98:	1603060d 	strne	r0, [r3], -sp, lsl #12
    2d9c:	19110520 	ldmdbne	r1, {r5, r8, sl}
    2da0:	01063305 	tsteq	r6, r5, lsl #6
    2da4:	060d0520 	streq	r0, [sp], -r0, lsr #10
    2da8:	054a0632 	strbeq	r0, [sl, #-1586]	; 0xfffff9ce
    2dac:	2e750318 	mrccs	3, 3, r0, cr5, cr8, {0}
    2db0:	16030505 	strne	r0, [r3], -r5, lsl #10
    2db4:	030f0520 	movweq	r0, #62752	; 0xf520
    2db8:	13052e55 	movwne	r2, #24149	; 0x5e55
    2dbc:	052e7203 	streq	r7, [lr, #-515]!	; 0xfffffdfd
    2dc0:	3603063c 			; <UNDEFINED> instruction: 0x3603063c
    2dc4:	14090520 	strne	r0, [r9], #-1312	; 0xfffffae0
    2dc8:	01061005 	tsteq	r6, r5
    2dcc:	48031305 	stmdami	r3, {r0, r2, r8, r9, ip}
    2dd0:	03050520 	movweq	r0, #21792	; 0x5520
    2dd4:	13052039 	movwne	r2, #20537	; 0x5039
    2dd8:	20204703 	eorcs	r4, r0, r3, lsl #14
    2ddc:	01022020 	tsteq	r2, r0, lsr #32
    2de0:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    2de4:	02050005 	andeq	r0, r5, #5
    2de8:	00000000 	andeq	r0, r0, r0
    2dec:	0103c003 	tsteq	r3, r3
    2df0:	13130905 	tstne	r3, #81920	; 0x14000
    2df4:	05145d05 	ldreq	r5, [r4, #-3333]	; 0xfffff2fb
    2df8:	27051420 	strcs	r1, [r5, -r0, lsr #8]
    2dfc:	170d0513 	smladne	sp, r3, r5, r0
    2e00:	01061805 	tsteq	r6, r5, lsl #16
    2e04:	052e0f05 	streq	r0, [lr, #-3845]!	; 0xfffff0fb
    2e08:	2e0f0319 	mcrcs	3, 0, r0, cr15, cr9, {0}
    2e0c:	03063d05 	movweq	r3, #27909	; 0x6d05
    2e10:	09052010 	stmdbeq	r5, {r4, sp}
    2e14:	06050514 			; <UNDEFINED> instruction: 0x06050514
    2e18:	06110513 			; <UNDEFINED> instruction: 0x06110513
    2e1c:	05206003 	streq	r6, [r0, #-3]!
    2e20:	05010613 	streq	r0, [r1, #-1555]	; 0xfffff9ed
    2e24:	05220615 	streq	r0, [r2, #-1557]!	; 0xfffff9eb
    2e28:	0501063e 	streq	r0, [r1, #-1598]	; 0xfffff9c2
    2e2c:	11052027 	tstne	r5, r7, lsr #32
    2e30:	21052606 	tstcs	r5, r6, lsl #12
    2e34:	11050106 	tstne	r5, r6, lsl #2
    2e38:	19052106 	stmdbne	r5, {r1, r2, r8, sp}
    2e3c:	02200106 	eoreq	r0, r0, #-2147483647	; 0x80000001
    2e40:	01010001 	tsteq	r1, r1
    2e44:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    2e48:	00000002 	andeq	r0, r0, r2
    2e4c:	03f80300 	mvnseq	r0, #0, 6
    2e50:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    2e54:	132f0609 			; <UNDEFINED> instruction: 0x132f0609
    2e58:	14510513 	ldrbne	r0, [r1], #-1299	; 0xfffffaed
    2e5c:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    2e60:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
    2e64:	0402002c 	streq	r0, [r2], #-44	; 0xffffffd4
    2e68:	02004c01 	andeq	r4, r0, #256	; 0x100
    2e6c:	053c0104 	ldreq	r0, [ip, #-260]!	; 0xfffffefc
    2e70:	04020033 	streq	r0, [r2], #-51	; 0xffffffcd
    2e74:	53051e01 	movwpl	r1, #24065	; 0x5e01
    2e78:	2c3c0524 	cfldr32cs	mvfx0, [ip], #-144	; 0xffffff70
    2e7c:	43060d05 	movwmi	r0, #27909	; 0x6d05
    2e80:	06280517 			; <UNDEFINED> instruction: 0x06280517
    2e84:	0d052001 	stceq	0, cr2, [r5, #-4]
    2e88:	0f053006 	svceq	0x00053006
    2e8c:	11050106 	tstne	r5, r6, lsl #2
    2e90:	05133206 	ldreq	r3, [r3, #-518]	; 0xfffffdfa
    2e94:	37051915 	smladcc	r5, r5, r9, r1
    2e98:	11050106 	tstne	r5, r6, lsl #2
    2e9c:	4a064006 	bmi	192ebc <__RAM_SIZE+0x92ebc>
    2ea0:	2c052e2e 	stccs	14, cr2, [r5], {46}	; 0x2e
    2ea4:	01040200 	mrseq	r0, R12_usr
    2ea8:	05206203 	streq	r6, [r0, #-515]!	; 0xfffffdfd
    2eac:	2e780313 	mrccs	3, 3, r0, cr8, cr3, {0}
    2eb0:	37030505 	strcc	r0, [r3, -r5, lsl #10]
    2eb4:	03130520 	tsteq	r3, #32, 10	; 0x8000000
    2eb8:	052e3c49 	streq	r3, [lr, #-3145]!	; 0xfffff3b7
    2ebc:	30030627 	andcc	r0, r3, r7, lsr #12
    2ec0:	13250520 			; <UNDEFINED> instruction: 0x13250520
    2ec4:	05153605 	ldreq	r3, [r5, #-1541]	; 0xfffff9fb
    2ec8:	10051409 	andne	r1, r5, r9, lsl #8
    2ecc:	01020106 	tsteq	r2, r6, lsl #2
    2ed0:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    2ed4:	02050005 	andeq	r0, r5, #5
    2ed8:	00000000 	andeq	r0, r0, r0
    2edc:	0106e003 	tsteq	r6, r3
    2ee0:	05130905 	ldreq	r0, [r3, #-2309]	; 0xfffff6fb
    2ee4:	09051464 	stmdbeq	r5, {r2, r5, r6, sl, ip}
    2ee8:	060b0514 			; <UNDEFINED> instruction: 0x060b0514
    2eec:	00050501 	andeq	r0, r5, r1, lsl #10
    2ef0:	1b010402 	blne	43f00 <__HEAP_SIZE+0x42f00>
    2ef4:	02002205 	andeq	r2, r0, #1342177280	; 0x50000000
    2ef8:	05410104 	strbeq	r0, [r1, #-260]	; 0xfffffefc
    2efc:	0531060d 	ldreq	r0, [r1, #-1549]!	; 0xfffff9f3
    2f00:	4a010617 	bmi	44764 <__HEAP_SIZE+0x43764>
    2f04:	060d0520 	streq	r0, [sp], -r0, lsr #10
    2f08:	060f0530 			; <UNDEFINED> instruction: 0x060f0530
    2f0c:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    2f10:	063e0522 	ldrteq	r0, [lr], -r2, lsr #10
    2f14:	06310501 	ldrteq	r0, [r1], -r1, lsl #10
    2f18:	06170522 	ldreq	r0, [r7], -r2, lsr #10
    2f1c:	05207303 	streq	r7, [r0, #-771]!	; 0xfffffcfd
    2f20:	201d0305 	andscs	r0, sp, r5, lsl #6
    2f24:	63031705 	movwvs	r1, #14085	; 0x3705
    2f28:	06240520 	strteq	r0, [r4], -r0, lsr #10
    2f2c:	05201603 	streq	r1, [r0, #-1539]!	; 0xfffff9fd
    2f30:	43051325 	movwmi	r1, #21285	; 0x5325
    2f34:	14090515 	strne	r0, [r9], #-1301	; 0xfffffaeb
    2f38:	13060505 	movwne	r0, #25861	; 0x6505
    2f3c:	0101002e 	tsteq	r1, lr, lsr #32
    2f40:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    2f44:	00000002 	andeq	r0, r0, r2
    2f48:	07870300 	streq	r0, [r7, r0, lsl #6]
    2f4c:	13090501 	movwne	r0, #38145	; 0x9501
    2f50:	05144f05 	ldreq	r4, [r4, #-3845]	; 0xfffff0fb
    2f54:	0b051409 	bleq	147f80 <__RAM_SIZE+0x47f80>
    2f58:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    2f5c:	01040200 	mrseq	r0, R12_usr
    2f60:	0022051b 	eoreq	r0, r2, fp, lsl r5
    2f64:	33010402 	movwcc	r0, #5122	; 0x1402
    2f68:	31060d05 	tstcc	r6, r5, lsl #26
    2f6c:	01061705 	tsteq	r6, r5, lsl #14
    2f70:	060d052e 	streq	r0, [sp], -lr, lsr #10
    2f74:	060f0530 			; <UNDEFINED> instruction: 0x060f0530
    2f78:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    2f7c:	063e0522 	ldrteq	r0, [lr], -r2, lsr #10
    2f80:	06310501 	ldrteq	r0, [r1], -r1, lsl #10
    2f84:	06170522 	ldreq	r0, [r7], -r2, lsr #10
    2f88:	05207303 	streq	r7, [r0, #-771]!	; 0xfffffcfd
    2f8c:	201d0305 	andscs	r0, sp, r5, lsl #6
    2f90:	63031705 	movwvs	r1, #14085	; 0x3705
    2f94:	06240520 	strteq	r0, [r4], -r0, lsr #10
    2f98:	05201603 	streq	r1, [r0, #-1539]!	; 0xfffff9fd
    2f9c:	3d051325 	stccc	3, cr1, [r5, #-148]	; 0xffffff6c
    2fa0:	14090515 	strne	r0, [r9], #-1301	; 0xfffffaeb
    2fa4:	13060505 	movwne	r0, #25861	; 0x6505
    2fa8:	01010020 	tsteq	r1, r0, lsr #32
    2fac:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    2fb0:	00000002 	andeq	r0, r0, r2
    2fb4:	07ae0300 	streq	r0, [lr, r0, lsl #6]!
    2fb8:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    2fbc:	13670605 	cmnne	r7, #5242880	; 0x500000
    2fc0:	06100513 			; <UNDEFINED> instruction: 0x06100513
    2fc4:	062b0510 			; <UNDEFINED> instruction: 0x062b0510
    2fc8:	052e1903 	streq	r1, [lr, #-2307]!	; 0xfffff6fd
    2fcc:	27051615 	smladcs	r5, r5, r6, r1
    2fd0:	15050106 	strne	r0, [r5, #-262]	; 0xfffffefa
    2fd4:	26052206 	strcs	r2, [r5], -r6, lsl #4
    2fd8:	15050106 	strne	r0, [r5, #-262]	; 0xfffffefa
    2fdc:	20055a06 	andcs	r5, r5, r6, lsl #20
    2fe0:	17050106 	strne	r0, [r5, -r6, lsl #2]
    2fe4:	06190520 	ldreq	r0, [r9], -r0, lsr #10
    2fe8:	061b0522 	ldreq	r0, [fp], -r2, lsr #10
    2fec:	00410501 	subeq	r0, r1, r1, lsl #10
    2ff0:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    2ff4:	27061e05 	strcs	r1, [r6, -r5, lsl #28]
    2ff8:	01062205 	tsteq	r6, r5, lsl #4
    2ffc:	2e200520 	cfsh64cs	mvdx0, mvdx0, #16
    3000:	03063505 	movweq	r3, #25861	; 0x6505
    3004:	11052029 	tstne	r5, r9, lsr #32
    3008:	05012803 	streq	r2, [r1, #-2051]	; 0xfffff7fd
    300c:	11053038 	tstne	r5, r8, lsr r0
    3010:	06180514 			; <UNDEFINED> instruction: 0x06180514
    3014:	03010501 	movweq	r0, #5377	; 0x1501
    3018:	052000d3 	streq	r0, [r0, #-211]!	; 0xffffff2d
    301c:	dd03061d 	stcle	6, cr0, [r3, #-116]	; 0xffffff8c
    3020:	19052e7e 	stmdbne	r5, {r1, r2, r3, r4, r5, r6, r9, sl, fp, sp}
    3024:	053c0b03 	ldreq	r0, [ip, #-2819]!	; 0xfffff4fd
    3028:	0501061d 	streq	r0, [r1, #-1565]	; 0xfffff9e3
    302c:	1e05201b 	mcrne	0, 0, r2, cr5, cr11, {0}
    3030:	200f0306 	andcs	r0, pc, r6, lsl #6
    3034:	01062005 	tsteq	r6, r5
    3038:	34061d05 	strcc	r1, [r6], #-3333	; 0xfffff2fb
    303c:	03062e06 	movweq	r2, #28166	; 0x6e06
    3040:	2105206d 	tstcs	r5, sp, rrx
    3044:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
    3048:	21052e1f 	tstcs	r5, pc, lsl lr
    304c:	3c063406 	cfstrscc	mvf3, [r6], {6}
    3050:	03061505 	movweq	r1, #25861	; 0x6505
    3054:	050100c5 	streq	r0, [r1, #-197]	; 0xffffff3b
    3058:	43053236 	movwmi	r3, #21046	; 0x5236
    305c:	14150513 	ldrne	r0, [r5], #-1299	; 0xfffffaed
    3060:	01061c05 	tsteq	r6, r5, lsl #24
    3064:	34061505 	strcc	r1, [r6], #-1285	; 0xfffffafb
    3068:	0623053d 			; <UNDEFINED> instruction: 0x0623053d
    306c:	00090501 	andeq	r0, r9, r1, lsl #10
    3070:	06010402 	streq	r0, [r1], -r2, lsl #8
    3074:	002e0f03 	eoreq	r0, lr, r3, lsl #30
    3078:	4a040402 	bmi	104088 <__RAM_SIZE+0x4088>
    307c:	1e031105 	adfnes	f1, f3, f5
    3080:	1a053d4a 	bne	1525b0 <__RAM_SIZE+0x525b0>
    3084:	57050106 	strpl	r0, [r5, -r6, lsl #2]
    3088:	7ec10306 	cdpvc	3, 12, cr0, cr1, cr6, {0}
    308c:	141c052e 	ldrne	r0, [ip], #-1326	; 0xfffffad2
    3090:	05136405 	ldreq	r6, [r3, #-1029]	; 0xfffffbfb
    3094:	6e05135b 	mcrvs	3, 0, r1, cr5, cr11, {2}
    3098:	16050515 			; <UNDEFINED> instruction: 0x16050515
    309c:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    30a0:	1a05340d 	bne	1500dc <__RAM_SIZE+0x500dc>
    30a4:	37050106 	strcc	r0, [r5, -r6, lsl #2]
    30a8:	200f0520 	andcs	r0, pc, r0, lsr #10
    30ac:	02004405 	andeq	r4, r0, #83886080	; 0x5000000
    30b0:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
    30b4:	ec030611 	stc	6, cr0, [r3], {17}
    30b8:	22052e00 	andcs	r2, r5, #0, 28
    30bc:	13050106 	movwne	r0, #20742	; 0x5106
    30c0:	06160520 	ldreq	r0, [r6], -r0, lsr #10
    30c4:	052e0d03 	streq	r0, [lr, #-3331]!	; 0xfffff2fd
    30c8:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    30cc:	0a03062d 	beq	c4988 <__HEAP_SIZE+0xc3988>
    30d0:	1609052e 	strne	r0, [r9], -lr, lsr #10
    30d4:	002e2f33 	eoreq	r2, lr, r3, lsr pc
    30d8:	66030402 	strvs	r0, [r3], -r2, lsl #8
    30dc:	06040200 	streq	r0, [r4], -r0, lsl #4
    30e0:	04020066 	streq	r0, [r2], #-102	; 0xffffff9a
    30e4:	0d053106 	stfeqs	f3, [r5, #-24]	; 0xffffffe8
    30e8:	06040200 	streq	r0, [r4], -r0, lsl #4
    30ec:	0b050106 	bleq	14350c <__RAM_SIZE+0x4350c>
    30f0:	06040200 	streq	r0, [r4], -r0, lsl #4
    30f4:	060d054a 	streq	r0, [sp], -sl, asr #10
    30f8:	06110522 	ldreq	r0, [r1], -r2, lsr #10
    30fc:	3c0f0501 	cfstr32cc	mvfx0, [pc], {1}
    3100:	30063705 	andcc	r3, r6, r5, lsl #14
    3104:	5f131105 	svcpl	0x00131105
    3108:	06150543 	ldreq	r0, [r5], -r3, asr #10
    310c:	2e130501 	cfmul32cs	mvfx0, mvfx3, mvfx1
    3110:	30061505 	andcc	r1, r6, r5, lsl #10
    3114:	0d030d05 	stceq	13, cr0, [r3, #-20]	; 0xffffffec
    3118:	16053d3c 			; <UNDEFINED> instruction: 0x16053d3c
    311c:	2e050106 	adfcss	f0, f5, f6
    3120:	3b053006 	blcc	14f140 <__RAM_SIZE+0x4f140>
    3124:	140d0513 	strne	r0, [sp], #-1299	; 0xfffffaed
    3128:	01061405 	tsteq	r6, r5, lsl #8
    312c:	01000202 	tsteq	r0, r2, lsl #4
    3130:	00050501 	andeq	r0, r5, r1, lsl #10
    3134:	00000205 	andeq	r0, r0, r5, lsl #4
    3138:	e6030000 	str	r0, [r3], -r0
    313c:	09050104 	stmdbeq	r5, {r2, r8}
    3140:	060b0513 			; <UNDEFINED> instruction: 0x060b0513
    3144:	1f050501 	svcne	0x00050501
    3148:	27060d05 	strcs	r0, [r6, -r5, lsl #26]
    314c:	01063305 	tsteq	r6, r5, lsl #6
    3150:	2f060d05 	svccs	0x00060d05
    3154:	01062505 	tsteq	r6, r5, lsl #10
    3158:	23060d05 	movwcs	r0, #27909	; 0x6d05
    315c:	01063b05 	tsteq	r6, r5, lsl #22
    3160:	22062c05 	andcs	r2, r6, #1280	; 0x500
    3164:	05150d05 	ldreq	r0, [r5, #-3333]	; 0xfffff2fb
    3168:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    316c:	054e0627 	strbeq	r0, [lr, #-1575]	; 0xfffff9d9
    3170:	20140605 	andscs	r0, r4, r5, lsl #12
    3174:	01000102 	tsteq	r0, r2, lsl #2
    3178:	00050501 	andeq	r0, r5, r1, lsl #10
    317c:	00000205 	andeq	r0, r0, r5, lsl #4
    3180:	84030000 	strhi	r0, [r3], #-0
    3184:	01060105 	tsteq	r6, r5, lsl #2
    3188:	2f060905 	svccs	0x00060905
    318c:	14340513 	ldrtne	r0, [r4], #-1299	; 0xfffffaed
    3190:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    3194:	2e010615 	mcrcs	6, 0, r0, cr1, cr5, {0}
    3198:	3d060905 	vstrcc.16	s0, [r6, #-10]	; <UNPREDICTABLE>
    319c:	05303305 	ldreq	r3, [r0, #-773]!	; 0xfffffcfb
    31a0:	05051409 	streq	r1, [r5, #-1033]	; 0xfffffbf7
    31a4:	002e1306 	eoreq	r1, lr, r6, lsl #6
    31a8:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    31ac:	00020500 	andeq	r0, r2, r0, lsl #10
    31b0:	03000000 	movweq	r0, #0
    31b4:	06010599 			; <UNDEFINED> instruction: 0x06010599
    31b8:	06090501 	streq	r0, [r9], -r1, lsl #10
    31bc:	4905133d 	stmdbmi	r5, {r0, r2, r3, r4, r5, r8, r9, ip}
    31c0:	16090514 			; <UNDEFINED> instruction: 0x16090514
    31c4:	06150514 			; <UNDEFINED> instruction: 0x06150514
    31c8:	2e203c01 	cdpcs	12, 2, cr3, cr0, cr1, {0}
    31cc:	21060905 	tstcs	r6, r5, lsl #18
    31d0:	05303905 	ldreq	r3, [r0, #-2309]!	; 0xfffff6fb
    31d4:	05051409 	streq	r1, [r5, #-1033]	; 0xfffffbf7
    31d8:	003c1306 	eorseq	r1, ip, r6, lsl #6
    31dc:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    31e0:	00020500 	andeq	r0, r2, r0, lsl #10
    31e4:	03000000 	movweq	r0, #0
    31e8:	060105f4 			; <UNDEFINED> instruction: 0x060105f4
    31ec:	06090501 	streq	r0, [r9], -r1, lsl #10
    31f0:	3605132f 	strcc	r1, [r5], -pc, lsr #6
    31f4:	14200514 	strtne	r0, [r0], #-1300	; 0xfffffaec
    31f8:	051a0905 	ldreq	r0, [sl, #-2309]	; 0xfffff6fb
    31fc:	05010622 	streq	r0, [r1, #-1570]	; 0xfffff9de
    3200:	0b052033 	bleq	14b2d4 <__RAM_SIZE+0x4b2d4>
    3204:	0315052e 	tsteq	r5, #192937984	; 0xb800000
    3208:	05052e1d 	streq	r2, [r5, #-3613]	; 0xfffff1e3
    320c:	06310528 	ldrteq	r0, [r1], -r8, lsr #10
    3210:	05205d03 	streq	r5, [r0, #-3331]!	; 0xfffff2fd
    3214:	2405190d 	strcs	r1, [r5], #-2317	; 0xfffff6f3
    3218:	3b050106 	blcc	143638 <__RAM_SIZE+0x43638>
    321c:	060d0520 	streq	r0, [sp], -r0, lsr #10
    3220:	060f0531 			; <UNDEFINED> instruction: 0x060f0531
    3224:	03150501 	tsteq	r5, #4194304	; 0x400000
    3228:	3805200b 	stmdacc	r5, {r0, r1, r3, sp}
    322c:	05152806 	ldreq	r2, [r5, #-2054]	; 0xfffff7fa
    3230:	10051409 	andne	r1, r5, r9, lsl #8
    3234:	11050106 	tstne	r5, r6, lsl #2
    3238:	206c0306 	rsbcs	r0, ip, r6, lsl #6
    323c:	01061a05 	tsteq	r6, r5, lsl #20
    3240:	025f1505 	subseq	r1, pc, #20971520	; 0x1400000
    3244:	01010002 	tsteq	r1, r2
    3248:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    324c:	00000002 	andeq	r0, r0, r2
    3250:	09880300 	stmibeq	r8, {r8, r9}
    3254:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    3258:	13670605 	cmnne	r7, #5242880	; 0x500000
    325c:	146b0513 	strbtne	r0, [fp], #-1299	; 0xfffffaed
    3260:	05141c05 	ldreq	r1, [r4, #-3077]	; 0xfffff3fb
    3264:	5b051364 	blpl	147ffc <__RAM_SIZE+0x47ffc>
    3268:	032f0513 			; <UNDEFINED> instruction: 0x032f0513
    326c:	05050110 	streq	r0, [r5, #-272]	; 0xfffffef0
    3270:	05010a03 	streq	r0, [r1, #-2563]	; 0xfffff5fd
    3274:	2e01062e 	cfmadd32cs	mvax1, mvfx0, mvfx1, mvfx14
    3278:	22060905 	andcs	r0, r6, #81920	; 0x14000
    327c:	01061605 	tsteq	r6, r5, lsl #12
    3280:	05203305 	streq	r3, [r0, #-773]!	; 0xfffffcfb
    3284:	4005200b 	andmi	r2, r5, fp
    3288:	01040200 	mrseq	r0, R12_usr
    328c:	0315052e 	tsteq	r5, #192937984	; 0xb800000
    3290:	052e00f8 	streq	r0, [lr, #-248]!	; 0xffffff08
    3294:	05230605 	streq	r0, [r3, #-1541]!	; 0xfffff9fb
    3298:	05053e34 	streq	r3, [r5, #-3636]	; 0xfffff1cc
    329c:	06010514 			; <UNDEFINED> instruction: 0x06010514
    32a0:	060d0513 			; <UNDEFINED> instruction: 0x060d0513
    32a4:	3c7f8203 	lfmcc	f0, 3, [pc], #-12	; 32a0 <__HEAP_SIZE+0x22a0>
    32a8:	01061a05 	tsteq	r6, r5, lsl #20
    32ac:	4b060d05 	blmi	1866c8 <__RAM_SIZE+0x866c8>
    32b0:	01061f05 	tsteq	r6, r5, lsl #30
    32b4:	30063005 	andcc	r3, r6, r5
    32b8:	05190d05 	ldreq	r0, [r9, #-3333]	; 0xfffff2fb
    32bc:	3c010616 	stccc	6, cr0, [r1], {22}
    32c0:	32060d05 	andcc	r0, r6, #320	; 0x140
    32c4:	01060f05 	tsteq	r6, r5, lsl #30
    32c8:	40061505 	andmi	r1, r6, r5, lsl #10
    32cc:	01062005 	tsteq	r6, r5
    32d0:	05201705 	streq	r1, [r0, #-1797]!	; 0xfffff8fb
    32d4:	05220619 	streq	r0, [r2, #-1561]!	; 0xfffff9e7
    32d8:	0501061b 	streq	r0, [r1, #-1563]	; 0xfffff9e5
    32dc:	04020041 	streq	r0, [r2], #-65	; 0xffffffbf
    32e0:	1e052e01 	cdpne	14, 0, cr2, cr5, cr1, {0}
    32e4:	22054306 	andcs	r4, r5, #402653184	; 0x18000000
    32e8:	20050106 	andcs	r0, r5, r6, lsl #2
    32ec:	061d053c 			; <UNDEFINED> instruction: 0x061d053c
    32f0:	061f0525 	ldreq	r0, [pc], -r5, lsr #10
    32f4:	06210501 	strteq	r0, [r1], -r1, lsl #10
    32f8:	063c053e 			; <UNDEFINED> instruction: 0x063c053e
    32fc:	19052001 	stmdbne	r5, {r0, sp}
    3300:	3c0e0306 	stccc	3, cr0, [lr], {6}
    3304:	01061d05 	tsteq	r6, r5, lsl #26
    3308:	05201b05 	streq	r1, [r0, #-2821]!	; 0xfffff4fb
    330c:	00c10315 	sbceq	r0, r1, r5, lsl r3
    3310:	1d052020 	stcne	0, cr2, [r5, #-128]	; 0xffffff80
    3314:	20410306 	subcs	r0, r1, r6, lsl #6
    3318:	01062105 	tsteq	r6, r5, lsl #2
    331c:	054a1f05 	strbeq	r1, [sl, #-3845]	; 0xfffff0fb
    3320:	05240621 	streq	r0, [r4, #-1569]!	; 0xfffff9df
    3324:	05010623 	streq	r0, [r1, #-1571]	; 0xfffff9dd
    3328:	053e0625 	ldreq	r0, [lr, #-1573]!	; 0xfffff9db
    332c:	20010640 	andcs	r0, r1, r0, asr #12
    3330:	03061105 	movweq	r1, #24837	; 0x6105
    3334:	2e013c36 	mcrcs	12, 0, r3, cr1, cr6, {1}
    3338:	01040200 	mrseq	r0, R12_usr
    333c:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    3340:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    3344:	2e060104 	adfcss	f0, f6, f4
    3348:	01040200 	mrseq	r0, R12_usr
    334c:	0015052e 	andseq	r0, r5, lr, lsr #10
    3350:	31010402 	tstcc	r1, r2, lsl #8
    3354:	01040200 	mrseq	r0, R12_usr
    3358:	20202020 	eorcs	r2, r0, r0, lsr #32
    335c:	20202020 	eorcs	r2, r0, r0, lsr #32
    3360:	20202020 	eorcs	r2, r0, r0, lsr #32
    3364:	00010220 	andeq	r0, r1, r0, lsr #4
    3368:	01050101 	tsteq	r5, r1, lsl #2
    336c:	00020500 	andeq	r0, r2, r0, lsl #10
    3370:	03000000 	movweq	r0, #0
    3374:	06010ab2 			; <UNDEFINED> instruction: 0x06010ab2
    3378:	06050501 	streq	r0, [r5], -r1, lsl #10
    337c:	0513133d 	ldreq	r1, [r3, #-829]	; 0xfffffcc3
    3380:	1c051446 	cfstrsne	mvf1, [r5], {70}	; 0x46
    3384:	162d051a 			; <UNDEFINED> instruction: 0x162d051a
    3388:	05177b05 	ldreq	r7, [r7, #-2821]	; 0xfffff4fb
    338c:	0110032f 	tsteq	r0, pc, lsr #6
    3390:	05170505 	ldreq	r0, [r7, #-1285]	; 0xfffffafb
    3394:	2e01062e 	cfmadd32cs	mvax1, mvfx0, mvfx1, mvfx14
    3398:	22060905 	andcs	r0, r6, #81920	; 0x14000
    339c:	01061b05 	tsteq	r6, r5, lsl #22
    33a0:	25060905 	strcs	r0, [r6, #-2309]	; 0xfffff6fb
    33a4:	01062805 	tsteq	r6, r5, lsl #16
    33a8:	05200b05 	streq	r0, [r0, #-2821]!	; 0xfffff4fb
    33ac:	0530060d 	ldreq	r0, [r0, #-1549]!	; 0xfffff9f3
    33b0:	0501061a 	streq	r0, [r1, #-1562]	; 0xfffff9e6
    33b4:	053e0630 	ldreq	r0, [lr, #-1584]!	; 0xfffff9d0
    33b8:	2a051a0d 	bcs	149bf4 <__RAM_SIZE+0x49bf4>
    33bc:	28050106 	stmdacs	r5, {r1, r2, r8}
    33c0:	060d0520 	streq	r0, [sp], -r0, lsr #10
    33c4:	060f0524 	streq	r0, [pc], -r4, lsr #10
    33c8:	06150501 	ldreq	r0, [r5], -r1, lsl #10
    33cc:	06200540 	strteq	r0, [r0], -r0, asr #10
    33d0:	20170501 	andscs	r0, r7, r1, lsl #10
    33d4:	22061905 	andcs	r1, r6, #81920	; 0x14000
    33d8:	01061d05 	tsteq	r6, r5, lsl #26
    33dc:	2e1b0520 	cfmul64cs	mvdx0, mvdx11, mvdx0
    33e0:	25061d05 	strcs	r1, [r6, #-3333]	; 0xfffff2fb
    33e4:	01061f05 	tsteq	r6, r5, lsl #30
    33e8:	22062105 	andcs	r2, r6, #1073741825	; 0x40000001
    33ec:	01063c05 	tsteq	r6, r5, lsl #24
    33f0:	06190520 	ldreq	r0, [r9], -r0, lsr #10
    33f4:	052e0e03 	streq	r0, [lr, #-3587]!	; 0xfffff1fd
    33f8:	0501061d 	streq	r0, [r1, #-1565]	; 0xfffff9e3
    33fc:	1505201b 	strne	r2, [r5, #-27]	; 0xffffffe5
    3400:	20203e03 	eorcs	r3, r0, r3, lsl #28
    3404:	03061d05 	movweq	r1, #27909	; 0x6d05
    3408:	21052044 	tstcs	r5, r4, asr #32
    340c:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
    3410:	21052e1f 	tstcs	r5, pc, lsl lr
    3414:	23052406 	movwcs	r2, #21510	; 0x5406
    3418:	25050106 	strcs	r0, [r5, #-262]	; 0xfffffefa
    341c:	40052206 	andmi	r2, r5, r6, lsl #4
    3420:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    3424:	33030611 	movwcc	r0, #13841	; 0x3611
    3428:	002e012e 	eoreq	r0, lr, lr, lsr #2
    342c:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    3430:	01040200 	mrseq	r0, R12_usr
    3434:	04020001 	streq	r0, [r2], #-1
    3438:	00200601 	eoreq	r0, r0, r1, lsl #12
    343c:	20010402 	andcs	r0, r1, r2, lsl #8
    3440:	02001505 	andeq	r1, r0, #20971520	; 0x1400000
    3444:	00310104 	eorseq	r0, r1, r4, lsl #2
    3448:	20010402 	andcs	r0, r1, r2, lsl #8
    344c:	01040200 	mrseq	r0, R12_usr
    3450:	05201720 	streq	r1, [r0, #-1824]!	; 0xfffff8e0
    3454:	05150605 	ldreq	r0, [r5, #-1541]	; 0xfffff9fb
    3458:	05053e2d 	streq	r3, [r5, #-3629]	; 0xfffff1d3
    345c:	06010514 			; <UNDEFINED> instruction: 0x06010514
    3460:	03150513 	tsteq	r5, #79691776	; 0x4c00000
    3464:	20202e73 	eorcs	r2, r0, r3, ror lr
    3468:	20202020 	eorcs	r2, r0, r0, lsr #32
    346c:	02202020 	eoreq	r2, r0, #32
    3470:	01010001 	tsteq	r1, r1
    3474:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    3478:	00213802 	eoreq	r3, r1, r2, lsl #16
    347c:	0be00310 	bleq	ff8040c4 <__StackTop+0xc77040c4>
    3480:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    3484:	13590605 	cmpne	r9, #5242880	; 0x500000
    3488:	06100513 			; <UNDEFINED> instruction: 0x06100513
    348c:	06110510 			; <UNDEFINED> instruction: 0x06110510
    3490:	052e1f03 	streq	r1, [lr, #-3843]!	; 0xfffff0fd
    3494:	11054b2e 	tstne	r5, lr, lsr #22
    3498:	062e0513 			; <UNDEFINED> instruction: 0x062e0513
    349c:	202c0501 	eorcs	r0, ip, r1, lsl #10
    34a0:	25061105 	strcs	r1, [r6, #-261]	; 0xfffffefb
    34a4:	01061505 	tsteq	r6, r5, lsl #10
    34a8:	05201305 	streq	r1, [r0, #-773]!	; 0xfffffcfb
    34ac:	0d03062d 	stceq	6, cr0, [r3, #-180]	; 0xffffff4c
    34b0:	15110520 	ldrne	r0, [r1, #-1312]	; 0xfffffae0
    34b4:	05303405 	ldreq	r3, [r0, #-1029]!	; 0xfffffbfb
    34b8:	18051411 	stmdane	r5, {r0, r4, sl, ip}
    34bc:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    34c0:	00d50301 	sbcseq	r0, r5, r1, lsl #6
    34c4:	06150501 	ldreq	r0, [r5], -r1, lsl #10
    34c8:	2e7f9903 	vaddcs.f16	s19, s30, s6	; <UNPREDICTABLE>
    34cc:	01061905 	tsteq	r6, r5, lsl #18
    34d0:	054a1705 	strbeq	r1, [sl, #-1797]	; 0xfffff8fb
    34d4:	05300619 	ldreq	r0, [r0, #-1561]!	; 0xfffff9e7
    34d8:	3c180315 	ldccc	3, cr0, [r8], {21}
    34dc:	05303905 	ldreq	r3, [r0, #-2309]!	; 0xfffff6fb
    34e0:	15051340 	strne	r1, [r5, #-832]	; 0xfffffcc0
    34e4:	061c0514 			; <UNDEFINED> instruction: 0x061c0514
    34e8:	06150501 	ldreq	r0, [r5], -r1, lsl #10
    34ec:	23053d34 	movwcs	r3, #23860	; 0x5d34
    34f0:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
    34f4:	04020009 	streq	r0, [r2], #-9
    34f8:	0f030601 	svceq	0x00030601
    34fc:	04020001 	streq	r0, [r2], #-1
    3500:	11054a04 	tstne	r5, r4, lsl #20
    3504:	3d4a1a03 	vstrcc	s3, [sl, #-12]
    3508:	01061a05 	tsteq	r6, r5, lsl #20
    350c:	43060d05 	movwmi	r0, #27909	; 0x6d05
    3510:	0616053d 			; <UNDEFINED> instruction: 0x0616053d
    3514:	060d0501 	streq	r0, [sp], -r1, lsl #10
    3518:	06110530 			; <UNDEFINED> instruction: 0x06110530
    351c:	3c0f0501 	cfstr32cc	mvfx0, [pc], {1}
    3520:	03063f05 	movweq	r3, #28421	; 0x6f05
    3524:	052e7f82 	streq	r7, [lr, #-3970]!	; 0xfffff07e
    3528:	67051520 	strvs	r1, [r5, -r0, lsr #10]
    352c:	176e0516 			; <UNDEFINED> instruction: 0x176e0516
    3530:	05160505 	ldreq	r0, [r6, #-1285]	; 0xfffffafb
    3534:	0d051409 	cfstrseq	mvf1, [r5, #-36]	; 0xffffffdc
    3538:	061f0530 			; <UNDEFINED> instruction: 0x061f0530
    353c:	060d0501 	streq	r0, [sp], -r1, lsl #10
    3540:	060f0524 	streq	r0, [pc], -r4, lsr #10
    3544:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    3548:	052e2203 	streq	r2, [lr, #-515]!	; 0xfffffdfd
    354c:	05010622 	streq	r0, [r1, #-1570]	; 0xfffff9de
    3550:	16052013 			; <UNDEFINED> instruction: 0x16052013
    3554:	2e0b0306 	cdpcs	3, 0, cr0, cr11, cr6, {0}
    3558:	01061805 	tsteq	r6, r5, lsl #16
    355c:	03062d05 	movweq	r2, #27909	; 0x6d05
    3560:	09052e0a 	stmdbeq	r5, {r1, r3, r9, sl, fp, sp}
    3564:	2e2f3316 	mcrcs	3, 1, r3, cr15, cr6, {0}
    3568:	03040200 	movweq	r0, #16896	; 0x4200
    356c:	04020066 	streq	r0, [r2], #-102	; 0xffffff9a
    3570:	02006606 	andeq	r6, r0, #6291456	; 0x600000
    3574:	05310604 	ldreq	r0, [r1, #-1540]!	; 0xfffff9fc
    3578:	0402000d 	streq	r0, [r2], #-13
    357c:	05010606 	streq	r0, [r1, #-1542]	; 0xfffff9fa
    3580:	0402000b 	streq	r0, [r2], #-11
    3584:	0d054a06 	vstreq	s8, [r5, #-24]	; 0xffffffe8
    3588:	11053206 	tstne	r5, r6, lsl #4
    358c:	0f050106 	svceq	0x00050106
    3590:	063a053c 			; <UNDEFINED> instruction: 0x063a053c
    3594:	13110530 	tstne	r1, #48, 10	; 0xc000000
    3598:	15053e59 	strne	r3, [r5, #-3673]	; 0xfffff1a7
    359c:	13050106 	movwne	r0, #20742	; 0x5106
    35a0:	0615052e 	ldreq	r0, [r5], -lr, lsr #10
    35a4:	06180530 			; <UNDEFINED> instruction: 0x06180530
    35a8:	023c1b03 	eorseq	r1, ip, #3072	; 0xc00
    35ac:	01010002 	tsteq	r1, r2
    35b0:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    35b4:	00000002 	andeq	r0, r0, r2
    35b8:	0cf50300 	ldcleq	3, cr0, [r5]
    35bc:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    35c0:	134b0605 	movtne	r0, #46597	; 0xb605
    35c4:	15090513 	strne	r0, [r9, #-1299]	; 0xfffffaed
    35c8:	01061405 	tsteq	r6, r5, lsl #8
    35cc:	051b1005 	ldreq	r1, [fp, #-5]
    35d0:	2403062e 	strcs	r0, [r3], #-1582	; 0xfffff9d2
    35d4:	1611052e 	ldrne	r0, [r1], -lr, lsr #10
    35d8:	01062e05 	tsteq	r6, r5, lsl #28
    35dc:	05202c05 	streq	r2, [r0, #-3077]!	; 0xfffff3fb
    35e0:	05240615 	streq	r0, [r4, #-1557]!	; 0xfffff9eb
    35e4:	05010620 	streq	r0, [r1, #-1568]	; 0xfffff9e0
    35e8:	31052017 	tstcc	r5, r7, lsl r0
    35ec:	11052806 	tstne	r5, r6, lsl #16
    35f0:	06150519 			; <UNDEFINED> instruction: 0x06150519
    35f4:	20130501 	andscs	r0, r3, r1, lsl #10
    35f8:	03062d05 	movweq	r2, #27909	; 0x6d05
    35fc:	1105200d 	tstne	r5, sp
    3600:	303a0515 	eorscc	r0, sl, r5, lsl r5
    3604:	05141105 	ldreq	r1, [r4, #-261]	; 0xfffffefb
    3608:	20010618 	andcs	r0, r1, r8, lsl r6
    360c:	8c030105 	stfhis	f0, [r3], {5}
    3610:	19050101 	stmdbne	r5, {r0, r8}
    3614:	7ed50306 	cdpvc	3, 13, cr0, cr5, cr6, {0}
    3618:	063e052e 	ldrteq	r0, [lr], -lr, lsr #10
    361c:	2e3c0501 	cdpcs	5, 3, cr0, cr12, cr1, {0}
    3620:	03061505 	movweq	r1, #25861	; 0x6505
    3624:	19052e0d 	stmdbne	r5, {r0, r2, r3, r9, sl, fp, sp}
    3628:	17050106 	strne	r0, [r5, -r6, lsl #2]
    362c:	0619054a 	ldreq	r0, [r9], -sl, asr #10
    3630:	03150530 	tsteq	r5, #48, 10	; 0xc000000
    3634:	39053c18 	stmdbcc	r5, {r3, r4, sl, fp, ip, sp}
    3638:	13460530 	movtne	r0, #25904	; 0x6530
    363c:	05141505 	ldreq	r1, [r4, #-1285]	; 0xfffffafb
    3640:	0501061c 	streq	r0, [r1, #-1564]	; 0xfffff9e4
    3644:	3d340615 	ldccc	6, cr0, [r4, #-84]!	; 0xffffffac
    3648:	01062305 	tsteq	r6, r5, lsl #6
    364c:	0009052e 	andeq	r0, r9, lr, lsr #10
    3650:	06010402 	streq	r0, [r1], -r2, lsl #8
    3654:	00010f03 	andeq	r0, r1, r3, lsl #30
    3658:	4a040402 	bmi	104668 <__RAM_SIZE+0x4668>
    365c:	11031905 	tstne	r3, r5, lsl #18
    3660:	301d054a 	andscc	r0, sp, sl, asr #10
    3664:	01063405 	tsteq	r6, r5, lsl #8
    3668:	4c061905 			; <UNDEFINED> instruction: 0x4c061905
    366c:	11052e06 	tstne	r5, r6, lsl #28
    3670:	20190306 	andscs	r0, r9, r6, lsl #6
    3674:	061a053d 			; <UNDEFINED> instruction: 0x061a053d
    3678:	060d0501 	streq	r0, [sp], -r1, lsl #10
    367c:	16053d42 	strne	r3, [r5], -r2, asr #26
    3680:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    3684:	11053406 	tstne	r5, r6, lsl #8
    3688:	0f050106 	svceq	0x00050106
    368c:	063b053c 			; <UNDEFINED> instruction: 0x063b053c
    3690:	2e7eda03 	vaddcs.f32	s27, s28, s6
    3694:	05152005 	ldreq	r2, [r5, #-5]
    3698:	6e05162d 	cfmadd32vs	mvax1, mvfx1, mvfx5, mvfx13
    369c:	16050517 			; <UNDEFINED> instruction: 0x16050517
    36a0:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    36a4:	1f05320d 	svcne	0x0005320d
    36a8:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    36ac:	0f052406 	svceq	0x00052406
    36b0:	11050106 	tstne	r5, r6, lsl #2
    36b4:	2e310306 	cdpcs	3, 3, cr0, cr1, cr6, {0}
    36b8:	01062205 	tsteq	r6, r5, lsl #4
    36bc:	05201305 	streq	r1, [r0, #-773]!	; 0xfffffcfb
    36c0:	0b030616 	bleq	c4f20 <__HEAP_SIZE+0xc3f20>
    36c4:	0618052e 	ldreq	r0, [r8], -lr, lsr #10
    36c8:	062d0501 	strteq	r0, [sp], -r1, lsl #10
    36cc:	052e0a03 	streq	r0, [lr, #-2563]!	; 0xfffff5fd
    36d0:	2f331609 	svccs	0x00331609
    36d4:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    36d8:	02006603 	andeq	r6, r0, #3145728	; 0x300000
    36dc:	00660604 	rsbeq	r0, r6, r4, lsl #12
    36e0:	31060402 	tstcc	r6, r2, lsl #8
    36e4:	02000d05 	andeq	r0, r0, #320	; 0x140
    36e8:	01060604 	tsteq	r6, r4, lsl #12
    36ec:	02000b05 	andeq	r0, r0, #5120	; 0x1400
    36f0:	054a0604 	strbeq	r0, [sl, #-1540]	; 0xfffff9fc
    36f4:	0534060d 	ldreq	r0, [r4, #-1549]!	; 0xfffff9f3
    36f8:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    36fc:	3a053c0f 	bcc	152740 <__RAM_SIZE+0x52740>
    3700:	15053006 	strne	r3, [r5, #-6]
    3704:	06200516 			; <UNDEFINED> instruction: 0x06200516
    3708:	20170501 	andscs	r0, r7, r1, lsl #10
    370c:	03063105 	movweq	r3, #24837	; 0x6105
    3710:	11052e0a 	tstne	r5, sl, lsl #28
    3714:	053e5917 	ldreq	r5, [lr, #-2327]!	; 0xfffff6e9
    3718:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    371c:	15052e13 	strne	r2, [r5, #-3603]	; 0xfffff1ed
    3720:	20033006 	andcs	r3, r3, r6
    3724:	0617053c 			; <UNDEFINED> instruction: 0x0617053c
    3728:	06350501 	ldrteq	r0, [r5], -r1, lsl #10
    372c:	05201b03 	streq	r1, [r0, #-2819]!	; 0xfffff4fd
    3730:	11051342 	tstne	r5, r2, asr #6
    3734:	06180514 			; <UNDEFINED> instruction: 0x06180514
    3738:	06190501 	ldreq	r0, [r9], -r1, lsl #10
    373c:	052e6403 	streq	r6, [lr, #-1027]!	; 0xfffffbfd
    3740:	0519301d 	ldreq	r3, [r9, #-29]	; 0xffffffe3
    3744:	05010638 	streq	r0, [r1, #-1592]	; 0xfffff9c8
    3748:	0903061d 	stmdbeq	r3, {r0, r2, r3, r4, r9, sl}
    374c:	2e20064a 	cfmadda32cs	mvax2, mvax0, mvfx0, mvfx10
    3750:	14061905 	strne	r1, [r6], #-2309	; 0xfffff6fb
    3754:	01000302 	tsteq	r0, r2, lsl #6
    3758:	00050501 	andeq	r0, r5, r1, lsl #10
    375c:	00000205 	andeq	r0, r0, r5, lsl #4
    3760:	b0030000 	andlt	r0, r3, r0
    3764:	01060106 	tsteq	r6, r6, lsl #2
    3768:	3d060905 	vstrcc.16	s0, [r6, #-10]	; <UNPREDICTABLE>
    376c:	14440513 	strbne	r0, [r4], #-1299	; 0xfffffaed
    3770:	05142005 	ldreq	r2, [r4, #-5]
    3774:	0905172d 	stmdbeq	r5, {r0, r2, r3, r5, r8, r9, sl, ip}
    3778:	06220514 			; <UNDEFINED> instruction: 0x06220514
    377c:	20330501 	eorscs	r0, r3, r1, lsl #10
    3780:	052e0b05 	streq	r0, [lr, #-2821]!	; 0xfffff4fb
    3784:	0535060d 	ldreq	r0, [r5, #-1549]!	; 0xfffff9f3
    3788:	05010617 	streq	r0, [r1, #-1559]	; 0xfffff9e9
    378c:	054f060d 	strbeq	r0, [pc, #-1549]	; 3187 <__HEAP_SIZE+0x2187>
    3790:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    3794:	05220611 	streq	r0, [r2, #-1553]!	; 0xfffff9ef
    3798:	05010628 	streq	r0, [r1, #-1576]	; 0xfffff9d8
    379c:	3c05203f 	stccc	0, cr2, [r5], {63}	; 0x3f
    37a0:	38053206 	stmdacc	r5, {r1, r2, r9, ip, sp}
    37a4:	14090516 	strne	r0, [r9], #-1302	; 0xfffffaea
    37a8:	01061005 	tsteq	r6, r5
    37ac:	03060d05 	movweq	r0, #27909	; 0x6d05
    37b0:	2405206a 	strcs	r2, [r5], #-106	; 0xffffff96
    37b4:	3b050106 	blcc	143bd4 <__RAM_SIZE+0x43bd4>
    37b8:	060d0520 	streq	r0, [sp], -r0, lsr #10
    37bc:	0615052f 	ldreq	r0, [r5], -pc, lsr #10
    37c0:	03050501 	movweq	r0, #21761	; 0x5501
    37c4:	00202016 	eoreq	r2, r0, r6, lsl r0
    37c8:	01050101 	tsteq	r5, r1, lsl #2
    37cc:	00020500 	andeq	r0, r2, r0, lsl #10
    37d0:	03000000 	movweq	r0, #0
    37d4:	06010ed7 			; <UNDEFINED> instruction: 0x06010ed7
    37d8:	06050501 	streq	r0, [r5], -r1, lsl #10
    37dc:	13131359 	tstne	r3, #1677721601	; 0x64000001
    37e0:	0f061005 	svceq	0x00061005
    37e4:	03061105 	movweq	r1, #24837	; 0x6105
    37e8:	28052e22 	stmdacs	r5, {r1, r5, r9, sl, fp, sp}
    37ec:	11050106 	tstne	r5, r6, lsl #2
    37f0:	2b052206 	blcs	14c010 <__RAM_SIZE+0x4c010>
    37f4:	1511054b 	ldrne	r0, [r1, #-1355]	; 0xfffffab5
    37f8:	01062e05 	tsteq	r6, r5, lsl #28
    37fc:	24061105 	strcs	r1, [r6], #-261	; 0xfffffefb
    3800:	01061505 	tsteq	r6, r5, lsl #10
    3804:	05201305 	streq	r1, [r0, #-773]!	; 0xfffffcfb
    3808:	0e03062d 	cfmadd32eq	mvax1, mvfx0, mvfx3, mvfx13
    380c:	15110520 	ldrne	r0, [r1, #-1312]	; 0xfffffae0
    3810:	05303105 	ldreq	r3, [r0, #-261]!	; 0xfffffefb
    3814:	18051411 	stmdane	r5, {r0, r4, sl, ip}
    3818:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    381c:	00d60301 	sbcseq	r0, r6, r1, lsl #6
    3820:	06150501 	ldreq	r0, [r5], -r1, lsl #10
    3824:	2e7f9703 	cdpcs	7, 7, cr9, cr15, cr3, {0}
    3828:	01061905 	tsteq	r6, r5, lsl #18
    382c:	054a1705 	strbeq	r1, [sl, #-1797]	; 0xfffff8fb
    3830:	05310619 	ldreq	r0, [r1, #-1561]!	; 0xfffff9e7
    3834:	3c180315 	ldccc	3, cr0, [r8], {21}
    3838:	05303605 	ldreq	r3, [r0, #-1541]!	; 0xfffff9fb
    383c:	1505133d 	strne	r1, [r5, #-829]	; 0xfffffcc3
    3840:	061c0514 			; <UNDEFINED> instruction: 0x061c0514
    3844:	06150501 	ldreq	r0, [r5], -r1, lsl #10
    3848:	23053d35 	movwcs	r3, #23861	; 0x5d35
    384c:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
    3850:	04020009 	streq	r0, [r2], #-9
    3854:	0f030601 	svceq	0x00030601
    3858:	04020001 	streq	r0, [r2], #-1
    385c:	11054a04 	tstne	r5, r4, lsl #20
    3860:	3d4a1a03 	vstrcc	s3, [sl, #-12]
    3864:	01061a05 	tsteq	r6, r5, lsl #20
    3868:	43060d05 	movwmi	r0, #27909	; 0x6d05
    386c:	0616053d 			; <UNDEFINED> instruction: 0x0616053d
    3870:	060d0501 	streq	r0, [sp], -r1, lsl #10
    3874:	06110530 			; <UNDEFINED> instruction: 0x06110530
    3878:	3c0f0501 	cfstr32cc	mvfx0, [pc], {1}
    387c:	03063c05 	movweq	r3, #27653	; 0x6c05
    3880:	052e7efb 	streq	r7, [lr, #-3835]!	; 0xfffff105
    3884:	67051520 	strvs	r1, [r5, -r0, lsr #10]
    3888:	176e0516 			; <UNDEFINED> instruction: 0x176e0516
    388c:	05160505 	ldreq	r0, [r6, #-1285]	; 0xfffffafb
    3890:	0d051409 	cfstrseq	mvf1, [r5, #-36]	; 0xffffffdc
    3894:	061f0530 			; <UNDEFINED> instruction: 0x061f0530
    3898:	060d0501 	streq	r0, [sp], -r1, lsl #10
    389c:	060f0524 	streq	r0, [pc], -r4, lsr #10
    38a0:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    38a4:	052e2803 	streq	r2, [lr, #-2051]!	; 0xfffff7fd
    38a8:	05010622 	streq	r0, [r1, #-1570]	; 0xfffff9de
    38ac:	16052013 			; <UNDEFINED> instruction: 0x16052013
    38b0:	2e0b0306 	cdpcs	3, 0, cr0, cr11, cr6, {0}
    38b4:	01061805 	tsteq	r6, r5, lsl #16
    38b8:	03062d05 	movweq	r2, #27909	; 0x6d05
    38bc:	09052e0b 	stmdbeq	r5, {r0, r1, r3, r9, sl, fp, sp}
    38c0:	2e2f3316 	mcrcs	3, 1, r3, cr15, cr6, {0}
    38c4:	03040200 	movweq	r0, #16896	; 0x4200
    38c8:	04020066 	streq	r0, [r2], #-102	; 0xffffff9a
    38cc:	02006606 	andeq	r6, r0, #6291456	; 0x600000
    38d0:	05310604 	ldreq	r0, [r1, #-1540]!	; 0xfffff9fc
    38d4:	0402000d 	streq	r0, [r2], #-13
    38d8:	05010606 	streq	r0, [r1, #-1542]	; 0xfffff9fa
    38dc:	0402000b 	streq	r0, [r2], #-11
    38e0:	0d054a06 	vstreq	s8, [r5, #-24]	; 0xffffffe8
    38e4:	11053206 	tstne	r5, r6, lsl #4
    38e8:	0f050106 	svceq	0x00050106
    38ec:	0637053c 			; <UNDEFINED> instruction: 0x0637053c
    38f0:	13110530 	tstne	r1, #48, 10	; 0xc000000
    38f4:	15053e59 	strne	r3, [r5, #-3673]	; 0xfffff1a7
    38f8:	13050106 	movwne	r0, #20742	; 0x5106
    38fc:	0615052e 	ldreq	r0, [r5], -lr, lsr #10
    3900:	06180530 			; <UNDEFINED> instruction: 0x06180530
    3904:	023c1b03 	eorseq	r1, ip, #3072	; 0xc00
    3908:	01010002 	tsteq	r1, r2
    390c:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    3910:	00000002 	andeq	r0, r0, r2
    3914:	0ff50300 	svceq	0x00f50300
    3918:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    391c:	13590605 	cmpne	r9, #5242880	; 0x500000
    3920:	14530513 	ldrbne	r0, [r3], #-1299	; 0xfffffaed
    3924:	05141c05 	ldreq	r1, [r4, #-3077]	; 0xfffff3fb
    3928:	2f05135f 	svccs	0x0005135f
    392c:	05011003 	streq	r1, [r1, #-3]
    3930:	2e051705 	cdpcs	7, 0, cr1, cr5, cr5, {0}
    3934:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
    3938:	05220609 	streq	r0, [r2, #-1545]!	; 0xfffff9f7
    393c:	0501061b 	streq	r0, [r1, #-1563]	; 0xfffff9e5
    3940:	05230609 	streq	r0, [r3, #-1545]!	; 0xfffff9f7
    3944:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
    3948:	20330315 	eorscs	r0, r3, r5, lsl r3
    394c:	21063a05 	tstcs	r6, r5, lsl #20
    3950:	05150505 	ldreq	r0, [r5, #-1285]	; 0xfffffafb
    3954:	05053e30 	streq	r3, [r5, #-3632]	; 0xfffff1d0
    3958:	06010514 			; <UNDEFINED> instruction: 0x06010514
    395c:	060d0513 			; <UNDEFINED> instruction: 0x060d0513
    3960:	053c4603 	ldreq	r4, [ip, #-1539]!	; 0xfffff9fd
    3964:	0501061a 	streq	r0, [r1, #-1562]	; 0xfffff9e6
    3968:	054c0633 	strbeq	r0, [ip, #-1587]	; 0xfffff9cd
    396c:	2e06140d 	cdpcs	4, 0, cr1, cr6, cr13, {0}
    3970:	2a052f06 	bcs	14f590 <__RAM_SIZE+0x4f590>
    3974:	28050106 	stmdacs	r5, {r1, r2, r8}
    3978:	060d0520 	streq	r0, [sp], -r0, lsr #10
    397c:	060f0526 	streq	r0, [pc], -r6, lsr #10
    3980:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    3984:	0615053e 			; <UNDEFINED> instruction: 0x0615053e
    3988:	20130501 	andscs	r0, r3, r1, lsl #10
    398c:	20031505 	andcs	r1, r3, r5, lsl #10
    3990:	03062020 	movweq	r2, #24608	; 0x6020
    3994:	19052062 	stmdbne	r5, {r1, r5, r6, sp}
    3998:	17050106 	strne	r0, [r5, -r6, lsl #2]
    399c:	0619054a 	ldreq	r0, [r9], -sl, asr #10
    39a0:	061b0524 	ldreq	r0, [fp], -r4, lsr #10
    39a4:	061d0501 	ldreq	r0, [sp], -r1, lsl #10
    39a8:	0638053e 			; <UNDEFINED> instruction: 0x0638053e
    39ac:	11052001 	tstne	r5, r1
    39b0:	3c150306 	ldccc	3, cr0, [r5], {6}
    39b4:	02002e01 	andeq	r2, r0, #1, 28
    39b8:	002e0104 	eoreq	r0, lr, r4, lsl #2
    39bc:	01010402 	tsteq	r1, r2, lsl #8
    39c0:	01040200 	mrseq	r0, R12_usr
    39c4:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    39c8:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
    39cc:	04020015 	streq	r0, [r2], #-21	; 0xffffffeb
    39d0:	02003101 	andeq	r3, r0, #1073741824	; 0x40000000
    39d4:	20200104 	eorcs	r0, r0, r4, lsl #2
    39d8:	20202020 	eorcs	r2, r0, r0, lsr #32
    39dc:	00010220 	andeq	r0, r1, r0, lsr #4
    39e0:	01050101 	tsteq	r5, r1, lsl #2
    39e4:	00020500 	andeq	r0, r2, r0, lsl #10
    39e8:	03000000 	movweq	r0, #0
    39ec:	060110d8 			; <UNDEFINED> instruction: 0x060110d8
    39f0:	06050501 	streq	r0, [r5], -r1, lsl #10
    39f4:	1313133d 	tstne	r3, #-201326592	; 0xf4000000
    39f8:	05143505 	ldreq	r3, [r4, #-1285]	; 0xfffffafb
    39fc:	5f05141c 	svcpl	0x0005141c
    3a00:	132d0513 			; <UNDEFINED> instruction: 0x132d0513
    3a04:	10032f05 	andne	r2, r3, r5, lsl #30
    3a08:	17050501 	strne	r0, [r5, -r1, lsl #10]
    3a0c:	01062e05 	tsteq	r6, r5, lsl #28
    3a10:	0609052e 	streq	r0, [r9], -lr, lsr #10
    3a14:	06140523 	ldreq	r0, [r4], -r3, lsr #10
    3a18:	200b0501 	andcs	r0, fp, r1, lsl #10
    3a1c:	0e031505 	cfsh32eq	mvfx1, mvfx3, #5
    3a20:	06370520 	ldrteq	r0, [r7], -r0, lsr #10
    3a24:	15050521 	strne	r0, [r5, #-1313]	; 0xfffffadf
    3a28:	053e2d05 	ldreq	r2, [lr, #-3333]!	; 0xfffff2fb
    3a2c:	01051405 	tsteq	r5, r5, lsl #8
    3a30:	30051306 	andcc	r1, r5, r6, lsl #6
    3a34:	2e6b0306 	cdpcs	3, 6, cr0, cr11, cr6, {0}
    3a38:	05160d05 	ldreq	r0, [r6, #-3333]	; 0xfffff2fb
    3a3c:	05010624 	streq	r0, [r1, #-1572]	; 0xfffff9dc
    3a40:	0621060d 	strteq	r0, [r1], -sp, lsl #12
    3a44:	052f062e 	streq	r0, [pc, #-1582]!	; 341e <__HEAP_SIZE+0x241e>
    3a48:	0501062a 	streq	r0, [r1, #-1578]	; 0xfffff9d6
    3a4c:	0522060d 	streq	r0, [r2, #-1549]!	; 0xfffff9f3
    3a50:	20010615 	andcs	r0, r1, r5, lsl r6
    3a54:	01000102 	tsteq	r0, r2, lsl #2
    3a58:	00010501 	andeq	r0, r1, r1, lsl #10
    3a5c:	00000205 	andeq	r0, r0, r5, lsl #4
    3a60:	95030000 	strls	r0, [r3, #-0]
    3a64:	01060111 	tsteq	r6, r1, lsl r1
    3a68:	2f060505 	svccs	0x00060505
    3a6c:	05143005 	ldreq	r3, [r4, #-5]
    3a70:	0505141b 	streq	r1, [r5, #-1051]	; 0xfffffbe5
    3a74:	30090514 	andcc	r0, r9, r4, lsl r5
    3a78:	01061205 	tsteq	r6, r5, lsl #4
    3a7c:	22060505 	andcs	r0, r6, #20971520	; 0x1400000
    3a80:	05303305 	ldreq	r3, [r0, #-773]!	; 0xfffffcfb
    3a84:	01051405 	tsteq	r5, r5, lsl #8
    3a88:	002e1306 	eoreq	r1, lr, r6, lsl #6
    3a8c:	01050101 	tsteq	r5, r1, lsl #2
    3a90:	00020500 	andeq	r0, r2, r0, lsl #10
    3a94:	03000000 	movweq	r0, #0
    3a98:	060111a9 	streq	r1, [r1], -r9, lsr #3
    3a9c:	06050501 	streq	r0, [r5], -r1, lsl #10
    3aa0:	3005132f 	andcc	r1, r5, pc, lsr #6
    3aa4:	141c0514 	ldrne	r0, [ip], #-1300	; 0xfffffaec
    3aa8:	05140505 	ldreq	r0, [r4, #-1285]	; 0xfffffafb
    3aac:	2d053009 	stccs	0, cr3, [r5, #-36]	; 0xffffffdc
    3ab0:	41050106 	tstmi	r5, r6, lsl #2
    3ab4:	20120520 	andscs	r0, r2, r0, lsr #10
    3ab8:	22060505 	andcs	r0, r6, #20971520	; 0x1400000
    3abc:	05303305 	ldreq	r3, [r0, #-773]!	; 0xfffffcfb
    3ac0:	01051405 	tsteq	r5, r5, lsl #8
    3ac4:	002e1306 	eoreq	r1, lr, r6, lsl #6
    3ac8:	01050101 	tsteq	r5, r1, lsl #2
    3acc:	00020500 	andeq	r0, r2, r0, lsl #10
    3ad0:	03000000 	movweq	r0, #0
    3ad4:	050111be 	streq	r1, [r1, #-446]	; 0xfffffe42
    3ad8:	05131305 	ldreq	r1, [r3, #-773]	; 0xfffffcfb
    3adc:	1c051437 	cfstrsne	mvf1, [r5], {55}	; 0x37
    3ae0:	13050514 	movwne	r0, #21780	; 0x5514
    3ae4:	01060e05 	tsteq	r6, r5, lsl #28
    3ae8:	22063a05 	andcs	r3, r6, #20480	; 0x5000
    3aec:	05140505 	ldreq	r0, [r4, #-1285]	; 0xfffffafb
    3af0:	02130601 	andseq	r0, r3, #1048576	; 0x100000
    3af4:	01010001 	tsteq	r1, r1
    3af8:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    3afc:	00000002 	andeq	r0, r0, r2
    3b00:	11ce0300 	bicne	r0, lr, r0, lsl #6
    3b04:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    3b08:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
    3b0c:	1c051426 	cfstrsne	mvf1, [r5], {38}	; 0x26
    3b10:	13210514 			; <UNDEFINED> instruction: 0x13210514
    3b14:	12030905 	andne	r0, r3, #81920	; 0x14000
    3b18:	06140501 	ldreq	r0, [r4], -r1, lsl #10
    3b1c:	2e0b0501 	cfsh32cs	mvfx0, mvfx11, #1
    3b20:	12030105 	andne	r0, r3, #1073741825	; 0x40000001
    3b24:	060d0520 	streq	r0, [sp], -r0, lsr #10
    3b28:	05207003 	streq	r7, [r0, #-3]!
    3b2c:	1f053225 	svcne	0x00053225
    3b30:	05010b03 	streq	r0, [r1, #-2819]	; 0xfffff4fd
    3b34:	02130601 	andseq	r0, r3, #1048576	; 0x100000
    3b38:	01010001 	tsteq	r1, r1
    3b3c:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    3b40:	00000002 	andeq	r0, r0, r2
    3b44:	12a70300 	adcne	r0, r7, #0, 6
    3b48:	13310501 	teqne	r1, #4194304	; 0x400000
    3b4c:	05145005 	ldreq	r5, [r4, #-5]
    3b50:	01051405 	tsteq	r5, r5, lsl #8
    3b54:	02201306 	eoreq	r1, r0, #402653184	; 0x18000000
    3b58:	01010001 	tsteq	r1, r1
    3b5c:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    3b60:	00000002 	andeq	r0, r0, r2
    3b64:	12b10300 	adcsne	r0, r1, #0, 6
    3b68:	132f0501 			; <UNDEFINED> instruction: 0x132f0501
    3b6c:	05144c05 	ldreq	r4, [r4, #-3077]	; 0xfffff3fb
    3b70:	01051405 	tsteq	r5, r5, lsl #8
    3b74:	02201306 	eoreq	r1, r0, #402653184	; 0x18000000
    3b78:	01010001 	tsteq	r1, r1
    3b7c:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    3b80:	00000002 	andeq	r0, r0, r2
    3b84:	14cb0300 	strbne	r0, [fp], #768	; 0x300
    3b88:	13050501 	movwne	r0, #21761	; 0x5501
    3b8c:	14330513 	ldrtne	r0, [r3], #-1299	; 0xfffffaed
    3b90:	05141c05 	ldreq	r1, [r4, #-3077]	; 0xfffff3fb
    3b94:	10051405 	andne	r1, r5, r5, lsl #8
    3b98:	07050106 	streq	r0, [r5, -r6, lsl #2]
    3b9c:	22110520 	andscs	r0, r1, #32, 10	; 0x8000000
    3ba0:	35052420 	strcc	r2, [r5, #-1056]	; 0xfffffbe0
    3ba4:	05052306 	streq	r2, [r5, #-774]	; 0xfffffcfa
    3ba8:	06010514 			; <UNDEFINED> instruction: 0x06010514
    3bac:	00010213 	andeq	r0, r1, r3, lsl r2
    3bb0:	01050101 	tsteq	r5, r1, lsl #2
    3bb4:	00020500 	andeq	r0, r2, r0, lsl #10
    3bb8:	03000000 	movweq	r0, #0
    3bbc:	050114f8 	streq	r1, [r1, #-1272]	; 0xfffffb08
    3bc0:	05131305 	ldreq	r1, [r3, #-773]	; 0xfffffcfb
    3bc4:	1c051432 	cfstrsne	mvf1, [r5], {50}	; 0x32
    3bc8:	14050514 	strne	r0, [r5], #-1300	; 0xfffffaec
    3bcc:	01061005 	tsteq	r6, r5
    3bd0:	05202e05 	streq	r2, [r0, #-3589]!	; 0xfffff1fb
    3bd4:	11052007 	tstne	r5, r7
    3bd8:	06340534 			; <UNDEFINED> instruction: 0x06340534
    3bdc:	14050523 	strne	r0, [r5], #-1315	; 0xfffffadd
    3be0:	13060105 	movwne	r0, #24837	; 0x6105
    3be4:	76031105 	strvc	r1, [r3], -r5, lsl #2
    3be8:	01022020 	tsteq	r2, r0, lsr #32
    3bec:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    3bf0:	02050005 	andeq	r0, r5, #5
    3bf4:	10002228 	andne	r2, r0, r8, lsr #4
    3bf8:	0118be03 	tsteq	r8, r3, lsl #28
    3bfc:	09050106 	stmdbeq	r5, {r1, r2, r8}
    3c00:	5d054b06 	vstrpl	d4, [r5, #-24]	; 0xffffffe8
    3c04:	03090514 	movweq	r0, #38164	; 0x9514
    3c08:	002e0110 	eoreq	r0, lr, r0, lsl r1
    3c0c:	66030402 	strvs	r0, [r3], -r2, lsl #8
    3c10:	06040200 	streq	r0, [r4], -r0, lsl #4
    3c14:	04020066 	streq	r0, [r2], #-102	; 0xffffff9a
    3c18:	14053006 	strne	r3, [r5], #-6
    3c1c:	06040200 	streq	r0, [r4], -r0, lsl #4
    3c20:	0b050106 	bleq	144040 <__RAM_SIZE+0x44040>
    3c24:	06040200 	streq	r0, [r4], -r0, lsl #4
    3c28:	06250520 	strteq	r0, [r5], -r0, lsr #10
    3c2c:	15090527 	strne	r0, [r9, #-1319]	; 0xfffffad9
    3c30:	053e3505 	ldreq	r3, [lr, #-1285]!	; 0xfffffafb
    3c34:	05130605 	ldreq	r0, [r3, #-1541]	; 0xfffff9fb
    3c38:	04020009 	streq	r0, [r2], #-9
    3c3c:	71030601 	tstvc	r3, r1, lsl #12
    3c40:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    3c44:	0d054a04 	vstreq	s8, [r5, #-16]
    3c48:	0007024f 	andeq	r0, r7, pc, asr #4
    3c4c:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    3c50:	00020500 	andeq	r0, r2, r0, lsl #10
    3c54:	03000000 	movweq	r0, #0
    3c58:	060118e8 	streq	r1, [r1], -r8, ror #17
    3c5c:	06090501 	streq	r0, [r9], -r1, lsl #10
    3c60:	14390521 	ldrtne	r0, [r9], #-1313	; 0xfffffadf
    3c64:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    3c68:	05010613 	streq	r0, [r1, #-1555]	; 0xfffff9ed
    3c6c:	054c062f 	strbeq	r0, [ip, #-1583]	; 0xfffff9d1
    3c70:	05051409 	streq	r1, [r5, #-1033]	; 0xfffffbf7
    3c74:	01021306 	tsteq	r2, r6, lsl #6
    3c78:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    3c7c:	02050005 	andeq	r0, r5, #5
    3c80:	00000000 	andeq	r0, r0, r0
    3c84:	0118fb03 	tsteq	r8, r3, lsl #22	; <UNPREDICTABLE>
    3c88:	09050106 	stmdbeq	r5, {r1, r2, r8}
    3c8c:	42053d06 	andmi	r3, r5, #384	; 0x180
    3c90:	14090514 	strne	r0, [r9], #-1300	; 0xfffffaec
    3c94:	05300d05 	ldreq	r0, [r0, #-3333]!	; 0xfffff2fb
    3c98:	05010634 	streq	r0, [r1, #-1588]	; 0xfffff9cc
    3c9c:	1905200f 	stmdbne	r5, {r0, r1, r2, r3, sp}
    3ca0:	06090523 	streq	r0, [r9], -r3, lsr #10
    3ca4:	05200e03 	streq	r0, [r0, #-3587]!	; 0xfffff1fd
    3ca8:	0905302e 	stmdbeq	r5, {r1, r2, r3, r5, ip, sp}
    3cac:	06050514 			; <UNDEFINED> instruction: 0x06050514
    3cb0:	06120513 			; <UNDEFINED> instruction: 0x06120513
    3cb4:	052e6f03 	streq	r6, [lr, #-3843]!	; 0xfffff0fd
    3cb8:	05010639 	streq	r0, [r1, #-1593]	; 0xfffff9c7
    3cbc:	11052014 	tstne	r5, r4, lsl r0
    3cc0:	4a052806 	bmi	14dce0 <__RAM_SIZE+0x4dce0>
    3cc4:	11050106 	tstne	r5, r6, lsl #2
    3cc8:	19052106 	stmdbne	r5, {r1, r2, r8, sp}
    3ccc:	1b200106 	blne	8040ec <__RAM_SIZE+0x7040ec>
    3cd0:	00010220 	andeq	r0, r1, r0, lsr #4
    3cd4:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    3cd8:	00020500 	andeq	r0, r2, r0, lsl #10
    3cdc:	03000000 	movweq	r0, #0
    3ce0:	050119a1 	streq	r1, [r1, #-2465]	; 0xfffff65f
    3ce4:	05131309 	ldreq	r1, [r3, #-777]	; 0xfffffcf7
    3ce8:	09051447 	stmdbeq	r5, {r0, r1, r2, r6, sl, ip}
    3cec:	061f0514 			; <UNDEFINED> instruction: 0x061f0514
    3cf0:	200b0501 	andcs	r0, fp, r1, lsl #10
    3cf4:	05311505 	ldreq	r1, [r1, #-1285]!	; 0xfffffafb
    3cf8:	20170305 	andscs	r0, r7, r5, lsl #6
    3cfc:	05206003 	streq	r6, [r0, #-3]!
    3d00:	0b03060e 	bleq	c5540 <__HEAP_SIZE+0xc4540>
    3d04:	0624052e 	strteq	r0, [r4], -lr, lsr #10
    3d08:	20100501 	andscs	r0, r0, r1, lsl #10
    3d0c:	05251505 	streq	r1, [r5, #-1285]!	; 0xfffffafb
    3d10:	0d030633 	stceq	6, cr0, [r3, #-204]	; 0xffffff34
    3d14:	14090520 	strne	r0, [r9], #-1312	; 0xfffffae0
    3d18:	13060505 	movwne	r0, #25861	; 0x6505
    3d1c:	03060d05 	movweq	r0, #27909	; 0x6d05
    3d20:	11052074 	tstne	r5, r4, ror r0
    3d24:	06390531 			; <UNDEFINED> instruction: 0x06390531
    3d28:	060d0501 	streq	r0, [sp], -r1, lsl #10
    3d2c:	15052f30 	strne	r2, [r5, #-3888]	; 0xfffff0d0
    3d30:	02020106 	andeq	r0, r2, #-2147483647	; 0x80000001
    3d34:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    3d38:	02050005 	andeq	r0, r5, #5
    3d3c:	00000000 	andeq	r0, r0, r0
    3d40:	0119ca03 	tsteq	r9, r3, lsl #20
    3d44:	09050106 	stmdbeq	r5, {r1, r2, r8}
    3d48:	20053d06 	andcs	r3, r5, r6, lsl #26
    3d4c:	42050106 	andmi	r0, r5, #-2147483647	; 0x80000001
    3d50:	09053006 	stmdbeq	r5, {r1, r2, ip, sp}
    3d54:	06120514 			; <UNDEFINED> instruction: 0x06120514
    3d58:	33052001 	movwcc	r2, #20481	; 0x5001
    3d5c:	09053006 	stmdbeq	r5, {r1, r2, ip, sp}
    3d60:	06050514 			; <UNDEFINED> instruction: 0x06050514
    3d64:	00040213 	andeq	r0, r4, r3, lsl r2
    3d68:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    3d6c:	00020500 	andeq	r0, r2, r0, lsl #10
    3d70:	03000000 	movweq	r0, #0
    3d74:	060119dc 			; <UNDEFINED> instruction: 0x060119dc
    3d78:	06090501 	streq	r0, [r9], -r1, lsl #10
    3d7c:	0620052f 	strteq	r0, [r0], -pc, lsr #10
    3d80:	063b0501 	ldrteq	r0, [fp], -r1, lsl #10
    3d84:	14090530 	strne	r0, [r9], #-1328	; 0xfffffad0
    3d88:	01061205 	tsteq	r6, r5, lsl #4
    3d8c:	3e063a05 	vmlacc.f32	s6, s12, s10
    3d90:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    3d94:	02130605 	andseq	r0, r3, #5242880	; 0x500000
    3d98:	01010004 	tsteq	r1, r4
    3d9c:	00003224 	andeq	r3, r0, r4, lsr #4
    3da0:	02aa0003 	adceq	r0, sl, #3
    3da4:	01020000 	mrseq	r0, (UNDEF: 2)
    3da8:	000d0efb 	strdeq	r0, [sp], -fp
    3dac:	01010101 	tsteq	r1, r1, lsl #2
    3db0:	01000000 	mrseq	r0, (UNDEF: 0)
    3db4:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
    3db8:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    3dbc:	2f2e2e2f 	svccs	0x002e2e2f
    3dc0:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
    3dc4:	2f736f74 	svccs	0x00736f74
    3dc8:	65657246 	strbvs	r7, [r5, #-582]!	; 0xfffffdba
    3dcc:	534f5452 	movtpl	r5, #62546	; 0xf452
    3dd0:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
    3dd4:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
    3dd8:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
    3ddc:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
    3de0:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
    3de4:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
    3de8:	5f6d7261 	svcpl	0x006d7261
    3dec:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
    3df0:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
    3df4:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    3df8:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    3dfc:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    3e00:	30312d69 	eorscc	r2, r1, r9, ror #26
    3e04:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
    3e08:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
    3e0c:	6c5c3031 	mrrcvs	0, 3, r3, ip, cr1
    3e10:	675c6269 	ldrbvs	r6, [ip, -r9, ror #4]
    3e14:	615c6363 	cmpvs	ip, r3, ror #6
    3e18:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    3e1c:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    3e20:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    3e24:	2e30315c 	mrccs	1, 1, r3, cr0, cr12, {2}
    3e28:	5c312e33 	ldcpl	14, cr2, [r1], #-204	; 0xffffff34
    3e2c:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    3e30:	00656475 	rsbeq	r6, r5, r5, ror r4
    3e34:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
    3e38:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    3e3c:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
    3e40:	705c6e6f 	subsvc	r6, ip, pc, ror #28
    3e44:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
    3e48:	615c6d61 	cmpvs	ip, r1, ror #26
    3e4c:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
    3e50:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
    3e54:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
    3e58:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    3e5c:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    3e60:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    3e64:	2e30312d 	rsfcssp	f3, f0, #5.0
    3e68:	30322d33 	eorscc	r2, r2, r3, lsr sp
    3e6c:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
    3e70:	72615c30 	rsbvc	r5, r1, #48, 24	; 0x3000
    3e74:	6f6e2d6d 	svcvs	0x006e2d6d
    3e78:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    3e7c:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
    3e80:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    3e84:	5c656475 	cfstrdpl	mvd6, [r5], #-468	; 0xfffffe2c
    3e88:	6863616d 	stmdavs	r3!, {r0, r2, r3, r5, r6, r8, sp, lr}^
    3e8c:	00656e69 	rsbeq	r6, r5, r9, ror #28
    3e90:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
    3e94:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    3e98:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
    3e9c:	705c6e6f 	subsvc	r6, ip, pc, ror #28
    3ea0:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
    3ea4:	615c6d61 	cmpvs	ip, r1, ror #26
    3ea8:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
    3eac:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
    3eb0:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
    3eb4:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    3eb8:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    3ebc:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    3ec0:	2e30312d 	rsfcssp	f3, f0, #5.0
    3ec4:	30322d33 	eorscc	r2, r2, r3, lsr sp
    3ec8:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
    3ecc:	72615c30 	rsbvc	r5, r1, #48, 24	; 0x3000
    3ed0:	6f6e2d6d 	svcvs	0x006e2d6d
    3ed4:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    3ed8:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
    3edc:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    3ee0:	5c656475 	cfstrdpl	mvd6, [r5], #-468	; 0xfffffe2c
    3ee4:	00737973 	rsbseq	r7, r3, r3, ror r9
    3ee8:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    3eec:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    3ef0:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    3ef4:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    3ef8:	6572462f 	ldrbvs	r4, [r2, #-1583]!	; 0xfffff9d1
    3efc:	4f545265 	svcmi	0x00545265
    3f00:	6e692f53 	mcrvs	15, 3, r2, cr9, cr3, {2}
    3f04:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    3f08:	2e2e0065 	cdpcs	0, 2, cr0, cr14, cr5, {3}
    3f0c:	2f2e2e2f 	svccs	0x002e2e2f
    3f10:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 3e60 <__HEAP_SIZE+0x2e60>
    3f14:	74726269 	ldrbtvc	r6, [r2], #-617	; 0xfffffd97
    3f18:	462f736f 	strtmi	r7, [pc], -pc, ror #6
    3f1c:	52656572 	rsbpl	r6, r5, #478150656	; 0x1c800000
    3f20:	2f534f54 	svccs	0x00534f54
    3f24:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
    3f28:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
    3f2c:	4343472f 	movtmi	r4, #14127	; 0x372f
    3f30:	4d52412f 	ldfmie	f4, [r2, #-188]	; 0xffffff44
    3f34:	334d435f 	movtcc	r4, #54111	; 0xd35f
    3f38:	544e5f33 	strbpl	r5, [lr], #-3891	; 0xfffff0cd
    3f3c:	6f6e2f5a 	svcvs	0x006e2f5a
    3f40:	65735f6e 	ldrbvs	r5, [r3, #-3950]!	; 0xfffff092
    3f44:	65727563 	ldrbvs	r7, [r2, #-1379]!	; 0xfffffa9d
    3f48:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
    3f4c:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
    3f50:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
    3f54:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
    3f58:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
    3f5c:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
    3f60:	5f6d7261 	svcpl	0x006d7261
    3f64:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
    3f68:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
    3f6c:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    3f70:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    3f74:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    3f78:	30312d69 	eorscc	r2, r1, r9, ror #26
    3f7c:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
    3f80:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
    3f84:	615c3031 	cmpvs	ip, r1, lsr r0
    3f88:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    3f8c:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    3f90:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    3f94:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
    3f98:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    3f9c:	61740000 	cmnvs	r4, r0
    3fa0:	2e736b73 	vmovcs.s8	r6, d3[7]
    3fa4:	00010063 	andeq	r0, r1, r3, rrx
    3fa8:	64747300 	ldrbtvs	r7, [r4], #-768	; 0xfffffd00
    3fac:	2e666564 	cdpcs	5, 6, cr6, cr6, cr4, {3}
    3fb0:	00020068 	andeq	r0, r2, r8, rrx
    3fb4:	65645f00 	strbvs	r5, [r4, #-3840]!	; 0xfffff100
    3fb8:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
    3fbc:	79745f74 	ldmdbvc	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    3fc0:	2e736570 	mrccs	5, 3, r6, cr3, cr0, {3}
    3fc4:	00030068 	andeq	r0, r3, r8, rrx
    3fc8:	74735f00 	ldrbtvc	r5, [r3], #-3840	; 0xfffff100
    3fcc:	746e6964 	strbtvc	r6, [lr], #-2404	; 0xfffff69c
    3fd0:	0400682e 	streq	r6, [r0], #-2094	; 0xfffff7d2
    3fd4:	72700000 	rsbsvc	r0, r0, #0
    3fd8:	65646a6f 	strbvs	r6, [r4, #-2671]!	; 0xfffff591
    3fdc:	682e7366 	stmdavs	lr!, {r1, r2, r5, r6, r8, r9, ip, sp, lr}
    3fe0:	00000500 	andeq	r0, r0, r0, lsl #10
    3fe4:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
    3fe8:	7263616d 	rsbvc	r6, r3, #1073741851	; 0x4000001b
    3fec:	6d6f636f 	stclvs	3, cr6, [pc, #-444]!	; 3e38 <__HEAP_SIZE+0x2e38>
    3ff0:	2e6e6f6d 	cdpcs	15, 6, cr6, cr14, cr13, {3}
    3ff4:	00060068 	andeq	r0, r6, r8, rrx
    3ff8:	65724600 	ldrbvs	r4, [r2, #-1536]!	; 0xfffffa00
    3ffc:	4f545265 	svcmi	0x00545265
    4000:	00682e53 	rsbeq	r2, r8, r3, asr lr
    4004:	6c000005 	stcvs	0, cr0, [r0], {5}
    4008:	2e747369 	cdpcs	3, 7, cr7, cr4, cr9, {3}
    400c:	00050068 	andeq	r0, r5, r8, rrx
    4010:	73617400 	cmnvc	r1, #0, 8
    4014:	00682e6b 	rsbeq	r2, r8, fp, ror #28
    4018:	70000005 	andvc	r0, r0, r5
    401c:	6174726f 	cmnvs	r4, pc, ror #4
    4020:	2e656c62 	cdpcs	12, 6, cr6, cr5, cr2, {3}
    4024:	00050068 	andeq	r0, r5, r8, rrx
    4028:	6d697400 	cfstrdvs	mvd7, [r9, #-0]
    402c:	2e737265 	cdpcs	2, 7, cr7, cr3, cr5, {3}
    4030:	00050068 	andeq	r0, r5, r8, rrx
    4034:	72747300 	rsbsvc	r7, r4, #0, 6
    4038:	2e676e69 	cdpcs	14, 6, cr6, cr7, cr9, {3}
    403c:	00070068 	andeq	r0, r7, r8, rrx
    4040:	75623c00 	strbvc	r3, [r2, #-3072]!	; 0xfffff400
    4044:	2d746c69 	ldclcs	12, cr6, [r4, #-420]!	; 0xfffffe5c
    4048:	003e6e69 	eorseq	r6, lr, r9, ror #28
    404c:	00000000 	andeq	r0, r0, r0
    4050:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    4054:	00000002 	andeq	r0, r0, r2
    4058:	19d30300 	ldmibne	r3, {r8, r9}^
    405c:	13090501 	movwne	r0, #38145	; 0x9501
    4060:	181e0513 	ldmdane	lr, {r0, r1, r4, r8, sl}
    4064:	05150905 	ldreq	r0, [r5, #-2309]	; 0xfffff6fb
    4068:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
    406c:	1405200b 	strne	r2, [r5], #-11
    4070:	203c7603 	eorscs	r7, ip, r3, lsl #12
    4074:	03060d05 	movweq	r0, #27909	; 0x6d05
    4078:	1105200d 	tstne	r5, sp
    407c:	0f050106 	svceq	0x00050106
    4080:	03140520 	tsteq	r4, #32, 10	; 0x8000000
    4084:	05203c73 	streq	r3, [r0, #-3187]!	; 0xfffff38d
    4088:	11030611 	tstne	r3, r1, lsl r6
    408c:	06130520 	ldreq	r0, [r3], -r0, lsr #10
    4090:	03140501 	tsteq	r4, #4194304	; 0x400000
    4094:	0520206f 	streq	r2, [r0, #-111]!	; 0xffffff91
    4098:	2003061d 	andcs	r0, r3, sp, lsl r6
    409c:	06350520 	ldrteq	r0, [r5], -r0, lsr #10
    40a0:	4a1f0501 	bmi	7c54ac <__RAM_SIZE+0x6c54ac>
    40a4:	02006e05 	andeq	r6, r0, #5, 28	; 0x50
    40a8:	2c060204 	sfmcs	f0, 4, [r6], {4}
    40ac:	02006f05 	andeq	r6, r0, #5, 30
    40b0:	01060204 	tsteq	r6, r4, lsl #4
    40b4:	02040200 	andeq	r0, r4, #0, 4
    40b8:	20200520 	eorcs	r0, r0, r0, lsr #10
    40bc:	02003405 	andeq	r3, r0, #83886080	; 0x5000000
    40c0:	20060104 	andcs	r0, r6, r4, lsl #2
    40c4:	02001905 	andeq	r1, r0, #81920	; 0x14000
    40c8:	01060104 	tsteq	r6, r4, lsl #2
    40cc:	202c2105 	eorcs	r2, ip, r5, lsl #2
    40d0:	20262905 	eorcs	r2, r6, r5, lsl #18
    40d4:	03062505 	movweq	r2, #25861	; 0x6505
    40d8:	09050117 	stmdbeq	r5, {r0, r1, r2, r4, r8}
    40dc:	06050515 			; <UNDEFINED> instruction: 0x06050515
    40e0:	00050213 	andeq	r0, r5, r3, lsl r2
    40e4:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    40e8:	7c020500 	cfstr32vc	mvfx0, [r2], {-0}
    40ec:	03100022 	tsteq	r0, #34	; 0x22
    40f0:	05011eb6 	streq	r1, [r1, #-3766]	; 0xfffff14a
    40f4:	05131309 	ldreq	r1, [r3, #-777]	; 0xfffffcf7
    40f8:	24051a0d 	strcs	r1, [r5], #-2573	; 0xfffff5f3
    40fc:	0f050106 	svceq	0x00050106
    4100:	222c052e 	eorcs	r0, ip, #192937984	; 0xb800000
    4104:	03060905 	movweq	r0, #26885	; 0x6905
    4108:	19052013 	stmdbne	r5, {r0, r1, r4, sp}
    410c:	0b050106 	bleq	14452c <__RAM_SIZE+0x4452c>
    4110:	060e053c 			; <UNDEFINED> instruction: 0x060e053c
    4114:	06120524 	ldreq	r0, [r2], -r4, lsr #10
    4118:	2e100501 	cfmul32cs	mvfx0, mvfx0, mvfx1
    411c:	35060e05 	strcc	r0, [r6, #-3589]	; 0xfffff1fb
    4120:	01061005 	tsteq	r6, r5
    4124:	03060d05 	movweq	r0, #27909	; 0x6d05
    4128:	15052009 	strne	r2, [r5, #-9]
    412c:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    4130:	0521060d 	streq	r0, [r1, #-1549]!	; 0xfffff9f3
    4134:	202e0615 	eorcs	r0, lr, r5, lsl r6
    4138:	05206d03 	streq	r6, [r0, #-3331]!	; 0xfffff2fd
    413c:	16030609 	strne	r0, [r3], -r9, lsl #12
    4140:	06050520 	streq	r0, [r5], -r0, lsr #10
    4144:	000c0213 	andeq	r0, ip, r3, lsl r2
    4148:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    414c:	00020500 	andeq	r0, r2, r0, lsl #10
    4150:	03000000 	movweq	r0, #0
    4154:	060120df 			; <UNDEFINED> instruction: 0x060120df
    4158:	06090501 	streq	r0, [r9], -r1, lsl #10
    415c:	13131321 	tstne	r3, #-2080374784	; 0x84000000
    4160:	1c051313 	stcne	3, cr1, [r5], {19}
    4164:	09050106 	stmdbeq	r5, {r1, r2, r8}
    4168:	05162106 	ldreq	r2, [r6, #-262]	; 0xfffffefa
    416c:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
    4170:	0d052e0b 	stceq	14, cr2, [r5, #-44]	; 0xffffffd4
    4174:	1d053006 	stcne	0, cr3, [r5, #-24]	; 0xffffffe8
    4178:	11050106 	tstne	r5, r6, lsl #2
    417c:	05207403 	streq	r7, [r0, #-1027]!	; 0xfffffbfd
    4180:	200c030d 	andcs	r0, ip, sp, lsl #6
    4184:	18032205 	stmdane	r3, {r0, r2, r9, sp}
    4188:	06110520 	ldreq	r0, [r1], -r0, lsr #10
    418c:	05200e03 	streq	r0, [r0, #-3587]!	; 0xfffff1fd
    4190:	05010613 	streq	r0, [r1, #-1555]	; 0xfffff9ed
    4194:	04020058 	streq	r0, [r2], #-88	; 0xffffffa8
    4198:	5a030602 	bpl	c59a8 <__HEAP_SIZE+0xc49a8>
    419c:	00630520 	rsbeq	r0, r3, r0, lsr #10
    41a0:	06020402 	streq	r0, [r2], -r2, lsl #8
    41a4:	003d0501 	eorseq	r0, sp, r1, lsl #10
    41a8:	06010402 	streq	r0, [r1], -r2, lsl #8
    41ac:	000d0520 	andeq	r0, sp, r0, lsr #10
    41b0:	06010402 	streq	r0, [r1], -r2, lsl #8
    41b4:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    41b8:	06170533 			; <UNDEFINED> instruction: 0x06170533
    41bc:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    41c0:	18051424 	stmdane	r5, {r2, r5, sl, ip}
    41c4:	2d050106 	stfcss	f0, [r5, #-24]	; 0xffffffe8
    41c8:	01040200 	mrseq	r0, R12_usr
    41cc:	11052006 	tstne	r5, r6
    41d0:	01040200 	mrseq	r0, R12_usr
    41d4:	15050106 	strne	r0, [r5, #-262]	; 0xfffffefa
    41d8:	1f053006 	svcne	0x00053006
    41dc:	15050106 	strne	r0, [r5, #-262]	; 0xfffffefa
    41e0:	33053e06 	movwcc	r3, #24070	; 0x5e06
    41e4:	17050106 	strne	r0, [r5, -r6, lsl #2]
    41e8:	061a052e 	ldreq	r0, [sl], -lr, lsr #10
    41ec:	061c0533 			; <UNDEFINED> instruction: 0x061c0533
    41f0:	00310501 	eorseq	r0, r1, r1, lsl #10
    41f4:	06020402 	streq	r0, [r2], -r2, lsl #8
    41f8:	052e0903 	streq	r0, [lr, #-2307]!	; 0xfffff6fd
    41fc:	04020015 	streq	r0, [r2], #-21	; 0xffffffeb
    4200:	5a051502 	bpl	149610 <__RAM_SIZE+0x49610>
    4204:	02040200 	andeq	r0, r4, #0, 4
    4208:	05016b03 	streq	r6, [r1, #-2819]	; 0xfffff4fd
    420c:	0402005b 	streq	r0, [r2], #-91	; 0xffffffa5
    4210:	00010602 	andeq	r0, r1, r2, lsl #12
    4214:	20020402 	andcs	r0, r2, r2, lsl #8
    4218:	69031105 	stmdbvs	r3, {r0, r2, r8, ip}
    421c:	06250520 	strteq	r0, [r5], -r0, lsr #10
    4220:	05203b03 	streq	r3, [r0, #-2819]!	; 0xfffff4fd
    4224:	05051509 	streq	r1, [r5, #-1289]	; 0xfffffaf7
    4228:	00201306 	eoreq	r1, r0, r6, lsl #6
    422c:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    4230:	00020500 	andeq	r0, r2, r0, lsl #10
    4234:	03000000 	movweq	r0, #0
    4238:	050131a3 	streq	r3, [r1, #-419]	; 0xfffffe5d
    423c:	05141309 	ldreq	r1, [r4, #-777]	; 0xfffffcf7
    4240:	05100620 	ldreq	r0, [r0, #-1568]	; 0xfffff9e0
    4244:	0d05220e 	sfmeq	f2, 4, [r5, #-56]	; 0xffffffc8
    4248:	1a052206 	bne	14ca68 <__RAM_SIZE+0x4ca68>
    424c:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    4250:	14052106 	strne	r2, [r5], #-262	; 0xfffffefa
    4254:	0e050106 	adfeqs	f0, f5, f6
    4258:	10051d06 	andne	r1, r5, r6, lsl #26
    425c:	0e050106 	adfeqs	f0, f5, f6
    4260:	06090520 	streq	r0, [r9], -r0, lsr #10
    4264:	05051434 	streq	r1, [r5, #-1076]	; 0xfffffbcc
    4268:	02201306 	eoreq	r1, r0, #402653184	; 0x18000000
    426c:	01010001 	tsteq	r1, r1
    4270:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    4274:	0022bc02 	eoreq	fp, r2, r2, lsl #24
    4278:	32b80310 	adcscc	r0, r8, #16, 6	; 0x40000000
    427c:	13050501 	movwne	r0, #21761	; 0x5501
    4280:	01060905 	tsteq	r6, r5, lsl #18
    4284:	053c0705 	ldreq	r0, [ip, #-1797]!	; 0xfffff8fb
    4288:	05260609 	streq	r0, [r6, #-1545]!	; 0xfffff9f7
    428c:	0501061e 	streq	r0, [r1, #-1566]	; 0xfffff9e2
    4290:	05600609 	strbeq	r0, [r0, #-1545]!	; 0xfffff9f7
    4294:	05010620 	streq	r0, [r1, #-1568]	; 0xfffff9e0
    4298:	01054a1e 	tsteq	r5, lr, lsl sl
    429c:	00050230 	andeq	r0, r5, r0, lsr r2
    42a0:	01050101 	tsteq	r5, r1, lsl #2
    42a4:	e4020500 	str	r0, [r2], #-1280	; 0xfffffb00
    42a8:	03100022 	tsteq	r0, #34	; 0x22
    42ac:	06010e88 	streq	r0, [r1], -r8, lsl #29
    42b0:	06050501 	streq	r0, [r5], -r1, lsl #10
    42b4:	0905139f 	stmdbeq	r5, {r0, r1, r2, r3, r4, r7, r8, r9, ip}
    42b8:	05011503 	streq	r1, [r1, #-1283]	; 0xfffffafd
    42bc:	20010612 	andcs	r0, r1, r2, lsl r6
    42c0:	09052020 	stmdbeq	r5, {r5, sp}
    42c4:	2e0a0306 	cdpcs	3, 0, cr0, cr10, cr6, {0}
    42c8:	01062305 	tsteq	r6, r5, lsl #6
    42cc:	05202c05 	streq	r2, [r0, #-3077]!	; 0xfffff3fb
    42d0:	09053c16 	stmdbeq	r5, {r1, r2, r4, sl, fp, ip, sp}
    42d4:	57052f06 	strpl	r2, [r5, -r6, lsl #30]
    42d8:	81050106 	tsthi	r5, r6, lsl #2
    42dc:	05310601 	ldreq	r0, [r1, #-1537]!	; 0xfffff9ff
    42e0:	01190305 	tsteq	r9, r5, lsl #6
    42e4:	01060705 	tsteq	r6, r5, lsl #14
    42e8:	05221005 	streq	r1, [r2, #-5]!
    42ec:	04020025 	streq	r0, [r2], #-37	; 0xffffffdb
    42f0:	052e0601 	streq	r0, [lr, #-1537]!	; 0xfffff9ff
    42f4:	04020009 	streq	r0, [r2], #-9
    42f8:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    42fc:	053e060d 	ldreq	r0, [lr, #-1549]!	; 0xfffff9f3
    4300:	0501062f 	streq	r0, [r1, #-1583]	; 0xfffff9d1
    4304:	0d052e27 	stceq	14, cr2, [r5, #-156]	; 0xffffff64
    4308:	17054f06 	strne	r4, [r5, -r6, lsl #30]
    430c:	0f050106 	svceq	0x00050106
    4310:	0029052e 	eoreq	r0, r9, lr, lsr #10
    4314:	06020402 	streq	r0, [r2], -r2, lsl #8
    4318:	00520526 	subseq	r0, r2, r6, lsr #10
    431c:	03020402 	movweq	r0, #9218	; 0x2402
    4320:	53050173 	movwpl	r0, #20851	; 0x5173
    4324:	02040200 	andeq	r0, r4, #0, 4
    4328:	02000106 	andeq	r0, r0, #-2147483647	; 0x80000001
    432c:	052e0204 	streq	r0, [lr, #-516]!	; 0xfffffdfc
    4330:	13030609 	movwne	r0, #13833	; 0x3609
    4334:	063e0520 	ldrteq	r0, [lr], -r0, lsr #10
    4338:	06210501 	strteq	r0, [r1], -r1, lsl #10
    433c:	16360540 	ldrtne	r0, [r6], -r0, asr #10
    4340:	05140505 	ldreq	r0, [r4, #-1285]	; 0xfffffafb
    4344:	05010607 	streq	r0, [r1, #-1543]	; 0xfffff9f9
    4348:	21053014 	tstcs	r5, r4, lsl r0
    434c:	05052406 	streq	r2, [r5, #-1030]	; 0xfffffbfa
    4350:	061a0515 			; <UNDEFINED> instruction: 0x061a0515
    4354:	06090501 	streq	r0, [r9], -r1, lsl #10
    4358:	06220523 	strteq	r0, [r2], -r3, lsr #10
    435c:	06050501 	streq	r0, [r5], -r1, lsl #10
    4360:	234e3d24 	movtcs	r3, #60708	; 0xed24
    4364:	21062e06 	tstcs	r6, r6, lsl #28
    4368:	09030905 	stmdbeq	r3, {r0, r2, r8, fp}
    436c:	03110520 	tsteq	r1, #32, 10	; 0x8000000
    4370:	2a05012f 	bcs	144834 <__RAM_SIZE+0x44834>
    4374:	28050106 	stmdacs	r5, {r1, r2, r8}
    4378:	06050566 	streq	r0, [r5], -r6, ror #10
    437c:	05201d03 	streq	r1, [r0, #-3331]!	; 0xfffff2fd
    4380:	05010607 	streq	r0, [r1, #-1543]	; 0xfffff9f9
    4384:	05400609 	strbeq	r0, [r0, #-1545]	; 0xfffff9f7
    4388:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    438c:	05320621 	ldreq	r0, [r2, #-1569]!	; 0xfffff9df
    4390:	2e140601 	cfmsub32cs	mvax0, mvfx0, mvfx4, mvfx1
    4394:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    4398:	02050005 	andeq	r0, r5, #5
    439c:	1000237a 	andne	r2, r0, sl, ror r3
    43a0:	0109ed03 	tsteq	r9, r3, lsl #26
    43a4:	09050106 	stmdbeq	r5, {r1, r2, r8}
    43a8:	2f055906 	svccs	0x00055906
    43ac:	132d0514 			; <UNDEFINED> instruction: 0x132d0514
    43b0:	0d030905 	vstreq.16	s0, [r3, #-10]	; <UNPREDICTABLE>
    43b4:	060b0501 	streq	r0, [fp], -r1, lsl #10
    43b8:	00260501 	eoreq	r0, r6, r1, lsl #10
    43bc:	58010402 	stmdapl	r1, {r1, sl}
    43c0:	27060d05 	strcs	r0, [r6, -r5, lsl #26]
    43c4:	06160513 			; <UNDEFINED> instruction: 0x06160513
    43c8:	20202001 	eorcs	r2, r0, r1
    43cc:	2f060d05 	svccs	0x00060d05
    43d0:	01061f05 	tsteq	r6, r5, lsl #30
    43d4:	26061105 	strcs	r1, [r6], -r5, lsl #2
    43d8:	01063105 	tsteq	r6, r5, lsl #2
    43dc:	40060d05 	andmi	r0, r6, r5, lsl #26
    43e0:	03061605 	movweq	r1, #26117	; 0x6605
    43e4:	0505c874 	streq	ip, [r5, #-2164]	; 0xfffff78c
    43e8:	05201403 	streq	r1, [r0, #-1027]!	; 0xfffffbfd
    43ec:	20203816 	eorcs	r3, r0, r6, lsl r8
    43f0:	23060905 	movwcs	r0, #26885	; 0x6905
    43f4:	01061005 	tsteq	r6, r5
    43f8:	01000102 	tsteq	r0, r2, lsl #2
    43fc:	00010501 	andeq	r0, r1, r1, lsl #10
    4400:	23cc0205 	biccs	r0, ip, #1342177280	; 0x50000000
    4404:	fb031000 	blx	c840e <__HEAP_SIZE+0xc740e>
    4408:	0505012e 	streq	r0, [r5, #-302]	; 0xfffffed2
    440c:	15051421 	strne	r1, [r5, #-1057]	; 0xfffffbdf
    4410:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    4414:	00090520 	andeq	r0, r9, r0, lsr #10
    4418:	06030402 	streq	r0, [r3], -r2, lsl #8
    441c:	005e0522 	subseq	r0, lr, r2, lsr #10
    4420:	72030402 	andvc	r0, r3, #33554432	; 0x2000000
    4424:	02006805 	andeq	r6, r0, #327680	; 0x50000
    4428:	01060304 	tsteq	r6, r4, lsl #6
    442c:	02002b05 	andeq	r2, r0, #5120	; 0x1400
    4430:	20060104 	andcs	r0, r6, r4, lsl #2
    4434:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    4438:	01060104 	tsteq	r6, r4, lsl #2
    443c:	064b3306 	strbeq	r3, [fp], -r6, lsl #6
    4440:	053d0620 	ldreq	r0, [sp, #-1568]!	; 0xfffff9e0
    4444:	05424009 	strbeq	r4, [r2, #-9]
    4448:	17054205 	strne	r4, [r5, -r5, lsl #4]
    444c:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    4450:	1f052f06 	svcne	0x00052f06
    4454:	01050106 	tsteq	r5, r6, lsl #2
    4458:	0012022f 	andseq	r0, r2, pc, lsr #4
    445c:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    4460:	34020500 	strcc	r0, [r2], #-1280	; 0xfffffb00
    4464:	03100024 	tsteq	r0, #36	; 0x24
    4468:	06010fe3 	streq	r0, [r1], -r3, ror #31
    446c:	06090501 	streq	r0, [r9], -r1, lsl #10
    4470:	300d0531 	andcc	r0, sp, r1, lsr r5
    4474:	01062605 	tsteq	r6, r5, lsl #12
    4478:	053c2405 	ldreq	r2, [ip, #-1029]!	; 0xfffffbfb
    447c:	0522060d 	streq	r0, [r2, #-1549]!	; 0xfffff9f3
    4480:	0501061e 	streq	r0, [r1, #-1566]	; 0xfffff9e2
    4484:	11052e0f 	tstne	r5, pc, lsl #28
    4488:	20170306 	andscs	r0, r7, r6, lsl #6
    448c:	01062705 	tsteq	r6, r5, lsl #14
    4490:	052e1305 	streq	r1, [lr, #-773]!	; 0xfffffcfb
    4494:	05220615 	streq	r0, [r2, #-1557]!	; 0xfffff9eb
    4498:	05010625 	streq	r0, [r1, #-1573]	; 0xfffff9db
    449c:	17053c3d 	smladxne	r5, sp, ip, r3
    44a0:	06190520 	ldreq	r0, [r9], -r0, lsr #10
    44a4:	06260530 			; <UNDEFINED> instruction: 0x06260530
    44a8:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    44ac:	053c6903 	ldreq	r6, [ip, #-2307]!	; 0xfffff6fd
    44b0:	0501061e 	streq	r0, [r1, #-1566]	; 0xfffff9e2
    44b4:	05300611 	ldreq	r0, [r0, #-1553]!	; 0xfffff9ef
    44b8:	0501062c 	streq	r0, [r1, #-1580]	; 0xfffff9d4
    44bc:	2d052013 	stccs	0, cr2, [r5, #-76]	; 0xffffffb4
    44c0:	2e1e0306 	cdpcs	3, 1, cr0, cr14, cr6, {0}
    44c4:	05160d05 	ldreq	r0, [r6, #-3333]	; 0xfffff2fb
    44c8:	05010619 	streq	r0, [r1, #-1561]	; 0xfffff9e7
    44cc:	05520629 	ldrbeq	r0, [r2, #-1577]	; 0xfffff9d7
    44d0:	0101140d 	tsteq	r1, sp, lsl #8
    44d4:	04020001 	streq	r0, [r2], #-1
    44d8:	02005801 	andeq	r5, r0, #65536	; 0x10000
    44dc:	002e0304 	eoreq	r0, lr, r4, lsl #6
    44e0:	01030402 	tsteq	r3, r2, lsl #8
    44e4:	03040200 	movweq	r0, #16896	; 0x4200
    44e8:	04020001 	streq	r0, [r2], #-1
    44ec:	02006603 	andeq	r6, r0, #3145728	; 0x300000
    44f0:	00010304 	andeq	r0, r1, r4, lsl #6
    44f4:	01030402 	tsteq	r3, r2, lsl #8
    44f8:	03040200 	movweq	r0, #16896	; 0x4200
    44fc:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    4500:	02002e03 	andeq	r2, r0, #3, 28	; 0x30
    4504:	002e0304 	eoreq	r0, lr, r4, lsl #6
    4508:	20030402 	andcs	r0, r3, r2, lsl #8
    450c:	03040200 	movweq	r0, #16896	; 0x4200
    4510:	02002006 	andeq	r2, r0, #6
    4514:	58060304 	stmdapl	r6, {r2, r8, r9}
    4518:	03040200 	movweq	r0, #16896	; 0x4200
    451c:	04020074 	streq	r0, [r2], #-116	; 0xffffff8c
    4520:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    4524:	00010304 	andeq	r0, r1, r4, lsl #6
    4528:	14030402 	strne	r0, [r3], #-1026	; 0xfffffbfe
    452c:	02000905 	andeq	r0, r0, #81920	; 0x14000
    4530:	00140304 	andseq	r0, r4, r4, lsl #6
    4534:	30030402 	andcc	r0, r3, r2, lsl #8
    4538:	02001f05 	andeq	r1, r0, #5, 30
    453c:	01060304 	tsteq	r6, r4, lsl #6
    4540:	02000b05 	andeq	r0, r0, #5120	; 0x1400
    4544:	052e0304 	streq	r0, [lr, #-772]!	; 0xfffffcfc
    4548:	0124060d 			; <UNDEFINED> instruction: 0x0124060d
    454c:	6c060505 	cfstr32vs	mvfx0, [r6], {5}
    4550:	03061505 	movweq	r1, #25861	; 0x6505
    4554:	0d052049 	stceq	0, cr2, [r5, #-292]	; 0xfffffedc
    4558:	01040200 	mrseq	r0, R12_usr
    455c:	053c3103 	ldreq	r3, [ip, #-259]!	; 0xfffffefd
    4560:	04020025 	streq	r0, [r2], #-37	; 0xffffffdb
    4564:	05053201 	streq	r3, [r5, #-513]	; 0xfffffdff
    4568:	01040200 	mrseq	r0, R12_usr
    456c:	0d021406 	cfstrseq	mvf1, [r2, #-24]	; 0xffffffe8
    4570:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    4574:	02050005 	andeq	r0, r5, #5
    4578:	100024f0 	strdne	r2, [r0], -r0
    457c:	010cd903 	tsteq	ip, r3, lsl #18
    4580:	09050106 	stmdbeq	r5, {r1, r2, r8}
    4584:	0d057506 	cfstr32eq	mvfx7, [r5, #-24]	; 0xffffffe8
    4588:	18012503 	stmdane	r1, {r0, r1, r8, sl, sp}
    458c:	01061705 	tsteq	r6, r5, lsl #14
    4590:	060d0520 	streq	r0, [sp], -r0, lsr #10
    4594:	060f0530 			; <UNDEFINED> instruction: 0x060f0530
    4598:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    459c:	06280534 			; <UNDEFINED> instruction: 0x06280534
    45a0:	11052001 	tstne	r5, r1
    45a4:	13053006 	movwne	r3, #20486	; 0x5006
    45a8:	15050106 	strne	r0, [r5, #-262]	; 0xfffffefa
    45ac:	1e053006 	cdpne	0, 0, cr3, cr5, cr6, {0}
    45b0:	15050106 	strne	r0, [r5, #-262]	; 0xfffffefa
    45b4:	27054d06 	strcs	r4, [r5, -r6, lsl #26]
    45b8:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
    45bc:	10030609 	andne	r0, r3, r9, lsl #12
    45c0:	060b0501 	streq	r0, [fp], -r1, lsl #10
    45c4:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    45c8:	06310526 	ldrteq	r0, [r1], -r6, lsr #10
    45cc:	060d0501 	streq	r0, [sp], -r1, lsl #10
    45d0:	06050540 	streq	r0, [r5], -r0, asr #10
    45d4:	061505be 			; <UNDEFINED> instruction: 0x061505be
    45d8:	064a6803 	strbeq	r6, [sl], -r3, lsl #16
    45dc:	411a0520 	tstmi	sl, r0, lsr #10
    45e0:	03060905 	movweq	r0, #26885	; 0x6905
    45e4:	10052012 	andne	r2, r5, r2, lsl r0
    45e8:	01020106 	tsteq	r2, r6, lsl #2
    45ec:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    45f0:	02050005 	andeq	r0, r5, #5
    45f4:	10002552 	andne	r2, r0, r2, asr r5
    45f8:	01328303 	teqeq	r2, r3, lsl #6
    45fc:	09050106 	stmdbeq	r5, {r1, r2, r8}
    4600:	0d053206 	sfmeq	f3, 4, [r5, #-24]	; 0xffffffe8
    4604:	05011503 	streq	r1, [r1, #-1283]	; 0xfffffafd
    4608:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    460c:	12052e0f 	andne	r2, r5, #15, 28	; 0xf0
    4610:	14052706 	strne	r2, [r5], #-1798	; 0xfffff8fa
    4614:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    4618:	052e0f03 	streq	r0, [lr, #-3843]!	; 0xfffff0fd
    461c:	6e030611 	mcrvs	6, 0, r0, cr3, cr1, {0}
    4620:	06200620 	strteq	r0, [r0], -r0, lsr #12
    4624:	6605502f 	strvs	r5, [r5], -pc, lsr #32
    4628:	13290534 			; <UNDEFINED> instruction: 0x13290534
    462c:	16060505 	strne	r0, [r6], -r5, lsl #10
    4630:	01000102 	tsteq	r0, r2, lsl #2
    4634:	00010501 	andeq	r0, r1, r1, lsl #10
    4638:	25780205 	ldrbcs	r0, [r8, #-517]!	; 0xfffffdfb
    463c:	9b031000 	blls	c8644 <__HEAP_SIZE+0xc7644>
    4640:	0905012f 	stmdbeq	r5, {r0, r1, r2, r3, r5, r8}
    4644:	0e051617 	mcreq	6, 0, r1, cr5, cr7, {0}
    4648:	062d0501 	strteq	r0, [sp], -r1, lsl #10
    464c:	2e0e0501 	cfsh32cs	mvfx0, mvfx14, #1
    4650:	77030105 	strvc	r0, [r3, -r5, lsl #2]
    4654:	06110520 	ldreq	r0, [r1], -r0, lsr #10
    4658:	05200d03 	streq	r0, [r0, #-3331]!	; 0xfffff2fd
    465c:	21053419 	tstcs	r5, r9, lsl r4
    4660:	1f050106 	svcne	0x00050106
    4664:	0619052e 	ldreq	r0, [r9], -lr, lsr #10
    4668:	06220521 	strteq	r0, [r2], -r1, lsr #10
    466c:	06190501 	ldreq	r0, [r9], -r1, lsl #10
    4670:	11054b3d 	tstne	r5, sp, lsr fp
    4674:	0e05304d 	cdpeq	0, 0, cr3, cr5, cr13, {2}
    4678:	053c6e03 	ldreq	r6, [ip, #-3587]!	; 0xfffff1fd
    467c:	0501062d 	streq	r0, [r1, #-1581]	; 0xfffff9d3
    4680:	01052e0e 	tsteq	r5, lr, lsl #28
    4684:	202e3f03 	eorcs	r3, lr, r3, lsl #30
    4688:	01000802 	tsteq	r0, r2, lsl #16
    468c:	00010501 	andeq	r0, r1, r1, lsl #10
    4690:	25c40205 	strbcs	r0, [r4, #517]	; 0x205
    4694:	e0031000 	and	r1, r3, r0
    4698:	060100c1 	streq	r0, [r1], -r1, asr #1
    469c:	06050501 	streq	r0, [r5], -r1, lsl #10
    46a0:	1605134b 	strne	r1, [r5], -fp, asr #6
    46a4:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    46a8:	14052f06 	strne	r2, [r5], #-3846	; 0xfffff0fa
    46ac:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    46b0:	14052f06 	strne	r2, [r5], #-3846	; 0xfffff0fa
    46b4:	09050106 	stmdbeq	r5, {r1, r2, r8}
    46b8:	15054306 	strne	r4, [r5, #-774]	; 0xfffffcfa
    46bc:	26050106 	strcs	r0, [r5], -r6, lsl #2
    46c0:	0505202e 	streq	r2, [r5, #-46]	; 0xffffffd2
    46c4:	26053406 	strcs	r3, [r5], -r6, lsl #8
    46c8:	09050106 	stmdbeq	r5, {r1, r2, r8}
    46cc:	06210520 	strteq	r0, [r1], -r0, lsr #10
    46d0:	17090544 	strne	r0, [r9, -r4, asr #10]
    46d4:	01060b05 	tsteq	r6, r5, lsl #22
    46d8:	03060d05 	movweq	r0, #27909	; 0x6d05
    46dc:	19053c0c 	stmdbne	r5, {r2, r3, sl, fp, ip, sp}
    46e0:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    46e4:	053e2306 	ldreq	r2, [lr, #-774]!	; 0xfffffcfa
    46e8:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    46ec:	0532063b 	ldreq	r0, [r2, #-1595]!	; 0xfffff9c5
    46f0:	44051311 	strmi	r1, [r5], #-785	; 0xfffffcef
    46f4:	11050106 	tstne	r5, r6, lsl #2
    46f8:	0301052e 	movweq	r0, #5422	; 0x152e
    46fc:	2f054a3e 	svccs	0x00054a3e
    4700:	01040200 	mrseq	r0, R12_usr
    4704:	2e7fac03 	cdpcs	12, 7, cr10, cr15, cr3, {0}
    4708:	33060d05 	movwcc	r0, #27909	; 0x6d05
    470c:	01012e01 	tsteq	r1, r1, lsl #28
    4710:	062e063c 			; <UNDEFINED> instruction: 0x062e063c
    4714:	2e3c3c20 	cdpcs	12, 3, cr3, cr12, cr0, {1}
    4718:	0332053c 	teqeq	r2, #60, 10	; 0xf000000
    471c:	11052017 	tstne	r5, r7, lsl r0
    4720:	063c0513 			; <UNDEFINED> instruction: 0x063c0513
    4724:	2e110501 	cfmul32cs	mvfx0, mvfx1, mvfx1
    4728:	21054f06 	tstcs	r5, r6, lsl #30
    472c:	13050106 	movwne	r0, #20742	; 0x5106
    4730:	0615052e 	ldreq	r0, [r5], -lr, lsr #10
    4734:	062a0530 			; <UNDEFINED> instruction: 0x062a0530
    4738:	062d0501 	strteq	r0, [sp], -r1, lsl #10
    473c:	06010532 			; <UNDEFINED> instruction: 0x06010532
    4740:	02012c03 	andeq	r2, r1, #768	; 0x300
    4744:	0101000d 	tsteq	r1, sp
    4748:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    474c:	00266c02 	eoreq	r6, r6, r2, lsl #24
    4750:	0aa30310 	beq	fe8c5398 <__StackTop+0xc67c5398>
    4754:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    4758:	052f0609 	streq	r0, [pc, #-1545]!	; 4157 <__HEAP_SIZE+0x3157>
    475c:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    4760:	052f0609 	streq	r0, [pc, #-1545]!	; 415f <__HEAP_SIZE+0x315f>
    4764:	05140181 	ldreq	r0, [r4, #-385]	; 0xfffffe7f
    4768:	14051409 	strne	r1, [r5], #-1033	; 0xfffffbf7
    476c:	09050106 	stmdbeq	r5, {r1, r2, r8}
    4770:	0b05a006 	bleq	16c790 <__RAM_SIZE+0x6c790>
    4774:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    4778:	20090306 	andcs	r0, r9, r6, lsl #6
    477c:	05322505 	ldreq	r2, [r2, #-1285]!	; 0xfffffafb
    4780:	09051531 	stmdbeq	r5, {r0, r4, r5, r8, sl, ip}
    4784:	06050514 			; <UNDEFINED> instruction: 0x06050514
    4788:	01003c13 	tsteq	r0, r3, lsl ip
    478c:	00050501 	andeq	r0, r5, r1, lsl #10
    4790:	26940205 	ldrcs	r0, [r4], r5, lsl #4
    4794:	bb031000 	bllt	c879c <__HEAP_SIZE+0xc779c>
    4798:	0106010d 	tsteq	r6, sp, lsl #2
    479c:	2f060905 	svccs	0x00060905
    47a0:	146c0513 	strbtne	r0, [ip], #-1299	; 0xfffffaed
    47a4:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    47a8:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
    47ac:	05680609 	strbeq	r0, [r8, #-1545]!	; 0xfffff9f7
    47b0:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
    47b4:	0903060d 	stmdbeq	r3, {r0, r2, r3, r9, sl}
    47b8:	15052f20 	strne	r2, [r5, #-3872]	; 0xfffff0e0
    47bc:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    47c0:	05200a03 	streq	r0, [r0, #-2563]!	; 0xfffff5fd
    47c4:	2e7a0315 	mrccs	3, 3, r0, cr10, cr5, {0}
    47c8:	31062b05 	tstcc	r6, r5, lsl #22
    47cc:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    47d0:	02010610 	andeq	r0, r1, #16, 12	; 0x1000000
    47d4:	01010001 	tsteq	r1, r1
    47d8:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    47dc:	00000002 	andeq	r0, r0, r2
    47e0:	118f0300 	orrne	r0, pc, r0, lsl #6
    47e4:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    47e8:	132f0609 			; <UNDEFINED> instruction: 0x132f0609
    47ec:	14300513 	ldrtne	r0, [r0], #-1299	; 0xfffffaed
    47f0:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    47f4:	1505320d 	strne	r3, [r5, #-525]	; 0xfffffdf3
    47f8:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    47fc:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    4800:	11052306 	tstne	r5, r6, lsl #6
    4804:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    4808:	29050106 	stmdbcs	r5, {r1, r2, r8}
    480c:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    4810:	0d055006 	stceq	0, cr5, [r5, #-24]	; 0xffffffe8
    4814:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    4818:	00110516 	andseq	r0, r1, r6, lsl r5
    481c:	06040402 	streq	r0, [r4], -r2, lsl #8
    4820:	000f0501 	andeq	r0, pc, r1, lsl #10
    4824:	20040402 	andcs	r0, r4, r2, lsl #8
    4828:	22061105 	andcs	r1, r6, #1073741825	; 0x40000001
    482c:	01061a05 	tsteq	r6, r5, lsl #20
    4830:	4e062905 	vmlami.f16	s4, s12, s10	; <UNPREDICTABLE>
    4834:	05190d05 	ldreq	r0, [r9, #-3333]	; 0xfffff2fb
    4838:	05010619 	streq	r0, [r1, #-1561]	; 0xfffff9e7
    483c:	054f060d 	strbeq	r0, [pc, #-1549]	; 4237 <__HEAP_SIZE+0x3237>
    4840:	05010628 	streq	r0, [r1, #-1576]	; 0xfffff9d8
    4844:	0402000d 	streq	r0, [r2], #-13
    4848:	055d0604 	ldrbeq	r0, [sp, #-1540]	; 0xfffff9fc
    484c:	04020025 	streq	r0, [r2], #-37	; 0xffffffdb
    4850:	05010604 	streq	r0, [r1, #-1540]	; 0xfffff9fc
    4854:	0402000f 	streq	r0, [r2], #-15
    4858:	32052e04 	andcc	r2, r5, #4, 28	; 0x40
    485c:	01040200 	mrseq	r0, R12_usr
    4860:	06110520 	ldreq	r0, [r1], -r0, lsr #10
    4864:	06203b03 	strteq	r3, [r0], -r3, lsl #22
    4868:	062a0520 	strteq	r0, [sl], -r0, lsr #10
    486c:	1611053d 			; <UNDEFINED> instruction: 0x1611053d
    4870:	33310905 	teqcc	r1, #81920	; 0x14000
    4874:	43140d05 	tstmi	r4, #320	; 0x140
    4878:	01062305 	tsteq	r6, r5, lsl #6
    487c:	052e0f05 	streq	r0, [lr, #-3845]!	; 0xfffff0fb
    4880:	05220611 	streq	r0, [r2, #-1553]!	; 0xfffff9ef
    4884:	0501061b 	streq	r0, [r1, #-1563]	; 0xfffff9e5
    4888:	05052e13 	streq	r2, [r5, #-3603]	; 0xfffff1ed
    488c:	052e0e03 	streq	r0, [lr, #-3587]!	; 0xfffff1fd
    4890:	04020015 	streq	r0, [r2], #-21	; 0xffffffeb
    4894:	7efb0301 	cdpvc	3, 15, cr0, cr11, cr1, {0}
    4898:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    489c:	28052e01 	stmdacs	r5, {r0, r9, sl, fp, sp}
    48a0:	05201f03 	streq	r1, [r0, #-3843]!	; 0xfffff0fd
    48a4:	0d030611 	stceq	6, cr0, [r3, #-68]	; 0xffffffbc
    48a8:	2a054f2e 	bcs	158568 <__RAM_SIZE+0x58568>
    48ac:	1511054e 	ldrne	r0, [r1, #-1358]	; 0xfffffab2
    48b0:	051a5005 	ldreq	r5, [sl, #-5]
    48b4:	01270309 			; <UNDEFINED> instruction: 0x01270309
    48b8:	033e0533 	teqeq	lr, #213909504	; 0xcc00000
    48bc:	1505200d 	strne	r2, [r5, #-13]
    48c0:	322d0513 	eorcc	r0, sp, #79691776	; 0x4c00000
    48c4:	05182205 	ldreq	r2, [r8, #-517]	; 0xfffffdfb
    48c8:	02130605 	andseq	r0, r3, #5242880	; 0x500000
    48cc:	0101000d 	tsteq	r1, sp
    48d0:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    48d4:	00000002 	andeq	r0, r0, r2
    48d8:	13b50300 			; <UNDEFINED> instruction: 0x13b50300
    48dc:	13090501 	movwne	r0, #38145	; 0x9501
    48e0:	13131313 	tstne	r3, #1275068416	; 0x4c000000
    48e4:	142a0513 	strtne	r0, [sl], #-1299	; 0xfffffaed
    48e8:	05141e05 	ldreq	r1, [r4, #-3589]	; 0xfffff1fb
    48ec:	1705150d 	strne	r1, [r5, -sp, lsl #10]
    48f0:	0f050106 	svceq	0x00050106
    48f4:	0305052e 	movweq	r0, #21806	; 0x552e
    48f8:	0d052e73 	stceq	14, cr2, [r5, #-460]	; 0xfffffe34
    48fc:	3c150306 	ldccc	3, cr0, [r5], {6}
    4900:	05301105 	ldreq	r1, [r0, #-261]!	; 0xfffffefb
    4904:	0501061d 	streq	r0, [r1, #-1565]	; 0xfffff9e3
    4908:	05210611 	streq	r0, [r1, #-1553]!	; 0xfffff9ef
    490c:	0501061d 	streq	r0, [r1, #-1565]	; 0xfffff9e3
    4910:	05210611 	streq	r0, [r1, #-1553]!	; 0xfffff9ef
    4914:	0501061f 	streq	r0, [r1, #-1567]	; 0xfffff9e1
    4918:	052f0611 	streq	r0, [pc, #-1553]!	; 430f <__HEAP_SIZE+0x330f>
    491c:	05010629 	streq	r0, [r1, #-1577]	; 0xfffff9d7
    4920:	303e060d 	eorscc	r0, lr, sp, lsl #12
    4924:	01060f05 	tsteq	r6, r5, lsl #30
    4928:	43061205 	movwmi	r1, #25093	; 0x6205
    492c:	01061405 	tsteq	r6, r5, lsl #8
    4930:	02003705 	andeq	r3, r0, #1310720	; 0x140000
    4934:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
    4938:	05360616 	ldreq	r0, [r6, #-1558]!	; 0xfffff9ea
    493c:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    4940:	29030616 	stmdbcs	r3, {r1, r2, r4, r9, sl}
    4944:	0618053c 			; <UNDEFINED> instruction: 0x0618053c
    4948:	00470501 	subeq	r0, r7, r1, lsl #10
    494c:	3c010402 	cfstrscc	mvf0, [r1], {2}
    4950:	0f031d05 	svceq	0x00031d05
    4954:	06150520 	ldreq	r0, [r5], -r0, lsr #10
    4958:	052e4d03 	streq	r4, [lr, #-3331]!	; 0xfffff2fd
    495c:	05010619 	streq	r0, [r1, #-1561]	; 0xfffff9e7
    4960:	21052017 	tstcs	r5, r7, lsl r0
    4964:	06201e03 	strteq	r1, [r0], -r3, lsl #28
    4968:	052e7103 	streq	r7, [lr, #-259]!	; 0xfffffefd
    496c:	05010639 	streq	r0, [r1, #-1593]	; 0xfffff9c7
    4970:	72054a23 	andvc	r4, r5, #143360	; 0x23000
    4974:	02040200 	andeq	r0, r4, #0, 4
    4978:	73052c06 	movwvc	r2, #23558	; 0x5c06
    497c:	02040200 	andeq	r0, r4, #0, 4
    4980:	02000106 	andeq	r0, r0, #-2147483647	; 0x80000001
    4984:	05200204 	streq	r0, [r0, #-516]!	; 0xfffffdfc
    4988:	38052024 	stmdacc	r5, {r2, r5, sp}
    498c:	01040200 	mrseq	r0, R12_usr
    4990:	1d052006 	stcne	0, cr2, [r5, #-24]	; 0xffffffe8
    4994:	01040200 	mrseq	r0, R12_usr
    4998:	25050106 	strcs	r0, [r5, #-262]	; 0xfffffefa
    499c:	1d052e2c 	stcne	14, cr2, [r5, #-176]	; 0xffffff50
    49a0:	05011e03 	streq	r1, [r1, #-3587]	; 0xfffff1fd
    49a4:	7fb50319 	svcvc	0x00b50319
    49a8:	062d052e 	strteq	r0, [sp], -lr, lsr #10
    49ac:	2000e903 	andcs	lr, r0, r3, lsl #18
    49b0:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    49b4:	05130605 	ldreq	r0, [r3, #-1541]	; 0xfffff9fb
    49b8:	7fa70319 	svcvc	0x00a70319
    49bc:	062d0520 	strteq	r0, [sp], -r0, lsr #10
    49c0:	2000d603 	andcs	sp, r0, r3, lsl #12
    49c4:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    49c8:	05130605 	ldreq	r0, [r3, #-1541]	; 0xfffff9fb
    49cc:	7fad0319 	svcvc	0x00ad0319
    49d0:	032d052e 			; <UNDEFINED> instruction: 0x032d052e
    49d4:	052e4a1a 	streq	r4, [lr, #-2586]!	; 0xfffff5e6
    49d8:	0118031d 	tsteq	r8, sp, lsl r3
    49dc:	01000e02 	tsteq	r0, r2, lsl #28
    49e0:	00050501 	andeq	r0, r5, r1, lsl #10
    49e4:	00000205 	andeq	r0, r0, r5, lsl #4
    49e8:	b9030000 	stmdblt	r3, {}	; <UNPREDICTABLE>
    49ec:	01060114 	tsteq	r6, r4, lsl r1
    49f0:	2f060905 	svccs	0x00060905
    49f4:	142e0513 	strtne	r0, [lr], #-1299	; 0xfffffaed
    49f8:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    49fc:	1505320d 	strne	r3, [r5, #-525]	; 0xfffffdf3
    4a00:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    4a04:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    4a08:	16052106 	strne	r2, [r5], -r6, lsl #2
    4a0c:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    4a10:	09050106 	stmdbeq	r5, {r1, r2, r8}
    4a14:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    4a18:	32052206 	andcc	r2, r5, #1610612736	; 0x60000000
    4a1c:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    4a20:	00090530 	andeq	r0, r9, r0, lsr r5
    4a24:	14040402 	strne	r0, [r4], #-1026	; 0xfffffbfe
    4a28:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    4a2c:	13060404 	movwne	r0, #25604	; 0x6404
    4a30:	02001505 	andeq	r1, r0, #20971520	; 0x1400000
    4a34:	78030104 	stmdavc	r3, {r2, r8}
    4a38:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    4a3c:	04022e01 	streq	r2, [r2], #-3585	; 0xfffff1ff
    4a40:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    4a44:	02050005 	andeq	r0, r5, #5
    4a48:	00000000 	andeq	r0, r0, r0
    4a4c:	0114d303 	tsteq	r4, r3, lsl #6
    4a50:	09050106 	stmdbeq	r5, {r1, r2, r8}
    4a54:	13132f06 	tstne	r3, #6, 30
    4a58:	05143505 	ldreq	r3, [r4, #-1285]	; 0xfffffafb
    4a5c:	01120333 	tsteq	r2, r3, lsr r3
    4a60:	05170905 	ldreq	r0, [r7, #-2309]	; 0xfffff6fb
    4a64:	05010632 	streq	r0, [r1, #-1586]	; 0xfffff9ce
    4a68:	0532060d 	ldreq	r0, [r2, #-1549]!	; 0xfffff9f3
    4a6c:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    4a70:	0402000d 	streq	r0, [r2], #-13
    4a74:	05210604 	streq	r0, [r1, #-1540]!	; 0xfffff9fc
    4a78:	04020016 	streq	r0, [r2], #-22	; 0xffffffea
    4a7c:	05010604 	streq	r0, [r1, #-1540]	; 0xfffff9fc
    4a80:	04020009 	streq	r0, [r2], #-9
    4a84:	05220604 	streq	r0, [r2, #-1540]!	; 0xfffff9fc
    4a88:	04020039 	streq	r0, [r2], #-57	; 0xffffffc7
    4a8c:	09053004 	stmdbeq	r5, {r2, ip, sp}
    4a90:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    4a94:	00050514 	andeq	r0, r5, r4, lsl r5
    4a98:	06040402 	streq	r0, [r4], -r2, lsl #8
    4a9c:	00150513 	andseq	r0, r5, r3, lsl r5
    4aa0:	03010402 	movweq	r0, #5122	; 0x1402
    4aa4:	02002e78 	andeq	r2, r0, #120, 28	; 0x780
    4aa8:	022e0104 	eoreq	r0, lr, #4, 2
    4aac:	01010004 	tsteq	r1, r4
    4ab0:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    4ab4:	00000002 	andeq	r0, r0, r2
    4ab8:	15830300 	strne	r0, [r3, #768]	; 0x300
    4abc:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    4ac0:	132f0609 			; <UNDEFINED> instruction: 0x132f0609
    4ac4:	05143205 	ldreq	r3, [r4, #-517]	; 0xfffffdfb
    4ac8:	0d051409 	cfstrseq	mvf1, [r5, #-36]	; 0xffffffdc
    4acc:	06150532 			; <UNDEFINED> instruction: 0x06150532
    4ad0:	000d0501 	andeq	r0, sp, r1, lsl #10
    4ad4:	06040402 	streq	r0, [r4], -r2, lsl #8
    4ad8:	00160521 	andseq	r0, r6, r1, lsr #10
    4adc:	06040402 	streq	r0, [r4], -r2, lsl #8
    4ae0:	00090501 	andeq	r0, r9, r1, lsl #10
    4ae4:	06040402 	streq	r0, [r4], -r2, lsl #8
    4ae8:	00360522 	eorseq	r0, r6, r2, lsr #10
    4aec:	30040402 	andcc	r0, r4, r2, lsl #8
    4af0:	02000905 	andeq	r0, r0, #81920	; 0x14000
    4af4:	05140404 	ldreq	r0, [r4, #-1028]	; 0xfffffbfc
    4af8:	04020005 	streq	r0, [r2], #-5
    4afc:	05130604 	ldreq	r0, [r3, #-1540]	; 0xfffff9fc
    4b00:	04020015 	streq	r0, [r2], #-21	; 0xffffffeb
    4b04:	2e780301 	cdpcs	3, 7, cr0, cr8, cr1, {0}
    4b08:	01040200 	mrseq	r0, R12_usr
    4b0c:	0004022e 	andeq	r0, r4, lr, lsr #4
    4b10:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    4b14:	00020500 	andeq	r0, r2, r0, lsl #10
    4b18:	03000000 	movweq	r0, #0
    4b1c:	0601159d 			; <UNDEFINED> instruction: 0x0601159d
    4b20:	06090501 	streq	r0, [r9], -r1, lsl #10
    4b24:	0513132f 	ldreq	r1, [r3, #-815]	; 0xfffffcd1
    4b28:	33051439 	movwcc	r1, #21561	; 0x5439
    4b2c:	05011203 	streq	r1, [r1, #-515]	; 0xfffffdfd
    4b30:	32051709 	andcc	r1, r5, #2359296	; 0x240000
    4b34:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    4b38:	15053206 	strne	r3, [r5, #-518]	; 0xfffffdfa
    4b3c:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    4b40:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    4b44:	16052106 	strne	r2, [r5], -r6, lsl #2
    4b48:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    4b4c:	09050106 	stmdbeq	r5, {r1, r2, r8}
    4b50:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    4b54:	3d052206 	sfmcc	f2, 4, [r5, #-24]	; 0xffffffe8
    4b58:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    4b5c:	00090530 	andeq	r0, r9, r0, lsr r5
    4b60:	14040402 	strne	r0, [r4], #-1026	; 0xfffffbfe
    4b64:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    4b68:	13060404 	movwne	r0, #25604	; 0x6404
    4b6c:	02001505 	andeq	r1, r0, #20971520	; 0x1400000
    4b70:	78030104 	stmdavc	r3, {r2, r8}
    4b74:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    4b78:	04022e01 	streq	r2, [r2], #-3585	; 0xfffff1ff
    4b7c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    4b80:	02050005 	andeq	r0, r5, #5
    4b84:	00000000 	andeq	r0, r0, r0
    4b88:	0115ce03 	tsteq	r5, r3, lsl #28
    4b8c:	09050106 	stmdbeq	r5, {r1, r2, r8}
    4b90:	13133d06 	tstne	r3, #384	; 0x180
    4b94:	05183c05 	ldreq	r3, [r8, #-3077]	; 0xfffff3fb
    4b98:	0905143d 	stmdbeq	r5, {r0, r2, r3, r4, r5, sl, ip}
    4b9c:	060b0515 			; <UNDEFINED> instruction: 0x060b0515
    4ba0:	301b0501 	andscc	r0, fp, r1, lsl #10
    4ba4:	24062505 	strcs	r2, [r6], #-1285	; 0xfffffafb
    4ba8:	05150905 	ldreq	r0, [r5, #-2309]	; 0xfffff6fb
    4bac:	1505320d 	strne	r3, [r5, #-525]	; 0xfffffdf3
    4bb0:	3b050106 	blcc	144fd0 <__RAM_SIZE+0x44fd0>
    4bb4:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    4bb8:	11052206 	tstne	r5, r6, lsl #4
    4bbc:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    4bc0:	00270516 	eoreq	r0, r7, r6, lsl r5
    4bc4:	06040402 	streq	r0, [r4], -r2, lsl #8
    4bc8:	000d0501 	andeq	r0, sp, r1, lsl #10
    4bcc:	06040402 	streq	r0, [r4], -r2, lsl #8
    4bd0:	000f0528 	andeq	r0, pc, r8, lsr #10
    4bd4:	06040402 	streq	r0, [r4], -r2, lsl #8
    4bd8:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    4bdc:	06130532 			; <UNDEFINED> instruction: 0x06130532
    4be0:	06190501 	ldreq	r0, [r9], -r1, lsl #10
    4be4:	06230524 	strteq	r0, [r3], -r4, lsr #10
    4be8:	2e1b0501 	cfmul32cs	mvfx0, mvfx11, mvfx1
    4bec:	33061d05 	movwcc	r1, #27909	; 0x6d05
    4bf0:	01063d05 	tsteq	r6, r5, lsl #26
    4bf4:	053c1f05 	ldreq	r1, [ip, #-3845]!	; 0xfffff0fb
    4bf8:	2e4d0314 	mcrcs	3, 2, r0, cr13, cr4, {0}
    4bfc:	02001505 	andeq	r1, r0, #20971520	; 0x1400000
    4c00:	18030104 	stmdane	r3, {r2, r8}
    4c04:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    4c08:	16052e01 	strne	r2, [r5], -r1, lsl #28
    4c0c:	20330306 	eorscs	r0, r3, r6, lsl #6
    4c10:	01063705 	tsteq	r6, r5, lsl #14
    4c14:	052e1805 	streq	r1, [lr, #-2053]!	; 0xfffff7fb
    4c18:	7fb50314 	svcvc	0x00b50314
    4c1c:	0611052e 	ldreq	r0, [r1], -lr, lsr #10
    4c20:	2000dc03 	andcs	sp, r0, r3, lsl #24
    4c24:	06270517 			; <UNDEFINED> instruction: 0x06270517
    4c28:	06150501 	ldreq	r0, [r5], -r1, lsl #10
    4c2c:	06170527 	ldreq	r0, [r7], -r7, lsr #10
    4c30:	00480501 	subeq	r0, r8, r1, lsl #10
    4c34:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    4c38:	30061905 	andcc	r1, r6, r5, lsl #18
    4c3c:	01062b05 	tsteq	r6, r5, lsl #22
    4c40:	28061505 	stmdacs	r6, {r0, r2, r8, sl, ip}
    4c44:	01062b05 	tsteq	r6, r5, lsl #22
    4c48:	03061105 	movweq	r1, #24837	; 0x6105
    4c4c:	1705200a 	strne	r2, [r5, -sl]
    4c50:	13050106 	movwne	r0, #20742	; 0x5106
    4c54:	06150520 	ldreq	r0, [r5], -r0, lsr #10
    4c58:	052e0630 	streq	r0, [lr, #-1584]!	; 0xfffff9d0
    4c5c:	0524062d 	streq	r0, [r4, #-1581]!	; 0xfffff9d3
    4c60:	15051911 	strne	r1, [r5, #-2321]	; 0xfffff6ef
    4c64:	053c0106 	ldreq	r0, [ip, #-262]!	; 0xfffffefa
    4c68:	31053c13 	tstcc	r5, r3, lsl ip
    4c6c:	2e170306 	cdpcs	3, 1, cr0, cr7, cr6, {0}
    4c70:	0c031105 	stfeqs	f1, [r3], {5}
    4c74:	06130501 	ldreq	r0, [r3], -r1, lsl #10
    4c78:	06310501 	ldrteq	r0, [r1], -r1, lsl #10
    4c7c:	05201203 	streq	r1, [r0, #-515]!	; 0xfffffdfd
    4c80:	09051811 	stmdbeq	r5, {r0, r4, fp, ip}
    4c84:	30270515 	eorcc	r0, r7, r5, lsl r5
    4c88:	13060505 	movwne	r0, #25861	; 0x6505
    4c8c:	b6031405 	strlt	r1, [r3], -r5, lsl #8
    4c90:	3005207e 	andcc	r2, r5, lr, ror r0
    4c94:	052e3503 	streq	r3, [lr, #-1283]!	; 0xfffffafd
    4c98:	2e1f0328 	cdpcs	3, 1, cr0, cr15, cr8, {1}
    4c9c:	03061505 	movweq	r1, #25861	; 0x6505
    4ca0:	19052e3a 	stmdbne	r5, {r1, r3, r4, r5, r9, sl, fp, sp}
    4ca4:	31050106 	tstcc	r5, r6, lsl #2
    4ca8:	4a090306 	bmi	2458c8 <__RAM_SIZE+0x1458c8>
    4cac:	01151505 	tsteq	r5, r5, lsl #10
    4cb0:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    4cb4:	00580104 	subseq	r0, r8, r4, lsl #2
    4cb8:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
    4cbc:	03040200 	movweq	r0, #16896	; 0x4200
    4cc0:	04020001 	streq	r0, [r2], #-1
    4cc4:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    4cc8:	00660304 	rsbeq	r0, r6, r4, lsl #6
    4ccc:	01030402 	tsteq	r3, r2, lsl #8
    4cd0:	03040200 	movweq	r0, #16896	; 0x4200
    4cd4:	04020001 	streq	r0, [r2], #-1
    4cd8:	02002003 	andeq	r2, r0, #3
    4cdc:	002e0304 	eoreq	r0, lr, r4, lsl #6
    4ce0:	20030402 	andcs	r0, r3, r2, lsl #8
    4ce4:	03040200 	movweq	r0, #16896	; 0x4200
    4ce8:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    4cec:	00200603 	eoreq	r0, r0, r3, lsl #12
    4cf0:	06030402 	streq	r0, [r3], -r2, lsl #8
    4cf4:	04020058 	streq	r0, [r2], #-88	; 0xffffffa8
    4cf8:	02007403 	andeq	r7, r0, #50331648	; 0x3000000
    4cfc:	00010304 	andeq	r0, r1, r4, lsl #6
    4d00:	01030402 	tsteq	r3, r2, lsl #8
    4d04:	01201503 			; <UNDEFINED> instruction: 0x01201503
    4d08:	07022e01 	streq	r2, [r2, -r1, lsl #28]
    4d0c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    4d10:	02050005 	andeq	r0, r5, #5
    4d14:	00000000 	andeq	r0, r0, r0
    4d18:	011a9903 	tsteq	sl, r3, lsl #18
    4d1c:	09050106 	stmdbeq	r5, {r1, r2, r8}
    4d20:	30052106 	andcc	r2, r5, r6, lsl #2
    4d24:	15260514 	strne	r0, [r6, #-1300]!	; 0xfffffaec
    4d28:	05180d05 	ldreq	r0, [r8, #-3333]	; 0xfffff2fb
    4d2c:	05010619 	streq	r0, [r1, #-1561]	; 0xfffff9e7
    4d30:	2b052e0f 	blcs	150574 <__RAM_SIZE+0x50574>
    4d34:	01040200 	mrseq	r0, R12_usr
    4d38:	060d053c 			; <UNDEFINED> instruction: 0x060d053c
    4d3c:	05200b03 	streq	r0, [r0, #-2819]!	; 0xfffff4fd
    4d40:	15053011 	strne	r3, [r5, #-17]	; 0xffffffef
    4d44:	13050106 	movwne	r0, #20742	; 0x5106
    4d48:	062d053c 			; <UNDEFINED> instruction: 0x062d053c
    4d4c:	05201003 	streq	r1, [r0, #-3]!
    4d50:	2505150d 	strcs	r1, [r5, #-1293]	; 0xfffffaf3
    4d54:	15220532 	strne	r0, [r2, #-1330]!	; 0xffffface
    4d58:	13060505 	movwne	r0, #25861	; 0x6505
    4d5c:	03062e05 	movweq	r2, #28165	; 0x6e05
    4d60:	15052067 	strne	r2, [r5, #-103]	; 0xffffff99
    4d64:	061e0516 			; <UNDEFINED> instruction: 0x061e0516
    4d68:	06150501 	ldreq	r0, [r5], -r1, lsl #10
    4d6c:	0101014b 	tsteq	r1, fp, asr #2
    4d70:	01040200 	mrseq	r0, R12_usr
    4d74:	04020058 	streq	r0, [r2], #-88	; 0xffffffa8
    4d78:	02002e03 	andeq	r2, r0, #3, 28	; 0x30
    4d7c:	00010304 	andeq	r0, r1, r4, lsl #6
    4d80:	01030402 	tsteq	r3, r2, lsl #8
    4d84:	03040200 	movweq	r0, #16896	; 0x4200
    4d88:	04020066 	streq	r0, [r2], #-102	; 0xffffff9a
    4d8c:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    4d90:	00010304 	andeq	r0, r1, r4, lsl #6
    4d94:	20030402 	andcs	r0, r3, r2, lsl #8
    4d98:	03040200 	movweq	r0, #16896	; 0x4200
    4d9c:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    4da0:	02002003 	andeq	r2, r0, #3
    4da4:	00200304 	eoreq	r0, r0, r4, lsl #6
    4da8:	06030402 	streq	r0, [r3], -r2, lsl #8
    4dac:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    4db0:	00580603 	subseq	r0, r8, r3, lsl #12
    4db4:	74030402 	strvc	r0, [r3], #-1026	; 0xfffffbfe
    4db8:	03040200 	movweq	r0, #16896	; 0x4200
    4dbc:	04020001 	streq	r0, [r2], #-1
    4dc0:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    4dc4:	00170304 	andseq	r0, r7, r4, lsl #6
    4dc8:	01030402 	tsteq	r3, r2, lsl #8
    4dcc:	01040200 	mrseq	r0, R12_usr
    4dd0:	00090266 	andeq	r0, r9, r6, ror #4
    4dd4:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    4dd8:	00020500 	andeq	r0, r2, r0, lsl #10
    4ddc:	03000000 	movweq	r0, #0
    4de0:	06011ad6 			; <UNDEFINED> instruction: 0x06011ad6
    4de4:	06090501 	streq	r0, [r9], -r1, lsl #10
    4de8:	0513132f 	ldreq	r1, [r3, #-815]	; 0xfffffcd1
    4dec:	26051437 			; <UNDEFINED> instruction: 0x26051437
    4df0:	03330514 	teqeq	r3, #20, 10	; 0x5000000
    4df4:	09050112 	stmdbeq	r5, {r1, r4, r8}
    4df8:	06220517 			; <UNDEFINED> instruction: 0x06220517
    4dfc:	0d052e01 	stceq	14, cr2, [r5, #-4]
    4e00:	11052206 	tstne	r5, r6, lsl #4
    4e04:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    4e08:	33052e0f 	movwcc	r2, #24079	; 0x5e0f
    4e0c:	11053e06 	tstne	r5, r6, lsl #28
    4e10:	062a0515 			; <UNDEFINED> instruction: 0x062a0515
    4e14:	2e130501 	cfmul32cs	mvfx0, mvfx3, mvfx1
    4e18:	34061905 	strcc	r1, [r6], #-2309	; 0xfffff6fb
    4e1c:	01062205 	tsteq	r6, r5, lsl #4
    4e20:	05203d05 	streq	r3, [r0, #-3333]!	; 0xfffff2fb
    4e24:	1d053c1b 	stcne	12, cr3, [r5, #-108]	; 0xffffff94
    4e28:	05173006 	ldreq	r3, [r7, #-6]
    4e2c:	05010631 	streq	r0, [r1, #-1585]	; 0xfffff9cf
    4e30:	05400635 	strbeq	r0, [r0, #-1589]	; 0xfffff9cb
    4e34:	1e051715 	mcrne	7, 0, r1, cr5, cr5, {0}
    4e38:	15050106 	strne	r0, [r5, #-262]	; 0xfffffefa
    4e3c:	01014b06 	tsteq	r1, r6, lsl #22
    4e40:	04020001 	streq	r0, [r2], #-1
    4e44:	02005801 	andeq	r5, r0, #65536	; 0x10000
    4e48:	002e0304 	eoreq	r0, lr, r4, lsl #6
    4e4c:	01030402 	tsteq	r3, r2, lsl #8
    4e50:	03040200 	movweq	r0, #16896	; 0x4200
    4e54:	04020001 	streq	r0, [r2], #-1
    4e58:	02006603 	andeq	r6, r0, #3145728	; 0x300000
    4e5c:	00010304 	andeq	r0, r1, r4, lsl #6
    4e60:	01030402 	tsteq	r3, r2, lsl #8
    4e64:	03040200 	movweq	r0, #16896	; 0x4200
    4e68:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    4e6c:	02002e03 	andeq	r2, r0, #3, 28	; 0x30
    4e70:	00200304 	eoreq	r0, r0, r4, lsl #6
    4e74:	20030402 	andcs	r0, r3, r2, lsl #8
    4e78:	03040200 	movweq	r0, #16896	; 0x4200
    4e7c:	02002006 	andeq	r2, r0, #6
    4e80:	58060304 	stmdapl	r6, {r2, r8, r9}
    4e84:	03040200 	movweq	r0, #16896	; 0x4200
    4e88:	04020074 	streq	r0, [r2], #-116	; 0xffffff8c
    4e8c:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    4e90:	05010304 	streq	r0, [r1, #-772]	; 0xfffffcfc
    4e94:	01170329 	tsteq	r7, r9, lsr #6
    4e98:	05150905 	ldreq	r0, [r5, #-2309]	; 0xfffff6fb
    4e9c:	09053e39 	stmdbeq	r5, {r0, r3, r4, r5, r9, sl, fp, ip, sp}
    4ea0:	06050514 			; <UNDEFINED> instruction: 0x06050514
    4ea4:	03140513 	tsteq	r4, #79691776	; 0x4c00000
    4ea8:	052e7fa6 	streq	r7, [lr, #-4006]!	; 0xfffff05a
    4eac:	c2030615 	andgt	r0, r3, #22020096	; 0x1500000
    4eb0:	14052e00 	strne	r2, [r5], #-3584	; 0xfffff200
    4eb4:	7fbe0306 	svcvc	0x00be0306
    4eb8:	000f0258 	andeq	r0, pc, r8, asr r2	; <UNPREDICTABLE>
    4ebc:	01050101 	tsteq	r5, r1, lsl #2
    4ec0:	00020500 	andeq	r0, r2, r0, lsl #10
    4ec4:	03000000 	movweq	r0, #0
    4ec8:	05011db8 	streq	r1, [r1, #-3512]	; 0xfffff248
    4ecc:	09052123 	stmdbeq	r5, {r0, r1, r5, r8, sp}
    4ed0:	170d0516 	smladne	sp, r6, r5, r0
    4ed4:	054f0905 	strbeq	r0, [pc, #-2309]	; 45d7 <__HEAP_SIZE+0x35d7>
    4ed8:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    4edc:	0402001b 	streq	r0, [r2], #-27	; 0xffffffe5
    4ee0:	05200601 	streq	r0, [r0, #-1537]!	; 0xfffff9ff
    4ee4:	04020009 	streq	r0, [r2], #-9
    4ee8:	06010601 	streq	r0, [r1], -r1, lsl #12
    4eec:	052e0903 	streq	r0, [lr, #-2307]!	; 0xfffff6fd
    4ef0:	052f3505 	streq	r3, [pc, #-1285]!	; 49f3 <__HEAP_SIZE+0x39f3>
    4ef4:	05010617 	streq	r0, [r1, #-1559]	; 0xfffff9e9
    4ef8:	05400605 	strbeq	r0, [r0, #-1541]	; 0xfffff9fb
    4efc:	01053024 	tsteq	r5, r4, lsr #32
    4f00:	0d051306 	stceq	3, cr1, [r5, #-24]	; 0xffffffe8
    4f04:	03040200 	movweq	r0, #16896	; 0x4200
    4f08:	206a0306 	rsbcs	r0, sl, r6, lsl #6
    4f0c:	02004b05 	andeq	r4, r0, #5120	; 0x1400
    4f10:	05560304 	ldrbeq	r0, [r6, #-772]	; 0xfffffcfc
    4f14:	04020052 	streq	r0, [r2], #-82	; 0xffffffae
    4f18:	00010603 	andeq	r0, r1, r3, lsl #12
    4f1c:	20030402 	andcs	r0, r3, r2, lsl #8
    4f20:	01000602 	tsteq	r0, r2, lsl #12
    4f24:	00010501 	andeq	r0, r1, r1, lsl #10
    4f28:	26b80205 	ldrtcs	r0, [r8], r5, lsl #4
    4f2c:	e3031000 	movw	r1, #12288	; 0x3000
    4f30:	2105011d 	tstcs	r5, sp, lsl r1
    4f34:	031f0513 	tsteq	pc, #79691776	; 0x4c00000
    4f38:	0905010b 	stmdbeq	r5, {r0, r1, r3, r8}
    4f3c:	06200516 			; <UNDEFINED> instruction: 0x06200516
    4f40:	3c1e0501 	cfldr32cc	mvfx0, [lr], {1}
    4f44:	24060905 	strcs	r0, [r6], #-2309	; 0xfffff6fb
    4f48:	37032205 	strcc	r2, [r3, -r5, lsl #4]
    4f4c:	06010501 	streq	r0, [r1], -r1, lsl #10
    4f50:	00040213 	andeq	r0, r4, r3, lsl r2
    4f54:	01050101 	tsteq	r5, r1, lsl #2
    4f58:	c8020500 	stmdagt	r2, {r8, sl}
    4f5c:	03100026 	tsteq	r0, #38	; 0x26
    4f60:	0501208a 	streq	r2, [r1, #-138]	; 0xffffff76
    4f64:	23051305 	movwcs	r1, #21253	; 0x5305
    4f68:	09051514 	stmdbeq	r5, {r2, r4, r8, sl, ip}
    4f6c:	06100514 			; <UNDEFINED> instruction: 0x06100514
    4f70:	06220501 	strteq	r0, [r2], -r1, lsl #10
    4f74:	142c0530 	strtne	r0, [ip], #-1328	; 0xfffffad0
    4f78:	05140505 	ldreq	r0, [r4, #-1285]	; 0xfffffafb
    4f7c:	02130601 	andseq	r0, r3, #1048576	; 0x100000
    4f80:	01010004 	tsteq	r1, r4
    4f84:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    4f88:	00000002 	andeq	r0, r0, r2
    4f8c:	209d0300 	addscs	r0, sp, r0, lsl #6
    4f90:	13050501 	movwne	r0, #21761	; 0x5501
    4f94:	142a0513 	strtne	r0, [sl], #-1299	; 0xfffffaed
    4f98:	10032f05 	andne	r2, r3, r5, lsl #30
    4f9c:	14050501 	strne	r0, [r5], #-1281	; 0xfffffaff
    4fa0:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    4fa4:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    4fa8:	05300605 	ldreq	r0, [r0, #-1541]!	; 0xfffff9fb
    4fac:	05051434 	streq	r1, [r5, #-1076]	; 0xfffffbcc
    4fb0:	06010514 			; <UNDEFINED> instruction: 0x06010514
    4fb4:	00040213 	andeq	r0, r4, r3, lsl r2
    4fb8:	01050101 	tsteq	r5, r1, lsl #2
    4fbc:	d4020500 	strle	r0, [r2], #-1280	; 0xfffffb00
    4fc0:	03100026 	tsteq	r0, #38	; 0x26
    4fc4:	050120c0 	streq	r2, [r1, #-192]	; 0xffffff40
    4fc8:	41051328 	tstmi	r5, r8, lsr #6
    4fcc:	14050516 	strne	r0, [r5], #-1302	; 0xfffffaea
    4fd0:	01060c05 	tsteq	r6, r5, lsl #24
    4fd4:	022f0105 	eoreq	r0, pc, #1073741825	; 0x40000001
    4fd8:	01010004 	tsteq	r1, r4
    4fdc:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    4fe0:	00000002 	andeq	r0, r0, r2
    4fe4:	20cc0300 	sbccs	r0, ip, r0, lsl #6
    4fe8:	13050501 	movwne	r0, #21761	; 0x5501
    4fec:	05142d05 	ldreq	r2, [r4, #-3333]	; 0xfffff2fb
    4ff0:	0d051605 	stceq	6, cr1, [r5, #-20]	; 0xffffffec
    4ff4:	1a050106 	bne	145414 <__RAM_SIZE+0x45414>
    4ff8:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    4ffc:	3d052f06 	stccc	15, cr2, [r5, #-24]	; 0xffffffe8
    5000:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    5004:	00050514 	andeq	r0, r5, r4, lsl r5
    5008:	14040402 	strne	r0, [r4], #-1026	; 0xfffffbfe
    500c:	02000105 	andeq	r0, r0, #1073741825	; 0x40000001
    5010:	13060404 	movwne	r0, #25604	; 0x6404
    5014:	02000d05 	andeq	r0, r0, #320	; 0x140
    5018:	7a030104 	bvc	c5430 <__HEAP_SIZE+0xc4430>
    501c:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    5020:	03022e01 	movweq	r2, #11777	; 0x2e01
    5024:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    5028:	02050005 	andeq	r0, r5, #5
    502c:	00000000 	andeq	r0, r0, r0
    5030:	0121ed03 			; <UNDEFINED> instruction: 0x0121ed03
    5034:	13130905 	tstne	r3, #81920	; 0x14000
    5038:	05145205 	ldreq	r5, [r4, #-517]	; 0xfffffdfb
    503c:	2e051430 	cfmvdhrcs	mvd5, r1
    5040:	14090513 	strne	r0, [r9], #-1299	; 0xfffffaed
    5044:	01061105 	tsteq	r6, r5, lsl #2
    5048:	02000d05 	andeq	r0, r0, #320	; 0x140
    504c:	32060404 	andcc	r0, r6, #4, 8	; 0x4000000
    5050:	02001605 	andeq	r1, r0, #5242880	; 0x500000
    5054:	01060404 	tsteq	r6, r4, lsl #8
    5058:	02000f05 	andeq	r0, r0, #5, 30
    505c:	052e0404 	streq	r0, [lr, #-1028]!	; 0xfffffbfc
    5060:	09030612 	stmdbeq	r3, {r1, r4, r9, sl}
    5064:	0614052e 	ldreq	r0, [r4], -lr, lsr #10
    5068:	36190501 	ldrcc	r0, [r9], -r1, lsl #10
    506c:	03063505 	movweq	r3, #25861	; 0x6505
    5070:	0905200b 	stmdbeq	r5, {r0, r1, r3, sp}
    5074:	06050514 			; <UNDEFINED> instruction: 0x06050514
    5078:	00110513 	andseq	r0, r1, r3, lsl r5
    507c:	03010402 	movweq	r0, #5122	; 0x1402
    5080:	0200205d 	andeq	r2, r0, #93	; 0x5d
    5084:	062e0104 	strteq	r0, [lr], -r4, lsl #2
    5088:	06290526 	strteq	r0, [r9], -r6, lsr #10
    508c:	20220501 	eorcs	r0, r2, r1, lsl #10
    5090:	24061105 	strcs	r1, [r6], #-261	; 0xfffffefb
    5094:	01062005 	tsteq	r6, r5
    5098:	21061105 	tstcs	r6, r5, lsl #2
    509c:	01061905 	tsteq	r6, r5, lsl #18
    50a0:	32061105 	andcc	r1, r6, #1073741825	; 0x40000001
    50a4:	01062905 	tsteq	r6, r5, lsl #18
    50a8:	05202205 	streq	r2, [r0, #-517]!	; 0xfffffdfb
    50ac:	05210611 	streq	r0, [r1, #-1553]!	; 0xfffff9ef
    50b0:	05010620 	streq	r0, [r1, #-1568]	; 0xfffff9e0
    50b4:	062f0611 			; <UNDEFINED> instruction: 0x062f0611
    50b8:	00040201 	andeq	r0, r4, r1, lsl #4
    50bc:	09050101 	stmdbeq	r5, {r0, r8}
    50c0:	00020500 	andeq	r0, r2, r0, lsl #10
    50c4:	03000000 	movweq	r0, #0
    50c8:	050122f1 	streq	r2, [r1, #-753]	; 0xfffffd0f
    50cc:	3e051330 	mcrcc	3, 0, r1, cr5, cr0, {1}
    50d0:	14480516 	strbne	r0, [r8], #-1302	; 0xfffffaea
    50d4:	05140d05 	ldreq	r0, [r4, #-3333]	; 0xfffff2fb
    50d8:	02130609 	andseq	r0, r3, #9437184	; 0x900000
    50dc:	01010006 	tsteq	r1, r6
    50e0:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    50e4:	00000002 	andeq	r0, r0, r2
    50e8:	22ff0300 	rscscs	r0, pc, #0, 6
    50ec:	133c0501 	teqne	ip, #4194304	; 0x400000
    50f0:	05153f05 	ldreq	r3, [r5, #-3845]	; 0xfffff0fb
    50f4:	51051640 	tstpl	r5, r0, asr #12
    50f8:	14090514 	strne	r0, [r9], #-1300	; 0xfffffaec
    50fc:	13060505 	movwne	r0, #25861	; 0x6505
    5100:	0003023c 	andeq	r0, r3, ip, lsr r2
    5104:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    5108:	e0020500 	and	r0, r2, r0, lsl #10
    510c:	03100026 	tsteq	r0, #38	; 0x26
    5110:	06012398 			; <UNDEFINED> instruction: 0x06012398
    5114:	06090501 	streq	r0, [r9], -r1, lsl #10
    5118:	1431052f 	ldrtne	r0, [r1], #-1327	; 0xfffffad1
    511c:	05170905 	ldreq	r0, [r7, #-2309]	; 0xfffff6fb
    5120:	05010628 	streq	r0, [r1, #-1576]	; 0xfffff9d8
    5124:	42052e1b 	andmi	r2, r5, #432	; 0x1b0
    5128:	09052106 	stmdbeq	r5, {r1, r2, r8, sp}
    512c:	061f0514 			; <UNDEFINED> instruction: 0x061f0514
    5130:	2e0b0501 	cfsh32cs	mvfx0, mvfx11, #1
    5134:	03062505 	movweq	r2, #25861	; 0x6505
    5138:	09052e12 	stmdbeq	r5, {r1, r4, r9, sl, fp, sp}
    513c:	06140515 			; <UNDEFINED> instruction: 0x06140515
    5140:	31053c01 	tstcc	r5, r1, lsl #24
    5144:	24052206 	strcs	r2, [r5], #-518	; 0xfffffdfa
    5148:	06050513 			; <UNDEFINED> instruction: 0x06050513
    514c:	06470513 			; <UNDEFINED> instruction: 0x06470513
    5150:	05206c03 	streq	r6, [r0, #-3075]!	; 0xfffff3fd
    5154:	0d05133d 	stceq	3, cr1, [r5, #-244]	; 0xffffff0c
    5158:	30110515 	andscc	r0, r1, r5, lsl r5
    515c:	01061d05 	tsteq	r6, r5, lsl #26
    5160:	4c060d05 	stcmi	13, cr0, [r6], {5}
    5164:	0619052f 	ldreq	r0, [r9], -pc, lsr #10
    5168:	07022001 	streq	r2, [r2, -r1]
    516c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    5170:	02050001 	andeq	r0, r5, #1
    5174:	1000271c 	andne	r2, r0, ip, lsl r7
    5178:	0124be03 			; <UNDEFINED> instruction: 0x0124be03
    517c:	13130505 	tstne	r3, #20971520	; 0x1400000
    5180:	18240513 	stmdane	r4!, {r0, r1, r4, r8, sl}
    5184:	05172b05 	ldreq	r2, [r7, #-2821]	; 0xfffff4fb
    5188:	1e051805 	cdpne	8, 0, cr1, cr5, cr5, {0}
    518c:	07050106 	streq	r0, [r5, -r6, lsl #2]
    5190:	0301052e 	movweq	r0, #5422	; 0x152e
    5194:	09053c6c 	stmdbeq	r5, {r2, r3, r5, r6, sl, fp, ip, sp}
    5198:	20180306 	andscs	r0, r8, r6, lsl #6
    519c:	01063705 	tsteq	r6, r5, lsl #14
    51a0:	052e1a05 	streq	r1, [lr, #-2565]!	; 0xfffff5fb
    51a4:	05240609 	streq	r0, [r4, #-1545]!	; 0xfffff9f7
    51a8:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
    51ac:	05220609 	streq	r0, [r2, #-1545]!	; 0xfffff9f7
    51b0:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
    51b4:	05260625 	streq	r0, [r6, #-1573]!	; 0xfffff9db
    51b8:	1d051909 	vstrne.16	s2, [r5, #-18]	; 0xffffffee	; <UNPREDICTABLE>
    51bc:	0b050106 	bleq	1455dc <__RAM_SIZE+0x455dc>
    51c0:	0310052e 	tsteq	r0, #192937984	; 0xb800000
    51c4:	11052e58 	tstne	r5, r8, asr lr
    51c8:	018c0306 	orreq	r0, ip, r6, lsl #6
    51cc:	06150520 	ldreq	r0, [r5], -r0, lsr #10
    51d0:	82130501 	andshi	r0, r3, #4194304	; 0x400000
    51d4:	05302505 	ldreq	r2, [r0, #-1285]!	; 0xfffffafb
    51d8:	0524062d 	streq	r0, [r4, #-1581]!	; 0xfffff9d3
    51dc:	012b0311 			; <UNDEFINED> instruction: 0x012b0311
    51e0:	01062305 	tsteq	r6, r5, lsl #6
    51e4:	2e2e1305 	cdpcs	3, 2, cr1, cr14, cr5, {0}
    51e8:	3a030105 	bcc	c5604 <__HEAP_SIZE+0xc4604>
    51ec:	060d0501 	streq	r0, [sp], -r1, lsl #10
    51f0:	207ea603 	rsbscs	sl, lr, r3, lsl #12
    51f4:	2e010101 	adfcss	f0, f1, f1
    51f8:	064a203c 			; <UNDEFINED> instruction: 0x064a203c
    51fc:	0601062e 	streq	r0, [r1], -lr, lsr #12
    5200:	03100520 	tsteq	r0, #32, 10	; 0x8000000
    5204:	15050163 	strne	r0, [r5, #-355]	; 0xfffffe9d
    5208:	2e330306 	cdpcs	3, 3, cr0, cr3, cr6, {0}
    520c:	01062a05 	tsteq	r6, r5, lsl #20
    5210:	4b061505 	blmi	18a62c <__RAM_SIZE+0x8a62c>
    5214:	15031905 	strne	r1, [r3, #-2309]	; 0xfffff6fb
    5218:	062e0520 	strteq	r0, [lr], -r0, lsr #10
    521c:	19052001 	stmdbne	r5, {r0, sp}
    5220:	15052106 	strne	r2, [r5, #-262]	; 0xfffffefa
    5224:	01040200 	mrseq	r0, R12_usr
    5228:	04020028 	streq	r0, [r2], #-40	; 0xffffffd8
    522c:	053c0601 	ldreq	r0, [ip, #-1537]!	; 0xfffff9ff
    5230:	04020019 	streq	r0, [r2], #-25	; 0xffffffe7
    5234:	00180603 	andseq	r0, r8, r3, lsl #12
    5238:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
    523c:	03040200 	movweq	r0, #16896	; 0x4200
    5240:	1631053c 			; <UNDEFINED> instruction: 0x1631053c
    5244:	01171505 	tsteq	r7, r5, lsl #10
    5248:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    524c:	00580104 	subseq	r0, r8, r4, lsl #2
    5250:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
    5254:	03040200 	movweq	r0, #16896	; 0x4200
    5258:	04020001 	streq	r0, [r2], #-1
    525c:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    5260:	00820304 	addeq	r0, r2, r4, lsl #6
    5264:	01030402 	tsteq	r3, r2, lsl #8
    5268:	03040200 	movweq	r0, #16896	; 0x4200
    526c:	04020001 	streq	r0, [r2], #-1
    5270:	02002003 	andeq	r2, r0, #3
    5274:	002e0304 	eoreq	r0, lr, r4, lsl #6
    5278:	20030402 	andcs	r0, r3, r2, lsl #8
    527c:	03040200 	movweq	r0, #16896	; 0x4200
    5280:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    5284:	00200603 	eoreq	r0, r0, r3, lsl #12
    5288:	06030402 	streq	r0, [r3], -r2, lsl #8
    528c:	04020066 	streq	r0, [r2], #-102	; 0xffffff9a
    5290:	02006603 	andeq	r6, r0, #3145728	; 0x300000
    5294:	00010304 	andeq	r0, r1, r4, lsl #6
    5298:	01030402 	tsteq	r3, r2, lsl #8
    529c:	02001d05 	andeq	r1, r0, #320	; 0x140
    52a0:	10030304 	andne	r0, r3, r4, lsl #6
    52a4:	00260501 	eoreq	r0, r6, r1, lsl #10
    52a8:	06030402 	streq	r0, [r3], -r2, lsl #8
    52ac:	00410501 	subeq	r0, r1, r1, lsl #10
    52b0:	20030402 	andcs	r0, r3, r2, lsl #8
    52b4:	03040200 	movweq	r0, #16896	; 0x4200
    52b8:	001f0520 	andseq	r0, pc, r0, lsr #10
    52bc:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
    52c0:	05303105 	ldreq	r3, [r0, #-261]!	; 0xfffffefb
    52c4:	b703060d 	strlt	r0, [r3, -sp, lsl #12]
    52c8:	1105207f 	tstne	r5, pc, ror r0
    52cc:	06150514 			; <UNDEFINED> instruction: 0x06150514
    52d0:	3c130501 	cfldr32cc	mvfx0, [r3], {1}
    52d4:	03061505 	movweq	r1, #25861	; 0x6505
    52d8:	1d052e13 	stcne	14, cr2, [r5, #-76]	; 0xffffffb4
    52dc:	1b050106 	blne	1456fc <__RAM_SIZE+0x456fc>
    52e0:	0615053c 			; <UNDEFINED> instruction: 0x0615053c
    52e4:	06200521 	strteq	r0, [r0], -r1, lsr #10
    52e8:	06150501 	ldreq	r0, [r5], -r1, lsl #10
    52ec:	06170522 	ldreq	r0, [r7], -r2, lsr #10
    52f0:	06310501 	ldrteq	r0, [r1], -r1, lsl #10
    52f4:	052e0c03 	streq	r0, [lr, #-3075]!	; 0xfffff3fd
    52f8:	20011615 	andcs	r1, r1, r5, lsl r6
    52fc:	02002e3c 	andeq	r2, r0, #60, 28	; 0x3c0
    5300:	004a0304 	subeq	r0, sl, r4, lsl #6
    5304:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
    5308:	03040200 	movweq	r0, #16896	; 0x4200
    530c:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    5310:	19051603 	stmdbne	r5, {r0, r1, r9, sl, ip}
    5314:	03040200 	movweq	r0, #16896	; 0x4200
    5318:	17050106 	strne	r0, [r5, -r6, lsl #2]
    531c:	03040200 	movweq	r0, #16896	; 0x4200
    5320:	06190520 	ldreq	r0, [r9], -r0, lsr #10
    5324:	3c010130 	stfccs	f0, [r1], {48}	; 0x30
    5328:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    532c:	02005801 	andeq	r5, r0, #65536	; 0x10000
    5330:	3c060104 	stfccs	f0, [r6], {4}
    5334:	03060905 	movweq	r0, #26885	; 0x6905
    5338:	05010191 	streq	r0, [r1, #-401]	; 0xfffffe6f
    533c:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    5340:	7e970310 	mrcvc	3, 4, r0, cr7, cr0, {0}
    5344:	0301054a 	movweq	r0, #5450	; 0x154a
    5348:	052001f7 	streq	r0, [r0, #-503]!	; 0xfffffe09
    534c:	20480325 	subcs	r0, r8, r5, lsr #6
    5350:	06360520 	ldrteq	r0, [r6], -r0, lsr #10
    5354:	05013503 	streq	r3, [r1, #-1283]	; 0xfffffafd
    5358:	0c051405 	cfstrseq	mvf1, [r5], {5}
    535c:	17020106 	strne	r0, [r2, -r6, lsl #2]
    5360:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    5364:	02050001 	andeq	r0, r5, #1
    5368:	1000287c 	andne	r2, r0, ip, ror r8
    536c:	011ef403 	tsteq	lr, r3, lsl #8	; <UNPREDICTABLE>
    5370:	13210505 			; <UNDEFINED> instruction: 0x13210505
    5374:	05142005 	ldreq	r2, [r4, #-5]
    5378:	010b0309 	tsteq	fp, r9, lsl #6
    537c:	13300d05 	teqne	r0, #320	; 0x140
    5380:	05163705 	ldreq	r3, [r6, #-1797]	; 0xfffff8fb
    5384:	2405140d 	strcs	r1, [r5], #-1037	; 0xfffffbf3
    5388:	22050106 	andcs	r0, r5, #-2147483647	; 0x80000001
    538c:	0624053c 			; <UNDEFINED> instruction: 0x0624053c
    5390:	140d0521 	strne	r0, [sp], #-1313	; 0xfffffadf
    5394:	01062605 	tsteq	r6, r5, lsl #12
    5398:	05200f05 	streq	r0, [r0, #-3845]!	; 0xfffff0fb
    539c:	05300611 	ldreq	r0, [r0, #-1553]!	; 0xfffff9ef
    53a0:	0501062c 	streq	r0, [r1, #-1580]	; 0xfffff9d4
    53a4:	10052e13 	andne	r2, r5, r3, lsl lr
    53a8:	05206503 	streq	r6, [r0, #-1283]!	; 0xfffffafd
    53ac:	04020019 	streq	r0, [r2], #-25	; 0xffffffe7
    53b0:	25030601 	strcs	r0, [r3, #-1537]	; 0xfffff9ff
    53b4:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    53b8:	003c0601 	eorseq	r0, ip, r1, lsl #12
    53bc:	06010402 	streq	r0, [r1], -r2, lsl #8
    53c0:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    53c4:	053c0601 	ldreq	r0, [ip, #-1537]!	; 0xfffff9ff
    53c8:	0158030d 	cmpeq	r8, sp, lsl #6
    53cc:	03063905 	movweq	r3, #26885	; 0x6905
    53d0:	1a052035 	bne	14d4ac <__RAM_SIZE+0x4d4ac>
    53d4:	05016b03 	streq	r6, [r1, #-2819]	; 0xfffff4fd
    53d8:	0501061c 	streq	r0, [r1, #-1564]	; 0xfffff9e4
    53dc:	19052e1a 	stmdbne	r5, {r1, r3, r4, r9, sl, fp, sp}
    53e0:	21053306 	tstcs	r5, r6, lsl #6
    53e4:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    53e8:	1905201f 	stmdbne	r5, {r0, r1, r2, r3, r4, sp}
    53ec:	20012106 	andcs	r2, r1, r6, lsl #2
    53f0:	02002e3c 	andeq	r2, r0, #60, 28	; 0x3c0
    53f4:	00580304 	subseq	r0, r8, r4, lsl #6
    53f8:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
    53fc:	03040200 	movweq	r0, #16896	; 0x4200
    5400:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    5404:	02001303 	andeq	r1, r0, #201326592	; 0xc000000
    5408:	00130304 	andseq	r0, r3, r4, lsl #6
    540c:	01030402 	tsteq	r3, r2, lsl #8
    5410:	03040200 	movweq	r0, #16896	; 0x4200
    5414:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    5418:	02003c03 	andeq	r3, r0, #768	; 0x300
    541c:	002e0304 	eoreq	r0, lr, r4, lsl #6
    5420:	4a030402 	bmi	c6430 <__HEAP_SIZE+0xc5430>
    5424:	03040200 	movweq	r0, #16896	; 0x4200
    5428:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    542c:	02003c03 	andeq	r3, r0, #768	; 0x300
    5430:	00130304 	andseq	r0, r3, r4, lsl #6
    5434:	01030402 	tsteq	r3, r2, lsl #8
    5438:	03040200 	movweq	r0, #16896	; 0x4200
    543c:	04020001 	streq	r0, [r2], #-1
    5440:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    5444:	20060304 	andcs	r0, r6, r4, lsl #6
    5448:	01040200 	mrseq	r0, R12_usr
    544c:	02004a06 	andeq	r4, r0, #24576	; 0x6000
    5450:	002e0304 	eoreq	r0, lr, r4, lsl #6
    5454:	01030402 	tsteq	r3, r2, lsl #8
    5458:	03040200 	movweq	r0, #16896	; 0x4200
    545c:	04020001 	streq	r0, [r2], #-1
    5460:	02006603 	andeq	r6, r0, #3145728	; 0x300000
    5464:	00010304 	andeq	r0, r1, r4, lsl #6
    5468:	01030402 	tsteq	r3, r2, lsl #8
    546c:	03040200 	movweq	r0, #16896	; 0x4200
    5470:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    5474:	02002e03 	andeq	r2, r0, #3, 28	; 0x30
    5478:	00200304 	eoreq	r0, r0, r4, lsl #6
    547c:	20030402 	andcs	r0, r3, r2, lsl #8
    5480:	03040200 	movweq	r0, #16896	; 0x4200
    5484:	02002006 	andeq	r2, r0, #6
    5488:	58060304 	stmdapl	r6, {r2, r8, r9}
    548c:	03040200 	movweq	r0, #16896	; 0x4200
    5490:	04020074 	streq	r0, [r2], #-116	; 0xffffff8c
    5494:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    5498:	05010304 	streq	r0, [r1, #-772]	; 0xfffffcfc
    549c:	0402001d 	streq	r0, [r2], #-29	; 0xffffffe3
    54a0:	26051803 	strcs	r1, [r5], -r3, lsl #16
    54a4:	03040200 	movweq	r0, #16896	; 0x4200
    54a8:	41050106 	tstmi	r5, r6, lsl #2
    54ac:	03040200 	movweq	r0, #16896	; 0x4200
    54b0:	001f0520 	andseq	r0, pc, r0, lsr #10
    54b4:	3c030402 	cfstrscc	mvf0, [r3], {2}
    54b8:	30062105 	andcc	r2, r6, r5, lsl #2
    54bc:	01063b05 	tsteq	r6, r5, lsl #22
    54c0:	03061505 	movweq	r1, #25861	; 0x6505
    54c4:	17054a10 	smladne	r5, r0, sl, r4
    54c8:	19050106 	stmdbne	r5, {r1, r2, r8}
    54cc:	0d032806 	stceq	8, cr2, [r3, #-24]	; 0xffffffe8
    54d0:	0624052e 	strteq	r0, [r4], -lr, lsr #10
    54d4:	06190501 	ldreq	r0, [r9], -r1, lsl #10
    54d8:	061b0530 			; <UNDEFINED> instruction: 0x061b0530
    54dc:	06350501 	ldrteq	r0, [r5], -r1, lsl #10
    54e0:	05201603 	streq	r1, [r0, #-1539]!	; 0xfffff9fd
    54e4:	27051615 	smladcs	r5, r5, r6, r1
    54e8:	17050106 	strne	r0, [r5, -r6, lsl #2]
    54ec:	061d052e 	ldreq	r0, [sp], -lr, lsr #10
    54f0:	2e011824 	cdpcs	8, 0, cr1, cr1, cr4, {1}
    54f4:	062d052e 	strteq	r0, [sp], -lr, lsr #10
    54f8:	05017a03 	streq	r7, [r1, #-2563]	; 0xfffff5fd
    54fc:	6e03063d 	mcrvs	6, 0, r0, cr3, cr13, {1}
    5500:	1521052e 	strne	r0, [r1, #-1326]!	; 0xfffffad2
    5504:	05132405 	ldreq	r2, [r3, #-1029]	; 0xfffffbfb
    5508:	2001061d 	andcs	r0, r1, sp, lsl r6
    550c:	20720306 	rsbscs	r0, r2, r6, lsl #6
    5510:	05142105 	ldreq	r2, [r4, #-261]	; 0xfffffefb
    5514:	05010625 	streq	r0, [r1, #-1573]	; 0xfffff9db
    5518:	25052e23 	strcs	r2, [r5, #-3619]	; 0xfffff1dd
    551c:	3f053206 	svccc	0x00053206
    5520:	1d050106 	stfnes	f0, [r5, #-24]	; 0xffffffe8
    5524:	4a0a0306 	bmi	286144 <__RAM_SIZE+0x186144>
    5528:	01062a05 	tsteq	r6, r5, lsl #20
    552c:	0310054a 	tsteq	r0, #310378496	; 0x12800000
    5530:	05017f97 	streq	r7, [r1, #-3991]	; 0xfffff069
    5534:	87030629 	strhi	r0, [r3, -r9, lsr #12]
    5538:	09052001 	stmdbeq	r5, {r0, sp}
    553c:	31320515 	teqcc	r2, r5, lsl r5
    5540:	05140505 	ldreq	r0, [r4, #-1285]	; 0xfffffafb
    5544:	2e130601 	cfmsub32cs	mvax0, mvfx0, mvfx3, mvfx1
    5548:	01010008 	tsteq	r1, r8
    554c:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    5550:	00000002 	andeq	r0, r0, r2
    5554:	12a80300 	adcne	r0, r8, #0, 6
    5558:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    555c:	133d0609 	teqne	sp, #9437184	; 0x900000
    5560:	05144905 	ldreq	r4, [r4, #-2309]	; 0xfffff6fb
    5564:	3005142b 	andcc	r1, r5, fp, lsr #8
    5568:	14090513 	strne	r0, [r9], #-1299	; 0xfffffaed
    556c:	05320d05 	ldreq	r0, [r2, #-3333]!	; 0xfffff2fb
    5570:	0501061e 	streq	r0, [r1, #-1566]	; 0xfffff9e2
    5574:	05300637 	ldreq	r0, [r0, #-1591]!	; 0xfffff9c9
    5578:	1b05150d 	blne	14a9b4 <__RAM_SIZE+0x4a9b4>
    557c:	19050106 	stmdbne	r5, {r1, r2, r8}
    5580:	060d0520 	streq	r0, [sp], -r0, lsr #10
    5584:	060f0522 	streq	r0, [pc], -r2, lsr #10
    5588:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    558c:	06130535 			; <UNDEFINED> instruction: 0x06130535
    5590:	060d0501 	streq	r0, [sp], -r1, lsl #10
    5594:	052e1903 	streq	r1, [lr, #-2307]!	; 0xfffff6fd
    5598:	05010621 	streq	r0, [r1, #-1569]	; 0xfffff9df
    559c:	0522060d 	streq	r0, [r2, #-1549]!	; 0xfffff9f3
    55a0:	4c030625 	stcmi	6, cr0, [r3], {37}	; 0x25
    55a4:	3b052001 	blcc	14d5b0 <__RAM_SIZE+0x4d5b0>
    55a8:	01040200 	mrseq	r0, R12_usr
    55ac:	05201903 	streq	r1, [r0, #-2307]!	; 0xfffff6fd
    55b0:	1903060d 	stmdbne	r3, {r0, r2, r3, r9, sl}
    55b4:	0621052e 	strteq	r0, [r1], -lr, lsr #10
    55b8:	060d0501 	streq	r0, [sp], -r1, lsl #10
    55bc:	06250522 	strteq	r0, [r5], -r2, lsr #10
    55c0:	20014c03 	andcs	r4, r1, r3, lsl #24
    55c4:	03061505 	movweq	r1, #25861	; 0x6505
    55c8:	0d05201b 	stceq	0, cr2, [r5, #-108]	; 0xffffff94
    55cc:	05011703 	streq	r1, [r1, #-1795]	; 0xfffff8fd
    55d0:	05010621 	streq	r0, [r1, #-1569]	; 0xfffff9df
    55d4:	0522060d 	streq	r0, [r2, #-1549]!	; 0xfffff9f3
    55d8:	20730311 	rsbscs	r0, r3, r1, lsl r3
    55dc:	01061305 	tsteq	r6, r5, lsl #6
    55e0:	02003b05 	andeq	r3, r0, #5120	; 0x1400
    55e4:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
    55e8:	05300615 	ldreq	r0, [r0, #-1557]!	; 0xfffff9eb
    55ec:	0109030d 	tsteq	r9, sp, lsl #6
    55f0:	01062105 	tsteq	r6, r5, lsl #2
    55f4:	22060d05 	andcs	r0, r6, #320	; 0x140
    55f8:	05143505 	ldreq	r3, [r4, #-1285]	; 0xfffffafb
    55fc:	2e061611 	mcrcs	6, 0, r1, cr6, cr1, {0}
    5600:	40062905 	andmi	r2, r6, r5, lsl #18
    5604:	05150905 	ldreq	r0, [r5, #-2309]	; 0xfffff6fb
    5608:	0501061b 	streq	r0, [r1, #-1563]	; 0xfffff9e5
    560c:	05320609 	ldreq	r0, [r2, #-1545]!	; 0xfffff9f7
    5610:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
    5614:	200c0305 	andcs	r0, ip, r5, lsl #6
    5618:	03060d05 	movweq	r0, #27909	; 0x6d05
    561c:	21052e61 	tstcs	r5, r1, ror #28
    5620:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    5624:	25052206 	strcs	r2, [r5, #-518]	; 0xfffffdfa
    5628:	014c0306 	cmpeq	ip, r6, lsl #6
    562c:	060d0520 	streq	r0, [sp], -r0, lsr #10
    5630:	2000c703 	andcs	ip, r0, r3, lsl #14
    5634:	05322505 	ldreq	r2, [r2, #-1285]!	; 0xfffffafb
    5638:	09051534 	stmdbeq	r5, {r2, r4, r5, r8, sl, ip}
    563c:	06100514 			; <UNDEFINED> instruction: 0x06100514
    5640:	00030201 	andeq	r0, r3, r1, lsl #4
    5644:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    5648:	ac020500 	cfstr32ge	mvfx0, [r2], {-0}
    564c:	03100029 	tsteq	r0, #41	; 0x29
    5650:	06011383 	streq	r1, [r1], -r3, lsl #7
    5654:	06090501 	streq	r0, [r9], -r1, lsl #10
    5658:	142f0521 	strtne	r0, [pc], #-1313	; 5660 <__HEAP_SIZE+0x4660>
    565c:	05150905 	ldreq	r0, [r5, #-2309]	; 0xfffff6fb
    5660:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
    5664:	0530060d 	ldreq	r0, [r0, #-1549]!	; 0xfffff9f3
    5668:	2205303b 	andcs	r3, r5, #59	; 0x3b
    566c:	03110514 	tsteq	r1, #20, 10	; 0x5000000
    5670:	0d050109 	stfeqs	f0, [r5, #-36]	; 0xffffffdc
    5674:	061f054c 	ldreq	r0, [pc], -ip, asr #10
    5678:	06250501 	strteq	r0, [r5], -r1, lsl #10
    567c:	17090532 	smladxne	r9, r2, r5, r0
    5680:	01060b05 	tsteq	r6, r5, lsl #22
    5684:	22060d05 	andcs	r0, r6, #320	; 0x140
    5688:	05322505 	ldreq	r2, [r2, #-1285]!	; 0xfffffafb
    568c:	05051521 	streq	r1, [r5, #-1313]	; 0xfffffadf
    5690:	01021306 	tsteq	r2, r6, lsl #6
    5694:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    5698:	02050001 	andeq	r0, r5, #1
    569c:	100029cc 	andne	r2, r0, ip, asr #19
    56a0:	012cf403 	msreq	CPSR_fs, r3, lsl #8
    56a4:	29050106 	stmdbcs	r5, {r1, r2, r8}
    56a8:	2e360306 	cdpcs	3, 3, cr0, cr6, cr6, {0}
    56ac:	12030d05 	andne	r0, r3, #320	; 0x140
    56b0:	21051901 	tstcs	r5, r1, lsl #18
    56b4:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    56b8:	0f053006 	svceq	0x00053006
    56bc:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
    56c0:	b1030605 	tstlt	r3, r5, lsl #12
    56c4:	4305017f 	movwmi	r0, #20863	; 0x517f
    56c8:	0305051a 	movweq	r0, #21786	; 0x551a
    56cc:	0905010a 	stmdbeq	r5, {r1, r3, r8}
    56d0:	030d0516 	movweq	r0, #54550	; 0xd516
    56d4:	11052e18 	tstne	r5, r8, lsl lr
    56d8:	0f050106 	svceq	0x00050106
    56dc:	0611052e 	ldreq	r0, [r1], -lr, lsr #10
    56e0:	3c210330 	stccc	3, cr0, [r1], #-192	; 0xffffff40
    56e4:	05334705 	ldreq	r4, [r3, #-1797]!	; 0xfffff8fb
    56e8:	29051315 	stmdbcs	r5, {r0, r2, r4, r8, r9, ip}
    56ec:	57050106 	strpl	r0, [r5, -r6, lsl #2]
    56f0:	15053306 	strne	r3, [r5, #-774]	; 0xfffffcfa
    56f4:	06170514 			; <UNDEFINED> instruction: 0x06170514
    56f8:	06340501 	ldrteq	r0, [r4], -r1, lsl #10
    56fc:	13190530 	tstne	r9, #48, 10	; 0xc000000
    5700:	052f3205 	streq	r3, [pc, #-517]!	; 5503 <__HEAP_SIZE+0x4503>
    5704:	11051631 	tstne	r5, r1, lsr r6
    5708:	061a0515 			; <UNDEFINED> instruction: 0x061a0515
    570c:	00050201 	andeq	r0, r5, r1, lsl #4
    5710:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    5714:	00020500 	andeq	r0, r2, r0, lsl #10
    5718:	03000000 	movweq	r0, #0
    571c:	060121a7 	streq	r2, [r1], -r7, lsr #3
    5720:	06090501 	streq	r0, [r9], -r1, lsl #10
    5724:	3305132f 	movwcc	r1, #21295	; 0x532f
    5728:	154a0514 	strbne	r0, [sl, #-1300]	; 0xfffffaec
    572c:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    5730:	78030615 	stmdavc	r3, {r0, r2, r4, r9, sl}
    5734:	060d052e 	streq	r0, [sp], -lr, lsr #10
    5738:	05200b03 	streq	r0, [r0, #-2819]!	; 0xfffff4fd
    573c:	18051411 	stmdane	r5, {r0, r4, sl, ip}
    5740:	11050106 	tstne	r5, r6, lsl #2
    5744:	19052106 	stmdbne	r5, {r1, r2, r8, sp}
    5748:	11050106 	tstne	r5, r6, lsl #2
    574c:	13058406 	movwne	r8, #21510	; 0x5406
    5750:	14050106 	strne	r0, [r5], #-262	; 0xfffffefa
    5754:	0d053306 	stceq	3, cr3, [r5, #-24]	; 0xffffffe8
    5758:	31060106 	tstcc	r6, r6, lsl #2
    575c:	01060f05 	tsteq	r6, r5, lsl #30
    5760:	25060d05 	strcs	r0, [r6, #-3333]	; 0xfffff2fb
    5764:	01060f05 	tsteq	r6, r5, lsl #30
    5768:	27061105 	strcs	r1, [r6, -r5, lsl #2]
    576c:	01061305 	tsteq	r6, r5, lsl #6
    5770:	03061105 	movweq	r1, #24837	; 0x6105
    5774:	1305200a 	movwne	r2, #20490	; 0x500a
    5778:	09050106 	stmdbeq	r5, {r1, r2, r8}
    577c:	12052806 	andne	r2, r5, #393216	; 0x60000
    5780:	2c050106 	stfcss	f0, [r5], {6}
    5784:	09053006 	stmdbeq	r5, {r1, r2, ip, sp}
    5788:	06050514 			; <UNDEFINED> instruction: 0x06050514
    578c:	06110513 			; <UNDEFINED> instruction: 0x06110513
    5790:	052e5f03 	streq	r5, [lr, #-3843]!	; 0xfffff0fd
    5794:	2e010619 	mcrcs	6, 0, r0, cr1, cr9, {0}
    5798:	0611054a 	ldreq	r0, [r1], -sl, asr #10
    579c:	06190525 	ldreq	r0, [r9], -r5, lsr #10
    57a0:	054a2e01 	strbeq	r2, [sl, #-3585]	; 0xfffff1ff
    57a4:	05280615 	streq	r0, [r8, #-1557]!	; 0xfffff9eb
    57a8:	2e01061d 	mcrcs	6, 0, r0, cr1, cr13, {0}
    57ac:	0615053c 			; <UNDEFINED> instruction: 0x0615053c
    57b0:	05200a03 	streq	r0, [r0, #-2563]!	; 0xfffff5fd
    57b4:	2e01061d 	mcrcs	6, 0, r0, cr1, cr13, {0}
    57b8:	000b023c 	andeq	r0, fp, ip, lsr r2
    57bc:	01050101 	tsteq	r5, r1, lsl #2
    57c0:	00020500 	andeq	r0, r2, r0, lsl #10
    57c4:	03000000 	movweq	r0, #0
    57c8:	060123c2 	streq	r2, [r1], -r2, asr #7
    57cc:	06050501 	streq	r0, [r5], -r1, lsl #10
    57d0:	1434052f 	ldrtne	r0, [r4], #-1327	; 0xfffffad1
    57d4:	05163f05 	ldreq	r3, [r6, #-3845]	; 0xfffff0fb
    57d8:	05311605 	ldreq	r1, [r1, #-1541]!	; 0xfffff9fb
    57dc:	16053009 	strne	r3, [r5], -r9
    57e0:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    57e4:	052f4c06 	streq	r4, [pc, #-3078]!	; 4be6 <__HEAP_SIZE+0x3be6>
    57e8:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    57ec:	05300634 	ldreq	r0, [r0, #-1588]!	; 0xfffff9cc
    57f0:	01051405 	tsteq	r5, r5, lsl #8
    57f4:	02201306 	eoreq	r1, r0, #402653184	; 0x18000000
    57f8:	01010003 	tsteq	r1, r3
    57fc:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    5800:	00000002 	andeq	r0, r0, r2
    5804:	23e00300 	mvncs	r0, #0, 6
    5808:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    580c:	132f0609 			; <UNDEFINED> instruction: 0x132f0609
    5810:	05142c05 	ldreq	r2, [r4, #-3077]	; 0xfffff3fb
    5814:	0905141e 	stmdbeq	r5, {r1, r2, r3, r4, sl, ip}
    5818:	320d0514 	andcc	r0, sp, #20, 10	; 0x5000000
    581c:	01061105 	tsteq	r6, r5, lsl #2
    5820:	053c0f05 	ldreq	r0, [ip, #-3845]!	; 0xfffff0fb
    5824:	00c40319 	sbceq	r0, r4, r9, lsl r3
    5828:	0609052e 	streq	r0, [r9], -lr, lsr #10
    582c:	06120523 	ldreq	r0, [r2], -r3, lsr #10
    5830:	062f0501 	strteq	r0, [pc], -r1, lsl #10
    5834:	14090530 	strne	r0, [r9], #-1328	; 0xfffffad0
    5838:	13060505 	movwne	r0, #25861	; 0x6505
    583c:	03061105 	movweq	r1, #24837	; 0x6105
    5840:	172e7fb6 			; <UNDEFINED> instruction: 0x172e7fb6
    5844:	01061a05 	tsteq	r6, r5, lsl #20
    5848:	50061105 	andpl	r1, r6, r5, lsl #2
    584c:	05301505 	ldreq	r1, [r0, #-1285]!	; 0xfffffafb
    5850:	05010619 	streq	r0, [r1, #-1561]	; 0xfffff9e7
    5854:	19052017 	stmdbne	r5, {r0, r1, r2, r4, sp}
    5858:	22052206 	andcs	r2, r5, #1610612736	; 0x60000000
    585c:	19050106 	stmdbne	r5, {r1, r2, r8}
    5860:	2f054f06 	svccs	0x00054f06
    5864:	31050106 	tstcc	r5, r6, lsl #2
    5868:	11054006 	tstne	r5, r6
    586c:	01013115 	tsteq	r1, r5, lsl r1
    5870:	04020001 	streq	r0, [r2], #-1
    5874:	02005801 	andeq	r5, r0, #65536	; 0x10000
    5878:	002e0304 	eoreq	r0, lr, r4, lsl #6
    587c:	01030402 	tsteq	r3, r2, lsl #8
    5880:	03040200 	movweq	r0, #16896	; 0x4200
    5884:	04020001 	streq	r0, [r2], #-1
    5888:	02006603 	andeq	r6, r0, #3145728	; 0x300000
    588c:	00010304 	andeq	r0, r1, r4, lsl #6
    5890:	01030402 	tsteq	r3, r2, lsl #8
    5894:	03040200 	movweq	r0, #16896	; 0x4200
    5898:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    589c:	02002e03 	andeq	r2, r0, #3, 28	; 0x30
    58a0:	00200304 	eoreq	r0, r0, r4, lsl #6
    58a4:	20030402 	andcs	r0, r3, r2, lsl #8
    58a8:	03040200 	movweq	r0, #16896	; 0x4200
    58ac:	02002006 	andeq	r2, r0, #6
    58b0:	58060304 	stmdapl	r6, {r2, r8, r9}
    58b4:	03040200 	movweq	r0, #16896	; 0x4200
    58b8:	04020074 	streq	r0, [r2], #-116	; 0xffffff8c
    58bc:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    58c0:	05010304 	streq	r0, [r1, #-772]	; 0xfffffcfc
    58c4:	04020019 	streq	r0, [r2], #-25	; 0xffffffe7
    58c8:	010b0303 	tsteq	fp, r3, lsl #6
    58cc:	02002205 	andeq	r2, r0, #1342177280	; 0x50000000
    58d0:	01060304 	tsteq	r6, r4, lsl #6
    58d4:	02003d05 	andeq	r3, r0, #320	; 0x140
    58d8:	05200304 	streq	r0, [r0, #-772]!	; 0xfffffcfc
    58dc:	0402001b 	streq	r0, [r2], #-27	; 0xffffffe5
    58e0:	1d053c03 	stcne	12, cr3, [r5, #-12]
    58e4:	31053206 	tstcc	r5, r6, lsl #4
    58e8:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    58ec:	3c530319 	mrrccc	3, 1, r0, r3, cr9
    58f0:	00090220 	andeq	r0, r9, r0, lsr #4
    58f4:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    58f8:	00020500 	andeq	r0, r2, r0, lsl #10
    58fc:	03000000 	movweq	r0, #0
    5900:	060126bf 			; <UNDEFINED> instruction: 0x060126bf
    5904:	06090501 	streq	r0, [r9], -r1, lsl #10
    5908:	1447052f 	strbne	r0, [r7], #-1327	; 0xfffffad1
    590c:	05160905 	ldreq	r0, [r6, #-2309]	; 0xfffff6fb
    5910:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
    5914:	0b030609 	bleq	c7140 <__HEAP_SIZE+0xc6140>
    5918:	300d052e 	andcc	r0, sp, lr, lsr #10
    591c:	01061d05 	tsteq	r6, r5, lsl #26
    5920:	22060905 	andcs	r0, r6, #81920	; 0x14000
    5924:	05303105 	ldreq	r3, [r0, #-261]!	; 0xfffffefb
    5928:	05130605 	ldreq	r0, [r3, #-1541]	; 0xfffff9fb
    592c:	7003060d 	andvc	r0, r3, sp, lsl #12
    5930:	06120520 	ldreq	r0, [r2], -r0, lsr #10
    5934:	04022e01 	streq	r2, [r2], #-3585	; 0xfffff1ff
    5938:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    593c:	02050005 	andeq	r0, r5, #5
    5940:	00000000 	andeq	r0, r0, r0
    5944:	0126e003 			; <UNDEFINED> instruction: 0x0126e003
    5948:	09050106 	stmdbeq	r5, {r1, r2, r8}
    594c:	05132106 	ldreq	r2, [r3, #-262]	; 0xfffffefa
    5950:	09051437 	stmdbeq	r5, {r0, r1, r2, r4, r5, sl, ip}
    5954:	06110515 			; <UNDEFINED> instruction: 0x06110515
    5958:	00090501 	andeq	r0, r9, r1, lsl #10
    595c:	06040402 	streq	r0, [r4], -r2, lsl #8
    5960:	000d0532 	andeq	r0, sp, r2, lsr r5
    5964:	30040402 	andcc	r0, r4, r2, lsl #8
    5968:	02001505 	andeq	r1, r0, #20971520	; 0x1400000
    596c:	01060404 	tsteq	r6, r4, lsl #8
    5970:	02000905 	andeq	r0, r0, #81920	; 0x14000
    5974:	22060404 	andcs	r0, r6, #4, 8	; 0x4000000
    5978:	02003a05 	andeq	r3, r0, #20480	; 0x5000
    597c:	05300404 	ldreq	r0, [r0, #-1028]!	; 0xfffffbfc
    5980:	04020009 	streq	r0, [r2], #-9
    5984:	05051404 	streq	r1, [r5, #-1028]	; 0xfffffbfc
    5988:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    598c:	11051306 	tstne	r5, r6, lsl #6
    5990:	01040200 	mrseq	r0, R12_usr
    5994:	002e7303 	eoreq	r7, lr, r3, lsl #6
    5998:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    599c:	01000402 	tsteq	r0, r2, lsl #8
    59a0:	00050501 	andeq	r0, r5, r1, lsl #10
    59a4:	00000205 	andeq	r0, r0, r5, lsl #4
    59a8:	fc030000 	stc2	0, cr0, [r3], {-0}
    59ac:	01060126 	tsteq	r6, r6, lsr #2
    59b0:	21060905 	tstcs	r6, r5, lsl #18
    59b4:	3e051313 	mcrcc	3, 0, r1, cr5, cr3, {0}
    59b8:	15090514 	strne	r0, [r9, #-1300]	; 0xfffffaec
    59bc:	01061105 	tsteq	r6, r5, lsl #2
    59c0:	02000905 	andeq	r0, r0, #81920	; 0x14000
    59c4:	35060404 	strcc	r0, [r6, #-1028]	; 0xfffffbfc
    59c8:	02002205 	andeq	r2, r0, #1342177280	; 0x50000000
    59cc:	01060404 	tsteq	r6, r4, lsl #8
    59d0:	02000d05 	andeq	r0, r0, #320	; 0x140
    59d4:	30060404 	andcc	r0, r6, r4, lsl #8
    59d8:	02001505 	andeq	r1, r0, #20971520	; 0x1400000
    59dc:	01060404 	tsteq	r6, r4, lsl #8
    59e0:	02000905 	andeq	r0, r0, #81920	; 0x14000
    59e4:	22060404 	andcs	r0, r6, #4, 8	; 0x4000000
    59e8:	02004105 	andeq	r4, r0, #1073741825	; 0x40000001
    59ec:	05300404 	ldreq	r0, [r0, #-1028]!	; 0xfffffbfc
    59f0:	04020009 	streq	r0, [r2], #-9
    59f4:	05051404 	streq	r1, [r5, #-1028]	; 0xfffffbfc
    59f8:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    59fc:	11051306 	tstne	r5, r6, lsl #6
    5a00:	01040200 	mrseq	r0, R12_usr
    5a04:	002e7003 	eoreq	r7, lr, r3
    5a08:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    5a0c:	01000402 	tsteq	r0, r2, lsl #8
    5a10:	00050501 	andeq	r0, r5, r1, lsl #10
    5a14:	00000205 	andeq	r0, r0, r5, lsl #4
    5a18:	9d030000 	stcls	0, cr0, [r3, #-0]
    5a1c:	01060127 	tsteq	r6, r7, lsr #2
    5a20:	21060905 	tstcs	r6, r5, lsl #18
    5a24:	14460513 	strbne	r0, [r6], #-1299	; 0xfffffaed
    5a28:	05150905 	ldreq	r0, [r5, #-2309]	; 0xfffff6fb
    5a2c:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
    5a30:	09030609 	stmdbeq	r3, {r0, r3, r9, sl}
    5a34:	0611052e 	ldreq	r0, [r1], -lr, lsr #10
    5a38:	200b0501 	andcs	r0, fp, r1, lsl #10
    5a3c:	22060d05 	andcs	r0, r6, #320	; 0x140
    5a40:	01061705 	tsteq	r6, r5, lsl #14
    5a44:	0a030505 	beq	c6e60 <__HEAP_SIZE+0xc5e60>
    5a48:	060d052e 	streq	r0, [sp], -lr, lsr #10
    5a4c:	05206d03 	streq	r6, [r0, #-3331]!	; 0xfffff2fd
    5a50:	2e010612 	mcrcs	6, 0, r0, cr1, cr2, {0}
    5a54:	0d031505 	cfstr32eq	mvfx1, [r3, #-20]	; 0xffffffec
    5a58:	063c0520 	ldrteq	r0, [ip], -r0, lsr #10
    5a5c:	14090523 	strne	r0, [r9], #-1315	; 0xfffffadd
    5a60:	01061005 	tsteq	r6, r5
    5a64:	01000402 	tsteq	r0, r2, lsl #8
    5a68:	00050501 	andeq	r0, r5, r1, lsl #10
    5a6c:	2a040205 	bcs	106288 <__RAM_SIZE+0x6288>
    5a70:	c0031000 	andgt	r1, r3, r0
    5a74:	28050127 	stmdacs	r5, {r0, r1, r2, r5, r8}
    5a78:	14090513 	strne	r0, [r9], #-1299	; 0xfffffaed
    5a7c:	01062205 	tsteq	r6, r5, lsl #4
    5a80:	052e0b05 	streq	r0, [lr, #-2821]!	; 0xfffff4fb
    5a84:	0524060d 	streq	r0, [r4, #-1549]!	; 0xfffff9f3
    5a88:	05010621 	streq	r0, [r1, #-1569]	; 0xfffff9df
    5a8c:	054e060d 	strbeq	r0, [lr, #-1549]	; 0xfffff9f3
    5a90:	05010621 	streq	r0, [r1, #-1569]	; 0xfffff9df
    5a94:	053d0625 	ldreq	r0, [sp, #-1573]!	; 0xfffff9db
    5a98:	011f032b 	tsteq	pc, fp, lsr #6
    5a9c:	0e030d05 	cdpeq	13, 0, cr0, cr3, cr5, {0}
    5aa0:	002e0101 	eoreq	r0, lr, r1, lsl #2
    5aa4:	20030402 	andcs	r0, r3, r2, lsl #8
    5aa8:	03040200 	movweq	r0, #16896	; 0x4200
    5aac:	04020001 	streq	r0, [r2], #-1
    5ab0:	02002001 	andeq	r2, r0, #1
    5ab4:	00740404 	rsbseq	r0, r4, r4, lsl #8
    5ab8:	01040402 	tsteq	r4, r2, lsl #8
    5abc:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    5ac0:	04020001 	streq	r0, [r2], #-1
    5ac4:	02007404 	andeq	r7, r0, #4, 8	; 0x4000000
    5ac8:	00820704 	addeq	r0, r2, r4, lsl #14
    5acc:	90070402 	andls	r0, r7, r2, lsl #8
    5ad0:	07040200 	streq	r0, [r4, -r0, lsl #4]
    5ad4:	04020001 	streq	r0, [r2], #-1
    5ad8:	24052e07 	strcs	r2, [r5], #-3591	; 0xfffff1f9
    5adc:	07040200 	streq	r0, [r4, -r0, lsl #4]
    5ae0:	000d0513 	andeq	r0, sp, r3, lsl r5
    5ae4:	17070402 	strne	r0, [r7, -r2, lsl #8]
    5ae8:	02002905 	andeq	r2, r0, #81920	; 0x14000
    5aec:	12030704 	andne	r0, r3, #4, 14	; 0x100000
    5af0:	00050520 	andeq	r0, r5, r0, lsr #10
    5af4:	06070402 	streq	r0, [r7], -r2, lsl #8
    5af8:	000d0513 	andeq	r0, sp, r3, lsl r5
    5afc:	06050402 	streq	r0, [r5], -r2, lsl #8
    5b00:	08206703 	stmdaeq	r0!, {r0, r1, r8, r9, sl, sp, lr}
    5b04:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    5b08:	02050005 	andeq	r0, r5, #5
    5b0c:	00000000 	andeq	r0, r0, r0
    5b10:	0118b103 	tsteq	r8, r3, lsl #2
    5b14:	09050106 	stmdbeq	r5, {r1, r2, r8}
    5b18:	32052f06 	andcc	r2, r5, #6, 30
    5b1c:	14090514 	strne	r0, [r9], #-1300	; 0xfffffaec
    5b20:	05320d05 	ldreq	r0, [r2, #-3333]!	; 0xfffff2fb
    5b24:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    5b28:	04020027 	streq	r0, [r2], #-39	; 0xffffffd9
    5b2c:	05220604 	streq	r0, [r2, #-1540]!	; 0xfffff9fc
    5b30:	0402000d 	streq	r0, [r2], #-13
    5b34:	11051604 	tstne	r5, r4, lsl #12
    5b38:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    5b3c:	29050106 	stmdbcs	r5, {r1, r2, r8}
    5b40:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    5b44:	0d055006 	stceq	0, cr5, [r5, #-24]	; 0xffffffe8
    5b48:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    5b4c:	00110516 	andseq	r0, r1, r6, lsl r5
    5b50:	06040402 	streq	r0, [r4], -r2, lsl #8
    5b54:	000f0501 	andeq	r0, pc, r1, lsl #10
    5b58:	20040402 	andcs	r0, r4, r2, lsl #8
    5b5c:	22061105 	andcs	r1, r6, #1073741825	; 0x40000001
    5b60:	01061a05 	tsteq	r6, r5, lsl #20
    5b64:	4e062905 	vmlami.f16	s4, s12, s10	; <UNPREDICTABLE>
    5b68:	05150d05 	ldreq	r0, [r5, #-3333]	; 0xfffff2fb
    5b6c:	05144e11 	ldreq	r4, [r4, #-3601]	; 0xfffff1ef
    5b70:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    5b74:	0402002c 	streq	r0, [r2], #-44	; 0xffffffd4
    5b78:	05200601 	streq	r0, [r0, #-1537]!	; 0xfffff9ff
    5b7c:	04020011 	streq	r0, [r2], #-17	; 0xffffffef
    5b80:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    5b84:	34030609 	strcc	r0, [r3], #-1545	; 0xfffff9f7
    5b88:	320d052e 	andcc	r0, sp, #192937984	; 0xb800000
    5b8c:	06230514 			; <UNDEFINED> instruction: 0x06230514
    5b90:	2e0f0501 	cfsh32cs	mvfx0, mvfx15, #1
    5b94:	03062905 	movweq	r2, #26885	; 0x6905
    5b98:	0d05200c 	stceq	0, cr2, [r5, #-48]	; 0xffffffd0
    5b9c:	06170515 			; <UNDEFINED> instruction: 0x06170515
    5ba0:	2e0f0501 	cfsh32cs	mvfx0, mvfx15, #1
    5ba4:	29030505 	stmdbcs	r3, {r0, r2, r8, sl}
    5ba8:	0015052e 	andseq	r0, r5, lr, lsr #10
    5bac:	03010402 	movweq	r0, #5122	; 0x1402
    5bb0:	00207eef 	eoreq	r7, r0, pc, ror #29
    5bb4:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    5bb8:	20210306 	eorcs	r0, r1, r6, lsl #6
    5bbc:	01062d05 	tsteq	r6, r5, lsl #26
    5bc0:	054a1705 	strbeq	r1, [sl, #-1797]	; 0xfffff8fb
    5bc4:	04020066 	streq	r0, [r2], #-102	; 0xffffff9a
    5bc8:	052c0602 	streq	r0, [ip, #-1538]!	; 0xfffff9fe
    5bcc:	04020067 	streq	r0, [r2], #-103	; 0xffffff99
    5bd0:	00010602 	andeq	r0, r1, r2, lsl #12
    5bd4:	20020402 	andcs	r0, r2, r2, lsl #8
    5bd8:	26061905 	strcs	r1, [r6], -r5, lsl #18
    5bdc:	01063305 	tsteq	r6, r5, lsl #6
    5be0:	06110558 			; <UNDEFINED> instruction: 0x06110558
    5be4:	05013803 	streq	r3, [r1, #-2051]	; 0xfffff7fd
    5be8:	11053015 	tstne	r5, r5, lsl r0
    5bec:	3c090330 	stccc	3, cr0, [r9], {48}	; 0x30
    5bf0:	01062705 	tsteq	r6, r5, lsl #14
    5bf4:	052e1305 	streq	r1, [lr, #-773]!	; 0xfffffcfb
    5bf8:	0f030615 	svceq	0x00030615
    5bfc:	06290520 	strteq	r0, [r9], -r0, lsr #10
    5c00:	06150501 	ldreq	r0, [r5], -r1, lsl #10
    5c04:	062d0530 			; <UNDEFINED> instruction: 0x062d0530
    5c08:	2e170501 	cfmul32cs	mvfx0, mvfx7, mvfx1
    5c0c:	34061905 	strcc	r1, [r6], #-2309	; 0xfffff6fb
    5c10:	01062605 	tsteq	r6, r5, lsl #12
    5c14:	063e0520 	ldrteq	r0, [lr], -r0, lsr #10
    5c18:	053c6c03 	ldreq	r6, [ip, #-3075]!	; 0xfffff3fd
    5c1c:	19051315 	stmdbne	r5, {r0, r2, r4, r8, r9, ip}
    5c20:	053c1703 	ldreq	r1, [ip, #-1795]!	; 0xfffff8fd
    5c24:	23053429 	movwcs	r3, #21545	; 0x5429
    5c28:	06050517 			; <UNDEFINED> instruction: 0x06050517
    5c2c:	00090213 	andeq	r0, r9, r3, lsl r2
    5c30:	01050101 	tsteq	r5, r1, lsl #2
    5c34:	88020500 	stmdahi	r2, {r8, sl}
    5c38:	0310002a 	tsteq	r0, #42	; 0x2a
    5c3c:	060128fc 			; <UNDEFINED> instruction: 0x060128fc
    5c40:	06420501 	strbeq	r0, [r2], -r1, lsl #10
    5c44:	1420052f 	strtne	r0, [r0], #-1327	; 0xfffffad1
    5c48:	10030505 	andne	r0, r3, r5, lsl #10
    5c4c:	062e0501 	strteq	r0, [lr], -r1, lsl #10
    5c50:	2e050501 	cfsh32cs	mvfx0, mvfx5, #1
    5c54:	28053e06 	stmdacs	r5, {r1, r2, r9, sl, fp, ip, sp}
    5c58:	0601054c 	streq	r0, [r1], -ip, asr #10
    5c5c:	02022013 	andeq	r2, r2, #19
    5c60:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    5c64:	02050001 	andeq	r0, r5, #1
    5c68:	00000000 	andeq	r0, r0, r0
    5c6c:	01299a03 			; <UNDEFINED> instruction: 0x01299a03
    5c70:	57050106 	strpl	r0, [r5, -r6, lsl #2]
    5c74:	20052f06 	andcs	r2, r5, r6, lsl #30
    5c78:	163f0514 			; <UNDEFINED> instruction: 0x163f0514
    5c7c:	06170505 	ldreq	r0, [r7], -r5, lsl #10
    5c80:	27062e2e 	strcs	r2, [r6, -lr, lsr #28]
    5c84:	01012001 	tsteq	r1, r1
    5c88:	3c3c3c2e 	ldccc	12, cr3, [ip], #-184	; 0xffffff48
    5c8c:	20062006 	andcs	r2, r6, r6
    5c90:	3105143c 	tstcc	r5, ip, lsr r4
    5c94:	0601054c 	streq	r0, [r1], -ip, asr #10
    5c98:	00040213 	andeq	r0, r4, r3, lsl r2
    5c9c:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    5ca0:	a4020500 	strge	r0, [r2], #-1280	; 0xfffffb00
    5ca4:	0310002a 	tsteq	r0, #42	; 0x2a
    5ca8:	060129ba 			; <UNDEFINED> instruction: 0x060129ba
    5cac:	06630501 	strbteq	r0, [r3], -r1, lsl #10
    5cb0:	1424053d 	strtne	r0, [r4], #-1341	; 0xfffffac3
    5cb4:	0c030905 			; <UNDEFINED> instruction: 0x0c030905
    5cb8:	01200101 			; <UNDEFINED> instruction: 0x01200101
    5cbc:	3c3c3c01 	ldccc	12, cr3, [ip], #-4
    5cc0:	0620063c 			; <UNDEFINED> instruction: 0x0620063c
    5cc4:	05173c20 	ldreq	r3, [r7, #-3104]	; 0xfffff3e0
    5cc8:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
    5ccc:	3f05301a 	svccc	0x0005301a
    5cd0:	09053106 	stmdbeq	r5, {r1, r2, r8, ip, sp}
    5cd4:	30360513 	eorscc	r0, r6, r3, lsl r5
    5cd8:	13060505 	movwne	r0, #25861	; 0x6505
    5cdc:	01000302 	tsteq	r0, r2, lsl #6
    5ce0:	00010501 	andeq	r0, r1, r1, lsl #10
    5ce4:	2ae00205 	bcs	ff806500 <__StackTop+0xc7706500>
    5ce8:	dd031000 	stcle	0, cr1, [r3, #-0]
    5cec:	01060129 	tsteq	r6, r9, lsr #2
    5cf0:	21060505 	tstcs	r6, r5, lsl #10
    5cf4:	14370513 	ldrtne	r0, [r7], #-1299	; 0xfffffaed
    5cf8:	12030505 	andne	r0, r3, #20971520	; 0x1400000
    5cfc:	06160501 	ldreq	r0, [r6], -r1, lsl #10
    5d00:	20140501 	andscs	r0, r4, r1, lsl #10
    5d04:	21062305 	tstcs	r6, r5, lsl #6
    5d08:	01130505 	tsteq	r3, r5, lsl #10
    5d0c:	002e3c20 	eoreq	r3, lr, r0, lsr #24
    5d10:	58030402 	stmdapl	r3, {r1, sl}
    5d14:	03040200 	movweq	r0, #16896	; 0x4200
    5d18:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    5d1c:	02003c03 	andeq	r3, r0, #768	; 0x300
    5d20:	05140304 	ldreq	r0, [r4, #-772]	; 0xfffffcfc
    5d24:	0402001e 	streq	r0, [r2], #-30	; 0xffffffe2
    5d28:	00010603 	andeq	r0, r1, r3, lsl #12
    5d2c:	20030402 	andcs	r0, r3, r2, lsl #8
    5d30:	02000705 	andeq	r0, r0, #1310720	; 0x140000
    5d34:	05200304 	streq	r0, [r0, #-772]!	; 0xfffffcfc
    5d38:	01300609 	teqeq	r0, r9, lsl #12
    5d3c:	002e3c20 	eoreq	r3, lr, r0, lsr #24
    5d40:	4a030402 	bmi	c6d50 <__HEAP_SIZE+0xc5d50>
    5d44:	03040200 	movweq	r0, #16896	; 0x4200
    5d48:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    5d4c:	02003c03 	andeq	r3, r0, #768	; 0x300
    5d50:	00130304 	andseq	r0, r3, r4, lsl #6
    5d54:	01030402 	tsteq	r3, r2, lsl #8
    5d58:	03040200 	movweq	r0, #16896	; 0x4200
    5d5c:	04020001 	streq	r0, [r2], #-1
    5d60:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    5d64:	20060304 	andcs	r0, r6, r4, lsl #6
    5d68:	01040200 	mrseq	r0, R12_usr
    5d6c:	02004a06 	andeq	r4, r0, #24576	; 0x6000
    5d70:	002e0304 	eoreq	r0, lr, r4, lsl #6
    5d74:	01030402 	tsteq	r3, r2, lsl #8
    5d78:	03040200 	movweq	r0, #16896	; 0x4200
    5d7c:	04020001 	streq	r0, [r2], #-1
    5d80:	02006603 	andeq	r6, r0, #3145728	; 0x300000
    5d84:	00010304 	andeq	r0, r1, r4, lsl #6
    5d88:	01030402 	tsteq	r3, r2, lsl #8
    5d8c:	03040200 	movweq	r0, #16896	; 0x4200
    5d90:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    5d94:	00200603 	eoreq	r0, r0, r3, lsl #12
    5d98:	06030402 	streq	r0, [r3], -r2, lsl #8
    5d9c:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    5da0:	02002003 	andeq	r2, r0, #3
    5da4:	00200304 	eoreq	r0, r0, r4, lsl #6
    5da8:	06030402 	streq	r0, [r3], -r2, lsl #8
    5dac:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    5db0:	00580603 	subseq	r0, r8, r3, lsl #12
    5db4:	74030402 	strvc	r0, [r3], #-1026	; 0xfffffbfe
    5db8:	03040200 	movweq	r0, #16896	; 0x4200
    5dbc:	04020001 	streq	r0, [r2], #-1
    5dc0:	0d050103 	stfeqs	f0, [r5, #-12]
    5dc4:	03040200 	movweq	r0, #16896	; 0x4200
    5dc8:	05010c03 	streq	r0, [r1, #-3075]	; 0xfffff3fd
    5dcc:	04020009 	streq	r0, [r2], #-9
    5dd0:	02003601 	andeq	r3, r0, #1048576	; 0x100000
    5dd4:	05170104 	ldreq	r0, [r7, #-260]	; 0xfffffefc
    5dd8:	0402001b 	streq	r0, [r2], #-27	; 0xffffffe5
    5ddc:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    5de0:	04020036 	streq	r0, [r2], #-54	; 0xffffffca
    5de4:	0b052001 	bleq	14ddf0 <__RAM_SIZE+0x4ddf0>
    5de8:	01040200 	mrseq	r0, R12_usr
    5dec:	060d053c 			; <UNDEFINED> instruction: 0x060d053c
    5df0:	21051633 	tstcs	r5, r3, lsr r6
    5df4:	01050106 	tsteq	r5, r6, lsl #2
    5df8:	053c1a03 	ldreq	r1, [ip, #-2563]!	; 0xfffff5fd
    5dfc:	04020005 	streq	r0, [r2], #-5
    5e00:	bf030601 	svclt	0x00030601
    5e04:	0200207f 	andeq	r2, r0, #127	; 0x7f
    5e08:	3c060104 	stfccs	f0, [r6], {4}
    5e0c:	02000905 	andeq	r0, r0, #81920	; 0x14000
    5e10:	16060104 	strne	r0, [r6], -r4, lsl #2
    5e14:	01040200 	mrseq	r0, R12_usr
    5e18:	03063c06 	movweq	r3, #27654	; 0x6c06
    5e1c:	2e010115 	mcrcs	1, 0, r0, cr1, cr5, {0}
    5e20:	06200101 	strteq	r0, [r0], -r1, lsl #2
    5e24:	20200620 	eorcs	r0, r0, r0, lsr #12
    5e28:	20062020 	andcs	r2, r6, r0, lsr #32
    5e2c:	0315053c 	tsteq	r5, #60, 10	; 0xf000000
    5e30:	34050112 	strcc	r0, [r5], #-274	; 0xfffffeee
    5e34:	20140306 	andscs	r0, r4, r6, lsl #6
    5e38:	05130505 	ldreq	r0, [r3, #-1285]	; 0xfffffafb
    5e3c:	0201060c 	andeq	r0, r1, #12, 12	; 0xc00000
    5e40:	0101000e 	tsteq	r1, lr
    5e44:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    5e48:	00000002 	andeq	r0, r0, r2
    5e4c:	2abb0300 	bcs	feec6a54 <__StackTop+0xc6dc6a54>
    5e50:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    5e54:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
    5e58:	3f051450 	svccc	0x00051450
    5e5c:	15050516 	strne	r0, [r5, #-1302]	; 0xfffffaea
    5e60:	27062e06 	strcs	r2, [r6, -r6, lsl #28]
    5e64:	01061405 	tsteq	r6, r5, lsl #8
    5e68:	21062305 	tstcs	r6, r5, lsl #6
    5e6c:	01130505 	tsteq	r3, r5, lsl #10
    5e70:	003c3c20 	eorseq	r3, ip, r0, lsr #24
    5e74:	3c030402 	cfstrscc	mvf0, [r3], {2}
    5e78:	03040200 	movweq	r0, #16896	; 0x4200
    5e7c:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    5e80:	09053c03 	stmdbeq	r5, {r0, r1, sl, fp, ip, sp}
    5e84:	03040200 	movweq	r0, #16896	; 0x4200
    5e88:	05010c03 	streq	r0, [r1, #-3075]	; 0xfffff3fd
    5e8c:	04020005 	streq	r0, [r2], #-5
    5e90:	02003503 	andeq	r3, r0, #12582912	; 0xc00000
    5e94:	00010304 	andeq	r0, r1, r4, lsl #6
    5e98:	20030402 	andcs	r0, r3, r2, lsl #8
    5e9c:	03040200 	movweq	r0, #16896	; 0x4200
    5ea0:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    5ea4:	02002e03 	andeq	r2, r0, #3, 28	; 0x30
    5ea8:	004a0304 	subeq	r0, sl, r4, lsl #6
    5eac:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
    5eb0:	03040200 	movweq	r0, #16896	; 0x4200
    5eb4:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    5eb8:	02001303 	andeq	r1, r0, #201326592	; 0xc000000
    5ebc:	00010304 	andeq	r0, r1, r4, lsl #6
    5ec0:	01030402 	tsteq	r3, r2, lsl #8
    5ec4:	03040200 	movweq	r0, #16896	; 0x4200
    5ec8:	04020001 	streq	r0, [r2], #-1
    5ecc:	00200603 	eoreq	r0, r0, r3, lsl #12
    5ed0:	06010402 	streq	r0, [r1], -r2, lsl #8
    5ed4:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    5ed8:	02002e03 	andeq	r2, r0, #3, 28	; 0x30
    5edc:	00010304 	andeq	r0, r1, r4, lsl #6
    5ee0:	01030402 	tsteq	r3, r2, lsl #8
    5ee4:	03040200 	movweq	r0, #16896	; 0x4200
    5ee8:	04020066 	streq	r0, [r2], #-102	; 0xffffff9a
    5eec:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    5ef0:	00010304 	andeq	r0, r1, r4, lsl #6
    5ef4:	20030402 	andcs	r0, r3, r2, lsl #8
    5ef8:	03040200 	movweq	r0, #16896	; 0x4200
    5efc:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    5f00:	02002003 	andeq	r2, r0, #3
    5f04:	00200304 	eoreq	r0, r0, r4, lsl #6
    5f08:	06030402 	streq	r0, [r3], -r2, lsl #8
    5f0c:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    5f10:	00580603 	subseq	r0, r8, r3, lsl #12
    5f14:	74030402 	strvc	r0, [r3], #-1026	; 0xfffffbfe
    5f18:	03040200 	movweq	r0, #16896	; 0x4200
    5f1c:	04020001 	streq	r0, [r2], #-1
    5f20:	09050103 	stmdbeq	r5, {r0, r1, r8}
    5f24:	03040200 	movweq	r0, #16896	; 0x4200
    5f28:	001b0516 	andseq	r0, fp, r6, lsl r5
    5f2c:	06030402 	streq	r0, [r3], -r2, lsl #8
    5f30:	00360501 	eorseq	r0, r6, r1, lsl #10
    5f34:	20030402 	andcs	r0, r3, r2, lsl #8
    5f38:	02000b05 	andeq	r0, r0, #5120	; 0x1400
    5f3c:	053c0304 	ldreq	r0, [ip, #-772]!	; 0xfffffcfc
    5f40:	0534060d 	ldreq	r0, [r4, #-1549]!	; 0xfffff9f3
    5f44:	05010621 	streq	r0, [r1, #-1569]	; 0xfffff9df
    5f48:	11030634 	tstne	r3, r4, lsr r6
    5f4c:	0601053c 			; <UNDEFINED> instruction: 0x0601053c
    5f50:	00050513 	andeq	r0, r5, r3, lsl r5
    5f54:	06010402 	streq	r0, [r1], -r2, lsl #8
    5f58:	00205003 	eoreq	r5, r0, r3
    5f5c:	06010402 	streq	r0, [r1], -r2, lsl #8
    5f60:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    5f64:	13030601 	movwne	r0, #13825	; 0x3601
    5f68:	000b0201 	andeq	r0, fp, r1, lsl #4
    5f6c:	01050101 	tsteq	r5, r1, lsl #2
    5f70:	00020500 	andeq	r0, r2, r0, lsl #10
    5f74:	03000000 	movweq	r0, #0
    5f78:	06012b82 	streq	r2, [r1], -r2, lsl #23
    5f7c:	06310501 	ldrteq	r0, [r1], -r1, lsl #10
    5f80:	141e052f 	ldrne	r0, [lr], #-1327	; 0xfffffad1
    5f84:	05130505 	ldreq	r0, [r3, #-1285]	; 0xfffffafb
    5f88:	23053009 	movwcs	r3, #20489	; 0x5009
    5f8c:	09050106 	stmdbeq	r5, {r1, r2, r8}
    5f90:	24053d06 	strcs	r3, [r5], #-3334	; 0xfffff2fa
    5f94:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    5f98:	27053e06 	strcs	r3, [r5, -r6, lsl #28]
    5f9c:	06010530 			; <UNDEFINED> instruction: 0x06010530
    5fa0:	05022013 	streq	r2, [r2, #-19]	; 0xffffffed
    5fa4:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    5fa8:	02050001 	andeq	r0, r5, #1
    5fac:	10002bc4 	andne	r2, r0, r4, asr #23
    5fb0:	012b9203 			; <UNDEFINED> instruction: 0x012b9203
    5fb4:	05133905 	ldreq	r3, [r3, #-2309]	; 0xfffff6fb
    5fb8:	1f051505 	svcne	0x00051505
    5fbc:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    5fc0:	20053d06 	andcs	r3, r5, r6, lsl #26
    5fc4:	2f050106 	svccs	0x00050106
    5fc8:	01053e06 	tsteq	r5, r6, lsl #28
    5fcc:	06021306 	streq	r1, [r2], -r6, lsl #6
    5fd0:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    5fd4:	02050001 	andeq	r0, r5, #1
    5fd8:	10002bdc 	ldrdne	r2, [r0], -ip
    5fdc:	012b9f03 			; <UNDEFINED> instruction: 0x012b9f03
    5fe0:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    5fe4:	40053d06 	andmi	r3, r5, r6, lsl #26
    5fe8:	141e0514 	ldrne	r0, [lr], #-1300	; 0xfffffaec
    5fec:	05132205 	ldreq	r2, [r3, #-517]	; 0xfffffdfb
    5ff0:	09051405 	stmdbeq	r5, {r0, r2, sl, ip}
    5ff4:	061a0531 			; <UNDEFINED> instruction: 0x061a0531
    5ff8:	06090501 	streq	r0, [r9], -r1, lsl #10
    5ffc:	0644052f 	strbeq	r0, [r4], -pc, lsr #10
    6000:	201a0501 	andscs	r0, sl, r1, lsl #10
    6004:	23060d05 	movwcs	r0, #27909	; 0x6d05
    6008:	01061d05 	tsteq	r6, r5, lsl #26
    600c:	054a0f05 	strbeq	r0, [sl, #-3845]	; 0xfffff0fb
    6010:	05240611 	streq	r0, [r4, #-1553]!	; 0xfffff9ef
    6014:	0501061d 	streq	r0, [r1, #-1565]	; 0xfffff9e3
    6018:	05202e2e 	streq	r2, [r0, #-3630]!	; 0xfffff1d2
    601c:	052f0611 	streq	r0, [pc, #-1553]!	; 5a13 <__HEAP_SIZE+0x4a13>
    6020:	20010619 	andcs	r0, r1, r9, lsl r6
    6024:	03060505 	movweq	r0, #25861	; 0x6505
    6028:	30050127 	andcc	r0, r5, r7, lsr #2
    602c:	14050530 	strne	r0, [r5], #-1328	; 0xfffffad0
    6030:	13060105 	movwne	r0, #24837	; 0x6105
    6034:	03060d05 	movweq	r0, #27909	; 0x6d05
    6038:	11052e5a 	tstne	r5, sl, asr lr
    603c:	0f050106 	svceq	0x00050106
    6040:	06090520 	streq	r0, [r9], -r0, lsr #10
    6044:	053c0a03 	ldreq	r0, [ip, #-2563]!	; 0xfffff5fd
    6048:	0501061f 	streq	r0, [r1, #-1567]	; 0xfffff9e1
    604c:	3e052e0b 	cdpcc	14, 0, cr2, cr5, cr11, {0}
    6050:	01040200 	mrseq	r0, R12_usr
    6054:	060d053c 			; <UNDEFINED> instruction: 0x060d053c
    6058:	1c051335 	stcne	3, cr1, [r5], {53}	; 0x35
    605c:	15050106 	strne	r0, [r5, #-262]	; 0xfffffefa
    6060:	211c052d 	tstcs	ip, sp, lsr #10
    6064:	22060e05 	andcs	r0, r6, #5, 28	; 0x50
    6068:	01061005 	tsteq	r6, r5
    606c:	03060d05 	movweq	r0, #27909	; 0x6d05
    6070:	1c052e09 	stcne	14, cr2, [r5], {9}
    6074:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    6078:	15052f06 	strne	r2, [r5, #-3846]	; 0xfffff0fa
    607c:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    6080:	7903060d 	stmdbvc	r3, {r0, r2, r3, r9, sl}
    6084:	061c0520 	ldreq	r0, [ip], -r0, lsr #10
    6088:	060d0501 	streq	r0, [sp], -r1, lsl #10
    608c:	0620063d 			; <UNDEFINED> instruction: 0x0620063d
    6090:	0615052f 	ldreq	r0, [r5], -pc, lsr #10
    6094:	19052001 	stmdbne	r5, {r0, sp}
    6098:	20206c03 	eorcs	r6, r0, r3, lsl #24
    609c:	01000802 	tsteq	r0, r2, lsl #16
    60a0:	00010501 	andeq	r0, r1, r1, lsl #10
    60a4:	2c580205 	lfmcs	f0, 2, [r8], {5}
    60a8:	e3031000 	movw	r1, #12288	; 0x3000
    60ac:	2205012b 	andcs	r0, r5, #-1073741814	; 0xc000000a
    60b0:	15050513 	strne	r0, [r5, #-1299]	; 0xfffffaed
    60b4:	01062905 	tsteq	r6, r5, lsl #18
    60b8:	3e062305 	cdpcc	3, 0, cr2, cr6, cr5, {0}
    60bc:	13060105 	movwne	r0, #24837	; 0x6105
    60c0:	01000302 	tsteq	r0, r2, lsl #6
    60c4:	00050501 	andeq	r0, r5, r1, lsl #10
    60c8:	2c640205 	sfmcs	f0, 2, [r4], #-20	; 0xffffffec
    60cc:	fc031000 	stc2	0, cr1, [r3], {-0}
    60d0:	0d05012d 	stfeqs	f0, [r5, #-180]	; 0xffffff4c
    60d4:	15090515 	strne	r0, [r9, #-1301]	; 0xfffffaeb
    60d8:	05143105 	ldreq	r3, [r4, #-261]	; 0xfffffefb
    60dc:	0d051609 	stceq	6, cr1, [r5, #-36]	; 0xffffffdc
    60e0:	0b050106 	bleq	146500 <__RAM_SIZE+0x46500>
    60e4:	060e052e 	streq	r0, [lr], -lr, lsr #10
    60e8:	06200525 	strteq	r0, [r0], -r5, lsr #10
    60ec:	2e100501 	cfmul32cs	mvfx0, mvfx0, mvfx1
    60f0:	25060e05 	strcs	r0, [r6, #-3589]	; 0xfffff1fb
    60f4:	01061f05 	tsteq	r6, r5, lsl #30
    60f8:	052e1005 	streq	r1, [lr, #-5]!
    60fc:	05280612 	streq	r0, [r8, #-1554]!	; 0xfffff9ee
    6100:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    6104:	14052e61 	strne	r2, [r5], #-3681	; 0xfffff19f
    6108:	031a053c 	tsteq	sl, #60, 10	; 0xf000000
    610c:	15052e68 	strne	r2, [r5, #-3688]	; 0xfffff198
    6110:	332e0903 			; <UNDEFINED> instruction: 0x332e0903
    6114:	03190534 	tsteq	r9, #52, 10	; 0xd000000
    6118:	25052e0a 	strcs	r2, [r5, #-3594]	; 0xfffff1f6
    611c:	3b052506 	blcc	14f53c <__RAM_SIZE+0x4f53c>
    6120:	14090515 	strne	r0, [r9], #-1301	; 0xfffffaeb
    6124:	13060505 	movwne	r0, #25861	; 0x6505
    6128:	01000b02 	tsteq	r0, r2, lsl #22
    612c:	00050501 	andeq	r0, r5, r1, lsl #10
    6130:	00000205 	andeq	r0, r0, r5, lsl #4
    6134:	e3030000 	movw	r0, #12288	; 0x3000
    6138:	01060131 	tsteq	r6, r1, lsr r1
    613c:	21060905 	tstcs	r6, r5, lsl #18
    6140:	38051313 	stmdacc	r5, {r0, r1, r4, r8, r9, ip}
    6144:	14090514 	strne	r0, [r9], #-1300	; 0xfffffaec
    6148:	01061105 	tsteq	r6, r5, lsl #2
    614c:	02000d05 	andeq	r0, r0, #320	; 0x140
    6150:	32060404 	andcc	r0, r6, #4, 8	; 0x4000000
    6154:	02000905 	andeq	r0, r0, #81920	; 0x14000
    6158:	051a0404 	ldreq	r0, [sl, #-1028]	; 0xfffffbfc
    615c:	04020024 	streq	r0, [r2], #-36	; 0xffffffdc
    6160:	05010604 	streq	r0, [r1, #-1540]	; 0xfffff9fc
    6164:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    6168:	053e0604 	ldreq	r0, [lr, #-1540]!	; 0xfffff9fc
    616c:	04020009 	streq	r0, [r2], #-9
    6170:	05051404 	streq	r1, [r5, #-1028]	; 0xfffffbfc
    6174:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    6178:	11051306 	tstne	r5, r6, lsl #6
    617c:	01040200 	mrseq	r0, R12_usr
    6180:	00206f03 	eoreq	r6, r0, r3, lsl #30
    6184:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    6188:	01000302 	tsteq	r0, r2, lsl #6
    618c:	00090501 	andeq	r0, r9, r1, lsl #10
    6190:	00000205 	andeq	r0, r0, r5, lsl #4
    6194:	d0030000 	andle	r0, r3, r0
    6198:	0d050132 	stfeqs	f0, [r5, #-200]	; 0xffffff38
    619c:	14330513 	ldrtne	r0, [r3], #-1299	; 0xfffffaed
    61a0:	05170d05 	ldreq	r0, [r7, #-3333]	; 0xfffff2fb
    61a4:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    61a8:	0530063d 	ldreq	r0, [r0, #-1597]!	; 0xfffff9c3
    61ac:	0905140d 	stmdbeq	r5, {r0, r2, r3, sl, ip}
    61b0:	04021306 	streq	r1, [r2], #-774	; 0xfffffcfa
    61b4:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    61b8:	02050005 	andeq	r0, r5, #5
    61bc:	00000000 	andeq	r0, r0, r0
    61c0:	0132f303 	teqeq	r2, r3, lsl #6	; <UNPREDICTABLE>
    61c4:	05130905 	ldreq	r0, [r3, #-2309]	; 0xfffff6fb
    61c8:	0905143f 	stmdbeq	r5, {r0, r1, r2, r3, r4, r5, sl, ip}
    61cc:	060b0514 			; <UNDEFINED> instruction: 0x060b0514
    61d0:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    61d4:	06190523 	ldreq	r0, [r9], -r3, lsr #10
    61d8:	16052e01 	strne	r2, [r5], -r1, lsl #28
    61dc:	05207903 	streq	r7, [r0, #-2307]!	; 0xfffff6fd
    61e0:	0d030640 	stceq	6, cr0, [r3, #-256]	; 0xffffff00
    61e4:	14090520 	strne	r0, [r9], #-1312	; 0xfffffae0
    61e8:	13060505 	movwne	r0, #25861	; 0x6505
    61ec:	01000302 	tsteq	r0, r2, lsl #6
    61f0:	00050501 	andeq	r0, r5, r1, lsl #10
    61f4:	00000205 	andeq	r0, r0, r5, lsl #4
    61f8:	8c030000 	stchi	0, cr0, [r3], {-0}
    61fc:	09050133 	stmdbeq	r5, {r0, r1, r4, r5, r8}
    6200:	142c0513 	strtne	r0, [ip], #-1299	; 0xfffffaed
    6204:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    6208:	0501061f 	streq	r0, [r1, #-1567]	; 0xfffff9e1
    620c:	11052e0b 	tstne	r5, fp, lsl #28
    6210:	200a0306 	andcs	r0, sl, r6, lsl #6
    6214:	01062a05 	tsteq	r6, r5, lsl #20
    6218:	052e1305 	streq	r1, [lr, #-773]!	; 0xfffffcfb
    621c:	3605261d 			; <UNDEFINED> instruction: 0x3605261d
    6220:	09052806 	stmdbeq	r5, {r1, r2, fp, sp}
    6224:	06050514 			; <UNDEFINED> instruction: 0x06050514
    6228:	031d0513 	tsteq	sp, #79691776	; 0x4c00000
    622c:	15052071 	strne	r2, [r5, #-113]	; 0xffffff8f
    6230:	022e7603 	eoreq	r7, lr, #3145728	; 0x300000
    6234:	01010006 	tsteq	r1, r6
    6238:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    623c:	00000002 	andeq	r0, r0, r2
    6240:	33b40300 			; <UNDEFINED> instruction: 0x33b40300
    6244:	13090501 	movwne	r0, #38145	; 0x9501
    6248:	14390513 	ldrtne	r0, [r9], #-1299	; 0xfffffaed
    624c:	05160905 	ldreq	r0, [r6, #-2309]	; 0xfffff6fb
    6250:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
    6254:	2e780305 	cdpcs	3, 7, cr0, cr8, cr5, {0}
    6258:	03060d05 	movweq	r0, #27909	; 0x6d05
    625c:	21052e0d 	tstcs	r5, sp, lsl #28
    6260:	3c050106 	stfccs	f0, [r5], {6}
    6264:	3c0f0520 	cfstr32cc	mvfx0, [pc], {32}
    6268:	33061105 	movwcc	r1, #24837	; 0x6105
    626c:	01061705 	tsteq	r6, r5, lsl #14
    6270:	05201305 	streq	r1, [r0, #-773]!	; 0xfffffcfb
    6274:	05300615 	ldreq	r0, [r0, #-1557]!	; 0xfffff9eb
    6278:	11056a2d 	tstne	r5, sp, lsr #20
    627c:	06150517 			; <UNDEFINED> instruction: 0x06150517
    6280:	66130501 	ldrvs	r0, [r3], -r1, lsl #10
    6284:	03061505 	movweq	r1, #25861	; 0x6505
    6288:	40052e1f 	andmi	r2, r5, pc, lsl lr
    628c:	32050106 	andcc	r0, r5, #-2147483647	; 0x80000001
    6290:	2619053c 			; <UNDEFINED> instruction: 0x2619053c
    6294:	1d030505 	cfstr32ne	mvfx0, [r3, #-20]	; 0xffffffec
    6298:	06150520 	ldreq	r0, [r5], -r0, lsr #10
    629c:	05204003 	streq	r4, [r0, #-3]!
    62a0:	2e010619 	mcrcs	6, 0, r0, cr1, cr9, {0}
    62a4:	03063105 	movweq	r3, #24837	; 0x6105
    62a8:	15052e09 	strne	r2, [r5, #-3593]	; 0xfffff1f7
    62ac:	06400516 			; <UNDEFINED> instruction: 0x06400516
    62b0:	3c320501 	cfldr32cc	mvfx0, [r2], #-4
    62b4:	21061505 	tstcs	r6, r5, lsl #10
    62b8:	00010101 	andeq	r0, r1, r1, lsl #2
    62bc:	4a010402 	bmi	472cc <__HEAP_SIZE+0x462cc>
    62c0:	03040200 	movweq	r0, #16896	; 0x4200
    62c4:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    62c8:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    62cc:	00010304 	andeq	r0, r1, r4, lsl #6
    62d0:	66030402 	strvs	r0, [r3], -r2, lsl #8
    62d4:	03040200 	movweq	r0, #16896	; 0x4200
    62d8:	04020001 	streq	r0, [r2], #-1
    62dc:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    62e0:	00200304 	eoreq	r0, r0, r4, lsl #6
    62e4:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
    62e8:	03040200 	movweq	r0, #16896	; 0x4200
    62ec:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    62f0:	02002003 	andeq	r2, r0, #3
    62f4:	20060304 	andcs	r0, r6, r4, lsl #6
    62f8:	03040200 	movweq	r0, #16896	; 0x4200
    62fc:	02005806 	andeq	r5, r0, #393216	; 0x60000
    6300:	00740304 	rsbseq	r0, r4, r4, lsl #6
    6304:	01030402 	tsteq	r3, r2, lsl #8
    6308:	03040200 	movweq	r0, #16896	; 0x4200
    630c:	00190501 	andseq	r0, r9, r1, lsl #10
    6310:	06030402 	streq	r0, [r3], -r2, lsl #8
    6314:	05011503 	streq	r1, [r1, #-1283]	; 0xfffffafd
    6318:	05320611 	ldreq	r0, [r2, #-1553]!	; 0xfffff9ef
    631c:	05010625 	streq	r0, [r1, #-1573]	; 0xfffff9db
    6320:	13052044 	movwne	r2, #20548	; 0x5044
    6324:	0314053c 	tsteq	r4, #60, 10	; 0xf000000
    6328:	202e7fbc 	strhtcs	r7, [lr], -ip
    632c:	03050520 	movweq	r0, #21792	; 0x5520
    6330:	052000dd 	streq	r0, [r0, #-221]!	; 0xffffff23
    6334:	2070031d 	rsbscs	r0, r0, sp, lsl r3
    6338:	03062505 	movweq	r2, #25861	; 0x6505
    633c:	3405200a 	strcc	r2, [r5], #-10
    6340:	14090515 	strne	r0, [r9], #-1301	; 0xfffffaeb
    6344:	01061005 	tsteq	r6, r5
    6348:	01000802 	tsteq	r0, r2, lsl #16
    634c:	00050501 	andeq	r0, r5, r1, lsl #10
    6350:	2cac0205 	sfmcs	f0, 4, [ip], #20
    6354:	9b031000 	blls	ca35c <__HEAP_SIZE+0xc935c>
    6358:	09050134 	stmdbeq	r5, {r2, r4, r5, r8}
    635c:	3c051313 	stccc	3, cr1, [r5], {19}
    6360:	14090514 	strne	r0, [r9], #-1300	; 0xfffffaec
    6364:	01060b05 	tsteq	r6, r5, lsl #22
    6368:	7a030505 	bvc	c7784 <__HEAP_SIZE+0xc6784>
    636c:	0632052e 	ldrteq	r0, [r2], -lr, lsr #10
    6370:	052e0c03 	streq	r0, [lr, #-3075]!	; 0xfffff3fd
    6374:	0d051331 	stceq	3, cr1, [r5, #-196]	; 0xffffff3c
    6378:	06140513 			; <UNDEFINED> instruction: 0x06140513
    637c:	20250501 	eorcs	r0, r5, r1, lsl #10
    6380:	32060d05 	andcc	r0, r6, #320	; 0x140
    6384:	01061605 	tsteq	r6, r5, lsl #12
    6388:	05202b05 	streq	r2, [r0, #-2821]!	; 0xfffff4fb
    638c:	1105200f 	tstne	r5, pc
    6390:	13053106 	movwne	r3, #20742	; 0x5106
    6394:	14050106 	strne	r0, [r5], #-262	; 0xfffffefa
    6398:	05206d03 	streq	r6, [r0, #-3331]!	; 0xfffff2fd
    639c:	ce030625 	cfmadd32gt	mvax1, mvfx0, mvfx3, mvfx5
    63a0:	37052000 	strcc	r2, [r5, -r0]
    63a4:	14090515 	strne	r0, [r9], #-1301	; 0xfffffaeb
    63a8:	13060505 	movwne	r0, #25861	; 0x6505
    63ac:	03061505 	movweq	r1, #25861	; 0x6505
    63b0:	19052046 	stmdbne	r5, {r1, r2, r6, sp}
    63b4:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
    63b8:	05340631 	ldreq	r0, [r4, #-1585]!	; 0xfffff9cf
    63bc:	15051752 	strne	r1, [r5, #-1874]	; 0xfffff8ae
    63c0:	062e0513 			; <UNDEFINED> instruction: 0x062e0513
    63c4:	20270501 	eorcs	r0, r7, r1, lsl #10
    63c8:	25061505 	strcs	r1, [r6, #-1285]	; 0xfffffafb
    63cc:	0101013d 	tsteq	r1, sp, lsr r1
    63d0:	01040200 	mrseq	r0, R12_usr
    63d4:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    63d8:	02002e03 	andeq	r2, r0, #3, 28	; 0x30
    63dc:	00010304 	andeq	r0, r1, r4, lsl #6
    63e0:	01030402 	tsteq	r3, r2, lsl #8
    63e4:	03040200 	movweq	r0, #16896	; 0x4200
    63e8:	04020066 	streq	r0, [r2], #-102	; 0xffffff9a
    63ec:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    63f0:	00010304 	andeq	r0, r1, r4, lsl #6
    63f4:	20030402 	andcs	r0, r3, r2, lsl #8
    63f8:	03040200 	movweq	r0, #16896	; 0x4200
    63fc:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    6400:	02002003 	andeq	r2, r0, #3
    6404:	00200304 	eoreq	r0, r0, r4, lsl #6
    6408:	06030402 	streq	r0, [r3], -r2, lsl #8
    640c:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    6410:	00580603 	subseq	r0, r8, r3, lsl #12
    6414:	74030402 	strvc	r0, [r3], #-1026	; 0xfffffbfe
    6418:	03040200 	movweq	r0, #16896	; 0x4200
    641c:	04020001 	streq	r0, [r2], #-1
    6420:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    6424:	14030304 	strne	r0, [r3], #-772	; 0xfffffcfc
    6428:	001d0501 	andseq	r0, sp, r1, lsl #10
    642c:	06030402 	streq	r0, [r3], -r2, lsl #8
    6430:	03140501 	tsteq	r4, #4194304	; 0x400000
    6434:	05052e40 	streq	r2, [r5, #-3648]	; 0xfffff1c0
    6438:	2000d403 	andcs	sp, r0, r3, lsl #8
    643c:	ac031405 	cfstrsge	mvf1, [r3], {5}
    6440:	0220207f 	eoreq	r2, r0, #127	; 0x7f
    6444:	01010006 	tsteq	r1, r6
    6448:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    644c:	00000002 	andeq	r0, r0, r2
    6450:	34fa0300 	ldrbtcc	r0, [sl], #768	; 0x300
    6454:	13090501 	movwne	r0, #38145	; 0x9501
    6458:	66051313 			; <UNDEFINED> instruction: 0x66051313
    645c:	14090514 	strne	r0, [r9], #-1300	; 0xfffffaec
    6460:	01060b05 	tsteq	r6, r5, lsl #22
    6464:	79030505 	stmdbvc	r3, {r0, r2, r8, sl}
    6468:	0631052e 	ldrteq	r0, [r1], -lr, lsr #10
    646c:	052e0b03 	streq	r0, [lr, #-2819]!	; 0xfffff4fd
    6470:	1605180d 	strne	r1, [r5], -sp, lsl #16
    6474:	0f050106 	svceq	0x00050106
    6478:	30210520 	eorcc	r0, r1, r0, lsr #10
    647c:	28060d05 	stmdacs	r6, {r0, r2, r8, sl, fp}
    6480:	01061605 	tsteq	r6, r5, lsl #12
    6484:	05200f05 	streq	r0, [r0, #-3845]!	; 0xfffff0fb
    6488:	05340611 	ldreq	r0, [r4, #-1553]!	; 0xfffff9ef
    648c:	0501061a 	streq	r0, [r1, #-1562]	; 0xfffff9e6
    6490:	05052013 	streq	r2, [r5, #-19]	; 0xffffffed
    6494:	2e00ce03 	cdpcs	14, 0, cr12, cr0, cr3, {0}
    6498:	03063a05 	movweq	r3, #27141	; 0x6a05
    649c:	05207fb7 	streq	r7, [r0, #-4023]!	; 0xfffff049
    64a0:	1505174c 	strne	r1, [r5, #-1868]	; 0xfffff8b4
    64a4:	27051313 	smladcs	r5, r3, r3, r1
    64a8:	15050106 	strne	r0, [r5, #-262]	; 0xfffffefa
    64ac:	1b052406 	blne	14f4cc <__RAM_SIZE+0x4f4cc>
    64b0:	17050106 	strne	r0, [r5, -r6, lsl #2]
    64b4:	06190520 	ldreq	r0, [r9], -r0, lsr #10
    64b8:	052e0630 	streq	r0, [lr, #-1584]!	; 0xfffff9d0
    64bc:	05240631 	streq	r0, [r4, #-1585]!	; 0xfffff9cf
    64c0:	01090315 	tsteq	r9, r5, lsl r3
    64c4:	01061905 	tsteq	r6, r5, lsl #18
    64c8:	3c17053c 	cfldr32cc	mvfx0, [r7], {60}	; 0x3c
    64cc:	30061905 	andcc	r1, r6, r5, lsl #18
    64d0:	01061d05 	tsteq	r6, r5, lsl #26
    64d4:	0635052e 	ldrteq	r0, [r5], -lr, lsr #10
    64d8:	052e0903 	streq	r0, [lr, #-2307]!	; 0xfffff6fd
    64dc:	01011519 	tsteq	r1, r9, lsl r5
    64e0:	04020001 	streq	r0, [r2], #-1
    64e4:	02005801 	andeq	r5, r0, #65536	; 0x10000
    64e8:	002e0304 	eoreq	r0, lr, r4, lsl #6
    64ec:	01030402 	tsteq	r3, r2, lsl #8
    64f0:	03040200 	movweq	r0, #16896	; 0x4200
    64f4:	04020001 	streq	r0, [r2], #-1
    64f8:	02006603 	andeq	r6, r0, #3145728	; 0x300000
    64fc:	00010304 	andeq	r0, r1, r4, lsl #6
    6500:	01030402 	tsteq	r3, r2, lsl #8
    6504:	03040200 	movweq	r0, #16896	; 0x4200
    6508:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    650c:	02002e03 	andeq	r2, r0, #3, 28	; 0x30
    6510:	00200304 	eoreq	r0, r0, r4, lsl #6
    6514:	20030402 	andcs	r0, r3, r2, lsl #8
    6518:	03040200 	movweq	r0, #16896	; 0x4200
    651c:	02002006 	andeq	r2, r0, #6
    6520:	58060304 	stmdapl	r6, {r2, r8, r9}
    6524:	03040200 	movweq	r0, #16896	; 0x4200
    6528:	04020074 	streq	r0, [r2], #-116	; 0xffffff8c
    652c:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    6530:	05010304 	streq	r0, [r1, #-772]	; 0xfffffcfc
    6534:	04020025 	streq	r0, [r2], #-37	; 0xffffffdb
    6538:	011d0303 	tsteq	sp, r3, lsl #6
    653c:	02003a05 	andeq	r3, r0, #20480	; 0x5000
    6540:	05150304 	ldreq	r0, [r5, #-772]	; 0xfffffcfc
    6544:	04020005 	streq	r0, [r2], #-5
    6548:	00130603 	andseq	r0, r3, r3, lsl #12
    654c:	20030402 	andcs	r0, r3, r2, lsl #8
    6550:	01000602 	tsteq	r0, r2, lsl #12
    6554:	00010501 	andeq	r0, r1, r1, lsl #10
    6558:	00000205 	andeq	r0, r0, r5, lsl #4
    655c:	91030000 	mrsls	r0, (UNDEF: 3)
    6560:	0505013b 	streq	r0, [r5, #-315]	; 0xfffffec5
    6564:	142b0513 	strtne	r0, [fp], #-1299	; 0xfffffaed
    6568:	05140505 	ldreq	r0, [r4, #-1285]	; 0xfffffafb
    656c:	05010610 	streq	r0, [r1, #-1552]	; 0xfffff9f0
    6570:	05052e0e 	streq	r2, [r5, #-3598]	; 0xfffff1f2
    6574:	36052406 	strcc	r2, [r5], -r6, lsl #8
    6578:	14050568 	strne	r0, [r5], #-1384	; 0xfffffa98
    657c:	13060105 	movwne	r0, #24837	; 0x6105
    6580:	01000302 	tsteq	r0, r2, lsl #6
    6584:	00050501 	andeq	r0, r5, r1, lsl #10
    6588:	00000205 	andeq	r0, r0, r5, lsl #4
    658c:	a5030000 	strge	r0, [r3, #-0]
    6590:	0905013b 	stmdbeq	r5, {r0, r1, r3, r4, r5, r8}
    6594:	14330513 	ldrtne	r0, [r3], #-1299	; 0xfffffaed
    6598:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    659c:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    65a0:	05320609 	ldreq	r0, [r2, #-1545]!	; 0xfffff9f7
    65a4:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
    65a8:	0522060d 	streq	r0, [r2, #-1549]!	; 0xfffff9f3
    65ac:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
    65b0:	3b052025 	blcc	14e64c <__RAM_SIZE+0x4e64c>
    65b4:	09053106 	stmdbeq	r5, {r1, r2, r8, ip, sp}
    65b8:	06050514 			; <UNDEFINED> instruction: 0x06050514
    65bc:	00040213 	andeq	r0, r4, r3, lsl r2
    65c0:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    65c4:	00020500 	andeq	r0, r2, r0, lsl #10
    65c8:	03000000 	movweq	r0, #0
    65cc:	06013bc0 	streq	r3, [r1], -r0, asr #23
    65d0:	06090501 	streq	r0, [r9], -r1, lsl #10
    65d4:	5f05134b 	svcpl	0x0005134b
    65d8:	14500514 	ldrbne	r0, [r0], #-1300	; 0xfffffaec
    65dc:	05160905 	ldreq	r0, [r6, #-2309]	; 0xfffff6fb
    65e0:	1105340d 	tstne	r5, sp, lsl #8
    65e4:	06210531 			; <UNDEFINED> instruction: 0x06210531
    65e8:	2e320501 	cdpcs	5, 3, cr0, cr2, cr1, {0}
    65ec:	05581305 	ldrbeq	r1, [r8, #-773]	; 0xfffffcfb
    65f0:	05230615 	streq	r0, [r3, #-1557]!	; 0xfffff9eb
    65f4:	05010621 	streq	r0, [r1, #-1569]	; 0xfffff9df
    65f8:	15052e44 	strne	r2, [r5, #-3652]	; 0xfffff1bc
    65fc:	17054c06 	strne	r4, [r5, -r6, lsl #24]
    6600:	2d050106 	stfcss	f0, [r5, #-24]	; 0xffffffe8
    6604:	200b0306 	andcs	r0, fp, r6, lsl #6
    6608:	33150d05 	tstcc	r5, #320	; 0x140
    660c:	05192905 	ldreq	r2, [r9, #-2309]	; 0xfffff6fb
    6610:	1b051509 	blne	14ba3c <__RAM_SIZE+0x4ba3c>
    6614:	09050106 	stmdbeq	r5, {r1, r2, r8}
    6618:	0b053106 	bleq	152a38 <__RAM_SIZE+0x52a38>
    661c:	25050106 	strcs	r0, [r5, #-262]	; 0xfffffefa
    6620:	09052606 	stmdbeq	r5, {r1, r2, r9, sl, sp}
    6624:	30350515 	eorscc	r0, r5, r5, lsl r5
    6628:	05130d05 	ldreq	r0, [r3, #-3333]	; 0xfffff2fb
    662c:	05010624 	streq	r0, [r1, #-1572]	; 0xfffff9dc
    6630:	0d052e16 	stceq	14, cr2, [r5, #-88]	; 0xffffffa8
    6634:	0f055a06 	svceq	0x00055a06
    6638:	11050106 	tstne	r5, r6, lsl #2
    663c:	13052206 	movwne	r2, #20998	; 0x5206
    6640:	15050106 	strne	r0, [r5, #-262]	; 0xfffffefa
    6644:	21052206 	tstcs	r5, r6, lsl #4
    6648:	46050106 	strmi	r0, [r5], -r6, lsl #2
    664c:	0629052e 	strteq	r0, [r9], -lr, lsr #10
    6650:	054a0903 	strbeq	r0, [sl, #-2307]	; 0xfffff6fd
    6654:	1905150d 	stmdbne	r5, {r0, r2, r3, r8, sl, ip}
    6658:	3c050106 	stfccs	f0, [r5], {6}
    665c:	0905202e 	stmdbeq	r5, {r1, r2, r3, r5, sp}
    6660:	38053e06 	stmdacc	r5, {r1, r2, r9, sl, fp, ip, sp}
    6664:	14090530 	strne	r0, [r9], #-1328	; 0xfffffad0
    6668:	13060505 	movwne	r0, #25861	; 0x6505
    666c:	03062d05 	movweq	r2, #27909	; 0x6d05
    6670:	0d052e46 	stceq	14, cr2, [r5, #-280]	; 0xfffffee8
    6674:	25053315 	strcs	r3, [r5, #-789]	; 0xfffffceb
    6678:	01570306 	cmpeq	r7, r6, lsl #6
    667c:	06190520 	ldreq	r0, [r9], -r0, lsr #10
    6680:	05201803 	streq	r1, [r0, #-2051]!	; 0xfffff7fd
    6684:	0109032d 	tsteq	r9, sp, lsr #6
    6688:	33150d05 	tstcc	r5, #320	; 0x140
    668c:	05143f05 	ldreq	r3, [r4, #-3845]	; 0xfffff0fb
    6690:	26051311 			; <UNDEFINED> instruction: 0x26051311
    6694:	4a6c0306 	bmi	1b072b4 <__RAM_SIZE+0x1a072b4>
    6698:	00280520 	eoreq	r0, r8, r0, lsr #10
    669c:	03010402 	movweq	r0, #5122	; 0x1402
    66a0:	0d05201e 	stceq	0, cr2, [r5, #-120]	; 0xffffff88
    66a4:	2e063006 	cdpcs	0, 0, cr3, cr6, cr6, {0}
    66a8:	03061505 	movweq	r1, #25861	; 0x6505
    66ac:	21052014 	tstcs	r5, r4, lsl r0
    66b0:	51050106 	tstpl	r5, r6, lsl #2
    66b4:	2046052e 	subcs	r0, r6, lr, lsr #10
    66b8:	01000902 	tsteq	r0, r2, lsl #18
    66bc:	00050501 	andeq	r0, r5, r1, lsl #10
    66c0:	00000205 	andeq	r0, r0, r5, lsl #4
    66c4:	a9030000 	stmdbge	r3, {}	; <UNPREDICTABLE>
    66c8:	0106013c 	tsteq	r6, ip, lsr r1
    66cc:	75060905 	strvc	r0, [r6, #-2309]	; 0xfffff6fb
    66d0:	14018c05 	strne	r8, [r1], #-3077	; 0xfffff3fb
    66d4:	05145005 	ldreq	r5, [r4, #-5]
    66d8:	0d051609 	stceq	6, cr1, [r5, #-36]	; 0xffffffdc
    66dc:	31110533 	tstcc	r1, r3, lsr r5
    66e0:	01062105 	tsteq	r6, r5, lsl #2
    66e4:	052e3005 	streq	r3, [lr, #-5]!
    66e8:	15054a13 	strne	r4, [r5, #-2579]	; 0xfffff5ed
    66ec:	46053306 	strmi	r3, [r5], -r6, lsl #6
    66f0:	15050106 	strne	r0, [r5, #-262]	; 0xfffffefa
    66f4:	2105a106 	tstcs	r5, r6, lsl #2
    66f8:	44050106 	strmi	r0, [r5], #-262	; 0xfffffefa
    66fc:	06150520 	ldreq	r0, [r5], -r0, lsr #10
    6700:	0617054c 	ldreq	r0, [r7], -ip, asr #10
    6704:	062d0501 	strteq	r0, [sp], -r1, lsl #10
    6708:	05200b03 	streq	r0, [r0, #-2819]!	; 0xfffff4fd
    670c:	0533150d 	ldreq	r1, [r3, #-1293]!	; 0xfffffaf3
    6710:	09051929 	stmdbeq	r5, {r0, r3, r5, r8, fp, ip}
    6714:	061b0515 			; <UNDEFINED> instruction: 0x061b0515
    6718:	06090501 	streq	r0, [r9], -r1, lsl #10
    671c:	060b0531 			; <UNDEFINED> instruction: 0x060b0531
    6720:	06250501 	strteq	r0, [r5], -r1, lsl #10
    6724:	15090526 	strne	r0, [r9, #-1318]	; 0xfffffada
    6728:	05303505 	ldreq	r3, [r0, #-1285]!	; 0xfffffafb
    672c:	0f05140d 	svceq	0x0005140d
    6730:	11050106 	tstne	r5, r6, lsl #2
    6734:	35052406 	strcc	r2, [r5, #-1030]	; 0xfffffbfa
    6738:	46050106 	strmi	r0, [r5], -r6, lsl #2
    673c:	5827052e 	stmdapl	r7!, {r1, r2, r3, r5, r8, sl}
    6740:	27060d05 	strcs	r0, [r6, -r5, lsl #26]
    6744:	01061d05 	tsteq	r6, r5, lsl #26
    6748:	052e2c05 	streq	r2, [lr, #-3077]!	; 0xfffff3fb
    674c:	19054a0f 	stmdbne	r5, {r0, r1, r2, r3, r9, fp, lr}
    6750:	060d0531 			; <UNDEFINED> instruction: 0x060d0531
    6754:	05200a03 	streq	r0, [r0, #-2563]!	; 0xfffff5fd
    6758:	05010619 	streq	r0, [r1, #-1561]	; 0xfffff9e7
    675c:	05202e3c 	streq	r2, [r0, #-3644]!	; 0xfffff1c4
    6760:	053e0609 	ldreq	r0, [lr, #-1545]!	; 0xfffff9f7
    6764:	09053036 	stmdbeq	r5, {r1, r2, r4, r5, ip, sp}
    6768:	06050514 			; <UNDEFINED> instruction: 0x06050514
    676c:	062d0513 			; <UNDEFINED> instruction: 0x062d0513
    6770:	3c7fbf03 	ldclcc	15, cr11, [pc], #-12	; 676c <__HEAP_SIZE+0x576c>
    6774:	33150d05 	tstcc	r5, #320	; 0x140
    6778:	03062e05 	movweq	r2, #28165	; 0x6e05
    677c:	19050153 	stmdbne	r5, {r0, r1, r4, r6, r8}
    6780:	2e1c0306 	cdpcs	3, 1, cr0, cr12, cr6, {0}
    6784:	09032d05 	stmdbeq	r3, {r0, r2, r8, sl, fp, sp}
    6788:	150d0501 	strne	r0, [sp, #-1281]	; 0xfffffaff
    678c:	143f0533 	ldrtne	r0, [pc], #-1331	; 6794 <__HEAP_SIZE+0x5794>
    6790:	05131105 	ldreq	r1, [r3, #-261]	; 0xfffffefb
    6794:	6c030626 	stcvs	6, cr0, [r3], {38}	; 0x26
    6798:	0028054a 	eoreq	r0, r8, sl, asr #10
    679c:	03010402 	movweq	r0, #5122	; 0x1402
    67a0:	0d052e1e 	stceq	14, cr2, [r5, #-120]	; 0xffffff88
    67a4:	2e063006 	cdpcs	0, 0, cr3, cr6, cr6, {0}
    67a8:	03061105 	movweq	r1, #24837	; 0x6105
    67ac:	4205201f 	andmi	r2, r5, #31
    67b0:	05900106 	ldreq	r0, [r0, #262]	; 0x106
    67b4:	05210611 	streq	r0, [r1, #-1553]!	; 0xfffff9ef
    67b8:	20010619 	andcs	r0, r1, r9, lsl r6
    67bc:	01000302 	tsteq	r0, r2, lsl #6
    67c0:	00050501 	andeq	r0, r5, r1, lsl #10
    67c4:	00000205 	andeq	r0, r0, r5, lsl #4
    67c8:	9c030000 	stcls	0, cr0, [r3], {-0}
    67cc:	0106013d 	tsteq	r6, sp, lsr r1
    67d0:	83060905 	movwhi	r0, #26885	; 0x6905
    67d4:	78051313 	stmdavc	r5, {r0, r1, r4, r8, r9, ip}
    67d8:	14500514 	ldrbne	r0, [r0], #-1300	; 0xfffffaec
    67dc:	05132605 	ldreq	r2, [r3, #-1541]	; 0xfffff9fb
    67e0:	05141309 	ldreq	r1, [r4, #-777]	; 0xfffffcf7
    67e4:	0f05300d 	svceq	0x0005300d
    67e8:	11050106 	tstne	r5, r6, lsl #2
    67ec:	47053e06 	strmi	r3, [r5, -r6, lsl #28]
    67f0:	2f050106 	svccs	0x00050106
    67f4:	060d0558 			; <UNDEFINED> instruction: 0x060d0558
    67f8:	06230531 			; <UNDEFINED> instruction: 0x06230531
    67fc:	060d0501 	streq	r0, [sp], -r1, lsl #10
    6800:	0635054c 	ldrteq	r0, [r5], -ip, asr #10
    6804:	060d0501 	streq	r0, [sp], -r1, lsl #10
    6808:	7715053e 			; <UNDEFINED> instruction: 0x7715053e
    680c:	01063f05 	tsteq	r6, r5, lsl #30
    6810:	052e2e20 	streq	r2, [lr, #-3616]!	; 0xfffff1e0
    6814:	05210615 	streq	r0, [r1, #-1557]!	; 0xfffff9eb
    6818:	68030614 	stmdavs	r3, {r2, r4, r9, sl}
    681c:	06300501 	ldrteq	r0, [r0], -r1, lsl #10
    6820:	2000c003 	andcs	ip, r0, r3
    6824:	05160d05 	ldreq	r0, [r6, #-3333]	; 0xfffff2fb
    6828:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    682c:	1e030629 	cfmadd32ne	mvax1, mvfx0, mvfx3, mvfx9
    6830:	1509052e 	strne	r0, [r9, #-1326]	; 0xfffffad2
    6834:	05303205 	ldreq	r3, [r0, #-517]!	; 0xfffffdfb
    6838:	05051409 	streq	r1, [r5, #-1033]	; 0xfffffbf7
    683c:	15051306 	strne	r1, [r5, #-774]	; 0xfffffcfa
    6840:	7fb10306 	svcvc	0x00b10306
    6844:	062d053c 			; <UNDEFINED> instruction: 0x062d053c
    6848:	052e2001 	streq	r2, [lr, #-1]!
    684c:	15052042 	strne	r2, [r5, #-66]	; 0xffffffbe
    6850:	14052f06 	strne	r2, [r5], #-3846	; 0xfffff0fa
    6854:	01640306 	cmneq	r4, r6, lsl #6
    6858:	1c031505 	cfstr32ne	mvfx1, [r3], {5}
    685c:	05230620 	streq	r0, [r3, #-1568]!	; 0xfffff9e0
    6860:	2001063f 	andcs	r0, r1, pc, lsr r6
    6864:	0615052e 	ldreq	r0, [r5], -lr, lsr #10
    6868:	06140521 	ldreq	r0, [r4], -r1, lsr #10
    686c:	05016003 	streq	r6, [r1, #-3]
    6870:	20200315 	eorcs	r0, r0, r5, lsl r3
    6874:	17052406 	strne	r2, [r5, -r6, lsl #8]
    6878:	19050106 	stmdbne	r5, {r1, r2, r8}
    687c:	43053006 	movwmi	r3, #20486	; 0x5006
    6880:	2e200106 	sufcss	f0, f0, f6
    6884:	5a031405 	bpl	cb8a0 <__HEAP_SIZE+0xca8a0>
    6888:	030d0520 	movweq	r0, #54560	; 0xd520
    688c:	05202e14 	streq	r2, [r0, #-3604]!	; 0xfffff1ec
    6890:	20170321 	andscs	r0, r7, r1, lsr #6
    6894:	06110520 	ldreq	r0, [r1], -r0, lsr #10
    6898:	01201b03 			; <UNDEFINED> instruction: 0x01201b03
    689c:	003c3c20 	eorseq	r3, ip, r0, lsr #24
    68a0:	4a030402 	bmi	c78b0 <__HEAP_SIZE+0xc68b0>
    68a4:	03040200 	movweq	r0, #16896	; 0x4200
    68a8:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    68ac:	02003c03 	andeq	r3, r0, #768	; 0x300
    68b0:	00130304 	andseq	r0, r3, r4, lsl #6
    68b4:	01030402 	tsteq	r3, r2, lsl #8
    68b8:	03040200 	movweq	r0, #16896	; 0x4200
    68bc:	04020001 	streq	r0, [r2], #-1
    68c0:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    68c4:	20060304 	andcs	r0, r6, r4, lsl #6
    68c8:	01040200 	mrseq	r0, R12_usr
    68cc:	02004a06 	andeq	r4, r0, #24576	; 0x6000
    68d0:	002e0304 	eoreq	r0, lr, r4, lsl #6
    68d4:	01030402 	tsteq	r3, r2, lsl #8
    68d8:	03040200 	movweq	r0, #16896	; 0x4200
    68dc:	04020001 	streq	r0, [r2], #-1
    68e0:	02006603 	andeq	r6, r0, #3145728	; 0x300000
    68e4:	00010304 	andeq	r0, r1, r4, lsl #6
    68e8:	01030402 	tsteq	r3, r2, lsl #8
    68ec:	03040200 	movweq	r0, #16896	; 0x4200
    68f0:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    68f4:	00200603 	eoreq	r0, r0, r3, lsl #12
    68f8:	06030402 	streq	r0, [r3], -r2, lsl #8
    68fc:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    6900:	02002003 	andeq	r2, r0, #3
    6904:	00200304 	eoreq	r0, r0, r4, lsl #6
    6908:	06030402 	streq	r0, [r3], -r2, lsl #8
    690c:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    6910:	00580603 	subseq	r0, r8, r3, lsl #12
    6914:	74030402 	strvc	r0, [r3], #-1026	; 0xfffffbfe
    6918:	03040200 	movweq	r0, #16896	; 0x4200
    691c:	04020001 	streq	r0, [r2], #-1
    6920:	5e050103 	adfpls	f0, f5, f3
    6924:	03040200 	movweq	r0, #16896	; 0x4200
    6928:	00150515 	andseq	r0, r5, r5, lsl r5
    692c:	03030402 	movweq	r0, #13314	; 0x3402
    6930:	1105010e 	tstne	r5, lr, lsl #2
    6934:	03040200 	movweq	r0, #16896	; 0x4200
    6938:	04020034 	streq	r0, [r2], #-52	; 0xffffffcc
    693c:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    6940:	00660104 	rsbeq	r0, r6, r4, lsl #2
    6944:	03010402 	movweq	r0, #5122	; 0x1402
    6948:	0a023c68 	beq	95af0 <__HEAP_SIZE+0x94af0>
    694c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    6950:	02050005 	andeq	r0, r5, #5
    6954:	00000000 	andeq	r0, r0, r0
    6958:	013e9503 	teqeq	lr, r3, lsl #10
    695c:	09050106 	stmdbeq	r5, {r1, r2, r8}
    6960:	13138306 	tstne	r3, #402653184	; 0x18000000
    6964:	019a0513 	orrseq	r0, sl, r3, lsl r5
    6968:	14260514 	strtne	r0, [r6], #-1300	; 0xfffffaec
    696c:	05135005 	ldreq	r5, [r3, #-5]
    6970:	01120333 	tsteq	r2, r3, lsr r3
    6974:	17140905 	ldrne	r0, [r4, -r5, lsl #18]
    6978:	01063205 	tsteq	r6, r5, lsl #4
    697c:	30060d05 	andcc	r0, r6, r5, lsl #26
    6980:	01060f05 	tsteq	r6, r5, lsl #30
    6984:	3e061105 	adfccs	f1, f6, f5
    6988:	01064705 	tsteq	r6, r5, lsl #14
    698c:	05582f05 	ldrbeq	r2, [r8, #-3845]	; 0xfffff0fb
    6990:	0531060d 	ldreq	r0, [r1, #-1549]!	; 0xfffff9f3
    6994:	05010623 	streq	r0, [r1, #-1571]	; 0xfffff9dd
    6998:	0559060d 	ldrbeq	r0, [r9, #-1549]	; 0xfffff9f3
    699c:	05010635 	streq	r0, [r1, #-1589]	; 0xfffff9cb
    69a0:	053e060d 	ldreq	r0, [lr, #-1549]!	; 0xfffff9f3
    69a4:	3f057715 	svccc	0x00057715
    69a8:	2e200106 	sufcss	f0, f0, f6
    69ac:	0615052e 	ldreq	r0, [r5], -lr, lsr #10
    69b0:	06140521 	ldreq	r0, [r4], -r1, lsr #10
    69b4:	05015303 	streq	r5, [r1, #-771]	; 0xfffffcfd
    69b8:	d4030639 	strle	r0, [r3], #-1593	; 0xfffff9c7
    69bc:	0d052000 	stceq	0, cr2, [r5, #-0]
    69c0:	060f0516 			; <UNDEFINED> instruction: 0x060f0516
    69c4:	06310501 	ldrteq	r0, [r1], -r1, lsl #10
    69c8:	053c2303 	ldreq	r2, [ip, #-771]!	; 0xfffffcfd
    69cc:	01160309 	tsteq	r6, r9, lsl #6
    69d0:	05303905 	ldreq	r3, [r0, #-2309]!	; 0xfffff6fb
    69d4:	05051409 	streq	r1, [r5, #-1033]	; 0xfffffbf7
    69d8:	15051306 	strne	r1, [r5, #-774]	; 0xfffffcfa
    69dc:	7f9a0306 	svcvc	0x009a0306
    69e0:	062d053c 			; <UNDEFINED> instruction: 0x062d053c
    69e4:	052e2001 	streq	r2, [lr, #-1]!
    69e8:	15052042 	strne	r2, [r5, #-66]	; 0xffffffbe
    69ec:	14052f06 	strne	r2, [r5], #-3846	; 0xfffff0fa
    69f0:	014f0306 	cmpeq	pc, r6, lsl #6
    69f4:	31031505 	tstcc	r3, r5, lsl #10
    69f8:	05230620 	streq	r0, [r3, #-1568]!	; 0xfffff9e0
    69fc:	2001063f 	andcs	r0, r1, pc, lsr r6
    6a00:	0615052e 	ldreq	r0, [r5], -lr, lsr #10
    6a04:	06140521 	ldreq	r0, [r4], -r1, lsr #10
    6a08:	05014b03 	streq	r4, [r1, #-2819]	; 0xfffff4fd
    6a0c:	20350315 	eorscs	r0, r5, r5, lsl r3
    6a10:	17052406 	strne	r2, [r5, -r6, lsl #8]
    6a14:	19050106 	stmdbne	r5, {r1, r2, r8}
    6a18:	43053e06 	movwmi	r3, #24070	; 0x5e06
    6a1c:	2e200106 	sufcss	f0, f0, f6
    6a20:	45031405 	strmi	r1, [r3, #-1029]	; 0xfffffbfb
    6a24:	030d0520 	movweq	r0, #54560	; 0xd520
    6a28:	05202e29 	streq	r2, [r0, #-3625]!	; 0xfffff1d7
    6a2c:	20170321 	andscs	r0, r7, r1, lsr #6
    6a30:	065e0520 	ldrbeq	r0, [lr], -r0, lsr #10
    6a34:	05201b03 	streq	r1, [r0, #-2819]!	; 0xfffff4fd
    6a38:	2a051411 	bcs	14ba84 <__RAM_SIZE+0x4ba84>
    6a3c:	13050106 	movwne	r0, #20742	; 0x5106
    6a40:	0615052e 	ldreq	r0, [r5], -lr, lsr #10
    6a44:	3c200130 	stfccs	f0, [r0], #-192	; 0xffffff40
    6a48:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    6a4c:	02004a03 	andeq	r4, r0, #12288	; 0x3000
    6a50:	002e0304 	eoreq	r0, lr, r4, lsl #6
    6a54:	3c030402 	cfstrscc	mvf0, [r3], {2}
    6a58:	03040200 	movweq	r0, #16896	; 0x4200
    6a5c:	04020013 	streq	r0, [r2], #-19	; 0xffffffed
    6a60:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    6a64:	00010304 	andeq	r0, r1, r4, lsl #6
    6a68:	01030402 	tsteq	r3, r2, lsl #8
    6a6c:	03040200 	movweq	r0, #16896	; 0x4200
    6a70:	02002006 	andeq	r2, r0, #6
    6a74:	4a060104 	bmi	186e8c <__RAM_SIZE+0x86e8c>
    6a78:	03040200 	movweq	r0, #16896	; 0x4200
    6a7c:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    6a80:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    6a84:	00010304 	andeq	r0, r1, r4, lsl #6
    6a88:	66030402 	strvs	r0, [r3], -r2, lsl #8
    6a8c:	03040200 	movweq	r0, #16896	; 0x4200
    6a90:	04020001 	streq	r0, [r2], #-1
    6a94:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    6a98:	00200304 	eoreq	r0, r0, r4, lsl #6
    6a9c:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
    6aa0:	03040200 	movweq	r0, #16896	; 0x4200
    6aa4:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    6aa8:	02002003 	andeq	r2, r0, #3
    6aac:	20060304 	andcs	r0, r6, r4, lsl #6
    6ab0:	03040200 	movweq	r0, #16896	; 0x4200
    6ab4:	02005806 	andeq	r5, r0, #393216	; 0x60000
    6ab8:	00740304 	rsbseq	r0, r4, r4, lsl #6
    6abc:	01030402 	tsteq	r3, r2, lsl #8
    6ac0:	03040200 	movweq	r0, #16896	; 0x4200
    6ac4:	04020001 	streq	r0, [r2], #-1
    6ac8:	02001801 	andeq	r1, r0, #65536	; 0x10000
    6acc:	05170104 	ldreq	r0, [r7, #-260]	; 0xfffffefc
    6ad0:	0402001e 	streq	r0, [r2], #-30	; 0xffffffe2
    6ad4:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    6ad8:	04020039 	streq	r0, [r2], #-57	; 0xffffffc7
    6adc:	17052001 	strne	r2, [r5, -r1]
    6ae0:	01040200 	mrseq	r0, R12_usr
    6ae4:	0619053c 			; <UNDEFINED> instruction: 0x0619053c
    6ae8:	061b0532 			; <UNDEFINED> instruction: 0x061b0532
    6aec:	061d0501 	ldreq	r0, [sp], -r1, lsl #10
    6af0:	06380530 			; <UNDEFINED> instruction: 0x06380530
    6af4:	06190501 	ldreq	r0, [r9], -r1, lsl #10
    6af8:	062d0542 	strteq	r0, [sp], -r2, asr #10
    6afc:	00150501 	andseq	r0, r5, r1, lsl #10
    6b00:	06010402 	streq	r0, [r1], -r2, lsl #8
    6b04:	004a6803 	subeq	r6, sl, r3, lsl #16
    6b08:	06010402 	streq	r0, [r1], -r2, lsl #8
    6b0c:	0119063c 	tsteq	r9, ip, lsr r6
    6b10:	2001012e 	andcs	r0, r1, lr, lsr #2
    6b14:	20203c2e 	eorcs	r3, r0, lr, lsr #24
    6b18:	0f022006 	svceq	0x00022006
    6b1c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    6b20:	02050005 	andeq	r0, r5, #5
    6b24:	00000000 	andeq	r0, r0, r0
    6b28:	013fb803 	teqeq	pc, r3, lsl #16
    6b2c:	09050106 	stmdbeq	r5, {r1, r2, r8}
    6b30:	13134b06 	tstne	r3, #6144	; 0x1800
    6b34:	05146e05 	ldreq	r6, [r4, #-3589]	; 0xfffff1fb
    6b38:	50051426 	andpl	r1, r5, r6, lsr #8
    6b3c:	03330513 	teqeq	r3, #79691776	; 0x4c00000
    6b40:	09050112 	stmdbeq	r5, {r1, r4, r8}
    6b44:	32051714 	andcc	r1, r5, #20, 14	; 0x500000
    6b48:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    6b4c:	23053006 	movwcs	r3, #20486	; 0x5006
    6b50:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    6b54:	35054b06 	strcc	r4, [r5, #-2822]	; 0xfffff4fa
    6b58:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    6b5c:	25054006 	strcs	r4, [r5, #-6]
    6b60:	2e200106 	sufcss	f0, f0, f6
    6b64:	05203a05 	streq	r3, [r0, #-2565]!	; 0xfffff5fb
    6b68:	0530063e 	ldreq	r0, [r0, #-1598]!	; 0xfffff9c2
    6b6c:	0f05160d 	svceq	0x0005160d
    6b70:	31050106 	tstcc	r5, r6, lsl #2
    6b74:	2e230306 	cdpcs	3, 2, cr0, cr3, cr6, {0}
    6b78:	16030905 	strne	r0, [r3], -r5, lsl #18
    6b7c:	30340501 	eorscc	r0, r4, r1, lsl #10
    6b80:	13060505 	movwne	r0, #25861	; 0x6505
    6b84:	03065e05 	movweq	r5, #28165	; 0x6e05
    6b88:	11052047 	tstne	r5, r7, asr #32
    6b8c:	062a0514 			; <UNDEFINED> instruction: 0x062a0514
    6b90:	13052001 	movwne	r2, #20481	; 0x5001
    6b94:	06150520 	ldreq	r0, [r5], -r0, lsr #10
    6b98:	3c200130 	stfccs	f0, [r0], #-192	; 0xffffff40
    6b9c:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    6ba0:	02004a03 	andeq	r4, r0, #12288	; 0x3000
    6ba4:	002e0304 	eoreq	r0, lr, r4, lsl #6
    6ba8:	3c030402 	cfstrscc	mvf0, [r3], {2}
    6bac:	03040200 	movweq	r0, #16896	; 0x4200
    6bb0:	04020013 	streq	r0, [r2], #-19	; 0xffffffed
    6bb4:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    6bb8:	00010304 	andeq	r0, r1, r4, lsl #6
    6bbc:	01030402 	tsteq	r3, r2, lsl #8
    6bc0:	03040200 	movweq	r0, #16896	; 0x4200
    6bc4:	02002006 	andeq	r2, r0, #6
    6bc8:	4a060104 	bmi	186fe0 <__RAM_SIZE+0x86fe0>
    6bcc:	03040200 	movweq	r0, #16896	; 0x4200
    6bd0:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    6bd4:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    6bd8:	00010304 	andeq	r0, r1, r4, lsl #6
    6bdc:	66030402 	strvs	r0, [r3], -r2, lsl #8
    6be0:	03040200 	movweq	r0, #16896	; 0x4200
    6be4:	04020001 	streq	r0, [r2], #-1
    6be8:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    6bec:	00200304 	eoreq	r0, r0, r4, lsl #6
    6bf0:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
    6bf4:	03040200 	movweq	r0, #16896	; 0x4200
    6bf8:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    6bfc:	02002003 	andeq	r2, r0, #3
    6c00:	20060304 	andcs	r0, r6, r4, lsl #6
    6c04:	03040200 	movweq	r0, #16896	; 0x4200
    6c08:	02005806 	andeq	r5, r0, #393216	; 0x60000
    6c0c:	00740304 	rsbseq	r0, r4, r4, lsl #6
    6c10:	01030402 	tsteq	r3, r2, lsl #8
    6c14:	03040200 	movweq	r0, #16896	; 0x4200
    6c18:	04020001 	streq	r0, [r2], #-1
    6c1c:	02001801 	andeq	r1, r0, #65536	; 0x10000
    6c20:	05170104 	ldreq	r0, [r7, #-260]	; 0xfffffefc
    6c24:	0402001e 	streq	r0, [r2], #-30	; 0xffffffe2
    6c28:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    6c2c:	04020039 	streq	r0, [r2], #-57	; 0xffffffc7
    6c30:	17052001 	strne	r2, [r5, -r1]
    6c34:	01040200 	mrseq	r0, R12_usr
    6c38:	0619053c 			; <UNDEFINED> instruction: 0x0619053c
    6c3c:	061b0532 			; <UNDEFINED> instruction: 0x061b0532
    6c40:	061d0501 	ldreq	r0, [sp], -r1, lsl #10
    6c44:	06380522 	ldrteq	r0, [r8], -r2, lsr #10
    6c48:	06190501 	ldreq	r0, [r9], -r1, lsl #10
    6c4c:	062d0534 			; <UNDEFINED> instruction: 0x062d0534
    6c50:	00150501 	andseq	r0, r5, r1, lsl #10
    6c54:	06010402 	streq	r0, [r1], -r2, lsl #8
    6c58:	004a6803 	subeq	r6, sl, r3, lsl #16
    6c5c:	06010402 	streq	r0, [r1], -r2, lsl #8
    6c60:	0119063c 	tsteq	r9, ip, lsr r6
    6c64:	2001012e 	andcs	r0, r1, lr, lsr #2
    6c68:	20203c2e 	eorcs	r3, r0, lr, lsr #24
    6c6c:	10022006 	andne	r2, r2, r6
    6c70:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    6c74:	02050005 	andeq	r0, r5, #5
    6c78:	00000000 	andeq	r0, r0, r0
    6c7c:	00c0ab03 	sbceq	sl, r0, r3, lsl #22
    6c80:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    6c84:	132f0609 			; <UNDEFINED> instruction: 0x132f0609
    6c88:	05144905 	ldreq	r4, [r4, #-2309]	; 0xfffff6fb
    6c8c:	0905144f 	stmdbeq	r5, {r0, r1, r2, r3, r6, sl, ip}
    6c90:	06110516 			; <UNDEFINED> instruction: 0x06110516
    6c94:	00090501 	andeq	r0, r9, r1, lsl #10
    6c98:	06040402 	streq	r0, [r4], -r2, lsl #8
    6c9c:	000d0530 	andeq	r0, sp, r0, lsr r5
    6ca0:	30040402 	andcc	r0, r4, r2, lsl #8
    6ca4:	02002505 	andeq	r2, r0, #20971520	; 0x1400000
    6ca8:	01060404 	tsteq	r6, r4, lsl #8
    6cac:	02000f05 	andeq	r0, r0, #5, 30
    6cb0:	054a0404 	strbeq	r0, [sl, #-1028]	; 0xfffffbfc
    6cb4:	09053519 	stmdbeq	r5, {r0, r3, r4, r8, sl, ip, sp}
    6cb8:	3c052306 	stccc	3, cr2, [r5], {6}
    6cbc:	14090530 	strne	r0, [r9], #-1328	; 0xfffffad0
    6cc0:	13060505 	movwne	r0, #25861	; 0x6505
    6cc4:	02001105 	andeq	r1, r0, #1073741825	; 0x40000001
    6cc8:	6d030104 	stfvss	f0, [r3, #-16]
    6ccc:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    6cd0:	26062e01 	strcs	r2, [r6], -r1, lsl #28
    6cd4:	01063805 	tsteq	r6, r5, lsl #16
    6cd8:	06110520 	ldreq	r0, [r1], -r0, lsr #10
    6cdc:	0619053d 			; <UNDEFINED> instruction: 0x0619053d
    6ce0:	00040201 	andeq	r0, r4, r1, lsl #4
    6ce4:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    6ce8:	00020500 	andeq	r0, r2, r0, lsl #10
    6cec:	03000000 	movweq	r0, #0
    6cf0:	0100c0d2 	ldrdeq	ip, [r0, -r2]
    6cf4:	09050106 	stmdbeq	r5, {r1, r2, r8}
    6cf8:	05133d06 	ldreq	r3, [r3, #-3334]	; 0xfffff2fa
    6cfc:	4f051459 	svcmi	0x00051459
    6d00:	16090514 			; <UNDEFINED> instruction: 0x16090514
    6d04:	01061105 	tsteq	r6, r5, lsl #2
    6d08:	02000905 	andeq	r0, r0, #81920	; 0x14000
    6d0c:	30060404 	andcc	r0, r6, r4, lsl #8
    6d10:	02000d05 	andeq	r0, r0, #320	; 0x140
    6d14:	05320404 	ldreq	r0, [r2, #-1028]!	; 0xfffffbfc
    6d18:	04020016 	streq	r0, [r2], #-22	; 0xffffffea
    6d1c:	05010604 	streq	r0, [r1, #-1540]	; 0xfffff9fc
    6d20:	0402000d 	streq	r0, [r2], #-13
    6d24:	05590604 	ldrbeq	r0, [r9, #-1540]	; 0xfffff9fc
    6d28:	04020036 	streq	r0, [r2], #-54	; 0xffffffca
    6d2c:	05010604 	streq	r0, [r1, #-1540]	; 0xfffff9fc
    6d30:	04020009 	streq	r0, [r2], #-9
    6d34:	054c0604 	strbeq	r0, [ip, #-1540]	; 0xfffff9fc
    6d38:	0402003e 	streq	r0, [r2], #-62	; 0xffffffc2
    6d3c:	09053004 	stmdbeq	r5, {r2, ip, sp}
    6d40:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    6d44:	00050514 	andeq	r0, r5, r4, lsl r5
    6d48:	06040402 	streq	r0, [r4], -r2, lsl #8
    6d4c:	00110513 	andseq	r0, r1, r3, lsl r5
    6d50:	03010402 	movweq	r0, #5122	; 0x1402
    6d54:	02002e72 	andeq	r2, r0, #1824	; 0x720
    6d58:	022e0104 	eoreq	r0, lr, #4, 2
    6d5c:	01010004 	tsteq	r1, r4
    6d60:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    6d64:	002d2c02 	eoreq	r2, sp, r2, lsl #24
    6d68:	c38a0310 	orrgt	r0, sl, #16, 6	; 0x40000000
    6d6c:	09050100 	stmdbeq	r5, {r8}
    6d70:	05141313 	ldreq	r1, [r4, #-787]	; 0xfffffced
    6d74:	0501061f 	streq	r0, [r1, #-1567]	; 0xfffff9e1
    6d78:	052f0609 	streq	r0, [pc, #-1545]!	; 6777 <__HEAP_SIZE+0x5777>
    6d7c:	05010621 	streq	r0, [r1, #-1569]	; 0xfffff9df
    6d80:	052f0609 	streq	r0, [pc, #-1545]!	; 677f <__HEAP_SIZE+0x577f>
    6d84:	0501061f 	streq	r0, [r1, #-1567]	; 0xfffff9e1
    6d88:	06022f05 	streq	r2, [r2], -r5, lsl #30
    6d8c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    6d90:	02050001 	andeq	r0, r5, #1
    6d94:	10002d44 	andne	r2, r0, r4, asr #26
    6d98:	011bb703 	tsteq	fp, r3, lsl #14
    6d9c:	132f0505 			; <UNDEFINED> instruction: 0x132f0505
    6da0:	14131313 	ldrne	r1, [r3], #-787	; 0xfffffced
    6da4:	01061d05 	tsteq	r6, r5, lsl #26
    6da8:	02003105 	andeq	r3, r0, #1073741825	; 0x40000001
    6dac:	20060104 	andcs	r0, r6, r4, lsl #2
    6db0:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    6db4:	01060104 	tsteq	r6, r4, lsl #2
    6db8:	30060905 	andcc	r0, r6, r5, lsl #18
    6dbc:	01063f05 	tsteq	r6, r5, lsl #30
    6dc0:	052e2905 	streq	r2, [lr, #-2309]!	; 0xfffff6fb
    6dc4:	055d0609 	ldrbeq	r0, [sp, #-1545]	; 0xfffff9f7
    6dc8:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
    6dcc:	04020025 	streq	r0, [r2], #-37	; 0xffffffdb
    6dd0:	05260602 	streq	r0, [r6, #-1538]!	; 0xfffff9fe
    6dd4:	0402006e 	streq	r0, [r2], #-110	; 0xffffff92
    6dd8:	01730302 	cmneq	r3, r2, lsl #6
    6ddc:	00018005 	andeq	r8, r1, r5
    6de0:	06020402 	streq	r0, [r2], -r2, lsl #8
    6de4:	04020001 	streq	r0, [r2], #-1
    6de8:	1d052002 	stcne	0, cr2, [r5, #-8]
    6dec:	01040200 	mrseq	r0, R12_usr
    6df0:	00260520 	eoreq	r0, r6, r0, lsr #10
    6df4:	06010402 	streq	r0, [r1], -r2, lsl #8
    6df8:	05201203 	streq	r1, [r0, #-515]!	; 0xfffffdfd
    6dfc:	04020005 	streq	r0, [r2], #-5
    6e00:	06010601 	streq	r0, [r1], -r1, lsl #12
    6e04:	3c00fb03 			; <UNDEFINED> instruction: 0x3c00fb03
    6e08:	13060105 	movwne	r0, #24837	; 0x6105
    6e0c:	03060d05 	movweq	r0, #27909	; 0x6d05
    6e10:	032e7f88 			; <UNDEFINED> instruction: 0x032e7f88
    6e14:	1c05012f 	stfnes	f0, [r5], {47}	; 0x2f
    6e18:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    6e1c:	1b052f06 	blne	152a3c <__RAM_SIZE+0x52a3c>
    6e20:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    6e24:	11052106 	tstne	r5, r6, lsl #2
    6e28:	030d0518 	movweq	r0, #54552	; 0xd518
    6e2c:	2b05580e 	blcs	15ce6c <__RAM_SIZE+0x5ce6c>
    6e30:	29050106 	stmdbcs	r5, {r1, r2, r8}
    6e34:	060d05ac 	streq	r0, [sp], -ip, lsr #11
    6e38:	060f0544 	streq	r0, [pc], -r4, asr #10
    6e3c:	09052001 	stmdbeq	r5, {r0, sp}
    6e40:	01160306 	tsteq	r6, r6, lsl #6
    6e44:	051a2905 	ldreq	r2, [sl, #-2309]	; 0xfffff6fb
    6e48:	7f910356 	svcvc	0x00910356
    6e4c:	065d0501 	ldrbeq	r0, [sp], -r1, lsl #10
    6e50:	11052001 	tstne	r5, r1
    6e54:	00d70306 	sbcseq	r0, r7, r6, lsl #6
    6e58:	05010620 	streq	r0, [r1, #-1568]	; 0xfffff9e0
    6e5c:	10030609 	andne	r0, r3, r9, lsl #12
    6e60:	06190501 	ldreq	r0, [r9], -r1, lsl #10
    6e64:	02017003 	andeq	r7, r1, #3
    6e68:	01010008 	tsteq	r1, r8
    6e6c:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    6e70:	002db002 	eoreq	fp, sp, r2
    6e74:	1cd10310 	ldclne	3, cr0, [r1], {16}
    6e78:	21050501 	tstcs	r5, r1, lsl #10
    6e7c:	05142505 	ldreq	r2, [r4, #-1285]	; 0xfffffafb
    6e80:	010a0305 	tsteq	sl, r5, lsl #6
    6e84:	01060f05 	tsteq	r6, r5, lsl #30
    6e88:	32060905 	andcc	r0, r6, #81920	; 0x14000
    6e8c:	01060b05 	tsteq	r6, r5, lsl #22
    6e90:	34062505 	strcc	r2, [r6], #-1285	; 0xfffffafb
    6e94:	05170505 	ldreq	r0, [r7, #-1285]	; 0xfffffafb
    6e98:	05010607 	streq	r0, [r1, #-1543]	; 0xfffff9f9
    6e9c:	3b030649 	blcc	c87c8 <__HEAP_SIZE+0xc77c8>
    6ea0:	1705052e 	strne	r0, [r5, -lr, lsr #10]
    6ea4:	30260516 	eorcc	r0, r6, r6, lsl r5
    6ea8:	13060105 	movwne	r0, #24837	; 0x6105
    6eac:	03060d05 	movweq	r0, #27909	; 0x6d05
    6eb0:	05207fb0 	streq	r7, [r0, #-4016]!	; 0xfffff050
    6eb4:	2e010617 	mcrcs	6, 0, r0, cr1, cr7, {0}
    6eb8:	03060905 	movweq	r0, #26885	; 0x6905
    6ebc:	0a032019 	beq	cef28 <__HEAP_SIZE+0xcdf28>
    6ec0:	061e052e 	ldreq	r0, [lr], -lr, lsr #10
    6ec4:	06090501 	streq	r0, [r9], -r1, lsl #10
    6ec8:	061b054b 	ldreq	r0, [fp], -fp, asr #10
    6ecc:	06090501 	streq	r0, [r9], -r1, lsl #10
    6ed0:	0614053d 			; <UNDEFINED> instruction: 0x0614053d
    6ed4:	06310501 	ldrteq	r0, [r1], -r1, lsl #10
    6ed8:	14200544 	strtne	r0, [r0], #-1348	; 0xfffffabc
    6edc:	05190905 	ldreq	r0, [r9, #-2309]	; 0xfffff6fb
    6ee0:	02010612 	andeq	r0, r1, #18874368	; 0x1200000
    6ee4:	0101000b 	tsteq	r1, fp
    6ee8:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    6eec:	002df802 	eoreq	pc, sp, r2, lsl #16
    6ef0:	c3b30310 			; <UNDEFINED> instruction: 0xc3b30310
    6ef4:	09050100 	stmdbeq	r5, {r8}
    6ef8:	05141313 	ldreq	r1, [r4, #-787]	; 0xfffffced
    6efc:	05010620 	streq	r0, [r1, #-1568]	; 0xfffff9e0
    6f00:	052f0609 	streq	r0, [pc, #-1545]!	; 68ff <__HEAP_SIZE+0x58ff>
    6f04:	05010622 	streq	r0, [r1, #-1570]	; 0xfffff9de
    6f08:	052f0609 	streq	r0, [pc, #-1545]!	; 6907 <__HEAP_SIZE+0x5907>
    6f0c:	05010620 	streq	r0, [r1, #-1568]	; 0xfffff9e0
    6f10:	06022f05 	streq	r2, [r2], -r5, lsl #30
    6f14:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    6f18:	02050001 	andeq	r0, r5, #1
    6f1c:	00000000 	andeq	r0, r0, r0
    6f20:	00c3c503 	sbceq	ip, r3, r3, lsl #10
    6f24:	13050501 	movwne	r0, #21761	; 0x5501
    6f28:	05170905 	ldreq	r0, [r7, #-2309]	; 0xfffff6fb
    6f2c:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    6f30:	05420609 	strbeq	r0, [r2, #-1545]	; 0xfffff9f7
    6f34:	05010626 	streq	r0, [r1, #-1574]	; 0xfffff9da
    6f38:	0b030605 	bleq	c8754 <__HEAP_SIZE+0xc7754>
    6f3c:	061c052e 	ldreq	r0, [ip], -lr, lsr #10
    6f40:	06050501 	streq	r0, [r5], -r1, lsl #10
    6f44:	0610052f 	ldreq	r0, [r0], -pc, lsr #10
    6f48:	06050501 	streq	r0, [r5], -r1, lsl #10
    6f4c:	0618052f 	ldreq	r0, [r8], -pc, lsr #10
    6f50:	06050501 	streq	r0, [r5], -r1, lsl #10
    6f54:	0617052f 	ldreq	r0, [r7], -pc, lsr #10
    6f58:	06050501 	streq	r0, [r5], -r1, lsl #10
    6f5c:	0612052f 	ldreq	r0, [r2], -pc, lsr #10
    6f60:	06050501 	streq	r0, [r5], -r1, lsl #10
    6f64:	00170530 	andseq	r0, r7, r0, lsr r5
    6f68:	01010402 	tsteq	r1, r2, lsl #8
    6f6c:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    6f70:	01060104 	tsteq	r6, r4, lsl #2
    6f74:	15053306 	strne	r3, [r5, #-774]	; 0xfffffcfa
    6f78:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    6f7c:	052f0605 	streq	r0, [pc, #-1541]!	; 697f <__HEAP_SIZE+0x597f>
    6f80:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
    6f84:	052f0605 	streq	r0, [pc, #-1541]!	; 6987 <__HEAP_SIZE+0x5987>
    6f88:	0501061a 	streq	r0, [r1, #-1562]	; 0xfffff9e6
    6f8c:	05300605 	ldreq	r0, [r0, #-1541]!	; 0xfffff9fb
    6f90:	0501061a 	streq	r0, [r1, #-1562]	; 0xfffff9e6
    6f94:	2e0b0301 	cdpcs	3, 0, cr0, cr11, cr1, {0}
    6f98:	02000905 	andeq	r0, r0, #81920	; 0x14000
    6f9c:	03060304 	movweq	r0, #25348	; 0x6304
    6fa0:	2305206e 	movwcs	r2, #20590	; 0x506e
    6fa4:	03040200 	movweq	r0, #16896	; 0x4200
    6fa8:	38050106 	stmdacc	r5, {r1, r2, r8}
    6fac:	03040200 	movweq	r0, #16896	; 0x4200
    6fb0:	3f054806 	svccc	0x00054806
    6fb4:	03040200 	movweq	r0, #16896	; 0x4200
    6fb8:	02000106 	andeq	r0, r0, #-2147483647	; 0x80000001
    6fbc:	02200304 	eoreq	r0, r0, #4, 6	; 0x10000000
    6fc0:	0101001a 	tsteq	r1, sl, lsl r0
    6fc4:	00000bd4 	ldrdeq	r0, [r0], -r4
    6fc8:	02480003 	subeq	r0, r8, #3
    6fcc:	01020000 	mrseq	r0, (UNDEF: 2)
    6fd0:	000d0efb 	strdeq	r0, [sp], -fp
    6fd4:	01010101 	tsteq	r1, r1, lsl #2
    6fd8:	01000000 	mrseq	r0, (UNDEF: 0)
    6fdc:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
    6fe0:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    6fe4:	2f2e2e2f 	svccs	0x002e2e2f
    6fe8:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
    6fec:	2f736f74 	svccs	0x00736f74
    6ff0:	65657246 	strbvs	r7, [r5, #-582]!	; 0xfffffdba
    6ff4:	534f5452 	movtpl	r5, #62546	; 0xf452
    6ff8:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
    6ffc:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
    7000:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
    7004:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
    7008:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
    700c:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
    7010:	5f6d7261 	svcpl	0x006d7261
    7014:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
    7018:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
    701c:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    7020:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    7024:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    7028:	30312d69 	eorscc	r2, r1, r9, ror #26
    702c:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
    7030:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
    7034:	6c5c3031 	mrrcvs	0, 3, r3, ip, cr1
    7038:	675c6269 	ldrbvs	r6, [ip, -r9, ror #4]
    703c:	615c6363 	cmpvs	ip, r3, ror #6
    7040:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    7044:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    7048:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    704c:	2e30315c 	mrccs	1, 1, r3, cr0, cr12, {2}
    7050:	5c312e33 	ldcpl	14, cr2, [r1], #-204	; 0xffffff34
    7054:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    7058:	00656475 	rsbeq	r6, r5, r5, ror r4
    705c:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
    7060:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    7064:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
    7068:	705c6e6f 	subsvc	r6, ip, pc, ror #28
    706c:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
    7070:	615c6d61 	cmpvs	ip, r1, ror #26
    7074:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
    7078:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
    707c:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
    7080:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    7084:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    7088:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    708c:	2e30312d 	rsfcssp	f3, f0, #5.0
    7090:	30322d33 	eorscc	r2, r2, r3, lsr sp
    7094:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
    7098:	72615c30 	rsbvc	r5, r1, #48, 24	; 0x3000
    709c:	6f6e2d6d 	svcvs	0x006e2d6d
    70a0:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    70a4:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
    70a8:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    70ac:	5c656475 	cfstrdpl	mvd6, [r5], #-468	; 0xfffffe2c
    70b0:	6863616d 	stmdavs	r3!, {r0, r2, r3, r5, r6, r8, sp, lr}^
    70b4:	00656e69 	rsbeq	r6, r5, r9, ror #28
    70b8:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
    70bc:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    70c0:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
    70c4:	705c6e6f 	subsvc	r6, ip, pc, ror #28
    70c8:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
    70cc:	615c6d61 	cmpvs	ip, r1, ror #26
    70d0:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
    70d4:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
    70d8:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
    70dc:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    70e0:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    70e4:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    70e8:	2e30312d 	rsfcssp	f3, f0, #5.0
    70ec:	30322d33 	eorscc	r2, r2, r3, lsr sp
    70f0:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
    70f4:	72615c30 	rsbvc	r5, r1, #48, 24	; 0x3000
    70f8:	6f6e2d6d 	svcvs	0x006e2d6d
    70fc:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    7100:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
    7104:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    7108:	5c656475 	cfstrdpl	mvd6, [r5], #-468	; 0xfffffe2c
    710c:	00737973 	rsbseq	r7, r3, r3, ror r9
    7110:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    7114:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    7118:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    711c:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    7120:	6572462f 	ldrbvs	r4, [r2, #-1583]!	; 0xfffff9d1
    7124:	4f545265 	svcmi	0x00545265
    7128:	6e692f53 	mcrvs	15, 3, r2, cr9, cr3, {2}
    712c:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    7130:	2e2e0065 	cdpcs	0, 2, cr0, cr14, cr5, {3}
    7134:	2f2e2e2f 	svccs	0x002e2e2f
    7138:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 7088 <__HEAP_SIZE+0x6088>
    713c:	74726269 	ldrbtvc	r6, [r2], #-617	; 0xfffffd97
    7140:	462f736f 	strtmi	r7, [pc], -pc, ror #6
    7144:	52656572 	rsbpl	r6, r5, #478150656	; 0x1c800000
    7148:	2f534f54 	svccs	0x00534f54
    714c:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
    7150:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
    7154:	4343472f 	movtmi	r4, #14127	; 0x372f
    7158:	4d52412f 	ldfmie	f4, [r2, #-188]	; 0xffffff44
    715c:	334d435f 	movtcc	r4, #54111	; 0xd35f
    7160:	544e5f33 	strbpl	r5, [lr], #-3891	; 0xfffff0cd
    7164:	6f6e2f5a 	svcvs	0x006e2f5a
    7168:	65735f6e 	ldrbvs	r5, [r3, #-3950]!	; 0xfffff092
    716c:	65727563 	ldrbvs	r7, [r2, #-1379]!	; 0xfffffa9d
    7170:	69740000 	ldmdbvs	r4!, {}^	; <UNPREDICTABLE>
    7174:	7372656d 	cmnvc	r2, #457179136	; 0x1b400000
    7178:	0100632e 	tsteq	r0, lr, lsr #6
    717c:	74730000 	ldrbtvc	r0, [r3], #-0
    7180:	66656464 	strbtvs	r6, [r5], -r4, ror #8
    7184:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    7188:	645f0000 	ldrbvs	r0, [pc], #-0	; 7190 <__HEAP_SIZE+0x6190>
    718c:	75616665 	strbvc	r6, [r1, #-1637]!	; 0xfffff99b
    7190:	745f746c 	ldrbvc	r7, [pc], #-1132	; 7198 <__HEAP_SIZE+0x6198>
    7194:	73657079 	cmnvc	r5, #121	; 0x79
    7198:	0300682e 	movweq	r6, #2094	; 0x82e
    719c:	735f0000 	cmpvc	pc, #0
    71a0:	6e696474 	mcrvs	4, 3, r6, cr9, cr4, {3}
    71a4:	00682e74 	rsbeq	r2, r8, r4, ror lr
    71a8:	70000004 	andvc	r0, r0, r4
    71ac:	646a6f72 	strbtvs	r6, [sl], #-3954	; 0xfffff08e
    71b0:	2e736665 	cdpcs	6, 7, cr6, cr3, cr5, {3}
    71b4:	00050068 	andeq	r0, r5, r8, rrx
    71b8:	726f7000 	rsbvc	r7, pc, #0
    71bc:	63616d74 	cmnvs	r1, #116, 26	; 0x1d00
    71c0:	6f636f72 	svcvs	0x00636f72
    71c4:	6e6f6d6d 	cdpvs	13, 6, cr6, cr15, cr13, {3}
    71c8:	0600682e 	streq	r6, [r0], -lr, lsr #16
    71cc:	72460000 	subvc	r0, r6, #0
    71d0:	54526565 	ldrbpl	r6, [r2], #-1381	; 0xfffffa9b
    71d4:	682e534f 	stmdavs	lr!, {r0, r1, r2, r3, r6, r8, r9, ip, lr}
    71d8:	00000500 	andeq	r0, r0, r0, lsl #10
    71dc:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
    71e0:	0500682e 	streq	r6, [r0, #-2094]	; 0xfffff7d2
    71e4:	61740000 	cmnvs	r4, r0
    71e8:	682e6b73 	stmdavs	lr!, {r0, r1, r4, r5, r6, r8, r9, fp, sp, lr}
    71ec:	00000500 	andeq	r0, r0, r0, lsl #10
    71f0:	75657571 	strbvc	r7, [r5, #-1393]!	; 0xfffffa8f
    71f4:	00682e65 	rsbeq	r2, r8, r5, ror #28
    71f8:	74000005 	strvc	r0, [r0], #-5
    71fc:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    7200:	00682e73 	rsbeq	r2, r8, r3, ror lr
    7204:	70000005 	andvc	r0, r0, r5
    7208:	6174726f 	cmnvs	r4, pc, ror #4
    720c:	2e656c62 	cdpcs	12, 6, cr6, cr5, cr2, {3}
    7210:	00050068 	andeq	r0, r5, r8, rrx
    7214:	05050000 	streq	r0, [r5, #-0]
    7218:	10020500 	andne	r0, r2, r0, lsl #10
    721c:	0310002e 	tsteq	r0, #46	; 0x2e
    7220:	050106cc 	streq	r0, [r1, #-1740]	; 0xfffff934
    7224:	09031309 	stmdbeq	r3, {r0, r3, r8, r9, ip}
    7228:	061b0501 	ldreq	r0, [fp], -r1, lsl #10
    722c:	00190501 	andseq	r0, r9, r1, lsl #10
    7230:	58040402 	stmdapl	r4, {r1, sl}
    7234:	02000905 	andeq	r0, r0, #81920	; 0x14000
    7238:	22060404 	andcs	r0, r6, #4, 8	; 0x4000000
    723c:	02000b05 	andeq	r0, r0, #5120	; 0x1400
    7240:	01060404 	tsteq	r6, r4, lsl #8
    7244:	22060d05 	andcs	r0, r6, #320	; 0x140
    7248:	01061f05 	tsteq	r6, r5, lsl #30
    724c:	20201d05 	eorcs	r1, r0, r5, lsl #26
    7250:	051c1b05 	ldreq	r1, [ip, #-2821]	; 0xfffff4fb
    7254:	2e09031d 	mcrcs	3, 0, r0, cr9, cr13, {0}
    7258:	23060905 	movwcs	r0, #26885	; 0x6905
    725c:	13060505 	movwne	r0, #25861	; 0x6505
    7260:	01000302 	tsteq	r0, r2, lsl #6
    7264:	00050501 	andeq	r0, r5, r1, lsl #10
    7268:	2e300205 	cdpcs	2, 3, cr0, cr0, cr5, {0}
    726c:	81031000 	mrshi	r1, (UNDEF: 3)
    7270:	01060107 	tsteq	r6, r7, lsl #2
    7274:	21060905 	tstcs	r6, r5, lsl #18
    7278:	05222114 	streq	r2, [r2, #-276]!	; 0xfffffeec
    727c:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
    7280:	0532060d 	ldreq	r0, [r2, #-1549]!	; 0xfffff9f3
    7284:	05010613 	streq	r0, [r1, #-1555]	; 0xfffff9ed
    7288:	0f05204a 	svceq	0x0005204a
    728c:	32220520 	eorcc	r0, r2, #32, 10	; 0x8000000
    7290:	17030505 	strne	r0, [r3, -r5, lsl #10]
    7294:	06110520 	ldreq	r0, [r1], -r0, lsr #10
    7298:	06206d03 	strteq	r6, [r0], -r3, lsl #26
    729c:	14052e20 	strne	r2, [r5], #-3616	; 0xfffff1e0
    72a0:	052e6f03 	streq	r6, [lr, #-3843]!	; 0xfffff0fd
    72a4:	1603060d 	strne	r0, [r3], -sp, lsl #12
    72a8:	060f052e 	streq	r0, [pc], -lr, lsr #10
    72ac:	002d0501 	eoreq	r0, sp, r1, lsl #10
    72b0:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    72b4:	03061105 	movweq	r1, #24837	; 0x6105
    72b8:	20062e09 	andcs	r2, r6, r9, lsl #28
    72bc:	14052020 	strne	r2, [r5], #-32	; 0xffffffe0
    72c0:	052e6103 	streq	r6, [lr, #-259]!	; 0xfffffefd
    72c4:	2e1b0322 	cdpcs	3, 1, cr0, cr11, cr2, {1}
    72c8:	28060905 	stmdacs	r6, {r0, r2, r8, fp}
    72cc:	01061005 	tsteq	r6, r5
    72d0:	01000602 	tsteq	r0, r2, lsl #12
    72d4:	00050501 	andeq	r0, r5, r1, lsl #10
    72d8:	2e780205 	cdpcs	2, 7, cr0, cr8, cr5, {0}
    72dc:	bd031000 	stclt	0, cr1, [r3, #-0]
    72e0:	01060105 	tsteq	r6, r5, lsl #2
    72e4:	4e060905 	vmlami.f16	s0, s12, s10	; <UNPREDICTABLE>
    72e8:	01060e05 	tsteq	r6, r5, lsl #28
    72ec:	23060d05 	movwcs	r0, #27909	; 0x6d05
    72f0:	01062405 	tsteq	r6, r5, lsl #8
    72f4:	05201a05 	streq	r1, [r0, #-2565]!	; 0xfffff5fb
    72f8:	0523062a 	streq	r0, [r3, #-1578]!	; 0xfffff9d6
    72fc:	1405130d 	strne	r1, [r5], #-781	; 0xfffffcf3
    7300:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    7304:	060e0520 	streq	r0, [lr], -r0, lsr #10
    7308:	052e7903 	streq	r7, [lr, #-2307]!	; 0xfffff6fd
    730c:	0501064d 	streq	r0, [r1, #-1613]	; 0xfffff9b3
    7310:	0e052010 	mcreq	0, 0, r2, cr5, cr0, {0}
    7314:	03050566 	movweq	r0, #21862	; 0x5566
    7318:	00202e09 	eoreq	r2, r0, r9, lsl #28
    731c:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    7320:	a0020500 	andge	r0, r2, r0, lsl #10
    7324:	0310002e 	tsteq	r0, #46	; 0x2e
    7328:	060105cf 	streq	r0, [r1], -pc, asr #11
    732c:	06090501 	streq	r0, [r9], -r1, lsl #10
    7330:	06310540 	ldrteq	r0, [r1], -r0, asr #10
    7334:	3c190501 	cfldr32cc	mvfx0, [r9], {1}
    7338:	25060905 	strcs	r0, [r6, #-2309]	; 0xfffff6fb
    733c:	01061205 	tsteq	r6, r5, lsl #4
    7340:	06090520 	streq	r0, [r9], -r0, lsr #10
    7344:	06160532 			; <UNDEFINED> instruction: 0x06160532
    7348:	2e0b0501 	cfsh32cs	mvfx0, mvfx11, #1
    734c:	42060d05 	andmi	r0, r6, #320	; 0x140
    7350:	01061f05 	tsteq	r6, r5, lsl #30
    7354:	4e062605 	cfmadd32mi	mvax0, mvfx2, mvfx6, mvfx5
    7358:	05130905 	ldreq	r0, [r3, #-2309]	; 0xfffff6fb
    735c:	05010610 	streq	r0, [r1, #-1552]	; 0xfffff9f0
    7360:	05052009 	streq	r2, [r5, #-9]
    7364:	060d052f 	streq	r0, [sp], -pc, lsr #10
    7368:	02207603 	eoreq	r7, r0, #3145728	; 0x300000
    736c:	01010009 	tsteq	r1, r9
    7370:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    7374:	002ee002 	eoreq	lr, lr, r2
    7378:	08be0310 	ldmeq	lr!, {r4, r8, r9}
    737c:	21090501 	tstcs	r9, r1, lsl #10
    7380:	0e051813 	mcreq	8, 0, r1, cr5, cr3, {0}
    7384:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    7388:	1f052206 	svcne	0x00052206
    738c:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    7390:	0e052506 	cfsh32eq	mvfx2, mvfx5, #6
    7394:	05587903 	ldrbeq	r7, [r8, #-2307]	; 0xfffff6fd
    7398:	05010610 	streq	r0, [r1, #-1552]	; 0xfffff9f0
    739c:	09053c0e 	stmdbeq	r5, {r1, r2, r3, sl, fp, ip, sp}
    73a0:	2e0a0306 	cdpcs	3, 0, cr0, cr10, cr6, {0}
    73a4:	061c0513 			; <UNDEFINED> instruction: 0x061c0513
    73a8:	06090501 	streq	r0, [r9], -r1, lsl #10
    73ac:	061d054b 	ldreq	r0, [sp], -fp, asr #10
    73b0:	21050501 	tstcs	r5, r1, lsl #10
    73b4:	00050220 	andeq	r0, r5, r0, lsr #4
    73b8:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    73bc:	10020500 	andne	r0, r2, r0, lsl #10
    73c0:	0310002f 	tsteq	r0, #47	; 0x2f
    73c4:	060106e7 	streq	r0, [r1], -r7, ror #13
    73c8:	06090501 	streq	r0, [r9], -r1, lsl #10
    73cc:	1319052f 	tstne	r9, #197132288	; 0xbc00000
    73d0:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    73d4:	2e010614 	mcrcs	6, 0, r0, cr1, cr4, {0}
    73d8:	22060905 	andcs	r0, r6, #81920	; 0x14000
    73dc:	01061605 	tsteq	r6, r5, lsl #12
    73e0:	052e0b05 	streq	r0, [lr, #-2821]!	; 0xfffff4fb
    73e4:	0535060d 	ldreq	r0, [r5, #-1549]!	; 0xfffff9f3
    73e8:	05010627 	streq	r0, [r1, #-1575]	; 0xfffff9d9
    73ec:	05310609 	ldreq	r0, [r1, #-1545]!	; 0xfffff9f7
    73f0:	05010613 	streq	r0, [r1, #-1555]	; 0xfffff9ed
    73f4:	05300609 	ldreq	r0, [r0, #-1545]!	; 0xfffff9f7
    73f8:	05130605 	ldreq	r0, [r3, #-1541]	; 0xfffff9fb
    73fc:	7503060d 	strvc	r0, [r3, #-1549]	; 0xfffff9f3
    7400:	27052f2e 	strcs	r2, [r5, -lr, lsr #30]
    7404:	05020106 	streq	r0, [r2, #-262]	; 0xfffffefa
    7408:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    740c:	02050005 	andeq	r0, r5, #5
    7410:	10002f3c 	andne	r2, r0, ip, lsr pc
    7414:	01068f03 	tsteq	r6, r3, lsl #30
    7418:	09050106 	stmdbeq	r5, {r1, r2, r8}
    741c:	14134b06 	ldrne	r4, [r3], #-2822	; 0xfffff4fa
    7420:	05350d05 	ldreq	r0, [r5, #-3333]!	; 0xfffff2fb
    7424:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    7428:	053e060d 	ldreq	r0, [lr, #-1549]!	; 0xfffff9f3
    742c:	05010629 	streq	r0, [r1, #-1577]	; 0xfffff9d7
    7430:	1105200f 	tstne	r5, pc
    7434:	13053106 	movwne	r3, #20742	; 0x5106
    7438:	32050106 	andcc	r0, r5, #-2147483647	; 0x80000001
    743c:	01040200 	mrseq	r0, R12_usr
    7440:	06150520 	ldreq	r0, [r5], -r0, lsr #10
    7444:	052e0d03 	streq	r0, [lr, #-3331]!	; 0xfffff2fd
    7448:	05010617 	streq	r0, [r1, #-1559]	; 0xfffff9e9
    744c:	05240619 	streq	r0, [r4, #-1561]!	; 0xfffff9e7
    7450:	05010629 	streq	r0, [r1, #-1577]	; 0xfffff9d7
    7454:	065b0615 			; <UNDEFINED> instruction: 0x065b0615
    7458:	0530064a 	ldreq	r0, [r0, #-1610]!	; 0xfffff9b6
    745c:	05010619 	streq	r0, [r1, #-1561]	; 0xfffff9e7
    7460:	05052e17 	streq	r2, [r5, #-3607]	; 0xfffff1e9
    7464:	05201303 	streq	r1, [r0, #-771]!	; 0xfffffcfd
    7468:	59030615 	stmdbpl	r3, {r0, r2, r4, r9, sl}
    746c:	061e052e 	ldreq	r0, [lr], -lr, lsr #10
    7470:	06150501 	ldreq	r0, [r5], -r1, lsl #10
    7474:	0629052f 	strteq	r0, [r9], -pc, lsr #10
    7478:	20580e03 	subscs	r0, r8, r3, lsl #28
    747c:	03061905 	movweq	r1, #26885	; 0x6905
    7480:	1105200b 	tstne	r5, fp
    7484:	053c0a03 	ldreq	r0, [ip, #-2563]!	; 0xfffff5fd
    7488:	0501061a 	streq	r0, [r1, #-1562]	; 0xfffff9e6
    748c:	06023105 	streq	r3, [r2], -r5, lsl #2
    7490:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    7494:	02050005 	andeq	r0, r5, #5
    7498:	10002fa4 	andne	r2, r0, r4, lsr #31
    749c:	0107aa03 	tsteq	r7, r3, lsl #20
    74a0:	052f0905 	streq	r0, [pc, #-2309]!	; 6ba3 <__HEAP_SIZE+0x5ba3>
    74a4:	0501061d 	streq	r0, [r1, #-1565]	; 0xfffff9e3
    74a8:	13590609 	cmpne	r9, #9437184	; 0x900000
    74ac:	0e051413 	cfmvdlreq	mvd5, r1
    74b0:	2d050106 	stfcss	f0, [r5, #-24]	; 0xffffffe8
    74b4:	20130306 	andscs	r0, r3, r6, lsl #6
    74b8:	05190d05 	ldreq	r0, [r9, #-3333]	; 0xfffff2fb
    74bc:	05010619 	streq	r0, [r1, #-1561]	; 0xfffff9e7
    74c0:	0e05200f 	cdpeq	0, 0, cr2, cr5, cr15, {0}
    74c4:	2e660306 	cdpcs	3, 6, cr0, cr6, cr6, {0}
    74c8:	01061005 	tsteq	r6, r5
    74cc:	05660e05 	strbeq	r0, [r6, #-3589]!	; 0xfffff1fb
    74d0:	05340611 	ldreq	r0, [r4, #-1553]!	; 0xfffff9ef
    74d4:	0501061d 	streq	r0, [r1, #-1565]	; 0xfffff9e3
    74d8:	15052013 	strne	r2, [r5, #-19]	; 0xffffffed
    74dc:	2f053006 	svccs	0x00053006
    74e0:	15150516 	ldrne	r0, [r5, #-1302]	; 0xfffffaea
    74e4:	0f031105 	svceq	0x00031105
    74e8:	06190558 			; <UNDEFINED> instruction: 0x06190558
    74ec:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    74f0:	06150522 	ldreq	r0, [r5], -r2, lsr #10
    74f4:	20130501 	andscs	r0, r3, r1, lsl #10
    74f8:	23061505 	movwcs	r1, #25861	; 0x6505
    74fc:	01061e05 	tsteq	r6, r5, lsl #28
    7500:	40062d05 	andmi	r2, r6, r5, lsl #26
    7504:	05157705 	ldreq	r7, [r5, #-1797]	; 0xfffff8fb
    7508:	1c051a11 			; <UNDEFINED> instruction: 0x1c051a11
    750c:	11050106 	tstne	r5, r6, lsl #2
    7510:	21054c06 	tstcs	r5, r6, lsl #24
    7514:	11050106 	tstne	r5, r6, lsl #2
    7518:	06190520 	ldreq	r0, [r9], -r0, lsr #10
    751c:	062b05a5 	strteq	r0, [fp], -r5, lsr #11
    7520:	06190501 	ldreq	r0, [r9], -r1, lsl #10
    7524:	065d0568 	ldrbeq	r0, [sp], -r8, ror #10
    7528:	20750501 	rsbscs	r0, r5, r1, lsl #10
    752c:	3c201d05 	stccc	13, cr1, [r0], #-20	; 0xffffffec
    7530:	052e1b05 	streq	r1, [lr, #-2821]!	; 0xfffff4fb
    7534:	0532061d 	ldreq	r0, [r2, #-1565]!	; 0xfffff9e3
    7538:	0501062a 	streq	r0, [r1, #-1578]	; 0xfffff9d6
    753c:	21052e1f 	tstcs	r5, pc, lsl lr
    7540:	33054206 	movwcc	r4, #20998	; 0x5206
    7544:	3a050106 	bcc	147964 <__RAM_SIZE+0x47964>
    7548:	1d054e06 	stcne	14, cr4, [r5, #-24]	; 0xffffffe8
    754c:	06240513 			; <UNDEFINED> instruction: 0x06240513
    7550:	201d0501 	andscs	r0, sp, r1, lsl #10
    7554:	03062105 	movweq	r2, #24837	; 0x6105
    7558:	6d053c77 	stcvs	12, cr3, [r5, #-476]	; 0xfffffe24
    755c:	21050106 	tstcs	r5, r6, lsl #2
    7560:	06190520 	ldreq	r0, [r9], -r0, lsr #10
    7564:	05741503 	ldrbeq	r1, [r4, #-1283]!	; 0xfffffafd
    7568:	0501062b 	streq	r0, [r1, #-1579]	; 0xfffff9d5
    756c:	24670619 	strbtcs	r0, [r7], #-1561	; 0xfffff9e7
    7570:	01062b05 	tsteq	r6, r5, lsl #22
    7574:	67061905 	strvs	r1, [r6, -r5, lsl #18]
    7578:	01065305 	tsteq	r6, r5, lsl #6
    757c:	05203605 	streq	r3, [r0, #-1541]!	; 0xfffff9fb
    7580:	0521064d 	streq	r0, [r1, #-1613]!	; 0xfffff9b3
    7584:	22051a19 	andcs	r1, r5, #102400	; 0x19000
    7588:	054a0106 	strbeq	r0, [sl, #-262]	; 0xfffffefa
    758c:	052f0619 	streq	r0, [pc, #-1561]!	; 6f7b <__HEAP_SIZE+0x5f7b>
    7590:	2a05281d 	bcs	15160c <__RAM_SIZE+0x5160c>
    7594:	1f050106 	svcne	0x00050106
    7598:	0621052e 	strteq	r0, [r1], -lr, lsr #10
    759c:	06330542 	ldrteq	r0, [r3], -r2, asr #10
    75a0:	06210501 	strteq	r0, [r1], -r1, lsl #10
    75a4:	05200654 	streq	r0, [r0, #-1620]!	; 0xfffff9ac
    75a8:	3c180305 	ldccc	3, cr0, [r8], {5}
    75ac:	01000402 	tsteq	r0, r2, lsl #8
    75b0:	00050501 	andeq	r0, r5, r1, lsl #10
    75b4:	309c0205 	addscc	r0, ip, r5, lsl #4
    75b8:	ec031000 	stc	0, cr1, [r3], {-0}
    75bc:	01060105 	tsteq	r6, r5, lsl #2
    75c0:	02000905 	andeq	r0, r0, #81920	; 0x14000
    75c4:	2f060104 	svccs	0x00060104
    75c8:	01040200 	mrseq	r0, R12_usr
    75cc:	04020013 	streq	r0, [r2], #-19	; 0xffffffed
    75d0:	02001501 	andeq	r1, r0, #4194304	; 0x400000
    75d4:	0c030104 	stfeqs	f0, [r3], {4}
    75d8:	000d0501 	andeq	r0, sp, r1, lsl #10
    75dc:	16010402 	strne	r0, [r1], -r2, lsl #8
    75e0:	02001f05 	andeq	r1, r0, #5, 30
    75e4:	01060104 	tsteq	r6, r4, lsl #2
    75e8:	02000d05 	andeq	r0, r0, #320	; 0x140
    75ec:	40060104 	andmi	r0, r6, r4, lsl #2
    75f0:	01040200 	mrseq	r0, R12_usr
    75f4:	002d053f 	eoreq	r0, sp, pc, lsr r5
    75f8:	03010402 	movweq	r0, #5122	; 0x1402
    75fc:	01022e75 	tsteq	r2, r5, ror lr
    7600:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    7604:	02050005 	andeq	r0, r5, #5
    7608:	100030b4 	strhne	r3, [r0], -r4
    760c:	0108d703 	tsteq	r8, r3, lsl #14
    7610:	05320905 	ldreq	r0, [r2, #-2309]!	; 0xfffff6fb
    7614:	1d05300d 	stcne	0, cr3, [r5, #-52]	; 0xffffffcc
    7618:	0f050106 	svceq	0x00050106
    761c:	0629052e 	strteq	r0, [r9], -lr, lsr #10
    7620:	05202503 	streq	r2, [r0, #-1283]!	; 0xfffffafd
    7624:	05051509 	streq	r1, [r5, #-1289]	; 0xfffffaf7
    7628:	11052f06 	tstne	r5, r6, lsl #30
    762c:	2e590306 	cdpcs	3, 5, cr0, cr9, cr6, {0}
    7630:	24054b4b 	strcs	r4, [r5], #-2891	; 0xfffff4b5
    7634:	11050106 	tstne	r5, r6, lsl #2
    7638:	25052f06 	strcs	r2, [r5, #-3846]	; 0xfffff0fa
    763c:	34060106 	strcc	r0, [r6], #-262	; 0xfffffefa
    7640:	14150513 	ldrne	r0, [r5], #-1299	; 0xfffffaed
    7644:	01062305 	tsteq	r6, r5, lsl #6
    7648:	08822105 	stmeq	r2, {r0, r2, r8, sp}
    764c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    7650:	02050005 	andeq	r0, r5, #5
    7654:	00000000 	andeq	r0, r0, r0
    7658:	0103a603 	tsteq	r3, r3, lsl #12
    765c:	34050106 	strcc	r0, [r5], #-262	; 0xfffffefa
    7660:	09057606 	stmdbeq	r5, {r1, r2, r9, sl, ip, sp, lr}
    7664:	21053216 	tstcs	r5, r6, lsl r2
    7668:	09050106 	stmdbeq	r5, {r1, r2, r8}
    766c:	29052f06 	stmdbcs	r5, {r1, r2, r8, r9, sl, fp, sp}
    7670:	09050106 	stmdbeq	r5, {r1, r2, r8}
    7674:	1f052106 	svcne	0x00052106
    7678:	09050106 	stmdbeq	r5, {r1, r2, r8}
    767c:	28052106 	stmdacs	r5, {r1, r2, r8, sp}
    7680:	09050106 	stmdbeq	r5, {r1, r2, r8}
    7684:	053e2f06 	ldreq	r2, [lr, #-3846]!	; 0xfffff0fa
    7688:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
    768c:	0522060d 	streq	r0, [r2, #-1549]!	; 0xfffff9f3
    7690:	05010622 	streq	r0, [r1, #-1570]	; 0xfffff9de
    7694:	05690628 	strbeq	r0, [r9, #-1576]!	; 0xfffff9d8
    7698:	2e130605 	cfmsub32cs	mvax0, mvfx0, mvfx3, mvfx5
    769c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    76a0:	02050005 	andeq	r0, r5, #5
    76a4:	10003114 	andne	r3, r0, r4, lsl r1
    76a8:	0101ed03 	tsteq	r1, r3, lsl #26
    76ac:	052f0905 	streq	r0, [pc, #-2309]!	; 6daf <__HEAP_SIZE+0x5daf>
    76b0:	0905142b 	stmdbeq	r5, {r0, r1, r3, r5, sl, ip}
    76b4:	19053018 	stmdbne	r5, {r3, r4, ip, sp}
    76b8:	0b050106 	bleq	147ad8 <__RAM_SIZE+0x47ad8>
    76bc:	0615052e 	ldreq	r0, [r5], -lr, lsr #10
    76c0:	05202903 	streq	r2, [r0, #-2307]!	; 0xfffff6fd
    76c4:	05010624 	streq	r0, [r1, #-1572]	; 0xfffff9dc
    76c8:	052f0615 	streq	r0, [pc, #-1557]!	; 70bb <__HEAP_SIZE+0x60bb>
    76cc:	05010623 	streq	r0, [r1, #-1571]	; 0xfffff9dd
    76d0:	14210615 	strtne	r0, [r1], #-1557	; 0xfffff9eb
    76d4:	06280559 			; <UNDEFINED> instruction: 0x06280559
    76d8:	ba260501 	blt	988ae4 <__RAM_SIZE+0x888ae4>
    76dc:	36061505 	strcc	r1, [r6], -r5, lsl #10
    76e0:	01061705 	tsteq	r6, r5, lsl #14
    76e4:	20222105 	eorcs	r2, r2, r5, lsl #2
    76e8:	03140520 	tsteq	r4, #32, 10	; 0x8000000
    76ec:	05017fbe 	streq	r7, [r1, #-4030]	; 0xfffff042
    76f0:	d4030625 	strle	r0, [r3], #-1573	; 0xfffff9db
    76f4:	20053c00 	andcs	r3, r5, r0, lsl #24
    76f8:	14350515 	ldrtne	r0, [r5], #-1301	; 0xfffffaeb
    76fc:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    7700:	02130605 	andseq	r0, r3, #5242880	; 0x500000
    7704:	0101000b 	tsteq	r1, fp
    7708:	05000905 	streq	r0, [r0, #-2309]	; 0xfffff6fb
    770c:	00000002 	andeq	r0, r0, r2
    7710:	02d40300 	sbcseq	r0, r4, #0, 6
    7714:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    7718:	0575060d 	ldrbeq	r0, [r5, #-1549]!	; 0xfffff9f3
    771c:	0d051474 	cfstrseq	mvf1, [r5, #-464]	; 0xfffffe30
    7720:	06280517 			; <UNDEFINED> instruction: 0x06280517
    7724:	0d052001 	stceq	0, cr2, [r5, #-4]
    7728:	0f053006 	svceq	0x00053006
    772c:	11050106 	tstne	r5, r6, lsl #2
    7730:	26053306 	strcs	r3, [r5], -r6, lsl #6
    7734:	11050106 	tstne	r5, r6, lsl #2
    7738:	74063d06 	strvc	r3, [r6], #-3334	; 0xfffff2fa
    773c:	31063305 	tstcc	r6, r5, lsl #6
    7740:	05140d05 	ldreq	r0, [r4, #-3333]	; 0xfffff2fb
    7744:	4a130609 	bmi	4c8f70 <__RAM_SIZE+0x3c8f70>
    7748:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    774c:	02050009 	andeq	r0, r5, #9
    7750:	00000000 	andeq	r0, r0, r0
    7754:	0102f703 	tsteq	r2, r3, lsl #14	; <UNPREDICTABLE>
    7758:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    775c:	89053d06 	stmdbhi	r5, {r1, r2, r8, sl, fp, ip, sp}
    7760:	2a051401 	bcs	14c76c <__RAM_SIZE+0x4c76c>
    7764:	05010e03 	streq	r0, [r1, #-3587]	; 0xfffff1fd
    7768:	0514160d 	ldreq	r1, [r4, #-1549]	; 0xfffff9f3
    776c:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    7770:	05250611 	streq	r0, [r5, #-1553]!	; 0xfffff9ef
    7774:	05010626 	streq	r0, [r1, #-1574]	; 0xfffff9da
    7778:	054c0611 	strbeq	r0, [ip, #-1553]	; 0xfffff9ef
    777c:	0d055b39 	vstreq	d5, [r5, #-228]	; 0xffffff1c
    7780:	06090514 			; <UNDEFINED> instruction: 0x06090514
    7784:	01003c13 	tsteq	r0, r3, lsl ip
    7788:	00050501 	andeq	r0, r5, r1, lsl #10
    778c:	00000205 	andeq	r0, r0, r5, lsl #4
    7790:	c4030000 	strgt	r0, [r3], #-0
    7794:	09050103 	stmdbeq	r5, {r0, r1, r8}
    7798:	05141313 	ldreq	r1, [r4, #-787]	; 0xfffffced
    779c:	1f05147f 	svcne	0x0005147f
    77a0:	16090514 			; <UNDEFINED> instruction: 0x16090514
    77a4:	01061905 	tsteq	r6, r5, lsl #18
    77a8:	200b0520 	andcs	r0, fp, r0, lsr #10
    77ac:	74030505 	strvc	r0, [r3], #-1285	; 0xfffffafb
    77b0:	060d0520 	streq	r0, [sp], -r0, lsr #10
    77b4:	052e0f03 	streq	r0, [lr, #-3843]!	; 0xfffff0fd
    77b8:	05010621 	streq	r0, [r1, #-1569]	; 0xfffff9df
    77bc:	0521060d 	streq	r0, [r1, #-1549]!	; 0xfffff9f3
    77c0:	05010637 	streq	r0, [r1, #-1591]	; 0xfffff9c9
    77c4:	0521060d 	streq	r0, [r1, #-1549]!	; 0xfffff9f3
    77c8:	05010631 	streq	r0, [r1, #-1585]	; 0xfffff9cf
    77cc:	05220643 	streq	r0, [r2, #-1603]!	; 0xfffff9bd
    77d0:	0f05140d 	svceq	0x0005140d
    77d4:	14050106 	strne	r0, [r5], #-262	; 0xfffffefa
    77d8:	052e6c03 	streq	r6, [lr, #-3075]!	; 0xfffff3fd
    77dc:	24030625 	strcs	r0, [r3], #-1573	; 0xfffff9db
    77e0:	153c0520 	ldrne	r0, [ip, #-1312]!	; 0xfffffae0
    77e4:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    77e8:	05130605 	ldreq	r0, [r3, #-1541]	; 0xfffff9fb
    77ec:	6c030611 	stcvs	6, cr0, [r3], {17}
    77f0:	0615053c 			; <UNDEFINED> instruction: 0x0615053c
    77f4:	2e130501 	cfmul32cs	mvfx0, mvfx3, mvfx1
    77f8:	34061505 	strcc	r1, [r6], #-1285	; 0xfffffafb
    77fc:	01061f05 	tsteq	r6, r5, lsl #30
    7800:	06150574 			; <UNDEFINED> instruction: 0x06150574
    7804:	061f051c 			; <UNDEFINED> instruction: 0x061f051c
    7808:	14057401 	strne	r7, [r5], #-1025	; 0xfffffbff
    780c:	05206803 	streq	r6, [r0, #-2051]!	; 0xfffff7fd
    7810:	202a0305 	eorcs	r0, sl, r5, lsl #6
    7814:	01000302 	tsteq	r0, r2, lsl #6
    7818:	00050501 	andeq	r0, r5, r1, lsl #10
    781c:	00000205 	andeq	r0, r0, r5, lsl #4
    7820:	f7030000 			; <UNDEFINED> instruction: 0xf7030000
    7824:	01060103 	tsteq	r6, r3, lsl #2
    7828:	3d060905 	vstrcc.16	s0, [r6, #-10]	; <UNPREDICTABLE>
    782c:	7e051413 	cfmvdlrvc	mvd5, r1
    7830:	141f0514 	ldrne	r0, [pc], #-1300	; 7838 <__HEAP_SIZE+0x6838>
    7834:	05160905 	ldreq	r0, [r6, #-2309]	; 0xfffff6fb
    7838:	20010619 	andcs	r0, r1, r9, lsl r6
    783c:	05200b05 	streq	r0, [r0, #-2821]!	; 0xfffff4fb
    7840:	0523060d 	streq	r0, [r3, #-1549]!	; 0xfffff9f3
    7844:	05010621 	streq	r0, [r1, #-1569]	; 0xfffff9df
    7848:	0521060d 	streq	r0, [r1, #-1549]!	; 0xfffff9f3
    784c:	05010637 	streq	r0, [r1, #-1591]	; 0xfffff9c9
    7850:	0521060d 	streq	r0, [r1, #-1549]!	; 0xfffff9f3
    7854:	05010631 	streq	r0, [r1, #-1585]	; 0xfffff9cf
    7858:	05220644 	streq	r0, [r2, #-1604]!	; 0xfffff9bc
    785c:	0f05140d 	svceq	0x0005140d
    7860:	14050106 	strne	r0, [r5], #-262	; 0xfffffefa
    7864:	052e6c03 	streq	r6, [lr, #-3075]!	; 0xfffff3fd
    7868:	1d030625 	stcne	6, cr0, [r3, #-148]	; 0xffffff6c
    786c:	153b0520 	ldrne	r0, [fp, #-1312]!	; 0xfffffae0
    7870:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    7874:	05130605 	ldreq	r0, [r3, #-1541]	; 0xfffff9fb
    7878:	73030611 	movwvc	r0, #13841	; 0x3611
    787c:	061b052e 	ldreq	r0, [fp], -lr, lsr #10
    7880:	20202e01 	eorcs	r2, r0, r1, lsl #28
    7884:	0314052e 	tsteq	r4, #192937984	; 0xb800000
    7888:	0220206a 	eoreq	r2, r0, #106	; 0x6a
    788c:	01010004 	tsteq	r1, r4
    7890:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    7894:	00000002 	andeq	r0, r0, r2
    7898:	049f0300 	ldreq	r0, [pc], #768	; 78a0 <__HEAP_SIZE+0x68a0>
    789c:	13340501 	teqne	r4, #4194304	; 0x400000
    78a0:	05163505 	ldreq	r3, [r6, #-1285]	; 0xfffffafb
    78a4:	09051447 	stmdbeq	r5, {r0, r1, r2, r6, sl, ip}
    78a8:	06050514 			; <UNDEFINED> instruction: 0x06050514
    78ac:	00060213 	andeq	r0, r6, r3, lsl r2
    78b0:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    78b4:	00020500 	andeq	r0, r2, r0, lsl #10
    78b8:	03000000 	movweq	r0, #0
    78bc:	050104ad 	streq	r0, [r1, #-1197]	; 0xfffffb53
    78c0:	2d051309 	stccs	3, cr1, [r5, #-36]	; 0xffffffdc
    78c4:	141f0514 	ldrne	r0, [pc], #-1300	; 78cc <__HEAP_SIZE+0x68cc>
    78c8:	05144405 	ldreq	r4, [r4, #-1029]	; 0xfffffbfb
    78cc:	05051409 	streq	r1, [r5, #-1033]	; 0xfffffbf7
    78d0:	02201306 	eoreq	r1, r0, #402653184	; 0x18000000
    78d4:	01010001 	tsteq	r1, r1
    78d8:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    78dc:	00000002 	andeq	r0, r0, r2
    78e0:	04bc0300 	ldrteq	r0, [ip], #768	; 0x300
    78e4:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    78e8:	053d0609 	ldreq	r0, [sp, #-1545]!	; 0xfffff9f7
    78ec:	1f05143e 	svcne	0x0005143e
    78f0:	13090514 	movwne	r0, #38164	; 0x9514
    78f4:	05300d05 	ldreq	r0, [r0, #-3333]!	; 0xfffff2fb
    78f8:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    78fc:	05220611 	streq	r0, [r2, #-1553]!	; 0xfffff9ef
    7900:	05010623 	streq	r0, [r1, #-1571]	; 0xfffff9dd
    7904:	056d0609 	strbeq	r0, [sp, #-1545]!	; 0xfffff9f7
    7908:	0505302a 	streq	r3, [r5, #-42]	; 0xffffffd6
    790c:	11051306 	tstne	r5, r6, lsl #6
    7910:	207a0306 	rsbscs	r0, sl, r6, lsl #6
    7914:	01062305 	tsteq	r6, r5, lsl #6
    7918:	01000702 	tsteq	r0, r2, lsl #14
    791c:	00050501 	andeq	r0, r5, r1, lsl #10
    7920:	00000205 	andeq	r0, r0, r5, lsl #4
    7924:	d4030000 	strle	r0, [r3], #-0
    7928:	01060104 	tsteq	r6, r4, lsl #2
    792c:	2f060905 	svccs	0x00060905
    7930:	14310513 	ldrtne	r0, [r1], #-1299	; 0xfffffaed
    7934:	05141f05 	ldreq	r1, [r4, #-3845]	; 0xfffff0fb
    7938:	0d051309 	stceq	3, cr1, [r5, #-36]	; 0xffffffdc
    793c:	061a0530 			; <UNDEFINED> instruction: 0x061a0530
    7940:	2e0f0501 	cfsh32cs	mvfx0, mvfx15, #1
    7944:	053f1905 	ldreq	r1, [pc, #-2309]!	; 7047 <__HEAP_SIZE+0x6047>
    7948:	05280609 	streq	r0, [r8, #-1545]!	; 0xfffff9f7
    794c:	09053033 	stmdbeq	r5, {r0, r1, r4, r5, ip, sp}
    7950:	06050514 			; <UNDEFINED> instruction: 0x06050514
    7954:	03190513 	tsteq	r9, #79691776	; 0x4c00000
    7958:	02202e78 	eoreq	r2, r0, #120, 28	; 0x780
    795c:	01010001 	tsteq	r1, r1
    7960:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    7964:	00000002 	andeq	r0, r0, r2
    7968:	04f00300 	ldrbteq	r0, [r0], #768	; 0x300
    796c:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    7970:	05210609 	streq	r0, [r1, #-1545]!	; 0xfffff9f7
    7974:	09051432 	stmdbeq	r5, {r1, r4, r5, sl, ip}
    7978:	06240514 			; <UNDEFINED> instruction: 0x06240514
    797c:	06350501 	ldrteq	r0, [r5], -r1, lsl #10
    7980:	14090530 	strne	r0, [r9], #-1328	; 0xfffffad0
    7984:	13060505 	movwne	r0, #25861	; 0x6505
    7988:	01000102 	tsteq	r0, r2, lsl #2
    798c:	00050501 	andeq	r0, r5, r1, lsl #10
    7990:	00000205 	andeq	r0, r0, r5, lsl #4
    7994:	fe030000 	cdp2	0, 0, cr0, cr3, cr0, {0}
    7998:	09050104 	stmdbeq	r5, {r2, r8}
    799c:	31051313 	tstcc	r5, r3, lsl r3
    79a0:	141f0514 	ldrne	r0, [pc], #-1300	; 79a8 <__HEAP_SIZE+0x69a8>
    79a4:	05130905 	ldreq	r0, [r3, #-2309]	; 0xfffff6fb
    79a8:	09051433 	stmdbeq	r5, {r0, r1, r4, r5, sl, ip}
    79ac:	06050514 			; <UNDEFINED> instruction: 0x06050514
    79b0:	01022013 	tsteq	r2, r3, lsl r0
    79b4:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    79b8:	02050009 	andeq	r0, r5, #9
    79bc:	00000000 	andeq	r0, r0, r0
    79c0:	01059003 	tsteq	r5, r3
    79c4:	13130d05 	tstne	r3, #320	; 0x140
    79c8:	05144705 	ldreq	r4, [r4, #-1797]	; 0xfffff8fb
    79cc:	0d051433 	cfstrseq	mvf1, [r5, #-204]	; 0xffffff34
    79d0:	061a0514 			; <UNDEFINED> instruction: 0x061a0514
    79d4:	2e0f0501 	cfsh32cs	mvfx0, mvfx15, #1
    79d8:	41061105 	tstmi	r6, r5, lsl #2
    79dc:	01062105 	tsteq	r6, r5, lsl #2
    79e0:	21061105 	tstcs	r6, r5, lsl #2
    79e4:	01061905 	tsteq	r6, r5, lsl #18
    79e8:	39052420 	stmdbcc	r5, {r5, sl, sp}
    79ec:	0d052306 	stceq	3, cr2, [r5, #-24]	; 0xffffffe8
    79f0:	06090514 			; <UNDEFINED> instruction: 0x06090514
    79f4:	00010213 	andeq	r0, r1, r3, lsl r2
    79f8:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    79fc:	00020500 	andeq	r0, r2, r0, lsl #10
    7a00:	03000000 	movweq	r0, #0
    7a04:	050105ad 	streq	r0, [r1, #-1453]	; 0xfffffa53
    7a08:	2c051309 	stccs	3, cr1, [r5], {9}
    7a0c:	141f0514 	ldrne	r0, [pc], #-1300	; 7a14 <__HEAP_SIZE+0x6a14>
    7a10:	05143b05 	ldreq	r3, [r4, #-2821]	; 0xfffff4fb
    7a14:	05051409 	streq	r1, [r5, #-1033]	; 0xfffffbf7
    7a18:	02201306 	eoreq	r1, r0, #402653184	; 0x18000000
    7a1c:	01010001 	tsteq	r1, r1
    7a20:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    7a24:	00000002 	andeq	r0, r0, r2
    7a28:	098a0300 	stmibeq	sl, {r8, r9}
    7a2c:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    7a30:	132f0609 			; <UNDEFINED> instruction: 0x132f0609
    7a34:	05143105 	ldreq	r3, [r4, #-261]	; 0xfffffefb
    7a38:	0905141f 	stmdbeq	r5, {r0, r1, r2, r3, r4, sl, ip}
    7a3c:	300d0515 	andcc	r0, sp, r5, lsl r5
    7a40:	01061a05 	tsteq	r6, r5, lsl #20
    7a44:	052e0f05 	streq	r0, [lr, #-3845]!	; 0xfffff0fb
    7a48:	09053e19 	stmdbeq	r5, {r0, r3, r4, r9, sl, fp, ip, sp}
    7a4c:	33052706 	movwcc	r2, #22278	; 0x5706
    7a50:	14090530 	strne	r0, [r9], #-1328	; 0xfffffad0
    7a54:	13060505 	movwne	r0, #25861	; 0x6505
    7a58:	78031905 	stmdavc	r3, {r0, r2, r8, fp, ip}
    7a5c:	0102202e 	tsteq	r2, lr, lsr #32
    7a60:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    7a64:	02050005 	andeq	r0, r5, #5
    7a68:	00000000 	andeq	r0, r0, r0
    7a6c:	0109a703 	tsteq	r9, r3, lsl #14
    7a70:	09050106 	stmdbeq	r5, {r1, r2, r8}
    7a74:	05132f06 	ldreq	r2, [r3, #-3846]	; 0xfffff0fa
    7a78:	1f05142f 	svcne	0x0005142f
    7a7c:	14090514 	strne	r0, [r9], #-1300	; 0xfffffaec
    7a80:	05300d05 	ldreq	r0, [r0, #-3333]!	; 0xfffff2fb
    7a84:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    7a88:	05220609 	streq	r0, [r2, #-1545]!	; 0xfffff9f7
    7a8c:	09053032 	stmdbeq	r5, {r1, r4, r5, ip, sp}
    7a90:	06050514 			; <UNDEFINED> instruction: 0x06050514
    7a94:	01002e13 	tsteq	r0, r3, lsl lr
    7a98:	00050501 	andeq	r0, r5, r1, lsl #10
    7a9c:	00000205 	andeq	r0, r0, r5, lsl #4
    7aa0:	bd030000 	stclt	0, cr0, [r3, #-0]
    7aa4:	01060109 	tsteq	r6, r9, lsl #2
    7aa8:	3d060905 	vstrcc.16	s0, [r6, #-10]	; <UNPREDICTABLE>
    7aac:	05143705 	ldreq	r3, [r4, #-1797]	; 0xfffff8fb
    7ab0:	0905141f 	stmdbeq	r5, {r0, r1, r2, r3, r4, sl, ip}
    7ab4:	300d0514 	andcc	r0, sp, r4, lsl r5
    7ab8:	01062005 	tsteq	r6, r5
    7abc:	22060905 	andcs	r0, r6, #81920	; 0x14000
    7ac0:	05302705 	ldreq	r2, [r0, #-1797]!	; 0xfffff8fb
    7ac4:	20130605 	andscs	r0, r3, r5, lsl #12
    7ac8:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    7acc:	02050009 	andeq	r0, r5, #9
    7ad0:	00000000 	andeq	r0, r0, r0
    7ad4:	0109d403 	tsteq	r9, r3, lsl #8
    7ad8:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    7adc:	05134b06 	ldreq	r4, [r3, #-2822]	; 0xfffff4fa
    7ae0:	0d05147f 	cfstrseq	mvf1, [r5, #-508]	; 0xfffffe04
    7ae4:	06210516 			; <UNDEFINED> instruction: 0x06210516
    7ae8:	0d052e01 	stceq	14, cr2, [r5, #-4]
    7aec:	3f052106 	svccc	0x00052106
    7af0:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    7af4:	39052106 	stmdbcc	r5, {r1, r2, r8, sp}
    7af8:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    7afc:	39052106 	stmdbcc	r5, {r1, r2, r8, sp}
    7b00:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    7b04:	17052206 	strne	r2, [r5, -r6, lsl #4]
    7b08:	202e0106 	eorcs	r0, lr, r6, lsl #2
    7b0c:	3e066105 	adfccs	f6, f6, f5
    7b10:	05134105 	ldreq	r4, [r3, #-261]	; 0xfffffefb
    7b14:	0905140d 	stmdbeq	r5, {r0, r2, r3, sl, ip}
    7b18:	022e1306 	eoreq	r1, lr, #402653184	; 0x18000000
    7b1c:	01010002 	tsteq	r1, r2
    7b20:	05000905 	streq	r0, [r0, #-2309]	; 0xfffff6fb
    7b24:	00000002 	andeq	r0, r0, r2
    7b28:	09f20300 	ldmibeq	r2!, {r8, r9}^
    7b2c:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    7b30:	134b060d 	movtne	r0, #46605	; 0xb60d
    7b34:	05146b05 	ldreq	r6, [r4, #-2821]	; 0xfffff4fb
    7b38:	0d051728 	stceq	7, cr1, [r5, #-160]	; 0xffffff60
    7b3c:	06210516 			; <UNDEFINED> instruction: 0x06210516
    7b40:	0d052e01 	stceq	14, cr2, [r5, #-4]
    7b44:	3f052106 	svccc	0x00052106
    7b48:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    7b4c:	39052106 	stmdbcc	r5, {r1, r2, r8, sp}
    7b50:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    7b54:	39052106 	stmdbcc	r5, {r1, r2, r8, sp}
    7b58:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    7b5c:	17052206 	strne	r2, [r5, -r6, lsl #4]
    7b60:	202e0106 	eorcs	r0, lr, r6, lsl #2
    7b64:	3e065805 	cdpcc	8, 0, cr5, cr6, cr5, {0}
    7b68:	05133a05 	ldreq	r3, [r3, #-2565]	; 0xfffff5fb
    7b6c:	0905140d 	stmdbeq	r5, {r0, r2, r3, sl, ip}
    7b70:	022e1306 	eoreq	r1, lr, #402653184	; 0x18000000
    7b74:	01010002 	tsteq	r1, r2
    7b78:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    7b7c:	00000002 	andeq	r0, r0, r2
    7b80:	0ab20300 	beq	fec88788 <__StackTop+0xc6b88788>
    7b84:	13090501 	movwne	r0, #38145	; 0x9501
    7b88:	01061505 	tsteq	r6, r5, lsl #10
    7b8c:	3d060905 	vstrcc.16	s0, [r6, #-10]	; <UNPREDICTABLE>
    7b90:	01061a05 	tsteq	r6, r5, lsl #20
    7b94:	022f0505 	eoreq	r0, pc, #20971520	; 0x1400000
    7b98:	01010005 	tsteq	r1, r5
    7b9c:	0000074d 	andeq	r0, r0, sp, asr #14
    7ba0:	022a0003 	eoreq	r0, sl, #3
    7ba4:	01020000 	mrseq	r0, (UNDEF: 2)
    7ba8:	000d0efb 	strdeq	r0, [sp], -fp
    7bac:	01010101 	tsteq	r1, r1, lsl #2
    7bb0:	01000000 	mrseq	r0, (UNDEF: 0)
    7bb4:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
    7bb8:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    7bbc:	2f2e2e2f 	svccs	0x002e2e2f
    7bc0:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
    7bc4:	2f736f74 	svccs	0x00736f74
    7bc8:	65657246 	strbvs	r7, [r5, #-582]!	; 0xfffffdba
    7bcc:	534f5452 	movtpl	r5, #62546	; 0xf452
    7bd0:	726f702f 	rsbvc	r7, pc, #47	; 0x2f
    7bd4:	6c626174 	stfvse	f6, [r2], #-464	; 0xfffffe30
    7bd8:	654d2f65 	strbvs	r2, [sp, #-3941]	; 0xfffff09b
    7bdc:	6e614d6d 	cdpvs	13, 6, cr4, cr1, cr13, {3}
    7be0:	3a630067 	bcc	18c7d84 <__RAM_SIZE+0x17c7d84>
    7be4:	6573755c 	ldrbvs	r7, [r3, #-1372]!	; 0xfffffaa4
    7be8:	785c7372 	ldmdavc	ip, {r1, r4, r5, r6, r8, r9, ip, sp, lr}^
    7bec:	6e6f6469 	cdpvs	4, 6, cr6, cr15, cr9, {3}
    7bf0:	6f72705c 	svcvs	0x0072705c
    7bf4:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
    7bf8:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    7bfc:	6363675f 	cmnvs	r3, #24903680	; 0x17c0000
    7c00:	6363675c 	cmnvs	r3, #92, 14	; 0x1700000
    7c04:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
    7c08:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    7c0c:	61652d65 	cmnvs	r5, r5, ror #26
    7c10:	312d6962 			; <UNDEFINED> instruction: 0x312d6962
    7c14:	2d332e30 	ldccs	14, cr2, [r3, #-192]!	; 0xffffff40
    7c18:	31323032 	teqcc	r2, r2, lsr r0
    7c1c:	5c30312e 	ldfpls	f3, [r0], #-184	; 0xffffff48
    7c20:	5c62696c 			; <UNDEFINED> instruction: 0x5c62696c
    7c24:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
    7c28:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    7c2c:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    7c30:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    7c34:	30315c69 	eorscc	r5, r1, r9, ror #24
    7c38:	312e332e 			; <UNDEFINED> instruction: 0x312e332e
    7c3c:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
    7c40:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    7c44:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
    7c48:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
    7c4c:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
    7c50:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
    7c54:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
    7c58:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
    7c5c:	5f6d7261 	svcpl	0x006d7261
    7c60:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
    7c64:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
    7c68:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    7c6c:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    7c70:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    7c74:	30312d69 	eorscc	r2, r1, r9, ror #26
    7c78:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
    7c7c:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
    7c80:	615c3031 	cmpvs	ip, r1, lsr r0
    7c84:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    7c88:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    7c8c:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    7c90:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
    7c94:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    7c98:	63616d5c 	cmnvs	r1, #92, 26	; 0x1700
    7c9c:	656e6968 	strbvs	r6, [lr, #-2408]!	; 0xfffff698
    7ca0:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
    7ca4:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
    7ca8:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
    7cac:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
    7cb0:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
    7cb4:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
    7cb8:	5f6d7261 	svcpl	0x006d7261
    7cbc:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
    7cc0:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
    7cc4:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    7cc8:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    7ccc:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    7cd0:	30312d69 	eorscc	r2, r1, r9, ror #26
    7cd4:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
    7cd8:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
    7cdc:	615c3031 	cmpvs	ip, r1, lsr r0
    7ce0:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    7ce4:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    7ce8:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    7cec:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
    7cf0:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    7cf4:	7379735c 	cmnvc	r9, #92, 6	; 0x70000001
    7cf8:	2f2e2e00 	svccs	0x002e2e00
    7cfc:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    7d00:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    7d04:	6f747262 	svcvs	0x00747262
    7d08:	72462f73 	subvc	r2, r6, #460	; 0x1cc
    7d0c:	54526565 	ldrbpl	r6, [r2], #-1381	; 0xfffffa9b
    7d10:	702f534f 	eorvc	r5, pc, pc, asr #6
    7d14:	6174726f 	cmnvs	r4, pc, ror #4
    7d18:	2f656c62 	svccs	0x00656c62
    7d1c:	2f434347 	svccs	0x00434347
    7d20:	5f4d5241 	svcpl	0x004d5241
    7d24:	33334d43 	teqcc	r3, #4288	; 0x10c0
    7d28:	5a544e5f 	bpl	151b6ac <__RAM_SIZE+0x141b6ac>
    7d2c:	6e6f6e2f 	cdpvs	14, 6, cr6, cr15, cr15, {1}
    7d30:	6365735f 	cmnvs	r5, #2080374785	; 0x7c000001
    7d34:	00657275 	rsbeq	r7, r5, r5, ror r2
    7d38:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    7d3c:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    7d40:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    7d44:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    7d48:	6572462f 	ldrbvs	r4, [r2, #-1583]!	; 0xfffff9d1
    7d4c:	4f545265 	svcmi	0x00545265
    7d50:	6e692f53 	mcrvs	15, 3, r2, cr9, cr3, {2}
    7d54:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    7d58:	68000065 	stmdavs	r0, {r0, r2, r5, r6}
    7d5c:	5f706165 	svcpl	0x00706165
    7d60:	00632e34 	rsbeq	r2, r3, r4, lsr lr
    7d64:	73000001 	movwvc	r0, #1
    7d68:	65646474 	strbvs	r6, [r4, #-1140]!	; 0xfffffb8c
    7d6c:	00682e66 	rsbeq	r2, r8, r6, ror #28
    7d70:	5f000002 	svcpl	0x00000002
    7d74:	61666564 	cmnvs	r6, r4, ror #10
    7d78:	5f746c75 	svcpl	0x00746c75
    7d7c:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
    7d80:	00682e73 	rsbeq	r2, r8, r3, ror lr
    7d84:	5f000003 	svcpl	0x00000003
    7d88:	69647473 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
    7d8c:	682e746e 	stmdavs	lr!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
    7d90:	00000400 	andeq	r0, r0, r0, lsl #8
    7d94:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
    7d98:	7263616d 	rsbvc	r6, r3, #1073741851	; 0x4000001b
    7d9c:	6d6f636f 	stclvs	3, cr6, [pc, #-444]!	; 7be8 <__HEAP_SIZE+0x6be8>
    7da0:	2e6e6f6d 	cdpcs	15, 6, cr6, cr14, cr13, {3}
    7da4:	00050068 	andeq	r0, r5, r8, rrx
    7da8:	726f7000 	rsbvc	r7, pc, #0
    7dac:	6c626174 	stfvse	f6, [r2], #-464	; 0xfffffe30
    7db0:	00682e65 	rsbeq	r2, r8, r5, ror #28
    7db4:	74000006 	strvc	r0, [r0], #-6
    7db8:	2e6b7361 	cdpcs	3, 6, cr7, cr11, cr1, {3}
    7dbc:	00060068 	andeq	r0, r6, r8, rrx
    7dc0:	75623c00 	strbvc	r3, [r2, #-3072]!	; 0xfffff400
    7dc4:	2d746c69 	ldclcs	12, cr6, [r4, #-420]!	; 0xfffffe5c
    7dc8:	003e6e69 	eorseq	r6, lr, r9, ror #28
    7dcc:	00000000 	andeq	r0, r0, r0
    7dd0:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    7dd4:	00317002 	eorseq	r7, r1, r2
    7dd8:	03bc0310 			; <UNDEFINED> instruction: 0x03bc0310
    7ddc:	13050501 	movwne	r0, #21761	; 0x5501
    7de0:	05151313 	ldreq	r1, [r5, #-787]	; 0xfffffced
    7de4:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
    7de8:	05220605 	streq	r0, [r2, #-1541]!	; 0xfffff9fb
    7dec:	05010607 	streq	r0, [r1, #-1543]	; 0xfffff9f9
    7df0:	053e0609 	ldreq	r0, [lr, #-1545]!	; 0xfffff9f7
    7df4:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    7df8:	05210609 	streq	r0, [r1, #-1545]!	; 0xfffff9f7
    7dfc:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    7e00:	052f0609 	streq	r0, [pc, #-1545]!	; 77ff <__HEAP_SIZE+0x67ff>
    7e04:	3b010618 	blcc	4966c <__HEAP_SIZE+0x4866c>
    7e08:	03060505 	movweq	r0, #25861	; 0x6505
    7e0c:	1c05200c 	stcne	0, cr2, [r5], {12}
    7e10:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    7e14:	17052f06 	strne	r2, [r5, -r6, lsl #30]
    7e18:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    7e1c:	12053206 	andne	r3, r5, #1610612736	; 0x60000000
    7e20:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    7e24:	12052106 	andne	r2, r5, #-2147483647	; 0x80000001
    7e28:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    7e2c:	12052106 	andne	r2, r5, #-2147483647	; 0x80000001
    7e30:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    7e34:	0b052f06 	bleq	153a54 <__RAM_SIZE+0x53a54>
    7e38:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    7e3c:	17052f06 	strne	r2, [r5, -r6, lsl #30]
    7e40:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    7e44:	1c052106 	stfnes	f2, [r5], {6}
    7e48:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    7e4c:	05132406 	ldreq	r2, [r3, #-1030]	; 0xfffffbfa
    7e50:	0501063e 	streq	r0, [r1, #-1598]	; 0xfffff9c2
    7e54:	05052022 	streq	r2, [r5, #-34]	; 0xffffffde
    7e58:	27052106 	strcs	r2, [r5, -r6, lsl #2]
    7e5c:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    7e60:	24052306 	strcs	r2, [r5], #-774	; 0xfffffcfa
    7e64:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    7e68:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
    7e6c:	05010619 	streq	r0, [r1, #-1561]	; 0xfffff9e7
    7e70:	0c052f01 	stceq	15, cr2, [r5], {1}
    7e74:	02205703 	eoreq	r5, r0, #786432	; 0xc0000
    7e78:	0101000d 	tsteq	r1, sp
    7e7c:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    7e80:	0031c802 	eorseq	ip, r1, r2, lsl #16
    7e84:	03ec0310 	mvneq	r0, #16, 6	; 0x40000000
    7e88:	13050501 	movwne	r0, #21761	; 0x5501
    7e8c:	15051613 	strne	r1, [r5, #-1555]	; 0xfffff9ed
    7e90:	20050106 	andcs	r0, r5, r6, lsl #2
    7e94:	01040200 	mrseq	r0, R12_usr
    7e98:	05052006 	streq	r2, [r5, #-6]
    7e9c:	01040200 	mrseq	r0, R12_usr
    7ea0:	33062e06 	movwcc	r2, #28166	; 0x6e06
    7ea4:	05143105 	ldreq	r3, [r4, #-261]	; 0xfffffefb
    7ea8:	05141705 	ldreq	r1, [r4, #-1797]	; 0xfffff8fb
    7eac:	0501061b 	streq	r0, [r1, #-1563]	; 0xfffff9e5
    7eb0:	0705200f 	streq	r2, [r5, -pc]
    7eb4:	0621052e 	strteq	r0, [r1], -lr, lsr #10
    7eb8:	17050535 	smladxne	r5, r5, r5, r0
    7ebc:	06200514 			; <UNDEFINED> instruction: 0x06200514
    7ec0:	200f0501 	andcs	r0, pc, r1, lsl #10
    7ec4:	052e0705 	streq	r0, [lr, #-1797]!	; 0xfffff8fb
    7ec8:	0f030609 	svceq	0x00030609
    7ecc:	062a052e 	strteq	r0, [sl], -lr, lsr #10
    7ed0:	06050501 	streq	r0, [r5], -r1, lsl #10
    7ed4:	06070527 	streq	r0, [r7], -r7, lsr #10
    7ed8:	06090501 	streq	r0, [r9], -r1, lsl #10
    7edc:	06250530 			; <UNDEFINED> instruction: 0x06250530
    7ee0:	06210501 	strteq	r0, [r1], -r1, lsl #10
    7ee4:	03090524 	movweq	r0, #38180	; 0x9524
    7ee8:	32052058 	andcc	r2, r5, #88	; 0x58
    7eec:	20050106 	andcs	r0, r5, r6, lsl #2
    7ef0:	06090520 	streq	r0, [r9], -r0, lsr #10
    7ef4:	0619052f 	ldreq	r0, [r9], -pc, lsr #10
    7ef8:	03010501 	movweq	r0, #5377	; 0x1501
    7efc:	09052e69 	stmdbeq	r5, {r0, r3, r5, r6, r9, sl, fp, sp}
    7f00:	20240306 	eorcs	r0, r4, r6, lsl #6
    7f04:	01064605 	tsteq	r6, r5, lsl #12
    7f08:	052e0b05 	streq	r0, [lr, #-2821]!	; 0xfffff4fb
    7f0c:	0531060d 	ldreq	r0, [r1, #-1549]!	; 0xfffff9f3
    7f10:	05010664 	streq	r0, [r1, #-1636]	; 0xfffff99c
    7f14:	0d052029 	stceq	0, cr2, [r5, #-164]	; 0xffffff5c
    7f18:	30052f06 	andcc	r2, r5, r6, lsl #30
    7f1c:	68050106 	stmdavs	r5, {r1, r2, r8}
    7f20:	202e0520 	eorcs	r0, lr, r0, lsr #10
    7f24:	03060505 	movweq	r0, #25861	; 0x6505
    7f28:	07052010 	smladeq	r5, r0, r0, r2
    7f2c:	09050106 	stmdbeq	r5, {r1, r2, r8}
    7f30:	25053006 	strcs	r3, [r5, #-6]
    7f34:	21050106 	tstcs	r5, r6, lsl #2
    7f38:	01052406 	tsteq	r5, r6, lsl #8
    7f3c:	0d051406 	cfstrseq	mvf1, [r5, #-24]	; 0xffffffe8
    7f40:	3c6c0306 	stclcc	3, cr0, [ip], #-24	; 0xffffffe8
    7f44:	01062e05 	tsteq	r6, r5, lsl #28
    7f48:	0006022e 	andeq	r0, r6, lr, lsr #4
    7f4c:	01050101 	tsteq	r5, r1, lsl #2
    7f50:	2c020500 	cfstr32cs	mvfx0, [r2], {-0}
    7f54:	03100032 	tsteq	r0, #50	; 0x32
    7f58:	060101ad 	streq	r0, [r1], -sp, lsr #3
    7f5c:	06050501 	streq	r0, [r5], -r1, lsl #10
    7f60:	13131321 	tstne	r3, #-2080374784	; 0x84000000
    7f64:	07051413 	smladeq	r5, r3, r4, r1
    7f68:	09050106 	stmdbeq	r5, {r1, r2, r8}
    7f6c:	0b053206 	bleq	15478c <__RAM_SIZE+0x5478c>
    7f70:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    7f74:	19053e06 	stmdbne	r5, {r1, r2, r9, sl, fp, ip, sp}
    7f78:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    7f7c:	0f052406 	svceq	0x00052406
    7f80:	11050106 	tstne	r5, r6, lsl #2
    7f84:	29053f06 	stmdbcs	r5, {r1, r2, r8, r9, sl, fp, ip, sp}
    7f88:	11050106 	tstne	r5, r6, lsl #2
    7f8c:	15053006 	strne	r3, [r5, #-6]
    7f90:	13050106 	movwne	r0, #20742	; 0x5106
    7f94:	06150520 	ldreq	r0, [r5], -r0, lsr #10
    7f98:	06210530 			; <UNDEFINED> instruction: 0x06210530
    7f9c:	19052001 	stmdbne	r5, {r0, sp}
    7fa0:	05200e03 	streq	r0, [r0, #-3587]!	; 0xfffff1fd
    7fa4:	05250621 	streq	r0, [r5, #-1569]!	; 0xfffff9df
    7fa8:	09051505 	stmdbeq	r5, {r0, r2, r8, sl, ip}
    7fac:	06130532 			; <UNDEFINED> instruction: 0x06130532
    7fb0:	2e0b0501 	cfsh32cs	mvfx0, mvfx11, #1
    7fb4:	26062505 	strcs	r2, [r6], -r5, lsl #10
    7fb8:	05190905 	ldreq	r0, [r9, #-2309]	; 0xfffff6fb
    7fbc:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
    7fc0:	0530060d 	ldreq	r0, [r0, #-1549]!	; 0xfffff9f3
    7fc4:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    7fc8:	04020036 	streq	r0, [r2], #-54	; 0xffffffca
    7fcc:	25052e01 	strcs	r2, [r5, #-3585]	; 0xfffff1ff
    7fd0:	01040200 	mrseq	r0, R12_usr
    7fd4:	0611052e 	ldreq	r0, [r1], -lr, lsr #10
    7fd8:	19051332 	stmdbne	r5, {r1, r4, r5, r8, r9, ip}
    7fdc:	36050106 	strcc	r0, [r5], -r6, lsl #2
    7fe0:	11052f06 	tstne	r5, r6, lsl #30
    7fe4:	06160514 			; <UNDEFINED> instruction: 0x06160514
    7fe8:	03210501 			; <UNDEFINED> instruction: 0x03210501
    7fec:	05202053 	streq	r2, [r0, #-83]!	; 0xffffffad
    7ff0:	1803060d 	stmdane	r3, {r0, r2, r3, r9, sl}
    7ff4:	06250520 	strteq	r0, [r5], -r0, lsr #10
    7ff8:	053c1703 	ldreq	r1, [ip, #-1795]!	; 0xfffff8fd
    7ffc:	3a05211d 	bcc	150478 <__RAM_SIZE+0x50478>
    8000:	16052106 	strne	r2, [r5], -r6, lsl #2
    8004:	0621050e 	strteq	r0, [r1], -lr, lsl #10
    8008:	20160501 	andscs	r0, r6, r1, lsl #10
    800c:	02004a05 	andeq	r4, r0, #20480	; 0x5000
    8010:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
    8014:	0402003e 	streq	r0, [r2], #-62	; 0xffffffc2
    8018:	11052001 	tstne	r5, r1
    801c:	2e090306 	cdpcs	3, 0, cr0, cr9, cr6, {0}
    8020:	01061d05 	tsteq	r6, r5, lsl #26
    8024:	052e1305 	streq	r1, [lr, #-773]!	; 0xfffffcfb
    8028:	05320615 	ldreq	r0, [r2, #-1557]!	; 0xfffff9eb
    802c:	0501063d 	streq	r0, [r1, #-1597]	; 0xfffff9c3
    8030:	3b05201e 	blcc	1500b0 <__RAM_SIZE+0x500b0>
    8034:	15052106 	strne	r2, [r5, #-262]	; 0xfffffefa
    8038:	063f0516 			; <UNDEFINED> instruction: 0x063f0516
    803c:	20360501 	eorscs	r0, r6, r1, lsl #10
    8040:	24066905 	strcs	r6, [r6], #-2309	; 0xfffff6fb
    8044:	05141505 	ldreq	r1, [r4, #-1285]	; 0xfffffafb
    8048:	05010622 	streq	r0, [r1, #-1570]	; 0xfffff9de
    804c:	1705202f 	strne	r2, [r5, -pc, lsr #32]
    8050:	06190520 	ldreq	r0, [r9], -r0, lsr #10
    8054:	06280534 			; <UNDEFINED> instruction: 0x06280534
    8058:	06690501 	strbteq	r0, [r9], -r1, lsl #10
    805c:	16190521 	ldrne	r0, [r9], -r1, lsr #10
    8060:	01063405 	tsteq	r6, r5, lsl #8
    8064:	21061905 	tstcs	r6, r5, lsl #18
    8068:	01062d05 	tsteq	r6, r5, lsl #26
    806c:	23061905 	movwcs	r1, #26885	; 0x6905
    8070:	01064a05 	tsteq	r6, r5, lsl #20
    8074:	05203905 	streq	r3, [r0, #-2309]!	; 0xfffff6fb
    8078:	05210619 	streq	r0, [r1, #-1561]!	; 0xfffff9e7
    807c:	0501063a 	streq	r0, [r1, #-1594]	; 0xfffff9c6
    8080:	05240631 	streq	r0, [r4, #-1585]!	; 0xfffff9cf
    8084:	33051515 	movwcc	r1, #21781	; 0x5515
    8088:	29050106 	stmdbcs	r5, {r1, r2, r8}
    808c:	06150520 	ldreq	r0, [r5], -r0, lsr #10
    8090:	062d053e 			; <UNDEFINED> instruction: 0x062d053e
    8094:	2e170501 	cfmul32cs	mvfx0, mvfx7, mvfx1
    8098:	30061905 	andcc	r1, r6, r5, lsl #18
    809c:	01063805 	tsteq	r6, r5, lsl #16
    80a0:	32063105 	andcc	r3, r6, #1073741825	; 0x40000001
    80a4:	3d171505 	cfldr32cc	mvfx1, [r7, #-20]	; 0xffffffec
    80a8:	01062e05 	tsteq	r6, r5, lsl #28
    80ac:	2f061505 	svccs	0x00061505
    80b0:	01063305 	tsteq	r6, r5, lsl #6
    80b4:	0625052e 	strteq	r0, [r5], -lr, lsr #10
    80b8:	052e0e03 	streq	r0, [lr, #-3587]!	; 0xfffff1fd
    80bc:	0505152d 	streq	r1, [r5, #-1325]	; 0xfffffad3
    80c0:	060e0514 			; <UNDEFINED> instruction: 0x060e0514
    80c4:	065a0501 	ldrbeq	r0, [sl], -r1, lsl #10
    80c8:	052e0f03 	streq	r0, [lr, #-3843]!	; 0xfffff0fd
    80cc:	01051305 	tsteq	r5, r5, lsl #6
    80d0:	0c051306 	stceq	3, cr1, [r5], {6}
    80d4:	2e7ed903 	vaddcs.f16	s27, s28, s6	; <UNPREDICTABLE>
    80d8:	000c0266 	andeq	r0, ip, r6, ror #4
    80dc:	01050101 	tsteq	r5, r1, lsl #2
    80e0:	00020500 	andeq	r0, r2, r0, lsl #10
    80e4:	03100033 	tsteq	r0, #51	; 0x33
    80e8:	050102dc 	streq	r0, [r1, #-732]	; 0xfffffd24
    80ec:	14131305 	ldrne	r1, [r3], #-773	; 0xfffffcfb
    80f0:	01060705 	tsteq	r6, r5, lsl #14
    80f4:	051c0105 	ldreq	r0, [ip, #-261]	; 0xfffffefb
    80f8:	05360609 	ldreq	r0, [r6, #-1545]!	; 0xfffff9f7
    80fc:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
    8100:	05310609 	ldreq	r0, [r1, #-1545]!	; 0xfffff9f7
    8104:	3e05142d 	cdpcc	4, 0, cr1, cr5, cr13, {1}
    8108:	13380513 	teqne	r8, #79691776	; 0x4c00000
    810c:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    8110:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
    8114:	0d052e0b 	stceq	14, cr2, [r5, #-44]	; 0xffffffd4
    8118:	17053006 	strne	r3, [r5, -r6]
    811c:	0f050106 	svceq	0x00050106
    8120:	0301052e 	movweq	r0, #5422	; 0x152e
    8124:	11052024 	tstne	r5, r4, lsr #32
    8128:	20600306 	rsbcs	r0, r0, r6, lsl #6
    812c:	054a0c03 	strbeq	r0, [sl, #-3075]	; 0xfffff3fd
    8130:	32053115 	andcc	r3, r5, #1073741829	; 0x40000005
    8134:	29050106 	stmdbcs	r5, {r1, r2, r8}
    8138:	0638052e 	ldrteq	r0, [r8], -lr, lsr #10
    813c:	1315054b 	tstne	r5, #314572800	; 0x12c00000
    8140:	062d053d 			; <UNDEFINED> instruction: 0x062d053d
    8144:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    8148:	061a054c 	ldreq	r0, [sl], -ip, asr #10
    814c:	06250501 	strteq	r0, [r5], -r1, lsl #10
    8150:	052e0903 	streq	r0, [lr, #-2307]!	; 0xfffff6fd
    8154:	20150601 	andscs	r0, r5, r1, lsl #12
    8158:	01000502 	tsteq	r0, r2, lsl #10
    815c:	00010501 	andeq	r0, r1, r1, lsl #10
    8160:	00000205 	andeq	r0, r0, r5, lsl #4
    8164:	97030000 	strls	r0, [r3, -r0]
    8168:	05050103 	streq	r0, [r5, #-259]	; 0xfffffefd
    816c:	06010513 			; <UNDEFINED> instruction: 0x06010513
    8170:	00060213 	andeq	r0, r6, r3, lsl r2
    8174:	01050101 	tsteq	r5, r1, lsl #2
    8178:	00020500 	andeq	r0, r2, r0, lsl #10
    817c:	03000000 	movweq	r0, #0
    8180:	0501039d 	streq	r0, [r1, #-925]	; 0xfffffc63
    8184:	01051305 	tsteq	r5, r5, lsl #6
    8188:	06021306 	streq	r1, [r2], -r6, lsl #6
    818c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    8190:	02050001 	andeq	r0, r5, #1
    8194:	00000000 	andeq	r0, r0, r0
    8198:	0103a303 	tsteq	r3, r3, lsl #6
    819c:	00010214 	andeq	r0, r1, r4, lsl r2
    81a0:	01050101 	tsteq	r5, r1, lsl #2
    81a4:	00020500 	andeq	r0, r2, r0, lsl #10
    81a8:	03000000 	movweq	r0, #0
    81ac:	060103aa 	streq	r0, [r1], -sl, lsr #7
    81b0:	06050501 	streq	r0, [r5], -r1, lsl #10
    81b4:	09051421 	stmdbeq	r5, {r0, r5, sl, ip}
    81b8:	00580106 	subseq	r0, r8, r6, lsl #2
    81bc:	20010402 	andcs	r0, r1, r2, lsl #8
    81c0:	0e052206 	cdpeq	2, 0, cr2, cr5, cr6, {0}
    81c4:	09050106 	stmdbeq	r5, {r1, r2, r8}
    81c8:	0b055a06 	bleq	15e9e8 <__RAM_SIZE+0x5e9e8>
    81cc:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    81d0:	16053006 	strne	r3, [r5], -r6
    81d4:	01050106 	tsteq	r5, r6, lsl #2
    81d8:	0c052e4f 	stceq	14, cr2, [r5], {79}	; 0x4f
    81dc:	052e7303 	streq	r7, [lr, #-771]!	; 0xfffffcfd
    81e0:	0c030605 	stceq	6, cr0, [r3], {5}
    81e4:	060c0520 	streq	r0, [ip], -r0, lsr #10
    81e8:	00010201 	andeq	r0, r1, r1, lsl #4
    81ec:	01050101 	tsteq	r5, r1, lsl #2
    81f0:	00020500 	andeq	r0, r2, r0, lsl #10
    81f4:	03000000 	movweq	r0, #0
    81f8:	060104b0 			; <UNDEFINED> instruction: 0x060104b0
    81fc:	06050501 	streq	r0, [r5], -r1, lsl #10
    8200:	0514132f 	ldreq	r1, [r4, #-815]	; 0xfffffcd1
    8204:	11053009 	tstne	r5, r9
    8208:	09050106 	stmdbeq	r5, {r1, r2, r8}
    820c:	0b053206 	bleq	154a2c <__RAM_SIZE+0x54a2c>
    8210:	27050106 	strcs	r0, [r5, -r6, lsl #2]
    8214:	05207803 	streq	r7, [r0, #-2051]!	; 0xfffff7fd
    8218:	0c052e19 	stceq	14, cr2, [r5], {25}
    821c:	2e270520 	cfsh64cs	mvdx0, mvdx7, #16
    8220:	052e1905 	streq	r1, [lr, #-2309]!	; 0xfffff6fb
    8224:	0505200c 	streq	r2, [r5, #-12]
    8228:	20200306 	eorcs	r0, r0, r6, lsl #6
    822c:	01060e05 	tsteq	r6, r5, lsl #28
    8230:	30060505 	andcc	r0, r6, r5, lsl #10
    8234:	01063105 	tsteq	r6, r5, lsl #2
    8238:	21060505 	tstcs	r6, r5, lsl #10
    823c:	01063205 	tsteq	r6, r5, lsl #4
    8240:	21060505 	tstcs	r6, r5, lsl #10
    8244:	01062605 	tsteq	r6, r5, lsl #12
    8248:	22060505 	andcs	r0, r6, #20971520	; 0x1400000
    824c:	05300905 	ldreq	r0, [r0, #-2309]!	; 0xfffff6fb
    8250:	05010631 	streq	r0, [r1, #-1585]	; 0xfffff9cf
    8254:	053d0609 	ldreq	r0, [sp, #-1545]!	; 0xfffff9f7
    8258:	05010635 	streq	r0, [r1, #-1589]	; 0xfffff9cb
    825c:	053d0609 	ldreq	r0, [sp, #-1545]!	; 0xfffff9f7
    8260:	0501062f 	streq	r0, [r1, #-1583]	; 0xfffff9d1
    8264:	053d0609 	ldreq	r0, [sp, #-1545]!	; 0xfffff9f7
    8268:	05010635 	streq	r0, [r1, #-1589]	; 0xfffff9cb
    826c:	053e0605 	ldreq	r0, [lr, #-1541]!	; 0xfffff9fb
    8270:	052f0601 	streq	r0, [pc, #-1537]!	; 7c77 <__HEAP_SIZE+0x6c77>
    8274:	6e030611 	mcrvs	6, 0, r0, cr3, cr1, {0}
    8278:	06190520 	ldreq	r0, [r9], -r0, lsr #10
    827c:	06120501 	ldreq	r0, [r2], -r1, lsl #10
    8280:	05206e03 	streq	r6, [r0, #-3587]!	; 0xfffff1fd
    8284:	0501061c 	streq	r0, [r1, #-1564]	; 0xfffff9e4
    8288:	11052e12 	tstne	r5, r2, lsl lr
    828c:	18053206 	stmdane	r5, {r1, r2, r9, ip, sp}
    8290:	11050106 	tstne	r5, r6, lsl #2
    8294:	1c052206 	sfmne	f2, 4, [r5], {6}
    8298:	13050106 	movwne	r0, #20742	; 0x5106
    829c:	301e0520 	andscc	r0, lr, r0, lsr #10
    82a0:	23061105 	movwcs	r1, #24837	; 0x6105
    82a4:	01061305 	tsteq	r6, r5, lsl #6
    82a8:	20301e05 	eorscs	r1, r0, r5, lsl #28
    82ac:	01000d02 	tsteq	r0, r2, lsl #26
    82b0:	00010501 	andeq	r0, r1, r1, lsl #10
    82b4:	00000205 	andeq	r0, r0, r5, lsl #4
    82b8:	e9030000 	stmdb	r3, {}	; <UNPREDICTABLE>
    82bc:	05050104 	streq	r0, [r5, #-260]	; 0xfffffefc
    82c0:	060b0513 			; <UNDEFINED> instruction: 0x060b0513
    82c4:	06050501 	streq	r0, [r5], -r1, lsl #10
    82c8:	0619053e 			; <UNDEFINED> instruction: 0x0619053e
    82cc:	06050501 	streq	r0, [r5], -r1, lsl #10
    82d0:	0624052f 	strteq	r0, [r4], -pc, lsr #10
    82d4:	06050501 	streq	r0, [r5], -r1, lsl #10
    82d8:	0624052f 	strteq	r0, [r4], -pc, lsr #10
    82dc:	06050501 	streq	r0, [r5], -r1, lsl #10
    82e0:	061e052f 	ldreq	r0, [lr], -pc, lsr #10
    82e4:	2f010501 	svccs	0x00010501
    82e8:	01000b02 	tsteq	r0, r2, lsl #22
    82ec:	0005f201 	andeq	pc, r5, r1, lsl #4
    82f0:	8d000300 	stchi	3, cr0, [r0, #-0]
    82f4:	02000001 	andeq	r0, r0, #1
    82f8:	0d0efb01 	vstreq	d15, [lr, #-4]
    82fc:	01010100 	mrseq	r0, (UNDEF: 17)
    8300:	00000001 	andeq	r0, r0, r1
    8304:	01000001 	tsteq	r0, r1
    8308:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    830c:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    8310:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    8314:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    8318:	6572462f 	ldrbvs	r4, [r2, #-1583]!	; 0xfffff9d1
    831c:	4f545265 	svcmi	0x00545265
    8320:	6f702f53 	svcvs	0x00702f53
    8324:	62617472 	rsbvs	r7, r1, #1912602624	; 0x72000000
    8328:	472f656c 	strmi	r6, [pc, -ip, ror #10]!
    832c:	412f4343 			; <UNDEFINED> instruction: 0x412f4343
    8330:	435f4d52 	cmpmi	pc, #5248	; 0x1480
    8334:	5f33334d 	svcpl	0x0033334d
    8338:	2f5a544e 	svccs	0x005a544e
    833c:	5f6e6f6e 	svcpl	0x006e6f6e
    8340:	75636573 	strbvc	r6, [r3, #-1395]!	; 0xfffffa8d
    8344:	63006572 	movwvs	r6, #1394	; 0x572
    8348:	73755c3a 	cmnvc	r5, #14848	; 0x3a00
    834c:	5c737265 	lfmpl	f7, 2, [r3], #-404	; 0xfffffe6c
    8350:	6f646978 	svcvs	0x00646978
    8354:	72705c6e 	rsbsvc	r5, r0, #28160	; 0x6e00
    8358:	6172676f 	cmnvs	r2, pc, ror #14
    835c:	72615c6d 	rsbvc	r5, r1, #27904	; 0x6d00
    8360:	63675f6d 	cmnvs	r7, #436	; 0x1b4
    8364:	63675c63 	cmnvs	r7, #25344	; 0x6300
    8368:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
    836c:	6f6e2d6d 	svcvs	0x006e2d6d
    8370:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    8374:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
    8378:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
    837c:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
    8380:	30312e31 	eorscc	r2, r1, r1, lsr lr
    8384:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    8388:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    838c:	61652d65 	cmnvs	r5, r5, ror #26
    8390:	695c6962 	ldmdbvs	ip, {r1, r5, r6, r8, fp, sp, lr}^
    8394:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    8398:	6d5c6564 	cfldr64vs	mvdx6, [ip, #-400]	; 0xfffffe70
    839c:	69686361 	stmdbvs	r8!, {r0, r5, r6, r8, r9, sp, lr}^
    83a0:	6300656e 	movwvs	r6, #1390	; 0x56e
    83a4:	73755c3a 	cmnvc	r5, #14848	; 0x3a00
    83a8:	5c737265 	lfmpl	f7, 2, [r3], #-404	; 0xfffffe6c
    83ac:	6f646978 	svcvs	0x00646978
    83b0:	72705c6e 	rsbsvc	r5, r0, #28160	; 0x6e00
    83b4:	6172676f 	cmnvs	r2, pc, ror #14
    83b8:	72615c6d 	rsbvc	r5, r1, #27904	; 0x6d00
    83bc:	63675f6d 	cmnvs	r7, #436	; 0x1b4
    83c0:	63675c63 	cmnvs	r7, #25344	; 0x6300
    83c4:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
    83c8:	6f6e2d6d 	svcvs	0x006e2d6d
    83cc:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    83d0:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
    83d4:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
    83d8:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
    83dc:	30312e31 	eorscc	r2, r1, r1, lsr lr
    83e0:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    83e4:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    83e8:	61652d65 	cmnvs	r5, r5, ror #26
    83ec:	695c6962 	ldmdbvs	ip, {r1, r5, r6, r8, fp, sp, lr}^
    83f0:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    83f4:	735c6564 	cmpvc	ip, #100, 10	; 0x19000000
    83f8:	2e007379 	mcrcs	3, 0, r7, cr0, cr9, {3}
    83fc:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    8400:	2f2e2e2f 	svccs	0x002e2e2f
    8404:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
    8408:	2f736f74 	svccs	0x00736f74
    840c:	65657246 	strbvs	r7, [r5, #-582]!	; 0xfffffdba
    8410:	534f5452 	movtpl	r5, #62546	; 0xf452
    8414:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    8418:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    841c:	6f700000 	svcvs	0x00700000
    8420:	632e7472 			; <UNDEFINED> instruction: 0x632e7472
    8424:	00000100 	andeq	r0, r0, r0, lsl #2
    8428:	6665645f 			; <UNDEFINED> instruction: 0x6665645f
    842c:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
    8430:	7079745f 	rsbsvc	r7, r9, pc, asr r4
    8434:	682e7365 	stmdavs	lr!, {r0, r2, r5, r6, r8, r9, ip, sp, lr}
    8438:	00000200 	andeq	r0, r0, r0, lsl #4
    843c:	6474735f 	ldrbtvs	r7, [r4], #-863	; 0xfffffca1
    8440:	2e746e69 	cdpcs	14, 7, cr6, cr4, cr9, {3}
    8444:	00030068 	andeq	r0, r3, r8, rrx
    8448:	6f727000 	svcvs	0x00727000
    844c:	6665646a 	strbtvs	r6, [r5], -sl, ror #8
    8450:	00682e73 	rsbeq	r2, r8, r3, ror lr
    8454:	70000004 	andvc	r0, r0, r4
    8458:	6d74726f 	lfmvs	f7, 2, [r4, #-444]!	; 0xfffffe44
    845c:	6f726361 	svcvs	0x00726361
    8460:	6d6d6f63 	stclvs	15, cr6, [sp, #-396]!	; 0xfffffe74
    8464:	682e6e6f 	stmdavs	lr!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}
    8468:	00000100 	andeq	r0, r0, r0, lsl #2
    846c:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
    8470:	2e6d7361 	cdpcs	3, 6, cr7, cr13, cr1, {3}
    8474:	00010068 	andeq	r0, r1, r8, rrx
    8478:	73617400 	cmnvc	r1, #0, 8
    847c:	00682e6b 	rsbeq	r2, r8, fp, ror #28
    8480:	00000004 	andeq	r0, r0, r4
    8484:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    8488:	00335002 	eorseq	r5, r3, r2
    848c:	06a60310 	ssateq	r0, #7, r0, lsl #6
    8490:	2f050501 	svccs	0x00050501
    8494:	01061705 	tsteq	r6, r5, lsl #14
    8498:	35062e05 	strcc	r2, [r6, #-3589]	; 0xfffff1fb
    849c:	30130505 	andscc	r0, r3, r5, lsl #10
    84a0:	01040200 	mrseq	r0, R12_usr
    84a4:	05010903 	streq	r0, [r1, #-2307]	; 0xfffff6fd
    84a8:	0402000a 	streq	r0, [r2], #-10
    84ac:	01770301 	cmneq	r7, r1, lsl #6
    84b0:	02001405 	andeq	r1, r0, #83886080	; 0x5000000
    84b4:	01060104 	tsteq	r6, r4, lsl #2
    84b8:	02000a05 	andeq	r0, r0, #20480	; 0x5000
    84bc:	05200104 	streq	r0, [r0, #-260]!	; 0xfffffefc
    84c0:	2e0a0301 	cdpcs	3, 0, cr0, cr10, cr1, {0}
    84c4:	01000302 	tsteq	r0, r2, lsl #6
    84c8:	00050501 	andeq	r0, r5, r1, lsl #10
    84cc:	33680205 	cmncc	r8, #1342177280	; 0x50000000
    84d0:	af031000 	svcge	0x00031000
    84d4:	01060104 	tsteq	r6, r4, lsl #2
    84d8:	21060905 	tstcs	r6, r5, lsl #18
    84dc:	1f051513 	svcne	0x00051513
    84e0:	0b050106 	bleq	148900 <__RAM_SIZE+0x48900>
    84e4:	0609052e 	streq	r0, [r9], -lr, lsr #10
    84e8:	322f2143 	eorcc	r2, pc, #-1073741808	; 0xc0000010
    84ec:	01060d05 	tsteq	r6, r5, lsl #26
    84f0:	052e0b05 	streq	r0, [lr, #-2821]!	; 0xfffff4fb
    84f4:	0524060d 	streq	r0, [r4, #-1549]!	; 0xfffff9f3
    84f8:	bf030605 	svclt	0x00030605
    84fc:	0d052001 	stceq	0, cr2, [r5, #-4]
    8500:	7ec90306 	cdpvc	3, 12, cr0, cr9, cr6, {0}
    8504:	06270520 	strteq	r0, [r7], -r0, lsr #10
    8508:	060d0501 	streq	r0, [sp], -r1, lsl #10
    850c:	06250551 			; <UNDEFINED> instruction: 0x06250551
    8510:	060d0501 	streq	r0, [sp], -r1, lsl #10
    8514:	060f0522 	streq	r0, [pc], -r2, lsr #10
    8518:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    851c:	06290522 	strteq	r0, [r9], -r2, lsr #10
    8520:	0d052001 	stceq	0, cr2, [r5, #-4]
    8524:	20090306 	andcs	r0, r9, r6, lsl #6
    8528:	01066705 	tsteq	r6, r5, lsl #14
    852c:	05205105 	streq	r5, [r0, #-261]!	; 0xfffffefb
    8530:	0d052e1b 	stceq	14, cr2, [r5, #-108]	; 0xffffff94
    8534:	13053006 	movwne	r3, #20486	; 0x5006
    8538:	0f050106 	svceq	0x00050106
    853c:	0611054a 	ldreq	r0, [r1], -sl, asr #10
    8540:	0627053e 			; <UNDEFINED> instruction: 0x0627053e
    8544:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    8548:	061f0567 	ldreq	r0, [pc], -r7, ror #10
    854c:	060d0501 	streq	r0, [sp], -r1, lsl #10
    8550:	061f053f 			; <UNDEFINED> instruction: 0x061f053f
    8554:	2e0f0501 	cfsh32cs	mvfx0, mvfx15, #1
    8558:	30061105 	andcc	r1, r6, r5, lsl #2
    855c:	01061f05 	tsteq	r6, r5, lsl #30
    8560:	24060d05 	strcs	r0, [r6], #-3333	; 0xfffff2fb
    8564:	01062705 	tsteq	r6, r5, lsl #14
    8568:	40060d05 	andmi	r0, r6, r5, lsl #26
    856c:	01063005 	tsteq	r6, r5
    8570:	31060d05 	tstcc	r6, r5, lsl #26
    8574:	01062705 	tsteq	r6, r5, lsl #14
    8578:	51060d05 	tstpl	r6, r5, lsl #26
    857c:	05133e05 	ldreq	r3, [r3, #-3589]	; 0xfffff1fb
    8580:	0f05140d 	svceq	0x0005140d
    8584:	11050106 	tstne	r5, r6, lsl #2
    8588:	212f2206 			; <UNDEFINED> instruction: 0x212f2206
    858c:	05313d05 	ldreq	r3, [r1, #-3333]!	; 0xfffff2fb
    8590:	2f21170d 	svccs	0x0021170d
    8594:	032f2134 			; <UNDEFINED> instruction: 0x032f2134
    8598:	27052e09 	strcs	r2, [r5, -r9, lsl #28]
    859c:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    85a0:	13054d06 	movwne	r4, #23814	; 0x5d06
    85a4:	0f050106 	svceq	0x00050106
    85a8:	06110520 	ldreq	r0, [r1], -r0, lsr #10
    85ac:	4b05173e 	blmi	14e2ac <__RAM_SIZE+0x4e2ac>
    85b0:	5f050106 	svcpl	0x00050106
    85b4:	3c5d052e 	cfldr64cc	mvdx0, [sp], {46}	; 0x2e
    85b8:	05204b05 	streq	r4, [r0, #-2821]!	; 0xfffff4fb
    85bc:	11052027 	tstne	r5, r7, lsr #32
    85c0:	2d052606 	stccs	6, cr2, [r5, #-24]	; 0xffffffe8
    85c4:	13050106 	movwne	r0, #20742	; 0x5106
    85c8:	004d052e 	subeq	r0, sp, lr, lsr #10
    85cc:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    85d0:	30061505 	andcc	r1, r6, r5, lsl #10
    85d4:	01062b05 	tsteq	r6, r5, lsl #22
    85d8:	23061105 	movwcs	r1, #24837	; 0x6105
    85dc:	01062b05 	tsteq	r6, r5, lsl #22
    85e0:	41061105 	tstmi	r6, r5, lsl #2
    85e4:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    85e8:	012d0306 			; <UNDEFINED> instruction: 0x012d0306
    85ec:	01063005 	tsteq	r6, r5
    85f0:	4b060d05 	blmi	18ba0c <__RAM_SIZE+0x8ba0c>
    85f4:	01062705 	tsteq	r6, r5, lsl #14
    85f8:	31061105 	tstcc	r6, r5, lsl #2
    85fc:	01064505 	tsteq	r6, r5, lsl #10
    8600:	053c2b05 	ldreq	r2, [ip, #-2821]!	; 0xfffff4fb
    8604:	1503060d 	strne	r0, [r3, #-1549]	; 0xfffff9f3
    8608:	05053120 	streq	r3, [r5, #-288]	; 0xfffffee0
    860c:	11052206 	tstne	r5, r6, lsl #4
    8610:	7fbe0306 	svcvc	0x00be0306
    8614:	06290520 	strteq	r0, [r9], -r0, lsr #10
    8618:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    861c:	053c1203 	ldreq	r1, [ip, #-515]!	; 0xfffffdfd
    8620:	05010644 	streq	r0, [r1, #-1604]	; 0xfffff9bc
    8624:	11054a2e 	tstne	r5, lr, lsr #20
    8628:	27052406 	strcs	r2, [r5, -r6, lsl #8]
    862c:	11050106 	tstne	r5, r6, lsl #2
    8630:	4f053206 	svcmi	0x00053206
    8634:	6b050106 	blvs	148a54 <__RAM_SIZE+0x48a54>
    8638:	2b05202e 	blcs	1506f8 <__RAM_SIZE+0x506f8>
    863c:	08022020 	stmdaeq	r2, {r5, sp}
    8640:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    8644:	02050001 	andeq	r0, r5, #1
    8648:	1000347c 	andne	r3, r0, ip, ror r4
    864c:	01068a03 	tsteq	r6, r3, lsl #20
    8650:	05160905 	ldreq	r0, [r6, #-2309]	; 0xfffff6fb
    8654:	05010621 	streq	r0, [r1, #-1569]	; 0xfffff9df
    8658:	053d0609 	ldreq	r0, [sp, #-1545]!	; 0xfffff9f7
    865c:	05010629 	streq	r0, [r1, #-1577]	; 0xfffff9d7
    8660:	053d0609 	ldreq	r0, [sp, #-1545]!	; 0xfffff9f7
    8664:	05010624 	streq	r0, [r1, #-1572]	; 0xfffff9dc
    8668:	0c030605 	stceq	6, cr0, [r3], {5}
    866c:	061f053c 			; <UNDEFINED> instruction: 0x061f053c
    8670:	06050501 	streq	r0, [r5], -r1, lsl #10
    8674:	0628054b 	strteq	r0, [r8], -fp, asr #10
    8678:	06050501 	streq	r0, [r5], -r1, lsl #10
    867c:	061f0531 			; <UNDEFINED> instruction: 0x061f0531
    8680:	06050501 	streq	r0, [r5], -r1, lsl #10
    8684:	061f052f 	ldreq	r0, [pc], -pc, lsr #10
    8688:	2f010501 	svccs	0x00010501
    868c:	01000b02 	tsteq	r0, r2, lsl #22
    8690:	00010501 	andeq	r0, r1, r1, lsl #10
    8694:	34b80205 	ldrtcc	r0, [r8], #517	; 0x205
    8698:	ce031000 	cdpgt	0, 0, cr1, cr3, cr0, {0}
    869c:	05050107 	streq	r0, [r5, #-263]	; 0xfffffef9
    86a0:	061b0514 			; <UNDEFINED> instruction: 0x061b0514
    86a4:	06050501 	streq	r0, [r5], -r1, lsl #10
    86a8:	01052f6a 	tsteq	r5, sl, ror #30
    86ac:	01022f06 	tsteq	r2, r6, lsl #30
    86b0:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    86b4:	02050001 	andeq	r0, r5, #1
    86b8:	100034d0 	ldrdne	r3, [r0], -r0
    86bc:	0107da03 	tsteq	r7, r3, lsl #20
    86c0:	2f210505 	svccs	0x00210505
    86c4:	01061605 	tsteq	r6, r5, lsl #12
    86c8:	4e060505 	cfsh32mi	mvfx0, mvfx6, #5
    86cc:	0601052f 	streq	r0, [r1], -pc, lsr #10
    86d0:	0003022f 	andeq	r0, r3, pc, lsr #4
    86d4:	01050101 	tsteq	r5, r1, lsl #2
    86d8:	ec020500 	cfstr32	mvfx0, [r2], {-0}
    86dc:	03100034 	tsteq	r0, #52	; 0x34
    86e0:	050107e6 	streq	r0, [r1, #-2022]	; 0xfffff81a
    86e4:	05052126 	streq	r2, [r5, #-294]	; 0xfffffeda
    86e8:	06160513 			; <UNDEFINED> instruction: 0x06160513
    86ec:	06050501 	streq	r0, [r5], -r1, lsl #10
    86f0:	061b054c 	ldreq	r0, [fp], -ip, asr #10
    86f4:	20070501 	andcs	r0, r7, r1, lsl #10
    86f8:	05240105 	streq	r0, [r4, #-261]!	; 0xfffffefb
    86fc:	051e0609 	ldreq	r0, [lr, #-1545]	; 0xfffff9f7
    8700:	023e0601 	eorseq	r0, lr, #1048576	; 0x100000
    8704:	01010003 	tsteq	r1, r3
    8708:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    870c:	00350802 	eorseq	r0, r5, r2, lsl #16
    8710:	07f20310 			; <UNDEFINED> instruction: 0x07f20310
    8714:	21050501 	tstcs	r5, r1, lsl #10
    8718:	06160514 			; <UNDEFINED> instruction: 0x06160514
    871c:	06150501 	ldreq	r0, [r5], -r1, lsl #10
    8720:	1509053d 	strne	r0, [r9, #-1341]	; 0xfffffac3
    8724:	01060d05 	tsteq	r6, r5, lsl #26
    8728:	052e0b05 	streq	r0, [lr, #-2821]!	; 0xfffff4fb
    872c:	05220629 	streq	r0, [r2, #-1577]!	; 0xfffff9d7
    8730:	2305140d 	movwcs	r1, #21517	; 0x540d
    8734:	1c050106 	stfnes	f0, [r5], {6}
    8738:	05056a06 	streq	r6, [r5, #-2566]	; 0xfffff5fa
    873c:	06010515 			; <UNDEFINED> instruction: 0x06010515
    8740:	0100203d 	tsteq	r0, sp, lsr r0
    8744:	00010501 	andeq	r0, r1, r1, lsl #10
    8748:	352a0205 	strcc	r0, [sl, #-517]!	; 0xfffffdfb
    874c:	89031000 	stmdbhi	r3, {ip}
    8750:	01060108 	tsteq	r6, r8, lsl #2
    8754:	03060505 	movweq	r0, #25861	; 0x6505
    8758:	0903200f 	stmdbeq	r3, {r0, r1, r2, r3, sp}
    875c:	0a051601 	beq	14df68 <__RAM_SIZE+0x4df68>
    8760:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    8764:	11052106 	tstne	r5, r6, lsl #2
    8768:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    876c:	01053006 	tsteq	r5, r6
    8770:	00db0306 	sbcseq	r0, fp, r6, lsl #6
    8774:	060d052e 	streq	r0, [sp], -lr, lsr #10
    8778:	2f206603 	svccs	0x00206603
    877c:	17032405 	strne	r2, [r3, -r5, lsl #8]
    8780:	06010501 	streq	r0, [r1], -r1, lsl #10
    8784:	00010214 	andeq	r0, r1, r4, lsl r2
    8788:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    878c:	40020500 	andmi	r0, r2, r0, lsl #10
    8790:	03100035 	tsteq	r0, #53	; 0x35
    8794:	06010c85 	streq	r0, [r1], -r5, lsl #25
    8798:	060d0501 	streq	r0, [sp], -r1, lsl #10
    879c:	13201b03 			; <UNDEFINED> instruction: 0x13201b03
    87a0:	01061b05 	tsteq	r6, r5, lsl #22
    87a4:	4b060d05 	blmi	18bbc0 <__RAM_SIZE+0x8bbc0>
    87a8:	061b0513 			; <UNDEFINED> instruction: 0x061b0513
    87ac:	060d0501 	streq	r0, [sp], -r1, lsl #10
    87b0:	1d05132f 	stcne	3, cr1, [r5, #-188]	; 0xffffff44
    87b4:	1b050106 	blne	148bd4 <__RAM_SIZE+0x48bd4>
    87b8:	060d0520 	streq	r0, [sp], -r0, lsr #10
    87bc:	1b05132f 	blne	14d480 <__RAM_SIZE+0x4d480>
    87c0:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    87c4:	05134b06 	ldreq	r4, [r3, #-2822]	; 0xfffff4fa
    87c8:	0501061b 	streq	r0, [r1, #-1563]	; 0xfffff9e5
    87cc:	134b060d 	movtne	r0, #46605	; 0xb60d
    87d0:	01061b05 	tsteq	r6, r5, lsl #22
    87d4:	4b060d05 	blmi	18bbf0 <__RAM_SIZE+0x8bbf0>
    87d8:	061b0513 			; <UNDEFINED> instruction: 0x061b0513
    87dc:	060d0501 	streq	r0, [sp], -r1, lsl #10
    87e0:	1b05134b 	blne	14d514 <__RAM_SIZE+0x4d514>
    87e4:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    87e8:	05132f06 	ldreq	r2, [r3, #-3846]	; 0xfffff0fa
    87ec:	2e01061b 	mcrcs	6, 0, r0, cr1, cr11, {0}
    87f0:	2f060d05 	svccs	0x00060d05
    87f4:	061b0513 			; <UNDEFINED> instruction: 0x061b0513
    87f8:	060d0501 	streq	r0, [sp], -r1, lsl #10
    87fc:	1b05134b 	blne	14d530 <__RAM_SIZE+0x4d530>
    8800:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    8804:	05134b06 	ldreq	r4, [r3, #-2822]	; 0xfffff4fa
    8808:	0501061b 	streq	r0, [r1, #-1563]	; 0xfffff9e5
    880c:	134b060d 	movtne	r0, #46605	; 0xb60d
    8810:	01061b05 	tsteq	r6, r5, lsl #22
    8814:	4b060d05 	blmi	18bc30 <__RAM_SIZE+0x8bc30>
    8818:	061b0513 			; <UNDEFINED> instruction: 0x061b0513
    881c:	060d0501 	streq	r0, [sp], -r1, lsl #10
    8820:	1b05134b 	blne	14d554 <__RAM_SIZE+0x4d554>
    8824:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    8828:	05134b06 	ldreq	r4, [r3, #-2822]	; 0xfffff4fa
    882c:	0501061b 	streq	r0, [r1, #-1563]	; 0xfffff9e5
    8830:	134b060d 	movtne	r0, #46605	; 0xb60d
    8834:	01061b05 	tsteq	r6, r5, lsl #22
    8838:	4b060d05 	blmi	18bc54 <__RAM_SIZE+0x8bc54>
    883c:	061b0513 			; <UNDEFINED> instruction: 0x061b0513
    8840:	06090501 	streq	r0, [r9], -r1, lsl #10
    8844:	052e0b03 	streq	r0, [lr, #-2819]!	; 0xfffff4fd
    8848:	20130605 	andscs	r0, r3, r5, lsl #12
    884c:	01000502 	tsteq	r0, r2, lsl #10
    8850:	00010501 	andeq	r0, r1, r1, lsl #10
    8854:	35d00205 	ldrbcc	r0, [r0, #517]	; 0x205
    8858:	d5031000 	strle	r1, [r3, #-0]
    885c:	0905010c 	stmdbeq	r5, {r2, r3, r8}
    8860:	05200f03 	streq	r0, [r0, #-3843]!	; 0xfffff0fd
    8864:	010f034d 	tsteq	pc, sp, asr #6
    8868:	05135305 	ldreq	r5, [r3, #-773]	; 0xfffffcfb
    886c:	00d00305 	sbcseq	r0, r0, r5, lsl #6
    8870:	06180501 	ldreq	r0, [r8], -r1, lsl #10
    8874:	06050501 	streq	r0, [r5], -r1, lsl #10
    8878:	06180583 	ldreq	r0, [r8], -r3, lsl #11
    887c:	06050501 	streq	r0, [r5], -r1, lsl #10
    8880:	06180567 	ldreq	r0, [r8], -r7, ror #10
    8884:	06050501 	streq	r0, [r5], -r1, lsl #10
    8888:	313c0b03 	teqcc	ip, r3, lsl #22
    888c:	01061705 	tsteq	r6, r5, lsl #14
    8890:	03060505 	movweq	r0, #25861	; 0x6505
    8894:	2f362e09 	svccs	0x00362e09
    8898:	06010531 			; <UNDEFINED> instruction: 0x06010531
    889c:	00040213 	andeq	r0, r4, r3, lsl r2
    88a0:	01050101 	tsteq	r5, r1, lsl #2
    88a4:	00020500 	andeq	r0, r2, r0, lsl #10
    88a8:	03000000 	movweq	r0, #0
    88ac:	05010dee 	streq	r0, [r1, #-3566]	; 0xfffff212
    88b0:	01051530 	tsteq	r5, r0, lsr r5
    88b4:	01021306 	tsteq	r2, r6, lsl #6
    88b8:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    88bc:	02050001 	andeq	r0, r5, #1
    88c0:	00000000 	andeq	r0, r0, r0
    88c4:	010faf03 	tsteq	pc, r3, lsl #30
    88c8:	13130505 	tstne	r3, #20971520	; 0x1400000
    88cc:	07053017 	smladeq	r5, r7, r0, r3
    88d0:	11050106 	tstne	r5, r6, lsl #2
    88d4:	05053222 	streq	r3, [r5, #-546]	; 0xfffffdde
    88d8:	01052306 	tsteq	r5, r6, lsl #6
    88dc:	01021306 	tsteq	r2, r6, lsl #6
    88e0:	3b010100 	blcc	48ce8 <__HEAP_SIZE+0x47ce8>
    88e4:	03000002 	movweq	r0, #2
    88e8:	00014900 	andeq	r4, r1, r0, lsl #18
    88ec:	fb010200 	blx	490f6 <__HEAP_SIZE+0x480f6>
    88f0:	01000d0e 	tsteq	r0, lr, lsl #26
    88f4:	00010101 	andeq	r0, r1, r1, lsl #2
    88f8:	00010000 	andeq	r0, r1, r0
    88fc:	2e2e0100 	sufcse	f0, f6, f0
    8900:	2f2e2e2f 	svccs	0x002e2e2f
    8904:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 8854 <__HEAP_SIZE+0x7854>
    8908:	74726269 	ldrbtvc	r6, [r2], #-617	; 0xfffffd97
    890c:	462f736f 	strtmi	r7, [pc], -pc, ror #6
    8910:	52656572 	rsbpl	r6, r5, #478150656	; 0x1c800000
    8914:	2f534f54 	svccs	0x00534f54
    8918:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
    891c:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
    8920:	4343472f 	movtmi	r4, #14127	; 0x372f
    8924:	4d52412f 	ldfmie	f4, [r2, #-188]	; 0xffffff44
    8928:	334d435f 	movtcc	r4, #54111	; 0xd35f
    892c:	544e5f33 	strbpl	r5, [lr], #-3891	; 0xfffff0cd
    8930:	6f6e2f5a 	svcvs	0x006e2f5a
    8934:	65735f6e 	ldrbvs	r5, [r3, #-3950]!	; 0xfffff092
    8938:	65727563 	ldrbvs	r7, [r2, #-1379]!	; 0xfffffa9d
    893c:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
    8940:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
    8944:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
    8948:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
    894c:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
    8950:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
    8954:	5f6d7261 	svcpl	0x006d7261
    8958:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
    895c:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
    8960:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    8964:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    8968:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    896c:	30312d69 	eorscc	r2, r1, r9, ror #26
    8970:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
    8974:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
    8978:	615c3031 	cmpvs	ip, r1, lsr r0
    897c:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    8980:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    8984:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    8988:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
    898c:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    8990:	63616d5c 	cmnvs	r1, #92, 26	; 0x1700
    8994:	656e6968 	strbvs	r6, [lr, #-2408]!	; 0xfffff698
    8998:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
    899c:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
    89a0:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
    89a4:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
    89a8:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
    89ac:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
    89b0:	5f6d7261 	svcpl	0x006d7261
    89b4:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
    89b8:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
    89bc:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    89c0:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    89c4:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    89c8:	30312d69 	eorscc	r2, r1, r9, ror #26
    89cc:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
    89d0:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
    89d4:	615c3031 	cmpvs	ip, r1, lsr r0
    89d8:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    89dc:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    89e0:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    89e4:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
    89e8:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    89ec:	7379735c 	cmnvc	r9, #92, 6	; 0x70000001
    89f0:	6f700000 	svcvs	0x00700000
    89f4:	73617472 	cmnvc	r1, #1912602624	; 0x72000000
    89f8:	00632e6d 	rsbeq	r2, r3, sp, ror #28
    89fc:	5f000001 	svcpl	0x00000001
    8a00:	61666564 	cmnvs	r6, r4, ror #10
    8a04:	5f746c75 	svcpl	0x00746c75
    8a08:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
    8a0c:	00682e73 	rsbeq	r2, r8, r3, ror lr
    8a10:	5f000002 	svcpl	0x00000002
    8a14:	69647473 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
    8a18:	682e746e 	stmdavs	lr!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
    8a1c:	00000300 	andeq	r0, r0, r0, lsl #6
    8a20:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
    8a24:	7263616d 	rsbvc	r6, r3, #1073741851	; 0x4000001b
    8a28:	6d6f636f 	stclvs	3, cr6, [pc, #-444]!	; 8874 <__HEAP_SIZE+0x7874>
    8a2c:	2e6e6f6d 	cdpcs	15, 6, cr6, cr14, cr13, {3}
    8a30:	00010068 	andeq	r0, r1, r8, rrx
    8a34:	05050000 	streq	r0, [r5, #-0]
    8a38:	10020500 	andne	r0, r2, r0, lsl #10
    8a3c:	03100036 	tsteq	r0, #54	; 0x36
    8a40:	050100f9 	streq	r0, [r1, #-249]	; 0xffffff07
    8a44:	05051309 	streq	r1, [r5, #-777]	; 0xfffffcf7
    8a48:	08130306 	ldmdaeq	r3, {r1, r2, r8, r9}
    8a4c:	0003022e 	andeq	r0, r3, lr, lsr #4
    8a50:	01050101 	tsteq	r5, r1, lsl #2
    8a54:	00020500 	andeq	r0, r2, r0, lsl #10
    8a58:	03000000 	movweq	r0, #0
    8a5c:	05010193 	streq	r0, [r1, #-403]	; 0xfffffe6d
    8a60:	01051305 	tsteq	r5, r5, lsl #6
    8a64:	820c0306 	andhi	r0, ip, #402653184	; 0x18000000
    8a68:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    8a6c:	02050001 	andeq	r0, r5, #1
    8a70:	00000000 	andeq	r0, r0, r0
    8a74:	0101a403 	tsteq	r1, r3, lsl #8
    8a78:	05130505 	ldreq	r0, [r3, #-1285]	; 0xfffffafb
    8a7c:	0a030601 	beq	ca288 <__HEAP_SIZE+0xc9288>
    8a80:	01010074 	tsteq	r1, r4, ror r0
    8a84:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    8a88:	00000002 	andeq	r0, r0, r2
    8a8c:	01b30300 			; <UNDEFINED> instruction: 0x01b30300
    8a90:	13050501 	movwne	r0, #21761	; 0x5501
    8a94:	03060105 	movweq	r0, #24837	; 0x6105
    8a98:	0100740a 	tsteq	r0, sl, lsl #8
    8a9c:	00010501 	andeq	r0, r1, r1, lsl #10
    8aa0:	363c0205 	ldrtcc	r0, [ip], -r5, lsl #4
    8aa4:	c2031000 	andgt	r1, r3, #0
    8aa8:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    8aac:	06010513 			; <UNDEFINED> instruction: 0x06010513
    8ab0:	02c81003 	sbceq	r1, r8, #3
    8ab4:	01010003 	tsteq	r1, r3
    8ab8:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    8abc:	00365c02 	eorseq	r5, r6, r2, lsl #24
    8ac0:	01d70310 	bicseq	r0, r7, r0, lsl r3
    8ac4:	13050501 	movwne	r0, #21761	; 0x5501
    8ac8:	03060105 	movweq	r0, #24837	; 0x6105
    8acc:	0100ac0c 	tsteq	r0, ip, lsl #24
    8ad0:	00010501 	andeq	r0, r1, r1, lsl #10
    8ad4:	36720205 	ldrbtcc	r0, [r2], -r5, lsl #4
    8ad8:	e8031000 	stmda	r3, {ip}
    8adc:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    8ae0:	06010513 			; <UNDEFINED> instruction: 0x06010513
    8ae4:	00740a03 	rsbseq	r0, r4, r3, lsl #20
    8ae8:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    8aec:	80020500 	andhi	r0, r2, r0, lsl #10
    8af0:	03100036 	tsteq	r0, #54	; 0x36
    8af4:	050102eb 	streq	r0, [r1, #-747]	; 0xfffffd15
    8af8:	05051309 	streq	r1, [r5, #-777]	; 0xfffffcf7
    8afc:	022d0306 	eoreq	r0, sp, #402653184	; 0x18000000
    8b00:	02020122 	andeq	r0, r2, #-2147483640	; 0x80000008
    8b04:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    8b08:	02050005 	andeq	r0, r5, #5
    8b0c:	100036c8 	andne	r3, r0, r8, asr #13
    8b10:	0103c703 	tsteq	r3, r3, lsl #14
    8b14:	05130905 	ldreq	r0, [r3, #-2309]	; 0xfffff6fb
    8b18:	0b030605 	bleq	ca334 <__HEAP_SIZE+0xc9334>
    8b1c:	00030290 	muleq	r3, r0, r2
    8b20:	00820101 	addeq	r0, r2, r1, lsl #2
    8b24:	00030000 	andeq	r0, r3, r0
    8b28:	00000036 	andeq	r0, r0, r6, lsr r0
    8b2c:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
    8b30:	0101000d 	tsteq	r1, sp
    8b34:	00000101 	andeq	r0, r0, r1, lsl #2
    8b38:	00000100 	andeq	r0, r0, r0, lsl #2
    8b3c:	732f2e01 			; <UNDEFINED> instruction: 0x732f2e01
    8b40:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
    8b44:	672f7075 			; <UNDEFINED> instruction: 0x672f7075
    8b48:	00006363 	andeq	r6, r0, r3, ror #6
    8b4c:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
    8b50:	5f707574 	svcpl	0x00707574
    8b54:	434d5241 	movtmi	r5, #53825	; 0xd241
    8b58:	2e33334d 	cdpcs	3, 3, cr3, cr3, cr13, {2}
    8b5c:	00010073 	andeq	r0, r1, r3, ror r0
    8b60:	05000000 	streq	r0, [r0, #-0]
    8b64:	00370002 	eorseq	r0, r7, r2
    8b68:	00d30310 	sbcseq	r0, r3, r0, lsl r3
    8b6c:	21302101 	teqcs	r0, r1, lsl #2
    8b70:	2130362f 	teqcs	r0, pc, lsr #12
    8b74:	21212123 			; <UNDEFINED> instruction: 0x21212123
    8b78:	21232121 			; <UNDEFINED> instruction: 0x21232121
    8b7c:	22212121 	eorcs	r2, r1, #1073741832	; 0x40000008
    8b80:	23212321 			; <UNDEFINED> instruction: 0x23212321
    8b84:	21212121 			; <UNDEFINED> instruction: 0x21212121
    8b88:	21212321 			; <UNDEFINED> instruction: 0x21212321
    8b8c:	23212221 			; <UNDEFINED> instruction: 0x23212221
    8b90:	032e0e03 			; <UNDEFINED> instruction: 0x032e0e03
    8b94:	af032009 	svcge	0x00032009
    8b98:	03312e7f 	teqeq	r1, #2032	; 0x7f0
    8b9c:	032f2e0c 			; <UNDEFINED> instruction: 0x032f2e0c
    8ba0:	022f2e15 	eoreq	r2, pc, #336	; 0x150
    8ba4:	01010002 	tsteq	r1, r2
    8ba8:	0000007f 	andeq	r0, r0, pc, ror r0
    8bac:	004e0003 	subeq	r0, lr, r3
    8bb0:	01020000 	mrseq	r0, (UNDEF: 2)
    8bb4:	000d0efb 	strdeq	r0, [sp], -fp
    8bb8:	01010101 	tsteq	r1, r1, lsl #2
    8bbc:	01000000 	mrseq	r0, (UNDEF: 0)
    8bc0:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
    8bc4:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    8bc8:	2f2e2e2f 	svccs	0x002e2e2f
    8bcc:	7562696c 	strbvc	r6, [r2, #-2412]!	; 0xfffff694
    8bd0:	736c6974 	cmnvc	ip, #116, 18	; 0x1d0000
    8bd4:	7561662f 	strbvc	r6, [r1, #-1583]!	; 0xfffff9d1
    8bd8:	642d746c 	strtvs	r7, [sp], #-1132	; 0xfffffb94
    8bdc:	2f706d75 	svccs	0x00706d75
    8be0:	2f757063 	svccs	0x00757063
    8be4:	74726f63 	ldrbtvc	r6, [r2], #-3939	; 0xfffff09d
    8be8:	6d2d7865 	stcvs	8, cr7, [sp, #-404]!	; 0xfffffe6c
    8bec:	00003333 	andeq	r3, r0, r3, lsr r3
    8bf0:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
    8bf4:	63672d74 	cmnvs	r7, #116, 26	; 0x1d00
    8bf8:	00732e63 	rsbseq	r2, r3, r3, ror #28
    8bfc:	00000001 	andeq	r0, r0, r1
    8c00:	70020500 	andvc	r0, r2, r0, lsl #10
    8c04:	03100037 	tsteq	r0, #55	; 0x37
    8c08:	21210119 			; <UNDEFINED> instruction: 0x21210119
    8c0c:	2f222121 	svccs	0x00222121
    8c10:	21212f22 			; <UNDEFINED> instruction: 0x21212f22
    8c14:	2f302321 	svccs	0x00302321
    8c18:	21312f21 	teqcs	r1, r1, lsr #30
    8c1c:	03212f21 			; <UNDEFINED> instruction: 0x03212f21
    8c20:	03302e65 	teqeq	r0, #1616	; 0x650
    8c24:	02022e16 	andeq	r2, r2, #352	; 0x160
    8c28:	Address 0x00008c28 is out of bounds.


Disassembly of section .debug_str:

00000000 <.debug_str>:
       0:	53434344 	movtpl	r4, #13124	; 0x3344
       4:	61700057 	cmnvs	r0, r7, asr r0
        xReturn = pdFALSE;
       8:	656d6172 	strbvs	r6, [sp, #-370]!	; 0xfffffe8e
}
       c:	73726574 	cmnvc	r2, #116, 10	; 0x1d000000
    ( pxList->uxNumberOfItems ) = ( UBaseType_t ) ( pxList->uxNumberOfItems + 1U );
      10:	625f5f00 	subsvs	r5, pc, #0, 30
}
      14:	746c6975 	strbtvc	r6, [ip], #-2421	; 0xfffff68b
        if(ch == '\n' || it >= size) {
      18:	705f6e69 	subsvc	r6, pc, r9, ror #28
}
      1c:	00737475 	rsbseq	r7, r3, r5, ror r4
      20:	72646461 	rsbvc	r6, r4, #1627389952	; 0x61000000
      24:	48637500 	stmdami	r3!, {r8, sl, ip, sp, lr}^
      28:	00706165 	rsbseq	r6, r0, r5, ror #2
      2c:	41464d4d 	cmpmi	r6, sp, asr #26
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
      30:	68730052 	ldmdavs	r3!, {r1, r4, r6}^
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
      34:	2074726f 	rsbscs	r7, r4, pc, ror #4
      38:	00746e69 	rsbseq	r6, r4, r9, ror #28
      3c:	5246564d 	subpl	r5, r6, #80740352	; 0x4d00000
      40:	616d0031 	cmnvs	sp, r1, lsr r0
        BaseType_t xReturn = pdFAIL;
      44:	745f6e69 	ldrbvc	r6, [pc], #-3689	; 4c <__STACKSEAL_SIZE+0x4c>
    }
      48:	006b7361 	rsbeq	r7, fp, r1, ror #6
        for (int i = 0; i < count; i++) {
      4c:	505f4449 	subspl	r4, pc, r9, asr #8
        printf("] \r\n");
      50:	76005246 	strvc	r5, [r0], -r6, asr #4
}
      54:	6b736154 	blvs	1cd85ac <__RAM_SIZE+0x1bd85ac>
      58:	616c6544 	cmnvs	ip, r4, asr #10
      5c:	616d0079 	smcvs	53257	; 0xd009
      60:	6c006e69 	stcvs	14, cr6, [r0], {105}	; 0x69
      64:	20676e6f 	rsbcs	r6, r7, pc, ror #28
      68:	62756f64 	rsbsvs	r6, r5, #100, 30	; 0x190
      6c:	5f00656c 	svcpl	0x0000656c
      70:	6e69755f 	mcrvs	5, 3, r7, cr9, cr15, {2}
      74:	5f323374 	svcpl	0x00323374
      78:	43440074 	movtmi	r0, #16500	; 0x4074
      7c:	564d4943 	strbpl	r4, [sp], -r3, asr #18
            prvUnlockQueue( pxQueue );
      80:	6d004341 	stcvs	3, cr4, [r0, #-260]	; 0xfffffefc
            ( void ) xTaskResumeAll();
      84:	5f6e6961 	svcpl	0x006e6961
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
      88:	6b736174 	blvs	1cd8660 <__RAM_SIZE+0x1bd8660>
      8c:	696e695f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, sp, lr}^
      90:	50430074 	subpl	r0, r3, r4, ror r0
        taskENTER_CRITICAL();
      94:	00444955 	subeq	r4, r4, r5, asr r9
            if( uxSemaphoreCount > ( UBaseType_t ) 0 )
      98:	5246564d 	subpl	r5, r6, #80740352	; 0x4d00000
                if( xTicksToWait == ( TickType_t ) 0 )
      9c:	61760030 	cmnvs	r6, r0, lsr r0
      a0:	0065756c 	rsbeq	r7, r5, ip, ror #10
                else if( xEntryTimeSet == pdFALSE )
      a4:	75625f5f 	strbvc	r5, [r2, #-3935]!	; 0xfffff0a1
        taskEXIT_CRITICAL();
      a8:	69746c69 	ldmdbvs	r4!, {r0, r3, r5, r6, sl, fp, sp, lr}^
        vTaskSuspendAll();
      ac:	656d5f6e 	strbvs	r5, [sp, #-3950]!	; 0xfffff092
        prvLockQueue( pxQueue );
      b0:	7465736d 	strbtvc	r7, [r5], #-877	; 0xfffffc93
      b4:	53455200 	movtpl	r5, #20992	; 0x5200
      b8:	45565245 	ldrbmi	r5, [r6, #-581]	; 0xfffffdbb
      bc:	52003544 	andpl	r3, r0, #68, 10	; 0x11000000
      c0:	52455345 	subpl	r5, r5, #335544321	; 0x14000001
      c4:	36444556 			; <UNDEFINED> instruction: 0x36444556
      c8:	73657400 	cmnvc	r5, #0, 8
      cc:	74003174 	strvc	r3, [r0], #-372	; 0xfffffe8c
        if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
      d0:	32747365 	rsbscc	r7, r4, #-1811939327	; 0x94000001
      d4:	73657400 	cmnvc	r5, #0, 8
      d8:	53003374 	movwpl	r3, #884	; 0x374
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
      dc:	00524954 	subseq	r4, r2, r4, asr r9
      e0:	415f4449 	cmpmi	pc, r9, asr #8
                    if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
      e4:	66005246 	strvs	r5, [r0], -r6, asr #4
      e8:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
                vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
      ec:	6d75645f 	cfldrdvs	mvd6, [r5, #-380]!	; 0xfffffe84
      f0:	6d625f70 	stclvs	15, cr5, [r2, #-448]!	; 0xfffffe40
                prvUnlockQueue( pxQueue );
      f4:	6174735f 	cmnvs	r4, pc, asr r3
      f8:	705f6b63 	subsvc	r6, pc, r3, ror #22
                if( xTaskResumeAll() == pdFALSE )
      fc:	746e696f 	strbtvc	r6, [lr], #-2415	; 0xfffff691
     100:	49434400 	stmdbmi	r3, {sl, lr}^
                    taskYIELD_WITHIN_API();
     104:	48005753 	stmdami	r0, {r0, r1, r4, r6, r8, r9, sl, ip, lr}
                    if( xInheritanceOccurred != pdFALSE )
     108:	46647261 	strbtmi	r7, [r4], -r1, ror #4
                return errQUEUE_EMPTY;
     10c:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
                        taskENTER_CRITICAL();
     110:	6e61485f 	mcrvs	8, 3, r4, cr1, cr15, {2}
                            uxHighestWaitingPriority = prvGetDisinheritPriorityAfterTimeout( pxQueue );
     114:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
     118:	67654c5f 			; <UNDEFINED> instruction: 0x67654c5f
                            vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
     11c:	79636e65 	stmdbvc	r3!, {r0, r2, r5, r6, r9, sl, fp, sp, lr}^
                        taskEXIT_CRITICAL();
     120:	46564d00 	ldrbmi	r4, [r6], -r0, lsl #26
     124:	6c003252 	sfmvs	f3, 4, [r0], {82}	; 0x52
     128:	20676e6f 	rsbcs	r6, r7, pc, ror #28
     12c:	676e6f6c 	strbvs	r6, [lr, -ip, ror #30]!
     130:	746e6920 	strbtvc	r6, [lr], #-2336	; 0xfffff6e0
     134:	41464200 	mrsmi	r4, (UNDEF: 102)
     138:	54760052 	ldrbtpl	r0, [r6], #-82	; 0xffffffae
     13c:	536b7361 	cmnpl	fp, #-2080374783	; 0x84000001
     140:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
     144:	65686353 	strbvs	r6, [r8, #-851]!	; 0xfffffcad
     148:	656c7564 	strbvs	r7, [ip, #-1380]!	; 0xfffffa9c
     14c:	2f2e0072 	svccs	0x002e0072
     150:	6c707061 	ldclvs	0, cr7, [r0], #-388	; 0xfffffe7c
     154:	74616369 	strbtvc	r6, [r1], #-873	; 0xfffffc97
     158:	2f6e6f69 	svccs	0x006e6f69
     15c:	6e69616d 	powvsez	f6, f1, #5.0
     160:	4900632e 	stmdbmi	r0, {r1, r2, r3, r5, r8, r9, sp, lr}
     164:	4d4d5f44 	stclmi	15, cr5, [sp, #-272]	; 0xfffffef0
     168:	74005246 	strvc	r5, [r0], #-582	; 0xfffffdba
     16c:	61546b73 	cmpvs	r4, r3, ror fp
     170:	6f436b73 	svcvs	0x00436b73
     174:	6f72746e 	svcvs	0x0072746e
     178:	6f6c426c 	svcvs	0x006c426c
     17c:	5f006b63 	svcpl	0x00006b63
     180:	6e69755f 	mcrvs	5, 3, r7, cr9, cr15, {2}
     184:	745f3874 	ldrbvc	r3, [pc], #-2164	; 18c <__STACKSEAL_SIZE+0x18c>
     188:	554e4700 	strbpl	r4, [lr, #-1792]	; 0xfffff900
     18c:	37314320 	ldrcc	r4, [r1, -r0, lsr #6]!
     190:	2e303120 	rsfcssp	f3, f0, f0
     194:	20312e33 	eorscs	r2, r1, r3, lsr lr
     198:	31323032 	teqcc	r2, r2, lsr r0
     19c:	34323830 	ldrtcc	r3, [r2], #-2096	; 0xfffff7d0
     1a0:	65722820 	ldrbvs	r2, [r2, #-2080]!	; 0xfffff7e0
     1a4:	7361656c 	cmnvc	r1, #108, 10	; 0x1b000000
     1a8:	2d202965 			; <UNDEFINED> instruction: 0x2d202965
     1ac:	7570636d 	ldrbvc	r6, [r0, #-877]!	; 0xfffffc93
     1b0:	726f633d 	rsbvc	r6, pc, #-201326592	; 0xf4000000
     1b4:	2d786574 	cfldr64cs	mvdx6, [r8, #-464]!	; 0xfffffe30
     1b8:	2033336d 	eorscs	r3, r3, sp, ror #6
     1bc:	70666d2d 	rsbvc	r6, r6, sp, lsr #26
     1c0:	70663d75 	rsbvc	r3, r6, r5, ror sp
     1c4:	732d3576 			; <UNDEFINED> instruction: 0x732d3576
     1c8:	31642d70 	smccc	17104	; 0x42d0
     1cc:	6d2d2036 	stcvs	0, cr2, [sp, #-216]!	; 0xffffff28
     1d0:	616f6c66 	cmnvs	pc, r6, ror #24
     1d4:	62612d74 	rsbvs	r2, r1, #116, 26	; 0x1d00
     1d8:	61683d69 	cmnvs	r8, r9, ror #26
     1dc:	2d206472 	cfstrscs	mvf6, [r0, #-456]!	; 0xfffffe38
     1e0:	7568746d 	strbvc	r7, [r8, #-1133]!	; 0xfffffb93
     1e4:	2d20626d 	sfmcs	f6, 4, [r0, #-436]!	; 0xfffffe4c
     1e8:	6372616d 	cmnvs	r2, #1073741851	; 0x4000001b
     1ec:	72613d68 	rsbvc	r3, r1, #104, 26	; 0x1a00
     1f0:	2d38766d 	ldccs	6, cr7, [r8, #-436]!	; 0xfffffe4c
     1f4:	616d2e6d 	cmnvs	sp, sp, ror #28
     1f8:	642b6e69 	strtvs	r6, [fp], #-3689	; 0xfffff197
     1fc:	662b7073 			; <UNDEFINED> instruction: 0x662b7073
     200:	672d2070 			; <UNDEFINED> instruction: 0x672d2070
     204:	64672d20 	strbtvs	r2, [r7], #-3360	; 0xfffff2e0
     208:	66726177 			; <UNDEFINED> instruction: 0x66726177
     20c:	2d20322d 	sfmcs	f3, 4, [r0, #-180]!	; 0xffffff4c
     210:	2d20674f 	stccs	7, cr6, [r0, #-316]!	; 0xfffffec4
     214:	74616466 	strbtvc	r6, [r1], #-1126	; 0xfffffb9a
     218:	65732d61 	ldrbvs	r2, [r3, #-3425]!	; 0xfffff29f
     21c:	6f697463 	svcvs	0x00697463
     220:	2d20736e 	stccs	3, cr7, [r0, #-440]!	; 0xfffffe48
     224:	6e756666 	cdpvs	6, 7, cr6, cr5, cr6, {3}
     228:	6f697463 	svcvs	0x00697463
     22c:	65732d6e 	ldrbvs	r2, [r3, #-3438]!	; 0xfffff292
     230:	6f697463 	svcvs	0x00697463
     234:	2d20736e 	stccs	3, cr7, [r0, #-440]!	; 0xfffffe48
     238:	2d6f6e66 	stclcs	14, cr6, [pc, #-408]!	; a8 <__STACKSEAL_SIZE+0xa8>
     23c:	65637865 	strbvs	r7, [r3, #-2149]!	; 0xfffff79b
     240:	6f697470 	svcvs	0x00697470
     244:	6600736e 	strvs	r7, [r0], -lr, ror #6
     248:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
     24c:	6d75645f 	cfldrdvs	mvd6, [r5, #-380]!	; 0xfffffe84
     250:	61635f70 	smcvs	13808	; 0x35f0
     254:	74736c6c 	ldrbtvc	r6, [r3], #-3180	; 0xfffff394
     258:	006b6361 	rsbeq	r6, fp, r1, ror #6
     25c:	52534643 	subspl	r4, r3, #70254592	; 0x4300000
     260:	49434900 	stmdbmi	r3, {r8, fp, lr}^
     264:	554c4c41 	strbpl	r4, [ip, #-3137]	; 0xfffff3bf
     268:	49434400 	stmdbmi	r3, {sl, lr}^
     26c:	4341564d 	movtmi	r5, #5709	; 0x164d
     270:	736e7500 	cmnvc	lr, #0, 10
     274:	656e6769 	strbvs	r6, [lr, #-1897]!	; 0xfffff897
     278:	68632064 	stmdavs	r3!, {r2, r5, r6, sp}^
     27c:	49007261 	stmdbmi	r0, {r0, r5, r6, r9, ip, sp, lr}
     280:	564d4943 	strbpl	r4, [sp], -r3, asr #18
     284:	6d005541 	cfstr32vs	mvfx5, [r0, #-260]	; 0xfffffefc
     288:	5f6e6961 	svcpl	0x006e6961
     28c:	6b736174 	blvs	1cd8864 <__RAM_SIZE+0x1bd8864>
     290:	746e655f 	strbtvc	r6, [lr], #-1375	; 0xfffffaa1
     294:	49007972 	stmdbmi	r0, {r1, r4, r5, r6, r8, fp, ip, sp, lr}
     298:	53495f44 	movtpl	r5, #40772	; 0x9f44
     29c:	66005241 	strvs	r5, [r0], -r1, asr #4
     2a0:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
     2a4:	6d75645f 	cfldrdvs	mvd6, [r5, #-380]!	; 0xfffffe84
     2a8:	6e695f70 	mcrvs	15, 3, r5, cr9, cr0, {3}
     2ac:	53007469 	movwpl	r7, #1129	; 0x469
     2b0:	545f4243 	ldrbpl	r4, [pc], #-579	; 2b8 <__STACKSEAL_SIZE+0x2b8>
     2b4:	00657079 	rsbeq	r7, r5, r9, ror r0
     2b8:	52504853 	subspl	r4, r0, #5439488	; 0x530000
     2bc:	6e6f6c00 	cdpvs	12, 6, cr6, cr15, cr0, {0}
     2c0:	6f6c2067 	svcvs	0x006c2067
     2c4:	7520676e 	strvc	r6, [r0, #-1902]!	; 0xfffff892
     2c8:	6769736e 	strbvs	r7, [r9, -lr, ror #6]!
     2cc:	2064656e 	rsbcs	r6, r4, lr, ror #10
     2d0:	00746e69 	rsbseq	r6, r4, r9, ror #28
     2d4:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
     2d8:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
     2dc:	67696c61 	strbvs	r6, [r9, -r1, ror #24]!
     2e0:	72745f6e 	rsbsvc	r5, r4, #440	; 0x1b8
     2e4:	65676769 	strbvs	r6, [r7, #-1897]!	; 0xfffff897
     2e8:	61540072 	cmpvs	r4, r2, ror r0
     2ec:	61486b73 	hvcvs	34483	; 0x86b3
     2f0:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
     2f4:	5300745f 	movwpl	r7, #1119	; 0x45f
     2f8:	00525346 	subseq	r5, r2, r6, asr #6
     2fc:	4d434344 	stclmi	3, cr4, [r3, #-272]	; 0xfffffef0
     300:	00434156 	subeq	r4, r3, r6, asr r1
     304:	53434853 	movtpl	r4, #14419	; 0x3853
     308:	5f5f0052 	svcpl	0x005f0052
     30c:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
     310:	43005f5f 	movwmi	r5, #3935	; 0xf5f
     314:	4c455353 	mcrrmi	3, 5, r5, r5, cr3
     318:	68730052 	ldmdavs	r3!, {r1, r4, r6}^
     31c:	2074726f 	rsbscs	r7, r4, pc, ror #4
     320:	69736e75 	ldmdbvs	r3!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
     324:	64656e67 	strbtvs	r6, [r5], #-3687	; 0xfffff199
     328:	746e6920 	strbtvc	r6, [lr], #-2336	; 0xfffff6e0
     32c:	53434300 	movtpl	r4, #13056	; 0x3300
     330:	00524449 	subseq	r4, r2, r9, asr #8
     334:	4d434344 	stclmi	3, cr4, [r3, #-272]	; 0xfffffef0
     338:	00554156 	subseq	r4, r5, r6, asr r1
     33c:	61666544 	cmnvs	r6, r4, asr #10
     340:	5f746c75 	svcpl	0x00746c75
     344:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
     348:	0072656c 	rsbseq	r6, r2, ip, ror #10
     34c:	524f5456 	subpl	r5, pc, #1442840576	; 0x56000000
     350:	53464400 	movtpl	r4, #25600	; 0x6400
     354:	61750052 	cmnvs	r5, r2, asr r0
     358:	695f7472 	ldmdbvs	pc, {r1, r4, r5, r6, sl, ip, sp, lr}^	; <UNPREDICTABLE>
     35c:	0074696e 	rsbseq	r6, r4, lr, ror #18
     360:	73615478 	cmnvc	r1, #120, 8	; 0x78000000
     364:	6572436b 	ldrbvs	r4, [r2, #-875]!	; 0xfffffc95
     368:	00657461 	rsbeq	r7, r5, r1, ror #8
     36c:	52534648 	subspl	r4, r3, #72, 12	; 0x4800000
     370:	53455200 	movtpl	r5, #20992	; 0x5200
     374:	45565245 	ldrbmi	r5, [r6, #-581]	; 0xfffffdbb
     378:	52003344 	andpl	r3, r0, #68, 6	; 0x10000001
     37c:	52455345 	subpl	r5, r5, #335544321	; 0x14000001
     380:	34444556 	strbcc	r4, [r4], #-1366	; 0xfffffaaa
     384:	5c3a4300 	ldcpl	3, cr4, [sl], #-0
     388:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
     38c:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
     390:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
     394:	65646f63 	strbvs	r6, [r4, #-3939]!	; 0xfffff09d
     398:	7469675c 	strbtvc	r6, [r9], #-1884	; 0xfffff8a4
     39c:	5c627568 	cfstr64pl	mvdx7, [r2], #-416	; 0xfffffe60
     3a0:	756d6571 	strbvc	r6, [sp, #-1393]!	; 0xfffffa8f
     3a4:	6d69732d 	stclvs	3, cr7, [r9, #-180]!	; 0xffffff4c
     3a8:	74616c75 	strbtvc	r6, [r1], #-3189	; 0xfffff38b
     3ac:	625c726f 	subsvs	r7, ip, #-268435450	; 0xf0000006
     3b0:	6472616f 	ldrbtvs	r6, [r2], #-367	; 0xfffffe91
     3b4:	706d5c73 	rsbvc	r5, sp, r3, ror ip
     3b8:	612d3273 			; <UNDEFINED> instruction: 0x612d3273
     3bc:	3530356e 	ldrcc	r3, [r0, #-1390]!	; 0xfffffa92
     3c0:	6572465c 	ldrbvs	r4, [r2, #-1628]!	; 0xfffff9a4
     3c4:	4f545265 	svcmi	0x00545265
     3c8:	46530053 			; <UNDEFINED> instruction: 0x46530053
     3cc:	66005241 	strvs	r5, [r0], -r1, asr #4
     3d0:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
     3d4:	7669645f 			; <UNDEFINED> instruction: 0x7669645f
     3d8:	72657a5f 	rsbvc	r7, r5, #389120	; 0x5f000
     3dc:	72745f6f 	rsbsvc	r5, r4, #444	; 0x1bc
     3e0:	65676769 	strbvs	r6, [r7, #-1897]!	; 0xfffff897
     3e4:	43440072 	movtmi	r0, #16498	; 0x4072
     3e8:	57534943 	ldrbpl	r4, [r3, -r3, asr #18]
     3ec:	53455200 	movtpl	r5, #20992	; 0x5200
     3f0:	45565245 	ldrbmi	r5, [r6, #-581]	; 0xfffffdbb
     3f4:	43003744 	movwmi	r3, #1860	; 0x744
     3f8:	5244494c 	subpl	r4, r4, #76, 18	; 0x130000
     3fc:	756f6300 	strbvc	r6, [pc, #-768]!	; 104 <__STACKSEAL_SIZE+0x104>
     400:	7400746e 	strvc	r7, [r0], #-1134	; 0xfffffb92
     404:	30747365 	rsbscc	r7, r4, r5, ror #6
     408:	75616600 	strbvc	r6, [r1, #-1536]!	; 0xfffffa00
     40c:	645f746c 	ldrbvs	r7, [pc], #-1132	; 414 <__STACKSEAL_SIZE+0x414>
     410:	5f706d75 	svcpl	0x00706d75
     414:	735f6d62 	cmpvc	pc, #6272	; 0x1880
     418:	6b636174 	blvs	18d89f0 <__RAM_SIZE+0x17d89f0>
     41c:	6174735f 	cmnvs	r4, pc, asr r3
     420:	74007472 	strvc	r7, [r0], #-1138	; 0xfffffb8e
     424:	34747365 	ldrbtcc	r7, [r4], #-869	; 0xfffffc9b
     428:	73657400 	cmnvc	r5, #0, 8
     42c:	41003574 	tstmi	r0, r4, ror r5
     430:	00525346 	subseq	r5, r2, r6, asr #6
     434:	41495042 	cmpmi	r9, r2, asr #32
     438:	49004c4c 	stmdbmi	r0, {r2, r3, r6, sl, fp, lr}
     43c:	46445f44 	strbmi	r5, [r4], -r4, asr #30
     440:	43490052 	movtmi	r0, #36946	; 0x9052
     444:	43005253 	movwmi	r5, #595	; 0x253
     448:	52434150 	subpl	r4, r3, #80, 2
     44c:	52494100 	subpl	r4, r9, #0, 2
     450:	4e005243 	cdpmi	2, 0, cr5, cr0, cr3, {2}
     454:	52434153 	subpl	r4, r3, #-1073741804	; 0xc0000014
     458:	612f2e00 			; <UNDEFINED> instruction: 0x612f2e00
     45c:	696c7070 	stmdbvs	ip!, {r4, r5, r6, ip, sp, lr}^
     460:	69746163 	ldmdbvs	r4!, {r0, r1, r5, r6, r8, sp, lr}^
     464:	732f6e6f 			; <UNDEFINED> instruction: 0x732f6e6f
     468:	65747379 	ldrbvs	r7, [r4, #-889]!	; 0xfffffc87
     46c:	52415f6d 	subpl	r5, r1, #436	; 0x1b4
     470:	334d434d 	movtcc	r4, #54093	; 0xd34d
     474:	00632e33 	rsbeq	r2, r3, r3, lsr lr
     478:	74737953 	ldrbtvc	r7, [r3], #-2387	; 0xfffff6ad
     47c:	6f436d65 	svcvs	0x00436d65
     480:	6c436572 	cfstr64vs	mvdx6, [r3], {114}	; 0x72
     484:	556b636f 	strbpl	r6, [fp, #-879]!	; 0xfffffc91
     488:	74616470 	strbtvc	r6, [r1], #-1136	; 0xfffffb90
     48c:	79530065 	ldmdbvc	r3, {r0, r2, r5, r6}^
     490:	6d657473 	cfstrdvs	mvd7, [r5, #-460]!	; 0xfffffe34
     494:	65726f43 	ldrbvs	r6, [r2, #-3907]!	; 0xfffff0bd
     498:	636f6c43 	cmnvs	pc, #17152	; 0x4300
     49c:	5f5f006b 	svcpl	0x005f006b
     4a0:	74636556 	strbtvc	r6, [r3], #-1366	; 0xfffffaaa
     4a4:	0073726f 	rsbseq	r7, r3, pc, ror #4
     4a8:	74737953 	ldrbtvc	r7, [r3], #-2387	; 0xfffff6ad
     4ac:	6e496d65 	cdpvs	13, 4, cr6, cr9, cr5, {3}
     4b0:	56007469 	strpl	r7, [r0], -r9, ror #8
     4b4:	4f544345 	svcmi	0x00544345
     4b8:	41545f52 	cmpmi	r4, r2, asr pc
     4bc:	5f454c42 	svcpl	0x00454c42
     4c0:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
     4c4:	615f5f00 	cmpvs	pc, r0, lsl #30
     4c8:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     4cc:	6432695f 	ldrtvs	r6, [r2], #-2399	; 0xfffff6a1
     4d0:	776f7000 	strbvc	r7, [pc, -r0]!
     4d4:	65003031 	strvs	r3, [r0, #-49]	; 0xffffffcf
     4d8:	00327078 	eorseq	r7, r2, r8, ror r0
     4dc:	5f74756f 	svcpl	0x0074756f
     4e0:	5f746366 	svcpl	0x00746366
     4e4:	70617277 	rsbvc	r7, r1, r7, ror r2
     4e8:	70786500 	rsbsvc	r6, r8, r0, lsl #10
     4ec:	006c6176 	rsbeq	r6, ip, r6, ror r1
     4f0:	74756f5f 	ldrbtvc	r6, [r5], #-3935	; 0xfffff0a1
     4f4:	6675625f 			; <UNDEFINED> instruction: 0x6675625f
     4f8:	00726566 	rsbseq	r6, r2, r6, ror #10
     4fc:	69727076 	ldmdbvs	r2!, {r1, r2, r4, r5, r6, ip, sp, lr}^
     500:	0066746e 	rsbeq	r7, r6, lr, ror #8
     504:	657a6973 	ldrbvs	r6, [sl, #-2419]!	; 0xfffff68d
     508:	6d00745f 	cfstrsvs	mvf7, [r0, #-380]	; 0xfffffe84
     50c:	69776e69 	ldmdbvs	r7!, {r0, r3, r5, r6, r9, sl, fp, sp, lr}^
     510:	00687464 	rsbeq	r7, r8, r4, ror #8
     514:	65615f5f 	strbvs	r5, [r1, #-3935]!	; 0xfffff0a1
     518:	5f696261 	svcpl	0x00696261
     51c:	76696464 	strbtvc	r6, [r9], -r4, ror #8
     520:	74655f00 	strbtvc	r5, [r5], #-3840	; 0xfffff100
     524:	7000616f 	andvc	r6, r0, pc, ror #2
     528:	635f7475 	cmpvs	pc, #1962934272	; 0x75000000
     52c:	00726168 	rsbseq	r6, r2, r8, ror #2
     530:	74756f5f 	ldrbtvc	r6, [r5], #-3935	; 0xfffff0a1
     534:	6168635f 	cmnvs	r8, pc, asr r3
     538:	616d0072 	smcvs	53250	; 0xd002
     53c:	7a697378 	bvc	1a5d324 <__RAM_SIZE+0x195d324>
     540:	68770065 	ldmdavs	r7!, {r0, r2, r5, r6}^
     544:	00656c6f 	rsbeq	r6, r5, pc, ror #24
     548:	65615f5f 	strbvs	r5, [r1, #-3935]!	; 0xfffff0a1
     54c:	5f696261 	svcpl	0x00696261
     550:	7a693264 	bvc	1a4cee8 <__RAM_SIZE+0x194cee8>
     554:	61726600 	cmnvs	r2, r0, lsl #12
     558:	6f5f0063 	svcvs	0x005f0063
     55c:	665f7475 			; <UNDEFINED> instruction: 0x665f7475
     560:	5f007463 	svcpl	0x00007463
     564:	6165615f 	cmnvs	r5, pc, asr r1
     568:	645f6962 	ldrbvs	r6, [pc], #-2402	; 570 <__STACKSEAL_SIZE+0x570>
     56c:	7a697532 	bvc	1a5da3c <__RAM_SIZE+0x195da3c>
     570:	61747300 	cmnvs	r4, r0, lsl #6
     574:	695f7472 	ldmdbvs	pc, {r1, r4, r5, r6, sl, ip, sp, lr}^	; <UNPREDICTABLE>
     578:	66007864 	strvs	r7, [r0], -r4, ror #16
     57c:	72707463 	rsbsvc	r7, r0, #1660944384	; 0x63000000
     580:	66746e69 	ldrbtvs	r6, [r4], -r9, ror #28
     584:	67656e00 	strbvs	r6, [r5, -r0, lsl #28]!
     588:	76697461 	strbtvc	r7, [r9], -r1, ror #8
     58c:	5f5f0065 	svcpl	0x005f0065
     590:	62616561 	rsbvs	r6, r1, #406847488	; 0x18400000
     594:	61645f69 	cmnvs	r4, r9, ror #30
     598:	5f006464 	svcpl	0x00006464
     59c:	5f61765f 	svcpl	0x0061765f
     5a0:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
     5a4:	2f2e2e00 	svccs	0x002e2e00
     5a8:	65726f43 	ldrbvs	r6, [r2, #-3907]!	; 0xfffff0bd
     5ac:	6372532f 	cmnvs	r2, #-1140850688	; 0xbc000000
     5b0:	6972702f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, ip, sp, lr}^
     5b4:	2e66746e 	cdpcs	4, 6, cr7, cr6, cr14, {3}
     5b8:	6e5f0063 	cdpvs	0, 5, cr0, cr15, cr3, {3}
     5bc:	5f616f74 	svcpl	0x00616f74
     5c0:	6d726f66 	ldclvs	15, cr6, [r2, #-408]!	; 0xfffffe68
     5c4:	5f007461 	svcpl	0x00007461
     5c8:	616f7466 	cmnvs	pc, r6, ror #8
     5cc:	73765f00 	cmnvc	r6, #0, 30
     5d0:	6972706e 	ldmdbvs	r2!, {r1, r2, r3, r5, r6, ip, sp, lr}^
     5d4:	0066746e 	rsbeq	r7, r6, lr, ror #8
     5d8:	74756f5f 	ldrbtvc	r6, [r5], #-3935	; 0xfffff0a1
     5dc:	6c756e5f 	ldclvs	14, cr6, [r5], #-380	; 0xfffffe84
     5e0:	756f006c 	strbvc	r0, [pc, #-108]!	; 57c <__STACKSEAL_SIZE+0x57c>
     5e4:	63665f74 	cmnvs	r6, #116, 30	; 0x1d0
     5e8:	79745f74 	ldmdbvc	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     5ec:	5f006570 	svcpl	0x00006570
     5f0:	6165615f 	cmnvs	r5, pc, asr r1
     5f4:	645f6962 	ldrbvs	r6, [pc], #-2402	; 5fc <__STACKSEAL_SIZE+0x5fc>
     5f8:	67706d63 	ldrbvs	r6, [r0, -r3, ror #26]!
     5fc:	6e5f0065 	cdpvs	0, 5, cr0, cr15, cr5, {3}
     600:	5f616f74 	svcpl	0x00616f74
     604:	676e6f6c 	strbvs	r6, [lr, -ip, ror #30]!
     608:	72707300 	rsbsvc	r7, r0, #0, 6
     60c:	66746e69 	ldrbtvs	r6, [r4], -r9, ror #28
     610:	615f5f00 	cmpvs	pc, r0, lsl #30
     614:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     618:	3269755f 	rsbcc	r7, r9, #398458880	; 0x17c00000
     61c:	6c660064 	stclvs	0, cr0, [r6], #-400	; 0xfffffe70
     620:	00736761 	rsbseq	r6, r3, r1, ror #14
     624:	65615f5f 	strbvs	r5, [r1, #-3935]!	; 0xfffff0a1
     628:	5f696261 	svcpl	0x00696261
     62c:	706d6364 	rsbvc	r6, sp, r4, ror #6
     630:	6d007467 	cfstrsvs	mvf7, [r0, #-412]	; 0xfffffe64
     634:	656c7861 	strbvs	r7, [ip, #-2145]!	; 0xfffff79f
     638:	615f006e 	cmpvs	pc, lr, rrx
     63c:	00696f74 	rsbeq	r6, r9, r4, ror pc
     640:	7274735f 	rsbsvc	r7, r4, #2080374785	; 0x7c000001
     644:	6e656c6e 	cdpvs	12, 6, cr6, cr5, cr14, {3}
     648:	5f00735f 	svcpl	0x0000735f
     64c:	0070615f 	rsbseq	r6, r0, pc, asr r1
     650:	65615f5f 	strbvs	r5, [r1, #-3935]!	; 0xfffff0a1
     654:	5f696261 	svcpl	0x00696261
     658:	6c756d64 	ldclvs	13, cr6, [r5], #-400	; 0xfffffe70
     65c:	6f425f00 	svcvs	0x00425f00
     660:	5f006c6f 	svcpl	0x00006c6f
     664:	6e69755f 	mcrvs	5, 3, r7, cr9, cr15, {2}
     668:	5f343674 	svcpl	0x00343674
     66c:	695f0074 	ldmdbvs	pc, {r2, r4, r5, r6}^	; <UNPREDICTABLE>
     670:	69645f73 	stmdbvs	r4!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     674:	00746967 	rsbseq	r6, r4, r7, ror #18
     678:	766e6f63 	strbtvc	r6, [lr], -r3, ror #30
     67c:	615f5f00 	cmpvs	pc, r0, lsl #30
     680:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     684:	6d63645f 	cfstrdvs	mvd6, [r3, #-380]!	; 0xfffffe84
     688:	00716570 	rsbseq	r6, r1, r0, ror r5
     68c:	69755f5f 	ldmdbvs	r5!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, fp, ip, lr}^
     690:	7470746e 	ldrbtvc	r7, [r0], #-1134	; 0xfffffb92
     694:	00745f72 	rsbseq	r5, r4, r2, ror pc
     698:	72616863 	rsbvc	r6, r1, #6488064	; 0x630000
     69c:	65746361 	ldrbvs	r6, [r4, #-865]!	; 0xfffffc9f
     6a0:	6f5f0072 	svcvs	0x005f0072
     6a4:	725f7475 	subsvc	r7, pc, #1962934272	; 0x75000000
     6a8:	5f007665 	svcpl	0x00007665
     6ac:	6165615f 	cmnvs	r5, pc, asr r1
     6b0:	645f6962 	ldrbvs	r6, [pc], #-2402	; 6b8 <__STACKSEAL_SIZE+0x6b8>
     6b4:	00627573 	rsbeq	r7, r2, r3, ror r5
     6b8:	65615f5f 	strbvs	r5, [r1, #-3935]!	; 0xfffff0a1
     6bc:	5f696261 	svcpl	0x00696261
     6c0:	69646c75 	stmdbvs	r4!, {r0, r2, r4, r5, r6, sl, fp, sp, lr}^
     6c4:	646f6d76 	strbtvs	r6, [pc], #-3446	; 6cc <__STACKSEAL_SIZE+0x6cc>
     6c8:	615f5f00 	cmpvs	pc, r0, lsl #30
     6cc:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     6d0:	6d63645f 	cfstrdvs	mvd6, [r3, #-380]!	; 0xfffffe84
     6d4:	00656c70 	rsbeq	r6, r5, r0, ror ip
     6d8:	5f74756f 	svcpl	0x0074756f
     6dc:	5f746366 	svcpl	0x00746366
     6e0:	70617277 	rsbvc	r7, r1, r7, ror r2
     6e4:	7079745f 	rsbsvc	r7, r9, pc, asr r4
     6e8:	72700065 	rsbsvc	r0, r0, #101	; 0x65
     6ec:	66006365 	strvs	r6, [r0], -r5, ror #6
     6f0:	74646977 	strbtvc	r6, [r4], #-2423	; 0xfffff689
     6f4:	5f5f0068 	svcpl	0x005f0068
     6f8:	63756e67 	cmnvs	r5, #1648	; 0x670
     6fc:	5f61765f 	svcpl	0x0061765f
     700:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
     704:	615f5f00 	cmpvs	pc, r0, lsl #30
     708:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     70c:	6d63645f 	cfstrdvs	mvd6, [r3, #-380]!	; 0xfffffe84
     710:	00746c70 	rsbseq	r6, r4, r0, ror ip
     714:	6f746e5f 	svcvs	0x00746e5f
     718:	6f6c5f61 	svcvs	0x006c5f61
     71c:	6c5f676e 	mrrcvs	7, 6, r6, pc, cr14	; <UNPREDICTABLE>
     720:	00676e6f 	rsbeq	r6, r7, pc, ror #28
     724:	6c5f7369 	mrrcvs	3, 6, r7, pc, cr9	; <UNPREDICTABLE>
     728:	7270006c 	rsbsvc	r0, r0, #108	; 0x6c
     72c:	73696365 	cmnvc	r9, #-1811939327	; 0x94000001
     730:	006e6f69 	rsbeq	r6, lr, r9, ror #30
     734:	66666964 	strbtvs	r6, [r6], -r4, ror #18
     738:	2f2e2e00 	svccs	0x002e2e00
     73c:	65726f43 	ldrbvs	r6, [r2, #-3907]!	; 0xfffff0bd
     740:	6372532f 	cmnvs	r2, #-1140850688	; 0xbc000000
     744:	7261752f 	rsbvc	r7, r1, #197132288	; 0xbc00000
     748:	00632e74 	rsbeq	r2, r3, r4, ror lr
     74c:	69727473 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
     750:	7500676e 	strvc	r6, [r0, #-1902]	; 0xfffff892
     754:	5f747261 	svcpl	0x00747261
     758:	76636572 			; <UNDEFINED> instruction: 0x76636572
     75c:	74656700 	strbtvc	r6, [r5], #-1792	; 0xfffff900
     760:	72616863 	rsbvc	r6, r1, #6488064	; 0x630000
     764:	646e6900 	strbtvs	r6, [lr], #-2304	; 0xfffff700
     768:	75007865 	strvc	r7, [r0, #-2149]	; 0xfffff79b
     76c:	5f747261 	svcpl	0x00747261
     770:	646e6573 	strbtvs	r6, [lr], #-1395	; 0xfffffa8d
     774:	74656700 	strbtvc	r6, [r5], #-1792	; 0xfffff900
     778:	6168635f 	cmnvs	r8, pc, asr r3
     77c:	706f0072 	rsbvc	r0, pc, r2, ror r0	; <UNPREDICTABLE>
     780:	65646f63 	strbvs	r6, [r4, #-3939]!	; 0xfffff09d
     784:	5f73695f 	svcpl	0x0073695f
     788:	6f5f6c62 	svcvs	0x005f6c62
     78c:	6c625f72 	stclvs	15, cr5, [r2], #-456	; 0xfffffe38
     790:	74730078 	ldrbtvc	r0, [r3], #-120	; 0xffffff88
     794:	5f6b6361 	svcpl	0x006b6361
     798:	6d617266 	sfmvs	f7, 2, [r1, #-408]!	; 0xfffffe68
     79c:	00745f65 	rsbseq	r5, r4, r5, ror #30
     7a0:	6d5f6466 	cfldrdvs	mvd6, [pc, #-408]	; 610 <__STACKSEAL_SIZE+0x610>
     7a4:	5f6e6961 	svcpl	0x006e6961
     7a8:	63617473 	cmnvs	r1, #1929379840	; 0x73000000
     7ac:	75665f6b 	strbvc	r5, [r6, #-3947]!	; 0xfffff095
     7b0:	5f006c6c 	svcpl	0x00006c6c
     7b4:	6e69755f 	mcrvs	5, 3, r7, cr9, cr15, {2}
     7b8:	5f363174 	svcpl	0x00363174
     7bc:	735f0074 	cmpvc	pc, #116	; 0x74
     7c0:	63617473 	cmnvs	r1, #1929379840	; 0x73000000
     7c4:	6166006b 	cmnvs	r6, fp, rrx
     7c8:	5f746c75 	svcpl	0x00746c75
     7cc:	706d7564 	rsbvc	r7, sp, r4, ror #10
     7d0:	63706f5f 	cmnvs	r0, #380	; 0x17c
     7d4:	0065646f 	rsbeq	r6, r5, pc, ror #8
     7d8:	7473655f 	ldrbtvc	r6, [r3], #-1375	; 0xfffffaa1
     7dc:	006b6361 	rsbeq	r6, fp, r1, ror #6
     7e0:	75736572 	ldrbvc	r6, [r3, #-1394]!	; 0xfffffa8e
     7e4:	6c00746c 	cfstrsvs	mvf7, [r0], {108}	; 0x6c
     7e8:	656b6e69 	strbvs	r6, [fp, #-3689]!	; 0xfffff197
     7ec:	74730072 	ldrbtvc	r0, [r3], #-114	; 0xffffff8e
     7f0:	5f6b6361 	svcpl	0x006b6361
     7f4:	6d617266 	sfmvs	f7, 2, [r1, #-408]!	; 0xfffffe68
     7f8:	616d5f65 	cmnvs	sp, r5, ror #30
     7fc:	6c61756e 	cfstr64vs	mvdx7, [r1], #-440	; 0xfffffe48
     800:	6f00745f 	svcvs	0x0000745f
     804:	646f6370 	strbtvs	r6, [pc], #-880	; 80c <__Vectors_Size+0x4c>
     808:	6f003165 	svcvs	0x00003165
     80c:	646f6370 	strbtvs	r6, [pc], #-880	; 814 <__Vectors_Size+0x54>
     810:	73003265 	movwvc	r3, #613	; 0x265
     814:	6b636174 	blvs	18d8dec <__RAM_SIZE+0x17d8dec>
     818:	6172665f 	cmnvs	r2, pc, asr r6
     81c:	6d5f656d 	cfldr64vs	mvdx6, [pc, #-436]	; 670 <__STACKSEAL_SIZE+0x670>
     820:	61756e61 	cmnvs	r5, r1, ror #28
     824:	7473006c 	ldrbtvc	r0, [r3], #-108	; 0xffffff94
     828:	5f6b6361 	svcpl	0x006b6361
     82c:	6d617266 	sfmvs	f7, 2, [r1, #-408]!	; 0xfffffe68
     830:	74730065 	ldrbtvc	r0, [r3], #-101	; 0xffffff9b
     834:	5f6b6361 	svcpl	0x006b6361
     838:	6d617266 	sfmvs	f7, 2, [r1, #-408]!	; 0xfffffe68
     83c:	78655f65 	stmdavc	r5!, {r0, r2, r5, r6, r8, r9, sl, fp, ip, lr}^
     840:	74706563 	ldrbtvc	r6, [r0], #-1379	; 0xfffffa9d
     844:	6600745f 			; <UNDEFINED> instruction: 0x6600745f
     848:	616d5f64 	cmnvs	sp, r4, ror #30
     84c:	735f6e69 	cmpvc	pc, #1680	; 0x690
     850:	6b636174 	blvs	18d8e28 <__RAM_SIZE+0x17d8e28>
     854:	7361625f 	cmnvc	r1, #-268435451	; 0xf0000005
     858:	2e2e0065 	cdpcs	0, 2, cr0, cr14, cr5, {3}
     85c:	2f2e2e2f 	svccs	0x002e2e2f
     860:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 7b0 <__STACKSEAL_SIZE+0x7b0>
     864:	74756269 	ldrbtvc	r6, [r5], #-617	; 0xfffffd97
     868:	2f736c69 	svccs	0x00736c69
     86c:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
     870:	75642d74 	strbvc	r2, [r4, #-3444]!	; 0xfffff28c
     874:	732f706d 			; <UNDEFINED> instruction: 0x732f706d
     878:	662f6372 			; <UNDEFINED> instruction: 0x662f6372
     87c:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
     880:	6d75642d 	cfldrdvs	mvd6, [r5, #-180]!	; 0xffffff4c
     884:	00632e70 	rsbeq	r2, r3, r0, ror lr
     888:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
     88c:	75645f74 	strbvc	r5, [r4, #-3956]!	; 0xfffff08c
     890:	685f706d 	ldmdavs	pc, {r0, r2, r3, r5, r6, ip, sp, lr}^	; <UNPREDICTABLE>
     894:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
     898:	66007265 	strvs	r7, [r0], -r5, ror #4
     89c:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
     8a0:	6d75645f 	cfldrdvs	mvd6, [r5, #-380]!	; 0xfffffe84
     8a4:	78655f70 	stmdavc	r5!, {r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     8a8:	65725f63 	ldrbvs	r5, [r2, #-3939]!	; 0xfffff09d
     8ac:	6e727574 	mrcvs	5, 3, r7, cr2, cr4, {3}
     8b0:	74735f00 	ldrbtvc	r5, [r3], #-3840	; 0xfffff100
     8b4:	00747865 	rsbseq	r7, r4, r5, ror #16
     8b8:	65675f5f 	strbvs	r5, [r7, #-3935]!	; 0xfffff0a1
     8bc:	534d5f74 	movtpl	r5, #57204	; 0xdf74
     8c0:	74730050 	ldrbtvc	r0, [r3], #-80	; 0xffffffb0
     8c4:	5f6b6361 	svcpl	0x006b6361
     8c8:	6d617266 	sfmvs	f7, 2, [r1, #-408]!	; 0xfffffe68
     8cc:	78655f65 	stmdavc	r5!, {r0, r2, r5, r6, r8, r9, sl, fp, ip, lr}^
     8d0:	74706563 	ldrbtvc	r6, [r0], #-1379	; 0xfffffa9d
     8d4:	74655f00 	strbtvc	r5, [r5], #-3840	; 0xfffff100
     8d8:	00747865 	rsbseq	r7, r4, r5, ror #16
     8dc:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
     8e0:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
     8e4:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
     8e8:	6c697475 	cfstrdvs	mvd7, [r9], #-468	; 0xfffffe2c
     8ec:	61662f73 	smcvs	25331	; 0x62f3
     8f0:	2d746c75 	ldclcs	12, cr6, [r4, #-468]!	; 0xfffffe2c
     8f4:	706d7564 	rsbvc	r7, sp, r4, ror #10
     8f8:	7570632f 	ldrbvc	r6, [r0, #-815]!	; 0xfffffcd1
     8fc:	726f632f 	rsbvc	r6, pc, #-1140850688	; 0xbc000000
     900:	2d786574 	cfldr64cs	mvdx6, [r8, #-464]!	; 0xfffffe30
     904:	2f33336d 	svccs	0x0033336d
     908:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
     90c:	61682d74 	smcvs	33492	; 0x82d4
     910:	00632e6c 	rsbeq	r2, r3, ip, ror #28
     914:	6f437670 	svcvs	0x00437670
     918:	6961746e 	stmdbvs	r1!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
     91c:	0072656e 	rsbseq	r6, r2, lr, ror #10
     920:	6b636954 	blvs	18dae78 <__RAM_SIZE+0x17dae78>
     924:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
     928:	7800745f 	stmdavc	r0, {r0, r1, r2, r3, r4, r6, sl, ip, sp, lr}
     92c:	6d657449 	cfstrdvs	mvd7, [r5, #-292]!	; 0xfffffedc
     930:	756c6156 	strbvc	r6, [ip, #-342]!	; 0xfffffeaa
     934:	4c780065 	ldclmi	0, cr0, [r8], #-404	; 0xfffffe6c
     938:	45747369 	ldrbmi	r7, [r4, #-873]!	; 0xfffffc97
     93c:	7000646e 	andvc	r6, r0, lr, ror #8
     940:	6e774f76 	mrcvs	15, 3, r4, cr7, cr6, {3}
     944:	78007265 	stmdavc	r0, {r0, r2, r5, r6, r9, ip, sp, lr}
     948:	5453494c 	ldrbpl	r4, [r3], #-2380	; 0xfffff6b4
     94c:	4554495f 	ldrbmi	r4, [r4, #-2399]	; 0xfffff6a1
     950:	7870004d 	ldmdavc	r0!, {r0, r2, r3, r6}^
     954:	6d657449 	cfstrdvs	mvd7, [r5, #-292]!	; 0xfffffedc
     958:	65526f54 	ldrbvs	r6, [r2, #-3924]	; 0xfffff0ac
     95c:	65766f6d 	ldrbvs	r6, [r6, #-3949]!	; 0xfffff093
     960:	694c7600 	stmdbvs	ip, {r9, sl, ip, sp, lr}^
     964:	6e497473 	mcrvs	4, 2, r7, cr9, cr3, {3}
     968:	61697469 	cmnvs	r9, r9, ror #8
     96c:	6573696c 	ldrbvs	r6, [r3, #-2412]!	; 0xfffff694
     970:	6d657449 	cfstrdvs	mvd7, [r5, #-292]!	; 0xfffffedc
     974:	4e787500 	cdpmi	5, 7, cr7, cr8, cr0, {0}
     978:	65626d75 	strbvs	r6, [r2, #-3445]!	; 0xfffff28b
     97c:	49664f72 	stmdbmi	r6!, {r1, r4, r5, r6, r8, r9, sl, fp, lr}^
     980:	736d6574 	cmnvc	sp, #116, 10	; 0x1d000000
     984:	694c7600 	stmdbvs	ip, {r9, sl, ip, sp, lr}^
     988:	6e497473 	mcrvs	4, 2, r7, cr9, cr3, {3}
     98c:	74726573 	ldrbtvc	r6, [r2], #-1395	; 0xfffffa8d
     990:	00646e45 	rsbeq	r6, r4, r5, asr #28
     994:	654e7870 	strbvs	r7, [lr, #-2160]	; 0xfffff790
     998:	76007478 			; <UNDEFINED> instruction: 0x76007478
     99c:	7473694c 	ldrbtvc	r6, [r3], #-2380	; 0xfffff6b4
     9a0:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xfffff1b7
     9a4:	696c6169 	stmdbvs	ip!, {r0, r3, r5, r6, r8, sp, lr}^
     9a8:	78006573 	stmdavc	r0, {r0, r1, r4, r5, r6, r8, sl, sp, lr}
     9ac:	756c6156 	strbvc	r6, [ip, #-342]!	; 0xfffffeaa
     9b0:	49664f65 	stmdbmi	r6!, {r0, r2, r5, r6, r8, r9, sl, fp, lr}^
     9b4:	7265736e 	rsbvc	r7, r5, #-1207959551	; 0xb8000001
     9b8:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
     9bc:	49787000 	ldmdbmi	r8!, {ip, sp, lr}^
     9c0:	006d6574 	rsbeq	r6, sp, r4, ror r5
     9c4:	73614255 	cmnvc	r1, #1342177285	; 0x50000005
     9c8:	70795465 	rsbsvc	r5, r9, r5, ror #8
     9cc:	00745f65 	rsbseq	r5, r4, r5, ror #30
     9d0:	74497870 	strbvc	r7, [r9], #-2160	; 0xfffff790
     9d4:	74617265 	strbtvc	r7, [r1], #-613	; 0xfffffd9b
     9d8:	7000726f 	andvc	r7, r0, pc, ror #4
     9dc:	646e4978 	strbtvs	r4, [lr], #-2424	; 0xfffff688
     9e0:	70007865 	andvc	r7, r0, r5, ror #16
     9e4:	65725078 	ldrbvs	r5, [r2, #-120]!	; 0xffffff88
     9e8:	756f6976 	strbvc	r6, [pc, #-2422]!	; 7a <__STACKSEAL_SIZE+0x7a>
     9ec:	2e2e0073 	mcrcs	0, 1, r0, cr14, cr3, {3}
     9f0:	2f2e2e2f 	svccs	0x002e2e2f
     9f4:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 944 <__Vectors_Size+0x184>
     9f8:	74726269 	ldrbtvc	r6, [r2], #-617	; 0xfffffd97
     9fc:	462f736f 	strtmi	r7, [pc], -pc, ror #6
     a00:	52656572 	rsbpl	r6, r5, #478150656	; 0x1c800000
     a04:	2f534f54 	svccs	0x00534f54
     a08:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
     a0c:	7000632e 	andvc	r6, r0, lr, lsr #6
     a10:	73694c78 	cmnvc	r9, #120, 24	; 0x7800
     a14:	4c780074 	ldclmi	0, cr0, [r8], #-464	; 0xfffffe30
     a18:	00545349 	subseq	r5, r4, r9, asr #6
     a1c:	694c7875 	stmdbvs	ip, {r0, r2, r4, r5, r6, fp, ip, sp, lr}^
     a20:	65527473 	ldrbvs	r7, [r2, #-1139]	; 0xfffffb8d
     a24:	65766f6d 	ldrbvs	r6, [r6, #-3949]!	; 0xfffff093
     a28:	4e787000 	cdpmi	0, 7, cr7, cr8, cr0, {0}
     a2c:	694c7765 	stmdbvs	ip, {r0, r2, r5, r6, r8, r9, sl, ip, sp, lr}^
     a30:	74497473 	strbvc	r7, [r9], #-1139	; 0xfffffb8d
     a34:	76006d65 	strvc	r6, [r0], -r5, ror #26
     a38:	7473694c 	ldrbtvc	r6, [r3], #-2380	; 0xfffff6b4
     a3c:	65736e49 	ldrbvs	r6, [r3, #-3657]!	; 0xfffff1b7
     a40:	76007472 			; <UNDEFINED> instruction: 0x76007472
     a44:	74726f50 	ldrbtvc	r6, [r2], #-3920	; 0xfffff0b0
     a48:	74697845 	strbtvc	r7, [r9], #-2117	; 0xfffff7bb
     a4c:	74697243 	strbtvc	r7, [r9], #-579	; 0xfffffdbd
     a50:	6c616369 	stclvs	3, cr6, [r1], #-420	; 0xfffffe5c
     a54:	76727000 	ldrbtvc	r7, [r2], -r0
     a58:	69746f4e 	ldmdbvs	r4!, {r1, r2, r3, r6, r8, r9, sl, fp, sp, lr}^
     a5c:	75517966 	ldrbvc	r7, [r1, #-2406]	; 0xfffff69a
     a60:	53657565 	cmnpl	r5, #423624704	; 0x19400000
     a64:	6f437465 	svcvs	0x00437465
     a68:	6961746e 	stmdbvs	r1!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
     a6c:	0072656e 	rsbseq	r6, r2, lr, ror #10
     a70:	616d6553 	cmnvs	sp, r3, asr r5
     a74:	726f6870 	rsbvc	r6, pc, #112, 16	; 0x700000
     a78:	74614465 	strbtvc	r4, [r1], #-1125	; 0xfffffb9b
     a7c:	50760061 	rsbspl	r0, r6, r1, rrx
     a80:	5974726f 	ldmdbpl	r4!, {r0, r1, r2, r3, r5, r6, r9, ip, sp, lr}^
     a84:	646c6569 	strbtvs	r6, [ip], #-1385	; 0xfffffa97
     a88:	6d655300 	stclvs	3, cr5, [r5, #-0]
     a8c:	6f687061 	svcvs	0x00687061
     a90:	61446572 	hvcvs	18002	; 0x4652
     a94:	745f6174 	ldrbvc	r6, [pc], #-372	; a9c <__Vectors_Size+0x2dc>
     a98:	75517800 	ldrbvc	r7, [r1, #-2048]	; 0xfffff800
     a9c:	47657565 	strbmi	r7, [r5, -r5, ror #10]!
     aa0:	72656e65 	rsbvc	r6, r5, #1616	; 0x650
     aa4:	65476369 	strbvs	r6, [r7, #-873]	; 0xfffffc97
     aa8:	61745374 	cmnvs	r4, r4, ror r3
     aac:	42636974 	rsbmi	r6, r3, #116, 18	; 0x1d0000
     ab0:	65666675 	strbvs	r6, [r6, #-1653]!	; 0xfffff98b
     ab4:	78007372 	stmdavc	r0, {r1, r4, r5, r6, r8, r9, ip, sp, lr}
     ab8:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
     abc:	63655265 	cmnvs	r5, #1342177286	; 0x50000006
     ac0:	65766965 	ldrbvs	r6, [r6, #-2405]!	; 0xfffff69b
     ac4:	75517800 	ldrbvc	r7, [r1, #-2048]	; 0xfffff800
     ac8:	52657565 	rsbpl	r7, r5, #423624704	; 0x19400000
     acc:	69656365 	stmdbvs	r5!, {r0, r2, r5, r6, r8, r9, sp, lr}^
     ad0:	72466576 	subvc	r6, r6, #494927872	; 0x1d800000
     ad4:	53496d6f 	movtpl	r6, #40303	; 0x9d6f
     ad8:	54780052 	ldrbtpl	r0, [r8], #-82	; 0xffffffae
     adc:	736b7361 	cmnvc	fp, #-2080374783	; 0x84000001
     ae0:	74696157 	strbtvc	r6, [r9], #-343	; 0xfffffea9
     ae4:	54676e69 	strbtpl	r6, [r7], #-3689	; 0xfffff197
     ae8:	6365526f 	cmnvs	r5, #-268435450	; 0xf0000006
     aec:	65766965 	ldrbvs	r6, [r6, #-2405]!	; 0xfffff69b
     af0:	48787000 	ldmdami	r8!, {ip, sp, lr}^
     af4:	65686769 	strbvs	r6, [r8, #-1897]!	; 0xfffff897
     af8:	69725072 	ldmdbvs	r2!, {r1, r4, r5, r6, ip, lr}^
     afc:	7469726f 	strbtvc	r7, [r9], #-623	; 0xfffffd91
     b00:	73615479 	cmnvc	r1, #2030043136	; 0x79000000
     b04:	6b6f576b 	blvs	1bd68b8 <__RAM_SIZE+0x1ad68b8>
     b08:	70006e65 	andvc	r6, r0, r5, ror #28
     b0c:	74754d78 	ldrbtvc	r4, [r5], #-3448	; 0xfffff288
     b10:	78007865 	stmdavc	r0, {r0, r2, r5, r6, fp, ip, sp, lr}
     b14:	454d4954 	strbmi	r4, [sp, #-2388]	; 0xfffff6ac
     b18:	54554f5f 	ldrbpl	r4, [r5], #-3935	; 0xfffff0a1
     b1c:	75517800 	ldrbvc	r7, [r1, #-2048]	; 0xfffff800
     b20:	54657565 	strbtpl	r7, [r5], #-1381	; 0xfffffa9b
     b24:	4d656b61 	fstmdbxmi	r5!, {d22-d69}	;@ Deprecated
     b28:	78657475 	stmdavc	r5!, {r0, r2, r4, r5, r6, sl, ip, sp, lr}^
     b2c:	75636552 	strbvc	r6, [r3, #-1362]!	; 0xfffffaae
     b30:	76697372 			; <UNDEFINED> instruction: 0x76697372
     b34:	51780065 	cmnpl	r8, r5, rrx
     b38:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
     b3c:	656c6553 	strbvs	r6, [ip, #-1363]!	; 0xfffffaad
     b40:	72467463 	subvc	r7, r6, #1660944384	; 0x63000000
     b44:	65536d6f 	ldrbvs	r6, [r3, #-3439]	; 0xfffff291
     b48:	6f724674 	svcvs	0x00724674
     b4c:	5253496d 	subspl	r4, r3, #1785856	; 0x1b4000
     b50:	75517800 	ldrbvc	r7, [r1, #-2048]	; 0xfffff800
     b54:	47657565 	strbmi	r7, [r5, -r5, ror #10]!
     b58:	72656e65 	rsbvc	r6, r5, #1616	; 0x650
     b5c:	65536369 	ldrbvs	r6, [r3, #-873]	; 0xfffffc97
     b60:	7246646e 	subvc	r6, r6, #1845493760	; 0x6e000000
     b64:	53496d6f 	movtpl	r6, #40303	; 0x9d6f
     b68:	74530052 	ldrbvc	r0, [r3], #-82	; 0xffffffae
     b6c:	63697461 	cmnvs	r9, #1627389952	; 0x61000000
     b70:	696e694d 	stmdbvs	lr!, {r0, r2, r3, r6, r8, fp, sp, lr}^
     b74:	7473694c 	ldrbtvc	r6, [r3], #-2380	; 0xfffff6b4
     b78:	6d657449 	cfstrdvs	mvd7, [r5, #-292]!	; 0xfffffedc
     b7c:	7800745f 	stmdavc	r0, {r0, r1, r2, r3, r4, r6, sl, ip, sp, lr}
     b80:	74696157 	strbtvc	r6, [r9], #-343	; 0xfffffea9
     b84:	65646e49 	strbvs	r6, [r4, #-3657]!	; 0xfffff1b7
     b88:	696e6966 	stmdbvs	lr!, {r1, r2, r5, r6, r8, fp, sp, lr}^
     b8c:	796c6574 	stmdbvc	ip!, {r2, r4, r5, r6, r8, sl, sp, lr}^
     b90:	61547800 	cmpvs	r4, r0, lsl #16
     b94:	57736b73 			; <UNDEFINED> instruction: 0x57736b73
     b98:	69746961 	ldmdbvs	r4!, {r0, r5, r6, r8, fp, sp, lr}^
     b9c:	6f54676e 	svcvs	0x0054676e
     ba0:	646e6553 	strbtvs	r6, [lr], #-1363	; 0xfffffaad
     ba4:	51787500 	cmnpl	r8, r0, lsl #10
     ba8:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
     bac:	63617053 	cmnvs	r1, #83	; 0x53
     bb0:	76417365 	strbvc	r7, [r1], -r5, ror #6
     bb4:	616c6961 	cmnvs	ip, r1, ror #18
     bb8:	00656c62 	rsbeq	r6, r5, r2, ror #24
     bbc:	4c785463 	cfldrdmi	mvd5, [r8], #-396	; 0xfffffe74
     bc0:	006b636f 	rsbeq	r6, fp, pc, ror #6
     bc4:	65764f78 	ldrbvs	r4, [r6, #-3960]!	; 0xfffff088
     bc8:	6f6c6672 	svcvs	0x006c6672
     bcc:	756f4377 	strbvc	r4, [pc, #-887]!	; 85d <__Vectors_Size+0x9d>
     bd0:	7600746e 	strvc	r7, [r0], -lr, ror #8
     bd4:	74726f50 	ldrbtvc	r6, [r2], #-3920	; 0xfffff0b0
     bd8:	65746e45 	ldrbvs	r6, [r4, #-3653]!	; 0xfffff1bb
     bdc:	69724372 	ldmdbvs	r2!, {r1, r4, r5, r6, r8, r9, lr}^
     be0:	61636974 	smcvs	13972	; 0x3694
     be4:	5f5f006c 	svcpl	0x005f006c
     be8:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	; 0xfffffe78
     bec:	5f6e6974 	svcpl	0x006e6974
     bf0:	636d656d 	cmnvs	sp, #457179136	; 0x1b400000
     bf4:	78007970 	stmdavc	r0, {r4, r5, r6, r8, fp, ip, sp, lr}
     bf8:	79706f43 	ldmdbvc	r0!, {r0, r1, r6, r8, r9, sl, fp, sp, lr}^
     bfc:	69736f50 	ldmdbvs	r3!, {r4, r6, r8, r9, sl, fp, sp, lr}^
     c00:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
     c04:	52787500 	rsbspl	r7, r8, #0, 10
     c08:	72757465 	rsbsvc	r7, r5, #1694498816	; 0x65000000
     c0c:	5176006e 	cmnpl	r6, lr, rrx
     c10:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
     c14:	656c6544 	strbvs	r6, [ip, #-1348]!	; 0xfffffabc
     c18:	70006574 	andvc	r6, r0, r4, ror r5
     c1c:	61655263 	cmnvs	r5, r3, ror #4
     c20:	6f724664 	svcvs	0x00724664
     c24:	7875006d 	ldmdavc	r5!, {r0, r2, r3, r5, r6}^
     c28:	65766153 	ldrbvs	r6, [r6, #-339]!	; 0xfffffead
     c2c:	746e4964 	strbtvc	r4, [lr], #-2404	; 0xfffff69c
     c30:	75727265 	ldrbvc	r7, [r2, #-613]!	; 0xfffffd9b
     c34:	74537470 	ldrbvc	r7, [r3], #-1136	; 0xfffffb90
     c38:	73757461 	cmnvc	r5, #1627389952	; 0x61000000
     c3c:	76727000 	ldrbtvc	r7, [r2], -r0
     c40:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xfffff1b7
     c44:	696c6169 	stmdbvs	ip!, {r0, r3, r5, r6, r8, sp, lr}^
     c48:	654e6573 	strbvs	r6, [lr, #-1395]	; 0xfffffa8d
     c4c:	65755177 	ldrbvs	r5, [r5, #-375]!	; 0xfffffe89
     c50:	75006575 	strvc	r6, [r0, #-1397]	; 0xfffffa8b
     c54:	74754d78 	ldrbtvc	r4, [r5], #-3448	; 0xfffff288
     c58:	69537865 	ldmdbvs	r3, {r0, r2, r5, r6, fp, ip, sp, lr}^
     c5c:	7800657a 	stmdavc	r0, {r1, r3, r4, r5, r6, r8, sl, sp, lr}
     c60:	6c656959 			; <UNDEFINED> instruction: 0x6c656959
     c64:	71655264 	cmnvc	r5, r4, ror #4
     c68:	65726975 	ldrbvs	r6, [r2, #-2421]!	; 0xfffff68b
     c6c:	78700064 	ldmdavc	r0!, {r2, r5, r6}^
     c70:	5177654e 	cmnpl	r7, lr, asr #10
     c74:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
     c78:	65755100 	ldrbvs	r5, [r5, #-256]!	; 0xffffff00
     c7c:	65446575 	strbvs	r6, [r4, #-1397]	; 0xfffffa8b
     c80:	696e6966 	stmdbvs	lr!, {r1, r2, r5, r6, r8, fp, sp, lr}^
     c84:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
     c88:	6c437600 	mcrrvs	6, 0, r7, r3, cr0
     c8c:	49726165 	ldmdbmi	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     c90:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
     c94:	74707572 	ldrbtvc	r7, [r0], #-1394	; 0xfffffa8e
     c98:	6b73614d 	blvs	1cd91d4 <__RAM_SIZE+0x1bd91d4>
     c9c:	76727000 	ldrbtvc	r7, [r2], -r0
     ca0:	75517349 	ldrbvc	r7, [r1, #-841]	; 0xfffffcb7
     ca4:	45657565 	strbmi	r7, [r5, #-1381]!	; 0xfffffa9b
     ca8:	7974706d 	ldmdbvc	r4!, {r0, r2, r3, r5, r6, ip, sp, lr}^
     cac:	42767000 	rsbsmi	r7, r6, #0
     cb0:	65666675 	strbvs	r6, [r6, #-1653]!	; 0xfffff98b
     cb4:	72700072 	rsbsvc	r0, r0, #114	; 0x72
     cb8:	74654776 	strbtvc	r4, [r5], #-1910	; 0xfffff88a
     cbc:	69736944 	ldmdbvs	r3!, {r2, r6, r8, fp, sp, lr}^
     cc0:	7265686e 	rsbvc	r6, r5, #7208960	; 0x6e0000
     cc4:	72507469 	subsvc	r7, r0, #1761607680	; 0x69000000
     cc8:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
     ccc:	66417974 			; <UNDEFINED> instruction: 0x66417974
     cd0:	54726574 	ldrbtpl	r6, [r2], #-1396	; 0xfffffa8c
     cd4:	6f656d69 	svcvs	0x00656d69
     cd8:	75007475 	strvc	r7, [r0, #-1141]	; 0xfffffb8b
     cdc:	73654d78 	cmnvc	r5, #120, 26	; 0x1e00
     ce0:	65676173 	strbvs	r6, [r7, #-371]!	; 0xfffffe8d
     ce4:	69615773 	stmdbvs	r1!, {r0, r1, r4, r5, r6, r8, r9, sl, ip, lr}^
     ce8:	676e6974 			; <UNDEFINED> instruction: 0x676e6974
     cec:	65537800 	ldrbvs	r7, [r3, #-2048]	; 0xfffff800
     cf0:	6870616d 	ldmdavs	r0!, {r0, r2, r3, r5, r6, r8, sp, lr}^
     cf4:	0065726f 	rsbeq	r7, r5, pc, ror #4
     cf8:	6f507670 	svcvs	0x00507670
     cfc:	614d7472 	hvcvs	55106	; 0xd742
     d00:	636f6c6c 	cmnvs	pc, #108, 24	; 0x6c00
     d04:	54787500 	ldrbtpl	r7, [r8], #-1280	; 0xfffffb00
     d08:	476b7361 	strbmi	r7, [fp, -r1, ror #6]!
     d0c:	754e7465 	strbvc	r7, [lr, #-1125]	; 0xfffffb9b
     d10:	7265626d 	rsbvc	r6, r5, #-805306362	; 0xd0000006
     d14:	6154664f 	cmpvs	r4, pc, asr #12
     d18:	00736b73 	rsbseq	r6, r3, r3, ror fp
     d1c:	73615476 	cmnvc	r1, #1979711488	; 0x76000000
     d20:	7375536b 	cmnvc	r5, #-1409286143	; 0xac000001
     d24:	646e6570 	strbtvs	r6, [lr], #-1392	; 0xfffffa90
     d28:	006c6c41 	rsbeq	r6, ip, r1, asr #24
     d2c:	65755178 	ldrbvs	r5, [r5, #-376]!	; 0xfffffe88
     d30:	65506575 	ldrbvs	r6, [r0, #-1397]	; 0xfffffa8b
     d34:	78006b65 	stmdavc	r0, {r0, r2, r5, r6, r8, r9, fp, sp, lr}
     d38:	72746e45 	rsbsvc	r6, r4, #1104	; 0x450
     d3c:	6d695479 	cfstrdvs	mvd5, [r9, #-484]!	; 0xfffffe1c
     d40:	74655365 	strbtvc	r5, [r5], #-869	; 0xfffffc9b
     d44:	61487800 	cmpvs	r8, r0, lsl #16
     d48:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
     d4c:	65755100 	ldrbvs	r5, [r5, #-256]!	; 0xffffff00
     d50:	65536575 	ldrbvs	r6, [r3, #-1397]	; 0xfffffa8b
     d54:	6d654d74 	stclvs	13, cr4, [r5, #-464]!	; 0xfffffe30
     d58:	48726562 	ldmdami	r2!, {r1, r5, r6, r8, sl, sp, lr}^
     d5c:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
     d60:	00745f65 	rsbseq	r5, r4, r5, ror #30
     d64:	6e497875 	mcrvs	8, 2, r7, cr9, cr5, {3}
     d68:	61697469 	cmnvs	r9, r9, ror #8
     d6c:	756f436c 	strbvc	r4, [pc, #-876]!	; a08 <__Vectors_Size+0x248>
     d70:	7000746e 	andvc	r7, r0, lr, ror #8
     d74:	51637570 	smcpl	14160	; 0x3750
     d78:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
     d7c:	726f7453 	rsbvc	r7, pc, #1392508928	; 0x53000000
     d80:	00656761 	rsbeq	r6, r5, r1, ror #14
     d84:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
     d88:	74655365 	strbtvc	r5, [r5], #-869	; 0xfffffc9b
     d8c:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
     d90:	745f656c 	ldrbvc	r6, [pc], #-1388	; d98 <__Vectors_Size+0x5d8>
     d94:	75517800 	ldrbvc	r7, [r1, #-2048]	; 0xfffff800
     d98:	53657565 	cmnpl	r5, #423624704	; 0x19400000
     d9c:	70616d65 	rsbvc	r6, r1, r5, ror #26
     da0:	65726f68 	ldrbvs	r6, [r2, #-3944]!	; 0xfffff098
     da4:	656b6154 	strbvs	r6, [fp, #-340]!	; 0xfffffeac
     da8:	44767000 	ldrbtmi	r7, [r6], #-0
     dac:	796d6d75 	stmdbvc	sp!, {r0, r2, r4, r5, r6, r8, sl, fp, sp, lr}^
     db0:	76700031 			; <UNDEFINED> instruction: 0x76700031
     db4:	6d6d7544 	cfstr64vs	mvdx7, [sp, #-272]!	; 0xfffffef0
     db8:	70003279 	andvc	r3, r0, r9, ror r2
     dbc:	6d754476 	cfldrdvs	mvd4, [r5, #-472]!	; 0xfffffe28
     dc0:	0033796d 	eorseq	r7, r3, sp, ror #18
     dc4:	75447875 	strbvc	r7, [r4, #-2165]	; 0xfffff78b
     dc8:	32796d6d 	rsbscc	r6, r9, #6976	; 0x1b40
     dcc:	44767000 	ldrbtmi	r7, [r6], #-0
     dd0:	796d6d75 	stmdbvc	sp!, {r0, r2, r4, r5, r6, r8, sl, fp, sp, lr}^
     dd4:	78750037 	ldmdavc	r5!, {r0, r1, r2, r4, r5}^
     dd8:	6d6d7544 	cfstr64vs	mvdx7, [sp, #-272]!	; 0xfffffef0
     ddc:	70003479 	andvc	r3, r0, r9, ror r4
     de0:	6f437672 	svcvs	0x00437672
     de4:	61447970 	hvcvs	18320	; 0x4790
     de8:	6f546174 	svcvs	0x00546174
     dec:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
     df0:	51780065 	cmnpl	r8, r5, rrx
     df4:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
     df8:	656e6547 	strbvs	r6, [lr, #-1351]!	; 0xfffffab9
     dfc:	53636972 	cmnpl	r3, #1867776	; 0x1c8000
     e00:	00646e65 	rsbeq	r6, r4, r5, ror #28
     e04:	74536375 	ldrbvc	r6, [r3], #-885	; 0xfffffc8b
     e08:	63697461 	cmnvs	r9, #1627389952	; 0x61000000
     e0c:	796c6c61 	stmdbvc	ip!, {r0, r5, r6, sl, fp, sp, lr}^
     e10:	6f6c6c41 	svcvs	0x006c6c41
     e14:	65746163 	ldrbvs	r6, [r4, #-355]!	; 0xfffffe9d
     e18:	54760064 	ldrbtpl	r0, [r6], #-100	; 0xffffff9c
     e1c:	506b7361 	rsbpl	r7, fp, r1, ror #6
     e20:	6563616c 	strbvs	r6, [r3, #-364]!	; 0xfffffe94
     e24:	76456e4f 	strbvc	r6, [r5], -pc, asr #28
     e28:	4c746e65 	ldclmi	14, cr6, [r4], #-404	; 0xfffffe6c
     e2c:	00747369 	rsbseq	r7, r4, r9, ror #6
     e30:	61547670 	cmpvs	r4, r0, ror r6
     e34:	6e496b73 	vmovvs.8	d9[3], r6
     e38:	6d657263 	sfmvs	f7, 2, [r5, #-396]!	; 0xfffffe74
     e3c:	4d746e65 	ldclmi	14, cr6, [r4, #-404]!	; 0xfffffe6c
     e40:	78657475 	stmdavc	r5!, {r0, r2, r4, r5, r6, sl, ip, sp, lr}^
     e44:	646c6548 	strbtvs	r6, [ip], #-1352	; 0xfffffab8
     e48:	6e756f43 	cdpvs	15, 7, cr6, cr5, cr3, {2}
     e4c:	2e2e0074 	mcrcs	0, 1, r0, cr14, cr4, {3}
     e50:	2f2e2e2f 	svccs	0x002e2e2f
     e54:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; da4 <__Vectors_Size+0x5e4>
     e58:	74726269 	ldrbtvc	r6, [r2], #-617	; 0xfffffd97
     e5c:	462f736f 	strtmi	r7, [pc], -pc, ror #6
     e60:	52656572 	rsbpl	r6, r5, #478150656	; 0x1c800000
     e64:	2f534f54 	svccs	0x00534f54
     e68:	75657571 	strbvc	r7, [r5, #-1393]!	; 0xfffffa8f
     e6c:	00632e65 	rsbeq	r2, r3, r5, ror #28
     e70:	74497875 	strbvc	r7, [r9], #-2165	; 0xfffff78b
     e74:	69536d65 	ldmdbvs	r3, {r0, r2, r5, r6, r8, sl, fp, sp, lr}^
     e78:	7500657a 	strvc	r6, [r0, #-1402]	; 0xfffffa86
     e7c:	65755178 	ldrbvs	r5, [r5, #-376]!	; 0xfffffe88
     e80:	654d6575 	strbvs	r6, [sp, #-1397]	; 0xfffffa8b
     e84:	67617373 			; <UNDEFINED> instruction: 0x67617373
     e88:	61577365 	cmpvs	r7, r5, ror #6
     e8c:	6e697469 	cdpvs	4, 6, cr7, cr9, cr9, {3}
     e90:	6f724667 	svcvs	0x00724667
     e94:	5253496d 	subspl	r4, r3, #1785856	; 0x1b4000
     e98:	50787500 	rsbspl	r7, r8, r0, lsl #10
     e9c:	69766572 	ldmdbvs	r6!, {r1, r4, r5, r6, r8, sl, sp, lr}^
     ea0:	4d73756f 	cfldr64mi	mvdx7, [r3, #-444]!	; 0xfffffe44
     ea4:	61737365 	cmnvs	r3, r5, ror #6
     ea8:	57736567 	ldrbpl	r6, [r3, -r7, ror #10]!
     eac:	69746961 	ldmdbvs	r4!, {r0, r5, r6, r8, fp, sp, lr}^
     eb0:	7800676e 	stmdavc	r0, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}
     eb4:	6b736154 	blvs	1cd940c <__RAM_SIZE+0x1bd940c>
     eb8:	6f697250 	svcvs	0x00697250
     ebc:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
     ec0:	69736944 	ldmdbvs	r3!, {r2, r6, r8, fp, sp, lr}^
     ec4:	7265686e 	rsbvc	r6, r5, #7208960	; 0x6e0000
     ec8:	75007469 	strvc	r7, [r0, #-1129]	; 0xfffffb97
     ecc:	74754d78 	ldrbtvc	r4, [r5], #-3448	; 0xfffff288
     ed0:	654c7865 	strbvs	r7, [ip, #-2149]	; 0xfffff79b
     ed4:	6874676e 	ldmdavs	r4!, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}^
     ed8:	76727000 	ldrbtvc	r7, [r2], -r0
     edc:	75517349 	ldrbvc	r7, [r1, #-841]	; 0xfffffcb7
     ee0:	46657565 	strbtmi	r7, [r5], -r5, ror #10
     ee4:	006c6c75 	rsbeq	r6, ip, r5, ror ip
     ee8:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
     eec:	696f5065 	stmdbvs	pc!, {r0, r2, r5, r6, ip, lr}^	; <UNPREDICTABLE>
     ef0:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
     ef4:	51780073 	cmnpl	r8, r3, ror r0
     ef8:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
     efc:	65766947 	ldrbvs	r6, [r6, #-2375]!	; 0xfffff6b9
     f00:	6d6f7246 	sfmvs	f7, 2, [pc, #-280]!	; df0 <__Vectors_Size+0x630>
     f04:	00525349 	subseq	r5, r2, r9, asr #6
     f08:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
     f0c:	6e614865 	cdpvs	8, 6, cr4, cr1, cr5, {3}
     f10:	5f656c64 	svcpl	0x00656c64
     f14:	51780074 	cmnpl	r8, r4, ror r0
     f18:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
     f1c:	00746553 	rsbseq	r6, r4, r3, asr r5
     f20:	73615476 	cmnvc	r1, #1979711488	; 0x76000000
     f24:	616c506b 	cmnvs	ip, fp, rrx
     f28:	6e4f6563 	cdpvs	5, 4, cr6, cr15, cr3, {3}
     f2c:	6e657645 	cdpvs	6, 6, cr7, cr5, cr5, {2}
     f30:	73694c74 	cmnvc	r9, #116, 24	; 0x7400
     f34:	73655274 	cmnvc	r5, #116, 4	; 0x40000007
     f38:	63697274 	cmnvs	r9, #116, 4	; 0x40000007
     f3c:	00646574 	rsbeq	r6, r4, r4, ror r5
     f40:	75517875 	ldrbvc	r7, [r1, #-2165]	; 0xfffff78b
     f44:	47657565 	strbmi	r7, [r5, -r5, ror #10]!
     f48:	75517465 	ldrbvc	r7, [r1, #-1125]	; 0xfffffb9b
     f4c:	4c657565 	cfstr64mi	mvdx7, [r5], #-404	; 0xfffffe6c
     f50:	74676e65 	strbtvc	r6, [r7], #-3685	; 0xfffff19b
     f54:	70700068 	rsbsvc	r0, r0, r8, rrx
     f58:	61745378 	cmnvs	r4, r8, ror r3
     f5c:	51636974 	smcpl	13972	; 0x3694
     f60:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
     f64:	75517800 	ldrbvc	r7, [r1, #-2048]	; 0xfffff800
     f68:	43657565 	cmnmi	r5, #423624704	; 0x19400000
     f6c:	74616572 	strbtvc	r6, [r1], #-1394	; 0xfffffa8e
     f70:	74754d65 	ldrbtvc	r4, [r5], #-3429	; 0xfffff29b
     f74:	74537865 	ldrbvc	r7, [r3], #-2149	; 0xfffff79b
     f78:	63697461 	cmnvs	r9, #1627389952	; 0x61000000
     f7c:	536c7500 	cmnpl	ip, #0, 10
     f80:	6e497465 	cdpvs	4, 4, cr7, cr9, cr5, {3}
     f84:	72726574 	rsbsvc	r6, r2, #116, 10	; 0x1d000000
     f88:	4d747075 	ldclmi	0, cr7, [r4, #-468]!	; 0xfffffe2c
     f8c:	006b7361 	rsbeq	r7, fp, r1, ror #6
     f90:	65755178 	ldrbvs	r5, [r5, #-376]!	; 0xfffffe88
     f94:	65476575 	strbvs	r6, [r7, #-1397]	; 0xfffffa8b
     f98:	6972656e 	ldmdbvs	r2!, {r1, r2, r3, r5, r6, r8, sl, sp, lr}^
     f9c:	65724363 	ldrbvs	r4, [r2, #-867]!	; 0xfffffc9d
     fa0:	00657461 	rsbeq	r7, r5, r1, ror #8
     fa4:	65755178 	ldrbvs	r5, [r5, #-376]!	; 0xfffffe88
     fa8:	72436575 	subvc	r6, r3, #490733568	; 0x1d400000
     fac:	65746165 	ldrbvs	r6, [r4, #-357]!	; 0xfffffe9b
     fb0:	6574754d 	ldrbvs	r7, [r4, #-1357]!	; 0xfffffab3
     fb4:	53780078 	cmnpl	r8, #120	; 0x78
     fb8:	49544154 	ldmdbmi	r4, {r2, r4, r6, r8, lr}^
     fbc:	494c5f43 	stmdbmi	ip, {r0, r1, r6, r8, r9, sl, fp, ip, lr}^
     fc0:	70005453 	andvc	r5, r0, r3, asr r4
     fc4:	6e497672 	mcrvs	6, 2, r7, cr9, cr2, {3}
     fc8:	61697469 	cmnvs	r9, r9, ror #8
     fcc:	6573696c 	ldrbvs	r6, [r3, #-2412]!	; 0xfffff694
     fd0:	6574754d 	ldrbvs	r7, [r4, #-1357]!	; 0xfffffab3
     fd4:	54780078 	ldrbtpl	r0, [r8], #-120	; 0xffffff88
     fd8:	4f656d69 	svcmi	0x00656d69
     fdc:	746e456e 	strbtvc	r4, [lr], #-1390	; 0xfffffa92
     fe0:	6e697265 	cdpvs	2, 6, cr7, cr9, cr5, {3}
     fe4:	74530067 	ldrbvc	r0, [r3], #-103	; 0xffffff99
     fe8:	63697461 	cmnvs	r9, #1627389952	; 0x61000000
     fec:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
     ff0:	00745f65 	rsbseq	r5, r4, r5, ror #30
     ff4:	65755178 	ldrbvs	r5, [r5, #-376]!	; 0xfffffe88
     ff8:	65526575 	ldrbvs	r6, [r2, #-1397]	; 0xfffffa8b
     ffc:	65766f6d 	ldrbvs	r6, [r6, #-3949]!	; 0xfffff093
    1000:	6d6f7246 	sfmvs	f7, 2, [pc, #-280]!	; ef0 <__Vectors_Size+0x730>
    1004:	00746553 	rsbseq	r6, r4, r3, asr r5
    1008:	614d7875 	hvcvs	55173	; 0xd785
    100c:	756f4378 	strbvc	r4, [pc, #-888]!	; c9c <__Vectors_Size+0x4dc>
    1010:	7800746e 	stmdavc	r0, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
    1014:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
    1018:	65724365 	ldrbvs	r4, [r2, #-869]!	; 0xfffffc9b
    101c:	53657461 	cmnpl	r5, #1627389952	; 0x61000000
    1020:	54007465 	strpl	r7, [r0], #-1125	; 0xfffffb9b
    1024:	4f656d69 	svcmi	0x00656d69
    1028:	745f7475 	ldrbvc	r7, [pc], #-1141	; 1030 <__HEAP_SIZE+0x30>
    102c:	61547600 	cmpvs	r4, r0, lsl #12
    1030:	6e496b73 	vmovvs.8	d9[3], r6
    1034:	6e726574 	mrcvs	5, 3, r6, cr2, cr4, {3}
    1038:	65536c61 	ldrbvs	r6, [r3, #-3169]	; 0xfffff39f
    103c:	6d695474 	cfstrdvs	mvd5, [r9, #-464]!	; 0xfffffe30
    1040:	74754f65 	ldrbtvc	r4, [r5], #-3941	; 0xfffff09b
    1044:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
    1048:	63700065 	cmnvs	r0, #101	; 0x65
    104c:	6769724f 	strbvs	r7, [r9, -pc, asr #4]!
    1050:	6c616e69 	stclvs	14, cr6, [r1], #-420	; 0xfffffe5c
    1054:	64616552 	strbtvs	r6, [r1], #-1362	; 0xfffffaae
    1058:	69736f50 	ldmdbvs	r3!, {r4, r6, r8, r9, sl, fp, sp, lr}^
    105c:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    1060:	75517800 	ldrbvc	r7, [r1, #-2048]	; 0xfffff800
    1064:	43657565 	cmnmi	r5, #423624704	; 0x19400000
    1068:	74616572 	strbtvc	r6, [r1], #-1394	; 0xfffffa8e
    106c:	756f4365 	strbvc	r4, [pc, #-869]!	; d0f <__Vectors_Size+0x54f>
    1070:	6e69746e 	cdpvs	4, 6, cr7, cr9, cr14, {3}
    1074:	6d655367 	stclvs	3, cr5, [r5, #-412]!	; 0xfffffe64
    1078:	6f687061 	svcvs	0x00687061
    107c:	74536572 	ldrbvc	r6, [r3], #-1394	; 0xfffffa8e
    1080:	63697461 	cmnvs	r9, #1627389952	; 0x61000000
    1084:	48787500 	ldmdami	r8!, {r8, sl, ip, sp, lr}^
    1088:	65686769 	strbvs	r6, [r8, #-1897]!	; 0xfffff897
    108c:	72507473 	subsvc	r7, r0, #1929379840	; 0x73000000
    1090:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    1094:	664f7974 			; <UNDEFINED> instruction: 0x664f7974
    1098:	74696157 	strbtvc	r6, [r9], #-343	; 0xfffffea9
    109c:	54676e69 	strbtpl	r6, [r7], #-3689	; 0xfffff197
    10a0:	736b7361 	cmnvc	fp, #-2080374783	; 0x84000001
    10a4:	51637500 	cmnpl	r3, r0, lsl #10
    10a8:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
    10ac:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
    10b0:	53787500 	cmnpl	r8, #0, 10
    10b4:	70616d65 	rsbvc	r6, r1, r5, ror #26
    10b8:	65726f68 	ldrbvs	r6, [r2, #-3944]!	; 0xfffff098
    10bc:	6e756f43 	cdpvs	15, 7, cr6, cr5, cr3, {2}
    10c0:	63700074 	cmnvs	r0, #116	; 0x74
    10c4:	74697257 	strbtvc	r7, [r9], #-599	; 0xfffffda9
    10c8:	006f5465 	rsbeq	r5, pc, r5, ror #8
    10cc:	6e695f5f 	mcrvs	15, 3, r5, cr9, cr15, {2}
    10d0:	745f3874 	ldrbvc	r3, [pc], #-2164	; 10d8 <__HEAP_SIZE+0xd8>
    10d4:	51787500 	cmnpl	r8, r0, lsl #10
    10d8:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
    10dc:	676e654c 	strbvs	r6, [lr, -ip, asr #10]!
    10e0:	78006874 	stmdavc	r0, {r2, r4, r5, r6, fp, sp, lr}
    10e4:	65686e49 	strbvs	r6, [r8, #-3657]!	; 0xfffff1b7
    10e8:	61746972 	cmnvs	r4, r2, ror r9
    10ec:	4f65636e 	svcmi	0x0065636e
    10f0:	72756363 	rsbsvc	r6, r5, #-1946157055	; 0x8c000001
    10f4:	00646572 	rsbeq	r6, r4, r2, ror r5
    10f8:	75446375 	strbvc	r6, [r4, #-885]	; 0xfffffc8b
    10fc:	35796d6d 	ldrbcc	r6, [r9, #-3437]!	; 0xfffff293
    1100:	44637500 	strbtmi	r7, [r3], #-1280	; 0xfffffb00
    1104:	796d6d75 	stmdbvc	sp!, {r0, r2, r4, r5, r6, r8, sl, fp, sp, lr}^
    1108:	78750036 	ldmdavc	r5!, {r1, r2, r4, r5}^
    110c:	626d754e 	rsbvs	r7, sp, #327155712	; 0x13800000
    1110:	664f7265 	strbvs	r7, [pc], -r5, ror #4
    1114:	6b736154 	blvs	1cd966c <__RAM_SIZE+0x1bd966c>
    1118:	75510073 	ldrbvc	r0, [r1, #-115]	; 0xffffff8d
    111c:	50657565 	rsbpl	r7, r5, r5, ror #10
    1120:	746e696f 	strbtvc	r6, [lr], #-2415	; 0xfffff691
    1124:	5f737265 	svcpl	0x00737265
    1128:	78750074 	ldmdavc	r5!, {r2, r4, r5, r6}^
    112c:	676e654c 	strbvs	r6, [lr, -ip, asr #10]!
    1130:	76006874 			; <UNDEFINED> instruction: 0x76006874
    1134:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
    1138:	69615765 	stmdbvs	r1!, {r0, r2, r5, r6, r8, r9, sl, ip, lr}^
    113c:	726f4674 	rsbvc	r4, pc, #116, 12	; 0x7400000
    1140:	7373654d 	cmnvc	r3, #322961408	; 0x13400000
    1144:	52656761 	rsbpl	r6, r5, #25427968	; 0x1840000
    1148:	72747365 	rsbsvc	r7, r4, #-1811939327	; 0x94000001
    114c:	65746369 	ldrbvs	r6, [r4, #-873]!	; 0xfffffc97
    1150:	78700064 	ldmdavc	r0!, {r2, r5, r6}^
    1154:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
    1158:	53724f65 	cmnpl	r2, #404	; 0x194
    115c:	70616d65 	rsbvc	r6, r1, r5, ror #26
    1160:	65726f68 	ldrbvs	r6, [r2, #-3944]!	; 0xfffff098
    1164:	75517800 	ldrbvc	r7, [r1, #-2048]	; 0xfffff800
    1168:	53657565 	cmnpl	r5, #423624704	; 0x19400000
    116c:	49657a69 	stmdbmi	r5!, {r0, r3, r5, r6, r9, fp, ip, sp, lr}^
    1170:	7479426e 	ldrbtvc	r4, [r9], #-622	; 0xfffffd92
    1174:	78007365 	stmdavc	r0, {r0, r2, r5, r6, r8, r9, ip, sp, lr}
    1178:	6b736154 	blvs	1cd96d0 <__RAM_SIZE+0x1bd96d0>
    117c:	75736552 	ldrbvc	r6, [r3, #-1362]!	; 0xfffffaae
    1180:	6c41656d 	cfstr64vs	mvdx6, [r1], {109}	; 0x6d
    1184:	7875006c 	ldmdavc	r5!, {r2, r3, r5, r6}^
    1188:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
    118c:	74654765 	strbtvc	r4, [r5], #-1893	; 0xfffff89b
    1190:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
    1194:	65744965 	ldrbvs	r4, [r4, #-2405]!	; 0xfffff69b
    1198:	7a69536d 	bvc	1a55f54 <__RAM_SIZE+0x1955f54>
    119c:	76700065 	ldrbtvc	r0, [r0], -r5, rrx
    11a0:	6d657449 	cfstrdvs	mvd7, [r5, #-292]!	; 0xfffffedc
    11a4:	75516f54 	ldrbvc	r6, [r1, #-3924]	; 0xfffff0ac
    11a8:	00657565 	rsbeq	r7, r5, r5, ror #10
    11ac:	73615478 	cmnvc	r1, #120, 8	; 0x78000000
    11b0:	6568436b 	strbvs	r4, [r8, #-875]!	; 0xfffffc95
    11b4:	6f466b63 	svcvs	0x00466b63
    11b8:	6d695472 	cfstrdvs	mvd5, [r9, #-456]!	; 0xfffffe38
    11bc:	74754f65 	ldrbtvc	r4, [r5], #-3941	; 0xfffff09b
    11c0:	6f507600 	svcvs	0x00507600
    11c4:	72467472 	subvc	r7, r6, #1912602624	; 0x72000000
    11c8:	78006565 	stmdavc	r0, {r0, r2, r5, r6, r8, sl, sp, lr}
    11cc:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
    11d0:	51734965 	cmnpl	r3, r5, ror #18
    11d4:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
    11d8:	6c6c7546 	cfstr64vs	mvdx7, [ip], #-280	; 0xfffffee8
    11dc:	6d6f7246 	sfmvs	f7, 2, [pc, #-280]!	; 10cc <__HEAP_SIZE+0xcc>
    11e0:	00525349 	subseq	r5, r2, r9, asr #6
    11e4:	75517875 	ldrbvc	r7, [r1, #-2165]	; 0xfffff78b
    11e8:	4d657565 	cfstr64mi	mvdx7, [r5, #-404]!	; 0xfffffe6c
    11ec:	61737365 	cmnvs	r3, r5, ror #6
    11f0:	57736567 	ldrbpl	r6, [r3, -r7, ror #10]!
    11f4:	69746961 	ldmdbvs	r4!, {r0, r5, r6, r8, fp, sp, lr}^
    11f8:	7000676e 	andvc	r6, r0, lr, ror #14
    11fc:	69615463 	stmdbvs	r1!, {r0, r1, r5, r6, sl, ip, lr}^
    1200:	5178006c 	cmnpl	r8, ip, rrx
    1204:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
    1208:	656e6547 	strbvs	r6, [lr, #-1351]!	; 0xfffffab9
    120c:	43636972 	cmnmi	r3, #1867776	; 0x1c8000
    1210:	74616572 	strbtvc	r6, [r1], #-1394	; 0xfffffa8e
    1214:	61745365 	cmnvs	r4, r5, ror #6
    1218:	00636974 	rsbeq	r6, r3, r4, ror r9
    121c:	75517870 	ldrbvc	r7, [r1, #-2160]	; 0xfffff790
    1220:	00657565 	rsbeq	r7, r5, r5, ror #10
    1224:	41545378 	cmpmi	r4, r8, ror r3
    1228:	5f434954 	svcpl	0x00434954
    122c:	5453494c 	ldrbpl	r4, [r3], #-2380	; 0xfffff6b4
    1230:	4554495f 	ldrbmi	r4, [r4, #-2399]	; 0xfffff6a1
    1234:	5476004d 	ldrbtpl	r0, [r6], #-77	; 0xffffffb3
    1238:	4d6b7361 	stclmi	3, cr7, [fp, #-388]!	; 0xfffffe7c
    123c:	65737369 	ldrbvs	r7, [r3, #-873]!	; 0xfffffc97
    1240:	65695964 	strbvs	r5, [r9, #-2404]!	; 0xfffff69c
    1244:	7800646c 	stmdavc	r0, {r2, r3, r5, r6, sl, sp, lr}
    1248:	6b736154 	blvs	1cd97a0 <__RAM_SIZE+0x1bd97a0>
    124c:	6f697250 	svcvs	0x00697250
    1250:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    1254:	65686e49 	strbvs	r6, [r8, #-3657]!	; 0xfffff1b7
    1258:	00746972 	rsbseq	r6, r4, r2, ror r9
    125c:	65527875 	ldrbvs	r7, [r2, #-2165]	; 0xfffff78b
    1260:	73727563 	cmnvc	r2, #415236096	; 0x18c00000
    1264:	43657669 	cmnmi	r5, #110100480	; 0x6900000
    1268:	436c6c61 	cmnmi	ip, #24832	; 0x6100
    126c:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
    1270:	75517800 	ldrbvc	r7, [r1, #-2048]	; 0xfffff800
    1274:	53657565 	cmnpl	r5, #423624704	; 0x19400000
    1278:	63656c65 	cmnvs	r5, #25856	; 0x6500
    127c:	6f724674 	svcvs	0x00724674
    1280:	7465536d 	strbtvc	r5, [r5], #-877	; 0xfffffc93
    1284:	75517800 	ldrbvc	r7, [r1, #-2048]	; 0xfffff800
    1288:	50657565 	rsbpl	r7, r5, r5, ror #10
    128c:	466b6565 	strbtmi	r6, [fp], -r5, ror #10
    1290:	496d6f72 	stmdbmi	sp!, {r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
    1294:	75005253 	strvc	r5, [r0, #-595]	; 0xfffffdad
    1298:	67694878 			; <UNDEFINED> instruction: 0x67694878
    129c:	74736568 	ldrbtvc	r6, [r3], #-1384	; 0xfffffa98
    12a0:	74696157 	strbtvc	r6, [r9], #-343	; 0xfffffea9
    12a4:	50676e69 	rsbpl	r6, r7, r9, ror #28
    12a8:	726f6972 	rsbvc	r6, pc, #1867776	; 0x1c8000
    12ac:	00797469 	rsbseq	r7, r9, r9, ror #8
    12b0:	43767270 	cmnmi	r6, #112, 4
    12b4:	4479706f 	ldrbtmi	r7, [r9], #-111	; 0xffffff91
    12b8:	46617461 	strbtmi	r7, [r1], -r1, ror #8
    12bc:	516d6f72 	smcpl	55026	; 0xd6f2
    12c0:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
    12c4:	61547600 	cmpvs	r4, r0, lsl #12
    12c8:	72506b73 	subsvc	r6, r0, #117760	; 0x1cc00
    12cc:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    12d0:	69447974 	stmdbvs	r4, {r2, r4, r5, r6, r8, fp, ip, sp, lr}^
    12d4:	686e6973 	stmdavs	lr!, {r0, r1, r4, r5, r6, r8, fp, sp, lr}^
    12d8:	74697265 	strbtvc	r7, [r9], #-613	; 0xfffffd9b
    12dc:	65746641 	ldrbvs	r6, [r4, #-1601]!	; 0xfffff9bf
    12e0:	6d695472 	cfstrdvs	mvd5, [r9, #-456]!	; 0xfffffe38
    12e4:	74756f65 	ldrbtvc	r6, [r5], #-3941	; 0xfffff09b
    12e8:	75447800 	strbvc	r7, [r4, #-2048]	; 0xfffff800
    12ec:	33796d6d 	cmncc	r9, #6976	; 0x1b40
    12f0:	61547800 	cmpvs	r4, r0, lsl #16
    12f4:	65476b73 	strbvs	r6, [r7, #-2931]	; 0xfffff48d
    12f8:	72754374 	rsbsvc	r4, r5, #116, 6	; 0xd0000001
    12fc:	746e6572 	strbtvc	r6, [lr], #-1394	; 0xfffffa8e
    1300:	6b736154 	blvs	1cd9858 <__RAM_SIZE+0x1bd9858>
    1304:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
    1308:	7000656c 	andvc	r6, r0, ip, ror #10
    130c:	61654863 	cmnvs	r5, r3, ror #16
    1310:	51780064 	cmnpl	r8, r4, rrx
    1314:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
    1318:	65766947 	ldrbvs	r6, [r6, #-2375]!	; 0xfffff6b9
    131c:	6574754d 	ldrbvs	r7, [r4, #-1357]!	; 0xfffffab3
    1320:	63655278 	cmnvs	r5, #120, 4	; 0x80000007
    1324:	69737275 	ldmdbvs	r3!, {r0, r2, r4, r5, r6, r9, ip, sp, lr}^
    1328:	70006576 	andvc	r6, r0, r6, ror r5
    132c:	6e557672 	mrcvs	6, 2, r7, cr5, cr2, {3}
    1330:	6b636f6c 	blvs	18dd0e8 <__RAM_SIZE+0x17dd0e8>
    1334:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
    1338:	51780065 	cmnpl	r8, r5, rrx
    133c:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
    1340:	656e6547 	strbvs	r6, [lr, #-1351]!	; 0xfffffab9
    1344:	52636972 	rsbpl	r6, r3, #1867776	; 0x1c8000
    1348:	74657365 	strbtvc	r7, [r5], #-869	; 0xfffffc9b
    134c:	75517800 	ldrbvc	r7, [r1, #-2048]	; 0xfffff800
    1350:	49657565 	stmdbmi	r5!, {r0, r2, r5, r6, r8, sl, ip, sp, lr}^
    1354:	65755173 	ldrbvs	r5, [r5, #-371]!	; 0xfffffe8d
    1358:	6d456575 	cfstr64vs	mvdx6, [r5, #-468]	; 0xfffffe2c
    135c:	46797470 			; <UNDEFINED> instruction: 0x46797470
    1360:	496d6f72 	stmdbmi	sp!, {r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
    1364:	78005253 	stmdavc	r0, {r0, r1, r4, r6, r9, ip, lr}
    1368:	55455551 	strbpl	r5, [r5, #-1361]	; 0xfffffaaf
    136c:	78700045 	ldmdavc	r0!, {r0, r2, r6}^
    1370:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
    1374:	74655365 	strbtvc	r5, [r5], #-869	; 0xfffffc9b
    1378:	746e6f43 	strbtvc	r6, [lr], #-3907	; 0xfffff0bd
    137c:	656e6961 	strbvs	r6, [lr, #-2401]!	; 0xfffff69f
    1380:	50780072 	rsbspl	r0, r8, r2, ror r0
    1384:	7469736f 	strbtvc	r7, [r9], #-879	; 0xfffffc91
    1388:	006e6f69 	rsbeq	r6, lr, r9, ror #30
    138c:	65755178 	ldrbvs	r5, [r5, #-376]!	; 0xfffffe88
    1390:	64416575 	strbvs	r6, [r1], #-1397	; 0xfffffa8b
    1394:	536f5464 	cmnpl	pc, #100, 8	; 0x64000000
    1398:	63007465 	movwvs	r7, #1125	; 0x465
    139c:	6f4c7852 	svcvs	0x004c7852
    13a0:	78006b63 	stmdavc	r0, {r0, r1, r5, r6, r8, r9, fp, sp, lr}
    13a4:	54415453 	strbpl	r5, [r1], #-1107	; 0xfffffbad
    13a8:	515f4349 	cmppl	pc, r9, asr #6
    13ac:	45554555 	ldrbmi	r4, [r5, #-1365]	; 0xfffffaab
    13b0:	45787500 	ldrbmi	r7, [r8, #-1280]!	; 0xfffffb00
    13b4:	746e6576 	strbtvc	r6, [lr], #-1398	; 0xfffffa8a
    13b8:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
    13bc:	6e654c65 	cdpvs	12, 6, cr4, cr5, cr5, {3}
    13c0:	00687467 	rsbeq	r7, r8, r7, ror #8
    13c4:	73615478 	cmnvc	r1, #120, 8	; 0x78000000
    13c8:	6d65526b 	sfmvs	f5, 2, [r5, #-428]!	; 0xfffffe54
    13cc:	4665766f 	strbtmi	r7, [r5], -pc, ror #12
    13d0:	456d6f72 	strbmi	r6, [sp, #-3954]!	; 0xfffff08e
    13d4:	746e6576 	strbtvc	r6, [lr], #-1398	; 0xfffffa8a
    13d8:	7473694c 	ldrbtvc	r6, [r3], #-2380	; 0xfffff6b4
    13dc:	61745300 	cmnvs	r4, r0, lsl #6
    13e0:	4c636974 			; <UNDEFINED> instruction: 0x4c636974
    13e4:	5f747369 	svcpl	0x00747369
    13e8:	51780074 	cmnpl	r8, r4, ror r0
    13ec:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
    13f0:	61657243 	cmnvs	r5, r3, asr #4
    13f4:	6f436574 	svcvs	0x00436574
    13f8:	69746e75 	ldmdbvs	r4!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
    13fc:	6553676e 	ldrbvs	r6, [r3, #-1902]	; 0xfffff892
    1400:	6870616d 	ldmdavs	r0!, {r0, r2, r3, r5, r6, r8, sp, lr}^
    1404:	0065726f 	rsbeq	r7, r5, pc, ror #4
    1408:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
    140c:	61546369 	cmpvs	r4, r9, ror #6
    1410:	745f6b73 	ldrbvc	r6, [pc], #-2931	; 1418 <__HEAP_SIZE+0x418>
    1414:	6f437800 	svcvs	0x00437800
    1418:	44496572 	strbmi	r6, [r9], #-1394	; 0xfffffa8e
    141c:	54637000 	strbtpl	r7, [r3], #-0
    1420:	4e6b7361 	cdpmi	3, 6, cr7, cr11, cr1, {3}
    1424:	00656d61 	rsbeq	r6, r5, r1, ror #26
    1428:	73615476 	cmnvc	r1, #1979711488	; 0x76000000
    142c:	616c506b 	cmnvs	ip, fp, rrx
    1430:	6e4f6563 	cdpvs	5, 4, cr6, cr15, cr3, {3}
    1434:	726f6e55 	rsbvc	r6, pc, #1360	; 0x550
    1438:	65726564 	ldrbvs	r6, [r2, #-1380]!	; 0xfffffa9c
    143c:	65764564 	ldrbvs	r4, [r6, #-1380]!	; 0xfffffa9c
    1440:	694c746e 	stmdbvs	ip, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
    1444:	70007473 	andvc	r7, r0, r3, ror r4
    1448:	64497870 	strbvs	r7, [r9], #-2160	; 0xfffff790
    144c:	6154656c 	cmpvs	r4, ip, ror #10
    1450:	74536b73 	ldrbvc	r6, [r3], #-2931	; 0xfffff48d
    1454:	426b6361 	rsbmi	r6, fp, #-2080374783	; 0x84000001
    1458:	65666675 	strbvs	r6, [r6, #-1653]!	; 0xfffff98b
    145c:	50780072 	rsbspl	r0, r8, r2, ror r0
    1460:	5374726f 	cmnpl	r4, #-268435450	; 0xf0000006
    1464:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
    1468:	65686353 	strbvs	r6, [r8, #-851]!	; 0xfffffcad
    146c:	656c7564 	strbvs	r7, [ip, #-1380]!	; 0xfffffa9c
    1470:	78750072 	ldmdavc	r5!, {r1, r4, r5, r6}^
    1474:	6f697250 	svcvs	0x00697250
    1478:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    147c:	43787000 	cmnmi	r8, #0
    1480:	74736e6f 	ldrbtvc	r6, [r3], #-3695	; 0xfffff191
    1484:	7473694c 	ldrbtvc	r6, [r3], #-2380	; 0xfffff6b4
    1488:	61547800 	cmpvs	r4, r0, lsl #16
    148c:	65476b73 	strbvs	r6, [r7, #-2931]	; 0xfffff48d
    1490:	6c644974 			; <UNDEFINED> instruction: 0x6c644974
    1494:	73615465 	cmnvc	r1, #1694498816	; 0x65000000
    1498:	6e61486b 	cdpvs	8, 6, cr4, cr1, cr11, {3}
    149c:	46656c64 	strbtmi	r6, [r5], -r4, ror #24
    14a0:	6f43726f 	svcvs	0x0043726f
    14a4:	70006572 	andvc	r6, r0, r2, ror r5
    14a8:	61745378 	cmnvs	r4, r8, ror r3
    14ac:	694c6574 	stmdbvs	ip, {r2, r4, r5, r6, r8, sl, sp, lr}^
    14b0:	65007473 	strvs	r7, [r0, #-1139]	; 0xfffffb8d
    14b4:	70737553 	rsbsvc	r7, r3, r3, asr r5
    14b8:	65646e65 	strbvs	r6, [r4, #-3685]!	; 0xfffff19b
    14bc:	78750064 	ldmdavc	r5!, {r2, r5, r6}^
    14c0:	6d6d7544 	cfstr64vs	mvdx7, [sp, #-272]!	; 0xfffffef0
    14c4:	00323179 	eorseq	r3, r2, r9, ror r1
    14c8:	73615478 	cmnvc	r1, #120, 8	; 0x78000000
    14cc:	6c65446b 	cfstrdvs	mvd4, [r5], #-428	; 0xfffffe54
    14d0:	6e557961 	vnmlavs.f16	s15, s10, s3	; <UNPREDICTABLE>
    14d4:	006c6974 	rsbeq	r6, ip, r4, ror r9
    14d8:	6e4f7875 	mcrvs	8, 2, r7, cr15, cr5, {3}
    14dc:	6e4f796c 	vmlsvs.f16	s15, s30, s25	; <UNPREDICTABLE>
    14e0:	74754d65 	ldrbtvc	r4, [r5], #-3429	; 0xfffff29b
    14e4:	65487865 	strbvs	r7, [r8, #-2149]	; 0xfffff79b
    14e8:	7500646c 	strvc	r6, [r0, #-1132]	; 0xfffffb94
    14ec:	7469426c 	strbtvc	r4, [r9], #-620	; 0xfffffd94
    14f0:	436f5473 	cmnmi	pc, #1929379840	; 0x73000000
    14f4:	7261656c 	rsbvc	r6, r1, #108, 10	; 0x1b000000
    14f8:	78456e4f 	stmdavc	r5, {r0, r1, r2, r3, r6, r9, sl, fp, sp, lr}^
    14fc:	78007469 	stmdavc	r0, {r0, r3, r5, r6, sl, ip, sp, lr}
    1500:	6b736154 	blvs	1cd9a58 <__RAM_SIZE+0x1bd9a58>
    1504:	53746547 	cmnpl	r4, #297795584	; 0x11c00000
    1508:	64656863 	strbtvs	r6, [r5], #-2147	; 0xfffff79d
    150c:	72656c75 	rsbvc	r6, r5, #29952	; 0x7500
    1510:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
    1514:	4e650065 	cdpmi	0, 6, cr0, cr5, cr5, {3}
    1518:	7463416f 	strbtvc	r4, [r3], #-367	; 0xfffffe91
    151c:	006e6f69 	rsbeq	r6, lr, r9, ror #30
    1520:	6f547875 	svcvs	0x00547875
    1524:	61655270 	smcvs	21792	; 0x5520
    1528:	72507964 	subsvc	r7, r0, #100, 18	; 0x190000
    152c:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    1530:	70007974 	andvc	r7, r0, r4, ror r9
    1534:	6c654478 	cfstrdvs	mvd4, [r5], #-480	; 0xfffffe20
    1538:	64657961 	strbtvs	r7, [r5], #-2401	; 0xfffff69f
    153c:	7473694c 	ldrbtvc	r6, [r3], #-2380	; 0xfffff6b4
    1540:	45787000 	ldrbmi	r7, [r8, #-0]!
    1544:	746e6576 	strbtvc	r6, [lr], #-1398	; 0xfffffa8a
    1548:	7473694c 	ldrbtvc	r6, [r3], #-2380	; 0xfffff6b4
    154c:	63537800 	cmpvs	r3, #0, 16
    1550:	75646568 	strbvc	r6, [r4, #-1384]!	; 0xfffffa98
    1554:	5272656c 	rsbspl	r6, r2, #108, 10	; 0x1b000000
    1558:	696e6e75 	stmdbvs	lr!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
    155c:	5300676e 	movwpl	r6, #1902	; 0x76e
    1560:	6b636174 	blvs	18d9b38 <__RAM_SIZE+0x17d9b38>
    1564:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
    1568:	7500745f 	strvc	r7, [r0, #-1119]	; 0xfffffba1
    156c:	7469426c 	strbtvc	r4, [r9], #-620	; 0xfffffd94
    1570:	436f5473 	cmnmi	pc, #1929379840	; 0x73000000
    1574:	7261656c 	rsbvc	r6, r1, #108, 10	; 0x1b000000
    1578:	44787500 	ldrbtmi	r7, [r8], #-1280	; 0xfffffb00
    157c:	74656c65 	strbtvc	r6, [r5], #-3173	; 0xfffff39b
    1580:	61546465 	cmpvs	r4, r5, ror #8
    1584:	57736b73 			; <UNDEFINED> instruction: 0x57736b73
    1588:	69746961 	ldmdbvs	r4!, {r0, r5, r6, r8, fp, sp, lr}^
    158c:	6c43676e 	mcrrvs	7, 6, r6, r3, cr14
    1590:	556e6165 	strbpl	r6, [lr, #-357]!	; 0xfffffe9b
    1594:	44780070 	ldrbtmi	r0, [r8], #-112	; 0xffffff90
    1598:	74656c65 	strbtvc	r6, [r5], #-3173	; 0xfffff39b
    159c:	42435465 	submi	r5, r3, #1694498816	; 0x65000000
    15a0:	64496e49 	strbvs	r6, [r9], #-3657	; 0xfffff1b7
    15a4:	6154656c 	cmpvs	r4, ip, ror #10
    15a8:	78006b73 	stmdavc	r0, {r0, r1, r4, r5, r6, r8, r9, fp, sp, lr}
    15ac:	646e6550 	strbtvs	r6, [lr], #-1360	; 0xfffffab0
    15b0:	6f436465 	svcvs	0x00436465
    15b4:	73746e75 	cmnvc	r4, #1872	; 0x750
    15b8:	52787000 	rsbspl	r7, r8, #0
    15bc:	79646165 	stmdbvc	r4!, {r0, r2, r5, r6, r8, sp, lr}^
    15c0:	6b736154 	blvs	1cd9b18 <__RAM_SIZE+0x1bd9b18>
    15c4:	73694c73 	cmnvc	r9, #29440	; 0x7300
    15c8:	78007374 	stmdavc	r0, {r2, r4, r5, r6, r8, r9, ip, sp, lr}
    15cc:	65707845 	ldrbvs	r7, [r0, #-2117]!	; 0xfffff7bb
    15d0:	64657463 	strbtvs	r7, [r5], #-1123	; 0xfffffb9d
    15d4:	656c6449 	strbvs	r6, [ip, #-1097]!	; 0xfffffbb7
    15d8:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    15dc:	44787500 	ldrbtmi	r7, [r8], #-1280	; 0xfffffb00
    15e0:	796d6d75 	stmdbvc	sp!, {r0, r2, r4, r5, r6, r8, sl, fp, sp, lr}^
    15e4:	78003032 	stmdavc	r0, {r1, r4, r5, ip, sp}
    15e8:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    15ec:	73615472 	cmnvc	r1, #1912602624	; 0x72000000
    15f0:	4243546b 	submi	r5, r3, #1795162112	; 0x6b000000
    15f4:	4f637500 	svcmi	0x00637500
    15f8:	69676972 	stmdbvs	r7!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    15fc:	4e6c616e 	powmiez	f6, f4, #0.5
    1600:	6669746f 	strbtvs	r7, [r9], -pc, ror #8
    1604:	61745379 	cmnvs	r4, r9, ror r3
    1608:	76006574 			; <UNDEFINED> instruction: 0x76006574
    160c:	6b736154 	blvs	1cd9b64 <__RAM_SIZE+0x1bd9b64>
    1610:	54746553 	ldrbtpl	r6, [r4], #-1363	; 0xfffffaad
    1614:	4f656d69 	svcmi	0x00656d69
    1618:	74537475 	ldrbvc	r7, [r3], #-1141	; 0xfffffb8b
    161c:	00657461 	rsbeq	r7, r5, r1, ror #8
    1620:	73615478 	cmnvc	r1, #120, 8	; 0x78000000
    1624:	6e65476b 	cdpvs	7, 6, cr4, cr5, cr11, {3}
    1628:	63697265 	cmnvs	r9, #1342177286	; 0x50000006
    162c:	69746f4e 	ldmdbvs	r4!, {r1, r2, r3, r6, r8, r9, sl, fp, sp, lr}^
    1630:	72467966 	subvc	r7, r6, #1671168	; 0x198000
    1634:	53496d6f 	movtpl	r6, #40303	; 0x9d6f
    1638:	59780052 	ldmdbpl	r8!, {r1, r4, r6}^
    163c:	646c6569 	strbtvs	r6, [ip], #-1385	; 0xfffffa97
    1640:	646e6550 	strbtvs	r6, [lr], #-1360	; 0xfffffab0
    1644:	73676e69 	cmnvc	r7, #1680	; 0x690
    1648:	63757000 	cmnvs	r5, #0
    164c:	63617453 	cmnvs	r1, #1392508928	; 0x53000000
    1650:	7479426b 	ldrbtvc	r4, [r9], #-619	; 0xfffffd95
    1654:	44780065 	ldrbtmi	r0, [r8], #-101	; 0xffffff9b
    1658:	79616c65 	stmdbvc	r1!, {r0, r2, r5, r6, sl, fp, sp, lr}^
    165c:	61546465 	cmpvs	r4, r5, ror #8
    1660:	694c6b73 	stmdbvs	ip, {r0, r1, r4, r5, r6, r8, r9, fp, sp, lr}^
    1664:	00317473 	eorseq	r7, r1, r3, ror r4
    1668:	6c654478 	cfstrdvs	mvd4, [r5], #-480	; 0xfffffe20
    166c:	64657961 	strbtvs	r7, [r5], #-2401	; 0xfffff69f
    1670:	6b736154 	blvs	1cd9bc8 <__RAM_SIZE+0x1bd9bc8>
    1674:	7473694c 	ldrbtvc	r6, [r3], #-2380	; 0xfffff6b4
    1678:	78700032 	ldmdavc	r0!, {r1, r4, r5}^
    167c:	7265764f 	rsbvc	r7, r5, #82837504	; 0x4f00000
    1680:	776f6c66 	strbvc	r6, [pc, -r6, ror #24]!
    1684:	65446465 	strbvs	r6, [r4, #-1125]	; 0xfffffb9b
    1688:	6579616c 	ldrbvs	r6, [r9, #-364]!	; 0xfffffe94
    168c:	73694c64 	cmnvc	r9, #100, 24	; 0x6400
    1690:	55780074 	ldrbpl	r0, [r8, #-116]!	; 0xffffff8c
    1694:	74616470 	strbtvc	r6, [r1], #-1136	; 0xfffffb90
    1698:	69546465 	ldmdbvs	r4, {r0, r2, r5, r6, sl, sp, lr}^
    169c:	6f436b63 	svcvs	0x00436b63
    16a0:	00746e75 	rsbseq	r6, r4, r5, ror lr
    16a4:	73615478 	cmnvc	r1, #120, 8	; 0x78000000
    16a8:	7461436b 	strbtvc	r4, [r1], #-875	; 0xfffffc95
    16ac:	70556863 	subsvc	r6, r5, r3, ror #16
    16b0:	6b636954 	blvs	18dbc08 <__RAM_SIZE+0x17dbc08>
    16b4:	6c750073 	ldclvs	0, cr0, [r5], #-460	; 0xfffffe34
    16b8:	61726150 	cmnvs	r2, r0, asr r1
    16bc:	6574656d 	ldrbvs	r6, [r4, #-1389]!	; 0xfffffa93
    16c0:	65007372 	strvs	r7, [r0, #-882]	; 0xfffffc8e
    16c4:	75746552 	ldrbvc	r6, [r4, #-1362]!	; 0xfffffaae
    16c8:	78006e72 	stmdavc	r0, {r1, r4, r5, r6, r9, sl, fp, sp, lr}
    16cc:	6b736154 	blvs	1cd9c24 <__RAM_SIZE+0x1bd9c24>
    16d0:	65526f54 	ldrbvs	r6, [r2, #-3924]	; 0xfffff0ac
    16d4:	656d7573 	strbvs	r7, [sp, #-1395]!	; 0xfffffa8d
    16d8:	49787500 	ldmdbmi	r8!, {r8, sl, ip, sp, lr}^
    16dc:	7865646e 	stmdavc	r5!, {r1, r2, r3, r5, r6, sl, sp, lr}^
    16e0:	6c436f54 	mcrrvs	15, 5, r6, r3, cr4
    16e4:	00726165 	rsbseq	r6, r2, r5, ror #2
    16e8:	73615476 	cmnvc	r1, #1979711488	; 0x76000000
    16ec:	7465536b 	strbtvc	r5, [r5], #-875	; 0xfffffc95
    16f0:	6c707041 	ldclvs	0, cr7, [r0], #-260	; 0xfffffefc
    16f4:	74616369 	strbtvc	r6, [r1], #-873	; 0xfffffc97
    16f8:	546e6f69 	strbtpl	r6, [lr], #-3945	; 0xfffff097
    16fc:	546b7361 	strbtpl	r7, [fp], #-865	; 0xfffffc9f
    1700:	78006761 	stmdavc	r0, {r0, r5, r6, r8, r9, sl, sp, lr}
    1704:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    1708:	65724372 	ldrbvs	r4, [r2, #-882]!	; 0xfffffc8e
    170c:	54657461 	strbtpl	r7, [r5], #-1121	; 0xfffffb9f
    1710:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    1714:	6b736154 	blvs	1cd9c6c <__RAM_SIZE+0x1bd9c6c>
    1718:	6c536500 	cfldr64vs	mvdx6, [r3], {-0}
    171c:	4d706565 	cfldr64mi	mvdx6, [r0, #-404]!	; 0xfffffe6c
    1720:	5365646f 	cmnpl	r5, #1862270976	; 0x6f000000
    1724:	75746174 	ldrbvc	r6, [r4, #-372]!	; 0xfffffe8c
    1728:	78750073 	ldmdavc	r5!, {r0, r1, r4, r5, r6}^
    172c:	68676948 	stmdavs	r7!, {r3, r6, r8, fp, sp, lr}^
    1730:	72507265 	subsvc	r7, r0, #1342177286	; 0x50000006
    1734:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    1738:	65527974 	ldrbvs	r7, [r2, #-2420]	; 0xfffff68c
    173c:	54796461 	ldrbtpl	r6, [r9], #-1121	; 0xfffffb9f
    1740:	736b7361 	cmnvc	fp, #-2080374783	; 0x84000001
    1744:	61547800 	cmpvs	r4, r0, lsl #16
    1748:	72436b73 	subvc	r6, r3, #117760	; 0x1cc00
    174c:	65746165 	ldrbvs	r6, [r4, #-357]!	; 0xfffffe9b
    1750:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
    1754:	74006369 	strvc	r6, [r0], #-873	; 0xfffffc97
    1758:	43546b73 	cmpmi	r4, #117760	; 0x1cc00
    175c:	63750042 	cmnvs	r5, #66	; 0x42
    1760:	69746f4e 	ldmdbvs	r4!, {r1, r2, r3, r6, r8, r9, sl, fp, sp, lr}^
    1764:	74537966 	ldrbvc	r7, [r3], #-2406	; 0xfffff69a
    1768:	00657461 	rsbeq	r7, r5, r1, ror #8
    176c:	70704176 	rsbsvc	r4, r0, r6, ror r1
    1770:	6163696c 	cmnvs	r3, ip, ror #18
    1774:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    1778:	54746547 	ldrbtpl	r6, [r4], #-1351	; 0xfffffab9
    177c:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    1780:	6b736154 	blvs	1cd9cd8 <__RAM_SIZE+0x1bd9cd8>
    1784:	6f6d654d 	svcvs	0x006d654d
    1788:	78007972 	stmdavc	r0, {r1, r4, r5, r6, r8, fp, ip, sp, lr}
    178c:	6b736154 	blvs	1cd9ce4 <__RAM_SIZE+0x1bd9ce4>
    1790:	656e6547 	strbvs	r6, [lr, #-1351]!	; 0xfffffab9
    1794:	4e636972 			; <UNDEFINED> instruction: 0x4e636972
    1798:	6669746f 	strbtvs	r7, [r9], -pc, ror #8
    179c:	78700079 	ldmdavc	r0!, {r0, r3, r4, r5, r6}^
    17a0:	6c626e55 	stclvs	14, cr6, [r2], #-340	; 0xfffffeac
    17a4:	656b636f 	strbvs	r6, [fp, #-879]!	; 0xfffffc91
    17a8:	42435464 	submi	r5, r3, #100, 8	; 0x64000000
    17ac:	6c437800 	mcrrvs	8, 0, r7, r3, cr0
    17b0:	43726165 	cmnmi	r2, #1073741849	; 0x40000019
    17b4:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
    17b8:	78456e4f 	stmdavc	r5, {r0, r1, r2, r3, r6, r9, sl, fp, sp, lr}^
    17bc:	70007469 	andvc	r7, r0, r9, ror #8
    17c0:	72437672 	subvc	r7, r3, #119537664	; 0x7200000
    17c4:	65746165 	ldrbvs	r6, [r4, #-357]!	; 0xfffffe9b
    17c8:	6b736154 	blvs	1cd9d20 <__RAM_SIZE+0x1bd9d20>
    17cc:	6c457800 	mcrrvs	8, 0, r7, r5, cr0
    17d0:	65737061 	ldrbvs	r7, [r3, #-97]!	; 0xffffff9f
    17d4:	6d695464 	cfstrdvs	mvd5, [r9, #-400]!	; 0xfffffe70
    17d8:	41650065 	cmnmi	r5, r5, rrx
    17dc:	74726f62 	ldrbtvc	r6, [r2], #-3938	; 0xfffff09e
    17e0:	65656c53 	strbvs	r6, [r5, #-3155]!	; 0xfffff3ad
    17e4:	53650070 	cmnpl	r5, #112	; 0x70
    17e8:	61567465 	cmpvs	r6, r5, ror #8
    17ec:	5765756c 	strbpl	r7, [r5, -ip, ror #10]!
    17f0:	4f687469 	svcmi	0x00687469
    17f4:	77726576 			; <UNDEFINED> instruction: 0x77726576
    17f8:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
    17fc:	61547800 	cmpvs	r4, r0, lsl #16
    1800:	65476b73 	strbvs	r6, [r7, #-2931]	; 0xfffff48d
    1804:	63695474 	cmnvs	r9, #116, 8	; 0x74000000
    1808:	756f436b 	strbvc	r4, [pc, #-875]!	; 14a5 <__HEAP_SIZE+0x4a5>
    180c:	7246746e 	subvc	r7, r6, #1845493760	; 0x6e000000
    1810:	53496d6f 	movtpl	r6, #40303	; 0x9d6f
    1814:	6c750052 	ldclvs	0, cr0, [r5], #-328	; 0xfffffeb8
    1818:	73746942 	cmnvc	r4, #1081344	; 0x108000
    181c:	6c436f54 	mcrrvs	15, 5, r6, r3, cr4
    1820:	4f726165 	svcmi	0x00726165
    1824:	746e456e 	strbtvc	r4, [lr], #-1390	; 0xfffffa92
    1828:	78007972 	stmdavc	r0, {r1, r4, r5, r6, r8, fp, ip, sp, lr}
    182c:	656c6449 	strbvs	r6, [ip, #-1097]!	; 0xfffffbb7
    1830:	6b736154 	blvs	1cd9d88 <__RAM_SIZE+0x1bd9d88>
    1834:	656d614e 	strbvs	r6, [sp, #-334]!	; 0xfffffeb2
    1838:	65646e49 	strbvs	r6, [r4, #-3657]!	; 0xfffff1b7
    183c:	50780078 	rsbspl	r0, r8, r8, ror r0
    1840:	69646e65 	stmdbvs	r4!, {r0, r2, r5, r6, r9, sl, fp, sp, lr}^
    1844:	6552676e 	ldrbvs	r6, [r2, #-1902]	; 0xfffff892
    1848:	4c796461 	cfldrdmi	mvd6, [r9], #-388	; 0xfffffe7c
    184c:	00747369 	rsbseq	r7, r4, r9, ror #6
    1850:	43767270 	cmnmi	r6, #112, 4
    1854:	74616572 	strbtvc	r6, [r1], #-1394	; 0xfffffa8e
    1858:	61745365 	cmnvs	r4, r5, ror #6
    185c:	54636974 	strbtpl	r6, [r3], #-2420	; 0xfffff68c
    1860:	006b7361 	rsbeq	r7, fp, r1, ror #6
    1864:	73615478 	cmnvc	r1, #120, 8	; 0x78000000
    1868:	7465476b 	strbtvc	r4, [r5], #-1899	; 0xfffff895
    186c:	6c707041 	ldclvs	0, cr7, [r0], #-260	; 0xfffffefc
    1870:	74616369 	strbtvc	r6, [r1], #-873	; 0xfffffc97
    1874:	546e6f69 	strbtpl	r6, [lr], #-3945	; 0xfffff097
    1878:	546b7361 	strbtpl	r7, [fp], #-865	; 0xfffffc9f
    187c:	78006761 	stmdavc	r0, {r0, r5, r6, r8, r9, sl, sp, lr}
    1880:	6b736154 	blvs	1cd9dd8 <__RAM_SIZE+0x1bd9dd8>
    1884:	69615773 	stmdbvs	r1!, {r0, r1, r4, r5, r6, r8, r9, sl, ip, lr}^
    1888:	676e6974 			; <UNDEFINED> instruction: 0x676e6974
    188c:	6d726554 	cfldr64vs	mvdx6, [r2, #-336]!	; 0xfffffeb0
    1890:	74616e69 	strbtvc	r6, [r1], #-3689	; 0xfffff197
    1894:	006e6f69 	rsbeq	r6, lr, r9, ror #30
    1898:	73615476 	cmnvc	r1, #1979711488	; 0x76000000
    189c:	7365526b 	cmnvc	r5, #-1342177274	; 0xb0000006
    18a0:	74537465 	ldrbvc	r7, [r3], #-1125	; 0xfffffb9b
    18a4:	00657461 	rsbeq	r7, r5, r1, ror #8
    18a8:	65547870 	ldrbvs	r7, [r4, #-2160]	; 0xfffff790
    18ac:	7500706d 	strvc	r7, [r0, #-109]	; 0xffffff93
    18b0:	706f5478 	rsbvc	r5, pc, r8, ror r4	; <UNPREDICTABLE>
    18b4:	64657355 	strbtvs	r7, [r5], #-853	; 0xfffffcab
    18b8:	6f697250 	svcvs	0x00697250
    18bc:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    18c0:	54787500 	ldrbtpl	r7, [r8], #-1280	; 0xfffffb00
    18c4:	476b7361 	strbmi	r7, [fp, -r1, ror #6]!
    18c8:	74537465 	ldrbvc	r7, [r3], #-1125	; 0xfffffb9b
    18cc:	486b6361 	stmdami	fp!, {r0, r5, r6, r8, r9, sp, lr}^
    18d0:	57686769 	strbpl	r6, [r8, -r9, ror #14]!
    18d4:	72657461 	rsbvc	r7, r5, #1627389952	; 0x61000000
    18d8:	6b72614d 	blvs	1c99e14 <__RAM_SIZE+0x1b99e14>
    18dc:	61547800 	cmpvs	r4, r0, lsl #16
    18e0:	6e496b73 	vmovvs.8	d9[3], r6
    18e4:	6d657263 	sfmvs	f7, 2, [r5, #-396]!	; 0xfffffe74
    18e8:	54746e65 	ldrbtpl	r6, [r4], #-3685	; 0xfffff19b
    18ec:	006b6369 	rsbeq	r6, fp, r9, ror #6
    18f0:	73615476 	cmnvc	r1, #1979711488	; 0x76000000
    18f4:	6574536b 	ldrbvs	r5, [r4, #-875]!	; 0xfffffc95
    18f8:	63695470 	cmnvs	r9, #112, 8	; 0x70000000
    18fc:	7875006b 	ldmdavc	r5!, {r0, r1, r3, r5, r6}^
    1900:	63617453 	cmnvs	r1, #1392508928	; 0x53000000
    1904:	7065446b 	rsbvc	r4, r5, fp, ror #8
    1908:	65006874 	strvs	r6, [r0, #-2164]	; 0xfffff78c
    190c:	69746f4e 	ldmdbvs	r4!, {r1, r2, r3, r6, r8, r9, sl, fp, sp, lr}^
    1910:	63417966 	movtvs	r7, #6502	; 0x1966
    1914:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    1918:	61547800 	cmpvs	r4, r0, lsl #16
    191c:	65476b73 	strbvs	r6, [r7, #-2931]	; 0xfffff48d
    1920:	6e614874 	mcrvs	8, 3, r4, cr1, cr4, {3}
    1924:	00656c64 	rsbeq	r6, r5, r4, ror #24
    1928:	65446375 	strbvs	r6, [r4, #-885]	; 0xfffffc8b
    192c:	4179616c 	cmnmi	r9, ip, ror #2
    1930:	74726f62 	ldrbtvc	r6, [r2], #-3938	; 0xfffff09e
    1934:	53006465 	movwpl	r6, #1125	; 0x465
    1938:	69746174 	ldmdbvs	r4!, {r2, r4, r5, r6, r8, sp, lr}^
    193c:	73694c63 	cmnvc	r9, #25344	; 0x6300
    1940:	65744974 	ldrbvs	r4, [r4, #-2420]!	; 0xfffff68c
    1944:	00745f6d 	rsbseq	r5, r4, sp, ror #30
    1948:	63695478 	cmnvs	r9, #120, 8	; 0x78000000
    194c:	756f436b 	strbvc	r4, [pc, #-875]!	; 15e9 <__HEAP_SIZE+0x5e9>
    1950:	7600746e 	strvc	r7, [r0], -lr, ror #8
    1954:	6b736154 	blvs	1cd9eac <__RAM_SIZE+0x1bd9eac>
    1958:	53646e45 	cmnpl	r4, #1104	; 0x450
    195c:	64656863 	strbtvs	r6, [r5], #-2147	; 0xfffff79d
    1960:	72656c75 	rsbvc	r6, r5, #29952	; 0x7500
    1964:	54787500 	ldrbtpl	r7, [r8], #-1280	; 0xfffffb00
    1968:	506b7361 	rsbpl	r7, fp, r1, ror #6
    196c:	726f6972 	rsbvc	r6, pc, #1867776	; 0x1c8000
    1970:	47797469 	ldrbmi	r7, [r9, -r9, ror #8]!
    1974:	78007465 	stmdavc	r0, {r0, r2, r5, r6, sl, ip, sp, lr}
    1978:	736e6f43 	cmnvc	lr, #268	; 0x10c
    197c:	63695474 	cmnvs	r9, #116, 8	; 0x74000000
    1980:	756f436b 	strbvc	r4, [pc, #-875]!	; 161d <__HEAP_SIZE+0x61d>
    1984:	7800746e 	stmdavc	r0, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
    1988:	70737553 	rsbsvc	r7, r3, r3, asr r5
    198c:	65646e65 	strbvs	r6, [r4, #-3685]!	; 0xfffff19b
    1990:	73615464 	cmnvc	r1, #100, 8	; 0x64000000
    1994:	73694c6b 	cmnvc	r9, #27392	; 0x6b00
    1998:	63700074 	cmnvs	r0, #116	; 0x74
    199c:	656d614e 	strbvs	r6, [sp, #-334]!	; 0xfffffeb2
    19a0:	4f787000 	svcmi	0x00787000
    19a4:	66726576 			; <UNDEFINED> instruction: 0x66726576
    19a8:	44776f6c 	ldrbtmi	r6, [r7], #-3948	; 0xfffff094
    19ac:	79616c65 	stmdbvc	r1!, {r0, r2, r5, r6, sl, fp, sp, lr}^
    19b0:	61546465 	cmpvs	r4, r5, ror #8
    19b4:	694c6b73 	stmdbvs	ip, {r0, r1, r4, r5, r6, r8, r9, fp, sp, lr}^
    19b8:	75007473 	strvc	r7, [r0, #-1139]	; 0xfffffb8d
    19bc:	6d754478 	cfldrdvs	mvd4, [r5, #-480]!	; 0xfffffe20
    19c0:	0035796d 	eorseq	r7, r5, sp, ror #18
    19c4:	47767270 			; <UNDEFINED> instruction: 0x47767270
    19c8:	78457465 	stmdavc	r5, {r0, r2, r5, r6, sl, ip, sp, lr}^
    19cc:	74636570 	strbtvc	r6, [r3], #-1392	; 0xfffffa90
    19d0:	64496465 	strbvs	r6, [r9], #-1125	; 0xfffffb9b
    19d4:	6954656c 	ldmdbvs	r4, {r2, r3, r5, r6, r8, sl, sp, lr}^
    19d8:	7800656d 	stmdavc	r0, {r0, r2, r3, r5, r6, r8, sl, sp, lr}
    19dc:	656c6449 	strbvs	r6, [ip, #-1097]!	; 0xfffffbb7
    19e0:	6b736154 	blvs	1cd9f38 <__RAM_SIZE+0x1bd9f38>
    19e4:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
    19e8:	0073656c 	rsbseq	r6, r3, ip, ror #10
    19ec:	73615465 	cmnvc	r1, #1694498816	; 0x65000000
    19f0:	6e6f436b 	cdpvs	3, 6, cr4, cr15, cr11, {3}
    19f4:	6d726966 			; <UNDEFINED> instruction: 0x6d726966
    19f8:	65656c53 	strbvs	r6, [r5, #-3155]!	; 0xfffff3ad
    19fc:	646f4d70 	strbtvs	r4, [pc], #-3440	; 1a04 <__HEAP_SIZE+0xa04>
    1a00:	61745365 	cmnvs	r4, r5, ror #6
    1a04:	00737574 	rsbseq	r7, r3, r4, ror r5
    1a08:	6f4e6c75 	svcvs	0x004e6c75
    1a0c:	69666974 	stmdbvs	r6!, {r2, r4, r5, r6, r8, fp, sp, lr}^
    1a10:	61566465 	cmpvs	r6, r5, ror #8
    1a14:	0065756c 	rsbeq	r7, r5, ip, ror #10
    1a18:	65527870 	ldrbvs	r7, [r2, #-2160]	; 0xfffff790
    1a1c:	6e727574 	mrcvs	5, 3, r7, cr2, cr4, {3}
    1a20:	61547600 	cmpvs	r4, r0, lsl #12
    1a24:	65526b73 	ldrbvs	r6, [r2, #-2931]	; 0xfffff48d
    1a28:	65766f6d 	ldrbvs	r6, [r6, #-3949]!	; 0xfffff093
    1a2c:	6d6f7246 	sfmvs	f7, 2, [pc, #-280]!	; 191c <__HEAP_SIZE+0x91c>
    1a30:	726f6e55 	rsbvc	r6, pc, #1360	; 0x550
    1a34:	65726564 	ldrbvs	r6, [r2, #-1380]!	; 0xfffffa9c
    1a38:	65764564 	ldrbvs	r4, [r6, #-1380]!	; 0xfffffa9c
    1a3c:	694c746e 	stmdbvs	ip, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
    1a40:	75007473 	strvc	r7, [r0, #-1139]	; 0xfffffb8d
    1a44:	74754d78 	ldrbtvc	r4, [r5], #-3448	; 0xfffff288
    1a48:	73657865 	cmnvc	r5, #6619136	; 0x650000
    1a4c:	646c6548 	strbtvs	r6, [ip], #-1352	; 0xfffffab8
    1a50:	65536500 	ldrbvs	r6, [r3, #-1280]	; 0xfffffb00
    1a54:	6c615674 	stclvs	6, cr5, [r1], #-464	; 0xfffffe30
    1a58:	69576575 	ldmdbvs	r7, {r0, r2, r4, r5, r6, r8, sl, sp, lr}^
    1a5c:	756f6874 	strbvc	r6, [pc, #-2164]!	; 11f0 <__HEAP_SIZE+0x1f0>
    1a60:	65764f74 	ldrbvs	r4, [r6, #-3956]!	; 0xfffff08c
    1a64:	69727772 	ldmdbvs	r2!, {r1, r4, r5, r6, r8, r9, sl, ip, sp, lr}^
    1a68:	78006574 	stmdavc	r0, {r2, r4, r5, r6, r8, sl, sp, lr}
    1a6c:	6b736154 	blvs	1cd9fc4 <__RAM_SIZE+0x1bd9fc4>
    1a70:	656e6547 	strbvs	r6, [lr, #-1351]!	; 0xfffffab9
    1a74:	4e636972 			; <UNDEFINED> instruction: 0x4e636972
    1a78:	6669746f 	strbtvs	r7, [r9], -pc, ror #8
    1a7c:	69615779 	stmdbvs	r1!, {r0, r3, r4, r5, r6, r8, r9, sl, ip, lr}^
    1a80:	53780074 	cmnpl	r8, #116	; 0x74
    1a84:	6c756f68 	ldclvs	15, cr6, [r5], #-416	; 0xfffffe60
    1a88:	6c654464 	cfstrdvs	mvd4, [r5], #-400	; 0xfffffe70
    1a8c:	70007961 	andvc	r7, r0, r1, ror #18
    1a90:	64497672 	strbvs	r7, [r9], #-1650	; 0xfffff98e
    1a94:	6154656c 	cmpvs	r4, ip, ror #10
    1a98:	70006b73 	andvc	r6, r0, r3, ror fp
    1a9c:	65537672 	ldrbvs	r7, [r3, #-1650]	; 0xfffff98e
    1aa0:	68637261 	stmdavs	r3!, {r0, r5, r6, r9, ip, sp, lr}^
    1aa4:	4e726f46 	cdpmi	15, 7, cr6, cr2, cr6, {2}
    1aa8:	57656d61 	strbpl	r6, [r5, -r1, ror #26]!
    1aac:	69687469 	stmdbvs	r8!, {r0, r3, r5, r6, sl, ip, sp, lr}^
    1ab0:	6e69536e 	cdpvs	3, 6, cr5, cr9, cr14, {3}
    1ab4:	4c656c67 	stclmi	12, cr6, [r5], #-412	; 0xfffffe64
    1ab8:	00747369 	rsbseq	r7, r4, r9, ror #6
    1abc:	61546c75 	cmpvs	r4, r5, ror ip
    1ac0:	65476b73 	strbvs	r6, [r7, #-2931]	; 0xfffff48d
    1ac4:	6972656e 	ldmdbvs	r2!, {r1, r2, r3, r5, r6, r8, sl, sp, lr}^
    1ac8:	746f4e63 	strbtvc	r4, [pc], #-3683	; 1ad0 <__HEAP_SIZE+0xad0>
    1acc:	54796669 	ldrbtpl	r6, [r9], #-1641	; 0xfffff997
    1ad0:	00656b61 	rsbeq	r6, r5, r1, ror #22
    1ad4:	41767270 	cmnmi	r6, r0, ror r2
    1ad8:	654e6464 	strbvs	r6, [lr, #-1124]	; 0xfffffb9c
    1adc:	73615477 	cmnvc	r1, #1996488704	; 0x77000000
    1ae0:	526f546b 	rsbpl	r5, pc, #1795162112	; 0x6b000000
    1ae4:	79646165 	stmdbvc	r4!, {r0, r2, r5, r6, r8, sp, lr}^
    1ae8:	7473694c 	ldrbtvc	r6, [r3], #-2380	; 0xfffff6b4
    1aec:	48787000 	ldmdami	r8!, {ip, sp, lr}^
    1af0:	466b6f6f 	strbtmi	r6, [fp], -pc, ror #30
    1af4:	74636e75 	strbtvc	r6, [r3], #-3701	; 0xfffff18b
    1af8:	006e6f69 	rsbeq	r6, lr, r9, ror #30
    1afc:	61655265 	cmnvs	r5, r5, ror #4
    1b00:	70007964 	andvc	r7, r0, r4, ror #18
    1b04:	72437672 	subvc	r7, r3, #119537664	; 0x7200000
    1b08:	65746165 	ldrbvs	r6, [r4, #-357]!	; 0xfffffe9b
    1b0c:	656c6449 	strbvs	r6, [ip, #-1097]!	; 0xfffffbb7
    1b10:	6b736154 	blvs	1cda068 <__RAM_SIZE+0x1bda068>
    1b14:	54650073 	strbtpl	r0, [r5], #-115	; 0xffffff8d
    1b18:	476b7361 	strbmi	r7, [fp, -r1, ror #6]!
    1b1c:	74537465 	ldrbvc	r7, [r3], #-1125	; 0xfffffb9b
    1b20:	00657461 	rsbeq	r7, r5, r1, ror #8
    1b24:	78757070 	ldmdavc	r5!, {r4, r5, r6, ip, sp, lr}^
    1b28:	63617453 	cmnvs	r1, #1392508928	; 0x53000000
    1b2c:	6675426b 	ldrbtvs	r4, [r5], -fp, ror #4
    1b30:	00726566 	rsbseq	r6, r2, r6, ror #10
    1b34:	654e7870 	strbvs	r7, [lr, #-2160]	; 0xfffff790
    1b38:	42435477 	submi	r5, r3, #1996488704	; 0x77000000
    1b3c:	51787500 	cmnpl	r8, r0, lsl #10
    1b40:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
    1b44:	78707000 	ldmdavc	r0!, {ip, sp, lr}^
    1b48:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    1b4c:	73615472 	cmnvc	r1, #1912602624	; 0x72000000
    1b50:	6174536b 	cmnvs	r4, fp, ror #6
    1b54:	75426b63 	strbvc	r6, [r2, #-2915]	; 0xfffff49d
    1b58:	72656666 	rsbvc	r6, r5, #106954752	; 0x6600000
    1b5c:	69597800 	ldmdbvs	r9, {fp, ip, sp, lr}^
    1b60:	4f646c65 	svcmi	0x00646c65
    1b64:	72756363 	rsbsvc	r6, r5, #-1946157055	; 0x8c000001
    1b68:	00646572 	rsbeq	r6, r4, r2, ror r5
    1b6c:	6f6d654d 	svcvs	0x006d654d
    1b70:	65527972 	ldrbvs	r7, [r2, #-2418]	; 0xfffff68e
    1b74:	6e6f6967 	vnmulvs.f16	s13, s30, s15	; <UNPREDICTABLE>
    1b78:	7800745f 	stmdavc	r0, {r0, r1, r2, r3, r4, r6, sl, ip, sp, lr}
    1b7c:	7478654e 	ldrbtvc	r6, [r8], #-1358	; 0xfffffab2
    1b80:	6b736154 	blvs	1cda0d8 <__RAM_SIZE+0x1bda0d8>
    1b84:	6c626e55 	stclvs	14, cr6, [r2], #-340	; 0xfffffeac
    1b88:	546b636f 	strbtpl	r6, [fp], #-879	; 0xfffffc91
    1b8c:	00656d69 	rsbeq	r6, r5, r9, ror #26
    1b90:	6f507870 	svcvs	0x00507870
    1b94:	6e497472 	mcrvs	4, 2, r7, cr9, cr2, {3}
    1b98:	61697469 	cmnvs	r9, r9, ror #8
    1b9c:	6573696c 	ldrbvs	r6, [r3, #-2412]!	; 0xfffff694
    1ba0:	63617453 	cmnvs	r1, #1392508928	; 0x53000000
    1ba4:	7870006b 	ldmdavc	r0!, {r0, r1, r3, r5, r6}^
    1ba8:	6d6d7544 	cfstr64vs	mvdx7, [sp, #-272]!	; 0xfffffef0
    1bac:	75003179 	strvc	r3, [r0, #-377]	; 0xfffffe87
    1bb0:	6d754463 	cfldrdvs	mvd4, [r5, #-396]!	; 0xfffffe74
    1bb4:	3931796d 	ldmdbcc	r1!, {r0, r2, r3, r5, r6, r8, fp, ip, sp, lr}
    1bb8:	44787000 	ldrbtmi	r7, [r8], #-0
    1bbc:	796d6d75 	stmdbvc	sp!, {r0, r2, r4, r5, r6, r8, sl, fp, sp, lr}^
    1bc0:	44650036 	strbtmi	r0, [r5], #-54	; 0xffffffca
    1bc4:	74656c65 	strbtvc	r6, [r5], #-3173	; 0xfffff39b
    1bc8:	75006465 	strvc	r6, [r0, #-1125]	; 0xfffffb9b
    1bcc:	7361546c 	cmnvc	r1, #108, 8	; 0x6c000000
    1bd0:	6e65476b 	cdpvs	7, 6, cr4, cr5, cr11, {3}
    1bd4:	63697265 	cmnvs	r9, #1342177286	; 0x50000006
    1bd8:	69746f4e 	ldmdbvs	r4!, {r1, r2, r3, r6, r8, r9, sl, fp, sp, lr}^
    1bdc:	61567966 	cmpvs	r6, r6, ror #18
    1be0:	4365756c 	cmnmi	r5, #108, 10	; 0x1b000000
    1be4:	7261656c 	rsbvc	r6, r1, #108, 10	; 0x1b000000
    1be8:	4c6c7500 	cfstr64mi	mvdx7, [ip], #-0
    1bec:	74676e65 	strbtvc	r6, [r7], #-3685	; 0xfffff19b
    1bf0:	426e4968 	rsbmi	r4, lr, #104, 18	; 0x1a0000
    1bf4:	73657479 	cmnvc	r5, #2030043136	; 0x79000000
    1bf8:	78707000 	ldmdavc	r0!, {ip, sp, lr}^
    1bfc:	656c6449 	strbvs	r6, [ip, #-1097]!	; 0xfffffbb7
    1c00:	6b736154 	blvs	1cda158 <__RAM_SIZE+0x1bda158>
    1c04:	42424354 	submi	r4, r2, #84, 6	; 0x50000001
    1c08:	65666675 	strbvs	r6, [r6, #-1653]!	; 0xfffff98b
    1c0c:	72700072 	rsbsvc	r0, r0, #114	; 0x72
    1c10:	73655276 	cmnvc	r5, #1610612743	; 0x60000007
    1c14:	654e7465 	strbvs	r7, [lr, #-1125]	; 0xfffffb9b
    1c18:	61547478 	cmpvs	r4, r8, ror r4
    1c1c:	6e556b73 	vmovvs.s8	r6, d5[3]
    1c20:	636f6c62 	cmnvs	pc, #25088	; 0x6200
    1c24:	6d69546b 	cfstrdvs	mvd5, [r9, #-428]!	; 0xfffffe54
    1c28:	78750065 	ldmdavc	r5!, {r0, r2, r5, r6}^
    1c2c:	5077654e 	rsbspl	r6, r7, lr, asr #10
    1c30:	726f6972 	rsbvc	r6, pc, #1867776	; 0x1c8000
    1c34:	00797469 	rsbseq	r7, r9, r9, ror #8
    1c38:	6b736154 	blvs	1cda190 <__RAM_SIZE+0x1bda190>
    1c3c:	636e7546 	cmnvs	lr, #293601280	; 0x11800000
    1c40:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    1c44:	7000745f 	andvc	r7, r0, pc, asr r4
    1c48:	72506c75 	subsvc	r6, r0, #29952	; 0x7500
    1c4c:	6f697665 	svcvs	0x00697665
    1c50:	6f4e7375 	svcvs	0x004e7375
    1c54:	69666974 	stmdbvs	r6!, {r2, r4, r5, r6, r8, fp, sp, lr}^
    1c58:	69746163 	ldmdbvs	r4!, {r0, r1, r5, r6, r8, sp, lr}^
    1c5c:	61566e6f 	cmpvs	r6, pc, ror #28
    1c60:	0065756c 	rsbeq	r7, r5, ip, ror #10
    1c64:	69547870 	ldmdbvs	r4, {r4, r5, r6, fp, ip, sp, lr}^
    1c68:	754f656d 	strbvc	r6, [pc, #-1389]	; 1703 <__HEAP_SIZE+0x703>
    1c6c:	78750074 	ldmdavc	r5!, {r2, r4, r5, r6}^
    1c70:	6b736154 	blvs	1cda1c8 <__RAM_SIZE+0x1bda1c8>
    1c74:	6f697250 	svcvs	0x00697250
    1c78:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    1c7c:	46746547 	ldrbtmi	r6, [r4], -r7, asr #10
    1c80:	496d6f72 	stmdbmi	sp!, {r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
    1c84:	75005253 	strvc	r5, [r0, #-595]	; 0xfffffdad
    1c88:	6d754463 	cfldrdvs	mvd4, [r5, #-396]!	; 0xfffffe74
    1c8c:	3132796d 	teqcc	r2, sp, ror #18
    1c90:	61547800 	cmpvs	r4, r0, lsl #16
    1c94:	65476b73 	strbvs	r6, [r7, #-2931]	; 0xfffff48d
    1c98:	63695474 	cmnvs	r9, #116, 8	; 0x74000000
    1c9c:	756f436b 	strbvc	r4, [pc, #-875]!	; 1939 <__HEAP_SIZE+0x939>
    1ca0:	7800746e 	stmdavc	r0, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
    1ca4:	6b636954 	blvs	18dc1fc <__RAM_SIZE+0x17dc1fc>
    1ca8:	4a6f5473 	bmi	1bd6e7c <__RAM_SIZE+0x1ad6e7c>
    1cac:	00706d75 	rsbseq	r6, r0, r5, ror sp
    1cb0:	61547875 	cmpvs	r4, r5, ror r8
    1cb4:	754e6b73 	strbvc	r6, [lr, #-2931]	; 0xfffff48d
    1cb8:	7265626d 	rsbvc	r6, r5, #-805306362	; 0xd0000006
    1cbc:	63416500 	movtvs	r6, #5376	; 0x1500
    1cc0:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    1cc4:	54787500 	ldrbtpl	r7, [r8], #-1280	; 0xfffffb00
    1cc8:	526b7361 	rsbpl	r7, fp, #-2080374783	; 0x84000001
    1ccc:	74657365 	strbtvc	r7, [r5], #-869	; 0xfffffc9b
    1cd0:	6e657645 	cdpvs	6, 6, cr7, cr5, cr5, {2}
    1cd4:	65744974 	ldrbvs	r4, [r4, #-2420]!	; 0xfffff68c
    1cd8:	6c61566d 	stclvs	6, cr5, [r1], #-436	; 0xfffffe4c
    1cdc:	76006575 			; <UNDEFINED> instruction: 0x76006575
    1ce0:	6b736154 	blvs	1cda238 <__RAM_SIZE+0x1bda238>
    1ce4:	6f697250 	svcvs	0x00697250
    1ce8:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    1cec:	00746553 	rsbseq	r6, r4, r3, asr r5
    1cf0:	61547875 	cmpvs	r4, r5, ror r8
    1cf4:	61426b73 	hvcvs	9907	; 0x26b3
    1cf8:	72506573 	subsvc	r6, r0, #482344960	; 0x1cc00000
    1cfc:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    1d00:	65477974 	strbvs	r7, [r7, #-2420]	; 0xfffff68c
    1d04:	6f724674 	svcvs	0x00724674
    1d08:	5253496d 	subspl	r4, r3, #1785856	; 0x1b4000
    1d0c:	61546500 	cmpvs	r4, r0, lsl #10
    1d10:	74536b73 	ldrbvc	r6, [r3], #-2931	; 0xfffff48d
    1d14:	00657461 	rsbeq	r7, r5, r1, ror #8
    1d18:	54787070 	ldrbtpl	r7, [r8], #-112	; 0xffffff90
    1d1c:	426b7361 	rsbmi	r7, fp, #-2080374783	; 0x84000001
    1d20:	65666675 	strbvs	r6, [r6, #-1653]!	; 0xfffff98b
    1d24:	78700072 	ldmdavc	r0!, {r1, r4, r5, r6}^
    1d28:	4d646e45 	stclmi	14, cr6, [r4, #-276]!	; 0xfffffeec
    1d2c:	656b7261 	strbvs	r7, [fp, #-609]!	; 0xfffffd9f
    1d30:	75700072 	ldrbvc	r0, [r0, #-114]!	; 0xffffff8e
    1d34:	6c644978 			; <UNDEFINED> instruction: 0x6c644978
    1d38:	73615465 	cmnvc	r1, #1694498816	; 0x65000000
    1d3c:	6174536b 	cmnvs	r4, fp, ror #6
    1d40:	69536b63 	ldmdbvs	r3, {r0, r1, r5, r6, r8, r9, fp, sp, lr}^
    1d44:	7800657a 	stmdavc	r0, {r1, r3, r4, r5, r6, r8, sl, sp, lr}
    1d48:	6b736154 	blvs	1cda2a0 <__RAM_SIZE+0x1bda2a0>
    1d4c:	6f4e6f54 	svcvs	0x004e6f54
    1d50:	79666974 	stmdbvc	r6!, {r2, r4, r5, r6, r8, fp, sp, lr}^
    1d54:	61547800 	cmpvs	r4, r0, lsl #16
    1d58:	70006b73 	andvc	r6, r0, r3, ror fp
    1d5c:	6d754478 	cfldrdvs	mvd4, [r5, #-480]!	; 0xfffffe20
    1d60:	3431796d 	ldrtcc	r7, [r1], #-2413	; 0xfffff693
    1d64:	61547800 	cmpvs	r4, r0, lsl #16
    1d68:	6f546b73 	svcvs	0x00546b73
    1d6c:	72657551 	rsbvc	r7, r5, #339738624	; 0x14400000
    1d70:	53650079 	cmnpl	r5, #121	; 0x79
    1d74:	69427465 	stmdbvs	r2, {r0, r2, r5, r6, sl, ip, sp, lr}^
    1d78:	78007374 	stmdavc	r0, {r2, r4, r5, r6, r8, r9, ip, sp, lr}
    1d7c:	4f4d454d 	svcmi	0x004d454d
    1d80:	525f5952 	subspl	r5, pc, #1343488	; 0x148000
    1d84:	4f494745 	svcmi	0x00494745
    1d88:	7875004e 	ldmdavc	r5!, {r1, r2, r3, r6}^
    1d8c:	72727543 	rsbsvc	r7, r2, #281018368	; 0x10c00000
    1d90:	4c746e65 	ldclmi	14, cr6, [r4], #-404	; 0xfffffe6c
    1d94:	4c747369 	ldclmi	3, cr7, [r4], #-420	; 0xfffffe5c
    1d98:	74676e65 	strbtvc	r6, [r7], #-3685	; 0xfffff19b
    1d9c:	54760068 	ldrbtpl	r0, [r6], #-104	; 0xffffff98
    1da0:	446b7361 	strbtmi	r7, [fp], #-865	; 0xfffffc9f
    1da4:	74656c65 	strbtvc	r6, [r5], #-3173	; 0xfffff39b
    1da8:	63750065 	cmnvs	r5, #101	; 0x65
    1dac:	6d6d7544 	cfstr64vs	mvdx7, [sp, #-272]!	; 0xfffffef0
    1db0:	78003779 	stmdavc	r0, {r0, r3, r4, r5, r6, r8, r9, sl, ip, sp}
    1db4:	6b736154 	blvs	1cda30c <__RAM_SIZE+0x1bda30c>
    1db8:	6c6c6143 	stfvse	f6, [ip], #-268	; 0xfffffef4
    1dbc:	6c707041 	ldclvs	0, cr7, [r0], #-260	; 0xfffffefc
    1dc0:	74616369 	strbtvc	r6, [r1], #-873	; 0xfffffc97
    1dc4:	546e6f69 	strbtpl	r6, [lr], #-3945	; 0xfffff097
    1dc8:	486b7361 	stmdami	fp!, {r0, r5, r6, r8, r9, ip, sp, lr}^
    1dcc:	006b6f6f 	rsbeq	r6, fp, pc, ror #30
    1dd0:	72507875 	subsvc	r7, r0, #7667712	; 0x750000
    1dd4:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    1dd8:	6f547974 	svcvs	0x00547974
    1ddc:	00657355 	rsbeq	r7, r5, r5, asr r3
    1de0:	73615476 	cmnvc	r1, #1979711488	; 0x76000000
    1de4:	6977536b 	ldmdbvs	r7!, {r0, r1, r3, r5, r6, r8, r9, ip, lr}^
    1de8:	43686374 	cmnmi	r8, #116, 6	; 0xd0000001
    1dec:	65746e6f 	ldrbvs	r6, [r4, #-3695]!	; 0xfffff191
    1df0:	78007478 	stmdavc	r0, {r3, r4, r5, r6, sl, ip, sp, lr}
    1df4:	4f6d754e 	svcmi	0x006d754e
    1df8:	65764f66 	ldrbvs	r4, [r6, #-3942]!	; 0xfffff09a
    1dfc:	6f6c6672 	svcvs	0x006c6672
    1e00:	78007377 	stmdavc	r0, {r0, r1, r2, r4, r5, r6, r8, r9, ip, sp, lr}
    1e04:	61657242 	cmnvs	r5, r2, asr #4
    1e08:	6f6f4c6b 	svcvs	0x006f4c6b
    1e0c:	54780070 	ldrbtpl	r0, [r8], #-112	; 0xffffff90
    1e10:	476b7361 	strbmi	r7, [fp, -r1, ror #6]!
    1e14:	74537465 	ldrbvc	r7, [r3], #-1125	; 0xfffffb9b
    1e18:	63697461 	cmnvs	r9, #1627389952	; 0x61000000
    1e1c:	66667542 	strbtvs	r7, [r6], -r2, asr #10
    1e20:	00737265 	rsbseq	r7, r3, r5, ror #4
    1e24:	75437870 	strbvc	r7, [r3, #-2160]	; 0xfffff790
    1e28:	6e657272 	mcrvs	2, 3, r7, cr5, cr2, {3}
    1e2c:	42435474 	submi	r5, r3, #116, 8	; 0x74000000
    1e30:	48787500 	ldmdami	r8!, {r8, sl, ip, sp, lr}^
    1e34:	65686769 	strbvs	r6, [r8, #-1897]!	; 0xfffff897
    1e38:	72507473 	subsvc	r7, r0, #1929379840	; 0x73000000
    1e3c:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    1e40:	61577974 	cmpvs	r7, r4, ror r9
    1e44:	6e697469 	cdpvs	4, 6, cr7, cr9, cr9, {3}
    1e48:	73615467 	cmnvc	r1, #1728053248	; 0x67000000
    1e4c:	5378006b 	cmnpl	r8, #107	; 0x6b
    1e50:	6c756f68 	ldclvs	15, cr6, [r5], #-416	; 0xfffffe60
    1e54:	6f6c4264 	svcvs	0x006c4264
    1e58:	63006b63 	movwvs	r6, #2915	; 0xb63
    1e5c:	7478654e 	ldrbtvc	r6, [r8], #-1358	; 0xfffffab2
    1e60:	72616843 	rsbvc	r6, r1, #4390912	; 0x430000
    1e64:	54787000 	ldrbtpl	r7, [r8], #-0
    1e68:	546b7361 	strbtpl	r7, [fp], #-865	; 0xfffffc9f
    1e6c:	70006761 	andvc	r6, r0, r1, ror #14
    1e70:	6e497672 	mcrvs	6, 2, r7, cr9, cr2, {3}
    1e74:	61697469 	cmnvs	r9, r9, ror #8
    1e78:	6573696c 	ldrbvs	r6, [r3, #-2412]!	; 0xfffff694
    1e7c:	5477654e 	ldrbtpl	r6, [r7], #-1358	; 0xfffffab2
    1e80:	006b7361 	rsbeq	r7, fp, r1, ror #6
    1e84:	61507670 	cmpvs	r0, r0, ror r6
    1e88:	656d6172 	strbvs	r6, [sp, #-370]!	; 0xfffffe8e
    1e8c:	73726574 	cmnvc	r2, #116, 10	; 0x1d000000
    1e90:	44787000 	ldrbtmi	r7, [r8], #-0
    1e94:	79616c65 	stmdbvc	r1!, {r0, r2, r5, r6, sl, fp, sp, lr}^
    1e98:	61546465 	cmpvs	r4, r5, ror #8
    1e9c:	694c6b73 	stmdbvs	ip, {r0, r1, r4, r5, r6, r8, r9, fp, sp, lr}^
    1ea0:	70007473 	andvc	r7, r0, r3, ror r4
    1ea4:	61547672 	cmpvs	r4, r2, ror r6
    1ea8:	73496b73 	movtvc	r6, #39795	; 0x9b73
    1eac:	6b736154 	blvs	1cda404 <__RAM_SIZE+0x1bda404>
    1eb0:	70737553 	rsbsvc	r7, r3, r3, asr r5
    1eb4:	65646e65 	strbvs	r6, [r4, #-3685]!	; 0xfffff19b
    1eb8:	53780064 	cmnpl	r8, #100	; 0x64
    1ebc:	63746977 	cmnvs	r4, #1949696	; 0x1dc000
    1ec0:	71655268 	cmnvc	r5, r8, ror #4
    1ec4:	65726975 	ldrbvs	r6, [r2, #-2421]!	; 0xfffff68b
    1ec8:	78700064 	ldmdavc	r0!, {r2, r5, r6}^
    1ecc:	6574754d 	ldrbvs	r7, [r4, #-1357]!	; 0xfffffab3
    1ed0:	6c6f4878 	stclvs	8, cr4, [pc], #-480	; 1cf8 <__HEAP_SIZE+0xcf8>
    1ed4:	00726564 	rsbseq	r6, r2, r4, ror #10
    1ed8:	74537870 	ldrbvc	r7, [r3], #-2160	; 0xfffff790
    1edc:	006b6361 	rsbeq	r6, fp, r1, ror #6
    1ee0:	54787070 	ldrbtpl	r7, [r8], #-112	; 0xffffff90
    1ee4:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    1ee8:	6b736154 	blvs	1cda440 <__RAM_SIZE+0x1bda440>
    1eec:	42424354 	submi	r4, r2, #84, 6	; 0x50000001
    1ef0:	65666675 	strbvs	r6, [r6, #-1653]!	; 0xfffff98b
    1ef4:	54780072 	ldrbtpl	r0, [r8], #-114	; 0xffffff8e
    1ef8:	546b7361 	strbtpl	r7, [fp], #-865	; 0xfffffc9f
    1efc:	6c65446f 	cfstrdvs	mvd4, [r5], #-444	; 0xfffffe44
    1f00:	00657465 	rsbeq	r7, r5, r5, ror #8
    1f04:	61566c75 	cmpvs	r6, r5, ror ip
    1f08:	0065756c 	rsbeq	r7, r5, ip, ror #10
    1f0c:	73615478 	cmnvc	r1, #120, 8	; 0x78000000
    1f10:	536f546b 	cmnpl	pc, #1795162112	; 0x6b000000
    1f14:	65707375 	ldrbvs	r7, [r0, #-885]!	; 0xfffffc8b
    1f18:	7600646e 	strvc	r6, [r0], -lr, ror #8
    1f1c:	74726f50 	ldrbtvc	r6, [r2], #-3920	; 0xfffff0b0
    1f20:	53646e45 	cmnpl	r4, #1104	; 0x450
    1f24:	64656863 	strbtvs	r6, [r5], #-2147	; 0xfffff79d
    1f28:	72656c75 	rsbvc	r6, r5, #29952	; 0x7500
    1f2c:	49787000 	ldmdbmi	r8!, {ip, sp, lr}^
    1f30:	54656c64 	strbtpl	r6, [r5], #-3172	; 0xfffff39c
    1f34:	466b7361 	strbtmi	r7, [fp], -r1, ror #6
    1f38:	74636e75 	strbtvc	r6, [r3], #-3701	; 0xfffff18b
    1f3c:	006e6f69 	rsbeq	r6, lr, r9, ror #30
    1f40:	72507870 	subsvc	r7, r0, #112, 16	; 0x700000
    1f44:	6f697665 	svcvs	0x00697665
    1f48:	61577375 	cmpvs	r7, r5, ror r3
    1f4c:	6954656b 	ldmdbvs	r4, {r0, r1, r3, r5, r6, r8, sl, sp, lr}^
    1f50:	7800656d 	stmdavc	r0, {r0, r2, r3, r5, r6, r8, sl, sp, lr}
    1f54:	54415453 	strbpl	r5, [r1], #-1107	; 0xfffffbad
    1f58:	545f4349 	ldrbpl	r4, [pc], #-841	; 1f60 <__HEAP_SIZE+0xf60>
    1f5c:	78004243 	stmdavc	r0, {r0, r1, r6, r9, lr}
    1f60:	6b736154 	blvs	1cda4b8 <__RAM_SIZE+0x1bda4b8>
    1f64:	726f6241 	rsbvc	r6, pc, #268435460	; 0x10000004
    1f68:	6c654474 	cfstrdvs	mvd4, [r5], #-464	; 0xfffffe30
    1f6c:	78007961 	stmdavc	r0, {r0, r5, r6, r8, fp, ip, sp, lr}
    1f70:	6b736154 	blvs	1cda4c8 <__RAM_SIZE+0x1bda4c8>
    1f74:	75736552 	ldrbvc	r6, [r3, #-1362]!	; 0xfffffaae
    1f78:	7246656d 	subvc	r6, r6, #457179136	; 0x1b400000
    1f7c:	53496d6f 	movtpl	r6, #40303	; 0x9d6f
    1f80:	6c750052 	ldclvs	0, cr0, [r5], #-328	; 0xfffffeb8
    1f84:	6d6d7544 	cfstr64vs	mvdx7, [sp, #-272]!	; 0xfffffef0
    1f88:	00383179 	eorseq	r3, r8, r9, ror r1
    1f8c:	4e6c7570 	mcrmi	5, 3, r7, cr12, cr0, {3}
    1f90:	6669746f 	strbtvs	r7, [r9], -pc, ror #8
    1f94:	74616369 	strbtvc	r6, [r1], #-873	; 0xfffffc97
    1f98:	566e6f69 	strbtpl	r6, [lr], -r9, ror #30
    1f9c:	65756c61 	ldrbvs	r6, [r5, #-3169]!	; 0xfffff39f
    1fa0:	49787500 	ldmdbmi	r8!, {r8, sl, ip, sp, lr}^
    1fa4:	54656c64 	strbtpl	r6, [r5], #-3172	; 0xfffff39c
    1fa8:	536b7361 	cmnpl	fp, #-2080374783	; 0x84000001
    1fac:	6b636174 	blvs	18da584 <__RAM_SIZE+0x17da584>
    1fb0:	73615400 	cmnvc	r1, #0, 8
    1fb4:	6f6f486b 	svcvs	0x006f486b
    1fb8:	6e75466b 	cdpvs	6, 7, cr4, cr5, cr11, {3}
    1fbc:	6f697463 	svcvs	0x00697463
    1fc0:	00745f6e 	rsbseq	r5, r4, lr, ror #30
    1fc4:	61745365 	cmnvs	r4, r5, ror #6
    1fc8:	7261646e 	rsbvc	r6, r1, #1845493760	; 0x6e000000
    1fcc:	656c5364 	strbvs	r5, [ip, #-868]!	; 0xfffffc9c
    1fd0:	75007065 	strvc	r7, [r0, #-101]	; 0xffffff9b
    1fd4:	756f4378 	strbvc	r4, [pc, #-888]!	; 1c64 <__HEAP_SIZE+0xc64>
    1fd8:	6500746e 	strvs	r7, [r0, #-1134]	; 0xfffffb92
    1fdc:	61546f4e 	cmpvs	r4, lr, asr #30
    1fe0:	57736b73 			; <UNDEFINED> instruction: 0x57736b73
    1fe4:	69746961 	ldmdbvs	r4!, {r0, r5, r6, r8, fp, sp, lr}^
    1fe8:	6954676e 	ldmdbvs	r4, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}^
    1fec:	756f656d 	strbvc	r6, [pc, #-1389]!	; 1a87 <__HEAP_SIZE+0xa87>
    1ff0:	75700074 	ldrbvc	r0, [r0, #-116]!	; 0xffffff8c
    1ff4:	646e4563 	strbtvs	r4, [lr], #-1379	; 0xfffffa9d
    1ff8:	7453664f 	ldrbvc	r6, [r3], #-1615	; 0xfffff9b1
    1ffc:	006b6361 	rsbeq	r6, fp, r1, ror #6
    2000:	754d7870 	strbvc	r7, [sp, #-2160]	; 0xfffff790
    2004:	48786574 	ldmdami	r8!, {r2, r4, r5, r6, r8, sl, sp, lr}^
    2008:	65646c6f 	strbvs	r6, [r4, #-3183]!	; 0xfffff391
    200c:	42435472 	submi	r5, r3, #1912602624	; 0x72000000
    2010:	54637000 	strbtpl	r7, [r3], #-0
    2014:	476b7361 	strbmi	r7, [fp, -r1, ror #6]!
    2018:	614e7465 	cmpvs	lr, r5, ror #8
    201c:	7800656d 	stmdavc	r0, {r0, r2, r3, r5, r6, r8, sl, sp, lr}
    2020:	6b636954 	blvs	18dc578 <__RAM_SIZE+0x17dc578>
    2024:	43780073 	cmnmi	r8, #115	; 0x73
    2028:	6c426e61 	mcrrvs	14, 6, r6, r2, cr1
    202c:	496b636f 	stmdbmi	fp!, {r0, r1, r2, r3, r5, r6, r8, r9, sp, lr}^
    2030:	6665646e 	strbtvs	r6, [r5], -lr, ror #8
    2034:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
    2038:	00796c65 	rsbseq	r6, r9, r5, ror #24
    203c:	6e755265 	cdpvs	2, 7, cr5, cr5, cr5, {3}
    2040:	676e696e 	strbvs	r6, [lr, -lr, ror #18]!
    2044:	4e637000 	cdpmi	0, 6, cr7, cr3, cr0, {0}
    2048:	54656d61 	strbtpl	r6, [r5], #-3425	; 0xfffff29f
    204c:	6575516f 	ldrbvs	r5, [r5, #-367]!	; 0xfffffe91
    2050:	70007972 	andvc	r7, r0, r2, ror r9
    2054:	73614276 	cmnvc	r1, #1610612743	; 0x60000007
    2058:	64644165 	strbtvs	r4, [r4], #-357	; 0xfffffe9b
    205c:	73736572 	cmnvc	r3, #478150656	; 0x1c800000
    2060:	69547800 	ldmdbvs	r4, {fp, ip, sp, lr}^
    2064:	54736b63 	ldrbtpl	r6, [r3], #-2915	; 0xfffff49d
    2068:	6c65446f 	cfstrdvs	mvd4, [r5], #-444	; 0xfffffe44
    206c:	76007961 	strvc	r7, [r0], -r1, ror #18
    2070:	6b736154 	blvs	1cda5c8 <__RAM_SIZE+0x1bda5c8>
    2074:	656e6547 	strbvs	r6, [lr, #-1351]!	; 0xfffffab9
    2078:	4e636972 			; <UNDEFINED> instruction: 0x4e636972
    207c:	6669746f 	strbtvs	r7, [r9], -pc, ror #8
    2080:	76694779 			; <UNDEFINED> instruction: 0x76694779
    2084:	6f724665 	svcvs	0x00724665
    2088:	5253496d 	subspl	r4, r3, #1785856	; 0x1b4000
    208c:	6f507600 	svcvs	0x00507600
    2090:	75537472 	ldrbvc	r7, [r3, #-1138]	; 0xfffffb8e
    2094:	65727070 	ldrbvs	r7, [r2, #-112]!	; 0xffffff90
    2098:	69547373 	ldmdbvs	r4, {r0, r1, r4, r5, r6, r8, r9, ip, sp, lr}^
    209c:	41736b63 	cmnmi	r3, r3, ror #22
    20a0:	6c53646e 	cfldrdvs	mvd6, [r3], {110}	; 0x6e
    20a4:	00706565 	rsbseq	r6, r0, r5, ror #10
    20a8:	54787570 	ldrbtpl	r7, [r8], #-1392	; 0xfffffa90
    20ac:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    20b0:	6b736154 	blvs	1cda608 <__RAM_SIZE+0x1bda608>
    20b4:	63617453 	cmnvs	r1, #1392508928	; 0x53000000
    20b8:	7a69536b 	bvc	1a56e6c <__RAM_SIZE+0x1956e6c>
    20bc:	2e2e0065 	cdpcs	0, 2, cr0, cr14, cr5, {3}
    20c0:	2f2e2e2f 	svccs	0x002e2e2f
    20c4:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 2014 <__HEAP_SIZE+0x1014>
    20c8:	74726269 	ldrbtvc	r6, [r2], #-617	; 0xfffffd97
    20cc:	462f736f 	strtmi	r7, [pc], -pc, ror #6
    20d0:	52656572 	rsbpl	r6, r5, #478150656	; 0x1c800000
    20d4:	2f534f54 	svccs	0x00534f54
    20d8:	6b736174 	blvs	1cda6b0 <__RAM_SIZE+0x1bda6b0>
    20dc:	00632e73 	rsbeq	r2, r3, r3, ror lr
    20e0:	69547870 	ldmdbvs	r4, {r4, r5, r6, fp, ip, sp, lr}^
    20e4:	54736b63 	ldrbtpl	r6, [r3], #-2915	; 0xfffff49d
    20e8:	6961576f 	stmdbvs	r1!, {r0, r1, r2, r3, r5, r6, r8, r9, sl, ip, lr}^
    20ec:	49650074 	stmdbmi	r5!, {r2, r4, r5, r6}^
    20f0:	6c61766e 	stclvs	6, cr7, [r1], #-440	; 0xfffffe48
    20f4:	75006469 	strvc	r6, [r0, #-1129]	; 0xfffffb97
    20f8:	706f5478 	rsbvc	r5, pc, r8, ror r4	; <UNPREDICTABLE>
    20fc:	6f697250 	svcvs	0x00697250
    2100:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    2104:	42787500 	rsbsmi	r7, r8, #0, 10
    2108:	50657361 	rsbpl	r7, r5, r1, ror #6
    210c:	726f6972 	rsbvc	r6, pc, #1867776	; 0x1c8000
    2110:	00797469 	rsbseq	r7, r9, r9, ror #8
    2114:	72507875 	subsvc	r7, r0, #7667712	; 0x750000
    2118:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    211c:	73557974 	cmpvc	r5, #116, 18	; 0x1d0000
    2120:	6e4f6465 	cdpvs	4, 4, cr6, cr15, cr5, {3}
    2124:	72746e45 	rsbsvc	r6, r4, #1104	; 0x450
    2128:	43540079 	cmpmi	r4, #121	; 0x79
    212c:	00745f42 	rsbseq	r5, r4, r2, asr #30
    2130:	44767270 	ldrbtmi	r7, [r6], #-624	; 0xfffffd90
    2134:	74656c65 	strbtvc	r6, [r5], #-3173	; 0xfffff39b
    2138:	42435465 	submi	r5, r3, #1694498816	; 0x65000000
    213c:	6c426500 	cfstr64vs	mvdx6, [r2], {-0}
    2140:	656b636f 	strbvs	r6, [fp, #-879]!	; 0xfffffc91
    2144:	54760064 	ldrbtpl	r0, [r6], #-100	; 0xffffff9c
    2148:	536b7361 	cmnpl	fp, #-2080374783	; 0x84000001
    214c:	65707375 	ldrbvs	r7, [r0, #-885]!	; 0xfffffc8b
    2150:	7800646e 	stmdavc	r0, {r1, r2, r3, r5, r6, sl, sp, lr}
    2154:	65726c41 	ldrbvs	r6, [r2, #-3137]!	; 0xfffff3bf
    2158:	59796461 	ldmdbpl	r9!, {r0, r5, r6, sl, sp, lr}^
    215c:	646c6569 	strbtvs	r6, [ip], #-1385	; 0xfffffa97
    2160:	70006465 	andvc	r6, r0, r5, ror #8
    2164:	65764578 	ldrbvs	r4, [r6, #-1400]!	; 0xfffffa88
    2168:	694c746e 	stmdbvs	ip, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
    216c:	74497473 	strbvc	r7, [r9], #-1139	; 0xfffffb8d
    2170:	70006d65 	andvc	r6, r0, r5, ror #26
    2174:	72615076 	rsbvc	r5, r1, #118	; 0x76
    2178:	74656d61 	strbtvc	r6, [r5], #-3425	; 0xfffff29f
    217c:	78007265 	stmdavc	r0, {r0, r2, r5, r6, r9, ip, sp, lr}
    2180:	646e6550 	strbtvs	r6, [lr], #-1360	; 0xfffffab0
    2184:	69546465 	ldmdbvs	r4, {r0, r2, r5, r6, sl, sp, lr}^
    2188:	00736b63 	rsbseq	r6, r3, r3, ror #22
    218c:	54767270 	ldrbtpl	r7, [r6], #-624	; 0xfffffd90
    2190:	436b7361 	cmnmi	fp, #-2080374783	; 0x84000001
    2194:	6b636568 	blvs	18db73c <__RAM_SIZE+0x17db73c>
    2198:	65657246 	strbvs	r7, [r5, #-582]!	; 0xfffffdba
    219c:	63617453 	cmnvs	r1, #1392508928	; 0x53000000
    21a0:	6170536b 	cmnvs	r0, fp, ror #6
    21a4:	75006563 	strvc	r6, [r0, #-1379]	; 0xfffffa9d
    21a8:	72754378 	rsbsvc	r4, r5, #120, 6	; 0xe0000001
    21ac:	746e6572 	strbtvc	r6, [lr], #-1394	; 0xfffffa8e
    21b0:	65736142 	ldrbvs	r6, [r3, #-322]!	; 0xfffffebe
    21b4:	6f697250 	svcvs	0x00697250
    21b8:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    21bc:	69547800 	ldmdbvs	r4, {fp, ip, sp, lr}^
    21c0:	54736b63 	ldrbtpl	r6, [r3], #-2915	; 0xfffff49d
    21c4:	7461436f 	strbtvc	r4, [r1], #-879	; 0xfffffc91
    21c8:	70556863 	subsvc	r6, r5, r3, ror #16
    21cc:	65527800 	ldrbvs	r7, [r2, #-2048]	; 0xfffff800
    21d0:	6e6f6967 	vnmulvs.f16	s13, s30, s15	; <UNPREDICTABLE>
    21d4:	72700073 	rsbsvc	r0, r0, #115	; 0x73
    21d8:	64644176 	strbtvs	r4, [r4], #-374	; 0xfffffe8a
    21dc:	72727543 	rsbsvc	r7, r2, #281018368	; 0x10c00000
    21e0:	54746e65 	ldrbtpl	r6, [r4], #-3685	; 0xfffff19b
    21e4:	546b7361 	strbtpl	r7, [fp], #-865	; 0xfffffc9f
    21e8:	6c65446f 	cfstrdvs	mvd4, [r5], #-444	; 0xfffffe44
    21ec:	64657961 	strbtvs	r7, [r5], #-2401	; 0xfffff69f
    21f0:	7473694c 	ldrbtvc	r6, [r3], #-2380	; 0xfffff6b4
    21f4:	4e787500 	cdpmi	5, 7, cr7, cr8, cr0, {0}
    21f8:	70416e6f 	subvc	r6, r1, pc, ror #28
    21fc:	63696c70 	cmnvs	r9, #112, 24	; 0x7000
    2200:	6f697461 	svcvs	0x00697461
    2204:	7361546e 	cmnvc	r1, #1845493760	; 0x6e000000
    2208:	6300736b 	movwvs	r7, #875	; 0x36b
    220c:	656c6449 	strbvs	r6, [ip, #-1097]!	; 0xfffffbb7
    2210:	656d614e 	strbvs	r6, [sp, #-334]!	; 0xfffffeb2
    2214:	61547800 	cmpvs	r4, r0, lsl #16
    2218:	65476b73 	strbvs	r6, [r7, #-2931]	; 0xfffff48d
    221c:	72754374 	rsbsvc	r4, r5, #116, 6	; 0xd0000001
    2220:	746e6572 	strbtvc	r6, [lr], #-1394	; 0xfffffa8e
    2224:	6b736154 	blvs	1cda77c <__RAM_SIZE+0x1bda77c>
    2228:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
    222c:	6f46656c 	svcvs	0x0046656c
    2230:	726f4372 	rsbvc	r4, pc, #-939524095	; 0xc8000001
    2234:	78750065 	ldmdavc	r5!, {r0, r2, r5, r6}^
    2238:	6b736154 	blvs	1cda790 <__RAM_SIZE+0x1bda790>
    223c:	65736142 	ldrbvs	r6, [r3, #-322]!	; 0xfffffebe
    2240:	6f697250 	svcvs	0x00697250
    2244:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    2248:	00746547 	rsbseq	r6, r4, r7, asr #10
    224c:	75437875 	strbvc	r7, [r3, #-2165]	; 0xfffff78b
    2250:	6e657272 	mcrvs	2, 3, r7, cr5, cr2, {3}
    2254:	6d754e74 	ldclvs	14, cr4, [r5, #-464]!	; 0xfffffe30
    2258:	4f726562 	svcmi	0x00726562
    225c:	73615466 	cmnvc	r1, #1711276032	; 0x66000000
    2260:	7800736b 	stmdavc	r0, {r0, r1, r3, r5, r6, r8, r9, ip, sp, lr}
    2264:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    2268:	72636e49 	rsbvc	r6, r3, #1168	; 0x490
    226c:	6e656d65 	cdpvs	13, 6, cr6, cr5, cr5, {3}
    2270:	54780074 	ldrbtpl	r0, [r8], #-116	; 0xffffff8c
    2274:	476b7361 	strbmi	r7, [fp, -r1, ror #6]!
    2278:	64497465 	strbvs	r7, [r9], #-1125	; 0xfffffb9b
    227c:	6154656c 	cmpvs	r4, ip, ror #10
    2280:	61486b73 	hvcvs	34483	; 0x86b3
    2284:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
    2288:	69547800 	ldmdbvs	r4, {fp, ip, sp, lr}^
    228c:	6f54656d 	svcvs	0x0054656d
    2290:	656b6157 	strbvs	r6, [fp, #-343]!	; 0xfffffea9
    2294:	74537800 	ldrbvc	r7, [r3], #-2048	; 0xfffff800
    2298:	4c657461 	cfstrdmi	mvd7, [r5], #-388	; 0xfffffe7c
    229c:	49747369 	ldmdbmi	r4!, {r0, r3, r5, r6, r8, r9, ip, sp, lr}^
    22a0:	006d6574 	rsbeq	r6, sp, r4, ror r5
    22a4:	70704176 	rsbsvc	r4, r0, r6, ror r1
    22a8:	6163696c 	cmnvs	r3, ip, ror #18
    22ac:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    22b0:	49746547 	ldmdbmi	r4!, {r0, r1, r2, r6, r8, sl, sp, lr}^
    22b4:	54656c64 	strbtpl	r6, [r5], #-3172	; 0xfffff39c
    22b8:	4d6b7361 	stclmi	3, cr7, [fp, #-388]!	; 0xfffffe7c
    22bc:	726f6d65 	rsbvc	r6, pc, #6464	; 0x1940
    22c0:	78700079 	ldmdavc	r0!, {r0, r3, r4, r5, r6}^
    22c4:	00424354 	subeq	r4, r2, r4, asr r3
    22c8:	73615478 	cmnvc	r1, #120, 8	; 0x78000000
    22cc:	6e65476b 	cdpvs	7, 6, cr4, cr5, cr11, {3}
    22d0:	63697265 	cmnvs	r9, #1342177286	; 0x50000006
    22d4:	69746f4e 	ldmdbvs	r4!, {r1, r2, r3, r6, r8, r9, sl, fp, sp, lr}^
    22d8:	74537966 	ldrbvc	r7, [r3], #-2406	; 0xfffff69a
    22dc:	43657461 	cmnmi	r5, #1627389952	; 0x61000000
    22e0:	7261656c 	rsbvc	r6, r1, #108, 10	; 0x1b000000
    22e4:	54787500 	ldrbtpl	r7, [r8], #-1280	; 0xfffffb00
    22e8:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    22ec:	6b736154 	blvs	1cda844 <__RAM_SIZE+0x1bda844>
    22f0:	63617453 	cmnvs	r1, #1392508928	; 0x53000000
    22f4:	7870006b 	ldmdavc	r0!, {r0, r1, r3, r5, r6}^
    22f8:	6b736154 	blvs	1cda850 <__RAM_SIZE+0x1bda850>
    22fc:	65646f43 	strbvs	r6, [r4, #-3907]!	; 0xfffff0bd
    2300:	53787500 	cmnpl	r8, #0, 10
    2304:	64656863 	strbtvs	r6, [r5], #-2147	; 0xfffff79d
    2308:	72656c75 	rsbvc	r6, r5, #29952	; 0x7500
    230c:	70737553 	rsbsvc	r7, r3, r3, asr r5
    2310:	65646e65 	strbvs	r6, [r4, #-3685]!	; 0xfffff19b
    2314:	78700064 	ldmdavc	r0!, {r2, r5, r6}^
    2318:	4f706f54 	svcmi	0x00706f54
    231c:	61745366 	cmnvs	r4, r6, ror #6
    2320:	76006b63 	strvc	r6, [r0], -r3, ror #22
    2324:	6b736154 	blvs	1cda87c <__RAM_SIZE+0x1bda87c>
    2328:	75736552 	ldrbvc	r6, [r3, #-1362]!	; 0xfffffaae
    232c:	7800656d 	stmdavc	r0, {r0, r2, r3, r5, r6, r8, sl, sp, lr}
    2330:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    2334:	74654772 	strbtvc	r4, [r5], #-1906	; 0xfffff88e
    2338:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    233c:	65614472 	strbvs	r4, [r1, #-1138]!	; 0xfffffb8e
    2340:	546e6f6d 	strbtpl	r6, [lr], #-3949	; 0xfffff093
    2344:	486b7361 	stmdami	fp!, {r0, r5, r6, r8, r9, ip, sp, lr}^
    2348:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
    234c:	72700065 	rsbsvc	r0, r0, #101	; 0x65
    2350:	696e4976 	stmdbvs	lr!, {r1, r2, r4, r5, r6, r8, fp, lr}^
    2354:	6c616974 			; <UNDEFINED> instruction: 0x6c616974
    2358:	54657369 	strbtpl	r7, [r5], #-873	; 0xfffffc97
    235c:	4c6b7361 	stclmi	3, cr7, [fp], #-388	; 0xfffffe7c
    2360:	73747369 	cmnvc	r4, #-1543503871	; 0xa4000001
    2364:	64497800 	strbvs	r7, [r9], #-2048	; 0xfffff800
    2368:	6154656c 	cmpvs	r4, ip, ror #10
    236c:	43546b73 	cmpmi	r4, #117760	; 0x1cc00
    2370:	78750042 	ldmdavc	r5!, {r1, r6}^
    2374:	65646e49 	strbvs	r6, [r4, #-3657]!	; 0xfffff1b7
    2378:	4e6f5478 	mcrmi	4, 3, r5, cr15, cr8, {3}
    237c:	6669746f 	strbtvs	r7, [r9], -pc, ror #8
    2380:	54780079 	ldrbtpl	r0, [r8], #-121	; 0xffffff87
    2384:	476b7361 	strbmi	r7, [fp, -r1, ror #6]!
    2388:	70417465 	subvc	r7, r1, r5, ror #8
    238c:	63696c70 	cmnvs	r9, #112, 24	; 0x7000
    2390:	6f697461 	svcvs	0x00697461
    2394:	7361546e 	cmnvc	r1, #1845493760	; 0x6e000000
    2398:	6761546b 	strbvs	r5, [r1, -fp, ror #8]!
    239c:	6d6f7246 	sfmvs	f7, 2, [pc, #-280]!	; 228c <__HEAP_SIZE+0x128c>
    23a0:	00525349 	subseq	r5, r2, r9, asr #6
    23a4:	72437870 	subvc	r7, r3, #112, 16	; 0x700000
    23a8:	65746165 	ldrbvs	r6, [r4, #-357]!	; 0xfffffe9b
    23ac:	73615464 	cmnvc	r1, #100, 8	; 0x64000000
    23b0:	7270006b 	rsbsvc	r0, r0, #107	; 0x6b
    23b4:	65684376 	strbvs	r4, [r8, #-886]!	; 0xfffffc8a
    23b8:	61546b63 	cmpvs	r4, r3, ror #22
    23bc:	57736b73 			; <UNDEFINED> instruction: 0x57736b73
    23c0:	69746961 	ldmdbvs	r4!, {r0, r5, r6, r8, fp, sp, lr}^
    23c4:	6554676e 	ldrbvs	r6, [r4, #-1902]	; 0xfffff892
    23c8:	6e696d72 	mcrvs	13, 3, r6, cr9, cr2, {3}
    23cc:	6f697461 	svcvs	0x00697461
    23d0:	7870006e 	ldmdavc	r0!, {r1, r2, r3, r5, r6}^
    23d4:	7265764f 	rsbvc	r7, r5, #82837504	; 0x4f00000
    23d8:	776f6c66 	strbvc	r6, [pc, -r6, ror #24]!
    23dc:	616c6544 	cmnvs	ip, r4, asr #10
    23e0:	4c646579 	cfstr64mi	mvdx6, [r4], #-484	; 0xfffffe1c
    23e4:	00747369 	rsbseq	r7, r4, r9, ror #6
    23e8:	65526c75 	ldrbvs	r6, [r2, #-3189]	; 0xfffff38b
    23ec:	6e727574 	mrcvs	5, 3, r7, cr2, cr4, {3}
    23f0:	61547800 	cmpvs	r4, r0, lsl #16
    23f4:	73496b73 	movtvc	r6, #39795	; 0x9b73
    23f8:	6e6e7552 	mcrvs	5, 3, r7, cr14, cr2, {2}
    23fc:	4f676e69 	svcmi	0x00676e69
    2400:	65695972 	strbvs	r5, [r9, #-2418]!	; 0xfffff68e
    2404:	6e69646c 	cdpvs	4, 6, cr6, cr9, cr12, {3}
    2408:	78750067 	ldmdavc	r5!, {r0, r1, r2, r5, r6}^
    240c:	65646e49 	strbvs	r6, [r4, #-3657]!	; 0xfffff1b7
    2410:	576f5478 			; <UNDEFINED> instruction: 0x576f5478
    2414:	4f746961 	svcmi	0x00746961
    2418:	4378006e 	cmnmi	r8, #110	; 0x6e
    241c:	616d6d6f 	cmnvs	sp, pc, ror #26
    2420:	6954646e 	ldmdbvs	r4, {r1, r2, r3, r5, r6, sl, sp, lr}^
    2424:	7800656d 	stmdavc	r0, {r0, r2, r3, r5, r6, r8, sl, sp, lr}
    2428:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    242c:	72655072 	rsbvc	r5, r5, #114	; 0x72
    2430:	49646f69 	stmdbmi	r4!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    2434:	6369546e 	cmnvs	r9, #1845493760	; 0x6e000000
    2438:	7000736b 	andvc	r7, r0, fp, ror #6
    243c:	6c614378 	stclvs	3, cr4, [r1], #-480	; 0xfffffe20
    2440:	6361626c 	cmnvs	r1, #108, 4	; 0xc0000006
    2444:	6e75466b 	cdpvs	6, 7, cr4, cr5, cr11, {3}
    2448:	6f697463 	svcvs	0x00697463
    244c:	7870006e 	ldmdavc	r0!, {r1, r2, r3, r5, r6}^
    2450:	7473694c 	ldrbtvc	r6, [r3], #-2380	; 0xfffff6b4
    2454:	45736157 	ldrbmi	r6, [r3, #-343]!	; 0xfffffea9
    2458:	7974706d 	ldmdbvc	r4!, {r0, r2, r3, r5, r6, ip, sp, lr}^
    245c:	69547800 	ldmdbvs	r4, {fp, ip, sp, lr}^
    2460:	6f4e656d 	svcvs	0x004e656d
    2464:	53780077 	cmnpl	r8, #119	; 0x77
    2468:	69746174 	ldmdbvs	r4!, {r2, r4, r5, r6, r8, sp, lr}^
    246c:	6d695463 	cfstrdvs	mvd5, [r9, #-396]!	; 0xfffffe74
    2470:	75517265 	ldrbvc	r7, [r1, #-613]	; 0xfffffd9b
    2474:	00657565 	rsbeq	r7, r5, r5, ror #10
    2478:	6d695478 	cfstrdvs	mvd5, [r9, #-480]!	; 0xfffffe20
    247c:	61507265 	cmpvs	r0, r5, ror #4
    2480:	656d6172 	strbvs	r6, [sp, #-370]!	; 0xfffffe8e
    2484:	73726574 	cmnvc	r2, #116, 10	; 0x1d000000
    2488:	704f7800 	subvc	r7, pc, r0, lsl #16
    248c:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    2490:	61566c61 	cmpvs	r6, r1, ror #24
    2494:	0065756c 	rsbeq	r7, r5, ip, ror #10
    2498:	69546370 	ldmdbvs	r4, {r4, r5, r6, r8, r9, sp, lr}^
    249c:	4e72656d 	cdpmi	5, 7, cr6, cr2, cr13, {3}
    24a0:	00656d61 	rsbeq	r6, r5, r1, ror #26
    24a4:	61506c75 	cmpvs	r0, r5, ror ip
    24a8:	656d6172 	strbvs	r6, [sp, #-370]!	; 0xfffffe8e
    24ac:	32726574 	rsbscc	r6, r2, #116, 10	; 0x1d000000
    24b0:	69547800 	ldmdbvs	r4, {fp, ip, sp, lr}^
    24b4:	5072656d 	rsbspl	r6, r2, sp, ror #10
    24b8:	46646e65 	strbtmi	r6, [r4], -r5, ror #28
    24bc:	74636e75 	strbtvc	r6, [r3], #-3701	; 0xfffff18b
    24c0:	436e6f69 	cmnmi	lr, #420	; 0x1a4
    24c4:	006c6c61 	rsbeq	r6, ip, r1, ror #24
    24c8:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    24cc:	72615072 	rsbvc	r5, r1, #114	; 0x72
    24d0:	74656d61 	strbtvc	r6, [r5], #-3425	; 0xfffff29f
    24d4:	745f7265 	ldrbvc	r7, [pc], #-613	; 24dc <__HEAP_SIZE+0x14dc>
    24d8:	69547800 	ldmdbvs	r4, {fp, ip, sp, lr}^
    24dc:	5172656d 	cmnpl	r2, sp, ror #10
    24e0:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
    24e4:	61745300 	cmnvs	r4, r0, lsl #6
    24e8:	54636974 	strbtpl	r6, [r3], #-2420	; 0xfffff68c
    24ec:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    24f0:	7800745f 	stmdavc	r0, {r0, r1, r2, r3, r4, r6, sl, ip, sp, lr}
    24f4:	54415453 	strbpl	r5, [r1], #-1107	; 0xfffffbad
    24f8:	545f4349 	ldrbpl	r4, [pc], #-841	; 2500 <__HEAP_SIZE+0x1500>
    24fc:	52454d49 	subpl	r4, r5, #4672	; 0x1240
    2500:	69547800 	ldmdbvs	r4, {fp, ip, sp, lr}^
    2504:	4772656d 	ldrbmi	r6, [r2, -sp, ror #10]!
    2508:	74537465 	ldrbvc	r7, [r3], #-1125	; 0xfffffb9b
    250c:	63697461 	cmnvs	r9, #1627389952	; 0x61000000
    2510:	66667542 	strbtvs	r7, [r6], -r2, asr #10
    2514:	54007265 	strpl	r7, [r0], #-613	; 0xfffffd9b
    2518:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    251c:	6c6c6143 	stfvse	f6, [ip], #-268	; 0xfffffef4
    2520:	6b636162 	blvs	18daab0 <__RAM_SIZE+0x17daab0>
    2524:	636e7546 	cmnvs	lr, #293601280	; 0x11800000
    2528:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    252c:	7800745f 	stmdavc	r0, {r0, r1, r2, r3, r4, r6, sl, ip, sp, lr}
    2530:	6d6d6f43 	stclvs	15, cr6, [sp, #-268]!	; 0xfffffef4
    2534:	49646e61 	stmdbmi	r4!, {r0, r5, r6, r9, sl, fp, sp, lr}^
    2538:	50780044 	rsbspl	r0, r8, r4, asr #32
    253c:	65636f72 	strbvs	r6, [r3, #-3954]!	; 0xfffff08e
    2540:	69547373 	ldmdbvs	r4, {r0, r1, r4, r5, r6, r8, r9, ip, sp, lr}^
    2544:	4e72656d 	cdpmi	5, 7, cr6, cr2, cr13, {3}
    2548:	7000776f 	andvc	r7, r0, pc, ror #14
    254c:	68437672 	stmdavs	r3, {r1, r4, r5, r6, r9, sl, ip, sp, lr}^
    2550:	466b6365 	strbtmi	r6, [fp], -r5, ror #6
    2554:	6156726f 	cmpvs	r6, pc, ror #4
    2558:	4c64696c 			; <UNDEFINED> instruction: 0x4c64696c
    255c:	41747369 	cmnmi	r4, r9, ror #6
    2560:	7551646e 	ldrbvc	r6, [r1, #-1134]	; 0xfffffb92
    2564:	00657565 	rsbeq	r7, r5, r5, ror #10
    2568:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    256c:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    2570:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    2574:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    2578:	6572462f 	ldrbvs	r4, [r2, #-1583]!	; 0xfffff9d1
    257c:	4f545265 	svcmi	0x00545265
    2580:	69742f53 	ldmdbvs	r4!, {r0, r1, r4, r6, r8, r9, sl, fp, sp}^
    2584:	7372656d 	cmnvc	r2, #457179136	; 0x1b400000
    2588:	7500632e 	strvc	r6, [r0, #-814]	; 0xfffffcd2
    258c:	6d695478 	cfstrdvs	mvd5, [r9, #-480]!	; 0xfffffe20
    2590:	65477265 	strbvs	r7, [r7, #-613]	; 0xfffffd9b
    2594:	6c655274 	sfmvs	f5, 2, [r5], #-464	; 0xfffffe30
    2598:	4d64616f 	stfmie	f6, [r4, #-444]!	; 0xfffffe44
    259c:	0065646f 	rsbeq	r6, r5, pc, ror #8
    25a0:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    25a4:	6e614872 	mcrvs	8, 3, r4, cr1, cr2, {3}
    25a8:	5f656c64 	svcpl	0x00656c64
    25ac:	54780074 	ldrbtpl	r0, [r8], #-116	; 0xffffff8c
    25b0:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    25b4:	61657243 	cmnvs	r5, r3, asr #4
    25b8:	74536574 	ldrbvc	r6, [r3], #-1396	; 0xfffffa8c
    25bc:	63697461 	cmnvs	r9, #1627389952	; 0x61000000
    25c0:	76727000 	ldrbtvc	r7, [r2], -r0
    25c4:	636f7250 	cmnvs	pc, #80, 4
    25c8:	45737365 	ldrbmi	r7, [r3, #-869]!	; 0xfffffc9b
    25cc:	72697078 	rsbvc	r7, r9, #120	; 0x78
    25d0:	69546465 	ldmdbvs	r4, {r0, r2, r5, r6, sl, sp, lr}^
    25d4:	0072656d 	rsbseq	r6, r2, sp, ror #10
    25d8:	6c6c6143 	stfvse	f6, [ip], #-268	; 0xfffffef4
    25dc:	6b636162 	blvs	18dab6c <__RAM_SIZE+0x17dab6c>
    25e0:	61726150 	cmnvs	r2, r0, asr r1
    25e4:	6574656d 	ldrbvs	r6, [r4, #-1389]!	; 0xfffffa93
    25e8:	745f7372 	ldrbvc	r7, [pc], #-882	; 25f0 <__HEAP_SIZE+0x15f0>
    25ec:	44767000 	ldrbtmi	r7, [r6], #-0
    25f0:	796d6d75 	stmdbvc	sp!, {r0, r2, r4, r5, r6, r8, sl, fp, sp, lr}^
    25f4:	78700036 	ldmdavc	r0!, {r1, r2, r4, r5}^
    25f8:	5477654e 	ldrbtpl	r6, [r7], #-1358	; 0xfffffab2
    25fc:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    2600:	52767000 	rsbspl	r7, r6, #0
    2604:	72757465 	rsbsvc	r7, r5, #1694498816	; 0x65000000
    2608:	5478006e 	ldrbtpl	r0, [r8], #-110	; 0xffffff92
    260c:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    2610:	69547349 	ldmdbvs	r4, {r0, r3, r6, r8, r9, ip, sp, lr}^
    2614:	4172656d 	cmnmi	r2, sp, ror #10
    2618:	76697463 	strbtvc	r7, [r9], -r3, ror #8
    261c:	45780065 	ldrbmi	r0, [r8, #-101]!	; 0xffffff9b
    2620:	72697078 	rsbvc	r7, r9, #120	; 0x78
    2624:	69546465 	ldmdbvs	r4, {r0, r2, r5, r6, sl, sp, lr}^
    2628:	7400656d 	strvc	r6, [r0], #-1389	; 0xfffffa93
    262c:	6954726d 	ldmdbvs	r4, {r0, r2, r3, r5, r6, r9, ip, sp, lr}^
    2630:	5172656d 	cmnpl	r2, sp, ror #10
    2634:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
    2638:	7373654d 	cmnvc	r3, #322961408	; 0x13400000
    263c:	00656761 	rsbeq	r6, r5, r1, ror #14
    2640:	69547670 	ldmdbvs	r4, {r4, r5, r6, r9, sl, ip, sp, lr}^
    2644:	4772656d 	ldrbmi	r6, [r2, -sp, ror #10]!
    2648:	69547465 	ldmdbvs	r4, {r0, r2, r5, r6, sl, ip, sp, lr}^
    264c:	4972656d 	ldmdbmi	r2!, {r0, r2, r3, r5, r6, r8, sl, sp, lr}^
    2650:	41780044 	cmnmi	r8, r4, asr #32
    2654:	526f7475 	rsbpl	r7, pc, #1962934272	; 0x75000000
    2658:	616f6c65 	cmnvs	pc, r5, ror #24
    265c:	54780064 	ldrbtpl	r0, [r8], #-100	; 0xffffff9c
    2660:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    2664:	656e6547 	strbvs	r6, [lr, #-1351]!	; 0xfffffab9
    2668:	43636972 	cmnmi	r3, #1867776	; 0x1c8000
    266c:	616d6d6f 	cmnvs	sp, pc, ror #26
    2670:	7246646e 	subvc	r6, r6, #1845493760	; 0x6e000000
    2674:	53496d6f 	movtpl	r6, #40303	; 0x9d6f
    2678:	78700052 	ldmdavc	r0!, {r1, r4, r6}^
    267c:	7265764f 	rsbvc	r7, r5, #82837504	; 0x4f00000
    2680:	776f6c66 	strbvc	r6, [pc, -r6, ror #24]!
    2684:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    2688:	73694c72 	cmnvc	r9, #29184	; 0x7200
    268c:	72700074 	rsbsvc	r0, r0, #116	; 0x74
    2690:	696e4976 	stmdbvs	lr!, {r1, r2, r4, r5, r6, r8, fp, lr}^
    2694:	6c616974 			; <UNDEFINED> instruction: 0x6c616974
    2698:	4e657369 	cdpmi	3, 6, cr7, cr5, cr9, {3}
    269c:	69547765 	ldmdbvs	r4, {r0, r2, r5, r6, r8, r9, sl, ip, sp, lr}^
    26a0:	0072656d 	rsbseq	r6, r2, sp, ror #10
    26a4:	75447670 	strbvc	r7, [r4, #-1648]	; 0xfffff990
    26a8:	35796d6d 	ldrbcc	r6, [r9, #-3437]!	; 0xfffff293
    26ac:	49547800 	ldmdbmi	r4, {fp, ip, sp, lr}^
    26b0:	0052454d 	subseq	r4, r2, sp, asr #10
    26b4:	74634178 	strbtvc	r4, [r3], #-376	; 0xfffffe88
    26b8:	54657669 	strbtpl	r7, [r5], #-1641	; 0xfffff997
    26bc:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    26c0:	7473694c 	ldrbtvc	r6, [r3], #-2380	; 0xfffff6b4
    26c4:	41780031 	cmnmi	r8, r1, lsr r0
    26c8:	76697463 	strbtvc	r7, [r9], -r3, ror #8
    26cc:	6d695465 	cfstrdvs	mvd5, [r9, #-404]!	; 0xfffffe6c
    26d0:	694c7265 	stmdbvs	ip, {r0, r2, r5, r6, r9, ip, sp, lr}^
    26d4:	00327473 	eorseq	r7, r2, r3, ror r4
    26d8:	49767270 	ldmdbmi	r6!, {r4, r5, r6, r9, ip, sp, lr}^
    26dc:	7265736e 	rsbvc	r7, r5, #-1207959551	; 0xb8000001
    26e0:	6d695474 	cfstrdvs	mvd5, [r9, #-464]!	; 0xfffffe30
    26e4:	6e497265 	cdpvs	2, 4, cr7, cr9, cr5, {3}
    26e8:	69746341 	ldmdbvs	r4!, {r0, r6, r8, r9, sp, lr}^
    26ec:	694c6576 	stmdbvs	ip, {r1, r2, r4, r5, r6, r8, sl, sp, lr}^
    26f0:	78007473 	stmdavc	r0, {r0, r1, r4, r5, r6, sl, ip, sp, lr}
    26f4:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    26f8:	74654772 	strbtvc	r4, [r5], #-1906	; 0xfffff88e
    26fc:	69707845 	ldmdbvs	r0!, {r0, r2, r6, fp, ip, sp, lr}^
    2700:	69547972 	ldmdbvs	r4, {r1, r4, r5, r6, r8, fp, ip, sp, lr}^
    2704:	7400656d 	strvc	r6, [r0], #-1389	; 0xfffffa93
    2708:	6143726d 	cmpvs	r3, sp, ror #4
    270c:	61626c6c 	cmnvs	r2, ip, ror #24
    2710:	61506b63 	cmpvs	r0, r3, ror #22
    2714:	656d6172 	strbvs	r6, [sp, #-370]!	; 0xfffffe8e
    2718:	73726574 	cmnvc	r2, #116, 10	; 0x1d000000
    271c:	69547800 	ldmdbvs	r4, {fp, ip, sp, lr}^
    2720:	4372656d 	cmnmi	r2, #457179136	; 0x1b400000
    2724:	74616572 	strbtvc	r6, [r1], #-1394	; 0xfffffa8e
    2728:	72700065 	rsbsvc	r0, r0, #101	; 0x65
    272c:	6d615376 	stclvs	3, cr5, [r1, #-472]!	; 0xfffffe28
    2730:	54656c70 	strbtpl	r6, [r5], #-3184	; 0xfffff390
    2734:	4e656d69 	cdpmi	13, 6, cr6, cr5, cr9, {3}
    2738:	7800776f 	stmdavc	r0, {r0, r1, r2, r3, r5, r6, r8, r9, sl, ip, sp, lr}
    273c:	6c6c6143 	stfvse	f6, [ip], #-268	; 0xfffffef4
    2740:	6b636162 	blvs	18dacd0 <__RAM_SIZE+0x17dacd0>
    2744:	61726150 	cmnvs	r2, r0, asr r1
    2748:	6574656d 	ldrbvs	r6, [r4, #-1389]!	; 0xfffffa93
    274c:	76007372 			; <UNDEFINED> instruction: 0x76007372
    2750:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    2754:	74655372 	strbtvc	r5, [r5], #-882	; 0xfffffc8e
    2758:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    275c:	00444972 	subeq	r4, r4, r2, ror r9
    2760:	6d695478 	cfstrdvs	mvd5, [r9, #-480]!	; 0xfffffe20
    2764:	694c7265 	stmdbvs	ip, {r0, r2, r5, r6, r9, ip, sp, lr}^
    2768:	74497473 	strbvc	r7, [r9], #-1139	; 0xfffffb8d
    276c:	70006d65 	andvc	r6, r0, r5, ror #26
    2770:	77654e76 			; <UNDEFINED> instruction: 0x77654e76
    2774:	70004449 	andvc	r4, r0, r9, asr #8
    2778:	77537672 			; <UNDEFINED> instruction: 0x77537672
    277c:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
    2780:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    2784:	73694c72 	cmnvc	r9, #29184	; 0x7200
    2788:	70007374 	andvc	r7, r0, r4, ror r3
    278c:	65527672 	ldrbvs	r7, [r2, #-1650]	; 0xfffff98e
    2790:	64616f6c 	strbtvs	r6, [r1], #-3948	; 0xfffff094
    2794:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    2798:	63750072 	cmnvs	r5, #114	; 0x72
    279c:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
    27a0:	69546369 	ldmdbvs	r4, {r0, r3, r5, r6, r8, r9, sp, lr}^
    27a4:	5172656d 	cmnpl	r2, sp, ror #10
    27a8:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
    27ac:	726f7453 	rsbvc	r7, pc, #1392508928	; 0x53000000
    27b0:	00656761 	rsbeq	r6, r5, r1, ror #14
    27b4:	61507670 	cmpvs	r0, r0, ror r6
    27b8:	656d6172 	strbvs	r6, [sp, #-370]!	; 0xfffffe8e
    27bc:	31726574 	cmncc	r2, r4, ror r5
    27c0:	44637500 	strbtmi	r7, [r3], #-1280	; 0xfffffb00
    27c4:	796d6d75 	stmdbvc	sp!, {r0, r2, r4, r5, r6, r8, sl, fp, sp, lr}^
    27c8:	54780038 	ldrbtpl	r0, [r8], #-56	; 0xffffffc8
    27cc:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    27d0:	6b736154 	blvs	1cdad28 <__RAM_SIZE+0x1bdad28>
    27d4:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
    27d8:	7000656c 	andvc	r6, r0, ip, ror #10
    27dc:	69547672 	ldmdbvs	r4, {r1, r4, r5, r6, r9, sl, ip, sp, lr}^
    27e0:	5472656d 	ldrbtpl	r6, [r2], #-1389	; 0xfffffa93
    27e4:	006b7361 	rsbeq	r7, fp, r1, ror #6
    27e8:	78654e78 	stmdavc	r5!, {r3, r4, r5, r6, r9, sl, fp, lr}^
    27ec:	70784574 	rsbsvc	r4, r8, r4, ror r5
    27f0:	54657269 	strbtpl	r7, [r5], #-617	; 0xfffffd97
    27f4:	00656d69 	rsbeq	r6, r5, r9, ror #26
    27f8:	74536375 	ldrbvc	r6, [r3], #-885	; 0xfffffc8b
    27fc:	73757461 	cmnvc	r5, #1627389952	; 0x61000000
    2800:	76727000 	ldrbtvc	r7, [r2], -r0
    2804:	636f7250 	cmnvs	pc, #80, 4
    2808:	52737365 	rsbspl	r7, r3, #-1811939327	; 0x94000001
    280c:	69656365 	stmdbvs	r5!, {r0, r2, r5, r6, r8, r9, sp, lr}^
    2810:	43646576 	cmnmi	r4, #494927872	; 0x1d800000
    2814:	616d6d6f 	cmnvs	sp, pc, ror #26
    2818:	0073646e 	rsbseq	r6, r3, lr, ror #8
    281c:	73614c78 	cmnvc	r1, #120, 24	; 0x7800
    2820:	6d695474 	cfstrdvs	mvd5, [r9, #-464]!	; 0xfffffe30
    2824:	65500065 	ldrbvs	r0, [r0, #-101]	; 0xffffff9b
    2828:	6465646e 	strbtvs	r6, [r5], #-1134	; 0xfffffb92
    282c:	636e7546 	cmnvs	lr, #293601280	; 0x11800000
    2830:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    2834:	7000745f 	andvc	r7, r0, pc, asr r4
    2838:	72754378 	rsbsvc	r4, r5, #120, 6	; 0xe0000001
    283c:	746e6572 	strbtvc	r6, [lr], #-1394	; 0xfffffa8e
    2840:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    2844:	73694c72 	cmnvc	r9, #29184	; 0x7200
    2848:	4d780074 	ldclmi	0, cr0, [r8, #-464]!	; 0xfffffe30
    284c:	61737365 	cmnvs	r3, r5, ror #6
    2850:	70006567 	andvc	r6, r0, r7, ror #10
    2854:	6d695476 	cfstrdvs	mvd5, [r9, #-472]!	; 0xfffffe28
    2858:	44497265 	strbmi	r7, [r9], #-613	; 0xfffffd9b
    285c:	654d7800 	strbvs	r7, [sp, #-2048]	; 0xfffff800
    2860:	67617373 			; <UNDEFINED> instruction: 0x67617373
    2864:	00444965 	subeq	r4, r4, r5, ror #18
    2868:	6d656144 	stfvse	f6, [r5, #-272]!	; 0xfffffef0
    286c:	61546e6f 	cmpvs	r4, pc, ror #28
    2870:	654d6b73 	strbvs	r6, [sp, #-2931]	; 0xfffff48d
    2874:	67617373 			; <UNDEFINED> instruction: 0x67617373
    2878:	00745f65 	rsbseq	r5, r4, r5, ror #30
    287c:	6d695476 	cfstrdvs	mvd5, [r9, #-472]!	; 0xfffffe28
    2880:	65527265 	ldrbvs	r7, [r2, #-613]	; 0xfffffd9b
    2884:	53746573 	cmnpl	r4, #482344960	; 0x1cc00000
    2888:	65746174 	ldrbvs	r6, [r4, #-372]!	; 0xfffffe8c
    288c:	69547800 	ldmdbvs	r4, {fp, ip, sp, lr}^
    2890:	4772656d 	ldrbmi	r6, [r2, -sp, ror #10]!
    2894:	65507465 	ldrbvs	r7, [r0, #-1125]	; 0xfffffb9b
    2898:	646f6972 	strbtvs	r6, [pc], #-2418	; 28a0 <__HEAP_SIZE+0x18a0>
    289c:	54787000 	ldrbtpl	r7, [r8], #-0
    28a0:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    28a4:	654d7800 	strbvs	r7, [sp, #-2048]	; 0xfffff800
    28a8:	67617373 			; <UNDEFINED> instruction: 0x67617373
    28ac:	6c615665 	stclvs	6, cr5, [r1], #-404	; 0xfffffe6c
    28b0:	78006575 	stmdavc	r0, {r0, r2, r4, r5, r6, r8, sl, sp, lr}
    28b4:	636e7546 	cmnvs	lr, #293601280	; 0x11800000
    28b8:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    28bc:	65506f54 	ldrbvs	r6, [r0, #-3924]	; 0xfffff0ac
    28c0:	7400646e 	strvc	r6, [r0], #-1134	; 0xfffffb92
    28c4:	6954726d 	ldmdbvs	r4, {r0, r2, r3, r5, r6, r9, ip, sp, lr}^
    28c8:	4372656d 	cmnmi	r2, #457179136	; 0x1b400000
    28cc:	72746e6f 	rsbsvc	r6, r4, #1776	; 0x6f0
    28d0:	70006c6f 	andvc	r6, r0, pc, ror #24
    28d4:	6d695463 	cfstrdvs	mvd5, [r9, #-396]!	; 0xfffffe74
    28d8:	65477265 	strbvs	r7, [r7, #-613]	; 0xfffffd9b
    28dc:	6d614e74 	stclvs	14, cr4, [r1, #-464]!	; 0xfffffe30
    28e0:	54780065 	ldrbtpl	r0, [r8], #-101	; 0xffffff9b
    28e4:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    28e8:	646e6550 	strbtvs	r6, [lr], #-1360	; 0xfffffab0
    28ec:	636e7546 	cmnvs	lr, #293601280	; 0x11800000
    28f0:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    28f4:	6c6c6143 	stfvse	f6, [ip], #-268	; 0xfffffef4
    28f8:	6d6f7246 	sfmvs	f7, 2, [pc, #-280]!	; 27e8 <__HEAP_SIZE+0x17e8>
    28fc:	00525349 	subseq	r5, r2, r9, asr #6
    2900:	50767270 	rsbspl	r7, r6, r0, ror r2
    2904:	65636f72 	strbvs	r6, [r3, #-3954]!	; 0xfffff08e
    2908:	69547373 	ldmdbvs	r4, {r0, r1, r4, r5, r6, r8, r9, ip, sp, lr}^
    290c:	4f72656d 	svcmi	0x0072656d
    2910:	6f6c4272 	svcvs	0x006c4272
    2914:	61546b63 	cmpvs	r4, r3, ror #22
    2918:	76006b73 			; <UNDEFINED> instruction: 0x76006b73
    291c:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    2920:	74655372 	strbtvc	r5, [r5], #-882	; 0xfffffc8e
    2924:	6f6c6552 	svcvs	0x006c6552
    2928:	6f4d6461 	svcvs	0x004d6461
    292c:	78006564 	stmdavc	r0, {r2, r5, r6, r8, sl, sp, lr}
    2930:	7478654e 	ldrbtvc	r6, [r8], #-1358	; 0xfffffab2
    2934:	69707845 	ldmdbvs	r0!, {r0, r2, r6, fp, ip, sp, lr}^
    2938:	69547972 	ldmdbvs	r4, {r1, r4, r5, r6, r8, fp, ip, sp, lr}^
    293c:	7800656d 	stmdavc	r0, {r0, r2, r3, r5, r6, r8, sl, sp, lr}
    2940:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    2944:	6e654772 	mcrvs	7, 3, r4, cr5, cr2, {3}
    2948:	63697265 	cmnvs	r9, #1342177286	; 0x50000006
    294c:	6d6d6f43 	stclvs	15, cr6, [sp, #-268]!	; 0xfffffef4
    2950:	46646e61 	strbtmi	r6, [r4], -r1, ror #28
    2954:	546d6f72 	strbtpl	r6, [sp], #-3954	; 0xfffff08e
    2958:	006b7361 	rsbeq	r7, fp, r1, ror #6
    295c:	54726d74 	ldrbtpl	r6, [r2], #-3444	; 0xfffff28c
    2960:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    2964:	61726150 	cmnvs	r2, r0, asr r1
    2968:	6574656d 	ldrbvs	r6, [r4, #-1389]!	; 0xfffffa93
    296c:	70007372 	andvc	r7, r0, r2, ror r3
    2970:	69547870 	ldmdbvs	r4, {r4, r5, r6, fp, ip, sp, lr}^
    2974:	4272656d 	rsbsmi	r6, r2, #457179136	; 0x1b400000
    2978:	65666675 	strbvs	r6, [r6, #-1653]!	; 0xfffff98b
    297c:	78700072 	ldmdavc	r0!, {r1, r4, r5, r6}^
    2980:	6c6c6143 	stfvse	f6, [ip], #-268	; 0xfffffef4
    2984:	6b636162 	blvs	18daf14 <__RAM_SIZE+0x17daf14>
    2988:	76727000 	ldrbtvc	r7, [r2], -r0
    298c:	4e746547 	cdpmi	5, 7, cr6, cr4, cr7, {2}
    2990:	45747865 	ldrbmi	r7, [r4, #-2149]!	; 0xfffff79b
    2994:	72697078 	rsbvc	r7, r9, #120	; 0x78
    2998:	6d695465 	cfstrdvs	mvd5, [r9, #-404]!	; 0xfffffe6c
    299c:	78700065 	ldmdavc	r0!, {r0, r2, r5, r6}^
    29a0:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    29a4:	73694c72 	cmnvc	r9, #29184	; 0x7200
    29a8:	65577374 	ldrbvs	r7, [r7, #-884]	; 0xfffffc8c
    29ac:	77536572 			; <UNDEFINED> instruction: 0x77536572
    29b0:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
    29b4:	70006465 	andvc	r6, r0, r5, ror #8
    29b8:	65725078 	ldrbvs	r5, [r2, #-120]!	; 0xffffff88
    29bc:	756f6976 	strbvc	r6, [pc, #-2422]!	; 204e <__HEAP_SIZE+0x104e>
    29c0:	6f6c4273 	svcvs	0x006c4273
    29c4:	70006b63 	andvc	r6, r0, r3, ror #22
    29c8:	61654878 	smcvs	21640	; 0x5488
    29cc:	61745370 	cmnvs	r4, r0, ror r3
    29d0:	78007374 	stmdavc	r0, {r2, r4, r5, r6, r8, r9, ip, sp, lr}
    29d4:	696e694d 	stmdbvs	lr!, {r0, r2, r3, r6, r8, fp, sp, lr}^
    29d8:	456d756d 	strbmi	r7, [sp, #-1389]!	; 0xfffffa93
    29dc:	46726576 			; <UNDEFINED> instruction: 0x46726576
    29e0:	42656572 	rsbmi	r6, r5, #478150656	; 0x1c800000
    29e4:	73657479 	cmnvc	r5, #2030043136	; 0x79000000
    29e8:	616d6552 	cmnvs	sp, r2, asr r5
    29ec:	6e696e69 	cdpvs	14, 6, cr6, cr9, cr9, {3}
    29f0:	65480067 	strbvs	r0, [r8, #-103]	; 0xffffff99
    29f4:	74537061 	ldrbvc	r7, [r3], #-97	; 0xffffff9f
    29f8:	5f737461 	svcpl	0x00737461
    29fc:	78700074 	ldmdavc	r0!, {r2, r4, r5, r6}^
    2a00:	7478654e 	ldrbtvc	r6, [r8], #-1358	; 0xfffffab2
    2a04:	65657246 	strbvs	r7, [r5, #-582]!	; 0xfffffdba
    2a08:	636f6c42 	cmnvs	pc, #16896	; 0x4200
    2a0c:	7870006b 	ldmdavc	r0!, {r0, r1, r3, r5, r6}^
    2a10:	636f6c42 	cmnvs	pc, #16896	; 0x4200
    2a14:	4d78006b 	ldclmi	0, cr0, [r8, #-428]!	; 0xfffffe54
    2a18:	69536e69 	ldmdbvs	r3, {r0, r3, r5, r6, r9, sl, fp, sp, lr}^
    2a1c:	7800657a 	stmdavc	r0, {r1, r3, r4, r5, r6, r8, sl, sp, lr}
    2a20:	626d754e 	rsbvs	r7, sp, #327155712	; 0x13800000
    2a24:	664f7265 	strbvs	r7, [pc], -r5, ror #4
    2a28:	65657246 	strbvs	r7, [r5, #-582]!	; 0xfffffdba
    2a2c:	636f6c42 	cmnvs	pc, #16896	; 0x4200
    2a30:	7000736b 	andvc	r7, r0, fp, ror #6
    2a34:	646e4578 	strbtvs	r4, [lr], #-1400	; 0xfffffa88
    2a38:	76727000 	ldrbtvc	r7, [r2], -r0
    2a3c:	65736e49 	ldrbvs	r6, [r3, #-3657]!	; 0xfffff1b7
    2a40:	6c427472 	cfstrdvs	mvd7, [r2], {114}	; 0x72
    2a44:	496b636f 	stmdbmi	fp!, {r0, r1, r2, r3, r5, r6, r8, r9, sp, lr}^
    2a48:	466f746e 	strbtmi	r7, [pc], -lr, ror #8
    2a4c:	4c656572 	cfstr64mi	mvdx6, [r5], #-456	; 0xfffffe38
    2a50:	00747369 	rsbseq	r7, r4, r9, ror #6
    2a54:	4c425f41 	mcrrmi	15, 4, r5, r2, cr1
    2a58:	5f4b434f 	svcpl	0x004b434f
    2a5c:	4b4e494c 	blmi	1394f94 <__RAM_SIZE+0x1294f94>
    2a60:	53787500 	cmnpl	r8, #0, 10
    2a64:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
    2a68:	72646441 	rsbvc	r6, r4, #1090519040	; 0x41000000
    2a6c:	00737365 	rsbseq	r7, r3, r5, ror #6
    2a70:	7a695378 	bvc	1a57858 <__RAM_SIZE+0x1957858>
    2a74:	53664f65 	cmnpl	r6, #404	; 0x194
    2a78:	6c6c616d 	stfvse	f6, [ip], #-436	; 0xfffffe4c
    2a7c:	46747365 	ldrbtmi	r7, [r4], -r5, ror #6
    2a80:	42656572 	rsbmi	r6, r5, #478150656	; 0x1c800000
    2a84:	6b636f6c 	blvs	18de83c <__RAM_SIZE+0x17de83c>
    2a88:	79426e49 	stmdbvc	r2, {r0, r3, r6, r9, sl, fp, sp, lr}^
    2a8c:	00736574 	rsbseq	r6, r3, r4, ror r5
    2a90:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    2a94:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    2a98:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    2a9c:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    2aa0:	6572462f 	ldrbvs	r4, [r2, #-1583]!	; 0xfffff9d1
    2aa4:	4f545265 	svcmi	0x00545265
    2aa8:	6f702f53 	svcvs	0x00702f53
    2aac:	62617472 	rsbvs	r7, r1, #1912602624	; 0x72000000
    2ab0:	4d2f656c 	cfstr32mi	mvfx6, [pc, #-432]!	; 2908 <__HEAP_SIZE+0x1908>
    2ab4:	614d6d65 	cmpvs	sp, r5, ror #26
    2ab8:	682f676e 	stmdavs	pc!, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}	; <UNPREDICTABLE>
    2abc:	5f706165 	svcpl	0x00706165
    2ac0:	00632e34 	rsbeq	r2, r3, r4, lsr lr
    2ac4:	6e457875 	mcrvs	8, 2, r7, cr5, cr5, {3}
    2ac8:	64644164 	strbtvs	r4, [r4], #-356	; 0xfffffe9c
    2acc:	73736572 	cmnvc	r3, #478150656	; 0x1c800000
    2ad0:	4e787000 	cdpmi	0, 7, cr7, cr8, cr0, {0}
    2ad4:	6c427765 	mcrrvs	7, 6, r7, r2, cr5
    2ad8:	4c6b636f 	stclmi	3, cr6, [fp], #-444	; 0xfffffe44
    2adc:	006b6e69 	rsbeq	r6, fp, r9, ror #28
    2ae0:	726f5078 	rsbvc	r5, pc, #120	; 0x78
    2ae4:	74654774 	strbtvc	r4, [r5], #-1908	; 0xfffff88c
    2ae8:	65657246 	strbvs	r7, [r5, #-582]!	; 0xfffffdba
    2aec:	70616548 	rsbvc	r6, r1, r8, asr #10
    2af0:	657a6953 	ldrbvs	r6, [sl, #-2387]!	; 0xfffff6ad
    2af4:	64417800 	strbvs	r7, [r1], #-2048	; 0xfffff800
    2af8:	69746964 	ldmdbvs	r4!, {r2, r5, r6, r8, fp, sp, lr}^
    2afc:	6c616e6f 	stclvs	14, cr6, [r1], #-444	; 0xfffffe44
    2b00:	75716552 	ldrbvc	r6, [r1, #-1362]!	; 0xfffffaae
    2b04:	64657269 	strbtvs	r7, [r5], #-617	; 0xfffffd97
    2b08:	657a6953 	ldrbvs	r6, [sl, #-2387]!	; 0xfffff6ad
    2b0c:	6f507600 	svcvs	0x00507600
    2b10:	65487472 	strbvs	r7, [r8, #-1138]	; 0xfffffb8e
    2b14:	65527061 	ldrbvs	r7, [r2, #-97]	; 0xffffff9f
    2b18:	53746573 	cmnpl	r4, #482344960	; 0x1cc00000
    2b1c:	65746174 	ldrbvs	r6, [r4, #-372]!	; 0xfffffe8c
    2b20:	614d7800 	cmpvs	sp, r0, lsl #16
    2b24:	7a695378 	bvc	1a5790c <__RAM_SIZE+0x195790c>
    2b28:	50780065 	rsbspl	r0, r8, r5, rrx
    2b2c:	4774726f 	ldrbmi	r7, [r4, -pc, ror #4]!
    2b30:	694d7465 	stmdbvs	sp, {r0, r2, r5, r6, sl, ip, sp, lr}^
    2b34:	756d696e 	strbvc	r6, [sp, #-2414]!	; 0xfffff692
    2b38:	6576456d 	ldrbvs	r4, [r6, #-1389]!	; 0xfffffa93
    2b3c:	65724672 	ldrbvs	r4, [r2, #-1650]!	; 0xfffff98e
    2b40:	61654865 	cmnvs	r5, r5, ror #16
    2b44:	7a695370 	bvc	1a5790c <__RAM_SIZE+0x195790c>
    2b48:	6c420065 	mcrrvs	0, 6, r0, r2, cr5
    2b4c:	4c6b636f 	stclmi	3, cr6, [fp], #-444	; 0xfffffe44
    2b50:	5f6b6e69 	svcpl	0x006b6e69
    2b54:	4e780074 	mrcmi	0, 3, r0, cr8, cr4, {3}
    2b58:	65626d75 	strbvs	r6, [r2, #-3445]!	; 0xfffff28b
    2b5c:	53664f72 	cmnpl	r6, #456	; 0x1c8
    2b60:	65636375 	strbvs	r6, [r3, #-885]!	; 0xfffffc8b
    2b64:	75667373 	strbvc	r7, [r6, #-883]!	; 0xfffffc8d
    2b68:	6c6c416c 	stfvse	f4, [ip], #-432	; 0xfffffe50
    2b6c:	7461636f 	strbtvc	r6, [r1], #-879	; 0xfffffc91
    2b70:	736e6f69 	cmnvc	lr, #420	; 0x1a4
    2b74:	76417800 	strbvc	r7, [r1], -r0, lsl #16
    2b78:	616c6961 	cmnvs	ip, r1, ror #18
    2b7c:	48656c62 	stmdami	r5!, {r1, r5, r6, sl, fp, sp, lr}^
    2b80:	53706165 	cmnpl	r0, #1073741849	; 0x40000019
    2b84:	65636170 	strbvs	r6, [r3, #-368]!	; 0xfffffe90
    2b88:	79426e49 	stmdbvc	r2, {r0, r3, r6, r9, sl, fp, sp, lr}^
    2b8c:	00736574 	rsbseq	r6, r3, r4, ror r5
    2b90:	61654878 	smcvs	21640	; 0x5488
    2b94:	72745370 	rsbsvc	r5, r4, #112, 6	; 0xc0000001
    2b98:	53746375 	cmnpl	r4, #-738197503	; 0xd4000001
    2b9c:	00657a69 	rsbeq	r7, r5, r9, ror #20
    2ba0:	6f507670 	svcvs	0x00507670
    2ba4:	61437472 	hvcvs	14146	; 0x3742
    2ba8:	636f6c6c 	cmnvs	pc, #108, 24	; 0x6c00
    2bac:	72467800 	subvc	r7, r6, #0, 16
    2bb0:	79426565 	stmdbvc	r2, {r0, r2, r5, r6, r8, sl, sp, lr}^
    2bb4:	52736574 	rsbspl	r6, r3, #116, 10	; 0x1d000000
    2bb8:	69616d65 	stmdbvs	r1!, {r0, r2, r5, r6, r8, sl, fp, sp, lr}^
    2bbc:	676e696e 	strbvs	r6, [lr, -lr, ror #18]!
    2bc0:	69537800 	ldmdbvs	r3, {fp, ip, sp, lr}^
    2bc4:	664f657a 			; <UNDEFINED> instruction: 0x664f657a
    2bc8:	6772614c 	ldrbvs	r6, [r2, -ip, asr #2]!
    2bcc:	46747365 	ldrbtmi	r7, [r4], -r5, ror #6
    2bd0:	42656572 	rsbmi	r6, r5, #478150656	; 0x1c800000
    2bd4:	6b636f6c 	blvs	18de98c <__RAM_SIZE+0x17de98c>
    2bd8:	79426e49 	stmdbvc	r2, {r0, r3, r6, r9, sl, fp, sp, lr}^
    2bdc:	00736574 	rsbseq	r6, r3, r4, ror r5
    2be0:	48767270 	ldmdami	r6!, {r4, r5, r6, r9, ip, sp, lr}^
    2be4:	49706165 	ldmdbmi	r0!, {r0, r2, r5, r6, r8, sp, lr}^
    2be8:	0074696e 	rsbseq	r6, r4, lr, ror #18
    2bec:	6c427870 	mcrrvs	8, 7, r7, r2, cr0
    2bf0:	546b636f 	strbtpl	r6, [fp], #-879	; 0xfffffc91
    2bf4:	736e496f 	cmnvc	lr, #1818624	; 0x1bc000
    2bf8:	00747265 	rsbseq	r7, r4, r5, ror #4
    2bfc:	746f5478 	strbtvc	r5, [pc], #-1144	; 2c04 <__HEAP_SIZE+0x1c04>
    2c00:	65486c61 	strbvs	r6, [r8, #-3169]	; 0xfffff39f
    2c04:	69537061 	ldmdbvs	r3, {r0, r5, r6, ip, sp, lr}^
    2c08:	7800657a 	stmdavc	r0, {r1, r3, r4, r5, r6, r8, sl, sp, lr}
    2c0c:	626d754e 	rsbvs	r7, sp, #327155712	; 0x13800000
    2c10:	664f7265 	strbvs	r7, [pc], -r5, ror #4
    2c14:	63637553 	cmnvs	r3, #348127232	; 0x14c00000
    2c18:	66737365 	ldrbtvs	r7, [r3], -r5, ror #6
    2c1c:	72466c75 	subvc	r6, r6, #29952	; 0x7500
    2c20:	00736565 	rsbseq	r6, r3, r5, ror #10
    2c24:	6f6c4278 	svcvs	0x006c4278
    2c28:	69536b63 	ldmdbvs	r3, {r0, r1, r5, r6, r8, r9, fp, sp, lr}^
    2c2c:	7800657a 	stmdavc	r0, {r1, r3, r4, r5, r6, r8, sl, sp, lr}
    2c30:	72617453 	rsbvc	r7, r1, #1392508928	; 0x53000000
    2c34:	42780074 	rsbsmi	r0, r8, #116	; 0x74
    2c38:	6b636f6c 	blvs	18de9f0 <__RAM_SIZE+0x17de9f0>
    2c3c:	4e780073 	mrcmi	0, 3, r0, cr8, cr3, {3}
    2c40:	70006d75 	andvc	r6, r0, r5, ror sp
    2c44:	72694678 	rsbvc	r4, r9, #120, 12	; 0x7800000
    2c48:	72467473 	subvc	r7, r6, #1929379840	; 0x73000000
    2c4c:	6c426565 	cfstr64vs	mvdx6, [r2], {101}	; 0x65
    2c50:	006b636f 	rsbeq	r6, fp, pc, ror #6
    2c54:	6e615778 	mcrvs	7, 3, r5, cr1, cr8, {3}
    2c58:	53646574 	cmnpl	r4, #116, 10	; 0x1d000000
    2c5c:	00657a69 	rsbeq	r7, r5, r9, ror #20
    2c60:	726f5076 	rsbvc	r5, pc, #118	; 0x76
    2c64:	696e4974 	stmdbvs	lr!, {r2, r4, r5, r6, r8, fp, lr}^
    2c68:	6c616974 			; <UNDEFINED> instruction: 0x6c616974
    2c6c:	42657369 	rsbmi	r7, r5, #-1543503871	; 0xa4000001
    2c70:	6b636f6c 	blvs	18dea28 <__RAM_SIZE+0x17dea28>
    2c74:	50760073 	rsbspl	r0, r6, r3, ror r0
    2c78:	4774726f 	ldrbmi	r7, [r4, -pc, ror #4]!
    2c7c:	65487465 	strbvs	r7, [r8, #-1125]	; 0xfffffb9b
    2c80:	74537061 	ldrbvc	r7, [r3], #-97	; 0xffffff9f
    2c84:	00737461 	rsbseq	r7, r3, r1, ror #8
    2c88:	694c7870 	stmdbvs	ip, {r4, r5, r6, fp, ip, sp, lr}^
    2c8c:	75006b6e 	strvc	r6, [r0, #-2926]	; 0xfffff492
    2c90:	6972436c 	ldmdbvs	r2!, {r2, r3, r5, r6, r8, r9, lr}^
    2c94:	61636974 	smcvs	13972	; 0x3694
    2c98:	73654e6c 	cmnvc	r5, #108, 28	; 0x6c0
    2c9c:	676e6974 			; <UNDEFINED> instruction: 0x676e6974
    2ca0:	446c7500 	strbtmi	r7, [ip], #-1280	; 0xfffffb00
    2ca4:	796d6d75 	stmdbvc	sp!, {r0, r2, r4, r5, r6, r8, sl, fp, sp, lr}^
    2ca8:	506c7500 	rsbpl	r7, ip, r0, lsl #10
    2cac:	63750043 	cmnvs	r5, #67	; 0x43
    2cb0:	4e435653 	mcrmi	6, 2, r5, cr3, cr3, {2}
    2cb4:	65626d75 	strbvs	r6, [r2, #-3445]!	; 0xfffff28b
    2cb8:	53760072 	cmnpl	r6, #114	; 0x72
    2cbc:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
    2cc0:	73726946 	cmnvc	r2, #1146880	; 0x118000
    2cc4:	73615474 	cmnvc	r1, #116, 8	; 0x74000000
    2cc8:	7870006b 	ldmdavc	r0!, {r0, r1, r3, r5, r6}^
    2ccc:	74636556 	strbtvc	r6, [r3], #-1366	; 0xfffffaaa
    2cd0:	6154726f 	cmpvs	r4, pc, ror #4
    2cd4:	00656c62 	rsbeq	r6, r5, r2, ror #24
    2cd8:	726f5076 	rsbvc	r5, pc, #118	; 0x76
    2cdc:	43565374 	cmpmi	r6, #116, 6	; 0xd0000001
    2ce0:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
    2ce4:	5f72656c 	svcpl	0x0072656c
    2ce8:	6c750043 	ldclvs	0, cr0, [r5], #-268	; 0xfffffef4
    2cec:	706d6f43 	rsbvc	r6, sp, r3, asr #30
    2cf0:	6574656c 	ldrbvs	r6, [r4, #-1388]!	; 0xfffffa94
    2cf4:	6b636954 	blvs	18dd24c <__RAM_SIZE+0x17dd24c>
    2cf8:	69726550 	ldmdbvs	r2!, {r4, r6, r8, sl, sp, lr}^
    2cfc:	0073646f 	rsbseq	r6, r3, pc, ror #8
    2d00:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    2d04:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    2d08:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    2d0c:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    2d10:	6572462f 	ldrbvs	r4, [r2, #-1583]!	; 0xfffff9d1
    2d14:	4f545265 	svcmi	0x00545265
    2d18:	6f702f53 	svcvs	0x00702f53
    2d1c:	62617472 	rsbvs	r7, r1, #1912602624	; 0x72000000
    2d20:	472f656c 	strmi	r6, [pc, -ip, ror #10]!
    2d24:	412f4343 			; <UNDEFINED> instruction: 0x412f4343
    2d28:	435f4d52 	cmpmi	pc, #5248	; 0x1480
    2d2c:	5f33334d 	svcpl	0x0033334d
    2d30:	2f5a544e 	svccs	0x005a544e
    2d34:	5f6e6f6e 	svcpl	0x006e6f6e
    2d38:	75636573 	strbvc	r6, [r3, #-1395]!	; 0xfffffa8d
    2d3c:	702f6572 	eorvc	r6, pc, r2, ror r5	; <UNPREDICTABLE>
    2d40:	2e74726f 	cdpcs	2, 7, cr7, cr4, cr15, {3}
    2d44:	6c750063 	ldclvs	0, cr0, [r5], #-396	; 0xfffffe74
    2d48:	706d6f43 	rsbvc	r6, sp, r3, asr #30
    2d4c:	6574656c 	ldrbvs	r6, [r4, #-1388]!	; 0xfffffa94
    2d50:	73795364 	cmnvc	r9, #100, 6	; 0x90000001
    2d54:	6b636954 	blvs	18dd2ac <__RAM_SIZE+0x17dd2ac>
    2d58:	72636544 	rsbvc	r6, r3, #68, 10	; 0x11000000
    2d5c:	6e656d65 	cdpvs	13, 6, cr6, cr5, cr5, {3}
    2d60:	70007374 	andvc	r7, r0, r4, ror r3
    2d64:	61436c75 	hvcvs	14021	; 0x36c5
    2d68:	72656c6c 	rsbvc	r6, r5, #108, 24	; 0x6c00
    2d6c:	63617453 	cmnvs	r1, #1392508928	; 0x53000000
    2d70:	6464416b 	strbtvs	r4, [r4], #-363	; 0xfffffe95
    2d74:	73736572 	cmnvc	r3, #478150656	; 0x1c800000
    2d78:	536c7500 	cmnpl	ip, #0, 10
    2d7c:	70706f74 	rsbsvc	r6, r0, r4, ror pc
    2d80:	69546465 	ldmdbvs	r4, {r0, r2, r5, r6, sl, sp, lr}^
    2d84:	4372656d 	cmnmi	r2, #457179136	; 0x1b400000
    2d88:	65706d6f 	ldrbvs	r6, [r0, #-3439]!	; 0xfffff291
    2d8c:	7461736e 	strbtvc	r7, [r1], #-878	; 0xfffffc92
    2d90:	006e6f69 	rsbeq	r6, lr, r9, ror #30
    2d94:	79536c75 	ldmdbvc	r3, {r0, r2, r4, r5, r6, sl, fp, sp, lr}^
    2d98:	63695473 	cmnvs	r9, #1929379840	; 0x73000000
    2d9c:	6365446b 	cmnvs	r5, #1795162112	; 0x6b000000
    2da0:	656d6572 	strbvs	r6, [sp, #-1394]!	; 0xfffffa8e
    2da4:	4c73746e 	cfldrdmi	mvd7, [r3], #-440	; 0xfffffe48
    2da8:	00746665 	rsbseq	r6, r4, r5, ror #12
    2dac:	61436c75 	hvcvs	14021	; 0x36c5
    2db0:	6c75636c 	ldclvs	3, cr6, [r5], #-432	; 0xfffffe50
    2db4:	64657461 	strbtvs	r7, [r5], #-1121	; 0xfffffb9f
    2db8:	64616f4c 	strbtvs	r6, [r1], #-3916	; 0xfffff0b4
    2dbc:	756c6156 	strbvc	r6, [ip, #-342]!	; 0xfffffeaa
    2dc0:	4d780065 	ldclmi	0, cr0, [r8, #-404]!	; 0xfffffe6c
    2dc4:	6669646f 	strbtvs	r6, [r9], -pc, ror #8
    2dc8:	6c626169 	stfvse	f6, [r2], #-420	; 0xfffffe5c
    2dcc:	6c644965 			; <UNDEFINED> instruction: 0x6c644965
    2dd0:	6d695465 	cfstrdvs	mvd5, [r9, #-404]!	; 0xfffffe6c
    2dd4:	78700065 	ldmdavc	r0!, {r0, r2, r5, r6}^
    2dd8:	4f646e45 	svcmi	0x00646e45
    2ddc:	61745366 	cmnvs	r4, r6, ror #6
    2de0:	78006b63 	stmdavc	r0, {r0, r1, r5, r6, r8, r9, fp, sp, lr}
    2de4:	6978614d 	ldmdbvs	r8!, {r0, r2, r3, r6, r8, sp, lr}^
    2de8:	506d756d 	rsbpl	r7, sp, sp, ror #10
    2dec:	6973736f 	ldmdbvs	r3!, {r0, r1, r2, r3, r5, r6, r8, r9, ip, sp, lr}^
    2df0:	53656c62 	cmnpl	r5, #25088	; 0x6200
    2df4:	72707075 	rsbsvc	r7, r0, #117	; 0x75
    2df8:	65737365 	ldrbvs	r7, [r3, #-869]!	; 0xfffffc9b
    2dfc:	63695464 	cmnvs	r9, #100, 8	; 0x64000000
    2e00:	7000736b 	andvc	r7, r0, fp, ror #6
    2e04:	61547672 	cmpvs	r4, r2, ror r6
    2e08:	78456b73 	stmdavc	r5, {r0, r1, r4, r5, r6, r8, r9, fp, sp, lr}^
    2e0c:	72457469 	subvc	r7, r5, #1761607680	; 0x69000000
    2e10:	00726f72 	rsbseq	r6, r2, r2, ror pc
    2e14:	726f5076 	rsbvc	r5, pc, #118	; 0x76
    2e18:	74655374 	strbtvc	r5, [r5], #-884	; 0xfffffc8c
    2e1c:	69547075 	ldmdbvs	r4, {r0, r2, r4, r5, r6, ip, sp, lr}^
    2e20:	4972656d 	ldmdbmi	r2!, {r0, r2, r3, r5, r6, r8, sl, sp, lr}^
    2e24:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
    2e28:	74707572 	ldrbtvc	r7, [r0], #-1394	; 0xfffffa8e
    2e2c:	43787000 	cmnmi	r8, #0
    2e30:	0065646f 	rsbeq	r6, r5, pc, ror #8
    2e34:	726f5078 	rsbvc	r5, pc, #120	; 0x78
    2e38:	49734974 	ldmdbmi	r3!, {r2, r4, r5, r6, r8, fp, lr}^
    2e3c:	6469736e 	strbtvs	r7, [r9], #-878	; 0xfffffc92
    2e40:	746e4965 	strbtvc	r4, [lr], #-2405	; 0xfffff69b
    2e44:	75727265 	ldrbvc	r7, [r2, #-613]!	; 0xfffffd9b
    2e48:	75007470 	strvc	r7, [r0, #-1136]	; 0xfffffb90
    2e4c:	7275436c 	rsbsvc	r4, r5, #108, 6	; 0xb0000001
    2e50:	746e6572 	strbtvc	r6, [lr], #-1394	; 0xfffffa8e
    2e54:	65746e49 	ldrbvs	r6, [r4, #-3657]!	; 0xfffff1b7
    2e58:	70757272 	rsbsvc	r7, r5, r2, ror r2
    2e5c:	52760074 	rsbspl	r0, r6, #116	; 0x74
    2e60:	6f747365 	svcvs	0x00747365
    2e64:	6f436572 	svcvs	0x00436572
    2e68:	7865746e 	stmdavc	r5!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
    2e6c:	46664f74 	uqsub16mi	r4, r6, r4
    2e70:	74737269 	ldrbtvc	r7, [r3], #-617	; 0xfffffd97
    2e74:	6b736154 	blvs	1cdb3cc <__RAM_SIZE+0x1bdb3cc>
    2e78:	726f7000 	rsbvc	r7, pc, #0
    2e7c:	52534974 	subspl	r4, r3, #116, 18	; 0x1d0000
    2e80:	5300745f 	movwpl	r7, #1119	; 0x45f
    2e84:	69547379 	ldmdbvs	r4, {r0, r3, r4, r5, r6, r8, r9, ip, sp, lr}^
    2e88:	485f6b63 	ldmdami	pc, {r0, r1, r5, r6, r8, r9, fp, sp, lr}^	; <UNPREDICTABLE>
    2e8c:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
    2e90:	75007265 	strvc	r7, [r0, #-613]	; 0xfffffd9b
    2e94:	6c65526c 	sfmvs	f5, 2, [r5], #-432	; 0xfffffe50
    2e98:	5664616f 	strbtpl	r6, [r4], -pc, ror #2
    2e9c:	65756c61 	ldrbvs	r6, [r5, #-3169]!	; 0xfffff39f
    2ea0:	546c7500 	strbtpl	r7, [ip], #-1280	; 0xfffffb00
    2ea4:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    2ea8:	6e756f43 	cdpvs	15, 7, cr6, cr5, cr3, {2}
    2eac:	6f467374 	svcvs	0x00467374
    2eb0:	656e4f72 	strbvs	r4, [lr, #-3954]!	; 0xfffff08e
    2eb4:	6b636954 	blvs	18dd40c <__RAM_SIZE+0x17dd40c>
    2eb8:	506c7500 	rsbpl	r7, ip, r0, lsl #10
    2ebc:	69766572 	ldmdbvs	r6!, {r1, r4, r5, r6, r8, sl, sp, lr}^
    2ec0:	4d73756f 	cfldr64mi	mvdx7, [r3, #-444]!	; 0xfffffe44
    2ec4:	006b7361 	rsbeq	r7, fp, r1, ror #6
    2ec8:	646e6550 	strbtvs	r6, [lr], #-1360	; 0xfffffab0
    2ecc:	485f5653 	ldmdami	pc, {r0, r1, r4, r6, r9, sl, ip, lr}^	; <UNPREDICTABLE>
    2ed0:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
    2ed4:	2e007265 	cdpcs	2, 0, cr7, cr0, cr5, {3}
    2ed8:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    2edc:	2f2e2e2f 	svccs	0x002e2e2f
    2ee0:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
    2ee4:	2f736f74 	svccs	0x00736f74
    2ee8:	65657246 	strbvs	r7, [r5, #-582]!	; 0xfffffdba
    2eec:	534f5452 	movtpl	r5, #62546	; 0xf452
    2ef0:	726f702f 	rsbvc	r7, pc, #47	; 0x2f
    2ef4:	6c626174 	stfvse	f6, [r2], #-464	; 0xfffffe30
    2ef8:	43472f65 	movtmi	r2, #32613	; 0x7f65
    2efc:	52412f43 	subpl	r2, r1, #268	; 0x10c
    2f00:	4d435f4d 	stclmi	15, cr5, [r3, #-308]	; 0xfffffecc
    2f04:	4e5f3333 	mrcmi	3, 2, r3, cr15, cr3, {1}
    2f08:	6e2f5a54 			; <UNDEFINED> instruction: 0x6e2f5a54
    2f0c:	735f6e6f 	cmpvc	pc, #1776	; 0x6f0
    2f10:	72756365 	rsbsvc	r6, r5, #-1811939327	; 0x94000001
    2f14:	6f702f65 	svcvs	0x00702f65
    2f18:	73617472 	cmnvc	r1, #1912602624	; 0x72000000
    2f1c:	00632e6d 	rsbeq	r2, r3, sp, ror #28
    2f20:	50734978 	rsbspl	r4, r3, r8, ror r9
    2f24:	69766972 	ldmdbvs	r6!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    2f28:	6567656c 	strbvs	r6, [r7, #-1388]!	; 0xfffffa94
    2f2c:	56530064 	ldrbpl	r0, [r3], -r4, rrx
    2f30:	61485f43 	cmpvs	r8, r3, asr #30
    2f34:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
    2f38:	52760072 	rsbspl	r0, r6, #114	; 0x72
    2f3c:	74657365 	strbtvc	r7, [r5], #-869	; 0xfffffc9b
    2f40:	76697250 			; <UNDEFINED> instruction: 0x76697250
    2f44:	67656c69 	strbvs	r6, [r5, -r9, ror #24]!
    2f48:	6c750065 	ldclvs	0, cr0, [r5], #-404	; 0xfffffe6c
    2f4c:	6b73614d 	blvs	1cdb488 <__RAM_SIZE+0x1bdb488>
    2f50:	61527600 	cmpvs	r2, r0, lsl #12
    2f54:	50657369 	rsbpl	r7, r5, r9, ror #6
    2f58:	69766972 	ldmdbvs	r6!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    2f5c:	6567656c 	strbvs	r6, [r7, #-1388]!	; 0xfffffa94
    2f60:	732f2e00 			; <UNDEFINED> instruction: 0x732f2e00
    2f64:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
    2f68:	672f7075 			; <UNDEFINED> instruction: 0x672f7075
    2f6c:	732f6363 			; <UNDEFINED> instruction: 0x732f6363
    2f70:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
    2f74:	415f7075 	cmpmi	pc, r5, ror r0	; <UNPREDICTABLE>
    2f78:	4d434d52 	stclmi	13, cr4, [r3, #-328]	; 0xfffffeb8
    2f7c:	732e3333 			; <UNDEFINED> instruction: 0x732e3333
    2f80:	554e4700 	strbpl	r4, [lr, #-1792]	; 0xfffff900
    2f84:	20534120 	subscs	r4, r3, r0, lsr #2
    2f88:	36332e32 			; <UNDEFINED> instruction: 0x36332e32
    2f8c:	2e00312e 	adfcssp	f3, f0, #0.5
    2f90:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    2f94:	2f2e2e2f 	svccs	0x002e2e2f
    2f98:	7562696c 	strbvc	r6, [r2, #-2412]!	; 0xfffff694
    2f9c:	736c6974 	cmnvc	ip, #116, 18	; 0x1d0000
    2fa0:	7561662f 	strbvc	r6, [r1, #-1583]!	; 0xfffff9d1
    2fa4:	642d746c 	strtvs	r7, [sp], #-1132	; 0xfffffb94
    2fa8:	2f706d75 	svccs	0x00706d75
    2fac:	2f757063 	svccs	0x00757063
    2fb0:	74726f63 	ldrbtvc	r6, [r2], #-3939	; 0xfffff09d
    2fb4:	6d2d7865 	stcvs	8, cr7, [sp, #-404]!	; 0xfffffe6c
    2fb8:	662f3333 			; <UNDEFINED> instruction: 0x662f3333
    2fbc:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
    2fc0:	6363672d 	cmnvs	r3, #11796480	; 0xb40000
    2fc4:	Address 0x00002fc4 is out of bounds.


Disassembly of section .debug_frame:

00000000 <.debug_frame>:
       0:	0000000c 	andeq	r0, r0, ip
       4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
        xReturn = pdFALSE;
       8:	7c020001 	stcvc	0, cr0, [r2], {1}
}
       c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    ( pxList->uxNumberOfItems ) = ( UBaseType_t ) ( pxList->uxNumberOfItems + 1U );
      10:	0000001c 	andeq	r0, r0, ip, lsl r0
}
      14:	00000000 	andeq	r0, r0, r0
        if(ch == '\n' || it >= size) {
      18:	10000800 	andne	r0, r0, r0, lsl #16
}
      1c:	00000044 	andeq	r0, r0, r4, asr #32
      20:	8e040e41 	cdphi	14, 0, cr0, cr4, cr1, {2}
      24:	100e4101 	andne	r4, lr, r1, lsl #2
      28:	040e0a52 	streq	r0, [lr], #-2642	; 0xfffff5ae
      2c:	00000b42 	andeq	r0, r0, r2, asr #22
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
      30:	00000014 	andeq	r0, r0, r4, lsl r0
                    xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
      34:	00000000 	andeq	r0, r0, r0
      38:	10000844 	andne	r0, r0, r4, asr #16
      3c:	00000018 	andeq	r0, r0, r8, lsl r0
      40:	83080e41 	movwhi	r0, #36417	; 0x8e41
        BaseType_t xReturn = pdFAIL;
      44:	00018e02 	andeq	r8, r1, r2, lsl #28
    }
      48:	00000014 	andeq	r0, r0, r4, lsl r0
	...
      54:	00000010 	andeq	r0, r0, r0, lsl r0
      58:	83080e41 	movwhi	r0, #36417	; 0x8e41
      5c:	00018e02 	andeq	r8, r1, r2, lsl #28
      60:	00000014 	andeq	r0, r0, r4, lsl r0
	...
      6c:	00000010 	andeq	r0, r0, r0, lsl r0
      70:	83080e41 	movwhi	r0, #36417	; 0x8e41
      74:	00018e02 	andeq	r8, r1, r2, lsl #28
      78:	00000014 	andeq	r0, r0, r4, lsl r0
	...
            ( void ) xTaskResumeAll();
      84:	00000020 	andeq	r0, r0, r0, lsr #32
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
      88:	83080e41 	movwhi	r0, #36417	; 0x8e41
      8c:	00018e02 	andeq	r8, r1, r2, lsl #28
      90:	0000001c 	andeq	r0, r0, ip, lsl r0
	...
                if( xTicksToWait == ( TickType_t ) 0 )
      9c:	0000004c 	andeq	r0, r0, ip, asr #32
      a0:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
                else if( xEntryTimeSet == pdFALSE )
      a4:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
        taskEXIT_CRITICAL();
      a8:	180e4101 	stmdane	lr, {r0, r8, lr}
        vTaskSuspendAll();
      ac:	000c0e5f 	andeq	r0, ip, pc, asr lr
        prvLockQueue( pxQueue );
      b0:	0000001c 	andeq	r0, r0, ip, lsl r0
	...
      bc:	00000068 	andeq	r0, r0, r8, rrx
      c0:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
      c4:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
      c8:	900e4101 	andls	r4, lr, r1, lsl #2
      cc:	0c0e6902 			; <UNDEFINED> instruction: 0x0c0e6902
        if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
      d0:	00000014 	andeq	r0, r0, r4, lsl r0
	...
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
      dc:	0000001c 	andeq	r0, r0, ip, lsl r0
      e0:	83080e41 	movwhi	r0, #36417	; 0x8e41
                    if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
      e4:	00018e02 	andeq	r8, r1, r2, lsl #28
      e8:	00000014 	andeq	r0, r0, r4, lsl r0
	...
                prvUnlockQueue( pxQueue );
      f4:	00000018 	andeq	r0, r0, r8, lsl r0
      f8:	83080e41 	movwhi	r0, #36417	; 0x8e41
                if( xTaskResumeAll() == pdFALSE )
      fc:	00018e02 	andeq	r8, r1, r2, lsl #28
     100:	00000014 	andeq	r0, r0, r4, lsl r0
	...
                return errQUEUE_EMPTY;
     10c:	00000018 	andeq	r0, r0, r8, lsl r0
                        taskENTER_CRITICAL();
     110:	83080e41 	movwhi	r0, #36417	; 0x8e41
                            uxHighestWaitingPriority = prvGetDisinheritPriorityAfterTimeout( pxQueue );
     114:	00018e02 	andeq	r8, r1, r2, lsl #28
     118:	00000014 	andeq	r0, r0, r4, lsl r0
	...
                        taskEXIT_CRITICAL();
     124:	00000018 	andeq	r0, r0, r8, lsl r0
     128:	83080e41 	movwhi	r0, #36417	; 0x8e41
     12c:	00018e02 	andeq	r8, r1, r2, lsl #28
     130:	00000014 	andeq	r0, r0, r4, lsl r0
	...
     13c:	00000018 	andeq	r0, r0, r8, lsl r0
     140:	83080e41 	movwhi	r0, #36417	; 0x8e41
     144:	00018e02 	andeq	r8, r1, r2, lsl #28
     148:	00000014 	andeq	r0, r0, r4, lsl r0
	...
     154:	00000018 	andeq	r0, r0, r8, lsl r0
     158:	83080e41 	movwhi	r0, #36417	; 0x8e41
     15c:	00018e02 	andeq	r8, r1, r2, lsl #28
     160:	00000014 	andeq	r0, r0, r4, lsl r0
     164:	00000000 	andeq	r0, r0, r0
     168:	1000085c 	andne	r0, r0, ip, asr r8
     16c:	0000002c 	andeq	r0, r0, ip, lsr #32
     170:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     174:	00018e02 	andeq	r8, r1, r2, lsl #28
     178:	0000000c 	andeq	r0, r0, ip
     17c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     180:	7c020001 	stcvc	0, cr0, [r2], {1}
     184:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     188:	0000000c 	andeq	r0, r0, ip
     18c:	00000178 	andeq	r0, r0, r8, ror r1
     190:	00000000 	andeq	r0, r0, r0
     194:	00000010 	andeq	r0, r0, r0, lsl r0
     198:	0000000c 	andeq	r0, r0, ip
     19c:	00000178 	andeq	r0, r0, r8, ror r1
     1a0:	10000888 	andne	r0, r0, r8, lsl #17
     1a4:	0000002c 	andeq	r0, r0, ip, lsr #32
     1a8:	0000000c 	andeq	r0, r0, ip
     1ac:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     1b0:	7c020001 	stcvc	0, cr0, [r2], {1}
     1b4:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     1b8:	0000000c 	andeq	r0, r0, ip
     1bc:	000001a8 	andeq	r0, r0, r8, lsr #3
     1c0:	00000000 	andeq	r0, r0, r0
     1c4:	00000008 	andeq	r0, r0, r8
     1c8:	0000000c 	andeq	r0, r0, ip
     1cc:	000001a8 	andeq	r0, r0, r8, lsr #3
     1d0:	100008b4 			; <UNDEFINED> instruction: 0x100008b4
     1d4:	00000002 	andeq	r0, r0, r2
     1d8:	00000018 	andeq	r0, r0, r8, lsl r0
     1dc:	000001a8 	andeq	r0, r0, r8, lsr #3
     1e0:	00000000 	andeq	r0, r0, r0
     1e4:	0000000e 	andeq	r0, r0, lr
     1e8:	83080e42 	movwhi	r0, #36418	; 0x8e42
     1ec:	44018e02 	strmi	r8, [r1], #-3586	; 0xfffff1fe
     1f0:	cec3000e 	cdpgt	0, 12, cr0, cr3, cr14, {0}
     1f4:	0000000c 	andeq	r0, r0, ip
     1f8:	000001a8 	andeq	r0, r0, r8, lsr #3
     1fc:	100008b6 			; <UNDEFINED> instruction: 0x100008b6
     200:	00000024 	andeq	r0, r0, r4, lsr #32
     204:	0000002c 	andeq	r0, r0, ip, lsr #32
     208:	000001a8 	andeq	r0, r0, r8, lsr #3
     20c:	100008da 	ldrdne	r0, [r0], -sl
     210:	0000007e 	andeq	r0, r0, lr, ror r0
     214:	84240e42 	strthi	r0, [r4], #-3650	; 0xfffff1be
     218:	86088509 	strhi	r8, [r8], -r9, lsl #10
     21c:	88068707 	stmdahi	r6, {r0, r1, r2, r8, r9, sl, pc}
     220:	8a048905 	bhi	12263c <__RAM_SIZE+0x2263c>
     224:	8e028b03 	vmlahi.f64	d8, d2, d3
     228:	300e4101 	andcc	r4, lr, r1, lsl #2
     22c:	240e0a6f 	strcs	r0, [lr], #-2671	; 0xfffff591
     230:	00000b42 	andeq	r0, r0, r2, asr #22
     234:	00000028 	andeq	r0, r0, r8, lsr #32
     238:	000001a8 	andeq	r0, r0, r8, lsr #3
     23c:	10000958 	andne	r0, r0, r8, asr r9
     240:	00000138 	andeq	r0, r0, r8, lsr r1
     244:	841c0e42 	ldrhi	r0, [ip], #-3650	; 0xfffff1be
     248:	86068507 	strhi	r8, [r6], -r7, lsl #10
     24c:	88048705 	stmdahi	r4, {r0, r2, r8, r9, sl, pc}
     250:	8e028903 	vmlahi.f16	s16, s4, s6	; <UNPREDICTABLE>
     254:	300e4101 	andcc	r4, lr, r1, lsl #2
     258:	0e0a5b02 	vmlaeq.f64	d5, d10, d2
     25c:	000b421c 	andeq	r4, fp, ip, lsl r2
     260:	00000020 	andeq	r0, r0, r0, lsr #32
     264:	000001a8 	andeq	r0, r0, r8, lsr #3
     268:	10000a90 	mulne	r0, r0, sl
     26c:	00000094 	muleq	r0, r4, r0
     270:	84140e41 	ldrhi	r0, [r4], #-3649	; 0xfffff1bf
     274:	86048505 	strhi	r8, [r4], -r5, lsl #10
     278:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
     27c:	580e4101 	stmdapl	lr, {r0, r8, lr}
     280:	140e4702 	strne	r4, [lr], #-1794	; 0xfffff8fe
     284:	00000028 	andeq	r0, r0, r8, lsr #32
     288:	000001a8 	andeq	r0, r0, r8, lsr #3
     28c:	10000b24 	andne	r0, r0, r4, lsr #22
     290:	000000c6 	andeq	r0, r0, r6, asr #1
     294:	84240e42 	strthi	r0, [r4], #-3650	; 0xfffff1be
     298:	86088509 	strhi	r8, [r8], -r9, lsl #10
     29c:	88068707 	stmdahi	r6, {r0, r1, r2, r8, r9, sl, pc}
     2a0:	8a048905 	bhi	1226bc <__RAM_SIZE+0x226bc>
     2a4:	8e028b03 	vmlahi.f64	d8, d2, d3
     2a8:	780e4101 	stmdavc	lr, {r0, r8, lr}
     2ac:	240e5e02 	strcs	r5, [lr], #-3586	; 0xfffff1fe
     2b0:	0000003c 	andeq	r0, r0, ip, lsr r0
     2b4:	000001a8 	andeq	r0, r0, r8, lsr #3
     2b8:	10000bf0 	strdne	r0, [r0], -r0	; <UNPREDICTABLE>
     2bc:	000003ea 	andeq	r0, r0, sl, ror #7
     2c0:	84240e42 	strthi	r0, [r4], #-3650	; 0xfffff1be
     2c4:	86088509 	strhi	r8, [r8], -r9, lsl #10
     2c8:	88068707 	stmdahi	r6, {r0, r1, r2, r8, r9, sl, pc}
     2cc:	8a048905 	bhi	1226e8 <__RAM_SIZE+0x226e8>
     2d0:	8e028b03 	vmlahi.f64	d8, d2, d3
     2d4:	2c0e4201 	sfmcs	f4, 4, [lr], {1}
     2d8:	050b5005 	streq	r5, [fp, #-5]
     2dc:	0e410a51 			; <UNDEFINED> instruction: 0x0e410a51
     2e0:	01250370 			; <UNDEFINED> instruction: 0x01250370
     2e4:	422c0e0a 	eormi	r0, ip, #10, 28	; 0xa0
     2e8:	51065006 	tstpl	r6, r6
     2ec:	0b42240e 	bleq	108932c <__RAM_SIZE+0xf8932c>
     2f0:	00000040 	andeq	r0, r0, r0, asr #32
     2f4:	000001a8 	andeq	r0, r0, r8, lsr #3
     2f8:	10000fe0 	andne	r0, r0, r0, ror #31
     2fc:	00000396 	muleq	r0, r6, r3
     300:	84240e42 	strthi	r0, [r4], #-3650	; 0xfffff1be
     304:	86088509 	strhi	r8, [r8], -r9, lsl #10
     308:	88068707 	stmdahi	r6, {r0, r1, r2, r8, r9, sl, pc}
     30c:	8a048905 	bhi	122728 <__RAM_SIZE+0x22728>
     310:	8e028b03 	vmlahi.f64	d8, d2, d3
     314:	2c0e4201 	sfmcs	f4, 4, [lr], {1}
     318:	050b5005 	streq	r5, [fp, #-5]
     31c:	0e410a51 			; <UNDEFINED> instruction: 0x0e410a51
     320:	8d030180 	stfhis	f0, [r3, #-512]	; 0xfffffe00
     324:	2c0e0a01 			; <UNDEFINED> instruction: 0x2c0e0a01
     328:	06500642 	ldrbeq	r0, [r0], -r2, asr #12
     32c:	42240e51 	eormi	r0, r4, #1296	; 0x510
     330:	0000000b 	andeq	r0, r0, fp
     334:	0000002c 	andeq	r0, r0, ip, lsr #32
     338:	000001a8 	andeq	r0, r0, r8, lsr #3
     33c:	10001378 	andne	r1, r0, r8, ror r3
     340:	00000680 	andeq	r0, r0, r0, lsl #13
     344:	84240e42 	strthi	r0, [r4], #-3650	; 0xfffff1be
     348:	86088509 	strhi	r8, [r8], -r9, lsl #10
     34c:	88068707 	stmdahi	r6, {r0, r1, r2, r8, r9, sl, pc}
     350:	8a048905 	bhi	12276c <__RAM_SIZE+0x2276c>
     354:	8e028b03 	vmlahi.f64	d8, d2, d3
     358:	600e4101 	andvs	r4, lr, r1, lsl #2
     35c:	0e033803 	cdpeq	8, 0, cr3, cr3, cr3, {0}
     360:	00000024 	andeq	r0, r0, r4, lsr #32
     364:	00000014 	andeq	r0, r0, r4, lsl r0
     368:	000001a8 	andeq	r0, r0, r8, lsr #3
     36c:	100019f8 	strdne	r1, [r0], -r8
     370:	0000000c 	andeq	r0, r0, ip
     374:	83080e43 	movwhi	r0, #36419	; 0x8e43
     378:	00018e02 	andeq	r8, r1, r2, lsl #28
     37c:	00000030 	andeq	r0, r0, r0, lsr r0
     380:	000001a8 	andeq	r0, r0, r8, lsr #3
     384:	10001a04 	andne	r1, r0, r4, lsl #20
     388:	0000002c 	andeq	r0, r0, ip, lsr #32
     38c:	80100e41 	andshi	r0, r0, r1, asr #28
     390:	82038104 	andhi	r8, r3, #4, 2
     394:	41018302 	tstmi	r1, r2, lsl #6
     398:	058e140e 	streq	r1, [lr, #1038]	; 0x40e
     39c:	4c280e41 	stcmi	14, cr0, [r8], #-260	; 0xfffffefc
     3a0:	ce42140e 	cdpgt	4, 4, cr1, cr2, cr14, {0}
     3a4:	c341100e 	movtgt	r1, #4110	; 0x100e
     3a8:	0ec0c1c2 	acseqdm	f4, f2
     3ac:	00000000 	andeq	r0, r0, r0
     3b0:	0000002c 	andeq	r0, r0, ip, lsr #32
     3b4:	000001a8 	andeq	r0, r0, r8, lsr #3
     3b8:	00000000 	andeq	r0, r0, r0
     3bc:	0000002c 	andeq	r0, r0, ip, lsr #32
     3c0:	810c0e41 	tsthi	ip, r1, asr #28
     3c4:	83028203 	movwhi	r8, #8707	; 0x2203
     3c8:	100e4101 	andne	r4, lr, r1, lsl #2
     3cc:	0e41048e 	cdpeq	4, 4, cr0, cr1, cr14, {4}
     3d0:	100e4c20 	andne	r4, lr, r0, lsr #24
     3d4:	0c0ece42 	stceq	14, cr12, [lr], {66}	; 0x42
     3d8:	c1c2c341 	bicgt	ip, r2, r1, asr #6
     3dc:	0000000e 	andeq	r0, r0, lr
     3e0:	0000002c 	andeq	r0, r0, ip, lsr #32
     3e4:	000001a8 	andeq	r0, r0, r8, lsr #3
     3e8:	00000000 	andeq	r0, r0, r0
     3ec:	00000028 	andeq	r0, r0, r8, lsr #32
     3f0:	82080e41 	andhi	r0, r8, #1040	; 0x410
     3f4:	41018302 	tstmi	r1, r2, lsl #6
     3f8:	0484100e 	streq	r1, [r4], #14
     3fc:	0e41038e 	cdpeq	3, 4, cr0, cr1, cr14, {4}
     400:	100e4b20 	andne	r4, lr, r0, lsr #22
     404:	0ec4ce42 	cdpeq	14, 12, cr12, cr4, cr2, {2}
     408:	c2c34108 	sbcgt	r4, r3, #8, 2
     40c:	0000000e 	andeq	r0, r0, lr
     410:	00000018 	andeq	r0, r0, r8, lsl r0
     414:	000001a8 	andeq	r0, r0, r8, lsr #3
     418:	00000000 	andeq	r0, r0, r0
     41c:	00000020 	andeq	r0, r0, r0, lsr #32
     420:	8e040e41 	cdphi	14, 0, cr0, cr4, cr1, {2}
     424:	180e4101 	stmdane	lr, {r0, r8, lr}
     428:	00040e49 	andeq	r0, r4, r9, asr #28
     42c:	00000018 	andeq	r0, r0, r8, lsl r0
     430:	000001a8 	andeq	r0, r0, r8, lsr #3
     434:	00000000 	andeq	r0, r0, r0
     438:	0000001c 	andeq	r0, r0, ip, lsl r0
     43c:	8e040e41 	cdphi	14, 0, cr0, cr4, cr1, {2}
     440:	100e4101 	andne	r4, lr, r1, lsl #2
     444:	00040e48 	andeq	r0, r4, r8, asr #28
     448:	00000028 	andeq	r0, r0, r8, lsr #32
     44c:	000001a8 	andeq	r0, r0, r8, lsr #3
     450:	00000000 	andeq	r0, r0, r0
     454:	00000030 	andeq	r0, r0, r0, lsr r0
     458:	82080e41 	andhi	r0, r8, #1040	; 0x410
     45c:	41018302 	tstmi	r1, r2, lsl #6
     460:	038e0c0e 	orreq	r0, lr, #3584	; 0xe00
     464:	4e280e41 	cdpmi	14, 2, cr0, cr8, cr1, {2}
     468:	ce420c0e 	cdpgt	12, 4, cr0, cr2, cr14, {0}
     46c:	c341080e 	movtgt	r0, #6158	; 0x180e
     470:	00000ec2 	andeq	r0, r0, r2, asr #29
     474:	0000000c 	andeq	r0, r0, ip
     478:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     47c:	7c020001 	stcvc	0, cr0, [r2], {1}
     480:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     484:	0000000c 	andeq	r0, r0, ip
     488:	00000474 	andeq	r0, r0, r4, ror r4
     48c:	10001a30 	andne	r1, r0, r0, lsr sl
     490:	00000014 	andeq	r0, r0, r4, lsl r0
     494:	0000000c 	andeq	r0, r0, ip
     498:	00000474 	andeq	r0, r0, r4, ror r4
     49c:	00000000 	andeq	r0, r0, r0
     4a0:	00000014 	andeq	r0, r0, r4, lsl r0
     4a4:	00000018 	andeq	r0, r0, r8, lsl r0
     4a8:	00000474 	andeq	r0, r0, r4, ror r4
     4ac:	10001a44 	andne	r1, r0, r4, asr #20
     4b0:	0000001e 	andeq	r0, r0, lr, lsl r0
     4b4:	83100e41 	tsthi	r0, #1040	; 0x410
     4b8:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     4bc:	00018e02 	andeq	r8, r1, r2, lsl #28
     4c0:	0000000c 	andeq	r0, r0, ip
     4c4:	00000474 	andeq	r0, r0, r4, ror r4
     4c8:	10001a64 	andne	r1, r0, r4, ror #20
     4cc:	00000024 	andeq	r0, r0, r4, lsr #32
     4d0:	00000014 	andeq	r0, r0, r4, lsl r0
     4d4:	00000474 	andeq	r0, r0, r4, ror r4
     4d8:	00000000 	andeq	r0, r0, r0
     4dc:	00000008 	andeq	r0, r0, r8
     4e0:	83080e41 	movwhi	r0, #36417	; 0x8e41
     4e4:	00018e02 	andeq	r8, r1, r2, lsl #28
     4e8:	00000018 	andeq	r0, r0, r8, lsl r0
     4ec:	00000474 	andeq	r0, r0, r4, ror r4
     4f0:	00000000 	andeq	r0, r0, r0
     4f4:	00000020 	andeq	r0, r0, r0, lsr #32
     4f8:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
     4fc:	86038504 	strhi	r8, [r3], -r4, lsl #10
     500:	00018e02 	andeq	r8, r1, r2, lsl #28
     504:	0000000c 	andeq	r0, r0, ip
     508:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     50c:	7c020001 	stcvc	0, cr0, [r2], {1}
     510:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     514:	00000014 	andeq	r0, r0, r4, lsl r0
     518:	00000504 	andeq	r0, r0, r4, lsl #10
     51c:	10001a88 	andne	r1, r0, r8, lsl #21
     520:	0000002c 	andeq	r0, r0, ip, lsr #32
     524:	54080e41 	strpl	r0, [r8], #-3649	; 0xfffff1bf
     528:	0000000e 	andeq	r0, r0, lr
     52c:	0000000c 	andeq	r0, r0, ip
     530:	00000504 	andeq	r0, r0, r4, lsl #10
     534:	10001ab4 			; <UNDEFINED> instruction: 0x10001ab4
     538:	00000036 	andeq	r0, r0, r6, lsr r0
     53c:	00000014 	andeq	r0, r0, r4, lsl r0
     540:	00000504 	andeq	r0, r0, r4, lsl #10
     544:	10001aec 	andne	r1, r0, ip, ror #21
     548:	00000018 	andeq	r0, r0, r8, lsl r0
     54c:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     550:	00018e02 	andeq	r8, r1, r2, lsl #28
     554:	00000014 	andeq	r0, r0, r4, lsl r0
     558:	00000504 	andeq	r0, r0, r4, lsl #10
     55c:	10001b04 	andne	r1, r0, r4, lsl #22
     560:	00000050 	andeq	r0, r0, r0, asr r0
     564:	83080e41 	movwhi	r0, #36417	; 0x8e41
     568:	00018e02 	andeq	r8, r1, r2, lsl #28
     56c:	00000020 	andeq	r0, r0, r0, lsr #32
     570:	00000504 	andeq	r0, r0, r4, lsl #10
     574:	10001b54 	andne	r1, r0, r4, asr fp
     578:	0000007c 	andeq	r0, r0, ip, ror r0
     57c:	83200e42 			; <UNDEFINED> instruction: 0x83200e42
     580:	85078408 	strhi	r8, [r7, #-1032]	; 0xfffffbf8
     584:	87058606 	strhi	r8, [r5, -r6, lsl #12]
     588:	89038804 	stmdbhi	r3, {r2, fp, pc}
     58c:	00018e02 	andeq	r8, r1, r2, lsl #28
     590:	0000001c 	andeq	r0, r0, ip, lsl r0
     594:	00000504 	andeq	r0, r0, r4, lsl #10
     598:	10001bd0 	ldrdne	r1, [r0], -r0
     59c:	00000184 	andeq	r0, r0, r4, lsl #3
     5a0:	83180e41 	tsthi	r8, #1040	; 0x410
     5a4:	85058406 	strhi	r8, [r5, #-1030]	; 0xfffffbfa
     5a8:	87038604 	strhi	r8, [r3, -r4, lsl #12]
     5ac:	00018e02 	andeq	r8, r1, r2, lsl #28
     5b0:	0000000c 	andeq	r0, r0, ip
     5b4:	00000504 	andeq	r0, r0, r4, lsl #10
     5b8:	00000000 	andeq	r0, r0, r0
     5bc:	00000006 	andeq	r0, r0, r6
     5c0:	0000000c 	andeq	r0, r0, ip
     5c4:	00000504 	andeq	r0, r0, r4, lsl #10
     5c8:	00000000 	andeq	r0, r0, r0
     5cc:	00000008 	andeq	r0, r0, r8
     5d0:	0000000c 	andeq	r0, r0, ip
     5d4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     5d8:	7c020001 	stcvc	0, cr0, [r2], {1}
     5dc:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     5e0:	00000014 	andeq	r0, r0, r4, lsl r0
     5e4:	000005d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
     5e8:	10001d54 	andne	r1, r0, r4, asr sp
     5ec:	000000fc 	strdeq	r0, [r0], -ip
     5f0:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     5f4:	00018e02 	andeq	r8, r1, r2, lsl #28
     5f8:	0000000c 	andeq	r0, r0, ip
     5fc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     600:	7c020001 	stcvc	0, cr0, [r2], {1}
     604:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     608:	0000000c 	andeq	r0, r0, ip
     60c:	000005f8 	strdeq	r0, [r0], -r8
     610:	10001e50 	andne	r1, r0, r0, asr lr
     614:	0000001a 	andeq	r0, r0, sl, lsl r0
     618:	0000000c 	andeq	r0, r0, ip
     61c:	000005f8 	strdeq	r0, [r0], -r8
     620:	10001e6a 	andne	r1, r0, sl, ror #28
     624:	00000006 	andeq	r0, r0, r6
     628:	0000000c 	andeq	r0, r0, ip
     62c:	000005f8 	strdeq	r0, [r0], -r8
     630:	00000000 	andeq	r0, r0, r0
     634:	00000016 	andeq	r0, r0, r6, lsl r0
     638:	0000001c 	andeq	r0, r0, ip, lsl r0
     63c:	000005f8 	strdeq	r0, [r0], -r8
     640:	10001e70 	andne	r1, r0, r0, ror lr
     644:	00000032 	andeq	r0, r0, r2, lsr r0
     648:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     64c:	55018502 	strpl	r8, [r1, #-1282]	; 0xfffffafe
     650:	0ec4c50a 	cdpeq	5, 12, cr12, cr4, cr10, {0}
     654:	000b4100 	andeq	r4, fp, r0, lsl #2
     658:	0000000c 	andeq	r0, r0, ip
     65c:	000005f8 	strdeq	r0, [r0], -r8
     660:	10001ea2 	andne	r1, r0, r2, lsr #29
     664:	00000024 	andeq	r0, r0, r4, lsr #32
     668:	0000000c 	andeq	r0, r0, ip
     66c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     670:	7c020001 	stcvc	0, cr0, [r2], {1}
     674:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     678:	0000000c 	andeq	r0, r0, ip
     67c:	00000668 	andeq	r0, r0, r8, ror #12
     680:	00000000 	andeq	r0, r0, r0
     684:	00000010 	andeq	r0, r0, r0, lsl r0
     688:	00000014 	andeq	r0, r0, r4, lsl r0
     68c:	00000668 	andeq	r0, r0, r8, ror #12
     690:	00000000 	andeq	r0, r0, r0
     694:	0000001e 	andeq	r0, r0, lr, lsl r0
     698:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     69c:	00018e02 	andeq	r8, r1, r2, lsl #28
     6a0:	00000014 	andeq	r0, r0, r4, lsl r0
     6a4:	00000668 	andeq	r0, r0, r8, ror #12
     6a8:	10001ec6 	andne	r1, r0, r6, asr #29
     6ac:	0000001a 	andeq	r0, r0, sl, lsl r0
     6b0:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     6b4:	00018e02 	andeq	r8, r1, r2, lsl #28
     6b8:	00000018 	andeq	r0, r0, r8, lsl r0
     6bc:	00000668 	andeq	r0, r0, r8, ror #12
     6c0:	10001ee0 	andne	r1, r0, r0, ror #29
     6c4:	00000076 	andeq	r0, r0, r6, ror r0
     6c8:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
     6cc:	86038504 	strhi	r8, [r3], -r4, lsl #10
     6d0:	00018e02 	andeq	r8, r1, r2, lsl #28
     6d4:	00000018 	andeq	r0, r0, r8, lsl r0
     6d8:	00000668 	andeq	r0, r0, r8, ror #12
     6dc:	10001f56 	andne	r1, r0, r6, asr pc
     6e0:	00000024 	andeq	r0, r0, r4, lsr #32
     6e4:	84080e44 	strhi	r0, [r8], #-3652	; 0xfffff1bc
     6e8:	4d018e02 	stcmi	14, cr8, [r1, #-8]
     6ec:	cec4000e 	cdpgt	0, 12, cr0, cr4, cr14, {0}
     6f0:	00000020 	andeq	r0, r0, r0, lsr #32
     6f4:	00000668 	andeq	r0, r0, r8, ror #12
     6f8:	10001f7a 	andne	r1, r0, sl, ror pc
     6fc:	00000058 	andeq	r0, r0, r8, asr r0
     700:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
     704:	86038504 	strhi	r8, [r3], -r4, lsl #10
     708:	41018e02 	tstmi	r1, r2, lsl #28
     70c:	0a49180e 	beq	124674c <__RAM_SIZE+0x114674c>
     710:	0b41100e 	bleq	1044750 <__RAM_SIZE+0xf44750>
     714:	00000018 	andeq	r0, r0, r8, lsl r0
     718:	00000668 	andeq	r0, r0, r8, ror #12
     71c:	10001fd2 	ldrdne	r1, [r0], -r2
     720:	00000082 	andeq	r0, r0, r2, lsl #1
     724:	83100e41 	tsthi	r0, #1040	; 0x410
     728:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     72c:	00018e02 	andeq	r8, r1, r2, lsl #28
     730:	0000002c 	andeq	r0, r0, ip, lsr #32
     734:	00000668 	andeq	r0, r0, r8, ror #12
     738:	10002054 	andne	r2, r0, r4, asr r0
     73c:	00000086 	andeq	r0, r0, r6, lsl #1
     740:	83100e43 	tsthi	r0, #1072	; 0x430
     744:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     748:	7c018e02 	stcvc	14, cr8, [r1], {2}
     74c:	c4c3000e 	strbgt	r0, [r3], #14
     750:	0e42cec5 	cdpeq	14, 4, cr12, cr2, cr5, {6}
     754:	84048310 	strhi	r8, [r4], #-784	; 0xfffffcf0
     758:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
     75c:	00000001 	andeq	r0, r0, r1
     760:	00000014 	andeq	r0, r0, r4, lsl r0
     764:	00000668 	andeq	r0, r0, r8, ror #12
     768:	100020da 	ldrdne	r2, [r0], -sl
     76c:	00000020 	andeq	r0, r0, r0, lsr #32
     770:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     774:	00018e02 	andeq	r8, r1, r2, lsl #28
     778:	00000028 	andeq	r0, r0, r8, lsr #32
     77c:	00000668 	andeq	r0, r0, r8, ror #12
     780:	100020fa 	strdne	r2, [r0], -sl
     784:	0000003e 	andeq	r0, r0, lr, lsr r0
     788:	84080e42 	strhi	r0, [r8], #-3650	; 0xfffff1be
     78c:	41018e02 	tstmi	r1, r2, lsl #28
     790:	0a51100e 	beq	14447d0 <__RAM_SIZE+0x13447d0>
     794:	0b41080e 	bleq	10427d4 <__RAM_SIZE+0xf427d4>
     798:	c4000e44 	strgt	r0, [r0], #-3652	; 0xfffff1bc
     79c:	100e42ce 	andne	r4, lr, lr, asr #5
     7a0:	018e0284 	orreq	r0, lr, r4, lsl #5
     7a4:	0000000c 	andeq	r0, r0, ip
     7a8:	00000668 	andeq	r0, r0, r8, ror #12
     7ac:	00000000 	andeq	r0, r0, r0
     7b0:	00000018 	andeq	r0, r0, r8, lsl r0
     7b4:	00000024 	andeq	r0, r0, r4, lsr #32
     7b8:	00000668 	andeq	r0, r0, r8, ror #12
     7bc:	00000000 	andeq	r0, r0, r0
     7c0:	00000056 	andeq	r0, r0, r6, asr r0
     7c4:	84140e41 	ldrhi	r0, [r4], #-3649	; 0xfffff1bf
     7c8:	86048505 	strhi	r8, [r4], -r5, lsl #10
     7cc:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
     7d0:	200e4101 	andcs	r4, lr, r1, lsl #2
     7d4:	140e0a64 	strne	r0, [lr], #-2660	; 0xfffff59c
     7d8:	00000b41 	andeq	r0, r0, r1, asr #22
     7dc:	00000028 	andeq	r0, r0, r8, lsr #32
     7e0:	00000668 	andeq	r0, r0, r8, ror #12
     7e4:	00000000 	andeq	r0, r0, r0
     7e8:	0000002a 	andeq	r0, r0, sl, lsr #32
     7ec:	84080e42 	strhi	r0, [r8], #-3650	; 0xfffff1be
     7f0:	41018e02 	tstmi	r1, r2, lsl #28
     7f4:	0e4d100e 	cdpeq	0, 4, cr1, cr13, cr14, {0}
     7f8:	42cec400 	sbcmi	ip, lr, #0, 8
     7fc:	0284100e 	addeq	r1, r4, #14
     800:	0e42018e 	dvfeqd	f0, f2, #0.5
     804:	00000008 	andeq	r0, r0, r8
     808:	00000020 	andeq	r0, r0, r0, lsr #32
     80c:	00000668 	andeq	r0, r0, r8, ror #12
     810:	00000000 	andeq	r0, r0, r0
     814:	00000020 	andeq	r0, r0, r0, lsr #32
     818:	84080e42 	strhi	r0, [r8], #-3650	; 0xfffff1be
     81c:	4a018e02 	bmi	6402c <__HEAP_SIZE+0x6302c>
     820:	cec4000e 	cdpgt	0, 12, cr0, cr4, cr14, {0}
     824:	84080e42 	strhi	r0, [r8], #-3650	; 0xfffff1be
     828:	00018e02 	andeq	r8, r1, r2, lsl #28
     82c:	00000024 	andeq	r0, r0, r4, lsr #32
     830:	00000668 	andeq	r0, r0, r8, ror #12
     834:	00000000 	andeq	r0, r0, r0
     838:	0000010c 	andeq	r0, r0, ip, lsl #2
     83c:	84140e41 	ldrhi	r0, [r4], #-3649	; 0xfffff1bf
     840:	86048505 	strhi	r8, [r4], -r5, lsl #10
     844:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
     848:	280e4101 	stmdacs	lr, {r0, r8, lr}
     84c:	140e0a59 	strne	r0, [lr], #-2649	; 0xfffff5a7
     850:	00000b41 	andeq	r0, r0, r1, asr #22
     854:	00000018 	andeq	r0, r0, r8, lsl r0
     858:	00000668 	andeq	r0, r0, r8, ror #12
     85c:	00000000 	andeq	r0, r0, r0
     860:	00000018 	andeq	r0, r0, r8, lsl r0
     864:	83080e42 	movwhi	r0, #36418	; 0x8e42
     868:	49018e02 	stmdbmi	r1, {r1, r9, sl, fp, pc}
     86c:	cec3000e 	cdpgt	0, 12, cr0, cr3, cr14, {0}
     870:	00000014 	andeq	r0, r0, r4, lsl r0
     874:	00000668 	andeq	r0, r0, r8, ror #12
     878:	00000000 	andeq	r0, r0, r0
     87c:	00000016 	andeq	r0, r0, r6, lsl r0
     880:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     884:	00018e02 	andeq	r8, r1, r2, lsl #28
     888:	0000001c 	andeq	r0, r0, ip, lsl r0
     88c:	00000668 	andeq	r0, r0, r8, ror #12
     890:	00000000 	andeq	r0, r0, r0
     894:	0000001e 	andeq	r0, r0, lr, lsl r0
     898:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     89c:	41018e02 	tstmi	r1, r2, lsl #28
     8a0:	0e4c100e 	cdpeq	0, 4, cr1, cr12, cr14, {0}
     8a4:	00000008 	andeq	r0, r0, r8
     8a8:	00000018 	andeq	r0, r0, r8, lsl r0
     8ac:	00000668 	andeq	r0, r0, r8, ror #12
     8b0:	00000000 	andeq	r0, r0, r0
     8b4:	0000002c 	andeq	r0, r0, ip, lsr #32
     8b8:	83100e41 	tsthi	r0, #1040	; 0x410
     8bc:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     8c0:	00018e02 	andeq	r8, r1, r2, lsl #28
     8c4:	00000020 	andeq	r0, r0, r0, lsr #32
     8c8:	00000668 	andeq	r0, r0, r8, ror #12
     8cc:	00000000 	andeq	r0, r0, r0
     8d0:	000000bc 	strheq	r0, [r0], -ip
     8d4:	84200e42 	strthi	r0, [r0], #-3650	; 0xfffff1be
     8d8:	86078508 	strhi	r8, [r7], -r8, lsl #10
     8dc:	88058706 	stmdahi	r5, {r1, r2, r8, r9, sl, pc}
     8e0:	8a038904 	bhi	e2cf8 <__HEAP_SIZE+0xe1cf8>
     8e4:	00018e02 	andeq	r8, r1, r2, lsl #28
     8e8:	0000001c 	andeq	r0, r0, ip, lsl r0
     8ec:	00000668 	andeq	r0, r0, r8, ror #12
     8f0:	00000000 	andeq	r0, r0, r0
     8f4:	00000086 	andeq	r0, r0, r6, lsl #1
     8f8:	83180e41 	tsthi	r8, #1040	; 0x410
     8fc:	85058406 	strhi	r8, [r5, #-1030]	; 0xfffffbfa
     900:	87038604 	strhi	r8, [r3, -r4, lsl #12]
     904:	00018e02 	andeq	r8, r1, r2, lsl #28
     908:	00000024 	andeq	r0, r0, r4, lsr #32
     90c:	00000668 	andeq	r0, r0, r8, ror #12
     910:	10002138 	andne	r2, r0, r8, lsr r1
     914:	000000f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
     918:	84140e41 	ldrhi	r0, [r4], #-3649	; 0xfffff1bf
     91c:	86048505 	strhi	r8, [r4], -r5, lsl #10
     920:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
     924:	280e4101 	stmdacs	lr, {r0, r8, lr}
     928:	140e0a51 	strne	r0, [lr], #-2641	; 0xfffff5af
     92c:	00000b41 	andeq	r0, r0, r1, asr #22
     930:	00000020 	andeq	r0, r0, r0, lsr #32
     934:	00000668 	andeq	r0, r0, r8, ror #12
     938:	00000000 	andeq	r0, r0, r0
     93c:	00000126 	andeq	r0, r0, r6, lsr #2
     940:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
     944:	86038504 	strhi	r8, [r3], -r4, lsl #10
     948:	41018e02 	tstmi	r1, r2, lsl #28
     94c:	0a4f200e 	beq	13c898c <__RAM_SIZE+0x12c898c>
     950:	0b41100e 	bleq	1044990 <__RAM_SIZE+0xf44990>
     954:	00000018 	andeq	r0, r0, r8, lsl r0
     958:	00000668 	andeq	r0, r0, r8, ror #12
     95c:	00000000 	andeq	r0, r0, r0
     960:	0000002c 	andeq	r0, r0, ip, lsr #32
     964:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
     968:	86038504 	strhi	r8, [r3], -r4, lsl #10
     96c:	00018e02 	andeq	r8, r1, r2, lsl #28
     970:	00000020 	andeq	r0, r0, r0, lsr #32
     974:	00000668 	andeq	r0, r0, r8, ror #12
     978:	00000000 	andeq	r0, r0, r0
     97c:	000000f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
     980:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
     984:	86038504 	strhi	r8, [r3], -r4, lsl #10
     988:	41018e02 	tstmi	r1, r2, lsl #28
     98c:	0a51200e 	beq	14489cc <__RAM_SIZE+0x13489cc>
     990:	0b41100e 	bleq	10449d0 <__RAM_SIZE+0xf449d0>
     994:	00000020 	andeq	r0, r0, r0, lsr #32
     998:	00000668 	andeq	r0, r0, r8, ror #12
     99c:	00000000 	andeq	r0, r0, r0
     9a0:	00000080 	andeq	r0, r0, r0, lsl #1
     9a4:	83200e42 			; <UNDEFINED> instruction: 0x83200e42
     9a8:	85078408 	strhi	r8, [r7, #-1032]	; 0xfffffbf8
     9ac:	87058606 	strhi	r8, [r5, -r6, lsl #12]
     9b0:	89038804 	stmdbhi	r3, {r2, fp, pc}
     9b4:	00018e02 	andeq	r8, r1, r2, lsl #28
     9b8:	0000001c 	andeq	r0, r0, ip, lsl r0
     9bc:	00000668 	andeq	r0, r0, r8, ror #12
     9c0:	00000000 	andeq	r0, r0, r0
     9c4:	0000002c 	andeq	r0, r0, ip, lsr #32
     9c8:	83180e41 	tsthi	r8, #1040	; 0x410
     9cc:	85058406 	strhi	r8, [r5, #-1030]	; 0xfffffbfa
     9d0:	87038604 	strhi	r8, [r3, -r4, lsl #12]
     9d4:	00018e02 	andeq	r8, r1, r2, lsl #28
     9d8:	00000014 	andeq	r0, r0, r4, lsl r0
     9dc:	00000668 	andeq	r0, r0, r8, ror #12
     9e0:	00000000 	andeq	r0, r0, r0
     9e4:	00000012 	andeq	r0, r0, r2, lsl r0
     9e8:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     9ec:	00018e02 	andeq	r8, r1, r2, lsl #28
     9f0:	00000014 	andeq	r0, r0, r4, lsl r0
     9f4:	00000668 	andeq	r0, r0, r8, ror #12
     9f8:	00000000 	andeq	r0, r0, r0
     9fc:	00000016 	andeq	r0, r0, r6, lsl r0
     a00:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     a04:	00018e02 	andeq	r8, r1, r2, lsl #28
     a08:	0000000c 	andeq	r0, r0, ip
     a0c:	00000668 	andeq	r0, r0, r8, ror #12
     a10:	00000000 	andeq	r0, r0, r0
     a14:	00000004 	andeq	r0, r0, r4
     a18:	00000014 	andeq	r0, r0, r4, lsl r0
     a1c:	00000668 	andeq	r0, r0, r8, ror #12
     a20:	00000000 	andeq	r0, r0, r0
     a24:	00000010 	andeq	r0, r0, r0, lsl r0
     a28:	83080e41 	movwhi	r0, #36417	; 0x8e41
     a2c:	00018e02 	andeq	r8, r1, r2, lsl #28
     a30:	0000000c 	andeq	r0, r0, ip
     a34:	00000668 	andeq	r0, r0, r8, ror #12
     a38:	00000000 	andeq	r0, r0, r0
     a3c:	00000004 	andeq	r0, r0, r4
     a40:	0000000c 	andeq	r0, r0, ip
     a44:	00000668 	andeq	r0, r0, r8, ror #12
     a48:	00000000 	andeq	r0, r0, r0
     a4c:	00000004 	andeq	r0, r0, r4
     a50:	0000000c 	andeq	r0, r0, ip
     a54:	00000668 	andeq	r0, r0, r8, ror #12
     a58:	00000000 	andeq	r0, r0, r0
     a5c:	0000000c 	andeq	r0, r0, ip
     a60:	0000000c 	andeq	r0, r0, ip
     a64:	00000668 	andeq	r0, r0, r8, ror #12
     a68:	00000000 	andeq	r0, r0, r0
     a6c:	00000010 	andeq	r0, r0, r0, lsl r0
     a70:	00000018 	andeq	r0, r0, r8, lsl r0
     a74:	00000668 	andeq	r0, r0, r8, ror #12
     a78:	10002228 	andne	r2, r0, r8, lsr #4
     a7c:	00000052 	andeq	r0, r0, r2, asr r0
     a80:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
     a84:	86038504 	strhi	r8, [r3], -r4, lsl #10
     a88:	00018e02 	andeq	r8, r1, r2, lsl #28
     a8c:	00000014 	andeq	r0, r0, r4, lsl r0
     a90:	00000668 	andeq	r0, r0, r8, ror #12
     a94:	00000000 	andeq	r0, r0, r0
     a98:	0000000c 	andeq	r0, r0, ip
     a9c:	83080e41 	movwhi	r0, #36417	; 0x8e41
     aa0:	00018e02 	andeq	r8, r1, r2, lsl #28
     aa4:	00000018 	andeq	r0, r0, r8, lsl r0
     aa8:	00000668 	andeq	r0, r0, r8, ror #12
     aac:	00000000 	andeq	r0, r0, r0
     ab0:	00000026 	andeq	r0, r0, r6, lsr #32
     ab4:	83100e41 	tsthi	r0, #1040	; 0x410
     ab8:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     abc:	00018e02 	andeq	r8, r1, r2, lsl #28
     ac0:	00000014 	andeq	r0, r0, r4, lsl r0
     ac4:	00000668 	andeq	r0, r0, r8, ror #12
     ac8:	00000000 	andeq	r0, r0, r0
     acc:	00000026 	andeq	r0, r0, r6, lsr #32
     ad0:	84080e46 	strhi	r0, [r8], #-3654	; 0xfffff1ba
     ad4:	00018e02 	andeq	r8, r1, r2, lsl #28
     ad8:	00000018 	andeq	r0, r0, r8, lsl r0
     adc:	00000668 	andeq	r0, r0, r8, ror #12
     ae0:	00000000 	andeq	r0, r0, r0
     ae4:	00000018 	andeq	r0, r0, r8, lsl r0
     ae8:	8e040e41 	cdphi	14, 0, cr0, cr4, cr1, {2}
     aec:	100e4101 	andne	r4, lr, r1, lsl #2
     af0:	00040e48 	andeq	r0, r4, r8, asr #28
     af4:	00000018 	andeq	r0, r0, r8, lsl r0
     af8:	00000668 	andeq	r0, r0, r8, ror #12
     afc:	00000000 	andeq	r0, r0, r0
     b00:	00000016 	andeq	r0, r0, r6, lsl r0
     b04:	8e040e41 	cdphi	14, 0, cr0, cr4, cr1, {2}
     b08:	100e4101 	andne	r4, lr, r1, lsl #2
     b0c:	00040e47 	andeq	r0, r4, r7, asr #28
     b10:	0000000c 	andeq	r0, r0, ip
     b14:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     b18:	7c020001 	stcvc	0, cr0, [r2], {1}
     b1c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     b20:	0000000c 	andeq	r0, r0, ip
     b24:	00000b10 	andeq	r0, r0, r0, lsl fp
     b28:	00000000 	andeq	r0, r0, r0
     b2c:	00000044 	andeq	r0, r0, r4, asr #32
     b30:	0000000c 	andeq	r0, r0, ip
     b34:	00000b10 	andeq	r0, r0, r0, lsl fp
     b38:	1000227c 	andne	r2, r0, ip, ror r2
     b3c:	00000040 	andeq	r0, r0, r0, asr #32
     b40:	00000018 	andeq	r0, r0, r8, lsl r0
     b44:	00000b10 	andeq	r0, r0, r0, lsl fp
     b48:	00000000 	andeq	r0, r0, r0
     b4c:	0000003e 	andeq	r0, r0, lr, lsr r0
     b50:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
     b54:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
     b58:	00000001 	andeq	r0, r0, r1
     b5c:	0000000c 	andeq	r0, r0, ip
     b60:	00000b10 	andeq	r0, r0, r0, lsl fp
     b64:	00000000 	andeq	r0, r0, r0
     b68:	00000012 	andeq	r0, r0, r2, lsl r0
     b6c:	0000000c 	andeq	r0, r0, ip
     b70:	00000b10 	andeq	r0, r0, r0, lsl fp
     b74:	100022bc 			; <UNDEFINED> instruction: 0x100022bc
     b78:	00000028 	andeq	r0, r0, r8, lsr #32
     b7c:	00000020 	andeq	r0, r0, r0, lsr #32
     b80:	00000b10 	andeq	r0, r0, r0, lsl fp
     b84:	100022e4 	andne	r2, r0, r4, ror #5
     b88:	00000096 	muleq	r0, r6, r0
     b8c:	84200e42 	strthi	r0, [r0], #-3650	; 0xfffff1be
     b90:	86078508 	strhi	r8, [r7], -r8, lsl #10
     b94:	88058706 	stmdahi	r5, {r1, r2, r8, r9, sl, pc}
     b98:	8a038904 	bhi	e2fb0 <__HEAP_SIZE+0xe1fb0>
     b9c:	00018e02 	andeq	r8, r1, r2, lsl #28
     ba0:	00000028 	andeq	r0, r0, r8, lsr #32
     ba4:	00000b10 	andeq	r0, r0, r0, lsl fp
     ba8:	1000237a 	andne	r2, r0, sl, ror r3
     bac:	00000052 	andeq	r0, r0, r2, asr r0
     bb0:	841c0e42 	ldrhi	r0, [ip], #-3650	; 0xfffff1be
     bb4:	86068507 	strhi	r8, [r6], -r7, lsl #10
     bb8:	88048705 	stmdahi	r4, {r0, r2, r8, r9, sl, pc}
     bbc:	8e028903 	vmlahi.f16	s16, s4, s6	; <UNPREDICTABLE>
     bc0:	300e4101 	andcc	r4, lr, r1, lsl #2
     bc4:	1c0e0a60 			; <UNDEFINED> instruction: 0x1c0e0a60
     bc8:	00000b42 	andeq	r0, r0, r2, asr #22
     bcc:	00000018 	andeq	r0, r0, r8, lsl r0
     bd0:	00000b10 	andeq	r0, r0, r0, lsl fp
     bd4:	100023cc 	andne	r2, r0, ip, asr #7
     bd8:	00000068 	andeq	r0, r0, r8, rrx
     bdc:	83100e41 	tsthi	r0, #1040	; 0x410
     be0:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     be4:	00018e02 	andeq	r8, r1, r2, lsl #28
     be8:	00000014 	andeq	r0, r0, r4, lsl r0
     bec:	00000b10 	andeq	r0, r0, r0, lsl fp
     bf0:	10002434 	andne	r2, r0, r4, lsr r4
     bf4:	000000bc 	strheq	r0, [r0], -ip
     bf8:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     bfc:	00018e02 	andeq	r8, r1, r2, lsl #28
     c00:	00000028 	andeq	r0, r0, r8, lsr #32
     c04:	00000b10 	andeq	r0, r0, r0, lsl fp
     c08:	100024f0 	strdne	r2, [r0], -r0
     c0c:	00000062 	andeq	r0, r0, r2, rrx
     c10:	841c0e42 	ldrhi	r0, [ip], #-3650	; 0xfffff1be
     c14:	86068507 	strhi	r8, [r6], -r7, lsl #10
     c18:	88048705 	stmdahi	r4, {r0, r2, r8, r9, sl, pc}
     c1c:	8e028903 	vmlahi.f16	s16, s4, s6	; <UNPREDICTABLE>
     c20:	300e4101 	andcc	r4, lr, r1, lsl #2
     c24:	1c0e0a66 			; <UNDEFINED> instruction: 0x1c0e0a66
     c28:	00000b42 	andeq	r0, r0, r2, asr #22
     c2c:	00000014 	andeq	r0, r0, r4, lsl r0
     c30:	00000b10 	andeq	r0, r0, r0, lsl fp
     c34:	10002552 	andne	r2, r0, r2, asr r5
     c38:	00000024 	andeq	r0, r0, r4, lsr #32
     c3c:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     c40:	00018e02 	andeq	r8, r1, r2, lsl #28
     c44:	00000018 	andeq	r0, r0, r8, lsl r0
     c48:	00000b10 	andeq	r0, r0, r0, lsl fp
     c4c:	10002578 	andne	r2, r0, r8, ror r5
     c50:	0000004c 	andeq	r0, r0, ip, asr #32
     c54:	84080e44 	strhi	r0, [r8], #-3652	; 0xfffff1bc
     c58:	5a018e02 	bpl	64468 <__HEAP_SIZE+0x63468>
     c5c:	cec4000e 	cdpgt	0, 12, cr0, cr4, cr14, {0}
     c60:	0000001c 	andeq	r0, r0, ip, lsl r0
     c64:	00000b10 	andeq	r0, r0, r0, lsl fp
     c68:	100025c4 	andne	r2, r0, r4, asr #11
     c6c:	000000a8 	andeq	r0, r0, r8, lsr #1
     c70:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
     c74:	86058506 	strhi	r8, [r5], -r6, lsl #10
     c78:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
     c7c:	00018e02 	andeq	r8, r1, r2, lsl #28
     c80:	0000001c 	andeq	r0, r0, ip, lsl r0
     c84:	00000b10 	andeq	r0, r0, r0, lsl fp
     c88:	1000266c 	andne	r2, r0, ip, ror #12
     c8c:	00000028 	andeq	r0, r0, r8, lsr #32
     c90:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     c94:	41018e02 	tstmi	r1, r2, lsl #28
     c98:	0e51200e 	cdpeq	0, 5, cr2, cr1, cr14, {0}
     c9c:	00000008 	andeq	r0, r0, r8
     ca0:	0000001c 	andeq	r0, r0, ip, lsl r0
     ca4:	00000b10 	andeq	r0, r0, r0, lsl fp
     ca8:	10002694 	mulne	r0, r4, r6
     cac:	00000022 	andeq	r0, r0, r2, lsr #32
     cb0:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     cb4:	41018e02 	tstmi	r1, r2, lsl #28
     cb8:	0a4b100e 	beq	12c4cf8 <__RAM_SIZE+0x11c4cf8>
     cbc:	0b41080e 	bleq	1042cfc <__RAM_SIZE+0xf42cfc>
     cc0:	00000018 	andeq	r0, r0, r8, lsl r0
     cc4:	00000b10 	andeq	r0, r0, r0, lsl fp
     cc8:	00000000 	andeq	r0, r0, r0
     ccc:	0000009c 	muleq	r0, ip, r0
     cd0:	83100e41 	tsthi	r0, #1040	; 0x410
     cd4:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     cd8:	00018e02 	andeq	r8, r1, r2, lsl #28
     cdc:	00000034 	andeq	r0, r0, r4, lsr r0
     ce0:	00000b10 	andeq	r0, r0, r0, lsl fp
     ce4:	00000000 	andeq	r0, r0, r0
     ce8:	0000009c 	muleq	r0, ip, r0
     cec:	84180e46 	ldrhi	r0, [r8], #-3654	; 0xfffff1ba
     cf0:	86058506 	strhi	r8, [r5], -r6, lsl #10
     cf4:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
     cf8:	6f018e02 	svcvs	0x00018e02
     cfc:	c5c4000e 	strbgt	r0, [r4, #14]
     d00:	cec8c7c6 	cdpgt	7, 12, cr12, cr8, cr6, {6}
     d04:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
     d08:	86058506 	strhi	r8, [r5], -r6, lsl #10
     d0c:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
     d10:	00018e02 	andeq	r8, r1, r2, lsl #28
     d14:	00000014 	andeq	r0, r0, r4, lsl r0
     d18:	00000b10 	andeq	r0, r0, r0, lsl fp
     d1c:	00000000 	andeq	r0, r0, r0
     d20:	00000020 	andeq	r0, r0, r0, lsr #32
     d24:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     d28:	00018e02 	andeq	r8, r1, r2, lsl #28
     d2c:	00000014 	andeq	r0, r0, r4, lsl r0
     d30:	00000b10 	andeq	r0, r0, r0, lsl fp
     d34:	00000000 	andeq	r0, r0, r0
     d38:	00000020 	andeq	r0, r0, r0, lsr #32
     d3c:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     d40:	00018e02 	andeq	r8, r1, r2, lsl #28
     d44:	00000014 	andeq	r0, r0, r4, lsl r0
     d48:	00000b10 	andeq	r0, r0, r0, lsl fp
     d4c:	00000000 	andeq	r0, r0, r0
     d50:	00000020 	andeq	r0, r0, r0, lsr #32
     d54:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     d58:	00018e02 	andeq	r8, r1, r2, lsl #28
     d5c:	00000014 	andeq	r0, r0, r4, lsl r0
     d60:	00000b10 	andeq	r0, r0, r0, lsl fp
     d64:	00000000 	andeq	r0, r0, r0
     d68:	00000020 	andeq	r0, r0, r0, lsr #32
     d6c:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     d70:	00018e02 	andeq	r8, r1, r2, lsl #28
     d74:	00000018 	andeq	r0, r0, r8, lsl r0
     d78:	00000b10 	andeq	r0, r0, r0, lsl fp
     d7c:	00000000 	andeq	r0, r0, r0
     d80:	000000d8 	ldrdeq	r0, [r0], -r8
     d84:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
     d88:	86038504 	strhi	r8, [r3], -r4, lsl #10
     d8c:	00018e02 	andeq	r8, r1, r2, lsl #28
     d90:	00000018 	andeq	r0, r0, r8, lsl r0
     d94:	00000b10 	andeq	r0, r0, r0, lsl fp
     d98:	00000000 	andeq	r0, r0, r0
     d9c:	00000084 	andeq	r0, r0, r4, lsl #1
     da0:	83100e41 	tsthi	r0, #1040	; 0x410
     da4:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     da8:	00018e02 	andeq	r8, r1, r2, lsl #28
     dac:	0000001c 	andeq	r0, r0, ip, lsl r0
     db0:	00000b10 	andeq	r0, r0, r0, lsl fp
     db4:	00000000 	andeq	r0, r0, r0
     db8:	000000ac 	andeq	r0, r0, ip, lsr #1
     dbc:	83180e41 	tsthi	r8, #1040	; 0x410
     dc0:	85058406 	strhi	r8, [r5, #-1030]	; 0xfffffbfa
     dc4:	87038604 	strhi	r8, [r3, -r4, lsl #12]
     dc8:	00018e02 	andeq	r8, r1, r2, lsl #28
     dcc:	00000014 	andeq	r0, r0, r4, lsl r0
     dd0:	00000b10 	andeq	r0, r0, r0, lsl fp
     dd4:	00000000 	andeq	r0, r0, r0
     dd8:	0000003c 	andeq	r0, r0, ip, lsr r0
     ddc:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     de0:	00018e02 	andeq	r8, r1, r2, lsl #28
     de4:	0000000c 	andeq	r0, r0, ip
     de8:	00000b10 	andeq	r0, r0, r0, lsl fp
     dec:	100026b8 			; <UNDEFINED> instruction: 0x100026b8
     df0:	00000010 	andeq	r0, r0, r0, lsl r0
     df4:	0000000c 	andeq	r0, r0, ip
     df8:	00000b10 	andeq	r0, r0, r0, lsl fp
     dfc:	100026c8 	andne	r2, r0, r8, asr #13
     e00:	0000000c 	andeq	r0, r0, ip
     e04:	0000000c 	andeq	r0, r0, ip
     e08:	00000b10 	andeq	r0, r0, r0, lsl fp
     e0c:	00000000 	andeq	r0, r0, r0
     e10:	0000000c 	andeq	r0, r0, ip
     e14:	0000000c 	andeq	r0, r0, ip
     e18:	00000b10 	andeq	r0, r0, r0, lsl fp
     e1c:	100026d4 	ldrdne	r2, [r0], -r4
     e20:	0000000c 	andeq	r0, r0, ip
     e24:	0000000c 	andeq	r0, r0, ip
     e28:	00000b10 	andeq	r0, r0, r0, lsl fp
     e2c:	00000000 	andeq	r0, r0, r0
     e30:	00000014 	andeq	r0, r0, r4, lsl r0
     e34:	0000000c 	andeq	r0, r0, ip
     e38:	00000b10 	andeq	r0, r0, r0, lsl fp
     e3c:	00000000 	andeq	r0, r0, r0
     e40:	00000034 	andeq	r0, r0, r4, lsr r0
     e44:	0000000c 	andeq	r0, r0, ip
     e48:	00000b10 	andeq	r0, r0, r0, lsl fp
     e4c:	00000000 	andeq	r0, r0, r0
     e50:	0000000c 	andeq	r0, r0, ip
     e54:	0000000c 	andeq	r0, r0, ip
     e58:	00000b10 	andeq	r0, r0, r0, lsl fp
     e5c:	00000000 	andeq	r0, r0, r0
     e60:	0000000c 	andeq	r0, r0, ip
     e64:	00000014 	andeq	r0, r0, r4, lsl r0
     e68:	00000b10 	andeq	r0, r0, r0, lsl fp
     e6c:	100026e0 	andne	r2, r0, r0, ror #13
     e70:	0000003c 	andeq	r0, r0, ip, lsr r0
     e74:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     e78:	00018e02 	andeq	r8, r1, r2, lsl #28
     e7c:	0000002c 	andeq	r0, r0, ip, lsr #32
     e80:	00000b10 	andeq	r0, r0, r0, lsl fp
     e84:	1000271c 	andne	r2, r0, ip, lsl r7
     e88:	00000160 	andeq	r0, r0, r0, ror #2
     e8c:	84100e46 	ldrhi	r0, [r0], #-3654	; 0xfffff1ba
     e90:	86038504 	strhi	r8, [r3], -r4, lsl #10
     e94:	02018e02 	andeq	r8, r1, #2, 28
     e98:	c4000e8c 	strgt	r0, [r0], #-3724	; 0xfffff174
     e9c:	46cec6c5 	strbmi	ip, [lr], r5, asr #13
     ea0:	0484100e 	streq	r1, [r4], #14
     ea4:	02860385 	addeq	r0, r6, #335544322	; 0x14000002
     ea8:	0000018e 	andeq	r0, r0, lr, lsl #3
     eac:	00000014 	andeq	r0, r0, r4, lsl r0
     eb0:	00000b10 	andeq	r0, r0, r0, lsl fp
     eb4:	1000287c 	andne	r2, r0, ip, ror r8
     eb8:	00000130 	andeq	r0, r0, r0, lsr r1
     ebc:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     ec0:	00018e02 	andeq	r8, r1, r2, lsl #28
     ec4:	00000018 	andeq	r0, r0, r8, lsl r0
     ec8:	00000b10 	andeq	r0, r0, r0, lsl fp
     ecc:	00000000 	andeq	r0, r0, r0
     ed0:	0000005c 	andeq	r0, r0, ip, asr r0
     ed4:	83100e41 	tsthi	r0, #1040	; 0x410
     ed8:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     edc:	00018e02 	andeq	r8, r1, r2, lsl #28
     ee0:	00000014 	andeq	r0, r0, r4, lsl r0
     ee4:	00000b10 	andeq	r0, r0, r0, lsl fp
     ee8:	100029ac 	andne	r2, r0, ip, lsr #19
     eec:	0000001e 	andeq	r0, r0, lr, lsl r0
     ef0:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     ef4:	00018e02 	andeq	r8, r1, r2, lsl #28
     ef8:	00000014 	andeq	r0, r0, r4, lsl r0
     efc:	00000b10 	andeq	r0, r0, r0, lsl fp
     f00:	100029cc 	andne	r2, r0, ip, asr #19
     f04:	00000038 	andeq	r0, r0, r8, lsr r0
     f08:	83080e41 	movwhi	r0, #36417	; 0x8e41
     f0c:	00018e02 	andeq	r8, r1, r2, lsl #28
     f10:	00000018 	andeq	r0, r0, r8, lsl r0
     f14:	00000b10 	andeq	r0, r0, r0, lsl fp
     f18:	00000000 	andeq	r0, r0, r0
     f1c:	0000007c 	andeq	r0, r0, ip, ror r0
     f20:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
     f24:	86038504 	strhi	r8, [r3], -r4, lsl #10
     f28:	00018e02 	andeq	r8, r1, r2, lsl #28
     f2c:	00000014 	andeq	r0, r0, r4, lsl r0
     f30:	00000b10 	andeq	r0, r0, r0, lsl fp
     f34:	00000000 	andeq	r0, r0, r0
     f38:	00000024 	andeq	r0, r0, r4, lsr #32
     f3c:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     f40:	00018e02 	andeq	r8, r1, r2, lsl #28
     f44:	00000018 	andeq	r0, r0, r8, lsl r0
     f48:	00000b10 	andeq	r0, r0, r0, lsl fp
     f4c:	00000000 	andeq	r0, r0, r0
     f50:	000000a4 	andeq	r0, r0, r4, lsr #1
     f54:	83100e41 	tsthi	r0, #1040	; 0x410
     f58:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     f5c:	00018e02 	andeq	r8, r1, r2, lsl #28
     f60:	00000018 	andeq	r0, r0, r8, lsl r0
     f64:	00000b10 	andeq	r0, r0, r0, lsl fp
     f68:	00000000 	andeq	r0, r0, r0
     f6c:	00000020 	andeq	r0, r0, r0, lsr #32
     f70:	83100e41 	tsthi	r0, #1040	; 0x410
     f74:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     f78:	00018e02 	andeq	r8, r1, r2, lsl #28
     f7c:	00000014 	andeq	r0, r0, r4, lsl r0
     f80:	00000b10 	andeq	r0, r0, r0, lsl fp
     f84:	00000000 	andeq	r0, r0, r0
     f88:	00000020 	andeq	r0, r0, r0, lsr #32
     f8c:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     f90:	00018e02 	andeq	r8, r1, r2, lsl #28
     f94:	00000014 	andeq	r0, r0, r4, lsl r0
     f98:	00000b10 	andeq	r0, r0, r0, lsl fp
     f9c:	00000000 	andeq	r0, r0, r0
     fa0:	00000020 	andeq	r0, r0, r0, lsr #32
     fa4:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     fa8:	00018e02 	andeq	r8, r1, r2, lsl #28
     fac:	00000014 	andeq	r0, r0, r4, lsl r0
     fb0:	00000b10 	andeq	r0, r0, r0, lsl fp
     fb4:	00000000 	andeq	r0, r0, r0
     fb8:	00000020 	andeq	r0, r0, r0, lsr #32
     fbc:	83080e41 	movwhi	r0, #36417	; 0x8e41
     fc0:	00018e02 	andeq	r8, r1, r2, lsl #28
     fc4:	0000000c 	andeq	r0, r0, ip
     fc8:	00000b10 	andeq	r0, r0, r0, lsl fp
     fcc:	10002a04 	andne	r2, r0, r4, lsl #20
     fd0:	00000084 	andeq	r0, r0, r4, lsl #1
     fd4:	00000018 	andeq	r0, r0, r8, lsl r0
     fd8:	00000b10 	andeq	r0, r0, r0, lsl fp
     fdc:	00000000 	andeq	r0, r0, r0
     fe0:	000000a4 	andeq	r0, r0, r4, lsr #1
     fe4:	83100e41 	tsthi	r0, #1040	; 0x410
     fe8:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     fec:	00018e02 	andeq	r8, r1, r2, lsl #28
     ff0:	00000014 	andeq	r0, r0, r4, lsl r0
     ff4:	00000b10 	andeq	r0, r0, r0, lsl fp
     ff8:	10002a88 	andne	r2, r0, r8, lsl #21
     ffc:	0000001c 	andeq	r0, r0, ip, lsl r0
    1000:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    1004:	00018e02 	andeq	r8, r1, r2, lsl #28
    1008:	00000018 	andeq	r0, r0, r8, lsl r0
    100c:	00000b10 	andeq	r0, r0, r0, lsl fp
    1010:	00000000 	andeq	r0, r0, r0
    1014:	00000040 	andeq	r0, r0, r0, asr #32
    1018:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    101c:	86038504 	strhi	r8, [r3], -r4, lsl #10
    1020:	00018e02 	andeq	r8, r1, r2, lsl #28
    1024:	00000018 	andeq	r0, r0, r8, lsl r0
    1028:	00000b10 	andeq	r0, r0, r0, lsl fp
    102c:	10002aa4 	andne	r2, r0, r4, lsr #21
    1030:	0000003c 	andeq	r0, r0, ip, lsr r0
    1034:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    1038:	86038504 	strhi	r8, [r3], -r4, lsl #10
    103c:	00018e02 	andeq	r8, r1, r2, lsl #28
    1040:	00000014 	andeq	r0, r0, r4, lsl r0
    1044:	00000b10 	andeq	r0, r0, r0, lsl fp
    1048:	10002ae0 	andne	r2, r0, r0, ror #21
    104c:	000000e4 	andeq	r0, r0, r4, ror #1
    1050:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    1054:	00018e02 	andeq	r8, r1, r2, lsl #28
    1058:	00000014 	andeq	r0, r0, r4, lsl r0
    105c:	00000b10 	andeq	r0, r0, r0, lsl fp
    1060:	00000000 	andeq	r0, r0, r0
    1064:	000000b8 	strheq	r0, [r0], -r8
    1068:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    106c:	00018e02 	andeq	r8, r1, r2, lsl #28
    1070:	00000014 	andeq	r0, r0, r4, lsl r0
    1074:	00000b10 	andeq	r0, r0, r0, lsl fp
    1078:	00000000 	andeq	r0, r0, r0
    107c:	00000024 	andeq	r0, r0, r4, lsr #32
    1080:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    1084:	00018e02 	andeq	r8, r1, r2, lsl #28
    1088:	0000000c 	andeq	r0, r0, ip
    108c:	00000b10 	andeq	r0, r0, r0, lsl fp
    1090:	10002bc4 	andne	r2, r0, r4, asr #23
    1094:	00000018 	andeq	r0, r0, r8, lsl r0
    1098:	0000001c 	andeq	r0, r0, ip, lsl r0
    109c:	00000b10 	andeq	r0, r0, r0, lsl fp
    10a0:	10002bdc 	ldrdne	r2, [r0], -ip
    10a4:	0000007c 	andeq	r0, r0, ip, ror r0
    10a8:	83180e41 	tsthi	r8, #1040	; 0x410
    10ac:	85058406 	strhi	r8, [r5, #-1030]	; 0xfffffbfa
    10b0:	87038604 	strhi	r8, [r3, -r4, lsl #12]
    10b4:	00018e02 	andeq	r8, r1, r2, lsl #28
    10b8:	0000000c 	andeq	r0, r0, ip
    10bc:	00000b10 	andeq	r0, r0, r0, lsl fp
    10c0:	10002c58 	andne	r2, r0, r8, asr ip
    10c4:	0000000c 	andeq	r0, r0, ip
    10c8:	0000000c 	andeq	r0, r0, ip
    10cc:	00000b10 	andeq	r0, r0, r0, lsl fp
    10d0:	10002c64 	andne	r2, r0, r4, ror #24
    10d4:	00000048 	andeq	r0, r0, r8, asr #32
    10d8:	00000014 	andeq	r0, r0, r4, lsl r0
    10dc:	00000b10 	andeq	r0, r0, r0, lsl fp
    10e0:	00000000 	andeq	r0, r0, r0
    10e4:	00000018 	andeq	r0, r0, r8, lsl r0
    10e8:	83080e41 	movwhi	r0, #36417	; 0x8e41
    10ec:	00018e02 	andeq	r8, r1, r2, lsl #28
    10f0:	0000000c 	andeq	r0, r0, ip
    10f4:	00000b10 	andeq	r0, r0, r0, lsl fp
    10f8:	00000000 	andeq	r0, r0, r0
    10fc:	0000000c 	andeq	r0, r0, ip
    1100:	0000000c 	andeq	r0, r0, ip
    1104:	00000b10 	andeq	r0, r0, r0, lsl fp
    1108:	00000000 	andeq	r0, r0, r0
    110c:	00000010 	andeq	r0, r0, r0, lsl r0
    1110:	0000000c 	andeq	r0, r0, ip
    1114:	00000b10 	andeq	r0, r0, r0, lsl fp
    1118:	00000000 	andeq	r0, r0, r0
    111c:	00000020 	andeq	r0, r0, r0, lsr #32
    1120:	0000002c 	andeq	r0, r0, ip, lsr #32
    1124:	00000b10 	andeq	r0, r0, r0, lsl fp
    1128:	00000000 	andeq	r0, r0, r0
    112c:	000000b8 	strheq	r0, [r0], -r8
    1130:	83100e43 	tsthi	r0, #1072	; 0x430
    1134:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    1138:	02018e02 	andeq	r8, r1, #2, 28
    113c:	c3000e4e 	movwgt	r0, #3662	; 0xe4e
    1140:	42cec5c4 	sbcmi	ip, lr, #196, 10	; 0x31000000
    1144:	0483100e 	streq	r1, [r3], #14
    1148:	02850384 	addeq	r0, r5, #132, 6	; 0x10000002
    114c:	0000018e 	andeq	r0, r0, lr, lsl #3
    1150:	0000002c 	andeq	r0, r0, ip, lsr #32
    1154:	00000b10 	andeq	r0, r0, r0, lsl fp
    1158:	10002cac 	andne	r2, r0, ip, lsr #25
    115c:	00000080 	andeq	r0, r0, r0, lsl #1
    1160:	83100e43 	tsthi	r0, #1072	; 0x430
    1164:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    1168:	74018e02 	strvc	r8, [r1], #-3586	; 0xfffff1fe
    116c:	c4c3000e 	strbgt	r0, [r3], #14
    1170:	0e42cec5 	cdpeq	14, 4, cr12, cr2, cr5, {6}
    1174:	84048310 	strhi	r8, [r4], #-784	; 0xfffffcf0
    1178:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
    117c:	00000001 	andeq	r0, r0, r1
    1180:	00000020 	andeq	r0, r0, r0, lsr #32
    1184:	00000b10 	andeq	r0, r0, r0, lsl fp
    1188:	00000000 	andeq	r0, r0, r0
    118c:	00000090 	muleq	r0, r0, r0
    1190:	83100e43 	tsthi	r0, #1072	; 0x430
    1194:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    1198:	7f018e02 	svcvc	0x00018e02
    119c:	c4c3000e 	strbgt	r0, [r3], #14
    11a0:	0000cec5 	andeq	ip, r0, r5, asr #29
    11a4:	0000000c 	andeq	r0, r0, ip
    11a8:	00000b10 	andeq	r0, r0, r0, lsl fp
    11ac:	00000000 	andeq	r0, r0, r0
    11b0:	00000018 	andeq	r0, r0, r8, lsl r0
    11b4:	0000000c 	andeq	r0, r0, ip
    11b8:	00000b10 	andeq	r0, r0, r0, lsl fp
    11bc:	00000000 	andeq	r0, r0, r0
    11c0:	00000014 	andeq	r0, r0, r4, lsl r0
    11c4:	00000018 	andeq	r0, r0, r8, lsl r0
    11c8:	00000b10 	andeq	r0, r0, r0, lsl fp
    11cc:	00000000 	andeq	r0, r0, r0
    11d0:	000000a8 	andeq	r0, r0, r8, lsr #1
    11d4:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    11d8:	86038504 	strhi	r8, [r3], -r4, lsl #10
    11dc:	00018e02 	andeq	r8, r1, r2, lsl #28
    11e0:	0000001c 	andeq	r0, r0, ip, lsl r0
    11e4:	00000b10 	andeq	r0, r0, r0, lsl fp
    11e8:	00000000 	andeq	r0, r0, r0
    11ec:	000000cc 	andeq	r0, r0, ip, asr #1
    11f0:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
    11f4:	86058506 	strhi	r8, [r5], -r6, lsl #10
    11f8:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
    11fc:	00018e02 	andeq	r8, r1, r2, lsl #28
    1200:	0000001c 	andeq	r0, r0, ip, lsl r0
    1204:	00000b10 	andeq	r0, r0, r0, lsl fp
    1208:	00000000 	andeq	r0, r0, r0
    120c:	0000011c 	andeq	r0, r0, ip, lsl r1
    1210:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
    1214:	86058506 	strhi	r8, [r5], -r6, lsl #10
    1218:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
    121c:	00018e02 	andeq	r8, r1, r2, lsl #28
    1220:	0000001c 	andeq	r0, r0, ip, lsl r0
    1224:	00000b10 	andeq	r0, r0, r0, lsl fp
    1228:	00000000 	andeq	r0, r0, r0
    122c:	00000158 	andeq	r0, r0, r8, asr r1
    1230:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
    1234:	86058506 	strhi	r8, [r5], -r6, lsl #10
    1238:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
    123c:	00018e02 	andeq	r8, r1, r2, lsl #28
    1240:	00000018 	andeq	r0, r0, r8, lsl r0
    1244:	00000b10 	andeq	r0, r0, r0, lsl fp
    1248:	00000000 	andeq	r0, r0, r0
    124c:	000000ec 	andeq	r0, r0, ip, ror #1
    1250:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    1254:	86038504 	strhi	r8, [r3], -r4, lsl #10
    1258:	00018e02 	andeq	r8, r1, r2, lsl #28
    125c:	00000018 	andeq	r0, r0, r8, lsl r0
    1260:	00000b10 	andeq	r0, r0, r0, lsl fp
    1264:	00000000 	andeq	r0, r0, r0
    1268:	00000038 	andeq	r0, r0, r8, lsr r0
    126c:	83100e41 	tsthi	r0, #1040	; 0x410
    1270:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    1274:	00018e02 	andeq	r8, r1, r2, lsl #28
    1278:	00000018 	andeq	r0, r0, r8, lsl r0
    127c:	00000b10 	andeq	r0, r0, r0, lsl fp
    1280:	00000000 	andeq	r0, r0, r0
    1284:	00000034 	andeq	r0, r0, r4, lsr r0
    1288:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    128c:	86038504 	strhi	r8, [r3], -r4, lsl #10
    1290:	00018e02 	andeq	r8, r1, r2, lsl #28
    1294:	0000000c 	andeq	r0, r0, ip
    1298:	00000b10 	andeq	r0, r0, r0, lsl fp
    129c:	10002d2c 	andne	r2, r0, ip, lsr #26
    12a0:	00000018 	andeq	r0, r0, r8, lsl r0
    12a4:	00000020 	andeq	r0, r0, r0, lsr #32
    12a8:	00000b10 	andeq	r0, r0, r0, lsl fp
    12ac:	10002d44 	andne	r2, r0, r4, asr #26
    12b0:	0000006c 	andeq	r0, r0, ip, rrx
    12b4:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
    12b8:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
    12bc:	300e4101 	andcc	r4, lr, r1, lsl #2
    12c0:	0c0e0a52 			; <UNDEFINED> instruction: 0x0c0e0a52
    12c4:	00000b41 	andeq	r0, r0, r1, asr #22
    12c8:	00000014 	andeq	r0, r0, r4, lsl r0
    12cc:	00000b10 	andeq	r0, r0, r0, lsl fp
    12d0:	10002db0 			; <UNDEFINED> instruction: 0x10002db0
    12d4:	00000048 	andeq	r0, r0, r8, asr #32
    12d8:	83080e41 	movwhi	r0, #36417	; 0x8e41
    12dc:	00018e02 	andeq	r8, r1, r2, lsl #28
    12e0:	0000000c 	andeq	r0, r0, ip
    12e4:	00000b10 	andeq	r0, r0, r0, lsl fp
    12e8:	10002df8 	strdne	r2, [r0], -r8
    12ec:	00000018 	andeq	r0, r0, r8, lsl r0
    12f0:	0000000c 	andeq	r0, r0, ip
    12f4:	00000b10 	andeq	r0, r0, r0, lsl fp
    12f8:	00000000 	andeq	r0, r0, r0
    12fc:	00000074 	andeq	r0, r0, r4, ror r0
    1300:	0000000c 	andeq	r0, r0, ip
    1304:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1308:	7c020001 	stcvc	0, cr0, [r2], {1}
    130c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1310:	0000000c 	andeq	r0, r0, ip
    1314:	00001300 	andeq	r1, r0, r0, lsl #6
    1318:	10002e10 	andne	r2, r0, r0, lsl lr
    131c:	00000020 	andeq	r0, r0, r0, lsr #32
    1320:	00000014 	andeq	r0, r0, r4, lsl r0
    1324:	00001300 	andeq	r1, r0, r0, lsl #6
    1328:	10002e30 	andne	r2, r0, r0, lsr lr
    132c:	00000048 	andeq	r0, r0, r8, asr #32
    1330:	83080e41 	movwhi	r0, #36417	; 0x8e41
    1334:	00018e02 	andeq	r8, r1, r2, lsl #28
    1338:	00000018 	andeq	r0, r0, r8, lsl r0
    133c:	00001300 	andeq	r1, r0, r0, lsl #6
    1340:	10002e78 	andne	r2, r0, r8, ror lr
    1344:	00000028 	andeq	r0, r0, r8, lsr #32
    1348:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    134c:	86038504 	strhi	r8, [r3], -r4, lsl #10
    1350:	00018e02 	andeq	r8, r1, r2, lsl #28
    1354:	00000018 	andeq	r0, r0, r8, lsl r0
    1358:	00001300 	andeq	r1, r0, r0, lsl #6
    135c:	10002ea0 	andne	r2, r0, r0, lsr #29
    1360:	00000040 	andeq	r0, r0, r0, asr #32
    1364:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    1368:	86038504 	strhi	r8, [r3], -r4, lsl #10
    136c:	00018e02 	andeq	r8, r1, r2, lsl #28
    1370:	00000014 	andeq	r0, r0, r4, lsl r0
    1374:	00001300 	andeq	r1, r0, r0, lsl #6
    1378:	10002ee0 	andne	r2, r0, r0, ror #29
    137c:	00000030 	andeq	r0, r0, r0, lsr r0
    1380:	83080e41 	movwhi	r0, #36417	; 0x8e41
    1384:	00018e02 	andeq	r8, r1, r2, lsl #28
    1388:	00000018 	andeq	r0, r0, r8, lsl r0
    138c:	00001300 	andeq	r1, r0, r0, lsl #6
    1390:	10002f10 	andne	r2, r0, r0, lsl pc
    1394:	0000002c 	andeq	r0, r0, ip, lsr #32
    1398:	83100e41 	tsthi	r0, #1040	; 0x410
    139c:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    13a0:	00018e02 	andeq	r8, r1, r2, lsl #28
    13a4:	00000020 	andeq	r0, r0, r0, lsr #32
    13a8:	00001300 	andeq	r1, r0, r0, lsl #6
    13ac:	10002f3c 	andne	r2, r0, ip, lsr pc
    13b0:	00000068 	andeq	r0, r0, r8, rrx
    13b4:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    13b8:	86038504 	strhi	r8, [r3], -r4, lsl #10
    13bc:	41018e02 	tstmi	r1, r2, lsl #28
    13c0:	0a5d180e 	beq	1747400 <__RAM_SIZE+0x1647400>
    13c4:	0b41100e 	bleq	1045404 <__RAM_SIZE+0xf45404>
    13c8:	0000001c 	andeq	r0, r0, ip, lsl r0
    13cc:	00001300 	andeq	r1, r0, r0, lsl #6
    13d0:	10002fa4 	andne	r2, r0, r4, lsr #31
    13d4:	000000f8 	strdeq	r0, [r0], -r8
    13d8:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
    13dc:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
    13e0:	280e4101 	stmdacs	lr, {r0, r8, lr}
    13e4:	0c0e7702 	stceq	7, cr7, [lr], {2}
    13e8:	00000014 	andeq	r0, r0, r4, lsl r0
    13ec:	00001300 	andeq	r1, r0, r0, lsl #6
    13f0:	1000309c 	mulne	r0, ip, r0
    13f4:	00000016 	andeq	r0, r0, r6, lsl r0
    13f8:	8e040e41 	cdphi	14, 0, cr0, cr4, cr1, {2}
    13fc:	100e4101 	andne	r4, lr, r1, lsl #2
    1400:	00000020 	andeq	r0, r0, r0, lsr #32
    1404:	00001300 	andeq	r1, r0, r0, lsl #6
    1408:	100030b4 	strhne	r3, [r0], -r4
    140c:	00000060 	andeq	r0, r0, r0, rrx
    1410:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
    1414:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
    1418:	180e4101 	stmdane	lr, {r0, r8, lr}
    141c:	0c0e0a48 			; <UNDEFINED> instruction: 0x0c0e0a48
    1420:	00000b41 	andeq	r0, r0, r1, asr #22
    1424:	0000001c 	andeq	r0, r0, ip, lsl r0
    1428:	00001300 	andeq	r1, r0, r0, lsl #6
    142c:	00000000 	andeq	r0, r0, r0
    1430:	00000036 	andeq	r0, r0, r6, lsr r0
    1434:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
    1438:	86058506 	strhi	r8, [r5], -r6, lsl #10
    143c:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
    1440:	00018e02 	andeq	r8, r1, r2, lsl #28
    1444:	0000001c 	andeq	r0, r0, ip, lsl r0
    1448:	00001300 	andeq	r1, r0, r0, lsl #6
    144c:	10003114 	andne	r3, r0, r4, lsl r1
    1450:	0000005c 	andeq	r0, r0, ip, asr r0
    1454:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    1458:	41018e02 	tstmi	r1, r2, lsl #28
    145c:	0e62280e 	cdpeq	8, 6, cr2, cr2, cr14, {0}
    1460:	00000008 	andeq	r0, r0, r8
    1464:	00000024 	andeq	r0, r0, r4, lsr #32
    1468:	00001300 	andeq	r1, r0, r0, lsl #6
    146c:	00000000 	andeq	r0, r0, r0
    1470:	00000038 	andeq	r0, r0, r8, lsr r0
    1474:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
    1478:	86058506 	strhi	r8, [r5], -r6, lsl #10
    147c:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
    1480:	41018e02 	tstmi	r1, r2, lsl #28
    1484:	0e57200e 	cdpeq	0, 5, cr2, cr7, cr14, {0}
    1488:	00000018 	andeq	r0, r0, r8, lsl r0
    148c:	0000001c 	andeq	r0, r0, ip, lsl r0
    1490:	00001300 	andeq	r1, r0, r0, lsl #6
    1494:	00000000 	andeq	r0, r0, r0
    1498:	00000020 	andeq	r0, r0, r0, lsr #32
    149c:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
    14a0:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
    14a4:	180e4101 	stmdane	lr, {r0, r8, lr}
    14a8:	000c0e4d 	andeq	r0, ip, sp, asr #28
    14ac:	00000020 	andeq	r0, r0, r0, lsr #32
    14b0:	00001300 	andeq	r1, r0, r0, lsl #6
    14b4:	00000000 	andeq	r0, r0, r0
    14b8:	0000004c 	andeq	r0, r0, ip, asr #32
    14bc:	8e040e44 	cdphi	14, 0, cr0, cr4, cr4, {2}
    14c0:	180e4101 	stmdane	lr, {r0, r8, lr}
    14c4:	040e0a47 	streq	r0, [lr], #-2631	; 0xfffff5b9
    14c8:	0e540b42 	vnmlaeq.f64	d16, d4, d2
    14cc:	0000ce00 	andeq	ip, r0, r0, lsl #28
    14d0:	0000001c 	andeq	r0, r0, ip, lsl r0
    14d4:	00001300 	andeq	r1, r0, r0, lsl #6
    14d8:	00000000 	andeq	r0, r0, r0
    14dc:	00000034 	andeq	r0, r0, r4, lsr r0
    14e0:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    14e4:	41018e02 	tstmi	r1, r2, lsl #28
    14e8:	0a4b180e 	beq	12c7528 <__RAM_SIZE+0x11c7528>
    14ec:	0b41080e 	bleq	104352c <__RAM_SIZE+0xf4352c>
    14f0:	0000000c 	andeq	r0, r0, ip
    14f4:	00001300 	andeq	r1, r0, r0, lsl #6
    14f8:	00000000 	andeq	r0, r0, r0
    14fc:	0000000c 	andeq	r0, r0, ip
    1500:	0000000c 	andeq	r0, r0, ip
    1504:	00001300 	andeq	r1, r0, r0, lsl #6
    1508:	00000000 	andeq	r0, r0, r0
    150c:	00000004 	andeq	r0, r0, r4
    1510:	00000018 	andeq	r0, r0, r8, lsl r0
    1514:	00001300 	andeq	r1, r0, r0, lsl #6
    1518:	00000000 	andeq	r0, r0, r0
    151c:	0000002c 	andeq	r0, r0, ip, lsr #32
    1520:	83100e41 	tsthi	r0, #1040	; 0x410
    1524:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    1528:	00018e02 	andeq	r8, r1, r2, lsl #28
    152c:	00000014 	andeq	r0, r0, r4, lsl r0
    1530:	00001300 	andeq	r1, r0, r0, lsl #6
    1534:	00000000 	andeq	r0, r0, r0
    1538:	00000020 	andeq	r0, r0, r0, lsr #32
    153c:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    1540:	00018e02 	andeq	r8, r1, r2, lsl #28
    1544:	00000014 	andeq	r0, r0, r4, lsl r0
    1548:	00001300 	andeq	r1, r0, r0, lsl #6
    154c:	00000000 	andeq	r0, r0, r0
    1550:	00000008 	andeq	r0, r0, r8
    1554:	83080e41 	movwhi	r0, #36417	; 0x8e41
    1558:	00018e02 	andeq	r8, r1, r2, lsl #28
    155c:	0000000c 	andeq	r0, r0, ip
    1560:	00001300 	andeq	r1, r0, r0, lsl #6
    1564:	00000000 	andeq	r0, r0, r0
    1568:	00000004 	andeq	r0, r0, r4
    156c:	0000000c 	andeq	r0, r0, ip
    1570:	00001300 	andeq	r1, r0, r0, lsl #6
    1574:	00000000 	andeq	r0, r0, r0
    1578:	00000014 	andeq	r0, r0, r4, lsl r0
    157c:	0000000c 	andeq	r0, r0, ip
    1580:	00001300 	andeq	r1, r0, r0, lsl #6
    1584:	00000000 	andeq	r0, r0, r0
    1588:	00000004 	andeq	r0, r0, r4
    158c:	00000014 	andeq	r0, r0, r4, lsl r0
    1590:	00001300 	andeq	r1, r0, r0, lsl #6
    1594:	00000000 	andeq	r0, r0, r0
    1598:	00000020 	andeq	r0, r0, r0, lsr #32
    159c:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    15a0:	00018e02 	andeq	r8, r1, r2, lsl #28
    15a4:	00000014 	andeq	r0, r0, r4, lsl r0
    15a8:	00001300 	andeq	r1, r0, r0, lsl #6
    15ac:	00000000 	andeq	r0, r0, r0
    15b0:	00000012 	andeq	r0, r0, r2, lsl r0
    15b4:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    15b8:	00018e02 	andeq	r8, r1, r2, lsl #28
    15bc:	00000018 	andeq	r0, r0, r8, lsl r0
    15c0:	00001300 	andeq	r1, r0, r0, lsl #6
    15c4:	00000000 	andeq	r0, r0, r0
    15c8:	00000012 	andeq	r0, r0, r2, lsl r0
    15cc:	83100e41 	tsthi	r0, #1040	; 0x410
    15d0:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    15d4:	00018e02 	andeq	r8, r1, r2, lsl #28
    15d8:	0000001c 	andeq	r0, r0, ip, lsl r0
    15dc:	00001300 	andeq	r1, r0, r0, lsl #6
    15e0:	00000000 	andeq	r0, r0, r0
    15e4:	00000028 	andeq	r0, r0, r8, lsr #32
    15e8:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    15ec:	41018e02 	tstmi	r1, r2, lsl #28
    15f0:	0e4f180e 	cdpeq	8, 4, cr1, cr15, cr14, {0}
    15f4:	00000008 	andeq	r0, r0, r8
    15f8:	0000001c 	andeq	r0, r0, ip, lsl r0
    15fc:	00001300 	andeq	r1, r0, r0, lsl #6
    1600:	00000000 	andeq	r0, r0, r0
    1604:	00000028 	andeq	r0, r0, r8, lsr #32
    1608:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    160c:	41018e02 	tstmi	r1, r2, lsl #28
    1610:	0e4f180e 	cdpeq	8, 4, cr1, cr15, cr14, {0}
    1614:	00000008 	andeq	r0, r0, r8
    1618:	0000000c 	andeq	r0, r0, ip
    161c:	00001300 	andeq	r1, r0, r0, lsl #6
    1620:	00000000 	andeq	r0, r0, r0
    1624:	00000014 	andeq	r0, r0, r4, lsl r0
    1628:	0000000c 	andeq	r0, r0, ip
    162c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1630:	7c020001 	stcvc	0, cr0, [r2], {1}
    1634:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1638:	0000000c 	andeq	r0, r0, ip
    163c:	00001628 	andeq	r1, r0, r8, lsr #12
    1640:	10003170 	andne	r3, r0, r0, ror r1
    1644:	00000058 	andeq	r0, r0, r8, asr r0
    1648:	0000001c 	andeq	r0, r0, ip, lsl r0
    164c:	00001628 	andeq	r1, r0, r8, lsr #12
    1650:	100031c8 	andne	r3, r0, r8, asr #3
    1654:	00000064 	andeq	r0, r0, r4, rrx
    1658:	84040e5a 	strhi	r0, [r4], #-3674	; 0xfffff1a6
    165c:	c40a4f01 	strgt	r4, [sl], #-3841	; 0xfffff0ff
    1660:	0b41000e 	bleq	10416a0 <__RAM_SIZE+0xf416a0>
    1664:	c4000e42 	strgt	r0, [r0], #-3650	; 0xfffff1be
    1668:	00000018 	andeq	r0, r0, r8, lsl r0
    166c:	00001628 	andeq	r1, r0, r8, lsr #12
    1670:	1000322c 	andne	r3, r0, ip, lsr #4
    1674:	000000d4 	ldrdeq	r0, [r0], -r4
    1678:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    167c:	86038504 	strhi	r8, [r3], -r4, lsl #10
    1680:	00018e02 	andeq	r8, r1, r2, lsl #28
    1684:	00000020 	andeq	r0, r0, r0, lsr #32
    1688:	00001628 	andeq	r1, r0, r8, lsr #12
    168c:	10003300 	andne	r3, r0, r0, lsl #6
    1690:	00000050 	andeq	r0, r0, r0, asr r0
    1694:	83100e42 	tsthi	r0, #1056	; 0x420
    1698:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    169c:	61018e02 	tstvs	r1, r2, lsl #28
    16a0:	c4c3000e 	strbgt	r0, [r3], #14
    16a4:	0000cec5 	andeq	ip, r0, r5, asr #29
    16a8:	0000000c 	andeq	r0, r0, ip
    16ac:	00001628 	andeq	r1, r0, r8, lsr #12
    16b0:	00000000 	andeq	r0, r0, r0
    16b4:	0000000c 	andeq	r0, r0, ip
    16b8:	0000000c 	andeq	r0, r0, ip
    16bc:	00001628 	andeq	r1, r0, r8, lsr #12
    16c0:	00000000 	andeq	r0, r0, r0
    16c4:	0000000c 	andeq	r0, r0, ip
    16c8:	0000000c 	andeq	r0, r0, ip
    16cc:	00001628 	andeq	r1, r0, r8, lsr #12
    16d0:	00000000 	andeq	r0, r0, r0
    16d4:	00000002 	andeq	r0, r0, r2
    16d8:	00000018 	andeq	r0, r0, r8, lsl r0
    16dc:	00001628 	andeq	r1, r0, r8, lsr #12
    16e0:	00000000 	andeq	r0, r0, r0
    16e4:	00000032 	andeq	r0, r0, r2, lsr r0
    16e8:	83100e41 	tsthi	r0, #1040	; 0x410
    16ec:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    16f0:	00018e02 	andeq	r8, r1, r2, lsl #28
    16f4:	0000001c 	andeq	r0, r0, ip, lsl r0
    16f8:	00001628 	andeq	r1, r0, r8, lsr #12
    16fc:	00000000 	andeq	r0, r0, r0
    1700:	00000080 	andeq	r0, r0, r0, lsl #1
    1704:	83180e41 	tsthi	r8, #1040	; 0x410
    1708:	85058406 	strhi	r8, [r5, #-1030]	; 0xfffffbfa
    170c:	87038604 	strhi	r8, [r3, -r4, lsl #12]
    1710:	00018e02 	andeq	r8, r1, r2, lsl #28
    1714:	0000000c 	andeq	r0, r0, ip
    1718:	00001628 	andeq	r1, r0, r8, lsr #12
    171c:	00000000 	andeq	r0, r0, r0
    1720:	0000002c 	andeq	r0, r0, ip, lsr #32
    1724:	0000000c 	andeq	r0, r0, ip
    1728:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    172c:	7c020001 	stcvc	0, cr0, [r2], {1}
    1730:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1734:	00000018 	andeq	r0, r0, r8, lsl r0
    1738:	00001724 	andeq	r1, r0, r4, lsr #14
    173c:	10003350 	andne	r3, r0, r0, asr r3
    1740:	00000018 	andeq	r0, r0, r8, lsl r0
    1744:	8e040e41 	cdphi	14, 0, cr0, cr4, cr1, {2}
    1748:	100e4101 	andne	r4, lr, r1, lsl #2
    174c:	00040e48 	andeq	r0, r4, r8, asr #28
    1750:	00000014 	andeq	r0, r0, r4, lsl r0
    1754:	00001724 	andeq	r1, r0, r4, lsr #14
    1758:	10003368 	andne	r3, r0, r8, ror #6
    175c:	00000114 	andeq	r0, r0, r4, lsl r1
    1760:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    1764:	00018e02 	andeq	r8, r1, r2, lsl #28
    1768:	0000000c 	andeq	r0, r0, ip
    176c:	00001724 	andeq	r1, r0, r4, lsr #14
    1770:	1000347c 	andne	r3, r0, ip, ror r4
    1774:	0000003c 	andeq	r0, r0, ip, lsr r0
    1778:	0000000c 	andeq	r0, r0, ip
    177c:	00001724 	andeq	r1, r0, r4, lsr #14
    1780:	100034b8 			; <UNDEFINED> instruction: 0x100034b8
    1784:	00000016 	andeq	r0, r0, r6, lsl r0
    1788:	00000014 	andeq	r0, r0, r4, lsl r0
    178c:	00001724 	andeq	r1, r0, r4, lsr #14
    1790:	100034d0 	ldrdne	r3, [r0], -r0
    1794:	0000001c 	andeq	r0, r0, ip, lsl r0
    1798:	83080e41 	movwhi	r0, #36417	; 0x8e41
    179c:	00018e02 	andeq	r8, r1, r2, lsl #28
    17a0:	00000014 	andeq	r0, r0, r4, lsl r0
    17a4:	00001724 	andeq	r1, r0, r4, lsr #14
    17a8:	100034ec 	andne	r3, r0, ip, ror #9
    17ac:	0000001c 	andeq	r0, r0, ip, lsl r0
    17b0:	83080e41 	movwhi	r0, #36417	; 0x8e41
    17b4:	00018e02 	andeq	r8, r1, r2, lsl #28
    17b8:	00000014 	andeq	r0, r0, r4, lsl r0
    17bc:	00001724 	andeq	r1, r0, r4, lsr #14
    17c0:	10003508 	andne	r3, r0, r8, lsl #10
    17c4:	00000022 	andeq	r0, r0, r2, lsr #32
    17c8:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    17cc:	00018e02 	andeq	r8, r1, r2, lsl #28
    17d0:	00000014 	andeq	r0, r0, r4, lsl r0
    17d4:	00001724 	andeq	r1, r0, r4, lsr #14
    17d8:	1000352a 	andne	r3, r0, sl, lsr #10
    17dc:	00000014 	andeq	r0, r0, r4, lsl r0
    17e0:	83080e41 	movwhi	r0, #36417	; 0x8e41
    17e4:	00018e02 	andeq	r8, r1, r2, lsl #28
    17e8:	00000018 	andeq	r0, r0, r8, lsl r0
    17ec:	00001724 	andeq	r1, r0, r4, lsr #14
    17f0:	10003540 	andne	r3, r0, r0, asr #10
    17f4:	00000090 	muleq	r0, r0, r0
    17f8:	84040e41 	strhi	r0, [r4], #-3649	; 0xfffff1bf
    17fc:	c4440201 	strbgt	r0, [r4], #-513	; 0xfffffdff
    1800:	0000000e 	andeq	r0, r0, lr
    1804:	00000014 	andeq	r0, r0, r4, lsl r0
    1808:	00001724 	andeq	r1, r0, r4, lsr #14
    180c:	100035d0 	ldrdne	r3, [r0], -r0
    1810:	00000040 	andeq	r0, r0, r0, asr #32
    1814:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    1818:	00018e02 	andeq	r8, r1, r2, lsl #28
    181c:	0000000c 	andeq	r0, r0, ip
    1820:	00001724 	andeq	r1, r0, r4, lsr #14
    1824:	00000000 	andeq	r0, r0, r0
    1828:	00000002 	andeq	r0, r0, r2
    182c:	0000000c 	andeq	r0, r0, ip
    1830:	00001724 	andeq	r1, r0, r4, lsr #14
    1834:	00000000 	andeq	r0, r0, r0
    1838:	0000000e 	andeq	r0, r0, lr
    183c:	0000000c 	andeq	r0, r0, ip
    1840:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1844:	7c020001 	stcvc	0, cr0, [r2], {1}
    1848:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    184c:	0000000c 	andeq	r0, r0, ip
    1850:	0000183c 	andeq	r1, r0, ip, lsr r8
    1854:	10003610 	andne	r3, r0, r0, lsl r6
    1858:	00000026 	andeq	r0, r0, r6, lsr #32
    185c:	0000000c 	andeq	r0, r0, ip
    1860:	0000183c 	andeq	r1, r0, ip, lsr r8
    1864:	00000000 	andeq	r0, r0, r0
    1868:	00000010 	andeq	r0, r0, r0, lsl r0
    186c:	0000000c 	andeq	r0, r0, ip
    1870:	0000183c 	andeq	r1, r0, ip, lsr r8
    1874:	00000000 	andeq	r0, r0, r0
    1878:	0000000e 	andeq	r0, r0, lr
    187c:	0000000c 	andeq	r0, r0, ip
    1880:	0000183c 	andeq	r1, r0, ip, lsr r8
    1884:	00000000 	andeq	r0, r0, r0
    1888:	0000000e 	andeq	r0, r0, lr
    188c:	0000000c 	andeq	r0, r0, ip
    1890:	0000183c 	andeq	r1, r0, ip, lsr r8
    1894:	1000363c 	andne	r3, r0, ip, lsr r6
    1898:	0000001a 	andeq	r0, r0, sl, lsl r0
    189c:	0000000c 	andeq	r0, r0, ip
    18a0:	0000183c 	andeq	r1, r0, ip, lsr r8
    18a4:	1000365c 	andne	r3, r0, ip, asr r6
    18a8:	00000016 	andeq	r0, r0, r6, lsl r0
    18ac:	0000000c 	andeq	r0, r0, ip
    18b0:	0000183c 	andeq	r1, r0, ip, lsr r8
    18b4:	10003672 	andne	r3, r0, r2, ror r6
    18b8:	0000000e 	andeq	r0, r0, lr
    18bc:	0000000c 	andeq	r0, r0, ip
    18c0:	0000183c 	andeq	r1, r0, ip, lsr r8
    18c4:	10003680 	andne	r3, r0, r0, lsl #13
    18c8:	00000044 	andeq	r0, r0, r4, asr #32
    18cc:	0000000c 	andeq	r0, r0, ip
    18d0:	0000183c 	andeq	r1, r0, ip, lsr r8
    18d4:	100036c8 	andne	r3, r0, r8, asr #13
    18d8:	00000012 	andeq	r0, r0, r2, lsl r0
    18dc:	0000000c 	andeq	r0, r0, ip
    18e0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    18e4:	7c020001 	stcvc	0, cr0, [r2], {1}
    18e8:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    18ec:	0000000c 	andeq	r0, r0, ip
    18f0:	000018dc 	ldrdeq	r1, [r0], -ip
    18f4:	100037b8 			; <UNDEFINED> instruction: 0x100037b8
    18f8:	0000000c 	andeq	r0, r0, ip
    18fc:	0000000c 	andeq	r0, r0, ip
    1900:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1904:	7c020001 	stcvc	0, cr0, [r2], {1}
    1908:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    190c:	00000018 	andeq	r0, r0, r8, lsl r0
    1910:	000018fc 	strdeq	r1, [r0], -ip
    1914:	100038b0 			; <UNDEFINED> instruction: 0x100038b0
    1918:	000000a4 	andeq	r0, r0, r4, lsr #1
    191c:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    1920:	86038504 	strhi	r8, [r3], -r4, lsl #10
    1924:	00018e02 	andeq	r8, r1, r2, lsl #28
    1928:	0000000c 	andeq	r0, r0, ip
    192c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1930:	7c020001 	stcvc	0, cr0, [r2], {1}
    1934:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1938:	0000000c 	andeq	r0, r0, ip
    193c:	00001928 	andeq	r1, r0, r8, lsr #18
    1940:	10003954 	andne	r3, r0, r4, asr r9
    1944:	00000014 	andeq	r0, r0, r4, lsl r0
    1948:	00000044 	andeq	r0, r0, r4, asr #32
    194c:	00001928 	andeq	r1, r0, r8, lsr #18
    1950:	00000000 	andeq	r0, r0, r0
    1954:	000000c8 	andeq	r0, r0, r8, asr #1
    1958:	83280e42 			; <UNDEFINED> instruction: 0x83280e42
    195c:	8509840a 	strhi	r8, [r9, #-1034]	; 0xfffffbf6
    1960:	87078608 	strhi	r8, [r7, -r8, lsl #12]
    1964:	89058806 	stmdbhi	r5, {r1, r2, fp, pc}
    1968:	8b038a04 	blhi	e4180 <__HEAP_SIZE+0xe3180>
    196c:	46018e02 	strmi	r8, [r1], -r2, lsl #28
    1970:	5005300e 	andpl	r3, r5, lr
    1974:	0b51050c 	bleq	1442dac <__RAM_SIZE+0x1342dac>
    1978:	50060a60 	andpl	r0, r6, r0, ror #20
    197c:	280e5106 	stmdacs	lr, {r1, r2, r8, ip, lr}
    1980:	cacbce43 	bgt	ff2f5294 <__StackTop+0xc71f5294>
    1984:	c6c7c8c9 	strbgt	ip, [r7], r9, asr #17
    1988:	0ec3c4c5 	cdpeq	4, 12, cr12, cr3, cr5, {6}
    198c:	000b4200 	andeq	r4, fp, r0, lsl #4
    1990:	0000000c 	andeq	r0, r0, ip
    1994:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1998:	7c020001 	stcvc	0, cr0, [r2], {1}
    199c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    19a0:	0000000c 	andeq	r0, r0, ip
    19a4:	00001990 	muleq	r0, r0, r9
    19a8:	10003968 	andne	r3, r0, r8, ror #18
    19ac:	0000000c 	andeq	r0, r0, ip
    19b0:	0000000c 	andeq	r0, r0, ip
    19b4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    19b8:	7c020001 	stcvc	0, cr0, [r2], {1}
    19bc:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    19c0:	00000020 	andeq	r0, r0, r0, lsr #32
    19c4:	000019b0 			; <UNDEFINED> instruction: 0x000019b0
    19c8:	10003974 	andne	r3, r0, r4, ror r9
    19cc:	0000002c 	andeq	r0, r0, ip, lsr #32
    19d0:	83100e41 	tsthi	r0, #1040	; 0x410
    19d4:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    19d8:	4f018e02 	svcmi	0x00018e02
    19dc:	c3c4c5ce 	bicgt	ip, r4, #864026624	; 0x33800000
    19e0:	0000000e 	andeq	r0, r0, lr
    19e4:	0000000c 	andeq	r0, r0, ip
    19e8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    19ec:	7c020001 	stcvc	0, cr0, [r2], {1}
    19f0:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    19f4:	0000000c 	andeq	r0, r0, ip
    19f8:	000019e4 	andeq	r1, r0, r4, ror #19
    19fc:	00000000 	andeq	r0, r0, r0
    1a00:	00000002 	andeq	r0, r0, r2
    1a04:	0000000c 	andeq	r0, r0, ip
    1a08:	000019e4 	andeq	r1, r0, r4, ror #19
    1a0c:	00000000 	andeq	r0, r0, r0
    1a10:	00000002 	andeq	r0, r0, r2
    1a14:	0000000c 	andeq	r0, r0, ip
    1a18:	000019e4 	andeq	r1, r0, r4, ror #19
    1a1c:	00000000 	andeq	r0, r0, r0
    1a20:	00000002 	andeq	r0, r0, r2
    1a24:	0000000c 	andeq	r0, r0, ip
    1a28:	000019e4 	andeq	r1, r0, r4, ror #19
    1a2c:	00000000 	andeq	r0, r0, r0
    1a30:	00000002 	andeq	r0, r0, r2
    1a34:	0000000c 	andeq	r0, r0, ip
    1a38:	000019e4 	andeq	r1, r0, r4, ror #19
    1a3c:	00000000 	andeq	r0, r0, r0
    1a40:	00000002 	andeq	r0, r0, r2
    1a44:	0000000c 	andeq	r0, r0, ip
    1a48:	000019e4 	andeq	r1, r0, r4, ror #19
    1a4c:	100039a0 	andne	r3, r0, r0, lsr #19
    1a50:	00000002 	andeq	r0, r0, r2
    1a54:	0000000c 	andeq	r0, r0, ip
    1a58:	000019e4 	andeq	r1, r0, r4, ror #19
    1a5c:	00000000 	andeq	r0, r0, r0
    1a60:	00000004 	andeq	r0, r0, r4
    1a64:	0000000c 	andeq	r0, r0, ip
    1a68:	000019e4 	andeq	r1, r0, r4, ror #19
    1a6c:	00000000 	andeq	r0, r0, r0
    1a70:	00000004 	andeq	r0, r0, r4
    1a74:	0000000c 	andeq	r0, r0, ip
    1a78:	000019e4 	andeq	r1, r0, r4, ror #19
    1a7c:	00000000 	andeq	r0, r0, r0
    1a80:	00000002 	andeq	r0, r0, r2
    1a84:	0000000c 	andeq	r0, r0, ip
    1a88:	000019e4 	andeq	r1, r0, r4, ror #19
    1a8c:	100039a4 	andne	r3, r0, r4, lsr #19
    1a90:	00000002 	andeq	r0, r0, r2
    1a94:	0000000c 	andeq	r0, r0, ip
    1a98:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1a9c:	7c020001 	stcvc	0, cr0, [r2], {1}
    1aa0:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1aa4:	00000020 	andeq	r0, r0, r0, lsr #32
    1aa8:	00001a94 	muleq	r0, r4, sl
    1aac:	100039a8 	andne	r3, r0, r8, lsr #19
    1ab0:	00000090 	muleq	r0, r0, r0
    1ab4:	84200e42 	strthi	r0, [r0], #-3650	; 0xfffff1be
    1ab8:	86078508 	strhi	r8, [r7], -r8, lsl #10
    1abc:	88058706 	stmdahi	r5, {r1, r2, r8, r9, sl, pc}
    1ac0:	8a038904 	bhi	e3ed8 <__HEAP_SIZE+0xe2ed8>
    1ac4:	00018e02 	andeq	r8, r1, r2, lsl #28
    1ac8:	0000000c 	andeq	r0, r0, ip
    1acc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1ad0:	7c020001 	stcvc	0, cr0, [r2], {1}
    1ad4:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1ad8:	00000024 	andeq	r0, r0, r4, lsr #32
    1adc:	00001ac8 	andeq	r1, r0, r8, asr #21
    1ae0:	00000000 	andeq	r0, r0, r0
    1ae4:	00000048 	andeq	r0, r0, r8, asr #32
    1ae8:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
    1aec:	86058506 	strhi	r8, [r5], -r6, lsl #10
    1af0:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
    1af4:	60018e02 	andvs	r8, r1, r2, lsl #28
    1af8:	c6c7c8ce 	strbgt	ip, [r7], lr, asr #17
    1afc:	000ec4c5 	andeq	ip, lr, r5, asr #9
    1b00:	00000028 	andeq	r0, r0, r8, lsr #32
    1b04:	00001ac8 	andeq	r1, r0, r8, asr #21
    1b08:	00000000 	andeq	r0, r0, r0
    1b0c:	00000090 	muleq	r0, r0, r0
    1b10:	84100e46 	ldrhi	r0, [r0], #-3654	; 0xfffff1ba
    1b14:	86038504 	strhi	r8, [r3], -r4, lsl #10
    1b18:	7c018e02 	stcvc	14, cr8, [r1], {2}
    1b1c:	c5c6ce0a 	strbgt	ip, [r6, #3594]	; 0xe0a
    1b20:	42000ec4 	andmi	r0, r0, #196, 28	; 0xc40
    1b24:	000e410b 	andeq	r4, lr, fp, lsl #2
    1b28:	cec6c5c4 	cdpgt	5, 12, cr12, cr6, cr4, {6}
    1b2c:	0000000c 	andeq	r0, r0, ip
    1b30:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1b34:	7c020001 	stcvc	0, cr0, [r2], {1}
    1b38:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1b3c:	0000001c 	andeq	r0, r0, ip, lsl r0
    1b40:	00001b2c 	andeq	r1, r0, ip, lsr #22
    1b44:	10003a38 	andne	r3, r0, r8, lsr sl
    1b48:	00000282 	andeq	r0, r0, r2, lsl #5
    1b4c:	0c0e470a 	stceq	7, cr4, [lr], {10}
    1b50:	02850384 	addeq	r0, r5, #132, 6	; 0x10000002
    1b54:	3a03018e 	bcc	c2194 <__HEAP_SIZE+0xc1194>
    1b58:	00000b01 	andeq	r0, r0, r1, lsl #22
    1b5c:	00000018 	andeq	r0, r0, r8, lsl r0
    1b60:	00001b2c 	andeq	r1, r0, ip, lsr #22
    1b64:	10003cbc 			; <UNDEFINED> instruction: 0x10003cbc
    1b68:	0000001e 	andeq	r0, r0, lr, lsl r0
    1b6c:	0c0e460a 	stceq	6, cr4, [lr], {10}
    1b70:	02850384 	addeq	r0, r5, #132, 6	; 0x10000002
    1b74:	0b49018e 	bleq	12421b4 <__RAM_SIZE+0x11421b4>
    1b78:	00000018 	andeq	r0, r0, r8, lsl r0
    1b7c:	00001b2c 	andeq	r1, r0, ip, lsr #22
    1b80:	10003cdc 	ldrdne	r3, [r0], -ip
    1b84:	00000022 	andeq	r0, r0, r2, lsr #32
    1b88:	0c0e460a 	stceq	6, cr4, [lr], {10}
    1b8c:	02850384 	addeq	r0, r5, #132, 6	; 0x10000002
    1b90:	0b4b018e 	bleq	12c21d0 <__RAM_SIZE+0x11c21d0>
    1b94:	00000018 	andeq	r0, r0, r8, lsl r0
    1b98:	00001b2c 	andeq	r1, r0, ip, lsr #22
    1b9c:	10003d00 	andne	r3, r0, r0, lsl #26
    1ba0:	00000042 	andeq	r0, r0, r2, asr #32
    1ba4:	0c0e5a0a 			; <UNDEFINED> instruction: 0x0c0e5a0a
    1ba8:	02850384 	addeq	r0, r5, #132, 6	; 0x10000002
    1bac:	0b47018e 	bleq	11c21ec <__RAM_SIZE+0x10c21ec>
    1bb0:	00000024 	andeq	r0, r0, r4, lsr #32
    1bb4:	00001b2c 	andeq	r1, r0, ip, lsr #22
    1bb8:	10003d44 	andne	r3, r0, r4, asr #26
    1bbc:	0000006a 	andeq	r0, r0, sl, rrx
    1bc0:	0e450a0a 	vmlaeq.f32	s1, s10, s20
    1bc4:	8503840c 	strhi	r8, [r3, #-1036]	; 0xfffffbf4
    1bc8:	43018e02 	movwmi	r8, #7682	; 0x1e02
    1bcc:	0c0e450b 	cfstr32eq	mvfx4, [lr], {11}
    1bd0:	02850384 	addeq	r0, r5, #132, 6	; 0x10000002
    1bd4:	0b68018e 	bleq	1a02214 <__RAM_SIZE+0x1902214>
    1bd8:	0000000c 	andeq	r0, r0, ip
    1bdc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1be0:	7c020001 	stcvc	0, cr0, [r2], {1}
    1be4:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1be8:	0000001c 	andeq	r0, r0, ip, lsl r0
    1bec:	00001bd8 	ldrdeq	r1, [r0], -r8
    1bf0:	10003db0 			; <UNDEFINED> instruction: 0x10003db0
    1bf4:	00000254 	andeq	r0, r0, r4, asr r2
    1bf8:	100e410a 	andne	r4, lr, sl, lsl #2
    1bfc:	03850484 	orreq	r0, r5, #132, 8	; 0x84000000
    1c00:	018e0286 	orreq	r0, lr, r6, lsl #5
    1c04:	0b012903 	bleq	4c018 <__HEAP_SIZE+0x4b018>
    1c08:	0000001c 	andeq	r0, r0, ip, lsl r0
    1c0c:	00001bd8 	ldrdeq	r1, [r0], -r8
    1c10:	10004004 	andne	r4, r0, r4
    1c14:	000001d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    1c18:	100e410a 	andne	r4, lr, sl, lsl #2
    1c1c:	03850484 	orreq	r0, r5, #132, 8	; 0x84000000
    1c20:	018e0286 	orreq	r0, lr, r6, lsl #5
    1c24:	000be702 	andeq	lr, fp, r2, lsl #14
    1c28:	0000000c 	andeq	r0, r0, ip
    1c2c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1c30:	7c020001 	stcvc	0, cr0, [r2], {1}
    1c34:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1c38:	0000001c 	andeq	r0, r0, ip, lsl r0
    1c3c:	00001c28 	andeq	r1, r0, r8, lsr #24
    1c40:	100041d4 	ldrdne	r4, [r0], -r4	; <UNPREDICTABLE>
    1c44:	0000008a 	andeq	r0, r0, sl, lsl #1
    1c48:	040e4c0a 	streq	r4, [lr], #-3082	; 0xfffff3f6
    1c4c:	0e410a4a 	vmlseq.f32	s1, s2, s20
    1c50:	520b5b00 	andpl	r5, fp, #0, 22
    1c54:	0b41000e 	bleq	1041c94 <__RAM_SIZE+0xf41c94>
    1c58:	00000018 	andeq	r0, r0, r8, lsl r0
    1c5c:	00001c28 	andeq	r1, r0, r8, lsr #24
    1c60:	10004260 	andne	r4, r0, r0, ror #4
    1c64:	00000020 	andeq	r0, r0, r0, lsr #32
    1c68:	080e490a 	stmdaeq	lr, {r1, r3, r8, fp, lr}
    1c6c:	018e0280 	orreq	r0, lr, r0, lsl #5
    1c70:	00000b47 	andeq	r0, r0, r7, asr #22
    1c74:	00000014 	andeq	r0, r0, r4, lsl r0
    1c78:	00001c28 	andeq	r1, r0, r8, lsr #24
    1c7c:	10004280 	andne	r4, r0, r0, lsl #5
    1c80:	00000012 	andeq	r0, r0, r2, lsl r0
    1c84:	080e420a 	stmdaeq	lr, {r1, r3, r9, lr}
    1c88:	0b47028e 	bleq	11c26c8 <__RAM_SIZE+0x10c26c8>
    1c8c:	00000014 	andeq	r0, r0, r4, lsl r0
    1c90:	00001c28 	andeq	r1, r0, r8, lsr #24
    1c94:	10004294 	mulne	r0, r4, r2
    1c98:	00000012 	andeq	r0, r0, r2, lsl r0
    1c9c:	080e420a 	stmdaeq	lr, {r1, r3, r9, lr}
    1ca0:	0b47028e 	bleq	11c26e0 <__RAM_SIZE+0x10c26e0>
    1ca4:	00000014 	andeq	r0, r0, r4, lsl r0
    1ca8:	00001c28 	andeq	r1, r0, r8, lsr #24
    1cac:	100042a8 	andne	r4, r0, r8, lsr #5
    1cb0:	00000012 	andeq	r0, r0, r2, lsl r0
    1cb4:	080e420a 	stmdaeq	lr, {r1, r3, r9, lr}
    1cb8:	0b47028e 	bleq	11c26f8 <__RAM_SIZE+0x10c26f8>
    1cbc:	00000014 	andeq	r0, r0, r4, lsl r0
    1cc0:	00001c28 	andeq	r1, r0, r8, lsr #24
    1cc4:	100042bc 			; <UNDEFINED> instruction: 0x100042bc
    1cc8:	00000012 	andeq	r0, r0, r2, lsl r0
    1ccc:	080e420a 	stmdaeq	lr, {r1, r3, r9, lr}
    1cd0:	0b47028e 	bleq	11c2710 <__RAM_SIZE+0x10c2710>
    1cd4:	00000014 	andeq	r0, r0, r4, lsl r0
    1cd8:	00001c28 	andeq	r1, r0, r8, lsr #24
    1cdc:	100042d0 	ldrdne	r4, [r0], -r0
    1ce0:	00000012 	andeq	r0, r0, r2, lsl r0
    1ce4:	080e420a 	stmdaeq	lr, {r1, r3, r9, lr}
    1ce8:	0b47028e 	bleq	11c2728 <__RAM_SIZE+0x10c2728>
    1cec:	0000000c 	andeq	r0, r0, ip
    1cf0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1cf4:	7c020001 	stcvc	0, cr0, [r2], {1}
    1cf8:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1cfc:	00000010 	andeq	r0, r0, r0, lsl r0
    1d00:	00001cec 	andeq	r1, r0, ip, ror #25
    1d04:	100042e4 	andne	r4, r0, r4, ror #5
    1d08:	0000004e 	andeq	r0, r0, lr, asr #32
    1d0c:	000b670a 	andeq	r6, fp, sl, lsl #14
    1d10:	0000000c 	andeq	r0, r0, ip
    1d14:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1d18:	7c020001 	stcvc	0, cr0, [r2], {1}
    1d1c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1d20:	00000010 	andeq	r0, r0, r0, lsl r0
    1d24:	00001d10 	andeq	r1, r0, r0, lsl sp
    1d28:	10004334 	andne	r4, r0, r4, lsr r3
    1d2c:	00000040 	andeq	r0, r0, r0, asr #32
    1d30:	000b600a 	andeq	r6, fp, sl
    1d34:	0000000c 	andeq	r0, r0, ip
    1d38:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1d3c:	7c020001 	stcvc	0, cr0, [r2], {1}
    1d40:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1d44:	00000018 	andeq	r0, r0, r8, lsl r0
    1d48:	00001d34 	andeq	r1, r0, r4, lsr sp
    1d4c:	10004374 	andne	r4, r0, r4, ror r3
    1d50:	00000030 	andeq	r0, r0, r0, lsr r0
    1d54:	8e100e50 	mrchi	14, 0, r0, cr0, cr0, {2}
    1d58:	0ece4703 	cdpeq	7, 12, cr4, cr14, cr3, {0}
    1d5c:	00000010 	andeq	r0, r0, r0, lsl r0
    1d60:	0000000c 	andeq	r0, r0, ip
    1d64:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1d68:	7c020001 	stcvc	0, cr0, [r2], {1}
    1d6c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1d70:	00000024 	andeq	r0, r0, r4, lsr #32
    1d74:	00001d60 	andeq	r1, r0, r0, ror #26
    1d78:	100043a4 	andne	r4, r0, r4, lsr #7
    1d7c:	000002ec 	andeq	r0, r0, ip, ror #5
    1d80:	84240e42 	strthi	r0, [r4], #-3650	; 0xfffff1be
    1d84:	86088509 	strhi	r8, [r8], -r9, lsl #10
    1d88:	88068707 	stmdahi	r6, {r0, r1, r2, r8, r9, sl, pc}
    1d8c:	8a048905 	bhi	1241a8 <__RAM_SIZE+0x241a8>
    1d90:	8e028b03 	vmlahi.f64	d8, d2, d3
    1d94:	00000001 	andeq	r0, r0, r1
    1d98:	0000000c 	andeq	r0, r0, ip
    1d9c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1da0:	7c020001 	stcvc	0, cr0, [r2], {1}
    1da4:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1da8:	0000000c 	andeq	r0, r0, ip
    1dac:	00001d98 	muleq	r0, r8, sp
    1db0:	10004690 	mulne	r0, r0, r6
    1db4:	00000012 	andeq	r0, r0, r2, lsl r0
    1db8:	00000020 	andeq	r0, r0, r0, lsr #32
    1dbc:	00001d98 	muleq	r0, r8, sp
    1dc0:	100046a4 	andne	r4, r0, r4, lsr #13
    1dc4:	00000060 	andeq	r0, r0, r0, rrx
    1dc8:	84200e42 	strthi	r0, [r0], #-3650	; 0xfffff1be
    1dcc:	86078508 	strhi	r8, [r7], -r8, lsl #10
    1dd0:	88058706 	stmdahi	r5, {r1, r2, r8, r9, sl, pc}
    1dd4:	8a038904 	bhi	e41ec <__HEAP_SIZE+0xe31ec>
    1dd8:	00018e02 	andeq	r8, r1, r2, lsl #28
    1ddc:	0000000c 	andeq	r0, r0, ip
    1de0:	00001d98 	muleq	r0, r8, sp
    1de4:	10004704 	andne	r4, r0, r4, lsl #14
    1de8:	00000028 	andeq	r0, r0, r8, lsr #32
    1dec:	0000002c 	andeq	r0, r0, ip, lsr #32
    1df0:	00001d98 	muleq	r0, r8, sp
    1df4:	1000472c 	andne	r4, r0, ip, lsr #14
    1df8:	0000009c 	muleq	r0, ip, r0
    1dfc:	840c0e42 	strhi	r0, [ip], #-3650	; 0xfffff1be
    1e00:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
    1e04:	180e4201 	stmdane	lr, {r0, r9, lr}
    1e08:	0c0e0a65 			; <UNDEFINED> instruction: 0x0c0e0a65
    1e0c:	0a440b41 	beq	1104b18 <__RAM_SIZE+0x1004b18>
    1e10:	0b410c0e 	bleq	1044e50 <__RAM_SIZE+0xf44e50>
    1e14:	0c0e0a50 			; <UNDEFINED> instruction: 0x0c0e0a50
    1e18:	00000b41 	andeq	r0, r0, r1, asr #22
    1e1c:	00000018 	andeq	r0, r0, r8, lsl r0
    1e20:	00001d98 	muleq	r0, r8, sp
    1e24:	100047c8 	andne	r4, r0, r8, asr #15
    1e28:	00000058 	andeq	r0, r0, r8, asr r0
    1e2c:	84080e43 	strhi	r0, [r8], #-3651	; 0xfffff1bd
    1e30:	67018e02 	strvs	r8, [r1, -r2, lsl #28]
    1e34:	000ec4ce 	andeq	ip, lr, lr, asr #9
    1e38:	0000000c 	andeq	r0, r0, ip
    1e3c:	00001d98 	muleq	r0, r8, sp
    1e40:	10004820 	andne	r4, r0, r0, lsr #16
    1e44:	00000004 	andeq	r0, r0, r4
    1e48:	0000000c 	andeq	r0, r0, ip
    1e4c:	00001d98 	muleq	r0, r8, sp
    1e50:	10004824 	andne	r4, r0, r4, lsr #16
    1e54:	0000000a 	andeq	r0, r0, sl
    1e58:	0000000c 	andeq	r0, r0, ip
    1e5c:	00001d98 	muleq	r0, r8, sp
    1e60:	10004830 	andne	r4, r0, r0, lsr r8
    1e64:	00000002 	andeq	r0, r0, r2
    1e68:	00000018 	andeq	r0, r0, r8, lsl r0
    1e6c:	00001d98 	muleq	r0, r8, sp
    1e70:	10004834 	andne	r4, r0, r4, lsr r8
    1e74:	0000003e 	andeq	r0, r0, lr, lsr r0
    1e78:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    1e7c:	86038504 	strhi	r8, [r3], -r4, lsl #10
    1e80:	00018e02 	andeq	r8, r1, r2, lsl #28
    1e84:	0000002c 	andeq	r0, r0, ip, lsr #32
    1e88:	00001d98 	muleq	r0, r8, sp
    1e8c:	10004874 	andne	r4, r0, r4, ror r8
    1e90:	000000da 	ldrdeq	r0, [r0], -sl
    1e94:	84200e42 	strthi	r0, [r0], #-3650	; 0xfffff1be
    1e98:	86078508 	strhi	r8, [r7], -r8, lsl #10
    1e9c:	88058706 	stmdahi	r5, {r1, r2, r8, r9, sl, pc}
    1ea0:	8a038904 	bhi	e42b8 <__HEAP_SIZE+0xe32b8>
    1ea4:	44018e02 	strmi	r8, [r1], #-3586	; 0xfffff1fe
    1ea8:	0207f00e 	andeq	pc, r7, #14
    1eac:	200e0a5b 	andcs	r0, lr, fp, asr sl
    1eb0:	00000b42 	andeq	r0, r0, r2, asr #22
    1eb4:	0000000c 	andeq	r0, r0, ip
    1eb8:	00001d98 	muleq	r0, r8, sp
    1ebc:	10004950 	andne	r4, r0, r0, asr r9
    1ec0:	00000004 	andeq	r0, r0, r4
    1ec4:	00000024 	andeq	r0, r0, r4, lsr #32
    1ec8:	00001d98 	muleq	r0, r8, sp
    1ecc:	10004954 	andne	r4, r0, r4, asr r9
    1ed0:	00000066 	andeq	r0, r0, r6, rrx
    1ed4:	84140e41 	ldrhi	r0, [r4], #-3649	; 0xfffff1bf
    1ed8:	86048505 	strhi	r8, [r4], -r5, lsl #10
    1edc:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
    1ee0:	f80e4201 			; <UNDEFINED> instruction: 0xf80e4201
    1ee4:	0e0a6603 	cfmadd32eq	mvax0, mvfx6, mvfx10, mvfx3
    1ee8:	000b4114 	andeq	r4, fp, r4, lsl r1
    1eec:	00000018 	andeq	r0, r0, r8, lsl r0
    1ef0:	00001d98 	muleq	r0, r8, sp
    1ef4:	100049bc 			; <UNDEFINED> instruction: 0x100049bc
    1ef8:	00000012 	andeq	r0, r0, r2, lsl r0
    1efc:	84040e41 	strhi	r0, [r4], #-3649	; 0xfffff1bf
    1f00:	0ec44701 	cdpeq	7, 12, cr4, cr4, cr1, {0}
    1f04:	00000000 	andeq	r0, r0, r0
    1f08:	00000018 	andeq	r0, r0, r8, lsl r0
    1f0c:	00001d98 	muleq	r0, r8, sp
    1f10:	100049d0 	ldrdne	r4, [r0], -r0
    1f14:	00000044 	andeq	r0, r0, r4, asr #32
    1f18:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    1f1c:	86038504 	strhi	r8, [r3], -r4, lsl #10
    1f20:	00018e02 	andeq	r8, r1, r2, lsl #28
    1f24:	0000000c 	andeq	r0, r0, ip
    1f28:	00001d98 	muleq	r0, r8, sp
    1f2c:	10004a14 	andne	r4, r0, r4, lsl sl
    1f30:	00000012 	andeq	r0, r0, r2, lsl r0
    1f34:	0000000c 	andeq	r0, r0, ip
    1f38:	00001d98 	muleq	r0, r8, sp
    1f3c:	10004a28 	andne	r4, r0, r8, lsr #20
    1f40:	00000002 	andeq	r0, r0, r2
    1f44:	0000000c 	andeq	r0, r0, ip
    1f48:	00001d98 	muleq	r0, r8, sp
    1f4c:	10004a2c 	andne	r4, r0, ip, lsr #20
    1f50:	0000000c 	andeq	r0, r0, ip
    1f54:	0000000c 	andeq	r0, r0, ip
    1f58:	00001d98 	muleq	r0, r8, sp
    1f5c:	10004a38 	andne	r4, r0, r8, lsr sl
    1f60:	00000034 	andeq	r0, r0, r4, lsr r0
    1f64:	0000001c 	andeq	r0, r0, ip, lsl r0
    1f68:	00001d98 	muleq	r0, r8, sp
    1f6c:	10004a6c 	andne	r4, r0, ip, ror #20
    1f70:	00000018 	andeq	r0, r0, r8, lsl r0
    1f74:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    1f78:	41018e02 	tstmi	r1, r2, lsl #28
    1f7c:	0e49180e 	cdpeq	8, 4, cr1, cr9, cr14, {0}
    1f80:	00000008 	andeq	r0, r0, r8
    1f84:	0000000c 	andeq	r0, r0, ip
    1f88:	00001d98 	muleq	r0, r8, sp
    1f8c:	10004a84 	andne	r4, r0, r4, lsl #21
    1f90:	00000034 	andeq	r0, r0, r4, lsr r0
    1f94:	0000001c 	andeq	r0, r0, ip, lsl r0
    1f98:	00001d98 	muleq	r0, r8, sp
    1f9c:	10004ab8 			; <UNDEFINED> instruction: 0x10004ab8
    1fa0:	00000018 	andeq	r0, r0, r8, lsl r0
    1fa4:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    1fa8:	41018e02 	tstmi	r1, r2, lsl #28
    1fac:	0e49180e 	cdpeq	8, 4, cr1, cr9, cr14, {0}
    1fb0:	00000008 	andeq	r0, r0, r8
    1fb4:	00000020 	andeq	r0, r0, r0, lsr #32
    1fb8:	00001d98 	muleq	r0, r8, sp
    1fbc:	10004ad0 	ldrdne	r4, [r0], -r0
    1fc0:	0000007c 	andeq	r0, r0, ip, ror r0
    1fc4:	84140e41 	ldrhi	r0, [r4], #-3649	; 0xfffff1bf
    1fc8:	86048505 	strhi	r8, [r4], -r5, lsl #10
    1fcc:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
    1fd0:	d00e4301 	andle	r4, lr, r1, lsl #6
    1fd4:	140e7904 	strne	r7, [lr], #-2308	; 0xfffff6fc
    1fd8:	00000030 	andeq	r0, r0, r0, lsr r0
    1fdc:	00001d98 	muleq	r0, r8, sp
    1fe0:	10004b4c 	andne	r4, r0, ip, asr #22
    1fe4:	000002c8 	andeq	r0, r0, r8, asr #5
    1fe8:	84240e42 	strthi	r0, [r4], #-3650	; 0xfffff1be
    1fec:	86088509 	strhi	r8, [r8], -r9, lsl #10
    1ff0:	88068707 	stmdahi	r6, {r0, r1, r2, r8, r9, sl, pc}
    1ff4:	8a048905 	bhi	124410 <__RAM_SIZE+0x24410>
    1ff8:	8e028b03 	vmlahi.f64	d8, d2, d3
    1ffc:	480e4201 	stmdami	lr, {r0, r9, lr}
    2000:	240e0a64 	strcs	r0, [lr], #-2660	; 0xfffff59c
    2004:	0a710b42 	beq	1c44d14 <__RAM_SIZE+0x1b44d14>
    2008:	0b42240e 	bleq	108b048 <__RAM_SIZE+0xf8b048>
    200c:	0000000c 	andeq	r0, r0, ip
    2010:	00001d98 	muleq	r0, r8, sp
    2014:	10004e14 	andne	r4, r0, r4, lsl lr
    2018:	00000004 	andeq	r0, r0, r4
    201c:	0000000c 	andeq	r0, r0, ip
    2020:	00001d98 	muleq	r0, r8, sp
    2024:	10004e18 	andne	r4, r0, r8, lsl lr
    2028:	00000004 	andeq	r0, r0, r4
    202c:	0000000c 	andeq	r0, r0, ip
    2030:	00001d98 	muleq	r0, r8, sp
    2034:	10004e1c 	andne	r4, r0, ip, lsl lr
    2038:	00000004 	andeq	r0, r0, r4
    203c:	0000003c 	andeq	r0, r0, ip, lsr r0
    2040:	00001d98 	muleq	r0, r8, sp
    2044:	10004e20 	andne	r4, r0, r0, lsr #28
    2048:	000002b4 			; <UNDEFINED> instruction: 0x000002b4
    204c:	841c0e42 	ldrhi	r0, [ip], #-3650	; 0xfffff1be
    2050:	86068507 	strhi	r8, [r6], -r7, lsl #10
    2054:	88048705 	stmdahi	r4, {r0, r2, r8, r9, sl, pc}
    2058:	8e028903 	vmlahi.f16	s16, s4, s6	; <UNPREDICTABLE>
    205c:	a80e4201 	stmdage	lr, {r0, r9, lr}
    2060:	0e0a7102 	adfeqe	f7, f2, f2
    2064:	6b0b421c 	blvs	2d28dc <__RAM_SIZE+0x1d28dc>
    2068:	421c0e0a 	andsmi	r0, ip, #10, 28	; 0xa0
    206c:	0a48020b 	beq	12028a0 <__RAM_SIZE+0x11028a0>
    2070:	0b421c0e 	bleq	10890b0 <__RAM_SIZE+0xf890b0>
    2074:	1c0e0a5f 			; <UNDEFINED> instruction: 0x1c0e0a5f
    2078:	00000b42 	andeq	r0, r0, r2, asr #22
    207c:	0000000c 	andeq	r0, r0, ip
    2080:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    2084:	7c020001 	stcvc	0, cr0, [r2], {1}
    2088:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    208c:	00000018 	andeq	r0, r0, r8, lsl r0
    2090:	0000207c 	andeq	r2, r0, ip, ror r0
    2094:	10005280 	andne	r5, r0, r0, lsl #5
    2098:	0000003c 	andeq	r0, r0, ip, lsr r0
    209c:	84040e4a 	strhi	r0, [r4], #-3658	; 0xfffff1b6
    20a0:	0ec44901 	vdiveq.f16	s9, s8, s2	; <UNPREDICTABLE>
    20a4:	00000000 	andeq	r0, r0, r0
    20a8:	0000001c 	andeq	r0, r0, ip, lsl r0
    20ac:	0000207c 	andeq	r2, r0, ip, ror r0
    20b0:	100052bc 			; <UNDEFINED> instruction: 0x100052bc
    20b4:	00000018 	andeq	r0, r0, r8, lsl r0
    20b8:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    20bc:	41018e02 	tstmi	r1, r2, lsl #28
    20c0:	0e49180e 	cdpeq	8, 4, cr1, cr9, cr14, {0}
    20c4:	00000008 	andeq	r0, r0, r8
    20c8:	0000000c 	andeq	r0, r0, ip
    20cc:	0000207c 	andeq	r2, r0, ip, ror r0
    20d0:	100052d4 	ldrdne	r5, [r0], -r4
    20d4:	00000002 	andeq	r0, r0, r2
    20d8:	00000028 	andeq	r0, r0, r8, lsr #32
    20dc:	0000207c 	andeq	r2, r0, ip, ror r0
    20e0:	100052d8 	ldrdne	r5, [r0], -r8
    20e4:	000002ca 	andeq	r0, r0, sl, asr #5
    20e8:	841c0e42 	ldrhi	r0, [ip], #-3650	; 0xfffff1be
    20ec:	86068507 	strhi	r8, [r6], -r7, lsl #10
    20f0:	88048705 	stmdahi	r4, {r0, r2, r8, r9, sl, pc}
    20f4:	8e028903 	vmlahi.f16	s16, s4, s6	; <UNPREDICTABLE>
    20f8:	300e4301 	andcc	r4, lr, r1, lsl #6
    20fc:	1c0e0a6a 			; <UNDEFINED> instruction: 0x1c0e0a6a
    2100:	00000b42 	andeq	r0, r0, r2, asr #22
    2104:	00000018 	andeq	r0, r0, r8, lsl r0
    2108:	0000207c 	andeq	r2, r0, ip, ror r0
    210c:	100055a4 	andne	r5, r0, r4, lsr #11
    2110:	00000030 	andeq	r0, r0, r0, lsr r0
    2114:	8e040e49 	cdphi	14, 0, cr0, cr4, cr9, {2}
    2118:	180e4101 	stmdane	lr, {r0, r8, lr}
    211c:	00040e4c 	andeq	r0, r4, ip, asr #28
    2120:	00000014 	andeq	r0, r0, r4, lsl r0
    2124:	0000207c 	andeq	r2, r0, ip, ror r0
    2128:	100055d4 	ldrdne	r5, [r0], -r4
    212c:	0000000a 	andeq	r0, r0, sl
    2130:	83080e41 	movwhi	r0, #36417	; 0x8e41
    2134:	00018e02 	andeq	r8, r1, r2, lsl #28
    2138:	00000014 	andeq	r0, r0, r4, lsl r0
    213c:	0000207c 	andeq	r2, r0, ip, ror r0
    2140:	100055e0 	andne	r5, r0, r0, ror #11
    2144:	00000012 	andeq	r0, r0, r2, lsl r0
    2148:	83080e41 	movwhi	r0, #36417	; 0x8e41
    214c:	00018e02 	andeq	r8, r1, r2, lsl #28
    2150:	00000014 	andeq	r0, r0, r4, lsl r0
    2154:	0000207c 	andeq	r2, r0, ip, ror r0
    2158:	00000000 	andeq	r0, r0, r0
    215c:	00000006 	andeq	r0, r0, r6
    2160:	83080e41 	movwhi	r0, #36417	; 0x8e41
    2164:	00018e02 	andeq	r8, r1, r2, lsl #28
    2168:	00000014 	andeq	r0, r0, r4, lsl r0
    216c:	0000207c 	andeq	r2, r0, ip, ror r0
    2170:	00000000 	andeq	r0, r0, r0
    2174:	00000006 	andeq	r0, r0, r6
    2178:	83080e41 	movwhi	r0, #36417	; 0x8e41
    217c:	00018e02 	andeq	r8, r1, r2, lsl #28
    2180:	0000000c 	andeq	r0, r0, ip
    2184:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    2188:	7c020001 	stcvc	0, cr0, [r2], {1}
    218c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    2190:	00000014 	andeq	r0, r0, r4, lsl r0
    2194:	00002180 	andeq	r2, r0, r0, lsl #3
    2198:	100055f8 	strdne	r5, [r0], -r8
    219c:	0000000e 	andeq	r0, r0, lr
    21a0:	83080e42 	movwhi	r0, #36418	; 0x8e42
    21a4:	00018e02 	andeq	r8, r1, r2, lsl #28
    21a8:	0000000c 	andeq	r0, r0, ip
    21ac:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    21b0:	7c020001 	stcvc	0, cr0, [r2], {1}
    21b4:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    21b8:	00000018 	andeq	r0, r0, r8, lsl r0
    21bc:	000021a8 	andeq	r2, r0, r8, lsr #3
    21c0:	00000000 	andeq	r0, r0, r0
    21c4:	00000030 	andeq	r0, r0, r0, lsr r0
    21c8:	83100e41 	tsthi	r0, #1040	; 0x410
    21cc:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    21d0:	00018e02 	andeq	r8, r1, r2, lsl #28
    21d4:	0000001c 	andeq	r0, r0, ip, lsl r0
    21d8:	000021a8 	andeq	r2, r0, r8, lsr #3
    21dc:	00000000 	andeq	r0, r0, r0
    21e0:	0000004c 	andeq	r0, r0, ip, asr #32
    21e4:	83180e42 	tsthi	r8, #1056	; 0x420
    21e8:	85058406 	strhi	r8, [r5, #-1030]	; 0xfffffbfa
    21ec:	87038604 	strhi	r8, [r3, -r4, lsl #12]
    21f0:	00018e02 	andeq	r8, r1, r2, lsl #28
    21f4:	00000024 	andeq	r0, r0, r4, lsr #32
    21f8:	000021a8 	andeq	r2, r0, r8, lsr #3
    21fc:	00000000 	andeq	r0, r0, r0
    2200:	00000056 	andeq	r0, r0, r6, asr r0
    2204:	83100e42 	tsthi	r0, #1056	; 0x420
    2208:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    220c:	5c018e02 	stcpl	14, cr8, [r1], {2}
    2210:	c4c5ce0a 	strbgt	ip, [r5], #3594	; 0xe0a
    2214:	42000ec3 	andmi	r0, r0, #3120	; 0xc30
    2218:	0000000b 	andeq	r0, r0, fp
    221c:	00000020 	andeq	r0, r0, r0, lsr #32
    2220:	000021a8 	andeq	r2, r0, r8, lsr #3
    2224:	00000000 	andeq	r0, r0, r0
    2228:	00000064 	andeq	r0, r0, r4, rrx
    222c:	83100e45 	tsthi	r0, #1104	; 0x450
    2230:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    2234:	6a018e02 	bvs	65a44 <__HEAP_SIZE+0x64a44>
    2238:	c4c3000e 	strbgt	r0, [r3], #14
    223c:	0000cec5 	andeq	ip, r0, r5, asr #29
    2240:	00000024 	andeq	r0, r0, r4, lsr #32
    2244:	000021a8 	andeq	r2, r0, r8, lsr #3
    2248:	10005608 	andne	r5, r0, r8, lsl #12
    224c:	0000005c 	andeq	r0, r0, ip, asr r0
    2250:	83100e41 	tsthi	r0, #1040	; 0x410
    2254:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    2258:	5d018e02 	stcpl	14, cr8, [r1, #-8]
    225c:	c4c5ce0a 	strbgt	ip, [r5], #3594	; 0xe0a
    2260:	42000ec3 	andmi	r0, r0, #3120	; 0xc30
    2264:	0000000b 	andeq	r0, r0, fp
    2268:	00000018 	andeq	r0, r0, r8, lsl r0
    226c:	000021a8 	andeq	r2, r0, r8, lsr #3
    2270:	00000000 	andeq	r0, r0, r0
    2274:	00000054 	andeq	r0, r0, r4, asr r0
    2278:	84100e43 	ldrhi	r0, [r0], #-3651	; 0xfffff1bd
    227c:	86038504 	strhi	r8, [r3], -r4, lsl #10
    2280:	00018e02 	andeq	r8, r1, r2, lsl #28
    2284:	00000018 	andeq	r0, r0, r8, lsl r0
    2288:	000021a8 	andeq	r2, r0, r8, lsr #3
    228c:	00000000 	andeq	r0, r0, r0
    2290:	00000038 	andeq	r0, r0, r8, lsr r0
    2294:	83100e41 	tsthi	r0, #1040	; 0x410
    2298:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    229c:	00018e02 	andeq	r8, r1, r2, lsl #28
    22a0:	00000018 	andeq	r0, r0, r8, lsl r0
    22a4:	000021a8 	andeq	r2, r0, r8, lsr #3
    22a8:	00000000 	andeq	r0, r0, r0
    22ac:	00000068 	andeq	r0, r0, r8, rrx
    22b0:	83100e41 	tsthi	r0, #1040	; 0x410
    22b4:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    22b8:	00018e02 	andeq	r8, r1, r2, lsl #28
    22bc:	0000000c 	andeq	r0, r0, ip
    22c0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    22c4:	7c020001 	stcvc	0, cr0, [r2], {1}
    22c8:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    22cc:	00000018 	andeq	r0, r0, r8, lsl r0
    22d0:	000022bc 			; <UNDEFINED> instruction: 0x000022bc
    22d4:	10005664 	andne	r5, r0, r4, ror #12
    22d8:	0000002c 	andeq	r0, r0, ip, lsr #32
    22dc:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    22e0:	86038504 	strhi	r8, [r3], -r4, lsl #10
    22e4:	00018e02 	andeq	r8, r1, r2, lsl #28
    22e8:	0000000c 	andeq	r0, r0, ip
    22ec:	000022bc 			; <UNDEFINED> instruction: 0x000022bc
    22f0:	10005690 	mulne	r0, r0, r6
    22f4:	00000004 	andeq	r0, r0, r4
